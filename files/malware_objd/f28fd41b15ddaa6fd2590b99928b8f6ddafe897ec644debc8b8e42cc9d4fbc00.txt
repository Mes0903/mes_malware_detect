
f28fd41b15ddaa6fd2590b99928b8f6ddafe897ec644debc8b8e42cc9d4fbc00.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x422014,0x420f98
  401013:	push   edi
  401014:	sub    DWORD PTR ds:0x420fb0,0x420e8e
  40101e:	push   0x424545
  401023:	xor    edi,edi
  401025:	and    DWORD PTR ds:0x420efc,0x110f
  40102f:	inc    edi
  401030:	push   edi
  401031:	sbb    DWORD PTR ds:0x420f08,0x51
  40103b:	push   edi
  40103c:	adc    DWORD PTR ds:0x422000,0x3888
  401046:	call   DWORD PTR ds:0x4247ed
  40104c:	test   eax,eax
  40104e:	mov    DWORD PTR ds:0x420e8a,0x96
  401058:	je     0x40106f
  40105e:	xor    eax,eax
  401060:	mov    DWORD PTR ds:0x420ef0,0x42a7
  40106a:	jmp    0x4020ba
  40106f:	push   esi
  401070:	sbb    DWORD PTR ds:0x420e96,ebx
  401076:	mov    esi,DWORD PTR ds:0x4247e9
  40107c:	push   0x8
  40107e:	and    DWORD PTR ds:0x420e96,0x420ef4
  401088:	push   0x424565
  40108d:	sbb    DWORD PTR ds:0x420fa8,0x2663
  401097:	call   esi
  401099:	mov    DWORD PTR ds:0x420f58,0x2539
  4010a3:	test   eax,eax
  4010a5:	mov    DWORD PTR ds:0x420f74,0x63dd
  4010af:	jne    0x401117
  4010b5:	push   0xc
  4010b7:	adc    DWORD PTR ds:0x420efc,0x422010
  4010c1:	push   0x424579
  4010c6:	call   esi
  4010c8:	sbb    DWORD PTR ds:0x422000,0x6696
  4010d2:	test   eax,eax
  4010d4:	jne    0x401117
  4010da:	xor    DWORD PTR ds:0x422010,0x3be2
  4010e4:	push   0x42458d
  4010e9:	adc    DWORD PTR ds:0x420fac,0x420fa0
  4010f3:	push   edi
  4010f4:	push   edi
  4010f5:	call   DWORD PTR ds:0x424819
  4010fb:	add    DWORD PTR ds:0x420e7e,0x14dc
  401105:	test   eax,eax
  401107:	mov    DWORD PTR ds:0x420f08,0x3170
  401111:	je     0x401128
  401117:	xor    eax,eax
  401119:	mov    DWORD PTR ds:0x422014,0x5c19
  401123:	jmp    0x4020b9
  401128:	sbb    esi,DWORD PTR ds:0x420e9a
  40112e:	mov    DWORD PTR [ebp-0x10],0x0
  401135:	and    edi,0x6e17
  40113b:	mov    eax,DWORD PTR [ebp-0x24]
  40113e:	mov    DWORD PTR [ebp-0x24],eax
  401141:	sub    esi,DWORD PTR ds:0x420fa0
  401147:	mov    ecx,0xf89c85b5
  40114c:	mov    DWORD PTR [ebp-0x8],ecx
  40114f:	sub    esi,DWORD PTR ds:0x420f00
  401155:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  40115c:	sbb    edx,DWORD PTR ds:0x420e92
  401162:	lea    eax,[ebp-0x38]
  401165:	mov    DWORD PTR [ebp-0x2c],eax
  401168:	adc    DWORD PTR ds:0x420f74,edi
  40116e:	lea    eax,[ebp-0x30]
  401171:	xor    esi,esi
  401173:	or     esi,DWORD PTR ds:0x420e9a
  401179:	and    DWORD PTR ds:0x420f64,esi
  40117f:	mov    DWORD PTR [ebp-0x1c],eax
  401182:	sbb    esi,eax
  401184:	mov    eax,ds:0x424435
  401189:	mov    edi,DWORD PTR ds:0x420f48
  40118f:	mov    edx,DWORD PTR ds:0x420f84
  401195:	sub    edx,edi
  401197:	sub    edi,DWORD PTR [edi+edx*1]
  40119a:	mov    eax,DWORD PTR [eax+0x1c8]
  4011a0:	mov    eax,DWORD PTR [eax]
  4011a2:	mov    edx,DWORD PTR [ebp-0x1c]
  4011a5:	movzx  edi,BYTE PTR ds:0x420fb4
  4011ac:	add    DWORD PTR ds:0x420e8a,edi
  4011b2:	mov    esi,0x7510896
  4011b7:	xor    eax,esi
  4011b9:	and    DWORD PTR ds:0x420fa0,0x420e96
  4011c3:	mov    edi,0x3272dd
  4011c8:	add    eax,edi
  4011ca:	mov    DWORD PTR [edx],eax
  4011cc:	mov    DWORD PTR ds:0x420ea2,0x7e11
  4011d6:	mov    eax,ds:0x424675
  4011db:	cmp    eax,0x312bc9f6
  4011e0:	mov    DWORD PTR ds:0x420fa4,0x3707
  4011ea:	jne    0x40133f
  4011f0:	mov    eax,DWORD PTR [ebp-0x8]
  4011f3:	mov    edx,DWORD PTR ds:0x424435
  4011f9:	mov    edx,DWORD PTR [edx+0x198]
  4011ff:	xor    eax,esi
  401201:	add    eax,edi
  401203:	add    DWORD PTR ds:0x422010,0x420eec
  40120d:	mov    DWORD PTR [edx],eax
  40120f:	and    DWORD PTR ds:0x42200c,0x0
  401219:	jmp    0x40122d
  40121e:	xor    edx,edx
  401220:	add    edx,DWORD PTR ds:0x42200c
  401226:	inc    edx
  401227:	mov    DWORD PTR ds:0x42200c,edx
  40122d:	cmp    DWORD PTR ds:0x42200c,0x12
  401234:	jae    0x401276
  40123a:	cmp    DWORD PTR ds:0x42200c,0x5
  401241:	jne    0x401255
  401247:	push   DWORD PTR [ebp-0x18]
  40124a:	push   0x450b
  40124f:	call   DWORD PTR ds:0x4247d5
  401255:	cmp    DWORD PTR ds:0x42200c,0x4
  40125c:	jne    0x401271
  401262:	xor    edx,edx
  401264:	add    edx,DWORD PTR ds:0x42200c
  40126a:	inc    edx
  40126b:	mov    DWORD PTR ds:0x42200c,edx
  401271:	jmp    0x40121e
  401276:	mov    eax,DWORD PTR [ebp-0x8]
  401279:	and    DWORD PTR ds:0x420f70,0x0
  401283:	mov    edx,DWORD PTR ds:0x420f70
  401289:	inc    edx
  40128a:	mov    DWORD PTR ds:0x420f70,edx
  401290:	cmp    DWORD PTR ds:0x420f70,0x7
  401297:	jne    0x4012b0
  40129d:	push   0x5d66
  4012a2:	push   0x420f60
  4012a7:	push   DWORD PTR [ebp-0x14]
  4012aa:	call   DWORD PTR ds:0x4247d9
  4012b0:	cmp    DWORD PTR ds:0x420f70,0x6
  4012b7:	jne    0x4012ca
  4012bd:	mov    edx,DWORD PTR ds:0x420f70
  4012c3:	inc    edx
  4012c4:	mov    DWORD PTR ds:0x420f70,edx
  4012ca:	cmp    DWORD PTR ds:0x420f70,0x14
  4012d1:	jb     0x401283
  4012d7:	and    edx,0x4d07
  4012dd:	xor    eax,esi
  4012df:	movzx  edx,BYTE PTR ds:0x420f08
  4012e6:	sub    edx,DWORD PTR ds:0x420fa0
  4012ec:	mov    DWORD PTR ds:0x420f08,edx
  4012f2:	add    eax,edi
  4012f4:	mov    DWORD PTR ds:0x422008,0x18
  4012fe:	cmp    DWORD PTR ds:0x422008,0x0
  401305:	je     0x40133a
  40130b:	cmp    DWORD PTR ds:0x422008,0x1d
  401312:	jne    0x401328
  401318:	push   0x42406a
  40131d:	push   0x424044
  401322:	call   DWORD PTR ds:0x4247dd
  401328:	mov    edx,DWORD PTR ds:0x422008
  40132e:	dec    edx
  40132f:	mov    DWORD PTR ds:0x422008,edx
  401335:	jmp    0x4012fe
  40133a:	mov    ds:0x424675,eax
  40133f:	mov    eax,ds:0x424435
  401344:	and    DWORD PTR ds:0x420ef4,0x0
  40134e:	mov    edx,DWORD PTR ds:0x420ef4
  401354:	inc    edx
  401355:	mov    DWORD PTR ds:0x420ef4,edx
  40135b:	cmp    DWORD PTR ds:0x420ef4,0x20
  401362:	jne    0x401379
  401368:	push   DWORD PTR [ebp-0x18]
  40136b:	push   0x222d
  401370:	push   DWORD PTR [ebp-0x28]
  401373:	call   DWORD PTR ds:0x4247e1
  401379:	cmp    DWORD PTR ds:0x420ef4,0x12
  401380:	jb     0x40134e
  401386:	mov    eax,DWORD PTR [eax+0x18c]
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	adc    DWORD PTR ds:0x422014,0x7308
  401398:	mov    DWORD PTR [ebp-0x68],eax
  40139b:	and    DWORD PTR ds:0x420e7e,0x0
  4013a5:	xor    eax,eax
  4013a7:	or     eax,DWORD PTR ds:0x420e7e
  4013ad:	inc    eax
  4013ae:	mov    ds:0x420e7e,eax
  4013b3:	cmp    DWORD PTR ds:0x420e7e,0xa
  4013ba:	jne    0x4013d1
  4013c0:	push   DWORD PTR [ebp-0x20]
  4013c3:	push   0x420f74
  4013c8:	push   DWORD PTR [ebp-0x28]
  4013cb:	call   DWORD PTR ds:0x4247e5
  4013d1:	cmp    DWORD PTR ds:0x420e7e,0x9
  4013d8:	jne    0x4013ec
  4013de:	xor    eax,eax
  4013e0:	xor    eax,DWORD PTR ds:0x420e7e
  4013e6:	inc    eax
  4013e7:	mov    ds:0x420e7e,eax
  4013ec:	cmp    DWORD PTR ds:0x420e7e,0x14
  4013f3:	jb     0x4013a5
  4013f9:	mov    DWORD PTR ds:0x420f04,0x16
  401403:	cmp    DWORD PTR ds:0x420f04,0x0
  40140a:	je     0x401438
  401410:	cmp    DWORD PTR ds:0x420f04,0x22
  401417:	jne    0x401423
  40141d:	call   DWORD PTR ds:0x4247f1
  401423:	xor    eax,eax
  401425:	or     eax,DWORD PTR ds:0x420f04
  40142b:	dec    eax
  40142c:	mov    ds:0x420f04,eax
  401431:	jmp    0x401403
  401436:	sub    edx,edx
  401438:	push   ebx
  401439:	or     eax,DWORD PTR ds:0x420f00
  40143f:	mov    ebx,0xf89c85b1
  401444:	and    DWORD PTR ds:0x420fa0,0x0
  40144e:	mov    edx,DWORD PTR ds:0x420fa0
  401454:	inc    edx
  401455:	mov    DWORD PTR ds:0x420fa0,edx
  40145b:	cmp    DWORD PTR ds:0x420fa0,0x8
  401462:	jne    0x40146e
  401468:	call   DWORD PTR ds:0x4247f5
  40146e:	cmp    DWORD PTR ds:0x420fa0,0x7
  401475:	jne    0x40148a
  40147b:	xor    edx,edx
  40147d:	xor    edx,DWORD PTR ds:0x420fa0
  401483:	inc    edx
  401484:	mov    DWORD PTR ds:0x420fa0,edx
  40148a:	cmp    DWORD PTR ds:0x420fa0,0x1e
  401491:	jb     0x40144e
  401497:	and    DWORD PTR ds:0x420e7a,0x0
  4014a1:	jmp    0x4014b3
  4014a6:	mov    edx,DWORD PTR ds:0x420e7a
  4014ac:	inc    edx
  4014ad:	mov    DWORD PTR ds:0x420e7a,edx
  4014b3:	cmp    DWORD PTR ds:0x420e7a,0x14
  4014ba:	jae    0x4014ff
  4014c0:	cmp    DWORD PTR ds:0x420e7a,0x1f
  4014c7:	jne    0x4014f0
  4014cd:	push   0x20c6
  4014d2:	push   DWORD PTR [ebp-0x10]
  4014d5:	push   0x420ea2
  4014da:	push   0x440c
  4014df:	push   DWORD PTR [ebp-0x20]
  4014e2:	push   0x7f92
  4014e7:	push   DWORD PTR [ebp-0x20]
  4014ea:	call   DWORD PTR ds:0x4247f9
  4014f0:	jmp    0x4014a6
  4014f5:	adc    DWORD PTR ds:0x420ea2,0x7cfc
  4014ff:	mov    DWORD PTR [ebp-0x10],ebx
  401502:	sub    DWORD PTR ds:0x420f5c,edi
  401508:	mov    DWORD PTR [ebp-0x10],ebx
  40150b:	mov    DWORD PTR ds:0x420f04,0x12
  401515:	cmp    DWORD PTR ds:0x420f04,0x0
  40151c:	je     0x40156b
  401522:	cmp    DWORD PTR ds:0x420f04,0x5
  401529:	jne    0x40153d
  40152f:	push   DWORD PTR [ebp-0x1c]
  401532:	push   0x424044
  401537:	call   DWORD PTR ds:0x4247fd
  40153d:	cmp    DWORD PTR ds:0x420f04,0x6
  401544:	jne    0x401557
  40154a:	mov    edx,DWORD PTR ds:0x420f04
  401550:	dec    edx
  401551:	mov    DWORD PTR ds:0x420f04,edx
  401557:	xor    edx,edx
  401559:	or     edx,DWORD PTR ds:0x420f04
  40155f:	dec    edx
  401560:	mov    DWORD PTR ds:0x420f04,edx
  401566:	jmp    0x401515
  40156b:	mov    DWORD PTR [ebp-0x10],ebx
  40156e:	and    DWORD PTR ds:0x422004,0x0
  401578:	jmp    0x40158c
  40157d:	xor    edx,edx
  40157f:	xor    edx,DWORD PTR ds:0x422004
  401585:	inc    edx
  401586:	mov    DWORD PTR ds:0x422004,edx
  40158c:	cmp    DWORD PTR ds:0x422004,0x12
  401593:	jae    0x4015bd
  401599:	cmp    DWORD PTR ds:0x422004,0x1e
  4015a0:	jne    0x4015b8
  4015a6:	push   0x424168
  4015ab:	push   0x1
  4015ad:	push   0x0
  4015af:	push   DWORD PTR [ebp-0x14]
  4015b2:	call   DWORD PTR ds:0x424801
  4015b8:	jmp    0x40157d
  4015bd:	mov    DWORD PTR [ebp-0x1c],ecx
  4015c0:	xor    edx,edx
  4015c2:	mov    DWORD PTR [ebp-0x10],ebx
  4015c5:	mov    DWORD PTR ds:0x420e96,0xb45
  4015cf:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4015d6:	and    DWORD PTR ds:0x422014,0x2ed5
  4015e0:	mov    eax,DWORD PTR [ebp-0x8]
  4015e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4015e6:	xor    edx,edx
  4015e8:	or     edx,DWORD PTR ds:0x420f60
  4015ee:	and    DWORD PTR ds:0x422000,edx
  4015f4:	mov    edx,DWORD PTR [ebp-0xc]
  4015f7:	sbb    DWORD PTR ds:0x420fa0,0x420fb4
  401601:	xor    edx,esi
  401603:	and    DWORD PTR ds:0x420f5c,0x420fa4
  40160d:	xor    ecx,esi
  40160f:	sub    DWORD PTR ds:0x422008,0x420f58
  401619:	add    ecx,edx
  40161b:	sbb    DWORD PTR ds:0x420e8e,edi
  401621:	mov    edx,DWORD PTR [ebp-0xc]
  401624:	xor    DWORD PTR ds:0x420f00,0x7b1e
  40162e:	xor    eax,esi
  401630:	xor    edx,esi
  401632:	or     DWORD PTR ds:0x420e9a,0x7d42
  40163c:	add    eax,edi
  40163e:	lea    ecx,[ecx+edx*1+0x975897]
  401645:	not    DWORD PTR ds:0x420f70
  40164b:	mov    DWORD PTR [ebp-0x18],eax
  40164e:	mov    DWORD PTR ds:0x420e7e,0x57b9
  401658:	cmp    eax,ecx
  40165a:	ja     0x40177e
  401660:	jmp    0x401678
  401665:	mov    eax,ds:0x420f30
  40166a:	mov    ecx,DWORD PTR ds:0x420f38
  401670:	sub    ecx,eax
  401672:	and    eax,DWORD PTR [eax+ecx*1]
  401675:	mov    eax,DWORD PTR [ebp-0x18]
  401678:	mov    ecx,DWORD PTR [ebp-0xc]
  40167b:	sub    DWORD PTR ds:0x422010,0x420f70
  401685:	xor    ecx,esi
  401687:	lea    eax,[ecx+eax*1+0x3272dd]
  40168e:	or     DWORD PTR ds:0x420f70,0x48c8
  401698:	push   eax
  401699:	sub    DWORD PTR ds:0x420e9e,0x506d
  4016a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4016a6:	and    DWORD PTR ds:0x420f5c,0x3822
  4016b0:	xor    eax,esi
  4016b2:	xor    DWORD PTR ds:0x420f74,0x420ef0
  4016bc:	lea    eax,[ebp+eax*1+0x3272e5]
  4016c3:	or     DWORD PTR ds:0x420ea2,0x420f60
  4016cd:	push   eax
  4016ce:	or     DWORD PTR ds:0x420f00,0x5827
  4016d8:	mov    eax,ds:0x424435
  4016dd:	and    DWORD PTR ds:0x420fb4,0x420fa4
  4016e7:	push   DWORD PTR [eax+0x1bc]
  4016ed:	xor    DWORD PTR ds:0x420f98,0x420ea2
  4016f7:	call   0x4020cd
  4016fc:	add    DWORD PTR ds:0x420f68,0x6b04
  401706:	mov    eax,DWORD PTR [ebp-0xc]
  401709:	or     edx,DWORD PTR ds:0x420ef0
  40170f:	mov    ecx,DWORD PTR [ebp-0x18]
  401712:	neg    edx
  401714:	xor    eax,esi
  401716:	sub    edx,0x4f8d
  40171c:	lea    eax,[ecx+eax*1+0x3272dd]
  401723:	mov    ecx,DWORD PTR [ebp-0xc]
  401726:	xor    edx,DWORD PTR ds:0x420e7a
  40172c:	mov    edx,DWORD PTR [ebp-0xc]
  40172f:	xor    edx,esi
  401731:	add    DWORD PTR ds:0x420ef4,0x420e9e
  40173b:	xor    ecx,esi
  40173d:	adc    DWORD PTR ds:0x420e82,0x420f5c
  401747:	add    ecx,edx
  401749:	mov    edx,DWORD PTR [ebp-0xc]
  40174c:	xor    edx,esi
  40174e:	lea    ecx,[ecx+edx*1+0x975897]
  401755:	mov    DWORD PTR ds:0x420e82,0x59f5
  40175f:	mov    DWORD PTR [ebp-0x18],eax
  401762:	mov    DWORD PTR ds:0x420f98,0x3280
  40176c:	cmp    eax,ecx
  40176e:	mov    DWORD PTR ds:0x420fb4,0x7b83
  401778:	jbe    0x401665
  40177e:	and    DWORD PTR ds:0x420f98,0x0
  401788:	mov    ecx,DWORD PTR ds:0x420f98
  40178e:	inc    ecx
  40178f:	mov    DWORD PTR ds:0x420f98,ecx
  401795:	cmp    DWORD PTR ds:0x420f98,0x1e
  40179c:	jne    0x4017b2
  4017a2:	push   0x420fa0
  4017a7:	push   0x4d18
  4017ac:	call   DWORD PTR ds:0x424805
  4017b2:	cmp    DWORD PTR ds:0x420f98,0x18
  4017b9:	jb     0x401788
  4017bf:	mov    eax,DWORD PTR [ebp+0xc]
  4017c2:	sbb    DWORD PTR ds:0x420e7a,edx
  4017c8:	mov    ds:0x4242b9,eax
  4017cd:	and    DWORD PTR ds:0x420f74,0x0
  4017d7:	mov    eax,ds:0x420f74
  4017dc:	inc    eax
  4017dd:	mov    ds:0x420f74,eax
  4017e2:	cmp    DWORD PTR ds:0x420f74,0x1b
  4017e9:	jne    0x40180f
  4017ef:	push   DWORD PTR [ebp-0x1c]
  4017f2:	push   0x420f9c
  4017f7:	push   0x46e8
  4017fc:	push   0x4240e4
  401801:	push   0x1c79
  401806:	push   DWORD PTR [ebp-0xc]
  401809:	call   DWORD PTR ds:0x42480d
  40180f:	cmp    DWORD PTR ds:0x420f74,0x12
  401816:	jb     0x4017d7
  40181c:	mov    eax,DWORD PTR [ebp+0x10]
  40181f:	sub    ecx,DWORD PTR ds:0x420fa4
  401825:	mov    ds:0x42450d,eax
  40182a:	and    DWORD PTR ds:0x422010,0x0
  401834:	mov    eax,ds:0x422010
  401839:	inc    eax
  40183a:	mov    ds:0x422010,eax
  40183f:	cmp    DWORD PTR ds:0x422010,0x18
  401846:	jne    0x401852
  40184c:	call   DWORD PTR ds:0x424811
  401852:	cmp    DWORD PTR ds:0x422010,0x17
  401859:	jb     0x401834
  40185f:	add    ecx,ecx
  401861:	mov    eax,ds:0x4242b9
  401866:	or     DWORD PTR ds:0x420e7a,0x2e1b
  401870:	mov    ecx,DWORD PTR [ebp-0x2c]
  401873:	sub    eax,edi
  401875:	neg    DWORD PTR ds:0x420e92
  40187b:	xor    eax,esi
  40187d:	mov    DWORD PTR ds:0x420fac,0x2c59
  401887:	mov    DWORD PTR [ecx],eax
  401889:	mov    ecx,DWORD PTR [ebp-0x24]
  40188c:	mov    DWORD PTR ds:0x420efc,0x2f09
  401896:	mov    eax,0xf89c85b5
  40189b:	mov    DWORD PTR ds:0x420efc,0x2084
  4018a5:	cmp    ecx,eax
  4018a7:	jne    0x401be5
  4018ad:	xor    DWORD PTR ds:0x422014,0x4966
  4018b7:	lea    eax,[ebp-0x34]
  4018ba:	adc    DWORD PTR ds:0x420e8a,0x420e92
  4018c4:	mov    DWORD PTR [ebp-0x70],eax
  4018c7:	xor    DWORD PTR ds:0x420f74,0x422004
  4018d1:	lea    eax,[ebp+0x4]
  4018d4:	sub    DWORD PTR ds:0x420fa4,0x42200c
  4018de:	mov    DWORD PTR [ebp-0x34],eax
  4018e1:	mov    eax,DWORD PTR [ebp-0x34]
  4018e4:	test   eax,eax
  4018e6:	mov    DWORD PTR ds:0x420e82,0x6242
  4018f0:	je     0x40209d
  4018f6:	xor    DWORD PTR ds:0x422008,0x2d73
  401900:	mov    eax,DWORD PTR [ebp-0x20]
  401903:	mov    eax,DWORD PTR [ebp-0xc]
  401906:	mov    eax,DWORD PTR [ebp-0x8]
  401909:	adc    ecx,0x7834
  40190f:	mov    DWORD PTR [ebp+0xc],eax
  401912:	not    ecx
  401914:	mov    eax,eax
  401916:	mov    eax,ds:0x424435
  40191b:	and    DWORD PTR ds:0x422008,0x0
  401925:	mov    ecx,DWORD PTR ds:0x422008
  40192b:	inc    ecx
  40192c:	mov    DWORD PTR ds:0x422008,ecx
  401932:	cmp    DWORD PTR ds:0x422008,0x1e
  401939:	jne    0x40194a
  40193f:	push   0x422000
  401944:	call   DWORD PTR ds:0x424815
  40194a:	cmp    DWORD PTR ds:0x422008,0x1d
  401951:	jb     0x401925
  401957:	and    DWORD PTR ds:0x420fa0,0x0
  401961:	jmp    0x401973
  401966:	mov    ecx,DWORD PTR ds:0x420fa0
  40196c:	inc    ecx
  40196d:	mov    DWORD PTR ds:0x420fa0,ecx
  401973:	cmp    DWORD PTR ds:0x420fa0,0x14
  40197a:	jae    0x4019bc
  401980:	cmp    DWORD PTR ds:0x420fa0,0x5
  401987:	jne    0x40199d
  40198d:	push   0x2f20
  401992:	push   0x8e83
  401997:	call   DWORD PTR ds:0x4247d5
  40199d:	cmp    DWORD PTR ds:0x420fa0,0x4
  4019a4:	jne    0x4019b7
  4019aa:	mov    ecx,DWORD PTR ds:0x420fa0
  4019b0:	inc    ecx
  4019b1:	mov    DWORD PTR ds:0x420fa0,ecx
  4019b7:	jmp    0x401966
  4019bc:	mov    eax,DWORD PTR [eax+0x1c8]
  4019c2:	neg    DWORD PTR ds:0x420f98
  4019c8:	mov    eax,DWORD PTR [eax]
  4019ca:	sbb    DWORD PTR ds:0x420f74,ebx
  4019d0:	cdq    
  4019d1:	adc    DWORD PTR ds:0x42200c,0x4213
  4019db:	mov    ebx,eax
  4019dd:	mov    DWORD PTR ds:0x420fa4,0x17
  4019e7:	cmp    DWORD PTR ds:0x420fa4,0x0
  4019ee:	je     0x401a74
  4019f4:	cmp    DWORD PTR ds:0x420fa4,0x20
  4019fb:	jne    0x401a14
  401a01:	push   DWORD PTR [ebp-0x1c]
  401a04:	push   0x420e9a
  401a09:	push   0x6482
  401a0e:	call   DWORD PTR ds:0x4247d9
  401a14:	xor    eax,eax
  401a16:	or     eax,DWORD PTR ds:0x420fa4
  401a1c:	dec    eax
  401a1d:	mov    ds:0x420fa4,eax
  401a22:	jmp    0x4019e7
  401a27:	mov    DWORD PTR ds:0x420f08,0x1d
  401a31:	cmp    DWORD PTR ds:0x420f08,0x0
  401a38:	je     0x401a74
  401a3e:	cmp    DWORD PTR ds:0x420f08,0x1e
  401a45:	jne    0x401a5b
  401a4b:	push   0x424027
  401a50:	push   0x4240af
  401a55:	call   DWORD PTR ds:0x4247dd
  401a5b:	xor    eax,eax
  401a5d:	xor    eax,DWORD PTR ds:0x420f08
  401a63:	dec    eax
  401a64:	mov    ds:0x420f08,eax
  401a69:	jmp    0x401a31
  401a6e:	and    DWORD PTR ds:0x420e82,ebx
  401a74:	mov    eax,0xfabdbeed
  401a79:	add    ebx,eax
  401a7b:	inc    ecx
  401a7c:	adc    edx,0xffffffff
  401a7f:	mov    DWORD PTR ds:0x420fa0,0x16
  401a89:	cmp    DWORD PTR ds:0x420fa0,0x0
  401a90:	je     0x401b11
  401a96:	cmp    DWORD PTR ds:0x420fa0,0x20
  401a9d:	jne    0x401ab4
  401aa3:	push   DWORD PTR [ebp-0x10]
  401aa6:	push   0x1d23
  401aab:	push   DWORD PTR [ebp-0x1c]
  401aae:	call   DWORD PTR ds:0x4247e1
  401ab4:	xor    ecx,ecx
  401ab6:	xor    ecx,DWORD PTR ds:0x420fa0
  401abc:	dec    ecx
  401abd:	mov    DWORD PTR ds:0x420fa0,ecx
  401ac3:	jmp    0x401a89
  401ac8:	mov    DWORD PTR ds:0x42200c,0x1c
  401ad2:	cmp    DWORD PTR ds:0x42200c,0x0
  401ad9:	je     0x401b11
  401adf:	cmp    DWORD PTR ds:0x42200c,0x2c
  401ae6:	jne    0x401aff
  401aec:	push   0x87f3
  401af1:	push   0x420f68
  401af6:	push   DWORD PTR [ebp-0xc]
  401af9:	call   DWORD PTR ds:0x4247e5
  401aff:	mov    ecx,DWORD PTR ds:0x42200c
  401b05:	dec    ecx
  401b06:	mov    DWORD PTR ds:0x42200c,ecx
  401b0c:	jmp    0x401ad2
  401b11:	and    DWORD PTR [ebp-0x10],0x0
  401b15:	sbb    DWORD PTR ds:0x422014,ebx
  401b1b:	xor    edx,0x0
  401b1e:	xor    ecx,DWORD PTR ds:0x420f70
  401b24:	mov    DWORD PTR [ebp-0x54],edx
  401b27:	adc    ecx,edx
  401b29:	mov    edx,DWORD PTR [ebp+0xc]
  401b2c:	mov    DWORD PTR [ebp-0x14],edx
  401b2f:	mov    ecx,0x8a29a127
  401b34:	xor    ebx,ecx
  401b36:	dec    edx
  401b37:	add    DWORD PTR [ebp-0x14],eax
  401b3a:	mov    DWORD PTR ds:0x420e96,edi
  401b40:	mov    edx,DWORD PTR [ebp-0x14]
  401b43:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401b47:	or     DWORD PTR ds:0x420f6c,0x420f00
  401b51:	xor    edx,ecx
  401b53:	add    DWORD PTR ds:0x420e86,0x420f04
  401b5d:	mov    DWORD PTR [ebp-0x4c],edx
  401b60:	mov    edx,DWORD PTR [ebp-0x10]
  401b63:	xor    edx,0x0
  401b66:	mov    DWORD PTR [ebp-0x48],edx
  401b69:	mov    DWORD PTR ds:0x420efc,0x3c82
  401b73:	cmp    DWORD PTR [ebp-0x4c],ebx
  401b76:	jne    0x401b92
  401b7c:	mov    DWORD PTR ds:0x420e92,0x5ff4
  401b86:	mov    edx,DWORD PTR [ebp-0x54]
  401b89:	cmp    DWORD PTR [ebp-0x48],edx
  401b8c:	je     0x401bc1
  401b92:	mov    edx,DWORD PTR ds:0x424435
  401b98:	mov    edx,DWORD PTR [edx+0x1c0]
  401b9e:	mov    edx,DWORD PTR [edx]
  401ba0:	xor    ebx,ebx
  401ba2:	add    edx,eax
  401ba4:	adc    ebx,0xffffffff
  401ba7:	xor    edx,ecx
  401ba9:	xor    ebx,0x0
  401bac:	cmp    edx,0x70941fc9
  401bb2:	jne    0x40209d
  401bb8:	cmp    ebx,0xffffffff
  401bbb:	jne    0x40209d
  401bc1:	mov    edx,DWORD PTR ds:0x4244b1
  401bc7:	mov    ebx,DWORD PTR ds:0x4244b9
  401bcd:	xor    edx,ebx
  401bcf:	mov    DWORD PTR ds:0x4244b1,edx
  401bd5:	mov    ebx,DWORD PTR ds:0x4244b1
  401bdb:	mov    edx,DWORD PTR [ebp-0x34]
  401bde:	add    DWORD PTR [edx],ebx
  401be0:	jmp    0x40205e
  401be5:	mov    ecx,DWORD PTR [ebp-0x38]
  401be8:	cmp    ecx,0xf89c85b2
  401bee:	je     0x401c4b
  401bf4:	mov    ecx,DWORD PTR [ebp-0x8]
  401bf7:	mov    edx,DWORD PTR [ebp-0x30]
  401bfa:	xor    ecx,esi
  401bfc:	add    ecx,edi
  401bfe:	cmp    ecx,edx
  401c00:	je     0x401c4b
  401c06:	mov    eax,ds:0x424435
  401c0b:	mov    eax,DWORD PTR [eax+0x194]
  401c11:	mov    ecx,DWORD PTR [eax]
  401c13:	mov    eax,DWORD PTR [ecx+0x3c]
  401c16:	push   DWORD PTR ds:0x42450d
  401c1c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c20:	push   DWORD PTR ds:0x4242b9
  401c26:	add    eax,ecx
  401c28:	mov    ecx,DWORD PTR ds:0x424435
  401c2e:	mov    ecx,DWORD PTR [ecx+0x194]
  401c34:	push   DWORD PTR [ecx]
  401c36:	call   eax
  401c38:	mov    ecx,DWORD PTR ds:0x424435
  401c3e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401c44:	mov    DWORD PTR [ecx],eax
  401c46:	jmp    0x40209d
  401c4b:	mov    ecx,DWORD PTR [ebp-0x8]
  401c4e:	mov    edx,DWORD PTR [ebp-0x68]
  401c51:	xor    ecx,esi
  401c53:	add    ecx,edi
  401c55:	cmp    ecx,edx
  401c57:	jne    0x401f61
  401c5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401c60:	mov    edx,DWORD PTR ds:0x424435
  401c66:	mov    edx,DWORD PTR [edx+0x198]
  401c6c:	xor    ecx,esi
  401c6e:	add    ecx,edi
  401c70:	cmp    ecx,DWORD PTR [edx]
  401c72:	jne    0x401c8d
  401c78:	push   eax
  401c79:	mov    eax,DWORD PTR [ebp-0x8]
  401c7c:	xor    eax,esi
  401c7e:	add    eax,edi
  401c80:	push   eax
  401c81:	push   ebx
  401c82:	push   DWORD PTR [ebp-0xc]
  401c85:	push   DWORD PTR [ebp-0x8]
  401c88:	call   0x40772b
  401c8d:	mov    eax,DWORD PTR [ebp-0xc]
  401c90:	mov    DWORD PTR [ebp-0x3c],eax
  401c93:	mov    eax,DWORD PTR [ebp-0x8]
  401c96:	mov    DWORD PTR [ebp-0x18],eax
  401c99:	mov    eax,DWORD PTR [ebp-0x18]
  401c9c:	xor    eax,esi
  401c9e:	add    eax,edi
  401ca0:	mov    DWORD PTR [ebp+0x10],eax
  401ca3:	mov    eax,ds:0x4242b5
  401ca8:	mov    eax,DWORD PTR [eax]
  401caa:	mov    DWORD PTR [ebp+0x10],eax
  401cad:	mov    eax,ds:0x4244bd
  401cb2:	mov    eax,DWORD PTR [eax]
  401cb4:	mov    DWORD PTR [ebp-0x1c],eax
  401cb7:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  401cbe:	mov    eax,DWORD PTR [ebp+0xc]
  401cc1:	xor    eax,esi
  401cc3:	add    eax,edi
  401cc5:	mov    DWORD PTR [ebp+0xc],eax
  401cc8:	mov    eax,ds:0x424435
  401ccd:	mov    DWORD PTR [ebp+0xc],eax
  401cd0:	mov    eax,DWORD PTR [ebp+0x10]
  401cd3:	mov    DWORD PTR [ebp+0xc],eax
  401cd6:	mov    eax,DWORD PTR [ebp+0xc]
  401cd9:	push   0x4
  401cdb:	pop    ecx
  401cdc:	sub    ecx,eax
  401cde:	add    ecx,DWORD PTR [ebp-0x1c]
  401ce1:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401ce8:	mov    DWORD PTR [ebp+0x10],ecx
  401ceb:	mov    DWORD PTR [ebp-0xcc],ebx
  401cf1:	mov    eax,DWORD PTR [ebp+0xc]
  401cf4:	mov    DWORD PTR [ebp-0xc8],eax
  401cfa:	mov    eax,DWORD PTR [ebp+0x10]
  401cfd:	mov    DWORD PTR [ebp-0xc4],eax
  401d03:	mov    eax,DWORD PTR [ebp-0x2c]
  401d06:	xor    eax,esi
  401d08:	add    eax,edi
  401d0a:	mov    DWORD PTR [ebp-0xc0],eax
  401d10:	lea    eax,[ebp-0x78]
  401d13:	mov    DWORD PTR [ebp-0xbc],eax
  401d19:	mov    eax,DWORD PTR [ebp-0xcc]
  401d1f:	xor    eax,esi
  401d21:	add    eax,edi
  401d23:	mov    DWORD PTR [ebp-0xcc],eax
  401d29:	lea    eax,[ebp-0xcc]
  401d2f:	push   eax
  401d30:	mov    eax,DWORD PTR [ebp-0x3c]
  401d33:	xor    eax,esi
  401d35:	add    eax,edi
  401d37:	push   eax
  401d38:	mov    eax,ds:0x424455
  401d3d:	push   0x4243ab
  401d42:	push   DWORD PTR [eax]
  401d44:	call   0x402470
  401d49:	mov    eax,DWORD PTR [ebp+0xc]
  401d4c:	mov    ecx,DWORD PTR [ebp+0x10]
  401d4f:	mov    DWORD PTR [ebp-0x6c],ecx
  401d52:	mov    ecx,DWORD PTR [ebp-0x18]
  401d55:	xor    ecx,esi
  401d57:	mov    DWORD PTR [ebp-0x1c],eax
  401d5a:	add    ecx,edi
  401d5c:	jmp    0x401f02
  401d61:	lea    edx,[ecx+eax*1]
  401d64:	mov    DWORD PTR [ebp+0x10],edx
  401d67:	mov    edx,DWORD PTR [ebp-0x6c]
  401d6a:	sub    edx,ecx
  401d6c:	mov    DWORD PTR [ebp+0xc],edx
  401d6f:	mov    edx,DWORD PTR [ebp+0xc]
  401d72:	mov    DWORD PTR [ebp-0x44],edx
  401d75:	mov    edx,DWORD PTR [ebp+0x10]
  401d78:	mov    DWORD PTR [ebp-0x40],0xf89c85b5
  401d7f:	mov    DWORD PTR [ebp-0x64],edx
  401d82:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  401d89:	mov    edx,DWORD PTR [ebp-0x40]
  401d8c:	xor    edx,esi
  401d8e:	add    edx,edi
  401d90:	mov    DWORD PTR [ebp+0xc],edx
  401d93:	mov    edx,DWORD PTR [ebp-0x40]
  401d96:	xor    edx,esi
  401d98:	add    edx,edi
  401d9a:	mov    DWORD PTR [ebp-0x4],edx
  401d9d:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  401da4:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  401dab:	mov    edx,DWORD PTR [ebp-0x40]
  401dae:	mov    ebx,DWORD PTR [ebp-0x44]
  401db1:	xor    edx,esi
  401db3:	add    edx,edi
  401db5:	cmp    ebx,edx
  401db7:	je     0x401ef6
  401dbd:	mov    eax,DWORD PTR [ebp+0x10]
  401dc0:	xor    eax,esi
  401dc2:	mov    edx,0xffcd8d23
  401dc7:	sub    edx,eax
  401dc9:	add    edx,DWORD PTR [ebp-0x44]
  401dcc:	mov    eax,DWORD PTR [ebp+0x10]
  401dcf:	mov    ebx,DWORD PTR [ebp+0xc]
  401dd2:	xor    eax,esi
  401dd4:	add    eax,edi
  401dd6:	imul   eax,ebx
  401dd9:	cmp    eax,edx
  401ddb:	ja     0x401ef3
  401de1:	mov    edx,DWORD PTR [ebp+0xc]
  401de4:	mov    eax,DWORD PTR [ebp-0x44]
  401de7:	mov    ebx,DWORD PTR [ebp-0x60]
  401dea:	sub    eax,edx
  401dec:	xor    ebx,esi
  401dee:	xor    edx,edx
  401df0:	add    ebx,edi
  401df2:	div    ebx
  401df4:	mov    DWORD PTR [ebp-0x4],eax
  401df7:	mov    eax,DWORD PTR [ebp-0x5c]
  401dfa:	mov    edx,DWORD PTR [ebp-0x4]
  401dfd:	xor    eax,esi
  401dff:	add    eax,edi
  401e01:	cmp    edx,eax
  401e03:	jbe    0x401e13
  401e09:	mov    eax,DWORD PTR [ebp-0x5c]
  401e0c:	xor    eax,esi
  401e0e:	add    eax,edi
  401e10:	mov    DWORD PTR [ebp-0x4],eax
  401e13:	mov    eax,DWORD PTR [ebp-0x60]
  401e16:	mov    edx,DWORD PTR [ebp-0x4]
  401e19:	xor    eax,esi
  401e1b:	add    eax,edi
  401e1d:	imul   eax,edx
  401e20:	mov    DWORD PTR [ebp-0x4],eax
  401e23:	mov    eax,DWORD PTR [ebp-0x40]
  401e26:	mov    edx,DWORD PTR [ebp-0x4]
  401e29:	xor    eax,esi
  401e2b:	add    eax,edi
  401e2d:	cmp    edx,eax
  401e2f:	je     0x401edc
  401e35:	mov    eax,DWORD PTR [ebp-0x4]
  401e38:	mov    DWORD PTR [ebp-0x24],eax
  401e3b:	mov    eax,DWORD PTR [ebp+0xc]
  401e3e:	add    eax,DWORD PTR [ebp-0x64]
  401e41:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  401e48:	mov    DWORD PTR [ebp-0x48],eax
  401e4b:	mov    eax,0xf89c85b2
  401e50:	mov    DWORD PTR [ebp-0x50],eax
  401e53:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  401e5a:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  401e61:	mov    DWORD PTR [ebp-0x54],eax
  401e64:	mov    eax,DWORD PTR [ebp-0x2c]
  401e67:	xor    eax,esi
  401e69:	add    eax,edi
  401e6b:	jmp    0x401e98
  401e70:	mov    eax,DWORD PTR [ebp-0x54]
  401e73:	mov    edx,DWORD PTR [ebp-0x4]
  401e76:	xor    eax,esi
  401e78:	add    eax,edi
  401e7a:	imul   eax,edx
  401e7d:	mov    edx,DWORD PTR [ebp-0x48]
  401e80:	mov    BYTE PTR [eax+edx*1],0x0
  401e84:	mov    eax,DWORD PTR [ebp-0x10]
  401e87:	mov    edx,DWORD PTR [ebp-0x50]
  401e8a:	xor    eax,esi
  401e8c:	xor    edx,esi
  401e8e:	add    eax,edi
  401e90:	add    edx,edi
  401e92:	imul   eax,edx
  401e95:	add    eax,DWORD PTR [ebp-0x4]
  401e98:	mov    DWORD PTR [ebp-0x4],eax
  401e9b:	mov    eax,DWORD PTR [ebp-0x4]
  401e9e:	mov    edx,DWORD PTR [ebp-0x24]
  401ea1:	cmp    edx,eax
  401ea3:	jb     0x401e70
  401ea9:	mov    eax,DWORD PTR [ebp-0x50]
  401eac:	mov    edx,DWORD PTR [ebp-0x24]
  401eaf:	xor    eax,esi
  401eb1:	add    eax,edi
  401eb3:	imul   eax,edx
  401eb6:	mov    edx,DWORD PTR [ebp-0x2c]
  401eb9:	xor    edx,esi
  401ebb:	add    edx,edi
  401ebd:	or     eax,edx
  401ebf:	mov    edx,DWORD PTR [ebp+0x10]
  401ec2:	xor    edx,esi
  401ec4:	add    eax,edx
  401ec6:	mov    edx,DWORD PTR [ebp+0x10]
  401ec9:	xor    edx,esi
  401ecb:	add    eax,edx
  401ecd:	mov    edx,DWORD PTR [ebp+0xc]
  401ed0:	lea    eax,[eax+edx*1+0x64e5ba]
  401ed7:	jmp    0x401eeb
  401edc:	mov    eax,DWORD PTR [ebp+0x10]
  401edf:	mov    edx,DWORD PTR [ebp+0xc]
  401ee2:	xor    eax,esi
  401ee4:	lea    eax,[eax+edx*1+0x3272dd]
  401eeb:	mov    DWORD PTR [ebp+0xc],eax
  401eee:	jmp    0x401dbd
  401ef3:	mov    eax,DWORD PTR [ebp-0x1c]
  401ef6:	mov    edx,DWORD PTR [ebp-0x3c]
  401ef9:	xor    edx,esi
  401efb:	lea    ecx,[ecx+edx*1+0x3272dd]
  401f02:	lea    edx,[ecx-0x3272dd]
  401f08:	xor    edx,esi
  401f0a:	cmp    edx,0xf89c95b5
  401f10:	jne    0x401d61
  401f16:	mov    ecx,DWORD PTR [ebp-0x18]
  401f19:	mov    edx,DWORD PTR [ebp-0x3c]
  401f1c:	mov    ebx,DWORD PTR [ebp-0x18]
  401f1f:	xor    edx,esi
  401f21:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  401f28:	xor    ecx,esi
  401f2a:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  401f31:	xor    ebx,esi
  401f33:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  401f3a:	mov    edx,DWORD PTR [ebp-0x3c]
  401f3d:	xor    edx,esi
  401f3f:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  401f46:	mov    eax,DWORD PTR [ebp-0x3c]
  401f49:	mov    eax,DWORD PTR [ebp-0x8]
  401f4c:	xor    eax,esi
  401f4e:	add    eax,edi
  401f50:	mov    ds:0x4244b9,eax
  401f55:	mov    eax,DWORD PTR [ebp-0x8]
  401f58:	xor    eax,esi
  401f5a:	add    eax,edi
  401f5c:	mov    ds:0x4244b1,eax
  401f61:	lea    eax,[ebp-0x28]
  401f64:	mov    DWORD PTR [ebp-0x88],eax
  401f6a:	lea    eax,[ebp+0x4]
  401f6d:	mov    DWORD PTR [ebp-0x28],eax
  401f70:	mov    eax,DWORD PTR [ebp-0x28]
  401f73:	test   eax,eax
  401f75:	je     0x40209d
  401f7b:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  401f82:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  401f89:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  401f90:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  401f9a:	call   0x407339
  401f9f:	mov    eax,DWORD PTR [ebp-0x20]
  401fa2:	mov    eax,DWORD PTR [ebp-0xc]
  401fa5:	mov    eax,DWORD PTR [ebp-0x8]
  401fa8:	mov    DWORD PTR [ebp+0xc],eax
  401fab:	mov    eax,eax
  401fad:	mov    eax,ds:0x424435
  401fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  401fb8:	mov    eax,DWORD PTR [eax]
  401fba:	cdq    
  401fbb:	mov    ebx,eax
  401fbd:	mov    eax,0xfabdbeed
  401fc2:	add    ebx,eax
  401fc4:	adc    edx,0xffffffff
  401fc7:	and    DWORD PTR [ebp-0x10],0x0
  401fcb:	xor    edx,0x0
  401fce:	mov    DWORD PTR [ebp-0x54],edx
  401fd1:	mov    edx,DWORD PTR [ebp+0xc]
  401fd4:	mov    DWORD PTR [ebp-0x14],edx
  401fd7:	mov    ecx,0x8a29a127
  401fdc:	xor    ebx,ecx
  401fde:	add    DWORD PTR [ebp-0x14],eax
  401fe1:	mov    edx,DWORD PTR [ebp-0x14]
  401fe4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401fe8:	xor    edx,ecx
  401fea:	mov    DWORD PTR [ebp-0x4c],edx
  401fed:	mov    edx,DWORD PTR [ebp-0x10]
  401ff0:	xor    edx,0x0
  401ff3:	mov    DWORD PTR [ebp-0x48],edx
  401ff6:	cmp    DWORD PTR [ebp-0x4c],ebx
  401ff9:	jne    0x40200b
  401fff:	mov    edx,DWORD PTR [ebp-0x54]
  402002:	cmp    DWORD PTR [ebp-0x48],edx
  402005:	je     0x40203a
  40200b:	mov    edx,DWORD PTR ds:0x424435
  402011:	mov    edx,DWORD PTR [edx+0x1c0]
  402017:	mov    edx,DWORD PTR [edx]
  402019:	xor    ebx,ebx
  40201b:	add    edx,eax
  40201d:	adc    ebx,0xffffffff
  402020:	xor    edx,ecx
  402022:	xor    ebx,0x0
  402025:	cmp    edx,0x70941fc9
  40202b:	jne    0x40209d
  402031:	cmp    ebx,0xffffffff
  402034:	jne    0x40209d
  40203a:	mov    edx,DWORD PTR ds:0x4244b1
  402040:	mov    ebx,DWORD PTR ds:0x4244b9
  402046:	xor    edx,ebx
  402048:	mov    DWORD PTR ds:0x4244b1,edx
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    ebx,DWORD PTR ds:0x4244b1
  402057:	add    ebx,DWORD PTR [edx]
  402059:	mov    edx,DWORD PTR [ebp-0x28]
  40205c:	mov    DWORD PTR [edx],ebx
  40205e:	mov    edx,DWORD PTR [ebp+0xc]
  402061:	xor    esi,edx
  402063:	mov    edx,DWORD PTR ds:0x4244b1
  402069:	add    esi,edi
  40206b:	xor    ebx,ebx
  40206d:	add    esi,eax
  40206f:	adc    ebx,0xffffffff
  402072:	xor    edi,edi
  402074:	xor    esi,ecx
  402076:	xor    ebx,0x0
  402079:	add    edx,eax
  40207b:	adc    edi,0xffffffff
  40207e:	xor    edx,ecx
  402080:	xor    edi,0x0
  402083:	cmp    edx,esi
  402085:	jne    0x40209d
  40208b:	cmp    edi,ebx
  40208d:	jne    0x40209d
  402093:	mov    eax,ds:0x4244b1
  402098:	mov    ds:0x4244b9,eax
  40209d:	mov    eax,ds:0x424435
  4020a2:	push   0x4
  4020a4:	add    eax,0x1cc
  4020a9:	push   eax
  4020aa:	lea    eax,[ebp-0x20]
  4020ad:	push   eax
  4020ae:	call   0x4020cd
  4020b3:	mov    eax,DWORD PTR [ebp-0x20]
  4020b6:	mov    eax,DWORD PTR [eax]
  4020b8:	pop    ebx
  4020b9:	pop    esi
  4020ba:	pop    edi
  4020bb:	leave  
  4020bc:	ret    0xc
  4020bf:	xor    eax,eax
  4020c1:	and    DWORD PTR ds:0x420f60,0x42200c
  4020cb:	inc    eax
  4020cc:	ret    
  4020cd:	push   ebp
  4020ce:	mov    ebp,esp
  4020d0:	sub    esp,0x10
  4020d3:	and    DWORD PTR ds:0x420e96,0x0
  4020dd:	mov    edx,DWORD PTR ds:0x420e96
  4020e3:	inc    edx
  4020e4:	mov    DWORD PTR ds:0x420e96,edx
  4020ea:	cmp    DWORD PTR ds:0x420e96,0xc
  4020f1:	jne    0x4020fd
  4020f7:	call   DWORD PTR ds:0x4247f1
  4020fd:	cmp    DWORD PTR ds:0x420e96,0xb
  402104:	jne    0x402117
  40210a:	mov    edx,DWORD PTR ds:0x420e96
  402110:	inc    edx
  402111:	mov    DWORD PTR ds:0x420e96,edx
  402117:	cmp    DWORD PTR ds:0x420e96,0x1e
  40211e:	jb     0x4020dd
  402124:	mov    DWORD PTR ds:0x422000,0x1a
  40212e:	cmp    DWORD PTR ds:0x422000,0x0
  402135:	je     0x40216d
  40213b:	cmp    DWORD PTR ds:0x422000,0x23
  402142:	jne    0x40214e
  402148:	call   DWORD PTR ds:0x4247f5
  40214e:	mov    ecx,DWORD PTR ds:0x422000
  402154:	dec    ecx
  402155:	mov    DWORD PTR ds:0x422000,ecx
  40215b:	jmp    0x40212e
  402160:	movzx  ecx,BYTE PTR ds:0x420f6c
  402167:	sbb    DWORD PTR ds:0x420ef4,ecx
  40216d:	mov    eax,0xf89c85b5
  402172:	and    DWORD PTR ds:0x422008,0x1b79
  40217c:	mov    DWORD PTR [ebp-0x4],eax
  40217f:	mov    ecx,DWORD PTR ds:0x420f60
  402185:	sub    ecx,DWORD PTR ds:0x420eec
  40218b:	mov    DWORD PTR ds:0x420f60,ecx
  402191:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402198:	mov    ecx,DWORD PTR [ebp-0x4]
  40219b:	and    DWORD PTR ds:0x420f08,0x0
  4021a5:	mov    edx,DWORD PTR ds:0x420f08
  4021ab:	inc    edx
  4021ac:	mov    DWORD PTR ds:0x420f08,edx
  4021b2:	cmp    DWORD PTR ds:0x420f08,0x27
  4021b9:	jne    0x4021e8
  4021bf:	push   0x88c3
  4021c4:	push   0x163c
  4021c9:	push   0x420ef4
  4021ce:	push   0x4bad
  4021d3:	push   0x581a
  4021d8:	push   0x60bf
  4021dd:	push   0x312d
  4021e2:	call   DWORD PTR ds:0x4247f9
  4021e8:	cmp    DWORD PTR ds:0x420f08,0x1e
  4021ef:	jb     0x4021a5
  4021f5:	push   esi
  4021f6:	mov    edx,0x7510896
  4021fb:	xor    ecx,edx
  4021fd:	mov    DWORD PTR ds:0x420f74,0x11
  402207:	cmp    DWORD PTR ds:0x420f74,0x0
  40220e:	je     0x402263
  402214:	cmp    DWORD PTR ds:0x420f74,0x7
  40221b:	jne    0x402231
  402221:	push   0x19b5
  402226:	push   0x424000
  40222b:	call   DWORD PTR ds:0x4247fd
  402231:	cmp    DWORD PTR ds:0x420f74,0x8
  402238:	jne    0x40224b
  40223e:	mov    esi,DWORD PTR ds:0x420f74
  402244:	dec    esi
  402245:	mov    DWORD PTR ds:0x420f74,esi
  40224b:	mov    esi,DWORD PTR ds:0x420f74
  402251:	dec    esi
  402252:	mov    DWORD PTR ds:0x420f74,esi
  402258:	jmp    0x402207
  40225d:	and    esi,0x2f21
  402263:	mov    esi,0x3272dd
  402268:	push   edi
  402269:	mov    edi,DWORD PTR [ebp+0x10]
  40226c:	add    ecx,esi
  40226e:	cmp    ecx,edi
  402270:	je     0x402335
  402276:	mov    ecx,DWORD PTR [ebp-0x4]
  402279:	mov    edi,DWORD PTR [ebp+0x10]
  40227c:	xor    eax,eax
  40227e:	xor    ecx,edx
  402280:	add    ecx,esi
  402282:	add    edi,0xfabdbeed
  402288:	adc    eax,0xffffffff
  40228b:	xor    eax,0x0
  40228e:	mov    DWORD PTR [ebp-0xc],eax
  402291:	push   ebx
  402292:	xor    ebx,ebx
  402294:	xor    edi,0x8a29a127
  40229a:	mov    eax,ecx
  40229c:	add    eax,0xfabdbeed
  4022a1:	adc    ebx,0xffffffff
  4022a4:	xor    eax,0x8a29a127
  4022a9:	xor    ebx,0x0
  4022ac:	cmp    eax,edi
  4022ae:	jne    0x4022c7
  4022b4:	cmp    ebx,DWORD PTR [ebp-0xc]
  4022b7:	je     0x40232f
  4022bd:	jmp    0x4022c7
  4022c2:	mov    esi,0x3272dd
  4022c7:	mov    eax,DWORD PTR [ebp-0x4]
  4022ca:	mov    edi,DWORD PTR [ebp-0x8]
  4022cd:	xor    edi,edx
  4022cf:	add    edi,esi
  4022d1:	mov    esi,DWORD PTR [ebp+0x8]
  4022d4:	imul   edi,ecx
  4022d7:	mov    ebx,DWORD PTR [ebp+0xc]
  4022da:	xor    eax,edx
  4022dc:	add    eax,ecx
  4022de:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  4022e5:	mov    BYTE PTR [edi+esi*1],al
  4022e8:	mov    eax,DWORD PTR [ebp-0x8]
  4022eb:	mov    esi,DWORD PTR [ebp+0x10]
  4022ee:	xor    eax,edx
  4022f0:	xor    ebx,ebx
  4022f2:	add    esi,0xfabdbeed
  4022f8:	adc    ebx,0xffffffff
  4022fb:	lea    ecx,[ecx+eax*1+0x3272dd]
  402302:	xor    edi,edi
  402304:	xor    esi,0x8a29a127
  40230a:	xor    ebx,0x0
  40230d:	mov    eax,ecx
  40230f:	add    eax,0xfabdbeed
  402314:	adc    edi,0xffffffff
  402317:	xor    eax,0x8a29a127
  40231c:	xor    edi,0x0
  40231f:	cmp    eax,esi
  402321:	jne    0x4022c2
  402327:	cmp    edi,ebx
  402329:	jne    0x4022c2
  40232f:	mov    eax,0xf89c85b2
  402334:	pop    ebx
  402335:	pop    edi
  402336:	pop    esi
  402337:	leave  
  402338:	ret    0xc
  40233b:	push   ebp
  40233c:	mov    ebp,esp
  40233e:	push   ecx
  40233f:	and    eax,0x3e6
  402344:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  40234b:	adc    DWORD PTR ds:0x420e96,ecx
  402351:	mov    eax,DWORD PTR [ebp+0x8]
  402354:	add    DWORD PTR ds:0x420e8e,0x7faa
  40235e:	mov    al,BYTE PTR [eax]
  402360:	add    al,0xb
  402362:	adc    DWORD PTR ds:0x420f74,0x420fac
  40236c:	xor    al,0x71
  40236e:	mov    DWORD PTR ds:0x420f60,0x413c
  402378:	cmp    al,0x29
  40237a:	mov    DWORD PTR ds:0x420f98,0x418e
  402384:	jne    0x40245f
  40238a:	mov    DWORD PTR ds:0x420fb0,0x17
  402394:	cmp    DWORD PTR ds:0x420fb0,0x0
  40239b:	je     0x4023d3
  4023a1:	cmp    DWORD PTR ds:0x420fb0,0x18
  4023a8:	jne    0x4023c1
  4023ae:	push   0x424238
  4023b3:	push   0x0
  4023b5:	push   DWORD PTR [ebp-0x14]
  4023b8:	push   DWORD PTR [ebp-0x14]
  4023bb:	call   DWORD PTR ds:0x424801
  4023c1:	mov    edx,DWORD PTR ds:0x420fb0
  4023c7:	dec    edx
  4023c8:	mov    DWORD PTR ds:0x420fb0,edx
  4023ce:	jmp    0x402394
  4023d3:	mov    eax,DWORD PTR [ebp+0x8]
  4023d6:	and    DWORD PTR ds:0x420f00,0x0
  4023e0:	jmp    0x4023f4
  4023e5:	xor    edx,edx
  4023e7:	or     edx,DWORD PTR ds:0x420f00
  4023ed:	inc    edx
  4023ee:	mov    DWORD PTR ds:0x420f00,edx
  4023f4:	cmp    DWORD PTR ds:0x420f00,0x10
  4023fb:	jae    0x402423
  402401:	cmp    DWORD PTR ds:0x420f00,0x16
  402408:	jne    0x40241e
  40240e:	push   0x420e8a
  402413:	push   0x8874
  402418:	call   DWORD PTR ds:0x424805
  40241e:	jmp    0x4023e5
  402423:	mov    ecx,DWORD PTR [ebp+0x8]
  402426:	add    ecx,DWORD PTR [eax+0x3c]
  402429:	mov    edx,0x7510896
  40242e:	mov    DWORD PTR [ebp+0x8],ecx
  402431:	mov    eax,DWORD PTR [ebp-0x4]
  402434:	xor    eax,edx
  402436:	push   esi
  402437:	mov    esi,DWORD PTR [ebp+0x8]
  40243a:	mov    ecx,0x3272dd
  40243f:	add    eax,ecx
  402441:	cmp    DWORD PTR [esi+0x54],eax
  402444:	pop    esi
  402445:	je     0x402453
  40244b:	mov    eax,DWORD PTR [ebp+0x8]
  40244e:	jmp    0x40246c
  402453:	mov    eax,DWORD PTR [ebp-0x4]
  402456:	xor    eax,edx
  402458:	add    eax,ecx
  40245a:	jmp    0x40246c
  40245f:	mov    eax,DWORD PTR [ebp-0x4]
  402462:	xor    eax,0x7510896
  402467:	add    eax,0x3272dd
  40246c:	leave  
  40246d:	ret    0x4
  402470:	push   ebp
  402471:	mov    ebp,esp
  402473:	sub    esp,0x78
  402476:	push   ebx
  402477:	add    DWORD PTR ds:0x420f74,0x422014
  402481:	push   esi
  402482:	adc    DWORD PTR ds:0x422008,0x3845
  40248c:	push   edi
  40248d:	adc    DWORD PTR ds:0x420f6c,0x5918
  402497:	push   0x1f
  402499:	lea    eax,[ebp-0x78]
  40249c:	or     DWORD PTR ds:0x420f5c,0x420f98
  4024a6:	push   eax
  4024a7:	push   0x0
  4024a9:	sub    DWORD PTR ds:0x420efc,0x7a9b
  4024b3:	call   DWORD PTR ds:0x424809
  4024b9:	push   0x97898797
  4024be:	call   DWORD PTR ds:0x4247cd
  4024c4:	and    ebx,eax
  4024c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4024cd:	and    DWORD PTR ds:0x420e8e,0x0
  4024d7:	mov    ecx,DWORD PTR ds:0x420e8e
  4024dd:	inc    ecx
  4024de:	mov    DWORD PTR ds:0x420e8e,ecx
  4024e4:	cmp    DWORD PTR ds:0x420e8e,0xc
  4024eb:	jne    0x402513
  4024f1:	push   DWORD PTR [ebp-0x18]
  4024f4:	push   0x420ef0
  4024f9:	push   0x1a2a
  4024fe:	push   0x4240c5
  402503:	push   0x11f1
  402508:	push   0x79a7
  40250d:	call   DWORD PTR ds:0x42480d
  402513:	cmp    DWORD PTR ds:0x420e8e,0xb
  40251a:	jne    0x40252d
  402520:	mov    ecx,DWORD PTR ds:0x420e8e
  402526:	inc    ecx
  402527:	mov    DWORD PTR ds:0x420e8e,ecx
  40252d:	cmp    DWORD PTR ds:0x420e8e,0x1f
  402534:	jb     0x4024d7
  40253a:	mov    DWORD PTR ds:0x420e92,0x15
  402544:	cmp    DWORD PTR ds:0x420e92,0x0
  40254b:	je     0x40258c
  402551:	cmp    DWORD PTR ds:0x420e92,0x4
  402558:	jne    0x402564
  40255e:	call   DWORD PTR ds:0x424811
  402564:	cmp    DWORD PTR ds:0x420e92,0x5
  40256b:	jne    0x40257c
  402571:	mov    eax,ds:0x420e92
  402576:	dec    eax
  402577:	mov    ds:0x420e92,eax
  40257c:	mov    eax,ds:0x420e92
  402581:	dec    eax
  402582:	mov    ds:0x420e92,eax
  402587:	jmp    0x402544
  40258c:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  402593:	mov    ecx,DWORD PTR [ebp-0x4]
  402596:	and    DWORD PTR ds:0x420f00,0x0
  4025a0:	xor    eax,eax
  4025a2:	add    eax,DWORD PTR ds:0x420f00
  4025a8:	inc    eax
  4025a9:	mov    ds:0x420f00,eax
  4025ae:	cmp    DWORD PTR ds:0x420f00,0x1d
  4025b5:	jne    0x4025c6
  4025bb:	push   0x420e82
  4025c0:	call   DWORD PTR ds:0x424815
  4025c6:	cmp    DWORD PTR ds:0x420f00,0x1a
  4025cd:	jb     0x4025a0
  4025d3:	mov    ebx,DWORD PTR ds:0x420f9c
  4025d9:	sbb    DWORD PTR ds:0x420f58,ebx
  4025df:	mov    ebx,0x7510896
  4025e4:	xor    ecx,ebx
  4025e6:	mov    eax,ds:0x420e82
  4025eb:	or     eax,DWORD PTR ds:0x420e7a
  4025f1:	mov    ds:0x420e82,eax
  4025f6:	mov    eax,0x3272dd
  4025fb:	dec    DWORD PTR ds:0x420fa0
  402601:	add    ecx,eax
  402603:	and    DWORD PTR ds:0x420e9e,0x420e8a
  40260d:	mov    DWORD PTR [ebp-0x1c],ecx
  402610:	xor    ecx,ecx
  402612:	xor    ecx,DWORD PTR ds:0x422014
  402618:	adc    DWORD PTR ds:0x420ef4,ecx
  40261e:	mov    ecx,DWORD PTR [ebp+0x14]
  402621:	test   ecx,ecx
  402623:	mov    DWORD PTR ds:0x420e96,0x3634
  40262d:	je     0x40263f
  402633:	sub    ecx,esi
  402635:	mov    ecx,DWORD PTR [ebp+0x14]
  402638:	mov    ecx,DWORD PTR [ecx]
  40263a:	or     edi,edi
  40263c:	mov    DWORD PTR [ebp-0x1c],ecx
  40263f:	and    DWORD PTR ds:0x422010,0x634e
  402649:	mov    ecx,0x7665
  40264e:	imul   edx,eax
  402651:	or     DWORD PTR ds:0x422000,0x5329
  40265b:	mov    esi,0x76532
  402660:	add    edx,ecx
  402662:	xchg   esi,ecx
  402664:	mov    edi,0x54354
  402669:	or     DWORD PTR ds:0x420fa4,0x820
  402673:	sub    edx,edi
  402675:	mov    esi,DWORD PTR ds:0x420ea6
  40267b:	mov    esi,DWORD PTR [esi]
  40267d:	or     DWORD PTR ds:0x420e9a,esi
  402683:	mov    ecx,DWORD PTR [ebp-0x4]
  402686:	mov    DWORD PTR ds:0x420fac,0x1c
  402690:	cmp    DWORD PTR ds:0x420fac,0x0
  402697:	je     0x4026e4
  40269d:	cmp    DWORD PTR ds:0x420fac,0x4
  4026a4:	jne    0x4026b8
  4026aa:	push   DWORD PTR [ebp-0x18]
  4026ad:	push   0x676d
  4026b2:	call   DWORD PTR ds:0x4247d5
  4026b8:	cmp    DWORD PTR ds:0x420fac,0x5
  4026bf:	jne    0x4026d2
  4026c5:	mov    esi,DWORD PTR ds:0x420fac
  4026cb:	dec    esi
  4026cc:	mov    DWORD PTR ds:0x420fac,esi
  4026d2:	mov    esi,DWORD PTR ds:0x420fac
  4026d8:	dec    esi
  4026d9:	mov    DWORD PTR ds:0x420fac,esi
  4026df:	jmp    0x402690
  4026e4:	xor    ecx,ebx
  4026e6:	add    ecx,eax
  4026e8:	mov    DWORD PTR [ebp-0x8],ecx
  4026eb:	sbb    esi,DWORD PTR ds:0x420e9a
  4026f1:	mov    ecx,DWORD PTR [ebp-0x14]
  4026f4:	xor    ecx,ebx
  4026f6:	or     DWORD PTR ds:0x420fb0,edi
  4026fc:	add    ecx,eax
  4026fe:	or     DWORD PTR ds:0x420f60,0xf49
  402708:	mov    DWORD PTR [ebp-0x24],ecx
  40270b:	mov    DWORD PTR ds:0x420fa8,0x17
  402715:	cmp    DWORD PTR ds:0x420fa8,0x0
  40271c:	je     0x402758
  402722:	cmp    DWORD PTR ds:0x420fa8,0x22
  402729:	jne    0x402740
  40272f:	push   DWORD PTR [ebp-0x20]
  402732:	push   0x420f04
  402737:	push   DWORD PTR [ebp-0x18]
  40273a:	call   DWORD PTR ds:0x4247d9
  402740:	mov    esi,DWORD PTR ds:0x420fa8
  402746:	dec    esi
  402747:	mov    DWORD PTR ds:0x420fa8,esi
  40274d:	jmp    0x402715
  402752:	sub    ecx,DWORD PTR ds:0x420e9a
  402758:	mov    ecx,DWORD PTR [ebp-0x4]
  40275b:	mov    esi,DWORD PTR ds:0x420e8a
  402761:	xor    DWORD PTR ds:0x420f64,esi
  402767:	xor    ecx,ebx
  402769:	add    ecx,eax
  40276b:	mov    esi,DWORD PTR ds:0x420e82
  402771:	sbb    DWORD PTR ds:0x420f08,esi
  402777:	mov    DWORD PTR [ebp-0x30],ecx
  40277a:	mov    esi,DWORD PTR [ebp-0x4]
  40277d:	xor    esi,ebx
  40277f:	adc    ecx,DWORD PTR ds:0x420e92
  402785:	add    esi,eax
  402787:	mov    ecx,DWORD PTR [ebp-0x24]
  40278a:	sub    ecx,eax
  40278c:	mov    DWORD PTR ds:0x420ef8,0x1fac
  402796:	lea    edx,[esi-0x3272dd]
  40279c:	or     DWORD PTR ds:0x422000,0x620f
  4027a6:	xor    ecx,ebx
  4027a8:	sub    DWORD PTR ds:0x420f74,0x420ef4
  4027b2:	xor    edx,ebx
  4027b4:	cmp    edx,ecx
  4027b6:	mov    DWORD PTR ds:0x422010,0x61b1
  4027c0:	je     0x404db6
  4027c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4027c9:	and    DWORD PTR ds:0x420f64,0x54e0
  4027d3:	xor    ecx,ebx
  4027d5:	add    ecx,eax
  4027d7:	mov    DWORD PTR ds:0x422008,0x50f1
  4027e1:	cmp    esi,ecx
  4027e3:	jne    0x404d01
  4027e9:	add    DWORD PTR ds:0x420f9c,0x56b8
  4027f3:	push   DWORD PTR [ebp+0x8]
  4027f6:	call   0x40233b
  4027fb:	mov    DWORD PTR [ebp-0x18],eax
  4027fe:	mov    eax,DWORD PTR [ebp-0x4]
  402801:	xor    edi,edi
  402803:	xor    edi,DWORD PTR ds:0x420eb6
  402809:	xor    ecx,ecx
  40280b:	add    ecx,DWORD PTR ds:0x423014
  402811:	sub    edi,ecx
  402813:	or     edi,DWORD PTR [edi+ecx*1]
  402816:	mov    ecx,DWORD PTR [ebp-0x18]
  402819:	add    edi,DWORD PTR ds:0x420e9a
  40281f:	xor    eax,ebx
  402821:	mov    edi,0x3272dd
  402826:	add    eax,edi
  402828:	mov    DWORD PTR ds:0x422004,0x6f95
  402832:	cmp    ecx,eax
  402834:	mov    DWORD PTR ds:0x420e96,0x4ad4
  40283e:	je     0x404e26
  402844:	add    DWORD PTR ds:0x420e8a,0x2aaf
  40284e:	push   DWORD PTR [ebp-0x18]
  402851:	push   DWORD PTR [ebp+0x8]
  402854:	neg    DWORD PTR ds:0x420f70
  40285a:	call   0x410a1b
  40285f:	and    DWORD PTR ds:0x420eec,0x0
  402869:	mov    ecx,DWORD PTR ds:0x420eec
  40286f:	inc    ecx
  402870:	mov    DWORD PTR ds:0x420eec,ecx
  402876:	cmp    DWORD PTR ds:0x420eec,0x7
  40287d:	jne    0x402893
  402883:	push   0x4240e4
  402888:	push   0x424143
  40288d:	call   DWORD PTR ds:0x4247dd
  402893:	cmp    DWORD PTR ds:0x420eec,0x6
  40289a:	jne    0x4028ad
  4028a0:	mov    ecx,DWORD PTR ds:0x420eec
  4028a6:	inc    ecx
  4028a7:	mov    DWORD PTR ds:0x420eec,ecx
  4028ad:	cmp    DWORD PTR ds:0x420eec,0x11
  4028b4:	jb     0x402869
  4028ba:	xor    DWORD PTR ds:0x420f00,edx
  4028c0:	mov    DWORD PTR [ebp-0x18],eax
  4028c3:	adc    ecx,DWORD PTR ds:0x420ef8
  4028c9:	jmp    0x404c56
  4028ce:	rcr    DWORD PTR [ecx-0x1e],cl
  4028d1:	mov    fs,esp
  4028d3:	jno    0x402950
  4028d5:	sti    
  4028d6:	inc    esi
  4028d7:	scas   eax,DWORD PTR es:[edi]
  4028d8:	dec    ebx
  4028d9:	imul   ebp,esi,0x7af48ecf
  4028df:	jp     0x40295b
  4028e1:	jp     0x4028ed
  4028e3:	pop    edi
  4028e4:	jp     0x402960
  4028e6:	adc    eax,0x1921172c
  4028eb:	and    eax,0x34652f1b
  4028f0:	imul   esp,DWORD PTR [esi+0x2c],0x6d6a6a61
  4028f7:	xor    al,ch
  4028f9:	fsubr  st(1),st
  4028fb:	push   eax
  4028fc:	dec    eax
  4028fd:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402901:	pusha  
  402902:	ins    DWORD PTR es:[edi],dx
  402903:	pop    ecx
  402904:	iret   
  402905:	pop    ebp
  402906:	dec    edx
  402907:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  40290e:	jg     0x402947
  402910:	jo     0x4028b8
  402912:	jg     0x4028b4
  402914:	mov    ds:0x66ff2c3b,al
  402919:	fdiv   st(2),st
  40291b:	push   ebx
  40291c:	jg     0x40293c
  40291e:	in     eax,dx
  40291f:	cmp    ebp,ecx
  402921:	mov    edx,0xde1387ed
  402926:	mov    ebp,DWORD PTR [ecx]
  402928:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  40292f:	fld    QWORD PTR [esp+edx*8]
  402932:	push   cs
  402933:	cli    
  402934:	sbb    BYTE PTR es:[eax+0xc],cl
  402938:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  40293d:	adc    eax,DWORD PTR [ecx+0x5]
  402940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402941:	(bad)  
  402942:	jmp    0x32b45490
  402947:	enter  0xf95b,0x1a
  40294b:	cli    
  40294c:	js     0x4028ef
  40294e:	arpl   bp,bx
  402950:	cwde   
  402951:	pop    edi
  402952:	mov    esp,DWORD PTR [ecx+0x31821407]
  402958:	repz sahf 
  40295a:	cmp    al,0x72
  40295c:	jae    0x402969
  40295e:	fisubr DWORD PTR ds:0x33348d52
  402964:	push   esp
  402965:	jecxz  0x402936
  402967:	mov    ch,BYTE PTR [ecx]
  402969:	mov    DWORD PTR [eax+0x5188ccb7],esi
  40296f:	in     al,0x45
  402971:	push   edx
  402972:	dec    esp
  402973:	or     al,0x3e
  402975:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  40297d:	rol    BYTE PTR [esi+edx*2],0xfd
  402981:	push   edx
  402982:	push   esi
  402983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402984:	stc    
  402985:	push   0x1e42f8bf
  40298a:	shl    bl,0xe8
  40298d:	ins    DWORD PTR es:[edi],dx
  40298e:	icebp  
  40298f:	pusha  
  402990:	ds xchg esi,eax
  402992:	pop    edi
  402993:	int    0xa4
  402995:	pop    es
  402996:	add    eax,0xc88a8545
  40299b:	jp     0x40294d
  40299d:	jne    0x402a1d
  40299f:	jecxz  0x402993
  4029a1:	jg     0x402a05
  4029a3:	inc    ecx
  4029a4:	add    eax,DWORD PTR ds:0x9f5018af
  4029aa:	inc    esp
  4029ab:	call   0xeb67:0x33bf25cb
  4029b2:	popa   
  4029b3:	repz inc ebx
  4029b5:	outs   dx,BYTE PTR ds:[esi]
  4029b6:	clc    
  4029b7:	cwde   
  4029b8:	ins    DWORD PTR es:[edi],dx
  4029b9:	stos   DWORD PTR es:[edi],eax
  4029ba:	mov    ah,0x1c
  4029bc:	inc    eax
  4029bd:	inc    edx
  4029be:	call   0xbf4a:0x36f0c6b8
  4029c5:	outs   dx,BYTE PTR ds:[esi]
  4029c6:	rcl    BYTE PTR [edx-0x61],cl
  4029c9:	xchg   esp,eax
  4029ca:	or     BYTE PTR [ebx*8-0xdfe4c6c],bh
  4029d1:	retf   
  4029d2:	repz adc eax,DWORD PTR [ebx+0x49]
  4029d6:	loopne 0x402a3f
  4029d8:	adc    bl,bl
  4029da:	sbb    eax,0x145539a8
  4029df:	idiv   BYTE PTR [eax-0x8]
  4029e2:	jmp    0xbf247132
  4029e7:	pushf  
  4029e8:	sub    edx,0xa1aeb329
  4029ee:	add    esp,DWORD PTR [ebx]
  4029f0:	lods   eax,DWORD PTR ds:[esi]
  4029f1:	cld    
  4029f2:	in     al,dx
  4029f3:	mov    eax,ds:0xb41c5271
  4029f8:	jecxz  0x4029fa
  4029fa:	dec    edi
  4029fb:	scas   eax,DWORD PTR es:[edi]
  4029fc:	lock inc eax
  4029fe:	popa   
  4029ff:	mov    ebp,0xd27fa7ab
  402a04:	pop    esi
  402a05:	ret    0x51bd
  402a08:	add    DWORD PTR [ebx+0x2],ecx
  402a0b:	or     DWORD PTR [esi],edi
  402a0d:	imul   eax,DWORD PTR [edi],0x595acbd2
  402a13:	mov    dl,0x3e
  402a15:	std    
  402a16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a17:	pusha  
  402a18:	push   ds
  402a19:	aam    0x21
  402a1b:	push   es
  402a1c:	adc    ebx,DWORD PTR [ebx]
  402a1e:	mov    edi,0xf0c5cd3f
  402a23:	and    DWORD PTR [ebp-0x56],ecx
  402a26:	mov    DWORD PTR ds:0x847ee1e9,eax
  402a2c:	stc    
  402a2d:	or     edx,DWORD PTR [eax]
  402a2f:	ffree  st(6)
  402a31:	dec    ecx
  402a32:	adc    dl,BYTE PTR [ecx]
  402a34:	inc    DWORD PTR [ebx-0x21fd2cfb]
  402a3a:	cli    
  402a3b:	ret    
  402a3c:	ds out dx,al
  402a3e:	icebp  
  402a3f:	rcl    DWORD PTR [edi-0x2d],cl
  402a42:	pop    ecx
  402a43:	xlat   BYTE PTR ds:[ebx]
  402a44:	(bad)  
  402a45:	dec    ebx
  402a46:	dec    edi
  402a47:	sub    DWORD PTR [edi+0x3018704e],esi
  402a4d:	pushf  
  402a4e:	push   ss
  402a4f:	jmp    0x13f04684
  402a54:	add    DWORD PTR [ecx+eax*4-0x6c],ecx
  402a58:	jg     0x402a08
  402a5a:	retf   0xe257
  402a5d:	cmp    eax,0xab395b33
  402a62:	scas   eax,DWORD PTR es:[edi]
  402a63:	xchg   ecx,eax
  402a64:	shld   ebp,eax,cl
  402a67:	dec    eax
  402a68:	stos   BYTE PTR es:[edi],al
  402a69:	xlat   BYTE PTR ds:[ebx]
  402a6a:	jecxz  0x402a4d
  402a6c:	push   ebp
  402a6d:	dec    ebp
  402a6e:	pop    esi
  402a6f:	inc    edx
  402a70:	(bad)  
  402a71:	adc    ah,al
  402a73:	xor    ecx,DWORD PTR [ebp-0x7f]
  402a76:	mov    al,ds:0x1afbc38c
  402a7b:	push   ebx
  402a7c:	test   eax,0x332c7faf
  402a81:	test   DWORD PTR [edi+0x4fa51461],ebx
  402a87:	jbe    0x402aa0
  402a89:	retf   0xcab4
  402a8c:	xor    al,0x71
  402a8e:	les    ecx,FWORD PTR [edi]
  402a90:	popa   
  402a91:	mov    esi,DWORD PTR [edi+0x25665f57]
  402a97:	jbe    0x402a31
  402a99:	mov    ch,0xf6
  402a9b:	xor    BYTE PTR [esi-0x4],bl
  402a9e:	jp     0x402b18
  402aa0:	test   DWORD PTR [edi-0x2e],edi
  402aa3:	imul   ebp,DWORD PTR [edx-0xa432687],0x66cb9eee
  402aad:	(bad)  
  402aae:	fisttp WORD PTR ds:0x9a5b006b
  402ab4:	pop    edi
  402ab5:	aaa    
  402ab6:	push   0x13
  402ab8:	test   BYTE PTR [edx+0x16fb0a45],bl
  402abe:	sahf   
  402abf:	add    bh,dl
  402ac1:	dec    ebx
  402ac2:	xor    eax,0xd4a5eb7c
  402ac7:	test   DWORD PTR [eax+0x6bf91848],ebx
  402acd:	stc    
  402ace:	iret   
  402acf:	pop    ebx
  402ad0:	or     ebx,DWORD PTR [esi+0x69ad99a2]
  402ad6:	lods   eax,DWORD PTR ds:[esi]
  402ad7:	ins    DWORD PTR es:[edi],dx
  402ad8:	cmp    al,0x1b
  402ada:	add    ebp,edi
  402adc:	xor    BYTE PTR [esi],dl
  402ade:	bound  ecx,QWORD PTR [ebx+0x55]
  402ae1:	or     eax,0xe8baa15f
  402ae6:	xchg   ebx,eax
  402ae7:	inc    eax
  402ae8:	and    ebx,DWORD PTR [esi+ecx*8]
  402aeb:	in     eax,dx
  402aec:	addr16 (bad) 
  402aee:	je     0x402afb
  402af0:	sti    
  402af1:	dec    edx
  402af2:	mov    eax,ds:0x94c6016e
  402af7:	sbb    al,ch
  402af9:	xor    cl,BYTE PTR [ecx+0x1c]
  402afc:	sbb    DWORD PTR [ebp-0x65],0x67dcd3f3
  402b03:	pop    ss
  402b04:	fiadd  DWORD PTR [eax]
  402b06:	(bad)  
  402b07:	mov    al,ds:0xea50f3d7
  402b0c:	sub    cl,al
  402b0e:	loope  0x402aa7
  402b10:	fild   QWORD PTR [edx]
  402b12:	je     0x402b77
  402b14:	rcr    ebx,cl
  402b16:	sub    dh,BYTE PTR [ebx+ebp*8-0x6b92d707]
  402b1d:	jmp    0xd310:0x84437a05
  402b24:	int3   
  402b25:	xlat   BYTE PTR ds:[ebx]
  402b26:	popf   
  402b27:	loope  0x402b45
  402b29:	jp     0x402b84
  402b2b:	or     DWORD PTR [esi],ebx
  402b2d:	mov    ch,0x23
  402b2f:	cmp    al,0xe0
  402b31:	dec    ecx
  402b32:	jo     0x402b7f
  402b34:	add    BYTE PTR [ecx-0x5aa48491],dh
  402b3a:	or     edi,DWORD PTR [edi+0x39]
  402b3d:	popf   
  402b3e:	sub    DWORD PTR [ecx+0x19],ebx
  402b41:	sbb    DWORD PTR ds:[ebx-0x1e948be3],ebp
  402b48:	mov    ebx,DWORD PTR [edx+0x5980192a]
  402b4e:	daa    
  402b4f:	and    eax,0x4b8cd8cf
  402b54:	lea    esi,[ecx-0x75]
  402b57:	ror    edx,0xea
  402b5a:	retf   
  402b5b:	in     al,dx
  402b5c:	call   0xd84b:0x5df1213
  402b63:	sar    BYTE PTR [esp+edi*1],1
  402b66:	mov    bl,0x8a
  402b68:	ss ins DWORD PTR es:[edi],dx
  402b6a:	pop    edi
  402b6b:	into   
  402b6c:	cdq    
  402b6d:	adc    esi,DWORD PTR [ebp+0x2a]
  402b70:	mov    dl,0x56
  402b72:	adc    ah,bl
  402b74:	push   esi
  402b75:	test   DWORD PTR [esi-0x50],0x57721147
  402b7c:	loop   0x402b00
  402b7e:	div    BYTE PTR [esi-0x542a5ec4]
  402b84:	jne    0x402b8c
  402b86:	fadd   DWORD PTR [eax]
  402b88:	pop    edx
  402b89:	jbe    0x402b3b
  402b8b:	sub    DWORD PTR [edx],ecx
  402b8d:	outs   dx,DWORD PTR ds:[esi]
  402b8e:	adc    BYTE PTR [ebx+0x56],0xc4
  402b92:	push   es
  402b93:	and    ebp,DWORD PTR [esi]
  402b95:	outs   dx,BYTE PTR ds:[esi]
  402b96:	in     al,dx
  402b97:	sub    esp,DWORD PTR [edi-0x78]
  402b9a:	ja     0x402bac
  402b9c:	aad    0x3f
  402b9e:	std    
  402b9f:	sub    eax,0xa503ec50
  402ba4:	lods   eax,DWORD PTR ds:[esi]
  402ba5:	pop    ss
  402ba6:	push   es
  402ba7:	loope  0x402b54
  402ba9:	jne    0x402bd0
  402bab:	and    DWORD PTR [ecx],0x72
  402bae:	ret    0xd477
  402bb1:	mov    bh,0xe0
  402bb3:	mov    dl,0x35
  402bb5:	and    DWORD PTR [si-0x33],ebp
  402bb9:	scas   eax,DWORD PTR es:[edi]
  402bba:	(bad)  
  402bbb:	sbb    ch,cl
  402bbd:	(bad)  
  402bbf:	sbb    eax,0x2f21d729
  402bc4:	or     cl,BYTE PTR [edx+0x20]
  402bc7:	mov    DWORD PTR [ebp+edi*1-0x7],ebx
  402bcb:	mov    bl,0xc9
  402bcd:	shr    bh,cl
  402bcf:	fisttp WORD PTR [ecx+0x6f]
  402bd2:	scas   al,BYTE PTR es:[edi]
  402bd3:	pxor   mm1,mm7
  402bd6:	add    eax,DWORD PTR [edi-0x5e05f4f5]
  402bdc:	push   ebp
  402bdd:	pusha  
  402bde:	xchg   esi,eax
  402bdf:	mov    edx,0xcde5f716
  402be4:	out    0x72,al
  402be6:	lods   al,BYTE PTR ds:[esi]
  402be7:	repz (bad) 
  402be9:	in     al,dx
  402bea:	add    al,0x45
  402bec:	dec    esi
  402bed:	cmp    DWORD PTR [edx+0x1c],esp
  402bf0:	xor    eax,0x67e95b73
  402bf5:	in     eax,0x20
  402bf7:	dec    esp
  402bf8:	int3   
  402bf9:	repz sbb eax,0x7726779a
  402bff:	xchg   ebp,eax
  402c00:	ret    0xf3bb
  402c03:	push   cs
  402c04:	add    eax,0xef5178c2
  402c09:	pusha  
  402c0a:	sub    eax,0x645e5aa1
  402c0f:	jns    0x402bbb
  402c11:	gs dec edi
  402c13:	mov    eax,0x82056b78
  402c18:	(bad)  
  402c19:	aad    0x44
  402c1b:	push   ecx
  402c1c:	jmp    0xfcae10f9
  402c21:	and    al,0x2e
  402c23:	ret    0xc039
  402c26:	in     al,dx
  402c27:	inc    esp
  402c28:	fstp   QWORD PTR [ecx-0x7cadc8]
  402c2e:	cli    
  402c2f:	ja     0x402c07
  402c31:	xor    edi,DWORD PTR [edi]
  402c33:	xchg   edi,eax
  402c34:	mov    eax,ds:0x4cf62ac0
  402c39:	dec    esp
  402c3a:	jnp    0x402c81
  402c3c:	js     0x402c83
  402c3e:	imul   esp,DWORD PTR [eax],0xf52f317c
  402c44:	mov    ah,0x46
  402c46:	push   ss
  402c47:	inc    ebx
  402c48:	cmp    al,0x48
  402c4a:	pop    esi
  402c4b:	call   0x1501035d
  402c50:	das    
  402c51:	mov    ecx,0x7925
  402c56:	add    ecx,DWORD PTR [ecx-0x42]
  402c59:	je     0x402c39
  402c5b:	mov    ch,0x6f
  402c5d:	push   0xffffffdf
  402c5f:	mov    ch,0xa3
  402c61:	pop    ds
  402c62:	scas   eax,DWORD PTR es:[edi]
  402c63:	inc    ebp
  402c64:	adc    al,0x11
  402c66:	sbb    dl,BYTE PTR [esi-0x42]
  402c69:	(bad)  
  402c6a:	mov    bl,0x6
  402c6c:	push   ebx
  402c6d:	mov    ebx,0xea0b9aa5
  402c72:	sub    esi,DWORD PTR ss:[edi+ebp*8+0x2fed7e56]
  402c7a:	ret    
  402c7b:	rcl    ch,cl
  402c7d:	mov    edi,0xdbf7267e
  402c82:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  402c84:	fstp   st(1)
  402c86:	imul   ebp,DWORD PTR [ebp+0x44],0xd66d616d
  402c8d:	out    dx,eax
  402c8e:	dec    ecx
  402c8f:	jmp    0x38ab29b2
  402c94:	jp     0x402c2f
  402c96:	ret    0xa478
  402c99:	adc    dh,BYTE PTR [ecx+0x0]
  402c9c:	loopne 0x402cc9
  402c9e:	push   ebx
  402c9f:	loop   0x402cf5
  402ca1:	add    eax,0x29a4d057
  402ca6:	adc    DWORD PTR ds:0x813ec356,ebx
  402cac:	mov    WORD PTR [edi-0xa],es
  402caf:	shr    BYTE PTR [ebx-0x3d90af4f],1
  402cb5:	push   eax
  402cb6:	(bad)  
  402cb7:	out    dx,al
  402cb8:	xchg   ebx,eax
  402cb9:	xchg   edx,eax
  402cba:	jbe    0x402c5a
  402cbc:	add    al,BYTE PTR [eax-0x26]
  402cbf:	xchg   DWORD PTR [edx],ebx
  402cc1:	pusha  
  402cc2:	xchg   ebx,eax
  402cc3:	mov    dh,0x46
  402cc5:	scas   al,BYTE PTR es:[edi]
  402cc6:	les    esp,FWORD PTR [esp+eiz*2-0x404aa6eb]
  402ccd:	push   ds
  402cce:	xlat   BYTE PTR ds:[ebx]
  402ccf:	xchg   edx,eax
  402cd0:	add    esi,edx
  402cd2:	test   ch,bl
  402cd4:	xor    DWORD PTR [esi+0x14cb842f],edi
  402cda:	mov    edx,0xc5b09a63
  402cdf:	(bad)  
  402ce0:	cwde   
  402ce1:	mov    eax,ds:0x8d436102
  402ce6:	ss push ebx
  402ce8:	ins    BYTE PTR es:[edi],dx
  402ce9:	into   
  402cea:	mov    dh,0xb2
  402cec:	int3   
  402ced:	dec    DWORD PTR [edi-0x6e394996]
  402cf3:	fwait
  402cf4:	xchg   ebp,eax
  402cf5:	cdq    
  402cf6:	call   0xb241:0x4155749d
  402cfd:	gs (bad) 
  402cff:	enter  0x386f,0x31
  402d03:	je     0x402c8d
  402d05:	or     eax,DWORD PTR [ecx+0xc]
  402d08:	(bad)  
  402d09:	mov    ebx,0x826c0fcb
  402d0e:	into   
  402d0f:	enter  0x403d,0xac
  402d13:	jne    0x402d70
  402d15:	xor    DWORD PTR [esi-0x2b],ebx
  402d18:	(bad)  
  402d19:	in     al,dx
  402d1a:	dec    edx
  402d1b:	mov    ds:0xdad70330,al
  402d20:	mov    ah,0xe9
  402d22:	retf   
  402d23:	mov    esi,0x5aa2a9e3
  402d28:	sub    ebp,ebx
  402d2a:	mov    ch,ch
  402d2c:	cs dec edi
  402d2e:	xor    eax,0xf07ad7dd
  402d33:	xor    eax,0x12c25a20
  402d38:	ds fsub st,st(1)
  402d3b:	cdq    
  402d3c:	sbb    ebp,DWORD PTR [ebp+0x21]
  402d3f:	cmp    BYTE PTR [ebp+edi*1-0x71109d5c],dl
  402d46:	mov    ecx,0xc6d60e1a
  402d4b:	scas   eax,DWORD PTR es:[edi]
  402d4c:	pop    ebp
  402d4d:	xchg   esp,eax
  402d4e:	push   edi
  402d4f:	xchg   esp,eax
  402d50:	jmp    0x514e:0xb73a62ea
  402d57:	(bad)  
  402d58:	int    0x5c
  402d5a:	or     DWORD PTR [esi-0xc39068a],esp
  402d60:	(bad)  
  402d61:	cmp    bl,BYTE PTR [ecx+0x26eb5a5a]
  402d67:	sub    DWORD PTR [ebp-0xd],esi
  402d6a:	jne    0x402d4c
  402d6c:	or     dh,BYTE PTR ds:0xe3fa8483
  402d72:	rcl    BYTE PTR [edx+edi*4+0x7661e376],0xa9
  402d7a:	jp     0x402cfe
  402d7c:	xor    esp,ebp
  402d7e:	test   edx,eax
  402d80:	xchg   BYTE PTR [ebp+0x77],ch
  402d83:	push   ds
  402d84:	stos   DWORD PTR es:[edi],eax
  402d85:	jle    0x402d28
  402d87:	(bad)  
  402d88:	pop    edi
  402d89:	fcomp  QWORD PTR [edx-0x36173cc6]
  402d8f:	test   DWORD PTR ds:0x8c3b7239,eax
  402d95:	add    eax,0x260a9909
  402d9a:	retf   0xf43d
  402d9d:	add    eax,0xf8a36e5c
  402da2:	outs   dx,DWORD PTR ds:[esi]
  402da3:	sbb    ebx,ecx
  402da5:	scas   al,BYTE PTR es:[edi]
  402da6:	xor    BYTE PTR [edi+0xea6394e],0x6e
  402dad:	sbb    eax,0x382629d9
  402db2:	fst    st(5)
  402db4:	push   0x65
  402db6:	sub    al,0xa9
  402db8:	int    0x85
  402dba:	adc    cl,ah
  402dbc:	and    BYTE PTR [edx],ch
  402dbe:	loopne 0x402d7b
  402dc0:	mov    esi,0x5369faaf
  402dc5:	int    0xb8
  402dc7:	out    dx,eax
  402dc8:	lods   al,BYTE PTR ds:[esi]
  402dc9:	repz ss stc 
  402dcc:	into   
  402dcd:	pushf  
  402dce:	push   ds
  402dcf:	sub    al,0x3b
  402dd1:	push   edx
  402dd2:	aas    
  402dd3:	xor    dh,BYTE PTR ds:0x3cfa7257
  402dd9:	or     eax,0x316ab49f
  402dde:	call   0xc2:0x283d4793
  402de5:	sti    
  402de6:	(bad)  
  402de7:	(bad)  
  402de8:	rcl    DWORD PTR [esi+0x113234bb],1
  402dee:	sbb    DWORD PTR [eax-0x4b],edi
  402df1:	pusha  
  402df2:	xchg   esp,eax
  402df3:	fdiv   st,st(3)
  402df5:	mov    edi,0xe21a9415
  402dfa:	pop    ds
  402dfb:	out    dx,eax
  402dfc:	rcr    DWORD PTR [edi+ebx*8],1
  402dff:	sub    DWORD PTR [ebx-0x2496a2be],edx
  402e05:	ret    
  402e06:	mov    dl,0xa9
  402e08:	xchg   esi,eax
  402e09:	ror    BYTE PTR [eax-0x1f],cl
  402e0c:	sbb    eax,0x7196d824
  402e11:	scas   al,BYTE PTR es:[edi]
  402e12:	loopne 0x402dce
  402e14:	cmp    BYTE PTR [ebx-0x10],cl
  402e17:	mov    eax,0x72c31bd4
  402e1c:	lods   eax,DWORD PTR ds:[esi]
  402e1d:	enter  0xe08b,0x7c
  402e21:	cmp    eax,0x938c0421
  402e26:	imul   esp,DWORD PTR [ecx-0x32],0xa
  402e2a:	dec    ebx
  402e2b:	daa    
  402e2c:	adc    al,0x8a
  402e2e:	and    eax,0x9af3e58f
  402e33:	xor    DWORD PTR [edx],0x15c5df57
  402e39:	mov    es,WORD PTR [ebx-0x4ee281de]
  402e3f:	sbb    eax,ecx
  402e41:	test   al,0x1f
  402e43:	add    WORD PTR [esi],0x6e81
  402e48:	lahf   
  402e49:	out    0xaf,al
  402e4b:	mov    esi,0xdf96c414
  402e50:	dec    esp
  402e51:	cmp    ebx,esi
  402e53:	icebp  
  402e54:	shl    al,cl
  402e56:	mov    ah,0x44
  402e58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e59:	aam    0x95
  402e5b:	jae    0x402ec6
  402e5d:	push   ebp
  402e5e:	pusha  
  402e5f:	cmc    
  402e60:	sub    ch,bl
  402e62:	ret    0x4d8d
  402e65:	adc    ah,BYTE PTR [ecx]
  402e67:	out    dx,eax
  402e68:	pushf  
  402e69:	adc    eax,DWORD PTR [ebx-0x64639d81]
  402e6f:	popf   
  402e70:	add    DWORD PTR [edx+0x62],ebx
  402e73:	fnstsw WORD PTR [eax]
  402e75:	out    0x24,eax
  402e77:	popf   
  402e78:	xchg   DWORD PTR [eax-0x40],esi
  402e7b:	push   ss
  402e7c:	push   ecx
  402e7d:	mov    esi,0x5b7bc780
  402e82:	and    DWORD PTR [esi+esi*4+0x13],esp
  402e86:	out    0x64,eax
  402e88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e89:	jmp    0x402e92
  402e8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e8c:	into   
  402e8d:	lahf   
  402e8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e8f:	stos   BYTE PTR es:[edi],al
  402e90:	leave  
  402e91:	and    BYTE PTR [ebp+0x2f],0xcc
  402e95:	test   al,0xa4
  402e97:	repnz mov WORD PTR [edx+0x3b9fe010],?
  402e9e:	adc    BYTE PTR [ecx],dl
  402ea0:	and    cx,WORD PTR [ecx+0x52cbee3c]
  402ea7:	mov    ah,BYTE PTR [edx+0x1f86471a]
  402ead:	out    dx,eax
  402eae:	pop    ebx
  402eaf:	fldenv [ecx]
  402eb1:	jb     0x402ec3
  402eb3:	mov    ebp,0x32b9fcf6
  402eb8:	push   DWORD PTR [ebp+ebp*1+0x4c0e935f]
  402ebf:	sub    DWORD PTR [ebx-0x1e2f3085],esi
  402ec5:	xchg   BYTE PTR ds:0xd5e88356,al
  402ecb:	(bad)  
  402ecc:	push   cs
  402ecd:	pandn  mm4,QWORD PTR [edx+0x5e]
  402ed1:	imul   esi,ebx,0xa
  402ed4:	or     esp,DWORD PTR [ecx]
  402ed6:	je     0x402ef7
  402ed8:	mov    ds:0x1f987647,eax
  402edd:	scas   al,BYTE PTR es:[edi]
  402ede:	push   0xbcc50092
  402ee3:	sub    eax,0x6898b42a
  402ee8:	popa   
  402ee9:	pop    ss
  402eea:	push   ebx
  402eeb:	fmul   st,st(1)
  402eed:	or     eax,DWORD PTR [ecx+esi*1]
  402ef0:	push   cs
  402ef1:	xchg   edx,eax
  402ef2:	(bad)  
  402ef3:	mov    BYTE PTR [ebx],ah
  402ef5:	call   0xf53f:0x10ac8c90
  402efc:	push   0x39f60e3c
  402f01:	adc    BYTE PTR [bx+si],dh
  402f04:	inc    ebx
  402f05:	adc    ch,BYTE PTR [edx+0x2a]
  402f08:	lahf   
  402f09:	cld    
  402f0a:	cmc    
  402f0b:	mov    dh,0x54
  402f0d:	loopne 0x402f40
  402f0f:	add    ebp,edi
  402f11:	(bad)  
  402f12:	push   0xffffff88
  402f14:	sbb    DWORD PTR [esp+ebp*1-0x43],ecx
  402f18:	arpl   bx,bx
  402f1a:	and    BYTE PTR [esi+eiz*1-0x352f93ef],0xb4
  402f22:	sbb    edi,DWORD PTR [ecx-0x5f]
  402f25:	mov    esp,0x6735077
  402f2a:	adc    DWORD PTR [esi+0x5],esp
  402f2d:	mov    dh,0x65
  402f2f:	xchg   ecx,eax
  402f30:	or     ah,BYTE PTR [eax-0x75]
  402f33:	pop    ecx
  402f34:	sar    ebx,1
  402f36:	dec    edx
  402f37:	jns    0x402ef0
  402f39:	mov    al,0x8f
  402f3b:	ins    BYTE PTR es:[edi],dx
  402f3c:	pop    ds
  402f3d:	out    dx,al
  402f3e:	and    ch,bh
  402f40:	or     DWORD PTR [edx-0x35925c92],esi
  402f46:	xor    al,0x23
  402f48:	(bad)  
  402f49:	out    dx,eax
  402f4a:	(bad)  
  402f4b:	mov    dl,0x41
  402f4d:	rcr    BYTE PTR [edi],0x12
  402f50:	or     BYTE PTR [edx-0x52],dh
  402f53:	rol    al,cl
  402f55:	mov    bl,0x8f
  402f57:	inc    ecx
  402f58:	cwde   
  402f59:	sti    
  402f5a:	retf   0x662
  402f5d:	imul   eax,ecx,0xfb5a11d1
  402f63:	dec    ebx
  402f64:	push   ecx
  402f65:	icebp  
  402f66:	mov    eax,ds:0xe06ea96d
  402f6b:	inc    ecx
  402f6c:	test   BYTE PTR [esp+ebp*2],bl
  402f6f:	aad    0x2a
  402f71:	dec    edi
  402f72:	stc    
  402f73:	and    ebp,DWORD PTR [ebx]
  402f75:	leave  
  402f76:	cmp    eax,DWORD PTR ds:0xe232eae0
  402f7c:	cwde   
  402f7d:	ret    
  402f7e:	and    edx,DWORD PTR [edx]
  402f80:	push   0xffffffa4
  402f82:	(bad)  [eax-0x32]
  402f85:	ins    DWORD PTR es:[edi],dx
  402f86:	jb     0x402fdd
  402f88:	push   0x5ef70dd4
  402f8d:	pop    ebx
  402f8e:	retf   
  402f8f:	mov    esp,0x55143de1
  402f94:	mov    bh,0x78
  402f96:	outs   dx,BYTE PTR ds:[esi]
  402f97:	arpl   WORD PTR [ebx+0x38d5707e],bx
  402f9d:	loopne 0x402f60
  402f9f:	mov    ebx,0xa1e05889
  402fa4:	icebp  
  402fa5:	aaa    
  402fa6:	pop    esi
  402fa7:	or     BYTE PTR [ecx+0x6],bl
  402faa:	mov    ebp,0x20beb3c8
  402faf:	pop    ebx
  402fb0:	dec    ebp
  402fb1:	jle    0x402fd7
  402fb3:	cmp    esi,DWORD PTR [esi]
  402fb5:	and    ah,BYTE PTR [edx+eax*8-0x389e6084]
  402fbc:	jmp    0x402faf
  402fbe:	cmp    eax,0x4b069851
  402fc3:	and    eax,0x898328c8
  402fc8:	jmp    0x402fb1
  402fca:	rcl    DWORD PTR [esi],cl
  402fcc:	inc    eax
  402fcd:	test   DWORD PTR [edx-0x52],esp
  402fd0:	mov    cl,dl
  402fd2:	jge    0x40304c
  402fd4:	call   0x48ef:0x59d781b1
  402fdb:	icebp  
  402fdc:	outs   dx,BYTE PTR ds:[esi]
  402fdd:	pop    ebp
  402fde:	mov    esp,0x738f4124
  402fe3:	(bad)  
  402fe4:	aas    
  402fe5:	inc    esp
  402fe6:	cld    
  402fe7:	(bad)  
  402fe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fe9:	pop    edi
  402fea:	icebp  
  402feb:	test   al,0xc0
  402fee:	mov    ch,0xfd
  402ff0:	sub    ebx,DWORD PTR [edx]
  402ff2:	ja     0x402fd0
  402ff4:	push   esp
  402ff5:	and    eax,DWORD PTR [ebx]
  402ff7:	mov    bh,0xcb
  402ff9:	lods   eax,DWORD PTR ds:[esi]
  402ffa:	(bad)  
  402ffc:	ror    DWORD PTR fs:[esp+ecx*8],0x3b
  403001:	jno    0x402f9c
  403003:	repz cdq 
  403005:	call   FWORD PTR fs:[eax+0x40ed8408]
  40300c:	mov    BYTE PTR ds:0xc6cfefa3,bh
  403012:	into   
  403013:	adc    bh,BYTE PTR [esi+0x46]
  403016:	sub    eax,0xae7b1a80
  40301b:	xor    eax,0x9850f13f
  403020:	xor    al,0xc6
  403022:	xchg   BYTE PTR [eax-0x79],bh
  403025:	add    cl,dl
  403027:	loop   0x402fd4
  403029:	jnp    0x40304d
  40302b:	sub    DWORD PTR [di-0x34f3],0xffffffc0
  403031:	mov    ds:0x4b3bae3,al
  403036:	mov    dh,0x11
  403038:	enter  0xa98b,0x9c
  40303c:	sbb    al,0xab
  40303e:	into   
  40303f:	test   DWORD PTR [esi+0x43],ecx
  403042:	adc    DWORD PTR [esi],0xffffff82
  403045:	call   0x4a9f:0xe2e139a7
  40304c:	iret   
  40304d:	pusha  
  40304e:	jmp    0xa902:0xf7f4c5be
  403055:	pop    edi
  403056:	aaa    
  403057:	inc    esi
  403058:	cmp    eax,0x89fb6a15
  40305d:	mov    ecx,0x2975caad
  403062:	sbb    DWORD PTR [ecx+ebx*8],eax
  403065:	daa    
  403066:	sub    cl,BYTE PTR [esi-0x5f]
  403069:	clc    
  40306a:	mov    esi,0x4abf8f39
  40306f:	xor    dh,BYTE PTR [ebp+0x29fee1]
  403075:	shr    DWORD PTR [ecx-0x60d613d6],1
  40307b:	jbe    0x40305c
  40307d:	pop    ebp
  40307e:	mov    bl,0x34
  403080:	mov    edi,0xe7453cbf
  403085:	mov    bl,0x41
  403087:	loopne 0x403021
  403089:	mov    ecx,0x9d06dcf1
  40308e:	into   
  40308f:	jne    0x403069
  403091:	sbb    DWORD PTR [esi+edi*4],ebx
  403094:	sub    DWORD PTR [eax-0x7e195331],0xffffff9c
  40309b:	pop    esi
  40309c:	mov    ch,0xec
  40309e:	pop    edx
  40309f:	add    DWORD PTR [edx],0xfbab37e5
  4030a5:	cli    
  4030a6:	cmp    ch,BYTE PTR [bx+di-0xa]
  4030aa:	lahf   
  4030ab:	pusha  
  4030ac:	fdecstp 
  4030ae:	push   ds
  4030af:	(bad)  
  4030b0:	jno    0x403066
  4030b2:	leave  
  4030b3:	push   es
  4030b4:	std    
  4030b5:	dec    edx
  4030b6:	in     al,dx
  4030b7:	ss jns 0x403071
  4030ba:	sbb    al,0x91
  4030bc:	jmp    0x4030ec
  4030be:	bound  esp,QWORD PTR [ebp-0x44]
  4030c1:	sub    esp,DWORD PTR [edx+0x2e]
  4030c4:	mov    bl,BYTE PTR [edx]
  4030c6:	lds    edx,FWORD PTR [eax-0xe6edf3f]
  4030cc:	das    
  4030cd:	push   ss
  4030ce:	push   ecx
  4030cf:	push   ebx
  4030d0:	or     BYTE PTR [edx-0x69166185],cl
  4030d6:	daa    
  4030d7:	sbb    eax,0xf073f854
  4030dc:	jg     0x403114
  4030de:	cmp    al,0x24
  4030e0:	test   ax,0x84e6
  4030e4:	and    BYTE PTR [eax+0x49e2950d],ah
  4030ea:	popa   
  4030eb:	clc    
  4030ec:	push   ebx
  4030ed:	nop
  4030ee:	pop    esp
  4030ef:	jnp    0x4030ad
  4030f1:	inc    ecx
  4030f2:	xchg   esi,eax
  4030f3:	ror    BYTE PTR [ecx-0x5792a0b3],1
  4030f9:	xor    BYTE PTR [ebx+0x2e1d3919],ah
  4030ff:	sbb    ebx,DWORD PTR [eax+0x5d56aa9a]
  403105:	cmc    
  403106:	sbb    DWORD PTR [esi+0x7],eax
  403109:	sbb    dh,bl
  40310b:	neg    BYTE PTR [ecx-0x5f]
  40310e:	fimul  WORD PTR [edx+0x7a]
  403111:	lods   al,BYTE PTR ds:[esi]
  403112:	mov    esi,DWORD PTR [eax]
  403114:	sbb    al,0x9
  403116:	inc    ebx
  403117:	and    al,0xf4
  403119:	data16 mov bh,0x52
  40311c:	xchg   edi,eax
  40311d:	cdq    
  40311e:	xor    bh,BYTE PTR [esi+0x7ce9f293]
  403124:	cwde   
  403125:	pop    ebp
  403126:	add    eax,0xef316004
  40312b:	arpl   WORD PTR [edx+0x3fccf864],di
  403131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403132:	dec    eax
  403133:	js     0x403105
  403135:	or     bh,BYTE PTR [edx+0x25]
  403138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403139:	fwait
  40313a:	pop    esi
  40313b:	push   ds
  40313c:	sub    al,0x62
  40313e:	pop    es
  40313f:	pop    ss
  403140:	dec    eax
  403141:	enter  0x51bd,0x15
  403145:	repz (bad) 
  403147:	std    
  403148:	mov    ah,0x86
  40314a:	shl    BYTE PTR [edx],1
  40314c:	and    al,0xfe
  40314e:	and    ecx,ecx
  403150:	or     DWORD PTR [ebp+ebp*8+0x38],0x26
  403155:	aas    
  403156:	add    al,0x29
  403158:	loopne 0x4031cb
  40315a:	and    BYTE PTR [edx+0x2],dl
  40315d:	or     DWORD PTR [esi-0x36],ecx
  403160:	pop    esp
  403161:	push   ebx
  403162:	lsl    ebp,WORD PTR [ecx+0x2ca4514d]
  403169:	fsub   QWORD PTR [esp+eiz*8]
  40316c:	mov    ds:0x88276199,al
  403171:	clc    
  403172:	and    BYTE PTR [ecx],dh
  403174:	push   edx
  403175:	jno    0x4030ff
  403177:	scas   eax,DWORD PTR es:[edi]
  403178:	jo     0x4031e9
  40317a:	cmp    esi,edi
  40317c:	sahf   
  40317d:	dec    esp
  40317e:	pop    eax
  40317f:	jmp    0x403191
  403181:	cwde   
  403182:	jl     0x403173
  403184:	lea    esi,[edx+eax*2+0x65c87be1]
  40318b:	cmc    
  40318c:	mov    bh,0xeb
  40318e:	inc    ebp
  40318f:	xor    BYTE PTR [esp+ecx*2],bh
  403192:	xchg   edi,eax
  403193:	int3   
  403194:	lock mov ebp,0xd6ed24e0
  40319a:	mov    edi,0xd3b47ed8
  40319f:	jae    0x403141
  4031a1:	rcl    BYTE PTR [ecx+0x552652cf],1
  4031a7:	lds    edi,FWORD PTR [edi]
  4031a9:	adc    esp,DWORD PTR [esi]
  4031ab:	inc    DWORD PTR [ebp+0x6f4c1e16]
  4031b1:	pop    ebx
  4031b2:	push   esp
  4031b3:	push   0xffffffc1
  4031b5:	jge    0x40316e
  4031b7:	sbb    esi,DWORD PTR [ebx+ebp*8-0x71]
  4031bb:	push   ebp
  4031bc:	popa   
  4031bd:	cld    
  4031be:	inc    BYTE PTR [edx]
  4031c0:	sub    al,0xe4
  4031c2:	push   0xffffffc2
  4031c4:	or     BYTE PTR [edx],ch
  4031c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031c8:	leave  
  4031c9:	or     al,0xe8
  4031cb:	mov    eax,ds:0x24543fe2
  4031d0:	inc    esi
  4031d1:	add    esp,DWORD PTR [ecx+0x23b16826]
  4031d7:	push   ds
  4031d8:	mov    ecx,es
  4031da:	xor    BYTE PTR fs:[ebp-0x67562f48],0x6c
  4031e2:	repz jbe 0x40322f
  4031e5:	add    DWORD PTR [ebp+ebp*4+0x3],ebx
  4031e9:	or     edi,DWORD PTR [edi-0x69]
  4031ec:	inc    ebp
  4031ed:	jl     0x4031c7
  4031ef:	icebp  
  4031f0:	repnz sbb DWORD PTR [ebx+eiz*4],ebx
  4031f4:	mov    DWORD PTR [eax+0x13],0x286a27d7
  4031fb:	add    ebp,DWORD PTR [ecx-0x5f]
  4031fe:	pop    esp
  4031ff:	or     DWORD PTR [ebp+0x16],edi
  403202:	sub    al,0x8
  403204:	jecxz  0x403212
  403206:	bound  eax,QWORD PTR [edx+0x51]
  403209:	es xchg edi,eax
  40320b:	in     eax,dx
  40320c:	xor    DWORD PTR [esp+ebp*1+0x72],esi
  403210:	or     al,0x76
  403212:	dec    esi
  403213:	xor    DWORD PTR [ecx],ebp
  403215:	push   ecx
  403216:	rcl    BYTE PTR [esi+0x10],0xbd
  40321a:	daa    
  40321b:	pop    es
  40321c:	mov    ecx,0x2c96b25f
  403221:	pop    es
  403222:	iret   
  403223:	(bad)  
  403224:	lods   al,BYTE PTR ds:[esi]
  403225:	dec    ebp
  403226:	(bad)  
  403227:	clc    
  403228:	outs   dx,BYTE PTR ds:[esi]
  403229:	scas   al,BYTE PTR es:[edi]
  40322a:	push   ss
  40322b:	add    DWORD PTR [esp+edx*4+0x79e554f1],eax
  403232:	sti    
  403233:	add    BYTE PTR [esi+0x136a0f99],dh
  403239:	jle    0x4032a9
  40323b:	push   ecx
  40323c:	mov    dl,0x8a
  40323e:	mov    eax,ds:0x33c8bbdc
  403243:	push   edx
  403244:	iret   
  403245:	stc    
  403246:	push   eax
  403247:	stos   DWORD PTR es:[edi],eax
  403248:	add    al,BYTE PTR [ebx-0x49a32c13]
  40324e:	jp     0x40326d
  403250:	push   ebp
  403251:	mov    eax,0x5a57d1e9
  403256:	cmp    al,0x73
  403258:	mov    eax,DWORD PTR [esi-0xab6b2e5]
  40325e:	sbb    dh,bl
  403260:	aam    0x30
  403262:	jmp    0x4032a0
  403264:	jne    0x40324c
  403266:	and    dh,dl
  403268:	aam    0x1b
  40326a:	dec    esi
  40326b:	xchg   ecx,eax
  40326c:	xchg   esp,eax
  40326d:	or     al,0x86
  40326f:	mov    bh,0xff
  403271:	adc    BYTE PTR [edx-0x45],ch
  403274:	aaa    
  403275:	std    
  403276:	inc    edi
  403277:	jmp    0xaf778779
  40327c:	xchg   edx,eax
  40327d:	shl    BYTE PTR [ebx-0x4e],1
  403280:	mov    cl,0x51
  403282:	(bad)  
  403283:	lea    esp,[ebx-0x22]
  403286:	ret    0x5ea9
  403289:	inc    ecx
  40328a:	sub    eax,0xf8d59761
  40328f:	mov    edi,0x6f5d89ac
  403294:	jns    0x40323b
  403296:	ffreep st(6)
  403298:	cmp    dh,BYTE PTR [ebx]
  40329a:	xor    DWORD PTR [esi+0x65],esp
  40329d:	loopne 0x40324d
  40329f:	sbb    dh,BYTE PTR [eax+0x6b]
  4032a2:	push   esi
  4032a3:	jnp    0x40325b
  4032a5:	pop    edi
  4032a6:	(bad)  
  4032a7:	out    dx,eax
  4032a8:	sub    BYTE PTR [ebx],bl
  4032aa:	and    eax,0xdc0794ae
  4032af:	jg     0x4032b7
  4032b1:	xchg   ecx,eax
  4032b2:	mov    bh,0x97
  4032b4:	inc    ebp
  4032b5:	(bad)  
  4032b7:	or     bl,BYTE PTR [edi+ebp*4+0x6c336a53]
  4032be:	inc    esp
  4032bf:	push   0x33
  4032c1:	add    edi,DWORD PTR [esi]
  4032c3:	xchg   ebp,eax
  4032c4:	loop   0x40324b
  4032c6:	mov    al,0xea
  4032c8:	pop    es
  4032c9:	hlt    
  4032ca:	jo     0x4032e9
  4032cc:	pop    ds
  4032cd:	jns    0x4032c0
  4032cf:	out    0x43,al
  4032d1:	or     al,al
  4032d3:	sbb    al,0x9d
  4032d5:	and    eax,DWORD PTR cs:[ebp+0x6f]
  4032d9:	jbe    0x403291
  4032db:	out    0xfd,eax
  4032dd:	mov    ah,0x70
  4032df:	xor    BYTE PTR [ebx],0x92
  4032e2:	sub    dh,0xeb
  4032e5:	mov    bl,0x82
  4032e7:	cld    
  4032e8:	sub    al,0x40
  4032ea:	dec    DWORD PTR [ecx-0x42]
  4032ed:	jae    0x40327d
  4032ef:	out    dx,al
  4032f0:	outs   dx,DWORD PTR ds:[esi]
  4032f1:	call   0x3de2:0x9ca30bdf
  4032f8:	ins    DWORD PTR es:[edi],dx
  4032f9:	dec    eax
  4032fa:	mov    ebx,0x8a63ae3c
  4032ff:	push   ebx
  403300:	add    BYTE PTR [edi-0x73ab6d40],ah
  403306:	data16 mov BYTE PTR [edx-0x20],bh
  40330a:	inc    ebp
  40330b:	mov    edx,DWORD PTR [ebx]
  40330d:	and    bh,cl
  40330f:	fidiv  WORD PTR [edx]
  403311:	out    dx,al
  403312:	js     0x403349
  403314:	or     ah,ah
  403316:	inc    ebx
  403317:	rol    DWORD PTR [ebp+0x68],1
  40331a:	mov    edx,0xc5fceed7
  40331f:	ret    
  403320:	lahf   
  403321:	push   edx
  403322:	pop    ecx
  403323:	shr    BYTE PTR [ebx-0x453c6258],1
  403329:	dec    esp
  40332a:	clc    
  40332b:	xor    eax,0x6b422309
  403330:	xor    DWORD PTR [edx+0x1a],ebx
  403333:	leave  
  403334:	cmp    ebp,DWORD PTR [ebp-0x561680c]
  40333a:	call   0x403c:0xe670f043
  403341:	xor    BYTE PTR ds:0xd9754fc2,ch
  403347:	int    0xc2
  403349:	in     eax,dx
  40334a:	in     eax,dx
  40334b:	(bad)  
  40334c:	jb     0x4033a9
  40334e:	push   esp
  40334f:	xchg   ebp,eax
  403350:	xchg   ecx,eax
  403351:	fwait
  403352:	mov    ebx,0x9cfc5437
  403357:	ss inc eax
  403359:	cvttps2pi mm4,QWORD PTR [eax]
  40335c:	fmul   QWORD PTR [esi]
  40335e:	test   eax,0x95d361cf
  403363:	fs inc ebp
  403365:	fisttp DWORD PTR [ebx]
  403367:	hlt    
  403368:	mov    edx,0xb244eae
  40336d:	and    al,ch
  40336f:	or     al,0x3f
  403371:	repnz mov al,0x27
  403374:	dec    edx
  403375:	lods   al,BYTE PTR ds:[esi]
  403376:	sti    
  403377:	dec    eax
  403378:	(bad)  
  403379:	xor    eax,0x72057b75
  40337e:	add    dh,dh
  403380:	ret    
  403381:	aas    
  403382:	push   0xffffffed
  403384:	scas   eax,DWORD PTR es:[edi]
  403385:	(bad)  
  403386:	push   edx
  403387:	mov    eax,0x4658e546
  40338c:	addr16 push 0xffffff81
  40338f:	dec    ebp
  403390:	push   eax
  403391:	js     0x4033c0
  403393:	add    bl,al
  403395:	(bad)  
  403396:	push   ecx
  403397:	xchg   esp,eax
  403398:	jbe    0x403411
  40339a:	out    dx,al
  40339b:	rcr    BYTE PTR [esi],0xd6
  40339e:	and    edi,DWORD PTR [eax+eiz*2-0x37e214e2]
  4033a5:	sbb    bh,BYTE PTR [ebp+0x3940b6c0]
  4033ab:	pop    eax
  4033ac:	retf   0xb94c
  4033af:	and    al,0x4c
  4033b1:	sbb    DWORD PTR [edi+0x30ea2f3e],ecx
  4033b7:	jle    0x403374
  4033b9:	ret    
  4033ba:	sbb    edx,ebp
  4033bc:	nop
  4033bd:	mov    dl,0x57
  4033bf:	sbb    DWORD PTR [eax+0x3f314462],ebx
  4033c5:	sbb    DWORD PTR [esp+eiz*2],ecx
  4033c8:	push   cs
  4033c9:	jle    0x40343b
  4033cb:	add    BYTE PTR [edx+0x17851bd0],cl
  4033d1:	arpl   sp,si
  4033d3:	pop    ebx
  4033d4:	div    BYTE PTR [eax+0x5a94ce41]
  4033da:	push   ss
  4033db:	or     dh,BYTE PTR [ebx]
  4033dd:	test   DWORD PTR [edi+eax*4-0x2c],eax
  4033e1:	pusha  
  4033e2:	push   es
  4033e3:	adc    eax,0xdcb0ef41
  4033e8:	and    BYTE PTR [ebx+0x7d],al
  4033eb:	mov    ?,ecx
  4033ed:	out    0x80,al
  4033ef:	add    eax,0xb359a4fa
  4033f4:	int    0x86
  4033f6:	daa    
  4033f7:	mov    ecx,DWORD PTR [eax]
  4033f9:	stos   DWORD PTR es:[edi],eax
  4033fa:	sbb    BYTE PTR [edx],ch
  4033fc:	call   0x2c55a652
  403401:	xchg   BYTE PTR [edi+0x25],ah
  403404:	pop    ebx
  403405:	shl    DWORD PTR [eax+ecx*8-0x2eb63a01],cl
  40340c:	icebp  
  40340d:	and    al,al
  40340f:	enter  0xe711,0xdd
  403413:	xchg   esp,eax
  403414:	mov    eax,es
  403416:	push   ebp
  403417:	jo     0x4033fe
  403419:	xor    al,dh
  40341b:	les    eax,FWORD PTR [edx+0x29]
  40341e:	xchg   DWORD PTR [ebx],ecx
  403420:	fs not esp
  403423:	push   ebp
  403424:	cmp    ebx,edi
  403426:	mov    eax,ds:0x59325e84
  40342b:	add    ecx,DWORD PTR [ecx+0x6d3ef6f3]
  403431:	popa   
  403432:	test   eax,0xf75c3d46
  403437:	mov    ch,0x6d
  403439:	xor    DWORD PTR [edx],eax
  40343b:	sbb    DWORD PTR [esi+edi*8+0x15],ebp
  40343f:	loope  0x403474
  403441:	(bad)
  403444:	into   
  403445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403446:	call   0x5eff:0x772f9362
  40344d:	mov    esp,0xeb08aff8
  403452:	push   edx
  403453:	(bad)  
  403455:	push   esi
  403456:	mov    ecx,0xfd4ff760
  40345b:	inc    ecx
  40345c:	gs ror ecx,1
  40345f:	mov    esi,0x33fada6e
  403464:	rcl    BYTE PTR [ebx+edi*4],1
  403467:	test   bh,0xda
  40346a:	cmp    BYTE PTR [esi-0x4917ea8e],0x41
  403471:	(bad)  
  403473:	jp     0x4034c7
  403475:	inc    ebx
  403476:	or     al,0x3a
  403478:	xor    ebp,edi
  40347a:	pop    edx
  40347b:	jg     0x40340c
  40347d:	xchg   edi,eax
  40347e:	rcl    DWORD PTR ds:0xddbd23db,0x60
  403485:	sub    BYTE PTR [ecx],0x22
  403488:	and    BYTE PTR [edi+0x78],dl
  40348b:	aaa    
  40348c:	push   cs
  40348d:	cmp    edx,DWORD PTR ds:0xe6a416b1
  403493:	adc    al,0x9b
  403495:	mov    ds:0x9e732151,al
  40349a:	dec    ebx
  40349b:	outs   dx,DWORD PTR ds:[esi]
  40349c:	sub    edi,eax
  40349e:	test   DWORD PTR [ecx+ebx*4+0x62],ebp
  4034a2:	mov    edx,0xe45d7b50
  4034a7:	sub    BYTE PTR [ecx-0x5d31b03e],0x81
  4034ae:	or     al,0xe1
  4034b0:	push   ecx
  4034b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034b2:	mov    gs,WORD PTR [ecx+ecx*1]
  4034b5:	js     0x403463
  4034b7:	pop    edx
  4034b8:	inc    edx
  4034b9:	xlat   BYTE PTR ds:[ebx]
  4034ba:	arpl   WORD PTR [esi],bx
  4034bc:	arpl   WORD PTR [ebx],si
  4034be:	xchg   ebp,eax
  4034bf:	outs   dx,BYTE PTR ds:[esi]
  4034c0:	mov    edx,DWORD PTR [bp+di+0x50bc]
  4034c5:	cli    
  4034c6:	shr    DWORD PTR fs:[eax+0x7],cl
  4034ca:	sbb    eax,0x4b1c85e2
  4034cf:	repnz adc eax,edi
  4034d2:	push   ecx
  4034d3:	lahf   
  4034d4:	ror    DWORD PTR [ebp-0xa],1
  4034d7:	ins    DWORD PTR es:[edi],dx
  4034d8:	mov    al,ds:0x540169e8
  4034dd:	shl    dh,0xc6
  4034e0:	stos   BYTE PTR es:[edi],al
  4034e1:	dec    edx
  4034e2:	push   edi
  4034e3:	sbb    eax,0xc8e15230
  4034e8:	call   0xcc77:0xf470a10c
  4034ef:	push   ebp
  4034f0:	ss lea edi,cs:[edi-0x58]
  4034f5:	mov    al,0x3f
  4034f7:	in     eax,0x5f
  4034f9:	in     al,0x10
  4034fb:	stos   BYTE PTR es:[edi],al
  4034fc:	pop    esp
  4034fd:	mov    dh,0x62
  4034ff:	inc    edx
  403500:	or     al,0x22
  403502:	pop    esi
  403503:	sub    eax,0xa24a4ddd
  403508:	call   0xb1bd:0xa7a71e27
  40350f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403510:	adc    DWORD PTR [edi+eax*1],eax
  403513:	push   edx
  403514:	mov    eax,0x7a97b3dc
  403519:	cs dec edx
  40351b:	je     0x40351a
  40351d:	or     DWORD PTR [edx-0x37],ebp
  403520:	add    al,0x91
  403522:	mov    ch,0xf6
  403524:	xor    al,0xf7
  403526:	pop    edx
  403527:	dec    eax
  403528:	jp     0x403578
  40352a:	xor    BYTE PTR [edx-0x7a037a35],cl
  403530:	jp     0x4035b0
  403532:	or     dl,BYTE PTR [esi+0x56d784b8]
  403538:	addr16 mov eax,esp
  40353b:	mov    eax,ds:0x6f29850c
  403540:	inc    edx
  403541:	jns    0x40351e
  403543:	sub    BYTE PTR [edx+ecx*2],dh
  403546:	imul   ebx,ebx,0x85261d77
  40354c:	xchg   esp,eax
  40354d:	sub    al,0x61
  40354f:	jne    0x40357e
  403551:	out    dx,eax
  403552:	inc    ecx
  403553:	fldln2 
  403555:	cmp    eax,0x3c4d9794
  40355a:	sbb    edi,DWORD PTR ds:0x1506e659
  403560:	lods   eax,DWORD PTR ds:[esi]
  403561:	pop    ss
  403562:	mov    fs,WORD PTR [edi-0x43]
  403565:	scas   al,BYTE PTR es:[edi]
  403566:	ret    
  403567:	and    edi,ebx
  403569:	xchg   ecx,eax
  40356a:	repnz cmp BYTE PTR [esi],al
  40356d:	lahf   
  40356e:	dec    ebx
  40356f:	dec    esi
  403570:	push   ecx
  403571:	mov    ebx,DWORD PTR [ebx]
  403573:	mov    edx,0xf08b49a3
  403578:	imul   ebx,DWORD PTR [eax+0x30060ead],0x7049e788
  403582:	jge    0x403574
  403584:	adc    al,0x4a
  403586:	cld    
  403587:	sbb    eax,0xa7ece522
  40358c:	cmp    dh,ch
  40358e:	adc    BYTE PTR [edi+0x76],dl
  403591:	loopne 0x40355b
  403593:	dec    esi
  403594:	loope  0x40355e
  403596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403597:	or     ch,BYTE PTR [ecx-0x1d25d946]
  40359d:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40359f:	out    0x7f,al
  4035a1:	pminsw mm4,mm3
  4035a4:	sub    BYTE PTR [edx+0x46],al
  4035a7:	ret    
  4035a8:	cwde   
  4035a9:	push   cs
  4035aa:	dec    ebp
  4035ab:	into   
  4035ac:	sub    dl,BYTE PTR [eax+0x3f]
  4035af:	xchg   esi,eax
  4035b0:	rcr    DWORD PTR [ebx+esi*2+0x79],0xa6
  4035b5:	stos   BYTE PTR es:[edi],al
  4035b6:	mov    esp,0x8856b117
  4035bb:	jne    0x4035ab
  4035bd:	push   esi
  4035be:	mov    esi,0xc8676f70
  4035c3:	adc    esp,ebp
  4035c5:	mov    esp,0xc3ea244f
  4035ca:	call   0x6744:0xdeddc507
  4035d1:	xor    BYTE PTR [edx+0x216ce548],bl
  4035d7:	mov    bl,0x3e
  4035d9:	ficomp WORD PTR [esp-0x48]
  4035dd:	clc    
  4035de:	xchg   ecx,esi
  4035e0:	adc    al,0x42
  4035e2:	sub    al,0x64
  4035e4:	or     DWORD PTR [eax],edx
  4035e6:	mov    ebx,0xb0937b08
  4035eb:	ffree  st(3)
  4035ed:	shr    BYTE PTR [ebx-0x45],1
  4035f0:	adc    esi,DWORD PTR [edx+ebp*1]
  4035f3:	dec    edi
  4035f4:	dec    eax
  4035f5:	bound  edi,QWORD PTR ds:0x7796b74f
  4035fb:	loope  0x40364d
  4035fd:	pop    ss
  4035fe:	fwait
  4035ff:	mov    dh,0xb0
  403601:	in     al,dx
  403602:	in     al,0x22
  403604:	xor    eax,0x414ab1ca
  403609:	dec    ebp
  40360a:	mov    DWORD PTR [edx],0xe61f4631
  403610:	fdiv   QWORD PTR [eax-0x3ef2f665]
  403616:	sbb    bh,BYTE PTR [eax]
  403618:	dec    esp
  403619:	jae    0x40362b
  40361b:	and    BYTE PTR [edi+0x71268635],cl
  403621:	aad    0x58
  403623:	push   0xb3f57bd2
  403628:	push   0x5a6766db
  40362d:	xchg   eax,esi
  40362f:	retf   
  403630:	xchg   edi,eax
  403631:	shr    al,1
  403633:	sub    ebp,eax
  403635:	cwde   
  403636:	das    
  403637:	sar    ebx,0xe
  40363a:	mov    ebp,0xa1ba258f
  40363f:	mov    al,BYTE PTR [ebx-0x51]
  403642:	xor    DWORD PTR [esi+ebp*4-0x66656f07],0x2444f57c
  40364d:	aam    0x15
  40364f:	push   es
  403650:	sbb    cl,0xa4
  403653:	inc    ebx
  403654:	rcr    BYTE PTR [esi-0x3bac2f07],0xae
  40365b:	lods   al,BYTE PTR ds:[esi]
  40365c:	out    0x44,al
  40365e:	push   eax
  40365f:	pop    edi
  403660:	ins    DWORD PTR es:[edi],dx
  403661:	scas   eax,DWORD PTR es:[edi]
  403662:	dec    ecx
  403663:	cmp    eax,0x4bf07819
  403668:	scas   eax,DWORD PTR es:[edi]
  403669:	retf   
  40366a:	fiadd  DWORD PTR [ebx+0x3c87aae8]
  403670:	sub    ebp,ebx
  403672:	in     eax,0x95
  403674:	cmp    eax,0x7457c180
  403679:	mov    dh,0xf3
  40367b:	sub    ch,bl
  40367d:	pop    ecx
  40367e:	dec    edi
  40367f:	mov    esi,0xc75347d0
  403684:	or     eax,0xc6a47d98
  403689:	push   eax
  40368a:	xchg   edx,eax
  40368b:	test   DWORD PTR [ecx],eax
  40368d:	aad    0xe6
  40368f:	lds    eax,FWORD PTR [eax]
  403691:	inc    esp
  403692:	add    ch,0x98
  403695:	(bad)  
  403696:	mov    esp,0x771c7125
  40369b:	fmul   st(1),st
  40369d:	xlat   BYTE PTR ds:[ebx]
  40369e:	out    dx,eax
  40369f:	lock pushf 
  4036a1:	data16 (bad) 
  4036a3:	mov    WORD PTR [esi+0x23],gs
  4036a6:	inc    eax
  4036a7:	cmp    BYTE PTR [ecx-0x5e138a09],0x9d
  4036ae:	adc    eax,0x1b3cdb54
  4036b3:	pop    edx
  4036b4:	ds or  al,0xd4
  4036b7:	cmc    
  4036b8:	adc    al,0x31
  4036ba:	mov    eax,ds:0x69b0b9aa
  4036bf:	mov    ebp,?
  4036c1:	jne    0x40366e
  4036c3:	jp     0x73b3f135
  4036c9:	in     eax,dx
  4036ca:	mov    ah,0x8c
  4036cc:	mov    ebx,DWORD PTR [edx]
  4036ce:	loop   0x4036a5
  4036d0:	mov    edi,ds
  4036d2:	call   0xf730:0x4c96f437
  4036d9:	mov    ebx,0x3917ed01
  4036de:	or     al,0xe4
  4036e0:	xlat   BYTE PTR ds:[ebx]
  4036e1:	xor    eax,0xcfe1f418
  4036e6:	jmp    0x4362e289
  4036eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036ec:	mov    WORD PTR [ebx-0x2f],cs
  4036ef:	sbb    edi,esp
  4036f1:	jmp    0x4036c2
  4036f3:	mov    bl,0x4
  4036f5:	xor    edx,esi
  4036f7:	pusha  
  4036f8:	xlat   BYTE PTR ds:[ebx]
  4036f9:	jmp    0x40370c
  4036fb:	stos   DWORD PTR es:[edi],eax
  4036fc:	scas   eax,DWORD PTR es:[edi]
  4036fd:	jl     0x4036a1
  4036ff:	mov    ds:0x81f0118c,al
  403704:	or     DWORD PTR [ecx],ebx
  403706:	mov    ebx,ebx
  403708:	jns    0x4036c4
  40370a:	sub    eax,0x5ecb0626
  40370f:	jle    0x4036a1
  403711:	push   ds
  403712:	adc    edx,edx
  403714:	dec    esi
  403715:	mov    ds:0x48bfdfde,eax
  40371a:	mov    esp,0x95770e6b
  40371f:	aam    0x4d
  403721:	test   al,0x1c
  403723:	adc    eax,DWORD PTR [esi+0x5e]
  403726:	rcr    BYTE PTR [esi+0x33cb9a70],cl
  40372c:	in     al,dx
  40372d:	iret   
  40372e:	sub    al,0xe6
  403730:	lods   al,BYTE PTR ds:[esi]
  403731:	mov    bh,0xbf
  403733:	icebp  
  403734:	jle    0x40372a
  403736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403737:	cmp    ebp,DWORD PTR [edx+0x5c]
  40373a:	jg     0x4036dd
  40373c:	out    dx,eax
  40373d:	stc    
  40373e:	imul   ebx,DWORD PTR [ebp-0x3c10d92a],0x13bcbca4
  403748:	iret   
  403749:	mov    WORD PTR [ebp+0x2fb2e750],?
  40374f:	mov    ebx,0x9fd0f7b6
  403754:	aaa    
  403755:	outs   dx,BYTE PTR ds:[esi]
  403756:	in     eax,dx
  403757:	adc    BYTE PTR [esi+esi*2-0x60],al
  40375b:	lea    ebx,[ebx-0x636696fc]
  403761:	jno    0x4037a0
  403763:	pop    es
  403764:	pop    esp
  403765:	leave  
  403766:	ficom  WORD PTR [eax-0x31]
  403769:	push   edi
  40376a:	ins    BYTE PTR es:[edi],dx
  40376b:	adc    al,0xf7
  40376d:	cmc    
  40376e:	push   eax
  40376f:	sub    eax,0xab8ce538
  403774:	jg     0x4037ef
  403776:	mov    ds:0x6fe17a45,eax
  40377b:	and    al,0x5a
  40377d:	fild   QWORD PTR [edx+0x76f056f]
  403783:	mov    cl,0x19
  403785:	test   al,0xd9
  403787:	ret    0x8cd3
  40378a:	scas   al,BYTE PTR es:[edi]
  40378b:	cs (bad) 
  40378d:	in     eax,dx
  40378e:	stos   BYTE PTR es:[edi],al
  40378f:	fwait
  403790:	outs   dx,BYTE PTR ds:[esi]
  403791:	jno    0x403716
  403793:	sub    esi,edi
  403795:	xchg   BYTE PTR [ebx],cl
  403797:	data16 xor al,0x12
  40379a:	xchg   BYTE PTR [edx],al
  40379c:	adc    ch,bh
  40379e:	push   DWORD PTR [esi+0x64]
  4037a1:	iret   
  4037a2:	or     eax,0xdaca5f81
  4037a7:	sbb    eax,0x887606a3
  4037ac:	sub    dl,ah
  4037ae:	retf   
  4037af:	mov    edx,0xbca44a41
  4037b4:	mov    esi,0xf973b782
  4037b9:	cmp    eax,DWORD PTR [eax]
  4037bb:	fild   DWORD PTR ds:0xbc3b80ae
  4037c1:	scas   al,BYTE PTR es:[edi]
  4037c2:	pop    edi
  4037c3:	push   esp
  4037c4:	bound  edx,QWORD PTR [ebx+eax*4]
  4037c7:	nop
  4037c8:	inc    eax
  4037c9:	lds    ebx,FWORD PTR [edx-0x3f]
  4037cc:	(bad)  
  4037cd:	loop   0x403802
  4037cf:	(bad)  
  4037d0:	iret   
  4037d1:	inc    esp
  4037d2:	pop    ss
  4037d3:	test   DWORD PTR [ecx+0x47a3760c],edx
  4037d9:	dec    eax
  4037da:	imul   ecx,DWORD PTR [edx+eax*1-0x41],0x4e727bed
  4037e2:	xor    al,0x59
  4037e4:	call   DWORD PTR [esi-0x249dfc1a]
  4037ea:	add    al,0x8c
  4037ec:	sub    BYTE PTR [esi+0x73ee1e67],0x80
  4037f3:	adc    al,0x8c
  4037f5:	cwde   
  4037f6:	inc    esi
  4037f7:	xor    al,0xfe
  4037f9:	cmc    
  4037fa:	jnp    0x4037b1
  4037fc:	pop    esp
  4037fd:	sbb    BYTE PTR [ebp+0x8c1c641],ch
  403803:	gs mov ch,0x46
  403806:	ds jnp 0x403794
  403809:	xor    al,BYTE PTR [ebp-0x67]
  40380c:	and    DWORD PTR [eax+0x9],edi
  40380f:	stc    
  403810:	and    al,BYTE PTR [ebx+0x61]
  403813:	add    DWORD PTR [eax],eax
  403815:	outs   dx,DWORD PTR ds:[esi]
  403816:	dec    edx
  403817:	cld    
  403818:	sti    
  403819:	in     eax,0xdc
  40381b:	push   edi
  40381c:	or     eax,0x6b7447ab
  403821:	mov    al,ds:0x12cc357c
  403826:	inc    ebx
  403827:	jg     0x4037b6
  403829:	push   DWORD PTR [esi+0x692955cc]
  40382f:	mov    ecx,ebp
  403831:	test   BYTE PTR [ecx-0x33],al
  403834:	dec    edx
  403835:	std    
  403836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403837:	loopne 0x4038a4
  403839:	jmp    0x5a6fcb14
  40383e:	loopne 0x4038a3
  403840:	call   0xfdcbec96
  403845:	adc    al,0x9
  403847:	(bad)  
  403849:	mov    edi,DWORD PTR ds:0x3a364769
  40384f:	sub    eax,0xde82cf67
  403854:	cmp    BYTE PTR [ebx],cl
  403856:	xchg   esi,eax
  403857:	ficomp DWORD PTR [esi]
  403859:	and    al,0xaf
  40385b:	add    DWORD PTR [ebx-0x26],0x7f
  40385f:	push   edi
  403860:	push   edx
  403861:	pop    esi
  403862:	xor    DWORD PTR [eax],esi
  403864:	fist   DWORD PTR [eax]
  403866:	cld    
  403867:	adc    al,0xfe
  403869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40386a:	in     al,0xcd
  40386c:	sbb    DWORD PTR [ebx-0x285166a9],ecx
  403872:	add    eax,0xfd41e242
  403877:	and    ecx,DWORD PTR [esi-0x69]
  40387a:	mov    edx,0x9d1b2f66
  40387f:	pop    eax
  403880:	mov    BYTE PTR [edx],al
  403882:	bnd lock jo 0x403819
  403886:	push   ds
  403887:	cmp    eax,0xd9f99600
  40388c:	cmp    DWORD PTR [ebp+ebx*1-0x4d],edx
  403890:	cdq    
  403891:	or     eax,DWORD PTR [edi+0x7d8b56c2]
  403897:	call   0x85a3:0x468ccf96
  40389e:	repz push ecx
  4038a0:	addr16 xor al,0xea
  4038a3:	xchg   ecx,eax
  4038a4:	mov    dl,0x1d
  4038a6:	sbb    al,0xff
  4038a8:	cmc    
  4038a9:	or     eax,0xa5f9222e
  4038ae:	popf   
  4038af:	sbb    esp,DWORD PTR [ecx]
  4038b1:	adc    edi,DWORD PTR [edi+0x37aa81e4]
  4038b7:	and    eax,0x677cf66
  4038bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038bd:	nop
  4038be:	xor    al,cl
  4038c0:	inc    edi
  4038c1:	or     DWORD PTR [esi+0x24],0x48
  4038c5:	add    al,0x8
  4038c7:	ret    
  4038c8:	xor    eax,0xb6c29cb5
  4038cd:	and    BYTE PTR [edi],cl
  4038cf:	stc    
  4038d0:	(bad)  
  4038d2:	pop    ebx
  4038d3:	sbb    esi,DWORD PTR [ecx+ebx*2-0x7da2297a]
  4038da:	aad    0xfe
  4038dc:	lea    ebp,[ebp+0x47]
  4038df:	ret    
  4038e0:	and    eax,0xc8d326a6
  4038e5:	inc    edx
  4038e6:	in     al,0xde
  4038e8:	mov    ss,WORD PTR [ecx+0x6a]
  4038eb:	outs   dx,DWORD PTR ds:[esi]
  4038ec:	ror    cl,1
  4038ee:	jmp    0x4038ba
  4038f0:	pop    di
  4038f2:	test   BYTE PTR [ebp-0x3f82e9b4],ah
  4038f8:	push   edi
  4038f9:	mov    dh,0x68
  4038fb:	fidiv  WORD PTR [eax-0x328a58d4]
  403901:	rcl    BYTE PTR [edi-0x3d],cl
  403904:	(bad)  
  403905:	and    eax,0x47cf2065
  40390a:	pop    eax
  40390b:	pop    es
  40390c:	test   BYTE PTR [ebx-0x445fa08f],cl
  403912:	sub    al,al
  403914:	out    dx,eax
  403915:	jbe    0x40396c
  403917:	jbe    0x403938
  403919:	sub    al,0xbf
  40391b:	sub    al,0xe1
  40391d:	inc    ecx
  40391e:	outs   dx,DWORD PTR ds:[esi]
  40391f:	sub    ch,cl
  403921:	jmp    0x4038c5
  403923:	adc    ebp,ecx
  403925:	add    DWORD PTR [ecx-0x60d1a0fb],esi
  40392b:	clc    
  40392c:	or     al,0xa5
  40392e:	xchg   ebx,eax
  40392f:	mov    ?,WORD PTR [edi+0x73]
  403932:	shl    BYTE PTR [ebx-0x29],0xed
  403936:	dec    ebp
  403937:	lods   al,BYTE PTR ds:[esi]
  403938:	sbb    eax,DWORD PTR [eax]
  40393a:	push   esp
  40393b:	cwde   
  40393c:	mov    edi,0xa4a6362b
  403941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403942:	push   ebx
  403943:	xchg   edi,eax
  403944:	shr    DWORD PTR [ecx+0x7ebf88ae],1
  40394a:	pusha  
  40394b:	fs aam 0x8c
  40394e:	xlat   BYTE PTR ds:[ebx]
  40394f:	mov    edx,0x8b6c228d
  403954:	push   0x2e
  403956:	push   ebx
  403957:	adc    BYTE PTR [ecx-0x7554807],al
  40395d:	retf   
  40395e:	push   ebx
  40395f:	lds    esp,FWORD PTR [ecx+0x73]
  403962:	dec    edi
  403963:	push   es
  403964:	and    dl,dl
  403966:	aam    0x35
  403968:	jle    0x4039b5
  40396a:	jmp    0x6e18:0x46d185d7
  403971:	inc    ebp
  403972:	fs mov ebp,0xa92e304c
  403978:	iret   
  403979:	add    DWORD PTR [ebx-0xb],esi
  40397c:	jae    0x40399b
  40397e:	inc    edi
  40397f:	jl     0x4039bc
  403981:	test   DWORD PTR [ebx-0x80],ebx
  403984:	push   ecx
  403985:	call   0xff78:0x5e8996ed
  40398c:	call   DWORD PTR [ecx]
  40398e:	cmp    DWORD PTR [eax+0xbd6a294],esi
  403994:	ins    BYTE PTR es:[edi],dx
  403995:	iret   
  403996:	popa   
  403997:	mov    bl,0xf8
  403999:	js     0x403a12
  40399b:	aam    0xdb
  40399d:	sti    
  40399e:	mov    ds:0x4c249dde,al
  4039a3:	fwait
  4039a4:	adc    eax,DWORD PTR [edi+0x43]
  4039a7:	mov    BYTE PTR [edx-0x41],dl
  4039aa:	sar    edi,cl
  4039ac:	jno    0x40398e
  4039ae:	inc    eax
  4039af:	push   ebx
  4039b0:	hlt    
  4039b1:	mul    BYTE PTR [edi+0x44]
  4039b4:	cdq    
  4039b5:	jbe    0x4039c6
  4039b7:	pop    ebp
  4039b8:	dec    esi
  4039b9:	inc    ecx
  4039ba:	cmp    BYTE PTR [edi+0x3d],al
  4039bd:	cmp    BYTE PTR [eax-0x25e95d41],0xed
  4039c4:	stc    
  4039c5:	(bad)  
  4039c6:	fild   DWORD PTR [eax]
  4039c8:	adc    ah,BYTE PTR [ebx+0x6d7e92dd]
  4039ce:	adc    al,0x12
  4039d0:	scas   eax,DWORD PTR es:[edi]
  4039d1:	and    esp,eax
  4039d3:	shr    dl,1
  4039d5:	ficomp WORD PTR [ecx+eax*2-0x66]
  4039d9:	mov    esp,0xd7410810
  4039de:	int3   
  4039df:	sbb    eax,0xb4ab5fc4
  4039e4:	pusha  
  4039e5:	cld    
  4039e6:	mov    bh,0x4c
  4039e8:	mov    dl,0x66
  4039ea:	mov    eax,ds:0xa7b6e221
  4039ef:	cwde   
  4039f0:	mov    bl,0xf2
  4039f2:	push   es
  4039f3:	sete   cl
  4039f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039f7:	and    BYTE PTR [ecx+0xc],dl
  4039fa:	test   al,0x4a
  4039fc:	imul   ebx,ebp,0x318af80b
  403a02:	call   0x2388e88
  403a07:	adc    BYTE PTR [eax-0x3461df9b],0x9d
  403a0e:	cmp    esp,DWORD PTR [eax+edi*1+0x761df534]
  403a15:	mov    al,0x42
  403a17:	ret    0x5316
  403a1a:	imul   esi,ecx,0x7da58b16
  403a20:	and    ch,al
  403a22:	xchg   esp,eax
  403a23:	fnsetpm(287 only) 
  403a25:	ss rcr esp,0xc8
  403a29:	out    dx,al
  403a2a:	lods   al,BYTE PTR ds:[esi]
  403a2b:	and    BYTE PTR [esi+0x1ae36dee],al
  403a31:	adc    edx,DWORD PTR [ebx]
  403a33:	jp     0x403a90
  403a35:	dec    ebx
  403a37:	jae    0x403a70
  403a39:	cwde   
  403a3a:	call   0x6da19421
  403a3f:	mov    dl,BYTE PTR [ecx+eax*4+0x1a789019]
  403a46:	fnsave [ecx]
  403a48:	out    dx,al
  403a49:	jbe    0x403a60
  403a4b:	push   cs
  403a4c:	xchg   esp,eax
  403a4d:	mov    esp,0x1242ce48
  403a52:	(bad)  
  403a53:	mov    dl,0xda
  403a55:	sbb    eax,0xcf547d33
  403a5a:	sbb    DWORD PTR [eax-0x42],ebp
  403a5d:	sbb    BYTE PTR [ecx+ebp*4],0x14
  403a61:	stos   BYTE PTR es:[edi],al
  403a62:	in     eax,dx
  403a63:	int    0xc
  403a65:	mov    ebp,0xf6b2a7ba
  403a6a:	push   ss
  403a6b:	and    dh,cl
  403a6d:	lock mov al,ds:0x17578460
  403a73:	mov    bl,0x8e
  403a75:	sub    eax,0x2daa2903
  403a7a:	push   0xa755b9c7
  403a7f:	mov    esi,0xc576af87
  403a84:	call   0x890c04d
  403a89:	inc    eax
  403a8a:	jle    0x403ad3
  403a8c:	fwait
  403a8d:	xor    al,0xa9
  403a8f:	les    ecx,FWORD PTR [edx+0x4709f847]
  403a95:	cmp    ecx,DWORD PTR [eax-0x49317f5c]
  403a9b:	rcl    esp,cl
  403a9d:	in     al,0x76
  403a9f:	fdivrp st(5),st
  403aa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403aa2:	mov    al,0xa0
  403aa4:	jp     0x403aa0
  403aa6:	inc    eax
  403aa7:	ret    0x4a2e
  403aaa:	jp     0x403ac7
  403aac:	cmp    ch,0xf2
  403aaf:	mov    ah,0xe4
  403ab1:	cli    
  403ab2:	retf   0x7a19
  403ab5:	mov    ds:0xbf80adc7,eax
  403aba:	pop    edi
  403abb:	xor    al,0x7d
  403abd:	push   edx
  403abe:	xchg   edx,eax
  403abf:	outs   dx,DWORD PTR ds:[esi]
  403ac0:	xchg   edx,eax
  403ac1:	and    eax,0xd0eeb64
  403ac6:	push   0x3e82db31
  403acb:	inc    eax
  403acc:	sbb    BYTE PTR [esi],dh
  403ace:	add    esi,DWORD PTR [edx]
  403ad0:	stos   DWORD PTR es:[edi],eax
  403ad1:	xchg   esp,eax
  403ad2:	test   dh,bh
  403ad4:	dec    esp
  403ad5:	loop   0x403aaf
  403ad7:	or     DWORD PTR [edx+0x68],0x6d
  403adb:	imul   ecx,DWORD PTR [ecx+0x13],0xffffffe0
  403adf:	jl     0x403acf
  403ae1:	adc    dh,ch
  403ae3:	dec    edi
  403ae4:	hlt    
  403ae5:	int3   
  403ae6:	jno    0x403b15
  403ae8:	pop    ss
  403ae9:	loopne 0x403b2b
  403aeb:	adc    ebx,DWORD PTR [edx-0x79168b4b]
  403af1:	mov    eax,0x4da062f7
  403af6:	add    esp,edx
  403af8:	push   es
  403af9:	jns    0x403ae9
  403afb:	and    DWORD PTR [esp+ebp*4-0xc],esi
  403aff:	adc    ebx,DWORD PTR [eax]
  403b01:	imul   ecx,ebp,0xbfbd2b53
  403b07:	sub    BYTE PTR [ebx-0x66],0xd5
  403b0b:	gs cld 
  403b0d:	xchg   ebx,eax
  403b0e:	mov    al,ds:0x5e4bb432
  403b13:	adc    esi,DWORD PTR [esi]
  403b15:	aam    0x34
  403b17:	scas   eax,DWORD PTR es:[edi]
  403b18:	push   esp
  403b19:	sub    DWORD PTR [eax+edi*2],0x1659bf3a
  403b20:	out    0x61,eax
  403b22:	xchg   esp,eax
  403b23:	sub    DWORD PTR [edx],edx
  403b25:	outs   dx,BYTE PTR ds:[esi]
  403b26:	imul   ecx,ecx,0x23cb8286
  403b2c:	mov    ebp,0x27d99ad8
  403b31:	outs   dx,DWORD PTR ds:[esi]
  403b32:	mov    esi,0xe5cf31c
  403b37:	dec    ecx
  403b38:	ins    DWORD PTR es:[edi],dx
  403b39:	call   0x597b:0xc59a6902
  403b40:	bswap  edi
  403b42:	push   ss
  403b43:	or     DWORD PTR [ecx-0x2226d4b0],ecx
  403b49:	jns    0x403b58
  403b4b:	add    cl,BYTE PTR [ebp+esi*2-0x4eff24b3]
  403b52:	loope  0x403b55
  403b54:	call   0x644b6867
  403b59:	push   ss
  403b5a:	into   
  403b5b:	cmp    BYTE PTR [eax+0x454b69f],al
  403b61:	out    0xc8,al
  403b63:	arpl   dx,cx
  403b65:	gs mov ch,0x1b
  403b68:	adc    ah,BYTE PTR [edi-0x65]
  403b6b:	imul   ecx,DWORD PTR [edi+ecx*4+0x34fa8b4],0x16f525b9
  403b76:	outs   dx,BYTE PTR ds:[esi]
  403b77:	rcl    ch,0x45
  403b7a:	push   ds
  403b7b:	mov    ch,0xda
  403b7d:	inc    edi
  403b7e:	call   0x378db606
  403b83:	pop    ss
  403b84:	test   DWORD PTR [ebp+ebx*4+0x2e500708],0x8932f5e5
  403b8f:	popf   
  403b90:	xor    ah,bh
  403b92:	loop   0x403be2
  403b94:	imul   ebx,DWORD PTR [ebp+0x65a39c57],0xf1e5eca1
  403b9e:	inc    edi
  403b9f:	mov    DWORD PTR [ecx-0x4ef1c5cd],esp
  403ba5:	and    ebp,ebx
  403ba7:	inc    esp
  403ba8:	xor    DWORD PTR [esi-0x36],0x7b
  403bac:	test   BYTE PTR [esi+0x1a7ff5e3],bh
  403bb2:	out    dx,al
  403bb3:	pop    ss
  403bb4:	fisttp QWORD PTR [eax-0x220861ff]
  403bba:	in     al,0x24
  403bbc:	mov    cl,0x83
  403bbe:	fwait
  403bbf:	lds    edi,FWORD PTR [ecx]
  403bc1:	es mov edi,0xf3800122
  403bc7:	mov    dl,BYTE PTR [edx+eiz*1]
  403bca:	fidivr DWORD PTR [edx+0x23]
  403bcd:	and    DWORD PTR [ebx],ebp
  403bcf:	mov    al,ds:0xbc73acab
  403bd4:	add    BYTE PTR [edx+0x1c],cl
  403bd7:	pop    es
  403bd8:	push   0x62ff7a3b
  403bdd:	sbb    DWORD PTR [edx-0x4b],edx
  403be0:	sbb    dh,BYTE PTR [ebp+0x6009e223]
  403be6:	imul   ebp,DWORD PTR [edi+0x70b69ff7],0x7f3356e3
  403bf0:	push   es
  403bf1:	std    
  403bf2:	mov    esi,0xae80ad44
  403bf7:	add    DWORD PTR [ebx],esi
  403bf9:	mov    bh,0x9
  403bfb:	pusha  
  403bfc:	(bad)  
  403bfd:	cld    
  403bfe:	or     ch,cl
  403c00:	out    dx,al
  403c01:	call   0x4c9:0x29ea3e79
  403c08:	adc    al,0xb
  403c0a:	and    esi,ebp
  403c0c:	(bad)  
  403c0d:	stos   DWORD PTR es:[edi],eax
  403c0e:	and    eax,0xcd5594f
  403c13:	or     eax,0x6e081f4e
  403c18:	cmpxchg ah,bh
  403c1b:	rcl    DWORD PTR [esi-0x34761e34],0x19
  403c22:	dec    esp
  403c23:	repz rcr DWORD PTR [esi+0x74],1
  403c27:	sub    BYTE PTR [ebx+0x48],dh
  403c2a:	enter  0x8bad,0xaf
  403c2e:	pop    edx
  403c2f:	dec    edx
  403c30:	ja     0x403c78
  403c32:	mov    ecx,0x33bc9702
  403c37:	addr16 lahf 
  403c39:	hlt    
  403c3a:	push   eax
  403c3b:	cmc    
  403c3c:	in     eax,0xac
  403c3e:	jae    0x403c45
  403c40:	in     eax,dx
  403c41:	loopne 0x403c1f
  403c43:	dec    ebp
  403c44:	loope  0x403c3e
  403c46:	jns    0x403bdd
  403c48:	push   0x39
  403c4a:	mov    esi,0xc3b16800
  403c4f:	loopne 0x403bf2
  403c51:	dec    ebx
  403c52:	rcl    cl,0x2b
  403c55:	pop    ss
  403c56:	jbe    0x403cc1
  403c58:	and    eax,0x15839fe4
  403c5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c5e:	mov    al,0xd6
  403c60:	xlat   BYTE PTR ds:[ebx]
  403c61:	(bad)  
  403c63:	mov    BYTE PTR [ebx-0x2b],0x84
  403c67:	mov    ds,WORD PTR ds:0x95546488
  403c6d:	js     0x403c3b
  403c6f:	xchg   ecx,eax
  403c70:	xchg   edi,eax
  403c71:	xlat   BYTE PTR ss:[ebx]
  403c73:	imul   DWORD PTR [ebx+eax*8]
  403c76:	sub    al,0x55
  403c78:	leave  
  403c79:	push   ebx
  403c7a:	popf   
  403c7b:	jne    0x403cea
  403c7d:	jle    0x403c88
  403c7f:	and    al,0x94
  403c81:	sahf   
  403c82:	iret   
  403c83:	adc    DWORD PTR [edi-0x4],0x66a01310
  403c8a:	pop    edx
  403c8c:	pop    es
  403c8d:	stc    
  403c8e:	loopne 0x403c9c
  403c90:	dec    edx
  403c91:	mov    dl,0xdb
  403c93:	inc    esp
  403c94:	mov    edx,0xa1f37f54
  403c99:	test   BYTE PTR [ebx],ch
  403c9b:	cli    
  403c9c:	mov    ebx,0x982cad1a
  403ca1:	push   ds
  403ca2:	mov    BYTE PTR ds:[ecx+0x276a8490],bl
  403ca9:	mov    dl,0x2f
  403cab:	rcl    BYTE PTR [ebp+0x28],1
  403cae:	es in  al,dx
  403cb0:	aam    0x52
  403cb2:	sub    DWORD PTR [edx+0x552f5cb0],eax
  403cb8:	scas   al,BYTE PTR es:[edi]
  403cb9:	adc    DWORD PTR [ebx],esp
  403cbb:	fadd   QWORD PTR [ecx+0x2e]
  403cbe:	xchg   ebp,eax
  403cbf:	fdiv   QWORD PTR [esi]
  403cc1:	xchg   ecx,eax
  403cc2:	pop    edi
  403cc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cc4:	popa   
  403cc5:	(bad)  
  403cc6:	add    al,0x43
  403cc8:	pop    esp
  403cc9:	mov    BYTE PTR [esi],dl
  403ccb:	push   esp
  403ccc:	mov    cl,0x0
  403cce:	pushf  
  403ccf:	xor    BYTE PTR [eax+0x52d0d6b2],dh
  403cd5:	cmp    esp,eax
  403cd7:	imul   esp,eax,0x14aeb151
  403cdd:	inc    esp
  403cde:	or     BYTE PTR es:[esi+ecx*4-0x5978272],ah
  403ce6:	aaa    
  403ce7:	sbb    DWORD PTR [ebp-0x33de0c5c],edi
  403ced:	cs aaa 
  403cef:	mov    BYTE PTR [esi],0x27
  403cf2:	push   eax
  403cf3:	imul   ebp,eax,0xb441d022
  403cf9:	pop    ecx
  403cfa:	dec    ecx
  403cfb:	out    dx,al
  403cfc:	bound  ebx,QWORD PTR [ecx]
  403cfe:	xor    al,0x95
  403d00:	push   ecx
  403d01:	sbb    ch,BYTE PTR [edi]
  403d03:	sbb    DWORD PTR [edi-0x25],esp
  403d06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d07:	mov    dl,BYTE PTR [edx+0x4e79cb26]
  403d0d:	mov    ebp,DWORD PTR [ebx+0x39dd9313]
  403d13:	pop    ecx
  403d14:	in     eax,0xc2
  403d16:	cmp    DWORD PTR [esi-0x4e],edi
  403d19:	and    eax,0xc0bb1185
  403d1e:	and    esp,edi
  403d20:	int3   
  403d21:	mov    ebx,DWORD PTR [eax-0x8]
  403d24:	jbe    0x403d51
  403d26:	and    eax,0x9b67b6da
  403d2b:	pushf  
  403d2c:	loop   0x403d2b
  403d2e:	cbw    
  403d30:	imul   edx,DWORD PTR ds:0x47b31fef,0xffffffd2
  403d37:	(bad)
  403d3a:	jo     0x403d97
  403d3c:	imul   edi,DWORD PTR [ebx+0x4437ad8f],0x18175517
  403d46:	(bad)
  403d4b:	jge    0x403d05
  403d4d:	mov    WORD PTR [ebp+0x3493a073],es
  403d53:	fdivr  st,st(4)
  403d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d56:	mov    bl,0x1f
  403d58:	retf   
  403d59:	mov    ebx,0xc6d2865d
  403d5e:	std    
  403d5f:	test   al,0x94
  403d61:	mov    esi,0x6c15fe5f
  403d66:	push   edi
  403d67:	mov    DWORD PTR [esi],edx
  403d69:	jmp    0x403d8c
  403d6b:	xor    al,0x48
  403d6d:	aas    
  403d6e:	jno    0x403cf3
  403d70:	xchg   esp,eax
  403d71:	push   ecx
  403d72:	int    0x4b
  403d74:	(bad)  
  403d75:	and    bl,cl
  403d77:	pop    edi
  403d78:	mov    dl,0xa
  403d7a:	or     al,0x8
  403d7c:	data16 jmp 0x403d3a
  403d7f:	mov    dh,0x2d
  403d81:	pop    ss
  403d82:	and    eax,0x5f37dab2
  403d87:	jno    0x403db0
  403d89:	or     BYTE PTR [edi+0x4e158254],bh
  403d8f:	xor    DWORD PTR [ecx+ebp*2-0x68040dbd],esi
  403d96:	push   eax
  403d97:	in     al,0x2b
  403d99:	or     DWORD PTR [ebx+0x79],ebx
  403d9c:	dec    esi
  403d9d:	pop    ss
  403d9e:	cmp    al,0x54
  403da0:	retf   0xf925
  403da3:	cwde   
  403da4:	mov    dh,0x8f
  403da6:	push   cs
  403da7:	sbb    DWORD PTR [edi+0x3a5a04dd],esi
  403dad:	xor    BYTE PTR [edx+0x766f4462],dh
  403db3:	and    eax,0xfc3fbd7
  403db8:	mov    ds:0x6c9d7266,al
  403dbd:	out    dx,al
  403dbe:	retf   
  403dbf:	loop   0x403d7e
  403dc1:	adc    dl,bh
  403dc3:	inc    edi
  403dc4:	xor    eax,DWORD PTR [ebx]
  403dc6:	dec    edi
  403dc7:	sbb    cl,BYTE PTR [edi-0x1f]
  403dca:	hlt    
  403dcb:	test   BYTE PTR [edx],0xaf
  403dce:	xchg   edi,eax
  403dcf:	inc    edx
  403dd0:	pop    edx
  403dd1:	(bad)  
  403dd2:	ret    
  403dd3:	xor    bh,BYTE PTR [edi]
  403dd5:	or     DWORD PTR [ecx+0x7b6991d],edx
  403ddb:	in     al,dx
  403ddc:	out    dx,eax
  403ddd:	cmc    
  403dde:	aad    0xfa
  403de0:	cs push edx
  403de2:	push   ebx
  403de3:	mov    ah,BYTE PTR [ecx-0x41e26968]
  403de9:	push   es
  403dea:	les    bp,DWORD PTR [esi-0x58]
  403dee:	push   esi
  403def:	push   es
  403df0:	jl     0x403e1a
  403df2:	push   ecx
  403df3:	mov    esp,0x9310956f
  403df8:	div    DWORD PTR [esi*1+0x63cbfc59]
  403dff:	sub    ebp,DWORD PTR [edi]
  403e01:	dec    edx
  403e02:	cmp    al,0xe6
  403e04:	xchg   edx,eax
  403e05:	inc    ebp
  403e06:	out    0xab,eax
  403e08:	sbb    bl,al
  403e0a:	sahf   
  403e0b:	int3   
  403e0c:	sub    al,0x7d
  403e0e:	lods   al,BYTE PTR ds:[esi]
  403e0f:	in     eax,dx
  403e10:	(bad)  
  403e12:	add    ebx,ecx
  403e14:	pop    edi
  403e15:	cmc    
  403e16:	call   0x2f7dc56e
  403e1b:	je     0x403e3e
  403e1d:	mov    esp,DWORD PTR [ecx-0x54ed30ef]
  403e23:	sbb    dl,BYTE PTR [edx-0x2b]
  403e26:	ins    BYTE PTR es:[edi],dx
  403e27:	dec    ebx
  403e28:	dec    edi
  403e29:	imul   edi,DWORD PTR [edi+0x38],0xfed14b58
  403e30:	popa   
  403e31:	stos   BYTE PTR es:[edi],al
  403e32:	loop   0x403e88
  403e34:	mov    al,ds:0xca0a46d8
  403e39:	jg     0x403e20
  403e3b:	push   ebp
  403e3c:	cmp    eax,0x1a7a2011
  403e41:	(bad)  
  403e43:	xor    BYTE PTR ds:0x4028238a,0xa7
  403e4a:	xor    DWORD PTR [edi+0x2d6effa2],esp
  403e50:	add    DWORD PTR [ecx+eiz*8],edi
  403e53:	in     eax,0x8b
  403e55:	pop    ebx
  403e56:	(bad)  
  403e57:	pop    eax
  403e58:	add    BYTE PTR [ebx-0x4f8fadb7],dh
  403e5e:	dec    eax
  403e5f:	mov    BYTE PTR [ecx+eax*4],ah
  403e62:	adc    ch,BYTE PTR [ecx-0x6a]
  403e65:	cs cld 
  403e67:	clc    
  403e68:	loop   0x403e74
  403e6a:	jbe    0x403e85
  403e6c:	sub    eax,0x9a22757a
  403e71:	jbe    0x403e01
  403e73:	shr    ebx,0x3
  403e76:	mov    ds:0xf1fd2a22,eax
  403e7b:	(bad)  
  403e7c:	xchg   edx,eax
  403e7d:	xchg   esp,eax
  403e7e:	jo     0x403e37
  403e80:	cmc    
  403e81:	mov    eax,0xf82e5bec
  403e86:	cmp    al,0xf1
  403e88:	fwait
  403e89:	push   cs
  403e8a:	int3   
  403e8b:	jo     0x403e92
  403e8d:	into   
  403e8e:	jo     0x403e6e
  403e90:	add    DWORD PTR [ecx],0x2569801d
  403e96:	iret   
  403e97:	and    DWORD PTR [edx+eiz*8-0x57],0xffffffda
  403e9c:	dec    ebx
  403e9d:	pop    ebx
  403e9e:	push   0x73740d54
  403ea3:	mov    ebx,0x8300877
  403ea8:	sub    eax,0xd4d96a9
  403ead:	loopne 0x403e35
  403eaf:	mov    esp,0xae9cfea9
  403eb4:	iret   
  403eb5:	or     al,0x67
  403eb7:	arpl   dx,cx
  403eb9:	inc    eax
  403eba:	mov    DWORD PTR [eax],ebp
  403ebc:	jns    0x403f26
  403ebe:	adc    al,0xe1
  403ec0:	mov    eax,0xb446a231
  403ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ec6:	stos   DWORD PTR es:[edi],eax
  403ec7:	xor    DWORD PTR [esi-0x6c],0xc5aabc4f
  403ece:	mov    edx,0x455f38ab
  403ed3:	xchg   ebx,eax
  403ed4:	and    ebx,eax
  403ed6:	loope  0x403f44
  403ed8:	add    eax,0xe834eb3f
  403edd:	xor    edi,edi
  403edf:	ja     0x403eb9
  403ee1:	in     al,0x48
  403ee3:	repz pop ebp
  403ee5:	inc    ecx
  403ee6:	or     esp,edi
  403ee8:	std    
  403ee9:	and    al,BYTE PTR [ecx]
  403eeb:	scas   eax,DWORD PTR es:[edi]
  403eec:	xor    ah,BYTE PTR [ecx]
  403eee:	(bad)  
  403eef:	fsubr  QWORD PTR [edi+0x72c44b62]
  403ef5:	mov    ebp,0x4d0c482c
  403efa:	(bad)  [esi]
  403efc:	adc    DWORD PTR [ebx+0x5d],eax
  403eff:	gs aaa 
  403f01:	lods   al,BYTE PTR ds:[esi]
  403f02:	add    esi,ecx
  403f04:	ficomp WORD PTR [eax+0x2]
  403f07:	loope  0x403ed0
  403f09:	repnz add al,0x13
  403f0c:	mov    dl,0x27
  403f0e:	into   
  403f0f:	add    al,0x3f
  403f11:	(bad)  
  403f12:	and    ch,ch
  403f14:	push   cs
  403f15:	cdq    
  403f16:	dec    esp
  403f17:	push   ss
  403f18:	retf   
  403f19:	add    BYTE PTR [edx+eiz*2],dh
  403f1c:	(bad)  
  403f1e:	outs   dx,BYTE PTR ds:[esi]
  403f1f:	imul   ebx,DWORD PTR [ecx+0x7d],0x78bc7e6e
  403f26:	jo     0x403ee5
  403f28:	retf   0xe4b9
  403f2b:	ss stos BYTE PTR es:[edi],al
  403f2d:	imul   eax,DWORD PTR [esi+eax*2+0x66bc0ebf],0xa4149d68
  403f38:	imul   edx,DWORD PTR [esi],0xffffff88
  403f3b:	mov    cl,cl
  403f3d:	mov    ds:0x33f43e58,al
  403f42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f43:	xor    esi,eax
  403f45:	fdiv   st,st(0)
  403f47:	inc    ecx
  403f48:	mov    dh,0x58
  403f4a:	jbe    0x403f56
  403f4c:	cwde   
  403f4d:	jne    0x403f6f
  403f4f:	fst    DWORD PTR [eax-0x6b]
  403f52:	out    0xba,eax
  403f54:	sbb    al,0x32
  403f56:	cld    
  403f57:	fcmovnb st,st(0)
  403f59:	iret   
  403f5a:	sbb    al,0x19
  403f5c:	cmp    ah,dl
  403f5e:	push   eax
  403f5f:	hlt    
  403f60:	fucom  st(4)
  403f62:	mov    ebx,0xc552e894
  403f67:	and    BYTE PTR [edi],dh
  403f69:	mov    ss,ebx
  403f6b:	push   ss
  403f6c:	ins    DWORD PTR es:[edi],dx
  403f6d:	xor    al,0x9a
  403f6f:	push   es
  403f70:	push   ecx
  403f71:	aam    0x2d
  403f73:	mov    ah,0xf1
  403f75:	cmp    eax,0xea978b65
  403f7a:	add    al,0xe5
  403f7c:	mov    bh,0xe5
  403f7e:	jmp    0x9d38:0x7aeb768a
  403f85:	ins    BYTE PTR es:[edi],dx
  403f86:	push   edx
  403f87:	(bad)
  403f8a:	or     eax,0x732433d0
  403f8f:	aam    0x83
  403f91:	shl    edx,0x2b
  403f94:	das    
  403f95:	add    cl,BYTE PTR [ebp+0x3cf07b3a]
  403f9b:	pop    es
  403f9c:	mov    ax,0xc8b6
  403fa0:	adc    edi,esp
  403fa2:	inc    ebp
  403fa3:	cld    
  403fa4:	fdiv   DWORD PTR [edi-0x2c]
  403fa7:	pop    ecx
  403fa8:	pop    ebp
  403fa9:	das    
  403faa:	stos   DWORD PTR es:[edi],eax
  403fab:	push   cs
  403fac:	adc    BYTE PTR [esi+0x5f06a3c],al
  403fb2:	jmp    0x99277475
  403fb7:	pop    esi
  403fb8:	xchg   ebx,eax
  403fb9:	fisttp WORD PTR [eax+0x283a8d3f]
  403fbf:	cs rol bh,cl
  403fc2:	xchg   edx,eax
  403fc3:	ss inc edx
  403fc5:	and    dl,BYTE PTR [ecx+ebx*4-0x2990177]
  403fcc:	inc    edi
  403fcd:	ss je  0x403f6f
  403fd0:	cmp    al,0xac
  403fd2:	jg     0x403fcb
  403fd4:	and    edi,DWORD PTR [edx+0x13]
  403fd7:	dec    DWORD PTR [ecx+ebx*2-0x5d1b736d]
  403fde:	pop    esp
  403fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fe0:	mov    eax,0x9769cd8a
  403fe5:	popf   
  403fe6:	xchg   edx,eax
  403fe7:	mov    eax,esp
  403fe9:	cmp    eax,0x8984368d
  403fee:	jmp    0x40403c
  403ff0:	jecxz  0x403fcf
  403ff2:	xchg   ecx,eax
  403ff3:	pushf  
  403ff4:	mov    edx,0x9b1d9f26
  403ff9:	xchg   BYTE PTR [eax+0x3778f024],bh
  403fff:	mov    dh,0x35
  404001:	xchg   ebp,eax
  404002:	into   
  404003:	add    esi,DWORD PTR [edi+eax*1]
  404006:	loopne 0x403fd5
  404008:	inc    edx
  404009:	ret    0x9641
  40400c:	cmp    BYTE PTR [edi-0x53981aad],bl
  404012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404013:	pop    es
  404014:	out    dx,al
  404015:	sub    edi,DWORD PTR [eax-0x11]
  404018:	mov    ds:0x3cf99e24,eax
  40401d:	dec    eax
  40401e:	dec    edx
  40401f:	sar    DWORD PTR [edi+0x66de74c2],1
  404025:	fstp   QWORD PTR ds:0x2375516c
  40402b:	bound  ebp,QWORD PTR [esi+0x37]
  40402e:	out    0xd7,eax
  404030:	mov    al,ds:0x5558b9d4
  404035:	loope  0x40406d
  404037:	call   0x1ae2:0x13376311
  40403e:	cmp    DWORD PTR [edi],ebx
  404040:	add    bl,cl
  404042:	or     cl,BYTE PTR ds:0xb1a519c7
  404048:	adc    DWORD PTR [ecx],0xb5a1572f
  40404e:	(bad)  
  40404f:	and    BYTE PTR ds:0xc0fcc83c,al
  404055:	das    
  404056:	or     al,0x2a
  404058:	stc    
  404059:	jmp    0x96b9:0xb3cd2fe7
  404060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404061:	fidiv  WORD PTR [edx]
  404063:	jo     0x40409a
  404065:	adc    al,ch
  404067:	fistp  QWORD PTR [edx]
  404069:	dec    edi
  40406a:	jb     0x4040c8
  40406c:	fisttp DWORD PTR [eax]
  40406e:	call   0x9a85474b
  404073:	and    bl,al
  404075:	aas    
  404076:	pop    edi
  404077:	push   ebp
  404078:	pop    esp
  404079:	jp     0x404017
  40407b:	jge    0x4040c7
  40407d:	dec    edi
  40407e:	or     BYTE PTR ds:0x2e70c149,ch
  404084:	int3   
  404085:	pop    ebp
  404086:	scas   eax,DWORD PTR es:[edi]
  404087:	sub    DWORD PTR [eax+0x2],0xac4f75f1
  40408e:	sub    esp,eax
  404090:	mov    esp,0xfcd092ec
  404095:	and    DWORD PTR [edi+0x6e28f553],ebx
  40409b:	fwait
  40409c:	mov    ebx,0xa55bd949
  4040a1:	inc    eax
  4040a2:	(bad)  
  4040a4:	fdiv   QWORD PTR [edx]
  4040a6:	nop
  4040a7:	enter  0x8799,0xea
  4040ab:	add    eax,0x341bd5fb
  4040b0:	push   ss
  4040b1:	fdivr  st,st(1)
  4040b3:	loope  0x404047
  4040b5:	xchg   edx,eax
  4040b6:	sub    al,BYTE PTR [edx+0x4c4e4b0c]
  4040bc:	mov    ss,WORD PTR [edi-0x6fd56b99]
  4040c2:	(bad)  [ebp+0x83968e4]
  4040c8:	mov    BYTE PTR [eax+0x61],dl
  4040cb:	retf   0x230
  4040ce:	mov    ds:0x6875839,al
  4040d3:	shr    DWORD PTR [edi],1
  4040d5:	mov    ebp,0x92ff50c1
  4040da:	mov    ebx,0x86cdd5fe
  4040df:	sbb    DWORD PTR [eax+0x3aa47d3],ebp
  4040e5:	popa   
  4040e6:	retf   
  4040e7:	in     al,dx
  4040e8:	or     DWORD PTR [eax],ebx
  4040ea:	fadd   DWORD PTR [ebp+0x7e]
  4040ed:	cmc    
  4040ee:	and    al,bh
  4040f0:	stc    
  4040f1:	xchg   BYTE PTR [edi],dh
  4040f3:	sub    ebp,edx
  4040f5:	fmul   DWORD PTR [ebp-0x3a394928]
  4040fb:	nop
  4040fc:	pop    edx
  4040fd:	and    ebp,DWORD PTR [ecx+0x1c124577]
  404103:	cs push 0x1f
  404106:	(bad)  
  404107:	stos   DWORD PTR es:[edi],eax
  404108:	pop    ss
  404109:	xor    bh,al
  40410b:	sbb    eax,0xaff61df3
  404110:	dec    edi
  404111:	test   al,0xfb
  404113:	rol    BYTE PTR [edx+0x1603957f],0xbd
  40411a:	pop    edi
  40411b:	add    DWORD PTR [edi-0x60],ecx
  40411e:	mov    WORD PTR [edx],?
  404120:	shr    DWORD PTR [edx+0x78],0x0
  404124:	add    DWORD PTR [ebx+0x1d],edi
  404127:	sbb    ch,BYTE PTR [ebp+0x1f]
  40412a:	and    bh,dh
  40412c:	call   0x24033f06
  404131:	jmp    0x4eb0eb09
  404136:	int3   
  404137:	xchg   edx,eax
  404138:	inc    ebp
  404139:	push   0x9
  40413b:	hlt    
  40413c:	mov    edx,0xa6809c10
  404141:	sbb    BYTE PTR [ebp-0x4b],bl
  404144:	icebp  
  404145:	call   0xf793:0xd1fdeef7
  40414c:	in     eax,0xd
  40414e:	in     eax,0x59
  404150:	lods   eax,DWORD PTR ds:[esi]
  404151:	adc    BYTE PTR [esi],bl
  404153:	inc    esp
  404154:	jmp    0x1b3538a0
  404159:	pushf  
  40415a:	mov    ch,BYTE PTR [ecx-0x1abf655a]
  404160:	outs   dx,DWORD PTR ds:[esi]
  404161:	dec    ecx
  404162:	dec    ebx
  404163:	xchg   esi,eax
  404164:	jle    0x40411c
  404166:	mov    dh,0xdf
  404168:	ins    BYTE PTR es:[edi],dx
  404169:	dec    esp
  40416a:	in     al,0xe6
  40416c:	fmul   DWORD PTR [ebx+0x2522cb75]
  404172:	outs   dx,DWORD PTR ds:[esi]
  404173:	pop    esi
  404174:	sub    DWORD PTR [ebx+0x23],ebp
  404177:	xchg   esp,eax
  404178:	fst    QWORD PTR ds:0x15977ed9
  40417e:	inc    edi
  40417f:	rcl    BYTE PTR [esi-0x6042c122],1
  404185:	jp     0x78808722
  40418b:	fdivr  QWORD PTR [esp+eiz*4]
  40418e:	test   eax,0xef9ddd6d
  404193:	mov    esi,0xe2b34f7e
  404198:	push   eax
  404199:	inc    ecx
  40419a:	ja     0x404158
  40419c:	inc    eax
  40419d:	je     0x4041b3
  40419f:	xchg   ebx,eax
  4041a0:	loope  0x404198
  4041a2:	inc    ebx
  4041a3:	ror    BYTE PTR [edx],1
  4041a5:	out    0xc0,al
  4041a7:	lahf   
  4041a8:	das    
  4041a9:	mov    edx,0x2453f4f1
  4041ae:	inc    esi
  4041af:	mov    bl,0x10
  4041b1:	stos   BYTE PTR es:[edi],al
  4041b2:	and    eax,0x170b299
  4041b7:	adc    BYTE PTR [ecx+esi*2-0x6e0417b9],dh
  4041be:	ss mov esi,0xa718d1e0
  4041c4:	(bad)  
  4041c6:	mov    ebp,0xab99ba21
  4041cb:	shl    al,0x25
  4041ce:	jl     0x4041dd
  4041d0:	and    eax,0xb538b23b
  4041d5:	retf   0xf1aa
  4041d8:	cmp    al,BYTE PTR [edx-0x6e]
  4041db:	dec    ecx
  4041dc:	iret   
  4041dd:	jp     0x40424b
  4041df:	(bad)  
  4041e0:	sub    BYTE PTR [esi-0x33],dh
  4041e3:	sub    dl,BYTE PTR ds:0x18a68b17
  4041e9:	mov    ch,BYTE PTR [edi-0x1c4e04d7]
  4041ef:	sub    bl,BYTE PTR [ebx+ebp*8]
  4041f2:	in     al,0x90
  4041f4:	push   esi
  4041f5:	stc    
  4041f6:	jle    0x404240
  4041f8:	outs   dx,BYTE PTR ds:[esi]
  4041f9:	mov    ah,0xa4
  4041fb:	enter  0xe887,0xc0
  4041ff:	mov    ?,WORD PTR [ecx-0x410478cb]
  404205:	loop   0x4041d1
  404207:	cmp    eax,0xee10e51e
  40420c:	sub    eax,0x7891e0f8
  404211:	es loopne 0x4041a0
  404214:	nop
  404215:	xchg   BYTE PTR [edi-0xb662942],ah
  40421b:	cmp    DWORD PTR [edi+0x3d41fa5f],eax
  404221:	pushf  
  404222:	shl    eax,0xd9
  404225:	icebp  
  404226:	js     0x404201
  404228:	xchg   ebp,ebx
  40422a:	pop    edx
  40422b:	xchg   esi,eax
  40422c:	or     al,0x9d
  40422e:	int    0x1e
  404230:	call   0x7c69397a
  404235:	repz push ecx
  404237:	cmc    
  404238:	add    BYTE PTR [ebx+0x1ddf7b39],ch
  40423e:	mov    ds:0xd5d79bfb,al
  404243:	test   al,0xdd
  404245:	cmp    DWORD PTR ds:0x2814e619,esi
  40424b:	pop    ds
  40424c:	call   0xe937647d
  404251:	out    0x75,al
  404253:	ins    DWORD PTR es:[edi],dx
  404254:	mov    ebp,0x980e108d
  404259:	jbe    0x40422f
  40425b:	outs   dx,DWORD PTR ds:[esi]
  40425c:	pushf  
  40425d:	repz jge 0x4042ae
  404260:	loope  0x4041f3
  404262:	sbb    DWORD PTR [esi+0x69fa4b4e],0x9a53c860
  40426c:	enter  0xa738,0x95
  404270:	mov    DWORD PTR [edx-0x24],edi
  404273:	call   0x5d4:0x657c34f0
  40427a:	(bad)  
  40427b:	and    eax,esi
  40427d:	ds mov al,0xc2
  404280:	(bad)
  404283:	sub    al,0x4d
  404285:	and    eax,0xb8236ac8
  40428a:	loopne 0x40420e
  40428c:	(bad)  
  40428d:	xor    al,0x7f
  40428f:	daa    
  404290:	test   eax,0x94b21fd9
  404295:	mov    al,0x6f
  404297:	mov    dl,0x24
  404299:	inc    ebx
  40429a:	sbb    eax,0x4bcd1505
  40429f:	mov    esi,0x23a1330f
  4042a4:	repnz push cs
  4042a6:	stos   DWORD PTR es:[edi],eax
  4042a7:	inc    edx
  4042a8:	loopne 0x4042d5
  4042aa:	pop    ds
  4042ab:	xchg   esi,eax
  4042ac:	(bad)  
  4042ad:	mov    ch,0xc5
  4042af:	js     0x40427a
  4042b1:	adc    al,0xc9
  4042b3:	jmp    0x4042a1
  4042b5:	adc    DWORD PTR [edi+0x4e0816ad],ecx
  4042bb:	sub    esi,DWORD PTR [ebx]
  4042bd:	js     0x404320
  4042bf:	test   eax,0x337603be
  4042c4:	fist   WORD PTR [esi-0x22]
  4042c7:	adc    bl,dh
  4042c9:	and    eax,0xd5160841
  4042ce:	dec    esi
  4042cf:	xor    dl,BYTE PTR [edi]
  4042d1:	adc    BYTE PTR [edi+0x3d1eda6c],ch
  4042d7:	or     al,0xff
  4042d9:	push   ds
  4042da:	lods   al,BYTE PTR ds:[esi]
  4042db:	popf   
  4042dc:	imul   ecx,DWORD PTR gs:[esi],0x3e
  4042e0:	xor    eax,0xac23310c
  4042e5:	push   es
  4042e6:	call   0x2b86:0x388aed52
  4042ed:	jecxz  0x404348
  4042ef:	scas   al,BYTE PTR es:[edi]
  4042f0:	test   cl,bh
  4042f2:	dec    edx
  4042f3:	xchg   ebp,eax
  4042f4:	outs   dx,BYTE PTR ds:[esi]
  4042f5:	and    al,al
  4042f7:	adc    BYTE PTR [eax+0x4a],bh
  4042fa:	neg    BYTE PTR [eax-0x73]
  4042fd:	pop    es
  4042fe:	xor    ecx,DWORD PTR [eax+ecx*8]
  404301:	mov    esi,0x938a601a
  404306:	pop    ds
  404307:	imul   edx,DWORD PTR [ecx+0x6cfe39bc],0xffffff88
  40430e:	(bad)  
  404310:	(bad)  
  404311:	in     eax,dx
  404312:	nop
  404313:	dec    ecx
  404314:	pop    es
  404315:	mov    cs,WORD PTR [ebp-0x71ffe306]
  40431b:	sbb    dh,bh
  40431d:	rcl    BYTE PTR [esi],0xd7
  404320:	and    bl,cl
  404322:	in     eax,0xe4
  404324:	jb     0x40436e
  404326:	and    ah,dl
  404328:	lods   eax,DWORD PTR ds:[esi]
  404329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40432a:	adc    BYTE PTR [eax+0x3f],cl
  40432d:	jae    0x40437f
  40432f:	jecxz  0x4042d2
  404331:	retf   
  404332:	xor    eax,0xe4b4da1f
  404337:	outs   dx,DWORD PTR ds:[esi]
  404338:	lea    ecx,[ecx]
  40433a:	shl    DWORD PTR [ecx+ecx*8],cl
  40433d:	test   eax,0x2ba310b1
  404342:	push   esp
  404343:	rol    dh,0x10
  404346:	pop    ecx
  404347:	out    dx,al
  404348:	fwait
  404349:	imul   esp,DWORD PTR [ecx+0x57],0xeedd2b23
  404350:	test   eax,0xd39f88f4
  404355:	cmp    BYTE PTR ds:0x29679b7c,cl
  40435b:	std    
  40435c:	xchg   esp,eax
  40435d:	sbb    al,0x8d
  40435f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404360:	add    ah,BYTE PTR [ebx]
  404362:	int    0xd4
  404364:	lea    ebp,[esi+0x5c59fbde]
  40436a:	retf   
  40436b:	or     DWORD PTR [eax+0x5e],edi
  40436e:	jl     0x4043c1
  404370:	stos   DWORD PTR es:[edi],eax
  404371:	xchg   ecx,eax
  404372:	imul   esp,DWORD PTR [esi+0xd93caa2],0x4babc7d8
  40437c:	cdq    
  40437d:	cmp    ah,BYTE PTR [esi]
  40437f:	pop    ds
  404380:	ss es jl 0x404305
  404384:	test   DWORD PTR [ebx+0x16084212],0x70402de8
  40438e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40438f:	pop    esi
  404390:	adc    esi,DWORD PTR [ecx-0x6ef0b38]
  404396:	lahf   
  404397:	cli    
  404398:	adc    eax,0x1c556d58
  40439d:	xor    edi,ecx
  40439f:	fiadd  WORD PTR [ebx-0x30]
  4043a2:	and    ah,BYTE PTR [edi]
  4043a4:	es mov ecx,0x512a692f
  4043aa:	push   esp
  4043ab:	mov    eax,ds:0x605cbb46
  4043b0:	sbb    eax,0xc80de160
  4043b5:	dec    ebx
  4043b6:	daa    
  4043b7:	lods   eax,DWORD PTR ds:[esi]
  4043b8:	pop    ecx
  4043b9:	pushf  
  4043ba:	push   eax
  4043bb:	int    0x21
  4043bd:	and    eax,0x5fb84792
  4043c2:	dec    ebp
  4043c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043c4:	and    ebx,DWORD PTR [ecx+0x21f296b8]
  4043ca:	fcom   DWORD PTR [ecx]
  4043cc:	cdq    
  4043cd:	add    eax,0x84135db8
  4043d2:	mov    WORD PTR [edx+0x54],cs
  4043d5:	pop    ds
  4043d6:	push   ss
  4043d7:	or     esi,DWORD PTR [ebp-0xe]
  4043da:	out    dx,al
  4043db:	retf   0x7e25
  4043de:	lock into 
  4043e0:	shl    BYTE PTR ds:0x33c8bbc7,cl
  4043e6:	push   esp
  4043e7:	push   ecx
  4043e8:	and    al,0x1c
  4043ea:	lock mov ecx,0xab650555
  4043f0:	retf   
  4043f1:	fiadd  DWORD PTR [eax-0x64]
  4043f4:	sar    DWORD PTR [ebx],cl
  4043f6:	mov    esp,0x3c62793f
  4043fb:	cmp    edi,DWORD PTR [edi+0x49]
  4043fe:	cwde   
  4043ff:	xchg   edi,eax
  404400:	popa   
  404401:	outs   dx,BYTE PTR ds:[esi]
  404402:	fsub   DWORD PTR [edi]
  404404:	jp     0x40439f
  404406:	pop    esp
  404407:	cmp    al,0x3c
  404409:	adc    DWORD PTR [edx-0x9],0x56
  40440d:	int3   
  40440e:	mov    ?,WORD PTR [eax-0x28]
  404411:	adc    eax,0x5a597c9b
  404416:	in     al,dx
  404417:	add    al,0x24
  404419:	sub    eax,0x71e4cb19
  40441e:	adc    bh,bh
  404420:	and    DWORD PTR [eax+edi*1],edi
  404423:	mov    ?,WORD PTR [ecx+0x5a]
  404426:	mov    BYTE PTR [edx-0x17],ah
  404429:	xchg   ecx,eax
  40442a:	push   edi
  40442b:	xchg   al,bh
  40442d:	dec    ecx
  40442e:	jp     0x4043ec
  404430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404431:	inc    esp
  404432:	in     al,dx
  404433:	adc    DWORD PTR [edx+0x7c6d846a],eax
  404439:	jbe    0x40440d
  40443b:	push   ecx
  40443c:	pop    esp
  40443d:	retf   
  40443e:	mov    ds:0x84e68264,eax
  404443:	stos   DWORD PTR es:[edi],eax
  404444:	leave  
  404445:	into   
  404446:	mov    edx,0x81e797ef
  40444b:	sub    dh,BYTE PTR fs:[esi-0x2]
  40444f:	add    al,0xb0
  404451:	xchg   esp,eax
  404452:	int3   
  404453:	test   BYTE PTR [esi],dl
  404455:	mov    ecx,DWORD PTR [esi-0x7f]
  404458:	lods   eax,DWORD PTR ds:[esi]
  404459:	xor    dh,al
  40445b:	enter  0x2ae8,0x4e
  40445f:	pop    ecx
  404460:	mov    ecx,0x8966cb3
  404465:	sbb    eax,0xe9df8929
  40446a:	sbb    BYTE PTR fs:[ebx-0x6f],dh
  40446e:	or     BYTE PTR ds:0x7685b9bb,ch
  404474:	xchg   esi,ebx
  404476:	test   eax,0xa05e69fb
  40447b:	jmp    0xf87dfa1
  404480:	adc    DWORD PTR cs:[ebx-0x5e],0x87e96530
  404488:	test   BYTE PTR [ebx],ah
  40448a:	imul   ecx,DWORD PTR [ebp-0x68394337],0xab28ac9b
  404494:	pop    ebx
  404495:	jbe    0x404509
  404497:	push   esi
  404498:	or     DWORD PTR [esi+edx*4],esi
  40449b:	mov    ah,0x51
  40449d:	mov    eax,0xb3fa4634
  4044a2:	jns    0x4044e3
  4044a4:	aam    0xed
  4044a6:	mov    dl,0x8d
  4044a8:	mov    bl,0xa
  4044aa:	mov    WORD PTR [edx],es
  4044ac:	mov    eax,DWORD PTR [esi-0x61094e7f]
  4044b2:	sbb    DWORD PTR [ebx+0x46],0xffffffe8
  4044b6:	xor    bl,BYTE PTR [esi+ecx*4-0x3c912551]
  4044bd:	daa    
  4044be:	outs   dx,DWORD PTR ds:[esi]
  4044bf:	pop    edi
  4044c0:	into   
  4044c1:	neg    BYTE PTR [edi]
  4044c3:	xchg   ecx,eax
  4044c4:	and    al,0x19
  4044c6:	ss int3 
  4044c8:	and    edi,DWORD PTR [ebx+0xae0b94]
  4044ce:	mov    ss,WORD PTR [ecx+0x7d569f3d]
  4044d4:	shl    bh,cl
  4044d6:	call   0xc64f9817
  4044db:	pop    eax
  4044dc:	mov    ds:0x32204098,eax
  4044e1:	xchg   edi,eax
  4044e2:	pop    edi
  4044e3:	mov    BYTE PTR [edx],dh
  4044e5:	xor    BYTE PTR [edi],bh
  4044e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044e8:	or     eax,0x5873d5bc
  4044ed:	xlat   BYTE PTR ds:[ebx]
  4044ee:	cwde   
  4044ef:	retf   0x97e5
  4044f2:	outs   dx,BYTE PTR ds:[esi]
  4044f3:	xchg   DWORD PTR [esi-0x18],ebp
  4044f6:	in     eax,0xc5
  4044f8:	lods   eax,DWORD PTR ds:[esi]
  4044f9:	pop    esp
  4044fa:	and    DWORD PTR [ebp+0x2b],esi
  4044fd:	fdivrp st(0),st
  4044ff:	dec    ecx
  404500:	in     al,dx
  404501:	jmp    0x37b3:0x7ed308a0
  404508:	sbb    eax,0xa358ec2f
  40450d:	shl    BYTE PTR [eax],0x3c
  404510:	nop
  404511:	clc    
  404512:	add    al,BYTE PTR [ecx]
  404514:	cmp    ah,ch
  404516:	je     0x4044df
  404518:	call   DWORD PTR [ebp-0x17b0a79]
  40451e:	sbb    BYTE PTR [esi],dh
  404520:	(bad)  
  404522:	outs   dx,BYTE PTR ds:[esi]
  404523:	(bad)  [edx+esi*8]
  404526:	iret   
  404527:	imul   edi,DWORD PTR ds:0xd4cc57b3,0x62
  40452e:	push   edi
  40452f:	lds    ebp,FWORD PTR [ecx-0x11b96a45]
  404535:	sub    esp,0xc7dbb954
  40453b:	pop    ecx
  40453c:	mov    ds:0xbea6618a,eax
  404541:	inc    edx
  404542:	cdq    
  404543:	leave  
  404544:	clc    
  404545:	inc    ecx
  404546:	sub    DWORD PTR [edi],0xd9176736
  40454c:	(bad)  
  40454d:	leave  
  40454e:	or     dl,BYTE PTR [esi]
  404550:	push   esp
  404551:	xor    BYTE PTR [eax+0x317427ed],al
  404557:	pop    ecx
  404558:	inc    ebx
  404559:	pop    ebp
  40455a:	and    bh,BYTE PTR [eax]
  40455c:	lahf   
  40455d:	mov    ebx,0x63bbbe52
  404562:	scas   eax,DWORD PTR es:[edi]
  404563:	fstp   TBYTE PTR [ebx+ebp*8]
  404566:	push   ecx
  404567:	fnstenv [ebx-0x5d]
  40456a:	ins    BYTE PTR es:[edi],dx
  40456b:	push   0x6b
  40456d:	add    cl,BYTE PTR [eax-0x6b88baf5]
  404573:	das    
  404574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404575:	or     esp,eax
  404577:	repnz sar BYTE PTR [ebx+0x44],0x50
  40457c:	pop    ebx
  40457d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40457e:	into   
  40457f:	jmp    0x4045c0
  404581:	sub    dl,BYTE PTR [ebp-0x29]
  404584:	inc    bh
  404586:	sbb    BYTE PTR [esi+0x37bafb65],al
  40458c:	jmp    0x97e9:0xb902a53b
  404593:	xor    ebx,esi
  404595:	fnstsw WORD PTR [edx+0x53f8fd88]
  40459b:	gs in  eax,dx
  40459d:	(bad)  
  40459e:	das    
  40459f:	pop    ecx
  4045a0:	pop    edx
  4045a1:	pop    es
  4045a2:	ja     0x40452e
  4045a4:	and    al,bh
  4045a6:	(bad)  
  4045a7:	fwait
  4045a8:	cs push ss
  4045aa:	mov    esp,edx
  4045ac:	cli    
  4045ad:	(bad)  
  4045ae:	out    0x40,eax
  4045b0:	jns    0x40462c
  4045b2:	(bad)  
  4045b3:	out    dx,al
  4045b4:	into   
  4045b5:	enter  0x1a8d,0xc0
  4045b9:	mov    WORD PTR [edi+0x67],?
  4045bc:	out    dx,al
  4045bd:	or     DWORD PTR [edi],eax
  4045bf:	pop    eax
  4045c0:	push   ebx
  4045c1:	stos   DWORD PTR es:[edi],eax
  4045c2:	sti    
  4045c3:	xchg   BYTE PTR [esi],dl
  4045c5:	or     ch,BYTE PTR [esi+ebx*1+0x309bd913]
  4045cc:	mov    edx,cs
  4045ce:	daa    
  4045cf:	dec    esp
  4045d0:	mov    eax,ds:0x915e8fc8
  4045d5:	psubsb mm5,QWORD PTR [ecx]
  4045d8:	jg     0x40456c
  4045da:	call   0x7f4666f
  4045df:	data16 or bh,ah
  4045e2:	mov    cl,0x5b
  4045e4:	out    0x5a,al
  4045e6:	rcr    DWORD PTR [edi],cl
  4045e8:	fmul   st,st(2)
  4045ea:	nop
  4045eb:	in     eax,dx
  4045ec:	xchg   ebp,eax
  4045ed:	push   0xffffff91
  4045ef:	scas   al,BYTE PTR es:[edi]
  4045f0:	add    edx,DWORD PTR [edi-0x28]
  4045f3:	push   edi
  4045f4:	mov    dh,0xbf
  4045f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045f7:	das    
  4045f8:	test   BYTE PTR [edx],0xa7
  4045fb:	xchg   ecx,eax
  4045fc:	or     dh,BYTE PTR [ecx+ecx*8+0x739a8a0b]
  404603:	in     eax,0xbb
  404605:	sub    eax,0x3c9c7206
  40460a:	mov    BYTE PTR [esi],al
  40460c:	fdivr  DWORD PTR [edi+0xac33d1a]
  404612:	jno    0x4045cc
  404614:	dec    edi
  404615:	jecxz  0x4045cf
  404617:	cmp    esi,ebx
  404619:	mov    edx,0xed825a95
  40461e:	jno    0x40465e
  404620:	cld    
  404621:	jno    0x404650
  404623:	mov    esp,0x3a643c9
  404628:	and    DWORD PTR [ebx+0x6f],ebx
  40462b:	mov    ah,BYTE PTR [esi-0x206f1eb0]
  404631:	cmp    DWORD PTR [ecx+eax*8+0x1e],esi
  404635:	daa    
  404636:	sub    DWORD PTR [edx-0x46f569de],ebx
  40463c:	nop
  40463d:	jo     0x404645
  40463f:	imul   ebx,ecx,0x66f08de5
  404645:	dec    edi
  404646:	sbb    BYTE PTR [ecx-0x1480765a],dh
  40464c:	gs sbb eax,0xd5c87d7a
  404652:	mov    eax,ds:0x1334dfa7
  404657:	sbb    eax,DWORD PTR [edx+0x4747c9f3]
  40465d:	push   cs
  40465e:	movsx  esi,BYTE PTR [esi+eiz*8+0x1c]
  404663:	(bad)  
  404664:	push   esi
  404665:	adc    dh,BYTE PTR [edi-0x4c73172d]
  40466b:	test   BYTE PTR [ecx-0x4cdf5bc1],0x5e
  404672:	pop    eax
  404673:	jmp    0x716f8c45
  404678:	xor    DWORD PTR [esi+0x5f],edx
  40467b:	pop    ebp
  40467c:	push   ds
  40467d:	mul    edi
  40467f:	jae    0x40469b
  404681:	outs   dx,BYTE PTR ds:[esi]
  404682:	enter  0xf6f6,0xad
  404686:	data16 adc ch,BYTE PTR [edx+eiz*4+0x4504fb3f]
  40468e:	push   eax
  40468f:	or     esi,DWORD PTR [ebp-0x1c24c00e]
  404695:	jle    0x404689
  404697:	inc    edi
  404698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404699:	xor    DWORD PTR [ebx-0x19877830],edi
  40469f:	jae    0x40464f
  4046a1:	mov    ah,0x7b
  4046a3:	mov    BYTE PTR [esi+edx*1+0x12],bl
  4046a7:	push   es
  4046a8:	jb     0x40467c
  4046aa:	xchg   esi,eax
  4046ab:	xchg   ch,ah
  4046ad:	inc    esp
  4046ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046af:	stos   BYTE PTR es:[edi],al
  4046b0:	mov    bh,0x15
  4046b2:	call   0x6c51d652
  4046b7:	or     bh,BYTE PTR ds:0x26813ddf
  4046bd:	xchg   esi,eax
  4046be:	je     0x40468e
  4046c0:	ds push 0x58
  4046c3:	bound  esp,QWORD PTR [eax+0x29]
  4046c6:	ret    
  4046c7:	out    0x80,al
  4046c9:	mov    ecx,0xc2b60a2c
  4046ce:	cmp    BYTE PTR [edx+eax*2-0x34],bh
  4046d2:	dec    edx
  4046d3:	das    
  4046d4:	shr    DWORD PTR [edi+0x22779108],0x9d
  4046db:	mov    eax,ds:0x8cabdb9e
  4046e0:	repnz outs dx,BYTE PTR ds:[esi]
  4046e2:	sbb    al,0xba
  4046e4:	and    DWORD PTR [esi+ecx*4-0x6c923422],ebp
  4046eb:	and    al,0x82
  4046ed:	mov    gs,WORD PTR ds:[esi+0x2a6c0e54]
  4046f4:	mov    eax,ds:0x6d0c0b9c
  4046f9:	sbb    esp,DWORD PTR ds:0x2bb1c8aa
  4046ff:	push   ebp
  404700:	retf   
  404701:	pop    esp
  404702:	xor    DWORD PTR cs:[ebp+0x5c],eax
  404706:	inc    edx
  404707:	scas   eax,DWORD PTR es:[edi]
  404708:	mov    ah,BYTE PTR [ebp-0x68]
  40470b:	retf   0xbb3b
  40470e:	ins    BYTE PTR es:[edi],dx
  40470f:	pop    ebx
  404710:	xor    al,0xf8
  404712:	pop    eax
  404713:	push   0x4c
  404715:	xor    DWORD PTR [ebx+0x6dc51a77],0x62
  40471c:	push   0xffffffa4
  40471e:	dec    cx
  404720:	mov    dl,0x56
  404722:	pop    esp
  404723:	int3   
  404724:	cs scas eax,DWORD PTR es:[edi]
  404726:	and    al,BYTE PTR [eax+0x58]
  404729:	jl     0x4046ad
  40472b:	dec    ecx
  40472c:	js     0x40477a
  40472e:	aad    0x6b
  404730:	je     0x4046f4
  404732:	pop    edx
  404733:	sbb    DWORD PTR [ecx+ecx*4],esi
  404736:	jl     0x4047b0
  404738:	mov    cl,0x19
  40473a:	push   esi
  40473b:	sbb    BYTE PTR [edi+0x1e9462c0],0xb9
  404742:	stc    
  404743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404744:	mov    ch,0x85
  404746:	mov    BYTE PTR [edx],bh
  404748:	add    al,0x57
  40474a:	fnsave [edi]
  40474c:	stc    
  40474d:	push   ecx
  40474e:	rol    edi,1
  404750:	mov    edx,0x782d4aa7
  404755:	add    bh,BYTE PTR [eax]
  404757:	iret   
  404758:	loope  0x404785
  40475a:	dec    eax
  40475b:	inc    edx
  40475c:	jmp    0x4046df
  40475e:	mov    bl,0xce
  404760:	xchg   esp,eax
  404761:	jge    0x4046e3
  404763:	(bad)  
  404764:	sahf   
  404765:	dec    edx
  404766:	idiv   BYTE PTR [esp+edx*8-0x58]
  40476a:	sahf   
  40476b:	add    dl,BYTE PTR [esp+ecx*4-0x3d]
  40476f:	push   esp
  404770:	scas   al,BYTE PTR es:[edi]
  404771:	sbb    al,BYTE PTR [eax+0x2a25c4c1]
  404777:	sbb    al,0x3c
  404779:	jge    0x404796
  40477b:	jmp    0x40477b
  40477d:	std    
  40477e:	push   ecx
  40477f:	(bad)  
  404780:	adc    ebp,esi
  404782:	or     ah,BYTE PTR ds:0xe89f4c4b
  404788:	sub    BYTE PTR [eax],0xe6
  40478b:	push   ss
  40478c:	mov    ch,0x55
  40478e:	xlat   BYTE PTR ds:[ebx]
  40478f:	and    DWORD PTR [ebx+edx*2-0x29c6dea0],eax
  404796:	(bad)  
  404797:	int    0x4c
  404799:	and    al,0xa1
  40479b:	iret   
  40479c:	dec    ecx
  40479d:	jp     0x4047ae
  40479f:	les    ebx,FWORD PTR [edx-0x5e]
  4047a2:	inc    ecx
  4047a3:	xchg   esi,eax
  4047a4:	fisttp QWORD PTR [edx]
  4047a6:	cli    
  4047a7:	test   al,0x5d
  4047a9:	adc    al,0xec
  4047ab:	stos   BYTE PTR es:[edi],al
  4047ac:	and    al,0x17
  4047ae:	mov    gs,WORD PTR [ebx]
  4047b0:	ss cmp ecx,edi
  4047b3:	pop    esi
  4047b4:	mov    WORD PTR [edi+ecx*4],fs
  4047b7:	inc    esi
  4047b8:	test   eax,0xafada2c9
  4047bd:	mov    al,0x46
  4047bf:	stos   BYTE PTR es:[edi],al
  4047c0:	loope  0x404788
  4047c2:	and    DWORD PTR [eax],esp
  4047c4:	loop   0x4047ff
  4047c6:	dec    ebx
  4047c7:	mov    ebx,DWORD PTR [edi-0x47]
  4047ca:	mov    edx,0xd427e410
  4047cf:	cmp    eax,0xde8e20be
  4047d4:	call   FWORD PTR [eax+ecx*2+0x13]
  4047d8:	retf   
  4047d9:	out    0x9f,eax
  4047db:	neg    BYTE PTR ds:0x32399bd3
  4047e1:	out    dx,eax
  4047e2:	fmul   QWORD PTR [ebx+0x7a]
  4047e5:	repz jae 0x4047a6
  4047e8:	inc    edi
  4047e9:	jmp    0x4047b8
  4047eb:	loope  0x4047e5
  4047ed:	aas    
  4047ee:	lock sub al,0x76
  4047f1:	mov    esi,0x9a88fc44
  4047f6:	test   DWORD PTR [ebx+0x4d],ecx
  4047f9:	mov    dl,0x9e
  4047fb:	add    ch,0x5e
  4047fe:	imul   edi,edi,0xdc8e579e
  404804:	retf   
  404805:	mov    edi,0x1953a21d
  40480a:	and    al,0xbb
  40480c:	aam    0xa9
  40480e:	outs   dx,BYTE PTR ds:[esi]
  40480f:	ja     0x404868
  404811:	fisub  DWORD PTR [ebx]
  404813:	mov    eax,0x9481ae37
  404818:	pop    ds
  404819:	aaa    
  40481a:	sbb    ah,BYTE PTR [esi]
  40481c:	out    0x62,al
  40481e:	loop   0x4047aa
  404820:	(bad)  
  404821:	sahf   
  404822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404823:	cmp    dh,BYTE PTR [eax]
  404825:	xchg   esi,eax
  404826:	fidiv  WORD PTR [esi-0x5d0bfac5]
  40482c:	adc    al,0xf1
  40482e:	sbb    dh,BYTE PTR [ebx-0xcf72db3]
  404834:	push   0x4a1abe16
  404839:	bound  esi,QWORD PTR [ebx]
  40483b:	push   es
  40483c:	mov    dh,0xe9
  40483e:	jbe    0x404879
  404840:	out    dx,al
  404841:	shr    DWORD PTR [edi+edi*4],1
  404844:	adc    BYTE PTR [eax-0x73],0xba
  404848:	adc    ebx,ebx
  40484a:	add    bh,bl
  40484c:	pop    esp
  40484d:	xor    DWORD PTR [edi],ebp
  40484f:	icebp  
  404850:	and    ch,dh
  404852:	xor    eax,0x81439879
  404857:	fist   WORD PTR [edx+0x59]
  40485a:	(bad)  
  40485c:	mov    esp,0x6c2067dd
  404861:	add    ah,BYTE PTR [edx+0x52]
  404864:	push   ecx
  404865:	test   edx,0x90294ce5
  40486b:	jbe    0x4047f2
  40486d:	lea    ebp,ds:0xdf5454a0
  404874:	push   ebp
  404875:	mov    dl,0x1a
  404877:	mov    ebp,0xbe1fd4b2
  40487c:	pop    edx
  40487d:	inc    edi
  40487e:	int    0xb4
  404880:	imul   ebx,DWORD PTR ds:[edx+0x48d27b68],0xacfd69eb
  40488b:	sub    DWORD PTR [ecx-0x2a8a0777],esi
  404891:	fdiv   DWORD PTR [ebx]
  404893:	das    
  404894:	xor    BYTE PTR [esi+0x68],ch
  404897:	sub    BYTE PTR [esi+0x2f],ah
  40489a:	cld    
  40489b:	jl     0x4048c0
  40489d:	dec    ecx
  40489e:	jge    0x404855
  4048a0:	cld    
  4048a1:	addr16 aaa 
  4048a3:	das    
  4048a4:	(bad)  
  4048a5:	adc    eax,0xb26ce12a
  4048aa:	popf   
  4048ab:	dec    edi
  4048ac:	cmp    al,0xdd
  4048ae:	or     BYTE PTR [ebx-0xd885302],bl
  4048b4:	ins    DWORD PTR es:[edi],dx
  4048b5:	daa    
  4048b6:	dec    edx
  4048b7:	stc    
  4048b8:	call   0xc94d6463
  4048bd:	adc    ebx,ebp
  4048bf:	stc    
  4048c0:	and    BYTE PTR [eax-0x2],bl
  4048c3:	loope  0x40484f
  4048c5:	pop    edx
  4048c6:	xchg   ebx,eax
  4048c7:	sub    ch,0x6e
  4048ca:	add    al,0xe1
  4048cc:	jo     0x40485d
  4048ce:	(bad)  
  4048cf:	mov    bl,0x40
  4048d1:	retf   0x3c59
  4048d4:	mov    ds:0x532005a0,al
  4048d9:	outs   dx,DWORD PTR ds:[esi]
  4048da:	inc    ecx
  4048db:	inc    esp
  4048dc:	push   esi
  4048dd:	cli    
  4048de:	push   esi
  4048df:	mov    eax,0x8cb91ad6
  4048e4:	mov    ebx,DWORD PTR [esi+0x47699eca]
  4048ea:	sar    DWORD PTR [eax+0x49bf7efe],1
  4048f0:	mov    eax,ds:0xba3e2fa
  4048f5:	fst    QWORD PTR [ebp-0x7d48ea1c]
  4048fb:	add    BYTE PTR [edi],dl
  4048fd:	add    BYTE PTR [esi-0x3c],ah
  404900:	xchg   edx,eax
  404901:	dec    edx
  404902:	jne    0x404886
  404904:	loop   0x4048db
  404906:	sub    BYTE PTR [ebx+0x28],0xc3
  40490a:	sub    eax,esp
  40490c:	push   esi
  40490d:	ss in  eax,dx
  40490f:	mov    edi,0x91b7b4e0
  404914:	inc    eax
  404915:	xchg   ebx,eax
  404916:	fld    TBYTE PTR gs:[edx]
  404919:	outs   dx,DWORD PTR ds:[esi]
  40491a:	or     al,0xdc
  40491c:	xor    dh,BYTE PTR [eax+0x525b27d7]
  404922:	dec    esi
  404923:	add    esi,DWORD PTR [ecx+edi*2+0x57]
  404927:	imul   ebx,DWORD PTR [ebx+edi*8],0x4c84f648
  40492e:	stos   BYTE PTR es:[edi],al
  40492f:	cmc    
  404930:	push   es
  404931:	push   ss
  404932:	add    ah,ah
  404934:	or     dh,al
  404936:	sbb    BYTE PTR [esi+0x65451e02],ah
  40493c:	pop    eax
  40493d:	lock jo 0x40492c
  404940:	pop    ss
  404941:	push   esp
  404942:	xor    DWORD PTR [si],ebx
  404945:	pop    esp
  404946:	mov    ch,BYTE PTR [eax]
  404948:	imul   eax,ebp,0xffffffa4
  40494b:	add    al,0x27
  40494d:	in     al,dx
  40494e:	stos   BYTE PTR es:[edi],al
  40494f:	out    0xd3,eax
  404951:	jnp    0x404940
  404953:	or     eax,0xab2aba68
  404958:	leave  
  404959:	jp     0x404908
  40495b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40495c:	push   es
  40495d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40495e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40495f:	fcomp  QWORD PTR [ecx]
  404961:	mov    esi,0xa70ee124
  404966:	ror    DWORD PTR [edx+0x7412948],cl
  40496c:	dec    esp
  40496d:	and    al,BYTE PTR [esi]
  40496f:	call   0x6a884388
  404974:	repz xchg esi,eax
  404976:	inc    esi
  404977:	mov    DWORD PTR [ecx-0x1eb4ffd3],esp
  40497d:	pusha  
  40497e:	repz cwde 
  404980:	(bad)  
  404981:	aas    
  404982:	adc    ebx,DWORD PTR [edi+eiz*8+0x7d63e92e]
  404989:	shl    BYTE PTR [esi+0x4861d82d],1
  40498f:	pop    ds
  404990:	(bad)  [ecx+0x3c]
  404993:	test   WORD PTR [ebp+0x39],0x4924
  404999:	jae    0x4049b7
  40499b:	and    eax,0xa0a138b7
  4049a0:	ja     0x4049f8
  4049a2:	and    al,0x17
  4049a4:	test   al,0x48
  4049a6:	pusha  
  4049a7:	sti    
  4049a8:	lds    ebp,FWORD PTR [ebp+0x49]
  4049ab:	pusha  
  4049ac:	mov    al,0x9c
  4049ae:	jno    0x4049c0
  4049b0:	sti    
  4049b1:	mov    al,0x9
  4049b3:	out    0x58,eax
  4049b5:	mov    dl,0x7f
  4049b7:	in     al,dx
  4049b8:	dec    ecx
  4049b9:	retf   0x8a91
  4049bc:	test   dl,ch
  4049be:	pop    eax
  4049bf:	push   ds
  4049c0:	inc    eax
  4049c1:	xchg   BYTE PTR [edx],al
  4049c3:	inc    ebx
  4049c4:	bound  esp,QWORD PTR [ecx-0x3d]
  4049c7:	cmp    BYTE PTR [edx+0x1a847759],dh
  4049cd:	mov    edi,0xa3623eee
  4049d2:	jecxz  0x404959
  4049d4:	retf   
  4049d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049d6:	mov    ebp,0x1f16ff6c
  4049db:	sbb    BYTE PTR [edx-0x40],ah
  4049de:	xor    esp,eax
  4049e0:	dec    edi
  4049e1:	pop    esi
  4049e2:	lds    esp,FWORD PTR [edx+0x38f9028f]
  4049e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049e9:	mov    ds:0x1be46bd8,al
  4049ee:	jge    0x404a6d
  4049f0:	xchg   ecx,eax
  4049f1:	retf   
  4049f2:	xchg   esp,eax
  4049f3:	bound  ebp,QWORD PTR [esp+esi*8+0x402b76bc]
  4049fa:	shr    al,cl
  4049fc:	xchg   ebx,eax
  4049fd:	dec    ebx
  4049fe:	loope  0x404a51
  404a00:	cmp    BYTE PTR [ebx+0x7d],0xc0
  404a04:	scas   eax,DWORD PTR es:[edi]
  404a05:	jle    0x404a43
  404a07:	lahf   
  404a08:	(bad)  
  404a09:	loope  0x404a10
  404a0b:	push   eax
  404a0c:	sbb    al,0xa3
  404a0e:	push   0x739a22dc
  404a13:	aaa    
  404a14:	ins    BYTE PTR es:[edi],dx
  404a15:	hlt    
  404a16:	mov    eax,0x2c9e1c95
  404a1b:	sti    
  404a1c:	push   edi
  404a1d:	in     eax,dx
  404a1e:	retf   0xc7e2
  404a21:	sti    
  404a22:	or     DWORD PTR [edx-0x1d],ebx
  404a25:	mov    ebx,0x1698b614
  404a2a:	push   cs
  404a2b:	adc    al,0x1
  404a2d:	dec    edi
  404a2e:	mov    dl,0xca
  404a30:	and    ecx,DWORD PTR [esi]
  404a32:	cmp    DWORD PTR [esi+0x1f],0x9de8ef36
  404a39:	mov    eax,esi
  404a3b:	cmp    al,0xea
  404a3d:	jns    0x404a39
  404a3f:	popa   
  404a40:	mov    dh,0x82
  404a42:	out    0xe0,eax
  404a44:	mov    eax,0xf33bf42f
  404a49:	sar    BYTE PTR [ebx],0xdb
  404a4c:	hlt    
  404a4d:	scas   al,BYTE PTR es:[edi]
  404a4e:	outs   dx,DWORD PTR ds:[esi]
  404a4f:	std    
  404a50:	cdq    
  404a51:	pop    esi
  404a52:	fwait
  404a53:	mov    BYTE PTR [ecx+edi*2+0x5a80f88a],bl
  404a5a:	rcr    ebx,1
  404a5c:	push   edx
  404a5d:	adc    al,0x3f
  404a5f:	mov    dl,0x72
  404a61:	push   esp
  404a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a63:	and    edi,edi
  404a65:	fcmovbe st,st(1)
  404a67:	aam    0xd5
  404a69:	push   0x9cafd50f
  404a6e:	jecxz  0x404a0c
  404a70:	add    ebx,DWORD PTR [ecx+0x2bf2b903]
  404a76:	and    BYTE PTR [ecx+0x4743c6ff],dh
  404a7c:	je     0x404a48
  404a7e:	sbb    al,al
  404a80:	ins    BYTE PTR es:[edi],dx
  404a81:	popf   
  404a82:	mov    ah,0xc3
  404a84:	fdiv   st,st(2)
  404a86:	adc    eax,0xa777a448
  404a8b:	jecxz  0x404a99
  404a8d:	sar    edx,0xaf
  404a90:	jp     0x404a62
  404a92:	test   al,0x8e
  404a94:	leave  
  404a95:	push   ss
  404a96:	adc    DWORD PTR [edx*2-0x547ecd6c],ebp
  404a9d:	data16 js 0x404b19
  404aa0:	cli    
  404aa1:	inc    ebp
  404aa2:	test   DWORD PTR ds:0x875389cc,eax
  404aa8:	adc    BYTE PTR [esi],0xbb
  404aab:	stos   DWORD PTR es:[edi],eax
  404aac:	mov    al,0xd7
  404aae:	xchg   esp,eax
  404aaf:	pop    es
  404ab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ab1:	xchg   edx,eax
  404ab2:	es mov ecx,0x594ccca2
  404ab8:	xchg   ebx,eax
  404ab9:	inc    eax
  404aba:	in     al,0x1f
  404abc:	adc    DWORD PTR [edi],edx
  404abe:	cmp    DWORD PTR [edx+eiz*4+0x26],ebx
  404ac2:	idiv   DWORD PTR [edi-0x709a1f61]
  404ac8:	(bad)  
  404ac9:	gs jnp 0x404b11
  404acc:	(bad)  
  404ace:	in     eax,0xb4
  404ad0:	mov    al,ds:0x6d685311
  404ad5:	jne    0x404b0d
  404ad7:	jnp    0x404a64
  404ad9:	inc    BYTE PTR [ebp+0x2a572cef]
  404adf:	add    eax,DWORD PTR [edi-0x4c95b402]
  404ae5:	jmp    0x404ae5
  404ae7:	fwait
  404ae8:	pop    esi
  404ae9:	jnp    0x404aec
  404aeb:	adc    edx,DWORD PTR [eax-0x2f7ead48]
  404af1:	or     DWORD PTR [ecx-0x33],ebp
  404af4:	ror    BYTE PTR [edi+0x79],0x10
  404af8:	loopne 0x404ae9
  404afa:	dec    ebx
  404afb:	xor    ch,BYTE PTR [edi]
  404afd:	pop    ds
  404afe:	add    bl,BYTE PTR [eax+0x728be26f]
  404b04:	out    dx,eax
  404b05:	mov    di,WORD PTR cs:[ebx-0x5ed284f6]
  404b0d:	pop    ebx
  404b0e:	or     DWORD PTR [esp+ecx*1],0xffffffc3
  404b12:	ret    0xc8c4
  404b15:	imul   eax,edx,0xffffffb2
  404b18:	jge    0x404b84
  404b1a:	popa   
  404b1b:	cli    
  404b1c:	int    0x1a
  404b1e:	xchg   ecx,eax
  404b1f:	mov    cl,0xd7
  404b21:	test   DWORD PTR [ecx-0x62],ebp
  404b24:	adc    cl,BYTE PTR [eax-0x40a1f33b]
  404b2a:	pop    esp
  404b2b:	cmp    eax,0xf67cf33e
  404b30:	es sahf 
  404b32:	nop    DWORD PTR [esi+0xc]
  404b36:	jmp    0x404ba8
  404b38:	ror    DWORD PTR [ecx-0x5],1
  404b3b:	jmp    0xfac7875a
  404b40:	add    BYTE PTR ds:[edx+edx*4+0x1a],bl
  404b45:	push   eax
  404b46:	xchg   ecx,eax
  404b47:	not    DWORD PTR [edi+0x20614301]
  404b4d:	jno    0x404bab
  404b4f:	icebp  
  404b50:	mov    ecx,DWORD PTR [ebp-0x73685e5d]
  404b56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b57:	push   ecx
  404b58:	sbb    ah,BYTE PTR [eax+ebx*4-0x53]
  404b5c:	daa    
  404b5d:	repnz pop ebx
  404b5f:	pop    edi
  404b60:	(bad)  
  404b61:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b63:	ret    
  404b64:	dec    esp
  404b65:	daa    
  404b66:	sub    BYTE PTR [edx-0x2a49122d],dh
  404b6c:	dec    ebp
  404b6d:	cmc    
  404b6e:	popa   
  404b6f:	mov    al,ds:0x7c4320a1
  404b74:	dec    edi
  404b75:	mov    ebx,0x66cb88a0
  404b7a:	hlt    
  404b7b:	retf   0x593a
  404b7e:	popf   
  404b7f:	out    0x4d,eax
  404b81:	jmp    0x3314:0x7272eecf
  404b88:	in     al,dx
  404b89:	ret    0xdb95
  404b8c:	mov    edi,0xbe9071a2
  404b91:	arpl   cx,di
  404b93:	dec    ecx
  404b94:	mov    ch,0x4f
  404b96:	rcl    BYTE PTR [ebx-0x45],1
  404b99:	test   al,0x5e
  404b9b:	push   0x6c7cffbb
  404ba0:	and    DWORD PTR [eax+0x37],0xffffff8a
  404ba4:	and    DWORD PTR [eax],edx
  404ba6:	out    dx,eax
  404ba7:	into   
  404ba8:	adc    DWORD PTR [ebx-0x3dd9ef94],ecx
  404bae:	inc    edi
  404baf:	pop    esi
  404bb0:	mov    eax,0x79a070b0
  404bb5:	push   cs
  404bb6:	pop    ebx
  404bb7:	jnp    0x404b4d
  404bb9:	imul   esi,DWORD PTR [ecx-0x7b],0xffffffb8
  404bbd:	mov    esi,0xe9ebb3bd
  404bc2:	nop
  404bc3:	rcl    BYTE PTR [edx+esi*1-0x4a4c6b93],cl
  404bca:	stos   BYTE PTR es:[edi],al
  404bcb:	out    dx,al
  404bcc:	retf   
  404bcd:	mov    al,ds:0x51e88ba9
  404bd2:	stc    
  404bd3:	fndisi(8087 only) 
  404bd5:	inc    edi
  404bd6:	or     al,0x5e
  404bd8:	mov    eax,0xca13746a
  404bdd:	in     al,0xce
  404bdf:	push   esi
  404be0:	or     cl,bh
  404be2:	(bad)  
  404be3:	mov    ebx,0x560961ff
  404be8:	or     BYTE PTR [edx-0x69c59cf],0x91
  404bef:	mov    esp,0x30ad4e3
  404bf4:	rol    DWORD PTR [ebx],0xd8
  404bf7:	mov    cl,0x86
  404bf9:	pusha  
  404bfa:	dec    ebx
  404bfb:	xchg   esp,eax
  404bfc:	or     BYTE PTR [ebp+0x36],ah
  404bff:	dec    edi
  404c00:	xchg   ecx,eax
  404c02:	leave  
  404c03:	cmp    eax,0xa5314766
  404c08:	jno    0x404c39
  404c0a:	daa    
  404c0b:	mov    eax,DWORD PTR [ebp-0x62]
  404c0e:	fisubr DWORD PTR [edi-0x4d691b26]
  404c14:	sbb    eax,DWORD PTR [ebx+edi*2]
  404c17:	je     0x404c1f
  404c19:	add    dh,BYTE PTR [edi-0x1486ed13]
  404c1f:	jp     0x404c5f
  404c21:	and    BYTE PTR [ebx+0x40],cl
  404c24:	stos   DWORD PTR es:[edi],eax
  404c25:	(bad)  
  404c26:	cs in  eax,0xdf
  404c29:	push   ss
  404c2a:	pop    edx
  404c2b:	jno    0x404be8
  404c2d:	les    ebp,FWORD PTR gs:[edi-0x16f62132]
  404c34:	cdq    
  404c35:	adc    ebx,ebx
  404c37:	sahf   
  404c38:	aam    0x32
  404c3a:	cdq    
  404c3b:	call   0x7c644f
  404c40:	or     al,0x75
  404c42:	ins    BYTE PTR es:[edi],dx
  404c43:	xor    DWORD PTR [eax],ebx
  404c45:	sbb    dl,ah
  404c47:	in     al,0x7
  404c49:	push   edx
  404c4a:	ins    DWORD PTR es:[edi],dx
  404c4b:	cmp    edi,DWORD PTR [edx+0x130a8438]
  404c51:	push   0x42
  404c53:	fsubr  QWORD PTR [edx]
  404c55:	push   cs
  404c56:	mov    eax,DWORD PTR [ebp-0x4]
  404c59:	mov    ecx,DWORD PTR [ebp-0x18]
  404c5c:	xor    eax,ebx
  404c5e:	add    eax,edi
  404c60:	cmp    ecx,eax
  404c62:	je     0x404e26
  404c68:	mov    eax,ds:0x422014
  404c6d:	sbb    DWORD PTR ds:0x420fb4,eax
  404c73:	mov    eax,DWORD PTR [ebp-0x18]
  404c76:	mov    eax,DWORD PTR [eax+0x18]
  404c79:	mov    DWORD PTR [ebp-0x24],eax
  404c7c:	dec    DWORD PTR ds:0x420fa4
  404c82:	mov    eax,DWORD PTR [ebp-0x18]
  404c85:	mov    ecx,DWORD PTR ds:0x420e7a
  404c8b:	xor    ecx,DWORD PTR ds:0x422010
  404c91:	mov    DWORD PTR ds:0x420e7a,ecx
  404c97:	mov    ecx,DWORD PTR [ebp+0x8]
  404c9a:	add    ecx,DWORD PTR [eax+0x20]
  404c9d:	mov    DWORD PTR [ebp-0x2c],ecx
  404ca0:	or     eax,DWORD PTR ds:0x420efc
  404ca6:	mov    eax,DWORD PTR [ebp-0x18]
  404ca9:	mov    ecx,DWORD PTR [ebp+0x8]
  404cac:	xor    DWORD PTR ds:0x420f70,0x420fa0
  404cb6:	add    ecx,DWORD PTR [eax+0x24]
  404cb9:	xor    eax,eax
  404cbb:	add    eax,DWORD PTR ds:0x420e96
  404cc1:	xor    DWORD PTR ds:0x422004,eax
  404cc7:	mov    DWORD PTR [ebp-0x34],ecx
  404cca:	mov    eax,DWORD PTR [ebp-0x18]
  404ccd:	mov    ecx,DWORD PTR [ebp+0x8]
  404cd0:	xor    DWORD PTR ds:0x422018,0x422010
  404cda:	add    ecx,DWORD PTR [eax+0x1c]
  404cdd:	mov    DWORD PTR ds:0x420ea2,ebx
  404ce3:	mov    eax,edi
  404ce5:	mov    DWORD PTR ds:0x420ef8,0x31e9
  404cef:	mov    DWORD PTR [ebp-0x18],ecx
  404cf2:	mov    DWORD PTR ds:0x422000,0x101a
  404cfc:	jmp    0x404dee
  404d01:	mov    DWORD PTR ds:0x420fb4,0x15
  404d0b:	cmp    DWORD PTR ds:0x420fb4,0x0
  404d12:	je     0x404d62
  404d18:	cmp    DWORD PTR ds:0x420fb4,0x8
  404d1f:	jne    0x404d34
  404d25:	push   DWORD PTR [ebp-0x24]
  404d28:	push   DWORD PTR [ebp-0x20]
  404d2b:	push   DWORD PTR [ebp-0x20]
  404d2e:	call   DWORD PTR ds:0x4247e1
  404d34:	cmp    DWORD PTR ds:0x420fb4,0x9
  404d3b:	jne    0x404d50
  404d41:	xor    edx,edx
  404d43:	add    edx,DWORD PTR ds:0x420fb4
  404d49:	dec    edx
  404d4a:	mov    DWORD PTR ds:0x420fb4,edx
  404d50:	mov    edx,DWORD PTR ds:0x420fb4
  404d56:	dec    edx
  404d57:	mov    DWORD PTR ds:0x420fb4,edx
  404d5d:	jmp    0x404d0b
  404d62:	mov    ecx,DWORD PTR [ebp-0x2c]
  404d65:	xor    edx,DWORD PTR ds:0x420e96
  404d6b:	mov    edx,DWORD PTR [ebp+0x8]
  404d6e:	add    DWORD PTR ds:0x420fb0,0x420f70
  404d78:	add    edx,DWORD PTR [ecx+esi*4]
  404d7b:	mov    DWORD PTR [ebp-0x28],edx
  404d7e:	movzx  ecx,BYTE PTR ds:0x420f00
  404d85:	or     DWORD PTR ds:0x420e7a,ecx
  404d8b:	mov    ecx,DWORD PTR [ebp-0x4]
  404d8e:	mov    edx,DWORD PTR [ebp-0x28]
  404d91:	adc    DWORD PTR ds:0x420fb4,0x420f00
  404d9b:	xor    ecx,ebx
  404d9d:	add    ecx,eax
  404d9f:	cmp    edx,ecx
  404da1:	mov    DWORD PTR ds:0x422000,0x2434
  404dab:	je     0x404dee
  404db1:	jmp    0x404dda
  404db6:	mov    ecx,DWORD PTR [ebp-0x4]
  404db9:	mov    edx,DWORD PTR [ebp-0x8]
  404dbc:	xor    ecx,ebx
  404dbe:	add    ecx,eax
  404dc0:	cmp    edx,ecx
  404dc2:	je     0x404e32
  404dc8:	mov    ecx,DWORD PTR [ebp-0x4]
  404dcb:	mov    edx,DWORD PTR [ebp-0x30]
  404dce:	xor    ecx,ebx
  404dd0:	add    ecx,eax
  404dd2:	cmp    edx,ecx
  404dd4:	je     0x404e41
  404dda:	lea    eax,[ebp-0x8]
  404ddd:	push   eax
  404dde:	push   DWORD PTR [ebp-0x28]
  404de1:	push   DWORD PTR [ebp+0xc]
  404de4:	call   0x410c6c
  404de9:	mov    eax,0x3272dd
  404dee:	mov    ecx,DWORD PTR [ebp-0x4]
  404df1:	mov    edx,DWORD PTR [ebp-0x8]
  404df4:	xor    ecx,ebx
  404df6:	add    ecx,eax
  404df8:	cmp    edx,ecx
  404dfa:	je     0x404e15
  404e00:	mov    ecx,DWORD PTR [ebp-0x34]
  404e03:	movzx  ecx,WORD PTR [ecx+esi*2]
  404e07:	mov    edx,DWORD PTR [ebp-0x18]
  404e0a:	mov    ecx,DWORD PTR [edx+ecx*4]
  404e0d:	mov    DWORD PTR [ebp-0x38],ecx
  404e10:	jmp    0x404db6
  404e15:	mov    ecx,DWORD PTR [ebp-0x14]
  404e18:	xor    ecx,ebx
  404e1a:	lea    esi,[esi+ecx*1+0x3272dd]
  404e21:	jmp    0x402787
  404e26:	mov    eax,DWORD PTR [ebp-0x4]
  404e29:	xor    eax,ebx
  404e2b:	add    eax,edi
  404e2d:	jmp    0x407332
  404e32:	mov    eax,DWORD PTR [ebp-0x4]
  404e35:	xor    eax,ebx
  404e37:	add    eax,0x3272dd
  404e3c:	jmp    0x407332
  404e41:	mov    ecx,DWORD PTR [ebp-0x38]
  404e44:	add    ecx,DWORD PTR [ebp+0x8]
  404e47:	mov    DWORD PTR [ebp-0x10],ecx
  404e4a:	mov    ecx,DWORD PTR [ebp-0x1c]
  404e4d:	test   ecx,ecx
  404e4f:	je     0x4072bd
  404e55:	mov    DWORD PTR [ebp-0x20],0x0
  404e5c:	push   0x3
  404e5e:	xor    edx,edx
  404e60:	pop    edx
  404e61:	add    edx,0x8
  404e64:	push   edx
  404e65:	pop    ecx
  404e66:	push   0x6
  404e68:	dec    ecx
  404e69:	pop    ebx
  404e6a:	dec    ebx
  404e6b:	xchg   ebx,ecx
  404e6d:	sub    ebx,ecx
  404e6f:	xchg   ebx,ecx
  404e71:	dec    ecx
  404e72:	mov    eax,DWORD PTR [ebp-0x1c]
  404e75:	imul   eax,ecx
  404e78:	sub    esp,eax
  404e7a:	mov    DWORD PTR [ebp-0x20],esp
  404e7d:	mov    eax,DWORD PTR [ebp-0x4]
  404e80:	mov    ecx,0x7510896
  404e85:	jmp    0x407212
  404e8a:	lock into 
  404e8c:	inc    esi
  404e8d:	push   cs
  404e8e:	mov    BYTE PTR [esi-0x8],dh
  404e91:	mov    al,0xbe
  404e93:	(bad)  
  404e94:	fs cld 
  404e96:	jb     0x404e67
  404e98:	call   0x7a9f5998
  404e9d:	jp     0x404ea9
  404e9f:	pop    edi
  404ea0:	jp     0x404f1c
  404ea2:	adc    ch,BYTE PTR [ebp+ecx*2-0x57164070]
  404ea9:	mov    esi,0x9a1bd820
  404eae:	pop    es
  404eaf:	adc    eax,0x380b73c7
  404eb4:	das    
  404eb5:	jb     0x404e6a
  404eb7:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  404eb9:	lahf   
  404eba:	inc    esi
  404ebb:	pop    edi
  404ebc:	and    eax,ebx
  404ebe:	leave  
  404ebf:	push   ecx
  404ec0:	dec    ebx
  404ec1:	push   ss
  404ec2:	and    bl,BYTE PTR [edi-0x58]
  404ec5:	or     dh,dh
  404ec7:	ret    
  404ec8:	mov    esp,0x1f062cc7
  404ecd:	int3   
  404ece:	dec    edx
  404ecf:	jecxz  0x404ecd
  404ed1:	or     al,0x9a
  404ed3:	jno    0x404ef8
  404ed5:	xlat   BYTE PTR ds:[ebx]
  404ed6:	lods   eax,DWORD PTR ds:[esi]
  404ed7:	out    0xfa,eax
  404ed9:	ja     0x404e6d
  404edb:	cmp    ch,bh
  404edd:	push   eax
  404ede:	inc    ecx
  404edf:	jbe    0x404e7f
  404ee1:	cmp    al,0x89
  404ee3:	adc    DWORD PTR [eax-0x4cd8f9d],edi
  404ee9:	cmc    
  404eea:	inc    esp
  404eeb:	mov    esi,0xb0d50a12
  404ef0:	ins    BYTE PTR es:[edi],dx
  404ef1:	popf   
  404ef2:	pusha  
  404ef3:	fidivr DWORD PTR [edi-0x29e3f062]
  404ef9:	in     eax,0xa4
  404efb:	mov    ch,0x2b
  404efd:	xor    esp,DWORD PTR [edx+0x5505bcae]
  404f03:	or     DWORD PTR [esi+0x5d2e7780],edi
  404f09:	mov    ebx,0x928738e2
  404f0e:	mov    eax,ds:0x5eb25d04
  404f13:	mov    ss,WORD PTR [esi-0x59541900]
  404f19:	cdq    
  404f1a:	cwde   
  404f1b:	cmp    BYTE PTR [ecx-0x22],dh
  404f1e:	inc    edx
  404f1f:	stc    
  404f20:	jmp    0xb76b:0x75c39df1
  404f27:	stos   BYTE PTR es:[edi],al
  404f28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f29:	inc    ecx
  404f2a:	gs ins BYTE PTR es:[edi],dx
  404f2c:	pop    edi
  404f2d:	leave  
  404f2e:	xchg   edi,eax
  404f2f:	test   esi,eax
  404f31:	dec    edx
  404f32:	xor    edx,DWORD PTR [esi]
  404f34:	or     al,0x1e
  404f36:	not    bh
  404f38:	leave  
  404f39:	push   DWORD PTR [eax+0x62]
  404f3c:	push   edi
  404f3d:	pop    ds
  404f3e:	fnstsw ax
  404f40:	cld    
  404f41:	sub    eax,edi
  404f43:	(bad)  
  404f44:	out    dx,al
  404f45:	jb     0x404ee5
  404f47:	dec    eax
  404f48:	or     ecx,edx
  404f4a:	fs ins BYTE PTR es:[edi],dx
  404f4c:	mov    ch,0x59
  404f4e:	test   BYTE PTR [ebx],ch
  404f50:	cwde   
  404f51:	mov    dh,BYTE PTR [ebx]
  404f53:	addr16 push ebp
  404f55:	je     0x404eec
  404f57:	cmp    edx,edi
  404f59:	mov    esp,0x9807d637
  404f5e:	out    dx,eax
  404f5f:	jae    0x404f3b
  404f61:	jnp    0x404fcf
  404f63:	and    DWORD PTR [ecx+eiz*4+0x64],ecx
  404f67:	fsubr  QWORD PTR [eax]
  404f69:	lods   al,BYTE PTR ds:[esi]
  404f6a:	test   dl,cl
  404f6c:	outs   dx,BYTE PTR ds:[esi]
  404f6d:	push   ebx
  404f6e:	js     0x404ef9
  404f70:	js     0x404f02
  404f72:	faddp  st(0),st
  404f74:	mov    WORD PTR [eax+eiz*2+0x30eac54a],es
  404f7b:	inc    esp
  404f7c:	xor    eax,0x388b08fc
  404f81:	imul   ebp,DWORD PTR [ebx],0xa96eea08
  404f87:	mov    al,ds:0x582284a3
  404f8c:	and    cl,bh
  404f8e:	clc    
  404f8f:	and    eax,DWORD PTR [edx-0x1dd63f6e]
  404f95:	not    DWORD PTR [edx]
  404f97:	arpl   bx,bp
  404f99:	fmul   QWORD PTR ds:0x2bee6c3c
  404f9f:	mov    ds:0xe84d0b71,al
  404fa4:	adc    al,0x53
  404fa6:	xchg   ecx,eax
  404fa7:	popf   
  404fa8:	shl    BYTE PTR [ebp+0x1],0xed
  404fac:	cmp    al,0xc
  404fae:	xor    dl,cl
  404fb0:	jle    0x404fde
  404fb2:	(bad)  
  404fb3:	mov    esi,0xb96e60a7
  404fb9:	adc    eax,0xba74b11e
  404fbe:	fcomp  QWORD PTR [edx]
  404fc0:	ss retf 0x943
  404fc4:	addr16 loope 0x404f7d
  404fc7:	sbb    BYTE PTR [ecx],ch
  404fc9:	sub    al,0x66
  404fcb:	mov    ah,BYTE PTR [ebx]
  404fcd:	or     edi,DWORD PTR [edi-0x6684a28e]
  404fd3:	jne    0x404fae
  404fd5:	xchg   edi,eax
  404fd6:	fild   WORD PTR [edi+0x8]
  404fd9:	stos   DWORD PTR es:[edi],eax
  404fda:	adc    ebp,edx
  404fdc:	sub    eax,0x1898ee33
  404fe1:	lock sbb DWORD PTR [edi+eiz*4-0xa],ecx
  404fe6:	ret    
  404fe7:	push   ds
  404fe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fe9:	push   es
  404fea:	cmp    BYTE PTR [esi+0x3d],cl
  404fed:	add    al,0xaa
  404fef:	add    ebx,DWORD PTR ds:0xcf82384f
  404ff5:	addr16 (bad) 
  404ff7:	out    dx,eax
  404ff8:	inc    ecx
  404ff9:	es cdq 
  404ffb:	stos   BYTE PTR es:[edi],al
  404ffc:	stos   DWORD PTR es:[edi],eax
  404ffd:	dec    DWORD PTR [eax+0x638507e1]
  405003:	and    eax,0x4ab41d44
  405008:	jl     0x404fb2
  40500a:	pop    es
  40500b:	popf   
  40500c:	outs   dx,BYTE PTR ds:[esi]
  40500d:	mov    eax,0x42bf7ed5
  405012:	xchg   esi,eax
  405013:	pop    ebp
  405014:	(bad)  [esi]
  405016:	adc    eax,0xa3515f73
  40501b:	jge    0x405012
  40501d:	retf   0x9bb7
  405020:	clc    
  405021:	mov    ds:0x8517b3f9,eax
  405026:	add    edx,DWORD PTR [ebp-0x64b45c82]
  40502c:	inc    ebp
  40502d:	popa   
  40502e:	ins    DWORD PTR es:[edi],dx
  40502f:	sub    al,0x39
  405031:	sbb    al,0xa
  405033:	add    al,0x6b
  405035:	stos   DWORD PTR es:[edi],eax
  405036:	mov    edx,0xd4209bd6
  40503b:	arpl   WORD PTR [edx-0x3fbbaeab],bp
  405041:	mov    esi,0x3b999a07
  405046:	fmul   QWORD PTR ds:0xf0e950b3
  40504c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40504d:	ret    0x9da5
  405050:	clc    
  405051:	inc    edi
  405052:	rcr    ch,0x54
  405055:	and    eax,0xb86d2de3
  40505a:	bound  esp,QWORD PTR [ebp+ebx*2-0x6d8813ff]
  405061:	jns    0x405068
  405063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405064:	(bad)  
  405065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405066:	ja     0x405079
  405068:	jns    0x4050a1
  40506a:	call   ecx
  40506c:	add    ebp,esi
  40506e:	shl    BYTE PTR [eax+0x39],1
  405071:	mov    cl,0xda
  405073:	jnp    0x4050b5
  405075:	(bad)  
  405076:	stos   DWORD PTR es:[edi],eax
  405077:	fbld   TBYTE PTR [ecx-0x33]
  40507a:	push   ecx
  40507b:	and    al,dl
  40507d:	ins    DWORD PTR es:[edi],dx
  40507e:	sub    DWORD PTR [esi+0x70],ecx
  405081:	mov    bl,0xee
  405083:	stc    
  405084:	adc    BYTE PTR [ecx+0x25],dl
  405087:	arpl   WORD PTR [eax],si
  405089:	push   0xcafc8e73
  40508e:	push   ss
  40508f:	pop    ds
  405090:	xchg   ecx,eax
  405091:	push   esp
  405092:	stos   DWORD PTR es:[edi],eax
  405093:	loope  0x405055
  405095:	scas   eax,DWORD PTR es:[edi]
  405096:	mov    dl,0x5d
  405098:	cmp    al,0xed
  40509a:	cld    
  40509b:	mov    cl,0x47
  40509d:	jecxz  0x4050cd
  40509f:	js     0x4050fb
  4050a1:	inc    edi
  4050a2:	call   0x5d12:0xc463f98b
  4050a9:	cwde   
  4050aa:	jb     0x40504c
  4050ac:	and    BYTE PTR [eax],al
  4050ae:	and    esp,DWORD PTR [ecx-0xd]
  4050b1:	pop    ecx
  4050b2:	loope  0x40506a
  4050b4:	push   ds
  4050b5:	dec    esi
  4050b6:	xchg   esp,eax
  4050b7:	ror    DWORD PTR [edi+0x6d43a9b8],1
  4050bd:	sub    BYTE PTR [esi],bl
  4050bf:	ins    DWORD PTR es:[edi],dx
  4050c0:	out    0x6,eax
  4050c2:	dec    ebp
  4050c3:	push   eax
  4050c4:	mov    al,ds:0xbac23c5d
  4050c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050ca:	push   0x4e12880e
  4050cf:	add    al,0xad
  4050d1:	cmp    eax,0xc77d4bb9
  4050d6:	fdivr  DWORD PTR [edx]
  4050d8:	repz mov ch,0x4b
  4050db:	mov    edx,DWORD PTR [ebx]
  4050dd:	div    DWORD PTR [edi-0x58eb43b1]
  4050e3:	mov    bl,0xab
  4050e5:	cmp    al,0xa3
  4050e7:	sbb    al,BYTE PTR [ecx]
  4050e9:	scas   eax,DWORD PTR es:[edi]
  4050ea:	jge    0x40514e
  4050ec:	sbb    ecx,DWORD PTR [edi]
  4050ee:	int3   
  4050ef:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050f1:	mov    DWORD PTR [edx+0x7b848660],eax
  4050f7:	adc    al,0xa0
  4050f9:	inc    eax
  4050fa:	ret    
  4050fb:	daa    
  4050fc:	and    eax,0x1849bd14
  405101:	and    eax,0xcae0a9f0
  405106:	adc    ch,bh
  405108:	add    esp,ebp
  40510a:	adc    bh,BYTE PTR [ebx-0xe]
  40510d:	and    eax,0xe3e753a3
  405112:	push   esi
  405113:	push   eax
  405114:	ds aam 0x82
  405117:	push   esi
  405118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405119:	out    0xb4,eax
  40511b:	push   esp
  40511c:	scas   al,BYTE PTR es:[edi]
  40511d:	jmp    0x405197
  40511f:	into   
  405120:	xor    ebp,eax
  405122:	cs cdq 
  405124:	mov    ss,WORD PTR [ebp-0xe015c2d]
  40512a:	dec    edx
  40512b:	rcl    cl,0x2a
  40512e:	sti    
  40512f:	add    eax,0x7673cfa8
  405134:	adc    edi,esp
  405136:	fdivr  DWORD PTR [esi+esi*1+0x5aff9c26]
  40513d:	sub    eax,0x25cf8bf7
  405142:	bound  esp,QWORD PTR [eax]
  405144:	leave  
  405145:	mov    eax,0xcc6cc188
  40514a:	pusha  
  40514b:	or     eax,0x9d036f1c
  405150:	outs   dx,DWORD PTR ds:[esi]
  405151:	imul   edx,DWORD PTR [edi+0x3],0x66a3412a
  405158:	xchg   DWORD PTR [edi],edi
  40515a:	lea    ebp,[edx]
  40515c:	addr16 mov eax,0xcab5d850
  405162:	push   esi
  405163:	fcom   DWORD PTR [esi+0x1]
  405166:	xor    eax,0xb3ed6ea4
  40516b:	mov    esp,0xfd01f701
  405170:	jge    0x40513a
  405172:	pop    ds
  405173:	and    dl,al
  405175:	lods   al,BYTE PTR ds:[esi]
  405176:	jg     0x40518b
  405178:	pop    esp
  405179:	fisubr WORD PTR [ecx+ecx*2-0x5cc5b3bb]
  405180:	pop    esp
  405181:	cwde   
  405182:	fist   WORD PTR [edi+ebx*2]
  405185:	mov    ebx,0x95079f1c
  40518a:	cdq    
  40518b:	mov    ebp,0xbda10ea6
  405190:	mov    ebp,0x3bf8422a
  405195:	xchg   edi,eax
  405196:	mov    eax,ds:0x7a788c66
  40519b:	leave  
  40519c:	push   ss
  40519d:	xor    al,0xc2
  40519f:	cmp    BYTE PTR [esp+edi*1],0x66
  4051a3:	gs push esp
  4051a5:	sbb    ch,BYTE PTR [esi+ebp*4-0x3]
  4051a9:	add    esp,DWORD PTR [eax-0x73e472bc]
  4051af:	arpl   WORD PTR [eax+0x7c],bp
  4051b2:	neg    DWORD PTR [esi-0x1d]
  4051b5:	lds    ebp,FWORD PTR [ecx-0x36ba8c7d]
  4051bb:	and    edx,edi
  4051bd:	xchg   edx,eax
  4051be:	test   ecx,ebp
  4051c0:	push   ebp
  4051c1:	outs   dx,DWORD PTR ds:[esi]
  4051c2:	sub    eax,0x89b2f02a
  4051c7:	fs push esi
  4051c9:	leave  
  4051ca:	xchg   edx,eax
  4051cb:	dec    BYTE PTR [eax]
  4051cd:	fild   DWORD PTR [ebx-0x59]
  4051d0:	mov    edi,0x8ea4dddf
  4051d5:	xchg   BYTE PTR [esp+ebp*8],al
  4051d8:	or     ebp,DWORD PTR [edx-0x48]
  4051db:	xchg   ebx,eax
  4051dc:	aas    
  4051dd:	dec    edi
  4051de:	and    eax,0xb062c652
  4051e3:	rol    DWORD PTR [esp+0x732dfa26],1
  4051ea:	mov    eax,ds:0x7c7d652
  4051ef:	jmp    0x1974:0x9053dfb4
  4051f6:	push   esi
  4051f7:	sbb    al,0x6d
  4051f9:	xchg   esi,eax
  4051fa:	ins    BYTE PTR es:[edi],dx
  4051fb:	int3   
  4051fc:	xor    ebp,DWORD PTR [ebx+0x34]
  4051ff:	addr16 or ch,0xba
  405203:	mov    esp,0xe7f15527
  405208:	mov    WORD PTR [edx+0x5e],ds
  40520b:	mov    DWORD PTR [ecx+0x6d2db7ae],esp
  405211:	or     ecx,DWORD PTR [edx]
  405213:	xlat   BYTE PTR ds:[ebx]
  405214:	xor    eax,0xc37190cf
  405219:	rol    dh,1
  40521b:	sbb    eax,DWORD PTR [ecx]
  40521d:	jne    0x405209
  40521f:	jmp    0x523f:0x2b166055
  405226:	clc    
  405227:	cmp    ebx,ebx
  405229:	jb     0x405228
  40522b:	fistp  DWORD PTR [esp+ecx*4]
  40522e:	sub    BYTE PTR [edx-0x11],cl
  405231:	ss sti 
  405233:	pop    ebp
  405234:	mov    WORD PTR [ebx-0x7c7cdb7c],es
  40523a:	adc    DWORD PTR [edx-0x23],eax
  40523d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40523e:	and    eax,0xb3092f1f
  405243:	sub    esi,esp
  405245:	push   eax
  405246:	sbb    BYTE PTR [esi+0x69d67004],bl
  40524c:	jb     0x4052b6
  40524e:	leave  
  40524f:	icebp  
  405250:	or     BYTE PTR [edi+0x65f5083b],0x4a
  405257:	(bad)  
  405258:	pop    eax
  405259:	pop    edi
  40525a:	or     DWORD PTR [ebx-0x55d2d000],esi
  405260:	scas   al,BYTE PTR es:[edi]
  405261:	adc    eax,0x595fcfc2
  405266:	neg    BYTE PTR [ebx]
  405268:	xchg   edi,eax
  405269:	xchg   dl,bh
  40526b:	sar    BYTE PTR [edx+0x1d10c90c],1
  405271:	fild   QWORD PTR [ecx]
  405273:	dec    esi
  405274:	jae    0x405205
  405276:	cld    
  405277:	out    dx,al
  405278:	push   edi
  405279:	imul   eax,DWORD PTR [ecx+0x7c],0xffffff83
  40527d:	jg     0x4052f0
  40527f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405280:	add    BYTE PTR ds:0x5c9031e0,ch
  405286:	dec    ecx
  405287:	mov    edi,0xd23eb2b6
  40528c:	add    ebx,DWORD PTR [edi]
  40528e:	ret    0xebeb
  405291:	fnstcw WORD PTR [ebp+esi*4-0x295c0b9d]
  405298:	repz int 0xa2
  40529b:	shl    BYTE PTR [esi+0x4c],1
  40529e:	push   ebx
  40529f:	cmp    BYTE PTR ds:[ebp+0x1f],0xbb
  4052a4:	outs   dx,DWORD PTR ds:[esi]
  4052a5:	sub    BYTE PTR [esi+0x7e],bh
  4052a8:	dec    edi
  4052a9:	dec    edx
  4052aa:	test   al,0x61
  4052ac:	iret   
  4052ad:	xor    al,0x3c
  4052af:	add    BYTE PTR [eax],al
  4052b1:	mov    DWORD PTR [ebx-0xc766d5c],0x85a31cab
  4052bb:	cli    
  4052bc:	push   ecx
  4052bd:	xchg   edx,eax
  4052be:	mov    BYTE PTR [esi],ah
  4052c0:	fstp   DWORD PTR ds:0xafb554f8
  4052c6:	fistp  QWORD PTR [ebp+ebp*2+0x59e6decb]
  4052cd:	xchg   ebx,eax
  4052ce:	gs sub eax,0xb9a90e9a
  4052d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052d5:	or     DWORD PTR [ecx+eax*1+0x21fbd848],edx
  4052dc:	inc    ebp
  4052dd:	pop    ecx
  4052de:	outs   dx,DWORD PTR ds:[esi]
  4052df:	in     al,0xa7
  4052e1:	sahf   
  4052e2:	test   eax,0x8ef5d4b3
  4052e7:	sub    al,bh
  4052e9:	stos   DWORD PTR es:[edi],eax
  4052ea:	sub    esi,esi
  4052ec:	mov    ds:0x1408e656,al
  4052f1:	in     al,0x52
  4052f3:	inc    esi
  4052f4:	bound  esp,QWORD PTR [ecx]
  4052f6:	repnz sbb BYTE PTR [esi-0x47],ch
  4052fa:	jmp    0x438b45f7
  4052ff:	ror    DWORD PTR [ebx],1
  405301:	sub    ebp,DWORD PTR [edx+0x78]
  405304:	lahf   
  405305:	push   eax
  405306:	mov    DWORD PTR [eax],eax
  405308:	xchg   ebp,eax
  405309:	mov    WORD PTR [ebx+ebx*4],es
  40530c:	fnstcw WORD PTR [edx-0x3888babd]
  405312:	out    dx,al
  405313:	inc    ebx
  405314:	pop    ebx
  405315:	fild   WORD PTR [ecx+0x78]
  405318:	dec    eax
  405319:	xor    bh,al
  40531b:	or     esi,DWORD PTR [esi+0x5028d626]
  405321:	stos   DWORD PTR es:[edi],eax
  405322:	adc    esi,DWORD PTR [eax]
  405324:	fucomp st(3)
  405326:	test   al,0xf7
  405328:	out    dx,eax
  405329:	test   eax,0x456385a0
  40532e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40532f:	dec    eax
  405330:	mov    esi,0x5451ad64
  405335:	dec    esp
  405336:	cs inc esi
  405338:	mov    eax,ds:0xb158e1ca
  40533d:	pop    ecx
  40533e:	rol    ebp,0xc8
  405341:	(bad)  
  405342:	jg     0x405337
  405344:	adc    ebx,DWORD PTR ds:0x79e0a298
  40534a:	repz and cl,ch
  40534d:	ficom  DWORD PTR [eax-0x13]
  405350:	mov    bl,0x8e
  405352:	cmp    dh,bl
  405354:	jbe    0x40536b
  405356:	pop    ss
  405357:	scas   al,BYTE PTR es:[edi]
  405358:	sub    ecx,DWORD PTR [ebp+0x724a6143]
  40535e:	cwde   
  40535f:	add    eax,0x53fd44b
  405364:	mov    ds:0x329de63a,al
  405369:	out    dx,eax
  40536a:	addr16 (bad) 
  40536c:	retf   
  40536d:	retf   0xafd0
  405370:	push   cs
  405371:	jns    0x40531f
  405373:	neg    DWORD PTR [ebx+0x9]
  405376:	pop    ebx
  405377:	aaa    
  405378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405379:	cmp    esi,DWORD PTR [eax]
  40537b:	stos   BYTE PTR es:[edi],al
  40537c:	cmp    al,BYTE PTR [edi]
  40537e:	cmp    BYTE PTR [edi],dl
  405380:	dec    eax
  405381:	cli    
  405382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405383:	call   0x266766b4
  405388:	jbe    0x405401
  40538a:	xor    al,0x90
  40538c:	push   ebx
  40538d:	fucomi st,st(2)
  40538f:	sbb    DWORD PTR ds:0xc1997be5,edi
  405395:	loop   0x4053d6
  405397:	fstp   DWORD PTR [eax+ebp*1-0x72f9a354]
  40539e:	mov    cl,0xa
  4053a0:	jmp    0xc644a50
  4053a5:	pop    ss
  4053a6:	lods   eax,DWORD PTR ds:[esi]
  4053a7:	xor    al,0x1f
  4053a9:	mov    eax,DWORD PTR [edi-0x77]
  4053ac:	jno    0x405369
  4053ae:	inc    ecx
  4053af:	iret   
  4053b0:	and    BYTE PTR [ecx+0x48],ch
  4053b3:	xlat   BYTE PTR ds:[ebx]
  4053b4:	cmp    DWORD PTR [edx-0x66],esp
  4053b7:	daa    
  4053b8:	ins    BYTE PTR es:[edi],dx
  4053b9:	adc    eax,0x105734b6
  4053be:	or     esp,DWORD PTR [edi-0x51]
  4053c1:	enter  0x965c,0x7f
  4053c5:	jns    0x405380
  4053c7:	push   ds
  4053c8:	and    DWORD PTR [edi-0x39ed4b7f],edx
  4053ce:	xchg   BYTE PTR [edx],ch
  4053d0:	or     eax,0xf296a407
  4053d5:	icebp  
  4053d6:	lock dec eax
  4053d8:	push   ebp
  4053d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053da:	les    ecx,FWORD PTR [ebx-0x4f]
  4053dd:	das    
  4053de:	mov    ds:0x1f049b5c,al
  4053e3:	out    0xbf,al
  4053e5:	xchg   ecx,eax
  4053e6:	push   ecx
  4053e7:	paddusb mm7,QWORD PTR [ebx+0x71e3156b]
  4053ee:	fucom  st(4)
  4053f0:	jns    0x405401
  4053f2:	jmp    0x405396
  4053f4:	mov    eax,ds:0x9c5b0e54
  4053f9:	mov    ecx,0x9af79b0f
  4053fe:	mov    bh,0x62
  405400:	push   esp
  405401:	inc    esi
  405402:	loop   0x40538a
  405404:	(bad)  
  405405:	icebp  
  405406:	rcl    esi,cl
  405408:	and    BYTE PTR [eax+0x6f],dh
  40540b:	int3   
  40540c:	jo     0x405434
  40540e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40540f:	mov    edx,0x35f7f824
  405414:	lods   eax,DWORD PTR ds:[esi]
  405415:	and    eax,0x2fe4fdb4
  40541a:	xor    DWORD PTR [ebx],edx
  40541c:	add    al,BYTE PTR [edx]
  40541e:	adc    dh,BYTE PTR [edi-0x11]
  405421:	lahf   
  405422:	retf   
  405423:	out    0xae,eax
  405425:	or     esp,edx
  405427:	fwait
  405428:	clc    
  405429:	inc    esp
  40542a:	jle    0x405433
  40542c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40542d:	push   ss
  40542e:	ja     0x405482
  405430:	pop    esi
  405431:	addr16 push edi
  405433:	das    
  405434:	jmp    0x4053c3
  405436:	repz sbb cl,dh
  405439:	pop    ss
  40543a:	mov    ah,0x2a
  40543c:	push   ebp
  40543d:	(bad)  
  40543e:	fcomp  DWORD PTR [edx+0x1]
  405441:	dec    edx
  405442:	nop
  405443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405444:	mov    edi,0x589985e7
  405449:	test   BYTE PTR [ecx+0x121d5d58],bl
  40544f:	and    DWORD PTR [ecx+0x55],eax
  405452:	sbb    BYTE PTR [ebx+0x52],bl
  405455:	jp     0x4053fe
  405457:	in     eax,dx
  405458:	push   0xf527eea6
  40545d:	jl     0x405486
  40545f:	mov    esi,0x6e3c4f
  405464:	lods   eax,DWORD PTR ds:[esi]
  405465:	xchg   edi,eax
  405466:	jle    0x40540d
  405468:	into   
  405469:	mov    al,0xcf
  40546b:	enter  0xc89a,0xc5
  40546f:	xchg   edi,eax
  405470:	ja     0x405444
  405472:	xchg   esi,eax
  405473:	sub    eax,0x956ddb97
  405478:	xor    BYTE PTR [edi-0x299d0f9b],dh
  40547e:	fild   QWORD PTR [eax]
  405480:	add    eax,DWORD PTR [ebp+0x2c]
  405483:	fwait
  405484:	pop    esp
  405485:	push   eax
  405486:	out    0xf3,eax
  405488:	idiv   BYTE PTR [esi-0x7268e836]
  40548e:	jnp    0x40549b
  405490:	inc    edx
  405491:	cmp    DWORD PTR [ebx+0x47d3335a],ebx
  405497:	lock fnstsw WORD PTR [edi+esi*8]
  40549b:	xchg   ebp,eax
  40549c:	adc    dh,cl
  40549e:	jge    0x4054fc
  4054a0:	lea    ecx,[ecx-0x3bd356a7]
  4054a6:	neg    DWORD PTR [edx+0x21ee8e9f]
  4054ac:	xchg   ebp,eax
  4054ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054ae:	aas    
  4054af:	ret    0xf61b
  4054b2:	fbld   TBYTE PTR [ebx+0x2]
  4054b5:	push   esp
  4054b6:	push   0xffffffc8
  4054b8:	(bad)  
  4054b9:	loop   0x405501
  4054bb:	mov    bl,BYTE PTR [edx-0x464721da]
  4054c1:	add    al,0xb6
  4054c3:	ja     0x405446
  4054c5:	mov    eax,gs:0xfe64a777
  4054cb:	scas   al,BYTE PTR es:[edi]
  4054cc:	add    al,0x8
  4054ce:	cmp    al,cl
  4054d0:	and    ecx,ebp
  4054d2:	ins    BYTE PTR es:[edi],dx
  4054d3:	adc    DWORD PTR [bp+0x1b87],esi
  4054d8:	jle    0x4054c3
  4054da:	(bad)  
  4054db:	cld    
  4054dc:	call   0x442cde9b
  4054e1:	scas   al,BYTE PTR es:[edi]
  4054e2:	pop    eax
  4054e3:	arpl   WORD PTR [ecx],si
  4054e5:	repnz mov BYTE PTR [ecx],bh
  4054e8:	inc    edi
  4054e9:	mov    edx,0x90f44bae
  4054ee:	mov    ds:0xa373ad0,al
  4054f3:	xchg   ebp,eax
  4054f4:	into   
  4054f5:	adc    esp,DWORD PTR [ebx+ebp*4+0x42]
  4054f9:	mov    esi,0xc83cdd08
  4054fe:	test   BYTE PTR [eax+edi*8],bl
  405501:	mov    al,ds:0x572af858
  405506:	test   al,0xa3
  405508:	jg     0x405572
  40550a:	sti    
  40550b:	mov    esp,eax
  40550d:	push   ebp
  40550e:	scas   al,BYTE PTR es:[edi]
  40550f:	adc    esp,ebx
  405511:	repz fstp TBYTE PTR es:[ebx+0x5b]
  405516:	test   bh,al
  405518:	mov    esp,0xe75172a7
  40551d:	or     cl,0x27
  405520:	jno    0x40550d
  405522:	(bad)  
  405523:	mov    BYTE PTR [edi+0x23cba5c8],dh
  405529:	pop    esi
  40552a:	mov    gs,WORD PTR [ebp+0x71]
  40552d:	and    ch,BYTE PTR [ebp-0x3d70c7f1]
  405533:	fisttp DWORD PTR [esi+0x714b834d]
  405539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40553a:	mov    esi,0x388d49f3
  40553f:	daa    
  405540:	call   0x5a9b:0xb3d2fa33
  405547:	jno    0x4054ed
  405549:	lds    esp,FWORD PTR [edi-0x58]
  40554c:	fdiv   QWORD PTR [bx+si-0x543]
  405551:	mov    bh,0x4a
  405553:	int    0xa3
  405555:	bound  esp,QWORD PTR [eax-0x6f02f860]
  40555b:	ror    edx,1
  40555d:	mov    cl,0x90
  40555f:	jne    0x40550e
  405561:	mov    ch,0xa3
  405563:	lds    ebx,FWORD PTR [eax]
  405565:	pop    ds
  405566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405567:	imul   DWORD PTR [edx+0x180b7e10]
  40556d:	sub    al,0xb
  40556f:	mov    al,0x54
  405571:	imul   ecx,edx,0xffffffab
  405574:	out    dx,eax
  405575:	cdq    
  405576:	xchg   esi,eax
  405577:	jns    0x40553a
  405579:	push   cs
  40557a:	das    
  40557b:	jb     0x4055f1
  40557d:	sbb    DWORD PTR [ebx-0x3b1c0cd],ebp
  405583:	mov    bh,0x21
  405585:	mov    dl,0x47
  405587:	mov    dh,0xa7
  405589:	jae    0x405607
  40558b:	(bad)  
  40558c:	jns    0x405528
  40558e:	cdq    
  40558f:	test   BYTE PTR [ecx+0x1a],ch
  405592:	pop    edi
  405593:	(bad)  [eax]
  405595:	out    0xa5,al
  405597:	xor    al,BYTE PTR [eax]
  405599:	jnp    0x405619
  40559b:	cli    
  40559c:	lods   eax,DWORD PTR ds:[esi]
  40559d:	and    eax,0xbaf09051
  4055a2:	or     dh,bh
  4055a4:	or     BYTE PTR [edi],cl
  4055a6:	test   BYTE PTR [esi-0x78],cl
  4055a9:	je     0x4055ea
  4055ab:	and    ebx,DWORD PTR [edx]
  4055ad:	stos   DWORD PTR es:[edi],eax
  4055ae:	sub    DWORD PTR [ebx+0x76],ebx
  4055b1:	lods   al,BYTE PTR ds:[esi]
  4055b2:	aam    0x5
  4055b4:	cmp    BYTE PTR [edx-0x655e440f],0xeb
  4055bb:	add    esp,ebx
  4055bd:	out    0x57,eax
  4055bf:	xor    BYTE PTR [esi+0x62404300],0xb1
  4055c6:	cld    
  4055c7:	popa   
  4055c8:	mov    ebp,0x7070600f
  4055cd:	jne    0x405621
  4055cf:	mov    edx,0x38b3e9c5
  4055d4:	in     eax,dx
  4055d5:	mov    edi,0x919991f3
  4055da:	dec    edx
  4055db:	or     eax,0x75e64e77
  4055e0:	sbb    eax,0xd3ebfffe
  4055e5:	inc    edx
  4055e6:	(bad)  
  4055e7:	cli    
  4055e8:	cmp    DWORD PTR [ebp-0x5a46bb6b],0xff1c5f1e
  4055f2:	and    eax,ebp
  4055f4:	clc    
  4055f5:	pop    ds
  4055f6:	sbb    esi,edx
  4055f8:	frstor [ecx+0x20b07bfe]
  4055fe:	and    edx,DWORD PTR [ecx+0x2133b8e7]
  405604:	shl    ah,0xe1
  405607:	in     eax,0x4
  405609:	adc    eax,0xeaba15ef
  40560e:	xor    DWORD PTR [ebp-0x75],edx
  405611:	mov    cs,ebx
  405613:	add    dh,BYTE PTR [edx+0x1a]
  405616:	(bad)  
  405617:	pop    ecx
  405618:	jo     0x40563c
  40561a:	cpuid  
  40561c:	ja     0x405640
  40561e:	pop    ds
  40561f:	icebp  
  405620:	out    dx,eax
  405621:	push   ss
  405622:	popa   
  405623:	xchg   DWORD PTR gs:[esi-0x22e2e6d9],esp
  40562a:	out    0x5e,al
  40562c:	push   eax
  40562d:	ficomp WORD PTR [ebp+0x1360335f]
  405633:	pop    es
  405634:	or     esi,eax
  405636:	(bad)  
  405637:	je     0x40561c
  405639:	push   ds
  40563a:	xor    eax,0x52cccd6f
  40563f:	add    al,0xe
  405641:	outs   dx,DWORD PTR ds:[esi]
  405642:	push   ds
  405643:	mov    al,0xe8
  405645:	call   0x675da7d7
  40564a:	cli    
  40564b:	xchg   edx,eax
  40564c:	mov    edi,0x5b9939a1
  405651:	cdq    
  405652:	fs mov esp,0x2505eb43
  405658:	pop    edi
  405659:	push   ss
  40565a:	cmp    dh,BYTE PTR [edx-0x3f]
  40565d:	call   0x2eb:0xbc9300cd
  405664:	call   0x7302:0x558c04f7
  40566b:	xchg   edx,eax
  40566c:	out    0x64,al
  40566e:	cmp    eax,0x20af916b
  405673:	add    al,0xd7
  405675:	adc    bl,ah
  405677:	js     0x4056b9
  405679:	stc    
  40567a:	sub    ch,BYTE PTR [edi+eiz*4]
  40567d:	mov    edi,0x35065004
  405682:	test   DWORD PTR ds:0x3de09209,ebx
  405688:	scas   eax,DWORD PTR es:[edi]
  405689:	out    0x6,eax
  40568b:	in     eax,dx
  40568c:	add    eax,0xfbbfa84
  405691:	ja     0x40566b
  405693:	neg    BYTE PTR [esi+0x2b]
  405696:	sar    DWORD PTR [ebp+0x73],cl
  405699:	dec    ebx
  40569a:	mov    bh,0xec
  40569c:	(bad)  
  40569d:	repz cmp BYTE PTR [ebp+0x7c],bl
  4056a1:	sahf   
  4056a2:	and    DWORD PTR [esi],eax
  4056a4:	stos   BYTE PTR es:[edi],al
  4056a5:	cdq    
  4056a6:	fimul  DWORD PTR ds:0xeed4f95
  4056ac:	sub    al,0xce
  4056ae:	lds    ebp,FWORD PTR [ecx+edi*8+0x3be07ca7]
  4056b5:	jmp    0x405722
  4056b7:	ins    BYTE PTR es:[edi],dx
  4056b8:	add    ebx,ecx
  4056ba:	cmc    
  4056bb:	mov    dl,0xce
  4056bd:	xor    eax,0xc5477ae4
  4056c2:	daa    
  4056c3:	dec    edi
  4056c4:	nop
  4056c5:	xor    eax,0x78039ffc
  4056ca:	sbb    al,0xf8
  4056cc:	stc    
  4056cd:	in     eax,0x15
  4056cf:	pop    edi
  4056d0:	add    al,0x3d
  4056d2:	and    BYTE PTR [ecx+0x1e],al
  4056d5:	and    BYTE PTR [ecx],0x90
  4056d8:	push   esp
  4056d9:	adc    BYTE PTR [ebx],ah
  4056db:	push   ebx
  4056dc:	and    esp,ecx
  4056de:	push   es
  4056df:	leave  
  4056e0:	push   cs
  4056e1:	cld    
  4056e2:	lds    eax,FWORD PTR [eax+0x6]
  4056e5:	jmp    0x405682
  4056e7:	cmovge ebx,DWORD PTR [ebp+0x48e73ab4]
  4056ee:	xor    al,0xf4
  4056f0:	mov    ah,0x7c
  4056f2:	adc    al,0xb8
  4056f4:	out    0x4e,eax
  4056f6:	outs   dx,DWORD PTR ds:[esi]
  4056f7:	mov    bl,0x98
  4056f9:	xor    esp,esp
  4056fb:	stc    
  4056fc:	dec    esp
  4056fd:	aaa    
  4056fe:	xor    al,0x85
  405700:	stos   BYTE PTR es:[edi],al
  405701:	jl     0x40576c
  405703:	cmp    BYTE PTR [ebp+0x269f1c3b],bh
  405709:	clc    
  40570a:	shr    cl,1
  40570c:	adc    al,0x30
  40570e:	stc    
  40570f:	adc    al,0x3d
  405711:	fiadd  WORD PTR [ebp+0x7a6c1958]
  405717:	icebp  
  405718:	loopne 0x405759
  40571a:	sahf   
  40571b:	out    0x17,al
  40571d:	jmp    0x27429f15
  405722:	jae    0x405753
  405724:	xor    edx,DWORD PTR [ecx]
  405726:	imul   esi,ebx,0xffffffb4
  405729:	addr16 adc al,0x17
  40572c:	mov    dl,BYTE PTR [ebx]
  40572e:	sahf   
  40572f:	call   ebx
  405731:	jbe    0x405792
  405733:	je     0x405789
  405735:	rcl    BYTE PTR [ecx+0x63cad0b6],cl
  40573b:	mov    dh,0x90
  40573d:	js     0x40579b
  40573f:	sar    DWORD PTR [ecx-0x77],1
  405742:	retf   
  405743:	mov    ecx,0xfa7c4d1c
  405748:	dec    ecx
  405749:	push   edi
  40574a:	ds test bl,bl
  40574d:	adc    al,0x34
  40574f:	aad    0x4c
  405751:	jge    0x405733
  405753:	inc    esp
  405754:	outs   dx,BYTE PTR ds:[esi]
  405755:	or     ch,BYTE PTR [edi+0x27bbcb5b]
  40575b:	sbb    eax,edx
  40575d:	mov    ebx,0x2c2b651
  405762:	je     0x405758
  405764:	ss xchg esi,eax
  405766:	inc    ecx
  405767:	add    BYTE PTR [esi-0x5aaa6233],dl
  40576d:	pop    es
  40576e:	xor    DWORD PTR [ebx*2-0x647120ea],edi
  405775:	std    
  405776:	stos   BYTE PTR es:[edi],al
  405777:	call   0x91d5:0x987e0202
  40577e:	add    BYTE PTR [ebx],0x4c
  405781:	push   ecx
  405782:	(bad)  
  405783:	out    dx,al
  405784:	jmp    0x75c9:0x4bc24d31
  40578b:	ja     0x405756
  40578d:	xchg   edx,eax
  40578e:	mov    dl,0x14
  405790:	faddp  st(7),st
  405792:	fsubr  DWORD PTR [esi]
  405794:	xchg   esi,eax
  405795:	sbb    DWORD PTR [edx+eiz*2],0x802881ee
  40579c:	ds in  eax,0x2c
  40579f:	bound  esp,QWORD PTR [eax]
  4057a1:	pop    esp
  4057a2:	jae    0x4057d4
  4057a4:	fiadd  DWORD PTR [eax+0x29]
  4057a7:	icebp  
  4057a8:	mov    WORD PTR [edx],gs
  4057aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057ab:	xor    al,0xa6
  4057ad:	inc    ebp
  4057ae:	mov    bl,0xa
  4057b0:	jmp    0x4057e4
  4057b2:	mov    ecx,0xdb976386
  4057b7:	inc    ebx
  4057b8:	mov    ds:0x3a821567,al
  4057bd:	jo     0x4057cf
  4057bf:	mov    ch,0x71
  4057c1:	sbb    al,0x6b
  4057c3:	and    eax,0xada65b5e
  4057c8:	inc    eax
  4057c9:	in     eax,dx
  4057ca:	sti    
  4057cb:	aas    
  4057cc:	lea    edx,[eax-0x57]
  4057cf:	cmc    
  4057d0:	mov    edx,0x99b1a169
  4057d5:	push   ds
  4057d6:	(bad)  
  4057d7:	jmp    0x405854
  4057d9:	push   esp
  4057da:	pop    edi
  4057db:	cs push ecx
  4057dd:	pushf  
  4057de:	retf   
  4057df:	loopne 0x405820
  4057e1:	ins    BYTE PTR es:[edi],dx
  4057e2:	pop    eax
  4057e3:	jmp    0x40584f
  4057e5:	mov    dh,0xe3
  4057e7:	jo     0x405861
  4057e9:	adc    BYTE PTR [eax-0x15],dl
  4057ec:	push   ecx
  4057ed:	pop    esi
  4057ee:	mov    ebx,0x59a5f34d
  4057f3:	test   eax,0x5fd97264
  4057f8:	mov    esp,edx
  4057fa:	mov    ch,0xcf
  4057fc:	add    al,BYTE PTR [ebp-0x51]
  4057ff:	add    BYTE PTR es:[edx+edi*2+0x49acc6b3],al
  405807:	dec    esp
  405808:	mov    ds:0xbbddfa3c,al
  40580d:	and    DWORD PTR gs:[edx+esi*8+0x68],esp
  405812:	sub    eax,0x8e58b206
  405817:	inc    esp
  405818:	sub    eax,DWORD PTR [esi+0x467c611b]
  40581e:	in     eax,dx
  40581f:	in     eax,dx
  405820:	fidiv  DWORD PTR [ecx]
  405822:	jmp    0x244ec3a8
  405827:	cmp    eax,0xb78003ca
  40582c:	dec    ebp
  40582d:	(bad)  
  40582e:	aaa    
  40582f:	aad    0x65
  405831:	xor    bh,BYTE PTR [eax]
  405833:	adc    edx,DWORD PTR [edi-0x55]
  405836:	int3   
  405837:	test   eax,0x150ec4db
  40583c:	mov    dh,0xed
  40583e:	and    BYTE PTR [ecx],ah
  405840:	lahf   
  405841:	fs clc 
  405843:	arpl   WORD PTR [ecx+esi*1-0x57],di
  405847:	out    dx,al
  405848:	push   ecx
  405849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40584a:	cwde   
  40584b:	cmc    
  40584c:	xchg   esp,eax
  40584d:	push   ebp
  40584e:	cdq    
  40584f:	fsubrp st(4),st
  405851:	je     0x405814
  405853:	or     BYTE PTR [edx-0x1e7d97ad],al
  405859:	fmul   st,st(7)
  40585b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40585c:	pop    ss
  40585d:	or     dh,cl
  40585f:	cmc    
  405860:	xchg   esp,eax
  405861:	in     eax,dx
  405862:	stc    
  405863:	scas   al,BYTE PTR es:[edi]
  405864:	jae    0x5e35bc90
  40586a:	popf   
  40586b:	sbb    al,0x25
  40586d:	sbb    cl,BYTE PTR ds:0x7012170d
  405873:	loop   0x4058bc
  405875:	aad    0xe2
  405877:	imul   esi,DWORD PTR [ecx+0x1a],0x6d
  40587b:	sbb    al,0x8d
  40587d:	mov    ah,0x66
  40587f:	loope  0x405863
  405881:	mov    ds:0x994de69f,eax
  405886:	jb     0x4058b6
  405888:	push   0x2da3a30b
  40588d:	push   edx
  40588e:	fmul   DWORD PTR [eax+0x5043b19]
  405894:	ss popf 
  405896:	fwait
  405897:	or     BYTE PTR [edi-0x3bd930d3],ch
  40589d:	std    
  40589e:	inc    ecx
  40589f:	mov    DWORD PTR [esi],ecx
  4058a1:	mov    ?,WORD PTR [esi+0x1e07e525]
  4058a7:	shl    DWORD PTR [esi+0x342d095d],0xe2
  4058ae:	jmp    0x405869
  4058b0:	rcl    bh,1
  4058b2:	loopne 0x405854
  4058b4:	sbb    DWORD PTR [ecx+0x62],0x12748cf
  4058bb:	pop    esp
  4058bc:	scas   al,BYTE PTR es:[edi]
  4058bd:	stos   BYTE PTR es:[edi],al
  4058be:	sbb    eax,0xe776d0e0
  4058c3:	repnz add esi,DWORD PTR [eax+0x59]
  4058c7:	or     DWORD PTR [ebx+esi*4+0x70],esp
  4058cb:	dec    si
  4058cd:	jmp    0xe866eb8f
  4058d2:	inc    ecx
  4058d3:	mov    cl,0x7a
  4058d5:	ret    0x37b4
  4058d8:	sub    al,0x5c
  4058da:	popf   
  4058db:	mov    edi,0x93c1bc12
  4058e0:	pop    ebx
  4058e1:	xlat   BYTE PTR ds:[ebx]
  4058e2:	ror    DWORD PTR [ebx+0x576f665f],cl
  4058e8:	xchg   BYTE PTR [ecx],dh
  4058ea:	je     0x405951
  4058ec:	xor    DWORD PTR [edx+0x17],ebx
  4058ef:	xchg   cl,ch
  4058f1:	mov    DWORD PTR [ebx+0x599a6f49],ebx
  4058f7:	(bad)  
  4058f8:	mov    ah,0x9b
  4058fa:	cmp    bh,BYTE PTR [ecx-0x7f]
  4058fd:	adc    al,0x3a
  4058ff:	js     0x4058c1
  405901:	ror    DWORD PTR [eax+0x75],0x23
  405905:	jmp    0xf141:0x5436aeaa
  40590c:	mov    dh,0x49
  40590e:	adc    ebx,eax
  405910:	jnp    0x4058ee
  405912:	dec    edx
  405913:	push   esp
  405914:	jg     0x405955
  405916:	cmc    
  405917:	addr16 push ecx
  405919:	and    esi,ebp
  40591b:	or     eax,0xb65f4e29
  405920:	popf   
  405921:	sbb    BYTE PTR [edi],0x7a
  405924:	sbb    ah,BYTE PTR [eax+0x5d9d7e0f]
  40592a:	les    ebx,FWORD PTR [edx+0x6cc3a3ca]
  405930:	ds dec edi
  405932:	fwait
  405933:	shr    esi,cl
  405935:	scas   eax,DWORD PTR es:[edi]
  405936:	(bad)  
  405937:	cmp    edx,DWORD PTR [ebp-0x72]
  40593a:	cwde   
  40593b:	inc    ecx
  40593c:	mov    bl,0x2d
  40593e:	fdivr  QWORD PTR [ecx]
  405940:	xlat   BYTE PTR ds:[ebx]
  405941:	push   eax
  405942:	mov    esp,ebx
  405944:	pop    ds
  405945:	or     esp,DWORD PTR [edx-0x3c758d6d]
  40594b:	shr    DWORD PTR [edi+0x20fc7f9],0x50
  405952:	ret    
  405953:	adc    DWORD PTR [ebx+0x56],edi
  405956:	(bad)
  40595a:	jae    0x405942
  40595c:	add    al,0xa7
  40595e:	xchg   edx,eax
  40595f:	cmp    eax,0x64a1e93c
  405964:	jo     0x405931
  405966:	inc    eax
  405968:	xlat   BYTE PTR ds:[ebx]
  405969:	adc    ah,bl
  40596b:	mov    bl,0x2c
  40596d:	aad    0xb4
  40596f:	dec    ebx
  405970:	rcl    BYTE PTR [ecx+0x3f],0xd5
  405974:	imul   ebx,DWORD PTR [ebp+edx*1-0x74],0xc4599c8f
  40597c:	popf   
  40597d:	stos   DWORD PTR es:[edi],eax
  40597e:	jo     0x4059ad
  405980:	outs   dx,DWORD PTR ds:[esi]
  405981:	(bad)  
  405983:	dec    edx
  405984:	outs   dx,BYTE PTR ds:[esi]
  405985:	fimul  DWORD PTR ds:0x439bef6b
  40598b:	aam    0x5d
  40598d:	popa   
  40598e:	pop    esp
  40598f:	mov    ?,WORD PTR [esi+0x6c]
  405992:	enter  0x46f2,0x34
  405996:	cdq    
  405997:	jo     0x405a17
  405999:	sti    
  40599a:	cmp    al,0xfd
  40599c:	push   ebp
  40599d:	pop    esp
  40599e:	in     eax,0x3a
  4059a0:	sbb    al,0x37
  4059a2:	and    BYTE PTR [edx],dh
  4059a4:	test   edx,edi
  4059a6:	mov    dh,0x47
  4059a8:	mov    eax,ds:0x1d8cecef
  4059ad:	bound  ecx,QWORD PTR [edx-0x653cba42]
  4059b3:	or     esp,edi
  4059b5:	mov    ebx,DWORD PTR [edi]
  4059b7:	adc    DWORD PTR [ebp+0x2470706f],esp
  4059bd:	test   al,dh
  4059bf:	fcmovbe st,st(6)
  4059c1:	test   DWORD PTR [edi],ecx
  4059c3:	les    ebx,FWORD PTR [ecx]
  4059c5:	sbb    BYTE PTR [edi],0x3c
  4059c8:	fs jp  0x4059f2
  4059cb:	push   cs
  4059cc:	dec    edi
  4059cd:	add    DWORD PTR [edx],ebx
  4059cf:	adc    al,0x11
  4059d1:	fwait
  4059d2:	sub    DWORD PTR [eax],ecx
  4059d4:	push   esi
  4059d5:	jne    0x405a26
  4059d7:	and    DWORD PTR [edi],eax
  4059d9:	dec    ebx
  4059da:	and    dh,al
  4059dc:	jmp    0xfc1370d9
  4059e1:	xor    DWORD PTR [eax],ebp
  4059e3:	inc    eax
  4059e4:	mov    DWORD PTR [ebp-0x481a824f],0x5fb80284
  4059ee:	dec    ebx
  4059ef:	add    eax,0x51f98a75
  4059f4:	mov    ecx,0x9257498b
  4059f9:	mov    ah,0xd
  4059fb:	test   esi,ebx
  4059fd:	push   ss
  4059fe:	ds inc eax
  405a00:	cld    
  405a01:	push   es
  405a02:	and    DWORD PTR [ebx-0xd],edx
  405a05:	shl    DWORD PTR [ecx],0x5d
  405a08:	xlat   BYTE PTR ds:[ebx]
  405a09:	push   ss
  405a0a:	push   0x78
  405a0c:	iret   
  405a0d:	jbe    0x405a81
  405a0f:	mov    eax,ds:0xfe3a3fa0
  405a14:	jmp    0x2abe8d79
  405a19:	fmul   DWORD PTR [eax+0x40]
  405a1c:	cmp    al,0x3d
  405a1e:	stos   DWORD PTR es:[edi],eax
  405a1f:	mov    BYTE PTR [eax-0x78],dh
  405a22:	or     BYTE PTR [ebx],dh
  405a24:	fwait
  405a25:	jne    0x4059d2
  405a27:	sub    edx,edx
  405a29:	iret   
  405a2a:	mov    ebx,0x8532f6f9
  405a2f:	aaa    
  405a30:	lock dec eax
  405a32:	in     al,0x93
  405a34:	jge    0x405a17
  405a36:	test   al,0x11
  405a38:	cmp    ebp,DWORD PTR [edx-0x2]
  405a3b:	dec    edx
  405a3c:	(bad)  
  405a3d:	pusha  
  405a3e:	push   ds
  405a3f:	adc    al,BYTE PTR [esi]
  405a41:	mov    dl,0x21
  405a43:	push   ebp
  405a44:	aas    
  405a45:	mov    esp,0x702753f8
  405a4a:	fnsave [ecx+0x3f]
  405a4d:	fdivr  QWORD PTR [eax+0x83397bb]
  405a53:	in     al,0xf6
  405a55:	pop    ebp
  405a56:	push   0xfffffff8
  405a58:	aam    0x9
  405a5a:	aas    
  405a5b:	or     dh,BYTE PTR [ecx-0x24128d58]
  405a61:	pop    es
  405a62:	pop    ebx
  405a63:	pop    ebp
  405a64:	pop    ss
  405a65:	xor    BYTE PTR [ecx],0xb0
  405a68:	adc    esi,DWORD PTR [edi]
  405a6a:	fstp   QWORD PTR [eax+ebx*8+0x58]
  405a6e:	js     0x405a08
  405a70:	arpl   WORD PTR cs:[edx-0x2ce3bd6],di
  405a77:	jns    0x405aca
  405a79:	cmp    eax,0xadd2d2e7
  405a7e:	and    ecx,DWORD PTR [edi+0x7]
  405a81:	in     eax,0x8e
  405a83:	js     0x405ac9
  405a85:	cld    
  405a86:	or     al,0x58
  405a88:	mov    edi,0xef6eccf6
  405a8d:	fcom   QWORD PTR cs:[eax+0xf]
  405a91:	mov    bh,0x6b
  405a93:	mov    eax,ebx
  405a95:	add    bh,ch
  405a97:	inc    edi
  405a98:	xchg   BYTE PTR [eax],dl
  405a9a:	jmp    0xbb53:0xbaee3829
  405aa1:	outs   dx,BYTE PTR ds:[esi]
  405aa2:	inc    ebx
  405aa3:	sub    esp,DWORD PTR [eax+eiz*1]
  405aa6:	mov    ah,0x6e
  405aa8:	push   0x41
  405aaa:	add    eax,0xba3ff439
  405aaf:	in     al,dx
  405ab0:	mov    edx,0x50eb037c
  405ab5:	sub    ch,BYTE PTR ds:[edx-0x5d75b3e4]
  405abc:	push   ebx
  405abd:	cs inc edi
  405abf:	pop    es
  405ac0:	and    ch,dl
  405ac2:	push   cs
  405ac3:	dec    edi
  405ac4:	inc    edx
  405ac5:	dec    esp
  405ac6:	and    al,ch
  405ac8:	repz jp 0x405aff
  405acb:	(bad)  
  405acc:	aad    0xb8
  405ace:	mov    edi,0xfe09199e
  405ad3:	and    BYTE PTR [ecx+0x78bbf89b],bh
  405ad9:	sahf   
  405ada:	jl     0x405b3e
  405adc:	mov    eax,ds:0x9792d6de
  405ae1:	xor    ah,BYTE PTR [ebx-0xb]
  405ae4:	sub    edx,DWORD PTR ds:0xbc0ca9fb
  405aea:	mul    ch
  405aec:	push   es
  405aed:	clc    
  405aee:	jge    0x405b3d
  405af0:	jmp    0x6ab8:0x7fbc2336
  405af7:	or     dh,dl
  405af9:	and    BYTE PTR [eax+ecx*4],bh
  405afc:	inc    esp
  405afd:	add    bh,BYTE PTR [eax]
  405aff:	jbe    0x405b71
  405b01:	mov    ?,edx
  405b03:	in     eax,dx
  405b04:	neg    BYTE PTR [edi-0x75]
  405b07:	loopne 0x405add
  405b09:	xchg   edi,eax
  405b0a:	test   al,0xaf
  405b0c:	add    eax,ecx
  405b0e:	inc    edx
  405b0f:	lock cli 
  405b11:	and    BYTE PTR [ecx-0x21],ch
  405b14:	add    al,0x3f
  405b16:	in     al,dx
  405b17:	ja     0x405b14
  405b19:	out    dx,al
  405b1a:	imul   ebx,eax,0x2e
  405b1d:	xor    dh,BYTE PTR [ebx-0x6d970583]
  405b23:	mov    ecx,0x336cfa45
  405b28:	test   cl,dl
  405b2a:	xchg   ebp,eax
  405b2b:	cwde   
  405b2c:	pusha  
  405b2d:	(bad)  
  405b2e:	scas   eax,DWORD PTR es:[edi]
  405b2f:	nop
  405b30:	add    ecx,esp
  405b32:	daa    
  405b33:	addr16 mov al,0x8d
  405b36:	test   ah,ch
  405b38:	test   ecx,ecx
  405b3a:	pop    edx
  405b3b:	jge    0x405b92
  405b3d:	mov    esp,DWORD PTR [ebx]
  405b3f:	xchg   ebx,eax
  405b40:	or     dl,BYTE PTR [edi+0x587e5ac2]
  405b46:	fisttp QWORD PTR [eax-0x7a864f66]
  405b4c:	mov    esi,0xbd94e98b
  405b51:	fst    DWORD PTR [ebx+eiz*8]
  405b54:	lods   eax,DWORD PTR ds:[esi]
  405b55:	cs jmp 0x405bb4
  405b58:	test   al,0xdf
  405b5a:	or     al,0x9f
  405b5c:	(bad)  
  405b5d:	lahf   
  405b5e:	push   0x44f3129d
  405b63:	imul   cx,dx,0xffeb
  405b67:	aas    
  405b68:	nop
  405b69:	push   ebx
  405b6a:	(bad)  
  405b6b:	data16 test al,dh
  405b6e:	int3   
  405b6f:	inc    esi
  405b70:	push   ecx
  405b71:	push   edx
  405b72:	call   0xb83668d2
  405b77:	jge    0x405b05
  405b79:	aas    
  405b7a:	retf   
  405b7b:	out    0x93,eax
  405b7d:	nop
  405b7e:	xchg   esi,eax
  405b7f:	push   edx
  405b80:	xor    DWORD PTR [ebx],edi
  405b82:	stos   DWORD PTR es:[edi],eax
  405b83:	repz jno 0x405b7e
  405b86:	retf   
  405b87:	sbb    edi,DWORD PTR [ebx-0x58]
  405b8a:	pushf  
  405b8b:	jmp    DWORD PTR [ebx+0x7e]
  405b8e:	and    cl,dh
  405b90:	call   0x9d0a:0xb7e6bfe8
  405b97:	xor    bl,BYTE PTR [esi-0x5b]
  405b9a:	xchg   esi,eax
  405b9b:	and    ebp,esi
  405b9d:	cmp    al,0xa5
  405b9f:	mov    bh,dl
  405ba1:	fcmovu st,st(3)
  405ba3:	dec    ebp
  405ba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ba5:	(bad)  
  405ba6:	retf   0xd36f
  405ba9:	repz cmc 
  405bab:	push   ecx
  405bac:	ja     0x405b32
  405bae:	push   cs
  405baf:	das    
  405bb0:	into   
  405bb1:	fwait
  405bb2:	add    dl,BYTE PTR [edi-0x6c]
  405bb5:	mov    bl,0x1e
  405bb7:	cmp    eax,0xf07cd69
  405bbc:	xchg   edx,eax
  405bbd:	inc    esi
  405bbe:	jl     0x405bf2
  405bc0:	xchg   al,cl
  405bc2:	loop   0x405c25
  405bc4:	dec    esp
  405bc5:	push   eax
  405bc6:	push   es
  405bc7:	leave  
  405bc8:	call   0xd47ee02b
  405bcd:	int    0x69
  405bcf:	sbb    eax,0x6a81cf28
  405bd4:	ds (bad) ds:[ebx-0x3a]
  405bd9:	xchg   esi,eax
  405bda:	outs   dx,DWORD PTR ds:[esi]
  405bdb:	sub    ah,BYTE PTR [esi-0x66]
  405bde:	ficom  DWORD PTR [edi+0x76a495a3]
  405be4:	mov    al,ds:0x8aa97e72
  405be9:	inc    eax
  405bea:	mov    ebp,0x8ee419e5
  405bef:	push   ebx
  405bf0:	jmp    0x405c14
  405bf2:	ja     0x405c26
  405bf4:	jecxz  0x405c5a
  405bf6:	pop    eax
  405bf7:	dec    ebx
  405bf8:	call   0x627d:0x2d42ef8f
  405bff:	(bad)  
  405c00:	out    0x8d,eax
  405c02:	and    bh,bh
  405c04:	pop    esp
  405c05:	or     eax,0xb92b0f17
  405c0a:	or     ebx,DWORD PTR [edi-0x44]
  405c0d:	ret    0xbc22
  405c10:	cmp    cl,BYTE PTR [ecx]
  405c12:	xor    ebx,DWORD PTR [eax-0x25]
  405c15:	ss mov ebx,0x2f1fa725
  405c1b:	test   edi,0x33b9f0b2
  405c21:	xlat   BYTE PTR ds:[ebx]
  405c22:	pop    esp
  405c23:	jmp    0xbc94f107
  405c28:	mov    ebp,0x34ed4906
  405c2d:	out    0x4e,eax
  405c2f:	cli    
  405c30:	xchg   edx,eax
  405c31:	push   eax
  405c32:	mov    ch,BYTE PTR [eax-0xa]
  405c35:	neg    BYTE PTR [ebx+0x4b7371aa]
  405c3b:	das    
  405c3c:	and    dh,dh
  405c3e:	push   eax
  405c3f:	sbb    bh,BYTE PTR [ebx-0x35d8a1b2]
  405c45:	jg     0x405c73
  405c47:	dec    esp
  405c48:	(bad)  
  405c49:	(bad)  
  405c4a:	imul   esi,DWORD PTR [eax],0xffffff80
  405c4d:	es mov ebp,0xe0233320
  405c53:	dec    edi
  405c54:	clc    
  405c55:	clc    
  405c56:	jb     0x405c9a
  405c58:	pop    eax
  405c59:	jecxz  0x405c92
  405c5b:	loopne 0x405c1a
  405c5d:	mov    ds:0x24c69a24,al
  405c62:	fdiv   QWORD PTR ss:[edi+ecx*2+0x39]
  405c67:	(bad)  
  405c68:	std    
  405c69:	jge    0x405beb
  405c6b:	mov    cl,0xa
  405c6d:	or     al,0xf1
  405c6f:	popa   
  405c70:	adc    al,BYTE PTR [eax]
  405c72:	or     BYTE PTR [ecx+0x69eb133c],ch
  405c78:	retf   
  405c79:	mov    ebx,0xb7753c64
  405c7e:	cdq    
  405c7f:	dec    ebx
  405c80:	dec    ebp
  405c81:	sbb    eax,0x416b9bd3
  405c86:	enter  0xf7b2,0x9c
  405c8a:	push   esi
  405c8b:	or     esp,DWORD PTR [ecx]
  405c8d:	cmp    eax,0xa5d45422
  405c92:	je     0x405cde
  405c94:	inc    esi
  405c95:	or     ch,BYTE PTR [ebx-0x36]
  405c98:	xor    DWORD PTR [ecx],0xa0992a43
  405c9e:	lods   al,BYTE PTR ds:[esi]
  405c9f:	fwait
  405ca0:	(bad)  
  405ca1:	dec    DWORD PTR [edx-0x1]
  405ca4:	popa   
  405ca5:	push   0xffffffc4
  405ca7:	or     al,0xec
  405ca9:	inc    ebp
  405caa:	rol    ch,cl
  405cac:	cmp    dh,dl
  405cae:	cmp    ecx,DWORD PTR [edi-0x50a8e57e]
  405cb4:	sub    al,0x35
  405cb6:	mov    edi,cs
  405cb8:	rol    DWORD PTR [edi],cl
  405cba:	(bad)  
  405cbb:	fidivr DWORD PTR [ecx-0x26]
  405cbe:	mov    edx,0x7cdf1117
  405cc3:	stos   DWORD PTR es:[edi],eax
  405cc4:	dec    eax
  405cc5:	xchg   ecx,eax
  405cc6:	jmp    0x7327:0x900b6dfb
  405ccd:	push   ds
  405cce:	inc    edx
  405ccf:	out    dx,eax
  405cd0:	xchg   esi,eax
  405cd1:	push   ecx
  405cd2:	jno    0x405c68
  405cd4:	pusha  
  405cd5:	stc    
  405cd6:	mov    dl,cl
  405cd8:	sbb    dh,BYTE PTR es:[edi+0x34]
  405cdc:	pop    edi
  405cdd:	pop    ds
  405cde:	test   eax,0x9216be41
  405ce3:	sub    eax,0xb8713966
  405ce8:	pop    esp
  405ce9:	test   al,0x1
  405ceb:	fisubr WORD PTR [edx+0x53f2d782]
  405cf1:	in     al,dx
  405cf2:	pushf  
  405cf3:	or     BYTE PTR [ecx+edx*4+0x79],al
  405cf7:	lea    ebx,[edx]
  405cf9:	push   ecx
  405cfa:	mov    ecx,0x5097d4c4
  405cff:	(bad)
  405d02:	fiadd  DWORD PTR ds:0x9068132d
  405d08:	sbb    esi,eax
  405d0a:	pushf  
  405d0b:	ret    
  405d0c:	mov    ebx,DWORD PTR [eax+edx*8+0x47]
  405d10:	xor    BYTE PTR [edi+ecx*4+0x38],0x85
  405d15:	sar    BYTE PTR [ecx+eax*1+0x4d],1
  405d19:	scas   al,BYTE PTR es:[edi]
  405d1a:	jb     0x405d8c
  405d1c:	xor    esp,DWORD PTR [edi+0x65]
  405d1f:	mov    bl,0x28
  405d21:	lods   al,BYTE PTR ds:[esi]
  405d22:	mov    ebx,0xf3da0801
  405d27:	ret    0x7bb0
  405d2a:	retf   0xae24
  405d2d:	cmp    ebp,ecx
  405d2f:	fs inc esi
  405d31:	repz adc eax,0x804f0187
  405d37:	mov    ds:0x687c7954,eax
  405d3c:	test   dh,0x46
  405d3f:	add    eax,DWORD PTR [ecx+0x6dcff540]
  405d45:	xchg   esp,eax
  405d46:	aam    0x4d
  405d48:	xchg   esp,eax
  405d49:	and    edx,ebx
  405d4b:	clc    
  405d4c:	icebp  
  405d4d:	(bad)  
  405d4e:	in     eax,0xa6
  405d50:	cwde   
  405d51:	sub    ah,BYTE PTR [ecx]
  405d53:	aam    0xfb
  405d55:	inc    edx
  405d56:	dec    ebp
  405d57:	mov    dl,BYTE PTR [ebp-0x5334b5ff]
  405d5d:	dec    ebp
  405d5e:	sbb    eax,0xabf03ae9
  405d63:	and    ch,bh
  405d65:	xchg   esi,eax
  405d66:	jg     0x405cfd
  405d68:	neg    BYTE PTR [esp+ebx*1]
  405d6b:	fst    st(4)
  405d6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d6e:	add    BYTE PTR [edx+0x49],bl
  405d71:	leave  
  405d72:	jns    0x405db5
  405d74:	mov    dh,0x58
  405d76:	int3   
  405d77:	in     eax,dx
  405d78:	aaa    
  405d79:	mov    ecx,0x2652c1ce
  405d7e:	loop   0x405d47
  405d80:	mov    ds:0x8166b956,al
  405d85:	add    eax,ebx
  405d87:	mov    dh,0xda
  405d89:	push   ecx
  405d8a:	retf   
  405d8b:	xchg   edx,eax
  405d8c:	jmp    0x405d95
  405d8e:	xor    DWORD PTR es:0xa9a0d2a2,edi
  405d95:	ins    BYTE PTR es:[edi],dx
  405d96:	pusha  
  405d97:	xchg   esi,eax
  405d98:	nop
  405d99:	ret    0x6652
  405d9c:	jne    0x405d6e
  405d9e:	ins    BYTE PTR es:[edi],dx
  405d9f:	enter  0xa3a9,0x69
  405da3:	bound  edi,QWORD PTR [esi-0x4999085d]
  405da9:	dec    edi
  405daa:	cmovl  edx,DWORD PTR [eax-0x4e]
  405dae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405daf:	lahf   
  405db0:	xor    eax,0xb7c846f9
  405db5:	pop    edi
  405db6:	dec    ebp
  405db7:	sbb    al,BYTE PTR [edi+0x70a55e17]
  405dbd:	iret   
  405dbe:	adc    eax,0x941ae06d
  405dc3:	and    DWORD PTR [ebp+0x1b444f6],esi
  405dc9:	ins    BYTE PTR es:[edi],dx
  405dca:	jle    0x405e18
  405dcc:	mov    eax,ds:0x983c91ae
  405dd1:	dec    ebp
  405dd2:	xor    edx,DWORD PTR [edx]
  405dd4:	arpl   bp,dx
  405dd6:	push   edx
  405dd7:	jns    0x405e47
  405dd9:	loope  0x405d9d
  405ddb:	stos   BYTE PTR es:[edi],al
  405ddc:	xchg   ecx,eax
  405ddd:	push   ss
  405dde:	repz and eax,0xfc55aa3f
  405de4:	pusha  
  405de5:	jp     0x405dbb
  405de7:	lods   al,BYTE PTR ds:[esi]
  405de8:	cmp    BYTE PTR [edi-0x516fd440],0x6d
  405def:	sbb    BYTE PTR cs:[esi+0x64d0e3a7],ch
  405df6:	lods   al,BYTE PTR ds:[esi]
  405df7:	nop
  405df8:	push   ebx
  405df9:	jb     0x405d87
  405dfb:	jo     0x405dba
  405dfd:	dec    esi
  405dfe:	dec    edx
  405dff:	xchg   BYTE PTR [eax-0xe],ch
  405e02:	leave  
  405e03:	gs pop eax
  405e05:	mov    esi,0x2265f739
  405e0a:	into   
  405e0b:	das    
  405e0c:	loop   0x405e2a
  405e0e:	adc    bl,BYTE PTR [edi+0x14f0f457]
  405e14:	rcr    ch,cl
  405e16:	fdivr  st,st(2)
  405e18:	adc    WORD PTR [esi-0x33ec9a80],dx
  405e1f:	mov    al,BYTE PTR [edi+edi*1]
  405e22:	icebp  
  405e23:	adc    eax,0xb71ee4ce
  405e28:	mov    dl,BYTE PTR [edi+0x6b]
  405e2b:	shl    ch,cl
  405e2d:	lods   eax,DWORD PTR ds:[esi]
  405e2e:	test   ecx,0xf7c239a8
  405e34:	push   edx
  405e35:	push   esi
  405e36:	nop    DWORD PTR [ebp-0x19b4034b]
  405e3d:	add    DWORD PTR [edi+0x26],0xffffff8d
  405e41:	dec    ebp
  405e42:	mov    ebp,0xadf86b35
  405e47:	adc    dl,BYTE PTR [ecx]
  405e49:	or     BYTE PTR ds:0xf47c41b6,ah
  405e4f:	sbb    cl,BYTE PTR [eax]
  405e51:	bound  ebx,QWORD PTR [edx-0x9]
  405e54:	jg     0x405e2c
  405e56:	outs   dx,BYTE PTR ds:[esi]
  405e57:	jnp    0x405e7f
  405e59:	sbb    dl,BYTE PTR [edi]
  405e5b:	mov    ecx,ebp
  405e5d:	nop
  405e5e:	mov    bh,0xf2
  405e60:	push   esp
  405e61:	mov    edi,0xb891157d
  405e66:	aaa    
  405e67:	cmp    dh,dh
  405e69:	push   ss
  405e6a:	add    ebx,DWORD PTR ss:[esi+esi*2-0x5f0e9dfc]
  405e72:	fistp  DWORD PTR [edx-0x484cafc1]
  405e78:	into   
  405e79:	xor    BYTE PTR [esi+0x2c11b070],bl
  405e7f:	push   0xba8a95a0
  405e84:	or     dh,al
  405e86:	punpcklbw mm5,DWORD PTR [esi]
  405e89:	icebp  
  405e8a:	and    ecx,DWORD PTR [ebx+0x71]
  405e8d:	xchg   ebp,eax
  405e8e:	inc    esp
  405e8f:	lds    esi,FWORD PTR [esi+0x22e7b9ac]
  405e95:	mov    ah,0x90
  405e97:	mov    ch,0xc
  405e99:	(bad)  
  405e9a:	xchg   edx,eax
  405e9b:	pop    esi
  405e9c:	xchg   ebp,eax
  405e9d:	leave  
  405e9e:	int3   
  405e9f:	fnstsw WORD PTR [eax+0xe89c79f]
  405ea5:	das    
  405ea6:	cli    
  405ea7:	daa    
  405ea8:	idiv   BYTE PTR [edi-0x70]
  405eab:	addr16 or eax,0x662d7f0e
  405eb1:	or     DWORD PTR ds:0xb7ff3bc6,0x76b7c220
  405ebb:	idiv   DWORD PTR [ebx]
  405ebd:	push   ds
  405ebe:	cmc    
  405ebf:	pop    edi
  405ec0:	jo     0x405f25
  405ec2:	sbb    eax,ebp
  405ec4:	jg     0x405e5c
  405ec6:	dec    esp
  405ec7:	lock adc DWORD PTR [ebp-0x80],eax
  405ecb:	inc    ebp
  405ecc:	mov    ah,0xde
  405ece:	pop    eax
  405ecf:	cmc    
  405ed0:	inc    edx
  405ed1:	jb     0x405e5f
  405ed3:	test   eax,0x4673d8e2
  405ed8:	push   edx
  405ed9:	push   cs
  405eda:	aam    0x79
  405edc:	test   eax,0x30c5a4e1
  405ee1:	scas   eax,DWORD PTR es:[edi]
  405ee2:	outs   dx,BYTE PTR ds:[esi]
  405ee3:	jns    0x405ed0
  405ee5:	push   cs
  405ee6:	mov    WORD PTR [esi-0x2f],ds
  405ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405eea:	sbb    cl,bh
  405eec:	pushf  
  405eed:	or     eax,ecx
  405eef:	adc    al,0xd9
  405ef1:	retf   0x44c1
  405ef4:	xchg   ecx,eax
  405ef5:	jg     0x405ebf
  405ef7:	sub    DWORD PTR [ecx-0x7f],edx
  405efa:	lds    ecx,FWORD PTR [ebx]
  405efc:	cmp    DWORD PTR ds:0x1d733ea4,ebx
  405f02:	in     eax,dx
  405f03:	mov    ah,0x90
  405f05:	mov    BYTE PTR [eax-0x288081f9],dl
  405f0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f0c:	js     0x405ef5
  405f0e:	jo     0x405efe
  405f10:	cmp    ecx,DWORD PTR [edx+eiz*1-0x44]
  405f14:	out    0xc3,al
  405f16:	or     eax,0x6a30907e
  405f1b:	mov    al,ds:0xa994c247
  405f20:	sub    dh,BYTE PTR [ecx]
  405f22:	pop    ds
  405f23:	scas   eax,DWORD PTR es:[edi]
  405f24:	add    al,0x1c
  405f26:	inc    esi
  405f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f28:	loop   0x405ee7
  405f2a:	mov    ds:0x45d8bf4e,eax
  405f2f:	add    eax,0xdbb92291
  405f34:	out    0x30,al
  405f36:	cwde   
  405f37:	adc    ch,BYTE PTR [ecx+0x5393271a]
  405f3d:	iret   
  405f3e:	add    BYTE PTR [ebx-0x61b21039],dh
  405f44:	icebp  
  405f45:	adc    BYTE PTR [esi+0x13bccaa0],dh
  405f4b:	ss popa 
  405f4d:	(bad)  
  405f4e:	mov    esp,0x33fa0ba
  405f53:	jecxz  0x405f36
  405f55:	sar    BYTE PTR [ecx-0x33270e0],1
  405f5b:	and    edi,esp
  405f5d:	std    
  405f5e:	cli    
  405f5f:	stos   BYTE PTR es:[edi],al
  405f60:	jne    0x405fdb
  405f62:	(bad)  
  405f64:	xor    esp,DWORD PTR [edx]
  405f66:	popa   
  405f67:	jns    0x405fe2
  405f69:	cs (bad) 
  405f6b:	shl    DWORD PTR [eax+0x47],1
  405f6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f6f:	enter  0x275b,0x7b
  405f73:	out    dx,al
  405f74:	icebp  
  405f75:	or     al,0x1b
  405f77:	mov    al,0xa6
  405f79:	xchg   ebp,eax
  405f7a:	cmc    
  405f7b:	mov    dl,0xd0
  405f7d:	mov    ebp,0x66cc54b7
  405f82:	call   0xe7f5657b
  405f87:	rcl    BYTE PTR [edx-0x5e],0x72
  405f8b:	rcl    cl,1
  405f8d:	cmp    eax,0x733f72ee
  405f92:	dec    ebx
  405f93:	test   al,0x5b
  405f95:	aad    0x8f
  405f97:	jne    0x405f60
  405f99:	push   esi
  405f9a:	popf   
  405f9b:	ror    BYTE PTR [ecx],1
  405f9d:	imul   esp,edx,0x26
  405fa0:	loop   0x405fc3
  405fa2:	jbe    0x405fdc
  405fa4:	scas   eax,DWORD PTR es:[edi]
  405fa5:	not    DWORD PTR [ebp-0x1bab6d9d]
  405fab:	fadd   DWORD PTR [ebp+0x7dcdd2b6]
  405fb1:	ret    
  405fb2:	xchg   edx,eax
  405fb3:	mov    ds:0x428535e8,al
  405fb8:	inc    eax
  405fb9:	in     eax,dx
  405fba:	cmp    BYTE PTR [edx-0x59],dh
  405fbd:	cdq    
  405fbe:	hlt    
  405fbf:	mov    ds:0x3c37e88,eax
  405fc4:	fadd   st(0),st
  405fc6:	xchg   ecx,eax
  405fc7:	xor    eax,0xcf20573f
  405fcc:	mov    edx,DWORD PTR [esi-0x4f]
  405fcf:	sbb    edx,0x96339e67
  405fd5:	enter  0x5dad,0x13
  405fd9:	cld    
  405fda:	add    DWORD PTR [esi],0x275236ca
  405fe0:	sub    bl,BYTE PTR [edi]
  405fe2:	cmp    ah,ah
  405fe4:	push   0xa96c6b04
  405fe9:	add    eax,0x27c3c47d
  405fee:	and    al,0xbd
  405ff0:	sub    al,0xa1
  405ff2:	sbb    edx,ebx
  405ff4:	retf   0x92e
  405ff7:	jae    0x406069
  405ff9:	ins    DWORD PTR es:[edi],dx
  405ffa:	sar    edi,cl
  405ffc:	out    0x6e,al
  405ffe:	pop    edi
  405fff:	mov    dh,0x7f
  406001:	jnp    0x406037
  406003:	(bad)  
  406004:	mov    ch,0xa9
  406006:	je     0x406024
  406008:	clc    
  406009:	fwait
  40600a:	mov    dl,0xa6
  40600c:	retf   0x56ef
  40600f:	inc    edi
  406010:	sub    bl,BYTE PTR ds:0xaf957809
  406016:	arpl   di,di
  406018:	or     DWORD PTR [edx],ebx
  40601a:	or     eax,0xb1e64f23
  40601f:	jg     0x405fbe
  406021:	call   ecx
  406023:	sti    
  406024:	pop    edx
  406025:	sub    ebp,DWORD PTR [ebx+eiz*1+0x8ef9fd7]
  40602c:	sbb    BYTE PTR [esi+ecx*2],dh
  40602f:	fcmovb st,st(1)
  406031:	jmp    0x406062
  406033:	jecxz  0x406018
  406035:	jnp    0x406041
  406037:	mov    dh,0xd4
  406039:	loop   0x405fe6
  40603b:	js     0x405ffc
  40603d:	test   DWORD PTR [edx+0x2dfa2a54],ecx
  406043:	push   esi
  406044:	dec    eax
  406045:	stc    
  406046:	int    0x49
  406048:	rol    DWORD PTR [edi],0xb4
  40604b:	imul   edi,ecx,0x48339be1
  406051:	fwait
  406052:	inc    edx
  406053:	and    al,0xb6
  406055:	retf   
  406056:	jmp    0x5573:0x3cf06eba
  40605d:	cmp    eax,0x84d6fbae
  406062:	stos   BYTE PTR es:[edi],al
  406063:	xor    BYTE PTR [edx],al
  406065:	lds    esi,FWORD PTR [esi]
  406067:	call   0x79493e99
  40606c:	sub    ebp,DWORD PTR [edi+ecx*4]
  40606f:	lods   eax,DWORD PTR ds:[esi]
  406070:	or     al,0x2c
  406072:	das    
  406073:	es test ebx,0xd8cb4ada
  40607a:	jo     0x406079
  40607c:	sbb    al,0x25
  40607e:	not    ah
  406080:	xor    al,0x6b
  406082:	push   0x63
  406084:	fnstenv [ecx]
  406086:	into   
  406087:	and    edx,ebx
  406089:	loop   0x406058
  40608b:	mov    cl,0xdc
  40608d:	sar    DWORD PTR [ecx+0x626171a1],cl
  406093:	mov    esi,0xde3cba17
  406098:	pop    edi
  406099:	sti    
  40609a:	inc    esi
  40609b:	icebp  
  40609c:	clc    
  40609d:	xor    bl,BYTE PTR [ebp+0x41a32379]
  4060a3:	cmc    
  4060a4:	aas    
  4060a5:	xchg   ebp,edi
  4060a7:	xchg   ebp,eax
  4060a8:	popf   
  4060a9:	sar    DWORD PTR [edi+0x1f6ea746],1
  4060af:	sub    BYTE PTR [ebp-0x40],dl
  4060b2:	sub    al,cl
  4060b4:	sub    BYTE PTR [edx+0x7eb822b6],0xad
  4060bb:	and    esp,DWORD PTR [ecx]
  4060bd:	mov    ah,0x8a
  4060bf:	ror    BYTE PTR [esi+0x35ba0cc],1
  4060c5:	shr    BYTE PTR [edx],1
  4060c7:	popa   
  4060c8:	je     0x4060eb
  4060ca:	stos   BYTE PTR es:[edi],al
  4060cb:	stos   DWORD PTR es:[edi],eax
  4060cc:	mov    ch,0x53
  4060ce:	add    al,0xe3
  4060d0:	test   al,0xa3
  4060d2:	adc    ah,cl
  4060d4:	(bad)
  4060d7:	cmp    DWORD PTR [eax],0x51d4d53a
  4060dd:	mov    edx,0x8721d8a7
  4060e2:	in     eax,dx
  4060e3:	ret    0xed38
  4060e6:	jle    0x40606c
  4060e8:	xchg   edx,eax
  4060e9:	popa   
  4060ea:	xchg   ebx,eax
  4060eb:	adc    DWORD PTR [esp+ebx*4],ebx
  4060ee:	mov    dh,0xa7
  4060f0:	(bad)  
  4060f1:	call   FWORD PTR [edx-0x4c]
  4060f4:	sub    al,0xfc
  4060f6:	or     al,BYTE PTR [edx+eiz*2-0x4837961]
  4060fd:	ss scas al,BYTE PTR es:[edi]
  4060ff:	push   0xffffffd7
  406101:	add    ecx,esi
  406103:	adc    al,0xfc
  406105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406106:	mov    eax,ds:0x1a926f5e
  40610b:	(bad)  [esi+0x78aaef0e]
  406111:	cld    
  406112:	dec    esi
  406113:	sbb    DWORD PTR [ebp+0x4d89ea2f],esp
  406119:	mov    al,ds:0x2bd970f3
  40611e:	sbb    eax,0xffffffc0
  406121:	out    dx,eax
  406122:	mov    eax,ds:0x46228e87
  406127:	div    DWORD PTR [edi+0x65]
  40612a:	xchg   ebx,eax
  40612b:	or     eax,0xe42dd0c8
  406130:	push   edi
  406131:	adc    edi,DWORD PTR [ebx+edx*8]
  406134:	loopne 0x4061a4
  406136:	repz and BYTE PTR ds:0x2e1132ec,al
  40613d:	inc    edx
  40613e:	mov    cl,0x3d
  406140:	sub    BYTE PTR [ebx+edi*8-0x21a8417f],dh
  406147:	adc    al,BYTE PTR [edx+0x75]
  40614a:	mov    ch,0x67
  40614c:	xchg   ebx,eax
  40614d:	mov    bl,0x52
  40614f:	jae    0x40614a
  406151:	push   edx
  406152:	pop    ds
  406153:	repz add dl,BYTE PTR [ecx+0x35b5d3ba]
  40615a:	lods   al,BYTE PTR ds:[esi]
  40615b:	inc    esi
  40615c:	mov    edi,0xdd3bf1ed
  406161:	pop    edx
  406162:	bound  ebx,QWORD PTR [edx]
  406164:	(bad)  
  406165:	shl    DWORD PTR [edi-0x63dc83d8],1
  40616b:	jle    0x4060ff
  40616d:	(bad)  
  40616e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40616f:	jne    0x4061be
  406171:	sbb    ch,bh
  406173:	sbb    DWORD PTR [esi+edx*1+0xaf902f4],ebp
  40617a:	mov    bh,0x39
  40617c:	fisub  DWORD PTR [edx]
  40617e:	adc    dh,ch
  406180:	and    dh,BYTE PTR [esi]
  406182:	push   esi
  406183:	(bad)  
  406185:	xchg   ecx,eax
  406186:	pop    es
  406187:	adc    cl,BYTE PTR [edx+0x3f]
  40618a:	call   0xad1f3aac
  40618f:	mov    cs,WORD PTR [edi-0x9]
  406192:	or     eax,0x9552ab19
  406197:	shr    DWORD PTR [esi+0x74],cl
  40619a:	jo     0x4061fc
  40619c:	sbb    eax,0xc1edecfb
  4061a1:	mov    al,0x77
  4061a3:	xchg   ebp,eax
  4061a4:	idiv   BYTE PTR [ebp-0x52b97998]
  4061aa:	ins    BYTE PTR es:[edi],dx
  4061ab:	adc    bh,al
  4061ad:	mov    edx,0x2f29a252
  4061b2:	jbe    0x4061fc
  4061b4:	test   eax,0xacf6a3bf
  4061b9:	adc    al,0x27
  4061bb:	outs   dx,DWORD PTR ds:[esi]
  4061bc:	push   ecx
  4061bd:	mov    ch,0x4e
  4061bf:	(bad)
  4061c3:	mov    bl,0x1b
  4061c5:	test   DWORD PTR [eax+0x67],ebx
  4061c8:	mov    al,ds:0x7c0a508
  4061cd:	std    
  4061ce:	fwait
  4061cf:	mov    edi,0xb40e74a4
  4061d4:	inc    edi
  4061d5:	sbb    esp,DWORD PTR es:[eax-0x1f583633]
  4061dc:	mov    ecx,0xc1fda97e
  4061e1:	cli    
  4061e2:	adc    ebx,esp
  4061e4:	mov    bh,0xdd
  4061e6:	push   edx
  4061e7:	sub    BYTE PTR [ebx-0x51914df4],0xd9
  4061ee:	in     eax,dx
  4061ef:	push   ds
  4061f0:	jle    0x4061e9
  4061f2:	lods   eax,DWORD PTR ds:[esi]
  4061f3:	lahf   
  4061f4:	outs   dx,DWORD PTR ds:[esi]
  4061f5:	mov    ebx,0x40793293
  4061fa:	sub    al,0xef
  4061fc:	enter  0x7504,0x1b
  406200:	pop    ebx
  406201:	cmp    edx,esi
  406203:	mov    WORD PTR [ebp-0x3570fb49],?
  406209:	xchg   esp,eax
  40620a:	adc    ch,BYTE PTR [edx+0x761382b2]
  406210:	fist   DWORD PTR [edi-0x4e]
  406213:	mov    dh,0xb
  406215:	das    
  406216:	aaa    
  406217:	push   ecx
  406218:	call   0x2d45:0xa4e7727b
  40621f:	dec    edi
  406220:	mov    ah,ah
  406222:	sar    BYTE PTR [eax],0x8c
  406225:	push   eax
  406226:	jp     0x4061dc
  406228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406229:	jle    0x406257
  40622b:	xchg   esp,eax
  40622c:	repnz outs dx,DWORD PTR ds:[esi]
  40622e:	inc    ebx
  40622f:	pop    ebx
  406230:	jl     0x4061db
  406232:	stos   DWORD PTR es:[edi],eax
  406233:	nop
  406234:	pop    esi
  406235:	xchg   edx,eax
  406236:	or     DWORD PTR [ebx+0x20],edi
  406239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40623a:	xchg   ecx,eax
  40623b:	xor    dh,bl
  40623d:	test   al,0x2c
  40623f:	jge    0x406229
  406241:	lds    eax,FWORD PTR [ebx-0x211a38b7]
  406247:	inc    esi
  406248:	dec    esp
  406249:	addr16 out dx,al
  40624b:	inc    edi
  40624c:	popf   
  40624d:	sbb    ebp,DWORD PTR [ebx]
  40624f:	out    dx,al
  406250:	jmp    0x171:0xd601bada
  406257:	push   eax
  406258:	adc    DWORD PTR [esi-0x370f86b9],esp
  40625e:	cmp    al,0x78
  406260:	scas   al,BYTE PTR es:[edi]
  406261:	mov    dl,0xe5
  406263:	test   al,0xe
  406265:	out    0x15,al
  406267:	jae    0x406204
  406269:	sahf   
  40626a:	in     eax,dx
  40626b:	sub    BYTE PTR [eax-0x71917a0a],bl
  406271:	dec    ebx
  406272:	shr    al,1
  406274:	jmp    0x42a67f88
  406279:	ret    0xb95b
  40627c:	dec    ebx
  40627d:	mov    eax,0x4ef8c02b
  406282:	add    DWORD PTR gs:[edx],eax
  406285:	jmp    0x3686:0x8aa91de8
  40628c:	xor    ecx,DWORD PTR [ecx+0x29]
  40628f:	stc    
  406290:	mov    eax,0x7367e0c9
  406295:	ins    BYTE PTR es:[edi],dx
  406296:	repnz push esp
  406298:	in     eax,0x73
  40629a:	repz fst QWORD PTR [esi]
  40629d:	mov    esp,0x966c4746
  4062a2:	call   0x115f8684
  4062a7:	xor    BYTE PTR [ecx],al
  4062a9:	dec    ebp
  4062aa:	call   0x74ad:0x9c8f0117
  4062b1:	fadd   QWORD PTR [ecx-0x11895d05]
  4062b7:	mov    ah,0x37
  4062b9:	fimul  DWORD PTR [ecx+0x7f]
  4062bc:	and    BYTE PTR [edx+0x583d768],bl
  4062c2:	sahf   
  4062c3:	add    DWORD PTR [ecx+0x6e3cd2b7],0x17
  4062ca:	pushf  
  4062cb:	rcr    edx,1
  4062cd:	popf   
  4062ce:	cwde   
  4062cf:	sbb    eax,0xeb5e85b
  4062d4:	in     al,0x1a
  4062d6:	shl    BYTE PTR [edi-0x9be617c],0x32
  4062dd:	mov    eax,esp
  4062df:	add    bl,BYTE PTR [eax]
  4062e1:	xchg   esp,eax
  4062e2:	repz jmp DWORD PTR [ebx+0x1c]
  4062e6:	and    eax,0x4c9cfb87
  4062eb:	cdq    
  4062ec:	mov    esp,0xc963391
  4062f1:	test   bh,cl
  4062f3:	dec    ecx
  4062f4:	cmp    ebp,DWORD PTR [ebp+0x2b3081fc]
  4062fa:	and    al,0xd9
  4062fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062fd:	fs mov ecx,0x6a488697
  406303:	ss imul eax,ebx,0xffffffbb
  406307:	clc    
  406308:	fcomp  DWORD PTR [eax-0x450e8557]
  40630e:	into   
  40630f:	out    dx,eax
  406310:	mov    al,ds:0x13a7cb55
  406315:	add    BYTE PTR [edx-0x4dc9130e],dl
  40631b:	inc    esi
  40631c:	out    dx,al
  40631d:	sbb    al,BYTE PTR [eax+edi*2-0x4a8b342f]
  406324:	or     cl,bh
  406326:	jns    0x406307
  406328:	mov    ah,BYTE PTR [ecx+0x3c204559]
  40632e:	push   edi
  40632f:	repz in eax,dx
  406331:	or     esi,DWORD PTR [edi-0x2a]
  406334:	pop    ss
  406335:	or     al,0xe0
  406337:	js     0x40635c
  406339:	sti    
  40633a:	jne    0x406336
  40633c:	repnz xchg ch,dl
  40633f:	imul   BYTE PTR [edi+0x69]
  406342:	push   esp
  406343:	fist   DWORD PTR [edx]
  406345:	push   ds
  406346:	lods   eax,DWORD PTR ds:[esi]
  406347:	cmp    esi,ebx
  406349:	push   es
  40634a:	loop   0x406394
  40634c:	out    dx,eax
  40634d:	into   
  40634e:	pop    ebx
  40634f:	jle    0x4063be
  406351:	or     cl,al
  406353:	inc    edi
  406354:	ficomp DWORD PTR [edx+edx*8]
  406357:	cmp    eax,0x5cd5cf28
  40635c:	pop    edi
  40635d:	in     al,0x8a
  40635f:	adc    DWORD PTR [eax+0x1fc17c01],ebx
  406365:	imul   DWORD PTR [edi+ecx*8]
  406368:	in     eax,0xd0
  40636a:	push   edx
  40636b:	and    ebp,DWORD PTR [eax]
  40636d:	push   edi
  40636e:	dec    ebp
  40636f:	jne    0x4063ae
  406371:	add    ebp,0x762bb793
  406377:	scas   eax,DWORD PTR es:[edi]
  406378:	ret    0x70b
  40637b:	mov    ah,0x2c
  40637d:	xor    edx,eax
  40637f:	in     al,dx
  406380:	push   esi
  406381:	adc    DWORD PTR [ebx],esp
  406383:	jl     0x406320
  406385:	xor    eax,0xcaba44b9
  40638a:	jmp    0x2c248a1e
  40638f:	add    BYTE PTR [edi+ecx*1-0x24],ah
  406393:	leave  
  406394:	fistp  WORD PTR [edi-0x37]
  406397:	(bad)  
  406398:	or     eax,0xa406ed7f
  40639d:	and    eax,0x37cc3779
  4063a2:	dec    edx
  4063a3:	fcmovnbe st,st(1)
  4063a5:	(bad)  
  4063a6:	daa    
  4063a7:	dec    esi
  4063a8:	cmp    DWORD PTR [ebp+0x59],esp
  4063ab:	(bad)
  4063ae:	xor    edi,DWORD PTR ds:0xd03650d8
  4063b4:	xchg   edx,eax
  4063b5:	adc    DWORD PTR [esi-0x6f],ecx
  4063b8:	pusha  
  4063b9:	pop    ds
  4063ba:	aas    
  4063bb:	cmp    BYTE PTR [edi+0x9],ah
  4063be:	aaa    
  4063bf:	lds    ecx,FWORD PTR [ecx-0x73]
  4063c2:	sub    DWORD PTR [ecx-0x6d8e3b09],esi
  4063c8:	jae    0x40640d
  4063ca:	div    BYTE PTR [ebx-0x16]
  4063cd:	jnp    0x4063f5
  4063cf:	jae    0x406392
  4063d1:	mov    dh,0x58
  4063d3:	xchg   eax,ecx
  4063d5:	(bad)  
  4063d6:	jns    0x4063c8
  4063d8:	call   0x8197a6aa
  4063dd:	xchg   edi,eax
  4063de:	mov    dl,0xa2
  4063e0:	jl     0x4063ed
  4063e2:	fdivr  QWORD PTR [ebp+0x6e]
  4063e5:	clc    
  4063e6:	xor    BYTE PTR [eax-0x35],cl
  4063e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063ea:	ror    dh,0x14
  4063ed:	jg     0x40637e
  4063ef:	and    DWORD PTR [esi+eax*8-0x16157fd0],ebx
  4063f6:	jmp    0xbfdb450e
  4063fb:	int    0x44
  4063fd:	dec    esp
  4063fe:	cmc    
  4063ff:	(bad)  
  406400:	clc    
  406401:	jge    0x406422
  406403:	int3   
  406404:	iret   
  406405:	jmp    0x4abe109f
  40640a:	std    
  40640b:	sbb    edx,DWORD PTR [esi]
  40640d:	cdq    
  40640e:	adc    eax,0xb01b661a
  406413:	fwait
  406414:	test   BYTE PTR [esi],dl
  406416:	arpl   bp,cx
  406418:	cmp    al,0x92
  40641a:	std    
  40641b:	or     al,0xbf
  40641d:	sar    DWORD PTR [eax],1
  40641f:	rcr    BYTE PTR [edi],0x6a
  406422:	addr16 add eax,0x7939627c
  406428:	add    eax,0xdc86de97
  40642d:	fild   WORD PTR [edx+0x4356f469]
  406433:	bound  ebx,QWORD PTR [edi-0x740130ba]
  406439:	and    al,0xea
  40643b:	shl    edi,1
  40643d:	test   al,0x9
  40643f:	sahf   
  406440:	adc    BYTE PTR [ecx-0x53e60f84],0x6d
  406447:	pusha  
  406448:	mov    ecx,0x5760e35a
  40644d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40644e:	es out 0x9f,eax
  406451:	fstp   TBYTE PTR [eax+0x5]
  406454:	ret    0x5d64
  406457:	aam    0xdc
  406459:	sub    BYTE PTR [edx+0x722aeb55],al
  40645f:	outs   dx,DWORD PTR ds:[esi]
  406460:	outs   dx,DWORD PTR ds:[esi]
  406461:	or     al,0xc0
  406463:	inc    ebx
  406464:	call   0xe59b:0x5f8e488d
  40646b:	and    BYTE PTR [eax+0x71],al
  40646e:	cmp    eax,0x940d70a8
  406473:	xchg   ebx,eax
  406474:	rol    BYTE PTR [esi-0x36],1
  406477:	js     0x406454
  406479:	xlat   BYTE PTR ds:[ebx]
  40647a:	sti    
  40647b:	out    0x1c,al
  40647d:	(bad)  
  40647e:	or     al,0x88
  406480:	mov    ebx,0x89f61805
  406485:	int3   
  406486:	pop    edi
  406487:	ret    
  406488:	dec    edx
  406489:	jnp    0x40642a
  40648b:	mov    dl,0xeb
  40648d:	mov    esi,0x186aeb2f
  406492:	in     al,dx
  406493:	pop    ss
  406494:	call   0xad88:0x95da74b2
  40649b:	loope  0x406494
  40649d:	sbb    BYTE PTR [ebx],0xb2
  4064a0:	ja     0x40646f
  4064a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064a3:	jmp    0x182349e8
  4064a8:	lock adc DWORD PTR [esi+0x2c4c32ce],esp
  4064af:	(bad)  
  4064b0:	or     ah,BYTE PTR [eax]
  4064b2:	je     0x406476
  4064b4:	lahf   
  4064b5:	in     al,dx
  4064b6:	cmp    eax,0x8092f8f4
  4064bb:	sub    BYTE PTR [eax],bl
  4064bd:	shl    DWORD PTR [edx+0x62c27b7d],0xa8
  4064c4:	shl    DWORD PTR ds:0x3f730ea7,cl
  4064ca:	pop    edi
  4064cb:	cld    
  4064cc:	lahf   
  4064cd:	ret    
  4064ce:	ret    
  4064cf:	mov    eax,ds:0x736e42d1
  4064d4:	mov    ds:0x38d4527b,al
  4064d9:	sti    
  4064da:	sub    ebx,ecx
  4064dc:	stc    
  4064dd:	and    ecx,DWORD PTR [edi-0x17ebd696]
  4064e3:	xchg   DWORD PTR [edi],eax
  4064e5:	out    0xb3,eax
  4064e7:	mov    ah,0x25
  4064e9:	ds cs add ecx,esi
  4064ed:	repz bound esi,QWORD PTR [edx]
  4064f0:	or     bh,BYTE PTR [eax]
  4064f2:	mov    dh,0x59
  4064f4:	lahf   
  4064f5:	and    al,0x4f
  4064f7:	dec    ecx
  4064f8:	retf   
  4064f9:	and    bl,dh
  4064fb:	ss pusha 
  4064fd:	cmp    BYTE PTR [ecx],ah
  4064ff:	dec    edi
  406500:	fcmovnb st,st(3)
  406502:	mov    ds:0x999b868f,al
  406507:	in     al,dx
  406508:	in     eax,dx
  406509:	mov    ds:0x3a9dba07,eax
  40650e:	pusha  
  40650f:	pop    esp
  406510:	daa    
  406511:	mov    ds:0x25ce802f,al
  406516:	mov    edx,0x70379a9d
  40651b:	add    esp,DWORD PTR [edi+eiz*1+0x1]
  40651f:	jns    0x4064f5
  406521:	out    dx,al
  406522:	jne    0x406566
  406524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406525:	shl    DWORD PTR [edx-0x77cc718a],1
  40652b:	dec    ecx
  40652c:	inc    esi
  40652d:	test   eax,0x75f8dd2f
  406532:	enter  0x78e0,0x13
  406536:	dec    esp
  406537:	mov    WORD PTR [edx],?
  406539:	inc    edi
  40653a:	push   cs
  40653b:	push   eax
  40653c:	mov    ds:0xe531d854,eax
  406541:	pop    ebp
  406542:	mov    dl,0xbe
  406544:	mov    ch,0xbd
  406546:	test   cl,bh
  406548:	sbb    al,0x62
  40654a:	or     eax,0x519abe54
  40654f:	add    eax,0x77c65f82
  406554:	inc    esp
  406555:	adc    al,0x43
  406557:	fdiv   st(0),st
  406559:	lahf   
  40655a:	out    0x6f,eax
  40655c:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40655e:	fs ja  0x4064e9
  406561:	repnz (bad)
  406564:	mov    esp,0x5e94ecc7
  406569:	aam    0xf1
  40656b:	leave  
  40656c:	push   cs
  40656d:	jo     0x4064f8
  40656f:	enter  0x7c4,0x7a
  406573:	test   DWORD PTR [edx+0x524bcfbe],0x77714a9c
  40657d:	addr16 jmp 0xbbec:0x46e16626
  406585:	xchg   ebp,eax
  406586:	xchg   ecx,eax
  406587:	fninit 
  406589:	dec    eax
  40658a:	jp     0x4065eb
  40658c:	lea    ebx,[ebx-0x5b]
  40658f:	out    dx,eax
  406590:	ret    
  406591:	test   DWORD PTR [ebx+0x331d2d09],ecx
  406597:	aad    0x98
  406599:	adc    edx,ecx
  40659b:	dec    ebx
  40659c:	iret   
  40659d:	jecxz  0x4065cb
  40659f:	dec    ecx
  4065a0:	sbb    al,0xc2
  4065a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065a3:	ins    DWORD PTR es:[edi],dx
  4065a4:	cmp    DWORD PTR [edx],ebx
  4065a6:	jp     0x4065da
  4065a8:	or     ah,BYTE PTR [ebp+esi*2-0x23bc04f0]
  4065af:	sub    DWORD PTR [esi+0x48f15380],ebp
  4065b5:	rcr    BYTE PTR [ebx-0x68d179e1],1
  4065bb:	icebp  
  4065bc:	cmp    dh,BYTE PTR [ebx]
  4065be:	fdivr  QWORD PTR [ebp+0x3f1739f3]
  4065c4:	jecxz  0x4065b8
  4065c6:	jns    0x40662a
  4065c8:	pop    ds
  4065c9:	adc    eax,0xc72b53c
  4065ce:	push   ss
  4065cf:	adc    eax,0x6265984c
  4065d4:	sbb    al,0xbf
  4065d6:	pop    DWORD PTR ds:0xf32b7234
  4065dc:	mov    BYTE PTR [ebp+eax*4-0x70a6dfc0],0x81
  4065e4:	fs sub ch,bh
  4065e7:	mov    ds:0x3e4c75fb,eax
  4065ec:	mov    esi,0xcca3f5c4
  4065f1:	cld    
  4065f2:	ins    BYTE PTR es:[edi],dx
  4065f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065f4:	jle    0x40666f
  4065f6:	dec    esp
  4065f7:	clc    
  4065f8:	fsub   st,st(5)
  4065fa:	jl     0x4065bc
  4065fc:	scas   al,BYTE PTR es:[edi]
  4065fd:	or     DWORD PTR [ebx],edi
  4065ff:	dec    esp
  406600:	sbb    ebp,ebp
  406602:	xor    edi,ebx
  406604:	push   ebp
  406605:	js     0x406620
  406607:	xchg   edx,eax
  406608:	aad    0xaf
  40660a:	push   ss
  40660b:	push   ds
  40660c:	jmp    0xf5db:0x4724f15c
  406613:	and    al,BYTE PTR [ebp+edi*8+0x69]
  406617:	xor    al,0x87
  406619:	dec    ebx
  40661a:	pop    edi
  40661b:	cdq    
  40661c:	mov    dh,0xbb
  40661e:	sub    edx,DWORD PTR [edx+ebp*2]
  406621:	clc    
  406622:	fbstp  TBYTE PTR [eax]
  406624:	fisubr WORD PTR [esi]
  406626:	cmc    
  406627:	repnz mov eax,ds:0xee5d5d76
  40662d:	and    ah,BYTE PTR [eax+esi*2]
  406630:	iret   
  406631:	xchg   esi,eax
  406632:	inc    esp
  406633:	mov    esi,es
  406635:	mov    ah,0x8a
  406637:	add    eax,0x5a1534a6
  40663c:	and    edx,edx
  40663e:	add    dh,BYTE PTR [ebx+0x10]
  406641:	mov    bl,0xcd
  406643:	add    al,0x25
  406645:	dec    edx
  406646:	or     ebp,DWORD PTR [ecx+ecx*4-0x15ff5f09]
  40664d:	xor    al,0xef
  40664f:	push   ecx
  406650:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406651:	inc    esp
  406652:	jne    0x4066b0
  406654:	fcmovu st,st(6)
  406656:	sub    esi,esp
  406658:	sub    eax,0x938d34a8
  40665d:	retf   0x76e3
  406660:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  406662:	push   ds
  406663:	cmp    dh,cl
  406665:	in     eax,0xa2
  406667:	adc    al,BYTE PTR [edi]
  406669:	adc    DWORD PTR [ebx],ebp
  40666b:	clc    
  40666c:	mov    esi,0xcf994cf
  406671:	lock (bad) 
  406673:	idiv   DWORD PTR [esi+0x22498f0f]
  406679:	adc    BYTE PTR [ebx],al
  40667b:	stos   DWORD PTR es:[edi],eax
  40667c:	scas   eax,DWORD PTR es:[edi]
  40667d:	mov    ebx,ecx
  40667f:	mov    dl,BYTE PTR [edi-0x7dee091a]
  406685:	out    dx,al
  406686:	push   esp
  406687:	adc    eax,0x71cf2afe
  40668c:	add    DWORD PTR [esi],edx
  40668e:	(bad)
  406692:	test   al,0x14
  406694:	mov    dl,0x63
  406696:	icebp  
  406697:	out    dx,al
  406698:	lods   al,BYTE PTR ds:[esi]
  406699:	jae    0x406675
  40669b:	jmp    0x3ece:0x62e62000
  4066a2:	mov    WORD PTR [edi+0x38],ss
  4066a5:	scas   eax,DWORD PTR es:[edi]
  4066a6:	mov    fs,WORD PTR [ebx+0x4d]
  4066a9:	repz push esi
  4066ab:	stos   DWORD PTR es:[edi],eax
  4066ac:	mov    edi,0x7d24c4a4
  4066b1:	add    al,0x6e
  4066b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066b4:	jne    0x4066bf
  4066b6:	sbb    al,0x9f
  4066b8:	(bad)  
  4066b9:	mov    ecx,0xeb36ae5b
  4066be:	in     eax,dx
  4066bf:	xchg   ebx,eax
  4066c0:	mov    ecx,0x10747f5d
  4066c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066c6:	mov    cl,0x73
  4066c8:	pop    ebp
  4066c9:	cmp    bh,ch
  4066cb:	mov    ch,0x8f
  4066cd:	xlat   BYTE PTR gs:[ebx]
  4066cf:	inc    esi
  4066d0:	fs mov al,0x7b
  4066d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066d4:	mov    eax,0xdc8a3a1f
  4066d9:	push   esi
  4066da:	inc    edi
  4066db:	jle    0x40670a
  4066dd:	push   cs
  4066de:	mov    edi,0xe94e89b9
  4066e3:	xchg   BYTE PTR [esi],bl
  4066e5:	jns    0x4066d4
  4066e7:	xor    ch,BYTE PTR [si+0x42]
  4066eb:	jb     0x4066ea
  4066ed:	arpl   WORD PTR [edx-0x4a],cx
  4066f0:	ins    BYTE PTR es:[edi],dx
  4066f1:	xchg   ecx,eax
  4066f2:	cmp    DWORD PTR [edx-0x36],esp
  4066f5:	retf   
  4066f6:	jb     0x406726
  4066f8:	movq   mm0,QWORD PTR [ebp+0x7430338a]
  4066ff:	dec    edi
  406700:	ins    BYTE PTR es:[edi],dx
  406701:	add    cl,ah
  406703:	pusha  
  406704:	fmul   QWORD PTR [ecx+edi*2-0xd]
  406708:	in     eax,0xd3
  40670a:	xchg   esi,eax
  40670b:	(bad)  
  40670c:	mov    edx,0x3e3a520f
  406711:	mov    dl,0x1b
  406713:	aas    
  406714:	outs   dx,BYTE PTR ds:[esi]
  406715:	push   ebp
  406716:	sbb    al,BYTE PTR cs:[ecx-0x4]
  40671a:	fsubr  st(3),st
  40671c:	inc    ebp
  40671d:	cmp    al,0x20
  40671f:	imul   edx,esp,0xffffffb9
  406722:	xchg   ebp,eax
  406723:	test   BYTE PTR [esi],bl
  406725:	clc    
  406726:	mov    dl,0x88
  406728:	sbb    al,0x94
  40672a:	or     BYTE PTR [ebx],0x3c
  40672d:	mov    cl,0xb2
  40672f:	hlt    
  406730:	push   ebp
  406731:	adc    eax,0x5901f0a4
  406736:	arpl   bp,ax
  406738:	call   0xc273bfeb
  40673d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40673e:	bound  ecx,QWORD PTR [esp+ebx*4]
  406741:	sar    DWORD PTR [ecx],1
  406743:	add    ebp,eax
  406745:	dec    edx
  406746:	sub    BYTE PTR ds:0x9c8df531,al
  40674c:	inc    ecx
  40674d:	jge    0x40671d
  40674f:	dec    bl
  406751:	stos   BYTE PTR es:[edi],al
  406752:	pop    ss
  406753:	das    
  406754:	and    DWORD PTR [esi+0x508f4418],esp
  40675a:	mov    ebx,0xa79797df
  40675f:	jecxz  0x406753
  406761:	push   eax
  406762:	push   edi
  406763:	popa   
  406764:	jge    0x4067d0
  406766:	sub    esp,DWORD PTR [eax-0x12d2b49d]
  40676c:	jno    0x4067d7
  40676e:	add    eax,ebx
  406770:	adc    al,0xee
  406772:	out    0x82,al
  406774:	(bad)  
  406775:	xlat   BYTE PTR ds:[ebx]
  406776:	fidivr WORD PTR [esi]
  406778:	iret   
  406779:	jo     0x4067a3
  40677b:	scas   eax,DWORD PTR es:[edi]
  40677c:	xor    ebp,DWORD PTR [ebx+0xe]
  40677f:	mov    ebx,0x7ae45c28
  406784:	jg     0x4067ed
  406786:	mov    edi,0x7882c394
  40678b:	xchg   esi,eax
  40678c:	jno    0x4067e1
  40678e:	stc    
  40678f:	jb     0x40672f
  406791:	add    eax,0xff7b1a60
  406796:	in     al,0x7d
  406798:	fcom   DWORD PTR [edi]
  40679a:	mov    al,ds:0x482b486e
  40679f:	pop    ebp
  4067a0:	sub    eax,0x3ab94c7a
  4067a5:	push   eax
  4067a6:	xchg   esp,eax
  4067a7:	gs mov cl,0xa2
  4067aa:	sub    eax,0x907395a9
  4067af:	sub    al,0x61
  4067b1:	add    bh,bl
  4067b3:	repnz sbb bl,bh
  4067b6:	fdiv   QWORD PTR [ecx+0x45]
  4067b9:	fistp  QWORD PTR ds:0x45727807
  4067bf:	cwde   
  4067c0:	xor    edi,ecx
  4067c2:	add    al,0x97
  4067c4:	scas   eax,DWORD PTR es:[edi]
  4067c5:	test   al,0x7e
  4067c7:	and    al,0xb1
  4067c9:	mov    eax,ds:0xadc00f2a
  4067ce:	test   al,0x38
  4067d0:	out    dx,al
  4067d1:	mov    bl,0xe5
  4067d3:	mov    esp,0xcbcc5c3
  4067d8:	xor    BYTE PTR [ebp+esi*4+0x24],cl
  4067dc:	mov    dh,0x20
  4067de:	pop    esi
  4067df:	dec    ebx
  4067e0:	or     al,0x8d
  4067e2:	mov    cl,0x96
  4067e4:	xor    al,BYTE PTR [esp+esi*8+0x41f12400]
  4067eb:	pop    edi
  4067ec:	inc    ebx
  4067ed:	sub    DWORD PTR [eax],ebx
  4067ef:	push   ebp
  4067f0:	cli    
  4067f1:	jmp    0x5cb01d10
  4067f6:	pop    ds
  4067f7:	cmp    eax,0x9568779d
  4067fc:	ds xchg ebx,eax
  4067fe:	mov    al,ds:0xef83a70c
  406803:	xchg   ebx,eax
  406804:	mov    DWORD PTR [ebp+ecx*4-0x71bfee03],ebp
  40680b:	add    dh,BYTE PTR [ecx+0x14]
  40680e:	arpl   WORD PTR [esi+edx*1-0x1a],ax
  406812:	inc    ebp
  406813:	pop    es
  406814:	test   BYTE PTR [eax-0x63],cl
  406817:	icebp  
  406818:	jae    0x406829
  40681a:	call   0x52f57d11
  40681f:	mov    ds:0xcd9d6c45,eax
  406824:	into   
  406825:	repz loopne 0x40680e
  406828:	sub    ch,ch
  40682a:	sub    BYTE PTR [eax+0x34],0x31
  40682e:	popa   
  40682f:	and    edx,DWORD PTR [ecx]
  406831:	dec    ecx
  406832:	or     esp,ebx
  406834:	mov    BYTE PTR [ecx-0x42],bl
  406837:	jo     0x4067ea
  406839:	and    edx,esi
  40683b:	xchg   ecx,eax
  40683c:	sub    DWORD PTR [ebp-0x3b],esi
  40683f:	xchg   dl,al
  406841:	pop    ds
  406842:	mov    esp,0xb42d93a8
  406847:	sbb    al,0xcd
  40684a:	jmp    0x59f3:0x7b5fe305
  406851:	loope  0x4068c7
  406853:	ins    BYTE PTR es:[edi],dx
  406854:	sahf   
  406855:	pop    ebp
  406856:	imul   eax,DWORD PTR [ebp+0x2b966ad6],0xffffffce
  40685d:	or     edi,DWORD PTR es:[ebx+0x131960ab]
  406864:	loope  0x406853
  406866:	das    
  406867:	hlt    
  406868:	add    al,0x9d
  40686a:	stos   BYTE PTR es:[edi],al
  40686b:	pop    edi
  40686c:	or     eax,0x77728820
  406871:	stc    
  406872:	adc    BYTE PTR [ecx+ebx*1+0x12184f54],cl
  406879:	ret    
  40687a:	shr    DWORD PTR [ebp+ecx*4+0x8d97c72],0x4e
  406882:	sub    cl,bh
  406884:	and    al,0x9
  406886:	push   edi
  406887:	mov    ebp,0x925901ab
  40688c:	xor    esp,DWORD PTR [edi-0x5f61dc7d]
  406892:	fbstp  TBYTE PTR [ebx]
  406894:	test   ecx,esi
  406896:	dec    ebp
  406897:	dec    eax
  406898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406899:	mov    edx,0x4ce0c474
  40689e:	push   esi
  40689f:	sbb    BYTE PTR [ebx],bl
  4068a1:	sbb    edx,DWORD PTR [ebp+0x13]
  4068a4:	aas    
  4068a5:	ins    DWORD PTR es:[edi],dx
  4068a6:	es retf 0x7c57
  4068aa:	(bad)  
  4068ab:	sbb    BYTE PTR [eax+0x3],bh
  4068ae:	out    0xe5,al
  4068b0:	sti    
  4068b1:	add    edi,edx
  4068b3:	xor    DWORD PTR [edx-0x6421be56],edx
  4068b9:	or     eax,0x2973007a
  4068be:	retf   
  4068bf:	cld    
  4068c0:	stos   BYTE PTR es:[edi],al
  4068c1:	ror    BYTE PTR [edx+0x734ba269],0x15
  4068c8:	inc    eax
  4068c9:	xor    ah,BYTE PTR [ebx-0x6b]
  4068cc:	add    DWORD PTR [edx],esp
  4068ce:	xchg   esp,eax
  4068cf:	mov    eax,ds:0x6b2d1eb4
  4068d4:	icebp  
  4068d5:	cmp    eax,0xa6031689
  4068da:	mov    edi,0xe115d138
  4068df:	pop    eax
  4068e0:	jp     0x40691f
  4068e2:	ja     0x406925
  4068e4:	sbb    al,0xc0
  4068e6:	fwait
  4068e7:	fwait
  4068e8:	pop    ecx
  4068e9:	inc    edx
  4068ea:	jle    0x4068dc
  4068ec:	mov    esp,0x16ee42df
  4068f1:	loop   0x406907
  4068f3:	sub    eax,0xb1622389
  4068f8:	aam    0x53
  4068fa:	mov    ds:0xc26ee827,al
  4068ff:	ins    DWORD PTR es:[edi],dx
  406900:	call   0x794f85b
  406905:	cdq    
  406906:	xor    BYTE PTR ds:0x9e45fbd0,0x1f
  40690d:	ja     0x406921
  40690f:	mov    ch,0x8c
  406911:	in     al,dx
  406912:	stos   DWORD PTR es:[edi],eax
  406913:	jle    0x406945
  406915:	xor    al,0x95
  406917:	xchg   esi,eax
  406918:	mov    esp,DWORD PTR [edi+esi*8+0x15]
  40691c:	lock jle 0x406975
  40691f:	test   BYTE PTR [edx-0x639b3b41],0xee
  406926:	jg     0x406967
  406928:	rcl    BYTE PTR [esi+0x3f],1
  40692b:	sbb    ecx,DWORD PTR [edi]
  40692d:	mov    WORD PTR ds:0x7a2efe7b,ds
  406933:	gs pop esi
  406935:	xor    al,0x9f
  406937:	fiadd  DWORD PTR [ecx-0x3d628504]
  40693d:	mov    eax,DWORD PTR [ecx]
  40693f:	inc    edi
  406940:	and    dl,ch
  406942:	sub    edi,DWORD PTR ds:0x7ec3c1a4
  406948:	pop    esp
  406949:	add    al,0x7a
  40694b:	pop    edx
  40694c:	fbstp  TBYTE PTR [ebx]
  40694e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40694f:	fild   DWORD PTR [bp+si]
  406952:	and    BYTE PTR ds:0x8aee3b52,bl
  406958:	arpl   WORD PTR [ebx-0x3e188df2],dx
  40695e:	xchg   ebp,eax
  40695f:	stos   DWORD PTR es:[edi],eax
  406960:	mov    bl,0x81
  406962:	push   ebp
  406963:	add    eax,0xe607c4
  406968:	retf   
  406969:	inc    esp
  40696a:	test   BYTE PTR [eax+0x61],al
  40696d:	iret   
  40696e:	scas   eax,DWORD PTR es:[edi]
  40696f:	jmp    0x48f2:0x952b99f
  406976:	dec    esi
  406977:	cmp    al,BYTE PTR [edx+0x79]
  40697a:	in     eax,0x5
  40697c:	or     al,0xef
  40697e:	fcomi  st,st(5)
  406980:	ret    0x3827
  406983:	clc    
  406984:	out    0x9b,al
  406986:	mov    dl,0x59
  406988:	push   ecx
  406989:	mov    dh,BYTE PTR [edi]
  40698b:	shr    DWORD PTR [eax+ecx*1-0x450afc88],cl
  406992:	inc    ebp
  406993:	jno    0x4069d2
  406995:	inc    ebp
  406996:	in     al,dx
  406997:	inc    ebx
  406998:	push   edx
  406999:	add    eax,0xada1eb47
  40699e:	adc    bh,dl
  4069a0:	in     al,dx
  4069a1:	cmp    BYTE PTR [edx+0x7e],bh
  4069a4:	xor    BYTE PTR [eax],ah
  4069a6:	inc    edx
  4069a7:	fmul   st,st(6)
  4069a9:	out    0x8b,eax
  4069ab:	pop    ecx
  4069ac:	pop    ds
  4069ad:	(bad)  
  4069ae:	stc    
  4069af:	inc    eax
  4069b0:	mov    fs,WORD PTR ds:0xc1740dfd
  4069b6:	lds    esp,FWORD PTR [eax-0x60]
  4069b9:	cdq    
  4069ba:	pop    eax
  4069bb:	jb     0x4069c5
  4069bd:	mov    dh,0xe1
  4069bf:	mov    dh,0x16
  4069c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069c2:	stos   DWORD PTR es:[edi],eax
  4069c3:	xchg   esi,eax
  4069c4:	adc    al,0xf3
  4069c6:	jg     0x40699c
  4069c8:	mov    cl,bh
  4069ca:	dec    edi
  4069cb:	mov    ss,WORD PTR [edi+0x30d5005e]
  4069d1:	mov    edi,ebx
  4069d3:	pop    edx
  4069d4:	nop
  4069d5:	(bad)  
  4069d7:	imul   ecx,DWORD PTR [ecx+0x6fdd07ee],0x71
  4069de:	rol    BYTE PTR [eax+0x7d],1
  4069e1:	jo     0x406997
  4069e3:	call   0xc1d9:0x72afb35c
  4069ea:	add    BYTE PTR [ecx+0x2e2d8812],dl
  4069f0:	add    esp,DWORD PTR [edi+0x2fa44fb1]
  4069f6:	mov    bh,0x2a
  4069f8:	jno    0x406a4f
  4069fa:	push   edx
  4069fb:	add    al,dh
  4069fd:	popa   
  4069fe:	fnstenv [esi+0x3a]
  406a01:	fdiv   DWORD PTR [eax]
  406a03:	in     eax,0x67
  406a05:	popa   
  406a06:	lods   al,BYTE PTR ds:[esi]
  406a07:	inc    esi
  406a08:	dec    eax
  406a09:	nop
  406a0a:	popf   
  406a0b:	add    ah,al
  406a0d:	cmc    
  406a0e:	clc    
  406a0f:	xor    al,BYTE PTR [edi-0x6]
  406a12:	shl    DWORD PTR [edi+edi*2-0x34],1
  406a16:	add    al,0x58
  406a18:	dec    edi
  406a19:	jae    0x4069f3
  406a1b:	outs   dx,DWORD PTR ds:[esi]
  406a1c:	jg     0x406a64
  406a1e:	adc    dl,BYTE PTR [eax-0x63e7f5b9]
  406a24:	popa   
  406a25:	xor    eax,0xbd4930f3
  406a2a:	pop    ecx
  406a2b:	dec    esi
  406a2c:	lahf   
  406a2d:	lods   al,BYTE PTR ds:[esi]
  406a2e:	jge    0x406a6a
  406a30:	adc    cl,BYTE PTR [esi+0x58acf0b8]
  406a36:	fcomp  QWORD PTR [ebp-0x24a45edf]
  406a3c:	aad    0x6a
  406a3e:	or     ebx,eax
  406a40:	popf   
  406a41:	xchg   ebp,eax
  406a42:	cmp    edi,DWORD PTR [edx-0x31]
  406a45:	cmp    DWORD PTR [ebp-0x68d54f8],0x434eb06a
  406a4f:	aas    
  406a50:	test   eax,0x8c22e7
  406a55:	push   cs
  406a56:	(bad)  
  406a57:	div    BYTE PTR [eax+0x60d0048a]
  406a5d:	dec    esi
  406a5e:	imul   esp,DWORD PTR [esi+0x1c41f73e],0xc8a7116d
  406a68:	rcr    al,0xf2
  406a6b:	jmp    0x406aa8
  406a6d:	xlat   BYTE PTR ds:[ebx]
  406a6e:	dec    ebp
  406a6f:	fmul   st,st(4)
  406a71:	scas   eax,DWORD PTR es:[edi]
  406a72:	call   0x210f0209
  406a77:	loop   0x406a71
  406a79:	ja     0x406aba
  406a7b:	jb     0x406a49
  406a7d:	iret   
  406a7e:	imul   esi,ebp,0x5a
  406a81:	xlat   BYTE PTR ds:[ebx]
  406a82:	cmp    BYTE PTR [esi],0xb7
  406a85:	scas   al,BYTE PTR es:[edi]
  406a86:	imul   eax,ebp,0xffffffde
  406a89:	dec    ebx
  406a8a:	dec    edi
  406a8b:	jge    0x406b0b
  406a8d:	(bad)  
  406a8e:	mov    ebp,0x2ca3cbd
  406a93:	xchg   esp,eax
  406a94:	sahf   
  406a95:	add    ecx,DWORD PTR [ebx+0x5]
  406a98:	int3   
  406a99:	(bad)  
  406a9a:	dec    ebx
  406a9b:	cmc    
  406a9c:	add    eax,0x143bfa8a
  406aa1:	fidiv  WORD PTR [edi+ebx*8+0xaf1f8d5]
  406aa8:	jns    0x406ab7
  406aaa:	lods   al,BYTE PTR ds:[esi]
  406aab:	ins    BYTE PTR es:[edi],dx
  406aac:	inc    esi
  406aad:	std    
  406aae:	mov    BYTE PTR [eax-0x57],dh
  406ab1:	or     esp,DWORD PTR [edi-0x13a09f42]
  406ab7:	jle    0x406b27
  406ab9:	adc    eax,0x30cbe461
  406abe:	ds jo  0x406a8b
  406ac1:	lahf   
  406ac2:	(bad)  
  406ac4:	lds    ecx,FWORD PTR [eax-0x437f3958]
  406aca:	xlat   BYTE PTR ds:[ebx]
  406acb:	stos   DWORD PTR es:[edi],eax
  406acc:	call   0x1a3d8b74
  406ad1:	mov    bh,0x7e
  406ad3:	xchg   ecx,eax
  406ad4:	sbb    eax,0x1470c6ba
  406ad9:	inc    edi
  406ada:	cmp    dh,BYTE PTR [eax+0x4e]
  406add:	xchg   BYTE PTR [ebx-0x30],dl
  406ae0:	sbb    bh,bh
  406ae2:	iret   
  406ae3:	adc    eax,0xaf54a0d7
  406ae8:	xchg   esi,eax
  406ae9:	loop   0x406b2c
  406aeb:	inc    esp
  406aec:	or     ah,bh
  406aee:	sub    dl,ch
  406af0:	xchg   esi,eax
  406af1:	les    eax,FWORD PTR [edx-0x5a8f273a]
  406af7:	xchg   esp,eax
  406af8:	lahf   
  406af9:	stos   BYTE PTR es:[edi],al
  406afa:	jge    0x406b5b
  406afc:	data16 out 0x7b,al
  406aff:	inc    edi
  406b00:	inc    edx
  406b01:	sub    al,0x4e
  406b03:	mov    esi,0x108635c0
  406b08:	pop    ebp
  406b09:	mov    al,0x9b
  406b0b:	push   ebp
  406b0c:	mov    ah,0x44
  406b0e:	jecxz  0x406b6b
  406b10:	mov    edi,0x2a366c4
  406b15:	gs int 0xc0
  406b18:	enter  0x88c7,0x2b
  406b1c:	mov    eax,ds:0xad574fce
  406b21:	popf   
  406b22:	or     BYTE PTR gs:[eax],bh
  406b25:	mov    DWORD PTR [ebx-0x5967e079],edi
  406b2b:	xchg   edx,eax
  406b2c:	cli    
  406b2d:	fstp   QWORD PTR [edi-0x40635a01]
  406b33:	xchg   ecx,eax
  406b34:	pop    es
  406b35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b36:	shr    DWORD PTR [edx],1
  406b38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b39:	ds clc 
  406b3b:	daa    
  406b3c:	mov    edx,0xbcbeff98
  406b41:	and    ch,BYTE PTR [bp-0x57]
  406b45:	das    
  406b46:	in     al,dx
  406b47:	retf   
  406b48:	jp     0x406b41
  406b4a:	xor    BYTE PTR [esi],dh
  406b4c:	sbb    BYTE PTR [esi+0x3a],al
  406b4f:	mov    esi,DWORD PTR [ebx-0x289aabf2]
  406b55:	xor    BYTE PTR [eax+ebx*4],0x87
  406b59:	pusha  
  406b5a:	add    al,0x73
  406b5c:	xor    edi,DWORD PTR [edi+0x259d6297]
  406b62:	pop    es
  406b63:	call   0x6f83:0x72f48868
  406b6a:	les    esi,FWORD PTR [edi]
  406b6c:	push   cs
  406b6d:	cmp    ebx,DWORD PTR [ebx+0x39]
  406b70:	sahf   
  406b71:	repz (bad) 
  406b73:	in     al,dx
  406b74:	mov    ecx,0x4a15869d
  406b79:	cwde   
  406b7a:	xchg   BYTE PTR [ecx-0x71],bl
  406b7d:	and    al,0xb5
  406b7f:	lods   eax,DWORD PTR ds:[esi]
  406b80:	sahf   
  406b81:	pop    ecx
  406b82:	inc    eax
  406b83:	fidiv  WORD PTR [eax]
  406b85:	and    bh,ah
  406b87:	dec    edx
  406b88:	lods   eax,DWORD PTR ds:[esi]
  406b89:	push   ss
  406b8a:	mov    edi,0x9d92bca5
  406b8f:	int3   
  406b90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b91:	adc    ah,cl
  406b93:	or     BYTE PTR [ecx],ch
  406b95:	mov    ds:0xee148c95,al
  406b9a:	or     eax,0xc420c746
  406b9f:	mov    eax,ds:0x92736402
  406ba4:	dec    ebp
  406ba5:	dec    edx
  406ba6:	sub    eax,0x41530f20
  406bab:	jge    0x406c2b
  406bad:	out    dx,eax
  406bae:	or     cl,BYTE PTR [eax+0x249950da]
  406bb4:	lahf   
  406bb5:	test   al,0xd1
  406bb7:	les    ebx,FWORD PTR [edi+0x9]
  406bba:	mov    dl,BYTE PTR [edx+edx*2+0x5a8a15c]
  406bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bc2:	sbb    ecx,DWORD PTR [eax+0x2177b3c]
  406bc8:	sahf   
  406bc9:	lea    edx,[esi]
  406bcb:	mov    ecx,0x382e6d65
  406bd0:	push   DWORD PTR [esi-0x2254837b]
  406bd6:	mov    ecx,0x6cb3c2f8
  406bdb:	xchg   ebp,eax
  406bdc:	in     eax,dx
  406bdd:	scas   eax,DWORD PTR es:[edi]
  406bde:	push   esi
  406bdf:	cdq    
  406be0:	mov    DWORD PTR [esi],ecx
  406be2:	push   ss
  406be3:	and    cl,ah
  406be5:	cmp    ebp,eax
  406be7:	ja     0x406c36
  406be9:	dec    esp
  406bea:	add    BYTE PTR [ecx+edx*2+0x4ed92a33],al
  406bf1:	xchg   ebp,eax
  406bf2:	retf   
  406bf3:	mov    BYTE PTR [edx+0x55932f2a],bh
  406bf9:	fcom   QWORD PTR [eax+edx*2]
  406bfc:	adc    edi,DWORD PTR [ebx+ecx*8-0x1]
  406c00:	fs push esi
  406c02:	test   cl,ah
  406c04:	jmp    0x406c06
  406c06:	(bad)  
  406c07:	loop   0x406c73
  406c09:	mov    eax,ds:0xb5e633a3
  406c0e:	inc    esi
  406c0f:	push   edi
  406c10:	and    esp,0x1
  406c13:	dec    esp
  406c14:	and    esi,esp
  406c16:	mov    dh,0xf7
  406c18:	repnz mov cl,0x91
  406c1b:	and    esp,DWORD PTR [ebx]
  406c1d:	jno    0x406bda
  406c1f:	bound  edx,QWORD PTR [eax]
  406c21:	or     DWORD PTR [edx+0x5a901a89],0xffffffbf
  406c28:	push   DWORD PTR [esi]
  406c2a:	loop   0x406c69
  406c2c:	cmp    eax,0x57433eab
  406c31:	mov    BYTE PTR [esi-0x2360cc37],dh
  406c37:	jge    0x406bee
  406c39:	jg     0x406c2d
  406c3b:	stc    
  406c3c:	xor    BYTE PTR [eax],al
  406c3e:	call   0x33d6:0x58c3272a
  406c45:	in     eax,0x10
  406c47:	cmp    DWORD PTR [edi],esi
  406c49:	mov    dl,0xe1
  406c4b:	fmul   DWORD PTR [ecx]
  406c4d:	int    0xcc
  406c4f:	fmul   QWORD PTR [ecx+0x262a4e47]
  406c55:	ret    
  406c56:	les    ecx,FWORD PTR [esi-0x11]
  406c59:	ins    BYTE PTR es:[edi],dx
  406c5a:	outs   dx,DWORD PTR ds:[esi]
  406c5b:	repnz push edi
  406c5d:	mov    dh,0xe3
  406c5f:	pusha  
  406c60:	and    edi,DWORD PTR [eax+ebp*8-0x4dd79509]
  406c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c68:	jge    0x406cdd
  406c6a:	in     eax,dx
  406c6b:	jge    0x406c4d
  406c6d:	mov    al,ds:0x38e39031
  406c72:	pusha  
  406c73:	mov    bh,0xcd
  406c75:	out    dx,al
  406c76:	lods   al,BYTE PTR ds:[esi]
  406c77:	fild   QWORD PTR [ebp+0x1]
  406c7a:	add    esp,DWORD PTR [ecx+eiz*4]
  406c7d:	or     DWORD PTR [edi-0x1932c53c],eax
  406c83:	xchg   esi,eax
  406c84:	ds aas 
  406c86:	sub    DWORD PTR [esi],0xffffff9d
  406c89:	(bad)  
  406c8b:	mov    esi,0x5ba1eb67
  406c90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c91:	(bad)  
  406c92:	jmp    0x406cf3
  406c94:	outs   dx,DWORD PTR ds:[esi]
  406c95:	popa   
  406c96:	and    BYTE PTR [ebp-0x2b],ch
  406c99:	push   ds
  406c9a:	xor    al,0xfb
  406c9c:	push   0x4f
  406c9e:	push   ds
  406c9f:	mov    dh,0x8f
  406ca1:	and    eax,0xff7aa984
  406ca6:	mov    BYTE PTR [edi+edi*1-0x5a],bl
  406caa:	ret    
  406cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cac:	aad    0x68
  406cae:	pushf  
  406caf:	(bad)  
  406cb0:	adc    al,0x6d
  406cb2:	or     BYTE PTR [edx+0x77eadda5],0x3e
  406cb9:	test   eax,0x93d2bb2d
  406cbe:	cmp    edx,DWORD PTR [edi+0x2d389181]
  406cc4:	sti    
  406cc5:	adc    DWORD PTR ds:0xf875d735,edi
  406ccb:	push   ebp
  406ccc:	mov    dl,BYTE PTR [ecx+0x10d383d0]
  406cd2:	mov    fs,WORD PTR [ecx+0x44]
  406cd5:	add    edx,edx
  406cd7:	or     al,0xf4
  406cd9:	jb     0x406d31
  406cdb:	adc    bl,BYTE PTR [edx]
  406cdd:	(bad)  
  406cde:	cmc    
  406cdf:	call   0xb548:0x58b67f17
  406ce6:	call   0x5a3e622a
  406ceb:	xchg   edx,eax
  406cec:	in     al,dx
  406ced:	dec    esi
  406cee:	fnsave ds:0xcc2b26be
  406cf4:	push   edi
  406cf5:	cmp    BYTE PTR [eax+0x6b1d685b],dh
  406cfb:	popa   
  406cfc:	test   al,0x3
  406cfe:	mov    ebx,0xd357fe99
  406d03:	nop
  406d04:	xchg   DWORD PTR [ecx+esi*4],ebp
  406d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d08:	sbb    esp,edi
  406d0a:	pop    esi
  406d0b:	pop    esp
  406d0c:	add    al,0x72
  406d0e:	ss and eax,esi
  406d11:	mov    ds:0xd550fd30,eax
  406d16:	xchg   esi,eax
  406d17:	rol    DWORD PTR [ecx],cl
  406d19:	fstp   TBYTE PTR [edi+ecx*8]
  406d1c:	or     dh,bh
  406d1e:	jne    0x406cf1
  406d20:	in     al,0x58
  406d22:	jecxz  0x406d61
  406d24:	push   esi
  406d25:	mov    esi,0xd26d77af
  406d2a:	mov    ebp,0xf284d14
  406d2f:	fcmovnb st,st(5)
  406d31:	stos   DWORD PTR es:[edi],eax
  406d32:	das    
  406d33:	repz add al,0x87
  406d36:	aad    0x58
  406d38:	push   ss
  406d39:	popf   
  406d3a:	cld    
  406d3b:	in     al,0xcc
  406d3d:	xchg   ebx,eax
  406d3e:	cmp    ch,BYTE PTR ds:[edi]
  406d41:	pop    ebp
  406d42:	jno    0x406d1d
  406d44:	mov    ebx,DWORD PTR ds:0xfb08e7a3
  406d4a:	ds jmp 0xeb46ce68
  406d50:	mov    esp,0x3fc37482
  406d55:	neg    BYTE PTR [edi-0x54]
  406d58:	and    BYTE PTR [esi+0x1f],bh
  406d5b:	jns    0x406d6c
  406d5d:	in     al,dx
  406d5e:	mov    bl,0x7d
  406d60:	sar    DWORD PTR [esi+0x6793345b],1
  406d66:	mov    DWORD PTR ds:0x14d1b6b7,ebp
  406d6c:	mov    esi,0xd68fb393
  406d71:	pop    ecx
  406d72:	dec    ecx
  406d73:	xchg   DWORD PTR [esi],ebp
  406d75:	lods   al,BYTE PTR ds:[esi]
  406d76:	fwait
  406d77:	push   eax
  406d78:	sbb    esp,edx
  406d7a:	cmp    edx,DWORD PTR [eax-0x60]
  406d7d:	repnz imul edi,DWORD PTR [ecx-0x3216ae25],0x37150e9a
  406d88:	pop    ebx
  406d89:	xchg   DWORD PTR [eax+0x660a91f4],edi
  406d8f:	ror    BYTE PTR [esi+0x19],0x30
  406d93:	pop    edi
  406d94:	repnz test ax,0xe163
  406d99:	test   DWORD PTR [edx+edx*1+0x406291f],ebp
  406da0:	(bad)  
  406da1:	(bad)  
  406da2:	test   DWORD PTR [ebx-0x5f],0xd5a24275
  406da9:	out    dx,al
  406daa:	pusha  
  406dab:	xchg   edi,eax
  406dac:	call   0x4fa1:0x7a6bc13a
  406db3:	dec    edi
  406db4:	add    eax,0x18d6ee45
  406db9:	jae    0x406e01
  406dbb:	outs   dx,BYTE PTR ds:[esi]
  406dbc:	loopne 0x406dcd
  406dbe:	ror    BYTE PTR [edx-0x11ac9fe1],1
  406dc4:	daa    
  406dc5:	xor    eax,eax
  406dc7:	mov    edi,eax
  406dc9:	pop    ebp
  406dca:	inc    esi
  406dcb:	xchg   ecx,eax
  406dcc:	cld    
  406dcd:	or     ch,BYTE PTR [ecx+0x6dd648b8]
  406dd3:	loop   0x406d90
  406dd5:	(bad)  
  406dd6:	retf   
  406dd7:	inc    ebx
  406dd8:	or     esi,DWORD PTR [esi+0x7]
  406ddb:	or     DWORD PTR [ebx+0x487eda6d],ebp
  406de1:	mov    ecx,0xcab17685
  406de6:	shr    DWORD PTR [ecx-0x794357ab],1
  406dec:	push   ebp
  406ded:	ret    
  406dee:	lock fisubr WORD PTR [ecx]
  406df1:	mov    edi,0x678f5750
  406df6:	jg     0x406dbf
  406df8:	test   ebx,ecx
  406dfa:	xor    eax,0x12bc70ae
  406dff:	call   0xe155:0x48be68ba
  406e06:	in     eax,0x58
  406e08:	and    DWORD PTR [edx],edx
  406e0a:	fs xchg esi,eax
  406e0c:	pusha  
  406e0d:	xchg   BYTE PTR [ebp-0x1b],ch
  406e10:	repnz in eax,0x28
  406e13:	outs   dx,DWORD PTR ds:[esi]
  406e14:	enter  0x84dd,0x45
  406e18:	mov    dl,0x3f
  406e1a:	xor    bh,BYTE PTR [edi-0x1c]
  406e1d:	dec    esp
  406e1e:	jecxz  0x406dbd
  406e20:	pop    esp
  406e21:	dec    DWORD PTR [esp+eax*4]
  406e24:	retf   0x9546
  406e27:	ret    
  406e28:	shl    edx,1
  406e2a:	dec    edx
  406e2b:	addr16 dec esi
  406e2d:	pop    esi
  406e2e:	jae    0x406ea5
  406e30:	xchg   edx,eax
  406e31:	hlt    
  406e32:	push   es
  406e33:	daa    
  406e34:	js     0x406e41
  406e36:	dec    eax
  406e37:	mov    ?,WORD PTR [edi]
  406e39:	mov    ds:0xc65e6e2d,al
  406e3e:	popf   
  406e3f:	int    0x56
  406e41:	shl    esp,0x23
  406e44:	sub    al,0xc4
  406e46:	fisubr WORD PTR [esi]
  406e48:	dec    edi
  406e49:	cld    
  406e4a:	or     al,0x6
  406e4c:	repnz stc 
  406e4e:	bound  edx,QWORD PTR [eax+0x5b]
  406e51:	mov    WORD PTR [ebx-0x3f18ddc],gs
  406e57:	cmp    al,0x4b
  406e59:	aam    0x63
  406e5b:	inc    ebx
  406e5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e5d:	jns    0x406e5a
  406e5f:	cs leave 
  406e61:	mov    bl,0x78
  406e63:	shl    DWORD PTR [esi],cl
  406e65:	das    
  406e66:	ins    BYTE PTR es:[edi],dx
  406e67:	adc    edi,ebp
  406e69:	adc    al,0x87
  406e6b:	inc    edi
  406e6c:	or     bl,BYTE PTR [edi]
  406e6e:	push   cs
  406e6f:	xchg   ebp,eax
  406e70:	mov    ds:0x332d0859,al
  406e75:	loope  0x406eaf
  406e77:	scas   eax,DWORD PTR es:[edi]
  406e78:	pop    ecx
  406e79:	mov    WORD PTR [ecx-0x4cc806c1],?
  406e7f:	dec    edi
  406e80:	daa    
  406e81:	inc    ebx
  406e82:	(bad)
  406e85:	mov    ecx,0xdba5f1d5
  406e8a:	aaa    
  406e8b:	dec    ecx
  406e8c:	cmp    ah,dh
  406e8e:	push   ecx
  406e8f:	adc    al,0xa2
  406e91:	pusha  
  406e92:	test   eax,0xae2b2068
  406e97:	fbstp  TBYTE PTR [esi+0x7f]
  406e9a:	sbb    cl,bh
  406e9c:	(bad)  
  406e9d:	adc    ebx,esi
  406e9f:	fild   DWORD PTR [edx+0x46]
  406ea2:	fld    DWORD PTR [eax]
  406ea4:	pop    ecx
  406ea5:	mov    ebx,0x4bfe98e0
  406eaa:	lea    ebp,[ebx-0x52]
  406ead:	enter  0xe213,0x52
  406eb1:	mov    ds:0x65aa8c68,al
  406eb6:	outs   dx,DWORD PTR ds:[esi]
  406eb7:	fnsave [ebp+eiz*1+0x48061c4a]
  406ebe:	or     DWORD PTR [edi-0x38570740],edi
  406ec4:	lock cdq 
  406ec6:	pop    ebp
  406ec7:	pushf  
  406ec8:	repnz dec esp
  406eca:	mov    ebp,0xe328e1ad
  406ecf:	mov    dl,0x52
  406ed1:	pop    ds
  406ed2:	outs   dx,DWORD PTR ds:[esi]
  406ed3:	cmp    ax,0xff10
  406ed7:	inc    esi
  406ed8:	push   esi
  406ed9:	and    al,0xab
  406edb:	mov    eax,0xf1117283
  406ee0:	loop   0x406e66
  406ee2:	test   DWORD PTR [edi+0x20],0x48247350
  406ee9:	test   al,0x32
  406eeb:	imul   edx,DWORD PTR [edi-0x3b],0xd1e14da
  406ef2:	mov    dh,BYTE PTR [ecx-0x37]
  406ef5:	inc    eax
  406ef6:	ret    0xf232
  406ef9:	bnd je 0x406f12
  406efc:	push   ebp
  406efd:	sub    DWORD PTR [eax+0x4d],0xc
  406f01:	ret    0x8a1c
  406f04:	aam    0xd5
  406f06:	stc    
  406f07:	jg     0x406f87
  406f09:	scas   al,BYTE PTR es:[edi]
  406f0a:	cld    
  406f0b:	cli    
  406f0c:	ret    0xfaf4
  406f0f:	cld    
  406f10:	push   0xffffffcc
  406f12:	mov    al,0x11
  406f15:	push   ecx
  406f16:	xor    BYTE PTR [eax-0xe9626ec],dh
  406f1c:	je     0x406efb
  406f1e:	leave  
  406f1f:	lods   eax,DWORD PTR ds:[esi]
  406f20:	add    DWORD PTR [edi+0x4a6cc5b8],ecx
  406f26:	xor    DWORD PTR [ebx],edx
  406f28:	lods   eax,DWORD PTR ds:[esi]
  406f29:	inc    ebp
  406f2a:	cmp    eax,0xdb205c0d
  406f2f:	xor    DWORD PTR [ebx],0xffffffb1
  406f32:	add    BYTE PTR [eax-0x3a],dh
  406f35:	dec    edi
  406f36:	mov    dh,0x34
  406f38:	cwde   
  406f39:	test   al,0xb
  406f3b:	cmp    al,dh
  406f3d:	dec    ecx
  406f3e:	inc    edx
  406f3f:	into   
  406f40:	daa    
  406f41:	or     al,0x28
  406f43:	ss mov ecx,0x47a510d
  406f49:	leave  
  406f4a:	sbb    eax,0xdd2724b2
  406f4f:	popf   
  406f50:	call   0x7092342a
  406f55:	mov    al,ds:0xba32abbc
  406f5a:	in     al,0xd6
  406f5c:	(bad)  
  406f5d:	sub    edi,edi
  406f5f:	rcl    DWORD PTR [eax+0x6dee82b5],0xa4
  406f66:	or     DWORD PTR [edx+0x15],ebp
  406f69:	mov    ah,0x18
  406f6b:	jecxz  0x406f6f
  406f6d:	icebp  
  406f6e:	(bad)  
  406f70:	sbb    DWORD PTR [edi],edx
  406f72:	(bad)  
  406f73:	jno    0x406fa8
  406f75:	sbb    ecx,DWORD PTR [ebp+0x13202525]
  406f7b:	rol    DWORD PTR ds:0x7436f820,0x47
  406f82:	adc    eax,0x74e9dd90
  406f87:	into   
  406f88:	div    BYTE PTR ds:0x246d189a
  406f8e:	pop    ecx
  406f8f:	or     edi,ebp
  406f91:	aaa    
  406f92:	xor    al,BYTE PTR [eax+0x7e0086f9]
  406f98:	nop
  406f99:	ret    0xe62
  406f9c:	lock inc ebp
  406f9e:	inc    edx
  406f9f:	push   ds
  406fa0:	cmp    edx,edx
  406fa2:	push   es
  406fa3:	add    eax,0xe73795a0
  406fa8:	sub    al,0xda
  406faa:	cs adc ebx,ebp
  406fad:	jno    0x406ffe
  406faf:	pusha  
  406fb0:	and    esi,DWORD PTR [ebp+eax*1+0x4bec7dbc]
  406fb7:	pop    es
  406fb8:	ret    
  406fb9:	(bad)  
  406fba:	mov    ds:0x5fd27350,al
  406fbf:	sbb    DWORD PTR [ebx],ebx
  406fc1:	dec    edi
  406fc2:	call   0x195c:0x55c23baa
  406fc9:	ror    BYTE PTR [ebx-0x1e4c5f0b],0x72
  406fd0:	shl    DWORD PTR [edi],cl
  406fd2:	xchg   esp,eax
  406fd3:	mov    dl,0x7
  406fd5:	fst    QWORD PTR [eax]
  406fd7:	add    esp,DWORD PTR [ebp-0x7324d67c]
  406fdd:	pop    esp
  406fde:	ret    
  406fdf:	jge    0x406f9f
  406fe1:	fiadd  WORD PTR [edx+0x22]
  406fe4:	jg     0x407055
  406fe6:	adc    eax,0x648b566
  406feb:	nop
  406fec:	ins    DWORD PTR es:[edi],dx
  406fed:	push   ebx
  406fee:	or     al,0xef
  406ff0:	mov    edx,0xfcc1f6ce
  406ff5:	(bad)
  406ff8:	(bad)  
  406ff9:	jo     0x407068
  406ffb:	mov    ecx,0x7589de2c
  407000:	inc    ebp
  407001:	in     al,dx
  407002:	sbb    eax,0x446925fa
  407007:	adc    ebp,DWORD PTR [esi]
  407009:	sub    al,0xb7
  40700b:	es std 
  40700d:	clc    
  40700e:	or     DWORD PTR [edx+0x28],ecx
  407011:	adc    al,0xdd
  407013:	(bad)  
  407014:	adc    BYTE PTR [ebp+0x4],al
  407017:	enter  0x36b3,0xa1
  40701b:	pop    ds
  40701c:	lods   al,BYTE PTR ds:[esi]
  40701d:	ret    0xf4e5
  407020:	fidiv  WORD PTR [eax]
  407022:	dec    esp
  407023:	xor    eax,0xdb350024
  407028:	in     al,0x22
  40702a:	mov    ch,0xb3
  40702c:	aam    0x4e
  40702e:	loope  0x407023
  407030:	adc    DWORD PTR [edi],edx
  407032:	test   DWORD PTR [edx+0xd3da19e],ebp
  407038:	adc    cl,BYTE PTR [eax]
  40703a:	fild   WORD PTR [eax]
  40703c:	and    ah,BYTE PTR [esi-0x2041da36]
  407042:	add    eax,0xfa56a211
  407047:	sub    ebp,eax
  407049:	and    BYTE PTR [edx-0x6c],al
  40704c:	nop
  40704d:	dec    eax
  40704e:	mov    ah,BYTE PTR [ecx+ecx*2+0xd3c2185]
  407055:	bound  ebx,QWORD PTR [esi+0x10]
  407058:	and    ecx,DWORD PTR [ecx+0x7fbe17cc]
  40705e:	inc    edi
  40705f:	add    ebx,DWORD PTR [ecx+0x78]
  407062:	push   edi
  407063:	and    cl,BYTE PTR [edx]
  407065:	aas    
  407066:	xlat   BYTE PTR ds:[ebx]
  407067:	adc    al,0x60
  407069:	lahf   
  40706a:	ss (bad) 
  40706c:	push   ss
  40706d:	sub    DWORD PTR [edx-0x38e6ee6b],0xffffffb9
  407074:	add    ebp,esi
  407076:	ret    0xc4b3
  407079:	inc    ecx
  40707a:	(bad)  
  40707b:	jmp    0x407051
  40707d:	sub    eax,0xc05e9ff7
  407082:	ins    BYTE PTR es:[edi],dx
  407083:	inc    ecx
  407084:	mov    edx,0x9ba10a40
  407089:	and    eax,0x72401603
  40708e:	jp     0x40707f
  407090:	stos   BYTE PTR es:[edi],al
  407091:	mov    ds:0x9572edfb,eax
  407096:	sub    DWORD PTR [edi+0x4d],0xffffffa8
  40709a:	popa   
  40709b:	ss in  al,dx
  40709d:	mov    edx,0x639a1a9b
  4070a2:	sub    al,0x3f
  4070a4:	imul   ebp,DWORD PTR [ecx],0xffffff87
  4070a7:	gs loopne 0x4070de
  4070aa:	mov    ecx,0xbe633394
  4070af:	adc    esi,ecx
  4070b1:	shr    DWORD PTR [edx],0x93
  4070b4:	aad    0x22
  4070b6:	pop    ecx
  4070b7:	test   eax,0x196bed60
  4070bc:	and    al,dl
  4070be:	push   edx
  4070bf:	jns    0x4070eb
  4070c1:	dec    ecx
  4070c2:	es push esp
  4070c4:	mov    eax,0xbe656bdd
  4070c9:	hlt    
  4070ca:	dec    esp
  4070cb:	loopne 0x4070c4
  4070cd:	xor    eax,DWORD PTR [ebp-0xb]
  4070d0:	or     BYTE PTR [ecx+0x74e3a623],ah
  4070d6:	adc    dh,BYTE PTR [eax-0x20c39fd7]
  4070dc:	call   0xc86b435c
  4070e1:	push   ebp
  4070e2:	popa   
  4070e3:	mov    BYTE PTR [ecx],ch
  4070e5:	inc    esi
  4070e6:	dec    ebp
  4070e7:	into   
  4070e8:	jbe    0x4070a9
  4070ea:	mov    edx,0x83d9275e
  4070ef:	push   0x12a52e97
  4070f4:	add    eax,0xf6601fa6
  4070f9:	int    0x74
  4070fb:	test   DWORD PTR [esi+0x4],0x826ecf6a
  407102:	dec    esp
  407103:	xlat   BYTE PTR ds:[ebx]
  407104:	in     al,dx
  407105:	fmul   DWORD PTR [edi]
  407107:	inc    edx
  407108:	(bad)
  40710b:	sbb    eax,0xf59c9bb1
  407110:	sbb    BYTE PTR [ebp-0x20],cl
  407113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407114:	test   bh,bl
  407116:	das    
  407117:	shr    BYTE PTR [eax],1
  407119:	inc    ebx
  40711a:	cmp    BYTE PTR [esi+0x59],0xc6
  40711e:	adc    al,0x83
  407120:	pop    esi
  407121:	adc    ebp,DWORD PTR [ebp-0x57]
  407124:	pop    esp
  407125:	cmp    ebx,DWORD PTR [esi-0x19365d58]
  40712b:	xlat   BYTE PTR ds:[ebx]
  40712c:	push   eax
  40712d:	dec    ebp
  40712e:	and    eax,0x530972d1
  407133:	cmp    eax,0x687f2757
  407138:	cwde   
  407139:	and    bl,ah
  40713b:	push   ds
  40713c:	push   0x4dbc7f37
  407141:	(bad)  
  407142:	xor    bl,BYTE PTR [ebx]
  407144:	iret   
  407145:	jbe    0x407181
  407147:	popa   
  407148:	std    
  407149:	shr    DWORD PTR [eax+esi*1],1
  40714c:	dec    ebx
  40714d:	sub    dh,BYTE PTR [edi+0x74]
  407150:	sbb    edx,ebx
  407152:	loope  0x407196
  407154:	test   DWORD PTR [esi+0xd],0x993d4bdf
  40715b:	mov    edi,0x188b7b56
  407160:	sahf   
  407161:	jl     0x407166
  407163:	test   BYTE PTR [esi-0x414ef900],al
  407169:	test   eax,0xf88027bb
  40716e:	dec    esi
  40716f:	push   0xa7b302b8
  407174:	fild   DWORD PTR [ebx+ebx*8]
  407177:	adc    edi,DWORD PTR [edx-0x6f]
  40717a:	lds    ebp,FWORD PTR [esi+0x132e343e]
  407180:	call   DWORD PTR cs:[ecx-0x1d]
  407184:	push   ecx
  407185:	imul   esp,esp,0x77560946
  40718b:	repnz add edi,edx
  40718e:	jmp    0x40713f
  407190:	aad    0x9e
  407192:	jmp    0x4071fe
  407194:	jecxz  0x4071a2
  407196:	(bad)  
  407197:	mov    WORD PTR [ebp-0x44046869],gs
  40719d:	dec    ebp
  40719e:	sub    ah,BYTE PTR ds:0xce2180da
  4071a4:	jne    0x4071a9
  4071a6:	xor    esi,DWORD PTR [ebp-0x3788ec6a]
  4071ac:	xchg   ecx,eax
  4071ad:	(bad)  
  4071ae:	les    edi,FWORD PTR [eax]
  4071b0:	mov    WORD PTR [bx+si],?
  4071b3:	sbb    al,0x5a
  4071b5:	pop    ds
  4071b6:	outs   dx,BYTE PTR ds:[esi]
  4071b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071b8:	retf   
  4071b9:	mov    esp,0x2909033b
  4071be:	jl     0x40721d
  4071c0:	mov    al,0x33
  4071c2:	in     al,dx
  4071c3:	lds    ebp,FWORD PTR ds:[edx]
  4071c6:	daa    
  4071c7:	sbb    esp,eax
  4071c9:	jle    0x407175
  4071cb:	or     al,0x44
  4071cd:	jae    0x407158
  4071cf:	jmp    0xa68f4d60
  4071d4:	cmp    dl,BYTE PTR [ecx-0x4681ce26]
  4071da:	and    BYTE PTR [eax+edx*2],ch
  4071dd:	jne    0x4071a3
  4071df:	pop    esi
  4071e0:	xchg   edx,eax
  4071e1:	lods   al,BYTE PTR ds:[esi]
  4071e2:	dec    ah
  4071e4:	leave  
  4071e5:	xchg   edi,eax
  4071e6:	addr16 and eax,esp
  4071e9:	jle    0x407193
  4071eb:	loope  0x40722b
  4071ed:	sub    DWORD PTR [ebx+eiz*4-0xec9f917],0xffffffd7
  4071f5:	xor    ecx,DWORD PTR [eax-0x48]
  4071f8:	and    dh,BYTE PTR [esi]
  4071fa:	jb     0x407181
  4071fc:	sub    ebp,ebx
  4071fe:	dec    ebp
  4071ff:	mov    cl,0x80
  407201:	(bad)  
  407202:	mov    ah,0x36
  407204:	mov    DWORD PTR [eax],esi
  407206:	push   edi
  407207:	sar    BYTE PTR [edi+0x1b5b9ac0],1
  40720d:	dec    DWORD PTR [ebp+0x33d29f9d]
  407213:	sar    DWORD PTR [edx+0x3272dd],0x3
  40721a:	ret    0x4589
  40721d:	or     BYTE PTR [ebx-0x3ecc13bb],cl
  407223:	add    eax,edx
  407225:	mov    edx,DWORD PTR [ebp+0x14]
  407228:	imul   eax,DWORD PTR [edx]
  40722b:	mov    edx,DWORD PTR [ebp-0x4]
  40722e:	xor    edx,ecx
  407230:	mov    ecx,DWORD PTR [ebp+0x8]
  407233:	lea    ecx,[edx+ecx*1+0x3272dd]
  40723a:	cmp    ecx,eax
  40723c:	je     0x4072b3
  407242:	mov    edi,DWORD PTR [ebp-0x14]
  407245:	mov    eax,DWORD PTR [ebp+0x8]
  407248:	mov    edx,DWORD PTR [ebp+0x14]
  40724b:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40724f:	mov    ecx,0x7510896
  407254:	xor    edx,edx
  407256:	xor    edi,ecx
  407258:	mov    esi,0x3272dd
  40725d:	add    edi,esi
  40725f:	div    edi
  407261:	mov    edx,DWORD PTR [ebp-0x4]
  407264:	xor    edx,ecx
  407266:	lea    eax,[edx+eax*1+0x3272dd]
  40726d:	mov    edx,DWORD PTR [ebp+0x8]
  407270:	mov    edi,DWORD PTR [ebp-0x20]
  407273:	mov    DWORD PTR [edi+edx*4],eax
  407276:	mov    eax,DWORD PTR [ebp-0x14]
  407279:	mov    edx,DWORD PTR [ebp+0x8]
  40727c:	xor    eax,ecx
  40727e:	lea    eax,[eax+edx*1+0x3272dd]
  407285:	mov    DWORD PTR [ebp+0x8],eax
  407288:	mov    eax,DWORD PTR [ebp-0x14]
  40728b:	mov    edx,DWORD PTR [ebp+0x14]
  40728e:	xor    eax,ecx
  407290:	add    eax,esi
  407292:	imul   eax,DWORD PTR [edx]
  407295:	mov    edx,DWORD PTR [ebp-0x4]
  407298:	xor    edx,ecx
  40729a:	mov    ecx,DWORD PTR [ebp+0x8]
  40729d:	lea    ecx,[edx+ecx*1+0x3272dd]
  4072a4:	cmp    ecx,eax
  4072a6:	jne    0x407242
  4072ac:	mov    eax,esi
  4072ae:	jmp    0x4072b8
  4072b3:	mov    eax,0x3272dd
  4072b8:	mov    ebx,0x7510896
  4072bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4072c0:	xor    ecx,ebx
  4072c2:	add    ecx,eax
  4072c4:	mov    DWORD PTR [ebp-0xc],ecx
  4072c7:	mov    ebx,0x65655
  4072cc:	add    ebx,0x3234
  4072d2:	xchg   ebx,esi
  4072d4:	xor    ebx,ebx
  4072d6:	push   esi
  4072d7:	mov    esi,ebx
  4072d9:	pop    ebx
  4072da:	mov    edx,esi
  4072dc:	add    ebx,0x1002
  4072e2:	lea    eax,[ebp-0x10]
  4072e5:	add    edx,eax
  4072e7:	add    edx,0x5
  4072ea:	push   edx
  4072eb:	inc    esi
  4072ec:	pop    ecx
  4072ed:	dec    ecx
  4072ee:	xchg   ecx,eax
  4072ef:	dec    eax
  4072f0:	xchg   ecx,eax
  4072f1:	dec    ecx
  4072f2:	xchg   ecx,edx
  4072f4:	dec    edx
  4072f5:	push   edx
  4072f6:	mov    edx,ebx
  4072f8:	pop    ebx
  4072f9:	dec    ebx
  4072fa:	call   DWORD PTR [ebx]
  4072fc:	cmp    DWORD PTR [ebp+0x10],esi
  4072ff:	je     0x40731e
  407305:	xchg   edx,eax
  407306:	push   0xb
  407308:	pop    ecx
  407309:	push   0x4
  40730b:	pop    ebx
  40730c:	inc    ebx
  40730d:	xchg   ebx,ecx
  40730f:	sub    ebx,ecx
  407311:	xchg   ebx,ecx
  407313:	dec    ecx
  407314:	dec    ecx
  407315:	mov    eax,DWORD PTR [ebp-0x1c]
  407318:	imul   eax,ecx
  40731b:	add    esp,eax
  40731d:	xchg   edx,eax
  40731e:	push   eax
  40731f:	xor    ebx,ebx
  407321:	mov    edx,esp
  407323:	dec    edx
  407324:	inc    ebx
  407325:	add    ebx,DWORD PTR [edx+ebx*1]
  407328:	dec    ebx
  407329:	xor    edx,edx
  40732b:	add    DWORD PTR [ebp-0xc],ebx
  40732e:	pop    ebx
  40732f:	mov    eax,DWORD PTR [ebp-0xc]
  407332:	pop    edi
  407333:	pop    esi
  407334:	pop    ebx
  407335:	leave  
  407336:	ret    0x10
  407339:	push   ebp
  40733a:	mov    ebp,esp
  40733c:	sub    esp,0x7c
  40733f:	and    DWORD PTR ds:0x420e92,0x0
  407349:	jmp    0x40735b
  40734e:	mov    ecx,DWORD PTR ds:0x420e92
  407354:	inc    ecx
  407355:	mov    DWORD PTR ds:0x420e92,ecx
  40735b:	cmp    DWORD PTR ds:0x420e92,0x15
  407362:	jae    0x4073cc
  407368:	cmp    DWORD PTR ds:0x420e92,0x1f
  40736f:	jne    0x407388
  407375:	push   0x3dd4
  40737a:	push   0x422018
  40737f:	push   DWORD PTR [ebp-0xc]
  407382:	call   DWORD PTR ds:0x4247e5
  407388:	jmp    0x40734e
  40738d:	mov    DWORD PTR ds:0x420f64,0x1c
  407397:	cmp    DWORD PTR ds:0x420f64,0x0
  40739e:	je     0x4073cc
  4073a4:	cmp    DWORD PTR ds:0x420f64,0x1d
  4073ab:	jne    0x4073b7
  4073b1:	call   DWORD PTR ds:0x4247f1
  4073b7:	mov    eax,ds:0x420f64
  4073bc:	dec    eax
  4073bd:	mov    ds:0x420f64,eax
  4073c2:	jmp    0x407397
  4073c7:	adc    eax,0x653
  4073cc:	push   esi
  4073cd:	and    DWORD PTR ds:0x42200c,0x0
  4073d7:	jmp    0x4073e9
  4073dc:	mov    esi,DWORD PTR ds:0x42200c
  4073e2:	inc    esi
  4073e3:	mov    DWORD PTR ds:0x42200c,esi
  4073e9:	cmp    DWORD PTR ds:0x42200c,0x16
  4073f0:	jae    0x40742e
  4073f6:	cmp    DWORD PTR ds:0x42200c,0xa
  4073fd:	jne    0x407409
  407403:	call   DWORD PTR ds:0x4247f5
  407409:	cmp    DWORD PTR ds:0x42200c,0x9
  407410:	jne    0x407423
  407416:	mov    esi,DWORD PTR ds:0x42200c
  40741c:	inc    esi
  40741d:	mov    DWORD PTR ds:0x42200c,esi
  407423:	jmp    0x4073dc
  407428:	sbb    DWORD PTR ds:0x420f00,edx
  40742e:	push   edi
  40742f:	mov    eax,ds:0x424435
  407434:	mov    DWORD PTR ds:0x420f70,0x12
  40743e:	cmp    DWORD PTR ds:0x420f70,0x0
  407445:	je     0x40748b
  40744b:	cmp    DWORD PTR ds:0x420f70,0x17
  407452:	jne    0x407479
  407458:	push   0x87b3
  40745d:	push   DWORD PTR [ebp-0x28]
  407460:	push   0x420f68
  407465:	push   0x7b70
  40746a:	push   DWORD PTR [ebp-0x18]
  40746d:	push   DWORD PTR [ebp-0x24]
  407470:	push   DWORD PTR [ebp-0x14]
  407473:	call   DWORD PTR ds:0x4247f9
  407479:	mov    edi,DWORD PTR ds:0x420f70
  40747f:	dec    edi
  407480:	mov    DWORD PTR ds:0x420f70,edi
  407486:	jmp    0x40743e
  40748b:	mov    DWORD PTR [ebp-0x24],eax
  40748e:	mov    eax,ds:0x424541
  407493:	xor    esi,edi
  407495:	mov    DWORD PTR [ebp-0x34],eax
  407498:	and    edi,DWORD PTR ds:0x420f5c
  40749e:	and    DWORD PTR [ebp-0x30],0x0
  4074a2:	and    eax,edi
  4074a4:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  4074ab:	adc    DWORD PTR ds:0x420ef0,edx
  4074b1:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  4074b8:	mov    edi,DWORD PTR ds:0x420ec2
  4074be:	mov    eax,ds:0x420f7c
  4074c3:	sub    edi,eax
  4074c5:	sub    edi,DWORD PTR [edi+eax*1]
  4074c8:	mov    eax,DWORD PTR [ebp-0x10]
  4074cb:	or     edi,0x1b5b
  4074d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4074d4:	and    DWORD PTR ds:0x420ea2,0x0
  4074de:	xor    esi,esi
  4074e0:	xor    esi,DWORD PTR ds:0x420ea2
  4074e6:	inc    esi
  4074e7:	mov    DWORD PTR ds:0x420ea2,esi
  4074ed:	cmp    DWORD PTR ds:0x420ea2,0x20
  4074f4:	jne    0x407508
  4074fa:	push   DWORD PTR [ebp-0x28]
  4074fd:	push   0x424093
  407502:	call   DWORD PTR ds:0x4247fd
  407508:	cmp    DWORD PTR ds:0x420ea2,0x19
  40750f:	jb     0x4074de
  407515:	sub    eax,ecx
  407517:	and    DWORD PTR ds:0x420fac,0x0
  407521:	xor    ecx,ecx
  407523:	or     ecx,DWORD PTR ds:0x420fac
  407529:	inc    ecx
  40752a:	mov    DWORD PTR ds:0x420fac,ecx
  407530:	cmp    DWORD PTR ds:0x420fac,0x5
  407537:	jne    0x407550
  40753d:	push   0x42414e
  407542:	push   0x0
  407544:	push   DWORD PTR [ebp-0x28]
  407547:	push   DWORD PTR [ebp-0x10]
  40754a:	call   DWORD PTR ds:0x424801
  407550:	cmp    DWORD PTR ds:0x420fac,0x4
  407557:	jne    0x40756a
  40755d:	mov    ecx,DWORD PTR ds:0x420fac
  407563:	inc    ecx
  407564:	mov    DWORD PTR ds:0x420fac,ecx
  40756a:	cmp    DWORD PTR ds:0x420fac,0x16
  407571:	jb     0x407521
  407577:	and    DWORD PTR ds:0x420f9c,0x0
  407581:	jmp    0x407593
  407586:	mov    ecx,DWORD PTR ds:0x420f9c
  40758c:	inc    ecx
  40758d:	mov    DWORD PTR ds:0x420f9c,ecx
  407593:	cmp    DWORD PTR ds:0x420f9c,0x11
  40759a:	jae    0x4075dc
  4075a0:	cmp    DWORD PTR ds:0x420f9c,0x5
  4075a7:	jne    0x4075bd
  4075ad:	push   0x420f74
  4075b2:	push   0x1cd6
  4075b7:	call   DWORD PTR ds:0x424805
  4075bd:	cmp    DWORD PTR ds:0x420f9c,0x4
  4075c4:	jne    0x4075d7
  4075ca:	mov    ecx,DWORD PTR ds:0x420f9c
  4075d0:	inc    ecx
  4075d1:	mov    DWORD PTR ds:0x420f9c,ecx
  4075d7:	jmp    0x407586
  4075dc:	mov    DWORD PTR [ebp-0x10],eax
  4075df:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  4075e6:	mov    eax,DWORD PTR [ebp-0x18]
  4075e9:	mov    ecx,DWORD PTR [ebp-0x18]
  4075ec:	sub    eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x18],eax
  4075f1:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4075f8:	mov    eax,DWORD PTR [ebp-0xc]
  4075fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4075fe:	sub    eax,ecx
  407600:	mov    DWORD PTR [ebp-0xc],eax
  407603:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40760a:	mov    eax,DWORD PTR [ebp-0x1c]
  40760d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407610:	sub    eax,ecx
  407612:	mov    DWORD PTR [ebp-0x1c],eax
  407615:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40761c:	mov    eax,DWORD PTR [ebp-0x20]
  40761f:	mov    ecx,DWORD PTR [ebp-0x20]
  407622:	sub    eax,ecx
  407624:	mov    DWORD PTR [ebp-0x20],eax
  407627:	mov    eax,DWORD PTR [ebp-0x2c]
  40762a:	mov    ecx,DWORD PTR [ebp-0x20]
  40762d:	mov    esi,0x7510896
  407632:	xor    eax,esi
  407634:	mov    edi,0x3272dd
  407639:	add    eax,edi
  40763b:	or     eax,ecx
  40763d:	mov    DWORD PTR [ebp-0x20],eax
  407640:	mov    eax,DWORD PTR [ebp-0x4]
  407643:	mov    ecx,DWORD PTR [ebp-0x4]
  407646:	sub    eax,ecx
  407648:	mov    DWORD PTR [ebp-0x4],eax
  40764b:	or     DWORD PTR [ebp-0x4],0xf89c85be
  407652:	mov    eax,DWORD PTR [ebp-0xc]
  407655:	xor    eax,esi
  407657:	add    eax,edi
  407659:	push   eax
  40765a:	mov    eax,DWORD PTR [ebp-0x10]
  40765d:	xor    eax,esi
  40765f:	add    eax,edi
  407661:	push   eax
  407662:	mov    eax,DWORD PTR [ebp-0x4]
  407665:	xor    eax,esi
  407667:	add    eax,edi
  407669:	push   eax
  40766a:	lea    eax,[ebp-0x7c]
  40766d:	push   eax
  40766e:	push   DWORD PTR [ebp-0x2c]
  407671:	push   DWORD PTR [ebp-0x28]
  407674:	call   0x410b90
  407679:	test   eax,eax
  40767b:	je     0x4076a9
  407681:	lea    eax,[ebp-0x7c]
  407684:	push   eax
  407685:	mov    eax,DWORD PTR [ebp-0x28]
  407688:	xor    eax,esi
  40768a:	add    eax,edi
  40768c:	push   eax
  40768d:	mov    eax,DWORD PTR [ebp-0x24]
  407690:	add    eax,0xaa
  407695:	push   eax
  407696:	mov    eax,DWORD PTR [ebp-0x24]
  407699:	mov    eax,DWORD PTR [eax+0x198]
  40769f:	push   DWORD PTR [eax]
  4076a1:	call   0x402470
  4076a6:	mov    DWORD PTR [ebp-0x14],eax
  4076a9:	lea    eax,[ebp+0x4]
  4076ac:	mov    DWORD PTR [ebp-0x30],eax
  4076af:	mov    eax,DWORD PTR [ebp-0x14]
  4076b2:	test   eax,eax
  4076b4:	je     0x40771c
  4076ba:	lea    eax,[ebp-0x8]
  4076bd:	mov    DWORD PTR [ebp-0x38],eax
  4076c0:	mov    eax,DWORD PTR [ebp-0x34]
  4076c3:	mov    DWORD PTR [ebp-0x8],eax
  4076c6:	mov    eax,DWORD PTR [ebp-0x8]
  4076c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4076cc:	sub    eax,ecx
  4076ce:	mov    DWORD PTR [ebp-0x8],eax
  4076d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4076d4:	xor    ecx,esi
  4076d6:	mov    eax,0xffcd8d23
  4076db:	sub    eax,ecx
  4076dd:	add    DWORD PTR [ebp-0x8],eax
  4076e0:	mov    eax,DWORD PTR [ebp-0x8]
  4076e3:	mov    ecx,DWORD PTR [ebp-0x14]
  4076e6:	mov    DWORD PTR [ecx+0x1],eax
  4076e9:	mov    eax,DWORD PTR [ebp-0x14]
  4076ec:	push   DWORD PTR [ebp-0x24]
  4076ef:	mov    BYTE PTR [eax],0xe9
  4076f2:	mov    eax,ds:0x4242b1
  4076f7:	push   DWORD PTR [eax]
  4076f9:	push   DWORD PTR ds:0x42450d
  4076ff:	push   DWORD PTR ds:0x4242b9
  407705:	push   DWORD PTR ds:0x4244ed
  40770b:	push   DWORD PTR ds:0x4245a5
  407711:	push   DWORD PTR [ebp-0x28]
  407714:	push   DWORD PTR [ebp-0x2c]
  407717:	mov    eax,DWORD PTR [ebp-0x14]
  40771a:	call   eax
  40771c:	mov    eax,DWORD PTR [ebp-0x30]
  40771f:	mov    ecx,DWORD PTR ds:0x4244b1
  407725:	add    DWORD PTR [eax],ecx
  407727:	pop    edi
  407728:	pop    esi
  407729:	leave  
  40772a:	ret    
  40772b:	push   ebp
  40772c:	mov    ebp,esp
  40772e:	sub    esp,0x18
  407731:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  407738:	lea    eax,[ebp+0x14]
  40773b:	mov    DWORD PTR [ebp-0x4],eax
  40773e:	jmp    0x409ab8
  407743:	das    
  407744:	or     DWORD PTR [eax+0x13b778ea],edx
  40774a:	mov    esp,DWORD PTR [esi-0x10]
  40774d:	in     eax,0x6d
  40774f:	jbe    0x407715
  407751:	xor    eax,0x7a209afd
  407756:	jp     0x407771
  407758:	pop    edi
  407759:	jp     0x4077d5
  40775b:	nop
  40775c:	js     0x407762
  40775e:	mov    esp,0x763a55e9
  407763:	xchg   BYTE PTR [edi],dh
  407765:	(bad)  
  407767:	adc    eax,0x2bdf5d02
  40776c:	jnp    0x4077e7
  40776e:	adc    bh,al
  407770:	test   ch,bh
  407772:	dec    edx
  407773:	sahf   
  407774:	mov    bl,0x14
  407776:	push   edx
  407777:	rep lods eax,DWORD PTR ds:[esi]
  407779:	call   0x1306:0x1a563f6c
  407780:	aam    0xeb
  407782:	(bad)  
  407783:	cmp    ecx,DWORD PTR [esi+ebp*8+0x3c]
  407787:	xchg   ebx,eax
  407788:	mov    al,ch
  40778a:	mov    ebp,0x88b667f9
  40778f:	add    esi,eax
  407791:	pop    ebx
  407792:	push   ebx
  407793:	cli    
  407794:	xor    dl,BYTE PTR [edx-0x225bd744]
  40779a:	ficom  DWORD PTR [esi+0x69326b5d]
  4077a0:	aas    
  4077a1:	push   0xffffffce
  4077a3:	adc    ebx,esp
  4077a5:	xlat   BYTE PTR ss:[ebx]
  4077a7:	idiv   DWORD PTR [ecx-0x399f0ae4]
  4077ad:	cmp    DWORD PTR [ebx+edi*4-0xf7c5fe7],edi
  4077b4:	(bad)  
  4077b5:	ins    BYTE PTR es:[edi],dx
  4077b6:	xchg   ebx,eax
  4077b7:	sub    al,0x7e
  4077b9:	add    DWORD PTR [edi+0x7520ac2f],0x4a
  4077c0:	std    
  4077c1:	dec    esp
  4077c2:	add    BYTE PTR [ebx-0x5ce6c8d],ah
  4077c8:	and    eax,0x8df63db0
  4077cd:	mov    eax,ds:0x7c4d44fd
  4077d3:	adc    BYTE PTR [edx],cl
  4077d5:	xchg   edi,eax
  4077d6:	pop    es
  4077d7:	fdivr  st,st(6)
  4077d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077da:	in     al,0x9
  4077dc:	push   edi
  4077dd:	sbb    BYTE PTR [ecx],0x17
  4077e0:	push   cs
  4077e1:	int3   
  4077e2:	adc    BYTE PTR [ebx+esi*1-0x58],0x22
  4077e7:	clc    
  4077e8:	mov    eax,0xdf41121f
  4077ed:	xchg   edi,eax
  4077ee:	aam    0x3f
  4077f0:	add    DWORD PTR [ebp-0x3c],esi
  4077f3:	cdq    
  4077f4:	push   ebx
  4077f5:	retf   
  4077f6:	push   es
  4077f7:	sbb    eax,0x4cf3b56b
  4077fc:	cmp    dh,BYTE PTR [edi-0x1a5f327e]
  407802:	mov    eax,ds:0xfda15cf2
  407807:	ja     0x407800
  407809:	xchg   ecx,eax
  40780a:	stos   BYTE PTR es:[edi],al
  40780b:	add    bh,bh
  40780d:	adc    edi,DWORD PTR [ecx+0x7025f308]
  407813:	jne    0x4077d8
  407815:	cli    
  407816:	or     ch,bl
  407818:	jb     0x4077bf
  40781a:	jns    0x40783f
  40781c:	mov    esi,0x191d2b66
  407821:	aaa    
  407822:	adc    BYTE PTR [eax+0x65],dh
  407825:	cmp    ebx,edi
  407827:	pop    ecx
  407828:	xchg   DWORD PTR [eax+0x57],eax
  40782b:	fstp   TBYTE PTR [ecx-0x1f80573]
  407831:	mov    esp,0xa982add5
  407836:	mov    ecx,0xbf0b7e50
  40783b:	sub    dl,cl
  40783d:	sbb    DWORD PTR [edi],eax
  40783f:	pusha  
  407840:	cwde   
  407841:	and    BYTE PTR [ecx-0x67],0xa8
  407845:	cmc    
  407846:	sub    eax,0xd503e3c2
  40784b:	jmp    0x4078a1
  40784d:	and    DWORD PTR [eax+0x2f],ebx
  407850:	cld    
  407851:	shl    DWORD PTR [ecx-0x4cadf28],cl
  407857:	test   eax,0xe4fabdc5
  40785c:	out    dx,al
  40785d:	inc    edx
  40785e:	pop    ecx
  40785f:	pop    edx
  407860:	addr16 int 0x81
  407863:	fistp  DWORD PTR [ecx+ebp*1-0x6896695d]
  40786a:	in     eax,0x35
  40786c:	ss ud1 eax,eax
  407870:	push   ebx
  407871:	loopne 0x40783f
  407873:	cmp    al,0xe6
  407875:	in     eax,0xf0
  407877:	cwde   
  407878:	out    dx,eax
  407879:	mov    bh,BYTE PTR [eax+ebp*1+0x5]
  40787d:	out    dx,al
  40787e:	dec    eax
  40787f:	pop    ebp
  407880:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  407882:	leave  
  407883:	dec    eax
  407884:	lods   al,BYTE PTR ds:[esi]
  407885:	aas    
  407886:	clc    
  407887:	pop    ebx
  407888:	fstp   TBYTE PTR [edx-0x53]
  40788b:	push   eax
  40788c:	inc    edi
  40788d:	iret   
  40788e:	ret    0x5f45
  407891:	mov    edx,0x39d369b0
  407896:	sub    BYTE PTR [edi],dl
  407898:	sti    
  407899:	out    0xcf,eax
  40789b:	in     al,dx
  40789c:	sbb    eax,DWORD PTR [ecx+0x71]
  40789f:	add    eax,0xcee49abc
  4078a4:	mov    bh,0xa7
  4078a6:	xlat   BYTE PTR ds:[ebx]
  4078a7:	popf   
  4078a8:	aaa    
  4078a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078aa:	or     al,0xeb
  4078ac:	cmp    DWORD PTR [ebp+0xb],ecx
  4078af:	sub    ecx,DWORD PTR [eax+0xa]
  4078b2:	and    al,0xba
  4078b4:	pop    ds
  4078b5:	jg     0x407870
  4078b7:	hlt    
  4078b8:	sbb    edx,eax
  4078ba:	and    al,0x76
  4078bc:	lock nop
  4078be:	pop    edi
  4078bf:	mov    edi,0xaefa85ab
  4078c4:	gs int3 
  4078c6:	ds jbe 0x407867
  4078c9:	adc    DWORD PTR [eax+0x43],edx
  4078cc:	nop
  4078cd:	mov    edx,?
  4078cf:	push   eax
  4078d0:	jmp    0x690e:0xd1b87a53
  4078d7:	cmp    ah,BYTE PTR [eax]
  4078d9:	add    edx,DWORD PTR [edx]
  4078db:	push   esp
  4078dc:	cdq    
  4078dd:	lods   eax,DWORD PTR ds:[esi]
  4078de:	retf   0xd97b
  4078e1:	ret    0xf50a
  4078e4:	call   0xdf574fc4
  4078e9:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078eb:	mov    ebp,0xcb3d6162
  4078f0:	scas   eax,DWORD PTR es:[edi]
  4078f1:	scas   eax,DWORD PTR es:[edi]
  4078f2:	inc    edi
  4078f3:	repnz pusha 
  4078f5:	sbb    ebp,DWORD PTR [esp+edx*1-0x5237dcd1]
  4078fc:	cdq    
  4078fd:	fs (bad) 
  4078ff:	mov    BYTE PTR [ebp-0x2d],cl
  407902:	pop    ss
  407903:	pop    ebp
  407904:	cmp    esi,edx
  407906:	scas   eax,DWORD PTR es:[edi]
  407907:	mov    edi,0x2f4eec01
  40790c:	push   0x8227f178
  407911:	addr16 repnz (bad) 
  407914:	lahf   
  407915:	push   es
  407916:	loopne 0x40797a
  407918:	test   DWORD PTR [edx+0x6822f445],ebp
  40791e:	jnp    0x407982
  407920:	and    bh,bl
  407922:	lahf   
  407923:	or     dl,ah
  407925:	and    bh,BYTE PTR [eax+0x6a4d9ca]
  40792b:	xchg   edi,eax
  40792c:	mov    ds:0xf59ad1d5,eax
  407931:	and    ecx,DWORD PTR [edx-0x39]
  407934:	out    dx,al
  407935:	(bad)  
  407936:	in     eax,0xf4
  407938:	in     eax,0xf6
  40793a:	jo     0x407945
  40793c:	stc    
  40793d:	or     eax,0x38a986ce
  407942:	shl    BYTE PTR [esi-0x17],0xab
  407946:	pop    ebp
  407947:	iret   
  407948:	stos   BYTE PTR es:[edi],al
  407949:	sti    
  40794a:	pusha  
  40794b:	jmp    0x629a:0x4b500431
  407952:	sub    eax,0xab6eb86f
  407957:	ror    DWORD PTR [ecx+0x4d1295fe],cl
  40795d:	mov    bh,0x86
  40795f:	xchg   DWORD PTR [edx],ebx
  407961:	clc    
  407962:	retf   
  407963:	jmp    0x16e26913
  407968:	mov    bl,0xe4
  40796a:	neg    DWORD PTR [edi+ebx*4-0x642e7981]
  407971:	cmp    dl,BYTE PTR ds:0x2d518a0c
  407977:	or     DWORD PTR [edx],ebx
  407979:	dec    esi
  40797a:	sub    DWORD PTR [esi-0x47],ebp
  40797d:	adc    al,0x37
  40797f:	iret   
  407980:	popa   
  407981:	sub    eax,0x656b385c
  407986:	push   ds
  407987:	outs   dx,BYTE PTR ds:[esi]
  407988:	mov    ebp,0x7a6b3f70
  40798d:	mov    ds:0xded5d2c,eax
  407992:	fnstsw WORD PTR [ebx]
  407994:	rol    DWORD PTR fs:[ecx+0x3d],cl
  407998:	xchg   edx,eax
  407999:	mov    al,ds:0xcdbe47fa
  40799e:	and    DWORD PTR ds:[edx],edx
  4079a1:	jle    0x40797a
  4079a3:	sti    
  4079a4:	inc    ebp
  4079a5:	gs test edx,ebx
  4079a8:	adc    al,0x4b
  4079aa:	pop    ebx
  4079ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079ac:	outs   dx,BYTE PTR ds:[esi]
  4079ad:	in     al,0xf9
  4079af:	out    0x38,al
  4079b1:	push   0x43cb3eb2
  4079b6:	ror    dl,0xd7
  4079b9:	dec    ebx
  4079ba:	jno    0x40797b
  4079bc:	and    ebp,DWORD PTR [edx+0xac750f7]
  4079c2:	pop    edi
  4079c3:	sbb    al,0xf2
  4079c5:	dec    ebx
  4079c6:	fidivr DWORD PTR [edi-0x21]
  4079c9:	pop    ds
  4079ca:	ficomp WORD PTR [ecx-0x3a]
  4079cd:	ins    DWORD PTR es:[edi],dx
  4079ce:	push   0xfffffff9
  4079d0:	inc    ebp
  4079d1:	pop    esp
  4079d2:	fwait
  4079d3:	sub    bl,BYTE PTR [esi]
  4079d5:	in     eax,0x3c
  4079d7:	push   ebp
  4079d8:	inc    esp
  4079d9:	into   
  4079da:	mov    BYTE PTR [ecx+ebp*2],bl
  4079dd:	and    BYTE PTR [eax+0x7c529363],0x8e
  4079e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079e5:	mov    BYTE PTR [eax],0xe4
  4079e8:	clc    
  4079e9:	gs dec ecx
  4079eb:	sti    
  4079ec:	xor    al,0x4c
  4079ee:	and    BYTE PTR [eax+edi*4+0x7098ccb0],0x7d
  4079f6:	loope  0x407a2d
  4079f8:	adc    ah,BYTE PTR [esi-0x3f]
  4079fb:	dec    ebx
  4079fc:	fdiv   QWORD PTR [edi-0xc14e052]
  407a02:	pop    edx
  407a03:	inc    esp
  407a04:	or     ch,BYTE PTR [edi+ebp*1+0x69]
  407a08:	das    
  407a09:	push   cs
  407a0a:	and    DWORD PTR [edx+0x60],ebp
  407a0d:	fs call 0x775c:0x39d819de
  407a15:	mov    al,ds:0xb22542e6
  407a1a:	rol    BYTE PTR [eax-0x4f4c15ce],1
  407a20:	rcl    BYTE PTR [ebx-0x24],0x64
  407a24:	xchg   edx,eax
  407a25:	scas   al,BYTE PTR es:[edi]
  407a26:	shl    DWORD PTR ds:0x83869edd,1
  407a2c:	inc    ebx
  407a2d:	cmp    eax,0xb1ba1d56
  407a32:	out    0xb7,eax
  407a34:	icebp  
  407a35:	call   DWORD PTR [ebp-0x5a87c19f]
  407a3b:	xchg   ebp,eax
  407a3c:	inc    ebp
  407a3d:	jo     0x407a41
  407a3f:	xor    DWORD PTR [ebp-0x432cb910],ebx
  407a45:	cmc    
  407a46:	mov    fs,WORD PTR [ecx]
  407a48:	pushf  
  407a49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a4a:	js     0x407a21
  407a4c:	cmp    ecx,DWORD PTR [eax+ebp*1]
  407a4f:	(bad)  [edi]
  407a51:	sub    al,0x5d
  407a53:	jns    0x407a68
  407a55:	add    eax,DWORD PTR [ecx-0x2b]
  407a58:	int3   
  407a59:	ins    DWORD PTR es:[edi],dx
  407a5a:	hlt    
  407a5b:	les    edi,FWORD PTR [eax-0xaf2f256]
  407a61:	pop    edi
  407a62:	fiadd  WORD PTR [edx+eax*8]
  407a65:	jo     0x407aa2
  407a67:	fidiv  DWORD PTR [ecx]
  407a69:	dec    ebp
  407a6a:	inc    eax
  407a6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a6c:	icebp  
  407a6d:	cmp    BYTE PTR [ecx-0x4b],dh
  407a70:	pusha  
  407a71:	lds    ebp,FWORD PTR [ecx-0x1f]
  407a74:	fdivp  st(7),st
  407a76:	inc    esp
  407a77:	pop    esi
  407a78:	lds    eax,FWORD PTR [eax-0x32]
  407a7b:	or     ebx,DWORD PTR [eax+edi*4]
  407a7e:	dec    edx
  407a7f:	jbe    0x407a6e
  407a81:	push   0xaced09c8
  407a86:	sar    BYTE PTR [ecx-0x1d584330],0xb4
  407a8d:	jno    0x407a5a
  407a8f:	pop    eax
  407a90:	push   ss
  407a91:	stos   DWORD PTR es:[edi],eax
  407a92:	clc    
  407a93:	dec    ecx
  407a94:	push   esp
  407a95:	xchg   ecx,eax
  407a96:	rcl    DWORD PTR [ecx],cl
  407a98:	xchg   esp,eax
  407a99:	in     eax,dx
  407a9a:	sub    ebp,ebx
  407a9c:	repz fnstenv [edi+0x2861f463]
  407aa3:	xchg   ebx,eax
  407aa4:	out    0x19,al
  407aa6:	pop    ebx
  407aa7:	push   ss
  407aa8:	mov    ah,0xfd
  407aaa:	inc    eax
  407aab:	sti    
  407aac:	dec    ebp
  407aad:	push   ds
  407aae:	pop    edx
  407aaf:	push   es
  407ab0:	push   esp
  407ab1:	xor    bl,BYTE PTR [esi-0x75496785]
  407ab7:	ss and al,0x10
  407aba:	mov    ebp,0x49fd4308
  407abf:	add    DWORD PTR [edx-0x23],esp
  407ac2:	loopne 0x407a7e
  407ac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ac5:	mov    edx,0xb17856d9
  407aca:	mov    dl,0x9
  407acc:	cmp    dh,cl
  407ace:	add    DWORD PTR [eax+0x1b],ebp
  407ad1:	(bad)
  407ad6:	jne    0x407b25
  407ad8:	and    BYTE PTR ds:0x6a495282,bh
  407ade:	xchg   edx,eax
  407adf:	jmp    0x407b04
  407ae1:	nop
  407ae2:	inc    edi
  407ae3:	adc    al,0xe5
  407ae5:	aas    
  407ae6:	sbb    DWORD PTR ds:0x47e6b645,edx
  407aec:	test   BYTE PTR [ecx],ah
  407aee:	xchg   esi,eax
  407aef:	and    al,0x98
  407af1:	fwait
  407af2:	ins    BYTE PTR es:[edi],dx
  407af3:	rcl    BYTE PTR [ebp-0x6a],cl
  407af6:	stos   DWORD PTR es:[edi],eax
  407af7:	mov    al,0x2a
  407af9:	pop    edx
  407afa:	shl    DWORD PTR [ebp-0x11],cl
  407afd:	and    DWORD PTR [eax-0x2777929d],eax
  407b03:	stc    
  407b04:	test   DWORD PTR [ebx],eax
  407b06:	gs (bad) 
  407b08:	in     eax,dx
  407b09:	push   edx
  407b0a:	xor    BYTE PTR [ebx-0x1f81b596],al
  407b10:	adc    BYTE PTR [eax+esi*2+0x3b],dh
  407b14:	xor    BYTE PTR [ecx],bh
  407b16:	push   ebp
  407b17:	sbb    eax,0xfc547132
  407b1c:	icebp  
  407b1d:	push   es
  407b1e:	imul   esi,DWORD PTR [ebp-0x620f809c],0x694a4d6d
  407b28:	fild   DWORD PTR [ebx-0x55]
  407b2b:	(bad)  
  407b2c:	out    0x44,eax
  407b2e:	sub    bh,BYTE PTR [edx]
  407b30:	pop    ebx
  407b31:	push   ds
  407b32:	fcomi  st,st(4)
  407b34:	imul   eax,DWORD PTR [eax+0x6d2e0830],0xffffffa7
  407b3b:	out    0xb9,eax
  407b3d:	dec    ebp
  407b3e:	dec    ebx
  407b3f:	mov    cl,0xce
  407b41:	jb     0x407af8
  407b43:	pop    es
  407b44:	inc    esi
  407b45:	add    ecx,ebp
  407b47:	cld    
  407b48:	pop    ebx
  407b49:	xor    al,al
  407b4b:	lds    eax,FWORD PTR [esi]
  407b4d:	in     al,dx
  407b4e:	dec    edx
  407b4f:	cmp    ebp,eax
  407b51:	test   al,0x10
  407b53:	jne    0x407bce
  407b55:	outs   dx,DWORD PTR ds:[esi]
  407b56:	inc    ecx
  407b57:	jne    0x407b3e
  407b59:	pusha  
  407b5a:	iret   
  407b5b:	mov    ecx,edi
  407b5d:	imul   BYTE PTR [ebp+0x8]
  407b60:	daa    
  407b61:	imul   ecx,DWORD PTR [esp+edi*8+0x28f929f3],0x7c55ffe9
  407b6c:	es in  al,0x16
  407b6f:	add    dl,BYTE PTR [edi]
  407b71:	sub    edi,DWORD PTR [ebx*8+0x38790bc9]
  407b78:	jbe    0x407b34
  407b7a:	out    0x89,eax
  407b7c:	scas   eax,DWORD PTR es:[edi]
  407b7d:	fst    st(2)
  407b7f:	cmc    
  407b80:	push   esp
  407b81:	xor    esp,DWORD PTR [eax]
  407b83:	sbb    eax,0xf4893396
  407b88:	ret    0x575a
  407b8b:	pop    edx
  407b8c:	in     eax,0xb0
  407b8e:	mov    edx,0x97e01179
  407b93:	push   esi
  407b94:	fldcw  WORD PTR [ebp+0x175552fd]
  407b9a:	inc    ebx
  407b9b:	mov    cl,0x37
  407b9d:	jns    0x407b57
  407b9f:	jl     0x407bff
  407ba1:	adc    al,0xc6
  407ba3:	jbe    0x407c18
  407ba5:	push   ecx
  407ba6:	lds    esp,FWORD PTR [edi-0x4f]
  407ba9:	shl    DWORD PTR [edi-0x12da834d],cl
  407baf:	daa    
  407bb0:	in     al,0x6e
  407bb2:	inc    ebx
  407bb3:	mov    dh,0x50
  407bb5:	xchg   BYTE PTR [edi],bh
  407bb7:	or     BYTE PTR [ecx+eiz*1+0x66],al
  407bbb:	scas   eax,DWORD PTR es:[edi]
  407bbc:	lea    esi,[ecx+0x6e391d7]
  407bc2:	test   al,0x4a
  407bc4:	call   0xf94a:0xbbb6e2d5
  407bcb:	bnd call 0xb025cde3
  407bd1:	vpunpcklqdq xmm3,xmm4,XMMWORD PTR [eax-0x1a]
  407bd6:	mov    esi,0xd6c04297
  407bdb:	lods   eax,DWORD PTR ds:[esi]
  407bdc:	addr16 xor al,0x3f
  407bdf:	aam    0x94
  407be1:	pop    esp
  407be2:	mov    cl,0xc0
  407be4:	push   ebp
  407be5:	push   cs
  407be6:	ins    DWORD PTR es:[edi],dx
  407be7:	sbb    BYTE PTR [ecx+0x37],bh
  407bea:	out    0x17,eax
  407bec:	fwait
  407bed:	iret   
  407bee:	lea    ebp,[ebx+ecx*4-0x4b]
  407bf2:	and    DWORD PTR [ebx-0xba86ef],eax
  407bf8:	outs   dx,DWORD PTR ds:[esi]
  407bf9:	shl    BYTE PTR [ebx],0x4a
  407bfc:	call   0x4a84:0x4228ecbd
  407c03:	inc    eax
  407c04:	jo     0x407c20
  407c06:	jae    0x407bf3
  407c08:	sub    DWORD PTR [esi-0x6d5accd7],edi
  407c0e:	xchg   BYTE PTR gs:[ebx-0x4efa22ae],dl
  407c15:	mov    ah,0x87
  407c17:	dec    ebx
  407c18:	or     DWORD PTR [edi-0x64ad101b],edi
  407c1e:	xorps  xmm5,XMMWORD PTR [edi+0x444e9ef1]
  407c25:	iret   
  407c26:	xchg   ebx,eax
  407c27:	sub    ebp,esi
  407c29:	test   esp,esi
  407c2b:	outs   dx,BYTE PTR ds:[esi]
  407c2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c2d:	or     bh,al
  407c2f:	sub    ecx,DWORD PTR [ebx+0x41bdfef6]
  407c35:	sbb    eax,0xdebb1c94
  407c3a:	retf   
  407c3b:	push   edx
  407c3c:	ins    DWORD PTR es:[edi],dx
  407c3d:	or     edx,DWORD PTR [eax]
  407c3f:	inc    ecx
  407c40:	inc    edi
  407c41:	aas    
  407c42:	jg     0x407c5f
  407c44:	adc    ch,BYTE PTR [edx-0x10]
  407c47:	push   edi
  407c48:	and    al,0xe0
  407c4a:	das    
  407c4b:	in     al,dx
  407c4c:	scas   eax,DWORD PTR es:[edi]
  407c4d:	xchg   ebp,eax
  407c4e:	cs dec eax
  407c50:	bnd ret 0x2745
  407c54:	imul   esi,DWORD PTR [eax+0x77],0x74
  407c58:	call   0xc030:0xb04867b2
  407c5f:	xchg   edx,eax
  407c60:	sbb    edi,DWORD PTR [edx+edx*2-0x7eec5056]
  407c67:	sar    DWORD PTR [edi],0x1b
  407c6a:	std    
  407c6b:	push   eax
  407c6c:	push   es
  407c6d:	scas   eax,DWORD PTR es:[edi]
  407c6e:	pop    esi
  407c6f:	or     ebx,ebp
  407c71:	xchg   DWORD PTR [edx-0x1dac2e63],ecx
  407c77:	imul   ebp,DWORD PTR [ebp+0x1b63a5d2],0xe0f2ee2
  407c81:	add    eax,0x374f2abf
  407c86:	sbb    cl,BYTE PTR [eax]
  407c88:	fdivr  QWORD PTR [ecx-0x757b790a]
  407c8e:	neg    BYTE PTR [ecx+ecx*4-0x73]
  407c92:	les    ebx,FWORD PTR [esp+ebx*1+0x16]
  407c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c97:	pop    es
  407c98:	cmp    BYTE PTR [ebx-0x6d],ch
  407c9b:	jns    0x407cde
  407c9d:	pusha  
  407c9e:	push   es
  407c9f:	int    0x58
  407ca1:	add    dh,BYTE PTR [ebx]
  407ca3:	sbb    BYTE PTR [ecx-0x6e],ah
  407ca6:	xlat   BYTE PTR ds:[ebx]
  407ca7:	test   BYTE PTR [eax],cl
  407ca9:	aad    0x23
  407cab:	mov    bh,0xbf
  407cad:	frstor [esi]
  407caf:	call   0x1874:0xe2bf093f
  407cb6:	add    eax,0xa042daa7
  407cbc:	jp     0x407c8e
  407cbe:	sbb    BYTE PTR [esi+0x36],ch
  407cc1:	jge    0x407c5f
  407cc3:	shr    DWORD PTR [ebp-0xf],cl
  407cc6:	retf   
  407cc7:	repz clc 
  407cc9:	xchg   esp,eax
  407cca:	mov    ds:0xde7b0cea,al
  407ccf:	addr16 daa 
  407cd1:	test   DWORD PTR [edx-0x44],0xff506734
  407cd8:	pop    ss
  407cd9:	lahf   
  407cda:	push   es
  407cdb:	xchg   ecx,eax
  407cdc:	fadd   DWORD PTR [eax]
  407cde:	jmp    0x407cda
  407ce0:	mov    ch,dh
  407ce2:	push   edx
  407ce3:	je     0x407ca1
  407ce5:	push   eax
  407ce6:	pop    edi
  407ce7:	push   eax
  407ce8:	sub    DWORD PTR [edi-0x2d3acc4b],ecx
  407cee:	js     0x407cd6
  407cf0:	ret    
  407cf1:	aaa    
  407cf2:	sbb    eax,0x9499665f
  407cf7:	cmc    
  407cf8:	pop    es
  407cf9:	cmp    al,0x82
  407cfb:	push   edi
  407cfc:	xchg   ebx,eax
  407cfd:	call   0x4307:0x39a8cae7
  407d04:	nop
  407d05:	jl     0x407d69
  407d07:	mov    ebx,0x6f881c1b
  407d0c:	jge    0x407d2f
  407d0e:	cmp    BYTE PTR [esi+ecx*4-0x65aa59ab],al
  407d15:	jmp    0x4dac:0xd4561063
  407d1c:	ret    0x2cf5
  407d1f:	or     BYTE PTR [edi],0xda
  407d22:	sub    BYTE PTR [eax+0x45],ch
  407d25:	push   0x453dd43c
  407d2a:	cld    
  407d2b:	daa    
  407d2c:	cmp    DWORD PTR [eax+eax*4+0x6f989b6f],edx
  407d33:	rol    DWORD PTR [esi+0x35fc7d70],cl
  407d39:	fisub  DWORD PTR [esi]
  407d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d3c:	and    BYTE PTR [eax+0x3088f32d],0xbd
  407d43:	push   ebx
  407d44:	ret    
  407d45:	mov    bh,0xb8
  407d47:	mov    eax,ds:0x12a40ae8
  407d4c:	imul   eax,DWORD PTR [edi-0x43e119a5],0xff29d5f6
  407d56:	and    ecx,DWORD PTR [edx-0x549612b7]
  407d5c:	in     al,0x3e
  407d5e:	iret   
  407d5f:	cdq    
  407d60:	sar    dh,1
  407d62:	shr    DWORD PTR [ebx],0xc8
  407d65:	shl    DWORD PTR [eax+0x79],cl
  407d68:	cmp    DWORD PTR [edx+0x32],ebp
  407d6b:	clc    
  407d6c:	mov    esp,0x659ca0cf
  407d71:	sar    DWORD PTR [ecx],0x3d
  407d74:	inc    edi
  407d75:	xchg   ecx,eax
  407d76:	and    eax,0x59eca42b
  407d7b:	sbb    al,0xb8
  407d7d:	and    bl,dh
  407d7f:	jbe    0x407db7
  407d81:	adc    ecx,DWORD PTR [edx+0x2cc4ba4b]
  407d87:	hlt    
  407d88:	add    al,0x5f
  407d8a:	lea    ebx,[edi+0x560de3a9]
  407d90:	(bad)  
  407d92:	pop    eax
  407d93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d94:	aaa    
  407d95:	cmp    bl,BYTE PTR [esi]
  407d97:	mov    edx,0x1a3ee9a5
  407d9c:	(bad)  
  407d9d:	pop    edx
  407d9e:	xor    ah,BYTE PTR [ebp+eax*1+0x7a15e4a1]
  407da5:	adc    eax,0xb81de508
  407daa:	push   cs
  407dab:	xchg   ebx,eax
  407dac:	ret    0x43a4
  407daf:	push   edi
  407db0:	dec    edx
  407db1:	inc    edi
  407db2:	and    al,BYTE PTR [edi]
  407db4:	mov    dl,BYTE PTR ds:0xbb4b240c
  407dba:	fisub  DWORD PTR [eax]
  407dbc:	cld    
  407dbd:	xor    eax,DWORD PTR [ecx-0x29ef2e2]
  407dc3:	pop    ds
  407dc4:	ss ret 0xe19e
  407dc8:	mov    al,ds:0x7749159
  407dcd:	and    DWORD PTR [esi+0x7c],edi
  407dd0:	aad    0x29
  407dd2:	cdq    
  407dd3:	adc    al,0x30
  407dd5:	shl    edx,cl
  407dd7:	xor    al,0x29
  407dd9:	xchg   ecx,eax
  407dda:	je     0x407d6e
  407ddc:	inc    eax
  407ddd:	ret    
  407dde:	int3   
  407ddf:	and    BYTE PTR [ebx-0x26],0x93
  407de3:	into   
  407de4:	leave  
  407de5:	data16 jp 0x407e33
  407de8:	dec    ecx
  407de9:	fcom   QWORD PTR ds:0x149a7e2a
  407def:	cld    
  407df0:	pop    ebx
  407df1:	les    ebp,FWORD PTR [ebp+0x7bc6b99e]
  407df7:	test   BYTE PTR [edx],cl
  407df9:	jmp    0xbb9395
  407dfe:	and    eax,0x10d6050e
  407e03:	dec    esp
  407e04:	in     al,0x24
  407e06:	retf   
  407e07:	mov    edi,0xf0517f33
  407e0c:	sti    
  407e0d:	ret    0xb7e9
  407e10:	jne    0x407df6
  407e12:	or     esi,DWORD PTR [ecx-0x4d]
  407e15:	lahf   
  407e16:	sbb    eax,0x1652898d
  407e1b:	clc    
  407e1c:	fisubr DWORD PTR [esi+0x1449debe]
  407e22:	bound  edi,QWORD PTR [edx+0x20]
  407e25:	xlat   BYTE PTR ds:[ebx]
  407e26:	in     al,dx
  407e27:	fstp   QWORD PTR [eax]
  407e29:	mov    eax,ds:0xe21e697f
  407e2e:	repz xchg esp,eax
  407e30:	(bad)  
  407e32:	jbe    0x407e60
  407e34:	gs je  0x407df2
  407e37:	xchg   edx,eax
  407e38:	rcl    DWORD PTR ds:0xf9b230c7,1
  407e3e:	stos   BYTE PTR es:[edi],al
  407e3f:	icebp  
  407e40:	enter  0x9bda,0x34
  407e44:	pop    ebx
  407e45:	cmp    esi,edx
  407e47:	mov    ebx,0xd1940036
  407e4c:	and    ebp,edx
  407e4e:	adc    ch,BYTE PTR [ebx+esi*4-0x2184567f]
  407e55:	mov    ds:0x2672c701,eax
  407e5a:	xor    dh,dl
  407e5c:	sbb    al,0xcc
  407e5e:	adc    eax,0x9af89c2d
  407e63:	retf   
  407e64:	pop    ss
  407e65:	(bad)  
  407e66:	or     esi,DWORD PTR [ebx]
  407e68:	jne    0x407e21
  407e6a:	iret   
  407e6b:	mul    DWORD PTR [eax-0x7b]
  407e6e:	dec    edx
  407e6f:	test   al,0xe3
  407e71:	outs   dx,DWORD PTR ds:[esi]
  407e72:	stc    
  407e73:	or     BYTE PTR [ecx-0x47],bl
  407e76:	dec    ecx
  407e77:	push   ebx
  407e78:	mov    al,0x84
  407e7a:	xchg   edx,eax
  407e7b:	shl    bh,1
  407e7d:	cdq    
  407e7e:	cmp    al,0xc3
  407e80:	pop    ss
  407e81:	mov    edi,DWORD PTR [bx+si-0x65db]
  407e86:	mov    ecx,ds
  407e88:	inc    esi
  407e89:	mov    bh,0xee
  407e8b:	fsub   DWORD PTR [esi+0x77fb2fcf]
  407e91:	pop    ds
  407e92:	ins    BYTE PTR es:[edi],dx
  407e93:	mov    edi,0x261903c0
  407e98:	into   
  407e99:	sub    esi,DWORD PTR [ebx+0x7765eb5a]
  407e9f:	ss cmp eax,0xc3cfc985
  407ea5:	hlt    
  407ea6:	cmp    edi,esp
  407ea8:	sub    BYTE PTR [ecx+0x35],bh
  407eab:	repnz cld 
  407ead:	in     al,dx
  407eae:	jae    0x407ebe
  407eb0:	loop   0x407f10
  407eb2:	jne    0x407eba
  407eb4:	dec    edi
  407eb5:	xchg   ecx,eax
  407eb6:	and    BYTE PTR [ecx-0x7b],0x59
  407eba:	xor    DWORD PTR [edx-0x2ab03e5a],esi
  407ec0:	data16 (bad) 
  407ec2:	cmp    al,BYTE PTR [edi]
  407ec4:	fadd   QWORD PTR [esi+0x3d]
  407ec7:	and    BYTE PTR [ecx],ch
  407ec9:	in     al,0xe5
  407ecb:	mov    esi,0xbeaceaab
  407ed0:	fstp   QWORD PTR [ecx-0x2f]
  407ed3:	addr16 jo 0x407ef6
  407ed6:	(bad)  
  407ed7:	dec    ebp
  407ed8:	xchg   edx,eax
  407ed9:	and    cl,ch
  407edb:	mov    eax,0x4a45103f
  407ee0:	cmp    bh,BYTE PTR [ebx+ecx*4-0x6d6138bd]
  407ee7:	push   edi
  407ee8:	cmp    eax,0xf9dc9950
  407eed:	cmc    
  407eee:	call   0x20d:0xfd50
  407ef4:	fidiv  WORD PTR [edx]
  407ef6:	scas   eax,DWORD PTR es:[edi]
  407ef7:	mov    eax,0x4e151def
  407efc:	cmp    BYTE PTR [edx-0xf],dh
  407eff:	mov    edx,edx
  407f01:	sbb    al,0x8e
  407f03:	or     edi,DWORD PTR [esi-0x56afa827]
  407f09:	cmc    
  407f0a:	mov    dl,0xcd
  407f0c:	daa    
  407f0d:	dec    edx
  407f0e:	pop    esp
  407f0f:	and    dl,BYTE PTR [ebx]
  407f11:	pop    edx
  407f12:	xchg   esp,eax
  407f13:	ror    BYTE PTR [edi+0x2a],cl
  407f16:	dec    ecx
  407f17:	in     eax,dx
  407f18:	xchg   BYTE PTR [esi+0x6cc04b10],al
  407f1e:	jecxz  0x407f39
  407f20:	adc    eax,0x9734e71e
  407f25:	xlat   BYTE PTR ds:[ebx]
  407f26:	cmp    dh,BYTE PTR [edi]
  407f28:	cmp    DWORD PTR ds:0xa1b052aa,eax
  407f2e:	push   esp
  407f2f:	cli    
  407f30:	js     0x407ef5
  407f32:	sub    DWORD PTR [ebx-0x5c2fdb43],ecx
  407f38:	frstpm(287 only) 
  407f3a:	xchg   ecx,eax
  407f3b:	jb     0x407f71
  407f3d:	loop   0x407f2c
  407f3f:	jle    0x407edb
  407f41:	jae    0x407fb6
  407f43:	adc    esi,esi
  407f45:	scas   al,BYTE PTR es:[edi]
  407f46:	test   DWORD PTR [esi],ecx
  407f48:	mov    ebp,0xa96d4c88
  407f4d:	mov    dl,0x54
  407f4f:	ins    BYTE PTR es:[edi],dx
  407f50:	hlt    
  407f51:	bound  esp,QWORD PTR [ebp-0x5e041d2a]
  407f57:	loope  0x407f8a
  407f59:	test   al,0xa7
  407f5b:	data16 mov dh,0xdb
  407f5e:	and    BYTE PTR [edx],bh
  407f60:	mov    al,ds:0x1bb1ffc4
  407f65:	adc    al,0x30
  407f67:	stos   BYTE PTR es:[edi],al
  407f68:	mov    eax,0xb1888784
  407f6e:	test   BYTE PTR [eax-0x26],ch
  407f71:	call   0x2cbb2054
  407f76:	xchg   ebx,eax
  407f77:	cs push 0x270bd9f6
  407f7d:	and    DWORD PTR [ecx],ebp
  407f7f:	jmp    0x691d:0x7e36a025
  407f86:	xor    eax,0x7b37ef24
  407f8b:	inc    esi
  407f8c:	add    edx,esp
  407f8e:	stos   BYTE PTR es:[edi],al
  407f8f:	mov    bh,0xd8
  407f91:	clc    
  407f92:	(bad)  
  407f93:	lahf   
  407f94:	pop    esp
  407f95:	sbb    edi,DWORD PTR [edx]
  407f97:	aad    0x96
  407f99:	test   eax,0xdb793f38
  407f9e:	mov    ebx,0xea72a37f
  407fa3:	and    DWORD PTR [esi+0x36],ecx
  407fa6:	push   ebp
  407fa7:	cmc    
  407fa8:	in     al,0xb3
  407faa:	daa    
  407fab:	in     al,dx
  407fac:	cmp    ch,bh
  407fae:	fwait
  407faf:	xor    al,0xdf
  407fb1:	add    dh,BYTE PTR [edx+0x13bf8b4b]
  407fb7:	adc    edi,DWORD PTR [eax+0x178c0694]
  407fbd:	icebp  
  407fbe:	xor    BYTE PTR [ebp*2+0x5f2d4acd],cl
  407fc5:	mov    ds:0xc6259043,al
  407fca:	icebp  
  407fcb:	mov    dh,0x6
  407fcd:	fwait
  407fce:	ss jae 0x40803f
  407fd1:	add    eax,0xf29e2966
  407fd6:	or     eax,0x6653a0d3
  407fdb:	pop    edi
  407fdc:	fs inc esi
  407fde:	lds    ecx,FWORD PTR [edx]
  407fe0:	aas    
  407fe1:	push   0xffffffa0
  407fe3:	nop
  407fe4:	push   edx
  407fe5:	ins    DWORD PTR es:[edi],dx
  407fe6:	mov    ebx,0x4692605
  407fec:	mov    edi,0x312c75a4
  407ff1:	ret    0x3dc2
  407ff4:	sub    BYTE PTR [eax],cl
  407ff6:	jp     0x408063
  407ff8:	inc    eax
  407ff9:	cwde   
  407ffa:	add    eax,0xc600f5c2
  407fff:	adc    DWORD PTR [edx-0x7734c53],ebp
  408005:	int3   
  408006:	mov    ecx,0x8a72dc78
  40800b:	lock adc BYTE PTR [ebx],al
  40800e:	mov    dh,0x88
  408011:	popa   
  408012:	xchg   esi,eax
  408013:	cmp    esi,ecx
  408015:	outs   dx,BYTE PTR ds:[esi]
  408016:	les    edx,FWORD PTR [edx-0xf]
  408019:	ds out 0xa6,al
  40801c:	and    eax,0x611718ee
  408021:	scas   eax,DWORD PTR es:[edi]
  408022:	xchg   ebx,eax
  408023:	add    BYTE PTR [esi+ebp*8],ah
  408026:	xor    al,0x82
  408028:	mov    al,0xde
  40802a:	push   ebx
  40802b:	fist   DWORD PTR [edx-0x4afdaef]
  408031:	out    0x1a,al
  408033:	dec    ecx
  408034:	call   0xa7841bc7
  408039:	das    
  40803a:	and    BYTE PTR [ecx+0x25452584],dh
  408040:	mov    bl,0x4c
  408042:	in     al,0xb0
  408044:	pop    eax
  408045:	push   0x1e
  408047:	mov    dh,0xfa
  408049:	fs push esp
  40804b:	xor    esi,esi
  40804d:	xchg   edx,eax
  40804e:	sar    DWORD PTR [eax],1
  408050:	inc    edi
  408051:	or     ebx,DWORD PTR [esp+ecx*1-0x59ca369d]
  408058:	xchg   DWORD PTR [ebx+0x40],edi
  40805b:	mov    ds:0x75ebdb4e,al
  408060:	sub    eax,DWORD PTR [ebx+ebx*2-0x77]
  408064:	rcr    esp,cl
  408066:	in     al,dx
  408067:	fcomp  st(4)
  408069:	fsub   DWORD PTR [ecx+0x13]
  40806c:	(bad)  
  40806d:	or     al,0x1d
  40806f:	inc    eax
  408070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408071:	inc    esp
  408072:	retf   
  408073:	pusha  
  408074:	mov    bl,0x29
  408076:	fld    QWORD PTR [ebp-0x3c218e52]
  40807c:	mov    ebp,0x61c16a15
  408081:	cmp    al,0x16
  408083:	dec    ecx
  408084:	or     al,0x94
  408086:	mov    edx,0x7fe3cf71
  40808b:	ins    DWORD PTR es:[edi],dx
  40808c:	dec    ebp
  40808d:	cld    
  40808e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40808f:	and    bh,bh
  408091:	fist   WORD PTR [edx+eax*8-0x31]
  408095:	mov    edi,0xd1483d0a
  40809a:	jecxz  0x40804d
  40809c:	mov    ebx,0x8d4f3af
  4080a1:	loopne 0x40805d
  4080a3:	nop
  4080a4:	and    al,BYTE PTR [eax-0x3dc2ac36]
  4080aa:	out    0xab,al
  4080ac:	pop    eax
  4080ad:	lods   eax,DWORD PTR ds:[esi]
  4080ae:	mov    ebp,0x317c3049
  4080b3:	loopne 0x408124
  4080b5:	cmc    
  4080b6:	out    0x34,eax
  4080b8:	xor    ebp,DWORD PTR [edx-0x6a]
  4080bb:	sbb    cl,bl
  4080bd:	mov    edx,0x94430ed0
  4080c2:	nop
  4080c3:	push   edx
  4080c4:	cmp    eax,0xc3ec5baf
  4080c9:	dec    ebp
  4080ca:	loopne 0x40805f
  4080cc:	mov    ds:0xcbedc124,eax
  4080d1:	xor    bl,BYTE PTR [esi+eiz*4]
  4080d4:	out    dx,eax
  4080d5:	xor    eax,0xb7ab0e63
  4080da:	cwde   
  4080db:	(bad)  [eax+0x3b7ac5c1]
  4080e1:	leave  
  4080e2:	mov    bl,0x47
  4080e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080e5:	pop    ebp
  4080e6:	loopne 0x408151
  4080e8:	sbb    al,bl
  4080ea:	mov    esi,0xf6dc3f4a
  4080ef:	inc    esi
  4080f0:	ret    0x9092
  4080f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080f4:	lods   eax,DWORD PTR ds:[esi]
  4080f5:	inc    edi
  4080f6:	or     ecx,DWORD PTR [ebx+ebp*1-0x6d]
  4080fa:	push   cs
  4080fb:	lock cmp DWORD PTR [edx+0x58326417],esi
  408102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408103:	sub    DWORD PTR [ebx+0x20],eax
  408106:	sub    bl,ch
  408108:	mov    eax,0x8e4345a3
  40810d:	ret    
  40810e:	jns    0x408150
  408110:	xor    al,0xda
  408112:	xor    eax,0x74629294
  408117:	push   ds
  408118:	sbb    al,0x93
  40811a:	repnz pop edx
  40811c:	into   
  40811d:	loop   0x408132
  40811f:	(bad)  
  408120:	icebp  
  408121:	mov    ch,0xcb
  408123:	mov    ebx,0x9008570b
  408128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408129:	add    DWORD PTR [ebp+0x7d],esp
  40812c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40812d:	out    dx,eax
  40812e:	call   0xce40d426
  408133:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408134:	or     BYTE PTR [edi-0x27],ch
  408137:	push   ss
  408138:	in     eax,0x30
  40813a:	push   ecx
  40813b:	out    dx,al
  40813c:	(bad)  
  40813e:	or     cl,BYTE PTR [ebp-0x2567862]
  408144:	shl    DWORD PTR [edi],1
  408146:	inc    ebp
  408147:	je     0x4081a3
  408149:	in     eax,0xc8
  40814b:	gs mov ebp,0x3cc92b8d
  408151:	neg    BYTE PTR [ebp-0x18ee22f4]
  408157:	fdecstp 
  408159:	cmp    eax,0xbbeb1b0a
  40815e:	ss sub eax,0xaaf0b40b
  408164:	xchg   esi,eax
  408165:	sub    eax,0x356c8cdc
  40816a:	xor    al,0x5d
  40816c:	sub    dh,BYTE PTR [esi]
  40816e:	inc    esi
  40816f:	int3   
  408170:	or     eax,0x8b718c49
  408175:	or     al,0x89
  408177:	int    0xa0
  408179:	jo     0x40813c
  40817b:	lods   al,BYTE PTR ds:[esi]
  40817c:	pop    ds
  40817d:	dec    ecx
  40817e:	jne    0x4081b9
  408180:	out    dx,eax
  408181:	aaa    
  408182:	loope  0x408149
  408184:	jo     0x40811c
  408186:	or     al,0x37
  408188:	and    al,BYTE PTR [ebp+0x6e]
  40818b:	lahf   
  40818c:	xor    BYTE PTR [eax-0x1d],cl
  40818f:	pop    edi
  408190:	fbld   TBYTE PTR [ebp-0x6d]
  408193:	jmp    0x1f4f:0xce334da4
  40819a:	mov    eax,ds:0x3767c3a1
  40819f:	add    al,BYTE PTR [ebx]
  4081a1:	test   BYTE PTR [ecx],al
  4081a3:	mov    al,ds:0xb15757c
  4081a8:	xor    DWORD PTR [ebx+ecx*1-0x28],eax
  4081ac:	ins    BYTE PTR es:[edi],dx
  4081ad:	and    bl,al
  4081af:	lds    edi,FWORD PTR [edi+0x5a]
  4081b2:	xor    al,BYTE PTR [edi-0x3f5a330c]
  4081b8:	fwait
  4081b9:	xor    esp,esp
  4081bb:	xor    eax,DWORD PTR [ebx+0x3d4b1ee0]
  4081c1:	fisttp DWORD PTR [ebp+ebx*4-0x3e]
  4081c5:	test   eax,0x1d0d892a
  4081ca:	call   0x36a02c7c
  4081cf:	push   ss
  4081d0:	out    0xbb,eax
  4081d2:	ret    0xb8f3
  4081d5:	not    BYTE PTR [edi]
  4081d7:	and    dh,cl
  4081d9:	jno    0x4081a6
  4081db:	bound  edi,QWORD PTR [ebx]
  4081dd:	mov    al,ds:0x4aa72802
  4081e2:	iret   
  4081e3:	push   esp
  4081e4:	mov    edi,0xef85eb36
  4081e9:	inc    eax
  4081ea:	rol    ah,cl
  4081ec:	cmp    DWORD PTR [esi],esi
  4081ee:	ror    DWORD PTR ds:0x1df50217,cl
  4081f4:	sub    eax,DWORD PTR [edx-0x5885bc17]
  4081fa:	mov    al,0xa
  4081fc:	cld    
  4081fd:	cmp    eax,0xad43717b
  408202:	jmp    0x40818a
  408204:	rcr    BYTE PTR [ebx-0x51172138],0xb6
  40820b:	popa   
  40820c:	pop    esp
  40820d:	call   0x2b243fe5
  408212:	fnsave [ebx+0x5ee43121]
  408218:	stos   BYTE PTR es:[edi],al
  408219:	icebp  
  40821a:	mov    ds,esp
  40821c:	aas    
  40821d:	out    0x6b,al
  40821f:	mov    ecx,0xb232620a
  408224:	in     al,dx
  408225:	outs   dx,DWORD PTR ds:[esi]
  408226:	mov    bl,0xcb
  408228:	cmp    eax,edi
  40822a:	gs jno 0x408248
  40822d:	(bad)  
  40822e:	cmp    ebx,esp
  408230:	xor    al,0x2f
  408232:	dec    esp
  408233:	cmp    BYTE PTR [eax],dl
  408235:	lea    esi,[edx-0x228940a6]
  40823b:	fist   WORD PTR [ecx+0x76e525b3]
  408241:	xchg   esp,eax
  408242:	jl     0x4081ff
  408244:	ficomp WORD PTR [ebp+0x449898ad]
  40824a:	dec    eax
  40824b:	inc    esp
  40824c:	dec    esp
  40824d:	dec    esp
  40824e:	(bad)  
  40824f:	sti    
  408250:	pop    esp
  408251:	inc    eax
  408252:	dec    edx
  408253:	and    BYTE PTR [edi],bl
  408255:	bound  edx,QWORD PTR [edx+0xa8ab4ee]
  40825b:	pop    ecx
  40825c:	pop    ebp
  40825d:	shl    DWORD PTR [ecx-0x59d58302],cl
  408263:	xor    eax,0xe013c866
  408268:	popf   
  408269:	into   
  40826a:	scas   eax,DWORD PTR es:[edi]
  40826b:	sbb    BYTE PTR [ebp-0x31b955a7],bh
  408271:	leave  
  408272:	scas   al,BYTE PTR es:[edi]
  408273:	mov    WORD PTR [ebp+0x21],?
  408276:	call   0x19a7adce
  40827b:	push   ebp
  40827c:	xchg   ecx,eax
  40827d:	fwait
  40827e:	xchg   ebx,eax
  40827f:	cli    
  408280:	pushf  
  408281:	(bad)  
  408282:	fnstenv [esi]
  408284:	aad    0xd2
  408286:	cmp    bl,BYTE PTR [eax]
  408288:	jecxz  0x40827f
  40828a:	cmc    
  40828b:	cwde   
  40828c:	ror    eax,1
  40828e:	add    bl,BYTE PTR [eax-0x46]
  408291:	inc    esp
  408292:	cli    
  408293:	mov    dl,0xcc
  408295:	fwait
  408296:	mov    ecx,0x36536891
  40829b:	rcl    DWORD PTR [eax],1
  40829d:	cli    
  40829e:	mov    bh,BYTE PTR [ecx+0x2a]
  4082a1:	(bad)  
  4082a2:	loope  0x40825b
  4082a4:	sbb    al,0xe0
  4082a6:	adc    DWORD PTR [ebx+ebp*8],esp
  4082a9:	rol    DWORD PTR [eax-0x14804a85],cl
  4082af:	xor    BYTE PTR [ebp-0x7254662a],0xb0
  4082b6:	std    
  4082b7:	call   0xbd31bf8b
  4082bc:	ins    BYTE PTR es:[edi],dx
  4082bd:	push   esp
  4082be:	std    
  4082bf:	sbb    eax,DWORD PTR [ebp*1-0x48a98bcc]
  4082c6:	daa    
  4082c7:	scas   al,BYTE PTR es:[edi]
  4082c8:	iret   
  4082c9:	lea    esi,[esi+0x5d]
  4082cc:	mov    al,ds:0xff2b17d8
  4082d1:	pop    es
  4082d2:	add    edi,DWORD PTR [ecx+0x3e]
  4082d5:	jb     0x408339
  4082d7:	mov    cl,0x51
  4082d9:	cmp    cl,cl
  4082db:	add    eax,0xa2cb4f48
  4082e0:	stos   DWORD PTR es:[edi],eax
  4082e1:	adc    DWORD PTR [esi-0x71184991],edx
  4082e7:	fild   QWORD PTR [ecx+0x7f]
  4082ea:	clc    
  4082eb:	scas   al,BYTE PTR es:[edi]
  4082ec:	icebp  
  4082ed:	jmp    0x4082e8
  4082ef:	loope  0x4082af
  4082f1:	imul   eax,DWORD PTR [ebx+eax*8+0x24],0x57a36978
  4082f9:	mov    ch,0x4c
  4082fb:	fidiv  WORD PTR [ebx-0x19]
  4082fe:	call   0x5ef56a21
  408303:	and    ah,BYTE PTR [edx]
  408305:	mov    al,ds:0x2dd8080
  40830a:	mul    DWORD PTR [ebx]
  40830c:	aad    0xee
  40830e:	out    0x2a,al
  408310:	ss xchg ecx,eax
  408312:	and    ch,bl
  408314:	cmp    al,0xd2
  408316:	pop    ss
  408317:	pop    ds
  408318:	add    DWORD PTR [ebp+0x6f1be202],edx
  40831e:	xor    esp,DWORD PTR [eax+0x1b]
  408321:	jne    0x40835a
  408323:	and    DWORD PTR [ecx-0x2f4d97b2],edx
  408329:	clc    
  40832a:	jl     0x4083a9
  40832c:	cmp    BYTE PTR [ebx+ecx*8],0x20
  408330:	rcl    eax,cl
  408332:	cmp    al,0xe8
  408334:	pop    ecx
  408335:	loopne 0x4083a3
  408337:	jmp    0xa370:0x2acf48b5
  40833e:	sub    BYTE PTR [eax+0x7c],dh
  408341:	out    0x27,eax
  408343:	sub    eax,0xa948a91b
  408348:	mov    ebx,0xfdb1380f
  40834d:	sbb    DWORD PTR [esi+0x7994f032],ebp
  408353:	repnz dec ebx
  408355:	adc    al,0xac
  408357:	sbb    esi,DWORD PTR [edi]
  408359:	es stos BYTE PTR es:[edi],al
  40835b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40835c:	push   esi
  40835d:	scas   eax,DWORD PTR es:[edi]
  40835e:	jle    0x40830b
  408360:	sbb    DWORD PTR [ebp-0x1b],ebx
  408363:	dec    ecx
  408364:	ss pop ss
  408366:	cdq    
  408367:	pop    ss
  408368:	add    bl,BYTE PTR [ebx]
  40836a:	sub    esi,ebx
  40836c:	push   ebp
  40836d:	dec    esi
  40836e:	clc    
  40836f:	push   es
  408370:	sbb    esp,esp
  408372:	loop   0x4083c5
  408374:	push   esi
  408375:	stos   BYTE PTR es:[edi],al
  408376:	idiv   cl
  408378:	aaa    
  408379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40837a:	inc    edx
  40837b:	div    dl
  40837d:	mov    al,ds:0x204b2dde
  408382:	xchg   DWORD PTR [ebp+0x76],edi
  408385:	and    DWORD PTR [esi],edx
  408387:	out    0xf3,al
  408389:	push   esi
  40838a:	in     eax,0x13
  40838c:	push   ebp
  40838d:	mov    eax,0xfb603569
  408392:	mov    ebp,ss
  408394:	je     0x618de6c
  40839a:	or     eax,DWORD PTR [ebx+0x7de60f7a]
  4083a0:	fldenv [esi+0x32fb8683]
  4083a6:	push   ebp
  4083a7:	push   cs
  4083a8:	sbb    al,0xae
  4083aa:	jb     0x40833d
  4083ac:	adc    ebx,DWORD PTR [ecx]
  4083ae:	push   edx
  4083af:	inc    ecx
  4083b0:	(bad)  
  4083b1:	ins    DWORD PTR es:[edi],dx
  4083b2:	fisttp DWORD PTR ds:[eax+0x67]
  4083b6:	jns    0x40836a
  4083b8:	inc    eax
  4083b9:	pop    esi
  4083ba:	mov    ah,0xee
  4083bc:	mov    eax,ds:0xe6fd9b45
  4083c1:	ss pop es
  4083c3:	ficomp WORD PTR [edx]
  4083c5:	call   0x6673fe5b
  4083ca:	xchg   edi,eax
  4083cb:	daa    
  4083cc:	sub    ebp,ecx
  4083ce:	les    ecx,FWORD PTR [ebx]
  4083d0:	push   es
  4083d1:	push   0x20f87c7b
  4083d6:	and    ah,BYTE PTR [bp+si+0x1e04]
  4083db:	jae    0x4083f7
  4083dd:	mov    bh,bl
  4083df:	hlt    
  4083e0:	jle    0x4083ff
  4083e2:	xchg   ebx,eax
  4083e3:	gs pop es
  4083e5:	xor    BYTE PTR [edx+0x3b3811a6],0x46
  4083ec:	fldcw  WORD PTR [edi-0x7a70bc2f]
  4083f2:	das    
  4083f3:	sbb    eax,0x8be542ff
  4083f8:	sbb    DWORD PTR [ebp+0x1a325dd4],ecx
  4083fe:	ins    BYTE PTR es:[edi],dx
  4083ff:	(bad)  
  408400:	jnp    0x408436
  408402:	push   ebp
  408403:	int3   
  408404:	std    
  408405:	mov    BYTE PTR [eax-0x2a7cc424],bh
  40840b:	ret    0x4f95
  40840e:	iret   
  40840f:	lods   al,BYTE PTR ds:[esi]
  408410:	mov    bx,0xfb81
  408414:	scas   eax,DWORD PTR es:[edi]
  408415:	rol    dh,1
  408417:	mov    al,0x48
  408419:	int    0xe3
  40841b:	push   ecx
  40841c:	sub    BYTE PTR [eax-0x40006f1f],bh
  408422:	js     0x4083a5
  408424:	mov    eax,ds:0x3afde7a7
  408429:	mov    fs,WORD PTR [eax]
  40842b:	mov    eax,ds:0x6db4de10
  408430:	pop    ecx
  408431:	cmp    BYTE PTR [ebx+0x17],al
  408434:	mov    dl,0xb4
  408436:	ss adc ebx,edi
  408439:	xchg   ebx,eax
  40843a:	outs   dx,BYTE PTR ds:[esi]
  40843b:	ror    BYTE PTR [edx],0x39
  40843e:	xchg   esp,eax
  40843f:	lds    esp,FWORD PTR [ebp-0x34]
  408442:	jecxz  0x408445
  408444:	cmp    esp,ebx
  408446:	call   0x7fee:0x2059073
  40844d:	pop    ecx
  40844e:	rcr    BYTE PTR [ebp+0x2f],1
  408451:	xchg   esi,eax
  408452:	lods   al,BYTE PTR ds:[esi]
  408453:	cmp    BYTE PTR [edx+0x4b],al
  408456:	sub    dh,bl
  408458:	pop    edx
  408459:	cmp    ah,bl
  40845b:	mov    DWORD PTR [eax],eax
  40845d:	dec    eax
  40845e:	push   edi
  40845f:	fwait
  408460:	mov    eax,ds:0xcd0d6eb7
  408465:	or     bl,BYTE PTR [ebx+ebp*1+0x6c]
  408469:	loopne 0x408458
  40846b:	inc    edx
  40846c:	sub    bh,BYTE PTR [edx-0xa758496]
  408472:	stc    
  408473:	sub    BYTE PTR [ecx+0x4c],dl
  408476:	rcl    DWORD PTR [ebx-0x5707163f],1
  40847c:	std    
  40847d:	mov    edi,0x265b38d
  408482:	shl    DWORD PTR [ecx-0x2b1a7caa],0xef
  408489:	hlt    
  40848a:	cmp    DWORD PTR [edx-0x13],edi
  40848d:	imul   edi,DWORD PTR [edi-0x3d],0x26eda53f
  408494:	pop    esp
  408495:	mov    ebp,0x6e10a4ac
  40849a:	mov    ebp,esi
  40849c:	ficomp DWORD PTR [esi-0x567f6be0]
  4084a2:	test   esi,esp
  4084a4:	(bad)
  4084a8:	pop    ds
  4084a9:	fld    DWORD PTR [ecx-0x20450796]
  4084af:	lods   eax,DWORD PTR ds:[esi]
  4084b0:	and    al,0x25
  4084b2:	xchg   DWORD PTR [edi],edx
  4084b4:	in     al,dx
  4084b5:	gs jo  0x4084f0
  4084b8:	or     al,0x1f
  4084ba:	mov    dh,0x87
  4084bc:	jp     0x4084d5
  4084be:	(bad)  
  4084bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084c0:	pop    ebx
  4084c1:	mov    edi,0xe1e0796e
  4084c6:	cmp    edi,edx
  4084c8:	jne    0x408487
  4084ca:	imul   ecx,DWORD PTR [eax+eax*4],0x209cd559
  4084d1:	jae    0x4084a3
  4084d3:	loop   0x408476
  4084d5:	out    0x63,al
  4084d7:	or     ebx,DWORD PTR [edi]
  4084d9:	shl    DWORD PTR [edi],1
  4084db:	sub    al,0x37
  4084dd:	pop    es
  4084de:	repnz sub BYTE PTR [ebp+0xc24f03d],bh
  4084e5:	cs xchg ebx,eax
  4084e7:	repz pop eax
  4084e9:	mov    ah,0x6f
  4084eb:	sub    DWORD PTR [ebx-0x1],edi
  4084ee:	mov    eax,DWORD PTR [edi-0xdd98ae7]
  4084f4:	mov    eax,ds:0xe1b130
  4084f9:	xchg   edi,eax
  4084fa:	add    bh,BYTE PTR [ecx]
  4084fc:	mov    dh,0xb5
  4084fe:	sbb    BYTE PTR [edx-0x30461146],bh
  408504:	pop    esi
  408505:	pop    ecx
  408506:	jno    0x4084a1
  408508:	mov    bl,0xe3
  40850a:	adc    ch,BYTE PTR [esi-0x46]
  40850d:	mov    ah,0x27
  40850f:	add    dh,BYTE PTR [ebx]
  408511:	mov    dh,0x1c
  408513:	(bad)  
  408514:	jl     0x4084cc
  408516:	outs   dx,DWORD PTR ds:[esi]
  408517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408518:	push   eax
  408519:	jg     0x4084a6
  40851b:	jae    0x4084d1
  40851d:	lock bound edi,QWORD PTR [edi]
  408520:	(bad)  
  408521:	mov    ?,esp
  408523:	test   al,0x56
  408525:	inc    edi
  408526:	xchg   DWORD PTR ds:[eax-0x7a],ecx
  40852a:	icebp  
  40852b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40852c:	or     bl,BYTE PTR [ecx+0x3b0a8de]
  408532:	ja     0x408593
  408534:	cmc    
  408535:	push   esi
  408536:	ins    BYTE PTR es:[edi],dx
  408537:	addr16 (bad) 
  408539:	int3   
  40853a:	push   esi
  40853b:	stos   BYTE PTR es:[edi],al
  40853c:	and    esp,ebp
  40853e:	rol    DWORD PTR [ecx+0x23fff101],0x6
  408545:	aad    0x13
  408547:	mov    bl,0xf6
  408549:	sbb    esi,DWORD PTR fs:[edi+0x5c]
  40854d:	js     0x408503
  40854f:	jmp    0x15b0:0xba96554f
  408556:	xor    BYTE PTR [edx+eiz*2+0x3],cl
  40855a:	jbe    0x4085aa
  40855c:	cmp    dl,BYTE PTR [ecx-0x50cd7cd1]
  408562:	sub    DWORD PTR [ebx],ebp
  408564:	sbb    al,0x3b
  408566:	cmc    
  408567:	icebp  
  408568:	xchg   ecx,eax
  408569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40856a:	add    esi,DWORD PTR [ebx+0x12]
  40856d:	test   eax,0xaaf1a4a8
  408572:	dec    ebp
  408573:	xor    esp,DWORD PTR [esi+0x57]
  408576:	or     DWORD PTR [eax],ebp
  408578:	and    al,0x5
  40857a:	fsubrp st(1),st
  40857c:	cld    
  40857d:	and    BYTE PTR [eax+ebp*1],bl
  408580:	and    eax,0x6769b88c
  408585:	sub    esi,DWORD PTR [esi]
  408587:	sbb    edx,DWORD PTR [edi]
  408589:	dec    ebx
  40858a:	add    al,0xc3
  40858c:	shr    BYTE PTR [edi+0xf],0x62
  408590:	sub    edi,DWORD PTR gs:[eax]
  408593:	pop    eax
  408594:	xor    eax,0x4624c62
  408599:	sub    ch,bl
  40859b:	and    ebp,ebx
  40859d:	mov    bh,0x2f
  40859f:	call   0xb490:0xc86c22bb
  4085a6:	retf   0x1213
  4085a9:	xor    DWORD PTR [ecx+0x1],0xfffffff5
  4085ad:	and    DWORD PTR [ebp+0x23],eax
  4085b0:	xchg   DWORD PTR [edx-0x8be12ee],edx
  4085b6:	sbb    edx,0xffffffa8
  4085b9:	leave  
  4085ba:	push   ebx
  4085bb:	mov    dl,0xee
  4085bd:	test   al,0xdf
  4085bf:	inc    ebx
  4085c0:	ins    DWORD PTR es:[edi],dx
  4085c1:	inc    esi
  4085c2:	push   0x593767ed
  4085c7:	sbb    ch,BYTE PTR [edi+0x3f518eb0]
  4085cd:	iret   
  4085ce:	xor    dl,BYTE PTR [ebx+edx*1]
  4085d1:	sub    BYTE PTR [edi-0x6d],dh
  4085d4:	test   BYTE PTR [ecx-0x7a],bh
  4085d7:	xchg   BYTE PTR [esi+0x3a5a17dc],dl
  4085dd:	cmp    DWORD PTR [ecx+0x28],eax
  4085e0:	lods   al,BYTE PTR ds:[esi]
  4085e1:	in     eax,dx
  4085e2:	mov    bh,0x94
  4085e4:	fsubr  QWORD PTR [esi+0x5]
  4085e7:	mov    BYTE PTR [edi+0x1c],ah
  4085ea:	or     DWORD PTR [ecx+0x5c926a5e],esi
  4085f0:	dec    ebp
  4085f1:	xchg   ebx,eax
  4085f2:	pop    ss
  4085f3:	(bad)  
  4085f4:	mov    ebx,0x2cdc002d
  4085f9:	xchg   edx,eax
  4085fa:	(bad)  
  4085fc:	add    DWORD PTR [esi-0x638cf11],eax
  408602:	repz cwde 
  408604:	fucomp st(3)
  408606:	pop    ecx
  408607:	fidivr DWORD PTR [esi]
  408609:	inc    edi
  40860a:	jne    0x4085e4
  40860c:	xlat   BYTE PTR ds:[ebx]
  40860d:	imul   ebp,DWORD PTR [edx+0x66],0x75
  408611:	leave  
  408612:	add    eax,0x10834396
  408617:	xchg   BYTE PTR [edx-0x5f],ch
  40861a:	xor    edi,DWORD PTR [eax+edi*2+0x29dc6bd6]
  408621:	retf   0x2c2
  408624:	xor    DWORD PTR [edx+0x6eea693e],ebp
  40862a:	jmp    0xe6a4:0x9441a56c
  408631:	mov    ?,WORD PTR [edi-0xebdf379]
  408637:	pop    edi
  408638:	fwait
  408639:	aaa    
  40863a:	jp     0x40862b
  40863c:	or     ebx,DWORD PTR [ecx+0x43]
  40863f:	dec    ebp
  408640:	(bad)  
  408641:	lods   eax,DWORD PTR ds:[esi]
  408642:	dec    DWORD PTR [edx]
  408644:	stc    
  408645:	pop    eax
  408646:	adc    edx,ebx
  408648:	mov    esp,DWORD PTR [edi-0x1a]
  40864b:	xchg   edx,eax
  40864c:	cmc    
  40864d:	icebp  
  40864e:	push   ecx
  40864f:	mov    esp,0x3e8f3302
  408654:	mov    eax,0xb411924
  408659:	add    eax,0x9156512e
  40865e:	(bad)  
  40865f:	push   ebx
  408660:	and    ch,BYTE PTR [edi+0x2bd6c863]
  408666:	sar    DWORD PTR [ebx-0x7d9d720c],0x70
  40866d:	(bad)  
  40866e:	fstp   QWORD PTR [edi-0x4a]
  408671:	adc    bh,BYTE PTR [ecx]
  408673:	ins    BYTE PTR es:[edi],dx
  408674:	add    esi,DWORD PTR [edi-0x796bb8df]
  40867a:	sbb    dh,ah
  40867c:	adc    dh,BYTE PTR [ebp+0x2f]
  40867f:	jmp    0x408627
  408681:	cmp    esp,DWORD PTR ds:0xc4235d74
  408687:	push   ebp
  408688:	test   al,0x32
  40868a:	(bad)  
  40868c:	xor    eax,0xa699b4de
  408691:	loop   0x408684
  408693:	test   BYTE PTR [esi],bl
  408695:	imul   edi,DWORD PTR [ebp+eiz*8+0x1b084bc1],0x6
  40869d:	xchg   ebx,eax
  40869e:	imul   ebp,DWORD PTR [edx],0x5f
  4086a1:	inc    eax
  4086a2:	pop    ss
  4086a3:	mov    ecx,0x608cb8d5
  4086a8:	(bad)  
  4086a9:	ror    ah,0xa7
  4086ac:	das    
  4086ad:	push   edi
  4086ae:	xchg   ecx,eax
  4086af:	in     al,0x99
  4086b1:	jo     0x40863d
  4086b3:	inc    ebx
  4086b4:	sub    bh,BYTE PTR [eax]
  4086b6:	cmc    
  4086b7:	mov    cl,0xd3
  4086b9:	mov    esp,?
  4086bb:	lods   al,BYTE PTR ds:[esi]
  4086bc:	xchg   DWORD PTR [ecx+0x615a38e0],edi
  4086c2:	cld    
  4086c3:	daa    
  4086c4:	into   
  4086c5:	(bad)  
  4086c6:	sub    BYTE PTR [edi],ch
  4086c8:	fcomp  DWORD PTR [eax+eax*8]
  4086cb:	retf   
  4086cc:	out    dx,eax
  4086cd:	sub    DWORD PTR [edx],ecx
  4086cf:	jmp    0xaf37191b
  4086d4:	adc    al,0x34
  4086d6:	mov    bl,0x83
  4086d8:	pop    ebx
  4086d9:	xor    esp,DWORD PTR [esp+edi*2-0x3fd10bd4]
  4086e0:	inc    ebp
  4086e1:	repnz (bad) 
  4086e3:	ja     0x408691
  4086e5:	into   
  4086e6:	rcr    dl,1
  4086e8:	adc    DWORD PTR [eax+0x2b],edi
  4086eb:	ja     0x408753
  4086ed:	xchg   DWORD PTR [ebx],edi
  4086ef:	pusha  
  4086f0:	mov    ds:0xc547b9fb,al
  4086f5:	pop    esi
  4086f6:	test   al,0x24
  4086f8:	xchg   edi,eax
  4086f9:	sub    ebp,ebx
  4086fb:	shr    dh,1
  4086fd:	cmp    al,0x15
  4086ff:	push   ds
  408700:	mov    ds:0xce53d90a,al
  408705:	adc    BYTE PTR [ebp+ebx*1-0x43],cl
  408709:	and    edi,0xa5c51b6a
  40870f:	loop   0x4086bd
  408711:	jo     0x4086da
  408713:	(bad)  
  408714:	fisttp DWORD PTR [ebx]
  408716:	sub    dh,BYTE PTR [eax+0xf2c8efe]
  40871c:	pop    ecx
  40871d:	daa    
  40871e:	loop   0x408782
  408720:	hlt    
  408721:	jmp    FWORD PTR [edi-0x56]
  408724:	pop    ebx
  408725:	clc    
  408726:	adc    edi,DWORD PTR [ebx]
  408728:	cwde   
  408729:	push   cs
  40872a:	out    dx,eax
  40872b:	sub    eax,0xd31af5dd
  408730:	sahf   
  408731:	or     al,0xff
  408733:	add    esi,DWORD PTR gs:[esi]
  408736:	push   ds
  408737:	push   esi
  408738:	test   eax,0x127cea28
  40873d:	mov    esp,DWORD PTR [ebp-0x7a]
  408740:	inc    edx
  408741:	or     ebp,DWORD PTR ds:0xd6f82358
  408747:	cdq    
  408748:	jp     0x4086f6
  40874a:	imul   edi,DWORD PTR [edi],0x4f
  40874d:	jae    0x4087b0
  40874f:	mov    ah,0x69
  408751:	push   edi
  408752:	pop    ebx
  408753:	les    esi,FWORD PTR [eax]
  408755:	lds    ebx,FWORD PTR [ecx+edi*4]
  408758:	(bad)  
  408759:	imul   BYTE PTR [ecx]
  40875b:	nop
  40875c:	sub    al,0x7b
  40875e:	ja     0x40871d
  408760:	sbb    ah,BYTE PTR [ebx+0x6e]
  408763:	adc    al,0x27
  408765:	xor    DWORD PTR [edi],ebp
  408767:	je     0x408771
  408769:	sbb    al,0x59
  40876b:	repz adc BYTE PTR [edx+0x34],0x6e
  408770:	dec    ecx
  408771:	bnd jmp 0x40871f
  408774:	call   0x291a932b
  408779:	jno    0x40879d
  40877b:	scas   al,BYTE PTR es:[edi]
  40877c:	scas   eax,DWORD PTR es:[edi]
  40877d:	push   ebx
  40877e:	loope  0x408762
  408780:	jb     0x408707
  408782:	sub    DWORD PTR [edx-0xce41bf4],esi
  408788:	mov    es,edx
  40878a:	mov    ebp,0x2caeea0e
  40878f:	push   ecx
  408790:	in     al,dx
  408791:	mov    ecx,0x8ec645a0
  408796:	stos   DWORD PTR es:[edi],eax
  408797:	aas    
  408798:	xchg   edi,eax
  408799:	outs   dx,DWORD PTR ds:[esi]
  40879a:	add    BYTE PTR [ebx+0x45],0x25
  40879e:	cdq    
  40879f:	pop    ss
  4087a0:	add    ebp,ebx
  4087a2:	gs (bad) 
  4087a4:	loop   0x40880f
  4087a6:	fwait
  4087a7:	aas    
  4087a8:	sub    dl,al
  4087aa:	ins    DWORD PTR es:[edi],dx
  4087ab:	adc    ecx,0x39
  4087ae:	sub    eax,0x44f16dc3
  4087b3:	fs cmp ebx,esp
  4087b6:	scas   al,BYTE PTR es:[edi]
  4087b7:	xlat   BYTE PTR ds:[ebx]
  4087b8:	scas   eax,DWORD PTR es:[edi]
  4087b9:	mov    edx,0xc23943cd
  4087be:	adc    BYTE PTR [edi],0x95
  4087c1:	or     DWORD PTR [ebx-0x3c],eax
  4087c4:	aaa    
  4087c5:	test   eax,0xd9265b27
  4087ca:	in     eax,dx
  4087cb:	jecxz  0x408761
  4087cd:	sti    
  4087ce:	cmp    al,0x9c
  4087d0:	sub    esi,eax
  4087d2:	jmp    DWORD PTR [edi+0x1438262a]
  4087d8:	fs adc eax,0x3f276783
  4087de:	in     eax,0xcf
  4087e0:	es pop ds
  4087e2:	je     0x408835
  4087e4:	inc    ebp
  4087e5:	jbe    0x4087c7
  4087e7:	push   ebp
  4087e8:	scas   eax,DWORD PTR es:[edi]
  4087e9:	fwait
  4087ea:	jmp    0x8953bb44
  4087ef:	jns    0x4087db
  4087f1:	js     0x408800
  4087f3:	xor    al,0xad
  4087f5:	add    BYTE PTR [ecx+0x7e171204],0x32
  4087fc:	mov    dh,0xa6
  4087fe:	inc    edx
  4087ff:	pushf  
  408800:	mov    eax,0x1da383d8
  408805:	mov    ds:0xddf0152d,al
  40880a:	adc    BYTE PTR [eax+0x3cc0b91],bh
  408810:	pop    ebp
  408811:	sub    DWORD PTR [ecx+0x54],esi
  408814:	mov    al,0x6a
  408816:	xchg   ebx,ecx
  408818:	mov    edx,DWORD PTR [eax-0x78]
  40881b:	mov    DWORD PTR [edi],edi
  40881d:	push   es
  40881e:	fsub   st(3),st
  408820:	leave  
  408821:	cmp    ah,BYTE PTR [ecx-0x70]
  408824:	sahf   
  408825:	scas   al,BYTE PTR es:[edi]
  408826:	daa    
  408827:	rcl    DWORD PTR [ebx-0x41327e83],cl
  40882d:	out    dx,al
  40882e:	adc    ecx,DWORD PTR [edx]
  408830:	dec    eax
  408831:	push   cs
  408832:	enter  0x6dbf,0x95
  408836:	dec    esp
  408837:	lea    edi,[eax]
  408839:	scas   al,BYTE PTR es:[edi]
  40883a:	dec    esi
  40883b:	sub    eax,0x86398070
  408840:	add    DWORD PTR [ebx-0x4b],ebx
  408843:	loope  0x408888
  408845:	cwde   
  408846:	fld    TBYTE PTR [ecx]
  408848:	mov    ?,esp
  40884a:	jp     0x4088a9
  40884c:	xchg   ebx,eax
  40884d:	in     eax,dx
  40884e:	jmp    0x4087fc
  408850:	or     al,0x7b
  408852:	into   
  408853:	call   0x8da8:0x997ded0b
  40885a:	ret    
  40885b:	std    
  40885c:	popf   
  40885d:	dec    esi
  40885e:	(bad)  
  40885f:	loop   0x40882d
  408861:	or     al,0x19
  408863:	dec    ebp
  408864:	ret    0xa40
  408867:	mov    edx,0x63d11d62
  40886c:	outs   dx,BYTE PTR ds:[esi]
  40886d:	cmc    
  40886e:	dec    ecx
  40886f:	push   cs
  408870:	mov    esi,0x404f6a9d
  408875:	imul   esi,eax,0xfffffff0
  408878:	fsubr  DWORD PTR [ebx-0x41078623]
  40887e:	inc    esi
  40887f:	ja     0x408837
  408881:	je     0x40882d
  408883:	inc    ecx
  408884:	push   cs
  408885:	xchg   esi,ecx
  408887:	fsub   st(0),st
  408889:	in     al,0xee
  40888b:	imul   edi,DWORD PTR [ebx-0x13],0xffffffbb
  40888f:	call   0xa08b:0x18119afe
  408896:	aam    0x5a
  408898:	push   ebp
  408899:	stos   DWORD PTR es:[edi],eax
  40889a:	nop
  40889b:	retf   0xdc1f
  40889e:	or     eax,0x9ee3f1bf
  4088a3:	jbe    0x40886b
  4088a5:	push   edx
  4088a6:	sub    al,0x7f
  4088a8:	test   BYTE PTR [eax-0x254b3b78],bl
  4088ae:	ja     0x408860
  4088b0:	push   ecx
  4088b1:	cwde   
  4088b2:	icebp  
  4088b3:	push   sp
  4088b5:	push   0xfe0c2a64
  4088ba:	or     ebp,esp
  4088bc:	mov    edx,0x6728d8d9
  4088c1:	mov    eax,0x57f35100
  4088c6:	sar    ebx,cl
  4088c8:	popf   
  4088c9:	popa   
  4088ca:	sbb    al,cl
  4088cc:	sbb    BYTE PTR [ecx+0x26],al
  4088cf:	(bad)  
  4088d0:	aas    
  4088d1:	ja     0x4088ea
  4088d3:	xchg   DWORD PTR [ebp-0x1722f131],ebp
  4088d9:	sub    ah,dl
  4088db:	sar    DWORD PTR [bx+di-0x41f6],0x34
  4088e1:	xchg   esi,eax
  4088e2:	into   
  4088e3:	jl     0x408923
  4088e5:	aad    0xf2
  4088e7:	push   esp
  4088e8:	mov    esp,0xa980869d
  4088ed:	push   edi
  4088ee:	in     al,0xdd
  4088f0:	mov    DWORD PTR [ecx],edx
  4088f2:	jno    0x408929
  4088f4:	and    BYTE PTR [esi-0x3f],bl
  4088f7:	push   es
  4088f8:	ja     0x40887b
  4088fa:	sub    BYTE PTR [edi-0x35d3edf0],0xea
  408901:	cmp    DWORD PTR [eax],ebx
  408903:	push   eax
  408904:	(bad)  
  408905:	nop
  408906:	stos   DWORD PTR es:[edi],eax
  408907:	and    DWORD PTR ds:[esi],0x2e1f238
  40890e:	jnp    0x4088a8
  408910:	push   es
  408911:	sub    esi,DWORD PTR [edx-0x1556677e]
  408917:	jl     0x408968
  408919:	mov    ecx,0xbde20af4
  40891e:	mov    eax,?
  408920:	sub    BYTE PTR [ecx],0xe
  408923:	mov    al,ds:0xc9aeda91
  408928:	mov    eax,0xa5a26e15
  40892d:	imul   DWORD PTR [eax]
  40892f:	push   ebx
  408930:	cmp    esp,esi
  408932:	sub    cl,BYTE PTR [eax]
  408934:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408935:	fist   DWORD PTR [edx]
  408937:	out    dx,al
  408938:	mov    dl,0xe7
  40893a:	popf   
  40893b:	push   ecx
  40893c:	shr    BYTE PTR [edi+0x69],0xc4
  408940:	xchg   ecx,eax
  408941:	xchg   esp,eax
  408942:	jp     0x408912
  408944:	push   ebx
  408945:	mov    ebx,0xe5835821
  40894a:	shl    BYTE PTR [ecx+0x2b647320],1
  408950:	(bad)  
  408951:	ins    DWORD PTR es:[edi],dx
  408952:	pop    edi
  408953:	or     ecx,edi
  408955:	push   edi
  408956:	mov    dh,0xfd
  408958:	and    BYTE PTR [ecx],cl
  40895a:	std    
  40895b:	shl    BYTE PTR [ebp-0x51],1
  40895e:	sub    eax,0x3e0218d8
  408963:	sub    eax,0xf09dd9d2
  408968:	mov    edi,0x49a4113d
  40896d:	jb     0x4088fd
  40896f:	std    
  408970:	cs js  0x40892e
  408973:	mov    al,0xeb
  408975:	out    0xcc,eax
  408977:	test   bl,dh
  408979:	add    ah,BYTE PTR [ecx-0x1a1ab57b]
  40897f:	and    al,0xfe
  408981:	sar    BYTE PTR [ebx],1
  408983:	sar    DWORD PTR [edi+0x13],0x40
  408987:	mov    cl,0x66
  408989:	out    0x9,eax
  40898b:	std    
  40898c:	test   al,0xc6
  40898e:	or     ecx,esi
  408990:	sti    
  408991:	xchg   ch,dh
  408993:	sbb    ch,BYTE PTR [esi-0x112fd3c7]
  408999:	mov    al,ds:0x9cb530ba
  40899e:	sbb    al,0x82
  4089a0:	and    edx,edi
  4089a2:	(bad)  
  4089a3:	loopne 0x4089ca
  4089a5:	inc    edx
  4089a6:	mov    esp,ds
  4089a8:	dec    ecx
  4089a9:	push   ds
  4089aa:	les    edi,FWORD PTR [edi-0x2]
  4089ad:	sbb    al,0xb5
  4089b0:	xchg   esi,ecx
  4089b2:	lahf   
  4089b3:	hlt    
  4089b4:	div    BYTE PTR fs:[edi+edi*2+0x5f7eef10]
  4089bc:	lods   al,BYTE PTR ds:[esi]
  4089bd:	stos   BYTE PTR es:[edi],al
  4089be:	xchg   edx,eax
  4089bf:	and    esi,DWORD PTR [ebx-0x6a]
  4089c2:	cli    
  4089c3:	mov    ds:0x5a9ef852,al
  4089c8:	xor    BYTE PTR [edx+0x5],cl
  4089cb:	bound  edx,QWORD PTR [ecx]
  4089cd:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4089cf:	mov    al,0xce
  4089d1:	sbb    BYTE PTR [eax],al
  4089d3:	aaa    
  4089d4:	sar    BYTE PTR [esi+eiz*4],1
  4089d7:	cwde   
  4089d8:	push   esp
  4089da:	inc    edi
  4089db:	divps  xmm4,xmm3
  4089de:	inc    ebp
  4089df:	rol    DWORD PTR [eax-0x9],0x5e
  4089e3:	sbb    al,0xb7
  4089e5:	std    
  4089e6:	jmp    0x408a12
  4089e8:	mov    BYTE PTR [eax+0x53],dl
  4089eb:	ja     0x408a18
  4089ed:	aad    0x77
  4089ef:	sbb    DWORD PTR [esi+0xf],esi
  4089f2:	mov    gs,WORD PTR [edi+0x13]
  4089f5:	xor    ah,ah
  4089f7:	scas   eax,DWORD PTR es:[edi]
  4089f8:	and    DWORD PTR [ebp+edx*2-0xb0fa7ac],esp
  4089ff:	dec    ecx
  408a00:	je     0x408a1e
  408a02:	inc    edx
  408a03:	push   cs
  408a04:	add    dh,BYTE PTR [edi]
  408a06:	test   DWORD PTR [esi+0x37],edx
  408a09:	out    0x21,eax
  408a0b:	popf   
  408a0c:	test   eax,0x339479d6
  408a11:	loopne 0x408a01
  408a13:	scas   eax,DWORD PTR es:[edi]
  408a14:	and    al,0xaf
  408a16:	int3   
  408a17:	push   cs
  408a18:	sahf   
  408a19:	mov    al,ds:0x9e9deb53
  408a1e:	(bad)  
  408a1f:	ins    DWORD PTR es:[edi],dx
  408a20:	mov    edi,0x47fe50e0
  408a25:	adc    ebx,DWORD PTR [ebp+0x17524344]
  408a2b:	fistp  DWORD PTR ss:[eax+0x50af474e]
  408a32:	sub    BYTE PTR [eax+edi*4-0x4e],dl
  408a36:	repz test DWORD PTR [eax+eiz*8+0x7b8302c4],eax
  408a3e:	adc    DWORD PTR [ebx],eax
  408a40:	sub    eax,0xd2a25068
  408a45:	stc    
  408a46:	test   dl,0xbf
  408a49:	lea    ebx,[edi-0x6ff1929d]
  408a4f:	push   ds
  408a50:	add    ah,al
  408a52:	mov    ds:0xada30fa0,al
  408a57:	fstp   TBYTE PTR [eax+0x51]
  408a5a:	popa   
  408a5b:	or     DWORD PTR [eax+0x26ed51c7],ebp
  408a61:	scas   eax,DWORD PTR es:[edi]
  408a62:	dec    eax
  408a63:	add    BYTE PTR [edx],bl
  408a65:	daa    
  408a66:	ja     0x408aab
  408a68:	cmp    DWORD PTR [edx+0x64],0x5a3e0295
  408a6f:	fwait
  408a70:	das    
  408a71:	sar    ebx,1
  408a73:	inc    eax
  408a74:	mov    WORD PTR [ebp-0x3d],?
  408a77:	pop    esi
  408a78:	int    0x18
  408a7a:	fidiv  DWORD PTR es:[ecx-0x4e]
  408a7e:	(bad)  
  408a7f:	sub    ebp,ecx
  408a81:	jnp    0x408ac8
  408a83:	dec    esi
  408a84:	sub    BYTE PTR [eax],bh
  408a86:	jb     0x408ada
  408a88:	xor    al,0x75
  408a8a:	iret   
  408a8b:	and    al,0x79
  408a8d:	adc    al,0x80
  408a90:	inc    esi
  408a91:	push   esp
  408a92:	dec    esi
  408a93:	sub    DWORD PTR [edx+ecx*1],esp
  408a96:	and    eax,esi
  408a98:	popf   
  408a99:	ins    BYTE PTR es:[edi],dx
  408a9a:	(bad)  
  408a9b:	repnz out 0x37,al
  408a9e:	lock mov bl,cl
  408aa1:	ret    
  408aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408aa3:	outs   dx,BYTE PTR ds:[esi]
  408aa4:	dec    eax
  408aa5:	into   
  408aa6:	out    0x52,al
  408aa8:	fstp   DWORD PTR ds:0x66f7acd6
  408aae:	xchg   edx,eax
  408aaf:	dec    edx
  408ab0:	pop    edi
  408ab1:	inc    edx
  408ab2:	jmp    FWORD PTR [edi]
  408ab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ab5:	addr16 nop
  408ab7:	mov    ah,0xbf
  408ab9:	or     ebx,DWORD PTR [eax]
  408abb:	fstp   DWORD PTR [edi-0x346fb996]
  408ac1:	iret   
  408ac2:	(bad)  
  408ac3:	jno    0x408acd
  408ac5:	ins    DWORD PTR es:[edi],dx
  408ac6:	add    ebp,DWORD PTR [edi-0x7f]
  408ac9:	(bad)  
  408aca:	not    BYTE PTR [edx+esi*1+0x8f92a0]
  408ad1:	sub    eax,0x19d931b1
  408ad6:	and    esp,edi
  408ad8:	mov    esp,0x5b780d50
  408add:	test   eax,0xfa2b5e6f
  408ae2:	xor    BYTE PTR [esi],al
  408ae4:	pop    ebx
  408ae5:	movq   mm0,mm7
  408ae8:	push   cs
  408ae9:	test   al,0x85
  408aeb:	scas   al,BYTE PTR es:[edi]
  408aec:	xor    edi,DWORD PTR ds:0x1e94a6bf
  408af2:	dec    ebp
  408af3:	std    
  408af4:	not    BYTE PTR [edi+0x60a03f1d]
  408afa:	cmp    dl,BYTE PTR [ebp-0x30093b95]
  408b00:	inc    ebx
  408b01:	push   ss
  408b02:	push   ss
  408b03:	mov    ds,WORD PTR [edi]
  408b05:	scas   eax,DWORD PTR es:[edi]
  408b06:	fidiv  WORD PTR [edx]
  408b08:	shl    DWORD PTR [ecx+0x11],1
  408b0b:	mov    ah,0x12
  408b0d:	scas   eax,DWORD PTR es:[edi]
  408b0e:	mov    WORD PTR [esp+esi*1+0x5c],ss
  408b12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b13:	std    
  408b14:	jnp    0x408b11
  408b16:	mov    edi,0xdbc9c523
  408b1b:	jbe    0x408b8d
  408b1d:	int    0x4f
  408b1f:	and    bl,al
  408b21:	outs   dx,DWORD PTR ds:[esi]
  408b22:	call   0xa44b:0xefafc09
  408b29:	in     eax,dx
  408b2a:	pushf  
  408b2b:	jno    0x408ab9
  408b2d:	push   cs
  408b2e:	(bad)  
  408b2f:	sbb    ebp,ebx
  408b31:	or     eax,0x8b04564c
  408b36:	je     0x408b24
  408b38:	outs   dx,DWORD PTR ds:[esi]
  408b39:	rol    DWORD PTR [edx-0x6c],cl
  408b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b3d:	jp     0x408b62
  408b3f:	stos   BYTE PTR es:[edi],al
  408b40:	push   ebx
  408b41:	lahf   
  408b42:	jecxz  0x408b27
  408b44:	imul   eax,DWORD PTR [esp+edi*4-0xf6bfe3],0x3362b9f9
  408b4f:	mov    bh,0xfd
  408b51:	jp     0x408b12
  408b53:	xchg   BYTE PTR [esi],cl
  408b55:	ret    0xda88
  408b58:	dec    ebp
  408b59:	sub    eax,0xbda6b837
  408b5e:	xor    ebx,esi
  408b60:	daa    
  408b61:	xchg   ecx,eax
  408b62:	js     0x408b32
  408b64:	(bad)  
  408b65:	push   cs
  408b66:	jne    0x408b7f
  408b68:	adc    esi,DWORD PTR [esi-0x61]
  408b6b:	push   esp
  408b6c:	cmp    esp,DWORD PTR [edi]
  408b6e:	int    0x9
  408b70:	pop    ecx
  408b71:	in     eax,0x49
  408b73:	fisubr WORD PTR [esi+0xc]
  408b76:	mov    bl,0xf4
  408b78:	mov    dl,0xdd
  408b7a:	cmc    
  408b7b:	jb     0x408b4f
  408b7d:	jmp    FWORD PTR [edi]
  408b7f:	imul   ebx,DWORD PTR [eax+0x26],0xf2a4658c
  408b86:	rol    DWORD PTR [esp+edx*1+0x3ae8679a],0x76
  408b8e:	jns    0x408b9a
  408b90:	jp     0x47ed7a11
  408b96:	add    BYTE PTR [ecx],dh
  408b98:	mov    edx,DWORD PTR [ecx]
  408b9a:	es popf 
  408b9c:	mov    edx,0x9596540e
  408ba1:	mov    al,ss:0xa4767bc1
  408ba7:	xor    eax,0x853dff0d
  408bac:	pop    ecx
  408bad:	sbb    eax,0xef5533c6
  408bb2:	add    ebp,ebx
  408bb4:	jmp    0x1cc1:0xe73b6bc5
  408bbb:	fimul  DWORD PTR [ebp+eiz*2-0x37]
  408bbf:	scas   eax,DWORD PTR es:[edi]
  408bc0:	jns    0x408bec
  408bc2:	rcl    edx,cl
  408bc4:	pop    ebp
  408bc5:	popf   
  408bc6:	cmp    eax,0x28dd6a7f
  408bcb:	aad    0x5d
  408bcd:	mov    ds:0xb034865e,al
  408bd2:	cmp    edi,DWORD PTR [esi+0x1b]
  408bd5:	jae    0x408bd7
  408bd7:	xor    al,0xc9
  408bd9:	mov    bh,0xbd
  408bdb:	lds    esi,FWORD PTR [ebx+0x4d]
  408bde:	fstp   DWORD PTR [ecx]
  408be0:	sahf   
  408be1:	push   ebx
  408be2:	mov    dl,0x5f
  408be4:	enter  0x7602,0xb8
  408be8:	js     0x408b84
  408bea:	leave  
  408beb:	retf   
  408bec:	ficomp DWORD PTR [esi+0x2821a4b7]
  408bf2:	data16 xlat BYTE PTR ds:[ebx]
  408bf4:	sbb    BYTE PTR [edi-0x6bd36b09],ah
  408bfa:	mov    ebp,0x4b5e7d34
  408bff:	xchg   DWORD PTR [edx+0x1f],edx
  408c02:	cmp    eax,0xd6ab125
  408c07:	les    ebp,FWORD PTR [edi+0x410846b6]
  408c0d:	aas    
  408c0e:	jecxz  0x408bd8
  408c10:	hlt    
  408c11:	sub    eax,esp
  408c13:	xor    al,0x24
  408c15:	xor    ch,BYTE PTR [edx-0x4e0a2fce]
  408c1b:	clc    
  408c1c:	adc    eax,0xc3d61c2a
  408c21:	add    al,0x79
  408c23:	push   0xfffffff0
  408c25:	enter  0xc074,0x34
  408c29:	ror    BYTE PTR [esi],1
  408c2b:	popf   
  408c2c:	icebp  
  408c2d:	add    eax,0x42f6d973
  408c32:	imul   DWORD PTR [eax-0x24]
  408c35:	mov    al,ds:0x81850299
  408c3a:	sub    eax,eax
  408c3c:	stos   DWORD PTR es:[edi],eax
  408c3d:	mov    edi,ebp
  408c3f:	jmp    0xb001:0xbe6f53f3
  408c46:	enter  0x5096,0x16
  408c4a:	test   al,0x8a
  408c4c:	jo     0x408c52
  408c4e:	and    edi,ebx
  408c50:	or     bh,BYTE PTR [eax]
  408c52:	mov    ebx,0x75f41ed3
  408c57:	or     cl,BYTE PTR [eax-0x4e]
  408c5a:	pop    eax
  408c5b:	xlat   BYTE PTR ds:[ebx]
  408c5c:	jnp    0x408caf
  408c5e:	adc    esp,DWORD PTR [ebp+ecx*1-0x44]
  408c62:	outs   dx,DWORD PTR ds:[esi]
  408c63:	sub    cl,dl
  408c65:	leave  
  408c66:	xchg   esi,eax
  408c67:	mov    BYTE PTR [esi+ebx*2],ah
  408c6a:	imul   eax,DWORD PTR [edx+ebp*1-0x2e],0xe
  408c6f:	out    0xde,al
  408c71:	dec    eax
  408c72:	sbb    DWORD PTR ds:0x4b34d1dc,esp
  408c78:	inc    esp
  408c79:	xchg   ecx,eax
  408c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c7b:	or     ch,cl
  408c7d:	(bad)  
  408c7e:	shl    ah,0xe
  408c81:	or     ecx,DWORD PTR [ebp-0x11bf6b59]
  408c87:	jo     0x408c4d
  408c89:	in     eax,0xb1
  408c8b:	je     0x408cb6
  408c8d:	xchg   esp,eax
  408c8e:	int    0xd2
  408c90:	in     al,dx
  408c91:	jbe    0x408cda
  408c93:	pusha  
  408c94:	xchg   esi,eax
  408c95:	dec    edx
  408c96:	cmp    ch,bh
  408c98:	jle    0x408cc4
  408c9a:	dec    ecx
  408c9b:	xchg   ch,dl
  408c9d:	fs popf 
  408c9f:	in     eax,dx
  408ca0:	sbb    eax,0x458e3232
  408ca5:	jno    0x408c99
  408ca7:	xor    esi,edx
  408ca9:	test   BYTE PTR [edi-0x4b193582],0x1f
  408cb0:	das    
  408cb1:	hlt    
  408cb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cb3:	outs   dx,DWORD PTR ds:[esi]
  408cb4:	mov    bh,0x71
  408cb6:	sti    
  408cb7:	jmp    edx
  408cb9:	jno    0x408c48
  408cbb:	test   DWORD PTR [ebx+ebp*2-0x73fb4afd],ebx
  408cc2:	shl    BYTE PTR [ecx-0xc],cl
  408cc5:	nop
  408cc6:	test   DWORD PTR [esi-0x61],eax
  408cc9:	mov    ah,0x3d
  408ccb:	fwait
  408ccc:	mov    bh,dl
  408cce:	and    eax,0x5d05a8ba
  408cd3:	pop    edi
  408cd4:	sub    cl,BYTE PTR [edi]
  408cd6:	inc    ecx
  408cd7:	ins    DWORD PTR es:[edi],dx
  408cd8:	adc    dl,dl
  408cda:	jae    0x408c6c
  408cdc:	mov    al,ds:0xca36094c
  408ce1:	sub    al,0x3d
  408ce3:	mov    ah,0x91
  408ce5:	push   si
  408ce7:	int3   
  408ce8:	outs   dx,BYTE PTR ds:[esi]
  408ce9:	sub    edx,DWORD PTR [ecx-0xb]
  408cec:	mov    dl,0xf2
  408cee:	cmp    ebp,DWORD PTR [eax+0x3]
  408cf1:	repnz pop esp
  408cf3:	sar    DWORD PTR [eax-0x898e39f],0x51
  408cfa:	pop    edx
  408cfb:	in     al,0x7c
  408cfd:	jb     0x408cde
  408cff:	sub    al,BYTE PTR [esi]
  408d01:	mov    esp,0x526d4980
  408d06:	pop    eax
  408d07:	push   eax
  408d08:	mov    esi,DWORD PTR [esi-0x64f37706]
  408d0e:	mov    eax,ds:0x51b62686
  408d13:	lahf   
  408d14:	jecxz  0x408cf3
  408d16:	mov    ecx,0xc196d544
  408d1b:	sbb    al,0xb9
  408d1d:	or     BYTE PTR [eax+esi*4],0x47
  408d21:	pop    eax
  408d22:	inc    esi
  408d23:	sbb    ebx,DWORD PTR [ebp+0x4d]
  408d26:	jb     0x408d67
  408d28:	mov    bl,0x5c
  408d2a:	and    DWORD PTR [eax-0x36967a63],esp
  408d30:	mov    ds:0x4eeb78fc,al
  408d35:	in     eax,0xe7
  408d37:	dec    ecx
  408d38:	lods   al,BYTE PTR ds:[esi]
  408d39:	imul   esi,esp,0xffffffd9
  408d3c:	vunpckhps xmm1,xmm7,xmm7
  408d40:	push   ss
  408d41:	mov    DWORD PTR [ecx],ebx
  408d43:	test   al,0x92
  408d45:	into   
  408d46:	cmp    esi,DWORD PTR [edx-0x51]
  408d49:	inc    edx
  408d4a:	mov    BYTE PTR [eax+0x46206e97],dh
  408d50:	jmp    0x71d25fe2
  408d55:	mov    ch,0x27
  408d57:	mov    ebx,?
  408d59:	iret   
  408d5a:	int3   
  408d5b:	hlt    
  408d5c:	push   edx
  408d5d:	jns    0x408d30
  408d5f:	jns    0x408d98
  408d61:	xor    BYTE PTR [eax],bh
  408d63:	sbb    DWORD PTR ds:0xfb55d19d,edi
  408d69:	loop   0x408dcd
  408d6b:	fldenv [edi+ebp*2]
  408d6e:	jo     0x408d1f
  408d70:	mov    dl,BYTE PTR [ecx+0x5a]
  408d73:	mov    edi,0x61cfa376
  408d78:	push   edx
  408d79:	enter  0xf251,0x2a
  408d7d:	fiadd  DWORD PTR [ecx]
  408d7f:	repnz das 
  408d81:	xchg   ch,ch
  408d83:	xor    ebp,DWORD PTR [edx+0x4d]
  408d86:	loope  0x408d98
  408d88:	push   0xce748716
  408d8d:	test   BYTE PTR [ebx-0x397293d2],dh
  408d93:	jecxz  0x408d75
  408d95:	(bad)  
  408d96:	xchg   ebx,eax
  408d97:	aaa    
  408d98:	loope  0x408dae
  408d9a:	fstp   QWORD PTR [ecx+0x62]
  408d9d:	push   es
  408d9e:	pop    eax
  408d9f:	das    
  408da0:	cmp    eax,0x3963776c
  408da5:	ins    DWORD PTR es:[edi],dx
  408da6:	rcr    BYTE PTR [eax+0xa],1
  408da9:	in     eax,0x87
  408dab:	mov    esp,ss
  408dad:	pop    es
  408dae:	jmp    0x408d32
  408db0:	mov    edi,0x69c9f58d
  408db5:	sbb    esi,DWORD PTR [ecx-0x5f226485]
  408dbb:	test   eax,0xd4541c81
  408dc0:	xor    ah,BYTE PTR [edi-0x8]
  408dc3:	mov    fs,WORD PTR [ecx-0x67]
  408dc6:	inc    ebp
  408dc7:	cmp    DWORD PTR ds:0x61d6fcc7,esi
  408dcd:	retf   
  408dce:	in     eax,0x83
  408dd0:	mov    dl,0x9f
  408dd2:	push   edi
  408dd3:	inc    edx
  408dd4:	adc    eax,0x373db44
  408dd9:	cwde   
  408dda:	pop    ds
  408ddb:	loope  0x408e33
  408ddd:	data16 xchg BYTE PTR [eax],ch
  408de0:	dec    ebx
  408de1:	out    0x59,al
  408de3:	pop    es
  408de4:	mov    al,0xf7
  408de6:	add    ecx,DWORD PTR [ecx+0x56]
  408de9:	xchg   edx,eax
  408dea:	loopne 0x408e27
  408dec:	dec    esi
  408ded:	sub    esi,0xb548396
  408df3:	cmp    DWORD PTR [ecx],esp
  408df5:	jne    0x408e0b
  408df7:	mov    DWORD PTR ds:0x708ec963,esp
  408dfd:	pop    esi
  408dfe:	mov    eax,esi
  408e00:	cmp    eax,DWORD PTR ds:0xce8276a1
  408e06:	lods   al,BYTE PTR ds:[esi]
  408e07:	hlt    
  408e08:	jmp    0xb39103b6
  408e0d:	mov    bl,dh
  408e0f:	aad    0x1e
  408e11:	adc    esi,DWORD PTR [ecx]
  408e13:	enter  0xffab,0x7a
  408e17:	nop
  408e18:	pop    ss
  408e19:	adc    ecx,eax
  408e1b:	sbb    eax,DWORD PTR [esi+ebx*8+0x34af259b]
  408e22:	mov    ebx,0xd7450dc4
  408e27:	bound  ecx,QWORD PTR [edx]
  408e29:	sar    DWORD PTR [ebx],0x3c
  408e2c:	clc    
  408e2d:	repz imul ebp,DWORD PTR [esi],0xebb99fda
  408e34:	lea    ebx,[ebx+ebp*8+0xd87b491]
  408e3b:	and    eax,0x9291cf08
  408e40:	jl     0x408eab
  408e42:	lods   eax,DWORD PTR ds:[esi]
  408e43:	ja     0x408e36
  408e45:	mov    bh,0x78
  408e47:	pusha  
  408e48:	cld    
  408e49:	xor    eax,DWORD PTR [esi-0x7e40d288]
  408e4f:	and    eax,0xb5559d41
  408e54:	lods   al,BYTE PTR ds:[esi]
  408e55:	ds xchg edx,eax
  408e57:	push   cs
  408e58:	adc    al,0xfe
  408e5a:	xor    bl,0x1b
  408e5d:	mov    ebx,0x762aeae7
  408e62:	test   eax,0x809a475f
  408e67:	sbb    DWORD PTR [esi],edx
  408e69:	mov    ds:0x35b3835a,al
  408e6e:	ins    DWORD PTR es:[edi],dx
  408e6f:	lods   eax,DWORD PTR ds:[esi]
  408e70:	mov    esi,0x75d73ec0
  408e75:	xor    cl,BYTE PTR [eax-0x15]
  408e78:	call   0xb53c:0xa4b8c0da
  408e7f:	data16 jge 0x408e4b
  408e82:	inc    ebx
  408e83:	fwait
  408e84:	lea    ebx,[esp+eiz*4+0x2feb87e]
  408e8b:	ja     0x408ef9
  408e8d:	mov    eax,DWORD PTR [edx]
  408e8f:	mov    edi,DWORD PTR [esi-0x7186bf4]
  408e95:	mov    ds:0x2ba2cf9a,al
  408e9a:	int    0x16
  408e9c:	jnp    0x408ef4
  408e9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e9f:	add    DWORD PTR [edi+0x28],0xcedbc5d8
  408ea6:	mov    ebx,0x7eb4304d
  408eab:	je     0x408e8a
  408ead:	xchg   ebx,eax
  408eae:	aaa    
  408eaf:	pop    edx
  408eb0:	sub    BYTE PTR [edx],bh
  408eb2:	cwde   
  408eb3:	daa    
  408eb4:	(bad)  
  408eb5:	or     DWORD PTR [edx-0x67],edx
  408eb8:	arpl   WORD PTR [ebx-0x2482a735],bx
  408ebe:	shr    DWORD PTR [eax+ebx*2-0x49003062],0x8e
  408ec6:	scas   al,BYTE PTR es:[edi]
  408ec7:	push   esi
  408ec8:	jns    0x408eb3
  408eca:	pop    ds
  408ecb:	sbb    eax,0x3885a036
  408ed0:	mov    ecx,0x664abf4f
  408ed5:	push   edx
  408ed6:	mov    ds,WORD PTR [edx]
  408ed8:	add    dh,ah
  408eda:	xchg   ebp,eax
  408edb:	and    eax,0x1cf79e0
  408ee0:	fstp   DWORD PTR ds:0xbdd14b63
  408ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ee7:	mov    edx,0x100b1f18
  408eec:	pushf  
  408eed:	rcl    BYTE PTR [edi-0x22],0x4c
  408ef1:	push   es
  408ef2:	dec    edx
  408ef4:	stc    
  408ef5:	sbb    edi,DWORD PTR [esi]
  408ef7:	xchg   edi,eax
  408ef8:	sbb    edi,esi
  408efa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408efb:	mov    al,ds:0x6db3c2d2
  408f00:	stos   BYTE PTR es:[edi],al
  408f01:	ins    DWORD PTR es:[edi],dx
  408f02:	test   DWORD PTR [edi+0x9],edx
  408f05:	and    al,BYTE PTR [ecx+0x1da790e1]
  408f0b:	dec    eax
  408f0c:	dec    esi
  408f0d:	into   
  408f0e:	jmp    0x31a3:0x5916f544
  408f15:	mov    edi,0x8d486cb0
  408f1a:	test   al,0xc7
  408f1c:	mov    esp,0xcac33ff3
  408f21:	push   ecx
  408f22:	daa    
  408f23:	pop    ecx
  408f24:	or     al,BYTE PTR ds:0x32de49fb
  408f2a:	pop    edx
  408f2b:	fimul  WORD PTR [edi]
  408f2d:	push   esi
  408f2e:	fisubr WORD PTR fs:[esi+0x1c]
  408f32:	add    esi,DWORD PTR [ebx+0x2b]
  408f35:	repz add eax,0x4137f7d1
  408f3b:	cdq    
  408f3c:	jne    0x408f63
  408f3e:	fwait
  408f3f:	sub    esi,DWORD PTR [edx]
  408f41:	push   cs
  408f42:	mov    BYTE PTR [esi],dh
  408f44:	cmp    edx,edx
  408f46:	sbb    esi,DWORD PTR cs:[ebp-0x2f77a78b]
  408f4d:	shr    dl,cl
  408f4f:	sub    BYTE PTR [edi],bl
  408f51:	mov    ah,0x1c
  408f53:	mov    bl,0x39
  408f55:	lods   al,BYTE PTR ds:[esi]
  408f56:	pop    edi
  408f57:	in     eax,dx
  408f58:	jo     0x408f7e
  408f5a:	xchg   ebp,eax
  408f5b:	test   bl,ah
  408f5d:	dec    ebx
  408f5e:	mov    BYTE PTR [ebp+0x4e],bh
  408f61:	inc    ecx
  408f62:	stc    
  408f63:	pop    ecx
  408f64:	fld    QWORD PTR es:[esp+eax*8+0x64d13eec]
  408f6c:	add    BYTE PTR [eax-0x6f4c913d],dh
  408f72:	jg     0x408f0c
  408f74:	test   ebp,ebp
  408f76:	stos   BYTE PTR es:[edi],al
  408f77:	xchg   ebp,ecx
  408f79:	mov    edi,DWORD PTR [edi+0x1daa32c6]
  408f7f:	and    BYTE PTR [ecx+edi*4-0x7faea1d4],0x4f
  408f87:	mov    esi,DWORD PTR [edx]
  408f89:	das    
  408f8a:	lods   eax,DWORD PTR ds:[esi]
  408f8b:	sub    BYTE PTR [ecx+ebx*1],al
  408f8e:	xchg   esi,eax
  408f8f:	xlat   BYTE PTR ds:[ebx]
  408f90:	cmc    
  408f91:	add    ah,BYTE PTR [esi-0x3df4ed20]
  408f97:	xchg   edi,eax
  408f98:	pop    edx
  408f99:	push   ebp
  408f9a:	add    al,0x9b
  408f9c:	(bad)  
  408f9d:	shl    BYTE PTR [ebp-0x28435205],0xd7
  408fa4:	inc    ebx
  408fa5:	jne    0x408fee
  408fa7:	push   edx
  408fa8:	pusha  
  408fa9:	push   ss
  408faa:	int3   
  408fab:	aad    0x2e
  408fad:	cmc    
  408fae:	mov    WORD PTR [esi-0x6bb7e535],gs
  408fb4:	pop    edx
  408fb5:	pop    ebp
  408fb6:	test   ah,ah
  408fb8:	scas   al,BYTE PTR es:[edi]
  408fb9:	scas   al,BYTE PTR es:[di]
  408fbb:	dec    edi
  408fbc:	out    0x5c,eax
  408fbe:	mov    bh,0xce
  408fc0:	jnp    0x409024
  408fc2:	(bad)  
  408fc4:	out    dx,al
  408fc5:	pop    ecx
  408fc6:	std    
  408fc7:	pop    esp
  408fc8:	sub    cl,ah
  408fca:	cwde   
  408fcb:	cdq    
  408fcc:	dec    eax
  408fcd:	lock or al,0xfb
  408fd0:	mov    dl,0xb5
  408fd2:	push   0xa5d818c4
  408fd7:	imul   edi,DWORD PTR [ecx],0xb5763b91
  408fdd:	inc    esp
  408fde:	cmc    
  408fdf:	or     bh,bl
  408fe1:	mov    ds:0xad3128ce,eax
  408fe6:	es inc esp
  408fe8:	fcmovnbe st,st(5)
  408fea:	bound  eax,QWORD PTR [ebp+0x1e]
  408fed:	loope  0x409031
  408fef:	xchg   edi,eax
  408ff0:	xchg   ebx,eax
  408ff1:	jl     0x408f86
  408ff3:	retf   0x4168
  408ff6:	inc    esp
  408ff7:	xor    al,0x51
  408ff9:	sub    BYTE PTR [edx],ch
  408ffb:	js     0x408ff6
  408ffd:	icebp  
  408ffe:	mov    bl,0x72
  409000:	shl    dl,cl
  409002:	sbb    BYTE PTR [ebx+0x53],bl
  409005:	stos   DWORD PTR es:[edi],eax
  409006:	pop    esi
  409007:	mov    edx,0x38ab867d
  40900c:	leave  
  40900d:	sub    eax,0x73f820ef
  409012:	in     eax,0xb5
  409014:	call   0x7cc0:0xa7e9b0be
  40901b:	xchg   esi,edx
  40901d:	xor    eax,0x8f8efe6c
  409022:	scas   al,BYTE PTR es:[edi]
  409023:	aas    
  409024:	aaa    
  409025:	dec    ebx
  409026:	xchg   edx,eax
  409027:	cmp    eax,esp
  409029:	jg     0x409044
  40902b:	clc    
  40902c:	sub    cl,BYTE PTR [ebp+0x4fe71592]
  409032:	int3   
  409033:	cmp    ebp,DWORD PTR [ebp+eiz*4+0x27]
  409037:	aam    0x93
  409039:	jmp    0x409032
  40903b:	push   ecx
  40903c:	je     0x408fcf
  40903e:	js     0x40905f
  409040:	mov    ah,0xd0
  409042:	inc    edi
  409043:	jp     0x408fcc
  409045:	mov    BYTE PTR [ecx+0x6dd4133f],0x7d
  40904c:	and    al,0x73
  40904e:	ds xor al,0xf7
  409051:	mov    edi,0x2f18d4ef
  409056:	test   al,0x12
  409058:	ss into 
  40905a:	xor    al,0x7c
  40905c:	shr    DWORD PTR [esi+0x4e],cl
  40905f:	push   esp
  409060:	lds    eax,FWORD PTR [ebx-0x68a03019]
  409066:	sub    ebp,DWORD PTR [ecx-0x46]
  409069:	or     DWORD PTR [edx-0x713d4818],edx
  40906f:	repz pop edx
  409071:	(bad)  
  409073:	out    dx,eax
  409074:	sar    BYTE PTR [esi-0x18],0x31
  409078:	(bad)  
  409079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40907a:	jmp    0x69e2:0xd76db8dc
  409081:	rcl    DWORD PTR [edi],0xba
  409084:	xlat   BYTE PTR ds:[ebx]
  409085:	aam    0xc
  409087:	mov    edx,0x86821447
  40908c:	add    dh,bl
  40908e:	xchg   ebx,eax
  40908f:	adc    BYTE PTR [edi],cl
  409091:	adc    DWORD PTR [edi],0x9bd2cef7
  409097:	pushf  
  409098:	inc    edx
  409099:	and    BYTE PTR [eax],bl
  40909b:	neg    BYTE PTR [esi]
  40909d:	cmp    esi,DWORD PTR [bp+si]
  4090a0:	fiadd  WORD PTR [edi]
  4090a2:	mov    ah,0x2a
  4090a4:	add    al,0x67
  4090a6:	jecxz  0x4090e7
  4090a8:	clc    
  4090a9:	and    eax,0x6e68e42d
  4090ae:	pop    edx
  4090af:	pushf  
  4090b0:	jp     0x4090f7
  4090b2:	push   ebx
  4090b3:	sub    eax,0xe2f0d6e6
  4090b8:	cmp    al,0x92
  4090ba:	popf   
  4090bb:	fiadd  DWORD PTR [ecx-0x1e227f42]
  4090c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090c2:	ret    
  4090c3:	dec    eax
  4090c4:	adc    al,0x3a
  4090c6:	dec    esi
  4090c7:	and    DWORD PTR [ebp-0x5fef4585],ebp
  4090cd:	sbb    DWORD PTR [edx+0x692356a1],eax
  4090d3:	fadd   DWORD PTR [ebx+eiz*4-0x6aa3c71a]
  4090da:	push   esp
  4090db:	cmc    
  4090dc:	sub    edx,esi
  4090de:	stos   DWORD PTR es:[edi],eax
  4090df:	stos   BYTE PTR es:[edi],al
  4090e0:	sbb    ebp,0x24
  4090e3:	fstp   QWORD PTR [esi-0x7bd34c4d]
  4090e9:	jg     0x40909d
  4090eb:	imul   eax,DWORD PTR [ecx-0x2d],0xc2d08696
  4090f2:	shl    DWORD PTR [ecx],1
  4090f4:	into   
  4090f5:	into   
  4090f6:	jecxz  0x409096
  4090f8:	inc    ecx
  4090f9:	frstor [ebx+0x20fca5b3]
  4090ff:	adc    DWORD PTR [edx-0x5b8d2da1],ebx
  409105:	lea    esi,[edx+0x3c]
  409108:	cs push eax
  40910a:	mov    bh,0xab
  40910c:	sub    al,0x2a
  40910e:	push   ds
  40910f:	cmp    DWORD PTR [edi+0x5df9576e],ecx
  409115:	add    al,0x78
  409117:	gs out dx,eax
  409119:	int    0x24
  40911b:	mov    cl,BYTE PTR [ecx-0x52]
  40911e:	mov    dl,0x56
  409120:	cdq    
  409121:	jl     0x40913e
  409123:	mov    cl,0x6a
  409125:	std    
  409126:	mov    cl,0x58
  409128:	loop   0x4090d5
  40912a:	(bad)  
  40912c:	ins    DWORD PTR es:[edi],dx
  40912d:	jb     0x409118
  40912f:	mov    ah,0xc1
  409131:	aad    0x95
  409133:	mov    ecx,0x7e0cb
  409138:	push   es
  409139:	mov    ebp,DWORD PTR [ebp-0x65]
  40913c:	mov    edx,0x27739426
  409141:	lea    esp,[edi-0x78cf53d]
  409147:	push   es
  409148:	xchg   ecx,eax
  409149:	ror    DWORD PTR [ebp+0x2a],0x31
  40914d:	das    
  40914e:	nop
  40914f:	adc    edi,DWORD PTR [ecx]
  409151:	(bad)  
  409153:	outs   dx,DWORD PTR ds:[esi]
  409154:	fild   QWORD PTR [ecx]
  409156:	les    eax,FWORD PTR [ebp+0x1328e77b]
  40915c:	aam    0xbc
  40915e:	mov    BYTE PTR [esi],ch
  409160:	inc    edx
  409161:	mov    ecx,0x8cb30c20
  409166:	pop    ebp
  409167:	xchg   esi,eax
  409168:	jl     0x409139
  40916a:	xor    DWORD PTR [eax-0x55dad84c],ebp
  409170:	dec    eax
  409171:	imul   sp,WORD PTR [esi],0xffcc
  409175:	lock pop esi
  409177:	inc    DWORD PTR [edx-0xb8e0e07]
  40917d:	stos   DWORD PTR es:[edi],eax
  40917e:	(bad)  
  40917f:	popa   
  409180:	add    esi,esi
  409182:	sub    eax,0x19be5e9e
  409187:	dec    edx
  409188:	mov    WORD PTR [edx+0xfa6f8eb],es
  40918e:	jmp    0xdbe4:0x2779a5e7
  409195:	or     al,0x5a
  409197:	sub    BYTE PTR [ebp+0x32],bh
  40919a:	in     al,0xe9
  40919c:	mov    eax,0x945de979
  4091a1:	loope  0x409201
  4091a3:	jae    0x409177
  4091a5:	lea    edx,[edx-0x7f]
  4091a8:	push   ds
  4091a9:	dec    ebp
  4091aa:	std    
  4091ab:	jns    0x409227
  4091ad:	sti    
  4091ae:	data16 jns 0x4091f9
  4091b1:	mov    ds:0x72c761c3,al
  4091b6:	add    BYTE PTR [esi],bl
  4091b8:	sub    BYTE PTR [edi],bh
  4091ba:	nop
  4091bb:	inc    edi
  4091bc:	jae    0x409151
  4091be:	sar    BYTE PTR [ebx],1
  4091c0:	cld    
  4091c1:	(bad)  
  4091c2:	pusha  
  4091c3:	ds aaa 
  4091c5:	in     eax,0x1a
  4091c7:	sbb    ah,bl
  4091c9:	(bad)  
  4091cb:	lea    eax,[esi-0x1b]
  4091ce:	imul   ebp,DWORD PTR [ecx],0x3ad25c63
  4091d4:	adc    al,0x74
  4091d6:	lock les ebx,FWORD PTR [edi-0x19]
  4091da:	pushf  
  4091db:	jge    0x40924e
  4091dd:	dec    esi
  4091de:	adc    BYTE PTR [ecx+0x37],cl
  4091e1:	push   ebp
  4091e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091e3:	test   BYTE PTR [ebx-0x76],ch
  4091e6:	hlt    
  4091e7:	adc    DWORD PTR [ebx+0x6e293e7c],edi
  4091ed:	jmp    0x6c4d:0xba3e23e4
  4091f4:	lods   eax,DWORD PTR ds:[esi]
  4091f5:	sbb    DWORD PTR [edi-0x4f],ebp
  4091f8:	jle    0x4091f9
  4091fa:	out    dx,eax
  4091fb:	sbb    eax,0x8c7d8898
  409200:	cs sub edi,eax
  409203:	xor    BYTE PTR [esp+edi*1],dl
  409206:	mov    edx,DWORD PTR [edi-0x2d]
  409209:	repz or al,0x16
  40920c:	cmp    eax,0xce1a0413
  409211:	mov    BYTE PTR [bp+di-0x1166],al
  409216:	aaa    
  409217:	div    dl
  409219:	add    DWORD PTR [eax-0x1e],ebp
  40921c:	aas    
  40921d:	dec    esi
  40921e:	hlt    
  40921f:	dec    eax
  409220:	xor    eax,DWORD PTR [eax-0x37]
  409223:	sub    ebx,0xfffffffa
  409226:	jno    0x409217
  409228:	fucomi st,st(7)
  40922a:	pop    ds
  40922b:	cld    
  40922c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40922d:	rcr    BYTE PTR [edx],cl
  40922f:	in     al,0xce
  409231:	push   cs
  409232:	xchg   DWORD PTR [esp+esi*1+0x6c6b5f83],eax
  409239:	clc    
  40923a:	sub    DWORD PTR [edx-0x24e0681a],0xd7d09a36
  409244:	loope  0x409204
  409246:	ins    BYTE PTR es:[edi],dx
  409247:	add    BYTE PTR [edx+ebx*1-0x58c1b26c],0xa9
  40924f:	add    BYTE PTR [eax-0x1f],al
  409252:	in     al,dx
  409253:	addr16 jmp 0x2930b94d
  409259:	push   ebp
  40925a:	imul   eax,DWORD PTR [ebp+0x9],0x23
  40925e:	loope  0x409209
  409260:	jp     0x40925d
  409262:	push   ds
  409263:	mov    ?,WORD PTR [esp+ecx*1]
  409266:	in     eax,dx
  409267:	jno    0x409200
  409269:	fdivr  QWORD PTR [edx+esi*4+0xa]
  40926d:	jle    0x40926e
  40926f:	mul    DWORD PTR [eax+0x28]
  409272:	pop    esi
  409273:	adc    al,0xc3
  409275:	repnz in al,0xd5
  409278:	jbe    0x409263
  40927a:	pop    ds
  40927b:	aas    
  40927c:	dec    ebx
  40927d:	int    0xf5
  40927f:	add    DWORD PTR [esi+0x48d203d8],ebx
  409285:	test   al,0x0
  409287:	dec    eax
  409288:	out    0x76,eax
  40928a:	xchg   esp,eax
  40928b:	xlat   BYTE PTR ds:[ebx]
  40928c:	ins    DWORD PTR es:[edi],dx
  40928d:	mov    eax,0xd9fd3841
  409292:	jnp    0x4092b1
  409294:	and    BYTE PTR [esi-0x50daddf2],0x8a
  40929b:	outs   dx,DWORD PTR ds:[esi]
  40929c:	cli    
  40929d:	xor    edx,edx
  40929f:	out    0x12,al
  4092a1:	pop    ebx
  4092a2:	inc    esp
  4092a3:	stos   DWORD PTR es:[edi],eax
  4092a4:	jbe    0x4092ec
  4092a6:	xor    dl,ah
  4092a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092a9:	pop    edx
  4092aa:	xor    BYTE PTR [esi-0x22],0x71
  4092ae:	test   al,0xef
  4092b0:	bound  esp,QWORD PTR [eax+0x7d68eca4]
  4092b6:	int3   
  4092b7:	push   ds
  4092b8:	arpl   WORD PTR [edx+0x6293c70],si
  4092be:	cmp    bl,bl
  4092c0:	fs nop
  4092c2:	fisubr DWORD PTR es:[eax]
  4092c5:	jb     0x40931b
  4092c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092c8:	jle    0x4092f2
  4092ca:	xor    dh,al
  4092cc:	and    BYTE PTR [edi-0x1b326468],ah
  4092d2:	shr    BYTE PTR [esi+0x3267bfc9],0x5b
  4092d9:	test   BYTE PTR [edi+ebx*1+0x54fe8a2],dh
  4092e0:	shl    ah,cl
  4092e2:	stos   BYTE PTR es:[edi],al
  4092e3:	pop    eax
  4092e4:	(bad)  
  4092e5:	(bad)  
  4092e6:	jns    0x40931f
  4092e8:	ficomp WORD PTR [esi+0x166cc209]
  4092ee:	(bad)  
  4092ef:	sub    cl,dl
  4092f1:	cwde   
  4092f2:	outs   dx,DWORD PTR ds:[esi]
  4092f3:	iret   
  4092f4:	or     BYTE PTR [ebp-0x4c471fb3],ch
  4092fa:	pop    edi
  4092fb:	es dec ebp
  4092fd:	mov    ecx,0x610a73af
  409302:	int    0x2d
  409304:	pop    ss
  409305:	fidivr WORD PTR [edx]
  409307:	stos   DWORD PTR es:[edi],eax
  409308:	xor    dl,BYTE PTR [edi-0x3d]
  40930b:	inc    ebp
  40930c:	out    0x1c,eax
  40930e:	into   
  40930f:	jl     0x40934f
  409311:	add    al,0x72
  409313:	or     BYTE PTR [edi],dh
  409315:	pop    eax
  409316:	cs sub dh,al
  409319:	adc    edx,edx
  40931b:	jmp    0xeebd:0xd0cfa2eb
  409322:	push   esi
  409323:	ja     0x409336
  409325:	pop    ds
  409326:	daa    
  409327:	imul   ecx,DWORD PTR [edi],0x5d4d5a6c
  40932d:	das    
  40932e:	mov    eax,0xdfe76693
  409333:	and    eax,0xe75812f4
  409338:	jmp    0x5901:0xb2c63fe5
  40933f:	fwait
  409340:	ss inc ebx
  409342:	sub    al,0xc2
  409344:	ficomp DWORD PTR [ebp-0x3a]
  409347:	add    eax,0xee1eef7e
  40934c:	sub    DWORD PTR ds:0x59a4bd51,esi
  409352:	mov    edx,0x38fd305
  409357:	or     eax,0x8a45dcb4
  40935c:	(bad)  
  40935e:	xchg   esp,eax
  40935f:	imul   DWORD PTR [eax-0x57]
  409362:	popa   
  409363:	mov    ds:0xaba575dc,al
  409368:	aaa    
  409369:	mov    DWORD PTR [edi],esp
  40936b:	and    eax,0x9d23aaf7
  409370:	fwait
  409371:	icebp  
  409372:	adc    esi,DWORD PTR [edi-0x5b]
  409375:	sti    
  409376:	pop    ds
  409377:	jmp    0x409399
  409379:	vpackuswb ymm4,ymm2,YMMWORD PTR [ebp+0x69]
  40937e:	sbb    eax,0xba433dea
  409383:	xor    al,0xf2
  409385:	xlat   BYTE PTR ds:[ebx]
  409386:	test   DWORD PTR [esi+ebx*2],eax
  409389:	jb     0x409381
  40938b:	test   al,0x70
  40938d:	lock les edi,FWORD PTR [esi+0x4641e71a]
  409394:	xor    edi,edx
  409396:	ficomp WORD PTR [edx-0x4]
  409399:	xchg   bx,ax
  40939b:	push   0xffffffb8
  40939d:	in     al,0x2c
  40939f:	lea    ebp,[eax+0x8688df7]
  4093a5:	mov    ebx,es
  4093a7:	or     eax,0x28deb31b
  4093ac:	xchg   ebp,eax
  4093ad:	mov    gs,WORD PTR [eax]
  4093af:	nop
  4093b0:	imul   esi,ecx,0x158eccfb
  4093b6:	loopne 0x409371
  4093b8:	sub    al,0x4a
  4093ba:	mov    edx,0xf413d1cd
  4093bf:	mov    edx,0xe4f28271
  4093c4:	sbb    al,0x11
  4093c6:	jne    0x4093ed
  4093c8:	dec    edi
  4093c9:	pop    ebx
  4093ca:	push   es
  4093cb:	mov    eax,0x61f1f98d
  4093d0:	push   edx
  4093d1:	sbb    cl,BYTE PTR [ebp+esi*8-0x66e29353]
  4093d8:	cmc    
  4093d9:	cs xor eax,0x8fd5e5ba
  4093df:	add    BYTE PTR [eax],ah
  4093e1:	in     al,0xc6
  4093e3:	ja     0x4093be
  4093e5:	in     al,dx
  4093e6:	fisubr WORD PTR [ebp+0x78851a4f]
  4093ec:	aas    
  4093ed:	shl    dh,cl
  4093ef:	inc    ecx
  4093f0:	pop    ebx
  4093f1:	in     eax,0xda
  4093f3:	xor    bl,BYTE PTR [esi+0x58]
  4093f6:	cli    
  4093f7:	mov    dl,0x4c
  4093f9:	dec    esp
  4093fa:	out    dx,eax
  4093fb:	push   ds
  4093fc:	fsubr  st,st(2)
  4093fe:	(bad)  
  4093ff:	enter  0xd184,0xa9
  409403:	mov    ah,0xdc
  409405:	push   esp
  409406:	cmp    esp,DWORD PTR [edi+0x65]
  409409:	leave  
  40940a:	cmp    eax,edi
  40940c:	(bad)  
  40940d:	loop   0x4093d7
  40940f:	(bad)  
  409410:	out    dx,eax
  409411:	adc    ecx,0xffffff86
  409414:	jns    0x4093d6
  409416:	sbb    esi,DWORD PTR [edx+0x4d]
  409419:	xchg   esi,eax
  40941a:	or     dh,BYTE PTR [edx+edx*4]
  40941d:	adc    eax,0x69a095c
  409422:	and    DWORD PTR [eax+eax*4],edx
  409425:	stos   DWORD PTR es:[edi],eax
  409426:	loopne 0x4094a3
  409428:	push   ds
  409429:	adc    bl,BYTE PTR [ecx]
  40942b:	rol    dl,0xb7
  40942e:	fcomip st,st(3)
  409430:	xchg   esi,eax
  409431:	mov    ch,0xf8
  409433:	and    DWORD PTR [ebx],edx
  409435:	loope  0x4093c7
  409437:	inc    ecx
  409438:	cmp    eax,0x4b8492a4
  40943d:	adc    BYTE PTR [ebx],dh
  40943f:	fimul  DWORD PTR [esi-0x3ce388c4]
  409445:	pushf  
  409446:	xchg   ecx,eax
  409447:	scas   eax,DWORD PTR es:[edi]
  409448:	pop    edi
  409449:	cdq    
  40944a:	dec    edi
  40944b:	inc    esi
  40944c:	jl     0x4094ba
  40944e:	fsubp  st(1),st
  409450:	adc    BYTE PTR [ecx-0x29],al
  409453:	mov    eax,ds:0xefcd4fb3
  409458:	mov    cl,0xd8
  40945a:	adc    eax,0x2416aa8
  40945f:	cmp    cl,bl
  409461:	cmp    DWORD PTR [ebx+0x782174fc],edi
  409467:	and    bh,al
  409469:	mov    cl,0x81
  40946b:	jp     0x4094b0
  40946d:	(bad)  
  40946e:	cld    
  40946f:	(bad)  
  409470:	fwait
  409471:	sub    eax,0x12d9de94
  409476:	mov    ebp,0xe5086068
  40947b:	jp     0x4094ad
  40947d:	es jae 0x4094f6
  409480:	cmp    DWORD PTR [ecx+0x66],ebx
  409483:	mov    ebx,0x385de015
  409488:	mov    ah,0x78
  40948a:	jg     0x4094a6
  40948c:	push   ebp
  40948d:	int    0x22
  40948f:	jb     0x40949f
  409491:	mov    cl,0x1b
  409493:	mov    esi,es
  409495:	jmp    0x614c1e7e
  40949a:	sahf   
  40949b:	hlt    
  40949c:	popf   
  40949d:	out    dx,eax
  40949e:	aam    0xb7
  4094a0:	rcr    BYTE PTR [esi],0x84
  4094a3:	mov    edx,0x99873e15
  4094a8:	mov    ebp,0xaa403dae
  4094ad:	pop    edx
  4094ae:	lock mov ebp,edx
  4094b1:	div    DWORD PTR [ebx-0x8]
  4094b4:	cdq    
  4094b5:	test   DWORD PTR [ecx-0x1e],esp
  4094b8:	cdq    
  4094b9:	(bad)  
  4094ba:	adc    al,0x37
  4094bc:	push   eax
  4094bd:	jl     0x409536
  4094bf:	shl    DWORD PTR [ebx+0x7718e9cb],0x83
  4094c6:	adc    al,0x5d
  4094c8:	fs jo  0x4094dc
  4094cb:	adc    esp,DWORD PTR [ecx-0x3d]
  4094ce:	jg     0x40949e
  4094d0:	inc    ebp
  4094d1:	scas   eax,DWORD PTR es:[edi]
  4094d2:	mov    al,0xa0
  4094d4:	loop   0x4094fc
  4094d6:	dec    esi
  4094d7:	daa    
  4094d8:	sub    ebx,DWORD PTR [ebp-0x7240543e]
  4094de:	inc    esi
  4094df:	outs   dx,BYTE PTR ds:[esi]
  4094e0:	jecxz  0x409538
  4094e2:	push   esi
  4094e3:	xchg   esp,eax
  4094e4:	dec    esi
  4094e5:	dec    eax
  4094e6:	or     cl,cl
  4094e8:	dec    ecx
  4094e9:	or     edi,DWORD PTR [edx+0x28]
  4094ec:	jo     0x40947b
  4094ee:	mov    esp,DWORD PTR [ebx-0x4651f4b2]
  4094f4:	lea    ebp,[esi-0x60c4b88c]
  4094fa:	xor    ecx,DWORD PTR [edi-0x31102ada]
  409500:	icebp  
  409501:	jge    0x4094bf
  409503:	adc    al,0x36
  409505:	push   eax
  409506:	dec    esp
  409507:	fsubr  st,st(3)
  409509:	outs   dx,DWORD PTR ds:[esi]
  40950a:	and    BYTE PTR [esi-0x2efd6262],0x1
  409511:	adc    DWORD PTR [esi+0x271f73f],ebx
  409517:	mov    cl,0x6a
  409519:	ret    
  40951a:	(bad)  
  40951b:	mov    ah,0xf9
  40951d:	xor    DWORD PTR [edi],esp
  40951f:	out    dx,al
  409520:	imul   esp,edi,0x7c2934a5
  409526:	dec    ebx
  409527:	mov    dl,BYTE PTR [esi+0x21]
  40952a:	outs   dx,BYTE PTR ds:[esi]
  40952b:	ret    
  40952c:	push   0xffffffd6
  40952e:	mov    cs,WORD PTR [ecx-0x31]
  409531:	xor    DWORD PTR [ebx-0x45],0xd
  409535:	test   al,0x7c
  409537:	mov    cl,0xb7
  409539:	rcr    DWORD PTR [eax-0x25ecf10a],1
  40953f:	fdiv   DWORD PTR [eax]
  409541:	mov    ebx,0xe30530ec
  409546:	cmp    al,dh
  409548:	rcl    DWORD PTR [ecx-0x6c],1
  40954b:	or     eax,0x52a3515a
  409550:	cdq    
  409551:	inc    ebx
  409552:	aaa    
  409553:	mov    bh,0x80
  409555:	jle    0x40951a
  409557:	xchg   edi,eax
  409558:	xchg   dl,cl
  40955a:	leave  
  40955b:	xchg   dl,dh
  40955d:	retf   0x5119
  409560:	in     eax,dx
  409561:	inc    eax
  409562:	pop    ds
  409563:	pop    ds
  409564:	(bad)  
  409565:	scas   eax,DWORD PTR es:[edi]
  409566:	sbb    DWORD PTR [edi+0xb],0x6400d16
  40956d:	sub    bh,al
  40956f:	push   0xffffffa9
  409571:	inc    edi
  409572:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409573:	and    eax,DWORD PTR [edi-0x44]
  409576:	cli    
  409577:	sub    DWORD PTR [eax],0x51
  40957a:	out    dx,al
  40957b:	sbb    eax,0xf41349fd
  409580:	mov    es,WORD PTR [esi+0x1c]
  409583:	cmp    eax,0x850a0a76
  409588:	cmp    al,0xf7
  40958a:	aas    
  40958b:	push   ebx
  40958c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40958d:	push   0xffffffc3
  40958f:	les    ebx,FWORD PTR [eax]
  409591:	pop    ds
  409592:	scas   eax,DWORD PTR es:[edi]
  409593:	bound  edi,QWORD PTR [esi-0x1f12efd]
  409599:	imul   BYTE PTR [edi+edi*1]
  40959c:	or     dl,BYTE PTR [ebx+eax*4-0x4a]
  4095a0:	sahf   
  4095a1:	pop    edi
  4095a2:	dec    ebx
  4095a3:	ss mov edx,0x50d3d4d0
  4095a9:	dec    edx
  4095aa:	sub    ah,bl
  4095ac:	xchg   edi,eax
  4095ad:	jge    0x4095c7
  4095af:	sbb    bl,cl
  4095b1:	mov    esp,0x4d6d7493
  4095b6:	hlt    
  4095b7:	sahf   
  4095b8:	rcr    ebp,0x5b
  4095bb:	fst    QWORD PTR [ecx+ebp*4]
  4095be:	dec    ebp
  4095bf:	mov    ch,0x3b
  4095c2:	aad    0x18
  4095c4:	out    dx,al
  4095c5:	dec    ecx
  4095c6:	mov    ebx,0xed955d9c
  4095cb:	cdq    
  4095cc:	outs   dx,DWORD PTR ds:[esi]
  4095cd:	mov    ch,0xe0
  4095cf:	push   esp
  4095d0:	icebp  
  4095d1:	jmp    0x409634
  4095d3:	sub    al,0x74
  4095d5:	mov    bh,BYTE PTR [esi]
  4095d7:	hlt    
  4095d8:	mov    ebx,0x717f54dd
  4095dd:	imul   esp,DWORD PTR [esi+0x1d155baa],0xedc9e979
  4095e7:	stos   DWORD PTR es:[edi],eax
  4095e8:	add    edi,DWORD PTR [ecx]
  4095ea:	dec    ecx
  4095eb:	aam    0x8f
  4095ed:	and    eax,0x14f52fab
  4095f2:	push   edx
  4095f3:	ss std 
  4095f5:	stos   DWORD PTR es:[edi],eax
  4095f6:	add    eax,0x707e08f0
  4095fb:	xchg   esi,eax
  4095fc:	(bad)  [edi]
  4095fe:	push   edx
  4095ff:	arpl   WORD PTR [edx+0x151d3676],bx
  409605:	pop    ds
  409606:	xchg   ecx,eax
  409607:	sbb    al,0x73
  409609:	xor    esi,DWORD PTR ds:0x45a6e938
  40960f:	lea    ebp,[ebp+0x653f6a06]
  409615:	dec    esp
  409616:	cld    
  409617:	xor    eax,ebp
  409619:	test   esi,esi
  40961b:	xchg   esp,eax
  40961c:	fild   QWORD PTR [edx+0x38eacf2c]
  409622:	push   0x6a
  409624:	stc    
  409625:	mov    eax,0x6fba50e
  40962a:	sti    
  40962b:	in     al,0x96
  40962d:	(bad)  
  40962e:	jmp    0xf4d963ad
  409633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409634:	aad    0xbc
  409636:	in     al,0xa
  409638:	hlt    
  409639:	loopne 0x40961f
  40963b:	jmp    FWORD PTR [esi-0x55]
  40963e:	adc    al,0x7d
  409640:	mov    cl,0x1e
  409642:	adc    eax,0x41da976d
  409647:	inc    edx
  409648:	test   al,0xa5
  40964a:	inc    esp
  40964b:	aas    
  40964c:	and    ah,BYTE PTR [ebx+0x52]
  40964f:	lea    edx,[esi-0x1f]
  409652:	pop    ecx
  409653:	push   ds
  409654:	rol    DWORD PTR [eax+0x9b834e6],0x9d
  40965b:	int    0xa4
  40965d:	aad    0xdc
  40965f:	jge    0x40966f
  409661:	inc    edx
  409662:	popf   
  409663:	add    DWORD PTR [ecx+0x6c],eax
  409666:	addr16 mov edx,0x62f5a63f
  40966c:	call   0x319:0xe8257817
  409673:	dec    ecx
  409674:	repnz fs xchg esi,eax
  409677:	sbb    esp,DWORD PTR [ecx+0x1f44f56b]
  40967d:	popf   
  40967e:	push   ss
  40967f:	dec    esp
  409680:	and    edi,eax
  409682:	aas    
  409683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409684:	jno    0x409608
  409686:	popf   
  409687:	sbb    al,0x2d
  409689:	fwait
  40968a:	aaa    
  40968b:	cld    
  40968c:	mov    bh,BYTE PTR [ebp+0x1]
  40968f:	mov    al,0x50
  409691:	sub    eax,0x6f260469
  409696:	call   0xabb9:0xcfe214f1
  40969d:	enter  0xceef,0x49
  4096a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096a2:	ja     0x40971c
  4096a4:	adc    cl,ah
  4096a6:	mov    WORD PTR [edx+0x5e0d3d37],ds
  4096ac:	int    0x8b
  4096ae:	and    bl,BYTE PTR [eax-0x45]
  4096b1:	mov    al,0x96
  4096b3:	and    esp,DWORD PTR [eax+0x5db197f5]
  4096b9:	(bad)  
  4096bb:	and    al,0x55
  4096bd:	mov    eax,ds:0x91582311
  4096c2:	dec    eax
  4096c3:	enter  0xb029,0xca
  4096c7:	xchg   DWORD PTR [edi+0xf966a5],edi
  4096cd:	sub    BYTE PTR ss:[eax-0x47],dh
  4096d1:	out    0x15,al
  4096d3:	jbe    0x409695
  4096d5:	imul   BYTE PTR [edx+0xb]
  4096d8:	ss nop
  4096da:	or     ebx,edi
  4096dc:	xor    BYTE PTR [eax-0x7c],al
  4096df:	shl    ecx,0x39
  4096e2:	mov    BYTE PTR [edi+0x30],ch
  4096e5:	add    dh,BYTE PTR [ecx-0x6b9280ac]
  4096eb:	cmp    dh,dh
  4096ed:	sub    dl,BYTE PTR [eax-0x784547ee]
  4096f3:	daa    
  4096f4:	or     edx,DWORD PTR ds:0x7b2b5820
  4096fa:	xor    dh,0xca
  4096fd:	pop    ebx
  4096fe:	xchg   ebx,eax
  4096ff:	test   BYTE PTR [ebx-0x30ee8232],bl
  409705:	lods   eax,DWORD PTR ds:[esi]
  409706:	loopne 0x40977d
  409708:	dec    edx
  409709:	adc    DWORD PTR [ebp+eiz*8+0x52],edi
  40970d:	(bad)  
  40970e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40970f:	mov    ebp,0x61f91f53
  409714:	(bad)  
  409715:	retf   0x9622
  409718:	in     al,0x74
  40971a:	aad    0xd7
  40971c:	daa    
  40971d:	imul   ecx
  40971f:	xchg   ecx,eax
  409720:	scas   eax,DWORD PTR es:[edi]
  409721:	scas   eax,DWORD PTR es:[edi]
  409722:	into   
  409723:	cmp    DWORD PTR [edx+ecx*2],esi
  409726:	(bad)  
  409727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409728:	add    DWORD PTR [ecx],esi
  40972a:	xchg   edx,eax
  40972b:	mov    ds:0x5c7951e0,eax
  409730:	push   es
  409731:	cwde   
  409732:	das    
  409733:	sahf   
  409734:	push   ebx
  409735:	dec    ecx
  409736:	xchg   BYTE PTR [edx+0x53],dh
  409739:	inc    ebp
  40973a:	mov    al,0x64
  40973c:	adc    DWORD PTR [esi+eax*2+0x3b],esi
  409740:	pop    es
  409741:	cmp    eax,0xef6cd993
  409746:	inc    esp
  409747:	pushf  
  409748:	fild   DWORD PTR [edi+0x44c88ae2]
  40974e:	fisttp WORD PTR [edx]
  409750:	pop    ds
  409751:	loope  0x40970b
  409753:	outs   dx,DWORD PTR ds:[esi]
  409754:	push   ecx
  409755:	push   es
  409756:	xchg   esi,eax
  409757:	imul   ebp,eax,0x54
  40975a:	sub    eax,0xaef4ae33
  40975f:	sub    eax,0x4349a687
  409764:	mov    ds:0x966b76e9,eax
  409769:	stc    
  40976a:	cmovae ebx,DWORD PTR [edi+0x769daa68]
  409771:	add    al,ch
  409773:	(bad)  
  409774:	push   ds
  409775:	scas   al,BYTE PTR es:[edi]
  409776:	xor    DWORD PTR [esp+eax*2+0x3c],edi
  40977a:	fcom   st(5)
  40977c:	sub    edx,DWORD PTR [ebp-0x7b58a79b]
  409782:	retf   0x9b51
  409785:	aam    0x71
  409787:	(bad)  
  409789:	mov    dh,0xf0
  40978b:	loopne 0x4097b8
  40978d:	fst    QWORD PTR [ebx]
  40978f:	inc    eax
  409790:	mov    dl,0x82
  409792:	fnsave [esp+esi*4+0x62]
  409796:	push   esp
  409797:	ja     0x409751
  409799:	jp     0x40976f
  40979b:	and    edx,ecx
  40979d:	xor    ch,BYTE PTR [ecx]
  40979f:	dec    esp
  4097a0:	loop   0x409777
  4097a2:	cld    
  4097a3:	and    BYTE PTR [esi],ch
  4097a5:	js     0x4097f1
  4097a7:	pushf  
  4097a8:	jb     0x409816
  4097aa:	push   0xffffffdd
  4097ac:	adc    eax,0x88d69cbc
  4097b1:	mov    es,WORD PTR [edx-0x6f89c261]
  4097b7:	pop    es
  4097b8:	sahf   
  4097b9:	es cwde 
  4097bb:	rol    BYTE PTR [eax-0x3e],cl
  4097be:	add    dh,BYTE PTR [ecx-0x28]
  4097c1:	jno    0x4097da
  4097c3:	cdq    
  4097c4:	mov    bl,BYTE PTR [ecx+0x2479a319]
  4097ca:	(bad)  
  4097cb:	iret   
  4097cc:	pop    ds
  4097cd:	sub    edi,DWORD PTR [ebx+0x1f]
  4097d0:	lods   eax,DWORD PTR ds:[esi]
  4097d1:	stc    
  4097d2:	in     al,0xe9
  4097d4:	(bad)
  4097d9:	dec    ebx
  4097da:	pushf  
  4097db:	cmc    
  4097dc:	mov    ecx,edx
  4097de:	inc    esi
  4097df:	push   esp
  4097e0:	das    
  4097e1:	outs   dx,BYTE PTR ds:[esi]
  4097e2:	cmp    esp,esp
  4097e4:	je     0x409859
  4097e6:	sahf   
  4097e7:	outs   dx,BYTE PTR ds:[esi]
  4097e8:	ins    BYTE PTR es:[edi],dx
  4097e9:	push   ds
  4097ea:	adc    BYTE PTR [ebp+0x37],cl
  4097ed:	shufps xmm0,XMMWORD PTR [edi-0x45],0x31
  4097f2:	imul   esp,DWORD PTR [esi+edx*4+0x32],0x6555155f
  4097fa:	jns    0x409860
  4097fc:	and    eax,0x81cd107d
  409801:	jge    0x40987e
  409803:	mov    al,0x3b
  409805:	push   esp
  409806:	sub    ch,BYTE PTR [ebp-0x59]
  409809:	int    0x66
  40980b:	mov    ch,0xfa
  40980d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40980e:	jl     0x40980b
  409810:	addr16 jge 0x409851
  409813:	ins    BYTE PTR es:[edi],dx
  409814:	pop    ebx
  409815:	or     edi,edx
  409817:	loope  0x4097c2
  409819:	mov    ecx,0xb99509f
  40981e:	and    BYTE PTR [esi-0x35],dl
  409821:	dec    eax
  409822:	fbstp  TBYTE PTR [ecx+0x21854d22]
  409828:	jne    0x409852
  40982a:	sbb    al,0x2a
  40982c:	mov    esp,ebx
  40982e:	push   eax
  40982f:	mov    BYTE PTR [ebp-0xb0fb409],ah
  409835:	das    
  409836:	sbb    dh,BYTE PTR [ebx+0x6a]
  409839:	fwait
  40983a:	repnz cli 
  40983c:	movnti DWORD PTR [ebx],edi
  40983f:	sbb    BYTE PTR [bx+di+0x67],0xaf
  409844:	push   ebp
  409845:	mov    ah,0x1d
  409847:	cmp    BYTE PTR [ecx+0x18],dh
  40984a:	xor    bl,BYTE PTR [ebp+0x5f4c7c50]
  409850:	cmp    al,0x9e
  409852:	add    eax,0x575d1b79
  409857:	jb     0x409880
  409859:	addr16 inc edx
  40985b:	es pop ebp
  40985d:	outs   dx,BYTE PTR ds:[esi]
  40985e:	jmp    0x5b5864de
  409863:	and    dh,BYTE PTR [ecx-0x5ec7dbd3]
  409869:	sub    DWORD PTR [ecx+0x5d],ebp
  40986c:	jno    0x409895
  40986e:	push   ss
  40986f:	cmp    edx,DWORD PTR [ebp+0x182bf8e8]
  409875:	push   ds
  409876:	iret   
  409877:	sti    
  409878:	es mov bh,0xc6
  40987b:	jl     0x4098a7
  40987d:	jmp    0x40980b
  40987f:	fisttp DWORD PTR [ecx-0xc]
  409882:	stos   DWORD PTR es:[edi],eax
  409883:	scas   al,BYTE PTR es:[edi]
  409884:	je     0x409806
  409886:	dec    esp
  409887:	icebp  
  409888:	jb     0x4098a7
  40988a:	das    
  40988b:	int    0x46
  40988d:	jbe    0x409852
  40988f:	lock popf 
  409891:	add    cl,ch
  409893:	rol    esp,0x50
  409896:	jp     0x4098ce
  409898:	add    BYTE PTR [eax-0x3a],bl
  40989b:	dec    edi
  40989c:	sub    DWORD PTR [ecx-0x30],0x8bb31473
  4098a3:	sub    eax,0xcf0625af
  4098a8:	add    eax,0x8c216c68
  4098ad:	sbb    al,ah
  4098af:	data16 clc 
  4098b1:	sbb    edi,DWORD PTR [ebx]
  4098b3:	adc    eax,0x46ee83af
  4098b9:	add    edi,ecx
  4098bb:	inc    edi
  4098bc:	mov    esi,0xa96c5c21
  4098c1:	sbb    ebx,eax
  4098c3:	add    eax,0x2f1bf54d
  4098c8:	or     bh,bl
  4098ca:	outs   dx,DWORD PTR ds:[esi]
  4098cb:	push   edx
  4098cc:	push   es
  4098cd:	stos   DWORD PTR es:[edi],eax
  4098ce:	mov    dl,al
  4098d0:	dec    esp
  4098d1:	jge    0x4098c4
  4098d3:	loop   0x409869
  4098d5:	sub    BYTE PTR [esi-0x49fb8e70],0x25
  4098dc:	mov    ch,0x84
  4098de:	mov    ecx,0xa2fc077f
  4098e3:	das    
  4098e4:	inc    esp
  4098e5:	cmp    al,0xf4
  4098e7:	push   cs
  4098e8:	jo     0x409919
  4098ea:	es (bad) 
  4098ec:	push   edx
  4098ed:	lea    esi,[ebp+0x5548f2f3]
  4098f3:	fmul   DWORD PTR [ebx+0x76a9126d]
  4098f9:	and    BYTE PTR gs:[eax],bh
  4098fc:	jmp    0x76f6:0xdc9f4fe5
  409903:	stos   BYTE PTR es:[edi],al
  409904:	cmp    bh,ch
  409906:	loope  0x409898
  409908:	lock outs dx,DWORD PTR ds:[esi]
  40990a:	or     DWORD PTR [edi+0x3e5d9e11],eax
  409910:	jle    0x40995f
  409912:	test   DWORD PTR [ebp+0x7173dbd5],edx
  409918:	sbb    cl,BYTE PTR [esp+edx*1+0x5d]
  40991c:	out    dx,eax
  40991d:	and    dl,cl
  40991f:	fcomp  DWORD PTR [edi]
  409921:	xchg   esp,eax
  409922:	sbb    ebx,DWORD PTR [eax-0x626b5279]
  409928:	xchg   esi,eax
  409929:	xor    esi,DWORD PTR [ebp+0x407325d6]
  40992f:	inc    ebp
  409930:	rol    BYTE PTR [edi-0x19dcecb0],1
  409936:	(bad)  
  409937:	aaa    
  409938:	fs jmp 0x3564cadb
  40993e:	call   0x6b8c:0xcabf62f5
  409945:	stos   DWORD PTR es:[edi],eax
  409946:	ret    0xc472
  409949:	frstor [eax]
  40994b:	xchg   edi,eax
  40994c:	clc    
  40994d:	xchg   edi,eax
  40994e:	xchg   esi,eax
  40994f:	jo     0x4098d7
  409951:	lds    ebx,FWORD PTR [ebx+edi*8+0x24]
  409955:	jo     0x4098e3
  409957:	mov    ds:0xc1b91072,al
  40995c:	mov    BYTE PTR [esi+0x2c],cl
  40995f:	sub    al,0xba
  409961:	in     eax,0x1a
  409963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409964:	fadd   DWORD PTR [esi+0x6ec6dfdd]
  40996a:	pop    ds
  40996b:	dec    ebx
  40996c:	pop    esp
  40996d:	or     BYTE PTR [ebp+0x2d4f8ede],ch
  409973:	into   
  409974:	lods   eax,DWORD PTR ds:[esi]
  409975:	ficomp DWORD PTR [edx]
  409977:	or     al,0x13
  409979:	add    al,BYTE PTR [ecx+0x7ca90f6f]
  40997f:	aas    
  409980:	shr    bh,0xc9
  409983:	inc    esi
  409984:	pop    esi
  409985:	add    bl,bl
  409987:	inc    BYTE PTR [ebx-0x3c6c95c]
  40998d:	add    al,0x3a
  40998f:	sti    
  409990:	mov    dl,0x70
  409992:	shl    DWORD PTR [esi+0x17],cl
  409995:	dec    esi
  409996:	(bad)  
  409997:	hlt    
  409998:	pop    eax
  409999:	fwait
  40999a:	(bad)  
  40999b:	dec    edi
  40999c:	enter  0x7bef,0x24
  4099a0:	cs jbe 0x409949
  4099a3:	ja     0x4099ee
  4099a5:	xor    edi,edi
  4099a7:	or     BYTE PTR [eax+0x48],ch
  4099aa:	sbb    dl,ah
  4099ac:	retf   
  4099ad:	and    eax,0x35116562
  4099b2:	sub    DWORD PTR [eax+0x39],esi
  4099b5:	push   cs
  4099b6:	imul   ebp,esp,0x9
  4099b9:	cwde   
  4099ba:	arpl   WORD PTR [ebp-0x6b2d05f2],dx
  4099c0:	cs jno 0x409951
  4099c3:	aaa    
  4099c4:	push   esp
  4099c5:	xchg   esi,eax
  4099c6:	shl    DWORD PTR [esi],1
  4099c8:	sar    DWORD PTR [ecx],1
  4099ca:	cmp    esp,ecx
  4099cc:	push   ds
  4099cd:	add    dh,BYTE PTR [edx]
  4099cf:	mov    dh,0x34
  4099d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099d2:	data16 sbb BYTE PTR [ecx],al
  4099d5:	das    
  4099d6:	mov    ecx,0x9c3d9394
  4099db:	xor    edi,DWORD PTR [ebp+0x56f9f7ad]
  4099e1:	out    dx,al
  4099e2:	jge    0x409a56
  4099e4:	fcomp  QWORD PTR [ebx-0x16]
  4099e7:	rol    DWORD PTR [esi+0x39a17e02],1
  4099ed:	sahf   
  4099ee:	and    eax,DWORD PTR [esi-0x58]
  4099f1:	cmp    BYTE PTR [eax-0x65f0cabe],al
  4099f7:	dec    esi
  4099f8:	jo     0x4099bd
  4099fa:	stos   DWORD PTR es:[edi],eax
  4099fb:	lds    edi,FWORD PTR [ebp+0x62f3712c]
  409a01:	mov    edx,0x614834ce
  409a06:	test   DWORD PTR [ebx+0x29],ebp
  409a09:	data16 or bh,BYTE PTR [ebx-0x3a]
  409a0d:	mov    edx,DWORD PTR [eax+0x6cecbc7b]
  409a13:	sub    DWORD PTR [ecx-0x7a],ecx
  409a16:	in     al,0x6a
  409a18:	rcl    BYTE PTR [ebx-0x37],1
  409a1b:	mov    esp,0xc5fabaaf
  409a20:	daa    
  409a21:	ins    DWORD PTR es:[edi],dx
  409a22:	adc    BYTE PTR [edx+0x3e],ah
  409a25:	add    bl,BYTE PTR [edi+0x306448ef]
  409a2b:	xchg   BYTE PTR [ebx],ah
  409a2d:	jmp    0x6e6987
  409a32:	scas   al,BYTE PTR es:[edi]
  409a33:	ins    DWORD PTR es:[edi],dx
  409a34:	iret   
  409a35:	and    ebp,ecx
  409a37:	rcr    DWORD PTR [ebp-0x7f],1
  409a3a:	inc    ebx
  409a3b:	std    
  409a3c:	daa    
  409a3d:	enter  0x5ab1,0x58
  409a41:	pop    edi
  409a42:	inc    edx
  409a43:	test   DWORD PTR [ebx-0x4f],0x25b3fbd7
  409a4a:	and    al,cl
  409a4c:	scas   al,BYTE PTR es:[edi]
  409a4d:	cdq    
  409a4e:	jo     0x409a75
  409a50:	xor    al,0xcf
  409a52:	imul   ebp,ecx,0x94c10de4
  409a58:	mov    ah,0xdd
  409a5a:	push   ebx
  409a5b:	pop    edi
  409a5c:	dec    ebp
  409a5d:	les    esp,FWORD PTR [esi+ebp*1+0x48a22db6]
  409a64:	test   al,0x51
  409a66:	js     0x409a68
  409a68:	jns    0x4099ea
  409a6a:	and    dh,bh
  409a6c:	(bad)  
  409a6d:	dec    ebx
  409a6e:	out    0x57,eax
  409a70:	stos   DWORD PTR es:[edi],eax
  409a71:	cmp    esp,edx
  409a73:	cli    
  409a74:	cmp    bl,ch
  409a76:	scas   al,BYTE PTR es:[edi]
  409a77:	push   ecx
  409a78:	sub    BYTE PTR [edx+0x34310035],bh
  409a7e:	dec    edx
  409a7f:	imul   edi,DWORD PTR [edi-0x2381ea70],0xffffffb1
  409a86:	dec    ebp
  409a87:	fs inc edi
  409a89:	stos   DWORD PTR es:[edi],eax
  409a8a:	loope  0x409a5c
  409a8c:	mov    ch,0xf6
  409a8e:	inc    eax
  409a8f:	pminub mm5,QWORD PTR [ebx+0x27]
  409a93:	scas   eax,DWORD PTR es:[edi]
  409a94:	enter  0xc438,0xc5
  409a98:	data16 cli 
  409a9a:	aam    0x3b
  409a9c:	les    ebp,FWORD PTR [ecx-0x2d033c0c]
  409aa2:	cmp    eax,0x28cbc1be
  409aa7:	(bad)  
  409aa8:	ret    0x7883
  409aab:	mov    al,ds:0x9dcd0364
  409ab0:	(bad)  
  409ab1:	xor    BYTE PTR [edi+0x5a],bh
  409ab4:	xor    eax,0x5688c7d4
  409ab9:	mov    ecx,DWORD PTR ds:0x422008
  409abf:	add    ecx,DWORD PTR ds:0x420e82
  409ac5:	mov    DWORD PTR ds:0x422008,ecx
  409acb:	mov    esi,0xf89c85b5
  409ad0:	mov    DWORD PTR [ebp-0xc],esi
  409ad3:	mov    edx,DWORD PTR ds:0x420f34
  409ad9:	mov    ecx,DWORD PTR ds:0x42301c
  409adf:	sub    ecx,edx
  409ae1:	sub    edx,DWORD PTR [edx+ecx*1]
  409ae4:	lea    eax,[ebp-0xc]
  409ae7:	or     ecx,edx
  409ae9:	mov    DWORD PTR [ebp-0x14],eax
  409aec:	mov    eax,DWORD PTR [ebp-0xc]
  409aef:	mov    edx,DWORD PTR [ebp-0x14]
  409af2:	sbb    DWORD PTR ds:0x420fa0,ebx
  409af8:	mov    ecx,0x7510896
  409afd:	xor    eax,ecx
  409aff:	add    eax,0x3272dd
  409b04:	mov    DWORD PTR [edx],eax
  409b06:	mov    edx,DWORD PTR ds:0x42201c
  409b0c:	sbb    DWORD PTR ds:0x420ef0,edx
  409b12:	mov    eax,ds:0x4242ad
  409b17:	mov    edx,DWORD PTR [ebp-0x4]
  409b1a:	sbb    DWORD PTR ds:0x420fac,0x420e82
  409b24:	mov    eax,DWORD PTR [eax]
  409b26:	or     DWORD PTR ds:0x420f08,0x422000
  409b30:	add    eax,DWORD PTR [edx]
  409b32:	push   edi
  409b33:	mov    DWORD PTR [ebp-0x8],eax
  409b36:	jmp    0x40beb0
  409b3b:	popa   
  409b3c:	dec    edi
  409b3d:	jmp    0x409b64
  409b3f:	mov    ebx,0xf1fba379
  409b44:	jnp    0x409bbc
  409b46:	js     0x409aca
  409b48:	push   0x4392b39
  409b4d:	jp     0x409bc9
  409b4f:	sbb    DWORD PTR [edi+0x7a],ebx
  409b52:	jp     0x409b59
  409b54:	retf   
  409b55:	dec    ecx
  409b56:	add    edi,DWORD PTR [ebx+0x91db7b2]
  409b5c:	pushf  
  409b5d:	push   ds
  409b5e:	dec    ebx
  409b5f:	mov    bh,0xce
  409b61:	xchg   edi,eax
  409b62:	(bad)  
  409b63:	fadd   st(0),st
  409b65:	fistp  DWORD PTR [edx]
  409b67:	and    edx,ecx
  409b69:	icebp  
  409b6a:	in     al,0xaf
  409b6c:	ror    DWORD PTR [edx-0x12],1
  409b6f:	lar    edx,WORD PTR [edi+ebp*2-0x2b]
  409b74:	jmp    0x8c1d:0x9af854ad
  409b7b:	je     0x409be9
  409b7d:	fnstcw WORD PTR [ebx+0x79dd2d80]
  409b83:	sub    bl,cl
  409b85:	push   es
  409b86:	xchg   edx,eax
  409b87:	xchg   edi,eax
  409b88:	xor    cl,al
  409b8a:	addr16 push esp
  409b8c:	sbb    al,BYTE PTR [edx+0xc]
  409b8f:	mov    edx,0xb79b73e4
  409b94:	adc    BYTE PTR [eax-0x45d0703b],bl
  409b9a:	or     DWORD PTR [ecx-0x3d],esi
  409b9d:	daa    
  409b9e:	lods   al,BYTE PTR ds:[esi]
  409b9f:	neg    BYTE PTR [ecx]
  409ba1:	mov    eax,ds:0xd3810cd3
  409ba6:	mov    esp,0x4023c3ec
  409bab:	sbb    al,0xa3
  409bad:	shr    DWORD PTR [ecx],cl
  409baf:	out    0xac,eax
  409bb1:	add    al,BYTE PTR [edi+0x6]
  409bb4:	test   eax,0x5ade1ae3
  409bb9:	shl    DWORD PTR [ebx+0x46],cl
  409bbc:	push   ebx
  409bbd:	ins    DWORD PTR es:[edi],dx
  409bbe:	add    BYTE PTR [esi],cl
  409bc0:	dec    ebx
  409bc1:	and    BYTE PTR [edi-0x34a1e081],bh
  409bc7:	cmovle ebp,DWORD PTR [ecx-0x6e]
  409bcb:	dec    eax
  409bcc:	jl     0x409c25
  409bce:	hlt    
  409bcf:	out    0x8e,eax
  409bd1:	jo     0x409b64
  409bd3:	dec    esi
  409bd4:	cmp    BYTE PTR [esi],ch
  409bd6:	ja     0x409be4
  409bd8:	ds imul esp,esi,0xffffff92
  409bdc:	aad    0x3c
  409bde:	sub    ebx,DWORD PTR [esi]
  409be0:	adc    DWORD PTR [ebx-0x70],esp
  409be3:	cmp    al,0xfb
  409be5:	inc    ebp
  409be6:	xor    ebx,DWORD PTR [edi-0x4a77392b]
  409bec:	mul    ch
  409bee:	inc    esp
  409bef:	lahf   
  409bf0:	jbe    0x409bf1
  409bf2:	fwait
  409bf3:	imul   ebp,edx,0x4aa9a141
  409bf9:	stos   BYTE PTR es:[edi],al
  409bfa:	les    esi,FWORD PTR [eax-0x59]
  409bfd:	fnstcw WORD PTR [ebp+0x57]
  409c00:	into   
  409c01:	stos   DWORD PTR es:[edi],eax
  409c02:	fstp   DWORD PTR [edi]
  409c04:	add    al,0x97
  409c06:	and    esi,0x7881710a
  409c0c:	push   ebp
  409c0d:	mov    al,0x94
  409c0f:	iret   
  409c10:	jg     0x409c33
  409c12:	mov    ebp,0x9655ba0b
  409c17:	je     0x409c7d
  409c19:	rol    bl,1
  409c1b:	daa    
  409c1c:	shl    BYTE PTR [ecx],0x81
  409c1f:	dec    DWORD PTR [ebx-0x79]
  409c22:	mov    al,0x1e
  409c24:	gs pop edi
  409c26:	out    dx,eax
  409c27:	push   edi
  409c28:	aad    0x44
  409c2a:	loop   0x409c5a
  409c2c:	or     ch,BYTE PTR [ebx]
  409c2e:	xchg   DWORD PTR [esi-0x6119402],edx
  409c34:	sbb    al,dh
  409c36:	enter  0xde9c,0x41
  409c3a:	mov    bh,0x19
  409c3c:	jns    0x409c4e
  409c3e:	std    
  409c3f:	mov    BYTE PTR [ebx-0x716f1300],dl
  409c45:	or     DWORD PTR [edx-0x32f79839],edx
  409c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c4c:	aam    0xd6
  409c4e:	outs   dx,DWORD PTR ds:[esi]
  409c4f:	cmp    eax,0x62f71e7e
  409c54:	push   0xffffff8f
  409c56:	imul   edx,eax,0x61
  409c59:	or     DWORD PTR [eax+ecx*8-0x15],esi
  409c5d:	add    eax,0x4d28ee4f
  409c62:	rep lods eax,DWORD PTR ds:[esi]
  409c64:	pop    es
  409c65:	mov    edi,0x5d2deefb
  409c6a:	and    al,0x67
  409c6c:	sub    eax,0x27e1658e
  409c71:	and    eax,0xf3c468a0
  409c76:	pushf  
  409c77:	(bad)  
  409c78:	(bad)  [eax]
  409c7a:	into   
  409c7b:	cmp    al,0x5b
  409c7d:	mov    dl,0x88
  409c7f:	jbe    0x409c57
  409c81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c82:	fwait
  409c83:	mov    dl,0xfa
  409c85:	xchg   edi,eax
  409c86:	adc    dh,BYTE PTR [ebx-0x6d]
  409c89:	ret    0xd664
  409c8c:	lds    eax,FWORD PTR [ebx+0x5e]
  409c8f:	in     al,dx
  409c90:	or     edi,ebp
  409c92:	add    ch,BYTE PTR [esi+0x57004269]
  409c98:	loope  0x409cee
  409c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c9b:	sub    ah,BYTE PTR [esi]
  409c9d:	push   es
  409c9e:	cmp    al,0x26
  409ca0:	shr    BYTE PTR [ecx+eax*8],1
  409ca3:	fbld   TBYTE PTR [edx]
  409ca5:	inc    ebx
  409ca6:	jmp    0xa128:0x1f0ef960
  409cad:	call   0xad8c4f6d
  409cb2:	sbb    eax,0xc9d8a6ad
  409cb7:	scas   eax,DWORD PTR es:[edi]
  409cb8:	fdivr  DWORD PTR [edi]
  409cba:	sub    al,BYTE PTR [esp+edi*8]
  409cbd:	fmul   QWORD PTR [ebp+0xd47d8df]
  409cc3:	xchg   esi,eax
  409cc4:	retf   
  409cc5:	lods   al,BYTE PTR ds:[esi]
  409cc6:	inc    edi
  409cc7:	es int3 
  409cc9:	fst    DWORD PTR [eax]
  409ccb:	pop    es
  409ccc:	mov    bh,0x26
  409cce:	(bad)  
  409ccf:	ins    BYTE PTR es:[edi],dx
  409cd0:	fist   DWORD PTR [ebx]
  409cd2:	or     DWORD PTR [esi+ecx*2],edx
  409cd5:	imul   edi,DWORD PTR [edi],0x59
  409cd8:	fidivr DWORD PTR [esi+0x68b88d08]
  409cde:	outs   dx,DWORD PTR ds:[esi]
  409cdf:	and    BYTE PTR ds:0x3eeafb12,ah
  409ce5:	pop    eax
  409ce6:	mov    dl,0x34
  409ce8:	(bad)  
  409ce9:	out    dx,eax
  409cea:	in     eax,0x89
  409cec:	dec    ebp
  409ced:	les    eax,FWORD PTR [esi]
  409cef:	cmp    ch,BYTE PTR [esi]
  409cf1:	push   ebp
  409cf2:	xor    ch,cl
  409cf4:	mov    esi,0x649f8ad2
  409cf9:	test   dl,ch
  409cfb:	inc    esi
  409cfc:	mov    BYTE PTR [edx-0x1afa0ee5],cl
  409d02:	mov    edi,0x38c649e3
  409d07:	xchg   edi,eax
  409d08:	jnp    0x409cef
  409d0a:	add    al,0x34
  409d0c:	mov    BYTE PTR [esi],bh
  409d0e:	mov    esi,0xd095aba6
  409d13:	popa   
  409d14:	sbb    eax,ebx
  409d16:	in     al,0x45
  409d18:	sbb    ch,cl
  409d1a:	in     al,0xe5
  409d1c:	(bad)  
  409d1e:	jb     0x409d60
  409d20:	jg     0x409d37
  409d22:	add    eax,0x40130d50
  409d27:	xlat   BYTE PTR ds:[ebx]
  409d28:	test   BYTE PTR [edx+0x13e62e9f],al
  409d2e:	fisubr WORD PTR [edi]
  409d30:	xchg   edi,eax
  409d31:	sbb    BYTE PTR [edi-0x32],ch
  409d34:	xchg   edx,eax
  409d35:	jge    0x409d9f
  409d37:	int3   
  409d38:	mov    al,0x79
  409d3a:	je     0x409cf1
  409d3c:	test   DWORD PTR [eax],ecx
  409d3e:	push   esi
  409d3f:	(bad)  
  409d40:	mov    edx,0xbf7cef2c
  409d45:	mov    ebx,0xf58962b9
  409d4a:	mov    esi,0xf4c2aba6
  409d4f:	icebp  
  409d50:	(bad)  
  409d51:	ds in  al,0xe5
  409d54:	jp     0x409d4b
  409d56:	loope  0x409dd6
  409d58:	shr    DWORD PTR [ebp+0x79d00aea],0xb1
  409d5f:	scas   eax,DWORD PTR es:[edi]
  409d60:	mov    esi,0x8fb19d41
  409d65:	sar    BYTE PTR ds:0xe52e9b9a,1
  409d6b:	push   es
  409d6c:	cmp    esp,DWORD PTR [ebp-0x3e]
  409d6f:	sbb    ch,dl
  409d71:	xchg   edx,eax
  409d72:	fs jp  0x409dde
  409d75:	xor    al,0x11
  409d77:	outs   dx,BYTE PTR ds:[esi]
  409d78:	mov    bh,0x6e
  409d7a:	les    esi,FWORD PTR [ecx+0x5c]
  409d7d:	iret   
  409d7e:	sbb    al,0x3b
  409d80:	shl    edi,cl
  409d82:	sbb    esp,esp
  409d84:	mov    WORD PTR [ecx],fs
  409d86:	jne    0x409dbc
  409d88:	jl     0x409d96
  409d8a:	in     eax,dx
  409d8b:	pop    esi
  409d8c:	test   eax,0x628355e8
  409d91:	dec    DWORD PTR [ebx-0x699c20b1]
  409d97:	pop    ecx
  409d98:	mov    dl,ah
  409d9a:	dec    esi
  409d9b:	sbb    DWORD PTR ds:0xe5ad0b84,esp
  409da1:	sbb    BYTE PTR [edx+0x2240d402],dh
  409da7:	jecxz  0x409dd9
  409da9:	stc    
  409daa:	icebp  
  409dab:	imul   edx,DWORD PTR [ebx+0x3c],0x35
  409daf:	dec    DWORD PTR [edx]
  409db1:	xlat   BYTE PTR ds:[ebx]
  409db2:	mov    edx,0x677bca48
  409db7:	xchg   esp,eax
  409db8:	adc    esi,DWORD PTR [eax]
  409dba:	sbb    esp,eax
  409dbc:	jae    0x409e16
  409dbe:	adc    edi,DWORD PTR [esi-0x2cfdcffb]
  409dc4:	dec    ecx
  409dc5:	add    ecx,edi
  409dc7:	popa   
  409dc8:	add    eax,0xff564542
  409dcd:	or     al,0xbf
  409dcf:	imul   esi,esi,0xc947af26
  409dd5:	xchg   ebp,eax
  409dd6:	imul   edi,DWORD PTR [edx+0x5d603397],0x78
  409ddd:	cmp    BYTE PTR [edx-0x6c],al
  409de0:	jno    0x409df9
  409de2:	enter  0x4fcd,0xc6
  409de6:	in     eax,dx
  409de7:	pop    eax
  409de8:	int3   
  409de9:	xchg   BYTE PTR [ebp+0x8f11085],cl
  409def:	retf   0x40c0
  409df2:	nop
  409df3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409df4:	sub    dh,BYTE PTR [ebx-0x313d74a1]
  409dfa:	jmp    0xa433:0x827ab8e6
  409e01:	pop    edx
  409e02:	fwait
  409e03:	push   eax
  409e04:	(bad)  
  409e05:	xor    eax,0x4ca5b17b
  409e0a:	(bad)  
  409e0c:	cmp    edi,eax
  409e0e:	push   ebp
  409e0f:	and    edx,ecx
  409e11:	dec    eax
  409e12:	pop    edi
  409e13:	adc    al,0x6e
  409e15:	in     eax,dx
  409e16:	jg     0x409daa
  409e18:	outs   dx,DWORD PTR ds:[esi]
  409e19:	mov    ecx,0xccaeee19
  409e1e:	(bad)  
  409e1f:	or     al,0x5d
  409e21:	xchg   ebp,esi
  409e23:	mov    WORD PTR [ecx-0x36],ss
  409e26:	push   ebx
  409e27:	jge    0x409db4
  409e29:	xchg   esi,eax
  409e2a:	inc    edi
  409e2b:	mov    dh,0x73
  409e2d:	mov    eax,ds:0xca10cc8e
  409e32:	add    al,0x52
  409e34:	outs   dx,DWORD PTR ds:[esi]
  409e35:	fnsave [ebx+0x789f7c63]
  409e3b:	jmp    0xb7645950
  409e40:	ret    
  409e41:	jne    0x409de8
  409e43:	sub    eax,0xe428b1ff
  409e48:	sub    eax,0xee1d376e
  409e4d:	jb     0x409e35
  409e4f:	add    al,0xa
  409e51:	pop    edx
  409e52:	xchg   DWORD PTR [ecx+0x150dc77d],esi
  409e58:	test   ah,al
  409e5a:	es in  al,dx
  409e5c:	mov    eax,ds:0xc7efda5e
  409e61:	xor    eax,0x4f1ed5cd
  409e66:	or     al,0xb8
  409e68:	stos   BYTE PTR es:[edi],al
  409e69:	rcl    BYTE PTR [ebp+0x3235d283],1
  409e6f:	lods   al,BYTE PTR ds:[esi]
  409e70:	mov    WORD PTR [eax+0x34],es
  409e73:	loop   0x409ee0
  409e75:	and    eax,0x3e2b345d
  409e7a:	pop    ebp
  409e7b:	retf   
  409e7c:	mov    eax,0x79d5866c
  409e81:	bound  edi,QWORD PTR [eax-0x2052c68b]
  409e87:	push   eax
  409e88:	mov    bl,0x9f
  409e8a:	cli    
  409e8b:	es cmp dl,dh
  409e8e:	ja     0x409e76
  409e90:	push   edi
  409e91:	inc    esi
  409e92:	pop    eax
  409e93:	push   0xffffff84
  409e95:	jge    0x409ef7
  409e97:	pop    ss
  409e98:	xor    edx,DWORD PTR [eax+0xb]
  409e9b:	cli    
  409e9c:	test   BYTE PTR [esi-0x75],al
  409e9f:	xchg   ebp,eax
  409ea0:	rol    esp,1
  409ea2:	sahf   
  409ea3:	cmp    BYTE PTR [edx],ah
  409ea5:	lods   eax,DWORD PTR ds:[esi]
  409ea6:	adc    bl,BYTE PTR [edx+ebx*8]
  409ea9:	dec    eax
  409eaa:	mov    eax,0xf0fa2ed3
  409eaf:	or     al,0xdc
  409eb1:	mov    edi,0xcebdad17
  409eb6:	mov    dh,0xe1
  409eb8:	imul   esp,DWORD PTR [edi+ecx*2-0x11],0x6ee4e9ac
  409ec0:	fistp  DWORD PTR [edx]
  409ec2:	sar    BYTE PTR ds:[eax+0x78b7bc78],cl
  409ec9:	adc    DWORD PTR [edi],edi
  409ecb:	mov    dh,0xed
  409ecd:	stos   BYTE PTR es:[edi],al
  409ece:	mov    WORD PTR [edx],?
  409ed0:	dec    esi
  409ed1:	dec    ebx
  409ed2:	aam    0xb2
  409ed4:	mov    dh,0x43
  409ed6:	cmp    BYTE PTR ds:0xf4133ca7,dh
  409edc:	mov    dl,0x1e
  409ede:	les    edx,FWORD PTR ds:0x2e52de34
  409ee4:	dec    eax
  409ee5:	dec    eax
  409ee6:	push   esp
  409ee7:	dec    ebp
  409ee8:	mov    ebx,0xceab845c
  409eed:	dec    ebx
  409eee:	ror    DWORD PTR [esi],0x34
  409ef1:	or     ch,BYTE PTR [edx]
  409ef3:	into   
  409ef4:	cs ins BYTE PTR es:[edi],dx
  409ef6:	push   cs
  409ef7:	mov    ds:0x58a1c0d4,al
  409efc:	retf   0x134b
  409eff:	ror    DWORD PTR [esp+ecx*4-0x406e7e07],1
  409f06:	cli    
  409f07:	sbb    edx,DWORD PTR [ecx+0x7e40c4e0]
  409f0d:	and    eax,0x1f079247
  409f12:	push   esp
  409f13:	sub    esi,DWORD PTR [ebp+0x34]
  409f16:	push   esp
  409f17:	pop    edx
  409f18:	sbb    ah,BYTE PTR [ebx+edi*8+0x2d]
  409f1c:	add    eax,0x83b440b4
  409f21:	ror    BYTE PTR [esi-0x2d],0x2e
  409f25:	fsubp  st(4),st
  409f27:	dec    esp
  409f28:	mov    al,0x70
  409f2a:	pusha  
  409f2b:	(bad)
  409f2e:	aaa    
  409f2f:	ret    
  409f30:	pop    ss
  409f31:	add    bh,dh
  409f33:	or     edx,ecx
  409f35:	or     DWORD PTR [ebx+0x36f1ebcf],eax
  409f3b:	inc    esp
  409f3c:	adc    cl,BYTE PTR [edx]
  409f3e:	(bad)  
  409f3f:	fsub   QWORD PTR [ebx+0x6a]
  409f42:	xor    ch,ah
  409f44:	pop    es
  409f45:	or     eax,0xad81c86f
  409f4a:	jp     0x409f8d
  409f4c:	ret    
  409f4d:	pushf  
  409f4e:	fisub  DWORD PTR [edi]
  409f50:	rcr    ebx,1
  409f52:	lods   al,BYTE PTR ds:[esi]
  409f53:	xor    eax,0xa10b87b5
  409f58:	imul   esi,DWORD PTR [ecx-0x70e5a868],0x7c4fd8ff
  409f62:	lods   eax,DWORD PTR ds:[esi]
  409f63:	lds    ebp,FWORD PTR [esi-0x11b1e8bf]
  409f69:	sbb    bh,BYTE PTR [edi+esi*2-0xb15163c]
  409f70:	stos   BYTE PTR es:[di],al
  409f72:	jne    0x409f09
  409f74:	or     eax,0xd7dc4af8
  409f79:	sub    BYTE PTR [ecx],0xf1
  409f7c:	outs   dx,DWORD PTR ds:[esi]
  409f7d:	add    esi,DWORD PTR [edi+0x52c1490e]
  409f83:	aad    0x65
  409f85:	and    esp,esp
  409f87:	xchg   edx,eax
  409f88:	test   ax,0x3d4a
  409f8c:	sahf   
  409f8d:	mov    ebx,0x2114945e
  409f92:	int3   
  409f93:	push   edx
  409f94:	lods   eax,DWORD PTR ds:[esi]
  409f95:	es in  al,dx
  409f97:	int    0xcf
  409f99:	mov    esi,0xce7e2a0d
  409f9e:	push   edx
  409f9f:	xor    BYTE PTR [eax+eiz*1],dl
  409fa2:	in     ax,dx
  409fa4:	je     0x409f6d
  409fa6:	mov    esi,DWORD PTR [ebp-0x43]
  409fa9:	pop    ds
  409faa:	pop    ebx
  409fab:	test   al,0x9c
  409fad:	adc    dh,BYTE PTR [ecx+0x2b050dcf]
  409fb3:	lods   al,BYTE PTR ds:[esi]
  409fb4:	rol    eax,1
  409fb6:	jno    0x409f3a
  409fb8:	in     eax,dx
  409fb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fba:	and    al,0x4b
  409fbc:	and    eax,0x68411469
  409fc1:	xor    DWORD PTR [ecx],ebx
  409fc3:	xlat   BYTE PTR ds:[ebx]
  409fc4:	lods   eax,DWORD PTR ds:[esi]
  409fc5:	fdiv   DWORD PTR [ecx+0x4639a103]
  409fcb:	(bad)  
  409fcc:	mov    esp,0x56738b22
  409fd1:	enter  0x6e11,0xdd
  409fd5:	das    
  409fd6:	retf   
  409fd7:	xchg   esi,eax
  409fd8:	add    BYTE PTR [ecx-0x51dd3e11],cl
  409fde:	dec    ecx
  409fdf:	daa    
  409fe0:	push   ecx
  409fe1:	loop   0x409f90
  409fe3:	fcom   QWORD PTR [ecx]
  409fe5:	jg     0x40a065
  409fe7:	je     0x409f78
  409fe9:	jns    0x409f89
  409feb:	in     al,0xad
  409fed:	stc    
  409fee:	cmp    DWORD PTR [ebx],ebx
  409ff0:	adc    BYTE PTR [edx],al
  409ff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ff3:	mov    ecx,0x8e7288c3
  409ff8:	in     eax,0x27
  409ffa:	add    BYTE PTR [eax+0xa],ah
  409ffd:	jns    0x409f85
  409fff:	push   edi
  40a000:	sbb    edx,esi
  40a002:	out    dx,al
  40a003:	iret   
  40a004:	aam    0x81
  40a006:	mov    al,0x54
  40a008:	push   0xbaa7562d
  40a00d:	scas   eax,DWORD PTR es:[edi]
  40a00e:	mov    bh,0x69
  40a010:	clc    
  40a011:	retf   0x913e
  40a014:	jge    0x40a019
  40a016:	xchg   BYTE PTR [ebx*8-0x33082c82],ah
  40a01d:	(bad)  
  40a01e:	call   0xee4e:0x4c9b29e1
  40a025:	retf   0xe563
  40a028:	lods   al,BYTE PTR ds:[esi]
  40a029:	mov    edi,0x28c87653
  40a02e:	push   ds
  40a02f:	adc    DWORD PTR [esi+0x21],ebx
  40a032:	fsubp  st(6),st
  40a034:	jb     0x409fdc
  40a036:	es in  al,dx
  40a038:	pop    eax
  40a039:	lds    ecx,FWORD PTR [ebx+0x6a784259]
  40a03f:	cmp    eax,0xd1600294
  40a044:	sbb    DWORD PTR [esi-0x374b7fbf],edi
  40a04a:	(bad)  
  40a04b:	mul    DWORD PTR [ebx+0x56]
  40a04e:	rol    BYTE PTR [eax+0x309885fc],1
  40a054:	cmp    ebx,DWORD PTR [ebx+0xd]
  40a057:	or     DWORD PTR [eax+0x6efd25c0],ecx
  40a05d:	pop    es
  40a05e:	cwde   
  40a05f:	es retf 0xf0c5
  40a063:	dec    edi
  40a064:	and    eax,0x355e5ef4
  40a069:	iret   
  40a06a:	inc    edi
  40a06b:	ins    BYTE PTR es:[edi],dx
  40a06c:	bound  ebx,QWORD PTR [ebp+0x5e4cf8d4]
  40a072:	and    DWORD PTR [ebp-0x6833183a],edx
  40a078:	mov    eax,ds:0x7c21093e
  40a07d:	pop    ds
  40a07e:	sbb    eax,0x72b324ef
  40a083:	add    ebp,DWORD PTR [eax]
  40a085:	jbe    0x40a0a3
  40a087:	jns    0x40a086
  40a089:	mul    DWORD PTR [esi-0x7d2e6637]
  40a08f:	inc    esi
  40a090:	adc    DWORD PTR [edi-0x7c],esp
  40a093:	outs   dx,DWORD PTR ds:[esi]
  40a094:	ins    BYTE PTR es:[edi],dx
  40a095:	mov    bl,0xd3
  40a097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a098:	cmc    
  40a099:	fs ds (bad) 
  40a09c:	xchg   edi,eax
  40a09d:	cdq    
  40a09e:	push   edx
  40a09f:	push   es
  40a0a0:	add    BYTE PTR [eax],ah
  40a0a2:	cmp    DWORD PTR [ecx+eax*8],ebp
  40a0a5:	outs   dx,BYTE PTR ds:[esi]
  40a0a6:	pop    ebp
  40a0a7:	fcmovu st,st(4)
  40a0a9:	adc    al,0xd0
  40a0ab:	inc    esi
  40a0ac:	inc    ebx
  40a0ad:	cmp    DWORD PTR [ebx],0xde5345e3
  40a0b3:	adc    al,0xee
  40a0b5:	adc    BYTE PTR [edi+0x7cdafd4b],ah
  40a0bb:	daa    
  40a0bc:	add    eax,0xe32cdb7
  40a0c1:	inc    edx
  40a0c3:	add    ebx,ebx
  40a0c5:	(bad)  
  40a0c6:	aas    
  40a0c7:	fwait
  40a0c8:	add    esp,esp
  40a0ca:	jge    0x40a10e
  40a0cc:	lock jbe 0x40a06c
  40a0cf:	not    DWORD PTR [edx]
  40a0d1:	and    DWORD PTR [edx+0x34eebb6],edx
  40a0d7:	xchg   ecx,eax
  40a0d8:	and    ch,dh
  40a0da:	test   al,0x8b
  40a0dc:	aas    
  40a0dd:	(bad)  
  40a0de:	call   0x9d6b:0x2336ff70
  40a0e5:	adc    DWORD PTR [esi],0x3962505c
  40a0eb:	ret    0x11ff
  40a0ee:	jge    0x40a074
  40a0f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0f1:	sub    eax,DWORD PTR [edx+0x2f0bbd67]
  40a0f7:	iret   
  40a0f8:	adc    edi,esp
  40a0fa:	out    0xbe,al
  40a0fc:	cmp    eax,0x8ee8ad1d
  40a101:	mov    eax,0xc12bb2b7
  40a106:	out    dx,al
  40a107:	pop    ebx
  40a108:	and    eax,0xf077b763
  40a10d:	mov    ds:0xd8614230,al
  40a112:	lods   al,BYTE PTR ds:[esi]
  40a113:	clc    
  40a114:	mov    al,ds:0x5aabca3f
  40a119:	mov    ds:0xf114d1fc,eax
  40a11e:	aam    0x3a
  40a120:	sbb    al,0x3
  40a122:	or     BYTE PTR ds:0x407ae031,0xe3
  40a129:	rol    BYTE PTR [ebx+edi*8+0x11],cl
  40a12d:	adc    DWORD PTR [ebp+0x2f],0x79
  40a131:	loopne 0x40a14c
  40a133:	mov    al,0xa7
  40a135:	addr16 push edi
  40a137:	ja     0x40a0bb
  40a139:	add    ebp,ecx
  40a13b:	aad    0x98
  40a13d:	call   0x85ca:0xa5915a4e
  40a144:	xor    cl,ah
  40a146:	mov    esp,0xceb4e90c
  40a14b:	cmp    al,0xa7
  40a14d:	dec    edx
  40a14e:	inc    esi
  40a14f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a150:	sbb    dh,BYTE PTR [edi+eax*1+0x1d]
  40a154:	and    ah,BYTE PTR [esi]
  40a156:	push   0xa6ef1c7b
  40a15b:	and    BYTE PTR [eax+0x2c4f7d75],ah
  40a161:	inc    ecx
  40a162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a163:	jge    0x40a114
  40a165:	je     0x40a18a
  40a167:	inc    ebx
  40a168:	inc    esi
  40a169:	jae    0x40a172
  40a16b:	dec    ebx
  40a16c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a16d:	(bad)  
  40a16e:	push   ecx
  40a16f:	sahf   
  40a170:	fsubr  DWORD PTR ds:0xbcd66d8
  40a176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a177:	and    BYTE PTR [esi+0x2],dl
  40a17a:	js     0x40a187
  40a17c:	pushf  
  40a17d:	mov    eax,0xfdffafc2
  40a182:	imul   esp,DWORD PTR [ebp+0x302067a3],0x9d24f6f2
  40a18c:	xchg   edi,eax
  40a18d:	sub    BYTE PTR [edx+eax*2],bh
  40a190:	cmp    al,0x60
  40a192:	int3   
  40a193:	mov    eax,ds:0xbd9c6d8
  40a198:	sub    BYTE PTR ds:0xb0288362,0xf9
  40a19f:	in     al,dx
  40a1a0:	test   al,0xf8
  40a1a2:	icebp  
  40a1a3:	sbb    DWORD PTR [edx+0x44],eax
  40a1a6:	xor    bl,BYTE PTR [ecx]
  40a1a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1a9:	jle    0x40a1a8
  40a1ab:	out    0x92,eax
  40a1ad:	xchg   ecx,edi
  40a1af:	push   ss
  40a1b0:	xor    ecx,edx
  40a1b2:	jno    0x40a13f
  40a1b4:	fiadd  WORD PTR [ebx]
  40a1b6:	inc    ebx
  40a1b7:	leave  
  40a1b8:	sbb    BYTE PTR [edx-0x745a8fd0],ah
  40a1be:	inc    edi
  40a1bf:	adc    BYTE PTR [ebx+esi*2+0x3a],bh
  40a1c3:	clc    
  40a1c4:	clc    
  40a1c5:	dec    edx
  40a1c6:	sbb    bh,BYTE PTR [ebp+eax*8-0x5]
  40a1ca:	(bad)  
  40a1cb:	ror    DWORD PTR [esi-0x3d],0x27
  40a1cf:	and    al,0x5a
  40a1d1:	xchg   ecx,eax
  40a1d2:	xlat   BYTE PTR ds:[ebx]
  40a1d3:	mov    eax,ds:0x8377a64d
  40a1d8:	dec    edi
  40a1d9:	add    al,0xbb
  40a1db:	push   eax
  40a1dc:	dec    edx
  40a1dd:	mov    eax,ds:0xb0975386
  40a1e2:	into   
  40a1e3:	cmp    eax,DWORD PTR [ebp-0xa4ac816]
  40a1e9:	cwde   
  40a1ea:	out    0xff,al
  40a1ec:	(bad)  
  40a1ed:	mov    dh,0xee
  40a1ef:	jge    0x40a1f9
  40a1f1:	cmp    BYTE PTR [edx],ch
  40a1f3:	dec    esi
  40a1f4:	adc    DWORD PTR [edx+edx*1+0x44],0xffffff94
  40a1f9:	test   al,0x1a
  40a1fb:	or     DWORD PTR [eax+0x44],edx
  40a1fe:	push   DWORD PTR [ecx]
  40a200:	cmp    al,0xdc
  40a202:	push   esi
  40a203:	test   al,0x1a
  40a205:	adc    cl,ch
  40a207:	cld    
  40a208:	enter  0xe36e,0x9c
  40a20c:	jmp    0x3540bdde
  40a211:	push   ebx
  40a212:	cli    
  40a213:	mov    dh,0x72
  40a215:	mov    edx,0xf1ca5867
  40a21a:	jmp    0xed2031ab
  40a21f:	or     al,BYTE PTR [ecx]
  40a221:	jmp    DWORD PTR [eax+edi*1+0x3c06f835]
  40a228:	mov    ebx,0xc8881939
  40a22d:	enter  0x7e7c,0x36
  40a231:	sbb    al,BYTE PTR [eax+0x27]
  40a234:	dec    ecx
  40a235:	sbb    eax,0x2da6ae5
  40a23a:	sti    
  40a23b:	lods   eax,DWORD PTR ds:[esi]
  40a23c:	xchg   esi,eax
  40a23d:	pop    es
  40a23e:	retf   0xd742
  40a241:	test   DWORD PTR [eax*2-0x15810702],esp
  40a248:	mov    ds:0xb40d597,eax
  40a24d:	cld    
  40a24e:	adc    dh,BYTE PTR [edi+eax*8-0x2491fe6f]
  40a255:	adc    si,WORD PTR [edi-0x11]
  40a259:	cmp    ecx,DWORD PTR [eax-0x53]
  40a25c:	mov    ah,cl
  40a25e:	lods   al,BYTE PTR ss:[esi]
  40a260:	in     eax,0xfd
  40a262:	js     0x40a209
  40a264:	shl    BYTE PTR [ebx+0x1d],1
  40a267:	mov    dl,0x97
  40a269:	jl     0x40a28c
  40a26b:	and    esp,ebp
  40a26d:	das    
  40a26e:	sub    al,0x5e
  40a270:	dec    esi
  40a271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a272:	js     0x40a22b
  40a274:	mov    ds:0xcb315466,eax
  40a279:	xchg   dl,dl
  40a27b:	inc    esp
  40a27c:	mov    eax,ds:0x2cc25797
  40a281:	xchg   BYTE PTR [edi-0x29],ch
  40a284:	inc    ecx
  40a285:	fistp  WORD PTR [edx]
  40a287:	add    eax,0x601d69cb
  40a28c:	xchg   edx,eax
  40a28d:	push   edi
  40a28e:	popf   
  40a28f:	scas   eax,DWORD PTR es:[edi]
  40a290:	mov    al,0x6a
  40a292:	(bad)  
  40a293:	pop    ss
  40a294:	repz jns 0x40a2b0
  40a297:	push   ds
  40a298:	scas   eax,DWORD PTR es:[edi]
  40a299:	shr    edi,cl
  40a29b:	jg     0x40a241
  40a29d:	call   0x4781:0xd0b64cc1
  40a2a4:	and    al,BYTE PTR [ecx+0x72]
  40a2a7:	(bad)  
  40a2a8:	cld    
  40a2a9:	ins    DWORD PTR es:[edi],dx
  40a2aa:	int3   
  40a2ab:	ds pop ds
  40a2ad:	ins    DWORD PTR es:[edi],dx
  40a2ae:	cmp    cl,BYTE PTR [ebx+0x5d]
  40a2b1:	lahf   
  40a2b2:	pop    ebx
  40a2b3:	xchg   edi,eax
  40a2b4:	(bad)
  40a2b7:	add    bl,BYTE PTR [ebx+0x36e6a57d]
  40a2bd:	cmp    al,0xd3
  40a2bf:	xchg   ecx,eax
  40a2c0:	jecxz  0x40a29e
  40a2c2:	call   0x1ebd:0x804ccf40
  40a2c9:	pop    ds
  40a2ca:	mov    dh,0x80
  40a2cc:	pop    ebx
  40a2cd:	das    
  40a2ce:	push   esp
  40a2cf:	out    0x46,al
  40a2d1:	imul   ecx,DWORD PTR [eax-0x1cb72924],0x81517cac
  40a2db:	mov    cs,WORD PTR [esi-0x47]
  40a2de:	sar    BYTE PTR [ebx+0x65],0xca
  40a2e2:	or     ebp,0x9e7ef49d
  40a2e8:	xchg   BYTE PTR [esi+0x19],ch
  40a2eb:	cmc    
  40a2ec:	frstor [edx-0x27]
  40a2ef:	pop    es
  40a2f0:	dec    edi
  40a2f1:	inc    ecx
  40a2f2:	xor    cl,BYTE PTR [edi+0x4d812576]
  40a2f8:	mov    ebp,ebp
  40a2fa:	jg     0x40a2f4
  40a2fc:	xor    DWORD PTR [ebp+0x30],ecx
  40a2ff:	mov    esi,0xf13c0a2b
  40a304:	fs mov cl,0xf8
  40a307:	mov    eax,0x3227ca39
  40a30c:	and    eax,DWORD PTR [esp+esi*1-0x535dd0bd]
  40a313:	out    0x92,al
  40a315:	rol    BYTE PTR [ebx+edi*1],0x94
  40a319:	push   0x3d
  40a31b:	sub    bh,ch
  40a31d:	cmp    DWORD PTR [ebx],esi
  40a31f:	mov    edi,0xd0485cf3
  40a324:	lahf   
  40a325:	fdiv   QWORD PTR [eax-0x3]
  40a328:	scas   eax,DWORD PTR es:[edi]
  40a329:	mov    ch,0x73
  40a32b:	nop    ecx
  40a32e:	pop    ebp
  40a32f:	and    ah,ch
  40a331:	xor    DWORD PTR [edi+0x44712d55],ecx
  40a337:	in     al,dx
  40a338:	(bad)  
  40a339:	jmp    0xf7b0da5d
  40a33e:	(bad)  
  40a33f:	mov    esp,0x7c268d34
  40a344:	adc    dh,BYTE PTR [eax+eiz*1-0x34]
  40a348:	mov    esp,0xd6920a1c
  40a34d:	pop    ecx
  40a34e:	popf   
  40a34f:	mov    cl,0x36
  40a351:	data16 fbld TBYTE PTR [ecx-0x645a2a74]
  40a358:	out    dx,eax
  40a359:	je     0x40a391
  40a35b:	ins    DWORD PTR es:[edi],dx
  40a35c:	xchg   edx,eax
  40a35d:	push   esp
  40a35e:	mov    ebp,0xddc4d3f
  40a363:	dec    ecx
  40a364:	loopne 0x40a2eb
  40a366:	jl     0x40a3c8
  40a368:	cli    
  40a369:	dec    ebx
  40a36a:	rcr    DWORD PTR [esi],1
  40a36c:	or     al,0xde
  40a36e:	aas    
  40a36f:	push   ecx
  40a370:	mov    edi,0x25e47c67
  40a375:	bswap  eax
  40a377:	ds dec eax
  40a379:	imul   ebx,DWORD PTR [eax],0xffffffb0
  40a37c:	outs   dx,BYTE PTR ds:[esi]
  40a37d:	and    ah,bh
  40a37f:	es pop edi
  40a381:	aas    
  40a382:	lods   al,BYTE PTR ds:[esi]
  40a383:	ds or  al,0xa1
  40a386:	pop    ebx
  40a387:	mov    ?,WORD PTR [ecx-0x2b]
  40a38a:	push   edx
  40a38b:	sahf   
  40a38c:	retf   0x3d53
  40a38f:	or     esp,DWORD PTR [edx]
  40a391:	test   ebp,ebx
  40a393:	push   ebp
  40a394:	cmp    eax,0xc239a6dc
  40a399:	sub    dh,0x19
  40a39c:	es push es
  40a39e:	dec    ebp
  40a39f:	test   al,0xc3
  40a3a1:	fcmovnbe st,st(4)
  40a3a3:	xor    al,0x13
  40a3a5:	mov    bl,0xbe
  40a3a7:	mov    ebx,eax
  40a3a9:	clc    
  40a3aa:	mov    ds:0x6df35d1e,eax
  40a3af:	clc    
  40a3b0:	push   ecx
  40a3b1:	push   es
  40a3b2:	pop    edx
  40a3b3:	retf   0x16f0
  40a3b6:	sub    ecx,ecx
  40a3b8:	push   cs
  40a3b9:	in     al,0x8f
  40a3bb:	mov    bl,0x37
  40a3bd:	mov    BYTE PTR [ecx+0x49],ch
  40a3c0:	je     0x40a3a3
  40a3c2:	sub    edx,DWORD PTR ds:0x4d13d1f9
  40a3c8:	xchg   BYTE PTR [eax+edx*1],ch
  40a3cb:	in     al,0xf7
  40a3cd:	mov    ebx,0x9e4461d4
  40a3d2:	aaa    
  40a3d3:	lods   al,BYTE PTR ds:[esi]
  40a3d4:	mov    esp,0xde63ad2e
  40a3d9:	mov    dh,0x7a
  40a3db:	fimul  DWORD PTR [ebx]
  40a3dd:	mov    bh,0x73
  40a3df:	cmp    eax,0xaadbf192
  40a3e4:	cmp    eax,0x60e4fc58
  40a3e9:	mov    ebp,DWORD PTR [ebp-0x20]
  40a3ec:	xor    eax,0xaad37089
  40a3f1:	ds pop edx
  40a3f3:	call   0x91278f5a
  40a3f8:	sub    DWORD PTR [esi-0x4322523e],esp
  40a3fe:	arpl   WORD PTR [eax-0x5d],ax
  40a401:	iret   
  40a402:	mov    al,0x78
  40a404:	cmp    BYTE PTR [esi+0x3c],0x1f
  40a408:	gs clc 
  40a40a:	cld    
  40a40b:	fiadd  DWORD PTR [esi+0x21]
  40a40e:	sub    ebx,ebp
  40a410:	mov    ecx,DWORD PTR [edx-0x7c]
  40a413:	std    
  40a414:	js     0x40a45e
  40a416:	cdq    
  40a417:	gs inc ebp
  40a419:	dec    esp
  40a41a:	scas   eax,DWORD PTR es:[edi]
  40a41b:	fcomi  st,st(1)
  40a41d:	jecxz  0x40a43e
  40a41f:	repz jle 0x40a415
  40a422:	jmp    0x40a471
  40a424:	inc    DWORD PTR [esi]
  40a426:	xchg   ebp,eax
  40a427:	xor    al,0xe0
  40a429:	sub    eax,0x704ce4a3
  40a42e:	int    0xb7
  40a430:	cwde   
  40a431:	pop    eax
  40a432:	je     0x40a415
  40a434:	out    dx,al
  40a435:	ret    0x2b8
  40a438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a439:	cli    
  40a43a:	inc    ebp
  40a43b:	inc    edi
  40a43c:	addr16 inc esi
  40a43e:	jno    0x40a402
  40a440:	out    0xc,al
  40a442:	(bad)  
  40a443:	jno    0x40a3ef
  40a445:	es shr edx,1
  40a448:	imul   eax,DWORD PTR [edx+ecx*1],0xffffffba
  40a44c:	popa   
  40a44d:	bswap  esp
  40a44f:	push   edi
  40a450:	sub    al,0xcf
  40a452:	les    eax,FWORD PTR [ebx-0x80]
  40a455:	or     esi,DWORD PTR [edx-0x2c]
  40a458:	push   edx
  40a459:	cld    
  40a45a:	fcmove st,st(4)
  40a45c:	popa   
  40a45d:	jle    0x40a427
  40a45f:	sbb    DWORD PTR [eax+0x2b],esi
  40a462:	inc    edi
  40a463:	nop
  40a464:	imul   esi,ebp,0x3c9f25d9
  40a46a:	loope  0x40a3f4
  40a46c:	inc    ecx
  40a46d:	xchg   edi,eax
  40a46e:	pop    ebp
  40a46f:	hlt    
  40a470:	(bad)  [eax+ebx*1-0x4b1d4e88]
  40a477:	loope  0x40a42f
  40a479:	xchg   ecx,eax
  40a47a:	test   DWORD PTR [ebx],ebp
  40a47c:	dec    esp
  40a47d:	popa   
  40a47e:	(bad)  
  40a47f:	scas   al,BYTE PTR es:[edi]
  40a480:	jb     0x40a403
  40a482:	and    eax,0x571e175e
  40a487:	into   
  40a488:	mov    esi,0x6b88015b
  40a48d:	mov    edx,0x7684755
  40a492:	cmp    dh,BYTE PTR [edi+0x5477b420]
  40a498:	test   eax,0x5b8be787
  40a49d:	add    eax,eax
  40a49f:	fnstsw WORD PTR [eax]
  40a4a1:	mov    bl,0xc3
  40a4a3:	mov    ch,0x62
  40a4a5:	push   ds
  40a4a6:	enter  0x902b,0xa4
  40a4aa:	in     eax,dx
  40a4ab:	push   ecx
  40a4ac:	test   BYTE PTR [esi+0x79],ah
  40a4af:	(bad)  
  40a4b1:	inc    ebx
  40a4b2:	fst    DWORD PTR [eax]
  40a4b4:	and    BYTE PTR [ebx+0x5d1d4f11],bh
  40a4ba:	or     BYTE PTR [edx-0x11],bh
  40a4bd:	outs   dx,DWORD PTR ds:[esi]
  40a4be:	ds and dl,ch
  40a4c1:	into   
  40a4c2:	sbb    BYTE PTR [esi+0x5b],0x56
  40a4c6:	out    dx,eax
  40a4c7:	sbb    DWORD PTR [esi-0x12c0a02c],0xfffffff2
  40a4ce:	sub    al,0x94
  40a4d0:	loop   0x40a53f
  40a4d2:	call   0x5023e07c
  40a4d7:	inc    ebx
  40a4d8:	ret    0x97b0
  40a4db:	in     eax,dx
  40a4dc:	bnd jbe 0x40a544
  40a4df:	stos   BYTE PTR es:[edi],al
  40a4e0:	das    
  40a4e1:	scas   al,BYTE PTR es:[edi]
  40a4e2:	and    al,0xf4
  40a4e4:	jge    0x40a51f
  40a4e6:	or     eax,0xba0e41b7
  40a4eb:	sub    eax,0x71b8b724
  40a4f0:	js     0x40a544
  40a4f2:	fisttp DWORD PTR [edi+edi*8]
  40a4f5:	shl    BYTE PTR [edx],cl
  40a4f7:	out    0xb,eax
  40a4f9:	sub    BYTE PTR ds:0xae567da6,ah
  40a4ff:	ds stc 
  40a501:	xor    al,0x9b
  40a503:	mov    ecx,0x24aca7ea
  40a508:	jge    0x40a53a
  40a50a:	retf   0x6936
  40a50d:	inc    edx
  40a50e:	loop   0x40a4c4
  40a510:	and    eax,0xe077d93a
  40a515:	xchg   ebp,eax
  40a516:	jb     0x40a522
  40a518:	dec    esp
  40a519:	dec    esp
  40a51a:	jb     0x40a531
  40a51c:	(bad)  
  40a51d:	retf   0x6250
  40a520:	lock inc eax
  40a522:	xchg   eax,esi
  40a524:	and    al,0xcb
  40a526:	mov    al,dl
  40a528:	dec    ecx
  40a529:	dec    ebp
  40a52a:	mov    ds:0x8d8a1d36,eax
  40a52f:	cmc    
  40a530:	xor    ebx,edi
  40a532:	imul   ecx,DWORD PTR [ebx],0x6a
  40a535:	sub    DWORD PTR [esi-0x3f682b50],esi
  40a53b:	inc    esi
  40a53c:	stos   BYTE PTR es:[edi],al
  40a53d:	mov    bl,0x88
  40a53f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a540:	or     ah,BYTE PTR [edi+0x10]
  40a543:	xlat   BYTE PTR ds:[ebx]
  40a544:	sub    DWORD PTR [edi],0x74
  40a547:	xor    eax,0xf57b3f52
  40a54c:	lea    esp,[esi+0x3f16246b]
  40a552:	pop    DWORD PTR [esp+edx*1-0xc]
  40a556:	jmp    0x93a612d4
  40a55b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a55c:	shl    esi,1
  40a55e:	cld    
  40a55f:	cmc    
  40a560:	daa    
  40a561:	and    DWORD PTR [ecx+0x44],esi
  40a564:	mov    ebp,0xfa311738
  40a569:	mov    esp,0x4507b69a
  40a56e:	cmp    eax,0xeda512e6
  40a573:	jno    0x40a520
  40a575:	fadd   DWORD PTR [ebx-0x6de60c8e]
  40a57b:	dec    eax
  40a57c:	mov    dh,bh
  40a57e:	jbe    0x40a5d1
  40a580:	fucomi st,st(1)
  40a582:	ror    DWORD PTR [ebx-0x73b454fe],cl
  40a588:	jo     0x40a5df
  40a58a:	xor    eax,0xeac744c7
  40a58f:	lock add eax,DWORD PTR [ebx]
  40a592:	test   BYTE PTR [esi],bh
  40a594:	xor    ch,BYTE PTR [edx+0x14]
  40a597:	and    eax,0xf852e32
  40a59c:	into   
  40a59d:	adc    ebp,esi
  40a59f:	dec    ecx
  40a5a0:	adc    DWORD PTR ss:[ebx],ecx
  40a5a3:	add    BYTE PTR [ebx],al
  40a5a5:	jle    0x40a5d0
  40a5a7:	out    0x51,al
  40a5a9:	out    dx,al
  40a5aa:	jl     0x40a5f0
  40a5ac:	xchg   esi,eax
  40a5ad:	pop    ebp
  40a5ae:	shl    DWORD PTR [edi+0x2e],0xa8
  40a5b2:	popf   
  40a5b3:	xor    esp,0x14668d1c
  40a5b9:	popf   
  40a5ba:	dec    esp
  40a5bb:	pop    ds
  40a5bc:	mov    ch,0x43
  40a5be:	icebp  
  40a5bf:	xchg   ebp,eax
  40a5c0:	fisttp QWORD PTR [esi]
  40a5c2:	push   ebp
  40a5c3:	js     0x40a632
  40a5c5:	pop    ebp
  40a5c6:	xchg   esi,eax
  40a5c7:	pop    edx
  40a5c8:	xchg   esp,eax
  40a5c9:	add    edx,DWORD PTR ds:0x294bfb2
  40a5cf:	arpl   bp,ax
  40a5d1:	dec    esi
  40a5d2:	(bad)  
  40a5d3:	out    dx,eax
  40a5d4:	lahf   
  40a5d5:	dec    edi
  40a5d6:	pop    esi
  40a5d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5d8:	pop    eax
  40a5d9:	imul   esi,DWORD PTR [edi-0x3116ec85],0xf90f42d8
  40a5e3:	cmp    DWORD PTR [ebx],edx
  40a5e5:	arpl   WORD PTR [ebx+0x74fe28ee],sp
  40a5eb:	repz dec ebp
  40a5ed:	pop    esp
  40a5ee:	not    BYTE PTR [eax-0x59de1a6a]
  40a5f4:	jmp    0x40a63f
  40a5f6:	fsqrt  
  40a5f8:	ret    
  40a5f9:	jnp    0x40a580
  40a5fb:	pop    ecx
  40a5fc:	mov    DWORD PTR ds:0x5be669a6,ebx
  40a602:	sbb    edx,DWORD PTR [edx+0x7c]
  40a605:	into   
  40a606:	popf   
  40a607:	cdq    
  40a608:	fist   WORD PTR [ecx+0x59]
  40a60b:	mov    DWORD PTR [edx-0x337640c9],edx
  40a611:	inc    ebp
  40a612:	adc    eax,esi
  40a614:	mov    ds:0xf83383b5,eax
  40a619:	push   0x35388124
  40a61e:	push   es
  40a61f:	in     eax,0x95
  40a621:	xor    DWORD PTR [edx-0x5c],esi
  40a624:	cmp    eax,0x9887a2cd
  40a629:	jmp    0x40a605
  40a62b:	jle    0x40a612
  40a62d:	adc    eax,0x8575f8b1
  40a632:	mov    ebx,0x5a7ee4de
  40a637:	aam    0x9
  40a639:	and    DWORD PTR [edx+0x72],esi
  40a63c:	dec    edx
  40a63d:	es popa 
  40a63f:	cmp    eax,0xb5880f9e
  40a644:	pop    ss
  40a645:	dec    eax
  40a646:	or     DWORD PTR [edi-0x2e],edi
  40a649:	imul   edi,DWORD PTR ds:0x7b789218,0xffffff85
  40a650:	add    BYTE PTR [edi-0x44df5495],0x65
  40a657:	mov    bl,0x5
  40a659:	lea    ebx,[edi+0x3efe6074]
  40a65f:	push   ds
  40a660:	rol    DWORD PTR [esi+0x54380218],1
  40a666:	in     al,0x48
  40a668:	jns    0x40a670
  40a66a:	clc    
  40a66b:	inc    ebx
  40a66c:	xor    al,0x61
  40a66e:	pop    eax
  40a66f:	adc    dl,BYTE PTR [ebp+0x179694a7]
  40a675:	scas   eax,DWORD PTR es:[edi]
  40a676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a677:	sbb    eax,0x892ead8f
  40a67c:	outs   dx,DWORD PTR ds:[esi]
  40a67d:	popa   
  40a67e:	xor    ah,BYTE PTR ds:0x4d5c1a13
  40a684:	inc    esi
  40a685:	fidiv  DWORD PTR [ebp+0x4c]
  40a688:	cmp    al,0x8a
  40a68a:	scas   eax,DWORD PTR es:[edi]
  40a68b:	std    
  40a68c:	push   edi
  40a68d:	pop    ebx
  40a68e:	mov    bl,0xf2
  40a690:	and    ebx,DWORD PTR [esi+0x37]
  40a693:	push   eax
  40a694:	jg     0x40a702
  40a696:	push   0x2
  40a698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a699:	ror    BYTE PTR [ebx],1
  40a69b:	pusha  
  40a69c:	pop    edx
  40a69d:	test   al,0xf3
  40a69f:	mov    bh,BYTE PTR [eax+eax*8+0x12]
  40a6a3:	adc    ebp,DWORD PTR [edi+0x691639f]
  40a6a9:	outs   dx,BYTE PTR ds:[esi]
  40a6aa:	mov    ecx,0xa69f703a
  40a6af:	es dec edx
  40a6b1:	xchg   esp,eax
  40a6b2:	jecxz  0x40a6b9
  40a6b4:	push   eax
  40a6b5:	push   cs
  40a6b6:	stos   BYTE PTR es:[edi],al
  40a6b7:	dec    esi
  40a6b8:	ja     0x40a654
  40a6ba:	jmp    0x259f:0x18cc9c5f
  40a6c1:	xchg   DWORD PTR [eax],eax
  40a6c3:	sub    ebp,DWORD PTR ds:0xcc0ac80
  40a6c9:	leave  
  40a6ca:	jnp    0x40a6d2
  40a6cc:	(bad)  
  40a6cd:	outs   dx,DWORD PTR ds:[esi]
  40a6ce:	cmp    al,0x12
  40a6d0:	rcr    DWORD PTR [edi-0x3ab31a5],cl
  40a6d6:	test   BYTE PTR [esi],0x5b
  40a6d9:	push   edx
  40a6da:	loop   0x40a69d
  40a6dc:	popf   
  40a6dd:	pop    ds
  40a6de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6df:	xlat   BYTE PTR es:[ebx]
  40a6e1:	sub    DWORD PTR [edx],esi
  40a6e3:	repz fisubr WORD PTR [ebp-0x49bfdc0e]
  40a6ea:	cs push esp
  40a6ec:	inc    edx
  40a6ed:	sbb    BYTE PTR [edx],ah
  40a6ef:	xchg   ebp,eax
  40a6f0:	sahf   
  40a6f1:	shl    DWORD PTR [ebp-0x6e873786],0x94
  40a6f8:	ret    0xecc2
  40a6fb:	nop
  40a6fc:	mov    edi,?
  40a6fe:	rcr    DWORD PTR [ebp+0x491ef0a2],0xb7
  40a705:	mov    esp,0x9dc9f728
  40a70a:	mov    esi,0x85c060b
  40a70f:	les    edx,FWORD PTR [edx+0xa]
  40a712:	pop    es
  40a713:	xchg   edi,eax
  40a714:	fst    DWORD PTR [ebp+eax*1-0x15df76fb]
  40a71b:	jmp    0xca81:0x7d8dc616
  40a722:	in     eax,0xb2
  40a724:	cld    
  40a725:	mov    ds:0xaf6a91c0,al
  40a72a:	fidivr DWORD PTR [eax+0x3c6f1626]
  40a730:	shr    BYTE PTR [eax+ebx*1-0x43],1
  40a734:	pushf  
  40a735:	imul   eax,DWORD PTR [eax],0xffffffd6
  40a738:	aad    0x86
  40a73a:	mov    edi,0x527f6df
  40a73f:	enter  0x2ac0,0x62
  40a743:	call   0x9d1c:0x779e59d6
  40a74a:	sbb    BYTE PTR [ebx-0x513765a0],bh
  40a750:	push   0xfffffff3
  40a752:	out    dx,eax
  40a753:	rcr    DWORD PTR [ebp-0x17],0xfe
  40a757:	sub    al,0x24
  40a759:	pop    es
  40a75a:	sahf   
  40a75b:	into   
  40a75c:	lock out dx,eax
  40a75e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a75f:	xor    eax,0x364b8998
  40a764:	pop    ebx
  40a765:	(bad)  
  40a766:	jae    0x40a78e
  40a768:	mov    ds:0x219da2ed,al
  40a76d:	es inc ebp
  40a76f:	or     BYTE PTR [ebp-0x53],bh
  40a772:	ret    0x4058
  40a775:	mov    bl,0xf8
  40a777:	scas   al,BYTE PTR es:[edi]
  40a778:	pop    eax
  40a779:	shl    BYTE PTR cs:[ebp-0x2a],cl
  40a77d:	(bad)  [esi+0x37df0c75]
  40a783:	lods   al,BYTE PTR ds:[esi]
  40a784:	fsub   QWORD PTR [edx-0x6b706bd0]
  40a78a:	push   ss
  40a78b:	fild   QWORD PTR [esp+eax*2+0x7]
  40a78f:	cmp    esi,DWORD PTR [edi]
  40a791:	cli    
  40a792:	call   FWORD PTR gs:[ebx+0x37e2db7b]
  40a799:	or     al,BYTE PTR [ebp-0x65]
  40a79c:	pop    esi
  40a79d:	jp     0x40a7e8
  40a79f:	popf   
  40a7a0:	inc    esi
  40a7a1:	test   eax,0x13be1cc4
  40a7a6:	push   edi
  40a7a7:	xor    ebp,DWORD PTR [esi+0x4bc56cc6]
  40a7ad:	pop    ecx
  40a7ae:	loope  0x40a7a3
  40a7b0:	je     0x40a80a
  40a7b2:	iret   
  40a7b3:	cmc    
  40a7b4:	mov    ebx,0x37b9054
  40a7b9:	and    DWORD PTR [esi-0x3f],0xe1545e71
  40a7c0:	sbb    eax,0x3457ffb7
  40a7c5:	push   eax
  40a7c6:	adc    ebp,0x3f502cd2
  40a7cc:	retf   
  40a7cd:	div    BYTE PTR [edi+0x1c796984]
  40a7d3:	iret   
  40a7d4:	lods   al,BYTE PTR ds:[esi]
  40a7d5:	pop    edi
  40a7d6:	stos   DWORD PTR es:[edi],eax
  40a7d7:	gs xchg esi,eax
  40a7d9:	fldz   
  40a7db:	fldcw  WORD PTR [eax]
  40a7dd:	out    dx,al
  40a7de:	lea    eax,[ebp+0x307dbb35]
  40a7e4:	scas   al,BYTE PTR es:[edi]
  40a7e5:	lods   eax,DWORD PTR ds:[esi]
  40a7e6:	pop    edi
  40a7e7:	xchg   ebx,eax
  40a7e8:	mov    ah,al
  40a7ea:	aaa    
  40a7eb:	aam    0x61
  40a7ed:	ret    0x3c24
  40a7f0:	test   DWORD PTR [esp+esi*2-0x3c],edi
  40a7f4:	shr    DWORD PTR es:[eax+0x73a34b6b],0x9a
  40a7fc:	mov    ds:0x37d47f1e,al
  40a801:	jae    0x40a81d
  40a803:	dec    ah
  40a805:	bnd ret 
  40a807:	sub    eax,0xc7142022
  40a80c:	xchg   ebx,eax
  40a80d:	cmp    ebp,eax
  40a80f:	add    BYTE PTR [esi-0x4a3256bb],dh
  40a815:	adc    ebx,DWORD PTR es:[eax]
  40a818:	cmp    al,0xd7
  40a81a:	push   edx
  40a81b:	mov    ebx,0x65bb5923
  40a820:	or     ebx,eax
  40a822:	ret    0x47f1
  40a825:	add    eax,0x442eaf60
  40a82a:	lock inc esi
  40a82c:	loopne 0x40a7ea
  40a82e:	pop    ebx
  40a82f:	mov    edi,0x84fd7c12
  40a834:	fmul   QWORD PTR [ebx]
  40a836:	inc    edi
  40a837:	push   ebx
  40a838:	(bad)  
  40a839:	clc    
  40a83a:	and    BYTE PTR [esi],ah
  40a83c:	cli    
  40a83d:	and    ebp,DWORD PTR [edi-0x3f]
  40a840:	pop    ecx
  40a841:	xchg   edx,eax
  40a842:	dec    edx
  40a843:	xor    ebx,ecx
  40a845:	xchg   edi,eax
  40a846:	sbb    DWORD PTR [edi+eiz*4+0xa],edi
  40a84a:	or     cl,BYTE PTR ds:0x518c3294
  40a850:	leave  
  40a851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a852:	repz or esp,esp
  40a855:	dec    ebp
  40a856:	jnp    0x40a84f
  40a858:	mov    ah,0x65
  40a85a:	adc    DWORD PTR [ebx],ebx
  40a85c:	add    dh,BYTE PTR [edx+0x1197caf9]
  40a862:	sub    ah,dh
  40a864:	ds int 0x68
  40a867:	mov    edi,0x41faf6af
  40a86c:	and    al,BYTE PTR [esp+edx*1]
  40a86f:	pushf  
  40a870:	dec    esi
  40a871:	and    ah,ah
  40a873:	inc    eax
  40a874:	(bad)  
  40a875:	jmp    0x40a8a0
  40a877:	retf   
  40a878:	cwde   
  40a879:	jbe    0x40a868
  40a87b:	and    DWORD PTR [edi+0x26c42789],0x9409d7eb
  40a885:	jmp    0x40a831
  40a887:	and    ebp,DWORD PTR [edx]
  40a889:	pop    edx
  40a88a:	cmp    al,0x5
  40a88c:	psraw  mm5,QWORD PTR [ecx+0x3fcdb50b]
  40a893:	iret   
  40a894:	imul   esp,ecx,0x17
  40a897:	ins    BYTE PTR es:[edi],dx
  40a898:	sub    DWORD PTR [edi-0x72],esi
  40a89b:	enter  0xa6bb,0x24
  40a89f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8a1:	mov    esp,DWORD PTR [ecx]
  40a8a3:	mov    DWORD PTR [edi+ebx*8-0x70],ecx
  40a8a7:	push   cs
  40a8a8:	inc    edi
  40a8a9:	sub    bl,BYTE PTR [ecx-0x3]
  40a8ac:	ffreep st(7)
  40a8ae:	xchg   ebx,eax
  40a8af:	(bad)  
  40a8b0:	out    0x4f,eax
  40a8b2:	jbe    0x40a8ff
  40a8b4:	dec    esp
  40a8b5:	loopne 0x40a8df
  40a8b7:	inc    esi
  40a8b8:	lds    ebp,FWORD PTR [ebp-0xf5a4bbb]
  40a8be:	loopne 0x40a857
  40a8c0:	mov    al,0xa1
  40a8c2:	clc    
  40a8c3:	mov    ebp,0x55d0534b
  40a8c8:	pop    ebx
  40a8c9:	das    
  40a8ca:	retf   
  40a8cb:	dec    ebx
  40a8cc:	jnp    0x40a8a5
  40a8ce:	sub    esi,ecx
  40a8d0:	enter  0xbfc6,0xe7
  40a8d4:	into   
  40a8d5:	loop   0x40a87b
  40a8d7:	mov    ds:0xceec10b6,eax
  40a8dc:	inc    edx
  40a8dd:	and    ebx,DWORD PTR [eax-0x1ac69e58]
  40a8e3:	jae    0x40a8e9
  40a8e5:	out    0xc7,al
  40a8e7:	nop
  40a8e8:	in     al,0xef
  40a8ea:	shl    cl,1
  40a8ec:	pop    ds
  40a8ed:	int    0x63
  40a8ef:	and    al,0xf
  40a8f1:	xor    BYTE PTR [edi],0x43
  40a8f4:	push   es
  40a8f5:	adc    bh,BYTE PTR [ebp+0x73c6ed1]
  40a8fb:	mov    bl,0x5b
  40a8fd:	clc    
  40a8fe:	fdiv   QWORD PTR [eax]
  40a900:	adc    al,0xdc
  40a902:	pop    edx
  40a904:	dec    ebx
  40a905:	sub    DWORD PTR [edx-0x25675186],edx
  40a90b:	dec    esp
  40a90c:	mov    dl,0x7d
  40a90e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a90f:	mul    DWORD PTR [edx+eiz*4]
  40a912:	dec    ecx
  40a913:	cmp    eax,0xc3952f35
  40a918:	mov    ds:0x322dd708,eax
  40a91d:	xchg   BYTE PTR [esi-0x122d9f2],ah
  40a923:	ret    
  40a924:	les    eax,FWORD PTR [ebp-0x49292d27]
  40a92a:	out    dx,eax
  40a92b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a92d:	and    al,0xbd
  40a92f:	fwait
  40a930:	mov    eax,ds:0xb8ef5700
  40a935:	stos   DWORD PTR es:[edi],eax
  40a936:	and    DWORD PTR [esp+edi*1+0x30d3685d],ebx
  40a93d:	inc    edi
  40a93e:	out    0x8a,al
  40a940:	xor    ebx,DWORD PTR [edx]
  40a942:	inc    ebx
  40a943:	bound  ebp,QWORD PTR [ebp+0x47afa63]
  40a949:	idiv   BYTE PTR [ebx-0x25]
  40a94c:	add    BYTE PTR ds:0x764c884c,ch
  40a952:	inc    eax
  40a953:	test   al,0xfa
  40a955:	inc    ebx
  40a956:	jne    0x40a9a2
  40a958:	les    ecx,FWORD PTR [esi+0x32]
  40a95b:	(bad)  
  40a95c:	mov    eax,ds
  40a95e:	popw   ss
  40a960:	rol    BYTE PTR [edi-0x77],cl
  40a963:	in     al,dx
  40a964:	fnstcw WORD PTR [ebx]
  40a966:	sbb    ecx,esp
  40a968:	aam    0x36
  40a96a:	je     0x40a9b9
  40a96c:	pop    esi
  40a96d:	add    esi,DWORD PTR [esi+0x7cd21b49]
  40a973:	xchg   ecx,eax
  40a974:	push   esp
  40a975:	pop    eax
  40a976:	stc    
  40a977:	or     eax,0x46c59325
  40a97c:	imul   esi,DWORD PTR [eax+0x29],0x5e
  40a980:	push   ebx
  40a981:	fnsave [edi+0xb]
  40a984:	in     al,dx
  40a985:	mov    al,ds:0xcc4f5c42
  40a98a:	push   ds
  40a98b:	fbstp  TBYTE PTR [esi-0x3b]
  40a98e:	imul   edi,ebp,0xffffffb8
  40a991:	lahf   
  40a992:	fild   DWORD PTR [eax+0x6ea6d295]
  40a998:	into   
  40a999:	xchg   edi,eax
  40a99a:	std    
  40a99b:	mov    ds:0x995e8f32,eax
  40a9a0:	scas   eax,DWORD PTR es:[di]
  40a9a2:	or     cl,BYTE PTR [edx+0x60]
  40a9a5:	adc    esi,0x9814b9db
  40a9ab:	push   eax
  40a9ac:	mov    edi,DWORD PTR [ebp-0x34d1f9a1]
  40a9b2:	inc    ebx
  40a9b3:	cmc    
  40a9b4:	fistp  WORD PTR [edx]
  40a9b6:	dec    esp
  40a9b7:	into   
  40a9b8:	retf   
  40a9b9:	adc    eax,0x80915bab
  40a9be:	mov    ebp,0x9005de1
  40a9c3:	mov    ds:0x144cef2a,eax
  40a9c8:	imul   ebx,DWORD PTR [ecx-0x104e8b27],0xae9d3945
  40a9d2:	out    dx,al
  40a9d3:	sar    BYTE PTR [esp+edx*2+0x76],0xd7
  40a9d8:	adc    al,BYTE PTR [eax-0x6fde7636]
  40a9de:	loopne 0x40aa11
  40a9e0:	xchg   esp,eax
  40a9e1:	out    0x80,eax
  40a9e3:	mov    eax,0x8141b4e0
  40a9e8:	jb     0x40aa24
  40a9ea:	push   ecx
  40a9eb:	add    edx,DWORD PTR [ecx-0xa]
  40a9ee:	bt     DWORD PTR [eax-0x76],edx
  40a9f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9f3:	or     DWORD PTR [eax+0x95fcf73],edx
  40a9f9:	aaa    
  40a9fa:	and    eax,0x944c7574
  40a9ff:	inc    DWORD PTR [edx]
  40aa01:	or     DWORD PTR [eax+0x592c526c],ecx
  40aa07:	and    BYTE PTR [edx-0x7a],ah
  40aa0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa0b:	and    al,0x8f
  40aa0d:	imul   DWORD PTR [ebx+0x436771f8]
  40aa13:	jb     0x40aa15
  40aa15:	fwait
  40aa16:	rcl    DWORD PTR [eax],cl
  40aa18:	(bad)  [esi-0x1c3421bb]
  40aa1e:	mov    esi,ds
  40aa20:	popa   
  40aa21:	cmp    bh,BYTE PTR [ebx-0x43]
  40aa24:	fwait
  40aa25:	shr    DWORD PTR [eax-0x80],cl
  40aa28:	push   esi
  40aa29:	add    al,0x10
  40aa2b:	mov    ebx,0x8f28a7ad
  40aa30:	xchg   ebx,eax
  40aa31:	test   DWORD PTR [esp+esi*4],0xe43d66dd
  40aa38:	cmp    ebx,DWORD PTR [ebx]
  40aa3a:	ret    
  40aa3b:	ja     0x40aa78
  40aa3d:	sub    al,BYTE PTR [ebx+0xd]
  40aa40:	in     eax,0xca
  40aa42:	add    eax,0x9e734922
  40aa47:	push   ds
  40aa48:	push   esp
  40aa49:	mov    dl,0x64
  40aa4b:	stc    
  40aa4c:	out    0xa3,eax
  40aa4e:	ja     0x40aa6c
  40aa50:	jbe    0x40aa00
  40aa52:	pop    ss
  40aa53:	cwde   
  40aa54:	jmp    0x40a9ef
  40aa56:	fnstsw ax
  40aa58:	scas   eax,DWORD PTR es:[edi]
  40aa59:	addr16 aaa 
  40aa5b:	xlat   BYTE PTR ds:[bx]
  40aa5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa5e:	repnz xlat BYTE PTR ds:[ebx]
  40aa60:	jl     0x40aad9
  40aa62:	outs   dx,DWORD PTR ds:[esi]
  40aa63:	hlt    
  40aa64:	enter  0x3b94,0x8c
  40aa68:	mov    ?,edx
  40aa6a:	sbb    BYTE PTR [ecx+0x1bf07f03],ah
  40aa70:	or     ebp,DWORD PTR [edi+0x54]
  40aa73:	cmp    BYTE PTR [eax+0x45b9b838],0x7b
  40aa7a:	adc    BYTE PTR [ebx+0x1e],ch
  40aa7d:	push   edi
  40aa7e:	cld    
  40aa7f:	daa    
  40aa80:	mov    ecx,0xb6103dcf
  40aa85:	inc    esi
  40aa86:	mov    esp,0xfeebd6b8
  40aa8b:	aad    0x4
  40aa8d:	sub    ch,BYTE PTR [ecx]
  40aa8f:	sbb    DWORD PTR [eax+0x6360d369],edx
  40aa95:	jle    0x40aaa6
  40aa97:	dec    esi
  40aa98:	sbb    BYTE PTR [edi-0x3b7d6b73],0x4d
  40aa9f:	xchg   DWORD PTR [eax-0x52],ebx
  40aaa2:	cmp    BYTE PTR [ecx+0x7c],0xa1
  40aaa6:	cmp    DWORD PTR [eax+0x4ef420c7],edi
  40aaac:	shl    edx,cl
  40aaae:	jl     0x40aae4
  40aab0:	adc    ecx,DWORD PTR [esi+0x64]
  40aab3:	xchg   edi,eax
  40aab4:	daa    
  40aab5:	jp     0x40aae0
  40aab7:	(bad)  
  40aab8:	icebp  
  40aab9:	sbb    al,0x5b
  40aabb:	imul   esp,DWORD PTR [eax-0x3],0xffffff95
  40aabf:	add    al,0x73
  40aac1:	jp     0x40ab17
  40aac3:	aaa    
  40aac4:	cdq    
  40aac5:	cmp    eax,0x799a0e1c
  40aaca:	stos   DWORD PTR es:[edi],eax
  40aacb:	push   edx
  40aacc:	retf   
  40aacd:	(bad)  
  40aacf:	imul   esp,DWORD PTR ds:0x15aadd82,0x9e9f1a2d
  40aad9:	shr    BYTE PTR [esi-0x31],cl
  40aadc:	int3   
  40aadd:	(bad)  
  40aade:	stos   DWORD PTR es:[edi],eax
  40aadf:	sbb    cl,bh
  40aae1:	push   ss
  40aae2:	jae    0x40aa83
  40aae4:	xchg   edi,eax
  40aae5:	(bad)  
  40aae7:	lock fstp QWORD PTR [ebx]
  40aaea:	inc    eax
  40aaeb:	js     0x40aaa2
  40aaed:	sbb    edi,edi
  40aaef:	je     0x40aaaf
  40aaf1:	cli    
  40aaf2:	mov    dl,0xad
  40aaf4:	outs   dx,DWORD PTR ds:[esi]
  40aaf5:	and    eax,0xc0e20cd1
  40aafa:	xchg   esi,eax
  40aafb:	jb     0x40aaff
  40aafd:	in     al,0x7a
  40aaff:	aas    
  40ab00:	pushf  
  40ab01:	rcl    DWORD PTR [edx],0x8c
  40ab04:	fadd   DWORD PTR [esi-0x75]
  40ab07:	jg     0x40aa91
  40ab09:	inc    eax
  40ab0a:	push   cs
  40ab0b:	xchg   ecx,eax
  40ab0c:	xchg   edi,eax
  40ab0d:	dec    esp
  40ab0e:	push   eax
  40ab0f:	jp     0x40aae3
  40ab11:	mov    ch,BYTE PTR [esi+0x698c589a]
  40ab17:	mov    dl,0x83
  40ab19:	mov    edi,0xcd2d38f9
  40ab1e:	inc    ebx
  40ab1f:	sbb    al,0xf5
  40ab21:	(bad)  
  40ab22:	jmp    0x40ab56
  40ab24:	in     al,0x12
  40ab26:	sbb    DWORD PTR [edx],0xfffffff6
  40ab29:	int3   
  40ab2a:	jnp    0x40ab74
  40ab2c:	mov    cl,0x5b
  40ab2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab2f:	sbb    bl,dl
  40ab31:	mov    fs,WORD PTR ds:[ebp-0x37]
  40ab35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab36:	or     dh,cl
  40ab38:	stos   BYTE PTR es:[edi],al
  40ab39:	fs dec ebx
  40ab3b:	icebp  
  40ab3c:	loop   0x40ab84
  40ab3e:	test   eax,0x811f3ad1
  40ab43:	jbe    0x40aac9
  40ab45:	xor    BYTE PTR [esi],0xf7
  40ab48:	xchg   BYTE PTR ds:0xe09a6096,bh
  40ab4e:	push   ss
  40ab4f:	mov    dh,0xb3
  40ab51:	imul   ebp,ebx,0xc34d454
  40ab57:	rol    DWORD PTR [ebp+edx*8-0x21],cl
  40ab5b:	js     0x40aaf3
  40ab5d:	adc    ch,bl
  40ab5f:	nop
  40ab60:	leave  
  40ab61:	mov    eax,0x764834fc
  40ab66:	mov    esp,0xedf835c7
  40ab6b:	mov    al,0x39
  40ab6d:	mov    WORD PTR [esi-0x64],?
  40ab70:	fsubr  st(0),st
  40ab72:	cmp    al,0x7
  40ab74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab75:	push   0x2
  40ab77:	jg     0x40ab0b
  40ab79:	sbb    DWORD PTR [eax+ebx*8+0x54c8dad9],edi
  40ab80:	mov    BYTE PTR [ebx],dh
  40ab82:	mov    dh,0xd6
  40ab84:	test   al,0x7d
  40ab86:	pusha  
  40ab87:	int3   
  40ab88:	test   dh,ch
  40ab8a:	fimul  DWORD PTR [edx+eiz*8+0x245e9682]
  40ab91:	mov    bh,0x73
  40ab93:	or     ch,BYTE PTR [eax-0x25]
  40ab96:	in     al,dx
  40ab97:	and    al,0xe
  40ab99:	push   es
  40ab9a:	and    BYTE PTR [edx+edi*4],al
  40ab9d:	or     ebp,DWORD PTR [ecx+0x3bb7bc5f]
  40aba3:	je     0x40abd7
  40aba5:	stos   BYTE PTR es:[edi],al
  40aba6:	ret    0x2fd6
  40aba9:	jne    0x40abca
  40abab:	test   BYTE PTR [eax],0xc3
  40abae:	or     DWORD PTR [esi-0x44fd3832],ecx
  40abb4:	push   eax
  40abb5:	sub    ebp,DWORD PTR [esi]
  40abb7:	rol    DWORD PTR [ebp-0x33],0xad
  40abbb:	add    DWORD PTR [esi+0x2c9a7a94],esp
  40abc1:	inc    ecx
  40abc2:	cmp    BYTE PTR [ebx-0x63],ch
  40abc5:	xor    BYTE PTR gs:[ebx+0x1302c350],cl
  40abcc:	ja     0x40ab91
  40abce:	mov    bh,0x45
  40abd0:	in     eax,0x5f
  40abd2:	je     0x40abe2
  40abd4:	inc    esp
  40abd5:	(bad)  
  40abd6:	cmp    esp,DWORD PTR [eax-0x11]
  40abd9:	outs   dx,BYTE PTR ds:[esi]
  40abda:	aaa    
  40abdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abdd:	pop    ss
  40abde:	jb     0x40abcd
  40abe0:	adc    eax,0x73043c84
  40abe5:	dec    esp
  40abe6:	dec    eax
  40abe7:	popa   
  40abe8:	mov    bh,0xed
  40abea:	xor    esi,edi
  40abec:	pop    edx
  40abed:	jecxz  0x40ab8f
  40abef:	or     BYTE PTR [edx],cl
  40abf1:	in     eax,dx
  40abf2:	sti    
  40abf3:	dec    edi
  40abf4:	aaa    
  40abf5:	or     BYTE PTR [eax+0x2a8894ac],ah
  40abfb:	adc    DWORD PTR [ebp-0x22],0x56e0876a
  40ac02:	or     BYTE PTR [ebp+0x7f2855b1],dl
  40ac08:	aaa    
  40ac09:	fbstp  TBYTE PTR [edi+0x2c587ff]
  40ac0f:	xchg   ebx,eax
  40ac10:	pop    es
  40ac11:	ds out dx,al
  40ac13:	inc    ebp
  40ac14:	mov    esi,0x323d92ff
  40ac19:	jns    0x40abfb
  40ac1b:	push   es
  40ac1c:	fsubr  QWORD PTR [ebx-0x30c2a602]
  40ac22:	cmp    dl,BYTE PTR [ecx-0x28]
  40ac25:	sbb    DWORD PTR [esi-0x12],edi
  40ac28:	iret   
  40ac29:	push   esi
  40ac2a:	dec    esi
  40ac2b:	jnp    0x40ac93
  40ac2d:	es mov bl,0x65
  40ac30:	(bad)  [esi]
  40ac32:	sub    ecx,edx
  40ac34:	xchg   edi,eax
  40ac35:	xlat   BYTE PTR ds:[ebx]
  40ac36:	inc    edi
  40ac37:	and    al,0xce
  40ac39:	aas    
  40ac3a:	or     al,0x8
  40ac3c:	lds    eax,FWORD PTR [ecx+0x36bfc69d]
  40ac42:	adc    edx,DWORD PTR [esi-0x19]
  40ac45:	jo     0x40ac9e
  40ac47:	pop    ecx
  40ac48:	dec    ebx
  40ac49:	fst    QWORD PTR [ebx]
  40ac4b:	addr16 mov ds:0xa822,eax
  40ac4f:	mov    al,ds:0xf65a1bd2
  40ac54:	leave  
  40ac55:	adc    al,0xd
  40ac57:	dec    edi
  40ac58:	daa    
  40ac59:	push   ds
  40ac5a:	push   eax
  40ac5b:	(bad)  
  40ac5c:	and    al,0x25
  40ac5e:	add    BYTE PTR [edx+0x4d],0xc0
  40ac62:	inc    esi
  40ac63:	sub    ebx,esp
  40ac65:	push   edi
  40ac66:	mov    ecx,0x60edd22b
  40ac6b:	xor    al,0x4d
  40ac6d:	adc    dh,cl
  40ac6f:	mov    al,cl
  40ac71:	in     eax,dx
  40ac72:	cmc    
  40ac73:	lds    esp,FWORD PTR [edx+0x3ee39359]
  40ac79:	leave  
  40ac7a:	jmp    0x4717:0x453d0fb6
  40ac81:	dec    esi
  40ac82:	push   ebp
  40ac83:	or     ebp,DWORD PTR [eax+0x36]
  40ac86:	mov    dl,0x5
  40ac88:	cmp    BYTE PTR [eax-0x61],dl
  40ac8b:	pop    ebp
  40ac8c:	retf   0x6156
  40ac8f:	mov    ds:0x9732b01,eax
  40ac94:	repz jle 0x40acdd
  40ac97:	sub    cl,al
  40ac99:	push   eax
  40ac9a:	jo     0x40ac56
  40ac9c:	sub    edi,DWORD PTR [esp+eiz*8-0x74]
  40aca0:	inc    edx
  40aca1:	cmp    BYTE PTR [ecx],bl
  40aca3:	jle    0x40ac34
  40aca5:	jnp    0x40acf4
  40aca7:	fbld   TBYTE PTR [eax+esi*2-0x2f]
  40acab:	and    cl,BYTE PTR [ebp-0x21]
  40acae:	out    0x81,eax
  40acb0:	push   ds
  40acb1:	jp     0x40ac8a
  40acb3:	or     al,0xc2
  40acb5:	ror    cl,1
  40acb7:	cmc    
  40acb8:	mov    ds:0x4cdf4a8b,eax
  40acbd:	fsub   st(4),st
  40acbf:	pop    ds
  40acc0:	and    al,0x6e
  40acc2:	mov    edx,0xd3894995
  40acc7:	inc    edi
  40acc8:	sub    al,BYTE PTR [esi]
  40acca:	mov    DWORD PTR [eax+0x2],edi
  40accd:	push   edi
  40acce:	test   ah,0xc4
  40acd1:	xor    edx,ecx
  40acd3:	je     0x40ac86
  40acd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acd6:	lods   eax,DWORD PTR ds:[esi]
  40acd7:	hlt    
  40acd8:	mov    DWORD PTR [edx-0x7e],esi
  40acdb:	or     esi,esi
  40acdd:	cmp    ah,BYTE PTR [edi]
  40acdf:	cmc    
  40ace0:	or     al,0xa0
  40ace2:	jmp    0xd7d7:0x2122fdb4
  40ace9:	fisttp WORD PTR [edi]
  40aceb:	and    BYTE PTR [edx-0xcb64811],dl
  40acf1:	and    DWORD PTR [esi+eax*1],0x68
  40acf5:	fistp  WORD PTR es:[ebp+0x5a9fede2]
  40acfc:	mov    ch,0xe4
  40acfe:	cmp    DWORD PTR [ebx+0x7e],ecx
  40ad01:	lahf   
  40ad02:	xchg   DWORD PTR [edi-0x1bec8013],esi
  40ad08:	push   0x988f45a4
  40ad0d:	retf   0x1aea
  40ad10:	dec    ecx
  40ad11:	loopne 0x40accb
  40ad13:	cmc    
  40ad14:	pop    es
  40ad15:	lds    edi,FWORD PTR [ebp-0x3fa1b1c3]
  40ad1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad1c:	outs   dx,DWORD PTR ds:[esi]
  40ad1d:	cmp    al,0x35
  40ad1f:	outs   dx,DWORD PTR ds:[esi]
  40ad20:	loop   0x40ad91
  40ad22:	pop    edi
  40ad23:	and    BYTE PTR [eax-0x33],ah
  40ad26:	dec    eax
  40ad27:	sbb    eax,DWORD PTR fs:[ecx+edx*4+0x2]
  40ad2c:	or     DWORD PTR [ecx],esp
  40ad2e:	int    0x29
  40ad30:	mov    ecx,0xd46da9b
  40ad35:	adc    dl,BYTE PTR [ecx-0x7a365f70]
  40ad3b:	fwait
  40ad3c:	mov    cl,0xa8
  40ad3e:	pop    es
  40ad3f:	les    ebp,FWORD PTR [ebx]
  40ad41:	in     eax,dx
  40ad42:	js     0x40acfd
  40ad44:	push   edi
  40ad45:	sub    al,0x72
  40ad47:	xchg   BYTE PTR [edi+edi*2+0x75],bh
  40ad4b:	stc    
  40ad4c:	in     eax,0x46
  40ad4e:	inc    edx
  40ad4f:	mov    esi,0x3e8ee687
  40ad54:	call   0x1f74:0xf64472bd
  40ad5b:	(bad)  
  40ad5d:	lods   al,BYTE PTR ds:[esi]
  40ad5e:	sahf   
  40ad5f:	(bad)  
  40ad61:	inc    ebp
  40ad62:	shr    BYTE PTR [esi+0x9b233b5],1
  40ad68:	(bad)  
  40ad69:	das    
  40ad6a:	in     eax,dx
  40ad6b:	sub    al,0x3c
  40ad6d:	sbb    al,0x5b
  40ad6f:	sub    dl,BYTE PTR [ebp+0x5622b225]
  40ad75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad76:	retf   
  40ad77:	jbe    0x40adef
  40ad79:	mov    al,0x3c
  40ad7b:	lock cmp al,0xcb
  40ad7e:	lods   al,BYTE PTR ds:[esi]
  40ad7f:	push   edx
  40ad80:	clc    
  40ad81:	es xor esi,esp
  40ad84:	mov    al,0x45
  40ad86:	cs push ecx
  40ad88:	sub    ebp,edx
  40ad8a:	sub    DWORD PTR [edi],ebp
  40ad8c:	mov    bh,0x4
  40ad8e:	shl    bl,1
  40ad90:	scas   eax,DWORD PTR es:[edi]
  40ad91:	(bad)  
  40ad92:	call   FWORD PTR [eax-0x3437418f]
  40ad98:	ins    DWORD PTR es:[edi],dx
  40ad99:	and    ecx,edi
  40ad9b:	nop
  40ad9c:	push   ecx
  40ad9d:	and    DWORD PTR [edi],eax
  40ad9f:	retf   
  40ada0:	stos   DWORD PTR es:[edi],eax
  40ada1:	xor    eax,eax
  40ada3:	scas   al,BYTE PTR es:[edi]
  40ada4:	jnp    0x40ad37
  40ada6:	sbb    bl,BYTE PTR [edx+0x3c1b5e19]
  40adac:	pusha  
  40adad:	xchg   ebx,eax
  40adae:	jge    0x40ad49
  40adb0:	and    eax,DWORD PTR [eax-0x6cc379b0]
  40adb6:	(bad)  
  40adb8:	lea    edx,[edi]
  40adba:	mov    WORD PTR [esi+edx*4-0x52f926c1],ds
  40adc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adc2:	fsub   QWORD PTR [eax+0x18]
  40adc5:	dec    ecx
  40adc6:	(bad)
  40adc9:	mov    dl,0xc1
  40adcb:	lods   eax,DWORD PTR ds:[esi]
  40adcc:	jg     0x40ae24
  40adce:	cmp    DWORD PTR [eax+0x6fd8ecf2],ecx
  40add4:	lods   al,BYTE PTR ds:[esi]
  40add5:	in     al,dx
  40add6:	ret    0x30d5
  40add9:	cmp    DWORD PTR [edi],edx
  40addb:	out    dx,eax
  40addc:	rol    BYTE PTR [ebx+edx*2-0x302b1919],0x23
  40ade4:	or     DWORD PTR [edx-0x19],ebp
  40ade7:	adc    eax,0xdd12de9b
  40adec:	ds enter 0xe4d9,0x76
  40adf1:	or     bh,bl
  40adf3:	xor    ecx,ebp
  40adf5:	sahf   
  40adf6:	mov    DWORD PTR [eax+0x7b],esi
  40adf9:	add    eax,0xf052cc4d
  40adfe:	scas   eax,DWORD PTR es:[edi]
  40adff:	jmp    0x6e59:0x6e88fc21
  40ae06:	clc    
  40ae07:	adc    DWORD PTR [ebx+0x2dd92c44],ebp
  40ae0d:	and    esi,DWORD PTR [ecx+0x341f6079]
  40ae13:	sub    dl,BYTE PTR [ebp+0x467cf938]
  40ae19:	mov    esp,DWORD PTR [edi+edx*2-0x7cf42e]
  40ae20:	inc    ebx
  40ae21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae22:	data16 aad 0xb3
  40ae25:	mov    dh,0x95
  40ae27:	and    bh,BYTE PTR [edx+0x28]
  40ae2a:	popa   
  40ae2b:	cmp    eax,0x34683fd1
  40ae30:	xchg   edi,eax
  40ae31:	push   esi
  40ae32:	mov    ah,0x35
  40ae34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae35:	test   ah,bl
  40ae37:	jns    0x40ae24
  40ae39:	jbe    0x40ae4f
  40ae3b:	pusha  
  40ae3c:	mov    ah,0xbb
  40ae3e:	push   0xfffffffb
  40ae40:	push   edx
  40ae41:	or     bh,BYTE PTR [esi-0x1c]
  40ae44:	aaa    
  40ae45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae46:	shr    ecx,cl
  40ae48:	cmp    BYTE PTR ds:0x5de02c62,dh
  40ae4e:	push   edx
  40ae4f:	loop   0x40ae86
  40ae51:	sti    
  40ae52:	pop    esp
  40ae53:	xchg   edi,eax
  40ae54:	xchg   edi,eax
  40ae55:	dec    edx
  40ae56:	popf   
  40ae57:	clc    
  40ae58:	mov    edi,0x98018526
  40ae5d:	shr    BYTE PTR [ebp+0x22790037],cl
  40ae63:	mov    dl,0xb
  40ae65:	imul   ebp,DWORD PTR [esi+eiz*2+0x6a],0xffffffa5
  40ae6a:	push   0xffffffcc
  40ae6c:	cmc    
  40ae6d:	sub    ebx,ecx
  40ae6f:	sub    al,0x97
  40ae71:	cld    
  40ae72:	in     al,dx
  40ae73:	idiv   DWORD PTR [edi-0x78bbddbc]
  40ae79:	inc    edx
  40ae7a:	aam    0x5a
  40ae7c:	clc    
  40ae7d:	(bad)  
  40ae7e:	and    edi,DWORD PTR [eax+0x24a8df61]
  40ae84:	adc    BYTE PTR [ecx+0x1dbbc761],ah
  40ae8a:	xor    edx,DWORD PTR [ebp+0x3d6e2fc6]
  40ae90:	pop    esi
  40ae91:	and    cl,dh
  40ae93:	jl     0x40ae63
  40ae95:	cld    
  40ae96:	add    edx,esp
  40ae98:	cmc    
  40ae99:	fisub  DWORD PTR [ecx]
  40ae9b:	mov    cl,0x5
  40ae9d:	test   edi,edx
  40ae9f:	repz add ebx,ebp
  40aea2:	(bad)
  40aea5:	sub    DWORD PTR [ebx],0x5c
  40aea8:	fld    DWORD PTR [eax-0xa4c6b86]
  40aeae:	popf   
  40aeaf:	cdq    
  40aeb0:	xor    DWORD PTR [ebx],edi
  40aeb2:	cdq    
  40aeb3:	jp     0x40ae46
  40aeb5:	xchg   edi,eax
  40aeb6:	jns    0x40ae8c
  40aeb8:	adc    BYTE PTR [ebx],ch
  40aeba:	sahf   
  40aebb:	int    0xb5
  40aebd:	enter  0x1ae9,0x38
  40aec1:	div    DWORD PTR [ebp+0x46eb2d43]
  40aec7:	cld    
  40aec8:	les    edx,FWORD PTR [edx]
  40aeca:	outs   dx,BYTE PTR ds:[esi]
  40aecb:	shl    esi,1
  40aecd:	add    BYTE PTR [eax+0x3c],cl
  40aed0:	ss pop esi
  40aed2:	arpl   WORD PTR [edi],dx
  40aed4:	mov    edx,DWORD PTR [esp+eiz*8]
  40aed7:	in     al,dx
  40aed8:	mov    bl,0xd3
  40aeda:	mov    ds:0xe4c7421f,al
  40aedf:	int3   
  40aee0:	mov    cl,0xcf
  40aee2:	inc    esp
  40aee3:	das    
  40aee4:	(bad)  
  40aee5:	or     DWORD PTR [edi],ecx
  40aee7:	sbb    DWORD PTR [edi],ebx
  40aee9:	rcr    BYTE PTR [ebx-0x38604468],0xf8
  40aef0:	clc    
  40aef1:	or     cl,BYTE PTR [eax]
  40aef3:	jmp    0xc744:0x772874f3
  40aefa:	or     eax,0xa6a2469
  40aeff:	call   0xa8f3:0xae4991ef
  40af06:	lods   eax,DWORD PTR ds:[esi]
  40af07:	sub    dh,dl
  40af09:	jns    0x40af75
  40af0b:	add    bl,BYTE PTR [bx+si-0x7b]
  40af0f:	xor    eax,0x2191e59e
  40af14:	mov    ebp,0x4e1b5e31
  40af19:	cmc    
  40af1a:	faddp  st(2),st
  40af1c:	push   cs
  40af1d:	mov    ebp,0xfae89ef0
  40af22:	mov    edx,0xf7f7815a
  40af27:	dec    edi
  40af28:	inc    esp
  40af29:	iret   
  40af2a:	das    
  40af2b:	jmp    0x7e8b:0x16eac4b4
  40af32:	or     BYTE PTR [ecx+eax*2],dh
  40af35:	sub    al,0xff
  40af37:	push   eax
  40af38:	imul   edi,ecx,0x5f
  40af3b:	mov    ebx,0x63172512
  40af40:	aaa    
  40af41:	test   al,0x9f
  40af43:	jnp    0x40aef6
  40af45:	mov    BYTE PTR [esi+0x31442e43],bl
  40af4b:	xchg   ebx,eax
  40af4c:	jmp    0x30257b42
  40af51:	aaa    
  40af52:	inc    eax
  40af53:	add    ebp,DWORD PTR [eax+ebx*1+0x4d06a7c5]
  40af5a:	xchg   ebp,eax
  40af5b:	cld    
  40af5c:	stc    
  40af5d:	fldenv [edx+0x71]
  40af60:	pop    ecx
  40af61:	and    cl,dl
  40af63:	in     eax,0xac
  40af65:	or     eax,0x82d3cfa9
  40af6a:	mov    gs,WORD PTR [ebp+0x313aa768]
  40af70:	aam    0xa5
  40af72:	sbb    BYTE PTR [edi-0xa47b448],bh
  40af78:	(bad)  
  40af79:	pop    edx
  40af7a:	and    al,BYTE PTR [ebx+0x1a]
  40af7d:	fbld   TBYTE PTR [edx+0x567e76ab]
  40af83:	call   0x7f2e7931
  40af88:	jb     0x40af5a
  40af8a:	js     0x40af83
  40af8c:	aad    0xef
  40af8e:	arpl   ax,ax
  40af90:	xor    al,0x98
  40af92:	xlat   BYTE PTR ds:[ebx]
  40af93:	hlt    
  40af94:	adc    BYTE PTR [esp+edi*4-0x7c],dh
  40af98:	jno    0x40afe4
  40af9a:	nop
  40af9b:	inc    esi
  40af9c:	out    0x73,eax
  40af9e:	mov    bh,0x17
  40afa0:	and    ecx,DWORD PTR ds:0x1d6792f2
  40afa6:	add    eax,0xbc0b1d02
  40afab:	mov    dh,BYTE PTR [edx]
  40afad:	jae    0x40af8f
  40afaf:	cld    
  40afb0:	dec    ecx
  40afb1:	add    al,0x61
  40afb3:	pop    ss
  40afb4:	or     bl,ch
  40afb6:	hlt    
  40afb7:	test   BYTE PTR [eax],0x27
  40afba:	shl    BYTE PTR [esi],1
  40afbc:	bound  ebp,QWORD PTR ds:0x1e04d5b7
  40afc2:	in     al,dx
  40afc3:	(bad)  
  40afc4:	aad    0xc8
  40afc6:	ins    BYTE PTR es:[edi],dx
  40afc7:	add    al,dl
  40afc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afca:	lea    ebp,[eax+eiz*2]
  40afcd:	iret   
  40afce:	(bad)  
  40afcf:	aam    0x88
  40afd1:	mov    bl,BYTE PTR fs:[ebx+0x70]
  40afd5:	pop    ss
  40afd6:	add    DWORD PTR [edx+edi*1],0x7c
  40afda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afdb:	cs (bad) 
  40afdd:	(bad)  
  40afde:	stc    
  40afdf:	mov    edx,DWORD PTR [ebx]
  40afe1:	and    BYTE PTR [eax],bh
  40afe3:	mov    ch,0x3c
  40afe5:	loopne 0x40b060
  40afe7:	ret    0xe583
  40afea:	(bad)  
  40afeb:	cli    
  40afec:	fwait
  40afed:	sbb    DWORD PTR [esi],esp
  40afef:	jno    0x40afea
  40aff1:	mov    ss,WORD PTR [ecx-0x16]
  40aff4:	xlat   BYTE PTR ds:[ebx]
  40aff5:	mov    ebp,edi
  40aff7:	frstor [eax+0x5d]
  40affa:	call   0xc8436183
  40afff:	outs   dx,BYTE PTR ds:[esi]
  40b000:	lea    ecx,[eax+0x4a]
  40b003:	xlat   BYTE PTR ds:[ebx]
  40b004:	mov    bl,0x7
  40b006:	mov    esi,0xc0ee4ad1
  40b00b:	pop    ecx
  40b00c:	xchg   DWORD PTR [edx],ebx
  40b00e:	or     edx,DWORD PTR [ecx+eax*4+0x32]
  40b012:	aad    0xdf
  40b014:	pop    eax
  40b015:	in     al,dx
  40b016:	xchg   ebp,eax
  40b017:	push   ebx
  40b018:	out    0xed,eax
  40b01a:	xor    eax,0x9aecfd49
  40b01f:	ja     0x40b036
  40b021:	fs push ss
  40b023:	xchg   ebp,eax
  40b024:	aam    0x42
  40b026:	sti    
  40b027:	pop    esi
  40b028:	and    DWORD PTR [eax-0x28],ebx
  40b02b:	xor    BYTE PTR [eax],dl
  40b02d:	pop    es
  40b02e:	sahf   
  40b02f:	test   al,0x28
  40b031:	int    0xc3
  40b033:	pop    ds
  40b034:	rcr    DWORD PTR [ecx-0xc58e937],cl
  40b03a:	mov    DWORD PTR [edx],ebp
  40b03c:	in     eax,0x11
  40b03e:	jl     0x40b010
  40b040:	je     0x40aff5
  40b042:	cmp    esi,eax
  40b044:	iret   
  40b045:	push   ebx
  40b046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b047:	in     al,0x23
  40b049:	push   ds
  40b04a:	ins    DWORD PTR es:[edi],dx
  40b04b:	lahf   
  40b04c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b04d:	adc    edx,ebp
  40b04f:	jmp    0x40b0b3
  40b051:	adc    eax,0xb700d5b0
  40b056:	xlat   BYTE PTR ds:[ebx]
  40b057:	lods   eax,DWORD PTR ds:[esi]
  40b058:	mov    esi,ebp
  40b05a:	cs in  eax,dx
  40b05c:	fstp   DWORD PTR [esi+0x74411ddf]
  40b062:	inc    ecx
  40b063:	mov    ah,0x67
  40b065:	mov    WORD PTR [ebp+0x1d044372],?
  40b06b:	jl     0x40b040
  40b06d:	retf   
  40b06e:	lock test DWORD PTR [eax-0x36d9e0ff],ecx
  40b075:	mov    bl,0x38
  40b077:	mov    ebp,0xd98104b5
  40b07c:	in     al,dx
  40b07d:	into   
  40b07e:	jbe    0x40b02a
  40b080:	sub    edx,ecx
  40b082:	call   0xefd5d158
  40b087:	jmp    0x6e6d:0x629598f
  40b08e:	in     al,0x53
  40b090:	test   eax,0xf0865742
  40b095:	das    
  40b096:	jmp    0x1c48:0xdc3aa5d0
  40b09d:	add    bl,BYTE PTR [ecx+0x60]
  40b0a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0a1:	clc    
  40b0a2:	je     0x40b09e
  40b0a4:	cs xor al,0x6
  40b0a7:	cdq    
  40b0a8:	call   0x6d1d:0xba4cc469
  40b0af:	jbe    0x40b104
  40b0b1:	sti    
  40b0b2:	and    al,0xc0
  40b0b4:	ret    
  40b0b5:	or     DWORD PTR [edx-0x72b09c],eax
  40b0bb:	and    dh,BYTE PTR ss:[ebp+0x599753b8]
  40b0c2:	sbb    BYTE PTR [esi],al
  40b0c4:	repz popa 
  40b0c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0c7:	aas    
  40b0c8:	ins    DWORD PTR es:[edi],dx
  40b0c9:	(bad)  [ebp+0x32]
  40b0cc:	xchg   edi,eax
  40b0cd:	mov    ecx,ebp
  40b0cf:	(bad)  
  40b0d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0d1:	dec    edx
  40b0d2:	std    
  40b0d3:	sbb    BYTE PTR [ecx-0x1bd9915e],dh
  40b0d9:	add    al,0xaf
  40b0db:	or     eax,0x2824b1c5
  40b0e0:	inc    ebx
  40b0e1:	inc    edi
  40b0e2:	shl    BYTE PTR [ebx+0x4a9ee40a],cl
  40b0e8:	inc    esp
  40b0e9:	icebp  
  40b0ea:	jae    0x40b169
  40b0ec:	pop    ebx
  40b0ed:	xchg   ecx,eax
  40b0ee:	mov    bh,0x8d
  40b0f0:	and    DWORD PTR [ecx+edx*2],esi
  40b0f3:	ret    
  40b0f4:	mov    edx,0xd861ffa5
  40b0f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0fa:	retf   0x47e8
  40b0fd:	jne    0x40b08e
  40b0ff:	outs   dx,DWORD PTR ds:[esi]
  40b100:	mov    bh,0xce
  40b102:	ret    
  40b103:	das    
  40b104:	pop    ecx
  40b105:	fidivr DWORD PTR [eax+eax*4+0x238b1b01]
  40b10c:	scas   eax,DWORD PTR es:[edi]
  40b10d:	inc    eax
  40b10e:	sub    al,0xa6
  40b110:	mov    dh,0x33
  40b112:	sbb    al,0xf4
  40b114:	mov    WORD PTR [ecx-0x75],cs
  40b117:	idiv   BYTE PTR [edi+0x1d800f10]
  40b11d:	pop    esi
  40b11e:	std    
  40b11f:	jnp    0x40b157
  40b121:	rcl    BYTE PTR [ecx+0x6a],cl
  40b124:	adc    BYTE PTR [eax+0x1f],bl
  40b127:	test   eax,0xee125ec3
  40b12c:	ins    DWORD PTR es:[edi],dx
  40b12d:	or     cl,ah
  40b12f:	pop    ecx
  40b130:	sbb    edx,DWORD PTR [ebp+0x65]
  40b133:	icebp  
  40b134:	std    
  40b135:	(bad)
  40b138:	test   esp,edx
  40b13a:	in     al,0x7f
  40b13c:	popf   
  40b13d:	rol    BYTE PTR ds:0x8cfb749,1
  40b143:	inc    esp
  40b144:	xor    esp,DWORD PTR [ecx+edx*1]
  40b147:	pop    edi
  40b148:	(bad)
  40b14b:	rol    BYTE PTR [ebx-0x3386f910],1
  40b151:	ss push esi
  40b153:	push   0x38299e6e
  40b158:	pushf  
  40b159:	ret    
  40b15a:	add    al,0xcf
  40b15d:	mov    al,ds:0x81444e42
  40b162:	aas    
  40b163:	outs   dx,BYTE PTR ds:[esi]
  40b164:	outs   dx,DWORD PTR ds:[esi]
  40b165:	sub    eax,0x1b51f394
  40b16a:	cwde   
  40b16b:	jmp    0x40b13a
  40b16d:	(bad)  
  40b16e:	cmp    dl,al
  40b170:	ja     0x40b115
  40b172:	xor    esi,DWORD PTR [eax+0x375164b8]
  40b178:	mov    WORD PTR [esi+0x465a89d8],?
  40b17e:	fisttp DWORD PTR [edx-0x65]
  40b181:	test   DWORD PTR [edx-0x5162b137],edx
  40b187:	into   
  40b188:	mov    edi,0x4e06f58
  40b18d:	outs   dx,BYTE PTR ds:[esi]
  40b18e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b18f:	bound  esp,QWORD PTR [edx]
  40b191:	in     eax,0x44
  40b193:	pop    eax
  40b194:	pop    esp
  40b195:	mov    dh,0xbe
  40b197:	push   eax
  40b198:	inc    esi
  40b199:	data16 cmp cl,al
  40b19c:	shr    DWORD PTR [ebx-0x250d79b5],cl
  40b1a2:	test   ecx,ebx
  40b1a4:	pusha  
  40b1a5:	mov    BYTE PTR [ebx+ebp*2],al
  40b1a8:	dec    esp
  40b1a9:	jnp    0x40b192
  40b1ab:	adc    dl,BYTE PTR [edx-0xb]
  40b1ae:	push   ebx
  40b1af:	sub    al,0x4e
  40b1b1:	xor    DWORD PTR [eax-0x1e],ecx
  40b1b4:	ds (bad) 
  40b1b6:	pop    eax
  40b1b7:	test   BYTE PTR [edx-0x35],bh
  40b1ba:	dec    esi
  40b1bb:	pop    esi
  40b1bc:	xchg   edi,eax
  40b1bd:	fild   QWORD PTR [eax-0x62e87d9f]
  40b1c3:	mov    dh,0x4
  40b1c5:	jb     0x40b232
  40b1c7:	mov    ecx,0xdd43fde9
  40b1cc:	mov    al,ds:0x405bd076
  40b1d1:	xchg   esi,eax
  40b1d2:	dec    ecx
  40b1d3:	pop    eax
  40b1d4:	push   DWORD PTR [ebx]
  40b1d6:	rcr    bh,1
  40b1d8:	xor    ah,BYTE PTR [ebp+0x3e]
  40b1db:	dec    ecx
  40b1dc:	lahf   
  40b1dd:	in     al,0x98
  40b1df:	fcomp  DWORD PTR [edx-0x26]
  40b1e2:	int3   
  40b1e3:	stos   DWORD PTR es:[edi],eax
  40b1e4:	pusha  
  40b1e5:	fdivr  DWORD PTR [esi]
  40b1e7:	add    dl,BYTE PTR [esi+0x5307fc45]
  40b1ed:	arpl   WORD PTR [esi*4-0x343348be],si
  40b1f4:	std    
  40b1f5:	mov    esp,0x49d60ff6
  40b1fa:	xor    esp,DWORD PTR [edx]
  40b1fc:	test   eax,0x126e54dd
  40b201:	sahf   
  40b202:	test   eax,0xf4b0a658
  40b207:	arpl   WORD PTR [ecx+0x71],ax
  40b20a:	push   ebx
  40b20b:	sbb    eax,0xd98cc1da
  40b210:	repz inc ebp
  40b212:	jmp    DWORD PTR [edi-0x34]
  40b215:	lahf   
  40b216:	inc    ecx
  40b217:	ins    DWORD PTR es:[edi],dx
  40b218:	call   0xd9f9:0xe75855aa
  40b21f:	pop    ebx
  40b220:	popa   
  40b221:	mov    ebx,0xac7665ab
  40b227:	add    ecx,0x73
  40b22a:	jnp    0x40b1d1
  40b22c:	in     al,0xf
  40b22e:	out    dx,al
  40b22f:	retf   
  40b230:	in     al,0x2f
  40b232:	lods   eax,DWORD PTR ds:[esi]
  40b233:	fmul   QWORD PTR [edi+0x23]
  40b236:	sub    BYTE PTR [eax-0x3f1825ff],cl
  40b23c:	mov    ss,WORD PTR [ebx-0x6d089b19]
  40b242:	adc    ah,BYTE PTR [eax]
  40b244:	adc    al,0xaa
  40b246:	jmp    0xa3cc2f15
  40b24b:	out    dx,al
  40b24c:	push   ecx
  40b24d:	mov    ds:0x557be32d,al
  40b252:	push   cs
  40b253:	stc    
  40b254:	gs jmp 0xa8dc:0x203a67c1
  40b25c:	push   cs
  40b25d:	pop    ebp
  40b25e:	jmp    0x3649bfdd
  40b263:	dec    edx
  40b264:	test   eax,0x26559d40
  40b269:	in     eax,0xe7
  40b26b:	sub    BYTE PTR [ebx-0x1b],ah
  40b26e:	and    DWORD PTR [ecx],0xa7d4e03a
  40b274:	(bad)  
  40b275:	iret   
  40b276:	loope  0x40b23f
  40b278:	cmp    BYTE PTR [esi+0x3a],ch
  40b27b:	js     0x40b28f
  40b27d:	xlat   BYTE PTR ds:[ebx]
  40b27e:	sub    ebx,edx
  40b280:	ret    0x6d41
  40b283:	cs out dx,al
  40b285:	sub    BYTE PTR [edx-0x1a],dl
  40b288:	xchg   BYTE PTR [eax+0x1e],dl
  40b28b:	inc    edx
  40b28c:	pop    ecx
  40b28d:	loopne 0x40b2ad
  40b28f:	es stos DWORD PTR es:[edi],eax
  40b291:	dec    ebx
  40b292:	pop    esp
  40b293:	push   edi
  40b294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b295:	or     BYTE PTR [esi],0x80
  40b298:	sbb    BYTE PTR [eax+0x24f126a8],bl
  40b29e:	jge    0x40b2ea
  40b2a0:	add    ebx,DWORD PTR [esi+0x2cc9f0b7]
  40b2a6:	push   eax
  40b2a7:	and    dh,BYTE PTR [ecx]
  40b2a9:	dec    ebp
  40b2aa:	push   ebx
  40b2ab:	or     BYTE PTR [esi+0x11350ca8],dh
  40b2b1:	test   DWORD PTR [ebp+0x5a],ebp
  40b2b4:	add    BYTE PTR [ecx],dh
  40b2b6:	daa    
  40b2b7:	pop    ecx
  40b2b8:	cmp    eax,0xbfefb2ff
  40b2bd:	sub    bl,BYTE PTR [ebp-0xd]
  40b2c0:	shl    BYTE PTR [edx],1
  40b2c2:	dec    ebp
  40b2c3:	inc    ecx
  40b2c4:	jbe    0x40b302
  40b2c6:	and    al,al
  40b2c8:	push   0x2ca5c59d
  40b2cd:	lock mov bl,0x77
  40b2d0:	bound  eax,QWORD PTR [edi]
  40b2d2:	lds    eax,FWORD PTR [esi]
  40b2d4:	dec    esi
  40b2d5:	xor    BYTE PTR [eax-0x38],dl
  40b2d8:	mov    ebx,0xbe339ba
  40b2dd:	leave  
  40b2de:	or     DWORD PTR [edi-0x4],edi
  40b2e1:	adc    al,0x6e
  40b2e3:	jo     0x40b307
  40b2e5:	inc    esp
  40b2e6:	jmp    0x40b29f
  40b2e8:	adc    ebp,DWORD PTR [ecx]
  40b2ea:	inc    DWORD PTR [edi]
  40b2ec:	mov    BYTE PTR [ebp+0x44],dh
  40b2ef:	(bad)  
  40b2f1:	and    DWORD PTR [edi],ecx
  40b2f3:	xchg   esi,eax
  40b2f4:	xchg   edi,eax
  40b2f5:	pushf  
  40b2f6:	call   0x21daf23a
  40b2fb:	dec    eax
  40b2fc:	in     eax,dx
  40b2fd:	nop
  40b2fe:	adc    edi,DWORD PTR [ebp*8-0x241a847f]
  40b305:	aas    
  40b306:	xchg   esp,eax
  40b307:	mov    esi,0xea5c0b6a
  40b30c:	leave  
  40b30d:	mov    esp,0x28d8e687
  40b312:	sbb    eax,0xc712b412
  40b317:	fidivr WORD PTR cs:[ebp+0x524fc8dd]
  40b31e:	jge    0x40b31f
  40b320:	mov    edx,0x38f18b81
  40b325:	inc    edi
  40b326:	xchg   ebp,eax
  40b327:	dec    ecx
  40b328:	jl     0x40b3a7
  40b32a:	bswap  esi
  40b32c:	sahf   
  40b32d:	sub    ah,BYTE PTR [esi+0xe]
  40b330:	sar    BYTE PTR [edx],1
  40b332:	push   esp
  40b333:	cmp    ebp,0x4
  40b336:	sub    DWORD PTR [edx],edx
  40b338:	arpl   WORD PTR fs:[eax],ax
  40b33b:	add    al,0x21
  40b33d:	push   eax
  40b33e:	sbb    al,0xe7
  40b340:	xchg   esi,eax
  40b341:	nop
  40b342:	or     DWORD PTR [esi+edx*2+0x73e80b1a],0x245a5d5f
  40b34d:	ja     0x40b37a
  40b34f:	pop    ebp
  40b350:	mov    edi,0x54683b1b
  40b355:	fs push ss
  40b357:	pusha  
  40b358:	pushf  
  40b359:	or     esp,edx
  40b35b:	sbb    bl,dh
  40b35d:	out    0xd1,al
  40b35f:	data16 jb 0x40b396
  40b362:	iretw  
  40b364:	fisttp DWORD PTR [ecx-0x7af80a3f]
  40b36a:	ror    BYTE PTR [edx+0x702fd962],cl
  40b370:	cs shr dh,0xfd
  40b374:	jmp    0x40b3b6
  40b376:	outs   dx,BYTE PTR ds:[esi]
  40b377:	shr    BYTE PTR [ebx+edx*4-0x24a0af84],1
  40b37e:	leave  
  40b37f:	pusha  
  40b380:	sbb    cl,bl
  40b382:	sub    ch,cl
  40b384:	push   esi
  40b385:	in     eax,0xe
  40b387:	jl     0x40b3b9
  40b389:	ins    BYTE PTR es:[edi],dx
  40b38a:	inc    eax
  40b38b:	fidivr DWORD PTR [esi-0x7d]
  40b38e:	xchg   ecx,eax
  40b38f:	jecxz  0x40b3be
  40b391:	push   0xfae5c693
  40b396:	out    0x59,eax
  40b398:	push   ebx
  40b399:	xchg   edi,eax
  40b39a:	loopne 0x40b328
  40b39c:	push   eax
  40b39d:	ror    cl,0x7f
  40b3a0:	bound  esp,QWORD PTR [ebp-0x3db1f4ae]
  40b3a6:	rcl    DWORD PTR ds:0xb9ffda50,1
  40b3ac:	call   0x7343b9bd
  40b3b1:	popa   
  40b3b2:	imul   ecx,DWORD PTR [edi-0x2c41b089],0xa8c7d73a
  40b3bc:	mov    esp,0x4a462374
  40b3c1:	sub    cl,BYTE PTR [ebx]
  40b3c3:	daa    
  40b3c4:	or     cl,ah
  40b3c6:	dec    ebp
  40b3c7:	cmc    
  40b3c8:	xor    eax,0x14aa993b
  40b3cd:	rcl    DWORD PTR ds:[ecx+0x2],1
  40b3d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3d2:	mov    ah,0x40
  40b3d4:	retf   
  40b3d5:	dec    edx
  40b3d6:	inc    esi
  40b3d7:	xor    cl,BYTE PTR [edx-0x61990e28]
  40b3dd:	push   edx
  40b3de:	cld    
  40b3df:	test   BYTE PTR [ebx-0x6efc3481],dl
  40b3e5:	ss das 
  40b3e7:	cmp    al,0x9
  40b3e9:	add    esi,esp
  40b3eb:	sub    ah,0x5e
  40b3ee:	gs xchg esp,eax
  40b3f0:	mov    BYTE PTR [ecx+0x52aaf04e],cl
  40b3f6:	inc    esi
  40b3f7:	out    0x98,eax
  40b3f9:	xor    BYTE PTR [ebp+0x78],bl
  40b3fc:	mov    dh,dh
  40b3fe:	pop    edi
  40b3ff:	dec    edi
  40b400:	and    DWORD PTR [edi],eax
  40b402:	call   0xa3b5:0x58a5d344
  40b409:	loopne 0x40b3bd
  40b40b:	retf   0x3beb
  40b40e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b40f:	sbb    DWORD PTR [ecx-0x60af11ab],ecx
  40b415:	inc    ebp
  40b416:	popa   
  40b417:	pop    edi
  40b418:	adc    DWORD PTR [esi+edx*8-0x36],esi
  40b41c:	inc    edi
  40b41d:	sub    cl,BYTE PTR [eax-0x50fa0b4b]
  40b423:	xor    esp,DWORD PTR [esi+0x35ecad7]
  40b429:	mov    dl,0x60
  40b42b:	lods   al,BYTE PTR ds:[esi]
  40b42c:	and    eax,0x3eadd08e
  40b431:	push   ss
  40b432:	sbb    edx,ecx
  40b434:	fwait
  40b435:	div    BYTE PTR [eax+0x358c4820]
  40b43b:	scas   eax,DWORD PTR es:[edi]
  40b43c:	or     ecx,DWORD PTR [eax-0x13d92fed]
  40b442:	outs   dx,DWORD PTR ds:[esi]
  40b443:	xchg   DWORD PTR [ebx-0x8],esp
  40b446:	xchg   esi,eax
  40b447:	push   edx
  40b448:	jae    0x40b4a0
  40b44a:	gs in  al,0xbb
  40b44d:	inc    edx
  40b44e:	pop    ss
  40b44f:	neg    BYTE PTR [ebx+0x1]
  40b452:	cdq    
  40b453:	nop
  40b454:	inc    ecx
  40b455:	(bad)  
  40b456:	repz ffreep st(6)
  40b459:	lea    edx,es:[ebx]
  40b45c:	sbb    al,0x62
  40b45e:	jae    0x40b45f
  40b460:	add    ah,BYTE PTR [ebp+0x5a]
  40b463:	popf   
  40b464:	jp     0x40b3ed
  40b466:	inc    ebx
  40b467:	(bad)  
  40b468:	mov    edi,esi
  40b46a:	mov    edx,ss
  40b46c:	loope  0x40b477
  40b46e:	mov    ds:0xc9476833,eax
  40b473:	and    dh,BYTE PTR [ecx+0x17d7017a]
  40b479:	out    dx,eax
  40b47a:	mov    bl,0xdc
  40b47c:	scas   eax,DWORD PTR es:[edi]
  40b47d:	ds sub bl,cl
  40b480:	sbb    ch,BYTE PTR [ebx]
  40b482:	xchg   ebx,eax
  40b483:	mov    DWORD PTR [esi-0x16],eax
  40b486:	jmp    0xe810df0a
  40b48b:	aaa    
  40b48c:	xlat   BYTE PTR ds:[ebx]
  40b48d:	jo     0x40b4d2
  40b48f:	cs into 
  40b491:	jnp    0x40b45e
  40b493:	into   
  40b494:	icebp  
  40b495:	cmc    
  40b496:	jp     0x40b4bc
  40b498:	sbb    BYTE PTR [edx-0x1900f652],cl
  40b49e:	fstp   QWORD PTR [eax-0x70523ad]
  40b4a4:	pushf  
  40b4a5:	and    DWORD PTR [esi+0x2c5edec1],ecx
  40b4ab:	lahf   
  40b4ac:	repz cmp al,0x66
  40b4af:	or     dl,BYTE PTR [ebx+0x4f]
  40b4b2:	mov    ebx,DWORD PTR [esi]
  40b4b4:	push   cs
  40b4b5:	jnp    0x40b4d1
  40b4b7:	inc    ebp
  40b4b8:	inc    edx
  40b4b9:	xor    ebp,DWORD PTR [eax]
  40b4bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4bc:	push   edi
  40b4bd:	sub    ah,BYTE PTR ds:0xd38dff82
  40b4c3:	mov    ecx,0xbc21b136
  40b4c8:	pop    esi
  40b4c9:	and    ebp,esi
  40b4cb:	xor    eax,0x80d6a4d0
  40b4d0:	pop    ecx
  40b4d1:	inc    eax
  40b4d2:	cmp    al,BYTE PTR ds:0x4abb42ae
  40b4d8:	outs   dx,BYTE PTR ds:[esi]
  40b4d9:	push   ebx
  40b4da:	ds mov cs,esp
  40b4dd:	pusha  
  40b4de:	sbb    dl,BYTE PTR [esp+ecx*4+0x30bdee05]
  40b4e5:	cmp    DWORD PTR [eax+0x62],eax
  40b4e8:	and    BYTE PTR [edi-0x17],dh
  40b4eb:	jecxz  0x40b4bf
  40b4ed:	xchg   esp,eax
  40b4ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4f0:	in     al,0xb
  40b4f2:	sub    eax,0xf758c3e6
  40b4f7:	and    BYTE PTR [esi+0x69830afe],cl
  40b4fd:	xchg   esp,eax
  40b4fe:	in     eax,dx
  40b4ff:	pop    ss
  40b500:	outs   dx,BYTE PTR ds:[esi]
  40b501:	int3   
  40b502:	sbb    BYTE PTR [ecx-0x2dd606b],dl
  40b508:	lock enter 0x65a7,0xbd
  40b50d:	inc    esi
  40b50e:	cmp    DWORD PTR [eax-0x7a6e610e],0xffffff81
  40b515:	dec    ebx
  40b516:	(bad)  
  40b517:	lods   eax,DWORD PTR ds:[esi]
  40b518:	scas   al,BYTE PTR es:[edi]
  40b519:	in     al,0x9f
  40b51b:	addr16 mov ebp,0xd9b18ce7
  40b521:	push   ds
  40b522:	into   
  40b523:	out    0x75,eax
  40b525:	inc    ebp
  40b526:	stos   DWORD PTR es:[edi],eax
  40b527:	ror    BYTE PTR [edx-0x15],cl
  40b52a:	xchg   eax,edi
  40b52c:	xor    bl,BYTE PTR [eax+edi*2-0x5067a10c]
  40b533:	adc    eax,0xad6fc9e0
  40b538:	(bad)  [ebp-0xb0b03a1]
  40b53e:	cmp    ebx,DWORD PTR [edi+0x24260b3b]
  40b544:	fwait
  40b545:	cmp    al,0x5b
  40b547:	fmul   st(6),st
  40b549:	sub    al,0xe1
  40b54b:	mov    ebp,0xad61faf0
  40b550:	or     DWORD PTR [ecx],esp
  40b552:	(bad)  
  40b553:	daa    
  40b554:	test   ah,0xaf
  40b557:	dec    eax
  40b558:	push   cs
  40b559:	add    BYTE PTR [eax],al
  40b55b:	sahf   
  40b55c:	std    
  40b55d:	pop    esi
  40b55e:	dec    eax
  40b55f:	popf   
  40b560:	clc    
  40b561:	inc    esi
  40b562:	mov    cl,0xd
  40b564:	sub    esi,DWORD PTR [ebx-0x53]
  40b567:	xchg   edi,eax
  40b568:	xchg   edi,eax
  40b569:	adc    eax,0x5227b009
  40b56e:	popf   
  40b56f:	pop    edx
  40b570:	push   esi
  40b571:	into   
  40b572:	cmp    eax,0x9c0d58c5
  40b577:	xchg   BYTE PTR [esi],dl
  40b579:	scas   al,BYTE PTR es:[edi]
  40b57a:	shr    DWORD PTR [ebx+edi*2-0x100d7830],0x93
  40b582:	pushf  
  40b583:	stos   BYTE PTR es:[edi],al
  40b584:	neg    BYTE PTR [edx+ecx*4-0x66758575]
  40b58b:	sahf   
  40b58c:	mov    bh,0xf7
  40b58e:	mov    ah,0x8
  40b590:	test   DWORD PTR [esi+0x1c],esp
  40b593:	dec    esi
  40b594:	hlt    
  40b595:	neg    BYTE PTR [esi-0x66]
  40b598:	mov    ebp,0x40cf7538
  40b59d:	cmp    DWORD PTR [edx],ebp
  40b59f:	pop    ds
  40b5a0:	xchg   edx,eax
  40b5a1:	das    
  40b5a2:	(bad)  
  40b5a3:	cmp    esp,DWORD PTR [ecx-0x251f9228]
  40b5a9:	xchg   ebp,eax
  40b5aa:	mov    cl,BYTE PTR [ebp+0x57]
  40b5ad:	mov    esi,edx
  40b5af:	jle    0x40b53a
  40b5b1:	lea    ebp,[edx+0x30b2f19f]
  40b5b7:	add    edi,ecx
  40b5b9:	popa   
  40b5ba:	inc    edx
  40b5bb:	mov    ebp,0x10818ba9
  40b5c0:	mov    eax,ds:0x195bbe0c
  40b5c5:	cs adc al,0x98
  40b5c8:	jl     0x40b57f
  40b5ca:	push   ds
  40b5cb:	inc    ebp
  40b5cc:	pop    edx
  40b5cd:	les    ecx,FWORD PTR gs:[ebp+0x41]
  40b5d1:	test   eax,0xa44e8330
  40b5d6:	mov    BYTE PTR [ebx-0x5b825697],bl
  40b5dc:	fucom  st(5)
  40b5de:	ret    
  40b5df:	ret    
  40b5e0:	inc    ebp
  40b5e1:	inc    esp
  40b5e2:	sbb    BYTE PTR [ebp-0x21f621c1],bh
  40b5e8:	sbb    al,BYTE PTR [ecx-0x3bdf2d13]
  40b5ee:	xor    edi,DWORD PTR [edi-0x78]
  40b5f1:	dec    ebx
  40b5f2:	gs push 0x9fdeacbb
  40b5f8:	call   0xf3c5:0x24635d3a
  40b5ff:	or     al,0xe2
  40b601:	div    BYTE PTR [ecx+ecx*2+0x36]
  40b605:	das    
  40b606:	pop    es
  40b607:	repz jecxz 0x40b603
  40b60a:	imul   BYTE PTR [esi+ecx*8+0x38]
  40b60e:	int3   
  40b60f:	pusha  
  40b610:	inc    edx
  40b611:	mov    esi,0xdc1acd29
  40b616:	add    BYTE PTR [ebp+0x6f39096],0xfc
  40b61d:	out    0xfa,al
  40b61f:	fistp  DWORD PTR [eax+0x29807819]
  40b625:	push   0xffffff88
  40b627:	sahf   
  40b628:	xor    DWORD PTR [ebp-0x36bac2a6],ebp
  40b62e:	ficomp WORD PTR [edx]
  40b630:	inc    esp
  40b631:	das    
  40b632:	push   edi
  40b633:	dec    ebx
  40b634:	and    ebp,DWORD PTR [edi]
  40b636:	and    al,0x20
  40b638:	xchg   ebp,eax
  40b639:	fwait
  40b63a:	push   ecx
  40b63b:	mov    BYTE PTR [esi+ebx*8+0x19d27fbc],ch
  40b642:	pop    ecx
  40b643:	(bad)  
  40b644:	frstor [ebx+0x28ea296d]
  40b64a:	rcl    DWORD PTR [esi+eiz*1+0x1eda37a5],cl
  40b651:	pusha  
  40b652:	call   0x97d4f62
  40b657:	xor    al,0x79
  40b659:	pop    ds
  40b65a:	hlt    
  40b65b:	xor    DWORD PTR [ebx-0x20],ebp
  40b65e:	mov    bl,0xd6
  40b660:	int    0x28
  40b662:	cmp    cl,BYTE PTR [eax-0x42]
  40b665:	retf   
  40b666:	adc    BYTE PTR [ecx],dl
  40b668:	scas   al,BYTE PTR es:[edi]
  40b669:	leave  
  40b66a:	test   ah,ah
  40b66c:	fisttp WORD PTR [ebx+0x3dc990bf]
  40b672:	inc    esi
  40b673:	imul   esp,ebp,0x53
  40b676:	call   0x6869dcc7
  40b67b:	mov    esi,0x1372b005
  40b680:	(bad)  
  40b681:	adc    ah,BYTE PTR [eax]
  40b683:	mov    ds:0x1dc17b53,eax
  40b688:	dec    esp
  40b689:	jb     0x40b616
  40b68b:	retf   0xea48
  40b68e:	inc    ecx
  40b68f:	push   ebx
  40b690:	jg     0x40b639
  40b692:	neg    DWORD PTR [edi-0x8c0d03a]
  40b698:	push   ecx
  40b699:	mov    al,ds:0x7bc8a3c3
  40b69e:	loop   0x40b6ad
  40b6a0:	fdivp  st(2),st
  40b6a2:	mov    al,ds:0xc4ffa684
  40b6a7:	jl     0x40b6c3
  40b6a9:	push   0x3c98984b
  40b6ae:	repnz cwde 
  40b6b0:	mov    ecx,0xd03ed627
  40b6b5:	repz jl 0x40b69f
  40b6b8:	jmp    0x40b66e
  40b6ba:	mov    ds:0xf43ef035,eax
  40b6bf:	pop    ebx
  40b6c0:	lock loopne 0x40b686
  40b6c3:	int    0x49
  40b6c5:	pop    eax
  40b6c6:	jl     0x40b678
  40b6c8:	sbb    al,0x0
  40b6ca:	or     bh,dh
  40b6cc:	call   0xf2f76dff
  40b6d1:	dec    ebx
  40b6d2:	bound  ecx,QWORD PTR ds:0x826d08c2
  40b6d8:	xchg   esp,eax
  40b6d9:	xchg   esi,eax
  40b6da:	push   esi
  40b6db:	pop    ds
  40b6dc:	int3   
  40b6dd:	dec    DWORD PTR [ebp-0x16]
  40b6e0:	fmul   DWORD PTR [eax-0x7d]
  40b6e3:	fs pushf 
  40b6e5:	rcl    eax,0xba
  40b6e8:	neg    ebp
  40b6ea:	(bad)  [ebx]
  40b6ec:	adc    al,0x75
  40b6ee:	ficom  WORD PTR [esi]
  40b6f0:	dec    ebx
  40b6f1:	icebp  
  40b6f2:	inc    ecx
  40b6f3:	sbb    al,0xae
  40b6f5:	mov    eax,ds:0x3330734
  40b6fa:	mov    WORD PTR [esi],?
  40b6fc:	pop    ebp
  40b6fd:	jmp    0x40b6c4
  40b6ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b700:	repnz pop ecx
  40b702:	mov    ah,0xd8
  40b704:	mov    cl,0x31
  40b706:	sbb    DWORD PTR [esi+edx*8+0x26d1d07a],esp
  40b70d:	pop    esp
  40b70e:	ror    DWORD PTR [ecx+0x4c3306bf],0x8
  40b715:	loope  0x40b6f9
  40b717:	sub    bh,bl
  40b719:	shl    BYTE PTR [eax+0x3e],cl
  40b71c:	mov    WORD PTR [ebx],es
  40b71e:	xchg   edx,eax
  40b71f:	js     0x40b6c8
  40b721:	jp     0x40b6a8
  40b723:	add    al,0x52
  40b725:	std    
  40b726:	pop    ebx
  40b727:	xchg   edi,eax
  40b728:	dec    edi
  40b729:	in     al,0x87
  40b72b:	push   ds
  40b72c:	gs pop esi
  40b72e:	mov    ecx,0xe951a842
  40b733:	mov    bh,0xcf
  40b735:	pop    ds
  40b736:	adc    DWORD PTR [ecx-0x338b247a],edx
  40b73c:	jns    0x40b6f4
  40b73e:	lods   al,BYTE PTR ds:[si]
  40b740:	jge    0x40b6f3
  40b742:	xor    eax,0x11d10511
  40b747:	fs mov BYTE PTR es:[eax],ch
  40b74b:	xchg   edi,eax
  40b74c:	sbb    eax,0x7dc0db0d
  40b751:	stc    
  40b752:	call   0x6114:0xaabd101c
  40b759:	loop   0x40b7c0
  40b75b:	ret    0x156c
  40b75e:	cmp    BYTE PTR [edx+0x7f],dh
  40b761:	(bad)  
  40b762:	push   esi
  40b763:	cmp    eax,0xe7413452
  40b768:	mov    eax,0x555b4521
  40b76d:	rcr    BYTE PTR [ecx],0x59
  40b770:	pop    ebp
  40b771:	pop    ebx
  40b772:	inc    ebp
  40b773:	(bad)  [ebp+0x18]
  40b776:	push   0xffffffc6
  40b778:	pusha  
  40b779:	cmp    ah,bl
  40b77b:	push   ds
  40b77c:	fwait
  40b77d:	xchg   ebx,eax
  40b77e:	inc    esp
  40b77f:	rol    BYTE PTR [eax+0x43],1
  40b782:	cmp    al,0x91
  40b784:	enter  0x5402,0xa7
  40b788:	or     esp,DWORD PTR [ebx+0x71a1deeb]
  40b78e:	mov    esi,0xe038543d
  40b793:	ror    DWORD PTR [ebp+0x41],1
  40b796:	mov    ecx,0x9f286b34
  40b79b:	adc    eax,0xfea64b14
  40b7a0:	dec    esi
  40b7a1:	loope  0x40b78e
  40b7a3:	sbb    DWORD PTR [edx+0x111eda2d],eax
  40b7a9:	icebp  
  40b7aa:	pop    ebp
  40b7ab:	and    eax,0x8877748d
  40b7b0:	push   ss
  40b7b1:	lods   al,BYTE PTR ds:[esi]
  40b7b2:	std    
  40b7b3:	pop    esi
  40b7b4:	imul   eax,DWORD PTR [edi],0x216100d
  40b7ba:	fbstp  TBYTE PTR [eax+0xffe283]
  40b7c0:	out    0x53,al
  40b7c2:	rcl    BYTE PTR [ecx-0x12cc2a12],cl
  40b7c8:	stos   DWORD PTR es:[edi],eax
  40b7c9:	div    ebp
  40b7cb:	push   esi
  40b7cc:	add    DWORD PTR [ecx],esi
  40b7ce:	sti    
  40b7cf:	push   0x3a
  40b7d1:	repz dec esi
  40b7d3:	xor    DWORD PTR [ebx+0x7abdccd2],0x71
  40b7da:	or     al,0x4e
  40b7dc:	jo     0x40b834
  40b7de:	jns    0x40b76c
  40b7e0:	cmp    ch,ah
  40b7e2:	dec    esp
  40b7e3:	xor    BYTE PTR [ecx-0x2c],bl
  40b7e6:	shl    dl,cl
  40b7e8:	sub    eax,0xb6d90be8
  40b7ed:	and    DWORD PTR [ebx+0x5878c518],esp
  40b7f3:	add    BYTE PTR [edx+0x3735e99f],dh
  40b7f9:	mov    ds:0x879bac89,al
  40b7fe:	push   eax
  40b7ff:	add    al,0x63
  40b801:	inc    esp
  40b802:	sub    bl,ah
  40b804:	xlat   BYTE PTR ds:[ebx]
  40b805:	add    ah,0xc5
  40b808:	test   eax,0xa7690f6f
  40b80d:	dec    ebx
  40b80e:	inc    edi
  40b80f:	mov    eax,0xca83288c
  40b814:	es and al,0x35
  40b817:	fidivr DWORD PTR [ebx-0x136e15d0]
  40b81d:	(bad)  
  40b81e:	cmp    BYTE PTR [ecx-0xc],bl
  40b821:	mov    ah,0xc5
  40b823:	jae    0x40b8a2
  40b825:	pop    DWORD PTR [edx+0x30]
  40b828:	mov    ebp,0xde125a1
  40b82d:	sub    eax,esi
  40b82f:	fisub  DWORD PTR [ecx]
  40b831:	out    0x5,al
  40b833:	push   ebp
  40b834:	nop
  40b835:	jno    0x76a6e93b
  40b83b:	aam    0xdf
  40b83d:	pop    edx
  40b83e:	call   0xeed8:0x484a7614
  40b845:	pop    ecx
  40b846:	inc    ebx
  40b847:	and    bl,BYTE PTR [eax]
  40b849:	jp     0x40b7d1
  40b84b:	inc    edi
  40b84c:	adc    BYTE PTR [esi],0x78
  40b84f:	sub    al,0xfe
  40b851:	jge    0x40b871
  40b853:	dec    edi
  40b854:	stos   BYTE PTR es:[edi],al
  40b855:	adc    eax,0xe4c5c51a
  40b85a:	ss pop ebx
  40b85c:	mov    dl,0x66
  40b85e:	mul    DWORD PTR [edx]
  40b860:	xchg   ebp,eax
  40b861:	mov    ss,WORD PTR [edi-0x18]
  40b864:	rol    DWORD PTR [eax],cl
  40b866:	(bad)  
  40b868:	fwait
  40b869:	push   edi
  40b86a:	jmp    0x40b7f2
  40b86c:	lahf   
  40b86d:	dec    edi
  40b86e:	arpl   WORD PTR [eax+0x71],si
  40b871:	stc    
  40b872:	outs   dx,DWORD PTR ds:[esi]
  40b873:	mov    ch,0xeb
  40b875:	cwde   
  40b876:	inc    ecx
  40b877:	inc    ebx
  40b878:	mov    cl,dh
  40b87a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b87b:	sbb    BYTE PTR [edx],dh
  40b87d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b87e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b87f:	mov    BYTE PTR [eax],cl
  40b881:	mov    esi,0x2b7d5879
  40b886:	mov    ah,0xff
  40b888:	mov    ecx,0x1cd29546
  40b88d:	imul   esi,esi,0xc24d6df8
  40b893:	mov    ebx,es
  40b895:	nop
  40b896:	xchg   ebx,eax
  40b897:	retf   
  40b898:	mov    ds,edx
  40b89a:	push   edx
  40b89b:	lahf   
  40b89c:	pop    eax
  40b89d:	cmp    ah,BYTE PTR [ecx-0x6d]
  40b8a0:	sbb    ebp,ecx
  40b8a2:	es or  eax,0xc0c6e0ae
  40b8a8:	xor    al,BYTE PTR [eax-0x7ce5613c]
  40b8ae:	jge    0x40b882
  40b8b0:	shr    BYTE PTR [eax+0x1ad18d0e],0x2c
  40b8b7:	shl    esp,cl
  40b8b9:	push   esi
  40b8ba:	fstp   QWORD PTR [edi-0x12]
  40b8bd:	jo     0x40b882
  40b8bf:	inc    DWORD PTR ds:0x64ee32e9
  40b8c5:	in     eax,0x86
  40b8c7:	loopne 0x40b855
  40b8c9:	add    ah,ah
  40b8cb:	and    al,0x7d
  40b8cd:	enter  0x2304,0x3c
  40b8d1:	loope  0x40b873
  40b8d3:	dec    ebx
  40b8d4:	gs push ebp
  40b8d6:	xchg   edi,eax
  40b8d7:	fbstp  TBYTE PTR [ebp-0x27eb5c22]
  40b8dd:	sbb    ah,BYTE PTR [eax-0x45]
  40b8e0:	push   0x8950cef9
  40b8e5:	imul   edi,DWORD PTR [esi-0x7adbc6e6],0x6c2369fe
  40b8ef:	or     cl,BYTE PTR [ecx-0x77]
  40b8f2:	cmp    al,0x83
  40b8f4:	outs   dx,WORD PTR ds:[esi]
  40b8f6:	sahf   
  40b8f7:	xchg   ebp,eax
  40b8f8:	out    0x58,al
  40b8fa:	sbb    dl,BYTE PTR [edi-0x64]
  40b8fd:	jo     0x40b923
  40b8ff:	jno    0x40b97c
  40b901:	idiv   dl
  40b903:	inc    edx
  40b904:	and    al,0x4c
  40b906:	mov    eax,0xf82b4062
  40b90b:	sub    dl,0xf1
  40b90e:	push   ebp
  40b90f:	(bad)  
  40b910:	push   ebx
  40b911:	pop    ebp
  40b912:	mov    eax,0x3b70fa6b
  40b917:	or     ebx,DWORD PTR [edi+eiz*1-0x59a052d4]
  40b91e:	and    eax,0xe3dd8454
  40b923:	fdiv   DWORD PTR [ecx+eiz*4]
  40b926:	push   0xffffffcd
  40b928:	test   eax,0x15d5da0f
  40b92d:	dec    esi
  40b92e:	push   cs
  40b92f:	rol    DWORD PTR [esi+esi*4-0x7567a14a],0xad
  40b937:	imul   edx,DWORD PTR [edi],0xffffffcb
  40b93a:	sub    BYTE PTR [edi],0x81
  40b93d:	and    ch,bl
  40b93f:	sub    dh,BYTE PTR [ecx]
  40b941:	sub    al,0xc2
  40b943:	test   al,0xec
  40b945:	int3   
  40b946:	dec    edi
  40b947:	cmp    BYTE PTR [eax+ebp*4+0x1c],cl
  40b94b:	ret    
  40b94c:	in     eax,dx
  40b94d:	pushf  
  40b94e:	daa    
  40b94f:	pusha  
  40b950:	mov    edi,0x27e50f4f
  40b955:	or     al,0xba
  40b957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b958:	fisttp QWORD PTR [eax-0xe06bc4b]
  40b95e:	or     bh,BYTE PTR [eax+0x5c778151]
  40b964:	stos   BYTE PTR es:[edi],al
  40b965:	add    BYTE PTR [ebx],bl
  40b967:	pop    ss
  40b968:	add    edx,DWORD PTR [esi+0x1ce2a7db]
  40b96e:	test   eax,0x741a3ab9
  40b973:	add    ebp,DWORD PTR [esi-0x1b0d571]
  40b979:	and    al,0x71
  40b97b:	retf   0xd4f7
  40b97e:	inc    edi
  40b97f:	pop    eax
  40b980:	mov    ebp,0x38cededa
  40b985:	jae    0x40b9f1
  40b987:	test   al,0x51
  40b989:	lahf   
  40b98a:	jmp    0x1ce63bc
  40b98f:	out    dx,al
  40b990:	ins    BYTE PTR es:[edi],dx
  40b991:	sbb    eax,0xc242df4c
  40b996:	shl    dl,1
  40b998:	loop   0x40b98b
  40b99a:	loope  0x40b999
  40b99c:	rcl    DWORD PTR [ebx+edx*2-0x1e],0x9
  40b9a1:	xlat   BYTE PTR ds:[ebx]
  40b9a2:	xchg   esi,eax
  40b9a3:	pop    ecx
  40b9a4:	push   esi
  40b9a5:	sahf   
  40b9a6:	and    al,0xc3
  40b9a8:	mov    ds:0x29404152,eax
  40b9ad:	mov    esi,0x7524b3d3
  40b9b2:	xchg   ecx,eax
  40b9b3:	sub    bl,BYTE PTR [esi+0x34f2f7ce]
  40b9b9:	scas   al,BYTE PTR es:[edi]
  40b9ba:	gs fwait
  40b9bc:	sbb    cl,BYTE PTR [ecx]
  40b9be:	nop
  40b9bf:	sar    DWORD PTR [ebp+0x5e],cl
  40b9c2:	lock push esp
  40b9c4:	xor    al,0x71
  40b9c6:	sbb    esi,esp
  40b9c8:	ins    DWORD PTR es:[edi],dx
  40b9c9:	push   edi
  40b9ca:	pop    es
  40b9cb:	outs   dx,BYTE PTR ds:[esi]
  40b9cc:	outs   dx,BYTE PTR ds:[esi]
  40b9cd:	or     eax,0x5c0dc2c0
  40b9d2:	sti    
  40b9d3:	rol    DWORD PTR [edx+0x52d04386],0xf7
  40b9da:	xchg   esp,eax
  40b9db:	fdiv   DWORD PTR [ebx]
  40b9dd:	sbb    DWORD PTR [edx+0x265abfe],edx
  40b9e3:	xchg   edx,eax
  40b9e4:	ret    
  40b9e5:	cmp    al,0xde
  40b9e7:	push   eax
  40b9e8:	push   eax
  40b9e9:	mov    esp,0xe06cac8e
  40b9ee:	fs repnz sti 
  40b9f1:	(bad)  
  40b9f2:	lods   al,BYTE PTR ds:[esi]
  40b9f3:	fs ret 
  40b9f5:	pop    ds
  40b9f6:	mov    ecx,0x48539387
  40b9fb:	sbb    cl,ch
  40b9fd:	mov    eax,ds:0x6f0ba179
  40ba02:	arpl   WORD PTR [ecx-0x13],cx
  40ba05:	scas   eax,DWORD PTR es:[edi]
  40ba06:	xlat   BYTE PTR ds:[ebx]
  40ba07:	(bad)
  40ba0a:	ss pop ebp
  40ba0c:	xchg   ebp,eax
  40ba0d:	outs   dx,DWORD PTR ds:[esi]
  40ba0e:	jecxz  0x40b9b4
  40ba10:	dec    ebx
  40ba11:	inc    ecx
  40ba12:	in     al,0xe
  40ba14:	mov    al,BYTE PTR [esi+ebx*4]
  40ba17:	cmp    eax,0x61f92a0b
  40ba1c:	sbb    esp,DWORD PTR ds:0x3260d71b
  40ba22:	pop    ebp
  40ba23:	inc    eax
  40ba24:	pop    ebp
  40ba25:	jge    0x40ba7c
  40ba27:	fsub   DWORD PTR [edx+0x36]
  40ba2a:	std    
  40ba2b:	xlat   BYTE PTR ds:[ebx]
  40ba2c:	out    dx,al
  40ba2d:	sub    eax,0x620d27dd
  40ba32:	xchg   ecx,esp
  40ba34:	add    al,0x6c
  40ba36:	imul   eax,DWORD PTR [eax+0x12],0xfe2f972
  40ba3d:	sbb    esp,DWORD PTR ds:0x125e63ea
  40ba43:	ins    BYTE PTR es:[edi],dx
  40ba44:	jo     0x40ba5a
  40ba46:	mov    ds:0x43f83d28,eax
  40ba4b:	push   ecx
  40ba4c:	ins    BYTE PTR es:[edi],dx
  40ba4d:	dec    edi
  40ba4e:	mov    cl,0x7d
  40ba50:	(bad)  
  40ba51:	and    eax,0x530f031e
  40ba56:	inc    ebp
  40ba57:	dec    esi
  40ba58:	pop    esi
  40ba59:	cmp    ch,BYTE PTR [edi]
  40ba5b:	push   edx
  40ba5c:	fs in  al,0x4a
  40ba5f:	jge    0x40babd
  40ba61:	xor    al,0xb3
  40ba63:	add    BYTE PTR [edi-0x722bf18c],bh
  40ba69:	adc    edx,0x387e3b3b
  40ba6f:	icebp  
  40ba70:	jo     0x40bae7
  40ba72:	lock scas eax,DWORD PTR es:[edi]
  40ba74:	inc    eax
  40ba75:	pop    edi
  40ba76:	xchg   DWORD PTR ds:0x9c1cd789,edi
  40ba7c:	mov    esi,0xc2174cf0
  40ba81:	fsubr  QWORD PTR [edx-0x7b]
  40ba84:	inc    ebp
  40ba85:	scas   eax,DWORD PTR es:[edi]
  40ba86:	dec    ecx
  40ba87:	loopne 0x40babb
  40ba89:	adc    DWORD PTR [edx+0x55],0x7d
  40ba8d:	addr16 dec eax
  40ba8f:	jae    0x40ba88
  40ba91:	dec    ebx
  40ba92:	and    BYTE PTR [ecx-0x2e],bl
  40ba95:	test   DWORD PTR [ecx],edi
  40ba97:	dec    edi
  40ba98:	loopne 0x40ba58
  40ba9a:	ficomp WORD PTR [ecx-0x80]
  40ba9d:	inc    eax
  40ba9e:	cli    
  40ba9f:	in     eax,dx
  40baa0:	call   0x13d6b3b4
  40baa5:	mov    dh,0x76
  40baa7:	dec    edx
  40baa8:	xchg   ecx,eax
  40baa9:	enter  0x8a90,0xcc
  40baad:	int    0x68
  40baaf:	mov    ah,BYTE PTR [edx]
  40bab1:	mov    bh,0x52
  40bab3:	ins    DWORD PTR es:[edi],dx
  40bab4:	das    
  40bab5:	push   cs
  40bab6:	mov    al,0x10
  40bab8:	loope  0x40bb14
  40baba:	jbe    0x40ba5a
  40babc:	adc    edx,DWORD PTR [ecx+0x22c5d2e0]
  40bac2:	out    dx,al
  40bac3:	sbb    BYTE PTR [edx-0x13],0xf9
  40bac7:	pop    edi
  40bac8:	push   ebp
  40bac9:	add    DWORD PTR [ebp-0x6],ebp
  40bacc:	add    bh,cl
  40bace:	push   cs
  40bacf:	mov    bh,0x69
  40bad1:	xor    DWORD PTR [esi],0x6
  40bad4:	mov    esi,0xe59db342
  40bad9:	cli    
  40bada:	xchg   BYTE PTR [ebp+0x37],al
  40badd:	sbb    cl,BYTE PTR [ebx+0x34]
  40bae0:	push   ecx
  40bae1:	lods   eax,DWORD PTR ds:[esi]
  40bae2:	lock push esp
  40bae4:	ins    DWORD PTR es:[edi],dx
  40bae5:	mov    DWORD PTR [edi],ebx
  40bae7:	or     DWORD PTR [edx+0x7c],ebx
  40baea:	jne    0x40bb68
  40baec:	lds    esi,FWORD PTR [edx]
  40baee:	lea    esi,[edx+eiz*8-0x62]
  40baf2:	jp     0x40bafe
  40baf4:	imul   esi,DWORD PTR [eax-0x26],0xa8fde56f
  40bafb:	inc    edx
  40bafc:	data16 fld TBYTE PTR [ecx]
  40baff:	cwde   
  40bb00:	sub    edi,DWORD PTR [ecx+eiz*1-0x6c]
  40bb04:	repz inc ecx
  40bb06:	mov    eax,ds:0xb1f5e067
  40bb0b:	add    al,0xa3
  40bb0d:	mov    al,ds:0x5ef8f21b
  40bb12:	jecxz  0x40bab2
  40bb14:	shl    BYTE PTR [ecx],cl
  40bb16:	cmp    esi,DWORD PTR [esi-0x428083f4]
  40bb1c:	(bad)  
  40bb1d:	mov    cl,0xba
  40bb1f:	int    0xbe
  40bb21:	mov    ebp,0xebf8da9a
  40bb26:	jl     0x40baad
  40bb28:	xchg   edi,eax
  40bb29:	loop   0x40bb24
  40bb2b:	sbb    ch,BYTE PTR [ebx]
  40bb2d:	inc    ebx
  40bb2e:	push   0x61
  40bb30:	adc    ebp,DWORD PTR [edx-0x53]
  40bb33:	icebp  
  40bb34:	xchg   DWORD PTR [edi+0x25],ecx
  40bb37:	in     eax,dx
  40bb38:	adc    al,0x6
  40bb3a:	add    BYTE PTR [ecx-0x53],al
  40bb3d:	(bad)  
  40bb3e:	nop
  40bb3f:	mov    DWORD PTR [edi],edx
  40bb41:	xchg   ebp,eax
  40bb42:	ret    0xdd88
  40bb45:	pop    ebp
  40bb46:	ja     0x40bb05
  40bb48:	pop    esi
  40bb49:	pop    ds
  40bb4a:	pop    ds
  40bb4b:	pusha  
  40bb4c:	cdq    
  40bb4d:	(bad)  
  40bb4e:	and    ebp,esi
  40bb50:	imul   esi,DWORD PTR [esi],0xffffffc6
  40bb53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb54:	xchg   ebp,eax
  40bb55:	leave  
  40bb56:	or     ch,BYTE PTR [esi]
  40bb58:	add    bl,BYTE PTR [edi+ecx*1+0x35]
  40bb5c:	in     al,dx
  40bb5d:	fld    TBYTE PTR [esi-0xf8e1cf1]
  40bb63:	jl     0x40bb4a
  40bb65:	jns    0x40bb0e
  40bb67:	aas    
  40bb68:	inc    ecx
  40bb69:	pop    edi
  40bb6a:	inc    esi
  40bb6b:	push   es
  40bb6c:	outs   dx,BYTE PTR ds:[esi]
  40bb6e:	data16 lahf 
  40bb70:	inc    ebp
  40bb71:	lea    edx,[eax+0x64]
  40bb74:	lahf   
  40bb75:	jl     0x40bbeb
  40bb77:	jmp    0xfde8:0x87ed7b0c
  40bb7e:	xlat   BYTE PTR ds:[ebx]
  40bb7f:	outs   dx,BYTE PTR ds:[esi]
  40bb80:	pop    ebx
  40bb81:	mov    esp,0xd29c48
  40bb86:	sub    DWORD PTR [ecx],esi
  40bb88:	sub    eax,0xe5f94c30
  40bb8d:	or     al,0x1b
  40bb8f:	jo     0x40bbf8
  40bb91:	xchg   ebx,eax
  40bb92:	xchg   edx,eax
  40bb93:	inc    esi
  40bb94:	repnz sbb DWORD PTR [edi],0xffffffa3
  40bb98:	adc    al,0xeb
  40bb9a:	mov    al,ds:0xd2fe7d72
  40bb9f:	sti    
  40bba0:	dec    ebx
  40bba1:	mov    edi,0xe40175ac
  40bba6:	cmc    
  40bba7:	push   ss
  40bba8:	aaa    
  40bba9:	jge    0x40bba7
  40bbab:	cld    
  40bbac:	fmul   st,st(1)
  40bbae:	pop    edi
  40bbaf:	test   eax,0xc22b5902
  40bbb4:	pop    ebx
  40bbb5:	add    eax,0x4d1ffdbf
  40bbba:	dec    edi
  40bbbb:	retf   0x1de5
  40bbbe:	sbb    BYTE PTR ds:0xde81775f,0xaa
  40bbc5:	mov    al,ds:0xcbf0ae70
  40bbca:	sbb    BYTE PTR [edi],ch
  40bbcc:	push   ebp
  40bbcd:	ret    
  40bbce:	mov    ecx,0x849ac3db
  40bbd3:	loopne 0x40bc4d
  40bbd5:	call   DWORD PTR [edi]
  40bbd7:	add    dl,BYTE PTR [ecx-0x1499fe67]
  40bbdd:	ficomp WORD PTR [edi-0xbca5874]
  40bbe3:	in     eax,0xaa
  40bbe5:	mov    al,ds:0x7e366a01
  40bbea:	ret    
  40bbeb:	mov    bl,0xd1
  40bbed:	cli    
  40bbee:	lea    ebx,[edx+0x47]
  40bbf1:	nop
  40bbf2:	inc    ecx
  40bbf3:	(bad)  
  40bbf4:	jo     0x40bbeb
  40bbf6:	cmp    bh,BYTE PTR [ebp+0x263d58e9]
  40bbfc:	iret   
  40bbfd:	imul   edx,DWORD PTR [edi],0xe2876ea3
  40bc03:	test   DWORD PTR [eax-0x5],0x35ca48c7
  40bc0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc0b:	(bad)  
  40bc0c:	inc    esp
  40bc0d:	pop    esi
  40bc0e:	jne    0x40bc55
  40bc10:	call   0x2c9ba088
  40bc15:	add    DWORD PTR [si],ecx
  40bc18:	xlat   BYTE PTR ds:[ebx]
  40bc19:	push   edx
  40bc1a:	into   
  40bc1b:	aad    0x7e
  40bc1d:	xchg   esi,eax
  40bc1e:	sbb    al,0x5d
  40bc20:	popa   
  40bc21:	fwait
  40bc22:	adc    ch,BYTE PTR [edx+0x5d]
  40bc25:	sub    BYTE PTR [edi+0x781d4967],ch
  40bc2b:	mov    bl,BYTE PTR [edi+0xc5d816d]
  40bc31:	pop    edx
  40bc32:	sbb    cl,bh
  40bc34:	and    ah,BYTE PTR [edi]
  40bc36:	test   eax,0x46b355f3
  40bc3b:	jmp    0xc6bf:0x896bebdf
  40bc42:	(bad)  
  40bc43:	aas    
  40bc44:	inc    esi
  40bc45:	adc    dl,BYTE PTR [edx+0x52]
  40bc48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc49:	sub    ecx,DWORD PTR [edi-0x18]
  40bc4c:	dec    esi
  40bc4d:	leave  
  40bc4e:	mov    eax,0xc505d36c
  40bc53:	mov    esp,0x3d8396b9
  40bc58:	stos   DWORD PTR es:[edi],eax
  40bc59:	clc    
  40bc5a:	dec    edi
  40bc5b:	ficom  DWORD PTR [ebx-0x3b5e1b6d]
  40bc61:	mov    eax,ds:0x6ae99fbf
  40bc66:	popa   
  40bc67:	mov    al,0xac
  40bc69:	les    edx,FWORD PTR [ebx-0x6bf01db5]
  40bc6f:	int3   
  40bc70:	jp     0x40bcc1
  40bc72:	inc    eax
  40bc73:	pop    edx
  40bc74:	mov    dl,0xd2
  40bc76:	xor    ebp,DWORD PTR [eax+0x7f124f2]
  40bc7c:	out    0x60,al
  40bc7e:	inc    ecx
  40bc7f:	in     al,dx
  40bc80:	(bad)  
  40bc81:	aam    0x45
  40bc83:	scas   al,BYTE PTR es:[edi]
  40bc84:	jno    0x40bc43
  40bc86:	inc    ebx
  40bc87:	and    ecx,DWORD PTR [ecx+0x57]
  40bc8a:	inc    edx
  40bc8b:	and    dh,bl
  40bc8d:	retf   
  40bc8e:	ja     0x40bc86
  40bc90:	adc    DWORD PTR [edx],0xffffffd8
  40bc93:	arpl   WORD PTR [ebx],sp
  40bc95:	mov    dh,0x26
  40bc97:	lds    ecx,FWORD PTR [edx+0x6d]
  40bc9a:	and    bh,dh
  40bc9c:	mov    dl,0x2a
  40bc9e:	or     BYTE PTR [ebp+0x16],bl
  40bca1:	and    eax,0x83b33b3d
  40bca6:	fst    QWORD PTR [eax-0x50043d7e]
  40bcac:	les    ebp,FWORD PTR ds:0xe3440648
  40bcb2:	jne    0x40bc8d
  40bcb4:	retf   
  40bcb5:	ins    BYTE PTR es:[edi],dx
  40bcb6:	xor    al,0xec
  40bcb8:	push   esi
  40bcb9:	cmp    edi,eax
  40bcbb:	jo     0x40bd23
  40bcbd:	lahf   
  40bcbe:	xchg   ebx,eax
  40bcbf:	xchg   DWORD PTR [edi-0x2a589c79],edi
  40bcc5:	test   esp,ecx
  40bcc7:	and    al,0xbd
  40bcc9:	mov    esp,0xa99f0227
  40bcce:	fidiv  DWORD PTR [esi-0x2b]
  40bcd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcd2:	(bad)  
  40bcd3:	enter  0x1b47,0xf2
  40bcd7:	mov    bl,0xb1
  40bcd9:	xchg   ebx,eax
  40bcda:	loopne 0x40bcb1
  40bcdc:	(bad)  
  40bcde:	push   eax
  40bcdf:	jmp    0xa566:0x758dd22c
  40bce6:	mov    bh,0x37
  40bce8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bce9:	jecxz  0x40bcca
  40bceb:	mov    ah,0x9d
  40bced:	jo     0x40bce5
  40bcef:	out    dx,eax
  40bcf0:	lds    ebp,FWORD PTR [ebx-0x2e7fbc0f]
  40bcf6:	jp     0x40bca3
  40bcf8:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcfb:	dec    edx
  40bcfc:	aam    0xb6
  40bcfe:	sar    ebx,1
  40bd00:	xor    cl,BYTE PTR [esi]
  40bd02:	push   edi
  40bd03:	mov    eax,0x60b41f9a
  40bd08:	lahf   
  40bd09:	popf   
  40bd0a:	add    bl,dl
  40bd0c:	popf   
  40bd0d:	test   eax,0xfbf7769a
  40bd12:	out    0xcd,al
  40bd14:	icebp  
  40bd15:	in     al,0x19
  40bd17:	popa   
  40bd18:	sbb    edx,DWORD PTR [esi+0x70b1cce8]
  40bd1e:	push   ecx
  40bd1f:	(bad)  
  40bd20:	jmp    0x40bce1
  40bd22:	push   0x5
  40bd24:	mov    ds:0xdc75f913,eax
  40bd29:	adc    eax,eax
  40bd2b:	loope  0x40bd4d
  40bd2d:	and    ecx,ebp
  40bd2f:	stos   DWORD PTR es:[edi],eax
  40bd30:	cld    
  40bd31:	adc    eax,0x4dab5bda
  40bd36:	ret    0xc4b9
  40bd39:	fnsave [eax-0x55]
  40bd3c:	dec    esi
  40bd3d:	test   BYTE PTR [edi-0x52b1fd19],0x83
  40bd44:	popa   
  40bd45:	(bad)  
  40bd46:	jo     0x40bdb4
  40bd48:	jle    0x40bd64
  40bd4a:	jae    0x40bccd
  40bd4c:	xor    DWORD PTR [ebx],ecx
  40bd4e:	in     eax,0x27
  40bd50:	call   0x72b50b89
  40bd55:	mov    DWORD PTR [ebx-0x3a1f46d],edx
  40bd5b:	test   DWORD PTR [esi-0x46],ecx
  40bd5e:	ja     0x40bd46
  40bd60:	add    BYTE PTR [edx+ecx*1],0xd6
  40bd64:	pop    ds
  40bd65:	cmc    
  40bd66:	fidiv  WORD PTR [ebx-0x7d7bd2f1]
  40bd6c:	xor    ch,BYTE PTR [edi-0x29]
  40bd6f:	sbb    al,0x3e
  40bd71:	adc    cl,BYTE PTR [ecx-0x35d9e8a]
  40bd77:	pop    edx
  40bd78:	inc    ebx
  40bd79:	ins    DWORD PTR es:[edi],dx
  40bd7a:	lods   eax,DWORD PTR ds:[esi]
  40bd7b:	sub    BYTE PTR [eax+0xc3849d7],ah
  40bd81:	or     eax,DWORD PTR [edx+0x6a]
  40bd84:	pop    eax
  40bd85:	sbb    DWORD PTR [ebp-0x4],esi
  40bd88:	adc    cl,BYTE PTR [ecx-0x64]
  40bd8b:	fs ret 
  40bd8d:	xchg   edi,edx
  40bd8f:	mov    eax,0x8e4d271e
  40bd94:	sbb    dh,BYTE PTR [edx+esi*8+0x17]
  40bd98:	and    eax,ebx
  40bd9a:	inc    eax
  40bd9b:	in     eax,dx
  40bd9c:	or     BYTE PTR [ebx+0x27],al
  40bd9f:	ins    DWORD PTR es:[edi],dx
  40bda0:	push   ds
  40bda1:	out    dx,al
  40bda2:	xchg   BYTE PTR gs:[ecx],al
  40bda5:	mov    ah,0x24
  40bda7:	pop    edi
  40bda8:	xor    BYTE PTR [edi+ebp*4+0x37],dl
  40bdac:	cdq    
  40bdad:	data16 es cld 
  40bdb0:	xchg   DWORD PTR [eax-0x11],esi
  40bdb3:	sbb    cl,ch
  40bdb5:	xchg   esi,eax
  40bdb6:	push   ss
  40bdb7:	retf   
  40bdb8:	imul   edx,DWORD PTR [eax-0xbfcb2e4],0x221e5452
  40bdc2:	mov    edx,0xbc612ba6
  40bdc7:	jno    0x40bdcc
  40bdc9:	jmp    0x40be1c
  40bdcb:	push   0xa4e507a4
  40bdd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdd1:	add    edi,edx
  40bdd3:	pop    esp
  40bdd4:	shl    esi,cl
  40bdd6:	repz enter 0xed54,0xee
  40bddb:	call   FWORD PTR [ebp-0xca00c39]
  40bde1:	fsub   DWORD PTR [eax+0x3b]
  40bde4:	xor    esp,DWORD PTR [edi]
  40bde6:	sub    BYTE PTR [ebx+eiz*1],bl
  40bde9:	jg     0x40be66
  40bdeb:	ja     0x40be16
  40bded:	add    edi,DWORD PTR [esi+0x311e5cee]
  40bdf3:	mov    cl,0x2b
  40bdf5:	(bad)  
  40bdf6:	aaa    
  40bdf7:	loope  0x40bdb8
  40bdf9:	iret   
  40bdfa:	dec    eax
  40bdfb:	aad    0x9f
  40bdfd:	xchg   edx,eax
  40bdfe:	dec    edi
  40bdff:	inc    ebx
  40be00:	imul   eax
  40be02:	(bad)  
  40be04:	ins    BYTE PTR es:[edi],dx
  40be05:	inc    ebp
  40be06:	push   edi
  40be07:	pop    edx
  40be08:	push   ss
  40be09:	xchg   esi,eax
  40be0a:	into   
  40be0b:	das    
  40be0c:	std    
  40be0d:	sub    dl,bh
  40be0f:	dec    eax
  40be10:	mov    bh,0xec
  40be12:	jle    0x40be2c
  40be14:	jbe    0x40be0d
  40be16:	test   al,0x67
  40be18:	loop   0x40be2a
  40be1a:	lea    esi,[edx-0x3ffa36c8]
  40be20:	push   esi
  40be21:	add    BYTE PTR [esi+0x42],ch
  40be24:	inc    ebx
  40be25:	aaa    
  40be26:	mov    edi,0x3de8bd68
  40be2b:	jl     0x40be47
  40be2d:	cmp    edi,ebx
  40be2f:	sub    DWORD PTR [ebx+0x55dead5f],edx
  40be35:	push   ecx
  40be36:	sbb    al,0x82
  40be38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be39:	sbb    eax,0xaae2ec56
  40be3e:	into   
  40be3f:	jl     0x40be89
  40be41:	cmp    DWORD PTR [esi-0x674099d4],esi
  40be47:	mov    edi,DWORD PTR [ecx]
  40be49:	div    eax
  40be4b:	test   DWORD PTR [edi],esi
  40be4d:	mov    DWORD PTR [eax-0x36],ebp
  40be50:	jo     0x40be47
  40be52:	or     eax,0x9cf11ec5
  40be57:	sahf   
  40be58:	sahf   
  40be59:	mov    dh,al
  40be5b:	ret    
  40be5c:	sub    BYTE PTR [edi],dh
  40be5e:	push   ss
  40be5f:	sub    edi,edx
  40be61:	test   al,0xe4
  40be63:	push   ds
  40be64:	mov    fs,WORD PTR [eax-0x6d]
  40be67:	and    BYTE PTR [esi-0x19ac63f4],0x65
  40be6e:	out    dx,eax
  40be6f:	jns    0x40be28
  40be71:	cmp    eax,0x985b62e3
  40be76:	mov    al,0xc2
  40be78:	sub    DWORD PTR [ebx+esi*1],0xdaa4acd1
  40be7f:	mov    ds,ebp
  40be81:	dec    ebp
  40be82:	mov    ecx,0xf9628181
  40be87:	xchg   ebx,eax
  40be88:	repnz test DWORD PTR [edx-0x56],esi
  40be8c:	lods   eax,DWORD PTR ds:[esi]
  40be8d:	cmc    
  40be8e:	cs test eax,0x9af3631e
  40be94:	fs inc edx
  40be96:	cmp    dh,bh
  40be98:	fld    QWORD PTR [edi]
  40be9a:	out    dx,eax
  40be9b:	mov    DWORD PTR [ecx],ecx
  40be9d:	test   eax,0x253a5a26
  40bea2:	add    esp,DWORD PTR [esp+ebx*1+0xf]
  40bea6:	jle    0x40bf1d
  40bea8:	and    bl,BYTE PTR [ecx]
  40beaa:	popa   
  40beab:	shl    DWORD PTR [ebx+ecx*2-0x1],0x74
  40beb0:	mov    edi,DWORD PTR [ebp+0x8]
  40beb3:	mov    eax,ds:0x424435
  40beb8:	mov    DWORD PTR ds:0x420e9e,0x18
  40bec2:	cmp    DWORD PTR ds:0x420e9e,0x0
  40bec9:	je     0x40bf28
  40becf:	cmp    DWORD PTR ds:0x420e9e,0x8
  40bed6:	jne    0x40befa
  40bedc:	push   DWORD PTR [ebp-0xc]
  40bedf:	push   0x420e7e
  40bee4:	push   0x29f3
  40bee9:	push   0x424044
  40beee:	push   DWORD PTR [ebp-0x18]
  40bef1:	push   DWORD PTR [ebp-0x24]
  40bef4:	call   DWORD PTR ds:0x42480d
  40befa:	cmp    DWORD PTR ds:0x420e9e,0x9
  40bf01:	jne    0x40bf16
  40bf07:	xor    edx,edx
  40bf09:	xor    edx,DWORD PTR ds:0x420e9e
  40bf0f:	dec    edx
  40bf10:	mov    DWORD PTR ds:0x420e9e,edx
  40bf16:	mov    edx,DWORD PTR ds:0x420e9e
  40bf1c:	dec    edx
  40bf1d:	mov    DWORD PTR ds:0x420e9e,edx
  40bf23:	jmp    0x40bec2
  40bf28:	mov    eax,DWORD PTR [eax+0x198]
  40bf2e:	or     DWORD PTR ds:0x422010,edx
  40bf34:	xor    edi,ecx
  40bf36:	xor    DWORD PTR ds:0x420f00,edx
  40bf3c:	mov    edx,0x3272dd
  40bf41:	or     DWORD PTR ds:0x420f08,0x420e96
  40bf4b:	add    edi,edx
  40bf4d:	mov    DWORD PTR ds:0x420e8e,0x537
  40bf57:	cmp    DWORD PTR [eax],edi
  40bf59:	je     0x40bf70
  40bf5f:	mov    DWORD PTR ds:0x420f08,0x7795
  40bf69:	mov    eax,DWORD PTR [eax]
  40bf6b:	jmp    0x410a15
  40bf70:	mov    DWORD PTR ds:0x420fb4,0x165d
  40bf7a:	mov    eax,DWORD PTR [ebp+0x18]
  40bf7d:	cmp    eax,esi
  40bf7f:	mov    DWORD PTR ds:0x420eec,0x5796
  40bf89:	jne    0x40bf99
  40bf8f:	push   0xf89c85b2
  40bf94:	jmp    0x410a04
  40bf99:	mov    esi,DWORD PTR [ebp+0x18]
  40bf9c:	mov    eax,0xf89c85b3
  40bfa1:	mov    DWORD PTR ds:0x420e96,0x5b0e
  40bfab:	cmp    esi,eax
  40bfad:	jne    0x4109f4
  40bfb3:	mov    eax,ds:0x420ea2
  40bfb8:	or     eax,DWORD PTR ds:0x420ef4
  40bfbe:	mov    ds:0x420ea2,eax
  40bfc3:	mov    eax,DWORD PTR [ebp+0x10]
  40bfc6:	xor    eax,ecx
  40bfc8:	sub    DWORD PTR ds:0x420e96,0x168d
  40bfd2:	add    eax,edx
  40bfd4:	mov    esi,DWORD PTR ds:0x420ef4
  40bfda:	and    DWORD PTR ds:0x420f5c,esi
  40bfe0:	mov    DWORD PTR [ebp-0x18],eax
  40bfe3:	neg    esi
  40bfe5:	mov    eax,DWORD PTR [ebp+0xc]
  40bfe8:	mov    esi,DWORD PTR [ebp-0x8]
  40bfeb:	xor    DWORD PTR ds:0x420f00,0x766d
  40bff5:	xor    eax,ecx
  40bff7:	sbb    DWORD PTR ds:0x420e86,0x420e8a
  40c001:	jmp    0x40e37b
  40c006:	push   ebp
  40c007:	mov    ds:0xbb7be978,al
  40c00c:	not    DWORD PTR [esi+0x4b1ebfc]
  40c012:	add    al,0xd8
  40c014:	fisubr DWORD PTR [ebp-0x2c]
  40c017:	jmp    0x5f5a3a96
  40c01c:	jp     0x40c098
  40c01e:	ret    0x6332
  40c021:	sbb    eax,0x19b098cb
  40c026:	test   BYTE PTR [ebp+0xf],ah
  40c029:	test   al,0xde
  40c02b:	xchg   edi,eax
  40c02c:	cmp    eax,ecx
  40c02e:	call   0x2b732dc
  40c033:	data16 xchg bh,bl
  40c036:	cmp    ebx,DWORD PTR ss:[edx+esi*8+0x6b11b662]
  40c03e:	inc    ebp
  40c03f:	and    al,0x5f
  40c041:	cwde   
  40c042:	sar    DWORD PTR [eax-0x22],1
  40c045:	out    0x24,al
  40c047:	push   esi
  40c048:	and    ch,ch
  40c04a:	ja     0x40c080
  40c04c:	push   0x20f34568
  40c051:	and    dl,BYTE PTR [ebx-0x21]
  40c054:	sbb    DWORD PTR [eax-0x23],edx
  40c057:	stos   BYTE PTR es:[edi],al
  40c058:	pop    es
  40c059:	push   ecx
  40c05a:	pop    esi
  40c05b:	ins    BYTE PTR es:[edi],dx
  40c05c:	mov    edi,0x8e5e10d7
  40c061:	dec    ebp
  40c062:	xor    ebx,DWORD PTR [edx]
  40c064:	pop    ecx
  40c065:	mov    al,BYTE PTR ds:0xeba57e1a
  40c06b:	inc    edx
  40c06c:	push   edx
  40c06d:	xor    BYTE PTR [edx-0x78],bl
  40c070:	test   eax,0xa1ffd95e
  40c075:	into   
  40c076:	jne    0x40c070
  40c078:	dec    ebx
  40c079:	repz repz add bl,al
  40c07d:	mov    ebx,0x6eaffd06
  40c082:	sub    al,BYTE PTR [eax+0x683c38fc]
  40c088:	mov    dh,0x74
  40c08a:	pop    esp
  40c08b:	push   edi
  40c08c:	sub    BYTE PTR [eax+0x5b],ah
  40c08f:	call   0xc12cb032
  40c094:	mov    edi,ebp
  40c096:	test   al,0x3d
  40c098:	cmp    DWORD PTR [eax],0x42
  40c09b:	gs test eax,0x4149310e
  40c0a1:	les    esi,FWORD PTR [ebp+0x6c]
  40c0a4:	hlt    
  40c0a5:	and    bl,BYTE PTR [ebx-0x601fc118]
  40c0ab:	clc    
  40c0ac:	pushf  
  40c0ad:	mov    al,0xd7
  40c0af:	lods   al,BYTE PTR ds:[esi]
  40c0b0:	call   0xc1d5132e
  40c0b5:	repnz (bad) 
  40c0b7:	fisttp DWORD PTR [esi-0x27354fa0]
  40c0bd:	jne    0x40c07d
  40c0bf:	les    eax,FWORD PTR [eax]
  40c0c1:	and    al,BYTE PTR [ebp-0x8]
  40c0c4:	in     eax,0xc6
  40c0c6:	(bad)  
  40c0c7:	adc    al,0xe4
  40c0c9:	mov    BYTE PTR [ebx-0x35],cl
  40c0cc:	mov    esp,0x16d61c39
  40c0d1:	sahf   
  40c0d2:	add    bl,dl
  40c0d4:	push   ebp
  40c0d5:	ret    0xa35a
  40c0d8:	mov    edx,0x4396c871
  40c0dd:	xchg   edi,eax
  40c0de:	popa   
  40c0df:	fwait
  40c0e0:	les    ecx,FWORD PTR [ecx+0x39]
  40c0e3:	jl     0x40c11c
  40c0e5:	shl    DWORD PTR [edx+0x0],cl
  40c0e8:	dec    ebp
  40c0e9:	xlat   BYTE PTR ds:[ebx]
  40c0ea:	imul   edi,DWORD PTR [esi],0xffffffc1
  40c0ed:	scas   eax,DWORD PTR es:[edi]
  40c0ee:	nop
  40c0ef:	dec    si
  40c0f1:	mov    bl,0x3a
  40c0f3:	push   edi
  40c0f4:	cmp    eax,0x58290dd5
  40c0f9:	aaa    
  40c0fa:	std    
  40c0fb:	mov    dh,0x21
  40c0fd:	mov    ds:0xac3d0413,al
  40c102:	inc    edx
  40c103:	rcl    DWORD PTR [edx+ecx*2-0x1635bee4],cl
  40c10a:	or     DWORD PTR [ecx+0x2],eax
  40c10d:	push   edi
  40c10e:	cmp    ebp,esi
  40c110:	add    eax,0xf56e9026
  40c115:	and    al,dl
  40c117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c118:	inc    eax
  40c119:	imul   esp,DWORD PTR [ebx+0xcdab06b],0xffffffec
  40c120:	cdq    
  40c121:	or     ecx,DWORD PTR [eax]
  40c123:	cmp    eax,DWORD PTR [esi+0x5ab10577]
  40c129:	int3   
  40c12a:	fsubr  QWORD PTR [edi+ecx*4+0x7b]
  40c12e:	aad    0x39
  40c130:	fwait
  40c131:	ret    0xcb2
  40c134:	xor    al,0x81
  40c136:	mov    bl,0xd4
  40c138:	(bad)  
  40c139:	cwde   
  40c13a:	xor    BYTE PTR [ebx-0x38],bh
  40c13d:	mov    ebx,0x34a78edf
  40c142:	adc    al,0xe4
  40c144:	test   BYTE PTR ds:0x5c28fb3d,bl
  40c14a:	outs   dx,BYTE PTR ds:[esi]
  40c14b:	xor    DWORD PTR [ecx-0x4e],ebp
  40c14e:	push   ebp
  40c14f:	adc    al,0x1c
  40c151:	dec    ecx
  40c152:	out    0xeb,al
  40c154:	ret    0x40c0
  40c157:	pop    esp
  40c158:	push   0xffffffb1
  40c15a:	xchg   ebp,eax
  40c15c:	js     0x40c10e
  40c15e:	jle    0x40c1d0
  40c160:	jo     0x40c11a
  40c162:	in     eax,dx
  40c163:	or     cl,BYTE PTR [ebp-0x587c2b22]
  40c169:	retf   
  40c16a:	push   es
  40c16b:	mov    edx,0x16439b17
  40c170:	shl    DWORD PTR [esi-0x7fa516bf],1
  40c176:	jne    0x40c15b
  40c178:	shl    eax,1
  40c17a:	pop    es
  40c17b:	xlat   BYTE PTR ds:[ebx]
  40c17c:	fisttp DWORD PTR [ecx-0x46ac7299]
  40c182:	in     al,0x98
  40c184:	lock arpl WORD PTR [ecx+0x49553072],sp
  40c18b:	mov    al,0xd1
  40c18d:	daa    
  40c18e:	pop    eax
  40c18f:	and    bh,BYTE PTR [ebp+0x67]
  40c192:	cmp    al,0x4b
  40c194:	push   ebp
  40c195:	jo     0x40c20e
  40c197:	pop    eax
  40c198:	or     DWORD PTR [ebx+esi*4+0x5cd9a4b3],0x7f
  40c1a0:	push   ds
  40c1a1:	inc    ebp
  40c1a2:	fistp  WORD PTR [esi+0x7c]
  40c1a5:	or     BYTE PTR [edx-0x15d5041d],ch
  40c1ab:	inc    esp
  40c1ac:	or     dl,al
  40c1ae:	jmp    0x40c1a8
  40c1b0:	xor    DWORD PTR [edi+0x22],edx
  40c1b3:	mov    bl,ah
  40c1b5:	rol    ebp,1
  40c1b7:	out    0xdb,eax
  40c1b9:	mov    esp,0xff183ae4
  40c1be:	push   edi
  40c1bf:	shr    DWORD PTR [edi],0x5b
  40c1c2:	call   FWORD PTR [eax]
  40c1c4:	mov    bh,0xa0
  40c1c6:	cld    
  40c1c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1c8:	add    eax,0x9fc21510
  40c1cd:	retf   0x4adf
  40c1d0:	je     0x40c24b
  40c1d2:	stos   BYTE PTR es:[edi],al
  40c1d3:	and    BYTE PTR [esi],ch
  40c1d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1d6:	inc    esi
  40c1d7:	sub    bh,al
  40c1d9:	and    ebx,DWORD PTR [ecx-0x3f8461da]
  40c1df:	lahf   
  40c1e0:	(bad)  
  40c1e1:	jge    0x40c23e
  40c1e3:	data16 mov ch,0x75
  40c1e6:	jmp    0x65e3:0x107b0f17
  40c1ed:	or     edx,edx
  40c1ef:	pop    ds
  40c1f0:	mov    bl,0x3c
  40c1f2:	adc    ecx,DWORD PTR [ecx+0x4227ff3]
  40c1f8:	jb     0x40c231
  40c1fa:	out    0x69,al
  40c1fc:	add    eax,0xa4ded4cb
  40c201:	mov    dl,0x72
  40c203:	push   ss
  40c204:	sbb    al,0x56
  40c206:	mov    al,BYTE PTR [edi-0x55]
  40c209:	push   ds
  40c20a:	xchg   edi,eax
  40c20b:	retf   0x33bc
  40c20e:	(bad)  
  40c20f:	jp     0x40c232
  40c211:	mov    bl,0x97
  40c213:	sub    edx,DWORD PTR [ebx-0x31]
  40c216:	leave  
  40c217:	pop    edi
  40c218:	and    ebx,DWORD PTR [ecx-0xf]
  40c21b:	or     esp,ebp
  40c21d:	pop    es
  40c21e:	push   ds
  40c21f:	add    esp,DWORD PTR [ecx+eiz*2]
  40c222:	in     eax,dx
  40c223:	dec    edx
  40c224:	test   DWORD PTR [ebx+0x68],edx
  40c227:	sahf   
  40c228:	iret   
  40c229:	dec    eax
  40c22a:	stc    
  40c22b:	and    ecx,DWORD PTR [eax+0xcefe090]
  40c231:	lods   al,BYTE PTR ds:[esi]
  40c232:	ja     0x40c248
  40c234:	jno    0x40c251
  40c236:	mov    ds:0xdbfe836e,al
  40c23b:	les    eax,FWORD PTR [esi-0x6330f7c4]
  40c241:	xchg   DWORD PTR [ebx+0x29],ebx
  40c244:	imul   DWORD PTR [ebp-0x61]
  40c247:	and    eax,0xe2a22d44
  40c24c:	cmp    al,0x98
  40c24e:	cmp    edx,eax
  40c250:	push   es
  40c251:	inc    esi
  40c252:	cmc    
  40c253:	adc    esp,edx
  40c255:	xchg   DWORD PTR [edi],edx
  40c257:	sahf   
  40c258:	push   ecx
  40c259:	cld    
  40c25a:	test   al,0xea
  40c25c:	ss add edi,edx
  40c25f:	or     eax,0x59dfc38b
  40c264:	js     0x40c2af
  40c266:	out    dx,al
  40c267:	rcr    BYTE PTR [edi],1
  40c269:	mov    ecx,0x39be8a0e
  40c26e:	dec    esi
  40c26f:	sahf   
  40c270:	rcr    BYTE PTR [edi+0x50],0x1e
  40c274:	(bad)  
  40c276:	mov    DWORD PTR [edi-0x30],edx
  40c279:	retf   
  40c27a:	shl    BYTE PTR [edi],0xaf
  40c27d:	(bad)  
  40c27e:	xlat   BYTE PTR ds:[ebx]
  40c27f:	(bad)
  40c282:	dec    ebp
  40c283:	fdivr  DWORD PTR [eax+0x13]
  40c286:	not    ebp
  40c288:	sbb    ebx,ebx
  40c28a:	ds xchg edx,eax
  40c28c:	enter  0xd57f,0x1a
  40c290:	fistp  WORD PTR ds:0xe8432259
  40c296:	push   0xe374b3d2
  40c29b:	sub    al,0xe0
  40c29d:	leave  
  40c29e:	inc    ecx
  40c29f:	dec    esi
  40c2a0:	jbe    0x40c270
  40c2a2:	xchg   esi,eax
  40c2a3:	mov    eax,es:0xc130ec87
  40c2a9:	test   DWORD PTR [ebp-0x5f],ebp
  40c2ac:	pop    esp
  40c2ad:	mov    cl,0x93
  40c2af:	jno    0x40c299
  40c2b1:	xchg   edi,eax
  40c2b3:	pop    ebx
  40c2b4:	out    0x83,eax
  40c2b6:	jnp    0x40c23b
  40c2b8:	add    cl,BYTE PTR ds:0x24bc9da9
  40c2be:	inc    ebx
  40c2bf:	jmp    0xe7cc8abc
  40c2c4:	inc    ebp
  40c2c5:	dec    ecx
  40c2c6:	das    
  40c2c7:	retf   0x38ca
  40c2ca:	xchg   edx,eax
  40c2cb:	mov    ebx,0xc7353763
  40c2d0:	xor    esi,0xffffffe4
  40c2d3:	push   ebx
  40c2d4:	cmp    ch,al
  40c2d6:	retf   0x893e
  40c2d9:	mov    BYTE PTR [esi+0x54],dh
  40c2dc:	outs   dx,DWORD PTR ds:[esi]
  40c2dd:	mov    ebp,0x8848e8bf
  40c2e2:	in     al,dx
  40c2e3:	out    dx,al
  40c2e4:	test   DWORD PTR [ecx+0x733f0c0c],edi
  40c2ea:	push   es
  40c2eb:	push   esi
  40c2ec:	and    DWORD PTR [ecx],0xffffff98
  40c2ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2f0:	mov    WORD PTR [eax+esi*2],?
  40c2f3:	sub    eax,0x276a2d5b
  40c2f8:	outs   dx,BYTE PTR ds:[esi]
  40c2f9:	cli    
  40c2fa:	sbb    BYTE PTR [ebp+eax*8-0x5c30e47b],bl
  40c301:	fwait
  40c302:	sub    DWORD PTR [edx+0x3b],0x17dc312d
  40c309:	data16 or dl,dl
  40c30c:	push   ds
  40c30d:	loopne 0x40c2a7
  40c30f:	loop   0x40c29d
  40c311:	retf   
  40c312:	sbb    ebp,DWORD PTR [esi-0x4d318aee]
  40c318:	scas   al,BYTE PTR es:[edi]
  40c319:	mov    fs,WORD PTR [ebp+0x13]
  40c31c:	dec    ecx
  40c31d:	push   eax
  40c31e:	cmp    esi,DWORD PTR [edx]
  40c320:	bound  edx,QWORD PTR [ebx]
  40c322:	sub    dl,ah
  40c324:	cld    
  40c325:	adc    BYTE PTR [eax+ecx*4+0x191bd240],ah
  40c32c:	aas    
  40c32d:	adc    eax,0xe6547f1a
  40c332:	or     BYTE PTR ds:0xd1f13d5d,bh
  40c338:	retf   0xdc42
  40c33b:	scas   eax,DWORD PTR es:[edi]
  40c33c:	dec    ebp
  40c33d:	cwde   
  40c33e:	lds    esi,FWORD PTR [edi+0x24cc33ff]
  40c344:	call   0x1174:0x995f6cd6
  40c34b:	or     bl,0x92
  40c34e:	mov    dh,0x65
  40c350:	rol    ch,cl
  40c352:	cld    
  40c353:	mov    ds:0xad8aba8,eax
  40c358:	mov    ebx,0xfad06478
  40c35d:	leave  
  40c35e:	nop
  40c35f:	mov    edx,0xd900f7d6
  40c364:	ret    0xc54a
  40c367:	xor    BYTE PTR [ebx],ah
  40c369:	push   ecx
  40c36a:	jecxz  0x40c3d1
  40c36c:	loope  0x40c3aa
  40c36e:	test   ah,dh
  40c370:	fistp  WORD PTR [ebx-0x54]
  40c373:	mov    dh,0x2
  40c375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c376:	bound  ebp,QWORD PTR [ebp-0x58]
  40c379:	dec    esi
  40c37a:	push   edx
  40c37b:	and    edi,ebp
  40c37d:	inc    ebp
  40c37e:	push   es
  40c37f:	clc    
  40c380:	aas    
  40c381:	addr16 sahf 
  40c383:	push   eax
  40c384:	mov    al,0xd0
  40c386:	fimul  WORD PTR [ebp+ecx*4+0x28]
  40c38a:	out    0xd8,eax
  40c38c:	out    0xbb,eax
  40c38e:	adc    ecx,DWORD PTR [ebx+0x4d]
  40c391:	mov    esp,0x7bb32924
  40c396:	int    0x77
  40c398:	mov    ebx,0x71d2684d
  40c39d:	pop    edi
  40c39e:	mov    bh,0x90
  40c3a0:	xchg   ecx,esi
  40c3a2:	add    al,0x4c
  40c3a4:	or     BYTE PTR [edx-0x5a662c9e],dh
  40c3aa:	je     0x40c335
  40c3ac:	add    ch,bh
  40c3ae:	out    dx,al
  40c3af:	inc    esi
  40c3b0:	xor    cl,BYTE PTR [ebp+edx*4+0x77]
  40c3b4:	jns    0x40c362
  40c3b6:	ins    DWORD PTR es:[edi],dx
  40c3b7:	mov    BYTE PTR [edi-0x6ef7103a],cl
  40c3bd:	bound  edx,QWORD PTR [edi]
  40c3bf:	sub    ch,BYTE PTR [ebx+0x60]
  40c3c2:	das    
  40c3c3:	es jp  0x40c3cf
  40c3c6:	pop    ds
  40c3c7:	cwde   
  40c3c8:	(bad)  
  40c3c9:	out    0xf7,al
  40c3cb:	mov    BYTE PTR [edx-0x4686349f],ah
  40c3d1:	jb     0x40c445
  40c3d3:	scas   al,BYTE PTR es:[edi]
  40c3d4:	dec    esi
  40c3d5:	xor    ecx,DWORD PTR [edi]
  40c3d7:	aad    0x8f
  40c3d9:	ins    BYTE PTR es:[edi],dx
  40c3da:	mov    cl,0xb5
  40c3dc:	lea    ebx,[edx-0x313385eb]
  40c3e2:	rol    cl,1
  40c3e4:	mov    eax,0xba6e357
  40c3e9:	dec    ecx
  40c3ea:	pop    ebx
  40c3eb:	clc    
  40c3ec:	sbb    ebx,ebp
  40c3ee:	pop    edi
  40c3ef:	dec    edx
  40c3f0:	ss push cs
  40c3f2:	push   edi
  40c3f3:	shl    DWORD PTR [ebx],1
  40c3f5:	(bad)  
  40c3f7:	mov    ds:0x8d0a5708,eax
  40c3fc:	xchg   ebx,eax
  40c3fd:	clc    
  40c3fe:	cmp    DWORD PTR [edi+ecx*2+0x2],ecx
  40c402:	ret    
  40c403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c404:	in     al,0x3
  40c406:	xchg   ecx,eax
  40c407:	cmp    edx,DWORD PTR [edx+edx*1]
  40c40a:	cmc    
  40c40b:	dec    edx
  40c40c:	sar    ebx,cl
  40c40e:	dec    edx
  40c40f:	sti    
  40c410:	lods   eax,DWORD PTR ds:[esi]
  40c411:	cmp    BYTE PTR [ebp+0xe],al
  40c414:	sbb    ebx,DWORD PTR [edi]
  40c416:	sub    eax,0xc751d350
  40c41b:	push   ecx
  40c41c:	icebp  
  40c41d:	ins    BYTE PTR es:[edi],dx
  40c41e:	dec    ecx
  40c41f:	aad    0x7f
  40c421:	mov    ds:0x8886cae4,al
  40c426:	xor    ecx,DWORD PTR [edx+0x6d1950fc]
  40c42c:	out    0x33,al
  40c42e:	add    al,0x6c
  40c430:	outs   dx,DWORD PTR ds:[esi]
  40c431:	(bad)  
  40c433:	jae    0x40c4a6
  40c435:	jbe    0x40c423
  40c437:	into   
  40c438:	scas   eax,DWORD PTR es:[edi]
  40c439:	call   0x4a76:0xc3d8f20f
  40c440:	cmp    DWORD PTR [eax],0xada00e94
  40c446:	lahf   
  40c447:	retf   
  40c448:	push   0xffffffd8
  40c44a:	or     eax,0xc8e3f1a
  40c44f:	je     0x40c446
  40c451:	and    esi,DWORD PTR [edx-0x43b0a3dd]
  40c457:	jae    0x40c412
  40c459:	adc    eax,0x49e7c871
  40c45e:	push   cs
  40c45f:	xlat   BYTE PTR ds:[ebx]
  40c460:	mov    al,ds:0xc8480bbf
  40c466:	jle    0x40c466
  40c468:	int3   
  40c469:	test   edx,ebp
  40c46b:	out    0xd4,eax
  40c46d:	outs   dx,BYTE PTR ds:[esi]
  40c46e:	mov    ebp,0xc1a2b641
  40c473:	imul   ebp,DWORD PTR [ebx+eiz*4],0xf4d994d4
  40c47a:	loopne 0x40c45b
  40c47c:	mov    ch,0xb3
  40c47e:	mov    ds:0x83af0bb0,eax
  40c483:	popf   
  40c484:	mov    ebp,0x5f5a42e
  40c489:	push   esi
  40c48a:	mov    edx,0x2044e080
  40c48f:	call   0xb054b224
  40c494:	mov    ds:0xc3ed6eeb,eax
  40c499:	add    BYTE PTR [ecx-0x2d2d4c77],0x90
  40c4a0:	mov    esp,0x51501a97
  40c4a5:	(bad)  
  40c4a6:	idiv   BYTE PTR [ecx]
  40c4a8:	hlt    
  40c4a9:	popa   
  40c4aa:	mov    ecx,0xa4170a5
  40c4af:	fs jl  0x40c529
  40c4b2:	imul   edi,DWORD PTR [ebp-0xa],0xf86bf256
  40c4b9:	push   0x40
  40c4bb:	jge    0x40c4fc
  40c4bd:	sbb    ecx,DWORD PTR [esi]
  40c4bf:	repz adc ah,BYTE PTR [edi+0x1e4edd40]
  40c4c6:	mov    ds:0x97b1dd5e,al
  40c4cb:	data16 ficomp DWORD PTR [eax]
  40c4ce:	fild   WORD PTR fs:[eax+0x2b]
  40c4d2:	inc    ecx
  40c4d3:	sbb    BYTE PTR [ecx-0x2c],ch
  40c4d6:	inc    DWORD PTR ds:0x684400f5
  40c4dc:	std    
  40c4dd:	std    
  40c4de:	and    al,0x9b
  40c4e0:	pop    edx
  40c4e1:	mov    al,ds:0x412a7b16
  40c4e6:	sub    cl,BYTE PTR [edi+0x1c]
  40c4e9:	cmp    al,0xe4
  40c4ec:	xchg   DWORD PTR [edx+0x58],edi
  40c4ef:	mov    dl,0xf9
  40c4f1:	daa    
  40c4f2:	mov    ch,0xc4
  40c4f4:	jp     0x40c515
  40c4f6:	xor    BYTE PTR [edx-0x3a],ch
  40c4f9:	xchg   esi,eax
  40c4fa:	sub    DWORD PTR [ebx+0x3],ecx
  40c4fd:	push   esp
  40c4fe:	les    eax,FWORD PTR [edx+0x2c]
  40c501:	test   al,0x77
  40c503:	cli    
  40c504:	xchg   ecx,eax
  40c505:	test   ch,dl
  40c507:	sub    esp,esi
  40c509:	or     ah,BYTE PTR [edi]
  40c50b:	outs   dx,DWORD PTR ds:[esi]
  40c50c:	pushf  
  40c50d:	test   al,0xe2
  40c50f:	ss xor eax,0xfac6eea0
  40c515:	sbb    al,0xaf
  40c517:	sbb    ecx,esp
  40c519:	test   DWORD PTR [ebx+0x116755dc],ebx
  40c51f:	push   ds
  40c520:	mov    ebp,0x76d95328
  40c525:	sahf   
  40c526:	retf   0xe057
  40c529:	mov    ah,0xb8
  40c52b:	push   edi
  40c52c:	cs jnp 0x40c543
  40c52f:	jp     0x40c514
  40c531:	xchg   ch,ch
  40c533:	in     al,dx
  40c534:	adc    BYTE PTR [edi],bl
  40c536:	mov    cl,BYTE PTR [eax]
  40c538:	and    edx,DWORD PTR [edi+0x13b6dd6e]
  40c53e:	add    BYTE PTR [esi],ch
  40c540:	mov    ecx,0x4fbdf430
  40c545:	dec    DWORD PTR [edi]
  40c547:	pop    ss
  40c548:	xor    edx,DWORD PTR [eax-0x1c]
  40c54b:	fdivr  st(0),st
  40c54d:	stos   DWORD PTR es:[edi],eax
  40c54e:	sub    bl,BYTE PTR [esi-0x28e935c4]
  40c554:	sahf   
  40c555:	test   DWORD PTR [eax+0x32d2fce0],ebp
  40c55b:	sbb    ah,BYTE PTR [ebx-0x72]
  40c55e:	mov    bl,0xd1
  40c560:	fidivr DWORD PTR [edx]
  40c562:	std    
  40c563:	nop
  40c564:	sub    esi,DWORD PTR [ebx+0x3]
  40c567:	sbb    ebx,DWORD PTR [edx-0x1a]
  40c56a:	lods   eax,DWORD PTR ds:[esi]
  40c56b:	pop    ss
  40c56c:	add    DWORD PTR [ebx],esi
  40c56e:	loop   0x40c532
  40c570:	outs   dx,BYTE PTR ds:[esi]
  40c571:	and    DWORD PTR [eax+0xb8e3d1f],ebp
  40c577:	popa   
  40c578:	sbb    DWORD PTR [ecx+ebx*8+0x47],edx
  40c57c:	ins    DWORD PTR es:[edi],dx
  40c57d:	nop
  40c57e:	call   FWORD PTR [ebp-0x2f]
  40c581:	and    eax,0x82f16f09
  40c586:	call   0x5b612b95
  40c58b:	fs pop ebp
  40c58d:	jno    0x40c53e
  40c58f:	in     eax,0xae
  40c591:	push   esi
  40c592:	or     eax,0x5da8d2ed
  40c597:	icebp  
  40c598:	xor    BYTE PTR [ecx],dl
  40c59a:	push   ds
  40c59b:	xor    eax,0x8d0c2a50
  40c5a0:	xor    DWORD PTR [ebp+ecx*2-0x60],ecx
  40c5a4:	and    BYTE PTR [edi],ah
  40c5a6:	mov    BYTE PTR [edi+edx*4-0x69],bh
  40c5aa:	lea    edx,[edx+0x48edbfa4]
  40c5b0:	adc    dl,BYTE PTR [eax]
  40c5b2:	ds in  al,0x8f
  40c5b5:	hlt    
  40c5b6:	iret   
  40c5b7:	push   ebp
  40c5b8:	pop    es
  40c5b9:	and    eax,0x348ac16
  40c5be:	or     BYTE PTR [esi],cl
  40c5c0:	jb     0x40c5ba
  40c5c2:	call   0x31ff:0x6ec7cb7e
  40c5c9:	sbb    BYTE PTR [esi+0x16],al
  40c5cc:	std    
  40c5cd:	fxch   st(2)
  40c5cf:	shl    bh,0x6b
  40c5d2:	clc    
  40c5d3:	cmp    eax,0xcf43b847
  40c5d8:	mov    dh,0xaf
  40c5da:	into   
  40c5db:	(bad)  [edi]
  40c5dd:	mov    ds:0xda4dcf5d,al
  40c5e2:	ss jne 0x40c56e
  40c5e5:	sbb    al,0xaa
  40c5e7:	xchg   edi,eax
  40c5e8:	mov    BYTE PTR [ebx+0x23fc3a6e],ch
  40c5ee:	lock mov BYTE PTR [ebx],dh
  40c5f1:	xchg   edx,eax
  40c5f2:	icebp  
  40c5f3:	mov    ebp,0xfa93aa29
  40c5f8:	sar    DWORD PTR [esi+0x23d03dec],cl
  40c5fe:	in     al,dx
  40c5ff:	cdq    
  40c600:	inc    esi
  40c601:	dec    esi
  40c602:	xlat   BYTE PTR ds:[ebx]
  40c603:	and    dh,BYTE PTR [edx+0x5a]
  40c606:	inc    edx
  40c607:	popa   
  40c608:	adc    DWORD PTR ss:[ebp-0x21eb0c5b],eax
  40c60f:	sti    
  40c610:	imul   edx,DWORD PTR [eax-0x1cc8df8f],0xffffffc6
  40c617:	pop    ds
  40c618:	call   0x119b:0x5c7edeaf
  40c61f:	jp     0x40c638
  40c621:	adc    DWORD PTR [eax],eax
  40c623:	pop    ebp
  40c624:	(bad)  
  40c625:	cli    
  40c626:	jmp    FWORD PTR [edi-0x2d]
  40c629:	fidivr DWORD PTR [edx]
  40c62c:	mov    al,0xea
  40c62e:	in     al,0x7f
  40c630:	mov    ah,0xd9
  40c632:	sbb    eax,0x8198cf7
  40c637:	lahf   
  40c638:	cmp    esi,DWORD PTR ds:0xa398d013
  40c63e:	dec    edi
  40c63f:	stos   BYTE PTR es:[edi],al
  40c640:	push   esi
  40c641:	ret    
  40c642:	out    dx,al
  40c643:	nop
  40c644:	jge    0x40c6b8
  40c646:	shl    DWORD PTR ds:0x57c39c30,1
  40c64c:	inc    esi
  40c64d:	cmp    cl,bh
  40c64f:	pushf  
  40c650:	inc    eax
  40c651:	js     0x40c5f2
  40c653:	lds    ebp,FWORD PTR [esi]
  40c655:	mov    al,ds:0x6c5c6203
  40c65a:	shl    DWORD PTR [ebx-0x49f40414],0x71
  40c661:	mov    esi,0x9a5bb1fe
  40c666:	inc    esi
  40c667:	mov    dl,al
  40c669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c66a:	repnz mov cl,0x5d
  40c66d:	fmul   QWORD PTR [edx-0x6c945606]
  40c673:	test   eax,0x268a306c
  40c678:	enter  0xfdd2,0xda
  40c67c:	jmp    0xd5d276f5
  40c681:	loope  0x40c671
  40c683:	mov    BYTE PTR [ecx-0x28],cl
  40c686:	pop    edx
  40c687:	jnp    0x40c6dd
  40c689:	inc    edi
  40c68a:	mov    ds:0x7e8b4f77,eax
  40c68f:	sub    al,0x91
  40c691:	test   DWORD PTR [ecx+0x3a],esi
  40c694:	nop
  40c695:	cdq    
  40c696:	jb     0x40c6fc
  40c698:	sbb    al,0x5e
  40c69a:	cmp    BYTE PTR [edx+0x74f69497],bh
  40c6a0:	pop    esi
  40c6a1:	push   0xffffffd0
  40c6a3:	sbb    eax,0xd87d248e
  40c6a8:	(bad)  
  40c6aa:	fisttp DWORD PTR [ebx-0x15]
  40c6ad:	xchg   ecx,eax
  40c6ae:	push   ds
  40c6af:	aad    0x46
  40c6b1:	adc    DWORD PTR [ecx-0x7f8c3b7],ebx
  40c6b7:	int3   
  40c6b8:	(bad)  
  40c6b9:	mov    ebx,0x46888385
  40c6be:	or     DWORD PTR [ecx+0x1afaafb8],ecx
  40c6c4:	dec    ebx
  40c6c5:	add    ch,BYTE PTR [esi-0x2a014c0f]
  40c6cb:	xchg   ecx,eax
  40c6cc:	jge    0x40c743
  40c6ce:	std    
  40c6cf:	add    esp,DWORD PTR [ebp+0x5d]
  40c6d2:	inc    ecx
  40c6d3:	pop    DWORD PTR [edx]
  40c6d5:	inc    ebp
  40c6d6:	fisubr WORD PTR [esi+0x2d]
  40c6d9:	pop    esp
  40c6da:	pop    ebp
  40c6db:	dec    ebp
  40c6dc:	add    eax,DWORD PTR [ecx-0x8]
  40c6df:	out    dx,al
  40c6e0:	(bad)  
  40c6e1:	(bad)  
  40c6e3:	xor    bl,bh
  40c6e5:	mov    ch,0x7d
  40c6e7:	das    
  40c6e8:	es retf 0x23d3
  40c6ec:	push   ds
  40c6ed:	mov    ah,0x66
  40c6ef:	xchg   DWORD PTR [edx+0xf],edi
  40c6f2:	daa    
  40c6f3:	call   0x536a0b28
  40c6f8:	ins    BYTE PTR es:[edi],dx
  40c6f9:	push   ecx
  40c6fa:	push   0x8ff10d3b
  40c6ff:	sbb    al,0xa1
  40c701:	mov    ch,0x9
  40c703:	adc    esi,DWORD PTR [ecx+0x403117ca]
  40c709:	xchg   cl,cl
  40c70b:	mov    esp,0xd9a326f2
  40c710:	iret   
  40c711:	adc    eax,0xeb3ad1fa
  40c716:	add    eax,ebp
  40c718:	jg     0x40c737
  40c71a:	out    dx,al
  40c71b:	fidiv  WORD PTR [esp+ebx*4+0x7f]
  40c71f:	adc    BYTE PTR [edi-0x10],dl
  40c722:	pushf  
  40c723:	cs pop es
  40c725:	js     0x40c6ce
  40c727:	cmc    
  40c728:	imul   ebp,DWORD PTR [edx+esi*8-0x22],0x5d
  40c72d:	cmp    ebp,ebx
  40c72f:	cmp    bh,BYTE PTR [eax+0x26d25184]
  40c735:	pop    ebp
  40c736:	mov    edi,0x6fa4b7e2
  40c73b:	loop   0x40c742
  40c73d:	pop    esi
  40c73f:	(bad)  
  40c740:	and    eax,0xda395617
  40c745:	scas   al,BYTE PTR es:[edi]
  40c746:	sbb    BYTE PTR [ecx+0x26],al
  40c749:	mov    ah,0x6f
  40c74b:	xor    DWORD PTR [edx],edi
  40c74d:	xor    cl,BYTE PTR [edx-0x5742343d]
  40c753:	pop    ecx
  40c754:	bound  edi,QWORD PTR [edx-0x228d60ed]
  40c75a:	cli    
  40c75b:	push   es
  40c75c:	loop   0x40c788
  40c75e:	jmp    0x7d7e1af
  40c763:	pop    ecx
  40c764:	sti    
  40c765:	push   ds
  40c766:	jg     0x40c720
  40c768:	aas    
  40c769:	push   edi
  40c76a:	in     al,0xa8
  40c76c:	mov    dh,0xf3
  40c76e:	and    bh,BYTE PTR [ecx]
  40c770:	bound  ebp,QWORD PTR [edx-0x29fcfb07]
  40c776:	cs popa 
  40c778:	cs push cs
  40c77a:	sti    
  40c77b:	into   
  40c77c:	add    esp,eax
  40c77e:	call   0x3384fe6c
  40c783:	push   eax
  40c784:	push   es
  40c785:	or     ebp,ebp
  40c787:	cmp    eax,0x791284bc
  40c78c:	jmp    0x9f55:0xa16ec1e0
  40c793:	call   0x93c57ee7
  40c798:	inc    esi
  40c799:	pop    ebx
  40c79a:	test   al,0xc8
  40c79c:	sbb    bl,0x33
  40c79f:	xchg   ecx,eax
  40c7a0:	pop    ecx
  40c7a1:	js     0x40c7e7
  40c7a3:	add    cl,BYTE PTR [esi-0x434143ab]
  40c7a9:	mov    al,0x9c
  40c7ab:	sar    BYTE PTR [ecx+0x6692b802],cl
  40c7b1:	mov    al,ds:0x72d0ae25
  40c7b6:	or     ecx,DWORD PTR [esi]
  40c7b8:	cmc    
  40c7b9:	icebp  
  40c7ba:	and    eax,0xe92952e6
  40c7bf:	(bad)  
  40c7c0:	loop   0x40c81e
  40c7c2:	pop    ss
  40c7c3:	test   eax,0x950bfecd
  40c7c8:	nop
  40c7c9:	sahf   
  40c7ca:	and    al,0x67
  40c7cc:	mov    esi,0xde49a1af
  40c7d1:	inc    ebp
  40c7d2:	in     eax,dx
  40c7d3:	cmc    
  40c7d4:	daa    
  40c7d5:	(bad)  
  40c7d8:	jge    0x40c7ba
  40c7da:	(bad)  
  40c7db:	and    esi,DWORD PTR [ebx+eiz*4-0x7668d171]
  40c7e2:	ret    
  40c7e3:	jmp    0x40c7d6
  40c7e5:	xlat   BYTE PTR ds:[ebx]
  40c7e6:	push   cs
  40c7e7:	add    bh,BYTE PTR [eax+esi*2]
  40c7ea:	stos   DWORD PTR es:[edi],eax
  40c7eb:	inc    ebx
  40c7ec:	rol    DWORD PTR [ecx+0x2d],cl
  40c7ef:	cmp    ecx,edx
  40c7f1:	push   ss
  40c7f2:	jle    0x40c80c
  40c7f4:	pop    ecx
  40c7f5:	xchg   esp,eax
  40c7f6:	push   esi
  40c7f7:	dec    esp
  40c7f8:	cmp    BYTE PTR [ebp-0x35478422],ch
  40c7fe:	push   esp
  40c7ff:	dec    edx
  40c800:	repz dec esi
  40c802:	add    dh,BYTE PTR [ebx-0x2322978e]
  40c808:	push   ecx
  40c809:	rol    DWORD PTR [ecx],1
  40c80b:	ins    BYTE PTR es:[edi],dx
  40c80c:	push   cs
  40c80d:	push   eax
  40c80e:	test   al,0xae
  40c810:	lods   eax,DWORD PTR ds:[esi]
  40c811:	test   eax,0xbe52d585
  40c816:	mov    ds:0xd5c61e69,eax
  40c81b:	adc    dl,BYTE PTR [eax+0x19]
  40c81e:	dec    edx
  40c81f:	add    ebp,DWORD PTR [ebp-0x5]
  40c822:	fistp  QWORD PTR [ecx]
  40c824:	loope  0x40c86d
  40c826:	mov    edi,0xc4e9f1a3
  40c82b:	xor    al,0x45
  40c82d:	imul   esp,DWORD PTR [eax],0xfffffff1
  40c830:	sub    DWORD PTR [edx-0x301f144a],eax
  40c836:	or     eax,0x96a26e3
  40c83b:	mov    eax,ds:0x30ccf782
  40c840:	sbb    ebp,DWORD PTR [ecx+0x230a1860]
  40c846:	sub    eax,0x5e88a76b
  40c84b:	jo     0x40c843
  40c84d:	cmc    
  40c84e:	mov    ecx,0x7153c446
  40c853:	sub    eax,0xd1aa024
  40c858:	aaa    
  40c859:	dec    ebx
  40c85a:	adc    cl,BYTE PTR [ebx-0x12]
  40c85d:	cmc    
  40c85e:	in     al,dx
  40c85f:	mov    ah,0xeb
  40c861:	push   ebp
  40c862:	out    0x31,eax
  40c864:	lods   eax,DWORD PTR ds:[esi]
  40c865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c866:	(bad)  
  40c867:	retf   
  40c868:	cs inc esp
  40c86a:	lahf   
  40c86b:	pop    ss
  40c86c:	inc    ebp
  40c86d:	sub    esp,DWORD PTR [edx-0x17]
  40c870:	stos   BYTE PTR es:[edi],al
  40c871:	jge    0x40c831
  40c873:	xchg   ebx,eax
  40c874:	retf   
  40c875:	push   0xadd78291
  40c87a:	pop    edi
  40c87b:	mov    DWORD PTR [ebp-0x61c66aa6],esp
  40c881:	stc    
  40c882:	call   0x9b7db11
  40c887:	mov    esp,0xf6315b4b
  40c88c:	inc    esp
  40c88d:	pop    ecx
  40c88e:	aas    
  40c88f:	xchg   edi,eax
  40c890:	adc    al,0x26
  40c892:	push   ebx
  40c893:	dec    edi
  40c894:	or     al,0xcf
  40c896:	repz push eax
  40c898:	push   0xffffffa3
  40c89a:	push   ds
  40c89b:	sti    
  40c89c:	fnstenv [edx]
  40c89e:	cwde   
  40c89f:	loopne 0x40c892
  40c8a1:	jns    0x40c881
  40c8a3:	dec    ecx
  40c8a4:	repnz mov al,ds:0x15adfb65
  40c8aa:	mov    ds:0xfc2309d5,eax
  40c8af:	sub    DWORD PTR ds:[esi+0x2ce9aae9],esp
  40c8b6:	pushf  
  40c8b7:	(bad)  
  40c8b8:	xor    edx,ecx
  40c8ba:	xchg   DWORD PTR [eax-0x6e],ebx
  40c8bd:	in     al,dx
  40c8be:	std    
  40c8bf:	sbb    edx,DWORD PTR [edi+0x67]
  40c8c2:	sub    dl,al
  40c8c4:	inc    esi
  40c8c5:	out    0xd2,al
  40c8c7:	mov    edi,0xc331e6be
  40c8cc:	xchg   BYTE PTR [ebx-0xdd20820],bh
  40c8d2:	inc    edx
  40c8d3:	div    BYTE PTR [esi+eiz*4]
  40c8d6:	idiv   ebp
  40c8d8:	sub    cl,BYTE PTR [ebp+0x23]
  40c8db:	cdq    
  40c8dc:	sbb    ebp,DWORD PTR [ecx+0x748c383c]
  40c8e2:	inc    ebx
  40c8e3:	shl    bh,1
  40c8e5:	inc    eax
  40c8e7:	jnp    0x40c924
  40c8e9:	shl    BYTE PTR [edi],1
  40c8eb:	xchg   ebx,eax
  40c8ec:	mov    edx,eax
  40c8ee:	inc    esi
  40c8ef:	and    eax,0x7aa3cdb5
  40c8f4:	sbb    DWORD PTR [ebp-0x2c],ebp
  40c8f7:	dec    esp
  40c8f8:	out    0xba,al
  40c8fa:	add    BYTE PTR [edx],bl
  40c8fc:	jle    0x40c93d
  40c8fe:	add    eax,0xf4e4b406
  40c903:	ret    0xb591
  40c906:	leave  
  40c907:	or     bh,BYTE PTR [esi-0x74e43725]
  40c90d:	jmp    DWORD PTR ds:0x10d7e77d
  40c913:	loopne 0x40c98c
  40c915:	sub    bl,BYTE PTR ss:[ecx+0x17]
  40c919:	stc    
  40c91a:	jmp    0xf398e30f
  40c91f:	fs or  eax,0x5bf8e179
  40c925:	sahf   
  40c926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c927:	cmp    esp,esp
  40c929:	pop    esi
  40c92a:	js     0x40c926
  40c92c:	cwde   
  40c92d:	cmc    
  40c92e:	in     al,dx
  40c92f:	out    0xe5,eax
  40c931:	in     eax,0xa3
  40c933:	les    esp,FWORD PTR [esi+0x638b1ec4]
  40c939:	push   ds
  40c93a:	inc    ebx
  40c93b:	xchg   BYTE PTR [esi+0x196a7475],ah
  40c941:	add    ecx,eax
  40c943:	xchg   edx,eax
  40c944:	xor    dl,al
  40c946:	jbe    0x40c94c
  40c948:	(bad)  
  40c949:	dec    ebx
  40c94a:	nop
  40c94b:	or     bl,BYTE PTR [edi-0x400b0a46]
  40c951:	shl    DWORD PTR [ebp-0x5f8b8e9d],cl
  40c957:	mov    cl,0x8c
  40c959:	enter  0x3e97,0x13
  40c95d:	fidiv  WORD PTR [ebx+0x6c]
  40c960:	xchg   edx,eax
  40c961:	inc    ecx
  40c962:	dec    esp
  40c963:	add    al,0x4f
  40c965:	xor    ebx,DWORD PTR [ebx+0x7c150552]
  40c96b:	rol    DWORD PTR ds:0x30894d4b,cl
  40c971:	imul   esi,edi,0x23
  40c974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c975:	push   ecx
  40c976:	iret   
  40c977:	mov    DWORD PTR [eax+ebx*8-0x4136269a],0xf594145b
  40c982:	stc    
  40c983:	jnp    0x40c907
  40c985:	addr16 xchg ecx,eax
  40c987:	(bad)  
  40c988:	pop    ecx
  40c989:	mov    al,0x37
  40c98b:	adc    eax,0x9f73fa6b
  40c990:	mov    ds:0x60c43776,eax
  40c995:	ret    0x3807
  40c998:	cmp    al,0xc2
  40c99a:	jp     0x40ca0c
  40c99c:	mov    cl,0xe3
  40c99e:	nop
  40c99f:	aam    0x16
  40c9a1:	mov    ch,0x7e
  40c9a3:	pop    eax
  40c9a4:	jae    0x40c95d
  40c9a6:	ss sti 
  40c9a8:	and    eax,0x354d793a
  40c9ad:	adc    eax,0xecb5853
  40c9b2:	and    BYTE PTR [eax-0x2],bl
  40c9b5:	mov    esp,0x74438d96
  40c9ba:	inc    edi
  40c9bb:	or     BYTE PTR [edx+0x2],0x9e
  40c9bf:	repz pop ds
  40c9c1:	jp     0x40ca21
  40c9c3:	cmp    esp,DWORD PTR [edi]
  40c9c5:	outs   dx,DWORD PTR ds:[esi]
  40c9c6:	int3   
  40c9c7:	jmp    0x40c967
  40c9c9:	aaa    
  40c9ca:	(bad)  
  40c9cb:	loopne 0x40ca12
  40c9cd:	out    0x57,eax
  40c9cf:	test   ecx,ebx
  40c9d1:	adc    eax,0x6b31bb1c
  40c9d6:	pop    ss
  40c9d7:	jno    0x40c9e1
  40c9d9:	pop    DWORD PTR [esi-0x34da4366]
  40c9df:	mov    ebx,0xefa27d6e
  40c9e4:	dec    esi
  40c9e5:	sbb    al,0x79
  40c9e7:	mov    ds:0x91c6be58,al
  40c9ec:	cmc    
  40c9ed:	or     ebx,ebp
  40c9ef:	mov    al,0xa3
  40c9f1:	dec    esp
  40c9f2:	mov    edx,0x61aa3d36
  40c9f7:	test   DWORD PTR [edx+0x22],edx
  40c9fa:	retf   
  40c9fb:	mov    ecx,0xa65ba8a3
  40ca00:	push   cs
  40ca01:	xlat   BYTE PTR ds:[ebx]
  40ca02:	clc    
  40ca03:	push   ss
  40ca04:	paddsb mm5,QWORD PTR [ecx-0x50]
  40ca08:	add    al,0x5b
  40ca0a:	mov    edi,0x382b5fd0
  40ca0f:	fwait
  40ca10:	jecxz  0x40c9c8
  40ca12:	pop    esp
  40ca13:	scas   eax,DWORD PTR es:[edi]
  40ca14:	inc    eax
  40ca15:	jge    0x40c9ab
  40ca17:	sbb    edi,ecx
  40ca19:	aaa    
  40ca1a:	adc    esi,ecx
  40ca1c:	add    DWORD PTR [edi+0x3f435fc9],eax
  40ca22:	retf   
  40ca23:	(bad)  
  40ca24:	in     al,dx
  40ca25:	push   eax
  40ca26:	jle    0x40ca37
  40ca28:	cli    
  40ca29:	xchg   esi,eax
  40ca2a:	jmp    0xea8d3870
  40ca2f:	mov    dh,0x1f
  40ca31:	pop    ebp
  40ca32:	jg     0x40ca2e
  40ca34:	test   eax,0xb5dc4457
  40ca39:	xchg   edi,eax
  40ca3a:	jecxz  0x40ca67
  40ca3c:	sar    BYTE PTR [esi],0x48
  40ca3f:	pop    es
  40ca40:	lock xor al,0xe4
  40ca43:	daa    
  40ca44:	(bad)  
  40ca45:	mov    bl,0x49
  40ca47:	dec    ecx
  40ca48:	cli    
  40ca49:	push   ss
  40ca4a:	ss xor al,0x8
  40ca4d:	jnp    0x40ca96
  40ca4f:	cmp    DWORD PTR [esi-0x6d],ebp
  40ca52:	add    eax,0x5156f583
  40ca57:	(bad)  
  40ca58:	mov    ds:0x24840a30,eax
  40ca5d:	mov    edi,0xda725893
  40ca62:	xor    ah,BYTE PTR [esi]
  40ca64:	xor    esp,DWORD PTR [ebp+0x27]
  40ca67:	sub    ecx,ebp
  40ca69:	fimul  WORD PTR [esi-0x44]
  40ca6c:	inc    ebp
  40ca6d:	adc    ch,BYTE PTR [bp-0x3a]
  40ca71:	mov    bl,BYTE PTR [ecx]
  40ca73:	bound  esi,QWORD PTR [edx+eiz*1+0x3a]
  40ca77:	das    
  40ca78:	pop    ecx
  40ca79:	push   esp
  40ca7a:	rcl    BYTE PTR [ebp-0x64],1
  40ca7d:	mov    ebx,0x98c010cc
  40ca82:	std    
  40ca83:	push   0xf3b0106d
  40ca88:	pop    ds
  40ca89:	mov    bl,0x5c
  40ca8b:	jmp    0xc9f5:0x10bc69d2
  40ca92:	lea    edi,[ebx]
  40ca94:	mov    ecx,0x6305257a
  40ca99:	ret    
  40ca9a:	repz daa 
  40ca9c:	lahf   
  40ca9d:	xchg   edi,eax
  40ca9e:	pop    edx
  40ca9f:	clc    
  40caa0:	call   0x601e6b92
  40caa5:	test   al,0x66
  40caa7:	mov    DWORD PTR [eax+eax*1],esi
  40caaa:	xchg   ecx,eax
  40caab:	mov    ds:0x427be74,al
  40cab0:	mov    ds:0xb8aa39d7,eax
  40cab5:	stos   DWORD PTR es:[edi],eax
  40cab6:	dec    DWORD PTR [ebx]
  40cab8:	sub    DWORD PTR [esi+eiz*1-0x4f31efb6],eax
  40cabf:	outs   dx,DWORD PTR ds:[esi]
  40cac0:	ficomp WORD PTR [ebx]
  40cac2:	mov    esp,0xe638dc2b
  40cac7:	fisubr DWORD PTR [ebx]
  40cac9:	aad    0x27
  40cacb:	mov    ds:0x822a1c2f,al
  40cad0:	clc    
  40cad1:	push   edi
  40cad2:	add    bh,ch
  40cad4:	jae    0x40cb3f
  40cad6:	icebp  
  40cad7:	jl     0x40caf9
  40cad9:	push   esp
  40cada:	int3   
  40cadb:	ins    BYTE PTR es:[edi],dx
  40cadc:	push   ds
  40cadd:	rcl    BYTE PTR [ecx+edi*2+0xe],0x99
  40cae2:	mov    edx,0xb66d8ca5
  40cae7:	sub    al,BYTE PTR [esi+0x14]
  40caea:	adc    al,0x4f
  40caec:	mov    ebp,ebp
  40caee:	xchg   edi,eax
  40caef:	xlat   BYTE PTR ds:[ebx]
  40caf0:	inc    ecx
  40caf1:	(bad)  
  40caf2:	repnz or edx,ecx
  40caf5:	sbb    al,0x23
  40caf7:	pop    ebp
  40caf8:	push   ebp
  40caf9:	and    DWORD PTR [ebx],0x4822564b
  40caff:	test   BYTE PTR [ebp-0x76ddedb6],ch
  40cb05:	ja     0x40ca8d
  40cb07:	rol    BYTE PTR [edi-0x7c],cl
  40cb0a:	stos   DWORD PTR es:[edi],eax
  40cb0b:	push   edi
  40cb0c:	fwait
  40cb0d:	repz mov ebx,0x6ccc73a8
  40cb13:	stos   DWORD PTR es:[edi],eax
  40cb14:	outs   dx,BYTE PTR ds:[esi]
  40cb15:	mov    al,ds:0x351db0c3
  40cb1a:	sbb    BYTE PTR [esi],bl
  40cb1c:	test   BYTE PTR [eax],0xb1
  40cb1f:	and    BYTE PTR [ecx+0x7a010c16],cl
  40cb25:	ret    0x496e
  40cb28:	jno    0x40cb93
  40cb2a:	dec    ecx
  40cb2b:	mov    al,ds:0x39e1043e
  40cb30:	cmp    eax,0xff2a6964
  40cb35:	out    dx,eax
  40cb36:	rol    bl,0x96
  40cb39:	and    DWORD PTR [edx-0xbe41f03],eax
  40cb3f:	std    
  40cb40:	lds    ebx,FWORD PTR [eax]
  40cb42:	cmp    BYTE PTR [edx+0x5e],dl
  40cb45:	mov    dh,0x2
  40cb47:	jmp    0xb8ae:0x2a85a8e5
  40cb4e:	push   edx
  40cb4f:	cmp    al,0xf2
  40cb51:	add    BYTE PTR [esi+0x3a892210],dh
  40cb57:	cld    
  40cb58:	imul   eax,DWORD PTR [esi]
  40cb5b:	push   cs
  40cb5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb5d:	sahf   
  40cb5e:	mov    edi,0x8097dd30
  40cb63:	push   edi
  40cb64:	pushf  
  40cb65:	loop   0x40cb81
  40cb67:	lock je 0x40caf9
  40cb6a:	aam    0xea
  40cb6c:	jecxz  0x40cbe0
  40cb6e:	in     al,0xab
  40cb70:	pop    esp
  40cb71:	add    eax,0x2a5759b7
  40cb76:	frstor [edx-0x24a23db7]
  40cb7c:	scas   al,BYTE PTR es:[edi]
  40cb7d:	stos   BYTE PTR es:[edi],al
  40cb7e:	cdq    
  40cb7f:	mov    al,0x9a
  40cb81:	push   ebp
  40cb82:	(bad)  
  40cb83:	jnp    0x40cbb9
  40cb85:	mov    WORD PTR [ecx+0x13b1883b],fs
  40cb8b:	mov    cl,0x9b
  40cb8d:	pop    eax
  40cb8e:	cmc    
  40cb8f:	cdq    
  40cb90:	pop    esp
  40cb91:	jle    0x40cb9d
  40cb93:	mov    al,0x37
  40cb95:	sub    BYTE PTR [ebx-0x20],bl
  40cb98:	jb     0x40cb34
  40cb9a:	push   0xffffffdf
  40cb9c:	inc    ecx
  40cb9d:	das    
  40cb9e:	lock in eax,0x9d
  40cba1:	fild   QWORD PTR [ebp+0x5587ec32]
  40cba7:	jp     0x40cc13
  40cba9:	jnp    0x40cbdf
  40cbab:	(bad)  
  40cbac:	sahf   
  40cbad:	push   esp
  40cbae:	fwait
  40cbaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbb0:	sub    dl,BYTE PTR [ebx]
  40cbb2:	pop    ss
  40cbb3:	leave  
  40cbb4:	mov    dh,0x9e
  40cbb6:	aaa    
  40cbb7:	xchg   edx,eax
  40cbb8:	sub    BYTE PTR [ecx-0x4f],dh
  40cbbb:	mov    ebx,0x1df1bcc5
  40cbc0:	jmp    0x40cb55
  40cbc2:	cmp    ecx,edi
  40cbc4:	imul   eax,DWORD PTR [ebx+ebp*2],0x14
  40cbc8:	ror    BYTE PTR [esi],1
  40cbca:	aam    0x2c
  40cbcc:	push   cs
  40cbcd:	das    
  40cbce:	xchg   ecx,eax
  40cbcf:	ja     0x40cbd3
  40cbd1:	adc    dh,BYTE PTR [ebp+0x57c7056c]
  40cbd7:	test   BYTE PTR [edx-0x53f11c5a],ah
  40cbdd:	mov    ebp,0xea431fa1
  40cbe2:	and    eax,0x1b8aaa0a
  40cbe7:	mov    al,0xe4
  40cbe9:	pushf  
  40cbea:	pop    esp
  40cbeb:	adc    esp,DWORD PTR [eax]
  40cbed:	(bad)  
  40cbee:	mov    dl,0xdb
  40cbf0:	fwait
  40cbf1:	adc    esi,ecx
  40cbf3:	lea    esp,[ecx-0x50]
  40cbf6:	pusha  
  40cbf7:	xchg   edi,eax
  40cbf8:	or     eax,0x7e82d20
  40cbfd:	cmp    edi,ebx
  40cbff:	push   0x273cfb3e
  40cc04:	addr16 and al,0x71
  40cc07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc08:	in     eax,0xe2
  40cc0a:	shr    DWORD PTR [esi+ebp*2-0x742fd577],cl
  40cc11:	and    ebp,DWORD PTR [eax+0x5fa2a7cb]
  40cc17:	mov    eax,0xffcf8c36
  40cc1c:	and    DWORD PTR [esi+esi*1],esp
  40cc1f:	pop    ebx
  40cc20:	push   es
  40cc21:	mov    ecx,DWORD PTR [eax+0x6]
  40cc24:	lahf   
  40cc25:	call   0x8774:0xb93a9772
  40cc2c:	jecxz  0x40cbfe
  40cc2e:	push   ecx
  40cc2f:	adc    edi,eax
  40cc31:	jmp    0xf534:0x6ee2b433
  40cc38:	aas    
  40cc39:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40cc3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc3c:	out    0xce,al
  40cc3e:	outs   dx,BYTE PTR ds:[esi]
  40cc3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc40:	popa   
  40cc41:	(bad)  
  40cc42:	dec    eax
  40cc43:	les    eax,FWORD PTR [ecx]
  40cc45:	in     eax,0x94
  40cc47:	cmp    eax,0x7b37289
  40cc4c:	sub    esp,DWORD PTR [ecx]
  40cc4e:	xchg   bl,ah
  40cc50:	icebp  
  40cc51:	scas   eax,DWORD PTR es:[edi]
  40cc52:	mov    cs,WORD PTR [eax]
  40cc54:	and    eax,0x5aa577db
  40cc59:	jns    0x40cc68
  40cc5b:	jle    0x40cc73
  40cc5d:	iret   
  40cc5e:	pop    es
  40cc5f:	sub    esp,esi
  40cc61:	aam    0x77
  40cc63:	mov    bl,0xe5
  40cc65:	les    ebx,FWORD PTR [eax+eax*8+0x28]
  40cc69:	mov    edx,0xfd696caf
  40cc6e:	enter  0x674c,0xd3
  40cc72:	pop    es
  40cc73:	test   BYTE PTR [edx-0x11ea2c6b],ah
  40cc79:	aas    
  40cc7a:	mov    ebx,0xccc1a59
  40cc7f:	mov    eax,DWORD PTR [ebx+ebp*1]
  40cc82:	inc    ebp
  40cc83:	jp     0x40cc60
  40cc85:	jno    0x40cce8
  40cc87:	test   DWORD PTR [ecx-0x46],0x56b6bfab
  40cc8e:	fst    QWORD PTR [edx]
  40cc90:	aad    0xf1
  40cc92:	push   ebp
  40cc93:	xchg   esp,eax
  40cc94:	mov    ds:0xc745f916,eax
  40cc99:	rol    DWORD PTR [ebx+0x8],cl
  40cc9c:	in     al,dx
  40cc9d:	fsin   
  40cc9f:	scas   eax,DWORD PTR es:[edi]
  40cca0:	jecxz  0x40ccd8
  40cca2:	dec    esi
  40cca3:	jmp    0x40cc6a
  40cca5:	sub    eax,0x604d927
  40ccaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccab:	mov    ebp,cs
  40ccad:	fimul  DWORD PTR [ebx]
  40ccaf:	cmp    DWORD PTR [edx],0xca2d86cf
  40ccb5:	sub    edi,DWORD PTR [edi+edx*2]
  40ccb8:	lods   eax,DWORD PTR ds:[esi]
  40ccb9:	inc    esi
  40ccba:	xor    al,BYTE PTR [esi-0x1b]
  40ccbd:	push   ss
  40ccbe:	cli    
  40ccbf:	mov    al,ds:0x61b1d830
  40ccc4:	test   al,0xee
  40ccc6:	leave  
  40ccc7:	dec    ecx
  40ccc8:	push   0xf3bda0fa
  40cccd:	mov    esp,ecx
  40cccf:	xor    DWORD PTR [ecx],esi
  40ccd1:	sub    BYTE PTR [esi-0x4b66608f],ch
  40ccd7:	(bad)  
  40ccd8:	mov    esi,0x6e12fa65
  40ccdd:	out    dx,eax
  40ccde:	icebp  
  40ccdf:	push   ds
  40cce0:	add    DWORD PTR [ebp-0x28],0xc3b59f03
  40cce7:	mov    edx,0xeb1062d3
  40ccec:	es ja  0x40cd66
  40ccef:	dec    ecx
  40ccf0:	dec    edx
  40ccf1:	ret    
  40ccf2:	sbb    bh,ah
  40ccf4:	push   0x5b
  40ccf6:	mov    esi,0x58ff5900
  40ccfb:	loopne 0x40ccc4
  40ccfd:	rcr    ch,1
  40ccff:	jmp    FWORD PTR ds:0x9445492
  40cd05:	xor    BYTE PTR [edx-0x29],ah
  40cd08:	les    ebp,FWORD PTR [edi+ebp*1-0x5b]
  40cd0c:	jnp    0x40ccd6
  40cd0e:	push   ds
  40cd0f:	aad    0x53
  40cd11:	sub    ebp,DWORD PTR [ecx]
  40cd13:	in     eax,0x4d
  40cd15:	ins    DWORD PTR es:[edi],dx
  40cd16:	retf   
  40cd17:	mov    bl,0x87
  40cd19:	arpl   sp,dx
  40cd1b:	inc    ecx
  40cd1c:	cmc    
  40cd1d:	jle    0x40cd81
  40cd1f:	and    DWORD PTR ds:0x7472f0e2,eax
  40cd25:	daa    
  40cd26:	xor    ebp,ecx
  40cd28:	jle    0x40cd96
  40cd2a:	or     DWORD PTR [ebx+0x160cb620],0xbd7954e7
  40cd34:	cmp    eax,0x4707d108
  40cd39:	add    BYTE PTR [esi],dh
  40cd3b:	sub    al,0xb1
  40cd3d:	cld    
  40cd3e:	jp     0x40ccda
  40cd40:	xchg   esp,eax
  40cd41:	mov    ebp,0x244ead01
  40cd46:	mov    ds:0x3e96094d,al
  40cd4b:	jmp    0x40cd0f
  40cd4d:	add    dl,BYTE PTR [edi+0x4f730006]
  40cd53:	(bad)  
  40cd54:	mov    ebp,0xdd67cb8b
  40cd59:	test   DWORD PTR [ecx+edx*8],eax
  40cd5c:	adc    edi,ebx
  40cd5e:	jge    0x40cd4c
  40cd60:	cmovno edx,DWORD PTR [esi+0x4429bacb]
  40cd67:	pop    esp
  40cd68:	fwait
  40cd69:	paddw  mm0,QWORD PTR [esi+0x59]
  40cd6d:	xchg   ebp,eax
  40cd6e:	jbe    0x40cd2d
  40cd70:	cmp    ecx,DWORD PTR [edx+0xd]
  40cd73:	iret   
  40cd74:	cli    
  40cd75:	mov    bh,0xfa
  40cd77:	push   ebx
  40cd78:	test   BYTE PTR [edi],ch
  40cd7a:	push   0xffffffde
  40cd7c:	push   ds
  40cd7d:	jmp    0x40cd1e
  40cd7f:	mov    DWORD PTR [edx],eax
  40cd81:	mov    bh,0x13
  40cd83:	or     al,0x50
  40cd85:	dec    ecx
  40cd86:	scas   al,BYTE PTR es:[edi]
  40cd87:	pop    ds
  40cd88:	mov    al,ds:0xeb7eac0c
  40cd8d:	push   ecx
  40cd8e:	ins    BYTE PTR es:[edi],dx
  40cd8f:	adc    al,BYTE PTR [ecx-0x34]
  40cd92:	inc    eax
  40cd93:	dec    edx
  40cd94:	push   edx
  40cd95:	pop    edi
  40cd96:	dec    ebx
  40cd97:	pop    es
  40cd98:	pop    ds
  40cd99:	adc    eax,0xba33c503
  40cd9e:	lds    edx,FWORD PTR [ebp+0x21b685b5]
  40cda4:	dec    ecx
  40cda5:	dec    edx
  40cda6:	cmp    eax,DWORD PTR [ebx+0x6094f9fd]
  40cdac:	xchg   ecx,eax
  40cdad:	push   esi
  40cdae:	test   al,0x62
  40cdb0:	mov    ds:0xb3cdd360,al
  40cdb5:	cwde   
  40cdb6:	nop    eax
  40cdb9:	fdivr  st(3),st
  40cdbb:	push   eax
  40cdbc:	scas   al,BYTE PTR es:[edi]
  40cdbd:	adc    eax,0x41ee89b0
  40cdc2:	popf   
  40cdc3:	retf   0x5b32
  40cdc6:	(bad)  
  40cdc7:	(bad)  
  40cdc8:	pop    ebx
  40cdc9:	shl    BYTE PTR [esi],cl
  40cdcb:	cmc    
  40cdcc:	ror    BYTE PTR [esi-0x65be7c8],cl
  40cdd2:	mov    edx,0xcd058e0e
  40cdd7:	enter  0x80e0,0xed
  40cddb:	fdivr  DWORD PTR [edx]
  40cddd:	adc    al,0xb6
  40cddf:	cld    
  40cde0:	sahf   
  40cde1:	xchg   edi,eax
  40cde2:	inc    edi
  40cde3:	inc    eax
  40cde4:	iret   
  40cde5:	push   ds
  40cde6:	rcl    BYTE PTR [edx],0x8e
  40cde9:	xor    edx,DWORD PTR [edi-0x47]
  40cdec:	(bad)  
  40cded:	and    al,0xeb
  40cdef:	and    BYTE PTR [edi-0x78efacb6],dl
  40cdf5:	retf   
  40cdf6:	popa   
  40cdf7:	scas   eax,DWORD PTR es:[edi]
  40cdf8:	mov    WORD PTR [esi-0x56424ed7],ss
  40cdfe:	in     al,dx
  40cdff:	(bad)  
  40ce00:	in     al,0xb2
  40ce02:	loop   0x40cdc0
  40ce04:	fnstsw WORD PTR [edi]
  40ce06:	xchg   BYTE PTR [eax+0xfb3f842],al
  40ce0c:	cli    
  40ce0d:	lods   al,BYTE PTR ds:[esi]
  40ce0e:	jb     0x40cdd0
  40ce10:	inc    esp
  40ce11:	fdivp  st(6),st
  40ce13:	push   ecx
  40ce14:	dec    esi
  40ce15:	xchg   edi,eax
  40ce16:	add    ebp,DWORD PTR [ecx+esi*1-0x21]
  40ce1a:	and    esi,DWORD PTR [esi+0x66c0909]
  40ce20:	adc    eax,0x4f195bff
  40ce25:	inc    ebp
  40ce26:	push   esp
  40ce27:	int    0x14
  40ce29:	sub    DWORD PTR [ecx-0x76],esi
  40ce2c:	sbb    DWORD PTR [esi],ebx
  40ce2e:	sub    eax,0x4d4a1bbd
  40ce33:	retf   
  40ce34:	in     eax,0x9d
  40ce36:	pusha  
  40ce37:	stc    
  40ce38:	(bad)  
  40ce39:	fmul   DWORD PTR [eax+0x66]
  40ce3c:	mov    ch,0x8e
  40ce3e:	sbb    DWORD PTR [esi-0x53],0xffffffc1
  40ce42:	jb     0x40ce67
  40ce44:	mov    gs,WORD PTR [ebx+edi*4+0x2d70e9e5]
  40ce4b:	(bad)  
  40ce4d:	mov    ds:0xdf093823,al
  40ce52:	sbb    cl,ah
  40ce54:	sbb    al,ch
  40ce56:	jb     0x40ce92
  40ce58:	test   BYTE PTR [eax-0x3],bl
  40ce5b:	sub    edx,edi
  40ce5d:	mov    ebp,0x2fcbb60b
  40ce62:	xchg   esi,eax
  40ce63:	cmp    ecx,ebx
  40ce65:	sar    BYTE PTR [edx+0x14f297ef],1
  40ce6b:	adc    esp,DWORD PTR [ebp+0x6f4bba2d]
  40ce71:	mov    ds:0xc7518d7d,eax
  40ce76:	adc    eax,0x2618c6ed
  40ce7b:	xor    al,0x71
  40ce7d:	ficomp WORD PTR [ecx]
  40ce7f:	cli    
  40ce80:	sbb    bl,bh
  40ce82:	cmp    DWORD PTR [ebx],esi
  40ce84:	call   0x37abc5b9
  40ce89:	test   eax,0xaa091f27
  40ce8e:	mov    eax,ds:0x3f522b34
  40ce93:	clc    
  40ce94:	loopne 0x40ce9f
  40ce96:	inc    ecx
  40ce97:	ins    DWORD PTR es:[edi],dx
  40ce98:	cmc    
  40ce99:	and    bh,BYTE PTR [edi+0x292882b1]
  40ce9f:	pop    esi
  40cea0:	mov    esp,0x1d113d3b
  40cea5:	(bad)  
  40cea6:	ds jnp 0x40ce2c
  40cea9:	out    dx,eax
  40ceaa:	enter  0x4e62,0x4
  40ceae:	retf   
  40ceaf:	ucomiss xmm0,xmm1
  40ceb2:	mov    ?,WORD PTR [eax+0x71]
  40ceb5:	retf   0x618e
  40ceb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ceb9:	adc    esp,DWORD PTR [esi+0x6f21ec05]
  40cebf:	xchg   esi,eax
  40cec0:	in     eax,dx
  40cec1:	jmp    0x40ce68
  40cec3:	aaa    
  40cec4:	jb     0x40ce5a
  40cec6:	lahf   
  40cec7:	cli    
  40cec8:	adc    eax,0xfc1b0af1
  40cecd:	inc    ebx
  40cece:	fmul   DWORD PTR [edi-0x79c31dda]
  40ced4:	sbb    DWORD PTR [edx-0x1],ebp
  40ced7:	cmp    bl,ah
  40ced9:	cld    
  40ceda:	add    eax,0xb9b6381f
  40cedf:	dec    esp
  40cee0:	rcl    DWORD PTR [esp+ebx*1+0x51],0x2d
  40cee5:	idiv   DWORD PTR [eax+0x73254f39]
  40ceeb:	mov    DWORD PTR [ecx+0x2ea7d55d],ecx
  40cef1:	xor    BYTE PTR [ecx+0x3d27bccc],0xe0
  40cef8:	cmp    BYTE PTR [eax-0x228d6834],bh
  40cefe:	sbb    al,BYTE PTR [ebp+0x53549018]
  40cf04:	int    0xa8
  40cf06:	add    eax,0x51ff4849
  40cf0b:	push   cs
  40cf0c:	mov    al,ds:0x9b239e52
  40cf11:	les    esp,FWORD PTR [ebx]
  40cf13:	or     BYTE PTR [edx],bl
  40cf15:	test   BYTE PTR [edi+0x26088089],dl
  40cf1b:	mov    ?,WORD PTR [edx+0x3b920f52]
  40cf21:	sbb    DWORD PTR [eax-0x61],esp
  40cf24:	sub    al,BYTE PTR [edx+esi*8-0x62918a83]
  40cf2b:	in     eax,0x6b
  40cf2d:	jmp    0x7ce25b23
  40cf32:	lea    ecx,[edx]
  40cf34:	xchg   ebx,eax
  40cf35:	call   0x1d29:0xeeb998e5
  40cf3c:	adc    cl,cl
  40cf3e:	ret    
  40cf3f:	adc    BYTE PTR [ecx],cl
  40cf41:	out    0x2b,al
  40cf43:	inc    eax
  40cf44:	stc    
  40cf45:	xor    eax,DWORD PTR [ebx-0x5e]
  40cf48:	fbstp  TBYTE PTR [esi]
  40cf4a:	and    al,0xec
  40cf4c:	cli    
  40cf4d:	add    bh,BYTE PTR cs:[ecx+0x52]
  40cf51:	stos   BYTE PTR es:[edi],al
  40cf52:	ret    
  40cf53:	jge    0x40cf08
  40cf55:	dec    ecx
  40cf56:	lock xor bl,BYTE PTR [edi+eiz*4]
  40cf5a:	inc    esp
  40cf5b:	xchg   BYTE PTR [ebx-0x1e],al
  40cf5e:	mov    ds:0xe33346d6,eax
  40cf63:	data16 das 
  40cf65:	or     eax,0x9ff05371
  40cf6a:	pop    ecx
  40cf6b:	mov    dh,0xa9
  40cf6d:	call   0x44cd:0x35be0452
  40cf74:	cmp    eax,0x792f76e6
  40cf79:	pop    ecx
  40cf7a:	scas   eax,DWORD PTR es:[edi]
  40cf7b:	pop    eax
  40cf7c:	jo     0x40cfb5
  40cf7e:	out    dx,al
  40cf7f:	loopne 0x40cfed
  40cf81:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40cf83:	mov    bh,0xdb
  40cf85:	xchg   BYTE PTR [eax-0x4b602f8b],dl
  40cf8b:	(bad)  
  40cf8c:	push   ss
  40cf8d:	mov    dh,0x33
  40cf8f:	bound  edi,QWORD PTR [esi+eiz*4+0x16401eaf]
  40cf96:	push   ss
  40cf97:	call   0xbc1c555a
  40cf9c:	push   esi
  40cf9d:	neg    BYTE PTR [ebx+0x45bcf4ef]
  40cfa3:	lods   eax,DWORD PTR ds:[esi]
  40cfa4:	lods   eax,DWORD PTR ds:[esi]
  40cfa5:	stos   DWORD PTR es:[edi],eax
  40cfa6:	shr    DWORD PTR [edx-0x73],0x14
  40cfaa:	frstor [ebp-0x35e00a4f]
  40cfb0:	test   BYTE PTR cs:[esi-0x20109026],0x20
  40cfb8:	dec    ebp
  40cfb9:	shl    ch,0x68
  40cfbc:	adc    ebp,ecx
  40cfbe:	dec    ebx
  40cfbf:	mov    esi,0xe523d2bb
  40cfc4:	ss push esi
  40cfc6:	lea    edx,[esi-0x6722925f]
  40cfcc:	push   0x200ca8fb
  40cfd1:	stc    
  40cfd2:	xchg   DWORD PTR [ebp+0x5f],ecx
  40cfd5:	mov    ebx,0x48931afb
  40cfda:	stc    
  40cfdb:	push   ds
  40cfdc:	loopne 0x40cfe8
  40cfde:	xchg   ebx,eax
  40cfdf:	hlt    
  40cfe0:	mul    DWORD PTR [ebx+0x5f]
  40cfe3:	mov    ds:0xdc7ad1d5,al
  40cfe8:	jmp    0x364f:0xfde9782f
  40cfef:	push   esp
  40cff0:	gs retf 0xb15f
  40cff4:	push   ebx
  40cff5:	inc    esi
  40cff6:	sti    
  40cff7:	bound  ebp,QWORD PTR [ebx-0x42]
  40cffa:	aad    0xc3
  40cffc:	push   ss
  40cffd:	daa    
  40cffe:	xor    BYTE PTR [edi],cl
  40d000:	sbb    eax,0x9d52116d
  40d005:	aaa    
  40d006:	inc    ebx
  40d007:	loopne 0x40d049
  40d009:	push   ebx
  40d00a:	addr16 fwait
  40d00c:	cwde   
  40d00d:	sub    al,0xef
  40d00f:	dec    ebx
  40d010:	shl    DWORD PTR [eax],cl
  40d012:	and    ch,ah
  40d014:	fnsave [ebx+0x6ae113c8]
  40d01a:	pop    esi
  40d01b:	cdq    
  40d01c:	popa   
  40d01d:	push   0x1f
  40d01f:	and    eax,esp
  40d021:	push   edi
  40d022:	adc    bl,BYTE PTR [ebx-0x55]
  40d025:	fs dec edi
  40d027:	fisub  WORD PTR [edi-0xf]
  40d02a:	jl     0x40cfeb
  40d02c:	xchg   ecx,eax
  40d02d:	inc    ebx
  40d02e:	jae    0x40d006
  40d030:	lods   eax,DWORD PTR ds:[esi]
  40d031:	push   ebp
  40d032:	test   eax,0x871c7c3c
  40d037:	push   ss
  40d038:	xchg   ecx,eax
  40d039:	add    eax,0xafa120e8
  40d03e:	outs   dx,DWORD PTR ds:[esi]
  40d03f:	aam    0x6c
  40d041:	dec    eax
  40d042:	retf   0xc980
  40d045:	pop    ebx
  40d046:	mov    al,ds:0x11f011b
  40d04b:	(bad)  
  40d04c:	fistp  QWORD PTR [ecx]
  40d04e:	test   BYTE PTR [ecx-0x5c],ah
  40d051:	pop    es
  40d052:	aaa    
  40d053:	aaa    
  40d054:	ins    BYTE PTR es:[edi],dx
  40d055:	or     eax,0x5fcbacb4
  40d05a:	mov    si,0x9c2c
  40d05e:	mov    WORD PTR [edi-0x1c],cs
  40d061:	loopne 0x40d03b
  40d063:	sbb    DWORD PTR [edi+0x266d0ae4],edx
  40d069:	mov    esi,0xccff9b5f
  40d06e:	mov    edx,0x9b0064fd
  40d073:	jae    0x40d008
  40d075:	xor    al,0xbd
  40d077:	push   0x3025190c
  40d07c:	aaa    
  40d07d:	xchg   esp,eax
  40d07e:	arpl   bp,dx
  40d080:	in     al,0x44
  40d082:	fs ins BYTE PTR es:[edi],dx
  40d084:	jecxz  0x40d097
  40d086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d087:	cmp    dh,ch
  40d089:	sbb    eax,0xf8779add
  40d08e:	(bad)  
  40d08f:	and    edi,ecx
  40d091:	(bad)  
  40d092:	shl    BYTE PTR [edx],1
  40d094:	imul   esi,ebp,0x3d
  40d097:	mov    al,0x73
  40d099:	adc    DWORD PTR [eax-0x16],ebp
  40d09c:	aam    0xc4
  40d09e:	add    DWORD PTR [ebp+eax*4+0x33],edx
  40d0a2:	adc    al,0x54
  40d0a4:	jl     0x40d110
  40d0a6:	rcl    BYTE PTR [edi],1
  40d0a8:	ror    BYTE PTR [edx],0x17
  40d0ab:	idiv   dh
  40d0ad:	jmp    DWORD PTR [edx-0x3fd259f2]
  40d0b3:	and    bl,BYTE PTR [edi+0x63]
  40d0b6:	paddusw mm3,QWORD PTR ds:0xc86ab0cf
  40d0bd:	push   eax
  40d0be:	add    DWORD PTR [esi+edi*8+0x14fb61fc],edx
  40d0c5:	push   edx
  40d0c6:	sbb    al,0x24
  40d0c8:	or     eax,0x8bfdb12f
  40d0cd:	dec    esp
  40d0ce:	push   esi
  40d0cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0d0:	cli    
  40d0d1:	shl    BYTE PTR [esp+ecx*8-0x3f],cl
  40d0d5:	cs daa 
  40d0d7:	ds cli 
  40d0d9:	jnp    0x40d119
  40d0db:	leave  
  40d0dc:	xchg   ebx,eax
  40d0dd:	mov    ah,0x91
  40d0df:	and    BYTE PTR [edx-0x19],al
  40d0e2:	repnz ins BYTE PTR es:[edi],dx
  40d0e4:	out    dx,eax
  40d0e5:	add    al,0x8b
  40d0e7:	sub    DWORD PTR [eax],ebp
  40d0e9:	mov    BYTE PTR [ebx-0x50],cl
  40d0ec:	or     al,0xfc
  40d0ee:	sub    al,0x33
  40d0f0:	out    dx,al
  40d0f1:	hlt    
  40d0f2:	mov    ebx,0xb56146a2
  40d0f7:	mov    gs,edx
  40d0f9:	adc    al,ah
  40d0fb:	jbe    0x40d111
  40d0fd:	sub    eax,0xb5aa5a1c
  40d102:	mov    DWORD PTR [eax],edi
  40d104:	fbstp  TBYTE PTR [esi]
  40d106:	inc    eax
  40d107:	mov    ds:0x6632acf8,al
  40d10c:	or     DWORD PTR [ecx],0x61d53741
  40d112:	sub    DWORD PTR [edi+edi*8+0x3cec2c99],eax
  40d119:	neg    BYTE PTR [esi+0x7d]
  40d11c:	mov    cl,0xbb
  40d11e:	adc    DWORD PTR [ecx+0xb],0x19
  40d122:	pusha  
  40d123:	and    BYTE PTR ss:[edi+0x2f3cd4c9],dh
  40d12a:	ds ss mov bh,0xc4
  40d12e:	jne    0x40d154
  40d130:	mov    DWORD PTR [ebx+0x737703c8],ebp
  40d136:	repz sti 
  40d138:	mov    dl,0xce
  40d13a:	jp     0x40d13c
  40d13c:	fsubr  QWORD PTR [ebp-0x17baf6ea]
  40d142:	test   DWORD PTR [esi+0x52],eax
  40d145:	push   eax
  40d146:	imul   edi,DWORD PTR [eax+0x37],0x3c9ebeb3
  40d14d:	ret    
  40d14e:	arpl   WORD PTR [eax-0x74c9e4c6],cx
  40d154:	pop    esp
  40d155:	inc    esi
  40d156:	es retf 
  40d158:	fucomp st(7)
  40d15a:	mov    dl,ah
  40d15c:	pop    ecx
  40d15d:	lea    ecx,[ebp+0x3f]
  40d160:	push   esp
  40d161:	pop    ebx
  40d162:	inc    ecx
  40d163:	mov    BYTE PTR [ecx-0x36],ch
  40d166:	mov    al,ds:0x9eed1575
  40d16b:	jl     0x40d161
  40d16d:	mov    ?,WORD PTR [edx+0x51703083]
  40d173:	cmp    DWORD PTR [ecx-0x47],edx
  40d176:	adc    bl,bl
  40d178:	adc    DWORD PTR [esi-0x477a7573],edx
  40d17e:	shl    dh,0x6c
  40d181:	and    bl,BYTE PTR [ebx-0x4bb9ddf1]
  40d187:	mov    edi,0x74887be6
  40d18c:	and    DWORD PTR [edi+0x25],ebx
  40d18f:	dec    ebx
  40d190:	xchg   DWORD PTR [ebx+0x5d],ebx
  40d193:	and    edi,DWORD PTR [ecx]
  40d195:	or     DWORD PTR [ebx],ecx
  40d197:	add    eax,0x2f1b73c
  40d19c:	mov    bh,0x6b
  40d19e:	xor    dh,BYTE PTR [ecx-0x6dcaee73]
  40d1a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1a5:	(bad)  
  40d1a6:	sub    ch,ch
  40d1a8:	dec    ebp
  40d1a9:	add    al,0x76
  40d1ab:	pop    eax
  40d1ac:	xchg   ecx,eax
  40d1ad:	sub    al,0x81
  40d1af:	xor    dh,cl
  40d1b1:	out    dx,eax
  40d1b2:	jo     0x40d1fc
  40d1b4:	cs mov ebp,0x2c71490f
  40d1ba:	popf   
  40d1bb:	pushf  
  40d1bc:	and    BYTE PTR [edx-0x71ac73ac],0x39
  40d1c3:	jle    0x40d1e6
  40d1c5:	mul    DWORD PTR [ebx+0x50]
  40d1c8:	jmp    0xa056:0x9bcf7e67
  40d1cf:	outs   dx,DWORD PTR ds:[esi]
  40d1d0:	add    DWORD PTR [esp+ebx*1],eax
  40d1d3:	inc    esi
  40d1d4:	pushf  
  40d1d5:	cmp    ecx,DWORD PTR ds:[esi]
  40d1d8:	xchg   esi,eax
  40d1d9:	je     0x40d1d0
  40d1db:	out    dx,eax
  40d1dc:	dec    ecx
  40d1dd:	or     eax,DWORD PTR ds:0xa07cda46
  40d1e3:	jmp    0xfe9a:0x493655a3
  40d1ea:	dec    edi
  40d1eb:	xor    dh,ah
  40d1ed:	mov    ebx,0xb6b1e4d4
  40d1f2:	and    eax,0x43702931
  40d1f7:	(bad)  
  40d1f9:	adc    bl,dl
  40d1fb:	xor    eax,0x805a15c5
  40d200:	sub    DWORD PTR [edi-0x5b],ebx
  40d203:	sub    BYTE PTR [ecx-0x30],0x5d
  40d207:	add    eax,0xd2aea63a
  40d20c:	add    cl,BYTE PTR [ecx+esi*4-0x56]
  40d210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d211:	pop    esp
  40d212:	inc    eax
  40d213:	js     0x40d212
  40d215:	add    DWORD PTR [edi-0x499b4f32],0x269422bf
  40d21f:	lods   al,BYTE PTR ds:[esi]
  40d220:	jmp    0xb74e261f
  40d225:	(bad)  
  40d226:	loop   0x40d282
  40d228:	iret   
  40d229:	mov    ecx,0x1f060d4e
  40d22e:	adc    ebx,DWORD PTR [ebx]
  40d230:	(bad)  
  40d231:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d232:	jl     0x40d268
  40d234:	daa    
  40d235:	gs dec ebx
  40d237:	jmp    0x786c100b
  40d23c:	or     al,0x8e
  40d23e:	inc    edi
  40d23f:	aas    
  40d240:	pusha  
  40d241:	and    al,BYTE PTR [edi-0x41]
  40d244:	inc    esp
  40d245:	mov    DWORD PTR [ecx-0x1e],esi
  40d248:	xor    al,0xa3
  40d24a:	es jns 0x40d28d
  40d24d:	pop    edi
  40d24e:	fdivp  st(2),st
  40d250:	adc    cl,BYTE PTR [esi]
  40d252:	xlat   BYTE PTR ds:[ebx]
  40d253:	mov    esi,DWORD PTR [edx+0x394c2fc3]
  40d259:	push   ds
  40d25a:	mov    esi,0xa80ef7be
  40d25f:	xchg   ebx,eax
  40d260:	xchg   DWORD PTR [ebx+0x66a16125],esi
  40d266:	cld    
  40d267:	(bad)  
  40d268:	shl    DWORD PTR [edx+0x71],cl
  40d26b:	sahf   
  40d26c:	gs sahf 
  40d26e:	xor    al,0x9d
  40d270:	retf   
  40d271:	stos   BYTE PTR es:[edi],al
  40d272:	(bad)  
  40d273:	jle    0x40d2a6
  40d275:	aaa    
  40d276:	in     al,dx
  40d277:	stos   BYTE PTR es:[edi],al
  40d278:	jp     0x40d29d
  40d27a:	in     al,dx
  40d27b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d27c:	push   edx
  40d27d:	sti    
  40d27e:	inc    ecx
  40d27f:	push   es
  40d280:	call   0xe9f3:0x5b616945
  40d287:	adc    DWORD PTR [edi+0x24],ebx
  40d28a:	jb     0x40d273
  40d28c:	leave  
  40d28d:	(bad)  
  40d28e:	xchg   esp,eax
  40d28f:	aaa    
  40d290:	xchg   edi,eax
  40d291:	cwde   
  40d292:	mov    ch,0x41
  40d294:	test   DWORD PTR [esi-0x2b],0x9d85306d
  40d29b:	inc    ecx
  40d29c:	jb     0x40d270
  40d29e:	jge    0x40d255
  40d2a0:	jmp    0x40d276
  40d2a2:	add    bh,BYTE PTR [edx+0xf9d7221]
  40d2a8:	ds ffreep st(4)
  40d2ab:	push   esp
  40d2ac:	jne    0x40d2a5
  40d2ae:	into   
  40d2af:	mov    WORD PTR [ecx+0x5867dba2],fs
  40d2b5:	push   ss
  40d2b6:	push   es
  40d2b7:	sbb    eax,0x6628ac3d
  40d2bc:	sti    
  40d2bd:	cmp    BYTE PTR [ebx-0x6db7781e],cl
  40d2c3:	jmp    0x40d2e9
  40d2c5:	aas    
  40d2c6:	cmp    eax,0x5789702f
  40d2cb:	and    ebp,DWORD PTR [edi+0x5a]
  40d2ce:	punpcklbw mm4,DWORD PTR [edx-0x6917146e]
  40d2d5:	data16 mov bh,BYTE PTR [ebp+0x5e]
  40d2d9:	loope  0x40d341
  40d2db:	icebp  
  40d2dc:	jbe    0x40d2da
  40d2de:	ja     0x40d277
  40d2e0:	imul   esi,DWORD PTR [eax+0x3a],0xbdb396e4
  40d2e7:	sahf   
  40d2e8:	in     eax,0x67
  40d2ea:	inc    eax
  40d2eb:	xor    ch,BYTE PTR [edi-0x47]
  40d2ee:	adc    DWORD PTR [ebx-0x17],edi
  40d2f1:	xchg   ecx,eax
  40d2f2:	(bad)  
  40d2f3:	or     ebp,DWORD PTR [ecx]
  40d2f5:	pop    ds
  40d2f6:	inc    esi
  40d2f7:	scas   al,BYTE PTR es:[edi]
  40d2f8:	mov    dh,BYTE PTR [edi]
  40d2fa:	inc    esp
  40d2fb:	repz mov cs,WORD PTR [ebp-0x7a]
  40d2ff:	add    DWORD PTR [esi+ecx*1],ebp
  40d302:	push   0xfef8a00e
  40d307:	sbb    cl,BYTE PTR [eax+ebp*1-0x2e]
  40d30b:	pop    es
  40d30c:	js     0x40d34f
  40d30e:	in     al,dx
  40d30f:	dec    BYTE PTR [ebx+0x1619f85a]
  40d315:	cs mov edi,0x605a4c2f
  40d31b:	ds das 
  40d31d:	repnz ins DWORD PTR es:[edi],dx
  40d31f:	pop    ss
  40d320:	loopne 0x40d2fe
  40d322:	je     0x40d2d4
  40d324:	dec    ecx
  40d325:	out    0x5a,eax
  40d327:	test   ch,dh
  40d329:	aaa    
  40d32a:	inc    ebp
  40d32b:	pushf  
  40d32c:	fistp  QWORD PTR [eax+0x20]
  40d32f:	fcmovnbe st,st(5)
  40d331:	jne    0x40d37b
  40d333:	inc    edx
  40d334:	inc    ebp
  40d335:	mov    esp,0x8b0df632
  40d33a:	or     dh,ch
  40d33c:	outs   dx,BYTE PTR ds:[esi]
  40d33d:	push   ss
  40d33e:	jbe    0x40d309
  40d340:	mov    dh,0x7b
  40d342:	lahf   
  40d343:	xchg   ebx,eax
  40d344:	ss stc 
  40d346:	mov    fs,WORD PTR [ecx-0x43]
  40d349:	mul    BYTE PTR ds:0xbf95cd03
  40d34f:	and    DWORD PTR [ecx-0x10cafea1],0xa24b0a4a
  40d359:	scas   al,BYTE PTR es:[edi]
  40d35a:	ins    DWORD PTR es:[edi],dx
  40d35b:	and    al,0x4a
  40d35d:	test   BYTE PTR [edi],bh
  40d35f:	inc    ebx
  40d360:	inc    ecx
  40d361:	lds    ebp,FWORD PTR [eax+0x5a19624a]
  40d367:	push   esp
  40d368:	jae    0x40d38f
  40d36a:	sub    dl,BYTE PTR [ebx+0x63c90251]
  40d370:	sti    
  40d371:	stc    
  40d372:	push   edx
  40d373:	or     BYTE PTR [edi-0x586c578e],dl
  40d379:	dec    esp
  40d37a:	sbb    esi,ebx
  40d37c:	sub    BYTE PTR [ebx],al
  40d37e:	cli    
  40d37f:	cmp    al,bl
  40d381:	hlt    
  40d382:	in     eax,0xd9
  40d384:	mov    ch,0xcd
  40d386:	xchg   ecx,eax
  40d387:	or     BYTE PTR [edx-0x36abef68],bl
  40d38d:	popa   
  40d38e:	arpl   WORD PTR [edx+eax*4-0x62e6b068],si
  40d395:	or     al,0xbc
  40d397:	add    al,0xfe
  40d399:	out    0x2d,al
  40d39b:	adc    al,0x89
  40d39d:	push   0x20933631
  40d3a2:	sbb    dh,ah
  40d3a4:	and    al,0x39
  40d3a6:	call   0x6f61:0x4a16903c
  40d3ad:	xor    eax,0x56668afc
  40d3b2:	lods   al,BYTE PTR ds:[esi]
  40d3b3:	int3   
  40d3b4:	adc    al,0xbf
  40d3b6:	call   0x7ad3060a
  40d3bb:	inc    ebp
  40d3bc:	hlt    
  40d3bd:	cwde   
  40d3be:	xor    DWORD PTR [ebp+0x624636db],ecx
  40d3c4:	nop
  40d3c5:	fcmovnbe st,st(0)
  40d3c7:	imul   edx,DWORD PTR [edx+0x429f732],0xe787eb7
  40d3d1:	test   eax,0x667595c7
  40d3d6:	aad    0x8
  40d3d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3d9:	sub    al,0xe
  40d3db:	je     0x40d361
  40d3dd:	inc    esp
  40d3de:	shl    DWORD PTR [edi+0x6f],0x12
  40d3e2:	adc    ecx,ebx
  40d3e4:	dec    esi
  40d3e5:	test   al,0x26
  40d3e7:	les    ecx,FWORD PTR [ecx+ebx*8]
  40d3ea:	(bad)  
  40d3eb:	dec    ecx
  40d3ec:	or     eax,0xcc07063b
  40d3f1:	pushf  
  40d3f2:	and    eax,0x11ea0c65
  40d3f7:	fmul   st(6),st
  40d3f9:	dec    esi
  40d3fa:	retf   
  40d3fb:	call   0x7ad8:0xffbaa2d2
  40d402:	stos   DWORD PTR es:[edi],eax
  40d403:	outs   dx,DWORD PTR ds:[esi]
  40d404:	dec    ebx
  40d405:	test   eax,0x2d2e8709
  40d40a:	sub    esp,DWORD PTR [edi-0x76c694de]
  40d410:	lgs    ecx,FWORD PTR [esi]
  40d413:	cmp    al,0xd8
  40d415:	int3   
  40d416:	neg    dh
  40d418:	sub    al,BYTE PTR ds:0x24bfa2f
  40d41e:	dec    ecx
  40d41f:	push   ebx
  40d420:	push   cs
  40d421:	inc    esi
  40d422:	sahf   
  40d423:	imul   esp,DWORD PTR [esi+ebx*2+0x5f],0x3b
  40d428:	adc    BYTE PTR [eax+0x4],ah
  40d42b:	loope  0x40d4a1
  40d42d:	inc    esi
  40d42e:	fisttp QWORD PTR [edx+ebx*2+0x670bc876]
  40d435:	hlt    
  40d436:	mov    esi,0xaeea76dd
  40d43b:	sahf   
  40d43c:	jle    0x40d453
  40d43e:	lods   eax,DWORD PTR ds:[esi]
  40d43f:	int    0x55
  40d441:	mov    edi,0xe53e91f
  40d446:	pop    esp
  40d447:	aas    
  40d448:	stc    
  40d449:	(bad)  [edi]
  40d44b:	xor    DWORD PTR fs:[edx],esi
  40d44e:	js     0x40d491
  40d450:	pop    esi
  40d451:	inc    ecx
  40d452:	pop    ss
  40d453:	inc    ebp
  40d454:	(bad)  
  40d456:	loop   0x40d417
  40d458:	pop    es
  40d459:	icebp  
  40d45a:	retf   
  40d45b:	mov    eax,0xc22ab16c
  40d460:	mov    ecx,0x77fb6230
  40d465:	stos   DWORD PTR es:[edi],eax
  40d466:	sub    bl,bl
  40d468:	ja     0x40d424
  40d46a:	sar    DWORD PTR [ebx+0x17],cl
  40d46d:	inc    esp
  40d46e:	mov    DWORD PTR [esi],0x70669a70
  40d474:	xlat   BYTE PTR ds:[ebx]
  40d475:	inc    ebp
  40d476:	imul   esi,DWORD PTR [ebx+0x6fdbca84],0x56
  40d47d:	and    DWORD PTR [eax+0x18],0x39a8ede4
  40d484:	cmp    eax,0xe5d7defb
  40d489:	loopne 0x40d49a
  40d48b:	push   eax
  40d48c:	inc    edx
  40d48d:	cmp    esi,DWORD PTR [esi-0x4c7b0304]
  40d493:	in     al,dx
  40d494:	pop    esi
  40d495:	test   DWORD PTR [ebx-0x5d],edx
  40d498:	or     BYTE PTR [edx-0x28122c5a],bl
  40d49e:	js     0x40d4d1
  40d4a0:	or     BYTE PTR [ebx-0x56],al
  40d4a3:	arpl   WORD PTR [ebx+0x29],bp
  40d4a6:	test   BYTE PTR [eax],bh
  40d4a8:	nop
  40d4a9:	in     eax,0x15
  40d4ab:	sahf   
  40d4ac:	sar    DWORD PTR [eax+0x6356a6ca],cl
  40d4b2:	sbb    eax,0x401e3bce
  40d4b7:	iret   
  40d4b8:	xor    BYTE PTR [ebx],al
  40d4ba:	das    
  40d4bb:	test   eax,0x7a1fc87a
  40d4c0:	add    dh,ah
  40d4c2:	daa    
  40d4c3:	jne    0x40d48f
  40d4c5:	rcr    DWORD PTR [edi-0x3c],cl
  40d4c8:	ja     0x40d46d
  40d4ca:	pop    edi
  40d4cb:	adc    BYTE PTR [ecx-0x4],ch
  40d4ce:	addr16 out 0x13,al
  40d4d1:	or     ebp,edi
  40d4d3:	push   ebp
  40d4d4:	int    0x3b
  40d4d6:	xchg   edx,eax
  40d4d7:	fidiv  DWORD PTR [ebp-0x4fbf0f26]
  40d4dd:	nop
  40d4de:	aad    0xa1
  40d4e0:	cmp    ebp,DWORD PTR [ecx]
  40d4e2:	mov    al,0xf
  40d4e4:	aaa    
  40d4e5:	push   cs
  40d4e6:	and    al,0x4f
  40d4e8:	inc    ebx
  40d4e9:	xchg   ebp,eax
  40d4ea:	adc    dl,BYTE PTR [eax]
  40d4ec:	push   0xe961cbac
  40d4f1:	iret   
  40d4f2:	bound  eax,QWORD PTR [ebp-0x25]
  40d4f5:	push   ebx
  40d4f6:	push   esi
  40d4f7:	sbb    eax,ebx
  40d4f9:	cmp    al,0x68
  40d4fb:	pop    ebp
  40d4fc:	mov    edx,0xb52df493
  40d501:	xchg   esi,eax
  40d502:	dec    ebp
  40d503:	sbb    al,0xc8
  40d505:	arpl   WORD PTR [edi+eax*2],ax
  40d508:	fucomi st,st(7)
  40d50a:	push   ds
  40d50b:	fs fs sub eax,0xfeecaade
  40d512:	test   al,0xea
  40d514:	call   0x901631f2
  40d519:	leave  
  40d51a:	int    0x26
  40d51c:	out    dx,al
  40d51d:	arpl   cx,ax
  40d51f:	(bad)  
  40d520:	jp     0x40d4d7
  40d522:	data16 jbe 0x40d4df
  40d525:	push   es
  40d526:	xchg   edx,eax
  40d527:	inc    esp
  40d528:	out    0x4a,eax
  40d52a:	dec    eax
  40d52b:	jg     0x40d4cd
  40d52d:	in     al,0x64
  40d52f:	in     eax,dx
  40d530:	and    al,0x48
  40d532:	stos   DWORD PTR es:[edi],eax
  40d533:	(bad)  
  40d534:	shr    DWORD PTR [ebp-0x39],1
  40d537:	arpl   WORD PTR [eax],ax
  40d539:	push   cs
  40d53a:	pusha  
  40d53b:	dec    ebx
  40d53c:	test   BYTE PTR ds:0xdfa38490,cl
  40d542:	adc    DWORD PTR [ebp+ebp*1-0x609306eb],eax
  40d549:	and    eax,0x40777220
  40d54e:	mov    eax,0x5aea0f8
  40d553:	sbb    DWORD PTR [ebx+edi*1-0x5b7bad19],esi
  40d55a:	adc    BYTE PTR [ebx],dh
  40d55c:	xor    bl,ah
  40d55e:	test   eax,0x49d17d0
  40d563:	or     al,0xcf
  40d565:	arpl   ax,dx
  40d567:	adc    DWORD PTR [ebp+0x65],0xffffff9c
  40d56b:	(bad)  
  40d56c:	cmp    al,0x83
  40d56e:	mov    esi,0xb7d6cad0
  40d573:	dec    esp
  40d574:	dec    eax
  40d575:	ds push ebx
  40d577:	(bad)  [ebp-0x5b8a3261]
  40d57d:	leave  
  40d57e:	outs   dx,BYTE PTR ds:[esi]
  40d57f:	push   edi
  40d580:	or     edx,DWORD PTR [ebp-0x3b]
  40d583:	mov    ds:0x622ee8b7,al
  40d588:	push   ebp
  40d589:	into   
  40d58a:	xor    eax,DWORD PTR [ecx+0x3f]
  40d58d:	out    dx,eax
  40d58e:	jl     0x40d572
  40d590:	mov    edi,0x333e5bcf
  40d595:	loope  0x40d603
  40d597:	repz push esi
  40d599:	sar    al,cl
  40d59b:	mov    WORD PTR [ebp-0x11],?
  40d59e:	(bad)  
  40d5a0:	xlat   BYTE PTR ds:[ebx]
  40d5a1:	adc    BYTE PTR [bx+di+0x7b],bh
  40d5a5:	and    edi,DWORD PTR [ebp-0x2b]
  40d5a8:	arpl   di,si
  40d5aa:	jmp    0x5e4d001d
  40d5af:	jnp    0x40d5bf
  40d5b1:	push   0x89e8b674
  40d5b6:	ret    0xf121
  40d5b9:	pop    ecx
  40d5ba:	(bad)  
  40d5bb:	ins    BYTE PTR es:[edi],dx
  40d5bc:	mov    ch,0x2d
  40d5be:	dec    edx
  40d5bf:	pusha  
  40d5c0:	test   eax,0xd70156e1
  40d5c5:	or     eax,0x695c7377
  40d5ca:	jno    0x40d625
  40d5cc:	pushf  
  40d5cd:	xchg   BYTE PTR [esi-0x18],cl
  40d5d0:	inc    esp
  40d5d1:	addr16 (bad) 
  40d5d4:	fxtract 
  40d5d6:	mov    ah,0xbc
  40d5d8:	popa   
  40d5d9:	ins    BYTE PTR es:[edi],dx
  40d5da:	add    DWORD PTR [esp+eiz*2+0x77915c85],edx
  40d5e1:	mov    eax,ds:0xd8e2bdf1
  40d5e6:	pop    ds
  40d5e7:	add    al,bh
  40d5e9:	lods   eax,DWORD PTR ds:[esi]
  40d5ea:	cmp    eax,0x2bed3878
  40d5ef:	rol    BYTE PTR [edx-0x20],cl
  40d5f2:	xor    BYTE PTR [ebp+0x18],al
  40d5f5:	iret   
  40d5f6:	(bad)
  40d5fa:	(bad)  
  40d5fc:	mov    ah,0x5c
  40d5fe:	test   eax,0x306904f9
  40d603:	leave  
  40d604:	or     al,0xf9
  40d606:	pop    ss
  40d607:	fisub  DWORD PTR ds:0x5bd12c14
  40d60d:	xchg   edi,eax
  40d60e:	shl    DWORD PTR [edx-0x14],0x70
  40d612:	ja     0x40d5a1
  40d614:	xlat   BYTE PTR ds:[ebx]
  40d615:	sar    DWORD PTR [ebp+eax*8+0x24],1
  40d619:	shl    BYTE PTR [edx+esi*2],cl
  40d61c:	inc    eax
  40d61d:	and    DWORD PTR [edi],eax
  40d61f:	fistp  DWORD PTR [ecx]
  40d621:	stc    
  40d622:	and    eax,DWORD PTR [edi+0x54]
  40d625:	stos   BYTE PTR es:[edi],al
  40d626:	call   DWORD PTR [edx]
  40d628:	test   al,0x89
  40d62a:	sbb    eax,0xd57f1a90
  40d62f:	mov    edi,0x66cb70ae
  40d634:	mov    esp,0x9d6237d0
  40d639:	fsub   DWORD PTR [ecx+0x3b]
  40d63c:	lahf   
  40d63d:	call   0xb581:0x20849473
  40d644:	sbb    BYTE PTR [edi+0x4be4a9c0],dl
  40d64a:	scas   al,BYTE PTR es:[edi]
  40d64b:	test   BYTE PTR ds:0x243bfdb7,bh
  40d651:	std    
  40d652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d653:	add    al,0xa
  40d655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d656:	sbb    eax,0x7c711a8f
  40d65b:	fs jecxz 0x40d627
  40d65e:	in     eax,0x76
  40d660:	std    
  40d661:	sbb    eax,0xe5a29038
  40d666:	(bad)  
  40d667:	imul   ebp,DWORD PTR [edi-0x77cb5c18],0x5008b21b
  40d671:	ja     0x40d6c4
  40d673:	mov    DWORD PTR gs:[ebx-0x97e0c1f],esi
  40d67a:	adc    BYTE PTR [edx],0xf
  40d67d:	aas    
  40d67e:	jmp    0x46f3:0xcd9eb77f
  40d685:	test   eax,0xb00ef2f3
  40d68a:	dec    eax
  40d68b:	cmc    
  40d68c:	les    esi,FWORD PTR [eax-0xa]
  40d68f:	add    eax,0xac1ab9a8
  40d694:	out    dx,eax
  40d695:	(bad)  
  40d697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d698:	xlat   BYTE PTR ds:[ebx]
  40d699:	adc    eax,0x758dd5c2
  40d69e:	push   es
  40d69f:	js     0x40d653
  40d6a1:	inc    ebx
  40d6a2:	daa    
  40d6a3:	dec    ebx
  40d6a4:	(bad)  
  40d6a5:	popf   
  40d6a6:	retf   0x56af
  40d6a9:	mov    esp,0x60cb6856
  40d6ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6af:	push   ss
  40d6b0:	(bad)  
  40d6b1:	not    DWORD PTR [eax+0x22f14f57]
  40d6b7:	mov    BYTE PTR [eax-0x80],ch
  40d6ba:	cld    
  40d6bb:	lods   eax,DWORD PTR ds:[esi]
  40d6bc:	sub    eax,DWORD PTR [ebx-0x6e]
  40d6bf:	fcomp  QWORD PTR [eax]
  40d6c1:	inc    esi
  40d6c2:	(bad)  
  40d6c4:	pop    ebp
  40d6c5:	mov    bl,0xb
  40d6c7:	je     0x40d744
  40d6c9:	retf   
  40d6ca:	aam    0x1e
  40d6cc:	and    DWORD PTR [esi],0x126d0eb
  40d6d2:	pop    es
  40d6d3:	inc    ebp
  40d6d4:	rol    BYTE PTR [eax-0x9a01fca],1
  40d6da:	fmul   DWORD PTR [eax-0x2f]
  40d6dd:	sub    eax,0xc520041f
  40d6e2:	xchg   edx,eax
  40d6e3:	mov    bl,0xff
  40d6e5:	pop    esp
  40d6e6:	fs add dh,0xbe
  40d6ea:	cmp    al,0xfe
  40d6ec:	enter  0x5907,0x6c
  40d6f0:	push   edx
  40d6f1:	adc    al,0x80
  40d6f3:	xor    bh,0x12
  40d6f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6f7:	jge    0x40d764
  40d6f9:	aam    0xc8
  40d6fb:	pop    ebp
  40d6fc:	pop    ds
  40d6fd:	sub    ebp,edi
  40d6ff:	lahf   
  40d700:	fld    QWORD PTR [esi-0x4d59d09f]
  40d706:	inc    eax
  40d707:	mov    ah,0xb7
  40d709:	rol    DWORD PTR [edx-0x333080c],cl
  40d70f:	sar    DWORD PTR [edx],cl
  40d711:	push   cs
  40d712:	repnz xor DWORD PTR [ecx+ecx*8],ecx
  40d716:	xchg   edi,eax
  40d717:	fldenv [esi]
  40d719:	inc    esi
  40d71a:	dec    esi
  40d71b:	push   0xffffffae
  40d71d:	daa    
  40d71e:	and    ecx,DWORD PTR fs:[ebx-0x79f7d56]
  40d725:	jne    0x40d71e
  40d727:	push   esi
  40d728:	ins    DWORD PTR es:[edi],dx
  40d729:	fbstp  TBYTE PTR [ebx]
  40d72b:	sub    al,0xf2
  40d72d:	test   BYTE PTR [ecx],bl
  40d72f:	fmul   DWORD PTR [eax+0x13ecdf24]
  40d735:	push   eax
  40d736:	pop    ebx
  40d737:	out    dx,al
  40d738:	shl    dl,cl
  40d73a:	mov    esp,0x886b280e
  40d73f:	mov    al,0x9a
  40d741:	fwait
  40d742:	jbe    0x40d6f5
  40d744:	or     DWORD PTR [edi-0x5c1fd7b5],esp
  40d74a:	das    
  40d74b:	dec    edx
  40d74c:	test   BYTE PTR [ecx+eax*2],bl
  40d74f:	test   edx,ecx
  40d751:	outs   dx,DWORD PTR ds:[esi]
  40d752:	retf   
  40d753:	and    eax,0x245c8035
  40d758:	add    al,0xe4
  40d75a:	ins    DWORD PTR es:[edi],dx
  40d75b:	push   ebp
  40d75c:	or     al,0x82
  40d75e:	ja     0x40d708
  40d760:	pop    ds
  40d761:	or     eax,0xb413a689
  40d766:	inc    esp
  40d767:	xchg   edx,eax
  40d768:	jo     0x40d775
  40d76a:	mov    eax,ds:0x5467202
  40d76f:	fisub  WORD PTR [edi]
  40d771:	dec    ebx
  40d772:	jge    0x40d704
  40d774:	rcr    DWORD PTR [eax-0x527b4aa2],cl
  40d77a:	out    dx,eax
  40d77b:	add    cl,BYTE PTR [ebp+edi*4+0x7e]
  40d77f:	nop
  40d780:	out    dx,eax
  40d781:	popa   
  40d782:	push   edi
  40d783:	and    bh,BYTE PTR [ecx-0x48029521]
  40d789:	hlt    
  40d78a:	add    eax,0xdec76043
  40d78f:	push   ecx
  40d790:	jg     0x40d760
  40d792:	or     BYTE PTR ds:0xcc10b506,ah
  40d798:	inc    ecx
  40d799:	and    DWORD PTR [edi],0x6e1727aa
  40d79f:	jg     0x9e094080
  40d7a5:	pop    esp
  40d7a6:	call   0xc46ff7b5
  40d7ab:	les    esi,FWORD PTR [edx]
  40d7ad:	rcr    DWORD PTR [ebx],1
  40d7af:	out    0x83,al
  40d7b1:	push   0x283b5124
  40d7b6:	fwait
  40d7b7:	neg    DWORD PTR [eax]
  40d7b9:	ror    esp,1
  40d7bb:	fmul   DWORD PTR [ebp+0x79]
  40d7be:	fdiv   DWORD PTR [edx-0x33db7586]
  40d7c4:	sbb    bh,BYTE PTR [ebp+0x67]
  40d7c7:	icebp  
  40d7c8:	daa    
  40d7c9:	push   edx
  40d7ca:	pop    esi
  40d7cb:	les    ebp,FWORD PTR [eax+0x1c]
  40d7ce:	popf   
  40d7cf:	stos   DWORD PTR es:[edi],eax
  40d7d0:	or     ebp,DWORD PTR [ebx-0x32871a0d]
  40d7d6:	je     0x40d7e2
  40d7d8:	es dec esi
  40d7da:	es inc esi
  40d7dc:	and    ch,bl
  40d7de:	adc    al,0x56
  40d7e0:	call   0xfd9e:0x63fd9a86
  40d7e7:	add    al,dh
  40d7e9:	stc    
  40d7ea:	adc    edx,DWORD PTR [edi+ebp*8]
  40d7ed:	lods   al,BYTE PTR cs:[esi]
  40d7ef:	pop    es
  40d7f0:	adc    bh,BYTE PTR [eax]
  40d7f2:	xchg   ecx,eax
  40d7f3:	xchg   BYTE PTR [ebp-0xb],cl
  40d7f6:	loop   0x40d807
  40d7f8:	fist   DWORD PTR [eax+0x64]
  40d7fb:	repnz lahf 
  40d7fd:	sub    al,0x9a
  40d7ff:	add    ebx,DWORD PTR [esi]
  40d801:	repz inc ebx
  40d803:	sub    DWORD PTR [edi+0x0],esi
  40d806:	out    dx,eax
  40d807:	das    
  40d808:	dec    ecx
  40d809:	mov    ebp,0xebef2a30
  40d80e:	pop    ebx
  40d80f:	xchg   edx,eax
  40d810:	add    eax,DWORD PTR [eax+0x22a615af]
  40d816:	and    DWORD PTR [esi-0x6b0a7cb0],0x20
  40d81d:	push   edx
  40d81e:	push   0x7221e243
  40d823:	gs daa 
  40d825:	or     ch,BYTE PTR [ecx+0x49edac88]
  40d82b:	aad    0x86
  40d82d:	ror    edx,0x3c
  40d830:	imul   esi,DWORD PTR ds:0x83febb75,0xffffffb7
  40d837:	push   es
  40d838:	lock mov ss,WORD PTR [esi+0x73c87b75]
  40d83f:	xor    edi,DWORD PTR [ebp-0x8f23573]
  40d845:	inc    eax
  40d846:	ins    DWORD PTR es:[edi],dx
  40d847:	or     eax,0xe95a7cb2
  40d84c:	fild   DWORD PTR [esi+edx*2-0x22215290]
  40d853:	out    dx,eax
  40d854:	pmuludq mm2,QWORD PTR [esi+0x52e38b20]
  40d85b:	mov    eax,ss:0x3e65071d
  40d861:	inc    esp
  40d862:	mov    bh,0xf8
  40d864:	mov    bl,0x58
  40d866:	jecxz  0x40d82c
  40d868:	mov    esi,ecx
  40d86a:	dec    eax
  40d86b:	inc    ebp
  40d86c:	repz jecxz 0x40d859
  40d86f:	int3   
  40d870:	dec    edi
  40d871:	pop    ecx
  40d872:	lea    ecx,ds:0xde5e7dc4
  40d878:	das    
  40d879:	fwait
  40d87a:	dec    ecx
  40d87b:	mov    BYTE PTR [ecx+0x76],ch
  40d87e:	jbe    0x40d85d
  40d880:	out    0x33,al
  40d882:	xchg   ebp,eax
  40d883:	push   esp
  40d884:	xor    bl,bl
  40d886:	push   eax
  40d887:	out    0x3f,al
  40d889:	mov    esi,0xb1e3e5cb
  40d88e:	cwde   
  40d88f:	lea    edx,[eax+eax*2+0x27]
  40d893:	xor    bl,bh
  40d895:	pop    eax
  40d896:	ins    DWORD PTR es:[edi],dx
  40d897:	hlt    
  40d898:	lock js 0x40d88a
  40d89b:	sbb    eax,esi
  40d89d:	jle    0x40d87a
  40d89f:	test   BYTE PTR [esi+0x7],bh
  40d8a2:	fld    TBYTE PTR [eax-0xf]
  40d8a5:	adc    DWORD PTR [edi],ebp
  40d8a7:	fnstenv ds:0xa9d87b8d
  40d8ad:	push   ds
  40d8ae:	clc    
  40d8af:	test   eax,0xc9711e2a
  40d8b4:	mov    DWORD PTR [edx+0x75],esi
  40d8b7:	les    ebp,FWORD PTR [ebp-0x5b]
  40d8ba:	mov    ds:0xc986bdb5,eax
  40d8bf:	sub    eax,0xbfd88489
  40d8c4:	enter  0xa8fe,0x61
  40d8c8:	or     bl,cl
  40d8ca:	js     0x40d8e5
  40d8cc:	test   eax,0xa08fa79d
  40d8d1:	fdivr  DWORD PTR [edi]
  40d8d3:	leave  
  40d8d4:	sub    BYTE PTR [ebx+edi*2+0x1c],bh
  40d8d8:	test   DWORD PTR [esi+0x59c0543b],esi
  40d8de:	bnd ja 0x40d8e8
  40d8e1:	cmp    eax,DWORD PTR [esi+0x6a]
  40d8e4:	gs ja  0x40d933
  40d8e7:	add    DWORD PTR [eax+0x59],edi
  40d8ea:	loopne 0x40d916
  40d8ec:	ins    BYTE PTR es:[edi],dx
  40d8ed:	fsubrp st(7),st
  40d8ef:	int3   
  40d8f0:	pop    ss
  40d8f1:	in     eax,dx
  40d8f2:	mov    ds:0x4efad375,eax
  40d8f7:	jae    0x40d8c0
  40d8f9:	cmp    eax,0xeaceaa17
  40d8fe:	in     eax,dx
  40d8ff:	sub    edi,ecx
  40d901:	mov    bl,0x69
  40d903:	int    0xe
  40d905:	cs dec edi
  40d907:	adc    esp,DWORD PTR [esi]
  40d909:	sbb    esi,edx
  40d90b:	aas    
  40d90c:	jmp    0xcd98:0x2a493da2
  40d913:	test   BYTE PTR [eax],bl
  40d915:	push   ss
  40d916:	inc    ecx
  40d917:	test   al,0x11
  40d919:	sbb    DWORD PTR [edx+edi*8],0xb
  40d91d:	mov    ah,0xf9
  40d91f:	sub    al,0xa7
  40d921:	sbb    al,0x1d
  40d923:	mov    dl,0x7d
  40d925:	push   0xffffffa8
  40d927:	sbb    DWORD PTR [esi+0x61ef4994],edx
  40d92d:	xor    BYTE PTR [ebx+0x38d45a71],ch
  40d933:	popa   
  40d934:	push   0xe28e5512
  40d939:	and    al,BYTE PTR [ebp+0x63]
  40d93c:	fnsave [esi]
  40d93e:	xor    eax,0xd8c5597e
  40d943:	inc    edi
  40d944:	mov    ds:0x3c425c1b,al
  40d949:	shr    DWORD PTR [ebx],cl
  40d94b:	dec    esi
  40d94c:	xor    bh,BYTE PTR [ebx]
  40d94e:	and    ebx,DWORD PTR [eax+ebx*4-0x3]
  40d952:	hlt    
  40d953:	aaa    
  40d954:	(bad)  
  40d955:	je     0x40d93b
  40d957:	pusha  
  40d958:	pop    ebp
  40d959:	inc    eax
  40d95a:	pop    ebp
  40d95b:	(bad)  
  40d95c:	adc    ecx,ebx
  40d95e:	aaa    
  40d95f:	aas    
  40d960:	push   ss
  40d961:	push   ss
  40d962:	jmp    0x365c295c
  40d967:	aaa    
  40d968:	pop    ebp
  40d969:	or     ah,ah
  40d96b:	sub    BYTE PTR [edx-0x588bf406],0xc6
  40d972:	clc    
  40d973:	std    
  40d974:	dec    ebp
  40d975:	and    al,0x4
  40d977:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d978:	sub    eax,0x57684c7c
  40d97d:	jmp    0x40d9a8
  40d97f:	jle    0x40d9a5
  40d981:	cwde   
  40d982:	loopne 0x40d92f
  40d984:	xor    BYTE PTR [eax],0x7
  40d987:	iret   
  40d988:	pop    es
  40d989:	pop    es
  40d98a:	sub    DWORD PTR [esi-0x4e],ecx
  40d98d:	pop    eax
  40d98e:	sub    ebx,DWORD PTR [edx+edx*1+0x0]
  40d992:	pop    edx
  40d993:	and    ecx,DWORD PTR [ecx+ebx*1-0xd]
  40d997:	(bad)  [edx+0x2d1ad692]
  40d99d:	mov    edx,0xa336bcc4
  40d9a2:	dec    ebx
  40d9a3:	sub    ecx,DWORD PTR [ecx+0x3c]
  40d9a6:	les    ebp,FWORD PTR ds:0x79544942
  40d9ac:	popf   
  40d9ad:	cld    
  40d9ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9af:	outs   dx,DWORD PTR ds:[esi]
  40d9b0:	cmp    BYTE PTR [edi],ah
  40d9b2:	jmp    esi
  40d9b4:	pop    es
  40d9b5:	mov    edx,0xf0b67f39
  40d9ba:	push   es
  40d9bb:	xor    cl,ah
  40d9bd:	push   0x43
  40d9bf:	cmp    dh,BYTE PTR [eax-0xafe94b2]
  40d9c5:	enter  0x5d2a,0xa4
  40d9c9:	or     al,0xaf
  40d9cb:	nop
  40d9cc:	mov    al,ds:0xc46f3d86
  40d9d1:	sub    DWORD PTR [ebx],edx
  40d9d3:	outs   dx,BYTE PTR ds:[esi]
  40d9d4:	mov    DWORD PTR [ebx],esi
  40d9d6:	add    bl,BYTE PTR [edx]
  40d9d8:	jl     0x40d979
  40d9da:	cmp    al,bh
  40d9dc:	mov    al,0x17
  40d9de:	pop    esp
  40d9df:	push   esp
  40d9e0:	ins    DWORD PTR es:[edi],dx
  40d9e1:	(bad)
  40d9e4:	fs jno 0x40da1b
  40d9e7:	add    ecx,DWORD PTR [esp+esi*4]
  40d9ea:	cmp    ebx,DWORD PTR [eax+0x1d145fb8]
  40d9f0:	mov    al,ds:0x8bd38350
  40d9f5:	fcmovb st,st(7)
  40d9f7:	test   BYTE PTR [esi],ah
  40d9f9:	out    0x25,eax
  40d9fb:	mov    dl,0x2d
  40d9fd:	sti    
  40d9fe:	sbb    al,0x4b
  40da00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da01:	push   cs
  40da02:	aad    0xbd
  40da04:	and    BYTE PTR gs:[esi],0x76
  40da08:	push   es
  40da09:	jle    0x40d9fc
  40da0b:	sub    al,0x4d
  40da0d:	mov    eax,ds:0xe5e17472
  40da12:	cmp    al,0xb0
  40da14:	popa   
  40da15:	fwait
  40da16:	adc    BYTE PTR [esi+edx*2-0x95f2404],dl
  40da1d:	jle    0x40da3c
  40da1f:	lahf   
  40da20:	xor    al,0x5a
  40da22:	jp     0x40d9e5
  40da24:	loop   0x40da98
  40da26:	loopne 0x40da8b
  40da28:	jnp    0x40da7e
  40da2a:	test   al,0xdc
  40da2c:	lock jg 0x40d9e7
  40da2f:	dec    ecx
  40da30:	lods   al,BYTE PTR ds:[esi]
  40da31:	xor    eax,0xc4bd443e
  40da36:	adc    bh,ah
  40da38:	lods   eax,DWORD PTR ds:[esi]
  40da39:	xchg   esp,eax
  40da3a:	retf   
  40da3b:	hlt    
  40da3c:	xchg   ecx,eax
  40da3d:	lds    esp,FWORD PTR [esp+edx*1-0x5]
  40da41:	stos   DWORD PTR es:[edi],eax
  40da42:	repnz rcl edx,0xec
  40da46:	mov    dh,0x93
  40da48:	iret   
  40da49:	sbb    al,0x82
  40da4b:	ins    BYTE PTR es:[edi],dx
  40da4c:	aaa    
  40da4d:	and    al,0xf1
  40da4f:	imul   ebp,DWORD PTR [esi+0x2d],0xffffffde
  40da53:	push   ecx
  40da54:	xor    cl,BYTE PTR [ebx+0xcb8e75b]
  40da5a:	out    0x25,al
  40da5c:	into   
  40da5d:	dec    edx
  40da5e:	add    dl,bl
  40da60:	mov    ah,0x7e
  40da62:	pop    edx
  40da63:	ja     0x40dadc
  40da65:	(bad)  
  40da66:	retf   
  40da67:	jle    0x40d9f6
  40da69:	cmp    DWORD PTR [ebp-0x307a9278],edi
  40da6f:	aaa    
  40da70:	adc    ebp,DWORD PTR [ecx-0x4a3eebdd]
  40da76:	mov    al,ds:0xf48e55e9
  40da7b:	imul   ebp,DWORD PTR [edi],0xa2516462
  40da81:	out    dx,eax
  40da82:	inc    DWORD PTR [ecx-0x1018fab7]
  40da88:	pop    ebx
  40da89:	adc    al,0x72
  40da8b:	mov    eax,ds:0x13dca9d3
  40da90:	fld    QWORD PTR [eax+eiz*8]
  40da93:	jns    0x40dac6
  40da95:	xchg   ebx,eax
  40da96:	daa    
  40da97:	shl    DWORD PTR [ebp+0x62],0x9c
  40da9b:	jb     0x40da87
  40da9d:	pop    ss
  40da9e:	pop    edi
  40da9f:	ret    0x2dae
  40daa2:	inc    ecx
  40daa3:	shr    BYTE PTR [eax-0x56cc99ab],0xeb
  40daaa:	mov    dl,0xd5
  40daac:	xor    dh,BYTE PTR [edx-0x12]
  40daaf:	std    
  40dab0:	cmp    DWORD PTR [esi+eiz*1+0x53],ebp
  40dab4:	lods   eax,DWORD PTR ds:[esi]
  40dab5:	mov    edi,0x6d2ba54a
  40daba:	mov    edx,0x92b04f9c
  40dabf:	lahf   
  40dac0:	sbb    BYTE PTR [esi+0x5089b128],bh
  40dac6:	ret    0xe4d
  40dac9:	xchg   esp,eax
  40daca:	push   ebp
  40dacb:	adc    ah,BYTE PTR [ebp-0x3d]
  40dace:	sub    ebp,DWORD PTR [esi-0x6eaebe79]
  40dad4:	fld    st(3)
  40dad6:	add    al,0x3f
  40dad8:	adc    bl,BYTE PTR [esi+0x5186ee18]
  40dade:	cmp    BYTE PTR [ebx+eax*8-0xd2c285d],ah
  40dae5:	mov    al,cs:0x2793921a
  40daeb:	shr    al,0xa8
  40daee:	jmp    0xdb05:0x6bc133fd
  40daf5:	outs   dx,BYTE PTR ds:[esi]
  40daf6:	xchg   esi,eax
  40daf7:	retf   
  40daf8:	mov    ebx,0x36d37244
  40dafd:	jb     0x40db2e
  40daff:	pop    edi
  40db00:	imul   esi,DWORD PTR [eax],0xffffffa0
  40db03:	paddsw mm3,mm3
  40db06:	cmp    al,0x27
  40db08:	je     0x40dad7
  40db0a:	iret   
  40db0b:	shr    al,0x6a
  40db0e:	push   ecx
  40db0f:	dec    edx
  40db10:	cmp    ah,BYTE PTR [edi+0x462ca79b]
  40db16:	ret    
  40db17:	ja     0x40db6c
  40db19:	call   0x5f8120d6
  40db1e:	mov    ecx,0x386a9c0
  40db23:	jbe    0x40db49
  40db25:	pop    esi
  40db26:	and    DWORD PTR [esi-0xf],0xffffffd4
  40db2a:	fadd   st(4),st
  40db2c:	cmp    esi,DWORD PTR [ebx-0x380288db]
  40db32:	popa   
  40db33:	scas   eax,DWORD PTR es:[edi]
  40db34:	loope  0x40dadc
  40db36:	call   0x41d0:0x689dfdaf
  40db3d:	and    al,0xa0
  40db3f:	cmp    eax,0xdaae622c
  40db44:	jecxz  0x40db30
  40db46:	add    ah,bl
  40db48:	lock jnp 0x40dbbb
  40db4b:	bound  edx,QWORD PTR [eax-0x1364f6c4]
  40db51:	(bad)  
  40db52:	(bad)  
  40db53:	mov    ah,0x8a
  40db55:	test   ebx,eax
  40db57:	inc    edx
  40db58:	pop    edi
  40db59:	adc    DWORD PTR [esi],ebx
  40db5b:	push   ecx
  40db5c:	adc    BYTE PTR [esp+ebx*8+0x408539fb],0xfb
  40db64:	push   esi
  40db65:	or     eax,0x1d49eedf
  40db6a:	xor    esp,DWORD PTR ds:0x7c7303e3
  40db70:	jns    0x40dbd6
  40db72:	xchg   ebx,eax
  40db73:	jle    0x40db45
  40db75:	push   0x95e8129a
  40db7a:	lock jno 0x40db46
  40db7d:	inc    eax
  40db7e:	push   0xfc2aa724
  40db83:	ret    
  40db84:	jecxz  0x40db3b
  40db86:	sub    BYTE PTR [esi-0x8c09baf],0xab
  40db8d:	inc    ecx
  40db8e:	cmp    eax,0xee9ee1db
  40db93:	and    eax,0x1a310da0
  40db98:	add    DWORD PTR [ebp+0x32],ebx
  40db9b:	fstp   TBYTE PTR [esi]
  40db9d:	push   0x38
  40db9f:	test   DWORD PTR [eax+0x65],eax
  40dba2:	fisttp WORD PTR [ebx]
  40dba4:	jmp    0xa909:0x52fa9643
  40dbab:	inc    esi
  40dbac:	(bad)  
  40dbad:	push   esi
  40dbae:	mov    eax,0x86e1cecf
  40dbb3:	inc    edi
  40dbb4:	mov    al,ds:0x377d9fcb
  40dbb9:	sahf   
  40dbba:	adc    bh,BYTE PTR [eax-0x537e73ee]
  40dbc0:	pushf  
  40dbc1:	mov    esp,0x36b022fa
  40dbc6:	call   0x809c:0x3d34849b
  40dbcd:	mov    bh,0xf4
  40dbcf:	in     eax,0xc9
  40dbd1:	rcr    DWORD PTR [ecx+0x23],1
  40dbd4:	fs adc bl,dl
  40dbd7:	and    esp,DWORD PTR [ebp+0x15d4d1f6]
  40dbdd:	jb     0x40db7a
  40dbdf:	loop   0x40dbc6
  40dbe1:	xchg   edi,eax
  40dbe2:	mov    edi,0xfa6e2049
  40dbe7:	adc    al,0x21
  40dbe9:	jbe    0x40dbc7
  40dbeb:	loop   0x40dc6c
  40dbed:	xchg   esp,eax
  40dbee:	mov    esp,0x61dd689a
  40dbf3:	cmp    eax,0x3a351b43
  40dbf8:	loop   0x40dc18
  40dbfa:	pop    ds
  40dbfb:	hlt    
  40dbfc:	mov    eax,0x63b17ba2
  40dc01:	mov    bh,BYTE PTR [edx-0x24]
  40dc04:	or     BYTE PTR [edx+0x3b83545a],ah
  40dc0a:	mov    cs,WORD PTR [eax-0x147a297d]
  40dc10:	cmc    
  40dc11:	mov    edi,0x16e496c2
  40dc16:	mov    al,0xf4
  40dc18:	cmp    al,0xc1
  40dc1a:	aam    0x7f
  40dc1c:	mov    esp,0x8fd2e452
  40dc21:	out    0xd3,al
  40dc23:	cwde   
  40dc24:	dec    ecx
  40dc25:	stos   BYTE PTR es:[edi],al
  40dc26:	bound  ebp,QWORD PTR [esi-0x3c]
  40dc29:	and    BYTE PTR [ebx-0x73],al
  40dc2c:	sbb    eax,0xb277e693
  40dc31:	mov    ebx,0x846da9f2
  40dc36:	inc    edi
  40dc37:	popa   
  40dc38:	adc    BYTE PTR [edi+0x3f],ch
  40dc3b:	rcl    BYTE PTR [ebx-0x2ae972ad],cl
  40dc41:	loop   0x40dc77
  40dc43:	outs   dx,BYTE PTR ds:[si]
  40dc45:	xchg   edi,eax
  40dc46:	mov    edx,0x23144cc7
  40dc4b:	je     0x40dca6
  40dc4d:	inc    ebx
  40dc4e:	cmp    edx,ebp
  40dc50:	cmp    edi,DWORD PTR [ebx*8+0x3834c777]
  40dc57:	lds    ebx,FWORD PTR [edi+0xcc3b96d]
  40dc5d:	add    ecx,ebp
  40dc5f:	ror    BYTE PTR [edx+ecx*4],cl
  40dc62:	mov    dh,0x64
  40dc64:	mov    bh,0x96
  40dc66:	mov    ebp,0xbc82fad0
  40dc6b:	loope  0x40dccd
  40dc6d:	cmp    bh,BYTE PTR [ecx+eiz*1]
  40dc70:	jbe    0x40dca6
  40dc72:	push   edi
  40dc73:	mov    dh,BYTE PTR [edx-0x6c382968]
  40dc79:	mov    BYTE PTR [ebx],dl
  40dc7b:	sub    cl,BYTE PTR [ecx+0x1b9f19]
  40dc81:	mov    al,ds:0x58af1629
  40dc86:	dec    edx
  40dc87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc88:	scas   eax,DWORD PTR es:[edi]
  40dc89:	push   ds
  40dc8a:	jle    0x40dc50
  40dc8c:	sub    ebp,DWORD PTR [eax+0x23]
  40dc8f:	mov    al,0x33
  40dc91:	mov    ds,WORD PTR [eax-0x49]
  40dc94:	inc    esi
  40dc95:	clc    
  40dc96:	imul   ebx,DWORD PTR [edx+0x64e003b7],0x4ac63595
  40dca0:	mov    ch,0xd9
  40dca2:	sub    BYTE PTR [esp+ebp*8+0x42],dl
  40dca6:	push   esi
  40dca7:	add    ecx,DWORD PTR [ecx-0x7fcbdc44]
  40dcad:	push   edi
  40dcae:	(bad)
  40dcb1:	scas   al,BYTE PTR es:[edi]
  40dcb2:	or     eax,0x3a384e93
  40dcb7:	daa    
  40dcb8:	rol    bl,1
  40dcba:	or     DWORD PTR [esi],ebp
  40dcbc:	es cwde 
  40dcbe:	xchg   edi,eax
  40dcbf:	adc    al,0xcc
  40dcc1:	arpl   WORD PTR [ebx+edi*2],sp
  40dcc4:	addr16 pop ecx
  40dcc6:	or     DWORD PTR [ebp+ebx*4-0x63],ebx
  40dcca:	push   ss
  40dccb:	push   cs
  40dccc:	out    dx,eax
  40dccd:	cli    
  40dcce:	push   es
  40dccf:	int    0xbf
  40dcd1:	and    esi,eax
  40dcd3:	imul   ebp,esi,0x44764070
  40dcd9:	mov    bl,0x28
  40dcdb:	push   cs
  40dcdc:	jecxz  0x40dd48
  40dcde:	das    
  40dcdf:	push   edx
  40dce0:	iret   
  40dce1:	mov    ?,edi
  40dce3:	or     al,0x73
  40dce5:	xchg   DWORD PTR [edx],esi
  40dce7:	inc    ebx
  40dce8:	adc    DWORD PTR [ecx+0xc],edx
  40dceb:	or     edi,eax
  40dced:	jl     0x40dd33
  40dcef:	cmp    eax,0x752c729e
  40dcf4:	mov    edi,0xbc0c6185
  40dcf9:	jo     0x40dc95
  40dcfb:	cwde   
  40dcfc:	sbb    DWORD PTR [edi-0x131713ee],ebx
  40dd02:	aas    
  40dd03:	and    dl,BYTE PTR [eax-0x5979f594]
  40dd09:	inc    ebx
  40dd0a:	sub    BYTE PTR cs:[edx+0x3f],ch
  40dd0e:	pop    ebp
  40dd0f:	je     0x40dd26
  40dd11:	dec    esi
  40dd12:	adc    dl,BYTE PTR [ecx-0x6b]
  40dd15:	test   ebx,0x5ecdd5e6
  40dd1b:	cmp    eax,0x506ccf9b
  40dd20:	pop    esi
  40dd21:	mov    esp,0x930315ca
  40dd26:	ins    DWORD PTR es:[edi],dx
  40dd27:	add    dl,al
  40dd29:	push   0x12
  40dd2b:	mov    al,0xaa
  40dd2d:	jb     0x40dd54
  40dd2f:	xchg   BYTE PTR [esi],ah
  40dd31:	mov    edi,0x3c6efd6e
  40dd36:	xor    dh,BYTE PTR [ebx*2-0x2aa60f7d]
  40dd3d:	call   0xddc1:0x2debdcf0
  40dd44:	popf   
  40dd45:	retf   0x4fe7
  40dd48:	adc    DWORD PTR [edi-0x22],ebx
  40dd4b:	scas   eax,DWORD PTR es:[edi]
  40dd4c:	mov    ebx,0xeb4b0753
  40dd51:	push   ss
  40dd52:	aam    0x4c
  40dd54:	addr16 gs fadd st(1),st
  40dd58:	jbe    0x40dd9e
  40dd5a:	fs and eax,0xafdad5a1
  40dd60:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40dd62:	dec    esp
  40dd63:	xchg   esp,eax
  40dd64:	cmp    edx,DWORD PTR [esp+edx*2+0x3b991fa4]
  40dd6b:	aam    0x5
  40dd6d:	mov    BYTE PTR [ebp-0x9],ah
  40dd70:	stos   BYTE PTR es:[edi],al
  40dd71:	sar    BYTE PTR [di-0x6e94],1
  40dd76:	add    eax,0xb5d8e62e
  40dd7b:	in     al,0x62
  40dd7d:	or     bl,BYTE PTR [ebx+0x79196764]
  40dd83:	(bad)  
  40dd84:	pushf  
  40dd85:	sub    al,0x93
  40dd87:	inc    esp
  40dd88:	enter  0xdf44,0xfc
  40dd8c:	test   al,0x8f
  40dd8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd8f:	popa   
  40dd90:	xor    eax,0x3c9f6667
  40dd95:	inc    esi
  40dd96:	xchg   edx,eax
  40dd97:	fadd   DWORD PTR [edi+0x31071bdc]
  40dd9d:	cmp    ecx,DWORD PTR ds:0x4a11e0b2
  40dda3:	pop    es
  40dda4:	pop    ebx
  40dda5:	jne    0x40de1b
  40dda7:	inc    esi
  40dda8:	scas   eax,DWORD PTR es:[edi]
  40dda9:	shl    BYTE PTR [ebx],cl
  40ddab:	retf   0x760a
  40ddae:	les    ebx,FWORD PTR [eax]
  40ddb0:	dec    ecx
  40ddb1:	mul    BYTE PTR ds:0x5757d786
  40ddb7:	dec    ebp
  40ddb8:	adc    bl,ch
  40ddba:	loop   0x40dd73
  40ddbc:	fstp   DWORD PTR [edi]
  40ddbe:	add    DWORD PTR [ecx-0x66],edx
  40ddc1:	fwait
  40ddc2:	jo     0x40de1e
  40ddc4:	and    eax,DWORD PTR [ebx-0x1a81177b]
  40ddca:	arpl   cx,bx
  40ddcc:	mov    ebx,0xb7bbe7a3
  40ddd1:	scas   al,BYTE PTR es:[edi]
  40ddd2:	mov    bl,0xa0
  40ddd4:	loop   0x40ddcf
  40ddd6:	es call 0xdd69230b
  40dddc:	cli    
  40dddd:	sbb    ebx,DWORD PTR [eax-0x7]
  40dde0:	dec    edx
  40dde1:	jns    0x40de5d
  40dde3:	ror    BYTE PTR [esi-0x58b3fc90],1
  40dde9:	mov    bh,0x2f
  40ddeb:	in     al,0x6e
  40dded:	leave  
  40ddee:	shr    DWORD PTR [ecx-0x28921d0e],cl
  40ddf4:	icebp  
  40ddf5:	mov    edx,0x7ca7aba2
  40ddfa:	jbe    0x40de2e
  40ddfc:	pop    edi
  40ddfd:	mov    eax,0xb8c89ea8
  40de02:	mul    DWORD PTR [eax+0x7b1b54cd]
  40de08:	fsubr  DWORD PTR [edi-0x30]
  40de0b:	xor    BYTE PTR [ecx+0x56],al
  40de0e:	das    
  40de0f:	inc    esp
  40de10:	fwait
  40de11:	jbe    0x40de23
  40de13:	add    edx,DWORD PTR [eax]
  40de15:	mov    esp,0xc8ee5dd0
  40de1a:	(bad)  
  40de1b:	aas    
  40de1c:	pop    edx
  40de1d:	jmp    0x40dda9
  40de1f:	loop   0x40ddc2
  40de21:	es nop
  40de23:	repnz mov al,cs:0x141d7ffc
  40de2a:	retf   
  40de2b:	dec    eax
  40de2c:	xor    al,0xd0
  40de2e:	fwait
  40de2f:	mov    edx,0x14219d67
  40de34:	inc    edi
  40de35:	mov    eax,0x16aef812
  40de3a:	lds    edi,FWORD PTR [ebp-0x52]
  40de3d:	lods   eax,DWORD PTR ds:[esi]
  40de3e:	add    ecx,DWORD PTR [ecx]
  40de40:	mov    ecx,0x4b76a079
  40de45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de46:	mov    edx,0x429aa2a
  40de4b:	add    bl,BYTE PTR [eax]
  40de4d:	xchg   edi,eax
  40de4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de4f:	inc    ebp
  40de50:	repz pop ds
  40de52:	js     0x40dde5
  40de54:	popa   
  40de55:	xor    eax,0xe03d6acc
  40de5a:	mov    ah,0x5b
  40de5c:	mov    esp,0xcf0880bc
  40de61:	pop    ebx
  40de62:	iret   
  40de63:	mov    eax,ds:0x7b124e3a
  40de68:	(bad)  
  40de69:	scas   eax,DWORD PTR es:[edi]
  40de6a:	test   eax,0xa34a13ce
  40de6f:	mov    eax,0x8ec72c68
  40de74:	outs   dx,DWORD PTR ds:[esi]
  40de75:	leave  
  40de76:	fs push esp
  40de78:	sahf   
  40de79:	adc    BYTE PTR [edx],dl
  40de7b:	test   al,0xbf
  40de7d:	ret    0x4487
  40de80:	add    ecx,edx
  40de82:	jl     0x40ded6
  40de84:	add    BYTE PTR [ecx],bh
  40de86:	dec    ecx
  40de87:	repz pop ds
  40de89:	test   eax,0xb8cac16c
  40de8e:	pop    edx
  40de8f:	push   ds
  40de90:	adc    esp,edi
  40de92:	push   es
  40de93:	repz sbb ebx,DWORD PTR [edx+0x30]
  40de97:	dec    ebx
  40de98:	xchg   ah,al
  40de9a:	push   esi
  40de9b:	rcr    cl,1
  40de9d:	int    0x12
  40de9f:	pop    ecx
  40dea0:	mov    eax,ds:0xb27fe2dc
  40dea5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dea6:	call   0x3ca3:0xc8d51eda
  40dead:	addr16 pop es
  40deaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40deb0:	shl    DWORD PTR [ecx],cl
  40deb2:	mov    al,0xb7
  40deb4:	jl     0x40def7
  40deb6:	(bad)  [eax+0x2fb05ec6]
  40debc:	xchg   ecx,eax
  40debd:	add    DWORD PTR [ebx+0xc],esi
  40dec0:	aaa    
  40dec1:	fdiv   QWORD PTR [ebp+0x61cb7bd5]
  40dec7:	or     eax,0xb06a7a2c
  40decc:	cmp    DWORD PTR [edx+esi*4],edx
  40decf:	lods   al,BYTE PTR ds:[esi]
  40ded0:	cli    
  40ded1:	jg     0x40df1a
  40ded3:	pop    ds
  40ded4:	and    BYTE PTR [edi],ah
  40ded6:	shl    BYTE PTR [esi+eax*1-0x6],0xcc
  40dedb:	aad    0x41
  40dedd:	adc    eax,0xf6eb5985
  40dee2:	and    bl,BYTE PTR [eax-0x2f7e3a59]
  40dee8:	scas   al,BYTE PTR es:[edi]
  40dee9:	cdq    
  40deea:	pop    esp
  40deeb:	outs   dx,DWORD PTR ds:[esi]
  40deec:	dec    edi
  40deed:	fld    TBYTE PTR [ebp+0x70a32dc1]
  40def3:	sbb    BYTE PTR [ebp+0x13],bh
  40def6:	aad    0x99
  40def8:	cdq    
  40def9:	or     ecx,ecx
  40defb:	pop    es
  40defc:	repz pop esp
  40defe:	and    DWORD PTR ds:0x6a7e8d69,ebp
  40df04:	dec    edx
  40df05:	sub    BYTE PTR [edi+0x67],cl
  40df08:	adc    al,0x1a
  40df0a:	(bad)  
  40df0b:	in     al,dx
  40df0c:	out    0x2b,al
  40df0e:	sbb    al,0x85
  40df10:	push   ss
  40df11:	mov    dl,0x94
  40df13:	inc    ecx
  40df14:	xchg   edx,eax
  40df15:	inc    edi
  40df16:	cld    
  40df17:	cmp    BYTE PTR [edi],al
  40df19:	cmp    BYTE PTR [ecx-0x7275ad67],al
  40df1f:	sbb    DWORD PTR [ebp-0x41],ebp
  40df22:	sub    BYTE PTR [edx+0x47],al
  40df25:	fdiv   DWORD PTR [eax]
  40df27:	nop
  40df28:	stos   DWORD PTR es:[edi],eax
  40df29:	jns    0x40df3f
  40df2b:	sbb    BYTE PTR [eax],al
  40df2d:	mov    edx,0xa4a7dba6
  40df32:	fcmovu st,st(6)
  40df34:	fild   DWORD PTR [ebx]
  40df36:	les    esp,FWORD PTR [edx]
  40df38:	dec    edx
  40df39:	cmp    ebp,esp
  40df3b:	push   es
  40df3c:	jle    0x40df2c
  40df3e:	add    al,0x2e
  40df40:	(bad)  
  40df41:	xor    al,0xef
  40df43:	ss loope 0x40df1b
  40df46:	or     BYTE PTR [ecx],al
  40df48:	arpl   WORD PTR [edi-0xd3928e8],sp
  40df4e:	js     0x40df7d
  40df50:	mov    ?,esi
  40df52:	(bad)  
  40df53:	(bad)  
  40df54:	fst    DWORD PTR [ecx+0x52122cf9]
  40df5a:	dec    ecx
  40df5b:	test   BYTE PTR [edi],dl
  40df5d:	sbb    BYTE PTR [ecx],0x9
  40df60:	stos   BYTE PTR es:[edi],al
  40df61:	aad    0xc7
  40df63:	or     eax,DWORD PTR [ecx]
  40df65:	addr16 gs mov ebx,0xd2a40d9a
  40df6c:	mov    ds:0x6253e453,eax
  40df71:	jp     0x40df4f
  40df73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df74:	sub    bh,al
  40df76:	or     al,0xda
  40df78:	repz and dh,dh
  40df7b:	shr    ch,cl
  40df7d:	or     ebp,esp
  40df7f:	fcomp  DWORD PTR [edi]
  40df81:	retf   
  40df82:	into   
  40df83:	jle    0x40df24
  40df85:	xchg   edi,eax
  40df86:	je     0x40df52
  40df88:	push   ds
  40df89:	rcl    dl,1
  40df8b:	int3   
  40df8c:	hlt    
  40df8d:	mov    WORD PTR [eax+0x29],?
  40df90:	jl     0x40df30
  40df92:	jge    0x2debce03
  40df98:	pop    eax
  40df99:	sti    
  40df9a:	cdq    
  40df9b:	das    
  40df9c:	sar    DWORD PTR [edx],cl
  40df9e:	loope  0x40df98
  40dfa0:	sub    eax,ebp
  40dfa2:	inc    ebp
  40dfa3:	fwait
  40dfa4:	enter  0x33c1,0x95
  40dfa8:	ret    
  40dfa9:	mov    ?,eax
  40dfab:	out    dx,eax
  40dfac:	mov    esi,0xcdf6f59e
  40dfb1:	sti    
  40dfb2:	outs   dx,BYTE PTR ds:[esi]
  40dfb3:	fidivr DWORD PTR [ebp+0x5e]
  40dfb6:	or     dl,BYTE PTR [ecx]
  40dfb8:	or     BYTE PTR [ebx],al
  40dfba:	outs   dx,DWORD PTR ds:[esi]
  40dfbb:	dec    ebp
  40dfbc:	dec    edx
  40dfbd:	sub    BYTE PTR [ebx-0x6e],al
  40dfc0:	xor    al,0xec
  40dfc2:	or     eax,DWORD PTR [eax]
  40dfc4:	test   al,0x3e
  40dfc6:	mov    esp,0x68c29ffe
  40dfcb:	push   es
  40dfcc:	dec    edi
  40dfcd:	fidiv  WORD PTR [edi]
  40dfcf:	and    al,0xda
  40dfd1:	xor    ah,BYTE PTR [esi]
  40dfd3:	jno    0x40df9a
  40dfd5:	pop    ebp
  40dfd6:	out    dx,eax
  40dfd7:	jge    0x40dfbe
  40dfd9:	jge    0x40dfb5
  40dfdb:	daa    
  40dfdc:	sbb    DWORD PTR [edi+0x6ddd9bd9],0xffffffe6
  40dfe3:	outs   dx,DWORD PTR ds:[esi]
  40dfe4:	call   0xaa22a77
  40dfe9:	setae  al
  40dfec:	jae    0x40dfe7
  40dfee:	sbb    BYTE PTR [ebp-0x35],ch
  40dff1:	add    ah,BYTE PTR [ebx+ebx*4+0x3641265]
  40dff8:	xchg   ebx,eax
  40dff9:	das    
  40dffa:	push   ebp
  40dffb:	into   
  40dffc:	mov    eax,0xf02b52ed
  40e001:	dec    edi
  40e002:	xlat   BYTE PTR ds:[ebx]
  40e003:	in     al,dx
  40e004:	adc    dl,ah
  40e006:	imul   ecx,ecx,0xc8060a94
  40e00c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e00d:	or     eax,0x8a9e8ff
  40e012:	and    BYTE PTR [ebp-0x3d],al
  40e015:	out    dx,eax
  40e016:	adc    cl,BYTE PTR [ebp+0x58ab9a0c]
  40e01c:	out    dx,eax
  40e01d:	sub    eax,0x3c7f09b2
  40e022:	sti    
  40e023:	inc    esp
  40e024:	push   es
  40e025:	mov    esi,DWORD PTR [ebx]
  40e027:	adc    al,0x26
  40e029:	xchg   BYTE PTR [ecx-0x88c08c4],dl
  40e02f:	ins    BYTE PTR es:[edi],dx
  40e030:	xchg   DWORD PTR [edx-0x64],esp
  40e033:	mov    bl,0x57
  40e035:	sbb    al,0x2b
  40e037:	daa    
  40e038:	in     eax,dx
  40e039:	inc    edx
  40e03a:	cmp    al,0x6d
  40e03c:	sti    
  40e03d:	out    0xa7,al
  40e03f:	rol    BYTE PTR [edx],1
  40e041:	inc    ebp
  40e042:	pop    ecx
  40e043:	add    eax,0xa837b3f7
  40e048:	or     DWORD PTR gs:[ebx-0x7a2a4368],edx
  40e04f:	cmc    
  40e050:	test   BYTE PTR [edx+eax*8-0x6],bh
  40e054:	jl     0x40e086
  40e056:	and    cl,BYTE PTR [eax]
  40e058:	adc    eax,0xf5bd63d7
  40e05d:	enter  0xf42,0x6c
  40e061:	sahf   
  40e062:	push   edi
  40e063:	push   edi
  40e064:	xchg   BYTE PTR [edi+0x59],ah
  40e067:	loope  0x40e058
  40e069:	std    
  40e06a:	scas   al,BYTE PTR es:[edi]
  40e06b:	daa    
  40e06c:	mov    dh,0xde
  40e06e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e06f:	cli    
  40e070:	jle    0x40e062
  40e072:	jns    0x40e014
  40e074:	pop    ecx
  40e075:	(bad)  
  40e076:	pop    ebx
  40e077:	push   0x41
  40e079:	fild   DWORD PTR [esi-0x3b59c206]
  40e07f:	dec    edi
  40e080:	arpl   WORD PTR [ecx-0x3e],sp
  40e083:	retf   0x8396
  40e086:	imul   edi,esp,0x3e
  40e089:	pop    ecx
  40e08a:	mov    cl,0x15
  40e08c:	jecxz  0x40e0f4
  40e08e:	ficomp WORD PTR [ebp+0x7d]
  40e091:	lahf   
  40e092:	or     ebp,ebx
  40e094:	imul   DWORD PTR [bx+di-0x6f72]
  40e099:	push   eax
  40e09a:	(bad)  
  40e09b:	outs   dx,BYTE PTR ds:[esi]
  40e09c:	repnz add al,0x62
  40e09f:	add    cl,dl
  40e0a1:	jns    0x40e034
  40e0a3:	mov    fs,WORD PTR [edx+0x5cdc3c5d]
  40e0a9:	dec    esp
  40e0aa:	or     al,0xae
  40e0ac:	jo     0x40e037
  40e0ae:	jge    0x40e044
  40e0b0:	inc    esi
  40e0b1:	mov    dh,0xcf
  40e0b3:	stc    
  40e0b4:	sub    cl,BYTE PTR [esi]
  40e0b6:	int    0x3e
  40e0b8:	cwde   
  40e0b9:	pop    ds
  40e0ba:	lods   al,BYTE PTR ds:[esi]
  40e0bb:	or     al,0x47
  40e0bd:	cmp    ah,BYTE PTR [eax+0x42bec732]
  40e0c3:	popf   
  40e0c4:	in     al,0x16
  40e0c6:	mov    ch,0xf1
  40e0c8:	add    bh,ah
  40e0ca:	or     BYTE PTR [eax+0x7f19f3eb],al
  40e0d0:	sub    eax,0x415fcd47
  40e0d5:	jae    0x40e073
  40e0d7:	dec    esp
  40e0d8:	xchg   esi,eax
  40e0d9:	in     al,dx
  40e0da:	adc    BYTE PTR [ecx],ah
  40e0dc:	icebp  
  40e0dd:	jmp    0x2bfb:0xd5696126
  40e0e4:	add    DWORD PTR [ecx],edi
  40e0e6:	mov    bl,0x5
  40e0e8:	pop    ss
  40e0e9:	sub    al,0xcb
  40e0eb:	imul   esp,DWORD PTR [ebp-0x20],0xa7e0d5ad
  40e0f2:	xchg   edx,eax
  40e0f3:	inc    edx
  40e0f4:	pop    edi
  40e0f5:	call   0x79b5:0x1b404535
  40e0fc:	rcr    edx,1
  40e0fe:	adc    al,0xbc
  40e100:	gs pop es
  40e102:	cmp    edx,DWORD PTR [edi+0x3d]
  40e105:	cwde   
  40e106:	xor    ax,0xebdd
  40e10a:	ins    DWORD PTR es:[edi],dx
  40e10b:	xor    BYTE PTR [ebp+0x12013180],bh
  40e111:	mov    cl,0xf7
  40e113:	jmp    0xb0fd:0xf75258ec
  40e11a:	shl    BYTE PTR [edi],1
  40e11c:	lea    ecx,[edi+0x40]
  40e11f:	call   0x2fde7b5c
  40e124:	in     eax,0x33
  40e126:	test   BYTE PTR [edi+ebp*1-0x6e],ah
  40e12a:	(bad)  
  40e12b:	arpl   WORD PTR [edx],ax
  40e12d:	outs   dx,DWORD PTR ds:[esi]
  40e12e:	jl     0x40e0fd
  40e130:	inc    edx
  40e131:	adc    al,0x6
  40e133:	fisttp DWORD PTR [esi-0x60]
  40e136:	and    BYTE PTR [edi+0x7b],ah
  40e139:	out    dx,eax
  40e13a:	sbb    BYTE PTR [esi+0x1790983d],0x6c
  40e141:	mov    dh,0x3a
  40e143:	jmp    0x40e0fe
  40e145:	aad    0x7a
  40e147:	mov    WORD PTR [ebp+ebp*2+0x6],?
  40e14b:	inc    DWORD PTR [ebp+0x13fb967e]
  40e151:	add    al,0x87
  40e153:	mov    eax,0xaed73690
  40e158:	mov    ebx,0x631d153
  40e15d:	mov    edx,0x197fba3c
  40e162:	repz sub DWORD PTR ds:0x7782deca,edi
  40e169:	bound  esp,QWORD PTR [ebp-0x7e]
  40e16c:	cmc    
  40e16d:	xor    eax,0x7304b7f3
  40e172:	or     BYTE PTR [edi+edi*2-0x1acd3c9c],dl
  40e179:	add    eax,0x9d296c80
  40e17e:	and    eax,0xde9e2f01
  40e183:	nop
  40e184:	mov    bh,0xdc
  40e186:	enter  0xb40b,0x35
  40e18a:	in     eax,dx
  40e18b:	movaps xmm5,xmm1
  40e18e:	push   ebx
  40e18f:	mov    bh,0xa7
  40e191:	mov    ebx,?
  40e193:	mov    ebp,0x88085265
  40e198:	in     al,dx
  40e199:	fcomip st,st(7)
  40e19b:	aaa    
  40e19c:	inc    ebp
  40e19d:	arpl   WORD PTR [ebp-0x41f55b5c],dx
  40e1a3:	(bad)
  40e1a7:	push   edx
  40e1a8:	int    0xd
  40e1aa:	pusha  
  40e1ab:	cmp    dl,BYTE PTR [edx+edi*8+0x205539b9]
  40e1b2:	imul   ecx,DWORD PTR [edi+eiz*2],0x1a640d72
  40e1b9:	ins    BYTE PTR es:[edi],dx
  40e1ba:	js     0x40e235
  40e1bc:	fsub   DWORD PTR [ebx+0x35a76479]
  40e1c2:	lock xchg edi,eax
  40e1c4:	les    esp,FWORD PTR [edi-0x6ec333c1]
  40e1ca:	mul    BYTE PTR [ebp-0x52765794]
  40e1d0:	jo     0x40e158
  40e1d2:	test   DWORD PTR [edi+0x24355712],eax
  40e1d8:	rcl    BYTE PTR [edx+0x19],1
  40e1db:	popa   
  40e1dc:	outs   dx,BYTE PTR ds:[esi]
  40e1dd:	jmp    0x3832:0xb29a1319
  40e1e4:	or     BYTE PTR [ebp-0x6a90464],al
  40e1ea:	cdq    
  40e1eb:	xchg   BYTE PTR ds:0xfb6c8a4f,dl
  40e1f1:	stc    
  40e1f2:	and    eax,0x61721904
  40e1f7:	es mov al,0x35
  40e1fa:	sub    DWORD PTR [ecx+0x70b76306],ecx
  40e200:	std    
  40e201:	rcl    ebp,1
  40e203:	pop    DWORD PTR [ebp+0x276e5614]
  40e209:	push   edi
  40e20a:	stos   DWORD PTR es:[edi],eax
  40e20b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e20c:	dec    esp
  40e20d:	adc    edx,DWORD PTR ds:0x92003c87
  40e213:	fcmovnu st,st(6)
  40e215:	inc    esi
  40e216:	mov    al,bl
  40e218:	mov    cl,BYTE PTR ds:0xfaec09f6
  40e21e:	arpl   WORD PTR [eax+0x25],dx
  40e221:	out    dx,eax
  40e222:	enter  0x94f,0x13
  40e226:	mov    ds:0x52d84997,al
  40e22b:	fldenv [edx+0x42]
  40e22e:	and    eax,0x22f7398
  40e233:	leave  
  40e234:	out    0x98,eax
  40e236:	das    
  40e237:	or     edi,DWORD PTR [edx]
  40e239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e23a:	call   0x36aa:0xf7cf50fa
  40e241:	aam    0x72
  40e243:	jno    0x40e248
  40e245:	jbe    0x40e265
  40e247:	loope  0x40e27a
  40e249:	inc    esp
  40e24a:	or     edx,DWORD PTR [edx]
  40e24c:	pop    ss
  40e24d:	shl    BYTE PTR ds:0xd63539a8,cl
  40e253:	addr16 xchg esp,ebx
  40e256:	leave  
  40e257:	inc    eax
  40e258:	addr16 out dx,al
  40e25a:	shl    BYTE PTR [eax+ebp*1+0xf],0x4b
  40e25f:	add    dh,0xa1
  40e262:	pop    edx
  40e263:	push   eax
  40e264:	mov    ecx,0x32541f29
  40e269:	cmp    al,0x3e
  40e26b:	(bad)  
  40e26c:	lock xchg ecx,eax
  40e26e:	inc    esp
  40e26f:	push   0xffffffd2
  40e271:	test   DWORD PTR [edi+0x15a8854b],esp
  40e277:	fwait
  40e278:	popa   
  40e279:	js     0x40e272
  40e27b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e27c:	pop    ecx
  40e27d:	rcr    BYTE PTR [eax],0x51
  40e280:	and    ebp,DWORD PTR [ebx-0x122976f9]
  40e286:	dec    ecx
  40e287:	bound  ecx,QWORD PTR [eax+0x13ca5e1]
  40e28d:	sti    
  40e28e:	xor    eax,esp
  40e290:	scas   al,BYTE PTR es:[edi]
  40e291:	mov    ecx,0xc3f6c22f
  40e296:	cmp    dh,dh
  40e298:	mov    ebp,0x8228642d
  40e29d:	jne    0x40e2ca
  40e29f:	jb     0x40e22e
  40e2a1:	call   0x439b:0x77eca549
  40e2a8:	jae    0x40e2f1
  40e2aa:	xchg   ecx,eax
  40e2ab:	mov    ebx,0x433033f2
  40e2b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2b1:	mov    esp,0xa24d8986
  40e2b6:	and    bl,bl
  40e2b8:	ror    BYTE PTR [eax-0x56],0x83
  40e2bc:	pop    es
  40e2bd:	jp     0x40e328
  40e2bf:	jns    0x40e322
  40e2c1:	lods   al,BYTE PTR ds:[esi]
  40e2c2:	inc    esp
  40e2c3:	or     eax,0x18f49b0e
  40e2c8:	ins    BYTE PTR es:[edi],dx
  40e2c9:	inc    esi
  40e2ca:	stos   BYTE PTR es:[edi],al
  40e2cb:	shl    DWORD PTR [ebp-0x8],cl
  40e2ce:	call   0x7a6f3e38
  40e2d3:	sbb    al,0xb1
  40e2d5:	sbb    DWORD PTR gs:0xb82a61a4,eax
  40e2dc:	xor    BYTE PTR [edx],ch
  40e2de:	ss in  eax,dx
  40e2e0:	loope  0x40e2e1
  40e2e2:	mov    cl,0xac
  40e2e4:	out    dx,eax
  40e2e5:	dec    edi
  40e2e6:	pop    edx
  40e2e7:	les    ebx,FWORD PTR [edx+0x10cba0f2]
  40e2ed:	inc    ecx
  40e2ee:	int3   
  40e2ef:	pop    ebp
  40e2f0:	sbb    bl,BYTE PTR [ebx+0x755d2704]
  40e2f6:	sub    eax,0x7538b96c
  40e2fb:	sbb    eax,0xffe654da
  40e300:	aaa    
  40e301:	or     bl,BYTE PTR [ecx]
  40e303:	into   
  40e304:	add    eax,0xcb988909
  40e309:	leave  
  40e30a:	cdq    
  40e30b:	push   ebp
  40e30c:	cmp    al,0xf2
  40e30e:	popa   
  40e30f:	neg    DWORD PTR [eax+ebx*2-0x6cbf8aac]
  40e316:	mov    dh,0x91
  40e318:	ret    0x8420
  40e31b:	std    
  40e31c:	xor    edx,DWORD PTR [ebp-0x15]
  40e31f:	(bad)
  40e322:	int3   
  40e323:	jge    0x40e382
  40e325:	sbb    DWORD PTR [esi+0x7e32cccd],edx
  40e32b:	bound  edi,QWORD PTR [esi]
  40e32d:	addr16 xchg esi,eax
  40e32f:	adc    esp,DWORD PTR [ebp+0xbcf7da]
  40e335:	jo     0x40e30a
  40e337:	popa   
  40e338:	addr16 cmp al,0xec
  40e33b:	jns    0x40e35c
  40e33d:	loop   0x40e396
  40e33f:	sti    
  40e340:	out    0x40,al
  40e342:	out    dx,eax
  40e343:	mov    BYTE PTR [esi],bh
  40e345:	jns    0x40e347
  40e347:	(bad)  
  40e348:	clc    
  40e349:	pop    ds
  40e34a:	enter  0xee36,0x53
  40e34e:	bound  eax,QWORD PTR [ebx+0xcb0d9b2]
  40e354:	xchg   edi,eax
  40e355:	fistp  QWORD PTR [ebx+0x5e]
  40e358:	cdq    
  40e359:	mov    ds:0xacbdae1,al
  40e35e:	xor    DWORD PTR [esi+0x22],0xffffffec
  40e362:	mov    edi,0x5f34f282
  40e367:	push   ebx
  40e368:	jmp    0xcea4f429
  40e36d:	add    al,0xcd
  40e36f:	sti    
  40e370:	dec    ecx
  40e371:	inc    eax
  40e372:	cmc    
  40e373:	(bad)  
  40e374:	push   esp
  40e375:	cmp    DWORD PTR [esi-0xaadcadb],edi
  40e37b:	add    eax,edx
  40e37d:	imul   eax,DWORD PTR [esi]
  40e380:	or     esi,0x11ff
  40e386:	mov    esi,DWORD PTR [ebp+0x8]
  40e389:	or     DWORD PTR ds:0x420e7e,0x420fac
  40e393:	xor    esi,ecx
  40e395:	and    DWORD PTR ds:0x420e7a,0x420f6c
  40e39f:	add    esi,edx
  40e3a1:	mov    DWORD PTR ds:0x420f04,0x5e6d
  40e3ab:	cmp    esi,eax
  40e3ad:	mov    eax,0x6dd0
  40e3b2:	mov    eax,DWORD PTR [ebp-0x4]
  40e3b5:	push   ebx
  40e3b6:	mov    DWORD PTR ds:0x420efc,0x12bd
  40e3c0:	je     0x40e450
  40e3c6:	and    DWORD PTR ds:0x420e92,0x0
  40e3d0:	jmp    0x40e3e2
  40e3d5:	mov    esi,DWORD PTR ds:0x420e92
  40e3db:	inc    esi
  40e3dc:	mov    DWORD PTR ds:0x420e92,esi
  40e3e2:	cmp    DWORD PTR ds:0x420e92,0x1b
  40e3e9:	jae    0x40e407
  40e3ef:	cmp    DWORD PTR ds:0x420e92,0x23
  40e3f6:	jne    0x40e402
  40e3fc:	call   DWORD PTR ds:0x424811
  40e402:	jmp    0x40e3d5
  40e407:	mov    esi,DWORD PTR [ebp-0x18]
  40e40a:	add    DWORD PTR [eax],esi
  40e40c:	add    eax,esi
  40e40e:	mov    eax,DWORD PTR [ebp-0x4]
  40e411:	sub    esi,DWORD PTR ds:0x420fb0
  40e417:	mov    esi,DWORD PTR [ebp+0xc]
  40e41a:	xor    DWORD PTR ds:0x420efc,0x420e8e
  40e424:	xor    esi,ecx
  40e426:	add    esi,edx
  40e428:	sbb    DWORD PTR ds:0x420ef8,0x67e3
  40e432:	imul   esi,DWORD PTR [eax]
  40e435:	mov    DWORD PTR ds:0x420f00,0x5d4a
  40e43f:	mov    DWORD PTR [eax],esi
  40e441:	mov    DWORD PTR ds:0x420efc,0x3930
  40e44b:	jmp    0x40e4ec
  40e450:	mov    esi,DWORD PTR [ebp+0x14]
  40e453:	and    DWORD PTR ds:0x420f68,0x0
  40e45d:	mov    ebx,DWORD PTR ds:0x420f68
  40e463:	inc    ebx
  40e464:	mov    DWORD PTR ds:0x420f68,ebx
  40e46a:	cmp    DWORD PTR ds:0x420f68,0x21
  40e471:	jne    0x40e482
  40e477:	push   0x420f08
  40e47c:	call   DWORD PTR ds:0x424815
  40e482:	cmp    DWORD PTR ds:0x420f68,0x19
  40e489:	jb     0x40e45d
  40e48f:	and    DWORD PTR ds:0x42201c,0x0
  40e499:	mov    edi,DWORD PTR ds:0x42201c
  40e49f:	inc    edi
  40e4a0:	mov    DWORD PTR ds:0x42201c,edi
  40e4a6:	cmp    DWORD PTR ds:0x42201c,0xd
  40e4ad:	jne    0x40e4c3
  40e4b3:	push   0x5b5d
  40e4b8:	push   0x5762
  40e4bd:	call   DWORD PTR ds:0x4247d5
  40e4c3:	cmp    DWORD PTR ds:0x42201c,0xc
  40e4ca:	jne    0x40e4dd
  40e4d0:	mov    edi,DWORD PTR ds:0x42201c
  40e4d6:	inc    edi
  40e4d7:	mov    DWORD PTR ds:0x42201c,edi
  40e4dd:	cmp    DWORD PTR ds:0x42201c,0x16
  40e4e4:	jb     0x40e499
  40e4ea:	xor    DWORD PTR [eax],esi
  40e4ec:	adc    ebx,DWORD PTR ds:0x420f58
  40e4f2:	mov    eax,DWORD PTR [ebp-0x4]
  40e4f5:	mov    edi,DWORD PTR [ebp+0x10]
  40e4f8:	mov    ebx,DWORD PTR ds:0x420ebe
  40e4fe:	mov    esi,DWORD PTR ds:0x420f80
  40e504:	sub    ebx,esi
  40e506:	add    ebx,DWORD PTR [ebx+esi*1]
  40e509:	xor    edi,ecx
  40e50b:	mov    ebx,DWORD PTR ds:0x420fb0
  40e511:	add    DWORD PTR ds:0x420efc,ebx
  40e517:	mov    esi,0xffcd8d23
  40e51c:	inc    ebx
  40e51d:	mov    ebx,esi
  40e51f:	sub    ebx,edi
  40e521:	add    DWORD PTR [eax],ebx
  40e523:	adc    edi,0x4f91
  40e529:	mov    eax,DWORD PTR [ebp-0x4]
  40e52c:	mov    edi,DWORD PTR [ebp-0x8]
  40e52f:	xor    DWORD PTR ds:0x420e8e,0x422014
  40e539:	add    edi,DWORD PTR [eax]
  40e53b:	mov    DWORD PTR [ebp-0x8],edi
  40e53e:	mov    eax,DWORD PTR [ebp+0xc]
  40e541:	mov    edi,DWORD PTR [ebp+0xc]
  40e544:	xor    edi,ecx
  40e546:	xor    eax,ecx
  40e548:	lea    eax,[eax+edi*1+0x64e5ba]
  40e54f:	mov    edi,DWORD PTR [ebp+0xc]
  40e552:	xor    edi,ecx
  40e554:	add    edi,edx
  40e556:	imul   eax,edi
  40e559:	mov    edi,DWORD PTR [ebp+0xc]
  40e55c:	xor    edi,ecx
  40e55e:	sub    edi,eax
  40e560:	mov    eax,DWORD PTR [ebp-0x4]
  40e563:	add    edi,edx
  40e565:	cmp    DWORD PTR [eax],edi
  40e567:	mov    eax,DWORD PTR [ebp-0x4]
  40e56a:	mov    edi,DWORD PTR [ebp+0x10]
  40e56d:	jg     0x40e580
  40e573:	xor    edi,ecx
  40e575:	mov    ebx,esi
  40e577:	sub    ebx,edi
  40e579:	add    DWORD PTR [eax],ebx
  40e57b:	jmp    0x40e586
  40e580:	xor    edi,ecx
  40e582:	add    edi,edx
  40e584:	add    DWORD PTR [eax],edi
  40e586:	mov    eax,DWORD PTR [ebp-0x8]
  40e589:	mov    edi,DWORD PTR [ebp-0x10]
  40e58c:	mov    eax,DWORD PTR [eax]
  40e58e:	xor    edi,ecx
  40e590:	add    edi,0x3272dc
  40e596:	not    edi
  40e598:	and    eax,edi
  40e59a:	movsx  di,BYTE PTR [eax+0x1]
  40e59f:	mov    ebx,0x3b4c
  40e5a4:	sub    di,bx
  40e5a7:	mov    ebx,0x8a89
  40e5ac:	xor    di,bx
  40e5af:	mov    ebx,0x4f87
  40e5b4:	cmp    di,bx
  40e5b7:	jne    0x40e5df
  40e5bd:	movsx  di,BYTE PTR [eax]
  40e5c1:	mov    ebx,0x3b4c
  40e5c6:	sub    di,bx
  40e5c9:	mov    ebx,0x8a89
  40e5ce:	xor    di,bx
  40e5d1:	mov    ebx,0x4f88
  40e5d6:	cmp    di,bx
  40e5d9:	je     0x40e5ef
  40e5df:	mov    edi,DWORD PTR [ebp-0x10]
  40e5e2:	xor    edi,ecx
  40e5e4:	mov    ebx,esi
  40e5e6:	sub    ebx,edi
  40e5e8:	add    eax,ebx
  40e5ea:	jmp    0x40e59a
  40e5ef:	mov    esi,DWORD PTR [ebp-0x14]
  40e5f2:	mov    esi,DWORD PTR [esi]
  40e5f4:	mov    edi,DWORD PTR [eax+0x3c]
  40e5f7:	lea    esi,[edi+esi*8+0x78]
  40e5fb:	mov    esi,DWORD PTR [esi+eax*1]
  40e5fe:	mov    DWORD PTR [ebp-0x8],esi
  40e601:	mov    esi,DWORD PTR [ebp+0x8]
  40e604:	xor    esi,ecx
  40e606:	add    esi,edx
  40e608:	mov    DWORD PTR [ebp-0x14],esi
  40e60b:	mov    esi,DWORD PTR [ebp+0x8]
  40e60e:	mov    edi,DWORD PTR [ebp-0x8]
  40e611:	xor    esi,ecx
  40e613:	add    esi,edx
  40e615:	pop    ebx
  40e616:	cmp    edi,esi
  40e618:	jne    0x40e636
  40e61e:	mov    eax,DWORD PTR [ebp+0xc]
  40e621:	xor    eax,ecx
  40e623:	mov    ecx,DWORD PTR [ebp-0x8]
  40e626:	add    eax,edx
  40e628:	imul   eax,ecx
  40e62b:	mov    DWORD PTR [ebp-0x8],eax
  40e62e:	push   DWORD PTR [ebp+0x18]
  40e631:	jmp    0x410a04
  40e636:	mov    ecx,DWORD PTR [ebp-0x8]
  40e639:	add    ecx,eax
  40e63b:	mov    DWORD PTR [ebp-0x14],ecx
  40e63e:	mov    ecx,DWORD PTR [ebp-0x14]
  40e641:	mov    ecx,DWORD PTR [ecx+0xc]
  40e644:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e649:	mov    edx,0x3b4c
  40e64e:	sub    cx,dx
  40e651:	mov    edx,0x8a89
  40e656:	xor    cx,dx
  40e659:	mov    edx,0x4e76
  40e65e:	jmp    0x4109d8
  40e663:	stc    
  40e664:	add    BYTE PTR [edx+ebp*1],bh
  40e667:	pop    ss
  40e668:	push   cs
  40e669:	sti    
  40e66a:	or     ebx,DWORD PTR [ebx]
  40e66c:	mov    edx,0x19305ef2
  40e671:	out    0x20,al
  40e673:	jae    0x40e63f
  40e675:	jp     0x40e6f1
  40e677:	sbb    DWORD PTR [edi+0x7a],ebx
  40e67a:	jp     0x40e6a3
  40e67c:	fmul   QWORD PTR [edx]
  40e67e:	loope  0x40e6ce
  40e680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e681:	mov    ebp,0xf203f045
  40e686:	inc    ebx
  40e687:	xchg   esp,eax
  40e688:	inc    edx
  40e689:	jp     0x40e6db
  40e68b:	jnp    0x40e686
  40e68d:	ss dec ecx
  40e68f:	ins    DWORD PTR es:[edi],dx
  40e690:	or     DWORD PTR ds:0xdcc28686,ecx
  40e696:	mov    ah,dh
  40e698:	sahf   
  40e699:	mov    ah,0x6a
  40e69b:	repnz mov esi,0x4626c622
  40e6a1:	inc    edi
  40e6a2:	sbb    DWORD PTR ds:0xb3ba04af,edi
  40e6a8:	jo     0x40e667
  40e6aa:	pop    ebp
  40e6ab:	fld    DWORD PTR ds:0xc46208f3
  40e6b1:	jg     0x40e707
  40e6b3:	xchg   ebp,eax
  40e6b4:	ffree  st(6)
  40e6b6:	pusha  
  40e6b7:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40e6b9:	cld    
  40e6ba:	popa   
  40e6bb:	adc    ebx,ebx
  40e6bd:	and    BYTE PTR [esi],dl
  40e6bf:	sar    BYTE PTR [eax-0x1d5b8405],0x3
  40e6c6:	xchg   esp,eax
  40e6c7:	es pop ss
  40e6c9:	inc    esi
  40e6ca:	jne    0x40e6a4
  40e6cc:	inc    ebp
  40e6cd:	mov    ecx,DWORD PTR [ebp-0x5d]
  40e6d0:	jmp    0x2f148371
  40e6d5:	outs   dx,BYTE PTR ds:[esi]
  40e6d6:	xchg   edi,eax
  40e6d7:	repnz add ecx,0x41
  40e6db:	ins    DWORD PTR es:[edi],dx
  40e6dc:	pop    edx
  40e6dd:	push   edx
  40e6de:	dec    edi
  40e6df:	lods   al,BYTE PTR ds:[esi]
  40e6e0:	pop    esi
  40e6e1:	fcomip st,st(1)
  40e6e3:	loopne 0x40e6d7
  40e6e5:	sahf   
  40e6e6:	xchg   BYTE PTR [edi-0x46b6ce59],dl
  40e6ec:	popf   
  40e6ed:	std    
  40e6ee:	xor    eax,0x5419a908
  40e6f3:	jmp    0x40e68b
  40e6f5:	cmp    ebx,DWORD PTR [edi+0x5b]
  40e6f8:	inc    ebp
  40e6f9:	je     0x40e6b8
  40e6fb:	fnstenv [esi-0x56]
  40e6fe:	inc    edi
  40e6ff:	sbb    DWORD PTR [ebx],eax
  40e701:	call   0x38da:0x799a11fe
  40e708:	xchg   edi,eax
  40e709:	into   
  40e70a:	ja     0x40e6ec
  40e70c:	repnz xchg edi,eax
  40e70e:	pop    edx
  40e70f:	sar    BYTE PTR [ecx+0x25],0xa7
  40e713:	lods   eax,DWORD PTR ds:[esi]
  40e714:	cmp    BYTE PTR [esi+edi*4-0x55],0x29
  40e719:	repnz fs mov dh,0xd4
  40e71d:	lahf   
  40e71e:	lea    ebx,[ebx]
  40e720:	and    DWORD PTR [ebp-0x59ab22fe],ecx
  40e726:	add    BYTE PTR [ebx+0x2f],ch
  40e729:	add    edi,DWORD PTR [ebx]
  40e72b:	or     cl,al
  40e72d:	jb     0x40e73c
  40e72f:	adc    cl,BYTE PTR [ecx+0x6]
  40e732:	cmp    ecx,DWORD PTR [edx]
  40e734:	mov    ds:0xa0ad1290,al
  40e739:	aam    0x8e
  40e73b:	and    eax,0x292f90ca
  40e740:	pop    edi
  40e741:	cvttps2pi mm6,QWORD PTR [edx-0x38425a9d]
  40e748:	jge    0x40e726
  40e74a:	neg    DWORD PTR [esi+0x7]
  40e74d:	sbb    eax,0xa654d204
  40e752:	pushf  
  40e753:	sub    ebp,DWORD PTR [esi+eax*1-0x6a3ee7f4]
  40e75a:	jmp    0xb823c981
  40e75f:	pop    edi
  40e760:	sbb    al,0xf3
  40e762:	push   ss
  40e763:	mov    ebx,0xae2e5e71
  40e768:	xor    al,0x39
  40e76a:	add    al,BYTE PTR [eax+edi*2-0x1c]
  40e76e:	jg     0x40e757
  40e770:	push   0x2a
  40e772:	outs   dx,DWORD PTR gs:[esi]
  40e774:	in     al,0x69
  40e776:	add    al,0x8f
  40e778:	mov    ds:0xdbe1e386,eax
  40e77d:	fnstcw WORD PTR [ebx+0x17]
  40e780:	inc    ecx
  40e781:	jo     0x40e709
  40e783:	inc    ebx
  40e784:	daa    
  40e785:	push   0x3e89d860
  40e78a:	(bad)  
  40e78b:	mov    dl,0xda
  40e78d:	sti    
  40e78e:	(bad)  
  40e78f:	in     al,dx
  40e790:	int3   
  40e791:	hlt    
  40e792:	scas   al,BYTE PTR es:[edi]
  40e793:	xchg   edx,eax
  40e794:	xchg   ebx,eax
  40e795:	repnz push esi
  40e797:	test   DWORD PTR [esi-0x1ca2e5cf],ebx
  40e79d:	dec    edi
  40e79e:	call   0x9b6b:0x751e2c02
  40e7a5:	fs test eax,0x68ca2662
  40e7ab:	fist   WORD PTR [esi+0x19]
  40e7ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7af:	(bad)  
  40e7b0:	mov    ebp,0x776797fc
  40e7b5:	and    eax,0xb6412380
  40e7ba:	or     eax,0xc595f71b
  40e7bf:	sar    DWORD PTR [ecx+edx*4-0x3f],1
  40e7c3:	repnz pusha 
  40e7c5:	mov    eax,0xf96e39c
  40e7ca:	dec    edi
  40e7cb:	push   esp
  40e7cc:	lods   eax,DWORD PTR ds:[esi]
  40e7cd:	sub    al,0x10
  40e7cf:	push   edi
  40e7d0:	gs call 0x74fd:0xcc2f12f2
  40e7d8:	aaa    
  40e7d9:	adc    BYTE PTR [esi+0x3f7368ad],dl
  40e7df:	inc    ecx
  40e7e0:	leave  
  40e7e1:	jp     0x40e81f
  40e7e3:	neg    BYTE PTR [eax]
  40e7e5:	pop    ds
  40e7e6:	test   al,0xb3
  40e7e8:	pop    edx
  40e7e9:	int3   
  40e7ea:	fdivp  st(1),st
  40e7ec:	test   BYTE PTR [ebp+0x7],bl
  40e7ef:	mov    eax,ds:0xe72079d4
  40e7f4:	ss (bad) 
  40e7f7:	jb     0x40e872
  40e7f9:	in     eax,dx
  40e7fa:	nop
  40e7fb:	sbb    ebp,DWORD PTR es:[ecx+eax*8]
  40e7ff:	mov    eax,ds:0x2c6457e8
  40e804:	sub    DWORD PTR [edi+0x6f],0xcaa1ea4d
  40e80b:	pushf  
  40e80c:	sti    
  40e80d:	es or  eax,0xaf3fc01f
  40e813:	(bad)  
  40e814:	sbb    ecx,ebp
  40e816:	call   0x5df7:0xf0a912cd
  40e81d:	pop    eax
  40e81e:	add    DWORD PTR [edx+0x5b320b38],0x7c
  40e825:	push   esp
  40e826:	push   cs
  40e827:	je     0x40e810
  40e829:	push   cs
  40e82a:	fisubr WORD PTR [eax]
  40e82c:	jp     0x40e850
  40e82e:	das    
  40e82f:	sub    eax,0x17ad8605
  40e834:	jp     0x40e8a4
  40e836:	mov    edx,0x4cb62c04
  40e83b:	int    0x4c
  40e83d:	jmp    0x6af8:0x794ed848
  40e844:	mov    esp,DWORD PTR [ebp-0x259c0203]
  40e84a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e84b:	mov    ds:0xe4fd372d,eax
  40e850:	mov    dh,0xa6
  40e852:	call   0x410450f6
  40e857:	and    dh,BYTE PTR [edi+0x7436dd6d]
  40e85d:	fstp   DWORD PTR [edx+edx*4]
  40e860:	xchg   DWORD PTR [esi],edi
  40e862:	push   ebp
  40e863:	out    0x29,al
  40e865:	lds    ebx,FWORD PTR [edx]
  40e867:	into   
  40e868:	xchg   edx,eax
  40e869:	in     al,0x2
  40e86b:	mov    ds:0x7c7584d6,eax
  40e870:	shr    BYTE PTR [edi+0x21f75ade],0x4f
  40e877:	cwde   
  40e878:	sar    BYTE PTR [ebx-0x43ce3428],1
  40e87e:	stos   BYTE PTR es:[edi],al
  40e87f:	adc    ebx,esp
  40e881:	les    ecx,FWORD PTR [eax+0x7e72385a]
  40e887:	repz arpl cx,bx
  40e88a:	sub    eax,0x4dd8b588
  40e88f:	or     eax,0xd13ac14c
  40e894:	cmp    DWORD PTR [eax+0x7b3fb1c4],0xbe1f8401
  40e89e:	loop   0x40e903
  40e8a0:	lds    eax,FWORD PTR [ecx+0x4b]
  40e8a3:	mov    dl,0x72
  40e8a5:	xor    DWORD PTR [eax-0x3c872ce0],ecx
  40e8ab:	mov    ebp,0x881f9f33
  40e8b0:	push   es
  40e8b1:	push   ebp
  40e8b2:	(bad)  [ecx-0x4e]
  40e8b5:	push   esi
  40e8b6:	xchg   edx,eax
  40e8b7:	add    eax,0x598b0ab1
  40e8bc:	in     eax,0x6a
  40e8be:	in     eax,0xbc
  40e8c0:	sbb    ah,BYTE PTR ds:0xdcbd9f93
  40e8c6:	adc    eax,0x47cc63b0
  40e8cb:	mov    bl,0xf6
  40e8cd:	cwde   
  40e8ce:	ins    DWORD PTR es:[edi],dx
  40e8cf:	scas   al,BYTE PTR es:[edi]
  40e8d0:	dec    ebp
  40e8d1:	xchg   edx,eax
  40e8d2:	hlt    
  40e8d3:	pop    esi
  40e8d4:	fdiv   st(6),st
  40e8d6:	pop    ebp
  40e8d7:	dec    ebx
  40e8d8:	daa    
  40e8d9:	mov    BYTE PTR [ecx],ah
  40e8db:	add    edi,edx
  40e8dd:	popa   
  40e8de:	loopne 0x40e8bc
  40e8e0:	imul   esi
  40e8e2:	jmp    0x40e8ce
  40e8e4:	mov    WORD PTR [ecx+0x7efe2385],?
  40e8ea:	ja     0x40e8c6
  40e8ec:	hlt    
  40e8ed:	lock loop 0x40e8db
  40e8f0:	inc    ebx
  40e8f1:	push   ebx
  40e8f2:	push   edi
  40e8f3:	mov    BYTE PTR [ebp+0x769830b1],dh
  40e8f9:	aaa    
  40e8fa:	add    edx,DWORD PTR [ebx]
  40e8fc:	cmp    esi,DWORD PTR [ebp-0x71e02251]
  40e902:	or     DWORD PTR [edi],esp
  40e904:	adc    BYTE PTR [eax+0x153c5188],dl
  40e90a:	aas    
  40e90b:	fdiv   DWORD PTR [ebx]
  40e90d:	stc    
  40e90e:	mov    al,bh
  40e910:	mov    cl,0x9b
  40e912:	inc    edx
  40e913:	jbe    0x40e8b4
  40e915:	arpl   WORD PTR [ecx],cx
  40e917:	jl     0x40e904
  40e919:	lods   eax,DWORD PTR ds:[esi]
  40e91a:	fstp   DWORD PTR [ebx]
  40e91c:	and    eax,0xb42bf94
  40e921:	xchg   edx,eax
  40e922:	push   ebx
  40e923:	jmp    0x40e98a
  40e925:	ret    
  40e926:	js     0x40e99f
  40e928:	mov    ebx,0x98058ef3
  40e92d:	int3   
  40e92e:	mov    esi,0x789c361d
  40e933:	add    DWORD PTR fs:[edi+esi*1-0x4d],edi
  40e938:	scas   al,BYTE PTR es:[edi]
  40e939:	into   
  40e93a:	jo     0x40e990
  40e93c:	and    DWORD PTR [ebp+0x5d],eax
  40e93f:	ins    DWORD PTR es:[edi],dx
  40e940:	xor    bh,ch
  40e942:	stc    
  40e943:	pop    ebx
  40e944:	ja     0x40e95b
  40e946:	push   0xed99ceec
  40e94b:	push   ebx
  40e94c:	sub    al,0x2c
  40e94e:	mov    ch,0xc1
  40e950:	cmp    ecx,edx
  40e952:	sar    BYTE PTR [edi-0x64a36c00],1
  40e958:	shl    BYTE PTR [esi+ecx*2+0x4e9e4eb2],cl
  40e95f:	(bad)  
  40e960:	mov    esp,0x2742a851
  40e965:	ficomp DWORD PTR [eax]
  40e967:	jmp    0x8695d645
  40e96c:	sti    
  40e96d:	imul   ebp
  40e96f:	and    DWORD PTR [ecx-0x5d],eax
  40e972:	lea    esp,[edi+0x48]
  40e975:	jg     0x40e9dd
  40e977:	in     eax,0x95
  40e979:	daa    
  40e97a:	fcomi  st,st(3)
  40e97c:	(bad)  
  40e97d:	aam    0xb7
  40e97f:	jmp    0x35d88342
  40e984:	fild   DWORD PTR [ebx-0x60]
  40e987:	punpckhwd mm7,QWORD PTR [edx+0x223a0297]
  40e98e:	jle    0x40ea03
  40e990:	mov    bl,0xe6
  40e992:	pop    ss
  40e993:	pop    ds
  40e994:	add    al,0x8a
  40e996:	pop    esp
  40e997:	aam    0xd6
  40e999:	xchg   bh,al
  40e99b:	mov    cl,0x69
  40e99d:	imul   eax,DWORD PTR [esi-0xc984bf5],0x64c194ad
  40e9a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9a8:	dec    eax
  40e9a9:	lods   al,BYTE PTR gs:[esi]
  40e9ab:	shl    bl,cl
  40e9ad:	pop    ds
  40e9ae:	stc    
  40e9af:	ret    0xf598
  40e9b2:	test   dh,dh
  40e9b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9b5:	or     BYTE PTR [ecx-0x36],dh
  40e9b8:	inc    esp
  40e9b9:	push   0x2fc19f90
  40e9be:	je     0x40e963
  40e9c0:	loope  0x40ea2c
  40e9c2:	inc    ebx
  40e9c3:	fnstsw WORD PTR [esi]
  40e9c5:	enter  0x6c8f,0x3
  40e9c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9ca:	(bad)  
  40e9cb:	jne    0x40e95f
  40e9cd:	sar    bh,cl
  40e9cf:	add    dh,BYTE PTR [edx]
  40e9d1:	fld    QWORD PTR [edi]
  40e9d3:	push   edi
  40e9d4:	rol    BYTE PTR [esi],1
  40e9d6:	mov    esp,DWORD PTR [edx]
  40e9d8:	jp     0x40e95f
  40e9da:	xchg   ebx,eax
  40e9db:	mov    edi,0xb13815cc
  40e9e0:	int3   
  40e9e1:	add    al,0xc4
  40e9e3:	sbb    DWORD PTR [edi],edi
  40e9e5:	jmp    0x3898508b
  40e9ea:	xchg   BYTE PTR [ebp-0x2a08d267],al
  40e9f0:	sub    BYTE PTR [edx+0x66],cl
  40e9f3:	xor    DWORD PTR [ecx-0x7a3c975a],ebp
  40e9f9:	mov    ch,BYTE PTR ds:0xae6696f2
  40e9ff:	mov    es:0xc68a6ca4,eax
  40ea05:	mov    ecx,0xa00cf9ef
  40ea0a:	pop    ebp
  40ea0b:	xchg   esi,eax
  40ea0c:	pusha  
  40ea0d:	cld    
  40ea0e:	jge    0x40ea7b
  40ea10:	aam    0xbe
  40ea12:	pusha  
  40ea13:	mov    al,0xa0
  40ea15:	aaa    
  40ea16:	test   eax,0x6298a176
  40ea1b:	pop    esp
  40ea1c:	into   
  40ea1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea1e:	and    DWORD PTR [ecx],esi
  40ea20:	addr16 push esi
  40ea22:	ins    BYTE PTR es:[edi],dx
  40ea23:	xchg   DWORD PTR [ebx-0x28],esp
  40ea26:	dec    edx
  40ea27:	in     al,0x2d
  40ea29:	ret    
  40ea2a:	add    DWORD PTR [eax-0x12],esp
  40ea2d:	arpl   WORD PTR [ebp-0x7c05be7f],bx
  40ea33:	xor    dl,dl
  40ea35:	and    DWORD PTR [eax-0x69210661],ebx
  40ea3b:	(bad)  
  40ea3c:	and    ebp,ecx
  40ea3e:	test   BYTE PTR ds:0x7902b0d1,ah
  40ea44:	ss xchg edx,eax
  40ea46:	xlat   BYTE PTR ds:[ebx]
  40ea47:	in     eax,dx
  40ea48:	dec    esp
  40ea49:	mov    ebp,0x1873372c
  40ea4e:	lea    ebp,[esi]
  40ea50:	(bad)  
  40ea51:	xor    BYTE PTR [esi],bl
  40ea53:	sub    ecx,DWORD PTR [ebx+0xc]
  40ea56:	sub    BYTE PTR [ecx],0x99
  40ea59:	xor    dh,BYTE PTR [esi+eiz*4+0x35]
  40ea5d:	in     eax,0xf
  40ea5f:	sub    BYTE PTR [ebx-0x1e082b18],cl
  40ea65:	cdq    
  40ea66:	lods   al,BYTE PTR ds:[esi]
  40ea67:	cs pushf 
  40ea69:	adc    dh,BYTE PTR [di]
  40ea6c:	leave  
  40ea6d:	jle    0x40ead9
  40ea6f:	or     ebx,0x56
  40ea72:	sub    al,0x24
  40ea74:	je     0x40ea41
  40ea76:	das    
  40ea77:	jnp    0x40ea48
  40ea79:	xchg   ecx,eax
  40ea7a:	dec    edx
  40ea7b:	hlt    
  40ea7c:	mov    bl,0xbd
  40ea7e:	adc    DWORD PTR [ebp+0x8d62d7],0xf0ae9e02
  40ea88:	es add al,0x34
  40ea8b:	loopne 0x40ea22
  40ea8d:	mov    ah,BYTE PTR [ecx]
  40ea8f:	cmp    ebx,0x26d40af7
  40ea95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea96:	adc    bl,dh
  40ea98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea99:	js     0x40ea1c
  40ea9b:	add    eax,0x12d5cfa6
  40eaa0:	outs   dx,DWORD PTR ds:[esi]
  40eaa1:	or     BYTE PTR [ebx+edx*4+0x1bd41fc2],0x93
  40eaa9:	jnp    0x40eb09
  40eaab:	xor    BYTE PTR [edi-0x52445c9e],bh
  40eab1:	mov    ch,0x6
  40eab3:	dec    esi
  40eab4:	arpl   WORD PTR [eax],dx
  40eab6:	xchg   edx,eax
  40eab7:	inc    ebp
  40eab8:	jmp    0x6724e24d
  40eabd:	and    esi,ebx
  40eabf:	out    dx,al
  40eac0:	out    dx,eax
  40eac1:	scas   al,BYTE PTR es:[edi]
  40eac2:	adc    DWORD PTR [ebp-0x42062d11],esi
  40eac8:	mov    BYTE PTR [esi+edi*8+0x74],bh
  40eacc:	and    BYTE PTR [ebx-0x2c],dl
  40eacf:	mov    ebp,0x198693a2
  40ead4:	das    
  40ead5:	mov    edi,0x209fdf5c
  40eada:	daa    
  40eadb:	dec    ecx
  40eadc:	lds    edi,FWORD PTR [edx]
  40eade:	xchg   edi,eax
  40eadf:	pushf  
  40eae0:	jb     0x40eb56
  40eae2:	dec    esp
  40eae3:	xchg   ebx,eax
  40eae4:	pop    edx
  40eae5:	push   es
  40eae6:	je     0x40ea9e
  40eae8:	dec    ebp
  40eae9:	int    0x1b
  40eaeb:	fisub  DWORD PTR [eax+ebx*8-0x30]
  40eaef:	test   DWORD PTR [esi+0x53],esi
  40eaf2:	cwde   
  40eaf3:	cmp    eax,0xa9687882
  40eaf8:	jb     0x40eaf3
  40eafa:	fld    QWORD PTR [edx]
  40eafc:	sar    BYTE PTR [ebp+0x37],1
  40eaff:	cmp    al,0x36
  40eb01:	pusha  
  40eb02:	icebp  
  40eb03:	ret    0x7d55
  40eb06:	fidiv  DWORD PTR [esp+ecx*8+0x61]
  40eb0a:	and    eax,0xfe65771b
  40eb0f:	cmp    BYTE PTR [eax-0x13729571],dl
  40eb15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb16:	dec    edx
  40eb17:	dec    eax
  40eb18:	sub    eax,0x5df32546
  40eb1d:	js     0x40eb96
  40eb1f:	adc    DWORD PTR [edi-0x47],ebp
  40eb22:	dec    edx
  40eb23:	(bad)  
  40eb24:	or     eax,0x54d2e054
  40eb29:	or     eax,0x182f027b
  40eb2e:	and    ebp,DWORD PTR [eax-0x6160307e]
  40eb34:	jmp    0xe549:0x8516228e
  40eb3b:	imul   ecx,DWORD PTR [ebx],0x5d
  40eb3e:	add    edx,edi
  40eb40:	pop    eax
  40eb41:	mov    ds:0x8e997cf4,eax
  40eb46:	ror    BYTE PTR [ebx],cl
  40eb48:	push   0xb
  40eb4a:	scas   al,BYTE PTR es:[edi]
  40eb4b:	jge    0x40eadc
  40eb4d:	mov    cl,0xcf
  40eb4f:	mov    DWORD PTR [ecx],0xe074f111
  40eb55:	stos   BYTE PTR es:[edi],al
  40eb56:	adc    ebx,DWORD PTR [esi-0x3e]
  40eb59:	mov    al,ds:0x62892305
  40eb5e:	ja     0x40ebcd
  40eb60:	cli    
  40eb61:	adc    ebx,0x8a7578b9
  40eb67:	stos   BYTE PTR es:[edi],al
  40eb68:	push   ss
  40eb69:	push   edx
  40eb6a:	fild   DWORD PTR [edi]
  40eb6c:	cwde   
  40eb6d:	dec    esi
  40eb6e:	mov    edi,0xbfdaaac0
  40eb73:	cmp    al,0x96
  40eb75:	pop    ebp
  40eb76:	in     al,dx
  40eb77:	pushf  
  40eb78:	int    0x6e
  40eb7a:	adc    al,ah
  40eb7c:	push   ebp
  40eb7d:	jecxz  0x40ebfe
  40eb7f:	xchg   ebp,eax
  40eb80:	popa   
  40eb81:	add    cl,bh
  40eb83:	xchg   edi,eax
  40eb84:	adc    al,0x1b
  40eb86:	rol    DWORD PTR [ecx+ebx*1-0x214b4a84],0xfc
  40eb8e:	mov    dh,BYTE PTR ds:0x5e752fe
  40eb94:	test   DWORD PTR [ebx+eax*1+0x1b9b6f15],eax
  40eb9b:	or     DWORD PTR [edi+0xf328a1e],edi
  40eba1:	and    DWORD PTR [eax+0x2c],ecx
  40eba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eba5:	jmp    0x356:0x4de96399
  40ebac:	fsubr  DWORD PTR [ecx+0x1c]
  40ebaf:	call   0x3af883b4
  40ebb4:	add    bh,BYTE PTR [esi+0x5bde667c]
  40ebba:	mov    bh,0x56
  40ebbc:	fld    TBYTE PTR [edx+0x2457e377]
  40ebc2:	lds    esp,FWORD PTR [ecx+0x68ef992c]
  40ebc8:	adc    ebx,eax
  40ebca:	addr16 jle 0x40ebc2
  40ebcd:	xor    ah,bh
  40ebcf:	inc    DWORD PTR [ebp-0x5f0a347c]
  40ebd5:	pop    es
  40ebd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebd7:	adc    bl,0x8d
  40ebda:	popf   
  40ebdb:	gs sbb edi,ecx
  40ebde:	dec    ebp
  40ebdf:	fimul  WORD PTR [edx+0x6a8c6d2e]
  40ebe5:	mov    esp,0x725114c3
  40ebea:	mov    edx,0xffa6e4f0
  40ebef:	outs   dx,BYTE PTR ds:[esi]
  40ebf0:	mov    ch,0x6f
  40ebf2:	xchg   esi,eax
  40ebf3:	or     eax,0x60bf4ef2
  40ebf8:	push   ecx
  40ebf9:	jns    0x40ec1d
  40ebfb:	mov    ds:0x87292327,al
  40ec00:	dec    esp
  40ec01:	scas   eax,DWORD PTR es:[edi]
  40ec02:	call   0xd60a:0x8e58cc1c
  40ec09:	push   esp
  40ec0a:	daa    
  40ec0b:	fs xchg esp,eax
  40ec0d:	mov    dl,0x25
  40ec0f:	push   0x58
  40ec11:	daa    
  40ec12:	mov    edi,0x13082cbe
  40ec17:	xchg   esp,eax
  40ec18:	push   ecx
  40ec19:	aad    0x83
  40ec1b:	pop    ss
  40ec1c:	push   ds
  40ec1d:	push   eax
  40ec1e:	mov    ?,WORD PTR [esi-0x21]
  40ec21:	mov    ch,0x5a
  40ec23:	(bad)  
  40ec24:	mov    dl,0x3
  40ec26:	(bad)  
  40ec27:	sahf   
  40ec28:	mov    edi,0x42f4192f
  40ec2d:	retf   0x208e
  40ec30:	lds    esp,FWORD PTR [ecx]
  40ec32:	dec    ecx
  40ec33:	push   edi
  40ec34:	and    BYTE PTR [eax],ch
  40ec36:	push   0x70fb54fd
  40ec3b:	les    esp,FWORD PTR [esi]
  40ec3d:	into   
  40ec3e:	or     ch,ah
  40ec40:	test   BYTE PTR [ecx+edx*2+0x28],dh
  40ec44:	dec    esp
  40ec45:	inc    ebx
  40ec46:	sahf   
  40ec47:	adc    ch,BYTE PTR [ebp+edx*4+0x56]
  40ec4b:	or     DWORD PTR [ebx+0x49],0x527d04dd
  40ec52:	adc    eax,0xd122f5fe
  40ec57:	mov    al,ds:0x91e1751d
  40ec5c:	add    eax,0x7b1431ee
  40ec61:	and    esi,eax
  40ec63:	xor    esp,ebx
  40ec65:	sbb    al,0x4d
  40ec67:	pusha  
  40ec68:	out    dx,al
  40ec69:	xor    BYTE PTR [edi+0x60e8718a],dl
  40ec6f:	movntps XMMWORD PTR [edx],xmm6
  40ec72:	out    0x10,al
  40ec74:	cwde   
  40ec75:	jae    0x40ec70
  40ec77:	enter  0x939b,0x6d
  40ec7b:	pop    ss
  40ec7c:	out    dx,eax
  40ec7d:	iret   
  40ec7e:	(bad)  
  40ec7f:	xlat   BYTE PTR ds:[ebx]
  40ec80:	in     eax,0x49
  40ec82:	and    eax,0x1711c5ea
  40ec87:	repz cs push edi
  40ec8a:	inc    ebp
  40ec8b:	add    DWORD PTR [eax+0x0],ebp
  40ec8e:	lods   al,BYTE PTR ds:[esi]
  40ec8f:	add    BYTE PTR [esi],ch
  40ec91:	mov    eax,0xd7e7ce36
  40ec96:	sti    
  40ec97:	xchg   edi,eax
  40ec98:	jae    0x40ec76
  40ec9a:	out    dx,al
  40ec9b:	outs   dx,BYTE PTR ds:[esi]
  40ec9c:	xadd   eax,ecx
  40ec9f:	sub    eax,0xf565985
  40eca4:	mov    cl,BYTE PTR [ebp+0x23]
  40eca7:	adc    eax,0x88c53de5
  40ecac:	rcr    BYTE PTR [esi],0x89
  40ecaf:	lahf   
  40ecb0:	mov    dl,0x3d
  40ecb2:	add    BYTE PTR [ebx],0xc8
  40ecb5:	pop    es
  40ecb6:	cmc    
  40ecb7:	mov    ebx,0xe2eb55a9
  40ecbc:	or     ah,bh
  40ecbe:	(bad)  
  40ecbf:	call   0x2cf406e8
  40ecc4:	jne    0x40ec5b
  40ecc6:	pop    esp
  40ecc7:	or     eax,0xe37cadb7
  40eccc:	sub    esp,DWORD PTR [eax+ecx*8]
  40eccf:	adc    bl,al
  40ecd1:	jp     0x40ece3
  40ecd3:	push   edx
  40ecd4:	mov    dh,0x96
  40ecd6:	out    dx,al
  40ecd7:	dec    ecx
  40ecd8:	mov    ds:0x38092923,al
  40ecdd:	pop    edx
  40ecde:	test   eax,0xc76fe2e0
  40ece3:	add    bl,bl
  40ece5:	xor    eax,0xb4cb1c4e
  40ecea:	sahf   
  40eceb:	sti    
  40ecec:	jp     0x40ecd6
  40ecee:	pop    ebx
  40ecef:	outs   dx,DWORD PTR ds:[esi]
  40ecf0:	push   cs
  40ecf1:	pop    esp
  40ecf2:	push   edx
  40ecf3:	aad    0xc1
  40ecf5:	repnz outs dx,BYTE PTR ds:[esi]
  40ecf7:	pushf  
  40ecf8:	call   0x39033cfe
  40ecfd:	mov    ebx,0xef8b8a86
  40ed02:	push   esp
  40ed03:	das    
  40ed04:	enter  0xce6f,0x65
  40ed08:	xchg   DWORD PTR [edx-0x59],eax
  40ed0b:	cmp    bl,ch
  40ed0d:	pop    ebx
  40ed0e:	mov    bl,0x31
  40ed10:	adc    al,0xab
  40ed12:	cld    
  40ed13:	fs xchg esi,eax
  40ed15:	(bad)  
  40ed16:	add    ebp,DWORD PTR [eax+0x1c]
  40ed19:	or     al,0xb
  40ed1b:	in     eax,0x13
  40ed1d:	sub    eax,0xeff8caf8
  40ed22:	jg     0x40ecda
  40ed24:	call   0x2143:0xb81994dc
  40ed2b:	push   ss
  40ed2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed2d:	gs push ecx
  40ed2f:	pop    eax
  40ed30:	xlat   BYTE PTR ds:[ebx]
  40ed31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed32:	xor    DWORD PTR [ebp+0x31048315],esi
  40ed38:	aad    0x43
  40ed3a:	das    
  40ed3b:	(bad)  
  40ed3c:	sbb    bh,BYTE PTR [edx-0x2d]
  40ed3f:	fdivr  QWORD PTR [edx-0x1]
  40ed42:	es std 
  40ed44:	outs   dx,BYTE PTR ds:[esi]
  40ed45:	cmp    eax,0x5db07dd1
  40ed4a:	cmp    al,0x79
  40ed4c:	mov    esp,0x6792f253
  40ed51:	dec    ebx
  40ed52:	push   0x6c1a454f
  40ed57:	push   0xffffffe2
  40ed59:	int    0x91
  40ed5b:	fidivr DWORD PTR [ebx-0x317ee504]
  40ed61:	in     eax,dx
  40ed62:	sahf   
  40ed63:	js     0x40ed74
  40ed65:	xchg   ebp,eax
  40ed66:	icebp  
  40ed67:	add    bl,BYTE PTR [ecx-0x264446f0]
  40ed6d:	into   
  40ed6e:	xlat   BYTE PTR ds:[ebx]
  40ed6f:	cmp    edx,DWORD PTR [esi+0x0]
  40ed72:	std    
  40ed73:	push   eax
  40ed74:	add    eax,0xa059ef94
  40ed79:	sahf   
  40ed7a:	popf   
  40ed7b:	push   esp
  40ed7c:	inc    esp
  40ed7d:	add    al,0x6
  40ed7f:	nop
  40ed80:	inc    ebx
  40ed81:	cld    
  40ed82:	cmp    edx,ebp
  40ed84:	cdq    
  40ed85:	push   edx
  40ed86:	push   edx
  40ed87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed88:	push   ebx
  40ed89:	aad    0xaa
  40ed8b:	lods   al,BYTE PTR ds:[esi]
  40ed8c:	xor    al,0x12
  40ed8e:	adc    bl,BYTE PTR [edx-0x569fd44b]
  40ed94:	ficomp DWORD PTR [ebx-0x59]
  40ed97:	enter  0xef42,0x7d
  40ed9b:	adc    BYTE PTR [eax-0x63],dh
  40ed9e:	stos   DWORD PTR es:[edi],eax
  40ed9f:	hlt    
  40eda0:	int    0x27
  40eda2:	mov    ch,0x48
  40eda4:	js     0x40ed6f
  40eda6:	sub    ah,al
  40eda8:	dec    ebx
  40eda9:	jmp    0x40ee1e
  40edab:	cmp    DWORD PTR [eax+0x7856cacc],0xac364e28
  40edb5:	cs ins DWORD PTR es:[edi],dx
  40edb7:	pop    eax
  40edb8:	int3   
  40edb9:	adc    BYTE PTR [eax],cl
  40edbb:	scas   al,BYTE PTR es:[edi]
  40edbc:	dec    eax
  40edbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edbe:	leave  
  40edbf:	loop   0x40edee
  40edc1:	push   ss
  40edc2:	mov    bl,0x41
  40edc4:	ror    BYTE PTR [esi],1
  40edc6:	out    dx,eax
  40edc7:	je     0x40ee35
  40edc9:	xor    ch,BYTE PTR [esi]
  40edcb:	jno    0x40edf0
  40edcd:	and    eax,edi
  40edcf:	test   bh,bh
  40edd1:	(bad)  
  40edd2:	aam    0xb6
  40edd4:	rcl    DWORD PTR [esp+ebx*1],0xdd
  40edd8:	fdecstp 
  40edda:	imul   ebx,DWORD PTR [edx],0x6
  40eddd:	pusha  
  40edde:	and    BYTE PTR [esi-0x5f],cl
  40ede1:	sub    DWORD PTR ds:0x283427b,esi
  40ede7:	out    0xd2,al
  40ede9:	ins    DWORD PTR es:[edi],dx
  40edea:	retf   
  40edeb:	outs   dx,BYTE PTR ds:[esi]
  40edec:	mov    esi,0x2e32f603
  40edf1:	stos   DWORD PTR es:[edi],eax
  40edf2:	aaa    
  40edf3:	mov    dh,0xa6
  40edf5:	push   esp
  40edf6:	inc    edi
  40edf7:	pop    ds
  40edf8:	jecxz  0x40edfa
  40edfa:	mov    eax,ds:0xf7862b48
  40edff:	rol    BYTE PTR [edx-0xb],cl
  40ee02:	bound  esp,QWORD PTR [edi-0xc14136a]
  40ee08:	out    0x94,eax
  40ee0a:	mov    edx,0x428bb51d
  40ee0f:	xor    DWORD PTR [edx+0x68],esp
  40ee12:	dec    edx
  40ee13:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee15:	jmp    0x1b4f:0xf600ebd7
  40ee1c:	retf   0x97d
  40ee1f:	xchg   edx,eax
  40ee20:	mov    esi,0xb10ce5ad
  40ee25:	sbb    al,0xe
  40ee27:	aas    
  40ee28:	cmc    
  40ee29:	test   eax,0xdf7ca8bc
  40ee2e:	sbb    eax,DWORD PTR [ecx]
  40ee30:	inc    edx
  40ee31:	pop    edi
  40ee32:	sub    DWORD PTR [esp+esi*2+0x7d],edx
  40ee36:	jmp    0x2987:0xe891ae86
  40ee3d:	repnz ror DWORD PTR [edi+0x36b3e6dc],1
  40ee44:	and    ebx,edi
  40ee46:	fsubr  QWORD PTR [ecx]
  40ee48:	cmp    DWORD PTR [edi],eax
  40ee4a:	sbb    DWORD PTR [ebx-0x78c8551d],eax
  40ee50:	push   ss
  40ee51:	(bad)  
  40ee52:	mov    ds:0x362ba7d2,al
  40ee57:	(bad)  
  40ee58:	mov    edx,0x72efbadc
  40ee5d:	data16 add BYTE PTR [ebp-0xf],al
  40ee61:	push   esi
  40ee62:	mov    eax,ds:0x3f56daa7
  40ee67:	out    0x2f,al
  40ee69:	jmp    0xacac:0x7d4934fa
  40ee70:	mov    esp,0x634817c
  40ee75:	aaa    
  40ee76:	pop    ebp
  40ee77:	add    eax,0xc8a6e982
  40ee7c:	das    
  40ee7d:	push   esi
  40ee7e:	pushf  
  40ee7f:	inc    edi
  40ee80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee81:	test   eax,0x4670c6d9
  40ee86:	mov    eax,0x3ff83075
  40ee8b:	(bad)  
  40ee8c:	lods   eax,DWORD PTR ds:[esi]
  40ee8d:	lahf   
  40ee8e:	je     0x40ee57
  40ee90:	push   esp
  40ee91:	push   ecx
  40ee92:	(bad)  
  40ee93:	push   edi
  40ee94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee95:	in     eax,0xba
  40ee97:	pop    ss
  40ee98:	jne    0x40ee4c
  40ee9a:	and    al,0xd9
  40ee9c:	test   DWORD PTR [ebx+0x5375550b],esp
  40eea2:	jne    0x40eef7
  40eea4:	mov    ecx,0x51819951
  40eea9:	bound  ebp,QWORD PTR [edi]
  40eeab:	imul   ecx,ebx,0x34
  40eeae:	js     0x40ee80
  40eeb0:	fild   QWORD PTR [esp+edx*4]
  40eeb3:	inc    eax
  40eeb5:	jno    0x40eec7
  40eeb7:	push   edi
  40eeb8:	shl    bh,1
  40eeba:	xchg   esp,eax
  40eebb:	ins    BYTE PTR es:[edi],dx
  40eebc:	loop   0x40ee43
  40eebe:	mov    BYTE PTR [ebx+0x10],bl
  40eec1:	xor    eax,0x35266910
  40eec6:	imul   ebx,DWORD PTR [ecx-0x30],0x3e
  40eeca:	cmp    eax,esp
  40eecc:	sahf   
  40eecd:	jbe    0x40ef10
  40eecf:	fadd   st(2),st
  40eed1:	jge    0x40ef2e
  40eed3:	std    
  40eed4:	fstp   QWORD PTR [ebp+0x4ef43900]
  40eeda:	dec    edx
  40eedb:	add    BYTE PTR [edi],dl
  40eedd:	lock jge 0x40ef14
  40eee0:	pop    ds
  40eee1:	lock add BYTE PTR [ecx],ah
  40eee4:	dec    eax
  40eee5:	or     ebx,DWORD PTR [ebx-0x37]
  40eee8:	loop   0x40eefc
  40eeea:	add    al,0x69
  40eeec:	icebp  
  40eeed:	mov    cl,0xd5
  40eeef:	dec    ebx
  40eef0:	shl    BYTE PTR [esi],1
  40eef2:	pop    es
  40eef3:	fld    TBYTE PTR [ecx+edi*4-0x78]
  40eef7:	push   0x6f6d2ac
  40eefc:	add    BYTE PTR [ebx],ah
  40eefe:	cmp    DWORD PTR [eax],ebx
  40ef00:	stos   BYTE PTR es:[edi],al
  40ef01:	(bad)  
  40ef02:	stos   BYTE PTR es:[edi],al
  40ef03:	push   0xffffffee
  40ef05:	sub    al,0x56
  40ef07:	jp     0x40eef6
  40ef09:	test   al,0x1c
  40ef0b:	push   ss
  40ef0c:	lock nop
  40ef0e:	sbb    ebx,DWORD PTR [esi+0x49]
  40ef11:	cmc    
  40ef12:	fcomp  DWORD PTR [ecx-0xc7ff5da]
  40ef18:	lods   eax,DWORD PTR ds:[esi]
  40ef19:	ret    
  40ef1a:	loop   0x40ef7d
  40ef1c:	cmp    eax,0x57e73c26
  40ef21:	mov    eax,ds:0xcee38848
  40ef26:	mov    BYTE PTR [eax],0x91
  40ef29:	outs   dx,BYTE PTR ds:[esi]
  40ef2a:	bound  esi,QWORD PTR [edi-0x768503c5]
  40ef30:	cmp    al,0x62
  40ef32:	ins    BYTE PTR es:[edi],dx
  40ef33:	inc    ecx
  40ef34:	xlat   BYTE PTR ds:[ebx]
  40ef35:	sbb    DWORD PTR [ebx+0x3a9524ae],esi
  40ef3b:	nop
  40ef3c:	bound  eax,QWORD PTR [esi]
  40ef3e:	mov    ch,0x5c
  40ef40:	outs   dx,BYTE PTR ds:[esi]
  40ef41:	outs   dx,BYTE PTR ds:[esi]
  40ef42:	imul   esi,DWORD PTR [esi],0x630ac61b
  40ef48:	push   0x14b4ab93
  40ef4d:	xchg   ebp,eax
  40ef4e:	(bad)  
  40ef4f:	sbb    cl,BYTE PTR [eax-0x1c7a3542]
  40ef55:	fcmovnb st,st(3)
  40ef57:	jmp    0xf51:0x91ec7164
  40ef5e:	mov    esp,0x2da0c176
  40ef63:	and    eax,0xbc3e55fa
  40ef68:	mov    esp,0x5c73102
  40ef6d:	mov    dl,0xef
  40ef6f:	push   ecx
  40ef70:	ins    DWORD PTR es:[edi],dx
  40ef71:	cld    
  40ef72:	lods   eax,DWORD PTR ds:[esi]
  40ef73:	test   ch,0xe9
  40ef76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef77:	rol    DWORD PTR [edx],0x66
  40ef7a:	sub    DWORD PTR [ebx],edx
  40ef7c:	sahf   
  40ef7d:	xchg   ecx,eax
  40ef7e:	xchg   DWORD PTR [esp+esi*8],ebp
  40ef81:	jge    0x40ef5a
  40ef83:	jp     0x40ef60
  40ef85:	dec    ebp
  40ef86:	xor    eax,0x268da4c3
  40ef8b:	in     al,0x2c
  40ef8d:	loope  0x40ef7e
  40ef8f:	jl     0x40efc3
  40ef91:	sbb    cl,dh
  40ef93:	or     ch,BYTE PTR [esi+0x256f192f]
  40ef99:	imul   ebx,DWORD PTR [ecx],0x39f80b7f
  40ef9f:	fdiv   st(5),st
  40efa2:	std    
  40efa3:	sbb    eax,0x4751d1d7
  40efa8:	mov    ss,WORD PTR [ebx]
  40efaa:	outs   dx,DWORD PTR ds:[esi]
  40efab:	dec    esp
  40efac:	jnp    0x40efeb
  40efae:	mov    bh,0x88
  40efb0:	jbe    0x40ef93
  40efb2:	retf   
  40efb3:	add    eax,0xae5bee30
  40efb8:	adc    cl,BYTE PTR [edx]
  40efba:	leave  
  40efbb:	pop    esi
  40efbc:	jg     0x40ef42
  40efbe:	ror    BYTE PTR [ebx],0x7a
  40efc1:	or     eax,0xa23712bc
  40efc6:	cmp    ah,bh
  40efc8:	pop    DWORD PTR [ebx-0x43]
  40efcb:	sbb    eax,0xd079ba68
  40efd0:	push   ebp
  40efd1:	jo     0x40efdd
  40efd3:	in     al,dx
  40efd4:	test   BYTE PTR [edi],cl
  40efd6:	inc    edx
  40efd7:	outs   dx,BYTE PTR ds:[esi]
  40efd8:	pop    ebp
  40efd9:	out    dx,al
  40efda:	in     eax,0xf3
  40efdc:	aad    0x60
  40efde:	or     eax,0x43374080
  40efe3:	add    BYTE PTR [eiz*8+0x388b6771],al
  40efea:	jo     0x40f031
  40efec:	jo     0x40efbb
  40efee:	inc    edx
  40efef:	stos   BYTE PTR es:[edi],al
  40eff0:	scas   al,BYTE PTR es:[edi]
  40eff1:	dec    edi
  40eff2:	std    
  40eff3:	clc    
  40eff4:	loopne 0x40f053
  40eff6:	or     dl,BYTE PTR [edx]
  40eff8:	out    dx,al
  40eff9:	ds (bad) 
  40effb:	jno    0x40f024
  40effd:	mov    al,BYTE PTR [esi+0x13]
  40f000:	mov    ebp,es
  40f002:	xchg   esi,eax
  40f003:	jg     0x40f027
  40f005:	in     al,0xcf
  40f007:	adc    DWORD PTR [edi-0x120049f7],ebx
  40f00d:	mov    esi,0x42625c0e
  40f012:	jp     0x40f08c
  40f014:	xor    dl,bh
  40f016:	scas   eax,DWORD PTR es:[edi]
  40f017:	xchg   esp,eax
  40f018:	or     BYTE PTR [ebx+0x3e],dh
  40f01b:	out    dx,eax
  40f01c:	call   0x1346:0x70cd4b9f
  40f023:	or     ebp,DWORD PTR [eax-0x271f646b]
  40f029:	xor    eax,0xc87939d3
  40f02e:	rol    edi,0x15
  40f031:	dec    ebp
  40f032:	loope  0x40f074
  40f034:	lods   eax,DWORD PTR ds:[esi]
  40f035:	pop    ebx
  40f036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f037:	cdq    
  40f038:	iret   
  40f039:	cmp    eax,0x9fdf9ca7
  40f03e:	mov    edx,DWORD PTR [ebp+0x3]
  40f041:	cdq    
  40f042:	xchg   esi,eax
  40f043:	fsubr  QWORD PTR [esi+edi*1+0x2998f5]
  40f04a:	call   FWORD PTR [eax]
  40f04c:	jns    0x40f060
  40f04e:	add    bh,al
  40f050:	pushf  
  40f051:	std    
  40f052:	call   0xb47b:0x65006348
  40f059:	sub    edi,DWORD PTR [esi+ebx*8]
  40f05c:	cdq    
  40f05d:	mov    BYTE PTR [ebx-0x36],dl
  40f060:	int3   
  40f061:	fistp  QWORD PTR [edi]
  40f063:	sbb    eax,0xce971090
  40f068:	in     eax,dx
  40f069:	pop    edi
  40f06a:	rcl    cl,cl
  40f06c:	(bad)  
  40f06d:	iret   
  40f06e:	out    dx,eax
  40f06f:	xor    ebx,edx
  40f071:	inc    ebx
  40f072:	int    0x66
  40f074:	rcr    DWORD PTR [ecx+0x4e],1
  40f077:	cmc    
  40f078:	test   BYTE PTR [ecx],al
  40f07a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f07b:	popf   
  40f07c:	pop    ss
  40f07d:	and    DWORD PTR ds:0xb1bcfd16,ebp
  40f083:	pop    edx
  40f084:	sub    eax,DWORD PTR [esi-0x38b88743]
  40f08a:	fnsave [edi-0x1d]
  40f08d:	mov    bh,0xfb
  40f08f:	add    esp,DWORD PTR [edi+esi*2]
  40f092:	mov    ebp,0xc2862a17
  40f097:	or     BYTE PTR [edx],al
  40f099:	outs   dx,DWORD PTR ds:[esi]
  40f09a:	dec    esi
  40f09b:	jb     0x40f05a
  40f09d:	scas   eax,DWORD PTR es:[edi]
  40f09e:	in     al,0x6a
  40f0a0:	ret    0xfb8c
  40f0a3:	xlat   BYTE PTR ds:[ebx]
  40f0a4:	mov    ecx,0xb0302a5b
  40f0a9:	arpl   WORD PTR [edi-0x34],bx
  40f0ac:	out    dx,al
  40f0ad:	repnz dec ebx
  40f0af:	aad    0xf2
  40f0b1:	cmp    eax,0xcfeda131
  40f0b6:	pop    ebp
  40f0b7:	sub    cl,BYTE PTR [ebx]
  40f0b9:	xchg   edx,eax
  40f0ba:	jl     0x40f0a3
  40f0bc:	cmp    DWORD PTR [eax+0x36df1f8],eax
  40f0c2:	xchg   DWORD PTR [edx+ecx*8-0x7c178161],esp
  40f0c9:	scas   al,BYTE PTR es:[edi]
  40f0ca:	sub    al,BYTE PTR [ebx-0x27]
  40f0cd:	iret   
  40f0ce:	lods   eax,DWORD PTR ds:[esi]
  40f0cf:	dec    edi
  40f0d0:	cli    
  40f0d1:	push   esp
  40f0d2:	scas   eax,DWORD PTR es:[edi]
  40f0d3:	xchg   ebx,eax
  40f0d4:	enter  0x7c2e,0xad
  40f0d8:	adc    al,0x25
  40f0da:	mov    eax,0xda197d3d
  40f0df:	ja     0x40f0fd
  40f0e1:	test   eax,0xcc0c6e56
  40f0e6:	pop    ss
  40f0e7:	mov    al,ds:0x8441fb12
  40f0ec:	cmp    DWORD PTR cs:[ecx],0x97da4508
  40f0f3:	(bad)  
  40f0f4:	mov    dl,BYTE PTR [esi]
  40f0f6:	(bad)  
  40f0f8:	mov    al,ds:0xa6d727fe
  40f0fd:	xor    ah,al
  40f0ff:	ret    
  40f100:	not    BYTE PTR [edx]
  40f102:	adc    eax,0x5019d2e9
  40f107:	daa    
  40f108:	mov    BYTE PTR [edi+0x5e833c8f],ch
  40f10e:	mov    edi,0xd07b13ab
  40f113:	inc    BYTE PTR [esi-0x60]
  40f116:	cmp    esp,ecx
  40f118:	mov    esi,0x12f161e9
  40f11d:	call   0x6694:0x9b1f20a1
  40f124:	cdq    
  40f125:	xchg   esi,eax
  40f126:	cmp    esp,DWORD PTR [ebp-0x52]
  40f129:	inc    edi
  40f12a:	inc    ecx
  40f12b:	sbb    esi,ebx
  40f12d:	outs   dx,DWORD PTR ds:[esi]
  40f12e:	adc    eax,0x76b4daa
  40f133:	sub    eax,0x7a9a32b3
  40f138:	pop    ebx
  40f139:	sub    esi,DWORD PTR [ebx]
  40f13b:	push   ecx
  40f13c:	fsubr  DWORD PTR fs:[edx]
  40f13f:	add    BYTE PTR [esi-0x6868c5ef],dh
  40f145:	xor    DWORD PTR [eax],ecx
  40f147:	hlt    
  40f148:	lods   al,BYTE PTR ds:[esi]
  40f149:	dec    edx
  40f14a:	and    DWORD PTR [ecx-0x28],0x89a8d051
  40f151:	push   ebx
  40f152:	adc    al,0x3e
  40f154:	xchg   BYTE PTR [eax-0x1178921b],ch
  40f15a:	fisttp QWORD PTR [eax+0x2f685bea]
  40f160:	cli    
  40f161:	ja     0x40f1c9
  40f163:	jmp    0x40f143
  40f165:	cs (bad) 
  40f167:	aad    0x64
  40f169:	cld    
  40f16a:	rcpps  xmm2,XMMWORD PTR [ebx+0x47]
  40f16e:	ficom  DWORD PTR ds:0xdca2d446
  40f174:	or     cl,BYTE PTR [esi+eax*1]
  40f177:	jnp    0x40f172
  40f179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f17a:	out    0xbe,al
  40f17c:	pop    es
  40f17d:	shl    BYTE PTR [esi-0x4a5102ca],cl
  40f183:	ins    BYTE PTR es:[edi],dx
  40f184:	ror    BYTE PTR [ecx+0x57297ac1],0xa1
  40f18b:	retf   
  40f18c:	cmp    bl,ch
  40f18e:	cmp    DWORD PTR [edx+0x70],ebp
  40f191:	xchg   BYTE PTR [eax+ebx*4+0x27d4f7b9],bl
  40f198:	lock std 
  40f19a:	inc    eax
  40f19b:	pop    ecx
  40f19c:	shl    cl,cl
  40f19e:	(bad)  
  40f19f:	mov    ah,0xe5
  40f1a1:	dec    ecx
  40f1a2:	in     eax,0x45
  40f1a4:	arpl   dx,si
  40f1a6:	sahf   
  40f1a7:	fst    QWORD PTR [ebx-0x53]
  40f1aa:	outs   dx,BYTE PTR ds:[esi]
  40f1ab:	popa   
  40f1ac:	lods   al,BYTE PTR ds:[esi]
  40f1ad:	(bad)  [eax]
  40f1af:	repnz loopne 0x40f1c7
  40f1b2:	into   
  40f1b3:	dec    edx
  40f1b4:	and    esp,eax
  40f1b6:	mov    eax,ds:0x7dcdeeec
  40f1bb:	inc    edi
  40f1bc:	pop    edx
  40f1bd:	dec    eax
  40f1be:	jecxz  0x40f1f5
  40f1c0:	cs (bad) 
  40f1c2:	scas   eax,DWORD PTR es:[edi]
  40f1c3:	mov    ebp,0x9447fcb4
  40f1c8:	fmul   st(4),st
  40f1ca:	mov    eax,ds:0x120a8966
  40f1cf:	loope  0x40f1e9
  40f1d1:	or     eax,0x5ff66849
  40f1d6:	test   al,0x2e
  40f1d8:	push   ecx
  40f1d9:	push   ds
  40f1da:	or     eax,0xd4b355d6
  40f1df:	cmp    dl,BYTE PTR [eax]
  40f1e1:	xor    DWORD PTR [esp+edi*4],ecx
  40f1e4:	jmp    0x40f1ef
  40f1e6:	adc    eax,0xb699f534
  40f1eb:	jno    0x40f1ea
  40f1ed:	div    DWORD PTR [edi]
  40f1ef:	cwde   
  40f1f0:	add    eax,0xb1371335
  40f1f5:	push   edx
  40f1f6:	mov    bl,0xca
  40f1f8:	into   
  40f1f9:	(bad)  
  40f1fa:	sub    ecx,esi
  40f1fc:	xchg   ebp,eax
  40f1fd:	push   0xc805cf77
  40f202:	fld    TBYTE PTR [eax+0x51]
  40f205:	test   eax,0x1f150bef
  40f20a:	adc    ebp,ebp
  40f20c:	int3   
  40f20d:	lds    ebx,FWORD PTR ds:0xbcbfba29
  40f213:	sar    DWORD PTR [edx-0x42450bf6],1
  40f219:	add    bh,BYTE PTR [ecx+0x5e3bb39b]
  40f21f:	stc    
  40f220:	(bad)  [edi-0x1a926c45]
  40f226:	push   ecx
  40f227:	push   cs
  40f228:	ja     0x40f279
  40f22a:	in     al,0x15
  40f22c:	fcmovb st,st(4)
  40f22e:	dec    eax
  40f22f:	(bad)  
  40f230:	test   cl,0x63
  40f233:	sub    eax,0xeb042b97
  40f238:	mov    esp,0xca1c74df
  40f23d:	test   BYTE PTR [edi],bl
  40f23f:	dec    ebp
  40f240:	push   ds
  40f241:	out    0x21,eax
  40f243:	sub    DWORD PTR [bx+si],esp
  40f246:	inc    esi
  40f247:	js     0x40f239
  40f249:	dec    ebp
  40f24a:	retf   
  40f24b:	mov    eax,es
  40f24d:	or     al,0x59
  40f24f:	jg     0x40f258
  40f251:	outs   dx,BYTE PTR ss:[esi]
  40f253:	enter  0x4dcd,0xbe
  40f257:	int    0x3f
  40f259:	mov    edi,0x14e4a881
  40f25e:	mov    bh,0x0
  40f260:	sti    
  40f261:	repz cmp al,0xa7
  40f264:	xchg   DWORD PTR [ebp+0x5c9b35e8],ebx
  40f26a:	and    eax,edi
  40f26c:	sar    DWORD PTR [eax+0x189ba7b9],0x26
  40f273:	xor    BYTE PTR [ecx-0x45],0xc
  40f277:	xor    eax,0x6fe18fba
  40f27c:	jg     0x40f254
  40f27e:	push   0x9b091e1
  40f283:	cmc    
  40f284:	and    eax,0xc5b10609
  40f289:	pop    edx
  40f28a:	call   0xd5163703
  40f28f:	mov    cl,0x41
  40f291:	jns    0x40f2cc
  40f293:	lods   al,BYTE PTR ds:[esi]
  40f294:	cwde   
  40f295:	and    bl,BYTE PTR [edx+0x72735d50]
  40f29b:	or     eax,0xfaa32aa1
  40f2a0:	imul   esi,DWORD PTR [ebx+0x4416702e],0xf180cbf4
  40f2aa:	ret    0xfac4
  40f2ad:	fnstenv [edi+edx*8]
  40f2b0:	cwde   
  40f2b1:	jo     0x40f2cf
  40f2b3:	push   cs
  40f2b4:	jmp    0x40f277
  40f2b6:	icebp  
  40f2b7:	test   eax,0x274937f0
  40f2bc:	xchg   ebx,eax
  40f2bd:	(bad)  
  40f2be:	int    0x95
  40f2c0:	popf   
  40f2c1:	sar    DWORD PTR [ecx],0xce
  40f2c4:	pushf  
  40f2c5:	xor    DWORD PTR [ecx+0x6fb2db1d],0x26
  40f2cc:	mov    bh,0x9f
  40f2ce:	mov    WORD PTR [esi+0x6c0a2943],ds
  40f2d4:	js     0x40f32f
  40f2d6:	outs   dx,BYTE PTR ds:[esi]
  40f2d7:	movq   mm1,mm1
  40f2da:	shl    DWORD PTR [edx],0x45
  40f2dd:	mov    bl,0x90
  40f2df:	scas   eax,DWORD PTR es:[edi]
  40f2e0:	pop    ss
  40f2e1:	or     bl,BYTE PTR [ecx+0x65]
  40f2e4:	add    al,0xbe
  40f2e6:	mul    DWORD PTR [edi-0x4cecb10c]
  40f2ec:	dec    eax
  40f2ed:	mov    bh,0x38
  40f2ef:	repnz inc esp
  40f2f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2f2:	aas    
  40f2f3:	sub    BYTE PTR [ebx-0xac3f864],dh
  40f2f9:	inc    edx
  40f2fa:	sbb    esp,esi
  40f2fc:	sub    BYTE PTR [ecx-0x71b511d3],ch
  40f302:	mov    al,ds:0x218398c1
  40f307:	sbb    DWORD PTR [edx-0x76],ebp
  40f30a:	sub    BYTE PTR [edi-0x67],dl
  40f30d:	fisttp QWORD PTR [ebp-0x303314b]
  40f313:	sub    ebp,DWORD PTR [esi]
  40f315:	popa   
  40f316:	out    0x4d,al
  40f318:	push   ebp
  40f319:	imul   di,WORD PTR es:[ebx],0xffbd
  40f31e:	repnz lods al,BYTE PTR ds:[esi]
  40f320:	or     DWORD PTR [ebx+ebx*2-0x3a3e5e02],edx
  40f327:	lds    ecx,FWORD PTR ds:0x180ef9f3
  40f32d:	and    dl,BYTE PTR [edi+0x5f]
  40f330:	in     eax,0xd0
  40f332:	rol    BYTE PTR es:[eax],0xd8
  40f336:	ret    
  40f337:	pop    ebx
  40f338:	or     BYTE PTR [eax-0x40bf1358],dh
  40f33e:	(bad)  
  40f33f:	stc    
  40f340:	adc    dl,cl
  40f342:	mov    esp,0xdd768585
  40f347:	push   0x45
  40f349:	adc    eax,0xd8151de3
  40f34e:	int3   
  40f34f:	mov    ecx,0xfd43a38e
  40f354:	idiv   BYTE PTR [eax-0x1ed74ce9]
  40f35a:	xchg   esi,eax
  40f35b:	(bad)  
  40f35c:	das    
  40f35d:	add    al,0xd6
  40f35f:	dec    ebp
  40f360:	in     eax,0x53
  40f362:	fs pop edx
  40f364:	(bad)  
  40f365:	mov    cl,0x8f
  40f367:	inc    eax
  40f368:	mov    al,0xf8
  40f36a:	aaa    
  40f36b:	fwait
  40f36c:	repnz or al,0xf5
  40f36f:	jnp    0x40f3d6
  40f371:	xchg   esi,eax
  40f372:	mov    bl,0xa3
  40f374:	popf   
  40f375:	push   cs
  40f376:	mov    edi,cs
  40f378:	fnstcw WORD PTR [ebp-0x79]
  40f37b:	mov    esp,0x78b1e8f
  40f380:	or     DWORD PTR ds:0xdb96499,esp
  40f386:	pop    edi
  40f387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f388:	(bad)  
  40f389:	bound  edi,QWORD PTR [esi+ecx*4]
  40f38c:	dec    ebp
  40f38d:	pop    ds
  40f38e:	or     eax,0x79ded21c
  40f393:	loopne 0x40f3dd
  40f395:	cli    
  40f396:	and    al,0xb2
  40f398:	add    al,0x96
  40f39a:	add    bh,al
  40f39c:	rcl    DWORD PTR [esi],cl
  40f39e:	ins    DWORD PTR es:[edi],dx
  40f39f:	icebp  
  40f3a0:	lea    ebx,[ebp+0x114f3d8f]
  40f3a6:	jb     0x40f361
  40f3a8:	pusha  
  40f3a9:	sub    DWORD PTR [ebx-0x15],ebp
  40f3ac:	inc    esi
  40f3ad:	push   eax
  40f3ae:	push   esp
  40f3af:	ins    BYTE PTR es:[edi],dx
  40f3b0:	mov    ebp,0x8a1efaa4
  40f3b5:	push   edx
  40f3b6:	dec    ecx
  40f3b7:	fnstsw WORD PTR [ebp+0x2c2da55d]
  40f3bd:	dec    esp
  40f3be:	inc    ebx
  40f3bf:	xor    ebp,DWORD PTR [edi+0x3c429bf7]
  40f3c5:	xchg   ebx,eax
  40f3c6:	icebp  
  40f3c7:	adc    DWORD PTR [ebp+0x68],ecx
  40f3ca:	out    0xd7,al
  40f3cc:	jp     0x40f434
  40f3ce:	aas    
  40f3cf:	dec    ebx
  40f3d0:	repnz cmp eax,0xcf4196e4
  40f3d6:	je     0x40f368
  40f3d8:	jae    0x40f430
  40f3da:	or     dh,ah
  40f3dc:	popa   
  40f3dd:	inc    ecx
  40f3de:	icebp  
  40f3df:	mov    esp,0x7946b1f5
  40f3e4:	sub    bl,BYTE PTR [edi]
  40f3e6:	sti    
  40f3e7:	and    BYTE PTR [eax],dh
  40f3e9:	xchg   edi,eax
  40f3ea:	shr    BYTE PTR [ecx],1
  40f3ec:	xlat   BYTE PTR ds:[ebx]
  40f3ed:	aad    0xcb
  40f3ef:	in     eax,0x41
  40f3f1:	mov    bl,0x54
  40f3f3:	into   
  40f3f4:	sbb    al,0x85
  40f3f6:	fs stc 
  40f3f8:	call   0x4dc0:0xa98540a9
  40f3ff:	dec    ebp
  40f400:	jbe    0x40f45d
  40f402:	mov    ebp,0xd14c2a8a
  40f407:	adc    DWORD PTR [esi],ebp
  40f409:	sbb    DWORD PTR [ebx-0x638917bc],edx
  40f40f:	lods   al,BYTE PTR ds:[esi]
  40f410:	(bad)  
  40f411:	(bad)  
  40f412:	mov    ebx,DWORD PTR [edx+0x3018a593]
  40f418:	int    0xeb
  40f41a:	(bad)
  40f41e:	(bad)  
  40f41f:	cwde   
  40f420:	idiv   ecx
  40f422:	test   BYTE PTR [edx+edi*1],ah
  40f425:	xor    eax,0x1562d3c5
  40f42a:	xor    DWORD PTR [ebx-0x6a159792],ecx
  40f430:	stc    
  40f431:	mov    BYTE PTR [esi],bl
  40f433:	cli    
  40f434:	push   ds
  40f435:	xchg   edx,eax
  40f436:	in     al,0x89
  40f438:	stc    
  40f439:	ins    DWORD PTR es:[edi],dx
  40f43a:	jno    0x40f430
  40f43c:	mov    al,ds:0xe87423ea
  40f441:	or     DWORD PTR [edx+ebx*8-0x2b],ebp
  40f445:	rcr    edi,0x7f
  40f448:	inc    ebp
  40f449:	scas   eax,DWORD PTR es:[edi]
  40f44a:	jae    0x40f422
  40f44c:	fldcw  WORD PTR [esi-0x4c]
  40f44f:	mov    edx,DWORD PTR [ebp-0x3c]
  40f452:	sub    al,BYTE PTR [esi+0x67]
  40f455:	inc    esi
  40f456:	mov    WORD PTR [ebx+0xe],gs
  40f459:	imul   esi,DWORD PTR [edi-0x6],0xc794af2a
  40f460:	rcr    DWORD PTR [edi],1
  40f462:	mov    dl,BYTE PTR [esi-0x7e]
  40f465:	sub    dh,BYTE PTR [edx+0x61]
  40f468:	jmp    0xbb6d1e78
  40f46d:	cmp    DWORD PTR [edx-0x106ec5c1],0x4382af50
  40f477:	cld    
  40f478:	xchg   ecx,eax
  40f479:	mov    ah,0x7f
  40f47b:	mov    ecx,0x6b82e4e7
  40f480:	jl     0x40f402
  40f482:	in     eax,0xb4
  40f484:	sbb    DWORD PTR [edi-0x61d0133f],0x8eb4025f
  40f48e:	cli    
  40f48f:	dec    edi
  40f490:	cmp    DWORD PTR [ecx+0x6b1d6ca6],edi
  40f496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f497:	test   dl,dl
  40f499:	sub    eax,ebp
  40f49b:	mov    esp,0x8775edd6
  40f4a0:	push   esi
  40f4a1:	cmp    ecx,DWORD PTR [ebp-0x53add34d]
  40f4a7:	jne    0x40f492
  40f4a9:	and    ch,dl
  40f4ab:	fsubr  QWORD PTR [esi-0x68]
  40f4ae:	inc    ebx
  40f4af:	shl    DWORD PTR [ebx-0x140abd9c],0x7a
  40f4b6:	enter  0x6fb0,0x8a
  40f4ba:	fisttp WORD PTR [ebx]
  40f4bc:	sub    al,0xac
  40f4be:	scas   eax,DWORD PTR es:[edi]
  40f4bf:	loop   0x40f4e8
  40f4c1:	pop    eax
  40f4c2:	popf   
  40f4c3:	inc    ebp
  40f4c4:	cld    
  40f4c5:	mov    ebx,0xabc96667
  40f4ca:	imul   eax,DWORD PTR [ebp+eax*1+0x19bddcd2],0x61
  40f4d2:	and    dl,ah
  40f4d4:	ins    DWORD PTR es:[edi],dx
  40f4d5:	lods   al,BYTE PTR ds:[esi]
  40f4d6:	in     eax,dx
  40f4d7:	stos   DWORD PTR es:[edi],eax
  40f4d8:	sbb    eax,0xfc1d036f
  40f4dd:	imul   ebx,DWORD PTR [edx-0x60],0x2cc4cb2b
  40f4e4:	(bad)  
  40f4e5:	mov    eax,ds:0x6c8dfb8
  40f4ea:	push   ebx
  40f4eb:	mov    bl,0xa3
  40f4ed:	pop    edi
  40f4ee:	jp     0x40f52a
  40f4f0:	adc    dh,bh
  40f4f2:	jge    0x40f570
  40f4f4:	mov    esp,0x9af51c5
  40f4f9:	fwait
  40f4fa:	inc    esi
  40f4fb:	adc    al,0x17
  40f4fd:	mov    eax,ds:0x15dee9d0
  40f502:	mov    bl,0xa0
  40f504:	ja     0x40f509
  40f506:	inc    ebx
  40f507:	and    al,0xbe
  40f509:	cmp    DWORD PTR [edi-0x5e],esi
  40f50c:	push   es
  40f50d:	cmp    eax,ebp
  40f50f:	jp     0x40f560
  40f511:	loop   0x40f4e3
  40f513:	(bad)  
  40f514:	mov    ebp,0x64706249
  40f519:	cli    
  40f51a:	(bad)  
  40f51b:	loopne 0x40f51e
  40f51d:	je     0x40f4ea
  40f51f:	add    eax,0xcd732132
  40f524:	cwde   
  40f525:	cdq    
  40f526:	jle    0x40f53a
  40f528:	retf   
  40f529:	push   ds
  40f52a:	rcr    DWORD PTR [ecx],0xbb
  40f52d:	push   0x384a610e
  40f532:	clc    
  40f533:	(bad)  
  40f534:	std    
  40f535:	jno    0x40f4d4
  40f537:	mov    al,ds:0x751a7e5a
  40f53c:	push   edi
  40f53d:	cmp    DWORD PTR [esi],0xffffffec
  40f540:	adc    al,0x3f
  40f542:	inc    ecx
  40f543:	inc    edx
  40f544:	mov    ebx,eax
  40f546:	int    0x96
  40f548:	adc    ecx,ebp
  40f54a:	hlt    
  40f54b:	push   ebp
  40f54c:	xchg   ecx,eax
  40f54d:	and    ebp,DWORD PTR [ecx]
  40f54f:	(bad)  
  40f550:	out    0xb0,al
  40f552:	mov    ds:0x7765b348,al
  40f557:	jge    0x40f4e0
  40f559:	jmp    0x35ad732c
  40f55e:	cli    
  40f55f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f560:	ins    DWORD PTR es:[edi],dx
  40f561:	mov    dh,0xee
  40f563:	push   esi
  40f564:	mov    dh,0x27
  40f566:	leave  
  40f567:	mov    ds:0x4b7e3c62,al
  40f56c:	aaa    
  40f56d:	push   ds
  40f56e:	(bad)  
  40f571:	ins    BYTE PTR es:[edi],dx
  40f572:	add    al,0xf6
  40f574:	inc    edi
  40f575:	jnp    0x40f4fa
  40f577:	xchg   ebx,eax
  40f578:	clc    
  40f579:	ss pop ebp
  40f57b:	dec    edi
  40f57c:	ja     0x40f5c2
  40f57e:	inc    edi
  40f57f:	inc    edi
  40f580:	mov    ecx,0xdd5e1e0d
  40f585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f586:	bndldx bnd0,[edi+0x4f32c8fb]
  40f58d:	mov    bh,0xa1
  40f58f:	std    
  40f590:	inc    edx
  40f591:	jp     0x40f5b1
  40f593:	cdq    
  40f594:	aaa    
  40f595:	fistp  DWORD PTR [ecx]
  40f597:	and    BYTE PTR ds:0xa2570210,ch
  40f59d:	jb     0x40f56b
  40f59f:	mov    bl,0x4c
  40f5a1:	sub    edx,DWORD PTR fs:[ecx]
  40f5a4:	ss into 
  40f5a6:	sahf   
  40f5a7:	fbld   TBYTE PTR [esi]
  40f5a9:	push   es
  40f5aa:	add    DWORD PTR [eax+0xaedb030],ebp
  40f5b0:	mov    dl,0xc
  40f5b2:	add    al,0xfe
  40f5b4:	or     bl,BYTE PTR [edx+0x27]
  40f5b7:	mov    bh,0xf9
  40f5b9:	test   DWORD PTR ds:0x50ac19fc,0x38230164
  40f5c3:	aam    0x4
  40f5c5:	xchg   edi,eax
  40f5c6:	js     0x40f629
  40f5c8:	cmc    
  40f5c9:	dec    ebx
  40f5ca:	popf   
  40f5cb:	jg     0x40f55d
  40f5cd:	jp     0x40f579
  40f5cf:	dec    esi
  40f5d0:	aad    0x78
  40f5d2:	shr    BYTE PTR [ebx],1
  40f5d4:	int3   
  40f5d5:	pop    es
  40f5d6:	lea    ebp,[ecx]
  40f5d8:	jno    0x40f64f
  40f5da:	aaa    
  40f5db:	sub    al,0xf6
  40f5dd:	gs aad 0xc6
  40f5e0:	adc    al,0x27
  40f5e2:	mov    BYTE PTR [edx],bl
  40f5e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5e5:	jo     0x40f5a8
  40f5e7:	mov    dh,0x2c
  40f5e9:	mov    cs,WORD PTR [ecx+0x538eb4d1]
  40f5ef:	hlt    
  40f5f0:	sub    BYTE PTR [ecx+0x0],0x4e
  40f5f4:	int    0xf6
  40f5f6:	mov    ecx,0xed439387
  40f5fb:	(bad)  
  40f5fc:	xor    DWORD PTR [eax+0x42],esp
  40f5ff:	dec    eax
  40f600:	sub    BYTE PTR [esi-0x20a8b467],0x5f
  40f607:	in     eax,dx
  40f608:	jmp    0xcac430f5
  40f60d:	mov    dl,0x25
  40f60f:	and    DWORD PTR [ecx+0x2f],eax
  40f612:	xchg   esi,eax
  40f613:	mov    WORD PTR [edx-0x21],ss
  40f616:	jnp    0x40f663
  40f618:	push   ecx
  40f619:	and    eax,0xa65c0a59
  40f61e:	popf   
  40f61f:	(bad)  
  40f620:	std    
  40f621:	fwait
  40f622:	jo     0x40f610
  40f624:	dec    ebp
  40f625:	mov    dh,0x34
  40f627:	adc    DWORD PTR [ecx],eax
  40f629:	lods   al,BYTE PTR ds:[esi]
  40f62a:	jne    0x40f5ee
  40f62c:	sub    eax,0x90ed2702
  40f631:	xlat   BYTE PTR ds:[ebx]
  40f632:	push   DWORD PTR [edx-0x27]
  40f635:	mov    ds,WORD PTR [ecx+0x4401a28b]
  40f63b:	inc    ecx
  40f63c:	ds sti 
  40f63e:	cmp    al,0xb2
  40f640:	in     eax,0xc2
  40f642:	outs   dx,BYTE PTR ds:[esi]
  40f643:	ficom  WORD PTR [ebp-0x254318e9]
  40f649:	mov    edi,0x2e5b6c0f
  40f64e:	scas   al,BYTE PTR es:[edi]
  40f64f:	fcom   DWORD PTR [esi]
  40f651:	pop    edx
  40f652:	dec    ebx
  40f653:	xchg   BYTE PTR [edi-0x4a],dh
  40f656:	sbb    ecx,edi
  40f658:	adc    eax,0xf486277d
  40f65d:	add    eax,0x6af2876e
  40f662:	test   al,0x1
  40f664:	sbb    al,0x30
  40f666:	inc    eax
  40f667:	into   
  40f668:	inc    ebx
  40f669:	xor    eax,ebp
  40f66b:	add    ebp,DWORD PTR [ecx+eax*2-0x10b6858e]
  40f672:	adc    ch,dl
  40f674:	sbb    bh,BYTE PTR [ecx-0x32adb405]
  40f67a:	mov    al,ds:0x65c38652
  40f67f:	jae    0x40f647
  40f681:	mov    WORD PTR [ebp-0x1e],?
  40f684:	and    eax,0x2077782d
  40f689:	call   0x13bd:0x1de0cca5
  40f690:	sub    BYTE PTR [ecx],0xa4
  40f693:	loop   0x40f691
  40f695:	clc    
  40f696:	fnstcw WORD PTR [ecx+0x1ff88efe]
  40f69c:	jmp    0x40f6fb
  40f69e:	popf   
  40f69f:	jnp    0x40f664
  40f6a1:	jle    0x40f6e2
  40f6a3:	outs   dx,BYTE PTR ds:[esi]
  40f6a4:	int    0x9
  40f6a6:	ficom  WORD PTR [ecx+0x1b]
  40f6a9:	push   cs
  40f6aa:	jp     0x40f694
  40f6ac:	add    BYTE PTR [edx+0x32],ah
  40f6af:	mov    dl,0xd5
  40f6b1:	ins    DWORD PTR es:[edi],dx
  40f6b2:	cmp    ebp,DWORD PTR [ebp+0xe]
  40f6b5:	dec    ebx
  40f6b6:	repz mov esi,0x6420ed88
  40f6bc:	iret   
  40f6bd:	stos   DWORD PTR es:[edi],eax
  40f6be:	mov    eax,0xb4da8521
  40f6c3:	cdq    
  40f6c4:	mov    eax,0x117f058
  40f6c9:	and    bh,BYTE PTR [esi-0x796adaa]
  40f6cf:	jge    0x40f747
  40f6d1:	retf   0x88d6
  40f6d4:	daa    
  40f6d5:	jb     0x40f6d3
  40f6d7:	loopne 0x40f70d
  40f6d9:	cmp    al,0x96
  40f6db:	test   cl,dl
  40f6dd:	(bad)  
  40f6de:	ja     0x40f6b0
  40f6e0:	mov    cl,BYTE PTR ds:0x6ba33c5
  40f6e6:	or     DWORD PTR [ecx+0x36],edx
  40f6e9:	int3   
  40f6ea:	loope  0x40f6d9
  40f6ec:	sub    al,0x3b
  40f6ee:	(bad)
  40f6f2:	and    eax,0xd543e8ed
  40f6f7:	(bad)  
  40f6f8:	mov    ah,0xec
  40f6fa:	mov    ecx,0x32967f82
  40f6ff:	fisttp QWORD PTR [esi-0x7b]
  40f702:	ret    
  40f703:	dec    esp
  40f704:	and    DWORD PTR [edx-0x6b],ecx
  40f707:	add    DWORD PTR [edx-0x33b7e255],ecx
  40f70d:	fidivr WORD PTR [ecx]
  40f70f:	fiadd  DWORD PTR [ebx]
  40f711:	fcmovne st,st(7)
  40f713:	inc    ebp
  40f714:	aam    0x1d
  40f716:	popa   
  40f717:	jg     0x40f73f
  40f719:	cli    
  40f71a:	out    0x3,al
  40f71c:	(bad)  
  40f71d:	fisttp DWORD PTR [ecx+ecx*1+0x9]
  40f721:	jmp    0x8a39:0x1ca78dbe
  40f728:	push   esi
  40f729:	into   
  40f72a:	inc    esi
  40f72b:	jmp    0x33b3c7bb
  40f730:	pop    ecx
  40f731:	rcr    ebx,0x7
  40f734:	mov    eax,ds:0xdda77674
  40f739:	lock dec ecx
  40f73b:	sub    DWORD PTR [esi+0x9],edx
  40f73e:	adc    esi,DWORD PTR [ebp-0x55]
  40f741:	retf   
  40f742:	psllq  xmm7,XMMWORD PTR [ebp-0x39db757d]
  40f74a:	test   eax,0xf54d360a
  40f74f:	pop    eax
  40f750:	sti    
  40f751:	test   eax,0x864cf849
  40f756:	icebp  
  40f757:	aad    0x6c
  40f759:	dec    edx
  40f75a:	inc    edx
  40f75b:	jp     0x40f6fe
  40f75d:	in     eax,0xa3
  40f75f:	mov    ch,0x60
  40f761:	xlat   BYTE PTR ds:[ebx]
  40f762:	in     eax,0x33
  40f764:	cmp    ah,BYTE PTR [ebp+ecx*4+0x161cb5e1]
  40f76b:	outs   dx,DWORD PTR ds:[esi]
  40f76c:	sbb    DWORD PTR [edx],edx
  40f76e:	stc    
  40f76f:	dec    eax
  40f770:	xlat   BYTE PTR ds:[ebx]
  40f771:	sti    
  40f772:	mov    bl,0xd8
  40f774:	ins    DWORD PTR es:[edi],dx
  40f775:	jl     0x40f70e
  40f777:	sbb    al,0xee
  40f779:	sti    
  40f77a:	enter  0xf855,0xa8
  40f77e:	(bad)  
  40f77f:	cmp    al,0x37
  40f781:	mov    esi,0x477d2ab0
  40f786:	lea    esp,[ebp+0x10]
  40f789:	jmp    0xeb43:0x8dd4f7
  40f790:	jb     0x40f80f
  40f792:	add    esp,DWORD PTR ds:0xdefa395a
  40f798:	es ja  0x40f77f
  40f79b:	cmp    eax,0x71f9a72f
  40f7a0:	std    
  40f7a1:	push   0xab64470f
  40f7a6:	jne    0x40f747
  40f7a8:	fild   DWORD PTR [ebp+0xd]
  40f7ab:	lods   al,BYTE PTR ds:[esi]
  40f7ac:	pop    esi
  40f7ad:	mov    ebp,0xbf4dae44
  40f7b2:	cmc    
  40f7b3:	inc    esp
  40f7b4:	and    esp,ecx
  40f7b6:	aaa    
  40f7b7:	or     al,0xda
  40f7b9:	mov    esi,0xfc94b1b2
  40f7be:	call   0xb44e:0xe9dd50f6
  40f7c5:	ror    BYTE PTR [esi+0x72cbf72e],cl
  40f7cb:	repnz mov al,ds:0x2e25044e
  40f7d1:	in     eax,dx
  40f7d2:	fistp  WORD PTR [edx-0x1da187cb]
  40f7d8:	mov    ds:0xfde93171,al
  40f7dd:	inc    ecx
  40f7de:	aad    0x8f
  40f7e0:	rcl    eax,cl
  40f7e2:	push   eax
  40f7e3:	xor    dh,BYTE PTR [ecx+0x0]
  40f7e6:	sbb    ebx,DWORD PTR [edi-0x34]
  40f7e9:	xlat   BYTE PTR ds:[ebx]
  40f7ea:	ficom  DWORD PTR [ebx]
  40f7ec:	loop   0x40f86d
  40f7ee:	add    BYTE PTR [eax+0x3d],al
  40f7f1:	xchg   edi,eax
  40f7f2:	idiv   DWORD PTR [ecx]
  40f7f4:	mov    ch,0xed
  40f7f6:	pop    ebx
  40f7f7:	add    DWORD PTR [edi-0x3c],eax
  40f7fa:	test   BYTE PTR [edx-0x18],0xa7
  40f7fe:	sbb    eax,0xa56887dc
  40f803:	mov    ch,0x71
  40f805:	mov    ebp,DWORD PTR [ebx+0x25]
  40f808:	aaa    
  40f809:	xor    eax,0x7f4e73fa
  40f80e:	push   0xffffffbb
  40f810:	jg     0x40f87b
  40f812:	leave  
  40f813:	sar    BYTE PTR [eax-0x42],cl
  40f816:	loope  0x40f7fd
  40f818:	sbb    eax,0x4b639a04
  40f81d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f81e:	lock and al,0x27
  40f821:	jge    0x40f841
  40f823:	(bad)
  40f826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f827:	mov    bh,BYTE PTR [esi+eiz*1+0x6e84f415]
  40f82e:	inc    ebp
  40f82f:	stos   BYTE PTR es:[edi],al
  40f830:	fwait
  40f831:	or     BYTE PTR [ebp-0x1d9207b0],cl
  40f837:	jg     0x40f7fd
  40f839:	mov    edx,0x727dd1cf
  40f83e:	push   esp
  40f83f:	and    bh,BYTE PTR [esi]
  40f841:	int    0x11
  40f843:	ins    DWORD PTR es:[edi],dx
  40f844:	push   es
  40f845:	mov    edi,0x1a04a7f
  40f84a:	stos   DWORD PTR es:[edi],eax
  40f84b:	jg     0x40f8c7
  40f84d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f84e:	fs sbb eax,0x58756e7f
  40f854:	jl     0x40f83a
  40f856:	inc    edx
  40f857:	or     eax,0x5af8243f
  40f85c:	ret    0x9be8
  40f85f:	xchg   ebp,eax
  40f860:	jbe    0x40f8e0
  40f862:	mov    ds:0x4748498d,al
  40f867:	int3   
  40f868:	iret   
  40f869:	inc    esp
  40f86a:	inc    ecx
  40f86b:	or     al,0x35
  40f86d:	retf   0x1b3d
  40f870:	(bad)  
  40f871:	(bad)  
  40f872:	mov    al,ds:0x259011c6
  40f877:	clc    
  40f878:	xor    esi,edi
  40f87a:	sti    
  40f87b:	add    edx,esp
  40f87d:	add    ebp,esp
  40f87f:	mov    esp,0xe8955604
  40f884:	test   DWORD PTR [ebx],esp
  40f886:	and    al,dl
  40f888:	ins    BYTE PTR es:[edi],dx
  40f889:	xchg   ebx,eax
  40f88a:	xor    DWORD PTR [edx],ebx
  40f88c:	ret    
  40f88d:	push   ds
  40f88e:	or     ah,BYTE PTR [edx+eiz*2]
  40f891:	in     eax,0xed
  40f893:	jmp    0x7af4e69e
  40f898:	inc    ebp
  40f899:	jmp    0x14fce110
  40f89e:	sbb    DWORD PTR [eax-0x36],esi
  40f8a1:	jnp    0x40f8aa
  40f8a3:	xor    cl,BYTE PTR [ebp-0x27a0517a]
  40f8a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8aa:	rcl    DWORD PTR [esi-0x56],cl
  40f8ad:	fstp   DWORD PTR [ebx+0x65]
  40f8b0:	sbb    dh,BYTE PTR [eax+0x4b]
  40f8b3:	or     al,al
  40f8b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8b6:	jb     0x40f86f
  40f8b8:	mov    ah,0x89
  40f8ba:	pop    esp
  40f8bb:	outs   dx,DWORD PTR ds:[esi]
  40f8bc:	push   0xe
  40f8be:	jb     0x40f8db
  40f8c0:	ins    BYTE PTR es:[edi],dx
  40f8c1:	pop    edx
  40f8c2:	mov    eax,0xa5693278
  40f8c7:	shr    BYTE PTR [ebp-0x58b7f41d],cl
  40f8cd:	xor    eax,0x3dfbd62b
  40f8d2:	pop    edx
  40f8d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8d4:	aad    0x3b
  40f8d6:	adc    DWORD PTR [ebp+0xe3cb62b],ebx
  40f8dc:	repz and DWORD PTR gs:[edi],esp
  40f8e0:	inc    edi
  40f8e1:	addr16 mov ds:0xd60e,eax
  40f8e5:	lods   al,BYTE PTR ds:[esi]
  40f8e6:	std    
  40f8e7:	inc    edx
  40f8e8:	jge    0x40f8cd
  40f8ea:	sbb    edi,DWORD PTR [eax]
  40f8ec:	jns    0x40f95e
  40f8ee:	fcom   QWORD PTR [ebp+ebp*8-0x37d0b4b3]
  40f8f5:	cmc    
  40f8f6:	sbb    eax,0xa56e74c4
  40f8fb:	out    dx,eax
  40f8fc:	adc    DWORD PTR [ebp+eiz*4-0x11b0e9cb],ecx
  40f903:	in     al,0xad
  40f905:	jge    0x40f8a9
  40f907:	rcl    ebx,0x41
  40f90a:	popf   
  40f90b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f90c:	mov    edx,es
  40f90e:	retf   
  40f90f:	and    edi,ecx
  40f911:	lahf   
  40f912:	push   0xffffffde
  40f914:	jg     0x40f924
  40f916:	jl     0x40f93d
  40f918:	pop    ebx
  40f919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f91a:	cmp    eax,0x6596f5f8
  40f91f:	test   bl,bl
  40f921:	and    bl,BYTE PTR [ebx-0x30e66310]
  40f927:	and    BYTE PTR [ebx],al
  40f929:	daa    
  40f92a:	sub    esi,DWORD PTR [ebx-0xc]
  40f92d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f92e:	sbb    DWORD PTR [ecx+0x6e84723],0xf1b45694
  40f938:	or     al,0x12
  40f93a:	test   eax,0x177ac297
  40f93f:	cwde   
  40f940:	add    DWORD PTR [eax+ebx*1],0xffffff8c
  40f944:	and    bl,dh
  40f946:	lea    edi,[edi+edi*1-0x68]
  40f94a:	mov    cl,0xc0
  40f94c:	push   ebx
  40f94d:	int3   
  40f94e:	pop    esi
  40f94f:	mov    esp,0x18cf2bef
  40f954:	mov    bh,0xef
  40f956:	or     DWORD PTR [edx+ecx*1],0x1d8a0739
  40f95d:	in     eax,0xd8
  40f95f:	mov    ebp,0x2ec7ecb7
  40f964:	push   ebx
  40f965:	mov    BYTE PTR [edi+0x642489e7],dh
  40f96b:	hlt    
  40f96c:	sbb    eax,0xb374e9f7
  40f971:	(bad)
  40f974:	push   ds
  40f975:	jmp    0xee00:0x689c5970
  40f97c:	inc    ebx
  40f97d:	jmp    0xd64335f6
  40f982:	aad    0x26
  40f984:	daa    
  40f985:	std    
  40f986:	adc    ebp,0x6d
  40f989:	leave  
  40f98a:	scas   eax,DWORD PTR es:[edi]
  40f98b:	add    al,0x3e
  40f98d:	dec    edx
  40f98e:	inc    ecx
  40f98f:	pop    ebp
  40f990:	xor    al,0x10
  40f992:	dec    edi
  40f993:	push   ds
  40f994:	and    ecx,DWORD PTR [ebp+0x11]
  40f997:	mov    gs,WORD PTR [edx]
  40f999:	sbb    eax,0xa4a88973
  40f99e:	lea    esp,[eax+0x4e4fdbaf]
  40f9a4:	jbe    0x40f9ab
  40f9a6:	js     0x40f9be
  40f9a8:	shl    BYTE PTR ds:0x8256c67f,0x4
  40f9af:	ins    DWORD PTR es:[edi],dx
  40f9b0:	je     0x40f93b
  40f9b2:	in     al,0xad
  40f9b4:	cmovne esi,edi
  40f9b7:	xchg   ecx,eax
  40f9b8:	inc    esi
  40f9b9:	jnp    0x40fa39
  40f9bb:	data16 aad 0xfc
  40f9be:	popf   
  40f9bf:	cmp    al,0x24
  40f9c1:	shl    BYTE PTR [ebx+0x86296df],cl
  40f9c7:	in     eax,0x40
  40f9c9:	sub    ch,BYTE PTR [edi+esi*1-0x12]
  40f9cd:	out    dx,al
  40f9ce:	or     DWORD PTR [esi+0x61e35d23],edi
  40f9d4:	out    dx,eax
  40f9d5:	jmp    0x73fdfc82
  40f9da:	mov    cl,0x1
  40f9dc:	sbb    BYTE PTR [esi],cl
  40f9de:	aaa    
  40f9df:	sub    DWORD PTR [ebp-0x23],esi
  40f9e2:	cmp    esp,DWORD PTR [ecx]
  40f9e4:	in     eax,dx
  40f9e5:	fs xchg ecx,eax
  40f9e7:	sahf   
  40f9e8:	js     0x40f98e
  40f9ea:	lods   al,BYTE PTR ds:[esi]
  40f9eb:	fcom   DWORD PTR [eax-0x7a47ec48]
  40f9f1:	mov    esi,0x6c8c205d
  40f9f6:	add    DWORD PTR [esi+0x2c],edx
  40f9f9:	(bad)  
  40f9fa:	jl     0x40f98f
  40f9fc:	and    BYTE PTR [esi+0x7d36e2c2],ch
  40fa02:	xchg   esp,eax
  40fa03:	mov    eax,0xc1ae3780
  40fa08:	cmp    ah,bh
  40fa0a:	data16 int3 
  40fa0c:	retf   0x2d4b
  40fa0f:	jbe    0x40f9a1
  40fa11:	les    ebx,FWORD PTR [edx-0x69fbda6e]
  40fa17:	xor    bl,BYTE PTR [ebp-0x63]
  40fa1a:	sbb    DWORD PTR [edx*8+0x4ad92aaa],edi
  40fa21:	test   ah,al
  40fa23:	(bad)  
  40fa24:	xchg   edi,eax
  40fa25:	(bad)  
  40fa26:	les    ebp,FWORD PTR [ebp-0x47e2b4b5]
  40fa2c:	mov    dl,0xfa
  40fa2e:	inc    ecx
  40fa2f:	xor    dh,al
  40fa31:	or     al,0xa5
  40fa33:	dec    ecx
  40fa34:	adc    eax,0x5e568fd7
  40fa39:	jmp    0x208:0x8f205613
  40fa40:	mov    eax,0x38d3f45
  40fa45:	xchg   esp,eax
  40fa46:	dec    edi
  40fa47:	inc    ebx
  40fa48:	shl    BYTE PTR [edi],cl
  40fa4a:	jmp    0x40fa3c
  40fa4c:	add    BYTE PTR [esi-0x6b3accd9],ch
  40fa52:	or     ebp,ebx
  40fa54:	fdivp  st(0),st
  40fa56:	jno    0x40fa8a
  40fa58:	cdq    
  40fa59:	jne    0x40fa3c
  40fa5b:	stos   BYTE PTR es:[edi],al
  40fa5c:	je     0x40fa26
  40fa5e:	ds pop es
  40fa60:	adc    eax,ecx
  40fa62:	adc    BYTE PTR [eax-0x26],cl
  40fa65:	shl    BYTE PTR [esi],0xf9
  40fa68:	sbb    ebx,0x53
  40fa6b:	cmp    edx,DWORD PTR [esi-0x9df385f]
  40fa71:	pop    edi
  40fa72:	pusha  
  40fa73:	mov    BYTE PTR [ecx+ecx*2],0xf3
  40fa77:	popa   
  40fa78:	push   ss
  40fa79:	(bad)  
  40fa7b:	popf   
  40fa7c:	mov    DWORD PTR [ecx-0x1ea42be4],edi
  40fa82:	dec    ecx
  40fa83:	mov    bh,cl
  40fa85:	mul    DWORD PTR [ecx+0x70ee2391]
  40fa8b:	mov    esp,0x8f8b87e
  40fa90:	retf   0x6b93
  40fa93:	ret    
  40fa94:	mov    edx,0xac1e4c10
  40fa99:	xor    dh,dl
  40fa9b:	adc    DWORD PTR [edi-0x71132f1],ecx
  40faa1:	fisttp QWORD PTR [ebp+0x3a5bcc80]
  40faa7:	push   DWORD PTR [eax+0x1abf995d]
  40faad:	fs mov esi,0x5d6df1c0
  40fab3:	(bad)  
  40fab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fab6:	push   ecx
  40fab7:	lahf   
  40fab8:	xchg   ebx,eax
  40fab9:	add    esp,DWORD PTR [ecx-0x2]
  40fabc:	push   0xffffffff
  40fabe:	xchg   ebp,eax
  40fabf:	pop    es
  40fac0:	pushf  
  40fac1:	shr    BYTE PTR [ecx],cl
  40fac3:	clc    
  40fac4:	mov    eax,0xb7b3a97c
  40fac9:	fsubr  QWORD PTR ds:0xb1615cc7
  40facf:	push   0xffffffca
  40fad1:	icebp  
  40fad2:	loope  0x40fb0f
  40fad4:	mov    cl,0x3a
  40fad6:	pop    ecx
  40fad7:	test   DWORD PTR [esi-0x54be50c6],0x4088f1c0
  40fae1:	mov    ?,ecx
  40fae3:	stc    
  40fae4:	idiv   BYTE PTR ds:[eax+0x40b167c9]
  40faeb:	jle    0x40fa75
  40faed:	pusha  
  40faee:	mov    ah,0x21
  40faf0:	xchg   bl,bl
  40faf2:	cmc    
  40faf3:	sub    eax,0x188075b6
  40faf8:	mov    al,ds:0x5281a270
  40fafd:	cld    
  40fafe:	loopne 0x40fb14
  40fb00:	cli    
  40fb01:	cld    
  40fb02:	jne    0x40fa9a
  40fb04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb05:	dec    eax
  40fb06:	pop    ebx
  40fb07:	push   ss
  40fb08:	lods   al,BYTE PTR ds:[esi]
  40fb09:	xor    ch,BYTE PTR [edx+0x42]
  40fb0c:	mov    ds:0xf01384d7,al
  40fb11:	cwde   
  40fb12:	push   0xaa05748a
  40fb17:	push   0xf283b5f0
  40fb1c:	sbb    eax,0xa5a9e3c4
  40fb21:	pop    esp
  40fb22:	xchg   esp,eax
  40fb23:	call   0xff89c803
  40fb28:	push   ebp
  40fb29:	dec    ebp
  40fb2a:	fisttp DWORD PTR [esi-0x6b]
  40fb2d:	push   0x9e51d2c7
  40fb32:	retf   
  40fb33:	cmp    DWORD PTR [edx+0x71c5d55c],ebp
  40fb39:	or     edi,DWORD PTR [edi+eiz*4]
  40fb3c:	test   DWORD PTR [edi-0x5b],esi
  40fb3f:	sub    eax,0x7e667c1d
  40fb44:	arpl   WORD PTR [eax],bx
  40fb46:	pop    ds
  40fb47:	fs xor eax,0x73dfc549
  40fb4e:	push   edi
  40fb4f:	(bad)  [edi+ebp*2+0x3c]
  40fb53:	cmp    BYTE PTR [edi+0x713400f],bh
  40fb59:	inc    eax
  40fb5a:	hlt    
  40fb5b:	add    eax,0x22ac8f04
  40fb60:	push   ss
  40fb61:	in     al,dx
  40fb62:	mov    eax,0x943cbf7
  40fb67:	or     eax,0x8095d574
  40fb6c:	lds    ecx,FWORD PTR [ecx+ebx*8]
  40fb6f:	pop    ecx
  40fb70:	in     eax,0x2a
  40fb72:	loop   0x40fb69
  40fb74:	scas   eax,DWORD PTR es:[edi]
  40fb75:	lods   eax,DWORD PTR ds:[esi]
  40fb76:	(bad)  [ebx-0x53aead89]
  40fb7c:	push   ds
  40fb7d:	mov    bl,0x39
  40fb7f:	mov    ss,WORD PTR [edx+eax*2-0x50]
  40fb83:	inc    ebp
  40fb84:	sub    BYTE PTR [esi-0x51],bl
  40fb87:	aad    0xe4
  40fb89:	push   esi
  40fb8a:	jmp    0x40fb72
  40fb8c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40fb8e:	sbb    ch,BYTE PTR [eax-0x9]
  40fb91:	cs je  0x40fb3c
  40fb94:	in     eax,0xc9
  40fb96:	cmp    bh,dh
  40fb98:	dec    eax
  40fb99:	jmp    0x40fbdf
  40fb9b:	loop   0x40fb2d
  40fb9d:	fdiv   st,st(3)
  40fb9f:	pop    ss
  40fba0:	sub    DWORD PTR es:[edx-0x13],ebx
  40fba4:	mov    ecx,esp
  40fba6:	imul   esp,DWORD PTR [ebx-0x1b3b36f3],0x70
  40fbad:	jmp    0x2d43:0xd9896c66
  40fbb4:	cmc    
  40fbb5:	sub    dl,BYTE PTR [edx-0x2806bd0a]
  40fbbb:	mov    dl,0xb9
  40fbbd:	add    dl,BYTE PTR [ecx]
  40fbbf:	vmovdqa ymm2,YMMWORD PTR [ebx+0xe7328a1]
  40fbc7:	(bad)  
  40fbc9:	mov    cl,0xce
  40fbcb:	xor    bh,BYTE PTR [ecx-0x1c930137]
  40fbd1:	(bad)  es:[ecx-0xf788fdb]
  40fbd8:	repz fdivr DWORD PTR [esi]
  40fbdb:	add    bl,BYTE PTR [ecx]
  40fbdd:	add    ecx,DWORD PTR [ebx+0xe]
  40fbe0:	inc    ebx
  40fbe1:	mov    edx,DWORD PTR [ebp-0x1b4f27af]
  40fbe7:	inc    ecx
  40fbe8:	pusha  
  40fbe9:	sbb    al,BYTE PTR [edx]
  40fbeb:	mov    eax,0x13d61e8e
  40fbf0:	pusha  
  40fbf1:	das    
  40fbf2:	das    
  40fbf3:	mov    cs,WORD PTR [edi-0x5731c2bf]
  40fbf9:	enter  0x8b22,0x27
  40fbfd:	cmp    dl,cl
  40fbff:	push   ss
  40fc00:	int    0x13
  40fc02:	xchg   ecx,eax
  40fc03:	or     BYTE PTR [edi+eiz*8],cl
  40fc06:	fucom  st(3)
  40fc08:	mov    ebp,0x7072996c
  40fc0d:	aas    
  40fc0e:	dec    edi
  40fc0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc10:	call   0x9df1:0x8dbb1cde
  40fc17:	idiv   DWORD PTR [edx-0x11]
  40fc1a:	int3   
  40fc1b:	xor    BYTE PTR [edx],0x84
  40fc1e:	add    esi,DWORD PTR [ecx-0x64]
  40fc21:	mov    eax,ds:0x1139c4e2
  40fc26:	mov    ds:0xaadcc15,al
  40fc2b:	ja     0x40fbcc
  40fc2d:	int3   
  40fc2e:	idiv   ebx
  40fc30:	into   
  40fc31:	fsubr  QWORD PTR [edi+0x6b]
  40fc34:	aad    0x98
  40fc36:	pushf  
  40fc37:	aam    0x52
  40fc39:	addr16 xchg ebx,eax
  40fc3b:	(bad)  
  40fc3c:	jne    0x40fbd5
  40fc3e:	mov    esi,DWORD PTR [ebx+0x6f]
  40fc41:	aas    
  40fc42:	adc    eax,0xe31c6648
  40fc47:	stc    
  40fc48:	lods   eax,DWORD PTR ds:[esi]
  40fc49:	mov    dh,al
  40fc4b:	ret    
  40fc4c:	and    ebx,edx
  40fc4e:	pop    ds
  40fc4f:	jle    0x40fc0f
  40fc51:	pop    es
  40fc52:	ins    BYTE PTR es:[edi],dx
  40fc53:	repz (bad) 
  40fc55:	sti    
  40fc56:	add    bl,BYTE PTR ds:0x6446b45b
  40fc5c:	in     eax,0xf9
  40fc5e:	into   
  40fc5f:	push   0x77
  40fc61:	or     DWORD PTR [ecx],esp
  40fc63:	xchg   edx,eax
  40fc64:	jae    0x40fcbc
  40fc66:	aas    
  40fc67:	mov    eax,ds:0x92230baf
  40fc6c:	dec    eax
  40fc6d:	add    ebp,edi
  40fc6f:	sub    edi,DWORD PTR [eax-0x7d]
  40fc72:	jmp    0x70a053da
  40fc77:	sub    esp,esp
  40fc79:	scas   al,BYTE PTR es:[edi]
  40fc7a:	fst    DWORD PTR [ecx]
  40fc7c:	push   esi
  40fc7d:	mov    dh,0xa6
  40fc7f:	dec    esi
  40fc80:	cli    
  40fc81:	adc    bh,dl
  40fc83:	xchg   esp,eax
  40fc84:	fs jmp 0x38dcd434
  40fc8a:	dec    edi
  40fc8b:	je     0x40fcb9
  40fc8d:	mov    edi,0xdcaee638
  40fc92:	loop   0x40fcfd
  40fc94:	loop   0x40fcd7
  40fc96:	imul   edx,DWORD PTR [edx+0x189287b],0xffffffe9
  40fc9d:	dec    edx
  40fc9e:	mov    esi,0x4e23eef6
  40fca3:	sub    eax,0xd4b107a3
  40fca8:	(bad)  
  40fcaa:	xor    al,0xa7
  40fcac:	mov    al,0x15
  40fcae:	clc    
  40fcaf:	inc    edx
  40fcb0:	push   ebp
  40fcb1:	call   0x67c9:0x45de7df1
  40fcb8:	mov    eax,0x366d713b
  40fcbd:	dec    esp
  40fcbe:	xchg   ebx,eax
  40fcbf:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40fcc1:	mov    bh,0x4b
  40fcc3:	mov    bh,0xc6
  40fcc5:	gs pop edx
  40fcc7:	js     0x40fc54
  40fcc9:	lods   al,BYTE PTR ds:[esi]
  40fcca:	xchg   edx,eax
  40fccb:	xchg   edx,eax
  40fccc:	cmp    edi,DWORD PTR [ecx-0x6af2170d]
  40fcd2:	adc    al,0xb1
  40fcd4:	cld    
  40fcd5:	adc    BYTE PTR ds:0x3e19cad5,bl
  40fcdb:	inc    ebp
  40fcdc:	adc    al,bl
  40fcde:	or     al,0xfc
  40fce0:	pop    ecx
  40fce1:	add    eax,DWORD PTR [esi+0x61]
  40fce4:	xor    esp,DWORD PTR [edx]
  40fce6:	jl     0x40fd3e
  40fce8:	and    eax,0xf6f32ba4
  40fced:	or     ecx,DWORD PTR [edi-0x1a]
  40fcf0:	scas   al,BYTE PTR es:[edi]
  40fcf1:	and    bl,al
  40fcf3:	lds    esi,FWORD PTR [edx+0x62]
  40fcf6:	dec    ebp
  40fcf7:	mov    al,ds:0x6086930e
  40fcfc:	sub    esi,ebp
  40fcfe:	jp     0x40fcea
  40fd00:	aam    0xe0
  40fd02:	inc    esp
  40fd03:	xchg   edx,eax
  40fd04:	pop    ss
  40fd05:	jbe    0x40fcdb
  40fd07:	mov    al,0x6f
  40fd09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd0b:	out    dx,al
  40fd0c:	out    0xc9,eax
  40fd0e:	(bad)  
  40fd10:	jg     0x40fd3d
  40fd12:	xor    BYTE PTR [ecx+0x3c22a7fd],cl
  40fd18:	push   edi
  40fd19:	pop    ss
  40fd1a:	mov    gs,esi
  40fd1c:	xchg   ebx,eax
  40fd1d:	imul   ebx,DWORD PTR [ebx+esi*2],0xba36abbb
  40fd24:	and    al,0xf1
  40fd26:	icebp  
  40fd27:	pushf  
  40fd28:	not    BYTE PTR ds:0x428e59c7
  40fd2e:	scas   al,BYTE PTR es:[edi]
  40fd2f:	cwde   
  40fd30:	mov    edi,0x7ac3338a
  40fd35:	test   BYTE PTR [edi-0x42],dl
  40fd38:	fwait
  40fd39:	clc    
  40fd3a:	mov    ch,0xe9
  40fd3c:	dec    ecx
  40fd3d:	mov    BYTE PTR [ebx+0x25],0xe2
  40fd41:	(bad)  
  40fd42:	adc    ah,BYTE PTR [edx+0x3217c2d]
  40fd48:	sti    
  40fd49:	xchg   esi,eax
  40fd4a:	(bad)  
  40fd4c:	cwde   
  40fd4d:	xchg   edi,eax
  40fd4e:	mov    esi,0x46ec4fab
  40fd53:	cmc    
  40fd54:	rcr    BYTE PTR [edi+0x4d0d0d84],1
  40fd5a:	hlt    
  40fd5b:	stos   DWORD PTR es:[edi],eax
  40fd5c:	and    cl,al
  40fd5e:	call   0x7791acc8
  40fd63:	mov    ch,0x0
  40fd65:	push   esp
  40fd66:	bound  esi,QWORD PTR [ebx+0x64c334ac]
  40fd6c:	mov    ebx,0xdd405c71
  40fd71:	mov    ch,0x4c
  40fd73:	repnz mov eax,0xd221678f
  40fd79:	sbb    DWORD PTR [ecx],eax
  40fd7b:	mov    dl,0x5c
  40fd7d:	mov    ch,0x53
  40fd7f:	adc    BYTE PTR [edi-0x60],ah
  40fd82:	adc    al,0x28
  40fd84:	mov    edi,0x93b08af2
  40fd89:	fcom   QWORD PTR [edx+0x13]
  40fd8c:	lods   eax,DWORD PTR ds:[esi]
  40fd8d:	lods   eax,DWORD PTR ds:[esi]
  40fd8e:	or     edx,ecx
  40fd90:	pop    ecx
  40fd91:	or     edi,DWORD PTR [eax-0x6186424f]
  40fd97:	sbb    eax,0xc1b6c1f0
  40fd9c:	cdq    
  40fd9d:	jle    0x40fd69
  40fd9f:	xchg   ecx,eax
  40fda0:	call   0xdef9:0x35b1010b
  40fda7:	xor    DWORD PTR [ebx+eax*4-0x16],eax
  40fdab:	push   es
  40fdac:	mov    ebp,0x382f5b8a
  40fdb1:	popa   
  40fdb2:	mov    ebp,0xad70d0cb
  40fdb7:	repnz push ebx
  40fdb9:	cmp    edx,ebp
  40fdbb:	aam    0x5
  40fdbd:	cwde   
  40fdbe:	retf   0xd436
  40fdc1:	push   eax
  40fdc2:	dec    eax
  40fdc3:	cmp    al,0x6c
  40fdc5:	xor    eax,0x64a42184
  40fdca:	jg     0x40fdb3
  40fdcc:	push   ebx
  40fdcd:	lods   al,BYTE PTR ds:[esi]
  40fdce:	in     eax,dx
  40fdcf:	dec    ebx
  40fdd0:	mov    edx,0xf31a8eb5
  40fdd5:	cmp    al,0x84
  40fdd7:	ja     0x40fe35
  40fdd9:	add    BYTE PTR [esi-0x3922f29e],ah
  40fddf:	fwait
  40fde0:	mov    edi,0x10017a0d
  40fde5:	icebp  
  40fde6:	(bad)  [edi+0x4a]
  40fde9:	inc    ebx
  40fdea:	je     0x40fd74
  40fdec:	mov    esi,fs
  40fdee:	mov    eax,0x1974c738
  40fdf3:	mov    BYTE PTR [ebx+0xca557c0],al
  40fdf9:	jnp    0x40fdeb
  40fdfb:	sub    BYTE PTR [edi],0xe2
  40fdfe:	neg    DWORD PTR [ebx+0x7e]
  40fe01:	xchg   esi,eax
  40fe02:	outs   dx,BYTE PTR ds:[esi]
  40fe03:	pushf  
  40fe04:	push   ebp
  40fe05:	add    al,BYTE PTR [esi-0x698f54af]
  40fe0b:	cmp    al,0xaa
  40fe0d:	and    DWORD PTR [esi+0x46],edi
  40fe10:	push   edx
  40fe11:	mov    es,WORD PTR [edi+0x9]
  40fe14:	and    al,0x40
  40fe16:	into   
  40fe17:	inc    bl
  40fe19:	sub    WORD PTR [eax-0x535674bc],si
  40fe20:	dec    edx
  40fe21:	and    eax,0x312077a0
  40fe26:	idiv   BYTE PTR [ecx]
  40fe28:	pop    edi
  40fe29:	pop    ebx
  40fe2a:	sub    esi,DWORD PTR ds:0x81789151
  40fe30:	aam    0xc3
  40fe32:	data16 test BYTE PTR [ebx-0x60],0x7e
  40fe37:	mov    ds:0x7375fdbc,eax
  40fe3c:	(bad)  
  40fe3d:	xlat   BYTE PTR ds:[ebx]
  40fe3e:	loopne 0x40fdc5
  40fe40:	ja     0x40fdf0
  40fe42:	and    al,0x52
  40fe44:	scas   al,BYTE PTR es:[edi]
  40fe45:	dec    ebx
  40fe46:	xor    al,0xac
  40fe48:	jno    0x40fe20
  40fe4a:	push   es
  40fe4b:	inc    ecx
  40fe4c:	and    al,0x78
  40fe4e:	xchg   edi,eax
  40fe4f:	push   ebx
  40fe50:	pop    ecx
  40fe51:	aam    0x93
  40fe53:	fidiv  WORD PTR [ebp+0x6c]
  40fe56:	out    0x7c,eax
  40fe58:	sub    edi,DWORD PTR [edi+ebp*4-0x7b592e2a]
  40fe5f:	imul   ecx,DWORD PTR [ecx],0x1f
  40fe62:	ds aam 0x5
  40fe65:	sbb    BYTE PTR [esi],0xe4
  40fe68:	out    dx,eax
  40fe69:	inc    ecx
  40fe6a:	stos   BYTE PTR es:[edi],al
  40fe6b:	xchg   ecx,eax
  40fe6c:	dec    esi
  40fe6d:	push   DWORD PTR [ecx-0x80]
  40fe70:	(bad)  
  40fe71:	jmp    0x6e53:0xcede9a68
  40fe78:	xchg   ebx,eax
  40fe79:	push   ebp
  40fe7a:	pop    ebx
  40fe7b:	xlat   BYTE PTR es:[ebx]
  40fe7d:	popa   
  40fe7e:	outs   dx,DWORD PTR ds:[esi]
  40fe7f:	aam    0xcf
  40fe81:	out    0xa0,al
  40fe83:	cmp    ecx,DWORD PTR [ebx]
  40fe85:	xor    ch,ah
  40fe87:	mov    bh,0x0
  40fe89:	retf   0x9437
  40fe8c:	cs ret 0xb9cc
  40fe90:	and    BYTE PTR [eax],bl
  40fe92:	mov    eax,ds:0xefd74121
  40fe97:	test   al,0xbf
  40fe99:	mov    ds:0x9be6f9ce,al
  40fe9e:	jae    0x40fe72
  40fea0:	mov    ds:0x114fa23a,eax
  40fea5:	nop
  40fea6:	mov    edi,0xc0d4b687
  40feab:	nop
  40feac:	adc    cl,BYTE PTR [edx+0x3a9105c1]
  40feb2:	in     al,dx
  40feb3:	sbb    edi,esi
  40feb5:	arpl   WORD PTR [ebx+0x3b],bx
  40feb8:	into   
  40feb9:	or     al,0xb8
  40febb:	pop    ds
  40febc:	inc    edx
  40febd:	adc    al,0x74
  40febf:	mov    ss,WORD PTR [edi-0x6df2c1e2]
  40fec5:	jno    0x40fecb
  40fec7:	mov    cl,0xed
  40fec9:	mov    edx,DWORD PTR [edx+0x5511d6da]
  40fecf:	retf   
  40fed0:	mov    ds,WORD PTR [edx-0x11faf5b7]
  40fed6:	fldenv [eax-0x57edc335]
  40fedc:	outs   dx,BYTE PTR ds:[esi]
  40fedd:	clc    
  40fede:	cld    
  40fedf:	xor    eax,0xa2a212da
  40fee4:	pop    ebp
  40fee5:	mov    bh,0xcc
  40fee7:	sub    DWORD PTR [edx],edi
  40fee9:	pop    esp
  40feea:	call   DWORD PTR [edi-0x7482b37d]
  40fef0:	icebp  
  40fef1:	fist   DWORD PTR [ecx+0x17]
  40fef4:	nop
  40fef5:	mov    bl,0x5c
  40fef7:	nop
  40fef8:	adc    al,0x29
  40fefa:	fst    st(7)
  40fefc:	pusha  
  40fefd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fefe:	ror    cl,1
  40ff00:	retf   
  40ff01:	mov    dh,0xc0
  40ff03:	xchg   edi,eax
  40ff04:	repz add BYTE PTR [edi],dl
  40ff07:	adc    edi,DWORD PTR [edx]
  40ff09:	popf   
  40ff0a:	push   ds
  40ff0b:	dec    edi
  40ff0c:	push   0xffffff8d
  40ff0e:	and    eax,DWORD PTR [edx]
  40ff10:	fwait
  40ff11:	inc    ebp
  40ff12:	dec    eax
  40ff13:	scas   al,BYTE PTR es:[edi]
  40ff14:	sub    ebp,0x2b
  40ff17:	jge    0x40fef4
  40ff19:	(bad)  
  40ff1a:	mov    edi,0x9b5f3047
  40ff1f:	loop   0x40fef9
  40ff21:	sbb    bl,BYTE PTR [edi]
  40ff23:	add    BYTE PTR [ebx-0x2e64d76a],ch
  40ff29:	fs sbb eax,0x535dc3c7
  40ff2f:	dec    eax
  40ff30:	daa    
  40ff31:	sti    
  40ff32:	sar    cl,0x83
  40ff35:	test   DWORD PTR [eax+ebp*1+0x1107fe21],edi
  40ff3c:	or     esi,DWORD PTR [ecx]
  40ff3e:	dec    ebx
  40ff3f:	inc    ebx
  40ff40:	adc    esi,DWORD PTR [edi+0x18]
  40ff43:	push   0x7fa2026
  40ff48:	iret   
  40ff49:	in     eax,0x1
  40ff4b:	add    eax,0x17e5f64
  40ff50:	xchg   esp,eax
  40ff51:	(bad)  [edx+ecx*2-0x41]
  40ff55:	push   edi
  40ff56:	pop    eax
  40ff57:	xchg   esp,ebx
  40ff59:	xor    BYTE PTR [ebx-0x6acef5c2],0xf8
  40ff60:	retf   
  40ff61:	xchg   edx,eax
  40ff62:	mov    ebx,DWORD PTR cs:[eax+eiz*4+0x57d88e35]
  40ff6a:	aas    
  40ff6b:	lods   eax,DWORD PTR ds:[esi]
  40ff6c:	(bad)  
  40ff6d:	out    dx,al
  40ff6e:	loope  0x40ff73
  40ff70:	imul   eax,ebx,0x9
  40ff73:	in     al,0x4b
  40ff75:	push   eax
  40ff76:	and    bl,BYTE PTR [edi+0x2c]
  40ff79:	inc    edx
  40ff7a:	pop    ebx
  40ff7b:	or     eax,DWORD PTR [eax-0x5d]
  40ff7e:	and    DWORD PTR [edi+0x1b9b6bf7],0x47
  40ff85:	imul   DWORD PTR [edx+0x5d]
  40ff88:	mov    eax,0xc524c880
  40ff8d:	mov    cl,0x14
  40ff8f:	popa   
  40ff90:	rol    DWORD PTR [edx-0x31d111bb],1
  40ff96:	sub    DWORD PTR [ecx],0x39
  40ff99:	push   cs
  40ff9a:	xor    al,0x4b
  40ff9c:	daa    
  40ff9d:	jns    0x40ff98
  40ff9f:	jbe    0x40fffc
  40ffa1:	stos   DWORD PTR es:[edi],eax
  40ffa2:	push   ds
  40ffa3:	or     ah,ah
  40ffa5:	sahf   
  40ffa6:	mov    dh,0xe2
  40ffa8:	cmp    al,0x6e
  40ffaa:	xor    BYTE PTR [eax+0x6d],ah
  40ffad:	push   ebx
  40ffae:	out    dx,eax
  40ffaf:	neg    DWORD PTR [esi-0xc]
  40ffb2:	cmp    BYTE PTR [edi+0x7460d532],0x2f
  40ffb9:	mov    eax,ds:0x53d54a87
  40ffbe:	and    eax,0xe90d5536
  40ffc3:	test   BYTE PTR [ecx],cl
  40ffc5:	mov    dh,0xa7
  40ffc7:	push   edx
  40ffc8:	jno    0x40ffd4
  40ffca:	hlt    
  40ffcb:	mov    ch,0xbb
  40ffcd:	add    BYTE PTR [ebp+0x2f8cc8e0],ch
  40ffd3:	(bad)  
  40ffd4:	jne    0x410042
  40ffd6:	(bad)  [edi]
  40ffd8:	(bad)  
  40ffd9:	rcr    ebx,1
  40ffdb:	sbb    al,bh
  40ffdd:	pop    eax
  40ffde:	xor    bh,BYTE PTR [edx]
  40ffe0:	adc    al,0x92
  40ffe2:	jle    0x410063
  40ffe4:	adc    ch,ch
  40ffe6:	lds    eax,FWORD PTR [edx+0x7beb1dd7]
  40ffec:	dec    ecx
  40ffed:	and    al,0xc5
  40ffef:	mov    BYTE PTR [ecx-0x55b405cb],ch
  40fff5:	jbe    0x410011
  40fff7:	inc    edi
  40fff8:	shl    edi,cl
  40fffa:	(bad)  
  40fffc:	jbe    0x41003c
  40fffe:	cld    
  40ffff:	les    ebp,FWORD PTR [edx-0x5103a3ae]
  410005:	push   cs
  410006:	jns    0x40ffd9
  410008:	mov    ebx,0xf3471378
  41000d:	mov    bh,0x98
  41000f:	stos   DWORD PTR es:[edi],eax
  410010:	aaa    
  410011:	or     ebp,eax
  410013:	repz imul ebx,DWORD PTR [edx-0x27],0x6308bfde
  41001b:	std    
  41001c:	cmp    eax,0x6324788e
  410021:	inc    esp
  410022:	out    0xf3,al
  410024:	push   ecx
  410025:	ficom  WORD PTR [eax+0x54]
  410028:	jne    0x41001a
  41002a:	ins    BYTE PTR es:[edi],dx
  41002b:	out    dx,al
  41002c:	sbb    esi,DWORD PTR [edi]
  41002e:	pop    ss
  41002f:	fst    DWORD PTR [ebx+0x5cb25bc5]
  410035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410036:	mov    ds:0xab24a1b4,al
  41003b:	add    cl,BYTE PTR [ebx-0x456745ce]
  410041:	imul   ebx,edx,0x3401bd1
  410047:	dec    esi
  410048:	push   esi
  410049:	mov    ebp,0xcee25aba
  41004e:	in     al,0x5a
  410050:	scas   al,BYTE PTR es:[edi]
  410051:	in     al,0x93
  410053:	retf   
  410054:	cmp    BYTE PTR ds:0x7e00cc6d,0xd4
  41005b:	xchg   ebp,eax
  41005c:	mov    bl,0xda
  41005e:	cmc    
  41005f:	loopne 0x410003
  410061:	stc    
  410062:	cld    
  410063:	xor    BYTE PTR [edi+0x6fde2607],dh
  410069:	popa   
  41006a:	ret    0xe976
  41006d:	inc    ebp
  41006e:	mov    eax,0x638deb95
  410073:	mov    esi,0xc19e7925
  410078:	mov    WORD PTR [esi],ss
  41007a:	jno    0x4100df
  41007c:	or     al,0x1c
  41007e:	or     DWORD PTR [ecx-0x7],0x7b
  410082:	xchg   esp,eax
  410083:	inc    ebp
  410084:	cmp    ebp,edx
  410086:	mov    ebp,DWORD PTR [ebx+0x14]
  410089:	(bad)  
  41008c:	mov    ebx,0xd53332e0
  410091:	adc    eax,0xf75009d
  410096:	mov    cs:0xb9df2441,eax
  41009c:	push   ds
  41009d:	inc    ecx
  41009e:	add    cl,al
  4100a0:	adc    DWORD PTR [esi+0xc],ecx
  4100a3:	push   ebx
  4100a4:	xchg   esi,eax
  4100a5:	push   0x17661c6b
  4100aa:	leave  
  4100ab:	and    bh,BYTE PTR [ecx]
  4100ad:	push   eax
  4100ae:	fbld   TBYTE PTR [eax-0x1a]
  4100b1:	dec    ebp
  4100b2:	jle    0x4100b0
  4100b4:	outs   dx,BYTE PTR ds:[esi]
  4100b5:	adc    ebx,ecx
  4100b7:	out    0x47,al
  4100b9:	and    eax,0x98ec556e
  4100be:	aas    
  4100bf:	inc    eax
  4100c0:	out    0x81,eax
  4100c2:	outs   dx,BYTE PTR ds:[esi]
  4100c3:	push   cs
  4100c4:	cmp    eax,0xef00436
  4100c9:	mov    WORD PTR [ecx+ebx*4-0x6177f756],ds
  4100d0:	or     al,dh
  4100d2:	int    0x5c
  4100d4:	in     eax,dx
  4100d5:	loopne 0x4100c0
  4100d7:	cmp    al,0x2f
  4100d9:	adc    eax,0xb74f16dd
  4100de:	enter  0xa512,0xa8
  4100e2:	shl    bl,cl
  4100e4:	shl    ebx,1
  4100e6:	xor    edx,esi
  4100e8:	retf   
  4100e9:	je     0x410114
  4100eb:	retf   0xf11
  4100ee:	mov    esi,0x8c22359b
  4100f3:	cmp    eax,0x718105a8
  4100f8:	daa    
  4100f9:	mov    cl,0xad
  4100fb:	les    esp,FWORD PTR [edi]
  4100fd:	inc    edx
  4100fe:	mov    ebx,0xadafe174
  410103:	jg     0x41011f
  410105:	jae    0x410151
  410107:	sub    al,0x70
  410109:	inc    ecx
  41010a:	or     ah,al
  41010c:	(bad)  
  41010d:	and    al,0x38
  41010f:	push   ecx
  410110:	rcr    BYTE PTR [edi-0x32387a94],1
  410116:	iret   
  410117:	dec    eax
  410118:	jl     0x41017d
  41011a:	ror    BYTE PTR [ebp-0x1affde8c],0xee
  410121:	xchg   BYTE PTR [esi],al
  410123:	pop    esp
  410124:	rcr    DWORD PTR [ecx-0x73],1
  410127:	je     0x410197
  410129:	mov    ds:0xa41eec15,eax
  41012e:	inc    ebp
  41012f:	cdq    
  410130:	dec    ebp
  410131:	(bad)  
  410132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410133:	push   edi
  410134:	dec    ecx
  410135:	mov    edx,0xd01c3f72
  41013a:	das    
  41013b:	hlt    
  41013c:	jp     0x4101b3
  41013e:	(bad)  
  41013f:	in     eax,dx
  410140:	pop    esp
  410141:	int3   
  410142:	push   es
  410143:	dec    ebx
  410144:	data16 jo 0x41012b
  410147:	push   ecx
  410148:	not    ebp
  41014a:	sbb    al,0x55
  41014c:	sbb    al,0x5f
  41014e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41014f:	cli    
  410150:	in     eax,dx
  410151:	je     0x4101b0
  410153:	sub    al,0x6b
  410155:	cs push esi
  410157:	mov    al,0x6d
  410159:	sbb    al,0xe0
  41015b:	je     0x41019e
  41015d:	sbb    al,BYTE PTR [ebx+edx*8]
  410160:	push   0xffffffb6
  410162:	dec    edi
  410163:	popa   
  410164:	pushf  
  410165:	pop    es
  410166:	(bad)  [ebx+eiz*1-0x194e4ccd]
  41016d:	push   0x37
  41016f:	adc    al,0x96
  410171:	and    al,0x37
  410173:	dec    esp
  410174:	pop    ds
  410175:	aaa    
  410176:	pop    ss
  410177:	add    BYTE PTR [edi-0x498cb8f5],0xd9
  41017e:	icebp  
  41017f:	aas    
  410180:	mov    ecx,0xe8985a1f
  410185:	lock jmp FWORD PTR [edx]
  410188:	paddusw mm1,QWORD PTR [ebx+0xc43f071]
  41018f:	stos   DWORD PTR es:[edi],eax
  410190:	push   ecx
  410191:	xor    BYTE PTR [ebp+0x4201b48d],al
  410197:	out    dx,eax
  410198:	add    al,0xae
  41019a:	inc    esp
  41019b:	cld    
  41019c:	dec    ebp
  41019d:	or     DWORD PTR [ebx-0xfa8655d],eax
  4101a3:	mov    al,ds:0x9c3598bf
  4101a8:	push   ebp
  4101a9:	fwait
  4101aa:	jl     0x41012e
  4101ac:	in     eax,dx
  4101ad:	cmp    BYTE PTR [ebx-0x7d959fd2],dh
  4101b3:	sub    DWORD PTR [edx-0x34e0f9f3],0xf580029a
  4101bd:	std    
  4101be:	inc    esp
  4101bf:	mov    edi,0x5eb71850
  4101c4:	fcomp  QWORD PTR [edi]
  4101c6:	imul   ebp,DWORD PTR fs:[ebp+ecx*8+0x2e],0x1a
  4101cc:	in     al,0x34
  4101ce:	dec    ecx
  4101cf:	jge    0x410158
  4101d1:	shl    BYTE PTR [esi-0x11],cl
  4101d4:	pcmpgtw mm2,QWORD PTR [edx-0x3e]
  4101d8:	(bad)  
  4101d9:	div    BYTE PTR [ebx]
  4101db:	add    ecx,DWORD PTR [esi+0x31]
  4101de:	ret    
  4101df:	ss stos BYTE PTR es:[edi],al
  4101e1:	arpl   si,cx
  4101e3:	pop    esi
  4101e4:	mov    dh,0x4f
  4101e6:	add    al,0xae
  4101e8:	sbb    al,0xd0
  4101ea:	dec    ecx
  4101eb:	loopne 0x410176
  4101ed:	retf   0xda44
  4101f0:	add    al,0xb3
  4101f2:	ins    BYTE PTR es:[edi],dx
  4101f3:	mov    ch,0x41
  4101f5:	dec    eax
  4101f6:	mov    ecx,0xe0e5c11a
  4101fb:	and    al,0xef
  4101fd:	or     dl,ch
  4101ff:	pop    es
  410200:	jl     0xcfbfcdaa
  410206:	call   0xaad12354
  41020b:	jg     0x4101f1
  41020d:	and    al,0xe5
  41020f:	adc    BYTE PTR [esi+0x2c],0x77
  410213:	pop    ecx
  410214:	or     cl,bl
  410216:	xchg   DWORD PTR [esi-0x440b8550],esp
  41021c:	jne    0x410298
  41021e:	xor    esp,DWORD PTR [edi-0x43f74195]
  410224:	scas   al,BYTE PTR es:[edi]
  410225:	nop
  410226:	dec    edx
  410227:	xchg   bl,ah
  410229:	adc    eax,0xa2501ef9
  41022e:	adc    dl,BYTE PTR [esi-0x69546d00]
  410234:	inc    ebp
  410235:	jmp    0x1ce14f28
  41023a:	stos   DWORD PTR es:[edi],eax
  41023b:	inc    edi
  41023c:	xchg   esp,eax
  41023d:	daa    
  41023e:	rcr    BYTE PTR [ecx-0x4],0xbf
  410242:	dec    eax
  410243:	out    dx,eax
  410244:	mov    ds,ebx
  410246:	xor    al,dl
  410248:	int    0x6f
  41024a:	fcmovnbe st,st(7)
  41024c:	mov    ecx,0x837a328f
  410251:	into   
  410252:	xchg   BYTE PTR [ebp-0x6d],ah
  410255:	(bad)  
  410257:	pusha  
  410258:	arpl   WORD PTR [ebp+0x5d],ax
  41025b:	and    esp,DWORD PTR [eax-0x1]
  41025e:	in     al,0x9f
  410260:	xor    esp,DWORD PTR [edi-0x60]
  410263:	or     edi,0x5f
  410266:	lahf   
  410267:	call   0x43855cec
  41026c:	mov    cl,0x91
  41026e:	inc    ecx
  41026f:	xchg   cl,bl
  410271:	pop    ebp
  410272:	repnz outs dx,BYTE PTR ds:[esi]
  410274:	mov    ds:0xc8b3f76c,eax
  410279:	fldcw  WORD PTR [eax]
  41027b:	call   0x6fea:0xbb7fbf73
  410282:	loop   0x41024a
  410284:	mov    dl,0x73
  410286:	fstp   DWORD PTR [edx]
  410288:	test   eax,0x2aa91e9
  41028d:	mov    edi,0x8c8e40ad
  410292:	xchg   edx,eax
  410293:	mov    edi,0x4e649cf9
  410298:	nop
  410299:	inc    ebx
  41029a:	stc    
  41029b:	retf   
  41029c:	lock repz (bad) 
  41029f:	pop    esi
  4102a0:	mov    bl,0x90
  4102a2:	dec    esp
  4102a3:	and    eax,0xda227d75
  4102a8:	daa    
  4102a9:	and    DWORD PTR [edx],edi
  4102ab:	mov    edx,eax
  4102ad:	in     eax,0x10
  4102af:	mul    DWORD PTR [ebp+0x7028f6b9]
  4102b5:	pop    esi
  4102b6:	arpl   si,ax
  4102b8:	cmp    DWORD PTR [esi+0x49],ebp
  4102bb:	rcl    BYTE PTR [esi+0x5d446e90],0xb4
  4102c2:	(bad)  
  4102c3:	jle    0x4102f7
  4102c5:	sub    eax,0x3bb74310
  4102ca:	xchg   edi,eax
  4102cb:	xchg   ecx,eax
  4102cc:	pop    edi
  4102cd:	loopne 0x4102ca
  4102cf:	push   0x6769d577
  4102d4:	fist   DWORD PTR [ecx+ebp*8]
  4102d7:	push   edi
  4102d8:	in     eax,dx
  4102d9:	adc    eax,0x31de9fc1
  4102de:	adc    DWORD PTR [edi],ebx
  4102e0:	daa    
  4102e1:	call   0xd5be:0xaa4043a2
  4102e8:	jmp    edx
  4102ea:	ror    DWORD PTR [edi+0x72],0xb
  4102ee:	popa   
  4102ef:	mov    bl,bl
  4102f1:	out    0x95,al
  4102f3:	repz cmp eax,0x93edefc2
  4102f9:	pop    edi
  4102fa:	add    eax,0x93fb6b24
  4102ff:	sbb    eax,0x4215ee41
  410304:	mov    bl,ah
  410306:	sub    DWORD PTR [edi],esp
  410308:	push   cs
  410309:	sub    al,0xd7
  41030b:	xor    al,0xfb
  41030d:	push   ds
  41030e:	inc    edi
  41030f:	xchg   edx,eax
  410310:	jmp    0x29b8cc8e
  410315:	imul   BYTE PTR [eax+edx*1+0x18e6770b]
  41031c:	xor    edi,DWORD PTR [ecx-0x2b7dea6f]
  410322:	xor    bh,BYTE PTR [edx]
  410324:	lock call 0xdd48a67a
  41032a:	mov    dl,0x14
  41032c:	mov    eax,ds:0x745b8697
  410331:	enter  0x7799,0xa3
  410335:	into   
  410336:	out    0x3,eax
  410338:	mov    BYTE PTR [eax],ah
  41033a:	mov    esp,DWORD PTR ds:0x51bd11c2
  410340:	lods   eax,DWORD PTR ds:[esi]
  410341:	sbb    eax,0xdbae8e9a
  410346:	or     al,0x61
  410348:	mov    ds:0x8e31e7b7,al
  41034d:	pop    esp
  41034e:	mov    ?,WORD PTR [ebx+esi*1+0x44a39674]
  410355:	push   esp
  410356:	psllw  mm5,QWORD PTR [edx-0x47e4ca42]
  41035d:	into   
  41035e:	fisub  DWORD PTR [esi-0x29]
  410361:	mov    ebx,0x7d27007b
  410366:	cmp    ebp,DWORD PTR [ecx]
  410368:	loop   0x4103a8
  41036a:	(bad)  
  41036b:	aaa    
  41036c:	xchg   esi,eax
  41036d:	sbb    eax,DWORD PTR [eax*4-0x49b83c22]
  410374:	out    0x49,eax
  410376:	sub    BYTE PTR [edi+0x5f845b2e],dl
  41037c:	xchg   ecx,eax
  41037d:	pop    es
  41037e:	jmp    0x94b2:0x2314f96f
  410385:	mov    DWORD PTR [esi+0x41],edi
  410388:	stc    
  410389:	inc    ebp
  41038a:	retf   0xf7df
  41038d:	jl     0x410329
  41038f:	push   ebx
  410390:	inc    ebp
  410391:	aas    
  410392:	jp     0x4103a2
  410394:	data16 fucomp st(2)
  410397:	add    DWORD PTR [ebp-0x7],0x48
  41039b:	push   edi
  41039c:	fdiv   DWORD PTR [esi]
  41039e:	pop    esi
  41039f:	idiv   BYTE PTR [edi]
  4103a1:	in     al,dx
  4103a2:	cli    
  4103a3:	cs xchg edx,eax
  4103a5:	pop    edx
  4103a6:	(bad)  
  4103a7:	fisttp DWORD PTR [ecx-0x6b764fcd]
  4103ad:	adc    BYTE PTR [esi+0x149efa7d],bh
  4103b3:	cwde   
  4103b4:	(bad)
  4103b7:	jmp    0x8e0f:0xaba380b9
  4103be:	xchg   ebp,eax
  4103bf:	mov    ah,0x9
  4103c1:	dec    edi
  4103c2:	imul   eax,esp,0x39e207fb
  4103c8:	dec    edx
  4103c9:	and    bl,dh
  4103cb:	mov    eax,ds:0x3f9f5df2
  4103d0:	mov    ecx,0x20ceb2f9
  4103d5:	(bad)  
  4103d6:	jmp    0x4103af
  4103d8:	xor    eax,0xbf47ce77
  4103dd:	cli    
  4103de:	mov    ebx,0x20f1800e
  4103e3:	add    bl,BYTE PTR [edi+0x36]
  4103e6:	inc    eax
  4103e7:	pop    esi
  4103e8:	push   edx
  4103e9:	ins    BYTE PTR es:[edi],dx
  4103ea:	pop    esp
  4103eb:	cld    
  4103ec:	or     DWORD PTR [ecx],esi
  4103ee:	mov    bl,BYTE PTR [eax+0xc]
  4103f1:	sti    
  4103f2:	and    al,0x87
  4103f4:	sbb    al,0x57
  4103f6:	out    dx,al
  4103f7:	aas    
  4103f8:	ds xchg edi,eax
  4103fa:	neg    DWORD PTR [esi+0x7d]
  4103fd:	xor    esi,DWORD PTR ds:0xdbc2a1d6
  410403:	lods   al,BYTE PTR ds:[esi]
  410404:	mov    bp,0xbedc
  410408:	aas    
  410409:	je     0x41040d
  41040b:	push   esi
  41040c:	cpuid  
  41040e:	pop    eax
  41040f:	cli    
  410410:	inc    BYTE PTR [edi]
  410412:	sub    BYTE PTR [ebx-0x7c],0xff
  410416:	int    0xc9
  410418:	cld    
  410419:	or     eax,0xb456e33d
  41041e:	fst    QWORD PTR [edx]
  410420:	(bad)  
  410421:	(bad)  
  410422:	(bad)  
  410423:	mov    al,0x84
  410425:	sub    ebx,DWORD PTR [edi+0x70ac79a3]
  41042b:	add    al,0x13
  41042d:	jns    0x41044b
  41042f:	push   es
  410430:	(bad)  
  410431:	jnp    0x4103ea
  410433:	jbe    0x410439
  410435:	out    0x61,eax
  410437:	test   DWORD PTR [esp+edx*1],edi
  41043a:	int    0x9c
  41043c:	dec    edi
  41043d:	clc    
  41043e:	adc    esp,eax
  410440:	mov    WORD PTR cs:[esi],ds
  410443:	(bad)  
  410444:	call   0x97e35783
  410449:	jp     0x4104b4
  41044b:	mov    al,0x7d
  41044d:	stc    
  41044e:	ja     0x41043b
  410450:	fwait
  410451:	push   eax
  410452:	pop    ebx
  410453:	scas   eax,DWORD PTR es:[edi]
  410454:	icebp  
  410455:	daa    
  410456:	adc    ecx,eax
  410458:	scas   al,BYTE PTR es:[edi]
  410459:	pop    ds
  41045a:	or     esi,edx
  41045c:	arpl   WORD PTR [ebx+edx*2-0x1f],di
  410460:	push   ecx
  410461:	inc    ebp
  410462:	fwait
  410463:	inc    edi
  410464:	in     al,0xd1
  410466:	sub    eax,0x430e7aa2
  41046b:	aad    0x95
  41046d:	mov    fs,WORD PTR [edi+0x5b]
  410470:	(bad)  
  410471:	push   ss
  410472:	and    al,BYTE PTR [esi-0x1f880bf4]
  410478:	imul   edi,ebx,0x126b4936
  41047e:	cld    
  41047f:	push   eax
  410480:	sahf   
  410481:	idiv   DWORD PTR [ecx+0x5482729b]
  410487:	fstp   TBYTE PTR [ecx-0x3c]
  41048a:	sub    BYTE PTR [esi-0x5c],dl
  41048d:	lods   al,BYTE PTR ds:[esi]
  41048e:	cld    
  41048f:	rcl    DWORD PTR [ebx],0x7c
  410492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410493:	cmp    BYTE PTR [esp+ebx*1+0x787c90e2],ah
  41049a:	lock fsub st(6),st
  41049d:	div    DWORD PTR [ecx-0x7d3abce6]
  4104a3:	aad    0x28
  4104a5:	mov    esi,0xbafaff69
  4104aa:	repz sar DWORD PTR [edi+0x3d1dd640],0xd6
  4104b2:	sbb    ah,BYTE PTR [edx-0xd]
  4104b5:	in     eax,dx
  4104b6:	cwde   
  4104b7:	add    dl,BYTE PTR [ecx-0x83943b3]
  4104bd:	jecxz  0x4104b7
  4104bf:	add    eax,esi
  4104c1:	arpl   bx,sp
  4104c3:	fsubr  DWORD PTR [esi-0x3c]
  4104c6:	dec    eax
  4104c7:	fwait
  4104c8:	je     0x410548
  4104ca:	sbb    dl,cl
  4104cc:	xchg   ebp,eax
  4104cd:	pusha  
  4104ce:	push   edx
  4104cf:	ins    DWORD PTR es:[edi],dx
  4104d0:	cdq    
  4104d1:	fs sbb eax,0x63edd7cd
  4104d7:	(bad)  
  4104d8:	push   ebx
  4104d9:	cmp    esp,DWORD PTR [esi+0xd]
  4104dc:	mov    esp,0x36043fb8
  4104e1:	(bad)  
  4104e2:	cli    
  4104e3:	clc    
  4104e4:	add    bh,BYTE PTR [esi]
  4104e6:	xchg   ebp,eax
  4104e7:	pop    es
  4104e8:	ins    BYTE PTR es:[edi],dx
  4104e9:	es cld 
  4104eb:	retf   
  4104ec:	xchg   ecx,eax
  4104ed:	stos   BYTE PTR es:[edi],al
  4104ee:	mov    eax,0xe37d8427
  4104f3:	mov    bh,0xab
  4104f5:	enter  0xc015,0xbf
  4104f9:	or     BYTE PTR [ecx+0x2d],dh
  4104fc:	test   DWORD PTR [esi-0x66],ebp
  4104ff:	mov    edx,0xc1c3f3d9
  410504:	mov    eax,ds:0x40c17d29
  410509:	add    ecx,esp
  41050b:	xor    al,0xc
  41050d:	ins    BYTE PTR es:[edi],dx
  41050e:	push   ds
  41050f:	(bad)  
  410510:	push   edi
  410511:	sub    ah,BYTE PTR ds:0x5c36db2
  410517:	pop    edi
  410518:	loop   0x410502
  41051a:	fbstp  TBYTE PTR ds:0xbbf561f8
  410520:	mov    ebx,0xb2d2cf0f
  410525:	stos   DWORD PTR es:[edi],eax
  410526:	jg     0x4105a0
  410528:	out    0xbe,al
  41052a:	fcomip st,st(4)
  41052c:	add    eax,0x137f2c7f
  410531:	xchg   ebp,eax
  410532:	inc    ecx
  410533:	clc    
  410534:	daa    
  410535:	mov    ds:0xfe05f702,eax
  41053a:	adc    eax,0xa20beffc
  41053f:	cmp    ebx,ebx
  410541:	stc    
  410542:	lods   al,BYTE PTR ds:[esi]
  410543:	jmp    0x410552
  410545:	imul   ebp,DWORD PTR [eax-0x62],0xffffff8d
  410549:	mov    al,0xb4
  41054b:	lock mov ah,0xec
  41054e:	jno    0x4105b8
  410550:	je     0x410573
  410552:	ds push esp
  410554:	lahf   
  410555:	or     bl,BYTE PTR [esi-0x5502f66b]
  41055b:	stos   DWORD PTR es:[edi],eax
  41055c:	(bad)  
  41055e:	mov    ah,0x39
  410560:	cdq    
  410561:	adc    DWORD PTR [ebp-0x4a243f07],esi
  410567:	nop
  410568:	push   edi
  410569:	pushf  
  41056a:	dec    eax
  41056b:	lock mov ah,0xff
  41056e:	mov    es,WORD PTR [eax]
  410570:	mov    BYTE PTR ds:0xd0879173,dh
  410576:	inc    ecx
  410577:	loope  0x41050a
  410579:	std    
  41057a:	fstp   QWORD PTR [edi+edx*1]
  41057d:	xchg   edi,eax
  41057e:	ss pop esp
  410580:	pop    ss
  410581:	pushf  
  410582:	mov    al,0xb7
  410584:	test   al,0x53
  410586:	dec    ecx
  410587:	leave  
  410588:	repz dec esi
  41058a:	xor    DWORD PTR [ebp-0x6c4a2484],eax
  410590:	push   eax
  410591:	jmp    0x441c:0xcd158da8
  410598:	pop    edx
  410599:	or     al,0x21
  41059b:	(bad)  [ebx+edx*4+0x2f]
  41059f:	xchg   ebp,eax
  4105a0:	add    BYTE PTR [esi],ch
  4105a2:	retf   
  4105a3:	loop   0x410572
  4105a5:	scas   al,BYTE PTR es:[edi]
  4105a6:	mov    al,ds:0x8a676e5e
  4105ab:	sahf   
  4105ac:	jnp    0x410544
  4105ae:	jo     0x4105d5
  4105b0:	sub    al,0xc6
  4105b2:	xor    al,0x9e
  4105b4:	ds dec ecx
  4105b6:	in     al,0x45
  4105b8:	inc    eax
  4105b9:	or     al,0x71
  4105bb:	lock cmp al,0xdf
  4105be:	aam    0x1e
  4105c0:	mov    ah,0x4f
  4105c2:	cmp    eax,0xc2be1f25
  4105c7:	pop    esi
  4105c8:	adc    al,0x13
  4105ca:	xlat   BYTE PTR ds:[ebx]
  4105cb:	int    0xae
  4105cd:	leave  
  4105ce:	into   
  4105cf:	cmp    eax,0x2edd01da
  4105d4:	sahf   
  4105d5:	test   al,0x19
  4105d7:	push   0x15
  4105d9:	lahf   
  4105da:	cmc    
  4105db:	arpl   bx,dx
  4105dd:	jo     0x410567
  4105df:	aaa    
  4105e0:	pop    ebx
  4105e1:	sbb    ebx,ebp
  4105e3:	add    al,bh
  4105e5:	das    
  4105e6:	adc    DWORD PTR [edx+esi*1-0x68ad14d5],eax
  4105ed:	cmp    bh,0xee
  4105f0:	mov    eax,ds:0xdf05f940
  4105f5:	leave  
  4105f6:	mov    al,0xc7
  4105f8:	je     0x4105d5
  4105fa:	pusha  
  4105fb:	int    0x8
  4105fd:	not    ah
  4105ff:	mov    ebp,0x2d357085
  410604:	push   cs
  410605:	push   ebp
  410606:	in     eax,0xc4
  410608:	sahf   
  410609:	idiv   BYTE PTR [ebp-0x745aa538]
  41060f:	sub    eax,0xd99098e
  410614:	sbb    BYTE PTR ds:[edi-0x48],dh
  410618:	int    0x7e
  41061a:	inc    ebp
  41061b:	add    BYTE PTR [ebx],dl
  41061d:	mov    eax,ds:0x6cabc331
  410622:	jnp    0x4105f0
  410624:	dec    ecx
  410625:	ds enter 0x474f,0xfa
  41062a:	adc    dh,BYTE PTR [eax-0x923229d]
  410630:	out    dx,eax
  410631:	lahf   
  410632:	clc    
  410633:	mov    ds:0x9b546fda,al
  410638:	sbb    al,0x21
  41063a:	in     eax,dx
  41063b:	lahf   
  41063c:	je     0x410681
  41063e:	jo     0x41069f
  410640:	loopne 0x4106b5
  410642:	rcl    DWORD PTR [edi],cl
  410644:	mov    esp,0x21cfcd2c
  410649:	pop    ds
  41064a:	push   edi
  41064b:	pop    esp
  41064c:	ins    DWORD PTR es:[edi],dx
  41064d:	and    DWORD PTR [ebx+eiz*4+0x1a],ecx
  410651:	cmp    edi,DWORD PTR [eax]
  410653:	push   ecx
  410654:	pop    edx
  410655:	les    ecx,FWORD PTR [edi-0x33]
  410658:	repz (bad) 
  41065c:	pop    ss
  41065d:	ror    DWORD PTR [edx-0x72a92261],cl
  410663:	xchg   esp,eax
  410664:	icebp  
  410665:	inc    eax
  410666:	push   eax
  410667:	es or  al,0x9d
  41066a:	xchg   DWORD PTR [eax+esi*8],eax
  41066d:	into   
  41066e:	retf   0xfd37
  410671:	push   ecx
  410672:	xor    bh,BYTE PTR [ecx+0x77cffc17]
  410678:	push   0xffffffb3
  41067a:	push   eax
  41067b:	or     cl,BYTE PTR fs:[ebx-0x30684bde]
  410682:	jl     0x41063d
  410684:	push   esi
  410685:	and    edi,DWORD PTR [ebx-0x2e]
  410688:	or     eax,0xcbb7c0e4
  41068d:	lock popa 
  41068f:	test   DWORD PTR [edi],ebp
  410691:	mov    ds:0xf3c928d8,al
  410696:	stc    
  410697:	lods   eax,DWORD PTR ds:[esi]
  410698:	or     esi,DWORD PTR [ecx+0x28640f61]
  41069e:	dec    edi
  41069f:	sub    esi,DWORD PTR [ebx-0x43]
  4106a2:	pop    ss
  4106a3:	test   al,0xa9
  4106a5:	adc    bh,0x9
  4106a8:	push   0xfffffff5
  4106aa:	into   
  4106ab:	repz jmp 0x169:0xe93cc2fa
  4106b3:	xor    eax,0x6659e657
  4106b8:	cmp    DWORD PTR [ecx-0x1b],edi
  4106bb:	adc    esp,ecx
  4106bd:	into   
  4106be:	mov    edi,0x6208b327
  4106c3:	push   cs
  4106c4:	jge    0x4106f1
  4106c6:	mov    DWORD PTR [ecx],ecx
  4106c8:	pop    ebp
  4106c9:	cld    
  4106ca:	or     al,0xbe
  4106cc:	xchg   BYTE PTR [edi],bh
  4106ce:	cli    
  4106cf:	nop
  4106d0:	xor    eax,0x3200cc62
  4106d5:	push   eax
  4106d6:	rol    DWORD PTR [ecx],cl
  4106d8:	xor    ah,al
  4106da:	sub    bh,al
  4106dc:	loopne 0x410726
  4106de:	out    0xc,eax
  4106e0:	xchg   DWORD PTR [eax+0xe79df29],ebp
  4106e6:	mov    cl,0x67
  4106e8:	adc    esi,DWORD PTR [ebx+0x18]
  4106eb:	pusha  
  4106ec:	retf   0x6345
  4106ef:	outs   dx,DWORD PTR ds:[esi]
  4106f0:	or     eax,DWORD PTR [edx+0x6a]
  4106f3:	(bad)  [edi-0x62d5cfc3]
  4106f9:	(bad)  
  4106fb:	std    
  4106fc:	add    edx,esi
  4106fe:	and    eax,0xbf852560
  410703:	outs   dx,BYTE PTR ds:[esi]
  410704:	loope  0x410699
  410706:	out    0xaf,eax
  410708:	(bad)  
  410709:	int    0xa1
  41070b:	ss call sp
  41070f:	fldenv [ebx+0x18429377]
  410715:	adc    eax,DWORD PTR [edi-0x55b5c4d0]
  41071b:	cmc    
  41071c:	or     BYTE PTR [ebx],ah
  41071e:	or     BYTE PTR [edx-0x2a],ah
  410721:	push   edx
  410722:	adc    ah,BYTE PTR [ebp-0x7]
  410725:	pushf  
  410726:	iret   
  410727:	dec    esi
  410728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410729:	mov    edx,0xcf0e75a4
  41072e:	addr16 loop 0x410730
  410731:	dec    ebx
  410732:	pop    esi
  410733:	xchg   DWORD PTR [edi+0x7b604f23],ebx
  410739:	in     eax,0xad
  41073b:	repnz imul eax,DWORD PTR [edi+0x68],0x18267a8e
  410743:	int3   
  410744:	in     al,dx
  410745:	dec    ebp
  410746:	mov    bl,0x7e
  410748:	scas   eax,DWORD PTR es:[edi]
  410749:	ret    
  41074a:	stos   BYTE PTR es:[edi],al
  41074b:	sbb    BYTE PTR [eax+ebx*4],dl
  41074e:	and    bh,bh
  410750:	jne    0x410775
  410752:	int3   
  410753:	mov    WORD PTR [eax+0x608bc27a],?
  410759:	test   eax,0xe129a954
  41075e:	les    esp,FWORD PTR [esi-0x76]
  410761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410762:	add    al,0x14
  410764:	out    dx,eax
  410765:	jge    0x4107cb
  410767:	sbb    ecx,DWORD PTR [esi]
  410769:	push   eax
  41076a:	adc    bl,0x24
  41076d:	popa   
  41076e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41076f:	out    0x41,eax
  410771:	adc    DWORD PTR [eax+0x64d5d486],esp
  410777:	fadd   DWORD PTR [edi-0x4d]
  41077a:	shl    dh,cl
  41077c:	jp     0x410766
  41077e:	pop    esp
  41077f:	xchg   edi,eax
  410780:	push   esi
  410781:	dec    edx
  410782:	call   0xcf353f8
  410787:	inc    esi
  410788:	ret    
  410789:	sub    esp,DWORD PTR [ebp+0x140213b6]
  41078f:	sbb    eax,0x1c26e444
  410794:	ins    BYTE PTR es:[edi],dx
  410795:	xlat   BYTE PTR ds:[ebx]
  410796:	xchg   edi,eax
  410797:	in     al,0xf7
  410799:	aam    0x53
  41079b:	xchg   ecx,eax
  41079c:	ds (bad) 
  41079e:	jge    0x4107f1
  4107a0:	inc    ebx
  4107a1:	movntq (bad),mm7
  4107a2:	out    0xf8,eax
  4107a4:	mov    ecx,0x2c4b7544
  4107a9:	dec    ecx
  4107aa:	jmp    0x1d226cee
  4107af:	test   al,0x43
  4107b1:	dec    esi
  4107b2:	fisub  DWORD PTR [edx]
  4107b4:	add    dh,al
  4107b6:	sub    al,0xee
  4107b8:	into   
  4107b9:	cmp    ecx,eax
  4107bb:	jecxz  0x41079a
  4107bd:	lds    ebp,FWORD PTR [edi-0x60f2edd9]
  4107c3:	xor    BYTE PTR [eax],dh
  4107c5:	fsub   st,st(4)
  4107c7:	cdq    
  4107c8:	jae    0x410825
  4107ca:	mov    dl,0xd7
  4107cc:	xor    al,0xf1
  4107ce:	leave  
  4107cf:	add    esp,ecx
  4107d1:	sar    DWORD PTR [ebx],0xd8
  4107d4:	sbb    BYTE PTR ds:0xee5dddfd,bl
  4107da:	inc    ebx
  4107db:	pop    ss
  4107dc:	mov    dh,0xbd
  4107de:	hlt    
  4107df:	cdq    
  4107e0:	rol    DWORD PTR [edx+0x40],0xe0
  4107e4:	test   DWORD PTR [eax],ecx
  4107e6:	ss push ebp
  4107e8:	or     DWORD PTR [esi-0xf],esi
  4107eb:	inc    esi
  4107ec:	sbb    eax,0x9842d080
  4107f1:	loop   0x41083c
  4107f3:	repz les edx,FWORD PTR [edx]
  4107f6:	ret    0xad81
  4107f9:	cmp    BYTE PTR [ecx+0x74cd8d7e],dh
  4107ff:	add    al,0x40
  410801:	jmp    0x7e42:0xebb235ef
  410808:	and    esi,DWORD PTR [esi+0x67]
  41080b:	add    eax,0x8d13c7eb
  410810:	sub    al,0xc3
  410812:	and    DWORD PTR [eax],0xffffffcd
  410815:	sti    
  410816:	mov    esp,0x45e5a35d
  41081b:	cli    
  41081c:	adc    eax,ebp
  41081e:	inc    esi
  41081f:	or     eax,0x89e73275
  410824:	mov    ecx,0x46c14043
  410829:	and    BYTE PTR [ebx+0x3f8752e2],bl
  41082f:	shl    BYTE PTR [ebx-0x21eaeed],cl
  410835:	xchg   ecx,eax
  410836:	and    al,BYTE PTR [ebx+0x40]
  410839:	mov    bh,0xe6
  41083b:	mov    ebx,DWORD PTR [ebp-0x29d8cca5]
  410841:	and    edi,ebp
  410843:	and    ebx,ebx
  410845:	add    al,0x2e
  410847:	jb     0x41088a
  410849:	(bad)  
  41084a:	mov    ebx,0x4e57127e
  41084f:	outs   dx,DWORD PTR ds:[esi]
  410850:	lahf   
  410851:	aad    0x88
  410853:	mov    edi,es
  410855:	pop    edx
  410856:	fmul   DWORD PTR [ebx-0x4a0c1a5]
  41085c:	push   ss
  41085d:	cmp    DWORD PTR [esi+0x7a767463],edi
  410863:	loopne 0x41082e
  410865:	xchg   BYTE PTR [esi-0x3b],dh
  410868:	call   0xfcac:0x31320912
  41086f:	sbb    DWORD PTR [ebx+0x1a],eax
  410872:	jle    0x41083c
  410874:	fs push esi
  410876:	sti    
  410877:	loopne 0x41088b
  410879:	fdivr  st,st(4)
  41087b:	dec    edi
  41087c:	mov    cl,0x39
  41087e:	xor    DWORD PTR [ecx+0x8],0xeed88b77
  410885:	in     al,dx
  410886:	pop    esi
  410887:	fstp   DWORD PTR [ebx]
  410889:	xor    bl,BYTE PTR [eax+0x46517974]
  41088f:	mov    bh,0xa0
  410891:	jo     0x4108f4
  410893:	jmp    0x4cb5e1da
  410898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410899:	test   eax,0xb28b4a46
  41089e:	outs   dx,DWORD PTR ds:[esi]
  41089f:	in     eax,dx
  4108a0:	inc    esi
  4108a1:	ret    
  4108a2:	addr16 in eax,0x2e
  4108a5:	fst    QWORD PTR [esi]
  4108a7:	adc    eax,0x94e5270b
  4108ac:	push   ss
  4108ad:	ret    0xa6e7
  4108b0:	fbstp  TBYTE PTR [edx+ebx*8+0x4e1e781e]
  4108b7:	sub    ah,BYTE PTR [ecx-0x5a]
  4108ba:	test   BYTE PTR [esi],al
  4108bc:	in     eax,0x44
  4108be:	push   cs
  4108bf:	loop   0x4108fa
  4108c1:	sub    al,0x9d
  4108c3:	or     BYTE PTR [esi-0x35],0xad
  4108c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108c8:	adc    BYTE PTR [eax+0x76],dl
  4108cb:	pop    ecx
  4108cc:	int    0xc8
  4108ce:	cmp    bl,BYTE PTR [esp+ebp*1+0x78aa4d9d]
  4108d5:	cwde   
  4108d6:	xchg   DWORD PTR [ecx+edx*8+0x70],ebp
  4108da:	push   ds
  4108db:	ja     0x41095b
  4108dd:	bound  ebx,QWORD PTR [edi+0x29c7fb23]
  4108e3:	sbb    dh,bl
  4108e5:	loope  0x41094d
  4108e7:	popf   
  4108e8:	daa    
  4108e9:	in     eax,0x97
  4108eb:	or     dh,BYTE PTR fs:[edi]
  4108ee:	inc    DWORD PTR [eax+ecx*4]
  4108f1:	add    BYTE PTR [edi],ch
  4108f3:	cwde   
  4108f4:	inc    ecx
  4108f5:	jne    0x410899
  4108f7:	gs inc esp
  4108f9:	jo     0x4108a0
  4108fb:	mov    dh,0xd7
  4108fd:	jmp    0x18ac2397
  410902:	out    0xcb,al
  410904:	test   DWORD PTR [ebx],ecx
  410906:	ret    
  410907:	fwait
  410908:	and    eax,0xb455c51
  41090d:	ror    DWORD PTR [esi-0x4],cl
  410910:	jbe    0x410941
  410912:	pop    es
  410913:	xor    BYTE PTR [edx+0x28f3243e],ch
  410919:	inc    esi
  41091a:	mov    al,0xa0
  41091c:	ret    0xb64d
  41091f:	test   edi,esp
  410921:	jecxz  0x4108b8
  410923:	cmc    
  410924:	push   esi
  410925:	loope  0x410982
  410927:	xchg   edi,eax
  410928:	push   esp
  410929:	loope  0x410935
  41092b:	in     eax,0x48
  41092d:	idiv   DWORD PTR [edx+0x5d]
  410930:	(bad)  
  410931:	cld    
  410932:	mov    dl,0xcf
  410934:	cld    
  410935:	xor    ebx,esi
  410937:	push   ds
  410938:	sti    
  410939:	test   DWORD PTR cs:[edi+0x487e6a6c],esp
  410940:	sub    ebp,DWORD PTR [ebp-0x5adec555]
  410946:	fld    DWORD PTR [ecx+eax*8]
  410949:	push   ss
  41094a:	(bad)  
  41094b:	jbe    0x4108e2
  41094d:	out    0x47,eax
  41094f:	rol    BYTE PTR [eax-0x6f23a586],cl
  410955:	mov    cl,0xba
  410957:	dec    edx
  410958:	cli    
  410959:	jl     0x4108f5
  41095b:	lods   eax,DWORD PTR ds:[esi]
  41095c:	hlt    
  41095d:	(bad)  
  41095e:	loopne 0x41094b
  410960:	pushf  
  410961:	xchg   ecx,eax
  410962:	shl    ebp,cl
  410964:	gs dec ebx
  410966:	cli    
  410967:	add    al,0x2f
  410969:	leave  
  41096a:	fnstenv [edi+0x64]
  41096d:	mov    ch,0x6f
  41096f:	repz int 0x38
  410972:	sti    
  410973:	jp     0x410941
  410975:	fstp   TBYTE PTR [ecx+0x53]
  410978:	dec    edi
  410979:	repnz pop eax
  41097b:	sbb    eax,0x12d8f334
  410980:	dec    esp
  410981:	push   esi
  410982:	cs mov eax,0x2a6ba93d
  410988:	repnz aas 
  41098a:	inc    edi
  41098b:	dec    ecx
  41098c:	mov    edx,0x1955afc7
  410991:	mov    eax,ds:0x86b76cae
  410996:	hlt    
  410997:	mov    esi,0x8a69bcdc
  41099c:	pushf  
  41099d:	je     0x410965
  41099f:	mov    al,ds:0xc5e3a3b2
  4109a4:	stos   DWORD PTR es:[edi],eax
  4109a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109a6:	adc    eax,0xbbed303d
  4109ab:	fs aas 
  4109ad:	dec    ebx
  4109ae:	ins    DWORD PTR es:[edi],dx
  4109af:	test   DWORD PTR [eax+eax*8+0xd],ecx
  4109b3:	dec    ecx
  4109b4:	in     al,dx
  4109b5:	xchg   DWORD PTR [edi],esp
  4109b7:	push   ss
  4109b8:	xchg   edi,eax
  4109b9:	test   bh,bh
  4109bb:	push   ebp
  4109bc:	(bad)
  4109bf:	sbb    BYTE PTR [edx],cl
  4109c1:	cmp    edx,DWORD PTR [esi-0x61728bce]
  4109c7:	mov    al,0x89
  4109c9:	das    
  4109ca:	push   eax
  4109cb:	xor    eax,0x15224031
  4109d0:	xor    eax,0x32748d4f
  4109d5:	cmp    eax,0x3b66378b
  4109da:	retf   0x850f
  4109dd:	dec    ebp
  4109de:	fdiv   st(7),st
  4109e0:	dec    DWORD PTR [ebx+0x4244350d]
  4109e6:	add    BYTE PTR [ebx+0x19889],cl
  4109ec:	add    BYTE PTR [ecx+0x21e901],cl
  4109f2:	add    BYTE PTR [eax],al
  4109f4:	mov    ecx,DWORD PTR [ebp+0x18]
  4109f7:	cmp    ecx,0xf89c85b2
  4109fd:	jne    0x410a15
  410a03:	push   eax
  410a04:	push   DWORD PTR [ebp+0x14]
  410a07:	push   DWORD PTR [ebp+0x10]
  410a0a:	push   DWORD PTR [ebp+0xc]
  410a0d:	push   DWORD PTR [ebp+0x8]
  410a10:	call   0x40772b
  410a15:	pop    edi
  410a16:	pop    esi
  410a17:	leave  
  410a18:	ret    0x14
  410a1b:	push   ebp
  410a1c:	mov    ebp,esp
  410a1e:	push   ecx
  410a1f:	and    DWORD PTR ds:0x422004,0x0
  410a29:	jmp    0x410a3b
  410a2e:	mov    edx,DWORD PTR ds:0x422004
  410a34:	inc    edx
  410a35:	mov    DWORD PTR ds:0x422004,edx
  410a3b:	cmp    DWORD PTR ds:0x422004,0x13
  410a42:	jae    0x410a8f
  410a48:	cmp    DWORD PTR ds:0x422004,0xb
  410a4f:	jne    0x410a68
  410a55:	push   DWORD PTR [ebp-0xc]
  410a58:	push   0x42201c
  410a5d:	push   0x5e67
  410a62:	call   DWORD PTR ds:0x4247d9
  410a68:	cmp    DWORD PTR ds:0x422004,0xa
  410a6f:	jne    0x410a84
  410a75:	xor    edx,edx
  410a77:	add    edx,DWORD PTR ds:0x422004
  410a7d:	inc    edx
  410a7e:	mov    DWORD PTR ds:0x422004,edx
  410a84:	jmp    0x410a2e
  410a89:	xor    edx,DWORD PTR ds:0x420ef4
  410a8f:	push   ecx
  410a90:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  410a97:	xor    eax,eax
  410a99:	xor    eax,DWORD PTR ds:0x420f9c
  410a9f:	adc    DWORD PTR ds:0x420fb4,eax
  410aa5:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  410aac:	neg    eax
  410aae:	mov    eax,DWORD PTR [ebp-0x4]
  410ab1:	mov    ecx,DWORD PTR ds:0x420fa0
  410ab7:	adc    DWORD PTR ds:0x420e7e,ecx
  410abd:	push   esi
  410abe:	mov    esi,DWORD PTR [ebp-0x8]
  410ac1:	mov    edx,DWORD PTR ds:0x420f44
  410ac7:	mov    ecx,DWORD PTR ds:0x423010
  410acd:	sub    ecx,edx
  410acf:	xor    edx,DWORD PTR [edx+ecx*1]
  410ad2:	mov    edx,0x7510896
  410ad7:	mov    DWORD PTR ds:0x420fa4,0x1c
  410ae1:	cmp    DWORD PTR ds:0x420fa4,0x0
  410ae8:	je     0x410b1f
  410aee:	cmp    DWORD PTR ds:0x420fa4,0x1e
  410af5:	jne    0x410b0b
  410afb:	push   0x424143
  410b00:	push   0x4240f3
  410b05:	call   DWORD PTR ds:0x4247dd
  410b0b:	xor    ecx,ecx
  410b0d:	or     ecx,DWORD PTR ds:0x420fa4
  410b13:	dec    ecx
  410b14:	mov    DWORD PTR ds:0x420fa4,ecx
  410b1a:	jmp    0x410ae1
  410b1f:	xor    eax,edx
  410b21:	xor    esi,edx
  410b23:	mov    ecx,0x3272dd
  410b28:	add    esi,ecx
  410b2a:	add    eax,ecx
  410b2c:	imul   eax,esi
  410b2f:	mov    esi,DWORD PTR [ebp+0xc]
  410b32:	cmp    esi,eax
  410b34:	jne    0x410b50
  410b3a:	mov    eax,DWORD PTR [ebp-0x4]
  410b3d:	mov    esi,DWORD PTR [ebp-0x8]
  410b40:	xor    eax,edx
  410b42:	xor    esi,edx
  410b44:	add    eax,ecx
  410b46:	add    esi,ecx
  410b48:	imul   eax,esi
  410b4b:	jmp    0x410b8b
  410b50:	mov    eax,DWORD PTR [ebp+0xc]
  410b53:	mov    eax,DWORD PTR [eax+0x78]
  410b56:	mov    DWORD PTR [ebp+0xc],eax
  410b59:	mov    eax,DWORD PTR [ebp-0x4]
  410b5c:	mov    esi,DWORD PTR [ebp-0x8]
  410b5f:	xor    eax,edx
  410b61:	xor    esi,edx
  410b63:	add    eax,ecx
  410b65:	add    esi,ecx
  410b67:	imul   eax,esi
  410b6a:	mov    esi,DWORD PTR [ebp+0xc]
  410b6d:	cmp    esi,eax
  410b6f:	mov    eax,DWORD PTR [ebp-0x4]
  410b72:	je     0x410b3d
  410b78:	xor    eax,edx
  410b7a:	add    eax,ecx
  410b7c:	mov    ecx,DWORD PTR [ebp+0xc]
  410b7f:	imul   eax,ecx
  410b82:	add    eax,DWORD PTR [ebp+0x8]
  410b85:	mov    DWORD PTR [ebp+0xc],eax
  410b88:	mov    eax,DWORD PTR [ebp+0xc]
  410b8b:	pop    esi
  410b8c:	leave  
  410b8d:	ret    0x8
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	push   ecx
  410b94:	and    DWORD PTR ds:0x420ef0,0x0
  410b9e:	mov    eax,ds:0x420ef0
  410ba3:	inc    eax
  410ba4:	mov    ds:0x420ef0,eax
  410ba9:	cmp    DWORD PTR ds:0x420ef0,0x6
  410bb0:	jne    0x410bc7
  410bb6:	push   0x613e
  410bbb:	push   DWORD PTR [ebp-0xc]
  410bbe:	push   DWORD PTR [ebp-0x10]
  410bc1:	call   DWORD PTR ds:0x4247e1
  410bc7:	cmp    DWORD PTR ds:0x420ef0,0x5
  410bce:	jne    0x410be2
  410bd4:	xor    eax,eax
  410bd6:	or     eax,DWORD PTR ds:0x420ef0
  410bdc:	inc    eax
  410bdd:	mov    ds:0x420ef0,eax
  410be2:	cmp    DWORD PTR ds:0x420ef0,0x1b
  410be9:	jb     0x410b9e
  410bef:	or     DWORD PTR ds:0x420e8e,0x6d67
  410bf9:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  410c00:	mov    eax,DWORD PTR [ebp-0x4]
  410c03:	mov    ecx,DWORD PTR ds:0x420f08
  410c09:	sbb    ecx,DWORD PTR ds:0x420ef4
  410c0f:	mov    DWORD PTR ds:0x420f08,ecx
  410c15:	mov    edx,DWORD PTR [ebp+0x10]
  410c18:	mov    ecx,DWORD PTR ds:0x42201c
  410c1e:	sub    DWORD PTR ds:0x42200c,ecx
  410c24:	mov    ecx,0x7510896
  410c29:	xor    eax,ecx
  410c2b:	add    eax,0x3272dd
  410c30:	mov    DWORD PTR [edx],eax
  410c32:	mov    eax,DWORD PTR [ebp+0xc]
  410c35:	xor    eax,ecx
  410c37:	push   esi
  410c38:	mov    esi,DWORD PTR [ebp+0x10]
  410c3b:	mov    edx,0x3272dd
  410c40:	add    eax,edx
  410c42:	mov    DWORD PTR [esi+0x4],eax
  410c45:	mov    eax,DWORD PTR [ebp+0x14]
  410c48:	mov    esi,DWORD PTR [ebp+0x10]
  410c4b:	mov    DWORD PTR [esi+0x8],eax
  410c4e:	mov    eax,DWORD PTR [ebp+0x18]
  410c51:	mov    esi,DWORD PTR [ebp+0x10]
  410c54:	mov    DWORD PTR [esi+0xc],eax
  410c57:	mov    eax,DWORD PTR [ebp+0x1c]
  410c5a:	mov    esi,DWORD PTR [ebp+0x10]
  410c5d:	mov    DWORD PTR [esi+0x10],eax
  410c60:	mov    eax,DWORD PTR [ebp+0x8]
  410c63:	xor    eax,ecx
  410c65:	add    eax,edx
  410c67:	pop    esi
  410c68:	leave  
  410c69:	ret    0x18
  410c6c:	push   ebp
  410c6d:	mov    ebp,esp
  410c6f:	sub    esp,0xa4
  410c75:	or     eax,eax
  410c77:	mov    ecx,DWORD PTR [ebp+0x8]
  410c7a:	mov    eax,0x8a89
  410c7f:	xor    ax,WORD PTR [ecx+0x20]
  410c83:	mov    ecx,0x3b4c
  410c88:	and    DWORD PTR ds:0x420fac,0x1c5
  410c92:	add    ax,cx
  410c95:	movzx  eax,ax
  410c98:	and    DWORD PTR ds:0x420e8a,0x0
  410ca2:	mov    ecx,DWORD PTR ds:0x420e8a
  410ca8:	inc    ecx
  410ca9:	mov    DWORD PTR ds:0x420e8a,ecx
  410caf:	cmp    DWORD PTR ds:0x420e8a,0x9
  410cb6:	jne    0x410ccd
  410cbc:	push   DWORD PTR [ebp-0x20]
  410cbf:	push   0x420f08
  410cc4:	push   DWORD PTR [ebp-0x10]
  410cc7:	call   DWORD PTR ds:0x4247e5
  410ccd:	cmp    DWORD PTR ds:0x420e8a,0x8
  410cd4:	jne    0x410ce9
  410cda:	xor    ecx,ecx
  410cdc:	add    ecx,DWORD PTR ds:0x420e8a
  410ce2:	inc    ecx
  410ce3:	mov    DWORD PTR ds:0x420e8a,ecx
  410ce9:	cmp    DWORD PTR ds:0x420e8a,0x16
  410cf0:	jb     0x410ca2
  410cf6:	mov    DWORD PTR [ebp-0x18],eax
  410cf9:	mov    BYTE PTR [ebp-0x1],0x7d
  410cfd:	sub    ecx,DWORD PTR ds:0x420e9a
  410d03:	lea    eax,[ebp-0x1]
  410d06:	and    DWORD PTR ds:0x420e82,0x0
  410d10:	xor    ecx,ecx
  410d12:	or     ecx,DWORD PTR ds:0x420e82
  410d18:	inc    ecx
  410d19:	mov    DWORD PTR ds:0x420e82,ecx
  410d1f:	cmp    DWORD PTR ds:0x420e82,0x14
  410d26:	jne    0x410d32
  410d2c:	call   DWORD PTR ds:0x4247f1
  410d32:	cmp    DWORD PTR ds:0x420e82,0x11
  410d39:	jb     0x410d10
  410d3f:	mov    DWORD PTR [ebp-0x10],eax
  410d42:	or     DWORD PTR ds:0x420fa8,edx
  410d48:	mov    al,BYTE PTR [ebp-0x1]
  410d4b:	sub    DWORD PTR ds:0x422008,ebx
  410d51:	mov    ecx,DWORD PTR [ebp-0x10]
  410d54:	xor    al,0x71
  410d56:	sbb    DWORD PTR ds:0x420fb0,0x420f04
  410d60:	sub    al,0xb
  410d62:	add    DWORD PTR ds:0x420f00,0x7fa5
  410d6c:	mov    BYTE PTR [ecx],al
  410d6e:	sbb    ecx,0xfb
  410d74:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  410d7b:	neg    eax
  410d7d:	push   ebx
  410d7e:	and    DWORD PTR ds:0x420f68,ebx
  410d84:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  410d8b:	not    ecx
  410d8d:	mov    ecx,DWORD PTR [ebp-0x14]
  410d90:	and    DWORD PTR ds:0x420ef8,0x0
  410d9a:	mov    eax,ds:0x420ef8
  410d9f:	inc    eax
  410da0:	mov    ds:0x420ef8,eax
  410da5:	cmp    DWORD PTR ds:0x420ef8,0xd
  410dac:	jne    0x410db8
  410db2:	call   DWORD PTR ds:0x4247f5
  410db8:	cmp    DWORD PTR ds:0x420ef8,0xc
  410dbf:	jne    0x410dd0
  410dc5:	mov    eax,ds:0x420ef8
  410dca:	inc    eax
  410dcb:	mov    ds:0x420ef8,eax
  410dd0:	cmp    DWORD PTR ds:0x420ef8,0x1f
  410dd7:	jb     0x410d9a
  410ddd:	or     DWORD PTR ds:0x420fa4,edx
  410de3:	push   esi
  410de4:	mov    eax,0x7510896
  410de9:	xor    ecx,eax
  410deb:	and    DWORD PTR ds:0x420fb0,0x0
  410df5:	jmp    0x410e07
  410dfa:	mov    esi,DWORD PTR ds:0x420fb0
  410e00:	inc    esi
  410e01:	mov    DWORD PTR ds:0x420fb0,esi
  410e07:	cmp    DWORD PTR ds:0x420fb0,0x16
  410e0e:	jae    0x410e4f
  410e14:	cmp    DWORD PTR ds:0x420fb0,0x26
  410e1b:	jne    0x410e44
  410e21:	push   0x2107
  410e26:	push   DWORD PTR [ebp-0xc]
  410e29:	push   0x420ea2
  410e2e:	push   DWORD PTR [ebp-0xc]
  410e31:	push   0x1296
  410e36:	push   0x8533
  410e3b:	push   DWORD PTR [ebp-0x24]
  410e3e:	call   DWORD PTR ds:0x4247f9
  410e44:	jmp    0x410dfa
  410e49:	xor    esi,0x6f84
  410e4f:	mov    esi,0x3272dd
  410e54:	push   edi
  410e55:	adc    DWORD PTR ds:0x422000,0x420fb0
  410e5f:	add    ecx,esi
  410e61:	jmp    0x410e7b
  410e66:	mov    DWORD PTR ds:0x422018,0x61e6
  410e70:	mov    dl,BYTE PTR [ebp-0x1]
  410e73:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  410e7a:	inc    ecx
  410e7b:	mov    DWORD PTR ds:0x420fa8,0x4793
  410e85:	cmp    ecx,0x40
  410e88:	mov    DWORD PTR ds:0x420f98,0x2ddc
  410e92:	jb     0x410e66
  410e98:	mov    edx,DWORD PTR ds:0x420e7a
  410e9e:	adc    DWORD PTR ds:0x420f58,edx
  410ea4:	mov    edx,DWORD PTR [ebp-0x14]
  410ea7:	add    DWORD PTR ds:0x420f9c,0x420e8e
  410eb1:	xor    edx,eax
  410eb3:	or     DWORD PTR ds:0x420e9e,0x6c51
  410ebd:	add    edx,esi
  410ebf:	mov    DWORD PTR ds:0x420f98,0x212f
  410ec9:	jmp    0x410f67
  410ece:	mov    ecx,DWORD PTR ds:0x420f58
  410ed4:	adc    ecx,DWORD PTR ds:0x420ef8
  410eda:	mov    DWORD PTR ds:0x420f58,ecx
  410ee0:	mov    edi,DWORD PTR [ebp+0x8]
  410ee3:	neg    ecx
  410ee5:	mov    ecx,0x8a89
  410eea:	mov    DWORD PTR ds:0x422010,0x1e03
  410ef4:	xor    cx,WORD PTR [edi+edx*4+0x2]
  410ef9:	xor    DWORD PTR ds:0x420efc,0x6f5f
  410f03:	mov    edi,0x3b4c
  410f08:	sbb    DWORD PTR ds:0x420f9c,0x63db
  410f12:	add    cx,di
  410f15:	add    DWORD PTR ds:0x42201c,0x420fa0
  410f1f:	movzx  ecx,cx
  410f22:	sub    DWORD PTR ds:0x420f08,0x420f5c
  410f2c:	mov    DWORD PTR [ebp-0x10],ecx
  410f2f:	mov    ecx,DWORD PTR [ebp+0x8]
  410f32:	add    DWORD PTR ds:0x422004,0x422010
  410f3c:	movzx  ecx,WORD PTR [ecx+edx*4]
  410f40:	xor    ecx,0x8a89
  410f46:	and    DWORD PTR ds:0x420ef8,0x48dd
  410f50:	add    ecx,edi
  410f52:	mov    edi,DWORD PTR [ebp-0x10]
  410f55:	mov    DWORD PTR ds:0x420fb4,0x2f78
  410f5f:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  410f66:	inc    edx
  410f67:	mov    DWORD PTR ds:0x420e7a,edx
  410f6d:	mov    ecx,DWORD PTR [ebp-0x18]
  410f70:	mov    DWORD PTR ds:0x420f08,0x1ffa
  410f7a:	cmp    edx,ecx
  410f7c:	mov    DWORD PTR ds:0x420efc,0x1e95
  410f86:	jne    0x410ece
  410f8c:	mov    ecx,DWORD PTR [ebp-0x14]
  410f8f:	add    edx,0x1ead
  410f95:	mov    edx,DWORD PTR [ebp+0x10]
  410f98:	sbb    DWORD PTR ds:0x422008,0x2f5c
  410fa2:	xor    ecx,eax
  410fa4:	and    DWORD PTR ds:0x422018,0x2dc0
  410fae:	add    ecx,esi
  410fb0:	jmp    0x41333d
  410fb5:	lods   eax,DWORD PTR ds:[esi]
  410fb6:	mov    ecx,0xd4095449
  410fbb:	jae    0x411038
  410fbd:	sbb    BYTE PTR [ebx+0x3b0a629f],0x9c
  410fc4:	stos   DWORD PTR es:[edi],eax
  410fc5:	cs scas al,BYTE PTR es:[edi]
  410fc7:	jp     0x411043
  410fc9:	or     bl,BYTE PTR [edi+0x7a]
  410fcc:	jp     0x410fbe
  410fce:	sub    al,0x6b
  410fd0:	and    BYTE PTR [edi],dh
  410fd2:	es cmp al,0x51
  410fd5:	dec    ebx
  410fd6:	cs call 0x25ef:0x23e9805f
  410fde:	adc    dh,BYTE PTR [esi+0x38840d4a]
  410fe4:	sub    cl,al
  410fe6:	mov    ecx,0xc380fee7
  410feb:	push   es
  410fec:	int3   
  410fed:	xchg   edi,eax
  410fee:	xchg   edx,eax
  410fef:	std    
  410ff0:	adc    eax,0x7e2054b4
  410ff5:	fcomp  QWORD PTR [edx-0x45]
  410ff8:	mov    WORD PTR [edi],?
  410ffa:	jo     0x411019
  410ffc:	xchg   edx,esp
  410ffe:	ret    0x422d
  411001:	sub    esp,DWORD PTR [edx-0x52]
  411004:	adc    BYTE PTR [edi-0x50],0x85
  411008:	leave  
  411009:	pop    edi
  41100a:	add    ecx,DWORD PTR [eax-0x10f27677]
  411010:	jno    0x410fe9
  411012:	cmp    ecx,DWORD PTR [edx-0x85a744f]
  411018:	jbe    0x1995349e
  41101e:	pusha  
  41101f:	and    DWORD PTR [esi],0x65
  411022:	ret    0x1368
  411025:	adc    DWORD PTR [ebp+edi*2-0x62],ecx
  411029:	push   ss
  41102a:	(bad)  
  41102b:	clc    
  41102c:	pop    eax
  41102d:	cld    
  41102e:	or     al,0x78
  411030:	aas    
  411031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411032:	inc    edx
  411033:	icebp  
  411034:	mov    edx,0x501eb47a
  411039:	ret    
  41103a:	aas    
  41103b:	push   es
  41103c:	scas   eax,DWORD PTR es:[edi]
  41103d:	dec    esi
  41103e:	dec    edx
  41103f:	and    ebx,eax
  411041:	popf   
  411042:	popf   
  411043:	ret    
  411044:	cmp    ah,al
  411046:	or     BYTE PTR [esi],ch
  411048:	inc    esi
  411049:	int    0x46
  41104b:	hlt    
  41104c:	inc    edx
  41104d:	lock pop eax
  41104f:	cdq    
  411050:	mov    esi,0xb5231d2b
  411055:	sbb    DWORD PTR [esi-0x29e3c82c],edi
  41105b:	sar    BYTE PTR [esi],cl
  41105d:	push   eax
  41105e:	arpl   WORD PTR [ebx+0x25],dx
  411061:	ss xchg ebx,eax
  411063:	sti    
  411064:	xchg   ebx,eax
  411065:	sti    
  411066:	inc    ebx
  411067:	in     eax,dx
  411068:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41106a:	push   cs
  41106b:	cmp    ch,BYTE PTR [esi]
  41106d:	daa    
  41106e:	fwait
  41106f:	xchg   BYTE PTR [eax+0x63774732],dh
  411075:	cmp    DWORD PTR [ebp-0x6],0x46a739fc
  41107c:	mov    al,0x46
  41107e:	loopne 0x41100b
  411080:	pop    ebp
  411081:	mov    dh,dh
  411083:	loop   0x411080
  411085:	outs   dx,BYTE PTR ds:[esi]
  411086:	add    ah,BYTE PTR [edi+0x3156c9a8]
  41108c:	popf   
  41108d:	mov    fs,esp
  41108f:	int3   
  411090:	dec    edi
  411091:	scas   al,BYTE PTR es:[edi]
  411092:	xchg   esi,eax
  411093:	cs pushf 
  411095:	punpcklwd mm6,mm7
  411098:	mov    ds:0xe61b3ff7,eax
  41109d:	je     0x4110d5
  41109f:	clc    
  4110a0:	pusha  
  4110a1:	loop   0x4110cb
  4110a3:	mov    edi,0x98ddd4ea
  4110a8:	pushf  
  4110a9:	xchg   ebx,eax
  4110aa:	or     edx,DWORD PTR [ecx-0x3a]
  4110ad:	push   edi
  4110ae:	daa    
  4110af:	dec    ebp
  4110b0:	(bad)  
  4110b1:	aam    0x12
  4110b3:	mov    al,0x1f
  4110b5:	xchg   BYTE PTR [esi],ah
  4110b7:	fild   WORD PTR [ebx]
  4110b9:	xchg   ebp,eax
  4110ba:	jl     0x41104f
  4110bc:	sbb    DWORD PTR [edx+0x6478af2e],edi
  4110c2:	inc    esp
  4110c3:	mov    ebx,0xeda6653c
  4110c8:	adc    eax,0x1c09677d
  4110cd:	jbe    0x4110df
  4110cf:	sti    
  4110d0:	sub    DWORD PTR [edi-0x5a],eax
  4110d3:	lds    ebx,FWORD PTR [esi+ebx*2+0x1a]
  4110d7:	popf   
  4110d8:	rol    cl,1
  4110da:	cwde   
  4110db:	mov    dl,0xc4
  4110dd:	jne    0x411116
  4110df:	dec    esi
  4110e0:	loopne 0x41110b
  4110e2:	push   cs
  4110e3:	xchg   edx,eax
  4110e4:	jnp    0x411114
  4110e6:	mov    ecx,0x6bd72185
  4110eb:	mov    ecx,0x184f5e8c
  4110f0:	xchg   esp,eax
  4110f1:	arpl   sp,si
  4110f3:	cmp    cl,dh
  4110f5:	add    DWORD PTR [ebp+0x265b30b4],ebp
  4110fb:	scas   al,BYTE PTR es:[edi]
  4110fc:	xor    DWORD PTR [ebx+0x47c9557d],ebp
  411102:	lods   al,BYTE PTR ds:[esi]
  411103:	or     eax,0xd44bfbdc
  411108:	cmp    al,0x9
  41110a:	sub    DWORD PTR [ecx+ebx*1+0x3d],ebp
  41110e:	or     DWORD PTR [ecx+0x2a],eax
  411111:	sub    BYTE PTR [edx+0x3],al
  411114:	pop    edx
  411115:	xor    BYTE PTR [ecx+0x37c483f5],ch
  41111b:	and    ebp,eax
  41111d:	fisubr WORD PTR [edi-0x72f96e33]
  411123:	mul    BYTE PTR [ebp-0x76887a90]
  411129:	cmp    BYTE PTR [ecx],ah
  41112b:	mov    ch,0x76
  41112d:	mul    DWORD PTR [ecx+0x2e]
  411130:	enter  0x4e00,0x4b
  411134:	arpl   WORD PTR [ebp+ebx*8+0x73b4bc50],si
  41113b:	dec    ebp
  41113c:	xor    edi,DWORD PTR [ebx-0x37911ee3]
  411142:	lock mov ebx,?
  411145:	xor    ch,dl
  411147:	ss pop esi
  411149:	jb     0x411146
  41114b:	push   ds
  41114c:	call   0x8a234138
  411151:	rcr    DWORD PTR [edi+0x1e628016],1
  411157:	mov    DWORD PTR [eax-0x12],edi
  41115a:	push   ebp
  41115b:	and    ebp,DWORD PTR [esi]
  41115d:	inc    esp
  41115e:	repz xchg ecx,eax
  411160:	fidiv  DWORD PTR [edi]
  411162:	mov    WORD PTR [ecx+esi*2+0x19398e15],ss
  411169:	jo     0x4111c6
  41116b:	mov    eax,ds:0x6621c8b1
  411170:	mov    DWORD PTR [ebp+ebp*1-0x49],ebx
  411174:	pop    esi
  411175:	sbb    DWORD PTR [esi+0x6af4a8d1],ebp
  41117b:	xchg   esi,eax
  41117c:	mov    eax,0xad2cf3e0
  411181:	mov    BYTE PTR [ebx-0x3a],bh
  411184:	jg     0x411147
  411186:	cmp    BYTE PTR [esp+ebp*1+0x5cf93923],bl
  41118d:	fs mov esi,0x24aa1b98
  411193:	cmp    edi,DWORD PTR [eax+0x667efb5e]
  411199:	jg     0x4111ad
  41119b:	sbb    eax,edi
  41119d:	jae    0x411162
  41119f:	mov    ecx,ebp
  4111a1:	or     eax,0x7737e53e
  4111a6:	push   eax
  4111a7:	and    esp,DWORD PTR [ebx]
  4111a9:	icebp  
  4111aa:	repnz cmc 
  4111ac:	jecxz  0x411186
  4111ae:	js     0x411189
  4111b0:	pop    edx
  4111b1:	push   ecx
  4111b2:	jmp    0x836b:0xff8c7d8b
  4111b9:	mov    esi,0x83353554
  4111be:	adc    al,0x3f
  4111c0:	inc    ecx
  4111c1:	test   eax,0x98b1af7
  4111c6:	jg     0x4111f2
  4111c8:	xchg   ebx,eax
  4111c9:	and    DWORD PTR [edi],edx
  4111cb:	pop    ebp
  4111cc:	xor    eax,0xf122afea
  4111d1:	or     esp,DWORD PTR [ecx+0x3b235edd]
  4111d7:	mov    bl,0x26
  4111d9:	add    BYTE PTR cs:[edx],cl
  4111dc:	xor    ah,BYTE PTR [ecx+0x1c75b340]
  4111e2:	stos   BYTE PTR es:[edi],al
  4111e3:	aam    0x16
  4111e5:	inc    ebx
  4111e6:	or     eax,0x7ce74ae7
  4111eb:	push   ss
  4111ec:	xchg   esp,eax
  4111ed:	fadd   QWORD PTR [ebx-0x5]
  4111f0:	div    BYTE PTR [eax-0x32]
  4111f3:	lea    ecx,[esi]
  4111f5:	push   ebp
  4111f6:	mov    bh,0xd3
  4111f8:	adc    al,0xd8
  4111fa:	mov    ds:0x73c50e59,eax
  4111ff:	inc    esp
  411200:	or     dh,dl
  411202:	jecxz  0x411244
  411204:	mov    BYTE PTR [eax+0x2e],al
  411207:	aam    0x1f
  411209:	or     eax,0x7dee6d0f
  41120e:	jo     0x411258
  411210:	rcl    BYTE PTR [edi],1
  411212:	das    
  411213:	xor    eax,0x2f56434
  411218:	out    dx,al
  411219:	std    
  41121a:	out    0x9f,eax
  41121c:	dec    ebp
  41121d:	inc    edi
  41121e:	push   ebp
  41121f:	mov    dl,0x67
  411221:	jl     0x41123c
  411223:	je     0x411286
  411225:	sub    eax,0xf7ee547d
  41122a:	packsswb mm5,mm1
  41122d:	jle    0x4111fd
  41122f:	xchg   BYTE PTR [eax],bl
  411231:	cmp    eax,0xd32c14e9
  411236:	ret    0x55a
  411239:	mov    edi,0xb2b3bd92
  41123e:	enter  0x49aa,0x6
  411242:	mov    WORD PTR [bx+di-0x6f5e],cs
  411247:	and    esi,ebp
  411249:	push   ebx
  41124a:	sbb    DWORD PTR [ecx-0x7721a4d5],esp
  411250:	(bad)  
  411251:	lea    eax,[eax]
  411253:	popf   
  411254:	xchg   ecx,eax
  411255:	loop   0x411254
  411257:	adc    ebx,DWORD PTR [ecx-0x67e5f7f0]
  41125d:	pop    ds
  41125e:	lods   al,BYTE PTR ds:[esi]
  41125f:	xchg   ebp,eax
  411260:	loopne 0x4112b7
  411262:	inc    esp
  411263:	std    
  411264:	push   esp
  411265:	das    
  411266:	xlat   BYTE PTR ds:[ebx]
  411267:	and    al,BYTE PTR [edi+edi*4]
  41126a:	push   edi
  41126b:	jbe    0x41129f
  41126d:	popa   
  41126e:	stos   DWORD PTR es:[edi],eax
  41126f:	das    
  411270:	push   0x4475c531
  411275:	iret   
  411276:	in     al,dx
  411277:	adc    esi,ecx
  411279:	jge    0x41129c
  41127b:	and    al,0xbb
  41127d:	mov    ch,BYTE PTR [ebx+0x11]
  411280:	and    DWORD PTR [ebx+0x5a],0x604028cd
  411287:	push   ebx
  411288:	sub    ecx,0xffffffc3
  41128b:	mov    cl,0xb0
  41128d:	cmp    al,BYTE PTR [ebp-0x7]
  411290:	call   0x7904:0xfa2d5dbe
  411297:	jge    0x41121a
  411299:	pop    eax
  41129a:	js     0x411226
  41129c:	(bad)  
  41129d:	in     al,dx
  41129e:	(bad)  [edi]
  4112a0:	fs inc esp
  4112a2:	add    eax,0xa9046159
  4112a7:	sub    bl,BYTE PTR [esi-0x43701e3f]
  4112ad:	into   
  4112ae:	sub    ah,al
  4112b0:	push   esp
  4112b1:	jg     0x4112d4
  4112b3:	div    BYTE PTR [edi-0x28]
  4112b6:	mov    eax,ds:0x43e6df59
  4112bb:	leave  
  4112bc:	sub    al,0xff
  4112be:	xchg   BYTE PTR [eax],ch
  4112c0:	mov    BYTE PTR ds:0xc19e6ce1,cl
  4112c6:	pop    eax
  4112c7:	add    DWORD PTR [esi-0x6d0f5869],eax
  4112cd:	sub    BYTE PTR [edi],bh
  4112cf:	les    esi,FWORD PTR [eax+ebp*1+0x28]
  4112d3:	ror    DWORD PTR [ebx+ebp*4],0x1e
  4112d7:	cmp    al,0xde
  4112d9:	inc    esp
  4112da:	popf   
  4112db:	stos   DWORD PTR es:[edi],eax
  4112dc:	fild   DWORD PTR [ebx+0x3e]
  4112df:	push   ss
  4112e0:	ja     0x4112c5
  4112e2:	je     0x4112c7
  4112e4:	lods   al,BYTE PTR ds:[esi]
  4112e5:	xor    BYTE PTR [edi-0x48],al
  4112e8:	call   0xa701:0x3064892f
  4112ef:	ss mov esp,0xd6800a35
  4112f5:	mov    al,ds:0x268313ec
  4112fb:	push   ebp
  4112fc:	pop    ecx
  4112fd:	(bad)  
  4112fe:	adc    BYTE PTR [ebx],bh
  411300:	ja     0x4112ba
  411302:	ret    
  411303:	adc    ebx,DWORD PTR [ebp+0x10]
  411306:	cwde   
  411307:	jmp    0xde059dae
  41130c:	cmp    ebp,edi
  41130e:	fs (bad) 
  411310:	jle    0x4112e6
  411312:	cdq    
  411313:	pop    ebp
  411314:	leave  
  411315:	pusha  
  411316:	je     0x411312
  411318:	mov    ds:0x2684fdce,eax
  41131e:	clc    
  41131f:	mov    ecx,0x75235b3c
  411324:	adc    eax,0xb2c08d83
  411329:	or     cl,BYTE PTR [ebx+0x43e25e3b]
  41132f:	sub    ch,BYTE PTR [ebx+edi*8]
  411332:	out    0xfe,al
  411334:	adc    dh,BYTE PTR [edx+0x53]
  411337:	xchg   edi,eax
  411338:	bound  esi,QWORD PTR [eax-0x24]
  41133b:	ret    0x173f
  41133e:	repz xlat BYTE PTR ds:[ebx]
  411340:	push   edi
  411341:	pop    ebp
  411342:	adc    al,0x49
  411344:	jo     0x41132b
  411346:	push   esp
  411347:	rcr    DWORD PTR gs:[ecx-0x4d3db147],cl
  41134e:	fmul   DWORD PTR [ebp+ebp*4-0x3cde2cb2]
  411355:	cmp    bh,dl
  411357:	dec    ebp
  411358:	(bad)  
  411359:	fisub  WORD PTR [edi-0x5da26833]
  41135f:	mov    eax,ebp
  411361:	push   ecx
  411362:	xor    ebp,DWORD PTR [edx+0x6741ff88]
  411368:	fcomp  DWORD PTR [eax]
  41136a:	mov    DWORD PTR [ebx+0x47],edx
  41136d:	sbb    BYTE PTR [ebp-0x1b],bh
  411370:	loop   0x4113dd
  411372:	mov    cl,0x9c
  411374:	rol    DWORD PTR [ecx],1
  411376:	out    0xfd,eax
  411378:	call   0x10c0e90f
  41137d:	push   ss
  41137e:	dec    eax
  41137f:	mov    eax,eax
  411381:	out    dx,eax
  411382:	xchg   edi,eax
  411383:	loopne 0x411359
  411385:	iret   
  411386:	out    dx,eax
  411387:	out    0xc7,al
  411389:	inc    BYTE PTR [edx]
  41138b:	mov    WORD PTR [edx+0x47071c2d],ds
  411391:	cmp    al,0xda
  411393:	call   0xde0a:0x484368fb
  41139a:	(bad)  
  41139b:	pop    ebx
  41139c:	ja     0x411398
  41139e:	xchg   edi,eax
  41139f:	rcr    bl,1
  4113a1:	or     ebp,DWORD PTR [edx+0x68]
  4113a4:	sbb    al,0xc3
  4113a6:	mov    esp,0x85097fa9
  4113ab:	sbb    BYTE PTR ds:0x5a84c91,bl
  4113b1:	mov    ch,0x98
  4113b3:	mov    al,ds:0xb077c75a
  4113b8:	call   0x3eee5391
  4113bd:	sbb    eax,0xf7bdb5d1
  4113c2:	ds mov ecx,0x469a90fd
  4113c8:	fdivr  QWORD PTR [ebx+ecx*1]
  4113cb:	push   0x570f0c6a
  4113d0:	in     al,0x5c
  4113d2:	inc    ebx
  4113d3:	xor    dl,BYTE PTR [edi+0x66]
  4113d6:	xor    bh,BYTE PTR [edi-0x2e]
  4113d9:	adc    edi,DWORD PTR [eax-0x3f]
  4113dc:	rcr    BYTE PTR [ebp+edi*4+0x78b9d65],cl
  4113e3:	icebp  
  4113e4:	jae    0x41136d
  4113e6:	mov    ah,0xca
  4113e8:	addr16 mov dl,0xa5
  4113eb:	pop    es
  4113ec:	xlat   BYTE PTR ds:[ebx]
  4113ed:	test   al,0xfb
  4113ef:	dec    eax
  4113f0:	fmul   st,st(1)
  4113f2:	(bad)  
  4113f4:	ret    0x6f95
  4113f7:	(bad)  
  4113f8:	fadd   DWORD PTR [edx-0x3b]
  4113fb:	pop    ds
  4113fc:	push   es
  4113fd:	jb     0x41146a
  4113ff:	(bad)  
  411400:	js     0x41140d
  411402:	and    al,0x6f
  411404:	mov    al,ds:0x26957b65
  411409:	in     al,dx
  41140a:	mov    ds:0x772070db,eax
  41140f:	or     BYTE PTR [edx+0x26],cl
  411412:	pop    esi
  411413:	sub    edx,ebp
  411415:	lds    edx,FWORD PTR [ecx-0x2]
  411418:	jne    0x411473
  41141a:	in     eax,dx
  41141b:	inc    edx
  41141c:	scas   al,BYTE PTR es:[edi]
  41141d:	push   edi
  41141e:	outs   dx,BYTE PTR ds:[esi]
  41141f:	xor    DWORD PTR [esi-0x53856498],0x6bd9afcf
  411429:	jmp    0x411461
  41142b:	sub    eax,0xa786436a
  411430:	(bad)  
  411431:	test   DWORD PTR [eax],0xc393dd07
  411437:	xor    BYTE PTR [ecx+eax*1+0x1a],0x82
  41143c:	fxch   st(4)
  41143e:	sbb    ebp,esp
  411440:	arpl   WORD PTR [ebx+0x6d],di
  411443:	std    
  411444:	rcr    BYTE PTR [eax-0x59],cl
  411447:	out    0xeb,ax
  41144a:	test   bh,bh
  41144c:	xchg   ecx,eax
  41144d:	arpl   WORD PTR [esi],sp
  41144f:	ret    0x5604
  411452:	(bad)  
  411453:	jnp    0x411494
  411455:	rcl    BYTE PTR [ebp+0x6e],cl
  411458:	sar    DWORD PTR [edi],1
  41145a:	dec    eax
  41145b:	cwde   
  41145c:	adc    al,0x44
  41145e:	sub    eax,0xf3b2208e
  411463:	adc    bl,cl
  411465:	pop    edi
  411466:	xchg   ecx,eax
  411467:	aas    
  411468:	push   fs
  41146a:	pop    esp
  41146b:	adc    dl,BYTE PTR [ecx-0x5]
  41146e:	sub    BYTE PTR [edi+0x27],bl
  411471:	out    0xdb,eax
  411473:	push   ecx
  411474:	lock xor dh,BYTE PTR [ecx+edx*1+0x5a4dcec]
  41147c:	clc    
  41147d:	mov    dl,0xc
  41147f:	xchg   ebx,eax
  411480:	or     al,0xb5
  411482:	xor    BYTE PTR [ecx+0x17],0x4b
  411486:	fisttp WORD PTR [edi-0x39]
  411489:	add    BYTE PTR [ecx+0x31274181],0xd
  411490:	xor    BYTE PTR [ebx+eiz*1-0x5c],0x5d
  411495:	inc    esp
  411496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411497:	(bad)  
  411498:	(bad)  
  411499:	sub    eax,esi
  41149b:	les    ecx,FWORD PTR [ecx+0x1a]
  41149e:	xlat   BYTE PTR ds:[ebx]
  41149f:	test   al,0xed
  4114a1:	stos   DWORD PTR es:[edi],eax
  4114a2:	xor    ah,BYTE PTR [edi]
  4114a4:	dec    esp
  4114a5:	or     al,0xe6
  4114a7:	mul    DWORD PTR [edx+0x4]
  4114aa:	rol    bh,cl
  4114ac:	imul   eax,DWORD PTR [edx+edx*4+0x29],0x2a
  4114b1:	sbb    al,BYTE PTR [esi+0x30]
  4114b4:	adc    ebx,DWORD PTR [ebx-0x321463f1]
  4114ba:	and    DWORD PTR [ecx],0xd75f7ea0
  4114c0:	inc    BYTE PTR [ebx]
  4114c2:	or     bl,dh
  4114c4:	xchg   ebx,eax
  4114c5:	out    0x42,al
  4114c7:	lods   eax,DWORD PTR ds:[esi]
  4114c8:	aam    0x6a
  4114ca:	imul   edi,DWORD PTR [bp+si-0x11],0xa33a461d
  4114d2:	jae    0x4114c9
  4114d4:	and    ch,BYTE PTR [ebp-0x27]
  4114d7:	mov    eax,0x5d2db533
  4114dc:	xor    al,0x6b
  4114de:	scas   eax,DWORD PTR es:[edi]
  4114df:	rol    DWORD PTR [ebx+0x20],cl
  4114e2:	mov    al,0xa5
  4114e4:	pop    edx
  4114e5:	xchg   DWORD PTR [eax-0x6fadeadc],edx
  4114eb:	mov    dl,0x1a
  4114ed:	cs inc eax
  4114ef:	and    al,0x7c
  4114f1:	lea    edi,[ebx]
  4114f3:	mov    ah,0x7e
  4114f5:	jle    0x411549
  4114f7:	jae    0x4114c3
  4114f9:	inc    ebx
  4114fa:	sahf   
  4114fb:	mov    ds:0xa4d0b010,eax
  411500:	sub    BYTE PTR [ebx],0x15
  411503:	push   ebx
  411504:	aas    
  411505:	sub    DWORD PTR [edi+ebp*8-0x49],esi
  411509:	int    0x1b
  41150b:	push   es
  41150c:	add    bh,ah
  41150e:	cmp    edx,DWORD PTR [ecx-0x22949f80]
  411514:	xchg   edi,eax
  411515:	xchg   ebx,eax
  411516:	retf   0x9a1a
  411519:	mov    ah,0x67
  41151b:	sub    bl,BYTE PTR [eax]
  41151d:	push   esi
  41151e:	shr    BYTE PTR [esi],1
  411520:	fldcw  WORD PTR [ebx]
  411522:	dec    ebx
  411523:	out    dx,al
  411524:	(bad)  
  411525:	shl    BYTE PTR [edx-0x629b1b49],1
  41152b:	scas   al,BYTE PTR es:[edi]
  41152c:	push   0xf588f55a
  411531:	inc    ecx
  411532:	jmp    0x6de4edf2
  411537:	lea    ebp,[eax-0x3f]
  41153a:	sub    ebp,ebp
  41153c:	jno    0x4115bc
  41153e:	pop    esi
  41153f:	pop    ebx
  411540:	out    0xe5,al
  411542:	cmp    eax,DWORD PTR ds:0x3343d3ba
  411548:	jnp    0x41152e
  41154a:	clc    
  41154b:	sbb    BYTE PTR ds:0xf5c7b6a4,bh
  411551:	daa    
  411552:	and    BYTE PTR [esi],cl
  411554:	inc    ecx
  411555:	cmp    edx,ebp
  411557:	in     eax,0xde
  411559:	es jmp 0xfce9:0xe6af029e
  411561:	or     ah,BYTE PTR [ebp-0x62]
  411564:	(bad)  
  411565:	mov    eax,ds:0x425d3abc
  41156a:	cmp    al,0x4b
  41156c:	stos   DWORD PTR es:[edi],eax
  41156d:	jb     0x411545
  41156f:	int    0xd2
  411571:	add    ebx,ebx
  411573:	lods   al,BYTE PTR ds:[esi]
  411574:	mov    cl,0x44
  411576:	mov    ecx,0x9b562a3a
  41157b:	popa   
  41157c:	popf   
  41157d:	xor    BYTE PTR [eax+0x283afc7e],bh
  411583:	dec    esp
  411584:	jecxz  0x41151f
  411586:	and    eax,DWORD PTR [eax+0x4c41df77]
  41158c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41158d:	inc    ecx
  41158e:	(bad)  
  41158f:	iret   
  411590:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411591:	es mov eax,ebp
  411594:	hlt    
  411595:	push   esp
  411596:	mov    bl,0xca
  411598:	loop   0x411583
  41159a:	mov    edi,0x354872da
  41159f:	or     esp,DWORD PTR [edx]
  4115a1:	call   0xcf93:0xa31f49f
  4115a8:	out    0xd5,eax
  4115aa:	pop    es
  4115ab:	or     eax,0xdad4130f
  4115b0:	jl     0x411583
  4115b2:	fistp  QWORD PTR [edx]
  4115b4:	pop    ds
  4115b5:	cmp    DWORD PTR ds:0x2e27b2d2,esi
  4115bb:	mov    bl,0x4b
  4115bd:	adc    eax,0x14f2a99c
  4115c2:	jnp    0x41163d
  4115c4:	xor    al,0x94
  4115c6:	mov    ah,0x35
  4115c8:	jnp    0x411596
  4115ca:	mov    cl,0x68
  4115cc:	fnstsw WORD PTR gs:[edi]
  4115cf:	bound  ecx,QWORD PTR [esi]
  4115d1:	je     0x4115d7
  4115d3:	ins    DWORD PTR es:[edi],dx
  4115d4:	ror    BYTE PTR [edi-0x1a],cl
  4115d7:	mov    bh,0x38
  4115d9:	mov    al,ds:0xb36e168f
  4115de:	ins    DWORD PTR es:[edi],dx
  4115df:	cmc    
  4115e0:	sar    BYTE PTR [ecx],cl
  4115e2:	pusha  
  4115e3:	retf   
  4115e4:	push   edi
  4115e5:	bound  edx,QWORD PTR [esi-0x3e]
  4115e8:	mov    ecx,0x540dc48b
  4115ed:	call   0x77d5:0xa41bc9a8
  4115f4:	and    bh,BYTE PTR [esi]
  4115f6:	shl    DWORD PTR [ebx],1
  4115f8:	test   al,0x4f
  4115fa:	xchg   edi,eax
  4115fb:	xchg   ebp,eax
  4115fc:	mov    esp,0xae58f3d4
  411601:	fisubr DWORD PTR [esi-0x6aa6c053]
  411607:	adc    DWORD PTR [edi+eiz*4],0xffffffcb
  41160b:	ss sahf 
  41160d:	jbe    0x41162e
  41160f:	lds    eax,FWORD PTR [edi+0x7]
  411612:	int    0xe3
  411614:	cmp    BYTE PTR [edi],dh
  411616:	arpl   WORD PTR [esi],cx
  411618:	rcl    DWORD PTR [eax-0x43],1
  41161b:	cli    
  41161c:	mov    esp,0xc4fb1024
  411621:	lock cwde 
  411623:	bound  esp,QWORD PTR [esi-0xf15a474]
  411629:	daa    
  41162a:	icebp  
  41162b:	sbb    al,0x16
  41162d:	xchg   DWORD PTR [ebp+0x1a84d37e],esp
  411633:	mov    dl,0x47
  411635:	push   eax
  411636:	test   BYTE PTR [esi+ecx*1],dh
  411639:	mov    dh,0x13
  41163b:	or     cl,ch
  41163d:	mov    al,0xac
  41163f:	enter  0x3abc,0xa2
  411643:	daa    
  411644:	pop    ecx
  411645:	lea    esp,[ecx+0x38a40dea]
  41164b:	push   ds
  41164c:	inc    edi
  41164d:	test   bh,bh
  41164f:	(bad)  
  411650:	in     eax,0x25
  411652:	fsubr  st(6),st
  411654:	mov    ds:0xe5c4bf76,al
  411659:	push   0x2fb4c2d7
  41165e:	push   eax
  41165f:	xchg   ecx,eax
  411660:	cwde   
  411661:	push   cs
  411662:	mov    ah,0x1c
  411664:	add    esp,DWORD PTR [ebp+0xb]
  411667:	push   0x36
  411669:	jl     0x411673
  41166b:	xor    BYTE PTR [ebp-0xd1ccc2c],cl
  411671:	xor    DWORD PTR [edx+0x351e9c9],ebp
  411677:	in     eax,0x4e
  411679:	sbb    DWORD PTR [ecx-0x14c6ccf9],ebx
  41167f:	arpl   dx,bp
  411681:	mov    DWORD PTR [edx+ebx*2],esp
  411684:	cmp    ah,BYTE PTR [ebx-0x58]
  411687:	aam    0x8b
  411689:	rol    BYTE PTR [edi],cl
  41168b:	in     al,dx
  41168c:	lahf   
  41168d:	pop    ebp
  41168e:	pop    ebp
  41168f:	and    DWORD PTR [ebx-0x64836055],0x5d19bdf
  411699:	pop    DWORD PTR [edi-0x28]
  41169c:	lahf   
  41169d:	sbb    eax,0x3fce1017
  4116a2:	mov    WORD PTR [edi],fs
  4116a4:	iret   
  4116a5:	sbb    al,0xf3
  4116a7:	mov    eax,ds:0xafd99200
  4116ac:	ret    0xbe73
  4116af:	sub    ebx,DWORD PTR [esi-0x2f]
  4116b2:	add    DWORD PTR [edi+0x9],esi
  4116b5:	and    eax,0xd4b5be33
  4116ba:	sti    
  4116bb:	ins    BYTE PTR es:[edi],dx
  4116bc:	lea    esp,[edx+0x6a]
  4116bf:	popa   
  4116c0:	sub    eax,0x960207e5
  4116c5:	push   ds
  4116c6:	into   
  4116c7:	inc    eax
  4116c8:	dec    edi
  4116c9:	rcr    DWORD PTR [esp+eax*4-0x63],1
  4116cd:	mov    esi,0x4062c051
  4116d2:	inc    ebp
  4116d3:	mov    al,0x99
  4116d5:	pop    esp
  4116d6:	jno    0x41171e
  4116d8:	mov    es:0x722cbf59,al
  4116de:	xchg   ecx,eax
  4116df:	int    0xf9
  4116e1:	icebp  
  4116e2:	fisttp WORD PTR [edi-0x13]
  4116e5:	xor    eax,0xea1e7ee6
  4116ea:	mov    esi,0x505f0da1
  4116ef:	sub    ah,dh
  4116f1:	dec    edi
  4116f2:	js     0x41174d
  4116f4:	mov    ds:0x1751363e,eax
  4116f9:	mov    al,0xc1
  4116fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116fc:	inc    esp
  4116fd:	repnz ds mov edx,0x7aeaa77
  411704:	ret    
  411705:	add    ch,bh
  411707:	xor    al,bl
  411709:	addr16 mov edx,0xd36a0e1d
  41170f:	hlt    
  411710:	mov    al,0x86
  411712:	push   edi
  411713:	iret   
  411714:	push   cs
  411715:	loope  0x411730
  411717:	jl     0x4116fb
  411719:	mov    ebp,0x47b0bc6e
  41171e:	stc    
  41171f:	pop    esp
  411720:	dec    esp
  411721:	scas   eax,DWORD PTR es:[edi]
  411722:	das    
  411723:	mov    cl,0xd0
  411725:	mov    bl,0x17
  411727:	lds    eax,FWORD PTR [eax-0x1b]
  41172a:	sar    DWORD PTR [edx-0x3c],1
  41172d:	dec    esi
  41172e:	xor    ebx,edx
  411730:	xchg   edi,eax
  411731:	inc    esi
  411732:	ja     0x4117a7
  411734:	aas    
  411735:	aaa    
  411736:	jns    0x411730
  411738:	in     eax,dx
  411739:	sub    bl,BYTE PTR [edx+0x77a267ee]
  41173f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411740:	cmp    al,0x7d
  411742:	pop    edi
  411743:	lahf   
  411744:	ret    
  411745:	adc    eax,0xd75bc371
  41174a:	mov    ebx,0x43406f1c
  41174f:	mov    BYTE PTR [eax+0x33],ch
  411752:	sahf   
  411753:	gs mov edx,0x35ffa88
  411759:	cmp    ch,bl
  41175b:	or     al,0xdb
  41175d:	mov    BYTE PTR ds:0xb3f02203,ch
  411763:	mov    ds:0x68fbef6f,eax
  411768:	or     BYTE PTR [edx+0x3c],0x54
  41176c:	sbb    eax,0xe5614532
  411771:	fdiv   QWORD PTR [edx+0xa]
  411774:	fstp   DWORD PTR fs:[ebx-0x6f]
  411778:	mov    dh,0xe4
  41177a:	cmc    
  41177b:	scas   al,BYTE PTR es:[edi]
  41177c:	pop    ebx
  41177d:	in     al,0xb8
  41177f:	add    BYTE PTR [edi],dl
  411781:	jno    0x411740
  411783:	call   0xfb9a:0x5a01f1df
  41178a:	mov    BYTE PTR [edx],dl
  41178c:	or     al,0x28
  41178e:	rol    BYTE PTR [ebx],1
  411790:	mov    ss,WORD PTR [ecx+0x752aca02]
  411796:	mov    ebx,cs
  411798:	jecxz  0x41178e
  41179a:	dec    esp
  41179b:	sbb    BYTE PTR [edx-0x63084ba0],dl
  4117a1:	call   0x52da7bf6
  4117a6:	leave  
  4117a7:	cmp    edx,edi
  4117a9:	fmul   QWORD PTR [ebp-0x9]
  4117ac:	nop
  4117ad:	or     cl,dh
  4117af:	cwde   
  4117b0:	mov    eax,0x713ba60b
  4117b5:	sub    edi,DWORD PTR [esi+0x3]
  4117b8:	mov    BYTE PTR [edi],cl
  4117ba:	lea    ebx,[ecx+0x9e11ee2]
  4117c0:	or     eax,0xad16bbb1
  4117c5:	add    DWORD PTR [esi],esp
  4117c7:	imul   edx,DWORD PTR [edi],0x5a
  4117ca:	mov    WORD PTR [edi],?
  4117cc:	fwait
  4117cd:	jo     0x41179b
  4117cf:	sub    DWORD PTR [ebx+0x33],edi
  4117d2:	fst    DWORD PTR [eax+eax*8-0x6d7af30c]
  4117d9:	cmp    al,0xe1
  4117db:	test   al,0xe2
  4117dd:	repnz pop edx
  4117df:	jo     0x41185d
  4117e1:	lods   al,BYTE PTR ds:[esi]
  4117e2:	push   es
  4117e3:	and    ebx,0xbd7513ce
  4117e9:	sti    
  4117ea:	test   cl,ah
  4117ec:	sub    eax,0xe158afac
  4117f1:	mov    cl,0x1a
  4117f3:	mov    al,0x6c
  4117f5:	jmp    0x4117df
  4117f7:	xor    BYTE PTR [esi],cl
  4117f9:	js     0x4117a0
  4117fb:	sti    
  4117fc:	push   ecx
  4117fd:	stc    
  4117fe:	dec    edi
  4117ff:	scas   al,BYTE PTR es:[edi]
  411800:	dec    edi
  411801:	jns    0x4117a4
  411803:	mov    esp,0xfde72939
  411808:	mov    BYTE PTR [edx+0x7ab65c78],dl
  41180e:	je     0x41185b
  411810:	pop    ecx
  411811:	mov    dl,0x48
  411813:	es adc eax,0xb6e84184
  411819:	xchg   edi,eax
  41181a:	iret   
  41181b:	(bad)  
  41181c:	in     al,dx
  41181d:	aad    0x3d
  41181f:	mov    ah,0x96
  411821:	xchg   BYTE PTR [ecx+0x4e],cl
  411824:	adc    eax,0x853c039
  411829:	(bad)  
  41182a:	add    al,0x33
  41182c:	std    
  41182d:	pop    esi
  41182e:	push   edi
  41182f:	mov    dl,0x73
  411831:	mov    al,ds:0x15805f15
  411836:	inc    ebp
  411837:	jg     0x41187d
  411839:	sbb    esp,esp
  41183b:	adc    edx,esp
  41183d:	mov    ebp,0xb2069af2
  411842:	test   al,0x74
  411844:	lods   eax,DWORD PTR ds:[esi]
  411845:	dec    ebp
  411846:	(bad)  
  411847:	mov    ds:0x74b14506,al
  41184c:	jno    0x41185f
  41184e:	pushf  
  41184f:	nop
  411850:	xchg   ebx,eax
  411851:	lock inc esi
  411853:	int3   
  411854:	leave  
  411855:	push   cs
  411856:	mov    edi,0xe7574fac
  41185b:	jge    0x411840
  41185d:	in     al,0x62
  41185f:	vpaddusb xmm2,xmm0,XMMWORD PTR [edi]
  411863:	dec    esp
  411864:	push   cs
  411865:	sub    ch,BYTE PTR [ebx-0x6c46782b]
  41186b:	frstor [edx]
  41186d:	xor    ah,BYTE PTR [ebx]
  41186f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411870:	retf   0xe432
  411873:	inc    ebx
  411874:	in     al,0x4
  411876:	shl    DWORD PTR [esp+eax*1],1
  411879:	shl    BYTE PTR [ebx-0x7cacb18a],cl
  41187f:	xlat   BYTE PTR ds:[ebx]
  411880:	mov    ch,0xb0
  411882:	in     al,0x68
  411884:	fisttp QWORD PTR [ecx+0xc9ba9db]
  41188a:	inc    ebp
  41188b:	xchg   edx,eax
  41188c:	pop    edx
  41188d:	imul   edi,DWORD PTR [edx-0x42a7918b],0x66
  411894:	clc    
  411895:	sahf   
  411896:	mov    bh,BYTE PTR [ecx+0xd480bf1]
  41189c:	inc    eax
  41189d:	stc    
  41189e:	in     eax,0x67
  4118a0:	cmp    ebx,eax
  4118a2:	sub    al,0x78
  4118a4:	xor    DWORD PTR [edi],ecx
  4118a6:	idiv   BYTE PTR [esi+0x3c]
  4118a9:	mov    WORD PTR [edx+0x3f5067f7],cs
  4118af:	les    ebp,FWORD PTR [edx-0x28e4389e]
  4118b5:	bound  esi,QWORD PTR [eax+0x7c]
  4118b8:	cs push cs
  4118ba:	stos   BYTE PTR es:[edi],al
  4118bb:	xchg   esi,eax
  4118bc:	fld    DWORD PTR [esi+ebx*1-0x4f]
  4118c0:	loopne 0x411929
  4118c2:	ja     0x411940
  4118c4:	jmp    0x86d7ba5b
  4118c9:	aad    0xf0
  4118cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118cc:	ins    DWORD PTR es:[edi],dx
  4118cd:	sbb    dh,BYTE PTR [edi]
  4118cf:	pop    ebp
  4118d0:	sub    BYTE PTR [eax-0x77e551da],al
  4118d6:	outs   dx,BYTE PTR ds:[esi]
  4118d7:	lea    ecx,[ecx-0x1e76e028]
  4118dd:	adc    BYTE PTR [ebx+0x66eaf350],ah
  4118e3:	push   esp
  4118e4:	test   al,0x45
  4118e6:	jnp    0x4118b6
  4118e8:	cmp    bh,cl
  4118ea:	xor    ebx,DWORD PTR [ebx+0x703996e9]
  4118f0:	rcr    BYTE PTR [eax],1
  4118f2:	push   edx
  4118f3:	loop   0x411952
  4118f5:	push   cs
  4118f6:	lods   eax,DWORD PTR ds:[esi]
  4118f7:	lods   al,BYTE PTR cs:[si]
  4118fa:	shl    edx,0xbb
  4118fd:	ja     0x41188d
  4118ff:	fwait
  411900:	push   eax
  411901:	and    eax,0xa9148bb9
  411906:	repz xor al,0x32
  411909:	mov    es:0x41cbe875,al
  41190f:	push   edx
  411910:	dec    eax
  411911:	pusha  
  411912:	sub    si,cx
  411915:	imul   esi,DWORD PTR ds:0x3cef29ff,0xfffffff7
  41191c:	add    edx,DWORD PTR [ebp-0x3b9245cb]
  411922:	push   es
  411923:	jns    0x4118b3
  411925:	iret   
  411926:	inc    eax
  411927:	xchg   DWORD PTR [edi+ecx*1],esp
  41192a:	push   esi
  41192b:	jecxz  0x4118b2
  41192d:	pop    es
  41192e:	shl    dh,1
  411930:	jnp    0x4118c8
  411932:	or     eax,0xdc1883d8
  411937:	xor    ch,ch
  411939:	push   cs
  41193a:	sbb    al,0x45
  41193c:	clc    
  41193d:	jp     0x41192e
  41193f:	fisttp QWORD PTR [ebp+0x2cecad43]
  411945:	mov    bh,0x44
  411947:	push   ss
  411948:	xor    ecx,esi
  41194a:	dec    ebx
  41194b:	test   DWORD PTR ds:0x81d474c4,ebx
  411951:	aam    0x45
  411953:	xor    eax,0xab36de2f
  411958:	scas   eax,DWORD PTR es:[edi]
  411959:	aad    0x75
  41195b:	push   esi
  41195c:	or     al,0xf2
  41195e:	cmp    edi,DWORD PTR [ebx+0x70]
  411961:	mov    ebx,0xa171b021
  411966:	inc    edi
  411967:	cmp    ch,al
  411969:	xor    al,0xbf
  41196b:	icebp  
  41196c:	or     eax,0x606b6439
  411971:	or     BYTE PTR [eax+0x67679519],ah
  411977:	je     0x41193d
  411979:	pop    edi
  41197a:	jo     0x41198e
  41197c:	mov    dh,BYTE PTR [ecx*1-0x3ecc1d33]
  411983:	and    al,0x69
  411985:	daa    
  411986:	popa   
  411987:	push   0x27cfcb0
  41198c:	cwde   
  41198d:	fsub   DWORD PTR [ecx]
  41198f:	out    dx,eax
  411990:	cmc    
  411991:	xor    BYTE PTR [ebx+0x71],ch
  411994:	aam    0xfe
  411996:	mov    BYTE PTR [edi],0x75
  411999:	mov    cl,0xc6
  41199b:	(bad)  
  41199c:	inc    ebp
  41199d:	jns    0x4119aa
  41199f:	jmp    0xf0006e9a
  4119a4:	jbe    0x4119fb
  4119a6:	(bad)  
  4119a7:	dec    ch
  4119a9:	call   0x9417edd1
  4119ae:	aad    0xec
  4119b0:	cmc    
  4119b1:	leave  
  4119b2:	mov    eax,0x5c3a00d2
  4119b7:	xchg   esi,eax
  4119b8:	dec    eax
  4119b9:	retf   
  4119ba:	mov    eax,ds:0x5a1e99e4
  4119bf:	adc    edx,DWORD PTR [ecx]
  4119c1:	ret    
  4119c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119c3:	iret   
  4119c4:	call   0x372f232a
  4119c9:	dec    edx
  4119ca:	sar    DWORD PTR [ecx],0x39
  4119cd:	xor    ch,BYTE PTR [ebx-0x6c3df4d0]
  4119d3:	(bad)  
  4119d4:	and    bh,BYTE PTR [edi-0x665722f1]
  4119da:	sahf   
  4119db:	daa    
  4119dc:	(bad)  
  4119dd:	jmp    0xb86edfec
  4119e2:	out    0x89,al
  4119e4:	adc    eax,0x625cf4d8
  4119e9:	shr    DWORD PTR [ebx],cl
  4119eb:	punpcklwd mm7,DWORD PTR [edi-0xffd4e0]
  4119f2:	jmp    0x4119b2
  4119f4:	enter  0x10c9,0x6f
  4119f8:	push   ebx
  4119f9:	ja     0x411a18
  4119fb:	jg     0x411a38
  4119fd:	mov    dl,0x7a
  4119ff:	adc    edi,eax
  411a01:	push   ss
  411a02:	push   ss
  411a03:	mov    ds:0x2337401d,al
  411a08:	clc    
  411a09:	mov    cs,WORD PTR [eax-0x3546795c]
  411a0f:	cs push 0xffffffcf
  411a12:	jl     0x4119e8
  411a14:	mov    ecx,0xdc1b73de
  411a19:	push   esi
  411a1a:	pop    esi
  411a1b:	sub    BYTE PTR [ecx-0x53],dh
  411a1e:	test   DWORD PTR [ebp-0x38],0xb625359b
  411a25:	je     0x411a07
  411a27:	xchg   edx,eax
  411a28:	sbb    eax,0xdacde9a
  411a2d:	js     0x411a29
  411a2f:	sti    
  411a30:	mov    ah,0xac
  411a32:	jecxz  0x411a9b
  411a34:	mov    eax,ds:0x5fea7c7b
  411a39:	mov    ah,0x86
  411a3b:	xchg   esi,eax
  411a3c:	pop    ebp
  411a3d:	xchg   ebp,eax
  411a3e:	in     al,dx
  411a3f:	fistp  DWORD PTR [ecx]
  411a41:	scas   al,BYTE PTR es:[edi]
  411a42:	inc    edi
  411a43:	xchg   edi,eax
  411a44:	ins    BYTE PTR es:[edi],dx
  411a45:	test   esi,0x25b9146e
  411a4b:	fild   WORD PTR [esi-0x2e3d34c6]
  411a51:	dec    eax
  411a52:	sub    al,0xf7
  411a54:	fisttp QWORD PTR [ebp+0x4b]
  411a57:	call   0x2ff2:0x1d80292a
  411a5e:	jnp    0x411aa0
  411a60:	push   ecx
  411a61:	inc    ebx
  411a62:	push   0x19
  411a64:	inc    ebp
  411a65:	imul   ebp,DWORD PTR [edx-0xdda3b4],0xffffffbf
  411a6c:	add    eax,0x3c8b45cd
  411a71:	ja     0x411a07
  411a73:	mov    bh,bl
  411a75:	pop    ss
  411a76:	pusha  
  411a77:	or     al,0xa7
  411a79:	ficom  WORD PTR [edx+0x3f]
  411a7c:	mov    bl,0x2b
  411a7e:	fwait
  411a7f:	jno    0x411a90
  411a81:	mov    eax,DWORD PTR [ebx+0x7c]
  411a84:	(bad)  
  411a85:	sti    
  411a86:	and    dl,BYTE PTR [ebx+0x3]
  411a89:	xchg   ebp,eax
  411a8a:	xor    esp,esi
  411a8c:	gs cmp ah,al
  411a8f:	test   BYTE PTR [edi-0x54],0x1d
  411a93:	ds inc ebx
  411a95:	jge    0x411a8f
  411a97:	push   0x6c
  411a99:	cmp    ah,BYTE PTR [eax]
  411a9b:	test   BYTE PTR ds:0x5bc86c27,dl
  411aa1:	mov    eax,ds:0x6316e63f
  411aa6:	imul   esi,DWORD PTR ds:0x3efa82a2,0x6e
  411aad:	cmp    bl,BYTE PTR ds:0x559cc4c5
  411ab3:	jecxz  0x411ab3
  411ab5:	clc    
  411ab6:	jecxz  0x411a42
  411ab8:	adc    eax,0x8f74ef51
  411abd:	and    al,0x26
  411abf:	repnz (bad) 
  411ac1:	push   cs
  411ac2:	mov    ebp,0x35a79887
  411ac7:	sbb    al,0x24
  411ac9:	xlat   BYTE PTR ds:[ebx]
  411aca:	lds    ecx,FWORD PTR [edx-0x6c]
  411acd:	cmp    bh,BYTE PTR [edi+edx*8+0x2e]
  411ad1:	push   ecx
  411ad2:	in     al,0xa2
  411ad4:	out    0xf2,al
  411ad6:	cmp    dl,BYTE PTR [ebp-0x7b799882]
  411adc:	push   eax
  411add:	inc    edx
  411ade:	xchg   edx,eax
  411adf:	xor    BYTE PTR [ebx],bh
  411ae1:	pop    esi
  411ae2:	or     DWORD PTR [ebp+0x55ce1daa],esi
  411ae8:	rol    BYTE PTR [ebp+edx*2-0x76e2b128],cl
  411aef:	inc    esp
  411af0:	dec    ecx
  411af1:	sti    
  411af2:	enter  0x1573,0x82
  411af6:	xchg   DWORD PTR [ebx+0x28736477],ecx
  411afc:	imul   ebx,DWORD PTR [eax],0x6664db45
  411b02:	mov    esp,0x2373bfb1
  411b07:	fist   WORD PTR [eax-0x6e]
  411b0a:	sbb    ecx,DWORD PTR [edi]
  411b0c:	and    al,dl
  411b0e:	push   edx
  411b0f:	jge    0x411abe
  411b11:	xor    DWORD PTR [edi],eax
  411b13:	pop    edi
  411b14:	je     0x411ad4
  411b16:	add    edx,DWORD PTR [edx+0x34]
  411b19:	je     0x411af0
  411b1b:	(bad)  
  411b1d:	sbb    BYTE PTR [edi+edi*4+0x13f629d2],0x7d
  411b25:	in     al,dx
  411b26:	push   cs
  411b27:	neg    BYTE PTR [ebx]
  411b29:	xchg   esi,eax
  411b2a:	icebp  
  411b2b:	shl    BYTE PTR [edx+ebp*2],0x72
  411b2f:	xor    al,0x27
  411b31:	mov    ecx,0x356366a1
  411b36:	jle    0x411ae5
  411b38:	stc    
  411b39:	in     al,dx
  411b3a:	xor    ah,BYTE PTR ds:0x30e8d70a
  411b40:	in     al,dx
  411b41:	cmp    al,0x9a
  411b43:	test   al,0x12
  411b45:	jmp    0x4a920445
  411b4a:	inc    edx
  411b4b:	ret    0xac3f
  411b4e:	ret    
  411b4f:	fbld   TBYTE PTR [ebx+ecx*1]
  411b52:	jmp    0xe0f5:0x91891e32
  411b59:	mov    ah,0x18
  411b5b:	lds    ecx,FWORD PTR [ebp-0x27]
  411b5e:	inc    esi
  411b5f:	addr16 pop ebp
  411b61:	ins    DWORD PTR es:[edi],dx
  411b62:	call   0xeea86d37
  411b67:	(bad)  
  411b68:	ss repz in eax,0x7d
  411b6c:	push   esi
  411b6d:	add    edx,ebx
  411b6f:	test   bh,dh
  411b71:	lods   al,BYTE PTR ds:[esi]
  411b72:	push   ebp
  411b73:	daa    
  411b74:	and    BYTE PTR [esi],ah
  411b76:	or     BYTE PTR [ebp+0x55],0x6e
  411b7a:	pop    ds
  411b7b:	sub    ebx,edx
  411b7d:	sub    bl,dh
  411b7f:	and    ebx,DWORD PTR [eax]
  411b81:	popf   
  411b82:	and    eax,0xe36ba433
  411b87:	in     eax,dx
  411b88:	jmp    0xfcad856c
  411b8d:	ret    0xd600
  411b90:	xchg   BYTE PTR [eax+edx*2-0x247a6771],ch
  411b97:	daa    
  411b98:	adc    al,0xc5
  411b9b:	data16 jl 0x411bda
  411b9e:	pop    esp
  411b9f:	inc    ebx
  411ba0:	push   esi
  411ba1:	(bad)  
  411ba2:	in     al,dx
  411ba3:	push   es
  411ba4:	adc    DWORD PTR [edi-0x10],esi
  411ba7:	xlat   BYTE PTR ds:[ebx]
  411ba8:	retf   
  411ba9:	or     bh,BYTE PTR [ebp+0x2a]
  411bac:	rcr    DWORD PTR [edi-0x392610d0],0xe8
  411bb3:	adc    ebx,DWORD PTR [edi-0xee11e4a]
  411bb9:	and    DWORD PTR [ebp+0x36],ebp
  411bbc:	or     BYTE PTR [edx-0x364c8680],dh
  411bc2:	add    eax,0x99d249c
  411bc7:	fbld   TBYTE PTR [ecx]
  411bc9:	jo     0x411bfc
  411bcb:	dec    eax
  411bcc:	mov    ?,WORD PTR [edi-0x1d635022]
  411bd2:	in     eax,0xf7
  411bd4:	pop    es
  411bd5:	and    al,BYTE PTR [edi+0x2961fdc7]
  411bdb:	fcom   QWORD PTR [edi+eiz*2+0x18da9090]
  411be2:	cmc    
  411be3:	mov    ds:0xeb7caf3b,al
  411be8:	and    al,0x65
  411bea:	stos   BYTE PTR es:[edi],al
  411beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bec:	adc    DWORD PTR [esi],eax
  411bee:	push   ss
  411bef:	std    
  411bf0:	popf   
  411bf1:	and    eax,0x95c81953
  411bf6:	mov    ch,0x2b
  411bf8:	jecxz  0x411c15
  411bfa:	leave  
  411bfb:	fsub   st,st(3)
  411bfd:	push   edx
  411bfe:	ins    BYTE PTR es:[edi],dx
  411bff:	inc    edx
  411c00:	mov    WORD PTR [edx+ecx*4],?
  411c03:	mov    edi,0xf20111e8
  411c08:	adc    al,0xbd
  411c0a:	jle    0x411bb8
  411c0c:	cs (bad) 
  411c0e:	out    dx,al
  411c0f:	pusha  
  411c10:	xchg   BYTE PTR [ebx],ah
  411c12:	aam    0xb9
  411c14:	iret   
  411c15:	ss cdq 
  411c17:	ss test BYTE PTR fs:[edx],bl
  411c1b:	nop
  411c1c:	daa    
  411c1d:	and    dl,BYTE PTR [edi+edi*4]
  411c20:	call   DWORD PTR [eax+0x18]
  411c23:	jle    0x411bd3
  411c25:	sti    
  411c26:	xchg   esp,edi
  411c28:	sbb    eax,0x697b6fb4
  411c2d:	adc    ebp,esp
  411c2f:	mov    ecx,0x5bcd100c
  411c34:	and    eax,0x59c0ddb7
  411c39:	cmp    BYTE PTR [edi+ebp*4+0xa912f45],ah
  411c40:	fs aam 0x5d
  411c43:	ins    DWORD PTR es:[edi],dx
  411c44:	aam    0xf3
  411c46:	ds clc 
  411c48:	ins    BYTE PTR es:[edi],dx
  411c49:	lahf   
  411c4a:	(bad)  
  411c4b:	mov    edx,0xf27a3e95
  411c50:	mov    ds:0xfcd1fe58,eax
  411c55:	icebp  
  411c56:	sar    DWORD PTR [ebp+eax*4-0x38c42dfa],1
  411c5d:	mov    ah,0xd0
  411c5f:	test   eax,0x3441533d
  411c64:	inc    eax
  411c65:	xchg   DWORD PTR ds:0xef4b8d03,edx
  411c6b:	mov    esi,0xe621f0f1
  411c70:	(bad)  
  411c71:	je     0x411cb4
  411c73:	in     eax,0xb8
  411c75:	cli    
  411c76:	xor    dh,0xf7
  411c79:	xor    al,0x59
  411c7b:	jmp    0xa9847817
  411c80:	sbb    al,0xa0
  411c82:	and    al,0xd7
  411c84:	aam    0x27
  411c86:	cmp    DWORD PTR [eax+0x77],esi
  411c89:	fld    QWORD PTR [edi+0x3d]
  411c8c:	std    
  411c8d:	xchg   ebx,eax
  411c8e:	(bad)  
  411c8f:	dec    ebx
  411c90:	sub    al,0xc
  411c92:	loop   0x411cdc
  411c94:	cmp    al,0xf
  411c96:	sub    DWORD PTR [ecx-0x48],edx
  411c99:	sbb    ah,BYTE PTR [ebx+0x44]
  411c9c:	or     al,0xf4
  411c9e:	mov    ?,WORD PTR [ebx]
  411ca0:	je     0x411c68
  411ca2:	mov    ecx,0x7522d39d
  411ca7:	mov    DWORD PTR [eax+0x90f9a25],edi
  411cad:	fcomp  QWORD PTR [edi-0xf]
  411cb0:	fisubr WORD PTR [esi+0x1f]
  411cb3:	ret    0x8193
  411cb6:	hlt    
  411cb7:	mov    DWORD PTR [ebx+edx*1],edi
  411cba:	std    
  411cbb:	inc    esp
  411cbc:	std    
  411cbd:	mov    bh,0xe6
  411cbf:	ins    DWORD PTR es:[edi],dx
  411cc0:	xchg   ebx,eax
  411cc1:	mov    dh,dl
  411cc3:	in     al,dx
  411cc4:	or     ah,bl
  411cc6:	retf   
  411cc7:	lods   al,BYTE PTR ds:[esi]
  411cc8:	stos   BYTE PTR es:[edi],al
  411cc9:	fisub  DWORD PTR [eax+0x774fe11a]
  411ccf:	cs or  al,0x1f
  411cd2:	dec    esi
  411cd3:	sub    edi,edx
  411cd5:	or     al,0x2
  411cd7:	sbb    eax,0x78dcc1eb
  411cdc:	jb     0x411cbc
  411cde:	cmp    dh,BYTE PTR [esi]
  411ce0:	loopne 0x411d44
  411ce2:	mov    ch,ch
  411ce4:	pop    es
  411ce5:	in     al,dx
  411ce6:	jno    0x411ccb
  411ce8:	or     BYTE PTR [esi+0x7],ch
  411ceb:	cmp    eax,0x549a8391
  411cf0:	(bad)  
  411cf1:	xchg   ecx,eax
  411cf2:	scas   eax,DWORD PTR es:[edi]
  411cf3:	fs scas eax,DWORD PTR es:[edi]
  411cf5:	push   0xffffffdf
  411cf7:	out    dx,eax
  411cf8:	sbb    edx,DWORD PTR [ebp-0x6db5e73b]
  411cfe:	or     BYTE PTR [edi-0x7],bl
  411d01:	cwde   
  411d02:	cmp    ch,ch
  411d04:	gs dec esp
  411d06:	dec    ebp
  411d07:	imul   edi,edx,0xcd8ea118
  411d0d:	gs ret 
  411d0f:	inc    esp
  411d10:	loop   0x411d85
  411d12:	xchg   esi,eax
  411d13:	repnz (bad) 
  411d16:	retf   0x8e7d
  411d19:	mov    ds:0x1f0df279,al
  411d1e:	add    al,0x7a
  411d20:	js     0x411d13
  411d22:	int    0x98
  411d24:	ja     0x411d89
  411d26:	pop    ds
  411d27:	jmp    0x3576:0x40f90eab
  411d2e:	aam    0x11
  411d30:	cmc    
  411d31:	retf   
  411d32:	pop    eax
  411d33:	xchg   edi,eax
  411d34:	jmp    0x411d4d
  411d36:	bound  ecx,QWORD PTR [esi-0x47]
  411d39:	push   ebp
  411d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d3b:	jle    0x411cc5
  411d3d:	jge    0x411d03
  411d3f:	pop    ds
  411d40:	push   ds
  411d41:	mov    ch,0xdf
  411d43:	add    eax,esp
  411d45:	dec    edx
  411d46:	pop    edx
  411d47:	adc    eax,DWORD PTR [esi-0x22]
  411d4a:	movlps QWORD PTR [edx],xmm1
  411d4d:	add    bl,ah
  411d4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d50:	clc    
  411d51:	xor    al,0x72
  411d53:	dec    esi
  411d54:	push   eax
  411d55:	imul   DWORD PTR [esp+ebx*2]
  411d58:	(bad)  
  411d59:	mov    eax,0xf1e87bcc
  411d5e:	test   eax,0x9b823419
  411d63:	lods   al,BYTE PTR ds:[esi]
  411d64:	ins    DWORD PTR es:[edi],dx
  411d65:	clc    
  411d66:	push   ebx
  411d67:	fist   DWORD PTR [eax]
  411d69:	dec    ecx
  411d6a:	sbb    esp,DWORD PTR cs:[edi+0x343dc129]
  411d71:	push   0x76
  411d73:	out    0xd1,eax
  411d75:	cmp    BYTE PTR [ebp-0x71],cl
  411d78:	xchg   esi,eax
  411d79:	dec    ebx
  411d7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d7b:	mov    ds:0xec479d58,al
  411d80:	sar    BYTE PTR [ebx-0x40],1
  411d83:	outs   dx,DWORD PTR ds:[esi]
  411d84:	add    BYTE PTR [ebx+0x2fe4b04b],bl
  411d8a:	push   0xffffffb6
  411d8c:	sub    ebp,ebp
  411d8e:	leave  
  411d8f:	inc    ebp
  411d90:	cmc    
  411d91:	lock loope 0x411d65
  411d94:	mov    edx,0x8f2db729
  411d99:	std    
  411d9a:	les    edx,FWORD PTR [ebx+0x24]
  411d9d:	ds add al,0x50
  411da0:	into   
  411da1:	mov    al,ds:0x729eba21
  411da6:	imul   edi,DWORD PTR [eax],0x59721fbb
  411dac:	sbb    ch,BYTE PTR [edi]
  411dae:	sar    BYTE PTR [esi-0x5d286725],0x37
  411db5:	dec    ebx
  411db6:	push   0x3
  411db8:	mov    edi,ecx
  411dba:	add    DWORD PTR [edx],edi
  411dbc:	xchg   ebx,eax
  411dbd:	test   BYTE PTR [ecx],0x97
  411dc0:	add    eax,0x510f89de
  411dc5:	mov    esp,0xfe81616b
  411dca:	jbe    0x411e0e
  411dcc:	hlt    
  411dcd:	and    bl,dl
  411dcf:	test   BYTE PTR [ecx-0x60c6c096],cl
  411dd5:	call   0x338faea
  411dda:	test   eax,0x4f10c39b
  411ddf:	adc    DWORD PTR [esi+0x40],ecx
  411de2:	push   edx
  411de3:	or     bh,BYTE PTR [ebx+0x7b]
  411de6:	inc    edx
  411de7:	dec    edi
  411de8:	fiadd  DWORD PTR [ebx-0x762689c]
  411dee:	popf   
  411def:	pop    es
  411df0:	inc    eax
  411df1:	push   ecx
  411df2:	add    ecx,esp
  411df4:	mov    gs:0x2a766c91,al
  411dfa:	jp     0x411e65
  411dfc:	(bad)  
  411dfd:	cdq    
  411dfe:	popa   
  411dff:	das    
  411e00:	jp     0x411d82
  411e02:	js     0x411e43
  411e04:	jo     0x411df3
  411e06:	lahf   
  411e07:	lds    edx,FWORD PTR [eax-0x4a]
  411e0a:	mov    ds:0x522f4e29,al
  411e0f:	aam    0xf9
  411e11:	xchg   esi,eax
  411e12:	fs sbb al,0xdd
  411e15:	dec    eax
  411e16:	stc    
  411e17:	lea    ecx,[esi-0xc]
  411e1a:	leave  
  411e1b:	rcl    ebp,0x5c
  411e1e:	and    BYTE PTR [ebp-0x62],0xe9
  411e22:	fucomp st(2)
  411e24:	fsubp  st(4),st
  411e26:	jb     0x411e95
  411e28:	pop    es
  411e29:	je     0x411e67
  411e2b:	mov    esi,0xaf4d7294
  411e30:	pop    edi
  411e31:	xor    BYTE PTR [esp+ebx*4-0x57524729],ch
  411e38:	pop    ds
  411e39:	fs repz xor ch,0x79
  411e3e:	xchg   edi,eax
  411e3f:	les    ebp,FWORD PTR ds:0x9c5b129
  411e45:	jle    0x411dd5
  411e47:	push   edi
  411e48:	fs inc ebp
  411e4a:	mov    cl,0x4
  411e4c:	jp     0x411e45
  411e4e:	pushf  
  411e4f:	into   
  411e50:	nop
  411e51:	pop    ds
  411e52:	sbb    al,0x75
  411e54:	jnp    0x411e06
  411e56:	imul   edx,DWORD PTR [ecx-0x6e9faeb6],0xa23e5432
  411e60:	add    eax,0x902ea707
  411e65:	ret    0xf3d7
  411e68:	fwait
  411e69:	xor    BYTE PTR [ebx+0x26a79cec],0x60
  411e70:	mov    edi,0xf5200b15
  411e75:	cs aas 
  411e77:	mov    cl,0x4b
  411e79:	sub    ah,BYTE PTR [edx]
  411e7b:	bound  ebx,QWORD PTR [eax-0x3cf78917]
  411e81:	sbb    bl,BYTE PTR [edx]
  411e83:	mov    ch,al
  411e85:	mov    bh,0x7f
  411e87:	retf   
  411e88:	in     eax,0xd1
  411e8a:	mov    ebp,?
  411e8c:	mov    ebx,DWORD PTR [eax+0x16]
  411e8f:	pop    ebx
  411e90:	call   0x4051:0xf4cb6eac
  411e97:	lahf   
  411e98:	pop    ds
  411e99:	icebp  
  411e9a:	gs and eax,0x8368baab
  411ea0:	xor    al,0x71
  411ea2:	nop
  411ea3:	sbb    dl,BYTE PTR [edi]
  411ea5:	mov    bh,0xc7
  411ea7:	or     al,0xb0
  411ea9:	test   BYTE PTR [esi-0x24bd9ec0],al
  411eaf:	sub    eax,0xec067d98
  411eb4:	mov    WORD PTR [ecx],fs
  411eb6:	pop    ebp
  411eb7:	test   al,0x48
  411eb9:	(bad)
  411ebe:	pop    ecx
  411ebf:	mov    ch,BYTE PTR [esi+0xc]
  411ec2:	fcom   QWORD PTR [eax-0xf230633]
  411ec8:	pop    ss
  411ec9:	adc    dh,BYTE PTR [ebx+0x6fa668a7]
  411ecf:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ed1:	jl     0x411ea0
  411ed3:	rcl    DWORD PTR [esi],0x56
  411ed6:	xchg   edi,eax
  411ed7:	je     0x411e76
  411ed9:	lds    eax,FWORD PTR [ecx-0x7a]
  411edc:	nop
  411edd:	add    esp,DWORD PTR [ebx-0x1dc6b274]
  411ee3:	xchg   ecx,eax
  411ee4:	xor    BYTE PTR [ebx],bl
  411ee6:	mov    ds:0xe0b8e51e,eax
  411eeb:	outs   dx,BYTE PTR ds:[esi]
  411eec:	(bad)  
  411eed:	retf   0x4a9c
  411ef0:	pop    es
  411ef1:	inc    ebx
  411ef2:	add    eax,ecx
  411ef4:	push   ecx
  411ef5:	jl     0x411f04
  411ef7:	jle    0x411ea7
  411ef9:	push   eax
  411efa:	loope  0x411f1e
  411efc:	cmp    DWORD PTR [edx+0x410a5e33],0x48df37b0
  411f06:	jo     0x411ef1
  411f08:	cmp    al,BYTE PTR ds:0xd60565dc
  411f0e:	loope  0x411eca
  411f10:	xchg   DWORD PTR [edi+0x77ecf4e6],ebp
  411f16:	outs   dx,DWORD PTR ds:[esi]
  411f17:	dec    eax
  411f18:	outs   dx,DWORD PTR ds:[esi]
  411f19:	outs   dx,BYTE PTR ds:[si]
  411f1b:	out    dx,eax
  411f1c:	sub    eax,0x84f678dd
  411f21:	lds    eax,FWORD PTR [ecx-0x49]
  411f24:	xlat   BYTE PTR ds:[ebx]
  411f25:	or     ch,BYTE PTR [eax-0x277081e6]
  411f2b:	jmp    0x6c5a:0x4e292041
  411f32:	ror    ecx,1
  411f34:	aam    0x17
  411f36:	(bad)  
  411f37:	jge    0x411f7b
  411f39:	push   esp
  411f3a:	lods   eax,DWORD PTR ds:[esi]
  411f3b:	sub    eax,0xa665625d
  411f40:	mov    ch,0x9d
  411f42:	sar    BYTE PTR [esi+edi*1],1
  411f45:	pop    ss
  411f46:	enter  0x2f94,0xdc
  411f4a:	jmp    0x411f23
  411f4c:	(bad)  
  411f4d:	idiv   BYTE PTR [ebx]
  411f4f:	xchg   BYTE PTR [ecx+0x26],dh
  411f52:	cmp    DWORD PTR [ebp+0x612d494e],ebp
  411f58:	bound  edi,QWORD PTR [ebx]
  411f5a:	and    BYTE PTR [esi],dh
  411f5c:	sub    eax,edx
  411f5e:	shl    DWORD PTR [ebx-0x69f1f81f],cl
  411f64:	scas   al,BYTE PTR es:[edi]
  411f65:	dec    esi
  411f66:	lds    esi,FWORD PTR [ebx+eiz*1+0x6b]
  411f6a:	sar    DWORD PTR [esi],0x14
  411f6d:	or     BYTE PTR [edi],bh
  411f6f:	and    DWORD PTR [ebp-0x55],edx
  411f72:	out    0xff,al
  411f74:	push   edi
  411f75:	fwait
  411f76:	pop    edi
  411f77:	xlat   BYTE PTR ds:[ebx]
  411f78:	jbe    0x411ff6
  411f7a:	cmp    BYTE PTR [ebx+0x56bb2f8b],bl
  411f80:	(bad)  [esi+0x40]
  411f83:	mov    eax,ds:0x38bbd530
  411f88:	setb   BYTE PTR [eax+0xa91e8c7]
  411f8f:	or     eax,0x8e9019b0
  411f94:	inc    ecx
  411f95:	adc    ecx,esi
  411f97:	int    0xc1
  411f99:	cmp    eax,0xc4dcc5dc
  411f9e:	(bad)  
  411f9f:	pushf  
  411fa0:	jo     0x411fbd
  411fa2:	inc    ecx
  411fa3:	inc    esi
  411fa4:	mov    bh,0xc0
  411fa6:	pop    esp
  411fa7:	scas   eax,DWORD PTR es:[edi]
  411fa8:	jge    0x411f89
  411faa:	fstp   QWORD PTR [esi]
  411fac:	adc    eax,0x4e9a3c6d
  411fb1:	dec    ecx
  411fb2:	scas   al,BYTE PTR es:[edi]
  411fb3:	inc    ecx
  411fb4:	lods   eax,DWORD PTR ds:[esi]
  411fb5:	fisubr WORD PTR [edx+0x59454501]
  411fbb:	(bad)  
  411fbc:	adc    DWORD PTR [eax+0x3d448f49],esi
  411fc2:	nop
  411fc3:	sar    DWORD PTR [edi-0x5266f013],1
  411fc9:	and    eax,0x6e752f0b
  411fce:	pop    esi
  411fcf:	jge    0x411f5a
  411fd1:	out    0xb5,al
  411fd3:	push   ds
  411fd4:	jmp    DWORD PTR [ebx+0x62]
  411fd7:	stos   BYTE PTR es:[edi],al
  411fd8:	test   BYTE PTR [ecx+0x1],0xb
  411fdc:	inc    ebp
  411fdd:	fsub   QWORD PTR [esi]
  411fdf:	mov    WORD PTR [eax+0x376587f0],ds
  411fe5:	ret    0x4554
  411fe8:	push   0xffffffd4
  411fea:	inc    ebp
  411feb:	cld    
  411fec:	gs (bad) 
  411fee:	loop   0x411fcc
  411ff0:	js     0x411f7c
  411ff2:	pushf  
  411ff3:	jo     0x411ff4
  411ff5:	dec    edi
  411ff6:	loopne 0x411fc3
  411ff8:	loope  0x412001
  411ffa:	inc    edx
  411ffb:	jecxz  0x412007
  411ffd:	xchg   edx,eax
  411ffe:	sahf   
  411fff:	xor    al,0x7e
  412001:	pusha  
  412002:	popa   
  412003:	aas    
  412004:	push   eax
  412005:	shr    BYTE PTR [esi-0x63],cl
  412008:	jnp    0x411fce
  41200a:	jae    0x411fcf
  41200c:	lea    esi,[ebx+0x56]
  41200f:	jge    0x411f9c
  412011:	repz mov dh,0x4a
  412014:	fiadd  WORD PTR [ebx+0x42]
  412017:	adc    al,0x77
  412019:	pop    ebx
  41201a:	lea    ebp,[edi]
  41201c:	sub    BYTE PTR [ebx-0x27f92219],0xfe
  412023:	sub    eax,0xb4fc15c7
  412028:	scas   al,BYTE PTR es:[edi]
  412029:	push   eax
  41202a:	mov    edi,0xca2cd93d
  41202f:	mov    ebx,0xf75378a4
  412034:	adc    BYTE PTR [eax-0x74],ah
  412037:	xchg   esp,eax
  412038:	jne    0x411fc4
  41203a:	ss dec esi
  41203c:	mov    DWORD PTR [ebp+0x142ae9d9],ebp
  412042:	add    al,0xb5
  412044:	aam    0xc5
  412046:	ficomp WORD PTR [eax-0xa]
  412049:	pop    edi
  41204a:	ja     0x412070
  41204c:	fbstp  TBYTE PTR [edx+ebp*1+0x72b68029]
  412053:	push   cs
  412054:	aam    0x3d
  412056:	in     al,0xdf
  412058:	or     DWORD PTR [ebp+0xad0668d],edx
  41205e:	pop    edx
  41205f:	ja     0x412095
  412061:	add    edi,DWORD PTR [edx+0xa]
  412064:	jno    0x4120a0
  412066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412067:	in     eax,dx
  412068:	mov    DWORD PTR [esi],edi
  41206a:	js     0x4120d8
  41206c:	mov    dl,0x73
  41206e:	push   esp
  41206f:	std    
  412070:	int    0xec
  412072:	fwait
  412073:	adc    al,0xc4
  412075:	sbb    ch,bl
  412077:	cmp    DWORD PTR [eax-0x7e],ebx
  41207a:	and    eax,0x11f8567f
  41207f:	mov    eax,0x84a6ba6a
  412084:	xchg   ebx,eax
  412085:	jle    0x4120ec
  412087:	iret   
  412088:	push   es
  412089:	pop    ebx
  41208a:	lods   eax,DWORD PTR ds:[esi]
  41208b:	sahf   
  41208c:	or     bh,BYTE PTR [edx]
  41208e:	jle    0x4120ce
  412090:	rdtsc  
  412092:	or     edx,DWORD PTR [esi-0x1b]
  412095:	(bad)  
  412096:	mov    ah,BYTE PTR [eax+0x1a974e85]
  41209c:	inc    ebx
  41209d:	and    dh,ch
  41209f:	and    bh,al
  4120a1:	jmp    0xfc79:0x2339cf8b
  4120a8:	in     eax,0x87
  4120aa:	sub    eax,0x2a663a12
  4120af:	cli    
  4120b0:	(bad)  
  4120b1:	sbb    eax,0xcdba43b4
  4120b6:	mov    ds:0x1c66e58a,al
  4120bb:	outs   dx,BYTE PTR ds:[esi]
  4120bc:	js     0x4120d1
  4120be:	loopne 0x4120a5
  4120c0:	lahf   
  4120c1:	(bad)  
  4120c2:	mov    ss,WORD PTR [esi+0x12]
  4120c5:	test   DWORD PTR [edx+eiz*2+0x4f],0xdd8df5c2
  4120cd:	mov    al,dl
  4120cf:	jl     0x4120b5
  4120d1:	popf   
  4120d2:	mov    dl,BYTE PTR es:[bx+si-0x5db6]
  4120d8:	add    dh,BYTE PTR [eax+esi*4]
  4120db:	mov    eax,ds:0x295af0b1
  4120e0:	ss push esi
  4120e2:	pop    edx
  4120e3:	xor    ah,BYTE PTR [esi]
  4120e5:	pop    esp
  4120e6:	add    esp,ecx
  4120e8:	mov    edx,0x3c896e2d
  4120ed:	inc    edi
  4120ee:	push   0x3b5ec624
  4120f3:	ins    DWORD PTR es:[edi],dx
  4120f4:	(bad)  
  4120f6:	aam    0x94
  4120f8:	xor    ecx,0x72b40bcf
  4120fe:	cli    
  4120ff:	mov    ?,WORD PTR [esi]
  412101:	into   
  412102:	popa   
  412103:	ja     0x41212b
  412105:	pop    eax
  412106:	add    BYTE PTR [eax],bl
  412108:	sar    BYTE PTR [ebp+0x21cc71f8],0xda
  41210f:	mov    DWORD PTR [eax+ecx*8+0x66],esi
  412113:	sbb    al,0x42
  412115:	nop
  412116:	js     0x41213f
  412118:	mov    bl,0xc4
  41211a:	in     al,dx
  41211b:	or     ecx,DWORD PTR [ecx+0x4]
  41211e:	fwait
  41211f:	inc    esp
  412120:	jg     0x4120b1
  412122:	data16 mov BYTE PTR [ebx-0x56],bh
  412126:	ror    BYTE PTR [edx+0x45],cl
  412129:	add    BYTE PTR [edi+0x4e1199d5],dl
  41212f:	or     cl,BYTE PTR [ebx+0x53]
  412132:	xchg   esp,eax
  412133:	add    DWORD PTR [ebx+0x7e],edx
  412136:	mov    cl,0xc5
  412138:	mov    gs,WORD PTR [eax+0x1ec8afa]
  41213e:	push   ecx
  41213f:	(bad)  
  412140:	xchg   ebp,eax
  412141:	sbb    eax,0x83163d97
  412146:	inc    eax
  412147:	aaa    
  412148:	adc    BYTE PTR [ebx+0x267bd6ac],0x90
  41214f:	xor    esp,DWORD PTR ds:0xc65b819d
  412155:	loopne 0x412148
  412157:	(bad)  
  412158:	push   ebx
  412159:	fimul  DWORD PTR cs:[ebx+0x4850f123]
  412160:	(bad)  
  412161:	xor    DWORD PTR [edi+0x1e],edx
  412164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412165:	call   0x356bfd35
  41216a:	or     esi,ebp
  41216c:	fistp  WORD PTR [edx-0x57]
  41216f:	jmp    0x4121c7
  412171:	daa    
  412172:	xor    DWORD PTR [eax+0x88af8a8],esp
  412178:	cmc    
  412179:	jmp    0x1f4b:0x8fc7b489
  412180:	loop   0x4121a8
  412182:	mov    bh,0x1a
  412184:	dec    ebp
  412185:	iret   
  412186:	dec    eax
  412187:	pushf  
  412188:	or     dl,BYTE PTR [ecx+0x5ac7bb11]
  41218e:	jecxz  0x41219d
  412190:	hlt    
  412191:	dec    esi
  412192:	or     ebx,edi
  412194:	mov    WORD PTR [eax-0x27],es
  412197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412198:	test   DWORD PTR [ebp-0x52eeaa59],0x7149903c
  4121a2:	lahf   
  4121a3:	push   cs
  4121a4:	mov    ah,0x59
  4121a6:	lock inc ebx
  4121a8:	cmp    BYTE PTR [ebp+esi*8-0x3b8fab09],ch
  4121af:	in     eax,dx
  4121b0:	out    0xe5,al
  4121b2:	pop    eax
  4121b3:	hlt    
  4121b4:	cdq    
  4121b5:	push   ds
  4121b6:	jo     0x4121b3
  4121b8:	outs   dx,BYTE PTR ds:[esi]
  4121b9:	out    dx,eax
  4121ba:	xchg   edi,eax
  4121bb:	push   ebx
  4121bc:	mov    esi,DWORD PTR [edx]
  4121be:	xlat   BYTE PTR ds:[ebx]
  4121bf:	jb     0x41222c
  4121c1:	xor    ebp,DWORD PTR [ecx+0x68]
  4121c4:	(bad)  
  4121c5:	xlat   BYTE PTR ds:[ebx]
  4121c6:	pop    esp
  4121c7:	shl    BYTE PTR [ebp+0x70b9b8df],0xbb
  4121ce:	loopne 0x4121a4
  4121d0:	out    dx,eax
  4121d1:	icebp  
  4121d2:	adc    esi,ebx
  4121d4:	(bad)  
  4121d5:	and    BYTE PTR [ecx+0x29bc7839],ah
  4121db:	cmp    al,0x39
  4121dd:	pop    esp
  4121de:	ins    DWORD PTR es:[edi],dx
  4121df:	out    0x6d,al
  4121e1:	ror    DWORD PTR [esi-0x2349ecc8],1
  4121e7:	mov    ebp,0x4b0b4603
  4121ec:	shl    edi,0x8b
  4121ef:	outs   dx,BYTE PTR ds:[esi]
  4121f0:	mov    eax,ds:0x87fc4e93
  4121f5:	ret    
  4121f6:	adc    eax,edx
  4121f8:	adc    al,0xb3
  4121fa:	push   edi
  4121fb:	dec    edx
  4121fc:	and    al,0xdf
  4121fe:	pushf  
  4121ff:	repnz xchg esp,eax
  412201:	mov    al,0xba
  412203:	(bad)  
  412204:	pusha  
  412205:	cmp    al,0xf0
  412207:	xor    bl,BYTE PTR [di]
  41220a:	or     ebx,esi
  41220c:	ret    0x9fb2
  41220f:	inc    edi
  412210:	dec    ebx
  412211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412212:	daa    
  412213:	into   
  412214:	pop    es
  412215:	dec    ebp
  412216:	jmp    0xc2cb:0x9072e3ed
  41221d:	iret   
  41221e:	es loop 0x4121f0
  412221:	mov    esi,0x3a53aebd
  412226:	aam    0x97
  412228:	popf   
  412229:	aad    0x6c
  41222b:	mov    ecx,DWORD PTR [edi]
  41222d:	popa   
  41222e:	fwait
  41222f:	std    
  412230:	iret   
  412231:	test   eax,0x9af6348a
  412236:	push   cs
  412237:	inc    eax
  412238:	ror    DWORD PTR [esi+esi*8+0x51],cl
  41223c:	xor    al,0xa0
  41223e:	fdivr  st,st(4)
  412240:	push   eax
  412241:	sbb    BYTE PTR ds:0xe7d857bb,0xd7
  412248:	cld    
  412249:	jp     0x4121cb
  41224b:	sub    di,WORD PTR [edx]
  41224e:	cs scas al,BYTE PTR es:[edi]
  412250:	lock (bad) 
  412252:	xchg   ecx,eax
  412253:	icebp  
  412254:	jecxz  0x412282
  412256:	rol    ecx,1
  412258:	or     DWORD PTR [ebp-0x5b],eax
  41225b:	loopne 0x41229e
  41225d:	test   al,0xbe
  41225f:	xor    ch,BYTE PTR [ebx+eax*8+0x5]
  412263:	and    dh,BYTE PTR [ebx-0x2a]
  412266:	call   0x7df:0x6875e438
  41226d:	pop    ds
  41226e:	inc    edx
  41226f:	mov    esi,DWORD PTR [ecx-0x72]
  412272:	mov    eax,ds:0x669f92a2
  412277:	push   esp
  412278:	iret   
  412279:	clc    
  41227a:	mov    esi,0x355ab51b
  41227f:	fidivr DWORD PTR [ebx+0x81816cb]
  412285:	jge    0x4122ec
  412287:	retf   
  412288:	fstp   DWORD PTR [eax+ecx*8+0x78]
  41228c:	push   esp
  41228d:	and    DWORD PTR [edx],esi
  41228f:	hlt    
  412290:	pusha  
  412291:	test   BYTE PTR [ebp-0x5f4dd597],bl
  412297:	jnp    0x4122a1
  412299:	rol    BYTE PTR [edi],1
  41229b:	or     cl,BYTE PTR [ebx+0x62]
  41229e:	inc    edi
  41229f:	pop    es
  4122a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122a1:	jg     0x412306
  4122a3:	or     bl,bh
  4122a5:	daa    
  4122a6:	sub    al,0xe7
  4122a8:	pop    ebx
  4122a9:	jb     0x412250
  4122ab:	(bad)  
  4122ac:	jle    0x412255
  4122ae:	test   eax,0x371d8ac3
  4122b3:	nop
  4122b4:	add    BYTE PTR [esi+0x445eebdb],0x67
  4122bb:	(bad)  
  4122bc:	jmp    0x9c02:0xc7a89492
  4122c3:	fld    QWORD PTR [ecx+0x38ef70eb]
  4122c9:	xchg   esp,eax
  4122ca:	adc    DWORD PTR [eax],0x5
  4122cd:	lods   eax,DWORD PTR ds:[esi]
  4122ce:	xor    ebx,0xfffffff0
  4122d1:	aad    0x1c
  4122d3:	mov    bl,dl
  4122d5:	mov    ch,BYTE PTR [esi]
  4122d7:	sbb    edi,esi
  4122d9:	fidivr DWORD PTR [esi+ebp*2-0x7f559648]
  4122e0:	dec    esi
  4122e1:	adc    BYTE PTR [edi],dh
  4122e3:	cmp    eax,0xfc3c6902
  4122e8:	iret   
  4122e9:	sahf   
  4122ea:	add    ebx,edx
  4122ec:	imul   eax,DWORD PTR [ebp-0x7f3fe79a],0x7f
  4122f3:	jbe    0x41232a
  4122f5:	sub    al,0xed
  4122f7:	ret    
  4122f8:	pop    ebp
  4122f9:	or     eax,0x919c48ff
  4122fe:	jmp    0x4122ae
  412300:	inc    ecx
  412301:	push   DWORD PTR [edi]
  412303:	cli    
  412304:	shr    BYTE PTR [ebx],1
  412306:	enter  0x6383,0x98
  41230a:	mov    ch,BYTE PTR [ebx+0x1d3ab86c]
  412310:	aas    
  412311:	out    0xc7,al
  412313:	jp     0x41235b
  412315:	pop    ss
  412316:	js     0x4122e0
  412318:	(bad)  
  412319:	push   0xffffffad
  41231b:	imul   eax,ecx,0x2d
  41231e:	xchg   edx,eax
  41231f:	jmp    0x277e5f30
  412324:	mov    WORD PTR [edi],gs
  412326:	les    ebp,FWORD PTR [ecx-0x66f08dfb]
  41232c:	push   edi
  41232d:	ret    
  41232e:	sub    BYTE PTR [edx-0x1715b05e],al
  412334:	iret   
  412335:	add    eax,0x4d7ee563
  41233a:	sub    DWORD PTR [eax-0x11],ebp
  41233d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41233e:	xor    al,0x3f
  412340:	cmp    al,0xd6
  412342:	or     al,0x6b
  412344:	sbb    DWORD PTR ds:0x823f1ca7,esp
  41234a:	in     eax,0x63
  41234c:	inc    edx
  41234d:	sbb    ch,BYTE PTR [ecx]
  41234f:	cmp    esp,0xe691fdd5
  412355:	aam    0xe6
  412357:	jae    0x412399
  412359:	xor    esi,DWORD PTR [edx+0x401b0510]
  41235f:	sbb    DWORD PTR [ecx],ebp
  412361:	ror    DWORD PTR [eax],cl
  412363:	xor    al,0x18
  412365:	xor    esi,DWORD PTR [edi+eax*8+0x47]
  412369:	dec    eax
  41236a:	repz fnstenv [ecx+ebx*1]
  41236e:	pop    ecx
  41236f:	sub    ebx,DWORD PTR [eax]
  412371:	jmp    0x4123b1
  412373:	aaa    
  412374:	mov    eax,0x95c9838f
  412379:	sub    DWORD PTR [edi-0x9],esp
  41237c:	das    
  41237d:	pop    ecx
  41237e:	push   esi
  41237f:	push   0xf1865168
  412384:	cld    
  412385:	(bad)  
  412387:	push   ecx
  412388:	mov    al,0xd0
  41238a:	arpl   WORD PTR ds:0x63b24678,dx
  412390:	adc    dh,al
  412392:	cmp    edi,DWORD PTR [ebp*8+0x5f38c37e]
  412399:	cmp    bh,ch
  41239b:	sub    DWORD PTR [ebx+0x77242eca],edi
  4123a1:	jbe    0x412390
  4123a3:	inc    esi
  4123a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123a5:	daa    
  4123a6:	xor    DWORD PTR [ebx],ebx
  4123a8:	and    esp,DWORD PTR [esi+0x65f7fa3e]
  4123ae:	test   eax,esi
  4123b0:	push   edi
  4123b1:	ins    BYTE PTR es:[edi],dx
  4123b2:	(bad)  
  4123b3:	and    dl,BYTE PTR [edx-0x8]
  4123b6:	sub    eax,0x738afb4c
  4123bb:	shl    DWORD PTR [edi-0x4b45cfb],1
  4123c1:	add    eax,ebp
  4123c3:	and    ebp,DWORD PTR [ebp+0x73]
  4123c6:	adc    ch,BYTE PTR [esi-0x75]
  4123c9:	and    DWORD PTR [ebp+esi*4-0x7d19ffc4],edi
  4123d0:	in     eax,0x51
  4123d2:	fcmove st,st(5)
  4123d4:	aam    0xa6
  4123d6:	mov    edx,0x2c3a428b
  4123db:	pop    ds
  4123dc:	mov    eax,0xb7f975b1
  4123e1:	xor    eax,0xa5d08b5c
  4123e6:	push   ss
  4123e7:	xchg   esi,eax
  4123e8:	std    
  4123e9:	dec    ebp
  4123ea:	jmp    0x4123b9
  4123ec:	cmp    al,BYTE PTR [edx]
  4123ee:	scas   eax,DWORD PTR es:[edi]
  4123ef:	mov    eax,0x976594b6
  4123f4:	fisubr WORD PTR [ecx-0x2c517b29]
  4123fa:	xchg   ecx,eax
  4123fb:	(bad)
  4123fe:	fistp  WORD PTR [edi*2+0x66c9bbf3]
  412405:	sub    ecx,edi
  412407:	pusha  
  412408:	cmp    dl,bl
  41240a:	(bad)  
  41240c:	jmp    0x6aaf5e6a
  412411:	jmp    0xe358cf09
  412416:	xlat   BYTE PTR ds:[ebx]
  412417:	lahf   
  412418:	loope  0x4123f0
  41241a:	xor    bl,BYTE PTR [ebp-0x79787ec3]
  412420:	jno    0x412486
  412422:	out    dx,al
  412423:	sahf   
  412424:	mov    DWORD PTR [ebp-0x4a3ad51a],edx
  41242a:	xchg   ecx,eax
  41242b:	mov    cl,dh
  41242d:	xchg   esi,eax
  41242e:	ss cmp cl,bh
  412431:	int3   
  412432:	xor    BYTE PTR [ecx-0x42f556f7],ch
  412438:	push   es
  412439:	fdivr  QWORD PTR [ebx-0x63]
  41243c:	push   cs
  41243d:	push   0x61fdfbde
  412442:	push   0xfffffffd
  412444:	inc    esp
  412445:	inc    ebx
  412446:	scas   al,BYTE PTR es:[edi]
  412447:	jmp    0x412443
  412449:	inc    edi
  41244a:	push   ds
  41244b:	les    edi,FWORD PTR [eax-0x5506cc98]
  412451:	out    dx,al
  412452:	(bad)  
  412453:	imul   DWORD PTR [esp+edx*2+0x7e4a2712]
  41245a:	loopne 0x412455
  41245c:	mov    cl,0xa3
  41245e:	and    al,0x14
  412460:	js     0x4124ad
  412462:	stc    
  412463:	icebp  
  412464:	sar    DWORD PTR [edi],1
  412466:	or     DWORD PTR [edx+0x4c40c334],edi
  41246c:	aad    0x1e
  41246e:	lds    edx,FWORD PTR [ebx]
  412470:	mov    bl,0x9b
  412472:	lea    edi,[ecx]
  412474:	dec    esi
  412475:	nop
  412476:	push   es
  412477:	mov    ebx,0xfa82fe29
  41247c:	xor    eax,0x8c12730f
  412481:	lds    ebx,FWORD PTR [ebp-0x31]
  412484:	call   0x1379b4c6
  412489:	sbb    al,0xe6
  41248b:	int    0x7e
  41248d:	xor    eax,0xe2c2f5f5
  412492:	repnz popa 
  412494:	enter  0xda09,0x54
  412498:	daa    
  412499:	sar    BYTE PTR ds:[edi],1
  41249c:	mov    esi,0xbd884251
  4124a1:	mov    al,0xc9
  4124a3:	jne    0x412510
  4124a5:	cld    
  4124a6:	out    0xa7,al
  4124a8:	and    BYTE PTR [ecx],0xab
  4124ab:	stos   BYTE PTR es:[edi],al
  4124ac:	lock sub bh,bl
  4124af:	cmp    DWORD PTR [ebp+eiz*1+0x243f9b61],ebx
  4124b6:	add    ebp,DWORD PTR fs:[eax-0x4e]
  4124ba:	retf   0xaedd
  4124bd:	mov    al,BYTE PTR [ecx]
  4124bf:	clc    
  4124c0:	std    
  4124c1:	aas    
  4124c2:	add    ah,BYTE PTR [edi+ebp*2-0x3e9af87a]
  4124c9:	and    eax,0xe838fd20
  4124ce:	gs push ecx
  4124d0:	clc    
  4124d1:	adc    DWORD PTR [esi-0x73],esi
  4124d4:	push   esi
  4124d5:	pop    eax
  4124d6:	(bad)  
  4124d7:	mov    dh,0xef
  4124d9:	jmp    0x1ab9:0x49688a98
  4124e0:	inc    ebp
  4124e1:	scas   al,BYTE PTR es:[edi]
  4124e2:	dec    ebx
  4124e3:	pop    ebp
  4124e4:	jmp    0x7634:0xad77356a
  4124eb:	jecxz  0x412545
  4124ed:	and    al,0xf0
  4124ef:	add    al,0x5a
  4124f1:	pusha  
  4124f2:	popf   
  4124f3:	gs inc ebp
  4124f5:	pop    edi
  4124f6:	cli    
  4124f7:	push   ebp
  4124f8:	and    ch,BYTE PTR [esi+0x3a]
  4124fb:	jne    0x412565
  4124fd:	rcr    BYTE PTR [edx+0x68],cl
  412500:	hlt    
  412501:	jle    0x412501
  412503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412504:	(bad)  
  412506:	shl    BYTE PTR [edx],0x41
  412509:	xchg   esp,eax
  41250a:	or     eax,0x6cea3928
  41250f:	dec    edi
  412510:	mov    BYTE PTR [ebx],ah
  412512:	ret    
  412513:	jb     0x41257a
  412515:	in     eax,0x22
  412517:	add    eax,0xb859fd24
  41251c:	jecxz  0x41257f
  41251e:	pop    ss
  41251f:	neg    DWORD PTR [ebx+0x50618e18]
  412525:	(bad)  
  412526:	test   eax,0x2599b502
  41252b:	int    0xa
  41252d:	int    0x80
  41252f:	and    esi,ecx
  412531:	cs jo  0x412583
  412534:	push   ecx
  412535:	inc    eax
  412536:	stc    
  412537:	sar    BYTE PTR [ebx+0x437ec1c5],0x36
  41253e:	pop    esi
  41253f:	jno    0x412529
  412541:	bound  edi,QWORD PTR ds:0xc95666e0
  412547:	(bad)  [ebx-0x6ff41fe]
  41254d:	inc    ebp
  41254e:	mov    eax,0xd907e6cc
  412553:	aaa    
  412554:	cmc    
  412555:	xchg   edx,eax
  412556:	mov    ah,0x85
  412558:	mov    WORD PTR ss:[edx+0x403a6cc6],?
  41255f:	dec    esi
  412560:	jle    0x4125ad
  412562:	cmp    eax,DWORD PTR [ecx-0xc8b1448]
  412568:	pop    ebx
  412569:	sub    esp,DWORD PTR [esi+0x60]
  41256c:	popa   
  41256d:	imul   edx,DWORD PTR [ecx+0x54],0xffffff82
  412571:	clc    
  412572:	retf   0xc001
  412575:	xchg   ebp,eax
  412576:	out    dx,eax
  412577:	push   cs
  412578:	xlat   BYTE PTR ds:[ebx]
  412579:	das    
  41257a:	retf   
  41257b:	je     0x412562
  41257d:	neg    BYTE PTR [ebx]
  41257f:	js     0x412590
  412581:	pop    ebx
  412582:	xor    DWORD PTR [edi],ebx
  412584:	xlat   BYTE PTR ds:[ebx]
  412585:	push   esp
  412586:	mov    ds:0x77e4faa9,eax
  41258b:	rcl    BYTE PTR [ecx+0x7c],cl
  41258e:	adc    eax,0x694b2edd
  412593:	and    DWORD PTR [edi],eax
  412595:	xchg   esi,eax
  412596:	repnz cmc 
  412598:	pusha  
  412599:	and    esi,DWORD PTR [edi]
  41259b:	or     BYTE PTR [ecx],0x78
  41259e:	or     ebp,esi
  4125a0:	dec    ebp
  4125a1:	call   0x6b5edba
  4125a6:	lds    edi,FWORD PTR [ebp-0x21f62c8c]
  4125ac:	iret   
  4125ad:	mov    ah,0x48
  4125af:	sub    BYTE PTR [ecx+0xb],bh
  4125b2:	ja     0x412616
  4125b4:	mov    ds:0xba24b1f7,eax
  4125b9:	in     eax,0x52
  4125bb:	les    ecx,FWORD PTR [edx+eax*2-0x66a82261]
  4125c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125c3:	sbb    eax,0x29c44fbe
  4125c8:	mov    eax,0x983ab5c3
  4125cd:	mov    dh,0xf3
  4125cf:	jge    0x41259a
  4125d1:	or     ebp,DWORD PTR [ecx]
  4125d3:	xor    dl,BYTE PTR [ebx-0x32e83417]
  4125d9:	mov    BYTE PTR es:[edx-0x16],cl
  4125dd:	js     0x412606
  4125df:	xor    edx,eax
  4125e1:	jg     0x41259f
  4125e3:	cmp    eax,0x11347bf7
  4125e8:	retf   
  4125e9:	fs sub al,0x6b
  4125ec:	sbb    BYTE PTR [edi+0x38d2d3c5],0xe5
  4125f3:	shl    BYTE PTR [ecx-0x24],cl
  4125f6:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4125f8:	shl    BYTE PTR [edi-0x4c],cl
  4125fb:	inc    ebx
  4125fc:	addr16 push ebp
  4125fe:	fwait
  4125ff:	pop    eax
  412600:	add    ch,BYTE PTR [si+0x19]
  412604:	div    BYTE PTR [ebp-0x1c]
  412607:	xchg   ecx,eax
  412608:	fmul   DWORD PTR [edi+0x65]
  41260b:	mov    cl,dl
  41260d:	loope  0x4125aa
  41260f:	mov    ebp,gs
  412611:	fidivr WORD PTR [eax-0x32]
  412614:	xchg   ecx,eax
  412615:	push   edi
  412616:	mov    ah,0xb1
  412618:	sbb    DWORD PTR [eax-0x71],edx
  41261b:	mov    ebx,0xab1c6991
  412620:	ins    DWORD PTR es:[edi],dx
  412621:	xor    al,cl
  412623:	mov    gs,edx
  412625:	sbb    BYTE PTR [ecx],bh
  412627:	gs sbb ch,cl
  41262a:	jo     0x4125b1
  41262c:	int3   
  41262d:	cmp    ecx,esp
  41262f:	dec    edx
  412630:	cs pop eax
  412632:	dec    eax
  412633:	pop    ss
  412634:	int    0x62
  412636:	and    eax,0x1da1b4e9
  41263b:	cli    
  41263c:	cmc    
  41263d:	loope  0x412668
  41263f:	imul   edx,DWORD PTR [edx+0x7c],0xffffffeb
  412643:	sbb    eax,0xc4c0b107
  412648:	pop    ebx
  412649:	and    BYTE PTR [ebx],al
  41264b:	xchg   ebp,eax
  41264c:	retf   
  41264d:	cmc    
  41264e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41264f:	mov    eax,0x8f59ace3
  412654:	cmp    BYTE PTR [edx+0x72],0x81
  412658:	out    dx,eax
  412659:	dec    ebp
  41265a:	mov    bl,0xe8
  41265c:	repnz sub al,0x5a
  41265f:	jno    0x412684
  412661:	lock inc edi
  412663:	mov    BYTE PTR [edi+0x45],al
  412666:	test   bh,0x5a
  412669:	pop    ecx
  41266a:	jb     0x412641
  41266c:	mov    eax,0x6bbb3a8c
  412671:	test   eax,0xe38f67f9
  412676:	fmulp  st(7),st
  412678:	mov    bl,0x29
  41267a:	icebp  
  41267b:	mov    eax,0x8585fa9d
  412680:	dec    esi
  412681:	adc    al,0x4e
  412683:	xchg   edx,eax
  412684:	push   edi
  412685:	inc    ebx
  412686:	adc    DWORD PTR [ebx],edi
  412688:	pop    eax
  412689:	pop    eax
  41268a:	loope  0x41267b
  41268c:	push   ebx
  41268d:	push   eax
  41268e:	inc    eax
  41268f:	cmp    DWORD PTR [eax],esi
  412691:	pop    eax
  412692:	pop    ebp
  412693:	mov    cl,0x3e
  412695:	ins    DWORD PTR es:[edi],dx
  412696:	cmp    eax,ecx
  412698:	and    dh,al
  41269a:	mov    edx,0xda8e4cb9
  41269f:	clc    
  4126a0:	mov    dl,cl
  4126a2:	fimul  DWORD PTR [edi+0x4f9597bd]
  4126a8:	pusha  
  4126a9:	mov    ds:0x857b468e,al
  4126ae:	loope  0x4126ef
  4126b0:	mov    ebx,DWORD PTR [esi]
  4126b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126b3:	lds    eax,FWORD PTR [eax+0x1d]
  4126b6:	xor    eax,0x3782b771
  4126bb:	push   ss
  4126bc:	jnp    0x4126d9
  4126be:	push   edx
  4126bf:	or     bl,BYTE PTR [esi+0x9]
  4126c2:	mov    ds:0x6bd21139,eax
  4126c7:	imul   edx,DWORD PTR [ebp+0x26ec08fb],0xffffff8b
  4126ce:	push   edx
  4126cf:	ja     0x412692
  4126d1:	imul   esi,DWORD PTR [edi+0x4271305d],0x2d
  4126d8:	mov    al,ds:0x7ec8306f
  4126dd:	outs   dx,DWORD PTR ds:[esi]
  4126de:	xor    al,cl
  4126e0:	stc    
  4126e1:	push   cs
  4126e2:	pushf  
  4126e3:	pushf  
  4126e4:	adc    al,0x48
  4126e6:	or     al,bh
  4126e8:	fmul   DWORD PTR [ecx]
  4126ea:	or     DWORD PTR [edx+edx*8],0xffffffb1
  4126ee:	add    bl,BYTE PTR [eax]
  4126f0:	inc    ebx
  4126f1:	mov    ah,0x91
  4126f3:	in     eax,0xfa
  4126f5:	add    BYTE PTR [edx+edi*4-0x10e7e7c2],cl
  4126fc:	push   ds
  4126fd:	call   0x2406:0xcf6ea596
  412704:	sub    ah,BYTE PTR [edx+esi*2-0x1]
  412708:	mov    DWORD PTR [eax+0x49901b63],ebx
  41270e:	add    ch,BYTE PTR [edx+0x6e]
  412711:	cmp    eax,0x23358d93
  412716:	and    edi,DWORD PTR [ebx]
  412718:	mov    ebx,0x50a6b77c
  41271d:	jg     0x412748
  41271f:	sti    
  412720:	jmp    0x78e1b160
  412725:	dec    ebp
  412726:	mov    DWORD PTR [edx-0x6ecc98c4],eax
  41272c:	adc    DWORD PTR [ebx],esi
  41272e:	icebp  
  41272f:	js     0x41279f
  412731:	mov    ecx,0xccf3404e
  412736:	int    0xf7
  412738:	push   0x5a46ca0
  41273d:	rol    DWORD PTR [eax-0x21515d58],1
  412743:	add    cl,ch
  412745:	inc    ebx
  412746:	punpckhwd mm1,QWORD PTR [esi+0x11]
  41274a:	jmp    0x41278e
  41274c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41274d:	dec    bh
  41274f:	lods   al,BYTE PTR ds:[esi]
  412750:	mov    dh,0x61
  412752:	add    eax,esi
  412754:	mov    bh,0x2c
  412756:	out    0xc7,al
  412758:	cmp    DWORD PTR cs:[edx-0x64],eax
  41275c:	(bad)
  41275f:	mov    ch,0x17
  412761:	das    
  412762:	aas    
  412763:	pop    ebp
  412764:	mov    ch,0xeb
  412766:	xchg   edx,eax
  412767:	bound  eax,QWORD PTR [ebp-0x63]
  41276a:	fst    st(6)
  41276c:	push   edi
  41276d:	(bad)  
  41276e:	std    
  41276f:	fistp  WORD PTR [edx+edx*4]
  412772:	imul   ecx,ebp,0x21
  412775:	aad    0x6
  412777:	retf   
  412778:	xor    edx,edx
  41277a:	stc    
  41277b:	cld    
  41277c:	mov    esp,0xbf9e2217
  412781:	dec    DWORD PTR [edi]
  412783:	sar    DWORD PTR [eax-0x66b8215],0xb
  41278a:	ja     0x4127c8
  41278c:	lods   al,BYTE PTR ds:[esi]
  41278d:	arpl   WORD PTR cs:[esi+0x57],cx
  412791:	jmp    0x887809ea
  412796:	es dec esp
  412798:	cs push ebp
  41279a:	xor    ch,BYTE PTR [esi-0x750e64be]
  4127a0:	leave  
  4127a1:	and    eax,0x6d2a7cad
  4127a6:	mov    bh,0x23
  4127a8:	aas    
  4127a9:	scas   eax,DWORD PTR es:[edi]
  4127aa:	mov    WORD PTR [esi+0x17],gs
  4127ad:	jecxz  0x4127af
  4127af:	pop    esp
  4127b0:	ror    bh,1
  4127b2:	pop    ecx
  4127b3:	ret    0x5f9e
  4127b6:	xchg   BYTE PTR ds:0xed105bb1,dl
  4127bc:	enter  0xada7,0x8
  4127c0:	rcr    DWORD PTR [ecx+0x71861b16],1
  4127c6:	pop    es
  4127c7:	shl    DWORD PTR [ecx-0x69c92b47],0xf0
  4127ce:	pop    ebp
  4127cf:	fs scas eax,DWORD PTR es:[edi]
  4127d1:	aad    0x16
  4127d3:	arpl   di,di
  4127d5:	popa   
  4127d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127d7:	vpunpckhwd xmm7,xmm0,xmm7
  4127db:	dec    esi
  4127dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127dd:	shl    DWORD PTR [eax+0x4a900c5b],cl
  4127e3:	mov    al,0xaf
  4127e5:	std    
  4127e6:	call   FWORD PTR [edx+edi*4]
  4127e9:	scas   eax,DWORD PTR es:[edi]
  4127ea:	lock push cs
  4127ec:	test   bl,ch
  4127ee:	(bad)  
  4127f0:	(bad)  
  4127f2:	xor    esp,0xfe4e5b7
  4127f8:	fbstp  TBYTE PTR [esi]
  4127fa:	pop    eax
  4127fb:	repz adc BYTE PTR [ebx],dh
  4127fe:	cmp    al,0x68
  412800:	pop    esi
  412801:	xlat   BYTE PTR ds:[ebx]
  412802:	sbb    cl,bh
  412804:	mov    fs,eax
  412806:	mov    DWORD PTR [edi+esi*8],esp
  412809:	imul   ecx,DWORD PTR [eax-0x59b1e719],0x3af452e5
  412813:	out    dx,eax
  412814:	push   esp
  412815:	push   ebx
  412816:	mov    bh,0xf
  412818:	retf   
  412819:	pop    DWORD PTR [ebx+0x31]
  41281c:	(bad)  
  41281d:	and    BYTE PTR [ebx+0x8],ch
  412820:	jo     0x41288f
  412822:	jmp    0x412837
  412824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412825:	pop    esp
  412826:	les    eax,FWORD PTR [esi-0x5cefce39]
  41282c:	pavgb  mm1,QWORD PTR [ebp+0x4]
  412830:	scas   al,BYTE PTR es:[edi]
  412831:	iret   
  412832:	mov    eax,0x1d33d63a
  412837:	pop    ebx
  412838:	test   eax,0x2c4ebcbc
  41283d:	sahf   
  41283e:	pop    ss
  41283f:	dec    ecx
  412840:	popa   
  412841:	sub    eax,0x9358fd5b
  412846:	mul    cl
  412848:	les    eax,FWORD PTR ds:0x478217c0
  41284e:	adc    eax,0x77dbf5aa
  412853:	pop    ebp
  412854:	call   0xe3d9:0x375a7eb0
  41285b:	and    BYTE PTR [ebx+esi*2],bl
  41285e:	or     BYTE PTR [ecx+0x1],ch
  412861:	sub    BYTE PTR [esi+0x4967d91e],0xe0
  412868:	pop    edi
  412869:	jp     0x4128b0
  41286b:	sbb    DWORD PTR [ecx],edx
  41286d:	or     ecx,edx
  41286f:	loope  0x4128c4
  412871:	ja     0x4128b7
  412873:	mov    ds,WORD PTR [ebx-0x7d]
  412876:	inc    ebx
  412877:	xchg   ecx,eax
  412878:	mov    eax,ds:0xa50a56fe
  41287d:	push   edi
  41287e:	fisub  DWORD PTR [esi-0x38]
  412881:	sar    DWORD PTR [ebx-0x71],1
  412884:	aam    0x99
  412886:	mov    dl,0x3
  412888:	shl    DWORD PTR [ebx+eiz*1],1
  41288b:	imul   edx,esi,0xffffffa6
  41288e:	neg    BYTE PTR [ebx+0x17495cc9]
  412894:	in     al,dx
  412895:	xchg   edi,eax
  412896:	dec    edx
  412897:	lea    edi,[eax+0x5ee1dc59]
  41289d:	sub    eax,0x9487c496
  4128a2:	(bad)  [esi+eax*8+0xb]
  4128a6:	push   cs
  4128a7:	pop    edi
  4128a8:	jmp    0x412916
  4128aa:	and    eax,0x114f0806
  4128af:	pop    ebx
  4128b0:	ss jmp 0x1b2:0x8595367f
  4128b8:	inc    ebp
  4128b9:	cmc    
  4128ba:	adc    bh,al
  4128bc:	inc    ecx
  4128bd:	shl    BYTE PTR [eax+0x47c588c],cl
  4128c3:	mov    esp,0x43462307
  4128c8:	dec    BYTE PTR [ebx]
  4128ca:	jbe    0x412934
  4128cc:	jp     0xc4282895
  4128d2:	adc    DWORD PTR [ecx],edi
  4128d4:	inc    esp
  4128d5:	mov    edi,0x3e815a70
  4128da:	shl    BYTE PTR [ebx+0x1f],cl
  4128dd:	bound  ebp,QWORD PTR [edx-0x30ff6f99]
  4128e3:	push   ebp
  4128e4:	and    DWORD PTR [edi+edi*1-0x2b],esi
  4128e8:	dec    ecx
  4128e9:	div    BYTE PTR [ebx]
  4128eb:	clc    
  4128ec:	(bad)  
  4128ed:	cmc    
  4128ee:	push   ds
  4128ef:	adc    DWORD PTR [ecx],ebx
  4128f1:	inc    edx
  4128f2:	fs inc esi
  4128f4:	xchg   edx,eax
  4128f5:	fs mov edi,0x8bda3ecf
  4128fb:	mov    esi,0xd1ace847
  412900:	inc    ebx
  412901:	push   0xffffffb4
  412903:	push   0xb79b56ee
  412908:	ret    0xe97e
  41290b:	es or  edx,ebp
  41290e:	repnz adc BYTE PTR [eax],ch
  412911:	mov    ch,0x13
  412913:	jo     0x41289f
  412915:	scas   al,BYTE PTR es:[edi]
  412916:	push   esp
  412917:	mov    cl,0xe1
  412919:	jnp    0x41295c
  41291b:	dec    edi
  41291c:	mov    dl,0x8d
  41291e:	add    ecx,ebp
  412920:	in     al,dx
  412921:	and    BYTE PTR cs:[edi],bl
  412924:	cli    
  412925:	outs   dx,BYTE PTR ds:[esi]
  412926:	mov    WORD PTR [edx],?
  412928:	mov    ebp,0xe0f3e8b6
  41292d:	pop    ds
  41292e:	dec    ecx
  41292f:	fs mov dh,0xc5
  412932:	(bad)  
  412934:	mov    dh,0x50
  412936:	out    dx,al
  412937:	mov    es,WORD PTR [edx]
  412939:	jae    0x4129a8
  41293b:	sub    al,0x27
  41293d:	cmp    BYTE PTR [edi],0x5
  412940:	push   eax
  412941:	and    dh,BYTE PTR [ebx+0x755a476c]
  412947:	fdiv   st,st(6)
  412949:	mov    cl,0x39
  41294b:	loope  0x4128d6
  41294d:	push   es
  41294e:	mov    esi,0x49af2bf7
  412953:	pop    eax
  412954:	iret   
  412955:	xor    eax,0xe3391562
  41295a:	(bad)  
  41295b:	xlat   BYTE PTR ds:[ebx]
  41295c:	add    ch,bl
  41295e:	aam    0x17
  412960:	fdiv   QWORD PTR [edx-0x65]
  412963:	fild   DWORD PTR [ebp+0x49]
  412966:	sbb    al,0xd4
  412968:	sub    DWORD PTR [esi+0x7b],ebx
  41296b:	pop    eax
  41296c:	aad    0x4a
  41296e:	pop    ecx
  41296f:	cmp    esp,esp
  412971:	pop    esp
  412972:	popf   
  412973:	pushf  
  412974:	aas    
  412975:	xchg   ebx,eax
  412976:	mov    ds:0x8eb4d1e5,al
  41297b:	imul   eax,DWORD PTR [ecx+0x4a50cda4],0x5c
  412982:	cmp    eax,0xd728d1b0
  412987:	push   cs
  412988:	popa   
  412989:	jbe    0x412987
  41298b:	(bad)  
  41298c:	mov    al,ds:0xc93069ad
  412991:	stc    
  412992:	out    dx,al
  412993:	and    al,0x6a
  412995:	repnz adc eax,0xf8dbb588
  41299b:	test   al,0xf8
  41299d:	adc    ch,BYTE PTR [ebx-0xf6c9738]
  4129a3:	popa   
  4129a4:	jo     0x4129c9
  4129a6:	adc    bl,ch
  4129a8:	cmc    
  4129a9:	inc    ebp
  4129aa:	lea    ebp,[edi+eax*4+0x61]
  4129ae:	mov    edi,0x28d11d99
  4129b3:	inc    ecx
  4129b4:	cld    
  4129b5:	xlat   BYTE PTR ds:[ebx]
  4129b6:	repnz int 0x7f
  4129b9:	cli    
  4129ba:	mov    al,al
  4129bc:	mov    edx,0xd72ae671
  4129c1:	mov    bh,0xca
  4129c3:	fnstcw WORD PTR [edx+0x53d42eb]
  4129c9:	inc    ebx
  4129ca:	inc    esp
  4129cb:	and    DWORD PTR [edi+0x21],edi
  4129ce:	cwde   
  4129cf:	and    al,0xbb
  4129d1:	js     0x4129f2
  4129d3:	jcxz   0x4129d6
  4129d6:	push   es
  4129d7:	lock pusha 
  4129d9:	adc    edx,DWORD PTR [edx-0x80]
  4129dc:	cwde   
  4129dd:	ins    DWORD PTR es:[edi],dx
  4129de:	dec    esp
  4129df:	daa    
  4129e0:	scas   eax,DWORD PTR es:[edi]
  4129e1:	cli    
  4129e2:	adc    esp,DWORD PTR [ebp-0x15db238b]
  4129e8:	xor    al,0x3b
  4129ea:	outs   dx,BYTE PTR ds:[esi]
  4129eb:	leave  
  4129ec:	mov    eax,0xce96892f
  4129f1:	or     BYTE PTR [ebx+0x56d6d61c],0xe6
  4129f8:	xchg   ebx,eax
  4129f9:	xchg   esp,eax
  4129fa:	das    
  4129fb:	fcomip st,st(5)
  4129fd:	add    BYTE PTR [eax+0x35f6659f],dh
  412a03:	aas    
  412a04:	pop    ebp
  412a05:	addr16 call 0x615d:0x8fb169d6
  412a0d:	ret    
  412a0e:	retf   0xfa62
  412a11:	jecxz  0x412a37
  412a13:	jmp    DWORD PTR [edi-0x59620d75]
  412a19:	xchg   esi,eax
  412a1a:	inc    ebp
  412a1b:	dec    edx
  412a1c:	xor    BYTE PTR [edi],al
  412a1e:	pop    eax
  412a1f:	sahf   
  412a20:	sub    esi,DWORD PTR [ebx+0x3a]
  412a23:	ret    
  412a24:	mov    eax,ds:0xdc8095b8
  412a29:	add    BYTE PTR [edi],ah
  412a2b:	and    cl,BYTE PTR [eax]
  412a2d:	aaa    
  412a2e:	adc    ebp,ebp
  412a30:	xlat   BYTE PTR ds:[ebx]
  412a31:	pop    edx
  412a32:	mov    bh,0xcc
  412a34:	test   BYTE PTR [ecx+0x5b],ch
  412a37:	mov    ebx,0xecd98469
  412a3c:	push   ds
  412a3d:	les    eax,FWORD PTR [edi+0x377088d8]
  412a43:	xchg   BYTE PTR [ebx-0x49862c04],al
  412a49:	retf   0x9f36
  412a4c:	push   ebp
  412a4d:	dec    edx
  412a4e:	add    eax,0xe9b101a7
  412a53:	sub    edx,DWORD PTR [edx+esi*4+0x71]
  412a57:	in     al,0x71
  412a59:	aaa    
  412a5a:	jbe    0x412a37
  412a5c:	mov    al,0x71
  412a5e:	dec    edx
  412a5f:	push   esp
  412a60:	ja     0x412a70
  412a62:	sub    al,0xad
  412a64:	aam    0x41
  412a66:	mov    ebp,0x43584923
  412a6b:	(bad)  
  412a6d:	dec    eax
  412a6e:	pop    esp
  412a6f:	call   0x3ab2:0x42114473
  412a76:	pop    ecx
  412a77:	es mov bl,0x1c
  412a7a:	xlat   BYTE PTR ds:[ebx]
  412a7b:	dec    edi
  412a7c:	sbb    al,0xb2
  412a7e:	sahf   
  412a7f:	push   ebp
  412a80:	stc    
  412a81:	xchg   ecx,eax
  412a82:	pop    ebx
  412a83:	(bad)  
  412a85:	hlt    
  412a86:	cwde   
  412a87:	or     esi,ebx
  412a89:	mov    edi,DWORD PTR [esp+ebp*2+0x1b7a9b73]
  412a90:	mov    bl,0x6f
  412a92:	fwait
  412a93:	jns    0x412a42
  412a95:	rcr    BYTE PTR [ebp-0x3e6ef918],cl
  412a9b:	mov    ah,0x9b
  412a9d:	xchg   ebx,eax
  412a9e:	or     DWORD PTR [ebp-0x5ae311ec],0x9576f4ca
  412aa8:	sub    DWORD PTR [eax],edx
  412aaa:	dec    esi
  412aab:	push   0xffffff88
  412aad:	xchg   esp,eax
  412aae:	mov    WORD PTR [eax],fs
  412ab0:	fcmovnb st,st(0)
  412ab2:	retf   
  412ab3:	loopne 0x412af8
  412ab5:	xchg   ebx,eax
  412ab6:	push   es
  412ab7:	sbb    al,0x96
  412ab9:	mov    bl,0x6f
  412abb:	xchg   edi,eax
  412abc:	inc    eax
  412abd:	aas    
  412abe:	pop    esp
  412abf:	loope  0x412aa1
  412ac1:	xchg   ecx,eax
  412ac2:	retf   
  412ac3:	xchg   edi,eax
  412ac4:	sbb    BYTE PTR [edi+0x1b],bl
  412ac7:	cmp    BYTE PTR [eax-0x2],cl
  412aca:	pop    eax
  412acb:	in     eax,dx
  412acc:	into   
  412acd:	aam    0x9
  412acf:	jl     0x412a87
  412ad1:	jns    0x412a93
  412ad3:	pop    edi
  412ad4:	lods   al,BYTE PTR ds:[esi]
  412ad5:	inc    esi
  412ad6:	pop    ss
  412ad7:	jmp    0x48:0xbaf5fcf4
  412ade:	push   ecx
  412adf:	cdq    
  412ae0:	(bad)  
  412ae1:	fisub  DWORD PTR [ebx]
  412ae3:	mov    eax,0xb406153e
  412ae8:	jp     0x412b14
  412aea:	pop    ebp
  412aeb:	jbe    0x412ab4
  412aed:	aam    0x7d
  412aef:	mov    edx,0x9194abc0
  412af4:	rcr    BYTE PTR [ebx-0x7782c525],cl
  412afa:	jae    0x412a92
  412afc:	push   edi
  412afd:	or     BYTE PTR [edi-0x42fd3f6c],ch
  412b03:	sub    al,0x20
  412b05:	xchg   BYTE PTR [ebx],dl
  412b07:	add    bl,ch
  412b09:	push   ecx
  412b0a:	stc    
  412b0b:	cli    
  412b0c:	mov    ax,0x8f43
  412b10:	and    al,dh
  412b12:	jo     0x412b09
  412b14:	rcr    DWORD PTR [esi],0xb0
  412b17:	rcl    BYTE PTR [eax],1
  412b19:	daa    
  412b1a:	jle    0x412a9f
  412b1c:	dec    edi
  412b1e:	into   
  412b1f:	pushf  
  412b20:	jno    0x412b9a
  412b22:	int    0xfd
  412b24:	cld    
  412b25:	fadd   QWORD PTR gs:[edx-0x2d05d542]
  412b2c:	neg    ch
  412b2e:	das    
  412b2f:	(bad)  
  412b30:	fild   WORD PTR [edx]
  412b32:	retf   
  412b33:	add    eax,DWORD PTR [esi]
  412b35:	inc    eax
  412b36:	pop    ss
  412b37:	rcl    DWORD PTR [eax+0x3d],cl
  412b3a:	mov    al,0x81
  412b3c:	inc    esi
  412b3d:	(bad)  
  412b3e:	out    0x66,al
  412b40:	mov    ebx,0x660101c5
  412b45:	sbb    ebx,ebx
  412b47:	xlat   BYTE PTR ds:[ebx]
  412b48:	cmp    edi,esi
  412b4a:	lods   al,BYTE PTR ds:[esi]
  412b4b:	push   es
  412b4c:	rol    DWORD PTR [edx-0x143a46ed],0xc3
  412b53:	inc    edi
  412b54:	in     al,0xf0
  412b56:	jp     0x412bce
  412b58:	sbb    eax,0x6861e1d4
  412b5d:	sbb    esi,DWORD PTR [ebx]
  412b5f:	dec    esi
  412b60:	cmp    al,0x68
  412b62:	clc    
  412b63:	aad    0x3b
  412b65:	pop    edi
  412b66:	out    0x46,eax
  412b68:	adc    eax,0xb4ac0557
  412b6d:	mov    ds:0x30306b09,eax
  412b72:	adc    al,0x58
  412b74:	pop    ss
  412b75:	or     edi,DWORD PTR [ecx-0x2e]
  412b78:	aaa    
  412b79:	std    
  412b7a:	dec    esi
  412b7b:	(bad)  [ecx-0x2c23df2f]
  412b81:	mov    gs,WORD PTR [ebp-0x2b55492e]
  412b87:	sub    eax,0xc65595e
  412b8c:	sahf   
  412b8d:	sub    al,0xf
  412b8f:	fisttp QWORD PTR [esi]
  412b91:	shr    DWORD PTR [edi+0x1f395490],1
  412b97:	shr    DWORD PTR ds:0x8cc7187e,1
  412b9d:	hlt    
  412b9e:	inc    edx
  412b9f:	dec    ebx
  412ba0:	ds xchg edx,eax
  412ba2:	dec    ebx
  412ba3:	outs   dx,DWORD PTR ds:[esi]
  412ba4:	(bad)  
  412ba5:	and    BYTE PTR ds:0xcb5740ca,bl
  412bab:	jmp    0x434b5a83
  412bb0:	pop    esp
  412bb1:	xchg   DWORD PTR ds:[esp+eax*4],esp
  412bb5:	aad    0x48
  412bb7:	jle    0x412bf9
  412bb9:	fnstcw WORD PTR [edi*8+0x5c8eba98]
  412bc0:	in     eax,dx
  412bc1:	inc    eax
  412bc2:	call   0xc03ac66a
  412bc7:	cdq    
  412bc8:	xor    al,0x44
  412bca:	mov    ebx,es
  412bcc:	mov    BYTE PTR [ecx+0x27405635],al
  412bd2:	sahf   
  412bd3:	(bad)  
  412bd5:	shl    DWORD PTR [esi-0x63],cl
  412bd8:	sahf   
  412bd9:	outs   dx,BYTE PTR ds:[esi]
  412bda:	sbb    eax,0xd6290bc9
  412bdf:	xchg   esi,eax
  412be0:	popa   
  412be1:	fisub  DWORD PTR [ebx+edi*1]
  412be4:	js     0x412c13
  412be6:	scas   eax,DWORD PTR es:[edi]
  412be7:	jge    0x412c1c
  412be9:	aad    0xe0
  412beb:	pop    esp
  412bec:	daa    
  412bed:	mov    DWORD PTR [edx-0x7a50b2b7],ebp
  412bf3:	fwait
  412bf4:	mov    esp,0x6c31c70c
  412bf9:	outs   dx,DWORD PTR ds:[esi]
  412bfa:	mov    eax,0x658cadae
  412bff:	(bad)  
  412c00:	jne    0x412bc9
  412c02:	add    al,ch
  412c04:	fsub   DWORD PTR [edx]
  412c06:	loope  0x412c2f
  412c08:	(bad)  
  412c09:	out    0xb2,al
  412c0b:	add    edi,edi
  412c0d:	je     0x412bf8
  412c0f:	outs   dx,DWORD PTR ds:[esi]
  412c10:	push   es
  412c11:	jne    0x412c17
  412c13:	adc    DWORD PTR [ebp+0x3f7795f3],0xffffffb9
  412c1a:	in     eax,dx
  412c1b:	arpl   WORD PTR [eax+0x7002ff5c],si
  412c21:	push   edx
  412c22:	or     eax,0x404fa94a
  412c27:	retf   
  412c28:	xor    dh,BYTE PTR [ebx-0x7be64461]
  412c2e:	fisttp QWORD PTR [ecx]
  412c30:	mov    bl,0x5e
  412c32:	test   BYTE PTR [ecx+0x73],ch
  412c35:	xlat   BYTE PTR ds:[ebx]
  412c36:	mov    cl,0xf5
  412c38:	adc    eax,0xaa57e124
  412c3d:	jo     0x412bde
  412c3f:	cwde   
  412c40:	and    esp,DWORD PTR [edx-0x62ad71dc]
  412c46:	mov    dl,0x5a
  412c48:	shl    DWORD PTR [edi+0x1bf06457],1
  412c4e:	popa   
  412c4f:	jnp    0x412c8b
  412c51:	and    al,0x12
  412c53:	push   esi
  412c54:	mov    edx,ebx
  412c56:	pop    ds
  412c57:	or     bh,0xa4
  412c5a:	(bad)  
  412c5b:	shr    DWORD PTR [edi+esi*2+0x69],1
  412c5f:	daa    
  412c60:	(bad)  
  412c61:	mov    ecx,DWORD PTR ds:0xb061c127
  412c67:	pushf  
  412c68:	mov    dl,0xf1
  412c6a:	or     ah,0xe1
  412c6d:	and    al,0xe8
  412c6f:	fsub   DWORD PTR [edx+ecx*4-0x9c69ff2]
  412c76:	mov    ch,0xb0
  412c78:	mov    edx,0xab0571ce
  412c7d:	pmaddwd mm5,mm6
  412c80:	out    0x72,eax
  412c82:	(bad)  
  412c84:	push   edi
  412c85:	fiadd  DWORD PTR [eax-0x1e56e262]
  412c8b:	xchg   edi,eax
  412c8c:	call   0x10cf8d88
  412c91:	jp     0x412ccd
  412c93:	adc    ch,BYTE PTR ds:0x7991b9bd
  412c99:	push   edx
  412c9a:	repnz aad 0x9f
  412c9d:	(bad)  
  412c9f:	mov    ds:0x61ed4fa,eax
  412ca4:	aas    
  412ca5:	aas    
  412ca6:	sub    edi,DWORD PTR [edi]
  412ca8:	test   DWORD PTR [edx+0x12e20762],0x19046be4
  412cb2:	sub    eax,0x860c21b1
  412cb7:	and    al,0xe0
  412cb9:	add    al,0xd4
  412cbb:	and    BYTE PTR [esi-0x1d],ah
  412cbe:	mov    edx,DWORD PTR [eax]
  412cc0:	outs   dx,DWORD PTR ds:[esi]
  412cc1:	mov    ebp,fs
  412cc3:	mov    eax,ds:0xa75a556
  412cc8:	sbb    al,0xb0
  412cca:	aad    0xfb
  412ccc:	stos   BYTE PTR es:[edi],al
  412ccd:	sahf   
  412cce:	push   ecx
  412ccf:	xlat   BYTE PTR ds:[ebx]
  412cd0:	into   
  412cd1:	mov    dh,0x3
  412cd3:	xchg   ebx,eax
  412cd4:	(bad)  
  412cd5:	imul   eax,esp,0xc05eb9c6
  412cdb:	sti    
  412cdc:	xchg   edi,eax
  412cdd:	aad    0x2a
  412cdf:	cmp    BYTE PTR [eax],dh
  412ce1:	jbe    0x412d3a
  412ce3:	push   0x16
  412ce5:	jae    0x412cb1
  412ce7:	xlat   BYTE PTR ds:[ebx]
  412ce8:	pop    DWORD PTR [esi+0x5d5b6cf8]
  412cee:	pop    es
  412cef:	dec    ecx
  412cf0:	sub    edi,DWORD PTR [eax-0x4176a3f6]
  412cf6:	mov    ds:0xf31aa4ca,al
  412cfb:	fcom   QWORD PTR ds:0xdd33c0d3
  412d01:	nop
  412d02:	popa   
  412d03:	jns    0x412d7a
  412d05:	jp     0x412c93
  412d07:	push   ebp
  412d08:	dec    ebx
  412d09:	sbb    sp,dx
  412d0c:	jge    0x412d32
  412d0e:	push   esp
  412d0f:	fs fmulp st(2),st
  412d12:	mov    ah,0x4c
  412d14:	push   es
  412d15:	(bad)  
  412d16:	call   0x6061:0xc0720741
  412d1d:	aam    0x3
  412d1f:	lea    edx,ds:0x2eb5a20a
  412d25:	push   esp
  412d26:	cmp    ch,BYTE PTR [eax-0x396b5934]
  412d2c:	dec    eax
  412d2d:	out    dx,eax
  412d2e:	cld    
  412d2f:	pop    ecx
  412d30:	jnp    0x412cc3
  412d32:	cld    
  412d33:	pop    eax
  412d34:	fstp   QWORD PTR [esi+ecx*8+0x41153d35]
  412d3b:	or     DWORD PTR [esi+ebx*4],ebp
  412d3e:	lea    edi,[edi-0x4202b5ec]
  412d44:	sar    BYTE PTR [ebp+ecx*4+0x41cfe910],cl
  412d4b:	imul   ebx,edx,0x4f68694d
  412d51:	sbb    eax,0xe06dbc7
  412d56:	test   eax,0x5b09556c
  412d5b:	out    0x38,al
  412d5d:	cmp    DWORD PTR [ebp+0x2f26af6],0x61
  412d64:	cmp    eax,0x8a569fbb
  412d69:	add    edi,DWORD PTR [ebx]
  412d6b:	outs   dx,BYTE PTR ds:[esi]
  412d6c:	jecxz  0x412d53
  412d6e:	mov    ebp,0xaca6c89a
  412d73:	pop    eax
  412d74:	fs add eax,0xecb06f28
  412d7a:	add    DWORD PTR [edx+0x7bbb8a62],eax
  412d80:	mov    ss,WORD PTR [ebp+0x60f7d94f]
  412d86:	xor    DWORD PTR [ebp+0x2e],eax
  412d89:	in     al,0x16
  412d8b:	mov    ebx,0x4e362b8e
  412d90:	mov    ds:0xad0c7bee,eax
  412d95:	push   ebx
  412d96:	jo     0x412ded
  412d98:	not    DWORD PTR [eax+0x57]
  412d9b:	adc    ebp,esp
  412d9d:	in     eax,dx
  412d9e:	mov    eax,ds:0x63850255
  412da3:	xor    al,0x48
  412da5:	jnp    0x412d64
  412da7:	mov    WORD PTR [ebp+ebp*4-0x509434f5],?
  412dae:	and    dh,BYTE PTR [edi]
  412db0:	clc    
  412db1:	mov    esp,0xb91ca4bb
  412db6:	xchg   ecx,eax
  412db7:	into   
  412db8:	cmp    ah,BYTE PTR [esi-0x2d]
  412dbb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dbd:	mov    ebx,0x1f631006
  412dc2:	mov    dl,0xaa
  412dc4:	dec    eax
  412dc5:	stos   BYTE PTR es:[edi],al
  412dc6:	mov    cl,0x81
  412dc8:	pop    edi
  412dc9:	push   ss
  412dca:	enter  0xc5c3,0xae
  412dce:	das    
  412dcf:	adc    BYTE PTR [ebx-0x52],ah
  412dd2:	dec    edi
  412dd3:	ds push cs
  412dd5:	loope  0x412e40
  412dd7:	adc    BYTE PTR [esp+edi*2+0x3b],0xcc
  412ddc:	into   
  412ddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dde:	arpl   WORD PTR [ebx-0x5ce9d993],sp
  412de4:	cmp    DWORD PTR [ebx],eax
  412de6:	and    eax,ebp
  412de8:	push   ecx
  412de9:	pop    ss
  412dea:	pop    esi
  412deb:	cwde   
  412dec:	mov    ch,0xa2
  412dee:	(bad)  
  412def:	jmp    0xeaf2bf3e
  412df4:	ins    BYTE PTR es:[edi],dx
  412df5:	and    al,0x3a
  412df7:	pop    ebx
  412df8:	jb     0x412e21
  412dfa:	dec    ebx
  412dfb:	ret    0x478c
  412dfe:	push   ebp
  412dff:	push   ecx
  412e00:	push   es
  412e01:	jl     0x412e00
  412e03:	sub    DWORD PTR [eax],ebx
  412e05:	(bad)
  412e08:	xchg   ecx,eax
  412e09:	add    al,0x9
  412e0b:	jb     0x412e1b
  412e0d:	jmp    0x412e36
  412e0f:	jle    0x412e4a
  412e11:	mov    ebp,0xaee11b8
  412e16:	(bad)  
  412e17:	fisubr WORD PTR [edi-0x5c8b6e48]
  412e1d:	test   BYTE PTR [esi+edx*8-0x3],0x2a
  412e22:	jne    0x412df6
  412e24:	pop    ds
  412e25:	and    eax,0x3cb5210b
  412e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e2b:	in     eax,0x8c
  412e2d:	sbb    eax,0x68d6a942
  412e32:	int    0x93
  412e34:	scas   eax,DWORD PTR es:[edi]
  412e35:	jns    0x412dd1
  412e37:	mov    cl,0x55
  412e39:	adc    BYTE PTR [ecx+0x1e],ah
  412e3c:	div    DWORD PTR [eax]
  412e3e:	mov    DWORD PTR [edx-0x1f],edx
  412e41:	scas   eax,DWORD PTR es:[edi]
  412e42:	or     DWORD PTR [edi-0x6ed6beda],esi
  412e48:	test   eax,0x5f2bf1d5
  412e4d:	jbe    0x412e22
  412e4f:	test   ah,ah
  412e51:	ja     0x412dfc
  412e53:	xchg   esp,eax
  412e54:	cmp    DWORD PTR [ebp-0x1d],ecx
  412e57:	fidivr WORD PTR ss:[edx-0x601f5f63]
  412e5e:	mov    ecx,0xe124e4ca
  412e63:	jns    0x412e22
  412e65:	in     al,dx
  412e66:	nop
  412e67:	inc    ecx
  412e68:	dec    ebx
  412e69:	retf   
  412e6a:	push   esp
  412e6b:	cs cwde 
  412e6d:	loopne 0x412e66
  412e6f:	adc    cl,dh
  412e71:	fcmovne st,st(6)
  412e73:	jbe    0x412e84
  412e75:	fst    QWORD PTR [ebx-0x74]
  412e78:	or     bh,BYTE PTR [eax+0xda16ad2]
  412e7e:	dec    bh
  412e80:	pop    esp
  412e81:	mov    bh,0xe6
  412e83:	add    edi,eax
  412e85:	dec    eax
  412e86:	and    ebx,ecx
  412e88:	mov    eax,ds:0xf7de329d
  412e8d:	out    dx,al
  412e8e:	outs   dx,BYTE PTR ds:[esi]
  412e90:	(bad)  
  412e91:	out    dx,al
  412e92:	pop    ds
  412e93:	inc    ebp
  412e94:	lea    ecx,[ecx+0x40]
  412e97:	sub    eax,0xd8a1386a
  412e9c:	out    dx,al
  412e9d:	pop    ecx
  412e9e:	cwde   
  412e9f:	or     DWORD PTR [ebp+0x47],esi
  412ea2:	mov    dh,0x61
  412ea4:	ror    BYTE PTR [eax],1
  412ea6:	jo     0x412f04
  412ea8:	jbe    0x412ef9
  412eaa:	out    dx,al
  412eab:	and    DWORD PTR [eax+0x54],ecx
  412eae:	pop    ebx
  412eaf:	inc    eax
  412eb0:	dec    edx
  412eb1:	sahf   
  412eb2:	out    dx,eax
  412eb3:	and    ah,BYTE PTR [eax+0x2f08b774]
  412eb9:	(bad)  
  412ebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ebc:	mov    dh,0x53
  412ebe:	ja     0x412ed3
  412ec0:	jne    0x412f07
  412ec2:	mov    al,0xa5
  412ec4:	inc    ecx
  412ec5:	clc    
  412ec6:	fs mov bh,0xd7
  412ec9:	xchg   BYTE PTR [ebx+0x23a9f949],ch
  412ecf:	push   0x1f
  412ed1:	loopne 0x412ed5
  412ed3:	sbb    cl,bh
  412ed5:	inc    esp
  412ed6:	cwde   
  412ed7:	repz lea eax,[ebx]
  412eda:	(bad)  
  412edb:	mov    cl,0x89
  412edd:	inc    ebx
  412ede:	push   ebx
  412edf:	mov    ecx,0x3297c78e
  412ee4:	iret   
  412ee5:	xor    BYTE PTR [eax],bl
  412ee7:	loope  0x412ee5
  412ee9:	xor    DWORD PTR [eax-0x1b],ebx
  412eec:	inc    esp
  412eed:	sbb    eax,0xb4b923f1
  412ef2:	fldcw  WORD PTR [ebx]
  412ef4:	jle    0x412eb9
  412ef6:	mov    edi,0x65515feb
  412efb:	sub    ch,BYTE PTR [edi-0x64]
  412efe:	adc    al,0x95
  412f00:	mov    BYTE PTR [edi+0x34bd40c2],al
  412f06:	push   edx
  412f07:	cmp    al,BYTE PTR [ebx-0x3c8e28cd]
  412f0d:	push   edi
  412f0e:	push   ebx
  412f0f:	je     0x412ebc
  412f11:	int3   
  412f12:	add    ah,BYTE PTR [ecx*8-0x79498140]
  412f19:	outs   dx,DWORD PTR ds:[esi]
  412f1a:	mov    edi,0x5b652993
  412f1f:	push   0x75
  412f21:	popf   
  412f22:	jmp    FWORD PTR ss:[ebx-0x7dfd4a2d]
  412f29:	sbb    BYTE PTR [ebx+0x43],0xd7
  412f2d:	and    dl,bl
  412f2f:	mov    ?,WORD PTR [edx+0x3ea3cb5e]
  412f35:	dec    ebp
  412f36:	adc    DWORD PTR [esi],ecx
  412f38:	sbb    esp,DWORD PTR [ebp-0x42221768]
  412f3e:	imul   BYTE PTR [ecx]
  412f40:	(bad)  
  412f41:	ins    BYTE PTR es:[edi],dx
  412f42:	adc    esp,eax
  412f44:	call   0x363f:0xa4fdc76b
  412f4b:	mov    ecx,edi
  412f4d:	jmp    FWORD PTR [esp+ebp*4+0x70e1233f]
  412f54:	add    eax,0x8665b8e6
  412f59:	lods   al,BYTE PTR ds:[esi]
  412f5a:	dec    ecx
  412f5b:	or     DWORD PTR [esp+ebx*4+0x52],0x62
  412f60:	mov    esi,0xd1a6fba9
  412f65:	jnp    0x412f59
  412f67:	in     al,0x2
  412f69:	xor    DWORD PTR [edx-0x66679e32],edi
  412f6f:	ss cdq 
  412f71:	xlat   BYTE PTR ds:[ebx]
  412f72:	out    dx,eax
  412f73:	cmp    BYTE PTR [edi],ah
  412f75:	jbe    0x412fd0
  412f77:	enter  0xe14c,0x83
  412f7b:	inc    edx
  412f7c:	(bad)  
  412f7d:	push   esi
  412f7e:	mov    esi,0xbe44b4c8
  412f83:	test   al,0xa7
  412f85:	or     al,0xa1
  412f87:	(bad)  ds:0x84f9747e
  412f8d:	retf   0x3959
  412f90:	clc    
  412f91:	rcr    DWORD PTR [esi],cl
  412f93:	push   esp
  412f94:	iret   
  412f95:	test   BYTE PTR [edx-0x4433a8ef],ch
  412f9b:	in     al,0x37
  412f9d:	stc    
  412f9e:	into   
  412f9f:	ss (bad) 
  412fa1:	int3   
  412fa2:	jmp    0xd583:0x609062f7
  412fa9:	aad    0x51
  412fab:	nop
  412fac:	add    esi,DWORD PTR [edi+0x40]
  412faf:	retf   0x8c4d
  412fb2:	push   ecx
  412fb3:	jle    0x412f89
  412fb5:	les    ebp,FWORD PTR [ebx+0x14]
  412fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fba:	sbb    al,0x5a
  412fbc:	call   0x7e0e:0x12c0d90d
  412fc3:	sub    ebx,DWORD PTR [esi+edx*2-0x26d1bb3c]
  412fca:	push   cs
  412fcb:	xchg   esp,eax
  412fcc:	jmp    0x8eb12f7f
  412fd1:	mov    esi,0xacd3ecf0
  412fd6:	stc    
  412fd7:	inc    ebx
  412fd8:	pop    esp
  412fd9:	mov    ecx,0xfada63b7
  412fde:	jecxz  0x412fd6
  412fe0:	in     eax,0xf1
  412fe2:	gs mov ecx,0xa6179462
  412fe8:	add    DWORD PTR [ecx+0x4f],ecx
  412feb:	add    al,0x52
  412fed:	js     0x412fc5
  412fef:	mov    bh,0x37
  412ff1:	inc    ebx
  412ff2:	xor    BYTE PTR [eax+0x3c],0x85
  412ff6:	retf   0x4e66
  412ff9:	mov    al,BYTE PTR [esi]
  412ffb:	jecxz  0x412fc3
  412ffd:	xlat   BYTE PTR ds:[ebx]
  412ffe:	test   DWORD PTR [esi-0x78],eax
  413001:	ss jge 0x412fa1
  413004:	mov    ch,0x4f
  413006:	leave  
  413007:	lock push esi
  413009:	xor    al,0xab
  41300b:	pop    edi
  41300c:	sub    eax,0xddb2c6ed
  413011:	lds    edx,FWORD PTR [eax-0x13]
  413014:	popa   
  413015:	(bad)  
  413017:	pop    esi
  413018:	in     al,0xaf
  41301a:	xchg   BYTE PTR [ecx+edx*2+0x5ea3090b],ah
  413021:	scas   eax,DWORD PTR es:[edi]
  413022:	call   0x77cb9184
  413027:	sub    esi,ebx
  413029:	xchg   ecx,eax
  41302a:	lods   eax,DWORD PTR ds:[esi]
  41302b:	bswap  edx
  41302d:	(bad)  
  41302e:	xchg   edx,eax
  41302f:	jle    0x413032
  413031:	iret   
  413032:	rcr    BYTE PTR [ecx+0x36c4a005],0xd8
  413039:	dec    edx
  41303a:	js     0x41306e
  41303c:	or     edx,edi
  41303e:	or     eax,0xd7bc14de
  413043:	dec    ebx
  413044:	cdq    
  413045:	sti    
  413046:	push   ds
  413047:	or     BYTE PTR [ebx-0x3cfeb9d8],0x8b
  41304e:	(bad)  [eax+eax*8-0x701ea53e]
  413055:	loop   0x4130ae
  413057:	loope  0x413033
  413059:	jo     0x412ff0
  41305b:	(bad)
  41305e:	and    bh,BYTE PTR fs:[eax-0x679aa1e3]
  413065:	jp     0x413089
  413067:	popa   
  413068:	push   ebx
  413069:	fcom   DWORD PTR [ebp+ebx*8+0x1e4c391e]
  413070:	ret    
  413071:	cmp    ecx,esp
  413073:	fs mov esp,edx
  413076:	push   es
  413077:	loope  0x41309a
  413079:	adc    DWORD PTR [esi+0x14],0x0
  41307d:	xchg   edi,eax
  41307e:	adc    al,0x3
  413080:	fst    DWORD PTR ds:0x9ea7ce0b
  413086:	std    
  413087:	inc    eax
  413088:	push   0x1e
  41308a:	inc    DWORD PTR [eax-0x15]
  41308d:	ficom  WORD PTR [ebp+0x24]
  413090:	outs   dx,DWORD PTR ds:[esi]
  413091:	inc    edi
  413092:	icebp  
  413093:	mov    ch,0xa5
  413095:	popa   
  413096:	mov    ch,dh
  413098:	jae    0x41305b
  41309a:	push   0xffffffa9
  41309c:	push   0xf
  41309e:	xor    DWORD PTR [ebp+0x68],ebx
  4130a1:	enter  0x348b,0x31
  4130a5:	xor    BYTE PTR [ebx],0x32
  4130a8:	mov    ss:0x2be944c7,al
  4130ae:	pop    ds
  4130af:	popf   
  4130b0:	mov    dl,0x5f
  4130b2:	ret    
  4130b3:	sbb    dh,BYTE PTR [ebx+0x63]
  4130b6:	inc    esi
  4130b7:	mov    edi,0xc7694495
  4130bc:	icebp  
  4130bd:	sbb    esi,DWORD PTR [esi-0x33]
  4130c0:	cli    
  4130c1:	and    cl,BYTE PTR [ecx]
  4130c3:	call   0x7efa7be4
  4130c8:	fimul  WORD PTR [edx+eax*8-0x4392ca48]
  4130cf:	fcom   DWORD PTR [edi+edi*8+0x4b]
  4130d3:	rcr    DWORD PTR [edi],0x35
  4130d6:	call   0x10831b9d
  4130db:	or     cl,BYTE PTR [esi+0x4b8d88cd]
  4130e1:	fdiv   DWORD PTR [eax+0x2f]
  4130e4:	sbb    eax,0xe5729e31
  4130e9:	dec    ebp
  4130ea:	xor    BYTE PTR [ebx],ah
  4130ec:	aaa    
  4130ed:	retf   0x13bc
  4130f0:	leave  
  4130f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130f2:	adc    ebp,DWORD PTR [ecx+0x74]
  4130f5:	mov    al,0x50
  4130f7:	xchg   BYTE PTR [edx-0x3ea49fa8],bh
  4130fd:	and    al,0x56
  4130ff:	add    BYTE PTR [eax-0x6d2864bd],ah
  413105:	mov    eax,ds:0xcc7fbed7
  41310a:	jmp    0xd36e71cf
  41310f:	popf   
  413110:	sub    DWORD PTR [ecx-0x15],edi
  413113:	xchg   edi,eax
  413114:	pop    esp
  413115:	inc    ebp
  413116:	retf   
  413117:	cmp    BYTE PTR [esi],0xe3
  41311a:	push   ecx
  41311b:	push   esi
  41311c:	sar    BYTE PTR [ebp+edx*4+0x4887bcdd],cl
  413123:	hlt    
  413124:	or     edi,ebp
  413126:	inc    ecx
  413127:	xchg   DWORD PTR [ebp+0xd8801e8],edx
  41312d:	rcr    BYTE PTR [edx-0x58],cl
  413130:	jae    0x41316b
  413132:	cmp    eax,eax
  413134:	popf   
  413135:	cmp    al,0x5d
  413137:	xor    eax,0xc82d2e7d
  41313c:	lods   al,BYTE PTR ds:[esi]
  41313d:	out    dx,al
  41313e:	xor    BYTE PTR [ebx],ah
  413140:	pop    esi
  413141:	rol    ah,cl
  413143:	mov    ch,0x5b
  413145:	mov    edi,0xd302b9b7
  41314a:	sub    dh,BYTE PTR [edx+0x47209161]
  413150:	mov    esp,0x97c1e58f
  413155:	adc    ch,BYTE PTR [ecx]
  413157:	xor    eax,0xc30a7b8d
  41315c:	aaa    
  41315d:	iret   
  41315e:	lock leave 
  413160:	inc    ebx
  413161:	inc    ebx
  413162:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413164:	mov    ds:0x6c531139,al
  413169:	dec    esi
  41316a:	push   ds
  41316b:	movzx  edx,WORD PTR [eax]
  41316e:	push   es
  41316f:	inc    esp
  413170:	lock sbb dl,BYTE PTR [ecx]
  413173:	sbb    BYTE PTR [eax+eax*1+0x644882fd],dl
  41317a:	dec    ebp
  41317b:	xchg   DWORD PTR [esi-0x39],ebx
  41317e:	fs push eax
  413180:	pushf  
  413181:	rcr    BYTE PTR [eax-0x21],0xcb
  413185:	dec    ecx
  413186:	mov    dh,0xea
  413188:	or     al,ah
  41318a:	shr    DWORD PTR [eax-0x24b139b3],0x98
  413191:	jg     0x413114
  413193:	icebp  
  413194:	sub    eax,DWORD PTR ds:0xb53b01b6
  41319a:	fcmovb st,st(1)
  41319c:	sub    DWORD PTR [esi+0x634d5fec],edi
  4131a2:	xchg   edx,eax
  4131a3:	push   esi
  4131a4:	ficomp WORD PTR [eax+esi*8+0x32]
  4131a8:	jecxz  0x413173
  4131aa:	mov    cx,0x5018
  4131ae:	pop    ds
  4131af:	push   DWORD PTR [edx-0x4484b22e]
  4131b5:	xchg   edi,eax
  4131b6:	imul   ebx,DWORD PTR [eax],0xf0a3618a
  4131bc:	push   cs
  4131bd:	mov    ds:0x191009d1,eax
  4131c2:	in     al,0x4
  4131c4:	gs in  eax,0xf2
  4131c7:	dec    edx
  4131c9:	jnp    0x41320c
  4131cb:	bound  ebx,QWORD PTR [edi-0x23]
  4131ce:	pop    esi
  4131cf:	sahf   
  4131d0:	sub    BYTE PTR [ecx-0x20dd168c],ah
  4131d6:	jbe    0x413171
  4131d8:	mov    ch,BYTE PTR [ecx+0x5e]
  4131db:	js     0x413185
  4131dd:	jmp    0x57dc979a
  4131e2:	adc    eax,0x96c16058
  4131e7:	pop    ss
  4131e8:	sbb    al,0x85
  4131ea:	(bad)  
  4131eb:	mov    bl,0xa2
  4131ed:	sar    DWORD PTR [edi+edi*1-0x75],0x96
  4131f2:	lods   eax,DWORD PTR ds:[esi]
  4131f3:	pop    esi
  4131f4:	push   ebx
  4131f5:	clc    
  4131f6:	jmp    0x21498c33
  4131fb:	mov    esp,0x1fd122d9
  413200:	lock xor DWORD PTR [esi],edi
  413203:	lods   al,BYTE PTR ds:[esi]
  413204:	mov    DWORD PTR [edi],ebp
  413206:	mov    esp,edx
  413208:	push   eax
  413209:	sub    DWORD PTR fs:[eax],0xffffffc9
  41320d:	and    esi,edx
  41320f:	sbb    bl,BYTE PTR [ebx+ebx*1-0x1bf34059]
  413216:	adc    ecx,DWORD PTR [ebp-0x2e]
  413219:	hlt    
  41321a:	lahf   
  41321b:	ret    0x732
  41321e:	xchg   edi,eax
  41321f:	mov    cl,0x52
  413221:	xor    bh,0x6d
  413224:	or     DWORD PTR [edx],ebx
  413226:	push   0xe9608ab0
  41322b:	(bad)  
  41322c:	stc    
  41322d:	cmp    al,0x41
  41322f:	pop    esp
  413230:	dec    esi
  413231:	xor    al,0xc0
  413233:	test   eax,0xba4aea62
  413238:	inc    edi
  413239:	mov    ebx,0x1b5167e9
  41323e:	jmp    0xc1e6de71
  413243:	mov    eax,ds:0x9b1c9b2d
  413248:	aad    0x4d
  41324a:	je     0x413276
  41324c:	push   ds
  41324d:	cmp    bh,BYTE PTR [esi]
  41324f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413250:	push   ebx
  413251:	(bad)  
  413252:	fistp  WORD PTR [eax-0x4670de45]
  413258:	and    dl,BYTE PTR [edx-0x79]
  41325b:	pop    edx
  41325c:	pop    edi
  41325d:	call   0x608d:0x83cb573a
  413264:	push   edx
  413265:	(bad)  
  413266:	sahf   
  413267:	xchg   ecx,eax
  413268:	call   0xe419:0x595f3b9
  41326f:	rcl    BYTE PTR [edx+0x25],0xc0
  413273:	jae    0x4132b5
  413275:	or     ebp,esi
  413277:	cdq    
  413278:	and    dh,BYTE PTR [esi+eax*1]
  41327b:	int3   
  41327c:	sbb    bh,BYTE PTR [edx]
  41327e:	mov    cl,0xf1
  413280:	lea    esp,[ebp+0x604128da]
  413286:	call   0x2c79:0x25461100
  41328d:	test   BYTE PTR [edi-0x756303bb],al
  413293:	pop    esi
  413294:	es leave 
  413296:	inc    edi
  413297:	or     BYTE PTR [eax+ebp*2+0x3c],bl
  41329b:	fild   QWORD PTR [ebx+0x35810c40]
  4132a1:	mov    edi,0xc5787b88
  4132a6:	inc    ecx
  4132a7:	loopne 0x413263
  4132a9:	cmc    
  4132aa:	push   ecx
  4132ab:	dec    ebx
  4132ac:	cmp    eax,0xc791e399
  4132b1:	adc    DWORD PTR [edi+eax*2+0x33320ef5],eax
  4132b8:	push   edx
  4132b9:	cmp    dl,BYTE PTR ds:0x79c4a201
  4132bf:	cmc    
  4132c0:	dec    eax
  4132c1:	pusha  
  4132c2:	(bad)  
  4132c3:	out    dx,al
  4132c4:	test   DWORD PTR [ebx+ebx*4+0x651082dc],esi
  4132cb:	jno    0x413338
  4132cd:	xchg   esi,eax
  4132ce:	gs daa 
  4132d0:	jg     0x413290
  4132d2:	(bad)  
  4132d3:	popf   
  4132d4:	and    eax,0x3600d3ea
  4132d9:	jne    0x4132a8
  4132db:	aad    0x1b
  4132dd:	ja     0x413312
  4132df:	sbb    bl,BYTE PTR [ebx]
  4132e1:	rol    BYTE PTR [esp+edx*1+0x6e],0x88
  4132e6:	scas   eax,DWORD PTR es:[edi]
  4132e7:	mov    ah,BYTE PTR [ecx-0x2ceb602]
  4132ed:	push   ecx
  4132ee:	xor    ch,ah
  4132f0:	cmp    BYTE PTR [ebx],dh
  4132f2:	pop    edx
  4132f3:	(bad)  
  4132f4:	ss mov dl,0xcc
  4132f7:	in     al,0xf0
  4132f9:	hlt    
  4132fa:	pushf  
  4132fb:	or     ecx,DWORD PTR [ebx-0x1685e6d2]
  413301:	outs   dx,BYTE PTR ds:[esi]
  413302:	xor    ebx,DWORD PTR [ebx]
  413304:	jecxz  0x4132e3
  413306:	ret    
  413307:	in     eax,0xe5
  413309:	test   cl,dh
  41330b:	xchg   edx,eax
  41330c:	cmp    ebx,ecx
  41330e:	call   0x5d7d:0xa8acda1e
  413315:	jg     0x413383
  413317:	test   BYTE PTR [eax+ebp*1-0x2c5fd558],al
  41331e:	fnstenv [edi]
  413320:	aam    0x5b
  413322:	or     BYTE PTR [ebx+ebp*4+0x31],dh
  413326:	punpcklbw mm7,mm0
  413329:	push   ds
  41332a:	fwait
  41332b:	scas   al,BYTE PTR es:[edi]
  41332c:	add    eax,0x85cd0cf8
  413331:	(bad)  
  413332:	enter  0x733f,0xd
  413336:	adc    BYTE PTR [edx+0x4523f1af],al
  41333c:	into   
  41333d:	mov    DWORD PTR [edx],ecx
  41333f:	mov    DWORD PTR ds:0x420e8e,0x16
  413349:	cmp    DWORD PTR ds:0x420e8e,0x0
  413350:	je     0x4133a5
  413356:	cmp    DWORD PTR ds:0x420e8e,0x2
  41335d:	jne    0x413373
  413363:	push   0x4d61
  413368:	push   0x424000
  41336d:	call   DWORD PTR ds:0x4247fd
  413373:	cmp    DWORD PTR ds:0x420e8e,0x3
  41337a:	jne    0x41338d
  413380:	mov    ecx,DWORD PTR ds:0x420e8e
  413386:	dec    ecx
  413387:	mov    DWORD PTR ds:0x420e8e,ecx
  41338d:	mov    ecx,DWORD PTR ds:0x420e8e
  413393:	dec    ecx
  413394:	mov    DWORD PTR ds:0x420e8e,ecx
  41339a:	jmp    0x413349
  41339f:	sbb    ecx,0x253c
  4133a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4133a8:	and    DWORD PTR ds:0x42201c,0x420efc
  4133b2:	xor    ecx,eax
  4133b4:	adc    DWORD PTR ds:0x420f70,0x420ef8
  4133be:	add    ecx,esi
  4133c0:	mov    DWORD PTR [ebp-0x20],ecx
  4133c3:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  4133ca:	mov    ecx,DWORD PTR ds:0x420eec
  4133d0:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4133d7:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  4133de:	mov    ecx,0x748f
  4133e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4133e6:	mov    DWORD PTR [ebp+0x8],ecx
  4133e9:	mov    DWORD PTR ds:0x420f68,0x5b27
  4133f3:	jmp    0x413647
  4133f8:	xor    DWORD PTR ds:0x422008,edx
  4133fe:	mov    ecx,DWORD PTR [ebp+0x8]
  413401:	sub    DWORD PTR ds:0x420fa8,0x420ef8
  41340b:	mov    edx,DWORD PTR [ebp-0x8]
  41340e:	sub    DWORD PTR ds:0x420e86,0x420f98
  413418:	xor    ecx,eax
  41341a:	sbb    DWORD PTR ds:0x420f60,0x61d9
  413424:	xor    edx,eax
  413426:	xor    DWORD PTR ds:0x420f04,0x2d2e
  413430:	sub    ecx,edx
  413432:	sub    ecx,esi
  413434:	xor    ecx,eax
  413436:	and    DWORD PTR ds:0x420e9e,0x0
  413440:	mov    edx,DWORD PTR ds:0x420e9e
  413446:	inc    edx
  413447:	mov    DWORD PTR ds:0x420e9e,edx
  41344d:	cmp    DWORD PTR ds:0x420e9e,0x5
  413454:	jne    0x41346d
  41345a:	push   0x4241e6
  41345f:	push   0x1
  413461:	push   DWORD PTR [ebp-0x10]
  413464:	push   DWORD PTR [ebp-0x28]
  413467:	call   DWORD PTR ds:0x424801
  41346d:	cmp    DWORD PTR ds:0x420e9e,0x4
  413474:	jne    0x413487
  41347a:	mov    edx,DWORD PTR ds:0x420e9e
  413480:	inc    edx
  413481:	mov    DWORD PTR ds:0x420e9e,edx
  413487:	cmp    DWORD PTR ds:0x420e9e,0x18
  41348e:	jb     0x413440
  413494:	mov    DWORD PTR [ebp+0x8],ecx
  413497:	dec    edx
  413498:	mov    ecx,DWORD PTR [ebp+0x8]
  41349b:	add    edx,DWORD PTR ds:0x420e92
  4134a1:	mov    edx,DWORD PTR [ebp-0x64]
  4134a4:	add    DWORD PTR ds:0x420fa8,0x502e
  4134ae:	lea    ecx,[edx+ecx*1+0x5708f2]
  4134b5:	and    DWORD PTR ds:0x420f64,0x0
  4134bf:	mov    edx,DWORD PTR ds:0x420f64
  4134c5:	inc    edx
  4134c6:	mov    DWORD PTR ds:0x420f64,edx
  4134cc:	cmp    DWORD PTR ds:0x420f64,0x1a
  4134d3:	jne    0x4134e7
  4134d9:	push   0x420f04
  4134de:	push   DWORD PTR [ebp-0x24]
  4134e1:	call   DWORD PTR ds:0x424805
  4134e7:	cmp    DWORD PTR ds:0x420f64,0x15
  4134ee:	jb     0x4134bf
  4134f4:	or     DWORD PTR ds:0x422008,0x1488
  4134fe:	mov    DWORD PTR [ebp-0x64],ecx
  413501:	mov    ecx,DWORD PTR [ebp+0x8]
  413504:	mov    edx,DWORD PTR [ebp-0x60]
  413507:	lea    ecx,[edx+ecx*1+0x5708f2]
  41350e:	mov    DWORD PTR [ebp-0x60],ecx
  413511:	mov    ecx,DWORD PTR [ebp+0x8]
  413514:	mov    edx,DWORD PTR ds:0x422000
  41351a:	adc    DWORD PTR ds:0x420fa4,edx
  413520:	mov    edx,DWORD PTR [ebp-0x5c]
  413523:	sbb    DWORD PTR ds:0x420fa4,0x6605
  41352d:	lea    ecx,[edx+ecx*1+0x5708f3]
  413534:	and    DWORD PTR ds:0x420f5c,0x0
  41353e:	jmp    0x413552
  413543:	xor    edx,edx
  413545:	xor    edx,DWORD PTR ds:0x420f5c
  41354b:	inc    edx
  41354c:	mov    DWORD PTR ds:0x420f5c,edx
  413552:	cmp    DWORD PTR ds:0x420f5c,0x13
  413559:	jae    0x4135ab
  41355f:	cmp    DWORD PTR ds:0x420f5c,0x5
  413566:	jne    0x41358a
  41356c:	push   DWORD PTR [ebp-0x20]
  41356f:	push   0x420f04
  413574:	push   DWORD PTR [ebp-0x20]
  413577:	push   0x4240b9
  41357c:	push   0x1238
  413581:	push   DWORD PTR [ebp-0xc]
  413584:	call   DWORD PTR ds:0x42480d
  41358a:	cmp    DWORD PTR ds:0x420f5c,0x4
  413591:	jne    0x4135a4
  413597:	mov    edx,DWORD PTR ds:0x420f5c
  41359d:	inc    edx
  41359e:	mov    DWORD PTR ds:0x420f5c,edx
  4135a4:	jmp    0x413543
  4135a9:	neg    edx
  4135ab:	mov    DWORD PTR [ebp-0x5c],ecx
  4135ae:	and    DWORD PTR ds:0x420fa4,0x0
  4135b8:	mov    edx,DWORD PTR ds:0x420fa4
  4135be:	inc    edx
  4135bf:	mov    DWORD PTR ds:0x420fa4,edx
  4135c5:	cmp    DWORD PTR ds:0x420fa4,0x20
  4135cc:	jne    0x4135d8
  4135d2:	call   DWORD PTR ds:0x424811
  4135d8:	cmp    DWORD PTR ds:0x420fa4,0x18
  4135df:	jb     0x4135b8
  4135e5:	adc    edx,0x1b19
  4135eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4135ee:	mov    edx,DWORD PTR [ebp-0x58]
  4135f1:	lea    ecx,[edx+ecx*1+0x5708f0]
  4135f8:	xor    edx,DWORD PTR ds:0x420f08
  4135fe:	mov    DWORD PTR [ebp-0x58],ecx
  413601:	mov    ecx,DWORD PTR [ebp+0x8]
  413604:	xor    DWORD PTR ds:0x420f64,0x420eec
  41360e:	mov    edx,DWORD PTR [ebp-0x54]
  413611:	lea    ecx,[edx+ecx*1+0x5708f1]
  413618:	add    DWORD PTR ds:0x420f08,ebx
  41361e:	mov    DWORD PTR [ebp-0x54],ecx
  413621:	or     ecx,DWORD PTR ds:0x422018
  413627:	mov    ecx,DWORD PTR [ebp+0x8]
  41362a:	mov    edx,DWORD PTR [ebp-0x50]
  41362d:	inc    DWORD PTR ds:0x420f00
  413633:	lea    ecx,[edx+ecx*1+0x5708fe]
  41363a:	and    DWORD PTR ds:0x420e9a,0x420f6c
  413644:	mov    DWORD PTR [ebp-0x50],ecx
  413647:	inc    ecx
  413648:	mov    ecx,DWORD PTR [ebp+0x8]
  41364b:	adc    DWORD PTR ds:0x420ea2,0x68a
  413655:	xor    ecx,eax
  413657:	and    DWORD PTR ds:0x420e8e,0x1a66
  413661:	add    ecx,esi
  413663:	mov    DWORD PTR ds:0x420e92,0x4bef
  41366d:	jne    0x4133f8
  413673:	jmp    0x420dd1
  413678:	mov    ecx,DWORD PTR [ebp-0x1c]
  41367b:	mov    edx,DWORD PTR ds:0x423008
  413681:	mov    edx,DWORD PTR [edx]
  413683:	sub    DWORD PTR ds:0x420fb4,edx
  413689:	mov    edx,DWORD PTR [ebp-0x8]
  41368c:	xor    DWORD PTR ds:0x420f04,0x3196
  413696:	xor    ecx,eax
  413698:	xor    edx,eax
  41369a:	sbb    DWORD PTR ds:0x422000,0x24d3
  4136a4:	sub    ecx,edx
  4136a6:	xor    DWORD PTR ds:0x420e82,0x420e8a
  4136b0:	sub    ecx,esi
  4136b2:	xor    ecx,eax
  4136b4:	mov    DWORD PTR [ebp-0x1c],ecx
  4136b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4136ba:	mov    DWORD PTR [ebp+0x8],ecx
  4136bd:	jmp    0x4136ef
  4136c2:	mov    ecx,DWORD PTR [ebp+0x8]
  4136c5:	mov    edx,DWORD PTR [ebp-0x8]
  4136c8:	xor    ecx,eax
  4136ca:	xor    edx,eax
  4136cc:	sub    ecx,edx
  4136ce:	sub    ecx,esi
  4136d0:	xor    ecx,eax
  4136d2:	mov    DWORD PTR [ebp+0x8],ecx
  4136d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4136d8:	mov    edx,DWORD PTR [ebp+0x8]
  4136db:	imul   edx,edx,0x5708f2
  4136e1:	xor    ecx,eax
  4136e3:	add    ecx,esi
  4136e5:	lea    ecx,[ebp+ecx*4-0x64]
  4136e9:	mov    edi,DWORD PTR [ecx]
  4136eb:	add    edx,edi
  4136ed:	mov    DWORD PTR [ecx],edx
  4136ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4136f2:	xor    ecx,eax
  4136f4:	jmp    0x415a81
  4136f9:	js     0x4136a4
  4136fb:	inc    edx
  4136fc:	iret   
  4136fd:	aaa    
  4136fe:	jae    0x41377b
  413700:	test   eax,0x7e5a8e7d
  413705:	jo     0x413781
  413707:	inc    esp
  413708:	pushf  
  413709:	mov    esi,0xa7a7a73
  41370e:	pop    edi
  41370f:	jp     0x41378b
  413711:	add    DWORD PTR [ebx-0x5ad6e1e5],ecx
  413717:	aaa    
  413718:	adc    eax,0x7b6e838c
  41371d:	arpl   sp,dx
  41371f:	popf   
  413720:	lods   eax,DWORD PTR ds:[esi]
  413721:	dec    ecx
  413722:	mov    bl,0x2
  413724:	pop    esp
  413725:	daa    
  413726:	mov    ah,0x89
  413728:	jle    0x41379f
  41372a:	push   cs
  41372b:	xor    al,0xf2
  41372d:	idiv   WORD PTR [ebx+0x6f898a55]
  413734:	std    
  413735:	xchg   esp,eax
  413736:	dec    eax
  413737:	push   es
  413738:	rol    dl,1
  41373a:	mov    edi,0x94da8878
  41373f:	jns    0x4136cf
  413741:	mov    ebx,0x9829e3b8
  413746:	mov    bl,0x66
  413748:	retf   0xe4e5
  41374b:	imul   ecx,DWORD PTR [ebx],0xffffffe5
  41374e:	rol    edi,cl
  413750:	lods   eax,DWORD PTR ds:[esi]
  413751:	xchg   BYTE PTR [esi-0x2ace310b],ah
  413757:	jmp    0x64cb:0xfd269c02
  41375e:	dec    ebp
  41375f:	xchg   esp,eax
  413760:	mov    ebx,0x25061a8d
  413765:	jno    0x4137a0
  413767:	out    dx,eax
  413768:	stos   BYTE PTR es:[edi],al
  413769:	xchg   esp,eax
  41376a:	int    0xbc
  41376c:	xchg   edi,eax
  41376d:	inc    ebp
  41376e:	sbb    eax,0x5fbcb5bb
  413773:	retf   
  413774:	sbb    DWORD PTR [ebp+0x4de7d672],eax
  41377a:	rol    BYTE PTR [eax+0x66e9053d],1
  413780:	mov    ecx,0xcd50b61c
  413785:	fidivr DWORD PTR [edx]
  413787:	stc    
  413788:	xchg   BYTE PTR [edx+0x30],cl
  41378b:	sti    
  41378c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41378d:	mov    ah,0x19
  41378f:	loop   0x413769
  413791:	in     al,0xfe
  413793:	jb     0x41376d
  413795:	imul   esp,DWORD PTR [ecx],0x17
  413798:	out    dx,eax
  413799:	imul   ch
  41379b:	les    eax,FWORD PTR [ebp+eiz*2+0xc023cef]
  4137a2:	jb     0x41373b
  4137a4:	stc    
  4137a5:	xchg   bl,dh
  4137a7:	es out dx,eax
  4137a9:	int    0xcb
  4137ab:	push   0x6b
  4137ad:	push   es
  4137ae:	int3   
  4137af:	(bad)  
  4137b0:	call   0xa67:0xaa1ffac6
  4137b7:	fdivr  st,st(0)
  4137b9:	sahf   
  4137ba:	sbb    al,0x7d
  4137bc:	pop    ds
  4137bd:	aam    0x75
  4137bf:	mov    dh,0x50
  4137c1:	aas    
  4137c2:	(bad)  
  4137c3:	mov    cl,0x31
  4137c5:	dec    ebx
  4137c6:	mov    ecx,0x89fe47ad
  4137cb:	push   esi
  4137cc:	fwait
  4137cd:	jecxz  0x4137cf
  4137cf:	dec    ecx
  4137d0:	xchg   ebx,eax
  4137d1:	sub    dh,dl
  4137d3:	in     al,0xd5
  4137d5:	push   ebx
  4137d6:	mov    eax,ds:0x94b400bd
  4137db:	push   edx
  4137dc:	or     al,0xe5
  4137de:	mov    BYTE PTR [esi-0x63],cl
  4137e1:	test   eax,0x580e16a3
  4137e6:	jge    0x4137a5
  4137e8:	imul   esi,DWORD PTR [esi+ecx*8+0x37ed8889],0xe7a2b380
  4137f3:	test   al,0xe2
  4137f5:	loopne 0x413783
  4137f7:	pop    es
  4137f8:	push   ebp
  4137f9:	leave  
  4137fa:	adc    al,0x6e
  4137fc:	jmp    0xdb9df142
  413801:	xor    eax,0xdf88de05
  413806:	out    0xab,eax
  413808:	(bad)  
  413809:	jmp    0x4137f6
  41380b:	aas    
  41380c:	je     0x41386d
  41380e:	and    DWORD PTR [ecx+0x35],0xffffff8d
  413812:	test   BYTE PTR [ebx-0x778fc1aa],ah
  413818:	push   ds
  413819:	mov    ecx,DWORD PTR [eax-0x6f22d98d]
  41381f:	out    dx,eax
  413820:	(bad)  
  413821:	and    ebp,ebp
  413823:	dec    ebx
  413824:	out    dx,eax
  413825:	cmp    al,0x5e
  413827:	add    DWORD PTR [ecx+0x66],0x59
  41382b:	stc    
  41382c:	shl    DWORD PTR [ebp-0x78],cl
  41382f:	cdq    
  413830:	and    DWORD PTR [edi+0x1c],0xffffffae
  413834:	pop    ecx
  413835:	ins    BYTE PTR es:[edi],dx
  413836:	push   eax
  413837:	in     eax,dx
  413838:	ror    ecx,0x85
  41383b:	cdq    
  41383c:	sub    esi,DWORD PTR [edi]
  41383e:	push   DWORD PTR [ebx+ebx*4+0x5b]
  413842:	and    cl,ah
  413844:	mov    al,0x8c
  413846:	ret    0x8e7e
  413849:	xchg   DWORD PTR [ecx],esp
  41384b:	jne    0x4138ab
  41384d:	and    DWORD PTR [ebp-0x7d8922ff],ebp
  413853:	xor    ebx,DWORD PTR [ecx-0xb0db1fe]
  413859:	stos   BYTE PTR es:[edi],al
  41385a:	imul   edx,ebx,0x76fad366
  413860:	retf   0x115a
  413863:	cmp    al,0x3b
  413865:	sbb    dl,BYTE PTR [eax]
  413867:	mov    dl,0xd7
  413869:	mov    cl,0x4
  41386b:	pop    ecx
  41386c:	ror    ecx,cl
  41386e:	inc    ebx
  41386f:	inc    ebx
  413870:	add    bl,BYTE PTR [esi+eiz*4+0x10]
  413874:	sub    ah,BYTE PTR [eax]
  413876:	xchg   DWORD PTR [edx],esp
  413878:	addr16 in al,dx
  41387a:	cli    
  41387b:	adc    BYTE PTR [esi-0x664899c3],dh
  413881:	mov    al,ds:0xcb00158d
  413886:	mov    ecx,0x8f1882f6
  41388b:	pop    esp
  41388c:	sub    BYTE PTR [ebx],cl
  41388e:	fs call 0x4c24289c
  413894:	adc    ebp,DWORD PTR [ebx]
  413896:	stos   BYTE PTR es:[edi],al
  413897:	ins    DWORD PTR es:[edi],dx
  413898:	lea    eax,[ebx]
  41389a:	popa   
  41389b:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41389d:	jp     0x413838
  41389f:	(bad)  
  4138a1:	dec    ebx
  4138a2:	sbb    BYTE PTR [ecx+0x2f7bd7dd],0x8e
  4138a9:	jnp    0x4138a7
  4138ab:	in     eax,dx
  4138ac:	cmp    DWORD PTR [ebp-0x7aa38966],eax
  4138b2:	pop    ebx
  4138b3:	inc    esp
  4138b4:	dec    eax
  4138b5:	pop    ecx
  4138b6:	data16 add ah,BYTE PTR [ebp+eiz*1+0x12bad6ab]
  4138be:	sub    al,0x9f
  4138c0:	nop
  4138c1:	adc    al,0x9d
  4138c3:	and    al,0x47
  4138c5:	arpl   WORD PTR ds:0x53e1e5a3,sp
  4138cb:	mov    dh,0xd6
  4138cd:	sub    eax,0xbfa9e867
  4138d2:	or     DWORD PTR [edi+0x24],ecx
  4138d5:	rcr    BYTE PTR [ecx+0x34],0xff
  4138d9:	mov    bh,0x2b
  4138db:	mov    WORD PTR [ecx+0x18],ds
  4138de:	in     al,dx
  4138df:	inc    esi
  4138e0:	(bad)  
  4138e1:	fs inc esp
  4138e3:	mov    eax,ds:0x2b0d60ad
  4138e8:	cld    
  4138e9:	leave  
  4138ea:	dec    esi
  4138eb:	dec    esp
  4138ec:	int    0xe1
  4138ee:	mov    ah,al
  4138f0:	xor    DWORD PTR [esi-0x251df0b],ecx
  4138f6:	xor    DWORD PTR [edx-0x113ded3c],edi
  4138fc:	out    dx,eax
  4138fd:	mov    bl,0x1a
  4138ff:	(bad)  
  413900:	jb     0x413972
  413902:	jmp    0x65a0a988
  413907:	xor    BYTE PTR [edx+edx*8-0x7f],bl
  41390b:	cmp    DWORD PTR [ebx],0xffffffdd
  41390e:	in     eax,dx
  41390f:	lds    edi,FWORD PTR [ebx+0x18cc7a78]
  413915:	sub    BYTE PTR [edi+ebx*1],al
  413918:	lds    ecx,FWORD PTR ds:0x5d253bff
  41391e:	scas   al,BYTE PTR es:[edi]
  41391f:	sbb    bl,BYTE PTR [ebp+0x731931dc]
  413925:	add    al,0x57
  413927:	arpl   WORD PTR ss:[ebx],dx
  41392a:	cwde   
  41392b:	fstp   st(3)
  41392d:	(bad)  
  41392e:	aad    0x99
  413930:	mov    eax,ds:0x9158feb5
  413935:	imul   edx,DWORD PTR [esi+0x19],0xf997530d
  41393c:	jnp    0x41397d
  41393e:	pop    edi
  41393f:	mov    ebx,0xc808cd58
  413944:	clc    
  413945:	mov    eax,0x571cb929
  41394a:	scas   eax,DWORD PTR es:[edi]
  41394b:	xchg   edi,eax
  41394c:	icebp  
  41394d:	lahf   
  41394e:	mov    edi,0xbccebd5c
  413953:	push   es
  413954:	jmp    0x413994
  413956:	jne    0x4138f6
  413958:	leave  
  413959:	inc    esi
  41395a:	mov    esi,0x988eea73
  41395f:	stos   BYTE PTR es:[edi],al
  413960:	jae    0x413986
  413962:	imul   edx,DWORD PTR [edi-0x35d4f34f],0xffffff99
  413969:	cdq    
  41396a:	jge    0x413927
  41396c:	adc    eax,0x678ff65
  413971:	pop    ss
  413972:	jge    0x413978
  413974:	inc    ebp
  413975:	inc    ecx
  413976:	xchg   BYTE PTR [ebx+0x24],ah
  413979:	jecxz  0x4139b0
  41397b:	shr    dh,cl
  41397d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41397e:	shr    DWORD PTR [esi+0xe],0xd1
  413982:	aad    0x40
  413984:	xchg   ecx,eax
  413985:	fwait
  413986:	add    BYTE PTR [eax+eax*4-0x5def4ff2],bh
  41398d:	cmc    
  41398e:	add    eax,0x6feac454
  413993:	icebp  
  413994:	sbb    BYTE PTR [ebx-0x13ccb4be],bl
  41399a:	dec    ebx
  41399b:	aad    0xdc
  41399d:	mov    edi,0x75a5b11d
  4139a2:	add    BYTE PTR [esi+0x47],dh
  4139a5:	ss jbe 0x413979
  4139a8:	cmp    al,0x79
  4139aa:	out    dx,eax
  4139ab:	lods   eax,DWORD PTR ds:[esi]
  4139ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139ad:	jno    0x4139e8
  4139af:	push   ebx
  4139b0:	out    dx,al
  4139b1:	dec    ecx
  4139b2:	inc    ecx
  4139b3:	mov    eax,ds:0xf534cf3b
  4139b8:	mov    eax,ds:0xe0435d1e
  4139bd:	in     eax,0xb0
  4139bf:	repz into 
  4139c1:	mov    edx,0xe77308ce
  4139c6:	inc    edi
  4139c7:	fdivr  DWORD PTR [edx]
  4139c9:	inc    eax
  4139ca:	dec    eax
  4139cb:	add    cl,BYTE PTR [ecx]
  4139cd:	xchg   esp,eax
  4139ce:	push   esi
  4139cf:	enter  0x4fb6,0xe0
  4139d3:	jno    0x4139cf
  4139d5:	dec    ecx
  4139d6:	ror    DWORD PTR [esi+0x7d171cf0],cl
  4139dc:	pop    edi
  4139dd:	pop    ds
  4139de:	call   0x4a13:0x5c5a273f
  4139e5:	xchg   ecx,eax
  4139e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139e7:	sti    
  4139e8:	jno    0x413a61
  4139ea:	jnp    0x413a52
  4139ec:	es (bad) 
  4139ee:	repnz xchg ah,ch
  4139f1:	lds    ebx,FWORD PTR [edi]
  4139f3:	int    0x71
  4139f5:	iret   
  4139f6:	add    BYTE PTR [edx-0x71c6c1a1],dh
  4139fc:	sbb    eax,0xf9345e74
  413a01:	or     BYTE PTR [eax-0x66898919],dl
  413a07:	lds    edi,FWORD PTR [esi+0x72]
  413a0a:	jg     0x4139ca
  413a0c:	push   ecx
  413a0d:	ins    DWORD PTR es:[edi],dx
  413a0e:	pop    ds
  413a0f:	add    al,0x36
  413a11:	xor    BYTE PTR [edi],ch
  413a13:	add    DWORD PTR [edi+0x18],esi
  413a16:	test   DWORD PTR [ebx-0x7200115c],ebp
  413a1c:	mov    BYTE PTR [edx],dl
  413a1e:	push   eax
  413a1f:	jno    0x4139d1
  413a21:	sub    edi,ecx
  413a23:	xchg   esp,eax
  413a24:	cmp    eax,0x3b87ba01
  413a29:	call   0x7feefaf4
  413a2e:	ds dec ecx
  413a30:	shl    BYTE PTR [edi+0x655b486c],cl
  413a36:	add    esi,ecx
  413a38:	stc    
  413a39:	imul   edi,DWORD PTR [esi-0x15],0x9d48e4f2
  413a40:	sbb    ah,BYTE PTR ds:0xc792cc0d
  413a46:	ins    BYTE PTR es:[edi],dx
  413a47:	clc    
  413a48:	pop    es
  413a49:	or     bl,ah
  413a4b:	and    BYTE PTR [edx+ecx*2+0x2d4efb4b],bh
  413a52:	jecxz  0x413a0d
  413a54:	sub    eax,0x79f6ae9e
  413a59:	fs pop ecx
  413a5b:	pop    ebx
  413a5c:	rol    BYTE PTR [ebx*1+0x6ceb104f],cl
  413a63:	movlps QWORD PTR [ebx+edi*2+0x726186db],xmm1
  413a6b:	xchg   edi,eax
  413a6c:	rcl    BYTE PTR [edi],cl
  413a6e:	into   
  413a6f:	adc    DWORD PTR [ebx+0x6f],edx
  413a72:	mov    ds:0x7d66f139,eax
  413a77:	push   cs
  413a78:	push   ecx
  413a79:	sbb    esp,DWORD PTR [ebx]
  413a7b:	or     al,0xeb
  413a7d:	(bad)  
  413a7e:	mov    WORD PTR [esi+0x75c4fbd8],ss
  413a84:	push   0x9f3cbe2d
  413a89:	out    dx,eax
  413a8a:	je     0x413ac9
  413a8c:	jnp    0x413b03
  413a8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a8f:	(bad)  [ebx+0x75]
  413a92:	adc    BYTE PTR [ecx],dh
  413a94:	dec    edx
  413a95:	loopne 0x413acf
  413a97:	pop    eax
  413a98:	out    dx,al
  413a99:	repz push esp
  413a9b:	push   es
  413a9c:	and    ebp,DWORD PTR [edi-0xbc34bf4]
  413aa2:	outs   dx,DWORD PTR ds:[esi]
  413aa3:	cmp    bl,bl
  413aa5:	sbb    ebx,ebp
  413aa7:	pop    edi
  413aa8:	cwde   
  413aa9:	loop   0x413a34
  413aab:	and    BYTE PTR [esi+0x1e26b39e],dl
  413ab1:	push   ebp
  413ab2:	ds jnp 0x413ae4
  413ab5:	pop    ecx
  413ab6:	sbb    ebx,ebx
  413ab8:	push   esp
  413ab9:	sub    DWORD PTR [eax-0x7c6fc120],ebp
  413abf:	jl     0x413b0c
  413ac1:	jo     0x413af4
  413ac3:	mov    ch,0x7a
  413ac5:	mov    esp,0xce606999
  413aca:	add    BYTE PTR [edx],ah
  413acc:	xor    ch,BYTE PTR [edx]
  413ace:	mov    edi,0x79e3e15c
  413ad3:	mov    eax,0x20837497
  413ad8:	mov    WORD PTR [ebx-0x679bc213],gs
  413ade:	into   
  413adf:	mov    ch,0xf9
  413ae1:	mov    eax,ds:0xeb3bb5a2
  413ae6:	push   edi
  413ae7:	add    ch,ah
  413ae9:	mov    es,WORD PTR [esi]
  413aeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413aec:	xchg   BYTE PTR [edx],cl
  413aee:	pushf  
  413aef:	shl    BYTE PTR [ebp+0x62],0xe2
  413af3:	mov    edi,0xaa91f295
  413af8:	add    dh,dl
  413afa:	aam    0x4e
  413afc:	outs   dx,DWORD PTR ds:[esi]
  413afd:	cmp    ebx,DWORD PTR [eax+0x10]
  413b00:	xchg   ebx,eax
  413b01:	imul   ebx,DWORD PTR ss:[esi],0xd9b64f8
  413b08:	in     al,dx
  413b09:	xchg   edx,eax
  413b0a:	cld    
  413b0b:	dec    ebp
  413b0c:	push   ecx
  413b0d:	pop    esp
  413b0e:	aam    0xbc
  413b10:	add    eax,0xee5306b9
  413b15:	xor    eax,0x71795f82
  413b1a:	or     cl,BYTE PTR [ebp+0x42ecc827]
  413b20:	adc    eax,0xe6cb991a
  413b25:	and    BYTE PTR [esi+ebx*1-0x67],al
  413b29:	neg    ebx
  413b2b:	push   edx
  413b2c:	push   es
  413b2d:	rcr    dl,cl
  413b2f:	(bad)  
  413b30:	(bad)  
  413b31:	ds inc edi
  413b33:	push   edi
  413b34:	pop    edi
  413b35:	loope  0x413b27
  413b37:	inc    edi
  413b38:	jge    0x413bb0
  413b3a:	out    0x6f,eax
  413b3c:	mov    BYTE PTR [ebp-0x25],bl
  413b3f:	stc    
  413b40:	sbb    eax,0x50221fb5
  413b45:	(bad)
  413b49:	mov    al,ds:0x18499a44
  413b4e:	stc    
  413b4f:	and    BYTE PTR [edi-0x7d],bl
  413b52:	mov    DWORD PTR ds:0x39a6c9d4,ecx
  413b58:	sub    al,0x82
  413b5a:	test   eax,0x97672108
  413b5f:	ins    BYTE PTR es:[edi],dx
  413b60:	or     esi,DWORD PTR [esi+0x2f]
  413b63:	add    al,0x5e
  413b65:	xor    eax,0xad6bd4ef
  413b6a:	fisttp DWORD PTR [ebp+0x74d72251]
  413b70:	add    DWORD PTR ds:[ecx+0x5b],edi
  413b74:	adc    BYTE PTR [ebx-0xa2f40e6],ch
  413b7a:	das    
  413b7b:	loopne 0x413b2d
  413b7d:	mov    ah,0xc2
  413b7f:	add    ah,dh
  413b81:	dec    ecx
  413b82:	mov    dh,0xe8
  413b84:	sub    eax,DWORD PTR [ecx+eiz*4+0x77]
  413b88:	inc    ebp
  413b89:	push   ebx
  413b8a:	leave  
  413b8b:	(bad)  
  413b8c:	adc    bp,dx
  413b8f:	or     al,0xfe
  413b91:	mov    al,ds:0x59a461e9
  413b96:	add    ebx,DWORD PTR [edi+esi*8+0x72]
  413b9a:	sbb    eax,0x7a24520
  413b9f:	lahf   
  413ba0:	add    ebp,DWORD PTR [edi+0xd]
  413ba3:	adc    al,0x92
  413ba5:	dec    esi
  413ba6:	ss fs dec eax
  413ba9:	ja     0x413c0f
  413bab:	cmp    ebx,ecx
  413bad:	add    eax,0x4a34546e
  413bb2:	mov    edi,0xab8c82fb
  413bb7:	or     DWORD PTR [edx+0x25],ebx
  413bba:	sub    DWORD PTR [edx],0xffffffe2
  413bbd:	ins    BYTE PTR es:[edi],dx
  413bbe:	pop    ebx
  413bbf:	(bad)  
  413bc0:	sahf   
  413bc1:	sbb    ah,BYTE PTR [ebx-0x692fa2e4]
  413bc7:	stc    
  413bc8:	pop    edx
  413bc9:	inc    edi
  413bca:	int3   
  413bcb:	xchg   edx,eax
  413bcc:	add    cl,BYTE PTR [edx]
  413bce:	hlt    
  413bcf:	nop
  413bd0:	mov    cl,0x5a
  413bd2:	loope  0x413bb8
  413bd4:	cli    
  413bd5:	jno    0x413c38
  413bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bd8:	sti    
  413bd9:	out    dx,al
  413bda:	js     0x413c10
  413bdc:	or     eax,0x57ee8eeb
  413be1:	and    DWORD PTR [edx],ebp
  413be3:	enter  0xee9b,0xef
  413be7:	xchg   esp,eax
  413be8:	jp     0x413c69
  413bea:	and    eax,0xf9a3af6d
  413bef:	rcr    DWORD PTR [esi+ecx*2],0xdc
  413bf3:	aas    
  413bf4:	or     al,0x36
  413bf6:	pop    edi
  413bf7:	mov    al,ds:0x75e09192
  413bfc:	mov    ecx,0xdf3ff9af
  413c01:	cmp    DWORD PTR [edx-0x28],ebx
  413c04:	lods   al,BYTE PTR ds:[esi]
  413c05:	scas   eax,DWORD PTR es:[edi]
  413c06:	adc    eax,DWORD PTR [esi]
  413c08:	mov    ebp,0x966e811c
  413c0d:	cmp    bh,0x62
  413c10:	leave  
  413c11:	mov    cl,dh
  413c13:	pop    ebp
  413c14:	fld    TBYTE PTR [edx+0x53]
  413c17:	rol    esp,cl
  413c19:	pop    ds
  413c1a:	xor    DWORD PTR [ecx+0x45],0x62
  413c1e:	movhps QWORD PTR cs:[edi+0x1a408c52],xmm7
  413c26:	pop    ebp
  413c27:	sub    al,0x51
  413c29:	sbb    BYTE PTR [ebp+0x6e],dl
  413c2c:	iret   
  413c2d:	jae    0x413c46
  413c2f:	test   eax,0x2ef71d
  413c34:	pop    ebp
  413c35:	add    al,0x10
  413c37:	or     al,0x7
  413c39:	adc    al,0x3f
  413c3b:	add    esp,DWORD PTR [edi+0x68376229]
  413c41:	mov    bl,0x1c
  413c43:	mov    WORD PTR [ebp+0x7ce42f6e],fs
  413c49:	outs   dx,DWORD PTR ds:[esi]
  413c4a:	lahf   
  413c4b:	xor    esp,0xe9995ec3
  413c51:	inc    ebp
  413c52:	mov    dl,0xaf
  413c54:	(bad)  
  413c55:	jge    0x413c3e
  413c57:	pop    ss
  413c58:	hlt    
  413c59:	xchg   esp,eax
  413c5a:	nop
  413c5b:	scas   eax,DWORD PTR es:[edi]
  413c5c:	or     ch,ch
  413c5e:	cmp    dh,BYTE PTR [ecx+0x40]
  413c61:	dec    edx
  413c62:	mov    eax,0x32756de6
  413c67:	es inc edi
  413c69:	imul   eax,DWORD PTR [eax+0x45],0xffffffc1
  413c6d:	out    dx,eax
  413c6e:	test   al,0x26
  413c70:	add    al,0x52
  413c72:	in     eax,0x58
  413c74:	stos   DWORD PTR es:[edi],eax
  413c75:	sti    
  413c76:	fisttp WORD PTR [edx-0x78]
  413c79:	pop    ebp
  413c7a:	fdivr  DWORD PTR [ebx-0x43]
  413c7d:	repz call FWORD PTR [esi+0x60]
  413c81:	pop    edx
  413c82:	test   DWORD PTR [esi],ebx
  413c84:	lea    ebx,[edx]
  413c86:	je     0x413c69
  413c88:	add    DWORD PTR [eax+0x2c],ebp
  413c8b:	lahf   
  413c8c:	mov    ah,0x81
  413c8e:	icebp  
  413c8f:	pushf  
  413c90:	pop    eax
  413c91:	cli    
  413c92:	(bad)  
  413c93:	loope  0x413c9e
  413c95:	dec    edi
  413c96:	push   edx
  413c97:	stc    
  413c98:	and    DWORD PTR [edi],ebx
  413c9a:	test   eax,0xaf108339
  413c9f:	sub    BYTE PTR [ebx],dl
  413ca1:	push   cs
  413ca2:	inc    edi
  413ca3:	sub    eax,0xd4f9ff38
  413ca8:	push   0x7c952847
  413cad:	mov    eax,ds:0x81a78ead
  413cb2:	push   edi
  413cb3:	add    BYTE PTR [ebx+0x30],0x4a
  413cb7:	fld    DWORD PTR [edi+0x71]
  413cba:	or     BYTE PTR [ebp+0x1e],ch
  413cbd:	adc    DWORD PTR [esi-0x1433b301],edx
  413cc3:	inc    esi
  413cc4:	and    DWORD PTR [edi-0x7b],0x831280b9
  413ccb:	or     BYTE PTR [ebx+ebx*8-0x37beb1f3],bl
  413cd2:	sbb    al,0x9a
  413cd4:	retf   0xe809
  413cd7:	repz (bad) 
  413cd9:	js     0x413d16
  413cdb:	push   ebx
  413cdc:	push   edx
  413cdd:	push   0xc19b57c7
  413ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ce3:	ror    al,cl
  413ce5:	cli    
  413ce6:	in     al,0xb9
  413ce8:	push   eax
  413ce9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cea:	mov    al,BYTE PTR [ebx]
  413cec:	sbb    eax,0x516fbbf7
  413cf1:	das    
  413cf2:	xchg   ebx,eax
  413cf3:	mov    ebx,0x91442063
  413cf8:	xor    ebp,DWORD PTR [eax+0x79dc2a64]
  413cfe:	fild   WORD PTR [eax]
  413d00:	adc    edx,DWORD PTR [ecx-0x71]
  413d03:	test   DWORD PTR ds:0x8e275835,esp
  413d09:	lds    edi,FWORD PTR ds:0x971c705c
  413d0f:	sub    eax,0x30ad35a9
  413d14:	push   0x4eb3edae
  413d19:	je     0x413ca0
  413d1b:	aad    0x86
  413d1d:	pop    ecx
  413d1e:	lahf   
  413d1f:	sahf   
  413d20:	jnp    0x413d3f
  413d22:	and    BYTE PTR [ebx-0x19015ef1],dl
  413d28:	pusha  
  413d29:	ja     0x413d0b
  413d2b:	jb     0x413d9d
  413d2d:	(bad)  
  413d2e:	imul   edi,edx,0x2c78965e
  413d34:	test   edi,edx
  413d36:	jmp    0x413ce9
  413d38:	aam    0x45
  413d3a:	mov    ds:0x2f55f399,al
  413d3f:	mov    edi,0xc23cc16c
  413d44:	je     0x413d92
  413d46:	adc    dl,BYTE PTR [ebp+ebx*1-0x60]
  413d4a:	push   cs
  413d4b:	mov    bl,0x42
  413d4d:	lods   al,BYTE PTR ds:[esi]
  413d4e:	jbe    0x413d92
  413d50:	outs   dx,BYTE PTR ds:[esi]
  413d51:	sbb    ch,bh
  413d53:	jae    0x413d9a
  413d55:	aad    0xcc
  413d57:	jle    0x413d28
  413d59:	xchg   edi,eax
  413d5a:	pop    ecx
  413d5b:	lods   eax,DWORD PTR ds:[esi]
  413d5c:	out    0x17,al
  413d5e:	xor    BYTE PTR [esi-0x80],bl
  413d61:	inc    esi
  413d62:	(bad)  
  413d63:	push   ebx
  413d64:	xlat   BYTE PTR es:[ebx]
  413d66:	add    BYTE PTR es:[esi-0x17],bl
  413d6a:	pop    es
  413d6b:	lds    edx,FWORD PTR [esi-0x41de851b]
  413d71:	in     eax,dx
  413d72:	jns    0x413d66
  413d74:	iret   
  413d75:	ret    0x2c13
  413d78:	jnp    0x413df5
  413d7a:	fneni(8087 only) 
  413d7c:	syscall 
  413d7e:	push   es
  413d7f:	jnp    0x413d69
  413d81:	mov    ecx,0xae6fbd9a
  413d86:	les    ebx,FWORD PTR [edx]
  413d88:	imul   DWORD PTR [esi-0x462afabf]
  413d8e:	test   eax,0x1acf0595
  413d93:	xchg   edx,eax
  413d94:	sbb    edi,DWORD PTR [edx+ecx*2-0x2658f5f0]
  413d9b:	inc    esp
  413d9c:	pop    ebp
  413d9d:	in     al,0x41
  413d9f:	xchg   esp,eax
  413da0:	retf   
  413da1:	mov    bh,BYTE PTR [edi-0x14629ff4]
  413da7:	popa   
  413da8:	ret    0x6bd8
  413dab:	mov    esp,0x35bbb9ba
  413db0:	fld    st(0)
  413db2:	aas    
  413db3:	mov    dl,0xee
  413db5:	dec    ebp
  413db6:	(bad)  
  413db7:	retf   0x4ca2
  413dba:	lods   eax,DWORD PTR ds:[esi]
  413dbb:	add    BYTE PTR [ebx+0x1e],0x5
  413dbf:	int    0x5e
  413dc1:	ins    DWORD PTR es:[edi],dx
  413dc2:	push   edi
  413dc3:	test   al,0x78
  413dc5:	adc    BYTE PTR [esi],cl
  413dc7:	or     edx,DWORD PTR [ecx-0x303fff09]
  413dcd:	test   DWORD PTR [edx-0x11633b09],edx
  413dd3:	fdiv   DWORD PTR [ebp+0x21]
  413dd6:	adc    al,0x5a
  413dd8:	fld    st(5)
  413dda:	test   al,0x5a
  413ddc:	fnsave [ebp+ecx*8-0x1116fa1b]
  413de3:	fsubr  DWORD PTR [edi-0x2b54b00d]
  413de9:	dec    ebx
  413dea:	push   cs
  413deb:	dec    edx
  413dec:	adc    DWORD PTR [edi-0x17],ecx
  413def:	enter  0xda77,0x9a
  413df3:	icebp  
  413df4:	fiadd  WORD PTR [eax]
  413df6:	pop    es
  413df7:	mov    ebp,0x90d5117e
  413dfc:	sub    BYTE PTR [ebp-0x3289b649],al
  413e02:	cli    
  413e03:	hlt    
  413e04:	ja     0x413dc5
  413e06:	sar    BYTE PTR [esi],0x2
  413e09:	dec    eax
  413e0a:	daa    
  413e0b:	js     0x413e7d
  413e0d:	mov    edi,0x87e1424f
  413e12:	dec    ebp
  413e13:	mov    ds:0x8910f718,eax
  413e18:	and    DWORD PTR ds:0xb28ed3d6,esp
  413e1e:	add    dl,cl
  413e20:	xor    al,0x2d
  413e22:	test   DWORD PTR [edi+ecx*2-0x4e],0x51efe649
  413e2a:	sti    
  413e2b:	sbb    ah,BYTE PTR [ebx-0x23a19b70]
  413e31:	icebp  
  413e32:	js     0x413e1d
  413e34:	xchg   edi,eax
  413e35:	sbb    esp,DWORD PTR [edi]
  413e37:	inc    ebx
  413e38:	mov    al,ds:0xe36a89d5
  413e3d:	push   ds
  413e3e:	xchg   esi,eax
  413e3f:	jp     0x413e93
  413e41:	xchg   esp,eax
  413e42:	imul   esi,DWORD PTR [ebx+esi*2],0xfffffff9
  413e46:	mov    BYTE PTR [edi-0xbbd97b4],al
  413e4c:	mov    ecx,0xec798378
  413e51:	out    dx,al
  413e52:	pop    es
  413e53:	mov    bl,0xb3
  413e55:	sbb    al,0x47
  413e57:	mov    gs,WORD PTR [edi-0x213a2c87]
  413e5d:	xchg   edi,eax
  413e5e:	and    bh,dh
  413e60:	xchg   esp,eax
  413e61:	push   ds
  413e62:	dec    eax
  413e63:	retf   
  413e64:	ss leave 
  413e66:	push   esi
  413e67:	std    
  413e68:	shl    BYTE PTR [eax],cl
  413e6a:	push   ds
  413e6b:	push   ds
  413e6c:	fst    QWORD PTR [esi]
  413e6e:	sar    DWORD PTR [edi],cl
  413e70:	aad    0xcb
  413e72:	push   eax
  413e73:	and    bh,BYTE PTR [eax]
  413e75:	push   0x90a4f854
  413e7a:	pop    esp
  413e7b:	stos   DWORD PTR es:[edi],eax
  413e7c:	mov    bh,0xb7
  413e7e:	out    0x82,eax
  413e80:	xor    ebp,DWORD PTR [esi]
  413e82:	sbb    edi,DWORD PTR [esi-0x1ce17252]
  413e88:	lahf   
  413e89:	fnstcw WORD PTR ds:0x7780a5d7
  413e8f:	das    
  413e90:	out    dx,eax
  413e91:	mov    ecx,0xafc626e0
  413e96:	cmp    al,0x29
  413e98:	xor    eax,0x88da14d1
  413e9d:	fimul  DWORD PTR [ecx]
  413e9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ea0:	pop    esp
  413ea1:	loop   0x413efe
  413ea3:	call   0xebf3:0xb79667b7
  413eaa:	mov    dh,0xd8
  413eac:	push   esi
  413ead:	mov    BYTE PTR [ebp-0x24],bh
  413eb0:	mov    ebx,0x9316a581
  413eb5:	ds aas 
  413eb7:	popa   
  413eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413eb9:	xor    DWORD PTR [eax+0x6001a574],edi
  413ebf:	and    esi,esp
  413ec1:	int3   
  413ec2:	cmp    DWORD PTR [ebx+0x32],edi
  413ec5:	mov    edi,0x49c213fd
  413eca:	out    dx,eax
  413ecb:	jb     0x413f21
  413ecd:	gs dec eax
  413ecf:	cmp    BYTE PTR [eax],bh
  413ed1:	add    BYTE PTR [ebx],bh
  413ed3:	jbe    0x413e8b
  413ed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ed6:	mov    eax,0x8c133eea
  413edb:	xchg   ebx,eax
  413edc:	daa    
  413edd:	adc    BYTE PTR [eax-0x2091876c],ah
  413ee3:	jb     0x413eec
  413ee5:	dec    ebx
  413ee6:	push   es
  413ee7:	add    BYTE PTR [eax],ch
  413ee9:	enter  0x11fe,0xe6
  413eed:	sbb    DWORD PTR [edi],edi
  413eef:	adc    dl,bh
  413ef1:	ins    DWORD PTR es:[edi],dx
  413ef2:	out    0xca,eax
  413ef4:	xor    eax,0x53fbbb49
  413ef9:	fcomp  QWORD PTR [edx+ebx*8+0x56]
  413efd:	push   0xffffff9a
  413eff:	aad    0xf5
  413f01:	aaa    
  413f02:	cs push eax
  413f04:	fst    st(3)
  413f06:	push   ebx
  413f07:	dec    ebp
  413f08:	push   ds
  413f09:	mov    bh,0x41
  413f0b:	adc    DWORD PTR [ebp+0xd],0x61
  413f0f:	cmp    edi,DWORD PTR [edx]
  413f11:	mov    edi,0x835d8e83
  413f16:	sub    dh,bl
  413f18:	in     eax,0x71
  413f1a:	jae    0x413eb7
  413f1c:	gs scas al,BYTE PTR es:[edi]
  413f1e:	mov    ebp,0xde9d1fcd
  413f23:	adc    eax,ebp
  413f25:	pop    es
  413f26:	cs xchg edi,eax
  413f28:	test   al,0x1b
  413f2a:	inc    eax
  413f2b:	and    al,0x4e
  413f2d:	aam    0x67
  413f2f:	or     edx,DWORD PTR [ebx]
  413f31:	imul   ebx,DWORD PTR [ebp+0x7a],0x576dc965
  413f38:	push   es
  413f39:	ja     0x413f24
  413f3b:	push   ecx
  413f3c:	loop   0x413f0f
  413f3e:	(bad)
  413f41:	rcr    BYTE PTR [ecx],cl
  413f43:	push   esi
  413f44:	jae    0x413f89
  413f46:	xchg   esi,eax
  413f47:	dec    edx
  413f48:	mov    edx,0x1dd68b39
  413f4d:	in     eax,dx
  413f4e:	mov    esp,0x5a7cd88
  413f53:	popa   
  413f54:	inc    DWORD PTR [eax]
  413f56:	pop    eax
  413f57:	out    dx,al
  413f58:	in     eax,0x57
  413f5a:	pop    ebp
  413f5b:	xchg   edx,eax
  413f5c:	daa    
  413f5d:	fisttp QWORD PTR [ebx+0x2d]
  413f60:	fadd   st,st(2)
  413f62:	call   0xa6bc89c1
  413f67:	sub    esi,DWORD PTR [ebp-0x62]
  413f6a:	mov    ds:0xcfd4d845,eax
  413f6f:	in     eax,0xf9
  413f71:	imul   ecx,ecx,0xf1f460ad
  413f77:	aad    0x5b
  413f79:	dec    eax
  413f7a:	or     al,0x9e
  413f7c:	pop    ds
  413f7d:	wbinvd 
  413f7f:	mov    esp,es
  413f81:	mov    DWORD PTR [ebp+0x25],edi
  413f84:	dec    ebp
  413f85:	inc    edi
  413f86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f87:	addr16 cli 
  413f89:	pop    ss
  413f8a:	dec    esi
  413f8b:	add    ebx,DWORD PTR [edx-0x6f]
  413f8e:	test   BYTE PTR [ebx+0x38d3d88],cl
  413f94:	ret    
  413f95:	pushf  
  413f96:	and    BYTE PTR [ecx],0x21
  413f99:	in     al,0xe3
  413f9b:	sub    ax,0xa6f4
  413f9f:	xor    ebp,ecx
  413fa1:	pop    eax
  413fa2:	push   cs
  413fa3:	ds std 
  413fa5:	adc    DWORD PTR [ebx-0xc],ecx
  413fa8:	or     eax,0x658811ed
  413fad:	sti    
  413fae:	ins    DWORD PTR es:[edi],dx
  413faf:	loop   0x413f83
  413fb1:	mov    cl,0x26
  413fb3:	cmp    ah,BYTE PTR [esp+ebx*1-0x354f1e52]
  413fba:	nop
  413fbb:	sbb    eax,0x16018b40
  413fc0:	sub    BYTE PTR [esi-0x708abc39],cl
  413fc6:	inc    edx
  413fc7:	rcr    BYTE PTR [edi+0x1a09790c],cl
  413fcd:	jmp    0x36ee6c65
  413fd2:	pop    ebx
  413fd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fd4:	adc    al,0x29
  413fd6:	jecxz  0x414025
  413fd8:	add    ah,BYTE PTR [edx+0x4b]
  413fdb:	gs ss scas eax,DWORD PTR es:[edi]
  413fde:	mov    DWORD PTR [ebx+0x26],esi
  413fe1:	or     BYTE PTR [edx-0x66],bh
  413fe4:	mov    edi,0x3568ae14
  413fe9:	mov    BYTE PTR [esi-0x54],dh
  413fec:	jae    0x414066
  413fee:	sbb    ebx,0xffffffee
  413ff1:	mov    ecx,0xbc2796d3
  413ff6:	sar    edi,cl
  413ff8:	jns    0x413faf
  413ffa:	outs   dx,BYTE PTR ds:[esi]
  413ffb:	jno    0x41405c
  413ffd:	pop    es
  413ffe:	in     eax,dx
  413fff:	pop    esp
  414000:	gs hlt 
  414002:	aam    0x99
  414004:	mov    edi,0xc40d181e
  414009:	outs   dx,BYTE PTR ds:[esi]
  41400a:	add    BYTE PTR [eax],bh
  41400c:	xchg   ecx,eax
  41400d:	adc    eax,0x21ab0a52
  414012:	inc    ebp
  414013:	cmc    
  414014:	xchg   edx,eax
  414015:	xchg   ebx,eax
  414016:	or     ch,BYTE PTR [edx]
  414018:	cmp    al,0x72
  41401a:	jnp    0x41404b
  41401c:	into   
  41401d:	cmp    dh,al
  41401f:	popa   
  414020:	push   0x6fd3cc51
  414025:	aam    0xf
  414027:	sbb    BYTE PTR [ecx],bl
  414029:	outs   dx,DWORD PTR ds:[esi]
  41402a:	dec    edx
  41402b:	aam    0x9e
  41402d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41402e:	sahf   
  41402f:	sbb    BYTE PTR ds:0x44ce02b9,ch
  414035:	mov    ebx,?
  414037:	pop    edi
  414038:	mov    dh,0xd6
  41403a:	sub    esi,edi
  41403c:	mov    eax,0x7955ba65
  414041:	xchg   ebp,eax
  414042:	mov    cl,0x59
  414044:	mov    BYTE PTR [ecx-0x57],bh
  414047:	inc    edx
  414048:	dec    esp
  414049:	pushf  
  41404a:	mov    bh,0x9f
  41404c:	lahf   
  41404d:	(bad)  
  41404e:	inc    esi
  41404f:	std    
  414050:	mov    esi,0xaff424ca
  414055:	jmp    0x1490c301
  41405a:	fwait
  41405b:	and    dl,BYTE PTR [edx]
  41405d:	jno    0x4140c2
  41405f:	inc    edx
  414060:	push   ecx
  414061:	fiadd  DWORD PTR [edx+0x3eb2cd54]
  414067:	aas    
  414068:	repz pusha 
  41406a:	push   ds
  41406b:	cmp    BYTE PTR [ebp+0x56a97d09],ch
  414071:	and    al,0xd2
  414073:	rcr    DWORD PTR [ebp+0x37],1
  414076:	sbb    DWORD PTR [ebp+0x15],esp
  414079:	out    0x44,eax
  41407b:	push   ds
  41407c:	pop    edx
  41407d:	rcl    DWORD PTR [edi+0x7c6dbae2],0xcf
  414084:	push   es
  414085:	mov    bl,0x73
  414087:	pop    esp
  414088:	push   ds
  414089:	leave  
  41408a:	fstp   st(1)
  41408c:	test   DWORD PTR [edi],esi
  41408e:	out    0x32,al
  414090:	popa   
  414091:	dec    edx
  414092:	xor    bl,BYTE PTR [esi-0x598412e3]
  414098:	mov    ebp,ebx
  41409a:	std    
  41409b:	jne    0x414116
  41409d:	bound  esp,QWORD PTR [eax+0x2f]
  4140a0:	dec    ecx
  4140a1:	jnp    0x4140d5
  4140a3:	jecxz  0x41403c
  4140a5:	or     edi,DWORD PTR fs:[edi-0x74]
  4140a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140aa:	fadd   QWORD PTR [edi]
  4140ac:	inc    edx
  4140ad:	sbb    BYTE PTR [ebx+edx*1+0x4a],ah
  4140b1:	adc    al,0x63
  4140b3:	lds    eax,FWORD PTR [ecx-0x3317e63f]
  4140b9:	out    dx,eax
  4140ba:	mov    al,0x3b
  4140bc:	(bad)  
  4140bd:	jmp    0x43ec51cd
  4140c2:	mov    esi,DWORD PTR [eax]
  4140c4:	or     ebp,0xffffffa5
  4140c7:	pusha  
  4140c8:	std    
  4140c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140ca:	and    BYTE PTR [eiz*2+0x50131a1d],dh
  4140d1:	(bad)  
  4140d2:	mov    cl,0xb6
  4140d4:	dec    edi
  4140d5:	push   0xffffffec
  4140d7:	cmc    
  4140d8:	xor    DWORD PTR [edx-0x5b],ebx
  4140db:	pop    ds
  4140dc:	lahf   
  4140dd:	fisub  WORD PTR [edx+0x59]
  4140e0:	push   0x60ae8b29
  4140e5:	sub    bl,BYTE PTR [edx+esi*4+0x7b953f52]
  4140ec:	fmul   DWORD PTR [ecx-0x13]
  4140ef:	sbb    dh,BYTE PTR [edi+ebx*8-0x20]
  4140f3:	push   ds
  4140f4:	mov    dl,0x3e
  4140f6:	loopne 0x414107
  4140f8:	or     DWORD PTR [edi+ebx*8-0x5dce7f4e],0xd2ce4efb
  414103:	(bad)  
  414104:	mov    ebx,0x6cb12c3
  414109:	inc    ebp
  41410a:	ds (bad) 
  41410c:	mov    edi,0x5c5bd9ba
  414111:	and    eax,0xc0167a45
  414116:	inc    ebp
  414117:	mov    ds:0x4fb19ae2,eax
  41411c:	mov    ah,0x6b
  41411e:	dec    esp
  41411f:	aas    
  414120:	or     al,0xd0
  414122:	or     ebx,edx
  414124:	dec    eax
  414125:	mov    al,ds:0x61ca1089
  41412a:	xlat   BYTE PTR ds:[ebx]
  41412b:	sbb    al,0xd8
  41412d:	or     DWORD PTR [esi+0x33da5cff],ebx
  414133:	sub    BYTE PTR [ecx],bh
  414135:	mov    esp,0x26c653ce
  41413a:	lods   eax,DWORD PTR ds:[esi]
  41413b:	subps  xmm7,XMMWORD PTR [esp+eiz*2]
  41413f:	outs   dx,BYTE PTR ds:[esi]
  414140:	jb     0x4140cc
  414142:	out    dx,al
  414143:	pop    ecx
  414144:	pop    ecx
  414145:	and    al,0x67
  414147:	mov    bl,0x49
  414149:	jns    0x4140ed
  41414b:	ret    
  41414c:	loope  0x41416a
  41414e:	or     eax,0xf7dcb833
  414153:	das    
  414154:	arpl   WORD PTR [eax-0x4f],bx
  414157:	ins    DWORD PTR es:[edi],dx
  414158:	sub    ecx,ebp
  41415a:	inc    ebx
  41415b:	not    BYTE PTR [ebx]
  41415d:	adc    BYTE PTR [ebx+0x4],dh
  414160:	lods   al,BYTE PTR ds:[esi]
  414161:	pop    edx
  414162:	popa   
  414163:	ds xchg cl,al
  414166:	clc    
  414167:	in     al,dx
  414168:	mov    eax,ds:0x677ebf98
  41416d:	imul   eax,DWORD PTR [edi-0x4ceb2ea8],0xffffffc4
  414174:	dec    ebp
  414175:	(bad)  
  414176:	popf   
  414177:	adc    al,0xa7
  414179:	dec    ebp
  41417a:	lock retf 0x7ade
  41417e:	call   0x804f:0x6277618c
  414185:	in     al,0x95
  414187:	add    ebx,DWORD PTR [ecx+edi*2+0x59]
  41418b:	or     eax,0xbb7cd51b
  414190:	repnz or eax,0xf54d9def
  414196:	aas    
  414197:	or     al,0xc0
  414199:	sub    BYTE PTR [edi],ch
  41419b:	(bad)
  41419f:	(bad)  
  4141a0:	xchg   edi,eax
  4141a1:	sbb    DWORD PTR [ebx-0x63],ebp
  4141a4:	push   ebp
  4141a5:	inc    ecx
  4141a6:	(bad)  
  4141a7:	push   ebp
  4141a8:	(bad)  [ebp+ebp*1-0x4fc52f5]
  4141af:	xchg   esi,eax
  4141b0:	pop    eax
  4141b1:	mov    bh,0x54
  4141b3:	inc    eax
  4141b4:	sar    BYTE PTR [edx+edi*4-0x42bbce48],0xbf
  4141bc:	add    ebx,DWORD PTR [eax-0xe]
  4141bf:	int3   
  4141c0:	ficom  DWORD PTR [ebx-0x295d6eff]
  4141c6:	inc    esi
  4141c7:	fs mov ebp,0x3121bc44
  4141cd:	sti    
  4141ce:	cld    
  4141cf:	pop    ss
  4141d0:	lds    ebp,FWORD PTR [esi]
  4141d2:	inc    ebp
  4141d3:	sbb    DWORD PTR [ebp-0x609e9617],ecx
  4141d9:	or     DWORD PTR ds:0x4fb53484,edi
  4141df:	sbb    ch,BYTE PTR [edx+0x2edf7ff1]
  4141e5:	add    eax,DWORD PTR [ecx+0x3b]
  4141e8:	sub    eax,esp
  4141ea:	inc    esp
  4141eb:	and    bh,cl
  4141ed:	imul   eax,DWORD PTR [eax],0x1
  4141f0:	loopne 0x4141de
  4141f2:	adc    edi,esp
  4141f4:	sub    al,0xcb
  4141f6:	jmp    0x414275
  4141f8:	or     BYTE PTR [edx+0x69],ch
  4141fb:	lods   eax,DWORD PTR ds:[esi]
  4141fc:	adc    al,bl
  4141fe:	callw  0x3781
  414202:	das    
  414203:	cld    
  414204:	fs in  al,0xcc
  414207:	or     edx,DWORD PTR [edi]
  414209:	mov    esp,0xb7f98faf
  41420e:	sbb    DWORD PTR [esi],edx
  414210:	adc    al,0xed
  414212:	ja     0x414196
  414214:	outs   dx,DWORD PTR ds:[esi]
  414215:	retf   
  414216:	cmp    edi,DWORD PTR [edi]
  414218:	adc    eax,0x7fe497ab
  41421d:	jmp    0xa4cf1f63
  414222:	sbb    bl,BYTE PTR [eax-0x74e2d8db]
  414228:	mov    BYTE PTR [ebx-0x46eaaff0],al
  41422e:	xor    DWORD PTR [ebx+0x37],esp
  414231:	in     eax,dx
  414232:	ss stos BYTE PTR es:[edi],al
  414234:	popa   
  414235:	xor    al,0x63
  414237:	inc    ebp
  414238:	sbb    BYTE PTR [ecx+0x2202c86e],cl
  41423e:	pusha  
  41423f:	nop
  414240:	in     al,0x47
  414242:	(bad)  
  414244:	push   ecx
  414245:	cld    
  414246:	(bad)  
  414247:	and    al,0xba
  414249:	mov    ebp,0xfe2e5ab
  41424e:	(bad)  
  41424f:	iret   
  414250:	push   edi
  414251:	dec    eax
  414252:	sbb    BYTE PTR [esi+esi*8-0x4e5b3499],bh
  414259:	xor    BYTE PTR [edi],al
  41425b:	retf   
  41425c:	stos   BYTE PTR es:[edi],al
  41425d:	scas   eax,DWORD PTR es:[edi]
  41425e:	mov    dh,0xfb
  414260:	fsub   QWORD PTR [ebp+esi*1+0x6]
  414264:	sbb    eax,0x79c751ff
  414269:	fldcw  WORD PTR [edx-0x34]
  41426c:	lfs    eax,FWORD PTR [edx+0x18]
  414270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414271:	adc    BYTE PTR [eax+0x5d],bh
  414274:	jae    0x4142e3
  414276:	mov    ah,0x27
  414278:	mov    al,0x4c
  41427a:	and    DWORD PTR [esi-0x4b],0x7d
  41427e:	scas   al,BYTE PTR es:[edi]
  41427f:	dec    edx
  414280:	sub    al,0x68
  414282:	sti    
  414283:	jecxz  0x414301
  414285:	dec    ebx
  414286:	jle    0x414258
  414288:	mov    al,ds:0x93ddc230
  41428d:	add    al,0xa0
  41428f:	call   0x8afba708
  414294:	dec    ebx
  414295:	jne    0x414270
  414297:	push   ebx
  414298:	imul   eax,ebp,0x75
  41429b:	cmp    dl,BYTE PTR [ecx]
  41429d:	fwait
  41429e:	aam    0x14
  4142a0:	jecxz  0x414241
  4142a2:	sbb    eax,0xa4661c81
  4142a7:	scas   eax,DWORD PTR es:[edi]
  4142a8:	cmp    DWORD PTR [eax],0x67
  4142ab:	cmp    ebp,edx
  4142ad:	mov    ds:0x919d20f2,al
  4142b2:	fincstp 
  4142b4:	adc    esp,DWORD PTR [esp+edx*2-0x2dad92d1]
  4142bb:	sbb    DWORD PTR [eax-0x1bb7c93],ecx
  4142c1:	mov    cl,0xbd
  4142c3:	sbb    al,0x7e
  4142c5:	cmp    eax,0xae905a07
  4142ca:	cs sbb eax,0x9ef9d46f
  4142d0:	mov    ch,0x2a
  4142d2:	xchg   edi,eax
  4142d3:	ins    DWORD PTR es:[edi],dx
  4142d4:	pushf  
  4142d5:	sbb    ebp,ebx
  4142d7:	in     eax,dx
  4142d8:	ret    
  4142d9:	pop    edi
  4142da:	aam    0xe1
  4142dc:	inc    edi
  4142dd:	sti    
  4142de:	push   es
  4142df:	push   ds
  4142e0:	adc    al,BYTE PTR [ecx+eiz*2-0x72]
  4142e4:	dec    ebx
  4142e5:	sbb    BYTE PTR [bx+si-0x67c2],bh
  4142ea:	xor    al,0x9c
  4142ec:	js     0x41432c
  4142ee:	xchg   esi,eax
  4142ef:	push   ebx
  4142f0:	fucom  st(1)
  4142f2:	push   esi
  4142f3:	loopne 0x414371
  4142f5:	daa    
  4142f6:	cmp    esp,DWORD PTR [edi+0x12a8f197]
  4142fc:	cmp    bh,BYTE PTR [ebx]
  4142fe:	xor    eax,0xb8d6a521
  414303:	scas   al,BYTE PTR es:[edi]
  414304:	fsub   DWORD PTR [edi-0x2f9e84ea]
  41430a:	pop    ecx
  41430b:	jne    0x414363
  41430d:	fs inc eax
  41430f:	outs   dx,BYTE PTR ds:[esi]
  414310:	cmp    DWORD PTR gs:[edi+eax*1-0x32],0xac59b4ba
  414319:	(bad)  
  41431a:	fcomp  DWORD PTR [esi-0x42999f4c]
  414320:	shl    BYTE PTR [edx],1
  414322:	and    eax,esi
  414324:	pop    esp
  414325:	xchg   BYTE PTR [eax-0xd05b8ef],cl
  41432b:	lds    ecx,FWORD PTR ds:0xbe310a46
  414331:	fcmovnbe st,st(6)
  414333:	mul    BYTE PTR [edi]
  414335:	mov    bl,0xda
  414337:	jge    0xee2f562
  41433d:	lods   eax,DWORD PTR ds:[esi]
  41433e:	mov    esi,fs
  414340:	in     eax,dx
  414341:	jbe    0x4142e6
  414343:	pop    ds
  414344:	dec    eax
  414345:	jge    0x4142d0
  414347:	sub    esp,DWORD PTR [edi-0x23]
  41434a:	pusha  
  41434b:	sbb    eax,0x4dadcb9a
  414350:	push   eax
  414351:	mov    ebx,ebx
  414353:	mov    edx,DWORD PTR [edx-0x4dc74edd]
  414359:	cmp    eax,ebx
  41435b:	xchg   ecx,eax
  41435c:	xchg   edi,eax
  41435d:	cld    
  41435e:	test   BYTE PTR [ecx-0x50ca8965],cl
  414364:	out    dx,al
  414365:	out    dx,eax
  414366:	push   0xd7f31d76
  41436b:	das    
  41436c:	int3   
  41436d:	or     eax,0x6ecd38e8
  414372:	sbb    DWORD PTR [esi],eax
  414374:	sbb    BYTE PTR [ecx+0x41a6b7f9],ah
  41437a:	stos   BYTE PTR es:[edi],al
  41437b:	push   0xfffffff7
  41437d:	and    al,0x4
  41437f:	xor    DWORD PTR [ebp-0x6e],eax
  414382:	and    dh,BYTE PTR [edi]
  414384:	pop    edi
  414385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414386:	mov    bl,0x65
  414388:	mov    eax,0x7eef49ec
  41438d:	xlat   BYTE PTR ds:[ebx]
  41438e:	adc    ch,BYTE PTR [eax+0x5f0961eb]
  414394:	adc    al,0xad
  414396:	cs xchg ebx,eax
  414398:	add    BYTE PTR [edi+edi*1],dh
  41439b:	cmp    bl,dh
  41439d:	pop    ds
  41439e:	sahf   
  41439f:	aad    0x87
  4143a1:	adc    al,0xf2
  4143a3:	int3   
  4143a4:	scas   al,BYTE PTR es:[edi]
  4143a5:	dec    ecx
  4143a6:	outs   dx,DWORD PTR ds:[esi]
  4143a7:	push   ecx
  4143a8:	stc    
  4143a9:	add    BYTE PTR [ebp+0x65],0x0
  4143ad:	ss jg  0x4143ca
  4143b0:	or     DWORD PTR [edi+esi*2-0x391ae88d],0xffffffdf
  4143b8:	pushf  
  4143b9:	and    esp,ebp
  4143bb:	mov    ss,WORD PTR [edi+ebx*8-0x3947c014]
  4143c2:	pop    esp
  4143c3:	add    al,0xf9
  4143c5:	mov    ah,0x60
  4143c7:	(bad)  
  4143c8:	js     0x414428
  4143ca:	mov    DWORD PTR [ecx+0x56dca7c1],ebx
  4143d0:	dec    esi
  4143d1:	addr16 daa 
  4143d3:	add    eax,0x93eae15d
  4143d8:	ret    0x3e85
  4143db:	jae    0x41444e
  4143dd:	pop    edi
  4143de:	mov    esi,0xb615fc4e
  4143e3:	mov    ds:0x7bf8753d,eax
  4143e8:	pop    eax
  4143e9:	mov    ebp,0x74e35154
  4143ee:	cmp    eax,0x44194fbd
  4143f3:	je     0x414377
  4143f5:	inc    edi
  4143f6:	repz dec edx
  4143f8:	mov    edx,0x268f5e62
  4143fd:	xor    dh,BYTE PTR [edx]
  4143ff:	cwde   
  414400:	and    BYTE PTR [eax+0x61196def],cl
  414406:	scas   eax,DWORD PTR es:[edi]
  414407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414408:	les    esi,FWORD PTR [ebp+0x28]
  41440b:	mov    ebp,0x7d63dbe4
  414410:	xlat   BYTE PTR ds:[ebx]
  414411:	pop    ecx
  414412:	stos   DWORD PTR es:[edi],eax
  414413:	or     al,0x7a
  414415:	dec    edx
  414416:	sbb    eax,0x36bc2844
  41441b:	adc    BYTE PTR [esi-0x1f],bh
  41441e:	fdivr  DWORD PTR [ebx]
  414420:	neg    BYTE PTR [edx-0xc5426f4]
  414426:	xchg   esi,eax
  414427:	mov    ebx,0xd908c1d7
  41442c:	jp     0x41447e
  41442e:	ins    BYTE PTR es:[edi],dx
  41442f:	and    DWORD PTR [eax+0x63],0x26
  414433:	dec    edi
  414434:	or     DWORD PTR [ebx],0xe187831b
  41443a:	mov    bh,0x27
  41443c:	lahf   
  41443d:	sbb    dl,BYTE PTR ds:0xe9829c15
  414443:	dec    ebp
  414444:	push   edx
  414445:	and    cl,BYTE PTR [edx-0x3c834273]
  41444b:	dec    eax
  41444c:	inc    ebp
  41444d:	inc    eax
  41444e:	addr16 mov al,ds:0x589b
  414452:	or     DWORD PTR [ebx+0x17d7f00b],ebx
  414458:	xor    eax,0x7a753c0f
  41445e:	pop    esi
  41445f:	mul    dl
  414461:	mov    ecx,0xd1494ef4
  414466:	pop    ecx
  414467:	mov    ebx,0x445c598d
  41446c:	scas   eax,DWORD PTR es:[edi]
  41446d:	cdq    
  41446e:	es jg  0x4144dd
  414471:	aam    0xbf
  414473:	retf   
  414474:	cdq    
  414475:	je     0x41445b
  414477:	gs inc eax
  414479:	push   ds
  41447a:	mov    ch,0xaa
  41447c:	push   edi
  41447d:	and    al,0x58
  41447f:	gs ins DWORD PTR es:[edi],dx
  414481:	and    edx,DWORD PTR [ebx+0x26]
  414484:	sub    dl,dh
  414486:	stos   DWORD PTR es:[edi],eax
  414487:	cld    
  414488:	jb     0x41449f
  41448a:	cdq    
  41448b:	xor    al,0x5b
  41448d:	loope  0x414507
  41448f:	push   ecx
  414490:	mov    ?,WORD PTR [ebx+0x2e9eafe0]
  414496:	mov    bl,0x73
  414498:	pop    ecx
  414499:	mov    cl,0xfd
  41449b:	(bad)  
  41449c:	in     eax,dx
  41449d:	je     0x4144ac
  41449f:	mov    al,0x30
  4144a1:	inc    esp
  4144a2:	sar    BYTE PTR [esp+eiz*2+0x4eeae3b],1
  4144a9:	idiv   cl
  4144ab:	cmp    ebx,eax
  4144ad:	outs   dx,BYTE PTR ds:[esi]
  4144ae:	(bad)  
  4144af:	frstor [edi+eiz*8]
  4144b2:	out    dx,al
  4144b3:	jg     0x414466
  4144b5:	or     al,0xb3
  4144b7:	inc    edi
  4144b8:	adc    ebx,DWORD PTR [ecx+0x65291769]
  4144be:	enter  0xa5fb,0xde
  4144c2:	outs   dx,DWORD PTR ds:[esi]
  4144c3:	sbb    ch,BYTE PTR gs:[ecx+eiz*1+0x6a]
  4144c8:	shr    DWORD PTR ss:[edi],cl
  4144cb:	adc    eax,0xdafaac46
  4144d0:	inc    eax
  4144d1:	lds    ebp,FWORD PTR [ecx+0x36]
  4144d4:	aas    
  4144d5:	dec    edi
  4144d6:	cmp    WORD PTR [ebx-0x2977cc6f],bp
  4144dd:	pop    edi
  4144de:	scas   al,BYTE PTR es:[edi]
  4144df:	sar    BYTE PTR [ebx+0x48],1
  4144e2:	push   cs
  4144e3:	sbb    eax,0x86e3e980
  4144e8:	or     BYTE PTR [ebx],ch
  4144ea:	mov    ebx,0x4d7bab2f
  4144ef:	adc    ebp,DWORD PTR [ebx]
  4144f1:	ja     0x4144cd
  4144f3:	es mov cl,0xc0
  4144f6:	stos   DWORD PTR es:[edi],eax
  4144f7:	mov    eax,ds:0x1b124515
  4144fc:	dec    eax
  4144fd:	sbb    dh,0xff
  414500:	or     bl,BYTE PTR [edx+0x14921a2b]
  414506:	cmp    DWORD PTR [edx+0xf],esp
  414509:	xlat   BYTE PTR ds:[ebx]
  41450a:	ins    BYTE PTR es:[edi],dx
  41450b:	ss mov ebx,0xb47d69f
  414511:	out    0x88,al
  414513:	xor    ebx,DWORD PTR [edx-0x2266de03]
  414519:	sbb    DWORD PTR [eax],esp
  41451b:	push   ebp
  41451c:	xchg   ebx,eax
  41451d:	mov    ebp,cs
  41451f:	int    0xd0
  414521:	in     al,dx
  414522:	lods   al,BYTE PTR ds:[esi]
  414523:	mov    ah,0xb8
  414525:	add    eax,0xe520bb7e
  41452a:	sbb    eax,0x41754875
  41452f:	xchg   ebp,eax
  414530:	mov    al,0x24
  414532:	dec    ebp
  414533:	out    0x17,al
  414535:	and    al,0x6b
  414537:	in     al,0x53
  414539:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41453b:	pop    ds
  41453c:	gs mov bh,dl
  41453f:	cdq    
  414540:	mov    ecx,0x59c75b65
  414545:	arpl   WORD PTR [ebx-0x21],di
  414548:	sar    BYTE PTR ds:0x63252b18,cl
  41454e:	inc    edx
  41454f:	cmp    al,0x30
  414551:	cli    
  414552:	jmp    0x5d932faf
  414557:	fwait
  414558:	xor    DWORD PTR [edi+0x2c7740a3],0xffffff85
  41455f:	push   edx
  414560:	push   es
  414561:	ins    DWORD PTR es:[edi],dx
  414562:	int3   
  414563:	xor    esi,eax
  414565:	repnz push edi
  414567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414568:	fidivr DWORD PTR [eax+eax*8-0x82b08a4]
  41456f:	ss loopne 0x41459f
  414572:	xor    esp,eax
  414574:	pop    ecx
  414575:	mov    al,0x57
  414577:	add    esi,edi
  414579:	mov    ebx,0x3daf105f
  41457e:	fsubr  DWORD PTR [edi-0x4d5e34d4]
  414584:	mov    ecx,0xe7583aa4
  414589:	mov    edi,esp
  41458b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41458c:	mov    dl,0xc3
  41458e:	or     eax,0x9973f2da
  414593:	ds ins BYTE PTR es:[edi],dx
  414595:	shr    DWORD PTR ds:0x7df081b2,cl
  41459b:	pushf  
  41459c:	jae    0x41457f
  41459e:	mov    BYTE PTR [edi-0x669fbb12],bl
  4145a4:	hlt    
  4145a5:	xor    ah,ah
  4145a7:	sbb    eax,0x526462ab
  4145ac:	mov    ecx,0x36d13b46
  4145b1:	and    BYTE PTR [edx],bl
  4145b3:	mov    ds,WORD PTR [edi-0x35d98941]
  4145b9:	add    al,0x38
  4145bb:	stc    
  4145bc:	gs push esi
  4145be:	dec    edi
  4145bf:	sbb    BYTE PTR [edi-0x4a],ah
  4145c2:	push   edi
  4145c3:	cmp    al,BYTE PTR [esi-0x327cfd20]
  4145c9:	inc    esp
  4145ca:	push   edx
  4145cb:	mov    BYTE PTR [ebx+0x1d],bl
  4145ce:	fistp  WORD PTR [esi-0x49]
  4145d1:	add    eax,0x46a5af76
  4145d6:	add    BYTE PTR [edx-0x1],bh
  4145d9:	div    eax
  4145db:	scas   eax,DWORD PTR es:[edi]
  4145dc:	(bad)  
  4145dd:	mul    BYTE PTR [edi]
  4145df:	mov    al,0x19
  4145e1:	mov    edi,0x39a34a1b
  4145e6:	dec    edi
  4145e7:	jbe    0x414624
  4145e9:	jnp    0x4145c2
  4145eb:	cmp    eax,0x75bd19c0
  4145f0:	pop    edi
  4145f1:	jge    0x4145d0
  4145f3:	in     al,dx
  4145f4:	mov    al,BYTE PTR [ecx]
  4145f6:	bound  eax,QWORD PTR [edi]
  4145f8:	inc    edi
  4145f9:	push   ebp
  4145fb:	cld    
  4145fc:	pop    ebx
  4145fd:	pop    eax
  4145fe:	(bad)  
  4145ff:	in     eax,0x88
  414601:	push   eax
  414602:	retf   0x6955
  414605:	xchg   esp,eax
  414606:	mov    dl,0x39
  414608:	test   DWORD PTR cs:[ebx-0x42],esp
  41460c:	or     edx,esp
  41460e:	mov    ch,0x17
  414610:	dec    edx
  414611:	loop   0x414603
  414613:	mov    esi,0x60699db
  414618:	sbb    BYTE PTR [ecx],ah
  41461a:	or     DWORD PTR [ebp+0x57b7e253],ebp
  414620:	xor    DWORD PTR [edi+0x71],esp
  414623:	scas   eax,DWORD PTR es:[edi]
  414624:	bound  eax,QWORD PTR [eax]
  414626:	inc    edi
  414627:	mov    fs:0x72e9d811,al
  41462d:	adc    ebp,ebx
  41462f:	pusha  
  414630:	das    
  414631:	hlt    
  414632:	sub    al,0x7a
  414634:	pushf  
  414635:	xchg   ebx,eax
  414636:	jecxz  0x4145f8
  414638:	or     esp,DWORD PTR [edi+0x65]
  41463b:	in     eax,dx
  41463c:	retf   
  41463d:	mov    al,ds:0xf919a4c3
  414642:	jae    0x414685
  414644:	das    
  414645:	pop    ebx
  414646:	adc    ebp,DWORD PTR [ebp-0x6cd037b0]
  41464c:	aam    0x93
  41464e:	jmp    0xf34b:0x9d0d496a
  414655:	lea    esi,[edi+0x19]
  414658:	test   al,0x24
  41465a:	adc    eax,DWORD PTR [edx-0x7b]
  41465d:	cdq    
  41465e:	inc    BYTE PTR [edx-0x35]
  414661:	(bad)
  414665:	cmp    DWORD PTR [esp+eiz*8+0x524b5033],ebp
  41466c:	ffree  st(4)
  41466e:	je     0x41465d
  414670:	push   0x39
  414672:	cli    
  414673:	xchg   BYTE PTR [edi+0x73ac6fa6],ah
  414679:	xor    al,0x2f
  41467b:	bound  edx,QWORD PTR [ebp-0x1b]
  41467e:	cmp    al,0x23
  414680:	mul    DWORD PTR [esi-0x35]
  414683:	ins    DWORD PTR es:[edi],dx
  414684:	xor    BYTE PTR [ebx-0x69],dl
  414687:	gs test ebx,ebx
  41468a:	adc    dl,BYTE PTR [edi]
  41468c:	pop    ebx
  41468d:	fnstenv [eax]
  41468f:	push   0xffffff83
  414691:	dec    edi
  414692:	push   eax
  414693:	or     ch,dl
  414695:	lds    ecx,FWORD PTR ds:0x92ef88db
  41469b:	test   DWORD PTR [edi+0x7c0d11fc],eax
  4146a1:	stos   DWORD PTR es:[edi],eax
  4146a2:	push   ebp
  4146a3:	pusha  
  4146a4:	(bad)  
  4146a5:	adc    al,0x5f
  4146a7:	leave  
  4146a8:	mov    al,ds:0xf723cfb1
  4146ad:	cmp    eax,0x4bc3dc81
  4146b2:	addr16 push ebx
  4146b4:	retf   0xae22
  4146b7:	add    BYTE PTR [edx+0x7cf3b6ca],bl
  4146bd:	pushf  
  4146be:	sbb    al,0x9b
  4146c0:	and    al,0xa4
  4146c2:	and    DWORD PTR [ecx+0x14a50823],edx
  4146c8:	mov    esi,0xa545adce
  4146cd:	psubd  mm2,QWORD PTR [edi-0x79]
  4146d1:	out    dx,eax
  4146d2:	leave  
  4146d3:	fstp   QWORD PTR [edx]
  4146d5:	mov    ebx,0x391cece6
  4146da:	add    eax,0xd01df92c
  4146df:	jl     0x41473f
  4146e1:	mov    al,ds:0xe6adaf91
  4146e6:	mov    al,ds:0x11fb1758
  4146eb:	imul   eax,ecx,0xd67ee429
  4146f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146f2:	lahf   
  4146f3:	call   0x67cf:0x42be48b7
  4146fa:	adc    al,0x7a
  4146fc:	xor    BYTE PTR [ecx],bh
  4146fe:	push   cs
  4146ff:	or     eax,0x7df6500e
  414704:	or     BYTE PTR [ecx],al
  414706:	and    ch,BYTE PTR [ebp+0x3f]
  414709:	pusha  
  41470a:	cmp    edx,edx
  41470c:	mov    eax,ds:0xef8fbf77
  414712:	xor    edi,DWORD PTR [ebp-0x21]
  414715:	cli    
  414716:	mov    ebx,0x119d2893
  41471b:	jmp    0x2b80:0xd5e0ff1b
  414722:	popf   
  414723:	ret    0xf701
  414726:	push   ebx
  414727:	push   0x220118dc
  41472c:	aaa    
  41472d:	cmp    ebx,ecx
  41472f:	xor    ch,bh
  414731:	or     ch,0xb7
  414734:	rcr    DWORD PTR [edi],0x21
  414737:	fwait
  414738:	cmp    ebp,ebp
  41473a:	stc    
  41473b:	dec    cl
  41473d:	sub    edi,DWORD PTR [eax+0x7ae6dfba]
  414743:	das    
  414744:	inc    ebp
  414745:	enter  0xff84,0xa
  414749:	sbb    DWORD PTR [ebx+0x5],esi
  41474c:	or     DWORD PTR [eax],esp
  41474e:	mul    DWORD PTR [ecx]
  414750:	pop    ebx
  414751:	and    al,bl
  414753:	sub    DWORD PTR [ebx+0x2f],0x3052ce5f
  41475a:	(bad)  
  41475b:	push   ss
  41475c:	mov    ebp,0xba43bf04
  414761:	fidivr DWORD PTR ds:0x1d4259a5
  414767:	push   edx
  414768:	or     al,0x34
  41476a:	aaa    
  41476b:	sub    BYTE PTR [ecx-0x28],0x76
  41476f:	dec    BYTE PTR [esi]
  414771:	jns    0x414733
  414773:	scas   al,BYTE PTR es:[edi]
  414774:	fwait
  414775:	clc    
  414776:	add    al,0xa2
  414778:	cdq    
  414779:	sti    
  41477a:	dec    edx
  41477b:	popf   
  41477c:	push   ebx
  41477d:	push   edx
  41477e:	or     ah,BYTE PTR [ebx]
  414780:	add    al,0xb1
  414782:	adc    eax,0x56a05086
  414787:	neg    al
  414789:	lods   eax,DWORD PTR ds:[esi]
  41478a:	scas   eax,DWORD PTR es:[edi]
  41478b:	add    esp,ecx
  41478d:	xchg   BYTE PTR [esi-0x5f],dl
  414790:	bound  esi,QWORD PTR [ebx-0x6]
  414793:	mov    al,0xed
  414795:	out    dx,al
  414796:	scas   eax,DWORD PTR es:[edi]
  414797:	mov    ch,0x26
  414799:	and    DWORD PTR [esi+0x474d1427],ebp
  41479f:	jge    0x41480f
  4147a1:	sub    al,0x6e
  4147a3:	lock xchg edx,eax
  4147a5:	mov    bl,0xb6
  4147a7:	in     eax,0xbe
  4147a9:	popa   
  4147aa:	stos   DWORD PTR es:[edi],eax
  4147ab:	imul   ecx,DWORD PTR [eax+ebx*4-0xe],0x11b4b0bd
  4147b3:	ss pop edi
  4147b5:	fistp  QWORD PTR [ecx]
  4147b7:	repnz out 0x3b,eax
  4147ba:	test   al,0xc4
  4147bc:	sub    eax,0xa9f26c91
  4147c1:	push   ebx
  4147c2:	pop    ebx
  4147c3:	mov    esi,0x1340eec2
  4147c8:	retf   
  4147c9:	mov    ecx,0xb7b11786
  4147ce:	in     eax,dx
  4147cf:	jno    0x4147e4
  4147d1:	nop
  4147d2:	or     BYTE PTR [esi+eiz*2+0x35],al
  4147d6:	or     BYTE PTR [ebp+0x1d2d754e],al
  4147dc:	push   edi
  4147dd:	fisubr DWORD PTR [edx]
  4147df:	ret    
  4147e0:	pop    ecx
  4147e1:	jnp    0x4147f2
  4147e3:	neg    DWORD PTR [ebp+0x4b]
  4147e6:	repnz cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4147e9:	jle    0x414792
  4147eb:	imul   ebx,edx,0xb
  4147ee:	or     DWORD PTR [edi+0x2e2a50f7],eax
  4147f4:	dec    ecx
  4147f5:	sub    al,0xf7
  4147f7:	gs iret 
  4147f9:	sahf   
  4147fa:	inc    esi
  4147fb:	repnz pop ds
  4147fd:	xor    al,0x2c
  4147ff:	nop
  414800:	cmp    esi,DWORD PTR [eax-0x77]
  414803:	mov    ch,0xf
  414805:	fcomp  DWORD PTR [ecx+0xf3ca49d]
  41480b:	xchg   edi,eax
  41480c:	lds    ebx,FWORD PTR [eax]
  41480e:	add    al,0x10
  414810:	mov    esp,eax
  414812:	and    ch,BYTE PTR [eax+0x22]
  414815:	adc    edi,DWORD PTR [ecx]
  414817:	jmp    0x9c8b4347
  41481c:	sti    
  41481d:	sbb    al,BYTE PTR [esi]
  41481f:	bnd jle 0x414860
  414822:	dec    edi
  414823:	or     al,0xd2
  414825:	inc    esi
  414826:	imul   ebx,DWORD PTR [edi+0x449b79b6],0xf9e5ed6
  414830:	out    dx,eax
  414831:	retf   0x4a52
  414834:	rol    DWORD PTR [edi+0x9],1
  414837:	push   esp
  414838:	dec    edx
  414839:	push   0xffffff91
  41483b:	mov    al,ds:0xf8340978
  414840:	pop    ecx
  414841:	mov    DWORD PTR [esi],eax
  414843:	fs push ebx
  414845:	dec    ebx
  414846:	ins    DWORD PTR es:[edi],dx
  414847:	dec    ebx
  414848:	ret    0x72b2
  41484b:	retf   0x69f9
  41484e:	outs   dx,DWORD PTR ds:[esi]
  41484f:	inc    esi
  414850:	cld    
  414851:	and    DWORD PTR [ecx+ebx*8],ebp
  414854:	adc    BYTE PTR [edi],bl
  414856:	aas    
  414857:	pop    ss
  414858:	jl     0x4148c2
  41485a:	fadd   QWORD PTR [edi+eax*2]
  41485d:	fld    TBYTE PTR [ebx+0xf754d4b]
  414863:	mov    ecx,0x22daf41e
  414868:	push   cs
  414869:	jae    0x41487b
  41486b:	sbb    esi,edx
  41486d:	arpl   WORD PTR [ecx-0x4c96f4d1],bx
  414873:	sbb    edi,ebx
  414875:	iretw  
  414877:	xchg   esp,eax
  414878:	push   edx
  414879:	pop    ds
  41487a:	cmp    eax,0x8c408a7e
  41487f:	mov    dl,0xa8
  414881:	push   ecx
  414882:	(bad)  
  414883:	push   ecx
  414884:	mov    dl,0x5
  414886:	addr16 std 
  414888:	xlat   BYTE PTR ds:[ebx]
  414889:	or     ebx,ecx
  41488b:	cwde   
  41488c:	jmp    0xf082:0x8b6bbde
  414893:	mov    bl,0x6c
  414895:	ss jecxz 0x414849
  414898:	mov    edi,0x243941d8
  41489d:	sbb    DWORD PTR [ebx+esi*2-0x7c],esp
  4148a1:	adc    ah,cl
  4148a3:	and    al,ch
  4148a5:	fnstcw WORD PTR [ecx+0x41a5e9f7]
  4148ab:	and    BYTE PTR [esi+0x5c],dh
  4148ae:	sub    DWORD PTR [edi+eiz*2],ebx
  4148b1:	push   ds
  4148b2:	cwde   
  4148b3:	div    DWORD PTR [eax+0x3c2dd7a]
  4148b9:	xor    BYTE PTR [ebp+0x4],bl
  4148bc:	leave  
  4148bd:	jbe    0x4148fb
  4148bf:	outs   dx,BYTE PTR ds:[esi]
  4148c0:	push   es
  4148c1:	call   0xc5b8d262
  4148c6:	rcr    DWORD PTR [ebx],cl
  4148c8:	es aaa 
  4148ca:	mov    ch,BYTE PTR ds:0x1e8c5d31
  4148d0:	(bad)  
  4148d1:	and    eax,0x24603ee7
  4148d6:	addr16 inc eax
  4148d8:	adc    edi,DWORD PTR [esi+0x51]
  4148db:	sub    al,0xf5
  4148dd:	jb     0x4148a0
  4148df:	mov    ebp,0xba5c9d53
  4148e4:	or     DWORD PTR [edi+0x2],0xb50c7a8d
  4148eb:	and    al,0xb7
  4148ed:	xchg   ebp,eax
  4148ee:	push   eax
  4148ef:	out    0x95,al
  4148f1:	adc    BYTE PTR [ebp+0x56],al
  4148f4:	cmp    esi,ebx
  4148f6:	or     DWORD PTR [esi],esp
  4148f8:	scas   al,BYTE PTR es:[edi]
  4148f9:	dec    ebx
  4148fa:	mov    dl,0x1e
  4148fc:	shr    BYTE PTR [eax+edx*2],1
  4148ff:	cmp    DWORD PTR [esi+0x7a],esi
  414902:	jo     0x41492f
  414904:	or     eax,0xea704104
  414909:	dec    edx
  41490a:	jle    0x414895
  41490c:	dec    eax
  41490d:	shl    DWORD PTR [ebx],cl
  41490f:	jp     0x41489a
  414911:	cld    
  414912:	neg    al
  414914:	adc    al,0x3a
  414916:	adc    DWORD PTR [ebp+0x2de2c922],eax
  41491c:	nop
  41491d:	mov    ecx,0xe3f5c567
  414922:	or     eax,0x9443e6d1
  414927:	mov    eax,0x5da1a92a
  41492c:	push   esp
  41492d:	adc    DWORD PTR [eax-0x50],esi
  414930:	xlat   BYTE PTR ds:[ebx]
  414931:	fwait
  414932:	scas   eax,DWORD PTR es:[edi]
  414933:	sbb    bl,dl
  414935:	retf   
  414936:	frstor [eax]
  414938:	ins    BYTE PTR es:[edi],dx
  414939:	push   0x20b950c8
  41493e:	push   edi
  41493f:	jmp    0xc4439abb
  414944:	sar    BYTE PTR [esi+0x7b28178b],cl
  41494a:	push   eax
  41494b:	mov    edx,0xb3838d86
  414950:	push   ss
  414951:	ja     0x414987
  414953:	or     eax,0xfa1028f2
  414958:	pop    ss
  414959:	sbb    DWORD PTR [eax],edi
  41495b:	add    cl,BYTE PTR [ecx+0x7e]
  41495e:	mov    eax,0x350fe432
  414963:	in     eax,0xe5
  414965:	cmp    DWORD PTR [esi+esi*8+0x24],0x558c4352
  41496d:	ret    0xa8af
  414970:	mov    edx,0x97832515
  414975:	xlat   BYTE PTR ds:[ebx]
  414976:	xchg   ebx,eax
  414977:	dec    esp
  414978:	jns    0x414989
  41497a:	mov    edx,0x18390038
  41497f:	daa    
  414980:	jge    0x41497b
  414982:	add    al,BYTE PTR [ecx+0x4a]
  414985:	cmp    DWORD PTR [ecx-0x28],edi
  414988:	jp     0x4149c4
  41498a:	imul   ebx,DWORD PTR [eax-0x21],0x2
  41498e:	jmp    0x41492c
  414990:	repz fs jbe 0x41495d
  414994:	xor    bh,BYTE PTR [edi]
  414996:	arpl   WORD PTR [ebx+0x26],sp
  414999:	loop   0x414933
  41499b:	rol    BYTE PTR [edi-0x63],cl
  41499e:	cmp    DWORD PTR [esi],ecx
  4149a0:	sar    BYTE PTR [ecx],cl
  4149a2:	call   0x9d2324ae
  4149a7:	(bad)  [edi+0x70793771]
  4149ad:	pop    ss
  4149ae:	mul    BYTE PTR [edx-0x26]
  4149b1:	imul   cl
  4149b3:	daa    
  4149b4:	xchg   esi,eax
  4149b5:	dec    esp
  4149b6:	in     eax,0xc
  4149b8:	test   ebx,0x50335dca
  4149be:	idiv   DWORD PTR [ebx]
  4149c0:	mov    edi,0x147fe28a
  4149c5:	cmc    
  4149c6:	nop
  4149c7:	(bad)  
  4149c8:	sub    ecx,DWORD PTR [ebp+0x427801b7]
  4149ce:	xchg   esi,eax
  4149cf:	jae    0x4149e1
  4149d1:	popf   
  4149d2:	sahf   
  4149d3:	dec    eax
  4149d4:	ror    BYTE PTR [ecx-0x72bc5a9d],cl
  4149da:	add    DWORD PTR [ecx],ecx
  4149dc:	push   es
  4149dd:	hlt    
  4149de:	(bad)  
  4149e0:	pop    edx
  4149e1:	mov    eax,ds:0x7170d2ba
  4149e6:	xor    BYTE PTR [esi-0x20],al
  4149e9:	inc    ebp
  4149ea:	arpl   WORD PTR [edi+0x7f800302],bx
  4149f0:	jecxz  0x4149d7
  4149f2:	adc    eax,DWORD PTR [edi+esi*2-0x4b]
  4149f6:	rcr    BYTE PTR [eax-0x74d38fe1],1
  4149fc:	mov    bh,0x37
  4149fe:	shr    DWORD PTR [ecx+0x4ccdefd2],1
  414a04:	mov    ebx,0xd27d7417
  414a09:	sbb    bl,ah
  414a0b:	xchg   BYTE PTR [ecx-0x43334441],bl
  414a11:	mov    bh,BYTE PTR [ecx+0x1d]
  414a14:	mov    eax,0x90f0fcd
  414a19:	mov    ss,WORD PTR [ebx-0x2e]
  414a1c:	loop   0x4149a2
  414a1e:	add    cl,BYTE PTR [edx]
  414a20:	pop    ecx
  414a21:	pushf  
  414a22:	push   0x42
  414a24:	dec    ebp
  414a25:	xlat   BYTE PTR ds:[ebx]
  414a26:	std    
  414a27:	jno    0x4149df
  414a29:	lahf   
  414a2a:	sub    BYTE PTR [edi],bh
  414a2c:	aad    0xb7
  414a2e:	retf   0x253a
  414a31:	sub    ecx,ecx
  414a33:	out    0xe8,al
  414a35:	xor    cl,BYTE PTR [esi+0x57828027]
  414a3b:	mov    gs,WORD PTR [ebx]
  414a3d:	pop    edx
  414a3e:	xchg   cl,ah
  414a40:	lock xchg esp,eax
  414a42:	mov    ds:0xe61a91d8,al
  414a47:	add    eax,0x4371fcf2
  414a4c:	mov    dl,0xbe
  414a4e:	mov    ds:0x463bed1,eax
  414a53:	adc    al,0x25
  414a55:	xor    edx,eax
  414a57:	inc    esp
  414a58:	or     ch,BYTE PTR [esp+ecx*2+0x59]
  414a5c:	dec    esp
  414a5d:	fistp  QWORD PTR [ebp+0x67]
  414a60:	mov    al,0xad
  414a62:	mov    cl,0x3c
  414a64:	shr    BYTE PTR [esi-0x61],1
  414a67:	(bad)  
  414a68:	sbb    esi,DWORD PTR cs:[edi]
  414a6b:	push   esp
  414a6c:	imul   ebx,DWORD PTR [eax-0x5d],0xffffff9f
  414a70:	dec    edx
  414a71:	mov    esp,0x45136e1c
  414a76:	and    dl,bl
  414a78:	xor    ebp,DWORD PTR [eax]
  414a7a:	dec    edi
  414a7b:	in     eax,dx
  414a7c:	xlat   BYTE PTR ds:[ebx]
  414a7d:	xchg   ebp,eax
  414a7e:	adc    eax,0xa71e7617
  414a83:	cmp    bl,ah
  414a85:	push   es
  414a86:	out    0xc3,eax
  414a88:	mov    ch,0x15
  414a8a:	adc    al,0xbb
  414a8c:	and    ecx,DWORD PTR [edx+0x54d2917a]
  414a92:	mov    cl,0x2d
  414a94:	dec    eax
  414a95:	or     dh,BYTE PTR [ecx+0x22]
  414a98:	lods   eax,DWORD PTR ds:[esi]
  414a99:	sbb    al,0xc2
  414a9b:	cmp    DWORD PTR [edx-0x4d244c85],edi
  414aa1:	into   
  414aa2:	inc    ebp
  414aa3:	mov    ah,0xa0
  414aa5:	inc    edi
  414aa6:	out    0xf9,eax
  414aa8:	lea    ebp,[eax]
  414aaa:	adc    al,0xda
  414aac:	push   es
  414aad:	call   0xa17cadd8
  414ab2:	add    DWORD PTR [edi-0x60],edx
  414ab5:	rol    dl,cl
  414ab7:	jne    0x414b38
  414ab9:	jnp    0x414a8a
  414abb:	out    dx,al
  414abc:	or     eax,edi
  414abe:	jb     0x414a77
  414ac0:	out    0x29,al
  414ac2:	stos   BYTE PTR es:[edi],al
  414ac3:	xor    esp,DWORD PTR [ebp+ebx*1-0x1a]
  414ac7:	sub    bh,dl
  414ac9:	mul    BYTE PTR [edi-0x6b]
  414acc:	test   eax,0x34e05d38
  414ad1:	test   ebx,esi
  414ad3:	jle    0x414a5b
  414ad5:	fisub  DWORD PTR [ebp-0x42]
  414ad8:	out    0x5f,eax
  414ada:	dec    esi
  414adb:	add    BYTE PTR [esi+eax*1],bl
  414ade:	scas   eax,DWORD PTR es:[edi]
  414adf:	mov    edi,eax
  414ae1:	mov    ecx,0xe20ef581
  414ae6:	je     0x414abb
  414ae8:	dec    esp
  414ae9:	stos   BYTE PTR es:[edi],al
  414aea:	ds add eax,0x160b264f
  414af0:	int    0xed
  414af2:	mov    edx,0xe92a5110
  414af7:	out    dx,al
  414af8:	in     al,0x4d
  414afa:	sbb    ebp,DWORD PTR [esi-0x33]
  414afd:	inc    esp
  414afe:	cli    
  414aff:	push   esp
  414b00:	add    DWORD PTR [ebp+0x4201cfc7],esp
  414b06:	std    
  414b07:	or     ch,BYTE PTR [edx-0x2e4ef0d5]
  414b0d:	gs push ss
  414b0f:	add    DWORD PTR [edx-0x34],edi
  414b12:	ins    BYTE PTR es:[edi],dx
  414b13:	lea    ecx,es:[edi]
  414b16:	jmp    0x414b65
  414b18:	stos   BYTE PTR es:[edi],al
  414b19:	pop    edx
  414b1a:	adc    eax,0x51405ec2
  414b1f:	fs sar ch,1
  414b22:	jb     0x414b1a
  414b24:	add    eax,0x9e5cd1f5
  414b29:	inc    ecx
  414b2b:	into   
  414b2c:	mov    es,WORD PTR [ebp+0x55]
  414b2f:	sbb    bl,BYTE PTR [ebp+0x15]
  414b32:	clc    
  414b33:	mov    ebx,0xa6443d1e
  414b38:	and    ebp,DWORD PTR [ecx+0x404ff33e]
  414b3e:	pop    eax
  414b3f:	cmp    edi,eax
  414b41:	push   cs
  414b42:	jbe    0x414acb
  414b44:	call   0xb7b8:0x681d234a
  414b4b:	sbb    eax,0x1264cc04
  414b50:	fisub  DWORD PTR ss:[edx-0x6c839f9a]
  414b57:	xor    dh,BYTE PTR [ecx+0x24]
  414b5a:	inc    edx
  414b5b:	jecxz  0x414b76
  414b5d:	cmp    al,BYTE PTR [edx+0x33]
  414b60:	idiv   BYTE PTR [edx]
  414b62:	xchg   edi,eax
  414b63:	mov    bl,0x3f
  414b65:	nop
  414b66:	popf   
  414b67:	repz sub eax,0xfe219e42
  414b6d:	add    ah,BYTE PTR [edi-0x31a55dd2]
  414b73:	loopne 0x414b30
  414b75:	sub    al,0x8b
  414b77:	adc    DWORD PTR [esi+edi*4+0xc57fa7b],eax
  414b7e:	push   ebx
  414b7f:	lea    ebx,[ecx+0x68]
  414b82:	js     0x414b97
  414b84:	sub    DWORD PTR [eax+0x52e349e2],esp
  414b8a:	int    0xe3
  414b8c:	(bad)  
  414b8d:	pop    ds
  414b8e:	sub    ch,dh
  414b90:	mov    al,ds:0x58da82e
  414b95:	imul   esi,DWORD PTR [ecx+0x515ce45b],0x79
  414b9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b9d:	xchg   esi,eax
  414b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b9f:	bound  esi,QWORD PTR [eax]
  414ba1:	fcom   DWORD PTR [ebx]
  414ba3:	cmc    
  414ba4:	arpl   bx,ax
  414ba6:	sub    dh,cl
  414ba8:	jge    0x414b37
  414baa:	xor    edx,esp
  414bac:	jb     0x414bed
  414bae:	push   edi
  414baf:	push   ecx
  414bb0:	sbb    BYTE PTR [ecx+eax*4-0x609d7bfd],bh
  414bb7:	push   esp
  414bb8:	(bad)  
  414bba:	mov    dl,0x90
  414bbc:	push   ecx
  414bbd:	cmp    cl,cl
  414bbf:	(bad)  
  414bc0:	jae    0x414bbf
  414bc2:	test   DWORD PTR [edx],ebx
  414bc4:	push   edx
  414bc5:	dec    eax
  414bc6:	sbb    al,bh
  414bc8:	mov    esp,0xb9efe00c
  414bcd:	sub    BYTE PTR [eax+0x20],ah
  414bd0:	jp     0x414b7b
  414bd2:	inc    eax
  414bd3:	mov    DWORD PTR [eax],0xe63c13
  414bd9:	fcomp  QWORD PTR [edi-0x78]
  414bdc:	and    eax,eax
  414bde:	outs   dx,BYTE PTR ds:[esi]
  414bdf:	push   ds
  414be0:	jo     0x414c4c
  414be2:	push   0xffffffcc
  414be4:	in     al,0xc3
  414be6:	mov    DWORD PTR [ebp+0x31],esp
  414be9:	iret   
  414bea:	mov    esp,0x9f56cff3
  414bef:	mov    edx,DWORD PTR [ebp+0x10]
  414bf2:	in     al,0xc4
  414bf4:	outs   dx,DWORD PTR ds:[esi]
  414bf5:	add    ch,BYTE PTR [ebx]
  414bf7:	xchg   DWORD PTR [edx],eax
  414bf9:	fldenv [ebx-0x17b04ad]
  414bff:	test   BYTE PTR [edi+0x76835b8f],bl
  414c05:	sar    BYTE PTR [ecx],0x56
  414c08:	dec    ecx
  414c09:	daa    
  414c0a:	loopne 0x414bb5
  414c0c:	fwait
  414c0d:	add    al,0x5c
  414c0f:	sbb    BYTE PTR [edx+0x48dae43b],0xd3
  414c16:	out    0xbc,eax
  414c18:	mov    edi,0xb95f3f7a
  414c1d:	ret    
  414c1e:	pop    ds
  414c1f:	jb     0x414c4c
  414c21:	(bad)  
  414c22:	mov    ecx,0x8fcfc902
  414c27:	adc    BYTE PTR [eax+0x2a412fbe],ch
  414c2d:	enter  0x5a4,0xcc
  414c31:	pop    esi
  414c32:	fyl2xp1 
  414c34:	or     ch,BYTE PTR [eax]
  414c36:	scas   eax,DWORD PTR es:[edi]
  414c37:	sub    edi,DWORD PTR [esi+0x58]
  414c3a:	xor    DWORD PTR ds:0x8fe52d8b,esi
  414c40:	cld    
  414c41:	fs std 
  414c43:	pop    esp
  414c44:	aad    0x7
  414c46:	sub    dh,BYTE PTR ss:[eax+0x74]
  414c4a:	ja     0x414ca2
  414c4c:	and    DWORD PTR [edi],edi
  414c4e:	ss mov ebp,0x1075266e
  414c54:	fist   DWORD PTR [ecx+0x526ad25b]
  414c5a:	mov    bl,0x80
  414c5c:	jg     0x414c16
  414c5e:	jae    0x414c16
  414c60:	jno    0x414c1f
  414c62:	pop    esp
  414c63:	xchg   edi,eax
  414c64:	loopne 0x414ccd
  414c66:	mov    DWORD PTR [ebx-0x68bbdaea],edi
  414c6c:	push   0xffffffc2
  414c6e:	cdq    
  414c6f:	call   0xc0a2:0xc59d94db
  414c76:	xchg   edi,eax
  414c77:	mov    ebx,DWORD PTR [ecx-0x38626c22]
  414c7d:	jecxz  0x414c9d
  414c7f:	test   edi,edx
  414c81:	xor    eax,0x6870741f
  414c86:	shl    DWORD PTR [ebx+edi*2],cl
  414c89:	daa    
  414c8a:	mov    ch,0x60
  414c8c:	lock xchg edx,eax
  414c8e:	or     dh,BYTE PTR [ebp+0x29d32f14]
  414c94:	inc    edx
  414c95:	cmp    esp,ebp
  414c97:	pushf  
  414c98:	repz repnz add dh,bl
  414c9c:	lock loopne 0x414cfd
  414c9f:	clc    
  414ca0:	data16 xor al,0xf
  414ca3:	xor    DWORD PTR [edi+edi*1-0x515efc13],esi
  414caa:	and    bh,BYTE PTR [esi-0x26]
  414cad:	mov    WORD PTR [edi],cs
  414caf:	movzx  esi,WORD PTR [ebx+0x16e62422]
  414cb6:	push   eax
  414cb7:	(bad)  
  414cb8:	pop    ebx
  414cb9:	and    al,0x5d
  414cbb:	mov    bl,0x92
  414cbd:	ins    BYTE PTR es:[edi],dx
  414cbe:	js     0x414c8a
  414cc0:	scas   eax,DWORD PTR es:[edi]
  414cc1:	push   cs
  414cc2:	inc    edi
  414cc3:	cwde   
  414cc4:	les    esp,FWORD PTR [eax-0x1c430d3a]
  414cca:	add    ah,dh
  414ccc:	ja     0x414d10
  414cce:	sub    eax,0x554600be
  414cd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cd4:	pop    DWORD PTR [eax-0x1161ce49]
  414cda:	shl    BYTE PTR [esi-0xe218dfa],cl
  414ce0:	leave  
  414ce1:	nop
  414ce2:	cmp    edi,DWORD PTR [ecx-0x55]
  414ce5:	adc    BYTE PTR [eax+0x3],ah
  414ce8:	test   BYTE PTR [esp+edi*2+0x7b],0x5c
  414ced:	js     0x414cf7
  414cef:	add    eax,0x65c51674
  414cf4:	dec    edx
  414cf5:	and    eax,DWORD PTR [ecx-0x1b]
  414cf8:	(bad)  
  414cf9:	in     eax,0xea
  414cfb:	nop
  414cfc:	mov    al,ds:0x9f33b017
  414d01:	mov    cl,0x33
  414d03:	jb     0x414d1e
  414d05:	lds    edi,FWORD PTR [eiz*1+0x701487ee]
  414d0c:	es stos BYTE PTR es:[edi],al
  414d0e:	push   eax
  414d0f:	imul   edx,DWORD PTR [edi-0x77],0xffffffb1
  414d13:	or     ebp,edx
  414d15:	pop    es
  414d16:	mov    al,ds:0xc01787d0
  414d1b:	clc    
  414d1c:	mov    ch,0xed
  414d1e:	sbb    DWORD PTR [ebp+ebp*2+0x1260f9b0],ebp
  414d25:	and    BYTE PTR [esi-0x4f],ah
  414d28:	popf   
  414d29:	or     DWORD PTR es:[edi+0x7f],0xb4b213b8
  414d31:	call   0xba4d:0x2bec66f8
  414d38:	jg     0x414d17
  414d3a:	mov    eax,0x8b320263
  414d3f:	jo     0x414d31
  414d41:	outs   dx,DWORD PTR ds:[esi]
  414d42:	mov    ebx,DWORD PTR [ecx+0x65e780a4]
  414d48:	push   eax
  414d49:	xor    BYTE PTR [edi],al
  414d4b:	jp     0x414dcc
  414d4d:	jecxz  0x414d09
  414d4f:	jae    0x414d1a
  414d51:	push   edi
  414d52:	jmp    0x414d81
  414d54:	js     0x414d63
  414d56:	push   edx
  414d57:	div    BYTE PTR [esi]
  414d59:	inc    edx
  414d5a:	inc    esp
  414d5b:	add    ebp,ebx
  414d5d:	test   DWORD PTR [ecx-0x70],ebx
  414d60:	mov    ?,eax
  414d62:	push   edi
  414d63:	out    0xed,al
  414d65:	in     al,0xb8
  414d67:	stos   BYTE PTR es:[edi],al
  414d68:	jmp    0xaebd003f
  414d6d:	jmp    0x414dae
  414d6f:	jecxz  0x414deb
  414d71:	call   0x49f32003
  414d76:	ja     0x414d98
  414d78:	sub    ah,BYTE PTR [eax]
  414d7a:	nop
  414d7b:	imul   ebx,DWORD PTR [ebp-0x4c],0xe
  414d7f:	xor    al,0x86
  414d81:	adc    DWORD PTR [ebx+eiz*4-0x53c6b048],ebp
  414d88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d89:	jmp    0x6b2345f4
  414d8e:	loopne 0x414d6c
  414d90:	lea    esp,[ebx-0x62d284ec]
  414d96:	sahf   
  414d97:	sbb    al,0x9a
  414d99:	mov    ebx,0x45615d01
  414d9e:	push   ds
  414d9f:	(bad)  
  414da0:	or     dh,BYTE PTR [edx-0x7e1d4646]
  414da6:	mov    bh,0x46
  414da8:	ss int3 
  414daa:	cmp    bh,BYTE PTR [ebp+0x4e2d72de]
  414db0:	sbb    al,0xb7
  414db2:	mov    esi,0xd35fe6ba
  414db7:	out    dx,eax
  414db8:	retf   
  414db9:	call   0x5afe:0x961b0f87
  414dc0:	(bad)  
  414dc1:	mov    ds:0xc125ddf0,eax
  414dc6:	fbld   TBYTE PTR [edi+0x43]
  414dc9:	mov    cl,BYTE PTR [edi+0x7b]
  414dcc:	pop    eax
  414dcd:	pop    ecx
  414dce:	fisttp QWORD PTR [esi+0x2b]
  414dd1:	sbb    DWORD PTR [esi+0x5640e2b3],esi
  414dd7:	(bad)  
  414dd8:	jge    0x414d7c
  414dda:	lods   al,BYTE PTR ds:[esi]
  414ddb:	(bad)  
  414ddc:	jle    0x414dee
  414dde:	imul   ecx,DWORD PTR ds:0xc6fb4267,0xffffffcd
  414de5:	stos   DWORD PTR es:[edi],eax
  414de6:	popf   
  414de7:	mov    edx,ss
  414de9:	in     eax,dx
  414dea:	push   cs
  414deb:	jbe    0x414dba
  414ded:	xchg   DWORD PTR [edi],esp
  414def:	jno    0x414e16
  414df1:	mov    ebx,0xb52986bd
  414df6:	data16 add cl,dh
  414df9:	mov    BYTE PTR [ebx-0x17],0xc4
  414dfd:	nop
  414dfe:	in     eax,0x24
  414e00:	jmp    0x52680a9b
  414e05:	rcl    DWORD PTR [ecx],1
  414e07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e08:	stc    
  414e09:	out    dx,al
  414e0a:	and    DWORD PTR [edi+0x175a9b49],esi
  414e10:	aas    
  414e11:	rol    BYTE PTR [ebx-0xe52d561],cl
  414e17:	or     ebp,edx
  414e19:	mov    cl,0x69
  414e1b:	mov    eax,ecx
  414e1d:	and    bl,dl
  414e1f:	jb     0x414db1
  414e21:	dec    eax
  414e22:	test   al,0x39
  414e25:	outs   dx,BYTE PTR ds:[esi]
  414e26:	dec    eax
  414e27:	hlt    
  414e28:	out    dx,eax
  414e29:	stc    
  414e2a:	add    DWORD PTR [esi+0x33],esi
  414e2d:	pop    ebp
  414e2e:	fst    DWORD PTR [ecx+eiz*1+0x8]
  414e32:	stos   BYTE PTR es:[edi],al
  414e33:	mov    DWORD PTR [edx+0x5534c52f],esp
  414e39:	addr16 mov ds:0x69db,eax
  414e3d:	(bad)  
  414e3e:	jmp    0xb4ee:0xfe944d1
  414e45:	leave  
  414e46:	dec    ebx
  414e47:	inc    ebp
  414e48:	mov    ah,0xd
  414e4a:	mov    esp,edx
  414e4c:	jmp    0x9c0f2e9c
  414e51:	lods   al,BYTE PTR ds:[esi]
  414e52:	std    
  414e53:	xchg   esp,eax
  414e54:	sar    eax,cl
  414e56:	sbb    DWORD PTR [ebx],ebx
  414e58:	(bad)  
  414e59:	jns    0x414ec8
  414e5b:	and    edi,DWORD PTR [edx]
  414e5d:	out    dx,eax
  414e5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e5f:	sub    DWORD PTR es:[esi],eax
  414e62:	imul   esp,DWORD PTR [edx*2+0x268a4c17],0xffffffdc
  414e6a:	push   esp
  414e6b:	pushf  
  414e6c:	test   al,0x80
  414e6e:	push   cs
  414e6f:	mov    bl,0x99
  414e71:	mov    ah,0x47
  414e73:	(bad)  
  414e74:	jne    0x414e87
  414e76:	(bad)  
  414e78:	xor    al,0x23
  414e7a:	mov    esp,0x3a65f211
  414e7f:	add    BYTE PTR [esi-0x1691c908],dl
  414e85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e87:	fdiv   QWORD PTR [edx+0x69c9739]
  414e8d:	outs   dx,DWORD PTR ds:[esi]
  414e8e:	dec    edx
  414e8f:	pusha  
  414e90:	dec    esp
  414e91:	enter  0xca33,0x86
  414e95:	mov    BYTE PTR [ecx-0x3086ddbc],cl
  414e9b:	xor    edi,DWORD PTR [edx]
  414e9d:	cmp    al,BYTE PTR [esp+ebx*8]
  414ea0:	xor    DWORD PTR [ebp+edi*2-0x46],esp
  414ea4:	dec    edi
  414ea5:	sbb    DWORD PTR [edx+eax*2-0x29c8f839],eax
  414eac:	aas    
  414ead:	popa   
  414eae:	and    al,0xe7
  414eb0:	out    dx,eax
  414eb1:	ficom  DWORD PTR [ebx]
  414eb3:	add    al,BYTE PTR [esp+ecx*8+0x60]
  414eb7:	fucomi st,st(0)
  414eb9:	(bad)  
  414eba:	cld    
  414ebb:	sbb    BYTE PTR [ebx+0x113285e1],0x44
  414ec2:	int    0x55
  414ec4:	mov    al,ds:0x15028744
  414ec9:	and    ecx,esi
  414ecb:	stc    
  414ecc:	sub    al,0x80
  414ece:	fld    DWORD PTR [esp+esi*2+0x3063feb1]
  414ed5:	stos   DWORD PTR es:[edi],eax
  414ed6:	mov    edi,0x35702
  414edb:	add    eax,0x7db05e35
  414ee0:	cmp    ch,BYTE PTR gs:[edi-0x2ef01de]
  414ee7:	jl     0x414f14
  414ee9:	pop    ebx
  414eea:	retf   
  414eeb:	mov    esi,0xac82dea6
  414ef0:	cmp    BYTE PTR [ebx-0x4e4e4f74],bl
  414ef6:	ror    DWORD PTR [eax+ecx*2-0x7e],cl
  414efa:	mov    ah,0xf1
  414efc:	imul   ebx,DWORD PTR [ebx],0x41
  414eff:	iret   
  414f00:	push   0xb
  414f02:	inc    esi
  414f03:	mov    ebx,0x912f75c2
  414f08:	pushf  
  414f09:	push   esi
  414f0a:	jecxz  0x414f5f
  414f0c:	push   ebp
  414f0d:	jmp    0x84c5:0xce653e13
  414f14:	fst    QWORD PTR [esi]
  414f16:	(bad)  
  414f17:	lods   al,BYTE PTR ds:[esi]
  414f18:	xchg   DWORD PTR [ebx+0x3a],ebp
  414f1b:	test   esi,0xdc966d21
  414f21:	sbb    ah,BYTE PTR [edi-0x74b182d7]
  414f27:	div    eax
  414f29:	lods   eax,DWORD PTR ds:[esi]
  414f2a:	nop
  414f2b:	pop    es
  414f2c:	repnz mov bh,0x32
  414f2f:	sub    eax,DWORD PTR fs:[ecx+ebp*1-0x9541491]
  414f37:	dec    cx
  414f39:	repz aad 0xfc
  414f3c:	(bad)  
  414f3d:	std    
  414f3e:	retf   0xdc43
  414f41:	mov    ch,0x2f
  414f43:	xchg   bl,ch
  414f45:	test   cl,bl
  414f47:	test   eax,0xcd89a1b9
  414f4c:	jae    0x414f44
  414f4e:	and    BYTE PTR ds:0xc32eb1f0,ch
  414f54:	or     eax,0x82486c0e
  414f59:	pop    edi
  414f5a:	mov    ds:0x64a3d4a4,eax
  414f5f:	cli    
  414f60:	or     eax,0x8bf539fb
  414f65:	ins    BYTE PTR es:[edi],dx
  414f66:	xchg   esp,eax
  414f67:	xor    cl,ah
  414f69:	in     eax,dx
  414f6a:	iret   
  414f6b:	stos   DWORD PTR es:[edi],eax
  414f6c:	mov    esp,0x21f26ec4
  414f71:	cmc    
  414f72:	dec    edi
  414f73:	daa    
  414f74:	popa   
  414f75:	cmp    ah,BYTE PTR ds:0xee7873a4
  414f7b:	dec    edi
  414f7c:	in     al,dx
  414f7d:	push   ebp
  414f7e:	(bad)  
  414f7f:	xchg   ebx,eax
  414f80:	xchg   edx,eax
  414f81:	mov    edx,0xe98413d9
  414f86:	pushaw 
  414f88:	jns    0x414f37
  414f8a:	cmp    eax,0xf3177b84
  414f8f:	ficomp DWORD PTR [edi-0x7962de40]
  414f95:	jmp    0x405cf9d2
  414f9a:	mov    ebx,DWORD PTR [eax-0x36]
  414f9d:	add    bl,cl
  414f9f:	es dec ebx
  414fa1:	enter  0x22e1,0x12
  414fa5:	mov    fs,WORD PTR [edi]
  414fa7:	ficomp WORD PTR [ecx+0x50a130e2]
  414fad:	mov    cl,0x67
  414faf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fb0:	xor    bl,BYTE PTR [esi-0x13680f29]
  414fb6:	rol    dl,cl
  414fb8:	shr    DWORD PTR [esi],cl
  414fba:	jecxz  0x414fb6
  414fbc:	ret    0xc25
  414fbf:	bound  ebx,QWORD PTR [edi]
  414fc1:	add    BYTE PTR [esi+0x756276da],al
  414fc7:	mov    al,0x55
  414fc9:	sahf   
  414fca:	rol    DWORD PTR [ecx+0x28],1
  414fcd:	outs   dx,DWORD PTR ds:[esi]
  414fce:	ffreep st(1)
  414fd0:	pop    ds
  414fd1:	cld    
  414fd2:	call   0xb552c781
  414fd7:	pshufw mm0,QWORD PTR ds:[ecx-0x2752104],0x71
  414fe0:	mov    ah,BYTE PTR [edi]
  414fe2:	mov    ?,eax
  414fe4:	(bad)  
  414fe5:	fcom   QWORD PTR [edx]
  414fe7:	push   eax
  414fe8:	pop    eax
  414fe9:	rol    BYTE PTR [eax],0xb6
  414fec:	jle    0x41503b
  414fee:	jns    0x415025
  414ff0:	or     cl,BYTE PTR [ebp+esi*1-0x78df8824]
  414ff7:	dec    ebp
  414ff8:	shr    DWORD PTR [edi+0x252de845],cl
  414ffe:	add    dh,BYTE PTR [edi]
  415000:	int    0x43
  415002:	icebp  
  415003:	sub    DWORD PTR [ebp+0x72],eax
  415006:	inc    eax
  415007:	mov    ebx,0x5a294e8a
  41500c:	(bad)  
  41500e:	mov    bl,0xf
  415010:	das    
  415011:	retf   
  415012:	dec    esi
  415013:	adc    bh,al
  415015:	(bad)
  415019:	sub    al,0xec
  41501b:	(bad)  
  41501c:	mov    ch,0xc2
  41501e:	lock iret 
  415020:	ret    0xef57
  415023:	pop    ebx
  415024:	cmp    ebx,esp
  415026:	mov    dl,0xe5
  415028:	xchg   ebx,esp
  41502a:	ret    0xdf74
  41502d:	cmp    eax,0xffa2beb7
  415032:	ins    BYTE PTR es:[edi],dx
  415033:	fcomi  st,st(1)
  415035:	sahf   
  415036:	adc    al,BYTE PTR [edx-0x77126930]
  41503c:	cwde   
  41503d:	push   ebx
  41503e:	stos   DWORD PTR es:[edi],eax
  41503f:	int3   
  415040:	jo     0x415096
  415042:	stos   BYTE PTR es:[edi],al
  415043:	xchg   ecx,eax
  415044:	test   BYTE PTR [eax+0x3d688996],0xc
  41504b:	xchg   ebp,eax
  41504c:	not    DWORD PTR [eax+0x14]
  41504f:	or     eax,0x7f5b42e4
  415054:	shl    edi,cl
  415056:	xchg   DWORD PTR [edi],edx
  415058:	jmp    0xd99:0x97bcf890
  41505f:	pop    es
  415060:	pop    ebp
  415061:	lods   al,BYTE PTR ds:[esi]
  415062:	aam    0x81
  415064:	sahf   
  415065:	mov    ch,0xca
  415067:	and    al,0xe8
  415069:	jbe    0x4150ea
  41506b:	ins    BYTE PTR es:[edi],dx
  41506c:	out    0x7e,al
  41506e:	bound  edi,QWORD PTR ds:0x175d42a4
  415074:	pop    ecx
  415075:	xor    esi,edi
  415077:	imul   edx,DWORD PTR [eax],0x70
  41507a:	in     al,dx
  41507b:	cmc    
  41507c:	lods   eax,DWORD PTR ds:[esi]
  41507d:	sahf   
  41507e:	jecxz  0x4150fd
  415080:	gs inc esp
  415082:	inc    eax
  415083:	mov    dh,0xd4
  415085:	gs sub esi,esi
  415088:	adc    DWORD PTR [edi],0x8
  41508b:	in     al,0x91
  41508d:	inc    eax
  41508e:	adc    dh,bh
  415090:	test   al,0xd6
  415092:	sub    BYTE PTR [edi+0x30813078],cl
  415098:	cli    
  415099:	rcl    BYTE PTR [edx+0x5d],cl
  41509c:	clc    
  41509d:	pop    edi
  41509e:	pop    ss
  41509f:	aam    0xe8
  4150a1:	sub    BYTE PTR [ebp*8+0x2a058ca],cl
  4150a8:	imul   edi,DWORD PTR [esi+0x3a380c7f],0x57c26040
  4150b2:	dec    edx
  4150b3:	cmp    edx,ebx
  4150b5:	in     al,dx
  4150b6:	mov    bl,0x94
  4150b8:	jns    0x415118
  4150ba:	jbe    0x415122
  4150bc:	out    dx,al
  4150bd:	xor    ch,0x4c
  4150c0:	lea    ebp,[edx]
  4150c2:	je     0x4150fa
  4150c4:	out    0xdd,eax
  4150c6:	push   cs
  4150c7:	jg     0xa605737e
  4150cd:	ret    
  4150ce:	das    
  4150cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150d0:	aaa    
  4150d1:	mov    dl,0x2f
  4150d3:	in     eax,dx
  4150d4:	jmp    0x7d44e693
  4150d9:	test   edx,ebx
  4150db:	in     eax,0xf0
  4150dd:	js     0x4150a0
  4150df:	lahf   
  4150e0:	push   esi
  4150e1:	or     ah,ch
  4150e3:	test   al,0xcc
  4150e5:	sub    eax,0x6d3c5aed
  4150ea:	mov    al,0xd8
  4150ec:	or     eax,0x61d538b1
  4150f1:	inc    esi
  4150f2:	or     eax,0xa5be0bbe
  4150f7:	inc    esp
  4150f8:	jl     0x415163
  4150fa:	in     al,0xbe
  4150fc:	xor    ebx,ebp
  4150fe:	sahf   
  4150ff:	cmc    
  415100:	pop    edi
  415101:	sbb    eax,0x2ed3bcba
  415106:	jecxz  0x41517e
  415108:	mov    edi,0xb3ea9216
  41510d:	xor    DWORD PTR [ebp-0x1234f2ea],ebx
  415113:	sub    ah,BYTE PTR [eax+0x41c3df83]
  415119:	xchg   esp,eax
  41511a:	fisttp WORD PTR [eax-0x6daf39b3]
  415120:	sub    al,0x87
  415122:	rcl    ebx,0xd8
  415125:	xor    al,0x8a
  415127:	adc    BYTE PTR [edi],ah
  415129:	xchg   BYTE PTR [eax],bl
  41512b:	mov    bh,0xa1
  41512d:	jne    0x415126
  41512f:	sahf   
  415130:	adc    dh,0xf2
  415133:	sub    BYTE PTR [edx-0x330cf89e],bl
  415139:	add    esp,edx
  41513b:	or     al,0xb0
  41513d:	mov    DWORD PTR [edx+0x5120ce1e],esi
  415143:	push   0x16
  415145:	fwait
  415146:	cmp    edx,DWORD PTR [esi+0x1e6bdec]
  41514c:	mov    eax,ds:0xaa57ae1b
  415151:	dec    ecx
  415152:	push   cs
  415153:	mov    eax,0xe958209f
  415158:	aam    0xf9
  41515a:	bound  eax,QWORD PTR [ebp-0x62]
  41515d:	int3   
  41515e:	cwde   
  41515f:	jmp    0xa584:0xeed8e20d
  415166:	add    dl,0x40
  415169:	mov    cl,0x2c
  41516b:	retf   
  41516c:	rcr    ecx,1
  41516e:	rdpmc  
  415170:	mov    ah,0x8f
  415172:	sbb    al,0x94
  415174:	cmp    DWORD PTR [edx],esi
  415176:	xchg   esp,eax
  415177:	mov    ah,0xd7
  415179:	repnz sahf 
  41517b:	mov    dl,0xbe
  41517d:	jg     0x4151b3
  41517f:	out    0xd3,al
  415181:	(bad)  
  415182:	mov    eax,0x98cff40c
  415187:	add    ebx,esi
  415189:	jno    0x41510e
  41518b:	xor    BYTE PTR [edi+0x4d],dl
  41518e:	in     eax,dx
  41518f:	lods   eax,DWORD PTR ds:[esi]
  415190:	out    dx,al
  415191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415192:	fsub   QWORD PTR [esi+edx*8+0x5738089e]
  415199:	je     0x415176
  41519b:	push   es
  41519c:	push   edi
  41519d:	sbb    eax,0x2982b776
  4151a2:	or     BYTE PTR [ebp+0x384204fe],cl
  4151a8:	jmp    0xf83f97bc
  4151ad:	adc    al,0xc3
  4151af:	add    al,0xfe
  4151b1:	enter  0xcdc9,0x53
  4151b5:	and    al,0xbc
  4151b7:	inc    ecx
  4151b8:	(bad)  
  4151b9:	(bad)  
  4151ba:	fdiv   DWORD PTR [eax]
  4151bc:	sbb    DWORD PTR [ebx],ebx
  4151be:	xor    DWORD PTR [edx],0xffffffbd
  4151c1:	jo     0x4151db
  4151c3:	leave  
  4151c4:	sbb    al,0x18
  4151c6:	sub    eax,0x1051457a
  4151cb:	cmp    ebx,DWORD PTR [edi+ebp*1+0x77bb54b5]
  4151d2:	imul   DWORD PTR [edi+0x76]
  4151d5:	out    dx,al
  4151d6:	outs   dx,BYTE PTR ds:[esi]
  4151d7:	add    ebx,DWORD PTR [edi+eax*1+0x70]
  4151db:	aad    0x26
  4151dd:	mov    ch,0x19
  4151df:	ins    BYTE PTR es:[edi],dx
  4151e0:	fist   DWORD PTR [esi+0x3f]
  4151e3:	xchg   edx,eax
  4151e4:	into   
  4151e5:	pop    edx
  4151e6:	shr    DWORD PTR [edx+0x84dcd18],0x3c
  4151ed:	outs   dx,BYTE PTR ds:[esi]
  4151ee:	cmp    al,BYTE PTR [eax-0xa]
  4151f1:	ja     0x41522d
  4151f3:	lods   al,BYTE PTR ds:[esi]
  4151f4:	jo     0x415212
  4151f6:	add    eax,0x8f57bef2
  4151fb:	push   cs
  4151fc:	mov    al,ds:0x5f72f757
  415201:	jbe    0x415191
  415203:	stos   DWORD PTR es:[edi],eax
  415204:	ror    DWORD PTR [edx+ecx*4+0x72],1
  415208:	push   ebx
  415209:	push   edx
  41520a:	jne    0x4151c0
  41520c:	push   ds
  41520d:	and    DWORD PTR [eax-0x72f8b3a8],edi
  415213:	out    dx,eax
  415214:	out    dx,eax
  415215:	sub    BYTE PTR [ebx],ch
  415217:	and    DWORD PTR [eax+0x39],0xffffff9a
  41521b:	outs   dx,BYTE PTR ds:[esi]
  41521c:	adc    DWORD PTR [esi+0x3e],edx
  41521f:	stc    
  415220:	dec    ecx
  415221:	daa    
  415222:	xchg   ebp,eax
  415223:	fcom   DWORD PTR [edx]
  415225:	adc    ebx,DWORD PTR [esi]
  415227:	sub    DWORD PTR [edi],eax
  415229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41522a:	rol    DWORD PTR [edi-0x72],1
  41522d:	int3   
  41522e:	inc    edi
  41522f:	xor    dl,dl
  415231:	fild   DWORD PTR [edx-0x51]
  415234:	push   ecx
  415235:	std    
  415236:	jnp    0x4152aa
  415238:	xchg   esi,eax
  415239:	mov    esi,0x58ebb6d6
  41523e:	xchg   edx,eax
  41523f:	inc    esi
  415240:	mov    ebx,0x541d6f8f
  415245:	add    DWORD PTR [ebx],edi
  415247:	xchg   BYTE PTR [ecx+0x4d9c1507],ah
  41524d:	gs jne 0x4151f3
  415250:	sub    DWORD PTR [eax-0x40],eax
  415253:	sub    ebp,DWORD PTR [ebp+ebp*4+0x761c346]
  41525a:	bound  esp,QWORD PTR [edi-0x1e42bf3b]
  415260:	out    dx,eax
  415261:	in     al,0x39
  415263:	retf   0x275a
  415266:	cmp    eax,0xf8dd3cfd
  41526b:	daa    
  41526c:	(bad)  
  41526d:	push   ss
  41526e:	mov    dh,0xe4
  415270:	add    BYTE PTR [ebx+0x7ff51733],dl
  415276:	hlt    
  415277:	(bad)  
  415278:	jo     0x415239
  41527a:	std    
  41527b:	xor    edx,DWORD PTR [esi+0x26]
  41527e:	hlt    
  41527f:	pop    ebp
  415280:	pop    esi
  415281:	test   DWORD PTR [ebp-0x65],esp
  415284:	dec    ebx
  415285:	xchg   edi,eax
  415286:	mov    DWORD PTR [eax+0x43],edx
  415289:	cmc    
  41528a:	inc    eax
  41528b:	in     eax,0x66
  41528d:	push   ebp
  41528e:	push   0xffffff8d
  415290:	lock push ebp
  415292:	mov    dl,0xac
  415294:	adc    DWORD PTR [esi],esp
  415296:	cmp    ch,0x88
  415299:	cli    
  41529a:	jmp    0xaab266e
  41529f:	and    BYTE PTR [eax+0x43079b9],al
  4152a5:	cmovbe esi,DWORD PTR [eax-0x54a7297b]
  4152ac:	and    dl,BYTE PTR [edx]
  4152ae:	mov    edi,0x809149c2
  4152b3:	cmp    al,0xa
  4152b5:	jl     0x4152a1
  4152b7:	(bad)  
  4152b8:	std    
  4152b9:	sub    edi,DWORD PTR [eax+0x527ece74]
  4152bf:	jmp    0x54e0b52a
  4152c4:	mov    edx,0x35b87a6f
  4152c9:	mov    ah,0x33
  4152cb:	adc    al,0xe6
  4152cd:	out    dx,eax
  4152ce:	cs xor al,0xe1
  4152d1:	ret    0x794b
  4152d4:	push   esp
  4152d5:	xor    DWORD PTR [ebx],ecx
  4152d7:	stos   DWORD PTR es:[edi],eax
  4152d8:	dec    ebx
  4152d9:	cli    
  4152da:	mov    ebp,0x34d3ea67
  4152df:	repnz jecxz 0x4152c1
  4152e2:	sbb    eax,0x3adf4ff3
  4152e7:	sbb    eax,DWORD PTR [edx-0x29]
  4152ea:	adc    cl,BYTE PTR [ecx-0x2def56f9]
  4152f0:	lds    ecx,FWORD PTR [ecx+0x49]
  4152f3:	sub    al,BYTE PTR [esi+eax*8-0x6d]
  4152f7:	adc    al,0xeb
  4152f9:	out    dx,al
  4152fa:	xchg   ecx,eax
  4152fb:	sti    
  4152fc:	mov    ebp,0x113a4bf9
  415301:	xor    edx,edx
  415303:	arpl   dx,bx
  415305:	sub    esp,DWORD PTR [ebx+0xeb7fb11]
  41530b:	arpl   WORD PTR [ebx],di
  41530d:	aad    0xcf
  41530f:	push   edx
  415310:	push   esi
  415311:	test   ebp,0xb694f554
  415317:	dec    ebx
  415318:	shl    ebx,0x6
  41531b:	or     dh,al
  41531d:	out    0x66,eax
  41531f:	adc    BYTE PTR [eax],cl
  415321:	sub    BYTE PTR [ecx],ch
  415323:	fmul   DWORD PTR ds:0xfb4a2145
  415329:	push   edx
  41532a:	clc    
  41532b:	fstp   QWORD PTR [ebx+0x72c37e0e]
  415331:	cs jp  0x41538d
  415334:	and    DWORD PTR [esi-0x13],ebx
  415337:	mov    eax,esi
  415339:	clc    
  41533a:	xchg   ecx,eax
  41533b:	adc    eax,0x60c47863
  415340:	mov    BYTE PTR [ecx],ch
  415342:	xor    al,0x15
  415344:	mov    esi,0xe1561a44
  415349:	in     al,dx
  41534a:	fldenv [ebx-0x29]
  41534d:	test   eax,0xe4741839
  415352:	(bad)  
  415353:	cmp    esi,DWORD PTR [edx+eax*4]
  415356:	into   
  415357:	pop    ebx
  415358:	mov    dh,0x44
  41535a:	pop    es
  41535b:	jge    0x4152f1
  41535d:	xor    al,0x5f
  41535f:	pop    esi
  415360:	jg     0x415312
  415362:	and    dh,BYTE PTR [esi]
  415364:	repz cld 
  415366:	inc    ecx
  415367:	out    dx,eax
  415368:	cdq    
  415369:	in     eax,dx
  41536a:	fbld   TBYTE PTR [eax+eax*2]
  41536d:	retf   
  41536e:	lds    edx,FWORD PTR [edx+0x259b91ab]
  415374:	xlat   BYTE PTR ds:[ebx]
  415375:	dec    esi
  415376:	mov    edi,0x3c534d7c
  41537b:	mov    dh,0x19
  41537d:	shufps xmm0,XMMWORD PTR [eax-0x37e3235b],0xb0
  415385:	scas   al,BYTE PTR es:[edi]
  415386:	push   esp
  415387:	inc    esp
  415388:	or     ecx,ebx
  41538a:	sub    BYTE PTR [eax+0x3b4370d6],bl
  415390:	hlt    
  415391:	lea    ecx,[edx+0x4e99754a]
  415397:	daa    
  415398:	push   eax
  415399:	cld    
  41539a:	or     ebp,eax
  41539c:	xor    bl,BYTE PTR [edi+0x2b9175e2]
  4153a2:	jo     0x4153b0
  4153a4:	pop    ss
  4153a5:	sub    edi,DWORD PTR ds:[eax]
  4153a8:	pusha  
  4153a9:	jle    0x415334
  4153ab:	cmp    edx,ebp
  4153ad:	retf   0x2c3f
  4153b0:	hlt    
  4153b1:	repnz out 0xbd,eax
  4153b4:	jp     0x4153a6
  4153b6:	arpl   WORD PTR [esp+ebp*8-0x7f],si
  4153ba:	xor    DWORD PTR [edx+eiz*4-0x41adfb20],0xffffffda
  4153c2:	sahf   
  4153c3:	in     eax,dx
  4153c4:	and    eax,0x75e2372e
  4153c9:	hlt    
  4153ca:	sar    BYTE PTR [ebp+0x46d7398e],0x4c
  4153d1:	mov    al,0x85
  4153d3:	aas    
  4153d4:	mov    esi,0x3e505d2
  4153d9:	jb     0x4153a4
  4153db:	add    eax,0x252f43ac
  4153e0:	(bad)  
  4153e2:	dec    edx
  4153e3:	inc    edx
  4153e4:	rol    DWORD PTR [edx],1
  4153e6:	gs xchg ecx,eax
  4153e8:	xor    BYTE PTR ds:0x6193c26e,dl
  4153ee:	dec    edx
  4153ef:	jp     0x415428
  4153f1:	jmp    0x889364ac
  4153f6:	addr16 je 0x415407
  4153f9:	fimul  WORD PTR [edx-0xb66be79]
  4153ff:	test   al,0x50
  415401:	xor    esp,DWORD PTR es:[esp+ebp*2]
  415405:	push   ecx
  415406:	mov    ah,0xf7
  415408:	jae    0x41547c
  41540a:	xchg   ebx,eax
  41540b:	xchg   esp,eax
  41540c:	sub    edx,DWORD PTR [edx+0x77cd6f44]
  415412:	mov    ah,0x28
  415414:	loope  0x41546a
  415416:	popf   
  415417:	ja     0x41539e
  415419:	push   ebp
  41541a:	push   ds
  41541b:	pop    esp
  41541c:	push   edx
  41541d:	pop    ebx
  41541e:	loop   0x4153a7
  415420:	loopne 0x41549a
  415422:	fnstcw WORD PTR [edx+0x20]
  415425:	jl     0x41546f
  415427:	mov    edx,0x83389c23
  41542c:	sub    DWORD PTR [eax+0x62],eax
  41542f:	test   ah,ah
  415431:	leave  
  415432:	mov    cs,esp
  415434:	mov    ds:0xdfcd18cf,eax
  415439:	enter  0x7b97,0xc5
  41543d:	inc    ebp
  41543e:	rcr    BYTE PTR [ebx-0x42f8f93c],1
  415444:	fisttp WORD PTR [edi]
  415446:	pop    esi
  415447:	mov    ebp,0x7c80e4b
  41544c:	adc    ah,bl
  41544e:	outs   dx,BYTE PTR ds:[esi]
  41544f:	shl    BYTE PTR [ebp+0x7c33f7ed],0xc3
  415456:	retf   
  415457:	sahf   
  415458:	scas   eax,DWORD PTR es:[edi]
  415459:	lods   eax,DWORD PTR ds:[esi]
  41545a:	mov    esi,0x514b4b84
  41545f:	push   ss
  415460:	fst    QWORD PTR [ebx-0x72]
  415463:	sahf   
  415464:	jp     0x4153fb
  415466:	xchg   esi,eax
  415467:	adc    ebp,eax
  415469:	imul   bl
  41546b:	mov    bl,ah
  41546d:	cmp    edx,DWORD PTR [ecx+0x77]
  415470:	mov    al,0x97
  415472:	pop    edx
  415473:	ret    
  415474:	or     ah,dl
  415476:	xor    esp,esi
  415478:	ins    BYTE PTR es:[edi],dx
  415479:	(bad)  
  41547a:	call   0x3e979c
  41547f:	cdq    
  415480:	stos   DWORD PTR es:[edi],eax
  415481:	xchg   esi,eax
  415482:	test   BYTE PTR [ebx],ch
  415484:	dec    eax
  415485:	mov    eax,0x7bb89330
  41548a:	jmp    DWORD PTR [ebx-0x5a]
  41548d:	(bad)  
  41548e:	scas   eax,DWORD PTR es:[edi]
  41548f:	and    al,0x43
  415491:	test   BYTE PTR [ebx+esi*1],cl
  415494:	loop   0x41542f
  415496:	pop    DWORD PTR [ebx+0x5c]
  415499:	mov    BYTE PTR [edi-0x21],0x6e
  41549d:	in     al,dx
  41549e:	popa   
  41549f:	cmp    eax,0x50abdbb4
  4154a4:	test   BYTE PTR [esi],dl
  4154a6:	sbb    eax,0x85eaab69
  4154ab:	add    eax,0xc09ef3ed
  4154b0:	cmp    esi,DWORD PTR [edx-0x61]
  4154b3:	dec    edi
  4154b4:	pop    ebp
  4154b5:	lods   eax,DWORD PTR ds:[esi]
  4154b6:	sub    al,0xce
  4154b8:	test   al,0x51
  4154ba:	mov    edi,0xdf2b0f4a
  4154bf:	mov    eax,0x2029f1c0
  4154c4:	add    eax,DWORD PTR [esi]
  4154c6:	mov    ?,WORD PTR [ebx]
  4154c8:	push   ecx
  4154c9:	ja     0x415540
  4154cb:	mov    ebx,0xac6cfaf2
  4154d0:	loopne 0x415537
  4154d2:	or     al,0xa8
  4154d4:	jnp    0x4154d7
  4154d6:	repz adc edx,DWORD PTR ds:0x232f5e49
  4154dd:	dec    eax
  4154de:	mov    bh,0x77
  4154e0:	dec    edi
  4154e1:	aas    
  4154e2:	inc    edx
  4154e3:	shl    BYTE PTR [esi-0x60],0xd2
  4154e7:	stos   DWORD PTR es:[edi],eax
  4154e8:	sbb    al,0xaf
  4154ea:	fiadd  WORD PTR [edi+0x64]
  4154ed:	(bad)  
  4154ee:	push   ecx
  4154ef:	xor    DWORD PTR [eax],ebx
  4154f1:	cwde   
  4154f2:	jae    0x415540
  4154f4:	mov    WORD PTR [ebx-0x47248429],es
  4154fa:	adc    eax,0x8f655df4
  4154ff:	enter  0x5f9e,0xac
  415503:	mov    al,BYTE PTR [eax]
  415505:	setle  ah
  415508:	mov    ds:0xdc2d66b,eax
  41550d:	loope  0x41557b
  41550f:	dec    esi
  415510:	mov    cl,0x6b
  415512:	cwde   
  415513:	std    
  415514:	out    dx,al
  415515:	fiadd  WORD PTR [esi+0x6]
  415518:	jnp    0x415505
  41551a:	push   ds
  41551b:	jg     0x4154e1
  41551d:	icebp  
  41551e:	retf   0x16be
  415521:	pop    ds
  415522:	add    eax,0x90ac1341
  415527:	sbb    al,0xe4
  415529:	and    ah,BYTE PTR [ebp-0x34]
  41552c:	add    ah,BYTE PTR [edi-0x2c0cf379]
  415532:	retf   
  415533:	(bad)  
  415534:	push   edx
  415535:	cmp    BYTE PTR [edx],cl
  415537:	mov    ah,0xe7
  415539:	sub    DWORD PTR [ecx-0x5ef7b477],edi
  41553f:	xor    DWORD PTR [ebx+0x76],edi
  415542:	call   0x52662c5b
  415547:	nop
  415548:	arpl   WORD PTR [edx+0x56],sp
  41554b:	inc    edx
  41554c:	les    esp,FWORD PTR [ebx]
  41554e:	pop    edx
  41554f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415550:	repnz mov ah,0xcb
  415553:	aaa    
  415554:	add    al,0x97
  415556:	inc    eax
  415557:	ficomp DWORD PTR [edi+0x22553651]
  41555d:	mov    ah,0xc3
  41555f:	ins    BYTE PTR es:[edi],dx
  415560:	xchg   ebx,eax
  415561:	dec    edx
  415562:	aas    
  415563:	test   BYTE PTR [edx],al
  415565:	out    dx,eax
  415566:	aaa    
  415567:	push   edi
  415568:	sub    eax,0x19d387d0
  41556d:	sti    
  41556e:	add    DWORD PTR [ebp+0x74],esp
  415571:	mov    dl,0xda
  415573:	push   ss
  415574:	inc    edi
  415575:	push   ebp
  415576:	mov    ah,0x2e
  415578:	pop    es
  415579:	out    dx,eax
  41557a:	jb     0x4155cf
  41557c:	sub    eax,0xd282ac35
  415581:	rcr    DWORD PTR [eax-0x14040fab],0x27
  415588:	xor    al,0xb
  41558a:	js     0x4155ac
  41558c:	test   eax,0x3b7f95f0
  415591:	mov    ecx,0xe0eeba30
  415596:	out    0xbb,eax
  415598:	fiadd  DWORD PTR [edi]
  41559a:	mov    BYTE PTR [esi-0x72cc114b],al
  4155a0:	sahf   
  4155a1:	inc    edi
  4155a2:	xchg   esi,eax
  4155a3:	mov    esi,0x4c7934f1
  4155a8:	jae    0x4155b9
  4155aa:	sbb    eax,eax
  4155ac:	int    0xf5
  4155ae:	jmp    0x4155fd
  4155b0:	cld    
  4155b1:	not    dl
  4155b3:	sbb    edx,DWORD PTR [ecx+0x64d631a2]
  4155b9:	dec    cx
  4155bb:	jg     0x415585
  4155bd:	hlt    
  4155be:	adc    esp,esp
  4155c0:	and    DWORD PTR [esi-0x42bcd0bf],0xf85a1ed4
  4155ca:	int    0xd
  4155cc:	jmp    0xcf079a0e
  4155d1:	or     al,0x41
  4155d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155d4:	mov    edi,0xaf3d42fe
  4155d9:	sbb    al,0x48
  4155db:	push   ecx
  4155dc:	or     bh,dl
  4155de:	stos   DWORD PTR es:[edi],eax
  4155df:	adc    eax,0x28a59188
  4155e4:	ret    
  4155e5:	jns    0x41556b
  4155e7:	(bad)  
  4155e8:	fisubr WORD PTR [edi-0x62]
  4155eb:	scas   al,BYTE PTR es:[edi]
  4155ec:	xor    eax,0x82cf656a
  4155f1:	sar    dl,0x4e
  4155f4:	dec    eax
  4155f5:	cli    
  4155f6:	aad    0x2a
  4155f8:	pop    ds
  4155f9:	pop    es
  4155fa:	inc    edx
  4155fb:	inc    ebx
  4155fc:	rcl    BYTE PTR [eax],1
  4155fe:	pminsw mm7,QWORD PTR [eax-0x26]
  415602:	mov    dl,BYTE PTR [ecx+0x76ff7401]
  415608:	jo     0x415649
  41560a:	nop
  41560b:	sbb    edx,DWORD PTR [edi-0x35]
  41560e:	push   esp
  41560f:	sub    eax,DWORD PTR [edx+0x657df927]
  415615:	mov    DWORD PTR [ebx+0x38c7c175],ebp
  41561b:	xchg   DWORD PTR [edi],ebx
  41561d:	fild   DWORD PTR [ebx+0x4ff0204]
  415623:	or     bl,BYTE PTR [edi+0x7bc09f05]
  415629:	adc    eax,0xb74810ab
  41562e:	pop    ds
  41562f:	ins    DWORD PTR es:[edi],dx
  415630:	fstp   TBYTE PTR [ebp+0x4e3c4c0b]
  415636:	pop    edi
  415637:	jmp    0x41567f
  415639:	sbb    DWORD PTR [esi],eax
  41563b:	ins    DWORD PTR es:[edi],dx
  41563c:	push   esi
  41563d:	dec    esi
  41563e:	ret    
  41563f:	sub    eax,0x6f297cff
  415644:	mov    ch,bh
  415646:	into   
  415647:	or     al,0x1a
  415649:	sbb    dl,BYTE PTR [ecx]
  41564b:	daa    
  41564c:	ja     0x41567b
  41564e:	push   ss
  41564f:	jno    0x41564a
  415651:	push   ebx
  415652:	and    eax,0x350059c4
  415657:	adc    bl,dh
  415659:	call   0xfecec8a7
  41565e:	lods   eax,DWORD PTR ds:[esi]
  41565f:	cs addr16 sti 
  415662:	mov    ds:0xf0084755,al
  415667:	fldenv [edx]
  415669:	hlt    
  41566a:	push   ecx
  41566b:	dec    edx
  41566c:	dec    esp
  41566d:	stos   DWORD PTR es:[edi],eax
  41566e:	imul   esi,DWORD PTR [ebx-0x193611d],0xffffffb8
  415675:	std    
  415676:	jl     0x4156f4
  415678:	ret    0xb25e
  41567b:	fldl2t 
  41567d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41567e:	inc    ecx
  41567f:	inc    edi
  415680:	aaa    
  415681:	ins    BYTE PTR es:[edi],dx
  415682:	adc    eax,0x69e075bf
  415687:	push   ecx
  415688:	dec    edi
  415689:	(bad)  
  41568a:	aaa    
  41568b:	pop    ss
  41568c:	mov    al,ds:0xf8bc500
  415691:	lea    esp,[ecx]
  415693:	mov    edx,0xd7ee0b27
  415698:	mov    bh,0x73
  41569a:	clc    
  41569b:	add    DWORD PTR [edx],eax
  41569d:	adc    ebp,DWORD PTR [esi+0x26]
  4156a0:	imul   eax,eax,0x249b836f
  4156a6:	shr    bh,1
  4156a8:	push   ds
  4156a9:	invd   
  4156ab:	xchg   esi,eax
  4156ac:	js     0x4156b6
  4156ae:	out    0xf3,eax
  4156b0:	adc    BYTE PTR [ebp-0x3a],al
  4156b3:	xchg   edx,eax
  4156b4:	jmp    0x4156ea
  4156b6:	add    ah,BYTE PTR [ebx-0x5618246c]
  4156bc:	or     ch,dl
  4156be:	iret   
  4156bf:	jl     0x41572d
  4156c1:	and    dl,BYTE PTR [eax+esi*2]
  4156c4:	add    al,0x91
  4156c6:	aaa    
  4156c7:	mov    bh,ah
  4156c9:	mov    BYTE PTR [esi+0x35d569b9],bl
  4156cf:	repnz add eax,0xd6061016
  4156d5:	cmp    BYTE PTR [edi+0x6665a217],ah
  4156db:	fst    DWORD PTR ss:[ecx+esi*2-0x57dd2e88]
  4156e3:	retf   0x896e
  4156e6:	dec    esp
  4156e7:	in     eax,0x7a
  4156e9:	push   esp
  4156ea:	mov    cl,0xfd
  4156ec:	xchg   ebp,eax
  4156ed:	pop    ds
  4156ee:	imul   edx,DWORD PTR [esi-0x60],0x13
  4156f2:	retf   0xe47c
  4156f5:	pop    ss
  4156f6:	mov    ah,0xec
  4156f8:	add    al,0xe4
  4156fa:	scas   al,BYTE PTR es:[edi]
  4156fb:	mov    bl,0x4c
  4156fd:	cld    
  4156fe:	pop    ss
  4156ff:	add    ebx,edi
  415701:	dec    ecx
  415702:	dec    edx
  415703:	or     ch,BYTE PTR fs:[ebx-0x768c45fd]
  41570a:	fsub   DWORD PTR [edx+0x2ad766e9]
  415710:	push   0xc4801936
  415715:	adc    eax,DWORD PTR [edi+0x6e9b2479]
  41571b:	mov    ds,WORD PTR [esi*8+0x6c0389e2]
  415722:	push   ebx
  415723:	push   0x42
  415725:	inc    esi
  415726:	fbstp  TBYTE PTR [ebx]
  415728:	repz sub BYTE PTR [ecx+eax*2+0x7f],dh
  41572d:	sbb    ah,bl
  41572f:	mov    BYTE PTR [ecx+0x2e],bl
  415732:	push   eax
  415733:	(bad)  
  415734:	push   ebp
  415735:	pop    edi
  415736:	dec    esp
  415737:	es pop ebp
  415739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41573a:	fadd   QWORD PTR [ecx]
  41573c:	jb     0x41576c
  41573e:	pusha  
  41573f:	(bad)  
  415740:	stc    
  415741:	pop    edx
  415742:	mov    ecx,DWORD PTR [edx]
  415744:	xchg   ecx,eax
  415745:	dec    edx
  415746:	or     ch,BYTE PTR [eax]
  415748:	sbb    BYTE PTR [ebp-0x11],dl
  41574b:	repz mov edx,0x38f136f3
  415751:	adc    edx,edi
  415753:	jae    0x415786
  415755:	ret    0xf9eb
  415758:	xor    eax,0xe20db676
  41575d:	in     eax,dx
  41575e:	mov    dh,0x4f
  415760:	pop    ecx
  415761:	and    BYTE PTR [esi],al
  415763:	repz loope 0x4156ff
  415766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415767:	xor    edx,DWORD PTR [esi-0x1f]
  41576a:	mov    gs,WORD PTR [edx]
  41576c:	jmp    ecx
  41576e:	fs (bad) 
  415770:	(bad)
  415774:	push   ecx
  415775:	and    eax,0x968b4a9e
  41577a:	outs   dx,BYTE PTR ds:[esi]
  41577b:	xchg   ebp,eax
  41577c:	push   ebp
  41577d:	xchg   DWORD PTR [edi+0x9162893],ecx
  415783:	(bad)  
  415784:	ds xchg edx,eax
  415786:	xchg   esp,eax
  415787:	mov    ds:0x3e6bdaa2,eax
  41578c:	pop    ebx
  41578d:	dec    ebp
  41578e:	daa    
  41578f:	pop    esp
  415790:	pushf  
  415791:	cmp    esi,DWORD PTR [bx+si-0x48]
  415795:	mov    dh,0x96
  415797:	ds mov eax,0x9c3c303
  41579d:	shr    DWORD PTR [edi],0xc3
  4157a0:	inc    edx
  4157a1:	ret    
  4157a2:	inc    esp
  4157a3:	jmp    0x4157d9
  4157a5:	sbb    bh,dh
  4157a7:	jns    0x415800
  4157a9:	ret    0xfd50
  4157ac:	inc    ecx
  4157ad:	pop    edi
  4157ae:	mov    esi,0x12a58db2
  4157b3:	ins    BYTE PTR es:[edi],dx
  4157b4:	pop    ds
  4157b5:	pop    ebx
  4157b6:	nop
  4157b7:	cli    
  4157b8:	inc    edi
  4157b9:	idiv   DWORD PTR [edx-0x21]
  4157bc:	dec    esi
  4157bd:	push   esp
  4157be:	ret    0xde18
  4157c1:	push   ebp
  4157c2:	push   esi
  4157c3:	mov    esp,0x8cb53de8
  4157c8:	stos   BYTE PTR es:[edi],al
  4157c9:	jb     0x41578d
  4157cb:	and    BYTE PTR ds:0xd2078ce8,bl
  4157d1:	loop   0x4157e0
  4157d3:	cld    
  4157d4:	adc    DWORD PTR [eax+0x443ba2],ecx
  4157da:	push   eax
  4157db:	jb     0x41585a
  4157dd:	inc    eax
  4157de:	xchg   BYTE PTR [esi],bh
  4157e0:	aam    0xbc
  4157e2:	and    DWORD PTR [edx-0x1414ab30],esp
  4157e8:	pop    esp
  4157e9:	sbb    dh,BYTE PTR [ecx+0x49]
  4157ec:	test   DWORD PTR [edx],0x98b7aa53
  4157f2:	clc    
  4157f3:	in     eax,dx
  4157f4:	mov    eax,0x371bbfb1
  4157f9:	sbb    DWORD PTR ds:0xa172dce0,ecx
  4157ff:	outs   dx,DWORD PTR ds:[esi]
  415800:	push   cs
  415801:	(bad)  
  415802:	jns    0x41582c
  415804:	push   esp
  415805:	xor    ah,BYTE PTR [edx+0x4c]
  415808:	or     BYTE PTR [edx+0x27954f83],dh
  41580e:	retf   0x81f8
  415811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415812:	dec    ecx
  415813:	jns    0x41586b
  415815:	es push ss
  415817:	cmp    eax,0x3ad4a70f
  41581c:	lea    edi,cs:[ebp+0x64]
  415820:	fcomp  QWORD PTR [edx+edx*1+0x10805d05]
  415827:	test   BYTE PTR ds:[ecx-0x1],0x34
  41582c:	mov    cl,0x5c
  41582e:	retf   
  41582f:	cmp    ecx,esi
  415831:	ret    0x6d5a
  415834:	sbb    bh,dh
  415836:	jp     0x41589a
  415838:	dec    esp
  415839:	aad    0xa5
  41583b:	add    al,0xbc
  41583d:	mov    ch,0x12
  41583f:	pcmpgtw mm5,QWORD PTR [ecx+0x63]
  415843:	xor    ecx,DWORD PTR [esi]
  415845:	int3   
  415846:	retf   0x2457
  415849:	ins    BYTE PTR es:[edi],dx
  41584a:	sbb    al,0xd1
  41584c:	xor    BYTE PTR [edx-0x621b06aa],bh
  415852:	inc    edi
  415853:	(bad)  
  415854:	xchg   ecx,eax
  415855:	xlat   BYTE PTR ds:[ebx]
  415856:	nop
  415857:	and    BYTE PTR [esi+0x34],0xc3
  41585b:	jmp    0xb80ba552
  415860:	mov    ah,BYTE PTR [eax]
  415862:	nop
  415863:	mov    ah,0xef
  415865:	das    
  415866:	loopne 0x4158c8
  415868:	push   edx
  415869:	(bad)  
  41586a:	int3   
  41586b:	xor    eax,0xeb04c5b7
  415870:	jle    0x41588d
  415872:	dec    edi
  415873:	call   0x7b6bdfd9
  415878:	jle    0x415893
  41587a:	cmp    BYTE PTR [ebp-0x64],cl
  41587d:	mov    fs,WORD PTR [ebx]
  41587f:	aad    0xfa
  415881:	push   0x59
  415883:	adc    BYTE PTR [edi],0x78
  415886:	xchg   ecx,eax
  415887:	pusha  
  415888:	popf   
  415889:	cmp    eax,esi
  41588b:	or     eax,0x7e2ab6f9
  415890:	jg     0x415812
  415892:	add    edi,DWORD PTR [edi]
  415894:	or     BYTE PTR [ebp+esi*1+0xd],ah
  415898:	dec    ebp
  415899:	pop    eax
  41589a:	or     ah,BYTE PTR [ecx+ecx*8+0x42dcad3d]
  4158a1:	int    0x66
  4158a3:	and    ecx,ebp
  4158a5:	fucomp st(7)
  4158a7:	arpl   WORD PTR [ebx-0x19],bp
  4158aa:	push   edx
  4158ab:	jo     0x4158d3
  4158ad:	sub    DWORD PTR [ebx],ecx
  4158af:	inc    ebx
  4158b0:	push   ecx
  4158b1:	mov    ch,0x54
  4158b3:	inc    ebx
  4158b4:	loopne 0x4158ac
  4158b6:	in     al,dx
  4158b7:	stos   BYTE PTR es:[edi],al
  4158b8:	inc    edx
  4158b9:	and    bh,BYTE PTR [edx-0x7d350307]
  4158bf:	sbb    cl,ch
  4158c1:	(bad)  
  4158c2:	stos   BYTE PTR es:[edi],al
  4158c3:	fadd   DWORD PTR [edi]
  4158c5:	jecxz  0x415935
  4158c7:	int    0xc3
  4158c9:	mov    DWORD PTR [edi+ebp*1+0x74],edx
  4158cd:	rcr    BYTE PTR [ebp+esi*8+0x30],cl
  4158d1:	aad    0x55
  4158d3:	add    BYTE PTR [edx+edx*1+0xffde546],0x35
  4158db:	loop   0x41585e
  4158dd:	xor    al,0xfd
  4158df:	xchg   esp,eax
  4158e0:	pushf  
  4158e1:	(bad)  
  4158e2:	cmp    BYTE PTR [ebx-0x19],al
  4158e5:	faddp  st(6),st
  4158e7:	jg     0x415923
  4158e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158ea:	mov    ebx,0x29b0d64c
  4158ef:	in     eax,dx
  4158f0:	shl    BYTE PTR [eax],1
  4158f2:	ss arpl bx,ax
  4158f5:	or     ecx,DWORD PTR [edx]
  4158f7:	lock push edi
  4158f9:	sub    al,0xfe
  4158fb:	mov    esi,DWORD PTR [edi+0xd67822f]
  415901:	push   ds
  415902:	cdq    
  415903:	dec    edx
  415904:	push   ebx
  415905:	xlat   BYTE PTR ds:[ebx]
  415906:	jecxz  0x415942
  415908:	mov    ds:0xefbc7931,eax
  41590d:	lock inc eax
  41590f:	jns    0x4158ad
  415911:	xor    eax,0xa11861d3
  415916:	ins    BYTE PTR es:[edi],dx
  415917:	xor    ebp,ebx
  415919:	pop    esi
  41591a:	ror    ecx,0xb9
  41591d:	pop    edx
  41591e:	cmp    eax,0xad704ca2
  415923:	shr    BYTE PTR ds:0xb18040c7,1
  415929:	sahf   
  41592a:	fadd   QWORD PTR [ecx-0x2b]
  41592d:	(bad)  
  41592e:	or     BYTE PTR [edi-0x6377e596],bh
  415934:	ins    DWORD PTR es:[edi],dx
  415935:	add    eax,0xee267484
  41593a:	rcpps  xmm6,XMMWORD PTR [ebp+0x73]
  41593e:	mov    dh,0x31
  415940:	xor    bh,BYTE PTR [edx-0x3c987381]
  415946:	add    al,0x93
  415948:	jge    0x415955
  41594a:	in     eax,0x4f
  41594c:	dec    edx
  41594d:	dec    edi
  41594e:	and    BYTE PTR [eax+0x3a1cd8c7],bl
  415954:	sbb    eax,0x417b85f0
  415959:	sub    dh,0xe5
  41595c:	icebp  
  41595d:	jo     0x4159a9
  41595f:	pop    esp
  415960:	mov    WORD PTR [eax+0x3a61db35],ds
  415966:	adc    al,0x3a
  415968:	dec    ebp
  415969:	inc    edi
  41596a:	rcr    BYTE PTR [esi-0x23f9eea],cl
  415970:	dec    eax
  415971:	mov    bl,0x57
  415973:	mov    edi,edx
  415975:	and    DWORD PTR [eax+0x4c6f330d],edi
  41597b:	pop    ds
  41597c:	inc    edi
  41597d:	and    eax,0xe0cfa98a
  415982:	mov    ds:0x35838aec,al
  415987:	cs out dx,al
  415989:	call   0x8fa602cc
  41598e:	xor    al,0x51
  415990:	sar    DWORD PTR ds:0x647f609f,cl
  415996:	iret   
  415997:	data16 loop 0x415a0b
  41599a:	addr16 adc al,0x69
  41599d:	inc    ecx
  41599e:	ds jnp 0x4159f9
  4159a1:	(bad)  
  4159a2:	inc    edx
  4159a3:	stc    
  4159a4:	pop    edi
  4159a5:	xchg   BYTE PTR [eax+0xc],al
  4159a8:	sbb    dl,BYTE PTR [ebp-0x1ac19f4a]
  4159ae:	add    edx,DWORD PTR [esi-0x70be7749]
  4159b4:	gs push 0x5e
  4159b7:	int    0x97
  4159b9:	xor    edx,DWORD PTR [edi+0x712133d6]
  4159bf:	pop    esi
  4159c0:	xchg   BYTE PTR [ecx+0x1a0f2f2b],al
  4159c6:	xor    ebx,DWORD PTR [eax]
  4159c8:	imul   DWORD PTR [edx]
  4159ca:	scas   eax,DWORD PTR es:[edi]
  4159cb:	out    0xf0,al
  4159cd:	pop    ds
  4159ce:	cmp    DWORD PTR [ecx],edi
  4159d0:	pop    edx
  4159d1:	fucomip st,st(2)
  4159d3:	sti    
  4159d4:	lods   al,BYTE PTR ds:[esi]
  4159d5:	int3   
  4159d6:	inc    ebp
  4159d7:	xor    DWORD PTR [edi+0x57],edx
  4159da:	inc    ebx
  4159db:	imul   eax,DWORD PTR [ecx+0x2e],0x48
  4159df:	jne    0x4159cc
  4159e1:	nop
  4159e2:	pop    ebp
  4159e3:	(bad)  
  4159e4:	scas   al,BYTE PTR es:[edi]
  4159e5:	pop    di
  4159e7:	inc    eax
  4159e8:	jbe    0x4159d9
  4159ea:	test   DWORD PTR [edx-0x29c45cd6],eax
  4159f0:	mov    ds:0x4d08917a,al
  4159f5:	dec    edx
  4159f6:	mov    esp,0x83db24f4
  4159fb:	(bad)  
  4159fc:	enter  0xd868,0x61
  415a00:	popf   
  415a01:	fucomi st,st(6)
  415a03:	sbb    bh,0x56
  415a06:	ret    
  415a07:	cmp    eax,0x819eb393
  415a0c:	dec    edi
  415a0d:	sar    cl,1
  415a0f:	jnp    0x4159c1
  415a11:	mov    ah,cl
  415a13:	repz sar ecx,1
  415a16:	jmp    0x5143:0xc370d49a
  415a1d:	rcl    DWORD PTR [ecx-0x3d92a33],0x1c
  415a24:	sbb    cl,BYTE PTR [ebx]
  415a26:	sub    dh,BYTE PTR [ebx-0x39]
  415a29:	mov    al,ds:0xca4d362e
  415a2e:	sahf   
  415a2f:	lahf   
  415a30:	xor    ebx,DWORD PTR [ebp-0x3a]
  415a33:	and    ecx,ecx
  415a35:	int3   
  415a36:	int    0xa6
  415a38:	ins    DWORD PTR es:[edi],dx
  415a39:	outs   dx,DWORD PTR ds:[esi]
  415a3a:	jg     0x4159db
  415a3c:	adc    al,0x43
  415a3e:	push   ebx
  415a3f:	loope  0x415a64
  415a41:	cmc    
  415a42:	sbb    edx,DWORD PTR ds:0xb7dfd598
  415a48:	or     eax,0x5472a796
  415a4d:	push   eax
  415a4e:	adc    al,0xfe
  415a50:	mov    eax,ds:0x19edac65
  415a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a56:	jle    0x415aa5
  415a58:	mov    edi,0xfb13b2f1
  415a5d:	xchg   edi,eax
  415a5e:	cmp    al,0xa5
  415a60:	sbb    esp,DWORD PTR [edx]
  415a62:	(bad)  
  415a63:	icebp  
  415a64:	loop   0x415a28
  415a66:	addr16 aam 0x16
  415a69:	test   DWORD PTR [ecx],0xca49896e
  415a6f:	jae    0x415aa7
  415a71:	inc    ecx
  415a72:	ds jg  0x415a49
  415a75:	dec    edi
  415a76:	out    0xa6,al
  415a78:	aaa    
  415a79:	push   ebx
  415a7a:	jbe    0x415ae4
  415a7c:	xor    esp,edx
  415a7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a7f:	cld    
  415a80:	push   eax
  415a81:	add    ecx,esi
  415a83:	jne    0x4136c2
  415a89:	mov    ecx,DWORD PTR [ebp-0x20]
  415a8c:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  415a93:	mov    dl,BYTE PTR [ebp-0x1]
  415a96:	cmp    cl,dl
  415a98:	je     0x420d32
  415a9e:	jmp    0x417e2b
  415aa3:	jb     0x415a63
  415aa5:	or     eax,0x7679f979
  415aaa:	mov    eax,ds:0xde6af8ab
  415aaf:	pop    esi
  415ab0:	jnp    0x415b27
  415ab2:	or     DWORD PTR [esi+0x57],0x5f0a7a7d
  415ab9:	jp     0x415b35
  415abb:	inc    esi
  415abc:	mov    eax,0x61d228d3
  415ac1:	mov    edx,0x89e96507
  415ac6:	jmp    0x415adf
  415ac8:	fst    DWORD PTR [eax]
  415aca:	push   ss
  415acb:	ja     0x415a88
  415acd:	in     al,dx
  415ace:	inc    eax
  415acf:	mov    dl,ah
  415ad1:	pop    DWORD PTR [ebx]
  415ad3:	in     al,dx
  415ad4:	mov    ah,0xf2
  415ad6:	push   cs
  415ad7:	push   edi
  415ad8:	cli    
  415ad9:	and    al,0xc8
  415adb:	and    edi,ecx
  415add:	lods   al,BYTE PTR ds:[esi]
  415ade:	out    dx,eax
  415adf:	or     ebx,esp
  415ae1:	jno    0x415b2e
  415ae3:	in     al,0xc5
  415ae5:	(bad)  
  415ae6:	std    
  415ae7:	sbb    BYTE PTR [ecx+0x6e],ch
  415aea:	and    ah,dl
  415aec:	push   cs
  415aed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415aee:	jmp    0x16781914
  415af3:	jmp    0x9aa09748
  415af8:	or     edi,DWORD PTR [esi+0x50519a8c]
  415afe:	jbe    0x415b2e
  415b00:	adc    edi,ebx
  415b02:	pop    ebp
  415b03:	and    edx,DWORD PTR ds:0x96e1accb
  415b09:	adc    eax,0x3c58e9ac
  415b0e:	push   ss
  415b0f:	inc    esi
  415b10:	sub    BYTE PTR [edx+eiz*8],cl
  415b13:	(bad)  
  415b14:	aas    
  415b15:	jecxz  0x415b27
  415b17:	in     eax,0xa1
  415b19:	jb     0x415b38
  415b1b:	enter  0xc388,0x65
  415b1f:	adc    BYTE PTR [ebx+0x6d],0x2
  415b23:	push   ebx
  415b24:	push   ds
  415b25:	(bad)  
  415b26:	sbb    BYTE PTR [ecx+0x41],dl
  415b29:	pop    eax
  415b2a:	in     al,dx
  415b2b:	in     eax,0x69
  415b2d:	add    bh,ch
  415b2f:	mul    DWORD PTR [edx-0x2c9e56f1]
  415b35:	or     eax,0x2cf64160
  415b3a:	xlat   BYTE PTR ds:[ebx]
  415b3b:	je     0x415ac9
  415b3d:	fs push es
  415b3f:	retf   
  415b40:	aam    0xd6
  415b42:	nop
  415b43:	or     DWORD PTR [edi+0x43df697d],esp
  415b49:	daa    
  415b4a:	rcr    dl,cl
  415b4c:	add    eax,0xa3aa54a
  415b51:	jbe    0x415ba0
  415b53:	sti    
  415b54:	int3   
  415b55:	inc    ecx
  415b56:	ins    DWORD PTR es:[edi],dx
  415b57:	std    
  415b58:	add    esp,DWORD PTR [ebx-0x66]
  415b5b:	fbstp  TBYTE PTR ds:0xba1bd761
  415b61:	jge    0x415b72
  415b63:	sub    DWORD PTR [edx-0x1eddf588],edx
  415b69:	mov    cl,0xe7
  415b6b:	pop    ss
  415b6c:	xchg   cl,cl
  415b6e:	repz jne 0x415b19
  415b71:	inc    esi
  415b72:	ret    0x3038
  415b75:	lock lds edx,FWORD PTR [ebx]
  415b78:	and    ebp,DWORD PTR [edi+0xa]
  415b7b:	dec    edi
  415b7c:	fldenv [edx]
  415b7e:	fdivr  QWORD PTR [esi]
  415b80:	pusha  
  415b81:	pop    eax
  415b82:	loope  0x415b9b
  415b84:	mov    ds:0x36094eaa,al
  415b89:	xchg   ebp,eax
  415b8a:	aad    0x8b
  415b8c:	in     eax,dx
  415b8d:	sbb    eax,0x4a09f594
  415b92:	outs   dx,DWORD PTR ds:[esi]
  415b93:	or     dh,0xb1
  415b96:	jle    0x415bd8
  415b98:	outs   dx,DWORD PTR ds:[esi]
  415b99:	cmp    BYTE PTR [eax-0x1b],ah
  415b9c:	pushf  
  415b9d:	gs mov edi,0x32a80757
  415ba3:	add    dh,BYTE PTR [eax+0x1d]
  415ba6:	inc    edx
  415ba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ba8:	mov    cl,0x3f
  415baa:	inc    ebp
  415bab:	and    ah,BYTE PTR [esi-0x480935be]
  415bb1:	fisub  DWORD PTR ds:[ebx-0x64a17615]
  415bb8:	ds mov esp,0xe0682246
  415bbe:	mov    edi,0x2c56bd6b
  415bc3:	inc    dx
  415bc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bc6:	jmp    0xf0337914
  415bcb:	in     al,dx
  415bcc:	jo     0x415b86
  415bce:	loop   0x415c24
  415bd0:	or     al,0x68
  415bd2:	mov    dl,0x5d
  415bd4:	out    dx,eax
  415bd5:	mov    edi,0x81395726
  415bda:	add    BYTE PTR [edx+0x27],ch
  415bdd:	stos   BYTE PTR es:[edi],al
  415bde:	mov    eax,0xd7896366
  415be3:	xchg   ecx,eax
  415be4:	push   esp
  415be5:	add    al,0x84
  415be7:	bound  ebp,QWORD PTR [ebx+esi*4-0x2674447b]
  415bee:	stc    
  415bef:	xchg   esi,eax
  415bf0:	jno    0x415c4e
  415bf2:	lea    ecx,[edx]
  415bf4:	pop    esp
  415bf5:	add    bh,0xbf
  415bf8:	pop    es
  415bf9:	es push cs
  415bfb:	push   ds
  415bfc:	ret    
  415bfd:	retf   
  415bfe:	jmp    0x415bbd
  415c00:	or     DWORD PTR [esi-0x2b38c368],ebx
  415c06:	xchg   edi,eax
  415c07:	and    al,0xf4
  415c09:	add    ah,BYTE PTR [eax+0x3e]
  415c0c:	sub    eax,0x56965ce9
  415c11:	cmc    
  415c12:	or     BYTE PTR [edi-0x47],dh
  415c15:	and    eax,0x4f26be5d
  415c1a:	out    dx,eax
  415c1b:	sub    eax,DWORD PTR ds:0x9fd1b837
  415c21:	loopne 0x415c60
  415c23:	das    
  415c24:	fwait
  415c25:	das    
  415c26:	shl    BYTE PTR [ebx],0x5a
  415c29:	pop    es
  415c2a:	in     eax,0x48
  415c2c:	js     0x415bde
  415c2e:	xchg   edi,eax
  415c2f:	(bad)  
  415c30:	push   esp
  415c31:	fwait
  415c32:	push   ds
  415c33:	adc    esp,ebx
  415c35:	mov    bl,BYTE PTR [eax-0x50]
  415c38:	xchg   ebp,eax
  415c39:	lea    esi,[edx+0x19]
  415c3c:	inc    edi
  415c3d:	test   eax,0x73eac4cb
  415c42:	out    dx,eax
  415c43:	mov    esi,0x63ec851e
  415c48:	scas   eax,DWORD PTR es:[edi]
  415c49:	ins    BYTE PTR es:[edi],dx
  415c4a:	dec    eax
  415c4b:	inc    esp
  415c4c:	xor    al,BYTE PTR [edi-0x6140f85d]
  415c52:	in     eax,dx
  415c53:	xchg   ebp,eax
  415c54:	shl    bl,0x36
  415c57:	addr16 sahf 
  415c59:	imul   edx,DWORD PTR [edx+0x78],0x3
  415c5d:	cmp    eax,0xeac2825
  415c62:	or     DWORD PTR [eax-0x4c],edi
  415c65:	iret   
  415c66:	fcom   QWORD PTR [eax+0x32dc851c]
  415c6c:	out    dx,eax
  415c6d:	pop    ds
  415c6e:	imul   esp,DWORD PTR [esi],0x1f
  415c71:	outs   dx,DWORD PTR ds:[esi]
  415c72:	imul   edi,DWORD PTR [ecx+0x178f58a0],0x99a42813
  415c7c:	fisubr DWORD PTR [esp+edi*1-0x4a]
  415c80:	out    dx,al
  415c81:	xor    dh,BYTE PTR [ecx+0x61dab15d]
  415c87:	loopne 0x415c3e
  415c89:	mov    esp,0xd7cf2b55
  415c8e:	ins    BYTE PTR es:[edi],dx
  415c8f:	fidiv  DWORD PTR [edi]
  415c91:	pusha  
  415c92:	jbe    0x415cfb
  415c94:	aad    0xed
  415c96:	std    
  415c97:	daa    
  415c98:	and    al,0x8e
  415c9a:	xchg   ebp,eax
  415c9b:	fsubr  st(7),st
  415c9d:	push   eax
  415c9e:	xor    esp,DWORD PTR [ebp+0x3a]
  415ca1:	fnstenv [eax+0x2c]
  415ca4:	imul   ebx,DWORD PTR [ecx-0x68f0990c],0x1b9ea414
  415cae:	out    dx,al
  415caf:	in     eax,0x40
  415cb1:	push   esi
  415cb2:	cwde   
  415cb3:	out    0x49,eax
  415cb5:	mov    ds:0x3e06348c,al
  415cba:	mov    BYTE PTR [edx+0x1fb92ea],cl
  415cc0:	ss jmp 0x7401:0xd4e207ee
  415cc8:	out    dx,eax
  415cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cca:	mov    cl,BYTE PTR [ebx+ebx*1+0x53ce522d]
  415cd1:	pop    edi
  415cd2:	or     eax,0x444fc1b
  415cd7:	jge    0x415ced
  415cd9:	dec    ecx
  415cda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cdc:	xchg   edx,eax
  415cdd:	mov    al,ds:0xe6da425e
  415ce2:	mov    ds:0xb05d889f,al
  415ce7:	dec    edx
  415ce8:	cmp    DWORD PTR [ebx],esi
  415cea:	xchg   edx,eax
  415ceb:	pop    ss
  415cec:	push   ebx
  415ced:	(bad)  
  415cee:	mov    ch,0x77
  415cf0:	xor    eax,DWORD PTR gs:[edi-0x4f69dbea]
  415cf7:	(bad)  
  415cf8:	scas   eax,DWORD PTR es:[edi]
  415cf9:	pop    ecx
  415cfa:	outs   dx,DWORD PTR ds:[esi]
  415cfb:	ror    DWORD PTR [ecx-0x34604db1],0x7c
  415d02:	inc    ebp
  415d03:	(bad)  [esi-0x38]
  415d06:	dec    esi
  415d07:	sbb    al,dh
  415d09:	and    dl,dl
  415d0b:	jg     0x415ca1
  415d0d:	add    ch,ch
  415d0f:	cmp    DWORD PTR [ebx+edi*2-0x48],edi
  415d13:	xchg   ebp,eax
  415d14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d15:	dec    edi
  415d16:	push   ecx
  415d17:	dec    edx
  415d18:	push   0x42
  415d1a:	xchg   edi,eax
  415d1b:	and    ah,BYTE PTR [ecx]
  415d1d:	push   0x4fc9ee26
  415d22:	mov    ebp,0x4396163a
  415d27:	mov    dh,0x1f
  415d29:	mov    eax,ds:0x41ae3405
  415d2e:	rol    esi,cl
  415d30:	xor    BYTE PTR [edx+0x51432f6d],0xbb
  415d37:	ins    BYTE PTR es:[edi],dx
  415d38:	(bad)  
  415d39:	dec    esp
  415d3a:	ficomp WORD PTR [ebp+ebp*4+0x7c470240]
  415d41:	in     al,dx
  415d42:	jnp    0x415cdc
  415d44:	or     BYTE PTR [ebp-0x5196dfbd],dh
  415d4a:	add    BYTE PTR [ecx-0x11e8fec0],bh
  415d50:	loopne 0x415d85
  415d52:	xor    ah,ch
  415d54:	cmp    ebp,DWORD PTR [edi+0x1cce85f4]
  415d5a:	fld1   
  415d5c:	mov    ds:0x3fb7a13f,eax
  415d61:	test   BYTE PTR [eax],0xc8
  415d64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d65:	push   ebx
  415d66:	aam    0x62
  415d68:	in     al,dx
  415d69:	(bad)  
  415d6a:	imul   edx,DWORD PTR [ebp+0x1aea01b2],0xc6e47f41
  415d74:	adc    DWORD PTR [esi-0x7473d84e],edi
  415d7a:	push   ds
  415d7b:	js     0x415d48
  415d7d:	sub    BYTE PTR [esp+edi*1-0x333efe5c],0xf9
  415d85:	cmp    DWORD PTR [edi+0x78],ebp
  415d88:	push   ds
  415d89:	popa   
  415d8a:	leave  
  415d8b:	push   ss
  415d8c:	fistp  WORD PTR ds:0x300c72f5
  415d92:	pusha  
  415d93:	popf   
  415d94:	retf   0xf13a
  415d97:	out    dx,al
  415d98:	les    esi,FWORD PTR [esi-0x1e]
  415d9b:	loopne 0x415dd0
  415d9d:	imul   eax,DWORD PTR [eax],0x6932ae42
  415da3:	push   ebx
  415da4:	jns    0x415d40
  415da6:	mov    ch,0x6b
  415da8:	ins    DWORD PTR es:[edi],dx
  415da9:	jecxz  0x415e0e
  415dab:	imul   ebx,DWORD PTR [esi+esi*8-0x2f],0x4c0419b1
  415db3:	xchg   esp,eax
  415db4:	inc    ecx
  415db5:	push   0x18
  415db7:	repnz adc ecx,DWORD PTR [ebx+eiz*8+0x6c]
  415dbc:	mov    ebp,0xa2a0e7d5
  415dc1:	or     ch,0x60
  415dc4:	arpl   WORD PTR gs:[ecx],si
  415dc7:	pop    ecx
  415dc8:	and    DWORD PTR [ebp-0x15c67580],ebx
  415dce:	mov    esi,0x52c07923
  415dd3:	lods   al,BYTE PTR ds:[esi]
  415dd4:	add    eax,0x157ce6cd
  415dd9:	int    0xfe
  415ddb:	inc    ebp
  415ddc:	in     al,dx
  415ddd:	push   0xda61af4b
  415de2:	(bad)  
  415de3:	adc    ecx,DWORD PTR [ebp+0x21]
  415de6:	arpl   WORD PTR [ecx-0x1fedc91f],dx
  415dec:	xor    cl,ah
  415dee:	dec    esi
  415def:	mov    ebp,0x2fae3afd
  415df4:	ds imul esi,esi,0x99511998
  415dfb:	pop    ss
  415dfc:	mov    ebx,0xbab995d1
  415e01:	sbb    eax,0xdf9f2cd1
  415e06:	out    dx,eax
  415e07:	dec    eax
  415e08:	cmp    al,0x5d
  415e0a:	rol    dh,1
  415e0c:	jp     0x415dea
  415e0e:	dec    edi
  415e0f:	mov    eax,0xefbd42cd
  415e14:	ins    BYTE PTR es:[edi],dx
  415e15:	test   esi,ebp
  415e17:	mov    DWORD PTR [ebp-0x585259dc],esi
  415e1d:	mov    eax,ds:0x531d5ea2
  415e22:	fcom   DWORD PTR [edx+0xe]
  415e25:	dec    eax
  415e26:	ins    DWORD PTR es:[edi],dx
  415e27:	int3   
  415e28:	in     al,0x22
  415e2a:	in     eax,dx
  415e2b:	mov    cl,0xa6
  415e2d:	xor    DWORD PTR [esi+0x660a6f42],eax
  415e33:	gs test al,0x72
  415e36:	je     0x415eb2
  415e38:	inc    edx
  415e39:	or     al,0x28
  415e3b:	fldcw  WORD PTR [ebx+0x22]
  415e3e:	jmp    0xe6624887
  415e43:	adc    edx,esp
  415e45:	ins    DWORD PTR es:[edi],dx
  415e46:	xchg   edi,eax
  415e47:	aas    
  415e48:	mov    ch,0x1a
  415e4a:	bound  eax,QWORD PTR ds:0xb83e7094
  415e50:	js     0x415e9c
  415e52:	call   0x2065c403
  415e57:	loopne 0x415def
  415e59:	(bad)  
  415e5a:	nop
  415e5b:	mov    edi,esp
  415e5d:	xor    eax,0x4090ff4a
  415e62:	ja     0x415e8d
  415e64:	and    BYTE PTR [esi+eiz*8],dl
  415e67:	ins    DWORD PTR es:[edi],dx
  415e68:	fbld   TBYTE PTR [esi]
  415e6a:	jne    0x415e02
  415e6c:	lahf   
  415e6d:	imul   BYTE PTR [eax+0x53]
  415e70:	cmp    DWORD PTR [esi-0x16],0x967852f1
  415e77:	in     eax,0xb6
  415e79:	adc    bl,BYTE PTR [ebp+0x79]
  415e7c:	int3   
  415e7d:	pop    esp
  415e7e:	iret   
  415e7f:	fild   WORD PTR [edx-0x4c]
  415e82:	fld    QWORD PTR [esi+0x6b0853af]
  415e88:	retf   0x1dcc
  415e8b:	stos   BYTE PTR es:[edi],al
  415e8c:	jecxz  0x415e81
  415e8e:	pop    edx
  415e8f:	mov    ds:0xa41b3caa,al
  415e94:	or     eax,0xb702888c
  415e99:	test   DWORD PTR [eax+eiz*8-0xabb4887],ebp
  415ea0:	inc    edx
  415ea1:	in     eax,dx
  415ea2:	aas    
  415ea3:	inc    edx
  415ea4:	sub    eax,0x5c96f449
  415ea9:	push   0xffffff95
  415eab:	test   DWORD PTR [esi],eax
  415ead:	ret    
  415eae:	sub    BYTE PTR [edx],0x60
  415eb1:	std    
  415eb2:	add    bl,BYTE PTR [ebx+0x7a044409]
  415eb8:	jo     0x415eeb
  415eba:	cmp    DWORD PTR [eax-0x7fe8962d],edi
  415ec0:	mov    esi,0x3ef87ddc
  415ec5:	mov    ebx,DWORD PTR [esi+0x72]
  415ec8:	fs call 0xb4f2917
  415ece:	popf   
  415ecf:	jmp    0x728c:0x844e95dc
  415ed6:	ja     0x415ebb
  415ed8:	inc    ebx
  415ed9:	in     al,0xd0
  415edb:	mov    ah,0x6e
  415edd:	test   al,0xe
  415edf:	jne    0x415eef
  415ee1:	pusha  
  415ee2:	push   esi
  415ee3:	push   ecx
  415ee4:	inc    ebp
  415ee5:	fidiv  DWORD PTR [ebx+0x623cc923]
  415eeb:	xchg   ebp,eax
  415eec:	js     0x415e88
  415eee:	pusha  
  415eef:	pop    edx
  415ef0:	xor    DWORD PTR [eax+0x1d],0xffffff96
  415ef4:	int3   
  415ef5:	out    0xe8,eax
  415ef7:	and    eax,0x7182b19f
  415efc:	add    BYTE PTR [edx],al
  415efe:	dec    ebx
  415eff:	pop    esi
  415f00:	loop   0x415e9b
  415f02:	dec    eax
  415f03:	or     al,0xef
  415f05:	sub    BYTE PTR [esi+ebx*8],bl
  415f08:	in     al,0x16
  415f0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f0b:	pop    eax
  415f0c:	jecxz  0x415e9d
  415f0e:	inc    ebx
  415f0f:	out    dx,eax
  415f10:	push   eax
  415f11:	dec    edi
  415f12:	mov    WORD PTR [ebp+ecx*2+0x16],?
  415f16:	in     eax,0xe
  415f18:	mov    cl,0x91
  415f1a:	inc    esp
  415f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f1c:	test   edx,ebp
  415f1e:	push   esp
  415f1f:	cwde   
  415f20:	lods   eax,DWORD PTR ds:[esi]
  415f21:	aad    0xca
  415f23:	xlat   BYTE PTR ds:[ebx]
  415f24:	aad    0x7a
  415f26:	ss adc bh,0x65
  415f2a:	cmp    BYTE PTR [edi+0x6db47c31],ah
  415f30:	arpl   bp,si
  415f32:	out    dx,eax
  415f33:	add    al,0x6f
  415f35:	jp     0x415f2c
  415f37:	lods   eax,DWORD PTR ds:[esi]
  415f38:	imul   esp,eax,0xffffffab
  415f3b:	jl     0x415f81
  415f3d:	sbb    BYTE PTR [esp+esi*4+0x2fc1a78f],bh
  415f44:	aam    0x4f
  415f46:	cs in  eax,0xc8
  415f49:	jbe    0x415ed4
  415f4b:	pop    ds
  415f4c:	dec    esi
  415f4d:	push   cs
  415f4e:	inc    ebp
  415f4f:	xor    eax,0xb955fc53
  415f54:	(bad)  
  415f55:	push   ebp
  415f56:	pop    ebp
  415f57:	push   es
  415f58:	leave  
  415f59:	lock in eax,dx
  415f5b:	ins    DWORD PTR es:[edi],dx
  415f5c:	push   eax
  415f5d:	mov    esp,DWORD PTR [edx-0x25]
  415f60:	adc    eax,0x524df06c
  415f65:	test   BYTE PTR [ebx],al
  415f67:	sahf   
  415f68:	inc    esi
  415f6a:	pop    ds
  415f6b:	pop    eax
  415f6c:	dec    dl
  415f6e:	iret   
  415f6f:	or     al,0x53
  415f71:	fidiv  DWORD PTR ss:[ebx-0x66]
  415f75:	stos   DWORD PTR es:[edi],eax
  415f76:	jle    0x415eff
  415f78:	ins    DWORD PTR es:[edi],dx
  415f79:	or     eax,0xc9af35ef
  415f7e:	lods   eax,DWORD PTR ds:[esi]
  415f7f:	push   esp
  415f80:	cs leave 
  415f82:	out    dx,eax
  415f83:	mov    ah,0xf1
  415f85:	or     al,0x29
  415f87:	adc    DWORD PTR [edx-0x4f],eax
  415f8a:	rcl    BYTE PTR [ebp-0x60],cl
  415f8d:	cmp    bl,dl
  415f8f:	xchg   edx,eax
  415f90:	scas   eax,DWORD PTR es:[edi]
  415f91:	sub    esi,edi
  415f93:	pop    ss
  415f94:	fisttp DWORD PTR [ebp+0x15]
  415f97:	mov    al,es:0x598dcd18
  415f9d:	xchg   ecx,eax
  415f9e:	(bad)  
  415f9f:	bound  ebp,QWORD PTR [edi-0x65a89a49]
  415fa5:	inc    edx
  415fa6:	daa    
  415fa7:	imul   ecx,DWORD PTR [esp+eiz*8-0x575dbc54],0x14
  415faf:	bound  ebx,QWORD PTR ds:0x95c1e248
  415fb5:	sbb    DWORD PTR [edx-0x3a],eax
  415fb8:	std    
  415fb9:	ret    0xcd78
  415fbc:	sub    eax,0xc4ac87ce
  415fc1:	jae    0x415fda
  415fc3:	(bad)  
  415fc4:	imul   ecx,DWORD PTR [esi+ebx*4+0x16],0xee20cd4d
  415fcc:	lods   al,BYTE PTR ds:[esi]
  415fcd:	push   0x764c04db
  415fd2:	pop    edi
  415fd3:	mov    dl,0x69
  415fd5:	jns    0x416003
  415fd7:	xor    DWORD PTR [eax],esp
  415fd9:	inc    eax
  415fda:	in     al,dx
  415fdb:	test   DWORD PTR [edi+0x69],esi
  415fde:	retf   
  415fdf:	xchg   edi,eax
  415fe0:	pop    ebp
  415fe1:	rol    DWORD PTR [edi+edx*1],1
  415fe4:	imul   edi,DWORD PTR [ebx],0x74
  415fe7:	ins    BYTE PTR es:[edi],dx
  415fe8:	adc    eax,0x6cb81740
  415fed:	pop    ecx
  415fee:	mov    bl,BYTE PTR [ebx]
  415ff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ff1:	sti    
  415ff2:	pop    edi
  415ff3:	stc    
  415ff4:	dec    edi
  415ff5:	test   esi,0x2f1e36d8
  415ffb:	in     eax,dx
  415ffc:	iret   
  415ffd:	dec    edx
  415ffe:	mov    ch,0x55
  416000:	xor    DWORD PTR [eax],edx
  416002:	sti    
  416003:	jle    0x415fd8
  416005:	add    al,0x7b
  416007:	jmp    0x416026
  416009:	scas   al,BYTE PTR es:[edi]
  41600a:	ds (bad) 
  41600c:	idiv   DWORD PTR [eax-0x5]
  41600f:	mov    bl,0xf6
  416011:	and    DWORD PTR [edi-0x2920657c],edx
  416017:	mov    edx,0x5e1f62b2
  41601c:	shl    DWORD PTR [eax+0x20],0x83
  416020:	in     al,dx
  416021:	push   esi
  416022:	shr    DWORD PTR [eax+0x72],cl
  416025:	mov    dl,0x46
  416027:	in     al,dx
  416028:	xchg   esp,eax
  416029:	stc    
  41602a:	pop    edi
  41602b:	or     BYTE PTR [esp+edx*1],dh
  41602e:	mov    eax,0xca5f2ea5
  416033:	jne    0x415ffc
  416035:	adc    bh,BYTE PTR [edi]
  416037:	inc    ebp
  416038:	loopne 0x41602c
  41603a:	xchg   edx,eax
  41603b:	sbb    cl,bh
  41603d:	ficomp DWORD PTR [ebp+0x6c]
  416040:	data16 jb 0x41607d
  416043:	jmp    0x415fd7
  416045:	in     al,dx
  416046:	ins    BYTE PTR es:[edi],dx
  416047:	xlat   BYTE PTR ds:[ebx]
  416048:	adc    edi,edi
  41604a:	ins    DWORD PTR es:[edi],dx
  41604b:	lahf   
  41604c:	lds    eax,FWORD PTR [edx-0x307102ec]
  416052:	sub    ebp,DWORD PTR [ebx+ebp*2+0x45]
  416056:	or     BYTE PTR ds:0xf503b247,bl
  41605c:	mov    esi,edx
  41605e:	jnp    0x4160d7
  416060:	push   eax
  416061:	data16 fcom DWORD PTR [esi-0x6]
  416065:	ret    
  416066:	cmp    al,ah
  416068:	das    
  416069:	inc    esi
  41606a:	adc    ecx,eax
  41606c:	popf   
  41606d:	inc    ebx
  41606e:	xor    al,0x87
  416070:	sub    eax,0xca3cc22e
  416075:	jae    0x41600a
  416077:	cmc    
  416078:	mov    DWORD PTR [ecx+ecx*2+0x24702fad],esi
  41607f:	mov    ah,0xdd
  416081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416082:	(bad)  
  416083:	iret   
  416084:	push   esp
  416085:	aad    0x79
  416087:	and    DWORD PTR [eax+ecx*2],ebx
  41608a:	pop    esi
  41608b:	push   es
  41608c:	mov    eax,0x471e82b9
  416092:	jle    0x416022
  416094:	and    al,0xb1
  416096:	out    0x17,al
  416098:	fs ins BYTE PTR es:[edi],dx
  41609a:	ds cwde 
  41609c:	loop   0x41602b
  41609e:	xor    DWORD PTR [eax-0x28],eax
  4160a1:	dec    edx
  4160a2:	retf   0xa7e7
  4160a5:	or     al,BYTE PTR [ebx]
  4160a7:	js     0x41603b
  4160a9:	sbb    eax,0x6e4add58
  4160ae:	dec    edi
  4160af:	sub    BYTE PTR [ecx+0x30416f35],al
  4160b5:	mov    bh,0xa4
  4160b7:	cs fsubp st(2),st
  4160ba:	imul   esp,ebx,0x96158e20
  4160c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160c1:	jnp    0x416115
  4160c3:	shl    ebx,0x91
  4160c6:	in     al,dx
  4160c7:	adc    BYTE PTR [ecx],ah
  4160c9:	and    eax,0x4a8dffe5
  4160ce:	xor    BYTE PTR [eax+0x70],cl
  4160d1:	outs   dx,DWORD PTR ds:[esi]
  4160d2:	es mov dh,0xe2
  4160d5:	pop    ss
  4160d6:	mov    DWORD PTR [edi+0x4b903185],0x6518ba04
  4160e0:	int    0x4d
  4160e2:	sbb    eax,0xca4d12b2
  4160e7:	imul   BYTE PTR [esi+0x15]
  4160ea:	cmp    cl,BYTE PTR [ebp-0x7576d08d]
  4160f0:	dec    ebp
  4160f1:	push   0xe392270e
  4160f6:	clc    
  4160f7:	in     al,dx
  4160f8:	pop    ebx
  4160f9:	ins    BYTE PTR es:[edi],dx
  4160fa:	xchg   esi,eax
  4160fb:	push   edx
  4160fc:	cwde   
  4160fd:	adc    DWORD PTR [ebx],ebx
  4160ff:	cmp    ecx,DWORD PTR [edx]
  416101:	repz dec eax
  416103:	imul   eax,DWORD PTR [edi],0x40
  416106:	adc    eax,0x6ea1a56e
  41610b:	pop    edi
  41610c:	mov    BYTE PTR [ecx],0x31
  41610f:	lahf   
  416110:	push   0xffffff81
  416112:	push   ebx
  416113:	mov    edx,0x4a25966f
  416118:	ror    BYTE PTR [esi],cl
  41611a:	pop    ebp
  41611b:	xlat   BYTE PTR ds:[ebx]
  41611c:	cdq    
  41611d:	cmp    al,0x2c
  41611f:	xchg   esi,eax
  416120:	mov    edx,DWORD PTR [ebx]
  416122:	ins    DWORD PTR es:[edi],dx
  416123:	xor    eax,0xd893ea1d
  416128:	or     eax,0xfbd75a72
  41612d:	bound  esp,QWORD PTR ds:0xc43a550b
  416133:	lea    eax,[ecx+0x5f191edb]
  416139:	jmp    DWORD PTR [edx+0x35f7dde6]
  41613f:	loop   0x4160cc
  416141:	xchg   ebp,eax
  416142:	push   esi
  416143:	xor    al,0xc5
  416145:	adc    edi,0x1dd743e9
  41614b:	rcl    BYTE PTR [edi-0x2f943c3b],cl
  416151:	mov    al,ds:0x37e2c494
  416156:	or     ah,BYTE PTR [edi]
  416158:	push   ebp
  416159:	xor    al,0x69
  41615b:	pop    eax
  41615c:	int    0xd
  41615e:	sub    eax,0xfc1431fc
  416163:	aaa    
  416164:	mov    edi,DWORD PTR [ebx]
  416166:	xchg   ecx,eax
  416167:	cmp    BYTE PTR [eax+0x20],0x44
  41616b:	xlat   BYTE PTR ds:[ebx]
  41616c:	rol    BYTE PTR [esi+0x3],1
  41616f:	sbb    esi,DWORD PTR [ebp+edi*2-0x15]
  416173:	ffree  st(6)
  416175:	iret   
  416176:	cwde   
  416177:	(bad)  
  416178:	xchg   ebp,eax
  416179:	les    edx,FWORD PTR [ebx]
  41617b:	mov    ch,0x5
  41617d:	clc    
  41617e:	dec    edi
  41617f:	gs add al,0x71
  416182:	loop   0x41616a
  416184:	dec    edx
  416185:	inc    edi
  416186:	bound  eax,QWORD PTR [ecx+0x19906949]
  41618c:	lahf   
  41618d:	stos   DWORD PTR es:[edi],eax
  41618e:	ss (bad) 
  416190:	out    0x1,al
  416192:	fadd   DWORD PTR [edx-0x5b]
  416195:	mov    ch,0x54
  416197:	loope  0x416211
  416199:	lods   al,BYTE PTR ds:[esi]
  41619a:	fisubr WORD PTR [edi-0x34b684a1]
  4161a0:	mov    bh,0xb7
  4161a2:	sti    
  4161a3:	stos   DWORD PTR es:[edi],eax
  4161a4:	push   ss
  4161a5:	mov    ch,0x49
  4161a7:	cmp    BYTE PTR [ebp-0x47b3666e],bh
  4161ad:	(bad)  
  4161ae:	xor    dl,dl
  4161b0:	add    DWORD PTR [ecx],edx
  4161b2:	(bad)  
  4161b3:	fld    DWORD PTR [ecx-0x74]
  4161b6:	std    
  4161b7:	test   al,0x93
  4161b9:	or     al,0x86
  4161bb:	lods   al,BYTE PTR ds:[esi]
  4161bc:	arpl   WORD PTR [esp+ebx*1+0x3abff999],ax
  4161c3:	retf   
  4161c4:	and    al,0xd5
  4161c6:	add    edi,DWORD PTR [ebx-0x515ce11c]
  4161cc:	pop    ebx
  4161cd:	pop    es
  4161ce:	mov    edx,0x3e0d9a8f
  4161d3:	inc    esp
  4161d4:	jp     0x416188
  4161d6:	adc    eax,0x1872ed42
  4161db:	pop    edi
  4161dc:	retf   
  4161dd:	adc    dh,al
  4161df:	push   es
  4161e0:	push   edx
  4161e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161e2:	adc    DWORD PTR [ecx+0x1b8cb95e],edi
  4161e8:	add    edi,DWORD PTR fs:[ecx+0x141580b0]
  4161ef:	fs push 0x89398903
  4161f5:	xchg   ebx,eax
  4161f6:	mov    ds:0x4ac2d70c,eax
  4161fb:	div    ebp
  4161fd:	aam    0xb9
  4161ff:	arpl   si,bp
  416201:	dec    ebp
  416202:	(bad)  
  416203:	cli    
  416204:	adc    BYTE PTR ds:0x8905c80a,dl
  41620a:	sahf   
  41620b:	shr    ax,1
  41620e:	imul   ebp,DWORD PTR [ebx-0x606eba5e],0x2fa7a3c
  416218:	mov    ?,WORD PTR [eax+0x20]
  41621b:	mov    esp,0x9addea2
  416220:	aad    0x4f
  416222:	test   BYTE PTR [edx+ebp*8],ah
  416225:	loope  0x41623e
  416227:	xor    esp,edx
  416229:	mov    ds:0xba7f534f,eax
  41622e:	and    BYTE PTR [esi+0x26],al
  416231:	mov    ebx,0xd8779cfe
  416236:	sbb    al,0x91
  416238:	test   DWORD PTR [eax+0x73],edx
  41623b:	adc    BYTE PTR [ecx],ch
  41623d:	fwait
  41623e:	xor    eax,0xf95ccc0c
  416243:	test   DWORD PTR [eax-0x4598838f],eax
  416249:	daa    
  41624a:	fsubr  QWORD PTR [esi+0x0]
  41624d:	sbb    ecx,0x5c6d13b
  416253:	(bad)  
  416254:	and    eax,0x93418498
  416259:	out    dx,al
  41625a:	cli    
  41625b:	rcr    bh,0x27
  41625e:	loope  0x416230
  416260:	adc    ecx,edi
  416262:	std    
  416263:	cmp    DWORD PTR [edx+esi*2+0x2bddd5d9],ebp
  41626a:	repnz pushf 
  41626c:	adc    bh,BYTE PTR [esi+0x35]
  41626f:	mov    BYTE PTR [ebx],0xc0
  416272:	inc    edi
  416273:	imul   esp,esp,0xa2ffcf71
  416279:	mov    dh,0xa4
  41627b:	cs cmp ebx,edx
  41627e:	sar    dh,0xa5
  416281:	lods   al,BYTE PTR ds:[esi]
  416282:	sbb    BYTE PTR [ebx-0x18],dl
  416285:	mov    bl,0xdd
  416287:	out    0x8,al
  416289:	pop    edi
  41628a:	adc    al,0xcd
  41628c:	push   ecx
  41628d:	psubw  mm4,mm1
  416290:	rcl    DWORD PTR [edx],cl
  416292:	ror    DWORD PTR [ecx+eiz*4+0x36],cl
  416296:	pop    ss
  416297:	inc    ebp
  416298:	inc    ecx
  416299:	mov    ebp,0x8831455d
  41629e:	xor    al,0x6c
  4162a0:	pop    edx
  4162a1:	xchg   ecx,eax
  4162a2:	sbb    eax,esi
  4162a4:	pop    esp
  4162a5:	pop    ebx
  4162a6:	aam    0x7a
  4162a8:	xor    BYTE PTR [ecx-0x16658f7d],bh
  4162ae:	(bad)  
  4162af:	mov    ah,0x65
  4162b1:	inc    eax
  4162b2:	repz aad 0x63
  4162b5:	jecxz  0x4162d5
  4162b7:	adc    cl,BYTE PTR [esp+edx*8+0x888d6c4]
  4162be:	mov    ah,0x56
  4162c0:	cmc    
  4162c1:	mov    edx,0x2c340e78
  4162c6:	sbb    DWORD PTR [edi+0x52],edi
  4162c9:	or     DWORD PTR fs:[edx+eiz*1],0x4552de55
  4162d1:	dec    esi
  4162d2:	mov    eax,0x52973dd4
  4162d7:	xor    edi,ebx
  4162d9:	repz cmc 
  4162db:	pop    edx
  4162dc:	fild   QWORD PTR [edx+ebx*1]
  4162df:	add    al,0xbe
  4162e2:	out    0xc3,eax
  4162e4:	idiv   DWORD PTR [esi+0x15]
  4162e7:	add    ah,BYTE PTR [eax]
  4162e9:	fldcw  WORD PTR fs:[esi+0x6fd936bc]
  4162f0:	mov    dh,0xea
  4162f2:	iret   
  4162f3:	data16 (bad) 
  4162f5:	sbb    cl,ch
  4162f7:	mov    ch,0x9a
  4162f9:	out    dx,eax
  4162fa:	add    ebx,DWORD PTR [ecx+0x41dd8387]
  416300:	jp     0x416287
  416302:	test   eax,0x88e44904
  416307:	in     al,0x2
  416309:	jmp    0x1bd1:0xb82620bf
  416310:	nop
  416311:	ret    
  416312:	int    0xbf
  416314:	cmp    al,0xa1
  416316:	adc    eax,0x2fcbdb6f
  41631b:	mov    ebp,0xa22083ee
  416320:	dec    esi
  416321:	test   DWORD PTR [ebp+0x351faaf0],edi
  416327:	mov    ch,0xaa
  416329:	mov    ebp,0xed310d3e
  41632e:	call   0x81fa:0x657f7aa3
  416335:	xchg   BYTE PTR [eax],cl
  416337:	xchg   ebx,eax
  416338:	jmp    0x568c:0x674b0a9f
  41633f:	nop
  416340:	rol    BYTE PTR ds:0xc0ec6ab4,1
  416346:	in     eax,dx
  416347:	(bad)  
  416348:	mov    ebp,0x1058cf06
  41634d:	jmp    0x83a97eec
  416352:	dec    ebx
  416353:	pop    DWORD PTR [eax+edx*4]
  416356:	add    BYTE PTR [edi],dh
  416358:	(bad)  
  41635a:	ds bsr esp,ebx
  41635e:	mov    ebx,0x432fa8f9
  416363:	jo     0x416321
  416365:	in     al,0x23
  416367:	hlt    
  416368:	lods   al,BYTE PTR ds:[esi]
  416369:	call   0x588fa34f
  41636e:	sbb    DWORD PTR [edx],0xffffffed
  416371:	gs dec esp
  416373:	sub    DWORD PTR [ecx+ebp*1],ecx
  416376:	sbb    DWORD PTR [eax+0x78b7f3a7],ecx
  41637c:	das    
  41637d:	adc    ch,bl
  41637f:	sub    esp,eax
  416381:	jne    0x416381
  416383:	sub    edx,ebp
  416385:	aas    
  416386:	stc    
  416387:	xor    DWORD PTR [esi],edi
  416389:	push   0xffffffc0
  41638b:	adc    esi,ecx
  41638d:	cs popa 
  41638f:	sbb    DWORD PTR [ebx+0x7a9a2809],edi
  416395:	xchg   edi,eax
  416396:	adc    bl,BYTE PTR [ebp+eiz*1+0x1d716583]
  41639d:	push   esp
  41639e:	xchg   dh,dh
  4163a0:	sbb    BYTE PTR [ecx-0x20],ah
  4163a3:	ret    
  4163a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163a5:	mov    ds:0xff0c30bf,al
  4163aa:	rol    bl,cl
  4163ac:	fidiv  WORD PTR [ecx]
  4163ae:	test   ah,cl
  4163b0:	add    ch,bh
  4163b2:	mov    bh,0x47
  4163b4:	pop    ds
  4163b5:	iret   
  4163b6:	jns    0x41639d
  4163b8:	xchg   edx,eax
  4163b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163ba:	inc    ebx
  4163bb:	call   0xbae0:0xfe33ecf9
  4163c2:	inc    eax
  4163c3:	push   ss
  4163c4:	inc    esi
  4163c5:	lods   eax,DWORD PTR ds:[esi]
  4163c6:	mov    ah,0x4f
  4163c8:	fcom   DWORD PTR [edx+0x16c10602]
  4163ce:	inc    edx
  4163cf:	pop    ecx
  4163d0:	rcl    BYTE PTR [ecx-0x3a2cd5bb],1
  4163d6:	xchg   ecx,eax
  4163d7:	outs   dx,DWORD PTR ds:[esi]
  4163d8:	in     al,0x95
  4163da:	cdq    
  4163db:	cmc    
  4163dc:	ret    0x9ae0
  4163df:	adc    eax,0xd97c3b88
  4163e4:	(bad)  
  4163e5:	in     al,dx
  4163e6:	xor    BYTE PTR [ebx],ch
  4163e8:	sbb    DWORD PTR [ebp*4-0x3adbd1e0],edi
  4163ef:	pop    ds
  4163f0:	cmp    ebp,ebp
  4163f2:	mov    dl,BYTE PTR [edx]
  4163f4:	adc    BYTE PTR [edx+ebp*4-0x5d935142],bh
  4163fb:	daa    
  4163fc:	shr    BYTE PTR [ebp+ecx*1-0x26],1
  416400:	pop    edx
  416401:	pop    ecx
  416402:	mov    bl,0xd3
  416404:	enter  0x3ef3,0xe7
  416408:	jns    0x416394
  41640a:	cdq    
  41640b:	and    ah,0x9c
  41640e:	mov    edx,0x34bba73
  416413:	mov    esp,0xd85d3908
  416418:	fwait
  416419:	mov    WORD PTR [esi+0xf41953a],?
  41641f:	cmp    al,BYTE PTR [esi+0x3e]
  416422:	jne    0x4163bf
  416424:	mov    edi,0x741e6d8c
  416429:	push   es
  41642a:	jbe    0x4163e2
  41642c:	mov    al,ds:0x172df8b7
  416431:	dec    ebx
  416432:	cmc    
  416433:	push   ecx
  416434:	xor    BYTE PTR [eax+edi*4-0x25],al
  416438:	xlat   BYTE PTR ds:[ebx]
  416439:	mov    WORD PTR [esi+0x5eb12e21],?
  41643f:	mov    dh,0x20
  416441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416442:	inc    esi
  416443:	push   0x532e33d2
  416448:	add    esp,DWORD PTR [ebx+0x1e]
  41644b:	push   0xffffffc5
  41644d:	fcmove st,st(1)
  41644f:	inc    esp
  416450:	inc    ebp
  416451:	pushf  
  416452:	add    BYTE PTR [edi+0x4],0x9f
  416456:	inc    esi
  416457:	add    eax,0x386b6c73
  41645c:	sahf   
  41645d:	aaa    
  41645e:	retf   0x41fc
  416461:	xchg   esi,eax
  416462:	mov    edi,ebp
  416464:	jp     0x416480
  416466:	sub    BYTE PTR [edx],bh
  416468:	mov    bh,0x27
  41646a:	or     DWORD PTR [eax+0x3a8f4115],ecx
  416470:	and    eax,0x6a0b547
  416475:	test   eax,0x47b44ce
  41647a:	ins    DWORD PTR es:[edi],dx
  41647b:	push   0xa8e52e59
  416480:	popf   
  416481:	aas    
  416482:	push   esp
  416483:	mov    edi,0x21c61e1d
  416488:	in     al,0x9b
  41648a:	shl    BYTE PTR [eax-0x74],1
  41648d:	repnz xor eax,0xfedde1bd
  416493:	xchg   edi,eax
  416494:	jb     0x4164c7
  416496:	add    bl,cl
  416498:	mov    eax,0x83c89324
  41649d:	jae    0x4164ec
  41649f:	push   ebx
  4164a0:	mov    ?,WORD PTR [ebp-0x46]
  4164a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164a4:	arpl   di,bx
  4164a6:	das    
  4164a7:	pop    edx
  4164a8:	cmp    ah,dh
  4164aa:	add    eax,0x63c97be
  4164af:	xchg   BYTE PTR [ebx],bh
  4164b1:	test   eax,0xd8ad10e1
  4164b6:	adc    dh,BYTE PTR [edx+0x673a2556]
  4164bc:	stos   BYTE PTR es:[edi],al
  4164bd:	jle    0x4164bd
  4164bf:	inc    esi
  4164c0:	int    0xa4
  4164c2:	push   esp
  4164c3:	mov    ebx,0x45b416d8
  4164c8:	popf   
  4164c9:	lods   al,BYTE PTR ds:[esi]
  4164ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164cb:	or     edx,DWORD PTR [edi-0x36cf6b99]
  4164d1:	mov    dh,0x7b
  4164d3:	rol    DWORD PTR [esi],cl
  4164d5:	fist   DWORD PTR [esi-0x28]
  4164d8:	mov    al,ds:0x99f5d237
  4164dd:	mov    ah,0x8e
  4164df:	jmp    0xc854:0x3975e54a
  4164e6:	dec    ebp
  4164e7:	loop   0x416474
  4164e9:	sbb    DWORD PTR [ebp+edi*2-0x2bc5269b],ebp
  4164f0:	jae    0x4164f6
  4164f2:	mov    eax,ds:0x3b7a0d4c
  4164f7:	popf   
  4164f8:	jmp    DWORD PTR [edi+ecx*8-0x4f]
  4164fc:	test   ebx,esi
  4164fe:	sti    
  4164ff:	pop    esi
  416500:	test   al,0x6
  416502:	and    cl,ah
  416504:	push   ss
  416505:	push   ss
  416506:	dec    ebx
  416507:	gs jl  0x4164e0
  41650a:	clc    
  41650b:	cmp    al,BYTE PTR [edi]
  41650d:	lds    esp,FWORD PTR ss:[edi]
  416510:	(bad)  [esp+ebp*2-0x5dccc200]
  416517:	inc    eax
  416518:	sub    al,BYTE PTR [ebp+0x42]
  41651b:	cmp    DWORD PTR [edx+0x3c],0x931de2e6
  416522:	fidiv  DWORD PTR [esi+esi*2+0x56dde59e]
  416529:	push   ss
  41652a:	mov    edi,ds
  41652c:	add    eax,0x3f80a12e
  416531:	add    esp,DWORD PTR [ecx-0x1]
  416534:	pop    edi
  416535:	inc    BYTE PTR [edx-0x78]
  416538:	adc    al,0x6c
  41653a:	dec    ebx
  41653b:	mov    edi,0x319f76ab
  416540:	jg     0x41657f
  416542:	mov    cl,bh
  416544:	mov    DWORD PTR [edx],ecx
  416546:	int3   
  416547:	loopne 0x41653f
  416549:	push   eax
  41654a:	out    dx,al
  41654b:	sub    al,0x73
  41654d:	(bad)  
  41654f:	nop
  416550:	push   ds
  416551:	ror    BYTE PTR es:[eax-0x161148ac],cl
  416558:	pop    ebp
  416559:	(bad)  
  41655a:	or     al,0xc2
  41655c:	fstp   st(3)
  41655e:	mov    DWORD PTR [edx+0x6a],edi
  416561:	ja     0x41659c
  416563:	cmp    BYTE PTR [eax+0x72f37fbb],0x14
  41656a:	ss xchg ecx,eax
  41656c:	cld    
  41656d:	push   0x1d21aa54
  416572:	mov    ds:0x6ad305af,eax
  416578:	sub    eax,edi
  41657a:	xchg   esi,eax
  41657b:	xchg   edi,eax
  41657c:	ret    
  41657d:	mov    ecx,DWORD PTR [eax+0x23]
  416580:	sbb    edi,DWORD PTR ds:0x8a2fef5a
  416586:	jo     0x4165dd
  416588:	mov    ebx,0x905fe089
  41658d:	mov    ebp,0x10519a6e
  416592:	mov    gs,WORD PTR [ecx+eax*1+0x68498d65]
  416599:	imul   esp,esp,0x61
  41659c:	imul   ecx,DWORD PTR [edi+0xa],0x22
  4165a0:	sub    eax,ebx
  4165a2:	std    
  4165a3:	jno    0x41659d
  4165a5:	ja     0x41660f
  4165a7:	sahf   
  4165a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165a9:	std    
  4165aa:	popf   
  4165ab:	hlt    
  4165ac:	je     0x4165ba
  4165ae:	pop    es
  4165af:	icebp  
  4165b0:	and    esi,DWORD PTR [ebx+0x6eaf11b4]
  4165b6:	(bad)  
  4165b7:	repnz cmc 
  4165b9:	sti    
  4165ba:	mov    eax,ds:0x42d4fbc1
  4165bf:	xor    bl,BYTE PTR [esi+0x38]
  4165c2:	nop
  4165c3:	inc    edi
  4165c4:	clc    
  4165c5:	ret    0x35fd
  4165c8:	jb     0x416617
  4165ca:	fisub  WORD PTR [ebp+0x593eebf6]
  4165d0:	mov    ds:0x460f888e,al
  4165d5:	sbb    BYTE PTR [ebx],ah
  4165d7:	push   0xffffff8c
  4165d9:	xor    cl,ch
  4165db:	pop    ebx
  4165dc:	add    eax,0x40
  4165df:	sbb    eax,0x7e5b642
  4165e4:	loop   0x41658a
  4165e6:	cdq    
  4165e7:	xchg   esp,eax
  4165e8:	mov    bl,0xbd
  4165ea:	mov    eax,ds:0x4ac24d24
  4165ef:	and    DWORD PTR [edi-0x35],ebx
  4165f2:	lock sar DWORD PTR [ebx],1
  4165f5:	mov    eax,ebx
  4165f7:	jge    0x416625
  4165f9:	out    0xa1,eax
  4165fb:	mov    dl,0x66
  4165fd:	sbb    BYTE PTR [ebx+0x8a241b1],0x50
  416604:	iret   
  416605:	in     eax,dx
  416606:	stc    
  416607:	mov    ds:0xdcbcb005,al
  41660c:	lods   al,BYTE PTR ds:[esi]
  41660d:	add    DWORD PTR [ebx],eax
  41660f:	jle    0x41660b
  416611:	fisub  DWORD PTR [edx]
  416613:	and    ah,dh
  416615:	jl     0x4165be
  416617:	stc    
  416618:	mov    edi,DWORD PTR [edi]
  41661a:	pop    edi
  41661b:	fisttp DWORD PTR [eax+0x63]
  41661e:	pushf  
  41661f:	pop    ss
  416620:	ins    DWORD PTR es:[edi],dx
  416621:	icebp  
  416622:	shl    BYTE PTR [ebp-0x34a089b8],1
  416628:	pop    edi
  416629:	mov    bh,0x1d
  41662b:	push   0x49e46b2c
  416630:	sbb    BYTE PTR [ebx+esi*4-0x5b8a3d11],0xb6
  416638:	nop
  416639:	jb     0x416698
  41663b:	hlt    
  41663c:	test   BYTE PTR [ebp-0x2d811c4f],bh
  416642:	cmp    bl,ch
  416644:	fld    DWORD PTR [ebp-0x42]
  416648:	icebp  
  416649:	test   DWORD PTR [ebx-0x47db0e9c],esp
  41664f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416650:	cmc    
  416651:	nop
  416652:	mov    al,ds:0xd1e3b74
  416657:	sbb    eax,0x6a988e97
  41665c:	jbe    0x416637
  41665e:	call   DWORD PTR [ebx+0x4f]
  416661:	xchg   dl,ah
  416663:	fisub  WORD PTR [eax-0x6f129a66]
  416669:	and    eax,0x42dc6040
  41666e:	mov    eax,ds:0x8d3c50a4
  416673:	(bad)  
  416674:	mov    ecx,0x65444fea
  416679:	test   BYTE PTR [ebp+0x5],ch
  41667c:	popf   
  41667d:	or     edx,DWORD PTR [ebx+0x28]
  416680:	xchg   DWORD PTR [edi-0x8],ecx
  416683:	jle    0x4166d9
  416685:	lahf   
  416686:	mov    fs,WORD PTR [ecx-0x34c1432f]
  41668c:	(bad)  
  41668d:	bswap  edx
  41668f:	(bad)  
  416690:	jge    0x4166c4
  416692:	(bad)  
  416693:	fs jnp 0x4166ae
  416696:	or     eax,0x45fac2a5
  41669b:	mov    ecx,0xbf2c6cc9
  4166a0:	mov    ebp,0xa28442ae
  4166a5:	jo     0x416631
  4166a7:	js     0x4166fd
  4166a9:	test   al,0x3d
  4166ab:	lods   eax,DWORD PTR ds:[esi]
  4166ac:	pop    esi
  4166ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166ae:	xchg   edi,eax
  4166af:	(bad)  
  4166b1:	mov    ds:0x70f070b3,eax
  4166b6:	dec    ecx
  4166b7:	(bad)  
  4166b9:	push   ss
  4166ba:	jmp    0x99abf75c
  4166bf:	or     eax,0xe33afbe2
  4166c4:	cmp    DWORD PTR [ecx+edx*8+0x1c],edx
  4166c8:	lods   al,BYTE PTR ds:[esi]
  4166c9:	and    bl,BYTE PTR [ecx-0x6ad20e36]
  4166cf:	mov    ebx,0xaf27d966
  4166d4:	cmp    eax,ebp
  4166d6:	out    0x23,eax
  4166d8:	pusha  
  4166d9:	add    BYTE PTR [ecx+0x4c7e287b],dh
  4166df:	call   DWORD PTR [esi-0x76dcce46]
  4166e5:	dec    edx
  4166e6:	(bad)  
  4166e7:	cwde   
  4166e8:	pop    ebx
  4166e9:	mov    ecx,0x3a47f2b2
  4166ee:	pop    eax
  4166ef:	frstor [ecx]
  4166f1:	lds    ebp,FWORD PTR [edx]
  4166f3:	jle    0x4166a8
  4166f5:	stc    
  4166f6:	(bad)  
  4166f7:	std    
  4166f8:	jmp    0x416719
  4166fa:	lods   eax,DWORD PTR ds:[esi]
  4166fb:	fbstp  TBYTE PTR [esi]
  4166fd:	mov    bl,BYTE PTR [ecx]
  4166ff:	dec    ebx
  416700:	xor    bl,BYTE PTR [edx-0x4]
  416703:	push   es
  416704:	xchg   edi,eax
  416705:	mov    al,ds:0xf07576a1
  41670a:	test   al,0x18
  41670c:	mov    esp,0x434a287b
  416711:	mov    ebx,0x57f013ef
  416716:	imul   esp,DWORD PTR [eax+0x2508d05f],0xffffffa2
  41671d:	rol    DWORD PTR [eax+0x213e2900],1
  416723:	jno    0x4166cd
  416725:	mov    cl,BYTE PTR [esi-0x64548532]
  41672b:	ds in  ax,dx
  41672e:	stos   DWORD PTR es:[edi],eax
  41672f:	int3   
  416730:	je     0x4167ad
  416732:	mov    ds:0x16c98761,al
  416737:	test   eax,0x7d97823
  41673c:	push   esp
  41673d:	(bad)  
  41673e:	call   DWORD PTR [ecx-0x4c]
  416741:	fistp  WORD PTR [ecx]
  416743:	xchg   ebp,eax
  416744:	stos   BYTE PTR es:[edi],al
  416745:	xchg   edx,eax
  416746:	jb     0x4166dd
  416748:	xchg   esi,eax
  416749:	push   ebx
  41674a:	mov    esp,0x88666e57
  41674f:	and    bl,bl
  416751:	jne    0x416771
  416753:	push   eax
  416754:	stos   DWORD PTR es:[edi],eax
  416755:	mov    dh,BYTE PTR [eax]
  416757:	ins    BYTE PTR es:[edi],dx
  416758:	mov    bh,0x24
  41675a:	mov    dh,0xef
  41675c:	pop    edx
  41675d:	clc    
  41675e:	pop    es
  41675f:	or     esp,DWORD PTR [esi]
  416761:	(bad)  [ecx]
  416763:	push   eax
  416764:	mov    dl,0xa9
  416766:	inc    esi
  416767:	aaa    
  416768:	mov    esp,0xb07edb6a
  41676d:	push   ds
  41676e:	mov    edx,0xedaaa99d
  416773:	daa    
  416774:	xor    DWORD PTR [esi+ebp*1+0x23ad38f0],esp
  41677b:	std    
  41677c:	paddb  mm6,QWORD PTR [esi]
  41677f:	jns    0x416796
  416781:	jl     0x41674c
  416783:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416784:	pop    esp
  416785:	arpl   WORD PTR [edx-0x45],cx
  416788:	xchg   ebx,eax
  416789:	(bad)  
  41678a:	jno    0x4167d4
  41678c:	dec    eax
  41678d:	and    al,BYTE PTR [ebp-0x2025a159]
  416793:	repnz and dl,BYTE PTR ds:0x59785323
  41679a:	push   0xfffffff6
  41679c:	data16 fwait
  41679e:	or     DWORD PTR [edi],esi
  4167a0:	lock add ebx,DWORD PTR [esi]
  4167a3:	repz add eax,0x61018a56
  4167a9:	sub    eax,0x6b7ebe40
  4167ae:	cmp    eax,0xfddecb4
  4167b3:	and    eax,0xc35f5a6d
  4167b8:	rcr    DWORD PTR [edx-0x25],0xf1
  4167bc:	mov    ebp,0xe68134ea
  4167c1:	cmp    DWORD PTR [ebp-0x75],ecx
  4167c4:	add    BYTE PTR ds:0xd597c346,al
  4167ca:	xor    dh,ch
  4167cc:	shl    ah,1
  4167ce:	pop    edi
  4167cf:	daa    
  4167d0:	pop    esp
  4167d1:	int3   
  4167d2:	mov    cl,0x8b
  4167d4:	jmp    0x473f:0x330db5a5
  4167db:	xchg   DWORD PTR [ecx],ebp
  4167dd:	xor    edx,eax
  4167df:	xor    DWORD PTR [ebx],0x55
  4167e2:	imul   edx,DWORD PTR [eax-0x4579f393],0x54fa74dd
  4167ec:	xchg   DWORD PTR [ebx],ecx
  4167ee:	and    al,0x7e
  4167f0:	mov    eax,0x31aac9da
  4167f5:	stc    
  4167f6:	sub    esp,ebp
  4167f8:	retf   0x1154
  4167fb:	xor    bl,cl
  4167fd:	sub    dl,dh
  4167ff:	add    esp,DWORD PTR [edx-0x34a4b4ed]
  416805:	sbb    DWORD PTR [edi],edx
  416807:	or     BYTE PTR [edx-0x3294562],dh
  41680d:	icebp  
  41680e:	mov    ecx,0x45025cdf
  416813:	push   eax
  416814:	add    eax,ebx
  416816:	cmp    BYTE PTR [ecx+0x2f],bl
  416819:	mov    bl,0xfa
  41681b:	(bad)  
  41681c:	mov    ch,cl
  41681e:	fnsave [edi-0x2c]
  416821:	sbb    ah,BYTE PTR [edx]
  416823:	rcl    BYTE PTR [ebp+edi*8-0x5b],1
  416827:	mov    ebp,0x7f4e057c
  41682c:	add    bl,BYTE PTR [ecx]
  41682e:	repz cmp BYTE PTR [edx+0x7ffd9c8f],0xf4
  416836:	push   0x21354f81
  41683b:	nop
  41683c:	std    
  41683d:	shl    BYTE PTR [eax+0x2c],0x3d
  416841:	bound  eax,QWORD PTR [eax+0x73]
  416844:	cwde   
  416845:	sbb    DWORD PTR [eax],ebx
  416847:	inc    edx
  416848:	inc    edi
  416849:	jg     0x416828
  41684b:	mov    esp,0xd3ee2bd2
  416850:	call   0x9273aaa2
  416855:	lahf   
  416856:	mov    cl,0x69
  416858:	dec    edi
  416859:	push   ebx
  41685a:	push   eax
  41685b:	test   BYTE PTR [edi],ah
  41685d:	jo     0x416831
  41685f:	pop    edx
  416860:	cmp    BYTE PTR [ebp+0x35],dh
  416863:	and    DWORD PTR [eiz*2+0x4bcdf998],0xfffffff7
  41686b:	aaa    
  41686c:	xchg   esp,eax
  41686d:	inc    eax
  41686e:	mov    ds:0xa968eeee,al
  416873:	ds stos DWORD PTR es:[edi],eax
  416875:	push   DWORD PTR [ebx+0x5583393e]
  41687b:	push   edi
  41687c:	int3   
  41687d:	in     al,dx
  41687e:	mov    dh,0x45
  416880:	push   esi
  416881:	mov    cs,edx
  416883:	gs or  cl,dh
  416886:	ins    BYTE PTR es:[edi],dx
  416887:	sub    ecx,DWORD PTR [eax]
  416889:	pop    es
  41688a:	add    eax,0x68ed7c2f
  41688f:	adc    BYTE PTR [eax+0x6f0042f6],ch
  416895:	xchg   ebx,eax
  416896:	dec    esi
  416897:	pusha  
  416898:	lock mov ds:0x32f91cf,eax
  41689e:	xchg   esp,eax
  41689f:	pop    edi
  4168a0:	outs   dx,BYTE PTR ds:[esi]
  4168a1:	sbb    esp,ebp
  4168a3:	test   ch,cl
  4168a5:	add    DWORD PTR ds:[ebx+0x6e],edx
  4168a9:	add    DWORD PTR [edi-0x13],eax
  4168ac:	or     eax,DWORD PTR ds:0x1b76ee06
  4168b2:	mov    esp,0x9bc28c14
  4168b7:	ja     0x4168cc
  4168b9:	sub    BYTE PTR [eax-0x62],dh
  4168bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168bd:	add    BYTE PTR [edx+0xd],ah
  4168c0:	call   0x7997:0x9e4fe9b1
  4168c7:	mov    esp,DWORD PTR [esi-0x63]
  4168ca:	push   edx
  4168cb:	stos   DWORD PTR es:[edi],eax
  4168cc:	pop    ebp
  4168cd:	push   ebx
  4168ce:	mov    eax,0x66c3d00
  4168d3:	hlt    
  4168d4:	mov    bl,0x91
  4168d6:	js     0x416887
  4168d8:	sbb    eax,0x1a8e61eb
  4168dd:	or     bl,BYTE PTR [edx]
  4168df:	jne    0x4168c2
  4168e1:	aaa    
  4168e2:	mov    ds:0x1dc7cabd,eax
  4168e7:	lods   eax,DWORD PTR ds:[esi]
  4168e8:	fadd   DWORD PTR [edx-0x65]
  4168eb:	cmp    ecx,DWORD PTR [esp+edi*1]
  4168ee:	mov    ch,0xf6
  4168f0:	inc    ebx
  4168f1:	in     al,dx
  4168f2:	add    DWORD PTR [edi-0x6e],edi
  4168f5:	cmp    DWORD PTR [esi+0x7a],edi
  4168f8:	scas   eax,DWORD PTR es:[edi]
  4168f9:	int    0xe1
  4168fb:	fbld   TBYTE PTR [eax*2+0x8844c17]
  416902:	adc    al,bl
  416904:	jne    0x41697a
  416906:	adc    al,0x8d
  416908:	dec    edx
  416909:	mov    ebp,0xb5602387
  41690e:	pop    esi
  41690f:	mov    al,0xf5
  416911:	nop
  416912:	test   BYTE PTR [esi+0x76],bl
  416915:	or     bh,BYTE PTR [ecx]
  416917:	and    bl,ah
  416919:	sti    
  41691a:	ror    BYTE PTR [ebx-0x4a],1
  41691d:	push   ecx
  41691e:	aam    0xe9
  416920:	jmp    0x41699b
  416922:	sbb    DWORD PTR [ebx+0x2c0e8d2e],eax
  416928:	(bad)  
  416929:	out    dx,al
  41692a:	sub    bl,0x1a
  41692d:	jmp    0x1be14eef
  416932:	sbb    ch,BYTE PTR [eax*8-0x161b960c]
  416939:	jg     0x416994
  41693b:	test   al,0x75
  41693d:	test   al,0x1d
  41693f:	sub    eax,0x30800af6
  416944:	gs xchg ebp,eax
  416946:	xor    BYTE PTR [edi+ecx*2],ah
  416949:	leave  
  41694a:	in     eax,0xb4
  41694c:	loopne 0x4168e1
  41694e:	mov    bl,0xd8
  416950:	inc    ebx
  416951:	iret   
  416952:	(bad)  
  416953:	mov    ah,0xec
  416955:	ret    0x6d31
  416958:	and    BYTE PTR [ebx+0x1cdba183],al
  41695e:	pop    esp
  41695f:	aaa    
  416960:	cmc    
  416961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416962:	lods   al,BYTE PTR ds:[esi]
  416963:	add    ebx,edx
  416965:	pop    ds
  416966:	jo     0x4168f3
  416968:	or     bl,bl
  41696a:	imul   BYTE PTR [ebp+0x475f045d]
  416970:	xchg   ebp,eax
  416971:	inc    edi
  416972:	push   DWORD PTR [edx-0x46]
  416975:	sub    ah,BYTE PTR ds:0x9e4a045d
  41697b:	out    0x3d,al
  41697d:	xchg   ah,al
  41697f:	sbb    eax,0x118d7969
  416984:	inc    ecx
  416985:	jno    0x4169b5
  416987:	cmc    
  416988:	je     0x4169dd
  41698a:	add    DWORD PTR [esi],esi
  41698c:	out    dx,eax
  41698d:	icebp  
  41698e:	dec    edi
  41698f:	call   0x58b7:0xc8daad01
  416996:	lea    esi,[edx-0x30]
  416999:	mov    dh,0xb0
  41699b:	and    cl,BYTE PTR [esi+0x44ff70d2]
  4169a1:	cmp    al,0x74
  4169a3:	(bad)  [ebp+0x12b6b923]
  4169a9:	and    BYTE PTR [edi],dh
  4169ab:	adc    bh,0x3
  4169ae:	cdq    
  4169af:	lods   al,BYTE PTR ds:[esi]
  4169b0:	mov    dl,0xa8
  4169b2:	aad    0x3e
  4169b4:	xchg   esi,eax
  4169b5:	(bad)  
  4169b6:	and    ah,cl
  4169b8:	mov    ebx,0xda0857dc
  4169bd:	pop    ecx
  4169be:	mov    ch,0x86
  4169c0:	ins    BYTE PTR es:[edi],dx
  4169c1:	dec    edi
  4169c2:	bound  esi,QWORD PTR [ecx+0x6b1b0329]
  4169c8:	pop    eax
  4169c9:	les    eax,FWORD PTR [ebp+0x77925496]
  4169cf:	xor    al,0x7d
  4169d1:	xchg   dl,ch
  4169d3:	aaa    
  4169d4:	mov    al,0x9e
  4169d6:	or     edi,DWORD PTR [edi-0x198361d9]
  4169dc:	stos   BYTE PTR es:[edi],al
  4169dd:	jle    0x4169c8
  4169df:	in     eax,dx
  4169e0:	pop    es
  4169e1:	fs jl  0x4169ef
  4169e4:	push   eax
  4169e5:	push   ecx
  4169e6:	mov    WORD PTR [esi-0x6],fs
  4169e9:	repnz fdivr st,st(3)
  4169ec:	std    
  4169ed:	xchg   edi,eax
  4169ee:	mov    cl,0xf
  4169f0:	sub    DWORD PTR [edi-0xe],esi
  4169f3:	inc    ecx
  4169f4:	mov    dh,bh
  4169f6:	adc    BYTE PTR [edx+0x1c0097e4],bl
  4169fc:	test   eax,0x41dc1fbd
  416a01:	(bad)  
  416a02:	fdiv   QWORD PTR ds:0x6c7086a
  416a08:	aad    0x10
  416a0a:	popa   
  416a0b:	fwait
  416a0c:	xor    dh,0x22
  416a0f:	fadd   QWORD PTR [edx+0x62f95e72]
  416a15:	sbb    al,0x58
  416a17:	ins    DWORD PTR es:[edi],dx
  416a18:	mov    ecx,0x750c8a95
  416a1d:	stos   BYTE PTR es:[edi],al
  416a1e:	int3   
  416a1f:	les    eax,FWORD PTR [esi]
  416a21:	add    DWORD PTR [ebx+0x49],0x5a
  416a25:	pop    edi
  416a26:	or     bl,ch
  416a28:	dec    esi
  416a29:	pushf  
  416a2a:	add    dl,dh
  416a2c:	call   0xf96e9b9d
  416a31:	sbb    ch,BYTE PTR [edi-0x5a]
  416a34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a35:	sub    eax,0x6b916a87
  416a3a:	and    dl,ch
  416a3c:	pop    ebp
  416a3d:	fdiv   DWORD PTR [ecx-0x61]
  416a40:	mov    WORD PTR [esi+0x4583f2c4],ss
  416a46:	jecxz  0x416abc
  416a48:	cmp    ecx,eax
  416a4a:	push   ebp
  416a4b:	mov    cl,0xcd
  416a4d:	shl    BYTE PTR [eax-0x2d],0xe7
  416a51:	pop    ebx
  416a52:	lods   eax,DWORD PTR ds:[esi]
  416a53:	add    DWORD PTR [ebx],edi
  416a55:	mov    edi,?
  416a57:	jbe    0x416a9f
  416a59:	dec    edi
  416a5b:	retf   
  416a5c:	sbb    DWORD PTR [eax],eax
  416a5e:	xchg   edi,eax
  416a5f:	outs   dx,BYTE PTR ds:[esi]
  416a60:	in     al,dx
  416a61:	inc    esi
  416a62:	rcl    DWORD PTR [ecx+edx*8-0x3a],0xe4
  416a67:	ss dec esi
  416a69:	jg     0x416ade
  416a6b:	es retf 
  416a6d:	mov    ds:0xb2dac7ef,al
  416a72:	or     al,0x2
  416a74:	and    al,0x2e
  416a76:	(bad)  
  416a77:	cmc    
  416a78:	test   al,0x57
  416a7a:	inc    BYTE PTR [ebx+edx*4+0x5519b8f4]
  416a81:	bound  edi,QWORD PTR [edi-0x23]
  416a84:	pop    ds
  416a85:	mov    ah,0xa0
  416a87:	popf   
  416a88:	sahf   
  416a89:	cmp    eax,0x4cea58ec
  416a8e:	fsub   DWORD PTR [ecx]
  416a90:	popf   
  416a91:	inc    eax
  416a92:	test   eax,0xf8288e94
  416a97:	inc    ecx
  416a98:	test   ecx,ecx
  416a9a:	jne    0x416a79
  416a9c:	out    0x32,eax
  416a9e:	jl     0x416a3f
  416aa0:	mov    ebx,0x600644da
  416aa5:	call   DWORD PTR [eax-0x5c]
  416aa8:	nop
  416aa9:	lds    edx,FWORD PTR [ebx+eax*2-0x4]
  416aad:	mov    eax,esp
  416aaf:	imul   DWORD PTR [edi-0x2b]
  416ab2:	(bad)  [edx+0x74]
  416ab5:	call   0x5e0e66d4
  416aba:	repnz mov eax,ds:0xee54e5
  416ac0:	sbb    DWORD PTR [edi+0x2],ebx
  416ac3:	aad    0x7d
  416ac5:	repz push 0x37e5f5ee
  416acb:	push   ss
  416acc:	ds xchg ebx,eax
  416ace:	sub    bh,BYTE PTR [ebp+0x77]
  416ad1:	lahf   
  416ad2:	pop    ecx
  416ad3:	xor    DWORD PTR ds:0x3b325746,esp
  416ad9:	jecxz  0x416a8c
  416adb:	xchg   DWORD PTR [esp+eiz*4-0x7a],edi
  416adf:	mov    ebp,0xac5ae0c4
  416ae4:	shl    DWORD PTR [edx],cl
  416ae6:	push   ds
  416ae7:	fsub   DWORD PTR [edi-0x459eb16a]
  416aed:	pop    es
  416aee:	and    DWORD PTR [edi+esi*2-0x6e],ebp
  416af2:	and    dh,BYTE PTR [eax-0x5c]
  416af5:	lods   al,BYTE PTR ds:[esi]
  416af6:	gs pop esi
  416af8:	(bad)  
  416af9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416afa:	pusha  
  416afb:	jne    0x416b3a
  416afd:	jg     0x416b2b
  416aff:	xor    edx,0xdb6ca003
  416b05:	pop    ecx
  416b06:	pop    edx
  416b07:	lea    ebx,[edi*1-0x42b60d71]
  416b0e:	sbb    eax,0x649f17eb
  416b13:	jne    0x416af0
  416b15:	pop    ebx
  416b16:	call   0xb016:0x512318f0
  416b1d:	mov    ecx,0x6cc2d03d
  416b22:	cld    
  416b23:	or     al,BYTE PTR [edi]
  416b25:	shl    DWORD PTR ds:0xd0a3faf5,1
  416b2b:	xor    al,0x77
  416b2d:	clc    
  416b2e:	popa   
  416b2f:	fdivr  QWORD PTR [ecx-0x223c5314]
  416b35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b36:	fdiv   DWORD PTR ds:0x2b4fcca8
  416b3c:	push   0x3c125186
  416b41:	fst    st(1)
  416b43:	jae    0x416adb
  416b45:	sub    eax,0xd174a166
  416b4a:	push   es
  416b4b:	push   esp
  416b4c:	mov    bh,0x14
  416b4e:	cs dec ebp
  416b50:	jb     0x416bc8
  416b52:	xchg   edx,eax
  416b53:	jmp    0x416b44
  416b55:	xor    eax,0x155cba52
  416b5a:	and    eax,0x2b8a554
  416b5f:	xchg   esp,eax
  416b60:	sub    DWORD PTR [edi],ecx
  416b62:	stos   BYTE PTR es:[edi],al
  416b63:	repnz mov esp,0x84e09096
  416b69:	push   ebp
  416b6a:	scas   al,BYTE PTR es:[edi]
  416b6b:	sti    
  416b6c:	jg     0x416bc3
  416b6e:	icebp  
  416b6f:	(bad)  
  416b70:	sbb    DWORD PTR [eax+0x2b],edi
  416b73:	shl    bl,1
  416b75:	inc    edx
  416b76:	inc    edx
  416b77:	xchg   BYTE PTR [esi+0x11b45ca0],bl
  416b7d:	or     BYTE PTR [edi-0x62],al
  416b80:	push   eax
  416b81:	sti    
  416b82:	add    BYTE PTR [ebx],dl
  416b84:	stc    
  416b85:	pop    ecx
  416b86:	inc    ebp
  416b87:	test   edx,esi
  416b89:	xchg   ebp,eax
  416b8a:	mov    ds:0xb575183b,eax
  416b8f:	jg     0x416b4c
  416b91:	in     eax,dx
  416b92:	nop
  416b93:	mov    esi,ebp
  416b95:	fcomp  st(2)
  416b97:	sahf   
  416b98:	pusha  
  416b99:	and    BYTE PTR [edi+0x4b],ch
  416b9c:	(bad)  [edi+0x50]
  416b9f:	add    edx,eax
  416ba1:	add    DWORD PTR [ebx],edx
  416ba3:	jmp    0x416c0b
  416ba5:	adc    ah,bl
  416ba7:	ins    DWORD PTR es:[edi],dx
  416ba8:	sub    eax,0x54c2cee
  416bad:	push   esi
  416bae:	and    dh,BYTE PTR gs:[edx-0x1f00c0c8]
  416bb5:	xchg   BYTE PTR [eax+0x16],cl
  416bb8:	ret    
  416bb9:	add    eax,0x4a5ea5f1
  416bbe:	in     al,0x1c
  416bc0:	pop    edx
  416bc1:	addr16 sbb al,0x1d
  416bc4:	fdivr  DWORD PTR [edx-0x5acc93ef]
  416bca:	ret    0x165
  416bcd:	out    dx,eax
  416bce:	pop    esp
  416bcf:	mov    al,BYTE PTR [esi+0x6c]
  416bd2:	sub    DWORD PTR [ecx-0x44e0016f],esp
  416bd8:	xchg   ecx,eax
  416bd9:	mov    ds:0x67fedb10,al
  416bde:	sbb    BYTE PTR ds:0x1098a2e4,dh
  416be4:	dec    eax
  416be5:	push   ds
  416be6:	(bad)  
  416be7:	iret   
  416be8:	inc    ebx
  416be9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bea:	retf   
  416beb:	sbb    DWORD PTR [esi+0x7b6dedcf],esp
  416bf1:	mov    eax,0x354436b8
  416bf6:	push   esi
  416bf7:	inc    ecx
  416bf8:	push   eax
  416bf9:	arpl   WORD PTR [ebx],bp
  416bfb:	outs   dx,BYTE PTR ds:[esi]
  416bfc:	fs int3 
  416bfe:	enter  0xce96,0xab
  416c02:	mov    esp,DWORD PTR [esi-0x7b34a72]
  416c08:	pop    ds
  416c09:	dec    ebx
  416c0a:	jp     0x416b8d
  416c0c:	test   BYTE PTR [edx-0x9a43604],0x5b
  416c13:	je     0x416c03
  416c15:	pop    edi
  416c16:	in     al,dx
  416c17:	out    0xa7,al
  416c19:	push   eax
  416c1a:	lock xchg edx,eax
  416c1c:	imul   esp,ebx,0xffffffae
  416c1f:	sub    DWORD PTR [eax-0x4baea747],0xc779f57b
  416c29:	fsub   st,st(4)
  416c2b:	mov    eax,0x9736c38b
  416c30:	out    0x8b,eax
  416c32:	pop    edx
  416c33:	and    DWORD PTR [edx-0x1cbd4faf],ebx
  416c39:	and    dl,cl
  416c3b:	(bad)  
  416c3c:	cmp    DWORD PTR [eax+eiz*4-0x4e],edi
  416c40:	jmp    0x959e3532
  416c45:	fsubr  DWORD PTR [eax-0x74]
  416c48:	push   eax
  416c49:	mov    fs,ecx
  416c4b:	xor    bl,ah
  416c4d:	and    ecx,edi
  416c4f:	adc    ah,bh
  416c51:	mov    WORD PTR [edx],fs
  416c53:	ss inc ecx
  416c55:	mov    BYTE PTR [ecx+0x4],0x30
  416c59:	ret    
  416c5a:	adc    al,0x9d
  416c5c:	pop    esp
  416c5d:	popf   
  416c5e:	xor    DWORD PTR [edx-0x79f40ef1],esi
  416c64:	arpl   WORD PTR [ecx+0x2490737],sp
  416c6a:	dec    edx
  416c6b:	and    ah,BYTE PTR [edi+eiz*2-0x63541f25]
  416c72:	dec    ebx
  416c73:	add    al,0xde
  416c75:	xchg   edi,eax
  416c76:	sbb    eax,0x1535e037
  416c7b:	out    0xb3,eax
  416c7d:	call   0xe7c2:0x8fba480b
  416c84:	pop    esi
  416c85:	aas    
  416c86:	lea    ebp,[edx+0x2fc5a3aa]
  416c8c:	fwait
  416c8d:	pop    esp
  416c8e:	call   0xb2127912
  416c93:	cmc    
  416c94:	sub    al,0x12
  416c96:	fwait
  416c97:	add    DWORD PTR [esi+0x20],eax
  416c9a:	jo     0x416c38
  416c9c:	xchg   esp,eax
  416c9d:	add    esi,edi
  416c9f:	sar    DWORD PTR [edi],0x55
  416ca2:	icebp  
  416ca3:	xchg   esi,eax
  416ca4:	mov    edx,0x34d8399d
  416ca9:	adc    edx,DWORD PTR ds:0x4cfcb824
  416caf:	adc    BYTE PTR [ebx-0x24],bl
  416cb2:	in     al,dx
  416cb3:	cmp    DWORD PTR [edi+0x4d],ecx
  416cb6:	pop    ds
  416cb7:	test   DWORD PTR [edx-0x30c41c44],eax
  416cbd:	int3   
  416cbe:	mov    edx,0x9f11e9d4
  416cc3:	adc    esi,ecx
  416cc5:	dec    edx
  416cc6:	scas   eax,DWORD PTR es:[edi]
  416cc7:	stc    
  416cc8:	(bad)  
  416cc9:	std    
  416cca:	lahf   
  416ccb:	cdq    
  416ccc:	pop    esi
  416ccd:	xchg   edx,eax
  416cce:	(bad)  
  416ccf:	mov    ch,0x10
  416cd1:	add    eax,0xda04cdce
  416cd6:	callw  0x75b5
  416cda:	addr16 jp 0x416ce7
  416cdd:	jmp    0x58ed748e
  416ce2:	aas    
  416ce3:	jmp    0x416cb1
  416ce5:	aaa    
  416ce6:	mov    ebx,0xc644966f
  416ceb:	jge    0x416cfc
  416ced:	cld    
  416cee:	iret   
  416cef:	loope  0x416ca6
  416cf1:	xchg   esi,eax
  416cf2:	xchg   esp,eax
  416cf3:	mov    BYTE PTR [eax-0x69],bl
  416cf6:	mov    dh,0x33
  416cf8:	inc    ebp
  416cf9:	sub    dh,dl
  416cfb:	adc    edi,ebp
  416cfd:	sub    ebp,DWORD PTR [ecx-0x80]
  416d00:	sub    ecx,DWORD PTR [eax-0x32d295cc]
  416d06:	xchg   esp,eax
  416d07:	adc    BYTE PTR [ebp-0x3e],0xbb
  416d0b:	shl    edx,cl
  416d0d:	addr16 in eax,dx
  416d0f:	pusha  
  416d10:	in     al,0x1c
  416d12:	inc    esi
  416d13:	push   edx
  416d14:	outs   dx,DWORD PTR ds:[esi]
  416d15:	inc    ebx
  416d16:	dec    esi
  416d17:	adc    eax,0xc697b66
  416d1c:	mov    ch,0x38
  416d1e:	adc    ah,BYTE PTR [ecx-0x4f]
  416d21:	stos   DWORD PTR es:[edi],eax
  416d22:	ins    BYTE PTR es:[edi],dx
  416d23:	and    eax,0xaaa6d7d1
  416d28:	mov    ebx,0x215e68b7
  416d2d:	jmp    0x416d6f
  416d2f:	xlat   BYTE PTR ds:[ebx]
  416d30:	or     al,0x61
  416d32:	lahf   
  416d33:	aam    0x50
  416d35:	dec    esp
  416d36:	ret    0xbfe6
  416d39:	ss inc ebp
  416d3b:	push   ebx
  416d3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d3d:	data16 and ch,BYTE PTR [ecx+0x744b516c]
  416d44:	sub    eax,0x3fed91a
  416d49:	cmp    cl,bh
  416d4b:	push   cs
  416d4c:	mov    cl,0x56
  416d4e:	cmp    al,0xaf
  416d50:	stos   BYTE PTR es:[edi],al
  416d51:	jbe    0x416d42
  416d53:	in     al,0x40
  416d55:	sub    eax,0xddf07f9b
  416d5a:	das    
  416d5b:	or     cl,BYTE PTR [esi-0x65]
  416d5e:	mov    DWORD PTR ds:[ebp-0x28],esi
  416d62:	mov    ds:0x556d8898,eax
  416d67:	xor    DWORD PTR [ebx],0x74
  416d6a:	retf   
  416d6b:	fwait
  416d6c:	out    0x1d,al
  416d6e:	push   ebp
  416d6f:	sbb    BYTE PTR [esi+0x64],dh
  416d72:	pop    eax
  416d73:	mov    al,ds:0xd7b351b
  416d78:	stos   BYTE PTR es:[edi],al
  416d79:	imul   DWORD PTR [ebp+0xc2581e3]
  416d7f:	scas   al,BYTE PTR es:[edi]
  416d80:	pop    esp
  416d81:	dec    edx
  416d82:	stc    
  416d83:	cdq    
  416d84:	and    al,0x2d
  416d86:	and    BYTE PTR [ebp-0x2c],bl
  416d89:	xchg   edi,eax
  416d8a:	push   ds
  416d8b:	mov    edi,0x3e3523bb
  416d90:	jnp    0x416d81
  416d92:	jo     0x416d20
  416d94:	scas   eax,DWORD PTR es:[edi]
  416d95:	sub    dh,ch
  416d97:	int    0xa3
  416d99:	(bad)  
  416d9a:	je     0x416d86
  416d9c:	inc    eax
  416d9d:	repz jle 0x416d9d
  416da0:	jle    0x416df7
  416da2:	(bad)  
  416da3:	push   ds
  416da4:	aaa    
  416da5:	sbb    eax,0xe2557ba9
  416daa:	mov    ebp,DWORD PTR [edi-0x2104a9b]
  416db0:	fdiv   st(4),st
  416db2:	enter  0x3f31,0xbf
  416db6:	hlt    
  416db7:	xor    BYTE PTR es:[edx-0x21],bh
  416dbb:	push   es
  416dbc:	inc    eax
  416dbd:	out    0xdc,al
  416dbf:	pusha  
  416dc0:	pop    ss
  416dc1:	and    BYTE PTR [esi+0x2ff73060],dh
  416dc7:	add    al,0x14
  416dc9:	add    al,0x19
  416dcb:	fnstcw WORD PTR [ecx+0x76]
  416dce:	mov    bl,0x10
  416dd0:	xchg   esi,eax
  416dd1:	inc    edx
  416dd2:	cmp    ebp,DWORD PTR [ebp+edx*2-0x5f6bf63c]
  416dd9:	scas   eax,DWORD PTR es:[edi]
  416dda:	xor    ah,0xa0
  416ddd:	pop    esi
  416dde:	sbb    DWORD PTR ds:0x4871fae6,esp
  416de4:	inc    edx
  416de5:	inc    esp
  416de6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416de7:	pop    ds
  416de8:	loop   0x416deb
  416dea:	stc    
  416deb:	mov    DWORD PTR [esp+ebp*2-0x68],0x825c73f9
  416df3:	icebp  
  416df4:	xor    al,0xa5
  416df6:	and    DWORD PTR [ebx],ebx
  416df8:	or     dl,BYTE PTR [edx]
  416dfa:	pop    ebx
  416dfb:	ret    
  416dfc:	add    DWORD PTR [eax-0x40373381],esp
  416e02:	ins    DWORD PTR es:[edi],dx
  416e03:	dec    eax
  416e04:	(bad)  
  416e05:	arpl   WORD PTR [edi-0x2048823e],di
  416e0b:	dec    edi
  416e0c:	ja     0x416daa
  416e0e:	leave  
  416e0f:	lods   al,BYTE PTR ds:[esi]
  416e10:	add    al,0xd8
  416e12:	or     BYTE PTR [edx+0x46],0x85
  416e16:	data16 fsubr st(4),st
  416e19:	lds    eax,FWORD PTR [ecx+0x6989980f]
  416e1f:	ret    0x98d6
  416e22:	fisub  WORD PTR [ebx+0x491d94e3]
  416e28:	pop    cx
  416e2a:	mov    ebp,0x2288f537
  416e2f:	mov    ebx,0x97205b9e
  416e34:	push   ebp
  416e35:	aad    0x22
  416e37:	mov    edx,0x715e26ed
  416e3c:	ins    DWORD PTR es:[edi],dx
  416e3d:	xor    edi,edx
  416e3f:	nop
  416e40:	rol    BYTE PTR [ecx],cl
  416e42:	pop    esp
  416e43:	das    
  416e44:	ds out 0x58,al
  416e47:	pop    ds
  416e48:	cld    
  416e49:	mov    bl,0xbd
  416e4b:	imul   edx,esp,0xffffff81
  416e4e:	xor    esp,ebp
  416e50:	es scas eax,DWORD PTR es:[edi]
  416e52:	xchg   edx,eax
  416e53:	inc    eax
  416e54:	ja     0x416e3d
  416e56:	shl    BYTE PTR [edx+0x14],cl
  416e59:	loop   0x416e53
  416e5b:	push   esp
  416e5c:	inc    esp
  416e5d:	rcr    BYTE PTR [ebp-0x68],1
  416e60:	or     eax,0x846c7ba8
  416e65:	xchg   ch,bl
  416e67:	xor    ax,0x7dcc
  416e6b:	xor    DWORD PTR [esi+ebx*1+0x41c40cfe],0x4a
  416e73:	leave  
  416e74:	sbb    ah,bl
  416e76:	fwait
  416e77:	or     BYTE PTR [ebp+0x7d],al
  416e7a:	and    ecx,esp
  416e7c:	cli    
  416e7d:	push   edx
  416e7e:	or     ch,dl
  416e80:	(bad)  
  416e82:	or     ebx,DWORD PTR [eax+edi*4+0x5a]
  416e86:	push   ecx
  416e87:	rcl    DWORD PTR [edi+0x2e2cb18c],0xb5
  416e8e:	or     al,0x8d
  416e90:	stc    
  416e91:	mov    ?,WORD PTR [ecx+0x27]
  416e94:	test   BYTE PTR [edi],dh
  416e96:	xor    eax,0xd3d6fed9
  416e9b:	cwde   
  416e9c:	test   eax,0x69a5aa59
  416ea1:	adc    BYTE PTR [ecx+0x58],ch
  416ea4:	add    ch,ah
  416ea6:	dec    edx
  416ea7:	jmp    0x416e73
  416ea9:	pop    edi
  416eaa:	mov    ebx,0x2dbdcf18
  416eaf:	fwait
  416eb0:	mov    edx,DWORD PTR [esi+0x71d2aa64]
  416eb6:	popa   
  416eb7:	push   0x93071bb7
  416ebc:	jae    0x416e9b
  416ebe:	stos   BYTE PTR es:[edi],al
  416ebf:	mov    WORD PTR [ebx-0x40],fs
  416ec2:	xchg   ebp,eax
  416ec3:	icebp  
  416ec4:	ins    BYTE PTR es:[edi],dx
  416ec5:	push   ecx
  416ec6:	cmp    DWORD PTR [eax],0x2e16a82c
  416ecc:	jbe    0x416ebe
  416ece:	jno    0x416f10
  416ed0:	out    dx,eax
  416ed1:	pop    ebp
  416ed2:	icebp  
  416ed3:	ins    BYTE PTR es:[edi],dx
  416ed4:	in     eax,0xe5
  416ed6:	mov    fs:0x5ceb43aa,al
  416edc:	stos   DWORD PTR es:[edi],eax
  416edd:	pop    edx
  416ede:	shl    eax,1
  416ee0:	pop    ebp
  416ee1:	push   ds
  416ee2:	inc    esp
  416ee3:	mov    ecx,0xfc99f1bf
  416ee8:	out    0x92,al
  416eea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416eeb:	jo     0x416f55
  416eed:	and    eax,0xd6ebc7af
  416ef2:	enter  0xe9ec,0xb0
  416ef6:	call   0x6eb509fb
  416efb:	mov    esi,0xb5ac8753
  416f00:	mov    dl,0x1e
  416f02:	retf   0x1455
  416f05:	les    esi,FWORD PTR [ecx]
  416f07:	fdiv   st,st(0)
  416f09:	pop    es
  416f0a:	pop    esi
  416f0b:	(bad)  [esi+ebx*8+0x1b]
  416f0f:	mov    WORD PTR [edi+0x1704bfc0],fs
  416f15:	push   esi
  416f16:	imul   esp,esp,0x86b4b022
  416f1c:	mov    fs,edx
  416f1e:	fucom  st(2)
  416f20:	clc    
  416f21:	cli    
  416f22:	pop    ecx
  416f23:	in     eax,0x2e
  416f25:	rcr    BYTE PTR [ebx-0x18],cl
  416f28:	xchg   DWORD PTR [ebp-0x43eb3883],esp
  416f2e:	out    0xa,al
  416f30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f31:	in     al,dx
  416f32:	pop    es
  416f33:	dec    ecx
  416f34:	sub    DWORD PTR [edx+ebp*4+0x47],eax
  416f38:	adc    eax,0xc8820051
  416f3d:	mov    ecx,0xe2b57352
  416f42:	shr    BYTE PTR [esi-0x7c],0x5f
  416f46:	xor    edx,DWORD PTR [esi+ebp*2+0x58]
  416f4a:	cmp    DWORD PTR [ebp+0x573e88e2],ebp
  416f50:	xchg   esp,eax
  416f51:	in     eax,dx
  416f52:	push   esp
  416f53:	add    dl,ah
  416f55:	jae    0x416f0d
  416f57:	loopne 0x416ee6
  416f59:	jle    0x416fb7
  416f5b:	gs test eax,0xbb339100
  416f61:	sub    bh,ah
  416f63:	push   ebp
  416f64:	data16 fisttp DWORD PTR [ebx]
  416f67:	xchg   ebp,eax
  416f68:	sahf   
  416f69:	gs inc edi
  416f6b:	sbb    esi,DWORD PTR [edx+0x24]
  416f6e:	jge    0x416f90
  416f70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f71:	push   ds
  416f72:	bound  ebp,QWORD PTR [ecx*8-0x36454413]
  416f79:	es push 0x82f62401
  416f7f:	xor    BYTE PTR [ecx+0x17684c5f],dh
  416f85:	inc    edx
  416f86:	inc    ebx
  416f87:	jg     0x416fd7
  416f89:	jl     0x416f61
  416f8b:	nop
  416f8c:	pop    eax
  416f8d:	dec    edi
  416f8e:	jp     0x416f81
  416f90:	enter  0x8dec,0xbc
  416f94:	xor    eax,0xf174f17c
  416f99:	jle    0x416fbb
  416f9b:	ret    
  416f9c:	jno    0x416fb5
  416f9e:	add    BYTE PTR [edi+ecx*4-0x724fc226],cl
  416fa5:	sub    ah,dl
  416fa7:	xor    eax,0x42b5c1fa
  416fac:	bound  eax,QWORD PTR [eax+0x54]
  416faf:	jge    0x416fb5
  416fb1:	adc    DWORD PTR [edi+edx*8-0xcd452b1],ecx
  416fb8:	push   ds
  416fb9:	imul   esp,DWORD PTR [ecx],0xffffffda
  416fbc:	mul    ah
  416fbe:	push   0x4cf7680d
  416fc3:	sub    ch,ch
  416fc5:	arpl   dx,dx
  416fc7:	clc    
  416fc8:	ss psllw mm5,mm3
  416fcc:	aas    
  416fcd:	or     BYTE PTR [edx+esi*4+0x66],bl
  416fd1:	loopne 0x41704d
  416fd3:	sub    al,0x40
  416fd5:	loop   0x417013
  416fd7:	sub    eax,0x25d730c0
  416fdc:	mov    ds:0xea332149,eax
  416fe1:	mov    eax,ds:0xa18347c3
  416fe6:	test   BYTE PTR [edi-0x5e0d9a33],0xf2
  416fed:	jo     0x416fd5
  416fef:	out    dx,al
  416ff0:	hlt    
  416ff1:	mov    esi,DWORD PTR [esi+0x8f27009]
  416ff7:	cmp    cl,ah
  416ff9:	and    al,0xbe
  416ffb:	data16 and BYTE PTR [ebx+0x5be097d7],al
  417002:	fwait
  417003:	sar    edi,cl
  417005:	jmp    0x40819b3a
  41700a:	sbb    eax,0x37c94624
  41700f:	stos   BYTE PTR es:[edi],al
  417010:	bound  edx,QWORD PTR [ecx]
  417012:	push   es
  417013:	jne    0x416fb2
  417015:	mov    al,ds:0xdcf68d1
  41701a:	fld    st(7)
  41701c:	jmp    0xc006:0xe3f7cf7b
  417023:	mov    ebx,0xcba00ee6
  417028:	or     esi,esi
  41702a:	rcl    edi,cl
  41702c:	sub    al,BYTE PTR [edx]
  41702e:	stc    
  41702f:	pusha  
  417030:	shl    BYTE PTR es:[eax+0x868f431],1
  417037:	call   0x2d17:0xef471b4e
  41703e:	push   ebp
  41703f:	adc    DWORD PTR ds:0xca1f6012,ebx
  417045:	cli    
  417046:	add    al,0xb2
  417048:	lods   eax,DWORD PTR ds:[esi]
  417049:	push   esp
  41704a:	add    dh,BYTE PTR [edi+0x7f658238]
  417050:	js     0x4170b3
  417052:	xchg   ecx,eax
  417053:	jbe    0x4170a6
  417055:	inc    ecx
  417056:	arpl   WORD PTR [edi-0x74915aa],dx
  41705c:	arpl   WORD PTR [ecx],si
  41705e:	rcl    DWORD PTR [esi-0x7d],cl
  417061:	pop    esp
  417062:	xchg   edi,eax
  417063:	mov    esi,DWORD PTR [edx]
  417065:	sahf   
  417066:	loop   0x417044
  417068:	mov    eax,DWORD PTR ds:0xf7ed4e86
  41706e:	mov    fs,esp
  417070:	push   es
  417071:	popa   
  417072:	out    dx,al
  417073:	mov    al,BYTE PTR [esi-0x3b]
  417076:	dec    ebx
  417077:	xor    dl,BYTE PTR ds:0x48449ad4
  41707d:	ror    eax,cl
  41707f:	leave  
  417080:	mov    ds:0xca04d322,al
  417085:	scas   al,BYTE PTR es:[edi]
  417086:	cmp    dl,ah
  417088:	mov    ebp,DWORD PTR [ebx+0x2d]
  41708b:	inc    eax
  41708c:	pop    esp
  41708d:	out    0xb5,al
  41708f:	mov    ah,0xb8
  417091:	jae    0x417058
  417093:	adc    edi,DWORD PTR [esi+0x41]
  417096:	push   ds
  417097:	xor    BYTE PTR [edi-0x2e],cl
  41709a:	(bad)  
  41709b:	push   0xffffffe3
  41709d:	inc    ebp
  41709e:	pushf  
  41709f:	inc    ebx
  4170a0:	(bad)  
  4170a1:	or     ch,dh
  4170a3:	dec    ebp
  4170a4:	mov    bh,0xac
  4170a6:	lods   ax,WORD PTR ds:[esi]
  4170a8:	test   al,0xc1
  4170aa:	ds dec esp
  4170ac:	aas    
  4170ad:	dec    esi
  4170ae:	ss mov ecx,0xca772fd
  4170b4:	stos   BYTE PTR es:[edi],al
  4170b5:	je     0x41709e
  4170b7:	xor    eax,0x893b1aa5
  4170bc:	push   cs
  4170bd:	in     al,0x3f
  4170bf:	ret    0x9bdb
  4170c2:	dec    esp
  4170c3:	iret   
  4170c4:	pop    edx
  4170c5:	mov    dl,0xfc
  4170c7:	sbb    BYTE PTR [edi-0xdcb5d7e],dh
  4170cd:	adc    esi,ebp
  4170cf:	pusha  
  4170d0:	cmp    al,BYTE PTR [ecx-0x7c]
  4170d3:	mov    ds:0xbdb81149,eax
  4170d8:	mov    edx,0xb165cb99
  4170dd:	je     0x4170d8
  4170df:	pop    edi
  4170e0:	or     eax,0x7897ac8d
  4170e5:	dec    ecx
  4170e6:	inc    ebx
  4170e7:	ret    0x8ddf
  4170ea:	or     al,0x55
  4170ec:	jge    0x41709b
  4170ee:	das    
  4170ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170f0:	cdq    
  4170f1:	int    0x7
  4170f3:	aad    0xdd
  4170f5:	pop    es
  4170f6:	es push esi
  4170f8:	into   
  4170f9:	lock loope 0x41708c
  4170fc:	(bad)  [esp+ecx*8]
  4170ff:	(bad)  
  417100:	mov    al,0xfc
  417102:	fadd   QWORD PTR [ebx+0x28]
  417105:	jle    0x417110
  417107:	dec    esp
  417108:	sbb    edx,ebp
  41710a:	mov    ds:0x84e48061,eax
  41710f:	pop    es
  417110:	mov    dh,cl
  417112:	push   ebp
  417113:	push   edx
  417114:	hlt    
  417115:	(bad)  
  417116:	cli    
  417117:	ror    BYTE PTR [ebx],cl
  417119:	mov    esi,0x80544e6a
  41711e:	mov    cl,0x46
  417120:	jmp    0x417135
  417122:	daa    
  417123:	lds    edi,FWORD PTR [edi-0x29192982]
  417129:	inc    esp
  41712a:	js     0x417138
  41712c:	push   ds
  41712d:	call   FWORD PTR [edi+edx*1]
  417130:	add    BYTE PTR [edi],ch
  417132:	xchg   ebx,eax
  417133:	and    ecx,ebx
  417135:	jae    0x417191
  417137:	scas   eax,DWORD PTR es:[edi]
  417138:	out    0xcd,al
  41713a:	idiv   DWORD PTR [edi-0x63]
  41713d:	xchg   edi,eax
  41713e:	cmc    
  41713f:	aad    0xc2
  417141:	sbb    eax,0x3f2e8ac6
  417146:	in     al,dx
  417147:	jle    0x4171c2
  417149:	lds    ebx,FWORD PTR [esi]
  41714b:	addr16 jp 0x4171a2
  41714e:	outs   dx,BYTE PTR ds:[esi]
  41714f:	stc    
  417150:	cmp    BYTE PTR [esi],dl
  417152:	in     al,dx
  417153:	pop    esp
  417154:	jmp    0x5be5:0x6b57dfd0
  41715b:	aaa    
  41715c:	div    DWORD PTR [edx-0x25]
  41715f:	push   eax
  417160:	inc    edi
  417161:	cs xchg esp,eax
  417163:	test   al,0xf2
  417165:	les    esi,FWORD PTR [eax+edi*8-0x4e18a783]
  41716c:	leave  
  41716d:	inc    ecx
  41716e:	les    esp,FWORD PTR [esi+0x6f33249c]
  417174:	ins    BYTE PTR es:[edi],dx
  417175:	xchg   esp,eax
  417176:	jg     0x41714b
  417178:	leave  
  417179:	pop    ecx
  41717a:	clc    
  41717b:	jne    0x417142
  41717d:	pushf  
  41717e:	aam    0x9a
  417180:	and    al,0xd7
  417182:	or     ch,ch
  417184:	push   ds
  417185:	jno    0x7a8cccc8
  41718b:	inc    esp
  41718c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41718d:	jge    0x4171d5
  41718f:	mov    bl,0xef
  417191:	in     eax,0x57
  417193:	pop    ecx
  417194:	idiv   BYTE PTR [ebp-0x554061e2]
  41719a:	dec    esp
  41719b:	dec    ecx
  41719c:	jo     0x417207
  41719e:	xor    esp,DWORD PTR [edi]
  4171a0:	jnp    0x417146
  4171a2:	test   BYTE PTR [ecx-0x304fcb0b],bh
  4171a8:	ficomp WORD PTR [ecx-0x59]
  4171ab:	mov    bl,BYTE PTR [edx-0x1dee924e]
  4171b1:	or     al,0x7f
  4171b3:	sbb    ecx,DWORD PTR [edx]
  4171b5:	pop    edx
  4171b6:	(bad)  
  4171b7:	pop    esp
  4171b8:	ret    
  4171b9:	push   esi
  4171ba:	lock mov BYTE PTR [edi],0xf4
  4171be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171bf:	stos   BYTE PTR es:[edi],al
  4171c0:	push   ss
  4171c1:	sar    BYTE PTR [edx*1+0x61db9954],cl
  4171c8:	pop    es
  4171c9:	aaa    
  4171ca:	jns    0x41719a
  4171cc:	fs jmp 0x954:0xde7e76c3
  4171d4:	add    esp,DWORD PTR [edi+0x11]
  4171d7:	imul   edx,eax,0xffffffc0
  4171da:	test   BYTE PTR [ebp+eax*1-0xb],bl
  4171de:	sub    BYTE PTR [esi-0x8],0x5e
  4171e2:	fst    QWORD PTR [esi+0x59]
  4171e5:	jno    0x417179
  4171e7:	fst    QWORD PTR [ebx+0x44]
  4171ea:	push   ecx
  4171eb:	push   0x15
  4171ed:	mov    ds:0x4a6dd454,al
  4171f2:	repnz hlt 
  4171f4:	out    dx,al
  4171f5:	jae    0x41726f
  4171f7:	cmp    dl,BYTE PTR [edx+edx*8]
  4171fa:	cmp    al,BYTE PTR [ecx+esi*2+0x31]
  4171fe:	nop
  4171ff:	mov    WORD PTR [ebx-0x70f57c35],cs
  417205:	jl     0x41722a
  417207:	pusha  
  417208:	inc    ebx
  417209:	add    BYTE PTR [edx],bl
  41720b:	test   eax,0x4d8a4c8e
  417210:	add    BYTE PTR [esi],ah
  417212:	adc    al,0x9
  417214:	pop    ds
  417215:	add    eax,edi
  417217:	and    ch,BYTE PTR [edi-0x28]
  41721a:	or     esi,DWORD PTR [edx-0xfff5df8]
  417220:	mov    esp,0x73aab25f
  417225:	jg     0x41729b
  417227:	pop    ebx
  417228:	add    esp,DWORD PTR [eax+0x19]
  41722b:	sbb    BYTE PTR [ebx],ah
  41722d:	mov    dh,0x3e
  41722f:	inc    eax
  417230:	dec    edx
  417231:	rcl    dh,cl
  417233:	std    
  417234:	jno    0x4171d9
  417236:	ja     0x41726d
  417238:	push   0xd4978316
  41723d:	shr    ebp,1
  41723f:	into   
  417240:	mov    cl,0x6b
  417242:	(bad)  
  417243:	je     0x41728d
  417245:	sbb    DWORD PTR [esi+ecx*8],eax
  417248:	pop    esi
  417249:	js     0x4171e3
  41724b:	cmp    eax,0x1fc16945
  417250:	adc    al,0x4d
  417252:	cmp    eax,0x9d6c5b56
  417257:	int3   
  417258:	cld    
  417259:	aad    0xd
  41725b:	call   0xdeb64257
  417260:	int    0x99
  417262:	add    al,0x4a
  417264:	cwde   
  417265:	mov    esi,0x92faa9c4
  41726a:	cmp    al,0xa1
  41726c:	neg    ebp
  41726e:	mov    ebp,0xa399e842
  417273:	xchg   esp,eax
  417274:	test   BYTE PTR [edi+0x4eae05f3],ah
  41727a:	rcr    BYTE PTR [edi],1
  41727c:	push   ecx
  41727d:	mov    eax,ds:0x3d19591a
  417282:	out    dx,al
  417283:	fwait
  417284:	jb     0x41724a
  417286:	es xchg ebp,eax
  417288:	cmp    al,BYTE PTR [ebp+0x3c]
  41728b:	or     BYTE PTR [ebx+0x5205f4db],cl
  417291:	je     0x417272
  417293:	sbb    DWORD PTR [eax+0x5e],ebx
  417296:	lea    edi,[ebp+0x722544b6]
  41729c:	dec    edi
  41729d:	cs push 0xffffffd2
  4172a0:	cwde   
  4172a1:	cmp    edx,edx
  4172a3:	outs   dx,BYTE PTR ds:[esi]
  4172a4:	lods   eax,DWORD PTR ds:[esi]
  4172a5:	dec    ebx
  4172a6:	arpl   ax,di
  4172a8:	inc    ebx
  4172a9:	jne    0x41724e
  4172ab:	cmp    BYTE PTR [ecx+0x4925da2a],bl
  4172b1:	imul   ecx,esi,0xffffffd3
  4172b4:	cmp    esi,DWORD PTR [ecx]
  4172b6:	cmp    eax,ebx
  4172b8:	push   es
  4172b9:	js     0x4172ad
  4172bb:	scas   al,BYTE PTR es:[edi]
  4172bc:	mov    edi,0x3c7c6800
  4172c1:	or     DWORD PTR gs:[edx-0x23],0x49ceac31
  4172c9:	pop    ds
  4172ca:	and    eax,0x984bf0f4
  4172cf:	sbb    BYTE PTR [ebx-0x2235fcff],bh
  4172d5:	mov    ds:0xa4ae6612,al
  4172da:	scas   eax,DWORD PTR es:[edi]
  4172db:	mov    ebx,0x4b7cd655
  4172e0:	not    BYTE PTR [edx+0x24dc646a]
  4172e6:	(bad)  
  4172e7:	not    DWORD PTR [eax+ebp*1]
  4172ea:	mov    esp,0xf9150e67
  4172ef:	dec    edx
  4172f0:	pop    ebp
  4172f1:	sub    eax,0xeead88c2
  4172f6:	add    bl,ah
  4172f8:	inc    ebx
  4172f9:	sahf   
  4172fa:	enter  0x508f,0x8
  4172fe:	in     eax,0xc9
  417300:	icebp  
  417301:	mov    ds:0xc3b7e475,eax
  417306:	loopne 0x4172b9
  417308:	lods   al,BYTE PTR ds:[esi]
  417309:	inc    eax
  41730a:	outs   dx,DWORD PTR ds:[esi]
  41730b:	mov    edi,0x4650b56b
  417310:	xchg   DWORD PTR [eax+0x5f],edi
  417313:	(bad)  
  417314:	je     0x4172e3
  417316:	inc    eax
  417317:	ret    
  417318:	pop    ds
  417319:	mov    al,0x57
  41731b:	dec    ecx
  41731c:	cli    
  41731d:	adc    eax,0xd2f897f6
  417322:	iret   
  417323:	(bad)  
  417325:	or     edx,DWORD PTR [eax-0x20]
  417328:	cli    
  417329:	shr    DWORD PTR [ebp-0xefa761f],1
  41732f:	sbb    bl,cl
  417331:	outs   dx,DWORD PTR ds:[esi]
  417332:	sti    
  417333:	mov    al,0xf
  417335:	mov    bh,0x34
  417337:	iretw  
  417339:	and    bl,BYTE PTR [esi]
  41733b:	stos   BYTE PTR es:[edi],al
  41733c:	mov    ah,0xf3
  41733e:	ins    DWORD PTR es:[edi],dx
  41733f:	inc    esi
  417340:	mov    esp,DWORD PTR [edx+0x4f]
  417343:	cdq    
  417344:	outs   dx,DWORD PTR ds:[esi]
  417345:	inc    edx
  417346:	xchg   ebp,eax
  417347:	int3   
  417348:	pop    esp
  417349:	mov    dl,0xc6
  41734b:	lea    esp,[edx+0x1f8c4ada]
  417351:	dec    ebx
  417352:	cmp    al,0xc0
  417354:	mov    al,ds:0xd9d95af6
  417359:	imul   esi,DWORD PTR [edi-0x2f55d439],0xffffffdf
  417360:	daa    
  417361:	jne    0x4172f5
  417363:	lds    esp,FWORD PTR [edx-0x3bd78b38]
  417369:	(bad)  
  41736a:	mul    BYTE PTR [edx+0x1]
  41736d:	xchg   esi,eax
  41736e:	imul   edx,esi,0x2a
  417371:	test   eax,0xd129f374
  417376:	loope  0x41738a
  417378:	and    DWORD PTR [esi+0x50],0x2e9d2a1d
  41737f:	shl    BYTE PTR [ecx+0x54],cl
  417382:	inc    edi
  417383:	adc    DWORD PTR [edx+0x483be664],0xe68706a0
  41738d:	sbb    dh,al
  41738f:	mov    WORD PTR [esi-0x53],ss
  417392:	imul   eax,DWORD PTR [edi],0xfffffffc
  417395:	add    esi,esi
  417397:	stos   BYTE PTR es:[edi],al
  417398:	xchg   DWORD PTR [edx-0x57474259],edx
  41739e:	xchg   ecx,eax
  41739f:	sub    al,0xb6
  4173a1:	jl     0x41738d
  4173a3:	dec    esp
  4173a4:	cmc    
  4173a5:	loop   0x41736a
  4173a7:	outs   dx,DWORD PTR ds:[esi]
  4173a8:	test   eax,0xb0f9d49a
  4173ad:	dec    ebp
  4173ae:	or     edi,ecx
  4173b0:	pop    ebx
  4173b1:	(bad)  
  4173b2:	mul    BYTE PTR [edx+0x7d]
  4173b5:	out    dx,al
  4173b6:	mul    ecx
  4173b8:	test   BYTE PTR [esi+ecx*4+0x132edee2],bl
  4173bf:	retf   0xc557
  4173c2:	mov    al,ds:0xce48b374
  4173c7:	int    0x75
  4173c9:	je     0x417352
  4173cb:	xchg   ecx,eax
  4173cc:	or     BYTE PTR [esi-0x31],ch
  4173cf:	xchg   BYTE PTR [ebx-0x562ddbb8],dh
  4173d5:	aam    0x73
  4173d7:	mov    eax,ds:0xab908060
  4173dc:	sahf   
  4173dd:	das    
  4173de:	in     eax,dx
  4173df:	test   BYTE PTR ds:0xc69dbf,ch
  4173e5:	mov    edi,?
  4173e7:	jno    0x4173e2
  4173e9:	xor    DWORD PTR [ebp+0x2cbd9734],eax
  4173ef:	or     al,0xcc
  4173f1:	test   eax,0x99766201
  4173f6:	jge    0x417464
  4173f8:	jg     0x4173db
  4173fa:	test   eax,0x28b27974
  4173ff:	adc    al,0x77
  417401:	popa   
  417402:	or     al,0x41
  417404:	and    ch,BYTE PTR [eax+ecx*2]
  417407:	mov    BYTE PTR [ecx+0x5325e8fd],ch
  41740d:	ss sbb al,0xe8
  417410:	push   edi
  417411:	xchg   ecx,eax
  417412:	xor    esp,ebx
  417414:	jne    0x417415
  417416:	test   BYTE PTR [eax+0x7baa8b2b],bl
  41741c:	sub    DWORD PTR [edx+0x15],esi
  41741f:	mov    eax,0x6a21a9a2
  417424:	adc    eax,DWORD PTR [ebx]
  417426:	sub    ch,0xd
  417429:	xchg   ecx,eax
  41742a:	push   edi
  41742b:	and    BYTE PTR [ebp-0x6a],0x20
  41742f:	sbb    ebx,ecx
  417431:	(bad)  
  417432:	cmc    
  417433:	cdq    
  417434:	mov    ebp,0xe5906fb6
  417439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41743a:	sbb    ch,dl
  41743c:	ds mov bh,0x44
  41743f:	out    dx,al
  417440:	add    al,0x7c
  417442:	or     eax,0xbd84d69a
  417447:	add    DWORD PTR [edx+0x2d],edx
  41744a:	daa    
  41744b:	test   BYTE PTR [esi-0x6f],bl
  41744e:	scas   al,BYTE PTR es:[edi]
  41744f:	mov    ds:0x7a3f0904,eax
  417454:	das    
  417455:	push   ds
  417456:	popa   
  417457:	leave  
  417458:	adc    al,0xf4
  41745a:	dec    edx
  41745b:	aaa    
  41745c:	inc    edx
  41745d:	jne    0x41749d
  41745f:	push   cs
  417460:	out    0x46,al
  417462:	add    eax,0x944b8164
  417468:	in     eax,dx
  417469:	dec    esi
  41746a:	and    eax,0xad4424f3
  41746f:	push   es
  417470:	adc    BYTE PTR [esi+0x6ac1373e],ah
  417476:	jbe    0x4174f7
  417478:	retf   
  417479:	cmp    edi,ebp
  41747b:	outs   dx,DWORD PTR ds:[esi]
  41747c:	in     eax,0x58
  41747e:	and    al,0xd1
  417480:	mov    cl,0x7
  417482:	fwait
  417483:	or     eax,0x848221ad
  417488:	lods   al,BYTE PTR ds:[esi]
  417489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41748a:	into   
  41748b:	dec    DWORD PTR [esi+ebx*2-0x18]
  41748f:	lods   eax,DWORD PTR ds:[esi]
  417490:	in     eax,dx
  417491:	cmp    dl,dh
  417493:	in     al,dx
  417494:	outs   dx,BYTE PTR ds:[esi]
  417496:	mov    dl,0xc7
  417498:	imul   eax,edx,0xffffffcf
  41749b:	es in  al,dx
  41749d:	adc    eax,0x70b476d2
  4174a2:	aas    
  4174a3:	dec    ecx
  4174a4:	pop    ecx
  4174a5:	(bad)  
  4174a6:	cmp    ebp,DWORD PTR [edi-0x48]
  4174a9:	push   eax
  4174aa:	mov    esp,0x320cac7d
  4174af:	icebp  
  4174b0:	adc    eax,0xf30dc210
  4174b5:	(bad)  
  4174b6:	pop    esi
  4174b7:	sub    bh,BYTE PTR ds:0x46401b00
  4174bd:	mov    es,WORD PTR [edx+0x4cfd923f]
  4174c3:	mov    ebx,DWORD PTR [edi-0x37]
  4174c6:	fcom   QWORD PTR [esi+0x39]
  4174c9:	lahf   
  4174ca:	and    DWORD PTR [ebx+0x4b0ec2d8],0x25
  4174d1:	out    dx,eax
  4174d2:	pusha  
  4174d3:	cmp    eax,0x84f04d72
  4174d8:	cmp    DWORD PTR [ebx],esi
  4174da:	(bad)  
  4174db:	pop    es
  4174dc:	xor    al,0x8d
  4174de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174df:	sub    al,0x4b
  4174e1:	rcl    ch,cl
  4174e3:	icebp  
  4174e4:	mov    ch,0xc9
  4174e6:	dec    ecx
  4174e7:	cmp    edi,DWORD PTR [ebx+eax*2-0x196a079]
  4174ee:	fcom   QWORD PTR [edi+0x4e]
  4174f1:	int3   
  4174f2:	je     0x4174dd
  4174f4:	and    DWORD PTR [eax+0x797de547],eax
  4174fa:	fs pushf 
  4174fc:	mov    al,0xfc
  4174fe:	jp     0x41754f
  417500:	xor    ebx,ebp
  417502:	sbb    BYTE PTR [ebp+0x5],dl
  417505:	aas    
  417506:	ins    DWORD PTR es:[edi],dx
  417507:	clc    
  417508:	sub    esp,DWORD PTR [ecx+0x22]
  41750b:	idiv   BYTE PTR [edi]
  41750d:	inc    ebp
  41750e:	add    al,0x40
  417510:	xchg   DWORD PTR [ebp-0x1a],esi
  417513:	ss dec ecx
  417515:	sub    DWORD PTR [esi],edi
  417517:	add    al,0x11
  417519:	xchg   esi,esi
  41751b:	int    0x46
  41751d:	or     eax,0xe56bd6b6
  417522:	pop    ss
  417523:	jmp    0xb8e673a5
  417528:	pusha  
  417529:	jl     0x417532
  41752b:	dec    edx
  41752c:	hlt    
  41752d:	pop    ss
  41752e:	or     esp,ebp
  417530:	mov    al,ds:0x1701fb71
  417535:	cmp    DWORD PTR [ebx+0x65648392],esi
  41753b:	scas   al,BYTE PTR es:[edi]
  41753c:	and    eax,0x6023df8
  417541:	or     eax,0xac00e7d4
  417546:	inc    esi
  417547:	mov    edx,0xffd798aa
  41754c:	dec    esp
  41754d:	push   eax
  41754e:	lds    eax,FWORD PTR [esi+edx*8+0x1f7a41e8]
  417555:	mov    edi,0xd84e585f
  41755a:	mov    bl,0xed
  41755c:	cmp    esp,ebp
  41755e:	jmp    0x4174f8
  417560:	push   esp
  417561:	pop    eax
  417562:	fisttp WORD PTR ds:0x1a2ea479
  417568:	lahf   
  417569:	ds push edi
  41756b:	jmp    0x4175d8
  41756d:	cmp    DWORD PTR [eax],edx
  41756f:	nop
  417570:	and    BYTE PTR [ebx+0x1c4b9ade],bh
  417576:	cmp    al,0xd5
  417578:	repz in eax,0x85
  41757b:	imul   BYTE PTR [eax+edi*8]
  41757e:	aaa    
  41757f:	sub    bh,BYTE PTR [esi+edx*8-0x1056410d]
  417586:	hlt    
  417587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417588:	mov    ds:0x30c7e6a6,eax
  41758d:	test   eax,0x5a65f7e9
  417592:	daa    
  417593:	shr    esi,1
  417595:	or     dl,ah
  417597:	fmul   QWORD PTR [ebx+0x27f0a8ac]
  41759d:	sub    DWORD PTR [edi],esp
  41759f:	in     al,0x76
  4175a1:	xor    ecx,DWORD PTR [eax+0x5e4ff654]
  4175a7:	jge    0x417616
  4175a9:	or     al,BYTE PTR [ecx+0x7c]
  4175ac:	dec    ecx
  4175ad:	push   esp
  4175ae:	or     esp,DWORD PTR [edx+edx*4]
  4175b1:	in     al,0xa
  4175b3:	add    DWORD PTR [edx+eiz*8],ebx
  4175b6:	adc    al,al
  4175b8:	push   es
  4175b9:	push   edx
  4175ba:	in     al,dx
  4175bb:	cmp    esp,eax
  4175bd:	icebp  
  4175be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175bf:	dec    ebx
  4175c0:	adc    al,0x28
  4175c2:	add    bl,BYTE PTR [edx-0x6c918430]
  4175c8:	cmp    DWORD PTR [ebx+0x23],0xffffff8f
  4175cc:	adc    ch,ah
  4175ce:	clc    
  4175cf:	int    0xc7
  4175d1:	xchg   esp,eax
  4175d2:	and    esp,DWORD PTR [esi]
  4175d4:	stos   BYTE PTR es:[edi],al
  4175d5:	cwde   
  4175d6:	dec    edx
  4175d7:	ror    BYTE PTR ds:[edi],1
  4175da:	and    DWORD PTR [ebx+0x37],edx
  4175dd:	jecxz  0x4175ba
  4175df:	xchg   edx,eax
  4175e0:	adc    DWORD PTR [eax],ebx
  4175e2:	ds out dx,al
  4175e4:	cmp    dh,bl
  4175e6:	pop    ds
  4175e7:	loopne 0x417623
  4175e9:	rol    DWORD PTR [esp+eax*1-0x491b52e4],cl
  4175f0:	mov    bl,al
  4175f2:	ror    DWORD PTR [eax-0x2e78652],cl
  4175f8:	(bad)  
  4175f9:	sub    eax,0xf2a684a1
  4175fe:	or     eax,0x3b031a53
  417603:	(bad)  
  417604:	adc    bh,al
  417606:	test   al,0x40
  417608:	in     eax,0xdb
  41760a:	sub    al,0x2
  41760c:	push   eax
  41760d:	mov    bh,0x15
  41760f:	aaa    
  417610:	push   ds
  417611:	mov    esp,0x9982931e
  417616:	fld    DWORD PTR [eax]
  417618:	test   BYTE PTR [ebp-0x5cbc806c],ch
  41761e:	jg     0x4175cb
  417620:	sbb    eax,0x3a571811
  417625:	cmp    esp,DWORD PTR [edi-0x4a50f4ba]
  41762b:	pop    ebx
  41762c:	mov    edi,0x6bee2798
  417631:	sbb    esi,edi
  417633:	(bad)  
  417634:	lods   al,BYTE PTR ds:[esi]
  417635:	cwde   
  417636:	adc    dh,BYTE PTR [edi-0x2eb3a428]
  41763c:	mov    edi,0x2a22a449
  417641:	xchg   ebx,eax
  417642:	fs cmp eax,0x34cd6569
  417648:	xchg   edx,eax
  417649:	dec    eax
  41764a:	cli    
  41764b:	xchg   esi,eax
  41764c:	scas   eax,DWORD PTR es:[edi]
  41764d:	cmp    al,0x48
  41764f:	and    al,0x8b
  417651:	inc    ebx
  417652:	imul   BYTE PTR [ecx+0x493328d3]
  417658:	push   edx
  417659:	xor    edx,DWORD PTR [ecx]
  41765b:	jg     0x41768f
  41765d:	(bad)
  417660:	mov    WORD PTR [eax+ebx*8-0x1ef0c7c],ss
  417667:	ja     0x417648
  417669:	imul   ebx,DWORD PTR [ebx],0x40
  41766c:	sub    ch,BYTE PTR [eax]
  41766e:	pop    ds
  41766f:	or     eax,0x8e1d8b19
  417674:	cwde   
  417675:	(bad)  
  417676:	xchg   edx,eax
  417677:	jmp    FWORD PTR [eiz*8+0x29b2b2e7]
  41767e:	in     al,dx
  41767f:	sbb    eax,0x79ab7ba9
  417684:	fucomip st,st(0)
  417686:	jae    0x41765b
  417688:	ins    DWORD PTR es:[edi],dx
  417689:	jmp    0xcd8eb7c0
  41768e:	jge    0x4176a5
  417690:	mov    WORD PTR ds:0x61bb735a,es
  417696:	mov    ebp,0xad3ce15
  41769b:	cmp    edi,DWORD PTR [edi-0x7b]
  41769e:	and    BYTE PTR [ebp+0x57d128d1],al
  4176a4:	and    edx,edx
  4176a6:	clc    
  4176a7:	mov    eax,0x82dfcc11
  4176ac:	iret   
  4176ad:	add    eax,0xe5c84b11
  4176b2:	mov    ss,WORD PTR [ebp+0x7a37e3e0]
  4176b8:	mov    ch,0xbd
  4176ba:	fisttp DWORD PTR [edx+0x7a09e9d2]
  4176c0:	sub    dl,BYTE PTR [ebx-0x269991d5]
  4176c6:	pop    edi
  4176c7:	mov    bh,0xae
  4176c9:	hlt    
  4176ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176cb:	or     cl,BYTE PTR [esi+0x7e]
  4176ce:	daa    
  4176cf:	push   esi
  4176d0:	scas   eax,DWORD PTR es:[edi]
  4176d1:	add    al,BYTE PTR [ebp+0x717ec107]
  4176d7:	call   0x451564f3
  4176dc:	adc    BYTE PTR [ebx+0x3f5b2c71],al
  4176e2:	cmp    ebx,DWORD PTR [eax]
  4176e4:	test   eax,0x3f5aea93
  4176e9:	add    DWORD PTR [eax],edi
  4176eb:	idiv   DWORD PTR [ebx+0x26]
  4176ee:	js     0x417747
  4176f0:	retw   0xc634
  4176f4:	jmp    0x528893e
  4176f9:	jmp    DWORD PTR [esi+eax*4]
  4176fc:	mov    ebp,0x4af6ef06
  417701:	jle    0x4176f1
  417703:	mov    BYTE PTR [ebx-0x50],bh
  417706:	repnz cmp al,0x72
  417709:	xchg   ebx,eax
  41770a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41770b:	xchg   ebp,eax
  41770c:	outs   dx,BYTE PTR ds:[esi]
  41770d:	imul   ebx,DWORD PTR [ebp+0x4d],0x58ac6478
  417714:	enter  0xa983,0x50
  417718:	ss pop edi
  41771a:	ret    0xa5c7
  41771d:	sahf   
  41771e:	ficomp WORD PTR [edi]
  417720:	es mov ah,0xd2
  417723:	cwde   
  417724:	out    dx,eax
  417725:	xchg   esp,eax
  417726:	lods   eax,DWORD PTR ds:[esi]
  417727:	ret    0x629c
  41772a:	(bad)  
  41772b:	inc    esp
  41772c:	pusha  
  41772d:	out    dx,eax
  41772e:	dec    edi
  41772f:	mov    ah,0x27
  417731:	xchg   ecx,ebp
  417733:	jl     0x41771e
  417735:	scas   eax,DWORD PTR es:[edi]
  417736:	sub    DWORD PTR [eax-0x2ceb2328],ebp
  41773c:	add    al,0xd1
  41773e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41773f:	(bad)  
  417740:	xor    al,0xb0
  417742:	xchg   edi,eax
  417743:	(bad)  
  417744:	call   0xefca:0x127d46a6
  41774b:	movhps xmm2,QWORD PTR [esi-0x52]
  41774f:	mov    eax,0x291234a2
  417754:	mov    ecx,0x4ae69f9b
  417759:	lods   al,BYTE PTR ds:[esi]
  41775a:	pop    ss
  41775b:	and    BYTE PTR [edi-0x5d19925a],cl
  417761:	(bad)  
  417762:	enter  0x7dbb,0x6a
  417766:	ds push 0x73
  417769:	mov    eax,0xd0312113
  41776e:	and    eax,0xe8ae8169
  417773:	addr16 and eax,0xa76b8031
  417779:	scas   al,BYTE PTR es:[edi]
  41777a:	fild   DWORD PTR [ebp+0x3869a124]
  417780:	test   ah,dh
  417782:	shr    DWORD PTR [edx],1
  417784:	inc    eax
  417785:	lea    edi,[eax]
  417787:	cli    
  417788:	jne    0x4177f2
  41778a:	je     0x4177b0
  41778c:	xchg   ebx,eax
  41778d:	aad    0xa5
  41778f:	loope  0x41777b
  417791:	dec    ecx
  417792:	dec    ebx
  417793:	xor    dh,BYTE PTR [ecx+0x42]
  417796:	xchg   esi,eax
  417797:	lods   al,BYTE PTR ds:[esi]
  417798:	dec    ebp
  417799:	out    dx,eax
  41779a:	pop    ebx
  41779b:	or     dh,dh
  41779d:	ss cs fprem 
  4177a1:	mov    bh,0x3e
  4177a3:	nop
  4177a4:	std    
  4177a5:	xor    DWORD PTR [ebx],0x2c
  4177a8:	les    edx,FWORD PTR [edx+0x79]
  4177ab:	dec    edx
  4177ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177ad:	stc    
  4177ae:	or     dh,dl
  4177b0:	or     al,0xd9
  4177b2:	out    0x64,al
  4177b4:	fild   QWORD PTR [eax+0x202548df]
  4177ba:	retf   
  4177bb:	retf   0x4445
  4177be:	sub    dh,BYTE PTR [eax+edi*2-0x4a]
  4177c2:	sar    ch,1
  4177c4:	mov    eax,0x27d3866f
  4177c9:	sub    dh,BYTE PTR [edi+0x5a]
  4177cc:	push   ds
  4177cd:	(bad)  
  4177ce:	mov    dh,0xae
  4177d0:	sub    BYTE PTR [esp+edx*8-0x38],cl
  4177d4:	(bad)  
  4177d5:	cmc    
  4177d6:	or     eax,edi
  4177d8:	retf   
  4177d9:	pop    esp
  4177da:	sbb    DWORD PTR [ecx],ecx
  4177dc:	sub    BYTE PTR [edx],dh
  4177de:	xor    edx,DWORD PTR [esi]
  4177e0:	xor    DWORD PTR [ecx-0x7d083529],0x10
  4177e7:	add    DWORD PTR [ecx],edx
  4177e9:	sub    bl,ah
  4177eb:	lds    eax,FWORD PTR [ecx-0x162fc174]
  4177f1:	pop    es
  4177f2:	mov    edi,0x857d77d2
  4177f7:	jmp    0x534f77c4
  4177fc:	(bad)  
  4177fd:	adc    BYTE PTR [esi],0x6b
  417800:	mov    bh,0x14
  417802:	xchg   ebp,eax
  417803:	push   cs
  417804:	in     eax,0xde
  417806:	push   0x63e441b
  41780b:	(bad)  
  41780c:	jmp    0x4177ce
  41780e:	mov    bl,0xea
  417810:	mov    bh,0x2f
  417812:	loop   0x417881
  417814:	sub    BYTE PTR [ebx+0x56b02aa5],bl
  41781a:	mov    ecx,DWORD PTR [ebx-0x1d]
  41781d:	dec    ebp
  41781e:	cmp    cl,BYTE PTR [edi]
  417820:	in     eax,0x6c
  417822:	int    0x42
  417824:	enter  0x48e3,0x5b
  417828:	xor    dh,BYTE PTR [eax+0x67]
  41782b:	inc    esi
  41782c:	dec    ebx
  41782d:	inc    esi
  41782e:	fidiv  DWORD PTR cs:[edx-0x34]
  417832:	inc    esi
  417833:	sti    
  417834:	dec    ebx
  417835:	pop    ebx
  417836:	loop   0x417804
  417838:	lds    ebx,FWORD PTR [ecx+0x77]
  41783b:	cs inc eax
  41783d:	lods   al,BYTE PTR ds:[esi]
  41783e:	fcom   DWORD PTR [ebx-0x4435f8f7]
  417844:	inc    ebp
  417845:	nop
  417846:	leave  
  417847:	aas    
  417848:	out    dx,eax
  417849:	out    0x7f,eax
  41784b:	mov    dl,0x1a
  41784d:	das    
  41784e:	or     dh,BYTE PTR [edx]
  417850:	dec    ecx
  417851:	or     BYTE PTR [ecx+0x1f],0xcc
  417855:	sbb    eax,0x1002fe1a
  41785a:	mov    bl,0xca
  41785c:	popf   
  41785d:	mov    eax,0xb1a13053
  417862:	ja     0x41789c
  417864:	push   ss
  417865:	cmc    
  417866:	lea    esi,[esi-0x407f008]
  41786c:	test   BYTE PTR [esi-0x2c2f46ab],dh
  417872:	shl    BYTE PTR [eax],0x9c
  417875:	xchg   edi,eax
  417876:	xchg   esi,eax
  417877:	fistp  DWORD PTR [edi-0x59c5116c]
  41787d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41787e:	outs   dx,BYTE PTR ds:[esi]
  41787f:	and    al,0x75
  417881:	std    
  417882:	cwde   
  417883:	loopne 0x417812
  417885:	test   al,0x2d
  417887:	xor    dl,dl
  417889:	mov    dh,0x40
  41788b:	sub    BYTE PTR [eax],ah
  41788d:	inc    edi
  41788e:	jmp    0x4178e9
  417890:	push   ds
  417891:	sbb    eax,0x5efb1f61
  417896:	jns    0x41782f
  417898:	fistp  DWORD PTR [ecx+0x78]
  41789b:	aad    0x48
  41789d:	ret    0x2ed3
  4178a0:	data16 addr16 mov dh,0x88
  4178a4:	mov    ?,ecx
  4178a6:	push   ds
  4178a7:	pop    edi
  4178a8:	cli    
  4178a9:	jp     0x417868
  4178ab:	xchg   esp,eax
  4178ac:	call   0xaba1:0x190681f2
  4178b3:	push   ecx
  4178b4:	call   0xbdfa:0x74d8cc6d
  4178bb:	repnz add ebx,eax
  4178be:	sub    ecx,DWORD PTR [esi+0xa]
  4178c1:	ss (bad) 
  4178c3:	jp     0x4178de
  4178c5:	je     0x41787b
  4178c7:	xchg   ebx,eax
  4178c8:	xchg   esi,eax
  4178c9:	sbb    eax,0xdad4ec4c
  4178ce:	inc    edx
  4178cf:	jg     0x4178d3
  4178d1:	gs call 0x6e97d7a6
  4178d7:	push   ds
  4178d8:	dec    edi
  4178d9:	push   cs
  4178da:	call   0x9cd5e7dd
  4178df:	add    esp,edi
  4178e1:	dec    eax
  4178e2:	retf   
  4178e3:	sti    
  4178e4:	out    0x35,al
  4178e6:	rcl    bl,cl
  4178e8:	sbb    DWORD PTR [edx+eiz*4+0x3e9b6b5d],esp
  4178ef:	and    bh,BYTE PTR [ebp-0x7c]
  4178f2:	push   0x74
  4178f4:	addr16 pop ebx
  4178f6:	pop    edi
  4178f7:	aaa    
  4178f8:	xchg   esp,eax
  4178f9:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178fb:	xor    al,0xd6
  4178fd:	int    0x33
  4178ff:	ins    BYTE PTR es:[edi],dx
  417900:	(bad)  
  417901:	mov    WORD PTR [ebx-0x5ccc7e77],?
  417907:	aas    
  417908:	and    DWORD PTR [edx-0x3d7115ca],esi
  41790e:	and    DWORD PTR [ecx],edx
  417910:	sahf   
  417911:	dec    al
  417913:	not    DWORD PTR [ecx]
  417915:	and    eax,DWORD PTR [ecx]
  417917:	xchg   ebx,eax
  417918:	pushf  
  417919:	push   ds
  41791a:	push   ebx
  41791b:	mov    bh,0x9
  41791d:	pushf  
  41791e:	fcomip st,st(3)
  417920:	inc    esi
  417921:	push   esp
  417922:	int    0xcb
  417924:	pop    ss
  417925:	sub    al,0x3b
  417927:	ds retf 
  417929:	and    al,0x43
  41792b:	jo     0x417912
  41792d:	dec    esp
  41792e:	sbb    BYTE PTR [ebp+0x67ea2f72],0xad
  417935:	xor    DWORD PTR [edx-0x1ce07f04],edi
  41793b:	xor    al,0x5c
  41793d:	push   cs
  41793e:	add    BYTE PTR [ebx],cl
  417940:	dec    edx
  417941:	(bad)  
  417942:	cmp    ch,bl
  417944:	or     al,dl
  417946:	jne    0x417906
  417948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417949:	shr    ah,cl
  41794b:	xor    BYTE PTR [ecx-0x416ac98a],0xf7
  417952:	data16 (bad) 
  417954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417955:	push   edi
  417956:	out    0x51,al
  417958:	sar    BYTE PTR [ebx+0x28],0x38
  41795c:	cmp    edi,DWORD PTR [eax]
  41795e:	in     al,dx
  41795f:	sub    BYTE PTR [esi],dl
  417961:	inc    DWORD PTR [eax]
  417963:	sub    dh,BYTE PTR [ebp-0x7d125ad5]
  417969:	jecxz  0x4178f7
  41796b:	xchg   esp,eax
  41796c:	scas   al,BYTE PTR es:[edi]
  41796d:	mov    ebx,DWORD PTR [ecx]
  41796f:	add    DWORD PTR [eax],ecx
  417971:	into   
  417972:	or     al,0x44
  417974:	add    eax,0x3d43e7e3
  417979:	push   dx
  41797b:	xchg   edi,eax
  41797c:	sub    BYTE PTR [edx-0xcb6ecee],al
  417982:	adc    BYTE PTR [eax-0x31d0fca1],0x27
  417989:	dec    esi
  41798a:	sbb    cl,BYTE PTR [si-0x64]
  41798e:	adc    dh,BYTE PTR cs:[edx-0x19fb4978]
  417995:	sbb    al,BYTE PTR [ebx+0x40]
  417998:	sbb    ecx,DWORD PTR [ebx+0x73]
  41799b:	outs   dx,BYTE PTR ds:[esi]
  41799c:	(bad)  
  41799d:	jnp    0x417939
  41799f:	outs   dx,DWORD PTR ds:[esi]
  4179a0:	mov    ch,0x2d
  4179a2:	inc    ebx
  4179a3:	jle    0x4179fb
  4179a5:	pop    es
  4179a6:	jne    0x417956
  4179a8:	mov    bl,BYTE PTR [ebp+0x7f]
  4179ab:	out    dx,eax
  4179ac:	cmp    ch,BYTE PTR [ecx]
  4179ae:	push   edx
  4179af:	add    al,0x6f
  4179b1:	(bad)  
  4179b3:	jg     0x4179a4
  4179b5:	mov    eax,ds:0xfa9d2d93
  4179ba:	iret   
  4179bb:	test   al,0x68
  4179bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179be:	(bad)  
  4179bf:	adc    dl,BYTE PTR [esi+esi*1-0x3a239fd7]
  4179c6:	fs cdq 
  4179c8:	sar    DWORD PTR [edx-0x7e3526a8],0xcb
  4179cf:	sbb    eax,0x9695f0e
  4179d4:	jae    0x4179a7
  4179d6:	pushf  
  4179d7:	cmp    BYTE PTR [ecx],ch
  4179d9:	out    0xd8,eax
  4179db:	mov    ch,0x35
  4179dd:	fdiv   QWORD PTR [edi-0x67a7f0b2]
  4179e3:	out    dx,al
  4179e4:	repnz in eax,0x1b
  4179e7:	jecxz  0x4179c3
  4179e9:	ret    0x7dca
  4179ec:	or     esi,DWORD PTR [ebp+0x2b]
  4179ef:	push   edi
  4179f0:	push   0x1bdb3d63
  4179f5:	imul   edx,DWORD PTR [esi],0x874b560c
  4179fb:	sbb    BYTE PTR [ecx+0x3a82ac33],bl
  417a01:	or     al,0x50
  417a03:	cmp    al,BYTE PTR [eax]
  417a05:	clc    
  417a06:	add    ebp,ecx
  417a08:	ror    BYTE PTR [esi],0xb0
  417a0b:	mov    ah,0x4a
  417a0d:	cmp    al,0x3e
  417a0f:	inc    eax
  417a10:	sub    cl,al
  417a12:	mov    ecx,0x109c34f2
  417a17:	mov    dl,BYTE PTR [eax+eax*1+0x1ac3ce5f]
  417a1e:	push   ds
  417a1f:	lock dec esp
  417a21:	and    ecx,DWORD PTR [edi-0x58]
  417a24:	adc    al,BYTE PTR [esi]
  417a26:	lods   al,BYTE PTR ds:[esi]
  417a27:	inc    edi
  417a28:	stos   BYTE PTR es:[edi],al
  417a29:	fidiv  DWORD PTR ds:0x84f4ada9
  417a2f:	sbb    eax,0x3b7a5500
  417a34:	mov    al,ds:0x9078a265
  417a39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a3a:	mov    ?,edi
  417a3c:	and    edi,esi
  417a3e:	psrlw  mm1,0xe2
  417a42:	out    dx,eax
  417a43:	sub    dh,BYTE PTR [ebx-0x8]
  417a46:	xor    BYTE PTR [eax+ebx*4-0x5c8ec31c],bl
  417a4d:	out    0x6d,eax
  417a4f:	dec    esp
  417a50:	arpl   WORD PTR [esi+0x7f2bbc4b],ax
  417a56:	mov    bl,0x11
  417a58:	sbb    DWORD PTR [edi],eax
  417a5a:	jge    0x417aa3
  417a5c:	xor    al,0x41
  417a5e:	jb     0x417a09
  417a60:	jle    0x417a0a
  417a62:	inc    edi
  417a63:	mov    ebx,0x646b1655
  417a68:	inc    esp
  417a69:	sub    bl,ah
  417a6b:	add    BYTE PTR [ecx+0x654de6bb],dl
  417a71:	push   esi
  417a72:	pop    ebp
  417a73:	imul   esi,DWORD PTR [ebx],0x45600c0e
  417a79:	out    0x39,eax
  417a7b:	cmp    eax,0x141cc983
  417a80:	pop    ss
  417a81:	lods   al,BYTE PTR ds:[esi]
  417a82:	fnstcw WORD PTR [edi]
  417a84:	push   edx
  417a85:	daa    
  417a86:	cmp    ah,bh
  417a88:	xchg   edx,eax
  417a89:	jno    0x417ac1
  417a8b:	out    dx,al
  417a8c:	cmp    ah,BYTE PTR [esi]
  417a8e:	adc    DWORD PTR [edx],esp
  417a90:	and    DWORD PTR [eax-0x69ff6e91],eax
  417a96:	mov    ch,0x37
  417a98:	ins    DWORD PTR es:[edi],dx
  417a99:	(bad)  
  417a9a:	xor    al,0x64
  417a9c:	xlat   BYTE PTR ds:[ebx]
  417a9d:	dec    ebx
  417a9e:	shl    ch,0xfa
  417aa1:	loopne 0x417b01
  417aa3:	les    eax,FWORD PTR [edx+0x36325fb0]
  417aa9:	mov    ds:0xee291f3e,al
  417aae:	sub    al,bh
  417ab0:	sbb    eax,DWORD PTR [esi]
  417ab2:	lea    edx,[esi-0x67]
  417ab5:	pop    edx
  417ab6:	les    ecx,FWORD PTR [esi+0x13]
  417ab9:	cmc    
  417aba:	push   esi
  417abb:	cmp    eax,0xf2dcf460
  417ac0:	lahf   
  417ac1:	stos   DWORD PTR es:[edi],eax
  417ac2:	test   DWORD PTR [esi-0x546397ad],edx
  417ac8:	cmp    al,0xee
  417aca:	sar    DWORD PTR [ebx+0x43d98d3f],1
  417ad0:	jmp    0xf1c:0x6847cbbb
  417ad7:	ficomp DWORD PTR [edx-0xf]
  417ada:	pop    ss
  417adb:	inc    edi
  417adc:	jne    0x417aad
  417ade:	mov    ebx,0x740d8336
  417ae3:	aad    0x5d
  417ae5:	bnd je 0x417a89
  417ae8:	test   DWORD PTR [ebx+0x4a019c9f],ebp
  417aee:	popf   
  417aef:	xchg   edx,eax
  417af0:	and    BYTE PTR [ebx-0x58],ah
  417af3:	mov    ss:0x6a1b68c8,eax
  417af9:	aaa    
  417afa:	int3   
  417afb:	xor    ecx,DWORD PTR [edx]
  417afd:	retf   0x5d08
  417b00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b01:	sub    ebx,ebx
  417b03:	mov    ah,0xa6
  417b05:	xchg   edi,eax
  417b06:	dec    ebp
  417b07:	mov    esp,0x5f5dc6f3
  417b0c:	jnp    0x417b55
  417b0e:	xchg   ebp,eax
  417b0f:	push   eax
  417b10:	add    ch,bh
  417b12:	mov    dl,bh
  417b14:	call   0xa40e2b8a
  417b19:	enter  0xc7dd,0x53
  417b1d:	sub    DWORD PTR [eax-0x21ab6af5],edi
  417b23:	clc    
  417b24:	dec    ebx
  417b25:	and    al,BYTE PTR [edx+0x2a30cdba]
  417b2b:	add    al,0x52
  417b2d:	pusha  
  417b2e:	inc    esp
  417b2f:	cmp    BYTE PTR [edx],0x86
  417b32:	inc    ebp
  417b33:	fwait
  417b34:	pop    ebp
  417b35:	and    ebx,ebx
  417b37:	sub    al,BYTE PTR [eax]
  417b39:	inc    ebx
  417b3a:	xor    DWORD PTR [edi],edx
  417b3c:	cdq    
  417b3d:	data16 test al,dh
  417b40:	add    al,0x81
  417b42:	shr    BYTE PTR [edx+esi*1+0x69],1
  417b46:	ficom  DWORD PTR [edi-0x6a]
  417b49:	imul   edx,DWORD PTR [esi],0x45944b1e
  417b4f:	test   DWORD PTR [edi-0x3],esi
  417b52:	cmp    BYTE PTR [ecx+eiz*2],dl
  417b55:	hlt    
  417b56:	push   cs
  417b57:	outs   dx,DWORD PTR ds:[esi]
  417b58:	push   0xffffff8a
  417b5a:	add    al,0xb5
  417b5c:	lahf   
  417b5d:	inc    edx
  417b5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b5f:	cmc    
  417b60:	lock sbb BYTE PTR [ecx+eax*4+0x243fb297],bl
  417b68:	aaa    
  417b69:	sbb    BYTE PTR [esi+0x60d99d99],bl
  417b6f:	mov    BYTE PTR [eax-0x2c],cl
  417b72:	lea    edi,[ecx]
  417b74:	jle    0x417b28
  417b76:	leave  
  417b77:	adc    eax,ebx
  417b79:	lods   al,BYTE PTR ds:[esi]
  417b7a:	popa   
  417b7b:	push   es
  417b7c:	inc    ebp
  417b7d:	dec    ebx
  417b7e:	sbb    eax,0x43cfb796
  417b83:	fcom   QWORD PTR [esi+0x3]
  417b86:	ror    DWORD PTR [eax+0x2437cee1],cl
  417b8c:	mov    esp,0x8d6f499b
  417b91:	dec    ecx
  417b92:	imul   edx,ebx,0x9b0bd263
  417b98:	dec    BYTE PTR [edx+esi*2+0x6b]
  417b9c:	ret    0x4969
  417b9f:	mov    edx,0xf010483
  417ba4:	or     cl,BYTE PTR [eax]
  417ba6:	rcr    BYTE PTR ds:0xc30588fa,1
  417bac:	bnd jnp 0x417ba0
  417baf:	fsubr  QWORD PTR [edi]
  417bb1:	push   esp
  417bb2:	mov    eax,ds:0x54f2f384
  417bb7:	inc    edx
  417bb8:	adc    eax,0x685ca743
  417bbd:	mov    ebx,0x2c33eedb
  417bc2:	inc    ebx
  417bc3:	sti    
  417bc4:	pop    edx
  417bc5:	mov    al,al
  417bc7:	dec    esp
  417bc8:	pop    es
  417bc9:	out    0xad,eax
  417bcb:	adc    BYTE PTR [edx-0x4f59ebc],ah
  417bd1:	add    DWORD PTR [edx-0x57],ebp
  417bd4:	fsub   st(6),st
  417bd6:	xor    DWORD PTR [edx-0x7e],edi
  417bd9:	dec    ebx
  417bda:	push   esp
  417bdb:	jo     0x417b75
  417bdd:	popf   
  417bde:	or     BYTE PTR [ebx-0xf8d96fc],0xf6
  417be5:	mov    ah,0xe9
  417be7:	cmp    bl,bh
  417be9:	sbb    ebp,ebp
  417beb:	scas   eax,DWORD PTR es:[edi]
  417bec:	ins    BYTE PTR es:[edi],dx
  417bed:	mov    fs,WORD PTR [eax+0xfd25846]
  417bf3:	dec    ecx
  417bf4:	test   al,0xbe
  417bf6:	int3   
  417bf7:	mov    edx,0xacb22ecb
  417bfc:	or     eax,ebx
  417bfe:	jns    0x417bd3
  417c00:	aaa    
  417c01:	or     BYTE PTR [ebp+0x29246349],dl
  417c07:	retf   
  417c08:	push   0x58cbe909
  417c0d:	adc    BYTE PTR [eax+0x58],bh
  417c10:	mov    ebx,0x4a687bdb
  417c15:	(bad)  [edx+0x5a11ccdf]
  417c1b:	push   edx
  417c1c:	data16 mov dh,0x37
  417c1f:	(bad)  
  417c20:	xchg   BYTE PTR [eax+0x1b],bh
  417c23:	imul   DWORD PTR [edi+edx*8]
  417c26:	je     0x417c04
  417c28:	push   ss
  417c29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c2a:	lahf   
  417c2b:	inc    esp
  417c2c:	ret    0xdf7c
  417c2f:	pop    ebx
  417c30:	cdq    
  417c31:	add    eax,0x197e7993
  417c36:	stos   DWORD PTR es:[edi],eax
  417c37:	jmp    0x417c11
  417c39:	xchg   edx,eax
  417c3a:	inc    eax
  417c3b:	xchg   esp,eax
  417c3c:	stc    
  417c3d:	adc    ah,ch
  417c3f:	mov    esi,DWORD PTR [ecx]
  417c41:	std    
  417c42:	pop    ss
  417c43:	fimul  WORD PTR [esp+eax*4]
  417c46:	ret    0x7ef4
  417c49:	(bad)  
  417c4a:	jne    0x417c7e
  417c4c:	dec    edx
  417c4d:	add    ah,BYTE PTR [ebp-0x1c]
  417c50:	in     eax,dx
  417c51:	xor    eax,0xbbea987f
  417c56:	aam    0x30
  417c58:	mov    dl,0x7d
  417c5a:	fwait
  417c5b:	inc    eax
  417c5c:	fsub   st,st(3)
  417c5e:	sbb    ecx,DWORD PTR [ebp-0x5931cc58]
  417c64:	loopne 0x417bf1
  417c66:	xlat   BYTE PTR ds:[ebx]
  417c67:	mov    eax,0x6d0df0fd
  417c6c:	and    al,0xb4
  417c6e:	or     al,0xb6
  417c70:	cmp    eax,0x98c0551
  417c75:	fwait
  417c76:	nop
  417c77:	int    0xc4
  417c79:	lods   al,BYTE PTR ds:[esi]
  417c7a:	mov    eax,ds:0xcbb96361
  417c7f:	cld    
  417c80:	push   esp
  417c81:	pop    ebx
  417c82:	mov    dl,0x9e
  417c84:	aam    0xc2
  417c86:	adc    ebp,DWORD PTR [eax+0x8]
  417c89:	sub    ecx,esi
  417c8b:	lods   eax,DWORD PTR ds:[esi]
  417c8c:	or     esp,DWORD PTR [edx-0x47]
  417c8f:	adc    esp,ebx
  417c91:	test   edi,esp
  417c93:	xor    BYTE PTR [edi+edi*4-0x7e],dl
  417c97:	push   cs
  417c98:	and    DWORD PTR [ebx],edi
  417c9a:	rep stos DWORD PTR es:[edi],eax
  417c9c:	sar    esi,0x43
  417c9f:	mov    dh,0x54
  417ca1:	ja     0x417cdf
  417ca3:	inc    esp
  417ca4:	loopne 0x417cbe
  417ca6:	mov    WORD PTR [esi-0x59372801],ss
  417cac:	jb     0x417d0b
  417cae:	test   BYTE PTR [eax],bl
  417cb0:	cdq    
  417cb1:	add    BYTE PTR [eax+0x93dcab4],cl
  417cb7:	inc    esp
  417cb8:	lea    edx,[ecx]
  417cba:	rcr    edx,1
  417cbc:	arpl   WORD PTR [edx-0x50],di
  417cbf:	and    ebx,DWORD PTR [ecx]
  417cc1:	popf   
  417cc2:	jbe    0x417ceb
  417cc4:	adc    edx,DWORD PTR [eax+0x2]
  417cc7:	sbb    edi,DWORD PTR [ebp-0x23]
  417cca:	inc    eax
  417ccb:	or     eax,0xe9232541
  417cd0:	mov    bh,0x4a
  417cd2:	loopne 0x417c9d
  417cd4:	or     al,0xfc
  417cd6:	and    al,bl
  417cd8:	sub    eax,0xeb454c26
  417cdd:	add    eax,0x3fb9f283
  417ce2:	jmp    0x417d5e
  417ce4:	lock jb 0x417d11
  417ce7:	xchg   ecx,eax
  417ce8:	push   es
  417ce9:	lods   eax,DWORD PTR ds:[esi]
  417cea:	mov    esi,0xfd33c9ba
  417cef:	jmp    0x552c:0x7344519
  417cf6:	aaa    
  417cf7:	ins    DWORD PTR es:[edi],dx
  417cf8:	and    edi,DWORD PTR ds:0x654c6590
  417cfe:	cmc    
  417cff:	xor    bh,BYTE PTR [edx+0x73]
  417d02:	ffree  st(1)
  417d04:	stc    
  417d05:	pop    esp
  417d06:	push   edi
  417d07:	data16 out 0x23,al
  417d0a:	enter  0x3d01,0xf6
  417d0e:	push   ds
  417d0f:	cld    
  417d10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d11:	sbb    DWORD PTR [ebp+0x1a],0xb82e6589
  417d18:	xor    ch,BYTE PTR [edi+0x5d9cc29]
  417d1e:	(bad)  
  417d20:	leave  
  417d21:	add    eax,0x39e66004
  417d26:	push   ss
  417d27:	dec    esi
  417d28:	sub    eax,0x3a6bb0f
  417d2d:	mov    esi,DWORD PTR [ecx]
  417d2f:	mov    ebx,0xccf87777
  417d34:	xchg   edi,eax
  417d35:	push   ebp
  417d36:	lods   eax,DWORD PTR ds:[esi]
  417d37:	and    DWORD PTR [esi-0x2e772f13],ebp
  417d3d:	(bad)  
  417d3e:	scas   al,BYTE PTR es:[edi]
  417d3f:	fst    QWORD PTR [ebx+0x46]
  417d42:	xchg   esp,eax
  417d43:	aas    
  417d44:	xchg   BYTE PTR [edx+0x7e2387c],ch
  417d4a:	fcomi  st,st(5)
  417d4c:	ds test eax,0x7df86146
  417d52:	nop
  417d53:	dec    BYTE PTR [ecx-0x56]
  417d56:	paddusw mm0,QWORD PTR [edx+0x87bfb2c]
  417d5d:	fs icebp 
  417d5f:	in     al,dx
  417d60:	dec    ecx
  417d61:	into   
  417d62:	std    
  417d63:	pusha  
  417d64:	adc    eax,0x86a7980a
  417d69:	mov    ebp,0x3285b88f
  417d6e:	jbe    0xa221c93d
  417d74:	imul   ebx,DWORD PTR [ecx-0x41],0xe2733902
  417d7b:	or     al,cl
  417d7d:	and    ah,BYTE PTR [ebx+eiz*2+0x2]
  417d81:	imul   bp,WORD PTR [edi+0x78],0x1693
  417d87:	fist   WORD PTR [edi]
  417d89:	jg     0x417d95
  417d8b:	pop    ds
  417d8c:	xchg   edi,eax
  417d8d:	fldcw  WORD PTR [esi-0x653b901f]
  417d93:	xchg   dl,ah
  417d95:	add    al,0xcf
  417d97:	cdq    
  417d98:	xor    al,0xb8
  417d9a:	push   ds
  417d9b:	mov    bl,0x9d
  417d9d:	icebp  
  417d9e:	jmp    0xa46b:0xf6dd5830
  417da5:	(bad)  
  417da6:	xchg   edi,eax
  417da7:	daa    
  417da8:	nop
  417da9:	fistp  WORD PTR [edx+0x70e9439f]
  417daf:	pop    esi
  417db0:	adc    cl,BYTE PTR [edx+0x81da909]
  417db6:	lock push 0xffffff91
  417db9:	push   esi
  417dba:	jge    0x417e17
  417dbc:	push   esi
  417dbd:	rcr    BYTE PTR [esi-0x18571ae5],1
  417dc3:	adc    bl,BYTE PTR ds:[edx+ebx*2-0x20]
  417dc8:	mov    al,0x16
  417dca:	cdq    
  417dcb:	fild   QWORD PTR [esi]
  417dcd:	(bad)  
  417dce:	repnz xor al,0x1d
  417dd1:	xor    DWORD PTR [eax+0x11da62b4],edi
  417dd7:	push   0x88f0e638
  417ddc:	in     al,0xaf
  417dde:	loopne 0x417dfa
  417de0:	mov    BYTE PTR ds:0x93a08fa6,dh
  417de6:	call   0xa0bb:0x827f0a68
  417ded:	(bad)  
  417dee:	imul   BYTE PTR [ebx-0x49e6f673]
  417df4:	cmp    eax,DWORD PTR [edx+0x4001b7cf]
  417dfa:	ror    DWORD PTR ds:0x2c1c59f2,cl
  417e00:	icebp  
  417e01:	xchg   esp,eax
  417e02:	(bad)  [esi+0x183ee218]
  417e08:	ja     0x417e43
  417e0a:	pop    esi
  417e0b:	retf   0x9d70
  417e0e:	add    DWORD PTR [eax+0x642a0b86],eax
  417e14:	fnstenv ds:0x382cdd1c
  417e1a:	ins    DWORD PTR es:[edi],dx
  417e1b:	mov    edi,0xdf59b771
  417e20:	aas    
  417e21:	add    dh,BYTE PTR gs:[ebp-0x5c]
  417e25:	outs   dx,DWORD PTR ds:[esi]
  417e26:	dec    esi
  417e27:	inc    ebp
  417e28:	xor    al,0x2d
  417e2a:	stos   DWORD PTR es:[edi],eax
  417e2b:	mov    ecx,DWORD PTR [ebp-0x20]
  417e2e:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  417e35:	mov    edx,DWORD PTR [ebp+0xc]
  417e38:	cmp    cl,BYTE PTR [edx]
  417e3a:	jne    0x420de3
  417e40:	mov    ecx,DWORD PTR [ebp-0x14]
  417e43:	mov    edx,DWORD PTR [ebp+0xc]
  417e46:	movsx  edx,BYTE PTR [edx]
  417e49:	xor    ecx,eax
  417e4b:	add    ecx,esi
  417e4d:	jmp    0x41a1da
  417e52:	cmp    DWORD PTR [ecx],ecx
  417e54:	mov    ebp,0x79c6ad42
  417e59:	stc    
  417e5a:	mov    DWORD PTR [ebp-0x58],edi
  417e5d:	fld    DWORD PTR [ebx+eiz*8]
  417e60:	cmp    ebp,ecx
  417e62:	fidivr WORD PTR [eax]
  417e64:	jge    0x417ee0
  417e66:	or     bl,BYTE PTR [edi+0x7a]
  417e69:	jp     0x417ea1
  417e6b:	mov    es,eax
  417e6d:	ret    
  417e6e:	dec    esp
  417e6f:	dec    esp
  417e70:	jle    0x417dfb
  417e72:	pop    ebx
  417e73:	add    BYTE PTR cs:[esi+ebp*1-0x70],0x88
  417e79:	jecxz  0x417e35
  417e7b:	push   ss
  417e7c:	mov    bh,0xa0
  417e7e:	test   DWORD PTR [ecx-0x4a946ead],eax
  417e84:	mov    dh,0xbb
  417e86:	(bad)  
  417e87:	sbb    ebx,edx
  417e89:	mov    ecx,ds
  417e8b:	or     cl,dh
  417e8d:	leave  
  417e8e:	aaa    
  417e8f:	(bad)  
  417e90:	sbb    al,0xbf
  417e92:	and    BYTE PTR [ecx],ah
  417e94:	jno    0x417efc
  417e96:	and    DWORD PTR [edx+0x77],ecx
  417e99:	dec    esi
  417e9a:	imul   ecx,ecx
  417e9d:	sbb    eax,DWORD PTR [ecx+0x15]
  417ea0:	sti    
  417ea1:	paddw  mm1,QWORD PTR [ebp+ebp*1-0x724842cc]
  417ea9:	cdq    
  417eaa:	mov    ecx,0xee7216e6
  417eaf:	pop    es
  417eb0:	sub    al,0xf4
  417eb2:	test   al,0x60
  417eb4:	xchg   esp,eax
  417eb5:	clc    
  417eb6:	inc    eax
  417eb7:	(bad)  
  417eb8:	jmp    0x69b0bd5d
  417ebd:	jns    0x417e8c
  417ebf:	xlat   BYTE PTR ds:[ebx]
  417ec0:	push   ss
  417ec1:	sub    al,0xf8
  417ec3:	jo     0x417f44
  417ec5:	lea    edi,[edi+edi*4-0x5331cdf5]
  417ecc:	ins    DWORD PTR es:[edi],dx
  417ecd:	sti    
  417ece:	call   FWORD PTR [eax+ebp*1]
  417ed1:	pop    ebp
  417ed2:	mov    ch,0x3a
  417ed4:	call   0x3690e2a9
  417ed9:	outs   dx,DWORD PTR ds:[esi]
  417eda:	(bad)  
  417edb:	push   0xd
  417edd:	mov    ecx,0x8b2b932b
  417ee2:	lahf   
  417ee3:	dec    edx
  417ee4:	fisubr DWORD PTR [ebp-0x38]
  417ee7:	int    0x43
  417ee9:	inc    edx
  417eea:	jl     0x417f17
  417eec:	ror    BYTE PTR [ebp-0xefceb0c],0x23
  417ef3:	mov    ebx,0x4314a9a2
  417ef8:	dec    ebx
  417ef9:	(bad)  
  417efa:	sahf   
  417efb:	jo     0x417ee9
  417efd:	mov    ds,WORD PTR [ecx]
  417eff:	in     eax,dx
  417f00:	adc    al,0x22
  417f02:	adc    eax,0xf34e85c3
  417f07:	push   ebx
  417f08:	adc    dh,dh
  417f0a:	rcl    DWORD PTR [ebx+0x448fb2a0],0xab
  417f11:	jle    0x417f6a
  417f13:	mov    al,0xb3
  417f15:	(bad)  
  417f16:	jo     0x417f15
  417f18:	aaa    
  417f19:	shr    BYTE PTR [eax+0x391f01c],0x58
  417f20:	cmp    edi,ebx
  417f22:	repz cmc 
  417f24:	and    BYTE PTR [ecx+0x228ae92b],0x5b
  417f2b:	dec    ebx
  417f2c:	sbb    al,BYTE PTR [edi+ebp*8+0x24]
  417f30:	les    edi,FWORD PTR [esi+0x4a723f76]
  417f36:	das    
  417f37:	push   eax
  417f38:	push   0xe5415df1
  417f3d:	fstp   TBYTE PTR [ebp+0x12dbe18c]
  417f43:	pop    es
  417f44:	out    dx,al
  417f45:	or     BYTE PTR [edx+eiz*1-0x71312026],dl
  417f4c:	retf   
  417f4d:	cld    
  417f4e:	add    bh,bh
  417f50:	loopne 0x417f8d
  417f52:	xor    al,0xd3
  417f54:	int    0x6b
  417f56:	lods   eax,DWORD PTR ds:[esi]
  417f57:	mov    eax,?
  417f59:	or     al,BYTE PTR [esi-0x1]
  417f5c:	pushf  
  417f5d:	pop    ecx
  417f5e:	mov    eax,0x7846c1a
  417f63:	add    BYTE PTR [edx],bl
  417f65:	pop    eax
  417f66:	pop    esp
  417f67:	leave  
  417f68:	sbb    BYTE PTR [esi],cl
  417f6a:	or     DWORD PTR [edx+esi*1-0x6992faa1],esp
  417f71:	mov    edx,0x929eac73
  417f76:	and    DWORD PTR [ebp-0x43],ebp
  417f79:	mov    ds:0xf6e889f6,al
  417f7e:	cmp    eax,0x6fbcd8bf
  417f83:	gs aas 
  417f85:	inc    eax
  417f86:	mov    esi,0xda57e43a
  417f8b:	push   edx
  417f8c:	cdq    
  417f8d:	out    dx,al
  417f8e:	mov    esi,0xde057988
  417f93:	js     0x417ff3
  417f95:	icebp  
  417f96:	je     0x417fdb
  417f98:	push   cs
  417f99:	mov    ebx,0xa7780727
  417f9e:	test   al,0x5d
  417fa0:	jle    0x418012
  417fa2:	loop   0x417f87
  417fa4:	gs ja  0x417fae
  417fa7:	mov    ah,0xb0
  417fa9:	add    DWORD PTR [esi-0x11],eax
  417fac:	shl    edi,1
  417fae:	mov    esp,0x3422b7cd
  417fb3:	popf   
  417fb4:	(bad)  
  417fb6:	sbb    BYTE PTR [edi],0xda
  417fb9:	dec    ebx
  417fba:	repnz addr16 and eax,0xece915cb
  417fc1:	dec    eax
  417fc2:	xor    cl,BYTE PTR ds:0xfa2161c5
  417fc8:	lods   eax,DWORD PTR ds:[esi]
  417fc9:	push   es
  417fca:	mov    ebp,0x4cd16878
  417fcf:	test   BYTE PTR [ebx+eiz*2+0x31],al
  417fd3:	retf   0x91fa
  417fd6:	and    eax,0x892ea731
  417fdb:	nop
  417fdc:	pop    es
  417fdd:	aaa    
  417fde:	int    0x6
  417fe0:	clc    
  417fe1:	neg    dh
  417fe3:	into   
  417fe4:	and    bl,BYTE PTR [edi*2+0x1727646f]
  417feb:	idiv   ebp
  417fed:	addr16 fucomp st(1)
  417ff0:	jge    0x417fbd
  417ff2:	dec    edx
  417ff3:	push   esp
  417ff4:	inc    edx
  417ff5:	push   ebp
  417ff6:	mov    ah,dh
  417ff8:	retf   0xc813
  417ffb:	mov    cl,0x61
  417ffd:	jl     0x418013
  417fff:	and    bl,ah
  418001:	or     edx,ebx
  418003:	into   
  418004:	mov    cl,0x1c
  418006:	push   0xea79e8fa
  41800b:	shl    DWORD PTR ds:0x958a07ef,0x97
  418012:	jecxz  0x417f9f
  418014:	xchg   esp,eax
  418015:	xchg   esp,eax
  418016:	xor    eax,0x2e5ba290
  41801b:	pop    eax
  41801c:	and    eax,0x22f65d23
  418021:	fnstcw WORD PTR [ecx+0x4a]
  418024:	or     al,0xde
  418026:	cld    
  418027:	jb     0x4180a6
  418029:	fidivr DWORD PTR [ebx]
  41802b:	imul   esp,DWORD PTR [edi+edx*1+0x14a65311],0xffffff8c
  418033:	add    DWORD PTR [eax+0x68],0xffffff90
  418037:	ins    DWORD PTR es:[edi],dx
  418038:	xor    eax,0x2fea1d86
  41803d:	je     0x418018
  41803f:	std    
  418040:	jns    0x4180bf
  418042:	fld    DWORD PTR [esp+ebx*8]
  418045:	mov    ebx,cs
  418047:	or     eax,0x3d654731
  41804c:	dec    ebp
  41804d:	fcmovnbe st,st(1)
  41804f:	inc    BYTE PTR ds:0x4bdc3edc
  418055:	dec    esi
  418056:	jae    0x4180c3
  418058:	fst    QWORD PTR [edi+0x4a58ab11]
  41805e:	pop    ds
  41805f:	dec    ecx
  418060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418061:	fucom  st(2)
  418063:	sub    eax,0xdb1ac34c
  418068:	push   ebp
  418069:	xchg   esp,eax
  41806a:	jo     0x41800d
  41806c:	xor    al,0xf2
  41806e:	sbb    eax,0x8e8b7af0
  418073:	sbb    DWORD PTR ds:0x18c1d3c5,0xaa4c3585
  41807d:	cmp    al,0xb
  41807f:	add    ch,ah
  418081:	retf   0xbc1d
  418084:	(bad)  
  418085:	les    edi,FWORD PTR [ecx+ecx*2+0xf]
  418089:	push   edx
  41808a:	in     al,0xa2
  41808c:	ret    0xcbb4
  41808f:	sub    DWORD PTR [ebp+0x6c4dceba],0xffffff9c
  418096:	cdq    
  418097:	add    ebp,DWORD PTR [ecx-0x5b721acd]
  41809d:	fsubrp st(2),st
  41809f:	inc    ebp
  4180a0:	stos   BYTE PTR es:[edi],al
  4180a1:	jns    0x418084
  4180a3:	in     al,dx
  4180a4:	mov    DWORD PTR [ebx-0x32],ecx
  4180a7:	dec    eax
  4180a8:	jbe    0x418113
  4180aa:	stos   BYTE PTR es:[edi],al
  4180ab:	mov    esp,0xaed05fd8
  4180b0:	out    0x3f,eax
  4180b2:	push   0xc0cf5473
  4180b7:	aaa    
  4180b8:	pop    ds
  4180b9:	push   ecx
  4180ba:	sbb    DWORD PTR [ecx],esi
  4180bc:	pop    es
  4180bd:	sar    ebx,1
  4180bf:	test   eax,0xf8056a97
  4180c4:	mov    ds:0x77a146f9,al
  4180c9:	and    al,0x5a
  4180cb:	iret   
  4180cc:	or     bh,0xaa
  4180cf:	ret    
  4180d0:	(bad)  
  4180d1:	stos   DWORD PTR es:[edi],eax
  4180d2:	lods   al,BYTE PTR ds:[esi]
  4180d3:	mov    esi,0x6ab7b0e5
  4180d8:	and    eax,0xa6604689
  4180dd:	pop    ecx
  4180de:	dec    edx
  4180df:	(bad)  
  4180e0:	sub    eax,0x5ec0c3e6
  4180e5:	test   al,0xcd
  4180e7:	pusha  
  4180e8:	jg     0x418157
  4180ea:	jge    0x418128
  4180ec:	(bad)  
  4180ed:	out    dx,eax
  4180ee:	sbb    bh,ah
  4180f0:	sub    al,0x2e
  4180f2:	mov    eax,ds:0xa625c571
  4180f7:	dec    ebx
  4180f8:	fcom   DWORD PTR [ebp-0x19]
  4180fb:	dec    bx
  4180fd:	nop
  4180fe:	push   esi
  4180ff:	retf   0x908b
  418102:	loop   0x418173
  418104:	fld    DWORD PTR [esi]
  418106:	icebp  
  418107:	inc    ebp
  418108:	sahf   
  418109:	(bad)  
  41810c:	push   esi
  41810d:	push   edi
  41810e:	mov    ch,0x55
  418110:	cmp    al,0x6
  418112:	add    DWORD PTR [eax],esi
  418114:	push   edx
  418115:	aaa    
  418116:	dec    eax
  418117:	or     eax,0x488a3953
  41811c:	lea    eax,[ebx-0x23]
  41811f:	sbb    BYTE PTR [edx],al
  418121:	pop    ecx
  418122:	inc    ecx
  418123:	and    esi,DWORD PTR [edi+0x2f]
  418126:	test   al,0xbb
  418128:	xchg   ebx,eax
  418129:	stc    
  41812a:	jo     0x418118
  41812c:	add    BYTE PTR [eax+0x1a],0x3e
  418130:	cmp    eax,0xecb53f30
  418135:	inc    ebx
  418136:	dec    ebp
  418137:	(bad)  
  418139:	sbb    eax,0x201324a6
  41813e:	pop    esp
  41813f:	aaa    
  418140:	xchg   esi,eax
  418141:	mov    ds:0x99d6b7bd,eax
  418146:	in     eax,dx
  418147:	pop    eax
  418148:	xchg   ebp,eax
  418149:	sub    DWORD PTR [ebp+0x13],eax
  41814c:	in     eax,dx
  41814d:	and    esi,DWORD PTR [ebx+0x3b]
  418150:	cmp    eax,0x738078de
  418155:	xor    ah,BYTE PTR [ecx]
  418157:	dec    ebp
  418158:	adc    ecx,esp
  41815a:	addr16 adc esi,edx
  41815d:	jns    0x418115
  41815f:	dec    edi
  418160:	jmp    0x4181af
  418162:	inc    ebp
  418163:	xchg   ebx,eax
  418164:	stc    
  418165:	cmp    ebp,ebx
  418167:	push   eax
  418168:	mov    edi,0x20487283
  41816d:	aaa    
  41816e:	or     bl,ah
  418170:	add    eax,0xb1febb1e
  418175:	push   ebx
  418176:	popf   
  418177:	or     dh,ch
  418179:	or     BYTE PTR [esi+0x41],al
  41817c:	fcmovne st,st(6)
  41817e:	out    dx,eax
  41817f:	or     ebp,DWORD PTR [esp+edx*8+0x2fc4c698]
  418186:	stos   DWORD PTR es:[edi],eax
  418187:	sub    BYTE PTR [eax+eiz*1+0x6d51fb1e],cl
  41818e:	popa   
  41818f:	retf   
  418190:	mov    DWORD PTR [edx-0x56],ecx
  418193:	js     0x4181f6
  418195:	lods   al,BYTE PTR ds:[esi]
  418196:	add    BYTE PTR [edx+0x1b],ch
  418199:	bound  eax,QWORD PTR [edi+0x1f]
  41819c:	xor    dl,BYTE PTR [ebx-0x5d]
  41819f:	or     bh,al
  4181a1:	dec    eax
  4181a2:	dec    edi
  4181a3:	lock sbb al,0x6f
  4181a6:	cmc    
  4181a7:	pushf  
  4181a8:	rcr    DWORD PTR [eax+0x265c71e5],1
  4181ae:	fisttp WORD PTR [bx+si]
  4181b1:	or     ecx,0x68
  4181b4:	push   cs
  4181b5:	test   eax,0x93536503
  4181ba:	push   ds
  4181bb:	lods   eax,DWORD PTR ds:[esi]
  4181bc:	js     0x41819a
  4181be:	out    dx,al
  4181bf:	sub    DWORD PTR [eax-0x6cfadeb],esi
  4181c5:	jb     0x4181d4
  4181c7:	pop    ecx
  4181c8:	psubsw mm3,QWORD PTR [esi+0x47]
  4181cc:	and    edi,DWORD PTR [ebp+0x3f]
  4181cf:	xlat   BYTE PTR ds:[ebx]
  4181d0:	ss cs pop edi
  4181d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181d4:	jle    0x4181fb
  4181d6:	xchg   edx,eax
  4181d7:	cmp    DWORD PTR [edi],ecx
  4181d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181da:	stos   BYTE PTR es:[edi],al
  4181db:	jmp    0xead2:0x8383346d
  4181e2:	xor    BYTE PTR ds:0xbe08d71d,bl
  4181e8:	(bad)  
  4181e9:	mov    ecx,0xea385887
  4181ee:	push   esi
  4181ef:	and    eax,0xe0ee3916
  4181f4:	push   0x59
  4181f6:	push   ecx
  4181f7:	mov    ecx,0x88e98676
  4181fc:	aas    
  4181fd:	dec    edx
  4181fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181ff:	push   ebx
  418200:	ret    
  418201:	ins    DWORD PTR es:[edi],dx
  418202:	jl     0x418221
  418204:	cmp    eax,0xe6101a0d
  418209:	xlat   BYTE PTR ds:[ebx]
  41820a:	inc    edi
  41820b:	leave  
  41820c:	jg     0x418215
  41820e:	or     al,BYTE PTR [edi+0x421d6379]
  418214:	ds dec edi
  418216:	sub    al,0xdd
  418218:	cli    
  418219:	ss ins DWORD PTR es:[edi],dx
  41821b:	mov    ecx,0xbfac78b0
  418220:	cmp    eax,0x18fd7fc3
  418225:	call   0xcdbc:0x44c3c03a
  41822c:	popf   
  41822d:	clc    
  41822e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41822f:	push   esp
  418230:	ss dec esp
  418232:	dec    ebp
  418233:	xchg   ecx,eax
  418234:	push   edi
  418235:	cmc    
  418236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418237:	or     eax,0xe29c00b3
  41823c:	xor    DWORD PTR [ebp-0x732408f8],esp
  418242:	jo     0x41826d
  418244:	add    BYTE PTR [eax-0x7b0436fd],bl
  41824a:	sar    DWORD PTR [edx],1
  41824c:	jecxz  0x41828c
  41824e:	jnp    0x418292
  418250:	rol    ecx,1
  418252:	sub    esp,DWORD PTR ds:0x39ae92e1
  418258:	and    edx,eax
  41825a:	leave  
  41825b:	arpl   WORD PTR [ebx+ecx*8+0x70],si
  41825f:	xchg   ecx,eax
  418260:	add    eax,DWORD PTR [edx-0x1c3ca2b1]
  418266:	add    eax,0xa4668aa8
  41826b:	or     esp,DWORD PTR [ebp-0x46]
  41826e:	push   edx
  41826f:	repnz test al,0xc9
  418272:	jg     0x41827b
  418274:	xchg   DWORD PTR [ecx],esp
  418276:	cmp    al,0x2f
  418278:	sbb    edx,ebp
  41827a:	sahf   
  41827b:	std    
  41827c:	mov    dh,ah
  41827e:	into   
  41827f:	adc    DWORD PTR [bx+si+0x17],edi
  418283:	jne    0x418302
  418285:	repz pop ds
  418287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418288:	retf   0x20cb
  41828b:	mov    esp,0xa8649eb5
  418290:	cwde   
  418291:	test   edi,edx
  418293:	(bad)  
  418294:	pushf  
  418295:	repz sbb eax,0xab9fe8b4
  41829b:	mov    ebx,0x9187b6c8
  4182a0:	pusha  
  4182a1:	xor    bh,dh
  4182a3:	sub    dh,ah
  4182a5:	add    eax,0x89d7f5f9
  4182aa:	jle    0x418302
  4182ac:	mov    ecx,0xb4320ba3
  4182b1:	xlat   BYTE PTR ds:[ebx]
  4182b2:	cmp    edx,ebp
  4182b4:	inc    eax
  4182b5:	shl    DWORD PTR [ebp-0xc],0x10
  4182b9:	jmp    0x6346:0x759a517b
  4182c0:	dec    ecx
  4182c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182c2:	in     al,0x51
  4182c4:	or     eax,ecx
  4182c6:	sub    ebp,DWORD PTR [eax]
  4182c8:	fdivr  DWORD PTR [ecx-0x76]
  4182cb:	inc    ebx
  4182cc:	jnp    0x418250
  4182ce:	ficomp DWORD PTR [edi+0xc]
  4182d1:	mov    edi,0x4c178063
  4182d6:	fstp   DWORD PTR [eax-0x1d]
  4182d9:	xor    DWORD PTR [esi-0x7fa50deb],ecx
  4182df:	push   ebx
  4182e0:	movzx  esi,BYTE PTR [ebx+0x2dcc5620]
  4182e7:	call   0x458bd30b
  4182ec:	loop   0x4182b8
  4182ee:	sbb    al,0x77
  4182f0:	js     0x41836c
  4182f2:	sub    bl,0x5a
  4182f5:	dec    ecx
  4182f6:	ins    DWORD PTR es:[edi],dx
  4182f7:	xor    DWORD PTR [ebx-0x5e8273bf],ecx
  4182fd:	sbb    al,0x16
  4182ff:	sar    DWORD PTR [edx+0xe2505f6],cl
  418305:	ret    0x7e2c
  418308:	and    eax,0x5685bc2
  41830d:	or     ch,ah
  41830f:	and    al,0x66
  418311:	(bad)  
  418312:	jmp    0x41838f
  418314:	add    ch,BYTE PTR [edx+0x32069b6d]
  41831a:	push   cs
  41831b:	int    0xc
  41831d:	inc    edi
  41831e:	mov    edi,0x12660856
  418323:	es inc ebx
  418325:	or     bh,BYTE PTR [ecx+0x4a]
  418328:	retf   0x4cd
  41832b:	in     eax,0x5
  41832d:	push   cs
  41832e:	dec    esi
  41832f:	adc    BYTE PTR [ebx-0x24],bl
  418332:	aam    0x5
  418334:	xor    al,0x2d
  418336:	aam    0xbc
  418338:	mov    bl,ch
  41833a:	sbb    DWORD PTR [eax+0xf],ecx
  41833d:	dec    ecx
  41833e:	hlt    
  41833f:	rcl    DWORD PTR [ecx-0x4],0xe3
  418343:	inc    ebp
  418344:	xchg   edx,eax
  418345:	bound  eax,QWORD PTR [eax]
  418347:	mov    DWORD PTR [eax-0x6c062e1a],esi
  41834d:	push   ss
  41834e:	pushf  
  41834f:	hlt    
  418350:	cmp    DWORD PTR [ebx-0x69],esp
  418353:	dec    eax
  418354:	add    bl,BYTE PTR [esi+esi*8+0x1e]
  418358:	test   BYTE PTR [edx+0x6a1f93f1],0xd4
  41835f:	adc    al,0xb6
  418361:	int    0x74
  418363:	fcmovnbe st,st(0)
  418365:	addr16 pop edi
  418367:	jae    0x4183bf
  418369:	hlt    
  41836a:	mov    edx,0x23ebb26d
  41836f:	stos   DWORD PTR es:[edi],eax
  418370:	and    esi,esp
  418372:	mov    dl,0xf9
  418374:	std    
  418375:	jne    0x418398
  418377:	sti    
  418378:	mov    BYTE PTR [ebx],0xba
  41837b:	mov    esi,0x734a62dc
  418380:	mov    ebp,0x58bcc1ea
  418385:	jae    0x4183f1
  418387:	imul   eax,DWORD PTR [ebx+esi*8-0x2ff4f369],0xa241d52b
  418392:	arpl   WORD PTR [esi+0x4c181a16],bp
  418398:	and    cl,BYTE PTR [esi-0x73]
  41839b:	(bad)  
  41839c:	jg     0x418326
  41839e:	adc    bl,BYTE PTR [edi]
  4183a0:	sub    al,0x70
  4183a2:	pusha  
  4183a3:	jg     0x41838a
  4183a5:	xor    eax,0xd81a68ce
  4183aa:	lock lods eax,DWORD PTR ds:[esi]
  4183ac:	retf   
  4183ad:	pop    edx
  4183ae:	shl    BYTE PTR [edi-0x5f9cdb5c],cl
  4183b4:	retf   
  4183b5:	adc    esi,eax
  4183b7:	ror    BYTE PTR [edx-0x5],1
  4183ba:	ret    
  4183bb:	xchg   esi,eax
  4183bc:	pushf  
  4183bd:	fisub  WORD PTR [ebp+0x68]
  4183c0:	push   eax
  4183c1:	cmp    eax,0x901dd096
  4183c6:	not    al
  4183c8:	xchg   esi,eax
  4183c9:	imul   eax,DWORD PTR [eax+esi*4+0x35],0x70
  4183ce:	xchg   edi,eax
  4183cf:	mov    eax,0x2714fd58
  4183d4:	ins    DWORD PTR es:[edi],dx
  4183d5:	xor    eax,0xfc250786
  4183da:	xor    dh,BYTE PTR [ecx+eiz*1]
  4183dd:	jecxz  0x418416
  4183df:	cs sub ch,cl
  4183e2:	sbb    edi,DWORD PTR [eax+ebp*1+0x7286b452]
  4183e9:	out    dx,eax
  4183ea:	pop    ebp
  4183eb:	push   esi
  4183ec:	inc    ebx
  4183ed:	dec    ecx
  4183ee:	push   ebp
  4183ef:	sbb    al,0x6e
  4183f1:	in     eax,0x3e
  4183f3:	shl    bh,1
  4183f5:	fs mov ch,0x9c
  4183f8:	push   0xf761b0ae
  4183fd:	shl    BYTE PTR [edi],cl
  4183ff:	int    0xce
  418401:	outs   dx,BYTE PTR ds:[esi]
  418402:	jae    0x418438
  418404:	ret    0x4de3
  418407:	enter  0xba1a,0x7d
  41840b:	or     eax,0xcfa3228f
  418410:	adc    dl,BYTE PTR [edx]
  418412:	mov    esp,0xd49c990b
  418417:	lds    eax,FWORD PTR [esi+edi*2+0x26]
  41841b:	push   0xf38dc532
  418420:	js     0x418496
  418422:	shl    WORD PTR [ecx-0x40],0x62
  418427:	pop    edx
  418428:	jle    0x418403
  41842a:	mov    edx,0x54fc99a7
  41842f:	push   eax
  418430:	jg     0x418492
  418432:	xchg   esp,eax
  418433:	mov    esp,0xe874798b
  418438:	leave  
  418439:	pop    ds
  41843a:	mov    edx,0x478ce23c
  41843f:	or     cl,BYTE PTR [esi]
  418441:	sahf   
  418442:	ficom  WORD PTR [edi-0x7b]
  418445:	sub    BYTE PTR [ebp+edi*4-0x5ad05cb7],bl
  41844c:	jl     0x4183eb
  41844e:	pop    edi
  41844f:	scas   al,BYTE PTR es:[edi]
  418450:	out    0xeb,eax
  418452:	in     eax,0x7c
  418454:	aam    0x1a
  418456:	adc    ebx,DWORD PTR [esi]
  418458:	mov    ebx,cs
  41845a:	mov    bl,0x83
  41845c:	sub    al,0x19
  41845e:	dec    edx
  41845f:	lea    ecx,[edx+edx*1]
  418462:	mov    bl,0x51
  418464:	xchg   esp,eax
  418465:	ror    DWORD PTR [edx-0x43],1
  418468:	push   ebp
  418469:	xlat   BYTE PTR ds:[ebx]
  41846a:	mov    ecx,0xaf38aba5
  41846f:	inc    ebp
  418470:	xchg   ebp,eax
  418471:	test   eax,0xc911592f
  418476:	xchg   ebx,eax
  418477:	in     al,0xd0
  418479:	mov    ds:0xe4b9f09d,al
  41847e:	icebp  
  41847f:	push   edx
  418480:	leave  
  418481:	imul   edx,esp,0x4570d73c
  418487:	dec    ebx
  418488:	ins    BYTE PTR es:[edi],dx
  418489:	xchg   edi,eax
  41848a:	push   ecx
  41848b:	add    BYTE PTR [edx],bh
  41848d:	stos   DWORD PTR es:[edi],eax
  41848e:	or     al,BYTE PTR ds:0x4277d2ed
  418494:	rcl    DWORD PTR [ebp-0x39],1
  418497:	cmp    DWORD PTR [ecx],ebp
  418499:	out    dx,eax
  41849a:	rcl    cl,0xde
  41849d:	inc    ebx
  41849e:	in     eax,0xa6
  4184a0:	pop    ebx
  4184a1:	outs   dx,DWORD PTR ds:[esi]
  4184a2:	clc    
  4184a3:	mov    esp,0x102c8b9b
  4184a8:	ror    ah,0xd9
  4184ab:	push   es
  4184ac:	xor    eax,0xaedba774
  4184b1:	push   esp
  4184b2:	mov    bl,0xf6
  4184b4:	mov    eax,0xa51f203e
  4184b9:	mov    ss,eax
  4184bb:	add    ebp,esp
  4184bd:	sub    al,0x97
  4184bf:	and    BYTE PTR [esi],ah
  4184c1:	push   es
  4184c2:	and    dh,BYTE PTR [esi-0x40]
  4184c5:	clc    
  4184c6:	cmp    eax,0xb41415d3
  4184cb:	sar    DWORD PTR [edx+esi*1+0x445743b9],1
  4184d2:	add    eax,0x3
  4184d5:	dec    esi
  4184d6:	or     BYTE PTR [ebx+0x2ab3df9d],bh
  4184dc:	push   esp
  4184dd:	mov    WORD PTR [esi+edx*8+0x2205e01f],es
  4184e4:	sub    DWORD PTR [ebx-0x2f],esp
  4184e7:	test   eax,0xe339bddf
  4184ec:	daa    
  4184ed:	loop   0x4184d1
  4184ef:	dec    esp
  4184f0:	push   esi
  4184f1:	lahf   
  4184f2:	in     eax,0x42
  4184f4:	scas   al,BYTE PTR es:[edi]
  4184f5:	arpl   WORD PTR [edx],ax
  4184f7:	test   BYTE PTR [edi],bh
  4184f9:	xchg   ebp,eax
  4184fa:	lods   al,BYTE PTR ds:[esi]
  4184fb:	and    BYTE PTR ds:0xc85ffbeb,ah
  418501:	push   ebx
  418502:	sbb    al,0xc5
  418504:	cmp    BYTE PTR [edi-0x4b9af7dd],dh
  41850a:	pop    ss
  41850b:	push   eax
  41850c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41850d:	pop    esp
  41850e:	data16 daa 
  418510:	xchg   ebx,eax
  418511:	fs jnp 0x41858e
  418514:	xchg   esi,eax
  418515:	lods   eax,DWORD PTR ds:[esi]
  418516:	test   DWORD PTR [ebp-0x5],0x1dc097d3
  41851d:	gs push esi
  41851f:	outs   dx,DWORD PTR ds:[esi]
  418520:	test   BYTE PTR [edi+0xdcc8351],0xe0
  418527:	jb     0x4185a2
  418529:	jne    0x41850a
  41852b:	mov    ds:0x57d7210f,eax
  418530:	in     eax,dx
  418531:	xor    DWORD PTR [esp+eax*8],edx
  418534:	lods   eax,DWORD PTR ds:[esi]
  418535:	mov    ebp,0xcdc6a563
  41853a:	fcmove st,st(5)
  41853c:	ret    0xdaa6
  41853f:	scas   eax,DWORD PTR es:[edi]
  418540:	test   al,0xf4
  418542:	mov    ch,0x13
  418544:	les    ebp,FWORD PTR [ecx-0x287180f9]
  41854a:	sar    BYTE PTR [ebx-0x7aab6e6f],cl
  418550:	test   al,0x7b
  418552:	div    DWORD PTR [edi+0x47]
  418555:	sar    BYTE PTR [edx-0x25],cl
  418558:	adc    DWORD PTR [edi+0x16e80f30],esi
  41855e:	out    dx,eax
  41855f:	test   ch,cl
  418561:	popf   
  418562:	test   BYTE PTR [ecx-0x36],dl
  418565:	sbb    DWORD PTR [ebx],esp
  418567:	sub    bh,BYTE PTR [ebx-0x20]
  41856a:	out    0x88,al
  41856c:	pop    ebx
  41856d:	mov    bh,0xd5
  41856f:	stos   BYTE PTR es:[edi],al
  418570:	loope  0x418591
  418572:	(bad)  
  418573:	mul    DWORD PTR [edx]
  418575:	es or  eax,0x9282d0e6
  41857b:	fsub   st(7),st
  41857d:	in     al,0x77
  41857f:	shl    ah,cl
  418581:	jnp    0x41853a
  418583:	inc    ecx
  418584:	push   ds
  418585:	leave  
  418586:	inc    ecx
  418587:	jle    0x418531
  418589:	sti    
  41858a:	retf   
  41858b:	ds xchg ebp,eax
  41858d:	loopne 0x4185b6
  41858f:	adc    DWORD PTR [ecx-0x4225bc5d],0x5f
  418596:	stc    
  418597:	retf   0x734d
  41859a:	es xchg ebp,eax
  41859c:	xlat   BYTE PTR ds:[ebx]
  41859d:	pop    esp
  41859e:	push   eax
  41859f:	mov    dh,0x2f
  4185a1:	xchg   ecx,eax
  4185a2:	js     0x4185e8
  4185a4:	clc    
  4185a5:	lods   eax,DWORD PTR ds:[esi]
  4185a6:	mov    BYTE PTR [esi],ch
  4185a8:	popa   
  4185a9:	xchg   edx,eax
  4185aa:	mov    dl,0x45
  4185ac:	adc    eax,0x3cbb9aa
  4185b1:	(bad)  
  4185b2:	enter  0xcb2b,0x60
  4185b6:	push   edx
  4185b7:	fs jmp 0x1483529e
  4185bd:	outs   dx,BYTE PTR ds:[esi]
  4185be:	cmp    eax,0xb72316b5
  4185c3:	xchg   edi,eax
  4185c4:	mov    WORD PTR [esi-0x1b],gs
  4185c7:	mov    ebx,0x8cbff9cd
  4185cc:	arpl   WORD PTR [ecx],bx
  4185ce:	fs pop edi
  4185d0:	leave  
  4185d1:	mov    ebp,0x261a6acd
  4185d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185d7:	test   BYTE PTR [esi-0x7],cl
  4185da:	dec    eax
  4185db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185dc:	jae    0x4185d6
  4185de:	daa    
  4185df:	and    dl,BYTE PTR [ebp-0x11d6b677]
  4185e5:	mov    ebx,0x9bb4dc71
  4185ea:	mov    eax,ds:0xbf89b237
  4185ef:	pop    edx
  4185f0:	fidiv  DWORD PTR [ebp-0x2932abf3]
  4185f6:	cmp    esp,DWORD PTR [eax]
  4185f8:	pop    ds
  4185f9:	xor    cl,dl
  4185fb:	inc    edi
  4185fc:	jo     0x4185a6
  4185fe:	cli    
  4185ff:	jecxz  0x418652
  418601:	adc    eax,0x14ed8fb1
  418606:	push   esp
  418607:	jle    0x418612
  418609:	add    ebp,ecx
  41860b:	lds    esp,FWORD PTR [ebx+0x43]
  41860e:	iret   
  41860f:	in     al,dx
  418610:	ins    DWORD PTR es:[edi],dx
  418611:	data16 mov ss,WORD PTR [ecx-0x53]
  418615:	leave  
  418616:	inc    DWORD PTR [esi+0x78b3e5f]
  41861c:	dec    esi
  41861d:	scas   al,BYTE PTR es:[edi]
  41861e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41861f:	inc    edi
  418620:	and    DWORD PTR [edi+0x6d36ba29],0xd6308743
  41862a:	fisubr DWORD PTR [edx-0x77]
  41862d:	mov    eax,DWORD PTR [ebx]
  41862f:	out    0x18,al
  418631:	mov    esi,0x89e55bc8
  418636:	pop    ss
  418637:	xchg   ebp,eax
  418638:	xchg   esp,eax
  418639:	mov    esi,0x9c623c9e
  41863e:	jecxz  0x418601
  418640:	enter  0x89ac,0x56
  418644:	add    al,0x6
  418646:	cmp    al,0xb8
  418648:	in     al,dx
  418649:	mov    ds:0x6820c059,eax
  41864e:	popf   
  41864f:	mov    eax,ds:0x5aa75072
  418654:	out    0x65,al
  418656:	jae    0x41864a
  418658:	popa   
  418659:	xchg   ebp,eax
  41865a:	dec    ecx
  41865b:	call   0x2566882e
  418660:	xor    dh,ah
  418662:	mov    al,0xeb
  418664:	out    0x75,al
  418666:	gs mov bl,0x35
  418669:	jbe    0x4186be
  41866b:	cmc    
  41866c:	jmp    0x564bce23
  418671:	shr    DWORD PTR [ebx],cl
  418673:	cmc    
  418674:	pushf  
  418675:	out    0x97,eax
  418677:	dec    ecx
  418678:	sbb    BYTE PTR cs:[edi],0x8e
  41867c:	sbb    al,0x5c
  41867e:	inc    ecx
  41867f:	pop    ecx
  418680:	adc    eax,0xb75135d7
  418685:	and    BYTE PTR [ebp+0x7e7bba98],0xb0
  41868c:	mov    ebp,0xb1389e28
  418691:	xchg   esi,eax
  418692:	into   
  418693:	repnz xchg esi,eax
  418695:	jle    0x4186af
  418697:	push   ebx
  418698:	dec    edi
  418699:	push   cs
  41869a:	cmp    eax,0x8c7cdd6f
  41869f:	addr16 jmp 0xe331:0xff87f484
  4186a7:	xor    BYTE PTR [ecx+0x19],ch
  4186aa:	mov    dl,0xe3
  4186ac:	arpl   WORD PTR [edi-0x40],cx
  4186af:	pop    es
  4186b0:	xor    eax,esp
  4186b2:	xor    ebx,ebx
  4186b4:	scas   al,BYTE PTR es:[edi]
  4186b5:	pop    es
  4186b6:	sar    DWORD PTR [edx-0x20],0xa1
  4186ba:	adc    ah,dl
  4186bc:	repnz add BYTE PTR [eax-0x15],0x70
  4186c1:	repz cmp al,0x6d
  4186c4:	push   ds
  4186c5:	hlt    
  4186c6:	cs iret 
  4186c8:	and    edx,eax
  4186ca:	push   es
  4186cb:	fldenv [ebx+0x5f]
  4186ce:	ins    DWORD PTR es:[edi],dx
  4186cf:	inc    edi
  4186d0:	int    0x1c
  4186d2:	rcl    DWORD PTR [edi],0xe4
  4186d5:	stos   DWORD PTR es:[edi],eax
  4186d6:	ret    
  4186d7:	mov    edx,0x62831ee1
  4186dc:	mov    ecx,0x6c5ba8cd
  4186e1:	pusha  
  4186e2:	push   0x28d3b1e2
  4186e7:	scas   al,BYTE PTR es:[edi]
  4186e8:	cli    
  4186e9:	dec    edi
  4186ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186eb:	inc    esi
  4186ec:	jne    0x41867e
  4186ee:	outs   dx,DWORD PTR ds:[esi]
  4186ef:	inc    esp
  4186f0:	test   DWORD PTR [eax-0x1c06b103],0x10345715
  4186fa:	loop   0x418699
  4186fc:	ja     0x418694
  4186fe:	sbb    BYTE PTR [eax-0x39],dh
  418701:	es xor eax,0xe133e37
  418707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418708:	mov    esp,0x98c69fe4
  41870d:	cwde   
  41870e:	inc    DWORD PTR [edi+ebx*2-0x5]
  418712:	daa    
  418713:	xchg   BYTE PTR [ecx],dh
  418715:	call   0x6d729948
  41871a:	outs   dx,DWORD PTR ds:[esi]
  41871b:	bound  ebp,QWORD PTR [esp+eax*8+0x54b49608]
  418722:	(bad)  [eax-0x1e84578b]
  418728:	sbb    al,0xa6
  41872a:	hlt    
  41872b:	gs das 
  41872d:	jbe    0x418704
  41872f:	and    al,BYTE PTR [ebx+0x22]
  418732:	mov    cs,WORD PTR [edx]
  418734:	xchg   ebx,eax
  418735:	xchg   edi,eax
  418736:	push   eax
  418737:	sub    dh,BYTE PTR ds:0xfd57d1de
  41873d:	jmp    0x1957:0x969b45a6
  418744:	in     al,0x3b
  418746:	mov    esi,0x2c97cb63
  41874b:	xchg   edx,eax
  41874c:	pushf  
  41874d:	mov    ds:0x60503e28,al
  418752:	cmc    
  418753:	(bad)
  418756:	out    0xa6,al
  418758:	add    BYTE PTR fs:[edi-0x14],0xce
  41875d:	mov    bl,0xdc
  41875f:	loop   0x4187c0
  418761:	jo     0x4187a7
  418763:	js     0x418734
  418765:	(bad)  
  418766:	or     esi,DWORD PTR [eax-0x54f1ae0a]
  41876c:	call   0x737a33bf
  418771:	and    DWORD PTR [ecx],esp
  418773:	inc    ebp
  418774:	fcom   st(2)
  418776:	popf   
  418777:	jb     0x418789
  418779:	cwde   
  41877a:	mov    ch,0x75
  41877c:	cld    
  41877d:	pushf  
  41877e:	sbb    edx,DWORD PTR [edx+0x79]
  418781:	or     esi,DWORD PTR [ecx+ecx*1]
  418784:	sbb    esi,ecx
  418786:	loopne 0x418728
  418788:	inc    edi
  418789:	cmp    al,bh
  41878b:	push   ss
  41878c:	popf   
  41878d:	or     dh,ch
  41878f:	sub    DWORD PTR [ebp-0x347ce545],esi
  418795:	cmp    edi,DWORD PTR [esi]
  418797:	push   ebp
  418798:	mov    esp,0xfd6387f8
  41879d:	jbe    0x4187bb
  41879f:	mov    ebp,0xa110f279
  4187a4:	mov    es,WORD PTR [eax-0x76d71ef5]
  4187aa:	fs call 0x4a6fc279
  4187b0:	or     DWORD PTR [eax+0x2dc4c59],esi
  4187b6:	inc    esi
  4187b7:	xchg   edi,esp
  4187b9:	mov    ecx,0x334ee2c3
  4187be:	inc    edi
  4187bf:	xchg   edi,eax
  4187c0:	sahf   
  4187c1:	inc    edi
  4187c2:	in     eax,dx
  4187c3:	push   0x70
  4187c5:	add    al,0xb7
  4187c7:	and    al,0x74
  4187c9:	push   esi
  4187ca:	hlt    
  4187cb:	dec    edx
  4187cc:	add    BYTE PTR [esi+0x62],ch
  4187cf:	dec    ebx
  4187d0:	fistp  WORD PTR [edi-0x15]
  4187d3:	and    edi,ecx
  4187d5:	jno    0x41879e
  4187d7:	shl    BYTE PTR fs:[ebp+eiz*1+0x2d],0xb2
  4187dd:	pop    edx
  4187de:	loopne 0x4187ff
  4187e0:	stos   DWORD PTR es:[edi],eax
  4187e1:	repz ss mov bh,0x7
  4187e5:	loop   0x418843
  4187e7:	ins    BYTE PTR es:[edi],dx
  4187e8:	cmp    DWORD PTR [eax-0x13e63360],ecx
  4187ee:	pop    ds
  4187ef:	pop    ecx
  4187f0:	push   edi
  4187f1:	xor    eax,0x74f31873
  4187f6:	or     ah,BYTE PTR [ebx]
  4187f8:	(bad)  
  4187f9:	mov    edi,0x7fe91687
  4187fe:	xchg   esi,eax
  4187ff:	pushf  
  418800:	inc    ebp
  418801:	sub    DWORD PTR [edi],0xbbe3bf93
  418807:	mov    al,0xba
  418809:	jb     0x4187f0
  41880b:	loopne 0x4187df
  41880d:	push   ecx
  41880e:	lock push ebx
  418810:	enter  0x1dc1,0x82
  418814:	loopne 0x41879d
  418816:	jnp    0x418858
  418818:	push   ss
  418819:	fs jbe 0x418862
  41881c:	cs xchg esp,eax
  41881e:	pop    eax
  41881f:	arpl   WORD PTR [esi+0x582a6b53],si
  418825:	pop    ds
  418826:	punpckhbw mm5,QWORD PTR [eax+0x3e]
  41882a:	ds dec ecx
  41882c:	add    ecx,DWORD PTR [eax+0x1d]
  41882f:	or     BYTE PTR [ebx+ebp*8],ah
  418832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418834:	push   ebp
  418835:	inc    eax
  418836:	mov    ebp,0x83585198
  41883b:	popf   
  41883c:	xor    al,0x1f
  41883e:	cmc    
  41883f:	dec    edx
  418840:	jle    0x418857
  418842:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418844:	sub    ah,cl
  418846:	retf   
  418847:	not    BYTE PTR [ebp+0x5]
  41884a:	inc    esi
  41884b:	xchg   edx,eax
  41884c:	jl     0x418899
  41884e:	and    al,0x6
  418850:	les    edi,FWORD PTR [ecx]
  418852:	sbb    esi,DWORD PTR fs:[ecx+0x31ab9ce8]
  418859:	inc    ebx
  41885a:	xor    dl,BYTE PTR [ebp+esi*4-0x52]
  41885e:	xor    eax,0x443772ea
  418863:	and    eax,0xec3d0d25
  418868:	cmp    al,0x82
  41886a:	lock xlat BYTE PTR ds:[ebx]
  41886c:	mov    DWORD PTR [edi+edx*4+0x65],esp
  418870:	retf   
  418871:	sbb    BYTE PTR [edx],cl
  418873:	inc    ebp
  418874:	lods   eax,DWORD PTR ds:[esi]
  418875:	jae    0x41880f
  418877:	nop
  418878:	cmp    BYTE PTR [ecx],ch
  41887a:	and    al,0xb7
  41887c:	dec    ebp
  41887d:	retf   0xfdcb
  418880:	push   0x54
  418882:	push   ebp
  418883:	call   0xb404:0x98e66001
  41888a:	sbb    al,0x22
  41888c:	add    DWORD PTR [eax-0x34d4cd16],edx
  418892:	jecxz  0x41889b
  418894:	jns    0x418821
  418896:	inc    esi
  418897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418898:	xlat   BYTE PTR ds:[ebx]
  418899:	jp     0x4188a7
  41889b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41889c:	int3   
  41889d:	sub    al,BYTE PTR [ecx+esi*1]
  4188a0:	enter  0x7641,0xa8
  4188a4:	mov    edi,0xd1e619dd
  4188a9:	push   ecx
  4188aa:	punpckhbw mm6,QWORD PTR [eax-0x67]
  4188ae:	repz jge 0x418865
  4188b1:	mov    eax,0xbb469fab
  4188b6:	xor    bl,BYTE PTR [ebp+0x4b]
  4188b9:	xchg   esi,eax
  4188ba:	adc    eax,0x598189cb
  4188bf:	ficomp WORD PTR [ebp+0x32a2b53]
  4188c5:	shr    BYTE PTR [edi-0x2b],cl
  4188c8:	call   0x12eb9dbe
  4188cd:	inc    edi
  4188ce:	jecxz  0x4188f2
  4188d0:	call   DWORD PTR [ebp+0x14]
  4188d3:	xchg   ecx,eax
  4188d4:	push   ebx
  4188d5:	adc    DWORD PTR [ecx-0x77],eax
  4188d8:	shrd   eax,esp,0x55
  4188dc:	pop    es
  4188dd:	sub    ebx,eax
  4188df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188e0:	nop
  4188e1:	jecxz  0x418923
  4188e3:	gs push cs
  4188e5:	mov    dh,0x38
  4188e7:	sar    DWORD PTR [edi-0x19d3f0c9],0x1d
  4188ee:	xchg   edx,eax
  4188ef:	fistp  DWORD PTR [edi+0x6deeb8a]
  4188f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188f6:	je     0x4188b2
  4188f8:	or     BYTE PTR [edx+0x66523eb2],bh
  4188fe:	daa    
  4188ff:	mov    eax,ds:0xe0c5e467
  418904:	not    bh
  418906:	mov    eax,ds:0x9ea71094
  41890b:	lea    ebx,[ecx]
  41890d:	push   ebx
  41890e:	lahf   
  41890f:	imul   ecx,eax,0xffffffa4
  418912:	xchg   edi,eax
  418913:	inc    eax
  418914:	mov    edx,0x7d5e9933
  418919:	fchs   
  41891b:	cwde   
  41891c:	rcl    BYTE PTR [edx-0x13],1
  41891f:	fsubr  st(4),st
  418921:	jmp    0x593e:0x17774ddd
  418928:	mov    ebp,0xf6710a3d
  41892d:	mov    ch,0x48
  41892f:	mov    edx,0xa3482fbf
  418934:	out    dx,al
  418935:	add    cl,BYTE PTR [esi+edi*2-0x2d]
  418939:	pusha  
  41893a:	inc    ebx
  41893b:	push   0xed663f82
  418940:	jbe    0x418932
  418942:	xchg   DWORD PTR [esi-0x70e9ea15],ebx
  418948:	sub    al,0x32
  41894a:	icebp  
  41894b:	jnp    0x41892a
  41894d:	(bad)  
  41894e:	and    al,0x28
  418950:	xor    al,0x26
  418952:	enter  0xd447,0x97
  418956:	jle    0x418964
  418958:	(bad)  
  418959:	imul   BYTE PTR [eax]
  41895b:	fs sub dh,dl
  41895e:	aad    0x38
  418960:	mov    gs,WORD PTR [ebx]
  418962:	retf   0xd57f
  418965:	adc    BYTE PTR [esi+0x7baefdd7],dh
  41896b:	adc    eax,0x91f74e8e
  418970:	imul   eax,DWORD PTR [edx+0x3c4ad23c],0xffffffdb
  418977:	aaa    
  418978:	call   0xbc417caa
  41897d:	sub    eax,0x7089c837
  418982:	fstp   TBYTE PTR [esi+0xb2afa1a]
  418988:	(bad)  
  418989:	sti    
  41898a:	mov    WORD PTR [edi-0x63],?
  41898d:	ror    DWORD PTR [eax-0x24454fca],cl
  418993:	sub    al,0xe1
  418995:	hlt    
  418996:	cwde   
  418997:	fmulp  st(6),st
  418999:	xchg   ecx,eax
  41899a:	fistp  QWORD PTR [eax-0x1c]
  41899d:	xor    esp,DWORD PTR es:0x789ce80c
  4189a4:	sbb    dh,BYTE PTR [ebp+ecx*4+0x31]
  4189a8:	stc    
  4189a9:	fisub  WORD PTR [edx+0x30]
  4189ac:	fdivr  DWORD PTR [ebp-0x2edb9c]
  4189b2:	or     DWORD PTR [eax],0x1c7e63b4
  4189b8:	or     DWORD PTR [edx+0x190cce55],0xfffffff0
  4189bf:	mov    al,ds:0xc21bafc5
  4189c4:	pop    ds
  4189c5:	jl     0x4189cc
  4189c7:	mov    ds:0x7a2e9192,al
  4189cc:	adc    al,0x6
  4189ce:	and    DWORD PTR ds:0xc6a7f57f,eax
  4189d4:	xchg   ecx,eax
  4189d5:	sbb    eax,DWORD PTR [ebx-0x34619deb]
  4189db:	sbb    dh,BYTE PTR [ecx-0x75bb6a15]
  4189e1:	jae    0x4189b6
  4189e3:	inc    esi
  4189e4:	cli    
  4189e5:	lds    eax,FWORD PTR [ecx-0x56]
  4189e8:	jecxz  0x418a68
  4189ea:	mov    ebx,0xdb6ffb53
  4189ef:	data16 jle 0x4189aa
  4189f2:	xchg   edi,eax
  4189f3:	pop    esi
  4189f4:	jnp    0x418a35
  4189f6:	jg     0x418984
  4189f8:	mov    eax,ds:0x2fe79e95
  4189fd:	lods   al,BYTE PTR ds:[esi]
  4189fe:	inc    esp
  4189ff:	(bad)
  418a02:	push   esp
  418a03:	scas   eax,DWORD PTR es:[edi]
  418a04:	pop    esi
  418a05:	stos   DWORD PTR es:[edi],eax
  418a06:	cdq    
  418a07:	int3   
  418a08:	xor    esi,DWORD PTR [eax+0x4df9f773]
  418a0e:	mov    al,0x79
  418a10:	lock cmc 
  418a12:	cmp    eax,0x1d6ad431
  418a17:	data16 in al,dx
  418a19:	pop    esp
  418a1a:	pop    esp
  418a1b:	(bad)  
  418a1c:	int    0x65
  418a1e:	mov    ebx,0x16f51035
  418a23:	add    al,0xde
  418a25:	fmul   QWORD PTR [edi+esi*2-0x30]
  418a29:	es call 0xba6d:0x32c88963
  418a31:	leave  
  418a32:	sbb    dh,0x37
  418a35:	mov    ebp,0xf0c746c8
  418a3a:	and    eax,0x92d26e04
  418a3f:	and    BYTE PTR [esi],bl
  418a41:	jmp    0x418a52
  418a43:	sbb    edi,edx
  418a45:	adc    ch,BYTE PTR [ecx+0x2a93fbe6]
  418a4b:	mov    dh,0xfb
  418a4d:	xchg   edx,eax
  418a4e:	(bad)  
  418a4f:	jns    0x4189d2
  418a51:	les    edi,FWORD PTR [ecx]
  418a53:	add    BYTE PTR [eax*2-0x872b92],0x66
  418a5b:	jmp    0xf8cd:0x38b52ae2
  418a62:	das    
  418a63:	push   ss
  418a64:	xchg   ebx,eax
  418a65:	ins    DWORD PTR es:[edi],dx
  418a66:	ss loop 0x418a2f
  418a69:	sub    eax,0xbecc6b3e
  418a6e:	retf   0xd4d8
  418a71:	int    0x10
  418a73:	lock js 0x418a6b
  418a76:	leave  
  418a77:	push   ss
  418a78:	div    al
  418a7a:	inc    esi
  418a7b:	jp     0x418aee
  418a7d:	mov    ch,BYTE PTR [ebx+0x11]
  418a80:	jle    0x418a50
  418a82:	hlt    
  418a83:	pop    ecx
  418a84:	add    al,0xa2
  418a86:	sub    esp,esp
  418a88:	mov    BYTE PTR [esi-0x20],ch
  418a8b:	dec    eax
  418a8c:	mov    al,ds:0xa526d69f
  418a91:	imul   esi,DWORD PTR [ebp+0x73809753],0x46
  418a98:	clc    
  418a99:	fmul   DWORD PTR ds:0x74c37e7
  418a9f:	add    ebp,esp
  418aa1:	sti    
  418aa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aa3:	inc    edi
  418aa4:	push   0x22f5127f
  418aa9:	mov    esp,0x30d55d1b
  418aae:	sub    cl,bl
  418ab0:	mov    WORD PTR [esi+0x7d],?
  418ab3:	rcl    ebx,1
  418ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ab6:	add    ebp,esi
  418ab8:	sub    dl,BYTE PTR [edx]
  418aba:	xor    al,0x1b
  418abc:	jg     0x418af0
  418abe:	ret    
  418abf:	mov    bl,0xb8
  418ac1:	xor    al,0xd
  418ac3:	ins    DWORD PTR es:[edi],dx
  418ac4:	adc    eax,0x597c03dc
  418ac9:	sub    al,0xa5
  418acb:	jle    0x418ab7
  418acd:	add    ch,cl
  418acf:	inc    esp
  418ad0:	jp     0x418acc
  418ad2:	push   0x3cd3f4d6
  418ad7:	pop    esi
  418ad8:	xchg   esp,ebx
  418ada:	mov    WORD PTR [edx+0xe],?
  418add:	pop    esi
  418ade:	mov    ebp,0xf0f472bc
  418ae3:	mov    ds:0xc34b5825,al
  418ae8:	test   DWORD PTR [esi+0x759dbc9f],edx
  418aee:	lea    eax,[esi]
  418af0:	lds    edx,FWORD PTR [edx+0x3d]
  418af3:	test   eax,0x7d01bf50
  418af8:	and    BYTE PTR [edx-0x5c8a9b1d],bh
  418afe:	add    ebx,esp
  418b00:	dec    edi
  418b01:	ins    BYTE PTR es:[edi],dx
  418b02:	rcl    bl,cl
  418b04:	(bad)  
  418b05:	xor    edi,DWORD PTR [eax+0x7]
  418b08:	pop    esp
  418b09:	sahf   
  418b0a:	or     eax,0xe5da42f6
  418b0f:	dec    ebx
  418b10:	add    BYTE PTR [eax-0x6afab1d1],ah
  418b16:	dec    ebp
  418b17:	sar    ecx,0x6
  418b1a:	dec    BYTE PTR [ecx]
  418b1c:	sar    DWORD PTR [ebp-0x92a6c3b],cl
  418b22:	pop    ecx
  418b23:	fidivr DWORD PTR [edx+eax*1+0x17]
  418b27:	dec    ecx
  418b28:	mov    cl,0x3f
  418b2a:	jge    0x418b0a
  418b2c:	add    edx,ebx
  418b2e:	xor    ebp,DWORD PTR [esp+edi*4+0x167c2435]
  418b35:	xor    ah,BYTE PTR [edi]
  418b37:	or     eax,0xa11f6eaa
  418b3c:	rcl    DWORD PTR ds:0xee070fb6,1
  418b42:	dec    edi
  418b43:	xor    eax,0xb9d9ee15
  418b48:	mov    esi,0xf2fc6f0c
  418b4d:	hlt    
  418b4e:	dec    eax
  418b4f:	je     0x418bcb
  418b51:	loopne 0x418b51
  418b53:	mov    eax,ds:0x7e116cce
  418b58:	shl    BYTE PTR [eax+ebx*8+0x24],cl
  418b5c:	rol    BYTE PTR fs:[ebx+0x52692e3],cl
  418b63:	pop    ds
  418b64:	fdiv   QWORD PTR [ebx]
  418b66:	sbb    ebx,eax
  418b68:	mov    bh,0x71
  418b6a:	jl     0x418bdc
  418b6c:	adc    DWORD PTR [ebp+0x5b],eax
  418b6f:	mov    bh,0x3
  418b71:	cmp    eax,0xec8d2e4b
  418b76:	in     al,dx
  418b77:	push   0xfffffff1
  418b79:	add    al,0x94
  418b7b:	or     ch,cl
  418b7d:	xor    ebx,DWORD PTR [edi-0x7c8c04e2]
  418b83:	jge    0x418bf5
  418b85:	aam    0xe5
  418b87:	sbb    ecx,DWORD PTR gs:[ecx+0x3f62dc93]
  418b8e:	jp     0x418b26
  418b90:	xor    ah,al
  418b92:	mov    WORD PTR [eax+eiz*8],fs
  418b95:	stos   BYTE PTR es:[edi],al
  418b96:	(bad)  
  418b97:	mov    ebp,0xf746985f
  418b9c:	data16 or bl,ch
  418b9f:	cmp    ah,BYTE PTR [ebp-0x67]
  418ba2:	xchg   ebp,eax
  418ba3:	add    cl,0x82
  418ba6:	dec    esp
  418ba7:	dec    ebx
  418ba8:	xor    eax,0x51a49e6c
  418bae:	cmp    DWORD PTR [ecx+0x5c],edi
  418bb1:	mov    fs,WORD PTR [edi-0x34]
  418bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bb5:	xor    al,0x86
  418bb7:	jns    0x418b4d
  418bb9:	push   esp
  418bba:	cmp    edx,edx
  418bbc:	arpl   di,bx
  418bbe:	add    DWORD PTR [ecx+0x78002a1d],ebp
  418bc4:	push   eax
  418bc5:	xor    DWORD PTR [ebp-0x7638efb4],esp
  418bcb:	call   0x249d:0xeadb84a1
  418bd2:	mov    cl,0x98
  418bd4:	jb     0x418bda
  418bd6:	xchg   edi,eax
  418bd7:	out    0x51,al
  418bd9:	xchg   DWORD PTR [ebp+0x25],esp
  418bdc:	jmp    0xcf4cc50f
  418be1:	cdq    
  418be2:	inc    BYTE PTR [esp+esi*1]
  418be5:	sub    esp,esp
  418be7:	(bad)  
  418be9:	imul   ebx,DWORD PTR [esi-0x41],0x4d
  418bed:	imul   ecx
  418bef:	and    al,BYTE PTR [ecx]
  418bf1:	jl     0x418bd0
  418bf3:	sub    esi,DWORD PTR [edx-0x44]
  418bf6:	sub    DWORD PTR [esi-0x1656174b],ecx
  418bfc:	dec    esp
  418bfd:	xchg   ecx,eax
  418bfe:	push   0xe39518aa
  418c03:	pop    edi
  418c04:	imul   eax,DWORD PTR [edi+0x40],0xe0e88089
  418c0b:	adc    esi,0xa4c93271
  418c11:	mov    bh,0x81
  418c13:	in     eax,0xcb
  418c15:	inc    edi
  418c16:	mov    al,ds:0xfdd60fe3
  418c1b:	ficomp WORD PTR [edx+edi*1+0x46]
  418c1f:	mov    ah,0xbe
  418c21:	pusha  
  418c22:	mov    al,0xb1
  418c24:	fs adc esi,edi
  418c27:	loope  0x418bb8
  418c29:	xor    dl,BYTE PTR [ebx]
  418c2b:	mov    edx,0x35d2afd6
  418c30:	pop    edi
  418c31:	and    esi,DWORD PTR [edi+0x16]
  418c34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c35:	and    dl,cl
  418c37:	xchg   DWORD PTR [edi+0x72],edx
  418c3a:	clc    
  418c3b:	outs   dx,DWORD PTR ds:[esi]
  418c3c:	jmp    0x1d65:0x29a328f7
  418c43:	fcmovne st,st(4)
  418c45:	out    dx,eax
  418c46:	clc    
  418c47:	mov    dh,0x34
  418c49:	dec    esi
  418c4a:	in     eax,dx
  418c4b:	jp     0x418c54
  418c4d:	pushf  
  418c4e:	sar    DWORD PTR [ecx-0x6f],cl
  418c51:	mov    BYTE PTR [ebp+0x26da68b1],bl
  418c57:	leave  
  418c58:	into   
  418c59:	daa    
  418c5a:	push   edi
  418c5b:	pop    ebp
  418c5c:	mov    ebx,0xc5dbf5d
  418c61:	aaa    
  418c62:	inc    ebx
  418c63:	fist   DWORD PTR [edi-0x9]
  418c66:	dec    edi
  418c67:	mov    dl,0x3d
  418c69:	das    
  418c6a:	sub    DWORD PTR [ecx+0x5b13f62d],0x6a08ee99
  418c74:	push   es
  418c75:	enter  0x3ec6,0xd3
  418c79:	add    eax,0x6545530b
  418c7e:	xchg   BYTE PTR [edi+0x553c5ffd],cl
  418c84:	push   esp
  418c85:	clc    
  418c86:	pop    ss
  418c87:	out    0x60,eax
  418c89:	or     bl,ah
  418c8b:	gs or  cl,al
  418c8e:	mov    al,ds:0xc69ee7e3
  418c93:	shr    edx,cl
  418c95:	push   0xf081e96f
  418c9a:	lock out dx,eax
  418c9c:	sbb    eax,esp
  418c9e:	addr16 lahf 
  418ca0:	cld    
  418ca1:	(bad)  
  418ca3:	inc    ecx
  418ca4:	add    esi,DWORD PTR [ebp-0x1361cfc8]
  418caa:	sub    edx,edx
  418cac:	in     al,dx
  418cad:	mov    es,WORD PTR [eax+0x53]
  418cb0:	(bad)  
  418cb1:	mov    gs,WORD PTR [esi+0x3c1ac5ed]
  418cb7:	sbb    al,0x11
  418cb9:	or     DWORD PTR [esi+edx*1],0x54
  418cbd:	jo     0x418cee
  418cbf:	repnz push ebx
  418cc1:	push   0x29
  418cc3:	sub    ah,BYTE PTR [ebx+0x54076f79]
  418cc9:	ss inc ebx
  418ccb:	data16 xor dl,BYTE PTR ds:0x83de324c
  418cd2:	lds    esp,FWORD PTR [ebp+0x11]
  418cd5:	cmp    DWORD PTR [bx+0x7037],esp
  418cda:	into   
  418cdb:	fild   WORD PTR [ebx+0x6f]
  418cde:	daa    
  418cdf:	(bad)  
  418ce0:	popa   
  418ce1:	mov    ch,0xd7
  418ce3:	or     edi,DWORD PTR [esi+0x51]
  418ce6:	sbb    BYTE PTR [eax+ebp*8+0x54],cl
  418cea:	mov    bl,0x3a
  418cec:	pop    es
  418ced:	(bad)  
  418cee:	push   0x7bbe5052
  418cf3:	mov    DWORD PTR [eax],0x1ba15590
  418cf9:	mov    ecx,0xce4ae001
  418cfe:	xor    dl,dh
  418d00:	jns    0x418ccb
  418d02:	dec    ecx
  418d03:	ins    DWORD PTR es:[edi],dx
  418d04:	idiv   DWORD PTR [edx+0x37]
  418d07:	rcr    DWORD PTR [esi+edi*2+0x57],1
  418d0b:	scas   al,BYTE PTR es:[edi]
  418d0c:	fwait
  418d0d:	xor    ch,BYTE PTR [edi]
  418d0f:	mov    eax,ds:0x4852042d
  418d14:	push   ebp
  418d15:	ss xchg ebp,eax
  418d17:	sub    BYTE PTR [ecx],cl
  418d19:	sbb    esi,DWORD PTR [ebp+0x67459b53]
  418d1f:	(bad)  
  418d20:	sbb    ebx,DWORD PTR [ecx]
  418d22:	sbb    eax,0xf27727d9
  418d27:	push   ss
  418d28:	out    dx,al
  418d29:	or     eax,0xc9e91481
  418d2e:	mov    ebp,0x359774df
  418d33:	and    eax,0x72330984
  418d38:	pop    ebx
  418d39:	sub    DWORD PTR [ebx],edi
  418d3b:	fwait
  418d3c:	cs es aaa 
  418d3f:	push   eax
  418d40:	xchg   esp,eax
  418d41:	hlt    
  418d42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d43:	and    ah,BYTE PTR [edi-0x2f0fefe4]
  418d49:	call   0x7a04:0xb41b9f02
  418d50:	sahf   
  418d51:	gs int 0xeb
  418d54:	and    ecx,esp
  418d56:	mov    BYTE PTR [esi-0x6c8dda90],bh
  418d5c:	aam    0x87
  418d5e:	cmc    
  418d5f:	cli    
  418d60:	repz mov dl,0x91
  418d63:	mov    ?,ecx
  418d65:	inc    ebp
  418d66:	cmp    BYTE PTR [ecx],0x1f
  418d69:	add    al,0xab
  418d6b:	jecxz  0x418d5b
  418d6d:	dec    edx
  418d6e:	lods   al,BYTE PTR ds:[esi]
  418d6f:	mov    WORD PTR [eax-0x5659305e],es
  418d75:	mov    edi,esi
  418d77:	out    0x5e,eax
  418d79:	add    ecx,0xf3a847f7
  418d7f:	sub    ebp,DWORD PTR ds:0xa5ce34eb
  418d85:	and    ch,ch
  418d87:	mov    al,ds:0xa71abe16
  418d8c:	mov    DWORD PTR [edi-0x47],ebx
  418d8f:	arpl   WORD PTR [eax],sp
  418d91:	jnp    0x418d19
  418d93:	push   edi
  418d94:	adc    DWORD PTR [edi+0xea8896f],ecx
  418d9a:	xor    eax,DWORD PTR [ebx]
  418d9c:	xchg   edx,eax
  418d9d:	pop    ebx
  418d9e:	cwde   
  418d9f:	jecxz  0x418d4c
  418da1:	std    
  418da2:	loop   0x418df5
  418da4:	push   0x1a34208e
  418da9:	daa    
  418daa:	pop    esp
  418dab:	imul   edx,DWORD PTR [edx],0x4f
  418dae:	repz jecxz 0x418d53
  418db1:	mov    bl,0x77
  418db3:	stos   BYTE PTR es:[edi],al
  418db4:	in     al,0x8d
  418db6:	ins    BYTE PTR es:[edi],dx
  418db7:	test   DWORD PTR [ebx+0x55],ebx
  418dba:	mov    dl,0xcf
  418dbc:	xor    eax,0xebe14093
  418dc1:	inc    edi
  418dc2:	or     BYTE PTR [ecx+0x5f80ef9a],0x72
  418dc9:	call   0x88f88726
  418dce:	push   esi
  418dcf:	(bad)  
  418dd0:	ins    BYTE PTR es:[edi],dx
  418dd1:	imul   ecx,DWORD PTR ds:0x4780c16e,0x9b79bb8e
  418ddb:	sub    ah,BYTE PTR [esi]
  418ddd:	leave  
  418dde:	sbb    cl,BYTE PTR [di-0x7590]
  418de3:	push   ebx
  418de4:	add    edx,esi
  418de6:	lahf   
  418de7:	push   ds
  418de8:	jns    0x418e04
  418dea:	xor    edx,eax
  418dec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ded:	xor    esp,DWORD PTR [eax-0x603b4830]
  418df3:	popf   
  418df4:	(bad)  
  418df5:	out    dx,eax
  418df6:	call   0x824a:0xb8d0099b
  418dfd:	and    ah,dh
  418dff:	sbb    esp,esp
  418e01:	sahf   
  418e02:	push   cs
  418e03:	imul   edi,DWORD PTR [esi+eax*1+0xb],0xffffffdd
  418e08:	sub    al,0x85
  418e0a:	pop    esp
  418e0b:	ins    DWORD PTR es:[edi],dx
  418e0c:	and    eax,0x232efe00
  418e11:	jle    0x418e54
  418e13:	std    
  418e14:	retf   
  418e15:	out    dx,eax
  418e16:	sub    eax,0xda0409ae
  418e1b:	test   al,0x25
  418e1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e1e:	out    dx,al
  418e1f:	xor    DWORD PTR [edx],ecx
  418e21:	dec    ebx
  418e22:	in     al,0x83
  418e24:	lahf   
  418e25:	push   eax
  418e26:	inc    eax
  418e27:	inc    esi
  418e28:	mov    ah,0x58
  418e2a:	pop    eax
  418e2b:	inc    DWORD PTR [edx+0x3df1be2]
  418e31:	mov    bh,0xfe
  418e33:	cli    
  418e34:	inc    ecx
  418e35:	pop    DWORD PTR [ecx+0x1a039f6b]
  418e3b:	scas   eax,DWORD PTR es:[edi]
  418e3c:	dec    esi
  418e3d:	sbb    bh,al
  418e3f:	xchg   dh,ch
  418e41:	jg     0x418df2
  418e43:	and    eax,esi
  418e45:	call   0xe660234d
  418e4a:	lods   eax,DWORD PTR ds:[esi]
  418e4b:	xor    eax,0x9745f5b7
  418e50:	pop    es
  418e51:	(bad)  
  418e52:	pop    eax
  418e53:	call   DWORD PTR [eax]
  418e55:	add    ah,dl
  418e57:	in     al,dx
  418e58:	inc    edi
  418e59:	dec    esp
  418e5a:	mov    ax,0x2e4c
  418e5e:	js     0x418e56
  418e60:	pop    ecx
  418e61:	mov    bl,0xa4
  418e63:	into   
  418e64:	xchg   esp,eax
  418e65:	into   
  418e66:	sub    ebx,ebp
  418e68:	lea    ebx,[eax+0x45]
  418e6b:	pushf  
  418e6c:	adc    ebp,DWORD PTR [edi-0x734bafd7]
  418e72:	jno    0x418e7a
  418e74:	gs xchg edx,eax
  418e76:	mov    ah,BYTE PTR [edi]
  418e78:	ret    
  418e79:	xchg   edx,eax
  418e7a:	inc    edi
  418e7b:	sahf   
  418e7c:	or     eax,DWORD PTR [esi-0x7dc34c63]
  418e82:	iret   
  418e83:	and    eax,0xeb15f2df
  418e88:	pushf  
  418e89:	ret    0x29ed
  418e8c:	jno    0x418e72
  418e8e:	push   0x35
  418e90:	jp     0x418ed0
  418e92:	xchg   edi,eax
  418e93:	add    DWORD PTR [eax],0x41
  418e96:	dec    ecx
  418e97:	push   ds
  418e98:	cmp    eax,0x4c0b5a44
  418e9d:	push   edi
  418e9e:	mov    sp,0xc412
  418ea2:	(bad)  
  418ea3:	mov    edx,0xb809df5d
  418ea8:	sub    esp,DWORD PTR [ebx]
  418eaa:	ret    
  418eab:	add    DWORD PTR [edx],ebx
  418ead:	mov    WORD PTR [esi],ds
  418eaf:	mov    ds:0x906f439c,eax
  418eb4:	add    BYTE PTR [esi-0x185bf203],ah
  418eba:	add    ebp,DWORD PTR [edx-0x1c]
  418ebd:	xor    al,0xd
  418ebf:	fld    TBYTE PTR [ecx-0x34]
  418ec2:	loopne 0x418ea6
  418ec4:	test   DWORD PTR [ecx-0x1153872e],edx
  418eca:	(bad)  
  418ecb:	jg     0x418ee5
  418ecd:	xor    al,0x6f
  418ecf:	cli    
  418ed0:	sbb    eax,0xeccf7a11
  418ed5:	push   esp
  418ed6:	std    
  418ed7:	ror    BYTE PTR ss:[edx+0x8f44c40],cl
  418ede:	mov    esp,0xc8858b74
  418ee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ee4:	lea    ebx,[esi]
  418ee6:	clc    
  418ee7:	cmp    al,0xff
  418ee9:	inc    cx
  418eeb:	stos   BYTE PTR es:[edi],al
  418eec:	clc    
  418eed:	xchg   esi,eax
  418eee:	pusha  
  418eef:	iret   
  418ef0:	jg     0x418f24
  418ef2:	sbb    BYTE PTR [esi+edi*1+0x6cf953e9],0xae
  418efa:	pop    esi
  418efb:	adc    dl,al
  418efd:	push   ss
  418efe:	in     al,0x10
  418f00:	loope  0x418f42
  418f02:	xchg   BYTE PTR ds:0xe42ca35d,dh
  418f08:	icebp  
  418f09:	jnp    0x418f39
  418f0b:	(bad)
  418f0e:	or     al,0x9d
  418f10:	pop    esp
  418f11:	popa   
  418f12:	add    ah,BYTE PTR [ecx+esi*1]
  418f15:	jbe    0x418eea
  418f17:	stos   DWORD PTR es:[edi],eax
  418f18:	mov    bh,0xfb
  418f1a:	xchg   edi,eax
  418f1b:	loopne 0x418ea7
  418f1d:	and    edi,eax
  418f1f:	mov    ebx,0x1d799784
  418f24:	pop    esp
  418f25:	pushf  
  418f26:	cmp    ecx,DWORD PTR [ecx]
  418f28:	ins    DWORD PTR es:[edi],dx
  418f29:	push   ds
  418f2a:	mov    edi,0x99cd49c4
  418f2f:	lds    eax,FWORD PTR [edi-0x6fff7a7a]
  418f35:	mov    ds:0x47f29649,eax
  418f3a:	pop    esp
  418f3b:	gs cdq 
  418f3d:	pop    es
  418f3e:	xchg   ecx,eax
  418f3f:	jp     0x418ee5
  418f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f42:	or     edi,DWORD PTR [esi]
  418f44:	scas   al,BYTE PTR es:[edi]
  418f45:	adc    esp,DWORD PTR [ebx+esi*4-0x1d]
  418f49:	out    dx,eax
  418f4a:	and    bl,bl
  418f4c:	jne    0x418f73
  418f4e:	mov    bh,0xf7
  418f50:	push   ebp
  418f51:	jmp    0x418f91
  418f53:	xchg   ecx,eax
  418f54:	dec    esi
  418f55:	xchg   esi,eax
  418f56:	inc    ecx
  418f57:	lods   al,BYTE PTR ds:[esi]
  418f58:	stc    
  418f59:	je     0x418f51
  418f5b:	sub    BYTE PTR [edx-0x7965a10b],ah
  418f61:	mov    ds:0x3b22b7f7,eax
  418f66:	pop    ebx
  418f67:	mov    esi,?
  418f69:	inc    eax
  418f6a:	ret    0x558
  418f6d:	push   cs
  418f6e:	test   eax,0x9da616b0
  418f73:	pop    ebx
  418f74:	out    0x7e,al
  418f76:	add    al,al
  418f78:	pop    edx
  418f79:	mov    edx,cs
  418f7b:	pop    esi
  418f7c:	loop   0x418fb7
  418f7e:	inc    ecx
  418f7f:	cmp    BYTE PTR [ecx+0x16],al
  418f82:	mov    esp,0xe1a9e1f5
  418f87:	sbb    al,0xfc
  418f89:	fsub   DWORD PTR [ebx]
  418f8b:	stc    
  418f8c:	pusha  
  418f8d:	sub    eax,0x622c056f
  418f92:	and    dh,BYTE PTR [edi]
  418f94:	adc    DWORD PTR [edi],eax
  418f96:	leave  
  418f97:	mov    eax,ds:0xb6137b89
  418f9c:	imul   ebx,DWORD PTR [eax+edx*8],0x2e
  418fa0:	rcr    DWORD PTR [ebx+0x4d],1
  418fa3:	push   edx
  418fa4:	cdq    
  418fa5:	imul   ecx,DWORD PTR ds:[esi+0x16cec073],0x2a3e1525
  418fb0:	inc    esp
  418fb1:	cdq    
  418fb2:	push   ds
  418fb3:	push   0x40
  418fb5:	inc    esp
  418fb6:	push   ecx
  418fb7:	or     ch,BYTE PTR [eax+0x7078389d]
  418fbd:	popf   
  418fbe:	lock xchg BYTE PTR [eax],al
  418fc1:	jl     0x418fd9
  418fc3:	dec    ebx
  418fc4:	dec    ebp
  418fc5:	jmp    0x54fd:0xd068f259
  418fcc:	hlt    
  418fcd:	ss pop edi
  418fcf:	xor    edx,DWORD PTR [ebp-0x31]
  418fd2:	mov    ah,0xe8
  418fd4:	inc    edi
  418fd5:	adc    esp,eax
  418fd7:	fucomi st,st(2)
  418fd9:	scas   eax,DWORD PTR es:[edi]
  418fda:	fsubr  DWORD PTR [eax]
  418fdc:	imul   esp,DWORD PTR [eax-0x52],0xe4c86023
  418fe3:	mov    dh,0xa2
  418fe5:	pop    esi
  418fe6:	or     edx,esi
  418fe8:	fild   QWORD PTR [edi+0x46]
  418feb:	les    ebx,FWORD PTR [ebx+0x3d]
  418fee:	sub    al,0xc5
  418ff0:	(bad)  
  418ff1:	cli    
  418ff2:	push   esi
  418ff3:	lods   eax,DWORD PTR ds:[esi]
  418ff4:	in     al,0x86
  418ff6:	inc    eax
  418ff7:	sub    al,0x85
  418ff9:	jp     0x419045
  418ffb:	ins    BYTE PTR es:[edi],dx
  418ffc:	adc    cl,BYTE PTR [ebp-0x51]
  418fff:	dec    edi
  419000:	ret    0x5d4e
  419003:	and    eax,0x7a289f94
  419008:	call   0x6f4d6cbb
  41900d:	push   edx
  41900e:	mov    dl,0x75
  419010:	pop    esi
  419011:	mov    bh,0xa7
  419013:	data16 cmp BYTE PTR [ebp+0xb],0xd4
  419018:	mov    ds:0x606f7a07,al
  41901d:	sub    eax,0x13148d71
  419022:	mov    ds:0x850a0643,eax
  419027:	gs ret 0xfd8
  41902b:	lock daa 
  41902d:	pop    ds
  41902e:	or     esi,edx
  419030:	mov    DWORD PTR [edx-0x52],ebx
  419033:	pop    eax
  419034:	pop    edi
  419035:	mov    bl,0x33
  419037:	xor    BYTE PTR [eax+eiz*2],cl
  41903a:	sub    al,0x21
  41903c:	cmp    edx,DWORD PTR [ebx]
  41903e:	push   es
  41903f:	dec    ecx
  419040:	mov    DWORD PTR [ebx+ebx*2-0x69],0x95fcc364
  419048:	stos   BYTE PTR es:[edi],al
  419049:	mov    ds:0xf35515d2,eax
  41904e:	mov    BYTE PTR [edx-0x40949ce8],ch
  419054:	lds    esi,FWORD PTR [ecx]
  419056:	pop    edi
  419057:	fbstp  TBYTE PTR [eax]
  419059:	sub    edx,DWORD PTR [edx]
  41905b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41905c:	and    DWORD PTR [ebx+0x37],edi
  41905f:	mov    edi,0xab9ed582
  419064:	aad    0xf
  419066:	inc    edi
  419067:	or     eax,0xe19c3c30
  41906c:	pop    edi
  41906d:	rol    DWORD PTR [ebx+0x7f27e205],1
  419073:	sbb    eax,0xd5218024
  419078:	add    DWORD PTR [eax+eax*8],0x4c29a1f7
  41907f:	sub    al,0xf4
  419081:	lods   al,BYTE PTR ds:[esi]
  419082:	ins    BYTE PTR es:[edi],dx
  419083:	mov    dh,0x5d
  419085:	nop
  419086:	clc    
  419087:	pop    esp
  419088:	call   0x1810ac3f
  41908d:	pop    es
  41908e:	ficom  WORD PTR [ecx-0x252dafb1]
  419094:	mov    edi,0xafdea283
  419099:	mov    ebx,0x10adee58
  41909e:	(bad)  
  41909f:	push   ds
  4190a0:	fdivr  st(3),st
  4190a2:	lea    esi,[esi-0x2b]
  4190a5:	fnstsw WORD PTR [edi]
  4190a7:	pop    eax
  4190a8:	jno    0x419068
  4190aa:	cs ds push ecx
  4190ad:	sbb    DWORD PTR [eax],esp
  4190af:	test   DWORD PTR [ebx],0xadbca8c5
  4190b5:	dec    esi
  4190b6:	in     eax,0x56
  4190b8:	loope  0x419056
  4190ba:	sbb    esp,ebp
  4190bc:	sub    BYTE PTR [edx+0x1300e423],dh
  4190c2:	fisubr DWORD PTR [ecx+0x1947e90]
  4190c8:	add    al,0xab
  4190ca:	ror    BYTE PTR [esi+0x2382a4a7],0x43
  4190d1:	mov    ah,0x92
  4190d3:	jnp    0x419077
  4190d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190d6:	dec    edi
  4190d7:	stos   DWORD PTR es:[edi],eax
  4190d8:	and    esi,ebp
  4190da:	std    
  4190db:	cmp    eax,0xd41b5ab5
  4190e0:	outs   dx,DWORD PTR ds:[esi]
  4190e1:	or     eax,0xcf913a93
  4190e6:	test   DWORD PTR [edi],edi
  4190e8:	xchg   ebx,eax
  4190e9:	pop    esi
  4190ea:	push   ebp
  4190eb:	xor    eax,0x204844ec
  4190f0:	xor    eax,0x79f6f312
  4190f5:	jb     0x419136
  4190f7:	sub    ah,BYTE PTR [ecx]
  4190f9:	cli    
  4190fa:	shr    BYTE PTR [edx+0x5af7cf8b],cl
  419100:	jnp    0x4190ce
  419102:	mov    cl,0xc0
  419104:	dec    ecx
  419105:	mov    ds:0xeefcce44,eax
  41910a:	jno    0x41917f
  41910c:	out    dx,eax
  41910d:	push   ds
  41910e:	mov    bh,ah
  419110:	jbe    0x4190f5
  419112:	pop    es
  419113:	lahf   
  419114:	lds    edx,FWORD PTR [esi]
  419116:	xchg   DWORD PTR [ebx+eax*1],esi
  419119:	leave  
  41911a:	jecxz  0x419189
  41911c:	retf   0x73f6
  41911f:	cs int 0xd8
  419122:	mov    ch,0xba
  419124:	adc    BYTE PTR [edx],0x52
  419127:	int    0x52
  419129:	or     esi,DWORD PTR [edx+0x71e98956]
  41912f:	push   0x4c21a7e5
  419134:	mov    bh,0x50
  419136:	cdq    
  419137:	inc    edi
  419138:	lea    eax,[esi+0x59b38668]
  41913e:	jge    0x419199
  419140:	arpl   WORD PTR [esp],cx
  419143:	loopne 0x41911f
  419145:	mov    ah,0x4e
  419147:	jo     0x4191b2
  419149:	add    bl,BYTE PTR [eax+0x61]
  41914c:	cmp    eax,0x28861802
  419151:	fs aaa 
  419153:	sbb    BYTE PTR [edi],0xf2
  419156:	int3   
  419157:	or     DWORD PTR [edx-0x7f],ebx
  41915a:	clc    
  41915b:	cmp    al,0xb1
  41915d:	(bad)
  419160:	shr    BYTE PTR [ebx],0x5d
  419163:	inc    ebp
  419164:	sub    al,0x15
  419166:	sbb    BYTE PTR [eax],bh
  419168:	push   ebp
  419169:	jmp    0x45df:0x57ff9f29
  419170:	mov    ecx,0xfbcbf7fd
  419175:	mov    ds:0xb5721ca3,eax
  41917a:	into   
  41917b:	add    eax,0x3c5178bc
  419180:	push   0x67
  419182:	or     BYTE PTR [eax],ch
  419184:	cmp    DWORD PTR ds:0xfb96525b,edi
  41918a:	fsubr  st(2),st
  41918c:	push   esp
  41918d:	jo     0x419117
  41918f:	xlat   BYTE PTR ds:[ebx]
  419190:	mov    ch,0x78
  419192:	iret   
  419193:	dec    eax
  419194:	mov    BYTE PTR gs:[edx+0x23b4897],cl
  41919b:	xchg   edx,eax
  41919c:	xchg   esp,eax
  41919d:	sbb    edi,ecx
  41919f:	cmp    esi,DWORD PTR [esi-0x1f]
  4191a2:	int    0xa
  4191a4:	arpl   WORD PTR [ebx+0x54],sp
  4191a7:	call   0xd5f5fcd1
  4191ac:	inc    ebp
  4191ad:	mov    ss:0x424ac420,eax
  4191b3:	sbb    DWORD PTR [edi],edi
  4191b5:	sahf   
  4191b6:	sar    DWORD PTR [esi-0x1fba6c5d],cl
  4191bc:	lods   eax,DWORD PTR ds:[esi]
  4191bd:	or     BYTE PTR [esp+ebp*1+0x35],ch
  4191c1:	push   es
  4191c2:	jne    0x4191d4
  4191c4:	jae    0x4191a5
  4191c6:	and    BYTE PTR [esi-0x64],bh
  4191c9:	sbb    DWORD PTR [edx-0x7e],edx
  4191cc:	frstor [esp+edx*1+0x43cc3616]
  4191d3:	mov    bh,0xa5
  4191d5:	loop   0x4191c6
  4191d7:	pushf  
  4191d8:	jo     0x41916a
  4191da:	mov    bl,dl
  4191dc:	sahf   
  4191dd:	ja     0x419215
  4191df:	sbb    al,0x2
  4191e1:	pop    edx
  4191e2:	ins    DWORD PTR es:[edi],dx
  4191e3:	scas   eax,DWORD PTR es:[edi]
  4191e4:	push   0x2fd1702e
  4191e9:	xor    esi,DWORD PTR [edx+0x2d0d409b]
  4191ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191f0:	cmp    ecx,DWORD PTR [ebp-0x61]
  4191f3:	jp     0x41925d
  4191f5:	sti    
  4191f6:	add    ebx,eax
  4191f8:	shr    dh,1
  4191fa:	cmp    eax,0x8ead2288
  4191ff:	sahf   
  419200:	or     edx,ebp
  419202:	ss push eax
  419204:	scas   al,BYTE PTR es:[edi]
  419205:	aad    0xfa
  419207:	pop    edx
  419208:	or     BYTE PTR [eax],bh
  41920a:	mov    dl,0x23
  41920c:	out    dx,eax
  41920d:	inc    eax
  41920e:	aad    0x2
  419210:	dec    esp
  419211:	sahf   
  419212:	retf   
  419213:	ret    0x5c03
  419216:	mov    ebp,0xeb406711
  41921b:	pop    es
  41921c:	ror    eax,0x21
  41921f:	repnz push ecx
  419221:	mov    ebp,0xc918c0a5
  419226:	repz sub eax,0xc68a6c51
  41922c:	lahf   
  41922d:	pop    eax
  41922e:	leave  
  41922f:	or     eax,0x1a8f2a2c
  419234:	xchg   edi,eax
  419235:	and    eax,0xca8597b0
  41923a:	xor    ebp,esi
  41923c:	inc    ebp
  41923d:	(bad)
  419241:	mov    eax,ds:0xacd8a075
  419246:	or     DWORD PTR fs:[esi-0x7e74d18e],esi
  41924d:	and    DWORD PTR [ecx+0x5787a5bd],ebp
  419253:	fistp  WORD PTR [ebp+0x5561d169]
  419259:	jle    0x4192b7
  41925b:	scas   al,BYTE PTR es:[edi]
  41925c:	dec    ebp
  41925d:	and    ch,BYTE PTR [eax-0x6e34f1bb]
  419263:	lea    ebp,[edx+ecx*1]
  419266:	fst    st(7)
  419268:	add    edx,edx
  41926a:	(bad)  
  41926b:	push   0xffffff84
  41926d:	mov    cl,0x12
  41926f:	je     0x419216
  419271:	jno    0x419229
  419273:	pop    edx
  419274:	adc    ah,BYTE PTR [eax+0x5a7a8e2f]
  41927a:	popf   
  41927b:	xchg   DWORD PTR [edi-0x6b57faf3],esi
  419281:	sub    BYTE PTR [edx-0x15],0xc2
  419285:	inc    esp
  419286:	ds in  al,0xce
  419289:	pop    ebx
  41928a:	arpl   WORD PTR [ebp-0x3],ax
  41928d:	std    
  41928e:	mov    cl,0xaf
  419290:	cmp    al,0x54
  419292:	data16 jg 0x41922b
  419295:	cmp    DWORD PTR [esi],0x8f112ee4
  41929b:	push   eax
  41929c:	jnp    0x4192f9
  41929e:	mov    eax,ds:0xcd9a911c
  4192a3:	ret    0xed70
  4192a6:	add    eax,edx
  4192a8:	fild   QWORD PTR [eax]
  4192aa:	sub    esp,DWORD PTR [ebx-0x272d68cc]
  4192b0:	lock mov ah,0x3d
  4192b3:	loopne 0x419264
  4192b5:	xchg   edx,eax
  4192b6:	dec    esi
  4192b7:	pushf  
  4192b8:	in     eax,dx
  4192b9:	inc    esi
  4192ba:	or     edx,DWORD PTR [esi-0x6f]
  4192bd:	dec    ebp
  4192be:	stc    
  4192bf:	call   0xd35826a8
  4192c4:	lods   eax,DWORD PTR ds:[esi]
  4192c5:	fisubr WORD PTR [edx]
  4192c7:	aaa    
  4192c8:	sub    dh,bh
  4192ca:	gs inc ebp
  4192cc:	mov    esi,0x28757b72
  4192d1:	jecxz  0x419305
  4192d3:	int    0x8a
  4192d5:	or     esp,DWORD PTR [ebp-0x66]
  4192d8:	out    dx,al
  4192d9:	loop   0x419344
  4192db:	mov    al,0x17
  4192dd:	xor    eax,edi
  4192df:	and    edx,eax
  4192e1:	mov    al,ds:0xb7b108dd
  4192e6:	adc    eax,0x41fef377
  4192eb:	loopne 0x41928d
  4192ed:	pop    esp
  4192ee:	sub    eax,0xc0799291
  4192f3:	mov    ?,ecx
  4192f5:	mov    edx,0x63d669e0
  4192fa:	mov    dh,0x1f
  4192fc:	dec    esp
  4192fd:	jb     0x41932a
  4192ff:	jecxz  0x4192f2
  419301:	loope  0x41936f
  419303:	mov    bl,0x6a
  419305:	aaa    
  419306:	push   edx
  419307:	xor    DWORD PTR [ebx],esp
  419309:	xchg   edi,eax
  41930a:	mov    WORD PTR [edi+0x67],?
  41930d:	jmp    0x9ded:0xe6e745a4
  419314:	push   esp
  419315:	pop    esp
  419316:	out    0x9e,eax
  419318:	push   0x830ec8e5
  41931d:	sbb    eax,0x9c6bbe30
  419322:	sub    BYTE PTR [ecx+esi*1+0x2bc94722],dh
  419329:	xor    al,0x58
  41932b:	(bad)  
  41932c:	fwait
  41932d:	aas    
  41932e:	xchg   ebp,eax
  41932f:	adc    esp,DWORD PTR [esi-0x3c]
  419332:	dec    edx
  419333:	jno    0x4192c2
  419335:	popf   
  419336:	pop    ebx
  419337:	(bad)  
  419338:	mov    esi,0xa19576c2
  41933d:	sbb    al,0x5
  41933f:	cli    
  419340:	and    al,0x9a
  419342:	xchg   ebp,eax
  419343:	and    eax,0x7fd6a639
  419348:	dec    ebx
  419349:	call   0xd3ce0f66
  41934e:	adc    dh,BYTE PTR [ebx-0x67]
  419351:	call   0xf266:0xbe9c5d73
  419358:	or     al,0x6c
  41935a:	cs adc ebx,ebx
  41935d:	sbb    esp,edx
  41935f:	test   DWORD PTR cs:[esi],0xe6ec982
  419366:	push   0xffffffe9
  419368:	test   BYTE PTR [edx-0x5d],bl
  41936b:	sahf   
  41936c:	pop    ecx
  41936d:	jb     0x4192f5
  41936f:	lock int3 
  419371:	and    bh,dh
  419373:	out    dx,al
  419374:	int    0x43
  419376:	sbb    eax,0x627b5c5b
  41937b:	push   edi
  41937c:	mov    ah,0xc0
  41937e:	in     al,0xe5
  419380:	imul   ecx,DWORD PTR ds:0x6eeafd8a,0xffffffc9
  419387:	sub    ebx,DWORD PTR [eax+eiz*4]
  41938a:	mov    dh,cl
  41938c:	int3   
  41938d:	pusha  
  41938e:	pop    ebp
  41938f:	dec    edx
  419390:	je     0x4193fe
  419392:	inc    ecx
  419393:	loop   0x419325
  419395:	inc    ebx
  419396:	mov    ?,WORD PTR [esi+0xb71a406]
  41939c:	or     edi,ecx
  41939e:	loope  0x419328
  4193a0:	push   ds
  4193a1:	sub    eax,0x4179935c
  4193a6:	mov    BYTE PTR [eax],ah
  4193a8:	pop    edi
  4193a9:	xchg   esi,eax
  4193aa:	dec    edx
  4193ab:	mov    esp,ss
  4193ad:	mov    eax,DWORD PTR [edi+esi*1-0x517cd653]
  4193b4:	mov    al,0x78
  4193b6:	pop    esi
  4193b7:	jge    0x419424
  4193b9:	aas    
  4193ba:	jno    0x419425
  4193bc:	ds jne 0x419354
  4193bf:	jmp    0x4193f9
  4193c1:	dec    ebx
  4193c2:	push   cs
  4193c3:	and    BYTE PTR [eax-0x10],dh
  4193c6:	mov    dl,0xd6
  4193c8:	fild   QWORD PTR [edx]
  4193ca:	pop    ss
  4193cb:	ins    DWORD PTR es:[edi],dx
  4193cc:	pop    ebp
  4193cd:	cld    
  4193ce:	xchg   esp,eax
  4193cf:	inc    ebp
  4193d0:	cmp    ecx,DWORD PTR [esi+0x20]
  4193d3:	and    WORD PTR [edi+0xe5342c1],si
  4193da:	push   DWORD PTR [esi+0x641fc608]
  4193e0:	jae    0x4193f6
  4193e2:	xor    DWORD PTR [esi-0x17c7ba39],ebp
  4193e8:	ja     0x4193d8
  4193ea:	mov    bl,0x2
  4193ec:	sbb    DWORD PTR [edi-0x52],ebp
  4193ef:	push   cs
  4193f0:	cs jno 0x41942b
  4193f3:	out    dx,eax
  4193f4:	xchg   edx,eax
  4193f5:	loope  0x4193eb
  4193f7:	push   edx
  4193f8:	mov    cl,0x77
  4193fa:	mov    ecx,0x177d7af8
  4193ff:	jb     0x419389
  419401:	sbb    DWORD PTR ds:0x32eb095a,esp
  419407:	mov    edi,ebp
  419409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41940a:	inc    eax
  41940b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41940c:	sbb    al,0x36
  41940e:	and    eax,0x43569425
  419413:	xchg   edx,eax
  419414:	jo     0x4193e1
  419416:	mov    esi,0xd2d45ba1
  41941b:	fsub   QWORD PTR es:[ebp-0x26c66556]
  419422:	mov    dh,0x1
  419424:	adc    bl,bh
  419426:	inc    ecx
  419427:	dec    esi
  419428:	mov    dh,0x37
  41942a:	inc    ecx
  41942b:	shl    BYTE PTR [ebp+0x37],0x9f
  41942f:	loopne 0x4194a3
  419431:	les    ecx,FWORD PTR [ebp+0x6f]
  419434:	xor    al,0x93
  419436:	inc    eax
  419437:	leave  
  419438:	xchg   ecx,eax
  419439:	pop    ecx
  41943a:	popf   
  41943b:	adc    cl,BYTE PTR [edi]
  41943d:	lea    ebp,[ebx-0x7098de2c]
  419443:	into   
  419444:	inc    ecx
  419445:	je     0x419467
  419447:	push   0xffffffd1
  419449:	in     al,dx
  41944a:	ja     0x419499
  41944c:	push   esp
  41944d:	ds add al,0xf
  419450:	sub    esi,DWORD PTR [ecx+0x77467f69]
  419456:	in     al,0x67
  419458:	pop    eax
  419459:	lea    esp,[eax+0x49]
  41945c:	fiadd  DWORD PTR gs:[esi]
  41945f:	retf   
  419460:	mov    ch,BYTE PTR [ecx+0x735ea98f]
  419466:	xchg   bl,ch
  419468:	pop    es
  419469:	and    ebp,eax
  41946b:	outs   dx,BYTE PTR ds:[esi]
  41946c:	bound  ebx,QWORD PTR ds:0xe78a167e
  419472:	test   eax,0xcdec93c0
  419477:	fist   DWORD PTR [edi-0x4]
  41947a:	in     eax,0x14
  41947c:	dec    edx
  41947d:	xchg   edi,eax
  41947e:	push   0xf7bbc89
  419483:	sbb    edx,edi
  419485:	aas    
  419486:	repnz mov DWORD PTR [esi],ebp
  419489:	outs   dx,DWORD PTR ds:[esi]
  41948a:	jmp    0x1d027a92
  41948f:	xor    BYTE PTR [eax+eiz*4],ah
  419492:	cmp    BYTE PTR [ebx+0x44],0xf8
  419496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419497:	xlat   BYTE PTR ds:[ebx]
  419498:	push   ds
  419499:	std    
  41949a:	in     eax,dx
  41949b:	sub    BYTE PTR [eax],0xe0
  41949e:	(bad)  
  41949f:	popf   
  4194a0:	mov    ds:0xe7cbb1ba,eax
  4194a5:	pop    esi
  4194a6:	icebp  
  4194a7:	outs   dx,DWORD PTR ds:[esi]
  4194a8:	jno    0x4194f6
  4194aa:	sbb    dl,0xa4
  4194ad:	sub    eax,0xfebcedf0
  4194b2:	push   esi
  4194b3:	cwde   
  4194b4:	test   eax,0x4f6bb43c
  4194b9:	call   0xecf5ad6c
  4194be:	ret    0x284b
  4194c1:	sbb    al,0x30
  4194c3:	push   ds
  4194c4:	rep outs dx,BYTE PTR ds:[esi]
  4194c6:	mov    ds:0x7093a70f,al
  4194cb:	mov    ch,0x76
  4194cd:	fidivr WORD PTR [edi+esi*8+0x12]
  4194d1:	scas   al,BYTE PTR es:[edi]
  4194d2:	jge    0x419502
  4194d4:	cdq    
  4194d5:	test   al,0x7b
  4194d7:	jecxz  0x4194f0
  4194d9:	daa    
  4194da:	pop    ds
  4194db:	push   ecx
  4194dc:	rol    DWORD PTR [edx-0x4c],0xa5
  4194e0:	in     eax,dx
  4194e1:	sbb    cl,0x65
  4194e4:	xchg   esi,eax
  4194e5:	adc    BYTE PTR [edi],al
  4194e7:	or     ch,dh
  4194e9:	xor    BYTE PTR [eax-0x636f1c9a],0x7b
  4194f0:	mov    al,ds:0xbeca2676
  4194f5:	hlt    
  4194f6:	adc    bh,al
  4194f8:	xchg   DWORD PTR [ecx+0x5b97ef62],ecx
  4194fe:	rol    DWORD PTR ds:0x83fb17e6,0xb3
  419505:	and    ah,al
  419507:	ins    BYTE PTR es:[edi],dx
  419508:	(bad)  
  419509:	outs   dx,DWORD PTR ds:[esi]
  41950a:	ins    BYTE PTR es:[edi],dx
  41950b:	stos   DWORD PTR es:[edi],eax
  41950c:	ret    0xcf78
  41950f:	sbb    BYTE PTR [edx],ah
  419511:	pop    es
  419512:	sbb    al,BYTE PTR [edx]
  419514:	jb     0x419511
  419516:	dec    esp
  419517:	push   es
  419518:	lods   al,BYTE PTR ds:[esi]
  419519:	mov    al,0x39
  41951b:	in     al,dx
  41951c:	outs   dx,BYTE PTR ds:[esi]
  41951d:	adc    ebx,ebp
  41951f:	xor    eax,0xecb13bf4
  419524:	push   edx
  419525:	mov    esi,0xb60b3a8
  41952a:	addr16 push 0x10b2dd31
  419530:	fdivr  QWORD PTR [esi-0x68760c21]
  419536:	bound  edx,QWORD PTR [ecx-0x3a]
  419539:	je     0x41955a
  41953b:	mov    ch,0xcf
  41953d:	inc    esi
  41953e:	(bad)  
  41953f:	lds    ebx,FWORD PTR [edx]
  419541:	call   0x6521:0x9dbddd5d
  419548:	push   eax
  419549:	mov    BYTE PTR [esi+edi*4],cl
  41954c:	std    
  41954d:	aam    0x68
  41954f:	mov    dh,ch
  419551:	mov    esp,0xdb8642f4
  419556:	xlat   BYTE PTR ds:[ebx]
  419557:	arpl   WORD PTR [edx-0x1e],sp
  41955a:	jp     0x419579
  41955c:	sub    ah,BYTE PTR [ecx-0x4d]
  41955f:	test   BYTE PTR [ebx-0x78c03b18],ch
  419565:	dec    edi
  419566:	aas    
  419567:	jne    0x419559
  419569:	sbb    eax,0x14879ef5
  41956e:	addr16 cmp al,0x41
  419571:	xor    BYTE PTR [edx],bl
  419573:	jb     0x41959d
  419575:	(bad)  
  419576:	fdivr  st,st(3)
  419578:	stc    
  419579:	mov    BYTE PTR [edi-0x72],dh
  41957c:	xchg   edi,eax
  41957d:	test   al,0xef
  41957f:	dec    edx
  419580:	pop    eax
  419581:	repnz push eax
  419583:	jle    0x419505
  419585:	inc    ecx
  419586:	push   ds
  419587:	stos   DWORD PTR es:[edi],eax
  419588:	push   es
  419589:	mov    BYTE PTR [esp+eax*2+0x2f],bl
  41958d:	inc    ebx
  41958e:	loopne 0x419597
  419590:	pop    edx
  419591:	(bad)  
  419592:	clc    
  419593:	lahf   
  419594:	mov    gs,eax
  419596:	jb     0x4195c1
  419598:	inc    edi
  419599:	adc    BYTE PTR [edx],0x97
  41959c:	popa   
  41959d:	data16 sub BYTE PTR [edi+0x63],0x88
  4195a2:	or     BYTE PTR [edi+0x4d421115],al
  4195a8:	mov    ds:0x55acc9a,al
  4195ad:	das    
  4195ae:	fisttp QWORD PTR [esi]
  4195b0:	clc    
  4195b1:	inc    edx
  4195b2:	sub    eax,0xab25fbfb
  4195b7:	ret    
  4195b8:	and    edi,DWORD PTR [ecx-0x30]
  4195bb:	out    dx,al
  4195bc:	sbb    BYTE PTR [edx-0x33],al
  4195bf:	mov    ebp,0xee35a09b
  4195c4:	inc    esi
  4195c5:	dec    eax
  4195c6:	mov    BYTE PTR [edx-0x26c70ca4],al
  4195cc:	sub    edi,eax
  4195ce:	jmp    0x41959d
  4195d0:	nop
  4195d1:	pop    ebx
  4195d2:	mov    ch,0x76
  4195d4:	fisubr DWORD PTR [ebx+ebx*2+0x2a]
  4195d8:	mov    dl,0xfa
  4195da:	cmp    ebp,DWORD PTR [ecx+0x6661fa82]
  4195e0:	dec    edx
  4195e1:	xchg   ebp,eax
  4195e2:	les    eax,FWORD PTR [ecx]
  4195e4:	loop   0x41965c
  4195e6:	jl     0x419610
  4195e8:	imul   ebp,DWORD PTR [eax-0x79],0x9a3bc7f4
  4195ef:	mov    ds:0x2d5f72b7,al
  4195f4:	popf   
  4195f5:	mov    esp,0x8cb1d045
  4195fa:	dec    esp
  4195fb:	inc    esp
  4195fc:	mov    ecx,ss
  4195fe:	clc    
  4195ff:	dec    ecx
  419600:	ror    DWORD PTR [ebx],cl
  419602:	jb     0x4195b6
  419604:	repz cs jg 0x41960d
  419608:	adc    dh,bl
  41960a:	loope  0x41959d
  41960c:	mov    edx,0xabe0e58
  419611:	jg     0x41967c
  419613:	hlt    
  419614:	jmp    0x11d92a96
  419619:	add    al,0xf9
  41961b:	cmp    eax,DWORD PTR [eax+0x18]
  41961e:	mov    DWORD PTR [esi],eax
  419620:	inc    ecx
  419621:	stc    
  419622:	add    eax,0xf94edfc8
  419627:	imul   esp,DWORD PTR [eax],0xfa9899bf
  41962d:	call   0x26f13d45
  419632:	jns    0x419616
  419634:	inc    ebx
  419635:	adc    ah,BYTE PTR [ebx]
  419637:	xor    edx,DWORD PTR [ebx+ecx*2+0x2ff4cb4f]
  41963e:	mov    ebx,0xb223a6fb
  419643:	xor    ebp,DWORD PTR [edx-0x6b]
  419646:	(bad)  
  419647:	pop    ecx
  419648:	mov    dl,0xa7
  41964a:	pop    ecx
  41964b:	in     al,dx
  41964c:	add    DWORD PTR [edi+0x1],edx
  41964f:	clc    
  419650:	adc    BYTE PTR [edx-0x40],dl
  419653:	cmp    eax,0x31f95f1d
  419658:	in     eax,dx
  419659:	adc    ecx,DWORD PTR [eax-0x7c]
  41965c:	pop    ecx
  41965d:	cld    
  41965e:	call   0x5261:0x46d07542
  419665:	pop    edi
  419666:	xor    ch,BYTE PTR [edx+edx*2+0x28]
  41966a:	ins    BYTE PTR es:[edi],dx
  41966b:	mov    al,0x2b
  41966d:	mov    BYTE PTR [edx-0x48],al
  419670:	popf   
  419671:	inc    edi
  419672:	xor    BYTE PTR [edi-0x3c],cl
  419675:	inc    edx
  419676:	and    WORD PTR [ebp+0x45],dx
  41967a:	fwait
  41967b:	nop
  41967c:	push   cs
  41967d:	push   0xaaab72fa
  419682:	pop    edi
  419683:	shld   esp,ebp,0xe3
  419687:	adc    eax,0xc240cff9
  41968c:	pop    ss
  41968d:	test   al,0x8e
  41968f:	xchg   esp,eax
  419690:	stos   BYTE PTR es:[edi],al
  419691:	mov    esi,0x3e71301a
  419696:	fistp  WORD PTR [ecx-0x4c]
  419699:	fsub   DWORD PTR [ecx]
  41969b:	(bad)  
  41969c:	and    esp,DWORD PTR [ebx+ebp*4+0x57f63e5e]
  4196a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196a4:	jbe    0x4196d2
  4196a6:	mov    dl,0x8e
  4196a8:	xchg   edx,eax
  4196a9:	ret    
  4196aa:	push   edi
  4196ab:	cmp    al,BYTE PTR [edx]
  4196ad:	pushf  
  4196ae:	pushf  
  4196af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196b0:	ja     0x41964c
  4196b2:	dec    edx
  4196b3:	mov    ch,0xfa
  4196b5:	(bad)  
  4196b6:	push   edx
  4196b7:	and    bh,BYTE PTR [esi+0x6c]
  4196ba:	mov    eax,ds:0xb969f5d7
  4196bf:	xor    ebx,ebx
  4196c1:	stc    
  4196c2:	cmp    edi,ebx
  4196c4:	hlt    
  4196c5:	jecxz  0x4196e4
  4196c7:	pop    ds
  4196c8:	popf   
  4196c9:	cli    
  4196ca:	popa   
  4196cb:	sub    ah,BYTE PTR ds:0xaa186172
  4196d1:	push   edi
  4196d2:	pop    edi
  4196d3:	xchg   esi,eax
  4196d4:	sub    dl,bh
  4196d6:	sbb    esi,DWORD PTR [ecx]
  4196d8:	xchg   esi,eax
  4196d9:	xchg   edi,eax
  4196da:	(bad)  
  4196db:	ret    0x5343
  4196de:	add    ebp,DWORD PTR [edx-0x12293d4a]
  4196e4:	adc    dl,BYTE PTR [ebx-0x6e]
  4196e7:	das    
  4196e8:	pop    edi
  4196e9:	mov    al,0xac
  4196eb:	mov    bh,0x30
  4196ed:	in     al,0x51
  4196ef:	out    dx,al
  4196f0:	test   BYTE PTR ds:0x4ae7c2e2,bh
  4196f6:	xchg   edx,eax
  4196f7:	push   edi
  4196f8:	sbb    ch,BYTE PTR [esp+edi*1+0x51]
  4196fc:	and    eax,0x51c10a
  419701:	mov    BYTE PTR [esi+0x6fe168ec],dl
  419707:	ins    DWORD PTR es:[edi],dx
  419708:	out    dx,al
  419709:	push   ss
  41970a:	or     al,0x28
  41970c:	jnp    0x419782
  41970e:	lods   eax,DWORD PTR ds:[esi]
  41970f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419710:	push   eax
  419711:	mov    dl,0xdf
  419713:	jle    0x41973b
  419715:	popf   
  419716:	out    dx,eax
  419717:	in     eax,0x5d
  419719:	sti    
  41971a:	cli    
  41971b:	icebp  
  41971c:	lods   al,BYTE PTR ds:[esi]
  41971d:	scas   al,BYTE PTR es:[edi]
  41971e:	imul   edi,DWORD PTR [ebx+0x522d70f5],0xffffffaa
  419725:	fistp  DWORD PTR [edi+0x2a478110]
  41972b:	mov    ch,0xc7
  41972d:	(bad)  
  41972e:	in     eax,dx
  41972f:	inc    eax
  419730:	mov    al,0x99
  419732:	mov    esi,ds
  419734:	xor    esp,esp
  419736:	rcl    ch,0xc9
  419739:	call   0x1540:0x41a6ab36
  419740:	mov    al,ds:0xc9a84b4d
  419745:	jne    0x4196d7
  419747:	jmp    0x27981545
  41974c:	fidiv  WORD PTR [ebx+0x61113dfd]
  419752:	ret    
  419753:	lock les esi,FWORD PTR [esi-0x3ba3e2bb]
  41975a:	in     eax,dx
  41975b:	clc    
  41975c:	dec    edi
  41975d:	gs cdq 
  41975f:	(bad)
  419762:	test   BYTE PTR [edx],ch
  419764:	cmp    eax,0xcb489c61
  419769:	stos   DWORD PTR es:[edi],eax
  41976a:	cli    
  41976b:	cmp    al,0xf6
  41976d:	popa   
  41976e:	ja     0x419707
  419770:	pop    ss
  419771:	xor    DWORD PTR [ecx-0x4f77d361],esp
  419777:	inc    ebp
  419778:	xlat   BYTE PTR ds:[ebx]
  419779:	(bad)  
  41977a:	sub    bh,BYTE PTR [edx]
  41977c:	call   0xf20c2e79
  419781:	lea    eax,[ecx+eax*1]
  419784:	push   ebp
  419785:	cdq    
  419786:	cs int3 
  419788:	pop    ebx
  419789:	fwait
  41978a:	pop    edi
  41978b:	or     DWORD PTR [edx-0x2a251634],edi
  419791:	jge    0x4197ee
  419793:	inc    esi
  419794:	inc    ebp
  419795:	or     eax,0xdbedf065
  41979a:	aaa    
  41979b:	test   DWORD PTR [edx-0x6dc48993],ebp
  4197a1:	jle    0x419770
  4197a3:	cmp    eax,DWORD PTR [ebp-0x3b5d97dc]
  4197a9:	inc    edi
  4197aa:	fidiv  WORD PTR [eax+0xb]
  4197ad:	loope  0x4197ae
  4197af:	cmp    eax,0xe63efe3b
  4197b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197b5:	or     DWORD PTR [edi-0x9],edx
  4197b8:	inc    edi
  4197b9:	imul   esp,DWORD PTR [edi],0x283b77e2
  4197bf:	xchg   esp,eax
  4197c0:	pop    es
  4197c1:	enter  0xd5d,0xe9
  4197c5:	dec    ebp
  4197c6:	aas    
  4197c7:	ror    edx,1
  4197c9:	out    0xcf,al
  4197cb:	jecxz  0x419794
  4197cd:	mov    bl,0xc0
  4197cf:	adc    BYTE PTR [eax+0x7626cf70],0xe5
  4197d6:	push   ds
  4197d7:	cdq    
  4197d8:	dec    ebp
  4197d9:	cld    
  4197da:	(bad)  
  4197db:	xchg   ebx,eax
  4197dc:	jnp    0x41977f
  4197de:	sbb    edi,DWORD PTR [edi]
  4197e0:	sar    bh,1
  4197e2:	sub    BYTE PTR [esi],dl
  4197e4:	adc    DWORD PTR [ecx+esi*1-0x7d],ebx
  4197e8:	(bad)  [ebp+0x3cbc2c0b]
  4197ee:	add    BYTE PTR [edi-0x14],dl
  4197f1:	test   edi,esp
  4197f3:	in     eax,dx
  4197f4:	cli    
  4197f5:	cmp    BYTE PTR [ebp-0x67],cl
  4197f8:	in     eax,dx
  4197f9:	or     bl,BYTE PTR [edx+0x52]
  4197fc:	and    bh,al
  4197fe:	jmp    0x675c:0xdb1bc0f9
  419805:	or     al,0x6c
  419807:	ins    DWORD PTR es:[edi],dx
  419808:	add    esi,edx
  41980a:	(bad)  
  41980b:	imul   ecx,esp,0xa
  41980e:	push   0xed9a4d38
  419813:	enter  0xffad,0xe5
  419817:	dec    ebx
  419818:	cmp    al,0x94
  41981a:	or     BYTE PTR [eax],dh
  41981c:	popf   
  41981d:	jno    0x419827
  41981f:	push   ds
  419820:	lods   eax,DWORD PTR ds:[esi]
  419821:	pop    ebp
  419822:	out    0xaf,al
  419824:	(bad)  
  419825:	inc    eax
  419826:	mov    edi,0x7b908b9e
  41982b:	adc    eax,0x25001ff0
  419830:	outs   dx,DWORD PTR ds:[esi]
  419831:	ins    DWORD PTR es:[edi],dx
  419832:	icebp  
  419833:	mov    eax,0x30dc25d3
  419838:	cmp    al,0x1b
  41983a:	scas   al,BYTE PTR es:[edi]
  41983b:	dec    esp
  41983c:	leave  
  41983d:	sbb    ebx,DWORD PTR [eax-0x1e1f6212]
  419843:	jge    0x4197de
  419845:	mov    ds:0xa318fc0a,al
  41984a:	pop    ss
  41984b:	retf   0x4dae
  41984e:	or     eax,0x222aeba6
  419853:	(bad)
  419856:	push   eax
  419857:	icebp  
  419858:	dec    esi
  419859:	stc    
  41985a:	int3   
  41985b:	cmp    al,ch
  41985d:	test   BYTE PTR gs:[edx-0x4d],dh
  419861:	cmp    BYTE PTR [ecx],ah
  419863:	daa    
  419864:	repnz mov eax,edx
  419867:	sbb    al,0x82
  419869:	xchg   edi,eax
  41986a:	inc    ebx
  41986b:	mov    dl,0x39
  41986d:	ds into 
  41986f:	mov    dh,0xef
  419871:	mov    bh,0x70
  419873:	jg     0x4198a9
  419875:	(bad)  
  419876:	jne    0x419879
  419878:	mov    esp,0xe4f4b502
  41987d:	mov    esi,0x85aa20a3
  419882:	xor    DWORD PTR [ebp-0x26],ebp
  419885:	stc    
  419886:	imul   edi,DWORD PTR [edi],0x9c96e478
  41988c:	push   ebx
  41988d:	lahf   
  41988e:	inc    ebx
  41988f:	(bad)  
  419890:	cli    
  419891:	fistp  WORD PTR [esi+0xc]
  419894:	jmp    0xf6806eca
  419899:	and    BYTE PTR [eax-0x1b579111],bl
  41989f:	inc    ebx
  4198a0:	mov    cl,0x29
  4198a2:	(bad)  
  4198a3:	ds sti 
  4198a5:	aas    
  4198a6:	xor    bl,al
  4198a8:	inc    ch
  4198aa:	out    0xe3,al
  4198ac:	xor    DWORD PTR [edx-0x21],ecx
  4198af:	jp     0x4198b1
  4198b1:	ficom  DWORD PTR [esi-0x8636978]
  4198b7:	jb     0x419853
  4198b9:	xchg   ebx,eax
  4198ba:	dec    eax
  4198bb:	rcr    ah,1
  4198bd:	aaa    
  4198be:	sub    al,0xa7
  4198c0:	retf   
  4198c1:	sbb    al,0x8d
  4198c3:	bound  ebx,QWORD PTR [eax]
  4198c5:	addr16 int 0x47
  4198c8:	dec    ebx
  4198c9:	fild   WORD PTR [esi]
  4198cb:	retf   
  4198cc:	sbb    dl,BYTE PTR ds:0xe78df66f
  4198d2:	les    esi,FWORD PTR [esi+0x2b401f79]
  4198d8:	sub    ah,dh
  4198da:	repz dec edx
  4198dc:	inc    edi
  4198dd:	std    
  4198de:	cdq    
  4198df:	adc    BYTE PTR [edi+ebx*8+0x7],ah
  4198e3:	bnd jne 0x419901
  4198e6:	jle    0x41989a
  4198e8:	fldenv [edx]
  4198ea:	cmp    BYTE PTR [ebp+0x2863df12],ah
  4198f0:	hlt    
  4198f1:	push   esi
  4198f2:	push   cs
  4198f3:	mov    esi,0xafb2b2c7
  4198f8:	outs   dx,DWORD PTR ds:[esi]
  4198f9:	fistp  WORD PTR [eax+0x18]
  4198fc:	nop
  4198fd:	fwait
  4198fe:	aam    0xea
  419900:	inc    ebp
  419901:	mov    cl,0xaf
  419903:	inc    eax
  419904:	fwait
  419905:	or     esi,DWORD PTR [ebx-0x32]
  419908:	xchg   esp,eax
  419909:	popa   
  41990a:	sahf   
  41990b:	mov    ds:0x689f3c81,al
  419910:	and    al,0x8f
  419912:	add    eax,0xafb8c4ec
  419917:	cmc    
  419918:	and    BYTE PTR ds:0x8c4e0b69,0xc6
  41991f:	xor    BYTE PTR [edi+0x5d],cl
  419922:	stos   BYTE PTR es:[edi],al
  419923:	xor    eax,0xc28e42d9
  419928:	jle    0x4198b9
  41992a:	pop    ds
  41992b:	(bad)  
  41992c:	(bad)  
  41992d:	jl     0x4198d7
  41992f:	cmp    eax,0x554fb896
  419934:	jmp    0x41999d
  419936:	push   esi
  419937:	jns    0x419987
  419939:	pop    ecx
  41993a:	stc    
  41993b:	add    al,0xa7
  41993d:	mov    cl,BYTE PTR [edx+0x5a]
  419940:	xor    ch,BYTE PTR [ebx-0x4c]
  419943:	cmp    bh,BYTE PTR [edx+0x53]
  419946:	adc    esp,edx
  419948:	(bad)  [ebx+edx*1+0x40]
  41994c:	nop
  41994d:	pop    esp
  41994e:	in     al,0xcc
  419950:	lea    esi,[ebx]
  419952:	inc    esi
  419953:	or     esp,DWORD PTR [edi+0x3a5a54fe]
  419959:	loopne 0x419937
  41995b:	jo     0x4199c1
  41995d:	aaa    
  41995e:	push   ebp
  41995f:	sub    eax,0x4ddc666f
  419964:	mov    eax,ds:0xc297ff88
  419969:	xor    dl,BYTE PTR [esi-0x65]
  41996c:	mov    al,ds:0x22e56eb6
  419971:	shl    BYTE PTR [ebp-0xf6c5f86],cl
  419977:	lods   eax,DWORD PTR ds:[esi]
  419978:	push   ecx
  419979:	arpl   WORD PTR [edi+0x38],bp
  41997c:	xor    cl,BYTE PTR [ecx]
  41997e:	ret    0x7f54
  419981:	xor    BYTE PTR [edi+0x29],dh
  419984:	ret    0x9ea5
  419987:	lods   al,BYTE PTR ds:[esi]
  419988:	pop    edx
  419989:	fcomp  QWORD PTR [esi]
  41998b:	xor    ch,BYTE PTR [ecx+0x11]
  41998e:	(bad)  
  41998f:	and    dh,BYTE PTR [edx-0x24]
  419992:	xchg   ebx,eax
  419993:	jnp    0x419a04
  419995:	sub    al,0x5
  419997:	or     eax,eax
  419999:	clc    
  41999a:	dec    eax
  41999b:	hlt    
  41999c:	repnz scas al,BYTE PTR es:[edi]
  41999e:	and    al,0xf9
  4199a0:	inc    edi
  4199a1:	and    BYTE PTR [ebx-0x5],bl
  4199a4:	or     DWORD PTR [ebx-0xbaaa618],esp
  4199aa:	(bad)  
  4199ab:	fdivr  st(3),st
  4199ad:	nop
  4199ae:	adc    BYTE PTR ds:0x58e61fb4,0xb4
  4199b5:	mov    cl,0x4
  4199b7:	xchg   BYTE PTR [edx-0x1cd1143a],bh
  4199bd:	stos   BYTE PTR es:[edi],al
  4199be:	xlat   BYTE PTR ds:[ebx]
  4199bf:	mov    ecx,0x39fd965c
  4199c4:	jg     0x419a3c
  4199c6:	scas   eax,DWORD PTR es:[edi]
  4199c7:	fsub   DWORD PTR [eax-0x4b]
  4199ca:	shl    BYTE PTR [ebp+eax*4-0x4c9d67c2],1
  4199d1:	aad    0x6b
  4199d3:	fsubp  st(0),st
  4199d5:	adc    BYTE PTR [ebx],ch
  4199d7:	mov    eax,DWORD PTR [edi-0x2f]
  4199da:	pop    ebp
  4199db:	push   ecx
  4199dc:	in     eax,0xf9
  4199de:	jb     0x4199ff
  4199e0:	add    al,0x50
  4199e2:	and    esi,edx
  4199e4:	(bad)  
  4199e5:	pop    ds
  4199e6:	call   DWORD PTR [edi+ecx*2]
  4199e9:	sub    BYTE PTR [ebx-0x80],ah
  4199ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199ed:	dec    esi
  4199ee:	std    
  4199ef:	fild   QWORD PTR [edx+edi*1-0x18]
  4199f3:	cmp    eax,0xbf8ae324
  4199f8:	xchg   ebx,eax
  4199f9:	mov    dh,0x49
  4199fb:	adc    dl,BYTE PTR [ecx]
  4199fd:	pop    eax
  4199fe:	rol    BYTE PTR [edi+0x437216cf],1
  419a04:	imul   eax,DWORD PTR [edi+0x44],0xffffffab
  419a08:	mov    dl,0x91
  419a0a:	push   edi
  419a0b:	aas    
  419a0c:	push   ebp
  419a0d:	ret    
  419a0e:	inc    ebp
  419a0f:	xchg   dh,dh
  419a11:	ins    DWORD PTR es:[edi],dx
  419a12:	and    edi,DWORD PTR [esi+ebx*8+0x30d4bd20]
  419a19:	dec    eax
  419a1a:	pop    esi
  419a1b:	add    bl,cl
  419a1d:	xchg   ebp,eax
  419a1e:	jae    0x419a8a
  419a20:	pop    esi
  419a21:	test   DWORD PTR [ebx-0x12],eax
  419a24:	sahf   
  419a25:	dec    ebx
  419a26:	push   es
  419a27:	jo     0x419a8c
  419a29:	cdq    
  419a2a:	fbstp  TBYTE PTR [eax+0x3d95cf0]
  419a30:	addr16 mov cl,0xe3
  419a33:	dec    ebp
  419a34:	mov    edx,0xae6bed53
  419a39:	and    al,BYTE PTR [eax]
  419a3b:	popa   
  419a3c:	push   ss
  419a3d:	lock xchg ebp,eax
  419a3f:	sbb    al,0xe
  419a41:	test   BYTE PTR [edx+ebx*4],bh
  419a44:	in     eax,dx
  419a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a46:	pop    ebp
  419a47:	jne    0x419a99
  419a49:	mov    WORD PTR [ecx],gs
  419a4b:	sbb    ebx,DWORD PTR [esi+0x4f]
  419a4e:	dec    eax
  419a4f:	js     0x419a6c
  419a51:	test   DWORD PTR [ebp+0x23fd597c],ebp
  419a57:	push   0x60
  419a59:	aas    
  419a5a:	xchg   esp,eax
  419a5b:	inc    edi
  419a5c:	sub    ebp,esi
  419a5e:	cwde   
  419a5f:	sub    BYTE PTR [eax+eax*2-0x2f2b30b],dl
  419a66:	jno    0x419a3b
  419a68:	cmp    al,0x87
  419a6a:	push   0x396964f5
  419a6f:	mov    eax,0xf906243d
  419a74:	jb     0x419ae2
  419a76:	js     0x419aae
  419a78:	cdq    
  419a79:	sbb    eax,0x6e0282f4
  419a7e:	xchg   esi,eax
  419a7f:	mov    ah,0xa8
  419a81:	adc    BYTE PTR [esi+0x4b],ah
  419a84:	push   ss
  419a85:	daa    
  419a86:	or     eax,0xf96830ef
  419a8c:	xchg   bl,bh
  419a8e:	jne    0x419ac9
  419a90:	pop    edx
  419a91:	loopne 0x419a4a
  419a93:	xor    al,0x1b
  419a95:	sti    
  419a96:	(bad)  
  419a97:	push   esi
  419a98:	loope  0x419ab7
  419a9a:	in     al,dx
  419a9b:	or     eax,0x6cdab564
  419aa0:	das    
  419aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aa2:	mov    BYTE PTR [edi+0x5cf76f49],dh
  419aa8:	retf   0x2cc1
  419aab:	ins    DWORD PTR es:[edi],dx
  419aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419aad:	shl    BYTE PTR [edi+0x30],cl
  419ab0:	xor    eax,0x4ebfe180
  419ab5:	add    eax,0xc237ddf4
  419aba:	in     al,0xac
  419abc:	fcmovne st,st(4)
  419abe:	out    0x17,al
  419ac0:	sti    
  419ac1:	rol    esp,cl
  419ac3:	xor    dh,BYTE PTR [ecx+0x17]
  419ac6:	ja     0x419afb
  419ac8:	cs ja  0x419a5a
  419acb:	xchg   edx,eax
  419acc:	test   eax,0x2ae7f56c
  419ad1:	mov    bh,0x0
  419ad3:	cdq    
  419ad4:	cld    
  419ad5:	inc    ecx
  419ad6:	mov    DWORD PTR [ecx],ecx
  419ad8:	sahf   
  419ad9:	retf   0x9584
  419adc:	xchg   ebx,eax
  419add:	sub    edi,0x10
  419ae0:	dec    esi
  419ae1:	xor    edx,DWORD PTR [ebx+0x5a31919a]
  419ae7:	mov    al,0x42
  419ae9:	sub    eax,0xe0ca1fe3
  419aee:	dec    edx
  419aef:	mov    al,0x5e
  419af1:	cli    
  419af2:	lods   al,BYTE PTR ds:[esi]
  419af3:	lds    esi,FWORD PTR [esi]
  419af5:	sub    DWORD PTR [eax-0x7f3725a1],ecx
  419afb:	cdq    
  419afc:	imul   edx,DWORD PTR [esi+0x69],0x8103d743
  419b03:	inc    esi
  419b04:	inc    ebp
  419b05:	inc    ebx
  419b06:	outs   dx,BYTE PTR ds:[esi]
  419b07:	mov    eax,ds:0xadd64112
  419b0c:	push   es
  419b0d:	(bad)  
  419b0e:	cld    
  419b0f:	loopne 0x419b5a
  419b11:	sub    eax,0x2ccc6eb
  419b16:	dec    esi
  419b17:	cmc    
  419b18:	fiadd  WORD PTR [ebp+0x24d7c8ec]
  419b1e:	xor    esi,DWORD PTR [edi]
  419b20:	xor    cl,dl
  419b22:	xchg   esp,eax
  419b23:	(bad)  [ecx-0x47]
  419b26:	mov    ah,0x8d
  419b28:	push   esi
  419b29:	retf   0x5118
  419b2c:	and    al,0x42
  419b2e:	mov    es,WORD PTR [ecx+0x2d]
  419b31:	sbb    DWORD PTR [edi+0x1a89def7],eax
  419b37:	stos   BYTE PTR es:[edi],al
  419b38:	sbb    eax,DWORD PTR [edi+ebp*1]
  419b3b:	sbb    eax,ecx
  419b3d:	loop   0x419b9b
  419b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b40:	sub    BYTE PTR [edi-0x79],ah
  419b43:	xor    DWORD PTR ds:0x51192d56,esi
  419b49:	fs inc eax
  419b4b:	jmp    0xf31bbc47
  419b50:	ja     0x419b67
  419b52:	sub    ecx,ebx
  419b54:	cmp    eax,ecx
  419b56:	fidiv  DWORD PTR [ecx+eiz*1+0x42]
  419b5a:	adc    BYTE PTR [edx+0x371fcb19],ch
  419b60:	jb     0x419bd6
  419b62:	test   BYTE PTR [eax],0x40
  419b65:	lock into 
  419b67:	adc    ebp,DWORD PTR [edx+0x79]
  419b6a:	rol    BYTE PTR [edx],0x75
  419b6d:	cmp    eax,0x16b87c95
  419b72:	and    eax,0xb578a91f
  419b77:	dec    edi
  419b78:	cmp    eax,0xaea9daee
  419b7d:	nop
  419b7e:	jnp    0x419bb9
  419b80:	fadd   st,st(2)
  419b82:	out    0x80,eax
  419b84:	outs   dx,BYTE PTR ds:[esi]
  419b85:	and    DWORD PTR [edi],0xa26a526d
  419b8b:	mov    ch,0x14
  419b8d:	and    BYTE PTR [esi+0x6491ae9f],ah
  419b93:	or     cl,bh
  419b95:	add    BYTE PTR [edx-0xc],bh
  419b98:	ret    0xeeb2
  419b9b:	js     0x419b74
  419b9d:	cmp    BYTE PTR [eax],0x77
  419ba0:	shl    DWORD PTR [edi-0x12265486],0x97
  419ba7:	pop    eax
  419ba8:	imul   ecx,ebx,0xfffffffd
  419bab:	clc    
  419bac:	test   eax,0x1eaa5a8a
  419bb1:	in     eax,0x98
  419bb3:	shl    DWORD PTR [ecx],cl
  419bb5:	jl     0x419b8a
  419bb7:	std    
  419bb8:	inc    ebp
  419bb9:	mov    esi,0xde074324
  419bbe:	pop    ss
  419bbf:	retf   
  419bc0:	and    BYTE PTR [eax-0x67af5b22],0xeb
  419bc7:	or     BYTE PTR [ebx+0x4a],ah
  419bca:	adc    esi,0x45058ad9
  419bd0:	pop    edi
  419bd1:	(bad)  
  419bd2:	sbb    al,0x11
  419bd4:	(bad)  
  419bd5:	sbb    dh,BYTE PTR ds:0xe126115e
  419bdb:	mov    edx,DWORD PTR [edi]
  419bdd:	xor    esp,DWORD PTR [ebp+0x51]
  419be0:	push   es
  419be1:	push   ebx
  419be2:	xlat   BYTE PTR ds:[ebx]
  419be3:	mov    esp,0x61c46d20
  419be8:	fsubr  QWORD PTR [ebp+0x22]
  419beb:	(bad)  
  419bed:	arpl   WORD PTR [eax+0x71d900c3],dx
  419bf3:	jecxz  0x419bc2
  419bf5:	mov    WORD PTR [ebp+0x3d],fs
  419bf8:	push   ecx
  419bf9:	sbb    edx,DWORD PTR [ebp+0xdb41584]
  419bff:	hlt    
  419c00:	inc    eax
  419c01:	push   cs
  419c02:	dec    edi
  419c03:	inc    edi
  419c04:	sub    bh,BYTE PTR [esp+edx*4]
  419c07:	aad    0x89
  419c09:	pop    ds
  419c0a:	lds    eax,FWORD PTR [ebx]
  419c0c:	mov    edx,0x4ed9dd51
  419c11:	sti    
  419c12:	inc    ebx
  419c13:	(bad)  
  419c14:	jecxz  0x419b9f
  419c16:	retf   
  419c17:	pop    ss
  419c18:	mov    al,0xd7
  419c1a:	sahf   
  419c1b:	mov    eax,ds:0xbc3ae9c9
  419c20:	fmul   DWORD PTR [esi]
  419c22:	mov    ds:0x6f0af9f7,al
  419c27:	in     al,dx
  419c28:	sbb    BYTE PTR [eax+edx*8+0x61884916],dl
  419c2f:	mov    ecx,0x9e139ea2
  419c34:	daa    
  419c35:	jg     0x419c6a
  419c37:	fsubr  st(5),st
  419c39:	add    DWORD PTR ds:[edx+0x7c133428],ecx
  419c40:	inc    edi
  419c41:	push   edi
  419c42:	add    al,0x8
  419c45:	je     0x419c85
  419c47:	mov    al,ds:0xce114c84
  419c4c:	(bad)  
  419c4d:	(bad)  
  419c4e:	and    dh,BYTE PTR ds:0x94fdd220
  419c54:	cdq    
  419c55:	dec    esi
  419c56:	and    eax,0x7c1c1f2a
  419c5b:	stos   BYTE PTR es:[edi],al
  419c5c:	sub    BYTE PTR [edx-0x2c],ah
  419c5f:	popf   
  419c60:	leave  
  419c61:	outs   dx,DWORD PTR ds:[esi]
  419c62:	test   WORD PTR [edx],0xa033
  419c67:	cmp    al,bl
  419c69:	sbb    DWORD PTR [ebx+ecx*1+0x7b],edi
  419c6d:	jl     0x419c9d
  419c6f:	rol    DWORD PTR [esi-0x11df9757],1
  419c75:	sahf   
  419c76:	aad    0x20
  419c78:	mov    ah,0xb9
  419c7a:	fimul  WORD PTR [edi]
  419c7c:	fsub   st,st(1)
  419c7e:	inc    eax
  419c7f:	leave  
  419c80:	clc    
  419c81:	iret   
  419c82:	fisttp DWORD PTR [ecx]
  419c84:	xchg   ecx,eax
  419c85:	pop    ebp
  419c86:	jb     0x419c6c
  419c88:	ds or  eax,0xf694c004
  419c8e:	add    DWORD PTR [edi+0x17d56fdf],0x56
  419c95:	mov    al,0xfd
  419c97:	ror    BYTE PTR [esi],1
  419c99:	mov    ds:0xc4884516,eax
  419c9e:	sub    DWORD PTR [eax-0x1e],edx
  419ca1:	ja     0x419ca9
  419ca3:	mov    ecx,0xc816401
  419ca8:	jb     0x419c5e
  419caa:	adc    dl,ch
  419cac:	dec    edi
  419cad:	inc    eax
  419cae:	fcomp  QWORD PTR ds:0x3bcd5b0b
  419cb4:	stos   DWORD PTR es:[edi],eax
  419cb5:	enter  0xdc75,0x80
  419cb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cba:	push   edx
  419cbb:	mov    ebp,0xe15d42dd
  419cc0:	ja     0x419cd0
  419cc2:	stos   BYTE PTR es:[edi],al
  419cc3:	xor    ebx,edx
  419cc5:	jae    0x419d3e
  419cc7:	jne    0x419d1e
  419cc9:	sbb    ecx,ebp
  419ccb:	pop    DWORD PTR [ebx+0x7559add]
  419cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cd2:	push   0x79cd609d
  419cd7:	idiv   BYTE PTR [ebx+0x67e541]
  419cdd:	pop    eax
  419cde:	and    al,0xb
  419ce0:	xor    ebx,DWORD PTR [edx]
  419ce2:	lahf   
  419ce3:	cwde   
  419ce4:	outs   dx,DWORD PTR ds:[esi]
  419ce5:	ret    
  419ce6:	mov    esp,0x39b320d
  419ceb:	xchg   DWORD PTR [ebp+0x38],eax
  419cee:	imul   eax,DWORD PTR [ebp+0x625194ab],0xffffff91
  419cf5:	mov    bh,0xce
  419cf7:	jnp    0x419c9f
  419cf9:	hlt    
  419cfa:	jo     0x419d17
  419cfc:	xor    BYTE PTR [ecx+0x5fd8c4d9],0xa5
  419d03:	ds mov edx,0x7964bb7e
  419d09:	add    DWORD PTR [ebp-0x17],edi
  419d0c:	adc    al,0xb1
  419d0e:	aam    0x8a
  419d10:	sub    ch,ah
  419d12:	dec    ecx
  419d13:	into   
  419d14:	push   eax
  419d15:	pop    es
  419d16:	mov    gs,WORD PTR [ebx+0x6cbed7f1]
  419d1c:	sbb    DWORD PTR [edi+0x5269b9ce],esp
  419d22:	pop    esp
  419d23:	push   0x97f6b5b2
  419d28:	sbb    eax,DWORD PTR ds:0x7600e343
  419d2e:	sbb    eax,DWORD PTR [ebx]
  419d30:	sar    DWORD PTR [edi+0x6ed8708b],cl
  419d36:	inc    BYTE PTR [eax]
  419d38:	inc    edi
  419d39:	pop    ebp
  419d3a:	out    dx,eax
  419d3b:	sub    eax,esp
  419d3d:	dec    esi
  419d3e:	fst    QWORD PTR [ebp+0x73]
  419d41:	xor    ch,BYTE PTR ds:0x67c722e8
  419d47:	aam    0x92
  419d49:	ret    
  419d4a:	xor    BYTE PTR [esi],0xd6
  419d4d:	aaa    
  419d4e:	push   ecx
  419d4f:	or     BYTE PTR [edi+0x29],ah
  419d52:	adc    esp,ebp
  419d54:	shr    edi,1
  419d56:	jnp    0x419dac
  419d58:	gs out dx,al
  419d5a:	sub    dl,BYTE PTR [ebx+eax*8]
  419d5d:	jb     0x419d50
  419d5f:	shl    BYTE PTR ds:0xb2c49cd,cl
  419d65:	and    ch,BYTE PTR [edi-0x5f]
  419d68:	aaa    
  419d69:	xor    DWORD PTR [ebp+0x36],edx
  419d6c:	repz test al,0xc3
  419d6f:	sti    
  419d70:	mov    WORD PTR [ecx-0x54],?
  419d73:	and    DWORD PTR [edi],ebp
  419d75:	xor    BYTE PTR [ebx],dl
  419d77:	ss and ebx,0xffffff89
  419d7b:	push   ecx
  419d7c:	or     BYTE PTR [edx+0x16],ch
  419d7f:	ror    BYTE PTR [esi-0x28f5352],1
  419d85:	jle    0x419db9
  419d87:	mov    dl,0xb3
  419d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d8b:	push   0x558c3bac
  419d90:	scas   eax,DWORD PTR es:[edi]
  419d91:	jmp    0xc312:0x178c44ba
  419d98:	hlt    
  419d99:	outs   dx,BYTE PTR ds:[esi]
  419d9a:	je     0x419d31
  419d9c:	int3   
  419d9d:	shl    bl,cl
  419d9f:	mov    dh,0xaf
  419da1:	inc    edx
  419da2:	mov    al,ds:0xd8ea82c9
  419da7:	fisttp WORD PTR es:[edi-0x3bc3b0c8]
  419dae:	mov    ecx,0xb24d4a5
  419db3:	jp     0x419d90
  419db5:	sahf   
  419db6:	and    BYTE PTR [esi],bh
  419db8:	and    bl,dl
  419dba:	push   ds
  419dbb:	gs jle 0x419d7b
  419dbe:	stos   DWORD PTR es:[edi],eax
  419dbf:	xor    eax,0x1e707f0c
  419dc4:	inc    ebp
  419dc5:	jmp    0xcff4:0xeaaa699f
  419dcc:	adc    BYTE PTR [ebx+0x6920bc4f],cl
  419dd2:	fwait
  419dd3:	scas   al,BYTE PTR es:[edi]
  419dd4:	mov    DWORD PTR [edi],ecx
  419dd6:	sbb    bh,bl
  419dd8:	mov    ecx,0xd74a07b4
  419ddd:	inc    edx
  419dde:	ror    DWORD PTR [ebp-0x1d],1
  419de1:	mov    WORD PTR [edi-0x16],ds
  419de4:	mov    eax,0xea7a065b
  419de9:	jnp    0x419d8a
  419deb:	or     DWORD PTR [eax+0x24],edi
  419dee:	and    eax,0xc370ac71
  419df3:	sahf   
  419df4:	sub    ebx,DWORD PTR [esi]
  419df6:	mov    ds:0x86f773e3,al
  419dfb:	(bad)  
  419dfd:	dec    ecx
  419dfe:	aaa    
  419dff:	rcr    DWORD PTR [edx-0x7c8a2a68],1
  419e05:	stc    
  419e06:	inc    ebp
  419e07:	push   esi
  419e08:	sub    al,0xfa
  419e0a:	ret    
  419e0b:	out    0x88,eax
  419e0d:	mov    eax,ds:0x15cb445f
  419e12:	scas   eax,DWORD PTR es:[edi]
  419e13:	dec    DWORD PTR [esi+0x74881f2f]
  419e19:	aad    0x80
  419e1b:	js     0x419e86
  419e1d:	push   ds
  419e1e:	xchg   DWORD PTR [esi+0x7ea4ed68],esp
  419e24:	jo     0x419dfa
  419e26:	xchg   edx,eax
  419e27:	push   0xffffffbf
  419e29:	inc    esp
  419e2a:	fwait
  419e2b:	dec    edi
  419e2c:	stos   BYTE PTR es:[edi],al
  419e2d:	mov    bh,0x8b
  419e2f:	cmc    
  419e30:	adc    ch,BYTE PTR [ebx]
  419e32:	in     eax,dx
  419e33:	and    al,bl
  419e35:	fadd   QWORD PTR [eax+0x26]
  419e38:	je     0x419e48
  419e3a:	push   edx
  419e3b:	js     0x419e6f
  419e3d:	std    
  419e3e:	mov    esp,0x30b26db6
  419e43:	sbb    eax,0x1f6d076f
  419e48:	adc    DWORD PTR [eax-0x1c17e275],ebx
  419e4e:	movzx  edi,WORD PTR [eax-0x469f0f9]
  419e55:	js     0x419e81
  419e57:	repz sbb DWORD PTR [esi-0x9],ecx
  419e5b:	push   edi
  419e5c:	in     eax,0xf0
  419e5e:	sbb    eax,0xa7c8d657
  419e63:	call   0x6f68:0x952ed008
  419e6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e6b:	fisub  DWORD PTR [eax+0x41]
  419e6e:	pop    ebx
  419e6f:	push   0x70
  419e71:	(bad)  
  419e72:	out    0x17,al
  419e74:	inc    esp
  419e75:	mov    esi,edx
  419e77:	out    dx,al
  419e78:	cs mov dl,0x67
  419e7b:	imul   ecx,DWORD PTR [ecx+0x60],0xffffff8a
  419e7f:	cmp    al,0x39
  419e81:	or     eax,0xac163f4d
  419e86:	std    
  419e87:	sbb    ah,BYTE PTR [ebx]
  419e89:	rcl    BYTE PTR [esp+ecx*1],cl
  419e8c:	test   DWORD PTR [ecx],ecx
  419e8e:	lahf   
  419e8f:	mov    edx,0x744b278f
  419e94:	pop    edx
  419e95:	fisubr WORD PTR [ebp+0x47b37a7f]
  419e9b:	ficomp WORD PTR [esi-0x4f]
  419e9e:	ret    0x530f
  419ea1:	sbb    DWORD PTR [ebp-0xcf0e098],ebp
  419ea7:	cmp    eax,0xd6261207
  419eac:	sbb    dl,BYTE PTR [ebp+0x742ccf2d]
  419eb2:	and    eax,0x3d8c4bdf
  419eb7:	je     0x419e47
  419eb9:	cmp    ebx,DWORD PTR [edx]
  419ebb:	mov    edi,ebx
  419ebd:	or     edx,DWORD PTR [ecx-0x813f091]
  419ec3:	stc    
  419ec4:	jbe    0x419e89
  419ec6:	inc    eax
  419ec7:	pop    ebx
  419ec8:	xchg   ecx,eax
  419ec9:	mov    cl,0xe6
  419ecb:	loope  0x419ea0
  419ecd:	hlt    
  419ece:	inc    ebx
  419ecf:	ins    BYTE PTR es:[edi],dx
  419ed0:	mov    dh,0xbc
  419ed2:	push   ds
  419ed3:	inc    esp
  419ed4:	pop    ecx
  419ed5:	mov    eax,0xc3b40453
  419eda:	pusha  
  419edb:	call   0x7c454db8
  419ee0:	mov    ds,edx
  419ee2:	ret    
  419ee3:	fiadd  WORD PTR [edx-0x7ff773de]
  419ee9:	sti    
  419eea:	xor    BYTE PTR [esi],0x21
  419eed:	xchg   BYTE PTR [eax+edx*4-0x1d1ad0f1],dh
  419ef4:	test   eax,0xe7770701
  419ef9:	fs and esp,edx
  419efc:	iret   
  419efd:	cs ret 0xbd16
  419f01:	retf   
  419f02:	int    0x58
  419f04:	inc    edx
  419f05:	rol    BYTE PTR ds:0x67770cc7,cl
  419f0b:	mov    esi,0x8286cbc6
  419f10:	cmc    
  419f11:	cmp    BYTE PTR [edi-0x52abaddf],cl
  419f17:	lods   al,BYTE PTR ds:[esi]
  419f18:	pop    esp
  419f19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f1a:	xchg   edx,esp
  419f1c:	call   0xe8f:0xda401246
  419f23:	ja     0x419ec1
  419f25:	(bad)  
  419f26:	mov    bh,0x8
  419f28:	mov    al,ds:0x8ade7ae3
  419f2d:	shl    DWORD PTR [edi+0x6a],1
  419f30:	xchg   ebx,eax
  419f31:	adc    bl,0xf3
  419f34:	icebp  
  419f35:	mov    eax,DWORD PTR [ebx-0x27]
  419f38:	sahf   
  419f39:	push   ss
  419f3a:	stos   BYTE PTR es:[edi],al
  419f3b:	imul   esp,eax,0x6a
  419f3e:	addr16 int3 
  419f40:	mov    al,ds:0xc1139a41
  419f45:	js     0x419ee3
  419f47:	imul   ebp,DWORD PTR [ebp+0x46],0x42
  419f4b:	jnp    0x419fb0
  419f4d:	push   ecx
  419f4e:	xchg   edx,eax
  419f4f:	cmc    
  419f50:	sbb    BYTE PTR [eax-0x7f],0x19
  419f54:	or     eax,0xf74fc2ab
  419f59:	and    bh,BYTE PTR [eax-0x45]
  419f5c:	stos   BYTE PTR es:[edi],al
  419f5d:	inc    edi
  419f5e:	xor    DWORD PTR [ecx+0x62],ebx
  419f61:	mov    bh,BYTE PTR [ecx+0x45]
  419f64:	mov    ds:0xaa46f0c7,eax
  419f69:	mov    ecx,0x48ca9c45
  419f6e:	pop    ebx
  419f6f:	jno    0x419fbf
  419f71:	shl    BYTE PTR [edx-0x4a66dc93],0xcb
  419f78:	mov    ebp,0x1e9a7bcd
  419f7d:	and    edi,DWORD PTR [ebx+0x46393a78]
  419f83:	call   0xdf3e2fb0
  419f88:	js     0x419f22
  419f8a:	es push edi
  419f8c:	and    dl,ch
  419f8e:	out    0x53,al
  419f90:	adc    al,BYTE PTR [ebx+0x42]
  419f93:	inc    eax
  419f94:	lock jne 0x419f68
  419f97:	jo     0x419f1b
  419f99:	inc    ecx
  419f9a:	jb     0x419fac
  419f9c:	xor    al,0x52
  419f9e:	pop    ebx
  419f9f:	sbb    ch,BYTE PTR ds:0xa1b543e9
  419fa5:	icebp  
  419fa6:	cmp    esi,DWORD PTR [ebx-0x1bd6fe75]
  419fac:	shl    BYTE PTR [edi+edi*1],0xa8
  419fb0:	lods   eax,DWORD PTR ds:[esi]
  419fb1:	mov    ds:0xc9c77fec,al
  419fb6:	adc    al,0xcb
  419fb8:	les    edi,FWORD PTR [ebp+0x631ba14a]
  419fbe:	push   edi
  419fbf:	sbb    ah,dh
  419fc1:	xchg   ebp,eax
  419fc2:	jg     0x419fd1
  419fc4:	pushf  
  419fc5:	test   al,0x83
  419fc7:	mov    ebp,0x50ad3a58
  419fcc:	ret    0xb4e8
  419fcf:	xor    BYTE PTR [ecx-0x3e3dd14a],bh
  419fd5:	ss jmp 0x419fc8
  419fd8:	jmp    0x2501:0x315f68ec
  419fdf:	mov    ebp,0x9c35370f
  419fe4:	jmp    0x46bc:0x22d0703e
  419feb:	lds    edx,FWORD PTR [ebx+0x72e36313]
  419ff1:	cdq    
  419ff2:	dec    edx
  419ff3:	jmp    0x41a021
  419ff5:	mov    edi,DWORD PTR [eax-0xe]
  419ff8:	xchg   esp,eax
  419ff9:	mov    bh,bh
  419ffb:	mov    cl,0xd2
  419ffd:	and    DWORD PTR [esi-0x5b07a7ba],0xab9c325e
  41a007:	xchg   ebp,eax
  41a008:	fmul   st,st(1)
  41a00a:	adc    ah,bl
  41a00c:	lods   eax,DWORD PTR ds:[esi]
  41a00d:	pop    edi
  41a00e:	push   ss
  41a00f:	(bad)  
  41a011:	in     eax,0x8c
  41a013:	sbb    cl,BYTE PTR [eax+0x8]
  41a016:	loop   0x41a013
  41a018:	push   eax
  41a019:	jnp    0x41a002
  41a01b:	sub    eax,0xd516bbea
  41a020:	sti    
  41a021:	sbb    dx,WORD PTR [edi-0x36ac8131]
  41a028:	mov    cl,0xc9
  41a02a:	xor    bl,BYTE PTR [eax+0x75]
  41a02d:	mov    ds:0x6695fc3e,al
  41a032:	sbb    BYTE PTR [ebx+eax*4-0x65a80ba7],cl
  41a039:	adc    ebp,DWORD PTR [eax-0x7833def8]
  41a03f:	mul    DWORD PTR [esi+0x4b]
  41a042:	and    edx,ebx
  41a044:	sbb    eax,0xf3ac1676
  41a049:	inc    eax
  41a04a:	out    0xee,eax
  41a04c:	cdq    
  41a04d:	dec    BYTE PTR [ebp+ecx*1+0x79]
  41a051:	and    al,0xe4
  41a053:	or     al,0xd7
  41a055:	and    DWORD PTR [edx-0x2e451557],ecx
  41a05b:	mov    ch,0x10
  41a05d:	not    DWORD PTR [edi]
  41a05f:	out    dx,eax
  41a060:	mov    WORD PTR [edi+0x72470662],fs
  41a066:	push   esi
  41a067:	std    
  41a068:	icebp  
  41a069:	jmp    0x41a0d2
  41a06b:	xor    eax,0x73929bbe
  41a070:	rcl    BYTE PTR [edi-0x3a],1
  41a073:	test   eax,0xc6d430fa
  41a078:	cmp    al,0x50
  41a07a:	daa    
  41a07b:	mov    ecx,?
  41a07d:	imul   ecx,DWORD PTR [ebx-0x75],0x4e7aef52
  41a084:	fwait
  41a085:	inc    ecx
  41a086:	inc    BYTE PTR [edx]
  41a088:	pop    eax
  41a089:	stc    
  41a08a:	dec    edx
  41a08b:	mov    ah,0x93
  41a08d:	lahf   
  41a08e:	adc    al,0xaa
  41a090:	cmp    al,BYTE PTR ds:0xeb1f89b9
  41a096:	cs out dx,eax
  41a098:	jmp    0xc185fbf8
  41a09d:	cmp    DWORD PTR [ebx+ecx*1+0x6db39d21],0x6a
  41a0a5:	mov    ebp,0xb3236558
  41a0aa:	add    al,BYTE PTR ds:0x185e11a9
  41a0b0:	bound  edx,QWORD PTR [edi]
  41a0b2:	xchg   ebx,eax
  41a0b3:	pop    esi
  41a0b4:	test   BYTE PTR [edx+edi*4-0xce8d980],0xdd
  41a0bc:	fwait
  41a0bd:	mov    edi,0xc0ad577
  41a0c2:	out    dx,al
  41a0c3:	jne    0x41a0ed
  41a0c5:	mov    ebp,0xdde388e8
  41a0ca:	inc    DWORD PTR [eax+0x70]
  41a0cd:	mov    ebx,0x41426eae
  41a0d2:	mov    ds:0x48561f9,eax
  41a0d7:	mov    esi,0x79a3337d
  41a0dc:	cmp    bl,BYTE PTR ds:0xfd3257da
  41a0e2:	or     dl,ah
  41a0e4:	xor    eax,0xef725211
  41a0e9:	or     eax,0xa9be584f
  41a0ee:	call   0xe079:0x99b19863
  41a0f5:	mov    ecx,0xedf1b413
  41a0fa:	scas   eax,DWORD PTR es:[edi]
  41a0fb:	into   
  41a0fc:	xchg   edx,eax
  41a0fd:	mov    BYTE PTR [edx-0x73d57df6],bh
  41a103:	js     0x41a0a1
  41a105:	add    ecx,edi
  41a107:	sbb    BYTE PTR [ecx-0x30],dl
  41a10a:	pop    ebp
  41a10b:	rol    DWORD PTR [ecx+0x5a19e86b],1
  41a111:	and    eax,0x6c1c2e80
  41a116:	das    
  41a117:	add    al,0xe7
  41a119:	call   0xdcb:0xfbdf4c55
  41a120:	popa   
  41a121:	mov    bh,0x6a
  41a123:	mov    ah,0xf8
  41a125:	gs dec edi
  41a127:	push   es
  41a128:	aam    0xcc
  41a12a:	add    BYTE PTR [edi+0x59],al
  41a12d:	pop    edx
  41a12e:	dec    ebp
  41a12f:	and    DWORD PTR [esp+esi*1+0x0],edx
  41a133:	dec    esi
  41a134:	inc    eax
  41a135:	std    
  41a136:	sub    ecx,ecx
  41a138:	pop    ss
  41a139:	gs pop esp
  41a13b:	add    eax,0xfdb86519
  41a140:	push   ss
  41a141:	test   al,0x44
  41a143:	xchg   edi,eax
  41a144:	push   edi
  41a145:	call   0x8994:0x1f3f7c14
  41a14c:	sbb    al,0x58
  41a14e:	mov    bh,0x5f
  41a150:	push   ecx
  41a151:	dec    ebx
  41a152:	xchg   ecx,eax
  41a153:	adc    ch,BYTE PTR [eax+ecx*8]
  41a156:	and    esp,DWORD PTR [edi]
  41a158:	int    0x6f
  41a15a:	fnstsw WORD PTR [ebp+0xa]
  41a15d:	mov    ah,0x34
  41a15f:	ds (bad) 
  41a161:	cmp    eax,0xef0358a4
  41a166:	mov    dh,BYTE PTR [esp+esi*4]
  41a169:	out    dx,eax
  41a16a:	hlt    
  41a16b:	repz mov esi,0x284f6bf7
  41a171:	data16 sahf 
  41a173:	mov    bl,0x92
  41a175:	jmp    0x2850:0x20bc47fb
  41a17c:	push   ds
  41a17d:	mov    al,ds:0x3b666316
  41a182:	daa    
  41a183:	jle    0x41a18e
  41a185:	mov    ds:0x60dabe91,al
  41a18a:	test   BYTE PTR [eax],al
  41a18c:	cmp    DWORD PTR [ecx+0x7e1c0a93],edx
  41a192:	pop    ecx
  41a193:	mov    ds:0x557e41b5,al
  41a198:	fnsave [ecx+0x1b]
  41a19b:	fistp  DWORD PTR [edx+eiz*1]
  41a19e:	mov    esp,0xdc87ee18
  41a1a3:	cwde   
  41a1a4:	out    dx,al
  41a1a5:	add    esp,DWORD PTR [esi]
  41a1a7:	cmp    edi,DWORD PTR [ecx-0x1c]
  41a1aa:	dec    esp
  41a1ab:	leave  
  41a1ac:	xchg   BYTE PTR [eax-0x3e],al
  41a1af:	jne    0x41a1fc
  41a1b1:	jno    0x41a15b
  41a1b3:	cmp    eax,0x88039866
  41a1b8:	or     eax,0x5062d4c2
  41a1bd:	jmp    0xadb2419e
  41a1c2:	inc    esi
  41a1c3:	push   eax
  41a1c4:	and    BYTE PTR [esi+0x2b90c592],bh
  41a1ca:	mov    eax,ds:0x864bbc40
  41a1cf:	iret   
  41a1d0:	or     eax,0x4744585a
  41a1d5:	outs   dx,DWORD PTR ds:[esi]
  41a1d6:	adc    ebx,0xffffffb7
  41a1d9:	mov    edx,0x4d8bd13b
  41a1de:	hlt    
  41a1df:	mov    DWORD PTR [ebp+0x8],ecx
  41a1e2:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1e5:	je     0x420e5d
  41a1eb:	jmp    0x41c5ad
  41a1f0:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1f3:	mov    edx,DWORD PTR [ebp-0x8]
  41a1f6:	jmp    0x41c583
  41a1fb:	cmp    BYTE PTR [edi-0x66],ch
  41a1fe:	ja     0x41a189
  41a200:	ja     0x41a23d
  41a202:	xchg   ebx,eax
  41a203:	xchg   esp,eax
  41a204:	sub    BYTE PTR [edi],bh
  41a206:	into   
  41a207:	icebp  
  41a208:	arpl   WORD PTR [ebx],si
  41a20a:	into   
  41a20b:	outs   dx,BYTE PTR ds:[esi]
  41a20c:	sbb    al,0x7d
  41a20e:	jp     0x41a21a
  41a210:	pop    edi
  41a211:	jp     0x41a28d
  41a213:	mov    bh,0x7a
  41a215:	ret    0x8450
  41a218:	(bad)  
  41a219:	rcl    dh,cl
  41a21b:	push   eax
  41a21c:	add    BYTE PTR [ebx+0x79],dl
  41a21f:	stos   BYTE PTR es:[edi],al
  41a220:	clc    
  41a221:	xchg   esi,eax
  41a222:	fisub  DWORD PTR [edx]
  41a224:	ds aas 
  41a226:	mov    fs,WORD PTR [ebp+0xda6e771]
  41a22c:	sbb    DWORD PTR cs:[eax+ebp*4],ecx
  41a230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a231:	inc    ebp
  41a232:	pop    eax
  41a233:	sub    eax,0x6290d44d
  41a238:	outs   dx,DWORD PTR ds:[esi]
  41a239:	(bad)  
  41a23b:	(bad)  
  41a23c:	dec    edx
  41a23d:	jmp    0x3968:0x37f0d740
  41a244:	leave  
  41a245:	dec    esi
  41a246:	int    0xf6
  41a248:	xor    ecx,DWORD PTR [ebx]
  41a24a:	pop    edx
  41a24b:	cmp    ebp,DWORD PTR [eax+0x48]
  41a24e:	(bad)  
  41a24f:	out    dx,eax
  41a250:	jne    0x41a1d8
  41a252:	inc    ebx
  41a253:	idiv   bh
  41a255:	jmp    0x61336c6
  41a25a:	jl     0x41a27e
  41a25c:	std    
  41a25d:	imul   eax,DWORD PTR [ebx-0x52],0x7146b299
  41a264:	or     edx,eax
  41a266:	pushf  
  41a267:	push   edx
  41a268:	arpl   di,di
  41a26a:	sub    ch,ch
  41a26c:	inc    esi
  41a26d:	inc    esp
  41a26e:	das    
  41a26f:	and    al,0x88
  41a271:	int3   
  41a272:	jp     0x41a220
  41a274:	out    dx,eax
  41a275:	div    BYTE PTR [esi]
  41a277:	(bad)  [eax+eiz*8]
  41a27a:	cmp    al,0x88
  41a27c:	xchg   ebp,eax
  41a27d:	xchg   BYTE PTR [ebp+0x775a433a],dh
  41a283:	jnp    0x41a20a
  41a285:	test   DWORD PTR [esi],ebx
  41a287:	loop   0x41a237
  41a289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a28a:	test   BYTE PTR ds:0x60d03d00,bh
  41a290:	add    al,0xae
  41a292:	push   esp
  41a293:	inc    esp
  41a294:	ficomp WORD PTR [ecx]
  41a296:	call   0xc0dbed2e
  41a29b:	pop    esi
  41a29c:	ret    0x1821
  41a29f:	cmp    DWORD PTR [edi-0x24],edi
  41a2a2:	pop    esi
  41a2a3:	mov    ah,0x86
  41a2a5:	int    0xc9
  41a2a7:	and    eax,0xbc3ca713
  41a2ac:	xor    BYTE PTR [edi-0x3e],dl
  41a2af:	mov    ecx,0x458ae9b4
  41a2b4:	inc    ecx
  41a2b5:	jmp    0xa1608415
  41a2ba:	jmp    0x8:0x9bbc6a1
  41a2c1:	(bad)  
  41a2c2:	fistp  DWORD PTR [ebp+0x59]
  41a2c5:	push   0xffffffd2
  41a2c7:	push   ecx
  41a2c8:	int3   
  41a2c9:	jmp    0x7f5fb2e9
  41a2ce:	call   0x101c:0x66b19867
  41a2d5:	inc    esp
  41a2d6:	fwait
  41a2d7:	jecxz  0x41a311
  41a2d9:	jne    0x41a2f6
  41a2db:	popf   
  41a2dc:	cmp    dl,al
  41a2de:	mov    edx,0x66ffe709
  41a2e3:	aam    0x33
  41a2e5:	xchg   ecx,eax
  41a2e6:	xor    eax,0x8090814f
  41a2eb:	aam    0xe3
  41a2ed:	add    ebx,ebx
  41a2ef:	cs or  al,0x69
  41a2f2:	mov    WORD PTR [eax-0x59d2d885],?
  41a2f8:	mov    ds:0xf8c47739,eax
  41a2fd:	push   0xc616c9e6
  41a302:	cmp    al,0xcb
  41a304:	call   FWORD PTR [edi]
  41a306:	add    dh,BYTE PTR [ebx-0x6ee2c188]
  41a30c:	call   0x1965b677
  41a311:	add    BYTE PTR [edi-0x30646c7c],ah
  41a317:	sub    bl,bl
  41a319:	mov    ds:0xebd91f9c,al
  41a31e:	cmp    eax,0x9ddcef5f
  41a323:	scas   al,BYTE PTR es:[edi]
  41a324:	out    0x6e,al
  41a326:	adc    esi,0xadb93636
  41a32c:	jmp    0x41a393
  41a32e:	pushf  
  41a32f:	dec    ebp
  41a330:	jnp    0x41a320
  41a332:	pop    eax
  41a333:	mov    bh,0xc1
  41a335:	inc    ebp
  41a336:	pop    esi
  41a337:	jbe    0x41a30e
  41a339:	xchg   BYTE PTR [eax+0x2a44b196],ch
  41a33f:	pop    ss
  41a340:	(bad)
  41a343:	sbb    BYTE PTR [edi+0x5b9ffccc],0xd6
  41a34a:	push   edx
  41a34b:	stos   BYTE PTR es:[edi],al
  41a34c:	push   edi
  41a34d:	mov    cl,0xf2
  41a34f:	sub    edx,ebp
  41a351:	sub    DWORD PTR [edi-0x56],esp
  41a354:	pop    es
  41a355:	sbb    cl,BYTE PTR [esi]
  41a357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a358:	sbb    al,0xd4
  41a35a:	xchg   ebp,eax
  41a35b:	xor    ebp,DWORD PTR [ebp-0x3]
  41a35e:	sub    BYTE PTR [esi+0x6c],ah
  41a361:	iret   
  41a362:	jmp    0x88f5:0xbbf7e15
  41a369:	mov    BYTE PTR [ebx+edx*4-0x36],ah
  41a36d:	fdivr  DWORD PTR [edi-0x38]
  41a370:	jle    0x41a3ad
  41a372:	sub    eax,0x2c5d52a6
  41a377:	add    ch,BYTE PTR [ecx+0x74]
  41a37a:	xor    DWORD PTR [ecx-0x2bce8813],ebp
  41a380:	adc    eax,0x18c2d9b1
  41a385:	and    BYTE PTR [edx],al
  41a387:	and    ax,0xb183
  41a38b:	lock jbe 0x41a332
  41a38e:	ja     0x41a3af
  41a390:	xor    eax,0x4d3348e6
  41a395:	jo     0x41a3d9
  41a397:	or     eax,edi
  41a399:	out    0x38,al
  41a39b:	pusha  
  41a39c:	shr    DWORD PTR [edx+esi*8+0x4034a0b8],cl
  41a3a3:	jnp    0x41a32a
  41a3a5:	pop    edi
  41a3a6:	adc    eax,0xb8ef3d0b
  41a3ab:	dec    ecx
  41a3ac:	rcr    edx,1
  41a3ae:	mov    ebx,0x3ff7342a
  41a3b3:	fsubr  QWORD PTR [eax]
  41a3b5:	ret    
  41a3b6:	test   al,0x75
  41a3b8:	sbb    eax,0xba79c6b0
  41a3bd:	sub    BYTE PTR [edx+0x5f],ah
  41a3c0:	mov    ch,0x1e
  41a3c2:	rcl    BYTE PTR [ecx-0x3c],0xc7
  41a3c6:	popa   
  41a3c7:	mov    eax,ds:0x1f4296d8
  41a3cc:	mov    ecx,0xa9fc4e51
  41a3d1:	clc    
  41a3d2:	push   esi
  41a3d3:	push   esi
  41a3d4:	imul   ecx,ebp,0xb
  41a3d7:	ins    DWORD PTR es:[edi],dx
  41a3d8:	adc    al,0x67
  41a3da:	add    BYTE PTR [ecx-0x5437ebe2],dl
  41a3e0:	ins    DWORD PTR es:[edi],dx
  41a3e1:	pop    ecx
  41a3e2:	int3   
  41a3e3:	xor    esi,DWORD PTR [ecx]
  41a3e5:	ds retf 0x4e99
  41a3e9:	pop    ebx
  41a3ea:	(bad)  
  41a3eb:	lock stos BYTE PTR es:[edi],al
  41a3ed:	sahf   
  41a3ee:	jmp    0xd431:0xcfb805a0
  41a3f5:	ins    BYTE PTR es:[edi],dx
  41a3f6:	push   edi
  41a3f7:	retf   0x470
  41a3fa:	test   BYTE PTR [esi],dl
  41a3fc:	daa    
  41a3fd:	inc    eax
  41a3fe:	stc    
  41a3ff:	mov    esi,0xb2d264ab
  41a404:	jno    0x41a3a9
  41a406:	repz jmp 0x41a412
  41a409:	xchg   edi,eax
  41a40a:	fs dec esp
  41a40c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a40d:	hlt    
  41a40e:	loopne 0x41a3e1
  41a410:	push   ecx
  41a411:	push   edx
  41a412:	xchg   esp,eax
  41a413:	mov    ebx,DWORD PTR [edx+0x1502fbe2]
  41a419:	je     0x41a3fd
  41a41b:	jmp    0x41a45e
  41a41d:	(bad)  
  41a41e:	in     al,dx
  41a41f:	lods   eax,DWORD PTR ds:[esi]
  41a420:	and    DWORD PTR [ebx+0x1c],0x2e
  41a424:	retf   0x2138
  41a427:	xor    al,0xb9
  41a429:	adc    eax,0x7500a194
  41a42e:	and    al,0x44
  41a430:	mov    cl,0x51
  41a432:	nop
  41a433:	ins    BYTE PTR es:[edi],dx
  41a434:	adc    bh,BYTE PTR [edx+esi*1-0x525021c6]
  41a43b:	jne    0x41a46c
  41a43d:	lods   eax,DWORD PTR ds:[esi]
  41a43e:	pop    ss
  41a43f:	nop
  41a440:	mov    cl,0xb9
  41a442:	stc    
  41a443:	mov    ds:0x14c32b22,al
  41a448:	adc    BYTE PTR [ecx-0x4e],bl
  41a44b:	loopne 0x41a4a1
  41a44d:	call   0xa6453fce
  41a452:	mov    WORD PTR [ebx],?
  41a454:	out    dx,al
  41a455:	or     BYTE PTR [edx-0x2e228d85],0x4a
  41a45c:	inc    esi
  41a45d:	cmp    DWORD PTR ds:0x243c71cb,edi
  41a463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a464:	xchg   BYTE PTR [eax+0x1c],al
  41a467:	mov    ds:0x1ea7f0bc,al
  41a46c:	cmp    eax,0x2fb48c7e
  41a471:	push   ds
  41a472:	mov    esi,0xf06e700c
  41a477:	idiv   BYTE PTR [ebp-0xdc3b9a2]
  41a47d:	dec    ebp
  41a47e:	enter  0xb98e,0x82
  41a482:	ja     0x41a4be
  41a484:	jp     0x41a486
  41a486:	sbb    bh,bl
  41a488:	jbe    0x41a44f
  41a48a:	loop   0x41a4d8
  41a48c:	test   DWORD PTR [edi+0x14],0x4aa16f76
  41a493:	mov    ds:0x282f9834,al
  41a498:	into   
  41a499:	cmp    eax,0xfda765f4
  41a49e:	js     0x41a484
  41a4a0:	imul   ebp,DWORD PTR [ebx+0x51],0xe645d5b9
  41a4a7:	sar    BYTE PTR [ebp+0x3a6a0b4d],0x4d
  41a4ae:	retf   
  41a4af:	shl    BYTE PTR [ebp+0x38],cl
  41a4b2:	jb     0x41a4fa
  41a4b4:	xor    DWORD PTR [ebx-0x79],ecx
  41a4b7:	data16 mov al,0xde
  41a4ba:	pop    es
  41a4bb:	sub    edi,DWORD PTR [edi]
  41a4bd:	xchg   edx,eax
  41a4be:	xchg   edi,eax
  41a4bf:	cmp    al,0xf0
  41a4c1:	dec    esi
  41a4c2:	lods   al,BYTE PTR ds:[esi]
  41a4c3:	cmc    
  41a4c4:	or     BYTE PTR [edx],al
  41a4c6:	jmp    0x2ed908e3
  41a4cb:	sbb    BYTE PTR [ebx],dl
  41a4cd:	pusha  
  41a4ce:	or     al,0xc1
  41a4d0:	or     cl,BYTE PTR ds:0xcf29a13b
  41a4d6:	mov    bl,ah
  41a4d8:	mov    eax,ds:0xff3f5bdb
  41a4dd:	cmp    al,0x8e
  41a4df:	(bad)  
  41a4e0:	sub    ebx,DWORD PTR [esi-0x5]
  41a4e3:	inc    ecx
  41a4e4:	test   DWORD PTR [ecx+0x36c58056],edx
  41a4ea:	add    DWORD PTR [eax-0x6e878757],edi
  41a4f0:	cmp    eax,0x1729bfda
  41a4f5:	addr16 retf 0x9402
  41a4f9:	xchg   edx,eax
  41a4fa:	dec    esp
  41a4fb:	jno    0x41a4d9
  41a4fd:	aam    0x49
  41a4ff:	pop    edx
  41a500:	adc    al,0x3
  41a503:	jge    0x41a4e4
  41a505:	mov    eax,0x84ab6193
  41a50a:	mov    dl,0xdd
  41a50c:	add    al,0x78
  41a50e:	push   esp
  41a50f:	sub    DWORD PTR [edi+0x5acb8227],ebp
  41a515:	pop    edi
  41a516:	add    ecx,edx
  41a518:	and    dh,0x5e
  41a51b:	mov    dl,0xa
  41a51d:	(bad)  
  41a51e:	test   DWORD PTR [edx-0x33],esp
  41a521:	arpl   sp,bx
  41a523:	lods   eax,DWORD PTR ds:[esi]
  41a524:	mov    eax,edx
  41a526:	ret    
  41a527:	sbb    eax,0x6390d478
  41a52c:	sbb    DWORD PTR [ecx-0x2],eax
  41a52f:	add    al,0xdd
  41a531:	in     al,0xcb
  41a533:	cld    
  41a534:	xor    eax,0x8e563e20
  41a539:	gs xor al,0x5e
  41a53c:	xor    DWORD PTR [ecx-0x45],edi
  41a53f:	js     0x41a4f1
  41a541:	ffreep st(3)
  41a543:	imul   ebp,DWORD PTR [ecx-0x6044a0df],0x2c
  41a54a:	inc    ebx
  41a54b:	sbb    eax,0x3a1b8ada
  41a550:	sbb    BYTE PTR [ebx-0x26],dl
  41a553:	(bad)  
  41a554:	int3   
  41a555:	mov    esp,0x9fb44fe1
  41a55a:	call   0xb19e:0x1deb9557
  41a561:	add    eax,0x8c544432
  41a566:	xchg   DWORD PTR [edx-0x683159a1],ebp
  41a56c:	std    
  41a56d:	bound  ecx,QWORD PTR [esi]
  41a56f:	add    bh,BYTE PTR [eax+eax*4+0x5f]
  41a573:	pop    ss
  41a574:	scas   eax,DWORD PTR es:[edi]
  41a575:	cmc    
  41a576:	in     al,0x17
  41a578:	lods   al,BYTE PTR ds:[esi]
  41a579:	add    DWORD PTR [ebx+0x55afbcd0],edx
  41a57f:	xor    BYTE PTR [ecx-0x306b0d80],bh
  41a585:	dec    eax
  41a586:	lds    edi,FWORD PTR [eax-0x52]
  41a589:	mov    edx,0xdafbe3c7
  41a58e:	and    ebx,DWORD PTR [edx-0x51b85e00]
  41a594:	pusha  
  41a595:	add    BYTE PTR [eax-0x6c233721],bl
  41a59b:	fmul   QWORD PTR [edx]
  41a59d:	jmp    0x41a54c
  41a59f:	pushf  
  41a5a0:	pop    es
  41a5a1:	ja     0x41a566
  41a5a3:	push   DWORD PTR [esi]
  41a5a5:	mov    al,0x93
  41a5a7:	add    al,0x9c
  41a5a9:	cli    
  41a5aa:	out    dx,eax
  41a5ab:	push   es
  41a5ac:	es mov bl,0x39
  41a5af:	pop    edi
  41a5b0:	sar    BYTE PTR [ecx-0x40],cl
  41a5b3:	iret   
  41a5b4:	push   esp
  41a5b5:	push   esp
  41a5b6:	push   ds
  41a5b7:	das    
  41a5b8:	jno    0x41a566
  41a5ba:	mov    eax,0x62d4badd
  41a5bf:	es sbb edx,esi
  41a5c2:	pminsw mm2,QWORD PTR [ecx]
  41a5c5:	ret    
  41a5c6:	leave  
  41a5c7:	cmp    BYTE PTR [eax],ch
  41a5c9:	sbb    BYTE PTR ds:0x64ee4601,dh
  41a5cf:	dec    esp
  41a5d0:	push   eax
  41a5d1:	xor    DWORD PTR [ecx+0x1f76b373],ebp
  41a5d7:	repnz or al,0xf7
  41a5da:	popa   
  41a5db:	(bad)  
  41a5dc:	xor    al,0x20
  41a5de:	jl     0x41a566
  41a5e0:	mov    edi,0x9948f715
  41a5e5:	lahf   
  41a5e6:	mov    eax,ds:0x50e23de6
  41a5eb:	xchg   esi,eax
  41a5ec:	xchg   edx,eax
  41a5ed:	cmc    
  41a5ee:	xchg   ecx,eax
  41a5ef:	push   ebp
  41a5f0:	cmp    esp,DWORD PTR [esi-0x38]
  41a5f3:	inc    ecx
  41a5f4:	repnz mov edi,DWORD PTR [ebp+0x4f735c10]
  41a5fb:	fs into 
  41a5fd:	aam    0x35
  41a5ff:	mov    esi,ss
  41a601:	test   BYTE PTR [eax+0x49],bh
  41a604:	mov    al,0xef
  41a606:	inc    esi
  41a607:	xchg   ecx,eax
  41a608:	(bad)  
  41a609:	mov    al,0x38
  41a60b:	xchg   esp,eax
  41a60c:	xchg   esp,eax
  41a60d:	push   ebx
  41a60e:	jp     0x41a64f
  41a610:	mov    bh,0x45
  41a612:	inc    eax
  41a613:	fwait
  41a614:	dec    ecx
  41a615:	sub    BYTE PTR [ecx-0x136931cc],0xf
  41a61c:	je     0x41a670
  41a61e:	ds pushf 
  41a620:	pushf  
  41a621:	arpl   WORD PTR [ecx],sp
  41a623:	test   BYTE PTR [eax],0xda
  41a626:	or     BYTE PTR [eax],dh
  41a628:	pop    esp
  41a629:	out    dx,eax
  41a62a:	out    dx,al
  41a62b:	loopne 0x41a6a3
  41a62d:	xchg   esi,eax
  41a62e:	xor    al,0x84
  41a630:	mul    BYTE PTR [edx+0x35]
  41a633:	gs push edi
  41a635:	xor    dl,ah
  41a637:	mov    edx,0x5addd64c
  41a63c:	pop    ss
  41a63d:	stc    
  41a63e:	adc    BYTE PTR [esi-0x80435e6],ch
  41a644:	test   eax,0x80ed1712
  41a649:	mov    dl,BYTE PTR [ebp-0x49]
  41a64c:	fwait
  41a64d:	enter  0xf9f0,0x50
  41a651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a652:	pusha  
  41a653:	jae    0x41a607
  41a655:	xchg   ebx,eax
  41a656:	inc    ebp
  41a657:	daa    
  41a658:	repnz (bad) 
  41a65a:	retf   
  41a65b:	sbb    bh,BYTE PTR ds:0x213879d8
  41a661:	retf   
  41a662:	or     dl,BYTE PTR [esi+edi*8+0x61de0194]
  41a669:	gs in  al,dx
  41a66b:	shl    BYTE PTR [ebx+0x417914d4],1
  41a671:	mov    edi,0x66934dfc
  41a676:	or     ecx,DWORD PTR [edx+0x18e6b749]
  41a67c:	add    dh,BYTE PTR [ecx]
  41a67e:	xadd   BYTE PTR [ebx],al
  41a681:	push   esi
  41a682:	popf   
  41a683:	adc    bh,BYTE PTR [edx+0x171ee6d7]
  41a689:	lods   eax,DWORD PTR ds:[esi]
  41a68a:	cmp    eax,0x26996787
  41a68f:	or     ebx,ebx
  41a691:	sbb    dl,BYTE PTR [eax-0x51]
  41a694:	pop    ebp
  41a695:	ds popf 
  41a697:	sub    al,ch
  41a699:	and    DWORD PTR [edx-0xd],0x57
  41a69d:	adc    eax,0xa17cfe00
  41a6a2:	cmp    al,0x2b
  41a6a4:	cmp    edi,esi
  41a6a6:	in     eax,dx
  41a6a7:	je     0x41a6f1
  41a6a9:	dec    edi
  41a6aa:	(bad)  
  41a6ab:	stos   DWORD PTR es:[edi],eax
  41a6ac:	sbb    al,0x3f
  41a6ae:	sub    eax,0xa5bf4cca
  41a6b3:	jo     0x41a6c6
  41a6b5:	fild   QWORD PTR [esp+eax*4-0x15]
  41a6b9:	cmp    ah,BYTE PTR [edx-0x3e]
  41a6bc:	jne    0x41a69d
  41a6be:	mov    ah,BYTE PTR [ecx+0x65]
  41a6c1:	mov    BYTE PTR [esi-0x33],dl
  41a6c4:	je     0x41a6b6
  41a6c6:	xchg   ecx,eax
  41a6c7:	and    edi,edi
  41a6c9:	in     al,0xc4
  41a6cb:	xchg   esp,eax
  41a6cc:	mov    ebp,0x4a90c65d
  41a6d1:	aas    
  41a6d2:	jo     0x41a6b0
  41a6d4:	push   ds
  41a6d5:	jecxz  0x41a724
  41a6d7:	adc    BYTE PTR [ebx+0x476233ca],cl
  41a6dd:	xor    BYTE PTR [ebx],ah
  41a6df:	jl     0x41a698
  41a6e1:	sub    ebp,ecx
  41a6e3:	jmp    0xfbc9:0x24139209
  41a6ea:	sbb    eax,DWORD PTR [eax]
  41a6ec:	inc    esp
  41a6ed:	sbb    edx,edx
  41a6ef:	sub    BYTE PTR [edx-0x26],0xa0
  41a6f3:	sahf   
  41a6f4:	(bad)  
  41a6f6:	popf   
  41a6f7:	loopne 0x41a6c4
  41a6f9:	lods   eax,DWORD PTR ds:[esi]
  41a6fa:	pop    ebx
  41a6fb:	pop    ds
  41a6fc:	xor    al,0x1
  41a6fe:	and    DWORD PTR [ebx+0x46],ebx
  41a701:	repnz sub dl,BYTE PTR [esi+0x7ba3f129]
  41a708:	or     DWORD PTR [eax],ebx
  41a70a:	scas   al,BYTE PTR es:[edi]
  41a70b:	cmp    al,0xfe
  41a70d:	sbb    ecx,0x4a
  41a710:	mov    eax,ds:0xd2b431c0
  41a715:	out    0x70,eax
  41a717:	push   ds
  41a718:	and    ah,BYTE PTR [ebx+0x23]
  41a71b:	jg     0x41a74a
  41a71d:	jp     0x41a775
  41a71f:	arpl   WORD PTR [edx-0x10c6916b],bp
  41a725:	popa   
  41a726:	shl    BYTE PTR [ebx],cl
  41a728:	mov    ds:0xfea691b5,eax
  41a72d:	adc    dh,bh
  41a72f:	add    DWORD PTR [edi+ebx*8+0x4aa6abc],eax
  41a736:	rcr    DWORD PTR [ebp-0x3ce56e8d],1
  41a73c:	xchg   edx,eax
  41a73d:	loopne 0x41a6fe
  41a73f:	addr16 pop ebp
  41a741:	jno    0x41a6ec
  41a743:	or     esi,DWORD PTR [ecx]
  41a745:	push   0x3ad5dbc9
  41a74a:	push   edi
  41a74b:	xor    bl,ch
  41a74d:	xchg   ebx,eax
  41a74e:	sbb    edx,DWORD PTR [eax-0x6c523221]
  41a754:	pop    ss
  41a755:	or     DWORD PTR [eax+0x1c8d03da],ecx
  41a75b:	ds or  esp,ebp
  41a75e:	lods   al,BYTE PTR ds:[esi]
  41a75f:	mov    esp,0x7a63db57
  41a764:	std    
  41a765:	cdq    
  41a766:	jno    0x41a7b2
  41a768:	push   ebx
  41a769:	push   es
  41a76a:	pop    esp
  41a76b:	cmc    
  41a76c:	in     al,0xd8
  41a76e:	jb     0x41a746
  41a770:	pusha  
  41a771:	sbb    DWORD PTR [edi-0x77232857],ebx
  41a777:	stos   DWORD PTR es:[edi],eax
  41a778:	sbb    ch,al
  41a77a:	or     eax,0xd254e3a3
  41a77f:	fwait
  41a780:	dec    ebp
  41a781:	sub    esi,edx
  41a783:	bound  eax,QWORD PTR [ebx+ebx*8]
  41a786:	or     ecx,esi
  41a788:	mov    bl,0x37
  41a78a:	gs out 0xa6,al
  41a78d:	test   DWORD PTR [edi],0xb964e2e
  41a793:	mov    ch,0x99
  41a795:	xchg   ah,dl
  41a797:	retf   
  41a798:	ins    DWORD PTR es:[edi],dx
  41a799:	mov    ebp,0x9dc4db2c
  41a79e:	jg     0x41a799
  41a7a0:	pushf  
  41a7a1:	jbe    0x41a7ce
  41a7a3:	pushf  
  41a7a4:	xor    al,BYTE PTR [ebx-0x42]
  41a7a7:	std    
  41a7a8:	je     0x41a7c5
  41a7aa:	das    
  41a7ab:	or     al,0xcf
  41a7ad:	in     al,dx
  41a7ae:	out    dx,al
  41a7af:	call   0xaad54616
  41a7b4:	cdq    
  41a7b5:	stc    
  41a7b6:	ret    
  41a7b7:	inc    edx
  41a7b8:	je     0x41a75b
  41a7ba:	fistp  DWORD PTR [esi+0x14951056]
  41a7c0:	lods   eax,DWORD PTR ds:[esi]
  41a7c2:	ror    DWORD PTR [ecx+0x61],1
  41a7c5:	repz into 
  41a7c7:	xor    BYTE PTR [edi],dh
  41a7c9:	mov    esi,0x5da33f48
  41a7ce:	push   ss
  41a7cf:	stos   WORD PTR es:[di],ax
  41a7d2:	pop    eax
  41a7d3:	frstor [ecx-0x9]
  41a7d6:	mov    dl,ah
  41a7d8:	popa   
  41a7d9:	push   es
  41a7da:	call   0xc883:0xd67ca509
  41a7e1:	pushf  
  41a7e2:	test   al,0x25
  41a7e4:	imul   edi,DWORD PTR [edi+0x530600c6],0x0
  41a7eb:	test   ebp,ebx
  41a7ed:	xchg   ebx,eax
  41a7ee:	lds    edi,FWORD PTR [edi]
  41a7f0:	scas   eax,DWORD PTR es:[edi]
  41a7f1:	iret   
  41a7f2:	sub    al,0x84
  41a7f4:	aam    0x5f
  41a7f6:	ss icebp 
  41a7f8:	pop    ebx
  41a7f9:	loop   0x41a85a
  41a7fb:	stos   DWORD PTR es:[edi],eax
  41a7fc:	(bad)  
  41a7fd:	xchg   esp,eax
  41a7fe:	jnp    0x41a85e
  41a800:	push   esi
  41a801:	pop    ds
  41a802:	jne    0x41a82b
  41a804:	jl     0x41a817
  41a806:	jg     0x41a84c
  41a808:	in     al,0xbf
  41a80a:	and    dl,BYTE PTR [edx-0x73]
  41a80d:	add    bl,ah
  41a80f:	scas   eax,DWORD PTR es:[edi]
  41a810:	mov    dl,0x17
  41a812:	lods   eax,DWORD PTR ds:[esi]
  41a813:	nop
  41a814:	out    0xa8,al
  41a816:	fsubr  QWORD PTR [ebx+0x6f29e7e4]
  41a81c:	bound  esp,QWORD PTR [edx]
  41a81e:	imul   eax,DWORD PTR [edi+esi*2+0x36862e9d],0xffffffd5
  41a826:	popa   
  41a827:	mov    ds:0x6b6f809d,eax
  41a82c:	push   edi
  41a82d:	pop    ss
  41a82e:	and    DWORD PTR [ebx],edi
  41a830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a831:	push   edx
  41a832:	pop    edx
  41a833:	cmp    ah,BYTE PTR [eax]
  41a835:	lock jmp 0x4cfdbef3
  41a83b:	jns    0x41a893
  41a83d:	or     esp,DWORD PTR [eax-0x4]
  41a840:	dec    ebx
  41a841:	and    ebx,DWORD PTR [eax-0x3a43b30d]
  41a847:	lods   al,BYTE PTR ds:[esi]
  41a848:	dec    ecx
  41a849:	stc    
  41a84a:	mov    ebx,0x67218084
  41a84f:	pop    ebp
  41a850:	mov    edi,0x2a51daff
  41a855:	nop
  41a856:	mov    esp,0xce9e7dfd
  41a85b:	xor    ebp,DWORD PTR [ebx+esi*4-0x7899a36c]
  41a862:	xor    esp,DWORD PTR [eax]
  41a864:	std    
  41a865:	cmp    ebp,DWORD PTR [ecx-0x65025387]
  41a86b:	jmp    0x4060a102
  41a870:	add    eax,0x66b3c1cf
  41a875:	inc    DWORD PTR [eax-0x539bbe71]
  41a87b:	pop    ss
  41a87c:	stos   BYTE PTR es:[edi],al
  41a87d:	adc    eax,DWORD PTR [ecx-0x78]
  41a880:	dec    esp
  41a881:	fisub  DWORD PTR [eax]
  41a884:	ss ds mov esi,ebp
  41a888:	retf   
  41a889:	stos   BYTE PTR es:[edi],al
  41a88a:	xchg   dh,bl
  41a88c:	xchg   esi,eax
  41a88d:	jbe    0x41a8ea
  41a88f:	in     al,dx
  41a890:	jo     0x41a909
  41a892:	ja     0x41a89a
  41a894:	inc    ebx
  41a895:	into   
  41a896:	add    al,0xe9
  41a898:	mov    edi,0x203632c3
  41a89d:	mov    eax,ds:0x4106a191
  41a8a2:	jae    0x41a8ef
  41a8a4:	xor    dh,BYTE PTR [esi-0x32]
  41a8a7:	jl     0x41a897
  41a8a9:	into   
  41a8aa:	push   ss
  41a8ab:	fs and eax,0x68ce8359
  41a8b1:	daa    
  41a8b2:	sbb    eax,0xa1b55127
  41a8b7:	repnz inc edi
  41a8b9:	gs mov eax,0x3904218f
  41a8bf:	jb     0x41a842
  41a8c1:	sti    
  41a8c2:	jg     0x41a8bc
  41a8c4:	pusha  
  41a8c5:	mov    al,BYTE PTR [eax]
  41a8c7:	cmc    
  41a8c8:	adc    cl,BYTE PTR [eax-0x43]
  41a8cb:	popa   
  41a8cc:	dec    ebx
  41a8cd:	(bad)  
  41a8ce:	in     al,0x40
  41a8d0:	jmp    0x6087:0x7b7bd5
  41a8d7:	pop    edx
  41a8d8:	fdiv   DWORD PTR [eax-0x4a]
  41a8db:	or     al,0xd3
  41a8dd:	dec    eax
  41a8de:	sti    
  41a8df:	test   al,0x62
  41a8e1:	and    DWORD PTR [eax-0x63],ebx
  41a8e4:	lods   eax,DWORD PTR ds:[esi]
  41a8e5:	or     ah,BYTE PTR [ebx+0x77]
  41a8e8:	out    dx,al
  41a8e9:	jge    0x41a8a3
  41a8eb:	retf   
  41a8ec:	jae    0x41a930
  41a8ee:	sub    eax,0x45a77c1f
  41a8f3:	fwait
  41a8f4:	(bad)  
  41a8f5:	ds pop ds
  41a8f7:	stc    
  41a8f8:	enter  0x28a,0xf4
  41a8fc:	dec    edi
  41a8fd:	xchg   BYTE PTR [edi-0x6d],bl
  41a900:	sub    DWORD PTR [ebx+0x27],0xffffffbe
  41a904:	in     eax,0x80
  41a906:	out    0x84,al
  41a908:	push   ss
  41a909:	add    ah,BYTE PTR [ecx]
  41a90b:	cmp    ebx,DWORD PTR [ecx]
  41a90d:	aas    
  41a90e:	jne    0x41a8e8
  41a910:	fst    DWORD PTR ds:0x2353f229
  41a916:	dec    edx
  41a917:	mov    bh,0xef
  41a919:	je     0x41a8b1
  41a91b:	mov    ds:0x4d75e437,al
  41a920:	cmp    DWORD PTR [ebp+0x2f],ebp
  41a923:	and    bl,bl
  41a925:	pop    esi
  41a926:	jmp    0x41a968
  41a928:	mov    ds:0xb4735f13,al
  41a92d:	dec    esi
  41a92e:	sub    bh,BYTE PTR [edx+0x74]
  41a931:	call   0x8e50:0x44c2b3f0
  41a938:	pop    esi
  41a939:	lahf   
  41a93a:	inc    ecx
  41a93b:	jl     0x41a97d
  41a93d:	in     al,dx
  41a93e:	pop    esp
  41a93f:	int3   
  41a940:	adc    DWORD PTR [esi-0x2a],0x41635d9a
  41a947:	sbb    dl,BYTE PTR [ebx]
  41a949:	cdq    
  41a94a:	repz push ds
  41a94c:	add    BYTE PTR [edx+edx*8],bl
  41a94f:	mov    ah,0xa
  41a951:	outs   dx,DWORD PTR ds:[esi]
  41a952:	push   ss
  41a953:	sbb    BYTE PTR [ecx-0x71],0xce
  41a957:	add    al,0xc3
  41a959:	or     BYTE PTR [esi],bh
  41a95b:	popa   
  41a95c:	mov    bh,0x58
  41a95e:	sub    BYTE PTR [ecx],ch
  41a960:	push   ecx
  41a961:	inc    ecx
  41a962:	std    
  41a963:	xlat   BYTE PTR ds:[ebx]
  41a964:	sub    eax,DWORD PTR [edx]
  41a966:	jmp    DWORD PTR ss:0xd51756dd
  41a96d:	sbb    al,BYTE PTR [edi+0x6a]
  41a970:	into   
  41a971:	jae    0x41a96d
  41a973:	fstp   QWORD PTR [esi-0x76]
  41a976:	inc    eax
  41a977:	adc    BYTE PTR [edi],al
  41a979:	sbb    DWORD PTR [edx],edi
  41a97b:	mov    DWORD PTR [ecx],esp
  41a97d:	int3   
  41a97e:	add    edi,esi
  41a980:	jmp    0xc53d:0x5103cc75
  41a987:	cmp    dh,bh
  41a989:	sar    DWORD PTR [esi],1
  41a98b:	inc    ebp
  41a98c:	je     0x41a948
  41a98e:	cdq    
  41a98f:	neg    ch
  41a991:	imul   eax,eax,0xda28872b
  41a997:	jmp    0x89b6cb90
  41a99c:	and    eax,0x1c94c1f8
  41a9a2:	cld    
  41a9a3:	aaa    
  41a9a4:	out    0x8b,eax
  41a9a6:	outs   dx,BYTE PTR ds:[esi]
  41a9a7:	xchg   edx,eax
  41a9a8:	mov    ebp,0x9c8f628b
  41a9ad:	add    BYTE PTR [eax+ebp*2-0x6eb2e9f4],0x3
  41a9b5:	sbb    esp,ebx
  41a9b7:	sub    eax,0x3337b879
  41a9bc:	mov    bh,0xfe
  41a9be:	jae    0x41a9c3
  41a9c0:	sbb    eax,0x11d9105d
  41a9c5:	push   ds
  41a9c6:	bound  edx,QWORD PTR [ecx-0x3782fb26]
  41a9cc:	pusha  
  41a9cd:	cmp    cl,BYTE PTR [esi+0x15bec285]
  41a9d3:	test   BYTE PTR [edx],bl
  41a9d5:	mov    bl,0x6d
  41a9d7:	call   FWORD PTR [ecx+0x7e994080]
  41a9dd:	pop    ds
  41a9de:	jp     0x41a9d6
  41a9e0:	push   ss
  41a9e1:	inc    edi
  41a9e2:	pop    ebx
  41a9e3:	cmp    al,0xec
  41a9e5:	xor    al,0xdb
  41a9e7:	retf   
  41a9e8:	js     0x41aa4c
  41a9ea:	and    BYTE PTR [ebp-0x39],bh
  41a9ed:	adc    DWORD PTR ds:0xc8db25f6,edx
  41a9f3:	iret   
  41a9f4:	and    BYTE PTR [ecx+esi*8-0xc],cl
  41a9f8:	fdivr  QWORD PTR [ebx-0x7f9f9df5]
  41a9fe:	mov    BYTE PTR [esi-0x37992f48],dh
  41aa04:	rcr    DWORD PTR [ecx],0x4e
  41aa07:	pusha  
  41aa08:	dec    eax
  41aa09:	sub    eax,0xbb94aa45
  41aa0e:	mov    al,0x61
  41aa10:	stos   DWORD PTR es:[edi],eax
  41aa11:	mov    edi,0x58224f1d
  41aa16:	cwde   
  41aa17:	dec    edx
  41aa18:	(bad)  
  41aa19:	dec    BYTE PTR [edx+0x6fac5fdf]
  41aa1f:	pop    es
  41aa20:	mov    WORD PTR [ebx+eiz*1-0x88da756],fs
  41aa27:	cmc    
  41aa28:	xchg   ebp,eax
  41aa29:	retf   0xdfc8
  41aa2c:	cwde   
  41aa2d:	retf   
  41aa2e:	xchg   ecx,eax
  41aa2f:	adc    eax,0x2d90148b
  41aa34:	add    eax,0x9a4bd4ab
  41aa39:	icebp  
  41aa3a:	pop    ecx
  41aa3b:	ins    BYTE PTR es:[edi],dx
  41aa3c:	rcr    ah,0xd0
  41aa3f:	(bad)  
  41aa40:	aas    
  41aa41:	or     DWORD PTR [esi+0x28],0x20
  41aa45:	ja     0x41aa0f
  41aa47:	adc    esi,esi
  41aa49:	int3   
  41aa4a:	inc    eax
  41aa4b:	inc    edx
  41aa4c:	sbb    bh,BYTE PTR [eax+eiz*4+0x19afa0ec]
  41aa53:	test   DWORD PTR [edi],eax
  41aa55:	clc    
  41aa56:	ss sti 
  41aa58:	mov    dl,0x10
  41aa5a:	popfw  
  41aa5c:	into   
  41aa5d:	out    dx,al
  41aa5e:	out    0x4d,eax
  41aa60:	push   0x3f
  41aa62:	retf   
  41aa63:	and    eax,0x8d626f70
  41aa68:	sbb    ch,bh
  41aa6a:	mov    ah,0x42
  41aa6c:	int    0x49
  41aa6e:	push   edx
  41aa6f:	loope  0x41aa15
  41aa71:	test   al,0x5c
  41aa73:	mov    bh,BYTE PTR [ecx+0x16]
  41aa76:	rcr    DWORD PTR [ecx+0x32],cl
  41aa79:	xchg   ebx,eax
  41aa7a:	scas   al,BYTE PTR es:[edi]
  41aa7b:	cld    
  41aa7c:	cmp    ch,bl
  41aa7e:	sbb    al,bl
  41aa80:	(bad)  
  41aa81:	pop    ds
  41aa82:	jmp    0xa6da:0x51e1cfae
  41aa89:	dec    esp
  41aa8a:	and    esi,edx
  41aa8c:	mov    ch,0x96
  41aa8e:	xor    al,0x45
  41aa90:	sbb    ecx,DWORD PTR [ebp+0x5a]
  41aa93:	sbb    ecx,DWORD PTR [ebp-0x2c]
  41aa96:	mov    BYTE PTR [eax-0x5367e795],cl
  41aa9c:	mov    esi,0xaf4c7b23
  41aaa1:	out    dx,al
  41aaa2:	push   eax
  41aaa3:	enter  0x4d3c,0xd8
  41aaa7:	(bad)  
  41aaa8:	mov    esp,0x592437bc
  41aaad:	ss sbb esp,DWORD PTR es:[ecx-0x28]
  41aab2:	push   ebp
  41aab3:	jbe    0x41ab1e
  41aab5:	aad    0x2a
  41aab7:	les    edi,FWORD PTR [esi]
  41aab9:	pusha  
  41aaba:	jmp    0xd025:0x6187f2cb
  41aac1:	jmp    0xd702:0xcf3a1c1f
  41aac8:	jo     0x41aa9b
  41aaca:	inc    ecx
  41aacb:	or     ch,BYTE PTR [esi-0x1]
  41aace:	fs and bh,bh
  41aad1:	dec    ecx
  41aad2:	xchg   edi,eax
  41aad3:	or     esp,esp
  41aad5:	ret    
  41aad6:	and    DWORD PTR [edi-0x558e8f82],edi
  41aadc:	xor    al,0x24
  41aade:	fnstenv [eax]
  41aae0:	ss jmp 0x41aa6b
  41aae3:	rcl    BYTE PTR [ebx],0x8c
  41aae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aae7:	push   ebp
  41aae8:	idiv   BYTE PTR cs:[ebx-0x52]
  41aaec:	add    al,0x31
  41aaee:	mov    bh,0xa6
  41aaf0:	out    0x22,eax
  41aaf2:	sub    DWORD PTR [edx-0x45],ecx
  41aaf5:	popf   
  41aaf6:	mov    esp,0xa5912ef7
  41aafb:	dec    esi
  41aafc:	loop   0x41aa95
  41aafe:	cwde   
  41aaff:	and    DWORD PTR [edi-0x20],ebx
  41ab02:	mov    dl,0xd5
  41ab04:	ret    
  41ab05:	xor    DWORD PTR [ebx],edx
  41ab07:	es test eax,0x76f527dd
  41ab0d:	dec    eax
  41ab0e:	rol    BYTE PTR [ecx-0x3902a99e],1
  41ab14:	fisttp QWORD PTR [esi+esi*1+0x60ec3698]
  41ab1b:	xchg   ebp,eax
  41ab1c:	cmc    
  41ab1d:	aam    0xcf
  41ab1f:	gs out dx,al
  41ab21:	mov    ebp,DWORD PTR [eax]
  41ab23:	out    0x8,al
  41ab25:	mov    ecx,DWORD PTR [edx]
  41ab27:	xchg   bh,al
  41ab29:	fisubr DWORD PTR [eax]
  41ab2b:	fist   WORD PTR [ecx-0x4a]
  41ab2e:	xchg   ebx,eax
  41ab2f:	adc    bl,bh
  41ab31:	jmp    0x41ab73
  41ab33:	mov    ebp,DWORD PTR [ecx]
  41ab35:	out    0x8a,al
  41ab37:	sbb    BYTE PTR [edx],dh
  41ab39:	dec    edx
  41ab3a:	arpl   WORD PTR [eax+eax*8],cx
  41ab3d:	ds js  0x41ab88
  41ab40:	sbb    eax,0xb8ea0148
  41ab45:	sti    
  41ab46:	test   al,0x42
  41ab48:	scas   eax,DWORD PTR es:[edi]
  41ab49:	int    0xee
  41ab4b:	(bad)  
  41ab4c:	fmulp  st(0),st
  41ab4e:	fistp  WORD PTR [ebp+0x16]
  41ab51:	in     eax,0x23
  41ab53:	mov    esi,0x6a7d602a
  41ab58:	mov    ds:0x6e0b43ae,eax
  41ab5d:	(bad)  
  41ab5e:	mov    dh,0x1f
  41ab60:	push   esi
  41ab61:	xchg   esp,eax
  41ab62:	dec    edi
  41ab63:	sti    
  41ab64:	add    DWORD PTR [edx+0x4f2dd7a],edi
  41ab6a:	in     al,0x49
  41ab6c:	cdq    
  41ab6d:	mov    dh,0xa3
  41ab6f:	test   eax,0x9ef591d4
  41ab74:	retf   0x365a
  41ab77:	jo     0x41abb9
  41ab79:	lahf   
  41ab7a:	cmp    cl,dh
  41ab7c:	inc    ebp
  41ab7d:	sar    eax,0x57
  41ab80:	sub    al,0x82
  41ab82:	popa   
  41ab83:	cmp    DWORD PTR [ebx],edi
  41ab85:	or     edx,eax
  41ab87:	mov    ebx,0x6845c0db
  41ab8c:	adc    DWORD PTR [esp+ebp*2],eax
  41ab8f:	mov    edi,0x928b68c9
  41ab94:	scas   al,BYTE PTR es:[edi]
  41ab95:	nop
  41ab96:	mov    ebx,0xf268345
  41ab9b:	add    DWORD PTR [ebp+0x11c0b617],edx
  41aba1:	es addr16 cmp eax,0xf5774a24
  41aba8:	push   ebx
  41aba9:	sbb    bh,bl
  41abab:	stos   BYTE PTR es:[edi],al
  41abac:	int    0xa3
  41abae:	dec    esi
  41abaf:	adc    esp,DWORD PTR [edi+ebp*2-0x5d]
  41abb3:	shl    DWORD PTR [ebx+0x50],cl
  41abb6:	adc    BYTE PTR [eax],cl
  41abb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abb9:	test   al,0x48
  41abbb:	push   ecx
  41abbc:	test   eax,0xe143dc11
  41abc1:	icebp  
  41abc2:	scas   al,BYTE PTR es:[edi]
  41abc3:	shl    DWORD PTR [esi-0x28e07b54],0x70
  41abca:	sub    ecx,DWORD PTR [ebp+0x36]
  41abcd:	push   ebp
  41abce:	popf   
  41abcf:	cmp    DWORD PTR [edi+esi*8+0x35b208c8],esi
  41abd6:	into   
  41abd7:	sub    ebp,DWORD PTR [esi]
  41abd9:	pusha  
  41abda:	mov    esi,0x9a3b2aab
  41abdf:	cs or  eax,0xdc20b27f
  41abe5:	les    esi,FWORD PTR ds:0x2822cfb5
  41abeb:	pop    edx
  41abec:	xchg   ebx,eax
  41abed:	push   edi
  41abee:	dec    eax
  41abef:	inc    ebx
  41abf0:	add    al,BYTE PTR [esi+0x25ee036b]
  41abf6:	(bad)  
  41abf7:	(bad)  
  41abf8:	(bad)  
  41abf9:	fdivr  DWORD PTR [edi]
  41abfb:	enter  0x6548,0xee
  41abff:	int    0x5c
  41ac01:	pop    ss
  41ac02:	test   al,0x4
  41ac04:	add    bl,cl
  41ac06:	sub    ebp,DWORD PTR [ebx]
  41ac08:	shr    BYTE PTR [esi*8-0x8832488],0x7
  41ac10:	stos   BYTE PTR es:[edi],al
  41ac11:	mov    al,0xbb
  41ac13:	inc    esi
  41ac14:	mov    esi,0x1023992f
  41ac19:	dec    esi
  41ac1a:	fimul  WORD PTR [esi-0x21d527]
  41ac20:	adc    eax,0xabe5aab1
  41ac25:	jp     0x41ac3b
  41ac27:	mov    eax,DWORD PTR [eax+0x5f]
  41ac2a:	rol    BYTE PTR [esp+ebx*2-0x69],1
  41ac2e:	(bad)  
  41ac2f:	push   0x2a79579d
  41ac34:	sbb    DWORD PTR [eax],eax
  41ac36:	ror    BYTE PTR [esi+ebp*2+0x68777ee5],1
  41ac3d:	mov    bl,0xdc
  41ac3f:	stos   BYTE PTR es:[edi],al
  41ac40:	xchg   edx,eax
  41ac41:	dec    ecx
  41ac42:	mov    al,0x2b
  41ac44:	scas   eax,DWORD PTR es:[edi]
  41ac45:	sub    edx,edx
  41ac47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac48:	into   
  41ac49:	sub    eax,0x89e122cc
  41ac4e:	xlat   BYTE PTR ds:[ebx]
  41ac4f:	nop    DWORD PTR [ebx+0x1eeb89f3]
  41ac56:	repnz cwde 
  41ac58:	out    dx,eax
  41ac59:	pop    ds
  41ac5a:	cmp    eax,0x6fb09af9
  41ac5f:	imul   esi,DWORD PTR [edx+eiz*4+0xe585cb],0x7376190d
  41ac6a:	cs mov bp,0x79ad
  41ac6f:	jge    0x41ac72
  41ac71:	push   cs
  41ac72:	aad    0xd8
  41ac74:	xchg   edi,eax
  41ac75:	sbb    al,0x16
  41ac77:	(bad)  
  41ac78:	mov    ah,0xb5
  41ac7a:	sahf   
  41ac7b:	aad    0x4
  41ac7d:	xchg   edx,ebp
  41ac7f:	bnd ret 
  41ac81:	and    ebp,DWORD PTR ds:0x74ae
  41ac86:	mov    ah,0x14
  41ac88:	mov    ebp,0xb99ff072
  41ac8d:	pop    edx
  41ac8e:	push   edi
  41ac8f:	stos   DWORD PTR es:[edi],eax
  41ac90:	stos   DWORD PTR es:[edi],eax
  41ac91:	push   edx
  41ac92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac93:	test   al,0x74
  41ac95:	dec    ebp
  41ac96:	popf   
  41ac97:	mov    BYTE PTR ss:[edx+ecx*8],bl
  41ac9b:	cmp    DWORD PTR [edx-0x59],esp
  41ac9e:	ret    0xe2f2
  41aca1:	mov    ch,BYTE PTR [ebx-0x91f7d56]
  41aca7:	daa    
  41aca8:	daa    
  41aca9:	fisttp DWORD PTR [ecx+0x75]
  41acac:	repnz xchg edx,eax
  41acae:	xor    BYTE PTR [eax-0x7759232a],0xd
  41acb5:	pop    edx
  41acb7:	adc    bh,BYTE PTR [edx-0x19]
  41acba:	imul   ecx,DWORD PTR [ecx],0x5a
  41acbd:	outs   dx,BYTE PTR ds:[esi]
  41acbe:	dec    ebp
  41acbf:	or     dh,BYTE PTR [edi+0x30]
  41acc2:	xlat   BYTE PTR ds:[ebx]
  41acc3:	(bad)  
  41acc4:	jmp    0x41acf0
  41acc6:	(bad)  
  41acc7:	sub    esp,DWORD PTR [edi-0x45fa0f0c]
  41accd:	pusha  
  41acce:	ret    0x3ee1
  41acd1:	nop
  41acd2:	(bad)  
  41acd4:	(bad)  
  41acd5:	or     eax,0x8dc764fd
  41acda:	ret    
  41acdb:	mov    edi,0x29e6736d
  41ace0:	cld    
  41ace1:	pop    ss
  41ace2:	lds    edi,FWORD PTR [ecx]
  41ace4:	add    eax,0xe6210b5d
  41ace9:	push   ecx
  41acea:	jnp    0x41acca
  41acec:	sbb    eax,0x30d41604
  41acf1:	mov    eax,ds:0xf2bc8900
  41acf6:	icebp  
  41acf7:	push   esi
  41acf8:	cmp    dh,BYTE PTR [ecx]
  41acfa:	pop    ss
  41acfb:	and    ebx,DWORD PTR [esp+edx*2]
  41acfe:	xchg   edi,eax
  41acff:	jp     0x41ad00
  41ad01:	loopne 0x41ad6c
  41ad03:	xchg   edx,eax
  41ad04:	and    BYTE PTR [ebp+0x46],ch
  41ad07:	popf   
  41ad08:	fs jbe 0x41ad49
  41ad0b:	jns    0x41ac90
  41ad0d:	or     BYTE PTR [edi-0x22993437],cl
  41ad13:	xchg   ecx,eax
  41ad14:	data16 jbe 0x41acb0
  41ad17:	and    al,0xa6
  41ad19:	jecxz  0x41ad92
  41ad1b:	inc    ebx
  41ad1c:	aad    0x11
  41ad1e:	push   ecx
  41ad1f:	ret    
  41ad20:	icebp  
  41ad21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad22:	sbb    al,0x91
  41ad24:	rcl    BYTE PTR [eax-0x16feeae3],1
  41ad2a:	xchg   esp,eax
  41ad2b:	(bad)  
  41ad2c:	(bad)  
  41ad2d:	aaa    
  41ad2e:	test   BYTE PTR [ebp-0x68],dl
  41ad31:	jge    0x41accf
  41ad33:	addr16 dec esi
  41ad35:	sub    cl,BYTE PTR [ebp+0x7eaf2050]
  41ad3b:	cs xor al,0x6f
  41ad3e:	or     al,0x72
  41ad40:	push   edi
  41ad41:	sub    BYTE PTR [ebp+ebp*8-0x26],bh
  41ad45:	loope  0x41ad32
  41ad47:	jp     0x41ad67
  41ad49:	aad    0xe0
  41ad4b:	push   esi
  41ad4c:	inc    ebp
  41ad4d:	mov    dl,ah
  41ad4f:	lahf   
  41ad50:	sub    al,0xd5
  41ad52:	je     0x41ad65
  41ad54:	test   eax,0xbf87d479
  41ad59:	rcr    BYTE PTR [ecx+ebx*4],0x5b
  41ad5d:	sbb    BYTE PTR [ecx-0x6b4b16f0],ah
  41ad63:	sti    
  41ad64:	mov    eax,0xe6b485b7
  41ad69:	jp     0x41ad36
  41ad6b:	or     al,0xc6
  41ad6d:	mov    cl,0x21
  41ad6f:	mov    ah,0x24
  41ad71:	jns    0x41ad43
  41ad73:	cmp    ecx,ebp
  41ad75:	pop    ds
  41ad76:	xlat   BYTE PTR ds:[ebx]
  41ad77:	cdq    
  41ad78:	mov    cl,0xe4
  41ad7a:	fwait
  41ad7b:	ss das 
  41ad7d:	or     edi,edx
  41ad7f:	dec    ebp
  41ad80:	test   BYTE PTR [edi],bh
  41ad82:	jecxz  0x41ad93
  41ad84:	add    esi,esi
  41ad86:	push   es
  41ad87:	leave  
  41ad88:	fnstcw WORD PTR [edx]
  41ad8a:	pop    esp
  41ad8b:	int3   
  41ad8c:	push   ecx
  41ad8d:	call   DWORD PTR [eax+0x1e]
  41ad90:	sub    al,0xc2
  41ad92:	jo     0x41ad27
  41ad94:	call   0xad559c21
  41ad99:	xchg   esp,eax
  41ad9a:	jg     0x41adb4
  41ad9c:	(bad)  
  41ad9e:	sar    eax,cl
  41ada0:	jge    0x41ada1
  41ada2:	pop    esi
  41ada3:	adc    eax,0x740c62ce
  41ada8:	pop    edi
  41ada9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adaa:	or     al,0x89
  41adac:	icebp  
  41adad:	in     al,dx
  41adae:	jae    0x41ad6f
  41adb0:	cmp    DWORD PTR [eax-0x6d],ebx
  41adb3:	cmp    bh,BYTE PTR [edx-0x6937e50f]
  41adb9:	sbb    eax,0x6c78510b
  41adbe:	mov    al,ds:0x128503a4
  41adc3:	repz jp 0x41ae35
  41adc6:	jge    0x41ad96
  41adc8:	mov    al,ds:0xe101af22
  41adcd:	or     al,0xcd
  41adcf:	or     BYTE PTR [ecx],0xd2
  41add2:	and    dh,BYTE PTR [eax+0x45]
  41add5:	aaa    
  41add6:	and    bl,BYTE PTR [ebx]
  41add8:	xlat   BYTE PTR ds:[ebx]
  41add9:	mov    WORD PTR es:[edi-0x11],?
  41addd:	pop    ecx
  41adde:	jbe    0x41ad9a
  41ade0:	or     al,0xe7
  41ade2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ade3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ade4:	sub    BYTE PTR [esi],cl
  41ade6:	lods   eax,DWORD PTR ds:[esi]
  41ade7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ade8:	cld    
  41ade9:	mov    bh,0xcb
  41adeb:	imul   eax,edx,0xffffffdf
  41adee:	ja     0x41ad74
  41adf0:	xchg   ebx,eax
  41adf1:	outs   dx,DWORD PTR ds:[esi]
  41adf2:	pusha  
  41adf3:	xchg   ebp,eax
  41adf4:	sub    al,0xf1
  41adf6:	clc    
  41adf7:	or     bh,BYTE PTR [esi+edx*2-0x5c]
  41adfb:	jo     0x41adbb
  41adfd:	test   bl,0x8f
  41ae00:	arpl   WORD PTR [eax-0x6f8798d1],ax
  41ae06:	dec    ebx
  41ae07:	mov    BYTE PTR [edx],bl
  41ae09:	rcr    DWORD PTR [esi+0x0],1
  41ae0c:	mov    ch,0x33
  41ae0e:	pop    esi
  41ae0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae10:	mov    ch,0x89
  41ae12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae13:	push   es
  41ae14:	mov    esi,0xb985920
  41ae19:	mov    ds:0xde6259f,al
  41ae1e:	aad    0x13
  41ae20:	pop    esi
  41ae21:	push   0x8295a03b
  41ae26:	shr    BYTE PTR [edx],cl
  41ae28:	gs sbb al,0xa8
  41ae2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae2c:	jno    0x41ae52
  41ae2e:	xor    BYTE PTR [edi+0x7],dl
  41ae31:	xor    eax,0x3b0b05ed
  41ae36:	mov    edx,0x110f4313
  41ae3b:	cmp    BYTE PTR [ecx-0x1d5f9dfa],0xa8
  41ae42:	loop   0x41ae73
  41ae44:	pop    ds
  41ae45:	(bad)  
  41ae46:	sahf   
  41ae47:	jbe    0x41aec7
  41ae49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae4a:	mov    ebx,0x71725170
  41ae4f:	(bad)  
  41ae51:	das    
  41ae52:	imul   esp,DWORD PTR [esi+ecx*2-0x644359db],0x1bfbf5ba
  41ae5d:	(bad)  
  41ae5e:	imul   ebx,DWORD PTR [edi+0x7372ebc5],0x1f
  41ae65:	(bad)  
  41ae66:	fld    QWORD PTR [edx+ebx*8-0x21e94758]
  41ae6d:	out    0xbb,eax
  41ae6f:	ror    DWORD PTR [eax-0x63],1
  41ae72:	ja     0x41ae58
  41ae74:	mov    eax,0x1bc05778
  41ae79:	leave  
  41ae7a:	fistp  QWORD PTR [eax+0x5f307933]
  41ae80:	cwde   
  41ae81:	(bad)  
  41ae82:	shr    DWORD PTR [ebx-0x3],0xe9
  41ae86:	inc    eax
  41ae87:	(bad)  
  41ae88:	jo     0x41ae58
  41ae8a:	pop    ebp
  41ae8b:	dec    esi
  41ae8c:	jnp    0x41aec2
  41ae8e:	lahf   
  41ae8f:	mov    cl,0x41
  41ae91:	retf   
  41ae92:	mov    eax,0xa1040cab
  41ae97:	test   dl,dh
  41ae99:	or     edi,DWORD PTR [esi-0x67]
  41ae9c:	mov    eax,ds:0xf5076b1c
  41aea1:	inc    edi
  41aea2:	bound  ecx,QWORD PTR [edx]
  41aea4:	les    esp,FWORD PTR [ebx-0x4e0458f1]
  41aeaa:	push   ebp
  41aeab:	repnz xor al,0xc2
  41aeae:	jge    0x41aec9
  41aeb0:	(bad)  
  41aeb1:	cmp    al,0x4b
  41aeb3:	pop    ebx
  41aeb4:	loope  0x41ae3e
  41aeb6:	mov    ebx,ebp
  41aeb8:	pop    edi
  41aeb9:	outs   dx,BYTE PTR ds:[esi]
  41aeba:	pop    edi
  41aebb:	idiv   ebx
  41aebd:	xor    eax,0xa2b53e36
  41aec2:	dec    eax
  41aec3:	wbinvd 
  41aec5:	pop    ebx
  41aec6:	mov    dl,0x34
  41aec8:	aas    
  41aec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aeca:	faddp  st(0),st
  41aecc:	cmp    dh,BYTE PTR [ecx+0x26]
  41aecf:	pusha  
  41aed0:	packssdw mm5,QWORD PTR ds:0xfae7549e
  41aed7:	test   BYTE PTR [ebx-0x22952ec],cl
  41aedd:	cdq    
  41aede:	mov    ecx,0x53384157
  41aee3:	(bad)  
  41aee4:	xchg   ebx,eax
  41aee5:	dec    edi
  41aee6:	fsub   DWORD PTR [esi]
  41aee8:	popf   
  41aee9:	shl    DWORD PTR [ebp+0x4243e492],0x73
  41aef0:	sbb    BYTE PTR ds:0xc177b917,al
  41aef6:	adc    eax,0x97162d39
  41aefb:	jmp    0x2396f0a4
  41af00:	sbb    BYTE PTR [ebx+esi*4],bh
  41af03:	vmread DWORD PTR [esi-0x43578b8c],ebx
  41af0a:	aas    
  41af0b:	or     eax,0xdc37d94f
  41af10:	into   
  41af11:	sub    eax,0xa66d40ea
  41af17:	sbb    al,0xb3
  41af19:	ins    DWORD PTR es:[edi],dx
  41af1a:	stc    
  41af1b:	(bad)  
  41af1c:	cli    
  41af1d:	and    ebx,DWORD PTR [eax-0x5ea37359]
  41af23:	into   
  41af24:	sbb    bl,bh
  41af26:	sub    edx,0xffffff95
  41af29:	(bad)  
  41af2a:	retf   
  41af2b:	mov    cl,0x5d
  41af2d:	jo     0x41af9b
  41af2f:	mov    bh,0xe2
  41af31:	mov    bh,0xbc
  41af33:	adc    bl,ch
  41af35:	nop
  41af36:	imul   esp,DWORD PTR [edi+0x26],0x64f687f9
  41af3d:	jp     0x41af0a
  41af3f:	cmp    DWORD PTR [ecx+esi*4+0x2732623d],esp
  41af46:	dec    eax
  41af47:	inc    ecx
  41af48:	push   esp
  41af49:	mov    edx,0x4d6298a3
  41af4e:	(bad)  
  41af4f:	mov    ah,0x73
  41af51:	in     al,dx
  41af52:	or     cl,ah
  41af54:	repz xchg esp,eax
  41af56:	stc    
  41af57:	mov    dl,bh
  41af59:	jo     0x41af28
  41af5b:	cmp    eax,0x34458f98
  41af60:	test   bh,0x7
  41af63:	daa    
  41af64:	mov    al,ds:0xea05cd0e
  41af69:	mov    edi,0xdfca8cb
  41af6e:	fwait
  41af6f:	jp     0x41af2d
  41af71:	fild   QWORD PTR [eax-0x27]
  41af74:	mov    esp,0x440d3b5f
  41af79:	in     al,0xb7
  41af7b:	or     DWORD PTR ds:0x4a4911da,esi
  41af81:	or     ecx,DWORD PTR [ebp+0x30]
  41af84:	push   edi
  41af85:	push   ebp
  41af86:	loope  0x41af0f
  41af88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af89:	jns    0x41afbb
  41af8b:	dec    esp
  41af8c:	scas   al,BYTE PTR es:[edi]
  41af8d:	dec    ebx
  41af8e:	cmp    al,0x1
  41af90:	mov    al,0xb
  41af92:	push   DWORD PTR [esi]
  41af94:	loop   0x41af9a
  41af96:	scas   eax,DWORD PTR es:[edi]
  41af97:	(bad)  
  41af98:	(bad)  
  41af99:	in     eax,dx
  41af9a:	cmc    
  41af9b:	ins    BYTE PTR es:[edi],dx
  41af9c:	imul   esi,ebx,0x67de1c61
  41afa2:	jle    0x41b00f
  41afa4:	(bad)  [esi+0x268cd1f]
  41afaa:	std    
  41afab:	sbb    edx,eax
  41afad:	ins    BYTE PTR es:[edi],dx
  41afae:	cmp    eax,0x76c4ab42
  41afb3:	rcr    BYTE PTR [esi],1
  41afb5:	dec    ebp
  41afb6:	pop    ss
  41afb7:	cs xor edx,esi
  41afba:	in     al,0xb5
  41afbc:	sbb    eax,0xaf62986d
  41afc1:	mov    ebp,esp
  41afc3:	inc    esi
  41afc4:	mov    eax,ds:0x4caee99b
  41afc9:	in     eax,dx
  41afca:	mov    esp,0x9e2c1957
  41afcf:	add    al,0x21
  41afd1:	push   edx
  41afd2:	fsincos 
  41afd4:	mov    ds:0xd36a5d4f,eax
  41afd9:	jecxz  0x41afcf
  41afdb:	or     al,0x73
  41afdd:	icebp  
  41afde:	pop    ss
  41afdf:	xchg   ebx,eax
  41afe0:	outs   dx,DWORD PTR ds:[esi]
  41afe1:	push   ds
  41afe2:	cmp    DWORD PTR [esi],ecx
  41afe4:	aad    0x30
  41afe6:	outs   dx,DWORD PTR ds:[esi]
  41afe7:	adc    ch,al
  41afe9:	stc    
  41afea:	xchg   DWORD PTR [edx+ebx*2-0x3e3c57eb],eax
  41aff1:	jno    0x41afa0
  41aff3:	xchg   DWORD PTR [esi],edi
  41aff5:	xor    DWORD PTR [ecx+0x45],edx
  41aff8:	dec    ecx
  41aff9:	pop    es
  41affa:	or     al,0xfe
  41affc:	shr    BYTE PTR [edi-0x1e],1
  41afff:	inc    edi
  41b000:	mov    cl,0x58
  41b002:	ins    DWORD PTR es:[edi],dx
  41b003:	lds    ebx,FWORD PTR es:[edx-0x45d35c2e]
  41b00a:	jne    0x41b057
  41b00c:	add    DWORD PTR [eax-0xd],eax
  41b00f:	sbb    DWORD PTR [edi+0x51ee7030],edi
  41b015:	js     0x41afb5
  41b017:	dec    eax
  41b018:	mov    DWORD PTR [eax-0x45],ebx
  41b01b:	adc    eax,DWORD PTR [edx+0x31]
  41b01e:	test   DWORD PTR [eax+0x67],ebp
  41b021:	fs xchg edx,eax
  41b023:	fwait
  41b024:	jae    0x41afd0
  41b026:	sub    al,0xda
  41b028:	and    ah,BYTE PTR [eax]
  41b02a:	jo     0x41afec
  41b02c:	fsub   QWORD PTR [esi]
  41b02e:	mov    edi,DWORD PTR [ecx+0x15122120]
  41b034:	mov    bl,cl
  41b036:	out    dx,al
  41b037:	adc    DWORD PTR [ebx],0x1
  41b03a:	cli    
  41b03b:	leave  
  41b03c:	sub    ah,ah
  41b03e:	jb     0x41b052
  41b040:	ja     0x41b083
  41b042:	xor    al,0x4f
  41b044:	add    bh,BYTE PTR [ebx+0x58]
  41b047:	ins    DWORD PTR es:[edi],dx
  41b048:	ja     0x41b06c
  41b04a:	mov    dl,bl
  41b04c:	jno    0x41b0b1
  41b04e:	jb     0x41b0a7
  41b050:	fadd   st(4),st
  41b052:	inc    eax
  41b053:	cmc    
  41b054:	push   ds
  41b055:	fiadd  DWORD PTR [edx+0x3a1652e1]
  41b05b:	push   0xffffffda
  41b05d:	pop    esp
  41b05e:	xchg   edx,eax
  41b05f:	(bad)  [esi+0x3c]
  41b062:	ins    DWORD PTR es:[edi],dx
  41b063:	outs   dx,BYTE PTR ds:[esi]
  41b064:	and    DWORD PTR [edi+0x7c11757d],ebx
  41b06a:	mov    edi,DWORD PTR [ecx+0x4cd3def]
  41b070:	lods   al,BYTE PTR ds:[esi]
  41b071:	jnp    0x41b069
  41b073:	pop    edx
  41b074:	ds cmp cl,cl
  41b077:	xor    ah,BYTE PTR [edi+eax*8]
  41b07a:	es in  eax,dx
  41b07c:	outs   dx,DWORD PTR ds:[esi]
  41b07d:	and    BYTE PTR [esi-0x79],al
  41b080:	pop    esi
  41b081:	cmp    cl,BYTE PTR [ebx-0x4ca790c8]
  41b087:	adc    eax,0x65ae13b2
  41b08c:	or     eax,0x72febf06
  41b091:	mov    al,0x58
  41b093:	out    dx,eax
  41b094:	add    BYTE PTR [ecx-0xb155581],dl
  41b09a:	mov    esp,0x2cd7c40
  41b09f:	sub    edx,ebx
  41b0a1:	dec    edi
  41b0a2:	test   eax,0x11866405
  41b0a7:	ins    BYTE PTR es:[edi],dx
  41b0a8:	sbb    eax,DWORD PTR [ebx]
  41b0aa:	jae    0x41b0af
  41b0ac:	pop    ss
  41b0ad:	adc    eax,0x394215b2
  41b0b2:	mov    ebp,0x6d940f75
  41b0b7:	adc    BYTE PTR [ecx-0xc5f354b],dh
  41b0bd:	fbld   TBYTE PTR [eax]
  41b0bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0c0:	xchg   esp,eax
  41b0c1:	and    al,0x7d
  41b0c3:	shl    BYTE PTR [ebx-0x32],0x5d
  41b0c7:	inc    eax
  41b0c8:	ret    
  41b0c9:	xor    eax,0x77f1ee9e
  41b0ce:	enter  0xc2ce,0x8c
  41b0d2:	push   edx
  41b0d3:	sub    dh,BYTE PTR [ebp-0x6aab6dce]
  41b0d9:	jne    0x41b140
  41b0db:	mov    edx,0x520fab33
  41b0e0:	lods   eax,DWORD PTR ds:[esi]
  41b0e1:	or     ch,dh
  41b0e3:	push   DWORD PTR [edx+0x335c47d6]
  41b0e9:	push   edi
  41b0ea:	cli    
  41b0eb:	xchg   esp,eax
  41b0ec:	sub    ah,bh
  41b0ee:	jge    0x41b11a
  41b0f0:	div    BYTE PTR [eax-0x7b5e32b5]
  41b0f6:	gs cwde 
  41b0f8:	add    DWORD PTR [edi],edx
  41b0fa:	scas   al,BYTE PTR es:[edi]
  41b0fb:	xchg   BYTE PTR [ecx+0x12],ch
  41b0fe:	mov    edx,DWORD PTR [ecx]
  41b100:	fimul  DWORD PTR [ebx+0x97130bd]
  41b106:	div    edi
  41b108:	ror    eax,cl
  41b10a:	(bad)  
  41b10b:	mov    cl,0xb5
  41b10d:	(bad)  
  41b10e:	retf   
  41b10f:	loopne 0x41b18d
  41b111:	lahf   
  41b112:	or     DWORD PTR [edx+0x37],ebx
  41b115:	ret    0xf045
  41b118:	lods   eax,DWORD PTR ds:[esi]
  41b119:	jmp    0x41b111
  41b11b:	stc    
  41b11c:	lods   eax,DWORD PTR ds:[esi]
  41b11d:	(bad)  
  41b11e:	in     eax,0xf7
  41b120:	adc    esp,DWORD PTR [eax-0x1ba66b4b]
  41b126:	test   BYTE PTR [esp+edi*1-0x69744412],bl
  41b12d:	add    BYTE PTR [eax+0x34511aa6],dl
  41b133:	les    eax,FWORD PTR [eax+0x6e670985]
  41b139:	xchg   DWORD PTR [eax-0x77dbe95],eax
  41b13f:	mov    DWORD PTR [ebx-0x113f2db],ecx
  41b145:	xchg   ebx,eax
  41b146:	popf   
  41b147:	call   0xd955565d
  41b14c:	xchg   esp,eax
  41b14d:	scas   eax,DWORD PTR es:[edi]
  41b14e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b14f:	adc    dh,bl
  41b151:	aam    0x80
  41b153:	les    edi,FWORD PTR [edx-0x52]
  41b156:	test   al,0xf7
  41b158:	test   al,0x2d
  41b15a:	pop    esi
  41b15b:	mov    fs,WORD PTR [esi]
  41b15d:	retf   
  41b15e:	(bad)  
  41b15f:	gs and al,bl
  41b162:	cwde   
  41b163:	shl    cl,0x2f
  41b166:	mov    eax,0xdba6afc
  41b16b:	mov    al,ds:0xfc388339
  41b170:	adc    bh,BYTE PTR ss:[ecx+0x69]
  41b174:	fs push edx
  41b176:	imul   BYTE PTR [ecx]
  41b178:	sub    eax,0x49ca554a
  41b17d:	dec    esp
  41b17e:	push   0x3fcc7471
  41b183:	pop    edi
  41b184:	nop
  41b185:	in     eax,0x8b
  41b187:	pop    edx
  41b188:	cmp    al,0xea
  41b18a:	fsubrp st(3),st
  41b18c:	push   es
  41b18d:	xor    BYTE PTR [esi+edi*1-0x7a429e27],dl
  41b194:	adc    DWORD PTR [edx+0x454841ea],esp
  41b19a:	mov    WORD PTR [eax-0x5a1c826b],es
  41b1a0:	cmp    DWORD PTR [ebp-0x329ba0fb],esp
  41b1a6:	addr16 push eax
  41b1a8:	ins    DWORD PTR es:[edi],dx
  41b1a9:	xchg   DWORD PTR [ecx-0xd095d9d],eax
  41b1af:	sbb    DWORD PTR [esi-0x277eb67c],0xf2665c11
  41b1b9:	jg     0x41b153
  41b1bb:	jmp    0x1876b13e
  41b1c0:	stc    
  41b1c1:	mov    eax,0xad24bad1
  41b1c6:	cvtps2pi mm4,QWORD PTR [ebx]
  41b1c9:	ins    DWORD PTR es:[edi],dx
  41b1ca:	aam    0xf8
  41b1cc:	test   al,0xf6
  41b1ce:	stc    
  41b1cf:	cmp    BYTE PTR [eax+edx*1+0x4a15bbd4],dh
  41b1d6:	ins    DWORD PTR es:[edi],dx
  41b1d7:	xchg   ebp,eax
  41b1d8:	xor    ecx,edx
  41b1da:	adc    eax,0x2342426d
  41b1df:	xchg   ecx,eax
  41b1e0:	mov    bl,0xb8
  41b1e2:	cmp    BYTE PTR [esi],dh
  41b1e4:	sbb    BYTE PTR [ebx],cl
  41b1e6:	push   es
  41b1e7:	daa    
  41b1e8:	xor    BYTE PTR [ecx],cl
  41b1ea:	cwde   
  41b1eb:	push   ds
  41b1ec:	adc    dl,BYTE PTR [ecx-0x6b5c8bc9]
  41b1f2:	add    ecx,edx
  41b1f4:	enter  0xb8db,0x32
  41b1f8:	es test al,0x44
  41b1fb:	mov    dh,0x14
  41b1fd:	int    0x91
  41b1ff:	imul   ecx,DWORD PTR [edi-0x9],0x848e93ca
  41b206:	cmp    al,0x90
  41b208:	int    0x1b
  41b20a:	adc    eax,0xe190fcec
  41b20f:	add    ecx,0x3a501027
  41b215:	std    
  41b216:	outs   dx,DWORD PTR ds:[esi]
  41b217:	repz call 0xbe4206c1
  41b21d:	sahf   
  41b21e:	mov    esi,0x247e6fd
  41b223:	aad    0xa3
  41b225:	jno    0x41b1d4
  41b227:	or     ah,dl
  41b229:	pop    esp
  41b22a:	cs lahf 
  41b22c:	mov    ecx,0xecd22cee
  41b231:	pushf  
  41b232:	int    0xf
  41b234:	inc    esi
  41b235:	cmp    bl,BYTE PTR [esi]
  41b237:	xor    esp,DWORD PTR [edx]
  41b239:	(bad)  [edx+0x22]
  41b23c:	mov    eax,ds:0xee3810c7
  41b241:	sbb    DWORD PTR [esi],esi
  41b243:	aaa    
  41b244:	inc    ebp
  41b245:	jg     0x41b222
  41b247:	pop    esi
  41b248:	mov    edx,0x8261eb01
  41b24d:	test   BYTE PTR [edx-0x55],ah
  41b250:	mov    ecx,DWORD PTR [edx+0x3e]
  41b253:	inc    ecx
  41b254:	sbb    ebp,0x6382da65
  41b25a:	ins    DWORD PTR es:[edi],dx
  41b25b:	pop    edx
  41b25c:	pop    ecx
  41b25d:	hlt    
  41b25e:	imul   esp,DWORD PTR [ebx+0x8],0xffffffa3
  41b262:	and    esp,DWORD PTR [ecx]
  41b264:	adc    eax,0xfbb9f02b
  41b269:	push   esp
  41b26a:	inc    eax
  41b26b:	xchg   DWORD PTR [ebx+0x2f],esi
  41b26e:	and    esi,DWORD PTR [ecx]
  41b270:	ffreep st(7)
  41b272:	gs stos DWORD PTR es:[edi],eax
  41b274:	mov    eax,ds:0x7ee07def
  41b279:	sub    BYTE PTR [edx],bl
  41b27b:	popa   
  41b27c:	repz lock adc al,0x59
  41b280:	mov    ecx,0xa17f38b0
  41b285:	cmp    BYTE PTR ds:0x187253df,al
  41b28b:	repnz mov bh,0xe3
  41b28e:	add    al,0xac
  41b290:	rcl    BYTE PTR [esi+edx*2],cl
  41b293:	push   eax
  41b294:	jmp    0x41b228
  41b296:	dec    ebp
  41b297:	xchg   esi,eax
  41b298:	clc    
  41b299:	retf   0x2fdd
  41b29c:	mov    eax,ds:0x8e4df454
  41b2a1:	mov    DWORD PTR [ecx-0x399000cb],esp
  41b2a7:	imul   ebx,esi,0x53c5480b
  41b2ad:	mov    bl,0x6
  41b2af:	imul   edx,esp,0xffffffbf
  41b2b2:	cmp    ah,bl
  41b2b4:	and    DWORD PTR [edx],edi
  41b2b6:	mov    DWORD PTR [esp+eax*4-0x3943bc4d],ebp
  41b2bd:	jmp    0x41b300
  41b2bf:	mov    ss,WORD PTR [bx+si-0x49fd]
  41b2c4:	out    dx,al
  41b2c5:	dec    ebx
  41b2c6:	icebp  
  41b2c7:	lock push ecx
  41b2c9:	and    DWORD PTR [eax+0x7c19d086],0xffffffa4
  41b2d0:	fdivr  QWORD PTR [edi]
  41b2d2:	loopne 0x41b31c
  41b2d4:	jne    0x41b303
  41b2d6:	ret    
  41b2d7:	mov    ecx,0x56993f5b
  41b2dc:	xor    edi,DWORD PTR [edi-0x3a892b9e]
  41b2e2:	ds xor al,0x4a
  41b2e5:	outs   dx,BYTE PTR ds:[esi]
  41b2e6:	cmp    bl,ah
  41b2e8:	push   ecx
  41b2e9:	aas    
  41b2ea:	repz dec edx
  41b2ec:	dec    edx
  41b2ed:	out    0x54,al
  41b2ef:	jmp    0xacd26713
  41b2f4:	bound  edx,QWORD PTR ds:0xfd69fa09
  41b2fa:	mov    edi,0x6353b8a6
  41b2ff:	fsubr  DWORD PTR [ebx]
  41b301:	in     eax,0x43
  41b303:	jb     0x41b2de
  41b305:	dec    ecx
  41b306:	icebp  
  41b307:	lds    esp,FWORD PTR [ebp-0x75]
  41b30a:	in     eax,0xad
  41b30c:	xchg   ebp,eax
  41b30d:	sti    
  41b30e:	sub    eax,0xd60334f
  41b313:	lea    ebp,[ecx]
  41b315:	int    0xe3
  41b317:	or     bh,dl
  41b319:	mov    ds:0x8da1df52,al
  41b31e:	test   al,0xd4
  41b320:	pop    esi
  41b321:	in     eax,0x8e
  41b323:	pop    ss
  41b324:	xlat   BYTE PTR ds:[ebx]
  41b325:	or     ebx,DWORD PTR [edi]
  41b327:	out    dx,eax
  41b328:	retf   0xdd1e
  41b32b:	das    
  41b32c:	xchg   DWORD PTR [ebx],eax
  41b32e:	mov    bl,0x1a
  41b330:	lahf   
  41b331:	mov    ecx,ebx
  41b333:	jmp    0x506f:0xd7d1d4cc
  41b33a:	mov    BYTE PTR cs:[edx+0x3],dl
  41b33e:	inc    esp
  41b33f:	cmp    ecx,DWORD PTR [edi+0x40f243f9]
  41b345:	inc    ebx
  41b346:	xor    BYTE PTR [ecx+ebp*1+0x2f],0xaa
  41b34b:	xor    BYTE PTR [ebp+0x50aa10ba],dl
  41b351:	test   DWORD PTR [edi],edi
  41b353:	pop    ecx
  41b354:	stos   DWORD PTR es:[edi],eax
  41b355:	lea    ecx,[ebp-0x58e2bd42]
  41b35b:	les    ebx,FWORD PTR [ecx]
  41b35d:	jg     0x41b2fa
  41b35f:	dec    esp
  41b360:	dec    esp
  41b361:	pop    ecx
  41b362:	push   edx
  41b363:	push   ecx
  41b364:	rol    DWORD PTR [eax-0x3b5188bf],cl
  41b36a:	and    eax,esi
  41b36c:	sub    eax,0x74b9b1ef
  41b371:	push   esp
  41b372:	adc    eax,0x42d09dc4
  41b377:	out    0x18,eax
  41b379:	xor    esp,ebp
  41b37b:	xlat   BYTE PTR fs:[ebx]
  41b37d:	push   cs
  41b37e:	adc    esp,DWORD PTR [eax-0x4e57dd08]
  41b384:	push   DWORD PTR ds:0xe43a64ec
  41b38a:	lea    eax,ds:0xd22aa6c6
  41b390:	xchg   edx,ecx
  41b392:	retf   0x48ce
  41b395:	adc    BYTE PTR [ebx-0x79],dl
  41b398:	sub    al,0x61
  41b39a:	adc    al,0x1b
  41b39c:	jecxz  0x41b385
  41b39e:	mov    esi,0xea7a3cb3
  41b3a3:	in     al,dx
  41b3a4:	add    eax,0x18f072d1
  41b3a9:	fisub  WORD PTR [ebp+0x50a072bb]
  41b3af:	adc    DWORD PTR [ebx+0x57],ebp
  41b3b2:	in     eax,0x21
  41b3b4:	aam    0x3d
  41b3b6:	sar    DWORD PTR [esi-0x5f],cl
  41b3b9:	shl    BYTE PTR [ebx+ecx*2],cl
  41b3bc:	iret   
  41b3bd:	mov    bh,0x5
  41b3bf:	jecxz  0x41b3f0
  41b3c1:	or     dl,BYTE PTR [edx-0x1d0f42]
  41b3c7:	push   ebx
  41b3c8:	push   ebp
  41b3c9:	fstp   QWORD PTR [ecx+0x24]
  41b3cc:	repnz mov eax,0x82b07d7c
  41b3d2:	sbb    DWORD PTR [ebx+0x11f98d5f],edi
  41b3d8:	ins    DWORD PTR es:[edi],dx
  41b3d9:	cmp    BYTE PTR [edx+0x3e],0x14
  41b3dd:	ret    0x17b9
  41b3e0:	mov    WORD PTR [edi],ds
  41b3e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3e3:	pop    es
  41b3e4:	and    BYTE PTR [ebx],0x32
  41b3e7:	ret    
  41b3e8:	or     ah,dl
  41b3ea:	inc    ebx
  41b3eb:	or     BYTE PTR [ebx+esi*4],0x84
  41b3ef:	ins    BYTE PTR es:[edi],dx
  41b3f0:	imul   esi,DWORD PTR [eax-0x68],0x36
  41b3f4:	shl    DWORD PTR [edi+0x1d],cl
  41b3f7:	fdivrp st(7),st
  41b3f9:	jg     0x41b380
  41b3fb:	xchg   ecx,eax
  41b3fc:	push   edi
  41b3fd:	pop    es
  41b3fe:	sub    ch,cl
  41b400:	scas   al,BYTE PTR es:[edi]
  41b401:	aas    
  41b402:	xor    edx,DWORD PTR [ebx-0xc]
  41b405:	pop    eax
  41b406:	pop    esp
  41b407:	fnstcw WORD PTR [edi+0x7863b13]
  41b40d:	test   eax,0x81568d37
  41b412:	dec    esi
  41b413:	pop    esp
  41b414:	cmc    
  41b415:	add    al,0xe4
  41b417:	scas   eax,DWORD PTR es:[edi]
  41b418:	out    dx,eax
  41b419:	dec    eax
  41b41a:	or     BYTE PTR [edx-0x30],0xa8
  41b41e:	(bad)  
  41b41f:	jle    0x41b415
  41b421:	test   al,0xa6
  41b423:	dec    esp
  41b424:	add    ebp,DWORD PTR [edi]
  41b426:	pop    es
  41b427:	mov    bl,0x2c
  41b429:	(bad)  
  41b42a:	jge    0x41b419
  41b42c:	jp     0x41b3bd
  41b42e:	add    ecx,ecx
  41b430:	jp     0x41b3e1
  41b432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b433:	rcl    BYTE PTR [ebx+0x22312fa5],1
  41b439:	and    cl,dh
  41b43b:	pop    edx
  41b43c:	mov    ecx,DWORD PTR [edx]
  41b43e:	adc    eax,0xf1564b29
  41b443:	loop   0x41b4a9
  41b445:	mov    cl,0xb9
  41b447:	jge    0x41b450
  41b449:	shr    BYTE PTR [ebx+0x33bf4a23],0x4
  41b450:	loopne 0x41b3ea
  41b452:	push   edi
  41b453:	fs scas eax,DWORD PTR es:[edi]
  41b455:	or     al,0xc8
  41b457:	adc    al,0x6
  41b459:	addr16 xchg esi,eax
  41b45b:	loopne 0x41b433
  41b45d:	add    DWORD PTR [ebp-0x7b],esi
  41b460:	jle    0x41b43c
  41b462:	inc    esp
  41b463:	sub    ch,BYTE PTR [ecx]
  41b465:	out    dx,eax
  41b466:	lock mov ebp,0x6df6c2f1
  41b46c:	jae    0x41b48a
  41b46e:	out    0xd3,al
  41b470:	cs sti 
  41b472:	push   ecx
  41b473:	xchg   esp,eax
  41b474:	test   eax,0x4de711ab
  41b479:	and    edi,DWORD PTR [eax]
  41b47b:	mov    esi,0xec553781
  41b480:	add    dh,0xe4
  41b483:	add    dh,BYTE PTR [eax+0x5db9a2a8]
  41b489:	out    0xc5,al
  41b48b:	xchg   ebx,eax
  41b48c:	mov    esp,0x10d9972d
  41b491:	sbb    bl,cl
  41b493:	mov    bh,0xfc
  41b495:	call   0x12b9511d
  41b49a:	xor    BYTE PTR [ebp-0x17ced4a2],dl
  41b4a0:	pop    ecx
  41b4a1:	test   eax,0xd047e752
  41b4a6:	dec    esp
  41b4a7:	fs adc al,0x7f
  41b4aa:	add    al,0x46
  41b4ac:	(bad)  [edi-0x660baeb6]
  41b4b2:	out    dx,al
  41b4b3:	mov    ebp,DWORD PTR [edx]
  41b4b5:	fidiv  WORD PTR [eax-0x306ab930]
  41b4bb:	dec    edx
  41b4bc:	xor    BYTE PTR [esi-0x5cc35683],dh
  41b4c2:	clc    
  41b4c3:	inc    edx
  41b4c4:	sahf   
  41b4c5:	jmp    0x41b4db
  41b4c7:	mov    eax,ds:0x17081f96
  41b4cc:	pop    ecx
  41b4cd:	and    al,0x1f
  41b4cf:	scas   eax,DWORD PTR es:[edi]
  41b4d0:	out    dx,eax
  41b4d1:	or     dl,BYTE PTR [edx+0x36]
  41b4d4:	cdq    
  41b4d5:	and    eax,0xf1e5962f
  41b4da:	clc    
  41b4db:	imul   ebp,DWORD PTR [edi+0x4494f006],0xffffffc1
  41b4e2:	jbe    0x41b4f2
  41b4e4:	jae    0x41b503
  41b4e6:	push   edx
  41b4e7:	(bad)  
  41b4e8:	cli    
  41b4e9:	ins    DWORD PTR es:[edi],dx
  41b4ea:	xor    dl,BYTE PTR [ebp+0x7cad604b]
  41b4f0:	jbe    0x41b50b
  41b4f2:	imul   ebp,DWORD PTR [edx-0x139fd8e1],0xfffffff3
  41b4f9:	mov    ecx,cr2
  41b4fc:	fild   QWORD PTR [esi]
  41b4fe:	fcom   st(6)
  41b500:	cwde   
  41b501:	xchg   ebp,eax
  41b502:	push   eax
  41b503:	icebp  
  41b504:	pop    edi
  41b505:	repz xchg ecx,eax
  41b507:	push   ebx
  41b508:	fbld   TBYTE PTR [esi]
  41b50a:	xchg   ebx,eax
  41b50b:	push   esp
  41b50c:	pop    esp
  41b50d:	in     eax,dx
  41b50e:	ret    0x62b0
  41b511:	mov    dl,0xae
  41b513:	jmp    0x833:0x6031ba48
  41b51a:	enter  0x93cf,0xbe
  41b51e:	(bad)  
  41b51f:	sbb    edi,DWORD PTR [edx-0x46]
  41b522:	in     eax,dx
  41b523:	inc    DWORD PTR [edx-0xd]
  41b526:	loopne 0x41b4bd
  41b528:	and    DWORD PTR [edi-0x53],ecx
  41b52b:	cdq    
  41b52c:	(bad)
  41b530:	pusha  
  41b531:	xchg   ecx,eax
  41b532:	mov    edi,DWORD PTR [esi-0x52f0af0b]
  41b538:	aam    0xc5
  41b53a:	mov    ecx,0x5bad8d4a
  41b53f:	or     DWORD PTR [edx-0x57],ebx
  41b542:	les    edx,FWORD PTR [ebx+0x9]
  41b545:	stos   DWORD PTR es:[edi],eax
  41b546:	xchg   ecx,eax
  41b547:	mov    bh,0x6a
  41b549:	mov    ds:0xa43cd136,al
  41b54e:	in     eax,0x7
  41b550:	cmc    
  41b551:	adc    ch,bl
  41b553:	push   edi
  41b554:	mov    eax,ds:0xdbe1ea96
  41b559:	dec    edx
  41b55a:	les    edi,FWORD PTR [edx-0x4f7b9aa]
  41b560:	jg     0x41b52c
  41b562:	add    al,0x3a
  41b564:	ror    DWORD PTR [eax-0x208c1ea7],cl
  41b56a:	adc    dh,BYTE PTR [ecx]
  41b56c:	cmp    esp,ebp
  41b56e:	cmc    
  41b56f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b570:	cmp    eax,0x629d01d9
  41b575:	cmp    DWORD PTR [edx],ecx
  41b577:	hlt    
  41b578:	push   cs
  41b579:	pop    edi
  41b57a:	test   DWORD PTR [eax-0x68],ebx
  41b57d:	retf   
  41b57e:	mov    edx,0xd3f23d08
  41b583:	cmp    al,0xe3
  41b585:	into   
  41b586:	fwait
  41b587:	icebp  
  41b588:	jecxz  0x41b5ad
  41b58a:	push   cs
  41b58b:	inc    esp
  41b58c:	pop    ebp
  41b58d:	mov    eax,0xe9fdad05
  41b592:	fidiv  WORD PTR [esi-0x72]
  41b595:	fild   DWORD PTR [ebx]
  41b597:	inc    eax
  41b598:	fstp   TBYTE PTR [ecx-0x3dd13a55]
  41b59e:	ins    DWORD PTR es:[edi],dx
  41b59f:	popa   
  41b5a0:	mov    DWORD PTR [edi+0x67277d6a],ebp
  41b5a6:	jae    0x41b592
  41b5a8:	push   edx
  41b5a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5aa:	pop    esp
  41b5ab:	xlat   BYTE PTR ds:[ebx]
  41b5ac:	hlt    
  41b5ad:	xchg   esp,eax
  41b5ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5af:	and    DWORD PTR [ebp+0x5a],eax
  41b5b2:	fmul   DWORD PTR [eax-0x316312a9]
  41b5b8:	test   al,0xef
  41b5ba:	dec    ebx
  41b5bb:	adc    ebp,edx
  41b5bd:	jnp    0x41b556
  41b5bf:	sub    al,BYTE PTR [esp+edi*1-0x6e]
  41b5c3:	sbb    DWORD PTR [ebx],esi
  41b5c5:	jae    0x41b554
  41b5c7:	add    DWORD PTR [edx+0x7e],0x37
  41b5cb:	inc    esp
  41b5cc:	push   ebx
  41b5cd:	inc    eax
  41b5ce:	cld    
  41b5cf:	add    BYTE PTR [edi],dh
  41b5d1:	and    al,0x5a
  41b5d3:	stos   DWORD PTR es:[edi],eax
  41b5d4:	rcl    bh,0x69
  41b5d7:	shl    edi,0x6b
  41b5da:	and    ecx,DWORD PTR [edx+0x14]
  41b5dd:	add    eax,0xcc09c224
  41b5e2:	and    BYTE PTR [eax],dh
  41b5e4:	xor    BYTE PTR [edi],dl
  41b5e6:	or     BYTE PTR [ecx+edx*1],0xb7
  41b5ea:	cmp    BYTE PTR [edi+0x24],0x2d
  41b5ee:	inc    esp
  41b5ef:	adc    eax,0x53c68fd6
  41b5f4:	mov    ch,ch
  41b5f6:	test   al,0xd6
  41b5f8:	mov    dl,0xf4
  41b5fa:	outs   dx,DWORD PTR ds:[esi]
  41b5fb:	sbb    DWORD PTR [ebp+0x179b170a],esi
  41b601:	mov    bh,0x4a
  41b603:	or     esi,DWORD PTR [edi-0x7f05e1a4]
  41b609:	dec    eax
  41b60a:	ret    
  41b60b:	push   es
  41b60c:	push   eax
  41b60d:	mov    DWORD PTR [esp+esi*8-0x20],0x3a9f51b1
  41b615:	cli    
  41b616:	xchg   ebx,eax
  41b617:	popa   
  41b618:	sub    al,0x91
  41b61a:	sub    BYTE PTR [esi+ebp*8],cl
  41b61d:	out    dx,eax
  41b61e:	xchg   edx,eax
  41b61f:	(bad)  
  41b620:	std    
  41b621:	mov    dl,0x39
  41b623:	popa   
  41b624:	mov    bh,0x6
  41b626:	cmp    esi,esp
  41b628:	nop
  41b629:	jmp    0xffd04987
  41b62e:	inc    esp
  41b62f:	cli    
  41b630:	pusha  
  41b631:	jg     0x41b64c
  41b633:	jns    0x41b61f
  41b635:	and    eax,0x1f6320
  41b63a:	jmp    0x9a7ba412
  41b63f:	dec    ebp
  41b640:	mov    edx,0xba26ec7a
  41b645:	pop    eax
  41b646:	mov    ah,0x71
  41b648:	jne    0x41b684
  41b64a:	or     eax,0x1f7936e4
  41b64f:	mov    al,0x7d
  41b651:	call   0x180409a2
  41b656:	mov    esi,0xad4792eb
  41b65b:	pop    ds
  41b65c:	rol    DWORD PTR [ebx+0x7f51f280],1
  41b662:	mov    cl,0xc6
  41b664:	xlat   BYTE PTR ss:[ebx]
  41b666:	daa    
  41b667:	das    
  41b668:	in     al,dx
  41b669:	push   ebp
  41b66a:	xor    ecx,DWORD PTR [edx+eax*8-0x2e6595e]
  41b671:	ret    0x313c
  41b674:	dec    dx
  41b676:	dec    esi
  41b677:	push   edx
  41b678:	cdq    
  41b679:	scas   al,BYTE PTR es:[edi]
  41b67a:	jmp    0x41b6db
  41b67c:	push   cs
  41b67d:	jo     0x41b6b7
  41b67f:	sbb    bh,BYTE PTR [ebx-0x49816653]
  41b685:	xchg   edx,eax
  41b686:	xlat   BYTE PTR ds:[ebx]
  41b687:	xor    eax,0x7f1d3706
  41b68c:	in     al,0xe8
  41b68e:	cmp    eax,0xccf2927c
  41b693:	(bad)  
  41b694:	mul    ebp
  41b696:	pop    ss
  41b697:	cmc    
  41b698:	xchg   edx,eax
  41b699:	push   0x4b
  41b69b:	jmp    0x41b65f
  41b69d:	sbb    al,BYTE PTR [edx-0x1f]
  41b6a0:	push   ecx
  41b6a1:	pop    ds
  41b6a2:	cmp    eax,0xe3e1ce0c
  41b6a7:	xchg   ecx,eax
  41b6a8:	push   cs
  41b6a9:	dec    ebp
  41b6aa:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41b6ac:	retf   
  41b6ad:	inc    eax
  41b6ae:	test   al,0x70
  41b6b0:	xchg   ebx,eax
  41b6b1:	gs mov bl,0xe1
  41b6b4:	mov    ds:0x1e57cb41,al
  41b6b9:	xor    ebx,DWORD PTR [edi+0x6e764eca]
  41b6bf:	out    0x80,eax
  41b6c1:	rcr    BYTE PTR [edi],cl
  41b6c3:	js     0x41b737
  41b6c5:	dec    esi
  41b6c6:	out    dx,al
  41b6c7:	pop    ebx
  41b6c8:	loope  0x41b6e4
  41b6ca:	(bad)  
  41b6cb:	mov    BYTE PTR [esi+0x42d2ae6b],ah
  41b6d1:	push   ebx
  41b6d2:	sub    ebx,0xf85dd985
  41b6d8:	out    0x9f,al
  41b6da:	cmp    DWORD PTR [ecx],0xccb242cd
  41b6e0:	push   ebx
  41b6e1:	fistp  QWORD PTR [eax+0x37b647b5]
  41b6e7:	les    esp,FWORD PTR ds:[ebp+0x49]
  41b6eb:	int3   
  41b6ec:	lds    edi,FWORD PTR [esi+0x3b]
  41b6ef:	xor    DWORD PTR [esp+esi*2],esi
  41b6f2:	outs   dx,BYTE PTR ds:[esi]
  41b6f3:	mov    ds:0xf9a76a08,al
  41b6f8:	jecxz  0x41b692
  41b6fa:	or     BYTE PTR [ecx-0x24f0bafa],ah
  41b700:	cmc    
  41b701:	pop    eax
  41b702:	sahf   
  41b703:	popa   
  41b704:	mov    bl,0x49
  41b706:	jae    0x41b782
  41b708:	cdq    
  41b709:	push   eax
  41b70a:	push   esi
  41b70b:	xor    al,0xc8
  41b70d:	inc    esp
  41b70e:	inc    eax
  41b70f:	sbb    ecx,DWORD PTR ds:0xf9b6c609
  41b715:	mov    esp,DWORD PTR [esi]
  41b717:	pop    esi
  41b718:	out    0x73,al
  41b71a:	mov    esp,0x6e38ec1d
  41b71f:	(bad)  
  41b720:	jae    0x41b74b
  41b722:	frstor [edx-0x7422e687]
  41b728:	hlt    
  41b729:	(bad)  
  41b72a:	sub    al,0xf9
  41b72c:	(bad)  
  41b72e:	test   eax,0x5690e93c
  41b733:	pop    ebp
  41b734:	das    
  41b735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b736:	cmp    al,0x3e
  41b738:	mov    ch,dh
  41b73a:	xor    edi,edi
  41b73c:	fwait
  41b73d:	cmp    DWORD PTR [ecx+0x3746823a],edi
  41b743:	xchg   esp,eax
  41b744:	popf   
  41b745:	adc    ebp,DWORD PTR [ebp-0x28]
  41b748:	pushf  
  41b749:	cdq    
  41b74a:	jae    0x41b713
  41b74c:	imul   ebx,DWORD PTR ss:[eax+0x73],0xffffffee
  41b751:	cli    
  41b752:	in     al,0xf8
  41b754:	pop    ebx
  41b755:	push   ebx
  41b756:	addr16 xor al,0x17
  41b759:	nop
  41b75a:	or     eax,0x948f2ad4
  41b75f:	push   ss
  41b760:	in     eax,dx
  41b761:	mov    ds:0x4e2f8b8f,eax
  41b766:	loope  0x41b6f6
  41b768:	xchg   ecx,eax
  41b769:	addr16 dec eax
  41b76b:	jnp    0x41b6f2
  41b76d:	enter  0xe34e,0xc8
  41b771:	es mov al,0xab
  41b774:	clc    
  41b775:	fs fcmovne st,st(5)
  41b778:	mov    esi,0xe6e6fbdf
  41b77d:	sub    BYTE PTR [edx+eiz*4-0x1e7da796],0xf1
  41b785:	mov    ds:0xa81acba0,al
  41b78a:	(bad)  
  41b78b:	(bad)  
  41b78c:	test   al,0xd
  41b78e:	mov    eax,ds:0x23e85269
  41b793:	mov    al,ds:0xa367529
  41b798:	(bad)  
  41b799:	lods   eax,DWORD PTR ds:[esi]
  41b79a:	sub    BYTE PTR [edx+0x28],ch
  41b79d:	pop    edi
  41b79e:	js     0x41b7eb
  41b7a0:	mov    al,ds:0xe33b830a
  41b7a5:	mov    ebp,0xd14cd86c
  41b7aa:	and    eax,0xe4413713
  41b7af:	inc    eax
  41b7b0:	or     eax,ebp
  41b7b2:	mov    dh,0xed
  41b7b4:	icebp  
  41b7b5:	add    edi,DWORD PTR [eax+0x73]
  41b7b8:	test   al,0x59
  41b7ba:	sub    eax,0xb3cea71e
  41b7bf:	call   0xa2af:0xb299374d
  41b7c6:	cmp    ah,BYTE PTR [ecx]
  41b7c8:	in     eax,0x67
  41b7ca:	push   0x16808030
  41b7cf:	fwait
  41b7d0:	ret    
  41b7d1:	push   esp
  41b7d2:	xor    al,al
  41b7d4:	mov    bh,BYTE PTR [ebx]
  41b7d6:	fsubr  QWORD PTR [ecx+0x5f8ca687]
  41b7dc:	dec    eax
  41b7dd:	fsub   DWORD PTR [esi-0x45]
  41b7e0:	push   cs
  41b7e1:	xchg   edi,eax
  41b7e2:	in     eax,0xc1
  41b7e4:	es dec ecx
  41b7e6:	push   ecx
  41b7e7:	ret    
  41b7e8:	jno    0x41b841
  41b7ea:	or     ah,al
  41b7ec:	lea    edi,[ebx+0x29]
  41b7ef:	mov    ah,0x20
  41b7f1:	jg     0x41b784
  41b7f3:	xor    ecx,eax
  41b7f5:	scas   eax,DWORD PTR es:[edi]
  41b7f6:	inc    edi
  41b7f7:	shl    BYTE PTR [eax-0x1e],0xcb
  41b7fb:	mov    al,bh
  41b7fd:	loope  0x41b85c
  41b7ff:	mov    al,0x6d
  41b801:	adc    al,0x4f
  41b803:	ins    BYTE PTR es:[edi],dx
  41b804:	mul    BYTE PTR [edx+eiz*4+0x76e4890a]
  41b80b:	gs push es
  41b80d:	fist   DWORD PTR [ebp+eax*1+0x586e11f9]
  41b814:	and    bl,BYTE PTR [edx-0x4b8ab122]
  41b81a:	push   es
  41b81b:	pusha  
  41b81c:	cmp    dh,BYTE PTR [esi-0x4d]
  41b81f:	addr16 (bad) 
  41b821:	push   cs
  41b822:	add    DWORD PTR ds:0x4b91c79b,edx
  41b828:	push   edx
  41b829:	aaa    
  41b82a:	fdiv   st,st(7)
  41b82c:	fadd   DWORD PTR [edi-0x76]
  41b82f:	adc    eax,0x2fb7b244
  41b834:	nop
  41b835:	fisub  WORD PTR [edx+ebp*4]
  41b838:	sbb    al,0x99
  41b83a:	leave  
  41b83b:	ret    0x21a1
  41b83e:	jp     0x41b8b5
  41b840:	push   0x3f
  41b842:	push   0xffffffbe
  41b844:	inc    ecx
  41b845:	push   0x312a4fbc
  41b84a:	dec    esi
  41b84b:	test   DWORD PTR [edx+0x33],0x12b0c78c
  41b852:	cmp    DWORD PTR [edx+0x52],edi
  41b855:	cli    
  41b856:	jmp    0x3f0025e0
  41b85b:	jb     0x41b8b1
  41b85d:	xchg   ebp,eax
  41b85e:	jno    0x41b877
  41b860:	sbb    DWORD PTR [edi],esi
  41b862:	test   eax,0x8ef037a3
  41b867:	xchg   esi,eax
  41b868:	jns    0x41b8bd
  41b86a:	sbb    al,0xd3
  41b86c:	push   edi
  41b86d:	push   edi
  41b86e:	pop    edx
  41b86f:	mov    edi,0xed675d05
  41b874:	and    DWORD PTR ss:0x83634ea1,esp
  41b87b:	xchg   edx,eax
  41b87c:	(bad)  
  41b87d:	sahf   
  41b87e:	(bad)  
  41b87f:	iret   
  41b880:	data16 mov dh,0xd4
  41b883:	dec    ecx
  41b884:	out    dx,eax
  41b885:	test   BYTE PTR [ebx],al
  41b887:	stos   DWORD PTR es:[edi],eax
  41b888:	fs jns 0x41b87e
  41b88b:	push   ebx
  41b88c:	fnstcw WORD PTR [ebp-0x39]
  41b88f:	pop    ebx
  41b890:	fs jb  0x41b852
  41b893:	adc    cl,BYTE PTR [ecx+0x5e]
  41b896:	fidivr DWORD PTR [edx+0x7ea6d32d]
  41b89c:	fcmovnb st,st(0)
  41b89e:	icebp  
  41b89f:	push   ds
  41b8a0:	into   
  41b8a1:	adc    al,0x96
  41b8a3:	enter  0x3f00,0x37
  41b8a7:	cwde   
  41b8a8:	push   es
  41b8a9:	repnz mov edi,0x569d53d3
  41b8af:	jnp    0x41b8c3
  41b8b1:	add    al,0xc4
  41b8b3:	idiv   DWORD PTR [ecx]
  41b8b5:	xor    eax,0x8bf8b632
  41b8ba:	pop    es
  41b8bb:	mov    al,ds:0xd78b0260
  41b8c0:	add    ah,BYTE PTR [ebx+0x55]
  41b8c3:	pop    ecx
  41b8c4:	jnp    0x41b8a8
  41b8c6:	popa   
  41b8c7:	mov    bl,0xff
  41b8c9:	lock cli 
  41b8cb:	shl    BYTE PTR [ecx+0x71804b9f],cl
  41b8d1:	pusha  
  41b8d2:	test   eax,0xfc8c06a1
  41b8d7:	out    dx,eax
  41b8d8:	popf   
  41b8d9:	das    
  41b8da:	inc    esp
  41b8db:	into   
  41b8dc:	jno    0x41b922
  41b8de:	das    
  41b8df:	sbb    ebx,ebx
  41b8e1:	sar    DWORD PTR [eax+0x24],0xc
  41b8e5:	jae    0x41b8a1
  41b8e7:	cmp    esp,DWORD PTR [edi-0x66]
  41b8ea:	add    cl,dh
  41b8ec:	push   cs
  41b8ed:	lods   eax,DWORD PTR ds:[esi]
  41b8ee:	adc    eax,0xfdcf2473
  41b8f3:	lock stc 
  41b8f5:	mov    ?,WORD PTR [eax]
  41b8f7:	sar    BYTE PTR [ecx],1
  41b8f9:	mov    dh,0x44
  41b8fb:	cmp    eax,0xa747b046
  41b900:	arpl   WORD PTR [eax+ebp*8],ax
  41b903:	inc    edi
  41b904:	arpl   si,dx
  41b906:	adc    BYTE PTR [edi-0x28],al
  41b909:	xchg   edx,eax
  41b90a:	sub    DWORD PTR [ebx+ecx*4],esi
  41b90d:	loope  0x41b98d
  41b90f:	xchg   esi,eax
  41b910:	mov    bh,BYTE PTR [eax+0x70834850]
  41b916:	xchg   ecx,eax
  41b917:	out    dx,eax
  41b918:	cs push ss
  41b91a:	lea    edx,[ebp*1+0x9765c25]
  41b921:	stc    
  41b922:	add    DWORD PTR [edx-0x71dd5a22],ebp
  41b928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b929:	add    ebp,DWORD PTR [eax]
  41b92b:	jecxz  0x41b96f
  41b92d:	(bad)  
  41b92e:	shl    BYTE PTR [ebx-0x262ceddc],1
  41b934:	pop    esi
  41b935:	add    esp,DWORD PTR [edx+0x68]
  41b938:	shr    BYTE PTR [esi],1
  41b93a:	fcomi  st,st(2)
  41b93c:	pop    ss
  41b93d:	shr    edi,cl
  41b93f:	rcl    BYTE PTR [ebx+0x79],cl
  41b942:	stos   BYTE PTR es:[edi],al
  41b943:	sbb    ebp,ebx
  41b945:	xchg   DWORD PTR [ecx+0x46],edi
  41b948:	mov    DWORD PTR [edi-0x3],ebp
  41b94b:	dec    edx
  41b94c:	and    dh,BYTE PTR [edx-0xacbc7a8]
  41b952:	xlat   BYTE PTR ds:[ebx]
  41b953:	jmp    0x41b98f
  41b955:	pop    ds
  41b956:	imul   esp,DWORD PTR [ebp-0x15],0xffffffa4
  41b95a:	xchg   dh,cl
  41b95c:	cmp    DWORD PTR [esi+eax*8],eax
  41b95f:	shl    DWORD PTR [esi-0x18211423],0x87
  41b966:	adc    eax,0xa9658770
  41b96b:	mov    cs,WORD PTR [edi+0x440d90e]
  41b971:	xchg   ebx,edx
  41b973:	out    0xd4,eax
  41b975:	jge    0x41b9f2
  41b977:	mov    cl,0xe1
  41b979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b97a:	mov    BYTE PTR [ebp+ebx*4+0x6e445e95],cl
  41b981:	jp     0x41b9c1
  41b983:	add    ebp,ecx
  41b985:	ja     0x41b9e7
  41b987:	push   esi
  41b988:	shl    DWORD PTR [ebx],1
  41b98a:	nop
  41b98b:	and    ch,0x86
  41b98e:	mov    DWORD PTR [esi+0x6aa9e8ca],esi
  41b994:	dec    BYTE PTR [ebx]
  41b996:	jo     0x41b9ac
  41b998:	push   ebx
  41b999:	xchg   esi,eax
  41b99a:	and    BYTE PTR [edx+0x282c9963],cl
  41b9a0:	imul   ecx,DWORD PTR [esp+eax*8+0x438588d8],0xaf4d9789
  41b9ab:	in     eax,dx
  41b9ac:	jno    0x41b9d8
  41b9ae:	neg    DWORD PTR [ebp-0x4]
  41b9b1:	cwde   
  41b9b2:	lahf   
  41b9b3:	sub    al,0xab
  41b9b5:	pop    edi
  41b9b6:	in     eax,0xed
  41b9b8:	stos   BYTE PTR es:[edi],al
  41b9b9:	mov    dh,0x60
  41b9bb:	pop    edx
  41b9bc:	mov    dh,0x62
  41b9be:	jnp    0x41b9aa
  41b9c0:	(bad)  
  41b9c1:	xchg   edi,eax
  41b9c2:	out    0x2f,al
  41b9c4:	inc    edx
  41b9c5:	outs   dx,DWORD PTR ds:[esi]
  41b9c6:	push   ebp
  41b9c7:	dec    ecx
  41b9c8:	push   esp
  41b9c9:	imul   eax,DWORD PTR [edx-0x6d055ccc],0xffffffbd
  41b9d0:	imul   ebx,DWORD PTR [edi-0x62],0x69
  41b9d4:	mov    esp,0x189df4d0
  41b9d9:	jne    0x41b979
  41b9db:	add    esp,DWORD PTR [ecx+0x10c9e36b]
  41b9e1:	hlt    
  41b9e2:	clc    
  41b9e3:	test   al,0xe1
  41b9e5:	loop   0x41b9b3
  41b9e7:	(bad)  
  41b9e8:	xchg   edx,eax
  41b9e9:	jb     0x41ba66
  41b9eb:	aaa    
  41b9ec:	mov    ebp,0xde760934
  41b9f1:	out    0xa0,al
  41b9f3:	xlat   BYTE PTR ds:[ebx]
  41b9f4:	aad    0x2f
  41b9f6:	jmp    0x41b97f
  41b9f8:	inc    ecx
  41b9f9:	push   eax
  41b9fa:	mov    bl,0xbc
  41b9fc:	adc    DWORD PTR [esi],eax
  41b9fe:	push   esi
  41b9ff:	test   esp,edi
  41ba01:	out    dx,al
  41ba02:	rol    bh,1
  41ba04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba05:	shr    DWORD PTR [edi+0x6ff2d88],0x72
  41ba0c:	mov    esp,0x2c5ebaee
  41ba11:	xor    cl,BYTE PTR [edx-0x4d]
  41ba14:	lea    edx,[ecx]
  41ba16:	mov    ebx,DWORD PTR [edx-0x64]
  41ba19:	dec    ebp
  41ba1a:	mov    edx,0x98df0b91
  41ba1f:	aaa    
  41ba20:	fstp   st(0)
  41ba22:	add    ebx,esi
  41ba24:	inc    ebp
  41ba25:	jnp    0x41ba3c
  41ba27:	ror    esi,cl
  41ba29:	xchg   edi,eax
  41ba2a:	sbb    eax,0xf01e7bff
  41ba2f:	push   ds
  41ba30:	popf   
  41ba31:	retf   0xa79
  41ba34:	mov    ebx,DWORD PTR [edx]
  41ba36:	cmp    eax,DWORD PTR [esp+esi*4]
  41ba39:	cmc    
  41ba3a:	fwait
  41ba3b:	pop    edx
  41ba3c:	mov    eax,0xadfbdc10
  41ba41:	loop   0x41bab3
  41ba43:	or     edi,esp
  41ba45:	out    dx,al
  41ba46:	xchg   ebx,eax
  41ba47:	or     al,0xea
  41ba49:	sub    bh,BYTE PTR [edx-0xef1ce2c]
  41ba4f:	xchg   esp,eax
  41ba50:	sahf   
  41ba51:	or     DWORD PTR [edx+0x23],ecx
  41ba54:	mov    cl,0xa7
  41ba56:	push   es
  41ba57:	mov    eax,ds:0xd0ee96a2
  41ba5c:	jmp    0x701e901f
  41ba61:	push   ecx
  41ba62:	in     al,dx
  41ba63:	adc    dh,BYTE PTR [eax]
  41ba65:	pop    DWORD PTR [eax+0x61]
  41ba68:	cwde   
  41ba69:	pop    esp
  41ba6a:	es gs ret 
  41ba6d:	mov    ?,WORD PTR [esi-0x7d]
  41ba70:	mov    esp,0x54d2f932
  41ba75:	icebp  
  41ba76:	xor    BYTE PTR [ebp+0x7d],dl
  41ba79:	inc    esp
  41ba7a:	or     al,cl
  41ba7c:	mov    esi,0x8b25427d
  41ba81:	lea    ebp,[ecx-0x14]
  41ba84:	mov    ah,0xa1
  41ba86:	xlat   BYTE PTR ds:[ebx]
  41ba87:	ret    
  41ba88:	int3   
  41ba89:	(bad)  
  41ba8a:	cmc    
  41ba8b:	mov    eax,ds:0x5da105bb
  41ba90:	pop    edx
  41ba91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba92:	sub    al,0x5
  41ba94:	ins    DWORD PTR es:[edi],dx
  41ba95:	xchg   ebx,eax
  41ba96:	mov    ds:0xd012ca80,al
  41ba9b:	pop    ss
  41ba9c:	sahf   
  41ba9d:	fisttp DWORD PTR [eax-0x6ff17fc9]
  41baa3:	into   
  41baa4:	xchg   ebx,eax
  41baa5:	fnsave fs:[esi-0x67]
  41baa9:	push   esp
  41baaa:	(bad)  
  41baab:	outs   dx,BYTE PTR ds:[esi]
  41baac:	jp     0x41ba9b
  41baae:	ret    
  41baaf:	enter  0xd731,0x88
  41bab3:	fmul   QWORD PTR [esp+eax*1-0x24ed0df8]
  41baba:	in     eax,0x97
  41babc:	lds    edx,FWORD PTR [edi+edi*2-0x50]
  41bac0:	repz jb 0x41ba82
  41bac3:	lods   al,BYTE PTR ds:[esi]
  41bac4:	mov    eax,ds:0x8b2bcb0f
  41bac9:	cld    
  41baca:	out    dx,al
  41bacb:	xor    dh,cl
  41bacd:	and    ecx,edi
  41bacf:	shl    DWORD PTR [esi+0x23],1
  41bad2:	sbb    esi,esi
  41bad4:	shl    DWORD PTR es:[ebp-0x134db774],cl
  41badb:	inc    ebp
  41badc:	and    eax,0xcd3805db
  41bae1:	popf   
  41bae2:	iret   
  41bae3:	xchg   edx,eax
  41bae4:	xchg   BYTE PTR [ebx],bh
  41bae6:	ds ja  0x41bb1f
  41bae9:	ret    
  41baea:	fwait
  41baeb:	stos   DWORD PTR es:[edi],eax
  41baec:	aaa    
  41baed:	pop    esp
  41baee:	outs   dx,BYTE PTR ds:[esi]
  41baef:	out    dx,al
  41baf0:	stos   DWORD PTR es:[edi],eax
  41baf1:	adc    eax,0xc55166c5
  41baf6:	in     al,0x1c
  41baf8:	jp     0x41bb11
  41bafa:	out    0xde,al
  41bafc:	xchg   ebx,eax
  41bafd:	jne    0x41bb4e
  41baff:	mov    ds:0x6eaffdda,eax
  41bb04:	ins    BYTE PTR es:[edi],dx
  41bb05:	test   DWORD PTR [edx+0x1a1016d4],eax
  41bb0b:	lahf   
  41bb0c:	mov    al,ds:0xcb7ec57a
  41bb11:	stos   BYTE PTR es:[edi],al
  41bb12:	lahf   
  41bb13:	iret   
  41bb14:	ins    BYTE PTR es:[edi],dx
  41bb15:	mov    ch,0x1e
  41bb17:	dec    ebp
  41bb18:	jle    0x41bb95
  41bb1a:	hlt    
  41bb1b:	inc    edx
  41bb1c:	stos   BYTE PTR es:[edi],al
  41bb1d:	pop    eax
  41bb1e:	inc    eax
  41bb1f:	retf   0xc8f0
  41bb22:	mov    ds:0xd23682ee,al
  41bb27:	dec    ebx
  41bb28:	dec    esi
  41bb29:	push   esp
  41bb2a:	rcl    BYTE PTR [esi],0x68
  41bb2d:	and    edi,eax
  41bb2f:	xchg   DWORD PTR [ecx+edi*2-0x60],ecx
  41bb33:	xlat   BYTE PTR ds:[ebx]
  41bb34:	adc    esi,DWORD PTR [ebp-0x1f]
  41bb37:	call   0x30320166
  41bb3c:	scas   eax,DWORD PTR es:[edi]
  41bb3d:	(bad)  
  41bb3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb40:	dec    eax
  41bb41:	imul   esp,DWORD PTR [ebp-0x21],0x16e2d5f0
  41bb48:	adc    eax,0x71a4574c
  41bb4d:	sbb    al,0x99
  41bb4f:	sub    BYTE PTR [edx-0x3a],0x97
  41bb53:	mov    edi,0xc958443a
  41bb58:	test   BYTE PTR [ebp+0x72],bh
  41bb5b:	push   ds
  41bb5c:	cmp    eax,DWORD PTR [edi+0x77]
  41bb5f:	xchg   esp,eax
  41bb60:	ja     0x41bb46
  41bb62:	xor    edi,DWORD PTR [ebx]
  41bb64:	adc    BYTE PTR ds:0xd7e8840e,bh
  41bb6a:	neg    dl
  41bb6c:	ret    0x502e
  41bb6f:	or     edi,DWORD PTR [ecx+0xa]
  41bb72:	sti    
  41bb73:	mov    bh,0x66
  41bb75:	rcl    BYTE PTR [esi-0x3b],0x47
  41bb79:	das    
  41bb7a:	out    dx,al
  41bb7b:	sahf   
  41bb7c:	sub    eax,0x9ea67e3b
  41bb81:	dec    ebp
  41bb82:	(bad)  
  41bb83:	std    
  41bb84:	jno    0x41bbd0
  41bb86:	out    0x71,al
  41bb88:	ret    0x82d2
  41bb8b:	and    al,0xa7
  41bb8d:	adc    al,0xe6
  41bb8f:	mov    bh,BYTE PTR [eax]
  41bb91:	leavew 
  41bb93:	into   
  41bb94:	cdq    
  41bb95:	sbb    eax,0x82addcaa
  41bb9a:	inc    ecx
  41bb9b:	test   al,0x80
  41bb9d:	add    BYTE PTR [edi-0x71],ch
  41bba0:	mov    ds:0x57b78836,al
  41bba5:	daa    
  41bba6:	xchg   esi,eax
  41bba7:	sbb    ah,ch
  41bba9:	push   ss
  41bbaa:	xor    BYTE PTR [ebp+ebp*1-0x545f420c],0xc2
  41bbb2:	xchg   ebx,eax
  41bbb3:	mov    ecx,0x6bc500c0
  41bbb8:	shl    BYTE PTR [edi-0x4e7919bd],cl
  41bbbe:	sub    BYTE PTR ds:0x44532c65,dh
  41bbc4:	sbb    BYTE PTR [eax],ch
  41bbc6:	mov    esp,0xb685b77a
  41bbcb:	adc    dh,BYTE PTR [eax]
  41bbcd:	and    al,0xda
  41bbcf:	push   edx
  41bbd0:	imul   edx,ebp,0x67
  41bbd3:	xchg   ecx,eax
  41bbd4:	and    al,dh
  41bbd6:	jmp    DWORD PTR [esi-0x7f]
  41bbd9:	mov    bh,0x11
  41bbdb:	lods   eax,DWORD PTR ds:[esi]
  41bbdc:	push   es
  41bbdd:	cmp    dl,0x1c
  41bbe0:	mov    edi,0x332e48d4
  41bbe5:	(bad)  
  41bbe6:	fcomp  QWORD PTR [edi]
  41bbe8:	jae    0x41bbb0
  41bbea:	mov    dh,0x8b
  41bbec:	dec    edi
  41bbed:	or     al,0xb4
  41bbef:	or     eax,0x6a7a4fd6
  41bbf4:	fiadd  WORD PTR [edx-0x27d1d2c5]
  41bbfa:	sbb    DWORD PTR [ebx+0x6f],edx
  41bbfd:	adc    BYTE PTR [esp+edi*4-0x7d9553e3],dh
  41bc04:	and    al,0xc1
  41bc06:	dec    BYTE PTR [ebx]
  41bc08:	dec    esi
  41bc09:	inc    esp
  41bc0a:	neg    DWORD PTR [ebp+0x614e49cf]
  41bc10:	stos   DWORD PTR es:[edi],eax
  41bc11:	mov    cl,0x1d
  41bc13:	lods   eax,DWORD PTR ds:[esi]
  41bc14:	out    dx,eax
  41bc15:	sbb    al,0x5d
  41bc17:	mov    edi,0xf1ff5b0e
  41bc1c:	inc    edi
  41bc1d:	sbb    al,0xdf
  41bc1f:	inc    ebp
  41bc20:	(bad)  
  41bc21:	fisub  DWORD PTR [ecx+ecx*4]
  41bc24:	mov    esp,0x56702e9f
  41bc29:	cwde   
  41bc2a:	cld    
  41bc2b:	ror    edi,cl
  41bc2d:	jl     0x41bc68
  41bc2f:	inc    esi
  41bc30:	pop    edi
  41bc31:	and    BYTE PTR [edx+edi*2-0x1863f5c3],0xaf
  41bc39:	xchg   ecx,eax
  41bc3a:	xor    edx,DWORD PTR [edi+0x44c30571]
  41bc40:	cld    
  41bc41:	fsub   QWORD PTR [eax+0x53]
  41bc44:	mov    esp,0x582f4147
  41bc49:	adc    DWORD PTR gs:[ebp+0x5db73d55],esp
  41bc50:	sub    DWORD PTR [edx+edx*2+0x69],eax
  41bc54:	push   esp
  41bc55:	fidiv  DWORD PTR ds:0xf435e16b
  41bc5b:	pop    ebx
  41bc5c:	repz xchg esp,eax
  41bc5e:	lods   eax,DWORD PTR ds:[esi]
  41bc5f:	or     DWORD PTR [ebx],ebp
  41bc61:	jnp    0x41bccc
  41bc63:	sahf   
  41bc64:	out    0x80,al
  41bc66:	je     0x41bcc1
  41bc68:	dec    edi
  41bc69:	inc    edi
  41bc6a:	push   ebp
  41bc6b:	jb     0x41bca1
  41bc6d:	in     al,dx
  41bc6e:	cmp    edi,0x76
  41bc71:	inc    eax
  41bc72:	(bad)  
  41bc73:	call   0x7b11d5b
  41bc78:	outs   dx,DWORD PTR ds:[esi]
  41bc79:	(bad)  
  41bc7a:	out    dx,eax
  41bc7b:	rol    BYTE PTR [esi-0x6bf23b98],1
  41bc81:	push   ecx
  41bc82:	push   0x7f45a77f
  41bc87:	push   es
  41bc88:	(bad)  
  41bc89:	js     0x41bc7a
  41bc8b:	mov    ch,0xf6
  41bc8d:	xlat   BYTE PTR ds:[ebx]
  41bc8e:	adc    al,BYTE PTR [edi-0x53ac96e0]
  41bc94:	test   BYTE PTR [esi+0x4e5f9f7a],0x3b
  41bc9b:	pushf  
  41bc9c:	sub    ebp,DWORD PTR [ebx-0x593ffcce]
  41bca2:	cmc    
  41bca3:	mov    WORD PTR [ebx],fs
  41bca5:	and    eax,0x861daa5f
  41bcaa:	test   al,0x51
  41bcac:	push   edi
  41bcad:	adc    ebx,ecx
  41bcaf:	addr16 dec edx
  41bcb1:	out    dx,al
  41bcb2:	xor    edx,esi
  41bcb4:	mov    eax,ds:0xa7b682cf
  41bcb9:	hlt    
  41bcba:	int    0xa3
  41bcbc:	push   edi
  41bcbd:	test   DWORD PTR [edi],esi
  41bcbf:	pushf  
  41bcc0:	push   eax
  41bcc1:	mov    ebx,DWORD PTR [ecx]
  41bcc3:	hlt    
  41bcc4:	repz mov eax,ds:0x9c17074d
  41bcca:	jmp    0x41bc6e
  41bccc:	xchg   edx,eax
  41bccd:	adc    al,0xeb
  41bccf:	lahf   
  41bcd0:	mov    esp,0x37e38129
  41bcd5:	lea    esp,[edx+0x4eb7a811]
  41bcdb:	xchg   DWORD PTR [edx+0x5b],edx
  41bcde:	xchg   ecx,eax
  41bcdf:	cli    
  41bce0:	in     al,0x97
  41bce2:	pusha  
  41bce3:	(bad)  
  41bce4:	mov    dh,0x18
  41bce6:	jg     0x41bc82
  41bce8:	mov    al,ds:0x186bec3e
  41bced:	adc    eax,0x34b74d8e
  41bcf2:	pop    edi
  41bcf3:	ret    0x7eb0
  41bcf6:	fcmovbe st,st(7)
  41bcf8:	sti    
  41bcf9:	xlat   BYTE PTR ds:[ebx]
  41bcfa:	adc    al,0x2b
  41bcfc:	xor    dl,BYTE PTR [ebp+0x4d73fef6]
  41bd02:	dec    esi
  41bd03:	popf   
  41bd04:	fcom   DWORD PTR [ebp-0x1b790f2f]
  41bd0a:	mov    cl,0xdf
  41bd0c:	xchg   ebx,eax
  41bd0d:	push   esp
  41bd0e:	pop    edi
  41bd0f:	lock and ebx,DWORD PTR [edx]
  41bd12:	inc    ecx
  41bd13:	push   eax
  41bd14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd15:	cli    
  41bd16:	(bad)  
  41bd17:	mov    edx,0xe2281f7
  41bd1c:	repz retf 0x8f64
  41bd20:	adc    BYTE PTR [eax+ebp*2+0x24622036],bl
  41bd27:	jp     0x41bcbd
  41bd29:	and    DWORD PTR [ebx+0x7b3ce5af],esi
  41bd2f:	xor    DWORD PTR [eax],edx
  41bd31:	ins    DWORD PTR es:[edi],dx
  41bd32:	retf   0xe6f7
  41bd35:	pop    eax
  41bd36:	ds (bad) 
  41bd38:	mov    bh,0xef
  41bd3a:	mov    al,0x6a
  41bd3c:	dec    ebp
  41bd3d:	rol    bl,0xce
  41bd40:	stos   DWORD PTR es:[edi],eax
  41bd41:	xchg   ebx,eax
  41bd42:	loop   0x41bce7
  41bd44:	dec    edx
  41bd45:	pop    ecx
  41bd46:	pop    ss
  41bd47:	sti    
  41bd48:	mov    edx,0x9942b317
  41bd4d:	add    bl,bh
  41bd4f:	test   eax,0x73a9c9bc
  41bd54:	in     al,dx
  41bd55:	inc    edi
  41bd56:	pop    ebx
  41bd57:	xchg   edi,eax
  41bd58:	les    ecx,FWORD PTR [ebp-0x5e956ba5]
  41bd5e:	js     0x41bd1a
  41bd60:	cmp    ecx,ebx
  41bd62:	std    
  41bd63:	fisub  DWORD PTR [eax]
  41bd65:	jne    0x41bd07
  41bd67:	adc    al,0xee
  41bd69:	cmp    eax,0xafc74607
  41bd6e:	arpl   WORD PTR [edx],bx
  41bd70:	scas   al,BYTE PTR es:[edi]
  41bd71:	dec    ebx
  41bd72:	cmc    
  41bd73:	jg     0x41bd33
  41bd75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd76:	xor    ah,dh
  41bd78:	dec    ecx
  41bd79:	int    0xbb
  41bd7b:	not    ch
  41bd7d:	bnd jmp 0x41bdf3
  41bd80:	jp     0x41bdc7
  41bd82:	push   ds
  41bd83:	mov    WORD PTR [eax],?
  41bd85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd86:	mov    ch,dh
  41bd88:	xor    al,0xb5
  41bd8a:	adc    eax,0x9e8326f6
  41bd8f:	xchg   esp,eax
  41bd90:	scas   al,BYTE PTR es:[edi]
  41bd91:	test   al,0x29
  41bd93:	outs   dx,DWORD PTR ds:[esi]
  41bd94:	xchg   edx,eax
  41bd95:	add    DWORD PTR [esi+0x4d],esi
  41bd98:	adc    eax,0x67ff13a8
  41bd9d:	mov    ds:0x30e84917,eax
  41bda2:	mov    al,0x15
  41bda4:	gs popa 
  41bda6:	mov    ecx,0x811640c4
  41bdab:	or     BYTE PTR [edi],0xbf
  41bdae:	scas   eax,DWORD PTR es:[edi]
  41bdaf:	sub    BYTE PTR [ecx-0x30465291],0xa0
  41bdb6:	int3   
  41bdb7:	outs   dx,DWORD PTR ds:[esi]
  41bdb8:	sub    BYTE PTR [edi+edi*8],bh
  41bdbb:	loop   0x41bdc9
  41bdbd:	cs mov bh,0xce
  41bdc0:	sbb    esi,DWORD PTR [edx+0x7060fc3]
  41bdc6:	repz cmp al,0xa0
  41bdc9:	xchg   cl,dl
  41bdcb:	jbe    0x41be24
  41bdcd:	add    eax,0x378a16ef
  41bdd2:	imul   ecx,ebp,0xffffffb6
  41bdd5:	pop    eax
  41bdd6:	and    eax,0x52edc1bd
  41bddb:	cmp    al,0xb
  41bddd:	xchg   ecx,eax
  41bdde:	cmp    al,0x76
  41bde0:	jne    0x41bdd7
  41bde2:	call   0xec50:0xf5bc058b
  41bde9:	into   
  41bdea:	nop
  41bdeb:	mov    BYTE PTR ss:[edi],ch
  41bdee:	lock add DWORD PTR [eax-0x65],esi
  41bdf2:	xlat   BYTE PTR ds:[ebx]
  41bdf3:	jno    0x41be28
  41bdf5:	and    eax,0x8b3e304a
  41bdfa:	lods   eax,DWORD PTR ds:[esi]
  41bdfb:	xor    al,0x98
  41bdfd:	nop
  41bdfe:	fnsave ds:0x8640e05f
  41be04:	dec    esi
  41be05:	fisub  WORD PTR [ecx+ebp*4]
  41be08:	fisttp WORD PTR [eax+0x22]
  41be0b:	mov    ah,0xf2
  41be0d:	mov    dl,0xc9
  41be0f:	rcl    BYTE PTR [edx*4-0x5a94ae8c],0xb
  41be17:	test   DWORD PTR ds:0xfc53cf46,ebp
  41be1d:	mov    esp,0x45a1fe1e
  41be22:	mov    al,ds:0xa9c9f72f
  41be27:	mov    eax,0xd3b90670
  41be2c:	sbb    ebx,DWORD PTR [esi-0x4f]
  41be2f:	xchg   ebx,eax
  41be30:	dec    ecx
  41be31:	test   DWORD PTR [ebx-0x73abdd50],eax
  41be37:	loop   0x41bde0
  41be39:	mov    es,WORD PTR [ebp-0x6736bbca]
  41be3f:	popa   
  41be40:	jge    0x41bdcb
  41be42:	mov    eax,0xe28fecb4
  41be47:	mov    ecx,0x3f5d0540
  41be4c:	pushf  
  41be4d:	stc    
  41be4e:	sub    eax,0x2f91586a
  41be53:	fst    QWORD PTR [ebp-0x39]
  41be56:	xor    BYTE PTR [ebx+edx*4+0x72],dh
  41be5a:	mov    ah,0x89
  41be5c:	imul   eax,ebp,0xffffff85
  41be5f:	mov    edx,0x5f164981
  41be64:	mov    esp,0xd457b666
  41be69:	inc    edx
  41be6a:	push   ebp
  41be6b:	outs   dx,BYTE PTR ds:[esi]
  41be6c:	xchg   esi,eax
  41be6d:	cmp    ebp,DWORD PTR [esi+edx*1-0x62]
  41be71:	stos   DWORD PTR es:[edi],eax
  41be72:	data16 sub cl,BYTE PTR [esi]
  41be75:	ss push es
  41be77:	adc    al,0x43
  41be7a:	xor    BYTE PTR [esi+0x36],0xdd
  41be7e:	loopne 0x41be79
  41be80:	pop    esp
  41be81:	push   eax
  41be82:	jecxz  0x41beff
  41be84:	popa   
  41be85:	xchg   edx,eax
  41be86:	ja     0x41bee2
  41be88:	ds out dx,al
  41be8a:	cmp    eax,0xd98127e3
  41be8f:	aad    0x1e
  41be91:	cli    
  41be92:	test   al,0x5c
  41be94:	shr    BYTE PTR ds:0xa40bc803,1
  41be9a:	cwde   
  41be9b:	jmp    FWORD PTR [edx+ecx*4-0x57]
  41be9f:	(bad)  
  41bea0:	sti    
  41bea1:	into   
  41bea2:	(bad)  
  41bea3:	jnp    0x41be70
  41bea5:	mov    eax,ds:0x85205eb
  41beaa:	or     ecx,DWORD PTR [edi]
  41beac:	clc    
  41bead:	inc    esi
  41beae:	scas   al,BYTE PTR es:[edi]
  41beaf:	shl    BYTE PTR [eax+0x61ca44bb],cl
  41beb5:	arpl   WORD PTR [eax+0x4eec57db],bx
  41bebb:	push   ds
  41bebc:	popf   
  41bebd:	mov    edx,0x2de1800f
  41bec2:	mov    DWORD PTR [esi+esi*8+0x32],eax
  41bec6:	jl     0x41bf3c
  41bec8:	loope  0x41beb2
  41beca:	imul   ebx,esi,0xffffffa8
  41becd:	lea    edx,[ecx+0xc]
  41bed0:	jns    0x41bf03
  41bed2:	mov    fs,WORD PTR [eax+0x3b]
  41bed5:	jno    0x41be78
  41bed7:	(bad)  
  41bed8:	sti    
  41bed9:	sbb    eax,0x74ad02fd
  41bede:	ret    0x2d4c
  41bee1:	scas   eax,DWORD PTR es:[edi]
  41bee2:	mov    cl,0x74
  41bee4:	popf   
  41bee5:	cmp    BYTE PTR [esp+eiz*4+0x42],al
  41bee9:	cmp    eax,0x125499ba
  41beee:	adc    edi,edi
  41bef0:	js     0x41bede
  41bef2:	jns    0x41be81
  41bef4:	das    
  41bef5:	stc    
  41bef6:	xchg   ebx,eax
  41bef7:	les    esi,FWORD PTR [eax]
  41bef9:	fnstsw WORD PTR [edi]
  41befb:	sbb    edx,DWORD PTR [edx]
  41befd:	loopne 0x41bed5
  41beff:	in     al,dx
  41bf00:	push   0xfd7eb014
  41bf05:	test   ecx,esp
  41bf07:	imul   edi
  41bf09:	aaa    
  41bf0a:	add    BYTE PTR [ebx-0x54119e74],0xc
  41bf11:	xor    eax,DWORD PTR [eax+0x1adecb88]
  41bf17:	sahf   
  41bf18:	cmp    esi,DWORD PTR [ebp+0x571ffc8b]
  41bf1e:	and    edx,esp
  41bf20:	inc    edi
  41bf21:	dec    esi
  41bf22:	imul   BYTE PTR [eax]
  41bf24:	repnz push esi
  41bf26:	ffreep st(6)
  41bf28:	mov    bl,0xef
  41bf2a:	popa   
  41bf2b:	and    BYTE PTR [eax],ah
  41bf2d:	or     ebx,esp
  41bf2f:	xchg   edi,eax
  41bf30:	in     al,0x4a
  41bf32:	and    ecx,DWORD PTR [edi]
  41bf34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf35:	xchg   ebx,eax
  41bf36:	pop    eax
  41bf37:	clc    
  41bf38:	mov    cl,0x26
  41bf3a:	or     ch,BYTE PTR [ebp+0x4f]
  41bf3d:	daa    
  41bf3e:	test   BYTE PTR [esi+0x717fd515],0x6c
  41bf45:	mov    ah,dl
  41bf47:	fwait
  41bf48:	lock mov esp,esi
  41bf4b:	rol    BYTE PTR [esi+0x4a],0x89
  41bf4f:	cmp    eax,0x1dd761ea
  41bf54:	sub    DWORD PTR [eax-0x351aa721],ecx
  41bf5a:	pop    esp
  41bf5b:	rcr    BYTE PTR [edi-0x39741c7d],cl
  41bf61:	jb     0x41bf4d
  41bf63:	out    dx,al
  41bf64:	hlt    
  41bf65:	je     0x41bf04
  41bf67:	sti    
  41bf68:	or     BYTE PTR [ebx+0x48],bl
  41bf6b:	shl    ecx,cl
  41bf6d:	xchg   esi,eax
  41bf6e:	jbe    0x41bfbe
  41bf70:	imul   edx,DWORD PTR [esi+0x14a9c125],0x7cd82dc
  41bf7a:	into   
  41bf7b:	mov    edx,0x7b20b2e
  41bf80:	mov    dl,0x89
  41bf82:	push   0xecd7c748
  41bf87:	sbb    eax,0x5e6bd550
  41bf8c:	inc    esi
  41bf8d:	int3   
  41bf8e:	popa   
  41bf8f:	in     al,dx
  41bf90:	mov    ecx,DWORD PTR [ecx+0x681f8764]
  41bf96:	dec    esi
  41bf97:	cmp    BYTE PTR [edi],0xdd
  41bf9a:	or     DWORD PTR [eax+0x7e],eax
  41bf9d:	pusha  
  41bf9e:	sub    al,0x35
  41bfa0:	(bad)  
  41bfa1:	pop    ds
  41bfa2:	mov    bl,0x53
  41bfa4:	dec    ecx
  41bfa5:	jle    0x41bffc
  41bfa7:	push   0x75dfd143
  41bfac:	das    
  41bfad:	xchg   BYTE PTR [ebx+0x15],dh
  41bfb0:	cmp    BYTE PTR [ebx+0x25],ah
  41bfb3:	js     0x41bf75
  41bfb5:	fs xchg ebp,eax
  41bfb7:	mov    esi,DWORD PTR [edi+0x27]
  41bfba:	sahf   
  41bfbb:	sbb    al,0x56
  41bfbd:	mov    al,ds:0xe8260ae1
  41bfc2:	rol    BYTE PTR [eax-0x4a],cl
  41bfc5:	test   eax,0x586e23e1
  41bfca:	pop    ds
  41bfcb:	pushf  
  41bfcc:	pop    ebp
  41bfcd:	add    DWORD PTR [edi+0x2a992cb],ebp
  41bfd3:	dec    edx
  41bfd4:	ja     0x41bf6e
  41bfd6:	and    esi,esi
  41bfd8:	and    ch,BYTE PTR [ebx-0x64fe73ce]
  41bfde:	rol    BYTE PTR [ebx+0x70],cl
  41bfe1:	jg     0x41bfe8
  41bfe3:	or     al,0xda
  41bfe5:	sbb    DWORD PTR [ecx],esp
  41bfe7:	addr16 int3 
  41bfe9:	jns    0x41c019
  41bfeb:	into   
  41bfec:	sbb    DWORD PTR [edx+0x53],0x321a86bc
  41bff3:	rcl    DWORD PTR [esi],cl
  41bff5:	jmp    0x41bf86
  41bff7:	popa   
  41bff8:	mov    cl,0x3b
  41bffa:	jbe    0x41c061
  41bffc:	cmc    
  41bffd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bffe:	call   0x22f5a38b
  41c003:	or     ch,BYTE PTR ds:0x9bb16000
  41c009:	aam    0xba
  41c00b:	inc    esp
  41c00c:	stos   DWORD PTR es:[edi],eax
  41c00d:	es aam 0xc5
  41c010:	and    esi,DWORD PTR [edi+0x6c]
  41c013:	pop    ebx
  41c014:	imul   ebx,eax,0x2c4ad4ae
  41c01a:	es icebp 
  41c01c:	out    0x1a,eax
  41c01e:	push   edx
  41c01f:	pushf  
  41c020:	fs adc eax,0xda728c9d
  41c026:	xchg   ebx,eax
  41c027:	push   esi
  41c028:	xor    BYTE PTR [ebx*8-0xecf3332],0x34
  41c030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c031:	jmp    0x41bfe5
  41c033:	add    ecx,esp
  41c035:	mov    ebp,0x26bed2db
  41c03a:	xchg   edi,eax
  41c03b:	std    
  41c03c:	mov    al,ds:0xcc957e53
  41c041:	pop    ecx
  41c042:	dec    eax
  41c043:	add    al,0xae
  41c045:	mov    BYTE PTR [edi-0x7e],ch
  41c048:	lea    edx,[ebx]
  41c04a:	cmp    al,0x1
  41c04c:	scas   al,BYTE PTR es:[edi]
  41c04d:	dec    esp
  41c04e:	jb     0x41c014
  41c050:	ret    
  41c051:	outs   dx,BYTE PTR ds:[esi]
  41c052:	std    
  41c053:	jle    0x41c077
  41c055:	bound  ebp,QWORD PTR [esi-0x2272493d]
  41c05b:	(bad)  
  41c05c:	fcom   DWORD PTR [eax+edi*2-0xc]
  41c061:	push   0x5538540d
  41c066:	es outs dx,DWORD PTR ds:[esi]
  41c069:	sahf   
  41c06a:	pop    eax
  41c06b:	addr16 js 0x41c00e
  41c06e:	in     eax,dx
  41c06f:	push   esi
  41c070:	inc    ecx
  41c071:	imul   ecx,DWORD PTR [esp+esi*4+0x61],0xffffff88
  41c076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c077:	dec    edx
  41c078:	xor    DWORD PTR [edi+0x503b4778],ebx
  41c07e:	jmp    0xd952427
  41c083:	arpl   WORD PTR [edi],ax
  41c085:	sbb    BYTE PTR [edx+0x4d],bh
  41c088:	sub    BYTE PTR [ecx+0x45adf445],ah
  41c08e:	add    al,0x83
  41c090:	shl    DWORD PTR [ecx],0x60
  41c093:	fiadd  DWORD PTR [ebx]
  41c095:	loopne 0x41c0cb
  41c097:	test   al,0x8e
  41c099:	cmp    eax,0xb26476a8
  41c09e:	adc    al,0x45
  41c0a0:	ss aam 0x73
  41c0a3:	jbe    0x41c079
  41c0a5:	cli    
  41c0a6:	add    dl,BYTE PTR [edi+0x4e]
  41c0a9:	cwde   
  41c0aa:	pop    ds
  41c0ab:	pop    es
  41c0ac:	add    BYTE PTR [esi],0xbb
  41c0af:	call   esi
  41c0b1:	push   ds
  41c0b2:	packssdw mm7,QWORD PTR [eax-0x7c]
  41c0b6:	pop    eax
  41c0b7:	push   edx
  41c0b8:	mov    WORD PTR [ebp+0x643c54ba],?
  41c0be:	cmp    dl,BYTE PTR [ecx+0x48fb1069]
  41c0c4:	test   BYTE PTR [edi+0x264f4273],bh
  41c0ca:	cdq    
  41c0cb:	sub    bh,BYTE PTR [ebp-0x5edfbc60]
  41c0d1:	cli    
  41c0d2:	cmp    DWORD PTR [ecx+0x73bb7eb6],ebp
  41c0d8:	push   esi
  41c0d9:	int    0x2
  41c0db:	stc    
  41c0dc:	mov    bh,0x73
  41c0de:	fld    QWORD PTR [edi-0x1c64e168]
  41c0e4:	dec    edx
  41c0e5:	aad    0xb
  41c0e7:	sbb    ch,0x9e
  41c0ea:	lock jbe 0x41c079
  41c0ed:	ds popa 
  41c0ef:	jl     0x41c139
  41c0f1:	cdq    
  41c0f2:	xor    ecx,ecx
  41c0f4:	(bad)  
  41c0f5:	dec    ebx
  41c0f6:	add    eax,0x26d53509
  41c0fb:	jns    0x41c083
  41c0fd:	push   eax
  41c0fe:	imul   edi,DWORD PTR [ebx],0x22
  41c101:	or     eax,0xba443474
  41c106:	xlat   BYTE PTR ds:[ebx]
  41c107:	mov    edx,0x980a902e
  41c10c:	and    esi,DWORD PTR [edi-0x2103fae5]
  41c112:	ret    
  41c113:	imul   ebp,DWORD PTR [edi-0x14ee49ba],0xec238f9a
  41c11d:	shr    BYTE PTR [edi-0x592ece3c],1
  41c123:	mov    ebx,0xccbde72a
  41c128:	and    DWORD PTR [eax+edx*2],ecx
  41c12b:	sbb    dh,ch
  41c12d:	jg     0x41c0fc
  41c12f:	pop    ds
  41c130:	mov    eax,ds:0x915ab242
  41c135:	out    0x8,eax
  41c137:	gs fucomip st,st(3)
  41c13a:	adc    DWORD PTR [edx-0x119fb3b2],edi
  41c140:	inc    eax
  41c141:	adc    eax,0x13b9f872
  41c146:	cmp    esp,esp
  41c148:	stos   DWORD PTR es:[edi],eax
  41c149:	(bad)  
  41c14a:	sub    bl,al
  41c14c:	inc    ecx
  41c14d:	xchg   ecx,eax
  41c14e:	lods   eax,DWORD PTR ds:[esi]
  41c14f:	(bad)  [ebx+0x6f]
  41c152:	(bad)  
  41c153:	shl    BYTE PTR [edx],cl
  41c155:	ret    
  41c156:	inc    esp
  41c157:	dec    edi
  41c158:	or     al,BYTE PTR [esi]
  41c15a:	lds    ebp,FWORD PTR [eax-0x12]
  41c15d:	mov    cl,0xdc
  41c15f:	in     al,0x74
  41c161:	mov    edx,0x677d896f
  41c166:	pop    ds
  41c167:	mov    esi,0x973237f4
  41c16c:	sar    DWORD PTR [eax-0x75],cl
  41c16f:	dec    ecx
  41c170:	cmc    
  41c171:	jo     0x41c1b8
  41c173:	int3   
  41c174:	jl     0x41c167
  41c176:	stc    
  41c177:	jb     0x41c181
  41c179:	add    al,0xe1
  41c17b:	push   ss
  41c17c:	retf   
  41c17d:	cmp    edx,edx
  41c17f:	xor    al,0xe7
  41c181:	(bad)  
  41c182:	cdq    
  41c183:	cmp    al,0x66
  41c185:	mov    WORD PTR [edx-0x34fef94d],es
  41c18b:	jnp    0x41c11c
  41c18d:	sub    ch,0x69
  41c190:	es ja  0x41c1b2
  41c193:	in     al,dx
  41c194:	pop    esi
  41c195:	jl     0x41c12b
  41c197:	scas   al,BYTE PTR es:[edi]
  41c198:	pop    esp
  41c199:	ins    BYTE PTR es:[edi],dx
  41c19a:	jb     0x41c214
  41c19c:	and    al,0x33
  41c19e:	add    eax,0x6e8cf8f5
  41c1a3:	out    dx,al
  41c1a4:	in     eax,dx
  41c1a5:	ror    esp,0x82
  41c1a8:	lods   al,BYTE PTR ds:[esi]
  41c1a9:	and    al,0x59
  41c1ab:	arpl   dx,dx
  41c1ad:	jmp    0x8cf1996d
  41c1b2:	std    
  41c1b3:	int3   
  41c1b4:	scas   eax,DWORD PTR es:[edi]
  41c1b5:	or     BYTE PTR [edi],dh
  41c1b7:	(bad)  
  41c1b9:	push   eax
  41c1ba:	jae    0x41c1f5
  41c1bc:	(bad)  
  41c1bd:	test   DWORD PTR [ebx+0x26679638],0x6ff03853
  41c1c7:	sbb    BYTE PTR [ecx+ebp*4],dl
  41c1ca:	icebp  
  41c1cb:	sbb    ecx,DWORD PTR [edx-0x77f09078]
  41c1d1:	or     al,ch
  41c1d3:	test   BYTE PTR [esi+0x6f],ch
  41c1d6:	test   bl,cl
  41c1d8:	cdq    
  41c1d9:	push   eax
  41c1da:	(bad)  
  41c1db:	push   ss
  41c1dc:	aam    0x69
  41c1de:	inc    esp
  41c1df:	cmp    eax,0x2acd8b00
  41c1e4:	sub    al,0x65
  41c1e6:	sbb    ebx,esp
  41c1e8:	or     edi,DWORD PTR [edx-0x51952c90]
  41c1ee:	fild   DWORD PTR [eax-0x76356852]
  41c1f4:	fdiv   DWORD PTR [edi]
  41c1f6:	mov    ecx,0x6160a80
  41c1fb:	out    0x56,al
  41c1fd:	(bad)  
  41c1fe:	daa    
  41c1ff:	jns    0x41c26e
  41c201:	dec    edx
  41c202:	test   esp,0x4425750
  41c208:	call   0xd6034a5f
  41c20d:	mul    BYTE PTR [eax]
  41c20f:	imul   ecx,DWORD PTR ds:0x131afe4f,0x526b61a2
  41c219:	dec    esi
  41c21a:	shl    DWORD PTR [ecx+ebp*2-0x29b4f094],0xe6
  41c222:	sub    DWORD PTR [eax+0x49],0x1ddfddfe
  41c229:	push   0xa8e4f6f2
  41c22e:	sti    
  41c22f:	add    al,0x48
  41c231:	seto   al
  41c234:	inc    esp
  41c235:	cmp    ecx,esp
  41c237:	sti    
  41c238:	jno    0x41c1c9
  41c23a:	stos   DWORD PTR es:[edi],eax
  41c23b:	dec    edx
  41c23c:	outs   dx,BYTE PTR ds:[esi]
  41c23d:	mov    ah,0x6c
  41c23f:	adc    DWORD PTR [eax+0x28],edx
  41c242:	adc    cl,BYTE PTR [esi-0x41]
  41c245:	enter  0x9eee,0xe7
  41c249:	(bad)
  41c24d:	dec    esi
  41c24e:	or     DWORD PTR [eax],edi
  41c250:	test   bl,dl
  41c252:	int    0xc7
  41c254:	xchg   esp,eax
  41c255:	push   eax
  41c256:	or     DWORD PTR [ecx+0x37bd4c83],0x1454fb0f
  41c260:	ret    
  41c261:	mov    cl,BYTE PTR [ecx]
  41c263:	jp     0x41c2a5
  41c265:	push   ecx
  41c266:	pop    esp
  41c267:	cs xchg esp,eax
  41c269:	dec    eax
  41c26a:	outs   dx,DWORD PTR ds:[esi]
  41c26b:	je     0x41c2ac
  41c26d:	xor    dh,BYTE PTR [ebx]
  41c26f:	sbb    DWORD PTR [ecx-0x2b],ebp
  41c272:	hlt    
  41c273:	or     al,0xc4
  41c275:	push   esp
  41c276:	loopne 0x41c2f5
  41c278:	sub    DWORD PTR [ecx+0x481592f9],esi
  41c27e:	cmp    al,0x88
  41c280:	das    
  41c281:	bound  ecx,QWORD PTR [esi-0x70]
  41c284:	xor    BYTE PTR [edx+0x217e5855],0x95
  41c28b:	cmp    BYTE PTR [edi+0x473af2aa],dh
  41c291:	sahf   
  41c292:	bound  ebp,QWORD PTR ss:[edi+0x7e]
  41c296:	gs push edi
  41c298:	pop    ss
  41c299:	mov    al,0xc9
  41c29b:	or     BYTE PTR [esi],dl
  41c29d:	daa    
  41c29e:	dec    esp
  41c29f:	aam    0xa2
  41c2a1:	xchg   esi,eax
  41c2a2:	mov    ah,0xfe
  41c2a4:	imul   esi,ebp,0x2a
  41c2a7:	into   
  41c2a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2a9:	dec    esp
  41c2aa:	popa   
  41c2ab:	shr    DWORD PTR [esi+0x11],1
  41c2ae:	cmp    BYTE PTR [ebx],bl
  41c2b0:	jp     0x41c255
  41c2b2:	xchg   BYTE PTR [edi],al
  41c2b4:	xchg   bh,dl
  41c2b6:	xchg   esp,eax
  41c2b7:	mov    ds:0x6b1850fa,al
  41c2bc:	jmp    0xd450f46d
  41c2c1:	fwait
  41c2c2:	(bad)  
  41c2c3:	jbe    0x41c296
  41c2c5:	sbb    al,0x3
  41c2c7:	add    DWORD PTR [ecx-0x5bde47a1],edi
  41c2cd:	pop    ebx
  41c2ce:	fisttp QWORD PTR [esi-0x39]
  41c2d1:	jl     0x41c279
  41c2d3:	in     eax,dx
  41c2d4:	test   al,0x1f
  41c2d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2d7:	pop    ds
  41c2d8:	inc    DWORD PTR ds:0xa45aa98f
  41c2de:	out    0xf9,al
  41c2e0:	add    eax,0x18ca3f6f
  41c2e5:	xor    al,0x34
  41c2e7:	sbb    al,bl
  41c2e9:	and    DWORD PTR [edx-0xb],0xbe6881e6
  41c2f0:	(bad)  
  41c2f1:	icebp  
  41c2f2:	dec    ebp
  41c2f3:	out    0x73,al
  41c2f5:	or     DWORD PTR [edx+ecx*2+0x1c],edx
  41c2f9:	(bad)  
  41c2fa:	dec    edi
  41c2fb:	scas   eax,DWORD PTR es:[edi]
  41c2fc:	sub    DWORD PTR [ebx],esp
  41c2fe:	pop    ebx
  41c2ff:	iret   
  41c300:	sahf   
  41c301:	cmp    edx,esp
  41c303:	je     0x41c2ee
  41c305:	adc    dh,BYTE PTR [eax]
  41c307:	popa   
  41c308:	and    eax,esp
  41c30a:	test   al,0x99
  41c30c:	stos   DWORD PTR es:[edi],eax
  41c30d:	pop    ss
  41c30e:	cli    
  41c30f:	xchg   edx,eax
  41c310:	mov    eax,0xce5d9ac6
  41c315:	mov    esp,0xa3057d84
  41c31a:	jle    0x41c2ff
  41c31c:	mov    bh,0x79
  41c31e:	xchg   ecx,eax
  41c31f:	cs in  al,0xe2
  41c322:	xor    DWORD PTR [ebp+eax*2-0x39e84e40],edx
  41c329:	std    
  41c32a:	loopne 0x41c35d
  41c32c:	push   ebx
  41c32d:	fisubr DWORD PTR [ecx+0x5f50b690]
  41c333:	mov    esp,0xca1252fc
  41c338:	inc    ebp
  41c339:	mov    esp,0xc17c192f
  41c33e:	inc    esi
  41c33f:	popa   
  41c340:	inc    ebx
  41c341:	repz cmp DWORD PTR [eax],ebx
  41c344:	cmp    al,0x6c
  41c346:	ds out dx,eax
  41c348:	rol    BYTE PTR [ecx-0xc4bfdbf],0xa
  41c34f:	cdq    
  41c350:	mov    ch,cl
  41c352:	jo     0x41c343
  41c354:	sub    DWORD PTR [ebx+edx*2-0x679ec4da],edx
  41c35b:	loope  0x41c370
  41c35d:	cdq    
  41c35e:	ins    DWORD PTR es:[edi],dx
  41c35f:	cwde   
  41c360:	scas   al,BYTE PTR es:[edi]
  41c361:	enter  0x982c,0xfc
  41c365:	mov    DWORD PTR [eax],ecx
  41c367:	xchg   ecx,eax
  41c368:	hlt    
  41c369:	sbb    DWORD PTR [ebx+0x4d],ecx
  41c36c:	and    DWORD PTR [ecx-0x5c],edx
  41c36f:	or     eax,DWORD PTR [ebx-0x36]
  41c372:	cmp    eax,0xb04334a2
  41c377:	dec    edi
  41c378:	out    dx,eax
  41c379:	sub    bh,dh
  41c37b:	idiv   ebx
  41c37d:	pusha  
  41c37e:	jae    0x41c329
  41c380:	and    DWORD PTR [edx-0xa379eaa],ebx
  41c386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c387:	cmp    eax,0x73d75fc0
  41c38c:	jl     0x41c3ba
  41c38e:	cs mov esi,0xa0823264
  41c394:	mov    dh,0xb4
  41c396:	mov    ch,0x63
  41c398:	sub    al,0xe5
  41c39a:	push   ds
  41c39b:	or     al,0x1
  41c39d:	add    eax,0x87279d6
  41c3a2:	lea    ecx,[eax*8-0x3e8f3e72]
  41c3a9:	inc    ebp
  41c3aa:	jmp    0x1193:0xe248b4cd
  41c3b1:	cmp    DWORD PTR [edi-0x65],eax
  41c3b4:	ret    
  41c3b5:	jns    0x41c3bf
  41c3b7:	sti    
  41c3b8:	clc    
  41c3b9:	outs   dx,BYTE PTR ds:[esi]
  41c3ba:	mov    al,ds:0x576b1211
  41c3bf:	cmp    eax,0x94548825
  41c3c4:	mov    ebx,0x52850537
  41c3c9:	into   
  41c3ca:	ret    0xd208
  41c3cd:	dec    ebx
  41c3ce:	test   DWORD PTR [ecx],0xaa2cc762
  41c3d4:	jle    0x41c35f
  41c3d6:	dec    ecx
  41c3d7:	mov    esi,0xf4800231
  41c3dc:	xchg   edx,eax
  41c3dd:	(bad)  
  41c3de:	xchg   esi,eax
  41c3df:	les    edi,FWORD PTR [edi]
  41c3e1:	sbb    esi,esi
  41c3e3:	cld    
  41c3e4:	pusha  
  41c3e5:	aam    0x7b
  41c3e7:	mov    ebx,0xe119f00e
  41c3ec:	shl    DWORD PTR [ebx],0x1a
  41c3ef:	fidiv  WORD PTR [ecx+0x1e]
  41c3f2:	pop    eax
  41c3f3:	iret   
  41c3f4:	inc    ebp
  41c3f5:	aaa    
  41c3f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3f7:	sub    ebp,esp
  41c3f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3fb:	sub    esi,DWORD PTR [edx-0x2698db98]
  41c401:	and    al,0x9f
  41c403:	mov    dh,0x88
  41c405:	popf   
  41c406:	xchg   ecx,eax
  41c407:	push   esi
  41c408:	cmc    
  41c409:	sub    ebp,ecx
  41c40b:	outs   dx,DWORD PTR ds:[esi]
  41c40c:	bound  edx,QWORD PTR [esp+eiz*2-0x573f1eb2]
  41c413:	or     cl,BYTE PTR [edx]
  41c415:	pop    ebp
  41c416:	test   al,0x64
  41c418:	out    0xcb,eax
  41c41a:	dec    ebp
  41c41b:	mov    ebx,0xdfd375e8
  41c420:	add    ah,BYTE PTR [ecx]
  41c422:	adc    BYTE PTR [ebp-0xc993196],ah
  41c428:	jmp    0xe97dabc4
  41c42d:	clc    
  41c42e:	(bad)  
  41c42f:	adc    ah,BYTE PTR [edi]
  41c431:	xchg   ebp,eax
  41c432:	imul   ebx,DWORD PTR [edx-0x7f],0xeaba0d5c
  41c439:	cwde   
  41c43a:	(bad)  
  41c43b:	mov    ah,0xbd
  41c43d:	add    ah,ch
  41c43f:	or     BYTE PTR fs:[eax+esi*8+0x7a],dh
  41c444:	cli    
  41c445:	outs   dx,DWORD PTR ds:[esi]
  41c446:	xor    DWORD PTR cs:[edx],edi
  41c449:	(bad)  
  41c44a:	jl     0x41c4a8
  41c44c:	mov    ebx,0x8db10f6b
  41c451:	cmp    eax,0x897407ae
  41c456:	inc    eax
  41c457:	(bad)  
  41c458:	lods   eax,DWORD PTR ds:[esi]
  41c459:	or     cl,bl
  41c45b:	sub    al,0xfa
  41c45d:	test   al,0x8
  41c45f:	ret    0x5a85
  41c462:	cmp    edi,edx
  41c464:	js     0x41c467
  41c466:	ffreep st(4)
  41c468:	imul   ecx,esp,0x7d223198
  41c46e:	hlt    
  41c46f:	mov    ebx,0x22bfc524
  41c474:	push   cs
  41c475:	jae    0x41c407
  41c477:	rcr    DWORD PTR [ecx],0x48
  41c47a:	jecxz  0x41c48c
  41c47c:	adc    dl,BYTE PTR [edx+0x22]
  41c47f:	(bad)  
  41c481:	inc    ebx
  41c482:	dec    edx
  41c483:	push   ebx
  41c484:	dec    ebp
  41c485:	leave  
  41c486:	or     DWORD PTR [ebx+0x3c],edi
  41c489:	daa    
  41c48a:	pop    edx
  41c48b:	adc    dl,bl
  41c48d:	jge    0x41c442
  41c48f:	dec    esp
  41c490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c491:	push   ecx
  41c492:	push   cs
  41c493:	dec    edi
  41c494:	out    0x9e,al
  41c496:	bound  ecx,QWORD PTR [edx]
  41c498:	inc    esi
  41c499:	push   eax
  41c49a:	push   cs
  41c49b:	popa   
  41c49c:	xor    esp,DWORD PTR [ebx-0x1f]
  41c49f:	mov    eax,ds:0xf3638dac
  41c4a4:	and    al,0x1c
  41c4a6:	dec    ebp
  41c4a7:	jg     0x41c455
  41c4a9:	pop    esp
  41c4aa:	leave  
  41c4ab:	cmp    dh,BYTE PTR [ebx]
  41c4ad:	push   esi
  41c4ae:	xchg   BYTE PTR [edx+0x30],ch
  41c4b1:	xor    BYTE PTR [ebp+0x12],dl
  41c4b4:	mov    WORD PTR [esi-0x82bd993],?
  41c4ba:	clc    
  41c4bb:	loope  0x41c51e
  41c4bd:	shr    BYTE PTR [ecx+0x28],1
  41c4c0:	sub    eax,0xdd71cacf
  41c4c5:	sahf   
  41c4c6:	fcomp  DWORD PTR [edx]
  41c4c8:	lods   al,BYTE PTR ds:[esi]
  41c4c9:	pop    es
  41c4ca:	jno    0x41c4d2
  41c4cc:	and    al,0x30
  41c4ce:	jo     0x41c54c
  41c4d0:	mov    dl,0xa8
  41c4d2:	or     eax,0x45557a2a
  41c4d7:	push   eax
  41c4d8:	jecxz  0x41c45e
  41c4da:	cli    
  41c4db:	inc    BYTE PTR [ebx+0x2]
  41c4de:	adc    eax,0xb6a21417
  41c4e3:	push   esi
  41c4e4:	dec    ebp
  41c4e5:	adc    esi,DWORD PTR [esi+0x4d006df9]
  41c4eb:	iret   
  41c4ec:	ja     0x41c4a0
  41c4ee:	ins    BYTE PTR es:[edi],dx
  41c4ef:	gs nop
  41c4f1:	cwde   
  41c4f2:	dec    ebx
  41c4f3:	mov    ds:0x71db8352,eax
  41c4f8:	outs   dx,DWORD PTR ds:[esi]
  41c4f9:	stos   DWORD PTR es:[edi],eax
  41c4fa:	or     eax,0x2e42f1a9
  41c4ff:	or     DWORD PTR [ecx],ebp
  41c501:	cmp    eax,0xf4f0affc
  41c506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c507:	fbld   TBYTE PTR [ebx]
  41c509:	inc    esi
  41c50a:	or     bh,BYTE PTR [esi+ebp*1-0x7d]
  41c50e:	jno    0x41c4ca
  41c510:	scas   eax,DWORD PTR es:[edi]
  41c511:	xor    ch,ah
  41c513:	xor    cl,BYTE PTR [edx]
  41c515:	in     eax,0xbb
  41c517:	jnp    0x41c586
  41c519:	dec    eax
  41c51a:	cdq    
  41c51b:	push   esi
  41c51c:	sbb    eax,0x2299e0ce
  41c521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c522:	aas    
  41c523:	jmp    0x5696:0x302bc511
  41c52a:	sbb    eax,0x50380401
  41c52f:	loop   0x41c58b
  41c531:	out    0xd4,al
  41c533:	inc    ecx
  41c534:	xchg   esi,eax
  41c535:	out    dx,al
  41c536:	or     ah,bh
  41c538:	ror    bh,1
  41c53a:	jmp    0xa6821440
  41c53f:	sbb    dh,bl
  41c541:	fmul   QWORD PTR [eax-0x51]
  41c544:	shl    DWORD PTR [edi],0xbe
  41c547:	out    dx,al
  41c548:	pop    ebp
  41c549:	or     al,0xe0
  41c54b:	mov    WORD PTR [eax-0x5aded602],fs
  41c551:	shl    DWORD PTR [esi-0x1aaf6793],0x18
  41c558:	mov    ch,0x96
  41c55a:	icebp  
  41c55b:	out    dx,eax
  41c55c:	fild   QWORD PTR [eax-0x70]
  41c55f:	repz adc dl,al
  41c562:	inc    edi
  41c563:	sub    DWORD PTR [ecx],edx
  41c565:	or     DWORD PTR [ebx+0x37e18126],ebp
  41c56b:	pop    ds
  41c56c:	and    al,0x8f
  41c56e:	aad    0xbc
  41c570:	fnsave [eax+0x2ba0359f]
  41c576:	lock and eax,0x5dc8c7c9
  41c57c:	int    0xf0
  41c57e:	jp     0x41c51c
  41c580:	jbe    0x41c553
  41c582:	daa    
  41c583:	xor    ecx,eax
  41c585:	xor    edx,eax
  41c587:	sub    ecx,edx
  41c589:	sub    ecx,esi
  41c58b:	xor    ecx,eax
  41c58d:	mov    DWORD PTR [ebp+0x8],ecx
  41c590:	mov    ecx,DWORD PTR [ebp+0x8]
  41c593:	mov    edx,DWORD PTR [ebp+0x8]
  41c596:	xor    ecx,eax
  41c598:	imul   edx,edx,0x5708f2
  41c59e:	add    ecx,esi
  41c5a0:	lea    ecx,[ebp+ecx*4-0x64]
  41c5a4:	mov    edi,DWORD PTR [ecx]
  41c5a6:	add    edx,edi
  41c5a8:	mov    DWORD PTR [ecx],edx
  41c5aa:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ad:	xor    ecx,eax
  41c5af:	add    ecx,esi
  41c5b1:	jne    0x41a1f0
  41c5b7:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ba:	mov    edx,DWORD PTR [ebp+0x8]
  41c5bd:	xor    ecx,eax
  41c5bf:	jmp    0x41e94c
  41c5c4:	js     0x41c5e5
  41c5c6:	pop    ebx
  41c5c7:	out    0xdb,eax
  41c5c9:	jnp    0x41c643
  41c5cb:	rep ins DWORD PTR es:[edi],dx
  41c5cd:	pop    ebx
  41c5ce:	jns    0x41c591
  41c5d0:	hlt    
  41c5d1:	icebp  
  41c5d2:	hlt    
  41c5d3:	mov    esi,?
  41c5d5:	loope  0x41c654
  41c5d7:	jp     0x41c5e3
  41c5d9:	pop    edi
  41c5da:	jp     0x41c656
  41c5dc:	idiv   dl
  41c5de:	push   ecx
  41c5df:	xchg   edx,eax
  41c5e0:	call   0xf9727da1
  41c5e5:	and    eax,0x999b95ae
  41c5ea:	fisubr WORD PTR [edi-0x46c43495]
  41c5f0:	mov    ecx,0xc09440f5
  41c5f5:	mov    eax,0xf6217285
  41c5fa:	fcom   QWORD PTR [esp+ecx*8]
  41c5fd:	pop    ebx
  41c5fe:	sbb    al,0xce
  41c600:	mov    edi,0x3c8d448a
  41c605:	test   eax,0x4c69157
  41c60a:	sar    DWORD PTR [ebx+0x7],cl
  41c60d:	xlat   BYTE PTR ds:[ebx]
  41c60e:	and    dh,bl
  41c610:	rcr    bh,1
  41c612:	mov    cl,0x33
  41c614:	xchg   DWORD PTR [ebp*1-0x5a2b5cfa],ecx
  41c61b:	xor    ecx,DWORD PTR [ebp+0x3c]
  41c61e:	gs jge 0x41c5b7
  41c621:	rol    ecx,0x7c
  41c624:	(bad)
  41c627:	mov    eax,0xc970f808
  41c62c:	ret    0xf37
  41c62f:	in     al,dx
  41c630:	push   ds
  41c631:	cli    
  41c632:	and    dh,BYTE PTR [ebp+ebx*8+0x76]
  41c636:	dec    edi
  41c637:	call   0x5d6da9a9
  41c63c:	sub    esi,esp
  41c63e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c63f:	jne    0x41c612
  41c641:	jae    0x41c645
  41c643:	call   0x6bb9f065
  41c648:	inc    ecx
  41c649:	xchg   ebx,eax
  41c64a:	enter  0xc98c,0x5e
  41c64e:	xor    eax,0x9cb4ed5e
  41c653:	call   0x8dca80a5
  41c658:	mov    ds:0x3ca0089b,eax
  41c65d:	xchg   edi,eax
  41c65e:	pop    eax
  41c65f:	jno    0x41c66d
  41c661:	sti    
  41c662:	mov    WORD PTR [ebx-0x5457f3ae],cs
  41c668:	scas   eax,DWORD PTR es:[edi]
  41c669:	and    ecx,edx
  41c66b:	and    ebx,esp
  41c66d:	jne    0x41c639
  41c66f:	or     DWORD PTR [ebp-0x765624a7],0x69adb7c2
  41c679:	mov    edi,edx
  41c67b:	pop    ds
  41c67c:	cmp    ah,BYTE PTR [ebx]
  41c67e:	jbe    0x41c660
  41c680:	add    al,0xd3
  41c682:	aam    0xe6
  41c684:	jl     0x41c619
  41c686:	pop    edi
  41c687:	jl     0x41c6fe
  41c689:	cmp    eax,0x617bcf11
  41c68e:	ins    BYTE PTR es:[edi],dx
  41c68f:	mov    esp,0xdc445d07
  41c694:	repnz or eax,0x94238a34
  41c69a:	add    eax,0xe05ecf78
  41c69f:	cld    
  41c6a0:	inc    edi
  41c6a1:	sbb    DWORD PTR [ecx+0x58],esp
  41c6a4:	mov    bl,0xb7
  41c6a6:	fdiv   QWORD PTR [edi+ebp*4-0x330c169e]
  41c6ad:	repnz and DWORD PTR [eax],0x8fdc1883
  41c6b4:	call   0x584925bd
  41c6b9:	sar    DWORD PTR [ebx],1
  41c6bb:	push   ss
  41c6bc:	cwde   
  41c6bd:	or     eax,0xf6a4f751
  41c6c2:	or     BYTE PTR [eax+0x4e],dl
  41c6c5:	mov    bl,0xfa
  41c6c7:	xor    BYTE PTR [edi],dh
  41c6c9:	pusha  
  41c6ca:	outs   dx,BYTE PTR ds:[esi]
  41c6cb:	cwde   
  41c6cc:	push   ebp
  41c6cd:	jbe    0x41c69a
  41c6cf:	idiv   BYTE PTR [edx]
  41c6d1:	xor    eax,0x88bc3ef4
  41c6d6:	jno    0x41c729
  41c6d8:	adc    bh,BYTE PTR [ebp+0x274eff5c]
  41c6de:	loopne 0x41c712
  41c6e0:	test   DWORD PTR [eax+0x4b06baed],esp
  41c6e6:	inc    ebx
  41c6e7:	inc    esp
  41c6e8:	jle    0x41c72e
  41c6ea:	loopne 0x41c743
  41c6ec:	je     0x41c6b1
  41c6ee:	sbb    eax,0x92f4e442
  41c6f3:	data16 fs out 0xcb,al
  41c6f7:	stos   BYTE PTR es:[edi],al
  41c6f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6f9:	nop
  41c6fa:	mov    ds:0xe61f4bac,al
  41c6ff:	mov    al,0x83
  41c701:	sbb    ecx,DWORD PTR [edi+0x8d77b28]
  41c707:	call   0x13ae:0xaa1bb43a
  41c70e:	aaa    
  41c70f:	mov    al,0xf1
  41c711:	push   edi
  41c712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c713:	dec    ecx
  41c714:	mov    ch,0xc6
  41c716:	xor    eax,0xb244ce13
  41c71b:	in     al,0xde
  41c71d:	dec    edx
  41c71e:	xchg   ebp,eax
  41c71f:	inc    esp
  41c720:	in     al,0x1c
  41c722:	into   
  41c723:	or     al,0x7c
  41c725:	xor    eax,0x5d958017
  41c72a:	mov    esp,0x5f0ec909
  41c72f:	(bad)  
  41c730:	aaa    
  41c731:	jp     0x41c797
  41c733:	(bad)  
  41c734:	sbb    edx,DWORD PTR [ecx]
  41c736:	int3   
  41c737:	mov    esi,ss
  41c739:	jbe    0x41c6f5
  41c73b:	call   0xbb1849ea
  41c740:	inc    edx
  41c741:	add    BYTE PTR [eax-0x68629f70],al
  41c747:	dec    ecx
  41c748:	popf   
  41c749:	mov    dh,0xe2
  41c74b:	shr    BYTE PTR [esi+0x6be7dfe8],0x2
  41c752:	in     al,dx
  41c753:	adc    DWORD PTR [esi],0x462a07c0
  41c759:	(bad)  
  41c75a:	icebp  
  41c75b:	fnstenv [edi-0x28]
  41c75e:	rcl    DWORD PTR [esi-0x38],0x53
  41c762:	fild   WORD PTR [esi-0x2a26882f]
  41c768:	icebp  
  41c769:	push   ss
  41c76a:	ins    DWORD PTR es:[edi],dx
  41c76b:	je     0x69291
  41c771:	sub    eax,0x420a3da0
  41c776:	cmc    
  41c777:	and    DWORD PTR [edx-0x21edbdea],ecx
  41c77d:	sub    al,0x3
  41c77f:	leave  
  41c780:	jl     0x41c7c2
  41c782:	and    DWORD PTR [ebx],ebp
  41c784:	or     bl,ah
  41c786:	call   0xb7ac:0x65c56eeb
  41c78d:	inc    ebx
  41c78e:	pop    ecx
  41c78f:	cdq    
  41c790:	fmul   QWORD PTR [edx]
  41c792:	test   eax,0xb0701771
  41c797:	and    ch,al
  41c799:	sub    ebx,eax
  41c79b:	push   eax
  41c79c:	mov    ebx,0x56bd36cf
  41c7a1:	ins    DWORD PTR es:[edi],dx
  41c7a2:	idiv   DWORD PTR [eax]
  41c7a4:	shl    BYTE PTR [edi-0x5e],0xb9
  41c7a8:	dec    esp
  41c7a9:	or     eax,0x97c210e4
  41c7ae:	dec    ebx
  41c7af:	sti    
  41c7b0:	fild   WORD PTR [eax]
  41c7b2:	xchg   edi,eax
  41c7b3:	inc    esp
  41c7b4:	dec    esi
  41c7b5:	leave  
  41c7b6:	aas    
  41c7b7:	pop    ecx
  41c7b8:	test   ch,bl
  41c7ba:	fwait
  41c7bb:	std    
  41c7bc:	sar    DWORD PTR [eax],1
  41c7be:	(bad)  
  41c7bf:	hlt    
  41c7c0:	push   ebx
  41c7c1:	xchg   ecx,eax
  41c7c2:	retf   0xe79f
  41c7c5:	in     al,0xc4
  41c7c7:	jae    0x41c823
  41c7c9:	imul   ebp,DWORD PTR [eax+ebp*4-0x5a35d36f],0x68ea496f
  41c7d4:	mov    edi,0xb6cb238f
  41c7d9:	inc    edi
  41c7da:	ja     0x41c79a
  41c7dc:	ins    DWORD PTR es:[edi],dx
  41c7dd:	scas   al,BYTE PTR es:[edi]
  41c7de:	cmc    
  41c7df:	adc    BYTE PTR [ebx+0x2f],bh
  41c7e2:	fldlg2 
  41c7e4:	out    dx,al
  41c7e5:	fbld   TBYTE PTR [esi]
  41c7e7:	mov    dl,0x4e
  41c7e9:	or     DWORD PTR [ebx+eax*2-0x3f346c02],esi
  41c7f0:	ret    
  41c7f1:	out    0x3c,al
  41c7f3:	dec    edx
  41c7f4:	or     DWORD PTR [ecx],0x14e1359b
  41c7fa:	push   cs
  41c7fb:	cld    
  41c7fc:	call   0x5f28:0xe448f87b
  41c803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c804:	inc    esp
  41c805:	cmp    ah,ch
  41c807:	inc    eax
  41c808:	mov    esp,0xd2e9f934
  41c80d:	add    bl,dl
  41c80f:	sti    
  41c810:	addr16 mov ds:0xdf4e,al
  41c814:	sbb    dl,BYTE PTR [esi]
  41c816:	sub    DWORD PTR [esi-0xcc35e90],edx
  41c81c:	cmp    DWORD PTR [esi-0x3988b7f4],eax
  41c822:	in     eax,0xe3
  41c824:	loop   0x41c7b5
  41c826:	lds    edi,FWORD PTR [ebx+edi*1]
  41c829:	push   edx
  41c82a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c82b:	and    bl,BYTE PTR [esi-0x756f5403]
  41c831:	cli    
  41c832:	(bad)  
  41c833:	adc    eax,0x1477388b
  41c838:	cwde   
  41c839:	pop    ecx
  41c83a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c83b:	pop    ebp
  41c83c:	arpl   WORD PTR [esi+edx*1+0x43],sp
  41c840:	fild   QWORD PTR [eax+edx*8]
  41c843:	and    al,0x6d
  41c845:	iret   
  41c846:	pop    esp
  41c847:	bound  eax,QWORD PTR [ecx]
  41c849:	in     eax,dx
  41c84a:	mov    al,ds:0x1c85230a
  41c84f:	add    edx,edx
  41c851:	or     cl,ah
  41c853:	out    dx,eax
  41c854:	clc    
  41c855:	and    DWORD PTR [esi+0x54bdce54],ebp
  41c85b:	lea    edi,[ebp+0xa9b48de]
  41c861:	lahf   
  41c862:	nop
  41c863:	lock fild QWORD PTR ss:[esi+0x33]
  41c868:	inc    esi
  41c869:	jp     0x41c84e
  41c86b:	add    cl,BYTE PTR [eax-0x546e5769]
  41c871:	stc    
  41c872:	cmp    bh,BYTE PTR [eax-0x310a101d]
  41c878:	enter  0x7925,0x9e
  41c87c:	mov    al,ds:0xaef8da1e
  41c881:	js     0x41c8b2
  41c883:	popf   
  41c884:	js     0x41c80d
  41c886:	cwde   
  41c887:	xchg   ebp,eax
  41c888:	jbe    0x41c83d
  41c88a:	mov    ds:0xff7423e7,al
  41c88f:	xchg   ebp,eax
  41c890:	push   cs
  41c891:	jp     0x41c84b
  41c893:	cs out 0x64,al
  41c896:	mov    ch,0xec
  41c898:	jnp    0x41c8de
  41c89a:	fwait
  41c89b:	pop    es
  41c89c:	test   DWORD PTR [ebx+0x1a],esi
  41c89f:	ins    BYTE PTR es:[edi],dx
  41c8a0:	fimul  WORD PTR [edi]
  41c8a2:	jno    0x41c876
  41c8a4:	mov    ch,0x72
  41c8a6:	and    cl,BYTE PTR [edi+0x4]
  41c8a9:	xchg   BYTE PTR [ecx+0x10],ch
  41c8ac:	adc    eax,0x16cde940
  41c8b1:	mov    ch,BYTE PTR [edx-0xf]
  41c8b4:	and    DWORD PTR [edx+0x468d31c8],edi
  41c8ba:	push   ebp
  41c8bb:	mov    eax,0xffa353fe
  41c8c0:	pop    di
  41c8c2:	xchg   esi,eax
  41c8c3:	icebp  
  41c8c4:	inc    ecx
  41c8c5:	ins    BYTE PTR es:[edi],dx
  41c8c6:	ja     0x41c907
  41c8c8:	or     DWORD PTR [edi+ebx*2-0x69],ebp
  41c8cc:	push   0xffffffdb
  41c8ce:	pop    ss
  41c8cf:	ins    DWORD PTR es:[edi],dx
  41c8d0:	cmp    BYTE PTR [esp+ebx*2+0x16d4ac74],dl
  41c8d7:	pop    ebx
  41c8d8:	jge    0x41c91a
  41c8da:	ds xchg ecx,eax
  41c8dc:	push   ecx
  41c8dd:	in     al,dx
  41c8de:	aas    
  41c8df:	mov    bh,0x4a
  41c8e2:	cs xor al,0xc9
  41c8e5:	jb     0x41c886
  41c8e7:	sub    eax,0x2d02ca61
  41c8ec:	in     al,dx
  41c8ed:	xchg   DWORD PTR [edx],ebx
  41c8ef:	xor    BYTE PTR [esi-0x2d4c7dce],al
  41c8f5:	add    dh,BYTE PTR [edx]
  41c8f7:	inc    edi
  41c8f8:	xchg   DWORD PTR [edi-0x2c11a029],esi
  41c8fe:	jg     0x41c977
  41c900:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41c902:	aaa    
  41c903:	aaa    
  41c904:	int    0x5f
  41c906:	arpl   WORD PTR ds:0x2ac0896d,cx
  41c90c:	mov    edi,0xaaf00b69
  41c911:	add    edi,DWORD PTR [esi+edx*1+0x6f]
  41c915:	stc    
  41c916:	mov    ebp,0x6f41d21c
  41c91b:	stc    
  41c91c:	pop    edx
  41c91d:	lea    eax,[esi+0x6b59d4ce]
  41c923:	push   ebx
  41c924:	leave  
  41c925:	nop
  41c926:	pop    ds
  41c927:	and    eax,0xc2d9b04e
  41c92c:	popa   
  41c92d:	push   edx
  41c92e:	sub    ebp,edi
  41c930:	mov    ds:0x1ba663d2,al
  41c935:	pop    eax
  41c936:	add    al,0xea
  41c938:	dec    ecx
  41c939:	jne    0x41c94c
  41c93b:	push   edi
  41c93c:	push   ds
  41c93d:	rcr    al,cl
  41c93f:	cwd    
  41c941:	mov    WORD PTR [eax+0x3a8f3049],es
  41c947:	pop    es
  41c948:	pop    edx
  41c949:	jmp    0x105:0x5bba9083
  41c950:	lock mov edx,0x274997b1
  41c956:	sub    bh,BYTE PTR [ebx+0xa11b571]
  41c95c:	iret   
  41c95d:	out    dx,al
  41c95e:	mov    ds:0x107e5935,eax
  41c963:	mov    eax,0x43890a7
  41c968:	dec    esi
  41c969:	aas    
  41c96a:	xchg   edi,eax
  41c96b:	xor    eax,0x107cf424
  41c970:	(bad)  
  41c971:	outs   dx,DWORD PTR ds:[esi]
  41c972:	cmp    esi,DWORD PTR [esi]
  41c974:	jnp    0x41c922
  41c976:	adc    BYTE PTR [edi],ch
  41c978:	add    BYTE PTR [ecx-0x51a83564],bl
  41c97e:	fs fwait
  41c980:	rol    BYTE PTR [eax],1
  41c982:	xor    eax,0xc058b7db
  41c987:	push   eax
  41c988:	dec    ebp
  41c989:	(bad)  
  41c98a:	xlat   BYTE PTR ds:[ebx]
  41c98b:	loop   0x41c98f
  41c98d:	cld    
  41c98e:	test   DWORD PTR ds:0x2856d5a3,eax
  41c994:	ins    DWORD PTR es:[edi],dx
  41c995:	out    0xed,al
  41c997:	inc    ebx
  41c998:	icebp  
  41c999:	sti    
  41c99a:	jne    0x41ca07
  41c99c:	hlt    
  41c99d:	clc    
  41c99e:	and    bh,BYTE PTR [edi+0x7c]
  41c9a1:	mov    ecx,0x1b8cc23b
  41c9a6:	or     dl,bh
  41c9a8:	inc    ebx
  41c9a9:	inc    DWORD PTR [ebx+0x34]
  41c9ac:	ja     0x41ca23
  41c9ae:	stos   DWORD PTR es:[edi],eax
  41c9af:	fs fwait
  41c9b1:	adc    ebp,DWORD PTR [eax-0x69]
  41c9b4:	and    edx,edx
  41c9b6:	mov    ecx,ss
  41c9b8:	mov    edi,DWORD PTR [ebp+0x6e]
  41c9bb:	dec    edi
  41c9bc:	adc    DWORD PTR [ecx-0x8],0xcacf9d6f
  41c9c3:	add    esi,eax
  41c9c5:	jnp    0x41c9d6
  41c9c7:	stc    
  41c9c8:	or     DWORD PTR [edi],ebx
  41c9ca:	jb     0x41c9ca
  41c9cc:	mov    esp,0x74a8107b
  41c9d1:	xchg   ebx,eax
  41c9d2:	jge    0x41c978
  41c9d4:	pop    ebx
  41c9d5:	cld    
  41c9d6:	dec    ecx
  41c9d7:	call   0x216cd57b
  41c9dc:	inc    edi
  41c9dd:	mov    ecx,0xa8f47d85
  41c9e2:	and    ebx,DWORD PTR [eax]
  41c9e4:	ret    0x7aed
  41c9e7:	sub    DWORD PTR [ebp+edx*1-0x3d],eax
  41c9eb:	mov    edx,0x67c7cd22
  41c9f0:	leave  
  41c9f1:	cld    
  41c9f2:	ss xchg edx,eax
  41c9f4:	test   BYTE PTR ds:0x27ba6939,0xab
  41c9fb:	mov    BYTE PTR [esp+eax*8-0x46],ch
  41c9ff:	lock mov BYTE PTR [ebx],ah
  41ca02:	cmp    cl,al
  41ca04:	ins    DWORD PTR es:[edi],dx
  41ca05:	xchg   BYTE PTR [ebp-0x1d],cl
  41ca08:	sub    BYTE PTR [ebx],al
  41ca0a:	addr16 test al,0x91
  41ca0d:	lods   al,BYTE PTR ds:[esi]
  41ca0e:	mov    ch,0x20
  41ca10:	mov    ch,0xeb
  41ca12:	push   ebp
  41ca13:	mov    gs:0x9a272b22,al
  41ca19:	mov    cs:0xab277481,eax
  41ca1f:	mov    dh,0xfc
  41ca21:	push   ebp
  41ca22:	dec    eax
  41ca23:	xor    BYTE PTR [edi-0x7f],ch
  41ca26:	cmp    BYTE PTR [eax-0x46],dl
  41ca29:	or     dl,0x75
  41ca2c:	daa    
  41ca2d:	ret    
  41ca2e:	xchg   esi,eax
  41ca2f:	pop    ebx
  41ca30:	arpl   si,dx
  41ca32:	ret    0xff98
  41ca35:	repnz sahf 
  41ca37:	adc    esp,ebx
  41ca39:	aam    0x70
  41ca3b:	cmp    eax,0x5d22aa96
  41ca40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca41:	mov    eax,0x35a987b6
  41ca46:	clc    
  41ca47:	in     al,0x7d
  41ca49:	and    BYTE PTR [edi-0x20],bh
  41ca4c:	push   edx
  41ca4d:	cmp    eax,0xbb427360
  41ca52:	sub    BYTE PTR [ebx+eiz*4-0x74],bl
  41ca56:	aam    0x53
  41ca58:	sahf   
  41ca59:	stos   DWORD PTR es:[edi],eax
  41ca5a:	pushf  
  41ca5b:	mov    ebp,0x2a8ed19a
  41ca60:	sub    DWORD PTR [eax-0x778f33e4],edi
  41ca66:	jae    0x41ca72
  41ca68:	cs loope 0x41ca38
  41ca6b:	mov    eax,ds:0x3e457f5b
  41ca70:	or     BYTE PTR [edi-0x14],0x73
  41ca74:	push   es
  41ca75:	icebp  
  41ca76:	loop   0x41caa0
  41ca78:	daa    
  41ca79:	out    dx,eax
  41ca7a:	fld    TBYTE PTR [esi+0x5e47089d]
  41ca80:	out    dx,eax
  41ca81:	sub    al,0xf3
  41ca83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca84:	aad    0x7d
  41ca86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca87:	xchg   ebx,eax
  41ca88:	or     al,0xcd
  41ca8a:	mov    cl,0x74
  41ca8c:	loop   0x41ca7b
  41ca8e:	arpl   WORD PTR [ebp+ebx*2-0x386aa827],bx
  41ca95:	inc    esi
  41ca96:	mov    bl,0x91
  41ca98:	scas   al,BYTE PTR es:[edi]
  41ca99:	xor    DWORD PTR [ebp-0x77],edi
  41ca9c:	ins    DWORD PTR es:[edi],dx
  41ca9d:	(bad)  
  41ca9e:	mov    ebp,DWORD PTR [ecx]
  41caa0:	pop    ds
  41caa1:	mov    bl,0xf6
  41caa3:	loopne 0x41ca76
  41caa5:	sub    eax,0xa391d7ab
  41caaa:	sar    BYTE PTR [ebp-0x57ce0833],cl
  41cab0:	inc    edx
  41cab1:	stos   DWORD PTR es:[edi],eax
  41cab2:	(bad)  
  41cab3:	push   es
  41cab4:	sahf   
  41cab5:	inc    edx
  41cab6:	rcl    esi,cl
  41cab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cab9:	jbe    0x41cace
  41cabb:	out    dx,al
  41cabc:	add    ebp,DWORD PTR [edi-0x6445bec8]
  41cac2:	mov    edx,gs
  41cac4:	stos   DWORD PTR es:[edi],eax
  41cac5:	pop    es
  41cac6:	(bad)  
  41cac8:	ja     0x41ca7e
  41caca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cacb:	daa    
  41cacc:	popf   
  41cacd:	push   ebx
  41cace:	or     ebp,DWORD PTR [esp+edx*8-0x4bf12e3c]
  41cad5:	out    0x76,eax
  41cad7:	inc    esi
  41cad8:	add    eax,0x92379cf4
  41cadd:	nop
  41cade:	push   ss
  41cadf:	shl    DWORD PTR ds:0xa864c69d,0x86
  41cae6:	xchg   DWORD PTR [ecx+0x11],edi
  41cae9:	outs   dx,DWORD PTR ds:[esi]
  41caea:	and    BYTE PTR [edx],0xca
  41caed:	mov    ebx,0x2e56584
  41caf2:	enter  0x8817,0xf1
  41caf6:	ret    
  41caf7:	mov    ebp,0xe3bc075e
  41cafc:	xlat   BYTE PTR ds:[ebx]
  41cafd:	dec    eax
  41cafe:	xor    BYTE PTR [ebp+0x335d3247],dl
  41cb04:	outs   dx,DWORD PTR ds:[esi]
  41cb05:	mov    ch,0x17
  41cb07:	pushf  
  41cb08:	xor    eax,0xd1741fee
  41cb0d:	fnstcw WORD PTR [edx+0x596aa633]
  41cb13:	repnz dec ecx
  41cb15:	ret    0x4775
  41cb18:	fimul  DWORD PTR [ebx-0x78]
  41cb1b:	pop    ss
  41cb1c:	jae    0x41cae1
  41cb1e:	dec    eax
  41cb1f:	out    dx,eax
  41cb20:	xchg   ebp,eax
  41cb21:	jecxz  0x41cae4
  41cb23:	sbb    cl,BYTE PTR [ecx+0x1b1c7a3a]
  41cb29:	jb     0x41cb78
  41cb2b:	in     eax,0xf3
  41cb2d:	jmp    0x7ed1:0x877b08e7
  41cb34:	and    BYTE PTR [ebx+0x66],bh
  41cb37:	jns    0x41cb93
  41cb39:	loope  0x41cad7
  41cb3b:	add    BYTE PTR [edi-0x6cb38949],bl
  41cb41:	dec    eax
  41cb42:	dec    esi
  41cb43:	xchg   ebp,eax
  41cb44:	es ss jmp 0x8943:0x2552ce9
  41cb4d:	mov    edi,0xf15cca82
  41cb52:	mov    ebx,0x47e86308
  41cb57:	xchg   BYTE PTR [edx-0x4f],cl
  41cb5a:	sar    DWORD PTR [ebp-0xc],1
  41cb5d:	fstp   DWORD PTR [ebx+0x1426fab3]
  41cb63:	call   0x7071:0x73fd836d
  41cb6a:	call   0x232b:0x6199b61a
  41cb71:	dec    ebp
  41cb72:	mov    esi,0x5d5fcc36
  41cb77:	push   ds
  41cb78:	and    bh,BYTE PTR [ecx]
  41cb7a:	(bad)  
  41cb7b:	rcr    DWORD PTR [eax+0x2f],cl
  41cb7e:	inc    eax
  41cb7f:	or     al,0x2b
  41cb81:	or     al,ah
  41cb83:	(bad)  
  41cb84:	pop    esp
  41cb85:	(bad)  
  41cb86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb87:	inc    eax
  41cb88:	pushf  
  41cb89:	add    DWORD PTR [esi-0x2f],ecx
  41cb8c:	jmp    0x41cb6a
  41cb8e:	xchg   ebx,eax
  41cb8f:	wrmsr  
  41cb91:	mov    ebp,0x6fc33d80
  41cb96:	aad    0x90
  41cb98:	inc    ebp
  41cb99:	ja     0x41cb91
  41cb9b:	scas   al,BYTE PTR es:[edi]
  41cb9c:	mov    ebx,0x3f129b29
  41cba1:	push   ebp
  41cba2:	mov    ebx,es
  41cba4:	aad    0x3f
  41cba6:	test   al,0xad
  41cba8:	xchg   ebp,eax
  41cba9:	out    dx,al
  41cbaa:	sbb    eax,0x43ef6252
  41cbaf:	ss mov ah,0x4e
  41cbb2:	and    bl,BYTE PTR [eax-0x10a455ab]
  41cbb8:	jl     0x41cbb6
  41cbba:	pop    ds
  41cbbb:	hlt    
  41cbbc:	push   0x10639685
  41cbc1:	or     al,BYTE PTR ds:0xfa9defa1
  41cbc7:	push   es
  41cbc8:	addr16 xchg ebp,eax
  41cbca:	sbb    al,0x9a
  41cbcc:	lahf   
  41cbcd:	mov    ds:0xf7a8ff14,eax
  41cbd2:	test   BYTE PTR [esi+0x22958dab],dh
  41cbd8:	pop    esp
  41cbd9:	pop    es
  41cbda:	repnz adc DWORD PTR [edi-0x795d3391],ebp
  41cbe1:	imul   esp,DWORD PTR [edi+0x49540edc],0x2e1ecc2c
  41cbeb:	xchg   ebp,eax
  41cbec:	lea    edi,[ebp+0xb709412]
  41cbf2:	xchg   DWORD PTR [ebx],ebp
  41cbf4:	dec    ebp
  41cbf5:	sub    al,0x44
  41cbf7:	pushf  
  41cbf8:	push   edx
  41cbf9:	repz int 0x74
  41cbfc:	mov    ds:0x5d371f82,al
  41cc01:	out    dx,eax
  41cc02:	pop    ss
  41cc03:	dec    ebx
  41cc04:	pop    ebx
  41cc05:	mov    ds,WORD PTR [ebx]
  41cc07:	cmp    eax,0x3a2d1abc
  41cc0c:	pop    ebx
  41cc0d:	fbstp  TBYTE PTR [ebx+0x2c]
  41cc10:	xchg   edx,eax
  41cc11:	sahf   
  41cc12:	ror    BYTE PTR [edi+edx*1],cl
  41cc15:	fisubr DWORD PTR [ecx]
  41cc17:	dec    eax
  41cc18:	loope  0x41cc51
  41cc1a:	cmp    eax,0x1e66621f
  41cc1f:	mov    ecx,0x4b20d0ce
  41cc24:	adc    eax,0xc1b73b6b
  41cc29:	cmp    eax,0x5de9f47f
  41cc2e:	out    dx,al
  41cc2f:	fidivr DWORD PTR ss:[ecx-0x407d4003]
  41cc36:	or     BYTE PTR [edi-0x2c5ca721],0x70
  41cc3d:	(bad)  
  41cc3e:	pop    edi
  41cc3f:	cwde   
  41cc40:	shl    al,cl
  41cc42:	mov    esp,0x2fb02848
  41cc47:	mov    ebp,0x2c832dd9
  41cc4c:	in     al,0x30
  41cc4e:	sub    DWORD PTR ds:0x1481be85,edi
  41cc54:	push   ebp
  41cc55:	jnp    0x41cbee
  41cc57:	jge    0x41cc9d
  41cc59:	aas    
  41cc5a:	jo     0x41cc15
  41cc5c:	dec    ebp
  41cc5d:	fist   WORD PTR [ecx+0x57446908]
  41cc63:	xor    BYTE PTR [edi-0x11093155],dh
  41cc69:	add    eax,0x530f221e
  41cc6e:	aaa    
  41cc6f:	pop    ss
  41cc70:	outs   dx,DWORD PTR ds:[esi]
  41cc71:	out    dx,eax
  41cc72:	inc    edi
  41cc73:	int    0x1f
  41cc75:	iret   
  41cc76:	sub    DWORD PTR [esi-0x3c],esi
  41cc79:	xchg   esi,eax
  41cc7a:	mov    ebp,0x5aa81c66
  41cc7f:	pop    ebp
  41cc80:	je     0x41cc09
  41cc82:	loop   0x41ccae
  41cc84:	retf   
  41cc85:	pop    edi
  41cc86:	pushf  
  41cc87:	mov    esp,0x35b64899
  41cc8c:	mov    eax,?
  41cc8e:	in     eax,0x29
  41cc90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc91:	popf   
  41cc92:	mov    ds,WORD PTR [edi+eiz*2]
  41cc95:	push   ecx
  41cc96:	xor    ch,BYTE PTR [esi+0x342f8ec6]
  41cc9c:	pop    edi
  41cc9d:	push   es
  41cc9e:	cmp    ch,BYTE PTR [ecx-0x49]
  41cca1:	leave  
  41cca2:	pop    ecx
  41cca3:	mov    al,0x4c
  41cca5:	and    DWORD PTR [ecx],ebp
  41cca7:	mov    cl,0xfe
  41cca9:	dec    edx
  41ccaa:	or     eax,0xd4437d3b
  41ccaf:	icebp  
  41ccb0:	not    DWORD PTR [ecx-0x6198e2f4]
  41ccb6:	sti    
  41ccb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccb8:	in     eax,0x58
  41ccba:	dec    ebp
  41ccbb:	std    
  41ccbc:	ds ins DWORD PTR es:[edi],dx
  41ccbe:	mov    DWORD PTR [eax],ecx
  41ccc0:	les    esp,FWORD PTR [ecx]
  41ccc2:	loop   0x41cd0f
  41ccc4:	xor    edx,DWORD PTR [ecx]
  41ccc6:	pop    edx
  41ccc7:	fdiv   DWORD PTR [esi+0x35]
  41ccca:	mov    edi,0x87e8da0f
  41cccf:	call   0xb01cdef9
  41ccd4:	mov    dl,0xa0
  41ccd6:	xor    DWORD PTR [edx+edx*2+0x2d],eax
  41ccda:	xchg   ebx,esp
  41ccdc:	repz pop edx
  41ccde:	mov    eax,0xcb81143d
  41cce3:	inc    ebp
  41cce4:	ins    DWORD PTR es:[edi],dx
  41cce5:	mov    edx,0x753735e
  41ccea:	adc    dh,bh
  41ccec:	lds    edi,FWORD PTR [ebx]
  41ccee:	mov    cl,BYTE PTR [esi*1-0x634990fe]
  41ccf5:	xchg   DWORD PTR [ecx+0x2ae3a31e],esi
  41ccfb:	lods   al,BYTE PTR ds:[esi]
  41ccfc:	or     ebp,DWORD PTR [edi]
  41ccfe:	popa   
  41ccff:	(bad)  
  41cd00:	jge    0x41ccfb
  41cd02:	pop    esp
  41cd03:	adc    eax,0xcb21565
  41cd08:	xchg   edi,eax
  41cd09:	jae    0x41ccb3
  41cd0b:	hlt    
  41cd0c:	div    BYTE PTR [eax]
  41cd0e:	fs jge 0x41cd03
  41cd11:	and    bl,cl
  41cd13:	fadd   QWORD PTR [ebx-0x7a]
  41cd16:	add    al,0xcc
  41cd18:	sar    bl,1
  41cd1a:	ins    BYTE PTR es:[edi],dx
  41cd1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd1c:	fsub   st(4),st
  41cd1e:	imul   DWORD PTR [ecx+0x9b17527]
  41cd24:	jno    0x41cd61
  41cd26:	hlt    
  41cd27:	add    ebx,DWORD PTR [ebx-0x22]
  41cd2a:	xchg   esi,eax
  41cd2b:	xchg   ecx,eax
  41cd2c:	jge    0x41ccf7
  41cd2e:	dec    ebx
  41cd2f:	jo     0x41ccd4
  41cd31:	test   DWORD PTR [ebx],ebx
  41cd33:	mov    ah,0xf2
  41cd35:	sar    DWORD PTR [esi],1
  41cd37:	(bad)  
  41cd38:	aam    0x25
  41cd3a:	fnstenv [esp+esi*1-0x7a]
  41cd3e:	push   ebp
  41cd3f:	popfw  
  41cd41:	sub    DWORD PTR [edx],edx
  41cd43:	imul   ebp,DWORD PTR [edi+edx*2],0xeee4acd2
  41cd4a:	cmp    ecx,edi
  41cd4c:	xor    eax,0xfe5d91a4
  41cd51:	push   cs
  41cd52:	mov    edi,0x6b4d881a
  41cd57:	jl     0x41cd4f
  41cd59:	dec    ebx
  41cd5a:	mov    bl,0x5f
  41cd5c:	mov    ch,BYTE PTR [edx+0x59]
  41cd5f:	inc    ebp
  41cd60:	(bad)  
  41cd61:	iret   
  41cd62:	lock mov bh,0xe1
  41cd65:	in     al,0x91
  41cd67:	stos   DWORD PTR es:[edi],eax
  41cd68:	loopne 0x41cdc9
  41cd6a:	iret   
  41cd6b:	cmp    DWORD PTR [edx],ebp
  41cd6d:	mov    WORD PTR [edx-0x2269fac9],ss
  41cd73:	das    
  41cd74:	sub    eax,0x10136719
  41cd79:	or     esp,ebp
  41cd7b:	jns    0x41cd94
  41cd7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd7e:	pop    ebp
  41cd7f:	add    BYTE PTR [edi+edx*4],al
  41cd82:	fcomp  DWORD PTR [ebx]
  41cd84:	mov    esi,0xa7f16c25
  41cd89:	and    al,0x4b
  41cd8b:	ins    BYTE PTR es:[edi],dx
  41cd8c:	cmp    bh,BYTE PTR [edi-0x6e]
  41cd8f:	mov    cl,0x14
  41cd91:	add    al,0x2d
  41cd93:	pushf  
  41cd94:	retf   
  41cd95:	xor    DWORD PTR [ecx-0x5c],eax
  41cd98:	pop    ss
  41cd99:	test   DWORD PTR [edx-0x78],edx
  41cd9c:	sbb    ebp,DWORD PTR [edx]
  41cd9e:	mov    ds:0xf257e87,al
  41cda3:	xchg   edx,eax
  41cda4:	aad    0x40
  41cda6:	stos   BYTE PTR es:[edi],al
  41cda7:	rcl    bl,0x91
  41cdaa:	in     eax,0x6b
  41cdac:	xchg   ebp,eax
  41cdad:	stos   DWORD PTR es:[edi],eax
  41cdae:	(bad)  
  41cdaf:	add    eax,0x48034341
  41cdb4:	adc    bl,ch
  41cdb6:	out    0x41,eax
  41cdb8:	das    
  41cdb9:	sub    esi,DWORD PTR [edi-0x46a557a9]
  41cdbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdc0:	(bad)  
  41cdc1:	mov    bl,0x1e
  41cdc3:	ja     0x41ce22
  41cdc5:	pop    eax
  41cdc6:	(bad)  
  41cdc7:	mov    ds:0xab91011e,eax
  41cdcc:	push   eax
  41cdcd:	aaa    
  41cdce:	dec    edi
  41cdcf:	ja     0x41ce50
  41cdd1:	jns    0x41cde6
  41cdd3:	mov    cl,0x3e
  41cdd5:	aad    0x80
  41cdd7:	or     DWORD PTR [edi],eax
  41cdd9:	pusha  
  41cdda:	out    dx,eax
  41cddb:	or     dh,cl
  41cddd:	sbb    eax,0xbe3adac0
  41cde2:	add    eax,0x20b77c6f
  41cde7:	push   cs
  41cde8:	dec    ebx
  41cde9:	bound  eax,QWORD PTR [eax+0x470e733]
  41cdef:	test   cl,bh
  41cdf1:	out    dx,eax
  41cdf2:	xchg   edx,eax
  41cdf3:	lods   eax,DWORD PTR ds:[esi]
  41cdf4:	stos   BYTE PTR es:[edi],al
  41cdf5:	dec    ebp
  41cdf6:	add    al,0xf2
  41cdf8:	xor    DWORD PTR [esi+eiz*2-0x4c],ebp
  41cdfc:	in     al,0x3e
  41cdfe:	scas   eax,DWORD PTR es:[edi]
  41cdff:	out    dx,eax
  41ce00:	push   ss
  41ce01:	xlat   BYTE PTR ds:[ebx]
  41ce02:	adc    ebp,DWORD PTR [edx-0x330b8ea9]
  41ce08:	mov    BYTE PTR [edi+0x4b],al
  41ce0b:	pop    edi
  41ce0c:	adc    eax,0x9308e65
  41ce11:	sub    ah,BYTE PTR [ebx]
  41ce13:	fdivp  st(1),st
  41ce15:	repnz ins BYTE PTR es:[edi],dx
  41ce17:	cmp    ebp,DWORD PTR [ebx]
  41ce19:	pop    ebp
  41ce1a:	and    DWORD PTR [ebp+0x0],0xcb42076f
  41ce21:	bound  eax,QWORD PTR [edx-0x14d1cfc3]
  41ce27:	or     DWORD PTR [edx],ebp
  41ce29:	push   esi
  41ce2a:	scas   eax,DWORD PTR es:[edi]
  41ce2b:	test   DWORD PTR [ecx-0x33b47f44],esp
  41ce31:	aas    
  41ce32:	or     DWORD PTR [edx],esi
  41ce34:	and    DWORD PTR [edi-0x32],edi
  41ce37:	or     eax,0xc03d31f4
  41ce3c:	test   DWORD PTR [edx],edi
  41ce3e:	jnp    0x41cdd1
  41ce40:	pop    es
  41ce41:	ins    DWORD PTR es:[edi],dx
  41ce42:	cli    
  41ce43:	shl    BYTE PTR [edi+0x1bf3bd81],1
  41ce49:	sti    
  41ce4a:	mov    ah,0x1b
  41ce4c:	mov    eax,0x4f573db
  41ce51:	push   es
  41ce52:	cdq    
  41ce53:	inc    eax
  41ce54:	sbb    BYTE PTR [edi],al
  41ce56:	mov    al,ds:0x7d8c143c
  41ce5b:	rol    DWORD PTR [eax+0x30],cl
  41ce5e:	pop    eax
  41ce5f:	(bad)  
  41ce60:	dec    edx
  41ce61:	fistp  DWORD PTR [edx]
  41ce63:	pusha  
  41ce64:	cmp    dl,al
  41ce66:	test   BYTE PTR [eax-0x6],cl
  41ce69:	push   cs
  41ce6a:	lods   al,BYTE PTR ds:[esi]
  41ce6b:	push   esi
  41ce6c:	pop    ss
  41ce6d:	test   BYTE PTR [ecx-0x2f],cl
  41ce70:	clc    
  41ce71:	into   
  41ce72:	mov    ebp,0xc66bf240
  41ce77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce78:	mov    dh,0x3b
  41ce7a:	leave  
  41ce7b:	mov    dh,0xc2
  41ce7d:	add    DWORD PTR [ebx+0x72358b9c],eax
  41ce83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce84:	sahf   
  41ce85:	mov    ecx,ebp
  41ce87:	jmp    0x231e0ac4
  41ce8c:	dec    ecx
  41ce8d:	adc    eax,0x11775379
  41ce92:	test   DWORD PTR [ebx+0xb472b0c],edx
  41ce98:	dec    esi
  41ce99:	dec    edi
  41ce9a:	shl    ah,1
  41ce9c:	inc    edx
  41ce9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce9e:	out    0xd7,al
  41cea0:	cmp    DWORD PTR [ebp+0x1],ebx
  41cea3:	xchg   esi,eax
  41cea4:	add    BYTE PTR [edi-0x2d2e3966],dh
  41ceaa:	adc    cl,BYTE PTR [ecx+0x6e4a83ad]
  41ceb0:	push   esi
  41ceb1:	(bad)  
  41ceb3:	mov    WORD PTR [ebx],?
  41ceb5:	pop    edi
  41ceb6:	cwde   
  41ceb7:	nop
  41ceb8:	(bad)  
  41ceb9:	in     eax,dx
  41ceba:	dec    ecx
  41cebb:	dec    edx
  41cebc:	aas    
  41cebd:	mov    ds:0x1acaa714,al
  41cec2:	xlat   BYTE PTR ds:[ebx]
  41cec3:	out    0xd0,eax
  41cec5:	dec    edx
  41cec6:	push   0x33cd460c
  41cecb:	ja     0x41cefb
  41cecd:	dec    esi
  41cece:	sub    edx,DWORD PTR [esi]
  41ced0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ced1:	sbb    eax,0xa059968e
  41ced6:	out    0xdb,eax
  41ced8:	jns    0x41cee6
  41ceda:	pop    eax
  41cedb:	or     bh,BYTE PTR ds:0xae4bb5e4
  41cee1:	out    dx,eax
  41cee2:	lea    ecx,[edx]
  41cee4:	ins    BYTE PTR es:[edi],dx
  41cee5:	cmp    eax,0x136923d1
  41ceea:	sbb    edx,DWORD PTR [ecx]
  41ceec:	xor    bh,BYTE PTR [ebp-0xd]
  41ceef:	dec    edx
  41cef0:	mov    al,bl
  41cef2:	lea    edi,[ebx]
  41cef4:	adc    al,0x63
  41cef6:	jnp    0x41cf18
  41cef8:	scas   eax,DWORD PTR es:[edi]
  41cef9:	jecxz  0x41ceb1
  41cefb:	push   ecx
  41cefc:	xlat   BYTE PTR ds:[ebx]
  41cefd:	sbb    eax,0x931519b8
  41cf02:	out    dx,eax
  41cf03:	dec    esi
  41cf04:	(bad)  
  41cf05:	shl    BYTE PTR [ebx-0x7d],1
  41cf08:	(bad)  
  41cf09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf0a:	add    BYTE PTR ds:0x4355ca37,0xe6
  41cf11:	mov    ebp,0xddab64a6
  41cf16:	mov    ecx,esp
  41cf18:	cmp    BYTE PTR [eax+0x7044078],0xb4
  41cf1f:	dec    ecx
  41cf20:	inc    ebp
  41cf21:	jl     0x41cedc
  41cf23:	in     al,0xad
  41cf25:	xchg   edi,eax
  41cf26:	fild   DWORD PTR ds:0x1680103
  41cf2c:	dec    esp
  41cf2d:	add    eax,0x97dc2f16
  41cf32:	push   ds
  41cf33:	and    DWORD PTR [edx-0x2607a78c],esp
  41cf39:	jmp    0x17b3342d
  41cf3e:	call   0x2c51d927
  41cf43:	pop    esp
  41cf44:	retf   
  41cf45:	xor    BYTE PTR [edx-0xd],dl
  41cf48:	and    BYTE PTR [ebx-0x7cbe1cac],0x68
  41cf4f:	in     al,0x59
  41cf51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf52:	fiadd  DWORD PTR es:[edx-0x312f82e7]
  41cf59:	add    BYTE PTR [ecx],cl
  41cf5b:	mov    ah,0x74
  41cf5d:	pop    edi
  41cf5e:	mov    esp,0x22665b1d
  41cf63:	mov    dh,0x53
  41cf65:	cmp    ecx,DWORD PTR [ebx-0x35]
  41cf68:	xchg   esi,eax
  41cf69:	or     al,0xcb
  41cf6b:	or     BYTE PTR [ecx],al
  41cf6d:	retf   0x9b70
  41cf70:	push   esi
  41cf71:	mov    esi,0x336276b5
  41cf76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf77:	jp     0x41cf79
  41cf79:	cld    
  41cf7a:	retf   
  41cf7b:	adc    DWORD PTR [esi],ebx
  41cf7d:	mov    eax,ds:0xb3e197d0
  41cf82:	imul   edx,DWORD PTR [ebx-0x42bfcf94],0x935c2b48
  41cf8c:	push   ebp
  41cf8d:	and    al,0xe0
  41cf8f:	push   esp
  41cf90:	pop    ecx
  41cf91:	imul   BYTE PTR [edx-0x2fec343f]
  41cf97:	or     ebp,ecx
  41cf99:	in     eax,0xbc
  41cf9b:	mov    esp,0x14d1e0d
  41cfa0:	cmp    eax,0x79299761
  41cfa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfa6:	xchg   DWORD PTR [ecx-0x68],esp
  41cfa9:	mov    eax,0x6c71af42
  41cfae:	fmul   QWORD PTR [eax+0x79581885]
  41cfb4:	pop    edi
  41cfb5:	rcr    DWORD PTR [edi],0xdc
  41cfb8:	aaa    
  41cfb9:	mov    bh,BYTE PTR [ebx]
  41cfbb:	das    
  41cfbc:	loop   0x41cfdf
  41cfbe:	stos   DWORD PTR es:[edi],eax
  41cfbf:	stc    
  41cfc0:	add    DWORD PTR [edx-0x75abecce],edi
  41cfc6:	stc    
  41cfc7:	jbe    0x41cff4
  41cfc9:	repz sbb DWORD PTR [esi*1-0x24fd322a],edi
  41cfd1:	jb     0x41cfd6
  41cfd3:	mov    ah,BYTE PTR [ecx]
  41cfd5:	loop   0x41d04f
  41cfd7:	xor    BYTE PTR [edi+0xc],dh
  41cfda:	jo     0x41d03b
  41cfdc:	das    
  41cfdd:	out    0x16,eax
  41cfdf:	inc    edi
  41cfe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfe1:	shl    DWORD PTR [edi+eax*8-0x7e9b6b3a],0x91
  41cfe9:	cmp    BYTE PTR [eax-0x2970eb7a],ch
  41cfef:	and    DWORD PTR [esi-0x5a7d40d7],esi
  41cff5:	push   ecx
  41cff6:	fwait
  41cff7:	test   BYTE PTR [edi-0x41],bl
  41cffa:	inc    esp
  41cffb:	ror    DWORD PTR [eax+esi*2+0x3309a207],0x6a
  41d003:	jg     0x41d063
  41d005:	dec    esi
  41d006:	fld    QWORD PTR [edx-0x1fac59e3]
  41d00c:	jecxz  0x41d086
  41d00e:	cld    
  41d00f:	jmp    0x41d073
  41d011:	xchg   DWORD PTR [eax+0x67],ebp
  41d014:	mov    ds:0xc688cf73,al
  41d019:	repnz xor ebx,DWORD PTR [esi+0x4e3c637d]
  41d020:	mov    dl,ch
  41d022:	int3   
  41d023:	xchg   edx,eax
  41d024:	pop    ebx
  41d025:	pop    edx
  41d026:	cwde   
  41d027:	cmp    esi,eax
  41d029:	(bad)  
  41d02a:	lock lds ebx,FWORD PTR [edx]
  41d02d:	lahf   
  41d02e:	scas   eax,DWORD PTR es:[edi]
  41d02f:	stos   DWORD PTR es:[edi],eax
  41d030:	jne    0x41d05a
  41d032:	fcom   QWORD PTR [edx]
  41d034:	sar    BYTE PTR [ecx+0x57a82b26],0x5d
  41d03b:	inc    ecx
  41d03c:	mov    bl,0x67
  41d03e:	push   edx
  41d03f:	jg     0x41d0b9
  41d041:	lahf   
  41d042:	lods   eax,DWORD PTR ds:[esi]
  41d043:	fcmovb st,st(0)
  41d045:	sub    eax,0x723ecf96
  41d04a:	iret   
  41d04b:	add    al,0x54
  41d04d:	fstp   QWORD PTR [esi]
  41d04f:	lods   al,BYTE PTR ds:[esi]
  41d050:	or     DWORD PTR [ebx+0x5380f97a],esi
  41d056:	out    dx,al
  41d057:	jb     0x41cfe2
  41d059:	mov    ds:0xe30629b6,eax
  41d05e:	clc    
  41d05f:	stos   BYTE PTR es:[edi],al
  41d060:	mov    WORD PTR [ebx+0x463da074],es
  41d066:	ds scas eax,DWORD PTR es:[edi]
  41d068:	ds xchg edx,eax
  41d06a:	arpl   WORD PTR [esi-0x6],cx
  41d06d:	rol    DWORD PTR [esi+0x35],1
  41d070:	(bad)  
  41d071:	stos   DWORD PTR es:[edi],eax
  41d072:	loope  0x41d078
  41d074:	stc    
  41d075:	ja     0x41cffd
  41d077:	pop    ebp
  41d078:	inc    edi
  41d079:	jmp    0xeba9:0xeb829d7c
  41d080:	fistp  QWORD PTR [edx+0x5ed4ae74]
  41d086:	test   al,0x7c
  41d088:	mov    al,0x5c
  41d08a:	jae    0x41d098
  41d08c:	and    eax,0xabc28b42
  41d092:	jg     0x41d03e
  41d094:	inc    edx
  41d095:	xchg   esi,eax
  41d096:	nop
  41d097:	test   eax,0xfdf44d24
  41d09c:	jo     0x41d11c
  41d09e:	push   eax
  41d09f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0a0:	scas   al,BYTE PTR es:[edi]
  41d0a1:	scas   eax,DWORD PTR es:[edi]
  41d0a2:	(bad)  
  41d0a3:	(bad)  
  41d0a5:	ins    DWORD PTR es:[edi],dx
  41d0a6:	adc    cl,BYTE PTR [edx+0x4b]
  41d0a9:	sbb    DWORD PTR [eax+0x312adcba],ebx
  41d0af:	jg     0x41d0ac
  41d0b1:	sbb    ebx,DWORD PTR [edx-0x18a559c5]
  41d0b7:	loopne 0x41d0b0
  41d0b9:	fnsave fs:[ebx+esi*1+0x5619627b]
  41d0c1:	cmp    esp,DWORD PTR [ebx+0x7c]
  41d0c4:	jb     0x41d0f5
  41d0c6:	fs jb  0x41d120
  41d0c9:	icebp  
  41d0ca:	jge    0x41d0a1
  41d0cc:	rcr    DWORD PTR [edi],cl
  41d0ce:	outs   dx,DWORD PTR ds:[esi]
  41d0cf:	clc    
  41d0d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0d1:	enter  0x237c,0xad
  41d0d5:	adc    edx,DWORD PTR [ebp-0x3d]
  41d0d8:	fist   WORD PTR [ebx+0x49]
  41d0db:	pop    esi
  41d0dc:	push   esp
  41d0dd:	mov    eax,ds:0xd2e6ef94
  41d0e2:	(bad)  
  41d0e4:	ja     0x41d10f
  41d0e6:	stos   BYTE PTR es:[edi],al
  41d0e7:	jnp    0x41d073
  41d0e9:	aad    0x8b
  41d0eb:	inc    edx
  41d0ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0ed:	dec    eax
  41d0ee:	jnp    0x41d0ef
  41d0f0:	push   esi
  41d0f1:	imul   eax,DWORD PTR [eax+0x1d191d4],0x3ad5f33
  41d0fb:	sub    DWORD PTR [ecx+0x1506e95f],0xffffff93
  41d102:	sbb    al,0xfe
  41d104:	in     al,0xd7
  41d106:	mov    BYTE PTR [ebp-0x22538c7f],cl
  41d10c:	fwait
  41d10d:	or     BYTE PTR [esi-0x5c],cl
  41d110:	inc    ecx
  41d111:	mov    eax,0x4d93c62
  41d116:	out    0x55,al
  41d118:	and    eax,0xf6ab05f3
  41d11d:	add    al,0x2d
  41d11f:	cmp    ebx,esp
  41d121:	jns    0x41d12d
  41d123:	mov    ch,0x8e
  41d125:	pusha  
  41d126:	push   ds
  41d127:	xor    al,0xe
  41d129:	je     0x41d0e0
  41d12b:	test   al,0x91
  41d12d:	out    0xc,eax
  41d12f:	shr    eax,0xeb
  41d132:	fdivr  st(6),st
  41d134:	cmp    DWORD PTR [esi+0x3e91593a],eax
  41d13a:	gs jp  0x41d0c2
  41d13d:	daa    
  41d13e:	xor    esi,DWORD PTR [eax+0x11]
  41d141:	dec    ecx
  41d142:	mov    ebx,0x34f0511f
  41d147:	xor    bh,al
  41d149:	pusha  
  41d14a:	xchg   edi,eax
  41d14b:	push   eax
  41d14c:	adc    edi,esp
  41d14e:	push   0x5
  41d150:	jb     0x41d128
  41d152:	aam    0xc5
  41d154:	sub    eax,0x5bb91aac
  41d159:	pop    es
  41d15a:	or     BYTE PTR [eax-0x442d13d6],bl
  41d160:	into   
  41d161:	add    BYTE PTR [ecx-0x608507c9],al
  41d167:	and    cl,cl
  41d169:	dec    ecx
  41d16a:	pop    ebp
  41d16b:	add    al,0x39
  41d16d:	inc    edi
  41d16e:	or     eax,esi
  41d170:	mov    esi,0x8aa42395
  41d175:	ins    BYTE PTR es:[edi],dx
  41d176:	inc    ecx
  41d177:	iret   
  41d178:	lds    esp,FWORD PTR [eax]
  41d17a:	and    al,0xb2
  41d17c:	sub    BYTE PTR [eax+0xdcb5e27],dl
  41d182:	push   cs
  41d183:	not    BYTE PTR [ebp-0x78]
  41d186:	popf   
  41d187:	cmp    eax,DWORD PTR [edi]
  41d189:	mov    WORD PTR [esi],fs
  41d18b:	mov    ah,0xbe
  41d18d:	sti    
  41d18e:	sahf   
  41d18f:	mov    ds:0x5088c9f9,eax
  41d194:	out    dx,eax
  41d195:	dec    ecx
  41d196:	inc    BYTE PTR [esi]
  41d198:	repz gs inc esi
  41d19b:	in     al,0xa5
  41d19d:	cld    
  41d19e:	add    esi,esp
  41d1a0:	mov    ch,BYTE PTR [edi-0x4b72453b]
  41d1a6:	fwait
  41d1a7:	or     al,0xd3
  41d1a9:	jmp    0x41d216
  41d1ab:	(bad)  
  41d1ad:	int3   
  41d1ae:	addr16 out 0xc1,al
  41d1b1:	mov    ebx,0xd6ac38c7
  41d1b6:	or     edx,DWORD PTR [eax+esi*1-0x5]
  41d1ba:	fidiv  WORD PTR [ebp+0x3]
  41d1bd:	(bad)  
  41d1be:	loopne 0x41d171
  41d1c0:	sub    al,0xe0
  41d1c2:	scas   eax,DWORD PTR es:[edi]
  41d1c3:	ds jp  0x41d18f
  41d1c6:	js     0x41d1f3
  41d1c8:	or     al,0xc
  41d1ca:	aaa    
  41d1cb:	repnz sbb DWORD PTR [edi+0x59],eax
  41d1cf:	(bad)  
  41d1d1:	cmp    DWORD PTR [edx+0xf],edx
  41d1d4:	cmp    DWORD PTR [ebp-0x482fbd19],edi
  41d1da:	ret    
  41d1db:	pop    esp
  41d1dc:	add    esi,DWORD PTR [eax+0x93f36a6]
  41d1e2:	inc    ebp
  41d1e3:	lods   al,BYTE PTR ds:[esi]
  41d1e4:	pop    ebx
  41d1e5:	imul   edi,DWORD PTR [ecx-0x47],0x5d
  41d1e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1ea:	adc    al,BYTE PTR [ebp+0x10250f96]
  41d1f0:	jae    0x41d1c3
  41d1f2:	jbe    0x41d1ac
  41d1f4:	cmp    BYTE PTR [esi+0x29],dl
  41d1f7:	mov    cl,0x78
  41d1f9:	sbb    DWORD PTR [ebp+0x31],0xe7dd3fb3
  41d200:	mov    edx,0xf5ef84d8
  41d205:	or     eax,0xc2fdf6b9
  41d20a:	fdivr  QWORD PTR [ecx+0x72]
  41d20d:	(bad)
  41d211:	and    DWORD PTR [esp+ebp*1-0x7a],eax
  41d215:	dec    eax
  41d216:	sub    ebp,ebx
  41d218:	cmp    cl,0xaa
  41d21b:	popa   
  41d21c:	gs push es
  41d21e:	in     eax,dx
  41d21f:	xor    eax,0x20e261ad
  41d224:	ret    
  41d225:	aam    0x8b
  41d227:	adc    DWORD PTR [esi+0x3c135b05],0xffffffbe
  41d22e:	ins    BYTE PTR es:[edi],dx
  41d22f:	cvttps2pi mm6,QWORD PTR [edx+0x6978a965]
  41d236:	enter  0x5baf,0x6b
  41d23a:	aaa    
  41d23b:	into   
  41d23c:	jp     0x41d233
  41d23e:	sbb    al,BYTE PTR ds:[ebp+0x3cd6dc41]
  41d245:	pop    ebx
  41d246:	mov    BYTE PTR [ebx+eax*4-0x5d9ec2fd],bl
  41d24d:	pop    edi
  41d24e:	mov    esp,0xb545e7c7
  41d253:	ffree  st(3)
  41d255:	arpl   WORD PTR [ebx],bp
  41d257:	iret   
  41d258:	inc    ebx
  41d259:	sahf   
  41d25a:	in     al,0xfc
  41d25c:	jbe    0x41d2da
  41d25e:	test   al,0xb1
  41d260:	imul   DWORD PTR [ebp+eax*4-0x4671b6b3]
  41d267:	aad    0x72
  41d269:	pop    esi
  41d26a:	fs inc ecx
  41d26c:	dec    ebp
  41d26d:	fwait
  41d26e:	mov    esi,0xfab0baf9
  41d273:	sub    esp,DWORD PTR [ebp+ecx*1+0x10284f4]
  41d27a:	lods   al,BYTE PTR ds:[esi]
  41d27b:	or     esp,DWORD PTR [ebp-0x31]
  41d27e:	push   cs
  41d27f:	adc    eax,0x1377ae02
  41d284:	push   edx
  41d285:	ud0    ebx,DWORD PTR [ebx-0x9]
  41d289:	aas    
  41d28a:	and    al,BYTE PTR [edx]
  41d28c:	loope  0x41d2ab
  41d28e:	mov    edx,0x640f988a
  41d293:	or     al,0xa3
  41d295:	mov    eax,0x33996019
  41d29a:	xchg   ebp,eax
  41d29b:	sub    ch,BYTE PTR [esp+ebx*8-0x2c]
  41d29f:	jns    0x41d226
  41d2a1:	pop    ecx
  41d2a2:	bound  edi,QWORD PTR [edx-0x18]
  41d2a5:	cwde   
  41d2a6:	not    DWORD PTR [ebp+ebx*2-0x76050b71]
  41d2ad:	in     eax,0x75
  41d2af:	lock pop ecx
  41d2b1:	sti    
  41d2b2:	rcr    edi,0xdc
  41d2b5:	cwde   
  41d2b6:	div    edx
  41d2b8:	arpl   WORD PTR [edi],ax
  41d2ba:	xor    cl,BYTE PTR [ebp+eax*4-0x2dcf40ef]
  41d2c1:	dec    edi
  41d2c2:	sbb    BYTE PTR [eax-0x4611e770],bl
  41d2c8:	mov    ebx,0x6f6899b
  41d2cd:	jns    0x41d274
  41d2cf:	lods   al,BYTE PTR ds:[esi]
  41d2d0:	imul   ecx,edi,0xffffffba
  41d2d3:	jecxz  0x41d287
  41d2d5:	aam    0x79
  41d2d7:	in     eax,0xa4
  41d2d9:	inc    eax
  41d2da:	cmp    al,0x9b
  41d2dc:	or     al,0x87
  41d2de:	mov    al,ds:0x81ff9917
  41d2e3:	cli    
  41d2e4:	sbb    al,0xff
  41d2e6:	and    bh,bh
  41d2e8:	pop    ebx
  41d2e9:	mov    eax,ds:0x824718e2
  41d2ee:	sub    BYTE PTR [edx+ebx*4],dl
  41d2f1:	mov    BYTE PTR [ebx],cl
  41d2f3:	(bad)  [eax-0x2c9707fb]
  41d2f9:	xor    bh,ch
  41d2fb:	dec    esp
  41d2fc:	push   edi
  41d2fd:	dec    ebp
  41d2fe:	and    DWORD PTR [edx-0x3ffaf23e],0x31
  41d305:	sti    
  41d306:	inc    esp
  41d307:	gs jnp 0x41d291
  41d30a:	push   eax
  41d30b:	sar    ah,cl
  41d30d:	push   ebp
  41d30e:	jmp    0x41d35c
  41d310:	jg     0x41d2c7
  41d312:	(bad)  
  41d314:	leave  
  41d315:	cmp    ah,BYTE PTR [ecx-0x717349c8]
  41d31b:	sub    al,0x92
  41d31d:	adc    bl,ch
  41d31f:	addr16 push ebp
  41d321:	inc    esi
  41d322:	cmp    dh,dl
  41d324:	add    eax,0x56e1ab5a
  41d329:	xlat   BYTE PTR ds:[ebx]
  41d32a:	push   0x497d7377
  41d32f:	dec    edx
  41d330:	push   ecx
  41d331:	xlat   BYTE PTR ds:[ebx]
  41d332:	int3   
  41d333:	(bad)  [edi-0x16cb8eb9]
  41d339:	mov    bh,0xf2
  41d33b:	push   eax
  41d33c:	add    bh,BYTE PTR [ebp+0x2a]
  41d33f:	daa    
  41d340:	and    ch,BYTE PTR [eax-0xcaf71e7]
  41d346:	fild   WORD PTR [edi-0x527411d9]
  41d34c:	adc    al,0x3f
  41d34e:	jns    0x41d2fd
  41d350:	out    0x48,eax
  41d352:	out    0x52,eax
  41d354:	call   0xf230:0x8b47f8fc
  41d35b:	push   ss
  41d35c:	icebp  
  41d35d:	scas   eax,DWORD PTR es:[edi]
  41d35e:	lods   al,BYTE PTR ds:[esi]
  41d35f:	test   eax,0x362d0203
  41d364:	cmp    edx,DWORD PTR [ecx+0xa157c4f]
  41d36a:	mov    WORD PTR [esi],ds
  41d36c:	jnp    0x41d3a6
  41d36e:	mov    ecx,0x5dc8d9a8
  41d373:	sub    BYTE PTR [eax],bl
  41d375:	or     eax,0x80c47944
  41d37a:	jns    0x41d36c
  41d37c:	jmp    0x4b96:0xd93f531e
  41d383:	sbb    BYTE PTR [edx+0x5a36683],ch
  41d389:	das    
  41d38a:	jge    0x41d339
  41d38c:	gs (bad) 
  41d38f:	mov    ch,bh
  41d391:	xchg   ecx,eax
  41d392:	hlt    
  41d393:	sbb    DWORD PTR [ecx],esi
  41d395:	jp     0x41d3d7
  41d397:	(bad)  
  41d398:	in     eax,dx
  41d399:	test   BYTE PTR [eax],cl
  41d39b:	scas   eax,DWORD PTR es:[edi]
  41d39c:	sub    eax,0x8e19cb8
  41d3a1:	(bad)  
  41d3a2:	cld    
  41d3a3:	ret    0x1388
  41d3a6:	xor    al,0x8e
  41d3a8:	mov    BYTE PTR [edi+edi*8],bl
  41d3ab:	xor    dl,ch
  41d3ad:	xor    eax,0x830bb8fe
  41d3b2:	dec    esp
  41d3b3:	data16 jge 0x41d401
  41d3b6:	stc    
  41d3b7:	pop    ss
  41d3b8:	cs xchg ch,ch
  41d3bb:	or     ch,bh
  41d3bd:	xor    eax,0x39db06ed
  41d3c2:	and    BYTE PTR [edi],al
  41d3c4:	fcom   st(6)
  41d3c6:	xchg   esp,eax
  41d3c7:	loop   0x41d441
  41d3c9:	(bad)  
  41d3ca:	mov    ebp,fs
  41d3cc:	mov    ds:0x4ef17b71,al
  41d3d1:	(bad)  
  41d3d2:	dec    ebx
  41d3d3:	xchg   ecx,eax
  41d3d4:	mov    DWORD PTR [eax+ecx*8+0x2c],edi
  41d3d8:	xor    dl,ah
  41d3da:	das    
  41d3db:	mov    BYTE PTR ds:0xd4d5ae5b,dl
  41d3e1:	mov    ah,0xfa
  41d3e3:	aas    
  41d3e4:	and    DWORD PTR [ebx],edx
  41d3e6:	pop    ds
  41d3e7:	mov    bl,0x8e
  41d3e9:	stos   DWORD PTR es:[edi],eax
  41d3ea:	fyl2xp1 
  41d3ec:	mov    ebx,0xdce79997
  41d3f1:	out    0x47,al
  41d3f3:	pop    esp
  41d3f4:	add    cl,dh
  41d3f6:	adc    DWORD PTR [esi+0x585f5482],eax
  41d3fc:	push   0xfffffff3
  41d3fe:	inc    ebx
  41d3ff:	sub    ah,BYTE PTR [ecx]
  41d401:	aad    0xf7
  41d403:	outs   dx,BYTE PTR ds:[esi]
  41d404:	pushf  
  41d405:	add    bl,BYTE PTR [eax-0x74]
  41d408:	jp     0x41d427
  41d40a:	sar    BYTE PTR [esi-0x50b23493],1
  41d410:	lods   al,BYTE PTR ds:[esi]
  41d411:	mov    dl,0x7f
  41d413:	loope  0x41d487
  41d415:	in     eax,0xd3
  41d417:	adc    eax,esi
  41d419:	sub    edx,DWORD PTR [edx-0x50]
  41d41c:	sub    ch,BYTE PTR [edx-0x1026d394]
  41d422:	dec    eax
  41d423:	xor    BYTE PTR [eax+0x4f4326e2],bl
  41d429:	add    ch,BYTE PTR [ebx+0x428f8a36]
  41d42f:	or     esp,edi
  41d431:	adc    bh,BYTE PTR [ebx-0x6d]
  41d434:	sbb    DWORD PTR [eax+eiz*2-0x10b95bc9],ecx
  41d43b:	in     al,0x15
  41d43d:	idiv   DWORD PTR [esi-0x8]
  41d440:	hlt    
  41d441:	xor    DWORD PTR ds:0xc843d86b,edx
  41d447:	adc    eax,0x7576f576
  41d44c:	jns    0x41d443
  41d44e:	call   0xc61adbdf
  41d453:	fs mov ebp,ebp
  41d456:	xchg   DWORD PTR [eax-0x5c],ebx
  41d459:	mov    eax,0xb85eca66
  41d45e:	out    dx,eax
  41d45f:	pop    ebp
  41d460:	jl     0x8c6d8660
  41d466:	cmp    DWORD PTR [edi-0x5d],eax
  41d469:	mov    esp,0x4fd69fd0
  41d46e:	clc    
  41d46f:	pop    ebp
  41d470:	mov    edi,0x2829a8c9
  41d475:	xchg   edi,eax
  41d476:	adc    al,0xac
  41d478:	aas    
  41d479:	dec    edi
  41d47a:	adc    DWORD PTR [esi+0x73aeea04],esi
  41d480:	jae    0x41d496
  41d482:	cdq    
  41d483:	in     al,dx
  41d484:	jmp    0xb9ce:0x4403aef5
  41d48b:	stos   DWORD PTR es:[edi],eax
  41d48c:	and    ebp,DWORD PTR [esi-0x28]
  41d48f:	lods   eax,DWORD PTR ds:[esi]
  41d490:	push   ebx
  41d491:	push   edx
  41d492:	fmul   DWORD PTR [ebp-0x69a9a163]
  41d498:	lock push 0x8cbc5e7c
  41d49e:	push   0xffffffcd
  41d4a0:	mov    al,gs:0xe0f00ff5
  41d4a6:	or     BYTE PTR [edi],ch
  41d4a8:	cmp    DWORD PTR [esi],edx
  41d4aa:	pop    edi
  41d4ab:	sub    eax,0x7c7a411e
  41d4b0:	int3   
  41d4b1:	sbb    dl,0x32
  41d4b4:	fidiv  DWORD PTR [ebx+0x7]
  41d4b7:	int3   
  41d4b8:	jno    0x41d4b1
  41d4ba:	jg     0x41d48e
  41d4bc:	pop    ecx
  41d4bd:	mov    ecx,0xe2308bc9
  41d4c2:	adc    BYTE PTR [edx+0x20349944],cl
  41d4c8:	push   ebx
  41d4c9:	arpl   dx,bx
  41d4cb:	inc    esi
  41d4cc:	cmp    ebp,edi
  41d4ce:	or     eax,0x1fbbe81
  41d4d3:	mov    edx,0xe92ee8a3
  41d4d8:	or     DWORD PTR [esi+0x7c43c8e0],eax
  41d4de:	fidiv  DWORD PTR [ebp+0x7c6b0a00]
  41d4e4:	(bad)  
  41d4e6:	mov    ebx,0x66d0ced0
  41d4eb:	stos   DWORD PTR es:[edi],eax
  41d4ec:	mov    ecx,0xb5d7fe01
  41d4f1:	adc    ah,BYTE PTR [edx+edx*4]
  41d4f4:	ficom  DWORD PTR [eax+0x14f8a64b]
  41d4fa:	dec    edx
  41d4fb:	stos   BYTE PTR es:[edi],al
  41d4fc:	test   ebp,edi
  41d4fe:	jge    0x41d4ca
  41d500:	retf   0xe193
  41d503:	ins    BYTE PTR es:[edi],dx
  41d504:	gs mov dh,0x6a
  41d507:	add    DWORD PTR ds:[edi+0x4a91b857],esi
  41d50e:	jmp    0xd98d387b
  41d513:	lock push 0x3b22d470
  41d519:	test   DWORD PTR [edx+0x37],esp
  41d51c:	lock jle 0x41d4ed
  41d51f:	pop    ss
  41d520:	mov    cl,BYTE PTR [ecx-0x889cd77]
  41d526:	cmp    eax,0x50a4603b
  41d52b:	mov    al,0x6c
  41d52d:	and    eax,0x89334e2c
  41d532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d533:	sub    ch,BYTE PTR [ecx-0x7bbdca6d]
  41d539:	pop    ebx
  41d53a:	xor    DWORD PTR [esi],0xffffff99
  41d53d:	push   ds
  41d53e:	popf   
  41d53f:	xor    al,dl
  41d541:	imul   edi,DWORD PTR [ebp-0x23],0xffffff90
  41d545:	clc    
  41d546:	lods   eax,DWORD PTR ds:[esi]
  41d547:	mov    bl,0x7a
  41d549:	inc    esi
  41d54a:	mov    al,ds:0xa3f36283
  41d54f:	mov    ah,0xf8
  41d551:	pop    ecx
  41d552:	adc    eax,0x3458b9e3
  41d557:	xchg   edi,eax
  41d558:	outs   dx,DWORD PTR ds:[esi]
  41d559:	fmul   QWORD PTR [edx+0x1c]
  41d55c:	dec    eax
  41d55d:	rol    DWORD PTR [esi+esi*1],0x5d
  41d561:	cmp    DWORD PTR [esi+edx*2],esp
  41d564:	dec    ecx
  41d565:	jmp    0x41d5d9
  41d567:	jnp    0x41d564
  41d569:	stos   BYTE PTR es:[edi],al
  41d56a:	les    esi,FWORD PTR cs:[ebp+eax*2+0x242a3fd]
  41d572:	jp     0x41d55f
  41d574:	ins    BYTE PTR es:[edi],dx
  41d575:	lds    ecx,FWORD PTR [esi]
  41d577:	ror    DWORD PTR [ecx+0x6f],1
  41d57a:	cmp    eax,0x2d6ce8b8
  41d57f:	mov    ds:0xbab3246a,eax
  41d584:	jb     0x41d5a5
  41d586:	xchg   edx,eax
  41d587:	mov    al,0xce
  41d589:	fld    QWORD PTR [edi-0x227f6e3f]
  41d58f:	adc    edi,esp
  41d591:	cmp    edi,0x32
  41d594:	scas   eax,DWORD PTR es:[edi]
  41d595:	push   ebp
  41d596:	jmp    0x3d840217
  41d59b:	shl    DWORD PTR [ecx+eax*8-0x211b20ec],1
  41d5a2:	inc    ebx
  41d5a3:	add    ebx,eax
  41d5a5:	mov    eax,ds:0x73ddc6cc
  41d5aa:	aaa    
  41d5ab:	int3   
  41d5ac:	in     eax,dx
  41d5ad:	jmp    DWORD PTR [edi+0x3]
  41d5b0:	mov    BYTE PTR [edx+0xc],bl
  41d5b3:	iret   
  41d5b4:	sub    al,0xd4
  41d5b6:	adc    BYTE PTR [ebp+0x1f771ab5],ah
  41d5bc:	jb     0x41d574
  41d5be:	call   0x931c:0x7f8a3118
  41d5c5:	arpl   bp,sp
  41d5c7:	push   eax
  41d5c8:	jecxz  0x41d644
  41d5ca:	lock sub edi,DWORD PTR [ecx+0x1ee56685]
  41d5d1:	sbb    al,0x51
  41d5d3:	js     0x41d5f8
  41d5d5:	pop    eax
  41d5d6:	mov    eax,ds:0x941c5181
  41d5db:	mov    al,0xdd
  41d5dd:	(bad)
  41d5e0:	add    dl,al
  41d5e2:	cs ret 
  41d5e4:	cmp    ebp,DWORD PTR [esi+0x64763463]
  41d5ea:	mov    ecx,DWORD PTR [ebp-0x40cdc636]
  41d5f0:	pop    ss
  41d5f1:	mov    ebx,0xd82dfa10
  41d5f6:	mov    bh,0x77
  41d5f8:	loope  0x41d639
  41d5fa:	call   0x52b4:0x7b7c6a96
  41d601:	clc    
  41d602:	ins    DWORD PTR es:[edi],dx
  41d603:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d605:	adc    eax,DWORD PTR [edi+0x579355f8]
  41d60b:	inc    ebx
  41d60c:	push   ebx
  41d60d:	call   0xd5d2:0x4dc9b0a
  41d614:	pop    edi
  41d615:	nop
  41d616:	fiadd  DWORD PTR [edx-0x73]
  41d619:	jmp    0x1081837c
  41d61e:	lods   al,BYTE PTR ds:[esi]
  41d61f:	out    0xa8,eax
  41d621:	repz push edx
  41d623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d624:	sub    al,0xd2
  41d626:	adc    al,0x4f
  41d628:	push   esp
  41d629:	repz in eax,dx
  41d62b:	mov    bl,0xf2
  41d62d:	and    DWORD PTR [eax],ecx
  41d62f:	test   bl,al
  41d631:	inc    esi
  41d632:	dec    ecx
  41d633:	push   ebx
  41d634:	es fs jno 0x41d69a
  41d638:	and    esp,ebx
  41d63a:	ror    DWORD PTR [eax-0x6f],0xb4
  41d63e:	loopne 0x41d619
  41d640:	out    dx,al
  41d641:	test   edx,esi
  41d643:	and    DWORD PTR [eax+0x64],edi
  41d646:	hlt    
  41d647:	ss pop eax
  41d649:	ss adc bh,bh
  41d64c:	xchg   ebx,eax
  41d64d:	mov    WORD PTR [esi],?
  41d64f:	add    ebp,ebx
  41d651:	data16 (bad) 
  41d653:	jmp    0x34fa:0xab58df04
  41d65a:	sti    
  41d65b:	sbb    BYTE PTR [edx-0x16fcd3de],dl
  41d661:	mov    cl,0xaa
  41d663:	inc    edi
  41d664:	cs mov edx,0x12b71b96
  41d66a:	cwde   
  41d66b:	mov    edi,DWORD PTR [esp+ebx*1+0x528c15df]
  41d672:	sbb    DWORD PTR [edx],esi
  41d674:	adc    cl,bl
  41d676:	dec    ebx
  41d677:	les    edi,FWORD PTR [esp+edx*1-0x639dad32]
  41d67e:	xchg   edi,ecx
  41d680:	mov    dl,dl
  41d682:	leave  
  41d683:	adc    BYTE PTR [eax],dl
  41d685:	imul   edx,eax,0x5e
  41d688:	popa   
  41d689:	xchg   edx,eax
  41d68a:	sahf   
  41d68b:	out    0x7f,eax
  41d68d:	fld    QWORD PTR ds:0xc266fc2
  41d693:	mov    ebx,0xa90525ec
  41d698:	mul    BYTE PTR [edx+edx*2-0x50]
  41d69c:	(bad)  
  41d69d:	loope  0x41d679
  41d69f:	daa    
  41d6a0:	aas    
  41d6a1:	adc    ecx,ecx
  41d6a3:	sbb    al,0x25
  41d6a5:	mov    dh,0x25
  41d6a7:	jns    0x41d637
  41d6a9:	pop    ebp
  41d6aa:	adc    dl,BYTE PTR [ebx+0x675f706e]
  41d6b0:	xlat   BYTE PTR ds:[ebx]
  41d6b1:	(bad)  
  41d6b2:	stos   BYTE PTR es:[edi],al
  41d6b3:	ss out dx,al
  41d6b5:	xor    DWORD PTR [edx-0x7bb8021d],ecx
  41d6bb:	fwait
  41d6bc:	mov    esi,0x9445841c
  41d6c1:	lods   al,BYTE PTR ds:[esi]
  41d6c2:	retf   0xc40c
  41d6c5:	fisttp WORD PTR [eax]
  41d6c7:	cmp    esi,ebx
  41d6c9:	sar    DWORD PTR [edx],0xcd
  41d6cc:	out    0xc2,eax
  41d6ce:	fsubp  st(1),st
  41d6d0:	fdivr  DWORD PTR [ebx-0x3d]
  41d6d3:	dec    edx
  41d6d4:	mov    bl,0x16
  41d6d6:	dec    eax
  41d6d7:	std    
  41d6d8:	or     BYTE PTR [ebp+0x4f],0x19
  41d6dc:	cli    
  41d6dd:	cmp    ebp,DWORD PTR [ebp-0x76]
  41d6e0:	leave  
  41d6e1:	enter  0xcdf1,0x7
  41d6e5:	inc    DWORD PTR [edi+eiz*1-0x4b9bd149]
  41d6ec:	mov    eax,ds:0x559344ba
  41d6f1:	and    eax,DWORD PTR [edi+eax*4-0x42e8df22]
  41d6f8:	sbb    al,0x44
  41d6fa:	jg     0x41d6c5
  41d6fc:	dec    ebp
  41d6fd:	(bad)  
  41d6fe:	mov    edx,0x614ce9aa
  41d703:	and    eax,0x335c933a
  41d708:	mov    al,ds:0xb0c70976
  41d70d:	push   edx
  41d70e:	and    esi,DWORD PTR [ecx+0xe8d20c4]
  41d714:	sahf   
  41d715:	sub    ebp,DWORD PTR [eax-0x16]
  41d718:	xor    edi,DWORD PTR [ebx]
  41d71a:	sub    al,0x61
  41d71c:	mov    esi,0xe1d8d9b0
  41d721:	and    al,BYTE PTR [esi-0x39e7fa1a]
  41d727:	nop
  41d728:	shl    DWORD PTR [eax+0x763f2fb3],0x9c
  41d72f:	(bad)
  41d732:	cli    
  41d733:	mov    ds:0xa114bab1,eax
  41d738:	and    BYTE PTR [esi],0x46
  41d73b:	popf   
  41d73c:	fcmovnb st,st(3)
  41d73e:	ret    
  41d73f:	push   cs
  41d740:	sub    ch,BYTE PTR [edx]
  41d742:	cli    
  41d743:	cmp    eax,0xffffffb7
  41d746:	xchg   edx,eax
  41d747:	sbb    bl,ah
  41d749:	or     DWORD PTR ds:0x4556eb87,ebp
  41d74f:	pop    esp
  41d750:	cwde   
  41d751:	mov    cl,0xa6
  41d753:	cld    
  41d754:	data16 clc 
  41d756:	(bad)  
  41d757:	das    
  41d758:	leave  
  41d759:	imul   ecx,ecx,0x4ca8444f
  41d75f:	cmp    ch,bl
  41d761:	cmp    DWORD PTR [ebx],esp
  41d763:	cs ins BYTE PTR es:[edi],dx
  41d765:	lahf   
  41d766:	mov    al,0x22
  41d768:	sbb    DWORD PTR [ebx],eax
  41d76a:	jmp    FWORD PTR [eax+0x8]
  41d76d:	lods   eax,DWORD PTR ds:[esi]
  41d76e:	mov    ebp,0x180e0cb7
  41d773:	push   ebx
  41d774:	je     0x41d78c
  41d776:	jmp    0x41d748
  41d778:	cmp    bh,BYTE PTR [ecx]
  41d77a:	scas   eax,DWORD PTR es:[edi]
  41d77b:	lea    eax,[edx+0x75ee2510]
  41d781:	arpl   WORD PTR [edx-0x4ea3073],dx
  41d787:	js     0x41d78b
  41d789:	dec    esp
  41d78b:	retf   0x7268
  41d78e:	jno    0x41d769
  41d790:	ins    DWORD PTR es:[edi],dx
  41d791:	aas    
  41d792:	push   ebp
  41d793:	sbb    BYTE PTR [ebx],bh
  41d795:	int    0xc0
  41d797:	push   0x7a
  41d799:	stc    
  41d79a:	fld1   
  41d79c:	test   BYTE PTR [ecx],ch
  41d79e:	push   es
  41d79f:	xchg   ebx,eax
  41d7a0:	xor    BYTE PTR [edx-0x77daf792],0xe3
  41d7a7:	dec    ebx
  41d7a8:	popf   
  41d7a9:	arpl   WORD PTR [edi+edx*2+0x687aadb1],bp
  41d7b0:	jmp    0xdc8c:0x6a4e9068
  41d7b7:	ret    
  41d7b8:	push   esi
  41d7b9:	add    al,BYTE PTR [ebp-0x3f]
  41d7bc:	sahf   
  41d7bd:	mov    WORD PTR ds:0x691cbcc7,?
  41d7c3:	daa    
  41d7c4:	adc    eax,ecx
  41d7c6:	xchg   esp,eax
  41d7c7:	scas   al,BYTE PTR es:[edi]
  41d7c8:	aaa    
  41d7c9:	mov    dh,0x66
  41d7cb:	fldenv [ebp+0x20f17a7c]
  41d7d1:	inc    ebx
  41d7d2:	out    0xa9,eax
  41d7d4:	mov    WORD PTR [esi+eax*8-0x629343be],?
  41d7db:	add    BYTE PTR [ecx-0x31439df5],dh
  41d7e1:	clc    
  41d7e2:	fwait
  41d7e3:	and    BYTE PTR [ebx],ah
  41d7e5:	mov    BYTE PTR [esi-0x47],al
  41d7e8:	add    bl,BYTE PTR [ebp+0x47]
  41d7eb:	int3   
  41d7ec:	test   eax,0xc82abd61
  41d7f1:	mov    al,0xd2
  41d7f3:	mov    ecx,0x3667047d
  41d7f8:	mov    ecx,0x7613a93c
  41d7fd:	sbb    bh,BYTE PTR [ebx+0x32147cd3]
  41d803:	jae    0x41d848
  41d805:	jns    0x41d839
  41d807:	xor    DWORD PTR [ecx-0x41],0xffffffa5
  41d80b:	pop    eax
  41d80c:	lods   eax,DWORD PTR ds:[esi]
  41d80d:	jns    0x41d872
  41d80f:	arpl   WORD PTR [edx+0x65],dx
  41d812:	xchg   DWORD PTR [edi-0x15],edi
  41d815:	dec    esi
  41d816:	data16 mov dh,dl
  41d819:	sbb    al,0x3f
  41d81b:	dec    edx
  41d81c:	push   edx
  41d81d:	ins    DWORD PTR es:[edi],dx
  41d81e:	(bad)  
  41d820:	repnz sahf 
  41d822:	mov    edi,0x6baf373b
  41d827:	ins    DWORD PTR es:[edi],dx
  41d828:	cs lock fwait
  41d82b:	outs   dx,BYTE PTR ds:[esi]
  41d82c:	clc    
  41d82d:	push   edi
  41d82e:	xor    DWORD PTR [ebx],edx
  41d830:	cmp    ecx,0xffffffb1
  41d833:	pop    eax
  41d834:	lahf   
  41d835:	pminsw mm4,QWORD PTR [ebp+ecx*2+0x67]
  41d83a:	inc    ecx
  41d83b:	jne    0x41d7f1
  41d83d:	ins    BYTE PTR es:[edi],dx
  41d83e:	mov    ebx,0x4af6c919
  41d843:	call   0xd307:0xfdc54584
  41d84a:	xor    bh,0x17
  41d84d:	xor    DWORD PTR [ebx],edi
  41d84f:	daa    
  41d850:	dec    esi
  41d851:	inc    esp
  41d852:	adc    ch,BYTE PTR ds:0x98bffb0d
  41d858:	pop    eax
  41d859:	mov    dh,BYTE PTR [ecx]
  41d85b:	out    0x5f,al
  41d85d:	sbb    ecx,DWORD PTR [edx]
  41d85f:	inc    edx
  41d860:	mov    bl,BYTE PTR [ebp-0x6212378b]
  41d866:	pop    ss
  41d867:	sub    DWORD PTR [edx+0xb01e471],ecx
  41d86d:	loope  0x41d8a6
  41d86f:	popf   
  41d870:	test   ebp,0xc95f9c58
  41d876:	aad    0xda
  41d878:	pop    edi
  41d879:	ins    BYTE PTR es:[edi],dx
  41d87a:	push   cs
  41d87b:	xchg   DWORD PTR [eax+ecx*4],ecx
  41d87e:	call   0xd799:0x28a27ca6
  41d885:	mov    esp,0x47bfe2d6
  41d88a:	cmp    eax,0x9487dd21
  41d88f:	xor    dh,0x87
  41d892:	fucomp st(4)
  41d894:	stos   DWORD PTR es:[edi],eax
  41d895:	aaa    
  41d896:	in     al,dx
  41d897:	lahf   
  41d898:	test   BYTE PTR [eax-0x2e04aeba],0xdd
  41d89f:	out    0xa1,eax
  41d8a1:	mov    WORD PTR [eax+0x6682c892],fs
  41d8a7:	cdq    
  41d8a8:	xchg   DWORD PTR [ebx-0x6b],edi
  41d8ab:	hlt    
  41d8ac:	and    ecx,ebx
  41d8ae:	cmp    al,0xfe
  41d8b0:	inc    ebp
  41d8b1:	cmp    eax,0x8d049801
  41d8b6:	fbstp  TBYTE PTR [ecx+0x3b]
  41d8b9:	or     BYTE PTR [ebp-0x2dbfe626],0x12
  41d8c0:	xchg   edx,eax
  41d8c1:	add    BYTE PTR [ecx-0x229c460e],ch
  41d8c7:	std    
  41d8c8:	test   eax,0x2315e71d
  41d8cd:	add    ebx,esi
  41d8cf:	ret    
  41d8d0:	inc    ebx
  41d8d1:	(bad)  
  41d8d2:	sbb    BYTE PTR [ecx+0x57],ch
  41d8d5:	push   edx
  41d8d6:	es mov ch,0xd8
  41d8d9:	and    DWORD PTR [eax+ebp*1],esi
  41d8dc:	or     cl,BYTE PTR [ebx+0x77e4e01b]
  41d8e2:	pop    edx
  41d8e3:	inc    ebx
  41d8e4:	cmc    
  41d8e5:	stc    
  41d8e6:	pop    es
  41d8e7:	push   es
  41d8e8:	and    al,0xb0
  41d8ea:	call   0x8ebcab98
  41d8ef:	mov    eax,0x55b2d0a1
  41d8f4:	push   0x373a5f19
  41d8f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8fa:	and    BYTE PTR [ecx+0x63],al
  41d8fd:	(bad)  
  41d8fe:	push   ss
  41d8ff:	xor    DWORD PTR [esp+ebp*2-0x12ba2cd5],esp
  41d906:	jae    0x41d912
  41d908:	es push edi
  41d90a:	xor    DWORD PTR [edx-0x657d53eb],ecx
  41d910:	stos   DWORD PTR es:[edi],eax
  41d911:	jns    0x41d95a
  41d913:	imul   edi,DWORD PTR [ecx-0x79],0xffffffae
  41d917:	cwde   
  41d918:	fnstenvw [edx+0x4e]
  41d91c:	clc    
  41d91d:	les    edx,FWORD PTR [ebp+0x74]
  41d920:	sti    
  41d921:	jne    0x41d8c1
  41d923:	fst    DWORD PTR [ecx-0x62]
  41d926:	sub    ah,BYTE PTR [eax+eiz*4]
  41d929:	or     DWORD PTR [ecx-0x2c],esp
  41d92c:	push   ecx
  41d92d:	iret   
  41d92e:	out    0xb2,eax
  41d930:	scas   al,BYTE PTR es:[edi]
  41d931:	jne    0x41d949
  41d933:	inc    esp
  41d934:	inc    edx
  41d935:	imul   ecx,DWORD PTR [eax],0xe0d39211
  41d93b:	sub    eax,0x8017be7a
  41d940:	xor    ecx,DWORD PTR [ebp+0x6cc47cc]
  41d946:	stc    
  41d947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d948:	xchg   ebx,eax
  41d949:	xchg   ebp,eax
  41d94a:	mov    dh,0x1f
  41d94c:	xchg   ebp,eax
  41d94d:	fdiv   QWORD PTR [ebx]
  41d94f:	pop    ebp
  41d950:	adc    edi,ecx
  41d952:	ins    BYTE PTR es:[edi],dx
  41d953:	or     eax,DWORD PTR [eax]
  41d955:	xchg   BYTE PTR [edx+0x18],dl
  41d958:	popa   
  41d959:	add    DWORD PTR [ebp+0xdb85a0],ebx
  41d95f:	mov    ecx,esp
  41d961:	stos   DWORD PTR es:[edi],eax
  41d962:	fdivr  st(5),st
  41d964:	mov    ecx,0x93d448a3
  41d969:	sbb    eax,0xd21d6919
  41d96e:	push   ds
  41d96f:	mov    al,0xa6
  41d971:	pushf  
  41d972:	push   ss
  41d973:	jp     0x41d9e8
  41d975:	fisttp QWORD PTR [edx+0x36]
  41d978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d979:	aad    0x4a
  41d97b:	xor    eax,0x30772a5d
  41d980:	inc    edi
  41d981:	out    0x43,al
  41d983:	aas    
  41d984:	sub    ecx,DWORD PTR [edx-0x68]
  41d987:	push   ecx
  41d988:	inc    eax
  41d989:	mov    ecx,0x7de21888
  41d98e:	shl    BYTE PTR [ebp-0x36cc8b78],0xa9
  41d995:	pop    ecx
  41d996:	retf   
  41d997:	xchg   esp,eax
  41d998:	call   0x41d3db8d
  41d99d:	test   al,0x3f
  41d99f:	call   0x793e:0x6b121dfe
  41d9a6:	iret   
  41d9a7:	fwait
  41d9a8:	mov    esp,DWORD PTR [ebp-0x73dc667]
  41d9ae:	xor    DWORD PTR [ecx+0x4b],0xdc4de446
  41d9b5:	mov    ah,BYTE PTR [ecx]
  41d9b7:	mov    ah,al
  41d9b9:	cmp    eax,0xf887ad2e
  41d9be:	aas    
  41d9bf:	pusha  
  41d9c0:	in     al,0xa
  41d9c2:	sbb    eax,0xb613c7eb
  41d9c7:	sub    al,0xa7
  41d9c9:	add    ebx,DWORD PTR [ecx+esi*4]
  41d9cc:	cs sub ecx,ebx
  41d9cf:	sbb    edx,DWORD PTR [ebx+ebp*2-0x49]
  41d9d3:	aad    0xdb
  41d9d5:	sub    al,0xaa
  41d9d7:	popa   
  41d9d8:	call   0x6cff:0xb0ab233a
  41d9df:	pop    es
  41d9e0:	adc    bl,0x32
  41d9e3:	scas   eax,DWORD PTR es:[edi]
  41d9e4:	outs   dx,BYTE PTR ds:[esi]
  41d9e5:	push   edi
  41d9e6:	fld    TBYTE PTR [ebx+edi*2+0x37]
  41d9ea:	xor    BYTE PTR [edi-0x43fafb77],bl
  41d9f0:	xor    ecx,0xf82d91af
  41d9f6:	pushf  
  41d9f7:	scas   eax,DWORD PTR es:[edi]
  41d9f8:	push   ds
  41d9f9:	cmp    eax,DWORD PTR [ebp+0x7219d5bf]
  41d9ff:	loopne 0x41d9f8
  41da01:	(bad)  
  41da02:	aas    
  41da03:	push   ecx
  41da04:	sti    
  41da05:	or     edi,DWORD PTR [esp+eax*1]
  41da08:	pop    ebx
  41da09:	push   ebx
  41da0a:	fild   DWORD PTR [eax+eax*8+0x255bd275]
  41da11:	ins    BYTE PTR es:[edi],dx
  41da12:	xchg   esi,eax
  41da13:	es xor eax,0xd888e7f3
  41da19:	or     eax,0x6cdfa69c
  41da1e:	leave  
  41da1f:	jns    0x41da12
  41da21:	inc    eax
  41da22:	mov    ah,0x11
  41da24:	daa    
  41da25:	cmp    eax,0xa310c951
  41da2a:	mov    eax,DWORD PTR [edx-0x30]
  41da2d:	out    0x28,al
  41da2f:	mov    edi,0xc6694a6
  41da34:	jge    0x41dab3
  41da36:	inc    esi
  41da37:	test   al,0xfc
  41da39:	xor    bh,al
  41da3b:	test   eax,0x2ccf9627
  41da40:	push   0xffffff81
  41da42:	adc    DWORD PTR [edx+0x5724cbdd],0x651f775f
  41da4c:	pop    edi
  41da4d:	adc    al,0xc8
  41da4f:	jmp    0x41daad
  41da51:	push   cs
  41da52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da53:	pop    edx
  41da54:	popf   
  41da55:	or     DWORD PTR [edx+ebx*4+0x32bef5c3],0xffffffc1
  41da5d:	mov    eax,gs:0xb56faf09
  41da63:	jp     0x41dad8
  41da65:	ror    BYTE PTR [edx+0x71],0x80
  41da69:	inc    esp
  41da6a:	jne    0x41da10
  41da6c:	add    ecx,DWORD PTR [esi]
  41da6e:	in     eax,0xea
  41da70:	scas   al,BYTE PTR es:[edi]
  41da71:	ja     0x41da45
  41da73:	xchg   esp,eax
  41da74:	fdiv   QWORD PTR [ebp-0x3e]
  41da77:	and    al,0xc2
  41da79:	adc    al,0xf9
  41da7b:	hlt    
  41da7c:	je     0x41daa5
  41da7e:	out    dx,eax
  41da7f:	sbb    eax,0x6893920a
  41da84:	or     ah,BYTE PTR [ecx-0x756c3db6]
  41da8a:	scas   eax,DWORD PTR es:[edi]
  41da8b:	rcl    edi,cl
  41da8d:	xor    al,0x27
  41da8f:	enter  0x17a5,0x84
  41da93:	in     eax,dx
  41da94:	inc    edi
  41da95:	ins    DWORD PTR es:[edi],dx
  41da96:	into   
  41da97:	imul   ebx,esp,0xd63bcfeb
  41da9d:	xor    ah,ch
  41da9f:	and    ebp,edx
  41daa1:	repnz in eax,dx
  41daa3:	frstor [edi]
  41daa5:	ret    
  41daa6:	xchg   edx,eax
  41daa7:	cmp    eax,0x42fec057
  41daac:	arpl   WORD PTR [ebx-0x2e648ad9],sp
  41dab2:	ins    BYTE PTR es:[edi],dx
  41dab3:	dec    ebx
  41dab4:	cs push cs
  41dab6:	mov    ebp,0x74381ca5
  41dabb:	push   edi
  41dabc:	les    edx,FWORD PTR [eax]
  41dabe:	mov    esp,0x4ac6f3e5
  41dac3:	gs lock out 0x47,al
  41dac7:	inc    BYTE PTR [edi+0x17]
  41daca:	xchg   esi,eax
  41dacb:	pusha  
  41dacc:	push   eax
  41dacd:	das    
  41dace:	hlt    
  41dacf:	cmp    cl,al
  41dad1:	fcom   DWORD PTR [esi-0x6b768153]
  41dad7:	(bad)  [edx-0xeffa5ad]
  41dadd:	cld    
  41dade:	retf   
  41dadf:	fst    DWORD PTR [ebp+0x71798fa2]
  41dae5:	jnp    0x41db4e
  41dae7:	into   
  41dae8:	repnz or al,0x68
  41daeb:	cld    
  41daec:	xor    al,0x25
  41daee:	cmp    al,0x13
  41daf0:	ss mov esi,0xa90ba531
  41daf6:	mov    bh,BYTE PTR [edx-0x4848277f]
  41dafc:	test   BYTE PTR [ebx+0x78],cl
  41daff:	and    BYTE PTR [esi-0x70],ch
  41db02:	mov    bh,0xbf
  41db04:	jno    0x41db12
  41db06:	sbb    al,0xd2
  41db08:	out    0xce,al
  41db0a:	outs   dx,BYTE PTR ds:[esi]
  41db0b:	lea    edx,[edx+0x64]
  41db0e:	cmp    bl,BYTE PTR [ebx+eiz*1]
  41db11:	sbb    eax,0x665e7bc0
  41db16:	int    0x6a
  41db18:	stc    
  41db19:	inc    esi
  41db1a:	pop    eax
  41db1b:	xchg   BYTE PTR [eax-0x6cc8d40f],bl
  41db21:	pop    ss
  41db22:	xor    eax,0x8c7bb011
  41db27:	dec    edx
  41db28:	adc    al,0x10
  41db2a:	xchg   ecx,eax
  41db2b:	fcom   st(2)
  41db2d:	inc    ecx
  41db2e:	leave  
  41db2f:	pop    ecx
  41db30:	mov    dl,0xa0
  41db32:	add    al,0x1b
  41db34:	rcl    ebp,1
  41db36:	ds (bad) 
  41db38:	clc    
  41db39:	outs   dx,DWORD PTR ds:[esi]
  41db3a:	aaa    
  41db3b:	sbb    ecx,ecx
  41db3d:	in     al,0x5a
  41db3f:	aas    
  41db40:	hlt    
  41db41:	dec    eax
  41db42:	outs   dx,BYTE PTR ds:[esi]
  41db43:	icebp  
  41db44:	retf   0xd95d
  41db47:	enter  0xe5bb,0x9c
  41db4b:	addr16 cdq 
  41db4d:	pop    edi
  41db4e:	or     al,0x5f
  41db50:	(bad)  
  41db51:	frstor [ecx+eiz*2]
  41db54:	mov    esi,0x572c2dcd
  41db59:	push   ds
  41db5a:	mov    BYTE PTR [esi+0x4e60071d],cl
  41db60:	fild   DWORD PTR [esi-0x34ca03b2]
  41db66:	leave  
  41db67:	dec    eax
  41db68:	add    esi,DWORD PTR [ebp+0xc41efa4]
  41db6e:	adc    ah,BYTE PTR [ecx+ebx*4-0x454813f0]
  41db75:	and    BYTE PTR [ebx+eiz*8+0x45],cl
  41db79:	sbb    bl,BYTE PTR [ecx]
  41db7b:	push   eax
  41db7c:	daa    
  41db7d:	xchg   ebx,ebx
  41db7f:	test   BYTE PTR cs:[ebp+edi*8+0x33],dh
  41db84:	pop    ds
  41db85:	fwait
  41db86:	sahf   
  41db87:	sbb    al,0x41
  41db8a:	pop    ds
  41db8b:	ds mov dh,0x46
  41db8e:	xor    eax,0xc05e616f
  41db93:	mov    esi,0x91056de7
  41db98:	lock rol BYTE PTR [edx+0x3db7480c],cl
  41db9f:	cli    
  41dba0:	les    eax,FWORD PTR [ebx-0x4e]
  41dba3:	clc    
  41dba4:	mov    esp,0x4b8cfb0e
  41dba9:	test   eax,0xe68edeab
  41dbae:	sub    al,0x52
  41dbb0:	xlat   BYTE PTR ds:[ebx]
  41dbb1:	aas    
  41dbb2:	mov    eax,ds:0xa1d592
  41dbb7:	inc    esp
  41dbb8:	push   ecx
  41dbb9:	dec    esp
  41dbba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbbb:	push   ebp
  41dbbc:	dec    edi
  41dbbd:	lds    esi,FWORD PTR [ebx]
  41dbbf:	neg    BYTE PTR [ecx+0x65]
  41dbc2:	addr16 and eax,0x36e57f06
  41dbc8:	xor    ch,bl
  41dbca:	mov    edx,0x50c5e025
  41dbcf:	or     eax,0x20baddd0
  41dbd4:	std    
  41dbd5:	push   ecx
  41dbd6:	jae    0x41dc20
  41dbd8:	rcr    BYTE PTR [ebp-0x53],0x1d
  41dbdc:	or     al,0x4f
  41dbde:	xor    eax,0x7ea7a331
  41dbe3:	push   ecx
  41dbe4:	sbb    BYTE PTR [ebp+0x5a],0x52
  41dbe8:	ss repnz in al,0x5c
  41dbec:	cld    
  41dbed:	aam    0xe8
  41dbef:	es push esp
  41dbf1:	lock pop ds
  41dbf3:	cmp    BYTE PTR [ecx],cl
  41dbf5:	icebp  
  41dbf6:	lock jb 0x41dbce
  41dbf9:	aam    0xfe
  41dbfb:	lea    ebp,[esi]
  41dbfd:	shl    BYTE PTR [edi-0x516bd233],1
  41dc03:	sbb    al,0xab
  41dc05:	fisub  DWORD PTR [edi]
  41dc07:	pop    ds
  41dc08:	in     al,dx
  41dc09:	sbb    bl,0x68
  41dc0c:	mov    ds,esi
  41dc0e:	js     0x41dc52
  41dc10:	cmp    ah,BYTE PTR [ebx]
  41dc12:	mov    bh,0x8d
  41dc14:	dec    ecx
  41dc15:	push   esi
  41dc16:	in     al,0xe7
  41dc18:	sbb    BYTE PTR [esi+ebp*4-0x15],ah
  41dc1c:	adc    edx,esi
  41dc1e:	or     ebx,eax
  41dc20:	ins    BYTE PTR es:[edi],dx
  41dc21:	stos   BYTE PTR es:[edi],al
  41dc22:	cwde   
  41dc23:	jns    0x41dc40
  41dc25:	jae    0x41dc69
  41dc27:	push   0xffffffb4
  41dc29:	pop    ebx
  41dc2a:	mov    ch,0xa8
  41dc2c:	cmp    DWORD PTR [eax],esi
  41dc2e:	(bad)  
  41dc2f:	arpl   WORD PTR [eax+0x6],di
  41dc32:	arpl   WORD PTR [edi],sp
  41dc34:	add    BYTE PTR [ebp+0x8daba33],cl
  41dc3a:	std    
  41dc3b:	test   eax,0x85094583
  41dc40:	je     0x41dc37
  41dc42:	mov    eax,ds:0x78af4942
  41dc47:	and    BYTE PTR [edi-0x2c8e0a0a],ch
  41dc4d:	adc    ecx,esi
  41dc4f:	cmp    BYTE PTR [edi],bl
  41dc51:	and    cl,BYTE PTR [ebp+0x4fb4f946]
  41dc57:	pop    ecx
  41dc58:	dec    ebx
  41dc59:	repz mov esi,0x10ac0b2b
  41dc5f:	mov    ebx,0x67443ea3
  41dc64:	mov    cl,0xf9
  41dc66:	pop    ds
  41dc67:	test   eax,0xc20f2b18
  41dc6c:	sub    DWORD PTR [ebp-0xc],esi
  41dc6f:	xchg   edx,eax
  41dc70:	outs   dx,BYTE PTR ds:[esi]
  41dc71:	loopne 0x41dcda
  41dc73:	pop    es
  41dc74:	sub    DWORD PTR [edx-0x3a],0x87972f24
  41dc7b:	test   eax,0xe32aab62
  41dc80:	retf   
  41dc81:	es lahf 
  41dc83:	mov    eax,0x35a57d1d
  41dc88:	mov    dh,0xcb
  41dc8a:	mov    ds:0xd9724a9,al
  41dc8f:	test   BYTE PTR [edi-0x13b86333],ah
  41dc95:	dec    ebp
  41dc96:	inc    edx
  41dc97:	adc    esi,0x18e3873c
  41dc9d:	add    eax,0x14def1ab
  41dca2:	aad    0x1d
  41dca4:	jle    0x41dd04
  41dca6:	xor    DWORD PTR [ecx-0x7972e3c6],esi
  41dcac:	out    0x75,eax
  41dcae:	push   ebx
  41dcaf:	aam    0x4b
  41dcb1:	sub    al,0x6c
  41dcb3:	ds ss dec eax
  41dcb6:	in     al,dx
  41dcb7:	pop    ecx
  41dcb8:	jnp    0x41dc78
  41dcba:	pop    ecx
  41dcbb:	inc    ecx
  41dcbc:	cmp    ah,BYTE PTR [edi+0x7b]
  41dcbf:	ror    DWORD PTR [edx+0x31d78f80],0xe1
  41dcc6:	push   esi
  41dcc7:	jmp    0xb8edfe16
  41dccc:	push   ds
  41dccd:	or     dl,cl
  41dccf:	retf   
  41dcd0:	xchg   ecx,eax
  41dcd1:	pusha  
  41dcd2:	mov    edi,0x7d2d4691
  41dcd7:	scas   eax,DWORD PTR es:[edi]
  41dcd8:	arpl   WORD PTR ds:0x34bfac65,ax
  41dcde:	out    0x2f,al
  41dce0:	adc    al,0xa9
  41dce2:	ds xchg ebx,eax
  41dce4:	(bad)  [ecx]
  41dce6:	aaa    
  41dce7:	into   
  41dce8:	mov    dl,0x1e
  41dcea:	(bad)  
  41dcec:	lods   eax,DWORD PTR ds:[esi]
  41dced:	lods   al,BYTE PTR ds:[esi]
  41dcee:	mov    dh,0x50
  41dcf0:	push   es
  41dcf1:	cmp    ebx,esp
  41dcf3:	jbe    0x41dca5
  41dcf5:	dec    ebp
  41dcf6:	cmp    eax,0xda1ebcfc
  41dcfb:	aaa    
  41dcfc:	(bad)  
  41dcfd:	cmc    
  41dcfe:	arpl   bx,di
  41dd00:	test   DWORD PTR ds:0x9a98c916,edi
  41dd06:	ret    0x7404
  41dd09:	xchg   ebx,eax
  41dd0a:	pop    ss
  41dd0b:	jge    0x41dcb0
  41dd0d:	mov    edi,0xc0750b23
  41dd12:	ret    0x9538
  41dd15:	(bad)  
  41dd16:	adc    DWORD PTR [esi-0x650f1733],esp
  41dd1c:	outs   dx,BYTE PTR ds:[esi]
  41dd1d:	out    0x65,al
  41dd1f:	in     al,dx
  41dd20:	sub    BYTE PTR [edi-0xe5b434c],ah
  41dd26:	test   eax,0xbbdb637e
  41dd2b:	inc    esp
  41dd2c:	outs   dx,BYTE PTR ds:[esi]
  41dd2d:	nop
  41dd2e:	inc    edx
  41dd2f:	cmp    eax,0x580d0033
  41dd34:	xchg   edi,eax
  41dd35:	sub    bh,al
  41dd37:	push   esi
  41dd38:	push   esi
  41dd39:	mov    eax,ds:0x5129f73d
  41dd3e:	fdivr  st,st(0)
  41dd40:	mov    bl,0x6e
  41dd42:	inc    eax
  41dd43:	les    esp,FWORD PTR [eax+0x0]
  41dd46:	ja     0x41dd2d
  41dd48:	jno    0x41ddc2
  41dd4a:	enter  0x4c0d,0xc9
  41dd4e:	pop    ebx
  41dd4f:	jge    0x41ddc5
  41dd51:	ja     0x41dd06
  41dd53:	imul   BYTE PTR [ebx]
  41dd55:	dec    ebp
  41dd56:	cmp    eax,0x1998c14b
  41dd5b:	sbb    DWORD PTR [ebp+0x2e8ef0ed],0xffffff8a
  41dd62:	sahf   
  41dd63:	cwde   
  41dd64:	hlt    
  41dd65:	push   ebx
  41dd66:	push   0xffffffdd
  41dd68:	bound  ebp,QWORD PTR [eax+edx*2-0x43]
  41dd6c:	sahf   
  41dd6d:	(bad)  
  41dd6e:	jmp    0x7a1d:0xdc5a5d7d
  41dd75:	jae    0x41dd85
  41dd77:	xor    ecx,DWORD PTR [edx-0x40860f5a]
  41dd7d:	push   esi
  41dd7e:	mov    bh,0xc
  41dd80:	xchg   ebx,eax
  41dd81:	scas   eax,DWORD PTR es:[edi]
  41dd82:	int3   
  41dd83:	pushf  
  41dd84:	cmp    DWORD PTR [ecx-0x24],ebx
  41dd87:	sub    DWORD PTR ds:0x2da0dc4b,ebx
  41dd8d:	test   ecx,esi
  41dd8f:	jp     0x41dd6b
  41dd91:	lock mov ds:0xd4cc08fe,al
  41dd97:	lods   eax,DWORD PTR ds:[esi]
  41dd98:	ds in  al,dx
  41dd9a:	aam    0xe6
  41dd9c:	and    esi,DWORD PTR [ebp-0x72]
  41dd9f:	lods   eax,DWORD PTR ds:[esi]
  41dda0:	pop    edx
  41dda1:	ja     0x41dd56
  41dda3:	push   0xffffffad
  41dda5:	mov    ebx,0xe2f57365
  41ddaa:	mov    bl,0xa0
  41ddac:	push   edi
  41ddad:	or     esi,edi
  41ddaf:	inc    esi
  41ddb0:	xor    eax,0xfaa2f420
  41ddb5:	mov    edi,es
  41ddb7:	push   esp
  41ddb8:	xor    ecx,DWORD PTR [ebx+0x548fdc3b]
  41ddbe:	dec    esi
  41ddbf:	sub    eax,0x3c8c1a52
  41ddc4:	push   ss
  41ddc5:	add    BYTE PTR [ebx+0x5dd5fdf8],al
  41ddcb:	test   DWORD PTR [ebx-0x52],ebx
  41ddce:	and    al,0x16
  41ddd0:	fisubr WORD PTR [eax+0x62]
  41ddd3:	repz jno 0x41dd78
  41ddd6:	(bad)  
  41ddd7:	in     eax,dx
  41ddd8:	mov    eax,0x5ddcbad
  41dddd:	adc    ch,BYTE PTR [ebx]
  41dddf:	fild   DWORD PTR [ebx+0x76]
  41dde2:	inc    esi
  41dde3:	push   ecx
  41dde4:	pop    eax
  41dde5:	ffreep st(0)
  41dde7:	inc    ebx
  41dde8:	xchg   ecx,eax
  41dde9:	mov    cl,0x55
  41ddeb:	sahf   
  41ddec:	mov    ebp,0x1c045cf4
  41ddf1:	jnp    0x41ddb7
  41ddf3:	cmp    eax,0x36de61ff
  41ddf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddf9:	movlhps xmm6,xmm7
  41ddfc:	jmp    0x41de00
  41ddfe:	das    
  41ddff:	lock add dh,BYTE PTR [edx-0x3f]
  41de03:	push   edi
  41de04:	out    0xa7,eax
  41de06:	mov    ebp,0xf4a0cb72
  41de0b:	icebp  
  41de0c:	leave  
  41de0d:	in     al,0x6f
  41de0f:	iret   
  41de10:	add    edi,esp
  41de12:	int    0xed
  41de14:	cmp    BYTE PTR [edx+0x68],ah
  41de17:	gs sahf 
  41de19:	sbb    ah,al
  41de1b:	fisub  WORD PTR [esi+0x1a45c9b6]
  41de21:	lods   eax,DWORD PTR ds:[esi]
  41de22:	sub    eax,0xe25be237
  41de27:	bound  esp,QWORD PTR [esi-0x4aaefa27]
  41de2d:	cmp    BYTE PTR [edx+0x52f6c1f4],0x3d
  41de34:	jno    0x41de19
  41de36:	jbe    0x41de11
  41de38:	ror    DWORD PTR [ecx+0x2a],0x44
  41de3c:	lods   eax,DWORD PTR ds:[esi]
  41de3d:	(bad)  
  41de3e:	sti    
  41de3f:	or     eax,0x6d2fa491
  41de44:	fidivr WORD PTR [edi+0x6f]
  41de47:	arpl   WORD PTR [ebx],cx
  41de49:	ins    BYTE PTR es:[edi],dx
  41de4a:	nop
  41de4b:	mov    dh,BYTE PTR [ebx+0x3e]
  41de4e:	sub    eax,0x7663a079
  41de53:	push   0x88b5a866
  41de58:	test   DWORD PTR [eax],0xe2991afc
  41de5e:	xchg   esi,eax
  41de5f:	ror    ebx,1
  41de61:	mov    ah,0xdb
  41de63:	mov    ecx,0xaf91e42d
  41de68:	fist   WORD PTR [ecx+0x74]
  41de6b:	and    al,BYTE PTR [edx]
  41de6d:	gs inc ecx
  41de6f:	inc    edi
  41de70:	clc    
  41de71:	std    
  41de72:	shl    DWORD PTR cs:[edi+0xef64490],cl
  41de79:	pop    ss
  41de7a:	push   ebx
  41de7b:	jle    0x41de8a
  41de7d:	cmp    DWORD PTR [edx],ebx
  41de7f:	stos   BYTE PTR es:[edi],al
  41de80:	add    eax,0xd3e882af
  41de85:	xchg   edi,eax
  41de86:	inc    esp
  41de87:	out    0x67,al
  41de89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de8a:	mov    ch,BYTE PTR [ecx+0x25]
  41de8d:	cld    
  41de8e:	mov    esi,DWORD PTR [esi+edi*8-0x1]
  41de92:	jge    0x41deaa
  41de94:	cmp    DWORD PTR [ebx+edx*4+0x70],ebp
  41de98:	ja     0x41de69
  41de9a:	cmp    DWORD PTR [ecx],esi
  41de9c:	xor    dh,BYTE PTR [eax+0x1e]
  41de9f:	test   esp,eax
  41dea1:	loop   0x41de61
  41dea3:	and    BYTE PTR [ebx-0x17],dh
  41dea6:	bound  eax,QWORD PTR [ebx-0x3b]
  41dea9:	add    eax,0xd511e402
  41deae:	and    eax,0x5bb59992
  41deb3:	aam    0xc8
  41deb5:	xchg   esi,eax
  41deb6:	cmp    DWORD PTR [ecx],ecx
  41deb8:	xchg   edi,eax
  41deb9:	sub    BYTE PTR [edi],cl
  41debb:	mov    eax,0x9a78f17b
  41dec0:	add    eax,0x1982c42d
  41dec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dec6:	jg     0x41de56
  41dec8:	sub    ebp,ebx
  41deca:	inc    edx
  41decb:	sub    DWORD PTR [ebx+eax*1-0x20b8a93e],ecx
  41ded2:	xor    eax,0xc7319930
  41ded7:	push   es
  41ded8:	sub    BYTE PTR [esp+ebx*2-0x708f611e],ah
  41dedf:	bound  ecx,QWORD PTR [ecx-0x76]
  41dee2:	dec    ecx
  41dee3:	cmp    DWORD PTR [esi-0x7917ddb6],esi
  41dee9:	sbb    ch,dl
  41deeb:	pushf  
  41deec:	cwde   
  41deed:	dec    edi
  41deee:	fistp  QWORD PTR [ebx]
  41def0:	push   0xa919c6d
  41def5:	jg     0x41df55
  41def7:	(bad)  
  41def9:	xchg   BYTE PTR [edx],dl
  41defb:	out    0xb6,al
  41defd:	xor    DWORD PTR [esi+edi*4-0x5b],esp
  41df01:	xchg   edx,eax
  41df02:	dec    eax
  41df03:	aas    
  41df04:	xchg   ecx,eax
  41df05:	xor    BYTE PTR [esi],dh
  41df07:	outs   dx,BYTE PTR ds:[esi]
  41df08:	fisubr DWORD PTR [esi-0x272fc757]
  41df0e:	cwde   
  41df0f:	gs daa 
  41df11:	adc    ecx,esi
  41df13:	xor    DWORD PTR [edi-0x2602ada2],edx
  41df19:	scas   eax,DWORD PTR es:[edi]
  41df1a:	fsub   st(5),st
  41df1c:	nop
  41df1d:	sub    BYTE PTR [edx+esi*1],bl
  41df20:	loop   0x41deb9
  41df22:	sub    al,0x35
  41df24:	xor    BYTE PTR [esi+0x4],cl
  41df27:	mov    al,ds:0x5afdb38b
  41df2c:	(bad)  
  41df2d:	mov    al,ds:0xdc41f332
  41df32:	add    al,0x15
  41df34:	dec    cl
  41df36:	inc    esi
  41df37:	(bad)  
  41df38:	fwait
  41df39:	mov    bh,0xb2
  41df3b:	xor    al,0x39
  41df3d:	push   edi
  41df3e:	add    eax,0xb1c5fcba
  41df43:	stos   BYTE PTR es:[edi],al
  41df44:	jns    0x41df14
  41df46:	pop    ebx
  41df47:	ins    BYTE PTR es:[edi],dx
  41df48:	stos   BYTE PTR es:[edi],al
  41df49:	ss in  eax,dx
  41df4b:	mov    ecx,0xea0c0154
  41df50:	push   edi
  41df51:	es fcom st(3)
  41df54:	(bad)  
  41df55:	jb     0x41df61
  41df57:	lods   al,BYTE PTR ds:[esi]
  41df58:	inc    edi
  41df59:	jecxz  0x41df55
  41df5b:	cmp    bh,BYTE PTR [edi-0x709a7f15]
  41df61:	and    eax,edx
  41df63:	push   ds
  41df64:	and    esi,DWORD PTR [esi]
  41df66:	cli    
  41df67:	lahf   
  41df68:	dec    edi
  41df69:	aaa    
  41df6a:	cmc    
  41df6b:	jmp    0xe52b9eaa
  41df70:	enter  0x58ae,0x2e
  41df74:	out    0x9b,al
  41df76:	popf   
  41df77:	pop    edi
  41df78:	rcl    BYTE PTR [ecx-0x51],1
  41df7b:	jo     0x41dfa4
  41df7d:	pop    ebx
  41df7e:	lds    esi,FWORD PTR [ebp-0x50]
  41df81:	aaa    
  41df82:	mov    esp,0x8e2545da
  41df87:	cmp    dl,BYTE PTR [eax]
  41df89:	xchg   BYTE PTR [edi],cl
  41df8b:	outs   dx,BYTE PTR ds:[esi]
  41df8c:	dec    ebp
  41df8d:	stos   DWORD PTR es:[edi],eax
  41df8e:	test   DWORD PTR [ebp+ebx*4-0x54],esi
  41df92:	mov    dl,0x5c
  41df94:	cmp    eax,0x73bfb1db
  41df99:	or     ecx,0x40d8a3b3
  41df9f:	push   ebp
  41dfa0:	xor    BYTE PTR [ebp+esi*4+0xdd633f1],bl
  41dfa7:	das    
  41dfa8:	pop    ebp
  41dfa9:	xor    al,0xfe
  41dfab:	sbb    bh,0xd0
  41dfae:	clc    
  41dfaf:	mov    al,ds:0x45906587
  41dfb4:	imul   edi,DWORD PTR [edx-0x6411e903],0x7b
  41dfbb:	xchg   BYTE PTR [ecx],bl
  41dfbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfbe:	mov    DWORD PTR [ebx-0x51],0x2def40c1
  41dfc5:	xchg   ebx,eax
  41dfc6:	and    eax,0x21e0ea16
  41dfcb:	arpl   WORD PTR [ecx+0x6a59d7b9],di
  41dfd1:	loop   0x41dfb5
  41dfd3:	sub    BYTE PTR [edx],ch
  41dfd5:	push   esp
  41dfd6:	pushf  
  41dfd7:	fcomp  st(4)
  41dfd9:	ret    
  41dfda:	loopne 0x41dfee
  41dfdc:	ret    
  41dfdd:	cmp    dl,BYTE PTR [edi]
  41dfdf:	inc    esi
  41dfe0:	and    eax,0xcbfab822
  41dfe5:	cmp    edi,DWORD PTR [esi+0x7f]
  41dfe8:	arpl   WORD PTR [esi],bp
  41dfea:	mov    DWORD PTR [esi-0x40],edi
  41dfed:	(bad)  
  41dfef:	aaa    
  41dff0:	inc    edi
  41dff1:	jbe    0x41e008
  41dff3:	add    al,bl
  41dff5:	sbb    ah,0xb7
  41dff8:	mov    cs,WORD PTR [ebx+0x5f]
  41dffb:	shl    BYTE PTR [eax+edx*2+0x7b],1
  41dfff:	out    0xc2,eax
  41e001:	xor    al,0xc0
  41e003:	loopne 0x41dfeb
  41e005:	repnz ficomp DWORD PTR [edx-0x36]
  41e009:	inc    edi
  41e00a:	push   ds
  41e00b:	add    DWORD PTR [ecx+edi*4+0x365b1071],ebx
  41e012:	imul   edx,DWORD PTR [ebp-0x4e],0x51b4d124
  41e019:	fsub   st,st(0)
  41e01b:	rcr    BYTE PTR [edi],0xb8
  41e01e:	jecxz  0x41e00d
  41e020:	lods   al,BYTE PTR ds:[esi]
  41e021:	jo     0x41e075
  41e023:	test   BYTE PTR [ebx],0x95
  41e026:	push   esi
  41e027:	enter  0x1615,0xf2
  41e02b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e02c:	inc    esp
  41e02d:	cmp    cl,dh
  41e02f:	or     al,0xf
  41e031:	mul    DWORD PTR [ebp+0x37]
  41e034:	aaa    
  41e035:	nop
  41e036:	inc    ebx
  41e037:	push   esp
  41e038:	xchg   BYTE PTR [edi-0x4d],bl
  41e03b:	adc    esi,DWORD PTR [edx]
  41e03d:	inc    ebx
  41e03e:	fidiv  WORD PTR [ebp+0x555ec70c]
  41e044:	jne    0x41e03d
  41e046:	in     al,0xee
  41e048:	pushf  
  41e049:	adc    esp,DWORD PTR [ebx]
  41e04b:	pop    ss
  41e04c:	xor    edi,DWORD PTR [ebp+edi*4+0x1111c59d]
  41e053:	retf   0xc3c5
  41e056:	inc    ecx
  41e057:	dec    ebp
  41e058:	es pop ebx
  41e05a:	jg     0x41e0ca
  41e05c:	sub    dh,BYTE PTR [edi-0x25]
  41e05f:	aaa    
  41e060:	pop    ds
  41e061:	and    al,0xae
  41e063:	mov    ch,0xaf
  41e065:	cmp    BYTE PTR [ebx+0x4d],ch
  41e068:	mov    ecx,esp
  41e06a:	ja     0x41e066
  41e06c:	ficom  WORD PTR [esi]
  41e06e:	jmp    0x41e0ce
  41e070:	mov    ds,WORD PTR [eax+0x3d]
  41e073:	sub    ch,BYTE PTR [edi-0x43]
  41e076:	imul   eax,DWORD PTR [ecx],0xffffffef
  41e079:	adc    al,dl
  41e07b:	dec    edx
  41e07c:	sbb    DWORD PTR [esi],esi
  41e07e:	out    dx,al
  41e07f:	mov    gs,WORD PTR [ecx-0x3414c383]
  41e085:	inc    esp
  41e086:	fild   DWORD PTR [edx]
  41e088:	or     eax,ebp
  41e08a:	pop    edi
  41e08b:	push   ebx
  41e08c:	fdiv   DWORD PTR cs:[ebp-0x36524fec]
  41e093:	and    al,0x15
  41e095:	xchg   edi,eax
  41e096:	ror    BYTE PTR [ebx+0x298c072],cl
  41e09c:	imul   edi,DWORD PTR [edx-0x311628fd],0x5c8f4022
  41e0a6:	add    edi,DWORD PTR [edi-0x2445a3c0]
  41e0ac:	xor    eax,0xa3a7a341
  41e0b1:	(bad)  
  41e0b2:	cli    
  41e0b3:	daa    
  41e0b4:	fild   QWORD PTR [eax-0x46]
  41e0b7:	dec    ebp
  41e0b8:	mov    ebp,0xbbe7aca9
  41e0bd:	aas    
  41e0be:	stc    
  41e0bf:	mov    eax,0x8134ff8e
  41e0c4:	xchg   edi,eax
  41e0c5:	loop   0x41e059
  41e0c7:	std    
  41e0c8:	push   ds
  41e0c9:	dec    edi
  41e0ca:	lock stc 
  41e0cc:	in     eax,dx
  41e0cd:	mov    dh,0x67
  41e0cf:	mov    esi,0x1dfbbd59
  41e0d4:	outs   dx,BYTE PTR ds:[esi]
  41e0d5:	(bad)  [edi-0x7dd0307e]
  41e0db:	push   DWORD PTR [ebx-0x56087f3d]
  41e0e1:	inc    edx
  41e0e2:	prefetcht2 BYTE PTR [edx+ebx*1+0x5c]
  41e0e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0e8:	cdq    
  41e0e9:	cmp    BYTE PTR [eax],dh
  41e0eb:	mov    ebx,0xfa4984b2
  41e0f0:	(bad)  
  41e0f1:	outs   dx,DWORD PTR ds:[esi]
  41e0f2:	fadd   DWORD PTR [ebx-0x59]
  41e0f5:	pop    esi
  41e0f6:	push   esp
  41e0f7:	imul   ebp,esi,0xffffffe4
  41e0fa:	ins    DWORD PTR es:[edi],dx
  41e0fb:	xlat   BYTE PTR ds:[ebx]
  41e0fc:	dec    ecx
  41e0fd:	cdq    
  41e0fe:	sbb    al,0xb3
  41e100:	xor    al,0xf4
  41e102:	cmp    al,0xec
  41e104:	mov    cl,0xb
  41e106:	add    DWORD PTR [ecx-0x2a17072a],edx
  41e10c:	cmp    bl,BYTE PTR [edx+0x5c]
  41e10f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e110:	mov    edi,0x28d57dbb
  41e115:	shr    DWORD PTR ds:0x7127556f,1
  41e11b:	push   ss
  41e11c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e11d:	jecxz  0x41e0c3
  41e11f:	loopne 0x41e17e
  41e121:	dec    esp
  41e122:	jo     0x41e15a
  41e124:	ret    
  41e125:	(bad)  
  41e126:	out    0xac,al
  41e128:	int3   
  41e129:	pop    edx
  41e12a:	xchg   edi,eax
  41e12b:	pop    esi
  41e12c:	jmp    0xb1cc:0xfa91dc06
  41e133:	or     al,0xcc
  41e135:	cmp    dh,BYTE PTR [ebx-0x61ea645a]
  41e13b:	hlt    
  41e13c:	mov    bl,0x74
  41e13e:	xchg   esp,eax
  41e13f:	push   ebx
  41e140:	stc    
  41e141:	test   BYTE PTR [esi],bh
  41e143:	xor    al,0xd8
  41e145:	xor    eax,0xb128c4be
  41e14a:	jae    0x41e1b7
  41e14c:	fstp   st(7)
  41e14e:	lds    ecx,FWORD PTR [esi-0x3c72fddb]
  41e154:	mov    eax,0x1389361a
  41e159:	push   edx
  41e15a:	mov    dh,0x9
  41e15c:	test   DWORD PTR [edi+0x60],ebp
  41e15f:	add    BYTE PTR [edx-0x3],0x5e
  41e163:	inc    edi
  41e164:	mov    ds:0x5a73fa29,al
  41e169:	mov    ebp,0xda868c29
  41e16e:	or     dh,bl
  41e170:	stos   BYTE PTR es:[edi],al
  41e171:	dec    ebp
  41e172:	imul   eax,DWORD PTR [ebx-0x34f93107],0xffffff9e
  41e179:	inc    esi
  41e17a:	fcom   QWORD PTR [edi+0x15]
  41e17d:	mov    ecx,0xb915e09c
  41e182:	jl     0x41e1b8
  41e184:	ins    DWORD PTR es:[edi],dx
  41e185:	and    BYTE PTR [edi+0x5f],al
  41e188:	ss jmp 0x3023f040
  41e18e:	jle    0x41e127
  41e190:	inc    edx
  41e191:	or     dl,0xfa
  41e194:	jmp    0x41e1a4
  41e196:	mov    ebp,0xc99cb97d
  41e19b:	(bad)  
  41e19c:	dec    ecx
  41e19d:	add    eax,0xd8b8f868
  41e1a2:	push   0x16cd354e
  41e1a7:	jmp    0x9b0:0xac9d8758
  41e1ae:	outs   dx,DWORD PTR ds:[esi]
  41e1af:	or     dl,BYTE PTR [edx+0x69]
  41e1b2:	test   al,0xa3
  41e1b4:	je     0x41e22b
  41e1b6:	dec    edi
  41e1b7:	stos   DWORD PTR es:[edi],eax
  41e1b8:	icebp  
  41e1b9:	sub    BYTE PTR [ebx],dh
  41e1bb:	dec    edi
  41e1bc:	cdq    
  41e1bd:	lods   eax,DWORD PTR ds:[esi]
  41e1be:	int    0x6c
  41e1c0:	mov    bh,0x65
  41e1c3:	rcl    DWORD PTR [edx+ecx*1-0x268ebae5],0x7c
  41e1cb:	es dec esi
  41e1cd:	shr    BYTE PTR [esi],1
  41e1cf:	scas   eax,DWORD PTR es:[edi]
  41e1d0:	jnp    0x41e242
  41e1d2:	jb     0x41e156
  41e1d4:	xchg   esi,eax
  41e1d5:	test   al,0x3f
  41e1d7:	mov    ebx,0x698270f9
  41e1dc:	sub    eax,ebx
  41e1de:	and    eax,0x7c67c682
  41e1e3:	adc    BYTE PTR [edi+0x15],al
  41e1e6:	xchg   esp,eax
  41e1e7:	cld    
  41e1e8:	clc    
  41e1e9:	push   es
  41e1ea:	mov    ds:0x5370c292,eax
  41e1ef:	(bad)  
  41e1f0:	xchg   ebx,eax
  41e1f1:	dec    ecx
  41e1f2:	ds int 0xe2
  41e1f5:	dec    ecx
  41e1f6:	adc    DWORD PTR [esi-0xb816a2e],ecx
  41e1fc:	mul    dl
  41e1fe:	fcmovnu st,st(4)
  41e200:	add    bh,dh
  41e202:	pop    ecx
  41e203:	sti    
  41e204:	out    0xe8,al
  41e206:	mov    ebx,0x4b2d25be
  41e20b:	pop    DWORD PTR [edi+ebp*8]
  41e20e:	pop    edx
  41e20f:	push   ebp
  41e210:	jb     0x41e28d
  41e212:	lock push ebp
  41e214:	jmp    DWORD PTR ds:0x50b0df76
  41e21a:	jb     0x41e26b
  41e21c:	dec    ebp
  41e21d:	jb     0x41e23b
  41e21f:	mov    ds:0xa8656623,al
  41e224:	mov    BYTE PTR [eax+0x22],ah
  41e227:	jnp    0x41e213
  41e229:	ss jb  0x41e25a
  41e22c:	xor    DWORD PTR fs:[edi+ebx*2+0x60],eax
  41e231:	gs in  al,dx
  41e233:	mov    edx,0x33191cfb
  41e238:	jb     0x41e20d
  41e23a:	loop   0x41e28b
  41e23c:	or     eax,0xc0f51413
  41e241:	sbb    ch,BYTE PTR [eax-0x3579b5d7]
  41e247:	inc    BYTE PTR ds:0xde8f91c4
  41e24d:	or     al,0x64
  41e24f:	(bad)  [edx-0x14]
  41e252:	lods   al,BYTE PTR ds:[esi]
  41e253:	mov    ebp,0xb7ad1094
  41e258:	pop    ds
  41e259:	lods   eax,DWORD PTR ds:[esi]
  41e25a:	test   eax,0x8bf8266f
  41e25f:	aam    0x86
  41e261:	mov    ecx,0x42ae0149
  41e266:	cmp    BYTE PTR [ebx+0x626badbe],al
  41e26c:	add    ebx,0xffffffaf
  41e26f:	mov    edi,0xdd10b22c
  41e274:	loop   0x41e247
  41e276:	pop    esp
  41e277:	je     0x41e263
  41e279:	xchg   ebp,eax
  41e27a:	push   es
  41e27b:	into   
  41e27c:	xchg   DWORD PTR [esp+edi*2+0x7f],edi
  41e280:	pushf  
  41e281:	xor    BYTE PTR [edx+0x9],bh
  41e284:	jbe    0x41e28a
  41e286:	add    al,bl
  41e288:	popa   
  41e289:	mov    eax,0x650fbe13
  41e28e:	inc    DWORD PTR [ecx+0x73]
  41e291:	sbb    cl,cl
  41e293:	in     al,dx
  41e294:	mov    eax,0xa9189206
  41e299:	test   BYTE PTR [edi+esi*2+0x2b6ede8a],dl
  41e2a0:	jl     0x41e28b
  41e2a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2a3:	outs   dx,BYTE PTR ds:[esi]
  41e2a4:	fisub  DWORD PTR [ebp+0x40]
  41e2a7:	loopne 0x41e253
  41e2a9:	enter  0xb5ed,0xcf
  41e2ad:	mov    bh,0x89
  41e2af:	imul   dh
  41e2b1:	lahf   
  41e2b2:	cmp    eax,0x59b3af79
  41e2b7:	in     eax,0x23
  41e2b9:	popa   
  41e2ba:	mov    cl,0x9d
  41e2bc:	iret   
  41e2bd:	add    al,BYTE PTR [esi]
  41e2bf:	mov    ebx,0x5bf136cd
  41e2c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2c5:	fistp  WORD PTR [ebx-0x2e661106]
  41e2cb:	imul   ebx,DWORD PTR [eax+0x8],0x19
  41e2cf:	pop    ebp
  41e2d0:	pop    ds
  41e2d1:	jbe    0x41e2c8
  41e2d3:	jne    0x41e259
  41e2d5:	or     BYTE PTR [eax-0x2d],0x92
  41e2d9:	push   edx
  41e2da:	repz pop ds
  41e2dc:	test   BYTE PTR [ebx+0x6563b4ae],dl
  41e2e2:	and    al,0x61
  41e2e4:	xor    eax,0xb3b5230e
  41e2e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2ea:	add    BYTE PTR [esi+ebp*8],bl
  41e2ed:	push   edx
  41e2ee:	hlt    
  41e2ef:	addr16 cs retf 
  41e2f2:	xchg   BYTE PTR [eax-0x56],dl
  41e2f5:	mov    BYTE PTR [ebx+0x4781be03],bl
  41e2fb:	and    BYTE PTR [edx-0x7],bh
  41e2fe:	pop    eax
  41e2ff:	jp     0x41e325
  41e301:	mov    BYTE PTR [ebp-0x15d95cde],bh
  41e307:	cmp    ecx,esp
  41e309:	jne    0x41e2cc
  41e30b:	in     al,dx
  41e30c:	sbb    DWORD PTR [esi+0x24a8410c],eax
  41e312:	dec    edi
  41e313:	inc    ebp
  41e314:	inc    ecx
  41e315:	push   ecx
  41e316:	push   es
  41e317:	mov    WORD PTR [esi+0x1002c5e7],?
  41e31d:	and    BYTE PTR [eax],dh
  41e31f:	pop    ebx
  41e320:	push   edx
  41e321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e322:	ins    DWORD PTR es:[edi],dx
  41e323:	call   0xd636:0x1f3e195b
  41e32a:	cld    
  41e32b:	ins    DWORD PTR es:[edi],dx
  41e32c:	scas   al,BYTE PTR es:[edi]
  41e32d:	enter  0x3d15,0x9a
  41e331:	in     al,dx
  41e332:	popa   
  41e333:	inc    edx
  41e334:	sbb    eax,DWORD PTR [ecx]
  41e336:	call   DWORD PTR ds:0x7669fbf9
  41e33c:	call   0x473f:0xb2ccfec
  41e343:	jnp    0x41e397
  41e345:	aad    0x8
  41e347:	dec    ebp
  41e348:	xchg   edx,eax
  41e349:	mov    ds:0x4fca28a3,al
  41e34e:	pop    edi
  41e34f:	ins    DWORD PTR es:[edi],dx
  41e350:	xchg   ebx,eax
  41e351:	scas   al,BYTE PTR es:[edi]
  41e352:	dec    ebp
  41e353:	sbb    al,0x5d
  41e355:	push   0xffffff96
  41e357:	fimul  DWORD PTR [edi]
  41e359:	int    0x72
  41e35b:	mov    cl,BYTE PTR [edx]
  41e35d:	cmp    DWORD PTR [edi+0x73],ebp
  41e360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e361:	ret    0xd36
  41e364:	jbe    0x41e2f0
  41e366:	stos   DWORD PTR es:[edi],eax
  41e367:	adc    al,0xf1
  41e369:	mov    esi,ecx
  41e36b:	jbe    0x41e3a8
  41e36d:	fild   WORD PTR [edi+0x5f]
  41e370:	and    DWORD PTR [esi+0x6a0d2821],ecx
  41e376:	inc    edx
  41e377:	cmp    BYTE PTR [ebx],0x11
  41e37a:	jno    0x41e3ba
  41e37c:	xor    dh,BYTE PTR [edi+0x0]
  41e37f:	and    al,BYTE PTR [esp+ecx*4-0x64]
  41e383:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e384:	sbb    ebx,DWORD PTR [ebp-0x79]
  41e387:	mov    dh,0xa2
  41e389:	pop    esp
  41e38a:	jae    0x41e313
  41e38c:	jecxz  0x41e409
  41e38e:	jmp    0x41e38e
  41e390:	daa    
  41e391:	outs   dx,BYTE PTR ds:[esi]
  41e392:	movups XMMWORD PTR [edi],xmm2
  41e395:	xchg   esp,eax
  41e396:	cs lahf 
  41e398:	xlat   BYTE PTR ds:[ebx]
  41e399:	in     eax,dx
  41e39a:	rcl    DWORD PTR fs:[eax],0x36
  41e39e:	mov    ecx,0xf2b5af16
  41e3a3:	jne    0x41e40d
  41e3a5:	push   ebp
  41e3a6:	and    BYTE PTR [ebx+0x2c025749],al
  41e3ac:	fsubrp st(1),st
  41e3ae:	jno    0x41e339
  41e3b0:	push   ss
  41e3b1:	mov    ds:0xaaff7ed1,eax
  41e3b6:	nop
  41e3b7:	icebp  
  41e3b8:	test   DWORD PTR [eax+edx*2-0x30],edi
  41e3bc:	add    DWORD PTR [eax],ebp
  41e3be:	inc    ebp
  41e3bf:	ins    BYTE PTR es:[edi],dx
  41e3c0:	xchg   esi,eax
  41e3c1:	pcmpgtd mm0,QWORD PTR [eax]
  41e3c4:	gs inc edx
  41e3c6:	ins    BYTE PTR es:[edi],dx
  41e3c7:	(bad)  
  41e3c8:	sti    
  41e3c9:	xor    ecx,DWORD PTR [esi-0x30]
  41e3cc:	inc    esp
  41e3cd:	add    eax,0xb49156d0
  41e3d2:	fdivr  QWORD PTR [ebx-0x2d967dcf]
  41e3d8:	inc    eax
  41e3d9:	push   0xffffff91
  41e3db:	and    BYTE PTR [edx-0x77],bh
  41e3de:	outs   dx,DWORD PTR ds:[esi]
  41e3df:	std    
  41e3e0:	push   ecx
  41e3e1:	stos   BYTE PTR es:[edi],al
  41e3e2:	jo     0x41e369
  41e3e4:	and    eax,0xffffffc0
  41e3e7:	push   esi
  41e3e8:	add    edx,eax
  41e3ea:	shl    DWORD PTR [ebp+0x5de38644],0x36
  41e3f1:	out    0x45,eax
  41e3f3:	out    0x8c,al
  41e3f5:	cwde   
  41e3f6:	shr    BYTE PTR [eax],0x4
  41e3f9:	sub    eax,0x87fed944
  41e3fe:	mov    bl,0x84
  41e400:	shl    DWORD PTR [eax-0x4d],0x55
  41e404:	(bad)  
  41e405:	lock or bl,BYTE PTR [eax+0x4c]
  41e409:	or     cl,ch
  41e40b:	mov    ds:0x4b4df611,al
  41e410:	lea    edx,[eax]
  41e412:	cwde   
  41e413:	int3   
  41e414:	inc    edi
  41e415:	jo     0x41e3cb
  41e417:	int3   
  41e418:	push   ebx
  41e419:	rol    DWORD PTR [esi],1
  41e41b:	dec    ebp
  41e41c:	jne    0x41e3cc
  41e41e:	jmp    0xe9f97e1
  41e423:	scas   al,BYTE PTR es:[edi]
  41e424:	(bad)  
  41e426:	jbe    0x41e41c
  41e428:	xor    eax,0x8244b686
  41e42d:	xor    al,0x3
  41e42f:	lods   eax,DWORD PTR ds:[si]
  41e431:	lods   eax,DWORD PTR ds:[esi]
  41e432:	fs cmp dh,cl
  41e435:	(bad)  
  41e436:	lahf   
  41e437:	sbb    edx,DWORD PTR ds:0xa7c7d934
  41e43d:	inc    edx
  41e43e:	hlt    
  41e43f:	sub    eax,0x2990dd17
  41e444:	loop   0x41e3d2
  41e446:	sbb    ebp,DWORD PTR [ecx+0x5e]
  41e449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e44a:	mov    ds:0x83ac1ac1,al
  41e44f:	xlat   BYTE PTR ds:[ebx]
  41e450:	test   al,0x49
  41e452:	xlat   BYTE PTR ds:[ebx]
  41e453:	sub    cl,BYTE PTR [edi]
  41e455:	mov    ah,BYTE PTR [esi]
  41e457:	leave  
  41e458:	xchg   esp,eax
  41e459:	xchg   ebp,eax
  41e45a:	out    dx,eax
  41e45b:	cmp    eax,DWORD PTR [edi-0x30]
  41e45e:	bound  edx,QWORD PTR ds:0x923e70e
  41e464:	lock and DWORD PTR [ecx],ecx
  41e467:	lock sub eax,0x3d228ba3
  41e46d:	call   0xc4654520
  41e472:	adc    al,0x7d
  41e474:	into   
  41e475:	int3   
  41e476:	xchg   ebx,eax
  41e477:	push   cs
  41e478:	cmp    DWORD PTR [ebp+eax*4+0x634f9303],esp
  41e47f:	nop
  41e480:	lahf   
  41e481:	in     eax,dx
  41e482:	jl     0x41e4d8
  41e484:	sar    DWORD PTR [edi+eax*2+0x50ddc429],1
  41e48b:	jg     0x41e42b
  41e48d:	pop    ds
  41e48e:	mov    esp,0xed0dadc2
  41e493:	or     DWORD PTR [edx-0x15],eax
  41e496:	out    0x7a,al
  41e498:	dec    ecx
  41e499:	cmp    eax,DWORD PTR [edx+edx*4]
  41e49c:	mov    dh,0x8b
  41e49e:	or     al,0x14
  41e4a0:	fadd   st,st(1)
  41e4a2:	lods   al,BYTE PTR ds:[esi]
  41e4a3:	mov    ebx,eax
  41e4a5:	sbb    esi,DWORD PTR [edx-0x30]
  41e4a8:	aas    
  41e4a9:	sub    esp,DWORD PTR [eax+0x1]
  41e4ac:	adc    eax,0xefe8a934
  41e4b1:	mov    dl,BYTE PTR [edx]
  41e4b3:	gs mov ch,0xe1
  41e4b6:	enter  0xc184,0x20
  41e4ba:	pushw  cs
  41e4bc:	push   cs
  41e4bd:	push   0xe074473b
  41e4c2:	bound  eax,QWORD PTR [edi]
  41e4c4:	(bad)  
  41e4c5:	or     dl,BYTE PTR [esi+0xc]
  41e4c8:	inc    ebx
  41e4c9:	mov    bl,0xfe
  41e4cb:	outs   dx,DWORD PTR ds:[esi]
  41e4cc:	enter  0xf34d,0xee
  41e4d0:	out    dx,eax
  41e4d1:	mov    bh,0xc4
  41e4d3:	cmp    eax,0x93a92709
  41e4d8:	and    eax,0xb459fb57
  41e4dd:	cmp    ch,BYTE PTR ds:[ebx]
  41e4e0:	push   edx
  41e4e1:	sahf   
  41e4e2:	(bad)  
  41e4e3:	ds pushf 
  41e4e5:	jns    0x41e487
  41e4e7:	std    
  41e4e8:	daa    
  41e4e9:	jle    0x41e4ce
  41e4eb:	dec    ebp
  41e4ec:	aaa    
  41e4ed:	xchg   esi,eax
  41e4ee:	push   edi
  41e4ef:	in     al,dx
  41e4f0:	les    edi,FWORD PTR [ebx+0x4]
  41e4f3:	call   0x85dc10dd
  41e4f8:	pop    ebx
  41e4f9:	jnp    0x41e52d
  41e4fb:	mov    dl,0xa2
  41e4fd:	jmp    0xc535c9f6
  41e502:	push   ss
  41e503:	mov    al,ds:0xe6255869
  41e508:	jns    0x41e576
  41e50a:	fsubp  st(3),st
  41e50c:	jbe    0x41e55e
  41e50e:	sub    edx,ecx
  41e510:	mov    eax,ds:0xdb8f7c40
  41e515:	or     ah,dl
  41e517:	pop    edx
  41e518:	daa    
  41e519:	push   ecx
  41e51a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e51b:	pop    edx
  41e51c:	leave  
  41e51d:	xchg   BYTE PTR [eax],ch
  41e51f:	sbb    edx,DWORD PTR [edx-0x23170be1]
  41e525:	or     al,0x7a
  41e527:	lods   eax,DWORD PTR ds:[esi]
  41e528:	pop    esi
  41e529:	xor    DWORD PTR [edx-0x4060d6e0],0x6c671cc8
  41e533:	out    dx,al
  41e534:	cli    
  41e535:	mov    ch,0x72
  41e537:	mov    bh,0x9b
  41e539:	mov    bh,0xe4
  41e53b:	sbb    eax,0x5a8ff1bc
  41e540:	sbb    al,0x87
  41e542:	repz addr16 push cs
  41e545:	and    DWORD PTR [ebx+0x36],0x2c
  41e549:	cmp    dh,bl
  41e54b:	in     eax,0x3c
  41e54d:	dec    ecx
  41e54e:	imul   ebx,ebx,0xffffffd9
  41e551:	iret   
  41e552:	sbb    al,0x8
  41e554:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41e556:	nop
  41e557:	and    ecx,edi
  41e559:	adc    BYTE PTR [edx+edi*2],bl
  41e55c:	rol    DWORD PTR [ecx-0x5],0xd4
  41e560:	sbb    ch,BYTE PTR [ecx+0x14b24125]
  41e566:	cmc    
  41e567:	enter  0xe40c,0x7b
  41e56b:	cmp    BYTE PTR [edi+0x6b],bl
  41e56e:	sbb    BYTE PTR [ebx],dl
  41e570:	mov    edx,0x1987c676
  41e575:	inc    edi
  41e576:	retf   0x7be9
  41e579:	push   esi
  41e57a:	xchg   ecx,eax
  41e57b:	sub    dh,cl
  41e57d:	popf   
  41e57e:	push   ebx
  41e57f:	sbb    ch,BYTE PTR [ecx+0x16]
  41e582:	adc    eax,0x10b06e38
  41e587:	pop    ss
  41e588:	push   esp
  41e589:	or     al,0x3d
  41e58b:	nop
  41e58c:	sub    al,0x40
  41e58e:	dec    ebx
  41e58f:	mov    eax,ds:0xbe8da2a5
  41e594:	(bad)  
  41e596:	stc    
  41e597:	inc    DWORD PTR [edi+0x6507c854]
  41e59d:	sti    
  41e59e:	add    BYTE PTR [edi],al
  41e5a0:	push   ecx
  41e5a1:	jno    0x41e5eb
  41e5a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5a4:	popf   
  41e5a5:	aas    
  41e5a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5a7:	hlt    
  41e5a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5a9:	adc    eax,0xa061da64
  41e5ae:	mov    ecx,0xce45a44
  41e5b3:	jle    0x41e5fe
  41e5b5:	ja     0x41e56d
  41e5b7:	fcmovnb st,st(4)
  41e5b9:	cmp    ebp,0xed2dda87
  41e5bf:	stos   DWORD PTR es:[edi],eax
  41e5c0:	fild   WORD PTR [ecx+0x78ece15d]
  41e5c6:	xor    al,0x97
  41e5c8:	gs mov bh,0x3c
  41e5cb:	(bad)  
  41e5cc:	pop    esp
  41e5cd:	sub    dh,BYTE PTR [ebp+0x6152fcf0]
  41e5d3:	pop    esi
  41e5d4:	dec    eax
  41e5d5:	jno    0x41e5a0
  41e5d7:	adc    eax,0x51f734f2
  41e5dc:	pop    esi
  41e5dd:	push   ecx
  41e5de:	adc    eax,0x39a1afb7
  41e5e3:	dec    edi
  41e5e4:	pop    esp
  41e5e5:	repz sbb al,0x43
  41e5e8:	pop    edi
  41e5e9:	jge    0x41e5ad
  41e5eb:	or     eax,0xf6d7e9f9
  41e5f0:	jmp    0xd0ad:0x69d6b1ff
  41e5f7:	(bad)  
  41e5f9:	xchg   esp,eax
  41e5fa:	ins    BYTE PTR es:[edi],dx
  41e5fb:	je     0x41e595
  41e5fd:	pop    ebx
  41e5fe:	jg     0x41e667
  41e600:	mov    al,ds:0xd077c608
  41e605:	retf   0xf88d
  41e608:	ins    DWORD PTR es:[edi],dx
  41e609:	jge    0x41e658
  41e60b:	gs stc 
  41e60d:	fwait
  41e60e:	and    eax,0x719714f5
  41e613:	cmp    bl,cl
  41e615:	retf   
  41e616:	push   0xffffff8c
  41e618:	or     DWORD PTR [ecx],esi
  41e61a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e61b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e61c:	and    al,0x6f
  41e61e:	xlat   BYTE PTR ds:[ebx]
  41e61f:	sbb    esp,0x64
  41e622:	rcr    BYTE PTR [eax-0x2d81e041],1
  41e628:	jno    0x41e5b2
  41e62a:	popf   
  41e62b:	sbb    BYTE PTR [edx-0x3d710854],dh
  41e631:	mov    dh,0xcb
  41e633:	loope  0x41e608
  41e635:	frstor [ebp+0x3ad3a9dc]
  41e63b:	aam    0x73
  41e63d:	call   0xdb9c:0x214e9f80
  41e644:	bound  esp,QWORD PTR [eax+edi*8]
  41e647:	aaa    
  41e648:	cld    
  41e649:	inc    esi
  41e64a:	jp     0x41e5f3
  41e64c:	adc    eax,esp
  41e64e:	inc    ecx
  41e64f:	cdq    
  41e650:	xor    al,BYTE PTR [ecx+0x2f]
  41e653:	je     0x41e629
  41e655:	dec    esp
  41e656:	sub    edx,DWORD PTR [esi]
  41e658:	mov    bl,0x88
  41e65a:	jp     0x41e5e8
  41e65c:	mov    ebp,0x7df7c614
  41e661:	ds xor al,0xff
  41e664:	pop    edi
  41e665:	sti    
  41e666:	xor    eax,0xc40a31fe
  41e66b:	dec    edx
  41e66c:	ss mov ecx,0xc6fa1748
  41e672:	jle    0x41e6d2
  41e674:	mov    eax,0xa892a26a
  41e679:	(bad)  
  41e67a:	sub    BYTE PTR [edx+0x75c79d1],bh
  41e680:	sub    BYTE PTR [edx-0x38],bh
  41e683:	adc    esp,DWORD PTR [edx+0x75]
  41e686:	mov    al,ds:0x2b7eade
  41e68b:	mov    bh,dl
  41e68d:	dec    eax
  41e68e:	sbb    ebp,DWORD PTR [ecx+0x5001258e]
  41e694:	add    DWORD PTR [edx],esi
  41e696:	pusha  
  41e697:	fs mov esi,0x7171ba41
  41e69d:	shr    BYTE PTR [edi+0x7ee90ac0],0x9b
  41e6a4:	nop
  41e6a5:	add    DWORD PTR [ebp-0x55],edi
  41e6a8:	xor    ecx,ecx
  41e6aa:	(bad)  
  41e6ab:	fst    DWORD PTR [ebp+0x6c]
  41e6ae:	fild   QWORD PTR [edx+0x7e31236e]
  41e6b4:	xbegin 0xf101aee9
  41e6ba:	cmp    BYTE PTR [edx-0x1d],dl
  41e6bd:	repz aad 0x50
  41e6c0:	sbb    DWORD PTR [ecx-0x78],0x6b70c3fb
  41e6c7:	sbb    ebx,esi
  41e6c9:	lods   eax,DWORD PTR ds:[esi]
  41e6ca:	push   0xffffffa3
  41e6cc:	in     al,dx
  41e6cd:	or     ch,cl
  41e6cf:	mov    al,ds:0xe40e66b
  41e6d4:	jge    0x41e746
  41e6d6:	fstp   DWORD PTR [eax-0x1021f352]
  41e6dc:	pop    eax
  41e6dd:	rcl    DWORD PTR [edx],0xfe
  41e6e0:	dec    esi
  41e6e1:	mov    gs:0xabbc8506,eax
  41e6e7:	call   0xf2e7a42
  41e6ec:	lods   eax,DWORD PTR ds:[esi]
  41e6ed:	lock jno 0x41e6b3
  41e6f0:	xchg   esi,eax
  41e6f1:	mov    esp,0xe7974ff2
  41e6f6:	add    DWORD PTR [edi],esi
  41e6f8:	cmp    dh,bh
  41e6fa:	loope  0x41e6e8
  41e6fc:	(bad)  
  41e6fd:	hlt    
  41e6fe:	inc    ecx
  41e6ff:	or     BYTE PTR [eax],0x86
  41e702:	sub    BYTE PTR [ecx],0x91
  41e705:	jae    0x41e781
  41e707:	mov    ch,0xc0
  41e709:	xor    edi,DWORD PTR [ecx+0x6445f6f3]
  41e70f:	addps  xmm1,xmm7
  41e712:	fs jno 0x41e70e
  41e715:	adc    esp,DWORD PTR [esi]
  41e717:	fisttp WORD PTR [edi+0x1]
  41e71a:	retf   0xbdef
  41e71d:	es fmul st,st(4)
  41e720:	leave  
  41e721:	ror    DWORD PTR [esi],cl
  41e723:	pop    ebp
  41e724:	xor    BYTE PTR [edx],ah
  41e726:	jle    0x41e7a0
  41e728:	adc    BYTE PTR [esi],0xa5
  41e72b:	or     cl,BYTE PTR [eax]
  41e72d:	xchg   edx,eax
  41e72e:	xor    DWORD PTR [ebp+0x8],ecx
  41e731:	add    ah,ah
  41e733:	je     0x41e7af
  41e735:	sub    al,0xdf
  41e737:	xlat   BYTE PTR ds:[ebx]
  41e738:	sbb    al,0xe1
  41e73a:	jg     0x41e6fe
  41e73c:	mov    esp,ds
  41e73e:	cs push edi
  41e740:	xchg   edx,eax
  41e741:	popa   
  41e742:	loop   0x41e780
  41e744:	inc    edx
  41e745:	xor    ecx,ebx
  41e747:	pop    ebp
  41e748:	movntps XMMWORD PTR [edx],xmm7
  41e74b:	nop
  41e74c:	add    ah,BYTE PTR [edx]
  41e74e:	mov    al,0xd9
  41e750:	mov    al,0x66
  41e752:	xchg   DWORD PTR [esi],edx
  41e754:	(bad)  
  41e755:	fmul   QWORD PTR [edi-0x10fd2c1b]
  41e75b:	sub    ebx,esi
  41e75d:	pop    eax
  41e75e:	mov    eax,ds:0x3fa43526
  41e763:	and    eax,0x8abfce45
  41e768:	popf   
  41e769:	and    edx,DWORD PTR [esi+0x73d633db]
  41e76f:	cmp    edi,eax
  41e771:	and    DWORD PTR [ebx],esp
  41e773:	pop    esp
  41e774:	jle    0x41e747
  41e776:	pcmpeqd mm6,QWORD PTR [edx]
  41e779:	adc    eax,DWORD PTR [edi+0x2a14a802]
  41e77f:	mov    ds:0xb10f232e,al
  41e784:	shl    BYTE PTR [edx+ecx*1-0x5420822e],0xc4
  41e78c:	jne    0x41e7c1
  41e78e:	out    dx,al
  41e78f:	xchg   DWORD PTR [esi],ebp
  41e791:	pop    edx
  41e792:	call   0x56ba9418
  41e797:	push   cs
  41e798:	rcr    ebx,0xed
  41e79b:	lods   eax,DWORD PTR ds:[esi]
  41e79c:	sub    al,0xc3
  41e79e:	mov    esp,DWORD PTR [ebx]
  41e7a0:	mul    BYTE PTR [esi-0x47922c8d]
  41e7a6:	sub    al,BYTE PTR [edi+0x3b]
  41e7a9:	sbb    DWORD PTR [edi],edx
  41e7ab:	push   es
  41e7ac:	leave  
  41e7ad:	add    edi,edi
  41e7af:	jl     0x41e7f4
  41e7b1:	push   ebx
  41e7b2:	cmp    al,0x9b
  41e7b4:	mov    al,ds:0x12046ab6
  41e7b9:	rcr    BYTE PTR [edx],1
  41e7bb:	xchg   BYTE PTR [ecx*1+0x1dea89e8],bh
  41e7c2:	cmc    
  41e7c3:	pusha  
  41e7c4:	in     al,0x90
  41e7c6:	mov    DWORD PTR [ebx-0x80],esi
  41e7c9:	mov    ch,0xdc
  41e7cb:	push   edx
  41e7cc:	xchg   edx,eax
  41e7cd:	sbb    DWORD PTR [eax-0x4d398615],ecx
  41e7d3:	sub    al,0xba
  41e7d5:	ins    DWORD PTR es:[edi],dx
  41e7d6:	jbe    0x41e817
  41e7d8:	inc    ecx
  41e7d9:	popf   
  41e7da:	std    
  41e7db:	pusha  
  41e7dc:	sbb    eax,ecx
  41e7de:	fsub   st,st(1)
  41e7e0:	fmul   QWORD PTR [edi]
  41e7e2:	jle    0x41e861
  41e7e4:	inc    ebx
  41e7e5:	call   0x61d9:0x9af31a03
  41e7ec:	and    bh,al
  41e7ee:	cmp    esp,ecx
  41e7f0:	dec    esi
  41e7f1:	fs neg cl
  41e7f4:	pop    ecx
  41e7f5:	inc    eax
  41e7f6:	popa   
  41e7f7:	dec    edi
  41e7f8:	in     al,0x81
  41e7fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7fb:	dec    eax
  41e7fc:	aaa    
  41e7fd:	loope  0x41e789
  41e7ff:	loopne 0x41e7d6
  41e801:	ins    BYTE PTR es:[edi],dx
  41e802:	push   ebp
  41e803:	adc    BYTE PTR [ebx-0x20cf2b07],cl
  41e809:	sbb    al,0x5d
  41e80b:	scas   eax,DWORD PTR es:[edi]
  41e80c:	jecxz  0x41e844
  41e80e:	sbb    DWORD PTR [edi-0x12],0x74ce7844
  41e815:	xchg   ebp,eax
  41e816:	(bad)  
  41e818:	dec    ecx
  41e819:	sbb    esp,DWORD PTR [edi+0x6e]
  41e81c:	pextrw eax,(bad),0xc5
  41e81e:	xchg   ebx,ebp
  41e820:	pushf  
  41e821:	addr16 pop ss
  41e823:	loop   0x41e7b1
  41e825:	inc    ecx
  41e826:	inc    edx
  41e827:	aas    
  41e828:	adc    DWORD PTR [esp+esi*1],edi
  41e82b:	cli    
  41e82c:	push   0xb5d88647
  41e831:	imul   edi,DWORD PTR [edx],0x46cfc449
  41e837:	and    DWORD PTR [edx+0x1e7e1010],0xae81884c
  41e841:	jb     0x41e84b
  41e843:	push   esi
  41e844:	xlat   BYTE PTR ds:[ebx]
  41e845:	in     al,dx
  41e846:	leave  
  41e847:	ins    DWORD PTR es:[edi],dx
  41e848:	jnp    0x41e7fe
  41e84a:	inc    ebx
  41e84b:	xchg   BYTE PTR [ebp+0x4b],bl
  41e84e:	out    dx,eax
  41e84f:	xchg   BYTE PTR [ebx+0x13],al
  41e852:	push   ebx
  41e853:	inc    eax
  41e854:	pop    es
  41e855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e856:	xor    BYTE PTR [ebp-0x5ed1d2a1],dh
  41e85c:	retf   0xea9f
  41e85f:	in     al,0xb1
  41e861:	arpl   WORD PTR [eax],sp
  41e863:	fdiv   QWORD PTR [edx+0x658088dc]
  41e869:	push   edx
  41e86a:	inc    ebx
  41e86b:	pop    es
  41e86c:	fadd   DWORD PTR [ecx-0x7524ac3d]
  41e872:	addr16 (bad) 
  41e874:	addr16 fwait
  41e876:	loop   0x41e8bb
  41e878:	mov    ebp,DWORD PTR [ebp+0x1f981173]
  41e87e:	invd   
  41e880:	(bad)  
  41e881:	jne    0x41e8d1
  41e883:	mov    ebp,0xae7f5ac7
  41e888:	add    BYTE PTR [ebp+0x49178a1e],bl
  41e88e:	sub    BYTE PTR [eax-0x46e186cf],ah
  41e894:	inc    eax
  41e895:	pop    es
  41e896:	mov    edi,0x2470f51d
  41e89b:	loope  0x41e8f8
  41e89d:	iret   
  41e89e:	in     al,dx
  41e89f:	sbb    ah,BYTE PTR [eax-0x7a9dce0a]
  41e8a5:	imul   ebp,DWORD PTR [edi-0x2fcd54a3]
  41e8ac:	xor    DWORD PTR [ecx],0x8
  41e8af:	daa    
  41e8b0:	and    al,0x48
  41e8b2:	stos   DWORD PTR es:[edi],eax
  41e8b3:	out    0x49,eax
  41e8b5:	lods   eax,DWORD PTR ds:[esi]
  41e8b6:	or     eax,0x89c969d7
  41e8bb:	out    0xd0,al
  41e8bd:	int3   
  41e8be:	dec    esp
  41e8bf:	pop    eax
  41e8c0:	mov    edx,0x60b8eaa
  41e8c5:	iret   
  41e8c6:	jae    0x41e874
  41e8c8:	outs   dx,DWORD PTR ds:[esi]
  41e8c9:	repz das 
  41e8cb:	or     edi,DWORD PTR [ebx+0x5d]
  41e8ce:	inc    esi
  41e8cf:	popa   
  41e8d0:	xor    dl,al
  41e8d2:	in     al,0x78
  41e8d4:	mul    BYTE PTR [eax]
  41e8d6:	jl     0x41e8ef
  41e8d8:	inc    eax
  41e8d9:	jecxz  0x41e92d
  41e8db:	xchg   BYTE PTR [edx],ah
  41e8dd:	ins    DWORD PTR es:[edi],dx
  41e8de:	push   edx
  41e8df:	jle    0x41e920
  41e8e1:	dec    edx
  41e8e2:	mov    ch,0x95
  41e8e4:	aam    0x18
  41e8e6:	and    DWORD PTR [ebp+ebp*4-0x6ec2c464],edi
  41e8ed:	jb     0x41e873
  41e8ef:	or     al,0xba
  41e8f1:	or     ah,al
  41e8f3:	aam    0x12
  41e8f5:	es mov ecx,0x9ed8dcef
  41e8fb:	mov    eax,0x54dadb5d
  41e900:	add    al,0xc6
  41e902:	sbb    eax,0x216ecde7
  41e907:	or     al,0x1a
  41e909:	ficom  WORD PTR [ecx+0x1055840f]
  41e90f:	add    ch,dh
  41e911:	push   ebp
  41e912:	adc    DWORD PTR [esi+0x23],eax
  41e915:	jl     0x41e962
  41e917:	call   0x5187cf3a
  41e91c:	inc    edi
  41e91d:	ret    
  41e91e:	sub    cl,BYTE PTR [ebx]
  41e920:	sbb    BYTE PTR [ebx],ah
  41e922:	dec    ecx
  41e923:	xchg   ebp,eax
  41e924:	add    DWORD PTR [edx],ecx
  41e926:	or     DWORD PTR [ecx],esp
  41e928:	das    
  41e929:	(bad)  
  41e92a:	dec    edi
  41e92b:	fadd   QWORD PTR [eax-0x7d5660f]
  41e931:	xchg   esp,eax
  41e932:	and    eax,0x70c2bb49
  41e937:	out    0x44,eax
  41e939:	mov    edx,DWORD PTR [edi-0x6f]
  41e93c:	sahf   
  41e93d:	jle    0x41e987
  41e93f:	test   DWORD PTR [ebx-0x39],edx
  41e942:	jecxz  0x41e8c4
  41e944:	xor    DWORD PTR gs:[edx-0x6e],edi
  41e948:	loopne 0x41e9b3
  41e94a:	int    0x49
  41e94c:	xor    edx,eax
  41e94e:	add    ecx,esi
  41e950:	add    edx,esi
  41e952:	cmp    ecx,edx
  41e954:	jae    0x420d77
  41e95a:	lea    edx,[ecx-0x3272dd]
  41e960:	mov    DWORD PTR [ebp-0x18],edx
  41e963:	mov    edi,DWORD PTR [ebp-0x18]
  41e966:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  41e96d:	lea    edx,[ebp-0x24]
  41e970:	mov    DWORD PTR [ebp-0x10],edx
  41e973:	mov    edx,DWORD PTR [ebp-0x10]
  41e976:	add    DWORD PTR [edx],0x705fa0f
  41e97c:	mov    ebx,DWORD PTR [ebp-0x10]
  41e97f:	xor    edi,eax
  41e981:	add    edi,DWORD PTR [ebx]
  41e983:	lea    edx,[ebp+ecx*4-0x64]
  41e987:	mov    ebx,DWORD PTR [edx]
  41e989:	jmp    0x420d16
  41e98e:	add    ebx,DWORD PTR [esi]
  41e990:	(bad)  
  41e991:	jnp    0x41e95a
  41e993:	jnp    0x41e988
  41e995:	jbe    0x41e9c3
  41e997:	cs fld DWORD PTR es:[ebx+edx*1]
  41e99c:	ins    BYTE PTR es:[edi],dx
  41e99d:	(bad)  [esi+0xa7a7dc2]
  41e9a3:	pop    edi
  41e9a4:	jp     0x41ea20
  41e9a6:	retf   
  41e9a7:	push   esp
  41e9a8:	fcom   DWORD PTR [esp+ebx*2]
  41e9ab:	jb     0x41e983
  41e9ad:	mov    al,ds:0x39b77665
  41e9b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9b3:	adc    eax,0xb6b13344
  41e9b8:	xchg   ecx,eax
  41e9b9:	idiv   ebx
  41e9bb:	stc    
  41e9bc:	xor    BYTE PTR [edx],ch
  41e9be:	and    cl,BYTE PTR [edx-0x5d]
  41e9c1:	fmul   QWORD PTR [edi]
  41e9c3:	jmp    0xd433:0xc70bb37e
  41e9ca:	test   ah,dh
  41e9cc:	add    ebx,DWORD PTR [edx+0x61403af6]
  41e9d2:	push   cs
  41e9d3:	cmp    edx,esp
  41e9d5:	xchg   DWORD PTR [edi],edx
  41e9d7:	punpckhwd mm0,QWORD PTR [eax+esi*4+0x74]
  41e9dc:	xor    dh,BYTE PTR [ecx]
  41e9de:	vmwrite edx,DWORD PTR ds:[edx]
  41e9e2:	inc    ecx
  41e9e3:	pop    edx
  41e9e4:	sbb    BYTE PTR [ecx+eax*8-0xc84c402],0xad
  41e9ec:	fisub  WORD PTR ds:0x1a219148
  41e9f2:	sar    BYTE PTR [ebp+0x40f818b2],cl
  41e9f8:	jp     0x41e9e8
  41e9fa:	adc    esi,0xec2203c2
  41ea00:	jmp    0x825d49e6
  41ea05:	mov    cl,BYTE PTR ss:[esi]
  41ea08:	jae    0x41ea2f
  41ea0a:	neg    BYTE PTR [esi+0x34]
  41ea0d:	add    DWORD PTR [esi-0x2fea031a],ebp
  41ea13:	jp     0x41ea87
  41ea15:	(bad)  
  41ea16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea17:	ret    
  41ea18:	pop    edx
  41ea19:	cmp    esi,DWORD PTR [edx-0x6]
  41ea1c:	ja     0x41e9f0
  41ea1e:	test   ebx,eax
  41ea20:	inc    ecx
  41ea21:	or     cl,BYTE PTR [edx+0x35]
  41ea24:	xchg   esp,eax
  41ea25:	out    dx,al
  41ea26:	and    esp,DWORD PTR [eax+esi*4+0x53ce8e49]
  41ea2d:	fimul  WORD PTR [esi]
  41ea2f:	seto   BYTE PTR [edi+0x76b20f7c]
  41ea36:	pop    edi
  41ea37:	loopne 0x41ea28
  41ea39:	adc    ch,BYTE PTR [ebp-0x342c8570]
  41ea3f:	std    
  41ea40:	xchg   ebx,eax
  41ea41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea42:	popf   
  41ea43:	mov    esi,0x6e5fd6b1
  41ea48:	sbb    BYTE PTR [esi],al
  41ea4a:	mov    ebx,DWORD PTR [eax+edx*1-0x1d90f7dc]
  41ea51:	out    dx,eax
  41ea52:	scas   eax,DWORD PTR es:[edi]
  41ea53:	dec    ebp
  41ea54:	popa   
  41ea55:	jmp    0xccd4:0x6072674f
  41ea5c:	or     bl,BYTE PTR [ecx-0x3952d42d]
  41ea62:	out    0x4c,eax
  41ea64:	nop
  41ea65:	das    
  41ea66:	popa   
  41ea67:	push   esp
  41ea68:	or     al,0x2b
  41ea6a:	push   ebx
  41ea6b:	out    0xe8,eax
  41ea6d:	ret    0x73fd
  41ea70:	pop    ebx
  41ea71:	adc    eax,0x3dafa68
  41ea76:	push   0xffffffd7
  41ea78:	loopne 0x41ea2e
  41ea7a:	test   dl,dl
  41ea7c:	push   ds
  41ea7d:	loopne 0x41eaf0
  41ea7f:	inc    esi
  41ea80:	mov    eax,0x26ef3a0c
  41ea85:	cli    
  41ea86:	sbb    DWORD PTR [ebx-0x80],ecx
  41ea89:	std    
  41ea8a:	jmp    0x41eaa3
  41ea8c:	and    ah,BYTE PTR [ebp+0x6d]
  41ea8f:	cmp    al,0xd0
  41ea91:	nop
  41ea92:	adc    eax,0x88d01810
  41ea97:	mov    esi,0xf1d94f11
  41ea9c:	xor    eax,0xbe0c1bb5
  41eaa1:	and    DWORD PTR [edx-0x129f96ca],ebx
  41eaa7:	retf   0x2774
  41eaaa:	pop    edi
  41eaab:	jno    0x41ea66
  41eaad:	cmp    edx,DWORD PTR [edx]
  41eaaf:	cwde   
  41eab0:	sub    eax,0xbc40e3af
  41eab5:	rcr    BYTE PTR [eax+edx*8+0x1],1
  41eab9:	call   0xb164008f
  41eabe:	sbb    al,0x65
  41eac0:	inc    edi
  41eac1:	mov    ebp,0x65e3dad5
  41eac6:	inc    ebp
  41eac7:	scas   al,BYTE PTR es:[edi]
  41eac8:	mov    bh,0x39
  41eaca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eacb:	(bad)
  41ead0:	mov    eax,ds:0x53ec95bb
  41ead5:	jecxz  0x41eb1a
  41ead7:	cmp    esp,eax
  41ead9:	cmp    eax,0x6c838e8f
  41eade:	arpl   bx,di
  41eae0:	call   0x826d1a2a
  41eae5:	xor    BYTE PTR [ecx+0x21],bh
  41eae8:	lds    edx,FWORD PTR [esi+0x75]
  41eaeb:	inc    esp
  41eaec:	or     eax,0x8ae6b33a
  41eaf1:	jle    0x41eb33
  41eaf3:	push   ebx
  41eaf4:	sbb    esp,esi
  41eaf6:	inc    eax
  41eaf7:	jns    0x41eae8
  41eaf9:	inc    eax
  41eafa:	sub    DWORD PTR [ebx-0x2cfcfdc7],edi
  41eb00:	ret    0xbc38
  41eb03:	add    dl,BYTE PTR [ecx-0x62]
  41eb06:	dec    edx
  41eb07:	outs   dx,DWORD PTR ds:[esi]
  41eb08:	cs jb  0x41eb58
  41eb0b:	or     dl,BYTE PTR [esi+0x5b]
  41eb0e:	jge    0x41ead9
  41eb10:	(bad)  
  41eb11:	adc    esi,DWORD PTR [esi+eiz*4+0x25]
  41eb15:	push   0xffffff84
  41eb17:	push   edi
  41eb18:	hlt    
  41eb19:	inc    edx
  41eb1a:	adc    edx,DWORD PTR [ebx+0x1d6dc4f7]
  41eb20:	jbe    0x41eadd
  41eb22:	pop    ss
  41eb23:	mov    dl,0x3e
  41eb25:	push   es
  41eb26:	test   al,0xa5
  41eb28:	mov    WORD PTR [eax],es
  41eb2a:	int3   
  41eb2b:	pop    ecx
  41eb2c:	sar    BYTE PTR [eax-0x28],1
  41eb2f:	and    ecx,DWORD PTR [ecx-0x22141a6a]
  41eb35:	inc    ebx
  41eb36:	or     ebx,eax
  41eb38:	les    ecx,FWORD PTR [edi]
  41eb3a:	adc    eax,0xb5bcce64
  41eb3f:	cmp    eax,0x5d61d9a0
  41eb44:	dec    esp
  41eb45:	(bad)  
  41eb46:	fidiv  WORD PTR [eax+0x76caf7a7]
  41eb4c:	ret    0xaa5b
  41eb4f:	neg    DWORD PTR [edx]
  41eb51:	inc    ebx
  41eb52:	cmp    al,0x2
  41eb54:	pop    ds
  41eb55:	pop    ss
  41eb56:	retf   0x30d7
  41eb59:	push   edx
  41eb5a:	adc    edi,DWORD PTR [edi-0x32fd2790]
  41eb60:	mov    dl,0x5f
  41eb62:	mul    BYTE PTR [ecx+0xf013e49]
  41eb68:	inc    edx
  41eb69:	je     0x41ebce
  41eb6b:	out    0x7f,eax
  41eb6d:	mov    dl,0xd4
  41eb6f:	cmp    eax,0x4e1b6b29
  41eb74:	test   eax,0x2809296d
  41eb79:	pcmpgtd mm5,mm1
  41eb7c:	jmp    0x41ebd6
  41eb7e:	fidivr DWORD PTR [edi]
  41eb80:	div    DWORD PTR [ebp+0x37]
  41eb83:	bound  ebx,QWORD PTR [esi]
  41eb85:	dec    edi
  41eb86:	add    ch,bh
  41eb88:	or     DWORD PTR [edi],esi
  41eb8a:	and    DWORD PTR [edi+0x19],edx
  41eb8d:	add    DWORD PTR [edi-0x5b],edi
  41eb90:	retf   0x9407
  41eb93:	out    0x70,al
  41eb95:	add    al,0x35
  41eb97:	in     eax,0x47
  41eb99:	(bad)  
  41eb9a:	mov    ds:0x48811f7f,eax
  41eb9f:	inc    edx
  41eba0:	jne    0x41eb38
  41eba2:	and    eax,DWORD PTR [edi+ebp*2]
  41eba5:	ror    DWORD PTR [edi+ebp*4],0x56
  41eba9:	cmp    al,0x8f
  41ebab:	icebp  
  41ebac:	rcl    DWORD PTR [ecx],0xc8
  41ebaf:	cmp    ebx,0x65
  41ebb2:	es pushf 
  41ebb4:	sti    
  41ebb5:	cmp    al,0xd9
  41ebb7:	mov    eax,ds:0xb766f9
  41ebbc:	into   
  41ebbd:	pop    DWORD PTR [esi+eiz*1]
  41ebc0:	jnp    0x41eb97
  41ebc2:	jmp    0x1142:0x5e43619e
  41ebc9:	ja     0x41ebc2
  41ebcb:	cmp    ebp,DWORD PTR [ebx]
  41ebcd:	test   BYTE PTR [edx],dl
  41ebcf:	xor    BYTE PTR [eax+0x1dd61fa0],al
  41ebd5:	out    dx,eax
  41ebd6:	sbb    BYTE PTR [edx-0x7bee1802],cl
  41ebdc:	fmul   st(0),st
  41ebde:	inc    eax
  41ebdf:	sub    DWORD PTR [ecx+0x375417b9],edx
  41ebe5:	sbb    BYTE PTR ds:0x3da6c2c0,bl
  41ebeb:	idiv   DWORD PTR [esi+0x495a4938]
  41ebf1:	jb     0x41eba1
  41ebf3:	test   al,0x8b
  41ebf5:	popf   
  41ebf6:	push   cs
  41ebf7:	hlt    
  41ebf8:	mov    edi,0x8e7c305b
  41ebfd:	ror    DWORD PTR [edx+0x77],cl
  41ec00:	lods   al,BYTE PTR ds:[esi]
  41ec01:	dec    ebp
  41ec02:	addr16 inc ebx
  41ec04:	jmp    0xbde5:0x3a0d161f
  41ec0b:	gs or  al,0xe2
  41ec0e:	(bad)  
  41ec0f:	push   esi
  41ec10:	sbb    DWORD PTR [ecx+0x6a01ab7a],ecx
  41ec16:	into   
  41ec17:	cmc    
  41ec18:	xor    DWORD PTR [eax+0x6d58e558],ebx
  41ec1e:	jmp    0x41ec47
  41ec20:	not    BYTE PTR [ecx+0x6f57fa29]
  41ec26:	sbb    bh,BYTE PTR [ecx+0x2a]
  41ec29:	lock sub al,0xb2
  41ec2c:	inc    esp
  41ec2d:	hlt    
  41ec2e:	jo     0x41ec62
  41ec30:	pop    ds
  41ec31:	aaa    
  41ec32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec33:	adc    ebp,0xffffffbd
  41ec36:	jp     0x41ebdf
  41ec38:	int    0xfe
  41ec3a:	loope  0x41ec5f
  41ec3c:	out    dx,al
  41ec3d:	xlat   BYTE PTR ds:[ebx]
  41ec3e:	pop    edi
  41ec3f:	(bad)  
  41ec40:	inc    ecx
  41ec41:	iret   
  41ec42:	cmc    
  41ec43:	pop    ebp
  41ec44:	or     dl,ah
  41ec46:	mov    ebp,0xcceabe31
  41ec4b:	rcr    DWORD PTR es:[edx+0x71d1f4a8],1
  41ec52:	xor    BYTE PTR [ebp-0x38],bh
  41ec55:	sub    BYTE PTR ds:0xa5c3868f,al
  41ec5b:	out    0xcb,eax
  41ec5d:	cmp    al,dh
  41ec5f:	rcl    ecx,0xe7
  41ec62:	sub    eax,0x889ff682
  41ec67:	fadd   st,st(5)
  41ec69:	mov    ebp,0x4602c06d
  41ec6e:	test   edi,edx
  41ec70:	jmp    DWORD PTR [ebp-0x9]
  41ec73:	lahf   
  41ec74:	cmc    
  41ec75:	lock push ds
  41ec77:	dec    ebx
  41ec78:	inc    ecx
  41ec79:	push   edx
  41ec7a:	wrmsr  
  41ec7c:	pusha  
  41ec7d:	outs   dx,BYTE PTR ds:[esi]
  41ec7e:	cmp    eax,0xc7ae9d51
  41ec83:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41ec85:	push   esi
  41ec86:	sbb    al,BYTE PTR [esi+0x730e121e]
  41ec8c:	jno    0x41ecdb
  41ec8e:	and    bh,BYTE PTR [edx-0x301c847b]
  41ec94:	loop   0x41ecf8
  41ec96:	sbb    bl,al
  41ec98:	in     eax,0x98
  41ec9a:	mov    WORD PTR [ebp+0x8],ds
  41ec9d:	jns    0x41ec92
  41ec9f:	or     DWORD PTR [ebx+eax*2],ebx
  41eca2:	jmp    0x64959241
  41eca7:	scas   al,BYTE PTR es:[edi]
  41eca8:	cmp    BYTE PTR ss:[edi],0x6d
  41ecac:	outs   dx,DWORD PTR ds:[esi]
  41ecad:	mov    bl,0xf3
  41ecaf:	fcomp  QWORD PTR [edx]
  41ecb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecb2:	sbb    al,0x68
  41ecb4:	test   DWORD PTR [esi-0xb9f1685],0x114e760d
  41ecbe:	repnz mov ds:0xa88e0c52,eax
  41ecc4:	test   DWORD PTR [ebx],0x8259fea7
  41ecca:	and    BYTE PTR [ebx],bl
  41eccc:	push   ebp
  41eccd:	mov    ds:0xe777c4cb,al
  41ecd2:	cmp    eax,0x750c7a70
  41ecd7:	mov    ch,0x86
  41ecd9:	or     edx,edx
  41ecdb:	adc    eax,0x1f39647d
  41ece0:	mov    ecx,0xabf90d06
  41ece5:	pop    DWORD PTR [ebx-0x5109161]
  41eceb:	inc    esp
  41ecec:	mov    DWORD PTR [esi],0x30655500
  41ecf2:	clc    
  41ecf3:	mov    edi,0x3bc9c77a
  41ecf8:	add    ecx,DWORD PTR [edi]
  41ecfa:	shl    eax,0xc4
  41ecfd:	(bad)  [edi]
  41ecff:	xor    bl,BYTE PTR [ebx]
  41ed01:	(bad)  
  41ed03:	dec    ebx
  41ed04:	jmp    0x41ec86
  41ed06:	pop    DWORD PTR [ebx+0x69f7b98]
  41ed0c:	jmp    0x2781:0xa621bd78
  41ed13:	mov    edx,0xd8cfa0c5
  41ed18:	inc    ebp
  41ed19:	shr    DWORD PTR [ecx-0x4389c4ad],cl
  41ed1f:	ss push edx
  41ed21:	mov    BYTE PTR [esp+edi*4+0x25e9c574],bh
  41ed28:	shl    DWORD PTR [esi],cl
  41ed2a:	pop    edi
  41ed2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed2c:	inc    ebp
  41ed2d:	adc    esi,DWORD PTR [esi-0x17]
  41ed30:	jp     0x41ece2
  41ed32:	mov    dl,0x53
  41ed34:	add    eax,0xd97c07c8
  41ed39:	push   esp
  41ed3a:	push   edx
  41ed3b:	sbb    al,0xa0
  41ed3d:	mov    esp,0xa835b8be
  41ed42:	pop    esp
  41ed43:	mov    ecx,0xe08855ba
  41ed48:	sbb    al,ah
  41ed4a:	xlat   BYTE PTR ds:[ebx]
  41ed4b:	add    edx,edx
  41ed4d:	sub    BYTE PTR [bx+si],bl
  41ed50:	sbb    DWORD PTR [eax],ebp
  41ed52:	sbb    DWORD PTR [esi-0x1d],edi
  41ed55:	gs dec edx
  41ed57:	and    al,0xc7
  41ed59:	dec    edx
  41ed5a:	test   ecx,eax
  41ed5c:	xor    DWORD PTR [eax+0x3bcdff8e],0xe4ea77ab
  41ed66:	clc    
  41ed67:	cmp    al,BYTE PTR [esi-0x69]
  41ed6a:	xlat   BYTE PTR ds:[ebx]
  41ed6b:	ret    0x55d8
  41ed6e:	push   eax
  41ed6f:	test   DWORD PTR [edx+0x60],ebx
  41ed72:	cmp    al,0xb1
  41ed74:	push   ss
  41ed75:	xor    al,0x60
  41ed77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed78:	pop    edx
  41ed79:	and    dh,bl
  41ed7b:	push   eax
  41ed7c:	cmp    edx,DWORD PTR ds:0xbe5b9971
  41ed82:	mov    dl,0x98
  41ed84:	mov    edx,0x1e975b2a
  41ed89:	ins    DWORD PTR es:[edi],dx
  41ed8a:	mov    dl,0xf
  41ed8c:	or     ecx,DWORD PTR ds:0x5410438e
  41ed92:	lahf   
  41ed93:	adc    DWORD PTR [ebx+0x4e],edi
  41ed96:	inc    ebp
  41ed97:	mov    dl,0x8
  41ed99:	cli    
  41ed9a:	mov    esp,0xf01e09a
  41ed9f:	fdivr  DWORD PTR [edx+0x379e7bbd]
  41eda5:	(bad)  
  41eda6:	pop    ecx
  41eda7:	das    
  41eda8:	mov    bl,0x1c
  41edaa:	pop    ebx
  41edab:	stos   DWORD PTR es:[edi],eax
  41edac:	push   esp
  41edad:	jns    0x41ed3d
  41edaf:	xor    BYTE PTR [edx-0x56b96ec4],dl
  41edb5:	xchg   BYTE PTR [ecx],ch
  41edb7:	pop    esi
  41edb8:	push   0xee465633
  41edbd:	push   esi
  41edbe:	pop    esi
  41edbf:	jmp    DWORD PTR [ebx-0x1d]
  41edc2:	xacquire xchg DWORD PTR [ebx+ebp*4+0x5d],eax
  41edc7:	outs   dx,DWORD PTR ds:[esi]
  41edc8:	adc    esi,DWORD PTR [ebx+edi*4]
  41edcb:	push   edx
  41edcc:	out    dx,al
  41edcd:	add    ecx,DWORD PTR [ebx]
  41edcf:	or     al,0x3a
  41edd1:	push   ss
  41edd2:	repz sbb DWORD PTR [esi-0x14],eax
  41edd6:	adc    eax,0x7ed46f16
  41eddb:	jne    0x41eda6
  41eddd:	xchg   ecx,eax
  41edde:	jmp    0x41edfe
  41ede0:	fdivr  DWORD PTR ds:0x2bfcead7
  41ede6:	fistp  QWORD PTR [esi]
  41ede8:	mov    ch,0x7f
  41edea:	loopne 0x41ed80
  41edec:	out    0x84,al
  41edee:	sbb    al,0xf2
  41edf0:	repnz inc esi
  41edf2:	push   cs
  41edf3:	fidivr DWORD PTR [esi-0x2b]
  41edf6:	sar    BYTE PTR [ecx-0x2b4ac99e],0x91
  41edfd:	xchg   DWORD PTR ds:[ecx+ecx*2],edi
  41ee01:	out    dx,eax
  41ee02:	imul   DWORD PTR [eax+ebp*8]
  41ee05:	mov    ebx,0xb21a8497
  41ee0a:	mov    dl,0xd1
  41ee0c:	(bad)  
  41ee0d:	stos   BYTE PTR es:[edi],al
  41ee0e:	and    cl,al
  41ee10:	jb     0x41eddd
  41ee12:	ja     0x41ee93
  41ee14:	cli    
  41ee15:	or     DWORD PTR [ecx+0x13f51b39],0x6bac67eb
  41ee1f:	dec    esp
  41ee20:	inc    ecx
  41ee21:	pusha  
  41ee22:	and    al,0x58
  41ee24:	cmp    DWORD PTR [edi-0x41],ebp
  41ee27:	cmp    ebp,DWORD PTR ds:0x13431c3c
  41ee2d:	out    dx,eax
  41ee2e:	bound  esi,QWORD PTR [eax]
  41ee30:	mov    bl,0x16
  41ee32:	popa   
  41ee33:	pop    edx
  41ee34:	sbb    BYTE PTR [ecx+0x6a],ah
  41ee37:	and    cl,BYTE PTR [edx]
  41ee39:	test   eax,0x3523d0d4
  41ee3e:	mov    ds:0x541b9c18,al
  41ee43:	jmp    0x7e55:0x4ce7b3db
  41ee4a:	add    eax,0xd5af9c2c
  41ee4f:	inc    edx
  41ee50:	fild   DWORD PTR [eax]
  41ee52:	rol    DWORD PTR [ecx],0x25
  41ee55:	mov    bh,0xfc
  41ee57:	add    eax,0x84f95941
  41ee5c:	mov    al,0x8f
  41ee5e:	jnp    0x41edfc
  41ee60:	mov    ebx,DWORD PTR [ecx-0x2f83958c]
  41ee66:	mov    ebp,0x92ea91ac
  41ee6b:	mov    cl,0x65
  41ee6d:	and    eax,0xd4d7144b
  41ee72:	jmp    0x479e:0xb42bae81
  41ee79:	neg    ebp
  41ee7b:	pop    ds
  41ee7c:	dec    esi
  41ee7d:	loope  0x41ee25
  41ee7f:	stos   BYTE PTR es:[edi],al
  41ee80:	jmp    0x41eefd
  41ee82:	mov    ecx,DWORD PTR [ebp+0x5c]
  41ee85:	add    DWORD PTR [esi],edi
  41ee87:	mov    bh,0x3c
  41ee89:	(bad)  
  41ee8a:	jbe    0x41eee8
  41ee8c:	in     eax,dx
  41ee8d:	and    ecx,DWORD PTR [ebp+0x285c8e1]
  41ee93:	cmp    BYTE PTR es:[edx],dh
  41ee96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee97:	stc    
  41ee98:	and    ch,cl
  41ee9a:	out    dx,al
  41ee9b:	push   ds
  41ee9c:	mov    edi,0x4f8efaa5
  41eea1:	pop    ebp
  41eea2:	popf   
  41eea3:	dec    esp
  41eea4:	call   0x3867:0x8cbf8d3c
  41eeab:	mov    WORD PTR [eax+ecx*8+0xb71ad50],?
  41eeb2:	jl     0x41ef2b
  41eeb4:	scas   al,BYTE PTR es:[edi]
  41eeb5:	es mov ecx,0x816e3698
  41eebb:	in     eax,dx
  41eebc:	js     0x41eec9
  41eebe:	(bad)  
  41eebf:	repz push ebp
  41eec1:	cs lahf 
  41eec3:	test   al,0x6b
  41eec5:	in     al,0xd3
  41eec7:	ss or  al,0x7a
  41eeca:	ficomp DWORD PTR [eax-0x2a]
  41eecd:	jnp    0x41ee8d
  41eecf:	xor    esp,DWORD PTR [ecx+0x27]
  41eed2:	shl    DWORD PTR [ebp+0x4a],1
  41eed5:	rol    BYTE PTR [edi+0x5d],0xeb
  41eed9:	rol    BYTE PTR [esi-0x37],0xef
  41eedd:	arpl   WORD PTR ds:0xd94e0e13,dx
  41eee3:	fidivr DWORD PTR [ebx+edi*8]
  41eee6:	inc    ebx
  41eee7:	mov    eax,ds:0x10e7c9a3
  41eeec:	adc    esp,DWORD PTR [ebp+0x64]
  41eeef:	sbb    eax,DWORD PTR [eax+esi*8-0x449127f8]
  41eef6:	jge    0x41eeaf
  41eef8:	push   esi
  41eef9:	dec    edi
  41eefa:	dec    eax
  41eefb:	sbb    bl,ch
  41eefd:	sbb    al,0x49
  41eeff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef00:	jge    0x41ef3b
  41ef02:	lahf   
  41ef03:	nop
  41ef04:	and    esi,esp
  41ef06:	xor    BYTE PTR [eax+0x41693d3],bh
  41ef0c:	dec    DWORD PTR [edx]
  41ef0e:	mov    edi,0xc3d5b8fd
  41ef13:	aaa    
  41ef14:	pop    ds
  41ef15:	(bad)  
  41ef16:	sbb    BYTE PTR [ebx-0x7a],cl
  41ef19:	sbb    ecx,esp
  41ef1b:	clc    
  41ef1c:	add    BYTE PTR [ecx+0x7d],bl
  41ef1f:	retf   0xae89
  41ef22:	sub    BYTE PTR [ebx+0x1e],bl
  41ef25:	pop    ecx
  41ef26:	or     BYTE PTR [esi+0x284fa447],cl
  41ef2c:	out    0x65,eax
  41ef2e:	(bad)  
  41ef2f:	rcr    BYTE PTR [ebx],0x2d
  41ef32:	sbb    DWORD PTR [ebx+ecx*4],esp
  41ef35:	cdq    
  41ef36:	imul   BYTE PTR [edi-0x8f1f14]
  41ef3c:	cli    
  41ef3d:	mov    es,ebx
  41ef3f:	sub    BYTE PTR [ecx+0xf6199d3],0xda
  41ef46:	sub    edx,eax
  41ef48:	pop    ds
  41ef49:	adc    dh,BYTE PTR [eax-0x47]
  41ef4c:	push   edi
  41ef4d:	ins    DWORD PTR es:[edi],dx
  41ef4e:	hlt    
  41ef4f:	xchg   edi,eax
  41ef50:	sbb    BYTE PTR [ebp+0x58],cl
  41ef53:	jg     0x41ef9f
  41ef55:	stc    
  41ef56:	sbb    ebx,DWORD PTR [eax]
  41ef58:	mov    dh,0xd8
  41ef5a:	jmp    0x41efd3
  41ef5c:	in     al,0x53
  41ef5e:	ret    0xc772
  41ef61:	sub    ah,dh
  41ef63:	jne    0x41eef2
  41ef65:	push   edx
  41ef66:	cdq    
  41ef67:	iret   
  41ef68:	inc    ebp
  41ef69:	inc    BYTE PTR [ebx-0x1568c93d]
  41ef6f:	pop    ebp
  41ef70:	add    ebx,DWORD PTR [eax]
  41ef72:	xchg   edi,eax
  41ef73:	pop    edx
  41ef74:	jne    0x41ef86
  41ef76:	mov    eax,0x67020d50
  41ef7b:	cs addr16 inc ebx
  41ef7e:	cmp    ebx,edx
  41ef80:	and    cl,bh
  41ef82:	mov    edi,0x2d2d0b4c
  41ef87:	push   0xffffff95
  41ef89:	in     al,dx
  41ef8a:	imul   edx,esp,0x1d1ff556
  41ef90:	mov    al,0x3a
  41ef92:	push   cs
  41ef93:	adc    bh,0xbd
  41ef96:	jb     0x41ef6d
  41ef98:	icebp  
  41ef99:	add    al,0x60
  41ef9b:	enter  0x5ed0,0x5a
  41ef9f:	outs   dx,BYTE PTR ds:[esi]
  41efa0:	mov    edx,0x96c81cbf
  41efa5:	paddusw mm2,mm2
  41efa8:	in     al,0xa9
  41efaa:	jnp    0x41ef7c
  41efac:	xor    eax,0xc939fe18
  41efb1:	fidiv  WORD PTR ds:0xf2d392f
  41efb7:	jnp    0x41ef97
  41efb9:	fld    DWORD PTR [ebp+0x7953ec20]
  41efbf:	sbb    eax,0x20f7f356
  41efc4:	cmp    BYTE PTR [esp+ebp*8-0x145c43b8],al
  41efcb:	aaa    
  41efcc:	and    cl,dl
  41efce:	inc    eax
  41efcf:	mov    cl,BYTE PTR [edx-0x7a8faedc]
  41efd5:	(bad)
  41efd9:	sbb    eax,0xf55b09da
  41efde:	mov    bl,0x6f
  41efe0:	ja     0x41f015
  41efe2:	pushf  
  41efe3:	daa    
  41efe4:	mov    esp,0x1c9737fa
  41efe9:	scas   eax,DWORD PTR es:[edi]
  41efea:	out    dx,al
  41efeb:	test   BYTE PTR [ebx],dh
  41efed:	stc    
  41efee:	mov    ebp,0x2936889e
  41eff3:	pop    ds
  41eff4:	loope  0x41f072
  41eff6:	stc    
  41eff7:	je     0x41efd8
  41eff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41effa:	dec    esp
  41effb:	sbb    BYTE PTR [edi],ch
  41effd:	in     al,dx
  41effe:	jle    0x41f04e
  41f000:	mov    al,0xc3
  41f002:	inc    ecx
  41f003:	in     al,0x26
  41f005:	sbb    dl,BYTE PTR [ebp+0x73]
  41f008:	enter  0x63e1,0xa5
  41f00c:	bound  ebp,QWORD PTR [esi-0x1a]
  41f00f:	and    edi,DWORD PTR [edx+0x4d]
  41f012:	xor    ecx,DWORD PTR ds:0xafb04cbb
  41f018:	pop    ebp
  41f019:	mov    WORD PTR [esi-0x5d53f827],fs
  41f01f:	xchg   edx,eax
  41f020:	jno    0x41f078
  41f022:	neg    DWORD PTR [ebx-0x70]
  41f025:	or     ch,cl
  41f027:	out    dx,eax
  41f028:	fs js  0x41f04d
  41f02b:	cld    
  41f02c:	sbb    ecx,DWORD PTR [ebp+0x11]
  41f02f:	je     0x41efcb
  41f031:	cmp    eax,eax
  41f033:	fs or  bh,bh
  41f036:	cmp    eax,0x9214ca6
  41f03b:	sti    
  41f03c:	loop   0x41f097
  41f03e:	ret    
  41f03f:	ja     0x41efff
  41f041:	dec    edi
  41f042:	test   DWORD PTR [ebp+edi*1-0x59],esi
  41f046:	shr    BYTE PTR ds:0xee6941af,cl
  41f04c:	adc    DWORD PTR [eax-0x4ff958d4],ebp
  41f052:	hlt    
  41f053:	pop    esp
  41f054:	push   0x4e09ee4
  41f059:	push   ss
  41f05a:	sbb    eax,0x92c9946
  41f05f:	push   ds
  41f060:	nop
  41f061:	dec    esp
  41f062:	xor    bh,BYTE PTR [edi-0x2392ef4a]
  41f068:	mov    DWORD PTR [eax+0x9],0x314d66ff
  41f06f:	sbb    esp,edx
  41f071:	and    eax,0x326e8e62
  41f076:	(bad)  
  41f078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f079:	mov    esi,0x6b8cf10c
  41f07e:	jmp    0x1d2d:0x3060bbb
  41f085:	bound  edx,QWORD PTR [edx-0x51]
  41f088:	jbe    0x41f102
  41f08a:	dec    edx
  41f08b:	rcr    DWORD PTR [edi+eiz*8+0x65459b0d],1
  41f092:	mov    WORD PTR [ecx-0x48d3594a],es
  41f098:	outs   dx,DWORD PTR ds:[esi]
  41f099:	mov    esi,0x13dd5746
  41f09e:	lock jno 0x41f062
  41f0a1:	sbb    al,0x21
  41f0a3:	pop    edx
  41f0a4:	push   eax
  41f0a5:	and    bh,BYTE PTR [edi+0x1a]
  41f0a8:	mov    eax,0x84c9e918
  41f0ad:	xor    DWORD PTR [edx+0x56],ecx
  41f0b0:	fisubr DWORD PTR [edi-0x1d]
  41f0b3:	mov    al,ds:0xced6bd6d
  41f0b8:	pop    ebp
  41f0b9:	bound  edx,QWORD PTR [ebx+eax*1-0x56ce8ee9]
  41f0c0:	jp     0x41f0a5
  41f0c2:	mov    bl,0xf9
  41f0c4:	xchg   ecx,eax
  41f0c5:	cdq    
  41f0c6:	out    dx,eax
  41f0c7:	dec    ebx
  41f0c8:	aam    0x77
  41f0ca:	shl    cl,1
  41f0cc:	int    0x79
  41f0ce:	ficomp DWORD PTR [edx+0x54]
  41f0d1:	das    
  41f0d2:	xlat   BYTE PTR ds:[ebx]
  41f0d3:	fild   DWORD PTR [eax-0x4b]
  41f0d6:	ret    
  41f0d7:	adc    al,0x22
  41f0d9:	cld    
  41f0da:	xor    ax,0xd322
  41f0de:	mov    esp,DWORD PTR ds:0x8fc33e66
  41f0e4:	add    eax,0x3a533f9e
  41f0e9:	pushf  
  41f0ea:	sub    BYTE PTR gs:[eax+0x45],bh
  41f0ee:	shr    DWORD PTR [ebx+ebp*4],cl
  41f0f1:	inc    ebx
  41f0f2:	inc    ecx
  41f0f3:	xchg   ecx,eax
  41f0f4:	sahf   
  41f0f5:	inc    ecx
  41f0f6:	in     eax,0x30
  41f0f8:	loopne 0x41f107
  41f0fa:	ins    DWORD PTR es:[edi],dx
  41f0fb:	pop    ebx
  41f0fc:	push   cs
  41f0fd:	inc    ebp
  41f0fe:	sub    eax,0x7658962f
  41f103:	rcl    DWORD PTR [esi+0x3fdb6930],1
  41f109:	lahf   
  41f10a:	arpl   WORD PTR [edx-0x4d],cx
  41f10d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f10e:	data16 stc 
  41f110:	fidivr WORD PTR [esi-0x20]
  41f113:	std    
  41f114:	popf   
  41f115:	mov    dh,0x83
  41f117:	inc    ebp
  41f118:	rol    DWORD PTR [eax-0x1c104302],0x49
  41f11f:	dec    ebx
  41f120:	sub    BYTE PTR [ecx],ah
  41f122:	mov    dl,0xb6
  41f124:	fwait
  41f125:	jbe    0x41f163
  41f127:	push   ss
  41f128:	retf   
  41f129:	jns    0x41f18c
  41f12b:	popf   
  41f12c:	(bad)  
  41f12d:	pop    edx
  41f12e:	retf   0xb2a0
  41f131:	xor    al,0x26
  41f133:	mov    bh,0x6b
  41f135:	mov    ch,BYTE PTR [ebp+ecx*4+0x4a655389]
  41f13c:	jge    0x41f10b
  41f13e:	aad    0x4e
  41f140:	and    eax,0x5cb5a7cd
  41f145:	inc    esi
  41f146:	fst    DWORD PTR [esi+0x78]
  41f149:	add    eax,0xcb6cba72
  41f14e:	xor    BYTE PTR [ebx+edi*8-0x5d],cl
  41f152:	pop    esp
  41f153:	call   0x976d5a80
  41f158:	push   0xe49a69e1
  41f15d:	add    ch,BYTE PTR ds:0xe106f8ea
  41f163:	out    0x94,eax
  41f165:	sahf   
  41f166:	mov    esp,0x661b8ccf
  41f16b:	and    al,0x16
  41f16d:	iret   
  41f16e:	mov    cl,0xde
  41f170:	mov    esp,0xdd39da39
  41f175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f176:	int    0x33
  41f178:	push   ebx
  41f179:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f17a:	(bad)  
  41f17c:	repnz cmp cl,BYTE PTR [edi-0x23]
  41f180:	aas    
  41f181:	sub    DWORD PTR [edi+0x9],ecx
  41f184:	outs   dx,BYTE PTR ds:[esi]
  41f185:	pop    esp
  41f186:	cmp    eax,0xbd176477
  41f18b:	(bad)  
  41f18c:	cmp    esi,DWORD PTR [ecx-0x30]
  41f18f:	(bad)  
  41f190:	call   DWORD PTR [ebx]
  41f192:	xor    DWORD PTR [edi],0xffffffb2
  41f195:	push   0xea8c2572
  41f19a:	aaa    
  41f19b:	outs   dx,BYTE PTR ds:[esi]
  41f19c:	fnstcw WORD PTR [ecx+0x2de1a84e]
  41f1a2:	call   0x1a50deeb
  41f1a7:	push   0xb5c46cd
  41f1ac:	or     al,0x43
  41f1ae:	rol    DWORD PTR [edi-0x34d13fd9],cl
  41f1b4:	jbe    0x41f17b
  41f1b6:	clc    
  41f1b7:	outs   dx,DWORD PTR ds:[esi]
  41f1b8:	or     eax,0x9eacd215
  41f1bd:	cmp    ecx,esi
  41f1bf:	dec    ebx
  41f1c0:	cwde   
  41f1c1:	fst    DWORD PTR [eax]
  41f1c3:	int3   
  41f1c4:	nop
  41f1c5:	outs   dx,DWORD PTR ds:[esi]
  41f1c6:	inc    ebp
  41f1c7:	or     DWORD PTR [eax-0x64ee8d02],ecx
  41f1cd:	jns    0x41f1ec
  41f1cf:	mov    ds:0x82c8b353,al
  41f1d4:	lock mov dh,BYTE PTR [esi-0x43]
  41f1d8:	add    al,0x36
  41f1da:	sub    bl,dh
  41f1dc:	pop    ecx
  41f1dd:	div    DWORD PTR [eax+edi*8-0x7a]
  41f1e1:	pop    es
  41f1e2:	retf   0xf09b
  41f1e5:	pop    ecx
  41f1e6:	inc    ebx
  41f1e7:	je     0x41f1ff
  41f1e9:	repnz sub bl,dl
  41f1ec:	(bad)  
  41f1ee:	(bad)  
  41f1ef:	lods   al,BYTE PTR ds:[esi]
  41f1f0:	mov    WORD PTR [ebx-0x7c],?
  41f1f3:	mov    edx,0xe2a6776
  41f1f8:	sub    BYTE PTR [ecx],dh
  41f1fa:	(bad)  
  41f1fb:	sub    bl,BYTE PTR ds:0x208eaff7
  41f201:	jo     0x41f1cd
  41f203:	clc    
  41f204:	test   al,0x22
  41f206:	xchg   esi,eax
  41f207:	mov    ds:0xba2fd065,al
  41f20c:	push   0x0
  41f20e:	push   eax
  41f20f:	jne    0x41f1f8
  41f211:	dec    edx
  41f212:	add    DWORD PTR [edi-0x66365107],0xffffffae
  41f219:	pop    ss
  41f21a:	(bad)  
  41f21b:	jnp    0x41f21a
  41f21d:	les    esp,FWORD PTR ds:0xf8a42fb1
  41f223:	pop    edi
  41f224:	or     DWORD PTR [edx+0x35b2de41],ebx
  41f22a:	xor    dl,BYTE PTR [edi-0x7f]
  41f22d:	push   eax
  41f22e:	in     eax,dx
  41f22f:	in     al,dx
  41f230:	or     DWORD PTR [eax],esp
  41f232:	in     eax,0x8c
  41f234:	cmp    bl,ah
  41f236:	pushf  
  41f237:	inc    ebp
  41f238:	out    0x79,eax
  41f23a:	sahf   
  41f23b:	and    cl,ah
  41f23d:	inc    edi
  41f23e:	clc    
  41f23f:	xchg   esp,eax
  41f240:	jp     0x41f29f
  41f242:	xchg   esp,eax
  41f243:	and    dl,dl
  41f245:	dec    eax
  41f246:	repnz cmp cl,BYTE PTR [ebx+0x2ee54c59]
  41f24d:	fnsave [edi-0x6f5fb5d9]
  41f253:	cmp    esp,DWORD PTR [edi]
  41f255:	xchg   ebp,eax
  41f256:	cwde   
  41f257:	jmp    0x41f243
  41f259:	cli    
  41f25a:	cmc    
  41f25b:	cmp    BYTE PTR [ecx-0x16],cl
  41f25e:	adc    BYTE PTR [edx+0x65],ch
  41f261:	fwait
  41f262:	lods   al,BYTE PTR ds:[esi]
  41f263:	(bad)  
  41f264:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f265:	mov    edi,0x2a89915
  41f26a:	mov    cl,0xc7
  41f26c:	sbb    al,0x71
  41f26e:	inc    ecx
  41f26f:	mov    edi,0x1ff0367e
  41f274:	mov    cl,BYTE PTR [edi+eiz*2-0x5e2d8ecb]
  41f27b:	add    DWORD PTR [esi+0x4d292c5d],ebp
  41f281:	sub    al,0xfd
  41f283:	outs   dx,BYTE PTR ds:[esi]
  41f284:	xchg   ecx,eax
  41f285:	jg     0x41f2bb
  41f287:	fcomp  DWORD PTR [edi]
  41f289:	or     DWORD PTR [esi-0x1c666b95],ebx
  41f28f:	fcomp  QWORD PTR [edi+0x10]
  41f292:	cmp    ebp,esp
  41f294:	mov    ebp,0x1ed469a8
  41f299:	jmp    0x41f264
  41f29b:	fiadd  DWORD PTR ss:[esi]
  41f29e:	dec    ebx
  41f29f:	jmp    0x38da:0x5ce01bd4
  41f2a6:	hlt    
  41f2a7:	aaa    
  41f2a8:	scas   al,BYTE PTR es:[edi]
  41f2a9:	cmp    edx,ebx
  41f2ab:	mov    ecx,DWORD PTR [esi]
  41f2ad:	mov    edi,0x35f4b0a8
  41f2b2:	inc    esp
  41f2b3:	mov    ds:0x9df7b4fd,al
  41f2b8:	arpl   cx,ax
  41f2ba:	daa    
  41f2bb:	xor    eax,0x57d691d2
  41f2c0:	sub    dh,BYTE PTR [edx]
  41f2c2:	rcr    BYTE PTR ds:0xc7ad5050,0x98
  41f2c9:	loop   0x41f325
  41f2cb:	jne    0x41f2a2
  41f2cd:	out    0xa,al
  41f2cf:	jae    0x41f30f
  41f2d1:	xor    DWORD PTR [ebx-0x6d],eax
  41f2d4:	jmp    0xe1e2e22d
  41f2d9:	cmp    bl,al
  41f2db:	pop    edx
  41f2dc:	mov    ds:0x2a4de273,eax
  41f2e1:	xchg   esp,eax
  41f2e2:	ficomp DWORD PTR [eax]
  41f2e4:	push   0x25763557
  41f2e9:	mov    WORD PTR [eax-0x29010a9a],?
  41f2ef:	sub    edi,DWORD PTR [ebx]
  41f2f1:	sub    eax,0xefeef922
  41f2f6:	and    eax,0x52729695
  41f2fb:	push   eax
  41f2fc:	rcl    BYTE PTR [ecx+ebp*1],0x60
  41f300:	fwait
  41f301:	xor    al,0x99
  41f303:	mov    ds:0xa1240abc,al
  41f308:	xchg   esi,eax
  41f309:	adc    BYTE PTR ds:[edi+0x68],0xd0
  41f30e:	jmp    0x670e5b4d
  41f313:	jmp    esi
  41f315:	lds    ecx,FWORD PTR [edx+0x60808aa3]
  41f31b:	scas   al,BYTE PTR es:[edi]
  41f31c:	inc    ebx
  41f31d:	out    dx,al
  41f31e:	pop    ecx
  41f31f:	int    0xc6
  41f321:	leave  
  41f322:	mov    ds,WORD PTR [eax+ecx*4]
  41f325:	sub    al,0xf
  41f327:	rcl    DWORD PTR [eax-0x57287099],0xa2
  41f32e:	sub    dl,ah
  41f330:	cwde   
  41f331:	imul   esi,ebp,0xffffffa1
  41f334:	lods   al,BYTE PTR ds:[esi]
  41f335:	jge    0x41f3a2
  41f337:	outs   dx,BYTE PTR ds:[esi]
  41f338:	in     al,dx
  41f339:	(bad)  
  41f33a:	arpl   WORD PTR [ebp+0x52],sp
  41f33d:	(bad)  
  41f33e:	(bad)  
  41f33f:	outs   dx,BYTE PTR ds:[esi]
  41f340:	push   ss
  41f341:	sub    edx,DWORD PTR ds:0x5b4e3df3
  41f347:	psubsb mm2,QWORD PTR [edx-0x78]
  41f34b:	push   edi
  41f34c:	pop    esp
  41f34d:	dec    eax
  41f34e:	lahf   
  41f34f:	int3   
  41f350:	cld    
  41f351:	dec    ebp
  41f352:	sub    DWORD PTR [ebx-0x54822449],esi
  41f358:	rol    BYTE PTR [edx-0x144d42fc],1
  41f35e:	xor    al,BYTE PTR [ebx]
  41f360:	adc    al,bl
  41f362:	xchg   BYTE PTR [ebp+0x3d],dh
  41f365:	clc    
  41f366:	rcr    esp,1
  41f368:	js     0x41f3cd
  41f36a:	fld    DWORD PTR [eax-0x1a]
  41f36d:	rol    BYTE PTR [eax-0x691fc0c2],1
  41f373:	pop    ebx
  41f374:	fist   WORD PTR [ecx]
  41f376:	and    edx,DWORD PTR [esi+0x6d]
  41f379:	jae    0x41f3ed
  41f37b:	ret    0xbcf6
  41f37e:	mov    cs,WORD PTR [eax+0x58c82741]
  41f384:	repz pop eax
  41f386:	stc    
  41f387:	mov    ss,WORD PTR [ecx]
  41f389:	mov    dh,BYTE PTR [ebx+edx*4]
  41f38c:	(bad)  
  41f38d:	out    0xf7,al
  41f38f:	stos   DWORD PTR es:[edi],eax
  41f390:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41f392:	std    
  41f393:	push   edi
  41f394:	and    DWORD PTR [ebx+0xd],edx
  41f397:	pop    ebx
  41f398:	push   ds
  41f399:	cmovg  esi,DWORD PTR [edi-0x25]
  41f39d:	loop   0x41f33c
  41f39f:	daa    
  41f3a0:	lds    eax,FWORD PTR [ecx]
  41f3a2:	jno    0x41f336
  41f3a4:	add    BYTE PTR [eax+0x2f0ef645],ah
  41f3aa:	lods   eax,DWORD PTR ds:[esi]
  41f3ab:	das    
  41f3ac:	pop    es
  41f3ad:	test   esp,esi
  41f3af:	inc    edx
  41f3b0:	cmp    DWORD PTR [ebp-0x6b],esi
  41f3b3:	in     eax,0xe0
  41f3b5:	mov    WORD PTR [ebp-0x4b3bda78],cs
  41f3bb:	jns    0x41f385
  41f3bd:	outs   dx,BYTE PTR ds:[esi]
  41f3be:	ret    0x63c5
  41f3c1:	loop   0x41f3d8
  41f3c3:	adc    BYTE PTR [esi+ecx*8+0x16],ah
  41f3c7:	sar    DWORD PTR [esi-0x47e0ea16],0x2b
  41f3ce:	jmp    0x576b:0xcccf0c6f
  41f3d5:	xchg   ebp,eax
  41f3d6:	(bad)  
  41f3d7:	mov    eax,ds:0xb4e2090a
  41f3dc:	mov    esp,edx
  41f3de:	jecxz  0x41f3b0
  41f3e0:	push   edi
  41f3e1:	or     eax,0x3e0e7380
  41f3e6:	mov    eax,ds:0x17b521ac
  41f3eb:	test   al,0x77
  41f3ed:	mov    al,0xb3
  41f3ef:	cli    
  41f3f0:	push   eax
  41f3f1:	push   ecx
  41f3f2:	jge    0x41f448
  41f3f4:	ficomp DWORD PTR [edi+0x45f78222]
  41f3fa:	xor    ebx,eax
  41f3fc:	push   cs
  41f3fd:	inc    ebp
  41f3fe:	cmp    ah,BYTE PTR [eax+0x47]
  41f401:	cmc    
  41f402:	dec    ecx
  41f403:	adc    BYTE PTR [ecx-0x410c9cb5],ch
  41f409:	retf   
  41f40a:	cdq    
  41f40b:	fst    QWORD PTR [ecx+0x99be1b9]
  41f411:	sahf   
  41f412:	test   eax,0xade0c2c7
  41f417:	or     DWORD PTR [eax-0x4cf00225],edx
  41f41d:	pop    ds
  41f41e:	pop    ss
  41f41f:	mov    eax,ds:0x309966de
  41f424:	push   cs
  41f425:	mov    bl,0x2b
  41f427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f428:	mov    esp,0xd774fd63
  41f42d:	aaa    
  41f42e:	out    dx,al
  41f42f:	adc    eax,0x6a44a80e
  41f434:	mov    bl,0x2b
  41f436:	sub    BYTE PTR [esi-0x62f9847e],dh
  41f43c:	int    0xe
  41f43e:	add    DWORD PTR [ecx],ecx
  41f440:	call   0xdde95853
  41f445:	or     bx,WORD PTR [ecx-0x36631798]
  41f44c:	inc    eax
  41f44d:	or     DWORD PTR [edi],0xb114a68
  41f453:	adc    bh,ch
  41f455:	xchg   ebx,eax
  41f456:	xchg   esp,eax
  41f457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f458:	add    esi,0xffffffe7
  41f45b:	mov    al,0x7f
  41f45d:	sub    BYTE PTR [ebx-0x4bea380],ah
  41f463:	aas    
  41f464:	and    edi,edx
  41f466:	and    al,0xa9
  41f468:	shr    DWORD PTR [edi],0xb0
  41f46b:	mov    edi,0x45be985c
  41f470:	cmc    
  41f471:	xchg   DWORD PTR [ebx],edx
  41f473:	push   edx
  41f474:	jne    0x41f3fa
  41f476:	mov    esp,0x384559df
  41f47b:	aas    
  41f47c:	and    al,0xdc
  41f47e:	out    0xf9,eax
  41f480:	jnp    0x41f465
  41f482:	sub    dh,ah
  41f484:	xchg   esp,eax
  41f485:	push   edi
  41f486:	jmp    0xcf58f85a
  41f48b:	push   eax
  41f48c:	or     eax,0x3c51eb9b
  41f491:	cld    
  41f492:	in     al,dx
  41f493:	dec    eax
  41f494:	es aad 0xc2
  41f497:	mov    ebx,0xc94b8339
  41f49c:	xchg   ebx,eax
  41f49d:	ins    BYTE PTR es:[edi],dx
  41f49e:	jmp    0x9d9fd89d
  41f4a3:	iret   
  41f4a4:	mov    ecx,0x661f2af4
  41f4a9:	mov    ebx,0x840a9070
  41f4ae:	and    eax,0x33f35ecd
  41f4b3:	mov    ebx,0x16397f40
  41f4b8:	cmp    al,0xe0
  41f4ba:	mov    esp,0xe500e351
  41f4bf:	mov    esi,0x925f2113
  41f4c4:	mov    dl,0x59
  41f4c6:	aaa    
  41f4c7:	jae    0x41f461
  41f4c9:	aas    
  41f4ca:	sahf   
  41f4cb:	jns    0x41f518
  41f4cd:	add    esp,DWORD PTR [edx-0x7a7a9144]
  41f4d3:	inc    esi
  41f4d4:	nop
  41f4d5:	fiadd  WORD PTR [esi-0x3f]
  41f4d8:	mov    ds:0x77d644a4,al
  41f4dd:	hlt    
  41f4de:	into   
  41f4df:	outs   dx,BYTE PTR ds:[esi]
  41f4e0:	clc    
  41f4e1:	or     BYTE PTR [edi-0x7d],ch
  41f4e4:	into   
  41f4e5:	or     al,0x31
  41f4e7:	inc    esi
  41f4e8:	inc    edx
  41f4e9:	std    
  41f4ea:	mov    BYTE PTR [ebp+0x64ef11b1],ah
  41f4f0:	jle    0x41f4bb
  41f4f2:	pop    esp
  41f4f3:	jge    0x41f569
  41f4f5:	stc    
  41f4f6:	mov    eax,ds:0xdb5d097b
  41f4fb:	mov    ds:0x15857c4a,eax
  41f500:	jo     0x41f521
  41f502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f503:	inc    edx
  41f504:	jne    0x41f512
  41f506:	or     BYTE PTR [edx],dh
  41f508:	and    edi,DWORD PTR [edx]
  41f50a:	inc    eax
  41f50b:	mov    ds:0xbb2e8e8a,eax
  41f510:	xlat   BYTE PTR ds:[ebx]
  41f511:	(bad)
  41f514:	cmp    ecx,DWORD PTR [bx+si-0x7069]
  41f519:	mov    edi,0xe8d9fe89
  41f51e:	clc    
  41f51f:	sbb    BYTE PTR [ecx+0x13],dl
  41f522:	pop    ds
  41f523:	mov    esp,0x2f18392
  41f528:	aaa    
  41f529:	imul   esp,DWORD PTR [esi+0x19],0xe7566844
  41f530:	jb     0x41f5b1
  41f532:	sub    DWORD PTR [esi],esi
  41f534:	cmp    BYTE PTR [edi],0xe9
  41f537:	arpl   WORD PTR [esi],si
  41f539:	sbb    bh,dl
  41f53b:	mov    dl,0xa2
  41f53d:	arpl   bx,bx
  41f53f:	in     eax,dx
  41f540:	add    DWORD PTR ds:0xd7cde02e,esp
  41f546:	lahf   
  41f547:	xor    BYTE PTR [ebx+0x15f2fe44],al
  41f54d:	adc    BYTE PTR [esi],al
  41f54f:	sub    ecx,DWORD PTR [eax+0x3c]
  41f552:	inc    ecx
  41f553:	test   al,0x2a
  41f555:	retf   
  41f556:	add    bh,ah
  41f558:	cs leave 
  41f55a:	mov    al,0xbe
  41f55c:	add    eax,0x386671f7
  41f561:	test   BYTE PTR [eax-0x7f1e83c7],cl
  41f567:	fnop   
  41f569:	pop    edx
  41f56a:	sub    eax,0xe0c21631
  41f56f:	aam    0xf5
  41f571:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f572:	jg     0x41f585
  41f574:	div    esi
  41f576:	(bad)  
  41f577:	aad    0x4f
  41f579:	xchg   edx,eax
  41f57a:	inc    ebp
  41f57b:	aas    
  41f57c:	mov    eax,ds:0xdec541ab
  41f581:	pop    esi
  41f582:	xor    BYTE PTR [edx],ch
  41f584:	fnstenv [edx]
  41f586:	add    BYTE PTR [edi+0x2baf0725],bh
  41f58c:	int3   
  41f58d:	shr    DWORD PTR [edx-0x3289ad08],0xb7
  41f594:	inc    esi
  41f595:	mov    ch,cl
  41f597:	xor    BYTE PTR [edi-0x4577222],dl
  41f59d:	lahf   
  41f59e:	xchg   ecx,eax
  41f59f:	mov    dh,0x26
  41f5a1:	daa    
  41f5a2:	xchg   DWORD PTR [edx+0x26],esi
  41f5a5:	add    DWORD PTR [esp+edi*2-0x641f427f],edi
  41f5ac:	mov    ds:0xe06cfbc5,eax
  41f5b1:	and    eax,0xc393bf28
  41f5b6:	xchg   edx,eax
  41f5b7:	clc    
  41f5b8:	(bad)  
  41f5b9:	lods   al,BYTE PTR ds:[esi]
  41f5ba:	gs dec ebp
  41f5bc:	fstp   TBYTE PTR [edx-0x2dc2c2c7]
  41f5c2:	xor    ebx,eax
  41f5c4:	or     cl,ch
  41f5c6:	adc    eax,0x410f9dfe
  41f5cb:	jb     0x41f5e2
  41f5cd:	sub    DWORD PTR [ebx-0x43ba3e83],ecx
  41f5d3:	add    eax,0x546950cb
  41f5d8:	pusha  
  41f5d9:	inc    esp
  41f5da:	cmc    
  41f5db:	pop    ebp
  41f5dc:	xchg   ebx,eax
  41f5dd:	stos   BYTE PTR es:[edi],al
  41f5de:	dec    ecx
  41f5df:	dec    cl
  41f5e1:	clc    
  41f5e2:	sbb    DWORD PTR [edx+0x80c0376],edx
  41f5e8:	in     eax,0xf
  41f5ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5ec:	loope  0x41f665
  41f5ee:	popaw  
  41f5f0:	inc    esi
  41f5f1:	pop    esi
  41f5f2:	adc    al,0xaa
  41f5f4:	inc    ebp
  41f5f5:	mov    edi,0x9d819e38
  41f5fa:	lahf   
  41f5fb:	dec    esi
  41f5fc:	jg     0x41f63b
  41f5fe:	cmp    edx,DWORD PTR [edx-0xf49b34f]
  41f604:	pop    edi
  41f605:	shl    BYTE PTR [edx-0x59e9e4c4],cl
  41f60b:	jbe    0x41f60d
  41f60d:	sub    eax,0xdfda05aa
  41f612:	mov    bh,0xa
  41f614:	arpl   di,si
  41f616:	adc    eax,0x9fe58cd8
  41f61b:	cwde   
  41f61c:	add    BYTE PTR [ecx+0x38f945cf],dl
  41f622:	outs   dx,DWORD PTR ds:[esi]
  41f623:	rol    edx,0xbe
  41f626:	fmul   DWORD PTR [ebp-0x4e]
  41f629:	xor    BYTE PTR [esi],ah
  41f62b:	sar    DWORD PTR [ebx],cl
  41f62d:	xor    al,0x6a
  41f62f:	lock outs dx,BYTE PTR ds:[esi]
  41f631:	pop    ss
  41f632:	sahf   
  41f633:	cwde   
  41f634:	int    0xa2
  41f636:	data16 int3 
  41f638:	into   
  41f639:	loopne 0x41f647
  41f63b:	pop    eax
  41f63c:	and    DWORD PTR [ecx+edi*8+0x32c8f87a],eax
  41f643:	pop    ss
  41f644:	(bad)  
  41f645:	push   ebp
  41f646:	(bad)  
  41f647:	jecxz  0x41f698
  41f649:	xor    eax,0xf8af488c
  41f64e:	xchg   ebx,eax
  41f64f:	add    eax,0x9e3ad7cd
  41f654:	sub    al,BYTE PTR [edx-0x4da752b3]
  41f65a:	sbb    BYTE PTR [ebp+eax*4-0x1b2147b9],0x1e
  41f662:	inc    ecx
  41f663:	xchg   BYTE PTR [edx+eiz*8],cl
  41f666:	sub    DWORD PTR [esi],esi
  41f668:	push   ebx
  41f669:	sub    DWORD PTR [edx],0x3d
  41f66c:	xor    ecx,DWORD PTR [ebp-0x75]
  41f66f:	sbb    eax,0xe4faa3b2
  41f674:	xchg   ebx,eax
  41f675:	sbb    al,0x16
  41f677:	mov    ds:0x7e67320b,al
  41f67c:	popa   
  41f67d:	test   al,0x29
  41f67f:	test   BYTE PTR [ecx],0x0
  41f682:	leave  
  41f683:	push   esp
  41f684:	inc    edi
  41f685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f686:	std    
  41f687:	cmp    dl,ch
  41f689:	jge    0x41f629
  41f68b:	mov    ch,0x6e
  41f68d:	pushf  
  41f68e:	imul   ecx,DWORD PTR [edi],0x375a4581
  41f694:	xchg   ebp,eax
  41f695:	enter  0x5702,0x1a
  41f699:	push   ebp
  41f69a:	stc    
  41f69b:	inc    edx
  41f69c:	inc    ebx
  41f69d:	dec    ebp
  41f69e:	mov    esi,0x85616df4
  41f6a3:	aad    0x9d
  41f6a5:	or     al,0xe1
  41f6a7:	fdiv   st(1),st
  41f6a9:	jg     0x41f633
  41f6ab:	in     al,dx
  41f6ac:	lahf   
  41f6ad:	mov    cl,0x94
  41f6af:	mov    bh,dh
  41f6b1:	ins    DWORD PTR es:[edi],dx
  41f6b2:	pop    es
  41f6b3:	nop
  41f6b4:	jle    0x41f661
  41f6b6:	add    DWORD PTR [edx+0x5d401ea],esp
  41f6bc:	and    BYTE PTR [edi],dh
  41f6be:	js     0x41f734
  41f6c0:	es pop edx
  41f6c2:	arpl   WORD PTR [edx],dx
  41f6c4:	ficom  WORD PTR [ecx]
  41f6c6:	jle    0x41f66e
  41f6c8:	sbb    ebp,DWORD PTR [edx-0x56]
  41f6cb:	jle    0x41f744
  41f6cd:	add    eax,0xcd63828e
  41f6d2:	inc    ecx
  41f6d3:	(bad)  
  41f6d5:	sbb    eax,ebx
  41f6d7:	imul   BYTE PTR [bx]
  41f6da:	(bad)  
  41f6db:	enter  0x3d12,0x5f
  41f6df:	jo     0x41f702
  41f6e1:	mov    eax,0x55729b3a
  41f6e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6e7:	cmp    DWORD PTR [ebx+0x2],edi
  41f6ea:	jmp    0xbbbf:0x68cf1a06
  41f6f1:	and    edx,DWORD PTR [edx+ebp*8-0x54]
  41f6f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6f6:	pop    ebp
  41f6f7:	jns    0x41f6ba
  41f6f9:	push   0x28a49546
  41f6fe:	inc    ebp
  41f6ff:	and    eax,0x1ff7c0ba
  41f704:	mov    ds:0x1487f5e4,al
  41f709:	dec    eax
  41f70a:	and    dh,cl
  41f70c:	ret    
  41f70d:	fs cmc 
  41f70f:	test   edx,0xfa688f48
  41f715:	fbstp  TBYTE PTR [eax+0x3424c83b]
  41f71b:	sbb    cl,ch
  41f71d:	xor    ebx,esp
  41f71f:	fs out dx,eax
  41f721:	sub    al,0x21
  41f723:	xchg   esi,eax
  41f724:	dec    esi
  41f725:	cmp    edi,esi
  41f727:	mov    WORD PTR [ebp-0x4d7bee5e],?
  41f72d:	test   DWORD PTR [ecx+0x2d419d13],0xc7e649a9
  41f737:	sub    ebx,edi
  41f739:	fbstp  TBYTE PTR [esi]
  41f73b:	mov    ds:0x5099854,al
  41f740:	jno    0x41f731
  41f742:	(bad)  
  41f743:	mov    bl,0x12
  41f745:	mov    ch,0x21
  41f747:	neg    DWORD PTR cs:[edi+0x1fd74933]
  41f74e:	add    BYTE PTR [eax+0x608714fe],0xba
  41f755:	inc    esp
  41f756:	out    dx,eax
  41f757:	or     eax,0x166699ec
  41f75c:	mov    esp,0x86ca1495
  41f761:	rol    BYTE PTR [ebx+0xe],1
  41f764:	ret    0x9b55
  41f767:	pop    ds
  41f768:	div    DWORD PTR [edx]
  41f76a:	or     al,0x79
  41f76c:	mov    esp,0x153cea61
  41f771:	sar    esi,cl
  41f773:	dec    esp
  41f774:	pop    ds
  41f775:	and    esi,DWORD PTR [edi+0x44afdc69]
  41f77b:	fadd   st(4),st
  41f77d:	sti    
  41f77e:	cs push 0x69619d73
  41f784:	pop    edi
  41f785:	and    eax,0x89a887d1
  41f78a:	bound  eax,QWORD PTR [eax+0x19]
  41f78d:	xor    bh,BYTE PTR [esi]
  41f78f:	push   0x4d
  41f791:	out    0x1,al
  41f793:	(bad)  
  41f794:	push   0x759cd099
  41f799:	push   0x7f4066f5
  41f79e:	loope  0x41f78a
  41f7a0:	fnstsw WORD PTR [ebx]
  41f7a2:	call   0xc866:0x85f5c604
  41f7a9:	call   0x29f1:0xc2dc8c5b
  41f7b0:	sbb    dh,BYTE PTR [ecx]
  41f7b2:	or     al,0xc5
  41f7b4:	pop    edi
  41f7b5:	nop    DWORD PTR ds:0x8efba720
  41f7bc:	aas    
  41f7bd:	test   bl,bh
  41f7bf:	mov    dh,0xdc
  41f7c1:	dec    ecx
  41f7c2:	inc    esi
  41f7c3:	punpckldq mm2,mm4
  41f7c6:	inc    esi
  41f7c7:	loope  0x41f7ce
  41f7c9:	xchg   esi,eax
  41f7ca:	sub    ebp,ebp
  41f7cc:	inc    esi
  41f7cd:	into   
  41f7ce:	push   eax
  41f7cf:	ja     0x41f83b
  41f7d1:	out    dx,al
  41f7d2:	aaa    
  41f7d3:	fucomip st,st(3)
  41f7d5:	inc    esp
  41f7d6:	mov    edx,0x61e2308a
  41f7db:	mov    BYTE PTR [esi],dl
  41f7dd:	test   DWORD PTR [ecx-0x69f21fc8],eax
  41f7e3:	adc    BYTE PTR [edx+0x7c],ah
  41f7e6:	pop    es
  41f7e7:	xor    eax,0x96675f9d
  41f7ec:	out    dx,al
  41f7ed:	inc    esi
  41f7ee:	push   ds
  41f7ef:	mov    dl,0xd6
  41f7f1:	mov    ?,WORD PTR [edi]
  41f7f3:	and    edi,ecx
  41f7f5:	in     eax,dx
  41f7f6:	xor    DWORD PTR [ecx-0x6f],edx
  41f7f9:	es mov es,esp
  41f7fc:	adc    al,al
  41f7fe:	das    
  41f7ff:	mov    ah,0xff
  41f801:	fs cs test al,0x98
  41f805:	mov    ecx,edx
  41f807:	xchg   edx,eax
  41f808:	xor    esp,DWORD PTR [eax]
  41f80a:	xchg   edx,eax
  41f80b:	mov    ah,0x3c
  41f80d:	cs push es
  41f80f:	push   0x98f09d9a
  41f814:	inc    ebp
  41f815:	inc    ebp
  41f816:	mov    ebp,ebp
  41f818:	test   al,0xbd
  41f81a:	push   ebp
  41f81b:	pop    edx
  41f81c:	xor    al,0xe1
  41f81e:	ja     0x41f7ed
  41f820:	fisttp QWORD PTR [edx-0x69]
  41f823:	(bad)  
  41f824:	cmc    
  41f825:	dec    ebx
  41f826:	jb     0x41f7b3
  41f828:	and    eax,0xc99296c9
  41f82d:	inc    eax
  41f82e:	dec    edx
  41f82f:	push   ecx
  41f830:	ins    DWORD PTR es:[edi],dx
  41f831:	dec    esp
  41f832:	cld    
  41f833:	jge    0x41f7ea
  41f835:	lahf   
  41f836:	xchg   DWORD PTR [edi+ebp*8],edx
  41f839:	xchg   ebx,eax
  41f83a:	adc    DWORD PTR [eax+0x35],esi
  41f83d:	jge    0x41f7d3
  41f83f:	aam    0x9f
  41f841:	cdq    
  41f842:	(bad)  
  41f843:	test   al,0xa4
  41f845:	push   ds
  41f846:	or     ch,BYTE PTR [edi+0x3121e113]
  41f84c:	inc    edx
  41f84d:	lock popa 
  41f84f:	mov    ss,WORD PTR [esi]
  41f851:	je     0x41f8ab
  41f853:	mov    ebp,0x935ac70b
  41f858:	dec    ebp
  41f859:	cmp    al,bl
  41f85b:	bound  esp,QWORD PTR [eiz*2+0x31c82f72]
  41f862:	sub    DWORD PTR [eax],ebx
  41f864:	sbb    eax,0xc902ab3c
  41f869:	into   
  41f86a:	out    0xba,al
  41f86c:	jl     0x41f7fa
  41f86e:	xlat   BYTE PTR ss:[ebx]
  41f870:	jmp    0x73cc:0xc2bbacb1
  41f877:	(bad)  
  41f878:	adc    edx,ebx
  41f87a:	(bad)  
  41f87b:	in     eax,0x53
  41f87d:	and    eax,0x9d0aa70f
  41f882:	or     al,0xcd
  41f884:	jp     0x41f8cc
  41f886:	dec    edx
  41f887:	mov    WORD PTR [eax],sp
  41f88a:	or     al,0x43
  41f88c:	xchg   ebx,eax
  41f88d:	or     dl,al
  41f88f:	or     DWORD PTR [eax+ebp*2-0x16],eax
  41f893:	sbb    esi,DWORD PTR [ecx]
  41f895:	push   ds
  41f896:	call   0xc5356370
  41f89b:	or     al,bh
  41f89d:	dec    ebx
  41f89e:	push   ss
  41f89f:	fldlg2 
  41f8a1:	mov    dl,0xd6
  41f8a3:	or     ch,bh
  41f8a5:	jl     0x41f83d
  41f8a7:	cld    
  41f8a8:	lods   eax,DWORD PTR ds:[esi]
  41f8a9:	mov    ss,WORD PTR [ebx-0x73]
  41f8ac:	mov    ah,0x1
  41f8ae:	iret   
  41f8af:	sar    BYTE PTR [ebx],cl
  41f8b1:	xchg   ebx,eax
  41f8b2:	inc    esi
  41f8b3:	inc    edx
  41f8b4:	hlt    
  41f8b5:	sub    eax,0x635d7d3e
  41f8ba:	sahf   
  41f8bb:	gs push esi
  41f8bd:	dec    edx
  41f8be:	loopne 0x41f8f5
  41f8c0:	call   0xbab2:0x9906d571
  41f8c7:	inc    edx
  41f8c8:	jle    0x41f870
  41f8ca:	mov    fs,WORD PTR [esi-0x7a18de33]
  41f8d0:	mov    al,dh
  41f8d2:	sub    dh,BYTE PTR [edi]
  41f8d4:	mov    ebp,edx
  41f8d6:	dec    ebp
  41f8d7:	cmp    DWORD PTR ds:[ebx+0x1b],eax
  41f8db:	cmp    eax,0x5e2ad8dd
  41f8e0:	pop    ebp
  41f8e1:	jbe    0x41f86f
  41f8e3:	inc    ecx
  41f8e4:	dec    esi
  41f8e5:	pop    eax
  41f8e6:	or     eax,0xa108342e
  41f8eb:	pop    esi
  41f8ec:	out    dx,al
  41f8ed:	xchg   edi,eax
  41f8ee:	mov    bl,ah
  41f8f0:	mov    esi,0xc44f46f0
  41f8f5:	scas   eax,DWORD PTR es:[edi]
  41f8f6:	fistp  DWORD PTR [esi-0x16]
  41f8f9:	shl    BYTE PTR [eax+0x21],1
  41f8fc:	out    0xca,al
  41f8fe:	(bad)  
  41f8ff:	inc    DWORD PTR [ebx]
  41f901:	or     dl,BYTE PTR [edx]
  41f903:	stc    
  41f904:	popa   
  41f905:	pop    eax
  41f906:	push   0x400970cd
  41f90b:	clc    
  41f90c:	cli    
  41f90d:	sub    al,0x97
  41f90f:	xchg   esp,eax
  41f910:	pop    esi
  41f911:	push   esi
  41f912:	sbb    ah,BYTE PTR ds:0xbf93595f
  41f918:	sub    DWORD PTR [edx+0x1d],esp
  41f91b:	xor    BYTE PTR [edi+ebp*2],ah
  41f91e:	add    edi,esp
  41f920:	in     eax,dx
  41f921:	mov    ebx,0xdc61f841
  41f926:	imul   esi,DWORD PTR [ebx+edi*4],0x76
  41f92a:	cmp    bl,BYTE PTR [esi]
  41f92c:	pop    edi
  41f92d:	fsub   DWORD PTR [esi]
  41f92f:	mov    al,0x1d
  41f931:	push   esi
  41f932:	push   esp
  41f933:	jns    0x41f9b0
  41f935:	jnp    0x41f921
  41f937:	mov    ?,WORD PTR [edx]
  41f939:	adc    BYTE PTR [edi],bh
  41f93b:	popf   
  41f93c:	or     al,0x9d
  41f93e:	sub    DWORD PTR ds:0xaf47a944,esi
  41f944:	add    dh,bl
  41f946:	inc    ebp
  41f947:	mov    ah,al
  41f949:	xor    dl,dl
  41f94b:	mov    al,0xa4
  41f94d:	pop    esp
  41f94e:	in     al,dx
  41f94f:	mov    dh,0x50
  41f951:	repz mov cs,WORD PTR [edi]
  41f954:	lahf   
  41f955:	icebp  
  41f956:	or     eax,esp
  41f958:	push   0x4d
  41f95a:	iret   
  41f95b:	mov    ch,0x87
  41f95d:	xlat   BYTE PTR ds:[ebx]
  41f95e:	sbb    ebp,DWORD PTR [esp+ebx*1+0x61]
  41f962:	(bad)  
  41f963:	js     0x41f9a6
  41f965:	(bad)  
  41f966:	call   0x270e:0xd73cc649
  41f96d:	sub    al,BYTE PTR [edx+0x21]
  41f970:	(bad)  
  41f971:	imul   esi,ebp,0xffffff99
  41f974:	sbb    eax,0xb06e0662
  41f979:	mov    dh,0xce
  41f97b:	pop    ebx
  41f97c:	inc    edi
  41f97d:	outs   dx,BYTE PTR ds:[esi]
  41f97e:	push   0x1d5de84c
  41f983:	ja     0x41f9f5
  41f985:	gs popa 
  41f987:	lock push eax
  41f989:	repnz cmp ebx,DWORD PTR [edx+0x1a96170a]
  41f990:	or     BYTE PTR [ebx-0x78],0xae
  41f994:	test   DWORD PTR [edi],eax
  41f996:	in     eax,0x9b
  41f998:	mov    esp,0x96b9f36d
  41f99d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f99e:	jecxz  0x41f93a
  41f9a0:	pop    ebx
  41f9a1:	pop    edx
  41f9a2:	mov    cl,0x77
  41f9a4:	push   edx
  41f9a5:	ins    DWORD PTR es:[edi],dx
  41f9a6:	popa   
  41f9a7:	xor    eax,DWORD PTR es:[di]
  41f9ab:	sub    BYTE PTR [edi-0x42],al
  41f9ae:	test   bh,0xb6
  41f9b1:	inc    esp
  41f9b2:	adc    al,0xac
  41f9b4:	pop    ds
  41f9b5:	in     al,0x18
  41f9b7:	mov    WORD PTR [edi+0x5d],ss
  41f9ba:	fwait
  41f9bb:	xlat   BYTE PTR ds:[ebx]
  41f9bc:	inc    ebx
  41f9bd:	add    dh,bh
  41f9bf:	repz mov dh,0xc0
  41f9c2:	mov    ecx,0xfbdd308f
  41f9c7:	into   
  41f9c8:	push   ebx
  41f9c9:	lock mov BYTE PTR gs:[ecx],al
  41f9cd:	lock push 0x289849c4
  41f9d3:	and    eax,DWORD PTR [esi]
  41f9d5:	inc    edi
  41f9d6:	dec    eax
  41f9d7:	cmp    al,0xa3
  41f9d9:	fisub  DWORD PTR [edi+0xdd20057]
  41f9df:	lea    eax,[edx+0x6415a09b]
  41f9e5:	xor    ebp,DWORD PTR [edx-0x327aed55]
  41f9eb:	and    ebp,DWORD PTR [edx+0x10a0607d]
  41f9f1:	out    0x62,al
  41f9f3:	cld    
  41f9f4:	dec    esi
  41f9f5:	cdq    
  41f9f6:	ins    DWORD PTR es:[edi],dx
  41f9f7:	push   esi
  41f9f8:	push   ss
  41f9f9:	clc    
  41f9fa:	lods   al,BYTE PTR ds:[esi]
  41f9fb:	aas    
  41f9fc:	jmp    0x2024:0x4435e7a
  41fa03:	sbb    al,0xce
  41fa05:	sub    ch,ah
  41fa07:	in     eax,0xd
  41fa09:	jl     0x41fa3c
  41fa0b:	fcom   QWORD PTR [ecx]
  41fa0d:	iret   
  41fa0e:	inc    edi
  41fa0f:	scas   eax,DWORD PTR es:[edi]
  41fa10:	mov    ah,0x51
  41fa12:	jbe    0x41fa1d
  41fa14:	xor    DWORD PTR [ecx],ebx
  41fa16:	cmp    BYTE PTR [eax+0x54],al
  41fa19:	sub    BYTE PTR [esp+esi*4],ah
  41fa1c:	xchg   ch,bh
  41fa1e:	cli    
  41fa1f:	cs jg  0x41f9e0
  41fa22:	push   ecx
  41fa23:	adc    BYTE PTR [edx+ebp*2],dh
  41fa26:	mov    bh,0x28
  41fa28:	add    edi,ebp
  41fa2a:	adc    eax,0xb3d85a40
  41fa2f:	in     eax,0xf0
  41fa31:	dec    edi
  41fa32:	(bad)  
  41fa33:	push   cs
  41fa34:	out    dx,al
  41fa35:	xchg   ecx,eax
  41fa36:	nop    DWORD PTR [ebx-0x31]
  41fa3a:	adc    al,0x6e
  41fa3c:	in     eax,dx
  41fa3d:	retf   0xbff3
  41fa40:	dec    edx
  41fa41:	popa   
  41fa42:	test   BYTE PTR [ebp-0x55c228fc],dh
  41fa48:	cmp    al,0xf7
  41fa4a:	mov    al,0x82
  41fa4c:	xor    al,0x99
  41fa4e:	daa    
  41fa4f:	cs leave 
  41fa51:	ins    BYTE PTR es:[edi],dx
  41fa52:	mov    eax,ds:0x37ef8dd1
  41fa57:	xor    eax,0x5e9e4cb2
  41fa5c:	mov    al,ds:0x57900db
  41fa61:	outs   dx,BYTE PTR ds:[esi]
  41fa62:	add    al,0xe4
  41fa64:	test   BYTE PTR fs:[edi+ecx*2-0xf],cl
  41fa69:	push   esi
  41fa6a:	sub    ebp,ebx
  41fa6c:	mov    ch,0x20
  41fa6e:	xor    BYTE PTR [ebp-0x20],ah
  41fa71:	add    al,0xec
  41fa73:	(bad)  
  41fa74:	cli    
  41fa75:	sbb    eax,0x36c5a2bf
  41fa7a:	nop
  41fa7b:	xchg   DWORD PTR [eax-0x19],edi
  41fa7e:	add    eax,0x5df92667
  41fa83:	aas    
  41fa84:	outs   dx,DWORD PTR ds:[esi]
  41fa85:	or     al,0xc4
  41fa87:	neg    BYTE PTR [edi]
  41fa89:	test   al,0x66
  41fa8b:	xchg   DWORD PTR [ecx],eax
  41fa8d:	fs push 0x34
  41fa90:	or     al,0x97
  41fa92:	leave  
  41fa93:	xor    ch,dl
  41fa95:	(bad)
  41fa98:	jmp    0x41fa8e
  41fa9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa9b:	pop    ebx
  41fa9c:	fcomi  st,st(6)
  41fa9e:	push   esi
  41fa9f:	sahf   
  41faa0:	adc    BYTE PTR [ebx+esi*8+0x75],bl
  41faa4:	jmp    FWORD PTR [edx-0x1d]
  41faa7:	test   al,0x2d
  41faa9:	jp     0x41fb0e
  41faab:	neg    BYTE PTR [ecx+0x3d]
  41faae:	mov    dh,0x91
  41fab0:	je     0x41fad5
  41fab2:	mov    esi,0xbfa24b79
  41fab7:	mov    ds:0x9b8a8705,eax
  41fabc:	and    ah,ch
  41fabe:	gs popw es
  41fac1:	ins    BYTE PTR es:[edi],dx
  41fac2:	nop
  41fac3:	pop    ebx
  41fac4:	jmp    0x6542:0x745553ca
  41facb:	addr16 loop 0x41fb43
  41face:	daa    
  41facf:	push   0xffffffb6
  41fad1:	mov    ecx,0x35e02fdd
  41fad6:	dec    esp
  41fad7:	(bad)  
  41fad8:	dec    ebx
  41fad9:	cld    
  41fada:	mov    ?,WORD PTR [eax+0xead00f8]
  41fae0:	(bad)  
  41fae1:	xchg   ebx,eax
  41fae2:	pop    ecx
  41fae3:	mov    edx,DWORD PTR [edx+0x4]
  41fae6:	in     eax,0xc5
  41fae8:	mov    bh,0x70
  41faea:	ret    
  41faeb:	cmp    eax,0x982194cf
  41faf0:	mov    eax,ds:0x7a08b7ee
  41faf5:	sub    BYTE PTR [edx+0xcd72204],ch
  41fafb:	mov    bh,0x83
  41fafd:	scas   eax,DWORD PTR es:[edi]
  41fafe:	push   edx
  41faff:	and    eax,0x9527fed4
  41fb04:	imul   ebx,DWORD PTR [edx],0x20
  41fb07:	cmp    al,0xba
  41fb09:	ins    DWORD PTR es:[edi],dx
  41fb0a:	sub    ecx,DWORD PTR [edx+esi*2+0x25]
  41fb0e:	jmp    0x41faf8
  41fb10:	xchg   esi,eax
  41fb11:	fcmovbe st,st(1)
  41fb13:	(bad)  
  41fb14:	push   ss
  41fb15:	(bad)  
  41fb17:	jmp    FWORD PTR [esi+0x61]
  41fb1a:	sub    ebx,DWORD PTR [esp+ecx*4-0x4a]
  41fb1e:	cmp    eax,DWORD PTR [ebx-0x535a9e42]
  41fb24:	enter  0x387,0xc3
  41fb28:	pop    esi
  41fb29:	(bad)  [ebx+eiz*4+0x3a]
  41fb2d:	push   ds
  41fb2e:	xchg   edi,eax
  41fb2f:	lahf   
  41fb30:	inc    ebp
  41fb31:	imul   ebx,DWORD PTR [ebp+0x34a0baeb],0xffffffe9
  41fb38:	jge    0x41fb54
  41fb3a:	fdiv   st,st(6)
  41fb3c:	out    0x85,eax
  41fb3e:	out    dx,eax
  41fb3f:	jbe    0x41fb6e
  41fb41:	and    dl,BYTE PTR [esp+ecx*2-0x14ef7739]
  41fb48:	add    al,0x6
  41fb4a:	ss push edi
  41fb4c:	cmp    dl,BYTE PTR [ecx]
  41fb4e:	xor    al,0x1d
  41fb50:	in     al,0xdc
  41fb52:	mov    ebx,0x7ca79062
  41fb57:	adc    BYTE PTR [ebp+0x662c9600],bh
  41fb5d:	das    
  41fb5e:	ror    DWORD PTR [ebx-0x2],0x3a
  41fb62:	ror    DWORD PTR [ebp-0x4dc2d829],1
  41fb68:	mov    cl,dl
  41fb6a:	imul   ecx,DWORD PTR [esi-0xa],0x557df776
  41fb71:	inc    esi
  41fb72:	inc    edi
  41fb73:	ror    BYTE PTR [eax-0x3a07912],1
  41fb79:	js     0x41fafe
  41fb7b:	sub    bl,dh
  41fb7d:	test   DWORD PTR ds:0x1eb756d8,ecx
  41fb83:	(bad)  
  41fb84:	adc    edi,DWORD PTR [eax+0x3c]
  41fb87:	aad    0x9e
  41fb89:	leave  
  41fb8a:	dec    esp
  41fb8b:	out    dx,eax
  41fb8c:	shl    BYTE PTR [ebp+ebx*2-0x60399b0b],1
  41fb93:	mov    edx,0xa6d9e411
  41fb98:	push   ds
  41fb99:	pop    edi
  41fb9a:	xchg   ebx,eax
  41fb9b:	push   ebp
  41fb9c:	repz lahf 
  41fb9e:	xlat   BYTE PTR ds:[ebx]
  41fb9f:	fldenv [esi+0x5b850dc1]
  41fba5:	push   ebx
  41fba6:	dec    esp
  41fba7:	jge    0x41fb4b
  41fba9:	repz (bad) 
  41fbab:	jne    0x41fbaf
  41fbad:	inc    eax
  41fbae:	and    ecx,DWORD PTR [ecx]
  41fbb0:	inc    edx
  41fbb1:	and    BYTE PTR [edi+edx*1],dh
  41fbb4:	out    dx,eax
  41fbb5:	sub    eax,0xb1e873c9
  41fbba:	xor    bl,BYTE PTR [eax]
  41fbbc:	sbb    BYTE PTR [ecx],0x78
  41fbbf:	pushf  
  41fbc0:	dec    ebx
  41fbc1:	adc    al,0x7a
  41fbc3:	add    al,0x61
  41fbc5:	adc    dl,0x53
  41fbc8:	outs   dx,BYTE PTR ds:[esi]
  41fbc9:	inc    esi
  41fbca:	push   cs
  41fbcb:	imul   eax,DWORD PTR [bx+si-0x6ccc],0xffffff82
  41fbd1:	cmp    al,0x3a
  41fbd3:	fwait
  41fbd4:	sti    
  41fbd5:	add    DWORD PTR [edi*1-0x3b3bf5f4],eax
  41fbdc:	xor    ebx,DWORD PTR [esi]
  41fbde:	add    esp,DWORD PTR [ebp+edi*1-0x72f0eb7]
  41fbe5:	cmc    
  41fbe6:	into   
  41fbe7:	dec    ebx
  41fbe8:	inc    ebx
  41fbe9:	pop    ss
  41fbea:	jle    0x41fbc2
  41fbec:	popf   
  41fbed:	jecxz  0x41fbfa
  41fbef:	mov    edi,cr1
  41fbf2:	mov    eax,ds:0x2f7b8df2
  41fbf7:	cmp    dl,BYTE PTR [ebp-0x2d4b40d1]
  41fbfd:	jnp    0x41fc03
  41fbff:	(bad)  [ebx+0x3c00910d]
  41fc05:	fild   QWORD PTR [eax+0x648887aa]
  41fc0b:	sbb    DWORD PTR [esi],ecx
  41fc0d:	cwde   
  41fc0e:	jle    0x41fba9
  41fc10:	add    al,0x57
  41fc12:	in     eax,dx
  41fc13:	jge    0x41fc82
  41fc15:	cli    
  41fc16:	std    
  41fc17:	enter  0x9331,0xd8
  41fc1b:	cdq    
  41fc1c:	or     BYTE PTR [edx+0x36],cl
  41fc1f:	iret   
  41fc20:	shl    DWORD PTR [esi],1
  41fc22:	xor    eax,esi
  41fc24:	outs   dx,DWORD PTR ds:[esi]
  41fc25:	or     bl,BYTE PTR [ecx-0x5d1ee96a]
  41fc2b:	scas   al,BYTE PTR es:[edi]
  41fc2c:	arpl   WORD PTR [edx+0x6b],bp
  41fc2f:	dec    esp
  41fc30:	sbb    BYTE PTR [esi+0x1a],al
  41fc33:	cmp    DWORD PTR cs:[edi+eax*4],eax
  41fc37:	xlat   BYTE PTR ds:[ebx]
  41fc38:	(bad)  
  41fc39:	fld    DWORD PTR [esi]
  41fc3b:	add    ch,BYTE PTR [eax-0x46]
  41fc3e:	push   ds
  41fc3f:	fmul   DWORD PTR [eax+0x1]
  41fc42:	(bad)  
  41fc43:	test   al,0xec
  41fc45:	push   edx
  41fc46:	mov    eax,ds:0x86961da9
  41fc4b:	repnz pop ebx
  41fc4d:	mov    bh,0x64
  41fc4f:	xor    edi,DWORD PTR [ecx+0x7662f76f]
  41fc55:	test   al,0xc7
  41fc57:	pop    ds
  41fc58:	pop    ecx
  41fc59:	and    BYTE PTR es:[ebx],ch
  41fc5c:	movntps XMMWORD PTR ds:0x8382011c,xmm0
  41fc63:	call   0xf51f45b9
  41fc68:	jbe    0x41fc48
  41fc6a:	das    
  41fc6b:	jo     0x41fc66
  41fc6d:	shr    DWORD PTR [edi-0x38bbeaf8],0x7d
  41fc74:	dec    esi
  41fc75:	adc    al,0x84
  41fc77:	ins    BYTE PTR es:[edi],dx
  41fc78:	stos   DWORD PTR es:[edi],eax
  41fc79:	jmp    0x41fc31
  41fc7b:	pop    esi
  41fc7c:	clc    
  41fc7d:	rcr    DWORD PTR [ebx-0x5a13b847],cl
  41fc83:	gs int 0xfb
  41fc86:	xchg   ebp,eax
  41fc87:	jne    0x41fc7e
  41fc89:	mov    bh,0x8a
  41fc8b:	add    eax,0xa19a6004
  41fc90:	and    DWORD PTR [ecx],0x4d
  41fc93:	mov    al,BYTE PTR [ecx+esi*2+0x4d]
  41fc97:	push   esp
  41fc98:	pop    edi
  41fc99:	lahf   
  41fc9a:	add    ecx,eax
  41fc9c:	adc    ebx,DWORD PTR [edi+0x5f50663c]
  41fca2:	repnz test eax,0x653f1a18
  41fca8:	xchg   ecx,eax
  41fca9:	fisubr DWORD PTR [ebp-0x26b4afcd]
  41fcaf:	xchg   edx,eax
  41fcb0:	lahf   
  41fcb1:	pop    ecx
  41fcb2:	mov    esp,ecx
  41fcb4:	push   ss
  41fcb5:	mov    edi,0xdf255548
  41fcba:	repnz or DWORD PTR [ecx],0xffffff9d
  41fcbe:	jecxz  0x41fcfb
  41fcc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcc1:	and    DWORD PTR [ecx+0x5489764b],ebp
  41fcc7:	icebp  
  41fcc8:	xchg   DWORD PTR [edx+eax*1],esp
  41fccb:	repnz int3 
  41fccd:	mov    ds:0x8984b9cb,al
  41fcd2:	out    0xa1,eax
  41fcd4:	mov    dh,0xe8
  41fcd6:	ret    0xeb59
  41fcd9:	dec    edi
  41fcda:	pushf  
  41fcdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcdc:	sti    
  41fcdd:	xchg   edx,eax
  41fcde:	and    BYTE PTR [edi],al
  41fce0:	adc    BYTE PTR [ecx*4+0x5c1f7997],0x4a
  41fce8:	shr    DWORD PTR [ebx],1
  41fcea:	adc    ch,BYTE PTR [ebp+0x6b602d75]
  41fcf0:	pop    ss
  41fcf1:	push   0x12
  41fcf3:	and    al,0xb2
  41fcf5:	adc    DWORD PTR [esi-0x76],ecx
  41fcf8:	test   DWORD PTR [ebp-0x45],esi
  41fcfb:	or     cl,BYTE PTR [ecx+edi*2+0x495adbcc]
  41fd02:	dec    eax
  41fd03:	xchg   ecx,ebx
  41fd05:	xor    esi,esp
  41fd07:	dec    ebx
  41fd08:	xor    edx,DWORD PTR [ebx]
  41fd0a:	dec    ebp
  41fd0b:	and    DWORD PTR [eax],ebx
  41fd0d:	bound  ebp,QWORD PTR [ebx+0x661164ce]
  41fd13:	outs   dx,BYTE PTR ds:[esi]
  41fd14:	or     al,al
  41fd16:	jne    0x41fcba
  41fd18:	push   ss
  41fd19:	cdq    
  41fd1a:	mov    eax,0x54094790
  41fd1f:	inc    esi
  41fd20:	sub    ebp,DWORD PTR ds:0xdc56c048
  41fd26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd27:	cmp    DWORD PTR ss:[ebp+edi*1-0x28e8e8e1],eax
  41fd2f:	jb     0x41fd9b
  41fd31:	sbb    eax,DWORD PTR [ebp+0x5ec16265]
  41fd37:	(bad)  
  41fd38:	fisub  DWORD PTR [ecx]
  41fd3a:	pop    ebp
  41fd3b:	(bad)  
  41fd3d:	mov    ecx,0x8c7eeeef
  41fd42:	jo     0x41fd4b
  41fd44:	jb     0x41fd46
  41fd46:	pop    esi
  41fd47:	inc    esp
  41fd48:	and    BYTE PTR [ebp+0x79],dl
  41fd4b:	mul    bl
  41fd4d:	add    esp,eax
  41fd4f:	repz hlt 
  41fd51:	sti    
  41fd52:	pop    edi
  41fd53:	repnz pop edx
  41fd55:	xchg   ecx,eax
  41fd56:	dec    eax
  41fd57:	inc    esi
  41fd58:	int    0xa4
  41fd5a:	or     dl,BYTE PTR [ecx+0x6d]
  41fd5d:	jl     0x41fdc6
  41fd5f:	xor    dl,0xae
  41fd62:	jno    0x41fd39
  41fd64:	xchg   ebp,eax
  41fd65:	xor    al,BYTE PTR [edx]
  41fd67:	imul   ebp,DWORD PTR [esp+eax*4+0x4c5b16c9],0x71be84bb
  41fd72:	adc    DWORD PTR [ebp-0x69],esp
  41fd75:	cmp    ch,BYTE PTR [ecx+0x2a02be53]
  41fd7b:	cmp    edx,DWORD PTR [ecx]
  41fd7d:	imul   edi,esp,0xffffffd9
  41fd80:	sti    
  41fd81:	fild   WORD PTR [ebp+0x31]
  41fd84:	lods   al,BYTE PTR ds:[esi]
  41fd85:	mov    al,dh
  41fd87:	mov    dh,0xc1
  41fd89:	jmp    0x4fa5:0xfb631963
  41fd90:	shl    DWORD PTR [ecx-0x35],0x9d
  41fd94:	outs   dx,DWORD PTR ds:[esi]
  41fd95:	jnp    0x41fd1a
  41fd97:	retf   0xd162
  41fd9a:	sub    ebx,DWORD PTR [ecx]
  41fd9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd9d:	cwde   
  41fd9e:	scas   al,BYTE PTR es:[edi]
  41fd9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fda0:	icebp  
  41fda1:	imul   esp,DWORD PTR [esi+0x13523c72],0xf60753eb
  41fdab:	test   BYTE PTR [esp+eiz*4+0x7f],bh
  41fdaf:	pop    esp
  41fdb0:	add    eax,0x16b8339c
  41fdb5:	mov    ebp,0xf6c50c8f
  41fdba:	push   ebp
  41fdbb:	and    BYTE PTR ds:0xee61a80a,bl
  41fdc1:	xor    bh,BYTE PTR [eax+ebx*2]
  41fdc4:	add    BYTE PTR [ebx-0x38d41903],ah
  41fdca:	xchg   ebx,eax
  41fdcb:	xor    eax,0x83939b92
  41fdd0:	push   eax
  41fdd1:	stc    
  41fdd2:	inc    esp
  41fdd3:	test   BYTE PTR [ebp+0x5e],ah
  41fdd6:	fisubr DWORD PTR [esp+ecx*2-0x11]
  41fdda:	xchg   ebp,eax
  41fddb:	xchg   si,ax
  41fddd:	add    eax,0xeac92201
  41fde2:	dec    ebp
  41fde3:	loop   0x41fe55
  41fde5:	mov    ds,edx
  41fde7:	xor    DWORD PTR [esp+eiz*8],ebp
  41fdea:	xchg   esi,eax
  41fdeb:	bswap  edx
  41fded:	sbb    edi,DWORD PTR [edx+0x3677418a]
  41fdf3:	imul   eax,DWORD PTR [ebx],0xffffff9b
  41fdf6:	fistp  QWORD PTR [esi]
  41fdf8:	and    dh,BYTE PTR [ebx]
  41fdfa:	test   eax,esp
  41fdfc:	leave  
  41fdfd:	and    ch,BYTE PTR [ecx]
  41fdff:	jmp    0x325e:0x6e6d54e6
  41fe06:	jmp    0xa6c0:0x4e8779b
  41fe0d:	imul   edi,esp,0xffffffd6
  41fe10:	sti    
  41fe11:	mov    ebx,edx
  41fe13:	cmp    DWORD PTR [ebx+0x29eb584a],eax
  41fe19:	inc    ebx
  41fe1a:	mov    ds:0x1ede95f7,al
  41fe1f:	stc    
  41fe20:	inc    eax
  41fe21:	repz aad 0xee
  41fe24:	nop
  41fe25:	mov    dl,0xbb
  41fe27:	das    
  41fe28:	adc    BYTE PTR [ebx+0x33],0xac
  41fe2c:	pop    edx
  41fe2d:	loope  0x41fdd9
  41fe2f:	or     al,bh
  41fe31:	push   cs
  41fe32:	sbb    esp,DWORD PTR [ebp+0x8]
  41fe35:	sbb    ebx,DWORD PTR [esi+0x20]
  41fe38:	sub    eax,0x8a4c79a9
  41fe3d:	mov    edx,0x843c4843
  41fe42:	test   BYTE PTR [eax-0x4481ccc],bl
  41fe48:	in     eax,dx
  41fe49:	push   ds
  41fe4a:	int    0x9d
  41fe4c:	mov    dl,0xe3
  41fe4e:	es add esp,edx
  41fe51:	ss mov dh,0x77
  41fe54:	test   DWORD PTR [esi+0x50],edx
  41fe57:	and    eax,0x59b17bf
  41fe5c:	clc    
  41fe5d:	cmp    ecx,DWORD PTR [edx+ecx*8]
  41fe60:	push   edx
  41fe61:	outs   dx,DWORD PTR ds:[esi]
  41fe62:	lea    ecx,[esi]
  41fe64:	sbb    BYTE PTR [edi+0x51],bl
  41fe67:	outs   dx,DWORD PTR ds:[esi]
  41fe68:	jecxz  0x41feb9
  41fe6a:	push   cs
  41fe6b:	in     al,0x20
  41fe6d:	dec    ebx
  41fe6e:	cmp    al,0xba
  41fe70:	jnp    0x41febb
  41fe72:	(bad)  
  41fe73:	shl    ecx,0x5a
  41fe76:	xchg   esp,eax
  41fe77:	enter  0x9557,0x51
  41fe7b:	xchg   ebx,eax
  41fe7c:	fidiv  DWORD PTR [edx-0x7d]
  41fe7f:	pop    ds
  41fe80:	pushf  
  41fe81:	out    dx,eax
  41fe82:	dec    esi
  41fe83:	inc    ebp
  41fe84:	and    al,0x47
  41fe86:	push   ss
  41fe87:	mov    edi,0xf6ed167b
  41fe8c:	fsub   DWORD PTR [eax]
  41fe8e:	es test ecx,0x2a2693cf
  41fe95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe96:	or     eax,0xddb1333c
  41fe9b:	dec    ecx
  41fe9c:	push   ss
  41fe9d:	dec    edi
  41fe9e:	mov    eax,ds:0x1656bef2
  41fea3:	mov    bl,0x8d
  41fea5:	pop    eax
  41fea6:	or     DWORD PTR [ebx-0x7e],0x7ace7ece
  41fead:	inc    edx
  41feae:	out    dx,al
  41feaf:	or     bh,cl
  41feb1:	cmp    BYTE PTR [edx+0x7d],ch
  41feb4:	inc    ebp
  41feb5:	arpl   cx,si
  41feb7:	pop    ebx
  41feb8:	gs into 
  41feba:	call   0x94b9:0xaf014dc7
  41fec1:	hlt    
  41fec2:	mov    BYTE PTR [ebx],dl
  41fec4:	(bad)  
  41fec5:	(bad)  
  41fec6:	jb     0x41fe53
  41fec8:	jp     0x41fef5
  41feca:	add    eax,0x67e03ee3
  41fecf:	jns    0x41feeb
  41fed1:	jae    0x41feeb
  41fed3:	or     DWORD PTR [eax-0x7c],ecx
  41fed6:	or     ebp,DWORD PTR [esi+0x64f8c472]
  41fedc:	outs   dx,BYTE PTR ds:[esi]
  41fedd:	aas    
  41fede:	rcl    BYTE PTR [ebx-0x292e1914],cl
  41fee4:	out    dx,eax
  41fee5:	mov    WORD PTR [edi],ds
  41fee7:	dec    esi
  41fee8:	inc    edx
  41fee9:	(bad)  
  41feeb:	xor    eax,DWORD PTR [edi]
  41feed:	sbb    al,0x8c
  41feef:	push   esp
  41fef0:	inc    ebx
  41fef1:	jmp    0xffbc:0xdc0fabf
  41fef8:	inc    edi
  41fef9:	cmp    eax,0x61038923
  41fefe:	push   eax
  41feff:	cmp    eax,0x7fa58c7c
  41ff04:	pop    esi
  41ff05:	sti    
  41ff06:	fsin   
  41ff08:	cmc    
  41ff09:	adc    DWORD PTR [ebp+edx*1+0x37],ebx
  41ff0d:	int    0x25
  41ff0f:	in     al,dx
  41ff10:	cmp    DWORD PTR [ecx-0x72],esi
  41ff13:	daa    
  41ff14:	and    edx,ecx
  41ff16:	mov    BYTE PTR [edi+0x3997030a],ch
  41ff1c:	push   esp
  41ff1d:	cmp    eax,0x643adb1f
  41ff22:	in     eax,dx
  41ff23:	adc    al,0xe4
  41ff25:	or     bh,BYTE PTR ds:0xd0a736b
  41ff2b:	mov    bl,0xaa
  41ff2d:	fwait
  41ff2e:	(bad)  
  41ff2f:	mov    bl,0xea
  41ff31:	(bad)  
  41ff32:	sti    
  41ff33:	daa    
  41ff34:	pop    edx
  41ff35:	xor    DWORD PTR [edi-0x11d4c143],ebp
  41ff3b:	ins    BYTE PTR es:[edi],dx
  41ff3c:	aam    0x66
  41ff3e:	(bad)  
  41ff3f:	je     0x41ffb5
  41ff41:	mov    eax,ds:0x441dd20f
  41ff46:	lock test BYTE PTR [eax-0x70c3134d],ah
  41ff4d:	data16 rcl BYTE PTR [edx-0x2c61a081],0xa
  41ff55:	je     0x41ff79
  41ff57:	jg     0x41ffc9
  41ff59:	mov    al,0xdd
  41ff5b:	sbb    edi,esp
  41ff5d:	test   eax,0x1ae628a4
  41ff62:	and    bl,bh
  41ff64:	js     0x41ff23
  41ff66:	fnstcw WORD PTR [ebx]
  41ff68:	mov    edi,edx
  41ff6a:	aaa    
  41ff6b:	sbb    esi,DWORD PTR [ebx+0x27c0d4e5]
  41ff71:	mov    bh,0x77
  41ff73:	mov    ch,0x28
  41ff75:	xor    BYTE PTR [ebx+0x318101bd],dh
  41ff7b:	adc    BYTE PTR [eax-0x7],bh
  41ff7e:	les    edi,FWORD PTR [eax+0x5f22cd92]
  41ff84:	lods   al,BYTE PTR ds:[esi]
  41ff85:	sub    DWORD PTR [edi],eax
  41ff87:	xchg   DWORD PTR [esi],esi
  41ff89:	jmp    0x41ff0c
  41ff8b:	(bad)  
  41ff8c:	jmp    0x41ffd4
  41ff8e:	call   0x41b0:0xcda38669
  41ff95:	clc    
  41ff96:	stos   DWORD PTR es:[edi],eax
  41ff97:	cmc    
  41ff98:	cmp    cl,BYTE PTR [eax-0x77]
  41ff9b:	cwde   
  41ff9c:	pop    ebp
  41ff9d:	jo     0x41ffd1
  41ff9f:	dec    ecx
  41ffa0:	and    esp,DWORD PTR [edi+esi*2-0x799784c2]
  41ffa7:	jp     0x41ff43
  41ffa9:	leave  
  41ffaa:	mov    ch,BYTE PTR [ebx]
  41ffac:	ret    0xc285
  41ffaf:	cmp    eax,esp
  41ffb1:	iret   
  41ffb2:	in     eax,0x72
  41ffb4:	push   ss
  41ffb5:	rcr    BYTE PTR [edx+0x60103cc1],cl
  41ffbb:	mov    ebx,0xc43a8e4e
  41ffc0:	pushf  
  41ffc1:	test   BYTE PTR [ebx-0x656576b1],bh
  41ffc7:	mov    al,ds:0xb6a6ce33
  41ffcc:	ins    BYTE PTR es:[edi],dx
  41ffcd:	scas   eax,DWORD PTR es:[edi]
  41ffce:	std    
  41ffcf:	icebp  
  41ffd0:	adc    edi,DWORD PTR [edi+0x5d]
  41ffd3:	pop    esp
  41ffd4:	cmp    BYTE PTR cs:[edx+0xea23b3],0xe6
  41ffdc:	pop    ss
  41ffdd:	pop    esp
  41ffde:	test   eax,0xbe72f596
  41ffe3:	lock (bad) 
  41ffe5:	mov    edi,0x3f04c4c6
  41ffea:	ret    
  41ffeb:	cld    
  41ffec:	mov    ebx,0x6a66c631
  41fff1:	ins    DWORD PTR es:[edi],dx
  41fff2:	scas   eax,DWORD PTR es:[edi]
  41fff3:	mov    esi,0x73ac73ac
  41fff8:	pop    ebx
  41fff9:	adc    BYTE PTR [ebx+0x6193dcd8],ah
  41ffff:	cmp    bh,BYTE PTR [eax]
  420001:	in     eax,0xc0
  420003:	ret    
  420004:	and    eax,0xdcc80c55
  420009:	scas   al,BYTE PTR es:[edi]
  42000a:	sar    BYTE PTR [ebp-0x2e],0x53
  42000e:	ds or  BYTE PTR gs:[ebp+0x17],dh
  420013:	scas   al,BYTE PTR es:[edi]
  420014:	lods   al,BYTE PTR ds:[esi]
  420015:	cmp    ebx,DWORD PTR [edx]
  420017:	int    0xcc
  420019:	lods   al,BYTE PTR ds:[esi]
  42001a:	fdiv   DWORD PTR [ebx+0x0]
  42001d:	pop    edi
  42001e:	mov    esi,DWORD PTR [ebx+0x3754e381]
  420024:	push   0x76d7161
  420029:	push   cs
  42002a:	dec    esi
  42002b:	out    0x74,al
  42002d:	jp     0x41ffeb
  42002f:	into   
  420030:	psrld  mm5,QWORD PTR gs:[eax]
  420034:	mov    eax,ds:0x8c0aa644
  420039:	icebp  
  42003a:	fisubr WORD PTR [edi+0x65]
  42003d:	popf   
  42003e:	mov    eax,0xf889561a
  420043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420044:	add    edx,DWORD PTR [eax-0x28]
  420047:	(bad)  
  420048:	push   0x18449b2f
  42004d:	and    BYTE PTR [eax],ah
  42004f:	dec    esi
  420050:	push   esp
  420051:	icebp  
  420052:	add    eax,0xf0ec7851
  420057:	lods   al,BYTE PTR ds:[esi]
  420058:	jp     0x4200aa
  42005a:	stc    
  42005b:	and    eax,0x44f65e5e
  420060:	adc    eax,DWORD PTR [si+0x1e39]
  420065:	dec    ebx
  420066:	rcr    BYTE PTR [ecx-0x3f],cl
  420069:	mov    gs,WORD PTR [ecx-0x5b]
  42006c:	adc    edi,ebx
  42006e:	adc    ah,al
  420070:	adc    ebx,DWORD PTR [edx]
  420072:	loopne 0x420063
  420074:	sub    DWORD PTR [esi-0x80],edi
  420077:	shl    DWORD PTR [eax+esi*8-0x4e],1
  42007b:	in     eax,dx
  42007c:	mov    bh,0x0
  42007e:	jb     0x42000c
  420080:	inc    eax
  420081:	loope  0x4200ca
  420083:	into   
  420084:	dec    eax
  420085:	xchg   eax,edx
  420087:	jno    0x42009b
  420089:	retf   0x1bb4
  42008c:	push   esi
  42008d:	(bad)  
  42008e:	int3   
  42008f:	cdq    
  420090:	mov    DWORD PTR [edi+0x36a986e3],esi
  420096:	cmp    WORD PTR [edx+0x22],cx
  42009a:	pop    ds
  42009b:	xchg   esi,eax
  42009c:	inc    edi
  42009d:	mov    ebp,?
  42009f:	leave  
  4200a0:	and    esp,esi
  4200a2:	or     DWORD PTR [esp+eiz*4],esi
  4200a5:	loopne 0x420081
  4200a7:	fnstenv [ebx+0x34]
  4200aa:	imul   ebp,DWORD PTR [ebp+0x73307521],0x80e6671b
  4200b4:	pusha  
  4200b5:	mov    edx,0x662d96c3
  4200ba:	pop    ds
  4200bb:	jmp    0x4200c6
  4200bd:	(bad)  
  4200be:	mov    esp,0x2daf9083
  4200c3:	xor    ebp,esp
  4200c5:	into   
  4200c6:	cmp    ah,0xe3
  4200c9:	and    eax,0x7fe0c42d
  4200ce:	clc    
  4200cf:	aas    
  4200d0:	fidivr DWORD PTR [eax+esi*4-0x3e]
  4200d4:	leave  
  4200d5:	mov    edi,0x4c4c620a
  4200da:	leave  
  4200db:	sbb    al,0x89
  4200dd:	sbb    cl,ch
  4200df:	mov    dl,0x83
  4200e1:	stc    
  4200e2:	adc    BYTE PTR [edx+esi*4+0x4126c454],bh
  4200e9:	sbb    BYTE PTR [ebp+0x4f],al
  4200ec:	push   DWORD PTR [ebp+ebx*8-0x61]
  4200f0:	mov    ds:0x978ad056,eax
  4200f5:	mov    ds:0x3af1a24f,eax
  4200fa:	or     eax,0x9d3cead5
  4200ff:	sub    DWORD PTR [ebx-0x72],0x1115f335
  420106:	jmp    0x6aa8:0x61cf9a4b
  42010d:	sub    al,0xcb
  42010f:	sbb    bl,0xc5
  420112:	mov    esi,0x187c1e7d
  420117:	dec    ebx
  420118:	into   
  420119:	cmp    DWORD PTR [ebx+0x1b],eax
  42011c:	aad    0x7a
  42011e:	inc    ecx
  42011f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420120:	addr16 pusha 
  420122:	push   ebp
  420123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420124:	mov    cl,0xba
  420126:	xchg   DWORD PTR [ecx],edi
  420128:	arpl   WORD PTR [ecx-0x7d],sp
  42012b:	add    eax,0xaeff4bf9
  420130:	push   eax
  420131:	mov    bh,0xfa
  420133:	xor    eax,0x1938c9cd
  420138:	arpl   WORD PTR [ebx-0x67],cx
  42013b:	pop    esi
  42013c:	mov    ds:0xd4e7048b,al
  420141:	dec    ecx
  420142:	(bad)  
  420143:	mov    ebp,0xce2e1d63
  420148:	add    eax,0x416c5bdd
  42014d:	cmp    BYTE PTR [edx],0x1f
  420150:	repz push 0x56
  420153:	or     DWORD PTR [eax-0x20ce70aa],ecx
  420159:	lock cmp DWORD PTR [edx],esi
  42015c:	adc    ebp,DWORD PTR [eax]
  42015e:	mov    dh,BYTE PTR [edi-0x6ad927ba]
  420164:	dec    ebp
  420165:	call   FWORD PTR [esi+0x39cbaa12]
  42016b:	cwde   
  42016c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42016d:	pop    eax
  42016e:	fimul  DWORD PTR [edx+0x7a]
  420171:	cdq    
  420172:	gs je  0x4200ff
  420175:	mov    ah,0x9d
  420177:	mov    ebp,0xf966e5c2
  42017c:	jbe    0x42019e
  42017e:	in     al,dx
  42017f:	xchg   ebx,eax
  420180:	hlt    
  420181:	or     ebp,edi
  420183:	and    eax,0xba9bdb63
  420188:	out    dx,al
  420189:	pextrw edi,mm4,0xf5
  42018d:	not    BYTE PTR [eax+0x79]
  420190:	push   0xfffffffa
  420192:	pop    ss
  420193:	add    al,0x2d
  420195:	xchg   ebp,eax
  420196:	jae    0x4201f0
  420198:	fwait
  420199:	push   esi
  42019a:	dec    ecx
  42019b:	push   ebx
  42019c:	cmp    DWORD PTR [edi+0x47],edi
  42019f:	in     eax,dx
  4201a0:	xlat   BYTE PTR ds:[ebx]
  4201a1:	sti    
  4201a2:	and    eax,0x2a53fb75
  4201a7:	retf   0xd5c2
  4201aa:	push   ebx
  4201ab:	jp     0x420169
  4201ad:	push   0x17
  4201af:	jbe    0x4201fa
  4201b1:	test   eax,0x49ff5f43
  4201b6:	ret    
  4201b7:	bound  ebx,QWORD PTR [ebx+edx*8]
  4201ba:	(bad)  
  4201bb:	dec    esp
  4201bc:	push   edi
  4201bd:	into   
  4201be:	scas   eax,DWORD PTR es:[edi]
  4201bf:	dec    eax
  4201c0:	sub    esp,DWORD PTR [ecx+0x4413311f]
  4201c6:	scas   eax,DWORD PTR es:[edi]
  4201c7:	mov    dl,0x33
  4201c9:	mov    bh,BYTE PTR [edi]
  4201cb:	cmp    ch,bh
  4201cd:	cmp    esp,DWORD PTR [esi+eax*4+0x7]
  4201d1:	inc    ebp
  4201d2:	xor    dl,BYTE PTR [edx]
  4201d4:	and    eax,0xf0963ee1
  4201d9:	in     al,dx
  4201da:	add    DWORD PTR [ebp+0xb],esp
  4201dd:	test   BYTE PTR [ebp-0x67f47752],0x67
  4201e4:	sub    DWORD PTR [esi-0x4e],esp
  4201e7:	add    eax,esi
  4201e9:	not    BYTE PTR [ebx+0xc]
  4201ec:	inc    edi
  4201ed:	pusha  
  4201ee:	mov    dl,0x1f
  4201f0:	cmp    BYTE PTR [ebx-0x5d8668a2],0x6d
  4201f7:	dec    esp
  4201f8:	daa    
  4201f9:	jp     0x4201ed
  4201fb:	jno    0x420236
  4201fd:	cs xchg ebp,eax
  4201ff:	pushf  
  420200:	add    dl,BYTE PTR [ecx]
  420202:	fdivrp st(1),st
  420204:	xor    bh,BYTE PTR [ebx+0x38db5ea4]
  42020a:	shl    DWORD PTR [esp+esi*8+0x12e7443b],cl
  420211:	cmp    bl,al
  420213:	push   esp
  420214:	ret    0x5da0
  420217:	loope  0x420211
  420219:	push   0xffffffd0
  42021b:	cld    
  42021c:	ja     0x4201d6
  42021e:	xchg   esp,eax
  42021f:	fs into 
  420221:	in     al,0x43
  420223:	mov    esp,0x22246901
  420228:	add    ch,ah
  42022a:	fidivr DWORD PTR [ecx-0x363653c8]
  420230:	aad    0x9f
  420232:	sub    BYTE PTR [ebx],ch
  420234:	pop    esp
  420235:	sti    
  420236:	fidivr DWORD PTR [eax]
  420238:	adc    ecx,esi
  42023a:	iret   
  42023b:	adc    BYTE PTR [edx-0x2a],ah
  42023e:	push   es
  42023f:	adc    edi,edx
  420241:	enter  0x1165,0x93
  420245:	pop    ss
  420246:	inc    ebp
  420247:	inc    eax
  420248:	(bad)  
  42024a:	mov    ebx,0x8d7900fc
  42024f:	pop    esi
  420250:	div    bh
  420252:	jle    0x4202ac
  420254:	loope  0x42023e
  420256:	fnstenv [esi-0x7c]
  420259:	sub    BYTE PTR [edi],ch
  42025b:	pop    esp
  42025c:	ins    BYTE PTR es:[edi],dx
  42025d:	jno    0x420246
  42025f:	lea    esi,[eax+0x2b]
  420262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420263:	or     eax,DWORD PTR [edx+0x51]
  420266:	sbb    DWORD PTR [ebp+eiz*1+0x7e30ca94],ebp
  42026d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42026e:	sbb    DWORD PTR [ecx+ebx*8],edi
  420271:	sbb    al,0xca
  420273:	cmp    cl,BYTE PTR [edi-0x7b]
  420276:	mov    eax,ds:0x705a8dd2
  42027b:	int    0x43
  42027d:	mov    al,0x8d
  42027f:	int3   
  420280:	sbb    DWORD PTR ds:0xbcad3584,ebp
  420286:	cmp    al,0x87
  420288:	sub    DWORD PTR [esi],esi
  42028a:	outs   dx,DWORD PTR ds:[esi]
  42028b:	adc    BYTE PTR [esi+0x4434b36f],0xa4
  420292:	in     al,0xa4
  420294:	jae    0x4202f5
  420296:	sbb    eax,0x21849435
  42029b:	stc    
  42029c:	retf   
  42029d:	loop   0x4202f4
  42029f:	sbb    eax,0xeb7b42bc
  4202a4:	sbb    al,0xc6
  4202a6:	mov    dh,BYTE PTR [eax+0x37]
  4202a9:	push   edx
  4202aa:	inc    ebp
  4202ab:	sub    dh,BYTE PTR [eax]
  4202ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202ae:	(bad)  
  4202af:	rol    ebx,1
  4202b1:	(bad)  
  4202b2:	mov    al,0x33
  4202b4:	pop    eax
  4202b5:	jmp    0x704ed935
  4202ba:	aas    
  4202bb:	test   al,ch
  4202bd:	stos   DWORD PTR es:[edi],eax
  4202be:	mov    ds,WORD PTR [ebx-0x48d775e1]
  4202c4:	pop    edx
  4202c5:	iret   
  4202c6:	loope  0x4202da
  4202c8:	cmc    
  4202c9:	cmp    al,0x2f
  4202cb:	test   eax,0x6e48c930
  4202d0:	pop    es
  4202d1:	mov    edi,0x91d75c3d
  4202d6:	jmp    0x6f443d8a
  4202db:	xchg   esi,eax
  4202dc:	jge    0x4202a2
  4202de:	mov    DWORD PTR ds:0x42a16ce3,0xdc06dc3
  4202e8:	push   0xffffff86
  4202ea:	dec    ecx
  4202eb:	jp     0x42027e
  4202ed:	dec    ebp
  4202ee:	jb     0x42029c
  4202f0:	pop    edi
  4202f1:	jmp    0xa2fb:0xe1e232a1
  4202f8:	mov    al,0x7a
  4202fa:	(bad)
  4202fd:	or     eax,0xc9f7ed4d
  420302:	(bad)  
  420303:	push   0xb3c8f88b
  420308:	or     eax,0x4795977
  42030d:	push   esp
  42030e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42030f:	aas    
  420310:	mov    ds:0xa7553b17,eax
  420315:	dec    esi
  420316:	out    0xa3,eax
  420318:	dec    edi
  420319:	shr    DWORD PTR [edi-0x25],cl
  42031c:	mov    ebp,0xa658dc86
  420321:	mov    ch,BYTE PTR [esi+0x64]
  420324:	clc    
  420325:	mov    dh,ch
  420327:	push   ebx
  420328:	int3   
  420329:	push   esi
  42032a:	ds out 0x55,eax
  42032d:	loop   0x420337
  42032f:	pop    esi
  420330:	jp     0x42030d
  420332:	shl    BYTE PTR ds:0x4b033c86,0x27
  420339:	in     al,dx
  42033a:	into   
  42033b:	mov    edx,0xc3e44bb2
  420340:	scas   al,BYTE PTR es:[edi]
  420341:	aad    0x53
  420343:	pusha  
  420344:	pop    edx
  420345:	mov    dl,0x28
  420347:	mov    dl,0xb5
  42034a:	sbb    al,0xde
  42034c:	(bad)  
  42034e:	mov    ds:0x86e30ac7,al
  420353:	outs   dx,BYTE PTR ds:[esi]
  420354:	jbe    0x4203a5
  420356:	xchg   esi,eax
  420357:	pop    eax
  420358:	cmp    eax,0x591cd894
  42035d:	add    ebx,ebx
  42035f:	or     eax,0x9450147e
  420364:	inc    edx
  420365:	mov    esp,0x687795e2
  42036a:	jp     0x4203b7
  42036c:	xor    ebx,DWORD PTR [esi-0x58]
  42036f:	(bad)  
  420370:	sub    ecx,DWORD PTR [ecx]
  420372:	loope  0x4203c2
  420374:	sbb    al,BYTE PTR [eax-0xe]
  420377:	pop    ds
  420378:	ret    0xfec8
  42037b:	mov    al,ds:0xd92b0eea
  420380:	xor    ch,BYTE PTR [ebx]
  420382:	pusha  
  420383:	cs dec esi
  420385:	lock retf 0xedc1
  420389:	shr    DWORD PTR [ebp+eax*4+0x20],cl
  42038d:	dec    ebx
  42038e:	jmp    0x4203f8
  420390:	jno    0x420329
  420392:	jo     0x420334
  420394:	sub    esp,DWORD PTR [edi+eax*8+0x628f4f83]
  42039b:	std    
  42039c:	retf   0xfafb
  42039f:	xor    edx,DWORD PTR [esi]
  4203a1:	es sbb eax,0x61bfedbe
  4203a7:	sub    edx,DWORD PTR [eax-0x7f]
  4203aa:	jecxz  0x42039a
  4203ac:	cs and al,0x7a
  4203af:	sahf   
  4203b0:	pusha  
  4203b1:	aas    
  4203b2:	mov    ebx,0x78539689
  4203b7:	add    ebx,esp
  4203b9:	shr    cl,1
  4203bb:	std    
  4203bc:	sub    BYTE PTR [ebp-0x13],cl
  4203bf:	out    0xd,eax
  4203c1:	stc    
  4203c2:	cld    
  4203c3:	sti    
  4203c4:	in     eax,0xef
  4203c6:	lods   al,BYTE PTR ds:[esi]
  4203c7:	shr    BYTE PTR [edx-0x29b3b5b],cl
  4203cd:	fsubrp st(1),st
  4203cf:	jo     0x420445
  4203d1:	adc    al,0xc9
  4203d3:	mov    gs,WORD PTR [ecx]
  4203d5:	cs lock or dl,dh
  4203d9:	cs cld 
  4203db:	dec    ebp
  4203dc:	dec    ebx
  4203dd:	imul   BYTE PTR [esi-0x958886c]
  4203e3:	popa   
  4203e4:	pop    ebp
  4203e5:	lock mov bl,0xc9
  4203e8:	call   0x743b:0xb616d33a
  4203ef:	jb     0x420460
  4203f1:	sub    bl,BYTE PTR [ebx-0x5e]
  4203f4:	or     DWORD PTR [ebp+0x6d237bf9],edx
  4203fa:	fisttp WORD PTR es:[ebx+0x16c14497]
  420401:	sub    BYTE PTR [ebp+0x1],ch
  420404:	lea    ecx,[ebx]
  420406:	cdq    
  420407:	jle    0x4203b3
  420409:	xor    DWORD PTR [ebp*1+0x6b348d94],esp
  420410:	xchg   edi,eax
  420411:	retf   
  420412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420413:	fwait
  420414:	cdq    
  420415:	pop    edx
  420416:	fs retf 0x5ec1
  42041a:	test   eax,0x83b679e3
  42041f:	das    
  420420:	loop   0x420450
  420422:	mov    eax,0x6260daa9
  420427:	push   esp
  420428:	mov    bl,0x81
  42042a:	jns    0x4203df
  42042c:	mov    ebx,0x2582c82a
  420431:	mov    bl,0xed
  420433:	in     al,dx
  420434:	stc    
  420435:	inc    edx
  420436:	and    esp,edx
  420438:	jbe    0x4203c2
  42043a:	rcl    BYTE PTR [ecx+0x2c],1
  42043d:	out    dx,eax
  42043e:	jl     0x420410
  420440:	stos   DWORD PTR es:[edi],eax
  420441:	inc    esp
  420442:	lods   al,BYTE PTR ds:[esi]
  420443:	(bad)  
  420445:	idiv   DWORD PTR [edi]
  420447:	inc    esi
  420448:	add    dh,bh
  42044a:	clc    
  42044b:	arpl   bp,bx
  42044d:	jecxz  0x420417
  42044f:	push   ebp
  420450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420451:	retf   
  420452:	add    esi,DWORD PTR ds:0x74953c52
  420458:	adc    DWORD PTR [ebx+0x40],ebp
  42045b:	jo     0x42040e
  42045d:	inc    esp
  42045e:	out    dx,eax
  42045f:	sub    edi,DWORD PTR [edi+eiz*2]
  420462:	loop   0x42043f
  420464:	mov    ecx,0x90218514
  420469:	cli    
  42046a:	or     DWORD PTR [eax-0x5f],0x2d
  42046e:	or     al,0x31
  420470:	push   eax
  420471:	mov    ds:0x31550ca8,al
  420476:	xchg   esi,eax
  420477:	mov    esp,0xf795a253
  42047c:	push   ds
  42047d:	xor    al,0x39
  42047f:	popf   
  420480:	sbb    eax,0x6701bb38
  420485:	adc    ebx,DWORD PTR [edi-0x6d]
  420488:	test   DWORD PTR [eax],0x2c0e9b5f
  42048e:	xor    eax,0xd3f52dea
  420493:	mov    edx,0x9646d25
  420498:	lea    ebp,[ebp-0xe5fb4e7]
  42049e:	ret    0x4d6c
  4204a1:	mov    ds:0x9a87562,eax
  4204a6:	jb     0x420460
  4204a8:	shr    bh,cl
  4204aa:	pop    edx
  4204ab:	leave  
  4204ac:	cmp    al,0x22
  4204ae:	lea    eax,[esp+ebp*2-0x424d691f]
  4204b5:	sub    al,0x94
  4204b7:	xor    BYTE PTR [ecx-0x29],dl
  4204ba:	ror    BYTE PTR [esi],0x4e
  4204bd:	dec    edi
  4204be:	and    dl,ah
  4204c0:	mov    bh,0xa6
  4204c2:	sub    BYTE PTR [edx+0x6730e779],0x8c
  4204c9:	sbb    ch,BYTE PTR [ebp-0x18b14191]
  4204cf:	in     al,0xb0
  4204d1:	outs   dx,BYTE PTR ds:[esi]
  4204d2:	adc    DWORD PTR [ecx-0x4c9be685],edi
  4204d8:	jmp    0x42045f
  4204da:	push   0x8559a19
  4204df:	cli    
  4204e0:	lods   eax,DWORD PTR ds:[esi]
  4204e1:	std    
  4204e2:	popa   
  4204e3:	test   dh,ah
  4204e5:	mov    ah,0x95
  4204e7:	mov    ds:0x9cbcb17d,eax
  4204ec:	out    dx,eax
  4204ed:	stos   DWORD PTR es:[edi],eax
  4204ee:	dec    ebx
  4204ef:	leave  
  4204f0:	xor    dh,BYTE PTR ds:0xeb1e947c
  4204f6:	add    ebx,DWORD PTR [edi]
  4204f8:	leave  
  4204f9:	mov    esi,0x659b4020
  4204fe:	xchg   esp,eax
  4204ff:	xchg   esi,eax
  420500:	jmp    0xd64c:0xdda33896
  420507:	ret    0x85a0
  42050a:	unpckhps xmm7,XMMWORD PTR [ebx]
  42050d:	fst    st(1)
  42050f:	test   BYTE PTR [eax+0x5e311d55],cl
  420515:	jg     0x420566
  420517:	add    eax,0x6266b77e
  42051c:	add    eax,0xbfb21f37
  420521:	jp     0x420543
  420523:	stos   DWORD PTR es:[edi],eax
  420524:	pop    ds
  420525:	inc    eax
  420526:	dec    esp
  420527:	pusha  
  420528:	jecxz  0x420537
  42052a:	or     ch,BYTE PTR [ebp+0x6b686277]
  420530:	sbb    dh,BYTE PTR [esi]
  420532:	aad    0x92
  420534:	lock into 
  420536:	scas   eax,DWORD PTR es:[edi]
  420537:	cli    
  420538:	ins    BYTE PTR es:[edi],dx
  420539:	lock aam 0x46
  42053c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42053d:	fs dec eax
  42053f:	jno    0x4205af
  420541:	mov    cl,0x31
  420543:	dec    eax
  420544:	jbe    0x42050e
  420546:	inc    edi
  420547:	cmp    ecx,ebx
  420549:	inc    esi
  42054a:	xor    eax,0xad8cace
  42054f:	cmp    edi,edi
  420551:	rcl    DWORD PTR [esi+0x7ac1cc16],1
  420557:	push   edx
  420558:	hlt    
  420559:	mov    ch,0x7b
  42055b:	mov    al,0x54
  42055d:	stos   DWORD PTR es:[edi],eax
  42055e:	daa    
  42055f:	es call 0x698b8a48
  420565:	adc    ebp,DWORD PTR [ebp+0x3f50faf4]
  42056b:	jne    0x4205a2
  42056d:	xchg   edi,eax
  42056e:	test   eax,0x36c3b63
  420573:	inc    ebx
  420574:	in     eax,dx
  420575:	dec    edi
  420576:	cmp    eax,eax
  420578:	jl     0x420566
  42057a:	adc    eax,0xcacb790c
  42057f:	test   eax,0x6ea500de
  420584:	jl     0x4205ef
  420586:	popf   
  420587:	ja     0x4205a8
  420589:	dec    esp
  42058a:	adc    eax,0x90208422
  42058f:	cmp    DWORD PTR [ebx+0x68],ecx
  420592:	or     cl,BYTE PTR [edi+0x1ca47a72]
  420598:	xor    al,0xf5
  42059a:	bound  ebx,QWORD PTR [edi+0x57916e47]
  4205a0:	ss sub dh,bl
  4205a3:	in     eax,0xd7
  4205a5:	or     al,0xe8
  4205a7:	and    cl,bl
  4205a9:	xchg   ebp,eax
  4205aa:	cdq    
  4205ab:	pop    ebx
  4205ac:	mov    fs,WORD PTR [eax+ecx*8-0x4e3a164f]
  4205b3:	push   esi
  4205b4:	and    ebx,DWORD PTR [edi+0x28]
  4205b7:	into   
  4205b8:	or     eax,DWORD PTR [edi+0x69]
  4205bb:	dec    ebx
  4205bc:	test   eax,0x7d50f86e
  4205c1:	stos   DWORD PTR es:[edi],eax
  4205c2:	mov    edx,0x4c743da9
  4205c7:	inc    edi
  4205c8:	jge    0x420626
  4205ca:	add    edi,DWORD PTR [ecx]
  4205cc:	pop    edx
  4205cd:	dec    ebp
  4205ce:	mov    dh,BYTE PTR [eax-0x6da9811f]
  4205d4:	(bad)  
  4205d5:	xor    al,BYTE PTR [edi]
  4205d7:	inc    ebp
  4205d8:	inc    ecx
  4205d9:	sahf   
  4205da:	jle    0x4205f1
  4205dc:	sub    eax,0x459fd9f9
  4205e1:	mov    ds:0x57fe3f15,al
  4205e6:	xchg   ecx,eax
  4205e7:	lods   al,BYTE PTR ds:[esi]
  4205e8:	add    al,0x30
  4205ea:	je     0x4205f9
  4205ec:	jae    0x420629
  4205ee:	push   0x78
  4205f0:	rcr    ebx,cl
  4205f2:	gs jnp 0x42058b
  4205f5:	repz not BYTE PTR [eax-0x2]
  4205f9:	outs   dx,DWORD PTR ds:[esi]
  4205fa:	fiadd  WORD PTR [eax+0x1d]
  4205fd:	popf   
  4205fe:	jnp    0x42066e
  420600:	xor    esp,esp
  420602:	mov    esp,DWORD PTR ds:0xc9d773eb
  420608:	or     esi,esi
  42060a:	jnp    0x42059a
  42060c:	iret   
  42060d:	xchg   ebx,esp
  42060f:	imul   ecx,DWORD PTR [ebx-0x40dffffe],0x684c4500
  420619:	mov    WORD PTR [ebp-0x183ed16a],ds
  42061f:	mov    ebp,0x8eeadac3
  420624:	popf   
  420625:	dec    ebx
  420626:	dec    ebx
  420627:	int3   
  420628:	cmp    cl,BYTE PTR ds:0x5706ef27
  42062e:	mov    ds:0x1f293e62,eax
  420633:	and    ebx,ebp
  420635:	addr16 jge 0x420639
  420638:	xchg   esi,eax
  420639:	pop    esi
  42063a:	dec    ebp
  42063b:	loopne 0x420643
  42063d:	shr    DWORD PTR [ecx+eax*1],cl
  420640:	pop    edx
  420641:	jno    0x420664
  420643:	dec    edi
  420644:	rcr    DWORD PTR [ebx+0x16aec56d],1
  42064a:	sahf   
  42064b:	and    al,BYTE PTR [esi+0x52]
  42064e:	xchg   ebp,eax
  42064f:	add    ah,BYTE PTR ds:0xaf139357
  420655:	sti    
  420656:	cmc    
  420657:	out    dx,eax
  420658:	add    DWORD PTR [eax+0x3bd6bc65],esi
  42065e:	das    
  42065f:	sar    BYTE PTR [esi+0x75c5afb9],0x62
  420666:	shl    BYTE PTR [eax],0x75
  420669:	push   cs
  42066a:	unpcklps xmm3,XMMWORD PTR [edx+0x311cc283]
  420671:	pop    ds
  420672:	sbb    dl,BYTE PTR [eax]
  420674:	mov    al,0x38
  420676:	lahf   
  420677:	mov    al,0x2a
  420679:	retf   0x92a7
  42067c:	or     BYTE PTR [edx],bl
  42067e:	inc    ebp
  42067f:	pop    ecx
  420680:	or     eax,0xe764b1ab
  420685:	inc    edx
  420686:	xchg   ebx,eax
  420687:	test   eax,0xa54d9221
  42068c:	fbstp  TBYTE PTR [edx+0x1f]
  42068f:	fadd   DWORD PTR [ecx]
  420691:	call   FWORD PTR [ebx]
  420693:	add    al,0xf
  420695:	lods   al,BYTE PTR ds:[esi]
  420696:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420697:	lock and eax,0x517d84f1
  42069d:	shl    BYTE PTR [ecx-0x46],cl
  4206a0:	out    0xf8,eax
  4206a2:	mov    gs,WORD PTR [edx]
  4206a4:	mov    ds:0x8bf0ff0c,al
  4206a9:	ret    0x29ef
  4206ac:	push   cs
  4206ad:	mov    cs,WORD PTR fs:[edx+0x2489464b]
  4206b4:	cs loope 0x42064e
  4206b7:	adc    eax,0x6cc7fad5
  4206bc:	pusha  
  4206bd:	leave  
  4206be:	(bad)  
  4206bf:	out    dx,eax
  4206c0:	dec    ebp
  4206c1:	aas    
  4206c2:	stc    
  4206c3:	(bad)  
  4206c4:	scas   al,BYTE PTR es:[edi]
  4206c5:	rol    BYTE PTR [ecx+0x2f],0xe5
  4206c9:	add    DWORD PTR [esp+ecx*2+0x40d8c305],esp
  4206d0:	aaa    
  4206d1:	sbb    BYTE PTR [edi+esi*4-0x29e7d82e],al
  4206d8:	push   cs
  4206d9:	or     eax,0xff3727da
  4206de:	loope  0x4206b5
  4206e0:	xor    eax,0x4e91ef67
  4206e5:	popa   
  4206e6:	pusha  
  4206e7:	jno    0x420737
  4206e9:	and    dh,ch
  4206eb:	mov    al,0xdc
  4206ed:	(bad)  
  4206ee:	mov    ds:0xc7017d0e,al
  4206f3:	aam    0x42
  4206f5:	dec    BYTE PTR ds:0x1d2373fb
  4206fb:	jmp    0xc7d3:0xcffa4ab8
  420702:	retf   
  420703:	sbb    ebx,DWORD PTR [ebx+0x62]
  420706:	repnz cmp dh,0xd5
  42070a:	xor    eax,0x89e03c43
  42070f:	sbb    edi,DWORD PTR [ebx]
  420711:	(bad)  
  420713:	es lock sub eax,0x7fc992d6
  42071a:	push   cs
  42071b:	sub    dl,BYTE PTR [ebp-0x74]
  42071e:	sbb    al,0x56
  420720:	nop
  420721:	cmc    
  420722:	xchg   ebx,eax
  420723:	push   es
  420724:	lock aaa 
  420726:	mov    eax,ds:0x7233fe49
  42072b:	sar    DWORD PTR [edx+0x79f66a28],0x40
  420732:	mov    ch,BYTE PTR [ecx-0x8]
  420735:	jmp    0x1176:0xcad3b87e
  42073c:	or     al,0x4e
  42073e:	xchg   ch,dl
  420740:	pop    esp
  420741:	push   es
  420742:	adc    eax,0xfdd71a8c
  420747:	ficomp WORD PTR [esi+0x31]
  42074a:	es push 0x7bba9e96
  420750:	pusha  
  420751:	loop   0x4206dc
  420753:	and    BYTE PTR [edx-0x10d14f3d],ch
  420759:	shl    BYTE PTR [eax+esi*4+0x6b],1
  42075d:	cli    
  42075e:	mov    ebp,0x651e3812
  420763:	mov    al,0x26
  420765:	sub    BYTE PTR [ecx-0x12],al
  420768:	test   eax,0x7ca12024
  42076d:	sti    
  42076e:	std    
  42076f:	and    al,0xaa
  420771:	xchg   esp,eax
  420772:	(bad)  
  420773:	movsx  edx,BYTE PTR [ebx+0x46]
  420777:	dec    esp
  420778:	xchg   ecx,eax
  420779:	or     eax,0xfdddfc1
  42077e:	adc    cl,BYTE PTR [ebx+0x19cdbdd4]
  420784:	sub    edx,DWORD PTR [esi+0x69802c3a]
  42078a:	or     DWORD PTR [ebx-0x75],ebx
  42078d:	xchg   ebx,eax
  42078e:	add    ecx,ecx
  420790:	imul   esi,edi,0x76
  420793:	gs inc ebp
  420795:	rcl    DWORD PTR [esi-0x6e],0xbc
  420799:	mov    ch,0x6e
  42079b:	lods   eax,DWORD PTR ds:[esi]
  42079c:	mov    al,0x6b
  42079e:	std    
  42079f:	cmp    BYTE PTR [edi],dh
  4207a1:	sahf   
  4207a2:	push   edx
  4207a3:	outs   dx,BYTE PTR ds:[esi]
  4207a4:	imul   ebp,DWORD PTR gs:[ebp-0x1bcd731d],0xffffffd5
  4207ac:	sub    esi,DWORD PTR [edx]
  4207ae:	ins    DWORD PTR es:[edi],dx
  4207af:	dec    ebp
  4207b0:	mov    esi,0xd36a5ddd
  4207b5:	inc    edi
  4207b6:	std    
  4207b7:	rcl    DWORD PTR [edx-0x12],0x44
  4207bb:	out    dx,eax
  4207bc:	pop    esi
  4207bd:	cli    
  4207be:	mov    ecx,0xf7bdfbe2
  4207c3:	jbe    0x420841
  4207c5:	mov    dh,0xdd
  4207c7:	or     bh,BYTE PTR [edx+0x2b]
  4207ca:	fwait
  4207cb:	loope  0x4207f2
  4207cd:	imul   edx,DWORD PTR [esi],0x55f82b06
  4207d3:	lea    ebp,[ecx+0x4c9dc9ec]
  4207d9:	xor    al,0x1
  4207db:	js     0x4207aa
  4207dd:	ins    BYTE PTR es:[edi],dx
  4207de:	or     eax,DWORD PTR [ebx-0x6f]
  4207e1:	pop    ebx
  4207e2:	loopne 0x4207f9
  4207e4:	neg    BYTE PTR [edi+eax*1-0x2d]
  4207e8:	(bad)  
  4207e9:	and    BYTE PTR [edx+0x68],bh
  4207ec:	out    dx,al
  4207ed:	aad    0x7f
  4207ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207f0:	and    DWORD PTR [ebx-0x17],ebp
  4207f3:	mov    ds,edx
  4207f5:	test   DWORD PTR [eax-0x36fdf988],esp
  4207fb:	lods   eax,DWORD PTR ds:[esi]
  4207fc:	popa   
  4207fd:	inc    ebp
  4207fe:	bound  ebx,QWORD PTR [esi]
  420800:	or     ch,dh
  420802:	adc    al,dl
  420804:	icebp  
  420805:	add    DWORD PTR [ebx+0x55],ebx
  420808:	retf   0x6635
  42080b:	dec    esi
  42080c:	mov    ecx,0x572c7756
  420811:	(bad)
  420815:	in     eax,0x8c
  420817:	pop    edi
  420818:	dec    edx
  420819:	lods   eax,DWORD PTR ds:[esi]
  42081a:	lods   al,BYTE PTR ds:[esi]
  42081b:	sub    dl,BYTE PTR [ebx]
  42081d:	outs   dx,BYTE PTR ds:[esi]
  42081e:	loop   0x420881
  420820:	cli    
  420821:	lea    edx,[esi-0x50b4b105]
  420827:	(bad)  
  420828:	jecxz  0x4207b3
  42082a:	mov    al,0x3a
  42082c:	call   0x3da8:0xe492d58a
  420833:	ins    DWORD PTR es:[edi],dx
  420834:	xchg   esi,eax
  420835:	frstor [ecx+0x7e900d95]
  42083b:	mov    bl,0xd6
  42083d:	push   eax
  42083e:	add    ebp,ebp
  420840:	popa   
  420841:	sbb    bh,bl
  420843:	and    eax,0xcb1f17b5
  420848:	pop    ebp
  420849:	in     eax,dx
  42084a:	mov    esi,0xf4e852b3
  42084f:	ds jb  0x4207fe
  420852:	loopne 0x420839
  420854:	rcl    ch,1
  420856:	jp     0x420814
  420858:	in     ax,0xe9
  42085b:	aam    0xd8
  42085d:	adc    eax,0xfd50471
  420862:	xchg   esi,eax
  420863:	stos   DWORD PTR es:[edi],eax
  420864:	hlt    
  420865:	cdq    
  420866:	pop    edx
  420867:	pop    edx
  420868:	stc    
  420869:	mov    eax,0x61f4529b
  42086e:	js     0x4208be
  420870:	sbb    ebp,0xabacdbb9
  420876:	dec    ecx
  420877:	outs   dx,DWORD PTR ds:[esi]
  420878:	loop   0x420864
  42087a:	sub    al,0x96
  42087c:	mov    bl,0x64
  42087e:	cwde   
  42087f:	jae    0x420859
  420881:	push   ebp
  420882:	sub    al,0xe5
  420884:	pushf  
  420885:	mov    esi,0x82a820fb
  42088a:	bound  ecx,QWORD PTR ds:0x42fbaaa3
  420890:	test   eax,0xbadea057
  420895:	fnsave [edi]
  420897:	cmp    al,0xdf
  420899:	mov    eax,ds:0x980e9475
  42089e:	loope  0x42085c
  4208a0:	arpl   WORD PTR gs:[eax],di
  4208a3:	add    cl,BYTE PTR [eax-0x66d587cd]
  4208a9:	ds (bad) 
  4208ab:	fs stc 
  4208ad:	and    BYTE PTR [ebx+0x75f41df8],ah
  4208b3:	pop    ecx
  4208b4:	cmp    edi,edi
  4208b6:	add    eax,0x39c6243f
  4208bb:	repnz or BYTE PTR [edx*4-0x5b8413a8],0x5b
  4208c4:	adc    eax,0xa4c01e89
  4208c9:	ret    0xc360
  4208cc:	aad    0xfc
  4208ce:	or     eax,ebp
  4208d0:	outs   dx,DWORD PTR ds:[esi]
  4208d1:	fucom  st(2)
  4208d3:	mov    bl,0xe2
  4208d5:	loopne 0x4208cb
  4208d7:	(bad)  
  4208d8:	in     eax,dx
  4208d9:	mov    edx,0xd4df129f
  4208de:	aaa    
  4208df:	xchg   esp,eax
  4208e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208e1:	mov    ecx,0xc84b3667
  4208e6:	and    bl,BYTE PTR [edx-0x51e5b630]
  4208ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208ed:	mov    ah,0x91
  4208ef:	pushf  
  4208f0:	pushf  
  4208f1:	add    eax,0x12ae3640
  4208f6:	or     bl,dl
  4208f8:	mov    al,0x68
  4208fa:	dec    ebx
  4208fb:	imul   esi,DWORD PTR [eax+0x2f358ea7],0xffffff97
  420902:	aam    0x4d
  420904:	stos   DWORD PTR es:[edi],eax
  420905:	pop    ebp
  420906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420907:	retf   0x3f0f
  42090a:	imul   ebp,esi,0x6c197316
  420910:	outs   dx,DWORD PTR ds:[esi]
  420911:	lods   eax,DWORD PTR ds:[esi]
  420912:	jg     0x4208eb
  420914:	fstp   TBYTE PTR [ebx]
  420916:	and    bh,ch
  420918:	aam    0x86
  42091a:	xlat   BYTE PTR ds:[ebx]
  42091b:	call   0x6cee:0xe9ed1ef0
  420922:	aam    0x51
  420924:	sbb    al,0xa3
  420926:	and    DWORD PTR [esi+ecx*4+0x6],edi
  42092a:	js     0x420947
  42092c:	ror    DWORD PTR [esp+edi*2+0x8],cl
  420930:	out    0xda,eax
  420932:	dec    ecx
  420933:	(bad)  
  420934:	popa   
  420935:	out    0x91,eax
  420937:	clc    
  420938:	lods   al,BYTE PTR ds:[esi]
  420939:	(bad)  
  42093a:	enter  0xcf4d,0xae
  42093e:	sbb    al,0x78
  420940:	out    dx,al
  420941:	and    eax,0x7832aaa5
  420946:	jno    0x4208d6
  420948:	mov    ecx,0x12164404
  42094d:	lods   eax,DWORD PTR ds:[esi]
  42094e:	shr    esp,0x15
  420951:	jae    0x4208fb
  420953:	dec    esp
  420954:	scas   al,BYTE PTR es:[edi]
  420955:	sbb    ebp,DWORD PTR [edi-0x73]
  420958:	mov    dl,0xf
  42095a:	sub    edx,esi
  42095c:	sub    ah,BYTE PTR [ecx]
  42095e:	call   0x9bae:0x1a066f11
  420965:	push   es
  420966:	cmp    eax,0xc6886c10
  42096b:	jp     0x420939
  42096d:	call   0xd88d:0x701054fc
  420974:	rcl    BYTE PTR ds:0x4d50978,1
  42097a:	lods   al,BYTE PTR ds:[esi]
  42097b:	add    edx,DWORD PTR [eax]
  42097d:	in     al,0x6b
  42097f:	adc    esp,DWORD PTR [esi]
  420981:	inc    BYTE PTR [ecx+0x57]
  420984:	adc    al,0xaf
  420986:	lods   al,BYTE PTR ds:[esi]
  420987:	sub    DWORD PTR [ecx+0x49],0x61f0511f
  42098e:	fidivr WORD PTR [ebx-0x35]
  420991:	mov    bl,0xbe
  420993:	es jns 0x4209b3
  420996:	aaa    
  420997:	mov    eax,ds:0xb49e87a6
  42099c:	out    dx,eax
  42099d:	pop    eax
  42099e:	xor    dh,dh
  4209a0:	inc    ebp
  4209a1:	xchg   ebx,eax
  4209a2:	ins    BYTE PTR es:[edi],dx
  4209a3:	jbe    0x420960
  4209a5:	cmp    ecx,DWORD PTR [ebx+eiz*2-0x43d23ba]
  4209ac:	push   ss
  4209ad:	(bad)  
  4209ae:	xchg   ebx,eax
  4209af:	test   eax,0xf3ba1b12
  4209b4:	and    al,0x9d
  4209b6:	scas   al,BYTE PTR es:[edi]
  4209b7:	dec    edi
  4209b8:	mov    WORD PTR [eax-0x4e],es
  4209bb:	fwait
  4209bc:	mov    ah,0x5d
  4209be:	or     al,0xfd
  4209c0:	dec    ebp
  4209c1:	or     al,0x74
  4209c3:	shl    DWORD PTR [eax],0x2
  4209c6:	xor    eax,0x6a0438a1
  4209cb:	add    bl,BYTE PTR [esi-0x13]
  4209ce:	push   esi
  4209cf:	add    edx,ecx
  4209d1:	sar    DWORD PTR [esi-0x14b8e83a],1
  4209d7:	aam    0x5e
  4209d9:	leave  
  4209da:	jns    0x4209d4
  4209dc:	(bad)
  4209e0:	push   es
  4209e1:	xchg   edx,eax
  4209e2:	in     eax,dx
  4209e3:	aad    0x5a
  4209e5:	clc    
  4209e6:	call   0x8fd3:0x4531233a
  4209ed:	and    dl,BYTE PTR [ecx+0x2fff8340]
  4209f3:	push   es
  4209f4:	cmp    BYTE PTR [ebp+0x104ecbee],0x1d
  4209fb:	and    dl,BYTE PTR [ecx+edx*8]
  4209fe:	dec    esp
  4209ff:	sti    
  420a00:	xchg   ebp,eax
  420a01:	jb     0x4209ea
  420a03:	pop    ds
  420a04:	or     eax,0x2eac4278
  420a09:	sub    DWORD PTR [edx+0x7c5aeb70],esp
  420a0f:	and    eax,0xe3934e8f
  420a14:	sbb    esi,DWORD PTR [ecx]
  420a16:	(bad)  
  420a17:	cmp    al,0x1b
  420a19:	adc    eax,0xaef6d933
  420a1e:	ret    
  420a1f:	int3   
  420a20:	sbb    BYTE PTR [ebx],0x18
  420a23:	dec    edi
  420a24:	xchg   BYTE PTR [edi+0x1a],cl
  420a27:	cld    
  420a28:	cwde   
  420a29:	imul   esp,DWORD PTR [esi+0x58],0x4f
  420a2d:	ss aad 0xec
  420a30:	out    0xad,al
  420a32:	rcl    DWORD PTR [edx-0x46],0xc9
  420a36:	icebp  
  420a37:	rol    DWORD PTR [edx-0x2b],0xa7
  420a3b:	stos   DWORD PTR es:[edi],eax
  420a3c:	xchg   ebx,eax
  420a3d:	aam    0x47
  420a3f:	adc    DWORD PTR [edi],ebx
  420a41:	outs   dx,BYTE PTR ds:[esi]
  420a42:	jge    0x4209d8
  420a44:	jle    0x420a24
  420a46:	xor    ebp,eax
  420a48:	sbb    edi,DWORD PTR [edi+0x4c]
  420a4b:	jmpw   0x9e91
  420a4f:	pop    edx
  420a50:	sub    dh,BYTE PTR [esi-0x60]
  420a53:	test   DWORD PTR [ecx-0x31],edx
  420a56:	add    BYTE PTR [eax+0x34],dl
  420a59:	xor    eax,0x94e03f01
  420a5e:	popf   
  420a5f:	mov    edx,0x3a6c4a69
  420a64:	jb     0x420a87
  420a66:	cmc    
  420a67:	lahf   
  420a68:	and    dh,BYTE PTR [esp+0x9c83473]
  420a6f:	or     edi,DWORD PTR [edi+0x108d8e5d]
  420a75:	pusha  
  420a76:	addr16 pop ecx
  420a78:	sub    edi,0x4b
  420a7b:	shl    cl,1
  420a7d:	cmp    eax,0xf0d48781
  420a82:	mov    ch,0xc3
  420a84:	mov    DWORD PTR [esi-0x5e],eax
  420a87:	adc    BYTE PTR [esi],bh
  420a89:	mov    edi,0x7f38c89a
  420a8e:	gs sti 
  420a90:	test   al,0xbd
  420a92:	and    al,0x6
  420a94:	call   0x846c6c92
  420a99:	lock inc ebx
  420a9b:	aam    0x53
  420a9d:	mov    ch,0x20
  420a9f:	imul   ecx,DWORD PTR [ecx+0x5fb07725],0xffffffc7
  420aa6:	adc    bh,ah
  420aa8:	mov    ah,0x2f
  420aaa:	jmp    0x6740c557
  420aaf:	xor    al,0x26
  420ab1:	or     DWORD PTR [eax-0x5cc8e31d],esi
  420ab7:	(bad)  
  420ab8:	jno    0x420a68
  420aba:	adc    al,0x4
  420abc:	jns    0x420aa7
  420abe:	jo     0x420b3b
  420ac0:	dec    ecx
  420ac1:	call   0x5867:0xead434fe
  420ac8:	scas   al,BYTE PTR es:[edi]
  420ac9:	xor    ecx,ebx
  420acb:	test   BYTE PTR [edi-0x2f],0x1c
  420acf:	push   ecx
  420ad0:	sub    al,0x8b
  420ad2:	bound  esi,QWORD PTR [esp+ebp*2]
  420ad5:	inc    edx
  420ad6:	inc    edx
  420ad7:	jno    0x420ac4
  420ad9:	inc    ebp
  420ada:	pop    ss
  420adb:	stos   BYTE PTR es:[edi],al
  420adc:	test   eax,0x6769307f
  420ae1:	sub    BYTE PTR ds:0x644458d5,ch
  420ae7:	pusha  
  420ae8:	push   esp
  420ae9:	and    BYTE PTR [ecx-0x64d1d9bf],cl
  420aef:	cmc    
  420af0:	daa    
  420af1:	cmp    al,0x2c
  420af3:	and    ebx,ecx
  420af5:	push   ss
  420af6:	jbe    0x420b3d
  420af8:	aam    0xdc
  420afa:	fidiv  DWORD PTR [ebx+0x56]
  420afd:	mov    cs,WORD PTR [esi+0x7deae09]
  420b03:	int    0xf6
  420b05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b06:	mov    dh,0x9b
  420b08:	in     al,0x21
  420b0a:	das    
  420b0b:	jo     0x420b05
  420b0d:	lods   eax,DWORD PTR ds:[esi]
  420b0e:	stc    
  420b0f:	shl    BYTE PTR [ecx],0x79
  420b12:	jp     0x420b6c
  420b14:	out    0x54,eax
  420b16:	pusha  
  420b17:	lea    ebx,[eax]
  420b19:	xlat   BYTE PTR ds:[ebx]
  420b1a:	and    DWORD PTR [edx],edi
  420b1c:	mov    al,0x32
  420b1e:	sbb    BYTE PTR [ebx-0x16],0xbf
  420b22:	call   0x4dbd:0xfd3bebe2
  420b29:	sbb    DWORD PTR [ebp+0x601b1d17],0xd35f94d6
  420b33:	shr    BYTE PTR [ebp-0x7e],1
  420b36:	ins    BYTE PTR es:[edi],dx
  420b37:	std    
  420b38:	add    DWORD PTR [esi],ebp
  420b3a:	and    al,0x7d
  420b3c:	sbb    al,0x6e
  420b3e:	les    esi,FWORD PTR [ebx]
  420b40:	push   ss
  420b41:	rcl    DWORD PTR [esi+0x47],1
  420b44:	and    al,0xc2
  420b46:	xchg   edx,eax
  420b47:	push   eax
  420b48:	sbb    DWORD PTR [edi+edi*8],0xffffffbe
  420b4c:	adc    al,0xac
  420b4e:	scas   eax,DWORD PTR es:[edi]
  420b4f:	add    BYTE PTR [ecx],0x11
  420b52:	mov    gs,WORD PTR [ebx]
  420b54:	fwait
  420b55:	dec    edi
  420b56:	push   cs
  420b57:	int3   
  420b58:	rcr    DWORD PTR [edx-0x61],1
  420b5b:	and    esi,DWORD PTR [ecx+edx*8]
  420b5e:	pop    ebp
  420b5f:	ins    BYTE PTR es:[edi],dx
  420b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b61:	mov    edi,DWORD PTR [ebx]
  420b63:	mov    edx,edx
  420b65:	or     ch,BYTE PTR [edx+0x1e]
  420b68:	(bad)  
  420b69:	leave  
  420b6a:	sub    eax,0x75ccc0c3
  420b6f:	fimul  DWORD PTR [ecx+0x38f04d07]
  420b75:	lock inc eax
  420b77:	gs aad 0x4c
  420b7a:	xchg   BYTE PTR [ebp+esi*1+0x61801bde],dl
  420b81:	add    ch,BYTE PTR [ecx+0x4c]
  420b84:	xchg   ebx,eax
  420b85:	loop   0x420b97
  420b87:	cmp    al,0x79
  420b89:	je     0x420bef
  420b8b:	loope  0x420bb1
  420b8d:	mov    edi,0x9b30c936
  420b92:	test   DWORD PTR [ebx+0x73],eax
  420b95:	rol    ah,1
  420b97:	adc    BYTE PTR [ecx+0x76],ch
  420b9a:	int    0xb7
  420b9c:	test   al,0x75
  420b9e:	push   ebp
  420b9f:	(bad)  
  420ba1:	inc    ebp
  420ba2:	pop    ebx
  420ba3:	fwait
  420ba4:	repz push ecx
  420ba6:	mov    cl,0x78
  420ba8:	loope  0x420b47
  420baa:	jmp    0x420b31
  420bac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bad:	mov    dh,0x6a
  420baf:	pop    edi
  420bb0:	fimul  WORD PTR [edi-0x4fa79bf6]
  420bb6:	ror    edx,0x62
  420bb9:	pop    es
  420bba:	fwait
  420bbb:	(bad)  
  420bbc:	imul   edx,DWORD PTR [ebx],0xffffffc9
  420bbf:	lods   al,BYTE PTR ds:[esi]
  420bc0:	dec    eax
  420bc1:	cmc    
  420bc2:	add    DWORD PTR [eax+0x3d317cd1],ebx
  420bc8:	lods   al,BYTE PTR ds:[esi]
  420bc9:	jnp    0x420bdf
  420bcb:	mov    edx,0x6cb2074
  420bd0:	cmp    ch,ch
  420bd2:	out    dx,eax
  420bd3:	lods   al,BYTE PTR ds:[esi]
  420bd4:	mov    al,ds:0xc75cb5f4
  420bd9:	jg     0x420b90
  420bdb:	dec    ebx
  420bdc:	or     eax,0xb5235e59
  420be1:	out    0x55,eax
  420be3:	scas   al,BYTE PTR es:[edi]
  420be4:	in     al,0x5f
  420be6:	arpl   dx,cx
  420be8:	(bad)  
  420be9:	stc    
  420bea:	test   BYTE PTR [ebp+ebp*1-0x5de5464e],al
  420bf1:	adc    al,0xaa
  420bf4:	push   ebx
  420bf5:	mov    ecx,0xf7838cef
  420bfa:	lods   eax,DWORD PTR ds:[esi]
  420bfb:	sub    esi,DWORD PTR [edi]
  420bfd:	or     DWORD PTR [ebp-0x2e],eax
  420c00:	idiv   ah
  420c02:	popa   
  420c03:	xor    BYTE PTR [edi-0x42],al
  420c06:	shr    BYTE PTR [ebx-0x4e],1
  420c09:	push   ecx
  420c0a:	mov    dh,0x4
  420c0c:	and    DWORD PTR [ecx],ebx
  420c0e:	push   esp
  420c0f:	or     esi,DWORD PTR [edx+0x7a34c8a7]
  420c15:	nop
  420c16:	xchg   edx,eax
  420c17:	cdq    
  420c18:	int3   
  420c19:	or     bh,ah
  420c1b:	jo     0x420c26
  420c1d:	mov    edx,0xcec19a0
  420c22:	mov    ds:0x7595c046,eax
  420c27:	stos   BYTE PTR es:[edi],al
  420c28:	xor    dl,BYTE PTR [ebx-0x5e]
  420c2b:	hlt    
  420c2c:	call   0x5930:0xf14282d9
  420c33:	jecxz  0x420c13
  420c35:	cli    
  420c36:	jmp    0x696d367d
  420c3b:	push   0x6d9845d0
  420c40:	inc    esi
  420c41:	scas   eax,DWORD PTR es:[edi]
  420c42:	cmp    ebx,DWORD PTR [edx+eax*8-0x43]
  420c46:	(bad)  
  420c47:	fbld   TBYTE PTR [eax-0x68]
  420c4a:	and    DWORD PTR [edx+esi*2-0x18],ebx
  420c4e:	mov    cl,0xcb
  420c50:	das    
  420c51:	dec    esi
  420c52:	pushf  
  420c53:	aad    0x7c
  420c55:	std    
  420c56:	sti    
  420c57:	pusha  
  420c58:	pop    ss
  420c59:	push   cs
  420c5a:	mov    dh,0x43
  420c5c:	inc    cl
  420c5e:	add    bl,BYTE PTR [ebx+0x3aaa4f31]
  420c64:	jmp    0x420bef
  420c66:	pop    es
  420c67:	out    dx,eax
  420c68:	pushf  
  420c69:	mov    edi,esp
  420c6b:	cmp    cl,BYTE PTR [ebp+0x56]
  420c6e:	pop    ebp
  420c6f:	inc    edi
  420c70:	push   ecx
  420c71:	adc    al,0xec
  420c74:	lods   al,BYTE PTR ds:[esi]
  420c75:	(bad)  
  420c76:	and    ebx,eax
  420c78:	inc    edi
  420c79:	shl    DWORD PTR [edi-0x5a177ed1],cl
  420c7f:	push   edi
  420c80:	inc    ebx
  420c81:	add    BYTE PTR [ebp-0x7d],ch
  420c84:	out    0xa7,al
  420c86:	or     DWORD PTR [ecx+eiz*8-0x59957f08],esi
  420c8d:	outs   dx,BYTE PTR ds:[esi]
  420c8e:	mov    bl,0xb
  420c90:	test   eax,0x5707ee9d
  420c95:	sar    BYTE PTR [edi],0x52
  420c98:	xor    esi,0xd0a1bf59
  420c9e:	cmp    bl,BYTE PTR [edx-0x40fe84a6]
  420ca4:	daa    
  420ca5:	shr    BYTE PTR [esp+eiz*2+0x61],0xb3
  420caa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cab:	out    0xd5,eax
  420cad:	pop    edx
  420cae:	or     dh,BYTE PTR [ecx+0x9bbba57]
  420cb4:	daa    
  420cb5:	mov    DWORD PTR [ebx],ebx
  420cb7:	jno    0x420d14
  420cb9:	sti    
  420cba:	cdq    
  420cbb:	mov    al,gs:0x59d61ab
  420cc1:	scas   al,BYTE PTR es:[edi]
  420cc2:	gs test ebp,edi
  420cc5:	xlat   BYTE PTR ds:[ebx]
  420cc6:	mov    ecx,0xfc5a0d0
  420ccb:	jl     0x420ca1
  420ccd:	mov    edi,DWORD PTR [ebp-0x4f]
  420cd0:	call   0x2ff07447
  420cd5:	xchg   ebp,eax
  420cd6:	mov    eax,0x269865
  420cdb:	dec    esp
  420cdc:	dec    ebx
  420cdd:	dec    eax
  420cde:	mov    ds:0x5d3435b9,eax
  420ce3:	int    0x1d
  420ce5:	repz je 0x420d4b
  420ce8:	ja     0x420ca4
  420cea:	jno    0x420c84
  420cec:	fwait
  420ced:	jmp    0x110a:0xbddacb1c
  420cf4:	and    DWORD PTR [ecx-0x1],eax
  420cf7:	fnstenv [ecx+0x498ce455]
  420cfd:	lea    ebx,[edi+0x2b]
  420d00:	push   esi
  420d01:	dec    edi
  420d02:	leave  
  420d03:	arpl   WORD PTR [ebx-0x74b9b3fd],dx
  420d09:	lock mov ds:0xa11d1abc,eax
  420d0f:	ror    BYTE PTR [ebx-0x75],1
  420d12:	cmp    ch,BYTE PTR [ecx-0x4cc8baa]
  420d18:	mov    DWORD PTR [edx],edi
  420d1a:	mov    edx,DWORD PTR [ebp+0x8]
  420d1d:	xor    edx,eax
  420d1f:	inc    ecx
  420d20:	inc    DWORD PTR [ebp-0x18]
  420d23:	add    edx,esi
  420d25:	cmp    ecx,edx
  420d27:	jb     0x41e963
  420d2d:	jmp    0x420d77
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	mov    DWORD PTR [ebp+0x8],ecx
  420d38:	jmp    0x420d6a
  420d3d:	mov    ecx,DWORD PTR [ebp+0x8]
  420d40:	mov    edx,DWORD PTR [ebp-0x8]
  420d43:	xor    ecx,eax
  420d45:	xor    edx,eax
  420d47:	sub    ecx,edx
  420d49:	sub    ecx,esi
  420d4b:	xor    ecx,eax
  420d4d:	mov    DWORD PTR [ebp+0x8],ecx
  420d50:	mov    ecx,DWORD PTR [ebp+0x8]
  420d53:	mov    edx,DWORD PTR [ebp+0x8]
  420d56:	imul   edx,edx,0x5708f2
  420d5c:	xor    ecx,eax
  420d5e:	add    ecx,esi
  420d60:	lea    ecx,[ebp+ecx*4-0x64]
  420d64:	mov    edi,DWORD PTR [ecx]
  420d66:	add    edx,edi
  420d68:	mov    DWORD PTR [ecx],edx
  420d6a:	mov    ecx,DWORD PTR [ebp+0x8]
  420d6d:	xor    ecx,eax
  420d6f:	add    ecx,esi
  420d71:	jne    0x420d3d
  420d77:	mov    ecx,DWORD PTR [ebp-0xc]
  420d7a:	mov    DWORD PTR [ebp+0x8],ecx
  420d7d:	jmp    0x420daf
  420d82:	mov    ecx,DWORD PTR [ebp+0x8]
  420d85:	mov    edx,DWORD PTR [ebp-0x8]
  420d88:	xor    ecx,eax
  420d8a:	xor    edx,eax
  420d8c:	sub    ecx,edx
  420d8e:	sub    ecx,esi
  420d90:	xor    ecx,eax
  420d92:	mov    DWORD PTR [ebp+0x8],ecx
  420d95:	mov    ecx,DWORD PTR [ebp+0x8]
  420d98:	mov    edx,DWORD PTR [ebp+0x8]
  420d9b:	imul   edx,edx,0x5708f2
  420da1:	xor    ecx,eax
  420da3:	add    ecx,esi
  420da5:	lea    ecx,[ebp+ecx*4-0x64]
  420da9:	mov    edi,DWORD PTR [ecx]
  420dab:	add    edx,edi
  420dad:	mov    DWORD PTR [ecx],edx
  420daf:	mov    ecx,DWORD PTR [ebp+0x8]
  420db2:	xor    ecx,eax
  420db4:	add    ecx,esi
  420db6:	jne    0x420d82
  420dbc:	mov    ecx,DWORD PTR [ebp-0x8]
  420dbf:	mov    edx,DWORD PTR [ebp-0x20]
  420dc2:	xor    ecx,eax
  420dc4:	lea    ecx,[ecx+edx*1+0x3272dd]
  420dcb:	mov    DWORD PTR [ebp-0x20],ecx
  420dce:	inc    DWORD PTR [ebp+0xc]
  420dd1:	mov    ecx,DWORD PTR [ebp-0x1c]
  420dd4:	xor    ecx,eax
  420dd6:	add    ecx,esi
  420dd8:	jne    0x413678
  420dde:	jmp    0x420e67
  420de3:	mov    ecx,DWORD PTR [ebp-0xc]
  420de6:	mov    DWORD PTR [ebp+0x8],ecx
  420de9:	jmp    0x420e1b
  420dee:	mov    ecx,DWORD PTR [ebp+0x8]
  420df1:	mov    edx,DWORD PTR [ebp-0x8]
  420df4:	xor    ecx,eax
  420df6:	xor    edx,eax
  420df8:	sub    ecx,edx
  420dfa:	sub    ecx,esi
  420dfc:	xor    ecx,eax
  420dfe:	mov    DWORD PTR [ebp+0x8],ecx
  420e01:	mov    ecx,DWORD PTR [ebp+0x8]
  420e04:	mov    edx,DWORD PTR [ebp+0x8]
  420e07:	imul   edx,edx,0x5708f2
  420e0d:	xor    ecx,eax
  420e0f:	add    ecx,esi
  420e11:	lea    ecx,[ebp+ecx*4-0x64]
  420e15:	mov    edi,DWORD PTR [ecx]
  420e17:	add    edx,edi
  420e19:	mov    DWORD PTR [ecx],edx
  420e1b:	mov    ecx,DWORD PTR [ebp+0x8]
  420e1e:	xor    ecx,eax
  420e20:	add    ecx,esi
  420e22:	jne    0x420dee
  420e28:	jmp    0x420e73
  420e2d:	mov    ecx,DWORD PTR [ebp+0x8]
  420e30:	mov    edx,DWORD PTR [ebp-0x8]
  420e33:	xor    ecx,eax
  420e35:	xor    edx,eax
  420e37:	sub    ecx,edx
  420e39:	sub    ecx,esi
  420e3b:	xor    ecx,eax
  420e3d:	mov    DWORD PTR [ebp+0x8],ecx
  420e40:	mov    ecx,DWORD PTR [ebp+0x8]
  420e43:	mov    edx,DWORD PTR [ebp+0x8]
  420e46:	xor    ecx,eax
  420e48:	imul   edx,edx,0x5708f2
  420e4e:	add    ecx,esi
  420e50:	lea    ecx,[ebp+ecx*4-0x64]
  420e54:	mov    edi,DWORD PTR [ecx]
  420e56:	add    edx,edi
  420e58:	mov    DWORD PTR [ecx],edx
  420e5a:	mov    ecx,DWORD PTR [ebp+0x8]
  420e5d:	xor    ecx,eax
  420e5f:	add    ecx,esi
  420e61:	jne    0x420e2d
  420e67:	mov    ecx,DWORD PTR [ebp-0x8]
  420e6a:	xor    ecx,eax
  420e6c:	mov    eax,DWORD PTR [ebp+0x10]
  420e6f:	add    ecx,esi
  420e71:	mov    DWORD PTR [eax],ecx
  420e73:	pop    edi
  420e74:	pop    esi
  420e75:	pop    ebx
  420e76:	leave  
  420e77:	ret    0xc
  420e7a:	dec    ebp
  420e7b:	and    eax,0x55210010
  420e80:	adc    BYTE PTR [eax],al
  420e82:	call   DWORD PTR [ebp+0x10]
  420e85:	add    bh,al
  420e87:	adc    BYTE PTR ss:[eax],al
  420e8a:	cld    
  420e8b:	ins    BYTE PTR es:[edi],dx
  420e8c:	adc    BYTE PTR [eax],al
  420e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e8f:	js     0x420ea1
  420e91:	add    BYTE PTR [ebx+eiz*2],al
  420e94:	adc    BYTE PTR [eax],al
  420e96:	dec    edi
  420e97:	jae    0x420ea9
  420e99:	add    ah,bl
  420e9b:	sub    eax,0x6ed60010
  420ea0:	adc    BYTE PTR [eax],al
  420ea2:	cmp    BYTE PTR [ecx],al
  420ea4:	adc    BYTE PTR [eax],al
  420ea6:	cwde   
  420ea7:	cmovb  eax,DWORD PTR [eax]
  420eaa:	pushf  
  420eab:	cmovb  eax,DWORD PTR [eax]
  420eae:	mov    al,ds:0xa400420f
  420eb3:	cmovb  eax,DWORD PTR [eax]
  420eb6:	test   al,0xf
  420eb8:	inc    edx
  420eb9:	add    BYTE PTR [edi+ecx*1+0xfb00042],ch
  420ec0:	inc    edx
  420ec1:	add    BYTE PTR [edi+ecx*1+0x42],dh
	...
  420ed4:	dec    edx
  420ed5:	aam    0xb3
  420ed7:	dec    ebp
  420ed8:	add    BYTE PTR [eax],al
  420eda:	add    BYTE PTR [eax],al
  420edc:	add    al,BYTE PTR [eax]
  420ede:	add    BYTE PTR [eax],al
  420ee0:	cmp    eax,0xc0000000
  420ee5:	lar    eax,WORD PTR [eax]
  420ee8:	rol    BYTE PTR [ebx],0x2
  420eeb:	add    BYTE PTR [edx+0xe],al
  420eee:	adc    BYTE PTR [eax],al
  420ef0:	pop    esp
  420ef1:	sbb    edx,DWORD PTR [eax]
  420ef3:	add    BYTE PTR [ebx-0x4dffefb0],cl
  420ef9:	sub    eax,0x29930010
  420efe:	adc    BYTE PTR [eax],al
  420f00:	mov    al,ds:0x5900101f
  420f05:	push   ebp
  420f06:	adc    BYTE PTR [eax],al
  420f08:	ret    0x102d
  420f0b:	add    BYTE PTR [edx+0xe],bh
  420f0e:	inc    edx
  420f0f:	add    BYTE PTR [esi+0xe],bh
  420f12:	inc    edx
  420f13:	add    BYTE PTR [edx-0x79ffbdf2],al
  420f19:	push   cs
  420f1a:	inc    edx
  420f1b:	add    BYTE PTR [edx-0x71ffbdf2],cl
  420f21:	push   cs
  420f22:	inc    edx
  420f23:	add    BYTE PTR [edx-0x69ffbdf2],dl
  420f29:	push   cs
  420f2a:	inc    edx
  420f2b:	add    BYTE PTR [edx-0x61ffbdf2],bl
  420f31:	push   cs
  420f32:	inc    edx
  420f33:	add    BYTE PTR [edx+0x5800420e],ah
  420f39:	cmovb  eax,DWORD PTR [eax]
  420f3c:	pop    esp
  420f3d:	cmovb  eax,DWORD PTR [eax]
  420f40:	pusha  
  420f41:	cmovb  eax,DWORD PTR [eax]
  420f44:	cmovb  eax,DWORD PTR fs:[eax]
  420f48:	push   0x6c00420f
  420f4d:	cmovb  eax,DWORD PTR [eax]
  420f50:	jo     0x420f61
  420f52:	inc    edx
  420f53:	add    BYTE PTR [edi+ecx*1+0x42],dh
  420f57:	add    al,cl
  420f59:	cmp    edx,DWORD PTR [eax]
  420f5b:	add    BYTE PTR [ecx+0x25],dh
  420f5e:	adc    BYTE PTR [eax],al
  420f60:	fld    TBYTE PTR [ecx]
  420f62:	adc    BYTE PTR [eax],al
  420f64:	xchg   edi,eax
  420f65:	sub    al,0x10
  420f67:	add    dh,ah
  420f69:	aaa    
  420f6a:	adc    BYTE PTR [eax],al
  420f6c:	and    eax,0xd5001051
  420f71:	xor    dl,BYTE PTR [eax]
  420f73:	add    BYTE PTR [eax-0x13ffefd8],ch
  420f79:	push   cs
  420f7a:	inc    edx
  420f7b:	add    al,dh
  420f7d:	push   cs
  420f7e:	inc    edx
  420f7f:	add    ah,dh
  420f81:	push   cs
  420f82:	inc    edx
  420f83:	add    al,bh
  420f85:	push   cs
  420f86:	inc    edx
  420f87:	add    ah,bh
  420f89:	push   cs
  420f8a:	inc    edx
  420f8b:	add    BYTE PTR [eax],al
  420f8d:	cmovb  eax,DWORD PTR [eax]
  420f90:	add    al,0xf
  420f92:	inc    edx
  420f93:	add    BYTE PTR [eax],cl
  420f95:	cmovb  eax,DWORD PTR [eax]
  420f98:	adc    DWORD PTR [ebp+0x10],ebx
  420f9b:	add    bh,cl
  420f9d:	push   es
  420f9e:	adc    BYTE PTR [eax],al
  420fa0:	xchg   esp,eax
  420fa1:	xor    eax,0x7b780010
  420fa6:	adc    BYTE PTR [eax],al
  420fa8:	stos   BYTE PTR es:[edi],al
  420fa9:	jo     0x420fbb
  420fab:	add    BYTE PTR [eax],ch
  420fad:	inc    esp
  420fae:	adc    BYTE PTR [eax],al
  420fb0:	pop    ebp
  420fb1:	pop    ecx
  420fb2:	adc    BYTE PTR [eax],al
  420fb4:	fild   QWORD PTR [edi]
  420fb6:	adc    BYTE PTR [eax],al
	...
  420fc0:	push   edx
  420fc1:	push   ebx
  420fc2:	inc    esp
  420fc3:	push   ebx
  420fc4:	mov    ebx,DWORD PTR [bp-0x3012]
  420fc9:	sbb    eax,0x8a8c4e89
  420fce:	dec    esi
  420fcf:	sahf   
  420fd0:	pop    ss
  420fd1:	cli    
  420fd2:	sahf   
  420fd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fd4:	add    DWORD PTR [eax],eax
  420fd6:	add    BYTE PTR [eax],al
  420fd8:	inc    ebx
  420fd9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  420fdd:	jb     0x421051
  420fdf:	outs   dx,BYTE PTR gs:[esi]
  420fe1:	je     0x421027
  420fe3:	popa   
  420fe4:	je     0x421047
  420fe6:	pop    esp
  420fe7:	dec    ebp
  420fe8:	outs   dx,DWORD PTR ds:[esi]
  420fe9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  420ff1:	ins    BYTE PTR es:[edi],dx
  420ff2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  420ff9:	dec    esi
  420ffa:	gs ja  0x420ffd
  420ffd:	add    BYTE PTR [eax],al
  420fff:	add    BYTE PTR [eax],al
  421001:	add    BYTE PTR [eax],al
  421003:	add    BYTE PTR [edx-0x2c],cl
  421006:	mov    bl,0x4d
  421008:	add    BYTE PTR [eax],al
  42100a:	add    BYTE PTR [eax],al
  42100c:	xor    dl,BYTE PTR [eax]
  42100e:	add    al,BYTE PTR [eax]
  421010:	add    DWORD PTR [eax],eax
  421012:	add    BYTE PTR [eax],al
  421014:	add    DWORD PTR [eax],eax
  421016:	add    BYTE PTR [eax],al
  421018:	add    DWORD PTR [eax],eax
  42101a:	add    BYTE PTR [eax],al
  42101c:	sub    BYTE PTR [eax],dl
  42101e:	add    al,BYTE PTR [eax]
  421020:	sub    al,0x10
  421022:	add    al,BYTE PTR [eax]
  421024:	xor    BYTE PTR [eax],dl
  421026:	add    al,BYTE PTR [eax]
  421028:	mov    edi,0x3e000020
  42102d:	adc    BYTE PTR [edx],al
  42102f:	add    BYTE PTR [eax],al
  421031:	add    BYTE PTR [ebx+0x79],dl
  421034:	ins    DWORD PTR es:[edi],dx
  421035:	bound  ebp,QWORD PTR [edi+0x6c]
  421038:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  42103f:	inc    ebx
  421040:	ins    BYTE PTR es:[edi],dx
  421041:	outs   dx,DWORD PTR ds:[esi]
  421042:	jae    0x4210a9
  421044:	push   edi
  421045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42104c:	popa   
  42104d:	je     0x4210b8
  42104f:	outs   dx,DWORD PTR ds:[esi]
  421050:	outs   dx,BYTE PTR ds:[esi]
  421051:	inc    ebx
  421052:	ins    BYTE PTR es:[edi],dx
  421053:	outs   dx,DWORD PTR ds:[esi]
  421054:	jae    0x4210bb
  421056:	push   edi
  421057:	.byte 0x69
