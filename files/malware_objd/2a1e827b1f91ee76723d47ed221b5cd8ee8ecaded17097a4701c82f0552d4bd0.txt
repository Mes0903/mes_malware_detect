
2a1e827b1f91ee76723d47ed221b5cd8ee8ecaded17097a4701c82f0552d4bd0.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	mov    al,0xec
  411002:	adc    BYTE PTR [edi-0x11],dl
  411005:	leave  
  411006:	mov    ds:0x37d3d38,eax
  41100b:	(bad)  
  41100c:	push   esp
  41100d:	xor    BYTE PTR [esi+ecx*2+0xa8e5268],dl
  411014:	bound  ecx,QWORD PTR [edi]
  411016:	das    
  411017:	push   edx
  411018:	jg     0x411081
  41101a:	inc    edi
  41101b:	aam    0x0
  41101d:	mov    eax,ds:0x2eec3c87
  411022:	fiadd  WORD PTR [ebx+0xeec4fe0]
  411028:	push   ss
  411029:	push   eax
  41102a:	sub    al,0x36
  41102c:	pop    edx
  41102d:	mov    ebx,DWORD PTR [edi]
  41102f:	sbb    edx,ebx
  411031:	in     eax,dx
  411032:	cmp    BYTE PTR [eax-0xdc71243],ah
  411038:	fild   QWORD PTR [eax]
  41103a:	cmp    dl,BYTE PTR [ebx+0x15422b44]
  411040:	cdq    
  411041:	mov    es,WORD PTR [ecx-0x4bd1cadc]
  411047:	adc    al,cl
  411049:	cld    
  41104a:	mov    ds:0x69c1e198,eax
  41104f:	sbb    eax,0x5127fbcd
  411054:	jno    0x411030
  411056:	imul   ebp,DWORD PTR [ecx-0x37],0xee43aefa
  41105d:	(bad)  
  41105e:	popa   
  41105f:	pop    ss
  411060:	arpl   WORD PTR [eax],bx
  411062:	mov    bl,0xb
  411064:	dec    ebp
  411065:	inc    edi
  411066:	jnp    0x4110ab
  411068:	retf   0x4ae7
  41106b:	push   0xae73e41
  411070:	pushf  
  411071:	out    dx,eax
  411072:	mov    ds:0xb253a478,al
  411077:	cdq    
  411078:	sub    al,0x9c
  41107a:	adc    DWORD PTR [edi+0x71],esi
  41107d:	aam    0xa3
  41107f:	cwde   
  411080:	ficom  DWORD PTR [eax-0x64]
  411083:	inc    ebx
  411084:	cmc    
  411085:	inc    edx
  411086:	das    
  411087:	pop    ss
  411088:	push   eax
  411089:	ins    BYTE PTR es:[edi],dx
  41108a:	je     0x41108f
  41108c:	nop
  41108d:	xor    eax,0x349a8505
  411092:	xor    eax,DWORD PTR [eax+0x4e]
  411095:	mov    bl,0x72
  411097:	cld    
  411098:	(bad)  
  411099:	fdiv   QWORD PTR ds:0x9966e6fa
  41109f:	lock mov ecx,cs
  4110a2:	mov    edi,0xa9e3eaa3
  4110a7:	and    al,0x37
  4110a9:	int3   
  4110aa:	sub    ebp,DWORD PTR [esi]
  4110ac:	jno    0x4110e4
  4110ae:	mov    dl,bl
  4110b0:	(bad)  
  4110b1:	xchg   ecx,eax
  4110b2:	mov    ecx,0x6c676f25
  4110b7:	int3   
  4110b8:	mov    ah,0x2c
  4110ba:	xor    eax,0x8d96da06
  4110bf:	pop    ds
  4110c0:	mov    al,0x90
  4110c2:	call   0xa36b:0x8ffe2522
  4110c9:	mov    al,0xcd
  4110cb:	leave  
  4110cc:	fnstcw WORD PTR [esi]
  4110ce:	xor    dh,cl
  4110d0:	mov    esi,edx
  4110d2:	cmp    al,0x55
  4110d4:	test   al,0x79
  4110d6:	xor    eax,0xe10ad79
  4110db:	mov    ah,0xdf
  4110de:	push   esi
  4110df:	sbb    BYTE PTR [ebx+0x68],0x30
  4110e3:	call   0xa348:0xaaf1c0ef
  4110ea:	pusha  
  4110eb:	ja     0x4110f3
  4110ed:	cmp    ecx,edx
  4110ef:	fcomp  st(7)
  4110f1:	xor    DWORD PTR [ecx],esi
  4110f3:	(bad)  
  4110f4:	mov    edi,0x3b40a202
  4110f9:	mov    edi,0xc4629c4d
  4110fe:	dec    edi
  4110ff:	hlt    
  411100:	inc    esp
  411101:	pop    ecx
  411102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411103:	mov    edx,0xbca6998e
  411108:	xchg   BYTE PTR [edi-0x161e0959],cl
  41110e:	rol    ebx,1
  411110:	or     eax,0x1f7674b4
  411115:	gs scas eax,DWORD PTR es:[edi]
  411117:	sub    al,0x2d
  411119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41111a:	xchg   BYTE PTR [esp+edi*4-0x79141e3e],ah
  411121:	jmp    0xef673dad
  411126:	popa   
  411127:	cmp    eax,0x80dc3622
  41112c:	lahf   
  41112d:	fwait
  41112e:	loop   0x411144
  411130:	ins    BYTE PTR es:[edi],dx
  411131:	inc    ebx
  411132:	xlat   BYTE PTR ds:[ebx]
  411133:	(bad)  
  411134:	pop    edx
  411135:	jecxz  0x411153
  411137:	push   0x31
  411139:	ins    DWORD PTR es:[edi],dx
  41113a:	hlt    
  41113b:	cmp    DWORD PTR [esi],edi
  41113d:	cmc    
  41113e:	test   esi,ebp
  411140:	in     al,0xec
  411142:	shr    BYTE PTR [esi+0x28f08b79],0x61
  411149:	cs retf 
  41114b:	jmp    0xa680:0x7785d04c
  411152:	outs   dx,BYTE PTR ds:[esi]
  411153:	push   esi
  411154:	mov    edi,0x3fed76c2
  411159:	mov    al,ds:0x30ca7b08
  41115e:	cwde   
  41115f:	aad    0x9b
  411161:	enter  0xb28f,0xf9
  411165:	call   0xf43ddc0e
  41116a:	ins    DWORD PTR es:[edi],dx
  41116b:	arpl   WORD PTR [ebp-0x6e],ax
  41116e:	test   ecx,ecx
  411170:	jno    0x4111a0
  411172:	lods   eax,DWORD PTR ds:[esi]
  411173:	sbb    ebx,DWORD PTR [esi+0x72]
  411176:	jge    0x411146
  411178:	pop    esi
  411179:	in     al,dx
  41117a:	cmp    edx,DWORD PTR [esi]
  41117c:	jle    0x411176
  41117e:	in     al,0x22
  411180:	stos   BYTE PTR es:[edi],al
  411181:	leave  
  411182:	cmp    ecx,DWORD PTR [ecx+0xc]
  411185:	shl    DWORD PTR [edx+0x3d71649f],1
  41118b:	das    
  41118c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41118d:	pop    DWORD PTR [edx-0x2a7f116d]
  411193:	xchg   edx,eax
  411194:	mov    ecx,esp
  411196:	enter  0xa927,0xac
  41119a:	push   edi
  41119b:	jl     0x41116c
  41119d:	sub    eax,0x2cdea572
  4111a2:	and    eax,0xae04a704
  4111a7:	fld    QWORD PTR [edx-0x7d363043]
  4111ad:	xchg   edi,eax
  4111ae:	jl     0x4111ea
  4111b0:	les    edx,FWORD PTR [esi+0x2395c9fd]
  4111b6:	adc    al,0xb7
  4111b8:	and    eax,0x12005233
  4111bd:	mov    ebx,0xf2ad17d7
  4111c2:	push   ds
  4111c3:	adc    DWORD PTR [edi+eiz*2+0x17],0xdc5d14ec
  4111cb:	stos   BYTE PTR es:[edi],al
  4111cc:	sub    ch,BYTE PTR [edx]
  4111ce:	bound  ecx,QWORD PTR [edx]
  4111d0:	add    ebx,eax
  4111d2:	neg    BYTE PTR [eax-0x49]
  4111d5:	rcl    BYTE PTR [ebx],1
  4111d7:	push   edi
  4111d9:	and    ecx,DWORD PTR [esi-0x3b]
  4111dc:	mov    cl,0xef
  4111de:	(bad)  
  4111df:	fist   WORD PTR [ebx-0x4c6725c0]
  4111e5:	sbb    esp,DWORD PTR [ebp+0x7]
  4111e8:	lea    edx,[ebp-0x4c42cef2]
  4111ee:	js     0x4111f6
  4111f0:	fist   WORD PTR [eax+0x2c]
  4111f3:	lods   eax,DWORD PTR ds:[esi]
  4111f4:	jge    0x4111ea
  4111f6:	into   
  4111f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111f8:	clc    
  4111f9:	push   edx
  4111fa:	sub    al,BYTE PTR [edi]
  4111fc:	loopne 0x4111cd
  4111fe:	dec    edx
  4111ff:	daa    
  411200:	dec    ecx
  411201:	(bad)  
  411202:	call   FWORD PTR [edx]
  411204:	inc    esi
  411205:	dec    edi
  411206:	call   DWORD PTR [edx+0xf1a8368]
  41120c:	iret   
  41120d:	fistp  WORD PTR [edi+0x249c9165]
  411213:	xchg   ecx,eax
  411214:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  411216:	aas    
  411217:	mov    ebp,0x8fce62ae
  41121c:	xchg   edx,eax
  41121d:	stc    
  41121e:	inc    edx
  41121f:	scas   eax,DWORD PTR es:[edi]
  411220:	fiadd  WORD PTR [ebx+eiz*4+0x43]
  411224:	in     eax,0x57
  411226:	mov    edi,0xbe9e3f88
  41122b:	loope  0x4111e6
  41122d:	sbb    eax,0x7902184f
  411232:	xor    esp,esi
  411234:	popf   
  411235:	daa    
  411236:	fld    DWORD PTR [eax-0x2b553cab]
  41123c:	fistp  DWORD PTR [ecx+0x7d]
  41123f:	sub    eax,DWORD PTR [esi-0x6ff9a5a]
  411245:	xor    BYTE PTR [esi+0x446f88c8],dh
  41124b:	ficomp WORD PTR [esi-0x6ca8fe04]
  411251:	jb     0x4112ba
  411253:	pop    es
  411254:	sub    ch,BYTE PTR [edi+eiz*2+0x74]
  411258:	xor    al,0x3f
  41125a:	sahf   
  41125b:	mov    dh,0xc0
  41125d:	cmp    bh,BYTE PTR [eax-0x3d]
  411260:	mov    ch,0x58
  411262:	idiv   bh
  411264:	retf   
  411265:	sbb    ch,BYTE PTR [esi-0x33b6a349]
  41126b:	cmp    eax,0x14537802
  411270:	int    0x46
  411272:	(bad)  
  411273:	add    dh,BYTE PTR [edx+0x59a208a8]
  411279:	add    cl,BYTE PTR [ebx-0x1ef40a08]
  41127f:	sub    ecx,DWORD PTR [eax+0x2da9e5ca]
  411285:	xchg   edx,eax
  411286:	sub    dh,al
  411288:	gs pop edi
  41128a:	fcmovne st,st(4)
  41128c:	rcl    DWORD PTR [ebx],cl
  41128e:	test   BYTE PTR [esi+0xb],0x98
  411292:	loope  0x411292
  411294:	lods   al,BYTE PTR ds:[esi]
  411295:	(bad)  
  411296:	enter  0x568a,0x46
  41129a:	pop    edx
  41129b:	cdq    
  41129c:	inc    eax
  41129d:	mov    esi,0xcf8d4666
  4112a2:	pop    ss
  4112a3:	push   ebp
  4112a4:	jb     0x411260
  4112a6:	scas   al,BYTE PTR es:[edi]
  4112a7:	jno    0x4112b1
  4112a9:	aas    
  4112aa:	or     bh,BYTE PTR [ecx-0x1d]
  4112ad:	mov    ch,0xbb
  4112af:	mov    BYTE PTR ds:0x89758692,dl
  4112b5:	dec    edi
  4112b6:	out    0xf7,al
  4112b8:	paddsb mm3,QWORD PTR [ebp+0x34]
  4112bc:	xor    esi,edi
  4112be:	mov    cl,0x41
  4112c0:	cmp    dl,BYTE PTR [esi+ebp*2]
  4112c3:	cmp    dh,BYTE PTR [ebp+0x9]
  4112c6:	and    BYTE PTR ds:0x86bdaf92,dl
  4112cc:	sahf   
  4112cd:	mov    eax,ebx
  4112cf:	popf   
  4112d0:	mov    dl,0x88
  4112d2:	retf   0x28c1
  4112d5:	rcl    BYTE PTR [ebx-0x53],0x63
  4112d9:	scas   al,BYTE PTR es:[edi]
  4112da:	add    al,0x84
  4112dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112dd:	mov    dh,0x84
  4112df:	mov    cs,WORD PTR [ecx]
  4112e1:	ficom  DWORD PTR [ebx+0x19]
  4112e4:	cmp    esi,DWORD PTR [esi+edi*8+0x30dfba11]
  4112eb:	jle    0x411357
  4112ed:	dec    ebx
  4112ee:	shl    BYTE PTR [edx+0x45a6c7f0],1
  4112f4:	push   ebp
  4112f5:	mov    DWORD PTR [ecx-0x9b62dda],0xcdb209d0
  4112ff:	fisub  WORD PTR [edi]
  411301:	retf   0xd7aa
  411304:	and    DWORD PTR [edi-0x3ab38713],0x18
  41130b:	push   esp
  41130c:	stos   DWORD PTR es:[edi],eax
  41130d:	cmc    
  41130e:	push   ds
  41130f:	and    eax,0xf8636383
  411314:	ja     0x411351
  411316:	xchg   edx,eax
  411317:	push   edx
  411318:	push   0x11b39fff
  41131d:	cli    
  41131e:	loope  0x4112ea
  411320:	pop    ecx
  411321:	loop   0x411374
  411323:	das    
  411324:	fisub  WORD PTR [edi-0x4e]
  411327:	pop    esp
  411328:	jl     0x4112ac
  41132a:	neg    DWORD PTR [edx-0x43]
  41132d:	mov    ds:0xfa576515,al
  411332:	cdq    
  411333:	adc    ebp,DWORD PTR [ebx-0x25]
  411336:	in     eax,dx
  411337:	or     al,0x66
  411339:	adc    dh,0x2d
  41133c:	mov    ebx,0x28bf12ed
  411341:	not    esi
  411343:	and    DWORD PTR [edi-0xd],esp
  411346:	pop    es
  411347:	scas   eax,DWORD PTR es:[edi]
  411348:	mov    ds:0x542c3546,eax
  41134d:	pop    esi
  41134e:	xor    al,0x8f
  411350:	div    DWORD PTR [eax+0x43]
  411353:	arpl   WORD PTR [ebp+0x1e4bce57],bp
  411359:	inc    esi
  41135a:	data16 scas al,BYTE PTR es:[edi]
  41135c:	xchg   ebp,eax
  41135d:	xchg   esi,eax
  41135e:	xchg   BYTE PTR [edi],ch
  411360:	xlat   BYTE PTR ds:[ebx]
  411361:	cmp    dl,dh
  411363:	jmp    0x41134c
  411365:	loope  0x41136a
  411367:	pop    ebx
  411368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411369:	fisubr WORD PTR [edx+ebx*1-0x4]
  41136d:	imul   edx,DWORD PTR [ebp-0x42],0x2659dbd0
  411374:	sub    edx,0x14
  411377:	xor    esi,eax
  411379:	pavgw  mm6,QWORD PTR [ebp+0x54]
  41137d:	sub    esi,ebp
  41137f:	(bad)  
  411381:	sub    DWORD PTR [ebx],0xffffff8e
  411384:	fdivp  st(4),st
  411386:	loop   0x41137c
  411388:	(bad)  
  41138b:	int3   
  41138c:	imul   eax,ecx,0x3a
  41138f:	mov    esi,0xec0e0d38
  411394:	jae    0x411383
  411396:	push   es
  411397:	pop    edx
  411398:	pop    es
  411399:	ja     0x411395
  41139b:	in     eax,0x39
  41139d:	xor    al,0x57
  41139f:	rol    DWORD PTR [edi],1
  4113a1:	enter  0xa6f2,0x94
  4113a5:	mov    bl,0x6b
  4113a7:	or     al,0xf6
  4113a9:	xor    ecx,edi
  4113ab:	aam    0xc9
  4113ad:	cmp    DWORD PTR [edx],ebp
  4113af:	cmp    bh,BYTE PTR [ecx+0x62]
  4113b2:	fcomp  DWORD PTR [edi-0x24]
  4113b5:	cmp    ah,BYTE PTR [esi]
  4113b7:	xchg   DWORD PTR [ebp+0x59],esi
  4113ba:	push   edx
  4113bb:	push   edx
  4113bc:	popa   
  4113bd:	rol    BYTE PTR [edx+0x3b42e6df],1
  4113c3:	shl    BYTE PTR ds:0xe4537ed3,cl
  4113c9:	call   0xad1d4fdb
  4113ce:	mov    ds:0x511bc214,al
  4113d3:	jmp    0x41140c
  4113d5:	jecxz  0x4113d2
  4113d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113d8:	out    dx,al
  4113d9:	cmp    al,0x21
  4113db:	pop    ebp
  4113dc:	shr    BYTE PTR [edx-0x1615f8de],1
  4113e2:	and    eax,0xc7480b49
  4113e7:	adc    bh,BYTE PTR [ebp+0x19d1c6f8]
  4113ed:	dec    ebp
  4113ee:	shl    BYTE PTR [edx+0x52],1
  4113f1:	adc    DWORD PTR [esi+0x19],ebp
  4113f4:	aas    
  4113f5:	pusha  
  4113f6:	sub    DWORD PTR [ebx],eax
  4113f8:	mov    ds:0x9cca4f92,eax
  4113fd:	xor    eax,0x7985472b
  411402:	mov    ds:0x52bc1c20,al
  411407:	dec    ebp
  411408:	add    BYTE PTR [ecx],0xd2
  41140b:	rcl    BYTE PTR [ebx-0x62d07f27],cl
  411411:	jmp    0x311ab13
  411416:	iret   
  411417:	scas   al,BYTE PTR es:[edi]
  411418:	push   cs
  411419:	xchg   edx,eax
  41141a:	call   0xc51929d0
  41141f:	xchg   DWORD PTR ds:0x6b43a29a,edi
  411425:	and    BYTE PTR [ecx+ecx*4+0xca0fbac],ch
  41142c:	scas   eax,DWORD PTR es:[edi]
  41142d:	mov    ds:0xcd59ee5b,al
  411432:	ds ds cmc 
  411435:	js     0x4113e5
  411437:	cdq    
  411438:	cmp    eax,0xaf0357a4
  41143d:	(bad)  
  41143e:	sti    
  41143f:	fisttp DWORD PTR [edx]
  411441:	dec    ebp
  411442:	mov    ecx,0xfac6faee
  411447:	fwait
  411448:	adc    esi,DWORD PTR [edi+0x7dd2fb3b]
  41144e:	jp     0x41140c
  411450:	loop   0x41148f
  411452:	sbb    ah,dl
  411454:	dec    esi
  411455:	loope  0x41146d
  411457:	jecxz  0x41145f
  411459:	(bad)  
  41145a:	jg     0x41147e
  41145c:	pop    eax
  41145d:	sub    al,0x11
  41145f:	les    esi,FWORD PTR [eax]
  411461:	jecxz  0x4114c1
  411463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411464:	pop    ebp
  411465:	push   ds
  411466:	sbb    dl,BYTE PTR [edi+0x3ac7f86a]
  41146c:	push   0xffffffa1
  41146e:	mov    edx,ebp
  411470:	sub    eax,0xc5585a9c
  411475:	in     al,dx
  411476:	ficom  WORD PTR [eax-0x35736b8b]
  41147c:	mov    edx,0xdbd27e8f
  411481:	(bad)  
  411482:	mov    esi,0x363250d6
  411487:	fwait
  411488:	xchg   ebx,eax
  411489:	sub    dl,cl
  41148b:	and    edx,0xb05c46f3
  411491:	call   0xf14e:0xcd0b5fe0
  411498:	(bad)  
  411499:	lock add edx,DWORD PTR [edx+0x7d]
  41149d:	xlat   BYTE PTR ds:[ebx]
  41149e:	sbb    ecx,edx
  4114a0:	or     bl,bl
  4114a2:	out    dx,al
  4114a3:	add    ebp,DWORD PTR [ebx+0x33]
  4114a6:	add    al,ah
  4114a8:	out    0x5c,al
  4114aa:	add    ah,BYTE PTR ss:[edx+0x5]
  4114ae:	xor    al,0x4b
  4114b0:	imul   eax,DWORD PTR [ebp+0x7fd939bb],0x3b6c321e
  4114ba:	adc    al,0x1a
  4114bc:	ds inc ebx
  4114be:	cld    
  4114bf:	adc    DWORD PTR [ecx+0x2f],esp
  4114c2:	or     BYTE PTR [edx+0x11bd28c4],dl
  4114c8:	cmp    ebx,ecx
  4114ca:	inc    ecx
  4114cb:	das    
  4114cc:	iret   
  4114cd:	repnz mov esp,0x96d3edea
  4114d3:	in     al,0x11
  4114d5:	adc    eax,0x8c7c7870
  4114da:	jnp    0x411552
  4114dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114dd:	into   
  4114de:	test   al,0x83
  4114e0:	mov    ecx,0x5454f4d4
  4114e5:	loopne 0x41147a
  4114e7:	popf   
  4114e8:	arpl   WORD PTR [esi],sp
  4114ea:	sub    BYTE PTR [eax],dl
  4114ec:	dec    ebp
  4114ed:	inc    eax
  4114ee:	pushf  
  4114ef:	(bad)  
  4114f1:	xchg   esp,eax
  4114f2:	out    0x53,eax
  4114f4:	aas    
  4114f5:	mov    edi,0xd8937666
  4114fa:	(bad)  
  4114fb:	add    eax,0xd37b93ab
  411500:	xchg   edx,eax
  411501:	adc    bh,bl
  411503:	mov    eax,ds:0xbb6a6b17
  411508:	ds and al,0x1f
  41150b:	and    esi,DWORD PTR [edi-0x3aec5f7a]
  411511:	xor    DWORD PTR [ebx-0x48066ee2],esi
  411517:	out    0xc6,al
  411519:	mov    esi,0x6ca92a35
  41151e:	inc    eax
  41151f:	sub    edi,DWORD PTR [edx]
  411521:	adc    al,0x3c
  411523:	popa   
  411524:	bound  edi,QWORD PTR [esi+0x6a9d13b0]
  41152a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41152b:	mov    edi,0x2b0a978e
  411530:	retf   
  411531:	stos   DWORD PTR es:[edi],eax
  411532:	mov    BYTE PTR [edx+edi*1],bl
  411535:	adc    eax,0x9d20cf37
  41153a:	retf   0x2206
  41153d:	add    eax,0xb5479826
  411542:	into   
  411543:	inc    edi
  411544:	add    DWORD PTR [ecx+0x46f0fcb1],edi
  41154a:	(bad)  
  41154b:	cwde   
  41154c:	int    0xd3
  41154e:	stos   BYTE PTR es:[edi],al
  41154f:	mov    al,0x28
  411551:	inc    DWORD PTR [esi+0xd58454]
  411557:	shl    BYTE PTR [edx],1
  411559:	mov    bh,0x4d
  41155b:	fcmovb st,st(2)
  41155d:	mov    esp,0x349a6da0
  411562:	sbb    dh,BYTE PTR [ebx-0x61e0e955]
  411568:	xchg   edx,eax
  411569:	push   ebp
  41156a:	dec    ebp
  41156b:	popf   
  41156c:	loopne 0x411534
  41156e:	xor    al,BYTE PTR [edx]
  411570:	adc    BYTE PTR [esi],al
  411572:	push   cs
  411573:	mov    ah,0x5a
  411575:	pop    edx
  411576:	dec    eax
  411577:	pushf  
  411578:	mov    eax,ds:0x41b2d010
  41157d:	mov    bl,0x97
  41157f:	mov    al,al
  411581:	sub    ah,BYTE PTR [ebx-0x36]
  411584:	dec    esi
  411585:	out    0x0,al
  411587:	mov    WORD PTR [ecx+0x17454f33],ss
  41158d:	test   eax,0x62429c87
  411592:	xlat   BYTE PTR fs:[ebx]
  411594:	adc    eax,0x6ba9a3ad
  411599:	mov    ds:0x880917a8,eax
  41159e:	dec    esp
  41159f:	js     0x41161c
  4115a1:	out    0xec,eax
  4115a3:	retf   0xd113
  4115a6:	lock mov dh,0xd4
  4115a9:	sub    ch,BYTE PTR [ecx+0x3a]
  4115ac:	adc    esp,edx
  4115ae:	(bad)  
  4115af:	fcomp  QWORD PTR ds:0xda730f03
  4115b5:	pop    ebx
  4115b6:	enter  0x7718,0x26
  4115ba:	mov    ds,WORD PTR [eax-0x38]
  4115bd:	push   ecx
  4115be:	scas   al,BYTE PTR es:[edi]
  4115bf:	sub    edx,ebp
  4115c1:	cwde   
  4115c2:	hlt    
  4115c3:	push   ds
  4115c4:	outs   dx,DWORD PTR ds:[esi]
  4115c5:	jb     0x4115d8
  4115c7:	xor    eax,0xfa5c1e8
  4115cc:	pop    es
  4115cd:	cmp    eax,0x17e57f4a
  4115d2:	mov    bl,BYTE PTR [esi]
  4115d4:	or     ch,BYTE PTR [esi]
  4115d6:	sub    al,0x28
  4115d8:	xor    dl,BYTE PTR [ebp+0x6260f557]
  4115de:	adc    bh,ah
  4115e0:	push   ss
  4115e1:	sti    
  4115e2:	loop   0x4115c9
  4115e4:	xor    BYTE PTR [ecx],bl
  4115e6:	adc    eax,0x45723bb3
  4115eb:	fld    DWORD PTR [esi]
  4115ed:	pop    ss
  4115ee:	setl   BYTE PTR [edi]
  4115f1:	(bad)  
  4115f2:	or     ebp,esi
  4115f4:	cmp    al,0xbc
  4115f6:	mov    al,cs:0xadd06073
  4115fc:	adc    ecx,edx
  4115fe:	jecxz  0x41164e
  411600:	add    dh,BYTE PTR [eax-0x56]
  411603:	xadd   esp,edx
  411606:	and    eax,0x1e98abf8
  41160b:	lods   eax,DWORD PTR ds:[esi]
  41160c:	add    BYTE PTR ss:[ebp-0x6dfd35ff],dl
  411613:	out    dx,eax
  411614:	inc    edi
  411615:	pop    eax
  411616:	lock jle 0x4115d8
  411619:	xchg   esp,eax
  41161a:	int3   
  41161b:	nop
  41161c:	cmp    eax,0x7e93b71
  411621:	add    DWORD PTR [esi-0x64],ebx
  411624:	test   ah,cl
  411626:	inc    edi
  411627:	pop    edx
  411628:	test   BYTE PTR [esi+0x7b],dl
  41162b:	mov    BYTE PTR [esi+0x4b],0xd3
  41162f:	repnz and ch,bh
  411632:	test   BYTE PTR [eax],al
  411634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411635:	idiv   DWORD PTR [esi-0x319d2442]
  41163b:	inc    eax
  41163c:	cld    
  41163d:	ins    DWORD PTR es:[edi],dx
  41163e:	mov    ?,ebp
  411640:	and    al,0x11
  411642:	cmp    BYTE PTR [esi-0x31eeb002],bh
  411648:	loope  0x4116ac
  41164a:	stos   BYTE PTR es:[edi],al
  41164b:	jb     0x411606
  41164d:	cmp    ch,BYTE PTR [esi-0x70]
  411650:	aam    0xfe
  411652:	sar    DWORD PTR [ebx*8-0x7f80fdfe],cl
  411659:	mov    edx,0x1a16c604
  41165e:	scas   al,BYTE PTR es:[edi]
  41165f:	ins    DWORD PTR es:[edi],dx
  411660:	out    dx,al
  411661:	dec    edi
  411662:	mov    edx,0xac357287
  411667:	call   0xac07d550
  41166c:	call   0x76ba6650
  411671:	mov    ch,0x9a
  411673:	xor    ax,WORD PTR [ecx-0x35]
  411677:	mov    dh,0xb0
  411679:	mov    edi,0x4752ec47
  41167e:	sbb    BYTE PTR [ebx+0x17],al
  411681:	jno    0x41168c
  411683:	push   cs
  411684:	sbb    eax,0x4a3ce9c9
  411689:	mov    dl,0xa3
  41168b:	inc    edx
  41168c:	mov    cl,BYTE PTR [ecx-0x18]
  41168f:	fwait
  411690:	pop    eax
  411691:	test   eax,0xfe575d1e
  411696:	int3   
  411697:	cmp    BYTE PTR [eax-0x1f],0xf
  41169b:	push   ss
  41169c:	and    al,ch
  41169e:	dec    DWORD PTR [edi-0x73]
  4116a1:	inc    esi
  4116a2:	jmp    0x47bc77bd
  4116a7:	adc    al,0x6c
  4116a9:	(bad)  
  4116aa:	lahf   
  4116ab:	stos   DWORD PTR es:[edi],eax
  4116ac:	mov    ds:0x2c6b8368,al
  4116b1:	jns    0x4116bc
  4116b3:	outs   dx,BYTE PTR ds:[esi]
  4116b4:	mov    DWORD PTR [ecx+0x49],ebx
  4116b7:	out    dx,al
  4116b8:	test   DWORD PTR [esi+0x3a077010],ecx
  4116be:	in     eax,dx
  4116bf:	or     esi,ebp
  4116c1:	pop    ebp
  4116c2:	add    ch,BYTE PTR [ebx-0x2381bb55]
  4116c8:	xchg   ebp,eax
  4116c9:	mov    edx,0xfc422134
  4116ce:	jmp    0x411741
  4116d0:	xor    BYTE PTR [edx-0x75],ch
  4116d3:	xor    edi,edi
  4116d5:	and    dl,BYTE PTR [ebx+0x15]
  4116d8:	xor    dh,BYTE PTR [edi]
  4116da:	pop    ebp
  4116db:	cdq    
  4116dc:	inc    eax
  4116dd:	push   ebp
  4116de:	cmp    edx,DWORD PTR [edi]
  4116e0:	dec    eax
  4116e1:	unpcklps xmm2,XMMWORD PTR [edx+0x4d2886f4]
  4116e8:	dec    ecx
  4116e9:	push   es
  4116ea:	inc    ebp
  4116eb:	fdivrp st(4),st
  4116ed:	adc    dh,cl
  4116ef:	(bad)  
  4116f0:	push   esi
  4116f1:	in     eax,0xa6
  4116f3:	pop    esi
  4116f4:	aas    
  4116f5:	add    eax,0x69af4d24
  4116fa:	pop    ebp
  4116fb:	or     bl,BYTE PTR [ebp+eax*8+0x494b04fa]
  411702:	xor    DWORD PTR [eax+0xf8e2ef1],0x9d63113d
  41170c:	test   al,0x35
  41170e:	sub    BYTE PTR [edx],bh
  411710:	mov    eax,DWORD PTR [ebp-0x41696755]
  411716:	fdivr  DWORD PTR [eax-0x4200621d]
  41171c:	enter  0xb561,0x44
  411720:	mov    esp,0xc9e466ed
  411725:	dec    edx
  411726:	aam    0x84
  411728:	shl    ch,1
  41172a:	and    cl,BYTE PTR [edx]
  41172c:	mov    dl,0xd1
  41172e:	or     BYTE PTR [eax-0x37],dh
  411731:	add    DWORD PTR [ecx],edx
  411733:	pop    edx
  411734:	adc    ebp,ecx
  411736:	ret    0x5e35
  411739:	loopne 0x4117b1
  41173b:	pusha  
  41173c:	test   BYTE PTR [ecx-0x64],dl
  41173f:	pop    esi
  411740:	xchg   ecx,eax
  411741:	push   cs
  411742:	cmc    
  411743:	xchg   ecx,eax
  411744:	xchg   DWORD PTR [edi+0x658a2098],ebx
  41174a:	or     al,dh
  41174c:	mov    ebp,0x4605a733
  411751:	cmp    BYTE PTR [ebx],ah
  411753:	mov    edx,0x8bba3649
  411758:	aad    0x33
  41175a:	jae    0x411737
  41175c:	inc    edx
  41175d:	test   al,0x7e
  41175f:	pop    ss
  411760:	add    DWORD PTR [esi+0x8],0xe3206e37
  411767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411768:	sub    dl,bh
  41176a:	sub    ch,dl
  41176c:	ds add eax,0x4e685fff
  411772:	xchg   cl,dl
  411774:	mov    bl,BYTE PTR [eax-0x4d]
  411777:	push   eax
  411778:	dec    eax
  411779:	aad    0xd1
  41177b:	jl     0x411764
  41177d:	sti    
  41177e:	mov    ch,0xc8
  411780:	and    al,BYTE PTR [eax]
  411782:	lea    esi,[ebx]
  411784:	stc    
  411785:	outs   dx,BYTE PTR ds:[esi]
  411786:	test   eax,0x56141ab2
  41178b:	sbb    al,0x70
  41178d:	pushf  
  41178e:	arpl   WORD PTR [edi+0xb439124],bx
  411794:	and    eax,0x6e984a2e
  411799:	dec    ecx
  41179a:	es ss ss call 0xfc98c91f
  4117a2:	ss push es
  4117a4:	inc    ebp
  4117a5:	dec    ecx
  4117a6:	inc    ecx
  4117a7:	jg     0x4117bf
  4117a9:	pop    edx
  4117aa:	leave  
  4117ab:	outs   dx,BYTE PTR ds:[esi]
  4117ac:	xor    BYTE PTR [edx],dh
  4117ae:	adc    ch,cl
  4117b0:	pop    es
  4117b1:	xor    BYTE PTR [esp+eiz*4+0x72],0x49
  4117b6:	add    al,0x4d
  4117b8:	or     DWORD PTR [edx+0x50],ebx
  4117bb:	scas   al,BYTE PTR es:[edi]
  4117bc:	loope  0x4117e2
  4117be:	dec    edi
  4117bf:	lock nop
  4117c1:	jae    0x411794
  4117c3:	cwde   
  4117c4:	and    eax,0x940cad3d
  4117c9:	adc    esp,DWORD PTR [esi+eiz*4-0x7983c04c]
  4117d0:	push   cs
  4117d1:	and    BYTE PTR [edi],cl
  4117d3:	sti    
  4117d4:	aaa    
  4117d5:	imul   ecx,DWORD PTR [ebx-0x5c],0xffffffa8
  4117d9:	les    ebx,FWORD PTR [ebp-0xfcd3902]
  4117df:	dec    esi
  4117e0:	dec    ecx
  4117e1:	xchg   edx,eax
  4117e2:	retf   0x5d49
  4117e5:	mov    edi,0x487dc8f8
  4117ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117eb:	and    al,0x57
  4117ed:	inc    ebx
  4117ee:	lock sti 
  4117f0:	fs push cs
  4117f2:	mov    WORD PTR [ebx],ss
  4117f4:	sub    esi,eax
  4117f6:	fisttp WORD PTR ds:0x2dd826f1
  4117fc:	arpl   WORD PTR [ecx],bx
  4117fe:	mov    eax,0xbc49397b
  411803:	mov    edi,0xd9ab624d
  411808:	pushf  
  411809:	xchg   ebx,eax
  41180a:	mov    esp,0x22f3cc09
  41180f:	popf   
  411810:	mov    ecx,0x1a5ebcf4
  411815:	inc    edx
  411816:	jae    0x411862
  411818:	fisttp WORD PTR [esi]
  41181a:	jl     0x41181f
  41181c:	sbb    bh,dl
  41181e:	outs   dx,BYTE PTR ds:[esi]
  41181f:	xor    al,0x21
  411821:	mov    edx,0xd83cffa2
  411826:	mov    al,ds:0x24672ac6
  41182b:	dec    edi
  41182c:	push   0x6ee4b7e3
  411831:	sub    BYTE PTR [edi],cl
  411833:	ja     0x4117d7
  411835:	pop    eax
  411836:	lods   al,BYTE PTR ds:[esi]
  411837:	mov    ds:0xeed5d92a,eax
  41183c:	push   ebp
  41183d:	mov    edi,0xc715bca3
  411842:	fsub   DWORD PTR [esi]
  411844:	jnp    0x4118c0
  411846:	lods   eax,DWORD PTR ds:[esi]
  411847:	push   eax
  411848:	js     0x41182b
  41184a:	js     0x41187d
  41184c:	dec    esp
  41184d:	gs mov ebp,0xb727d8f4
  411853:	adc    edx,esp
  411855:	arpl   WORD PTR [edi],ax
  411857:	out    0xe6,eax
  411859:	nop    DWORD PTR [eax]
  41185c:	and    ebp,esi
  41185e:	bound  ebx,QWORD PTR [edx+0x57]
  411861:	jmp    0xc35:0x6385a8ae
  411868:	sbb    eax,0x85f02974
  41186d:	jge    0x41184b
  41186f:	nop
  411870:	xor    ah,0x45
  411873:	mov    bl,BYTE PTR [eax-0x7a944c4c]
  411879:	out    dx,eax
  41187a:	mov    ecx,0xaf4ad419
  41187f:	jmp    DWORD PTR [esi]
  411881:	call   0x7def:0xe3aff94
  411888:	in     al,0xf8
  41188a:	ds je  0x411854
  41188d:	iret   
  41188e:	and    BYTE PTR [ebx-0x18],ch
  411891:	inc    esi
  411892:	push   edx
  411893:	or     edi,DWORD PTR [edx+ebx*4]
  411896:	mov    ch,0x6e
  411898:	adc    cl,ch
  41189a:	jbe    0x411876
  41189c:	mov    ds:0x19d97692,al
  4118a1:	sbb    esi,DWORD PTR [esi]
  4118a3:	shl    DWORD PTR [edx],0xe1
  4118a6:	movlps QWORD PTR [eax+0x48c35f93],xmm1
  4118ad:	inc    esi
  4118ae:	or     eax,0xb9e4bfb8
  4118b3:	ret    
  4118b4:	js     0x411933
  4118b6:	push   edx
  4118b7:	mov    esp,0x81b3b790
  4118bc:	mov    edx,DWORD PTR ds:0xd1faf8b5
  4118c2:	add    bl,BYTE PTR [ebp+0x486d824]
  4118c8:	mov    ebp,0x20cdf49a
  4118cd:	mov    cl,0xf1
  4118d0:	pop    ebx
  4118d1:	pop    ecx
  4118d2:	out    0xe4,eax
  4118d4:	sbb    al,0xcf
  4118d6:	les    eax,FWORD PTR [esi+0x38f91482]
  4118dc:	and    al,0xc
  4118de:	(bad)  
  4118df:	aaa    
  4118e0:	or     DWORD PTR [ecx-0x16],0x3177abf4
  4118e7:	fidivr WORD PTR [ebx]
  4118e9:	loope  0x411915
  4118eb:	rcr    BYTE PTR [edx],cl
  4118ed:	inc    edx
  4118ee:	cmp    ebx,DWORD PTR cs:[ebp+0x614bb927]
  4118f5:	wrmsr  
  4118f7:	loop   0x4118ab
  4118f9:	pop    edi
  4118fa:	daa    
  4118fb:	ror    BYTE PTR [eax],1
  4118fd:	or     bh,bh
  4118ff:	xchg   ecx,eax
  411900:	push   0x1e
  411902:	cwde   
  411903:	das    
  411904:	push   ecx
  411905:	sub    DWORD PTR [eax],ecx
  411907:	mov    ecx,0xd2eaca58
  41190c:	sahf   
  41190d:	jns    0x411950
  41190f:	out    dx,al
  411910:	inc    edi
  411911:	sub    al,0x9b
  411913:	sbb    ch,BYTE PTR [ebx+edx*2+0x8ce2ce6]
  41191a:	mov    edi,DWORD PTR [eax+eiz*4-0x58]
  41191e:	fcom   st(2)
  411920:	iret   
  411921:	sbb    al,0xb3
  411923:	jl     0x411931
  411925:	pop    ebp
  411926:	rcl    BYTE PTR [esi+eax*2+0x5a],0x7e
  41192b:	rcl    DWORD PTR [eax-0x5427f6df],0x3d
  411932:	xor    BYTE PTR [ebx+edi*4-0xded1bb5],bh
  411939:	(bad)  
  41193a:	nop
  41193b:	push   edi
  41193c:	mov    edi,0xf3d18077
  411941:	xlat   BYTE PTR ds:[ebx]
  411942:	add    al,0x94
  411944:	mov    esp,0x21648de
  411949:	arpl   sp,bp
  41194b:	mov    ebp,0x46b74de2
  411950:	mov    cs,WORD PTR [ebx+0x48]
  411953:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411954:	inc    ebx
  411955:	push   ebx
  411956:	jp     0x411959
  411958:	je     0x411966
  41195a:	stos   DWORD PTR es:[edi],eax
  41195b:	mov    bh,ah
  41195d:	and    ecx,edx
  41195f:	sti    
  411960:	mov    dh,0x21
  411962:	inc    edx
  411963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411964:	imul   eax,DWORD PTR [edi-0x6c553526],0x1e
  41196b:	sub    eax,esp
  41196d:	aad    0xaf
  41196f:	leave  
  411970:	mov    ds:0x4c210647,eax
  411975:	push   0x33450dc1
  41197a:	mov    edi,0x8a336083
  41197f:	lahf   
  411980:	xchg   edi,eax
  411981:	jmp    0x3efd:0x6471c1b
  411988:	add    BYTE PTR [edx+0x2fa99e27],cl
  41198e:	mov    dh,0x2b
  411990:	push   0x260d3a66
  411995:	aam    0xd7
  411997:	sbb    DWORD PTR [edx],esi
  411999:	pop    ds
  41199a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41199b:	mul    BYTE PTR [edx+0x69]
  41199e:	push   edi
  41199f:	es aam 0xe4
  4119a2:	scas   eax,DWORD PTR es:[edi]
  4119a3:	mov    eax,ds:0x918c9354
  4119a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119a9:	stos   BYTE PTR es:[edi],al
  4119aa:	mov    WORD PTR [edx],ss
  4119ac:	adc    al,0x77
  4119ae:	out    dx,eax
  4119af:	sub    eax,edi
  4119b1:	mov    ebx,0xa2029bde
  4119b6:	retf   
  4119b7:	adc    dh,BYTE PTR [eax]
  4119b9:	shl    DWORD PTR [edx+0x27],cl
  4119bc:	jnp    0x411a08
  4119be:	(bad)
  4119c2:	add    BYTE PTR [edi+0x3ff2f245],ch
  4119c8:	bswap  edi
  4119ca:	xor    ecx,edx
  4119cc:	in     al,0x2e
  4119ce:	dec    esi
  4119cf:	inc    esi
  4119d0:	mov    ah,0xdc
  4119d2:	repz push esi
  4119d4:	retf   0x9f6f
  4119d7:	sbb    al,0x2a
  4119d9:	xchg   esp,eax
  4119da:	push   ebx
  4119db:	xor    cl,dl
  4119dd:	(bad)  [ebx-0x68144230]
  4119e3:	mov    al,0xca
  4119e5:	inc    DWORD PTR [ebx]
  4119e7:	cdq    
  4119e8:	jg     0x41199a
  4119ea:	sub    ch,BYTE PTR [eax+ebx*2]
  4119ed:	dec    esi
  4119ee:	mul    BYTE PTR [edi]
  4119f0:	(bad)  [eax+0x7f]
  4119f3:	cdq    
  4119f4:	adc    esi,DWORD PTR [edi-0x1025d48b]
  4119fa:	fsubr  QWORD PTR [ebp+0x1c]
  4119fd:	loop   0x411a66
  4119ff:	inc    ebx
  411a00:	mov    eax,ds:0x70b365f0
  411a05:	and    al,0x80
  411a07:	or     eax,0xe70606d0
  411a0c:	jge    0x411a62
  411a0e:	mov    esp,DWORD PTR [edi+0x47]
  411a11:	mov    ds:0x95e53bd3,eax
  411a16:	cwde   
  411a17:	inc    ecx
  411a18:	dec    ecx
  411a19:	mov    dh,0x3
  411a1b:	mov    WORD PTR [ebx+0x14d8aee5],?
  411a21:	jmp    0x411a7e
  411a23:	(bad)  
  411a24:	(bad)  
  411a25:	(bad)  
  411a26:	pop    ds
  411a27:	test   DWORD PTR [edx+esi*1+0x58],0xe8916a51
  411a2f:	or     DWORD PTR [eax],esp
  411a31:	pop    es
  411a32:	pushf  
  411a33:	mov    ?,WORD PTR [edi]
  411a35:	cdq    
  411a36:	or     DWORD PTR [ecx],edx
  411a38:	iret   
  411a39:	xchg   esp,eax
  411a3a:	les    ecx,FWORD PTR [edi+esi*8]
  411a3d:	(bad)  
  411a3f:	pop    ss
  411a40:	dec    edi
  411a41:	xchg   edx,eax
  411a42:	addr16 pop edi
  411a44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a45:	cdq    
  411a46:	cld    
  411a47:	push   es
  411a48:	lods   al,BYTE PTR ds:[esi]
  411a49:	stos   BYTE PTR es:[edi],al
  411a4a:	mov    bh,0x1d
  411a4c:	mov    ds:0xa7f0b99e,al
  411a51:	jl     0x411a65
  411a53:	loope  0x411aad
  411a55:	dec    DWORD PTR [ebx]
  411a57:	stos   BYTE PTR es:[edi],al
  411a58:	inc    eax
  411a59:	sbb    ch,dl
  411a5b:	cli    
  411a5c:	arpl   WORD PTR ds:[edi-0x7c376f81],sp
  411a63:	loope  0x411aa6
  411a65:	int    0xca
  411a67:	xor    esp,DWORD PTR [esi+0x5ab9d363]
  411a6d:	pop    ds
  411a6e:	pop    esp
  411a6f:	loop   0x411aae
  411a71:	(bad)  
  411a72:	outs   dx,BYTE PTR ds:[esi]
  411a73:	push   edi
  411a74:	push   ecx
  411a75:	sbb    BYTE PTR [esi+0x4dc90341],ah
  411a7b:	stos   BYTE PTR es:[edi],al
  411a7c:	or     esi,DWORD PTR [edx-0x6]
  411a7f:	mov    eax,0xd04dceef
  411a84:	pop    ecx
  411a85:	retf   0xa784
  411a88:	mov    edi,0xf941b21a
  411a8d:	outs   dx,DWORD PTR ds:[esi]
  411a8e:	push   ecx
  411a8f:	xor    eax,0x9e0849ef
  411a94:	adc    esp,0xc
  411a97:	and    DWORD PTR [eax+eiz*8-0x6b],edx
  411a9b:	popa   
  411a9c:	into   
  411a9d:	sbb    eax,0x9183a95b
  411aa2:	rcr    ecx,cl
  411aa4:	test   DWORD PTR [eax+0x6d1c2f0f],esp
  411aaa:	adc    BYTE PTR [ecx+0x7b920d70],bl
  411ab0:	loope  0x411aff
  411ab2:	in     eax,dx
  411ab3:	fld    TBYTE PTR [esi]
  411ab5:	aam    0x8c
  411ab7:	in     al,dx
  411ab8:	sti    
  411ab9:	popf   
  411aba:	out    dx,eax
  411abb:	in     eax,dx
  411abc:	jbe    0x411b0b
  411abe:	push   edi
  411abf:	retf   0xc228
  411ac2:	aad    0xb9
  411ac4:	sbb    al,0xd7
  411ac6:	push   cs
  411ac7:	jo     0x411ae3
  411ac9:	adc    eax,0xc15efdf1
  411ace:	test   bl,bl
  411ad0:	inc    ebp
  411ad1:	sbb    ch,BYTE PTR [ebx+ebx*4]
  411ad4:	xchg   BYTE PTR [edi+0x4d],bl
  411ad7:	aas    
  411ad8:	or     al,BYTE PTR [ebp+0xed733a2]
  411ade:	aaa    
  411adf:	xchg   ebx,eax
  411ae0:	dec    edi
  411ae1:	xor    eax,0xe1f3d5a5
  411ae6:	mov    ds:0x32773ffa,eax
  411aeb:	or     bl,BYTE PTR [edx+0x1c2bc3c2]
  411af1:	pop    eax
  411af2:	or     bl,ah
  411af4:	mov    dl,0x4a
  411af6:	in     al,0x88
  411af8:	sub    bh,ch
  411afa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411afb:	jge    0x411ab3
  411afd:	pop    esp
  411afe:	or     DWORD PTR [ecx+0x3080966b],esi
  411b04:	or     al,0xce
  411b06:	dec    ebx
  411b07:	out    0x1,eax
  411b09:	loopne 0x411aad
  411b0b:	sbb    eax,0xb686276f
  411b10:	push   esp
  411b11:	and    al,cl
  411b13:	pop    eax
  411b14:	and    ah,dh
  411b16:	popa   
  411b17:	repz sbb eax,0xac132229
  411b1d:	cmp    DWORD PTR [ebp+edi*2+0x1e],ecx
  411b21:	mov    dl,0xa1
  411b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b24:	add    eax,0x92c603af
  411b29:	div    BYTE PTR [ebx+0x70]
  411b2c:	aas    
  411b2d:	mov    bl,0x94
  411b2f:	cmp    ebp,eax
  411b31:	push   ecx
  411b32:	bsf    eax,DWORD PTR [eax]
  411b35:	mov    ah,0x20
  411b37:	(bad)  [edi+0x7d285cc7]
  411b3d:	adc    ah,BYTE PTR [ecx+0x50]
  411b40:	inc    esi
  411b41:	repz inc esi
  411b43:	inc    edx
  411b44:	jbe    0x411bbd
  411b46:	and    al,0x69
  411b48:	test   dh,dl
  411b4a:	xor    eax,eax
  411b4c:	adc    BYTE PTR [edx],al
  411b4e:	adc    esp,DWORD PTR [ebp+0x71]
  411b51:	repz lahf 
  411b53:	int3   
  411b54:	shl    BYTE PTR [esi+0x5aceba6d],1
  411b5a:	jmp    0x1f9f:0x44f169ae
  411b61:	sub    ecx,DWORD PTR ds:0x959d4b83
  411b67:	sub    ebp,edx
  411b69:	out    0x7a,eax
  411b6b:	rol    DWORD PTR [eax+0x5f],0xd9
  411b6f:	jge    0x411b97
  411b71:	fmul   QWORD PTR [edi-0x13]
  411b74:	pop    eax
  411b75:	clc    
  411b76:	stc    
  411b77:	jmp    0x66f0a8db
  411b7c:	out    dx,al
  411b7d:	push   0x60
  411b7f:	mov    edx,0x10b1b4fc
  411b84:	scas   al,BYTE PTR es:[edi]
  411b85:	sub    eax,0x429f389c
  411b8a:	out    0xa4,al
  411b8c:	inc    ecx
  411b8d:	add    BYTE PTR [ecx-0x1e],cl
  411b90:	les    esp,FWORD PTR [edi-0x5bd3aa4f]
  411b96:	(bad)  [eax+0x64]
  411b99:	fiadd  DWORD PTR [edi-0xa935b32]
  411b9f:	aaa    
  411ba0:	or     BYTE PTR [eax-0xb5a6a5f],0xf
  411ba7:	add    BYTE PTR [ebx+edi*2],bh
  411baa:	xchg   esi,esp
  411bac:	(bad)  
  411bad:	push   ds
  411bae:	or     DWORD PTR [ecx-0x25],edi
  411bb1:	jne    0x411c2f
  411bb3:	repz aam 0xff
  411bb6:	ficomp WORD PTR [ecx-0x2]
  411bb9:	cmp    eax,0x570113af
  411bbe:	or     DWORD PTR [ebp*8-0x4e45afe9],edi
  411bc5:	ja     0x411b4c
  411bc7:	sar    DWORD PTR [edi],1
  411bc9:	rcl    BYTE PTR ds:0xa8af915d,0x72
  411bd0:	out    0x1d,eax
  411bd2:	cld    
  411bd3:	and    eax,0x463ae33
  411bd8:	and    BYTE PTR ds:0xd625aa7f,dl
  411bde:	jnp    0x411b86
  411be0:	mov    cl,0xa4
  411be2:	mov    BYTE PTR [edx-0x1b0449d5],dh
  411be8:	xor    al,0x62
  411bea:	jno    0x411c38
  411bec:	inc    edx
  411bed:	or     eax,0xe88746c7
  411bf2:	adc    bh,BYTE PTR [edx+0x2a]
  411bf5:	leave  
  411bf6:	pusha  
  411bf7:	sub    edi,eax
  411bf9:	popf   
  411bfa:	imul   BYTE PTR [esi*4+0x3379a8b1]
  411c01:	std    
  411c02:	inc    esp
  411c03:	aaa    
  411c04:	jge    0x411bb4
  411c06:	lock jecxz 0x411c75
  411c09:	push   edi
  411c0a:	rcr    BYTE PTR [edx+0x30d0537c],0xb
  411c11:	aas    
  411c12:	test   BYTE PTR [ebp+0x798b1a99],al
  411c18:	test   esi,edi
  411c1a:	jg     0x411c14
  411c1c:	(bad)  
  411c1d:	std    
  411c1e:	dec    esi
  411c1f:	add    BYTE PTR [esi],dh
  411c21:	shl    edx,0x69
  411c24:	dec    ecx
  411c25:	sub    eax,0x25957593
  411c2a:	shld   DWORD PTR [ebp-0xa677a4e],esi,0xf7
  411c32:	ret    0xbdde
  411c35:	jp     0x411bff
  411c37:	test   eax,0x89a3dbef
  411c3c:	mov    eax,0xefeeadf2
  411c41:	das    
  411c42:	mov    si,0xb629
  411c46:	out    dx,al
  411c47:	inc    ebx
  411c48:	mov    ebp,0xfb57431b
  411c4d:	push   eax
  411c4e:	icebp  
  411c4f:	cmp    edx,DWORD PTR [eax-0x14]
  411c52:	jge    0x411c3b
  411c54:	mov    bl,BYTE PTR [edi-0x5e09689e]
  411c5a:	sbb    BYTE PTR [edx+eiz*1-0x58],0x18
  411c5f:	add    al,0x8e
  411c61:	aas    
  411c62:	xchg   esp,eax
  411c63:	call   0xe527:0x56ad4d7
  411c6a:	rol    bl,1
  411c6c:	test   BYTE PTR [esi],0xef
  411c6f:	(bad)  
  411c71:	std    
  411c72:	test   eax,0x11d7187b
  411c77:	cmp    eax,edi
  411c79:	xchg   ecx,eax
  411c7a:	in     eax,dx
  411c7b:	int3   
  411c7c:	in     al,dx
  411c7d:	jge    0x411ca7
  411c7f:	jmp    0x9e5e:0x93fde934
  411c86:	jae    0x411c1f
  411c88:	sub    edx,DWORD PTR ds:0x3b980ad3
  411c8e:	mov    edx,0x41b09ac1
  411c93:	or     BYTE PTR [edi],dl
  411c95:	jmp    0xb4ab7112
  411c9a:	sub    eax,0x4320086d
  411c9f:	xor    DWORD PTR [ebx],esp
  411ca1:	cmp    esp,eax
  411ca3:	or     eax,0xaeb7f3fe
  411ca8:	test   dl,dh
  411caa:	mov    bh,0xa3
  411cac:	retf   0xfd62
  411caf:	dec    ecx
  411cb0:	mov    esp,0xaac70ac2
  411cb5:	add    cl,al
  411cb7:	add    cl,0xbe
  411cba:	test   DWORD PTR [edi-0x7466cb9b],0x8ef44ef2
  411cc4:	inc    edx
  411cc5:	aad    0xe5
  411cc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cc8:	mov    dh,0xa8
  411cca:	addr16 xchg ecx,eax
  411ccc:	cdq    
  411ccd:	int3   
  411cce:	pop    eax
  411ccf:	and    bl,al
  411cd1:	ds int3 
  411cd3:	mov    esp,0xd64105c3
  411cd8:	mov    ecx,0x69a12c29
  411cdd:	in     eax,dx
  411cde:	jns    0x411c73
  411ce0:	rol    BYTE PTR [ebx-0x34a07a1c],cl
  411ce6:	pop    ss
  411ce7:	mov    dl,0xb9
  411ce9:	mov    al,ds:0x2020736e
  411cef:	loop   0x411ce6
  411cf1:	scas   eax,DWORD PTR es:[edi]
  411cf2:	bnd ja 0x411d17
  411cf5:	push   ebp
  411cf6:	lods   al,BYTE PTR ds:[esi]
  411cf7:	and    DWORD PTR [esi-0x39],edx
  411cfa:	xchg   edi,eax
  411cfb:	in     eax,dx
  411cfc:	ins    DWORD PTR es:[edi],dx
  411cfd:	push   0x37e8d486
  411d02:	sahf   
  411d03:	aas    
  411d04:	bound  edi,QWORD PTR ds:0xe81c3cab
  411d0a:	jmp    0x6b4f:0x1c904a0b
  411d11:	test   DWORD PTR [ecx+ebx*8],0x2725198b
  411d18:	inc    edx
  411d19:	nop
  411d1a:	inc    edi
  411d1b:	ficom  WORD PTR [eax-0x4a4741a7]
  411d21:	add    eax,DWORD PTR [ebp-0x17004d88]
  411d27:	push   0x52198eca
  411d2c:	inc    ebx
  411d2d:	mov    ah,0x6d
  411d2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d30:	cmp    eax,0xafa94ba9
  411d35:	cmp    al,0x87
  411d37:	std    
  411d38:	xchg   ebp,eax
  411d39:	pushf  
  411d3a:	add    al,0x56
  411d3c:	jp     0x411d6a
  411d3e:	and    DWORD PTR [esi-0x43],0x4d
  411d42:	jb     0x411d09
  411d44:	es pop ecx
  411d46:	mov    ds:0xed39b86e,eax
  411d4b:	pushf  
  411d4c:	cdq    
  411d4d:	shr    DWORD PTR [ebp+ebx*2+0x6a],0x27
  411d52:	jnp    0x411d8b
  411d54:	push   esi
  411d55:	xchg   edx,eax
  411d56:	xchg   ebp,eax
  411d57:	cmp    DWORD PTR [eax+0x690c324e],edx
  411d5d:	push   eax
  411d5e:	jge    0x411d78
  411d60:	jge    0x411cec
  411d62:	ss in  al,0x21
  411d65:	push   eax
  411d66:	pop    esi
  411d67:	mov    ds:0xed38e072,eax
  411d6c:	mov    ch,0x69
  411d6e:	cmp    bh,bl
  411d70:	mov    ds:0x5b9bd4f8,al
  411d75:	mov    eax,ds:0x8455cd97
  411d7a:	hlt    
  411d7b:	xchg   esp,eax
  411d7c:	outs   dx,DWORD PTR ds:[esi]
  411d7d:	mov    BYTE PTR [ebx+0x43],al
  411d80:	jno    0x411d9b
  411d82:	xchg   esi,eax
  411d83:	mov    eax,ds:0xeb76cbf0
  411d88:	in     al,0x80
  411d8a:	push   0x856fbb74
  411d8f:	pop    eax
  411d90:	xor    dl,bl
  411d92:	or     esp,DWORD PTR [ecx+0x6e]
  411d95:	mov    edx,0x41f0d64d
  411d9a:	ins    BYTE PTR es:[edi],dx
  411d9b:	inc    esi
  411d9c:	in     eax,dx
  411d9d:	js     0x411db4
  411d9f:	push   ds
  411da0:	ret    
  411da1:	outs   dx,DWORD PTR ds:[esi]
  411da2:	icebp  
  411da3:	(bad)  
  411da4:	mov    ebx,0xf5cae28d
  411da9:	xor    cl,BYTE PTR [eax+0x68fab3d1]
  411daf:	push   0x83d03874
  411db4:	icebp  
  411db5:	das    
  411db6:	fstp   QWORD PTR [esi+0x1c130f72]
  411dbc:	xchg   edi,eax
  411dbd:	pop    esi
  411dbe:	(bad)  
  411dbf:	stos   DWORD PTR es:[edi],eax
  411dc0:	push   0xa947f352
  411dc5:	clc    
  411dc6:	push   esi
  411dc7:	xor    bh,BYTE PTR [esi+esi*8]
  411dca:	(bad)  
  411dcb:	mov    esi,0x57a6093c
  411dd0:	fisttp WORD PTR [edx-0x4d16a436]
  411dd6:	push   ds
  411dd7:	pop    ecx
  411dd8:	call   0xe9707d01
  411ddd:	xchg   edx,eax
  411dde:	mov    ?,WORD PTR [ebx+0xd]
  411de1:	daa    
  411de2:	popf   
  411de3:	mov    edi,0xc907a57
  411de8:	pop    es
  411de9:	repnz mov fs,WORD PTR [ebx]
  411dec:	cdq    
  411ded:	xchg   BYTE PTR [esi],cl
  411def:	lea    ecx,[edx+0x189ae97c]
  411df5:	sub    eax,0xc89b8fe5
  411dfa:	sub    BYTE PTR [edx+0x4d],bl
  411dfd:	mov    ds:0xae4a6f0f,al
  411e02:	retf   0x47f8
  411e05:	dec    esi
  411e06:	xlat   BYTE PTR ds:[ebx]
  411e07:	test   eax,0x2b7573d2
  411e0c:	out    0xf4,al
  411e0e:	jl     0x411dc7
  411e10:	ins    DWORD PTR es:[edi],dx
  411e11:	push   0x7bbd8664
  411e16:	outs   dx,DWORD PTR ds:[esi]
  411e17:	pop    es
  411e18:	loop   0x411e6c
  411e1a:	cs push eax
  411e1c:	xchg   esp,eax
  411e1d:	xor    BYTE PTR [ebp-0x73],bl
  411e20:	inc    esp
  411e21:	scas   eax,DWORD PTR es:[edi]
  411e22:	cli    
  411e23:	mov    edi,DWORD PTR [eax+eiz*1-0x1f]
  411e27:	retf   0xe02b
  411e2a:	pop    ebx
  411e2b:	cmp    al,0x0
  411e2d:	sbb    ebx,edi
  411e2f:	xchg   edi,eax
  411e30:	push   cs
  411e31:	sbb    bh,BYTE PTR gs:[ecx+0x10]
  411e35:	xlat   BYTE PTR ds:[ebx]
  411e36:	les    ecx,FWORD PTR [edi+eax*1]
  411e39:	hlt    
  411e3a:	(bad)  
  411e3b:	arpl   si,di
  411e3d:	mov    ecx,0x62082f69
  411e42:	push   ds
  411e43:	jge    0x411e9a
  411e45:	cmp    eax,0x342eeffc
  411e4a:	aam    0x2c
  411e4c:	mov    BYTE PTR [eax],ah
  411e4e:	jmp    0x411e11
  411e50:	adc    eax,0xef8aabf6
  411e55:	fstp   TBYTE PTR [edi-0x8]
  411e58:	sahf   
  411e59:	adc    al,0xc9
  411e5b:	hlt    
  411e5c:	mov    esi,0x6ec989ab
  411e61:	mov    cl,0x72
  411e63:	ficom  DWORD PTR [esi+0x1b]
  411e66:	mov    ecx,0x63b06dd2
  411e6b:	push   edx
  411e6c:	mov    ah,0x15
  411e6e:	stc    
  411e6f:	xchg   ecx,eax
  411e70:	pop    ecx
  411e71:	mov    bh,0xea
  411e73:	out    0xbb,eax
  411e75:	push   esi
  411e76:	adc    eax,0xb4ea41ff
  411e7b:	popf   
  411e7c:	mov    ah,0xd3
  411e7e:	repnz add al,cl
  411e81:	mov    WORD PTR [esi+0x5e],cs
  411e84:	(bad)  
  411e85:	stos   DWORD PTR es:[edi],eax
  411e86:	in     eax,0xed
  411e88:	mov    ch,0x31
  411e8a:	sbb    DWORD PTR gs:[edi+edi*8-0xa1a0b1],edx
  411e92:	jnp    0x411efc
  411e94:	sar    edi,0xb7
  411e97:	push   cs
  411e98:	pop    ebx
  411e99:	jge    0x411efc
  411e9b:	mov    ecx,0xf920ada0
  411ea0:	and    eax,0x90845160
  411ea5:	dec    esi
  411ea6:	jnp    0x411f1d
  411ea8:	add    bl,BYTE PTR [edi+0x289b1935]
  411eae:	mov    fs,edx
  411eb0:	stc    
  411eb1:	je     0x411edd
  411eb3:	and    ebp,ebp
  411eb5:	mov    bh,0xff
  411eb7:	scas   eax,DWORD PTR es:[edi]
  411eb8:	cmc    
  411eb9:	call   0xaed1:0x5eb0c00
  411ec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ec1:	pop    eax
  411ec2:	ret    
  411ec3:	in     eax,dx
  411ec4:	sti    
  411ec5:	push   es
  411ec6:	mov    ds:0xc95212f8,eax
  411ecb:	outs   dx,DWORD PTR ds:[esi]
  411ecc:	fucomi st,st(3)
  411ece:	lock push ds
  411ed0:	sbb    DWORD PTR [esi-0x404072b5],edx
  411ed6:	mov    BYTE PTR [esi-0x1d],al
  411ed9:	daa    
  411eda:	or     al,0x80
  411edc:	(bad)  
  411edd:	lds    esi,FWORD PTR [edi]
  411edf:	shl    BYTE PTR [edi+ecx*4+0x444d8c53],1
  411ee6:	rcr    esp,1
  411ee8:	push   0xbc2aee56
  411eed:	aad    0x29
  411eef:	int3   
  411ef0:	in     eax,dx
  411ef1:	or     al,0x40
  411ef3:	mov    esp,0xf515db59
  411ef8:	jae    0x411eea
  411efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411efb:	js     0x411ea1
  411efd:	sub    cl,0x71
  411f00:	xor    eax,DWORD PTR [esi-0x1511d6f1]
  411f06:	call   0x501f6ce0
  411f0b:	dec    ecx
  411f0c:	push   0xffffff8a
  411f0e:	fdiv   DWORD PTR [esi-0x44]
  411f11:	js     0x411f48
  411f13:	leave  
  411f14:	mov    ecx,?
  411f16:	ins    BYTE PTR es:[edi],dx
  411f17:	mov    ecx,0xf742ecba
  411f1c:	test   BYTE PTR [esi-0x48],bh
  411f1f:	jb     0x411f9b
  411f21:	xchg   BYTE PTR [eax],al
  411f23:	dec    esi
  411f24:	(bad)  
  411f25:	jge    0x411edd
  411f27:	push   cs
  411f28:	dec    edx
  411f29:	idiv   edx
  411f2b:	sub    edi,DWORD PTR [esi+eiz*2+0x55]
  411f2f:	call   0x42dcceaa
  411f34:	xor    DWORD PTR [ecx-0x50],0x96f20eb4
  411f3b:	xor    al,0xaa
  411f3d:	adc    eax,0x856899a0
  411f42:	clc    
  411f43:	xchg   BYTE PTR [edx+esi*4-0x270e3c40],ah
  411f4a:	mov    dh,0x16
  411f4c:	or     BYTE PTR [eax+0x27],0xd1
  411f50:	add    BYTE PTR es:[ebx-0x5e2a326f],0xe3
  411f58:	pop    ss
  411f59:	jb     0x411ef2
  411f5b:	xchg   edi,eax
  411f5c:	outs   dx,BYTE PTR fs:[esi]
  411f5e:	sub    BYTE PTR [esi-0x5],ah
  411f61:	jne    0x411f52
  411f63:	sar    BYTE PTR [edx*8-0x32fdb23e],0xce
  411f6b:	lods   eax,DWORD PTR ds:[esi]
  411f6c:	adc    BYTE PTR [esi+ecx*1],ch
  411f6f:	or     BYTE PTR [esi],0x65
  411f72:	jp     0x411fe4
  411f74:	push   ss
  411f75:	popa   
  411f76:	inc    ebx
  411f77:	iret   
  411f78:	lahf   
  411f79:	mov    ebx,0x6b7c5216
  411f7e:	dec    esp
  411f7f:	stc    
  411f80:	sbb    DWORD PTR [ebx+ecx*8-0x2bfc7eb2],ebx
  411f87:	or     dl,BYTE PTR [edi+edx*1+0x74]
  411f8b:	mov    edx,0xd3c5fadf
  411f90:	mov    WORD PTR [ebx],ds
  411f92:	mov    cl,0xa
  411f94:	out    0x20,al
  411f96:	and    DWORD PTR [esi+edx*4+0x29c7f4c6],edx
  411f9d:	xor    eax,0xf0237850
  411fa2:	mov    ebp,0xe6fe9e0e
  411fa7:	call   0xf5abb54d
  411fac:	scas   al,BYTE PTR es:[edi]
  411fad:	enter  0xe586,0x1c
  411fb1:	inc    edx
  411fb2:	retf   
  411fb3:	mov    ds:0xba27037d,al
  411fb8:	(bad)  
  411fb9:	jbe    0x411f82
  411fbb:	mov    edi,0x9e183904
  411fc0:	leave  
  411fc1:	push   esp
  411fc2:	pusha  
  411fc3:	and    ecx,DWORD PTR [ebp-0x4601e6a5]
  411fc9:	sbb    al,0x82
  411fcb:	sbb    BYTE PTR [ebp+0x54],dl
  411fce:	lods   al,BYTE PTR ds:[esi]
  411fcf:	adc    eax,0xe4918d65
  411fd4:	fwait
  411fd5:	shl    BYTE PTR [ecx],cl
  411fd7:	ins    DWORD PTR es:[edi],dx
  411fd8:	inc    eax
  411fd9:	int3   
  411fda:	ins    DWORD PTR es:[edi],dx
  411fdb:	imul   esi,ebp,0x7e
  411fde:	aas    
  411fdf:	in     eax,0x76
  411fe1:	mov    eax,ds:0xd0977dda
  411fe6:	call   0xccaf2416
  411feb:	ss stc 
  411fed:	data16 mov al,ds:0x5fbd8718
  411ff3:	iret   
  411ff4:	push   ss
  411ff5:	mov    cl,0x80
  411ff7:	lahf   
  411ff8:	and    ah,BYTE PTR [ebp-0x7e]
  411ffb:	push   es
  411ffc:	je     0x41200d
  411ffe:	pusha  
  411fff:	or     esp,ebp
  412001:	add    al,0x42
  412003:	fucomp st(5)
  412005:	mov    al,ds:0x8820fcc
  41200a:	int3   
  41200b:	mov    ds:0xed2a13d7,eax
  412010:	inc    edx
  412011:	outs   dx,DWORD PTR ds:[esi]
  412012:	mov    al,BYTE PTR [edi-0x24]
  412015:	pop    edx
  412016:	lods   eax,DWORD PTR ds:[esi]
  412017:	mov    ecx,0x6bdbb3bc
  41201c:	adc    al,0xf9
  41201e:	mov    ebx,0x5e3a48ec
  412023:	sub    BYTE PTR [esi+eax*2],al
  412026:	jae    0x411fc2
  412028:	repnz xchg ecx,eax
  41202a:	dec    ebx
  41202b:	pop    esi
  41202c:	test   DWORD PTR [ecx],ecx
  41202e:	aad    0x25
  412030:	xchg   ebp,eax
  412031:	aad    0x48
  412033:	sar    DWORD PTR [ebp-0x54],0xa5
  412037:	push   esi
  412038:	cld    
  412039:	inc    ebx
  41203a:	inc    ebp
  41203b:	ins    DWORD PTR es:[edi],dx
  41203c:	cs xor BYTE PTR ds:[esi-0xeec1e5b],bl
  412044:	adc    DWORD PTR [eax],0xe3f158a7
  41204a:	jb     0x412036
  41204c:	lock inc esi
  41204e:	fidivr WORD PTR [esi+0x59e1db93]
  412054:	inc    BYTE PTR [ebp+0x2a89832c]
  41205a:	pop    ss
  41205b:	xchg   ebp,eax
  41205c:	dec    ebx
  41205d:	stc    
  41205e:	dec    esp
  41205f:	hlt    
  412060:	xchg   DWORD PTR [ebx],esp
  412062:	mov    dl,ah
  412064:	(bad)  
  412065:	imul   ebp,ebx,0xffffffa4
  412068:	or     DWORD PTR [eax],0x4374266e
  41206e:	xor    BYTE PTR [esi-0x7],ah
  412071:	xor    BYTE PTR [eax+0xbebcbbd],ch
  412077:	lods   eax,DWORD PTR ds:[esi]
  412078:	push   ebx
  412079:	push   edi
  41207a:	pop    es
  41207b:	das    
  41207c:	stos   BYTE PTR es:[edi],al
  41207d:	adc    DWORD PTR [ebx+0x5c],eax
  412080:	daa    
  412081:	adc    DWORD PTR [esi-0x41],edi
  412084:	lods   eax,DWORD PTR ds:[esi]
  412085:	xor    dh,ah
  412087:	sbb    al,0xb8
  412089:	cmp    eax,0x9eb46925
  41208e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41208f:	pop    ebx
  412090:	ret    0x76ba
  412093:	pop    esi
  412094:	and    DWORD PTR [edx+eiz*4-0x7e],edi
  412098:	jnp    0x41203d
  41209a:	or     DWORD PTR [edi+ecx*1],ecx
  41209d:	shr    DWORD PTR [esi-0x7306dfac],0x8a
  4120a4:	jle    0x412050
  4120a6:	xor    al,0x35
  4120a8:	or     al,0x81
  4120aa:	xor    eax,0xc4d3bf5b
  4120af:	xor    DWORD PTR [ecx+ecx*8+0x5e4c999f],eax
  4120b6:	cmp    DWORD PTR [eax],0xffffffbb
  4120b9:	cmc    
  4120ba:	mov    eax,0x31ca39e5
  4120bf:	xor    eax,0xa252a3b8
  4120c4:	cli    
  4120c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120c6:	sub    eax,0x2cf02120
  4120cb:	xchg   BYTE PTR [ebx],bh
  4120cd:	into   
  4120ce:	ins    DWORD PTR es:[edi],dx
  4120cf:	ficom  DWORD PTR [edx+0x31c91783]
  4120d5:	xchg   ebp,eax
  4120d6:	lock add eax,0x30bc3ef4
  4120dc:	shl    DWORD PTR [ebx+0x6e],1
  4120df:	sbb    eax,0xf6131a69
  4120e4:	cmp    eax,0x292e28b6
  4120e9:	mov    BYTE PTR [esi-0x65795824],ah
  4120ef:	pop    edi
  4120f0:	add    al,0xa8
  4120f2:	sub    BYTE PTR [ebx+0x2d],ch
  4120f5:	sub    eax,0xd90f5793
  4120fa:	mov    ?,WORD PTR [eax+0x19fdb9fe]
  412100:	mov    ecx,0x2c5f18d9
  412105:	pop    ebp
  412106:	sub    al,0xbd
  412109:	dec    eax
  41210a:	ins    BYTE PTR es:[edi],dx
  41210b:	add    BYTE PTR [eax],bl
  41210d:	or     ch,BYTE PTR [ebp-0x40]
  412110:	lea    eax,[ebx+0x2c]
  412113:	out    dx,eax
  412114:	mov    eax,0x53ef4f3
  412119:	pop    ss
  41211a:	data16 mov bh,0xe3
  41211d:	or     eax,0xf644cd46
  412122:	pop    ecx
  412123:	dec    edx
  412124:	fist   DWORD PTR [ebp+0x1b]
  412127:	(bad)  
  412128:	addr16 xor eax,0xa0e1928c
  41212e:	fisubr DWORD PTR [ebp-0x322d9dae]
  412134:	and    BYTE PTR [ecx-0x41942f2b],bh
  41213a:	jbe    0x412135
  41213c:	lock lods eax,DWORD PTR ds:[esi]
  41213e:	push   esp
  41213f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412140:	mov    cx,WORD PTR [ecx+ecx*2]
  412144:	mov    esi,0xa01bb522
  412149:	or     DWORD PTR [ebx-0x5bf36822],eax
  41214f:	leave  
  412150:	popf   
  412151:	dec    ebx
  412152:	call   0xd38b36d4
  412157:	je     0x41214a
  412159:	sti    
  41215a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41215b:	inc    DWORD PTR [ebx+0xf]
  41215e:	mov    ah,0xbd
  412160:	xchg   esp,eax
  412161:	jbe    0x412168
  412163:	imul   edx,edx,0x485aa4e0
  412169:	ss leave 
  41216b:	jno    0x412108
  41216d:	ins    BYTE PTR es:[edi],dx
  41216e:	jbe    0x412174
  412170:	jle    0x4121e3
  412172:	dec    ebp
  412173:	mov    bl,0xf6
  412175:	rcr    BYTE PTR [ecx-0x294fc927],0xf8
  41217c:	cmp    ebx,DWORD PTR [edi-0x1d]
  41217f:	xchg   edx,eax
  412180:	fadd   QWORD PTR [ecx+0x191f178]
  412186:	add    al,0xf3
  412188:	xor    bh,BYTE PTR [ebx+0xaa3ba06]
  41218e:	cmovb  ebp,DWORD PTR [edx]
  412191:	add    BYTE PTR [ebp-0x2e],bl
  412194:	cmc    
  412195:	or     al,0x91
  412197:	jo     0x41211f
  412199:	(bad)  
  41219a:	mov    eax,0xfa6ba10a
  41219f:	out    0xf1,al
  4121a1:	inc    edx
  4121a2:	idiv   BYTE PTR [ecx+0x6841b143]
  4121a8:	pop    esp
  4121a9:	mov    dl,ah
  4121ab:	xor    al,0x41
  4121ad:	jnp    0x412146
  4121af:	xor    eax,0x4b7985e5
  4121b4:	jmp    DWORD PTR [ebx+0x74]
  4121b7:	mov    WORD PTR [esi+0x1f52dc99],cs
  4121bd:	adc    esp,edi
  4121bf:	je     0x4121a5
  4121c1:	sub    BYTE PTR [eax-0x5d],dh
  4121c4:	add    eax,0x9d036ba2
  4121c9:	shl    sp,1
  4121cc:	xor    ch,BYTE PTR [edi]
  4121ce:	sbb    DWORD PTR [esp+esi*4+0x211c3036],0xc4eb95e9
  4121d9:	fiadd  WORD PTR ds:0xdcb5ed0f
  4121df:	xchg   edi,eax
  4121e0:	pushf  
  4121e1:	in     al,0xab
  4121e3:	or     edx,eax
  4121e5:	add    BYTE PTR [esi],ch
  4121e7:	popf   
  4121e8:	mov    dl,0x95
  4121ea:	fs popf 
  4121ec:	dec    esp
  4121ed:	test   DWORD PTR [ecx+eax*4-0x38],esi
  4121f1:	dec    edi
  4121f2:	outs   dx,DWORD PTR ds:[esi]
  4121f3:	jecxz  0x4121d0
  4121f5:	dec    ecx
  4121f6:	in     al,0x92
  4121f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121f9:	jae    0x412267
  4121fb:	adc    BYTE PTR [esi-0x77],bl
  4121fe:	mov    ah,0xb9
  412200:	jnp    0x4121ca
  412202:	pop    ss
  412203:	pop    es
  412204:	jae    0x4121be
  412206:	inc    edx
  412207:	loope  0x412234
  412209:	jnp    0x4121b6
  41220b:	mov    edi,0x39e206ca
  412210:	pop    esp
  412211:	dec    esp
  412212:	hlt    
  412213:	dec    edi
  412214:	rol    DWORD PTR [ecx],cl
  412216:	js     0x412219
  412218:	inc    edx
  412219:	xor    eax,0x8fedf32c
  41221e:	push   es
  41221f:	sbb    esp,esi
  412221:	sbb    bh,BYTE PTR [edi+0x3e]
  412224:	mov    cl,0xed
  412226:	popf   
  412227:	hlt    
  412228:	push   ebx
  412229:	sar    dh,1
  41222b:	sbb    al,0x2d
  41222d:	mov    ebx,0x143a83e0
  412232:	(bad)  
  412233:	stc    
  412234:	mov    eax,0xbdac64b5
  412239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41223a:	cwde   
  41223b:	data16 jnp 0x4121c7
  41223e:	data16 jae 0x412285
  412241:	mov    ds:0xa044cfb8,eax
  412246:	(bad)
  41224a:	adc    BYTE PTR [esi+0x19843345],ch
  412250:	jns    0x4122a3
  412252:	mov    ds:0xf4fef5d4,al
  412257:	and    BYTE PTR [edi+0x5c],dh
  41225a:	add    al,0xc0
  41225c:	ret    0xd4a2
  41225f:	push   ds
  412260:	enter  0x1599,0xc4
  412264:	push   edi
  412265:	sub    bh,BYTE PTR [ecx+ecx*2+0xa6e54d1]
  41226c:	loopne 0x4122ca
  41226e:	ja     0x412233
  412270:	xchg   esi,eax
  412271:	pop    ss
  412272:	inc    esp
  412273:	(bad)  
  412274:	sub    al,0xd5
  412276:	int3   
  412277:	aas    
  412278:	icebp  
  412279:	push   es
  41227a:	adc    bl,BYTE PTR [ebx+0x73]
  41227d:	adc    al,0x17
  41227f:	inc    esp
  412280:	mov    esi,0x58e986a7
  412285:	iret   
  412286:	ins    BYTE PTR es:[edi],dx
  412287:	sub    BYTE PTR [esi-0x1af4f704],cl
  41228d:	xchg   edi,eax
  41228e:	pushf  
  41228f:	dec    edx
  412290:	xor    dl,BYTE PTR [ecx]
  412292:	or     al,0x53
  412294:	mov    WORD PTR [edi+0x2b],es
  412297:	xlat   BYTE PTR ds:[ebx]
  412298:	int    0x8
  41229a:	fsub   st,st(4)
  41229c:	or     edx,DWORD PTR ds:0x1d33c631
  4122a2:	fadd   DWORD PTR ds:0xdf6adb58
  4122a8:	call   0xa2a6:0xbf60c5bc
  4122af:	lahf   
  4122b0:	outs   dx,BYTE PTR ds:[esi]
  4122b1:	call   0xe56af666
  4122b6:	xchg   ecx,eax
  4122b7:	std    
  4122b8:	pop    eax
  4122b9:	jl     0x4122e2
  4122bb:	jge    0x412242
  4122bd:	pushf  
  4122be:	outs   dx,BYTE PTR ds:[esi]
  4122bf:	aas    
  4122c0:	and    DWORD PTR [edi],edx
  4122c2:	mov    ah,BYTE PTR [ebp+edi*8+0x5523b0ae]
  4122c9:	mov    al,ds:0x4795a10b
  4122ce:	pop    es
  4122cf:	icebp  
  4122d0:	pop    ebx
  4122d1:	in     al,dx
  4122d2:	dec    ebp
  4122d3:	inc    ebx
  4122d4:	cmp    edx,DWORD PTR [edx+0x5f]
  4122d7:	repz dec ebp
  4122d9:	fwait
  4122da:	lahf   
  4122db:	arpl   WORD PTR [esi],di
  4122dd:	pop    ebx
  4122de:	pop    eax
  4122df:	or     esi,DWORD PTR [eax-0x69]
  4122e2:	fisub  WORD PTR [esi-0x55]
  4122e5:	jae    0x412315
  4122e7:	jge    0x41232b
  4122e9:	lahf   
  4122ea:	sub    al,0x3f
  4122ec:	cmc    
  4122ed:	adc    ah,bl
  4122ef:	call   0x476b2615
  4122f4:	pop    ss
  4122f5:	das    
  4122f6:	or     al,0x8e
  4122f8:	cmp    BYTE PTR fs:[edx+0x643725f],ah
  4122ff:	pop    edx
  412300:	outs   dx,BYTE PTR ds:[esi]
  412301:	std    
  412302:	or     al,0x98
  412304:	xchg   esi,eax
  412305:	arpl   WORD PTR [ecx-0x2d],si
  412308:	icebp  
  412309:	mov    dh,0x9a
  41230b:	jmp    0x412310
  41230d:	xor    ebx,eax
  41230f:	sbb    DWORD PTR [esi-0x7a0beb65],eax
  412315:	jle    0x412304
  412317:	imul   esp,DWORD PTR [edi],0x7f
  41231a:	outs   dx,BYTE PTR ds:[esi]
  41231b:	adc    ah,BYTE PTR ds:0xdf78c39f
  412321:	pop    edx
  412322:	push   ss
  412323:	adc    cl,BYTE PTR [edx]
  412325:	dec    edi
  412326:	hlt    
  412327:	jb     0x412350
  412329:	add    DWORD PTR [ebp-0x75],edi
  41232c:	rcr    cl,1
  41232e:	jge    0x41233a
  412330:	push   ebp
  412331:	or     DWORD PTR [eax-0x73],ecx
  412334:	fidivr DWORD PTR ds:0x993704e
  41233a:	into   
  41233b:	fwait
  41233c:	iret   
  41233d:	int    0x38
  41233f:	mov    ds:0x7fbf5179,al
  412344:	push   ss
  412345:	jle    0x41236f
  412347:	xor    DWORD PTR [esi],edi
  412349:	cmp    al,0xe0
  41234b:	dec    esp
  41234c:	in     eax,0xbc
  41234e:	outs   dx,DWORD PTR ds:[si]
  412350:	xchg   ebp,eax
  412351:	(bad)  
  412352:	out    dx,eax
  412353:	mov    edx,0x228ec36
  412358:	jmp    0x34dbfd5f
  41235d:	ins    BYTE PTR es:[edi],dx
  41235e:	mov    al,ds:0xfe3be2f1
  412363:	jne    0x41234f
  412365:	and    edi,eax
  412367:	std    
  412368:	aaa    
  412369:	loop   0x4123ab
  41236b:	or     eax,0xcdd6721a
  412370:	mov    DWORD PTR [eax+0x518b09cf],eax
  412376:	in     eax,dx
  412377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412378:	mov    ebp,0x9a027e61
  41237d:	inc    edx
  41237e:	jmp    DWORD PTR es:[ecx-0x33]
  412382:	es popa 
  412384:	pop    edi
  412385:	xor    BYTE PTR fs:[ebp+0x3df54c5e],ch
  41238c:	test   al,0x58
  41238e:	xchg   cl,cl
  412390:	xchg   edx,eax
  412391:	sub    cl,cl
  412393:	pop    ds
  412394:	and    eax,0x54239cae
  412399:	imul   eax,DWORD PTR [eax-0xe282404],0xdc717911
  4123a3:	mov    ss,WORD PTR [eax+0x13a36fe2]
  4123a9:	or     BYTE PTR [edi-0x562a345d],ch
  4123af:	idiv   BYTE PTR [edx+0x64]
  4123b2:	mov    esp,0x7b8da134
  4123b7:	sub    al,0xfa
  4123b9:	mov    cl,BYTE PTR [eax+0x71]
  4123bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123bd:	(bad)  
  4123be:	sub    al,0xf4
  4123c0:	fisttp DWORD PTR [esi+eax*8+0x18]
  4123c4:	pop    ds
  4123c5:	sbb    eax,0x76b9526e
  4123ca:	in     eax,dx
  4123cb:	in     al,dx
  4123cc:	mov    al,BYTE PTR [edi-0x2]
  4123cf:	fcmovnu st,st(5)
  4123d1:	popa   
  4123d2:	ja     0x41242a
  4123d4:	pop    ebx
  4123d5:	ret    
  4123d6:	adc    BYTE PTR [esi],dl
  4123d8:	test   BYTE PTR [edx],dl
  4123da:	jmp    DWORD PTR [edx]
  4123dc:	pop    ss
  4123dd:	sub    eax,0x8d71cc9f
  4123e2:	xchg   ebp,eax
  4123e3:	mov    dh,0xeb
  4123e5:	jmp    0x4123c9
  4123e7:	dec    edx
  4123e8:	mov    dh,0xc1
  4123ea:	icebp  
  4123eb:	mov    ds:0x97c90a5,eax
  4123f0:	push   ds
  4123f1:	pusha  
  4123f2:	inc    edx
  4123f3:	into   
  4123f4:	(bad)  
  4123f5:	retf   
  4123f6:	popa   
  4123f7:	add    ebp,DWORD PTR [edx+0x5c]
  4123fa:	mov    dh,0xac
  4123fc:	shr    ecx,0xd3
  4123ff:	or     edi,esp
  412401:	mov    cl,0x70
  412403:	retf   
  412404:	and    DWORD PTR [esi+0x73783c15],0xcea4cc09
  41240e:	mov    WORD PTR [ecx-0x285311ac],es
  412414:	cmp    eax,0x1b408e5d
  412419:	loopne 0x412463
  41241b:	es xchg ebp,eax
  41241d:	sbb    al,0xca
  41241f:	xor    BYTE PTR [ebx-0x3],bl
  412422:	fdiv   QWORD PTR [ebx+0x300e7f9f]
  412428:	loopne 0x4123f7
  41242a:	cld    
  41242b:	mov    dl,0x70
  41242d:	aad    0xb
  41242f:	popa   
  412430:	repz pop eax
  412432:	sub    eax,0xb6aa1cc3
  412437:	and    bh,bh
  412439:	inc    edx
  41243a:	push   esi
  41243b:	push   eax
  41243c:	nop
  41243d:	mov    esi,0xf7fed890
  412442:	push   esp
  412443:	jle    0x4123ec
  412445:	dec    ecx
  412446:	ret    
  412447:	xchg   ebx,eax
  412448:	adc    al,0x4d
  41244a:	pop    edx
  41244b:	cmp    al,0x91
  41244d:	bound  ebp,QWORD PTR [edx+eiz*8-0x6c]
  412451:	mov    eax,ds:0x317631dc
  412456:	(bad)  
  412457:	out    dx,eax
  412458:	adc    ch,BYTE PTR [ecx-0x3a698f4c]
  41245e:	pop    eax
  412460:	cwde   
  412461:	adc    ebx,edx
  412463:	add    esp,DWORD PTR [eax-0x147f09ae]
  412469:	outs   dx,BYTE PTR ds:[esi]
  41246a:	and    esp,DWORD PTR [esi-0x39]
  41246d:	inc    esi
  41246e:	jno    0x41240b
  412470:	pop    edx
  412471:	or     bh,cl
  412473:	adc    eax,0xf2c48101
  412478:	shr    DWORD PTR [ecx-0x4f896527],1
  41247e:	add    dl,ch
  412480:	sar    BYTE PTR fs:[eax+ebx*8-0x4f],1
  412485:	mov    edi,0x8dec0039
  41248a:	fistp  DWORD PTR [esi-0x6c8244a0]
  412490:	lea    ecx,[ebp-0x633ddf53]
  412496:	lods   eax,DWORD PTR ds:[esi]
  412497:	ja     0x412516
  412499:	(bad)  
  41249a:	out    0x11,al
  41249c:	das    
  41249d:	lods   al,BYTE PTR ds:[esi]
  41249e:	adc    edx,DWORD PTR [edi+0x6f7c1df1]
  4124a4:	mov    al,0xdb
  4124a6:	mov    ah,0x73
  4124a8:	xor    DWORD PTR [ebx+0x15],0x962d094a
  4124af:	dec    esi
  4124b0:	jne    0x4124a7
  4124b2:	jno    0x412474
  4124b4:	test   esp,0x2eb528cc
  4124ba:	inc    esi
  4124bb:	addr16 mov eax,0x95c61
  4124c1:	dec    ebp
  4124c2:	xor    ecx,edi
  4124c4:	lock (bad) 
  4124c6:	sti    
  4124c7:	sbb    BYTE PTR [ebx-0x5ce8c690],cl
  4124cd:	or     eax,0x9f46ab9
  4124d2:	test   DWORD PTR [ecx+ebx*4-0x1b],ecx
  4124d6:	add    dh,BYTE PTR [esi-0x3890b745]
  4124dc:	jmp    0x4124e3
  4124de:	out    0x30,al
  4124e0:	mul    BYTE PTR [edi-0x443ef59d]
  4124e6:	sub    edi,ecx
  4124e8:	add    al,BYTE PTR [eax+0x52]
  4124eb:	int3   
  4124ec:	push   ss
  4124ed:	out    0x73,eax
  4124ef:	mov    ah,al
  4124f1:	adc    BYTE PTR [esi+0x0],dl
  4124f4:	mov    al,0xa8
  4124f6:	sbb    bh,dh
  4124f8:	mov    edx,0xdb45c795
  4124fd:	jg     0x412537
  4124ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412500:	mov    ds:0x1f99b32a,al
  412505:	xchg   edx,eax
  412506:	or     ebp,esi
  412508:	mov    ebp,0xceae6c32
  41250d:	jae    0x4124dd
  41250f:	sbb    ebp,ebx
  412511:	cmp    eax,0xb40121c1
  412516:	xchg   ecx,eax
  412517:	mov    al,0xe6
  412519:	aas    
  41251a:	out    dx,eax
  41251b:	data16 jge 0x41258b
  41251e:	cmp    DWORD PTR [ecx-0x5d0713ea],ebx
  412524:	clc    
  412525:	sub    DWORD PTR [eax+0x2d],ecx
  412528:	ss inc esp
  41252a:	pop    edx
  41252b:	out    dx,eax
  41252c:	dec    ebx
  41252d:	cmp    al,dh
  41252f:	test   al,0x16
  412531:	(bad)  
  412533:	rcl    DWORD PTR [ebx+0x7a],1
  412536:	push   0x264c5312
  41253b:	scas   al,BYTE PTR es:[edi]
  41253c:	das    
  41253d:	js     0x4125ad
  41253f:	or     esp,DWORD PTR [esi]
  412541:	mov    edx,0xde75a62d
  412546:	xor    al,BYTE PTR [eax+0x6ee760b1]
  41254c:	add    BYTE PTR [ecx+0x358c45ba],0x8e
  412553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412554:	push   ecx
  412555:	lahf   
  412556:	push   ds
  412557:	cld    
  412558:	xlat   BYTE PTR ds:[ebx]
  412559:	mul    DWORD PTR [edi-0x2681ce15]
  41255f:	hlt    
  412560:	shl    DWORD PTR [edi],cl
  412562:	mov    esp,0x47e8fb0e
  412567:	fdiv   st(6),st
  412569:	psubusb mm6,QWORD PTR [ecx-0x33df9422]
  412570:	out    0x5b,eax
  412572:	outs   dx,DWORD PTR ds:[esi]
  412573:	jb     0x4125b2
  412575:	pop    eax
  412576:	(bad)  
  412578:	dec    ecx
  412579:	in     eax,0x33
  41257b:	rcl    BYTE PTR [ebp-0x10d4299],cl
  412581:	cmp    eax,0xc52c38b
  412586:	xchg   ebx,eax
  412587:	in     eax,0xa2
  412589:	dec    ebx
  41258a:	cli    
  41258b:	mov    esp,0xd72e1717
  412590:	or     BYTE PTR [edx+0x71],0xc9
  412594:	xlat   BYTE PTR ds:[ebx]
  412595:	imul   ebx,DWORD PTR [edi-0x4e402b1b],0x39b348d4
  41259f:	mov    cl,0x33
  4125a1:	xlat   BYTE PTR ds:[ebx]
  4125a2:	mov    DWORD PTR [ebx+ebx*1],ecx
  4125a5:	dec    edi
  4125a6:	jecxz  0x4125b7
  4125a8:	dec    ebp
  4125a9:	adc    eax,0xa5bd56bc
  4125ae:	cmc    
  4125af:	sbb    bl,cl
  4125b1:	mov    WORD PTR [eax],cs
  4125b3:	sub    bh,BYTE PTR ds:0x81b483ae
  4125b9:	aad    0xac
  4125bb:	pop    esp
  4125bc:	iret   
  4125bd:	rcl    BYTE PTR [edx+0x39],1
  4125c0:	arpl   WORD PTR [eax],sp
  4125c2:	inc    esi
  4125c3:	adc    dl,ch
  4125c5:	or     al,0xaf
  4125c7:	aad    0x36
  4125c9:	mov    cl,0x3c
  4125cb:	je     0x41259b
  4125cd:	xchg   esp,eax
  4125ce:	pop    esi
  4125cf:	ins    BYTE PTR es:[edi],dx
  4125d0:	lods   al,BYTE PTR ds:[esi]
  4125d1:	out    0x9,eax
  4125d3:	mov    bh,BYTE PTR ds:0xcc264fb4
  4125d9:	lods   al,BYTE PTR ds:[esi]
  4125da:	arpl   WORD PTR [esi-0x21],bp
  4125dd:	pop    es
  4125de:	xor    esp,DWORD PTR [edx-0x63]
  4125e1:	jno    0x412581
  4125e3:	imul   esi,DWORD PTR [edi],0x1d
  4125e6:	add    dh,dl
  4125e8:	cli    
  4125e9:	xor    dh,BYTE PTR [ecx+0x1adad67]
  4125ef:	adc    eax,ebp
  4125f1:	xor    BYTE PTR [ebx+0x27a5a950],0x8f
  4125f8:	iret   
  4125f9:	fstp   st(1)
  4125fb:	loop   0x4125d1
  4125fd:	jl     0x412678
  4125ff:	inc    ecx
  412600:	cmp    BYTE PTR [edi-0xe36ba41],ah
  412606:	ins    BYTE PTR es:[edi],dx
  412607:	test   DWORD PTR [edx],esp
  412609:	mov    dl,0x31
  41260b:	neg    ecx
  41260d:	(bad)  
  41260e:	mov    cl,0x41
  412610:	adc    DWORD PTR [edi],eax
  412612:	xchg   esp,eax
  412613:	inc    DWORD PTR [ebx]
  412615:	inc    eax
  412616:	dec    edx
  412617:	(bad)  
  412618:	jmp    0x57d0:0x62422398
  41261f:	int    0xd7
  412621:	rcl    dh,0xc8
  412624:	jp     0x41264e
  412626:	sbb    esi,edi
  412628:	or     eax,DWORD PTR cs:[edx+0x14]
  41262c:	pop    ebx
  41262d:	cmc    
  41262e:	fld    TBYTE PTR [ebx]
  412630:	mov    ah,BYTE PTR [ecx-0x1]
  412633:	rcr    BYTE PTR [edx+0x49],cl
  412636:	mov    dh,0x6d
  412638:	imul   esp,DWORD PTR [eax+0x1b],0xe5124500
  41263f:	push   cs
  412640:	out    dx,eax
  412641:	add    BYTE PTR [ecx-0x2e29f196],dl
  412647:	sub    DWORD PTR [edx],eax
  412649:	jne    0x4126a0
  41264b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41264c:	bound  esp,QWORD PTR [esi-0x16a4d579]
  412652:	scas   eax,DWORD PTR es:[edi]
  412653:	mov    dl,0xec
  412655:	icebp  
  412656:	rcl    DWORD PTR [ebx+eiz*4],cl
  412659:	or     ebx,DWORD PTR [esi]
  41265b:	xchg   ebx,eax
  41265c:	sub    edx,DWORD PTR [edx+eiz*2]
  41265f:	in     al,dx
  412660:	retf   0xd487
  412663:	stos   BYTE PTR es:[edi],al
  412664:	adc    al,0x9f
  412666:	or     eax,0x1d687944
  41266b:	jns    0x41260e
  41266d:	(bad)  
  41266f:	test   al,0xab
  412671:	push   0xbbebf5f7
  412676:	ret    
  412677:	ror    ebx,1
  412679:	jp     0x4126d5
  41267b:	pop    ebp
  41267c:	pop    ds
  41267d:	and    BYTE PTR [ecx],bh
  41267f:	call   0x5124:0x6975bac
  412686:	pop    edx
  412687:	fist   WORD PTR [ebp+edx*8+0x44]
  41268b:	call   0x9cbb:0xe812e0c8
  412692:	mov    ch,0x26
  412694:	adc    al,0x58
  412696:	dec    edi
  412697:	cmp    esi,DWORD PTR [ebx]
  412699:	mov    ds:0x9fe1b0ac,al
  41269e:	add    BYTE PTR [edx+0x4d9d86d0],bh
  4126a4:	mov    BYTE PTR [eax-0x4464d67],bh
  4126aa:	inc    ecx
  4126ab:	int3   
  4126ac:	sbb    eax,0x4430f780
  4126b1:	test   BYTE PTR [edi-0x34f768e3],ch
  4126b7:	dec    esp
  4126b8:	lock and al,0xaf
  4126bb:	and    dl,dh
  4126bd:	sar    bl,0xcb
  4126c0:	sbb    DWORD PTR [ebx+0x6743940e],ecx
  4126c6:	je     0x412725
  4126c8:	push   esi
  4126c9:	inc    ebp
  4126ca:	test   eax,0x18fb3602
  4126cf:	out    dx,eax
  4126d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126d1:	ret    
  4126d2:	out    dx,eax
  4126d3:	(bad)  
  4126d5:	push   ds
  4126d6:	ins    DWORD PTR es:[edi],dx
  4126d7:	push   0x6c700cc2
  4126dc:	fwait
  4126dd:	(bad)  
  4126de:	test   BYTE PTR [eax-0x3b393db9],dl
  4126e4:	shl    bh,cl
  4126e6:	daa    
  4126e7:	retf   0x3c56
  4126ea:	adc    eax,0x22643132
  4126ef:	jae    0x41272f
  4126f1:	inc    ecx
  4126f2:	outs   dx,BYTE PTR ds:[esi]
  4126f3:	imul   ecx,DWORD PTR [ebx],0xffffff9d
  4126f6:	stos   DWORD PTR es:[edi],eax
  4126f7:	pmullw mm6,QWORD PTR [ecx-0x3414b865]
  4126fe:	pop    ebx
  4126ff:	xor    edx,edi
  412701:	adc    al,0x2d
  412703:	push   ds
  412704:	jae    0x4126c2
  412706:	pusha  
  412707:	jmp    0x9ee64c7e
  41270c:	xchg   BYTE PTR [edi+0xa],dl
  41270f:	lods   al,BYTE PTR ds:[esi]
  412710:	xchg   ecx,ebp
  412712:	cmp    bl,BYTE PTR [ecx+ebx*8]
  412715:	stc    
  412716:	xchg   ebx,eax
  412717:	sar    BYTE PTR [ecx],0xb2
  41271a:	cmp    al,0x72
  41271c:	mov    dl,BYTE PTR [eax]
  41271e:	inc    esp
  41271f:	ror    DWORD PTR [esi-0x675aca4d],cl
  412725:	add    al,0x31
  412727:	int    0x97
  412729:	inc    ecx
  41272a:	mov    BYTE PTR [si],dl
  41272d:	std    
  41272e:	push   edx
  41272f:	or     ch,bl
  412731:	int    0xb4
  412733:	or     BYTE PTR [ecx+eax*4-0x44],ch
  412737:	cld    
  412738:	jo     0x41270d
  41273a:	push   ss
  41273b:	inc    esp
  41273c:	push   ds
  41273d:	imul   esp,DWORD PTR [ecx-0x51],0xcdb1692a
  412744:	cld    
  412745:	mov    ch,0x4a
  412747:	test   DWORD PTR [esp+eax*2+0x5a2fcfd6],esi
  41274e:	add    esi,DWORD PTR [ecx]
  412750:	fwait
  412751:	or     DWORD PTR [edi+eax*2-0x1c],edx
  412755:	pop    eax
  412756:	or     DWORD PTR [ebx],0x3e7d0aae
  41275c:	js     0x412744
  41275e:	scas   al,BYTE PTR es:[edi]
  41275f:	div    BYTE PTR [edx]
  412761:	fld    DWORD PTR [edx+0x1d]
  412764:	ja     0x412779
  412766:	dec    esi
  412767:	sbb    BYTE PTR [ebp-0x744f9a96],bh
  41276d:	xlat   BYTE PTR ds:[ebx]
  41276e:	jbe    0x4127ac
  412770:	fnstsw WORD PTR [eax]
  412772:	fs pop ds
  412774:	add    dh,ah
  412776:	jmp    0xd273540d
  41277b:	js     0x412795
  41277d:	in     eax,0xc3
  41277f:	xor    DWORD PTR [ecx-0x40],edi
  412782:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  412784:	push   ebx
  412785:	or     dh,BYTE PTR [eax+0x36]
  412788:	cmc    
  412789:	mov    ds:0x61e6fd4b,eax
  41278e:	aas    
  41278f:	sbb    bl,BYTE PTR [ebp+ecx*4+0x2241291d]
  412796:	mov    edi,gs
  412798:	retf   0xfbc8
  41279b:	scas   eax,DWORD PTR es:[edi]
  41279c:	dec    ecx
  41279d:	sbb    bl,BYTE PTR [edi-0x677f468e]
  4127a3:	jnp    0x4127c5
  4127a5:	sbb    bl,BYTE PTR [esi-0x7a559dfa]
  4127ab:	js     0x412781
  4127ad:	jg     0x4127ec
  4127af:	dec    edi
  4127b0:	fimul  WORD PTR [ebx]
  4127b2:	mov    al,0x5a
  4127b4:	sub    ecx,esp
  4127b6:	stc    
  4127b7:	std    
  4127b8:	stos   DWORD PTR es:[edi],eax
  4127b9:	rcr    ebp,0x87
  4127bc:	stc    
  4127bd:	push   esp
  4127be:	pop    ecx
  4127bf:	repnz push 0xffffffdf
  4127c2:	inc    ebp
  4127c3:	jecxz  0x412816
  4127c5:	cmp    cl,cl
  4127c7:	nop
  4127c8:	adc    eax,0x6b62b109
  4127cd:	cwde   
  4127ce:	icebp  
  4127cf:	out    dx,eax
  4127d0:	lea    ecx,[ebp+0x50854cd7]
  4127d6:	add    al,0xff
  4127d8:	push   ss
  4127d9:	mov    DWORD PTR [ebx+0x7f],ebp
  4127dc:	js     0x41284a
  4127de:	mov    ebx,0x8b881a04
  4127e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127e4:	and    ebx,DWORD PTR [edi-0x22c65bab]
  4127ea:	mov    edx,0xff76240f
  4127ef:	xchg   bl,bl
  4127f1:	add    al,0xc4
  4127f3:	les    eax,FWORD PTR [edi-0x50bc9f7f]
  4127f9:	jns    0x412836
  4127fb:	mov    ds:0xaee35911,al
  412800:	test   eax,0x975ed6e9
  412805:	popf   
  412806:	das    
  412807:	push   esp
  412808:	aad    0x3f
  41280a:	xor    al,0xc5
  41280c:	inc    ebp
  41280d:	add    eax,0xc244f40
  412812:	jo     0x41284d
  412814:	or     eax,0xdc01a28a
  412819:	jne    0x4127b1
  41281b:	adc    BYTE PTR [eax],bl
  41281d:	popa   
  41281e:	xchg   DWORD PTR [eax],esi
  412820:	fadd   st(1),st
  412822:	iret   
  412823:	loopne 0x412865
  412825:	pop    esp
  412826:	(bad)  
  412827:	fdiv   st,st(6)
  412829:	bnd jo 0x412836
  41282c:	sub    bh,bh
  41282e:	add    eax,0xc6308568
  412833:	inc    ebx
  412834:	sbb    BYTE PTR [esi+ebp*4],dl
  412837:	popf   
  412838:	iret   
  412839:	sbb    bl,BYTE PTR fs:[edi-0x1033e086]
  412840:	pop    esi
  412841:	sahf   
  412842:	xor    ah,bh
  412844:	dec    esp
  412845:	ja     0x412892
  412847:	(bad)  
  412849:	outs   dx,DWORD PTR ds:[esi]
  41284a:	js     0x4127e4
  41284c:	inc    esi
  41284d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41284e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41284f:	sbb    BYTE PTR [edi+edi*2-0x609c971c],bh
  412856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412857:	out    0xe6,eax
  412859:	xchg   ebp,eax
  41285a:	hlt    
  41285b:	test   BYTE PTR [ebx+0x17],0xfd
  41285f:	push   cs
  412860:	ja     0x412879
  412862:	iret   
  412863:	out    dx,eax
  412864:	mov    bl,0x26
  412866:	push   ebx
  412867:	(bad)  
  412869:	sub    BYTE PTR [edx],0x20
  41286c:	clc    
  41286d:	and    DWORD PTR [ecx-0x64717611],edi
  412873:	adc    WORD PTR [ecx-0x40d1ec4f],sp
  41287a:	pop    ss
  41287b:	repz add DWORD PTR [esi+0x651b644a],eax
  412882:	sub    ebx,DWORD PTR [ecx+0x7314cb03]
  412888:	add    DWORD PTR [ebx+0xbcbd20e],edx
  41288e:	mov    ds:0xf23c351d,eax
  412893:	pop    edi
  412894:	adc    eax,0xed7bcea5
  412899:	sti    
  41289a:	xchg   esi,eax
  41289b:	icebp  
  41289c:	xchg   BYTE PTR [esi-0x79c6fce],cl
  4128a2:	push   ds
  4128a3:	aad    0x67
  4128a5:	dec    edi
  4128a6:	sar    DWORD PTR [ebx-0x2969d52c],1
  4128ac:	fdivr  st(3),st
  4128ae:	xor    dl,BYTE PTR [edx]
  4128b0:	xchg   esp,eax
  4128b1:	cmp    bh,BYTE PTR [edx]
  4128b3:	fidivr WORD PTR ds:0x49788c95
  4128b9:	xchg   cl,al
  4128bb:	outs   dx,BYTE PTR ds:[esi]
  4128bc:	adc    BYTE PTR [edi-0x1c2e8161],dh
  4128c2:	sti    
  4128c3:	cwde   
  4128c4:	repz shl DWORD PTR [ebp+0x29ccf30a],0xf8
  4128cc:	pop    edi
  4128cd:	dec    edx
  4128ce:	mov    esi,0xd357def9
  4128d3:	xchg   ebx,eax
  4128d4:	popf   
  4128d5:	sbb    al,0x83
  4128d7:	repz mov esp,0x274d352c
  4128dd:	sub    DWORD PTR [ecx],esp
  4128df:	jmp    0x101c:0x7ce4ecec
  4128e6:	or     BYTE PTR [ecx],cl
  4128e8:	pop    ebx
  4128e9:	lea    edx,[eiz*8+0x34d64d85]
  4128f0:	(bad)  
  4128f1:	sbb    eax,0xcef4c49e
  4128f6:	aam    0xd4
  4128f8:	sub    al,0xad
  4128fa:	inc    eax
  4128fb:	mov    al,ds:0x1fd18419
  412900:	cmp    eax,0x6da1f3c1
  412905:	int    0xf5
  412907:	nop
  412908:	xchg   esp,eax
  412909:	int3   
  41290a:	enter  0xf5ce,0xa9
  41290e:	push   ss
  41290f:	pop    edx
  412910:	aad    0xec
  412912:	js     0x4128ff
  412914:	pop    esp
  412915:	push   cs
  412916:	ins    BYTE PTR es:[edi],dx
  412917:	pop    es
  412918:	ds push esp
  41291a:	xchg   ebx,eax
  41291b:	lock jbe 0x4128c0
  41291e:	jl     0x41291a
  412920:	or     al,0xac
  412922:	xchg   BYTE PTR [edi-0x4c7604c3],bh
  412928:	cmp    DWORD PTR [eax],esi
  41292a:	lahf   
  41292b:	adc    BYTE PTR [edi+0x59],dl
  41292e:	(bad)  
  412930:	ss das 
  412932:	add    BYTE PTR [esi+0x19437ead],dl
  412938:	sbb    eax,DWORD PTR [edx+0x1af948f2]
  41293e:	(bad)  
  41293f:	sti    
  412940:	iret   
  412941:	aam    0x7d
  412943:	jb     0x4128eb
  412945:	mov    ds:0x215aa1ee,al
  41294a:	out    dx,eax
  41294b:	rcr    cl,1
  41294d:	sub    eax,0x3b61710
  412952:	sbb    al,0x10
  412954:	dec    ebx
  412955:	ret    
  412956:	mov    ecx,0xe6743c86
  41295b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41295c:	dec    edx
  41295d:	pop    ecx
  41295e:	call   0x359124d1
  412963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412964:	dec    edx
  412965:	fwait
  412966:	enter  0x9e73,0x56
  41296a:	dec    ecx
  41296b:	adc    eax,0xea2a20c4
  412970:	mov    edi,0x4bb3951b
  412975:	cli    
  412976:	lods   al,BYTE PTR ds:[esi]
  412977:	sbb    bh,cl
  412979:	add    eax,ecx
  41297b:	push   eax
  41297c:	inc    esp
  41297d:	xor    edi,DWORD PTR [ebp+0x5f]
  412980:	jns    0x412905
  412982:	mov    edx,fs
  412984:	xchg   ebx,eax
  412985:	aam    0x5b
  412987:	pop    esp
  412988:	dec    ecx
  412989:	xchg   bp,ax
  41298b:	sbb    al,0xde
  41298d:	xchg   edx,edx
  41298f:	bound  esp,QWORD PTR ds:0x52687031
  412995:	jbe    0x4129b0
  412997:	inc    ebp
  412998:	in     al,0xf
  41299a:	sub    BYTE PTR [ebx+0x6d],al
  41299d:	dec    edx
  41299e:	sub    BYTE PTR [ecx],cl
  4129a0:	cmp    eax,0x850767cc
  4129a5:	push   eax
  4129a6:	mov    ebp,cs
  4129a8:	push   edi
  4129a9:	jp     0x412a11
  4129ab:	popa   
  4129ac:	aam    0x27
  4129ae:	add    eax,0x756bd0eb
  4129b3:	xor    DWORD PTR [esi-0x21776042],0x3e
  4129ba:	mov    cs,WORD PTR [esi+edx*4-0x531cd5d0]
  4129c1:	xor    BYTE PTR [edx+edi*2-0x31],bh
  4129c5:	jbe    0x412993
  4129c7:	mov    ecx,0x680d72f
  4129cc:	xchg   al,ch
  4129ce:	push   ss
  4129cf:	das    
  4129d0:	imul   edx,DWORD PTR [edi+0x65],0x18bead61
  4129d7:	ret    0xb84
  4129da:	sub    BYTE PTR [edi],dl
  4129dc:	fbld   TBYTE PTR ds:0xfec6ce0a
  4129e2:	and    BYTE PTR [edi+esi*1+0x6d],dh
  4129e6:	dec    edi
  4129e7:	xchg   DWORD PTR [ecx+0x2d],edx
  4129ea:	repnz inc edi
  4129ec:	jecxz  0x4129ef
  4129ee:	cmp    DWORD PTR fs:[edx],ecx
  4129f1:	repnz loope 0x4129a9
  4129f4:	neg    BYTE PTR [ebx]
  4129f6:	ret    
  4129f7:	scas   eax,DWORD PTR es:[edi]
  4129f8:	ret    0xf509
  4129fb:	pop    ecx
  4129fc:	adc    BYTE PTR [ebx+0xa],0xc7
  412a00:	inc    eax
  412a01:	add    ch,ch
  412a03:	je     0x412a36
  412a05:	and    bl,ah
  412a07:	hlt    
  412a08:	xchg   esi,eax
  412a09:	jl     0x412a08
  412a0b:	in     eax,0x21
  412a0d:	xchg   ecx,ebp
  412a0f:	push   ss
  412a10:	cmp    bl,dh
  412a12:	or     BYTE PTR [edx+0x209c21d2],bh
  412a18:	cmp    eax,0xc10903cc
  412a1d:	mov    WORD PTR [ebx+eiz*1+0x7247e9a6],es
  412a24:	ss mov ch,0x4e
  412a27:	pop    edi
  412a28:	das    
  412a29:	mov    ah,0xfe
  412a2b:	sbb    ebx,edx
  412a2d:	pop    eax
  412a2e:	(bad)  
  412a2f:	adc    al,0x3e
  412a31:	xchg   cl,ch
  412a33:	adc    cl,BYTE PTR [edx]
  412a35:	and    DWORD PTR [esi+0x6ff62a6e],ebp
  412a3b:	adc    ebp,DWORD PTR [esi-0x4c]
  412a3e:	push   esp
  412a3f:	mov    dl,0xa1
  412a41:	(bad)  
  412a42:	pop    ecx
  412a43:	int3   
  412a44:	iret   
  412a45:	mov    ah,0x31
  412a47:	(bad)  
  412a48:	adc    bh,BYTE PTR [ecx+eiz*1+0x5a95870b]
  412a4f:	neg    al
  412a51:	and    DWORD PTR [esi-0x5c7f5ec8],ebp
  412a57:	sub    BYTE PTR [edx-0x27],al
  412a5a:	lahf   
  412a5b:	jmp    0x14d09419
  412a60:	nop
  412a61:	call   0x29c8:0xc6e884d2
  412a68:	(bad)  
  412a69:	call   0xce41b572
  412a6e:	sbb    eax,0x37b52bd2
  412a73:	data16 add ah,BYTE PTR [eax+0x2e]
  412a77:	mov    bh,0x97
  412a79:	das    
  412a7a:	jp     0x412aa9
  412a7c:	(bad)  
  412a7e:	test   DWORD PTR [ecx-0x51],ecx
  412a81:	jmp    0x678e:0x97a3d1f6
  412a88:	cld    
  412a89:	in     eax,dx
  412a8a:	pop    esp
  412a8b:	ds pop edx
  412a8d:	pop    edi
  412a8e:	pop    ds
  412a8f:	jl     0x412a3a
  412a91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a92:	mov    ebp,0xc615e236
  412a97:	jp     0x412b05
  412a99:	add    eax,DWORD PTR [ecx+0x5f]
  412a9c:	jle    0x412ab1
  412a9e:	cli    
  412a9f:	sub    ebp,DWORD PTR [edx]
  412aa1:	arpl   sp,si
  412aa3:	retf   
  412aa4:	mov    edi,DWORD PTR [ebx+edi*8-0x44]
  412aa8:	cwde   
  412aa9:	cmp    esp,DWORD PTR [ebx+0x3a90ae8b]
  412aaf:	gs ins DWORD PTR es:[edi],dx
  412ab1:	bswap  eax
  412ab3:	mov    ch,0x4a
  412ab5:	inc    eax
  412ab6:	nop
  412ab7:	pop    ecx
  412ab8:	or     edx,ecx
  412aba:	scas   al,BYTE PTR es:[edi]
  412abb:	jl     0x412a76
  412abd:	(bad)  
  412abe:	mov    ds:0xacb4cfaa,eax
  412ac3:	rol    BYTE PTR [esp+ebx*1-0x52],cl
  412ac7:	fs daa 
  412ac9:	loopne 0x412b03
  412acb:	rcl    BYTE PTR [ebx-0x39f8333f],0xb0
  412ad2:	mov    WORD PTR [edi],ss
  412ad4:	sbb    eax,0x897a4909
  412ad9:	sub    BYTE PTR [edx-0x12],bh
  412adc:	mov    ds:0x640f043a,al
  412ae1:	or     al,0xfb
  412ae3:	ret    0xcee6
  412ae6:	jo     0x412b35
  412ae8:	repnz fild QWORD PTR [esi]
  412aeb:	mov    edx,0x401d5bff
  412af0:	sub    al,0x45
  412af2:	pop    ss
  412af3:	or     al,0x77
  412af5:	xchg   ebx,eax
  412af6:	mov    eax,ds:0x8a9f1cca
  412afb:	xchg   BYTE PTR [edx-0x51d530ca],dh
  412b01:	mov    dl,0x8
  412b03:	mov    al,0x8
  412b05:	sti    
  412b06:	xchg   esi,eax
  412b07:	pop    es
  412b08:	ror    ebx,cl
  412b0a:	mov    eax,0xbfb293d0
  412b0f:	lea    esp,[ebx]
  412b11:	int3   
  412b12:	sbb    DWORD PTR [ebx+ebp*2-0x3c],0x2e30b921
  412b1a:	adc    BYTE PTR [edi],dh
  412b1c:	rcr    DWORD PTR [edx+eiz*1],cl
  412b1f:	add    eax,0xb72dfcb1
  412b24:	inc    BYTE PTR [edi]
  412b26:	mov    ds:0x473e924a,eax
  412b2b:	xor    al,0x8c
  412b2d:	leave  
  412b2e:	sub    DWORD PTR [eax],0x4271b2c7
  412b34:	out    0x7b,eax
  412b36:	cmp    cl,ah
  412b38:	aad    0xde
  412b3a:	add    bl,bh
  412b3c:	inc    edi
  412b3d:	xor    ch,ch
  412b3f:	aad    0x14
  412b41:	or     BYTE PTR ds:0x86b67963,al
  412b47:	jno    0x412bac
  412b49:	push   ss
  412b4a:	jno    0x412b53
  412b4c:	mov    ds:0xc678e6cd,al
  412b51:	ins    BYTE PTR es:[edi],dx
  412b52:	mov    bl,0xd2
  412b54:	imul   ebx,DWORD PTR [ecx+edi*1+0xdbe94b],0xbc13bde7
  412b5f:	push   ecx
  412b60:	test   BYTE PTR [edi+edx*2+0x73682878],bh
  412b67:	or     DWORD PTR [edx],esp
  412b69:	push   eax
  412b6a:	icebp  
  412b6b:	dec    edi
  412b6c:	add    ah,bl
  412b6e:	fmul   DWORD PTR [ebx+0x36]
  412b71:	push   edi
  412b72:	dec    ecx
  412b73:	les    eax,FWORD PTR [esi+0x5f7b2852]
  412b79:	dec    esi
  412b7a:	or     eax,ebp
  412b7c:	push   0x13190f
  412b81:	adc    ah,bh
  412b83:	call   0xbafa:0x145f00d4
  412b8a:	xchg   ecx,eax
  412b8b:	fsubp  st(1),st
  412b8d:	sub    esi,DWORD PTR [eax+0x7c59e85c]
  412b93:	aas    
  412b94:	iret   
  412b95:	push   edx
  412b96:	inc    edi
  412b97:	stc    
  412b98:	iret   
  412b99:	mov    edx,0x7b86302
  412b9e:	out    dx,eax
  412b9f:	mov    DWORD PTR [esi-0xb439b5e],0xbe308ecd
  412ba9:	imul   edi,DWORD PTR [ebx+0x34],0x47c97f86
  412bb0:	mov    eax,ds:0xe43afe6c
  412bb5:	sub    BYTE PTR [edi+eax*2+0x35],bl
  412bb9:	push   0xfffffff3
  412bbb:	mov    al,ds:0x2ceec9d3
  412bc0:	dec    ebx
  412bc1:	mov    al,ds:0x2f7e9d47
  412bc6:	shr    DWORD PTR ds:0xfd2d35f5,1
  412bcc:	repz jne 0x412c0e
  412bcf:	push   ss
  412bd0:	or     BYTE PTR [esp+ecx*8-0x10854f2e],0xdb
  412bd8:	pop    esi
  412bd9:	add    BYTE PTR [ebx],ah
  412bdb:	mov    al,BYTE PTR [eax-0x45]
  412bde:	stc    
  412bdf:	dec    ecx
  412be0:	imul   edi,DWORD PTR [ebx+0x30e1d7bd],0xc8beb03a
  412bea:	mov    esp,0x74f9a790
  412bef:	(bad)  
  412bf0:	sbb    bh,BYTE PTR [ecx+ecx*1]
  412bf3:	cwde   
  412bf4:	cmp    DWORD PTR [ecx-0x6410a693],edi
  412bfa:	jmp    0xed3c:0x1c0c6c5e
  412c01:	and    DWORD PTR [edx+ecx*2-0xa3df4c0],eax
  412c08:	loop   0x412c59
  412c0a:	push   esp
  412c0b:	jbe    0x412bc2
  412c0d:	add    BYTE PTR [edi-0x11],al
  412c10:	bts    DWORD PTR [eax+0x63],edi
  412c14:	push   es
  412c15:	jnp    0x412c66
  412c17:	scas   al,BYTE PTR es:[edi]
  412c18:	shr    BYTE PTR [edi-0x21],1
  412c1b:	mov    edi,0x34eeccb8
  412c20:	mov    ?,WORD PTR [ecx+0x7c]
  412c23:	mov    dl,0xbb
  412c25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c26:	jmp    0xe0dc:0xc0dd8bd0
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	mov    ah,0xa8
  412c30:	je     0x412bdd
  412c32:	repz (bad) 
  412c34:	push   ss
  412c35:	jl     0x412c9d
  412c37:	sahf   
  412c38:	stos   DWORD PTR es:[edi],eax
  412c39:	and    cl,BYTE PTR [ecx-0x1ace3386]
  412c3f:	pop    ecx
  412c40:	jnp    0x412c88
  412c42:	mov    BYTE PTR [eax+edi*4+0xc520073],ah
  412c49:	(bad)  
  412c4a:	out    dx,eax
  412c4b:	mov    bh,0xd2
  412c4d:	pop    eax
  412c4e:	test   BYTE PTR [ebx-0x8],bh
  412c51:	cmp    eax,0x850b661
  412c56:	loopne 0x412c4a
  412c58:	mov    edi,0x95c541fd
  412c5d:	test   BYTE PTR [eax],al
  412c5f:	(bad)  
  412c60:	outs   dx,BYTE PTR ds:[esi]
  412c61:	loop   0x412c28
  412c63:	addr16 dec esp
  412c65:	or     esi,DWORD PTR [eax+0x5e]
  412c68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c69:	cmc    
  412c6a:	add    al,dl
  412c6c:	adc    DWORD PTR [ebp-0x57],ecx
  412c6f:	cld    
  412c70:	mov    edi,0x67f0caa1
  412c75:	push   esp
  412c76:	fs inc esi
  412c78:	scas   al,BYTE PTR es:[edi]
  412c79:	push   ebp
  412c7a:	cmp    BYTE PTR [esp],bl
  412c7d:	push   es
  412c7e:	inc    eax
  412c7f:	shr    DWORD PTR [edx+eax*8],cl
  412c82:	ds (bad) 
  412c84:	jo     0x412c18
  412c86:	mov    ah,0xf
  412c88:	ror    DWORD PTR [eax-0x2d51fd2e],1
  412c8e:	xchg   ebp,eax
  412c8f:	jl     0x412cbb
  412c91:	mov    al,ds:0xce8eaffe
  412c96:	push   0xc097d788
  412c9b:	push   edi
  412c9c:	xchg   esp,eax
  412c9d:	cmp    eax,0x851b3983
  412ca2:	dec    edx
  412ca3:	loopne 0x412d02
  412ca5:	or     BYTE PTR [edi-0x520e3878],ah
  412cab:	mov    bl,0x56
  412cad:	xor    DWORD PTR ds:0xd1a6765f,edi
  412cb3:	push   eax
  412cb4:	pop    edx
  412cb5:	retf   
  412cb6:	xor    al,0xd9
  412cb8:	dec    edi
  412cb9:	pop    edi
  412cba:	icebp  
  412cbb:	call   0xf181b361
  412cc0:	adc    DWORD PTR [esi-0x2b],esi
  412cc3:	fadd   st(7),st
  412cc5:	xlat   BYTE PTR ds:[ebx]
  412cc6:	je     0x412ce9
  412cc8:	idiv   DWORD PTR [edi]
  412cca:	or     BYTE PTR [esi-0x783bbc8b],dl
  412cd0:	xchg   edi,eax
  412cd1:	clc    
  412cd2:	dec    eax
  412cd3:	je     0x412c8e
  412cd5:	cld    
  412cd6:	mov    ds:0xd57b2c47,eax
  412cdb:	xchg   edx,eax
  412cdc:	lds    esp,FWORD PTR [esi]
  412cde:	add    al,0x9
  412ce0:	dec    ebp
  412ce1:	mov    eax,ds:0x85911525
  412ce6:	mov    fs,WORD PTR [ebp-0x7a8cdb]
  412cec:	sbb    al,0x6c
  412cee:	xor    ecx,esp
  412cf0:	popa   
  412cf1:	xchg   ecx,eax
  412cf2:	pop    ecx
  412cf3:	sub    ebp,0xf536d245
  412cf9:	mov    gs:0xd3062508,eax
  412cff:	mov    al,0x4f
  412d01:	outs   dx,BYTE PTR ds:[esi]
  412d02:	pop    ss
  412d03:	aam    0xe
  412d05:	fidivr WORD PTR ds:0x71abb34a
  412d0c:	fmul   DWORD PTR [ebp+0x5a]
  412d0f:	sbb    eax,0xa996d50c
  412d14:	inc    ebx
  412d15:	cld    
  412d16:	mov    esp,0x9e196a56
  412d1b:	add    edx,DWORD PTR ds:0x7f887e1d
  412d21:	sgdtd  [eax-0x1df7bbb5]
  412d28:	or     DWORD PTR [edi+0x40],edx
  412d2b:	addr16 (bad) 
  412d2d:	adc    dh,dh
  412d2f:	(bad)  
  412d30:	mov    edx,0xdd37cd5e
  412d35:	or     al,0x69
  412d37:	enter  0xff91,0xc5
  412d3b:	inc    edx
  412d3c:	and    al,0x9a
  412d3e:	test   eax,0xf286d199
  412d43:	push   ebp
  412d44:	or     eax,0x843aab6a
  412d49:	mov    bl,0x10
  412d4b:	jno    0x412d28
  412d4d:	or     ah,dl
  412d4f:	into   
  412d50:	push   edi
  412d51:	in     al,dx
  412d52:	int3   
  412d53:	outs   dx,BYTE PTR ds:[esi]
  412d54:	(bad)  
  412d55:	xor    al,0x35
  412d57:	or     al,0xc4
  412d59:	cmp    al,0x9f
  412d5b:	sub    al,0x60
  412d5d:	inc    ecx
  412d5e:	adc    al,0xc6
  412d61:	push   edi
  412d62:	mov    DWORD PTR [ebx+edi*1-0x70],esp
  412d66:	mov    cl,0x4
  412d68:	cs aam 0x90
  412d6b:	sbb    bl,al
  412d6d:	sbb    ebx,DWORD PTR [edx-0x50f9c027]
  412d73:	xchg   ecx,eax
  412d74:	fild   WORD PTR [ecx]
  412d76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d77:	mov    bh,0x5
  412d79:	mov    al,0x96
  412d7b:	daa    
  412d7c:	out    0x68,al
  412d7e:	in     eax,0x1f
  412d80:	sub    cl,BYTE PTR [eax-0x370a5400]
  412d86:	repnz cwde 
  412d88:	and    eax,0x69940a8b
  412d8d:	push   ss
  412d8e:	inc    ecx
  412d8f:	(bad)  
  412d91:	dec    ebp
  412d92:	jg     0x412db9
  412d94:	rol    BYTE PTR [esi-0x4a],1
  412d97:	adc    ebp,DWORD PTR [esi]
  412d99:	mov    bh,0xa
  412d9b:	sbb    al,0x95
  412d9d:	jae    0x412d81
  412d9f:	xor    DWORD PTR [ebx+0x54],ebx
  412da2:	mov    edi,0x35e44290
  412da7:	push   eax
  412da8:	test   eax,0x9011d6e4
  412dad:	push   cs
  412dae:	ja     0x412daa
  412db0:	scas   al,BYTE PTR es:[edi]
  412db1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412db2:	cmp    eax,0x177b586f
  412db7:	xchg   ecx,eax
  412db8:	mov    edx,0xd7670828
  412dbd:	xor    BYTE PTR [ebx+0x6c],ch
  412dc0:	retf   0x5405
  412dc3:	mov    edi,0x1af631
  412dc8:	mov    cl,0x82
  412dca:	enter  0xc893,0x88
  412dce:	loope  0x412e14
  412dd0:	iret   
  412dd1:	inc    ebp
  412dd2:	imul   ecx,DWORD PTR [esi-0x30],0xffffffe4
  412dd6:	sti    
  412dd7:	inc    edi
  412dd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dd9:	xchg   esp,ecx
  412ddb:	xrstors [esi]
  412dde:	pop    ds
  412ddf:	in     eax,dx
  412de0:	push   ss
  412de1:	jecxz  0x412dce
  412de3:	push   0x40
  412de5:	test   DWORD PTR [edx-0x37db1e82],edi
  412deb:	in     eax,dx
  412dec:	(bad)  
  412ded:	dec    esi
  412dee:	rol    BYTE PTR [edx+ecx*2-0x7b],1
  412df2:	popa   
  412df3:	je     0x412d97
  412df5:	pusha  
  412df6:	in     eax,0xbf
  412df8:	popf   
  412df9:	iret   
  412dfa:	lds    ebx,FWORD PTR [ecx-0x2a9f169e]
  412e00:	sbb    DWORD PTR [edi],ecx
  412e02:	retf   0xec9a
  412e05:	and    DWORD PTR [ebp+esi*8-0x65557e3a],ebp
  412e0c:	retf   0x17c8
  412e0f:	push   ss
  412e10:	inc    edx
  412e11:	rol    BYTE PTR [ebp+0x71dcb32f],cl
  412e17:	jno    0x412dc2
  412e19:	mov    esi,DWORD PTR [eax+ebp*1+0x10b45208]
  412e20:	push   ds
  412e21:	sub    eax,0xf6245242
  412e26:	out    dx,eax
  412e27:	mov    eax,0xabaf8582
  412e2c:	xor    esi,DWORD PTR [esi]
  412e2e:	or     al,0x83
  412e30:	popf   
  412e31:	and    DWORD PTR [ecx-0xa9bbc55],edx
  412e37:	call   0x8569680b
  412e3c:	jmp    DWORD PTR [esi]
  412e3e:	int    0x14
  412e40:	xlat   BYTE PTR ds:[ebx]
  412e41:	dec    ebp
  412e42:	add    BYTE PTR [edx],ah
  412e44:	xor    dl,cl
  412e46:	sbb    eax,0xc1888871
  412e4b:	cmove  esi,DWORD PTR [ebx]
  412e4e:	and    DWORD PTR [edi+ebp*4],edi
  412e51:	dec    ebp
  412e52:	inc    ebx
  412e53:	call   DWORD PTR [eax+0x630f98b2]
  412e59:	rcl    DWORD PTR [esi],cl
  412e5b:	add    al,0xb0
  412e5d:	nop
  412e5e:	std    
  412e5f:	cmp    ebp,esi
  412e61:	and    eax,0x719a8734
  412e66:	push   ecx
  412e67:	pop    ss
  412e68:	mov    ds:0xdfa5b690,eax
  412e6d:	aad    0xa4
  412e6f:	dec    esi
  412e70:	inc    ecx
  412e71:	mov    esp,0x6d682762
  412e76:	inc    ecx
  412e77:	mov    al,ds:0x165039ee
  412e7c:	std    
  412e7d:	(bad)  
  412e7e:	xchg   edi,eax
  412e7f:	sub    dh,BYTE PTR [ebp+0x234d4123]
  412e85:	cld    
  412e86:	cmp    DWORD PTR [edx-0x10],ebx
  412e89:	shl    BYTE PTR [eax-0x77],0x1a
  412e8d:	(bad)  
  412e8e:	sub    BYTE PTR [ecx+0x3bb3c0be],ah
  412e94:	adc    eax,0xf3a1df63
  412e99:	push   ds
  412e9a:	out    dx,eax
  412e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e9c:	(bad)  
  412e9d:	cli    
  412e9e:	sbb    eax,0x1f5101a3
  412ea3:	push   edx
  412ea4:	lea    edx,[esi]
  412ea6:	mov    DWORD PTR [ebx+edx*2],edx
  412ea9:	jge    0x412ecd
  412eab:	pop    esp
  412eac:	mov    bh,bh
  412eae:	jle    0x412e5b
  412eb0:	iret   
  412eb1:	mov    al,0x4d
  412eb3:	leave  
  412eb4:	add    bl,BYTE PTR [edi]
  412eb6:	cmp    DWORD PTR [edx+edi*8-0x7],0x32dc811d
  412ebe:	push   cs
  412ebf:	sbb    ebx,DWORD PTR ds:0xcf5f3cd4
  412ec5:	cmp    ecx,ebx
  412ec7:	imul   esp,DWORD PTR [edi+edi*4],0x73685d92
  412ece:	mov    BYTE PTR [eax+0x2b992368],cl
  412ed4:	mov    eax,0x7a9e418
  412ed9:	arpl   WORD PTR [edx+eax*2+0x58],sp
  412edd:	adc    DWORD PTR ds:0xcc59bacf,esi
  412ee3:	adc    al,0x1b
  412ee5:	stc    
  412ee6:	dec    ebx
  412ee7:	and    al,0x57
  412ee9:	enter  0x2991,0xfb
  412eed:	pop    ss
  412eee:	enter  0x560,0xf3
  412ef2:	jmp    0x698db80b
  412ef7:	sbb    edx,0x78
  412efa:	cmp    DWORD PTR [edi],esi
  412efc:	add    DWORD PTR [edx-0x70],esi
  412eff:	ret    
  412f00:	adc    dh,al
  412f02:	mov    edi,0xbe08cc34
  412f07:	adc    bl,BYTE PTR [ebx+0xf]
  412f0a:	(bad)  
  412f0c:	jl     0x412f29
  412f0e:	icebp  
  412f0f:	je     0x412f45
  412f11:	inc    ebx
  412f12:	stos   DWORD PTR es:[edi],eax
  412f13:	(bad)  
  412f14:	stos   DWORD PTR es:[edi],eax
  412f15:	mov    ah,0xdc
  412f17:	mov    ebx,0xe09dec4
  412f1c:	dec    ebp
  412f1d:	int3   
  412f1e:	sbb    eax,0x247818e3
  412f23:	fsub   DWORD PTR [esi-0x64]
  412f26:	adc    BYTE PTR [edi-0x19],bh
  412f29:	pop    ds
  412f2a:	add    BYTE PTR [ecx-0x2eff927b],0x19
  412f31:	sbb    edi,DWORD PTR [ecx+0x1bdfce9e]
  412f37:	lock adc esi,ebx
  412f3a:	sub    BYTE PTR [edi-0x58e9796f],0x60
  412f41:	shl    eax,0x9c
  412f44:	pop    ss
  412f45:	in     al,dx
  412f46:	mov    esi,0xf63678bb
  412f4b:	ss mov al,0xe1
  412f4e:	and    al,ah
  412f50:	sbb    bl,cl
  412f52:	aad    0xd5
  412f54:	or     DWORD PTR [eax+ecx*4],0x61
  412f58:	int    0xe0
  412f5a:	jo     0x412f2c
  412f5c:	lods   al,BYTE PTR ds:[esi]
  412f5d:	inc    ecx
  412f5e:	pop    edi
  412f5f:	xor    esp,ebp
  412f61:	sbb    DWORD PTR [edx+0x9f5b101],edx
  412f67:	scas   al,BYTE PTR es:[edi]
  412f68:	jmp    0xbb727541
  412f6d:	(bad)  
  412f6e:	dec    esi
  412f6f:	sub    al,0xa3
  412f71:	sub    BYTE PTR [eax-0x19],dh
  412f74:	dec    esi
  412f75:	loope  0x412f1d
  412f77:	cmp    esp,DWORD PTR [esi-0x369d3b4d]
  412f7d:	dec    edx
  412f7e:	sub    eax,DWORD PTR [esi+0x3c61c6a9]
  412f84:	jmp    0x412f56
  412f86:	mov    ebx,0x5ece59a9
  412f8b:	inc    eax
  412f8c:	mov    ebx,0x227adf74
  412f91:	(bad)  [edi+0x63b97b5a]
  412f97:	loope  0x412f37
  412f99:	jne    0x412fd4
  412f9b:	rcr    DWORD PTR [ecx],1
  412f9d:	test   edi,0xf3717acb
  412fa3:	outs   dx,DWORD PTR ds:[esi]
  412fa4:	pop    ss
  412fa5:	xchg   ebp,eax
  412fa6:	pop    ebx
  412fa7:	sbb    eax,0x4697c6a6
  412fac:	repnz ficomp DWORD PTR [esi-0x5dfe3e21]
  412fb3:	dec    BYTE PTR ds:0xc8d3d745
  412fb9:	les    edx,FWORD PTR [ebp+0x3eeabd43]
  412fbf:	and    eax,0xae4cd126
  412fc4:	into   
  412fc5:	dec    edx
  412fc6:	jb     0x412fad
  412fc8:	std    
  412fc9:	sub    dh,BYTE PTR [edi-0x5f]
  412fcc:	xor    bh,al
  412fce:	xor    eax,0xc1333c10
  412fd3:	outs   dx,BYTE PTR ds:[esi]
  412fd4:	div    bh
  412fd6:	jmp    0x412f75
  412fd8:	sbb    BYTE PTR [ebx-0x258710ab],al
  412fde:	stos   DWORD PTR es:[edi],eax
  412fdf:	js     0x412fc2
  412fe1:	(bad)  
  412fe2:	rol    BYTE PTR [ebx-0x4298a6c5],cl
  412fe8:	adc    cl,ah
  412fea:	lahf   
  412feb:	ss hlt 
  412fed:	aad    0x37
  412fef:	leave  
  412ff0:	sbb    DWORD PTR [ebx-0x1c],esp
  412ff3:	ss aam 0x83
  412ff6:	fwait
  412ff7:	inc    esi
  412ff8:	fsubrp st(2),st
  412ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ffb:	cmp    eax,0x5468648
  413000:	ret    
  413001:	cwde   
  413002:	mov    WORD PTR ds:0x13b993c2,es
  413008:	jmp    0x413074
  41300a:	les    ebp,FWORD PTR [eax+0x37d9b9e3]
  413010:	mov    DWORD PTR [edi],edx
  413012:	inc    esp
  413013:	xchg   ebp,eax
  413014:	fisttp WORD PTR [edx-0x8]
  413017:	pop    ecx
  413018:	loop   0x413031
  41301a:	js     0x412fff
  41301c:	add    BYTE PTR [ebp+0x5f],bh
  41301f:	(bad)  
  413021:	in     al,0x73
  413023:	lea    esi,[esi+ecx*8-0x4e8bdfa9]
  41302a:	jmp    0x15fc:0x4910ed3a
  413031:	add    dl,bl
  413033:	dec    esi
  413034:	(bad)  
  413035:	mov    ah,0xe0
  413037:	not    DWORD PTR [eax+0x7051f59a]
  41303d:	or     DWORD PTR [eax+0x7a],eax
  413040:	sub    ch,al
  413042:	add    edx,ecx
  413044:	jbe    0x413020
  413046:	xor    eax,0xf079b78d
  41304b:	or     BYTE PTR [esi],dl
  41304d:	int3   
  41304e:	mov    esi,0xf08457c8
  413053:	ja     0x73c24dfd
  413059:	adc    BYTE PTR [ebp-0x4b],dh
  41305c:	adc    al,0x3f
  41305e:	mov    edi,0xa5b1a71e
  413063:	into   
  413064:	(bad)  [ecx]
  413066:	dec    edx
  413067:	pop    es
  413068:	adc    al,0xaf
  41306a:	jge    0x413072
  41306c:	rol    BYTE PTR [edx],cl
  41306e:	scas   al,BYTE PTR es:[edi]
  41306f:	scas   al,BYTE PTR es:[edi]
  413070:	enter  0x707b,0x2e
  413074:	stos   DWORD PTR es:[edi],eax
  413075:	int3   
  413076:	xchg   ebx,eax
  413077:	sbb    DWORD PTR [edx],esp
  413079:	imul   ebp,DWORD PTR cs:0x66a21417,0xffffffbe
  413081:	xor    eax,0x7dd94962
  413086:	mov    ch,0x91
  413088:	jge    0x41304a
  41308a:	xchg   ecx,eax
  41308b:	sub    ch,BYTE PTR [ebx-0x19b3e290]
  413091:	add    esp,DWORD PTR [ebp+0x4d8d154c]
  413097:	sbb    eax,0xd9495fe5
  41309c:	call   0xf68e5cbd
  4130a1:	not    BYTE PTR [edi-0x19]
  4130a4:	push   eax
  4130a5:	fdiv   DWORD PTR [ebx-0x6feb39c0]
  4130ab:	dec    edx
  4130ac:	std    
  4130ad:	retf   0x29cc
  4130b0:	lock jbe 0x413079
  4130b3:	call   0x2dc7:0x40ba8569
  4130ba:	cs inc ebx
  4130bc:	cmp    edi,0xffffff84
  4130bf:	mov    bl,0xee
  4130c1:	(bad)  
  4130c2:	adc    al,dl
  4130c4:	aam    0xf4
  4130c6:	jae    0x4130ea
  4130c8:	enter  0x7cc1,0x6c
  4130cc:	rcl    BYTE PTR [edi+0x7b32d830],0xb9
  4130d3:	push   esi
  4130d4:	pop    ecx
  4130d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130d6:	les    esp,FWORD PTR [eax+ecx*1+0x69]
  4130da:	mov    al,0x58
  4130dc:	(bad)  
  4130dd:	push   esi
  4130de:	retf   0xf9c2
  4130e1:	les    ebx,FWORD PTR [eax+0x7b]
  4130e4:	js     0x4130d3
  4130e6:	out    dx,eax
  4130e7:	imul   esi,DWORD PTR [ebx+0x4d],0xda9af2c1
  4130ee:	retf   
  4130ef:	add    ebp,DWORD PTR [edi]
  4130f1:	enter  0xc9ae,0x54
  4130f5:	mov    esp,0xb335aef3
  4130fa:	cmc    
  4130fb:	js     0x41315a
  4130fd:	xchg   BYTE PTR [esi-0x230014fc],bh
  413103:	inc    esp
  413104:	mov    edi,0xc786f6f1
  413109:	inc    edi
  41310b:	mov    eax,0xc05e0e63
  413110:	and    cl,BYTE PTR [edx]
  413112:	xor    al,0x37
  413114:	inc    esi
  413115:	xchg   BYTE PTR [esp+esi*8],dl
  413118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41311a:	mov    ah,0x9a
  41311c:	push   ebx
  41311d:	lea    esp,[edi+0x7e7000b1]
  413123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413124:	lods   al,BYTE PTR ds:[esi]
  413125:	jecxz  0x4130e3
  413127:	dec    eax
  413128:	or     eax,0x3c88f2dd
  41312d:	aas    
  41312e:	push   edi
  41312f:	sahf   
  413130:	pmuludq mm7,QWORD PTR [esi+0x2c]
  413134:	xchg   ecx,eax
  413135:	(bad)  
  413136:	popa   
  413137:	pop    es
  413138:	shl    BYTE PTR [eax+0x52],1
  41313b:	push   ds
  41313c:	or     DWORD PTR [esi+edi*4+0x26a3d110],edx
  413143:	sar    BYTE PTR [eax+0x10],cl
  413146:	enter  0x36be,0xf4
  41314a:	repnz add BYTE PTR es:[eax-0x35],ah
  41314f:	int3   
  413150:	lea    esp,[edx+0x598ea3c9]
  413156:	es (bad) 
  413158:	(bad)  
  413159:	jb     0x4131bb
  41315b:	cmp    eax,0x54ce7395
  413160:	sub    eax,0xf22d4a6c
  413165:	mov    edx,0x392b356b
  41316a:	add    ch,BYTE PTR [ecx+0x560b5838]
  413170:	mov    bh,0x6f
  413172:	inc    eax
  413173:	push   edi
  413174:	mov    ds:0xd13bacd5,eax
  413179:	push   edi
  41317a:	xchg   edi,eax
  41317b:	addr16 xchg esp,eax
  41317d:	fsubr  QWORD PTR cs:[ecx+edx*4+0x6ae46ab0]
  413185:	mov    esi,0x219392c0
  41318a:	inc    ebx
  41318b:	test   al,0x85
  41318d:	stos   BYTE PTR es:[edi],al
  41318e:	aas    
  41318f:	icebp  
  413190:	ss mov al,0x7f
  413193:	dec    esp
  413194:	mov    ebp,0xa9400382
  413199:	mov    al,ds:0xda770ae1
  41319e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41319f:	loop   0x413148
  4131a1:	fcom   QWORD PTR [ecx-0x45]
  4131a4:	retf   0x70fc
  4131a7:	mov    BYTE PTR [ebx],dh
  4131a9:	outs   dx,DWORD PTR ds:[esi]
  4131aa:	and    eax,0x393ebdcb
  4131af:	adc    ebx,ecx
  4131b1:	aam    0x4e
  4131b3:	test   DWORD PTR [ebx-0x52],esp
  4131b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131b7:	or     ebp,DWORD PTR [ecx+0x540bc495]
  4131bd:	add    al,0x7b
  4131bf:	ret    
  4131c0:	shl    BYTE PTR [ecx],0xad
  4131c3:	bound  edx,QWORD PTR [ecx]
  4131c5:	mov    al,0x31
  4131c7:	lock sbb BYTE PTR [edi-0x4b850a22],bl
  4131ce:	add    ecx,DWORD PTR [ebx]
  4131d0:	mov    fs,WORD PTR [ecx+0x4e3b5994]
  4131d6:	and    al,0xd
  4131d8:	enter  0xb240,0x5f
  4131dc:	or     ah,ah
  4131de:	inc    esi
  4131df:	inc    edx
  4131e0:	cdq    
  4131e1:	ror    BYTE PTR [edx+ecx*4],1
  4131e4:	or     DWORD PTR [ebx-0x7b],0x328bd7dd
  4131eb:	xchg   edx,eax
  4131ec:	lock mov ch,0x18
  4131ef:	or     al,BYTE PTR [edi+0x7666db5]
  4131f5:	ret    0xf394
  4131f8:	dec    esi
  4131f9:	out    dx,eax
  4131fa:	outs   dx,DWORD PTR ds:[esi]
  4131fb:	sbb    al,0x1e
  4131fd:	popa   
  4131fe:	aas    
  4131ff:	js     0x4131b8
  413201:	mov    esi,0x2c7fe8d
  413206:	loope  0x4131c2
  413208:	stc    
  413209:	add    BYTE PTR [edi-0x4657ba39],bl
  41320f:	in     eax,dx
  413210:	adc    eax,0xb628a84f
  413215:	push   ss
  413216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413217:	test   DWORD PTR [edi+0x72],edx
  41321a:	call   0x3f32:0x58c0c185
  413221:	mov    ebx,0x179caf16
  413226:	xor    al,0x5b
  413228:	enter  0xe687,0x41
  41322c:	and    ah,BYTE PTR [edi]
  41322e:	sub    al,0xa1
  413230:	cwde   
  413231:	cld    
  413232:	jl     0x41328d
  413234:	sub    DWORD PTR [esi-0x48fb5486],esi
  41323a:	fcmovu st,st(5)
  41323c:	mov    bl,0x4a
  41323e:	sub    eax,0xa4a2ef44
  413243:	(bad)  
  413244:	js     0x41328c
  413246:	loopne 0x413250
  413248:	cdq    
  413249:	repnz sahf 
  41324b:	dec    eax
  41324c:	dec    ebx
  41324d:	ss xor ch,bh
  413250:	adc    esp,DWORD PTR [eax-0x72]
  413253:	test   al,0xd5
  413255:	addr16 in eax,dx
  413257:	jae    0x413275
  413259:	(bad)  
  41325a:	repz into 
  41325c:	or     DWORD PTR [eax+0x4f],0x11
  413260:	pop    ecx
  413261:	push   ebx
  413262:	pushf  
  413263:	sti    
  413264:	daa    
  413265:	adc    esp,edx
  413267:	add    BYTE PTR [eax],dh
  413269:	inc    edi
  41326a:	fwait
  41326b:	or     eax,0x24ac48ae
  413270:	push   ebx
  413271:	jecxz  0x41321e
  413273:	jbe    0x413271
  413275:	push   0xc0278ae2
  41327a:	mov    edx,0x97565982
  41327f:	xchg   ecx,eax
  413280:	push   es
  413281:	stos   BYTE PTR es:[edi],al
  413282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413283:	lods   al,BYTE PTR ds:[esi]
  413284:	xchg   esi,eax
  413285:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413286:	mov    esi,0x21ddc051
  41328b:	inc    ebx
  41328c:	sub    eax,0xd4f723ed
  413291:	or     al,cl
  413293:	pop    ecx
  413294:	(bad)  
  413295:	and    DWORD PTR [esi-0x4a379bda],eax
  41329b:	sub    eax,0x8bf8c504
  4132a0:	sti    
  4132a1:	mul    DWORD PTR [edx-0x77]
  4132a4:	(bad)  [ecx]
  4132a6:	inc    esi
  4132a7:	imul   edx,DWORD PTR [edx+ebx*2],0x4d95e31
  4132ae:	jp     0x413248
  4132b0:	data16 (bad) 
  4132b2:	pop    ebp
  4132b3:	in     eax,0xcc
  4132b5:	hlt    
  4132b6:	addr16 dec ebx
  4132b8:	clc    
  4132b9:	push   0x5ba2d6e8
  4132be:	or     al,0xd9
  4132c0:	aam    0x91
  4132c2:	cmp    BYTE PTR [ebp-0x3429e5a6],0x54
  4132c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132ca:	popa   
  4132cb:	mov    al,ds:0xf996fa10
  4132d0:	adc    ch,dh
  4132d2:	push   ebp
  4132d3:	sub    eax,0x2dfdde57
  4132d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132d9:	or     BYTE PTR [edx-0x46],dh
  4132dc:	or     edx,DWORD PTR [ebp-0x4c]
  4132df:	je     0x4132ce
  4132e1:	(bad)  
  4132e2:	imul   ebx,DWORD PTR [eax+0x57],0xffffff8e
  4132e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132e7:	shl    edx,1
  4132e9:	ret    0x71ca
  4132ec:	je     0x413327
  4132ee:	gs mov bl,ah
  4132f1:	lock in eax,0xb0
  4132f4:	cwde   
  4132f5:	iret   
  4132f6:	jle    0x41333b
  4132f8:	fs mov edi,0x91f44adc
  4132fe:	pop    ss
  4132ff:	pusha  
  413300:	pop    ss
  413301:	cmp    eax,0xec0e5f26
  413306:	mov    eax,ds:0x8316435
  41330b:	dec    ebp
  41330c:	sub    edx,DWORD PTR [ebx-0x3f42f43c]
  413312:	and    al,0xc8
  413314:	rcl    ecx,0x77
  413317:	fstp   DWORD PTR [ecx]
  413319:	(bad)  
  41331a:	adc    DWORD PTR [edx-0x24],ecx
  41331d:	leave  
  41331e:	push   ds
  41331f:	pop    eax
  413320:	popa   
  413321:	pusha  
  413322:	jae    0x4132ef
  413324:	aam    0x24
  413326:	ins    BYTE PTR es:[edi],dx
  413327:	ret    
  413328:	cmp    al,BYTE PTR [ebx]
  41332a:	ret    
  41332b:	pop    edx
  41332c:	and    eax,edi
  41332e:	lea    edx,[ebp+0x791e48a8]
  413334:	sbb    eax,0x61ee1ee2
  413339:	push   0x7d
  41333b:	adc    al,0x42
  41333d:	mov    ebp,0xe7839c9c
  413342:	push   esi
  413343:	inc    esp
  413344:	gs sub edx,ecx
  413347:	fsubp  st(7),st
  413349:	mov    fs,WORD PTR [edi]
  41334b:	dec    eax
  41334c:	or     bh,BYTE PTR [esi+ebx*2-0x2c]
  413350:	les    ecx,FWORD PTR [eax]
  413352:	cmp    esp,0xffffff83
  413355:	stos   BYTE PTR es:[edi],al
  413356:	dec    esi
  413357:	test   BYTE PTR [ebx-0x2a],ch
  41335a:	xchg   ebx,eax
  41335b:	shl    esp,1
  41335d:	lods   al,BYTE PTR ds:[esi]
  41335e:	add    al,BYTE PTR [eax+0x23]
  413361:	mov    ds:0xe558d7f1,eax
  413366:	int3   
  413367:	cmc    
  413368:	xor    al,dh
  41336a:	and    DWORD PTR [ebx],esi
  41336c:	bound  eax,QWORD PTR [edx+0x22c55115]
  413372:	mov    ss,WORD PTR [edi]
  413374:	mov    BYTE PTR [edi],ah
  413376:	xchg   ecx,eax
  413377:	cs jp  0x41338d
  41337a:	outs   dx,DWORD PTR ds:[esi]
  41337b:	(bad)  
  41337c:	push   0xffffffce
  41337e:	mov    BYTE PTR [esi+0x6e],ah
  413381:	rcl    DWORD PTR [edx+0x2dc6b74f],1
  413387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413388:	mov    WORD PTR [esi],ss
  41338a:	test   eax,0xbfae4557
  41338f:	pop    edx
  413390:	ins    BYTE PTR es:[edi],dx
  413391:	shl    BYTE PTR [ebx+0x4cd83bc2],0x74
  413398:	rol    esp,0x6f
  41339b:	mov    BYTE PTR [ecx+0x58],dh
  41339e:	loopne 0x4133fc
  4133a0:	fild   WORD PTR [edx-0x60]
  4133a3:	in     eax,0xbc
  4133a5:	ds je  0x41339f
  4133a8:	ror    DWORD PTR [eax],0x1c
  4133ab:	sub    esp,edi
  4133ad:	fdiv   DWORD PTR [edi-0x68329ab1]
  4133b3:	inc    esi
  4133b4:	add    eax,0x7e9ff1a6
  4133b9:	(bad)  
  4133ba:	mov    dl,0x14
  4133bc:	xlat   BYTE PTR ds:[ebx]
  4133bd:	leave  
  4133be:	data16 cld 
  4133c0:	jg     0x4133d3
  4133c2:	lods   eax,DWORD PTR ds:[esi]
  4133c3:	loope  0x413347
  4133c5:	jle    0x413363
  4133c7:	repnz ins DWORD PTR es:[edi],dx
  4133c9:	xor    DWORD PTR [ecx+0x3a3f245b],esi
  4133cf:	adc    ch,BYTE PTR [ebx+0x387c14f4]
  4133d5:	add    al,0x19
  4133d7:	sub    ecx,DWORD PTR [eax+ecx*1+0x42b37684]
  4133de:	or     DWORD PTR ds:0x88693660,0xffffffbb
  4133e5:	imul   edi,eax,0x2356afb2
  4133eb:	ja     0x413389
  4133ed:	jp     0x4133a2
  4133ef:	inc    edi
  4133f0:	sub    BYTE PTR [ebp-0x58],bh
  4133f3:	jg     0x4133b8
  4133f5:	out    dx,al
  4133f6:	mov    ebp,0xaec99c3
  4133fb:	es inc edi
  4133fd:	pop    esp
  4133fe:	pusha  
  4133ff:	mov    edx,0x6e36d21b
  413404:	cmp    al,0xcb
  413406:	mov    eax,ds:0xcdbda1a3
  41340b:	dec    edi
  41340c:	sbb    eax,ebx
  41340e:	inc    esi
  41340f:	mov    eax,ds:0x63071394
  413414:	jmp    0x4133ce
  413416:	mov    bh,0x57
  413418:	enter  0xda96,0x15
  41341c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41341d:	dec    ebp
  41341e:	cmovle edi,edi
  413421:	out    0x4a,al
  413423:	sbb    BYTE PTR [eax-0x14],bh
  413426:	imul   BYTE PTR [ebx]
  413428:	sub    DWORD PTR [edx+ebp*4+0x7],edi
  41342c:	mov    edi,0x1e0cae63
  413431:	stos   BYTE PTR es:[edi],al
  413432:	loopne 0x4133fc
  413434:	fdiv   QWORD PTR [ecx+ebx*2-0x4318b43f]
  41343b:	nop    DWORD PTR [ecx]
  41343e:	retf   
  41343f:	sub    bh,0xa2
  413442:	mov    esi,0xa318afc5
  413447:	test   DWORD PTR [ebp-0xc],esi
  41344a:	push   edx
  41344b:	stc    
  41344c:	rcl    eax,cl
  41344e:	add    DWORD PTR [ecx+edx*2+0x55],edx
  413452:	clc    
  413453:	mov    esi,0x93ee92d1
  413458:	fsubrp st(4),st
  41345a:	mov    dl,0x89
  41345c:	inc    ebp
  41345d:	(bad)  
  41345e:	mov    ecx,0xd9156b07
  413463:	stos   DWORD PTR es:[edi],eax
  413464:	pusha  
  413465:	sub    BYTE PTR [edi],dh
  413467:	push   cs
  413468:	push   esi
  413469:	inc    ebp
  41346a:	or     bl,ah
  41346c:	mov    bl,0x7e
  41346e:	xor    eax,0x668f0bca
  413473:	gs in  al,0x1a
  413476:	popf   
  413477:	mov    al,ds:0x94829735
  41347c:	xlat   BYTE PTR ds:[ebx]
  41347d:	aad    0x10
  41347f:	(bad)  
  413480:	xchg   esi,eax
  413481:	mov    ah,0xf
  413483:	mov    edi,0xe5f0ef37
  413488:	out    dx,al
  413489:	inc    edx
  41348a:	imul   ecx,edx,0xffffff8f
  41348d:	(bad)  
  41348e:	lahf   
  41348f:	pop    ebx
  413490:	popf   
  413491:	fldl2t 
  413493:	fimul  WORD PTR [edx-0x37]
  413496:	imul   BYTE PTR [ecx+0x693de132]
  41349c:	mov    cl,0x1d
  41349e:	sbb    dh,BYTE PTR [esi]
  4134a0:	hlt    
  4134a1:	mov    fs,ebx
  4134a3:	les    eax,FWORD PTR [ebx+ecx*8]
  4134a6:	cmp    edi,DWORD PTR [ebp-0x2050f9f7]
  4134ac:	aas    
  4134ad:	jns    0x413447
  4134af:	cs cli 
  4134b1:	pop    es
  4134b2:	shl    BYTE PTR [ebx-0x2ea843e7],cl
  4134b8:	imul   edi,ecx,0xa
  4134bb:	sbb    DWORD PTR [ebx+ecx*8],ebx
  4134be:	or     ebp,ebp
  4134c0:	shl    DWORD PTR [ecx],0x37
  4134c3:	arpl   WORD PTR [ebx-0x36],dx
  4134c6:	mov    al,0x6b
  4134c8:	in     al,dx
  4134c9:	adc    DWORD PTR [ebx],ecx
  4134cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134cc:	ror    DWORD PTR [ebx-0x17],cl
  4134cf:	xor    al,0x80
  4134d1:	cmp    eax,0xff208493
  4134d6:	test   BYTE PTR [ecx],0x23
  4134d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134da:	ins    DWORD PTR es:[edi],dx
  4134db:	mov    eax,ds:0xf045da76
  4134e0:	(bad)  [edx-0x22]
  4134e3:	or     ch,BYTE PTR [edi]
  4134e5:	(bad)  
  4134e6:	cli    
  4134e7:	mov    ds:0xd2f2879,eax
  4134ec:	jge    0x4134bc
  4134ee:	aam    0xb5
  4134f0:	xchg   ecx,eax
  4134f1:	xchg   ebx,eax
  4134f2:	mov    ebx,0xa0aeaf65
  4134f7:	int3   
  4134f8:	pusha  
  4134f9:	out    0x81,al
  4134fb:	sbb    BYTE PTR [edx+0x3d],al
  4134fe:	nop
  4134ff:	and    eax,0x973e9076
  413504:	sar    ebp,1
  413506:	sub    al,0xad
  413508:	mul    BYTE PTR [edx-0x66]
  41350b:	hlt    
  41350c:	xchg   DWORD PTR [edx-0x2f70cd6],ebp
  413512:	mov    BYTE PTR [ebx],bl
  413514:	mov    ebp,DWORD PTR [eax+0x275fa1e0]
  41351a:	mov    ds:0xdc6fb077,al
  41351f:	shl    DWORD PTR [ecx+0x5a3f51e9],cl
  413525:	pusha  
  413526:	loope  0x41356c
  413528:	(bad)  
  413529:	xor    DWORD PTR fs:[edi],edx
  41352c:	push   0x950c0c34
  413531:	stos   BYTE PTR es:[edi],al
  413532:	jo     0x4135af
  413534:	push   esi
  413535:	jle    0x4134ba
  413537:	push   es
  413538:	inc    si
  41353a:	jbe    0x4134df
  41353c:	mov    cl,BYTE PTR [eax+0x2b4a7cd2]
  413542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413543:	lahf   
  413544:	retf   0x1b53
  413547:	xor    al,0xe7
  413549:	in     al,0xc
  41354b:	sbb    edi,DWORD PTR [esi]
  41354d:	cs in  eax,dx
  41354f:	ja     0x4135a4
  413551:	pushf  
  413552:	fucomp st(3)
  413554:	enter  0x8230,0x7d
  413558:	dec    esi
  413559:	mov    edi,0x7d86d539
  41355e:	call   0xe69e173a
  413563:	fsubp  st(5),st
  413565:	fs pop ebp
  413567:	pop    ecx
  413568:	pmaxub mm4,QWORD PTR [ecx+0x4b7015f6]
  41356f:	es cmp eax,0x5e120740
  413575:	adc    ah,dl
  413577:	xor    ecx,DWORD PTR [eax+edi*4+0x39]
  41357b:	repz pop ds
  41357d:	ret    
  41357e:	mov    ecx,0xa47f3c16
  413583:	clc    
  413584:	and    edx,DWORD PTR [esi+0x27]
  413587:	fsub   QWORD PTR [ebx]
  413589:	pop    ds
  41358a:	xor    dl,BYTE PTR [ebp-0x32]
  41358d:	shr    ecx,0x8
  413590:	pushf  
  413591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413592:	and    cl,dl
  413594:	scas   eax,DWORD PTR es:[edi]
  413595:	rcr    DWORD PTR [esi+0x34],1
  413598:	cmp    BYTE PTR [eax],cl
  41359a:	or     eax,0x446f2ea4
  41359f:	fcom   DWORD PTR [ebx+0xe49e8d4]
  4135a5:	mov    al,0x9f
  4135a7:	mov    bl,0x56
  4135a9:	or     eax,ecx
  4135ab:	(bad)
  4135ae:	cld    
  4135af:	aad    0x5c
  4135b1:	jbe    0x4135b8
  4135b3:	lahf   
  4135b4:	stos   DWORD PTR es:[edi],eax
  4135b5:	in     eax,0x17
  4135b7:	fwait
  4135b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135b9:	add    ebx,DWORD PTR [eax+0xb]
  4135bc:	jl     0x4135be
  4135be:	push   cs
  4135bf:	pop    ecx
  4135c0:	scas   eax,DWORD PTR es:[edi]
  4135c1:	add    eax,0x5aaa4ad7
  4135c6:	ror    cl,0xff
  4135c9:	sbb    bl,BYTE PTR [ebx+0x28]
  4135cc:	call   0x3de9:0x3d03f277
  4135d3:	addr16 xchg ecx,eax
  4135d5:	ficomp DWORD PTR ds:[eax]
  4135d8:	lds    ecx,FWORD PTR [edi]
  4135da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135db:	test   BYTE PTR [edi],cl
  4135dd:	adc    eax,0x8e5087d4
  4135e2:	mov    ebx,ds
  4135e4:	lahf   
  4135e5:	call   0xc938:0x58c2a172
  4135ec:	mov    ch,0xe2
  4135ee:	test   esp,0xdca8b14f
  4135f4:	mov    fs,WORD PTR [ebx-0x43c93e27]
  4135fa:	xor    ebx,DWORD PTR [eax+0x328227e6]
  413600:	iret   
  413601:	imul   esi,DWORD PTR [edx-0x9],0x1f
  413605:	push   ebp
  413606:	xchg   BYTE PTR [eax+0x23babca7],bl
  41360c:	pop    ss
  41360d:	pusha  
  41360e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41360f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413610:	mov    dl,0x9e
  413612:	inc    ebp
  413613:	lahf   
  413614:	fdivr  st(4),st
  413616:	push   0x2b
  413618:	dec    eax
  413619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41361a:	push   ebx
  41361b:	or     al,0xa8
  41361d:	push   es
  41361e:	push   ds
  41361f:	cmc    
  413620:	sti    
  413621:	mov    ds:0xe18a3aaa,al
  413626:	adc    bl,bl
  413628:	xlat   BYTE PTR ds:[ebx]
  413629:	mov    eax,ds:0x434ccc50
  41362e:	sub    BYTE PTR [ebx],0x13
  413631:	xor    edi,DWORD PTR [esi+0x14]
  413634:	lods   al,BYTE PTR ds:[esi]
  413635:	cmp    cl,BYTE PTR [ebx-0x48a3bbdf]
  41363b:	or     eax,0xd438fb69
  413640:	int3   
  413641:	pop    eax
  413642:	lea    ecx,[eax+0x47]
  413645:	sub    eax,0xb11ce4e1
  41364a:	mov    ds:0x8c7344d,al
  41364f:	cmp    al,0x84
  413651:	xchg   edi,eax
  413652:	mov    ch,0xe4
  413654:	dec    BYTE PTR [edx+0x69]
  413657:	dec    ebx
  413658:	not    BYTE PTR [edx-0x20b26931]
  41365e:	add    al,0x3d
  413660:	jns    0x41365c
  413662:	test   al,0xd
  413664:	pop    es
  413665:	fdivr  DWORD PTR [esi-0x446d2cd]
  41366b:	jno    0x413627
  41366d:	jl     0x413677
  41366f:	xor    BYTE PTR [eax-0x26],ah
  413672:	sub    BYTE PTR [edx],dl
  413674:	mov    ah,0x4a
  413676:	imul   esi,DWORD PTR [ebp+0x1c153f16],0xfb8cd23a
  413680:	fcomp  QWORD PTR [edi+0x64ae2655]
  413686:	mul    BYTE PTR [ebp+0x1b]
  413689:	dec    edx
  41368a:	add    edi,DWORD PTR [eax-0x5b]
  41368d:	xchg   ebp,eax
  41368e:	fsubr  QWORD PTR [esi]
  413690:	gs stos BYTE PTR es:[edi],al
  413692:	scas   eax,DWORD PTR es:[edi]
  413693:	cs jecxz 0x413623
  413696:	lea    esp,[ebp+0x20e48875]
  41369c:	mov    esi,0xf47418ff
  4136a1:	aaa    
  4136a2:	cmp    dh,BYTE PTR [eax]
  4136a4:	push   es
  4136a5:	out    0xb4,al
  4136a7:	sbb    al,0xba
  4136a9:	in     eax,0x38
  4136ab:	enter  0xb7a8,0x14
  4136af:	sub    bl,BYTE PTR [esi+eiz*8]
  4136b2:	clc    
  4136b3:	xchg   edx,eax
  4136b4:	push   es
  4136b5:	xchg   ecx,eax
  4136b6:	(bad)  
  4136b7:	xchg   esi,eax
  4136b8:	repz inc ebx
  4136ba:	fsub   QWORD PTR [ebx-0x2ab5a87]
  4136c0:	int3   
  4136c1:	cli    
  4136c2:	push   ebp
  4136c3:	pop    ecx
  4136c4:	pop    esi
  4136c5:	daa    
  4136c6:	aam    0x4b
  4136c8:	dec    edi
  4136c9:	sbb    dl,BYTE PTR [edx-0x2d]
  4136cc:	aam    0xa9
  4136ce:	xchg   esp,eax
  4136cf:	jmp    0x814:0x2cf47a03
  4136d6:	imul   ebp,DWORD PTR [esi*8+0xd78cb91],0xffffffd2
  4136de:	gs cs out dx,eax
  4136e1:	int    0xdf
  4136e3:	js     0x41369a
  4136e5:	cdq    
  4136e6:	aam    0xaf
  4136e8:	dec    ebp
  4136e9:	ret    0x58b0
  4136ec:	hlt    
  4136ed:	nop
  4136ee:	out    dx,al
  4136ef:	in     eax,dx
  4136f0:	sub    BYTE PTR [ecx+0x4b],0xa1
  4136f4:	pop    ss
  4136f5:	ret    
  4136f6:	adc    DWORD PTR [esi],esp
  4136f8:	mov    ch,BYTE PTR gs:[eax-0x52c172d8]
  4136ff:	xor    DWORD PTR [ebp+0x61],0xa0422211
  413706:	popf   
  413707:	bt     ecx,edx
  41370a:	mov    eax,ds:0x4353836c
  41370f:	jb     0x413732
  413711:	(bad)  [edx*8-0x5b41a00]
  413718:	mov    al,ds:0x6fa9923b
  41371d:	dec    DWORD PTR [esi+0x30]
  413720:	jecxz  0x4136c1
  413722:	mov    bl,0xc3
  413724:	jne    0x4136dd
  413726:	shl    DWORD PTR [esp+eiz*2],cl
  413729:	sub    ah,cl
  41372b:	xlat   BYTE PTR ds:[ebx]
  41372c:	rcl    DWORD PTR [edx-0x7f],0x5
  413730:	push   cs
  413731:	inc    esi
  413732:	cmp    DWORD PTR [eax],edi
  413734:	mov    ds:0xf7f5e154,al
  413739:	clc    
  41373a:	ret    
  41373b:	(bad)  
  41373c:	mov    esi,0xb77481b
  413741:	je     0x41378d
  413743:	push   ss
  413744:	push   ecx
  413745:	lea    eax,[edx-0x54]
  413748:	pop    es
  413749:	jp     0x4137bb
  41374b:	jb     0x413749
  41374d:	leave  
  41374e:	sub    dl,BYTE PTR ds:0xe31808f8
  413754:	sbb    DWORD PTR [ecx-0x76],esi
  413757:	jns    0x4137b0
  413759:	out    0xa,eax
  41375b:	pop    ebp
  41375c:	fmul   st(4),st
  41375e:	pop    ss
  41375f:	and    ebp,DWORD PTR [ecx+0x6f]
  413762:	jg     0x413742
  413764:	lahf   
  413765:	aas    
  413766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413767:	sbb    esp,esp
  413769:	(bad)  
  41376b:	out    0xb1,eax
  41376d:	pop    edi
  41376e:	(bad)  
  41376f:	lods   eax,DWORD PTR ds:[esi]
  413770:	pop    eax
  413771:	mov    esp,esi
  413773:	mov    BYTE PTR [esi+0x7b576926],cl
  413779:	jle    0x413791
  41377b:	lock xchg ebx,eax
  41377d:	mov    bh,0xdc
  41377f:	lods   eax,DWORD PTR ds:[esi]
  413780:	iret   
  413781:	mov    bl,dh
  413783:	dec    esi
  413784:	push   esp
  413785:	(bad)  
  413786:	push   edi
  413788:	add    dl,BYTE PTR [ecx+0x39c0c518]
  41378e:	xchg   esi,eax
  41378f:	sbb    ah,BYTE PTR [edi+0x174adb10]
  413795:	mov    edi,0xc2a8e878
  41379a:	jno    0x4137bd
  41379c:	loope  0x413758
  41379e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41379f:	test   eax,0x6b2eafef
  4137a4:	out    dx,eax
  4137a5:	push   ebp
  4137a6:	ins    BYTE PTR es:[edi],dx
  4137a7:	inc    eax
  4137a8:	cwde   
  4137a9:	xchg   ebx,eax
  4137aa:	leave  
  4137ab:	ret    
  4137ac:	jns    0x413800
  4137ae:	cmp    eax,DWORD PTR [esi-0x291304eb]
  4137b4:	rcr    ebp,0x21
  4137b7:	or     eax,0xd7d72331
  4137bc:	jmp    0xa42a7379
  4137c1:	mov    WORD PTR [esi],ss
  4137c3:	adc    ebx,DWORD PTR [ebp-0x431c3c54]
  4137c9:	dec    ecx
  4137ca:	ss jl  0x413750
  4137cd:	fisub  WORD PTR [ecx-0x3]
  4137d0:	inc    eax
  4137d1:	enter  0xf743,0x11
  4137d5:	cmp    edi,edx
  4137d7:	jmp    0x80b9a2fa
  4137dc:	jb     0x4137f7
  4137de:	sub    edi,ecx
  4137e0:	adc    bh,dh
  4137e2:	mov    dh,0xa4
  4137e4:	ins    BYTE PTR es:[edi],dx
  4137e5:	pop    ss
  4137e6:	pushf  
  4137e7:	jae    0x41381c
  4137e9:	test   BYTE PTR [ebx],bh
  4137eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137ec:	mov    eax,ds:0x210d1935
  4137f1:	ins    DWORD PTR es:[edi],dx
  4137f2:	pop    es
  4137f3:	push   ds
  4137f4:	sar    DWORD PTR [edx],0xfd
  4137f7:	repz call 0xd8d5:0xbd6859b5
  4137ff:	fiadd  WORD PTR [ebx+0x578cb6eb]
  413805:	jae    0x4137d9
  413807:	ret    0x4d78
  41380a:	pop    ebx
  41380b:	shr    BYTE PTR [eax-0x4fc0fc9c],1
  413811:	and    bl,BYTE PTR [eax]
  413813:	pop    ebp
  413814:	dec    ecx
  413815:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  413817:	and    al,0xc9
  413819:	push   esi
  41381a:	adc    BYTE PTR [edi],ah
  41381c:	push   0xffffffb7
  41381e:	clc    
  41381f:	fimul  WORD PTR [esi-0x41f268c0]
  413825:	aam    0xd2
  413827:	retf   0xb663
  41382a:	sahf   
  41382b:	mov    ebx,0xf61db41b
  413830:	es jns 0x4138b2
  413833:	cmp    al,bh
  413835:	mov    esi,0x8559458
  41383a:	inc    ebp
  41383b:	out    0x6e,al
  41383d:	xchg   DWORD PTR [ecx-0x37],esp
  413840:	xor    BYTE PTR [edx+0x30],al
  413843:	in     al,dx
  413844:	(bad)  
  413845:	dec    ecx
  413847:	sub    esp,0xffffffff
  41384a:	pop    ecx
  41384b:	push   ds
  41384c:	inc    esp
  41384d:	jne    0x413843
  41384f:	mov    ds:0xd126a7f0,al
  413854:	data16 (bad) 
  413856:	aam    0x3b
  413858:	jns    0x413838
  41385a:	ficom  WORD PTR [ebx]
  41385c:	inc    edx
  41385d:	call   0xb0a1e381
  413862:	jp     0x413842
  413864:	mov    esp,0xbd8d1e58
  413869:	mov    dh,0x6c
  41386b:	out    0xc2,al
  41386d:	inc    eax
  41386e:	and    DWORD PTR [esi],eax
  413870:	xor    al,0x5d
  413872:	pop    ebx
  413873:	cmp    BYTE PTR [esi+0x7e],al
  413876:	outs   dx,DWORD PTR ds:[esi]
  413877:	arpl   WORD PTR [esi-0x2e154ab8],ax
  41387d:	jmp    0x413836
  41387f:	ins    BYTE PTR es:[edi],dx
  413880:	aad    0x7d
  413882:	shl    cl,cl
  413884:	inc    ebp
  413885:	mov    ebx,0x4522da65
  41388a:	jp     0x413903
  41388c:	xlat   BYTE PTR ds:[ebx]
  41388d:	outs   dx,BYTE PTR ds:[esi]
  41388e:	or     DWORD PTR [ebx+ebx*2+0x1129fe19],esi
  413895:	inc    esp
  413896:	mov    bh,0x56
  413898:	(bad)  
  413899:	or     eax,0x80f191cc
  41389e:	inc    edi
  41389f:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4138a1:	les    edi,FWORD PTR [esi+0x327d1351]
  4138a7:	outs   dx,DWORD PTR ds:[esi]
  4138a8:	pop    ebx
  4138a9:	add    DWORD PTR [ebx-0x6dc061aa],ebx
  4138af:	in     al,dx
  4138b0:	daa    
  4138b1:	adc    ah,bh
  4138b3:	int3   
  4138b4:	in     eax,0x7b
  4138b6:	pop    edx
  4138b7:	jb     0x4138e4
  4138b9:	mov    edi,0xe3c6a134
  4138be:	push   esp
  4138bf:	xchg   edx,eax
  4138c0:	out    dx,eax
  4138c1:	cmc    
  4138c2:	and    bh,dh
  4138c4:	test   eax,0xcf70ba37
  4138c9:	mov    ds:0x3336b475,al
  4138ce:	sub    DWORD PTR [ebp+0x2886d224],esp
  4138d4:	icebp  
  4138d5:	push   esi
  4138d6:	shl    bl,1
  4138d8:	cdq    
  4138d9:	push   esi
  4138da:	xor    al,0xb0
  4138dc:	stc    
  4138dd:	jp     0x413913
  4138df:	jo     0x41392e
  4138e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138e2:	aaa    
  4138e3:	mov    esp,0xb23ebe
  4138e8:	and    DWORD PTR [eax-0x2f],eax
  4138eb:	pop    esi
  4138ec:	and    al,0x56
  4138ee:	out    0x87,al
  4138f0:	pop    esi
  4138f1:	inc    edx
  4138f2:	sbb    ecx,edi
  4138f4:	adc    BYTE PTR [esp+edi*4+0x1ee868c1],dh
  4138fb:	mov    ch,0xd1
  4138fd:	mov    WORD PTR [eax+0x6c],ss
  413900:	xor    edi,ecx
  413902:	mov    eax,0x934abfb1
  413907:	pop    esp
  413908:	xchg   esp,eax
  413909:	shr    BYTE PTR [esi+0x28cf7013],cl
  41390f:	xor    bh,BYTE PTR [edx-0x5a834c09]
  413915:	mov    edx,0xfbbb3f3a
  41391a:	mov    dh,0xba
  41391c:	adc    edx,DWORD PTR [esi]
  41391e:	xor    ebx,edi
  413920:	loopne 0x41396f
  413922:	sub    DWORD PTR gs:[edx-0x20],0x63
  413927:	xchg   edx,eax
  413928:	leave  
  413929:	stos   DWORD PTR es:[edi],eax
  41392a:	cld    
  41392b:	ins    DWORD PTR es:[edi],dx
  41392c:	addr16 xchg ecx,eax
  41392e:	jge    0x4138fa
  413930:	push   cs
  413931:	fdiv   QWORD PTR [ebp+0x13]
  413934:	push   esp
  413935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413936:	push   edi
  413937:	inc    edx
  413938:	es pop ecx
  41393a:	pop    edi
  41393b:	lods   eax,DWORD PTR ds:[esi]
  41393c:	addr16 cmp al,0xd
  41393f:	retf   0x799
  413942:	stos   DWORD PTR es:[edi],eax
  413943:	mov    ah,0x5e
  413945:	sub    BYTE PTR [edx-0x79a8ba7c],ch
  41394b:	dec    ebx
  41394c:	(bad)  
  41394d:	mov    ds:0x1233a655,eax
  413952:	leave  
  413953:	mov    gs,ebp
  413955:	push   ebx
  413956:	jle    0x41396f
  413958:	not    BYTE PTR ds:0x88da66c3
  41395e:	pushf  
  41395f:	xor    bl,BYTE PTR [ebx+0x2f]
  413962:	sar    DWORD PTR [ecx],cl
  413964:	gs repnz out 0x52,eax
  413968:	sub    dh,BYTE PTR [ebx-0x49]
  41396b:	xchg   ebx,eax
  41396c:	dec    edi
  41396d:	(bad)  
  41396e:	(bad)  
  41396f:	push   ds
  413970:	in     eax,dx
  413971:	hlt    
  413972:	lock cs ds mov ebx,0xcd2918b
  41397a:	xor    eax,0xb5cab258
  41397f:	pop    ds
  413980:	int3   
  413981:	mov    al,0xd1
  413983:	push   0x990cc628
  413988:	pop    ds
  413989:	adc    ebp,DWORD PTR [edx+eiz*1]
  41398c:	in     eax,dx
  41398d:	mov    DWORD PTR ss:[ebx],esi
  413990:	mov    edx,0x68aa70fd
  413995:	inc    esi
  413996:	pop    ecx
  413997:	sbb    DWORD PTR [ebx+0x4b],0xffffff9a
  41399b:	pop    esp
  41399c:	mov    eax,0x4292f8b3
  4139a1:	mov    dl,0xf
  4139a3:	ret    0x15ba
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	mov    ecx,0x7493bdef
  4139ac:	out    0x7,eax
  4139ae:	gs enter 0xb4bd,0x2
  4139b3:	xor    eax,DWORD PTR [ebx]
  4139b5:	aas    
  4139b6:	mov    al,ds:0x122c3e48
  4139bb:	xchg   ecx,eax
  4139bc:	ins    DWORD PTR es:[edi],dx
  4139bd:	into   
  4139be:	std    
  4139bf:	jp     0x413941
  4139c1:	mov    ecx,0xe57237d8
  4139c6:	retf   
  4139c7:	ja     0x413a17
  4139c9:	push   ebp
  4139ca:	mov    ecx,0xc0620b11
  4139cf:	pop    bx
  4139d1:	mov    al,ds:0x69a73369
  4139d6:	fadd   DWORD PTR [edx+0x6b769510]
  4139dc:	xor    cl,bh
  4139de:	ja     0x413972
  4139e0:	lods   eax,DWORD PTR ds:[esi]
  4139e1:	test   DWORD PTR [ebp-0x25e1f8ba],0xdfe1bf9d
  4139eb:	in     eax,0x44
  4139ed:	out    dx,al
  4139ee:	(bad)  
  4139ef:	pop    edx
  4139f0:	pop    ecx
  4139f1:	psubsb mm0,QWORD PTR [esi+0x5]
  4139f5:	sbb    eax,0xa44e1480
  4139fa:	xor    eax,DWORD PTR [ebx]
  4139fc:	xor    BYTE PTR [esi-0x34ee1563],0xe2
  413a03:	imul   esp,DWORD PTR [ecx-0x4deb1f2b],0xd464e39b
  413a0d:	mov    ds:0x97e76f17,al
  413a12:	std    
  413a13:	jecxz  0x4139cd
  413a15:	jmp    0xaee9b434
  413a1a:	retf   0x34b6
  413a1d:	cwde   
  413a1e:	cmp    BYTE PTR [eax-0x24],al
  413a21:	or     al,0x2f
  413a23:	stc    
  413a24:	pushf  
  413a25:	enter  0xe9c1,0x8b
  413a29:	inc    esi
  413a2a:	xchg   BYTE PTR [eax+0x1ec63964],dl
  413a30:	(bad)  
  413a31:	(bad)  
  413a33:	pop    esi
  413a34:	ret    
  413a35:	loopne 0x413a60
  413a37:	jg     0x413a3e
  413a39:	pop    ss
  413a3a:	nop
  413a3b:	or     eax,0x6127e885
  413a40:	sub    DWORD PTR [ebx+esi*4+0x294f2eec],0x7b3cbb92
  413a4b:	out    0x97,al
  413a4d:	int3   
  413a4e:	repnz (bad) 
  413a50:	sbb    ah,BYTE PTR [edx]
  413a52:	outs   dx,BYTE PTR ds:[esi]
  413a53:	les    edi,FWORD PTR [ebp-0x4a29e1a5]
  413a59:	clc    
  413a5a:	cmp    BYTE PTR [esi+0x6b],ah
  413a5d:	js     0x413a62
  413a5f:	test   eax,0x54a3e0e6
  413a64:	mov    ebp,0x76a87f44
  413a69:	sbb    BYTE PTR [edi-0x4b],bl
  413a6c:	mov    WORD PTR ds:0x8fc3af20,fs
  413a72:	into   
  413a73:	std    
  413a74:	pop    ss
  413a75:	mov    bl,0xe
  413a77:	mov    ecx,eax
  413a79:	aad    0xdc
  413a7b:	jnp    0x413a56
  413a7d:	pop    eax
  413a7e:	inc    ebp
  413a7f:	outs   dx,BYTE PTR ds:[esi]
  413a80:	dec    ecx
  413a81:	fstp   DWORD PTR [eax-0x16]
  413a84:	jb     0x413af0
  413a86:	(bad)  
  413a87:	lds    ebx,FWORD PTR [edx]
  413a89:	push   ss
  413a8a:	ret    0x7f68
  413a8d:	pop    eax
  413a8e:	pop    ds
  413a8f:	mov    esi,0xb8186473
  413a94:	(bad)  
  413a96:	pop    ecx
  413a97:	push   ebx
  413a98:	out    0xe2,eax
  413a9a:	sbb    DWORD PTR [esi],esp
  413a9c:	mov    ch,0xc
  413a9e:	dec    ecx
  413a9f:	mov    dl,0x9c
  413aa1:	sbb    dl,BYTE PTR [esi]
  413aa3:	and    al,0x1
  413aa5:	hlt    
  413aa6:	cmp    ax,0x70bc
  413aaa:	clc    
  413aab:	js     0x413ae8
  413aad:	fs (bad) 
  413aaf:	cmp    eax,0x717358b0
  413ab4:	inc    eax
  413ab5:	jmp    0x413ad2
  413ab7:	add    al,0xe4
  413ab9:	dec    ebp
  413aba:	std    
  413abb:	rol    esp,1
  413abd:	jne    0x413b05
  413abf:	inc    edx
  413ac0:	fdivr  st(2),st
  413ac2:	mov    edx,0x9290c197
  413ac7:	mov    dh,al
  413ac9:	xchg   esp,eax
  413aca:	jbe    0x413ad8
  413acc:	pusha  
  413acd:	push   ecx
  413ace:	call   esi
  413ad0:	pop    ebp
  413ad1:	and    DWORD PTR [ecx],0xfb94f802
  413ad7:	and    al,0x74
  413ad9:	push   ss
  413ada:	fs xchg edi,eax
  413adc:	xor    al,0x1e
  413ade:	mov    WORD PTR [ebx+0x349d1a5b],es
  413ae4:	test   eax,0xd1148677
  413ae9:	dec    ecx
  413aea:	xor    dh,ah
  413aec:	iret   
  413aed:	xlat   BYTE PTR ds:[ebx]
  413aee:	sub    al,0xd6
  413af0:	fistp  WORD PTR [edi]
  413af2:	fdiv   QWORD PTR [eax-0x7a]
  413af5:	mov    ebx,0x4b05fe7
  413afa:	setg   BYTE PTR [edx-0x2e36ac96]
  413b01:	ins    DWORD PTR es:[edi],dx
  413b02:	data16 and BYTE PTR [edx],bl
  413b05:	push   ebx
  413b06:	frstor [esi+edx*4]
  413b09:	out    dx,al
  413b0a:	idiv   bl
  413b0c:	out    dx,eax
  413b0d:	sbb    al,0xb1
  413b0f:	xor    eax,0xc6e48e6a
  413b14:	pop    ebp
  413b15:	xor    eax,0x72717bfc
  413b1a:	xlat   BYTE PTR ds:[ebx]
  413b1b:	rol    DWORD PTR ds:0xe1951e9f,cl
  413b21:	push   ss
  413b22:	sub    al,0xfa
  413b24:	mov    bl,0x6e
  413b26:	in     eax,dx
  413b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b28:	mov    ds:0x89366801,al
  413b2d:	and    al,BYTE PTR [ebp+0x24]
  413b30:	mov    cl,0x42
  413b32:	push   ss
  413b33:	fninit 
  413b35:	retf   
  413b36:	xor    BYTE PTR ds:0x4da83ccb,dh
  413b3c:	jmp    0x12308430
  413b41:	mov    edx,0xfb94e682
  413b46:	(bad)  
  413b48:	fdivr  DWORD PTR [edi-0x46]
  413b4b:	ss sahf 
  413b4d:	(bad)  
  413b4e:	add    al,0x5e
  413b50:	mov    dh,0x75
  413b52:	mul    BYTE PTR [esi]
  413b54:	std    
  413b55:	shr    DWORD PTR [edx-0xa1062d3],0xae
  413b5c:	hlt    
  413b5d:	xchg   ah,bl
  413b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b60:	sar    DWORD PTR ds:0xbe31fb4,cl
  413b66:	ret    0x6e6c
  413b69:	loopne 0x413b08
  413b6b:	ficomp WORD PTR [ebp-0x733216f]
  413b71:	inc    esi
  413b72:	cmp    ah,BYTE PTR [esi]
  413b74:	dec    eax
  413b75:	xchg   edi,eax
  413b76:	dec    esi
  413b77:	pop    eax
  413b78:	ins    DWORD PTR es:[edi],dx
  413b79:	or     ah,BYTE PTR [esi+0x4e]
  413b7c:	ja     0x413bb1
  413b7e:	loopne 0x413b0d
  413b80:	dec    esi
  413b81:	into   
  413b82:	jnp    0x413b08
  413b84:	clc    
  413b85:	mov    eax,ds:0xa1a6ee79
  413b8a:	inc    ebx
  413b8b:	dec    edi
  413b8c:	sub    DWORD PTR [eax],eax
  413b8e:	es lock (bad) 
  413b91:	in     eax,dx
  413b92:	sub    BYTE PTR [eax],dl
  413b94:	push   ebp
  413b95:	push   ebx
  413b96:	lods   al,BYTE PTR es:[esi]
  413b98:	shl    ch,1
  413b9a:	(bad)  
  413b9b:	or     eax,0x34060838
  413ba0:	jbe    0x413bd8
  413ba2:	fiadd  DWORD PTR [edi-0x3431ace4]
  413ba8:	lea    edi,[eax+edx*8-0x5e]
  413bac:	mov    ah,BYTE PTR [ebp+0x64]
  413baf:	jo     0x413b92
  413bb1:	sbb    esp,DWORD PTR [edi+0x57]
  413bb4:	xchg   edi,eax
  413bb5:	add    al,0x25
  413bb7:	xchg   ebx,eax
  413bb8:	inc    ebx
  413bb9:	ins    DWORD PTR es:[edi],dx
  413bba:	and    eax,0x1da2ef84
  413bbf:	mov    al,0xb9
  413bc1:	or     DWORD PTR [ebx-0x50],ebp
  413bc4:	lods   eax,DWORD PTR ds:[esi]
  413bc5:	icebp  
  413bc6:	inc    esp
  413bc7:	dec    ebx
  413bc8:	dec    ebx
  413bc9:	ficomp WORD PTR [esi+ebx*8]
  413bcc:	(bad)  
  413bcd:	cmp    al,0x89
  413bcf:	cdq    
  413bd0:	cs out 0x72,eax
  413bd3:	and    al,BYTE PTR [edx-0x27]
  413bd6:	mov    cs,ecx
  413bd8:	mov    esi,0x1c0307ee
  413bdd:	fcomi  st,st(1)
  413bdf:	jl     0x413bac
  413be1:	les    esp,FWORD PTR [esi-0x5a714a13]
  413be7:	push   ebx
  413be8:	sbb    eax,0xceec70fe
  413bed:	pop    esp
  413bee:	push   ecx
  413bef:	pop    ecx
  413bf0:	pop    ebp
  413bf1:	adc    ch,BYTE PTR [edi+0xa]
  413bf4:	push   ebx
  413bf5:	jno    0x413c29
  413bf7:	pop    edi
  413bf8:	mov    ds:0x4411e03a,eax
  413bfd:	add    esi,esp
  413bff:	inc    ebp
  413c00:	mov    esp,0x95347d51
  413c05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c06:	repz push eax
  413c08:	jp     0x413b91
  413c0a:	sub    DWORD PTR [ebx-0x7e],edx
  413c0d:	retf   0xea21
  413c10:	mov    ebp,0x8cd0b550
  413c15:	and    dh,cl
  413c17:	xor    esi,edi
  413c19:	aaa    
  413c1a:	jp     0x413c57
  413c1c:	lock imul DWORD PTR [edi]
  413c1f:	ins    DWORD PTR es:[edi],dx
  413c20:	lods   eax,DWORD PTR ds:[esi]
  413c21:	ror    BYTE PTR [ebx+0x4b],1
  413c24:	sbb    ah,BYTE PTR [ecx-0x12]
  413c27:	push   ss
  413c28:	jmp    0x413c7b
  413c2a:	sar    BYTE PTR [edx],1
  413c2c:	ja     0x413bb7
  413c2e:	dec    ecx
  413c2f:	dec    ebx
  413c30:	js     0x413c6b
  413c32:	dec    esp
  413c33:	adc    BYTE PTR ds:0xa161330c,ah
  413c39:	and    al,0x7c
  413c3b:	adc    DWORD PTR [ecx],edi
  413c3d:	sbb    al,0xbd
  413c3f:	cli    
  413c40:	jp     0x413bf0
  413c42:	cmp    al,0x2e
  413c44:	cmp    eax,0xca178694
  413c49:	mov    dl,dh
  413c4b:	adc    BYTE PTR [ecx+ecx*4],bh
  413c4e:	inc    eax
  413c4f:	dec    esp
  413c50:	mov    ds,WORD PTR [edx]
  413c52:	push   ds
  413c53:	fcom   QWORD PTR [edx+0xe]
  413c56:	fadd   DWORD PTR [ebx+0x5d]
  413c59:	shr    DWORD PTR [eax-0x3307fde8],1
  413c5f:	add    al,0x6
  413c61:	pop    ds
  413c62:	mov    edi,0x4dc56dfe
  413c67:	add    dl,BYTE PTR [esi+0xfe8dde5]
  413c6d:	xor    esi,DWORD PTR [edx+0x44fb0a97]
  413c73:	cmp    ecx,DWORD PTR [esi+0x61]
  413c76:	cmp    al,0x79
  413c78:	or     bl,BYTE PTR [ebp+0x4b]
  413c7b:	mov    ch,0x66
  413c7d:	sub    dl,BYTE PTR ds:0x88b8782b
  413c83:	jbe    0x413c93
  413c85:	mov    eax,DWORD PTR [edx+0x2bb15e9b]
  413c8b:	add    bl,BYTE PTR [esi-0x18]
  413c8e:	fild   WORD PTR [edi-0x52f181ca]
  413c94:	inc    ecx
  413c95:	pop    ds
  413c96:	pop    edx
  413c97:	pcmpeqw mm2,mm6
  413c9a:	mov    bl,0xcd
  413c9c:	inc    eax
  413c9d:	mov    eax,0x27caf593
  413ca2:	xor    al,0x34
  413ca4:	push   cs
  413ca5:	xor    al,0xc9
  413ca7:	pop    eax
  413ca8:	ins    BYTE PTR es:[edi],dx
  413ca9:	xchg   ebx,eax
  413caa:	cmp    al,cl
  413cac:	push   eax
  413cad:	fstp   QWORD PTR [edx-0x6f]
  413cb0:	fstp   QWORD PTR [edi-0x17]
  413cb3:	inc    ebx
  413cb4:	imul   ebp,DWORD PTR [ebp-0x47243ecf],0x13
  413cbb:	mov    ds:0xdea3172e,al
  413cc0:	push   ds
  413cc1:	inc    esi
  413cc2:	mul    esp
  413cc4:	into   
  413cc5:	mov    edx,0x26b50c7c
  413cca:	repnz cli 
  413ccc:	pop    ds
  413ccd:	mov    al,0x90
  413ccf:	sub    eax,0x2dd49340
  413cd4:	inc    edx
  413cd5:	dec    ecx
  413cd6:	imul   ecx,esi,0x6c
  413cd9:	inc    esi
  413cda:	in     al,dx
  413cdb:	jl     0x413d04
  413cdd:	jl     0x413cfa
  413cdf:	dec    ebp
  413ce0:	add    al,0xe
  413ce2:	inc    edi
  413ce3:	aad    0xaf
  413ce5:	jmp    0xeb41fac2
  413cea:	xchg   edi,eax
  413ceb:	pop    edi
  413cec:	add    eax,0x884ad9de
  413cf1:	cmp    eax,0x655a49f0
  413cf6:	pop    ebp
  413cf7:	into   
  413cf8:	mov    ds:0x58e7cdb9,al
  413cfd:	dec    ecx
  413cfe:	mul    BYTE PTR [edx]
  413d00:	out    0x25,al
  413d02:	addr16 push esi
  413d04:	inc    esp
  413d05:	mov    ch,0x96
  413d07:	push   edx
  413d08:	pop    ecx
  413d09:	sub    BYTE PTR [esi-0x2fed7d0],dl
  413d0f:	jle    0x413d8b
  413d11:	pop    ds
  413d12:	xchg   esi,eax
  413d13:	cmp    BYTE PTR [ebp-0x1a9ba142],al
  413d19:	pop    ss
  413d1a:	out    0xbc,al
  413d1c:	je     0x413d8f
  413d1e:	xchg   DWORD PTR [ecx],esi
  413d20:	test   BYTE PTR [esp+ebp*8+0x1549dc51],bh
  413d27:	xchg   ebp,eax
  413d28:	cmc    
  413d29:	sbb    DWORD PTR [eax+0x219f0c38],eax
  413d2f:	ficomp WORD PTR [eax]
  413d31:	sbb    al,0xd5
  413d33:	push   edi
  413d34:	into   
  413d35:	idiv   DWORD PTR [ecx-0xf]
  413d38:	push   ebx
  413d39:	ror    BYTE PTR [esi],0xd5
  413d3c:	fwait
  413d3d:	push   edx
  413d3e:	fidiv  WORD PTR [edi+0x7c]
  413d41:	mov    bh,0x9
  413d43:	cld    
  413d44:	xchg   BYTE PTR [edi],bh
  413d46:	sbb    DWORD PTR [ecx],edx
  413d48:	add    DWORD PTR [esi],ebp
  413d4a:	(bad)  ss:[ebx-0x13a9c1de]
  413d51:	addr16 mov esp,0xf3767a61
  413d57:	ficomp WORD PTR [edi]
  413d59:	inc    edx
  413d5a:	fidiv  DWORD PTR [edi-0x59]
  413d5d:	or     al,0x8e
  413d5f:	test   dl,dh
  413d61:	mov    eax,fs
  413d63:	test   BYTE PTR [eax-0x499bdd08],bh
  413d69:	cld    
  413d6a:	mov    al,ds:0xf57b5f9d
  413d6f:	(bad)  
  413d70:	jl     0x413d49
  413d72:	or     dh,BYTE PTR [ecx-0x35fd1990]
  413d78:	cdq    
  413d79:	mov    edx,0xb27ec78
  413d7e:	mov    bh,0xd8
  413d80:	mov    bh,0x58
  413d82:	dec    esp
  413d83:	cs cmp al,0xaf
  413d86:	mov    ebx,cs
  413d88:	mov    ebp,0x7e91c3cc
  413d8d:	adc    al,0xa1
  413d8f:	(bad)  
  413d90:	mov    dl,0x6c
  413d92:	xchg   esi,eax
  413d93:	js     0x413da1
  413d95:	push   ss
  413d96:	pop    ecx
  413d97:	jg     0x413d4a
  413d99:	add    BYTE PTR [edi],0x5a
  413d9c:	and    ebx,DWORD PTR [ebx+0x458e4dee]
  413da2:	push   esp
  413da3:	mov    esp,0xf70ebb10
  413da8:	mov    edi,0x30946108
  413dad:	adc    al,0xac
  413daf:	retf   0xb4f2
  413db2:	adc    DWORD PTR [ebx-0x54ba0ca3],edx
  413db8:	push   ebp
  413db9:	repnz push edi
  413dbc:	pushf  
  413dbd:	add    al,BYTE PTR ds:0x590788e4
  413dc3:	fwait
  413dc4:	(bad)
  413dc7:	lds    esi,FWORD PTR [ebx]
  413dc9:	aam    0x0
  413dcb:	add    al,0xdc
  413dcd:	js     0x413dea
  413dcf:	mov    bh,0xcc
  413dd1:	add    al,0x2b
  413dd3:	cmp    DWORD PTR [eax-0x56],eax
  413dd6:	(bad)  
  413dd7:	into   
  413dd8:	cwde   
  413dd9:	aam    0xc2
  413ddb:	das    
  413ddc:	add    eax,0x89ee272d
  413de1:	pop    ss
  413de2:	popa   
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	loope  0x413e0d
  413de6:	scas   eax,DWORD PTR es:[edi]
  413de7:	cs jle 0x413e42
  413dea:	lahf   
  413deb:	aam    0x16
  413ded:	pop    edi
  413dee:	jmp    0x8147:0x6ea2aac0
  413df5:	and    al,0x21
  413df7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413df8:	adc    al,0xa0
  413dfa:	jmp    0x413e34
  413dfc:	jp     0x413e08
  413dfe:	inc    ebp
  413dff:	cmp    eax,0x1b33d06b
  413e04:	les    edx,FWORD PTR [eax+0x3cc46cdc]
  413e0a:	pop    edi
  413e0b:	xlat   BYTE PTR ds:[ebx]
  413e0c:	test   DWORD PTR [eax+0x40],ebx
  413e0f:	xchg   edi,eax
  413e10:	sub    al,0x6f
  413e12:	test   BYTE PTR [esi-0x10],bh
  413e15:	jmp    0xc9fc:0x4c7129c2
  413e1c:	rcr    cl,cl
  413e1e:	pop    ebp
  413e1f:	xchg   edi,eax
  413e20:	jle    0x413ddf
  413e22:	and    al,0xf3
  413e24:	xor    bh,BYTE PTR [esi-0x4]
  413e27:	cmp    BYTE PTR [edi-0x5c3afb],ch
  413e2d:	mov    ds:0xb3298648,al
  413e32:	and    ch,BYTE PTR [edi+esi*1]
  413e35:	mov    ecx,0xc7cc2ef8
  413e3a:	mov    dl,0xbd
  413e3c:	ds jp  0x413e81
  413e3f:	mov    edi,DWORD PTR [esi+ebp*8]
  413e42:	fidiv  DWORD PTR [ecx-0x56d30892]
  413e48:	addr16 jl 0x413e07
  413e4b:	mov    dl,0x24
  413e4d:	xchg   ebp,eax
  413e4e:	test   edx,ecx
  413e50:	iret   
  413e51:	cmp    al,0xb5
  413e53:	inc    ecx
  413e54:	mov    ds:0x60d28330,eax
  413e59:	sahf   
  413e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e5b:	stos   DWORD PTR es:[edi],eax
  413e5c:	sti    
  413e5d:	icebp  
  413e5e:	or     BYTE PTR [ebx],bh
  413e60:	ja     0x413e40
  413e62:	adc    BYTE PTR [ebx+0xd],cl
  413e65:	cli    
  413e66:	cmp    ecx,DWORD PTR [edx]
  413e68:	jmp    0xf12be53e
  413e6d:	sbb    BYTE PTR [eax-0x46],cl
  413e70:	bound  ebp,QWORD PTR [esi]
  413e72:	mov    edi,0x144294a7
  413e77:	popf   
  413e78:	test   eax,0xdb6d22fb
  413e7d:	adc    ebx,DWORD PTR [edx+0x7e27ac35]
  413e83:	int    0xc3
  413e85:	cmp    al,0x7a
  413e87:	retf   0x60cf
  413e8a:	ja     0x413e62
  413e8c:	js     0x413eba
  413e8e:	stos   DWORD PTR es:[edi],eax
  413e8f:	fnstenv [ecx+0x5acf7cae]
  413e95:	add    ch,BYTE PTR [eax+0xebe2604]
  413e9b:	jmp    0x413f0a
  413e9d:	(bad)  
  413e9e:	jne    0x413ec1
  413ea0:	jns    0x413e4c
  413ea2:	mov    al,ds:0xf4bea2c3
  413ea7:	repz out 0xad,eax
  413eaa:	jmp    0xb1808d0c
  413eaf:	inc    edx
  413eb0:	mov    edx,0x257ad89
  413eb5:	cmp    eax,0x49b3b715
  413eba:	aad    0x56
  413ebc:	fdiv   DWORD PTR [ebx]
  413ebe:	sub    BYTE PTR [ebx],0xc4
  413ec1:	push   ecx
  413ec2:	and    eax,0x3890c2b7
  413ec7:	adc    ebx,DWORD PTR [ebp-0x3051376a]
  413ecd:	fadd   QWORD PTR [esi+ebp*8+0x4f0e3d76]
  413ed4:	dec    edi
  413ed5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ed6:	in     eax,dx
  413ed7:	inc    ebx
  413ed8:	ds cld 
  413eda:	int    0xd1
  413edc:	jae    0x413f53
  413ede:	outs   dx,BYTE PTR ds:[esi]
  413edf:	pop    edi
  413ee0:	mov    al,BYTE PTR [edx+0x61]
  413ee3:	mov    ah,0x5b
  413ee5:	and    DWORD PTR [ebp-0x30c9bfa1],ecx
  413eeb:	clc    
  413eec:	mov    es,WORD PTR [edx-0x623de541]
  413ef2:	cmp    bl,bl
  413ef4:	pop    ecx
  413ef5:	retf   
  413ef6:	sbb    BYTE PTR [ecx+0x20],0x9
  413efa:	mov    bl,0xb1
  413efc:	dec    ecx
  413efd:	les    ebx,FWORD PTR [esi-0x4078561f]
  413f03:	nop
  413f04:	push   cs
  413f05:	loop   0x413ea8
  413f07:	fwait
  413f08:	mov    ch,0xa7
  413f0a:	retf   
  413f0b:	dec    edx
  413f0c:	test   DWORD PTR [esi],eax
  413f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f0f:	add    dl,BYTE PTR ds:0xea721b33
  413f15:	sbb    BYTE PTR [ecx+0x52],bh
  413f18:	ror    DWORD PTR [edi],cl
  413f1a:	out    dx,eax
  413f1b:	int    0x23
  413f1d:	adc    esi,edi
  413f1f:	mov    ds:0xa608e9ee,eax
  413f24:	xchg   ebp,eax
  413f25:	mov    bl,0xc2
  413f27:	mov    ecx,edx
  413f29:	jecxz  0x413f04
  413f2b:	dec    ebx
  413f2c:	xlat   BYTE PTR ds:[ebx]
  413f2d:	popf   
  413f2e:	imul   edx,DWORD PTR [ebp+0x42964091],0xdbbd1df3
  413f38:	push   eax
  413f39:	jge    0x413f34
  413f3b:	fcmove st,st(6)
  413f3d:	clc    
  413f3e:	sbb    edi,DWORD PTR [edx-0x67ebffad]
  413f44:	lahf   
  413f45:	int3   
  413f46:	mov    ecx,0x11fee451
  413f4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f4c:	mov    ebx,DWORD PTR [ecx+edi*4-0x44a7ecba]
  413f53:	push   ebx
  413f54:	in     eax,0x9d
  413f56:	xor    dl,BYTE PTR gs:[edx+ecx*1-0x5c4455d1]
  413f5e:	fbld   TBYTE PTR [esi+eiz*1-0x5b]
  413f62:	pop    eax
  413f63:	test   al,0x27
  413f65:	rcr    BYTE PTR [ebx-0x36],1
  413f68:	retf   
  413f69:	mov    gs,WORD PTR [esi]
  413f6b:	xor    esi,esp
  413f6d:	repz pop ebx
  413f6f:	push   0x377f779d
  413f74:	fistp  WORD PTR [edi-0x55]
  413f77:	fild   QWORD PTR [eax-0x16e7ecec]
  413f7d:	xlat   BYTE PTR ds:[ebx]
  413f7e:	pop    ds
  413f7f:	and    dh,BYTE PTR [edx]
  413f81:	in     eax,dx
  413f82:	push   esp
  413f83:	lods   eax,DWORD PTR ds:[esi]
  413f84:	out    0x3e,al
  413f86:	(bad)  
  413f87:	shr    DWORD PTR [esi+ebp*2-0x35],0x8e
  413f8c:	aaa    
  413f8d:	retf   0x7057
  413f90:	out    dx,eax
  413f91:	jbe    0x413fa4
  413f93:	sbb    ah,0x9f
  413f96:	adc    BYTE PTR [eax],ah
  413f98:	repz fnstcw WORD PTR [esi]
  413f9b:	dec    edx
  413f9c:	xlat   BYTE PTR ds:[ebx]
  413f9d:	repnz adc BYTE PTR [ebx],dl
  413fa0:	out    dx,al
  413fa1:	cs lahf 
  413fa3:	loope  0x414020
  413fa5:	lods   eax,DWORD PTR ds:[esi]
  413fa6:	xchg   DWORD PTR [ebx],edx
  413fa8:	fcmovbe st,st(0)
  413faa:	inc    ebx
  413fab:	(bad)  
  413fad:	pop    ebp
  413fae:	(bad)  
  413faf:	cld    
  413fb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fb1:	mov    es,ebx
  413fb3:	mov    al,0xd
  413fb5:	add    DWORD PTR [ecx+0x6dbe460],ebx
  413fbb:	cmp    bh,bh
  413fbd:	or     DWORD PTR [eax+esi*2],edx
  413fc0:	push   edx
  413fc1:	xchg   DWORD PTR [edi],ecx
  413fc3:	test   BYTE PTR [ecx+0x6c],bl
  413fc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fc7:	pop    edi
  413fc8:	sub    al,0xf1
  413fca:	(bad)  
  413fcb:	push   edx
  413fcc:	shr    BYTE PTR [eax],0x1e
  413fcf:	xchg   ebp,eax
  413fd0:	xchg   esi,eax
  413fd1:	cdq    
  413fd2:	les    esp,FWORD PTR [ecx]
  413fd4:	xchg   edx,eax
  413fd5:	xchg   DWORD PTR [edi-0x67],esp
  413fd8:	bound  edi,QWORD PTR [eax-0x30]
  413fdb:	(bad)  
  413fdc:	jae    0x414039
  413fde:	shl    BYTE PTR [ebx],1
  413fe0:	(bad)  
  413fe1:	mov    al,ds:0x101fb1e1
  413fe6:	aaa    
  413fe7:	les    eax,FWORD PTR [ecx+esi*1]
  413fea:	or     bl,0x51
  413fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fee:	fidivr DWORD PTR [eax+0x1d52dae]
  413ff4:	xor    eax,0x369cb0d1
  413ff9:	inc    ebx
  413ffa:	in     eax,0x7f
  413ffc:	es push edx
  413ffe:	das    
  413fff:	dec    ecx
  414000:	cmp    DWORD PTR [ebp+ebp*1+0x2f708a19],ebx
  414007:	pop    eax
  414008:	lock push 0xe7819fce
  41400e:	aad    0x3a
  414010:	mov    edx,0xa8257d14
  414015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414016:	pop    esi
  414017:	push   edi
  414018:	mov    dh,0x89
  41401a:	pop    edi
  41401b:	jne    0x413ff1
  41401d:	sub    ebx,DWORD PTR [ecx]
  41401f:	cmp    edi,0x49bfc488
  414025:	int3   
  414026:	es out 0xe3,al
  414029:	int    0xa2
  41402b:	mov    BYTE PTR [edi],bl
  41402d:	mov    al,0xe
  41402f:	test   DWORD PTR [edx-0x7d112e22],esi
  414035:	sbb    edx,DWORD PTR [edi+0x24f02b28]
  41403b:	les    eax,FWORD PTR [esi]
  41403d:	mov    ch,0x3b
  41403f:	xor    eax,0x2482d375
  414044:	popf   
  414045:	xor    bh,BYTE PTR [eax+0x48247616]
  41404b:	arpl   si,bp
  41404d:	je     0x41400d
  41404f:	jp     0x413fe5
  414051:	xor    BYTE PTR [ecx-0x460baed],cl
  414057:	or     BYTE PTR [esi],0x4
  41405a:	dec    esi
  41405b:	or     edi,DWORD PTR [eax]
  41405d:	loopne 0x414035
  41405f:	lods   al,BYTE PTR ds:[esi]
  414060:	and    DWORD PTR [ebx+0x5b],ecx
  414063:	mov    ecx,0xbd0fab6c
  414068:	int3   
  414069:	imul   edi,DWORD PTR [ebx+0x6ed17942],0x73986393
  414073:	sbb    DWORD PTR ss:[ebx],0xf88382ea
  41407a:	rcr    DWORD PTR [ecx+0x3aae9960],cl
  414080:	xchg   BYTE PTR ds:0x416b2a1f,al
  414086:	jecxz  0x414085
  414088:	cli    
  414089:	mov    al,0xa2
  41408b:	cmp    al,0x58
  41408d:	pop    ebx
  41408e:	xor    ah,BYTE PTR [edx+0x597b60bd]
  414094:	rcr    DWORD PTR [ecx-0x4],0x58
  414098:	push   ds
  414099:	retf   
  41409a:	dec    edx
  41409b:	fdivr  QWORD PTR [ecx-0x1c]
  41409e:	iret   
  41409f:	sub    al,0x7b
  4140a1:	(bad)  
  4140a2:	iret   
  4140a3:	xlat   BYTE PTR ds:[ebx]
  4140a4:	add    BYTE PTR [edi+0x3],bl
  4140a7:	out    dx,eax
  4140a8:	cmp    eax,0x4bd1b8c3
  4140ad:	cmp    eax,0x310b2a3b
  4140b2:	or     ch,BYTE PTR [ecx+esi*4-0x43]
  4140b6:	pushw  0x391e
  4140ba:	jp     0x414125
  4140bc:	je     0x4140f9
  4140be:	or     al,0xf3
  4140c0:	retf   
  4140c1:	mov    esi,0x9c019f42
  4140c6:	cmp    BYTE PTR [ecx+0x50],ch
  4140c9:	and    DWORD PTR [edi-0x3e],0x16
  4140cd:	adc    DWORD PTR [edi],ecx
  4140cf:	ret    0x49c7
  4140d2:	sbb    eax,0xf0b84dd8
  4140d7:	xchg   ebp,eax
  4140d8:	daa    
  4140d9:	int3   
  4140da:	ss pop ds
  4140dc:	push   ebx
  4140dd:	test   eax,0x726326c4
  4140e2:	sbb    DWORD PTR [ecx-0x51889177],0x62636dbc
  4140ec:	ss mov ebp,0x28e2d36e
  4140f2:	jl     0x414166
  4140f4:	add    ebx,eax
  4140f6:	push   es
  4140f7:	jmp    0xd391:0xbccdd7c9
  4140fe:	add    BYTE PTR [edx],al
  414100:	jmp    0xb3397ca9
  414105:	sbb    ecx,ebp
  414107:	aas    
  414108:	sbb    eax,0x2ec50640
  41410d:	jb     0x414111
  41410f:	xor    DWORD PTR [ecx+eiz*8+0x12a06e2d],ebx
  414116:	std    
  414117:	pusha  
  414118:	dec    esi
  414119:	mov    bl,0x1a
  41411b:	mov    ds:0xc5ef86d0,eax
  414120:	int    0x32
  414122:	(bad)  
  414123:	mov    cs,WORD PTR [ebx-0x51def554]
  414129:	add    BYTE PTR [ebp+ebp*8+0x8],ah
  41412d:	sti    
  41412e:	jae    0x414149
  414130:	fnstenv [eax+0x2eb292b5]
  414136:	push   esp
  414137:	ds jmp 0x70de25ab
  41413d:	jns    0x4140fb
  41413f:	test   al,0x8e
  414141:	dec    edi
  414142:	add    eax,0x88e5f19c
  414147:	outs   dx,BYTE PTR ds:[esi]
  414148:	into   
  414149:	jb     0x4140e8
  41414b:	mov    BYTE PTR [esi-0x55434ace],ah
  414151:	(bad)  
  414152:	jae    0x4141a2
  414154:	xchg   esi,eax
  414155:	xor    eax,0x96a800ce
  41415a:	mov    al,ds:0x6e0cf1ba
  41415f:	push   esp
  414160:	out    0x9b,eax
  414162:	mov    al,0x2
  414164:	or     DWORD PTR [edi],ebp
  414166:	jge    0x414191
  414168:	div    DWORD PTR [edx]
  41416a:	and    al,0x27
  41416c:	into   
  41416d:	push   cs
  41416e:	mov    ah,0x68
  414170:	mov    ebx,0x2cac86c4
  414175:	fdiv   st,st(3)
  414177:	(bad)  
  414178:	jo     0x4141c0
  41417a:	outs   dx,BYTE PTR ds:[esi]
  41417b:	aam    0xea
  41417d:	add    BYTE PTR [ebx],ah
  41417f:	and    ah,0x98
  414182:	mov    ds:0xdfc1e72d,eax
  414187:	sbb    bl,BYTE PTR [ecx-0x9]
  41418a:	sti    
  41418b:	enter  0x41f9,0x16
  41418f:	out    dx,al
  414190:	push   cs
  414191:	inc    edx
  414192:	fcomp  QWORD PTR [eax+0x65]
  414195:	cmp    cl,BYTE PTR [ebp+0x6d]
  414198:	jle    0x414150
  41419a:	pop    es
  41419b:	xor    bl,BYTE PTR [eax]
  41419d:	push   esp
  41419e:	clc    
  41419f:	test   al,0x9a
  4141a1:	add    dl,BYTE PTR [ecx+esi*1+0x29]
  4141a5:	cmp    eax,DWORD PTR ds:0xfe71e6e8
  4141ab:	add    BYTE PTR [esi-0x1f],cl
  4141ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141af:	retf   0x9c67
  4141b2:	add    BYTE PTR [ebp-0x3d],dl
  4141b5:	lds    esp,FWORD PTR [eax]
  4141b7:	mov    cl,0x9f
  4141b9:	div    BYTE PTR [edx-0x2f]
  4141bc:	push   esi
  4141bd:	and    DWORD PTR [ecx+ebp*8-0x60cf8a03],0x8a0aefc9
  4141c8:	sbb    BYTE PTR [edi-0x46],cl
  4141cb:	jg     0x4141a4
  4141cd:	sub    BYTE PTR [ecx],al
  4141cf:	mov    cl,0xe2
  4141d1:	dec    ebx
  4141d2:	adc    eax,0xe88713a
  4141d7:	push   0xc06dcab3
  4141dc:	mov    bl,BYTE PTR [edx-0x44adc73d]
  4141e2:	out    0x49,eax
  4141e4:	cmp    edx,DWORD PTR [eax]
  4141e6:	inc    edi
  4141e7:	push   ebx
  4141e8:	leave  
  4141e9:	jns    0x41425c
  4141eb:	icebp  
  4141ec:	jno    0x414254
  4141ee:	inc    edx
  4141ef:	or     BYTE PTR [ebp+0x39],ch
  4141f2:	push   ebp
  4141f3:	mov    WORD PTR [eax+ecx*1],ss
  4141f6:	shl    BYTE PTR [ecx],1
  4141f8:	fadd   QWORD PTR [ebx]
  4141fb:	jo     0x414220
  4141fd:	bound  esp,QWORD PTR [esi+0x58]
  414200:	lock fstp TBYTE PTR [ebx-0x57]
  414204:	sbb    BYTE PTR [ebx-0x58e1dc37],dl
  41420a:	xor    al,0xe
  41420c:	adc    ch,BYTE PTR [esi-0x24696895]
  414212:	and    al,BYTE PTR [ecx+0x3d59f493]
  414218:	imul   ebp,DWORD PTR [eax],0xffffffe3
  41421b:	pop    edi
  41421c:	clc    
  41421d:	rol    BYTE PTR [esi],cl
  41421f:	fild   QWORD PTR [ebp+0x497c5158]
  414225:	and    dl,BYTE PTR [ebx-0x17]
  414228:	lods   ax,WORD PTR ds:[esi]
  41422a:	xchg   esi,eax
  41422b:	cmc    
  41422c:	and    BYTE PTR ds:0x746cfc99,0x58
  414233:	in     al,dx
  414234:	ins    DWORD PTR es:[edi],dx
  414235:	neg    ecx
  414237:	push   esi
  414238:	ins    DWORD PTR es:[edi],dx
  414239:	fistp  WORD PTR [esi+eax*2]
  41423c:	mov    bh,0x82
  41423e:	and    eax,0x1809dd01
  414243:	sar    BYTE PTR [ebx+edi*8+0xa],1
  414247:	inc    esi
  414248:	call   0x7e8c:0x789b7d1f
  41424f:	mov    al,ds:0x74c7ce7a
  414254:	sub    dh,al
  414256:	and    DWORD PTR [edx-0x49],0xffffffb9
  41425a:	ds dec ebx
  41425c:	pop    edi
  41425d:	xchg   esp,edx
  41425f:	inc    esp
  414260:	mov    DWORD PTR [eax],edi
  414262:	fnstsw ax
  414264:	outs   dx,BYTE PTR ds:[esi]
  414265:	pop    ds
  414266:	xchg   DWORD PTR [ebx],eax
  414268:	sbb    ch,BYTE PTR [ebp-0x52]
  41426b:	mov    al,0x95
  41426d:	pop    edx
  41426e:	sub    ebp,0xffffffab
  414271:	mov    WORD PTR [eax+0x52c8714b],es
  414277:	imul   edx,DWORD PTR ds:0xfdb5d5a7,0x83d3541b
  414281:	push   eax
  414282:	xchg   ecx,eax
  414283:	cmp    eax,0xebdf247b
  414288:	jmp    0xbe8462b9
  41428d:	retf   0x5da5
  414290:	xchg   ecx,eax
  414291:	xlat   BYTE PTR ds:[ebx]
  414292:	cdq    
  414293:	xor    bh,BYTE PTR [esi]
  414295:	push   ds
  414296:	adc    dh,BYTE PTR [ebx]
  414298:	sub    ecx,DWORD PTR [ebp-0x7d]
  41429b:	push   ecx
  41429c:	sti    
  41429d:	rcl    edi,0x5d
  4142a0:	pop    ebx
  4142a1:	iret   
  4142a2:	mov    bh,0xad
  4142a4:	out    dx,al
  4142a5:	cmp    al,0xc8
  4142a7:	rcr    DWORD PTR [ebx+edx*1-0x6e],cl
  4142ab:	jb     0x4142a7
  4142ad:	dec    esi
  4142ae:	dec    eax
  4142af:	add    al,0xbe
  4142b1:	mov    WORD PTR [ebx+0x305b034c],fs
  4142b7:	rol    edi,1
  4142b9:	iret   
  4142ba:	sub    eax,0x58122a17
  4142bf:	aas    
  4142c0:	dec    ebp
  4142c1:	xchg   ebp,eax
  4142c2:	cmp    BYTE PTR [ecx+0x3d],dh
  4142c5:	retf   
  4142c6:	jecxz  0x4142cb
  4142c8:	aam    0x3
  4142ca:	sub    edi,DWORD PTR [eax-0x78f5d523]
  4142d0:	cwde   
  4142d1:	jbe    0x414312
  4142d3:	rcr    DWORD PTR [ebp+0x3562dd9c],0xe5
  4142da:	push   eax
  4142db:	mov    cl,0x6c
  4142dd:	xchg   ebp,eax
  4142de:	mov    dh,0x52
  4142e0:	sbb    BYTE PTR [eax],cl
  4142e2:	pop    ss
  4142e3:	int    0xfb
  4142e5:	dec    edi
  4142e6:	std    
  4142e7:	mov    DWORD PTR [ebx+0x4f777024],eax
  4142ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142ee:	mov    eax,ds:0x2aa0b983
  4142f3:	ins    DWORD PTR es:[edi],dx
  4142f4:	loope  0x414318
  4142f6:	adc    eax,0x322ee7cb
  4142fb:	push   esi
  4142fc:	ret    0xa595
  4142ff:	mov    ecx,0x9487a356
  414304:	(bad)  
  414305:	into   
  414306:	cmp    dl,ah
  414308:	cmp    bh,BYTE PTR [esi]
  41430a:	mov    al,0x62
  41430c:	scas   eax,DWORD PTR es:[edi]
  41430d:	add    al,0xa0
  41430f:	rcr    DWORD PTR [eax],1
  414311:	or     al,0x8b
  414313:	les    esp,FWORD PTR [ebx]
  414315:	mov    ds:0x68cc844f,eax
  41431a:	sbb    BYTE PTR [ecx+0x579536e],ah
  414320:	adc    DWORD PTR [edi+0x55ee0ae],eax
  414326:	pop    esi
  414327:	push   0x462a4192
  41432c:	sub    BYTE PTR [esi],dl
  41432e:	sub    dh,bh
  414330:	mov    dl,0xf2
  414332:	and    ah,dl
  414334:	xor    BYTE PTR ds:0xb0751abf,ch
  41433a:	ins    DWORD PTR es:[edi],dx
  41433b:	dec    ebp
  41433c:	fimul  WORD PTR ds:0x4af2817d
  414342:	mov    dh,0xb5
  414344:	sub    ebx,DWORD PTR [esi+esi*8]
  414347:	adc    eax,0xb045c22a
  41434c:	lds    edi,FWORD PTR [edi-0x2463085d]
  414352:	pop    esi
  414353:	pop    esp
  414354:	imul   DWORD PTR ds:0xbe59d992
  41435a:	inc    eax
  41435b:	jmp    0x4143a3
  41435d:	loop   0x4142f7
  41435f:	xor    al,0xd8
  414361:	mov    ecx,0xe104d49
  414366:	lock add esp,DWORD PTR [edi+0x20692619]
  41436d:	inc    edi
  41436e:	idiv   DWORD PTR [edx]
  414370:	ret    
  414371:	iret   
  414372:	add    BYTE PTR [edi],dh
  414374:	xchg   ebp,eax
  414375:	out    0x83,al
  414377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414378:	mov    esi,0xe77a8c88
  41437d:	loopne 0x414346
  41437f:	data16 (bad) 
  414381:	loopne 0x41439d
  414383:	imul   ebp,DWORD PTR [edi+ecx*4],0xffffffd0
  414387:	iret   
  414388:	jo     0x414322
  41438a:	add    al,0x6d
  41438c:	mov    edx,0xeedcd5ca
  414391:	or     BYTE PTR [ecx+0x87ffb0c],al
  414397:	outs   dx,DWORD PTR ds:[esi]
  414398:	inc    edi
  414399:	adc    al,0xc4
  41439b:	sti    
  41439c:	data16 mov ah,0x66
  41439f:	clc    
  4143a0:	ins    DWORD PTR es:[edi],dx
  4143a1:	icebp  
  4143a2:	adc    DWORD PTR [edx-0x25],ebx
  4143a5:	cs dec edi
  4143a7:	or     bl,ah
  4143a9:	xor    BYTE PTR [edi-0x35b65f29],dh
  4143af:	adc    eax,0xcc0f92aa
  4143b4:	into   
  4143b5:	shl    DWORD PTR [ebx+0x18],1
  4143b8:	fcomp  QWORD PTR [eax+0x73]
  4143bb:	ja     0x4143fd
  4143bd:	mov    ch,0x69
  4143bf:	push   0xffffff82
  4143c1:	adc    edi,esi
  4143c3:	mov    ds:0xe80f70d1,eax
  4143c8:	jno    0x414448
  4143ca:	aam    0x6e
  4143cc:	sbb    eax,0x62898d6d
  4143d1:	idiv   DWORD PTR [esi]
  4143d3:	xchg   edi,eax
  4143d4:	(bad)  
  4143d5:	cmp    eax,0xe500a74b
  4143da:	mov    BYTE PTR ds:0x9840da60,cl
  4143e0:	(bad)  
  4143e2:	xor    BYTE PTR [ebx-0x70],0x69
  4143e6:	or     dl,0x4c
  4143e9:	cmp    al,0xda
  4143eb:	sub    DWORD PTR [ecx+0x5a],edx
  4143ee:	jmp    DWORD PTR [ebx-0x7f5d2b2f]
  4143f4:	arpl   WORD PTR [eax],ax
  4143f6:	out    dx,al
  4143f7:	js     0x4143d9
  4143f9:	or     eax,0x420dd42c
  4143fe:	out    dx,eax
  4143ff:	sbb    esp,esp
  414401:	or     eax,0x8ba5c4c1
  414406:	cmp    al,0x1e
  414408:	adc    al,0xe1
  41440a:	xor    edi,esp
  41440c:	fld    QWORD PTR [eax]
  41440e:	xor    eax,0xd7ff5f23
  414413:	xor    DWORD PTR [ecx+0x5b],esi
  414416:	popf   
  414417:	cmp    ecx,0xffffffa0
  41441a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41441b:	in     eax,0x3
  41441d:	jo     0x41447d
  41441f:	xchg   edi,eax
  414420:	push   esi
  414421:	mov    esp,0x69a78142
  414426:	jecxz  0x4143c9
  414428:	mov    ebx,0x7c09b28
  41442d:	dec    edx
  41442e:	lods   al,BYTE PTR ds:[esi]
  41442f:	pop    ss
  414430:	call   0x8c64:0x7bdc136c
  414437:	jbe    0x4143c0
  414439:	pop    edx
  41443a:	and    al,0x1e
  41443c:	sub    ah,BYTE PTR [edx-0x65f45bc1]
  414442:	call   0xb370:0xb4caf4be
  414449:	and    DWORD PTR [edx-0x6c],ecx
  41444c:	add    esp,DWORD PTR [edx+0x14]
  41444f:	in     eax,0x68
  414451:	cmp    ah,BYTE PTR [edi-0x26741e2b]
  414457:	pop    edx
  414458:	pushf  
  414459:	mov    eax,0x2d856e1f
  41445e:	jp     0x4144cd
  414460:	mov    edx,0xc3b1335b
  414465:	jno    0x41446f
  414467:	enter  0x79cd,0xe5
  41446b:	push   edi
  41446c:	mov    ah,0x7
  41446e:	js     0x4144dc
  414470:	(bad)  
  414471:	fst    QWORD PTR [ebp+0x18]
  414474:	pop    edx
  414475:	ret    
  414476:	push   ebx
  414477:	sub    al,0xa2
  414479:	loopne 0x4144d9
  41447b:	loopne 0x41449d
  41447d:	mov    al,ds:0xae5b365a
  414482:	push   ds
  414483:	adc    eax,DWORD PTR [ebx-0x401f69a8]
  414489:	cvtps2pi mm6,QWORD PTR ds:0x97ea58f6
  414490:	push   esi
  414491:	fisttp WORD PTR [edx]
  414493:	jns    0x414514
  414495:	mov    cl,0xdb
  414497:	mov    eax,0xf197d91a
  41449c:	pop    ebx
  41449d:	adc    DWORD PTR [ebx-0x36],0x4
  4144a1:	mov    al,0x8e
  4144a3:	xor    BYTE PTR [ebp+edx*1+0x38a8f702],bl
  4144aa:	and    BYTE PTR [edi+eiz*8+0x49],ah
  4144ae:	xchg   BYTE PTR [edx-0x54c6eda5],dl
  4144b4:	(bad)  
  4144b5:	jbe    0x414470
  4144b7:	inc    eax
  4144b8:	jmp    0x41447f
  4144ba:	xlat   BYTE PTR ds:[ebx]
  4144bb:	fcmovnu st,st(3)
  4144bd:	lods   eax,DWORD PTR ds:[esi]
  4144be:	ins    BYTE PTR es:[edi],dx
  4144bf:	cmp    eax,0x47a2d89
  4144c4:	mov    eax,0xfce9e9f7
  4144c9:	jo     0x4144e0
  4144cb:	xlat   BYTE PTR ds:[ebx]
  4144cc:	fisttp DWORD PTR [esi-0x51c14d8e]
  4144d2:	call   0x3f38e59c
  4144d7:	sbb    edx,esp
  4144d9:	inc    eax
  4144da:	sub    ch,BYTE PTR ds:[ebx-0x4d]
  4144de:	add    esp,DWORD PTR [esp+ecx*1-0x41]
  4144e2:	dec    esp
  4144e3:	pop    es
  4144e4:	shl    BYTE PTR [ebp-0x2f0212e4],0x63
  4144eb:	fs sbb eax,0xcdf773a5
  4144f1:	jnp    0x414505
  4144f3:	push   ecx
  4144f4:	fsub   st(5),st
  4144f6:	sub    DWORD PTR [esi],ebx
  4144f8:	inc    ecx
  4144f9:	and    ecx,DWORD PTR [ecx+0x4c]
  4144fc:	inc    edi
  4144fd:	cdq    
  4144fe:	outs   dx,BYTE PTR ds:[esi]
  4144ff:	jno    0x414517
  414501:	out    dx,al
  414502:	aas    
  414503:	xchg   edi,eax
  414504:	pop    esi
  414505:	sbb    BYTE PTR ds:0xd90d37a7,bl
  41450b:	sahf   
  41450c:	shl    esi,0xf5
  41450f:	dec    eax
  414510:	or     edx,DWORD PTR [ecx+0x48]
  414513:	xchg   ah,cl
  414515:	xor    al,ah
  414517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414518:	ret    0x39fb
  41451b:	inc    esi
  41451c:	fisttp QWORD PTR [eax+0x3530bc87]
  414522:	inc    eax
  414523:	adc    eax,0xef65ae90
  414528:	mov    edi,DWORD PTR [ebp+eax*1+0x72]
  41452c:	jl     0x4144b5
  41452e:	cdq    
  41452f:	push   es
  414530:	jb     0x4144ce
  414532:	imul   ecx,DWORD PTR [edi],0x1d
  414535:	mov    eax,ds:0xb11458c5
  41453a:	(bad)  
  41453b:	dec    ebp
  41453c:	mov    dh,BYTE PTR [edx]
  41453e:	or     BYTE PTR [eax+0x74a49887],bl
  414544:	mov    ds,WORD PTR [edi+eax*1-0x99bf4ff]
  41454b:	cmp    BYTE PTR [eax+0x71],al
  41454e:	test   eax,0x726b7614
  414553:	jmp    0x414563
  414555:	lock lods al,BYTE PTR ds:[esi]
  414557:	mov    al,0x19
  414559:	in     eax,dx
  41455a:	push   ebp
  41455b:	mov    bh,0xe7
  41455d:	scas   al,BYTE PTR es:[edi]
  41455e:	mov    eax,0x6d5825ef
  414563:	sub    eax,0xe2d3247a
  414568:	jg     0x414529
  41456a:	jae    0x414563
  41456c:	cmp    DWORD PTR [esi+0x27a5ae44],edi
  414572:	inc    esi
  414573:	cwde   
  414574:	pop    ebp
  414575:	cmc    
  414576:	mov    ch,0x4e
  414578:	xor    DWORD PTR ds:0x53e39192,edi
  41457e:	js     0x414529
  414580:	sbb    cl,BYTE PTR [edi-0x4e034780]
  414586:	es int3 
  414588:	jg     0x414521
  41458a:	lods   al,BYTE PTR ds:[esi]
  41458b:	push   0x4a
  41458d:	or     ch,BYTE PTR [ebx-0x6568c776]
  414593:	and    eax,DWORD PTR [edx+0xfbc0bbc]
  414599:	outs   dx,DWORD PTR ds:[esi]
  41459a:	test   DWORD PTR [ecx+0x78],edx
  41459d:	(bad)  
  41459f:	dec    eax
  4145a0:	and    eax,0x54f43869
  4145a5:	cdq    
  4145a6:	mov    dl,0xbd
  4145a8:	xor    eax,0x8723b1d4
  4145ad:	jns    0x414548
  4145af:	sahf   
  4145b0:	not    DWORD PTR [ebx]
  4145b2:	popf   
  4145b3:	push   0xe84c8cf2
  4145b8:	icebp  
  4145b9:	or     eax,0xd1069e84
  4145be:	clc    
  4145bf:	add    BYTE PTR [edx],0xf5
  4145c2:	mov    ebx,0xb9d3aa6f
  4145c7:	mov    BYTE PTR [edi+0x248c39d3],al
  4145cd:	out    dx,eax
  4145ce:	jbe    0x41458e
  4145d0:	aaa    
  4145d1:	xor    al,0x6f
  4145d3:	sbb    al,0x35
  4145d5:	and    edx,DWORD PTR [ebx+0x26]
  4145d8:	jmp    0x10602c6e
  4145dd:	dec    esp
  4145de:	leave  
  4145df:	shl    DWORD PTR [esi+esi*2],cl
  4145e2:	cwde   
  4145e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145e4:	(bad)  
  4145e5:	xor    al,0xb9
  4145e7:	out    dx,al
  4145e8:	add    BYTE PTR [edi-0x257d9538],dh
  4145ee:	les    ecx,FWORD PTR [ebp+0x2b]
  4145f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145f2:	dec    ecx
  4145f3:	adc    esp,DWORD PTR [edx+eax*2+0xb]
  4145f7:	test   al,0x4f
  4145f9:	xchg   esi,eax
  4145fa:	dec    ecx
  4145fb:	retf   
  4145fc:	push   edi
  4145fd:	or     cl,BYTE PTR [eax]
  4145ff:	dec    eax
  414600:	aam    0x53
  414602:	pop    ecx
  414603:	mov    edi,0x43ec7ec
  414608:	adc    eax,0x1411b554
  41460d:	js     0x414655
  41460f:	nop
  414610:	pop    ds
  414611:	ficomp WORD PTR [ecx+0x33]
  414614:	retf   0xfd00
  414617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414618:	xor    BYTE PTR [esi-0x810efc8],bh
  41461e:	jbe    0x414627
  414620:	cmp    BYTE PTR [eax+0xd],cl
  414623:	cs mov eax,0xaffa4f7a
  414629:	fadd   st,st(1)
  41462b:	dec    ebx
  41462c:	or     BYTE PTR [esi-0x80],ah
  41462f:	dec    ecx
  414630:	in     eax,dx
  414631:	sub    cl,bl
  414633:	aaa    
  414634:	and    edx,DWORD PTR [edi+esi*2-0x28b0f9f1]
  41463b:	(bad)  
  41463c:	std    
  41463d:	test   bh,cl
  41463f:	out    dx,al
  414640:	fcomp  QWORD PTR [ecx-0x7d]
  414643:	cmp    eax,DWORD PTR [edi]
  414645:	enter  0xcc70,0xb9
  414649:	out    dx,eax
  41464a:	adc    DWORD PTR ds:0x6f928ec5,edx
  414650:	lea    ecx,[eax-0x7b]
  414653:	fwait
  414654:	dec    ebx
  414655:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414656:	aaa    
  414657:	fstp   st(3)
  414659:	ficomp WORD PTR [esi]
  41465b:	push   es
  41465c:	jmp    0x1fda0304
  414661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414662:	into   
  414663:	retf   
  414664:	repz scas eax,DWORD PTR es:[edi]
  414666:	mov    ch,0x22
  414668:	cmp    BYTE PTR [edx],dl
  41466a:	add    dl,BYTE PTR [ebx+0x9]
  41466d:	sbb    edi,ebp
  41466f:	mov    DWORD PTR [edi+0x42],edx
  414672:	mov    eax,ds:0xf955075c
  414677:	xchg   esp,eax
  414678:	mov    WORD PTR [eax],es
  41467a:	(bad)  
  41467b:	pop    ebx
  41467c:	nop
  41467d:	pop    es
  41467e:	hlt    
  41467f:	mov    ch,0x60
  414681:	pop    edi
  414682:	cli    
  414683:	repnz out 0x1f,al
  414686:	in     al,dx
  414687:	push   esi
  414688:	and    eax,0x5a9c3700
  41468d:	inc    esi
  41468e:	test   BYTE PTR [ecx+esi*8-0x15],cl
  414692:	jg     0x4146c7
  414694:	jo     0x41469e
  414696:	lea    esi,[ecx+0x219730c]
  41469c:	clc    
  41469d:	pushf  
  41469e:	jl     0x4146c3
  4146a0:	aas    
  4146a1:	adc    cl,BYTE PTR [edx]
  4146a3:	cmp    DWORD PTR [edi+edx*4+0xd55a6cc],0x71
  4146ab:	mov    edx,0x8c33c1eb
  4146b0:	dec    ebx
  4146b1:	ins    BYTE PTR es:[edi],dx
  4146b2:	mov    eax,ds:0x8a0ab04
  4146b7:	sub    dh,ch
  4146b9:	ja     0x41464f
  4146bb:	xor    edx,esi
  4146bd:	aad    0xe9
  4146bf:	mov    esi,0x3cfaed2e
  4146c4:	rol    DWORD PTR [esi-0x68252c53],1
  4146ca:	or     BYTE PTR [ebp+0x5d9417b5],0x3c
  4146d1:	pop    ss
  4146d2:	or     al,0xd0
  4146d4:	int3   
  4146d5:	mov    dl,ah
  4146d7:	fmul   QWORD PTR [eax+0x4ad07668]
  4146dd:	jl     0x4146ed
  4146df:	sub    DWORD PTR [ebx+edx*1],0x4f03d979
  4146e6:	xor    BYTE PTR [edx+0x33],ch
  4146e9:	test   eax,0x7f67699e
  4146ee:	jmp    0x4146d2
  4146f0:	add    eax,0xa942ef6
  4146f5:	stos   BYTE PTR es:[edi],al
  4146f6:	pop    es
  4146f7:	je     0x4146e8
  4146f9:	cwde   
  4146fa:	mov    esp,0x86a00f9
  4146ff:	jnp    0x414764
  414701:	dec    esp
  414702:	sbb    esp,eax
  414704:	jno    0x414696
  414706:	or     DWORD PTR ds:0x4a25c082,0x459d2f40
  414710:	shl    DWORD PTR [ebx],0xf6
  414713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414714:	and    ah,BYTE PTR ds:0x7fc20be3
  41471a:	mov    cl,0x2a
  41471c:	xchg   edi,eax
  41471d:	ficomp DWORD PTR [ebp+0x15]
  414720:	jo     0x414740
  414722:	add    DWORD PTR [edx+0x62b46d4d],edx
  414728:	jbe    0x4146db
  41472a:	out    dx,eax
  41472b:	out    0x62,al
  41472d:	mov    eax,ds:0x6687285a
  414732:	push   ss
  414733:	adc    ebx,DWORD PTR [ecx+0x18]
  414736:	fcmovbe st,st(0)
  414738:	jbe    0x41479b
  41473a:	push   ss
  41473b:	inc    edx
  41473c:	sub    BYTE PTR [ecx],ah
  41473e:	dec    ecx
  41473f:	jecxz  0x41474e
  414741:	lods   eax,DWORD PTR ds:[esi]
  414742:	(bad)  
  414743:	add    bl,BYTE PTR ss:[edx+0x7abe4a73]
  41474a:	mov    al,BYTE PTR [esi-0x72514e59]
  414750:	mov    cl,0x5d
  414752:	push   es
  414753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414754:	call   0x135b:0xa8ccb261
  41475b:	lahf   
  41475c:	pop    eax
  41475d:	fadd   QWORD PTR [esp+eax*2]
  414760:	shl    DWORD PTR [esi+0x7c],cl
  414763:	in     eax,0x8a
  414765:	rol    DWORD PTR [eax+0xbd0b49c],cl
  41476b:	aas    
  41476c:	loope  0x41477a
  41476e:	pop    ss
  41476f:	retf   0xe49b
  414772:	aas    
  414773:	pop    es
  414774:	lahf   
  414775:	icebp  
  414776:	das    
  414777:	mov    esp,0x611f144a
  41477c:	sub    ecx,DWORD PTR [ebx+0x5a]
  41477f:	mov    edi,0x718e45c3
  414784:	(bad)  
  414785:	cli    
  414786:	(bad)  
  414787:	mov    eax,0x1587ee8c
  41478c:	ror    cl,1
  41478e:	and    eax,0xfe7e5b1c
  414793:	sbb    dl,BYTE PTR [edi]
  414795:	jge    0x41480f
  414797:	es clc 
  414799:	repz loop 0x414776
  41479c:	mov    al,0xc2
  41479e:	outs   dx,DWORD PTR ds:[esi]
  41479f:	add    al,0xdf
  4147a1:	rol    DWORD PTR [ecx+0x7a25a61b],1
  4147a7:	add    ah,BYTE PTR [ecx+0x61]
  4147aa:	aaa    
  4147ab:	daa    
  4147ac:	xchg   edi,eax
  4147ad:	jns    0x414730
  4147af:	dec    esp
  4147b0:	mov    gs,ecx
  4147b2:	imul   esi,edi,0x2
  4147b5:	retf   0x9915
  4147b8:	or     BYTE PTR [eax+edi*8],bh
  4147bb:	xor    DWORD PTR ss:[ebx],0xffffffeb
  4147bf:	(bad)  
  4147c0:	fist   WORD PTR [edi+0x525088d2]
  4147c6:	daa    
  4147c7:	lds    esi,FWORD PTR [ebx]
  4147c9:	jbe    0x414778
  4147cb:	(bad)  
  4147cd:	dec    edx
  4147ce:	sahf   
  4147cf:	imul   ecx,edx,0x620ac595
  4147d5:	aaa    
  4147d6:	xor    ah,BYTE PTR [esi+0x27]
  4147d9:	ja     0x41476b
  4147db:	out    0x2b,eax
  4147dd:	cmp    BYTE PTR [edi],ch
  4147df:	sete   BYTE PTR [edi]
  4147e2:	leave  
  4147e3:	stos   DWORD PTR es:[edi],eax
  4147e4:	aam    0x87
  4147e6:	push   ss
  4147e7:	jne    0x4147e1
  4147e9:	in     eax,dx
  4147ea:	fbstp  TBYTE PTR [ebx*4+0x27f16c2e]
  4147f1:	xor    DWORD PTR [esi+0x231b2e8d],edx
  4147f7:	adc    al,al
  4147f9:	mov    ebp,edx
  4147fb:	xor    DWORD PTR [edx-0x3be7e22a],esp
  414801:	daa    
  414802:	sub    BYTE PTR [edi-0x5d92e0db],bl
  414808:	test   BYTE PTR [esi+esi*1+0x50],dh
  41480c:	add    eax,0x1b4f9d76
  414811:	xor    bl,bh
  414813:	inc    eax
  414814:	cli    
  414815:	mov    bh,0x34
  414817:	mov    ebp,0x7daf3347
  41481c:	add    eax,ebx
  41481e:	sub    eax,0x939d67a5
  414823:	icebp  
  414824:	jae    0x414850
  414826:	cli    
  414827:	mov    eax,ds:0xa3faf5cc
  41482c:	imul   edx,DWORD PTR [edi],0xfffffff8
  41482f:	push   eax
  414830:	push   ds
  414831:	clc    
  414832:	sbb    edi,eax
  414834:	add    BYTE PTR [edx],cl
  414836:	repnz and esi,DWORD PTR [esi+0x47]
  41483a:	push   ss
  41483b:	xor    DWORD PTR es:[ecx],esp
  41483e:	inc    ebx
  41483f:	mov    ebx,0xbfbd53d7
  414844:	rol    bh,1
  414846:	retf   
  414847:	xchg   DWORD PTR [esi+esi*8],eax
  41484a:	push   ecx
  41484b:	in     al,dx
  41484c:	test   esi,esp
  41484e:	pop    ecx
  41484f:	pop    ss
  414850:	and    esp,0x6e
  414853:	shr    DWORD PTR ds:0xfdd43f48,cl
  414859:	sub    BYTE PTR [edx],ch
  41485b:	je     0x414811
  41485d:	ins    DWORD PTR es:[edi],dx
  41485e:	jb     0x414882
  414860:	pop    es
  414861:	xlat   BYTE PTR ds:[ebx]
  414862:	fwait
  414863:	push   ebp
  414864:	sub    DWORD PTR ds:0xa45e13dd,ebx
  41486a:	xchg   al,bl
  41486c:	fst    QWORD PTR [ebp-0x76]
  41486f:	mov    esi,0xba7094a1
  414874:	sub    esp,DWORD PTR [ebp+ebp*4+0x2e]
  414878:	adc    DWORD PTR [eax-0xe40431d],esp
  41487e:	pop    esi
  41487f:	pusha  
  414880:	push   cs
  414881:	(bad)  
  414882:	stc    
  414883:	aaa    
  414884:	mov    ecx,0xc298126b
  414889:	not    BYTE PTR [eax+0x21c8dc2b]
  41488f:	pop    edi
  414890:	sub    ebx,DWORD PTR [edx]
  414892:	pusha  
  414893:	dec    ebx
  414894:	mov    bh,0x7d
  414896:	push   es
  414897:	jl     0x4148e5
  414899:	mov    al,0x77
  41489b:	xor    ebx,DWORD PTR [esi-0x1498a96d]
  4148a1:	shr    BYTE PTR [esi],0x77
  4148a4:	mov    esi,0x6c00172d
  4148a9:	enter  0x9cf1,0x45
  4148ad:	fsub   st(1),st
  4148af:	adc    DWORD PTR [ebx+0x21],ecx
  4148b2:	popa   
  4148b3:	in     al,dx
  4148b4:	mov    ch,0xe7
  4148b6:	jne    0x4148d5
  4148b8:	dec    esp
  4148b9:	ins    BYTE PTR es:[edi],dx
  4148ba:	xlat   BYTE PTR ds:[ebx]
  4148bb:	shl    DWORD PTR fs:[esi-0x5],1
  4148bf:	(bad)  
  4148c0:	fisttp DWORD PTR [eax]
  4148c2:	or     DWORD PTR ds:0xfa1da40c,ecx
  4148c8:	cmp    dl,BYTE PTR [ebp+0x74]
  4148cb:	mov    eax,0x57e4caed
  4148d0:	(bad)  
  4148d1:	enter  0x3eeb,0xb
  4148d5:	push   0x11
  4148d7:	dec    esp
  4148d8:	push   ebx
  4148d9:	dec    esi
  4148da:	(bad)  
  4148db:	push   esi
  4148dc:	mov    ebx,0x938acf7a
  4148e1:	lds    eax,FWORD PTR [ebp+0x6b]
  4148e4:	outs   dx,DWORD PTR ds:[esi]
  4148e5:	call   0xc4de:0xb4e06eff
  4148ec:	stc    
  4148ed:	add    eax,0x9bb56590
  4148f2:	mov    ds:0x2bb1f432,al
  4148f7:	out    0x8c,eax
  4148f9:	ret    0x2d74
  4148fc:	jg     0x4148e1
  4148fe:	ret    
  4148ff:	cdq    
  414900:	dec    edx
  414901:	lods   eax,DWORD PTR ds:[esi]
  414902:	sub    eax,0xa32e03eb
  414907:	adc    esi,DWORD PTR [edx-0x72]
  41490a:	int    0x7d
  41490c:	mov    ebp,0x2fd7edb1
  414911:	outs   dx,DWORD PTR ds:[esi]
  414912:	jge    0x414913
  414914:	mov    bh,0xe9
  414916:	cs pop ebp
  414918:	jo     0x4148b8
  41491a:	mov    eax,es
  41491c:	sub    BYTE PTR [edi],0xc6
  41491f:	jmp    0x50d7fa59
  414924:	pop    eax
  414925:	dec    ecx
  414926:	mov    BYTE PTR [edx-0x28],bl
  414929:	pusha  
  41492a:	pushf  
  41492b:	test   al,0xa
  41492d:	sub    DWORD PTR [edi-0xbb00de],0x37
  414934:	jno    0x4149aa
  414936:	and    BYTE PTR [edx+ebx*8-0x35],0x39
  41493b:	sbb    eax,0xb0c23a77
  414940:	(bad)  
  414941:	xchg   edi,eax
  414942:	stc    
  414943:	cmp    bh,cl
  414945:	mov    cl,0xc2
  414947:	adc    al,0xa5
  414949:	jns    0x4149a1
  41494b:	jns    0x41494a
  41494d:	(bad)  
  41494e:	lock adc eax,0x5155e76d
  414954:	js     0x4149cf
  414956:	sbb    esp,DWORD PTR [ecx-0x55]
  414959:	sbb    dh,BYTE PTR [eax+0x4b]
  41495c:	nop    DWORD PTR [edx-0x63dcc23a]
  414963:	fadd   DWORD PTR [ebx+0x60]
  414966:	rcl    BYTE PTR [ebx+0x17],0x9c
  41496a:	loopne 0x4149cf
  41496c:	hlt    
  41496d:	(bad)  
  41496e:	std    
  41496f:	sti    
  414970:	retf   0xc312
  414973:	adc    eax,0xd2aac66d
  414978:	xchg   esi,eax
  414979:	icebp  
  41497a:	int3   
  41497b:	dec    ebx
  41497c:	dec    esp
  41497d:	inc    ecx
  41497e:	out    0x59,al
  414980:	rol    eax,1
  414982:	cmp    dl,BYTE PTR [eax]
  414984:	xor    al,0x31
  414986:	adc    cl,dh
  414988:	xchg   edx,eax
  414989:	or     eax,0x9bb0deda
  41498e:	push   cs
  41498f:	xchg   edi,eax
  414990:	push   esp
  414991:	retf   0xdfba
  414994:	sub    bh,0x92
  414997:	xlat   BYTE PTR ds:[ebx]
  414998:	mov    ebp,DWORD PTR [edi+ebx*2+0x7d]
  41499c:	sbb    al,0x72
  41499e:	int3   
  41499f:	(bad)  
  4149a0:	adc    ah,BYTE PTR [ebx]
  4149a2:	jae    0x414938
  4149a4:	(bad)  
  4149a5:	js     0x414937
  4149a7:	mov    ebp,0xb19e4fbc
  4149ac:	xor    DWORD PTR [eax+edx*4-0x41],esp
  4149b0:	call   0x5af2fc81
  4149b5:	int    0x29
  4149b7:	enter  0xd95d,0xb6
  4149bb:	out    0xae,al
  4149bd:	repz idiv BYTE PTR [ebp+0x1d]
  4149c1:	test   dl,ch
  4149c3:	adc    dh,BYTE PTR [edi-0x4d]
  4149c6:	pop    edx
  4149c7:	push   0x6c2fcdef
  4149cc:	or     bh,BYTE PTR [ebx-0x2]
  4149cf:	daa    
  4149d0:	test   BYTE PTR [ecx+edi*4],dl
  4149d3:	push   ebx
  4149d4:	push   ebx
  4149d5:	scas   al,BYTE PTR es:[edi]
  4149d6:	(bad)  
  4149d7:	iret   
  4149d8:	pop    esp
  4149d9:	inc    esi
  4149da:	add    BYTE PTR [esi+0x65],cl
  4149dd:	in     al,dx
  4149de:	lea    edi,[edx-0x49]
  4149e1:	fisttp DWORD PTR [ebp+0x6788e71d]
  4149e7:	out    dx,al
  4149e8:	pushf  
  4149e9:	mov    ebx,0xcbffa56e
  4149ee:	mov    bh,0xbc
  4149f0:	test   al,0x3b
  4149f2:	mov    ah,0x7c
  4149f4:	mov    cl,0x29
  4149f6:	jae    0x414a49
  4149f8:	mov    dl,0xae
  4149fa:	push   sp
  4149fc:	lea    edi,[eax]
  4149fe:	test   eax,0x66628a09
  414a03:	xor    al,0x67
  414a05:	push   edi
  414a06:	mov    ecx,0xf2b9074b
  414a0b:	pop    ss
  414a0c:	in     eax,dx
  414a0d:	pusha  
  414a0e:	in     eax,dx
  414a0f:	inc    esi
  414a10:	in     eax,0xd3
  414a12:	(bad)  
  414a13:	and    eax,0x7c8f5e44
  414a18:	shl    esp,1
  414a1a:	xchg   esp,eax
  414a1b:	ret    
  414a1c:	mov    bh,0x49
  414a1e:	fs test eax,0x46318ddd
  414a24:	adc    DWORD PTR ds:[ebx],edi
  414a27:	fstp   TBYTE PTR [ecx]
  414a2a:	and    eax,0x350e24fd
  414a2f:	lahf   
  414a30:	test   al,0xd5
  414a32:	ins    DWORD PTR es:[edi],dx
  414a33:	retf   0x120e
  414a36:	(bad)  
  414a37:	ins    BYTE PTR es:[edi],dx
  414a38:	jecxz  0x414a0e
  414a3a:	andnpd xmm1,XMMWORD PTR [ebx+ebp*4-0x64]
  414a40:	test   al,0x62
  414a42:	jmp    0xc460d3b9
  414a47:	mov    ebp,0x9d1402e5
  414a4c:	or     edx,ecx
  414a4e:	xor    DWORD PTR [esi-0x32284776],esp
  414a54:	test   dh,cl
  414a56:	nop
  414a57:	int3   
  414a58:	push   esp
  414a59:	push   ecx
  414a5a:	cmc    
  414a5b:	shl    DWORD PTR [esi],1
  414a5d:	adc    DWORD PTR [edi],ebx
  414a5f:	xor    DWORD PTR [edx],edi
  414a61:	adc    cl,BYTE PTR [eax+0x73]
  414a64:	inc    edx
  414a65:	scas   eax,DWORD PTR es:[edi]
  414a66:	push   0x1e
  414a68:	imul   edx,DWORD PTR [ebp-0x249db5d1],0xffffff9b
  414a6f:	inc    ebp
  414a70:	and    eax,0xbed8daaa
  414a75:	adc    DWORD PTR [eax],eax
  414a77:	and    edi,ecx
  414a79:	popf   
  414a7a:	retf   0x82ac
  414a7d:	dec    esi
  414a7e:	pop    edi
  414a7f:	inc    esp
  414a80:	scas   eax,DWORD PTR es:[edi]
  414a81:	sbb    eax,0x9feacae2
  414a86:	test   eax,0x1c5daca4
  414a8b:	sub    eax,0x98c0f17a
  414a90:	in     eax,0xc2
  414a92:	sub    al,0xbb
  414a94:	or     edi,DWORD PTR [eax+0x24]
  414a97:	fldcw  WORD PTR ds:0x6c2a6461
  414a9d:	sub    eax,0x82ae1d30
  414aa2:	mov    BYTE PTR [eax-0x3c],dl
  414aa5:	jbe    0x414af9
  414aa7:	push   es
  414aa8:	enter  0xdd8b,0xd5
  414aac:	mov    ebx,DWORD PTR [ebx+0x7c1cb3af]
  414ab2:	jns    0x414a4a
  414ab4:	mov    esi,DWORD PTR [eax+0x57]
  414ab7:	mov    esp,0x4689618f
  414abc:	out    dx,eax
  414abd:	pop    edx
  414abe:	mov    cl,BYTE PTR [ebx-0x7]
  414ac1:	lds    edx,FWORD PTR [bx]
  414ac4:	mov    bl,ah
  414ac6:	jle    0x414a78
  414ac8:	sbb    eax,0x76ddb569
  414acd:	das    
  414ace:	inc    edi
  414acf:	arpl   WORD PTR [edi+0x4cef42eb],bx
  414ad5:	mov    ds:0x97599be0,eax
  414ada:	add    cl,al
  414adc:	xchg   esp,eax
  414add:	repz inc edi
  414adf:	in     al,dx
  414ae0:	ja     0x414af2
  414ae2:	sbb    eax,0xe7fcb6c1
  414ae7:	dec    ebx
  414ae8:	xor    al,0x6c
  414aea:	(bad)  [ebp+edx*4+0x31]
  414aee:	cli    
  414aef:	jno    0x414b0e
  414af1:	or     al,0x49
  414af4:	adc    esp,edi
  414af6:	jp     0x414b38
  414af8:	jns    0x414b77
  414afa:	push   0x69470240
  414aff:	inc    ecx
  414b00:	cmp    dl,0x46
  414b03:	pop    ebp
  414b04:	out    0x35,al
  414b06:	frstor [esi+0x52b585f5]
  414b0c:	mov    eax,0x6b33bc69
  414b11:	lods   eax,DWORD PTR es:[esi]
  414b13:	ds stos DWORD PTR es:[edi],eax
  414b15:	scas   al,BYTE PTR es:[edi]
  414b16:	aam    0x39
  414b18:	sub    DWORD PTR [ecx+0x1d],eax
  414b1b:	sub    al,BYTE PTR [ebx+0x75]
  414b1e:	fwait
  414b1f:	test   al,0x79
  414b21:	xor    cl,BYTE PTR [ecx-0x12]
  414b24:	jecxz  0x414b47
  414b26:	inc    edx
  414b27:	xor    ch,dl
  414b29:	push   es
  414b2a:	scas   eax,DWORD PTR es:[edi]
  414b2b:	xchg   edi,eax
  414b2c:	pusha  
  414b2d:	mov    dl,dh
  414b2f:	mov    ebp,0x2ecb421f
  414b34:	cmp    BYTE PTR [esi],ah
  414b36:	mov    al,BYTE PTR [ebp-0x23414180]
  414b3c:	je     0x414b3b
  414b3e:	push   cs
  414b3f:	dec    ebx
  414b40:	aad    0x19
  414b42:	dec    ebx
  414b43:	invd   
  414b45:	sbb    eax,0xe1cfc3b3
  414b4a:	jl     0x414af9
  414b4c:	or     dh,BYTE PTR [edi+0x66]
  414b4f:	adc    eax,0x9d8c306d
  414b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b55:	out    0x50,eax
  414b57:	push   edi
  414b58:	or     eax,0xd6684d12
  414b5d:	stos   DWORD PTR es:[edi],eax
  414b5e:	add    edx,DWORD PTR [eax+0x271be46f]
  414b64:	imul   esp,DWORD PTR [edi],0xc6bd6c3f
  414b6a:	add    al,0x5c
  414b6c:	rcl    DWORD PTR [esi+0x75],cl
  414b6f:	cmp    DWORD PTR [edx-0x20],ebx
  414b72:	loopne 0x414ba4
  414b74:	outs   dx,DWORD PTR ds:[esi]
  414b75:	xor    al,0xb3
  414b77:	test   BYTE PTR [edx],bh
  414b79:	pop    es
  414b7a:	(bad)  
  414b7b:	arpl   WORD PTR [ebp+0x3d],di
  414b7e:	jg     0x414be8
  414b80:	pusha  
  414b81:	push   es
  414b82:	lds    edx,FWORD PTR [edx+eiz*2]
  414b85:	sahf   
  414b86:	retf   
  414b87:	jge    0x414bbd
  414b89:	test   esp,ebx
  414b8b:	mov    ch,0xcf
  414b8d:	imul   esp,DWORD PTR [edi+0x59946a36],0x72644cae
  414b97:	cmp    edx,ebx
  414b99:	jecxz  0x414bde
  414b9b:	imul   edx,DWORD PTR [ebp-0x4d2add52],0x11
  414ba2:	inc    edx
  414ba3:	mov    edx,0xf8a578a6
  414ba8:	in     al,dx
  414ba9:	in     eax,0x15
  414bab:	jecxz  0x414b7d
  414bad:	or     al,0x1
  414baf:	mov    eax,ds:0xa494fba0
  414bb4:	jne    0x414b6e
  414bb6:	xor    ebp,DWORD PTR [eax]
  414bb8:	ja     0x414c06
  414bba:	mov    ds:0x79a36f53,eax
  414bbf:	ins    DWORD PTR es:[edi],dx
  414bc0:	cmp    eax,0x6b3f5be6
  414bc5:	aas    
  414bc6:	pop    gs
  414bc8:	ins    BYTE PTR es:[edi],dx
  414bc9:	pop    edx
  414bca:	inc    eax
  414bcb:	push   0xfffffff8
  414bcd:	jmp    0x414b93
  414bcf:	cmp    al,0xfe
  414bd1:	or     ebx,DWORD PTR [esi-0x12eb014f]
  414bd7:	ds mov bh,0x6e
  414bda:	adc    al,0xd5
  414bdd:	inc    ebp
  414bde:	add    al,0xe5
  414be0:	mov    bl,0x51
  414be2:	enter  0x8784,0x24
  414be6:	addr16 enter 0x2fe4,0x49
  414beb:	enter  0x6e40,0xc7
  414bef:	cdq    
  414bf0:	ror    esi,0x55
  414bf3:	repz mov esp,esi
  414bf6:	pop    esi
  414bf7:	xchg   edi,eax
  414bf8:	pop    edi
  414bf9:	ret    
  414bfa:	push   cs
  414bfb:	nop
  414bfc:	and    al,0xce
  414bfe:	cdq    
  414bff:	outs   dx,BYTE PTR ds:[esi]
  414c00:	loope  0x414b8e
  414c02:	scas   al,BYTE PTR es:[edi]
  414c03:	xor    dl,BYTE PTR [edi+ecx*1+0xc]
  414c07:	ss fs dec edx
  414c0a:	xchg   BYTE PTR [edx-0x2f],bh
  414c0d:	adc    bl,BYTE PTR [edi+0x3d]
  414c10:	popf   
  414c11:	jnp    0x414c1e
  414c13:	pop    es
  414c14:	repz jo 0x414bf8
  414c17:	lea    ecx,[ebx+0x65]
  414c1a:	inc    esi
  414c1b:	shl    DWORD PTR [esi],0x41
  414c1e:	dec    eax
  414c1f:	(bad)  
  414c21:	sbb    dh,BYTE PTR [esi-0x48]
  414c24:	cmp    al,BYTE PTR [edx+0x2745ee9b]
  414c2a:	div    DWORD PTR [edi+0x7442ee66]
  414c30:	jnp    0x414c91
  414c32:	cmp    esp,edi
  414c34:	push   edi
  414c35:	fild   DWORD PTR [edx-0x78]
  414c38:	and    edi,ebp
  414c3a:	and    al,0xcb
  414c3c:	into   
  414c3d:	dec    edx
  414c3e:	test   DWORD PTR [ebx+0x5ecb2898],ebp
  414c44:	pop    eax
  414c45:	mov    ecx,0x382c4f6e
  414c4a:	inc    ebx
  414c4b:	jge    0x414bf5
  414c4d:	push   ebx
  414c4e:	les    edx,FWORD PTR [eax+0x825641f]
  414c54:	jl     0x414be9
  414c56:	jbe    0x414bf2
  414c58:	into   
  414c59:	mov    ebx,0xaede140b
  414c5e:	mov    eax,0xb18dae1e
  414c63:	dec    ebp
  414c64:	(bad)  
  414c66:	out    0x57,eax
  414c68:	adc    ch,BYTE PTR [edi]
  414c6a:	lahf   
  414c6b:	popa   
  414c6c:	push   es
  414c6d:	sub    DWORD PTR [eax],0x3afec8dc
  414c73:	inc    ebp
  414c74:	outs   dx,BYTE PTR ds:[esi]
  414c75:	scas   al,BYTE PTR es:[edi]
  414c76:	out    dx,al
  414c77:	fnstenv [ebp+0x68]
  414c7a:	add    DWORD PTR [ecx],edx
  414c7c:	and    dl,al
  414c7e:	data16 add al,0xb6
  414c81:	and    BYTE PTR [edi+esi*4-0x4f12f8ee],0x99
  414c89:	jp     0x414c67
  414c8b:	ds push ds
  414c8d:	xchg   ecx,eax
  414c8e:	fsubrp st(6),st
  414c90:	scas   al,BYTE PTR es:[edi]
  414c91:	out    dx,eax
  414c92:	pop    ebp
  414c93:	xor    eax,eax
  414c95:	xor    BYTE PTR [ebp+edi*1+0x74],0xfd
  414c9a:	cmp    esp,DWORD PTR [ebx]
  414c9c:	cmp    DWORD PTR [edx],eax
  414c9e:	je     0x414cf4
  414ca0:	jp     0x414c2a
  414ca2:	(bad)  
  414ca3:	xchg   esi,eax
  414ca4:	jo     0x414cf5
  414ca6:	sub    BYTE PTR [edi+0x54],0x15
  414caa:	out    0x59,eax
  414cac:	mov    dh,0xec
  414cae:	xor    eax,0xb5e72ab5
  414cb3:	or     al,0x26
  414cb5:	mov    ecx,0xe22f973f
  414cba:	inc    ebx
  414cbb:	adc    eax,0xbbe07cf3
  414cc0:	out    dx,al
  414cc1:	xchg   esi,eax
  414cc2:	push   cs
  414cc3:	push   cs
  414cc4:	stc    
  414cc5:	bound  edi,QWORD PTR [ebx+0x26505945]
  414ccb:	fmul   DWORD PTR [ecx-0x63ee70e0]
  414cd1:	sbb    DWORD PTR [ecx+edx*8],0x78f4bfb7
  414cd8:	(bad)  
  414cd9:	push   0xfcfc528e
  414cde:	push   ebp
  414cdf:	test   eax,0x1b97ae24
  414ce4:	out    0x82,eax
  414ce6:	test   DWORD PTR [ebp-0x49eac82c],edi
  414cec:	sahf   
  414ced:	cli    
  414cee:	lahf   
  414cef:	sar    DWORD PTR [esi+eiz*2-0x151eb7c2],0x20
  414cf7:	cmp    eax,0x49837ae1
  414cfc:	(bad)  [edi+0x3a]
  414cff:	fstp   DWORD PTR [eax]
  414d01:	addr16 int 0xd8
  414d04:	(bad)  [esi-0x21a5e06f]
  414d0a:	push   es
  414d0b:	outs   dx,DWORD PTR ds:[esi]
  414d0c:	lahf   
  414d0d:	inc    esi
  414d0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d0f:	into   
  414d10:	fld    DWORD PTR [esp+ecx*1+0x1fe607f1]
  414d17:	(bad)  
  414d19:	jmp    0x414d1a
  414d1b:	iret   
  414d1c:	scas   eax,DWORD PTR es:[edi]
  414d1d:	(bad)  
  414d1e:	and    al,0xaf
  414d20:	xchg   esi,eax
  414d21:	push   edx
  414d22:	mov    ah,0xa9
  414d24:	push   cs
  414d25:	dec    edx
  414d26:	test   BYTE PTR [ebx+ebp*2+0x4a2e3bc4],cl
  414d2d:	xor    BYTE PTR [ebp-0x4a0c2631],ah
  414d33:	and    eax,0xe5b95ee9
  414d38:	and    eax,ebx
  414d3a:	xchg   edx,eax
  414d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d3c:	xor    al,0x26
  414d3e:	jle    0x414cf6
  414d40:	movd   eax,mm6
  414d43:	sub    DWORD PTR [eax],edx
  414d45:	ret    0xfd45
  414d48:	xor    ebx,ebx
  414d4a:	scas   eax,DWORD PTR es:[edi]
  414d4b:	push   ss
  414d4c:	xor    cl,BYTE PTR ds:0xf17b607d
  414d52:	xchg   ebx,eax
  414d53:	xchg   BYTE PTR ds:0x26a8c629,ah
  414d59:	adc    eax,0xb48c2148
  414d5e:	sbb    al,bl
  414d60:	mov    gs,esi
  414d62:	repz pop ebx
  414d64:	push   ecx
  414d65:	mov    dh,0x89
  414d67:	push   edi
  414d68:	mov    dl,0x38
  414d6a:	mov    DWORD PTR [eax-0x11201ce4],eax
  414d70:	jg     0x414db9
  414d72:	mov    bh,0xd0
  414d74:	adc    ah,BYTE PTR [edi+0x30]
  414d77:	mov    eax,0x6583c02b
  414d7c:	sub    eax,0xbd30ad48
  414d81:	scas   eax,DWORD PTR es:[edi]
  414d82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d83:	neg    BYTE PTR [edx+0x480f74bb]
  414d89:	inc    esi
  414d8a:	pop    esi
  414d8b:	test   ch,ah
  414d8d:	jmp    0x6ee74aa7
  414d92:	dec    edi
  414d93:	push   edi
  414d95:	pop    ebx
  414d96:	push   0xffffff98
  414d98:	mov    dl,0xf8
  414d9a:	xchg   ebp,esi
  414d9c:	cwde   
  414d9d:	mul    edi
  414d9f:	rcl    eax,cl
  414da1:	xchg   DWORD PTR [ecx+esi*1+0x43],eax
  414da5:	and    dh,dh
  414da7:	mov    ds:0x302a0fdc,eax
  414dac:	ret    0xda40
  414daf:	neg    DWORD PTR [ebx+0x0]
  414db2:	or     edi,edx
  414db4:	retf   0x177a
  414db7:	jmp    0x4ec80c8b
  414dbc:	sub    eax,0x759e1c4d
  414dc1:	xor    eax,0x63198b69
  414dc6:	call   0x7638e2c4
  414dcb:	jnp    0x414e14
  414dcd:	xchg   ebp,eax
  414dce:	jae    0x414def
  414dd0:	bound  esp,QWORD PTR [eax+edx*1-0x44166c61]
  414dd7:	cwde   
  414dd8:	test   BYTE PTR [edi-0x6af3d18d],dl
  414dde:	mov    ebp,0x59dd3b63
  414de3:	xor    sp,0x7359
  414de8:	xor    al,0x2c
  414dea:	sub    esp,DWORD PTR [esi]
  414dec:	ds clc 
  414dee:	mov    al,0xc4
  414df0:	or     edx,edi
  414df2:	mul    DWORD PTR [esi+0x6d]
  414df5:	pusha  
  414df6:	xor    BYTE PTR [edx-0x3a],dl
  414df9:	and    edi,DWORD PTR [ebx+0x40]
  414dfc:	xor    ecx,DWORD PTR [ebx]
  414dfe:	int3   
  414dff:	mov    edx,0x1d903759
  414e04:	cs cmp esp,esi
  414e07:	jp     0x414e25
  414e09:	div    edi
  414e0b:	pop    esi
  414e0c:	gs adc eax,0xa5fccb89
  414e12:	jecxz  0x414e4c
  414e14:	jmp    0x22cd:0xae51cb7a
  414e1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e1c:	sti    
  414e1d:	push   edi
  414e1e:	cli    
  414e1f:	jbe    0x414dfb
  414e21:	lock inc ebp
  414e23:	dec    edi
  414e24:	jmp    0xb50d60bd
  414e29:	mov    ds:0x7a1beba1,al
  414e2e:	mov    al,BYTE PTR [esi]
  414e30:	jnp    0x414ea4
  414e32:	sahf   
  414e33:	idiv   cl
  414e35:	jp     0x414dd3
  414e37:	push   esp
  414e38:	rcl    esi,1
  414e3a:	(bad)  
  414e3b:	mov    ch,0xf4
  414e3d:	sbb    eax,DWORD PTR [ecx+0x4db777bb]
  414e43:	add    eax,0x961bdcae
  414e48:	mov    esp,eax
  414e4a:	pop    esi
  414e4b:	mov    bl,0xd4
  414e4d:	daa    
  414e4e:	inc    edi
  414e4f:	retf   
  414e50:	clc    
  414e51:	xor    DWORD PTR [edi+0x2f],esi
  414e54:	jb     0x414e21
  414e56:	add    BYTE PTR [ebp+0x1f91bcbb],ah
  414e5c:	jmp    0x414e9c
  414e5e:	test   BYTE PTR [edx-0x3b],ah
  414e61:	lea    edx,[ebp+0x5b]
  414e64:	jl     0x414eca
  414e66:	add    ebx,esi
  414e68:	jo     0x414e5f
  414e6a:	mov    ds:0xb1a1e67b,eax
  414e6f:	pop    ebp
  414e70:	jle    0x414e36
  414e72:	mov    ebx,0xf76b4220
  414e77:	pop    es
  414e78:	stc    
  414e79:	and    BYTE PTR [ebp+0x4c],dh
  414e7c:	out    dx,al
  414e7d:	cmp    DWORD PTR [esi-0x66811f04],eax
  414e83:	retf   
  414e84:	aaa    
  414e85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e86:	daa    
  414e87:	pusha  
  414e88:	xchg   ebp,eax
  414e89:	shl    DWORD PTR [ecx],0xf5
  414e8c:	pop    edx
  414e8d:	out    0x1f,eax
  414e8f:	jecxz  0x414e9d
  414e91:	out    dx,eax
  414e92:	in     al,dx
  414e93:	in     al,0xaa
  414e95:	aad    0x80
  414e97:	aaa    
  414e98:	mov    ebp,0x9ef8272d
  414e9d:	es aas 
  414e9f:	lock jg 0x414eb2
  414ea2:	retf   
  414ea3:	cmp    BYTE PTR ds:0x241eecb0,ch
  414ea9:	push   0xb878e213
  414eae:	add    eax,0x85a57eb0
  414eb3:	or     edi,DWORD PTR [ecx]
  414eb5:	adc    eax,0x1a2b519a
  414eba:	ins    BYTE PTR es:[edi],dx
  414ebb:	or     eax,0x60d0c63b
  414ec0:	pop    ecx
  414ec1:	std    
  414ec2:	sbb    edx,DWORD PTR [eax]
  414ec4:	fdivp  st(5),st
  414ec6:	push   ebp
  414ec7:	or     bh,BYTE PTR [ebx-0x5ab837a8]
  414ecd:	shl    DWORD PTR [edx],0x2b
  414ed0:	dec    ebx
  414ed1:	scas   al,BYTE PTR es:[edi]
  414ed2:	mov    bh,0xa7
  414ed4:	mov    eax,0x4d322264
  414ed9:	ins    DWORD PTR es:[edi],dx
  414eda:	fprem1 
  414edc:	jmp    0x943cb62a
  414ee1:	mov    ebx,DWORD PTR [ebp+0x72]
  414ee4:	pusha  
  414ee5:	dec    edx
  414ee6:	pop    ss
  414ee7:	(bad)  
  414ee8:	in     al,dx
  414ee9:	xchg   ebp,eax
  414eea:	(bad)  [ecx-0x52]
  414eed:	mov    esp,0x85f85d9f
  414ef2:	add    al,0x14
  414ef4:	dec    ebx
  414ef5:	dec    bp
  414ef7:	pop    esi
  414ef8:	xchg   ebp,eax
  414ef9:	retf   
  414efa:	add    al,0xad
  414efc:	adc    esp,DWORD PTR [esi+0x33]
  414eff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f00:	stc    
  414f01:	mov    al,0xb8
  414f03:	push   0xffffffc6
  414f05:	push   cs
  414f06:	push   ebx
  414f07:	das    
  414f08:	jae    0x414f87
  414f0a:	inc    esi
  414f0b:	inc    ebp
  414f0c:	dec    esi
  414f0d:	push   esi
  414f0e:	aas    
  414f0f:	sub    DWORD PTR [ebp+0xc033218],ecx
  414f15:	or     bh,BYTE PTR [esi-0x1b]
  414f18:	mov    eax,DWORD PTR [edi]
  414f1a:	cmp    DWORD PTR [ecx-0x41],eax
  414f1d:	jle    0x414ed0
  414f1f:	loopne 0x414f7c
  414f21:	sahf   
  414f22:	test   eax,0xf84e99d9
  414f27:	push   edi
  414f28:	loopne 0x414f34
  414f2a:	loop   0x414f57
  414f2c:	mov    al,0x9
  414f2e:	and    edi,DWORD PTR [edi+0x7245b5f]
  414f34:	pop    ds
  414f35:	dec    ecx
  414f36:	out    0xc3,al
  414f38:	(bad)  
  414f39:	fidiv  DWORD PTR [ecx+0x1de0fd5b]
  414f3f:	out    0xf0,al
  414f41:	aad    0x72
  414f43:	xchg   ecx,eax
  414f44:	jns    0x414edd
  414f46:	int3   
  414f47:	adc    BYTE PTR [edi+0x35fb1ed3],0xd7
  414f4e:	or     BYTE PTR [esp+esi*4+0x1c4b2b5b],bh
  414f55:	cli    
  414f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f57:	stc    
  414f58:	bound  ebx,QWORD PTR [esp+edx*1-0x393cbeaa]
  414f5f:	dec    esp
  414f60:	outs   dx,BYTE PTR ds:[esi]
  414f61:	loope  0x414f2d
  414f63:	add    esp,DWORD PTR [esi+0x71278cc3]
  414f69:	std    
  414f6a:	or     eax,0x258f4684
  414f6f:	push   esi
  414f70:	aaa    
  414f71:	arpl   WORD PTR [esi+0x2964bc70],bp
  414f77:	out    0xb,eax
  414f79:	mov    esi,0xeb6bdc38
  414f7e:	fwait
  414f7f:	in     eax,0xd0
  414f81:	or     al,0xd7
  414f83:	jae    0x414f18
  414f85:	inc    ecx
  414f86:	inc    edi
  414f87:	jno    0x414f2e
  414f89:	dec    esi
  414f8a:	nop
  414f8b:	arpl   WORD PTR [edi+0x500be3ff],bx
  414f91:	mov    bl,0x9f
  414f93:	push   ss
  414f94:	adc    edx,ebp
  414f96:	enter  0x1b27,0x68
  414f9a:	outs   dx,BYTE PTR ds:[esi]
  414f9b:	pop    ds
  414f9c:	retf   
  414f9d:	ja     0x414f41
  414f9f:	retf   
  414fa0:	and    eax,0x4fb14f2
  414fa5:	push   esp
  414fa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fa7:	and    eax,0xc28ac1ac
  414fac:	lahf   
  414fad:	inc    esi
  414fae:	mov    edi,0xfd884c6f
  414fb3:	loopne 0x414f7d
  414fb5:	dec    ebp
  414fb6:	dec    ecx
  414fb7:	cmp    al,0x72
  414fb9:	pop    esp
  414fba:	icebp  
  414fbb:	xchg   esp,eax
  414fbc:	jge    0x414fd9
  414fbe:	jmp    0x8d66:0xb9eb7fbd
  414fc5:	or     BYTE PTR [eax-0x776a2629],bl
  414fcb:	clc    
  414fcc:	jno    0x414f6b
  414fce:	cmp    ecx,esi
  414fd0:	xchg   esp,eax
  414fd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fd2:	push   ss
  414fd3:	inc    esp
  414fd4:	ror    al,1
  414fd6:	jl     0x414f7d
  414fd8:	(bad)  
  414fd9:	push   0x1a
  414fdb:	loope  0x415040
  414fdd:	mov    al,0x95
  414fdf:	xchg   ebx,eax
  414fe0:	loop   0x415016
  414fe2:	(bad)  
  414fe3:	xchg   ecx,eax
  414fe4:	xor    al,0x64
  414fe6:	outs   dx,DWORD PTR ds:[esi]
  414fe7:	outs   dx,DWORD PTR ds:[esi]
  414fe8:	xchg   BYTE PTR [eax+eiz*8],dl
  414feb:	imul   ecx,DWORD PTR [esi+ebx*8],0x17
  414fef:	das    
  414ff0:	popa   
  414ff1:	push   eax
  414ff2:	outs   dx,DWORD PTR ds:[esi]
  414ff3:	ja     0x414f9c
  414ff5:	(bad)  
  414ff6:	repnz xor eax,0xab33d42d
  414ffc:	xchg   DWORD PTR [esp+edx*4+0x41],edx
  415000:	and    al,0x22
  415002:	cmp    BYTE PTR [ecx-0x46f964d5],cl
  415008:	call   0xbc2ee743
  41500d:	dec    edi
  41500e:	push   eax
  41500f:	mov    cl,0xfa
  415011:	pop    esi
  415012:	jmp    0x6368:0x5fddf69e
  415019:	(bad)  
  41501a:	aam    0x27
  41501c:	mov    dh,0x9b
  41501e:	mov    bh,0xf2
  415020:	cld    
  415021:	push   ebp
  415022:	sub    BYTE PTR [esi],0x5f
  415025:	sbb    DWORD PTR [esi-0x69],edx
  415028:	int3   
  415029:	hlt    
  41502a:	jecxz  0x414fd5
  41502c:	xchg   ebp,eax
  41502d:	mov    ebp,0x813dbc16
  415032:	xchg   DWORD PTR ds:0x526278ad,edi
  415038:	test   eax,0x3e60e308
  41503d:	popa   
  41503e:	out    0xab,al
  415040:	mul    DWORD PTR [ebx+edi*8]
  415043:	pop    ecx
  415044:	pushf  
  415045:	xor    ah,ch
  415047:	inc    ebp
  415048:	cwde   
  415049:	jno    0x4150a6
  41504b:	test   eax,0x95c1b551
  415050:	mov    cl,0x7f
  415052:	inc    ebx
  415053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415054:	lods   al,BYTE PTR ds:[esi]
  415055:	mov    cl,0x9b
  415057:	mov    ecx,0x77587793
  41505c:	loope  0x4150c6
  41505e:	adc    bl,BYTE PTR [ebx]
  415060:	out    dx,eax
  415061:	retf   
  415062:	les    eax,FWORD PTR [ebx+ebp*4]
  415065:	ss loop 0x415045
  415068:	pop    es
  415069:	mov    ebx,0x4cbe9884
  41506e:	mov    esi,0x8e4d5c0
  415073:	and    BYTE PTR [ebp-0x229f083c],ch
  415079:	(bad)  
  41507a:	mov    ds:0x7b009d3,eax
  41507f:	fidiv  WORD PTR [ebx+0x441239c2]
  415085:	sbb    eax,0xc7a02f7c
  41508a:	ret    0xaf4f
  41508d:	and    eax,0xd4c272c8
  415092:	mov    esp,0xee59b5c5
  415097:	ins    BYTE PTR es:[edi],dx
  415098:	mov    ecx,0x536e0223
  41509d:	ret    0x50c5
  4150a0:	rol    DWORD PTR [eax],cl
  4150a2:	or     al,0x6f
  4150a4:	inc    esi
  4150a5:	fmul   st,st(0)
  4150a7:	mov    ah,0x3b
  4150a9:	mov    ah,0x85
  4150ab:	jmp    0x415047
  4150ad:	inc    ebp
  4150ae:	jge    0x4150b1
  4150b0:	and    edi,eax
  4150b2:	sub    BYTE PTR [edi+ecx*8+0x389c192e],dh
  4150b9:	mov    bh,0x42
  4150bb:	sub    ebx,esp
  4150bd:	popf   
  4150be:	dec    edx
  4150bf:	sub    BYTE PTR [ecx-0x1e],dh
  4150c2:	cmc    
  4150c3:	xor    eax,0x6f5d4529
  4150c8:	out    dx,eax
  4150c9:	test   DWORD PTR [ebx+0x58],eax
  4150cc:	mov    eax,ds:0x7c8cb87b
  4150d1:	ja     0x4150c5
  4150d3:	loope  0x41506e
  4150d5:	mov    edx,0xddffd24c
  4150da:	call   DWORD PTR [esi-0x15e2d06c]
  4150e0:	mov    ch,BYTE PTR [esi*2-0x40d4c7b]
  4150e7:	cmp    cl,cl
  4150e9:	xor    DWORD PTR [edx+0x68],ebp
  4150ec:	loope  0x4150ba
  4150ee:	and    BYTE PTR [ebp-0x218ab87e],al
  4150f4:	jmp    0x1168de85
  4150f9:	dec    ebx
  4150fa:	pop    ecx
  4150fb:	stos   DWORD PTR es:[edi],eax
  4150fc:	mov    al,0x5
  4150fe:	mov    al,0x16
  415100:	xor    dh,BYTE PTR [eax]
  415102:	mov    ecx,0xa9f5269e
  415107:	pusha  
  415108:	pop    ss
  415109:	sbb    edi,DWORD PTR [ecx]
  41510b:	lea    ebx,[edi]
  41510d:	push   ebx
  41510e:	pop    ds
  41510f:	out    0x5d,al
  415111:	sahf   
  415112:	xchg   DWORD PTR [esi-0x6f92cc79],eax
  415118:	aam    0x15
  41511a:	stos   DWORD PTR es:[edi],eax
  41511b:	test   DWORD PTR [edx+edx*1-0x71317a18],edi
  415122:	cld    
  415123:	es pop ebx
  415125:	or     DWORD PTR [ebp-0x1d94757c],ebp
  41512b:	loopne 0x41516c
  41512d:	jne    0x4150da
  41512f:	cdq    
  415130:	sub    BYTE PTR [ecx+edx*1+0x51bc738c],dl
  415137:	addr16 aam 0x2c
  41513a:	outs   dx,DWORD PTR ds:[esi]
  41513b:	dec    ebx
  41513c:	jb     0x415142
  41513e:	adc    al,0xea
  415140:	aaa    
  415141:	call   0xddf64b77
  415146:	mov    esi,0x17b881c3
  41514b:	push   esp
  41514c:	ror    DWORD PTR [ebp+0x7e0aa624],cl
  415152:	dec    eax
  415153:	ror    BYTE PTR [ebp+0x2d],cl
  415156:	clc    
  415157:	out    dx,al
  415158:	es ds push 0xfffffffe
  41515c:	xor    al,0x30
  41515e:	mov    bh,0xc8
  415160:	scas   al,BYTE PTR es:[edi]
  415161:	fsub   DWORD PTR [esi]
  415163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415164:	xchg   ecx,eax
  415165:	inc    esp
  415166:	lds    eax,FWORD PTR [edi]
  415168:	(bad)  
  415169:	das    
  41516a:	bound  edi,QWORD PTR [eax+eax*8+0x2a73f4e9]
  415171:	(bad)  
  415172:	cmp    BYTE PTR [ebx],bl
  415174:	pop    ecx
  415175:	dec    edx
  415176:	mov    DWORD PTR [edi-0x30],edi
  415179:	ret    
  41517a:	lea    ebp,[ecx+eax*1-0x479c325c]
  415181:	retf   0x714a
  415184:	jecxz  0x4151b3
  415186:	jno    0x4151bc
  415188:	sub    eax,0xd2a4250e
  41518d:	imul   esi,DWORD PTR [ebx+0x12],0xffffff86
  415191:	fnstenv ds:0x2f7da3d3
  415197:	mov    cl,al
  415199:	mov    ah,0x40
  41519b:	push   cs
  41519c:	xchg   BYTE PTR [edi],bl
  41519e:	xchg   edx,eax
  41519f:	icebp  
  4151a0:	xor    al,0x5c
  4151a2:	jmp    0x68a5:0x7bfe458d
  4151a9:	aas    
  4151aa:	cmp    esi,ebp
  4151ac:	cli    
  4151ad:	inc    esi
  4151ae:	or     BYTE PTR [edi+0x54f5f16d],dh
  4151b4:	outs   dx,DWORD PTR ds:[esi]
  4151b5:	test   BYTE PTR [ebx+0x32],ch
  4151b8:	inc    BYTE PTR [ecx+0x5d]
  4151bb:	test   eax,0x8ef78eee
  4151c0:	mov    al,0x7c
  4151c2:	leave  
  4151c3:	dec    edx
  4151c4:	mov    ch,0x4
  4151c6:	mov    ebx,0xe7223062
  4151cb:	rcr    DWORD PTR [edx],1
  4151cd:	xchg   edx,eax
  4151ce:	sti    
  4151cf:	push   ebp
  4151d0:	pusha  
  4151d1:	in     eax,dx
  4151d2:	icebp  
  4151d3:	inc    esp
  4151d4:	out    dx,al
  4151d5:	inc    eax
  4151d6:	nop    DWORD PTR [edi+0x36]
  4151da:	inc    ebx
  4151db:	mov    ecx,0x838d79c7
  4151e0:	jbe    0x4151ae
  4151e2:	xor    ecx,DWORD PTR [ebp+edx*8-0x3f7c65d3]
  4151e9:	(bad)  
  4151ea:	fdiv   DWORD PTR [ebp+edx*8+0x1c]
  4151ee:	or     DWORD PTR [bx-0x50],edi
  4151f2:	sub    al,0xc7
  4151f4:	dec    edx
  4151f5:	dec    ecx
  4151f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151f7:	mov    bh,0x7a
  4151f9:	jp     0x4151ab
  4151fb:	sub    bh,dh
  4151fd:	mov    esp,0x19933a57
  415202:	xlat   BYTE PTR ds:[ebx]
  415203:	shr    DWORD PTR [edi],cl
  415205:	fisub  DWORD PTR [edx-0x14]
  415208:	ja     0x41521f
  41520a:	xor    al,0x9e
  41520c:	into   
  41520d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41520e:	xchg   ebp,eax
  41520f:	jo     0x415244
  415211:	imul   ebp,DWORD PTR [edi],0x60
  415214:	xor    eax,0xfc29b228
  415219:	pop    esi
  41521a:	xor    al,0xf5
  41521c:	fmul   QWORD PTR [ecx+edi*2-0x20599435]
  415223:	dec    ebp
  415224:	mov    ebp,0x76e54402
  415229:	leave  
  41522a:	ins    BYTE PTR es:[edi],dx
  41522b:	popf   
  41522c:	push   ds
  41522d:	pop    ebx
  41522e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41522f:	in     eax,dx
  415230:	add    cl,BYTE PTR [eax]
  415232:	jmp    0x878c8350
  415237:	dec    esi
  415238:	pop    ds
  415239:	inc    esi
  41523a:	jo     0x41525c
  41523c:	loopne 0x41520d
  41523e:	test   DWORD PTR [eax-0x70496797],ebx
  415244:	jg     0x415202
  415246:	cs xchg ebp,eax
  415248:	ficomp DWORD PTR [edx+0x7d93f10f]
  41524e:	in     eax,0xbb
  415250:	test   eax,0xa5026107
  415255:	jp     0x415296
  415257:	cli    
  415258:	sar    DWORD PTR [edx-0x6c3300ee],1
  41525e:	add    al,0xe3
  415260:	mov    esp,0xb7dde825
  415265:	arpl   WORD PTR [ebx-0x24adc9e],cx
  41526b:	push   eax
  41526c:	lds    edi,FWORD PTR [edi+0x56]
  41526f:	xchg   edi,eax
  415270:	mov    ebx,0xfcadb733
  415275:	(bad)  
  415276:	call   0xdb36:0x89872a0b
  41527d:	(bad)  
  41527e:	and    al,0x66
  415280:	xchg   ebx,eax
  415281:	fcmovnbe st,st(1)
  415283:	sub    cl,ah
  415285:	es inc eax
  415287:	js     0x41524c
  415289:	fisttp DWORD PTR [ebx]
  41528b:	loop   0x415229
  41528d:	sub    DWORD PTR [edx+0x4aa0fb07],esi
  415293:	shl    ecx,1
  415295:	jecxz  0x4152e0
  415297:	or     esp,DWORD PTR [edi]
  415299:	cmp    esi,0xffffff85
  41529c:	dec    ecx
  41529d:	dec    ebx
  41529e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41529f:	or     ecx,DWORD PTR [edi]
  4152a1:	fst    QWORD PTR [edi+0x3729bebf]
  4152a7:	push   cs
  4152a8:	mov    ah,0x5b
  4152aa:	loopne 0x415309
  4152ac:	fwait
  4152ad:	test   eax,0xee70fd65
  4152b2:	mov    edx,0xeae01b0a
  4152b7:	xor    dl,cl
  4152b9:	lock mov dh,0xee
  4152bd:	(bad)  
  4152be:	mov    ebx,0x6f10d408
  4152c3:	mov    ds,WORD PTR [esi+eiz*8+0x7d]
  4152c7:	pop    ecx
  4152c8:	inc    esp
  4152c9:	cli    
  4152ca:	test   DWORD PTR [edx+0x791387e9],esi
  4152d0:	repz pop esi
  4152d2:	jg     0x41529c
  4152d4:	into   
  4152d5:	mov    bh,0xe2
  4152d7:	repnz test eax,0x9f1a9ff
  4152dd:	addr16 (bad) 
  4152df:	in     al,dx
  4152e0:	mov    bl,0x93
  4152e2:	es imul bp,bx,0x1395
  4152e8:	jge    0x4152f7
  4152ea:	addr16 mov ds:0x6345,eax
  4152ee:	jnp    0x4152bf
  4152f0:	push   ss
  4152f1:	adc    eax,DWORD PTR fs:[ebx-0x51]
  4152f5:	cs mov eax,ecx
  4152f8:	fs xchg ebx,eax
  4152fa:	out    dx,eax
  4152fb:	sbb    bh,BYTE PTR [esi]
  4152fd:	jb     0x4152fb
  4152ff:	mov    ah,0x5a
  415301:	and    edx,DWORD PTR [ebp-0xe683462]
  415307:	je     0x41531d
  415309:	mov    ebx,0xb8bee2cd
  41530e:	repnz xchg ebx,eax
  415310:	bound  ebx,QWORD PTR [ebx-0x58]
  415313:	ror    DWORD PTR [edx],0xa7
  415316:	and    BYTE PTR [esp+eax*2+0x38],dh
  41531a:	pop    es
  41531b:	cmp    eax,0x91c79f9e
  415320:	mov    ds:0x6489fe2c,al
  415325:	cmc    
  415326:	jns    0x4152f1
  415328:	cld    
  415329:	sbb    al,0xb9
  41532b:	adc    BYTE PTR [ebp-0x28],dh
  41532e:	clc    
  41532f:	shl    BYTE PTR [eax-0x5df7ad34],0x4e
  415336:	adc    al,0x31
  415338:	add    dh,BYTE PTR [esi+esi*2-0x5b]
  41533c:	int3   
  41533d:	sbb    eax,DWORD PTR [ebp-0x1]
  415340:	pusha  
  415341:	push   ds
  415342:	mov    dh,0x78
  415344:	mov    esi,0x6711f3e
  415349:	and    DWORD PTR [edi-0x26a6b46c],ecx
  41534f:	and    DWORD PTR [esi],ecx
  415351:	cli    
  415352:	out    0x76,eax
  415354:	or     edi,DWORD PTR ds:0xac0f6290
  41535a:	xor    ebp,DWORD PTR [ecx-0x1]
  41535d:	mov    eax,0x527ef276
  415362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415363:	out    0xcd,al
  415365:	or     BYTE PTR [edi+0x39eed783],al
  41536b:	mov    esi,0xc0e400c2
  415370:	rcr    DWORD PTR [ebp-0x1ee599a0],1
  415376:	pop    ebx
  415377:	sbb    al,0x2d
  415379:	fbld   TBYTE PTR [edi+ecx*1+0x529daadb]
  415380:	add    al,0xd5
  415382:	in     eax,0x26
  415384:	ret    0xe6b0
  415387:	add    DWORD PTR [eax+0x2e5fbe31],edi
  41538d:	jae    0x41537b
  41538f:	or     bl,bl
  415391:	xchg   BYTE PTR [edi],dh
  415393:	inc    edi
  415394:	mov    ebx,0x19bfdd01
  415399:	bsr    ebx,DWORD PTR [edi+eiz*2-0x3f]
  41539e:	out    0xf6,eax
  4153a0:	jno    0x4153c7
  4153a2:	cmp    BYTE PTR [edi-0x2be39668],bh
  4153a8:	inc    ebp
  4153a9:	mov    bl,0x98
  4153ab:	imul   esp,DWORD PTR [ebx-0x7a],0x6
  4153af:	sbb    DWORD PTR ds:0x21893148,esi
  4153b5:	pop    esi
  4153b6:	es push ebx
  4153b8:	adc    ah,al
  4153ba:	leave  
  4153bb:	outs   dx,BYTE PTR ds:[esi]
  4153bc:	xchg   ebx,eax
  4153bd:	stos   BYTE PTR es:[edi],al
  4153be:	mov    esp,0xa2541710
  4153c3:	mov    edi,0x2ff9bf1c
  4153c8:	lock jg 0x41537f
  4153cb:	push   edx
  4153cc:	push   edx
  4153cd:	jmp    0xb6601203
  4153d2:	fcom   QWORD PTR [ebx-0x31bd7bfc]
  4153d8:	mov    ecx,0x19c31b10
  4153dd:	jp     0x4153dd
  4153df:	mov    ds:0x44fa51cf,eax
  4153e4:	jge    0x41536a
  4153e6:	mov    edi,0x823b8fe9
  4153eb:	iret   
  4153ec:	push   esi
  4153ed:	das    
  4153ee:	xchg   ebx,eax
  4153ef:	push   ds
  4153f0:	sub    DWORD PTR [ecx-0x57b0570f],esi
  4153f6:	aaa    
  4153f7:	ret    
  4153f8:	(bad)  
  4153f9:	mov    WORD PTR [ecx],ds
  4153fb:	lahf   
  4153fc:	mov    al,ds:0xa2cd5944
  415401:	mov    ch,0xbe
  415403:	outs   dx,DWORD PTR ds:[esi]
  415404:	push   ebx
  415405:	imul   DWORD PTR [edi]
  415407:	stos   BYTE PTR es:[edi],al
  415408:	mov    ecx,0xd32e6adb
  41540d:	xor    al,BYTE PTR [esi+0x6d]
  415410:	in     al,dx
  415411:	hlt    
  415412:	mov    WORD PTR [ebx],fs
  415414:	jb     0x41547d
  415416:	pop    edi
  415417:	cmp    ebx,edi
  415419:	int    0x1a
  41541b:	inc    ebp
  41541c:	cdq    
  41541d:	xchg   edx,eax
  41541f:	pushf  
  415420:	leave  
  415421:	push   cs
  415422:	dec    DWORD PTR [eax]
  415424:	int    0xce
  415426:	lods   al,BYTE PTR ds:[esi]
  415427:	scas   eax,DWORD PTR es:[edi]
  415428:	adc    al,0xc3
  41542a:	jne    0x4153ef
  41542c:	cwde   
  41542d:	aam    0x6
  41542f:	fcomp  QWORD PTR [edi+0x11]
  415432:	push   ecx
  415433:	dec    ebx
  415434:	fwait
  415435:	(bad)  
  415436:	in     al,dx
  415437:	(bad)  
  415438:	xor    eax,0xace67d8f
  41543d:	adc    bh,al
  41543f:	jg     0x4153fe
  415441:	ins    BYTE PTR es:[edi],dx
  415442:	je     0x415472
  415444:	mov    ds:0x338a367b,eax
  415449:	pop    es
  41544a:	or     BYTE PTR [eax+0x39],al
  41544d:	fsubr  QWORD PTR [eax-0x3635aa93]
  415453:	or     eax,0xbdb98e3a
  415458:	push   ecx
  415459:	test   BYTE PTR [edx+0x20],dl
  41545c:	call   0x25b839a3
  415461:	xor    ch,BYTE PTR [esi]
  415463:	cmp    eax,0x89e09062
  415468:	nop
  415469:	pop    ds
  41546a:	sub    ebx,DWORD PTR [ebx+eiz*1]
  41546d:	sub    eax,0x9e32086b
  415472:	mov    ah,0xc6
  415474:	pop    ds
  415475:	xor    BYTE PTR [ebx+0x3e],ah
  415478:	cld    
  415479:	mov    cl,0xfb
  41547b:	das    
  41547c:	mov    ecx,0x5fb2d96b
  415481:	clc    
  415482:	push   ds
  415483:	jno    0x4154db
  415485:	test   BYTE PTR [ecx],dh
  415487:	push   cs
  415488:	gs jge 0x4154d1
  41548b:	mov    al,0x15
  41548d:	mov    esp,0xadbba2c8
  415492:	sub    BYTE PTR [edx],ah
  415494:	cli    
  415495:	jae    0x415475
  415497:	imul   ebx,DWORD PTR [ebp-0x7d],0x974f0b25
  41549e:	aam    0xec
  4154a0:	sub    BYTE PTR [esi+0x5f],dl
  4154a3:	dec    edi
  4154a4:	nop
  4154a5:	fadd   st(7),st
  4154a7:	jl     0x41543f
  4154a9:	jle    0x41545e
  4154ab:	jae    0x41550b
  4154ad:	fdiv   DWORD PTR [eax-0x41]
  4154b0:	mov    esi,0xf795e58e
  4154b5:	outs   dx,BYTE PTR ds:[esi]
  4154b6:	inc    esp
  4154b7:	das    
  4154b8:	xor    BYTE PTR [esp+ebp*1+0x4b],bh
  4154bc:	daa    
  4154bd:	fadd   st,st(4)
  4154bf:	pop    esi
  4154c0:	aaa    
  4154c1:	dec    edi
  4154c2:	pushf  
  4154c3:	cmp    cl,ch
  4154c5:	add    ebp,0xaaa03cdd
  4154cb:	cli    
  4154cc:	adc    ch,BYTE PTR [eax-0x63]
  4154cf:	icebp  
  4154d0:	shl    BYTE PTR [esi],1
  4154d2:	adc    ebx,DWORD PTR ds:0x30b50e3b
  4154d8:	in     eax,0x47
  4154da:	(bad)  
  4154db:	imul   esi,DWORD PTR [esi+0x4e215bd1],0x6ac0d44b
  4154e5:	int    0x9a
  4154e7:	xor    ecx,DWORD PTR [edx-0x26]
  4154ea:	sub    ah,dl
  4154ec:	xor    bl,BYTE PTR [eax+eax*8+0x6d7e7fa2]
  4154f3:	outs   dx,DWORD PTR ds:[esi]
  4154f4:	bound  esi,QWORD PTR [ecx+0x1a]
  4154f7:	xor    esi,esi
  4154f9:	xchg   esi,eax
  4154fa:	(bad)  
  4154fb:	lahf   
  4154fc:	jne    0x4154e1
  4154fe:	mov    dh,BYTE PTR [edx+0x61]
  415501:	sbb    esi,DWORD PTR [eax-0x57]
  415504:	and    ah,BYTE PTR [ebx+0x11]
  415507:	pop    es
  415508:	mov    al,ds:0xac92bfbe
  41550d:	add    ah,bl
  41550f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415510:	lahf   
  415511:	xchg   edx,eax
  415512:	inc    ebx
  415513:	lock test al,0xc0
  415516:	outs   dx,BYTE PTR ds:[esi]
  415517:	sar    BYTE PTR [esi+0x17],cl
  41551a:	ret    0xc8f8
  41551d:	xchg   ecx,eax
  41551e:	adc    bp,WORD PTR [edx-0x4e]
  415522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415523:	jbe    0x41550c
  415525:	or     BYTE PTR [eax+0x3e],ch
  415528:	ja     0x4154f2
  41552a:	and    cl,ah
  41552c:	cmp    dl,cl
  41552e:	pop    edi
  41552f:	and    BYTE PTR ds:0xd2659ac3,ah
  415535:	push   esp
  415536:	pop    edi
  415537:	push   ds
  415538:	xchg   DWORD PTR [esp+edi*8-0x2a],esi
  41553c:	cwde   
  41553d:	cmp    ebx,DWORD PTR [ecx+0x2a3fd3e5]
  415543:	bound  ebx,QWORD PTR [esi]
  415545:	jmp    0xd4d3:0xca72f430
  41554c:	sti    
  41554d:	xor    edi,ebx
  41554f:	cmp    ah,BYTE PTR [ecx+0xb]
  415552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415553:	jbe    0x41557f
  415555:	std    
  415556:	sub    al,ch
  415558:	mov    ebx,0x8802ab49
  41555d:	sub    DWORD PTR [ebp-0x198b4f9d],edi
  415563:	xchg   ebx,eax
  415564:	popf   
  415565:	or     al,0xf7
  415567:	es cmp ax,0xb55d
  41556c:	div    dh
  41556e:	or     eax,0xd6b9fa51
  415573:	mov    dl,0x21
  415575:	xor    DWORD PTR [edx-0x5f11338c],ebp
  41557b:	test   BYTE PTR [ebx+0x2818bd55],al
  415581:	test   al,0xab
  415583:	clc    
  415584:	pop    edx
  415585:	pop    ss
  415586:	sub    al,0xf7
  415588:	out    0x1a,eax
  41558a:	inc    edx
  41558b:	sbb    eax,esp
  41558d:	cmp    ecx,ecx
  41558f:	or     dl,BYTE PTR [esi+edx*2]
  415592:	jne    0x4155f5
  415594:	ror    BYTE PTR [eax+0x10ca7177],cl
  41559a:	mov    al,ds:0xe73e576a
  41559f:	xchg   ebp,eax
  4155a0:	or     ebp,ebp
  4155a2:	cmc    
  4155a3:	mov    BYTE PTR [edx+0x57],al
  4155a6:	xchg   ebp,eax
  4155a7:	test   BYTE PTR [eax+0x28],bl
  4155aa:	fwait
  4155ab:	sbb    DWORD PTR [edx+0x29fcc679],ebx
  4155b1:	fld    TBYTE PTR [ebx+esi*1]
  4155b4:	shr    BYTE PTR [edx],1
  4155b6:	dec    eax
  4155b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155b8:	push   0x77
  4155ba:	je     0x415594
  4155bc:	out    dx,al
  4155bd:	mov    edx,0xfaecbd
  4155c2:	xchg   esp,eax
  4155c3:	fadd   QWORD PTR [esi-0x5a]
  4155c6:	cwde   
  4155c7:	adc    al,0xa0
  4155c9:	cmp    al,0xdc
  4155cb:	mov    ecx,0xc4e4710
  4155d0:	and    bh,BYTE PTR ds:0x76eff24
  4155d6:	pusha  
  4155d7:	neg    ecx
  4155d9:	jo     0x4155ae
  4155db:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4155dd:	xchg   esi,eax
  4155de:	jl     0x415653
  4155e0:	xchg   esi,eax
  4155e1:	shl    BYTE PTR [eax+ebp*8-0x7911bbe7],1
  4155e8:	mov    eax,0x84bf61ca
  4155ed:	sbb    DWORD PTR [ecx-0x58],ebx
  4155f0:	mov    dh,0xba
  4155f2:	addr16 inc ebx
  4155f4:	xchg   ecx,eax
  4155f5:	sbb    ebx,DWORD PTR ds:0xabc22af
  4155fb:	rcr    BYTE PTR [ecx],0x58
  4155fe:	call   0xf001:0x93c71989
  415605:	dec    ebp
  415606:	lds    esi,FWORD PTR [ebx-0x2]
  415609:	int3   
  41560a:	std    
  41560b:	cs jg  0x4155fa
  41560e:	into   
  41560f:	dec    esi
  415610:	fidivr WORD PTR [edx+ebx*2+0x124debf9]
  415617:	pop    ss
  415618:	adc    edi,DWORD PTR [eax+0x14c3528e]
  41561e:	std    
  41561f:	sub    eax,0xa6c6e7ab
  415624:	jmp    0x3eb4:0x318d8ec3
  41562b:	mov    edi,0x54298a30
  415630:	push   0x5842b4f3
  415635:	jbe    0x4155cd
  415637:	add    ebx,edx
  415639:	or     eax,0x20f91f1c
  41563e:	mov    bh,0x6e
  415640:	test   BYTE PTR [esi],bl
  415642:	sbb    edx,DWORD PTR [edx+0x44]
  415645:	jmp    0x8726e08a
  41564a:	int3   
  41564b:	xchg   ebp,eax
  41564c:	xor    DWORD PTR [eax+0x4e],0x78585e84
  415653:	xchg   ebx,eax
  415654:	ins    DWORD PTR es:[edi],dx
  415655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415656:	js     0x41564a
  415658:	sub    al,0x4a
  41565a:	retf   
  41565b:	mov    WORD PTR [ecx+0x25],ds
  41565e:	repnz xchg ebx,eax
  415660:	mov    edi,0x3176bfad
  415665:	aad    0x2a
  415667:	mov    bh,BYTE PTR [esp+eiz*8-0x5]
  41566b:	sub    ecx,ebp
  41566d:	js     0x41562f
  41566f:	inc    ebp
  415670:	das    
  415671:	cmp    edx,DWORD PTR [ebp-0x4538b461]
  415677:	rcr    BYTE PTR [edi],0xe
  41567a:	or     eax,0x7b372f97
  41567f:	jmp    0x415654
  415681:	shr    BYTE PTR [ecx+0x3efe2458],0xe1
  415688:	stos   BYTE PTR es:[edi],al
  415689:	sbb    al,0xe4
  41568b:	dec    ebx
  41568c:	and    cl,BYTE PTR [esi+esi*8]
  41568f:	or     DWORD PTR [edx-0x661e9428],edx
  415695:	pop    edx
  415696:	pop    ecx
  415697:	fisttp DWORD PTR [eax+0x6c51daae]
  41569d:	sbb    eax,0xbb95e8aa
  4156a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156a3:	inc    eax
  4156a4:	pop    esp
  4156a5:	xchg   esp,eax
  4156a6:	repz sub DWORD PTR [esi],esp
  4156a9:	(bad)  
  4156aa:	cmp    BYTE PTR [ebp+0x72],ah
  4156ad:	fld    TBYTE PTR [edx+0x5c19b5aa]
  4156b3:	imul   edx,eax,0xfffffffc
  4156b6:	outs   dx,BYTE PTR ds:[esi]
  4156b7:	stos   DWORD PTR es:[edi],eax
  4156b8:	pop    ss
  4156b9:	mov    ch,0xfe
  4156bb:	fisubr WORD PTR [eax+edi*4]
  4156be:	out    dx,eax
  4156bf:	jb     0x4156c5
  4156c1:	add    al,0xb7
  4156c3:	push   cs
  4156c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156c5:	or     BYTE PTR [ecx-0x22],bh
  4156c8:	shr    DWORD PTR [ecx+0x819620c],0x2c
  4156cf:	push   edi
  4156d0:	sub    edx,ebp
  4156d2:	jge    0x41574a
  4156d4:	add    bl,BYTE PTR [ebp+ebx*2-0x7a78c078]
  4156db:	es fs ins DWORD PTR es:[edi],dx
  4156de:	push   ebx
  4156df:	cmp    bh,BYTE PTR es:[ecx+0x238ca5e5]
  4156e6:	test   al,0xc
  4156e8:	sbb    BYTE PTR [edx-0x5b],0x76
  4156ec:	dec    edi
  4156ed:	shl    BYTE PTR [esi+0x48b97b8b],1
  4156f3:	popf   
  4156f4:	sub    ebx,edx
  4156f6:	cmp    ebp,esi
  4156f8:	enter  0x6713,0xa0
  4156fc:	add    bh,BYTE PTR [ecx-0x75853d99]
  415702:	sub    eax,0x48d2d831
  415707:	mov    eax,0x75deafb7
  41570c:	jne    0x4156a8
  41570e:	iret   
  41570f:	pusha  
  415710:	pushf  
  415711:	inc    edx
  415712:	stos   BYTE PTR es:[edi],al
  415713:	(bad)  
  415714:	fcom   DWORD PTR [eax+0x6e]
  415717:	mov    esi,0xcfccb8a1
  41571c:	ds add eax,0x69aa179d
  415722:	ds push ebx
  415724:	sub    al,0x5e
  415726:	out    0x40,al
  415728:	dec    eax
  415729:	dec    edi
  41572a:	dec    ebx
  41572b:	lock dec esp
  41572d:	ror    DWORD PTR [edi+0x2f653382],1
  415733:	js     0x415715
  415735:	pop    ebp
  415736:	mov    ah,BYTE PTR [edi-0x70]
  415739:	out    dx,al
  41573a:	inc    edx
  41573b:	mov    bl,BYTE PTR [ebp-0x5fdb158]
  415741:	sbb    bl,al
  415743:	test   BYTE PTR [edx+0x4be37916],ah
  415749:	mov    ebp,0x17f9c460
  41574e:	add    ch,BYTE PTR [ecx-0x45]
  415751:	aad    0x66
  415753:	jno    0x4156f2
  415755:	int    0x94
  415757:	inc    edi
  415758:	and    BYTE PTR [ebp+ecx*8-0x34],0xb6
  41575d:	cmp    esp,DWORD PTR [eax]
  41575f:	in     eax,dx
  415760:	xor    eax,0xad0c5b9c
  415765:	enter  0x33bd,0xb5
  415769:	mov    ah,0xd9
  41576b:	xlat   BYTE PTR ds:[ebx]
  41576c:	sub    eax,DWORD PTR [eax-0x1eb98bab]
  415772:	mov    dl,0x33
  415774:	in     al,dx
  415775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415776:	mov    esp,0xe18df92c
  41577b:	jmp    0x837b:0xe40a2839
  415782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415783:	jmp    0x8214147c
  415788:	pop    edi
  415789:	push   edx
  41578a:	add    eax,0xa45e9da
  41578f:	dec    esi
  415790:	mov    edx,0xb4ba04ff
  415795:	dec    edx
  415796:	es mov ebx,0x3832f74
  41579c:	mov    ah,0x72
  41579e:	lods   eax,DWORD PTR ds:[esi]
  41579f:	stos   DWORD PTR es:[edi],eax
  4157a0:	cwde   
  4157a1:	mov    dh,0x38
  4157a3:	adc    DWORD PTR [edx+eiz*8],esi
  4157a6:	mov    bh,0x82
  4157a8:	scas   al,BYTE PTR es:[edi]
  4157a9:	add    eax,0x1c9fc60f
  4157ae:	retf   
  4157af:	or     eax,0x880795c2
  4157b4:	push   es
  4157b5:	push   ds
  4157b6:	adc    DWORD PTR [ecx+0x6e],edx
  4157b9:	iret   
  4157ba:	sub    DWORD PTR [edx-0x1229ba6a],esp
  4157c0:	sahf   
  4157c1:	das    
  4157c2:	js     0x415789
  4157c4:	pushf  
  4157c5:	dec    ebx
  4157c6:	clc    
  4157c7:	mov    BYTE PTR [esi],al
  4157c9:	loope  0x415751
  4157cb:	test   eax,0xedd6076c
  4157d0:	pop    ds
  4157d1:	(bad)  [ebp-0x24fd38d2]
  4157d7:	ret    
  4157d8:	xchg   esp,eax
  4157d9:	retf   
  4157da:	pop    edx
  4157db:	xor    WORD PTR [eax+0x175589d2],bx
  4157e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157e3:	test   BYTE PTR [edi+0x58fe60c3],al
  4157e9:	jae    0x41577d
  4157eb:	fadd   st(2),st
  4157ed:	mov    ecx,0x4706b29c
  4157f2:	jne    0x41580c
  4157f4:	fdiv   QWORD PTR [eax-0x3]
  4157f7:	imul   esi,DWORD PTR [esi],0x22
  4157fa:	jle    0x4157eb
  4157fc:	imul   ebp,DWORD PTR [ecx+0x6bbefc4e],0x6d7cf941
  415806:	iret   
  415807:	push   0xffffff87
  415809:	dec    esp
  41580a:	std    
  41580b:	push   cs
  41580c:	mov    cl,0x37
  41580e:	(bad)  
  41580f:	repz dec esi
  415811:	test   BYTE PTR [edi-0x7f1c912d],bl
  415817:	dec    edi
  415818:	mov    edi,DWORD PTR [ecx]
  41581a:	mov    eax,ds:0xe76a07a3
  41581f:	pushf  
  415820:	adc    BYTE PTR [ecx+0x272486a3],ch
  415826:	ret    0x3310
  415829:	pop    ds
  41582a:	in     al,dx
  41582b:	and    BYTE PTR [ecx],bl
  41582d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41582e:	mov    bh,0x87
  415830:	fs push es
  415832:	mov    eax,ds:0xa24dd959
  415837:	imul   eax,DWORD PTR [edi+0x7da27e7c],0xbf22792c
  415841:	mov    ah,0xce
  415843:	adc    eax,0xee6bffef
  415848:	xchg   ch,ah
  41584a:	jae    0x4158a5
  41584c:	push   cs
  41584d:	sbb    BYTE PTR ds:0x693f6a81,0xa6
  415854:	enter  0x3281,0xb2
  415858:	mov    ds:0x1245880d,al
  41585d:	or     bl,BYTE PTR [edi-0x982aa86]
  415863:	das    
  415864:	daa    
  415865:	repnz in eax,dx
  415867:	push   cs
  415868:	cmp    al,0x9c
  41586a:	in     al,dx
  41586b:	dec    edi
  41586c:	cdq    
  41586d:	arpl   WORD PTR [edi+0x17],bx
  415870:	sub    ebx,DWORD PTR [ecx]
  415872:	inc    edi
  415873:	lods   eax,DWORD PTR ds:[esi]
  415874:	cld    
  415875:	ficomp DWORD PTR [esi-0x64]
  415878:	adc    al,0xd4
  41587a:	sbb    al,0x3f
  41587c:	mov    esp,0x1928accf
  415881:	cmp    bl,BYTE PTR [edx+edx*2]
  415884:	ss aaa 
  415886:	sbb    eax,0xf75f6f6
  41588b:	and    ah,BYTE PTR [edi+0x752af7bd]
  415891:	jle    0x4158f5
  415893:	(bad)  
  415894:	icebp  
  415895:	add    al,0x89
  415897:	sbb    esp,DWORD PTR [esi]
  415899:	jle    0x4158c6
  41589b:	aad    0x63
  41589d:	jg     0x415865
  41589f:	xchg   ebx,eax
  4158a0:	inc    esp
  4158a1:	mov    cl,0x31
  4158a3:	jb     0x41583c
  4158a5:	mov    dl,0xc1
  4158a7:	push   0xffffff87
  4158a9:	fcmovnb st,st(3)
  4158ab:	lss    ebp,FWORD PTR [ebp+esi*1-0x415a9cd1]
  4158b3:	add    ah,BYTE PTR [edi-0x2f8ed825]
  4158b9:	inc    ecx
  4158ba:	test   eax,0xa72efe34
  4158bf:	das    
  4158c0:	jbe    0x415911
  4158c2:	and    DWORD PTR [edx+0x6cac81a4],edx
  4158c8:	push   0xffffff85
  4158ca:	nop
  4158cb:	xlat   BYTE PTR ds:[ebx]
  4158cc:	sub    DWORD PTR ds:0x968cebe9,0xffffffb8
  4158d3:	popfw  
  4158d5:	mov    edi,0x11832819
  4158da:	cmp    cl,bl
  4158dc:	les    ebp,FWORD PTR [ecx-0x53634d88]
  4158e2:	pop    es
  4158e3:	xchg   ebx,eax
  4158e4:	popa   
  4158e5:	mov    ds:0x11c62ab1,eax
  4158ea:	fdivr  QWORD PTR [ecx]
  4158ec:	fwait
  4158ed:	adc    eax,0xea34ba12
  4158f2:	mov    edi,0x8b7f95eb
  4158f7:	xor    edi,ebx
  4158f9:	outs   dx,BYTE PTR ds:[esi]
  4158fa:	clc    
  4158fb:	scas   al,BYTE PTR es:[edi]
  4158fc:	sub    esp,DWORD PTR [edi+0xe]
  4158ff:	ds push esp
  415901:	mov    ah,0x70
  415903:	mov    cl,0xe1
  415905:	loopne 0x4158d2
  415907:	add    eax,0xec08b484
  41590c:	rol    bl,1
  41590e:	aam    0x73
  415910:	es push eax
  415912:	popa   
  415913:	jno    0x41595d
  415915:	outs   dx,BYTE PTR ds:[esi]
  415916:	or     ebp,DWORD PTR [ebp-0x47]
  415919:	push   eax
  41591a:	xchg   ebx,eax
  41591b:	push   cs
  41591c:	xor    BYTE PTR [ecx*1+0x18fbc7c4],ch
  415923:	retf   
  415924:	add    BYTE PTR [ebp-0x7d],bh
  415927:	loopne 0x415992
  415929:	ret    0x117
  41592c:	pop    edx
  41592d:	fsubr  st,st(5)
  41592f:	inc    ebp
  415930:	and    DWORD PTR [edx+0x6c9cdc73],esi
  415936:	inc    edi
  415937:	xchg   ebx,eax
  415938:	rcl    esi,cl
  41593a:	push   edx
  41593b:	and    al,0x3f
  41593d:	lea    ecx,[esp+ecx*2+0x2a]
  415941:	xchg   DWORD PTR [edx+eiz*1],ecx
  415944:	and    eax,0x363231db
  415949:	push   0xffffffec
  41594b:	mov    ch,0x7b
  41594d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41594e:	ficom  DWORD PTR [ebx]
  415950:	push   ecx
  415951:	(bad)  
  415952:	es (bad) 
  415954:	in     eax,dx
  415955:	xchg   ebx,eax
  415956:	xor    BYTE PTR [ebx+0x7430ea8e],dl
  41595c:	(bad)  
  41595d:	daa    
  41595e:	cmp    al,0x6b
  415960:	mov    cl,dh
  415962:	or     ebx,DWORD PTR [esi]
  415964:	sbb    al,al
  415966:	pop    edx
  415967:	nop
  415968:	ins    BYTE PTR es:[edi],dx
  415969:	mov    dl,0x86
  41596b:	dec    edx
  41596c:	test   dh,0x41
  41596f:	dec    BYTE PTR [eax+0x1d]
  415972:	aam    0x79
  415974:	cwde   
  415975:	or     al,0xb8
  415977:	and    eax,0xd295b7d6
  41597c:	retf   
  41597d:	pop    es
  41597e:	or     cl,dl
  415980:	inc    DWORD PTR [eax]
  415982:	(bad)
  415985:	ins    BYTE PTR es:[edi],dx
  415986:	mov    ecx,0xecc4af2d
  41598b:	sub    al,BYTE PTR [ebx+0x5a4b45da]
  415991:	sub    al,0xde
  415993:	nop
  415994:	xor    BYTE PTR [ebx-0x3d],cl
  415997:	mov    edi,0xdf3ec3c9
  41599c:	add    eax,0x2a8122aa
  4159a1:	or     BYTE PTR [ebx],dh
  4159a3:	lods   eax,DWORD PTR ds:[esi]
  4159a4:	cli    
  4159a5:	sbb    al,0x39
  4159a7:	adc    al,0x4a
  4159a9:	mov    ah,0xb
  4159ab:	xchg   esp,eax
  4159ac:	pusha  
  4159ad:	inc    esp
  4159ae:	leave  
  4159af:	fcomp  DWORD PTR [edi+ebx*1+0xb]
  4159b3:	stc    
  4159b4:	std    
  4159b5:	out    dx,al
  4159b6:	clc    
  4159b7:	stos   DWORD PTR es:[edi],eax
  4159b8:	sbb    dl,BYTE PTR [ecx+0x4a]
  4159bb:	sbb    al,0x99
  4159bd:	test   BYTE PTR [esi+0x43],dh
  4159c0:	addr16 xor ebp,eax
  4159c3:	sub    edi,DWORD PTR [ebx-0x4282bfdf]
  4159c9:	mov    bh,0x4d
  4159cb:	scas   eax,DWORD PTR es:[edi]
  4159cc:	icebp  
  4159cd:	out    dx,al
  4159ce:	stos   BYTE PTR es:[edi],al
  4159cf:	mov    esp,0xf0d14411
  4159d4:	xor    al,0x96
  4159d6:	and    eax,edi
  4159d8:	inc    edx
  4159d9:	mov    esi,0xd969b593
  4159de:	inc    esp
  4159df:	sti    
  4159e0:	mov    esi,0x7c27ce6
  4159e5:	cld    
  4159e6:	int3   
  4159e7:	sub    BYTE PTR [edx-0x65],cl
  4159ea:	mov    ds:0xdd96305a,eax
  4159ef:	pop    esi
  4159f0:	push   0xc3703285
  4159f5:	stc    
  4159f6:	sub    bh,bh
  4159f8:	jae    0x4159b8
  4159fa:	(bad)  
  4159fb:	into   
  4159fc:	test   al,0xde
  4159fe:	shl    esp,cl
  415a00:	dec    ebp
  415a01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a02:	int    0x14
  415a04:	mov    ebx,0x8bb49cfc
  415a09:	adc    al,0xb
  415a0b:	inc    eax
  415a0c:	lahf   
  415a0d:	loope  0x415a14
  415a0f:	xor    edx,esp
  415a11:	sub    eax,0xddeb3af7
  415a16:	and    DWORD PTR [esi-0x6850a9d3],edi
  415a1c:	repnz pop ds
  415a1e:	(bad)  
  415a1f:	call   0x73d:0xee42c0aa
  415a26:	inc    esi
  415a27:	cdq    
  415a28:	mov    DWORD PTR [ebp+0x1f],ebx
  415a2b:	push   ss
  415a2c:	inc    esp
  415a2d:	data16 bnd jle 0x415a2d
  415a31:	fnstsw WORD PTR [edi-0x5c]
  415a34:	out    dx,al
  415a35:	sub    edi,ecx
  415a37:	pushf  
  415a38:	rcl    DWORD PTR [esp+eiz*4+0x9],1
  415a3c:	mov    ebp,esp
  415a3e:	push   ecx
  415a3f:	adc    BYTE PTR [ecx+0x511e9958],ah
  415a45:	rcr    BYTE PTR [ecx],1
  415a47:	lods   al,BYTE PTR ds:[esi]
  415a48:	push   ecx
  415a49:	jge    0x415a47
  415a4b:	cmp    BYTE PTR [eax-0x7eee90e],ah
  415a51:	std    
  415a52:	popf   
  415a53:	pop    ebx
  415a54:	test   al,0x2f
  415a56:	cdq    
  415a57:	aam    0xde
  415a59:	les    edx,FWORD PTR [ebp-0x13d32bf3]
  415a5f:	mov    esi,0xe7b25e4a
  415a64:	push   edi
  415a65:	or     BYTE PTR [eax-0xd352c72],0x87
  415a6c:	in     al,dx
  415a6d:	mov    esi,0x798f02f0
  415a72:	iret   
  415a73:	push   esp
  415a74:	jl     0x415ad6
  415a76:	add    BYTE PTR [eax],ah
  415a78:	call   0xb595d6c4
  415a7d:	mov    edx,ebp
  415a7f:	mov    edi,0x2a1719b9
  415a84:	cmp    DWORD PTR [eax+0x5554cf88],esi
  415a8a:	cli    
  415a8b:	jp     0x415ad6
  415a8d:	in     al,0xa6
  415a8f:	loopne 0x415a4d
  415a91:	mov    al,ds:0x3b109bf7
  415a96:	dec    eax
  415a97:	pop    eax
  415a98:	inc    ebx
  415a99:	ret    0xb938
  415a9c:	inc    edx
  415a9d:	mov    ds:0x75363413,al
  415aa2:	xor    ebp,DWORD PTR [edi+0x7df827b9]
  415aa8:	xchg   esi,eax
  415aa9:	loopne 0x415a5d
  415aab:	jns    0x415a81
  415aad:	jbe    0x415a5e
  415aaf:	mov    ah,0xf
  415ab1:	adc    ebx,0xffffffc2
  415ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ab6:	xor    edx,DWORD PTR [esi-0x7be3da40]
  415abc:	xor    eax,0xcbbefe40
  415ac1:	mov    dh,0x67
  415ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ac4:	mov    BYTE PTR [ebx-0x63],cl
  415ac7:	(bad)  
  415ac8:	cli    
  415ac9:	inc    esi
  415aca:	lods   al,BYTE PTR ds:[esi]
  415acb:	loope  0x415afd
  415acd:	out    0x8b,al
  415acf:	into   
  415ad0:	push   es
  415ad1:	pop    edx
  415ad2:	jmp    0x4df8:0x92900811
  415ad9:	rcl    DWORD PTR [ecx],cl
  415adb:	leave  
  415adc:	pop    edi
  415add:	mov    esi,0xbd6d7b16
  415ae2:	push   edx
  415ae3:	gs dec al
  415ae6:	push   ebx
  415ae7:	jp     0x415a7b
  415ae9:	mov    ecx,0x2fd8de8c
  415aee:	xor    eax,0xc45cfe25
  415af3:	mov    esp,0x816aef36
  415af8:	add    BYTE PTR [eax],dh
  415afa:	push   cs
  415afb:	fstp   QWORD PTR [ecx+edx*8-0x4f452b44]
  415b02:	pop    ss
  415b03:	fdiv   DWORD PTR [edx+0x7a]
  415b06:	test   al,0x9e
  415b08:	add    BYTE PTR [ecx-0xb37d6d6],ah
  415b0e:	pushf  
  415b0f:	mov    ?,WORD PTR [eax+esi*8]
  415b12:	jb     0x415ab0
  415b14:	sub    BYTE PTR [edx],bh
  415b16:	stos   DWORD PTR es:[edi],eax
  415b17:	xchg   edx,eax
  415b18:	aad    0x90
  415b1a:	pop    ebp
  415b1b:	sub    eax,0x6b2eac19
  415b20:	fstp   DWORD PTR [ebx]
  415b22:	push   0xffffff92
  415b24:	lods   eax,DWORD PTR ds:[esi]
  415b25:	ror    DWORD PTR [edi+0x46],1
  415b28:	lahf   
  415b29:	stos   DWORD PTR es:[edi],eax
  415b2a:	fadd   QWORD PTR [edx]
  415b2c:	addr16 dec ebx
  415b2e:	adc    DWORD PTR [esi+0x58],edi
  415b31:	jbe    0x415ad2
  415b33:	leave  
  415b34:	jmp    DWORD PTR [ecx]
  415b36:	(bad)  
  415b37:	jnp    0x415b63
  415b39:	sbb    eax,0x820ec2b8
  415b3e:	jg     0x415ace
  415b40:	push   ecx
  415b41:	jp     0x415b3c
  415b43:	test   ch,dl
  415b45:	fst    DWORD PTR [eax]
  415b47:	mov    eax,0xe5587697
  415b4c:	cmp    DWORD PTR [eax],ebx
  415b4e:	loope  0x415ad4
  415b50:	std    
  415b51:	xor    cl,BYTE PTR [edi-0x5ef6d97a]
  415b57:	adc    cl,bh
  415b59:	and    edi,edx
  415b5b:	aam    0xde
  415b5d:	loope  0x415b44
  415b5f:	push   edi
  415b61:	test   eax,0x62f0c5ff
  415b66:	mov    eax,ds:0xe4c4f7c0
  415b6b:	push   edi
  415b6c:	sbb    eax,0x1b81c2ff
  415b71:	test   BYTE PTR ds:0x6e974cac,0xeb
  415b78:	push   ebp
  415b79:	jno    0x415b64
  415b7b:	mov    ds:0x7c7db95a,eax
  415b80:	and    DWORD PTR [esi+eiz*8-0x658b7839],eax
  415b87:	xchg   esi,eax
  415b88:	mov    ds,WORD PTR [edi-0x13ffd80c]
  415b8e:	mov    ah,BYTE PTR [ebp+0x7c]
  415b91:	mov    esp,0xe5d7675a
  415b96:	or     edx,DWORD PTR [eax+0x5c706059]
  415b9c:	xchg   esi,eax
  415b9d:	out    dx,al
  415b9e:	push   0x68
  415ba0:	in     al,0xc9
  415ba2:	loop   0x415bcf
  415ba4:	loope  0x415b70
  415ba6:	aad    0xd5
  415ba8:	sub    esp,DWORD PTR [ebx-0x27]
  415bab:	out    dx,eax
  415bac:	jge    0x415b68
  415bae:	sub    eax,0x330d85d2
  415bb3:	adc    al,0x86
  415bb5:	inc    esp
  415bb6:	xchg   edx,eax
  415bb7:	adc    eax,0x594bcdcc
  415bbc:	dec    ebp
  415bbd:	mov    ds:0xae03cab8,al
  415bc2:	pxor   mm3,QWORD PTR [ebx+0x18]
  415bc6:	push   edx
  415bc7:	jecxz  0x415bbc
  415bc9:	jg     0x415b87
  415bcb:	out    dx,eax
  415bcc:	sbb    eax,0xb21ce8bd
  415bd1:	cmp    BYTE PTR [ebx+esi*4+0x36d1b696],dh
  415bd8:	sub    BYTE PTR [esi],al
  415bda:	lds    edi,FWORD PTR [edx+0x2a]
  415bdd:	cmp    esp,esi
  415bdf:	mov    al,0x2c
  415be1:	outs   dx,DWORD PTR ds:[esi]
  415be2:	mov    dl,0xe6
  415be4:	adc    DWORD PTR [eax+0x3b],eax
  415be7:	fcmovnu st,st(6)
  415be9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bea:	pop    edi
  415beb:	dec    edx
  415bec:	pcmpeqd mm6,QWORD PTR [ecx-0x6a554248]
  415bf3:	js     0x415bea
  415bf5:	imul   edi,DWORD PTR [esi],0xa8df27bf
  415bfb:	call   0x292214c4
  415c00:	push   cs
  415c01:	pop    eax
  415c02:	inc    eax
  415c03:	aas    
  415c04:	fwait
  415c05:	push   ss
  415c06:	and    BYTE PTR [edx+0x6648c7db],bl
  415c0c:	cmp    eax,0xab99594b
  415c11:	das    
  415c12:	mov    bl,0xac
  415c14:	inc    edx
  415c15:	xor    BYTE PTR [eax-0x80],ah
  415c18:	mov    al,ds:0xc858066c
  415c1d:	repz es pop edi
  415c20:	jae    0x415c0a
  415c22:	sub    DWORD PTR [ecx-0x7d],ebp
  415c25:	test   BYTE PTR [ebp+0x26],cl
  415c28:	adc    ebp,DWORD PTR [esi+0x2d]
  415c2b:	adc    ah,BYTE PTR [esi+0xf188a20]
  415c31:	outs   dx,DWORD PTR ds:[esi]
  415c32:	imul   eax,ebx,0xfffffffb
  415c35:	fimul  DWORD PTR [ecx]
  415c37:	adc    DWORD PTR ds:0x91c95ab4,esp
  415c3d:	je     0x415c8c
  415c3f:	loopne 0x415c5b
  415c41:	jg     0x415c11
  415c43:	inc    ebp
  415c44:	xor    edi,DWORD PTR [ebp+0x53e56d98]
  415c4a:	mul    DWORD PTR [ebx]
  415c4c:	(bad)  
  415c4d:	dec    edx
  415c4e:	push   ds
  415c4f:	mov    bh,BYTE PTR [edx-0x23]
  415c52:	sbb    eax,0x853f3cb4
  415c57:	loope  0x415c05
  415c59:	jmp    0x415cb8
  415c5b:	enter  0x735,0x84
  415c5f:	inc    eax
  415c60:	push   esi
  415c61:	out    dx,eax
  415c62:	in     eax,0xa2
  415c64:	repnz inc ebp
  415c66:	mov    WORD PTR [eax-0xf87a838],fs
  415c6c:	in     al,0xbf
  415c6e:	add    al,0x67
  415c70:	into   
  415c71:	xor    eax,0x12d5870
  415c76:	test   BYTE PTR [edi+0x36ff003],bh
  415c7c:	push   es
  415c7d:	test   DWORD PTR [esp+edi*8+0x16e29e4a],esi
  415c84:	repz cmc 
  415c86:	inc    esi
  415c87:	fiadd  WORD PTR ds:0xfa877b0c
  415c8d:	inc    esi
  415c8e:	shl    BYTE PTR [ecx],cl
  415c90:	adc    ah,BYTE PTR [edx-0x70]
  415c93:	stos   DWORD PTR es:[edi],eax
  415c94:	and    al,0x3e
  415c96:	not    BYTE PTR [eax-0x13]
  415c99:	ficom  WORD PTR [esi]
  415c9b:	xchg   BYTE PTR [ebp+0x13],cl
  415c9e:	pop    es
  415c9f:	retf   
  415ca0:	push   ds
  415ca1:	jns    0x415c96
  415ca3:	scas   al,BYTE PTR es:[edi]
  415ca4:	mov    esi,0xd81f6aa8
  415ca9:	pop    ecx
  415caa:	fistp  WORD PTR [ebx-0x34b2a500]
  415cb0:	test   DWORD PTR [ebx+0x46b02b69],eax
  415cb6:	sar    DWORD PTR [edi-0x7e],1
  415cb9:	fbld   TBYTE PTR [ebx+0x6c729fa6]
  415cbf:	inc    BYTE PTR [ebp+eiz*1+0x5]
  415cc3:	inc    eax
  415cc4:	mov    edi,0xe0cce815
  415cc9:	sbb    edx,ecx
  415ccb:	or     ebp,esp
  415ccd:	test   DWORD PTR [esi-0x3d],esi
  415cd0:	scas   al,BYTE PTR es:[edi]
  415cd1:	and    al,0xf8
  415cd3:	shl    DWORD PTR [edi-0x68],1
  415cd6:	jg     0x415d56
  415cd8:	fs jne 0x415d15
  415cdb:	xor    al,0xf6
  415cdd:	cli    
  415cde:	or     al,0xd4
  415ce0:	cld    
  415ce1:	or     esp,DWORD PTR [esi+0x648500af]
  415ce7:	pop    ebp
  415ce8:	cld    
  415ce9:	mov    bl,0x7e
  415ceb:	mov    al,0x9d
  415ced:	sub    ecx,ebp
  415cef:	xlat   BYTE PTR ds:[ebx]
  415cf0:	aaa    
  415cf1:	jns    0x415caf
  415cf3:	clc    
  415cf4:	in     eax,dx
  415cf5:	inc    esi
  415cf6:	jp     0x415cc3
  415cf8:	cmp    DWORD PTR [ecx+ebp*1],edi
  415cfb:	aaa    
  415cfc:	loopne 0x415cbb
  415cfe:	cwde   
  415cff:	xchg   esi,eax
  415d00:	add    BYTE PTR [edx-0x458f21dc],bh
  415d06:	mov    bl,0x6d
  415d08:	sbb    BYTE PTR [ebx+0x38671fe9],0x16
  415d0f:	in     eax,dx
  415d10:	add    eax,0x811a8e6f
  415d15:	gs out 0xef,al
  415d18:	fisttp DWORD PTR [eax+0x691882a2]
  415d1e:	mov    bl,BYTE PTR [eax*8+0x159d38a6]
  415d25:	out    0xb2,al
  415d27:	in     eax,dx
  415d28:	outs   dx,DWORD PTR ds:[esi]
  415d29:	jmp    0x415cba
  415d2b:	int3   
  415d2c:	je     0x415d3c
  415d2e:	cld    
  415d2f:	cmc    
  415d30:	les    ebp,FWORD PTR [esi-0x48dd79a3]
  415d36:	mov    BYTE PTR [esi-0x42],dh
  415d39:	ins    DWORD PTR es:[edi],dx
  415d3a:	xlat   BYTE PTR ds:[ebx]
  415d3b:	mov    ebx,0xf03e6042
  415d40:	sub    BYTE PTR [edi],0xfd
  415d43:	sub    DWORD PTR [edi+0x28],0x893df009
  415d4a:	cmp    ch,BYTE PTR [esi-0x71]
  415d4d:	add    ah,BYTE PTR [edi]
  415d4f:	sti    
  415d50:	out    0xbd,eax
  415d52:	pushf  
  415d53:	jge    0x415d22
  415d55:	adc    BYTE PTR [edx],ch
  415d57:	cwde   
  415d58:	inc    ecx
  415d59:	xchg   edx,edx
  415d5b:	outs   dx,DWORD PTR ds:[esi]
  415d5c:	dec    ebx
  415d5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d5e:	push   edi
  415d5f:	inc    BYTE PTR ds:0x4de0e0a2
  415d65:	test   eax,0x83e60737
  415d6a:	and    ebp,DWORD PTR [eax-0x50]
  415d6d:	out    dx,al
  415d6e:	xor    BYTE PTR [esp+esi*2],dl
  415d71:	rcr    DWORD PTR [ecx],0xde
  415d74:	fucomi st,st(4)
  415d76:	data16 fucomip st,st(2)
  415d79:	repnz fiadd DWORD PTR ds:0x7f0ab999
  415d80:	pushf  
  415d81:	icebp  
  415d82:	or     eax,DWORD PTR [ecx+0x3e]
  415d85:	ds mov bl,0xdc
  415d88:	lahf   
  415d89:	fnstenv cs:[ebx+edi*2]
  415d8d:	jae    0x415d29
  415d8f:	iret   
  415d90:	mov    esi,0xce33a67
  415d95:	pop    ds
  415d96:	sbb    DWORD PTR [ebx-0x4c],esp
  415d99:	jo     0x415db5
  415d9b:	dec    esi
  415d9c:	stos   DWORD PTR es:[edi],eax
  415d9d:	mov    ebx,0xeb971df4
  415da2:	pushf  
  415da3:	push   eax
  415da4:	jo     0x415e22
  415da6:	xchg   DWORD PTR [edx+0x14],ebp
  415da9:	and    ch,al
  415dab:	dec    eax
  415dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dad:	popa   
  415dae:	gs rol dl,1
  415db1:	pop    ebp
  415db2:	push   0x24fb7009
  415db7:	lahf   
  415db8:	je     0x415df0
  415dba:	lods   eax,DWORD PTR ds:[esi]
  415dbb:	mov    dl,0x87
  415dbd:	cmp    dl,cl
  415dbf:	dec    esp
  415dc0:	xor    esi,DWORD PTR [edx]
  415dc2:	push   edi
  415dc3:	inc    ebp
  415dc4:	iret   
  415dc5:	es aaa 
  415dc7:	stos   BYTE PTR es:[edi],al
  415dc8:	sbb    BYTE PTR [esi],dl
  415dca:	cmp    edx,DWORD PTR [ebp+0x7a]
  415dcd:	outs   dx,DWORD PTR ds:[esi]
  415dce:	ret    0xa49
  415dd1:	xlat   BYTE PTR ds:[bx]
  415dd3:	xchg   esi,eax
  415dd4:	and    eax,0x2b59ddff
  415dd9:	xor    BYTE PTR [ecx-0x75f2a95d],bh
  415ddf:	leave  
  415de0:	cmc    
  415de1:	jmp    0xbeef:0xbf767f55
  415de8:	bound  esi,QWORD PTR [eax+ebp*8-0x45b52c44]
  415def:	or     ch,BYTE PTR [ebp+0x5b]
  415df2:	dec    esi
  415df3:	jle    0x415e6a
  415df5:	lock call 0x500d670c
  415dfb:	or     cl,BYTE PTR es:[ecx+0x601178f1]
  415e02:	mov    edi,ebx
  415e04:	ja     0x415e05
  415e06:	lods   eax,DWORD PTR ds:[esi]
  415e07:	jns    0x415e3e
  415e09:	sbb    ch,BYTE PTR [ecx+ebx*2]
  415e0c:	(bad)  
  415e0d:	rcl    bl,0x44
  415e10:	xor    esi,DWORD PTR [ebx]
  415e12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e13:	lods   eax,DWORD PTR ds:[esi]
  415e14:	add    BYTE PTR [ecx-0x77d5b57b],al
  415e1a:	pop    edi
  415e1b:	leave  
  415e1c:	dec    edx
  415e1d:	dec    esp
  415e1e:	js     0x415e07
  415e20:	xor    ebx,edi
  415e22:	pop    es
  415e23:	in     eax,0x4f
  415e25:	cmp    al,0x4b
  415e27:	cs mov ebp,ebp
  415e2a:	aad    0x1b
  415e2c:	or     eax,0xc7b04555
  415e31:	mul    BYTE PTR [ebx-0x70]
  415e34:	add    BYTE PTR [eax+0x7b],ch
  415e37:	stos   DWORD PTR es:[edi],eax
  415e38:	shl    DWORD PTR [edi+ebp*2-0x2c],cl
  415e3c:	xor    al,0x20
  415e3e:	js     0x415e45
  415e40:	hlt    
  415e41:	test   DWORD PTR [edx+0x2552bac4],ebp
  415e47:	xchg   esi,eax
  415e48:	stc    
  415e49:	imul   edx,DWORD PTR [ecx+0x23],0xffffffbd
  415e4d:	and    esp,DWORD PTR [edx+0x544c119b]
  415e53:	xor    eax,0xcb352aba
  415e58:	bound  edx,QWORD PTR ds:0x43e64260
  415e5e:	sbb    eax,0x5bc734
  415e63:	xchg   ebx,eax
  415e64:	mov    ecx,0xc9b0bdff
  415e69:	jmp    0x415e52
  415e6b:	pop    ecx
  415e6c:	pop    edx
  415e6d:	call   0xa5d4ccfc
  415e72:	pop    edx
  415e73:	push   ds
  415e74:	nop
  415e75:	out    dx,al
  415e76:	or     bh,BYTE PTR [eax]
  415e78:	jbe    0x415ebd
  415e7a:	mov    WORD PTR [edx-0x7c88ac50],?
  415e80:	push   esp
  415e81:	out    0x58,al
  415e83:	push   ss
  415e84:	dec    edi
  415e85:	push   ebp
  415e86:	adc    al,0x8d
  415e88:	jo     0x415e17
  415e8a:	add    esi,DWORD PTR [ecx+eax*2-0xfcd41da]
  415e91:	mov    WORD PTR ds:0xb7ae660,ss
  415e97:	or     eax,0xfcfc1150
  415e9c:	xor    al,BYTE PTR [ebx]
  415e9e:	fisub  WORD PTR [edi]
  415ea0:	int    0xf8
  415ea2:	not    BYTE PTR [ebx+0x1d410bf7]
  415ea8:	xchg   ecx,eax
  415ea9:	adc    ecx,DWORD PTR ds:0xb994a146
  415eaf:	outs   dx,DWORD PTR ds:[esi]
  415eb0:	jmp    0x1d5444df
  415eb5:	xchg   edx,eax
  415eb6:	popa   
  415eb7:	adc    dh,BYTE PTR [ecx+ebp*2+0x1a3b0e10]
  415ebe:	ds out 0xe1,al
  415ec1:	dec    ebx
  415ec2:	test   al,0x38
  415ec4:	adc    ebp,DWORD PTR [ebx]
  415ec6:	or     al,0x1e
  415ec8:	imul   eax,DWORD PTR [edx-0x6bb9d1e],0xffffff8e
  415ecf:	push   ds
  415ed0:	(bad)  
  415ed1:	in     al,dx
  415ed2:	rcr    DWORD PTR [edi],cl
  415ed4:	and    al,0xeb
  415ed6:	(bad)  [ecx-0x5b]
  415ed9:	sub    BYTE PTR [esi],0xd4
  415edc:	push   es
  415edd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ede:	icebp  
  415edf:	cld    
  415ee0:	test   bl,0x67
  415ee3:	stos   DWORD PTR es:[edi],eax
  415ee4:	not    BYTE PTR [ebx]
  415ee6:	popf   
  415ee7:	rol    BYTE PTR [eax-0x70],0x77
  415eeb:	xchg   edx,eax
  415eec:	add    eax,0xe187d746
  415ef1:	and    eax,0x3fb4d15b
  415ef6:	jg     0x415ea5
  415ef8:	mov    ebx,DWORD PTR [ebp-0x69]
  415efb:	test   BYTE PTR [ebx+0xe5f9372],0x69
  415f02:	test   esp,ecx
  415f04:	in     eax,dx
  415f05:	hlt    
  415f06:	jb     0x415f2c
  415f08:	add    dl,BYTE PTR [edi-0x69]
  415f0b:	push   0xffffffa8
  415f0d:	aam    0x82
  415f0f:	aas    
  415f10:	inc    edx
  415f11:	ds out 0xec,al
  415f14:	jae    0x415eca
  415f16:	mov    ch,0x8d
  415f18:	xchg   edx,eax
  415f19:	and    BYTE PTR [ebx+0x11],cl
  415f1c:	les    esi,FWORD PTR [esi+0x62]
  415f1f:	lea    esi,[esi+ebx*4+0x191511e4]
  415f26:	mov    ds:0x9d947c11,eax
  415f2b:	add    DWORD PTR [edx+0x4f1a442c],ebp
  415f31:	jnp    0x415fae
  415f33:	jmp    0x415ed3
  415f35:	xlat   BYTE PTR ds:[ebx]
  415f36:	jb     0x415ec9
  415f38:	inc    edx
  415f39:	out    dx,al
  415f3a:	cmp    al,0x49
  415f3c:	fcomp  QWORD PTR [ebx+0x5cdb29d2]
  415f42:	mov    bh,0xb1
  415f44:	cmp    DWORD PTR ds:[edx-0x1a244d8e],0x1a
  415f4c:	adc    edi,DWORD PTR [eax]
  415f4e:	iret   
  415f4f:	mov    ch,BYTE PTR [ebx+eiz*2]
  415f52:	mov    al,fs:0xa86f2b46
  415f58:	cmp    dh,al
  415f5a:	push   0xc9ac1af6
  415f5f:	mov    dh,BYTE PTR [ebx]
  415f61:	add    edx,edx
  415f63:	sbb    al,0xbb
  415f65:	push   eax
  415f66:	xor    ecx,0x93770bb8
  415f6c:	jmp    DWORD PTR [edx-0x7e]
  415f6f:	pop    DWORD PTR [edi+eiz*8]
  415f72:	repnz lods eax,DWORD PTR ds:[esi]
  415f74:	in     eax,dx
  415f75:	mov    DWORD PTR [edx-0x73],ecx
  415f78:	cmc    
  415f79:	jp     0x415f08
  415f7b:	sbb    al,0x63
  415f7d:	cld    
  415f7e:	xchg   esi,eax
  415f7f:	out    dx,eax
  415f80:	cli    
  415f81:	call   0x260b:0xa042499d
  415f88:	mov    edx,0xdf5b8c9e
  415f8d:	hlt    
  415f8e:	xor    al,0x98
  415f90:	sbb    DWORD PTR [ebx],esi
  415f92:	pop    esi
  415f93:	test   DWORD PTR [ebx+0x5d79001b],0xd3ad3e17
  415f9d:	aam    0xb8
  415f9f:	jmp    0x41601a
  415fa1:	cmp    bl,dh
  415fa3:	jne    0x415f41
  415fa5:	dec    esp
  415fa6:	jo     0x415fd4
  415fa8:	popf   
  415fa9:	leave  
  415faa:	and    al,0xf7
  415fac:	xor    dl,BYTE PTR [edx+ebx*2+0x6a861532]
  415fb3:	loop   0x415fb2
  415fb5:	jo     0x41600e
  415fb7:	sub    al,0x1c
  415fb9:	das    
  415fba:	scas   eax,DWORD PTR es:[edi]
  415fbb:	(bad)  
  415fbc:	imul   edi,DWORD PTR [si-0x1193],0x9e3ac385
  415fc5:	jo     0x416023
  415fc7:	sub    ch,bl
  415fc9:	push   edi
  415fca:	push   ebx
  415fcb:	std    
  415fcc:	mov    edx,DWORD PTR [edx]
  415fce:	mov    edi,0x8f5d2d78
  415fd3:	sub    ch,BYTE PTR [edx]
  415fd5:	inc    ebp
  415fd6:	inc    esi
  415fd7:	mov    edx,0x86d20b4
  415fdc:	rol    DWORD PTR [ebx+0x3f5af2d6],0x7e
  415fe3:	(bad)  
  415fe4:	xlat   BYTE PTR ds:[ebx]
  415fe5:	xchg   edi,eax
  415fe6:	popa   
  415fe7:	pop    edx
  415fe8:	jo     0x415fc9
  415fea:	mov    dl,0xd5
  415fec:	xchg   edi,eax
  415fed:	fwait
  415fee:	pop    edx
  415fef:	pop    edi
  415ff0:	xor    DWORD PTR [eax+0x32f6cd99],eax
  415ff6:	dec    ebp
  415ff7:	xchg   esi,eax
  415ff8:	add    DWORD PTR [ecx+0x62469bad],ecx
  415ffe:	lahf   
  415fff:	mov    ebx,0x7303b93b
  416004:	into   
  416005:	gs adc eax,0x3df6385d
  41600b:	jl     0x41603f
  41600d:	add    eax,0x8aed1bc0
  416012:	mov    fs,WORD PTR ds:0x2f208bb2
  416018:	cmp    bl,BYTE PTR [ecx+0x300411d]
  41601e:	punpcklwd mm0,DWORD PTR [ebx+0x19]
  416022:	mov    ah,0x3
  416024:	sahf   
  416025:	jns    0x416031
  416027:	out    dx,eax
  416028:	lods   al,BYTE PTR ds:[esi]
  416029:	jmp    0xa18f:0x753487da
  416030:	test   al,0x90
  416032:	out    0xa5,al
  416034:	adc    dh,BYTE PTR [edx+0x796a14]
  41603a:	cmc    
  41603b:	test   eax,0xb985404b
  416040:	nop
  416041:	xor    ebx,esp
  416043:	ds push cs
  416045:	out    dx,al
  416046:	add    BYTE PTR [ebx-0x1e1f036b],0x24
  41604d:	js     0x416082
  41604f:	push   eax
  416050:	adc    esp,edx
  416052:	push   0x203cca3d
  416057:	push   edi
  416058:	test   DWORD PTR [ebp+edx*1+0x40644797],edx
  41605f:	adc    edi,DWORD PTR [esi+ebx*1]
  416062:	and    eax,0xade48c6a
  416067:	shr    BYTE PTR [ebp+esi*8-0x6b09274a],cl
  41606e:	dec    esp
  41606f:	mov    eax,0x48571551
  416074:	and    cl,BYTE PTR [eax+0x6f1e5a65]
  41607a:	mov    cl,0x61
  41607c:	ss jns 0x41602e
  41607f:	stc    
  416080:	(bad)  
  416081:	je     0x416098
  416083:	push   edx
  416084:	enter  0x9cb6,0x38
  416088:	lahf   
  416089:	out    0xfb,eax
  41608b:	jg     0x4160c0
  41608d:	xchg   esi,eax
  41608e:	sbb    BYTE PTR [edi],ah
  416090:	sbb    DWORD PTR fs:[ebx-0x1e],eax
  416094:	cmp    BYTE PTR [eax-0x6b],bl
  416097:	test   BYTE PTR [ebp+ebx*8-0x28],cl
  41609b:	jbe    0x4160bd
  41609d:	pusha  
  41609e:	dec    esi
  41609f:	das    
  4160a0:	mov    ah,0x36
  4160a2:	pop    ebx
  4160a3:	call   0xc98bdc86
  4160a8:	and    BYTE PTR [ebx-0x11d5d2bf],bh
  4160ae:	(bad)  
  4160af:	pop    edi
  4160b0:	lods   eax,DWORD PTR ds:[esi]
  4160b1:	sbb    BYTE PTR [edi],cl
  4160b3:	stos   DWORD PTR es:[edi],eax
  4160b4:	call   0xd9e4:0xa80bb8e0
  4160bb:	sub    ch,BYTE PTR [ebp-0x64]
  4160be:	push   esp
  4160bf:	mov    ch,0x81
  4160c1:	mov    ebp,0x3c49c6aa
  4160c6:	rcl    DWORD PTR [edx+0x69b86716],1
  4160cc:	xlat   BYTE PTR ds:[ebx]
  4160cd:	mov    esi,0xbeb9eeb9
  4160d2:	adc    eax,0xf2777025
  4160d7:	shr    BYTE PTR [edx+edi*2+0x5c],1
  4160db:	xchg   ebp,eax
  4160dc:	sbb    DWORD PTR [ebp-0x1b],ecx
  4160df:	sbb    esi,DWORD PTR [ebp+0x20]
  4160e2:	rol    eax,0x49
  4160e5:	outs   dx,DWORD PTR gs:[esi]
  4160e7:	mov    ch,0xcf
  4160e9:	sbb    DWORD PTR [edx+0x5bd99d2f],edx
  4160ef:	popa   
  4160f0:	mov    eax,0xcf2dd170
  4160f5:	mov    edi,0x4611be27
  4160fa:	data16 lods al,BYTE PTR ds:[esi]
  4160fc:	cmp    ah,BYTE PTR ds:0x87508de2
  416102:	lock jb 0x416155
  416105:	fisubr WORD PTR [ebp+0x5ff2f36c]
  41610b:	cli    
  41610c:	js     0x41617b
  41610e:	aad    0x8f
  416110:	test   al,0x23
  416112:	pop    ebp
  416113:	adc    DWORD PTR [ebp+0x5c],ebp
  416116:	sahf   
  416117:	xlat   BYTE PTR ds:[ebx]
  416118:	xor    eax,0xaeef06dd
  41611d:	fcomp  DWORD PTR [ecx]
  41611f:	pop    edx
  416120:	pop    ebx
  416121:	fidivr WORD PTR [eax+0x52]
  416124:	fldenv [edi-0x6d]
  416127:	or     al,0x8f
  416129:	or     al,BYTE PTR [ebp+eiz*4+0x324ac824]
  416130:	pop    es
  416131:	in     al,dx
  416132:	or     cl,BYTE PTR [esi+eax*1+0x45a1ba36]
  416139:	sbb    DWORD PTR [edx+edx*8-0x18e19c9b],0x5db62039
  416144:	xor    eax,0x2a0ab52d
  416149:	icebp  
  41614a:	mov    cl,BYTE PTR [edx-0x200fb292]
  416150:	test   BYTE PTR ds:0x7c93ea9e,0x6d
  416157:	jb     0x416166
  416159:	mov    dh,0xb8
  41615b:	in     al,dx
  41615c:	outs   dx,DWORD PTR ds:[esi]
  41615d:	in     al,0x68
  41615f:	(bad)  
  416160:	push   eax
  416161:	and    BYTE PTR [ebx+eiz*1],ch
  416164:	or     eax,DWORD PTR [esi]
  416166:	sti    
  416167:	sub    BYTE PTR [eax+0x3c503298],al
  41616d:	inc    ecx
  41616e:	push   ebp
  41616f:	(bad)  
  416170:	sub    edi,edi
  416172:	and    dh,cl
  416174:	inc    edx
  416175:	iret   
  416176:	rol    BYTE PTR [ebx-0xc90f53a],1
  41617c:	and    al,0x17
  41617e:	clc    
  41617f:	xchg   esi,eax
  416180:	iret   
  416181:	xor    eax,esi
  416183:	dec    ebx
  416184:	xor    eax,0xe1f4c9ad
  416189:	stos   BYTE PTR es:[edi],al
  41618a:	push   esp
  41618b:	jle    0x416127
  41618d:	mov    dh,0x58
  41618f:	cli    
  416190:	das    
  416191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416192:	push   ebx
  416193:	xchg   ebx,eax
  416194:	xchg   esi,eax
  416195:	(bad)  [esp+ebx*8]
  416198:	ins    DWORD PTR es:[edi],dx
  416199:	inc    esi
  41619a:	(bad)  
  41619b:	in     al,dx
  41619c:	cmp    BYTE PTR [ecx],ch
  41619e:	sahf   
  41619f:	mov    eax,0xe5937d32
  4161a4:	call   0x84e6:0x512ffa33
  4161ab:	sbb    eax,0x8ebb3df5
  4161b0:	(bad)  
  4161b1:	mov    dl,0x80
  4161b3:	ret    0x7973
  4161b6:	inc    BYTE PTR [eax-0x7e]
  4161b9:	int3   
  4161ba:	retf   0x130d
  4161bd:	je     0x416170
  4161bf:	sbb    ah,bl
  4161c1:	cli    
  4161c2:	les    esp,FWORD PTR [edx]
  4161c4:	into   
  4161c5:	or     eax,0xdcc524b
  4161ca:	inc    ecx
  4161cb:	add    eax,0xffffff8c
  4161ce:	lock ja 0x4161bf
  4161d1:	pop    esi
  4161d2:	fwait
  4161d3:	dec    ecx
  4161d4:	or     BYTE PTR [edx],bh
  4161d6:	int    0x77
  4161d8:	xchg   ecx,eax
  4161da:	xchg   BYTE PTR [edx+eax*8],ah
  4161dd:	ss adc edx,esp
  4161e0:	arpl   WORD PTR [ebx],bp
  4161e2:	mov    eax,0xf636d90a
  4161e7:	mov    ch,0x40
  4161e9:	addr16 push 0x9a3661fb
  4161ef:	dec    ebx
  4161f0:	mov    ebp,0xd73391c2
  4161f5:	dec    edx
  4161f6:	mov    BYTE PTR [esi],ch
  4161f8:	and    DWORD PTR [edx],eax
  4161fa:	out    0x6a,al
  4161fc:	dec    ebp
  4161fd:	add    dh,BYTE PTR [esi+0x42d4a4c5]
  416203:	sbb    dh,BYTE PTR [ebx+0x78]
  416206:	cld    
  416207:	mov    edi,0x366d2602
  41620c:	cdq    
  41620d:	jmp    0x416213
  41620f:	fld    DWORD PTR [edi]
  416211:	mov    ah,0x85
  416213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416214:	xor    DWORD PTR [eax-0x39],esp
  416217:	aam    0x51
  416219:	cmp    eax,0x572c6d54
  41621e:	lea    esi,[esi+ebx*4+0x39]
  416222:	sti    
  416223:	out    0x6b,al
  416225:	inc    ebp
  416226:	sbb    ebp,ebx
  416228:	add    BYTE PTR [eax],dh
  41622a:	outs   dx,DWORD PTR ds:[esi]
  41622b:	or     bl,BYTE PTR [edi-0x58ea78e8]
  416231:	and    al,0xf1
  416233:	xor    al,0xc8
  416235:	pop    ds
  416236:	outs   dx,DWORD PTR ds:[esi]
  416237:	(bad)  
  416238:	rcl    DWORD PTR [eax-0x78],cl
  41623b:	mov    gs,WORD PTR [eax+0x7a]
  41623e:	mov    ch,0xfd
  416240:	xor    ah,ah
  416242:	pop    edx
  416243:	hlt    
  416244:	nop
  416245:	mov    BYTE PTR [ecx-0x741afc71],al
  41624b:	dec    edi
  41624c:	cmp    al,0xe8
  41624e:	pop    ss
  41624f:	push   edi
  416250:	aad    0x8e
  416252:	das    
  416253:	loopne 0x416205
  416255:	mov    edi,eax
  416257:	mov    ds:0xe0216a2b,eax
  41625c:	inc    esi
  41625d:	call   0x7bf778ec
  416262:	cmp    eax,0x19de6017
  416267:	outs   dx,DWORD PTR ds:[esi]
  416268:	loop   0x416225
  41626a:	cdq    
  41626b:	pop    ecx
  41626c:	or     ecx,DWORD PTR [eax-0x47]
  41626f:	and    BYTE PTR cs:[ebx-0x7e],0x67
  416274:	rol    BYTE PTR [ecx+eax*1],1
  416277:	fs aad 0x3a
  41627a:	aad    0x28
  41627c:	enter  0xd254,0xfe
  416280:	mov    esp,0xf03f7fb0
  416285:	add    DWORD PTR [ebx],edx
  416287:	pop    ebx
  416288:	pop    ebp
  416289:	inc    esi
  41628a:	inc    esi
  41628b:	test   DWORD PTR [edx+0x99627ba],esi
  416291:	dec    esp
  416292:	pop    es
  416293:	jge    0x41621d
  416295:	cld    
  416296:	cmp    ah,al
  416298:	fdiv   QWORD PTR [edx]
  41629a:	push   0x86ebcfdd
  41629f:	ret    
  4162a0:	sahf   
  4162a1:	sbb    eax,0x2a901130
  4162a6:	jb     0x416300
  4162a8:	mov    bl,0x9c
  4162aa:	xchg   ebx,eax
  4162ab:	mov    dh,0x5b
  4162ad:	add    DWORD PTR [edi-0x18],0x1
  4162b1:	add    al,0x39
  4162b3:	jnp    0x416265
  4162b5:	jno    0x4162e9
  4162b7:	pop    ss
  4162b8:	lock inc esp
  4162ba:	mov    eax,0x4e33c27e
  4162bf:	fwait
  4162c0:	xlat   BYTE PTR ds:[ebx]
  4162c1:	aaa    
  4162c2:	lods   al,BYTE PTR ds:[esi]
  4162c3:	mov    BYTE PTR [ebp-0x308c8c9d],dh
  4162c9:	push   eax
  4162ca:	push   edx
  4162cb:	sub    al,0xab
  4162cd:	sbb    DWORD PTR [esi+eiz*8-0x639c9b16],eax
  4162d4:	rcl    BYTE PTR [ebx+ecx*8],cl
  4162d7:	xchg   esi,edx
  4162d9:	jge    0x416289
  4162db:	mov    WORD PTR [ebx],cs
  4162dd:	out    dx,al
  4162de:	xor    esp,DWORD PTR fs:[ecx+edx*1]
  4162e2:	inc    ebp
  4162e3:	sub    eax,0xdd5af880
  4162e8:	mov    dh,al
  4162ea:	or     bl,BYTE PTR [ebp-0x71]
  4162ed:	hlt    
  4162ee:	lahf   
  4162ef:	js     0x4162e1
  4162f1:	dec    esp
  4162f2:	les    esi,FWORD PTR [eax+0x4eadfd44]
  4162f8:	pop    eax
  4162f9:	shl    DWORD PTR [edx],cl
  4162fb:	or     eax,0xbbb6b2c9
  416300:	out    0x9a,eax
  416302:	mov    esp,0xd37f168a
  416307:	jmp    0x202e:0xe872e6be
  41630e:	mov    cl,ah
  416310:	and    ebx,DWORD PTR [ebx-0x61]
  416313:	sbb    eax,0xca71eda6
  416318:	int3   
  416319:	sub    BYTE PTR [ebx+0x1a],0xec
  41631d:	gs mov eax,0x95517bcf
  416323:	jmp    0x3d5:0xa247cf8d
  41632a:	bound  edx,QWORD PTR [eax]
  41632c:	push   esp
  41632d:	xchg   ebx,eax
  41632e:	jne    0x416364
  416330:	push   edi
  416331:	push   0x72fc4cfc
  416336:	imul   edx,DWORD PTR [esi+0x76],0xffffffb6
  41633a:	scas   al,BYTE PTR es:[edi]
  41633b:	int    0x6d
  41633d:	jmp    0x7ea0b01b
  416342:	int    0x69
  416344:	mov    eax,ds:0x375db3dc
  416349:	and    BYTE PTR [esi+esi*2+0x6bc3ee8f],al
  416350:	arpl   cx,dx
  416352:	loopne 0x416359
  416354:	add    cl,dl
  416356:	test   BYTE PTR [esi+0x1e02aa0a],ch
  41635c:	mov    ds:0x83f029b6,eax
  416361:	mov    bh,0xd7
  416363:	enter  0xc9c1,0x1a
  416367:	or     al,0x82
  416369:	jge    0x416307
  41636b:	or     eax,0x76f8305a
  416370:	leave  
  416371:	jmp    0xaaf8afc5
  416376:	jl     0x4163cb
  416378:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416379:	and    al,BYTE PTR [edi+ebx*8-0x482216ba]
  416380:	pop    ds
  416381:	sbb    DWORD PTR [edi+0x4ef1750f],ebp
  416387:	jbe    0x41634a
  416389:	sub    edx,DWORD PTR [ebp-0x5e8809dd]
  41638f:	jp     0x41640e
  416391:	mov    eax,0xee2b1dcc
  416396:	test   DWORD PTR [esi+0xcdce471],0xab0408cd
  4163a0:	mov    WORD PTR [esi+0x79],ds
  4163a3:	cmp    bl,BYTE PTR [esi+0x2e]
  4163a6:	pop    esi
  4163a7:	(bad)  [ebx]
  4163a9:	imul   ecx,DWORD PTR [esi+0x52139ee5],0x31e8ce7c
  4163b3:	loop   0x4163ca
  4163b5:	daa    
  4163b6:	imul   ecx,edx,0x0
  4163b9:	push   cs
  4163ba:	adc    esp,DWORD PTR [edi]
  4163bc:	in     al,0x94
  4163be:	aam    0xc1
  4163c0:	jo     0x4163c5
  4163c2:	jbe    0x416381
  4163c4:	mov    ebp,0x13f90e19
  4163c9:	stc    
  4163ca:	xchg   BYTE PTR [esi+0x7f4d88e],al
  4163d0:	add    al,0x4c
  4163d2:	pop    es
  4163d3:	enter  0x9c9a,0x2d
  4163d7:	push   edi
  4163d8:	ja     0x41638c
  4163da:	in     al,0xa0
  4163dc:	dec    ecx
  4163dd:	retf   0x683a
  4163e0:	mov    esp,0x2edc3cf1
  4163e5:	pop    ss
  4163e6:	or     edx,eax
  4163e8:	push   es
  4163e9:	fisubr DWORD PTR [ecx+0x6c]
  4163ec:	iret   
  4163ed:	imul   esp,DWORD PTR [ecx-0x1b],0xa6a87626
  4163f4:	mov    edx,0xec4f7a85
  4163f9:	iret   
  4163fa:	inc    eax
  4163fb:	sar    DWORD PTR [ebp+0x6b8f885],cl
  416401:	and    al,0xac
  416403:	repz arpl WORD PTR [ecx-0x56967e57],bx
  41640a:	ror    al,0xc0
  41640d:	repz and bh,BYTE PTR [ebp-0x215d95cf]
  416414:	pop    ds
  416415:	cli    
  416416:	std    
  416417:	sbb    eax,0xa3decebf
  41641c:	xor    DWORD PTR [ecx-0x7],esp
  41641f:	pop    ebp
  416420:	fld    TBYTE PTR [edi]
  416422:	lods   eax,DWORD PTR ds:[esi]
  416423:	aam    0xa
  416425:	push   ecx
  416426:	out    dx,al
  416427:	mov    eax,0x32872563
  41642c:	push   ecx
  41642d:	sbb    bl,BYTE PTR [esi-0x7f]
  416430:	push   0xffffff86
  416432:	imul   edx,DWORD PTR [ecx],0xffffffb4
  416435:	lock xor BYTE PTR [ecx+0x63868a7a],bh
  41643c:	fsubr  DWORD PTR [ecx-0x2ad80634]
  416442:	adc    eax,0xa54d63e8
  416447:	fdivr  st,st(6)
  416449:	ret    0x5468
  41644c:	jno    0x4163f4
  41644e:	cmp    ebp,edi
  416450:	inc    ecx
  416451:	cmp    BYTE PTR [ebp+0x11],0x54
  416455:	and    BYTE PTR [esi-0x7a8d262f],al
  41645b:	xadd   DWORD PTR [edi],eax
  41645e:	clc    
  41645f:	enter  0xbba8,0x2e
  416463:	je     0x4164a1
  416465:	jmp    0xcdb8:0x2faece1c
  41646c:	ss repz ret 
  41646f:	ds in  al,dx
  416471:	push   ebx
  416472:	jmp    0x41646a
  416474:	in     al,0x2e
  416476:	(bad)  
  416477:	outs   dx,DWORD PTR ds:[esi]
  416478:	inc    ebp
  416479:	aas    
  41647a:	jmp    edi
  41647c:	fadd   QWORD PTR [edi+0x3bff79e3]
  416482:	mov    DWORD PTR [edx-0x65e72ec8],ecx
  416488:	push   es
  416489:	not    BYTE PTR [esi+edx*8]
  41648c:	fwait
  41648d:	sbb    ch,BYTE PTR [edx]
  41648f:	or     DWORD PTR [bx+si-0x9],esi
  416493:	test   BYTE PTR ds:[edi],cl
  416496:	and    dh,ch
  416498:	mov    esp,0xda50c112
  41649d:	adc    ch,BYTE PTR [eax+0x52183abc]
  4164a3:	imul   ecx,esp,0xffffff8e
  4164a6:	lea    edi,[ebp-0x50]
  4164a9:	push   0x24
  4164ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164ac:	stc    
  4164ad:	test   BYTE PTR ds:0x6e5fee76,cl
  4164b3:	or     BYTE PTR ds:0xf84482d2,dh
  4164b9:	xor    esp,edx
  4164bb:	daa    
  4164bc:	ret    
  4164bd:	dec    eax
  4164be:	sbb    BYTE PTR [ecx],al
  4164c0:	das    
  4164c1:	enter  0xaad6,0xe9
  4164c5:	add    eax,0x5fef5a12
  4164ca:	call   0x899a1e44
  4164cf:	lea    esp,[ebx-0x7b0a7c15]
  4164d5:	cwde   
  4164d6:	pop    ebx
  4164d7:	lock ret 0x9dc0
  4164db:	mov    ebx,0xcf8296c
  4164e0:	push   ds
  4164e1:	out    0x9,al
  4164e3:	and    bl,ah
  4164e5:	fimul  WORD PTR [eax]
  4164e7:	mov    al,0x48
  4164e9:	das    
  4164ea:	ins    BYTE PTR es:[edi],dx
  4164eb:	xor    cl,BYTE PTR [si+0x3a]
  4164ef:	or     eax,0x4252bee7
  4164f4:	mov    bh,0xdd
  4164f6:	dec    ebp
  4164f7:	sbb    ch,BYTE PTR [ecx+0x67]
  4164fa:	lea    esi,[esi+0x11]
  4164fd:	test   DWORD PTR [esi+esi*8-0x2e],0xe826218f
  416505:	or     BYTE PTR [ebx],bh
  416507:	out    dx,al
  416508:	push   DWORD PTR [ebx-0x5e]
  41650b:	pop    esi
  41650c:	add    ah,BYTE PTR ds:0xb77c0d98
  416512:	adc    al,0xcb
  416514:	imul   ecx,DWORD PTR [edx+edx*4+0xa],0x27
  416519:	(bad)  
  41651a:	and    DWORD PTR [edi+esi*1+0x6f],esi
  41651e:	repnz loope 0x416563
  416521:	pop    ds
  416522:	(bad)  
  416523:	and    eax,0xa4b883c2
  416528:	adc    BYTE PTR [esi],dh
  41652a:	mov    esi,0xd45850a4
  41652f:	xchg   esi,eax
  416530:	shr    dl,cl
  416532:	shl    BYTE PTR [edx+0x24],0xd3
  416536:	nop
  416537:	pop    ecx
  416538:	push   ecx
  416539:	loope  0x4164c3
  41653b:	mov    ebp,ebp
  41653d:	cwde   
  41653e:	pop    ds
  41653f:	pop    ecx
  416540:	pop    edx
  416541:	mov    bl,0x1f
  416543:	dec    edx
  416544:	mov    dh,0xe3
  416546:	sbb    ebp,DWORD PTR [ecx+0x2f]
  416549:	xor    al,0xd7
  41654b:	inc    ebx
  41654c:	fwait
  41654d:	test   al,0xa6
  41654f:	dec    ebx
  416550:	add    ch,BYTE PTR [edi-0xf831b66]
  416556:	cli    
  416557:	mov    BYTE PTR [ebx],ch
  416559:	js     0x416528
  41655b:	push   edi
  41655c:	dec    esi
  41655d:	cmp    DWORD PTR [eax-0x4e],edx
  416560:	and    BYTE PTR [ebp+0x62],0x73
  416564:	lea    ecx,[edx+0x467726a2]
  41656a:	stos   BYTE PTR es:[edi],al
  41656b:	adc    eax,esp
  41656d:	das    
  41656e:	pop    edx
  41656f:	mov    eax,ds:0xd969221
  416574:	push   cs
  416575:	sub    BYTE PTR ds:0x919ceb98,dh
  41657b:	or     DWORD PTR [edx],esp
  41657d:	mov    cl,0xcb
  41657f:	jge    0x41659e
  416581:	retf   
  416582:	push   eax
  416583:	(bad)  
  416584:	out    dx,eax
  416585:	fidivr WORD PTR es:[eax+0x67]
  416589:	addr16 push ss
  41658b:	pushf  
  41658c:	sbb    BYTE PTR [edi],bh
  41658e:	out    0x19,eax
  416590:	pop    ebx
  416591:	clc    
  416592:	cli    
  416593:	scas   eax,DWORD PTR es:[edi]
  416594:	jbe    0x416558
  416596:	test   al,dl
  416598:	jmp    0x4165d4
  41659a:	sub    eax,0x2579c938
  41659f:	jo     0x4165ea
  4165a1:	popf   
  4165a2:	sub    eax,0x63bd4be8
  4165a7:	cmp    edi,ebx
  4165a9:	sbb    BYTE PTR [ebp+0x7f],dh
  4165ac:	adc    dl,BYTE PTR [ecx]
  4165ae:	xchg   esi,eax
  4165af:	inc    ecx
  4165b0:	sbb    eax,0x20
  4165b3:	jno    0x41655c
  4165b5:	inc    ebx
  4165b6:	test   eax,0xc4abd098
  4165bb:	xchg   ebx,eax
  4165bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165bd:	push   ebp
  4165be:	push   0x4fe7829d
  4165c3:	dec    edx
  4165c4:	or     edi,DWORD PTR ds:0xacd5b1d6
  4165ca:	test   DWORD PTR [edi-0x67bb3fc1],0x8c39d856
  4165d4:	mov    ecx,0xb61d7b9f
  4165d9:	fs cmp eax,0x954dd744
  4165df:	stos   BYTE PTR es:[edi],al
  4165e0:	cwde   
  4165e1:	addr16 stc 
  4165e3:	cli    
  4165e4:	mov    bh,0xe5
  4165e6:	pop    ecx
  4165e7:	mov    ah,0x7d
  4165e9:	push   esi
  4165ea:	ds ss push es
  4165ed:	pop    ebp
  4165ee:	push   ss
  4165ef:	dec    edx
  4165f0:	cmp    eax,0xcce9f486
  4165f5:	sbb    al,0x3c
  4165f7:	mov    ebx,0x72d8f0ad
  4165fc:	pop    edx
  4165fd:	stos   BYTE PTR es:[edi],al
  4165fe:	out    0x23,eax
  416600:	sub    BYTE PTR [ebx-0x2c],0x6b
  416604:	xor    al,bl
  416606:	sbb    DWORD PTR [esp+esi*1],eax
  416609:	or     al,0xe0
  41660b:	out    0x42,eax
  41660d:	daa    
  41660e:	xor    DWORD PTR [eax],ebx
  416610:	push   0x25
  416612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416613:	jne    0x416633
  416615:	xor    eax,0x96ffef80
  41661a:	mov    esi,0xd6b8b821
  41661f:	jo     0x416614
  416621:	(bad)  
  416622:	(bad)  
  416623:	mov    cl,0xa9
  416625:	and    DWORD PTR ds:0x2e2282c8,esi
  41662b:	xchg   esp,eax
  41662c:	sbb    BYTE PTR [edx-0x24],dl
  41662f:	xchg   ebx,eax
  416630:	mov    edi,DWORD PTR [ebp+0x4d]
  416633:	into   
  416634:	add    BYTE PTR [esi-0x3a],bl
  416637:	mov    eax,ds:0x7d83a58c
  41663c:	repnz retf 
  41663e:	cmp    ebx,DWORD PTR [edx-0x1b]
  416641:	inc    ecx
  416642:	call   0x96a9:0x77b8c598
  416649:	push   ebp
  41664a:	sub    ecx,ecx
  41664c:	es jg  0x416669
  41664f:	pop    edx
  416650:	scas   al,BYTE PTR es:[edi]
  416651:	shl    ecx,1
  416653:	in     al,dx
  416654:	xchg   esi,eax
  416655:	mov    eax,ds:0xeacc554a
  41665a:	stos   DWORD PTR es:[edi],eax
  41665b:	xor    esi,esi
  41665d:	fchs   
  41665f:	scas   al,BYTE PTR es:[edi]
  416660:	cmp    al,0xfe
  416662:	jle    0x416632
  416664:	cmp    DWORD PTR [eax-0xf],esp
  416667:	leave  
  416668:	push   es
  416669:	and    eax,0x21bb9032
  41666e:	dec    ecx
  41666f:	ja     0x416605
  416671:	mov    al,0x6d
  416673:	push   ebx
  416674:	mov    ?,WORD PTR [eax+ebx*4+0x0]
  416678:	enter  0x2383,0x2
  41667c:	mov    esp,DWORD PTR ds:0x2feff492
  416682:	xchg   esi,eax
  416683:	add    eax,0xdb00910f
  416688:	push   edx
  416689:	dec    ebp
  41668a:	xor    eax,0x94efd2dd
  41668f:	jmp    0x4166c7
  416691:	(bad)  
  416692:	jnp    0x4166bc
  416694:	outs   dx,DWORD PTR ds:[esi]
  416695:	fistp  WORD PTR [eax]
  416697:	lahf   
  416698:	push   eax
  416699:	mov    dh,0x2a
  41669b:	mov    ss,WORD PTR [ebp-0x5ac12a2d]
  4166a1:	loop   0x41664b
  4166a3:	cwde   
  4166a4:	add    BYTE PTR [edi],bl
  4166a6:	add    dh,bl
  4166a8:	sti    
  4166a9:	inc    edx
  4166aa:	mov    eax,0x4c52416b
  4166af:	sub    al,0x2f
  4166b1:	xchg   ecx,eax
  4166b2:	pusha  
  4166b3:	jne    0x41663f
  4166b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166b6:	cmp    esi,DWORD PTR ds:[ebx]
  4166b9:	jns    0x4166fa
  4166bb:	cmp    al,0x57
  4166bd:	sbb    BYTE PTR [eax-0x2371e160],dh
  4166c3:	lds    esi,FWORD PTR [esi-0x5343941]
  4166c9:	push   edi
  4166ca:	enter  0xbe73,0x2e
  4166ce:	mov    ds:0x46804f28,al
  4166d3:	loop   0x41668d
  4166d5:	cmp    bl,al
  4166d7:	dec    ebp
  4166d8:	loopne 0x416723
  4166da:	xor    BYTE PTR [eax-0x41],bh
  4166dd:	inc    eax
  4166de:	push   eax
  4166df:	mov    bh,0xd4
  4166e1:	jp     0x416672
  4166e3:	push   esi
  4166e4:	mov    bl,0x4c
  4166e6:	sbb    eax,ecx
  4166e8:	jl     0x416758
  4166ea:	mov    ds:0xd9f7988f,eax
  4166ef:	test   ebx,ebx
  4166f1:	sti    
  4166f2:	hlt    
  4166f3:	sbb    ebp,DWORD PTR [esp+ecx*8+0x58]
  4166f7:	aad    0x75
  4166f9:	mov    al,ds:0x188cb07f
  4166fe:	daa    
  4166ff:	mov    dh,0x17
  416701:	mov    eax,0x921c64ce
  416706:	stos   BYTE PTR es:[edi],al
  416707:	mov    DWORD PTR [ebx+0x55],0xeca067fa
  41670e:	jmp    0x2f56:0xfc23f2ad
  416715:	outs   dx,DWORD PTR ds:[esi]
  416716:	cld    
  416717:	xchg   esi,eax
  416718:	adc    DWORD PTR [edi],esi
  41671a:	adc    esp,0x5f27d04c
  416720:	iret   
  416721:	mov    cl,0x99
  416723:	xchg   ecx,eax
  416724:	retf   0x1dac
  416727:	pop    esp
  416728:	mov    ch,0x3
  41672a:	pushf  
  41672b:	sti    
  41672c:	int3   
  41672d:	jae    0x416760
  41672f:	xor    al,0x12
  416731:	push   DWORD PTR [ebp-0x4]
  416734:	cli    
  416735:	and    al,0xfc
  416737:	sub    dl,BYTE PTR [edi]
  416739:	out    0x63,al
  41673b:	adc    DWORD PTR [ebx],esp
  41673d:	mov    esi,DWORD PTR [ebx-0x52281fe8]
  416743:	mov    ds:0x47eec7cc,al
  416748:	sbb    al,0x93
  41674a:	sbb    DWORD PTR ds:0x1b1436b6,esi
  416750:	outs   dx,BYTE PTR ds:[esi]
  416751:	repnz mov bh,0x9c
  416754:	fldcw  WORD PTR [edi-0x17]
  416757:	jno    0x4167cf
  416759:	mov    dh,0xce
  41675b:	mov    edi,0x56ffa978
  416760:	out    dx,eax
  416761:	mov    ss,WORD PTR [edx+0x6ec8e0cb]
  416767:	add    eax,0x388efca5
  41676c:	das    
  41676d:	jnp    0x41673b
  41676f:	inc    edx
  416770:	adc    cl,BYTE PTR [ebp+0x3284658c]
  416776:	mov    BYTE PTR [ebx-0x6e3d47b2],dl
  41677c:	shr    DWORD PTR [eax-0xba96013],cl
  416782:	pop    esi
  416783:	pusha  
  416784:	pop    esi
  416785:	and    edi,DWORD PTR [ecx+0x492437e8]
  41678b:	div    DWORD PTR [edx+0x23]
  41678e:	dec    eax
  41678f:	mov    BYTE PTR [edx],al
  416791:	inc    ebp
  416792:	cmc    
  416793:	push   esi
  416794:	cwde   
  416795:	xchg   DWORD PTR [esi+0xf],ebp
  416798:	nop
  416799:	or     esi,DWORD PTR [ecx-0x737e2a2f]
  41679f:	xchg   ecx,eax
  4167a0:	hlt    
  4167a1:	iret   
  4167a2:	fild   WORD PTR [eax-0x3373035]
  4167a8:	gs enter 0x1075,0xe9
  4167ad:	dec    edx
  4167ae:	pop    ds
  4167af:	dec    esp
  4167b0:	into   
  4167b1:	xor    BYTE PTR [edi-0x33f9220],ah
  4167b7:	push   edi
  4167b8:	xchg   edi,eax
  4167b9:	gs cdq 
  4167bb:	fs jp  0x41674b
  4167be:	push   edx
  4167bf:	cmp    ah,ch
  4167c1:	addr16 inc eax
  4167c3:	mov    cl,0xfe
  4167c5:	cmp    al,0x26
  4167c7:	dec    eax
  4167c8:	sar    BYTE PTR [edx],1
  4167ca:	pop    eax
  4167cb:	sbb    eax,0x5f29811
  4167d0:	popf   
  4167d1:	inc    edi
  4167d2:	sar    BYTE PTR [edx+0x57],1
  4167d5:	xor    al,ch
  4167d7:	out    0xf3,eax
  4167d9:	js     0x4167db
  4167db:	sub    edx,DWORD PTR [edx]
  4167dd:	mov    bl,0xa0
  4167df:	mov    eax,ds:0x78637ae9
  4167e4:	frstor [edx]
  4167e6:	scas   eax,DWORD PTR es:[edi]
  4167e7:	adc    cl,ch
  4167e9:	sub    edx,DWORD PTR [ebx-0x5d]
  4167ec:	pop    esp
  4167ed:	push   edi
  4167ee:	mov    ecx,0x3d41dc4c
  4167f3:	inc    esi
  4167f4:	int3   
  4167f5:	mov    cs,WORD PTR [ebx+0x2af1f93c]
  4167fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167fc:	mov    bh,0x2d
  4167fe:	(bad)  
  4167ff:	dec    esi
  416800:	jle    0x416881
  416802:	inc    esp
  416803:	push   cs
  416804:	mov    BYTE PTR [edx],ch
  416806:	out    dx,al
  416807:	and    eax,DWORD PTR [edx+0x290b7c6c]
  41680d:	scas   al,BYTE PTR es:[edi]
  41680e:	mov    ebx,0xea230922
  416813:	xchg   ebp,eax
  416814:	(bad)  
  416815:	push   edi
  416816:	cdq    
  416817:	mov    dl,0x7b
  416819:	mov    ecx,0xce33d7cc
  41681e:	or     eax,DWORD PTR [ebp+0x2fd0f638]
  416824:	std    
  416825:	iret   
  416826:	retf   
  416827:	lea    edi,[edx]
  416829:	sub    eax,0xe1a23024
  41682e:	push   es
  41682f:	jb     0x4168a9
  416831:	or     BYTE PTR [eax+edx*8],al
  416834:	xor    al,0x7a
  416836:	test   eax,0xec8bda44
  41683b:	cmp    BYTE PTR [eax],bh
  41683d:	jecxz  0x416831
  41683f:	je     0x41680f
  416841:	(bad)  
  416842:	ja     0x416837
  416844:	inc    ebx
  416845:	icebp  
  416846:	pushf  
  416847:	dec    ebp
  416848:	daa    
  416849:	test   al,0x58
  41684b:	data16 fsub QWORD PTR ss:[ecx-0x5f03e369]
  416853:	mov    dl,0xd2
  416855:	retf   0x7968
  416858:	loop   0x4168b4
  41685a:	iret   
  41685b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41685c:	or     edx,DWORD PTR [ebx+0x38]
  41685f:	(bad)  
  416860:	fsubp  st(0),st
  416862:	mov    WORD PTR [edi-0x41],ds
  416865:	punpckldq mm5,mm5
  416868:	push   edx
  416869:	arpl   WORD PTR [edx+0x57],ax
  41686c:	and    esp,DWORD PTR [eax]
  41686e:	sti    
  41686f:	ins    DWORD PTR es:[edi],dx
  416870:	int3   
  416871:	test   BYTE PTR [edi-0x141c547],bl
  416877:	push   eax
  416878:	sub    eax,0x8fb18e6c
  41687d:	mov    al,ds:0xca8a6478
  416882:	pop    ebp
  416883:	daa    
  416884:	or     dh,BYTE PTR [eax-0x4f]
  416887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416888:	xor    BYTE PTR [edx+0x43],al
  41688b:	xchg   ecx,eax
  41688c:	and    ebp,esi
  41688e:	in     al,dx
  41688f:	add    ch,BYTE PTR [esp+eax*2+0x5c]
  416893:	jnp    0x41689b
  416895:	inc    eax
  416896:	leave  
  416897:	jb     0x4168e1
  416899:	pop    es
  41689a:	sub    eax,0xf70cf497
  41689f:	mov    al,0xa0
  4168a1:	fbstp  TBYTE PTR [edx+0x30383a3d]
  4168a7:	clc    
  4168a8:	cs pop ebx
  4168aa:	push   ss
  4168ab:	xor    eax,0x3d9d488b
  4168b0:	mov    dh,0xa7
  4168b2:	sbb    bl,dh
  4168b4:	les    esi,FWORD PTR [esi+ebx*4+0x12]
  4168b8:	leave  
  4168b9:	and    al,0x8c
  4168bb:	add    bh,bh
  4168bd:	in     al,0xa1
  4168bf:	adc    BYTE PTR [esi+0x4ae50be6],ah
  4168c5:	cmp    eax,0xfd2e4000
  4168ca:	mov    ch,0x8a
  4168cc:	js     0x4168c3
  4168ce:	push   es
  4168cf:	adc    DWORD PTR [ebp-0x769f14b0],0x90d83339
  4168d9:	pop    ebp
  4168da:	mov    ?,esp
  4168dc:	sar    BYTE PTR [ebx+ebp*4-0x41ff15c6],0xeb
  4168e4:	jg     0x416962
  4168e6:	daa    
  4168e7:	sub    al,0x8c
  4168e9:	hlt    
  4168ea:	sbb    edx,DWORD PTR [esi+0xd9d2857]
  4168f0:	mov    ah,BYTE PTR [esi]
  4168f2:	pop    ds
  4168f3:	adc    eax,0xa6764ebd
  4168f8:	popa   
  4168f9:	inc    esp
  4168fa:	sub    eax,0x7475f57c
  4168ff:	cld    
  416900:	ins    DWORD PTR es:[edi],dx
  416901:	and    al,0x78
  416903:	imul   ebx,DWORD PTR [esp+ebp*2-0x55],0x11
  416908:	xor    DWORD PTR [edi+0x671ca0d7],0x8d0d3f6f
  416912:	xchg   esp,eax
  416913:	mov    ds:0x3a30b420,eax
  416918:	xchg   DWORD PTR [edx],esp
  41691a:	cwde   
  41691b:	mov    dl,0xc4
  41691d:	arpl   sp,dx
  41691f:	adc    al,BYTE PTR [ecx+0x29]
  416922:	lahf   
  416923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416924:	add    dl,BYTE PTR [edx-0x15]
  416927:	jne    0x416901
  416929:	retf   
  41692a:	pop    es
  41692b:	sbb    BYTE PTR [edi+eiz*4],0xa7
  41692f:	fist   DWORD PTR [esi]
  416931:	sub    eax,0x4b643645
  416936:	ins    BYTE PTR es:[edi],dx
  416937:	dec    edi
  416938:	cmp    eax,0x6fad06f6
  41693d:	(bad)
  416941:	inc    eax
  416942:	adc    eax,0x1d54cc2e
  416947:	jo     0x4169b0
  416949:	stc    
  41694a:	test   al,0xa5
  41694c:	xchg   ebp,eax
  41694d:	jb     0x4169c1
  41694f:	and    al,0xbc
  416951:	(bad)  [ebp-0x68]
  416954:	jo     0x4169b8
  416956:	imul   eax,DWORD PTR [eax-0x41],0xffffffe3
  41695a:	jle    0x4168dd
  41695c:	sahf   
  41695d:	shl    BYTE PTR ds:0xacec7a48,cl
  416963:	(bad)  [edx-0x7]
  416966:	ja     0x4169af
  416968:	repz lds esp,FWORD PTR [edi-0x4c55a9c0]
  41696f:	shl    BYTE PTR [edx-0x54c8e520],1
  416975:	les    eax,FWORD PTR ds:0x9098b043
  41697b:	das    
  41697c:	xchg   esi,eax
  41697d:	mov    edi,0xf40bc842
  416982:	int3   
  416983:	inc    eax
  416984:	test   bl,dh
  416986:	jp     0x4169e3
  416988:	stos   BYTE PTR es:[edi],al
  416989:	xchg   esi,eax
  41698a:	outs   dx,DWORD PTR ds:[esi]
  41698b:	je     0x416927
  41698d:	mov    esi,0xab8fd33e
  416992:	inc    eax
  416993:	aas    
  416994:	aad    0x87
  416996:	or     BYTE PTR [ebx+esi*1+0x5b],dl
  41699a:	mov    eax,ds:0x4dd5a61f
  41699f:	or     BYTE PTR [ebx],cl
  4169a1:	jno    0x416930
  4169a3:	pop    ecx
  4169a4:	fucomip st,st(5)
  4169a6:	mov    DWORD PTR [edx],edi
  4169a8:	sbb    BYTE PTR [edx+0x6b],0x6
  4169ac:	lods   al,BYTE PTR ds:[esi]
  4169ad:	cmc    
  4169ae:	mov    ds:0x52e218c5,eax
  4169b3:	jns    0x4169e2
  4169b5:	popa   
  4169b6:	inc    ebp
  4169b7:	add    bh,BYTE PTR [ebp+0x52226039]
  4169bd:	in     al,dx
  4169be:	cmp    BYTE PTR [edx+0x5c],ch
  4169c1:	addr16 pusha 
  4169c3:	xchg   esi,eax
  4169c4:	inc    ebp
  4169c5:	aam    0xdb
  4169c7:	rcr    BYTE PTR [ecx],cl
  4169c9:	into   
  4169ca:	sbb    al,0x20
  4169cc:	xor    edx,DWORD PTR [ebx+0x65]
  4169cf:	jb     0x416984
  4169d1:	call   0xca6c:0x377bd6e0
  4169d8:	sahf   
  4169d9:	int3   
  4169da:	nop
  4169db:	mov    WORD PTR [edx],fs
  4169dd:	push   esi
  4169de:	test   DWORD PTR [esi+0x612d8d9e],ebp
  4169e4:	aad    0xb4
  4169e6:	ror    DWORD PTR [eax],cl
  4169e8:	push   esi
  4169e9:	push   edx
  4169ea:	in     eax,dx
  4169eb:	fistp  QWORD PTR [ebx]
  4169ed:	not    DWORD PTR [ecx+0x52]
  4169f0:	pop    edx
  4169f1:	inc    esp
  4169f2:	adc    dl,BYTE PTR [edx]
  4169f4:	mov    dh,0x41
  4169f6:	lds    esi,FWORD PTR ds:0xd43ee2f3
  4169fc:	test   ecx,0xf4ee219f
  416a02:	dec    esp
  416a03:	test   al,0x8c
  416a05:	lahf   
  416a06:	out    dx,eax
  416a07:	mov    esp,0x480ac778
  416a0c:	mov    dh,0xb3
  416a0e:	add    DWORD PTR [eax-0x6f0fd7ff],esi
  416a14:	fisubr DWORD PTR [ecx+0x50b30a7d]
  416a1a:	aas    
  416a1b:	leave  
  416a1c:	cmc    
  416a1d:	push   DWORD PTR [edx-0x2d]
  416a20:	pop    edi
  416a21:	mov    edx,0xd3eacdaf
  416a26:	sbb    BYTE PTR [ebp+0x6c7bc747],bh
  416a2c:	push   0xe32ea006
  416a31:	mov    ebx,cs
  416a33:	retf   
  416a34:	jb     0x4169e2
  416a36:	sti    
  416a37:	(bad)  
  416a38:	push   cs
  416a39:	fcomp  DWORD PTR [ecx]
  416a3b:	ret    
  416a3c:	retf   
  416a3d:	repz mov eax,ds:0xee55b696
  416a43:	(bad)  [ebp+0x6e67f4d]
  416a49:	(bad)  
  416a4a:	xchg   esi,eax
  416a4b:	fwait
  416a4c:	xlat   BYTE PTR ds:[ebx]
  416a4d:	call   0x7cbfedee
  416a52:	mov    bh,0x96
  416a54:	test   eax,0x4c6acc0b
  416a59:	outs   dx,BYTE PTR ds:[esi]
  416a5a:	loopne 0x416ac9
  416a5c:	stos   BYTE PTR es:[edi],al
  416a5d:	call   0x277ceaaa
  416a62:	push   ebx
  416a63:	inc    ebx
  416a64:	and    eax,DWORD PTR [ecx-0x33]
  416a67:	fiadd  DWORD PTR [ebx-0x3e8360e0]
  416a6d:	out    0x8e,al
  416a6f:	or     eax,0x7648a098
  416a74:	pushf  
  416a75:	push   ebp
  416a76:	sub    ebx,DWORD PTR [edi+0x6f]
  416a79:	bound  eax,QWORD PTR [ecx+0x4634648c]
  416a7f:	imul   edx,ecx,0x70a9ece9
  416a85:	stc    
  416a86:	aas    
  416a87:	xlat   BYTE PTR ds:[ebx]
  416a88:	dec    edi
  416a89:	jno    0x416a7d
  416a8b:	push   ds
  416a8c:	jb     0x416ab4
  416a8e:	out    0xc3,al
  416a90:	cmp    BYTE PTR [edi],ah
  416a92:	inc    ebx
  416a93:	sub    DWORD PTR [ebp-0x47fdee44],ebx
  416a99:	shl    dl,0xb1
  416a9c:	(bad)  
  416a9d:	dec    ebp
  416a9e:	push   ecx
  416a9f:	ret    0x9d01
  416aa2:	xor    DWORD PTR ds:0x8ef97070,edx
  416aa8:	(bad)
  416aac:	mov    ebp,0x9f264b86
  416ab1:	mov    ch,0xd
  416ab3:	add    cl,BYTE PTR [esi-0x74550a23]
  416ab9:	jno    0x416a5f
  416abb:	push   es
  416abc:	lds    ebp,FWORD PTR [esi]
  416abe:	and    eax,eax
  416ac0:	iret   
  416ac1:	mov    eax,0x135d56df
  416ac6:	js     0x416a70
  416ac8:	push   esp
  416ac9:	add    al,0xbe
  416acb:	jbe    0x416ab9
  416acd:	pop    ss
  416ace:	mov    esi,0x4680bc82
  416ad3:	jle    0x416b39
  416ad5:	or     al,0xa3
  416ad7:	ins    DWORD PTR es:[edi],dx
  416ad8:	mov    edx,0x34247897
  416add:	mov    edx,0x369e6460
  416ae2:	mov    ah,0xa5
  416ae4:	xchg   esp,eax
  416ae5:	(bad)  
  416ae7:	(bad)  
  416ae8:	cmp    DWORD PTR ds:0x46611cbe,ebx
  416aee:	push   edi
  416aef:	lea    ebx,[ebx+0x406f191a]
  416af5:	sub    ch,BYTE PTR [edi+0x9b7fd3]
  416afb:	fistp  DWORD PTR [ebx+0x13c8b299]
  416b01:	pushf  
  416b02:	aaa    
  416b03:	pushf  
  416b04:	(bad)  
  416b05:	sbb    ebx,DWORD PTR [edi]
  416b07:	mov    al,0x9f
  416b09:	mov    ch,0x67
  416b0b:	out    0x4e,eax
  416b0d:	les    ebx,FWORD PTR [esi]
  416b0f:	and    esp,DWORD PTR [esi+eiz*1]
  416b12:	hlt    
  416b13:	dec    eax
  416b14:	into   
  416b15:	cli    
  416b16:	jge    0x416b86
  416b18:	xchg   edi,eax
  416b19:	arpl   WORD PTR [ecx],sp
  416b1b:	inc    edi
  416b1c:	shl    edx,cl
  416b1e:	pop    ds
  416b1f:	jne    0x416aca
  416b21:	dec    edx
  416b22:	mov    esp,0x89505226
  416b27:	inc    esi
  416b28:	fwait
  416b29:	ins    BYTE PTR es:[edi],dx
  416b2a:	stc    
  416b2b:	je     0x416b83
  416b2d:	in     al,dx
  416b2e:	jns    0x416acd
  416b30:	sbb    eax,0x434654eb
  416b35:	lds    edi,FWORD PTR [edi]
  416b37:	or     eax,0x6f3c1252
  416b3c:	loope  0x416aef
  416b3e:	sub    esp,DWORD PTR [ecx]
  416b40:	cmp    eax,0x5bea913a
  416b45:	dec    ebp
  416b46:	sub    bl,ah
  416b48:	icebp  
  416b49:	jge    0x416ad6
  416b4b:	and    al,ch
  416b4d:	jns    0x416b6d
  416b4f:	cmc    
  416b50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b51:	xor    eax,eax
  416b53:	fimul  WORD PTR [ebx+0x54]
  416b56:	les    ecx,FWORD PTR [ecx+0x565ddb2c]
  416b5c:	sub    dl,BYTE PTR ds:[ebp-0x52c59275]
  416b63:	loop   0x416b19
  416b65:	fs ret 
  416b67:	not    esp
  416b69:	push   edi
  416b6a:	leave  
  416b6b:	out    dx,eax
  416b6c:	sbb    dh,BYTE PTR [ebp+0x7e]
  416b6f:	pop    eax
  416b70:	jbe    0x416b97
  416b72:	pop    edi
  416b73:	adc    DWORD PTR [edx],eax
  416b75:	pop    eax
  416b76:	lods   eax,DWORD PTR ds:[esi]
  416b77:	xchg   ebx,eax
  416b78:	cld    
  416b79:	nop
  416b7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b7b:	pop    ecx
  416b7c:	mov    edi,0x7665174a
  416b81:	outs   dx,DWORD PTR ds:[esi]
  416b82:	adc    al,0xb3
  416b84:	mov    edx,0x6107bb92
  416b89:	in     al,dx
  416b8a:	jmp    0x7def86f3
  416b8f:	enter  0x3feb,0x6e
  416b93:	ins    DWORD PTR es:[edi],dx
  416b94:	sub    BYTE PTR [esi-0x72d13b6e],bl
  416b9a:	out    0xed,al
  416b9c:	jg     0x416bfd
  416b9e:	mov    esp,0x511ed3c8
  416ba3:	cld    
  416ba4:	and    ebp,DWORD PTR [edx+esi*8-0x5ba4ae2c]
  416bab:	inc    ecx
  416bac:	pop    eax
  416bad:	mov    ebp,0x49b10ca3
  416bb2:	(bad)  
  416bb3:	clc    
  416bb4:	inc    eax
  416bb5:	sub    eax,0xc57af0ce
  416bba:	mov    ah,0x5b
  416bbc:	mov    edx,0xbe64f209
  416bc1:	aad    0xc8
  416bc3:	mov    ds:0xe15be061,eax
  416bc8:	inc    edi
  416bc9:	sbb    DWORD PTR [eax*8-0x23746486],ebp
  416bd0:	xlat   BYTE PTR ds:[ebx]
  416bd1:	pop    esp
  416bd2:	rcr    DWORD PTR [edx-0x65b79674],cl
  416bd8:	(bad)  
  416bda:	dec    di
  416bdc:	pop    es
  416bdd:	or     bh,0xa5
  416be0:	inc    esp
  416be1:	mov    dl,0x68
  416be3:	mov    ebx,DWORD PTR [ebp+eiz*1-0x19]
  416be7:	cmp    al,0x21
  416be9:	mov    DWORD PTR [esp+eax*1],ecx
  416bec:	test   DWORD PTR [ebx],eax
  416bee:	mov    DWORD PTR [edx-0x4b463504],edx
  416bf4:	push   esi
  416bf5:	sar    bl,0xfe
  416bf8:	ret    
  416bf9:	push   ecx
  416bfa:	lods   eax,DWORD PTR ds:[esi]
  416bfb:	outs   dx,BYTE PTR ds:[esi]
  416bfc:	in     eax,0x3a
  416bfe:	call   0xec4ff546
  416c03:	jnp    0x416c80
  416c05:	jl     0x416bc2
  416c07:	aaa    
  416c08:	mov    al,0x5f
  416c0a:	push   es
  416c0b:	stos   DWORD PTR es:[edi],eax
  416c0c:	rcr    ah,1
  416c0e:	dec    esp
  416c0f:	adc    edi,DWORD PTR [eax+0x77]
  416c12:	mov    ds:0x3b84b523,eax
  416c17:	out    0xb2,al
  416c19:	test   al,0x26
  416c1b:	adc    DWORD PTR [edx-0x80],edx
  416c1e:	test   al,0xac
  416c20:	mov    ds:0xd836dfdf,al
  416c25:	stos   DWORD PTR es:[edi],eax
  416c26:	push   ss
  416c27:	js     0x416c1c
  416c29:	shl    BYTE PTR [ebx],cl
  416c2b:	push   cs
  416c2c:	jnp    0x416bfe
  416c2e:	lahf   
  416c2f:	push   ds
  416c30:	mov    ds:0x88839286,eax
  416c35:	xor    BYTE PTR [edi-0xfe0f254],0x5c
  416c3c:	mov    WORD PTR [edi+0x5ab57eb6],ds
  416c42:	outs   dx,BYTE PTR es:[esi]
  416c44:	mov    dl,0x9c
  416c46:	inc    ebp
  416c47:	sbb    eax,0x2639c656
  416c4c:	xchg   ebx,eax
  416c4d:	sbb    edx,DWORD PTR [ebx-0x5e]
  416c50:	(bad)  
  416c52:	sub    BYTE PTR [ecx+0x7c7ec698],0x57
  416c59:	adc    BYTE PTR [ebx+0x163c8a27],ah
  416c5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c60:	rcl    DWORD PTR [edx+0x1bd2ede4],cl
  416c66:	cld    
  416c67:	and    DWORD PTR [ebp+0x3a],0x20
  416c6b:	mov    edx,0x6b53626d
  416c70:	or     bl,ah
  416c72:	mov    ch,0x30
  416c74:	je     0x416c86
  416c76:	arpl   WORD PTR [esp+edi*8],di
  416c79:	clc    
  416c7a:	xchg   edx,eax
  416c7b:	fwait
  416c7c:	test   ebx,eax
  416c7e:	or     edi,ecx
  416c80:	and    edx,ebx
  416c82:	ret    
  416c83:	adc    esp,DWORD PTR [ecx+0x6]
  416c86:	cmp    DWORD PTR [edx],eax
  416c88:	out    dx,eax
  416c89:	(bad)  
  416c8a:	push   edi
  416c8b:	adc    DWORD PTR ds:0x6425224a,ebp
  416c91:	mov    al,0xe8
  416c93:	push   ss
  416c94:	(bad)  
  416c95:	add    al,0xf6
  416c97:	sbb    al,0xd0
  416c99:	cmp    al,0xf2
  416c9b:	mov    eax,0x2049c6af
  416ca0:	dec    esp
  416ca1:	add    DWORD PTR [ebx],ebx
  416ca3:	jnp    0x416c9d
  416ca5:	clc    
  416ca6:	xchg   ebp,eax
  416ca7:	sub    ch,BYTE PTR ds:0x91550c03
  416cad:	(bad)  
  416cae:	and    BYTE PTR [ebx],dl
  416cb0:	and    eax,0xdb313240
  416cb5:	je     0x416c66
  416cb7:	aaa    
  416cb8:	jecxz  0x416d06
  416cba:	loope  0x416ce9
  416cbc:	imul   ebx,edi,0x29013cf5
  416cc2:	pushw  es
  416cc4:	cmp    ch,dl
  416cc6:	jp     0x416c71
  416cc8:	daa    
  416cc9:	mov    ebx,0x362565e3
  416cce:	and    al,dl
  416cd0:	fcomi  st,st(1)
  416cd2:	mov    ds:0xeaa3e8c1,eax
  416cd7:	lods   al,BYTE PTR ds:[esi]
  416cd8:	pop    ss
  416cd9:	xchg   ebx,eax
  416cda:	in     eax,dx
  416cdb:	cmp    BYTE PTR cs:[ebx+eax*2-0x7df85903],ah
  416ce3:	mov    eax,0x8871ac03
  416ce8:	push   esp
  416ce9:	jecxz  0x416c7f
  416ceb:	inc    eax
  416cec:	mov    cl,0x4c
  416cee:	das    
  416cef:	mov    dh,BYTE PTR [edx+0x59]
  416cf2:	rol    DWORD PTR [eax+0x20825130],cl
  416cf8:	mov    edx,?
  416cfa:	mov    esi,DWORD PTR [edx-0x22128e3e]
  416d00:	stc    
  416d01:	dec    ebx
  416d02:	cwde   
  416d03:	xor    ax,WORD PTR [edx+0x426fe04a]
  416d0a:	mov    bl,0xa1
  416d0c:	outs   dx,BYTE PTR ds:[esi]
  416d0d:	cmp    eax,0x9d3f301c
  416d12:	(bad)  
  416d13:	scas   eax,DWORD PTR es:[edi]
  416d14:	cmp    cl,ch
  416d16:	sub    eax,0xd7a81255
  416d1b:	cmp    BYTE PTR ds:0x990a9d4f,dh
  416d21:	dec    esi
  416d22:	pop    edi
  416d23:	sub    edx,DWORD PTR [edi+eiz*2]
  416d26:	add    cl,BYTE PTR [esi]
  416d28:	enter  0x3edf,0x2e
  416d2c:	pushf  
  416d2d:	mov    bl,0x19
  416d2f:	jae    0x416d06
  416d31:	test   dh,cl
  416d33:	clc    
  416d34:	jns    0x416d51
  416d36:	std    
  416d37:	imul   ebp,DWORD PTR [edi-0x7e5929dd],0x14b03893
  416d41:	popf   
  416d42:	cmc    
  416d43:	adc    BYTE PTR [ecx+0x7594341b],ch
  416d49:	jbe    0x416d8a
  416d4b:	repz jge 0x416cef
  416d4e:	clc    
  416d4f:	xchg   BYTE PTR [ecx-0x9ddad1e],bl
  416d55:	xor    eax,0xcf7f1732
  416d5a:	cld    
  416d5b:	aaa    
  416d5c:	add    BYTE PTR [eax-0x3e45fef8],0xfc
  416d63:	pop    edi
  416d64:	push   ss
  416d65:	dec    edx
  416d66:	cwde   
  416d67:	aas    
  416d68:	aad    0xb6
  416d6a:	mov    ebx,0xb8844a6
  416d6f:	(bad)  
  416d70:	arpl   WORD PTR [ebp+0x38],cx
  416d73:	fisubr WORD PTR [edi]
  416d75:	int3   
  416d76:	jp     0x416df1
  416d78:	mov    dl,BYTE PTR [ebx-0x9c1b5b]
  416d7e:	dec    ebx
  416d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d80:	mov    ds:0x688d12c4,eax
  416d85:	pusha  
  416d86:	pop    eax
  416d87:	lock popf 
  416d89:	jp     0x416d64
  416d8b:	jno    0x416e07
  416d8d:	dec    esi
  416d8e:	js     0x416d39
  416d90:	arpl   WORD PTR [ebx+0xd33f154],bp
  416d96:	and    dl,ch
  416d98:	out    0xfd,al
  416d9a:	pop    esp
  416d9b:	pop    esp
  416d9c:	stc    
  416d9d:	pop    edi
  416d9e:	adc    ecx,DWORD PTR cs:[ecx]
  416da1:	dec    esi
  416da2:	std    
  416da3:	push   eax
  416da4:	or     DWORD PTR [ebp-0x55c7b7ee],ebx
  416daa:	hlt    
  416dab:	or     DWORD PTR [ecx-0x5f],esp
  416dae:	fld    DWORD PTR [edi]
  416db0:	inc    esp
  416db1:	inc    ebp
  416db2:	sbb    edx,edi
  416db4:	shl    DWORD PTR [esi],0xa8
  416db7:	shl    DWORD PTR [ecx+0xd805633],cl
  416dbd:	pop    edx
  416dbe:	loope  0x416dda
  416dc0:	ds pop ecx
  416dc2:	loop   0x416de8
  416dc4:	mov    cl,0x5b
  416dc6:	dec    esp
  416dc7:	dec    eax
  416dc8:	icebp  
  416dc9:	pop    edx
  416dca:	fwait
  416dcb:	mov    DWORD PTR [esi+0x35],ebx
  416dce:	in     eax,dx
  416dcf:	pop    ebx
  416dd0:	ror    BYTE PTR [ecx],0x0
  416dd3:	lea    esp,[ebp-0x53f88943]
  416dd9:	sub    eax,0x952ea7e5
  416dde:	inc    ebp
  416ddf:	in     eax,dx
  416de0:	xchg   ecx,eax
  416de1:	jno    0x416e61
  416de3:	cdq    
  416de4:	and    eax,DWORD PTR [edi-0x2d]
  416de7:	nop    DWORD PTR ds:0x1122f7e8
  416dee:	(bad)  
  416def:	push   ebp
  416df0:	mov    al,ds:0xbb467fa5
  416df5:	dec    esi
  416df6:	lahf   
  416df7:	test   eax,0xec525b75
  416dfc:	sub    al,0x3
  416dfe:	rcl    BYTE PTR [edx],0xfe
  416e01:	hlt    
  416e02:	(bad)  
  416e03:	in     eax,dx
  416e04:	les    ecx,FWORD PTR [eax-0x10594df9]
  416e0a:	sub    al,0x74
  416e0c:	out    dx,al
  416e0d:	int    0x39
  416e0f:	pushf  
  416e10:	mov    ds:0xd92cc2f2,al
  416e15:	sti    
  416e16:	hlt    
  416e17:	ret    
  416e18:	xor    al,0xcb
  416e1a:	js     0x416e1c
  416e1c:	pop    esi
  416e1d:	arpl   WORD PTR [ecx+esi*4+0x598c3746],sp
  416e24:	pop    es
  416e25:	inc    edx
  416e26:	xchg   esp,eax
  416e27:	js     0x416ea8
  416e29:	or     al,0x3f
  416e2b:	or     ecx,edx
  416e2d:	loop   0x416e18
  416e2f:	mov    ds:0xa97f95b4,eax
  416e34:	cmp    eax,DWORD PTR [esi+0x28f08b60]
  416e3a:	xchg   ecx,eax
  416e3b:	rcr    ah,0x8c
  416e3e:	and    al,0xbb
  416e40:	imul   edi,esp,0xeff3b38d
  416e46:	popa   
  416e47:	test   eax,0x17c78709
  416e4c:	mov    ch,0xf6
  416e4e:	add    eax,0xb91efe82
  416e53:	adc    BYTE PTR [ecx+0x58],0xeb
  416e57:	hlt    
  416e58:	shr    DWORD PTR [esi-0x4ad19135],cl
  416e5e:	pop    es
  416e5f:	pop    ds
  416e60:	pop    es
  416e61:	dec    esi
  416e62:	dec    ecx
  416e63:	add    ch,BYTE PTR [edi-0x56]
  416e66:	jb     0x416ea8
  416e68:	xor    edi,DWORD PTR [edi]
  416e6a:	fiadd  DWORD PTR [edi]
  416e6c:	ret    0xd97e
  416e6f:	hlt    
  416e70:	retf   
  416e71:	outs   dx,BYTE PTR ds:[esi]
  416e72:	pop    ebx
  416e73:	sahf   
  416e74:	xchg   ebp,eax
  416e75:	push   ecx
  416e76:	nop
  416e77:	iret   
  416e78:	lods   eax,DWORD PTR ds:[esi]
  416e79:	stos   BYTE PTR es:[edi],al
  416e7a:	pop    ecx
  416e7b:	jge    0x416edd
  416e7d:	xchg   ebx,eax
  416e7e:	call   0x7808:0xfc67e609
  416e85:	jmp    0xf8c1d4cb
  416e8a:	xchg   edx,eax
  416e8b:	repz mov ds:0x80829cd5,eax
  416e91:	xor    eax,0xee981b87
  416e96:	mov    al,0x3f
  416e98:	(bad)  {k3}{z}
  416e9d:	popf   
  416e9e:	pusha  
  416e9f:	sbb    DWORD PTR [edi+0x6c],edi
  416ea2:	adc    al,0x9a
  416ea4:	xchg   edi,eax
  416ea5:	xchg   edi,eax
  416ea6:	or     al,0x5f
  416ea8:	xchg   ebp,eax
  416ea9:	fbld   TBYTE PTR [edi+0x46376357]
  416eaf:	add    al,0xc0
  416eb1:	lds    ebp,FWORD PTR [ecx]
  416eb3:	and    bl,BYTE PTR [ecx-0x25]
  416eb6:	pop    eax
  416eb7:	aas    
  416eb8:	push   ecx
  416eb9:	sti    
  416eba:	mov    ds:0x69ebc4be,al
  416ebf:	mov    fs,WORD PTR [eax+0x13bced8a]
  416ec5:	scas   al,BYTE PTR es:[edi]
  416ec6:	inc    esp
  416ec7:	rcr    BYTE PTR [edi],0x6
  416eca:	mov    bh,0xa
  416ecc:	call   FWORD PTR [edi-0x5c9e880f]
  416ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ed3:	scas   eax,DWORD PTR es:[edi]
  416ed4:	stc    
  416ed5:	mov    BYTE PTR [ebp-0x431e0f20],dl
  416edb:	pushf  
  416edc:	mov    al,0x62
  416ede:	nop
  416edf:	jo     0x416e84
  416ee1:	(bad)  
  416ee2:	repz and al,0x5b
  416ee5:	mov    bh,0x14
  416ee7:	mov    edx,0xfad37879
  416eec:	mov    ebp,0x1e2d9590
  416ef1:	lods   eax,DWORD PTR ds:[esi]
  416ef2:	shrd   DWORD PTR [edi+0x79],ebp,0x8
  416ef7:	fld    DWORD PTR [edi]
  416ef9:	dec    DWORD PTR [edi-0x3c]
  416efc:	mov    al,ds:0xd73aae24
  416f01:	call   esp
  416f03:	pop    es
  416f04:	xor    dl,0x9d
  416f07:	jge    0x416f09
  416f09:	xchg   BYTE PTR [ebp-0x2b],bl
  416f0c:	sub    dl,dl
  416f0e:	pop    ebp
  416f0f:	fsub   st(2),st
  416f11:	inc    eax
  416f12:	cwde   
  416f13:	add    eax,0x6d877f90
  416f18:	retf   
  416f19:	inc    esp
  416f1a:	call   0xb42dcaa2
  416f1f:	push   0x2e66998a
  416f24:	call   0xb90bed7a
  416f29:	ss pushf 
  416f2b:	adc    BYTE PTR [edi+0x625f319d],0xd1
  416f32:	enter  0x7ee6,0x5d
  416f36:	mov    esp,0x94a6215
  416f3b:	inc    ebx
  416f3c:	dec    esi
  416f3d:	shr    DWORD PTR [ebx-0x6a],1
  416f40:	jecxz  0x416f88
  416f42:	push   edi
  416f43:	sub    eax,0x38c5ea2f
  416f48:	add    eax,0xe42069a6
  416f4d:	mov    ch,0x7d
  416f4f:	add    ch,ch
  416f51:	mov    eax,0x7bb1a686
  416f56:	inc    eax
  416f57:	cs in  eax,0x73
  416f5a:	jl     0x416f38
  416f5c:	(bad)  
  416f5d:	cmp    BYTE PTR [esi],cl
  416f5f:	or     ecx,DWORD PTR [ebp-0x65]
  416f62:	mov    WORD PTR [ebp-0x36057bf6],fs
  416f68:	and    edx,DWORD PTR [edx+0x5fa23c81]
  416f6e:	in     eax,0x9e
  416f70:	cmp    BYTE PTR [edx],ch
  416f72:	(bad)  
  416f73:	push   esi
  416f74:	retf   0x9191
  416f77:	aas    
  416f78:	mov    ch,0x27
  416f7a:	mov    eax,ds:0x8a5165cb
  416f7f:	imul   ecx,DWORD PTR [eax-0x6a],0xffffffa2
  416f83:	dec    esi
  416f84:	sahf   
  416f85:	cs in  eax,dx
  416f87:	aam    0x80
  416f89:	push   esi
  416f8a:	repnz out dx,al
  416f8c:	out    dx,al
  416f8d:	mov    ebx,0xe138ac24
  416f92:	jg     0x416ffe
  416f94:	push   ecx
  416f95:	das    
  416f96:	xchg   edx,ecx
  416f98:	pop    ebp
  416f99:	sbb    bh,BYTE PTR [ecx-0x181f6437]
  416f9f:	sti    
  416fa0:	(bad)  
  416fa1:	and    bl,BYTE PTR ds:0x917d9df1
  416fa7:	repz adc BYTE PTR [esi+0x6d08c5d5],0x26
  416faf:	xchg   ecx,eax
  416fb0:	mov    ah,0x5
  416fb2:	cmp    BYTE PTR [ebx],0x64
  416fb5:	fwait
  416fb6:	repnz pop ds
  416fb8:	popa   
  416fb9:	stos   BYTE PTR es:[edi],al
  416fba:	jp     0x417003
  416fbc:	out    dx,al
  416fbd:	and    DWORD PTR [edx-0x3e483f4d],0x83356f81
  416fc7:	inc    esi
  416fc8:	sub    eax,0x67bb8c61
  416fcd:	xor    cl,BYTE PTR [esi+0x56d258d2]
  416fd3:	test   BYTE PTR [ebx-0x38b98555],ah
  416fd9:	mov    dh,0x3e
  416fdb:	or     ah,BYTE PTR [eax-0x35]
  416fde:	or     al,0x49
  416fe0:	addr16 mov dh,0x1a
  416fe3:	mov    bl,0x8a
  416fe5:	sbb    ch,BYTE PTR [ebx-0x54]
  416fe8:	int3   
  416fe9:	jg     0x41704c
  416feb:	test   al,0xdb
  416fed:	or     ecx,eax
  416fef:	jae    0x417049
  416ff1:	mov    edx,0x7f267da5
  416ff6:	in     al,dx
  416ff7:	lds    eax,FWORD PTR [ebp-0x2b]
  416ffa:	adc    al,0xd6
  416ffc:	les    esi,FWORD PTR [esi+0x5bacb211]
  417002:	mov    ebp,0x74249f2
  417007:	jle    0x417036
  417009:	lods   eax,DWORD PTR ds:[esi]
  41700a:	jmp    0xec10:0xd5e4bd7c
  417011:	out    dx,eax
  417012:	pop    edi
  417013:	call   FWORD PTR [ebx+edx*1+0x2edf2a8b]
  41701a:	gs rcl edx,cl
  41701d:	aam    0x7e
  41701f:	vorpd  xmm7,xmm7,xmm3
  417023:	cdq    
  417024:	aaa    
  417025:	inc    ebx
  417026:	add    eax,0x6b251c72
  41702b:	add    al,0xb8
  41702d:	into   
  41702e:	sti    
  41702f:	push   ss
  417030:	add    DWORD PTR [ecx],0x56afbf11
  417036:	jae    0x416fbe
  417038:	or     esi,DWORD PTR [eax+0x32]
  41703b:	aad    0x41
  41703d:	shl    BYTE PTR [ecx],cl
  41703f:	pop    edi
  417040:	mov    ch,0xaa
  417042:	jge    0x4170ac
  417044:	sub    al,0x4f
  417046:	into   
  417047:	dec    ebp
  417048:	cli    
  417049:	pop    es
  41704a:	ins    DWORD PTR es:[edi],dx
  41704b:	push   edi
  41704c:	cmp    ch,ch
  41704e:	fistp  WORD PTR [esi+esi*2]
  417051:	or     al,0x26
  417053:	ja     0x417033
  417055:	pop    ebp
  417056:	and    DWORD PTR [eax+eiz*4-0x4],edx
  41705a:	xchg   ecx,eax
  41705b:	inc    eax
  41705c:	in     al,0xa
  41705e:	jp     0x41703d
  417060:	fldenv [ebx-0x54]
  417063:	mov    al,ds:0x8bde74b
  417068:	cmp    DWORD PTR [esi],ebx
  41706a:	cwde   
  41706b:	lods   eax,DWORD PTR ds:[esi]
  41706c:	sub    BYTE PTR [ebx+0x76145c5e],cl
  417072:	add    DWORD PTR [ebp+0x10],eax
  417075:	leave  
  417076:	mul    BYTE PTR [ebp-0x15d8f63a]
  41707c:	cmp    BYTE PTR [ebp+0xb12914a],dl
  417082:	fisubr DWORD PTR [edx]
  417084:	shl    DWORD PTR [esi],0x4c
  417087:	iret   
  417088:	iret   
  417089:	cs sbb al,0xea
  41708c:	sub    ebp,DWORD PTR [edx]
  41708e:	pop    es
  41708f:	cmp    BYTE PTR [edi],ch
  417091:	mov    bl,0x36
  417093:	sbb    edi,DWORD PTR [eax]
  417095:	xor    eax,0x84e3202
  41709a:	out    0x36,al
  41709c:	iret   
  41709d:	pop    ebp
  41709e:	adc    DWORD PTR [edi],edx
  4170a0:	inc    esi
  4170a1:	(bad)
  4170a5:	cmc    
  4170a6:	push   esp
  4170a7:	mov    dl,0xa9
  4170a9:	xchg   ebx,eax
  4170aa:	xchg   edx,eax
  4170ab:	dec    esp
  4170ac:	jge    0x41712c
  4170ae:	mov    ecx,0x903185ce
  4170b3:	(bad)
  4170b6:	pop    es
  4170b7:	fcomp  DWORD PTR [ebp+0x578c0a8]
  4170bd:	not    BYTE PTR [ecx+0x7d]
  4170c0:	dec    esi
  4170c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170c2:	loopne 0x4170d9
  4170c4:	add    BYTE PTR [eax],ch
  4170c6:	ffree  st(6)
  4170c8:	pop    ss
  4170c9:	scas   eax,DWORD PTR es:[edi]
  4170ca:	sbb    al,0x28
  4170cc:	or     eax,0x6b4a512f
  4170d1:	push   cs
  4170d2:	rol    BYTE PTR [ebp+0x7667e3ca],1
  4170d8:	cdq    
  4170d9:	ins    BYTE PTR es:[edi],dx
  4170da:	repnz pop ecx
  4170dc:	jmp    0x19025a14
  4170e1:	outs   dx,DWORD PTR ds:[esi]
  4170e2:	fadd   DWORD PTR [ebp+0x68ec8456]
  4170e8:	inc    ebx
  4170e9:	int    0x34
  4170eb:	add    esi,DWORD PTR [esi-0x215f9154]
  4170f1:	cmp    eax,DWORD PTR [esi+0x1eb643a3]
  4170f7:	sub    al,0xd6
  4170f9:	popa   
  4170fa:	mov    ecx,0x5bdaecd9
  4170ff:	repnz ss pop edi
  417102:	xor    BYTE PTR [esi+0x63],dh
  417105:	mov    edi,0xdd27a1fe
  41710a:	lahf   
  41710b:	inc    ebp
  41710c:	lea    esp,[eax+0x6aca64e0]
  417112:	and    al,0x12
  417114:	xor    DWORD PTR [ebx],0xfc3e720f
  41711a:	push   ecx
  41711b:	pop    ebx
  41711c:	lock dec esp
  41711e:	dec    eax
  41711f:	test   al,0x6d
  417121:	push   ds
  417122:	xor    esp,eax
  417124:	cmp    ebp,ecx
  417126:	xor    dh,BYTE PTR [esi+0x6d3379a4]
  41712c:	pop    ecx
  41712d:	and    bh,BYTE PTR [edx]
  41712f:	and    BYTE PTR [eax-0x770f143b],bh
  417135:	test   al,0xd1
  417137:	enter  0x84e4,0x29
  41713b:	xor    dh,dh
  41713d:	sub    ah,al
  41713f:	(bad)  
  417140:	jp     0x4171aa
  417142:	loop   0x417173
  417144:	outs   dx,DWORD PTR ds:[esi]
  417145:	inc    eax
  417146:	out    dx,eax
  417147:	jo     0x417115
  417149:	test   ah,bh
  41714b:	sar    DWORD PTR [edx],cl
  41714d:	push   eax
  41714e:	adc    BYTE PTR [ecx-0x5dae6338],dl
  417154:	shr    BYTE PTR [ebx-0x55],cl
  417157:	retf   0xce51
  41715a:	ins    BYTE PTR es:[edi],dx
  41715b:	mov    ebp,0x7b34ba81
  417160:	ins    BYTE PTR es:[edi],dx
  417161:	imul   ebx,DWORD PTR [esi],0x46c55940
  417167:	aad    0xdc
  417169:	inc    edx
  41716a:	fcmove st,st(3)
  41716c:	imul   edi,DWORD PTR [edx],0x22
  41716f:	and    DWORD PTR [edi-0x38b3425c],0xffffffe9
  417176:	in     eax,dx
  417177:	jg     0x4171c5
  417179:	jmp    0x9c44b6c
  41717e:	pop    ebp
  41717f:	dec    eax
  417180:	mul    BYTE PTR [ebx+ecx*8+0x4b012846]
  417187:	mov    ebp,0x1f23bdee
  41718c:	fldcw  WORD PTR [ebx-0x65]
  41718f:	push   ss
  417190:	or     dl,0x75
  417193:	scas   al,BYTE PTR es:[edi]
  417194:	dec    eax
  417195:	xor    BYTE PTR [ecx+ebp*1-0x51],0x6c
  41719a:	xor    esp,edx
  41719c:	fdiv   st(7),st
  41719e:	mov    edx,0x619697f8
  4171a3:	xor    edx,0xd4093ad0
  4171a9:	add    esi,DWORD PTR [edi-0x26]
  4171ac:	sbb    BYTE PTR [ecx+0x25],ch
  4171af:	jb     0x41720a
  4171b1:	xor    cl,BYTE PTR [esi]
  4171b3:	inc    esp
  4171b4:	xchg   edx,eax
  4171b5:	and    bh,BYTE PTR [edi]
  4171b7:	out    dx,eax
  4171b8:	xchg   ecx,eax
  4171b9:	xchg   BYTE PTR [esi],al
  4171bb:	shr    BYTE PTR [esi-0x3f],0x1f
  4171bf:	add    ah,BYTE PTR [eax]
  4171c1:	dec    esp
  4171c2:	mov    cs,WORD PTR [ebx+0x52]
  4171c5:	loope  0x41722a
  4171c7:	mov    esi,0xd71278f4
  4171cc:	scas   eax,DWORD PTR es:[edi]
  4171cd:	popa   
  4171ce:	repnz outs dx,DWORD PTR gs:[esi]
  4171d1:	repnz lds eax,FWORD PTR [eax]
  4171d4:	out    0x26,eax
  4171d6:	daa    
  4171d7:	and    al,0x4f
  4171d9:	jge    0x41723b
  4171db:	pop    edi
  4171dc:	mov    BYTE PTR [ebx-0x7],cl
  4171df:	retf   0xdb20
  4171e2:	mov    dh,0x35
  4171e4:	add    al,0x5b
  4171e6:	xlat   BYTE PTR ds:[ebx]
  4171e7:	or     eax,DWORD PTR [eax+0x43e45d44]
  4171ed:	xchg   ecx,eax
  4171ee:	(bad)  
  4171ef:	jl     0x4171eb
  4171f1:	not    BYTE PTR ds:0x999c53e8
  4171f7:	push   edx
  4171f8:	in     eax,0x19
  4171fa:	jne    0x4171a0
  4171fc:	add    dh,BYTE PTR [esi]
  4171fe:	pop    esp
  4171ff:	stos   DWORD PTR es:[edi],eax
  417200:	shr    DWORD PTR [ebx+ebx*4-0x25],1
  417204:	iret   
  417205:	add    DWORD PTR ds:0x2289c667,edx
  41720b:	mov    al,ds:0x50a9904b
  417210:	ins    BYTE PTR es:[edi],dx
  417211:	(bad)  
  417212:	pop    cx
  417214:	pop    esi
  417215:	int    0xbf
  417217:	ds xchg edi,eax
  417219:	push   es
  41721a:	pushf  
  41721b:	inc    esi
  41721c:	inc    edx
  41721d:	sub    BYTE PTR [eax],cl
  41721f:	push   edx
  417220:	and    BYTE PTR [esi+0x635d3884],bh
  417226:	and    BYTE PTR [esi+0x1307a5b1],dh
  41722c:	push   es
  41722d:	dec    ebx
  41722e:	out    0xa6,eax
  417230:	xor    ebp,esi
  417232:	or     eax,0x90ef680c
  417237:	je     0x4171d6
  417239:	mov    dh,0xe1
  41723b:	mov    edi,0x232385cf
  417240:	aas    
  417241:	fwait
  417242:	repz pop es
  417244:	sbb    bh,BYTE PTR [esi]
  417246:	popa   
  417247:	or     BYTE PTR [eax],0xbc
  41724a:	mov    eax,0xc4f44806
  41724f:	mov    al,0x3a
  417251:	gs addr16 out 0x68,al
  417255:	pop    ecx
  417256:	ficom  WORD PTR [esp+ebx*4]
  417259:	ret    
  41725a:	(bad)  
  41725c:	xor    al,0xa3
  41725e:	jmp    0x417232
  417260:	inc    edx
  417261:	fstp   DWORD PTR [ecx-0x5c5cb076]
  417267:	dec    eax
  417268:	and    BYTE PTR [ebp-0x40e4b182],ah
  41726e:	loope  0x417223
  417270:	test   al,0x86
  417272:	dec    esi
  417273:	push   0xfffffffd
  417275:	add    eax,0x8c174d4e
  41727a:	pop    ecx
  41727b:	aas    
  41727c:	cmp    edx,ecx
  41727e:	out    0x52,eax
  417280:	add    edx,edi
  417282:	test   DWORD PTR [ecx+0x2d6b2094],ebp
  417288:	aad    0x62
  41728a:	push   ds
  41728b:	mov    bh,0xd3
  41728d:	inc    esp
  41728e:	add    ebp,DWORD PTR [ebx]
  417290:	adc    BYTE PTR [edi],0x50
  417293:	lea    edx,[ebp-0x6156b6d2]
  417299:	adc    bl,0x77
  41729c:	xchg   ecx,eax
  41729d:	jl     0x4172da
  41729f:	test   bl,bl
  4172a1:	xor    DWORD PTR [eax+0x30006f05],edi
  4172a7:	sbb    DWORD PTR [ebx-0x7c],edx
  4172aa:	fldcw  WORD PTR [edx-0x6b]
  4172ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172ae:	fdiv   QWORD PTR [edi+0x5f]
  4172b1:	in     eax,dx
  4172b2:	lock sub eax,DWORD PTR [ecx]
  4172b5:	loop   0x417265
  4172b7:	push   ebp
  4172b8:	add    al,0x2b
  4172ba:	mov    BYTE PTR [edx-0x3d],bh
  4172bd:	inc    esp
  4172be:	stos   DWORD PTR es:[edi],eax
  4172bf:	jmp    FWORD PTR [edx+eax*1]
  4172c2:	xchg   ebx,eax
  4172c3:	jae    0x41724a
  4172c5:	jbe    0x4172d1
  4172c7:	dec    esi
  4172c8:	in     al,0xc7
  4172ca:	push   edx
  4172cb:	cmp    eax,0x6b01f87b
  4172d0:	jo     0x41726f
  4172d2:	xor    DWORD PTR [ecx],edi
  4172d4:	pop    eax
  4172d5:	dec    eax
  4172d6:	mov    eax,0xfa75144d
  4172db:	hlt    
  4172dc:	fadd   DWORD PTR ds:0x4b457571
  4172e2:	loope  0x41733e
  4172e4:	sti    
  4172e5:	adc    eax,0xb833eb4
  4172ea:	sahf   
  4172eb:	inc    esi
  4172ec:	push   edi
  4172ed:	pop    ss
  4172ee:	pop    esp
  4172ef:	push   eax
  4172f0:	add    BYTE PTR [edi+0x65],ah
  4172f3:	fcmovb st,st(3)
  4172f5:	bound  ebp,QWORD PTR [eax+ebp*4-0x72]
  4172f9:	stos   BYTE PTR es:[edi],al
  4172fa:	icebp  
  4172fb:	repnz outs dx,DWORD PTR ds:[esi]
  4172fd:	push   0x13bdf514
  417302:	xor    al,dh
  417304:	mov    al,BYTE PTR [eax+0x2f]
  417307:	xor    esp,DWORD PTR ds:0xacb50fd2
  41730d:	cmp    bh,cl
  41730f:	int    0x44
  417311:	jmp    0x417344
  417313:	jns    0x417308
  417315:	sbb    DWORD PTR [esi-0x57],esp
  417318:	and    DWORD PTR [edi],esi
  41731a:	ins    BYTE PTR es:[edi],dx
  41731b:	inc    esp
  41731c:	mov    ah,0xbc
  41731e:	or     bl,BYTE PTR [edi]
  417320:	aaa    
  417321:	inc    DWORD PTR [esi+ebx*2]
  417324:	sar    BYTE PTR [ebx+edi*8+0x413f106b],1
  41732b:	leave  
  41732c:	add    esp,DWORD PTR [edi-0x7589e1b9]
  417332:	pop    ds
  417333:	loop   0x41738d
  417335:	or     edx,ebp
  417337:	dec    edi
  417338:	jmp    0x4172c0
  41733a:	inc    eax
  41733b:	sbb    dh,BYTE PTR [ebx+0x67]
  41733e:	outs   dx,BYTE PTR ds:[esi]
  41733f:	jmp    0x28a1:0x9302d59c
  417346:	or     DWORD PTR [ecx],ebp
  417348:	in     eax,0xaa
  41734a:	test   BYTE PTR [edx-0x4941eae4],0xd8
  417351:	imul   ecx,DWORD PTR [edx],0x7c
  417354:	and    ecx,DWORD PTR [edx+0x5e]
  417357:	adc    eax,0x23cba7db
  41735c:	sub    al,BYTE PTR [edi]
  41735e:	or     eax,0xf9f905a4
  417363:	and    al,0xeb
  417365:	jae    0x4173a5
  417367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417368:	inc    edi
  417369:	(bad)  
  41736a:	fbld   TBYTE PTR [edi+0x1f]
  41736d:	popf   
  41736e:	push   ebp
  41736f:	aad    0x33
  417371:	aas    
  417372:	lods   eax,DWORD PTR gs:[esi]
  417374:	cmc    
  417375:	es int3 
  417377:	std    
  417378:	xchg   ebx,eax
  417379:	ja     0x41733a
  41737b:	ret    0x169a
  41737e:	retf   
  41737f:	jno    0x4173a5
  417381:	out    dx,al
  417382:	xchg   esi,eax
  417383:	or     BYTE PTR [ebx-0x2a],dl
  417386:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  417388:	mov    edx,0xd633d952
  41738d:	mov    dl,0x4d
  41738f:	or     bl,BYTE PTR [esi+0x17cc2cc]
  417395:	mov    edx,0x54789340
  41739a:	pop    edi
  41739b:	mov    al,ds:0x5eb310eb
  4173a0:	(bad)  
  4173a2:	sbb    BYTE PTR [ecx-0x1b36bea6],cl
  4173a8:	sahf   
  4173a9:	out    dx,eax
  4173aa:	xlat   BYTE PTR ds:[ebx]
  4173ab:	call   0x8e90:0x122504dc
  4173b2:	pop    ebx
  4173b3:	sar    DWORD PTR [ebx-0x6b],1
  4173b6:	push   cs
  4173b7:	and    ebp,DWORD PTR [edi]
  4173b9:	popf   
  4173ba:	jbe    0x417428
  4173bc:	sbb    DWORD PTR [ecx],0xffffff89
  4173bf:	xchg   edi,eax
  4173c0:	test   al,0x1c
  4173c2:	xlat   BYTE PTR ds:[ebx]
  4173c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173c4:	jle    0x417362
  4173c6:	mov    WORD PTR [edx],?
  4173c8:	push   edi
  4173c9:	jns    0x4173e9
  4173cb:	sub    ebp,DWORD PTR [edx+esi*8]
  4173ce:	sub    al,0x2
  4173d0:	call   DWORD PTR [eax+0x6266c8b6]
  4173d6:	(bad)  
  4173d7:	lahf   
  4173d8:	mov    ecx,0xbe5a35df
  4173dd:	inc    ebp
  4173de:	pop    edi
  4173df:	in     eax,dx
  4173e0:	sahf   
  4173e1:	fcomp  QWORD PTR [esi]
  4173e3:	xchg   edi,eax
  4173e4:	mov    edx,0x549d3473
  4173e9:	inc    esi
  4173ea:	outs   dx,BYTE PTR ss:[esi]
  4173ec:	jle    0x4173fa
  4173ee:	call   0x20257286
  4173f3:	mov    dh,0x57
  4173f5:	xor    edi,esi
  4173f7:	rol    DWORD PTR [ebx],1
  4173f9:	dec    ebx
  4173fa:	sahf   
  4173fb:	aas    
  4173fc:	xchg   ecx,eax
  4173fd:	inc    eax
  4173fe:	adc    eax,0xefbd5142
  417403:	jmp    0x3ce4:0x39435763
  41740a:	loopne 0x41744d
  41740c:	xchg   edi,eax
  41740d:	push   edx
  41740e:	mov    ds:0x66e40168,eax
  417413:	sahf   
  417414:	arpl   bx,si
  417416:	bound  eax,QWORD PTR [eax+0x11]
  417419:	iret   
  41741a:	lods   al,BYTE PTR ds:[esi]
  41741b:	sbb    edi,DWORD PTR [edi-0x74dd2db5]
  417421:	inc    ecx
  417422:	adc    ch,BYTE PTR [edi-0x2ca392f7]
  417428:	xlat   BYTE PTR ds:[ebx]
  417429:	and    esi,DWORD PTR [edx+eiz*8]
  41742c:	out    dx,al
  41742d:	scas   eax,DWORD PTR es:[edi]
  41742e:	and    BYTE PTR [edx+0x4ae2c174],0x22
  417435:	(bad)  
  417436:	and    eax,0x698394ea
  41743b:	push   cs
  41743c:	dec    esi
  41743d:	inc    edx
  41743e:	shl    DWORD PTR [ebp-0xd3e82e],1
  417444:	jg     0x41744c
  417446:	mov    dh,0xae
  417448:	fisttp QWORD PTR [ebp+0x15]
  41744b:	out    0xfd,eax
  41744d:	jns    0x4174bc
  41744f:	xlat   BYTE PTR ds:[ebx]
  417450:	repnz outs dx,DWORD PTR ds:[esi]
  417452:	jge    0x4174a7
  417454:	mov    ds:0x8cceb311,al
  417459:	cld    
  41745a:	lock xor eax,0xe04bc4f3
  417460:	push   0xffffff8c
  417462:	add    edi,DWORD PTR [esi+0x7f]
  417465:	pop    ss
  417466:	das    
  417467:	fwait
  417468:	aaa    
  417469:	int3   
  41746a:	icebp  
  41746b:	jmp    0x8214:0xbfb6a1e0
  417472:	in     al,dx
  417473:	push   eax
  417474:	cmp    BYTE PTR [edi+0x191a0037],ch
  41747a:	push   ebp
  41747b:	mov    eax,ds:0xfe182c14
  417480:	jmp    0xf480:0xb78d1868
  417487:	enter  0xb2d1,0x24
  41748b:	mov    edi,0x348aa617
  417490:	xor    eax,0x7e8f2598
  417495:	das    
  417496:	ja     0x4174a9
  417498:	adc    DWORD PTR ds:0xa28717e,edx
  41749e:	push   ebx
  41749f:	out    dx,al
  4174a0:	(bad)  
  4174a1:	fistp  QWORD PTR [ecx+ebp*1-0x6c]
  4174a5:	add    dl,BYTE PTR [ecx-0x5e02cacf]
  4174ab:	cmp    al,0xff
  4174ad:	int3   
  4174ae:	fbstp  TBYTE PTR [ebx]
  4174b0:	ins    DWORD PTR es:[edi],dx
  4174b1:	pop    ss
  4174b2:	pusha  
  4174b3:	or     dl,ah
  4174b5:	je     0x4174f5
  4174b7:	and    al,0x7
  4174b9:	cmp    al,0xa5
  4174bb:	pop    esi
  4174bc:	dec    edx
  4174bd:	xchg   esi,eax
  4174be:	mov    edx,0xa09ba39e
  4174c3:	inc    ecx
  4174c4:	and    al,0x29
  4174c6:	push   esp
  4174c7:	fild   DWORD PTR [edi+0x5e3f6ed0]
  4174cd:	add    esi,DWORD PTR es:[edx-0x59]
  4174d1:	mov    WORD PTR [ebx],ss
  4174d3:	push   edx
  4174d4:	dec    esp
  4174d5:	push   0x69b52ca0
  4174da:	cs aaa 
  4174dc:	xor    eax,DWORD PTR cs:[edi-0x76]
  4174e0:	push   ecx
  4174e1:	jge    0x417490
  4174e3:	cdq    
  4174e4:	mov    ecx,esi
  4174e6:	aam    0x35
  4174e8:	push   0x17
  4174ea:	sub    BYTE PTR [esi-0x9eb8747],ah
  4174f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174f1:	xor    DWORD PTR [ebx-0x3ad14998],0xffffff8d
  4174f8:	inc    eax
  4174f9:	push   edx
  4174fa:	mov    ebx,0xeb3bb042
  4174ff:	aad    0x57
  417501:	jnp    0x417517
  417503:	jmp    0x44d4:0x83a13d20
  41750a:	dec    esp
  41750b:	gs add al,bl
  41750e:	leave  
  41750f:	adc    eax,0x5d0a5b53
  417514:	sub    eax,0x55779717
  417519:	sub    ah,BYTE PTR [edx+0x60]
  41751c:	inc    esp
  41751d:	into   
  41751e:	out    dx,al
  41751f:	jmp    0x9b62:0x28f0116d
  417526:	imul   esi,DWORD PTR [ecx+0x3b9df212],0x12
  41752d:	inc    edi
  41752e:	adc    al,0xbd
  417530:	inc    ebx
  417531:	cmp    BYTE PTR [ebp-0x1d],dl
  417534:	int    0xae
  417536:	mov    ds:0x6d03a268,eax
  41753b:	mov    ds:0x19150f,eax
  417540:	test   eax,0x8f1634a1
  417545:	loope  0x417519
  417547:	mov    bh,0x8b
  417549:	(bad)  
  41754a:	cli    
  41754b:	add    ch,bl
  41754d:	les    ecx,FWORD PTR [edx]
  41754f:	dec    edi
  417550:	push   eax
  417551:	push   ebx
  417552:	adc    eax,0xbcbda9ff
  417557:	sub    BYTE PTR [ebp+0xb],dl
  41755a:	or     ecx,ecx
  41755c:	lahf   
  41755d:	jl     0x417531
  41755f:	icebp  
  417560:	or     ch,BYTE PTR fs:[eax+0x97636f8]
  417567:	jmp    0x308756e
  41756c:	cmp    eax,0xd77d9749
  417571:	adc    DWORD PTR [ecx-0x18],esp
  417574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417575:	and    ch,BYTE PTR [eax+0xa3af7c5]
  41757b:	inc    esp
  41757c:	sbb    DWORD PTR [edi-0x1fa17f0f],0xac6e021e
  417586:	sti    
  417587:	dec    edx
  417588:	dec    esp
  417589:	test   BYTE PTR [eax+0x45],ch
  41758c:	cmp    bl,dl
  41758e:	jmp    0x417545
  417590:	pop    ebx
  417591:	mov    bh,0x9f
  417593:	cld    
  417594:	mov    ecx,0xb157c223
  417599:	push   edi
  41759a:	jge    0x4175cf
  41759c:	fiadd  WORD PTR ds:0x2543c23d
  4175a2:	push   ss
  4175a3:	into   
  4175a4:	adc    BYTE PTR [eax],al
  4175a6:	aad    0x57
  4175a8:	scas   al,BYTE PTR es:[edi]
  4175a9:	lock jp 0x417590
  4175ac:	outs   dx,BYTE PTR ds:[esi]
  4175ad:	mov    eax,0x443969e0
  4175b2:	pop    edx
  4175b3:	std    
  4175b4:	fs pop edx
  4175b6:	push   ebx
  4175b7:	cmp    ch,bh
  4175b9:	imul   edx,DWORD PTR [si+0x1f],0x3
  4175be:	add    eax,0x5fad705c
  4175c3:	jle    0x4175ac
  4175c5:	mov    DWORD PTR [esi-0x446f1bb2],ecx
  4175cb:	dec    ebp
  4175cc:	shl    BYTE PTR [ebp-0x10],cl
  4175cf:	out    0x71,al
  4175d1:	leave  
  4175d2:	mov    bl,0x3a
  4175d4:	pop    ebx
  4175d5:	xchg   ecx,eax
  4175d6:	hlt    
  4175d7:	(bad)  
  4175d8:	gs jne 0x4175a9
  4175db:	and    cl,ch
  4175dd:	sub    eax,0xe1e80e33
  4175e2:	aad    0x4d
  4175e4:	jb     0x4175b5
  4175e6:	add    BYTE PTR [ebp-0x18],cl
  4175e9:	icebp  
  4175ea:	fucomip st,st(6)
  4175ec:	es es sub eax,0x46245f75
  4175f3:	jg     0x417608
  4175f5:	jl     0x41759a
  4175f7:	fistp  DWORD PTR [edi]
  4175f9:	stc    
  4175fa:	or     DWORD PTR [ecx+0x1f5255fd],eax
  417600:	fucomi st,st(5)
  417602:	xchg   esp,eax
  417603:	pop    edi
  417604:	int    0x57
  417606:	inc    edi
  417607:	inc    ecx
  417608:	inc    esi
  417609:	ja     0x41764b
  41760b:	and    eax,0xdd347764
  417610:	cmp    ah,BYTE PTR [esi-0x5bc1413f]
  417616:	cmp    dh,0xbd
  417619:	hlt    
  41761a:	loopne 0x4175a7
  41761c:	pop    edx
  41761d:	pop    ecx
  41761e:	pop    eax
  41761f:	cmp    bl,dl
  417621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417622:	xchg   esp,eax
  417623:	push   esp
  417624:	shl    DWORD PTR [edi+0x10],1
  417627:	push   esi
  417628:	repz rcr BYTE PTR ds:0x27ffbbf3,cl
  41762f:	push   edx
  417630:	xchg   edx,eax
  417631:	jl     0x417645
  417633:	shr    ecx,1
  417635:	or     eax,0x90a2e42a
  41763a:	jp     0x417677
  41763c:	jo     0x41761f
  41763e:	mov    ds:0xcd0ff0b,al
  417643:	scas   eax,DWORD PTR es:[edi]
  417644:	inc    esi
  417645:	into   
  417646:	jo     0x4175cb
  417648:	adc    al,0x63
  41764a:	push   esp
  41764b:	mov    eax,ds:0xd814100f
  417650:	lods   eax,DWORD PTR ds:[esi]
  417651:	(bad)  
  417652:	xchg   edx,eax
  417653:	cmp    eax,0x9782201f
  417658:	sub    BYTE PTR [edi-0x56],al
  41765b:	mov    ebp,ebp
  41765d:	sub    dl,BYTE PTR [edi]
  41765f:	(bad)  
  417660:	in     al,0xfc
  417662:	cmp    eax,0xdea9c289
  417667:	add    BYTE PTR [eax+0x4e7c6146],al
  41766d:	fs pushw cs
  417670:	lahf   
  417671:	loope  0x4176d2
  417673:	cmp    esi,DWORD PTR [eax]
  417675:	out    dx,eax
  417676:	scas   eax,DWORD PTR es:[edi]
  417677:	cmp    ebx,0xffffff9d
  41767a:	and    dl,BYTE PTR [edi]
  41767c:	cdq    
  41767d:	mov    DWORD PTR [esi],ebx
  41767f:	sbb    ch,BYTE PTR [eax+0x74]
  417682:	cwde   
  417683:	inc    edx
  417684:	pushf  
  417685:	pop    esp
  417686:	mov    WORD PTR ds:0x2ff9ae49,cs
  41768c:	pop    ebp
  41768d:	dec    edi
  41768e:	xor    cl,BYTE PTR [eax]
  417690:	inc    esp
  417691:	in     al,0x3e
  417693:	imul   ebx,esp,0x226d1ae4
  417699:	dec    DWORD PTR [edi+eax*1]
  41769c:	mov    ds:0x799cd166,eax
  4176a1:	inc    edx
  4176a2:	(bad)  
  4176a3:	jecxz  0x417704
  4176a5:	adc    ebp,DWORD PTR [ebx-0xefa6855]
  4176ab:	pushf  
  4176ac:	loop   0x4176b3
  4176ae:	push   esp
  4176af:	neg    bh
  4176b1:	aad    0x80
  4176b3:	xchg   esi,eax
  4176b4:	cmc    
  4176b5:	cmc    
  4176b6:	ins    BYTE PTR es:[edi],dx
  4176b7:	test   ebx,eax
  4176b9:	in     al,0x7d
  4176bb:	(bad)  [ecx-0x34]
  4176be:	or     BYTE PTR [ebx+0x6],bh
  4176c1:	jp     0x4176a6
  4176c3:	fstp   TBYTE PTR [ebx+0x76ff74ee]
  4176c9:	jle    0x4176f0
  4176cb:	pop    ebx
  4176cc:	pmuludq mm7,QWORD PTR [esi-0xb]
  4176d0:	xrelease mov BYTE PTR [ebp-0x7],bl
  4176d4:	jecxz  0x41769e
  4176d6:	push   esp
  4176d7:	push   ecx
  4176d8:	repz aad 0x94
  4176db:	pushf  
  4176dc:	sti    
  4176dd:	push   esp
  4176de:	jecxz  0x4176b1
  4176e0:	inc    edi
  4176e1:	mov    dh,0x9d
  4176e3:	cmp    ah,cl
  4176e5:	int    0xc
  4176e7:	xchg   cl,dh
  4176e9:	(bad)  
  4176ea:	jno    0x41769a
  4176ec:	loopne 0x417739
  4176ee:	mov    al,0x6d
  4176f0:	popa   
  4176f1:	mov    DWORD PTR [ecx-0x46],esp
  4176f4:	popa   
  4176f5:	cmp    DWORD PTR ds:0x353b,ebx
  4176fa:	sub    edi,DWORD PTR [ecx+0xa]
  4176fd:	or     eax,0xc3f771f9
  417702:	lods   al,BYTE PTR ds:[esi]
  417703:	ins    DWORD PTR es:[edi],dx
  417704:	test   ch,bh
  417706:	mov    BYTE PTR [ecx-0xd],dh
  417709:	sbb    DWORD PTR [ecx+edi*2+0x1928b7dd],ecx
  417710:	and    eax,0x61e819c5
  417715:	pop    esi
  417716:	mov    edi,0x1cd74ec3
  41771b:	dec    ebp
  41771c:	jl     0x417778
  41771e:	or     ah,BYTE PTR [edi-0x6ed4c0c2]
  417724:	into   
  417725:	push   eax
  417726:	pop    es
  417727:	rcl    bl,1
  417729:	add    eax,0x443e693f
  41772e:	jns    0x4176c9
  417730:	cdq    
  417731:	sbb    ebp,edi
  417733:	mul    BYTE PTR [eax+ebp*1-0x38]
  417737:	aas    
  417738:	jae    0x4176c8
  41773a:	jmp    0xe731de6b
  41773f:	mov    eax,ds:0x643ec994
  417744:	add    ebp,DWORD PTR [eax-0x7a22212]
  41774a:	dec    esi
  41774b:	fmul   DWORD PTR [ecx+eiz*4-0x2c9c5ba0]
  417752:	(bad)  
  417753:	ins    BYTE PTR es:[edi],dx
  417754:	and    edx,DWORD PTR [esp+edx*4]
  417757:	imul   edx,DWORD PTR [ebx-0x47899a6f],0x6c
  41775e:	push   cs
  41775f:	jl     0x4177b2
  417761:	pop    edx
  417762:	mov    bl,0xd4
  417764:	ss mov ebp,fs
  417767:	pushf  
  417768:	outs   dx,DWORD PTR ds:[esi]
  417769:	jl     0x4177bc
  41776b:	lods   eax,DWORD PTR ds:[esi]
  41776c:	cdq    
  41776d:	mov    bh,0x63
  41776f:	add    al,0x4c
  417771:	push   edi
  417772:	lods   al,BYTE PTR ds:[esi]
  417773:	repnz cmp al,0xe2
  417776:	imul   ebp,ebx,0xfffffffe
  417779:	repnz push es
  41777b:	loop   0x417778
  41777d:	mov    edx,0x8f19cc21
  417782:	jnp    0x41770c
  417784:	add    dh,BYTE PTR [edi+0x35]
  417787:	xchg   esi,eax
  417788:	cli    
  417789:	xor    DWORD PTR [esi-0x60],esi
  41778c:	cmp    al,0x5d
  41778e:	and    esi,DWORD PTR [esi-0x44bd72cd]
  417794:	daa    
  417795:	test   al,0x72
  417797:	sbb    ebp,ebp
  417799:	jp     0xec4d6f75
  41779f:	sahf   
  4177a0:	sahf   
  4177a1:	jle    0x4177cb
  4177a3:	and    BYTE PTR [eax+0x1c61bc16],0x2d
  4177aa:	xlat   BYTE PTR ds:[ebx]
  4177ab:	inc    ecx
  4177ac:	into   
  4177ad:	sub    bh,BYTE PTR [edi-0x3]
  4177b0:	jno    0x417795
  4177b2:	jno    0x417756
  4177b4:	sbb    BYTE PTR [edx-0x5c],dl
  4177b7:	std    
  4177b8:	cmp    al,BYTE PTR [edi+0x18f4fbdd]
  4177be:	in     eax,dx
  4177bf:	jbe    0x417840
  4177c1:	test   DWORD PTR ds:0x64627457,edx
  4177c7:	push   cs
  4177c8:	pop    ds
  4177c9:	and    WORD PTR [ecx-0x2a],di
  4177cd:	out    0x96,eax
  4177cf:	mov    edi,0xd940ae59
  4177d4:	mov    bp,0x27d8
  4177d8:	in     eax,0xf7
  4177da:	xchg   edi,edx
  4177dc:	outs   dx,DWORD PTR ds:[esi]
  4177dd:	mov    al,ds:0x3121e81f
  4177e2:	and    DWORD PTR [ebx+0x5e505b1b],edi
  4177e8:	mov    al,0xde
  4177ea:	mov    edi,0xbc32d636
  4177ef:	or     DWORD PTR [edi+0x3b],edx
  4177f2:	ins    BYTE PTR es:[edi],dx
  4177f3:	ss ret 0xa802
  4177f7:	jecxz  0x417820
  4177f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177fa:	test   eax,0x6e560aca
  4177ff:	aaa    
  417800:	jmp    0x4177f7
  417802:	sub    dh,BYTE PTR [ebp+0x1cb7c03f]
  417808:	xchg   ebp,eax
  417809:	fadd   QWORD PTR [ecx+0x220ed048]
  41780f:	mov    dl,0xdc
  417811:	loope  0x41787c
  417813:	fimul  DWORD PTR [ebx+eiz*4-0x43]
  417817:	cli    
  417818:	xchg   edi,eax
  417819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41781a:	loope  0x417874
  41781c:	xchg   BYTE PTR [ecx+0x1b],bl
  41781f:	mov    ah,0x2e
  417821:	int3   
  417822:	mov    ds:0x79249daa,ax
  417828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417829:	ret    
  41782a:	push   ebp
  41782b:	nop
  41782c:	mov    al,ds:0x3311e5b0
  417831:	add    al,0xd8
  417833:	rcr    bh,1
  417835:	pop    ecx
  417836:	pop    esi
  417837:	sbb    DWORD PTR ds:[ebx+0x6e],ebx
  41783b:	and    ebx,DWORD PTR [ebp+0x17]
  41783e:	sub    BYTE PTR [edi+0x66],dl
  417841:	inc    ecx
  417842:	mov    edi,0x8577f14
  417847:	mov    ds:0x1b6d3245,al
  41784c:	into   
  41784d:	mov    bh,0xf3
  41784f:	mov    bh,0x6f
  417851:	mov    esp,0x7fe24f0e
  417856:	aaa    
  417857:	daa    
  417858:	mov    cl,0x2b
  41785a:	shl    BYTE PTR [eax-0x1e],1
  41785d:	and    BYTE PTR [edx+0x4d7ffa31],bh
  417863:	dec    esp
  417864:	enter  0xbb3f,0x5c
  417868:	or     BYTE PTR gs:[esi+0x2cda676a],0xf
  417870:	sar    BYTE PTR [ebp+0x3ddb2098],cl
  417876:	dec    edx
  417877:	push   es
  417878:	es mov cl,0x17
  41787b:	retf   
  41787c:	sti    
  41787d:	jp     0x41781d
  41787f:	mov    bl,0x40
  417881:	xchg   ecx,eax
  417882:	loopne 0x417878
  417884:	mov    cl,0xed
  417886:	jae    0x4178f4
  417888:	mov    cl,0xf5
  41788a:	xchg   ecx,edi
  41788c:	jns    0x417905
  41788e:	pop    ebx
  41788f:	dec    ecx
  417890:	dec    esi
  417891:	leave  
  417892:	shl    BYTE PTR [ebp-0x48bbfaba],0x5a
  417899:	cmp    ecx,DWORD PTR [edx]
  41789b:	pop    edx
  41789c:	xor    ebx,ebp
  41789e:	icebp  
  41789f:	mov    ds,WORD PTR [esi-0x53]
  4178a2:	dec    ebx
  4178a3:	add    DWORD PTR [eax-0x65c9f9d6],0xa518dcc3
  4178ad:	jl     0x4178a4
  4178af:	out    dx,eax
  4178b0:	pop    ds
  4178b1:	(bad)  
  4178b2:	adc    DWORD PTR [ecx+ebp*2-0x46],edx
  4178b6:	sub    al,0xda
  4178b8:	and    eax,0x6860da5c
  4178bd:	out    0x1f,eax
  4178bf:	aad    0x4b
  4178c1:	push   ss
  4178c2:	(bad)  
  4178c4:	or     bh,ah
  4178c6:	lds    edx,FWORD PTR [edx]
  4178c8:	ins    DWORD PTR es:[edi],dx
  4178c9:	mov    ebp,0xf914ff1
  4178ce:	mov    ch,0xbc
  4178d0:	(bad)  
  4178d1:	js     0x417872
  4178d3:	xchg   esp,esp
  4178d5:	bound  ebp,QWORD PTR [ebx-0x4b]
  4178d8:	dec    eax
  4178d9:	xor    eax,0x727d9e16
  4178de:	xchg   edx,eax
  4178df:	push   es
  4178e0:	mov    ds:0x3de21836,eax
  4178e5:	je     0x4178eb
  4178e7:	cs aaa 
  4178e9:	jae    0x4178de
  4178eb:	add    DWORD PTR [ecx],edi
  4178ed:	add    esp,ecx
  4178ef:	mov    al,ds:0xc883a13e
  4178f4:	push   es
  4178f5:	bnd je 0x4178bd
  4178f8:	sub    ch,BYTE PTR [edx-0x45d3982]
  4178fe:	scas   al,BYTE PTR es:[edi]
  4178ff:	(bad)  
  417900:	call   0x8f1b10cc
  417905:	mov    ds:0x21605979,eax
  41790a:	cmp    BYTE PTR [ebp-0x3bbef2bc],cl
  417910:	ret    
  417911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417912:	xchg   esp,eax
  417913:	and    dl,BYTE PTR [esi]
  417915:	lods   al,BYTE PTR ds:[esi]
  417916:	sti    
  417917:	mov    edx,0x632cddbd
  41791c:	test   edx,0xe5a88146
  417922:	inc    ecx
  417923:	out    0x4d,eax
  417925:	iret   
  417926:	adc    ecx,ebp
  417928:	(bad)  
  417929:	dec    esi
  41792a:	jmp    FWORD PTR ds:0x1336fd7f
  417930:	mov    ah,0x82
  417932:	mov    edi,0xa8f06c32
  417937:	and    BYTE PTR [ebp+0x23],bh
  41793a:	int    0x5b
  41793c:	add    DWORD PTR [edi],0x2e
  41793f:	aad    0xbb
  417941:	dec    ebx
  417943:	pop    ds
  417944:	xchg   DWORD PTR [ebx],esp
  417946:	gs mov dh,0xb0
  417949:	cmp    ah,bl
  41794b:	retf   0xb742
  41794e:	das    
  41794f:	nop/reserved BYTE PTR [ebp+0x447b200a]
  417956:	push   ebx
  417957:	fcmovnu st,st(6)
  417959:	mov    ebp,0x8096e060
  41795e:	aam    0xca
  417960:	add    DWORD PTR [edi-0x6e01ecac],ebp
  417966:	ss inc ebp
  417968:	xchg   ebp,eax
  417969:	pop    ds
  41796a:	pop    ds
  41796b:	add    BYTE PTR ds:0x6c972d29,al
  417971:	dec    edi
  417972:	aam    0xa4
  417974:	aaa    
  417975:	push   edi
  417976:	retf   0x22fe
  417979:	pop    esp
  41797a:	add    BYTE PTR [esi+0x66e0ffff],0x39
  417981:	mov    ah,BYTE PTR [ebp-0x67]
  417984:	in     al,dx
  417985:	fisttp QWORD PTR [ecx-0x64960bb6]
  41798b:	mov    esi,0x97f489af
  417990:	xchg   esp,eax
  417991:	sbb    DWORD PTR [edx],ebp
  417993:	dec    edx
  417994:	js     0x41798a
  417996:	mov    cl,0x51
  417998:	add    eax,0x491fcf83
  41799d:	sub    ebp,0xffffff91
  4179a0:	cmp    eax,0xc42ab89e
  4179a5:	inc    edi
  4179a6:	xchg   ecx,eax
  4179a7:	mov    al,al
  4179a9:	or     eax,0xd2e6cec5
  4179ae:	rol    BYTE PTR ds:0x766fbc75,cl
  4179b4:	js     0x4179fb
  4179b6:	adc    al,BYTE PTR [esi-0x11]
  4179b9:	pusha  
  4179ba:	add    dh,BYTE PTR [ecx]
  4179bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179bd:	xchg   edi,eax
  4179be:	inc    eax
  4179bf:	jno    0x417a0c
  4179c1:	ja     0x417989
  4179c3:	push   edi
  4179c4:	xchg   edx,eax
  4179c5:	xchg   esp,eax
  4179c6:	xor    ch,ch
  4179c8:	mov    bh,0x4c
  4179ca:	jmp    0x4ceb:0x9862912b
  4179d1:	fs jae 0x4179f1
  4179d4:	mov    fs,WORD PTR [edx-0x74]
  4179d7:	push   ss
  4179d8:	pop    ss
  4179d9:	outs   dx,BYTE PTR ds:[esi]
  4179da:	iret   
  4179db:	and    DWORD PTR [eax],eax
  4179dd:	lock xchg ebx,eax
  4179df:	test   DWORD PTR [edi+0x56],edx
  4179e2:	xor    ch,BYTE PTR [ecx+eiz*2+0xe]
  4179e6:	fidivr WORD PTR [edx]
  4179e8:	in     eax,dx
  4179e9:	test   DWORD PTR [esi],eax
  4179eb:	push   0xffffffc5
  4179ed:	popf   
  4179ee:	aas    
  4179ef:	sub    esp,ebx
  4179f1:	(bad)  
  4179f2:	mov    bh,0xb7
  4179f4:	rol    BYTE PTR [ebx],1
  4179f6:	test   BYTE PTR [ebx],dh
  4179f8:	jno    0x4179de
  4179fa:	cmp    DWORD PTR [edx-0x3d8093f8],0xa237661f
  417a04:	fwait
  417a05:	or     eax,0xf7c869be
  417a0a:	ins    DWORD PTR es:[edi],dx
  417a0b:	push   0xaf18d7ac
  417a10:	rcr    esi,cl
  417a12:	test   al,0x1e
  417a15:	lock push esp
  417a17:	stc    
  417a18:	cs ss in al,dx
  417a1b:	xor    BYTE PTR [edx-0xc1e5f77],cl
  417a21:	dec    edx
  417a22:	sub    dh,0xc9
  417a25:	ins    WORD PTR es:[edi],dx
  417a27:	or     ecx,DWORD PTR [ebx+0x62766ec7]
  417a2d:	in     eax,dx
  417a2e:	dec    edi
  417a2f:	pusha  
  417a30:	iret   
  417a31:	js     0x417a76
  417a33:	dec    esp
  417a34:	cmp    DWORD PTR [edx+0x5],edx
  417a37:	dec    ecx
  417a38:	or     DWORD PTR [edi-0x78],0x32e1f5ed
  417a3f:	jb     0x4179c3
  417a41:	test   DWORD PTR [ebx+0x36],esp
  417a44:	mov    esi,0x2551afb7
  417a49:	test   BYTE PTR [esi],dl
  417a4b:	or     cl,cl
  417a4d:	lods   al,BYTE PTR ds:[esi]
  417a4e:	jne    0x417a55
  417a50:	mov    ds:0x58e1082e,al
  417a55:	jge    0x417a61
  417a57:	pop    esp
  417a58:	ret    0x650b
  417a5b:	add    BYTE PTR [edi-0x4733228a],bh
  417a61:	out    0x61,al
  417a63:	fild   WORD PTR [eax]
  417a65:	pop    edx
  417a66:	lods   al,BYTE PTR ds:[esi]
  417a67:	jg     0x417adb
  417a69:	jmp    0x4179ff
  417a6b:	aad    0x18
  417a6d:	int3   
  417a6e:	xchg   esp,eax
  417a6f:	call   DWORD PTR [edx+0x61619a48]
  417a75:	pop    DWORD PTR [ecx+0x6c7bbd2]
  417a7b:	sub    al,0xb1
  417a7d:	ins    DWORD PTR es:[edi],dx
  417a7e:	mov    dh,BYTE PTR [ebp-0x5f]
  417a81:	pop    es
  417a82:	mov    BYTE PTR [esi-0x62f16762],dh
  417a88:	cmc    
  417a89:	jbe    0x417ace
  417a8b:	daa    
  417a8c:	push   eax
  417a8d:	call   0xa827b4b7
  417a92:	and    bh,cl
  417a94:	and    edx,esp
  417a96:	out    0xa4,eax
  417a98:	sbb    eax,0xdb1a80d3
  417a9d:	repz mov ch,0x76
  417aa0:	inc    edi
  417aa1:	and    DWORD PTR [edx],ebx
  417aa3:	fdiv   st(5),st
  417aa5:	repz push esi
  417aa7:	loopne 0x417a7e
  417aa9:	mov    dl,0x7e
  417aab:	dec    edi
  417aac:	(bad)  
  417aad:	mov    ah,0x23
  417aaf:	ret    
  417ab0:	dec    eax
  417ab1:	and    bh,ah
  417ab3:	jnp    0x417b0b
  417ab5:	imul   BYTE PTR [ebx+edx*8+0x4de773b5]
  417abc:	push   ss
  417abd:	out    0xac,al
  417abf:	imul   ebp,edi,0x5c
  417ac2:	sbb    eax,0x5bb590c0
  417ac7:	daa    
  417ac8:	mov    al,ds:0x6b75e314
  417acd:	mov    esi,0x30316545
  417ad2:	push   edi
  417ad3:	fcomp  QWORD PTR [esi+0x10]
  417ad6:	pop    ss
  417ad7:	test   eax,0xd950f88d
  417adc:	fdivr  st,st(4)
  417ade:	inc    ebx
  417adf:	cmp    ch,BYTE PTR [ecx+0x48]
  417ae2:	add    bh,al
  417ae4:	data16 mov ah,0x88
  417ae7:	shl    DWORD PTR [ecx+0x71e052e5],0x8
  417aee:	and    al,0xa1
  417af0:	les    edx,FWORD PTR [esi]
  417af2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417af3:	sahf   
  417af4:	cwde   
  417af5:	lea    edx,[ecx-0xb]
  417af8:	shr    BYTE PTR [esi+0x37477104],1
  417afe:	jbe    0x417ac9
  417b00:	jne    0x417b2c
  417b02:	push   ebp
  417b03:	ror    BYTE PTR [edi],1
  417b05:	dec    edx
  417b06:	xor    ecx,esp
  417b08:	lods   eax,DWORD PTR ds:[esi]
  417b09:	xor    BYTE PTR ds:0xe1713744,bh
  417b0f:	push   esp
  417b10:	push   eax
  417b11:	stos   BYTE PTR es:[edi],al
  417b12:	cs mul al
  417b15:	gs test ebx,eax
  417b18:	adc    BYTE PTR gs:[eax],ah
  417b1b:	cs push ebx
  417b1d:	call   0x4d06:0xff9c2d19
  417b24:	push   es
  417b25:	xchg   DWORD PTR [edx+0x54eb2a48],edi
  417b2b:	ins    BYTE PTR es:[edi],dx
  417b2c:	mov    dh,0x85
  417b2e:	push   eax
  417b2f:	cwde   
  417b30:	mov    eax,ds:0x5367ec8
  417b35:	int3   
  417b36:	xchg   ecx,eax
  417b37:	leave  
  417b38:	sub    DWORD PTR [eax],0xe
  417b3b:	in     eax,dx
  417b3c:	mov    cs,WORD PTR [edi+0x64]
  417b3f:	dec    ecx
  417b40:	pop    ds
  417b41:	jmp    0x417b36
  417b43:	xor    eax,0xb46bdcd
  417b48:	pop    edx
  417b49:	and    eax,0x46be732a
  417b4e:	and    esi,DWORD PTR [ebp-0x21]
  417b51:	bound  esi,QWORD PTR [esi-0x34]
  417b54:	mov    ah,0x0
  417b56:	js     0x417b79
  417b58:	retf   0xa845
  417b5b:	cs jmp 0x417b63
  417b5e:	pop    ds
  417b5f:	or     ebp,DWORD PTR [ebx]
  417b61:	sub    eax,0x7e7c5557
  417b66:	or     eax,0xcf436f1d
  417b6b:	loope  0x417af7
  417b6d:	cmp    BYTE PTR [edx],dh
  417b6f:	out    dx,al
  417b70:	mov    bl,0xa
  417b72:	inc    esi
  417b73:	or     eax,DWORD PTR [eax+0x5cf7e26c]
  417b79:	std    
  417b7a:	add    DWORD PTR [esi-0x80],edi
  417b7d:	dec    esp
  417b7e:	jns    0x417b7e
  417b80:	sti    
  417b81:	xchg   ecx,eax
  417b82:	add    dl,cl
  417b84:	cld    
  417b85:	mov    esi,esi
  417b87:	ret    0x382f
  417b8a:	fnsave [ebp+0x36a79b43]
  417b90:	adc    al,0xc2
  417b92:	xor    BYTE PTR [esi*2+0x55abce43],0x48
  417b9a:	test   al,0xc7
  417b9c:	xor    al,BYTE PTR [edx]
  417b9e:	jecxz  0x417b5a
  417ba0:	mov    WORD PTR [ebp-0x2086e5c5],ds
  417ba6:	rcl    BYTE PTR [edi-0x36b76dd4],1
  417bac:	inc    eax
  417bad:	xchg   edx,eax
  417bae:	into   
  417baf:	or     dl,BYTE PTR [edx-0x72]
  417bb2:	sbb    DWORD PTR [ecx-0x73],0x55
  417bb6:	push   0x4f903d82
  417bbb:	cli    
  417bbc:	jge    0x417b4e
  417bbe:	cmp    ebp,ebp
  417bc0:	in     al,dx
  417bc1:	xor    eax,0x4ab4ab8f
  417bc6:	xor    esp,DWORD PTR [edi]
  417bc8:	icebp  
  417bc9:	jl     0x417b6a
  417bcb:	cli    
  417bcc:	jl     0x417b6b
  417bce:	mul    al
  417bd0:	stc    
  417bd1:	rol    BYTE PTR [esi],cl
  417bd3:	push   esp
  417bd4:	jmp    0x417b6c
  417bd6:	cs jge 0x417c03
  417bd9:	(bad)  
  417bda:	inc    edi
  417bdb:	outs   dx,DWORD PTR ds:[esi]
  417bdc:	dec    ebp
  417bdd:	and    ecx,ebp
  417bdf:	dec    esi
  417be0:	adc    eax,DWORD PTR [edi+eiz*1+0x43]
  417be4:	retf   0xc2be
  417be7:	push   esp
  417be8:	mov    al,BYTE PTR [edi]
  417bea:	pop    ecx
  417beb:	mov    dh,0xdc
  417bed:	es or  cl,dh
  417bf0:	ins    BYTE PTR es:[edi],dx
  417bf1:	stos   DWORD PTR es:[edi],eax
  417bf2:	jb     0x417c53
  417bf4:	dec    ecx
  417bf5:	push   ss
  417bf6:	xor    cl,ah
  417bf8:	add    esp,esi
  417bfa:	dec    eax
  417bfb:	retf   
  417bfc:	push   ds
  417bfd:	pop    ss
  417bfe:	pop    ecx
  417bff:	xchg   esp,eax
  417c00:	inc    edi
  417c01:	xchg   BYTE PTR [ebp+ecx*1-0xd8b23dc],bl
  417c08:	push   edi
  417c09:	rcr    dh,cl
  417c0b:	mov    edx,0x6dfd870d
  417c10:	mov    ebp,0x71f6abd7
  417c15:	dec    esp
  417c16:	(bad)  
  417c17:	pop    dx
  417c19:	pushf  
  417c1a:	imul   ebx,ebp,0x64
  417c1d:	xchg   ebp,eax
  417c1e:	jbe    0x417c24
  417c20:	push   ebx
  417c21:	addr16 mov ds:0x9246,al
  417c25:	jo     0x417c0d
  417c27:	rol    BYTE PTR [ebp+0x52],1
  417c2a:	rcr    BYTE PTR [eax+0xb78c385],cl
  417c30:	lds    ecx,FWORD PTR [esi]
  417c32:	xor    al,0xf1
  417c34:	in     eax,0x83
  417c36:	jmp    0x9869:0xe2355c56
  417c3d:	inc    esi
  417c3e:	mov    dh,0xd8
  417c40:	or     edx,eax
  417c42:	call   0x999:0xce014197
  417c49:	pusha  
  417c4a:	inc    esp
  417c4c:	pop    ss
  417c4d:	outs   dx,BYTE PTR ds:[esi]
  417c4e:	lods   eax,DWORD PTR ds:[esi]
  417c4f:	hlt    
  417c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c51:	imul   ebp,DWORD PTR [edi+ebp*8-0x754058ba],0xffffffbc
  417c59:	in     eax,0x3a
  417c5b:	xlat   BYTE PTR ds:[ebx]
  417c5c:	push   ds
  417c5d:	push   edx
  417c5e:	xchg   edi,eax
  417c5f:	adc    BYTE PTR [ebx+esi*2],ah
  417c62:	fidivr WORD PTR [ebx+esi*1-0x3bf9b964]
  417c69:	loopne 0x417ce7
  417c6b:	xor    al,0xe0
  417c6d:	gs xchg esi,eax
  417c6f:	retf   
  417c70:	mov    al,bl
  417c72:	xor    bh,BYTE PTR [edx+eax*2+0x7b]
  417c76:	inc    esp
  417c77:	dec    ecx
  417c78:	or     dh,BYTE PTR cs:[ecx+0x21]
  417c7c:	add    edi,DWORD PTR [edx]
  417c7e:	repz jmp 0x7cfb:0xa0752196
  417c86:	xor    esp,edx
  417c88:	fstp   TBYTE PTR [edx+0x3e26206c]
  417c8e:	test   ah,ch
  417c90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c91:	aad    0xc0
  417c93:	(bad)  
  417c95:	in     eax,0xce
  417c97:	pop    edx
  417c98:	retf   
  417c99:	ss mov ebx,0x4ab9e89
  417c9f:	std    
  417ca0:	mov    edi,0xb44fe4ff
  417ca5:	sub    edx,DWORD PTR [edi]
  417ca7:	add    al,0x5e
  417ca9:	pushf  
  417caa:	dec    ebp
  417cab:	test   eax,0x2549c2f0
  417cb0:	mov    ds:0x5dd93d6,eax
  417cb5:	stc    
  417cb6:	pop    ecx
  417cb7:	mov    ?,WORD PTR [ebp-0x48]
  417cba:	(bad)
  417cbe:	pop    eax
  417cbf:	mov    dh,0xf9
  417cc1:	gs je  0x417c69
  417cc4:	sub    ebp,DWORD PTR [edi]
  417cc6:	sahf   
  417cc7:	in     al,0xbd
  417cc9:	ret    0x6c9a
  417ccc:	mov    ecx,0xd21fdace
  417cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cd2:	or     eax,0xa94efec8
  417cd7:	outs   dx,WORD PTR ds:[esi]
  417cd9:	mov    WORD PTR [ebx-0x1eacb318],gs
  417cdf:	pushf  
  417ce0:	and    eax,0x7abe8e68
  417ce5:	outs   dx,DWORD PTR ds:[esi]
  417ce6:	add    DWORD PTR [ebp+eax*4+0x5ba4ee33],ebp
  417ced:	and    eax,0xb405f4dd
  417cf2:	or     DWORD PTR [ebx+0x5423eb85],ebx
  417cf8:	inc    ecx
  417cf9:	int3   
  417cfa:	sbb    cl,BYTE PTR [edi-0x4]
  417cfd:	(bad)  
  417cfe:	xor    esp,edx
  417d00:	stos   DWORD PTR es:[edi],eax
  417d01:	xor    eax,0x11321af5
  417d06:	vmwrite eax,ebp
  417d09:	jle    0x417d48
  417d0b:	sub    DWORD PTR [edi-0x2a8c1d8f],ebx
  417d11:	add    BYTE PTR [eax-0x43642e42],ch
  417d17:	xchg   esp,esi
  417d19:	cmp    al,BYTE PTR [ebx]
  417d1b:	xor    ecx,DWORD PTR [ecx-0x11]
  417d1e:	dec    esp
  417d1f:	xchg   edx,eax
  417d20:	fiadd  WORD PTR [esi]
  417d22:	inc    ecx
  417d23:	call   0x40be:0xb9c5239e
  417d2a:	add    DWORD PTR [ecx+0x7a],edx
  417d2d:	inc    esi
  417d2e:	adc    eax,0x94d1e12c
  417d33:	outs   dx,DWORD PTR ds:[esi]
  417d34:	int3   
  417d35:	pop    ds
  417d36:	scas   al,BYTE PTR es:[edi]
  417d37:	hlt    
  417d38:	sbb    BYTE PTR [ecx-0x65],ah
  417d3b:	sub    al,0x20
  417d3d:	fneni(8087 only) 
  417d3f:	ss cmp bl,ah
  417d42:	or     BYTE PTR [edx+0x2c],0x1a
  417d46:	and    eax,DWORD PTR [ebx+0x73]
  417d49:	mov    cl,0x1
  417d4b:	mov    edx,0x4b0daf9e
  417d50:	cld    
  417d51:	mov    ecx,edi
  417d53:	mov    al,0x54
  417d55:	xor    DWORD PTR [eax+edi*1-0x1a794f3d],ebp
  417d5c:	sub    al,0x31
  417d5e:	xor    BYTE PTR [esi-0x44260010],ch
  417d64:	jle    0x417d57
  417d66:	fnstsw WORD PTR [edi-0x4e87d1a8]
  417d6c:	jmp    DWORD PTR [eax]
  417d6e:	sbb    dl,BYTE PTR [edx+0x43be2bbc]
  417d74:	(bad)  
  417d75:	out    dx,eax
  417d76:	mov    ch,0x22
  417d78:	jo     0x417d49
  417d7a:	mov    esi,esi
  417d7c:	into   
  417d7d:	push   ds
  417d7e:	mov    bl,0xa5
  417d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d81:	pusha  
  417d82:	jno    0x417dc8
  417d84:	rol    DWORD PTR [ebp+0x11],cl
  417d87:	test   DWORD PTR [esi+ebx*1],ecx
  417d8a:	ret    
  417d8b:	xchg   ebp,eax
  417d8c:	jp     0x417d50
  417d8e:	cmc    
  417d8f:	inc    ecx
  417d90:	push   eax
  417d91:	out    dx,al
  417d92:	(bad)  
  417d93:	dec    edx
  417d94:	stos   BYTE PTR es:[edi],al
  417d95:	push   esp
  417d96:	cmp    DWORD PTR [esi-0x14],0xfffffffe
  417d9a:	cmp    edx,DWORD PTR [edi+0x20]
  417d9d:	push   es
  417d9e:	mov    ds:0x58f01aa4,eax
  417da3:	sbb    ah,BYTE PTR [ebp-0x512ffe10]
  417da9:	repz in al,0x5e
  417dac:	push   ebx
  417dad:	ror    BYTE PTR [esi-0x79f1181e],0x80
  417db4:	mov    ecx,0x2d869163
  417db9:	in     al,0x4
  417dbb:	imul   esp,eax
  417dbe:	push   eax
  417dbf:	sub    DWORD PTR [eax+0x39eea95],edx
  417dc5:	arpl   WORD PTR [edx],cx
  417dc7:	js     0x417d83
  417dc9:	mov    eax,DWORD PTR [eax-0x17fbf8dc]
  417dcf:	div    DWORD PTR [ecx]
  417dd1:	aam    0x8a
  417dd3:	and    al,BYTE PTR [esi-0x4ded3d9a]
  417dd9:	and    bl,BYTE PTR [eax-0x25d90fd1]
  417ddf:	sbb    al,0x66
  417de1:	test   esi,edx
  417de3:	(bad)  
  417de4:	push   ss
  417de5:	test   al,0x88
  417de7:	pop    edi
  417de8:	adc    eax,0x9adf9d96
  417ded:	mov    esi,ebx
  417def:	push   ebx
  417df0:	and    DWORD PTR [edi],ebx
  417df2:	sbb    dh,BYTE PTR [edx+0x51fdfd9d]
  417df8:	pop    eax
  417df9:	lods   eax,DWORD PTR ds:[esi]
  417dfa:	xchg   edi,eax
  417dfb:	lods   eax,DWORD PTR ds:[esi]
  417dfc:	xor    bh,0xa0
  417dff:	loop   0x417e00
  417e01:	xchg   esi,eax
  417e02:	jo     0x417e08
  417e04:	inc    ebp
  417e05:	ja     0x417dda
  417e07:	(bad)  
  417e08:	jnp    0x417e40
  417e0a:	into   
  417e0b:	add    ebp,DWORD PTR [edx+eiz*1-0x88fd709]
  417e12:	cmp    BYTE PTR [eax+0x66],0x50
  417e16:	pop    edx
  417e17:	arpl   WORD PTR [edx],bx
  417e19:	sub    ebx,DWORD PTR [esi+esi*1+0x40cc8d67]
  417e20:	sub    ebx,edx
  417e22:	jmp    0xc76c97aa
  417e27:	inc    edx
  417e28:	push   0xe0690041
  417e2d:	cmc    
  417e2e:	push   edi
  417e2f:	repnz (bad) 
  417e31:	outs   dx,BYTE PTR ds:[esi]
  417e32:	xchg   ecx,eax
  417e33:	pop    esp
  417e34:	xchg   ebp,eax
  417e35:	cmp    ecx,DWORD PTR [edx-0x31d970e3]
  417e3b:	adc    BYTE PTR [ecx+0x746c4022],dh
  417e41:	and    esp,DWORD PTR [edx-0x2af8fd65]
  417e47:	sbb    dh,BYTE PTR [esi]
  417e49:	pop    esp
  417e4a:	jns    0x417e6a
  417e4c:	inc    ecx
  417e4d:	push   ebp
  417e4e:	cmp    DWORD PTR [ecx-0x7d411086],ecx
  417e54:	mov    BYTE PTR [eax],0x20
  417e57:	jne    0x417ed6
  417e59:	loope  0x417e7b
  417e5b:	arpl   WORD PTR [edi+0x35],cx
  417e5e:	gs aas 
  417e60:	mov    ch,0xf4
  417e62:	aad    0x30
  417e64:	cmp    eax,0x3cc64aaa
  417e69:	sti    
  417e6a:	mov    edi,0xb1170318
  417e6f:	sti    
  417e70:	lahf   
  417e71:	cmp    al,0x5c
  417e73:	js     0x417eef
  417e75:	xor    eax,0xb8a1cd8
  417e7a:	mov    bl,0x89
  417e7c:	jle    0x417e57
  417e7e:	jb     0x417e32
  417e80:	xchg   edx,eax
  417e81:	xor    al,0x39
  417e83:	jg     0x417e22
  417e85:	add    al,0x86
  417e87:	mov    eax,ds:0x1a77c39
  417e8c:	in     al,dx
  417e8d:	adc    ah,BYTE PTR [edi]
  417e8f:	mov    bh,0xb7
  417e91:	icebp  
  417e92:	pop    edx
  417e93:	sahf   
  417e94:	test   eax,esi
  417e96:	leave  
  417e97:	jl     0x417e7f
  417e99:	and    eax,0x1b784b47
  417e9e:	add    BYTE PTR [eax-0x22123d78],ch
  417ea4:	popa   
  417ea5:	sub    esp,ecx
  417ea7:	test   al,0x93
  417ea9:	mov    ds:0x95682d50,eax
  417eae:	mov    dh,0x3a
  417eb0:	(bad)  
  417eb1:	aad    0xb
  417eb3:	mov    ds:0x263d18f0,ax
  417eb9:	fbld   TBYTE PTR [esi+esi*1-0x3c15d1ef]
  417ec0:	pop    esi
  417ec1:	adc    al,0x24
  417ec3:	xchg   esp,eax
  417ec4:	fild   DWORD PTR [ebp-0x415d6850]
  417eca:	aam    0xb6
  417ecc:	outs   dx,DWORD PTR ds:[esi]
  417ecd:	fmul   QWORD PTR [esi-0x44]
  417ed0:	or     cl,BYTE PTR [ebx+ebp*2]
  417ed3:	dec    eax
  417ed4:	jl     0x417f01
  417ed6:	sbb    DWORD PTR [edi],0x147811a8
  417edc:	rcl    DWORD PTR [ecx],1
  417ede:	or     al,BYTE PTR [ebx+0x4144c7c0]
  417ee4:	ret    0x414a
  417ee7:	xchg   ecx,eax
  417ee8:	sub    DWORD PTR [esi],edi
  417eea:	ja     0x417ea8
  417eec:	ret    
  417eed:	xchg   ebp,eax
  417eee:	pop    edi
  417eef:	lahf   
  417ef0:	(bad)  
  417ef1:	cwde   
  417ef2:	mov    es,WORD PTR [ebx]
  417ef4:	das    
  417ef5:	push   cs
  417ef6:	xchg   edi,eax
  417ef7:	mov    ah,0x1e
  417ef9:	cmc    
  417efa:	mov    dl,0xc7
  417efc:	or     DWORD PTR [edi-0x8],esp
  417eff:	loop   0x417f08
  417f01:	ss jp  0x417e94
  417f04:	add    ebx,esp
  417f06:	jecxz  0x417efe
  417f08:	int3   
  417f09:	data16 test al,0x56
  417f0c:	jmp    0x417f83
  417f0e:	push   esp
  417f0f:	inc    ebp
  417f10:	jg     0x417ee7
  417f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f13:	cld    
  417f14:	fwait
  417f15:	aam    0xaa
  417f17:	lahf   
  417f18:	mov    ebp,DWORD PTR ds:0x7148b158
  417f1e:	dec    edx
  417f1f:	and    esp,esi
  417f21:	fcmovb st,st(0)
  417f23:	sbb    al,0x67
  417f26:	shl    DWORD PTR [ebx+0x27],cl
  417f29:	retf   
  417f2a:	adc    edx,edi
  417f2c:	pop    ecx
  417f2d:	mov    DWORD PTR [edx],esp
  417f2f:	call   0xdfa1:0x606573d9
  417f36:	add    BYTE PTR [edi],dl
  417f38:	pushf  
  417f39:	out    0x91,eax
  417f3b:	sub    ebx,DWORD PTR [eax+0x3931d49]
  417f41:	retf   0xfcc5
  417f44:	add    eax,0xc2f2c8f7
  417f49:	hlt    
  417f4a:	cmp    al,BYTE PTR [ecx-0x7ab2ddef]
  417f50:	push   edx
  417f51:	and    BYTE PTR [esi+0x49],al
  417f54:	inc    ebp
  417f55:	jg     0x417f6a
  417f57:	or     BYTE PTR [ebx-0x6c],cl
  417f5a:	inc    ecx
  417f5b:	pop    edx
  417f5c:	push   ss
  417f5d:	cli    
  417f5e:	sbb    DWORD PTR [edi+0x58],edi
  417f61:	retf   
  417f62:	(bad)  
  417f63:	push   cs
  417f64:	fcos   
  417f66:	fucom  st(4)
  417f68:	pusha  
  417f69:	sbb    al,0x35
  417f6b:	dec    ebx
  417f6c:	jb     0x417fe8
  417f6e:	lock pop esi
  417f70:	jb     0x417f0e
  417f72:	repnz scas al,BYTE PTR es:[edi]
  417f74:	leave  
  417f75:	push   ebx
  417f76:	gs and eax,0x14c764d9
  417f7c:	mov    ebx,0x18488f1a
  417f81:	sbb    al,BYTE PTR ds:0xe4db908d
  417f87:	jmp    0x417f6b
  417f89:	xchg   ecx,eax
  417f8a:	adc    bl,ch
  417f8c:	dec    esp
  417f8d:	sbb    eax,0x8401a0f6
  417f92:	mov    ds:0x49e26728,al
  417f97:	inc    edi
  417f98:	aam    0x2d
  417f9a:	sbb    al,0x56
  417f9c:	out    dx,eax
  417f9d:	mov    dh,0x51
  417f9f:	sbb    DWORD PTR [ecx+0x1a54e2bf],0xffffffcc
  417fa6:	mov    dh,0xc4
  417fa8:	inc    ebp
  417fa9:	mov    esi,0xc8e425dc
  417fae:	mov    al,0x56
  417fb0:	jmp    0x768:0x5235f333
  417fb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fb8:	repz inc edx
  417fba:	pop    es
  417fbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fbc:	lods   eax,DWORD PTR ds:[esi]
  417fbd:	push   ecx
  417fbe:	or     eax,0xa3a82e5e
  417fc3:	sbb    dh,BYTE PTR [esi-0x4daea729]
  417fc9:	or     ebp,DWORD PTR [edx-0x58f65bc5]
  417fcf:	rol    esi,1
  417fd1:	add    BYTE PTR [ecx+0x8766438],cl
  417fd7:	mov    bl,0x3d
  417fd9:	loope  0x417f6f
  417fdb:	test   bh,ch
  417fdd:	data16 test BYTE PTR [ecx+0x2b],0x7d
  417fe2:	fldenv [eax+esi*1+0x5de00352]
  417fe9:	sbb    DWORD PTR ds:0x16e82c6,edx
  417fef:	sahf   
  417ff0:	pcmpgtd mm5,QWORD PTR [edx]
  417ff3:	and    ch,ch
  417ff5:	ret    
  417ff6:	adc    ebp,DWORD PTR [ebx+eiz*2]
  417ff9:	jge    0x418038
  417ffb:	int3   
  417ffc:	pop    edi
  417ffd:	mov    ebp,0x40d0bce6
  418002:	jmp    0x418012
  418004:	arpl   WORD PTR [edi+0x53],cx
  418007:	in     al,0x18
  418009:	mov    ecx,0xb746d99e
  41800e:	push   ds
  41800f:	imul   ebx,DWORD PTR [edx-0x26],0xffffff86
  418013:	inc    ebx
  418014:	xchg   ebx,eax
  418015:	adc    eax,0xcace567a
  41801a:	cld    
  41801b:	popf   
  41801c:	lock fadd QWORD PTR [esi+eax*2]
  418020:	push   ebp
  418021:	and    edi,eax
  418023:	inc    edi
  418024:	pop    ebp
  418025:	xchg   BYTE PTR ds:0xdb0001be,al
  41802b:	mov    esi,DWORD PTR [edx]
  41802d:	and    ah,bh
  41802f:	cs sahf 
  418031:	call   0x358e:0x257a1a78
  418038:	xor    BYTE PTR [ebx+edi*1],dl
  41803b:	pop    ss
  41803c:	mov    ebp,0x4bc3f606
  418041:	xchg   esi,eax
  418042:	dec    esi
  418043:	jmp    0x417fff
  418045:	fist   WORD PTR [edi]
  418047:	mov    BYTE PTR [ecx],bl
  418049:	xor    al,0xb3
  41804b:	push   0xfa25b80
  418050:	imul   DWORD PTR [esp+eiz*4]
  418053:	in     eax,0xe4
  418055:	add    eax,0xceb52c85
  41805a:	mov    cl,0x5f
  41805c:	sub    BYTE PTR [edx-0x37064b7f],dl
  418062:	repnz and edi,DWORD PTR [eax+ebp*8-0x6c]
  418067:	pop    ebp
  418068:	dec    ecx
  418069:	push   eax
  41806a:	test   esp,0x156df93e
  418070:	(bad)  
  418071:	stc    
  418072:	repz cmp DWORD PTR [edx],esi
  418075:	sbb    cl,al
  418077:	cdq    
  418078:	dec    edx
  418079:	cmp    BYTE PTR [ebp-0x4b09d597],ch
  41807f:	mov    edi,0x4863d6ff
  418084:	das    
  418085:	xlat   BYTE PTR ds:[ebx]
  418086:	xchg   DWORD PTR [edi+0x5c],esi
  418089:	jno    0x4180d7
  41808b:	add    DWORD PTR [edx],0xb217582a
  418091:	das    
  418092:	hlt    
  418093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418094:	div    BYTE PTR [ecx-0x80]
  418097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418098:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418099:	sub    bh,dl
  41809b:	jg     0x41806c
  41809d:	ret    0x7a97
  4180a0:	push   cs
  4180a1:	iret   
  4180a2:	int    0x92
  4180a4:	test   al,0x24
  4180a6:	imul   eax,DWORD PTR [edx+eax*1],0xb0fabec5
  4180ad:	adc    eax,0xee810842
  4180b2:	pop    edx
  4180b3:	mov    edx,0xa2843728
  4180b8:	popa   
  4180b9:	xchg   BYTE PTR [ebx+ebx*8],bl
  4180bc:	sbb    DWORD PTR [ebx+0x71],esi
  4180bf:	in     eax,dx
  4180c0:	pop    ds
  4180c1:	les    eax,FWORD PTR [esp+esi*2-0xf]
  4180c5:	sar    ebp,1
  4180c7:	imul   ebp,esp,0xd53dd86f
  4180cd:	shr    BYTE PTR [ecx-0x6e],1
  4180d0:	lods   eax,DWORD PTR ds:[esi]
  4180d1:	bound  ebp,QWORD PTR [edi-0x3f7c5976]
  4180d7:	mov    dl,0x82
  4180d9:	jmp    0x1f794e5b
  4180de:	clc    
  4180df:	mov    ecx,0xf2586e55
  4180e4:	sbb    BYTE PTR ds:[ebx-0x7b599904],dh
  4180eb:	jl     0x418080
  4180ed:	xchg   edi,eax
  4180ee:	lods   eax,DWORD PTR ds:[esi]
  4180ef:	lahf   
  4180f0:	loop   0x418091
  4180f2:	or     ebp,DWORD PTR [ebx-0x16]
  4180f5:	mov    ds:0x2ffd876,eax
  4180fa:	or     dh,al
  4180fc:	push   0xd04dbf8
  418101:	fidivr WORD PTR [edx+0x5f]
  418104:	adc    DWORD PTR [ebp+eax*1-0x38],eax
  418108:	add    BYTE PTR [eax],dh
  41810a:	popa   
  41810b:	fs push esi
  41810d:	push   ebx
  41810e:	sahf   
  41810f:	les    esi,FWORD PTR [edi-0x78]
  418112:	loop   0x41818b
  418114:	push   0xffffffab
  418116:	(bad)  
  418117:	and    dl,BYTE PTR [edi-0x46d65b8a]
  41811d:	or     edx,DWORD PTR [ecx]
  41811f:	jecxz  0x418159
  418121:	into   
  418122:	jg     0x41815f
  418124:	aaa    
  418125:	mov    edx,0x3a8f5e93
  41812a:	sti    
  41812b:	comiss xmm1,DWORD PTR [ebp+0x9305593]
  418132:	sub    dl,BYTE PTR [edx-0x5f]
  418135:	or     dl,BYTE PTR [ecx]
  418137:	dec    edx
  418138:	hlt    
  418139:	div    BYTE PTR [ecx+0x2d]
  41813c:	sti    
  41813d:	cmp    eax,0x6eea6920
  418142:	xlat   BYTE PTR ds:[ebx]
  418143:	ds mov al,0xd0
  418146:	jnp    0x418132
  418148:	jge    0x4180ed
  41814a:	dec    edi
  41814b:	xor    eax,0xa8485515
  418150:	je     0x41819d
  418152:	sahf   
  418153:	retf   
  418154:	or     BYTE PTR [eax+esi*4-0x24],cl
  418158:	cmp    bl,BYTE PTR [ebp-0x20]
  41815b:	nop    DWORD PTR [edx+0x4f]
  41815f:	ss es pop esi
  418162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418163:	aas    
  418164:	retf   0x1806
  418167:	mov    ds:0x66151415,al
  41816c:	mov    bh,0x19
  41816e:	pop    edi
  41816f:	inc    edx
  418170:	pop    ds
  418171:	xlat   BYTE PTR ds:[ebx]
  418172:	mov    dl,0x43
  418174:	mov    al,ds:0xa8db4672
  418179:	cmp    BYTE PTR [ecx+0x2c24315],ah
  41817f:	lock jmp 0x6e3fa876
  418185:	push   ds
  418186:	and    BYTE PTR [esi+0x2f],al
  418189:	pop    esp
  41818a:	jno    0x418167
  41818c:	shl    edx,0x7d
  41818f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418190:	mov    cl,0x6b
  418192:	and    eax,0x961634b5
  418197:	mov    edi,0x7d31c4c7
  41819c:	pop    esi
  41819d:	mov    dh,0x2d
  41819f:	sub    BYTE PTR [ecx-0x6851b66a],bl
  4181a5:	and    ecx,DWORD PTR [eax]
  4181a7:	xchg   ebx,eax
  4181a8:	adc    DWORD PTR [ebx],esi
  4181aa:	mov    ecx,0x2bbd55d4
  4181af:	push   ebp
  4181b0:	loop   0x418139
  4181b2:	imul   ecx,ebp,0x7f51d0f6
  4181b8:	cld    
  4181b9:	je     0x418140
  4181bb:	or     al,0xee
  4181bd:	and    eax,0x361fa019
  4181c2:	pushf  
  4181c3:	xor    esi,ebp
  4181c5:	out    dx,al
  4181c6:	(bad)  
  4181c7:	icebp  
  4181c8:	loope  0x418231
  4181ca:	lods   eax,DWORD PTR ds:[esi]
  4181cb:	fwait
  4181cc:	mov    eax,esp
  4181ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181cf:	stc    
  4181d0:	jbe    0x418169
  4181d2:	dec    esp
  4181d3:	adc    BYTE PTR [esi+0x78],al
  4181d6:	dec    ebp
  4181d7:	ins    BYTE PTR es:[edi],dx
  4181d8:	into   
  4181d9:	cmc    
  4181da:	imul   BYTE PTR [ebx+0x12]
  4181dd:	push   es
  4181de:	arpl   sp,di
  4181e0:	enter  0x6522,0xbd
  4181e4:	repz js 0x418207
  4181e7:	daa    
  4181e8:	dec    eax
  4181e9:	dec    esp
  4181ea:	adc    eax,0xbc991149
  4181ef:	clc    
  4181f0:	test   al,0xb0
  4181f2:	or     esp,edx
  4181f4:	pop    ebx
  4181f5:	or     ecx,esi
  4181f7:	sub    BYTE PTR [edi-0x5998dd7a],bl
  4181fd:	je     0x418200
  4181ff:	pushf  
  418200:	ret    0x5c07
  418203:	loope  0x4181c1
  418205:	in     eax,dx
  418206:	xor    esp,DWORD PTR [eax+0x4f]
  418209:	or     eax,0xf2c746a6
  41820e:	stos   BYTE PTR es:[edi],al
  41820f:	mov    ecx,0xd8db0867
  418214:	into   
  418215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418216:	js     0x4181b2
  418218:	add    eax,0x6316c923
  41821d:	cmp    cl,bh
  41821f:	adc    eax,0x7f0e73f3
  418224:	icebp  
  418225:	out    0x39,eax
  418227:	es repz call 0x1eedf9c
  41822e:	dec    eax
  41822f:	mov    ebx,cs
  418231:	in     al,0xd4
  418233:	mov    ah,0xb7
  418235:	cli    
  418236:	mov    ds:0xfd4cff69,eax
  41823b:	and    al,0xf4
  41823d:	stos   DWORD PTR es:[edi],eax
  41823e:	fbld   TBYTE PTR [ecx]
  418240:	sub    dh,BYTE PTR [eax+ecx*8+0x421920ee]
  418247:	std    
  418248:	sbb    cl,BYTE PTR ss:[eax+esi*1-0x60]
  41824d:	inc    eax
  41824e:	push   ds
  41824f:	adc    eax,0x8bd6df6c
  418254:	leave  
  418255:	mov    ds:0x6de58fa4,eax
  41825a:	lds    ebx,FWORD PTR [ebp-0x67]
  41825d:	add    al,BYTE PTR [ebp-0x7b]
  418260:	cmp    dh,al
  418262:	dec    eax
  418263:	mov    cl,0x68
  418265:	jp     0x418245
  418267:	call   0x63f0d6dc
  41826c:	inc    eax
  41826d:	jge    0x4182a3
  41826f:	or     DWORD PTR [ebx-0x36],edx
  418272:	mov    ch,0x23
  418274:	inc    eax
  418275:	and    al,0xb
  418277:	cmc    
  418278:	cmp    eax,0x8511ca42
  41827d:	inc    ebp
  41827e:	mov    cs,WORD PTR [esi-0xac0ef9e]
  418284:	shr    ecx,0x2a
  418287:	dec    ecx
  418288:	iret   
  418289:	inc    esp
  41828a:	mov    al,0x9b
  41828c:	test   al,0xe5
  41828e:	cmp    BYTE PTR [esi],0xea
  418291:	dec    edi
  418292:	or     al,BYTE PTR [eax-0x12]
  418295:	jp     0x418258
  418297:	fldenv [edi]
  418299:	xor    ecx,esi
  41829b:	rol    DWORD PTR [edx+0x369e8856],cl
  4182a1:	cld    
  4182a2:	fwait
  4182a3:	ret    0xcb59
  4182a6:	mov    ch,0xc8
  4182a8:	hlt    
  4182a9:	es jbe 0x418316
  4182ac:	sbb    bh,dl
  4182ae:	xchg   edx,eax
  4182af:	sti    
  4182b0:	adc    BYTE PTR [edx-0x2b62d8b6],cl
  4182b6:	and    BYTE PTR [eax+0x172efeae],dh
  4182bc:	mov    DWORD PTR [ebx-0x2f9c35d4],ebx
  4182c2:	aas    
  4182c3:	mov    eax,0x22b75c4e
  4182c8:	arpl   WORD PTR [ebp-0x73],cx
  4182cb:	xor    eax,0x359251d3
  4182d0:	sahf   
  4182d1:	mov    eax,0xfc26d36a
  4182d6:	push   es
  4182d7:	aad    0x5e
  4182d9:	fistp  QWORD PTR [ebp+ebx*4+0x44]
  4182dd:	sub    BYTE PTR [edx+0x274ceb28],0xb3
  4182e4:	sub    ebp,DWORD PTR [edx]
  4182e6:	les    ebp,FWORD PTR [ebx-0x25e2ab59]
  4182ec:	scas   eax,DWORD PTR es:[edi]
  4182ed:	mov    eax,ds:0xf4a2dfd0
  4182f2:	fisttp QWORD PTR [ebx+0x63]
  4182f5:	aaa    
  4182f6:	int    0xa8
  4182f8:	sbb    edi,ecx
  4182fa:	ins    BYTE PTR es:[edi],dx
  4182fb:	pop    ebx
  4182fc:	dec    ebx
  4182fd:	push   edi
  4182fe:	outs   dx,BYTE PTR ds:[esi]
  4182ff:	shl    BYTE PTR [ebp+0x6c782aef],cl
  418305:	sti    
  418306:	pop    esp
  418307:	je     0x41829f
  418309:	sbb    edi,DWORD PTR [ebp+0x5d]
  41830c:	push   edx
  41830d:	data16 cs add al,0xd8
  418311:	xor    cl,0x46
  418314:	call   0x3f11:0xc3e0bb78
  41831b:	fs push esi
  41831d:	aas    
  41831e:	out    dx,eax
  41831f:	jne    0x41837f
  418321:	cdq    
  418322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418323:	add    bl,cl
  418325:	outs   dx,BYTE PTR ds:[esi]
  418326:	push   cs
  418327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418328:	mov    ecx,0xd8763b7d
  41832d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41832e:	imul   edx,edx,0x554f3aa3
  418334:	sub    edi,DWORD PTR [edi]
  418336:	push   edi
  418337:	xchg   BYTE PTR [esi],ch
  418339:	sbb    DWORD PTR [ebp-0x6349be7a],0xffffffbb
  418340:	stos   DWORD PTR es:[edi],eax
  418341:	mov    dl,0xcf
  418343:	push   es
  418344:	jl     0x41833a
  418346:	ret    0xb468
  418349:	out    dx,al
  41834a:	xchg   ebp,eax
  41834b:	pop    edx
  41834c:	ret    
  41834d:	rcr    DWORD PTR [ebp+ebp*4-0x56c14cc4],1
  418354:	cmp    DWORD PTR [ebx],edx
  418356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418357:	imul   eax,DWORD PTR [edi+esi*2+0x300d5359],0x3588f65f
  418362:	rcr    ebx,cl
  418364:	scas   eax,DWORD PTR es:[edi]
  418365:	mov    ebp,0xe75505f6
  41836a:	push   esi
  41836b:	pop    ebx
  41836c:	sub    al,0x2d
  41836e:	push   ebp
  41836f:	jecxz  0x41836b
  418371:	jno    0x4183bd
  418373:	pop    es
  418374:	jmp    0x9ed5dd4
  418379:	aaa    
  41837a:	sub    BYTE PTR [edi],ch
  41837c:	pop    ss
  41837d:	stos   DWORD PTR es:[edi],eax
  41837e:	sbb    DWORD PTR [ebx],ebp
  418380:	or     eax,0x9d1bdd50
  418385:	mov    dl,0x58
  418387:	std    
  418388:	add    DWORD PTR [eiz*4-0x6689c7d3],0x42
  418390:	test   eax,0x29bed886
  418395:	dec    eax
  418396:	and    ecx,DWORD PTR [edi-0x1b]
  418399:	mov    esp,0xd2a58801
  41839e:	or     dh,BYTE PTR [eax]
  4183a0:	addr16 xchg ebp,eax
  4183a2:	jg     0x4183b9
  4183a4:	bound  ebp,QWORD PTR [edx]
  4183a6:	or     al,0xf4
  4183a8:	fs repnz shl ch,1
  4183ac:	in     eax,0xf0
  4183ae:	pop    edi
  4183af:	pop    esi
  4183b0:	and    eax,0x5f2bbb94
  4183b5:	aam    0xdb
  4183b7:	mul    DWORD PTR [ebx]
  4183b9:	inc    ebx
  4183ba:	popf   
  4183bb:	imul   ebp,DWORD PTR [edi+0x2dcd8f05],0xfd6af2aa
  4183c5:	adc    dh,BYTE PTR [eax-0x6cc456f]
  4183cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183cc:	test   BYTE PTR [edi+0xf],ch
  4183cf:	mov    DWORD PTR [ebp-0x28],0xf37d55f7
  4183d6:	xor    eax,0xbf72510e
  4183db:	cmc    
  4183dc:	inc    ebx
  4183dd:	fcmovnb st,st(2)
  4183df:	repz and eax,0x63ed4c71
  4183e5:	imul   edi,DWORD PTR [esp+ecx*8-0x27],0x8858bb9d
  4183ed:	daa    
  4183ee:	fstp   st(2)
  4183f0:	sti    
  4183f1:	pusha  
  4183f2:	xor    cl,BYTE PTR [edi]
  4183f4:	inc    edx
  4183f5:	push   edx
  4183f6:	dec    ecx
  4183f7:	in     al,dx
  4183f8:	sti    
  4183f9:	jo     0x4183f3
  4183fb:	mov    al,0x74
  4183fd:	adc    DWORD PTR [ecx+0x5d],0x1f
  418401:	xchg   BYTE PTR [ecx-0x524d90ae],cl
  418407:	aad    0x47
  418409:	push   cs
  41840a:	pop    ds
  41840b:	xchg   edi,eax
  41840c:	jne    0x4183f9
  41840e:	mov    ch,0xa3
  418410:	cwde   
  418411:	std    
  418412:	cmp    al,0xc3
  418414:	add    DWORD PTR [esi-0x2],eax
  418417:	int3   
  418418:	mov    ebx,edx
  41841a:	ret    
  41841b:	imul   dx,WORD PTR [edx],0x76ed
  418420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418421:	mov    cl,0xc9
  418423:	shr    bh,cl
  418425:	or     DWORD PTR [ebx+0x5e],ebp
  418428:	cmp    eax,0xde7cd035
  41842d:	add    eax,0xa0347399
  418432:	mov    WORD PTR [ebx+ebx*8],cs
  418435:	fcmovu st,st(0)
  418437:	dec    edi
  418438:	mov    edi,0xc43e018c
  41843d:	pop    ds
  41843e:	stos   BYTE PTR es:[edi],al
  41843f:	add    edi,DWORD PTR [edx-0x6e87bc2b]
  418445:	adc    BYTE PTR [eax-0x16],0x6c
  418449:	xor    al,0x6e
  41844b:	adc    BYTE PTR ds:0x3eeb7e21,0x2e
  418452:	fldcw  WORD PTR [esi-0x5e]
  418455:	add    ecx,DWORD PTR [esi+0xf824297]
  41845b:	and    DWORD PTR [edx+0x2aead7ed],edi
  418461:	movsx  eax,BYTE PTR [esi+edx*4+0x2623cde1]
  418469:	out    dx,eax
  41846a:	in     al,0x89
  41846c:	imul   edi,DWORD PTR [esi-0x28d640f8],0x504b4e35
  418476:	into   
  418477:	sub    DWORD PTR [edx+esi*2-0x35],edi
  41847b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41847c:	fistp  QWORD PTR [esi]
  41847e:	test   edx,ecx
  418480:	loopne 0x4184db
  418482:	rep stos BYTE PTR es:[edi],al
  418484:	test   BYTE PTR [edx],cl
  418486:	mov    dh,0x1d
  418488:	ja     0x418452
  41848a:	xchg   edx,eax
  41848b:	push   esi
  41848c:	ins    BYTE PTR es:[edi],dx
  41848d:	mov    bl,0xf1
  41848f:	xlat   BYTE PTR ds:[bx]
  418491:	push   esp
  418492:	stos   BYTE PTR es:[edi],al
  418493:	iret   
  418494:	data16 mov BYTE PTR [edi-0x44],ch
  418498:	ins    DWORD PTR es:[edi],dx
  418499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41849a:	hlt    
  41849b:	mov    ds,edi
  41849d:	adc    BYTE PTR [esi+0xaa2abe2],dh
  4184a3:	in     eax,0x1c
  4184a5:	or     BYTE PTR [ebx+0x31f4eb5b],bl
  4184ab:	in     al,dx
  4184ac:	pop    ebp
  4184ad:	sbb    ebp,DWORD PTR [ebx]
  4184af:	out    dx,eax
  4184b0:	ins    BYTE PTR es:[edi],dx
  4184b1:	hlt    
  4184b2:	and    DWORD PTR fs:[eax],edx
  4184b5:	adc    eax,0xc8950927
  4184ba:	dec    edx
  4184bb:	mov    ds:0xae3373fa,al
  4184c0:	dec    ebx
  4184c1:	lock mov al,0x31
  4184c4:	xchg   ecx,eax
  4184c5:	adc    DWORD PTR [ecx+ebx*8-0x5c],ebx
  4184c9:	call   0xf4b5:0x5f02921
  4184d0:	mov    BYTE PTR [edx-0x202510c0],al
  4184d6:	cmp    eax,0x37a7daac
  4184db:	outs   dx,BYTE PTR ds:[esi]
  4184dc:	inc    edi
  4184dd:	mov    edx,0x75b576fd
  4184e2:	mov    DWORD PTR [ebx],edi
  4184e4:	add    bh,al
  4184e6:	jecxz  0x4184cc
  4184e8:	push   esp
  4184e9:	adc    eax,DWORD PTR [edi-0x60f1b8d0]
  4184ef:	xor    BYTE PTR [edx-0x6b],0x8c
  4184f3:	adc    BYTE PTR [esi+0x5c],ch
  4184f6:	adc    ebx,DWORD PTR [esi+0x2f1b83f2]
  4184fc:	rol    BYTE PTR [ebp+0x33],1
  4184ff:	jg     0x4184df
  418501:	cmp    DWORD PTR [ebx-0x185813b0],ebx
  418507:	pushf  
  418508:	mov    edi,0x6d24ef88
  41850d:	ja     0x4184d0
  41850f:	push   edx
  418510:	mov    cs,edx
  418512:	push   0xffffff88
  418514:	out    0xb,al
  418516:	lea    edi,[ecx]
  418518:	mov    dh,0x47
  41851a:	retf   0x480d
  41851d:	inc    ebx
  41851e:	cli    
  41851f:	cmc    
  418520:	jmp    0x9f56:0x56f17b43
  418527:	mov    bh,0x49
  418529:	xor    BYTE PTR [ecx],ah
  41852b:	sub    dh,BYTE PTR [ebx+0x55b5f810]
  418531:	xor    al,0x99
  418533:	pop    ecx
  418534:	cmp    eax,0xea5d6649
  418539:	sub    al,0xbe
  41853b:	and    DWORD PTR [ebx-0x47649aa9],0x281784df
  418545:	xchg   ecx,eax
  418546:	popa   
  418547:	outs   dx,BYTE PTR ds:[esi]
  418548:	mov    edi,0xee44fd09
  41854d:	loop   0x41857c
  41854f:	jne    0x418558
  418551:	nop
  418552:	scas   al,BYTE PTR es:[edi]
  418553:	icebp  
  418554:	pusha  
  418555:	push   esi
  418556:	(bad)  
  418557:	shl    DWORD PTR [ecx],1
  418559:	cmp    ecx,DWORD PTR [esi+0x24f707d0]
  41855f:	sbb    al,0x32
  418561:	and    eax,0x300fc67e
  418566:	clc    
  418567:	push   esp
  418568:	stos   BYTE PTR es:[edi],al
  418569:	stos   DWORD PTR es:[edi],eax
  41856a:	stos   DWORD PTR es:[edi],eax
  41856b:	mov    edx,0x2b2d1286
  418570:	scas   al,BYTE PTR es:[edi]
  418571:	pop    ebx
  418572:	mov    dl,0x65
  418574:	push   edi
  418575:	int    0x24
  418577:	pop    edi
  418578:	arpl   WORD PTR [ecx-0x18],dx
  41857b:	in     al,0x3e
  41857d:	xor    BYTE PTR [ebx-0x67],dl
  418580:	pop    ebx
  418581:	or     al,0xdf
  418583:	mov    WORD PTR [ecx-0x4170535f],ss
  418589:	jecxz  0x4185c0
  41858b:	ss (bad) fs:[edi-0x2e604723]
  418593:	bound  eax,QWORD PTR [edi+0x60]
  418596:	pop    ebp
  418597:	icebp  
  418598:	jg     0x418531
  41859a:	cmc    
  41859b:	stos   BYTE PTR es:[edi],al
  41859c:	mov    al,fs:0xe6dc3685
  4185a2:	sub    eax,0xd4d5bb00
  4185a7:	mov    al,ds:0x201260a5
  4185ac:	test   al,0x8c
  4185ae:	mov    bh,BYTE PTR [eax-0x4c8735c1]
  4185b4:	in     eax,0x49
  4185b6:	retf   0xd8d
  4185b9:	cmp    BYTE PTR [eax],cl
  4185bb:	xchg   DWORD PTR [eax+0x65],esp
  4185be:	cli    
  4185bf:	pop    ebx
  4185c0:	mov    eax,0xe7d9bed1
  4185c5:	sti    
  4185c6:	imul   esi,DWORD PTR [eax+eiz*2],0x83c6e38a
  4185cd:	push   ecx
  4185ce:	dec    eax
  4185cf:	ret    
  4185d0:	inc    ebx
  4185d1:	jns    0x4185ad
  4185d3:	ficom  WORD PTR [ecx+0x81fc091]
  4185d9:	(bad)  
  4185da:	or     dl,bl
  4185dc:	inc    ebx
  4185dd:	dec    edi
  4185de:	int3   
  4185df:	retf   0xfbda
  4185e2:	ret    0xd473
  4185e5:	enter  0xa8ca,0x47
  4185e9:	call   0xc082:0x7ee2167b
  4185f0:	adc    DWORD PTR [ebx-0x5bde3826],eax
  4185f6:	call   0x36131fc3
  4185fb:	cs pop ebx
  4185fd:	xchg   ebp,eax
  4185fe:	jo     0x4185f5
  418600:	jb     0x4185c8
  418602:	test   al,0xb8
  418604:	les    ebp,FWORD PTR [ebp-0x4f]
  418607:	or     bl,0xa5
  41860a:	jo     0x418617
  41860c:	or     eax,0xacdd237c
  418611:	aam    0x1d
  418613:	lock clc 
  418615:	and    al,0xd6
  418617:	(bad)  [esi+ebp*1+0x73cc0236]
  41861e:	outs   dx,DWORD PTR ds:[esi]
  41861f:	mov    bh,0x4
  418621:	ins    DWORD PTR es:[edi],dx
  418622:	icebp  
  418623:	(bad)  
  418624:	ds jg  0x418685
  418627:	sbb    bh,BYTE PTR [edi+ebx*1]
  41862a:	push   edi
  41862b:	pusha  
  41862c:	jns    0x41869f
  41862e:	xchg   ecx,esi
  418630:	push   ss
  418631:	jno    0x41866b
  418633:	add    al,0x60
  418635:	shl    BYTE PTR [ebx-0x58],cl
  418638:	mov    esi,0x9912f1af
  41863d:	and    edx,ecx
  41863f:	mov    eax,ds:0x1b4a2a6
  418644:	mov    eax,ds:0x664f84ee
  418649:	mov    edi,DWORD PTR [ecx]
  41864b:	xchg   DWORD PTR [eax-0x52885107],ebx
  418651:	pop    ss
  418652:	fwait
  418653:	adc    eax,0x2a3e9aa9
  418658:	jmp    0x27a14821
  41865d:	std    
  41865e:	mov    bh,BYTE PTR [ecx+0x21]
  418661:	hlt    
  418662:	add    DWORD PTR [ecx+0x3f],esp
  418665:	clc    
  418666:	fsubr  DWORD PTR [eax]
  418668:	mov    edx,0x7e5a84eb
  41866d:	push   ebp
  41866e:	sbb    DWORD PTR cs:[ebx+0x7d],ebx
  418672:	jmp    DWORD PTR [ebp+0x50]
  418675:	xlat   BYTE PTR ds:[ebx]
  418676:	pop    ss
  418677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418678:	pop    ebp
  418679:	sbb    BYTE PTR [eax],ch
  41867b:	inc    esp
  41867c:	into   
  41867d:	jmp    0x4186f7
  41867f:	xchg   esp,eax
  418680:	jnp    0x418605
  418682:	dec    edi
  418683:	or     al,BYTE PTR [esi-0x1578126c]
  418689:	cmp    al,0xf7
  41868b:	mov    ds:0x7cfede3a,eax
  418690:	and    eax,0xa432aa2b
  418695:	mov    ebx,0x748fbe78
  41869a:	add    BYTE PTR [ebp+0x67],dl
  41869d:	ja     0x418684
  41869f:	out    dx,eax
  4186a0:	je     0x41870b
  4186a2:	sub    ah,dl
  4186a4:	nop
  4186a5:	cdq    
  4186a6:	stos   DWORD PTR es:[edi],eax
  4186a7:	adc    al,0x9f
  4186a9:	stos   BYTE PTR es:[edi],al
  4186aa:	je     0x41863a
  4186ac:	push   cs
  4186ad:	imul   edx,DWORD PTR [esi],0xffffffc1
  4186b0:	sub    ebp,0xfffffff3
  4186b3:	mov    fs,esi
  4186b5:	xor    BYTE PTR [edi+0x14],bl
  4186b8:	inc    edx
  4186b9:	mov    dl,0x52
  4186bb:	ja     0x418660
  4186bd:	lods   al,BYTE PTR ds:[esi]
  4186be:	xchg   esp,eax
  4186bf:	pushf  
  4186c0:	push   0x4b5fb563
  4186c5:	clc    
  4186c6:	icebp  
  4186c7:	mov    al,ds:0x51ad104e
  4186cc:	jmp    0xc71c1206
  4186d1:	daa    
  4186d2:	nop
  4186d3:	xor    al,0xf0
  4186d5:	ret    0x81ac
  4186d8:	inc    edx
  4186d9:	push   eax
  4186da:	mov    dl,0xa0
  4186dc:	push   0x6460413e
  4186e1:	fs pop esp
  4186e3:	aas    
  4186e4:	ret    0x374
  4186e7:	push   esp
  4186e8:	daa    
  4186e9:	ja     0x4186af
  4186eb:	inc    ebx
  4186ec:	ret    
  4186ed:	sub    DWORD PTR [ecx],ecx
  4186ef:	xor    eax,0x5c479551
  4186f4:	imul   edi,DWORD PTR [edx-0x13],0xa280150b
  4186fb:	inc    edx
  4186fc:	out    0x13,eax
  4186fe:	call   0x7bb1:0x26433406
  418705:	xchg   esp,eax
  418706:	dec    edx
  418707:	pop    esp
  418708:	shr    BYTE PTR [esp+ecx*2],0xa5
  41870c:	mov    ds:0xbf1f8254,eax
  418711:	cli    
  418712:	mov    WORD PTR [esi+0x56],?
  418715:	in     al,dx
  418716:	xor    DWORD PTR [ebx+0x389ca999],edi
  41871c:	scas   eax,DWORD PTR es:[edi]
  41871d:	outs   dx,DWORD PTR ds:[esi]
  41871e:	jmp    0x4186b2
  418720:	inc    edx
  418721:	stc    
  418722:	mov    edi,0x319517c6
  418727:	xchg   edx,eax
  418728:	and    DWORD PTR [edi],esi
  41872a:	fidivr WORD PTR [eax]
  41872c:	aas    
  41872d:	addr16 push ds
  41872f:	jle    0x418766
  418731:	loopne 0x41876a
  418733:	jne    0x4187aa
  418735:	jmp    0x56ef0ec1
  41873a:	or     DWORD PTR [ebx-0xd03be39],ebp
  418740:	cs aad 0xd1
  418743:	cli    
  418744:	clc    
  418745:	sbb    al,0x1e
  418747:	mov    edi,0xa4bd60bd
  41874c:	mov    ecx,0x1b4936ec
  418751:	retf   0x57b
  418754:	out    0x91,al
  418756:	xor    eax,0xa5159a2a
  41875b:	ins    DWORD PTR es:[edi],dx
  41875c:	out    dx,al
  41875d:	pop    edx
  41875e:	push   bx
  418760:	fwait
  418761:	push   ss
  418762:	ror    BYTE PTR [ecx-0x6c],0xd5
  418766:	xchg   edx,eax
  418767:	add    al,0xff
  418769:	rol    al,cl
  41876b:	les    edx,FWORD PTR [ebp+0x6b86193b]
  418771:	hlt    
  418772:	fs inc edi
  418774:	jge    0x418782
  418776:	jl     0x4187f3
  418778:	jns    0x4187f3
  41877a:	push   esi
  41877b:	stos   BYTE PTR es:[di],al
  41877d:	inc    ecx
  41877e:	stc    
  41877f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418780:	inc    esi
  418781:	mov    dh,0xcf
  418783:	iret   
  418784:	mov    eax,ds:0xf018cdf4
  418789:	or     al,0x26
  41878b:	inc    ebp
  41878c:	mov    dh,0x76
  41878e:	mov    dh,0xbf
  418790:	ins    BYTE PTR es:[edi],dx
  418791:	inc    esp
  418792:	adc    ch,ah
  418794:	push   esp
  418795:	push   cs
  418796:	mov    ebp,0x540ab249
  41879b:	imul   ecx,DWORD PTR [ecx+0x3e],0xed5366c6
  4187a2:	test   eax,0xcd2553ab
  4187a7:	cmp    eax,0xe3012fb2
  4187ac:	jmp    0x418811
  4187ae:	cmp    eax,0x74755738
  4187b4:	inc    edx
  4187b5:	mul    esp
  4187b7:	fdivr  QWORD PTR [esi+0x3c247aff]
  4187bd:	int    0xaa
  4187bf:	xchg   ecx,eax
  4187c0:	popf   
  4187c1:	sub    ah,dl
  4187c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187c4:	jmp    0x418809
  4187c6:	cmp    cl,BYTE PTR [ebp-0x11d6dcc4]
  4187cc:	js     0x4187ce
  4187ce:	fbstp  TBYTE PTR [ecx-0xaead6c0]
  4187d4:	icebp  
  4187d5:	fwait
  4187d6:	mov    ds:0x78d8d4fb,al
  4187db:	ss sahf 
  4187dd:	xchg   ebp,eax
  4187de:	pop    esi
  4187df:	loop   0x4187e2
  4187e1:	lahf   
  4187e2:	cld    
  4187e3:	jo     0x41885f
  4187e5:	cmc    
  4187e6:	xor    bh,al
  4187e8:	leave  
  4187e9:	enter  0x8d1c,0x22
  4187ed:	shr    DWORD PTR [ebx+0x7d],cl
  4187f0:	and    eax,0x9471769
  4187f5:	mov    ebp,0xee60b61
  4187fa:	mov    eax,0xf8a205cb
  4187ff:	sbb    edx,DWORD PTR [ecx]
  418801:	xchg   edx,eax
  418802:	idiv   DWORD PTR [ebp+0x318b4dd3]
  418808:	mov    cl,0xda
  41880a:	sbb    dl,ch
  41880c:	pop    esi
  41880d:	bound  eax,QWORD PTR [ebx+0x48aceb63]
  418813:	gs (bad) 
  418815:	leave  
  418816:	fwait
  418817:	in     al,dx
  418818:	(bad)  
  418819:	fisubr WORD PTR [edx-0x49]
  41881c:	jo     0x41881e
  41881e:	sti    
  41881f:	shr    DWORD PTR [ebx],cl
  418821:	pop    esi
  418822:	(bad)  
  418823:	mov    ebx,0xd1aa0b1f
  418828:	push   ds
  418829:	fisubr DWORD PTR [edi+0x6f]
  41882c:	rcr    BYTE PTR [edi],0x81
  41882f:	mov    al,0x5
  418831:	inc    ebp
  418832:	cmp    eax,DWORD PTR [edi*8+0x3c7de7f3]
  418839:	repz pusha 
  41883b:	div    BYTE PTR [ebx-0x1]
  41883e:	aad    0x31
  418840:	mov    ebp,gs
  418842:	sub    dl,BYTE PTR [esi+0x2935dca5]
  418848:	lahf   
  418849:	stos   DWORD PTR es:[edi],eax
  41884a:	dec    esi
  41884b:	jb     0x41882b
  41884d:	adc    al,0xfa
  41884f:	aam    0xdd
  418851:	xlat   BYTE PTR ds:[ebx]
  418852:	push   esp
  418853:	lock cmp al,0xbc
  418856:	pop    ebx
  418857:	sbb    eax,0xb8b8e8d1
  41885c:	push   ebp
  41885d:	push   esp
  41885e:	inc    esp
  41885f:	xlat   BYTE PTR ds:[ebx]
  418860:	or     al,BYTE PTR [ebx-0xe9a7352]
  418866:	jnp    0x418811
  418868:	daa    
  418869:	(bad)  [eax]
  41886b:	dec    eax
  41886c:	mov    al,ds:0xc26eddfa
  418871:	lahf   
  418872:	icebp  
  418873:	jecxz  0x418847
  418875:	mov    ds:0xdf575dd0,al
  41887a:	add    al,0x25
  41887c:	jno    0x4188cd
  41887e:	inc    esp
  41887f:	push   eax
  418880:	shl    BYTE PTR [esi-0x74d3be23],1
  418886:	fisttp WORD PTR [ecx]
  418888:	lds    esi,FWORD PTR [esi]
  41888a:	push   eax
  41888b:	mov    DWORD PTR [esi],ecx
  41888d:	mov    WORD PTR [edi+0x518d14e0],cs
  418893:	and    ecx,DWORD PTR [ebp+0x7e38968b]
  418899:	imul   ebx,ebp,0xffffff9f
  41889c:	(bad)  
  41889d:	inc    edi
  41889e:	jle    0x4188eb
  4188a0:	mov    eax,0x56208c7d
  4188a5:	addr16 shr cl,1
  4188a8:	imul   eax,DWORD PTR [ebp-0xf02e642],0x1882a836
  4188b2:	sub    DWORD PTR [edx+0x4d4d2fa3],0x78
  4188b9:	cmp    BYTE PTR [esp+ebx*8+0x37],bl
  4188bd:	(bad)  
  4188bf:	xchg   esi,eax
  4188c0:	add    al,0xca
  4188c2:	push   0x62d578a8
  4188c7:	mov    dl,0x37
  4188c9:	jns    0x4188b0
  4188cb:	push   edi
  4188cc:	retf   0xfe7e
  4188cf:	jbe    0x41889d
  4188d1:	es push 0x9ca64c66
  4188d7:	sahf   
  4188d8:	std    
  4188d9:	fwait
  4188da:	pop    ds
  4188db:	mov    esi,DWORD PTR ds:0xebd60905
  4188e1:	dec    esi
  4188e2:	jnp    0x41888f
  4188e4:	mov    esp,0x8d04f3c3
  4188e9:	pop    edi
  4188ea:	ins    BYTE PTR es:[edi],dx
  4188eb:	and    al,0xae
  4188ed:	push   eax
  4188ee:	push   edi
  4188ef:	xchg   esi,eax
  4188f0:	cmp    ebp,DWORD PTR [ecx+0x76d897cc]
  4188f6:	jne    0x418944
  4188f8:	cld    
  4188f9:	outs   dx,DWORD PTR ds:[esi]
  4188fa:	and    esi,ecx
  4188fc:	ss mov bh,0x16
  4188ff:	popf   
  418900:	jae    0x4188fb
  418902:	fwait
  418903:	adc    DWORD PTR [eax-0x1c],ecx
  418906:	push   eax
  418907:	out    0x14,al
  418909:	pop    ds
  41890a:	addr16 sti 
  41890c:	inc    ecx
  41890d:	call   DWORD PTR [esi+ebx*4+0x5227b35b]
  418914:	pop    ds
  418915:	test   eax,0x658b7428
  41891a:	dec    esp
  41891b:	les    esi,FWORD PTR [ecx+ebx*4]
  41891e:	ds dec edx
  418920:	cwde   
  418921:	int3   
  418922:	push   0x52
  418924:	sbb    al,0xed
  418926:	mov    eax,DWORD PTR [ebx]
  418928:	fst    DWORD PTR [eax+0x7c3ecc0b]
  41892e:	adc    edx,ecx
  418930:	sti    
  418931:	shl    DWORD PTR [ecx],cl
  418933:	pop    edx
  418934:	mov    dl,BYTE PTR [edi-0x3648c632]
  41893a:	cli    
  41893b:	fst    QWORD PTR [edx+0x60]
  41893e:	outs   dx,BYTE PTR ds:[esi]
  41893f:	je     0x418915
  418941:	test   BYTE PTR [ebx-0x23],dl
  418944:	pop    edx
  418945:	mov    bl,0x73
  418947:	je     0x41891b
  418949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41894a:	push   cs
  41894b:	repnz ss ss repnz test ebp,ebx
  418951:	stos   BYTE PTR es:[edi],al
  418952:	mov    ebp,0x33a0b836
  418957:	ret    
  418958:	(bad)  [esi]
  41895a:	add    DWORD PTR [ebx-0x5f],0x7e
  41895e:	sub    BYTE PTR ds:0xdf11bce8,cl
  418964:	cmp    edx,DWORD PTR [eax-0x1e9d506e]
  41896a:	retf   0x4293
  41896d:	imul   eax,DWORD PTR [ecx-0x16083289],0xffffffa8
  418974:	push   cs
  418975:	inc    esi
  418976:	fcmovnb st,st(5)
  418978:	out    dx,al
  418979:	mov    ebx,0x75a5ac91
  41897e:	test   DWORD PTR [esi+0x35878c5d],esi
  418984:	sbb    DWORD PTR [ecx],edi
  418986:	xchg   ebp,eax
  418987:	mov    dl,0x3d
  418989:	sub    eax,0x2dead97f
  41898e:	inc    esi
  41898f:	jp     0x418930
  418991:	xchg   edx,eax
  418992:	js     0x418a0e
  418994:	mov    ah,0x93
  418996:	mov    cl,0x24
  418998:	daa    
  418999:	pop    esi
  41899a:	ins    DWORD PTR es:[edi],dx
  41899b:	mov    edx,0x6dee1efd
  4189a0:	cli    
  4189a1:	in     eax,0xc9
  4189a3:	fwait
  4189a4:	(bad)  
  4189a5:	aam    0xed
  4189a7:	push   edx
  4189a8:	outs   dx,DWORD PTR ds:[esi]
  4189a9:	mov    bh,0xdc
  4189ab:	add    al,ch
  4189ad:	adc    al,0x92
  4189af:	loopne 0x418a16
  4189b1:	popa   
  4189b2:	ror    DWORD PTR [edi+0xbb23c46],0xf4
  4189b9:	add    al,0xa0
  4189bb:	fdivp  st(6),st
  4189bd:	mov    ecx,0x13852b54
  4189c2:	into   
  4189c3:	xor    eax,0x7195c7d7
  4189c8:	imul   esi,DWORD PTR [eax+0x5b],0x15fd4d7
  4189cf:	sub    BYTE PTR ds:0x7094d453,ah
  4189d5:	cld    
  4189d6:	mov    esi,0x17707e04
  4189db:	or     eax,0xed4feb58
  4189e0:	jo     0x4189d4
  4189e2:	sahf   
  4189e3:	stos   BYTE PTR es:[edi],al
  4189e4:	(bad)  
  4189e5:	mov    esp,0x455d2ce3
  4189ea:	adc    al,0x6b
  4189ec:	sbb    bh,BYTE PTR [esi-0x136daf3d]
  4189f2:	jmp    0x41898e
  4189f4:	jp     0x418993
  4189f6:	jb     0x4189fd
  4189f8:	aam    0x31
  4189fa:	xor    dh,cl
  4189fc:	add    al,ch
  4189fe:	mov    ds:0x9a30330b,eax
  418a04:	into   
  418a05:	jecxz  0x418a51
  418a07:	xchg   ebp,eax
  418a08:	or     esi,edx
  418a0a:	fldcw  WORD PTR [edi+0x4e408076]
  418a10:	cmp    ebx,DWORD PTR [ebx]
  418a12:	mov    ecx,DWORD PTR [esi-0x257c04c7]
  418a18:	mov    DWORD PTR [ecx],ebp
  418a1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a1b:	aas    
  418a1c:	mov    ebx,0x59009cbb
  418a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a22:	and    DWORD PTR [eax+0xc3f6ebb],esp
  418a28:	adc    esi,DWORD PTR [ecx-0x1c12eb8a]
  418a2e:	mov    bl,0xcb
  418a30:	jae    0x418a33
  418a32:	test   eax,0x24926c54
  418a37:	jae    0x4189c5
  418a39:	push   esi
  418a3a:	(bad)  
  418a3c:	aad    0xde
  418a3e:	xchg   edx,eax
  418a3f:	pop    edx
  418a40:	sub    ebx,DWORD PTR [esi]
  418a42:	scas   eax,DWORD PTR es:[edi]
  418a43:	and    ch,BYTE PTR [ecx]
  418a45:	sar    DWORD PTR [edx],1
  418a47:	xchg   edi,eax
  418a48:	mov    ds:0xc1df72b,eax
  418a4d:	sub    ebx,esi
  418a4f:	(bad)  
  418a50:	jbe    0x418a94
  418a52:	or     eax,0x6de6dfaa
  418a57:	retf   0x1934
  418a5a:	xor    al,0x7d
  418a5c:	hlt    
  418a5d:	fstp   DWORD PTR [edx+esi*4]
  418a60:	lods   al,BYTE PTR ds:[esi]
  418a61:	repnz sub BYTE PTR [ebp+0x1ff9b130],ch
  418a68:	jmp    0xc137:0x264afa9e
  418a6f:	shl    DWORD PTR [edx-0x27ad050a],1
  418a75:	pop    esp
  418a76:	cmp    al,0x3d
  418a78:	pop    edx
  418a79:	add    al,0xfd
  418a7b:	adc    eax,DWORD PTR [eax]
  418a7d:	ret    
  418a7e:	jge    0x418aa0
  418a80:	push   ebp
  418a81:	or     eax,0xf7d20b61
  418a86:	mov    ebp,0x2f1355f9
  418a8b:	mov    ds:0xde6956ec,eax
  418a90:	out    0xe,al
  418a92:	pop    edx
  418a93:	jge    0x418aea
  418a95:	je     0x418aa5
  418a97:	xor    al,0x60
  418a99:	lea    ebp,[esi]
  418a9b:	retf   0x453e
  418a9e:	idiv   ebx
  418aa0:	mov    esp,DWORD PTR [edx]
  418aa2:	mov    ch,0x42
  418aa4:	jl     0x418ab5
  418aa6:	scas   eax,DWORD PTR es:[edi]
  418aa7:	stos   DWORD PTR es:[edi],eax
  418aa8:	push   ds
  418aa9:	data16 jns 0x418ae9
  418aac:	fld    TBYTE PTR [esi+0x49]
  418aaf:	xchg   edx,eax
  418ab0:	lods   al,BYTE PTR ds:[esi]
  418ab1:	sahf   
  418ab2:	pop    ds
  418ab3:	add    BYTE PTR [ebp+0x433cca6f],dl
  418ab9:	out    dx,al
  418aba:	xor    dl,bl
  418abc:	js     0x418a91
  418abe:	xlat   BYTE PTR ds:[ebx]
  418abf:	aam    0xf9
  418ac1:	sub    al,0x9
  418ac3:	test   al,0x9
  418ac5:	stos   DWORD PTR es:[edi],eax
  418ac6:	aaa    
  418ac7:	or     DWORD PTR [edx-0x7d77cc3a],0x13e7e980
  418ad1:	lahf   
  418ad2:	mov    eax,0xf503ec91
  418ad7:	pop    esp
  418ad8:	ret    
  418ad9:	cli    
  418ada:	inc    ecx
  418adb:	mov    ah,0xfa
  418add:	cdq    
  418ade:	xchg   edi,eax
  418adf:	pushf  
  418ae0:	loop   0x418a8b
  418ae2:	pop    ecx
  418ae3:	ja     0x418b56
  418ae5:	jo     0x418aeb
  418ae7:	icebp  
  418ae8:	ins    DWORD PTR es:[edi],dx
  418ae9:	popf   
  418aea:	add    al,0xef
  418aec:	nop
  418aed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418aee:	mov    eax,0x49a91f5b
  418af3:	push   ebx
  418af4:	mov    ch,0xfb
  418af6:	cld    
  418af7:	call   0x662f:0x5a94b39c
  418afe:	dec    eax
  418aff:	sbb    al,0x5
  418b01:	in     al,dx
  418b02:	jg     0x418b10
  418b04:	ss repz leave 
  418b07:	sbb    BYTE PTR [edx],cl
  418b09:	push   ebp
  418b0a:	pop    es
  418b0b:	imul   ebp,DWORD PTR [ebx+0x46],0xffffffda
  418b0f:	(bad)  
  418b10:	jp     0x418aac
  418b12:	loope  0x418b40
  418b14:	cdq    
  418b15:	stos   BYTE PTR es:[edi],al
  418b16:	inc    ebx
  418b17:	aad    0x3c
  418b19:	addr16 push edx
  418b1b:	or     dh,ah
  418b1d:	cs jecxz 0x418b23
  418b20:	ja     0x418b48
  418b22:	dec    eax
  418b23:	jg     0x418ac8
  418b25:	sub    al,0x6f
  418b27:	aas    
  418b28:	cmp    dh,BYTE PTR [esp+ebx*8]
  418b2b:	mov    ecx,edi
  418b2d:	in     al,dx
  418b2e:	aad    0x9a
  418b30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b31:	pop    eax
  418b32:	xchg   esi,eax
  418b33:	les    eax,FWORD PTR [edi+0x78ce185a]
  418b39:	jno    0x418ac5
  418b3b:	enter  0x8f0c,0xe2
  418b3f:	call   0x92fd:0x7deadf03
  418b46:	cs into 
  418b48:	sub    BYTE PTR [ebp+0x79],bl
  418b4b:	rol    BYTE PTR [esi],0xc1
  418b4e:	(bad)  
  418b4f:	cld    
  418b50:	or     BYTE PTR [esi-0x4d],dh
  418b53:	mov    al,ds:0xbddf894d
  418b58:	or     ebp,DWORD PTR [edi-0x3c8f4087]
  418b5e:	fst    QWORD PTR [eax+ebx*4]
  418b61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b62:	std    
  418b63:	sbb    bh,bl
  418b65:	push   eax
  418b66:	mov    edi,0xb17c81cb
  418b6b:	stos   BYTE PTR es:[edi],al
  418b6c:	loop   0x418bdf
  418b6e:	hlt    
  418b6f:	inc    ebx
  418b70:	push   esi
  418b71:	mov    ecx,gs
  418b73:	ss cmp eax,0xa8d287cb
  418b79:	or     DWORD PTR cs:0xc102c5d1,0x48d625c9
  418b84:	les    edx,FWORD PTR [esi+0x64]
  418b87:	mov    cl,0xf3
  418b89:	mov    ch,0xc8
  418b8b:	test   DWORD PTR [edi+0x5],esp
  418b8e:	adc    bl,BYTE PTR [esi]
  418b90:	adc    DWORD PTR [edi],ebp
  418b92:	pop    ebp
  418b93:	fmul   DWORD PTR [eax-0x3edcd34e]
  418b99:	mov    gs,WORD PTR [ecx]
  418b9b:	lods   eax,DWORD PTR ds:[esi]
  418b9c:	pop    ds
  418b9d:	popa   
  418b9e:	cmc    
  418b9f:	jmp    DWORD PTR [ebx-0x6e]
  418ba2:	sahf   
  418ba3:	cdq    
  418ba4:	in     al,dx
  418ba5:	add    BYTE PTR [ebx+0x73],dl
  418ba8:	inc    edx
  418ba9:	xchg   DWORD PTR [edx-0x787265be],ebp
  418baf:	add    al,ah
  418bb1:	pop    ss
  418bb2:	pop    ds
  418bb3:	xor    DWORD PTR ds:[ebp+0x6f66ac16],ebp
  418bba:	ss sbb ah,bh
  418bbd:	add    DWORD PTR [edx-0x63],esp
  418bc0:	push   ecx
  418bc1:	lods   eax,DWORD PTR ds:[esi]
  418bc2:	mov    ebx,0xa5d03ef9
  418bc7:	loop   0x418bea
  418bc9:	pushf  
  418bca:	mov    BYTE PTR [ebx],0x74
  418bcd:	or     eax,0x57135fb6
  418bd2:	lahf   
  418bd3:	cdq    
  418bd4:	or     DWORD PTR [edi-0x4eb1fca4],0x2ebc171b
  418bde:	adc    BYTE PTR [esi],bl
  418be0:	inc    ecx
  418be1:	jl     0x418ba3
  418be3:	arpl   cx,cx
  418be5:	iret   
  418be6:	pop    ebx
  418be7:	xchg   esp,eax
  418be8:	xchg   BYTE PTR [ebp+0x3f],dh
  418beb:	xor    BYTE PTR [edi],bl
  418bed:	fmul   QWORD PTR [edi-0x63e3df2b]
  418bf3:	mov    ss,WORD PTR [eax-0x6b]
  418bf6:	push   0xfffffffa
  418bf8:	idiv   DWORD PTR [ecx-0x14edc7de]
  418bfe:	inc    ecx
  418bff:	push   ebx
  418c00:	(bad)  
  418c01:	sub    eax,0x58b8e858
  418c06:	bound  eax,QWORD PTR [esi-0x6e]
  418c09:	push   0x68
  418c0b:	bound  edx,QWORD PTR [edx]
  418c0d:	xchg   BYTE PTR [edi-0x73],dh
  418c10:	mov    esp,0x6573af11
  418c15:	dec    esi
  418c16:	inc    esp
  418c17:	bound  edi,QWORD PTR ds:0x6989ecb4
  418c1d:	ins    DWORD PTR es:[edi],dx
  418c1e:	sub    bl,dl
  418c20:	sub    BYTE PTR [edi-0x3e],dl
  418c23:	enter  0xa088,0xf6
  418c27:	stos   BYTE PTR es:[edi],al
  418c28:	pop    eax
  418c29:	mov    ds:0xfd228e30,al
  418c2e:	and    eax,0xd223ca01
  418c33:	inc    eax
  418c34:	pop    esi
  418c35:	or     al,0xed
  418c37:	cmp    eax,0x17b3c6f6
  418c3c:	stos   BYTE PTR es:[edi],al
  418c3d:	xchg   esp,eax
  418c3e:	call   0x366d:0x7c0d4c2d
  418c45:	xor    esi,DWORD PTR [esi]
  418c47:	push   0xa73d511b
  418c4c:	gs das 
  418c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c4f:	gs mov dl,0x53
  418c52:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  418c54:	retf   0x3ebf
  418c57:	or     eax,ebx
  418c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c5a:	xchg   edx,eax
  418c5b:	enter  0x2b80,0x31
  418c5f:	aam    0xac
  418c61:	xchg   ebp,eax
  418c62:	je     0x418bec
  418c64:	xchg   edi,eax
  418c65:	xor    al,0xf1
  418c67:	pop    eax
  418c68:	xchg   edx,eax
  418c69:	xchg   edi,eax
  418c6a:	jae    0x418c16
  418c6c:	mov    al,0xd6
  418c6e:	pusha  
  418c6f:	inc    ecx
  418c70:	repz mov ds:0xb8eb3e0c,al
  418c76:	(bad)  
  418c77:	sbb    ch,BYTE PTR [esi-0x7b539202]
  418c7d:	xchg   ebp,eax
  418c7e:	xor    ch,bh
  418c80:	or     al,0x80
  418c82:	mov    esi,0xeeca9075
  418c87:	dec    edi
  418c88:	inc    ebp
  418c89:	push   es
  418c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c8b:	mul    DWORD PTR [ecx]
  418c8d:	ret    
  418c8e:	mov    edi,0x4a84ba61
  418c93:	fidiv  WORD PTR [ecx]
  418c95:	icebp  
  418c96:	int    0x26
  418c98:	es cli 
  418c9a:	test   BYTE PTR [ebp+0x19e56d24],bh
  418ca0:	sub    eax,0x980db3a0
  418ca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ca6:	dec    eax
  418ca7:	pusha  
  418ca8:	push   edi
  418ca9:	inc    ecx
  418caa:	xchg   DWORD PTR [edi-0x48626d8f],edx
  418cb0:	mov    ds:0xf698e901,al
  418cb5:	and    cl,BYTE PTR [edx-0x68724704]
  418cbb:	dec    ecx
  418cbc:	out    0x2c,eax
  418cbe:	sahf   
  418cbf:	call   0x7012a03c
  418cc4:	xchg   esi,eax
  418cc5:	lahf   
  418cc6:	std    
  418cc7:	pop    ebp
  418cc8:	fld    TBYTE PTR [edx+0x328c1cb5]
  418cce:	test   BYTE PTR ds:0x63bf94a9,0xad
  418cd5:	ds jae 0x418d41
  418cd8:	xchg   edx,eax
  418cd9:	into   
  418cda:	sub    esi,DWORD PTR [ecx-0x98e200e]
  418ce0:	outs   dx,BYTE PTR ds:[esi]
  418ce1:	dec    esi
  418ce2:	mov    ebx,0x40c6caa9
  418ce7:	and    eax,0xacfffa35
  418cec:	cdq    
  418ced:	popf   
  418cee:	loop   0x418d46
  418cf0:	or     DWORD PTR [ebp+0x1f],ebp
  418cf3:	xchg   esi,eax
  418cf4:	add    al,ah
  418cf6:	bound  ecx,QWORD PTR [ebx+ebx*2]
  418cf9:	cmp    ch,cl
  418cfb:	jnp    0x418ce5
  418cfd:	int3   
  418cfe:	adc    esp,0xd3104747
  418d04:	cmp    BYTE PTR [ebx],dh
  418d06:	cmp    BYTE PTR [edi+0x6b41ee53],al
  418d0c:	fild   QWORD PTR [edx+edi*4-0xb]
  418d10:	inc    esp
  418d11:	std    
  418d12:	mov    ecx,0x3bce6e53
  418d17:	inc    ebx
  418d18:	or     BYTE PTR [ebp+0xb740feb],bh
  418d1e:	shr    edi,0xc9
  418d21:	jbe    0x418cb0
  418d23:	mov    eax,0xfede6a8c
  418d28:	sbb    al,0x25
  418d2a:	dec    esi
  418d2b:	sub    esp,ebp
  418d2d:	fwait
  418d2e:	addr16 inc ecx
  418d30:	loop   0x418cd9
  418d32:	lods   al,BYTE PTR ds:[esi]
  418d33:	jp     0x418d10
  418d35:	fcmovnu st,st(0)
  418d37:	adc    ebx,ebp
  418d39:	mov    ds:0xf8d27870,al
  418d3e:	out    dx,al
  418d3f:	and    BYTE PTR [esi+0x3cb27274],dl
  418d45:	aas    
  418d46:	mov    bl,0x51
  418d48:	push   cs
  418d49:	popf   
  418d4a:	test   BYTE PTR [ecx],dh
  418d4c:	add    bl,BYTE PTR [ecx+0xd]
  418d4f:	retf   0xcd72
  418d52:	retf   
  418d53:	test   eax,0x38e2ddb3
  418d58:	inc    esi
  418d59:	xchg   esp,eax
  418d5a:	and    edi,ebx
  418d5c:	fadd   DWORD PTR [eax-0x6e]
  418d5f:	mov    edi,0x3637f802
  418d64:	rcr    al,cl
  418d66:	jle    0x418d05
  418d68:	mov    cl,BYTE PTR [eax-0x5908654e]
  418d6e:	scas   eax,DWORD PTR es:[edi]
  418d6f:	xor    ecx,DWORD PTR [esi+eax*4]
  418d72:	ja     0x418d69
  418d74:	and    BYTE PTR [ebx],dl
  418d76:	iret   
  418d77:	cmp    al,0xb4
  418d79:	sub    al,0x1b
  418d7b:	push   esp
  418d7c:	mov    ah,0x7
  418d7e:	fs jg  0x418d6a
  418d81:	fcomp  DWORD PTR [edi]
  418d83:	std    
  418d84:	jecxz  0x418dbd
  418d86:	inc    eax
  418d87:	push   edx
  418d88:	and    ah,cl
  418d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d8b:	sub    DWORD PTR [ebx-0x1c],edi
  418d8e:	adc    BYTE PTR [ebp-0x39],0xfd
  418d92:	jmp    0x418dc7
  418d94:	inc    edx
  418d95:	sbb    ah,0x88
  418d98:	pop    ebx
  418d99:	ficomp DWORD PTR [eax+edx*2+0x42]
  418d9d:	push   ss
  418d9e:	(bad)  
  418d9f:	int3   
  418da0:	icebp  
  418da1:	mov    al,ds:0xc8d78418
  418da6:	jne    0x418ded
  418da8:	enter  0x5729,0xc3
  418dac:	add    DWORD PTR [esi+0x8e25b42],ebp
  418db2:	cmp    bh,BYTE PTR [ebx+0xd]
  418db5:	push   0x7de53f88
  418dba:	xchg   DWORD PTR [edx],esi
  418dbc:	or     al,BYTE PTR [ebx+eax*2+0x502d13d3]
  418dc3:	sti    
  418dc4:	jle    0x418d4e
  418dc6:	add    dh,dl
  418dc8:	hlt    
  418dc9:	jo     0x418d67
  418dcb:	je     0x418e28
  418dcd:	inc    ebp
  418dce:	outs   dx,BYTE PTR ds:[esi]
  418dcf:	xor    DWORD PTR [edx+0x5f],0x1cd1d77e
  418dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dd7:	rol    DWORD PTR [edx+0x67676c1f],0x31
  418dde:	(bad)  
  418ddf:	test   DWORD PTR [esi-0x4faf45df],0x3774d29d
  418de9:	cwde   
  418dea:	iret   
  418deb:	mov    ebp,ds
  418ded:	retf   0xa422
  418df0:	sub    DWORD PTR [ebx-0xb],ebx
  418df3:	xor    DWORD PTR [eax+0x77],esi
  418df6:	pop    esp
  418df7:	mov    bl,bh
  418df9:	push   ebx
  418dfa:	jno    0x418e02
  418dfc:	jbe    0x418dd3
  418dfe:	cmp    esi,DWORD PTR [ebx+eiz*2]
  418e01:	ja     0x418e2c
  418e03:	xchg   ecx,eax
  418e04:	xchg   ebx,eax
  418e05:	add    esp,DWORD PTR [edi]
  418e07:	add    bl,cl
  418e09:	pop    ecx
  418e0a:	scas   eax,DWORD PTR es:[edi]
  418e0b:	inc    ecx
  418e0c:	pop    ebp
  418e0d:	cmp    al,0x62
  418e0f:	adc    edx,ecx
  418e11:	fucom  st(1)
  418e13:	cmc    
  418e14:	jle    0x418d98
  418e16:	xlat   BYTE PTR ds:[ebx]
  418e17:	sti    
  418e18:	or     DWORD PTR [esi-0x3e1af81a],0xbb6a57c9
  418e22:	inc    edi
  418e23:	fiadd  DWORD PTR [esi+0x34]
  418e26:	out    0xb7,eax
  418e28:	push   cs
  418e29:	ja     0x418dc0
  418e2b:	pop    eax
  418e2c:	int    0x97
  418e2e:	arpl   WORD PTR [eax-0x1c],di
  418e31:	pop    eax
  418e32:	add    ah,BYTE PTR [ebx+0x6eddbed1]
  418e38:	jmp    0xec7ead16
  418e3d:	popa   
  418e3e:	pushaw 
  418e40:	mov    ah,0x67
  418e42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e43:	aam    0x22
  418e45:	xor    edi,ebx
  418e47:	scas   al,BYTE PTR es:[edi]
  418e48:	lea    esp,[esi-0x6c]
  418e4b:	js     0x418dd5
  418e4d:	daa    
  418e4e:	push   ds
  418e4f:	fwait
  418e50:	hlt    
  418e51:	sub    eax,0xeb11819e
  418e56:	leave  
  418e57:	daa    
  418e58:	ret    
  418e59:	rcr    dh,1
  418e5b:	mov    cl,0x55
  418e5d:	mov    edx,0x9c0537c1
  418e62:	pushf  
  418e63:	lds    edx,FWORD PTR [ebp-0x32]
  418e66:	and    eax,0xbe774ae6
  418e6b:	jne    0x418e72
  418e6d:	lea    eax,[edi]
  418e6f:	ja     0x418e1a
  418e71:	mov    ecx,0xabfce605
  418e76:	jmp    0xa9c3:0x576343ed
  418e7d:	add    ebx,eax
  418e7f:	inc    edx
  418e80:	push   ss
  418e81:	cwde   
  418e82:	aas    
  418e83:	xchg   edi,eax
  418e84:	mov    BYTE PTR [edx],ah
  418e86:	mov    ebp,0x10d0eb22
  418e8b:	outs   dx,DWORD PTR ds:[esi]
  418e8c:	or     BYTE PTR [ebx],bl
  418e8e:	adc    BYTE PTR [eax],0x39
  418e91:	sbb    al,0x14
  418e93:	ficom  DWORD PTR [ecx+0x2b3d6c80]
  418e99:	mul    BYTE PTR [edi+0x7360054e]
  418e9f:	xor    dh,bh
  418ea1:	aas    
  418ea2:	(bad)  
  418ea3:	xlat   BYTE PTR ds:[ebx]
  418ea4:	(bad)  
  418ea5:	fnstsw ax
  418ea7:	dec    edi
  418ea8:	pop    esi
  418ea9:	sti    
  418eaa:	data16 loopne 0x418e94
  418ead:	pop    ss
  418eae:	es jns 0x418ebe
  418eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418eb2:	nop
  418eb3:	adc    BYTE PTR [esi+edi*1+0x7],al
  418eb7:	stos   BYTE PTR es:[edi],al
  418eb8:	(bad)  
  418eb9:	call   0x9460d648
  418ebe:	push   ss
  418ebf:	cli    
  418ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ec1:	dec    ecx
  418ec2:	mov    ebp,0x4a345f8
  418ec7:	push   cs
  418ec8:	jae    0x418e4d
  418eca:	or     al,0xa5
  418ecc:	inc    ebx
  418ecd:	cli    
  418ece:	and    ch,BYTE PTR [eax]
  418ed0:	repnz nop
  418ed2:	sub    eax,esi
  418ed4:	in     al,0x29
  418ed6:	repnz mov ch,0x51
  418ed9:	push   ebp
  418eda:	into   
  418edb:	aad    0x41
  418edd:	pop    ss
  418ede:	mov    esp,0xa6b4e960
  418ee3:	repnz test BYTE PTR [edx+edx*1+0x7b],bh
  418ee8:	les    ebx,FWORD PTR [ecx+0x75]
  418eeb:	jmp    0x7bf1:0xcd78b841
  418ef2:	inc    ecx
  418ef3:	jb     0x418eb3
  418ef5:	pop    eax
  418ef6:	fnstsw WORD PTR [ebx+0x5]
  418ef9:	pop    ecx
  418efb:	mov    ds,esp
  418efd:	xchg   edi,eax
  418efe:	sub    al,0xec
  418f00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f01:	jnp    0x418ed5
  418f03:	sar    DWORD PTR [ecx-0x36e460ef],1
  418f09:	add    bl,BYTE PTR [edi]
  418f0b:	lods   al,BYTE PTR ds:[esi]
  418f0c:	cdq    
  418f0d:	arpl   WORD PTR [edi+0x70470303],si
  418f13:	push   edi
  418f14:	push   eax
  418f15:	add    al,0xe6
  418f17:	xor    eax,0x62f55657
  418f1c:	xchg   ebp,eax
  418f1d:	add    DWORD PTR [edx-0x179591c],esp
  418f23:	xchg   edi,eax
  418f24:	mov    ch,al
  418f26:	xchg   edi,eax
  418f27:	mov    ds:0xd93cc34a,eax
  418f2c:	ins    DWORD PTR es:[edi],dx
  418f2d:	mov    BYTE PTR [ecx+0x19d3e95a],bl
  418f33:	test   BYTE PTR [edx],0x6c
  418f36:	int3   
  418f37:	add    eax,0x313f00fa
  418f3c:	and    esi,ecx
  418f3e:	jl     0x418f80
  418f40:	mov    BYTE PTR [esi],cl
  418f42:	aam    0x38
  418f44:	push   edx
  418f45:	dec    ebx
  418f46:	sti    
  418f47:	(bad)  
  418f48:	int    0x7d
  418f4a:	add    al,0xa5
  418f4c:	cmp    dh,cl
  418f4e:	je     0x418fc6
  418f50:	xlat   BYTE PTR ds:[ebx]
  418f51:	adc    DWORD PTR [eax-0x73],eax
  418f54:	(bad)  
  418f55:	stos   DWORD PTR es:[edi],eax
  418f56:	and    al,0xc4
  418f58:	gs and dh,dl
  418f5b:	cmp    al,0x4
  418f5d:	dec    ebp
  418f5e:	mov    al,0x2a
  418f60:	mov    ds:0x9a8aa832,eax
  418f65:	jnp    0x418fd3
  418f67:	shr    BYTE PTR [ebp+0x1ad12c61],0x54
  418f6e:	gs scas eax,DWORD PTR es:[edi]
  418f70:	mov    edx,0xaac575dd
  418f75:	sub    ecx,DWORD PTR [ebx-0x1eb49b1e]
  418f7b:	in     al,0x50
  418f7d:	push   ss
  418f7e:	sub    ch,BYTE PTR [edx-0x39]
  418f81:	cld    
  418f82:	push   ss
  418f83:	adc    BYTE PTR [eax+0xa986ffd],0x76
  418f8a:	loopne 0x418fe8
  418f8c:	mov    es,eax
  418f8e:	mov    ch,0x42
  418f90:	sub    al,0xb2
  418f92:	cmp    DWORD PTR [esi],ecx
  418f94:	jmp    0x418f87
  418f96:	hlt    
  418f97:	jno    0x418fec
  418f99:	add    ebx,DWORD PTR [ebx]
  418f9b:	push   ebp
  418f9c:	jns    0x418f40
  418f9e:	dec    ecx
  418f9f:	add    ecx,DWORD PTR [ebx]
  418fa1:	xor    DWORD PTR [edi-0x5548fbca],esi
  418fa7:	lds    edi,FWORD PTR [edx+0x3f]
  418faa:	xlat   BYTE PTR ds:[ebx]
  418fab:	stos   BYTE PTR es:[edi],al
  418fac:	je     0x418fa5
  418fae:	in     eax,0x30
  418fb0:	push   ebx
  418fb1:	ins    DWORD PTR es:[edi],dx
  418fb2:	or     al,0x83
  418fb4:	inc    ebx
  418fb5:	push   esi
  418fb6:	sub    eax,0xba51fae5
  418fbb:	fstp   QWORD PTR [eax]
  418fbd:	cli    
  418fbe:	mov    ah,0x63
  418fc0:	cmp    DWORD PTR [esi+0x2f],0x3f
  418fc4:	inc    ebp
  418fc5:	int3   
  418fc6:	ss call 0x514e2c60
  418fcc:	xor    eax,0xd2f28b44
  418fd1:	pop    ss
  418fd2:	mov    ds:0xc42ccb62,al
  418fd7:	or     BYTE PTR [edi+0x71],al
  418fda:	outs   dx,DWORD PTR ds:[esi]
  418fdb:	add    ah,BYTE PTR [esi+0xc]
  418fde:	jecxz  0x41904d
  418fe0:	das    
  418fe1:	inc    ebp
  418fe2:	test   eax,0x8b0aa6ac
  418fe7:	mov    dh,0x54
  418fe9:	arpl   cx,di
  418feb:	test   eax,0x68e74018
  418ff0:	inc    ebx
  418ff1:	xor    ch,ch
  418ff3:	and    DWORD PTR [ecx+0x77991dca],edi
  418ff9:	jb     0x418fcb
  418ffb:	or     BYTE PTR [ecx+eiz*8-0x54],ch
  418fff:	repz sub al,0x13
  419002:	sub    ah,BYTE PTR [edi-0x1b255186]
  419008:	push   0xfffffffb
  41900a:	and    BYTE PTR [esi],ah
  41900c:	xchg   ebx,eax
  41900d:	jns    0x419088
  41900f:	mov    edi,0xa9cb0c0c
  419014:	hlt    
  419015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419016:	test   DWORD PTR [edx+0xb],esp
  419019:	push   cs
  41901a:	pop    esp
  41901b:	(bad)  
  41901c:	shr    BYTE PTR [edx],1
  41901e:	or     edx,DWORD PTR [edi+0x6d]
  419021:	rcl    BYTE PTR [eax+edx*4-0x74],1
  419025:	or     eax,0x34000c36
  41902a:	retf   
  41902b:	stos   BYTE PTR es:[edi],al
  41902c:	jmp    0x419071
  41902e:	or     DWORD PTR [ebp-0xf],edi
  419031:	and    eax,DWORD PTR [edi-0x8]
  419034:	adc    DWORD PTR [edi],edi
  419036:	push   ds
  419037:	push   ebx
  419038:	aaa    
  419039:	push   ebx
  41903a:	jbe    0x41901d
  41903c:	xchg   ebp,eax
  41903d:	mov    ?,ebp
  41903f:	inc    eax
  419040:	in     eax,dx
  419041:	sbb    edx,DWORD PTR [ecx+ebx*1-0x267f3fd3]
  419048:	mov    edx,0xcf0a79e6
  41904d:	xor    edx,ebp
  41904f:	push   esi
  419050:	sbb    dl,ah
  419052:	cdq    
  419053:	cmp    eax,0x865a727f
  419058:	jl     0x419080
  41905a:	in     al,dx
  41905b:	jmp    0xaae8e762
  419060:	test   DWORD PTR [ebx+edi*2],esp
  419063:	or     ebx,edi
  419065:	sub    eax,0xf7bd0e5d
  41906a:	dec    ebp
  41906b:	adc    eax,0xc042eec6
  419070:	ret    
  419071:	pop    esp
  419072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419073:	inc    ebp
  419074:	cdq    
  419075:	icebp  
  419076:	div    ecx
  419078:	xor    al,dh
  41907a:	dec    ecx
  41907b:	in     eax,dx
  41907c:	push   0xffffffc6
  41907e:	aas    
  41907f:	mov    bh,0xc8
  419081:	outs   dx,BYTE PTR ds:[esi]
  419082:	inc    edi
  419083:	inc    edi
  419084:	std    
  419085:	std    
  419086:	cwde   
  419087:	xlat   BYTE PTR ds:[ebx]
  419088:	imul   esi,DWORD PTR [ebx],0x1fbfe98b
  41908e:	pop    edx
  41908f:	push   esi
  419090:	gs repnz mov bh,ah
  419094:	cld    
  419095:	sbb    BYTE PTR [ebx-0x3],ch
  419098:	inc    edi
  419099:	mov    eax,0x924f8c36
  41909e:	push   edi
  41909f:	ds into 
  4190a1:	ret    0xc901
  4190a4:	sahf   
  4190a5:	dec    esi
  4190a6:	and    al,0x11
  4190a8:	test   eax,0xdc06c61c
  4190ad:	jb     0x419079
  4190af:	sbb    DWORD PTR [ebx-0x2f9c296b],esp
  4190b5:	(bad)  
  4190b6:	sbb    al,bh
  4190b8:	mov    eax,0x5baf8488
  4190bd:	fwait
  4190be:	repnz lea esp,[edx+0x46]
  4190c2:	jb     0x4190b6
  4190c4:	mov    BYTE PTR [edx],dh
  4190c6:	xor    al,0x4e
  4190c8:	ins    DWORD PTR es:[edi],dx
  4190c9:	mov    al,BYTE PTR [esi+0x19]
  4190cc:	pop    eax
  4190cd:	out    0x6a,eax
  4190cf:	mov    dh,0x70
  4190d1:	push   ebx
  4190d2:	mov    ch,0x7f
  4190d4:	inc    eax
  4190d5:	mov    WORD PTR ds:0x7a98410f,ds
  4190db:	or     eax,0x1546fcfe
  4190e0:	pop    es
  4190e1:	xlat   BYTE PTR ds:[ebx]
  4190e2:	imul   ebx,DWORD PTR [ebx-0x75578322],0x6c4fb626
  4190ec:	shl    DWORD PTR [edx],cl
  4190ee:	pop    eax
  4190ef:	pop    ss
  4190f0:	push   ebp
  4190f1:	xchg   ecx,eax
  4190f2:	sub    al,0x6b
  4190f4:	jmp    0x4190fd
  4190f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190f7:	mov    eax,ds:0x4daa4903
  4190fc:	mov    cl,0xbf
  4190fe:	leave  
  4190ff:	mov    al,ds:0x4e060eac
  419104:	(bad)
  419107:	jb     0x419148
  419109:	test   al,0xa9
  41910b:	ja     0x4190e4
  41910d:	(bad)  
  41910e:	dec    edi
  41910f:	or     dl,bl
  419111:	fmul   st,st(1)
  419113:	cs cmp al,0x13
  419116:	fst    DWORD PTR ds:0xd776b42e
  41911c:	push   es
  41911d:	sar    BYTE PTR [eax+0x62974f24],0xfd
  419124:	(bad)  
  419125:	jns    0x419160
  419127:	lea    ecx,[edx]
  419129:	or     eax,0x6cd09c8b
  41912e:	gs xchg edx,eax
  419130:	cmp    eax,0xa5defa8b
  419135:	fistp  DWORD PTR [ebp-0x638620f2]
  41913b:	sbb    eax,0xe6ec2791
  419140:	jg     0x419199
  419142:	rcr    esp,0xd9
  419145:	ds por mm5,mm1
  419149:	cdq    
  41914a:	cmp    BYTE PTR [eax-0x49],ch
  41914d:	inc    ebx
  41914e:	pop    ecx
  41914f:	in     al,dx
  419150:	xchg   ecx,eax
  419151:	imul   esi,DWORD PTR [esi-0x46],0x5a
  419155:	fild   WORD PTR [ecx-0x4d5ea5e3]
  41915b:	call   FWORD PTR [ebx]
  41915d:	mov    edi,0xbbd9edc0
  419162:	xchg   ecx,eax
  419163:	adc    ebp,DWORD PTR [edi+ebx*1]
  419166:	lahf   
  419167:	xchg   edi,eax
  419168:	out    0x70,eax
  41916a:	xchg   BYTE PTR [eax+esi*8],bh
  41916d:	icebp  
  41916e:	dec    ecx
  41916f:	sub    DWORD PTR [edi-0x71],ebx
  419172:	ss jg  0x4191e3
  419175:	jp     0x4191c9
  419177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419178:	add    eax,0x559c70bb
  41917e:	cdq    
  41917f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419180:	ret    
  419181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419182:	not    ah
  419184:	sub    dl,BYTE PTR [edx-0x5134d534]
  41918a:	push   cs
  41918b:	call   FWORD PTR [esi+eiz*1-0x165301d5]
  419192:	lds    eax,FWORD PTR [ecx]
  419194:	xor    esp,DWORD PTR [ebx-0x5c9bd35a]
  41919a:	jns    0x4191e3
  41919c:	sub    BYTE PTR [ebx-0x25],ah
  41919f:	dec    ebx
  4191a0:	(bad)  
  4191a1:	(bad)  
  4191a2:	nop
  4191a3:	(bad)  
  4191a4:	cli    
  4191a5:	dec    ebx
  4191a6:	mov    eax,0xc643f5f6
  4191ab:	repnz enter 0xed0f,0xa3
  4191b0:	jge    0x4191a7
  4191b2:	ja     0x4191f5
  4191b4:	xchg   esp,eax
  4191b5:	ins    BYTE PTR es:[edi],dx
  4191b6:	mov    cl,0xed
  4191b8:	aas    
  4191b9:	mov    ecx,DWORD PTR [ecx+0x8]
  4191bc:	jno    0x41916e
  4191be:	mov    eax,ds:0xd88b513b
  4191c3:	add    ebp,DWORD PTR [ebp-0x10]
  4191c6:	mov    ch,0xe6
  4191c8:	or     eax,0x53fa58a9
  4191cd:	pop    ds
  4191ce:	xor    dl,BYTE PTR ds:0xcccefcf1
  4191d4:	jno    0x4191db
  4191d6:	pushf  
  4191d7:	arpl   WORD PTR [ebx-0x33],di
  4191da:	fild   WORD PTR [edx-0x8]
  4191dd:	sbb    al,0x3f
  4191df:	dec    edi
  4191e0:	xchg   ebp,eax
  4191e1:	and    al,0xbb
  4191e3:	inc    esi
  4191e4:	(bad)  
  4191e5:	mov    esp,0xc92f7b8a
  4191ea:	mov    edi,0x3c7c0851
  4191ef:	sbb    bh,BYTE PTR [edx-0xf24b936]
  4191f5:	xor    bh,BYTE PTR ds:0x64ee2f2c
  4191fb:	imul   ecx,DWORD PTR [ebp+ebx*2-0x2fd2219e],0xffffffa6
  419203:	outs   dx,DWORD PTR ds:[esi]
  419204:	mov    dh,0x59
  419206:	add    edi,DWORD PTR [ebx-0x3b]
  419209:	stos   DWORD PTR es:[edi],eax
  41920a:	test   DWORD PTR [edi+edx*1],eax
  41920d:	aas    
  41920e:	push   ebx
  41920f:	pop    ss
  419210:	or     eax,0xbc608c23
  419215:	cdq    
  419216:	in     eax,dx
  419217:	mov    esp,0xf512ead3
  41921c:	cld    
  41921d:	inc    ebx
  41921e:	push   esp
  41921f:	mov    ebx,DWORD PTR [ecx-0x47ffc70b]
  419225:	pop    es
  419226:	pop    edi
  419227:	xchg   edi,eax
  419228:	mov    WORD PTR [eax],?
  41922a:	out    dx,al
  41922b:	lods   al,BYTE PTR gs:[esi]
  41922d:	lahf   
  41922e:	loope  0x41922d
  419230:	pop    ebx
  419231:	xor    BYTE PTR [eax],bh
  419233:	xor    ebx,edi
  419235:	sub    dh,dh
  419237:	mov    cl,0xbd
  419239:	sub    DWORD PTR [eax+ecx*2+0x39],esp
  41923d:	outs   dx,BYTE PTR ds:[esi]
  41923e:	popf   
  41923f:	aam    0x6b
  419241:	cmp    DWORD PTR [ebp-0xa],0x5f
  419245:	push   ss
  419246:	test   eax,0x7d0820ed
  41924b:	es in  eax,0x7b
  41924e:	call   0x189729eb
  419253:	rcl    DWORD PTR [ebp-0xd559792],1
  419259:	mul    BYTE PTR [edi+0x0]
  41925c:	pop    ebp
  41925d:	xchg   esp,eax
  41925e:	repz enter 0x9c88,0x14
  419263:	ret    0x5d37
  419266:	data16 ror BYTE PTR [edx-0x60de5331],0x7e
  41926e:	call   0xa4:0x5262dac3
  419275:	mov    eax,ds:0x4efde22f
  41927a:	mov    al,0xcd
  41927c:	xchg   ebx,eax
  41927d:	adc    dh,bh
  41927f:	xlat   BYTE PTR ds:[ebx]
  419280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419281:	pusha  
  419282:	jecxz  0x419248
  419284:	xor    al,dh
  419286:	(bad)  
  419288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419289:	push   ebx
  41928a:	punpckhdq mm2,mm3
  41928d:	xchg   edi,eax
  41928e:	inc    DWORD PTR [edx-0x5f]
  419291:	push   es
  419292:	sub    ebp,ebx
  419294:	dec    ebp
  419295:	pop    edi
  419296:	sbb    BYTE PTR [eax+0x2784a992],0x6
  41929d:	dec    esi
  41929e:	sbb    DWORD PTR [edi-0x4c139495],0x38d2c093
  4192a8:	push   ss
  4192a9:	in     al,0x3b
  4192ab:	mov    fs,WORD PTR ds:[ebx-0x197f03b2]
  4192b2:	out    0x72,eax
  4192b4:	pop    esp
  4192b5:	adc    dh,BYTE PTR [ecx+0x10]
  4192b8:	jle    0x41927f
  4192ba:	pusha  
  4192bb:	leave  
  4192bc:	pop    edx
  4192bd:	pop    edx
  4192be:	ja     0x4192f4
  4192c0:	sbb    DWORD PTR [esi-0x49],ebx
  4192c3:	and    ch,dl
  4192c5:	int3   
  4192c6:	lods   al,BYTE PTR ds:[esi]
  4192c7:	sub    BYTE PTR [esi+0x5150f5f1],ch
  4192cd:	fistp  QWORD PTR [edi+0x5cde5972]
  4192d3:	or     cl,BYTE PTR [ecx]
  4192d5:	mov    ?,WORD PTR [edi-0x6]
  4192d8:	mov    ebx,0x29864af
  4192dd:	xchg   BYTE PTR [edi-0x7],cl
  4192e0:	stos   DWORD PTR es:[edi],eax
  4192e1:	pop    ecx
  4192e2:	mov    ebx,0x2cceac8
  4192e7:	test   DWORD PTR [esi],edx
  4192e9:	xchg   ebp,eax
  4192ea:	rol    cl,1
  4192ec:	cmc    
  4192ed:	or     BYTE PTR [edx*4-0x1b782f26],0xd
  4192f5:	jno    0x4192c9
  4192f7:	out    0x82,eax
  4192f9:	or     edx,0xbca79d2d
  4192ff:	inc    edx
  419300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419301:	xchg   edi,eax
  419302:	dec    esi
  419303:	sbb    edx,ecx
  419305:	mov    DWORD PTR [ebx-0x1e573904],eax
  41930b:	mov    eax,0x7f9d14a2
  419310:	adc    eax,0x8d27f117
  419315:	xor    al,0x7c
  419317:	pop    ebp
  419318:	push   ecx
  419319:	mov    ebp,DWORD PTR [eax-0x2]
  41931c:	loopne 0x4192e7
  41931e:	mov    ebp,0x1c1e44c6
  419323:	or     BYTE PTR [ebp+0x25],ah
  419326:	or     ebx,esp
  419328:	int3   
  419329:	push   ds
  41932a:	aas    
  41932b:	xchg   DWORD PTR [ebp+0x2fa380b9],esi
  419331:	(bad)  
  419332:	daa    
  419333:	add    al,0x80
  419335:	pushf  
  419336:	out    0x91,eax
  419338:	jae    0x419314
  41933a:	push   ebp
  41933b:	adc    cl,ch
  41933d:	cld    
  41933e:	dec    esp
  41933f:	sub    esi,esi
  419341:	ret    0x3f2
  419344:	and    eax,0x6f71cc11
  419349:	xchg   ebp,eax
  41934a:	sbb    BYTE PTR [ecx+edi*2],cl
  41934d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41934e:	pop    ebx
  41934f:	mov    ebx,0xfe74df8b
  419354:	daa    
  419355:	add    eax,0x9194b233
  41935a:	pop    ds
  41935b:	pushf  
  41935c:	cs jae 0x419327
  41935f:	add    ebx,DWORD PTR [edi]
  419361:	xchg   edx,eax
  419362:	cmc    
  419363:	xchg   edi,eax
  419364:	mov    ds:0x7fe8dc75,al
  419369:	das    
  41936a:	nop
  41936b:	fwait
  41936c:	dec    esp
  41936d:	int    0x62
  41936f:	dec    eax
  419370:	jmp    0x4193ab
  419372:	push   0xf57527a0
  419377:	leave  
  419378:	mov    bh,0x41
  41937a:	ss daa 
  41937c:	(bad)  
  41937e:	mov    al,ds:0xe0a59ab3
  419383:	add    edi,DWORD PTR [edx]
  419385:	mov    esp,0xb6dd5c7b
  41938a:	fdivrp st(6),st
  41938c:	push   eax
  41938d:	xor    eax,0x632d2536
  419392:	daa    
  419393:	mov    ds:0x6c7c0d8d,eax
  419398:	dec    esp
  419399:	sub    DWORD PTR [edx-0x339aacd2],esi
  41939f:	inc    ecx
  4193a0:	(bad)  
  4193a1:	addr16 pop ebx
  4193a3:	hlt    
  4193a4:	icebp  
  4193a5:	pusha  
  4193a6:	jl     0x4193a8
  4193a8:	fistp  QWORD PTR [ecx]
  4193aa:	mov    ds:0xa419cef9,al
  4193af:	or     eax,0xba7add90
  4193b4:	lahf   
  4193b5:	lock mov ecx,0xea5e3715
  4193bb:	pop    eax
  4193bc:	pop    ax
  4193be:	inc    ecx
  4193bf:	xchg   edx,eax
  4193c0:	dec    edx
  4193c1:	stos   DWORD PTR es:[edi],eax
  4193c2:	iret   
  4193c3:	dec    edx
  4193c4:	jg     0x4193cc
  4193c6:	adc    eax,DWORD PTR [edi-0x526cf037]
  4193cc:	mov    dh,0xf1
  4193ce:	outs   dx,BYTE PTR ds:[esi]
  4193cf:	push   eax
  4193d0:	push   ss
  4193d1:	frstor [esp+ebp*2+0x59]
  4193d5:	cli    
  4193d6:	push   0xe75e4b29
  4193db:	icebp  
  4193dc:	cmp    al,0x7e
  4193de:	sub    ebp,DWORD PTR [edx]
  4193e0:	and    eax,DWORD PTR [esi+esi*8-0x2b7d22f3]
  4193e7:	xchg   edi,eax
  4193e8:	xchg   esp,eax
  4193e9:	xor    BYTE PTR [edx+0x40bdc7f6],al
  4193ef:	jp     0x419419
  4193f1:	sbb    al,0x7d
  4193f3:	in     al,dx
  4193f4:	(bad)  
  4193f5:	sub    ah,cl
  4193f7:	call   0xe3bd:0xd68b89d1
  4193fe:	pusha  
  4193ff:	mov    BYTE PTR [edi-0x4b],bl
  419402:	dec    edx
  419403:	inc    eax
  419404:	pop    ecx
  419405:	cli    
  419406:	sub    BYTE PTR [eax-0x62],cl
  419409:	mov    al,0xad
  41940b:	sub    eax,0x64edfa52
  419410:	mov    al,0x4d
  419412:	in     al,dx
  419413:	lds    esp,FWORD PTR [ebx]
  419415:	fcmovne st,st(4)
  419417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419418:	xor    ebp,DWORD PTR [ebx]
  41941a:	sbb    BYTE PTR [edx+eiz*1+0x49],0xf9
  41941f:	push   cs
  419420:	scas   al,BYTE PTR es:[edi]
  419421:	jb     0x4193ea
  419423:	fstp   QWORD PTR [ecx+0x49a38a04]
  419429:	lods   eax,DWORD PTR ds:[esi]
  41942a:	or     DWORD PTR [edi+0x41],edi
  41942d:	jae    0x4193c7
  41942f:	sbb    ch,ah
  419431:	retf   0x6ac
  419434:	cmp    al,0xf7
  419436:	call   0x3f80:0x61489666
  41943d:	jne    0x419456
  41943f:	in     eax,dx
  419440:	inc    ebp
  419441:	scas   eax,DWORD PTR es:[edi]
  419442:	jo     0x4194bc
  419444:	xchg   BYTE PTR [eax+0x8d9e8b1],cl
  41944a:	xor    DWORD PTR [edx],ecx
  41944c:	inc    eax
  41944d:	das    
  41944e:	jecxz  0x419499
  419450:	inc    eax
  419451:	stos   DWORD PTR es:[edi],eax
  419452:	sbb    al,0x2
  419454:	adc    esp,DWORD PTR [eax-0x4a6bdb50]
  41945a:	jns    0x4194b5
  41945c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41945d:	in     al,0x92
  41945f:	mov    dl,cl
  419461:	push   ebp
  419462:	shl    cl,1
  419464:	les    edi,FWORD PTR [esi]
  419466:	fcom   DWORD PTR [eax+0x41]
  419469:	add    cl,BYTE PTR [esi+ebx*2-0x6b]
  41946d:	add    DWORD PTR [ebx-0x5a],ecx
  419470:	pop    ebx
  419471:	jne    0x419487
  419473:	in     eax,dx
  419474:	sbb    DWORD PTR [eax+0x25b065e],ebp
  41947a:	out    0xc3,eax
  41947c:	jg     0x419487
  41947e:	xor    eax,0x414a995
  419483:	not    BYTE PTR [ebx+0x6e973f30]
  419489:	std    
  41948a:	pushf  
  41948b:	xor    BYTE PTR ds:0x2c76bb06,0x36
  419492:	pop    ds
  419493:	fsub   DWORD PTR [ebx-0x3f2b5917]
  419499:	les    edi,FWORD PTR [edx+0x79]
  41949c:	jnp    0x4194ee
  41949e:	(bad)  
  4194a0:	push   cs
  4194a1:	scas   eax,DWORD PTR es:[edi]
  4194a2:	or     eax,0xc630f784
  4194a7:	and    dh,BYTE PTR [edi]
  4194a9:	cli    
  4194aa:	sar    BYTE PTR [eax+0x7c05f6de],0x69
  4194b1:	sub    DWORD PTR [ebp-0x25f37400],esp
  4194b7:	cld    
  4194b8:	icebp  
  4194b9:	sbb    esp,edi
  4194bb:	mov    ?,WORD PTR [ebx+0x2307042d]
  4194c1:	iret   
  4194c2:	lock xchg edi,eax
  4194c4:	adc    al,0x3b
  4194c6:	pushf  
  4194c7:	sub    BYTE PTR ds:0x51a698e4,al
  4194cd:	jns    0x419499
  4194cf:	sub    ecx,DWORD PTR [eax+0x4499ec32]
  4194d5:	ds mov ah,0xba
  4194d8:	mov    eax,0x62e8d0cf
  4194dd:	mov    ah,0x20
  4194df:	cmc    
  4194e0:	inc    esi
  4194e1:	jbe    0x41951a
  4194e3:	jno    0x41954f
  4194e5:	cs iret 
  4194e7:	and    edi,DWORD PTR [eax]
  4194e9:	lods   eax,DWORD PTR ds:[esi]
  4194ea:	sti    
  4194eb:	mov    edi,DWORD PTR [ebx-0x76cf92d0]
  4194f1:	es push ecx
  4194f3:	enter  0x1356,0xad
  4194f7:	jo     0x419532
  4194f9:	mov    esi,DWORD PTR [esi]
  4194fb:	dec    esi
  4194fc:	jae    0x419488
  4194fe:	pop    DWORD PTR [eax+edx*8]
  419501:	sahf   
  419502:	jmp    0x25dc4f28
  419507:	adc    al,bh
  419509:	(bad)  
  41950a:	push   ebp
  41950b:	stc    
  41950c:	inc    edi
  41950d:	sub    BYTE PTR [ebx+0x76b1d70f],dl
  419513:	and    DWORD PTR [ebp-0x35131d92],ecx
  419519:	call   DWORD PTR [ebx+0x40]
  41951c:	mov    ds:0xaca755f,eax
  419521:	inc    esi
  419522:	fisttp WORD PTR [edx]
  419524:	jp     0x41955e
  419526:	jae    0x4194eb
  419528:	daa    
  419529:	cs inc ebp
  41952b:	jb     0x41955e
  41952d:	inc    ecx
  41952e:	sub    eax,0x14b31a8a
  419533:	fs pushf 
  419535:	je     0x41954f
  419537:	add    DWORD PTR [ebx-0x432a83d6],esi
  41953d:	dec    esi
  41953e:	adc    DWORD PTR [edx],ebx
  419540:	out    dx,al
  419541:	jns    0x419595
  419543:	cmp    eax,0x46e243d8
  419548:	loopne 0x4194f1
  41954a:	sub    BYTE PTR [ebx],cl
  41954c:	test   al,0x9
  41954e:	aaa    
  41954f:	xlat   BYTE PTR ds:[ebx]
  419551:	(bad)  
  419553:	adc    bl,al
  419555:	mov    ds,WORD PTR [ecx-0x5de02b86]
  41955b:	push   esp
  41955c:	inc    esp
  41955d:	pop    esi
  41955e:	mov    al,0x7
  419560:	idiv   ah
  419562:	mov    ds:0x77ce3b6a,eax
  419567:	fst    QWORD PTR [eax+0x7d4ac502]
  41956d:	pop    ss
  41956e:	jo     0x419576
  419570:	test   DWORD PTR [edi-0x17868394],edx
  419576:	dec    eax
  419577:	add    al,0x1a
  419579:	hlt    
  41957a:	scas   eax,DWORD PTR es:[edi]
  41957b:	loope  0x4195bc
  41957d:	(bad)  
  41957e:	jmp    0x419584
  419580:	ss loopne 0x4195ac
  419583:	popa   
  419584:	sahf   
  419585:	cmp    eax,0xa16f22c
  41958a:	jne    0x4195a6
  41958c:	fadd   QWORD PTR [ebx-0x6b23d670]
  419592:	mov    edi,0x20c4df91
  419597:	fadd   DWORD PTR [eax+0x15]
  41959a:	push   ebp
  41959b:	mov    ecx,edi
  41959d:	pop    ss
  41959e:	adc    BYTE PTR [ecx-0x5c],0x24
  4195a2:	sub    al,0xb
  4195a4:	jg     0x4195f5
  4195a6:	cli    
  4195a7:	arpl   WORD PTR [ecx+0x78],sp
  4195aa:	mov    ds:0x1f22a9d4,al
  4195af:	int    0xf9
  4195b1:	jb     0x419543
  4195b3:	ja     0x419564
  4195b5:	jle    0x41954f
  4195b7:	pop    ebp
  4195b8:	cdq    
  4195b9:	cmp    bh,BYTE PTR [edi]
  4195bb:	push   ss
  4195bc:	out    dx,eax
  4195bd:	ret    
  4195be:	sti    
  4195bf:	cdq    
  4195c0:	out    dx,eax
  4195c1:	das    
  4195c2:	loop   0x41955e
  4195c4:	test   eax,0xa94084a4
  4195c9:	neg    BYTE PTR [edx-0x27]
  4195cc:	cmp    ebp,DWORD PTR [ecx]
  4195ce:	adc    dl,BYTE PTR [edi]
  4195d0:	xchg   ebp,eax
  4195d1:	pop    esp
  4195d2:	push   esp
  4195d3:	inc    edx
  4195d4:	pop    ebp
  4195d5:	add    BYTE PTR [edi+esi*8],0xd0
  4195d9:	mov    edi,0xefa2fb60
  4195de:	sar    dh,1
  4195e0:	fldenv [edx]
  4195e2:	leave  
  4195e3:	fwait
  4195e4:	xchg   ebx,eax
  4195e5:	adc    eax,0x592f27b9
  4195ea:	imul   ebp,DWORD PTR [eax+ecx*8+0x1d],0x7d19dfd
  4195f2:	outs   dx,BYTE PTR ds:[esi]
  4195f3:	xchg   ebx,eax
  4195f4:	xor    esi,eax
  4195f6:	dec    esi
  4195f7:	lds    ebp,FWORD PTR es:[eax+0x4aa00220]
  4195fe:	call   0xd7cadcd6
  419603:	mov    al,ds:0xa0d95ee7
  419608:	pop    ss
  419609:	scas   al,BYTE PTR es:[edi]
  41960a:	dec    eax
  41960b:	enter  0x1d69,0xf
  41960f:	enter  0x3db6,0xa
  419613:	add    BYTE PTR [ecx+0xd5c528a],0x79
  41961a:	or     esp,DWORD PTR [ebp+0xf]
  41961d:	adc    DWORD PTR [esi+0x43],edi
  419620:	test   ecx,ecx
  419622:	add    ecx,DWORD PTR [eax+0x5329d3a0]
  419628:	jl     0x419696
  41962a:	sub    al,0x1b
  41962c:	mov    edx,0xf37e9ba
  419631:	sub    ah,ah
  419633:	bound  edx,QWORD PTR [esi]
  419635:	fild   WORD PTR [ebx]
  419637:	push   eax
  419638:	jmp    0x41965c
  41963a:	sbb    DWORD PTR [edi-0x63b74d32],esp
  419640:	sub    al,0x3a
  419642:	pop    ebp
  419643:	lock adc eax,0x1c8fc453
  419649:	pusha  
  41964a:	xchg   edx,eax
  41964b:	pop    ds
  41964c:	lods   al,BYTE PTR ds:[esi]
  41964d:	out    dx,al
  41964e:	xchg   esi,eax
  41964f:	jo     0x4195d3
  419651:	jecxz  0x4196ad
  419653:	in     al,dx
  419654:	ins    BYTE PTR es:[edi],dx
  419655:	js     0x4196b0
  419657:	mov    WORD PTR [ebp+0x42380f39],es
  41965d:	jbe    0x41967c
  41965f:	lock mov eax,ds:0x4fa60f1e
  419665:	push   ds
  419666:	xor    ebp,DWORD PTR [ebp-0x70]
  419669:	add    al,0x42
  41966b:	sbb    al,0xac
  41966d:	mov    cl,0x8a
  41966f:	imul   ebx,edx,0x6d
  419672:	jne    0x419621
  419674:	mov    dl,dl
  419676:	sahf   
  419677:	test   eax,0x1229c373
  41967c:	test   esi,ecx
  41967e:	mov    ebp,0xec735693
  419683:	jge    0x41968b
  419685:	mov    bh,0x7
  419687:	(bad)  
  419688:	(bad)  
  419689:	xchg   edx,eax
  41968a:	in     al,dx
  41968b:	int3   
  41968c:	pop    es
  41968d:	jmp    0x4196eb
  41968f:	push   ss
  419690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419691:	dec    ecx
  419692:	aaa    
  419693:	xchg   edi,eax
  419694:	test   eax,0x761c34aa
  419699:	or     ecx,DWORD PTR [edi]
  41969b:	dec    eax
  41969c:	shl    BYTE PTR [esi],1
  41969e:	lds    esp,FWORD PTR [ebp*2+0xbdc7ab0]
  4196a5:	jg     0x419638
  4196a7:	mov    ds:0xdf7e33bd,al
  4196ac:	jecxz  0x4196a1
  4196ae:	mov    al,ds:0x32b248ae
  4196b3:	hlt    
  4196b4:	sbb    BYTE PTR [eax+0x21],bh
  4196b7:	imul   ebp,esi,0xffffffb0
  4196ba:	pop    ecx
  4196bb:	lock les ebx,FWORD PTR [eax]
  4196be:	inc    esp
  4196bf:	repnz mov esi,0x300f99
  4196c5:	mov    edx,DWORD PTR [ebx-0x5809e099]
  4196cb:	outs   dx,DWORD PTR ds:[esi]
  4196cc:	popf   
  4196cd:	cld    
  4196ce:	jno    0x4196a5
  4196d0:	dec    ch
  4196d2:	mov    bh,BYTE PTR [ecx-0x4a]
  4196d5:	inc    esi
  4196d6:	adc    eax,0x1e7dcc20
  4196db:	ja     0x419709
  4196dd:	ja     0x4196b1
  4196df:	xchg   BYTE PTR [eiz*8-0x2004f5ac],al
  4196e6:	xor    eax,0x22720155
  4196eb:	scas   al,BYTE PTR es:[edi]
  4196ec:	jno    0x4196c0
  4196ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196ef:	(bad)  
  4196f0:	(bad)  
  4196f2:	cli    
  4196f3:	xchg   DWORD PTR [ebx+0x56],esi
  4196f6:	cld    
  4196f7:	adc    dl,BYTE PTR [eax+0x674ca88a]
  4196fd:	inc    ebx
  4196fe:	gs pusha 
  419700:	aas    
  419701:	ss adc al,0x32
  419704:	js     0x4196be
  419706:	icebp  
  419707:	xchg   esi,eax
  419708:	shl    BYTE PTR [edi+0x69],0x70
  41970c:	sbb    ecx,ebx
  41970e:	sbb    DWORD PTR [ebx],ecx
  419710:	jecxz  0x4196e8
  419712:	pop    edi
  419713:	push   ebp
  419714:	adc    ah,al
  419716:	mov    ecx,gs
  419718:	xchg   esp,eax
  419719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41971a:	sar    ebp,cl
  41971c:	sub    bh,dl
  41971e:	lods   eax,DWORD PTR ds:[esi]
  41971f:	ret    
  419720:	jecxz  0x4196fe
  419722:	outs   dx,BYTE PTR ds:[esi]
  419723:	pusha  
  419724:	jg     0x419797
  419726:	xchg   bl,al
  419728:	add    ah,BYTE PTR [ebx+0x64ee6a3f]
  41972e:	xchg   ebp,eax
  41972f:	sub    al,0x58
  419731:	jnp    0x419718
  419733:	(bad)  
  419735:	cld    
  419736:	lock test DWORD PTR [edx-0x1b],esi
  41973a:	loope  0x419744
  41973c:	or     BYTE PTR [ebp+0x169cc62b],dl
  419742:	dec    esp
  419743:	dec    ebp
  419744:	fs cwde 
  419746:	test   DWORD PTR [edi],edi
  419748:	and    eax,0x62793db4
  41974d:	js     0x4197bb
  41974f:	lods   eax,DWORD PTR ds:[esi]
  419750:	(bad)  
  419751:	in     al,dx
  419752:	stos   BYTE PTR es:[edi],al
  419753:	in     al,dx
  419754:	mov    al,0xae
  419756:	xor    BYTE PTR ds:0x8d983b05,0xe0
  41975d:	xor    BYTE PTR [ecx],0xa7
  419760:	push   es
  419761:	scas   eax,DWORD PTR es:[edi]
  419762:	ins    BYTE PTR es:[edi],dx
  419763:	jae    0x419785
  419765:	std    
  419766:	sub    cl,dl
  419768:	push   ecx
  419769:	push   ebx
  41976a:	sti    
  41976b:	into   
  41976c:	fisttp WORD PTR [esi]
  41976e:	or     dl,BYTE PTR [eax+0x7b5a5086]
  419774:	cmp    ebx,DWORD PTR [ecx+esi*2-0x70]
  419778:	or     edx,eax
  41977a:	add    al,0xe6
  41977c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41977d:	lods   al,BYTE PTR ds:[esi]
  41977e:	adc    al,0x54
  419780:	imul   ebp,edi,0xcb5888e
  419786:	cmp    esi,DWORD PTR [ebx+0x65159f1d]
  41978c:	sbb    BYTE PTR [ebp+0x583f9435],dh
  419792:	inc    ebp
  419793:	ins    DWORD PTR es:[edi],dx
  419794:	inc    esp
  419795:	clc    
  419796:	inc    edx
  419797:	sbb    al,0x3
  419799:	mov    al,ds:0x157114b8
  41979e:	aam    0x59
  4197a0:	jg     0x41976a
  4197a2:	adc    al,bl
  4197a4:	jmp    0x4197b0
  4197a6:	dec    edi
  4197a7:	aaa    
  4197a8:	imul   ebp,DWORD PTR [ebx+0x18],0xe6f25eca
  4197af:	or     eax,0xe9c51347
  4197b4:	lds    ebp,FWORD PTR [edx]
  4197b6:	sub    al,0x81
  4197b8:	pop    esi
  4197b9:	push   ds
  4197ba:	inc    edi
  4197bc:	inc    ebp
  4197bd:	adc    al,bh
  4197bf:	xchg   ebp,eax
  4197c0:	test   al,0xd8
  4197c2:	sub    al,0xd4
  4197c4:	or     eax,0x97c52daa
  4197c9:	popa   
  4197ca:	and    al,BYTE PTR [esi+0x9]
  4197cd:	and    BYTE PTR [esi],ah
  4197cf:	jge    0x419792
  4197d1:	mov    eax,ds:0xea013ae8
  4197d6:	(bad)  
  4197d7:	jno    0x41976c
  4197d9:	dec    edi
  4197da:	out    dx,eax
  4197db:	sti    
  4197dc:	fisub  WORD PTR [ebx+eiz*1+0x77]
  4197e0:	push   edx
  4197e1:	pop    es
  4197e2:	sbb    BYTE PTR [ebp+0x8],al
  4197e5:	inc    ebp
  4197e6:	push   ebx
  4197e7:	adc    al,0xa9
  4197e9:	xor    BYTE PTR [edx-0x2fc9b5a4],al
  4197ef:	xchg   ebp,eax
  4197f0:	jmp    0x4bf9c75b
  4197f5:	adc    ebp,DWORD PTR [esi+0x5390a6c3]
  4197fb:	mov    ds,WORD PTR [ebp-0x13]
  4197fe:	dec    eax
  4197ff:	mov    ch,0xf1
  419801:	pushf  
  419802:	mov    esp,0x10fbca36
  419807:	dec    ecx
  419808:	mov    ds:0xc35cf117,al
  41980d:	mov    al,0x7e
  41980f:	iret   
  419810:	(bad)  
  419811:	fwait
  419812:	repnz push ebx
  419814:	and    esp,DWORD PTR [ebx+eax*4]
  419817:	sbb    DWORD PTR [esi-0x12],eax
  41981a:	lock aad 0xe6
  41981d:	inc    eax
  41981e:	test   al,0x13
  419820:	sub    al,0x43
  419822:	mov    esi,0x3db95aef
  419827:	xor    ch,cl
  419829:	retf   0xc11a
  41982c:	clc    
  41982d:	hlt    
  41982e:	in     eax,0x6
  419830:	(bad)  
  419831:	(bad)  
  419832:	xlat   BYTE PTR ds:[ebx]
  419833:	retf   0x674c
  419836:	dec    ebx
  419837:	and    DWORD PTR [esi-0x29],edx
  41983a:	fistp  QWORD PTR [ecx-0xb]
  41983d:	sub    al,0x9b
  41983f:	inc    ecx
  419840:	ja     0x4198a9
  419842:	jae    0x419854
  419844:	adc    BYTE PTR [edi],ch
  419846:	jno    0x419859
  419848:	in     al,0xfd
  41984a:	push   esi
  41984b:	mov    edi,0x92c37547
  419850:	xor    cl,dl
  419852:	mov    ebx,0xed17553d
  419857:	or     DWORD PTR [eax-0x4535d3c1],ecx
  41985d:	out    dx,eax
  41985e:	push   ecx
  41985f:	mov    esp,0x62bd01e
  419864:	test   DWORD PTR [eax+0x2b],ebp
  419867:	and    BYTE PTR fs:[esi-0x54],dl
  41986b:	fidivr DWORD PTR [ebx-0x6a]
  41986e:	pop    ss
  41986f:	in     al,0xa0
  419871:	test   DWORD PTR [edi+0x2b28b641],0x3dbc2262
  41987b:	xchg   ebx,eax
  41987c:	push   esp
  41987d:	xchg   ebp,eax
  41987e:	sbb    cl,BYTE PTR [ebp-0x1f3cdfe4]
  419884:	xor    cl,BYTE PTR [ebx]
  419886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419887:	and    edi,DWORD PTR [edx]
  419889:	adc    ecx,DWORD PTR [eax]
  41988b:	(bad)  
  41988c:	adc    BYTE PTR [edx+edx*8+0x13],ch
  419890:	pop    ebx
  419891:	mov    esp,0xe5853034
  419896:	iret   
  419897:	icebp  
  419898:	add    dl,BYTE PTR [eax-0x53dba00b]
  41989e:	fild   QWORD PTR [ecx-0x5f]
  4198a1:	fs pop edx
  4198a3:	out    0x60,eax
  4198a5:	sub    DWORD PTR cs:[edi-0x5e],eax
  4198a9:	(bad)  
  4198aa:	mov    ch,0xb1
  4198ac:	sub    dh,BYTE PTR [eax-0x338b654]
  4198b2:	sub    DWORD PTR [ecx+eax*1+0x17a81876],ebx
  4198b9:	or     al,dh
  4198bb:	or     eax,0x8415bb7e
  4198c0:	hlt    
  4198c1:	hlt    
  4198c2:	mov    bl,0xdb
  4198c4:	(bad)  
  4198c5:	push   ecx
  4198c6:	dec    edx
  4198c7:	and    dh,cl
  4198c9:	add    BYTE PTR [esi],0xee
  4198cc:	test   al,0xb8
  4198ce:	adc    dl,BYTE PTR [eax+0x6a]
  4198d1:	pusha  
  4198d2:	(bad)
  4198d6:	enter  0x939,0xb
  4198da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198db:	icebp  
  4198dc:	sbb    ah,BYTE PTR [edi-0x16c34fb4]
  4198e2:	add    al,0x61
  4198e4:	imul   ebp,DWORD PTR [ebp-0x7b2b665c],0x53
  4198eb:	jns    0x419961
  4198ed:	mov    ah,0x31
  4198ef:	ja     0x41995d
  4198f1:	cmp    al,0x64
  4198f3:	jns    0x4198ae
  4198f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198f6:	xor    BYTE PTR [esi+0x60],bh
  4198f9:	pop    ss
  4198fa:	shr    BYTE PTR [esi-0x313857fa],1
  419900:	xor    ah,BYTE PTR [edi+0x70]
  419903:	out    0xce,eax
  419905:	or     DWORD PTR [eax-0xb],edi
  419908:	int3   
  419909:	xchg   esp,eax
  41990a:	jbe    0x419909
  41990c:	mov    al,0xfc
  41990e:	bound  ebx,QWORD PTR [esp+ebx*1+0xe]
  419912:	dec    ecx
  419913:	test   esi,edx
  419915:	and    DWORD PTR [edi-0x45],esp
  419918:	fwait
  419919:	aad    0xa8
  41991b:	sub    bh,al
  41991d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41991e:	pop    edi
  41991f:	push   ds
  419920:	mov    dl,0x57
  419922:	ins    DWORD PTR es:[edi],dx
  419923:	and    DWORD PTR [ebp-0x2957603c],0x2df77bd
  41992d:	pop    eax
  41992e:	mov    al,ds:0xe62cee89
  419933:	push   esp
  419934:	xchg   edi,eax
  419935:	sbb    edx,DWORD PTR [eax+0x307a75e5]
  41993b:	push   esp
  41993c:	into   
  41993d:	jl     0x4198e0
  41993f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419940:	dec    edi
  419941:	mov    dh,0x79
  419943:	lods   eax,DWORD PTR ds:[esi]
  419944:	mov    BYTE PTR [esi+0x59c53c8c],0xd1
  41994b:	sub    BYTE PTR ds:0x10892989,al
  419951:	xchg   DWORD PTR [eax+edi*2-0x21fdcf85],eax
  419958:	lahf   
  419959:	std    
  41995a:	pop    esi
  41995b:	jns    0x419991
  41995d:	retf   
  41995e:	popf   
  41995f:	mov    ah,bh
  419961:	mov    al,ds:0x13593f0c
  419966:	fnsave [esi-0x510b721d]
  41996c:	jmp    0x76c4:0x9755671f
  419973:	repnz dec edx
  419975:	cmp    DWORD PTR [edi],0x16
  419978:	ja     0x41993a
  41997a:	dec    ebx
  41997b:	loop   0x4199b5
  41997d:	aas    
  41997e:	sbb    DWORD PTR [ebx-0x3f],eax
  419981:	dec    DWORD PTR [ecx+0x77e967be]
  419987:	push   ss
  419988:	pop    esi
  419989:	popf   
  41998a:	(bad)  
  41998b:	xchg   esp,eax
  41998c:	mov    ch,0x31
  41998e:	shl    esp,1
  419990:	out    0x60,eax
  419992:	jno    0x419980
  419994:	cmp    edx,edi
  419996:	adc    al,0xe7
  419998:	popf   
  419999:	mov    esi,0x4e278bb6
  41999e:	arpl   sp,sp
  4199a0:	mov    WORD PTR [edx],es
  4199a2:	sub    eax,0x6eff1c82
  4199a7:	jp     0x419957
  4199a9:	sub    bl,BYTE PTR [esi+0x2d4f895]
  4199af:	aad    0x3e
  4199b1:	retf   0x3149
  4199b4:	cmp    BYTE PTR [eax-0x3da295b8],al
  4199ba:	call   0x9721:0x65103b1e
  4199c1:	xchg   ebp,eax
  4199c2:	cmp    eax,0x990a3d33
  4199c7:	repnz sbb bl,dh
  4199ca:	dec    esp
  4199cb:	arpl   bp,di
  4199cd:	sub    al,ch
  4199cf:	je     0x419a14
  4199d1:	xor    dh,BYTE PTR [edi-0x55]
  4199d4:	into   
  4199d5:	add    BYTE PTR [ebx-0x2adeb2be],bl
  4199db:	cmp    ecx,0x7b
  4199de:	fbstp  TBYTE PTR [ecx]
  4199e0:	add    al,0x81
  4199e2:	push   ss
  4199e3:	push   edi
  4199e4:	retf   0x3213
  4199e7:	cs mov ebp,esp
  4199ea:	out    dx,eax
  4199eb:	mov    dh,0x1c
  4199ed:	(bad)  
  4199ee:	(bad)  
  4199ef:	adc    DWORD PTR [edi+0x248b8409],edi
  4199f5:	mov    edi,0x6043176f
  4199fa:	mov    dh,0x4a
  4199fc:	out    0x35,al
  4199fe:	mov    dl,0x39
  419a00:	mov    WORD PTR [ebx],es
  419a02:	dec    edi
  419a03:	fsubr  DWORD PTR [ecx]
  419a05:	into   
  419a06:	inc    esp
  419a07:	sub    eax,0xb72c23fd
  419a0c:	(bad)  
  419a0d:	out    dx,al
  419a0e:	sbb    dh,BYTE PTR [ecx]
  419a10:	test   DWORD PTR [esp+edx*2+0x6f8d6918],esi
  419a17:	(bad)  
  419a19:	js     0x419a48
  419a1b:	push   ecx
  419a1c:	into   
  419a1d:	mov    BYTE PTR [eax+0x7c],cl
  419a20:	xor    BYTE PTR [esi+0x3b],dh
  419a23:	std    
  419a24:	adc    BYTE PTR [edx+0x740b774f],dh
  419a2a:	ins    BYTE PTR es:[edi],dx
  419a2b:	inc    eax
  419a2c:	ds sub al,0x17
  419a2f:	dec    eax
  419a30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a31:	or     BYTE PTR [edi+0x2b],ch
  419a34:	or     dh,BYTE PTR [edi+0x5c0361e2]
  419a3a:	adc    BYTE PTR [eax-0x68],dh
  419a3d:	(bad)  
  419a3e:	adc    DWORD PTR [edx+0x41c20210],edx
  419a44:	call   0xe502:0xf874bd2c
  419a4b:	enter  0xdbd0,0x93
  419a4f:	xchg   esp,eax
  419a50:	sbb    ch,dl
  419a52:	setb   dh
  419a55:	xchg   BYTE PTR [ecx+0x75],al
  419a58:	mov    edi,DWORD PTR ss:[edi-0x78]
  419a5c:	mov    bl,0x3a
  419a5e:	cmp    eax,0xae2c359f
  419a63:	sbb    eax,0x8ce69a7f
  419a68:	pusha  
  419a69:	jno    0x419a8f
  419a6b:	or     BYTE PTR [ecx+ebp*4+0x3f57ab79],cl
  419a72:	mov    ebp,0xbb6e76eb
  419a77:	push   ebx
  419a78:	push   ebx
  419a79:	add    ch,bh
  419a7b:	mov    esi,0xb1d12abf
  419a80:	and    al,0x75
  419a82:	mov    eax,0x8db46035
  419a87:	arpl   WORD PTR [ecx-0x14],si
  419a8a:	cmp    BYTE PTR ss:[edx+0x30],0x7
  419a8f:	pop    ebp
  419a90:	and    cl,cl
  419a92:	aam    0x8a
  419a94:	out    0x33,al
  419a96:	ja     0x419a83
  419a98:	or     esp,DWORD PTR [esi+0x2740613b]
  419a9e:	jmp    0x419a5c
  419aa0:	repz jns 0x419a3c
  419aa3:	cmc    
  419aa4:	hlt    
  419aa5:	test   DWORD PTR [edi],eax
  419aa7:	popa   
  419aa8:	stc    
  419aa9:	(bad)  
  419aaa:	jecxz  0x419a50
  419aac:	cli    
  419aad:	mov    BYTE PTR [edi+0x7eb6571a],dl
  419ab3:	mov    ds:0xa8bbb1f9,eax
  419ab8:	test   eax,0xe2996468
  419abd:	call   0x7aab5eb5
  419ac2:	inc    edi
  419ac3:	xchg   DWORD PTR [edx+0x4782a3ca],ebx
  419ac9:	and    bh,al
  419acb:	adc    al,0x52
  419acd:	cld    
  419ace:	pop    edx
  419acf:	les    esp,FWORD PTR [ebx-0x1d]
  419ad2:	add    ch,BYTE PTR ds:[edi-0x3d556df0]
  419ad9:	(bad)  
  419adb:	je     0x419acc
  419add:	popf   
  419ade:	jge    0x419ae9
  419ae0:	push   edi
  419ae1:	cmp    BYTE PTR [ebx-0x39],cl
  419ae4:	and    eax,0xfa6d71a4
  419ae9:	add    eax,0xc090cac0
  419aee:	sub    ebp,DWORD PTR [esi+0x1d7856d]
  419af4:	or     BYTE PTR [eax*2+0x6b7ff6c5],bh
  419afb:	pop    eax
  419afc:	push   ebx
  419afd:	push   edx
  419afe:	dec    ecx
  419aff:	fimul  DWORD PTR [edx-0x13961196]
  419b05:	push   ecx
  419b06:	mov    ds:0xe618fa9f,eax
  419b0b:	ja     0x419b8b
  419b0d:	cmp    al,0x51
  419b0f:	in     eax,dx
  419b10:	test   BYTE PTR [ecx+0x5],dl
  419b13:	and    edi,ebp
  419b15:	jmp    0x569040c5
  419b1a:	add    DWORD PTR [eax-0x9643685],ebx
  419b20:	(bad)  
  419b21:	mov    bh,0x78
  419b23:	add    BYTE PTR [edx+0x7c],ah
  419b26:	repz mov ebx,0xc63c6ee3
  419b2c:	arpl   WORD PTR [ebx-0xc0187d2],di
  419b32:	mov    dl,0xc4
  419b34:	(bad)  
  419b35:	cmc    
  419b36:	mov    ch,0xf4
  419b38:	adc    DWORD PTR [eax-0x3c],edx
  419b3b:	cmp    al,0x69
  419b3d:	in     eax,0xe8
  419b3f:	lds    edi,FWORD PTR [ecx-0x2b9a911b]
  419b45:	stc    
  419b46:	cmp    DWORD PTR [edx-0x31ca4e00],ebp
  419b4c:	(bad)  
  419b4e:	cld    
  419b4f:	stc    
  419b50:	add    BYTE PTR [eax+0x65da2946],al
  419b56:	pop    ecx
  419b57:	jnp    0x419b70
  419b59:	add    al,0xe7
  419b5b:	loope  0x419bc7
  419b5d:	sub    BYTE PTR [ecx+0x5c],dh
  419b60:	shr    BYTE PTR [ebx-0x56],1
  419b63:	push   esi
  419b64:	pusha  
  419b65:	cmp    al,0x2d
  419b67:	fsubr  DWORD PTR [ebx+eiz*8]
  419b6a:	mov    ds:0x20960850,eax
  419b6f:	push   ecx
  419b70:	push   0x75f435ae
  419b75:	inc    ebx
  419b76:	sbb    BYTE PTR [esi+edx*1],0x84
  419b7a:	mov    ebp,0x73bb92c8
  419b7f:	sar    ebx,1
  419b81:	std    
  419b82:	mov    esi,ss
  419b84:	lea    edi,[edx+0x5ca6045d]
  419b8a:	pop    ebp
  419b8b:	int3   
  419b8c:	inc    ebx
  419b8d:	mov    eax,ds:0x2e012809
  419b92:	mov    ecx,0x1c8edec
  419b97:	aaa    
  419b98:	stc    
  419b99:	int3   
  419b9a:	arpl   WORD PTR [edx],cx
  419b9c:	pop    ebx
  419b9d:	clc    
  419b9e:	retf   0x8cdb
  419ba1:	pushf  
  419ba2:	inc    esi
  419ba3:	mov    al,ds:0x758357f2
  419ba8:	(bad)
  419bac:	retf   0x205e
  419baf:	mov    edx,0xd887ba78
  419bb4:	neg    BYTE PTR ds:[ebp-0x3904f961]
  419bbb:	int3   
  419bbc:	shl    ebp,cl
  419bbe:	lods   al,BYTE PTR ds:[esi]
  419bbf:	mov    eax,0xcfe147cb
  419bc4:	add    cl,BYTE PTR ds:0x851450cb
  419bca:	aaa    
  419bcb:	data16 arpl dx,cx
  419bce:	sbb    eax,0xd158ac36
  419bd3:	ja     0x419bb6
  419bd5:	pop    ds
  419bd6:	jl     0x419c55
  419bd8:	sar    eax,0x4
  419bdb:	pop    esi
  419bdc:	sbb    eax,0x74884310
  419be1:	or     esi,eax
  419be3:	sahf   
  419be4:	push   ebp
  419be5:	cmp    al,0x14
  419be7:	fcmovnu st,st(3)
  419be9:	mov    esi,0x943fbb9f
  419bee:	rol    DWORD PTR [edx],0xba
  419bf1:	jge    0x419bf9
  419bf3:	iret   
  419bf4:	adc    al,0x23
  419bf6:	xchg   edx,eax
  419bf7:	retf   0x9a36
  419bfa:	es add eax,0xe302fb00
  419c00:	cmp    eax,0x7735d1c
  419c05:	out    0xba,al
  419c07:	jne    0x419c6b
  419c09:	dec    BYTE PTR [edx]
  419c0b:	lods   al,BYTE PTR ds:[esi]
  419c0c:	ret    
  419c0d:	push   esi
  419c0e:	inc    ecx
  419c0f:	mov    DWORD PTR [ebx+0x27],edi
  419c12:	clc    
  419c13:	or     eax,0x84402f11
  419c18:	pop    es
  419c19:	repnz sbb BYTE PTR [ebp-0x5d],dl
  419c1d:	js     0x419c26
  419c1f:	mov    esi,0x4fd890ca
  419c24:	cmp    bl,BYTE PTR [edi+0x77]
  419c27:	jne    0x419bfd
  419c29:	jb     0x419c7b
  419c2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c2c:	add    al,0x90
  419c2e:	retf   0xd93d
  419c31:	lock ins BYTE PTR es:[edi],dx
  419c33:	stc    
  419c34:	inc    esp
  419c35:	xor    al,0xdc
  419c37:	test   eax,0x3885076a
  419c3c:	dec    ebp
  419c3d:	xchg   esp,eax
  419c3e:	or     dh,dl
  419c40:	mov    bh,0x48
  419c42:	push   edx
  419c43:	sbb    eax,0x13675ece
  419c48:	jnp    0x419be9
  419c4a:	fldcw  WORD PTR [ecx+0x61151ca2]
  419c50:	dec    ebp
  419c51:	xor    esp,DWORD PTR [ebx]
  419c53:	ss pop edx
  419c55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c56:	push   es
  419c57:	cmp    DWORD PTR [ebx+0x5bad5daf],0x76
  419c5e:	ins    DWORD PTR es:[edi],dx
  419c5f:	push   0xffffff97
  419c61:	cs repz add eax,ebp
  419c65:	jmp    0x8d27:0x77dce6a2
  419c6c:	xchg   esi,eax
  419c6d:	xor    ebx,ebx
  419c6f:	sub    edx,esp
  419c71:	push   esi
  419c72:	mov    esp,0xe841643d
  419c77:	jae    0x419c68
  419c79:	test   BYTE PTR [ebx+0x29729070],0xef
  419c80:	add    al,0xc3
  419c82:	jge    0x419c67
  419c84:	and    eax,0x22da70b3
  419c89:	ins    DWORD PTR es:[edi],dx
  419c8a:	inc    edx
  419c8b:	stc    
  419c8c:	lods   eax,DWORD PTR ds:[esi]
  419c8d:	ss pop edi
  419c8f:	dec    ebp
  419c90:	lods   al,BYTE PTR ds:[esi]
  419c91:	repz int3 
  419c93:	dec    eax
  419c94:	pop    ds
  419c95:	push   edx
  419c96:	outs   dx,BYTE PTR ds:[esi]
  419c97:	lock cmp ah,al
  419c9a:	test   eax,0xece729d7
  419c9f:	pop    edi
  419ca0:	mov    bh,0x69
  419ca2:	xchg   ebx,eax
  419ca3:	pop    esi
  419ca4:	mov    eax,0x907eee42
  419ca9:	ds adc eax,0x9a5f7386
  419caf:	and    eax,0x93d5dabc
  419cb4:	out    0xbd,al
  419cb6:	adc    esp,ecx
  419cb8:	clc    
  419cb9:	rcl    DWORD PTR [ebp-0x54],1
  419cbc:	loop   0x419c51
  419cbe:	in     al,dx
  419cbf:	mov    ah,0xaa
  419cc1:	push   DWORD PTR [ebx]
  419cc3:	or     ebx,DWORD PTR [ecx+eax*8-0x2d32f67f]
  419cca:	aas    
  419ccb:	iret   
  419ccc:	cdq    
  419ccd:	adc    eax,0x4d89f09d
  419cd2:	and    bh,BYTE PTR [esi+0x49582259]
  419cd8:	sbb    bh,BYTE PTR [esi+0x2708acaf]
  419cde:	out    0x8f,al
  419ce0:	leave  
  419ce1:	sub    eax,ebx
  419ce3:	xchg   ebx,eax
  419ce4:	mov    ebx,0x8616608b
  419ce9:	jge    0x419c9d
  419ceb:	data16 cmp ah,ah
  419cee:	inc    edx
  419cef:	adc    bh,bh
  419cf1:	mov    edx,DWORD PTR [ebx+eax*8-0x32]
  419cf5:	sbb    eax,0x42a433e
  419cfa:	stos   BYTE PTR es:[edi],al
  419cfb:	mov    ebx,ecx
  419cfd:	adc    al,ah
  419cff:	xor    bh,BYTE PTR [esi-0x2c5869a7]
  419d05:	pop    edx
  419d06:	test   BYTE PTR [esi+0x332dcf21],dh
  419d0c:	xchg   ebp,eax
  419d0d:	(bad)  
  419d0e:	sti    
  419d0f:	mov    dl,0x2f
  419d11:	or     BYTE PTR [esi],ch
  419d13:	pop    ebx
  419d14:	pop    ds
  419d15:	mov    bl,0xc1
  419d17:	cmp    bh,dh
  419d19:	sbb    esi,DWORD PTR [edi+0x700f00de]
  419d1f:	out    0x2d,eax
  419d21:	and    eax,0x92f8fc9c
  419d26:	sbb    ah,BYTE PTR [esi]
  419d28:	(bad)  
  419d29:	jge    0x419d8f
  419d2b:	mov    ds:0x279a03ee,al
  419d30:	mov    ?,ebp
  419d32:	ret    0x27d7
  419d35:	in     al,0x1b
  419d37:	jmp    0x419cbf
  419d39:	mov    al,ds:0xdaf12096
  419d3e:	(bad)  
  419d40:	arpl   WORD PTR [eax+0x4d],di
  419d43:	sbb    al,0x6
  419d45:	nop
  419d46:	sti    
  419d47:	jg     0x419d1c
  419d49:	out    dx,al
  419d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d4c:	call   0xd608ccda
  419d51:	jno    0x419d6d
  419d53:	icebp  
  419d54:	jmp    0x419db9
  419d56:	pop    esp
  419d57:	sbb    DWORD PTR [ebp+0x6c],esi
  419d5a:	int3   
  419d5b:	dec    edi
  419d5c:	fisubr DWORD PTR [edx-0x45]
  419d5f:	cmc    
  419d60:	adc    DWORD PTR [eax+0x5b],edx
  419d63:	dec    edi
  419d64:	inc    eax
  419d65:	test   BYTE PTR [ebp*4+0x2b915051],bh
  419d6c:	test   al,0x0
  419d6e:	adc    BYTE PTR [edi+0x34],bl
  419d71:	xchg   al,al
  419d73:	fld    DWORD PTR [ecx]
  419d75:	mov    eax,0x87e7bbff
  419d7a:	icebp  
  419d7b:	sbb    eax,0xa43be656
  419d80:	scas   eax,DWORD PTR es:[edi]
  419d81:	rcl    edx,0x9f
  419d84:	xchg   edx,eax
  419d85:	pop    ds
  419d86:	rcr    BYTE PTR [ebp-0x5f],0x46
  419d8a:	xor    eax,0xebdf801c
  419d8f:	mov    ah,0xbf
  419d91:	(bad)  
  419d92:	mov    ah,cl
  419d94:	sbb    eax,0xba23957b
  419d99:	add    ch,ch
  419d9b:	push   ebp
  419d9c:	jbe    0x419d60
  419d9e:	push   edi
  419d9f:	sub    bl,BYTE PTR [edi-0x7e]
  419da2:	hlt    
  419da3:	pop    ss
  419da4:	xchg   ebx,eax
  419da5:	xchg   ebx,eax
  419da6:	or     eax,0x9737bc63
  419dab:	xchg   edx,eax
  419dac:	push   cs
  419dad:	dec    edi
  419dae:	sbb    edx,DWORD PTR [esp+ecx*1]
  419db1:	hlt    
  419db2:	in     al,0x85
  419db4:	jg     0x419d5b
  419db6:	ror    DWORD PTR [edi+0x5e],0xf9
  419dba:	cmp    BYTE PTR [edx+eiz*8+0x516cff57],bh
  419dc1:	jne    0x419df3
  419dc3:	mov    ds:0xa3854da2,al
  419dc8:	hlt    
  419dc9:	stos   DWORD PTR es:[edi],eax
  419dca:	push   edx
  419dcb:	push   ebx
  419dcc:	xlat   BYTE PTR ds:[ebx]
  419dcd:	(bad)  
  419dce:	xor    dl,bh
  419dd0:	scas   eax,DWORD PTR es:[edi]
  419dd1:	div    BYTE PTR [ebx]
  419dd3:	push   ds
  419dd4:	ja     0x419d6a
  419dd6:	in     al,0x53
  419dd8:	pop    ds
  419dd9:	push   ds
  419dda:	dec    ebx
  419ddb:	mov    esi,0x5b2f730a
  419de0:	sub    al,0x3e
  419de2:	ficomp DWORD PTR [ecx-0x68]
  419de5:	ss fs jo 0x419e4c
  419de9:	jle    0x419dcd
  419deb:	mov    edx,edi
  419ded:	inc    edx
  419dee:	addr16 mov edx,0x7cef4cf2
  419df4:	fbld   TBYTE PTR [edi]
  419df6:	iret   
  419df7:	and    BYTE PTR [esi-0x4f],0x93
  419dfb:	push   dx
  419dfd:	loope  0x419e64
  419dff:	imul   esp,ecx,0xffffffa5
  419e02:	(bad)  
  419e03:	adc    eax,0xfaf47015
  419e08:	sub    al,0x28
  419e0a:	out    dx,eax
  419e0b:	fld    TBYTE PTR [esi-0x40]
  419e0e:	push   edx
  419e0f:	dec    edi
  419e10:	add    edi,DWORD PTR [eax-0x59]
  419e13:	out    dx,al
  419e14:	lds    eax,FWORD PTR [ebx]
  419e16:	and    DWORD PTR [edi],ecx
  419e18:	dec    edx
  419e19:	lock rol DWORD PTR [edx+edx*2+0x6d84a892],cl
  419e21:	sub    esi,DWORD PTR [ebp+0x5cae9424]
  419e27:	inc    ebp
  419e28:	into   
  419e29:	jg     0x419e6d
  419e2b:	sub    ebp,DWORD PTR [edi+0x7069ecda]
  419e31:	fprem1 
  419e33:	pop    ebp
  419e34:	add    al,0x8c
  419e36:	cmp    BYTE PTR [ebx-0x3],0x3c
  419e3a:	lahf   
  419e3b:	js     0x419e94
  419e3d:	mov    ah,0xcf
  419e3f:	pop    ds
  419e40:	aaa    
  419e41:	repz retf 
  419e43:	add    DWORD PTR [esi-0x3edbdee9],esi
  419e49:	or     eax,0xa73626bd
  419e4e:	adc    eax,0xcfbea2e0
  419e53:	retf   
  419e54:	shl    BYTE PTR [edx-0x5f3a0e0e],1
  419e5a:	dec    esi
  419e5b:	jmp    0x419e7b
  419e5d:	and    ah,BYTE PTR [eax]
  419e5f:	xchg   esp,eax
  419e60:	jp     0x419e0e
  419e62:	mov    cl,0x9
  419e64:	or     BYTE PTR gs:[edx+0x4d],cl
  419e68:	xchg   esp,eax
  419e69:	cld    
  419e6a:	cmp    BYTE PTR [ebx-0x30ebb3b0],dh
  419e70:	sub    eax,eax
  419e72:	sub    BYTE PTR [ebx],dl
  419e74:	cmp    bl,BYTE PTR [ebp+0x262bda44]
  419e7a:	sub    al,0x96
  419e7c:	push   esp
  419e7d:	pause  
  419e7f:	test   eax,0xafc08ffa
  419e84:	ja     0x419e1a
  419e86:	mov    al,ds:0xac3b022b
  419e8b:	out    dx,al
  419e8c:	add    dl,bl
  419e8e:	mov    ah,0xcf
  419e90:	fimul  WORD PTR [ebp+edx*2-0x29]
  419e94:	jns    0x419e77
  419e96:	stc    
  419e97:	sbb    BYTE PTR [eax+0x13bb0155],bl
  419e9d:	out    0x64,eax
  419e9f:	jae    0x419ee6
  419ea1:	mov    ds:0x5af2297f,eax
  419ea6:	push   DWORD PTR [ebp-0x4b]
  419ea9:	push   edx
  419eaa:	xor    BYTE PTR [eax],bh
  419eac:	sahf   
  419ead:	pop    esi
  419eae:	push   ecx
  419eaf:	mov    esp,DWORD PTR [ebx+eiz*4]
  419eb2:	push   DWORD PTR [ecx-0x3601e845]
  419eb8:	jb     0x419e49
  419eba:	in     al,dx
  419ebb:	retf   
  419ebc:	push   esi
  419ebd:	push   esp
  419ebe:	div    DWORD PTR [edx]
  419ec0:	retf   
  419ec1:	or     DWORD PTR ds:0x879d75cd,eax
  419ec7:	sbb    al,BYTE PTR [esi-0x18]
  419eca:	js     0x419e71
  419ecc:	lea    esi,[eax-0x2dd14695]
  419ed2:	cmp    dh,BYTE PTR [edx+0x1acf6d59]
  419ed8:	mov    ebp,0x8836316a
  419edd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ede:	shr    ebx,1
  419ee0:	sub    bl,BYTE PTR [esi-0x37]
  419ee3:	or     eax,0x9c84efb
  419ee8:	cmp    dl,al
  419eea:	and    BYTE PTR [eax+0x5d],bl
  419eed:	xor    esp,DWORD PTR [edx]
  419eef:	jmp    0x279799b7
  419ef4:	pop    ds
  419ef5:	cli    
  419ef6:	daa    
  419ef7:	sbb    eax,0xb9b5371f
  419efc:	jmp    0x419ef0
  419efe:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  419f00:	add    eax,0x8f3314a8
  419f05:	fidiv  DWORD PTR [edi-0x10b88b75]
  419f0b:	sbb    ecx,DWORD PTR [esi+0x2c]
  419f0e:	(bad)  
  419f0f:	inc    esp
  419f10:	jne    0x419f37
  419f12:	cwde   
  419f13:	jl     0x419f03
  419f15:	rol    bl,0x87
  419f18:	xor    ebx,ebp
  419f1a:	mov    bh,0xf7
  419f1c:	push   esp
  419f1d:	jl     0x419eb6
  419f1f:	xchg   ecx,eax
  419f20:	dec    eax
  419f21:	add    edx,DWORD PTR [edi-0x7b]
  419f24:	cmp    DWORD PTR [esi],eax
  419f26:	rcl    al,0x76
  419f29:	dec    edi
  419f2a:	fiadd  WORD PTR [ebx]
  419f2c:	lea    esi,[edi+0x61]
  419f2f:	fstp   DWORD PTR [esi-0xe]
  419f32:	jo     0x419f78
  419f34:	ss xchg ecx,eax
  419f36:	jmp    0x419ec0
  419f38:	pop    ds
  419f39:	mov    ds:0xb820e396,eax
  419f3e:	outs   dx,BYTE PTR ds:[esi]
  419f3f:	push   eax
  419f40:	int    0x4b
  419f42:	or     DWORD PTR [ebp+ebp*2-0x566e895c],ebp
  419f49:	repnz mov fs,WORD PTR [ecx+eiz*1]
  419f4d:	mov    eax,0x39b117a
  419f52:	sub    BYTE PTR [ebx],dl
  419f54:	xor    esp,ebp
  419f56:	jb     0x419f73
  419f58:	loope  0x419f4b
  419f5a:	in     eax,dx
  419f5b:	push   esi
  419f5c:	sbb    al,0x64
  419f5e:	int    0xf1
  419f60:	lock cmp DWORD PTR [esi],ebp
  419f63:	cs push edx
  419f65:	xchg   ebx,eax
  419f66:	mov    esi,eax
  419f68:	jnp    0x419f2e
  419f6a:	or     al,dl
  419f6c:	mov    esp,0x1221a757
  419f71:	ss jae 0x419fa0
  419f74:	mov    ebp,0x6fdec2e5
  419f79:	cwde   
  419f7a:	test   bh,al
  419f7c:	lock inc ecx
  419f7e:	jge    0x419f8b
  419f80:	mov    ebp,0x59d0b58e
  419f85:	popf   
  419f86:	cmp    DWORD PTR [ebp-0xf65a55d],esp
  419f8c:	lds    ebx,FWORD PTR [edi-0x58]
  419f8f:	mov    dh,0x88
  419f91:	in     eax,0x94
  419f93:	pop    ebp
  419f94:	adc    eax,0xbb621202
  419f99:	cdq    
  419f9a:	add    cl,BYTE PTR [ecx-0x2cfab339]
  419fa0:	sbb    eax,0x24774c40
  419fa5:	jo     0x41a00b
  419fa7:	cli    
  419fa8:	int    0x7b
  419faa:	lock ret 
  419fac:	cmp    dh,BYTE PTR [esp+esi*8-0x72]
  419fb0:	pop    edx
  419fb1:	mov    ch,0xf6
  419fb3:	data16 test al,0x1e
  419fb6:	es inc eax
  419fb8:	push   es
  419fb9:	xchg   esp,eax
  419fba:	shr    dl,1
  419fbc:	sbb    eax,0x11079d73
  419fc1:	mov    al,0x4
  419fc3:	adc    DWORD PTR [edx+0x71add223],ecx
  419fc9:	adc    BYTE PTR [edx],cl
  419fcb:	ror    BYTE PTR [ebx+0x4c],1
  419fce:	sub    al,0x78
  419fd0:	ins    DWORD PTR es:[edi],dx
  419fd1:	mov    DWORD PTR [eax+0x2e9596f0],esp
  419fd7:	push   edx
  419fd8:	leave  
  419fd9:	ja     0x419fde
  419fdb:	xchg   esi,eax
  419fdc:	and    dl,BYTE PTR [esi-0x5634989f]
  419fe2:	adc    BYTE PTR [ebp+esi*4-0x17],bl
  419fe6:	test   eax,0xfa81f0c8
  419feb:	pop    ecx
  419fec:	dec    esi
  419fed:	std    
  419fee:	(bad)  
  419ff0:	shl    DWORD PTR [ebp-0x4],cl
  419ff3:	loopne 0x41a02a
  419ff5:	fdivr  DWORD PTR [eax+0x34e14b16]
  419ffb:	inc    ebx
  419ffc:	adc    BYTE PTR [ebx],ch
  419ffe:	cmp    al,0x5f
  41a000:	jp     0x41a050
  41a002:	sub    DWORD PTR [ebx],ebx
  41a004:	adc    BYTE PTR [ebp-0x5e],ch
  41a007:	cwde   
  41a008:	or     DWORD PTR [ecx-0x78],0x6f
  41a00c:	pmullw mm6,QWORD PTR [esi-0x57c61b7e]
  41a013:	dec    esp
  41a014:	fwait
  41a015:	jnp    0x41a005
  41a017:	push   esi
  41a018:	jp     0x41a077
  41a01a:	sbb    eax,0x3da4d07a
  41a01f:	sar    ebp,0x70
  41a022:	ja     0x419fb2
  41a024:	mov    ebp,0x15e95293
  41a029:	outs   dx,BYTE PTR ds:[esi]
  41a02a:	pusha  
  41a02b:	rol    BYTE PTR [edx+0x3d],1
  41a02e:	out    0xf8,eax
  41a030:	pop    ebp
  41a031:	or     dh,ah
  41a033:	mov    dl,0x42
  41a035:	int    0xb8
  41a037:	ret    
  41a038:	ret    0x430a
  41a03b:	outs   dx,DWORD PTR ds:[esi]
  41a03c:	fnsave [eax-0x1a9037d6]
  41a042:	pop    esi
  41a043:	inc    ebp
  41a044:	jb     0x419ff2
  41a046:	gs adc bh,ah
  41a049:	cmp    DWORD PTR [eax-0x120f834a],0x59
  41a050:	xor    BYTE PTR [ebp+0xfca1da4],0x1
  41a057:	sbb    ebx,ecx
  41a059:	xchg   ecx,eax
  41a05a:	aaa    
  41a05b:	cmp    DWORD PTR [ecx],esp
  41a05d:	ret    0x823c
  41a060:	sbb    bl,BYTE PTR [ecx+ebx*4]
  41a063:	jl     0x41a0b8
  41a065:	pop    edx
  41a066:	lods   eax,DWORD PTR ds:[esi]
  41a067:	xchg   ebp,eax
  41a068:	ss jae 0x41a058
  41a06b:	jo     0x41a08c
  41a06d:	mov    al,0x28
  41a06f:	xchg   edx,eax
  41a070:	mov    ah,BYTE PTR [eiz*2-0xb0ee5b6]
  41a077:	shl    ch,1
  41a079:	pop    ss
  41a07a:	adc    ah,BYTE PTR [ecx]
  41a07c:	sti    
  41a07d:	in     al,dx
  41a07e:	and    bl,BYTE PTR [ebp+0x1bd44d61]
  41a084:	and    BYTE PTR [ebx+0x3],ah
  41a087:	std    
  41a088:	jp     0x41a054
  41a08a:	inc    ebx
  41a08b:	mov    bl,0xb
  41a08d:	push   ss
  41a08e:	lds    esi,FWORD PTR [eax-0x3f9d599]
  41a094:	lea    ebp,[ecx+0x26]
  41a097:	in     al,0x2b
  41a099:	lock in al,0x7
  41a09c:	stc    
  41a09d:	stos   BYTE PTR es:[edi],al
  41a09e:	inc    esi
  41a09f:	lahf   
  41a0a0:	jnp    0x41a0bd
  41a0a2:	lds    eax,FWORD PTR [edi-0x70197c0f]
  41a0a8:	loopne 0x41a122
  41a0aa:	ins    BYTE PTR es:[edi],dx
  41a0ab:	iret   
  41a0ac:	push   edx
  41a0ad:	mov    esi,DWORD PTR [edx+0xf8526e2]
  41a0b3:	push   0xfffffffa
  41a0b5:	in     al,dx
  41a0b6:	arpl   WORD PTR [ebx],cx
  41a0b8:	inc    edx
  41a0b9:	cmp    al,0x8e
  41a0bb:	jmp    0x41a11a
  41a0bd:	mov    esi,0xaf0c7a5e
  41a0c2:	mov    bh,0xab
  41a0c4:	mov    ds:0x4de25508,eax
  41a0c9:	push   esp
  41a0ca:	and    BYTE PTR [ecx-0x7e],bl
  41a0cd:	push   cs
  41a0ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0cf:	jecxz  0x41a139
  41a0d1:	push   edi
  41a0d2:	and    BYTE PTR [edx+ecx*2+0x28],0x28
  41a0d7:	retf   
  41a0d8:	mov    ds:0x4e3f799,eax
  41a0dd:	or     eax,0x62f83da5
  41a0e2:	fnstsw WORD PTR [edi]
  41a0e4:	scas   al,BYTE PTR es:[edi]
  41a0e5:	jge    0x41a0bc
  41a0e7:	shl    bh,cl
  41a0e9:	sahf   
  41a0ea:	mov    DWORD PTR [ecx+eax*4],ecx
  41a0ed:	mov    edi,0xc6b504c9
  41a0f2:	push   esi
  41a0f3:	retf   0x931b
  41a0f6:	pop    ebx
  41a0f7:	pop    edi
  41a0f8:	hlt    
  41a0f9:	and    cl,0xda
  41a0fc:	adc    bh,dl
  41a0fe:	push   edi
  41a0ff:	and    DWORD PTR [esi+ecx*2],esp
  41a102:	sbb    al,0x68
  41a104:	aad    0x8c
  41a106:	shl    dl,0x66
  41a109:	cmp    al,0x8
  41a10b:	or     al,0xfc
  41a10d:	or     dl,dh
  41a10f:	sbb    bh,BYTE PTR [eax+0x27324152]
  41a115:	jb     0x41a11f
  41a117:	xor    al,0x4d
  41a119:	cmp    eax,DWORD PTR [edx+edx*1]
  41a11c:	aad    0x42
  41a11e:	call   0xb3c0:0xc5468a63
  41a125:	(bad)  
  41a126:	mov    esi,0x465a8b2f
  41a12b:	jge    0x41a18c
  41a12d:	dec    eax
  41a12e:	lds    eax,FWORD PTR [ecx+0x7efe3d60]
  41a134:	stc    
  41a135:	in     eax,dx
  41a136:	and    cl,dl
  41a138:	pop    ds
  41a139:	fld    TBYTE PTR [esi]
  41a13b:	clc    
  41a13c:	cwde   
  41a13d:	dec    esp
  41a13e:	popa   
  41a13f:	outs   dx,BYTE PTR ds:[esi]
  41a140:	cmp    al,0x13
  41a142:	jno    0x41a159
  41a144:	xor    esi,esp
  41a146:	ins    BYTE PTR es:[edi],dx
  41a147:	push   ss
  41a148:	mov    dh,0x9e
  41a14a:	out    dx,eax
  41a14b:	fdivr  QWORD PTR [ebx+0x6c]
  41a14e:	hlt    
  41a14f:	aad    0xe7
  41a151:	cmp    al,0xa8
  41a153:	adc    DWORD PTR [ebp-0x6],0xb704919b
  41a15a:	push   0x17
  41a15c:	in     al,0xcb
  41a15e:	sub    cl,BYTE PTR [eax]
  41a160:	stos   BYTE PTR es:[edi],al
  41a161:	dec    eax
  41a162:	xor    al,0xc
  41a164:	outs   dx,DWORD PTR ds:[esi]
  41a165:	les    ecx,FWORD PTR [eax+0x44]
  41a168:	pushf  
  41a169:	aaa    
  41a16a:	fst    QWORD PTR [esi]
  41a16c:	(bad)  
  41a16d:	xchg   edi,eax
  41a16e:	mov    esi,0xa5bf3f15
  41a173:	fdiv   DWORD PTR [esi+0x13429db6]
  41a179:	outs   dx,DWORD PTR ds:[esi]
  41a17a:	sti    
  41a17b:	loop   0x41a1a4
  41a17d:	bound  edi,QWORD PTR [ebx]
  41a17f:	aad    0xdd
  41a181:	dec    ecx
  41a182:	and    DWORD PTR [edi-0x43],edx
  41a185:	sub    bl,0xa2
  41a188:	leave  
  41a189:	je     0x41a19e
  41a18b:	je     0x41a195
  41a18d:	jle    0x41a115
  41a18f:	icebp  
  41a190:	adc    dl,dl
  41a192:	pop    ecx
  41a193:	std    
  41a194:	repnz add al,0xd7
  41a197:	inc    esi
  41a199:	xor    ch,dl
  41a19b:	aad    0xde
  41a19d:	jno    0x41a1b1
  41a19f:	dec    ebx
  41a1a0:	pop    eax
  41a1a1:	pop    es
  41a1a2:	sub    al,0xea
  41a1a4:	push   esp
  41a1a5:	jge    0x41a1d0
  41a1a7:	cmp    BYTE PTR [esi-0x194f52a1],dh
  41a1ad:	mov    eax,0x71972d6f
  41a1b2:	xchg   DWORD PTR [edi+0x16],ebx
  41a1b5:	jecxz  0x41a15f
  41a1b7:	mov    edi,0xaa894dea
  41a1bc:	jg     0x41a1d2
  41a1be:	lock inc edx
  41a1c0:	push   cs
  41a1c1:	push   eax
  41a1c2:	outs   dx,BYTE PTR ds:[esi]
  41a1c3:	(bad)  
  41a1c4:	call   0xef414b49
  41a1c9:	sbb    ah,BYTE PTR [edi+0x7e]
  41a1cc:	retf   0x90de
  41a1cf:	mov    ebp,0x6aab88c4
  41a1d4:	push   edx
  41a1d5:	bound  edx,QWORD PTR [edx]
  41a1d7:	xchg   ecx,eax
  41a1d8:	adc    al,0x1
  41a1da:	inc    ebx
  41a1db:	jge    0x41a1c2
  41a1dd:	(bad)  
  41a1de:	lock loopne 0x41a1dd
  41a1e1:	fcmovnbe st,st(7)
  41a1e3:	pop    ebx
  41a1e4:	jo     0x41a234
  41a1e6:	jnp    0x41a17f
  41a1e8:	mov    eax,0x57c4c59e
  41a1ed:	ror    ebx,cl
  41a1ef:	out    dx,eax
  41a1f0:	dec    edx
  41a1f1:	mov    dh,BYTE PTR [eax-0x49]
  41a1f4:	imul   ebx,DWORD PTR [ebx],0x41
  41a1f7:	dec    eax
  41a1f8:	xlat   BYTE PTR ds:[ebx]
  41a1f9:	stc    
  41a1fa:	or     edi,ecx
  41a1fc:	dec    ebp
  41a1fd:	sub    eax,0x7df1aaaa
  41a202:	sahf   
  41a203:	mov    ebp,0xb964e74
  41a208:	stc    
  41a209:	call   0x4911:0x3483ff66
  41a210:	jecxz  0x41a269
  41a212:	and    al,0xe0
  41a214:	adc    BYTE PTR [esi],ch
  41a216:	test   DWORD PTR [esi+0x4],esi
  41a219:	cdq    
  41a21a:	nop
  41a21b:	cmc    
  41a21c:	imul   esi,DWORD PTR [eax+ebx*8-0x2c],0x57
  41a221:	or     BYTE PTR [eax-0x47f4ac2f],0x19
  41a228:	xchg   BYTE PTR [ebx-0x4b],bh
  41a22b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a22c:	out    dx,al
  41a22d:	mov    bh,0x5
  41a22f:	mov    ah,0x41
  41a231:	fmul   DWORD PTR [eax-0x57]
  41a234:	pop    esp
  41a235:	aas    
  41a236:	loop   0x41a2ab
  41a238:	sub    eax,0x65623519
  41a23d:	mov    edi,0x6ef28c7b
  41a242:	pop    es
  41a243:	into   
  41a244:	ins    BYTE PTR es:[edi],dx
  41a245:	xchg   edi,eax
  41a246:	scas   eax,DWORD PTR es:[edi]
  41a247:	sbb    edx,DWORD PTR [ecx+0x7a]
  41a24a:	cs in  al,dx
  41a24c:	bound  esi,QWORD PTR [edx+0x31eedac7]
  41a252:	sbb    ebx,DWORD PTR [ebx]
  41a254:	dec    edi
  41a255:	sti    
  41a256:	outs   dx,BYTE PTR ds:[esi]
  41a257:	or     DWORD PTR [ebp+edx*2+0x318b7259],ecx
  41a25e:	push   ss
  41a25f:	xchg   ebx,eax
  41a260:	push   edx
  41a261:	add    al,0x81
  41a263:	rcl    BYTE PTR [ebp+0x57],cl
  41a266:	jae    0x41a22c
  41a268:	mov    dh,0x11
  41a26a:	js     0x41a2bb
  41a26c:	fxam   
  41a26e:	pop    ebx
  41a26f:	lahf   
  41a270:	and    eax,0x35921f83
  41a275:	loopne 0x41a24f
  41a277:	pop    ebp
  41a278:	sub    eax,DWORD PTR [edx-0x64ac8454]
  41a27e:	inc    ebp
  41a27f:	test   BYTE PTR [eax],al
  41a281:	dec    esp
  41a282:	shr    DWORD PTR [esi+0x29bb4c6b],0xdd
  41a289:	arpl   bp,di
  41a28b:	sub    BYTE PTR [eax-0x2e],0xe8
  41a28f:	cs clc 
  41a291:	sub    DWORD PTR [edi+0x53],edx
  41a294:	cs lahf 
  41a296:	xchg   esi,eax
  41a297:	jge    0x41a227
  41a299:	sar    cl,0xd9
  41a29c:	jecxz  0x41a26e
  41a29e:	dec    eax
  41a29f:	shr    bh,0xf
  41a2a2:	push   esi
  41a2a3:	iret   
  41a2a4:	loopne 0x41a30d
  41a2a6:	push   0x13bd8c78
  41a2ab:	pop    es
  41a2ac:	int3   
  41a2ad:	push   cs
  41a2ae:	pop    edi
  41a2af:	out    dx,eax
  41a2b0:	sahf   
  41a2b1:	and    eax,0xacd6d8f3
  41a2b6:	jne    0x41a275
  41a2b8:	loopne 0x41a27a
  41a2ba:	xor    BYTE PTR ds:0x71946604,dl
  41a2c0:	cdq    
  41a2c1:	push   ecx
  41a2c2:	mov    edx,0xb69e2e59
  41a2c7:	push   ebx
  41a2c8:	sbb    BYTE PTR ds:0x7977903b,0x7
  41a2cf:	add    cl,BYTE PTR [ebp+eiz*1-0x5b]
  41a2d3:	sti    
  41a2d4:	leave  
  41a2d5:	push   esi
  41a2d6:	fmul   QWORD PTR [eax+0x70d0e701]
  41a2dc:	push   es
  41a2dd:	ror    BYTE PTR [ecx+edi*1-0x240600a6],1
  41a2e4:	addr16 das 
  41a2e6:	pop    edi
  41a2e7:	mov    ch,0x9f
  41a2e9:	pop    DWORD PTR ds:0x9717b077
  41a2ef:	mov    ebx,0x779ba510
  41a2f4:	lahf   
  41a2f5:	fwait
  41a2f6:	mov    dl,0x73
  41a2f8:	mov    bl,0xd9
  41a2fa:	lock stc 
  41a2fc:	into   
  41a2fd:	dec    ebx
  41a2fe:	jecxz  0x41a2b3
  41a300:	push   es
  41a301:	je     0x41a2fc
  41a303:	aaa    
  41a304:	adc    eax,0xdf92e8ab
  41a309:	fsub   QWORD PTR [esi]
  41a30b:	fistp  DWORD PTR [eax+0x5a44a540]
  41a311:	sti    
  41a312:	ret    
  41a313:	push   0x6c0c509d
  41a318:	xchg   ebx,eax
  41a319:	bound  ebp,QWORD PTR [ecx-0x15]
  41a31c:	test   DWORD PTR [eax+eax*8-0x22cb5953],edi
  41a323:	(bad)  
  41a324:	paddd  mm7,mm1
  41a327:	xchg   edi,eax
  41a328:	xor    BYTE PTR [ebp+eax*8+0x6d],ah
  41a32c:	aaa    
  41a32d:	jo     0x41a311
  41a32f:	push   edx
  41a330:	add    edx,edi
  41a332:	add    eax,0x4e612c14
  41a337:	in     eax,dx
  41a338:	push   cs
  41a339:	pop    ds
  41a33a:	add    al,0xc2
  41a33c:	sbb    eax,0x9ab631c8
  41a341:	int    0x11
  41a343:	push   edi
  41a344:	cmp    ecx,esp
  41a346:	mov    al,ds:0x263a67d
  41a34b:	jmp    0xf158:0x6427f583
  41a352:	and    BYTE PTR [ebx+0x21],0x65
  41a356:	pop    esi
  41a357:	pop    ecx
  41a358:	adc    dh,bl
  41a35a:	out    dx,al
  41a35b:	jmp    0xdc4e4cb9
  41a360:	daa    
  41a361:	gs dec edx
  41a363:	rol    esi,0x7c
  41a366:	int3   
  41a367:	xor    eax,0xdbcda985
  41a36c:	sbb    bl,BYTE PTR [eax-0x595fa667]
  41a372:	jmp    0x7e8584ab
  41a377:	sar    DWORD PTR [ebp-0x35],0x71
  41a37b:	sub    BYTE PTR [eax-0x1552a2d2],dl
  41a381:	lods   eax,DWORD PTR ds:[esi]
  41a382:	sar    BYTE PTR [esi-0xa03bd2f],cl
  41a388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a389:	add    al,0xa5
  41a38b:	mov    al,BYTE PTR [esi+0x10]
  41a38e:	je     0x41a3c0
  41a390:	pusha  
  41a391:	repnz in eax,0xe8
  41a394:	mov    cl,0xe3
  41a396:	fcomip st,st(5)
  41a398:	stc    
  41a399:	fwait
  41a39a:	and    eax,0xf2333e2a
  41a39f:	cmp    al,ch
  41a3a1:	cmp    al,0xba
  41a3a3:	into   
  41a3a4:	xor    ebx,esi
  41a3a6:	retf   0xb8ba
  41a3a9:	ja     0x41a408
  41a3ab:	je     0x41a39b
  41a3ad:	pop    ebp
  41a3ae:	stc    
  41a3af:	rcl    BYTE PTR [ebp+0x5b6303b1],cl
  41a3b5:	ret    0x2324
  41a3b8:	sub    BYTE PTR [ecx],bl
  41a3ba:	lods   al,BYTE PTR ds:[esi]
  41a3bb:	aam    0xfe
  41a3bd:	adc    ebx,DWORD PTR [ecx-0x64]
  41a3c0:	pushf  
  41a3c1:	push   0x922011e0
  41a3c6:	mov    ecx,0x7b4a10d8
  41a3cb:	add    eax,0x6aef7ba8
  41a3d0:	jae    0x41a385
  41a3d2:	retf   0x4680
  41a3d5:	mov    al,0x6e
  41a3d7:	in     al,0x27
  41a3d9:	push   0xa3ff307f
  41a3de:	pop    es
  41a3df:	(bad)  
  41a3e0:	inc    eax
  41a3e1:	fdiv   DWORD PTR [ebx-0x7b]
  41a3e4:	call   0x3e851140
  41a3e9:	mov    edx,0x65a31448
  41a3ee:	leave  
  41a3ef:	cdq    
  41a3f0:	push   ebx
  41a3f1:	rcl    DWORD PTR [ebp-0x25],cl
  41a3f4:	push   esp
  41a3f5:	sti    
  41a3f6:	clc    
  41a3f7:	xchg   ecx,eax
  41a3f8:	int3   
  41a3f9:	fild   DWORD PTR [eax-0x52d1da51]
  41a3ff:	lods   al,BYTE PTR ds:[esi]
  41a400:	fsubr  st,st(2)
  41a402:	xor    BYTE PTR [esi+0x1a],0xa8
  41a406:	add    ebx,DWORD PTR [ebp+edi*1+0x9]
  41a40a:	sahf   
  41a40b:	xchg   ebx,eax
  41a40c:	push   eax
  41a40d:	out    dx,al
  41a40e:	mov    edx,0xc2e11c44
  41a413:	pop    ss
  41a414:	jp     0x41a3e3
  41a416:	and    edi,DWORD PTR [esi-0x77f81a11]
  41a41c:	test   esi,edi
  41a41e:	push   ss
  41a41f:	mov    ch,0xc6
  41a421:	stc    
  41a422:	js     0x41a3b2
  41a424:	daa    
  41a425:	add    eax,0x62515684
  41a42a:	pop    esi
  41a42b:	stc    
  41a42c:	adc    eax,0x775cdc6f
  41a431:	dec    esi
  41a432:	add    al,0x63
  41a434:	mov    eax,ds:0x307a0642
  41a439:	xchg   ebx,eax
  41a43a:	aad    0x39
  41a43c:	sbb    edi,DWORD PTR ds:0x74981378
  41a442:	arpl   WORD PTR [ecx],ax
  41a444:	mov    ss,ecx
  41a446:	lea    edx,[edi]
  41a448:	ja     0x41a439
  41a44a:	loope  0x41a44f
  41a44c:	retf   
  41a44d:	adc    DWORD PTR [edi-0x42],edx
  41a450:	imul   edx,DWORD PTR [esi-0x19],0xc6439ad4
  41a457:	div    DWORD PTR [eax]
  41a459:	cmp    eax,0x825da554
  41a45e:	call   0x808a:0x65a8c6fe
  41a465:	gs and eax,0x3adc19a
  41a46b:	aas    
  41a46c:	pop    ss
  41a46d:	aad    0x16
  41a46f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a470:	js     0x41a482
  41a472:	ret    0x5456
  41a475:	ror    esi,0x93
  41a478:	adc    al,0x62
  41a47a:	inc    esi
  41a47b:	je     0x41a4a1
  41a47d:	mov    ebx,0x8caf6128
  41a482:	in     al,0xc5
  41a484:	mov    al,ds:0x5ee68292
  41a489:	push   ss
  41a48a:	xchg   edx,eax
  41a48b:	(bad)  
  41a48c:	shl    BYTE PTR [eax],1
  41a48e:	out    0xa,eax
  41a490:	dec    esi
  41a491:	nop
  41a492:	stos   DWORD PTR es:[edi],eax
  41a493:	jne    0x41a4e1
  41a495:	pop    ebp
  41a496:	gs xor al,0x1b
  41a499:	jp     0x41a41b
  41a49b:	xbegin 0x61d83894
  41a4a1:	cmc    
  41a4a2:	scas   al,BYTE PTR es:[edi]
  41a4a3:	out    dx,al
  41a4a4:	push   edi
  41a4a5:	popf   
  41a4a6:	aad    0xf8
  41a4a8:	jo     0x41a470
  41a4aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4ab:	jp     0x41a42d
  41a4ad:	cmp    BYTE PTR [edi],bh
  41a4af:	xchg   ebp,eax
  41a4b0:	jns    0x41a458
  41a4b2:	pop    edi
  41a4b3:	shl    DWORD PTR [ebx-0x58],cl
  41a4b6:	repz jnp 0x41a531
  41a4b9:	push   ss
  41a4ba:	sbb    DWORD PTR [edi],edi
  41a4bc:	mov    al,0xe3
  41a4be:	or     eax,0xc307e3b
  41a4c3:	loope  0x41a448
  41a4c5:	into   
  41a4c6:	sbb    DWORD PTR [ecx-0x50],esi
  41a4c9:	sbb    eax,0xcc1a4ae5
  41a4ce:	pop    eax
  41a4cf:	push   ds
  41a4d0:	into   
  41a4d1:	sbb    edi,DWORD PTR [eax+0x44]
  41a4d4:	xbegin 0xd8c58c8
  41a4da:	mov    DWORD PTR [eax-0x2911a259],0xf15c2522
  41a4e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4e5:	xor    bl,BYTE PTR [ecx]
  41a4e7:	mov    ah,0xb3
  41a4e9:	jne    0x41a4ff
  41a4eb:	or     al,0xbf
  41a4ed:	jmp    0x41a479
  41a4ef:	ins    DWORD PTR es:[edi],dx
  41a4f0:	enter  0x77fc,0xb
  41a4f4:	adc    ah,BYTE PTR [eax+0x59c932ff]
  41a4fa:	cmp    bl,BYTE PTR [ebx-0x29e92ee0]
  41a500:	cmp    edx,DWORD PTR [eax]
  41a502:	sub    eax,0xc5ba5bc7
  41a507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a508:	(bad)  
  41a50a:	imul   ebx,DWORD PTR [eax+0x73c234ee],0xfffffff3
  41a511:	xlat   BYTE PTR ds:[ebx]
  41a512:	mov    BYTE PTR [ebp+0x6c],bl
  41a515:	mov    dh,0x38
  41a517:	xor    esp,DWORD PTR [ebx-0x7475d81c]
  41a51d:	push   es
  41a51e:	pop    edi
  41a51f:	cmp    BYTE PTR [edx-0x3a],al
  41a522:	stos   DWORD PTR es:[edi],eax
  41a523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a524:	in     eax,dx
  41a525:	and    BYTE PTR [ebp-0x6f],bl
  41a528:	(bad)  
  41a529:	pop    esp
  41a52a:	adc    eax,0xdef641c2
  41a52f:	aaa    
  41a530:	mov    ecx,0x747839a2
  41a535:	(bad)  
  41a536:	loop   0x41a4fd
  41a538:	fwait
  41a539:	daa    
  41a53a:	sbb    DWORD PTR [edi+0x72],ebp
  41a53d:	push   ebx
  41a53e:	stos   BYTE PTR es:[edi],al
  41a53f:	xchg   ecx,eax
  41a540:	push   0x3798c56f
  41a545:	fdivr  QWORD PTR [edi+0x2b0bd44a]
  41a54b:	add    al,0x10
  41a54d:	or     bl,BYTE PTR [edx+0x41]
  41a550:	adc    ecx,edx
  41a552:	lahf   
  41a553:	sub    eax,0x6c9ea883
  41a558:	add    BYTE PTR [edi+0x1db3e22d],dh
  41a55e:	or     dl,bl
  41a560:	stc    
  41a561:	inc    ebp
  41a562:	dec    eax
  41a563:	loope  0x41a5c2
  41a565:	mov    bl,0xad
  41a567:	sbb    dh,BYTE PTR [eax-0x68886a6f]
  41a56d:	call   0x17284268
  41a572:	xor    BYTE PTR [esi],bl
  41a574:	out    0x9e,eax
  41a576:	sbb    BYTE PTR [edx+0x3e],cl
  41a579:	mov    esi,0xed3549ec
  41a57e:	stc    
  41a57f:	jge    0x41a5a0
  41a581:	and    al,0x65
  41a583:	jae    0x41a5cb
  41a585:	data16 fiadd WORD PTR [edi]
  41a588:	cmp    BYTE PTR [ebx],0x5a
  41a58b:	and    esi,esp
  41a58d:	pop    ebx
  41a58e:	out    dx,eax
  41a58f:	test   cl,dl
  41a591:	adc    eax,0x27b495bd
  41a596:	nop
  41a597:	xor    esp,DWORD PTR [ecx-0x66]
  41a59a:	(bad)  
  41a59b:	adc    al,0x12
  41a59d:	mov    edx,0xcc172250
  41a5a2:	out    dx,eax
  41a5a3:	xchg   esi,eax
  41a5a4:	push   0x5cb79076
  41a5a9:	mov    WORD PTR [edi-0x71575ecf],ds
  41a5af:	fidivr DWORD PTR [ebx+0x46b40526]
  41a5b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5b6:	gs jnp 0x41a636
  41a5b9:	add    ecx,DWORD PTR ds:0xad9a9bd6
  41a5bf:	leave  
  41a5c0:	out    0x31,al
  41a5c2:	lods   eax,DWORD PTR ds:[esi]
  41a5c3:	dec    esi
  41a5c4:	rcl    DWORD PTR [ecx+ecx*8],cl
  41a5c7:	jle    0x41a582
  41a5c9:	sub    al,BYTE PTR [edi]
  41a5cb:	(bad)  
  41a5cc:	out    dx,al
  41a5cd:	xchg   ebp,eax
  41a5ce:	sahf   
  41a5cf:	aaa    
  41a5d0:	mov    cl,0x44
  41a5d2:	ins    BYTE PTR es:[edi],dx
  41a5d3:	and    eax,0xec752095
  41a5d8:	push   esp
  41a5d9:	stc    
  41a5da:	fdivr  st,st(5)
  41a5dc:	(bad)  [ecx-0x8]
  41a5df:	sbb    eax,0xf5bf4b75
  41a5e4:	pop    ebx
  41a5e5:	fiadd  WORD PTR [esi]
  41a5e7:	iret   
  41a5e8:	cs jae 0x41a61a
  41a5eb:	mov    BYTE PTR [eax+0xf],0x8e
  41a5ef:	adc    bh,bh
  41a5f1:	not    BYTE PTR [ecx-0x407bbbf3]
  41a5f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5f8:	ret    0x4430
  41a5fb:	fwait
  41a5fc:	xor    bl,BYTE PTR [ebx+0x72e963d9]
  41a602:	pop    esi
  41a603:	mov    edi,0x6308edd2
  41a608:	call   0xf061:0xda1e1d43
  41a60f:	mov    cl,0x58
  41a611:	jbe    0x41a5d7
  41a613:	jo     0x41a692
  41a615:	xchg   ebp,eax
  41a616:	shl    ch,cl
  41a618:	shr    BYTE PTR [eax],1
  41a61a:	add    esp,edx
  41a61c:	xchg   BYTE PTR [esi+0x21f08006],dl
  41a622:	test   DWORD PTR [eax+0x6b],eax
  41a625:	dec    ecx
  41a626:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a627:	in     eax,0x81
  41a629:	dec    ebx
  41a62a:	(bad)  
  41a62b:	sbb    al,0x29
  41a62d:	and    BYTE PTR [edx-0x20c62242],0xad
  41a634:	dec    edi
  41a635:	or     BYTE PTR [eax],dl
  41a637:	lahf   
  41a638:	bnd jg 0x41a5c3
  41a63b:	dec    edi
  41a63c:	ds popf 
  41a63e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a63f:	(bad)  
  41a640:	pop    esp
  41a641:	push   edi
  41a642:	mov    BYTE PTR [ebp-0x714dbc7e],cl
  41a648:	call   0x2cdd:0x26be4f3
  41a64f:	stc    
  41a650:	mov    dl,0xba
  41a652:	cmp    edi,ebp
  41a654:	pushf  
  41a655:	stc    
  41a656:	fisttp QWORD PTR ds:0x42e8a70
  41a65c:	mov    ebp,0x470d7004
  41a661:	xchg   esp,eax
  41a662:	ret    
  41a663:	retf   
  41a664:	sbb    ecx,ecx
  41a666:	jns    0x41a6cc
  41a668:	mov    ch,0xcb
  41a66a:	pushf  
  41a66b:	imul   esi,DWORD PTR [ebx-0x1d],0x20b8e417
  41a672:	jecxz  0x41a6ed
  41a674:	mov    DWORD PTR [eax-0x69],ecx
  41a677:	mov    eax,0xd17162ee
  41a67c:	stos   DWORD PTR es:[edi],eax
  41a67d:	test   eax,0xd9fc1fa7
  41a682:	rdseed ebx
  41a685:	fisubr WORD PTR [ebx-0x44]
  41a688:	imul   esp
  41a68a:	mov    BYTE PTR [ecx],0x5a
  41a68d:	gs mov ah,0x84
  41a690:	aam    0xec
  41a692:	in     eax,0xf8
  41a694:	iret   
  41a695:	add    al,0xda
  41a697:	ds mov al,0xc6
  41a69a:	repnz (bad) 
  41a69c:	icebp  
  41a69d:	(bad)  
  41a69e:	call   0x27e8f91
  41a6a3:	pop    edi
  41a6a4:	and    edx,edx
  41a6a6:	pop    ebx
  41a6a7:	repz or al,0x5d
  41a6aa:	or     BYTE PTR [edi+0x7ccd4d2],cl
  41a6b0:	pop    ds
  41a6b1:	repnz cwde 
  41a6b3:	out    dx,eax
  41a6b4:	mov    bl,0x6b
  41a6b6:	enter  0x43bb,0x7c
  41a6ba:	ror    BYTE PTR [ebp-0x38822333],0xa9
  41a6c1:	hlt    
  41a6c2:	jmp    0x81e7:0xc053059a
  41a6c9:	inc    edx
  41a6ca:	pusha  
  41a6cb:	sbb    eax,0xc5e5f09
  41a6d0:	nop
  41a6d1:	sbb    DWORD PTR [edx-0x58],eax
  41a6d4:	loope  0x41a6b4
  41a6d6:	cmp    al,0x4d
  41a6d8:	xor    al,0x2e
  41a6da:	cdq    
  41a6db:	pusha  
  41a6dc:	fcomp  QWORD PTR [edx]
  41a6de:	aas    
  41a6df:	not    edi
  41a6e1:	popa   
  41a6e2:	xchg   edi,eax
  41a6e3:	je     0x41a689
  41a6e5:	xchg   edi,eax
  41a6e6:	clc    
  41a6e7:	popf   
  41a6e8:	sbb    BYTE PTR [ebp+0x2f],0x77
  41a6ec:	dec    esi
  41a6ed:	add    dl,dl
  41a6ef:	test   eax,0x463e97af
  41a6f4:	sub    DWORD PTR [edi-0x4c6dff06],eax
  41a6fa:	jmp    0xfd64dc12
  41a6ff:	test   al,0xbf
  41a701:	ja     0x41a6b9
  41a703:	push   0x2b618740
  41a708:	pop    ebp
  41a709:	adc    DWORD PTR [ebx+0xf],0xffffffe9
  41a70d:	out    0xb,eax
  41a70f:	mul    al
  41a711:	pop    edi
  41a712:	add    al,BYTE PTR [ebx-0x63]
  41a715:	arpl   WORD PTR [edx+0x332541dc],sp
  41a71b:	sbb    al,0x10
  41a71d:	das    
  41a71e:	ret    
  41a71f:	mov    dl,0xf5
  41a721:	add    ah,BYTE PTR [edx+ebp*2]
  41a724:	push   ecx
  41a725:	(bad)  
  41a726:	shr    DWORD PTR [esi-0x4b],1
  41a729:	mov    ah,0x4b
  41a72b:	pop    ds
  41a72c:	push   ebp
  41a72d:	jmp    0x41a6ca
  41a72f:	lds    eax,FWORD PTR [eax+0x2f66472d]
  41a735:	sub    BYTE PTR [ebp-0x2c],ch
  41a738:	sbb    BYTE PTR [eax],ch
  41a73a:	scas   eax,DWORD PTR es:[edi]
  41a73b:	fild   DWORD PTR [ebp+0xf]
  41a73f:	out    0xb7,al
  41a741:	call   0x3145:0x5862
  41a747:	repz xor eax,0x7363b4d3
  41a74d:	fiadd  WORD PTR [eax-0x60]
  41a750:	push   ss
  41a751:	shl    DWORD PTR [edx+0x38],0x7d
  41a755:	in     al,0x7d
  41a757:	es or  eax,0xbb8419be
  41a75d:	(bad)  
  41a75e:	adc    edx,DWORD PTR [eax+eiz*4]
  41a761:	les    eax,FWORD PTR [edx-0x11]
  41a764:	sbb    edx,DWORD PTR [eax]
  41a766:	sub    al,0xf9
  41a768:	xor    bh,BYTE PTR [ebx]
  41a76a:	nop
  41a76b:	add    esp,DWORD PTR [edi-0x29]
  41a76e:	enter  0x6bc5,0x5f
  41a772:	dec    ecx
  41a773:	mov    ebx,DWORD PTR [ecx]
  41a775:	xor    al,0x85
  41a777:	lods   al,BYTE PTR ds:[esi]
  41a778:	pop    ecx
  41a779:	mov    esi,0x57496b79
  41a77e:	add    al,0x7d
  41a780:	test   eax,0x2f51a007
  41a785:	and    DWORD PTR [ebx+0x3d],ebx
  41a788:	xchg   ebx,eax
  41a789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a78a:	adc    ah,cl
  41a78c:	inc    ecx
  41a78d:	(bad)  
  41a78e:	(bad)  [eax+eiz*2]
  41a791:	bound  ebx,QWORD PTR [ebx]
  41a793:	jge    0x41a7fe
  41a795:	xchg   DWORD PTR [ecx+0x55],ebx
  41a798:	xor    ebp,edx
  41a79a:	hlt    
  41a79b:	aad    0x3f
  41a79d:	je     0x41a74c
  41a79f:	push   ebx
  41a7a0:	pop    ss
  41a7a1:	icebp  
  41a7a2:	ret    
  41a7a3:	sahf   
  41a7a4:	(bad)  
  41a7a5:	pop    esi
  41a7a6:	ret    
  41a7a7:	jbe    0x41a788
  41a7a9:	lock push es
  41a7ab:	ret    0x6766
  41a7ae:	and    eax,0x83cf107d
  41a7b3:	add    ebx,esp
  41a7b5:	mov    WORD PTR [ecx-0x3a],?
  41a7b8:	sbb    bl,bl
  41a7ba:	fwait
  41a7bb:	pushf  
  41a7bc:	sbb    ebp,edx
  41a7be:	pop    ecx
  41a7bf:	rcl    DWORD PTR [ebx],1
  41a7c1:	mov    ebp,0x181c193
  41a7c6:	mov    ch,0x31
  41a7c8:	mov    BYTE PTR [ebp+0x7bd990eb],0xab
  41a7cf:	loop   0x41a7fe
  41a7d1:	(bad)  
  41a7d2:	out    0x60,al
  41a7d4:	idiv   BYTE PTR [eax-0x39aa6f8a]
  41a7da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7db:	push   ebp
  41a7dc:	test   eax,0x2663bb6b
  41a7e1:	inc    edx
  41a7e2:	inc    edx
  41a7e3:	and    al,0xf6
  41a7e5:	mov    edx,0x618233a6
  41a7ea:	in     eax,0x6f
  41a7ec:	or     eax,0x4a756766
  41a7f1:	cmp    DWORD PTR [ebp+0x256defc7],0xe
  41a7f8:	push   ebp
  41a7f9:	mov    dh,0xee
  41a7fb:	ins    DWORD PTR es:[edi],dx
  41a7fc:	sub    bh,BYTE PTR [ebp-0x1978bf2f]
  41a802:	push   esi
  41a803:	scas   eax,DWORD PTR es:[edi]
  41a804:	xor    dh,BYTE PTR [ecx-0x5e]
  41a807:	(bad)  
  41a808:	adc    edi,DWORD PTR [edi-0x2525553]
  41a80e:	idiv   bh
  41a810:	inc    eax
  41a811:	and    ah,bh
  41a813:	sti    
  41a814:	sbb    al,BYTE PTR [ebx+0x37]
  41a817:	scas   eax,DWORD PTR es:[edi]
  41a818:	hlt    
  41a819:	ins    DWORD PTR es:[edi],dx
  41a81a:	add    ch,BYTE PTR [ebp+0x115cd891]
  41a820:	jmp    0xc15cc2d5
  41a825:	(bad)  [eax]
  41a827:	(bad)  
  41a828:	into   
  41a829:	xor    bh,al
  41a82b:	lods   al,BYTE PTR ds:[esi]
  41a82c:	jecxz  0x41a861
  41a82e:	cmp    al,0x34
  41a830:	out    dx,al
  41a831:	fwait
  41a832:	pop    esp
  41a833:	aad    0x4a
  41a835:	je     0x41a7f6
  41a837:	xor    eax,0xc2156cf7
  41a83c:	ret    
  41a83d:	pop    esi
  41a83e:	xlat   BYTE PTR ds:[ebx]
  41a83f:	(bad)
  41a843:	fild   WORD PTR [ecx]
  41a845:	xor    eax,0x901cf013
  41a84a:	push   edi
  41a84b:	or     al,0xbb
  41a84d:	sub    BYTE PTR [ecx],cl
  41a84f:	xrelease xchg BYTE PTR [ebx],dl
  41a852:	out    0x9b,al
  41a854:	cmp    eax,DWORD PTR [edx]
  41a856:	imul   edx,DWORD PTR [edi+0xc910473],0x1f
  41a85d:	repz imul edx,DWORD PTR [eax+0x647247b8],0x754926a6
  41a868:	test   al,0x51
  41a86a:	test   BYTE PTR [edi+0x48],bl
  41a86d:	ret    
  41a86e:	jg     0x41a80d
  41a870:	add    BYTE PTR [eax+eax*1+0x71ee479b],ch
  41a877:	inc    esi
  41a878:	add    dh,BYTE PTR [ecx+0x46980487]
  41a87e:	aas    
  41a87f:	pop    es
  41a880:	cmp    DWORD PTR [ecx+0x75],ebp
  41a883:	mov    dl,0x90
  41a885:	jl     0x41a8cb
  41a887:	xor    bl,BYTE PTR [ebx+0x3aa0f157]
  41a88d:	scas   eax,DWORD PTR es:[edi]
  41a88e:	les    ebx,FWORD PTR [eax+0x1f]
  41a891:	fstp   DWORD PTR [eax+0x55790330]
  41a897:	inc    ebx
  41a898:	cld    
  41a899:	sahf   
  41a89a:	lea    esi,[edx+0x6a]
  41a89d:	sar    BYTE PTR [edx],cl
  41a89f:	js     0x41a822
  41a8a1:	or     dh,cl
  41a8a3:	jge    0x41a919
  41a8a5:	jp     0x41a892
  41a8a7:	lods   al,BYTE PTR ds:[esi]
  41a8a8:	add    DWORD PTR [esi],eax
  41a8aa:	enter  0xf0d7,0xaa
  41a8ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8af:	pushf  
  41a8b0:	mov    ah,0xa1
  41a8b2:	pushf  
  41a8b3:	sub    al,0x39
  41a8b5:	fnstenv [edx]
  41a8b7:	call   0x12ae9ab8
  41a8bc:	adc    BYTE PTR [ecx+0x96ec0da],ah
  41a8c2:	cli    
  41a8c3:	fcomp  DWORD PTR [ecx+0x1af90e67]
  41a8c9:	(bad)  
  41a8ca:	cli    
  41a8cb:	and    al,0xa1
  41a8cd:	push   eax
  41a8ce:	dec    eax
  41a8cf:	ins    DWORD PTR es:[edi],dx
  41a8d0:	sub    eax,0xbb320c47
  41a8d5:	out    dx,eax
  41a8d6:	inc    edi
  41a8d7:	iret   
  41a8d8:	cmp    cl,BYTE PTR [edx-0xb]
  41a8db:	push   edi
  41a8dc:	daa    
  41a8dd:	jae    0x41a870
  41a8df:	add    DWORD PTR [esi-0x676f80bb],esi
  41a8e5:	out    dx,al
  41a8e6:	sahf   
  41a8e7:	popf   
  41a8e8:	jnp    0x41a903
  41a8ea:	cld    
  41a8eb:	add    al,0x2c
  41a8ed:	xor    BYTE PTR [ebx+0x297aa977],ch
  41a8f3:	mov    esp,0xe48c4f24
  41a8f8:	sub    DWORD PTR [ecx],edi
  41a8fa:	(bad)  
  41a8fb:	cs pop edx
  41a8fd:	xor    eax,0xa4d422f7
  41a902:	mov    BYTE PTR [eax],bh
  41a904:	jb     0x41a95c
  41a906:	adc    DWORD PTR [esi-0x5af99017],ebx
  41a90c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a90d:	mov    edi,0x1858fd29
  41a912:	push   es
  41a913:	outs   dx,BYTE PTR ds:[esi]
  41a914:	push   ds
  41a915:	repnz sbb DWORD PTR [ecx-0x13],0x9f4dac9c
  41a91d:	sti    
  41a91e:	xchg   ch,bh
  41a920:	pop    es
  41a921:	inc    eax
  41a922:	sahf   
  41a923:	push   ds
  41a924:	sub    DWORD PTR [eax+ebp*4+0x38],0x63
  41a929:	ja     0x41a961
  41a92b:	int3   
  41a92c:	push   eax
  41a92d:	cmp    al,0xab
  41a92f:	inc    esp
  41a930:	shl    edx,0x89
  41a933:	pop    edi
  41a934:	outs   dx,DWORD PTR ds:[esi]
  41a935:	pusha  
  41a936:	mov    esp,0x916c5b94
  41a93b:	sub    DWORD PTR [ebx],esp
  41a93d:	dec    edi
  41a93e:	enter  0x65cf,0xc4
  41a942:	fldenvw [esi+0x20]
  41a946:	mov    bl,ah
  41a948:	cmp    eax,ecx
  41a94a:	mov    DWORD PTR ds:0x4d624610,esi
  41a950:	out    dx,al
  41a951:	je     0x41a8fc
  41a953:	jl     0x41a8f2
  41a955:	dec    esi
  41a956:	fcomip st,st(2)
  41a958:	and    esp,esi
  41a95a:	jmp    0x78c2:0xf8da4b20
  41a961:	(bad)  
  41a962:	jmp    0xb1cc:0x950998bb
  41a969:	jg     0x41a9d1
  41a96b:	lahf   
  41a96c:	ret    0xcea2
  41a96f:	and    DWORD PTR [edi],edx
  41a971:	mov    gs,WORD PTR [esi-0x2d6fc51b]
  41a977:	push   0xffffff88
  41a979:	dec    ch
  41a97b:	dec    esi
  41a97c:	pushf  
  41a97d:	pop    ss
  41a97e:	dec    eax
  41a97f:	cli    
  41a980:	(bad)  
  41a981:	mov    edi,0xf4ec813f
  41a986:	(bad)  
  41a988:	in     eax,dx
  41a989:	ss repnz aad 0x11
  41a98d:	xor    BYTE PTR [eax],ah
  41a98f:	jecxz  0x41a939
  41a991:	test   al,0x8d
  41a993:	popa   
  41a994:	xchg   ebx,eax
  41a995:	ret    
  41a996:	push   edi
  41a997:	pop    edx
  41a998:	pop    esi
  41a999:	mov    esi,0x6a4e179a
  41a99e:	call   0xa8cd:0xe773b945
  41a9a5:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41a9a7:	pushf  
  41a9a8:	cwde   
  41a9a9:	sub    ah,ah
  41a9ab:	jmp    edx
  41a9ad:	out    0x52,eax
  41a9af:	lock mov ds:0x2f849dd1,eax
  41a9b5:	cmp    eax,0xdaf4a2c3
  41a9ba:	repnz inc eax
  41a9bc:	cdq    
  41a9bd:	fld    QWORD PTR ds:0x14d064bf
  41a9c3:	test   DWORD PTR [edx+0x50],0xf22f0b25
  41a9ca:	loopne 0x41a9b2
  41a9cc:	sbb    dl,dh
  41a9ce:	lock imul ebx,DWORD PTR [esi+eax*4+0x6e],0xffffffbe
  41a9d4:	int    0x14
  41a9d6:	push   cs
  41a9d7:	jne    0x41a9cb
  41a9d9:	aam    0x4e
  41a9db:	das    
  41a9dc:	fwait
  41a9dd:	adc    al,0x5f
  41a9df:	adc    eax,0x413d83d7
  41a9e4:	(bad)  
  41a9e5:	aaa    
  41a9e6:	dec    ebx
  41a9e7:	clc    
  41a9e8:	xor    BYTE PTR [esi-0x205e2863],al
  41a9ee:	push   ss
  41a9ef:	lods   al,BYTE PTR ds:[esi]
  41a9f0:	mov    dl,0x75
  41a9f2:	dec    edi
  41a9f3:	or     ch,BYTE PTR [edx-0x6741b9ed]
  41a9f9:	xchg   DWORD PTR [edi-0x3a5ace35],esi
  41a9ff:	push   edi
  41aa00:	sbb    cl,BYTE PTR [esi]
  41aa02:	sub    dh,dl
  41aa04:	xor    ebp,esp
  41aa06:	mov    WORD PTR [ebp+0x3f],?
  41aa09:	and    DWORD PTR [edx+0x38],ebx
  41aa0c:	xor    eax,0xdb4f344c
  41aa11:	push   eax
  41aa12:	(bad)  
  41aa13:	mov    edi,0x71f26ca4
  41aa18:	test   al,0x57
  41aa1a:	lds    ebx,FWORD PTR [edi]
  41aa1c:	sub    DWORD PTR [edi-0x2e],esi
  41aa1f:	adc    al,0xfc
  41aa21:	cmp    al,0x2b
  41aa23:	or     al,0x90
  41aa25:	xor    DWORD PTR [edx-0x710fd09e],0xc3e58b8d
  41aa2f:	sub    eax,ecx
  41aa31:	leave  
  41aa32:	add    BYTE PTR [eax+0x4908bd2c],dl
  41aa38:	inc    ebx
  41aa39:	jo     0x41aa5a
  41aa3b:	dec    edx
  41aa3c:	sbb    dl,BYTE PTR [edi+ecx*4]
  41aa3f:	jns    0x41aa58
  41aa41:	mov    ebp,0xc01e893f
  41aa46:	push   0x533a9b3e
  41aa4b:	ins    DWORD PTR es:[edi],dx
  41aa4c:	test   bl,0xd8
  41aa4f:	fadd   QWORD PTR [ecx-0x33775fc4]
  41aa55:	enter  0xb066,0x1d
  41aa59:	(bad)  
  41aa5a:	jp     0x41aa86
  41aa5c:	xor    dl,BYTE PTR [ebp+0x73]
  41aa5f:	mov    ds:0xc3b0d9e,al
  41aa64:	leave  
  41aa65:	add    ecx,DWORD PTR [edx]
  41aa67:	dec    edi
  41aa68:	in     eax,0xc0
  41aa6a:	xchg   edi,eax
  41aa6b:	cmp    eax,0x8012ce27
  41aa70:	jae    0x41aa84
  41aa72:	aaa    
  41aa73:	sub    DWORD PTR [edi+0x1],ecx
  41aa76:	aam    0xcd
  41aa78:	out    dx,eax
  41aa79:	add    ah,dl
  41aa7b:	mov    ds:0x211a4823,eax
  41aa80:	mov    ds:0x71ed4fa3,al
  41aa85:	(bad)  
  41aa87:	pop    ebx
  41aa88:	mulps  xmm0,xmm0
  41aa8b:	iret   
  41aa8c:	dec    esi
  41aa8d:	in     al,dx
  41aa8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa8f:	mov    DWORD PTR [eax-0x65],edx
  41aa92:	je     0x41aa8e
  41aa94:	or     ebx,DWORD PTR [edi*4-0x1db6064f]
  41aa9b:	push   cs
  41aa9c:	adc    eax,0x2e0be756
  41aaa1:	sub    esp,esi
  41aaa3:	lds    ebx,FWORD PTR [eax]
  41aaa5:	pcmpeqb mm0,QWORD PTR [eax+ebp*2-0x5a]
  41aaaa:	gs inc esi
  41aaac:	sub    DWORD PTR [edx+0x35d4984e],esp
  41aab2:	cs cli 
  41aab4:	aas    
  41aab5:	and    al,0x9c
  41aab7:	imul   esp,DWORD PTR [edx],0x54
  41aaba:	dec    ebx
  41aabb:	add    eax,0x405cedbf
  41aac0:	jmp    0xa710:0xc07316b
  41aac7:	cmp    eax,0xe260477d
  41aacc:	inc    ebx
  41aacd:	mov    ds:0xcd1aac1e,eax
  41aad2:	xchg   esp,eax
  41aad3:	ficom  WORD PTR [eax+0x1e]
  41aad6:	inc    ebx
  41aad7:	rol    BYTE PTR [esi-0x13f20ece],1
  41aadd:	(bad)  
  41aade:	fldcw  WORD PTR [edi+0x11b27d54]
  41aae4:	mov    ch,0xf3
  41aae6:	jmp    0x41aa89
  41aae8:	test   DWORD PTR [edi-0x6d],esp
  41aaeb:	aad    0x28
  41aaed:	dec    ecx
  41aaee:	in     eax,dx
  41aaef:	adc    al,0x68
  41aaf1:	es jle 0x41aae5
  41aaf4:	xor    DWORD PTR [edx],esp
  41aaf6:	or     BYTE PTR [eax-0x2c2e1366],ah
  41aafc:	outs   dx,BYTE PTR ds:[esi]
  41aafd:	dec    edi
  41aafe:	push   cs
  41aaff:	adc    BYTE PTR [ecx-0x6e],cl
  41ab02:	js     0x41aa9f
  41ab04:	jne    0x41ab83
  41ab06:	dec    edi
  41ab07:	js     0x41aae5
  41ab09:	pop    esi
  41ab0a:	adc    al,0x56
  41ab0c:	jns    0x41aab8
  41ab0e:	sbb    BYTE PTR [edi+0x5d731148],ch
  41ab14:	jp     0x41aab9
  41ab16:	jo     0x41aaaa
  41ab18:	mov    ds:0xf171bc2f,eax
  41ab1d:	jns    0x41ab6b
  41ab1f:	mov    ebx,0x239625fe
  41ab24:	xchg   esi,eax
  41ab25:	mov    ebx,0x396ac360
  41ab2a:	cmp    cl,BYTE PTR [ebx-0x3d7dfae0]
  41ab30:	mov    eax,ds:0x6a0a4627
  41ab35:	data16 (bad) 
  41ab38:	dec    edx
  41ab39:	inc    esp
  41ab3a:	cmp    edx,DWORD PTR [ecx]
  41ab3c:	add    eax,0x39157699
  41ab41:	pop    ebp
  41ab42:	and    DWORD PTR [edx+0x26d3cc8],eax
  41ab48:	(bad)  
  41ab49:	xchg   esp,eax
  41ab4a:	add    dh,BYTE PTR [edx+0x70]
  41ab4d:	and    bl,BYTE PTR [edi+0x7ae3c6c5]
  41ab53:	scas   eax,DWORD PTR es:[edi]
  41ab54:	je     0x41ab37
  41ab56:	lahf   
  41ab57:	xor    BYTE PTR [ebx+0xc],al
  41ab5a:	push   ds
  41ab5b:	enter  0xedf9,0x83
  41ab5f:	dec    eax
  41ab60:	lods   eax,DWORD PTR ds:[esi]
  41ab61:	call   0xd3da:0xc9c7ba54
  41ab68:	sub    BYTE PTR [edx+0x2126aecd],0xce
  41ab6f:	dec    esp
  41ab70:	clc    
  41ab71:	and    esi,DWORD PTR [ebx+0x64b8a2e8]
  41ab77:	into   
  41ab78:	daa    
  41ab79:	mov    esp,0xd94b89ef
  41ab7e:	or     DWORD PTR [eax+ebp*8-0x80],edi
  41ab82:	xor    BYTE PTR [ebx],dl
  41ab84:	les    esp,FWORD PTR [ebx-0x2d996e9c]
  41ab8a:	sub    edx,ecx
  41ab8c:	lods   al,BYTE PTR ds:[esi]
  41ab8d:	leave  
  41ab8e:	lea    ebp,[edi+0x46997e95]
  41ab94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab95:	xchg   edx,eax
  41ab96:	sbb    DWORD PTR [eax],ebx
  41ab98:	adc    DWORD PTR [edi-0x7c3b44ff],ebp
  41ab9e:	jmp    FWORD PTR [edi-0x44]
  41aba1:	ds push ss
  41aba3:	cmp    dh,al
  41aba5:	test   eax,0x56e60428
  41abaa:	cmp    ah,BYTE PTR [eax+0x26]
  41abad:	jmp    0x763baf8c
  41abb2:	iret   
  41abb3:	mov    edi,0xd342e267
  41abb8:	(bad)  
  41abb9:	xor    DWORD PTR [edx-0x4d],edi
  41abbc:	push   DWORD PTR [ebx]
  41abbe:	fwait
  41abbf:	nop
  41abc0:	jb     0x41abee
  41abc2:	dec    eax
  41abc3:	mov    eax,ds:0x25aca998
  41abc8:	and    BYTE PTR [eax-0x59],cl
  41abcb:	out    dx,eax
  41abcc:	push   es
  41abcd:	into   
  41abce:	mov    edx,0xf603a73e
  41abd3:	add    eax,0x3da50f29
  41abd8:	jae    0x41ac06
  41abda:	mov    edi,0xc134221d
  41abdf:	loopne 0x41abef
  41abe1:	and    edi,edx
  41abe3:	add    DWORD PTR [eax+0x26],0x8ed601ef
  41abea:	test   BYTE PTR [edi],cl
  41abec:	fwait
  41abed:	mov    dh,0xfa
  41abf0:	cmp    DWORD PTR [ecx-0x48],0x78f72149
  41abf7:	push   eax
  41abf8:	nop
  41abf9:	int3   
  41abfa:	dec    eax
  41abfb:	sub    ch,0x59
  41abfe:	jo     0x41abeb
  41ac00:	add    BYTE PTR [esp+esi*4+0x2108568a],bl
  41ac07:	ror    BYTE PTR [ebx+0x71d5f887],0xc4
  41ac0e:	pop    ecx
  41ac0f:	pop    ebp
  41ac10:	mov    edx,0xc6154e5e
  41ac15:	xor    BYTE PTR [ebx],dl
  41ac17:	sbb    eax,0x5823c51
  41ac1c:	mov    dh,0x1b
  41ac1e:	add    al,0x71
  41ac20:	repz cwde 
  41ac22:	nop
  41ac23:	punpckhwd mm5,mm1
  41ac26:	mov    edx,DWORD PTR [esi+0x2f39696d]
  41ac2c:	dec    esi
  41ac2d:	fwait
  41ac2e:	dec    ecx
  41ac2f:	adc    bl,cl
  41ac31:	lock mov gs,WORD PTR [esi]
  41ac34:	sub    ah,bl
  41ac36:	ins    DWORD PTR es:[edi],dx
  41ac37:	frstor [edx+ebp*8-0x76]
  41ac3b:	js     0x41ac61
  41ac3d:	mov    dl,0x7c
  41ac3f:	retf   
  41ac40:	arpl   WORD PTR [esi+0x22],si
  41ac43:	mov    ecx,0xfee97b39
  41ac48:	xchg   esi,eax
  41ac49:	jle    0x41ac05
  41ac4b:	jb     0x41ac07
  41ac4d:	daa    
  41ac4e:	sub    dl,bh
  41ac50:	cmc    
  41ac51:	and    ebp,DWORD PTR [edi+ebx*1+0x330145cd]
  41ac58:	sbb    ch,bl
  41ac5a:	sub    al,0x53
  41ac5c:	js     0x41ac2c
  41ac5e:	in     eax,0x29
  41ac60:	sar    DWORD PTR [edx-0x49],cl
  41ac63:	aas    
  41ac64:	clc    
  41ac65:	(bad)  
  41ac66:	push   ebx
  41ac67:	xchg   esi,eax
  41ac68:	call   0x518d91a5
  41ac6d:	mov    ?,WORD PTR [edx+0x8]
  41ac70:	ds add eax,ebx
  41ac73:	loop   0x41ac11
  41ac75:	test   eax,0xfc898bc6
  41ac7a:	es and ebp,eax
  41ac7d:	shl    BYTE PTR [ecx],cl
  41ac7f:	push   ss
  41ac80:	mov    esi,0xb6e002a6
  41ac85:	std    
  41ac86:	xor    al,0x25
  41ac88:	(bad)  [ebx]
  41ac8a:	jle    0x41ac1a
  41ac8c:	add    ah,dh
  41ac8e:	stos   BYTE PTR es:[edi],al
  41ac8f:	pop    esp
  41ac90:	adc    al,0x9f
  41ac92:	das    
  41ac93:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41ac95:	dec    ecx
  41ac96:	or     DWORD PTR [edx],ecx
  41ac98:	mov    ecx,ds
  41ac9a:	repz loope 0x41acff
  41ac9d:	xlat   BYTE PTR ds:[ebx]
  41ac9e:	call   0x623e:0x2358aaee
  41aca5:	leave  
  41aca6:	mov    ds,WORD PTR [edx]
  41aca8:	sbb    dl,BYTE PTR [edx]
  41acaa:	xchg   esi,eax
  41acab:	and    edx,ebp
  41acad:	push   edi
  41acae:	test   BYTE PTR [ebx+0x6a],cl
  41acb1:	or     edx,DWORD PTR [edi-0x4a]
  41acb4:	daa    
  41acb5:	pop    esi
  41acb6:	in     al,0xfd
  41acb8:	loop   0x41ad01
  41acba:	fnstcw WORD PTR [esi]
  41acbc:	or     dh,BYTE PTR [ecx+0x19]
  41acbf:	pop    eax
  41acc0:	xchg   ebx,eax
  41acc1:	sbb    BYTE PTR [ebp+0x6aaaa935],ah
  41acc7:	ins    BYTE PTR es:[edi],dx
  41acc8:	mov    bh,0x64
  41acca:	fcomp  DWORD PTR [ebx+0x3b]
  41accd:	iret   
  41acce:	pushf  
  41accf:	mov    esp,0x686ec43c
  41acd4:	mov    ds,WORD PTR [ebx+0x758785c6]
  41acda:	fcmovu st,st(0)
  41acdc:	mov    esp,0xcfa47f99
  41ace1:	jnp    0x41ac7b
  41ace3:	ss cmp eax,0x72798ef1
  41ace9:	nop
  41acea:	push   0xe9429621
  41acef:	pop    ss
  41acf0:	mov    dh,0xfc
  41acf2:	xor    BYTE PTR [eax],al
  41acf4:	and    DWORD PTR [edx-0x5fef845c],ebx
  41acfa:	mov    ds:0xe10ad51f,al
  41acff:	test   BYTE PTR [ebx-0x7221adb1],dh
  41ad05:	ins    BYTE PTR es:[edi],dx
  41ad06:	pop    esi
  41ad07:	xchg   ecx,esp
  41ad09:	push   cs
  41ad0a:	cmp    cl,bh
  41ad0c:	cs icebp 
  41ad0e:	jecxz  0x41acab
  41ad10:	xchg   ecx,eax
  41ad11:	sub    al,0xaa
  41ad13:	sub    DWORD PTR [ebx],eax
  41ad15:	out    0x4c,al
  41ad17:	fld    TBYTE PTR [edi-0x6da98a0d]
  41ad1d:	imul   ecx,ecx,0x3d
  41ad20:	mov    ch,0x9
  41ad22:	outs   dx,DWORD PTR ds:[esi]
  41ad23:	xchg   edi,eax
  41ad24:	jo     0x41acc8
  41ad26:	dec    edi
  41ad27:	fsub   st(3),st
  41ad29:	inc    edx
  41ad2a:	lods   al,BYTE PTR ds:[esi]
  41ad2b:	test   BYTE PTR ds:0xd82b4067,al
  41ad31:	sbb    DWORD PTR [ebp-0x54],esp
  41ad34:	push   ss
  41ad35:	(bad)  
  41ad36:	adc    al,0xb6
  41ad38:	sub    al,0x57
  41ad3a:	int3   
  41ad3b:	inc    ecx
  41ad3c:	xor    eax,0x167b0bf2
  41ad41:	sbb    esp,DWORD PTR [ecx-0x3c]
  41ad44:	pop    eax
  41ad45:	(bad)  
  41ad46:	cmp    dl,cl
  41ad48:	test   BYTE PTR [edi],bh
  41ad4a:	jb     0x41adb0
  41ad4c:	nop
  41ad4d:	addps  xmm5,XMMWORD PTR [eax+0x43]
  41ad51:	(bad)  
  41ad53:	xor    eax,esi
  41ad55:	dec    eax
  41ad56:	pop    eax
  41ad57:	stos   BYTE PTR es:[edi],al
  41ad58:	adc    al,0xff
  41ad5a:	mov    esi,0x14ba6fe0
  41ad5f:	pop    es
  41ad60:	popf   
  41ad61:	push   es
  41ad62:	sub    ch,BYTE PTR [edi-0x43]
  41ad65:	pop    ds
  41ad66:	retf   0xf2aa
  41ad69:	adc    ecx,DWORD PTR [edi+0x50fed59d]
  41ad6f:	call   0xb909:0x6a3f91db
  41ad76:	pop    ebp
  41ad77:	(bad)  
  41ad79:	fchs   
  41ad7b:	das    
  41ad7c:	pop    ebp
  41ad7d:	sub    al,0xd2
  41ad7f:	das    
  41ad80:	div    BYTE PTR [edi-0x39157dcf]
  41ad86:	jle    0x41ae06
  41ad88:	push   0x28
  41ad8a:	adc    al,0xa1
  41ad8c:	jno    0x41ae05
  41ad8e:	cmc    
  41ad8f:	mov    al,ds:0x314a493b
  41ad94:	arpl   WORD PTR [eax+0x7b],bp
  41ad97:	sbb    esp,DWORD PTR [edi]
  41ad99:	push   edx
  41ad9a:	test   BYTE PTR [ecx+0x38c92169],bl
  41ada0:	add    eax,0xa3b23411
  41ada5:	inc    edx
  41ada6:	push   esp
  41ada7:	xor    ebp,DWORD PTR [eax-0x62]
  41adaa:	sub    eax,DWORD PTR [edx+0x50c09ce7]
  41adb0:	xor    edx,eax
  41adb2:	out    dx,al
  41adb3:	add    DWORD PTR [ebp-0x39],edi
  41adb6:	mov    cx,WORD PTR [ebp+0x11502b21]
  41adbd:	das    
  41adbe:	dec    ebp
  41adbf:	bound  edi,QWORD PTR [edi+esi*1+0x50]
  41adc3:	jp     0x41ad94
  41adc5:	fstp   DWORD PTR [edi-0x33]
  41adc8:	mov    ch,0x3c
  41adca:	lahf   
  41adcb:	sbb    dl,BYTE PTR [ecx+0x147909ca]
  41add1:	mov    bh,BYTE PTR [ebp-0x73]
  41add4:	adc    al,0x36
  41add6:	imul   esp,DWORD PTR [edi+0x461d492a],0xffffff9b
  41addd:	sub    DWORD PTR ds:[esi],edx
  41ade0:	icebp  
  41ade1:	out    0x53,eax
  41ade3:	pop    esi
  41ade4:	dec    ebx
  41ade5:	mov    dl,0xe4
  41ade7:	cld    
  41ade8:	scas   eax,DWORD PTR es:[edi]
  41ade9:	stos   BYTE PTR es:[edi],al
  41adea:	lea    esi,[ebx]
  41adec:	jmp    0x41ad7d
  41adee:	mov    al,ds:0x4872f900
  41adf3:	outs   dx,BYTE PTR ds:[si]
  41adf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adf6:	ficomp DWORD PTR [eax+0x321e93d8]
  41adfc:	dec    edi
  41adfd:	jne    0x41adac
  41adff:	adc    ebx,esi
  41ae01:	int3   
  41ae02:	add    al,0x2c
  41ae04:	scas   al,BYTE PTR es:[edi]
  41ae05:	pop    es
  41ae06:	out    0x64,eax
  41ae08:	xchg   esi,eax
  41ae09:	inc    esi
  41ae0a:	xchg   ecx,eax
  41ae0b:	(bad)  [eax-0x1d]
  41ae0e:	adc    ecx,0x28
  41ae11:	ror    edx,cl
  41ae13:	ficomp WORD PTR [esi+0x29d6c783]
  41ae19:	and    eax,0xaeec92a7
  41ae1e:	mov    al,ds:0xd25e7209
  41ae23:	mov    ah,0x2d
  41ae25:	cmp    eax,0xde26ffb4
  41ae2a:	into   
  41ae2b:	sbb    al,0x6a
  41ae2d:	aas    
  41ae2e:	sbb    al,0xe5
  41ae30:	bound  ebx,QWORD PTR [edi+0x32]
  41ae33:	pop    ds
  41ae34:	sub    eax,0x4e928bfe
  41ae39:	sub    eax,0x2cfaec6
  41ae3e:	es jl  0x41ae6b
  41ae41:	pop    ebx
  41ae42:	(bad)  
  41ae43:	inc    edi
  41ae44:	out    dx,al
  41ae45:	into   
  41ae46:	fisubr WORD PTR [edx-0x73bc01df]
  41ae4c:	hlt    
  41ae4d:	dec    ebx
  41ae4e:	pop    esi
  41ae4f:	sub    bl,BYTE PTR [eax-0x97564de]
  41ae55:	and    BYTE PTR [eax],cl
  41ae57:	ss and eax,0xb5b8b3c9
  41ae5d:	call   0x9379042d
  41ae62:	test   DWORD PTR [eax+0x5ae79c5c],esi
  41ae68:	and    ebx,DWORD PTR [esp+eiz*8]
  41ae6b:	jae    0x41aee8
  41ae6d:	fldenv [esi+0x5c0b3f5f]
  41ae73:	and    al,0x55
  41ae75:	mov    eax,ds:0xc0202be3
  41ae7a:	push   eax
  41ae7b:	je     0x41ae6d
  41ae7d:	push   ebp
  41ae7e:	(bad)  
  41ae7f:	mov    edx,esp
  41ae81:	or     esi,DWORD PTR [edx+0x3]
  41ae84:	xchg   ebp,eax
  41ae85:	rcl    dh,1
  41ae87:	ret    0x8e1a
  41ae8a:	adc    eax,0x4dfb447a
  41ae8f:	sub    esi,DWORD PTR [edi]
  41ae91:	lods   al,BYTE PTR ds:[esi]
  41ae92:	xor    DWORD PTR [ebx+0x36c370b8],esp
  41ae98:	add    BYTE PTR [eax-0x4c],al
  41ae9b:	pushf  
  41ae9c:	loopne 0x41af07
  41ae9e:	pop    ds
  41ae9f:	rol    BYTE PTR [edi-0x4e],cl
  41aea2:	adc    BYTE PTR [ecx],al
  41aea4:	mov    ch,0x2
  41aea6:	mov    bh,0x6c
  41aea8:	aaa    
  41aea9:	lahf   
  41aeaa:	addr16 out dx,al
  41aeac:	push   esp
  41aead:	inc    esi
  41aeae:	cld    
  41aeaf:	and    BYTE PTR [eax+eiz*4+0x4a6eb56b],ch
  41aeb6:	daa    
  41aeb7:	push   eax
  41aeb8:	ret    0x37e6
  41aebb:	or     bh,BYTE PTR es:[eax-0x2b436580]
  41aec2:	loope  0x41af1c
  41aec4:	jge    0x41aef0
  41aec6:	add    bh,BYTE PTR [edx+0xe652cb7]
  41aecc:	les    eax,FWORD PTR [eax+eiz*8-0x19]
  41aed0:	inc    ebp
  41aed1:	mov    esi,0x5584fec5
  41aed6:	fistp  WORD PTR [edx+0x27]
  41aed9:	inc    ebx
  41aeda:	sub    al,0xc8
  41aedc:	jmp    0x41af29
  41aede:	mov    ch,BYTE PTR [edx-0x6c]
  41aee1:	les    edx,FWORD PTR [ecx-0x27]
  41aee4:	mov    bh,0x1d
  41aee6:	cmp    dl,BYTE PTR [ecx+0x790bd66]
  41aeec:	inc    ebp
  41aeed:	dec    edx
  41aeee:	and    DWORD PTR [ecx-0x1a49f29f],esi
  41aef4:	mov    bl,0xf8
  41aef6:	xchg   bl,bl
  41aef8:	xchg   edi,eax
  41aef9:	mov    DWORD PTR [edi+0x56],ebp
  41aefc:	mov    al,0xe0
  41aefe:	xor    al,0x76
  41af00:	je     0x41aeed
  41af02:	mov    esp,?
  41af04:	pop    esp
  41af05:	aam    0xd2
  41af07:	sbb    edi,DWORD PTR [ebx-0x62]
  41af0a:	aad    0xd7
  41af0c:	adc    eax,0xa14343b6
  41af11:	mov    ch,0x1a
  41af13:	push   edx
  41af14:	push   edx
  41af15:	idiv   DWORD PTR [eax+0x6e2a7291]
  41af1b:	dec    esi
  41af1c:	je     0x41af6c
  41af1e:	mov    esp,0x41074731
  41af23:	fidiv  DWORD PTR [eax+eiz*8-0xe7e3e98]
  41af2a:	jne    0x41af7b
  41af2c:	jo     0x41af32
  41af2e:	stos   DWORD PTR es:[edi],eax
  41af2f:	and    al,0xb5
  41af31:	xchg   edi,ebx
  41af33:	dec    edx
  41af34:	adc    eax,0xe4a45d6a
  41af39:	sub    al,0x2b
  41af3b:	add    bl,BYTE PTR [esi+ebx*1]
  41af3e:	sahf   
  41af3f:	xchg   edx,eax
  41af40:	and    edx,ebp
  41af42:	and    DWORD PTR [ebx],0xb00c7557
  41af48:	repnz jecxz 0x41afc0
  41af4b:	lods   eax,DWORD PTR ds:[esi]
  41af4c:	cwde   
  41af4d:	shr    bh,cl
  41af4f:	(bad)  
  41af50:	into   
  41af51:	dec    ecx
  41af52:	or     DWORD PTR [edx+0x7],0xe5112c9f
  41af59:	mov    cl,0x7d
  41af5b:	sub    BYTE PTR [edx],bl
  41af5d:	mov    eax,ds:0x3c586ef9
  41af62:	ror    bh,0xf5
  41af65:	fld    st(5)
  41af67:	mov    cl,0x96
  41af69:	addr16 mov ecx,0xea286b14
  41af6f:	jo     0x41af70
  41af71:	or     BYTE PTR [ecx+0x21d54689],0x75
  41af78:	inc    DWORD PTR [eax]
  41af7a:	aas    
  41af7b:	pop    cx
  41af7d:	loope  0x41af41
  41af7f:	jae    0x41afe4
  41af81:	call   eax
  41af83:	pusha  
  41af84:	adc    ebp,DWORD PTR [edi]
  41af86:	inc    esp
  41af87:	pop    ebx
  41af88:	add    dl,BYTE PTR [edx+ebp*1-0x477db4c7]
  41af8f:	in     eax,dx
  41af90:	push   cs
  41af91:	fiadd  WORD PTR [eax]
  41af93:	fidiv  DWORD PTR [ecx-0x2366e1b]
  41af99:	icebp  
  41af9a:	or     eax,0xd75556f5
  41af9f:	push   ss
  41afa0:	inc    edi
  41afa1:	add    eax,0xa7a64eba
  41afa6:	xor    bl,dl
  41afa8:	push   edi
  41afa9:	out    dx,al
  41afaa:	inc    eax
  41afab:	outs   dx,DWORD PTR ds:[esi]
  41afac:	jae    0x41afc7
  41afae:	scas   al,BYTE PTR es:[edi]
  41afaf:	push   0xffffff97
  41afb1:	mov    ah,0x2
  41afb3:	int    0x7f
  41afb5:	mov    cl,0xd1
  41afb7:	push   0x43
  41afb9:	mov    bh,dh
  41afbb:	ret    0x701
  41afbe:	int3   
  41afbf:	xor    al,0x1a
  41afc1:	adc    edi,esp
  41afc3:	bound  edi,QWORD PTR [esi+0x43]
  41afc6:	arpl   sp,si
  41afc8:	mov    esp,0x300f8c77
  41afcd:	sub    ecx,DWORD PTR [edx-0x50]
  41afd0:	push   ecx
  41afd1:	out    dx,al
  41afd2:	jbe    0x41b04e
  41afd4:	dec    edi
  41afd5:	cmp    al,0x9e
  41afd7:	cmp    eax,0x8a825d45
  41afdc:	sar    ebx,1
  41afde:	call   0xfa1010f4
  41afe3:	ins    BYTE PTR es:[edi],dx
  41afe4:	lea    eax,[ecx+0x1f33cca1]
  41afea:	out    0x49,al
  41afec:	test   DWORD PTR [ecx-0x669c0f5f],ecx
  41aff2:	pop    ebp
  41aff3:	adc    al,0xa0
  41aff5:	jle    0x41b016
  41aff7:	mov    dh,0x2d
  41aff9:	dec    ecx
  41affa:	jl     0x41b024
  41affc:	clc    
  41affd:	xor    ebx,esp
  41afff:	jp     0x41aff3
  41b001:	call   0x5a172e14
  41b006:	dec    eax
  41b007:	mov    esp,0xc7aedc45
  41b00c:	mov    DWORD PTR [edx+0x5c25d329],ebp
  41b012:	cdq    
  41b013:	imul   esi,DWORD PTR [edx-0x2283cff5],0xffffffb3
  41b01a:	leave  
  41b01b:	mov    gs,WORD PTR [esi-0x9a32c5b]
  41b021:	add    BYTE PTR [eax-0x511e1f85],bl
  41b027:	imul   ecx,DWORD PTR [edi-0x12256523],0x8577f6be
  41b031:	sar    BYTE PTR ds:0x878aa41b,cl
  41b037:	call   0x276a4662
  41b03c:	mov    dl,0xf0
  41b03e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b03f:	mov    ah,0x52
  41b041:	mov    edx,0x96e0e40a
  41b046:	push   es
  41b047:	adc    ch,al
  41b049:	bound  esi,QWORD PTR [ebx+ecx*4]
  41b04c:	add    ch,0x4f
  41b04f:	and    bh,BYTE PTR [edx+0x60]
  41b052:	in     eax,dx
  41b053:	mov    eax,ds:0xd92c363a
  41b058:	jp     0x41afff
  41b05a:	mov    ch,0xc0
  41b05c:	rcr    DWORD PTR ds:0x1e5f5f4c,cl
  41b062:	sti    
  41b063:	cmp    esp,esp
  41b065:	sub    DWORD PTR [ebx-0x19],esi
  41b068:	and    DWORD PTR [ebx],ebp
  41b06a:	xor    BYTE PTR [ecx+0x31aa2da3],al
  41b070:	mov    bh,0x14
  41b072:	push   cs
  41b073:	xchg   ebx,eax
  41b074:	jecxz  0x41b0cf
  41b076:	call   0x8ad0:0x3e151a0a
  41b07d:	inc    eax
  41b07e:	(bad)  
  41b07f:	stc    
  41b080:	(bad)  
  41b082:	pushf  
  41b083:	(bad)  
  41b084:	jg     0x41b0b3
  41b086:	and    ecx,ebx
  41b088:	jae    0x41b103
  41b08a:	repnz inc edx
  41b08c:	add    bh,BYTE PTR [ecx]
  41b08e:	sti    
  41b08f:	repnz pop ebx
  41b091:	mov    ebx,0x10737afd
  41b096:	popa   
  41b097:	adc    dl,BYTE PTR [eax]
  41b099:	test   BYTE PTR [esi+0x3526c319],ch
  41b09f:	call   0xbb32:0x47a0d2f2
  41b0a6:	jp     0x41b06e
  41b0a8:	aad    0xbf
  41b0aa:	xchg   BYTE PTR [esi],bl
  41b0ac:	outs   dx,BYTE PTR ds:[esi]
  41b0ad:	daa    
  41b0ae:	out    dx,al
  41b0af:	outs   dx,DWORD PTR ds:[esi]
  41b0b0:	fadd   QWORD PTR [edi+0x9]
  41b0b3:	sub    BYTE PTR [esi-0x1d],al
  41b0b6:	mov    eax,0xa98f5a22
  41b0bb:	(bad)  
  41b0bc:	popf   
  41b0bd:	cmp    eax,0x53124e88
  41b0c2:	out    dx,al
  41b0c3:	retf   0x7dad
  41b0c6:	daa    
  41b0c7:	pop    es
  41b0c8:	mov    eax,0xff025c2c
  41b0cd:	push   0xffffffdf
  41b0cf:	push   ds
  41b0d0:	clc    
  41b0d1:	xchg   ecx,eax
  41b0d2:	stc    
  41b0d3:	jge    0x41b102
  41b0d5:	adc    al,BYTE PTR [ecx-0x18]
  41b0d8:	mov    DWORD PTR [ebp-0x74769e85],edx
  41b0de:	imul   ecx,DWORD PTR [eax],0x833e3633
  41b0e4:	loop   0x41b0a1
  41b0e6:	leave  
  41b0e7:	idiv   DWORD PTR [esi-0xa]
  41b0ea:	nop
  41b0eb:	fld    TBYTE PTR [eax]
  41b0ed:	rcl    BYTE PTR [eax+0x1fd69762],0x65
  41b0f4:	or     dl,BYTE PTR [edi-0x2b]
  41b0f7:	add    DWORD PTR [eax-0x4eef4a9f],ecx
  41b0fd:	xlat   BYTE PTR ds:[ebx]
  41b0fe:	dec    ebx
  41b0ff:	test   cl,0x45
  41b102:	mov    cl,BYTE PTR [ebx-0x61]
  41b105:	push   ebx
  41b106:	(bad)  
  41b107:	call   0x39b178d2
  41b10c:	jmp    0x41b0d6
  41b10e:	push   eax
  41b10f:	sub    DWORD PTR [ecx+eiz*8],edi
  41b112:	xchg   bh,bh
  41b114:	adc    BYTE PTR [ecx],bl
  41b116:	mov    bl,0x5b
  41b118:	loope  0x41b0bc
  41b11a:	and    BYTE PTR [esi],dl
  41b11c:	cli    
  41b11d:	pusha  
  41b11e:	jnp    0x41b102
  41b120:	dec    edx
  41b121:	push   es
  41b122:	sub    DWORD PTR [eax+0x4c],0xd23556da
  41b129:	pusha  
  41b12a:	mov    ebx,0xa06d494b
  41b12f:	or     BYTE PTR [esp+eiz*2-0x7574521c],bh
  41b136:	repnz inc DWORD PTR [ebx-0x72]
  41b13a:	scas   al,BYTE PTR es:[edi]
  41b13b:	cmc    
  41b13c:	adc    BYTE PTR [esi-0x19],bl
  41b13f:	dec    edi
  41b140:	(bad)  
  41b141:	mov    eax,0x89c9874c
  41b146:	push   cs
  41b147:	jmp    0x41b162
  41b149:	scas   al,BYTE PTR es:[edi]
  41b14a:	adc    al,0xa8
  41b14c:	out    dx,al
  41b14d:	fistp  DWORD PTR [edx]
  41b14f:	ficom  WORD PTR [ebx]
  41b151:	(bad)  
  41b152:	aam    0xa9
  41b154:	popa   
  41b155:	(bad)
  41b158:	js     0x41b17f
  41b15a:	inc    ebx
  41b15b:	cmp    bl,BYTE PTR [edx+edx*4]
  41b15e:	test   eax,0x10883381
  41b163:	push   ecx
  41b164:	or     bl,bh
  41b166:	(bad)  
  41b167:	out    0xab,eax
  41b169:	mov    ch,0x75
  41b16b:	cmp    eax,0x7fbb2755
  41b170:	push   0x656b1bb7
  41b175:	fwait
  41b176:	stc    
  41b177:	into   
  41b178:	in     eax,0x9d
  41b17a:	jno    0x41b129
  41b17c:	jecxz  0x41b1c2
  41b17e:	xchg   ebp,eax
  41b17f:	mov    al,ds:0x6a1e6737
  41b184:	and    BYTE PTR [edx-0x35fa012b],0xb9
  41b18b:	in     al,dx
  41b18c:	pop    es
  41b18d:	scas   al,BYTE PTR es:[edi]
  41b18e:	stos   DWORD PTR es:[edi],eax
  41b18f:	sub    ch,dl
  41b191:	sub    BYTE PTR [eax],0xf3
  41b194:	mov    cl,0x94
  41b196:	and    al,0x47
  41b198:	or     eax,DWORD PTR [edx]
  41b19a:	xchg   edx,eax
  41b19b:	in     eax,dx
  41b19c:	add    ch,al
  41b19e:	out    dx,al
  41b19f:	int    0x63
  41b1a1:	(bad)  
  41b1a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1a3:	cli    
  41b1a4:	call   0xa59f:0xcdb0ce62
  41b1ab:	ret    
  41b1ac:	enter  0x2501,0x9
  41b1b0:	out    dx,al
  41b1b1:	push   ds
  41b1b2:	(bad)  
  41b1b3:	xchg   ecx,eax
  41b1b4:	dec    ebx
  41b1b5:	pop    ebp
  41b1b6:	dec    ebx
  41b1b7:	sub    al,0xc
  41b1b9:	jnp    0x41b1b5
  41b1bb:	(bad)  
  41b1bc:	pop    eax
  41b1bd:	xchg   ebx,eax
  41b1be:	inc    esp
  41b1bf:	push   ebp
  41b1c0:	inc    ebp
  41b1c1:	adc    eax,0x500ad6e4
  41b1c6:	aad    0x60
  41b1c8:	cmp    al,0xeb
  41b1ca:	xor    DWORD PTR [ebx],edx
  41b1cc:	push   edx
  41b1cd:	iret   
  41b1ce:	loopne 0x41b1de
  41b1d0:	mov    dl,0x74
  41b1d2:	(bad)  
  41b1d3:	mov    ds:0xa0c460e4,eax
  41b1d8:	jnp    0x41b1e8
  41b1da:	cmp    eax,0xa2cc17d7
  41b1df:	xchg   esi,eax
  41b1e0:	push   esp
  41b1e1:	cmc    
  41b1e2:	and    al,0xf2
  41b1e4:	jg     0x41b1c6
  41b1e6:	or     ebp,eax
  41b1e8:	push   0x37
  41b1ea:	out    dx,eax
  41b1eb:	mov    al,ds:0x30bbc601
  41b1f0:	sahf   
  41b1f1:	hlt    
  41b1f2:	jmp    0xd91fef74
  41b1f7:	js     0x41b19a
  41b1f9:	pop    eax
  41b1fa:	ret    0x754b
  41b1fd:	or     ecx,edi
  41b1ff:	xor    esi,edx
  41b201:	cwde   
  41b202:	aas    
  41b203:	call   0x19cf:0x6aad8605
  41b20a:	sbb    al,0x2f
  41b20c:	xor    esi,DWORD PTR [edx+eiz*4-0x7]
  41b210:	lods   al,BYTE PTR ds:[esi]
  41b211:	jmp    0xeb7d:0x9834efcf
  41b218:	retf   0x424d
  41b21b:	std    
  41b21c:	inc    ecx
  41b21d:	fld    QWORD PTR [esi+0xff50e89]
  41b223:	adc    BYTE PTR [ebp-0x2c],al
  41b226:	sbb    al,0x71
  41b228:	sub    eax,0x833db2d6
  41b22d:	xchg   ecx,eax
  41b22e:	dec    esi
  41b22f:	push   edi
  41b230:	or     BYTE PTR [edx-0x21a7fc54],dl
  41b236:	jp     0x41b26a
  41b238:	aad    0x49
  41b23a:	std    
  41b23b:	jl     0x41b21f
  41b23d:	or     ah,BYTE PTR [eax]
  41b23f:	das    
  41b240:	xchg   ecx,eax
  41b241:	xchg   ebp,esi
  41b243:	mov    edx,0x9078979f
  41b248:	sar    DWORD PTR [edx],0x76
  41b24b:	adc    BYTE PTR [edi+ebp*2],dh
  41b24e:	loopne 0x41b1df
  41b250:	pop    esi
  41b251:	popa   
  41b252:	jnp    0x41b246
  41b254:	jns    0x41b1f0
  41b256:	call   0x18f32f13
  41b25b:	sub    edx,DWORD PTR ss:[esp+eax*4+0x20]
  41b260:	loope  0x41b2be
  41b262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b263:	loop   0x41b253
  41b265:	mov    ebx,0x3aa5e3e1
  41b26a:	cmp    eax,0xa22a8c5f
  41b26f:	loop   0x41b2cf
  41b271:	outs   dx,BYTE PTR ds:[esi]
  41b272:	cs (bad) 
  41b274:	or     ebx,edx
  41b276:	cmc    
  41b277:	mov    cl,0x14
  41b279:	jmp    esi
  41b27b:	jne    0x41b272
  41b27d:	loop   0x41b2a0
  41b27f:	mov    ecx,0x4413b527
  41b284:	ficom  DWORD PTR [edx+edi*2-0x7ca7aa63]
  41b28b:	push   es
  41b28c:	dec    ebx
  41b28d:	(bad)  
  41b28e:	inc    ebp
  41b28f:	add    eax,0xee8ac43f
  41b294:	arpl   WORD PTR [edx+edx*8-0xc],si
  41b298:	jle    0x41b261
  41b29a:	push   eax
  41b29b:	mov    WORD PTR [ecx+eax*8],gs
  41b29e:	cdq    
  41b29f:	popa   
  41b2a0:	fnstenv [eax-0x3a]
  41b2a3:	xor    al,0x4
  41b2a5:	je     0x41b2b3
  41b2a7:	push   ebx
  41b2a9:	or     al,0x38
  41b2ab:	mov    ds:0xcb9e0141,al
  41b2b0:	and    DWORD PTR ds:0xcfbaedb6,0x13
  41b2b7:	mov    ds:0x54696995,eax
  41b2bc:	mov    eax,ds:0x35b7c3f8
  41b2c1:	mov    ah,0xb
  41b2c3:	pop    ebp
  41b2c4:	sbb    al,0x4
  41b2c6:	test   edx,0xdab7ee0d
  41b2cc:	das    
  41b2cd:	lock inc esp
  41b2cf:	out    0x8b,al
  41b2d1:	mov    esi,0x1247cd4a
  41b2d6:	xchg   esp,eax
  41b2d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2d8:	or     BYTE PTR [ecx-0x4673f1c4],cl
  41b2de:	mov    edi,0x45d6a115
  41b2e3:	out    dx,al
  41b2e4:	sub    eax,ebp
  41b2e6:	add    BYTE PTR [eax+0x717ac42c],dh
  41b2ec:	in     al,0x90
  41b2ee:	lods   eax,DWORD PTR ds:[esi]
  41b2ef:	(bad)  
  41b2f1:	loopne 0x41b278
  41b2f3:	mov    ah,0x11
  41b2f5:	test   BYTE PTR [edx-0x7f0e1f7],ch
  41b2fb:	mov    dh,0xcc
  41b2fd:	stos   DWORD PTR es:[edi],eax
  41b2fe:	inc    ebx
  41b2ff:	cmp    eax,0x15ec099b
  41b304:	fld    TBYTE PTR [ebx]
  41b306:	rcr    DWORD PTR [ebx-0x41f821d8],1
  41b30c:	pop    ebp
  41b30d:	pusha  
  41b30e:	mov    ds:0xe54b5303,al
  41b313:	enter  0x173c,0x50
  41b317:	or     BYTE PTR [edx],bl
  41b319:	dec    esp
  41b31a:	cmp    dh,al
  41b31c:	loop   0x41b33b
  41b31e:	nop
  41b31f:	loopne 0x41b32f
  41b321:	retf   
  41b322:	inc    esp
  41b323:	push   edi
  41b324:	jl     0x41b308
  41b326:	mov    ds:0xa28859bf,eax
  41b32b:	pop    ds
  41b32c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b32d:	xchg   esp,eax
  41b32e:	in     eax,0x53
  41b330:	mov    DWORD PTR es:[ecx-0x5f96eef3],ecx
  41b337:	jns    0x41b39d
  41b339:	mov    DWORD PTR [eax+edi*8+0x5702f443],eax
  41b340:	xchg   BYTE PTR ds:0xac615c1e,ah
  41b346:	mov    al,ds:0x33f1d3f
  41b34b:	dec    edi
  41b34c:	mov    ecx,0x351334d7
  41b351:	cmp    al,0x7a
  41b353:	(bad)  
  41b355:	mov    ebx,0x4be770f3
  41b35a:	push   edx
  41b35b:	popa   
  41b35c:	inc    ebp
  41b35d:	push   ebp
  41b35e:	fcom   QWORD PTR [esi-0x7e]
  41b361:	push   ebx
  41b362:	or     eax,0x4dbbfa5c
  41b367:	retf   0xbdc4
  41b36a:	xchg   ebx,eax
  41b36b:	ret    0xd435
  41b36e:	call   0x2de2f0fe
  41b373:	xor    BYTE PTR [eax+0x2d37f77a],dh
  41b379:	adc    dl,bh
  41b37b:	cwde   
  41b37c:	push   ss
  41b37d:	or     DWORD PTR [eax+0x6bc737d3],ecx
  41b383:	imul   esi,DWORD PTR [ecx+0x28],0x93ea2e8a
  41b38a:	inc    esi
  41b38b:	ficom  WORD PTR [eax-0x6d9024b8]
  41b391:	test   BYTE PTR [eax],bh
  41b393:	push   ds
  41b394:	push   edx
  41b395:	jge    0x41b322
  41b397:	mov    al,ds:0xc8bc870a
  41b39c:	inc    ecx
  41b39d:	cmp    bh,al
  41b39f:	or     cl,BYTE PTR cs:[eax]
  41b3a2:	aam    0xb3
  41b3a4:	mov    ebp,0xd7a4a273
  41b3a9:	pop    ebp
  41b3aa:	jge    0x41b41d
  41b3ac:	dec    ecx
  41b3ad:	ins    DWORD PTR es:[edi],dx
  41b3ae:	clc    
  41b3af:	int3   
  41b3b0:	bswap  edx
  41b3b2:	cli    
  41b3b3:	and    eax,0x8e7bd08f
  41b3b8:	or     al,BYTE PTR [eax+0x5a]
  41b3bb:	jb     0x41b35a
  41b3bd:	adc    bh,BYTE PTR ds:0x76e6830e
  41b3c3:	in     eax,0x9a
  41b3c5:	cmp    edi,DWORD PTR ds:0xe7aa75de
  41b3cb:	pop    eax
  41b3cc:	stos   BYTE PTR es:[edi],al
  41b3cd:	push   cs
  41b3ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3cf:	imul   edx,DWORD PTR [esp+ecx*4],0x9718eb29
  41b3d6:	push   ebp
  41b3d7:	std    
  41b3d8:	jg     0x41b439
  41b3da:	jo     0x41b43e
  41b3dc:	xlat   BYTE PTR ss:[ebx]
  41b3de:	mov    eax,0x4fec9f76
  41b3e3:	or     ch,BYTE PTR [esi-0x60ac5c6e]
  41b3e9:	or     al,0x5c
  41b3eb:	adc    BYTE PTR [eax+0x6f1e29b2],ah
  41b3f1:	mov    al,ds:0x131fe586
  41b3f6:	jae    0x41b46a
  41b3f8:	pop    es
  41b3f9:	pop    esi
  41b3fa:	mov    al,0xe6
  41b3fc:	sub    BYTE PTR [edi],0xa8
  41b3ff:	retf   0xad73
  41b402:	sahf   
  41b403:	jb     0x41b450
  41b405:	int    0x3b
  41b407:	or     DWORD PTR [ebp-0x68],edi
  41b40a:	ds addr16 jns 0x41b399
  41b40e:	loope  0x41b40f
  41b410:	shl    DWORD PTR [edx-0x10ca312a],0xee
  41b417:	fsubr  st(6),st
  41b419:	push   edx
  41b41a:	adc    DWORD PTR ds:0x16e921c2,0x7b97dbd1
  41b424:	in     eax,dx
  41b425:	(bad)  
  41b426:	retf   
  41b427:	jg     0x41b3c4
  41b429:	cs mov cl,0x41
  41b42c:	xchg   esi,eax
  41b42d:	push   esp
  41b42e:	inc    edx
  41b42f:	adc    ebp,DWORD PTR [ebp+0x6d]
  41b432:	mov    eax,0x8ef5b10
  41b437:	ds mov ebx,fs
  41b43a:	pop    ecx
  41b43b:	imul   edx,DWORD PTR [eax],0xb99d2249
  41b441:	adc    eax,0x4e6e21ab
  41b446:	and    al,0x44
  41b448:	lds    ebp,FWORD PTR [esi+0x19]
  41b44b:	test   BYTE PTR [edx],0x54
  41b44e:	adc    eax,0xa1cfc3cc
  41b453:	(bad)  
  41b454:	add    eax,0x9bc53b96
  41b459:	push   cs
  41b45a:	sti    
  41b45b:	add    DWORD PTR [eax],0xd2a1fad3
  41b461:	(bad)  
  41b462:	push   es
  41b463:	mov    edi,0x69a6b4a7
  41b468:	or     edi,edi
  41b46a:	fdivr  DWORD PTR [edi+0x2740af23]
  41b470:	xchg   edx,eax
  41b471:	dec    esp
  41b472:	scas   al,BYTE PTR es:[edi]
  41b473:	test   DWORD PTR [eax],ebx
  41b475:	dec    edi
  41b476:	fadd   QWORD PTR [eax+ebp*4+0x3d5d1a5]
  41b47d:	pushf  
  41b47e:	adc    BYTE PTR [edi-0x528c52bb],0x3b
  41b485:	cwde   
  41b486:	jge    0x41b4dd
  41b488:	jg     0x41b446
  41b48a:	pushf  
  41b48b:	xor    edi,DWORD PTR [ebx+0x33]
  41b48e:	mov    eax,0xf458f2f9
  41b493:	pop    edi
  41b494:	mov    eax,0x3955711a
  41b499:	fwait
  41b49a:	or     bh,BYTE PTR [edi-0x673e8e0a]
  41b4a0:	(bad)  
  41b4a1:	imul   esi,eax,0xffffffa9
  41b4a4:	loop   0x41b451
  41b4a6:	mov    ecx,0xdf888bcf
  41b4ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4ac:	push   edx
  41b4ad:	sar    BYTE PTR [ebx+0xa5ae78d],0xb2
  41b4b4:	or     al,0x4c
  41b4b6:	sub    al,0x9b
  41b4b8:	and    eax,0x6a41a412
  41b4bd:	adc    DWORD PTR [eax+0x21],esi
  41b4c0:	stos   BYTE PTR es:[edi],al
  41b4c1:	mov    esi,0xbad742aa
  41b4c6:	pusha  
  41b4c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4c8:	cmp    DWORD PTR [ebp-0x51],edx
  41b4cb:	popf   
  41b4cc:	mov    ds:0xffe06555,eax
  41b4d1:	xor    eax,0x9ef96192
  41b4d6:	adc    eax,DWORD PTR [esi]
  41b4d8:	in     al,0x45
  41b4da:	dec    ecx
  41b4db:	inc    ecx
  41b4dc:	or     DWORD PTR [edi+0x20],0x35
  41b4e0:	inc    edx
  41b4e1:	shr    edi,0xed
  41b4e4:	lds    edi,FWORD PTR [edi]
  41b4e6:	jns    0x41b560
  41b4e8:	call   DWORD PTR [edx+0x2]
  41b4eb:	ins    BYTE PTR es:[edi],dx
  41b4ec:	and    eax,0x1c833cd6
  41b4f1:	sub    cl,dh
  41b4f3:	sub    eax,0xe6643c0c
  41b4f8:	mov    BYTE PTR [eax+ebp*2+0x2a],al
  41b4fc:	inc    edx
  41b4fd:	call   0x8a3a:0x6ca13289
  41b504:	mov    eax,0xf78f88d9
  41b509:	adc    ecx,DWORD PTR [esi+eiz*8-0x40]
  41b50d:	sub    eax,0x1a3157aa
  41b512:	fwait
  41b513:	ror    BYTE PTR [esi-0x53cf1760],0xdd
  41b51a:	arpl   WORD PTR [ecx-0x74a11348],bx
  41b520:	test   al,0x66
  41b522:	test   BYTE PTR ds:0x80fccafb,0xb2
  41b529:	xor    al,BYTE PTR ds:0xd3546d39
  41b52f:	xlat   BYTE PTR ds:[ebx]
  41b530:	sbb    al,0xde
  41b532:	stos   DWORD PTR es:[edi],eax
  41b533:	test   esp,esp
  41b535:	adc    ch,0x8f
  41b538:	fiadd  WORD PTR [eax-0x3d]
  41b53b:	adc    esi,DWORD PTR ss:[edi+0x61]
  41b53f:	and    ecx,DWORD PTR [ecx+0x6f]
  41b542:	xor    eax,0x98584ff1
  41b547:	mov    al,0x16
  41b549:	ficomp DWORD PTR [edx-0x7a]
  41b54c:	fs dec edx
  41b54e:	outs   dx,DWORD PTR ds:[esi]
  41b54f:	dec    ebx
  41b550:	push   ebx
  41b551:	adc    al,0xc
  41b553:	repz cmc 
  41b555:	jg     0x41b543
  41b557:	fldcw  WORD PTR [ebx]
  41b559:	ret    0x31c7
  41b55c:	pusha  
  41b55d:	enter  0xa693,0xc6
  41b561:	xchg   edi,eax
  41b562:	gs jl  0x41b4ed
  41b565:	(bad)  
  41b567:	ret    0xad96
  41b56a:	or     ebp,DWORD PTR [eax]
  41b56c:	mov    eax,ds:0x250e77be
  41b571:	icebp  
  41b572:	(bad)  
  41b573:	aad    0x9
  41b575:	sub    eax,0xba2c5e76
  41b57a:	xchg   ecx,eax
  41b57b:	pcmpeqw mm0,QWORD PTR [esi]
  41b57e:	int3   
  41b57f:	bound  esp,QWORD PTR [edi]
  41b581:	rcl    bl,cl
  41b583:	mov    al,0xcf
  41b585:	and    DWORD PTR [eax],edx
  41b587:	sbb    eax,0x42019053
  41b58c:	sbb    al,0xca
  41b58e:	mul    ah
  41b590:	mov    edi,0x52dc56bf
  41b595:	jle    0x41b561
  41b597:	je     0x41b609
  41b599:	inc    edi
  41b59a:	test   BYTE PTR [ebp+0x246d0f28],dl
  41b5a0:	jge    0x41b5a2
  41b5a2:	or     esp,DWORD PTR [ebx]
  41b5a4:	pop    ds
  41b5a5:	in     al,0x92
  41b5a7:	test   DWORD PTR [eax-0x59],edi
  41b5aa:	loope  0x41b532
  41b5ac:	stos   BYTE PTR es:[edi],al
  41b5ad:	xor    eax,0x25dd0892
  41b5b2:	xchg   ebx,eax
  41b5b3:	das    
  41b5b4:	sbb    al,0x23
  41b5b6:	dec    esp
  41b5b7:	inc    esi
  41b5b8:	adc    BYTE PTR [esi],ah
  41b5ba:	pop    ebp
  41b5bb:	inc    ebx
  41b5bc:	push   edi
  41b5bd:	icebp  
  41b5be:	mov    edx,0xf5196e11
  41b5c3:	lea    ebp,[eax-0x47c5fa51]
  41b5c9:	pop    ss
  41b5ca:	xor    DWORD PTR [esi],ebx
  41b5cc:	pop    es
  41b5cd:	pop    ds
  41b5ce:	cli    
  41b5cf:	xchg   ebp,eax
  41b5d0:	dec    esp
  41b5d1:	retf   0xbf69
  41b5d4:	call   0x367010b2
  41b5d9:	ds mov ecx,0xff604351
  41b5df:	xchg   BYTE PTR [edx+eax*1-0x7aa48908],al
  41b5e6:	sahf   
  41b5e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5e8:	pushf  
  41b5e9:	inc    ecx
  41b5ea:	ins    BYTE PTR es:[edi],dx
  41b5eb:	sbb    BYTE PTR [eax+ecx*4-0x51],bh
  41b5ef:	cwde   
  41b5f0:	dec    esi
  41b5f1:	imul   esi,esi,0x70
  41b5f4:	pushf  
  41b5f5:	pop    ss
  41b5f6:	mov    ds:0x379b2109,eax
  41b5fb:	lahf   
  41b5fc:	add    BYTE PTR [edi+0x4a],ah
  41b5ff:	pushf  
  41b600:	cmp    ecx,ebx
  41b602:	ins    BYTE PTR es:[edi],dx
  41b603:	and    ecx,ebp
  41b605:	jmp    0x1d14574d
  41b60a:	jp     0x41b686
  41b60c:	cdq    
  41b60d:	les    edx,FWORD PTR [esi+0x70]
  41b610:	add    eax,DWORD PTR [eax-0x52]
  41b613:	push   ebx
  41b614:	outs   dx,BYTE PTR ds:[esi]
  41b615:	lahf   
  41b616:	loopne 0x41b63e
  41b618:	sti    
  41b619:	daa    
  41b61a:	xchg   ebp,eax
  41b61b:	ficomp WORD PTR [ecx]
  41b61d:	sub    al,0xe2
  41b61f:	div    DWORD PTR [esi+edx*8+0x3d9314e]
  41b626:	iret   
  41b627:	je     0x41b5f9
  41b629:	ret    0x8fd4
  41b62c:	lock mov dl,0x5f
  41b62f:	jecxz  0x41b6a8
  41b631:	es pop esi
  41b633:	pop    es
  41b634:	fwait
  41b635:	sbb    BYTE PTR [ebx+esi*2-0x747cfa2a],ch
  41b63c:	repnz and ebp,DWORD PTR [edx]
  41b63f:	mov    bh,ch
  41b641:	fild   QWORD PTR [ebp-0x6b]
  41b644:	pop    edi
  41b645:	mov    WORD PTR [ebp+0x79d75d50],?
  41b64b:	inc    ecx
  41b64c:	jmp    0x57932ae8
  41b651:	push   0xeecdf321
  41b656:	mov    WORD PTR [esi],ds
  41b658:	sub    ch,BYTE PTR [esi+0x5f]
  41b65b:	push   cs
  41b65c:	fld    st(6)
  41b65e:	clc    
  41b65f:	or     esi,DWORD PTR [ebx]
  41b661:	out    dx,al
  41b662:	cdq    
  41b663:	je     0x41b6d3
  41b665:	adc    BYTE PTR [edi],ah
  41b667:	jmp    0x41b697
  41b669:	faddp  st(6),st
  41b66b:	lahf   
  41b66c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b66d:	mov    ds:0xa2cce79a,al
  41b672:	mov    eax,0x211701f8
  41b677:	loope  0x41b643
  41b679:	je     0x41b5ff
  41b67b:	xchg   edx,eax
  41b67c:	add    ecx,DWORD PTR [eax+0x67]
  41b67f:	xor    edx,0xfa865769
  41b685:	mov    dh,BYTE PTR es:[ecx-0x8]
  41b689:	sub    ebx,esp
  41b68b:	cmp    bl,ah
  41b68d:	xchg   edx,eax
  41b68e:	xchg   esi,eax
  41b68f:	adc    ch,BYTE PTR [edx-0x7cf2cb98]
  41b695:	jl     0x41b6f4
  41b697:	cdq    
  41b698:	adc    BYTE PTR [esi-0x3d4c58f0],ch
  41b69e:	mov    edi,0xa5f0427e
  41b6a3:	mov    esp,0x834e9072
  41b6a8:	push   esi
  41b6a9:	(bad)  
  41b6ab:	shufps xmm2,XMMWORD PTR [esi+0x57],0xff
  41b6b0:	cld    
  41b6b1:	cmc    
  41b6b2:	inc    esi
  41b6b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6b4:	jmp    0x41b70f
  41b6b6:	sbb    al,0xe3
  41b6b8:	adc    ah,ah
  41b6ba:	fsubr  QWORD PTR [edx+ebx*2+0x9]
  41b6be:	iret   
  41b6bf:	inc    eax
  41b6c0:	sub    dl,cl
  41b6c2:	jecxz  0x41b652
  41b6c4:	iret   
  41b6c5:	dec    ebx
  41b6c6:	in     eax,0x98
  41b6c8:	adc    dh,BYTE PTR [ebx]
  41b6ca:	add    esi,DWORD PTR [edi-0x65]
  41b6cd:	push   eax
  41b6ce:	icebp  
  41b6cf:	imul   edx,DWORD PTR [eax-0xf],0x4d319476
  41b6d6:	sub    ah,BYTE PTR [ebx+edi*8]
  41b6d9:	sub    BYTE PTR fs:[edi+edx*4],ch
  41b6dd:	adc    BYTE PTR [esi+0x1e],dl
  41b6e0:	cmp    al,dl
  41b6e2:	lods   al,BYTE PTR ds:[esi]
  41b6e3:	arpl   cx,di
  41b6e5:	sar    DWORD PTR [edx+edx*8-0x794225be],cl
  41b6ec:	mov    ebp,0xbe18d893
  41b6f1:	push   ds
  41b6f2:	xor    al,0xdd
  41b6f4:	dec    esp
  41b6f5:	jnp    0x41b74c
  41b6f7:	in     al,0x2
  41b6f9:	cmc    
  41b6fa:	call   0xf9147e7c
  41b6ff:	(bad)  
  41b700:	jns    0x41b70a
  41b702:	call   0x3462:0x620d624f
  41b709:	aas    
  41b70a:	clc    
  41b70b:	mov    al,ds:0x744e3d93
  41b710:	sbb    BYTE PTR [edx-0xe],0x40
  41b714:	mov    ebx,0x95c5cf7f
  41b719:	adc    BYTE PTR [edx],0x2
  41b71c:	mov    gs,WORD PTR [edx-0x311ca3d5]
  41b722:	call   0x23729ef2
  41b727:	push   ecx
  41b728:	lds    eax,FWORD PTR [ebx+eiz*1-0x1]
  41b72c:	cmp    esp,ebp
  41b72e:	rcl    bl,cl
  41b730:	cmp    BYTE PTR [eax],dh
  41b732:	jp     0x41b74a
  41b734:	pop    ebx
  41b735:	xor    esp,esp
  41b737:	test   eax,0x57a758cc
  41b73c:	mov    dl,0x95
  41b73e:	retf   
  41b73f:	inc    ebx
  41b740:	pop    esp
  41b741:	pop    ss
  41b742:	dec    edi
  41b743:	dec    ebp
  41b744:	jge    0x41b711
  41b746:	mov    BYTE PTR [esi],dh
  41b748:	(bad)  
  41b749:	sti    
  41b74a:	jmp    0x41b7c6
  41b74c:	pop    ebp
  41b74d:	and    BYTE PTR [edi+0x3329bac8],cl
  41b753:	test   BYTE PTR [eax+0x45e57d0],bl
  41b759:	test   DWORD PTR [esi-0x3],0x7894766c
  41b760:	lods   eax,DWORD PTR ds:[esi]
  41b761:	jmp    0x41b70e
  41b763:	call   0xb1ec:0xd7763ce2
  41b76a:	leave  
  41b76b:	mov    esp,0xd6c283
  41b770:	ins    DWORD PTR es:[edi],dx
  41b771:	push   cs
  41b772:	(bad)  
  41b773:	stos   DWORD PTR es:[edi],eax
  41b774:	or     DWORD PTR [ebp-0x5a],ebx
  41b777:	mov    ebx,0x640b87ef
  41b77c:	ds ror esi,0x85
  41b780:	pushw  cs
  41b782:	mov    edx,0x1ea23989
  41b787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b788:	aaa    
  41b789:	xor    ah,BYTE PTR [ecx]
  41b78b:	push   eax
  41b78c:	addr16 sti 
  41b78e:	rcl    DWORD PTR [edi],1
  41b790:	mov    al,0x17
  41b792:	xor    DWORD PTR ds:0x91c715f,edi
  41b798:	mov    esi,0xb6fd3ad0
  41b79d:	sar    DWORD PTR [eax],cl
  41b79f:	mov    eax,ds:0x62539b6c
  41b7a4:	fidiv  DWORD PTR [ebx+0x756e76d6]
  41b7aa:	jne    0x41b77e
  41b7ac:	out    dx,eax
  41b7ad:	pusha  
  41b7ae:	nop
  41b7af:	adc    eax,0x3bbc0527
  41b7b4:	repz ss xchg esi,eax
  41b7b7:	or     ecx,DWORD PTR [ecx-0x3ad1a357]
  41b7bd:	inc    ebx
  41b7be:	pop    esp
  41b7bf:	or     DWORD PTR [ebp-0x61],esp
  41b7c2:	outs   dx,BYTE PTR ds:[si]
  41b7c4:	dec    ecx
  41b7c5:	sbb    ah,ah
  41b7c7:	push   es
  41b7c8:	aaa    
  41b7c9:	inc    BYTE PTR [ebp+0x62075591]
  41b7cf:	mov    ebx,0x3b753c2c
  41b7d4:	sbb    al,0x9d
  41b7d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7d7:	jae    0x41b7a4
  41b7d9:	or     al,0xa
  41b7db:	sbb    ecx,ebp
  41b7dd:	and    DWORD PTR [ecx+0x0],edx
  41b7e0:	sbb    al,0xd8
  41b7e2:	xlat   BYTE PTR ds:[ebx]
  41b7e3:	pushf  
  41b7e4:	pushf  
  41b7e5:	jbe    0x821a7852
  41b7eb:	mov    cl,0x14
  41b7ed:	xor    ch,BYTE PTR [ebp-0x7e]
  41b7f0:	call   0x47638883
  41b7f5:	imul   edx,DWORD PTR [eax+0x6c45bbba],0x5b
  41b7fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7fd:	(bad)  [edi]
  41b7ff:	push   0xffffffa2
  41b801:	pop    ds
  41b802:	popf   
  41b803:	sub    DWORD PTR [ecx],ecx
  41b805:	mov    ?,edi
  41b807:	xchg   al,dh
  41b809:	sub    DWORD PTR [bp+di+0x2d],eax
  41b80d:	imul   edx,DWORD PTR gs:[edi+eiz*4],0xe
  41b812:	cmp    eax,0x28d7fcb8
  41b817:	mov    BYTE PTR [ebp+0x33fa997d],bl
  41b81d:	call   0x71c6:0xf8c53d8
  41b824:	enter  0x23e3,0xec
  41b828:	cli    
  41b829:	cmp    DWORD PTR [ecx],ebp
  41b82b:	pop    es
  41b82c:	pop    es
  41b82d:	cmp    BYTE PTR [eax],0x9a
  41b830:	push   ecx
  41b831:	push   edi
  41b832:	push   esp
  41b833:	neg    DWORD PTR [esi+0x7a]
  41b836:	jecxz  0x41b7c8
  41b838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b839:	push   ebp
  41b83a:	mov    ch,0xea
  41b83c:	mov    esi,DWORD PTR [edx+0x2a]
  41b83f:	aas    
  41b840:	stc    
  41b841:	inc    ecx
  41b842:	test   eax,0xdd8e4788
  41b847:	mov    dl,0x52
  41b849:	mov    bh,0xfa
  41b84b:	sbb    eax,0x3b60657a
  41b850:	retf   0xdf9a
  41b853:	mul    DWORD PTR [eax]
  41b855:	and    cl,cl
  41b857:	outs   dx,DWORD PTR ds:[esi]
  41b858:	mov    WORD PTR ds:[esi+ecx*4+0x2a],gs
  41b85d:	mov    dh,dl
  41b85f:	test   al,0xa0
  41b861:	and    al,0x26
  41b863:	fwait
  41b864:	mov    bh,0x5c
  41b866:	pop    edx
  41b867:	or     DWORD PTR [ecx],ebx
  41b869:	rcl    DWORD PTR [ecx],1
  41b86b:	dec    ebp
  41b86c:	mov    al,0xf1
  41b86e:	cmp    al,0xb9
  41b870:	(bad)  
  41b871:	dec    ebx
  41b872:	or     DWORD PTR [ebp-0x5a],eax
  41b875:	mov    ds:0x8468807c,eax
  41b87a:	add    BYTE PTR [ecx-0x6e],0x6f
  41b87e:	or     al,0x82
  41b880:	out    dx,eax
  41b881:	push   cs
  41b882:	out    0xda,al
  41b884:	scas   eax,DWORD PTR es:[edi]
  41b885:	jb     0x41b82a
  41b887:	js     0x41b83d
  41b889:	mov    eax,0xcaac359b
  41b88e:	xchg   edi,eax
  41b88f:	mov    bl,0x40
  41b891:	sub    DWORD PTR [ebx+0x4e],eax
  41b894:	sub    bl,cl
  41b896:	cmp    ebp,edx
  41b898:	aad    0x7b
  41b89a:	inc    ebp
  41b89b:	pusha  
  41b89c:	jmp    0x41b8a2
  41b89e:	jl     0x41b8aa
  41b8a0:	inc    esi
  41b8a1:	lea    esp,[ecx]
  41b8a3:	retf   0x3e29
  41b8a6:	iret   
  41b8a7:	dec    eax
  41b8a8:	cld    
  41b8a9:	mov    ds:0xccf64ee0,al
  41b8ae:	pop    ebp
  41b8af:	inc    edx
  41b8b0:	(bad)  
  41b8b1:	ja     0x41b876
  41b8b3:	sub    eax,DWORD PTR [esi-0x5b8431aa]
  41b8b9:	retf   
  41b8ba:	aad    0xb7
  41b8bc:	mov    esi,0xc256cdd5
  41b8c1:	push   edx
  41b8c2:	sub    eax,0xabaaa20e
  41b8c7:	cli    
  41b8c8:	jnp    0x41b92c
  41b8ca:	sahf   
  41b8cb:	addr16 mov edi,0xfde18682
  41b8d1:	push   0x26aad813
  41b8d6:	outs   dx,BYTE PTR ds:[esi]
  41b8d7:	shl    BYTE PTR [eax+0xb],0xcc
  41b8db:	(bad)  
  41b8dc:	(bad)  
  41b8dd:	cmp    esp,ebx
  41b8df:	ja     0x41b955
  41b8e1:	inc    ebp
  41b8e2:	mov    ecx,0x1e532e4f
  41b8e7:	xchg   esi,eax
  41b8e8:	adc    BYTE PTR [edi+0xf],cl
  41b8eb:	les    esp,FWORD PTR ds:0x23e1e4b0
  41b8f1:	(bad)  
  41b8f2:	cmp    DWORD PTR [edi],ebx
  41b8f4:	sti    
  41b8f5:	push   es
  41b8f6:	mov    eax,ds:0xdaca9f8c
  41b8fb:	cmp    al,0x30
  41b8fd:	mov    ebp,gs
  41b8ff:	test   esi,0x5203baba
  41b905:	mov    ah,0xcd
  41b907:	or     DWORD PTR [ecx],edx
  41b909:	imul   esp,DWORD PTR [edi],0x77
  41b90c:	or     ebx,DWORD PTR [eax+0x2e636c69]
  41b912:	push   eax
  41b913:	mov    BYTE PTR [ecx],ah
  41b915:	mov    ds:0xdbb9af82,al
  41b91a:	clc    
  41b91b:	mov    ebp,cs
  41b91d:	jmp    0xce70fe76
  41b922:	xlat   BYTE PTR ds:[ebx]
  41b923:	add    eax,0x847f0bd0
  41b928:	inc    ebx
  41b929:	test   BYTE PTR [edx],dh
  41b92b:	(bad)  
  41b92c:	imul   DWORD PTR [esi+0x13cf03a5]
  41b932:	pop    eax
  41b933:	sbb    BYTE PTR [edx-0x381370bc],0x5a
  41b93a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b93b:	jle    0x41b8e7
  41b93d:	pop    ebp
  41b93e:	js     0x41b8df
  41b940:	jmp    0x41b94a
  41b942:	adc    edx,DWORD PTR [edi-0x112b4d1]
  41b948:	cmp    edi,eax
  41b94a:	loop   0x41b98a
  41b94c:	push   ds
  41b94d:	in     eax,0xc5
  41b94f:	add    cl,BYTE PTR [ebp+0x7d]
  41b952:	inc    eax
  41b953:	sub    bh,BYTE PTR [ecx+eax*1-0x49]
  41b957:	jno    0x41b9b8
  41b959:	popa   
  41b95a:	cs in  eax,0x5e
  41b95d:	sub    esi,ebp
  41b95f:	push   ebp
  41b960:	mov    bl,0x12
  41b962:	jmp    DWORD PTR [eax+0x593ebd81]
  41b968:	lock mov bh,0x9d
  41b96b:	sbb    edx,DWORD PTR [edi+0x271edd74]
  41b971:	pop    esp
  41b972:	jae    0x41b9e7
  41b974:	loopne 0x41b9f1
  41b976:	jne    0x41b981
  41b978:	retf   
  41b979:	push   edi
  41b97a:	jbe    0x41b942
  41b97c:	pop    ecx
  41b97d:	push   edx
  41b97e:	(bad)  
  41b97f:	and    al,0x73
  41b981:	int3   
  41b982:	sbb    ecx,DWORD PTR [edx]
  41b984:	rcr    BYTE PTR [esi-0x224db9df],cl
  41b98a:	es mov ebx,0x1693c060
  41b990:	dec    edx
  41b991:	imul   ebp,DWORD PTR [ebx-0x3f],0xd35e9db1
  41b998:	pop    ebx
  41b999:	cli    
  41b99a:	sbb    BYTE PTR [edx-0x444f2103],ah
  41b9a0:	ficomp DWORD PTR [eax-0x7d875f8c]
  41b9a6:	pop    es
  41b9a7:	das    
  41b9a8:	mov    ?,ebp
  41b9aa:	inc    ebx
  41b9ab:	mov    ds:0x5f7569dd,eax
  41b9b0:	inc    esp
  41b9b1:	aas    
  41b9b2:	(bad)  
  41b9b3:	std    
  41b9b4:	cmc    
  41b9b5:	push   es
  41b9b6:	cld    
  41b9b7:	addr16 ret 0x9786
  41b9bb:	aas    
  41b9bc:	adc    BYTE PTR [ecx-0x3b2e8839],al
  41b9c2:	mov    cl,0x7f
  41b9c4:	retf   0x5569
  41b9c7:	push   DWORD PTR [ebp-0x66231481]
  41b9cd:	stc    
  41b9ce:	pushf  
  41b9cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9d0:	sub    BYTE PTR [ebx-0x12],dl
  41b9d3:	scas   al,BYTE PTR es:[edi]
  41b9d4:	xor    BYTE PTR [ebp+0x23403dee],ch
  41b9da:	cli    
  41b9db:	mov    al,0x3a
  41b9dd:	push   edi
  41b9de:	mov    bh,0xa7
  41b9e0:	cmc    
  41b9e1:	push   edx
  41b9e2:	test   al,dh
  41b9e4:	and    bl,bh
  41b9e6:	scas   al,BYTE PTR es:[edi]
  41b9e7:	xchg   ebx,eax
  41b9e8:	and    dl,bh
  41b9ea:	add    esi,ebp
  41b9ec:	or     eax,DWORD PTR [ebx+0x6502f136]
  41b9f2:	popa   
  41b9f3:	adc    dh,0xd
  41b9f6:	mov    ebp,0xa0bb4ece
  41b9fb:	nop
  41b9fc:	dec    esi
  41b9fd:	add    eax,0x5136a578
  41ba02:	sar    BYTE PTR [eax+0x77e205d8],0xa8
  41ba09:	dec    DWORD PTR [ebp-0xb76fbbd]
  41ba0f:	fwait
  41ba10:	out    0x63,eax
  41ba12:	jmp    0x868f82f4
  41ba17:	ficomp DWORD PTR [edi-0x26808ec3]
  41ba1d:	cdq    
  41ba1e:	ss jne 0x41b9fc
  41ba21:	sub    eax,0xb1138b1b
  41ba26:	call   0xcfaf:0x5d7f61d3
  41ba2d:	jg     0x41baa4
  41ba2f:	xlat   BYTE PTR ds:[ebx]
  41ba30:	gs dec eax
  41ba32:	aam    0xd2
  41ba34:	loop   0x41b9ec
  41ba36:	dec    edx
  41ba37:	rcl    bh,1
  41ba39:	dec    ecx
  41ba3a:	and    BYTE PTR [ebx-0x66],dl
  41ba3d:	mov    edi,0x98de6da8
  41ba42:	jbe    0x41ba19
  41ba44:	pop    ds
  41ba45:	xchg   DWORD PTR [esi+edx*1+0x36],ebp
  41ba49:	xor    BYTE PTR [edi+0x4c14ca02],ah
  41ba4f:	mov    ecx,0x96e248a1
  41ba54:	call   0x24a14480
  41ba59:	or     BYTE PTR [ecx+0x64],bl
  41ba5c:	inc    ebp
  41ba5d:	or     BYTE PTR [ecx-0x1c],bl
  41ba60:	pop    ebx
  41ba61:	dec    esp
  41ba62:	(bad)  [ecx+0x6ddf4b29]
  41ba68:	push   ds
  41ba69:	int    0xd6
  41ba6b:	(bad)  
  41ba6c:	xchg   edx,eax
  41ba6d:	or     eax,0x63e3567c
  41ba72:	adc    bl,bh
  41ba74:	jb     0x41ba27
  41ba76:	or     edx,0xaf8e976
  41ba7c:	int    0xaa
  41ba7e:	sti    
  41ba7f:	cwde   
  41ba80:	(bad)  
  41ba82:	push   ebp
  41ba83:	inc    edi
  41ba84:	sub    BYTE PTR [ecx+0x1701492a],bl
  41ba8a:	sbb    eax,0xa5e7b33a
  41ba8f:	sti    
  41ba90:	add    ch,dl
  41ba92:	push   ebp
  41ba93:	push   ds
  41ba94:	shl    BYTE PTR [esi-0x32baee13],0x84
  41ba9b:	pop    edx
  41ba9c:	test   al,0x76
  41ba9e:	dec    ecx
  41ba9f:	inc    edi
  41baa0:	push   esi
  41baa1:	push   eax
  41baa2:	xchg   esp,eax
  41baa3:	fstp   TBYTE PTR [ebp+0x67]
  41baa6:	xor    ch,ah
  41baa8:	sub    ebp,0xffffffce
  41baab:	dec    esp
  41baac:	and    eax,0xba2dffb8
  41bab1:	adc    BYTE PTR [edx+0x68eff7d8],bl
  41bab7:	jne    0x41ba51
  41bab9:	sub    eax,DWORD PTR [eax]
  41babb:	ja     0x41ba6b
  41babd:	cmc    
  41babe:	push   ds
  41babf:	ins    DWORD PTR es:[edi],dx
  41bac0:	or     al,0xfd
  41bac2:	xor    DWORD PTR ds:0xb46fce23,eax
  41bac8:	imul   ecx,DWORD PTR [esi],0xffffffaf
  41bacb:	enter  0x6248,0x6a
  41bacf:	add    dl,cl
  41bad1:	retf   0xc3d5
  41bad4:	lock mov eax,0x74732ba0
  41bada:	push   eax
  41badb:	push   0xe50b750f
  41bae0:	mov    ch,0xa
  41bae2:	and    ebp,ebp
  41bae4:	or     al,0x94
  41bae6:	sbb    BYTE PTR [eax],al
  41bae8:	out    dx,al
  41bae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baea:	sub    BYTE PTR gs:[eax-0x5ef37701],0xc9
  41baf2:	loop   0x41bb24
  41baf4:	retf   
  41baf5:	inc    esi
  41baf6:	pop    ss
  41baf7:	hlt    
  41baf8:	sub    al,0x69
  41bafa:	cmc    
  41bafb:	push   esp
  41bafc:	int3   
  41bafd:	stc    
  41bafe:	inc    ebx
  41baff:	dec    ecx
  41bb00:	es gs mov eax,0x61a6f9a9
  41bb07:	popa   
  41bb08:	test   al,0xf9
  41bb0a:	mov    dh,0xb6
  41bb0c:	lods   al,BYTE PTR ds:[esi]
  41bb0d:	jb     0x41bb2a
  41bb0f:	loope  0x41baa1
  41bb11:	clc    
  41bb12:	inc    ebx
  41bb13:	pop    esi
  41bb14:	retf   0x754a
  41bb17:	xor    eax,0x98c30e68
  41bb1c:	inc    ecx
  41bb1d:	inc    ebx
  41bb1e:	aad    0x35
  41bb20:	cmp    ecx,0x13349c28
  41bb26:	xchg   esi,eax
  41bb27:	ds inc edx
  41bb29:	test   eax,0x81e843e1
  41bb2e:	jns    0x41baba
  41bb30:	mov    ah,0xd8
  41bb32:	sbb    DWORD PTR [ebx-0xd],0xe43a53b7
  41bb39:	shl    DWORD PTR [edx],0x4c
  41bb3c:	(bad)  
  41bb3d:	jmp    0xcfa50568
  41bb42:	ficom  WORD PTR [esi]
  41bb44:	xor    al,0x1f
  41bb46:	jle    0x41bbb2
  41bb48:	fsub   QWORD PTR [esi+0x627eaf2f]
  41bb4e:	fist   WORD PTR ds:0x734407f6
  41bb54:	push   eax
  41bb55:	loop   0x41bbd0
  41bb57:	xchg   DWORD PTR [ecx+0x635d6711],edx
  41bb5d:	mov    BYTE PTR [ecx],bh
  41bb5f:	cli    
  41bb60:	test   al,0xcf
  41bb62:	xor    al,0x6b
  41bb64:	pop    ss
  41bb65:	std    
  41bb66:	jno    0x41bb9e
  41bb68:	jmp    0x682c98e3
  41bb6d:	push   es
  41bb6e:	inc    eax
  41bb6f:	pushf  
  41bb70:	je     0x41bb9c
  41bb72:	adc    eax,0xef59c1fb
  41bb77:	jge    0x41bbe4
  41bb79:	dec    ecx
  41bb7a:	jbe    0x41bb4c
  41bb7c:	arpl   WORD PTR [eax+eax*1+0xd],bx
  41bb80:	push   edx
  41bb81:	mov    eax,0x7df2d5be
  41bb86:	retf   
  41bb87:	and    al,0xb8
  41bb89:	inc    esp
  41bb8a:	and    eax,0xbdda4516
  41bb8f:	jo     0x41bbae
  41bb91:	cwde   
  41bb92:	add    BYTE PTR ds:0x2ad21e7b,bl
  41bb98:	jo     0x41bc19
  41bb9a:	out    dx,eax
  41bb9b:	lock lock mov esp,0xaa4789c1
  41bba2:	jae    0x41bbd3
  41bba4:	or     al,BYTE PTR [bx-0x2edd]
  41bba9:	cdq    
  41bbaa:	jne    0x41bbb5
  41bbac:	lods   al,BYTE PTR ds:[esi]
  41bbad:	lods   eax,DWORD PTR ds:[esi]
  41bbae:	call   0xc183:0xe8f3bdc4
  41bbb5:	push   0x7e
  41bbb7:	daa    
  41bbb8:	sbb    al,0x6d
  41bbba:	mov    edi,0xc3f0823a
  41bbbf:	and    edx,ebp
  41bbc1:	fadd   QWORD PTR [edx]
  41bbc3:	popa   
  41bbc4:	mov    ch,BYTE PTR [ebx]
  41bbc6:	aam    0x4d
  41bbc8:	nop
  41bbc9:	jno    0x41bb72
  41bbcb:	mov    ebx,0x4e6fa074
  41bbd0:	mov    dh,BYTE PTR [ecx+0x34]
  41bbd3:	and    ah,BYTE PTR [ebp-0x2f3008e0]
  41bbd9:	loop   0x41bc0b
  41bbdb:	loope  0x41bc51
  41bbdd:	fistp  WORD PTR [esi+0x27]
  41bbe0:	cdq    
  41bbe1:	neg    DWORD PTR ds:[esi+ebx*4-0x7c]
  41bbe6:	ret    
  41bbe7:	mov    al,BYTE PTR [edx-0x3b49d76a]
  41bbed:	(bad)  
  41bbee:	adc    al,0xb7
  41bbf0:	jmp    0x41bbbb
  41bbf2:	mov    bl,0x6b
  41bbf4:	push   es
  41bbf5:	les    edi,FWORD PTR [edx+0x273a730b]
  41bbfb:	mov    esp,0x81af0c79
  41bc00:	mov    ch,0xe1
  41bc02:	imul   eax,DWORD PTR [ebp-0x763f5718],0x83b3c8f6
  41bc0c:	aad    0xfc
  41bc0e:	retf   0x4cf7
  41bc11:	loop   0x41bc66
  41bc13:	jns    0x41bbdb
  41bc15:	mov    ds:0x587a7f8f,al
  41bc1a:	add    esp,DWORD PTR [esi]
  41bc1c:	jmp    0x16dfdacc
  41bc21:	cmp    ecx,ebx
  41bc23:	push   edi
  41bc24:	mov    bl,0x37
  41bc26:	imul   ecx,esp,0xffffffcc
  41bc29:	(bad)  
  41bc2a:	jle    0x41bc75
  41bc2c:	mov    DWORD PTR [eax+0x5e],0x765aadba
  41bc33:	or     BYTE PTR [ecx+esi*1],dl
  41bc36:	mov    al,ds:0x893d9df7
  41bc3b:	je     0x41bca2
  41bc3d:	inc    ebx
  41bc3e:	xchg   edx,eax
  41bc3f:	push   esp
  41bc40:	dec    ebx
  41bc41:	mov    ah,0x79
  41bc43:	cmp    BYTE PTR [edx],al
  41bc45:	fwait
  41bc46:	call   0x59245977
  41bc4b:	inc    ecx
  41bc4c:	cmp    bh,BYTE PTR [ecx]
  41bc4e:	mov    ds:0x3f186fd9,al
  41bc53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc54:	jecxz  0x41bc06
  41bc56:	jle    0x41bc59
  41bc58:	add    dh,bl
  41bc5a:	mov    WORD PTR [ecx-0xc],?
  41bc5d:	pop    eax
  41bc5e:	pop    edi
  41bc5f:	in     eax,0x5
  41bc61:	in     eax,dx
  41bc62:	adc    DWORD PTR [ecx+0x1fbff816],edi
  41bc68:	aad    0x23
  41bc6a:	sub    eax,0x309c6ff9
  41bc6f:	sar    DWORD PTR [eax+eax*1+0x39],cl
  41bc73:	sub    DWORD PTR [ebx+0x20],0xe3dcc611
  41bc7a:	cmp    eax,0x3d8169b5
  41bc7f:	xor    al,BYTE PTR [eax+0x70]
  41bc82:	call   0xa917:0x723910b9
  41bc89:	mov    dh,0xf3
  41bc8b:	packuswb mm2,mm0
  41bc8e:	or     bh,BYTE PTR [eax+0x72]
  41bc91:	aam    0xa0
  41bc93:	pop    ss
  41bc94:	shr    DWORD PTR [esi+0xf],cl
  41bc97:	mov    esp,DWORD PTR [edx]
  41bc99:	xlat   BYTE PTR ds:[ebx]
  41bc9a:	pusha  
  41bc9b:	lds    esi,FWORD PTR [esi-0x34]
  41bc9e:	ins    DWORD PTR es:[edi],dx
  41bc9f:	nop
  41bca0:	inc    ebp
  41bca1:	test   ah,0x66
  41bca4:	rcl    BYTE PTR [esi-0x23],1
  41bca7:	lods   eax,DWORD PTR ds:[esi]
  41bca8:	int3   
  41bca9:	push   edx
  41bcaa:	jge    0x41bc3e
  41bcac:	inc    ebx
  41bcad:	jg     0x41bcde
  41bcaf:	dec    ebx
  41bcb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcb1:	retf   
  41bcb2:	push   0x2cfd3f93
  41bcb7:	data16 das 
  41bcb9:	std    
  41bcba:	jo     0xaecab08d
  41bcc0:	xlat   BYTE PTR ds:[ebx]
  41bcc1:	push   es
  41bcc2:	pop    ecx
  41bcc3:	mov    DWORD PTR [edi-0x50],eax
  41bcc6:	and    eax,0x5f3b7ed1
  41bccb:	inc    eax
  41bccc:	iret   
  41bccd:	lock repnz aas 
  41bcd0:	jno    0x41bcd9
  41bcd2:	pop    ss
  41bcd3:	mov    bl,0xf2
  41bcd5:	pushf  
  41bcd6:	call   0x6329d7cd
  41bcdb:	cwde   
  41bcdc:	xor    cl,BYTE PTR [edx-0x45464e67]
  41bce2:	and    DWORD PTR [esi+ebx*2+0x30],esi
  41bce6:	sbb    al,BYTE PTR [edx+0x73f031ba]
  41bcec:	hlt    
  41bced:	cmp    eax,0x704656f2
  41bcf2:	rol    BYTE PTR [ecx+edi*1],0xc3
  41bcf6:	not    BYTE PTR [esi-0x5b]
  41bcf9:	aas    
  41bcfa:	push   ebp
  41bcfb:	mov    ch,0x9b
  41bcfd:	adc    DWORD PTR [ebx+0x46],0xffffffd5
  41bd01:	ret    0xe6b9
  41bd04:	jl     0x41bcf1
  41bd06:	(bad)  
  41bd07:	pop    edx
  41bd08:	push   edx
  41bd09:	in     eax,dx
  41bd0a:	nop
  41bd0b:	stc    
  41bd0c:	dec    ebx
  41bd0d:	in     eax,dx
  41bd0e:	div    DWORD PTR [edi]
  41bd10:	mov    cl,0xc2
  41bd12:	(bad)  
  41bd13:	or     al,0xde
  41bd15:	dec    esi
  41bd16:	les    edi,FWORD PTR [eax+0x1e]
  41bd19:	std    
  41bd1a:	cwde   
  41bd1b:	mov    esi,esi
  41bd1d:	push   eax
  41bd1e:	(bad)  
  41bd1f:	jae    0x41bcb6
  41bd21:	lods   eax,DWORD PTR ds:[esi]
  41bd22:	retf   0x9222
  41bd25:	dec    edi
  41bd26:	dec    ebx
  41bd27:	jno    0x41bd76
  41bd29:	cmc    
  41bd2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd2b:	nop
  41bd2c:	test   DWORD PTR [ebx+0x2a6f38b0],edx
  41bd32:	ret    
  41bd33:	in     al,0x15
  41bd35:	loop   0x41bd51
  41bd37:	(bad)  
  41bd38:	ret    0x3c96
  41bd3b:	xlat   BYTE PTR ds:[ebx]
  41bd3c:	push   ebp
  41bd3d:	lods   al,BYTE PTR ds:[esi]
  41bd3e:	mov    ch,0x95
  41bd40:	xchg   ebx,eax
  41bd41:	pop    ss
  41bd42:	jp     0x41bd07
  41bd44:	sub    DWORD PTR cs:[esi],ecx
  41bd47:	(bad)  
  41bd48:	adc    BYTE PTR [esi+0x62],dl
  41bd4b:	(bad)  
  41bd4c:	out    dx,al
  41bd4d:	aas    
  41bd4e:	bnd call 0xc9b93cbb
  41bd54:	mov    esp,0x65dcc0c7
  41bd59:	out    0xbc,eax
  41bd5b:	sub    al,0x2
  41bd5d:	xchg   BYTE PTR [ebp+esi*8-0x1a49ad2f],al
  41bd64:	add    al,0x69
  41bd66:	sar    DWORD PTR [eax-0x20b2efae],0x36
  41bd6d:	std    
  41bd6e:	cli    
  41bd6f:	mov    eax,0xf78497f6
  41bd74:	mov    ecx,DWORD PTR [edi+0x37d046b]
  41bd7a:	ins    BYTE PTR es:[edi],dx
  41bd7b:	and    BYTE PTR [eax-0x7903a096],dl
  41bd81:	test   eax,0x50899d80
  41bd86:	in     al,0x88
  41bd88:	inc    ebp
  41bd89:	iret   
  41bd8a:	pop    edi
  41bd8b:	mov    al,BYTE PTR [esi-0x12]
  41bd8e:	frstor [esi+0x22913ec1]
  41bd94:	ins    BYTE PTR es:[edi],dx
  41bd95:	or     BYTE PTR [edx+0xd],bl
  41bd98:	cwde   
  41bd99:	fcom   QWORD PTR [ecx-0x7c]
  41bd9c:	xchg   BYTE PTR [ebp+ecx*8+0x43],dl
  41bda0:	push   edi
  41bda2:	out    0x4d,al
  41bda4:	jmp    0x101b1f6c
  41bda9:	iret   
  41bdaa:	cmp    al,0xa8
  41bdac:	inc    ecx
  41bdad:	mov    ds:0xfd5e8724,al
  41bdb2:	ins    BYTE PTR es:[edi],dx
  41bdb3:	or     ecx,DWORD PTR [edx+0x7a44c88b]
  41bdb9:	inc    eax
  41bdba:	pop    edi
  41bdbb:	push   esp
  41bdbc:	mov    ds:0xfb4c7aff,al
  41bdc1:	pop    ss
  41bdc2:	call   0xcd667d7b
  41bdc7:	scas   eax,DWORD PTR es:[edi]
  41bdc8:	ror    DWORD PTR [ecx+0x4f878575],cl
  41bdce:	cmp    bl,BYTE PTR [esi+eiz*2+0x6aafbc64]
  41bdd5:	fucomip st,st(7)
  41bdd7:	pop    ss
  41bdd8:	sub    eax,DWORD PTR ds:0x2ad2cd43
  41bdde:	or     al,0xf2
  41bde0:	sbb    edi,DWORD PTR [esi-0x5c]
  41bde3:	daa    
  41bde4:	lock push 0xc4950d08
  41bdea:	ss push edi
  41bdec:	or     al,0xe0
  41bdee:	aas    
  41bdef:	sbb    eax,0xb57c3bd4
  41bdf4:	cmp    ebp,DWORD PTR [edx]
  41bdf6:	xor    ch,cl
  41bdf8:	pop    edx
  41bdf9:	sub    DWORD PTR [ecx],0x10
  41bdfc:	dec    esi
  41bdfd:	push   ecx
  41bdfe:	xchg   ecx,eax
  41bdff:	sbb    al,0x6e
  41be01:	xchg   edi,eax
  41be02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be03:	mov    cl,0x68
  41be05:	inc    eax
  41be06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be07:	inc    esp
  41be08:	jle    0x41be28
  41be0a:	xchg   edi,eax
  41be0b:	jmp    0x41be7d
  41be0d:	clc    
  41be0e:	sar    ebp,cl
  41be10:	call   FWORD PTR [esi+eiz*2+0x2db47949]
  41be17:	jmp    0x41be4f
  41be19:	xchg   BYTE PTR ds:0x26ff9fff,dh
  41be1f:	js     0x41be5f
  41be21:	xchg   ebp,eax
  41be22:	ficom  WORD PTR ds:0x904d43f1
  41be28:	jne    0x41be9e
  41be2a:	mov    ebx,0xe25b2ca8
  41be2f:	xchg   BYTE PTR [esi+0x72],bh
  41be32:	pop    es
  41be33:	mov    al,0x1
  41be35:	in     eax,dx
  41be36:	xor    ebx,ebx
  41be38:	sub    bl,ch
  41be3a:	les    ebx,FWORD PTR ds:0xbf7f538b
  41be40:	jmp    0x5237:0x64c7c98b
  41be47:	add    eax,0xed5abc61
  41be4c:	pop    es
  41be4d:	call   0x1e745a98
  41be52:	imul   ecx,ecx,0xd2b718c4
  41be58:	stc    
  41be59:	push   edi
  41be5a:	push   es
  41be5b:	sti    
  41be5c:	je     0x41bed6
  41be5e:	repz adc DWORD PTR [edx-0x3f],ebx
  41be62:	xor    al,0xfd
  41be64:	cmp    eax,0xd52b317d
  41be69:	pop    ecx
  41be6a:	mov    esi,0x1e05df92
  41be6f:	ror    edi,1
  41be71:	jl     0x41bed3
  41be73:	dec    ebp
  41be74:	out    0xb4,al
  41be76:	xchg   edx,eax
  41be77:	add    ch,BYTE PTR [eax]
  41be79:	inc    ebp
  41be7a:	aas    
  41be7b:	pop    ebp
  41be7c:	xchg   ebp,eax
  41be7d:	call   0xcbd56e5a
  41be82:	in     eax,0x4
  41be84:	aam    0x2b
  41be86:	xor    BYTE PTR [ebx],cl
  41be88:	xchg   BYTE PTR es:[edx-0x4a8f14a3],ch
  41be8f:	mov    ecx,0xb184712c
  41be94:	jbe    0x41be7a
  41be96:	or     ebp,DWORD PTR [ebp+0x5c]
  41be99:	test   eax,0xdac0f79e
  41be9e:	jnp    0x41bf12
  41bea0:	mov    esp,0xf10f8d9f
  41bea5:	xchg   ebx,eax
  41bea6:	cli    
  41bea7:	add    DWORD PTR [ebp-0x7e],ebp
  41beaa:	jno    0x41be42
  41beac:	mov    edi,0x9ae8a00a
  41beb1:	sub    edi,esp
  41beb3:	(bad)  [edx]
  41beb5:	(bad)  
  41beb6:	xor    ebp,DWORD PTR [esi-0x1]
  41beb9:	outs   dx,DWORD PTR ds:[esi]
  41beba:	lods   al,BYTE PTR ds:[esi]
  41bebb:	ret    0xc59a
  41bebe:	out    dx,al
  41bebf:	ins    DWORD PTR es:[edi],dx
  41bec0:	popa   
  41bec1:	stos   BYTE PTR es:[edi],al
  41bec2:	lods   eax,DWORD PTR ds:[esi]
  41bec3:	mov    ebx,0xfa80d3d1
  41bec8:	mov    eax,ds:0xf803e7bc
  41becd:	push   0xffffff81
  41becf:	adc    DWORD PTR [edi-0x2d7aacd3],ebp
  41bed5:	mov    bl,0x8
  41bed7:	or     BYTE PTR [esi],0x7e
  41beda:	repnz push edi
  41bedc:	sub    eax,0xe0cfe996
  41bee1:	push   edx
  41bee2:	rcl    dl,1
  41bee4:	cmp    ch,bh
  41bee6:	push   ss
  41bee7:	in     eax,0xef
  41bee9:	sub    DWORD PTR [edx+0x602125e8],esi
  41beef:	test   edx,ecx
  41bef1:	jp     0x41be8b
  41bef3:	add    al,0xe3
  41bef5:	stos   BYTE PTR es:[edi],al
  41bef6:	ins    DWORD PTR es:[edi],dx
  41bef7:	push   0x14
  41bef9:	mov    bh,0x71
  41befb:	xor    al,0xb5
  41befd:	or     bl,BYTE PTR [ecx+0x6caa35a8]
  41bf03:	pop    ebx
  41bf04:	mov    bh,dh
  41bf06:	jge    0x41be9f
  41bf08:	push   edi
  41bf09:	arpl   WORD PTR [edi+ebx*8-0x75d3f637],bx
  41bf10:	dec    edi
  41bf11:	xchg   edi,eax
  41bf12:	dec    edi
  41bf13:	sbb    DWORD PTR [eax-0x436fc78a],esp
  41bf19:	cmp    DWORD PTR [edi],eax
  41bf1b:	loopne 0x41bea9
  41bf1d:	sub    bh,BYTE PTR [ecx+0x10]
  41bf20:	and    eax,0xd0af6e73
  41bf25:	iret   
  41bf26:	xchg   BYTE PTR [esi],dl
  41bf28:	jns    0x41bfa7
  41bf2a:	imul   ecx,DWORD PTR [ecx-0x6c],0x11d2348c
  41bf31:	jns    0x41bf84
  41bf33:	dec    eax
  41bf34:	push   ebx
  41bf35:	int    0x27
  41bf37:	sub    al,0xe3
  41bf3a:	push   eax
  41bf3b:	arpl   WORD PTR es:[edx+edx*2],ax
  41bf3f:	push   ebx
  41bf40:	call   0x90e8c5eb
  41bf45:	ss jnp 0x41bf74
  41bf48:	cmp    al,0xad
  41bf4a:	arpl   WORD PTR [ecx+0x1f],cx
  41bf4d:	sbb    bl,bh
  41bf4f:	ins    BYTE PTR es:[edi],dx
  41bf50:	xchg   ebx,eax
  41bf51:	pop    es
  41bf52:	push   es
  41bf53:	loopne 0x41bee6
  41bf55:	jmp    0x4fb9:0x62dfce46
  41bf5c:	mov    dl,0x6
  41bf5e:	pusha  
  41bf5f:	das    
  41bf60:	mov    bl,0xfb
  41bf62:	dec    ecx
  41bf63:	adc    bh,BYTE PTR [ecx]
  41bf65:	sub    bl,BYTE PTR [ebx-0xfe5152b]
  41bf6b:	push   esi
  41bf6c:	dec    ecx
  41bf6d:	nop
  41bf6e:	pop    edx
  41bf6f:	(bad)  
  41bf70:	and    eax,0xaa4e7fbb
  41bf75:	ins    DWORD PTR es:[edi],dx
  41bf76:	jns    0x41bfba
  41bf78:	les    ebx,FWORD PTR [ebp-0x4eb12e3a]
  41bf7e:	call   0x8ef2:0x16303b27
  41bf85:	adc    edx,DWORD PTR [edi+0x758662e1]
  41bf8b:	outs   dx,BYTE PTR ds:[esi]
  41bf8c:	jge    0x41bf8e
  41bf8e:	std    
  41bf8f:	pop    edx
  41bf90:	adc    al,0x53
  41bf92:	(bad)  
  41bf93:	sbb    DWORD PTR [ebx],ebx
  41bf95:	into   
  41bf96:	out    0x23,eax
  41bf98:	dec    ecx
  41bf99:	(bad)  
  41bf9a:	fadd   QWORD PTR [ebx]
  41bf9c:	mov    eax,ds:0x7d459ea0
  41bfa1:	mov    ebx,0x110ce7b
  41bfa6:	mov    ebp,DWORD PTR [ebx+0x18]
  41bfa9:	in     al,0x80
  41bfab:	enter  0xf668,0x1c
  41bfaf:	mov    ah,0xb8
  41bfb1:	and    BYTE PTR [esi+0x6b],dl
  41bfb4:	and    eax,esi
  41bfb6:	rcl    BYTE PTR [ebx],1
  41bfb8:	xchg   ebx,eax
  41bfb9:	xor    eax,0xd7f8d6f9
  41bfbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfbf:	jmp    0xcf08a7f8
  41bfc4:	retf   0x98e8
  41bfc7:	ret    
  41bfc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfc9:	sbb    eax,0x917e4514
  41bfce:	xor    DWORD PTR [esp+ebx*2],ebx
  41bfd1:	das    
  41bfd2:	or     cl,BYTE PTR ds:0x2fe4b9ba
  41bfd8:	(bad)  
  41bfd9:	loope  0x41bfa1
  41bfdb:	push   cs
  41bfdc:	aam    0xda
  41bfde:	pop    ds
  41bfdf:	and    al,0x1d
  41bfe1:	int3   
  41bfe2:	stos   BYTE PTR es:[edi],al
  41bfe3:	pusha  
  41bfe4:	scas   eax,DWORD PTR es:[edi]
  41bfe5:	sub    DWORD PTR [ebp+0x6c14eb7e],esi
  41bfeb:	jnp    0x41bf78
  41bfed:	mov    DWORD PTR [ecx+0x3a],esi
  41bff0:	dec    ecx
  41bff1:	cmp    bh,ch
  41bff3:	jl     0x41c05f
  41bff5:	in     eax,dx
  41bff6:	inc    edi
  41bff7:	adc    cl,BYTE PTR [ebp-0x49ab143a]
  41bffd:	ins    DWORD PTR es:[edi],dx
  41bffe:	push   0x962622ef
  41c003:	outs   dx,BYTE PTR ds:[esi]
  41c004:	mov    dh,0x3d
  41c006:	sbb    DWORD PTR [ebx],edx
  41c008:	dec    eax
  41c009:	dec    esp
  41c00a:	push   edx
  41c00b:	dec    ebp
  41c00c:	ins    DWORD PTR es:[edi],dx
  41c00d:	bound  ebx,QWORD PTR [edx+0x6c9312d2]
  41c013:	sub    ebx,eax
  41c015:	in     eax,0xbd
  41c017:	es jg  0x41c06b
  41c01a:	jno    0x41bfad
  41c01c:	mov    ds:0x767eb6e6,eax
  41c021:	sar    DWORD PTR [edi-0x57b36c8e],1
  41c027:	cmovg  esi,DWORD PTR [edx+esi*2]
  41c02b:	fdivp  st(7),st
  41c02d:	pop    edx
  41c02e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c02f:	xor    al,0x97
  41c031:	loope  0x41c06d
  41c033:	iret   
  41c034:	mov    ebp,ss
  41c036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c037:	js     0x41bfd5
  41c039:	mov    esi,0xa29f9558
  41c03e:	call   0xeb09:0x803d940a
  41c045:	cld    
  41c046:	sub    bh,BYTE PTR [eax]
  41c048:	dec    esp
  41c049:	or     al,0x3b
  41c04b:	(bad)  
  41c04c:	push   cs
  41c04d:	cmc    
  41c04e:	cmp    al,0x9f
  41c050:	and    BYTE PTR [esi-0x9],ch
  41c053:	or     edi,esi
  41c055:	je     0x41bff5
  41c057:	in     eax,dx
  41c058:	jle    0x41bff0
  41c05a:	inc    esp
  41c05b:	mov    dl,0x4c
  41c05d:	xchg   ebx,eax
  41c05e:	add    eax,0xaafb5614
  41c063:	lds    ecx,FWORD PTR [ecx+0xe387c24]
  41c069:	ins    BYTE PTR es:[edi],dx
  41c06a:	jnp    0x41c0dd
  41c06c:	ret    
  41c06d:	cmp    eax,0x3a882fc1
  41c072:	pop    es
  41c073:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c074:	aad    0x2c
  41c076:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c077:	pop    ss
  41c078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c079:	sti    
  41c07a:	push   eax
  41c07b:	shl    DWORD PTR [eax+0x60],0x10
  41c07f:	or     ah,BYTE PTR [esi-0x73]
  41c082:	mov    WORD PTR [edi],ss
  41c084:	push   eax
  41c086:	cvtps2pd xmm6,QWORD PTR [eax+0x5b]
  41c08a:	pop    ecx
  41c08b:	cdq    
  41c08c:	call   0x2cd15df0
  41c091:	cmp    DWORD PTR [eax+ebx*1+0x691a6bd1],eax
  41c098:	mov    ebp,0xa3123661
  41c09d:	shl    BYTE PTR ds:0xc5dddc11,0x67
  41c0a4:	dec    esi
  41c0a5:	fst    DWORD PTR ds:0x43415f8f
  41c0ab:	push   0xffffff9f
  41c0ad:	inc    edi
  41c0ae:	jno    0x4572f7df
  41c0b4:	cwde   
  41c0b5:	sar    cl,cl
  41c0b7:	loopne 0x41c079
  41c0b9:	cmp    al,cl
  41c0bb:	arpl   WORD PTR [ebx+0x74],bx
  41c0be:	jecxz  0x41c12e
  41c0c0:	ds ret 0x2ff9
  41c0c4:	je     0x41c11c
  41c0c6:	cwde   
  41c0c7:	cmp    DWORD PTR [ebx+ebp*2-0x77],esi
  41c0cb:	ins    DWORD PTR es:[edi],dx
  41c0cc:	jns    0x41c0a4
  41c0ce:	xor    eax,0x9b217c74
  41c0d3:	push   edi
  41c0d4:	add    eax,DWORD PTR [ecx-0xfea9c78]
  41c0da:	out    0x7f,eax
  41c0dc:	(bad)  
  41c0dd:	(bad)  
  41c0de:	pop    edi
  41c0df:	inc    esi
  41c0e0:	retf   0x1630
  41c0e3:	ror    eax,cl
  41c0e5:	xchg   DWORD PTR [edx-0x55],ecx
  41c0e8:	sub    DWORD PTR [ebx],ebx
  41c0ea:	dec    ecx
  41c0eb:	shl    BYTE PTR [eax-0x48a0cf3f],1
  41c0f1:	loop   0x41c08b
  41c0f3:	sbb    eax,0xba180e80
  41c0f8:	ret    
  41c0f9:	inc    ebx
  41c0fa:	mov    ah,0xa6
  41c0fc:	mov    cl,0x42
  41c0fe:	cmp    cl,BYTE PTR [edx]
  41c100:	xchg   ecx,eax
  41c101:	jno    0x41c0a7
  41c103:	hlt    
  41c104:	cmp    ebp,edi
  41c106:	xchg   edi,eax
  41c107:	xlat   BYTE PTR ds:[ebx]
  41c108:	dec    esi
  41c109:	int3   
  41c10a:	sbb    edx,DWORD PTR [eax+edi*4-0x2791a138]
  41c111:	jg     0x41c14c
  41c113:	xchg   DWORD PTR [eax],edx
  41c115:	and    edx,esp
  41c117:	dec    edi
  41c118:	pop    ds
  41c119:	xor    eax,DWORD PTR [edi-0x2]
  41c11c:	sub    DWORD PTR [edx-0x73],0xffffffea
  41c120:	and    eax,ecx
  41c122:	adc    DWORD PTR [ebp-0x287657d9],esp
  41c128:	pop    ecx
  41c129:	sbb    DWORD PTR [edi],eax
  41c12b:	xchg   edi,eax
  41c12c:	addr16 iret 
  41c12e:	dec    ecx
  41c12f:	push   ecx
  41c130:	lahf   
  41c131:	or     dl,0xd5
  41c134:	cmp    ebp,DWORD PTR [ebx-0x38]
  41c137:	outs   dx,DWORD PTR ds:[esi]
  41c138:	cmp    al,0x5e
  41c13a:	adc    al,0xac
  41c13c:	pop    esp
  41c13d:	xor    al,0x1c
  41c13f:	test   DWORD PTR [eax+eax*1+0x64a7b28c],edi
  41c146:	std    
  41c147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c148:	cli    
  41c149:	mov    eax,fs:0x9379fbee
  41c14f:	ror    DWORD PTR [ebp*4+0x4fe0b64d],0xbd
  41c157:	jge    0x41c156
  41c159:	fwait
  41c15a:	push   cs
  41c15b:	xlat   BYTE PTR ds:[ebx]
  41c15c:	pusha  
  41c15d:	and    BYTE PTR [edx+edx*4-0x33735bb8],0x44
  41c165:	test   BYTE PTR [ebx-0x77e06b25],ch
  41c16b:	pop    bp
  41c16d:	xor    esp,ebx
  41c16f:	inc    esi
  41c170:	(bad)  
  41c171:	in     al,0xb5
  41c173:	or     BYTE PTR [eax],0x42
  41c176:	jmp    FWORD PTR [eax+0x0]
  41c179:	repnz fistp QWORD PTR [edx-0xcff088]
  41c181:	(bad)  [ebp+0x21]
  41c184:	inc    ecx
  41c185:	jl     0x41c143
  41c187:	cli    
  41c188:	jb     0x41c16f
  41c18a:	add    al,0x95
  41c18c:	inc    esi
  41c18d:	icebp  
  41c18e:	pop    esp
  41c18f:	inc    esp
  41c190:	or     eax,0x9e8d8d54
  41c195:	bound  edx,QWORD PTR [edx+0x34]
  41c198:	inc    ebx
  41c199:	sti    
  41c19a:	mov    bl,0xcf
  41c19c:	test   eax,esi
  41c19e:	and    al,0x77
  41c1a0:	mov    ss,ecx
  41c1a2:	xchg   edi,eax
  41c1a3:	add    eax,0xc0f084ab
  41c1a8:	xchg   edx,eax
  41c1a9:	xchg   ebx,eax
  41c1aa:	and    eax,0x2c182dda
  41c1af:	and    DWORD PTR ds:0x6fe1e118,ecx
  41c1b5:	dec    ebp
  41c1b6:	pop    eax
  41c1b7:	popa   
  41c1b8:	sbb    eax,0xa0a15ec3
  41c1bd:	imul   ecx,ebp,0x33
  41c1c0:	and    bh,bh
  41c1c2:	xchg   ecx,eax
  41c1c3:	pop    ss
  41c1c4:	mov    esp,0xcc212a2f
  41c1c9:	sar    DWORD PTR [ecx+0x63],cl
  41c1cc:	add    eax,DWORD PTR [ebx+0x87f51c7]
  41c1d2:	jnp    0x41c24a
  41c1d4:	gs and al,0xb8
  41c1d7:	jecxz  0x41c211
  41c1d9:	push   ebp
  41c1da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1db:	mul    DWORD PTR [ebx]
  41c1dd:	add    cl,BYTE PTR [eax]
  41c1df:	les    edi,FWORD PTR [ebx-0x1d]
  41c1e2:	icebp  
  41c1e3:	push   ebp
  41c1e4:	iret   
  41c1e5:	out    dx,eax
  41c1e6:	add    dh,bl
  41c1e8:	dec    esi
  41c1e9:	fld    DWORD PTR [esi+0x384b17d]
  41c1ef:	sahf   
  41c1f0:	dec    esi
  41c1f1:	jno    0x41c1b2
  41c1f3:	addr16 mov ch,0xa8
  41c1f6:	mov    esp,0x545f606a
  41c1fb:	mov    edi,0x4b4689b0
  41c200:	outs   dx,DWORD PTR ds:[esi]
  41c201:	cdq    
  41c202:	nop
  41c203:	cmc    
  41c204:	enter  0xcaf6,0x32
  41c208:	es pop edx
  41c20a:	or     ch,dl
  41c20c:	cli    
  41c20d:	mov    al,ds:0x23ddb8d1
  41c212:	(bad)  
  41c213:	mov    ebx,0xeaeac8b0
  41c218:	add    BYTE PTR [edi+0x5b],ah
  41c21b:	xlat   BYTE PTR ds:[ebx]
  41c21c:	repz or eax,0x71129013
  41c222:	mov    BYTE PTR ds:0x5a6c626a,dl
  41c228:	push   ebp
  41c229:	mov    esi,0x80994a94
  41c22e:	ss push es
  41c230:	lods   al,BYTE PTR ds:[esi]
  41c231:	std    
  41c232:	gs mov ecx,0x63ccdee0
  41c238:	enter  0x4c15,0xee
  41c23c:	mov    edi,0x796b3d5
  41c241:	clc    
  41c242:	(bad)  [edx-0x54b717c1]
  41c248:	mov    ds:0xdd17bb8f,al
  41c24d:	nop
  41c24e:	push   ebx
  41c24f:	out    0xee,eax
  41c251:	fdivp  st(2),st
  41c253:	sbb    eax,0xc51276a1
  41c258:	mov    esp,0x182214ad
  41c25d:	fisub  WORD PTR ds:0xe49c04e0
  41c263:	mov    al,0x56
  41c265:	in     eax,0xa
  41c267:	push   0x5d9fbc7b
  41c26c:	xor    al,0xc8
  41c26e:	xor    al,0x41
  41c270:	rol    DWORD PTR [ecx+0x77],0x10
  41c274:	mov    ebx,0xa1896b10
  41c279:	div    DWORD PTR [edi-0x7aadc895]
  41c27f:	fisubr WORD PTR [edi+0x8b1f9d0]
  41c285:	push   ds
  41c286:	dec    edx
  41c287:	mov    ds:0xdf0bf5c7,al
  41c28c:	mov    dh,0x15
  41c28e:	leave  
  41c28f:	mov    edx,0x6ac4298a
  41c294:	mov    DWORD PTR [ecx+0x2626daa2],eax
  41c29a:	xor    ebp,ebp
  41c29c:	int    0x5
  41c29e:	xor    eax,0xab56151a
  41c2a3:	or     ecx,ebp
  41c2a5:	sbb    BYTE PTR [edx+0x410b29b6],dl
  41c2ab:	push   0x21
  41c2ad:	shl    DWORD PTR [eax+0x5a544851],0x6b
  41c2b4:	std    
  41c2b5:	test   esp,0xa12f8530
  41c2bb:	fstp   DWORD PTR [ebx-0x69271f3c]
  41c2c1:	sub    eax,0xe9586028
  41c2c6:	and    eax,0x674e8fe5
  41c2cb:	xchg   edx,eax
  41c2cc:	out    dx,eax
  41c2cd:	repz xchg ebp,eax
  41c2cf:	cli    
  41c2d0:	mov    edx,0x9742787d
  41c2d5:	cmc    
  41c2d6:	add    al,0x18
  41c2d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2d9:	mov    al,0x65
  41c2db:	xor    ch,cl
  41c2dd:	inc    esp
  41c2de:	xchg   BYTE PTR [eax-0x21c20216],dh
  41c2e4:	cmp    dh,BYTE PTR [esi-0x1f147326]
  41c2ea:	cmp    cl,dh
  41c2ec:	and    BYTE PTR [edx+0x41],0x10
  41c2f0:	mov    cl,0x29
  41c2f2:	and    ebx,DWORD PTR ds:[ebx+0x43774365]
  41c2f9:	retf   0xd133
  41c2fc:	stos   BYTE PTR es:[edi],al
  41c2fd:	gs push ebp
  41c2ff:	shr    DWORD PTR [esi+0x64e90a8c],0x1a
  41c306:	and    DWORD PTR [edi+0x78],0x7d77ad27
  41c30d:	or     eax,0x605bfd23
  41c312:	int    0x65
  41c314:	push   esi
  41c315:	xor    dl,BYTE PTR [ebp+0x6b23d7ef]
  41c31b:	xchg   DWORD PTR [esi+0x59],esi
  41c31e:	test   al,0x3d
  41c320:	leave  
  41c321:	dec    edi
  41c322:	rep outs dx,DWORD PTR ds:[esi]
  41c324:	push   ecx
  41c325:	mov    ds:0x842a0c09,eax
  41c32a:	push   ss
  41c32b:	mov    ecx,0x5931357b
  41c330:	sbb    BYTE PTR [edx+0x37c8c2a6],dh
  41c336:	test   BYTE PTR [ebp+0x7fd51117],bh
  41c33c:	hlt    
  41c33d:	and    eax,0x9eb02a9d
  41c342:	jge    0x41c314
  41c344:	jmp    0x1a78:0x76e4df1a
  41c34b:	dec    bx
  41c34d:	jno    0x41c332
  41c34f:	jb     0x41c351
  41c351:	or     BYTE PTR [edi+0x33],al
  41c354:	mov    ebx,0x11f5f6f8
  41c359:	or     ah,BYTE PTR [ebx]
  41c35b:	xor    DWORD PTR [esi],0x1e
  41c35e:	mov    ah,0xfa
  41c360:	mov    gs,WORD PTR [ebx+ebp*8]
  41c363:	(bad)  
  41c365:	jb     0x41c3b0
  41c367:	(bad)
  41c36a:	popf   
  41c36b:	jg     0x41c348
  41c36d:	bound  ecx,QWORD PTR [edx]
  41c36f:	dec    ecx
  41c370:	mov    esi,0x349ac26d
  41c375:	imul   edi,DWORD PTR [ecx+ebp*2-0xa],0x72b6aedd
  41c37d:	mov    ebp,DWORD PTR [ecx+0xe]
  41c380:	cmp    DWORD PTR [edi],ebx
  41c382:	bound  edx,QWORD PTR cs:[esi]
  41c385:	ds dec edi
  41c387:	or     BYTE PTR [esi-0x80],0x7b
  41c38b:	int3   
  41c38c:	out    dx,eax
  41c38d:	adc    edx,edx
  41c38f:	sub    DWORD PTR [ebp+ecx*1-0x5c79294c],0x25
  41c397:	jmp    0x41c3cb
  41c399:	jae    0x41c3ec
  41c39b:	inc    edi
  41c39c:	fisubr WORD PTR [edx+ebx*1-0x6f]
  41c3a0:	add    DWORD PTR [ebp+eiz*8-0x1189976f],eax
  41c3a7:	call   0xb69e2d65
  41c3ac:	pop    ebp
  41c3ad:	sbb    DWORD PTR [edx+0x779ee1dd],ecx
  41c3b3:	push   esp
  41c3b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3b5:	push   eax
  41c3b6:	pop    ds
  41c3b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3b8:	test   eax,0x93a05ad8
  41c3bd:	jmp    0xc6e2:0x622febf9
  41c3c4:	call   0x1a49763c
  41c3c9:	cmp    BYTE PTR [edx+0x5465a9f8],al
  41c3cf:	mov    dh,0x63
  41c3d1:	je     0x41c3d8
  41c3d3:	lahf   
  41c3d4:	inc    ebx
  41c3d5:	jo     0x41c35e
  41c3d7:	popa   
  41c3d8:	jmp    0x581e8786
  41c3dd:	rcl    DWORD PTR [ebx+eiz*4],0xd0
  41c3e1:	je     0x41c431
  41c3e3:	mov    cl,0x4
  41c3e5:	fild   QWORD PTR [ebx+0x39cef6aa]
  41c3eb:	xchg   ebx,eax
  41c3ec:	push   esi
  41c3ed:	xor    eax,0x814a8659
  41c3f2:	lea    ebx,[ebp+edi*1-0x3a05b823]
  41c3f9:	jbe    0x41c3ad
  41c3fb:	fnstsw WORD PTR [edx]
  41c3fd:	or     eax,0x3e79ea48
  41c402:	lds    ebx,FWORD PTR [edx]
  41c404:	inc    eax
  41c405:	jle    0x41c3e1
  41c407:	test   al,0x14
  41c409:	jg     0x41c456
  41c40b:	outs   dx,BYTE PTR ds:[esi]
  41c40c:	pop    ds
  41c40d:	aaa    
  41c40e:	jo     0x41c41d
  41c410:	nop
  41c411:	nop
  41c412:	mov    es,WORD PTR [ecx]
  41c414:	xor    eax,0x2afd4f07
  41c419:	dec    edx
  41c41a:	pop    edi
  41c41b:	sub    ebp,eax
  41c41d:	mov    dl,0x6a
  41c41f:	cld    
  41c420:	jb     0x41c3a7
  41c422:	popa   
  41c423:	out    0x11,al
  41c425:	loop   0x41c404
  41c427:	cdq    
  41c428:	das    
  41c429:	jecxz  0x41c496
  41c42b:	sbb    dl,BYTE PTR [edi]
  41c42d:	and    BYTE PTR [ebp-0x72d07b75],ah
  41c433:	sbb    dh,ah
  41c435:	mov    bh,0xa9
  41c437:	ins    DWORD PTR es:[edi],dx
  41c438:	jecxz  0x41c417
  41c43a:	push   ebp
  41c43b:	jae    0x41c495
  41c43d:	mov    ecx,0x57072b02
  41c442:	out    dx,al
  41c443:	ds push esi
  41c445:	pop    ebx
  41c446:	jmp    0xe308:0x8c414a00
  41c44d:	inc    esp
  41c44e:	inc    esi
  41c44f:	fdiv   DWORD PTR [esi-0x1a]
  41c452:	sub    al,0x86
  41c454:	or     bl,BYTE PTR [ecx-0x38]
  41c457:	or     esi,DWORD PTR [esi+0x1d]
  41c45a:	sbb    al,0x6d
  41c45c:	xchg   ebx,eax
  41c45d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c45e:	pop    DWORD PTR [ecx+0x36]
  41c461:	sar    dl,1
  41c463:	clc    
  41c464:	jp     0x41c3ea
  41c466:	push   esp
  41c467:	ret    0xa98f
  41c46a:	ds xchg edi,eax
  41c46c:	inc    esp
  41c46d:	in     eax,dx
  41c46e:	xchg   edx,eax
  41c46f:	or     ebp,DWORD PTR ds:0xc6f64db5
  41c475:	pop    ebx
  41c476:	mov    al,0xb4
  41c478:	out    dx,eax
  41c479:	and    edx,DWORD PTR [ebx]
  41c47b:	scas   al,BYTE PTR es:[edi]
  41c47c:	sbb    DWORD PTR [esi],0xda563095
  41c482:	xor    al,BYTE PTR [edx+edx*2]
  41c485:	xlat   BYTE PTR ds:[ebx]
  41c486:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c487:	mov    edi,0xd09646bf
  41c48c:	imul   ebx,edi,0x39acca68
  41c492:	inc    ebp
  41c493:	push   cs
  41c494:	ret    0x540e
  41c497:	imul   ecx,DWORD PTR [esi],0x644ab4f0
  41c49d:	cwde   
  41c49e:	out    0x38,al
  41c4a0:	outs   dx,DWORD PTR ds:[esi]
  41c4a1:	push   ecx
  41c4a2:	mov    bl,0xf2
  41c4a4:	push   edx
  41c4a5:	das    
  41c4a6:	mov    al,0xc6
  41c4a8:	cmpps  xmm2,XMMWORD PTR [ebx],0x53
  41c4ac:	jno    0x41c521
  41c4ae:	cdq    
  41c4af:	sub    ch,BYTE PTR [edx+0x456f43d]
  41c4b5:	push   es
  41c4b6:	sar    BYTE PTR [edx+eiz*2-0x3ea9f0e8],cl
  41c4bd:	std    
  41c4be:	test   bl,0x22
  41c4c1:	inc    eax
  41c4c2:	fwait
  41c4c3:	dec    ebx
  41c4c4:	(bad)  
  41c4c5:	arpl   WORD PTR [ebp-0x4],si
  41c4c8:	shl    DWORD PTR [edx-0x78884d57],cl
  41c4ce:	mov    ah,0xec
  41c4d0:	imul   ebp,DWORD PTR [ecx],0x92e6e1c7
  41c4d6:	test   DWORD PTR [ebx-0x59],edi
  41c4d9:	dec    edx
  41c4da:	sub    DWORD PTR [eax+0x11],ebx
  41c4dd:	fisubr DWORD PTR [edi-0x46]
  41c4e0:	jg     0x41c48f
  41c4e2:	mov    esp,0x713b946e
  41c4e7:	pop    edx
  41c4e8:	mov    edi,0x4eca488
  41c4ed:	sbb    BYTE PTR [esi],0xa4
  41c4f0:	test   BYTE PTR [ebx+0x63],al
  41c4f3:	xchg   edi,eax
  41c4f4:	fst    st(4)
  41c4f6:	add    al,0xf2
  41c4f8:	inc    esi
  41c4f9:	int3   
  41c4fa:	cmp    edi,0xffffffb2
  41c4fd:	xchg   DWORD PTR [esi+0x5711c1],ecx
  41c503:	hlt    
  41c504:	adc    eax,0xb27020f7
  41c509:	push   cs
  41c50a:	call   0x7512:0x85d0924d
  41c511:	fild   DWORD PTR [edx]
  41c513:	stc    
  41c514:	or     BYTE PTR [esi],al
  41c516:	in     eax,dx
  41c517:	out    0xd1,eax
  41c519:	sbb    al,0xb
  41c51b:	jno    0x41c4f2
  41c51d:	ret    0x1d8e
  41c520:	jns    0x41c4d2
  41c522:	jbe    0x41c59a
  41c524:	clc    
  41c525:	js     0x41c505
  41c527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c528:	(bad)  
  41c529:	loop   0x41c4b9
  41c52b:	dec    edi
  41c52c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c52d:	imul   ecx,DWORD PTR [esi],0x3e
  41c530:	gs sub eax,0x3449b306
  41c536:	and    ah,BYTE PTR [edx]
  41c538:	inc    ecx
  41c539:	inc    ecx
  41c53a:	jno    0x41c56a
  41c53c:	mov    edi,0x27558c57
  41c541:	sub    al,0xe1
  41c543:	pop    edi
  41c544:	add    bh,0xec
  41c547:	adc    eax,0x5e4f4940
  41c54c:	xchg   esi,eax
  41c54d:	cmp    ecx,ebp
  41c54f:	push   eax
  41c550:	aas    
  41c551:	mov    dl,0x95
  41c553:	shr    DWORD PTR [ebx],1
  41c555:	and    bh,BYTE PTR [ebx-0x33]
  41c558:	imul   eax,ecx,0x3025b402
  41c55e:	or     bl,BYTE PTR [edi+eiz*4+0xb]
  41c562:	mov    bh,0xc2
  41c564:	adc    al,0xb7
  41c566:	out    0xaa,eax
  41c568:	mov    DWORD PTR ds:0x83a5e35d,0xb03a16ab
  41c572:	sbb    BYTE PTR [ebp+0x3187816e],al
  41c578:	inc    ebx
  41c579:	scas   al,BYTE PTR es:[edi]
  41c57a:	shl    BYTE PTR [ecx+ecx*2-0x33d7733a],cl
  41c581:	leave  
  41c582:	or     bh,ch
  41c584:	lock sbb al,0xb8
  41c587:	adc    al,0x11
  41c589:	ss in  al,0xa5
  41c58c:	int3   
  41c58d:	xor    eax,ebp
  41c58f:	clc    
  41c590:	jae    0x41c5ee
  41c592:	and    ebx,esp
  41c594:	retf   
  41c595:	cli    
  41c596:	loope  0x41c5a9
  41c598:	pop    esi
  41c599:	push   edi
  41c59a:	push   ecx
  41c59b:	push   es
  41c59c:	call   0x9dd89e38
  41c5a1:	addr16 add BYTE PTR [bx+di-0x2ac],cl
  41c5a7:	pop    ds
  41c5a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5a9:	sahf   
  41c5aa:	xor    DWORD PTR [ecx],0xe74ce009
  41c5b0:	push   0xa6969d19
  41c5b5:	or     al,0x63
  41c5b7:	lds    esi,FWORD PTR [edx+edx*4-0x19]
  41c5bb:	xor    DWORD PTR [edi],eax
  41c5bd:	push   ebp
  41c5be:	add    eax,0x57a5499f
  41c5c3:	push   edi
  41c5c4:	pop    ds
  41c5c5:	cmc    
  41c5c6:	aas    
  41c5c7:	jnp    0x41c608
  41c5c9:	add    DWORD PTR [esi],ecx
  41c5cb:	xor    ebx,DWORD PTR [ebp+0x61]
  41c5ce:	fisubr WORD PTR [ecx-0x15]
  41c5d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5d2:	clc    
  41c5d3:	pop    edx
  41c5d4:	jns    0x41c626
  41c5d6:	stos   DWORD PTR es:[edi],eax
  41c5d7:	adc    eax,DWORD PTR [eax]
  41c5d9:	pushf  
  41c5da:	inc    esi
  41c5db:	adc    eax,0xf75cd4c
  41c5e0:	add    eax,ebx
  41c5e2:	mov    ebp,0xc0d0f138
  41c5e7:	mov    cl,0x1f
  41c5e9:	jle    0x41c5f0
  41c5eb:	mov    dl,0x55
  41c5ed:	mov    dh,0x9e
  41c5ef:	out    0x5c,eax
  41c5f1:	jmp    0x3dac:0xe7bce57c
  41c5f8:	outs   dx,DWORD PTR ds:[esi]
  41c5f9:	xchg   esi,eax
  41c5fa:	arpl   WORD PTR [edx+0x5a5d04e9],cx
  41c600:	mov    esp,0xe33aad46
  41c605:	ins    BYTE PTR es:[edi],dx
  41c606:	mov    edx,0x7adf3708
  41c60b:	aad    0xdd
  41c60d:	cld    
  41c60e:	add    cl,BYTE PTR [esi+eiz*2+0x5d2216fd]
  41c615:	mov    ch,0xe1
  41c617:	jb     0x41c5c7
  41c619:	inc    ebx
  41c61a:	aad    0x23
  41c61c:	call   0x85f2893a
  41c621:	jnp    0x41c61a
  41c623:	xchg   edi,eax
  41c624:	sbb    al,0x31
  41c626:	mov    esp,0x606b5ed1
  41c62b:	inc    edx
  41c62c:	and    ebx,esi
  41c62e:	aaa    
  41c62f:	mov    ebp,0xedcdeb00
  41c634:	inc    ecx
  41c635:	outs   dx,BYTE PTR ds:[esi]
  41c636:	sbb    esp,DWORD PTR [eax-0x49adafef]
  41c63c:	in     al,0xb8
  41c63e:	cli    
  41c63f:	mov    bl,0xac
  41c641:	in     eax,dx
  41c642:	data16 ss mov al,0x60
  41c646:	xchg   BYTE PTR [eax+edi*2],al
  41c649:	out    dx,al
  41c64a:	ins    DWORD PTR es:[edi],dx
  41c64b:	cmp    ah,dh
  41c64d:	in     eax,0x80
  41c64f:	push   ss
  41c650:	repnz cmp al,0x69
  41c653:	cs jp  0x41c652
  41c656:	xchg   ebp,eax
  41c657:	fwait
  41c658:	jns    0x41c6b3
  41c65a:	in     eax,dx
  41c65b:	and    eax,0xebaf2387
  41c660:	mov    BYTE PTR [ebx+0x71],al
  41c663:	inc    edi
  41c664:	(bad)  
  41c666:	inc    ebx
  41c667:	pop    DWORD PTR [edx+0x1dbd1daa]
  41c66d:	dec    esp
  41c66e:	(bad)  
  41c66f:	mov    cl,0x35
  41c671:	mov    bh,0xdf
  41c673:	mov    ebp,0x561012ee
  41c678:	in     al,0x43
  41c67a:	sti    
  41c67b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c67c:	mov    ?,edx
  41c67e:	popa   
  41c67f:	sti    
  41c680:	push   ds
  41c681:	fsubp  st(5),st
  41c683:	xchg   ebp,eax
  41c684:	dec    esi
  41c685:	mov    ds:0x4fe83210,al
  41c68a:	jle    0x41c681
  41c68c:	ins    DWORD PTR es:[edi],dx
  41c68d:	lds    eax,FWORD PTR [ebx+edi*4+0x70]
  41c691:	rcr    BYTE PTR [ecx],cl
  41c693:	icebp  
  41c694:	jg     0x41c68f
  41c696:	jbe    0x41c663
  41c698:	dec    ecx
  41c699:	(bad)  
  41c69a:	in     al,dx
  41c69b:	or     ecx,DWORD PTR [esi+0x56]
  41c69e:	cmp    cl,0x4b
  41c6a1:	mov    ecx,?
  41c6a3:	pop    ebx
  41c6a4:	in     al,dx
  41c6a5:	ss xchg esp,eax
  41c6a7:	dec    ecx
  41c6a8:	pop    ecx
  41c6a9:	test   BYTE PTR [edi],0x7e
  41c6ac:	jnp    0x41c699
  41c6ae:	pusha  
  41c6af:	sbb    al,0xb6
  41c6b1:	bound  edx,QWORD PTR [ebp-0x683eeb20]
  41c6b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6b8:	mov    ?,WORD PTR [esi-0x7de3b5d4]
  41c6be:	fild   WORD PTR [edi+0x19]
  41c6c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6c2:	add    edx,DWORD PTR [eax+eiz*2-0x7a7d35a4]
  41c6c9:	(bad)  
  41c6ca:	std    
  41c6cb:	popa   
  41c6cc:	push   ecx
  41c6cd:	outs   dx,DWORD PTR ds:[esi]
  41c6ce:	jmp    0x41c677
  41c6d0:	push   ds
  41c6d1:	adc    al,0x16
  41c6d3:	pop    DWORD PTR [ebx+0x76]
  41c6d6:	jns    0x41c6e4
  41c6d8:	push   0xe7b8672a
  41c6dd:	das    
  41c6de:	cmp    eax,DWORD PTR [edx+0x6ff8fdb1]
  41c6e4:	cmp    eax,eax
  41c6e6:	ins    BYTE PTR es:[edi],dx
  41c6e7:	mov    es:0x284a08c9,al
  41c6ed:	dec    ebp
  41c6ee:	leave  
  41c6ef:	jmp    0x2deb650a
  41c6f4:	pop    esi
  41c6f5:	mov    esp,0x39c29dee
  41c6fa:	repnz fistp WORD PTR [edx]
  41c6fd:	or     DWORD PTR [ebp+0x36],ebx
  41c700:	inc    ecx
  41c701:	je     0x41c6a4
  41c703:	nop
  41c704:	outs   dx,BYTE PTR ds:[esi]
  41c705:	sbb    DWORD PTR [ecx],edi
  41c707:	test   DWORD PTR ss:[ecx-0x72beb5e6],esi
  41c70e:	add    eax,0x8a9c50c6
  41c713:	add    cl,BYTE PTR [esi-0x18089fa0]
  41c719:	nop
  41c71a:	add    BYTE PTR [esi-0x148c7152],bl
  41c720:	dec    ebp
  41c721:	lods   eax,DWORD PTR ds:[esi]
  41c722:	iret   
  41c723:	jl     0x41c76b
  41c725:	add    DWORD PTR [edi+0x16578523],eax
  41c72b:	dec    edi
  41c72c:	adc    BYTE PTR [esi+0x1c1d3644],ah
  41c732:	xchg   edi,eax
  41c733:	pop    esp
  41c734:	clc    
  41c735:	(bad)  
  41c736:	std    
  41c737:	sub    bh,BYTE PTR [ebx+0x4d897078]
  41c73d:	dec    esp
  41c73e:	sub    al,0x21
  41c740:	mov    ds:0x10430fbf,al
  41c745:	in     al,dx
  41c746:	repz je 0x41c6e6
  41c749:	adc    BYTE PTR [ecx],bl
  41c74b:	and    eax,0x9fd9534
  41c750:	aaa    
  41c751:	pop    ds
  41c752:	test   al,0xc6
  41c754:	mov    al,0x22
  41c756:	pusha  
  41c757:	push   esi
  41c758:	retf   
  41c759:	mov    dl,BYTE PTR [edi-0x830d885]
  41c75f:	push   edx
  41c760:	cwde   
  41c761:	pop    ebp
  41c762:	jno    0x41c779
  41c764:	mov    ds:0x22fd0fe9,eax
  41c769:	fld    QWORD PTR [ebx-0x21]
  41c76c:	push   es
  41c76d:	in     eax,0xdc
  41c76f:	xchg   esp,eax
  41c770:	fld    TBYTE PTR [eax+0x59]
  41c773:	(bad)  
  41c774:	repz mov al,BYTE PTR [eax]
  41c777:	jb     0x41c799
  41c779:	js     0x41c715
  41c77b:	arpl   WORD PTR [ebp-0x2a],bp
  41c77e:	and    esp,DWORD PTR [edi-0x7f1e9875]
  41c784:	xchg   BYTE PTR [esi],bl
  41c786:	cwde   
  41c787:	imul   ebx,DWORD PTR [ebx-0x6c659ee7],0xffffff8f
  41c78e:	lods   al,BYTE PTR ds:[esi]
  41c78f:	cli    
  41c790:	mov    cl,BYTE PTR [edi-0x73]
  41c793:	addr16 mov bh,0xe1
  41c796:	adc    BYTE PTR [esi-0x750a30dd],ah
  41c79c:	jne    0x41c753
  41c79e:	inc    esp
  41c79f:	sub    BYTE PTR [edi],ch
  41c7a1:	popf   
  41c7a2:	inc    edi
  41c7a3:	jmp    0x41c821
  41c7a5:	leave  
  41c7a6:	(bad)  
  41c7a7:	loopne 0x41c7a2
  41c7a9:	mov    bh,0xa5
  41c7ab:	repnz fwait
  41c7ad:	jnp    0x41c805
  41c7af:	popa   
  41c7b0:	mov    ah,0x25
  41c7b2:	mov    esi,0xba0cd71
  41c7b7:	push   ss
  41c7b8:	mov    bh,0x86
  41c7ba:	push   edx
  41c7bb:	dec    esi
  41c7bc:	inc    eax
  41c7bd:	pop    eax
  41c7be:	push   esp
  41c7bf:	call   0xfcc8:0xe90f9f48
  41c7c6:	jle    0x41c75f
  41c7c8:	add    eax,0xb1b69df3
  41c7cd:	dec    ebp
  41c7ce:	fstp   DWORD PTR [eax-0x5d760a34]
  41c7d4:	xchg   ebx,eax
  41c7d5:	jae    0x41c81c
  41c7d7:	sbb    al,0x6a
  41c7d9:	xchg   edi,eax
  41c7da:	mov    ebx,0xafec151e
  41c7df:	popa   
  41c7e0:	out    0x5c,al
  41c7e2:	xadd   BYTE PTR [edi],cl
  41c7e5:	jge    0x41c831
  41c7e7:	pop    esp
  41c7e8:	fabs   
  41c7ea:	in     al,dx
  41c7eb:	repnz and cl,ah
  41c7ee:	lods   al,BYTE PTR ds:[esi]
  41c7ef:	sti    
  41c7f0:	and    BYTE PTR [eax+0x4ca146a0],dl
  41c7f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7f7:	push   es
  41c7f8:	test   al,0x43
  41c7fa:	(bad)  
  41c7fb:	pop    eax
  41c7fc:	shl    BYTE PTR [ebp-0x78],0xe6
  41c800:	mov    ah,0x88
  41c802:	int3   
  41c803:	and    eax,0xfaa98089
  41c808:	inc    ecx
  41c809:	jns    0x41c7df
  41c80b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41c80d:	jb     0x41c7d3
  41c80f:	and    DWORD PTR [edx-0x3749f8e3],ebp
  41c815:	jecxz  0x41c870
  41c817:	fisub  DWORD PTR [eax]
  41c819:	into   
  41c81a:	retf   
  41c81b:	and    cl,0xd0
  41c81e:	dec    ecx
  41c81f:	push   0xfffffff8
  41c821:	popf   
  41c822:	dec    ecx
  41c823:	pop    ss
  41c824:	push   cs
  41c825:	jae    0x41c879
  41c827:	xchg   edx,eax
  41c828:	cmc    
  41c829:	lods   al,BYTE PTR ds:[esi]
  41c82a:	xchg   esi,eax
  41c82b:	hlt    
  41c82c:	jns    0x41c87a
  41c82e:	cs aaa 
  41c830:	add    eax,0x4b034be3
  41c835:	jnp    0x41c7f6
  41c837:	std    
  41c838:	das    
  41c839:	out    dx,eax
  41c83a:	rol    DWORD PTR [edi+0x2d],1
  41c83d:	fnsave [edi]
  41c83f:	or     al,0xf2
  41c841:	pop    ds
  41c842:	jmp    0xccf7:0xbd7ec2f7
  41c849:	xchg   edi,eax
  41c84a:	ja     0x41c851
  41c84c:	out    0x39,eax
  41c84e:	or     DWORD PTR [eax-0x7b],edi
  41c851:	std    
  41c852:	xor    DWORD PTR [eax-0x408cac2c],esp
  41c858:	fbld   TBYTE PTR [edi+ebp*8-0x5c]
  41c85c:	loop   0x41c7e1
  41c85e:	popa   
  41c85f:	and    al,0xa8
  41c861:	leave  
  41c862:	xchg   edi,eax
  41c863:	sub    dl,BYTE PTR [edx-0xc06bec0]
  41c869:	xchg   esp,eax
  41c86a:	rcl    bl,0x1
  41c86d:	push   esp
  41c86e:	not    DWORD PTR [edx+edi*8-0x3f]
  41c872:	lods   eax,DWORD PTR ds:[esi]
  41c873:	pop    ebp
  41c874:	arpl   WORD PTR [ecx*4+0x357a6cf2],bx
  41c87b:	mov    ch,0x53
  41c87d:	fdivrp st(1),st
  41c87f:	xor    al,0x1b
  41c881:	loopne 0x41c80a
  41c883:	mov    gs,ebx
  41c885:	out    0xd,al
  41c887:	mov    WORD PTR [ebx+0x26afb887],ds
  41c88d:	inc    esi
  41c88e:	(bad)  
  41c88f:	fucomi st,st(3)
  41c891:	xchg   ebp,eax
  41c892:	xor    edi,DWORD PTR [ebp-0x45]
  41c895:	int3   
  41c896:	mov    DWORD PTR [esi+ecx*2],esp
  41c899:	fsubr  QWORD PTR [eax*4+0x1d7c079b]
  41c8a0:	iret   
  41c8a1:	pop    esp
  41c8a2:	outs   dx,BYTE PTR ds:[esi]
  41c8a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8a4:	xor    al,BYTE PTR [ebp+0x5b47db61]
  41c8aa:	inc    edx
  41c8ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8ac:	pop    esi
  41c8ad:	(bad)  
  41c8ae:	sbb    eax,0x2a676519
  41c8b3:	fs jmp 0xa6497266
  41c8b9:	jb     0x41c84b
  41c8bb:	aam    0x95
  41c8bd:	clc    
  41c8be:	xchg   esi,eax
  41c8bf:	pusha  
  41c8c0:	and    al,dh
  41c8c2:	sbb    ecx,DWORD PTR [ebp+0x8149684]
  41c8c8:	es xchg ebp,eax
  41c8ca:	add    dh,bl
  41c8cc:	adc    BYTE PTR [ecx],0x58
  41c8cf:	push   ss
  41c8d0:	add    al,0x51
  41c8d2:	mov    ecx,0x3785bb19
  41c8d7:	inc    ebx
  41c8d8:	and    DWORD PTR [edi+0x24],eax
  41c8db:	cmp    al,0x69
  41c8dd:	jg     0x41c8a9
  41c8df:	jmp    0x41c8b8
  41c8e1:	sahf   
  41c8e2:	push   0xffffff97
  41c8e4:	ret    0x346
  41c8e7:	iret   
  41c8e8:	aaa    
  41c8e9:	push   ebp
  41c8ea:	sahf   
  41c8eb:	int    0x57
  41c8ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8ee:	xor    al,BYTE PTR ds:0x5c6d1a6b
  41c8f4:	xor    esi,DWORD PTR [ebp+edi*8-0x3f138625]
  41c8fb:	xor    eax,0x4ea986b2
  41c900:	mov    BYTE PTR [esp+ebp*1],dh
  41c903:	adc    ecx,esi
  41c905:	scas   eax,DWORD PTR es:[edi]
  41c906:	(bad)  
  41c907:	cli    
  41c908:	jle    0x41c8f2
  41c90a:	les    edi,FWORD PTR [esi-0x6ad5e671]
  41c910:	xchg   ecx,eax
  41c911:	and    DWORD PTR [esi],edx
  41c913:	inc    ebp
  41c914:	jmp    0x41c95d
  41c916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c917:	(bad)  
  41c918:	das    
  41c919:	or     ah,BYTE PTR [ebx]
  41c91b:	out    0x48,eax
  41c91d:	in     al,0x9c
  41c91f:	lock or eax,0x1a5efa9d
  41c925:	or     eax,DWORD PTR [ebx]
  41c927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c928:	(bad)
  41c92c:	lds    ecx,FWORD PTR ss:[edx+0x646cded0]
  41c933:	out    0x2b,al
  41c935:	lds    ebx,FWORD PTR [ecx+0x42]
  41c938:	cmp    eax,0x5e3f7b20
  41c93d:	pop    eax
  41c93e:	and    eax,0x44d58d10
  41c943:	mov    cl,0x61
  41c945:	jmp    0x41c9c4
  41c947:	mov    ds:0x60fd2b3,eax
  41c94c:	or     DWORD PTR [ebp+0x41],esi
  41c94f:	scas   eax,DWORD PTR es:[edi]
  41c950:	add    al,0x2e
  41c952:	mov    ch,0x7a
  41c954:	adc    ebx,DWORD PTR [edi+0x64254f55]
  41c95a:	jae    0x41c9a3
  41c95c:	pop    ebp
  41c95d:	inc    ecx
  41c95e:	dec    eax
  41c95f:	in     eax,dx
  41c960:	jl     0x41c9ce
  41c962:	je     0x41c925
  41c964:	repz inc eax
  41c966:	repnz enter 0x1705,0xda
  41c96b:	mov    bl,0xfc
  41c96d:	into   
  41c96e:	shl    DWORD PTR [ebx+0x3ef3ecbb],1
  41c974:	cs js  0x41c972
  41c977:	rcl    DWORD PTR [ebx],1
  41c979:	push   ss
  41c97a:	ja     0x41c8fd
  41c97c:	ja     0x41c98f
  41c97e:	sub    DWORD PTR [ebx+eax*1-0x69adf17],0x12
  41c986:	(bad)  
  41c987:	mov    ds:0x79bcf7d9,al
  41c98c:	or     bh,dl
  41c98e:	fnstsw WORD PTR ds:0xe777ec62
  41c994:	mov    bl,al
  41c996:	push   edx
  41c997:	repnz dec ebx
  41c999:	imul   esi,DWORD PTR [edx],0x7d3aef93
  41c99f:	fs int3 
  41c9a1:	cli    
  41c9a2:	inc    edx
  41c9a3:	nop
  41c9a4:	mov    al,ds:0x5165c56e
  41c9a9:	test   BYTE PTR [edi-0x24],dl
  41c9ac:	adc    cl,BYTE PTR [ebx]
  41c9ae:	pop    eax
  41c9af:	or     al,0xf7
  41c9b1:	mov    ds:0xccc4897,al
  41c9b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9b7:	retf   
  41c9b8:	jne    0x41c9d7
  41c9ba:	cmp    edi,DWORD PTR [edi-0x53e55786]
  41c9c0:	stos   DWORD PTR es:[edi],eax
  41c9c1:	aas    
  41c9c2:	add    al,bl
  41c9c4:	xchg   ebp,eax
  41c9c5:	and    BYTE PTR [edi-0x53],0xa7
  41c9c9:	push   ebx
  41c9ca:	inc    esp
  41c9cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9cc:	add    eax,0x43a47e09
  41c9d1:	xchg   ebp,eax
  41c9d2:	mov    ds:0xf3b58a0,al
  41c9d7:	mov    ebp,0xba35a707
  41c9dc:	rcr    ecx,1
  41c9de:	mov    bl,BYTE PTR [ebx]
  41c9e0:	ficom  WORD PTR [edx-0x12a12099]
  41c9e6:	imul   BYTE PTR [ecx]
  41c9e8:	stos   BYTE PTR es:[edi],al
  41c9e9:	cs (bad) 
  41c9ec:	adc    DWORD PTR [ecx+0x3e09e2a6],ebx
  41c9f2:	push   esp
  41c9f3:	xchg   esp,eax
  41c9f4:	call   0xdef3:0xd5b7cb49
  41c9fb:	xchg   edi,eax
  41c9fc:	xchg   edi,eax
  41c9fd:	add    eax,0x83da3aa0
  41ca02:	or     al,0x22
  41ca04:	ins    DWORD PTR es:[edi],dx
  41ca05:	mov    ecx,0xc14a6c7d
  41ca0a:	pop    eax
  41ca0b:	and    edi,DWORD PTR [edi-0x712b85ec]
  41ca11:	aaa    
  41ca12:	out    dx,al
  41ca13:	loopne 0x41c99c
  41ca15:	sub    eax,0xb44b2cd1
  41ca1a:	and    edx,DWORD PTR [edi+ebp*2-0x5]
  41ca1e:	addr16 pop ds
  41ca20:	cwde   
  41ca21:	jne    0x41ca16
  41ca23:	loop   0x41ca60
  41ca25:	sub    ecx,edx
  41ca27:	and    eax,0xadfbc8fd
  41ca2c:	cwde   
  41ca2d:	aaa    
  41ca2e:	inc    ebx
  41ca2f:	adc    al,0x60
  41ca31:	pop    edx
  41ca32:	mov    edx,0xf82adb43
  41ca37:	aad    0x68
  41ca39:	push   ds
  41ca3a:	mov    ch,0xec
  41ca3c:	xchg   ebx,eax
  41ca3d:	jns    0x41ca46
  41ca3f:	scas   al,BYTE PTR es:[edi]
  41ca40:	sub    cl,BYTE PTR [edx+0x69bcb4a9]
  41ca46:	cmp    edi,eax
  41ca48:	pop    ecx
  41ca49:	jl     0x41c9e1
  41ca4b:	pushf  
  41ca4c:	adc    al,0xc3
  41ca4e:	sbb    edi,edi
  41ca50:	and    BYTE PTR [edx+0x7cb3a54],dl
  41ca56:	repz pop ebp
  41ca58:	or     ecx,DWORD PTR [ecx+0x1d]
  41ca5b:	xchg   edx,eax
  41ca5c:	adc    ah,BYTE PTR [ebx+0x48e365ad]
  41ca62:	mov    dh,0xec
  41ca64:	loopne 0x41ca48
  41ca66:	lods   eax,DWORD PTR ds:[esi]
  41ca67:	ret    
  41ca68:	cdq    
  41ca69:	adc    BYTE PTR ds:[ebp+0x9],ah
  41ca6d:	je     0x41c9f9
  41ca6f:	test   BYTE PTR [ecx+0x4847c7fa],bl
  41ca75:	outs   dx,BYTE PTR ds:[esi]
  41ca76:	ret    0xf32e
  41ca79:	out    0x76,eax
  41ca7b:	jbe    0x41ca4a
  41ca7d:	lds    ebx,FWORD PTR [eax]
  41ca7f:	cwde   
  41ca80:	sbb    DWORD PTR [ebx],edx
  41ca82:	mov    ecx,0x9f71d972
  41ca87:	and    eax,0xb26aa6d6
  41ca8c:	dec    ebx
  41ca8d:	iret   
  41ca8e:	(bad)  
  41ca8f:	cmp    al,0x63
  41ca91:	jp     0x41cacf
  41ca93:	ins    DWORD PTR es:[edi],dx
  41ca94:	mov    eax,0xfa04feba
  41ca99:	xor    BYTE PTR [esi],dl
  41ca9b:	cmp    DWORD PTR [edx],0x4ced3ec6
  41caa1:	arpl   dx,bx
  41caa3:	pop    esp
  41caa4:	mov    ebx,DWORD PTR [edi+0x42]
  41caa7:	in     eax,dx
  41caa8:	push   edi
  41caa9:	sbb    ebp,DWORD PTR [eax+eiz*1-0x21fd5fa8]
  41cab0:	outs   dx,BYTE PTR ds:[esi]
  41cab1:	add    al,BYTE PTR [edx+0x51]
  41cab4:	xchg   esi,eax
  41cab5:	(bad)  
  41cab6:	and    al,BYTE PTR [ebp+0x2c821163]
  41cabc:	xor    al,0x1c
  41cabe:	ja     0x41cb15
  41cac0:	mov    edi,DWORD PTR [edi-0x2b]
  41cac3:	add    esi,DWORD PTR [ecx+ebx*1-0x5f]
  41cac7:	aas    
  41cac8:	hlt    
  41cac9:	xor    edx,DWORD PTR [ebp-0x32]
  41cacc:	fadd   DWORD PTR [ecx-0x51b9051d]
  41cad2:	scas   al,BYTE PTR es:[edi]
  41cad3:	push   edi
  41cad4:	out    dx,al
  41cad5:	push   esi
  41cad6:	stos   DWORD PTR es:[edi],eax
  41cad7:	jmp    0x94a0:0x242ccbe6
  41cade:	jmp    0xc039:0x72f422d4
  41cae5:	sbb    ebp,DWORD PTR [ebx+esi*1+0x59]
  41cae9:	jl     0x41cad1
  41caeb:	jne    0x41ca81
  41caed:	mov    DWORD PTR [edi],eax
  41caef:	neg    DWORD PTR [ebx+0x52]
  41caf2:	jb     0x41ca96
  41caf4:	pushf  
  41caf5:	mov    esi,0x13ffdde4
  41cafa:	js     0x41caa7
  41cafc:	cmp    DWORD PTR [esi],0x4415c78f
  41cb02:	mov    ebx,DWORD PTR [ebp-0x24]
  41cb05:	mov    ds:0x866e065d,al
  41cb0a:	or     DWORD PTR [ebp-0x3a],esi
  41cb0d:	jmp    0x41cab2
  41cb0f:	retf   
  41cb10:	movups XMMWORD PTR [edx-0x721cedd9],xmm2
  41cb17:	jecxz  0x41cb57
  41cb19:	mov    ch,0x69
  41cb1b:	lods   eax,DWORD PTR ds:[esi]
  41cb1c:	xor    ebx,DWORD PTR [ebp+0x1f02ee08]
  41cb22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb23:	int3   
  41cb24:	sub    BYTE PTR [eax],0xfc
  41cb27:	(bad)  
  41cb28:	jecxz  0x41cb66
  41cb2a:	jmp    0x5ee0:0xd21711ef
  41cb31:	data16 ficom DWORD PTR ds:0xb4c22e57
  41cb38:	or     DWORD PTR [ebx+0x6d8766ae],ecx
  41cb3e:	add    BYTE PTR [edx+0x34501326],ch
  41cb44:	jo     0x41cb6f
  41cb46:	hlt    
  41cb47:	and    BYTE PTR [ebp+0xf],ch
  41cb4a:	sti    
  41cb4b:	cmp    eax,0x2eb8a938
  41cb50:	mov    bl,0x20
  41cb52:	lods   al,BYTE PTR ds:[esi]
  41cb53:	mov    DWORD PTR [esi],ebx
  41cb55:	add    esi,DWORD PTR [ecx+0x2daad26]
  41cb5b:	jmp    0xc657:0xf4ce99c2
  41cb62:	ds fs push ebp
  41cb65:	mov    ?,WORD PTR [ebx+0x38]
  41cb68:	push   ebp
  41cb69:	cmp    eax,0x66b443e1
  41cb6e:	xor    DWORD PTR [ebx],ebx
  41cb70:	pop    esi
  41cb71:	js     0x41cb83
  41cb73:	aad    0xd3
  41cb75:	test   eax,0x240babf6
  41cb7a:	aam    0x38
  41cb7c:	rcr    BYTE PTR [ecx-0x40],cl
  41cb7f:	or     dh,ah
  41cb81:	dec    edx
  41cb82:	gs stc 
  41cb84:	cmp    DWORD PTR [ebp+0x343f1b96],ebp
  41cb8a:	int    0x86
  41cb8c:	inc    ecx
  41cb8d:	cmp    ecx,DWORD PTR [esi+0x39d5329b]
  41cb93:	test   bl,dl
  41cb95:	inc    DWORD PTR ds:0xbcd419cf
  41cb9b:	int3   
  41cb9c:	test   DWORD PTR [ebx-0x4f],0xf4b84abd
  41cba3:	dec    esp
  41cba4:	dec    ecx
  41cba5:	(bad)  [edx+edx*8-0x7d]
  41cba9:	arpl   WORD PTR [ebx+0xf5eee35],sp
  41cbaf:	push   esi
  41cbb0:	loope  0x41cbc1
  41cbb2:	into   
  41cbb3:	add    ah,BYTE PTR [eax+0x74bdd9fa]
  41cbb9:	enter  0x2369,0x18
  41cbbd:	out    0x84,eax
  41cbbf:	aas    
  41cbc0:	pop    edx
  41cbc1:	mov    al,ds:0x3a7c37ad
  41cbc6:	cmp    eax,0x20364bf2
  41cbcb:	in     eax,0x7d
  41cbcd:	or     DWORD PTR [esi-0x24],0x3f
  41cbd1:	jo     0x41cb5c
  41cbd3:	sub    DWORD PTR [edi],ebp
  41cbd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbd6:	mov    cl,0x2c
  41cbd8:	xchg   esi,eax
  41cbd9:	pop    esi
  41cbda:	mov    ecx,0x4867c3d7
  41cbdf:	cld    
  41cbe0:	xchg   BYTE PTR [ebx],cl
  41cbe2:	mov    ch,0xe0
  41cbe4:	test   BYTE PTR [edx+ebp*4],0xf8
  41cbe8:	nop
  41cbe9:	out    dx,al
  41cbea:	lods   al,BYTE PTR ds:[esi]
  41cbeb:	add    ebp,eax
  41cbed:	inc    edx
  41cbee:	iret   
  41cbef:	mov    ebx,0xe1403d5b
  41cbf4:	pushf  
  41cbf5:	sub    BYTE PTR [edx-0x4027fb01],dh
  41cbfb:	enter  0xf13d,0x2c
  41cbff:	arpl   WORD PTR [ebx+0x70],si
  41cc02:	mov    ebp,0x1fb64a82
  41cc07:	out    0x46,eax
  41cc09:	and    BYTE PTR ds:0xc492fdd2,bl
  41cc0f:	and    DWORD PTR [edi+0x3ea3f08f],ebx
  41cc15:	mov    ebp,0xd33b0ab
  41cc1a:	lock in eax,0x1e
  41cc1d:	mov    BYTE PTR [esi-0x6f324f11],bl
  41cc23:	test   DWORD PTR [ebp-0x20],ebp
  41cc26:	shr    bh,0xa7
  41cc29:	in     eax,0x2
  41cc2b:	fwait
  41cc2c:	sbb    al,0x1b
  41cc2e:	ret    0xec43
  41cc31:	jmp    0xfda1:0x1919ac0b
  41cc38:	cmp    BYTE PTR [ebp+0x39],bl
  41cc3b:	mov    esi,edi
  41cc3d:	mov    DWORD PTR [esp+eax*1],esp
  41cc40:	jns    0x41cc3c
  41cc42:	test   BYTE PTR [ebp+0x4aa66bb0],bh
  41cc48:	jp     0x41cc61
  41cc4a:	test   BYTE PTR [edi-0x4b5ffd39],0x6a
  41cc51:	pop    esi
  41cc52:	cmp    edi,ecx
  41cc54:	jnp    0x41cc27
  41cc56:	movaps XMMWORD PTR [esi-0x3f],xmm6
  41cc5a:	xor    DWORD PTR ds:0x2fb87c82,edi
  41cc60:	push   cs
  41cc61:	xor    eax,0xce0f36d3
  41cc66:	clc    
  41cc67:	fidiv  DWORD PTR [ecx+0x50]
  41cc6a:	daa    
  41cc6b:	cmp    ecx,DWORD PTR [ecx]
  41cc6d:	xchg   esi,eax
  41cc6e:	mov    al,ds:0x64d64631
  41cc73:	enter  0xc474,0xfb
  41cc77:	sbb    edi,eax
  41cc79:	hlt    
  41cc7a:	in     al,0xc6
  41cc7c:	xchg   BYTE PTR [edi+0x7a62d30c],bh
  41cc82:	test   al,0x3e
  41cc84:	std    
  41cc85:	mov    cl,0x69
  41cc87:	shl    DWORD PTR [ebx-0x59d62b56],cl
  41cc8d:	stc    
  41cc8e:	ret    0x384e
  41cc91:	ss cdq 
  41cc93:	(bad)  
  41cc94:	xchg   esi,eax
  41cc95:	fisttp WORD PTR [eax]
  41cc97:	sub    cl,al
  41cc99:	lods   al,BYTE PTR fs:[esi]
  41cc9b:	add    ebp,DWORD PTR [eax+0x6e]
  41cc9e:	or     edx,DWORD PTR [edx-0x6e]
  41cca1:	stc    
  41cca2:	gs clc 
  41cca4:	and    DWORD PTR [esi-0x39fc02d8],edx
  41ccaa:	test   DWORD PTR [ebx+0x42],ebx
  41ccad:	xchg   cl,bh
  41ccaf:	xchg   DWORD PTR [ecx+0x66],esp
  41ccb2:	and    al,0x41
  41ccb4:	ret    0x2395
  41ccb7:	fimul  DWORD PTR [edx-0x31cbe580]
  41ccbe:	xchg   BYTE PTR [ebx-0x562b80b3],ch
  41ccc4:	mov    dl,0x8e
  41ccc6:	sbb    eax,0x864a5aa9
  41cccb:	push   edx
  41cccc:	jge    0x41cce8
  41ccce:	fwait
  41cccf:	cmp    DWORD PTR [ecx],esi
  41ccd1:	clc    
  41ccd2:	or     DWORD PTR [eax+0x47],esi
  41ccd5:	mov    bh,0xc8
  41ccd7:	push   es
  41ccd8:	and    ecx,DWORD PTR [ebx-0x21c85ee4]
  41ccde:	pop    DWORD PTR [ecx-0x53]
  41cce1:	pusha  
  41cce2:	and    eax,0x7fd626e9
  41cce7:	dec    esi
  41cce8:	push   esi
  41cce9:	inc    esp
  41ccea:	stos   BYTE PTR es:[edi],al
  41cceb:	pop    ss
  41ccec:	fist   WORD PTR [edx-0x28]
  41ccef:	mov    ds:0x6497f005,eax
  41ccf4:	(bad)  
  41ccf5:	xor    BYTE PTR [eax],cl
  41ccf7:	mov    esp,edx
  41ccf9:	(bad)  
  41ccfa:	call   0x71db:0x93596611
  41cd01:	lods   al,BYTE PTR ds:[esi]
  41cd02:	fucomip st,st(6)
  41cd04:	les    edi,FWORD PTR ds:0x9ad5c863
  41cd0a:	jle    0x41ccc0
  41cd0c:	mov    ecx,DWORD PTR [edi+0xf]
  41cd0f:	mov    fs,WORD PTR [ebx+eax*1-0xa53938f]
  41cd16:	shl    DWORD PTR [edx+eax*1-0x78],1
  41cd1a:	icebp  
  41cd1b:	or     edi,DWORD PTR [ecx]
  41cd1d:	aaa    
  41cd1e:	shl    BYTE PTR [ebx-0x3a],cl
  41cd21:	(bad)  
  41cd22:	push   edi
  41cd23:	out    0x0,eax
  41cd25:	mov    esi,0xc6147f67
  41cd2a:	xchg   esi,eax
  41cd2b:	imul   ebx,DWORD PTR [eax],0xfffffff4
  41cd2e:	cmp    eax,0xe5320ac3
  41cd33:	pop    ebx
  41cd34:	mov    bl,0xf7
  41cd36:	dec    eax
  41cd37:	(bad)  
  41cd38:	inc    ebx
  41cd39:	cmp    ch,ch
  41cd3b:	pop    esi
  41cd3c:	inc    ebp
  41cd3d:	cmp    ecx,DWORD PTR [edi+ebp*1]
  41cd40:	js     0x41cd68
  41cd42:	int    0x76
  41cd44:	subps  xmm4,XMMWORD PTR [eax]
  41cd47:	adc    ah,BYTE PTR [edi-0x256e142e]
  41cd4d:	xchg   edi,eax
  41cd4e:	mov    dl,0xe8
  41cd50:	and    ch,BYTE PTR [esi+0x41]
  41cd53:	sbb    DWORD PTR [ebx],esp
  41cd55:	mov    WORD PTR [ebp-0x1f],?
  41cd58:	inc    eax
  41cd59:	int3   
  41cd5a:	xchg   esi,eax
  41cd5b:	or     ch,BYTE PTR [ebp-0x5]
  41cd5e:	in     eax,0x71
  41cd60:	dec    eax
  41cd61:	sbb    bl,cl
  41cd63:	enter  0x886d,0x9b
  41cd67:	cmp    DWORD PTR ds:0x878ac9d0,esp
  41cd6d:	push   edx
  41cd6e:	sbb    al,0x1b
  41cd70:	sbb    ch,bh
  41cd72:	(bad)  
  41cd74:	xchg   esi,eax
  41cd75:	sub    eax,0xdadbab6f
  41cd7a:	mov    ebp,gs
  41cd7c:	retf   
  41cd7d:	test   DWORD PTR [edx+0x460c6609],ebp
  41cd83:	dec    ebp
  41cd84:	push   edi
  41cd85:	inc    ecx
  41cd86:	data16 jle 0x41cd52
  41cd89:	cmp    eax,0xc5485da1
  41cd8e:	ins    BYTE PTR es:[edi],dx
  41cd8f:	retf   0xb82c
  41cd92:	adc    BYTE PTR [edi-0x68],al
  41cd95:	(bad)  
  41cd96:	jl     0x41ce0f
  41cd98:	jns    0x41cd41
  41cd9a:	jg     0x41cd48
  41cd9c:	shl    DWORD PTR [edi-0x3e14ea13],cl
  41cda2:	mov    esp,0x2a5a73a
  41cda7:	sub    al,0x3a
  41cda9:	mov    ecx,0xa618e5c1
  41cdae:	cmp    edx,esp
  41cdb0:	add    BYTE PTR [esi-0x24eca13b],0x44
  41cdb7:	leave  
  41cdb8:	and    eax,0x19c9be08
  41cdbd:	iret   
  41cdbe:	test   al,0x3d
  41cdc0:	mov    bl,0x90
  41cdc2:	pusha  
  41cdc3:	and    eax,0x24baf0be
  41cdc8:	cmp    ch,BYTE PTR [edx-0x38]
  41cdcb:	leave  
  41cdcc:	mov    DWORD PTR [edx-0x5f],eax
  41cdcf:	and    BYTE PTR [esi-0x62],0x30
  41cdd3:	push   0x2
  41cdd5:	cld    
  41cdd6:	mov    dl,0x7b
  41cdd8:	lahf   
  41cdd9:	pop    ebx
  41cdda:	inc    eax
  41cddb:	setg   BYTE PTR [esi]
  41cdde:	lds    esp,FWORD PTR [edi-0x61]
  41cde1:	dec    edi
  41cde2:	jae    0x41ce49
  41cde4:	sub    ch,BYTE PTR [ecx+0x6dd6b872]
  41cdea:	cli    
  41cdeb:	fdivr  DWORD PTR [ebx-0x173a7d83]
  41cdf1:	xchg   esp,eax
  41cdf2:	(bad)  
  41cdf3:	in     eax,dx
  41cdf4:	mov    esp,0x66f4b103
  41cdf9:	call   0xd03d879d
  41cdfe:	(bad)  
  41cdff:	in     al,dx
  41ce00:	xchg   esp,eax
  41ce01:	imul   esi,edx,0x3b
  41ce04:	add    eax,0x27a4c7ae
  41ce09:	or     BYTE PTR [ebx],al
  41ce0b:	cwde   
  41ce0c:	pop    edi
  41ce0d:	shr    BYTE PTR [edx-0x62],0x65
  41ce11:	cmp    edi,ebx
  41ce13:	pop    esi
  41ce14:	mov    al,0x39
  41ce16:	add    al,0xda
  41ce18:	and    esp,ebp
  41ce1a:	xchg   ebp,eax
  41ce1b:	pop    esp
  41ce1c:	fst    st(6)
  41ce1e:	mov    ah,0x1e
  41ce20:	xor    ebx,edx
  41ce22:	mov    dh,0x5
  41ce24:	in     al,0xd2
  41ce26:	popf   
  41ce27:	jne    0x41ce98
  41ce29:	mov    edi,0xa5af90d5
  41ce2e:	jg     0x41ce93
  41ce30:	loopne 0x41ce19
  41ce32:	sub    eax,0x45771fd8
  41ce37:	push   ebp
  41ce38:	dec    esp
  41ce39:	clc    
  41ce3a:	pop    eax
  41ce3b:	sub    al,0xc
  41ce3d:	pop    esp
  41ce3e:	and    BYTE PTR [ebx+0x5f],bh
  41ce41:	test   eax,0x21abf649
  41ce46:	fwait
  41ce47:	iret   
  41ce48:	es push ds
  41ce4a:	(bad)  ss:0x77de0db7
  41ce51:	lods   eax,DWORD PTR ds:[esi]
  41ce52:	sbb    ch,BYTE PTR [edx]
  41ce54:	sbb    al,BYTE PTR [ebx-0x4114982a]
  41ce5a:	popa   
  41ce5b:	rol    BYTE PTR [esi+esi*2+0x67],1
  41ce5f:	pop    es
  41ce60:	push   ss
  41ce61:	mov    dh,0xfd
  41ce63:	stc    
  41ce64:	and    bh,dh
  41ce66:	test   ebp,esp
  41ce68:	push   ss
  41ce69:	xchg   eax,esi
  41ce6b:	ss cmp eax,0x3a412a76
  41ce71:	and    dh,BYTE PTR [edx+eiz*8-0x5f]
  41ce75:	dec    esp
  41ce76:	iret   
  41ce77:	daa    
  41ce78:	mov    WORD PTR [edi-0x4e901354],gs
  41ce7e:	sbb    eax,0x93ade31d
  41ce83:	stc    
  41ce84:	jnp    0x41ce6e
  41ce86:	adc    esp,DWORD PTR [edx+eax*4+0x55e35a77]
  41ce8d:	mov    ebp,0xcfd87ea3
  41ce92:	sbb    edi,DWORD PTR [ebx-0x666b4a86]
  41ce98:	dec    dl
  41ce9a:	cmp    edi,DWORD PTR [edx-0x10]
  41ce9d:	sub    DWORD PTR [ecx+0x5f],ecx
  41cea0:	or     eax,DWORD PTR ds:0xfa1ed670
  41cea6:	dec    edx
  41cea7:	loopne 0x41cea8
  41cea9:	sbb    bl,BYTE PTR [ebp+0x71]
  41ceac:	rol    cl,1
  41ceae:	cld    
  41ceaf:	and    al,0x3a
  41ceb1:	dec    ebp
  41ceb2:	bound  ebp,QWORD PTR [esp+ecx*8]
  41ceb5:	ret    
  41ceb6:	(bad)  
  41ceb7:	adc    DWORD PTR [eax+0x61e141c4],0xc440c66b
  41cec1:	out    dx,al
  41cec2:	call   0x178c787e
  41cec7:	xchg   ebp,eax
  41cec8:	xor    ebp,DWORD PTR [ebx+ebx*1]
  41cecb:	mov    al,0x66
  41cecd:	out    0xdf,al
  41cecf:	in     eax,0xc7
  41ced1:	or     eax,0x97ddd8d1
  41ced6:	shl    DWORD PTR [ebx],1
  41ced8:	aas    
  41ced9:	shl    DWORD PTR [ecx+eax*8],cl
  41cedc:	cmp    DWORD PTR [esi-0x2b7fc16c],0xe75835fe
  41cee6:	call   0xb085:0xf039ad2c
  41ceed:	sbb    eax,0x59cc1c49
  41cef2:	data16 adc al,0xbe
  41cef5:	gs xchg ebp,eax
  41cef7:	sub    cl,BYTE PTR [ebx+0x5149d0d4]
  41cefd:	jp     0x41cf53
  41ceff:	int    0xa1
  41cf01:	mov    BYTE PTR [edx+0x9],0xdd
  41cf05:	fmulp  st(5),st
  41cf07:	sbb    eax,0x1409599c
  41cf0c:	ja     0x41cf00
  41cf0e:	dec    ebp
  41cf0f:	fcom   DWORD PTR [esi+ebx*8]
  41cf12:	hlt    
  41cf13:	jns    0x41cf80
  41cf15:	fdivr  DWORD PTR [ecx]
  41cf17:	mov    ebp,0x8f93f2
  41cf1c:	mov    edi,0x49aa7090
  41cf21:	push   eax
  41cf22:	clc    
  41cf23:	call   0xfd30:0x6b9f944f
  41cf2a:	inc    eax
  41cf2b:	ror    BYTE PTR [eax+0x1fb93ffe],0x7c
  41cf32:	ja     0x41cf46
  41cf34:	dec    ecx
  41cf35:	rcl    esi,1
  41cf37:	xor    dh,BYTE PTR [ecx]
  41cf39:	ja     0x41cef4
  41cf3b:	push   ebp
  41cf3c:	xor    ebx,esi
  41cf3e:	mov    ebp,0xf879420b
  41cf43:	pop    edx
  41cf44:	inc    edx
  41cf46:	frstor [edx]
  41cf48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf49:	repz test al,0x80
  41cf4c:	mov    bh,ch
  41cf4e:	bound  ebp,QWORD PTR [edi-0x13]
  41cf51:	call   0x4ef07d25
  41cf56:	cmp    eax,0x8e34fa92
  41cf5b:	xchg   edx,eax
  41cf5c:	pop    ss
  41cf5d:	dec    esp
  41cf5e:	mov    ecx,0x654789f9
  41cf63:	dec    ebx
  41cf64:	xchg   edx,eax
  41cf65:	mov    ds:0xd64f3529,eax
  41cf6a:	mov    ebx,0x112d1b42
  41cf6f:	scas   al,BYTE PTR es:[edi]
  41cf70:	aam    0xc0
  41cf72:	lock lea edx,[eax-0x62dde800]
  41cf79:	leave  
  41cf7a:	mov    esp,0xc80fe1c8
  41cf7f:	(bad)  
  41cf80:	push   ecx
  41cf81:	mov    ah,0xca
  41cf83:	xchg   edx,eax
  41cf84:	and    ah,BYTE PTR [eax]
  41cf86:	lock (bad) 
  41cf88:	leave  
  41cf89:	add    DWORD PTR [eax+0x4d],esi
  41cf8c:	xchg   esi,eax
  41cf8d:	and    al,0xfe
  41cf8f:	fisttp WORD PTR [ebp+0x7d]
  41cf92:	push   esp
  41cf93:	pop    ss
  41cf94:	inc    edx
  41cf95:	mov    eax,edx
  41cf97:	fiadd  WORD PTR cs:[esi+0x3c]
  41cf9b:	pop    es
  41cf9c:	pop    esi
  41cf9d:	cmp    al,0x7c
  41cf9f:	xchg   ebp,eax
  41cfa0:	aam    0x9c
  41cfa2:	std    
  41cfa3:	sbb    al,0x8c
  41cfa5:	mov    ebx,0xc455b503
  41cfaa:	call   0xe0bc:0x1398b7ee
  41cfb1:	add    DWORD PTR [eax+ebx*1-0x1517f0ef],edx
  41cfb8:	fs pop edi
  41cfba:	xor    DWORD PTR [esi+ebx*8],ecx
  41cfbd:	ja     0x41d02b
  41cfbf:	pop    eax
  41cfc0:	addr16 add bl,ch
  41cfc3:	pop    es
  41cfc4:	xchg   DWORD PTR [esi-0x13],ecx
  41cfc7:	ss sbb eax,0xd080d797
  41cfcd:	sub    al,0xe7
  41cfcf:	inc    ebp
  41cfd0:	mov    ebx,0xa0e5a12c
  41cfd5:	ins    DWORD PTR es:[edi],dx
  41cfd6:	jmp    FWORD PTR [ebx-0x7965e599]
  41cfdc:	adc    BYTE PTR [eax-0x4],al
  41cfdf:	push   ecx
  41cfe0:	sahf   
  41cfe1:	push   edx
  41cfe2:	stos   BYTE PTR es:[edi],al
  41cfe3:	push   esi
  41cfe4:	sub    al,0x47
  41cfe6:	sub    eax,0xa199ed02
  41cfeb:	aaa    
  41cfec:	xor    DWORD PTR [edi-0x68],0x30
  41cff0:	rcl    BYTE PTR [ebx-0x3f5928d6],1
  41cff6:	stc    
  41cff7:	dec    edx
  41cff8:	or     ebx,esp
  41cffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cffb:	aaa    
  41cffc:	inc    eax
  41cffd:	aaa    
  41cffe:	shl    BYTE PTR [edx+ecx*1],1
  41d001:	pop    ebx
  41d002:	fisub  DWORD PTR [edi+0x67]
  41d005:	mov    eax,ds:0x6957b896
  41d00a:	cwde   
  41d00b:	dec    eax
  41d00c:	jo     0x41cfd1
  41d00e:	cdq    
  41d00f:	das    
  41d010:	and    BYTE PTR [eax-0x5ded016a],bh
  41d016:	jns    0x41d01d
  41d018:	jb     0x41d096
  41d01a:	test   al,0x85
  41d01c:	fld    DWORD PTR [edx-0x62]
  41d01f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d020:	adc    DWORD PTR [eax-0x1c4fd194],ebp
  41d026:	cmp    bl,cl
  41d028:	scas   eax,DWORD PTR es:[edi]
  41d029:	pop    edx
  41d02a:	sub    dh,BYTE PTR [ecx]
  41d02c:	mov    ah,BYTE PTR [edx]
  41d02e:	and    DWORD PTR [ebx-0x4e],0x63fa8f7c
  41d035:	ds lock stos DWORD PTR es:[edi],eax
  41d038:	in     eax,0x4d
  41d03a:	icebp  
  41d03b:	dec    edx
  41d03c:	(bad)  
  41d03d:	fstp   st(2)
  41d03f:	inc    ebx
  41d040:	pop    edi
  41d041:	outs   dx,BYTE PTR ds:[esi]
  41d042:	adc    dl,BYTE PTR ds:0x8a7cce1c
  41d048:	bnd jl 0x41cfd9
  41d04b:	iret   
  41d04c:	outs   dx,BYTE PTR ds:[esi]
  41d04d:	outs   dx,BYTE PTR ds:[esi]
  41d04e:	mov    ebp,DWORD PTR [edx+0x6c]
  41d051:	cmp    BYTE PTR [ebx-0x1b539298],0xcf
  41d058:	stc    
  41d059:	rcl    al,1
  41d05b:	push   ecx
  41d05c:	hlt    
  41d05d:	dec    esi
  41d05e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d05f:	scas   eax,DWORD PTR es:[edi]
  41d060:	fwait
  41d061:	rol    BYTE PTR [eax],1
  41d063:	es hlt 
  41d065:	sbb    ah,bl
  41d067:	xlat   BYTE PTR ds:[ebx]
  41d068:	cmc    
  41d069:	popa   
  41d06a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d06b:	mov    DWORD PTR [ebx+ebp*1],0xab108b26
  41d072:	adc    BYTE PTR [edi],ah
  41d074:	pusha  
  41d075:	and    BYTE PTR ds:0x6df0b40b,bl
  41d07b:	loopne 0x41d028
  41d07d:	nop
  41d07e:	adc    esp,DWORD PTR [ecx]
  41d080:	push   0x4b
  41d082:	mov    edi,0x5f2b2f1e
  41d087:	imul   ebp,esi,0x7bd40e53
  41d08d:	cwde   
  41d08e:	arpl   di,bx
  41d090:	mov    edx,0x48553b67
  41d095:	add    eax,0xd15d59e4
  41d09a:	and    eax,DWORD PTR [edx-0x39]
  41d09d:	test   bh,dl
  41d09f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0a0:	mov    ecx,0x87811a5d
  41d0a5:	jno    0x41d05b
  41d0a7:	pop    ebx
  41d0a8:	call   0xecea4450
  41d0ad:	jno    0x41d08f
  41d0af:	inc    ebp
  41d0b0:	pop    ss
  41d0b1:	mov    dl,0x94
  41d0b3:	lods   al,BYTE PTR ds:[esi]
  41d0b4:	adc    esi,ebp
  41d0b6:	daa    
  41d0b7:	retf   
  41d0b8:	cdq    
  41d0b9:	call   0x9910b92b
  41d0be:	sub    DWORD PTR [ecx],esp
  41d0c0:	jle    0x41d059
  41d0c2:	aam    0x8
  41d0c4:	icebp  
  41d0c5:	sbb    BYTE PTR [ecx-0x7752fee9],ch
  41d0cb:	mov    edi,0x682281d2
  41d0d0:	pop    ss
  41d0d1:	push   ecx
  41d0d2:	sub    ebp,ecx
  41d0d4:	iret   
  41d0d5:	jle    0x41d067
  41d0d7:	and    dl,al
  41d0d9:	dec    edi
  41d0da:	pop    edx
  41d0db:	mov    esi,0xc57c8020
  41d0e0:	out    dx,al
  41d0e1:	into   
  41d0e2:	mov    edx,0x8a05c417
  41d0e7:	aam    0xd9
  41d0e9:	(bad)  
  41d0ea:	xchg   ecx,eax
  41d0eb:	loop   0x41d0e2
  41d0ed:	sbb    BYTE PTR [esi-0x326a1e49],bl
  41d0f3:	mov    al,0x18
  41d0f5:	and    edx,DWORD PTR [edi-0x59]
  41d0f8:	dec    esi
  41d0f9:	jae    0x41d0d5
  41d0fb:	out    0xc0,al
  41d0fd:	jmp    0xde1d19f4
  41d102:	mov    edi,0x9690f599
  41d107:	popa   
  41d108:	add    DWORD PTR [esp+ecx*4+0x5f69aae7],ebx
  41d10f:	test   ebp,ebx
  41d111:	dec    eax
  41d112:	push   eax
  41d113:	call   0x7eeb:0x239e7637
  41d11a:	bound  ebp,QWORD PTR [ebp-0x194a4a2]
  41d120:	test   DWORD PTR [ebp+0x28],edi
  41d123:	in     al,0xe6
  41d125:	test   cl,dh
  41d127:	call   0x4b6c7180
  41d12c:	dec    ebp
  41d12d:	out    dx,al
  41d12e:	pop    ds
  41d12f:	sub    dh,BYTE PTR [esi+0x4659a034]
  41d135:	push   ebx
  41d136:	dec    esp
  41d137:	jmp    DWORD PTR [ebx-0x74]
  41d13a:	push   0x114941d1
  41d13f:	adc    DWORD PTR [ecx-0x1],0x21
  41d143:	(bad)  
  41d144:	int3   
  41d145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d146:	jg     0x41d164
  41d148:	cli    
  41d149:	clc    
  41d14a:	(bad)  
  41d14b:	cmp    al,0x4c
  41d14d:	nop
  41d14e:	cmp    BYTE PTR [esi],bl
  41d150:	nop
  41d151:	add    BYTE PTR [esi+0x648d4a10],dh
  41d157:	loop   0x41d179
  41d159:	add    DWORD PTR [ebp-0x30fe9e9d],ebp
  41d15f:	popa   
  41d160:	mov    ah,0xc1
  41d162:	jge    0x41d15e
  41d164:	addr16 xchg edi,eax
  41d166:	pop    ebx
  41d167:	fcomp  DWORD PTR [edi+0x49241270]
  41d16d:	fsub   QWORD PTR [ecx]
  41d16f:	loop   0x41d120
  41d171:	stc    
  41d172:	mov    fs,WORD PTR [esi]
  41d174:	cmc    
  41d175:	jo     0x41d1ce
  41d177:	mov    WORD PTR [eax+0x7976989b],ds
  41d17d:	shr    DWORD PTR ds:0xb2d7c704,1
  41d183:	add    edx,DWORD PTR [ecx]
  41d185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d186:	inc    edx
  41d187:	nop
  41d188:	and    DWORD PTR [ecx+0x3463f173],esi
  41d18e:	xor    BYTE PTR [edi],0x23
  41d191:	xchg   edi,eax
  41d192:	push   esi
  41d193:	arpl   WORD PTR [ebp+0x12c0f169],si
  41d199:	pop    ds
  41d19a:	ret    0x49d
  41d19d:	nop
  41d19e:	mov    edi,0x9f7ec6fc
  41d1a3:	pop    ebx
  41d1a4:	xchg   ecx,eax
  41d1a5:	lds    edi,FWORD PTR [edi]
  41d1a7:	and    al,0x61
  41d1a9:	ret    0xba15
  41d1ac:	mov    ds:0x33d87978,eax
  41d1b1:	jns    0x41d13c
  41d1b3:	mov    ebp,0x4e5e7ffb
  41d1b8:	call   DWORD PTR [ebp+0x54]
  41d1bb:	je     0x41d1ba
  41d1bd:	and    al,0x42
  41d1bf:	push   esi
  41d1c0:	push   ds
  41d1c1:	or     ebp,ecx
  41d1c3:	in     eax,0x14
  41d1c5:	imul   eax,esi,0xe1be16cb
  41d1cb:	mov    eax,edx
  41d1cd:	popa   
  41d1ce:	mov    bh,0x17
  41d1d0:	adc    edi,DWORD PTR [ebp+0x353c24b3]
  41d1d6:	pop    edx
  41d1d7:	outs   dx,BYTE PTR ds:[esi]
  41d1d8:	mov    bh,ah
  41d1da:	retf   0xd72c
  41d1dd:	xchg   edi,eax
  41d1de:	pop    ebx
  41d1df:	adc    ah,ah
  41d1e1:	enter  0x5dd2,0xc
  41d1e5:	jge    0x41d25c
  41d1e7:	aaa    
  41d1e8:	outs   dx,DWORD PTR ds:[esi]
  41d1e9:	xlat   BYTE PTR ds:[ebx]
  41d1ea:	(bad)
  41d1ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1ef:	push   edi
  41d1f0:	sbb    al,0x92
  41d1f2:	loope  0x41d1b1
  41d1f4:	sub    edi,esp
  41d1f6:	sub    eax,0x24aba428
  41d1fb:	pop    esp
  41d1fc:	pop    esp
  41d1fd:	sub    DWORD PTR [edi*4-0x130b0406],0xffffffcb
  41d205:	push   esi
  41d206:	fst    QWORD PTR [eax-0x7dcfe175]
  41d20c:	or     ebx,ebp
  41d20e:	into   
  41d20f:	xchg   ecx,eax
  41d210:	jl     0x41d227
  41d212:	cmp    al,0x89
  41d214:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d215:	jge    0x41d1f5
  41d217:	stos   BYTE PTR es:[edi],al
  41d218:	jnp    0x41d21a
  41d21a:	dec    edi
  41d21b:	aad    0x2a
  41d21d:	or     BYTE PTR [eax],cl
  41d21f:	sbb    al,0x53
  41d221:	jo     0x41d2a2
  41d223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d224:	pop    esp
  41d225:	xor    al,BYTE PTR [ebx-0x5589db81]
  41d22b:	das    
  41d22c:	fdivr  DWORD PTR [eax]
  41d22e:	xlat   BYTE PTR ds:[ebx]
  41d22f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d230:	xor    DWORD PTR [edi+0x5f],ecx
  41d233:	jg     0x41d298
  41d235:	in     eax,0xdb
  41d237:	repz add bl,bl
  41d23a:	pop    ds
  41d23b:	sbb    BYTE PTR [ebp+0x7aa0da04],al
  41d241:	lea    edi,fs:[eax+0xfe35da5]
  41d248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d249:	in     eax,dx
  41d24a:	cwde   
  41d24b:	add    ecx,eax
  41d24d:	add    bl,BYTE PTR [ecx+0x363da952]
  41d253:	adc    BYTE PTR [esi+0x0],ch
  41d256:	xor    ebp,ebp
  41d258:	pop    ebp
  41d259:	and    al,0xc6
  41d25b:	push   edx
  41d25c:	jmp    0xd084b62
  41d261:	add    BYTE PTR [eax+0x47],al
  41d264:	mov    edi,0xe5c48d84
  41d269:	adc    eax,0xc8e78ff5
  41d26e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d26f:	fisttp WORD PTR [edi]
  41d271:	ins    DWORD PTR es:[edi],dx
  41d272:	clc    
  41d273:	hlt    
  41d274:	and    dl,BYTE PTR [eax+0x48]
  41d277:	fld    QWORD PTR [esp+edi*4+0x25]
  41d27b:	mov    fs,edx
  41d27d:	jns    0x41d2a0
  41d27f:	test   ecx,ebx
  41d281:	jp     0x41d267
  41d283:	lods   al,BYTE PTR ds:[esi]
  41d284:	loop   0x41d294
  41d286:	loop   0x41d294
  41d288:	xchg   DWORD PTR [esi],edi
  41d28a:	and    BYTE PTR [ebp+0x5217bdb6],dh
  41d290:	or     eax,0xc2b73d55
  41d295:	dec    esp
  41d296:	jae    0x41d267
  41d298:	push   eax
  41d299:	in     eax,0x8b
  41d29b:	aam    0x94
  41d29d:	retf   
  41d29e:	mov    ebp,0x24997f6f
  41d2a3:	mov    bh,0x69
  41d2a5:	scas   al,BYTE PTR es:[edi]
  41d2a6:	int    0xda
  41d2a8:	mov    BYTE PTR [esi+0x24c86e3b],dh
  41d2ae:	fs fsqrt 
  41d2b1:	jnp    0x41d319
  41d2b3:	push   esp
  41d2b4:	les    esp,FWORD PTR [eax-0x71]
  41d2b7:	mov    ch,0x10
  41d2b9:	xor    dh,BYTE PTR [esi+edi*2]
  41d2bc:	mov    ebp,0xb1a482d7
  41d2c1:	xor    esp,DWORD PTR ds:0x2aed5f25
  41d2c7:	inc    edx
  41d2c8:	xchg   BYTE PTR [edx],dl
  41d2ca:	(bad)  
  41d2cb:	jmp    0x523d:0x3cfb7ce7
  41d2d2:	fdiv   QWORD PTR [edx-0x582b1eae]
  41d2d8:	cld    
  41d2d9:	mov    esi,DWORD PTR [eax]
  41d2db:	xor    edi,esi
  41d2dd:	sbb    eax,0x546da3dd
  41d2e2:	mov    cl,0xde
  41d2e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2e5:	and    DWORD PTR [ebp-0x63085b9f],0x9e5e94c8
  41d2ef:	sub    al,0x45
  41d2f1:	mov    dl,0x95
  41d2f3:	cmp    BYTE PTR [edx+esi*8],ch
  41d2f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2f7:	shl    BYTE PTR [ecx+0x438a0745],1
  41d2fd:	gs adc al,0xfa
  41d300:	jge    0x41d299
  41d302:	xlat   BYTE PTR ds:[ebx]
  41d303:	sub    BYTE PTR [edx+0x389311db],0x90
  41d30a:	mov    al,0x77
  41d30c:	cmp    al,0x61
  41d30e:	add    edi,DWORD PTR [ebp+0x47]
  41d311:	jb     0x41d392
  41d313:	mov    WORD PTR [edi+0x79f4bd9c],gs
  41d319:	jns    0x41d2f4
  41d31b:	or     eax,0xfd06753a
  41d320:	mov    eax,ds:0xb118bc04
  41d325:	or     BYTE PTR [ecx-0x27],cl
  41d328:	dec    ecx
  41d329:	dec    ecx
  41d32a:	outs   dx,BYTE PTR ds:[esi]
  41d32b:	push   ds
  41d32c:	and    DWORD PTR [ebx+0x5ac876a1],edi
  41d332:	inc    ebp
  41d333:	inc    ebp
  41d334:	repz imul esi,DWORD PTR [ecx-0x6dad4f1a],0x1672b030
  41d33f:	xor    DWORD PTR [ebx+0xdbbae4d],0x6d
  41d346:	mov    DWORD PTR ds:0x98ba726b,esi
  41d34c:	stos   BYTE PTR es:[edi],al
  41d34d:	jns    0x41d365
  41d34f:	mov    edi,0x4a3580ab
  41d354:	int3   
  41d355:	dec    ecx
  41d356:	ret    0x2032
  41d359:	rcr    DWORD PTR [eax-0x10],0x4c
  41d35d:	arpl   bx,dx
  41d35f:	mov    cl,0x8a
  41d361:	lea    ebp,[edx+0x5f]
  41d364:	(bad)  
  41d365:	jns    0x41d331
  41d367:	mov    al,0x5
  41d369:	inc    ebp
  41d36a:	ins    BYTE PTR es:[edi],dx
  41d36b:	pop    ebp
  41d36c:	push   ds
  41d36d:	pusha  
  41d36e:	ja     0x41d39c
  41d370:	sar    DWORD PTR [ecx+0x41],cl
  41d373:	pop    eax
  41d374:	(bad)  
  41d375:	fwait
  41d376:	mov    ebp,0x1611eb58
  41d37b:	mov    al,ds:0xfd40db38
  41d380:	pop    esp
  41d381:	sbb    al,BYTE PTR [edx]
  41d383:	mov    ecx,0x184d1d97
  41d388:	add    al,BYTE PTR [edi]
  41d38a:	jns    0x41d312
  41d38c:	xchg   ebx,eax
  41d38d:	stos   BYTE PTR es:[edi],al
  41d38e:	adc    ebx,DWORD PTR [ebp+0x5e]
  41d391:	and    eax,0x3ea324fb
  41d396:	das    
  41d397:	aas    
  41d398:	inc    esp
  41d399:	sbb    DWORD PTR [edi],edx
  41d39b:	inc    edx
  41d39c:	inc    DWORD PTR [esp+esi*1]
  41d39f:	mov    esp,0xdd806e8c
  41d3a4:	mov    edi,DWORD PTR [esi-0x78193050]
  41d3aa:	in     al,0xe0
  41d3ac:	in     eax,0xbf
  41d3ae:	mov    ebp,0xdfd52668
  41d3b3:	push   esi
  41d3b4:	int3   
  41d3b5:	add    dh,BYTE PTR [edx+0x30]
  41d3b8:	mov    ah,0x34
  41d3ba:	adc    eax,0xcc6afa0b
  41d3bf:	cmp    ah,BYTE PTR [esi+esi*4]
  41d3c2:	loopne 0x41d3c8
  41d3c4:	xchg   edi,eax
  41d3c5:	neg    BYTE PTR gs:[ecx]
  41d3c8:	dec    edi
  41d3c9:	fidiv  WORD PTR [ebx]
  41d3cb:	add    dl,BYTE PTR [eax-0x58357d14]
  41d3d1:	mov    al,ds:0x8a9e67a2
  41d3d6:	outs   dx,DWORD PTR ds:[esi]
  41d3d7:	outs   dx,DWORD PTR ds:[esi]
  41d3d8:	lods   al,BYTE PTR ds:[esi]
  41d3d9:	fstp   QWORD PTR [edi-0x34b2c57f]
  41d3df:	mov    edx,0x533645ab
  41d3e4:	pop    eax
  41d3e5:	cli    
  41d3e6:	jb     0x41d3af
  41d3e8:	and    BYTE PTR [eax-0xdd58f6b],ch
  41d3ee:	cwde   
  41d3ef:	mov    cl,0xb1
  41d3f1:	and    al,0x8c
  41d3f3:	leave  
  41d3f4:	inc    edi
  41d3f5:	or     edi,edx
  41d3f7:	imul   esp,DWORD PTR [ebp-0x1cb73539],0xffffff94
  41d3fe:	push   ebp
  41d3ff:	ficomp WORD PTR [eax+0x1753a9c1]
  41d405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d406:	leave  
  41d407:	sbb    DWORD PTR [ebx+0x5b2d17ab],edx
  41d40d:	cmc    
  41d40e:	sti    
  41d40f:	adc    DWORD PTR [ebx-0x4329023],0x7c1d6a54
  41d419:	mov    edi,0x2e26a741
  41d41e:	out    0x3b,al
  41d420:	ins    BYTE PTR es:[edi],dx
  41d421:	rcl    DWORD PTR [esp+esi*4+0x5d4e0076],0x7e
  41d429:	jne    0x41d49e
  41d42b:	call   0x5ab6:0x9a3aae2e
  41d432:	out    dx,al
  41d433:	shl    BYTE PTR [ebp-0x67],cl
  41d436:	push   ds
  41d437:	push   ecx
  41d438:	mov    esp,0x992f8679
  41d43d:	loop   0x41d480
  41d43f:	dec    ebx
  41d440:	pop    esi
  41d441:	(bad)  
  41d442:	jecxz  0x41d3ca
  41d444:	or     DWORD PTR [edi-0x243c5b54],edx
  41d44a:	mov    ds:0xb8438e23,al
  41d44f:	or     BYTE PTR [ecx-0x57],al
  41d452:	sbb    BYTE PTR [ecx+ecx*2],bh
  41d455:	xchg   esi,eax
  41d456:	pop    ebx
  41d457:	inc    ebp
  41d458:	jg     0x41d4b2
  41d45a:	inc    eax
  41d45b:	and    al,0xaa
  41d45d:	imul   esi,DWORD PTR [ecx-0x7],0x6a
  41d461:	jns    0x41d4ca
  41d463:	int    0x55
  41d465:	scas   eax,DWORD PTR es:[edi]
  41d466:	cmp    eax,DWORD PTR [edi-0x4]
  41d469:	mov    dl,bh
  41d46b:	pop    esp
  41d46c:	xor    al,0xeb
  41d46e:	xlat   BYTE PTR ds:[ebx]
  41d46f:	push   0xffffffbe
  41d471:	xor    al,BYTE PTR [ebp-0x34]
  41d474:	jb     0x41d4d3
  41d476:	and    ebp,DWORD PTR ds:0xef1abb75
  41d47c:	cmp    esp,DWORD PTR [edi-0x53]
  41d47f:	ds cs add al,0x4a
  41d483:	ret    0x509
  41d486:	sbb    eax,0x8a14c7a8
  41d48b:	mov    eax,ds
  41d48d:	cdq    
  41d48e:	test   ecx,esi
  41d490:	push   edx
  41d491:	cmp    eax,0xc7d7b100
  41d496:	sub    eax,0xcb1ef489
  41d49b:	imul   esp,DWORD PTR [ebx+0x6a],0xfffffffa
  41d49f:	mov    WORD PTR [edi-0x2090a0c3],?
  41d4a5:	adc    DWORD PTR [esi-0x3b2d89be],ecx
  41d4ab:	sbb    eax,0xc0dc38e4
  41d4b0:	lods   al,BYTE PTR ds:[esi]
  41d4b1:	ds js  0x41d4f9
  41d4b4:	add    edx,DWORD PTR [eax+0x41c3067b]
  41d4ba:	or     eax,DWORD PTR [ebx]
  41d4bc:	in     al,0xa7
  41d4be:	imul   esp,DWORD PTR [edx],0xf72684eb
  41d4c4:	(bad)  
  41d4c5:	jmp    0x714982fd
  41d4ca:	push   ebp
  41d4cb:	cmp    DWORD PTR [edx-0xb8aa0d3],edx
  41d4d1:	cmp    eax,0x95880b4f
  41d4d6:	cs ffreep st(7)
  41d4d9:	jno    0x41d4f4
  41d4db:	jl     0x41d50d
  41d4dd:	ror    BYTE PTR [edx-0x7128cc6a],0x64
  41d4e4:	mov    al,ds:0xb16e4b15
  41d4e9:	pop    ecx
  41d4ea:	in     eax,dx
  41d4eb:	cmp    BYTE PTR [edi],al
  41d4ed:	fdiv   QWORD PTR [ebx+0x41]
  41d4f0:	cmp    cl,BYTE PTR [edx+0x1d3e1967]
  41d4f6:	inc    esp
  41d4f7:	mov    dh,BYTE PTR [esi-0xa]
  41d4fa:	aam    0x1f
  41d4fc:	xor    al,0x67
  41d4fe:	sbb    DWORD PTR [eax+0x3258a627],0xffffff94
  41d505:	mov    al,ds:0xe91e360a
  41d50a:	sbb    cl,ah
  41d50c:	mul    DWORD PTR [esi+eax*4+0x45]
  41d510:	jecxz  0x41d502
  41d512:	(bad)  
  41d513:	out    dx,eax
  41d514:	repz fadd st,st(2)
  41d517:	ds dec eax
  41d519:	sub    al,BYTE PTR [edi]
  41d51b:	cdq    
  41d51c:	mov    WORD PTR [ebp+edi*4+0x9],fs
  41d520:	lock aam 0x6f
  41d523:	or     DWORD PTR [ecx],esp
  41d525:	sbb    al,0x16
  41d527:	or     dl,BYTE PTR es:[esi]
  41d52a:	cmp    BYTE PTR [ebx],0x53
  41d52d:	daa    
  41d52e:	ja     0x41d4cf
  41d530:	inc    edi
  41d531:	or     al,0x19
  41d533:	fnstenv [ebp-0x10618217]
  41d539:	push   ebp
  41d53a:	ins    BYTE PTR es:[edi],dx
  41d53b:	mov    bl,0xcd
  41d53d:	sub    ecx,DWORD PTR [esi-0xefaec3]
  41d543:	push   esp
  41d544:	adc    eax,0x618f4bf7
  41d549:	pop    esi
  41d54a:	es cdq 
  41d54c:	push   esp
  41d54d:	(bad)  
  41d54f:	sbb    DWORD PTR [eax+0x50],ebx
  41d552:	test   al,0xfe
  41d554:	outs   dx,DWORD PTR ds:[esi]
  41d555:	popa   
  41d556:	(bad)  
  41d557:	pop    ebx
  41d558:	inc    esp
  41d559:	retf   
  41d55a:	xchg   edx,eax
  41d55b:	test   eax,0xe59dcdb3
  41d560:	xor    cl,BYTE PTR [esi-0x249bbb8e]
  41d566:	pop    ebp
  41d567:	bound  edi,QWORD PTR [eax-0x4d]
  41d56a:	mov    WORD PTR [ecx-0x28],ss
  41d56d:	arpl   WORD PTR [ecx],cx
  41d56f:	aaa    
  41d570:	fild   WORD PTR [ecx-0x4dd9af26]
  41d576:	adc    BYTE PTR [ebx],0xf1
  41d579:	mov    esi,0xeb4b018f
  41d57e:	pcmpgtb xmm0,xmm6
  41d582:	inc    ebx
  41d583:	push   edx
  41d584:	inc    eax
  41d585:	outs   dx,DWORD PTR ds:[esi]
  41d586:	ret    0xc514
  41d589:	loope  0x41d602
  41d58b:	xchg   esp,eax
  41d58c:	push   es
  41d58d:	les    eax,FWORD PTR [edx+0xe]
  41d590:	push   ecx
  41d591:	push   eax
  41d592:	xchg   ebx,eax
  41d593:	add    bl,BYTE PTR [ebp-0x7c]
  41d596:	pop    ebp
  41d597:	dec    esp
  41d598:	dec    esi
  41d599:	enter  0x41d9,0x32
  41d59d:	mov    eax,0xb896e5a0
  41d5a2:	(bad)  
  41d5a3:	sbb    eax,0x771286ee
  41d5a8:	xchg   edi,eax
  41d5a9:	xchg   ecx,eax
  41d5aa:	std    
  41d5ab:	xchg   ecx,eax
  41d5ac:	scas   eax,DWORD PTR es:[edi]
  41d5ad:	mov    ch,0xf
  41d5af:	xor    eax,0xabfa9108
  41d5b4:	daa    
  41d5b5:	add    DWORD PTR [bx+si-0x7d],edi
  41d5b9:	push   cs
  41d5ba:	mov    ecx,0xcbdef4eb
  41d5bf:	jge    0x41d56f
  41d5c1:	fcmovne st,st(4)
  41d5c3:	fistp  QWORD PTR [ecx+0x66542688]
  41d5c9:	and    al,0xa3
  41d5cb:	test   DWORD PTR [ecx+0x2f],0x281e894e
  41d5d2:	call   0x1416a8d9
  41d5d7:	test   DWORD PTR [ebx],ebp
  41d5d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5da:	dec    ebx
  41d5db:	dec    DWORD PTR [eax-0x10]
  41d5de:	fst    QWORD PTR [eax-0x28]
  41d5e1:	xchg   ebx,eax
  41d5e2:	add    al,0x4b
  41d5e4:	das    
  41d5e5:	out    dx,al
  41d5e6:	dec    edi
  41d5e7:	pop    ds
  41d5e8:	repnz mov ds:0x732f1439,al
  41d5ee:	test   DWORD PTR [ecx+eiz*2+0x2a14b44b],edi
  41d5f5:	mov    ds:0xa100b57,eax
  41d5fa:	jl     0x41d5c8
  41d5fc:	pop    ebx
  41d5fd:	dec    edx
  41d5fe:	cmc    
  41d5ff:	and    ebx,DWORD PTR [eax+0x3a]
  41d602:	enter  0xc63c,0x14
  41d606:	outs   dx,DWORD PTR ds:[esi]
  41d607:	sbb    esi,DWORD PTR [ecx-0x6c]
  41d60a:	out    0x2c,al
  41d60c:	pop    ebx
  41d60d:	dec    edi
  41d60e:	or     eax,0x59b4ffd6
  41d613:	xor    bl,ah
  41d615:	mov    edi,0x497d12fb
  41d61a:	mov    ch,0x86
  41d61c:	push   edx
  41d61d:	dec    ebx
  41d61e:	push   edi
  41d61f:	pop    esi
  41d620:	xor    al,0x4a
  41d622:	sub    ah,ah
  41d624:	sub    ebx,DWORD PTR [edx+edx*8-0xe]
  41d628:	adc    esi,DWORD PTR [edi-0x5]
  41d62b:	sti    
  41d62c:	push   cs
  41d62d:	adc    eax,0xab2cd613
  41d632:	loop   0x41d67c
  41d634:	mov    eax,ds:0x22420e03
  41d639:	leave  
  41d63a:	ins    BYTE PTR es:[edi],dx
  41d63b:	inc    edx
  41d63c:	out    0xf,al
  41d63e:	inc    eax
  41d63f:	(bad)  
  41d640:	sub    edx,DWORD PTR [ebx+0x3aca7dda]
  41d646:	ins    BYTE PTR es:[edi],dx
  41d647:	pop    ebp
  41d648:	aas    
  41d649:	sbb    al,0x1a
  41d64b:	xchg   esp,eax
  41d64c:	mov    bl,0x81
  41d64e:	lock adc al,0xdd
  41d651:	xor    DWORD PTR [ecx-0x1e],ebx
  41d654:	xor    al,0x4d
  41d656:	push   0x62d91221
  41d65b:	xor    eax,DWORD PTR [edx-0xe1bd158]
  41d661:	xlat   BYTE PTR ds:[ebx]
  41d662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d663:	ja     0x41d63f
  41d665:	retf   
  41d666:	jle    0x41d672
  41d668:	jae    0x41d6cd
  41d66a:	nop
  41d66b:	adc    DWORD PTR [esi],esi
  41d66d:	icebp  
  41d66e:	sbb    eax,0xefa227e7
  41d673:	xchg   ebx,eax
  41d674:	jmp    0x2f3b:0xb252e09
  41d67b:	jae    0x41d6dc
  41d67d:	push   ebx
  41d67e:	gs add al,0xb8
  41d681:	push   0xff3a0dce
  41d686:	sub    BYTE PTR [edx-0x18],al
  41d689:	adc    BYTE PTR [edx],bh
  41d68b:	mov    al,ds:0xa2234d16
  41d690:	inc    esp
  41d691:	loopne 0x41d6f1
  41d693:	into   
  41d694:	cld    
  41d695:	rol    BYTE PTR [edi],1
  41d697:	jb     0x41d649
  41d699:	jne    0x41d65f
  41d69b:	mov    edi,DWORD PTR [ebx]
  41d69d:	ret    0xd75e
  41d6a0:	in     al,0xdd
  41d6a2:	adc    cl,BYTE PTR [edi]
  41d6a4:	cmp    ecx,DWORD PTR [ecx-0xe]
  41d6a7:	cmp    DWORD PTR [eax+0x44],0x8a93f8aa
  41d6ae:	push   ebx
  41d6af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6b0:	xor    eax,0xbe1d048b
  41d6b5:	sub    BYTE PTR [edi+0x732946fe],0x27
  41d6bc:	jge    0x41d720
  41d6be:	jmp    0x41d662
  41d6c0:	add    BYTE PTR [edx],0x38
  41d6c3:	mov    al,0x2e
  41d6c5:	or     cl,dl
  41d6c7:	rsm    
  41d6c9:	ds cwde 
  41d6cb:	nop
  41d6cc:	jp     0x41d6ae
  41d6ce:	outs   dx,DWORD PTR ds:[esi]
  41d6cf:	inc    ebx
  41d6d0:	and    cl,ch
  41d6d2:	dec    edi
  41d6d3:	fldcw  WORD PTR [ebx-0x4c13fe86]
  41d6d9:	mov    BYTE PTR [ebp+ebx*4-0x2e],bl
  41d6dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6de:	mov    ah,0x75
  41d6e0:	mov    eax,ds:0xee1a5965
  41d6e5:	addr16 inc edi
  41d6e7:	pop    ebx
  41d6e8:	dec    esp
  41d6e9:	adc    bh,bh
  41d6eb:	xchg   esp,eax
  41d6ec:	repnz inc ebx
  41d6ee:	ret    
  41d6ef:	outs   dx,DWORD PTR ds:[esi]
  41d6f0:	das    
  41d6f1:	fcmovbe st,st(4)
  41d6f3:	pop    ss
  41d6f4:	cwde   
  41d6f5:	call   0x491cdb9d
  41d6fa:	sbb    BYTE PTR ds:0x90f91949,ah
  41d700:	pop    es
  41d701:	adc    eax,0xe1403903
  41d706:	std    
  41d707:	pop    ds
  41d708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d709:	out    0x46,al
  41d70b:	jae    0x41d70e
  41d70d:	xchg   edx,eax
  41d70e:	test   DWORD PTR [esi+0x5935a0bc],ebp
  41d714:	push   ds
  41d715:	js     0x41d752
  41d717:	xchg   BYTE PTR [eax],ah
  41d719:	ins    DWORD PTR es:[edi],dx
  41d71a:	aam    0x2f
  41d71c:	and    al,0x28
  41d71e:	sbb    BYTE PTR [ebx-0x6db06754],dl
  41d724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d725:	mov    ebx,0xc3f5826
  41d72a:	pop    eax
  41d72b:	aam    0xd4
  41d72d:	inc    ebx
  41d72e:	mov    eax,ds:0x6ea6d4e0
  41d733:	and    BYTE PTR [edx+0x2b],ch
  41d736:	in     eax,dx
  41d737:	nop
  41d738:	cmp    ch,bl
  41d73a:	sbb    DWORD PTR [esp+eiz*4+0x1d],edx
  41d73e:	outs   dx,DWORD PTR ds:[esi]
  41d73f:	mov    dh,0xf0
  41d741:	mov    ebx,0xdc3cb10d
  41d746:	jns    0x41d717
  41d748:	xor    eax,0x581ff9e
  41d74d:	ret    
  41d74e:	fs mov esp,0xc5a4891a
  41d754:	ror    DWORD PTR [ebx-0x770ec3dd],cl
  41d75a:	inc    esi
  41d75b:	cli    
  41d75c:	rcl    DWORD PTR [ebx],1
  41d75e:	push   ds
  41d75f:	sub    BYTE PTR [eax-0x257fcadb],ch
  41d765:	fs push esp
  41d767:	pop    ds
  41d768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d769:	pop    ebp
  41d76a:	jno    0x41d6ee
  41d76c:	(bad)  
  41d76d:	retf   0x6e64
  41d770:	repnz pop eax
  41d772:	mov    dh,0x4a
  41d774:	cmp    al,0x1
  41d776:	adc    bh,BYTE PTR [esi+0x6d]
  41d779:	pop    edx
  41d77a:	into   
  41d77b:	(bad)
  41d77f:	xchg   esi,eax
  41d780:	xor    esp,DWORD PTR [edi]
  41d782:	inc    esp
  41d783:	loopne 0x41d7a4
  41d785:	aaa    
  41d786:	dec    ecx
  41d787:	arpl   WORD PTR [ebx+0x42848501],bp
  41d78d:	inc    edi
  41d78e:	xor    esi,DWORD PTR [ebx+0x4f819691]
  41d794:	mov    eax,ds:0xa4ceb831
  41d799:	push   es
  41d79a:	pop    ds
  41d79b:	je     0x41d78d
  41d79d:	cdq    
  41d79e:	inc    esp
  41d79f:	jmp    0x94d7227b
  41d7a4:	rol    DWORD PTR [esi*1+0x6bdf0b07],cl
  41d7ab:	pop    es
  41d7ac:	pop    eax
  41d7ad:	(bad)  
  41d7ae:	push   0xffffffac
  41d7b0:	mov    cl,BYTE PTR [edx+0x2bd6a10e]
  41d7b6:	std    
  41d7b7:	push   ecx
  41d7b8:	inc    esp
  41d7b9:	push   ds
  41d7ba:	xchg   ebp,esp
  41d7bc:	data16 aaa 
  41d7be:	mov    esp,0x33759a05
  41d7c3:	inc    esp
  41d7c4:	dec    ebp
  41d7c5:	jns    0x41d7fa
  41d7c7:	xchg   ecx,eax
  41d7c8:	push   esp
  41d7c9:	pop    ecx
  41d7ca:	pop    edx
  41d7cb:	dec    eax
  41d7cc:	in     al,dx
  41d7cd:	cmp    esp,DWORD PTR [ecx-0x6d]
  41d7d0:	or     DWORD PTR [esi-0x45c9ed25],esi
  41d7d6:	mov    ecx,0xdb9e985d
  41d7db:	je     0x41d7fc
  41d7dd:	shl    BYTE PTR [ebx-0x1ddc2a28],cl
  41d7e3:	iret   
  41d7e4:	sub    eax,0x2c05e69
  41d7e9:	ret    0xc915
  41d7ec:	popa   
  41d7ed:	and    DWORD PTR [esi+ebp*1-0x3b],esp
  41d7f1:	das    
  41d7f2:	imul   ebx,DWORD PTR [ecx+0x7b35cac7],0xaddc3d77
  41d7fc:	add    BYTE PTR [ebx+0x2ebc56f6],0x6b
  41d803:	mov    ebp,DWORD PTR [edx+ebp*4-0x2a14ea6d]
  41d80a:	ret    0x50b5
  41d80d:	lahf   
  41d80e:	ins    DWORD PTR es:[edi],dx
  41d80f:	jne    0x41d874
  41d811:	push   ebx
  41d812:	fist   DWORD PTR ds:0x22c46d57
  41d818:	sub    dh,BYTE PTR [ecx]
  41d81a:	mov    DWORD PTR [edx-0x68],0x851b9cd8
  41d821:	or     DWORD PTR [eax],0x64
  41d824:	stc    
  41d825:	inc    ebx
  41d826:	lock jp 0x41d884
  41d829:	pop    ebp
  41d82a:	shl    dl,0x65
  41d82d:	js     0x41d891
  41d82f:	and    BYTE PTR [ecx+0x2ff358b],ah
  41d835:	xor    edx,DWORD PTR [esp+edi*8]
  41d838:	adc    cl,BYTE PTR [esp+eiz*4+0x4ff32b37]
  41d83f:	fild   QWORD PTR [esi+0x5b]
  41d842:	(bad)  
  41d844:	retf   
  41d845:	dec    edx
  41d846:	fcom   DWORD PTR [edx]
  41d848:	and    BYTE PTR [edi-0x22],bh
  41d84b:	push   cs
  41d84c:	sub    eax,DWORD PTR [edi]
  41d84e:	jo     0x41d857
  41d850:	fistp  WORD PTR [ebp-0x3b07510e]
  41d856:	adc    BYTE PTR [edi],al
  41d858:	sub    edx,DWORD PTR [eax-0x27]
  41d85b:	pop    edi
  41d85c:	mov    al,ds:0x6c5102db
  41d861:	mov    dl,0xc9
  41d863:	xchg   ecx,eax
  41d864:	push   edi
  41d865:	inc    ecx
  41d866:	add    BYTE PTR [esi-0x17],al
  41d869:	add    BYTE PTR [edi+0x1db70066],dl
  41d86f:	into   
  41d870:	aad    0xe0
  41d872:	das    
  41d873:	pop    esi
  41d874:	push   cs
  41d875:	lahf   
  41d876:	aam    0x4e
  41d878:	out    dx,eax
  41d879:	fld    QWORD PTR [edi-0xef09872]
  41d87f:	cmp    bl,BYTE PTR [edx+0x3c]
  41d882:	cmc    
  41d883:	je     0x41d847
  41d885:	mov    dh,0x5
  41d887:	adc    esi,edi
  41d889:	lea    esi,[ebx+ebp*1+0x1]
  41d88d:	jl     0x41d894
  41d88f:	push   ss
  41d890:	cmp    DWORD PTR [ebx+eiz*8],esi
  41d893:	daa    
  41d894:	sub    DWORD PTR [eax*4-0x3726c92c],edx
  41d89b:	jnp    0x41d8d8
  41d89d:	pop    esi
  41d89e:	jno    0x41d901
  41d8a0:	mov    edi,0x7a4fb44a
  41d8a5:	lods   eax,DWORD PTR ds:[esi]
  41d8a6:	jmp    FWORD PTR ds:[ebx+0x4f63d83f]
  41d8ad:	movmskps edx,xmm0
  41d8b0:	jmp    0xfabf41c2
  41d8b5:	pop    esp
  41d8b6:	call   0x7c30:0x83efc9f
  41d8bd:	mov    al,BYTE PTR [ecx]
  41d8bf:	pop    esp
  41d8c0:	fcomp  DWORD PTR [ebp-0x34]
  41d8c3:	mov    cl,BYTE PTR [ebp-0x3d]
  41d8c6:	cmp    ah,BYTE PTR [esi+0xec0ea9d]
  41d8cc:	adc    dh,BYTE PTR [esi-0x3c38b6d2]
  41d8d2:	mov    DWORD PTR [ebp-0x7764746],esi
  41d8d8:	adc    DWORD PTR [edx+eiz*4+0x4c],edi
  41d8dc:	inc    ebp
  41d8dd:	mov    esp,0xd8e47569
  41d8e2:	mov    bl,0x59
  41d8e4:	imul   ch
  41d8e6:	mov    ebp,0x96bf1e83
  41d8eb:	jge    0x41d90a
  41d8ed:	aad    0x15
  41d8ef:	icebp  
  41d8f0:	ja     0x41d89d
  41d8f2:	aas    
  41d8f3:	cwde   
  41d8f4:	push   es
  41d8f5:	sbb    eax,0x13b547db
  41d8fa:	pop    esp
  41d8fb:	pop    ebx
  41d8fc:	sub    bl,BYTE PTR [ecx+0x740e23c1]
  41d902:	outs   dx,BYTE PTR ds:[esi]
  41d903:	mov    eax,0x526ff354
  41d908:	out    0x31,al
  41d90a:	jne    0x41d8ab
  41d90c:	sbb    eax,0x8d5ab8dd
  41d911:	sahf   
  41d912:	cld    
  41d913:	cmp    ecx,DWORD PTR [edi+0xd]
  41d916:	lods   eax,DWORD PTR ds:[esi]
  41d917:	mov    eax,ds:0x5302d0a7
  41d91c:	fsub   DWORD PTR [esi]
  41d91e:	and    al,0xef
  41d920:	mov    esi,0x6a7bcc4c
  41d925:	mov    bh,0xed
  41d927:	pop    edi
  41d928:	loop   0x41d8bb
  41d92a:	js     0x41d8c0
  41d92c:	sbb    ecx,DWORD PTR [eax-0x1c6b9d05]
  41d932:	ret    0x37f7
  41d935:	mov    edx,0xc36c9793
  41d93a:	iret   
  41d93b:	nop
  41d93c:	jl     0x41d94e
  41d93e:	mov    cl,0x21
  41d940:	aad    0xd9
  41d942:	xchg   ecx,eax
  41d943:	loop   0x41d99a
  41d945:	and    eax,0xbf2dd563
  41d94a:	lock push ecx
  41d94c:	out    0x3c,eax
  41d94e:	clc    
  41d94f:	jne    0x41d933
  41d951:	das    
  41d952:	int3   
  41d953:	dec    eax
  41d954:	jmp    0x41d911
  41d956:	and    DWORD PTR [eax+ebp*2+0x3],edi
  41d95a:	in     al,0x15
  41d95c:	xchg   DWORD PTR [ebx-0x5fe85278],ebp
  41d962:	out    dx,al
  41d963:	jmp    0x41d952
  41d965:	mov    eax,0x39ce4c24
  41d96a:	fwait
  41d96b:	mov    dh,0x4d
  41d96d:	fidiv  DWORD PTR [edi]
  41d96f:	sbb    eax,0x98e46a9a
  41d974:	ret    0x8b64
  41d977:	mov    esp,0x941d5c60
  41d97c:	scas   eax,DWORD PTR es:[edi]
  41d97d:	mov    edx,0xa5104271
  41d982:	pop    es
  41d983:	call   0x6826ee75
  41d988:	aas    
  41d989:	cmp    esi,DWORD PTR [ebx-0x55]
  41d98c:	sbb    DWORD PTR [edi+0x1666c354],esp
  41d992:	pop    ebx
  41d993:	push   ecx
  41d994:	inc    ebp
  41d995:	inc    eax
  41d996:	add    DWORD PTR [edi-0x77bec52e],esi
  41d99c:	sbb    al,0xaa
  41d99e:	ja     0x41d997
  41d9a0:	popf   
  41d9a1:	jle    0x41da1a
  41d9a3:	lods   eax,DWORD PTR ds:[esi]
  41d9a4:	jp     0x41d9ef
  41d9a6:	mov    ch,0x6a
  41d9a8:	xor    ecx,edi
  41d9aa:	data16 mov dh,0x95
  41d9ad:	js     0x41d999
  41d9af:	inc    ecx
  41d9b0:	fnop   
  41d9b2:	push   eax
  41d9b3:	and    BYTE PTR [ecx-0x1c],ch
  41d9b6:	idiv   BYTE PTR [esi]
  41d9b8:	hlt    
  41d9b9:	and    al,0x89
  41d9bb:	pop    ebp
  41d9bc:	or     DWORD PTR [esi+0x7],ebx
  41d9bf:	sbb    al,0xd5
  41d9c1:	cli    
  41d9c2:	in     al,dx
  41d9c3:	jecxz  0x41da40
  41d9c5:	loopne 0x41d9be
  41d9c7:	scas   eax,DWORD PTR es:[edi]
  41d9c8:	das    
  41d9c9:	jns    0x41d9b6
  41d9cb:	shl    DWORD PTR [esi+0x4f],cl
  41d9ce:	pop    ss
  41d9cf:	and    eax,DWORD PTR [ebp+0x4f]
  41d9d2:	mov    ds:0xa0ed9fa,al
  41d9d7:	mov    dl,0x84
  41d9d9:	not    BYTE PTR [ebp-0x39]
  41d9dc:	es int 0xf
  41d9df:	push   edi
  41d9e0:	pop    esi
  41d9e1:	in     al,dx
  41d9e2:	loop   0x41d9bd
  41d9e4:	lds    ebx,FWORD PTR [eax-0x56]
  41d9e7:	sbb    al,0xa7
  41d9e9:	sub    DWORD PTR [esi-0x3e],0x15813c73
  41d9f0:	das    
  41d9f1:	mov    ecx,0x5591581b
  41d9f6:	dec    edx
  41d9f7:	sbb    esi,DWORD PTR [edi-0x3dcb37e9]
  41d9fd:	gs xor eax,0x7396d78d
  41da03:	sbb    al,0x2
  41da05:	(bad)  
  41da06:	mov    ah,0x65
  41da08:	cmp    eax,0x49620235
  41da0d:	ret    
  41da0e:	push   0x769222aa
  41da13:	pop    es
  41da14:	inc    esi
  41da15:	add    al,0x7b
  41da17:	call   0xe996dcb7
  41da1c:	dec    esi
  41da1d:	push   eax
  41da1e:	mov    edi,0x62bea62a
  41da23:	jecxz  0x41da97
  41da25:	in     eax,dx
  41da26:	xchg   ebx,eax
  41da27:	iret   
  41da28:	jmp    0xb9b1:0x26af18f7
  41da2f:	inc    ecx
  41da30:	ficom  WORD PTR [eax+0x58]
  41da33:	fs mov al,0xee
  41da36:	jge    0x41da5d
  41da38:	mov    eax,ds:0xa159497c
  41da3d:	das    
  41da3e:	mov    ds:0xce21525f,eax
  41da43:	mov    eax,0x1b24d86b
  41da48:	(bad)  
  41da49:	addr16 inc edi
  41da4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da4c:	loopne 0x41da12
  41da4e:	cmpps  xmm2,XMMWORD PTR [ebx-0x64],0xfd
  41da53:	pop    ebp
  41da54:	xor    eax,0x8b0a216a
  41da59:	call   FWORD PTR [esi-0x27]
  41da5c:	sub    esp,DWORD PTR ds:0x568163e6
  41da62:	adc    eax,0xa42ef24e
  41da67:	mov    edi,0x382ffadf
  41da6c:	pop    ebx
  41da6d:	ds dec esp
  41da6f:	icebp  
  41da70:	mov    esi,0x3b74f39a
  41da75:	call   0xdbb2:0x3d5eb1ec
  41da7c:	lods   al,BYTE PTR ds:[esi]
  41da7d:	pop    esi
  41da7e:	mov    cs,eax
  41da80:	cli    
  41da81:	inc    ebx
  41da82:	loop   0x41da33
  41da84:	xchg   edx,eax
  41da85:	in     eax,dx
  41da86:	inc    edi
  41da87:	ror    BYTE PTR [esi],cl
  41da89:	sti    
  41da8a:	rcr    DWORD PTR [eax],cl
  41da8c:	or     DWORD PTR [ebp-0x2a],esi
  41da8f:	ins    DWORD PTR es:[edi],dx
  41da90:	add    BYTE PTR [ecx],al
  41da92:	ss in  eax,0xc7
  41da95:	cli    
  41da96:	pusha  
  41da97:	out    dx,al
  41da98:	jne    0x41daf1
  41da9a:	xchg   ecx,eax
  41da9b:	out    0x5e,al
  41da9d:	adc    eax,0x45c5103e
  41daa2:	push   0xffffffd3
  41daa4:	movlps QWORD PTR [edi+0x50a69cd4],xmm0
  41daab:	adc    al,0xd7
  41daad:	loop   0x41dad6
  41daaf:	fiadd  DWORD PTR [ebp+ebp*1+0x6248f8e6]
  41dab6:	dec    ecx
  41dab7:	sbb    DWORD PTR cs:[ebp+0x51cf5274],edi
  41dabe:	sub    ch,bl
  41dac0:	rol    BYTE PTR [edx+0x44],cl
  41dac3:	push   0xe68860c7
  41dac8:	adc    ecx,0xffffffc9
  41dacb:	addr16 dec ebp
  41dacd:	dec    BYTE PTR [edx+0x35]
  41dad0:	das    
  41dad1:	stos   DWORD PTR es:[edi],eax
  41dad2:	das    
  41dad3:	or     eax,0x4261be0f
  41dad8:	mov    al,ds:0x6d605bd3
  41dadd:	retf   
  41dade:	jl     0x41dae2
  41dae0:	sahf   
  41dae1:	inc    ecx
  41dae2:	jle    0x41da86
  41dae4:	rcr    BYTE PTR [edx+0x78],1
  41dae7:	aad    0x58
  41dae9:	addr16 jg 0x41db18
  41daec:	lods   eax,DWORD PTR ds:[esi]
  41daed:	inc    ebx
  41daee:	and    al,0xe5
  41daf0:	rcr    BYTE PTR [edi-0x5f927f57],0x93
  41daf7:	push   edi
  41daf8:	jg     0x41dab7
  41dafa:	out    dx,eax
  41dafb:	jbe    0x41db13
  41dafd:	adc    dl,ch
  41daff:	push   cs
  41db00:	mov    ds:0x9b3a1fe5,al
  41db05:	add    al,0xbc
  41db07:	xchg   ebx,eax
  41db08:	popa   
  41db09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db0a:	mov    bh,0x84
  41db0c:	(bad)  
  41db0d:	xor    ah,bl
  41db0f:	rcl    DWORD PTR ds:0x81a6cb06,0x1a
  41db16:	fcomp  DWORD PTR [ebx-0x791133ca]
  41db1c:	xchg   edx,eax
  41db1d:	rcl    BYTE PTR [ebx+esi*1],cl
  41db20:	and    edx,edx
  41db22:	mov    edx,0x9332226d
  41db27:	mov    dl,BYTE PTR [ebx+0x63]
  41db2a:	(bad)  
  41db2b:	adc    al,0x29
  41db2d:	ror    cl,0x9f
  41db30:	mov    WORD PTR [ebx],cs
  41db32:	(bad)  
  41db33:	fistp  WORD PTR [esi+0x5abf7d2f]
  41db39:	push   ecx
  41db3a:	js     0x41db6b
  41db3c:	into   
  41db3d:	leave  
  41db3e:	dec    edx
  41db3f:	int3   
  41db40:	scas   al,BYTE PTR es:[edi]
  41db41:	dec    ecx
  41db42:	mov    ebx,0xd4121a06
  41db47:	mov    BYTE PTR [ebp-0x1e],0xed
  41db4b:	mov    dl,BYTE PTR [ebx+esi*2]
  41db4e:	and    BYTE PTR [edx+0x4d0b1f94],cl
  41db54:	in     eax,dx
  41db55:	adc    DWORD PTR [esi+ecx*1],0x35a252f0
  41db5c:	cld    
  41db5d:	jmp    0x76d4869
  41db62:	scas   al,BYTE PTR es:[edi]
  41db63:	lods   eax,DWORD PTR ds:[esi]
  41db64:	add    eax,0x9e671827
  41db69:	sahf   
  41db6a:	xchg   ebp,eax
  41db6b:	imul   edi,esp,0x50
  41db6e:	xor    bh,BYTE PTR [edx-0x62b6ba25]
  41db74:	jmp    0x41dbed
  41db76:	mov    dh,0xb3
  41db78:	and    BYTE PTR [edi-0x52fee9bd],dh
  41db7e:	pop    ecx
  41db7f:	inc    ebx
  41db80:	mov    al,0x81
  41db82:	bound  esp,QWORD PTR [edx+0x8]
  41db85:	cmp    al,0x5b
  41db87:	adc    DWORD PTR [ebx+0x7d],eax
  41db8a:	add    ecx,ebp
  41db8c:	mov    ecx,0xee9ad7d8
  41db91:	mov    BYTE PTR [ecx],cl
  41db93:	add    ebp,DWORD PTR [edi]
  41db95:	sti    
  41db96:	cmp    eax,esi
  41db98:	fsub   DWORD PTR [eax]
  41db9a:	lods   al,BYTE PTR ds:[esi]
  41db9b:	push   cs
  41db9c:	xchg   esi,eax
  41db9d:	loope  0x41dbd9
  41db9f:	add    bh,BYTE PTR [eax+0x2217aea5]
  41dba5:	jp     0x41db9b
  41dba7:	sub    al,0x9f
  41dba9:	loop   0x41dbf6
  41dbab:	lahf   
  41dbac:	push   ebp
  41dbad:	pop    edx
  41dbae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbaf:	inc    ebx
  41dbb0:	loope  0x41dbed
  41dbb2:	ds push eax
  41dbb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbb5:	lods   al,BYTE PTR ds:[esi]
  41dbb6:	mov    esi,0x64459a3b
  41dbbb:	fsubp  st(7),st
  41dbbd:	repz adc bh,BYTE PTR [edi+0x28]
  41dbc1:	dec    ebp
  41dbc2:	ret    
  41dbc3:	sbb    dh,dl
  41dbc5:	pop    ebp
  41dbc6:	dec    eax
  41dbc7:	(bad)  
  41dbc8:	jge    0x41dbfe
  41dbca:	inc    eax
  41dbcb:	outs   dx,BYTE PTR ds:[esi]
  41dbcc:	adc    edx,esi
  41dbce:	out    dx,al
  41dbcf:	push   ebx
  41dbd0:	bound  edx,QWORD PTR [ebx+eax*2+0x4f]
  41dbd4:	stos   BYTE PTR es:[edi],al
  41dbd5:	popa   
  41dbd6:	add    bh,BYTE PTR [ebx]
  41dbd8:	rcl    BYTE PTR [ecx],0xdd
  41dbdb:	adc    al,0x74
  41dbdd:	xchg   edx,eax
  41dbde:	dec    esi
  41dbdf:	jae    0x41db8b
  41dbe1:	dec    ecx
  41dbe2:	lods   al,BYTE PTR ds:[esi]
  41dbe3:	cmp    eax,0xd979137e
  41dbe8:	mov    eax,ds:0x6b8bf7a4
  41dbed:	and    BYTE PTR ds:0x27e3e62b,bh
  41dbf3:	outs   dx,DWORD PTR ds:[esi]
  41dbf4:	mov    al,0x41
  41dbf6:	clc    
  41dbf7:	mov    ebp,0xd3dbdf7a
  41dbfc:	xor    DWORD PTR ds:0x2c801d6f,ebx
  41dc02:	adc    dh,BYTE PTR [edx+edi*2]
  41dc05:	mov    ds:0xd48ae0a7,eax
  41dc0a:	pusha  
  41dc0b:	popf   
  41dc0c:	xrelease xchg BYTE PTR [ecx],ah
  41dc0f:	add    BYTE PTR [ebx+0x519b35f8],dl
  41dc15:	push   ebx
  41dc16:	nop
  41dc17:	inc    ecx
  41dc18:	jbe    0x41dbf3
  41dc1a:	bound  ebx,QWORD PTR [ecx-0x5ca2e42f]
  41dc20:	push   esp
  41dc21:	test   DWORD PTR [ecx],esi
  41dc23:	mov    dl,0x48
  41dc25:	sbb    al,0xfc
  41dc27:	dec    esi
  41dc28:	mov    bh,0x7d
  41dc2a:	push   cs
  41dc2b:	dec    ebx
  41dc2c:	pop    ebp
  41dc2d:	sbb    edx,eax
  41dc2f:	cmp    ebp,ebp
  41dc31:	and    DWORD PTR [ebp+0x7f1a98b4],edx
  41dc37:	cld    
  41dc38:	fdivr  DWORD PTR [esi]
  41dc3a:	(bad)  
  41dc3b:	stc    
  41dc3c:	add    al,0x43
  41dc3e:	sbb    eax,0x93bb9a9
  41dc43:	mov    al,ds:0x2f922caf
  41dc48:	xchg   ebx,eax
  41dc49:	leave  
  41dc4a:	loope  0x41dc1a
  41dc4c:	call   0xefdd073e
  41dc51:	les    esi,FWORD PTR ss:[eax-0x557231b9]
  41dc58:	jmp    0xcdc6:0x113eb3de
  41dc5f:	cmc    
  41dc60:	push   esp
  41dc61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc62:	(bad)  
  41dc63:	pop    ecx
  41dc64:	xchg   ebx,eax
  41dc65:	pop    ss
  41dc66:	cli    
  41dc67:	stc    
  41dc68:	add    al,0x96
  41dc6a:	js     0x41dcda
  41dc6c:	and    DWORD PTR [eax-0xb],0x115ed10a
  41dc73:	xchg   ebp,eax
  41dc74:	cdq    
  41dc75:	(bad)  
  41dc76:	(bad)  
  41dc77:	mov    ebp,DWORD PTR [edi+edx*4+0x46]
  41dc7b:	mov    ebp,0x3a477ab3
  41dc80:	jbe    0x41dca0
  41dc82:	xlat   BYTE PTR ds:[ebx]
  41dc83:	div    BYTE PTR [ebx+0x48f94f98]
  41dc89:	push   esi
  41dc8a:	cmp    bh,BYTE PTR [eax+0x7e6c8722]
  41dc90:	mov    dh,0x77
  41dc92:	cmp    edi,DWORD PTR [eax+0x740967dd]
  41dc98:	mov    esi,edi
  41dc9a:	imul   DWORD PTR [esi]
  41dc9c:	mov    bl,0xd2
  41dc9e:	mov    BYTE PTR [eax],ah
  41dca0:	mov    al,ds:0x9b129a54
  41dca5:	add    bh,BYTE PTR [ecx+0x75fa09c6]
  41dcab:	xor    edi,esp
  41dcad:	fld1   
  41dcaf:	jae    0x41dc6a
  41dcb1:	mov    esp,0x1cff3e79
  41dcb6:	dec    edx
  41dcb7:	leave  
  41dcb8:	mov    cl,0x4b
  41dcba:	imul   ebx,DWORD PTR [ecx],0x10
  41dcbd:	out    dx,eax
  41dcbe:	inc    esp
  41dcbf:	and    BYTE PTR [ebx],bl
  41dcc1:	lds    esi,FWORD PTR [ebx+0x68]
  41dcc4:	jle    0x41dc95
  41dcc6:	mov    ds:0xe3c62efa,eax
  41dccb:	pushf  
  41dccc:	inc    ebp
  41dccd:	cld    
  41dcce:	sub    al,0x56
  41dcd0:	and    ah,BYTE PTR [eax+0x53]
  41dcd3:	mov    dh,0x6e
  41dcd5:	mov    cl,0x76
  41dcd7:	rcr    DWORD PTR [esi-0x62],0xa6
  41dcdb:	xor    eax,0x9e3a10ed
  41dce0:	mov    esi,0x3f93c4ee
  41dce5:	xchg   al,ah
  41dce7:	xchg   cl,ah
  41dce9:	int3   
  41dcea:	inc    esi
  41dceb:	cmp    ebx,ecx
  41dced:	call   0x4031:0x38c0b541
  41dcf4:	jge    0x41dd38
  41dcf6:	xor    eax,DWORD PTR [edi+ebp*2]
  41dcf9:	jno    0x41dcf7
  41dcfb:	lds    esi,FWORD PTR [esi+eax*2+0x793adcf]
  41dd02:	cmp    edi,DWORD PTR [esi]
  41dd04:	mov    edi,0x7f71c05c
  41dd09:	in     al,0x22
  41dd0b:	repz sub DWORD PTR [eax-0x7ae36aa3],eax
  41dd12:	xchg   edi,eax
  41dd13:	pop    edx
  41dd14:	es jmp 0x41dcf1
  41dd17:	jle    0x41dd6b
  41dd19:	xchg   ebx,eax
  41dd1a:	pop    ebp
  41dd1b:	imul   edx,DWORD PTR [eax-0x5cc0a336],0x40fb4ae7
  41dd25:	push   0xe8301c95
  41dd2a:	(bad)  
  41dd2b:	xchg   edi,eax
  41dd2c:	add    edi,DWORD PTR [ebx-0x1fda78e9]
  41dd32:	ins    BYTE PTR es:[edi],dx
  41dd33:	je     0x41dd36
  41dd35:	(bad)  
  41dd37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd38:	jns    0x41dd03
  41dd3a:	pusha  
  41dd3b:	aas    
  41dd3c:	pushf  
  41dd3d:	mov    dl,0x62
  41dd3f:	add    eax,0x60863486
  41dd44:	mov    WORD PTR [eax],?
  41dd46:	xchg   edx,eax
  41dd47:	(bad)  
  41dd49:	add    BYTE PTR [ecx],dl
  41dd4b:	es stc 
  41dd4d:	xchg   DWORD PTR [eax-0x20],esi
  41dd50:	push   eax
  41dd51:	into   
  41dd52:	bound  edi,QWORD PTR [esi+0x13]
  41dd55:	xor    edi,0x1a
  41dd58:	mov    ecx,0x477b9e43
  41dd5d:	out    0x85,eax
  41dd5f:	fcomp  st(0)
  41dd61:	lahf   
  41dd62:	xsave  [edx+0x6bb47e4c]
  41dd69:	add    BYTE PTR [ebx+0x2e],dh
  41dd6c:	add    al,0x8f
  41dd6f:	inc    ebp
  41dd70:	les    esp,FWORD PTR ds:0x6814d748
  41dd76:	jg     0x41dd95
  41dd78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd79:	push   esp
  41dd7a:	sti    
  41dd7b:	push   es
  41dd7c:	jp     0x41ddd0
  41dd7e:	aam    0xf8
  41dd80:	jle    0x41dd4a
  41dd82:	js     0x41ddff
  41dd84:	lods   al,BYTE PTR ds:[esi]
  41dd85:	and    BYTE PTR [ebx-0x6d666753],0x8e
  41dd8c:	or     dh,0xd9
  41dd8f:	and    DWORD PTR [esi-0x5d4afd76],0x29
  41dd96:	in     eax,0x83
  41dd98:	stos   DWORD PTR es:[edi],eax
  41dd99:	dec    edi
  41dd9a:	lds    edi,FWORD PTR [esi+0x6f]
  41dd9d:	mov    ecx,0x6fdeab1f
  41dda2:	call   0x210e:0xa6118a46
  41dda9:	pop    es
  41ddaa:	mov    DWORD PTR [edx+edx*8],esp
  41ddad:	pop    ss
  41ddae:	fsubr  DWORD PTR [esi-0x30]
  41ddb1:	adc    BYTE PTR [ecx+0x7c],bl
  41ddb4:	push   edi
  41ddb5:	inc    ebx
  41ddb6:	mov    al,0xf4
  41ddb8:	loopne 0x41ddcb
  41ddba:	xor    al,0x70
  41ddbc:	mov    dl,ch
  41ddbe:	xchg   esp,eax
  41ddbf:	or     BYTE PTR [edx+ecx*8+0x39],cl
  41ddc3:	stos   DWORD PTR es:[edi],eax
  41ddc4:	in     eax,dx
  41ddc5:	mov    esi,0xe74ba44c
  41ddca:	push   esi
  41ddcb:	aam    0xe9
  41ddcd:	mov    eax,0x4f4836d8
  41ddd2:	push   cs
  41ddd3:	jne    0x41ddf2
  41ddd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddd6:	scas   eax,DWORD PTR es:[edi]
  41ddd7:	mov    eax,DWORD PTR [edx-0x68]
  41ddda:	setno  BYTE PTR [esi]
  41dddd:	sahf   
  41ddde:	mov    BYTE PTR [ebx],dl
  41dde0:	dec    edx
  41dde1:	gs into 
  41dde3:	cld    
  41dde4:	(bad)  [edx+edi*4-0x74d04ef8]
  41ddeb:	jecxz  0x41de66
  41dded:	sbb    bl,BYTE PTR [esi+0x1df84747]
  41ddf3:	xor    BYTE PTR [edx+0x29],cl
  41ddf6:	sub    DWORD PTR [ecx],esi
  41ddf8:	jno    0x41de5a
  41ddfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddfb:	data16 (bad) 
  41ddfd:	xchg   ebp,eax
  41ddfe:	les    ebx,FWORD PTR [ebx+0x55]
  41de01:	cli    
  41de02:	jmp    0xb2ce5d19
  41de07:	mov    WORD PTR [ebx],ss
  41de09:	(bad)  
  41de0a:	mov    eax,0xaf7e04c9
  41de0f:	mov    bh,0xe7
  41de11:	mov    fs,WORD PTR [ebx]
  41de13:	sub    ch,0xe5
  41de16:	pop    es
  41de17:	adc    ah,bh
  41de19:	add    al,0x73
  41de1b:	mov    al,0xa0
  41de1d:	lods   al,BYTE PTR ds:[esi]
  41de1e:	repnz and dh,BYTE PTR [esi+0x1acfa66e]
  41de25:	and    BYTE PTR ss:[esi],0x78
  41de29:	xchg   esp,eax
  41de2a:	ins    WORD PTR es:[edi],dx
  41de2c:	add    ebp,esp
  41de2e:	(bad)  
  41de2f:	in     al,0x77
  41de31:	call   0xcede:0x8f04ddc9
  41de38:	push   ecx
  41de39:	imul   ebx,DWORD PTR [ebx+ecx*1],0xffffffeb
  41de3d:	cli    
  41de3e:	sub    ebp,DWORD PTR [esi]
  41de40:	jmp    0x41de61
  41de42:	mov    al,0x6e
  41de44:	test   eax,0x39cd4b64
  41de49:	pop    ebp
  41de4a:	xchg   esi,eax
  41de4b:	jo     0x41de55
  41de4d:	in     al,dx
  41de4e:	mov    edi,0x813a228d
  41de53:	nop
  41de54:	or     BYTE PTR [ecx-0x6ba8e5dc],0x43
  41de5b:	out    dx,al
  41de5c:	loop   0x41de70
  41de5e:	pusha  
  41de5f:	repz ss dec edi
  41de62:	in     al,0x23
  41de64:	pop    DWORD PTR [eax-0x14906770]
  41de6a:	mov    cl,0x2b
  41de6c:	fld    TBYTE PTR [edi]
  41de6e:	shl    DWORD PTR [edi+esi*2-0x8],1
  41de72:	cdq    
  41de73:	xchg   esi,eax
  41de74:	rcr    DWORD PTR [esi-0x5bfe980e],1
  41de7a:	jns    0x41de49
  41de7c:	pop    ebp
  41de7d:	cwde   
  41de7e:	sub    eax,0x1aacadf7
  41de83:	push   0x7fbb0b3e
  41de88:	iret   
  41de89:	jge    0x41de9b
  41de8b:	fisubr DWORD PTR [ecx-0x69939f30]
  41de91:	jg     0x41de63
  41de93:	test   BYTE PTR [ecx+ebx*1],cl
  41de96:	mov    esi,0x8042125b
  41de9b:	mov    al,0xb9
  41de9d:	jae    0x41df0d
  41de9f:	daa    
  41dea0:	scas   eax,DWORD PTR es:[edi]
  41dea1:	mov    fs,WORD PTR [ecx]
  41dea3:	ficom  DWORD PTR [edx]
  41dea5:	int3   
  41dea6:	in     eax,0x52
  41dea8:	adc    ebp,DWORD PTR [ebx+0x27eb2e1d]
  41deae:	lods   eax,DWORD PTR ds:[esi]
  41deaf:	add    al,0x9e
  41deb1:	sbb    BYTE PTR [eax-0x94559a5],0x8a
  41deb8:	mov    BYTE PTR [ecx],dh
  41deba:	sub    ecx,DWORD PTR [ebx+0x9]
  41debd:	xor    BYTE PTR [edi],bh
  41debf:	dec    ebx
  41dec0:	ror    DWORD PTR [edx],0xc1
  41dec3:	sbb    BYTE PTR [ebx+esi*8+0x87e0e6f],0x72
  41decb:	call   0x2cad:0x3f1ccfcb
  41ded2:	adc    al,0x6a
  41ded4:	add    ebp,DWORD PTR [esi+0x7a]
  41ded7:	pop    edx
  41ded8:	pop    ds
  41ded9:	gs jb  0x41de7a
  41dedc:	int3   
  41dedd:	repz jno 0x41dea5
  41dee0:	sub    al,0x4b
  41dee2:	cmp    BYTE PTR [esi-0x66f911e2],dl
  41dee8:	rcr    al,1
  41deea:	ins    BYTE PTR es:[edi],dx
  41deeb:	push   0xffffffdf
  41deed:	in     eax,0xb2
  41deef:	fild   WORD PTR [edi+0x0]
  41def2:	adc    BYTE PTR [ebx],ah
  41def4:	cli    
  41def5:	dec    ebp
  41def6:	or     dl,ah
  41def8:	or     DWORD PTR [ebx+esi*2-0x1b7cea76],edx
  41deff:	cmp    esp,DWORD PTR [edi+ebx*4-0x32]
  41df03:	or     BYTE PTR [eax],0xce
  41df06:	jecxz  0x41df5e
  41df08:	or     DWORD PTR [ebx],esi
  41df0a:	ja     0x41df82
  41df0c:	outs   dx,DWORD PTR ds:[esi]
  41df0d:	push   cs
  41df0e:	das    
  41df0f:	or     ch,0x95
  41df12:	mov    cl,0x10
  41df14:	mov    edi,0xa8c67f08
  41df19:	xchg   esp,eax
  41df1a:	test   DWORD PTR [edi],0xe836407e
  41df20:	(bad)  
  41df21:	adc    eax,0x9100e671
  41df26:	je     0x41deb4
  41df28:	out    dx,al
  41df29:	dec    eax
  41df2a:	aas    
  41df2b:	dec    eax
  41df2c:	retf   0x77a1
  41df2f:	jmp    0x55a34799
  41df34:	add    BYTE PTR [ecx-0x7c],bl
  41df37:	ss out dx,eax
  41df39:	aam    0x8c
  41df3b:	fistp  WORD PTR [ebx+edx*8+0x4d]
  41df3f:	sub    bh,bl
  41df41:	pop    esi
  41df42:	popf   
  41df43:	in     eax,0xf5
  41df45:	addr16 jnp 0x41dee3
  41df48:	ret    
  41df49:	rep ins DWORD PTR es:[edi],dx
  41df4b:	add    al,0x58
  41df4d:	ins    DWORD PTR es:[edi],dx
  41df4e:	push   edx
  41df4f:	push   edi
  41df50:	stos   BYTE PTR es:[edi],al
  41df51:	and    DWORD PTR [eax+0x4b8e7d88],eax
  41df57:	adc    eax,0x4d633015
  41df5c:	mov    edx,0x2ade5228
  41df61:	loopne 0x41df88
  41df63:	arpl   bp,di
  41df65:	ret    0x3a0f
  41df68:	cdq    
  41df69:	(bad)  
  41df6a:	shl    DWORD PTR [ebp+0x17279ab5],0xc
  41df71:	jns    0x41df05
  41df73:	call   0x2310:0x6d98d763
  41df7a:	int3   
  41df7b:	jo     0x41df3a
  41df7d:	scas   eax,DWORD PTR es:[edi]
  41df7e:	pusha  
  41df7f:	cmp    BYTE PTR [edx],dh
  41df81:	push   ecx
  41df82:	jbe    0x41df2a
  41df84:	loope  0x41dfef
  41df86:	mov    ebp,0x90209a5d
  41df8b:	ins    DWORD PTR es:[edi],dx
  41df8c:	mov    al,0x65
  41df8e:	push   edi
  41df8f:	mov    gs,WORD PTR [edx+0x69]
  41df92:	pop    es
  41df93:	psubsb mm1,QWORD PTR [esp+edx*2]
  41df97:	inc    esp
  41df98:	es popf 
  41df9a:	inc    eax
  41df9b:	jp     0x41df9f
  41df9d:	popf   
  41df9e:	pop    ecx
  41df9f:	mov    esp,0xadc1b542
  41dfa4:	or     eax,0xcf084d
  41dfa9:	and    DWORD PTR [edi],esp
  41dfab:	xor    cl,BYTE PTR [eax+ebx*8]
  41dfae:	enter  0x37ee,0xfc
  41dfb2:	adc    DWORD PTR [esi],ebp
  41dfb4:	sub    al,0xd
  41dfb6:	fistp  WORD PTR [ecx-0x53b3708]
  41dfbc:	adc    BYTE PTR [eax+0x7295dcca],ah
  41dfc2:	rcl    BYTE PTR [esi],cl
  41dfc4:	adc    BYTE PTR [esi+0x4],0x25
  41dfc8:	pop    eax
  41dfc9:	mov    cl,0x65
  41dfcb:	(bad)  
  41dfcd:	fsub   DWORD PTR ds:0xfeccfd54
  41dfd3:	mov    edi,DWORD PTR [ebp+0x1f8c17ab]
  41dfd9:	ins    DWORD PTR es:[edi],dx
  41dfda:	push   edx
  41dfdb:	xor    DWORD PTR [esi+0x3b],esp
  41dfde:	neg    edi
  41dfe0:	out    dx,eax
  41dfe1:	adc    bh,BYTE PTR [ebp+0x67ec25a3]
  41dfe7:	fdiv   QWORD PTR [ecx]
  41dfe9:	sti    
  41dfea:	clc    
  41dfeb:	pop    ss
  41dfec:	pop    ebp
  41dfed:	nop
  41dfee:	enter  0x83ea,0xed
  41dff2:	cmp    al,0xfb
  41dff4:	adc    al,0x1b
  41dff6:	sbb    eax,0x9b735b60
  41dffb:	jge    0x41df96
  41dffd:	test   BYTE PTR ds:0x50e6ee6f,0xf1
  41e004:	or     ch,BYTE PTR [edx-0x3b]
  41e007:	mov    ah,0x7a
  41e009:	ret    
  41e00a:	popf   
  41e00b:	sub    ah,BYTE PTR [esi-0x11]
  41e00e:	add    al,0xe7
  41e010:	clc    
  41e011:	(bad)  
  41e012:	and    BYTE PTR [esi],dh
  41e014:	ins    BYTE PTR es:[edi],dx
  41e015:	mov    edx,?
  41e017:	pop    eax
  41e018:	sar    DWORD PTR [edx+ecx*4-0x6656935d],cl
  41e01f:	pop    esp
  41e020:	or     eax,0x9043e2f8
  41e025:	mov    ds:0x72d669ff,eax
  41e02a:	loop   0x41e08b
  41e02c:	cwde   
  41e02d:	cmp    DWORD PTR [esi],eax
  41e02f:	call   0x4892:0x9c0825b4
  41e036:	and    eax,0x54b959e1
  41e03b:	jg     0x41dff6
  41e03d:	mov    bl,0x1d
  41e03f:	icebp  
  41e040:	fld    QWORD PTR [ecx]
  41e042:	add    BYTE PTR [edx],ch
  41e044:	fdivr  DWORD PTR [esi+0xe]
  41e047:	test   eax,0x970731ed
  41e04c:	and    edx,DWORD PTR [ebx+0x76]
  41e04f:	aaa    
  41e050:	or     eax,0x30d1ec2a
  41e055:	in     al,0xb8
  41e057:	neg    BYTE PTR [esi+eax*4+0x56]
  41e05b:	adc    esp,ebx
  41e05d:	cmp    al,0xd1
  41e05f:	add    bl,BYTE PTR [edx+0x61]
  41e062:	dec    ebx
  41e063:	ds int3 
  41e065:	test   BYTE PTR [esi],0xc5
  41e068:	outs   dx,BYTE PTR ds:[esi]
  41e069:	xchg   ecx,eax
  41e06a:	add    eax,edx
  41e06c:	in     al,0x59
  41e06e:	test   ebp,ecx
  41e070:	and    DWORD PTR [esi+0x5d3e4aa3],edi
  41e076:	(bad)  
  41e077:	dec    edx
  41e078:	idiv   BYTE PTR [ecx+0x309ad2ae]
  41e07e:	xor    dl,BYTE PTR [edi+0x77e8aed4]
  41e084:	or     al,0x21
  41e086:	xor    bh,dl
  41e088:	add    eax,0x46aa95ab
  41e08d:	or     esp,DWORD PTR [edx+0x2f]
  41e090:	fucomip st,st(0)
  41e092:	or     eax,0x2dd2bb68
  41e097:	sbb    bl,BYTE PTR [esp+eax*4-0x1f]
  41e09b:	dec    esi
  41e09c:	(bad)  
  41e09d:	fild   WORD PTR [ecx+0x5b]
  41e0a0:	ret    
  41e0a1:	daa    
  41e0a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0a3:	pushf  
  41e0a4:	les    ecx,FWORD PTR gs:[esi+0x71]
  41e0a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0a9:	(bad)  
  41e0aa:	mov    al,ds:0xc4b020fd
  41e0af:	test   BYTE PTR [edi],dh
  41e0b1:	cmp    ah,al
  41e0b3:	and    BYTE PTR [ebx-0x31],dl
  41e0b6:	(bad)  
  41e0b7:	jg     0x41e0fb
  41e0b9:	iret   
  41e0ba:	pop    esp
  41e0bb:	gs (bad) 
  41e0bd:	je     0x41e05d
  41e0bf:	and    BYTE PTR [edx+ebx*2+0x51513913],0x7d
  41e0c7:	fwait
  41e0c8:	ins    BYTE PTR es:[edi],dx
  41e0c9:	fwait
  41e0ca:	sbb    al,BYTE PTR [ecx]
  41e0cc:	jae    0x41e115
  41e0ce:	adc    ebp,DWORD PTR [edi-0x48]
  41e0d1:	mov    dl,0x9f
  41e0d3:	push   ebp
  41e0d4:	out    0x79,eax
  41e0d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0d8:	ret    
  41e0d9:	clc    
  41e0da:	fs daa 
  41e0dc:	jg     0x41e09d
  41e0de:	popa   
  41e0df:	cmovnp esp,DWORD PTR [ecx]
  41e0e2:	pop    DWORD PTR [ebp+0x44dc22fa]
  41e0e8:	pop    eax
  41e0e9:	or     ah,ah
  41e0eb:	pop    ebx
  41e0ec:	jno    0x41e16d
  41e0ee:	mov    al,0x85
  41e0f0:	xchg   esp,eax
  41e0f1:	inc    ecx
  41e0f2:	out    0x38,al
  41e0f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0f6:	loopne 0x41e087
  41e0f8:	add    BYTE PTR [edi-0x1b9195d],bh
  41e0fe:	jmp    0x41e0ae
  41e100:	push   ebp
  41e101:	cdq    
  41e102:	adc    DWORD PTR [eax+0x3],esi
  41e105:	dec    edx
  41e106:	retf   
  41e107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e108:	adc    ebp,DWORD PTR [esi-0x508b7f49]
  41e10e:	push   ebx
  41e10f:	pop    ecx
  41e110:	push   ss
  41e111:	cli    
  41e112:	sahf   
  41e113:	push   eax
  41e114:	mov    al,bl
  41e116:	dec    esi
  41e117:	push   ss
  41e118:	pop    ss
  41e119:	cli    
  41e11a:	or     BYTE PTR [esi+0x4a],ah
  41e11d:	pop    ebp
  41e11e:	stos   DWORD PTR es:[edi],eax
  41e11f:	xor    DWORD PTR [edx-0x5af83f9d],0x60349865
  41e129:	(bad)  
  41e12a:	out    dx,al
  41e12b:	jo     0x41e14a
  41e12d:	js     0x41e13d
  41e12f:	lods   eax,DWORD PTR ds:[esi]
  41e130:	jns    0x41e0dd
  41e132:	pop    es
  41e133:	movhps xmm2,QWORD PTR [eax+0x2e5590f3]
  41e13a:	jp     0x41e1b2
  41e13c:	lods   al,BYTE PTR ds:[esi]
  41e13d:	adc    BYTE PTR [esi-0x2a],ch
  41e140:	jp     0x41e1a0
  41e142:	xchg   ebp,eax
  41e143:	fbstp  TBYTE PTR [ebp-0x60]
  41e146:	mov    edi,0x2a133357
  41e14b:	inc    edx
  41e14c:	cdq    
  41e14d:	pop    eax
  41e14e:	sub    al,0xe3
  41e150:	xchg   edx,eax
  41e151:	dec    ebp
  41e152:	ja     0x41e0f3
  41e154:	xor    eax,0xfc489569
  41e159:	call   0x12f6ca7f
  41e15e:	clc    
  41e15f:	push   es
  41e160:	xchg   edx,eax
  41e161:	cs repz push ds
  41e164:	jae    0x41e1d8
  41e166:	pop    esi
  41e167:	ret    0x56b
  41e16a:	clc    
  41e16b:	mov    ch,BYTE PTR [esp+ebx*1-0x3b44f233]
  41e172:	add    BYTE PTR [ecx+0x77],bl
  41e175:	idiv   BYTE PTR [ecx+0x58868be5]
  41e17b:	lea    ebp,[edi+0x372cc280]
  41e181:	hlt    
  41e182:	push   ebp
  41e183:	int3   
  41e184:	inc    esi
  41e185:	dec    ecx
  41e186:	mov    esp,0xcf3eb841
  41e18b:	jnp    0x41e1f7
  41e18d:	dec    esp
  41e18e:	and    ecx,eax
  41e190:	lahf   
  41e191:	and    ebp,ebp
  41e193:	aad    0x80
  41e195:	in     eax,dx
  41e196:	cmp    DWORD PTR [edx],0xffffffed
  41e199:	pop    edx
  41e19a:	nop
  41e19b:	sbb    ebp,0xffffffff
  41e19e:	mov    ds:0x41174993,al
  41e1a3:	xor    cl,ah
  41e1a5:	or     edx,DWORD PTR [esi-0x7f]
  41e1a8:	mov    eax,0xb24276d6
  41e1ad:	ret    
  41e1ae:	test   BYTE PTR [edi-0x2d],0x65
  41e1b2:	mov    al,0x43
  41e1b4:	cli    
  41e1b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1b6:	inc    ebp
  41e1b7:	push   edx
  41e1b8:	out    dx,al
  41e1b9:	scas   al,BYTE PTR es:[edi]
  41e1ba:	fisttp DWORD PTR [ebp-0x5039a380]
  41e1c0:	and    dh,cl
  41e1c2:	sub    BYTE PTR [esi],dl
  41e1c4:	adc    ch,BYTE PTR [eax-0x39484c66]
  41e1ca:	scas   eax,DWORD PTR es:[edi]
  41e1cb:	adc    ebp,eax
  41e1cd:	inc    ebp
  41e1ce:	dec    esi
  41e1cf:	sub    eax,0x247d3e4d
  41e1d4:	repz push esi
  41e1d6:	jo     0x41e1d2
  41e1d8:	adc    edx,DWORD PTR [esi-0x34bad30d]
  41e1de:	out    dx,eax
  41e1df:	not    BYTE PTR ds:0x34713705
  41e1e5:	cwde   
  41e1e6:	adc    DWORD PTR [eax-0x6888876],ecx
  41e1ec:	adc    eax,0x60cfb7cc
  41e1f1:	(bad)  
  41e1f2:	cli    
  41e1f3:	aad    0x2c
  41e1f5:	xchg   esp,eax
  41e1f6:	sub    esp,DWORD PTR [ecx-0x5fd5640f]
  41e1fc:	jno    0x41e18d
  41e1fe:	xor    al,0xb8
  41e200:	jmp    0x41e214
  41e202:	jbe    0x41e23d
  41e204:	aad    0x1d
  41e206:	push   edx
  41e207:	cmp    edx,DWORD PTR [ebp-0x36]
  41e20a:	mov    cl,0xf7
  41e20c:	cmp    eax,0x77d4d0f2
  41e211:	arpl   WORD PTR ds:0xdb33a407,bp
  41e217:	xlat   BYTE PTR ds:[ebx]
  41e218:	adc    BYTE PTR [eax-0x18b29172],0x5
  41e21f:	sti    
  41e220:	nop
  41e221:	cmp    cl,ah
  41e223:	sbb    eax,0x7731dd1e
  41e228:	adc    esp,DWORD PTR [ebx]
  41e22a:	sbb    eax,0x3c0d5eef
  41e22f:	int3   
  41e230:	mov    cl,0xc5
  41e232:	and    bh,BYTE PTR [esi]
  41e234:	call   0xc780:0x13e1ce01
  41e23b:	and    eax,0x34d88b65
  41e240:	arpl   bp,si
  41e242:	jns    0x41e28c
  41e244:	push   0xbb4c69d2
  41e249:	xor    dh,BYTE PTR [edx+0x471042e2]
  41e24f:	sub    BYTE PTR [ecx+0x50898a98],ch
  41e255:	repnz dec eax
  41e257:	and    al,0xa1
  41e259:	jno    0x41e254
  41e25b:	dec    edx
  41e25c:	sbb    eax,0xa9034a96
  41e261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e262:	xor    dl,BYTE PTR [eax]
  41e264:	loope  0x41e2b3
  41e266:	sbb    al,0x5e
  41e268:	mov    edx,0x346b3f41
  41e26d:	adc    esi,DWORD PTR [edi-0x54373260]
  41e273:	test   esp,0x76c25c0d
  41e279:	sar    DWORD PTR [esi],0xc0
  41e27c:	iret   
  41e27d:	dec    edi
  41e27e:	in     eax,dx
  41e27f:	jmp    0x568bf037
  41e284:	(bad)  
  41e285:	mov    edi,0x81745e83
  41e28a:	adc    DWORD PTR [ebx+0x64dc7b35],ebp
  41e290:	push   0x9
  41e292:	ja     0x41e30f
  41e294:	jo     0x41e300
  41e296:	fmul   QWORD PTR [edi]
  41e298:	(bad)  
  41e299:	mov    ebp,0xc5fc1d4e
  41e29e:	adc    ch,ch
  41e2a0:	sub    al,0xf6
  41e2a2:	pop    edi
  41e2a3:	inc    ebx
  41e2a4:	popf   
  41e2a5:	adc    al,0xa7
  41e2a7:	jmp    0xaafdf66a
  41e2ac:	xlat   BYTE PTR ds:[ebx]
  41e2ad:	mov    ah,0xa4
  41e2af:	sbb    ecx,DWORD PTR [edx-0x6e]
  41e2b2:	lods   al,BYTE PTR ds:[esi]
  41e2b3:	or     eax,0x7fa52431
  41e2b8:	out    0xad,al
  41e2ba:	repz or DWORD PTR [eax],ecx
  41e2bd:	jle    0x41e241
  41e2bf:	push   ebx
  41e2c0:	addr16 dec ecx
  41e2c2:	dec    ebx
  41e2c3:	push   edx
  41e2c4:	(bad)  
  41e2c5:	mov    eax,0x4fa134be
  41e2ca:	sub    esp,ebp
  41e2cc:	push   ebx
  41e2cd:	lods   eax,DWORD PTR ds:[esi]
  41e2ce:	cdq    
  41e2cf:	pop    es
  41e2d0:	push   ecx
  41e2d1:	push   ds
  41e2d2:	pop    esi
  41e2d3:	pop    es
  41e2d4:	mov    DWORD PTR [eax+0x24],esp
  41e2d7:	inc    esp
  41e2d8:	adc    al,0x91
  41e2da:	mov    eax,ds:0x2dc86b91
  41e2df:	daa    
  41e2e0:	push   esi
  41e2e1:	lds    edx,FWORD PTR [ecx]
  41e2e3:	push   es
  41e2e4:	into   
  41e2e5:	aaa    
  41e2e6:	pop    ebp
  41e2e7:	ins    BYTE PTR es:[edi],dx
  41e2e8:	sub    BYTE PTR [ecx+0x7b],dh
  41e2eb:	imul   BYTE PTR [ecx-0x60]
  41e2ee:	ja     0x41e34b
  41e2f0:	call   0x381b:0x1f971484
  41e2f7:	stos   DWORD PTR es:[edi],eax
  41e2f8:	data16 xchg BYTE PTR [ebx-0x2faad99],cl
  41e2ff:	push   0x6a975551
  41e304:	mov    bl,0xff
  41e306:	test   eax,0x2d4ff881
  41e30b:	pop    esi
  41e30c:	xor    al,BYTE PTR [eax-0x6a]
  41e30f:	mov    bl,BYTE PTR [edi+edi*8-0x61]
  41e313:	in     al,0x44
  41e315:	out    dx,al
  41e316:	icebp  
  41e317:	add    BYTE PTR [ebx-0x34],cl
  41e31a:	shl    BYTE PTR [ecx],cl
  41e31c:	inc    eax
  41e31d:	push   esi
  41e31e:	mov    esi,0xd3e288a2
  41e323:	jmp    0x79bf5508
  41e328:	(bad)  
  41e329:	sub    al,0xbb
  41e32b:	jl     0x41e2e3
  41e32d:	adc    BYTE PTR [ebx-0x4cc9fa6c],cl
  41e333:	jb     0x41e3a5
  41e335:	mov    ds:0xd17e9ed6,eax
  41e33a:	and    BYTE PTR [ebp-0x4234f52f],dl
  41e340:	xor    BYTE PTR [edx+0x5c79e6eb],al
  41e346:	add    al,0x16
  41e348:	or     edi,DWORD PTR [ebx+ebx*2-0x73]
  41e34c:	adc    ebp,DWORD PTR [ebp+0x1]
  41e34f:	mov    edx,0x3510d87
  41e354:	sbb    dl,bl
  41e356:	loopne 0x41e39c
  41e358:	cdq    
  41e359:	sub    eax,0xa12f5cd9
  41e35e:	in     eax,dx
  41e35f:	push   0xb42674cc
  41e364:	(bad)  
  41e365:	out    dx,eax
  41e366:	outs   dx,BYTE PTR ds:[esi]
  41e367:	shl    DWORD PTR [ebp+0x75],cl
  41e36a:	mul    esp
  41e36c:	or     eax,0xc132c83f
  41e371:	push   edi
  41e372:	data16 adc al,0x6f
  41e375:	cs ss jl 0x41e35c
  41e379:	sub    DWORD PTR [eax-0x19f46a77],esp
  41e37f:	loope  0x41e348
  41e381:	test   DWORD PTR [eax-0x73],esp
  41e384:	fcmovnu st,st(4)
  41e386:	and    al,0xd1
  41e388:	je     0x41e340
  41e38a:	data16 dec BYTE PTR [esi]
  41e38d:	dec    ebx
  41e38e:	je     0x41e315
  41e390:	jae    0x41e3e5
  41e392:	cmp    BYTE PTR [esi],dl
  41e394:	fistp  QWORD PTR [eax+0x2fe5d0b7]
  41e39a:	mov    cl,0xc5
  41e39c:	adc    eax,0x98912126
  41e3a1:	retf   
  41e3a2:	dec    esi
  41e3a3:	xchg   ebx,eax
  41e3a4:	jb     0x41e350
  41e3a6:	mov    ds:0xc6c2c192,eax
  41e3ab:	les    eax,FWORD PTR [ebp+0x2c81f458]
  41e3b1:	out    0x8d,al
  41e3b3:	ds test ecx,ebx
  41e3b6:	xchg   ebp,eax
  41e3b7:	and    eax,0x5239f04c
  41e3bc:	xchg   ecx,eax
  41e3bd:	mov    edi,0xd92ea525
  41e3c2:	jne    0x41e3cb
  41e3c4:	xchg   ebp,eax
  41e3c5:	fldenv [eax+0x7bdf9e26]
  41e3cb:	or     eax,0xe9271060
  41e3d0:	xchg   BYTE PTR [edi-0x5d],bl
  41e3d3:	mov    esi,0xcff84756
  41e3d8:	add    ebx,DWORD PTR [ebp-0x42d43fa7]
  41e3de:	stos   DWORD PTR es:[edi],eax
  41e3df:	(bad)  cs:[edx+0x64]
  41e3e3:	jae    0x41e3de
  41e3e5:	jno    0x41e371
  41e3e7:	xor    cl,BYTE PTR [esi-0x80]
  41e3ea:	push   edx
  41e3eb:	jmp    0xe5c5:0x561d9f58
  41e3f2:	dec    esi
  41e3f3:	aad    0x19
  41e3f5:	jns    0x41e3a7
  41e3f7:	or     al,0x71
  41e3f9:	out    dx,eax
  41e3fa:	in     eax,0xc3
  41e3fc:	mov    al,ds:0xf1c0b6b8
  41e401:	outs   dx,DWORD PTR ds:[esi]
  41e402:	dec    edi
  41e403:	push   esp
  41e404:	push   ds
  41e405:	or     eax,0xb7e42120
  41e40a:	mov    es,WORD PTR [edi+0x11fa4e5c]
  41e410:	jae    0x41e427
  41e412:	pop    ecx
  41e413:	es jnp 0x41e455
  41e416:	inc    esp
  41e417:	jmp    0xcc413789
  41e41c:	and    DWORD PTR ds:0xc6b0b5d7,ebp
  41e422:	js     0x41e469
  41e424:	test   DWORD PTR es:[esi],0xb4788f38
  41e42b:	in     al,dx
  41e42c:	or     BYTE PTR [ecx],ah
  41e42e:	enter  0xf6a4,0xa7
  41e432:	mov    esp,DWORD PTR [ecx+0x671e9e29]
  41e438:	enter  0xa734,0x7f
  41e43c:	js     0x41e477
  41e43e:	cdq    
  41e43f:	sti    
  41e440:	mov    BYTE PTR [edi],ah
  41e442:	popa   
  41e443:	idiv   BYTE PTR [edi+0x4a4514d0]
  41e449:	xchg   DWORD PTR [edi-0x74],edi
  41e44c:	mov    ah,0x71
  41e44e:	(bad)  
  41e44f:	or     al,0x89
  41e451:	rol    BYTE PTR ds:0x9879a98c,1
  41e457:	imul   esp,DWORD PTR ss:[eax+0x5c],0xffffffef
  41e45c:	cmp    BYTE PTR [esi-0x3240b265],ah
  41e462:	imul   esi,eax,0xffffffb9
  41e465:	test   al,0xd0
  41e467:	xor    esi,eax
  41e469:	ss dec ecx
  41e46b:	push   es
  41e46c:	and    eax,0x5704c690
  41e471:	mov    dh,0xc5
  41e473:	add    al,0x40
  41e475:	sbb    DWORD PTR [esi],0xec9776a4
  41e47b:	mov    esp,DWORD PTR [ecx]
  41e47d:	into   
  41e47e:	sub    cl,ch
  41e480:	jo     0x41e4dd
  41e482:	lods   al,BYTE PTR ds:[esi]
  41e483:	cmp    DWORD PTR [edi-0x26],esi
  41e486:	jg     0x41e414
  41e488:	and    eax,0xbe214339
  41e48d:	mov    dl,0xb4
  41e48f:	cmp    edi,DWORD PTR [eax+ebx*4]
  41e492:	pop    es
  41e493:	out    dx,eax
  41e494:	sti    
  41e495:	shr    BYTE PTR [edx+0x21e2b52b],1
  41e49b:	dec    edx
  41e49c:	pop    edx
  41e49d:	xor    eax,0x93253908
  41e4a2:	and    BYTE PTR [ebp+0x655806a7],ah
  41e4a8:	dec    ebp
  41e4a9:	add    BYTE PTR [edi-0x3398e2fc],cl
  41e4af:	mov    dh,0x85
  41e4b1:	loope  0x41e4f2
  41e4b3:	stos   BYTE PTR es:[edi],al
  41e4b4:	or     esi,edi
  41e4b6:	pop    esi
  41e4b7:	xor    al,BYTE PTR [ebx+0x5a]
  41e4ba:	data16 add BYTE PTR [eax+0x33],ch
  41e4be:	push   esi
  41e4bf:	cdq    
  41e4c0:	loopne 0x41e4b6
  41e4c2:	xlat   BYTE PTR ds:[ebx]
  41e4c3:	push   ecx
  41e4c4:	dec    edi
  41e4c5:	les    eax,FWORD PTR [ebp-0x736d4ab9]
  41e4cb:	jge    0x41e4cc
  41e4cd:	xchg   edx,eax
  41e4ce:	xor    eax,0xdc3fcc29
  41e4d3:	(bad)
  41e4d6:	imul   ebx,DWORD PTR ss:[edx+0x6d581fcd],0xffffffcd
  41e4de:	fdiv   DWORD PTR [esi-0xb97d4a7]
  41e4e4:	fistp  DWORD PTR [ebx+0x58491c89]
  41e4ea:	pop    esi
  41e4eb:	int3   
  41e4ec:	jae    0x41e4fd
  41e4ee:	and    cl,BYTE PTR ds:0xc5b21411
  41e4f4:	pop    es
  41e4f5:	mov    eax,0x90f0c0ca
  41e4fa:	aad    0x4d
  41e4fc:	les    edx,FWORD PTR [edx+ebx*8]
  41e4ff:	sahf   
  41e500:	mov    esi,0x103e9192
  41e505:	aas    
  41e506:	or     dl,ah
  41e508:	pop    ss
  41e509:	jle    0x41e4ac
  41e50b:	pusha  
  41e50c:	add    ebx,DWORD PTR [edi+0x16fb47ef]
  41e512:	jmp    0xa657c153
  41e517:	and    DWORD PTR [ebp+0x1f],ecx
  41e51a:	jmp    0x41e53b
  41e51c:	inc    esp
  41e51d:	mov    esp,0x88723cef
  41e522:	mov    ds:0xf81cb47c,al
  41e527:	je     0x41e4b3
  41e529:	lock push edx
  41e52b:	fs call 0x868e:0x39fd54e
  41e533:	icebp  
  41e534:	jo     0x41e548
  41e536:	sahf   
  41e537:	xchg   esp,eax
  41e538:	(bad)  
  41e539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e53a:	mov    eax,0xa7c2710a
  41e53f:	shr    BYTE PTR ds:0xc047346f,0x75
  41e547:	out    dx,eax
  41e548:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e549:	lock adc ecx,esi
  41e54c:	sub    al,ch
  41e54e:	jne    0x41e52e
  41e550:	(bad)  
  41e551:	pop    ebx
  41e552:	mov    al,BYTE PTR [ecx-0x16]
  41e555:	loop   0x41e570
  41e557:	dec    esi
  41e558:	cmc    
  41e559:	leave  
  41e55a:	enter  0xc3d0,0xfb
  41e55e:	lock mov eax,ds:0x373d794b
  41e564:	into   
  41e565:	shr    DWORD PTR [ecx-0x59cdebf9],1
  41e56b:	aas    
  41e56c:	enter  0x7a44,0x7a
  41e570:	scas   al,BYTE PTR es:[edi]
  41e571:	jmp    0x41e5d0
  41e573:	add    DWORD PTR [ecx-0x4d66816b],edx
  41e579:	sub    ah,BYTE PTR [ebx+0x19]
  41e57c:	out    0x3d,eax
  41e57e:	jno    0x41e586
  41e580:	jp     0x41e559
  41e582:	or     BYTE PTR es:[ebx],bh
  41e585:	dec    ax
  41e587:	mov    ebx,0x6b8d85c1
  41e58c:	sbb    ch,BYTE PTR [esi-0xe]
  41e58f:	lea    esi,[ecx+eax*8+0x5e]
  41e593:	xor    al,0x12
  41e595:	loopne 0x41e5b9
  41e597:	jge    0x41e5f1
  41e599:	loope  0x41e571
  41e59b:	sbb    eax,0x558ec5fb
  41e5a0:	fisttp QWORD PTR [ecx-0x3a]
  41e5a3:	ds (bad) 
  41e5a5:	in     al,0x5d
  41e5a7:	push   edi
  41e5a8:	stos   DWORD PTR es:[edi],eax
  41e5a9:	push   esi
  41e5aa:	jnp    0x41e550
  41e5ac:	sub    eax,0x4a161df4
  41e5b1:	icebp  
  41e5b2:	add    al,0x45
  41e5b4:	(bad)  
  41e5b5:	aaa    
  41e5b6:	stos   DWORD PTR es:[edi],eax
  41e5b7:	lock xor dh,BYTE PTR [ebp-0x55]
  41e5bb:	pop    ebx
  41e5bc:	jo     0x41e560
  41e5be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5bf:	lock call 0x92becd85
  41e5c5:	and    edx,edx
  41e5c7:	pushf  
  41e5c8:	jnp    0x41e645
  41e5ca:	dec    eax
  41e5cb:	into   
  41e5cc:	and    DWORD PTR [eax-0x12],ebx
  41e5cf:	xchg   ecx,eax
  41e5d0:	int    0x44
  41e5d2:	pop    esi
  41e5d3:	std    
  41e5d4:	iret   
  41e5d5:	pop    ebp
  41e5d6:	test   DWORD PTR [ebx-0x1c],edi
  41e5d9:	ret    
  41e5da:	retf   
  41e5db:	adc    ch,BYTE PTR [esi+0x73]
  41e5de:	mov    eax,0x8386f36e
  41e5e3:	iret   
  41e5e4:	imul   ebx,DWORD PTR [edx-0x4],0x22
  41e5e8:	nop
  41e5e9:	loopne 0x41e5df
  41e5eb:	and    al,BYTE PTR ds:0x7ee62625
  41e5f1:	arpl   bp,sp
  41e5f3:	sub    al,0x56
  41e5f5:	shr    BYTE PTR [ebp-0x62],1
  41e5f8:	inc    ebp
  41e5f9:	xor    edi,DWORD PTR [ecx-0x4b]
  41e5fc:	mov    al,0x6f
  41e5fe:	fucomi st,st(7)
  41e600:	loopne 0x41e5ad
  41e602:	or     al,BYTE PTR [ebx]
  41e604:	std    
  41e605:	call   0x3c35:0xa9fc3ec9
  41e60c:	jae    0x41e685
  41e60e:	push   es
  41e60f:	(bad)  
  41e610:	jp     0x41e5fd
  41e612:	test   eax,0x9e7101f9
  41e617:	adc    BYTE PTR [ebx],cl
  41e619:	imul   eax,DWORD PTR [eax+0x6e9b1c97],0xf
  41e620:	dec    edi
  41e621:	xor    eax,eax
  41e623:	pop    es
  41e624:	sbb    eax,0x4d976c34
  41e629:	fcomp  DWORD PTR [edx-0x80]
  41e62c:	mov    ds:0xf07b0ab7,al
  41e631:	push   esp
  41e632:	sub    esp,DWORD PTR [ebx+0x51]
  41e635:	loopne 0x41e5fc
  41e637:	adc    BYTE PTR [esi],cl
  41e639:	sbb    DWORD PTR [ebx],esp
  41e63b:	fisubr DWORD PTR [ecx-0x170834a9]
  41e641:	pop    ss
  41e642:	cmp    DWORD PTR [eax],ecx
  41e644:	inc    edi
  41e645:	adc    al,0x57
  41e647:	out    dx,eax
  41e648:	fild   DWORD PTR [edi+0x2f779e12]
  41e64e:	arpl   WORD PTR ds:0x8413bd61,di
  41e654:	sbb    edx,ebp
  41e656:	mov    al,0x1b
  41e658:	xor    BYTE PTR [esi],ch
  41e65a:	ja     0x41e5f9
  41e65c:	dec    ebx
  41e65d:	js     0x41e5f6
  41e65f:	cmc    
  41e660:	ja     0x41e6de
  41e662:	dec    esp
  41e663:	cwde   
  41e664:	mov    cl,BYTE PTR [ecx-0x719d56cf]
  41e66a:	mov    BYTE PTR [eax],dh
  41e66c:	dec    ebp
  41e66d:	jle    0x41e658
  41e66f:	mov    ds:0x3c09ff01,al
  41e674:	leave  
  41e675:	jno    0x41e6e6
  41e677:	shl    DWORD PTR [eax+0x4c],cl
  41e67a:	push   esp
  41e67b:	pop    edi
  41e67c:	xlat   BYTE PTR ds:[ebx]
  41e67d:	popf   
  41e67e:	pop    ecx
  41e67f:	sbb    eax,0xa370756
  41e684:	stos   BYTE PTR es:[edi],al
  41e685:	pop    si
  41e687:	gs retf 
  41e689:	push   ds
  41e68a:	dec    esp
  41e68b:	cdq    
  41e68c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e68d:	inc    edx
  41e68e:	pop    esp
  41e68f:	ins    DWORD PTR es:[edi],dx
  41e690:	mov    eax,ds:0x5e549307
  41e695:	jecxz  0x41e65e
  41e697:	test   al,0x1f
  41e699:	stos   DWORD PTR es:[edi],eax
  41e69a:	inc    ecx
  41e69b:	sub    DWORD PTR [eax-0x4de5b243],ebp
  41e6a1:	add    cl,al
  41e6a3:	xchg   ch,ch
  41e6a5:	push   ecx
  41e6a6:	xor    dl,ch
  41e6a8:	dec    edi
  41e6a9:	jno    0x41e6b3
  41e6ab:	adc    DWORD PTR ds:0x7b92f875,esi
  41e6b1:	mov    ?,ebp
  41e6b3:	iret   
  41e6b4:	cmc    
  41e6b5:	or     eax,0xb169180b
  41e6ba:	je     0x41e6c5
  41e6bc:	mov    fs,WORD PTR [ecx-0x2bc2213]
  41e6c2:	pop    esi
  41e6c3:	(bad)  
  41e6c5:	push   eax
  41e6c6:	dec    eax
  41e6c7:	dec    edi
  41e6c8:	mov    DWORD PTR [eax],ebp
  41e6ca:	sub    bl,BYTE PTR [ebx]
  41e6cc:	jg     0x41e65d
  41e6ce:	js     0x41e732
  41e6d0:	xchg   ebp,eax
  41e6d1:	inc    ebx
  41e6d2:	aaa    
  41e6d3:	xchg   esi,eax
  41e6d4:	stos   DWORD PTR es:[edi],eax
  41e6d5:	popf   
  41e6d6:	sahf   
  41e6d7:	inc    ebx
  41e6d8:	sbb    eax,0x6af6d5e5
  41e6dd:	push   edi
  41e6de:	mov    bl,0x7a
  41e6e0:	adc    dl,bl
  41e6e2:	(bad)  
  41e6e4:	nop
  41e6e5:	jnp    0x41e686
  41e6e7:	push   ebp
  41e6e8:	mov    eax,ds:0x1d3a2d51
  41e6ed:	sub    al,0x6e
  41e6ef:	mov    edi,0xb89cae7c
  41e6f4:	jp     0x41e6d5
  41e6f6:	aam    0xc8
  41e6f8:	loopne 0x41e743
  41e6fa:	mov    al,ds:0x1943c966
  41e6ff:	xor    dl,BYTE PTR [ebp-0xd]
  41e702:	dec    esp
  41e703:	sar    BYTE PTR [ebp-0x66708c4f],cl
  41e709:	dec    edi
  41e70a:	cdq    
  41e70b:	or     BYTE PTR [edi],dl
  41e70d:	cdq    
  41e70e:	stos   BYTE PTR es:[edi],al
  41e70f:	ror    BYTE PTR ds:0x3834123f,1
  41e715:	fnstcw WORD PTR [ebx-0x3d1d8fa5]
  41e71b:	cmp    esi,edi
  41e71d:	sti    
  41e71e:	aaa    
  41e71f:	and    DWORD PTR [edx],ecx
  41e721:	and    eax,0xaa652160
  41e726:	out    0x38,al
  41e728:	lods   eax,DWORD PTR ds:[esi]
  41e729:	push   ebx
  41e72a:	xchg   DWORD PTR [ecx-0x1d],esi
  41e72d:	mov    eax,0x3e29df36
  41e732:	pop    ebp
  41e733:	lods   al,BYTE PTR ds:[esi]
  41e734:	xchg   ebx,eax
  41e735:	add    al,0xa7
  41e737:	mov    esi,0x18951f3f
  41e73c:	out    0x61,al
  41e73e:	pop    ebx
  41e73f:	inc    eax
  41e740:	push   eax
  41e741:	imul   ebx,DWORD PTR [edi-0x61],0xffffffc5
  41e745:	pushw  cs
  41e747:	add    DWORD PTR [eax-0x2a],edi
  41e74a:	xor    ebx,DWORD PTR [edx-0x72]
  41e74d:	push   0x724e16de
  41e752:	add    al,0x1c
  41e754:	pop    ss
  41e755:	jge    0x41e722
  41e757:	sbb    ecx,DWORD PTR [ecx+ebx*1]
  41e75a:	adc    eax,0x2f659d09
  41e75f:	dec    ebx
  41e760:	jle    0x41e7b8
  41e762:	(bad)  
  41e763:	mov    esi,0x166ac29f
  41e768:	and    al,0xcf
  41e76a:	or     BYTE PTR [esi],bl
  41e76c:	xor    eax,0x6fc1067e
  41e771:	inc    ebx
  41e772:	scas   eax,DWORD PTR es:[edi]
  41e773:	rcr    DWORD PTR [edi+0x433b7025],1
  41e779:	call   0x874a:0xed5fc8a1
  41e780:	push   esp
  41e781:	xor    bh,BYTE PTR [eax-0x5]
  41e784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e785:	sti    
  41e786:	in     eax,dx
  41e787:	(bad)  
  41e788:	in     eax,dx
  41e789:	outs   dx,DWORD PTR ds:[esi]
  41e78a:	lods   eax,DWORD PTR ds:[esi]
  41e78b:	cmp    al,0x5e
  41e78d:	shl    BYTE PTR [ebx],0x28
  41e790:	lock pop ss
  41e792:	fs xor al,0xa4
  41e795:	mov    BYTE PTR [eax+ecx*1-0x5eec9d71],dl
  41e79c:	(bad)  
  41e79d:	adc    eax,0x925433a1
  41e7a2:	sub    ah,dl
  41e7a4:	sbb    al,0xe9
  41e7a6:	xor    ecx,ecx
  41e7a8:	mov    ah,BYTE PTR [edx+0x29]
  41e7ab:	adc    BYTE PTR [ebp+0x1e3dee88],dh
  41e7b1:	outs   dx,DWORD PTR ds:[esi]
  41e7b2:	xchg   ebp,eax
  41e7b3:	pop    esi
  41e7b4:	dec    ebx
  41e7b5:	cmp    al,0x8b
  41e7b7:	sbb    ch,bl
  41e7b9:	dec    edx
  41e7ba:	(bad)  
  41e7bb:	stos   BYTE PTR es:[edi],al
  41e7bc:	lods   eax,DWORD PTR ds:[esi]
  41e7bd:	fs push edi
  41e7bf:	es ss mov ecx,0x6f7a23f9
  41e7c6:	in     al,dx
  41e7c7:	push   es
  41e7c8:	cwde   
  41e7c9:	fmul   st,st(2)
  41e7cb:	cmp    al,0x76
  41e7cd:	aad    0xd3
  41e7cf:	out    0x14,al
  41e7d1:	mov    ebx,0xac41bef2
  41e7d6:	mov    ah,0x5
  41e7d8:	push   edx
  41e7d9:	pop    ebp
  41e7da:	cmc    
  41e7db:	or     al,0x51
  41e7dd:	enter  0x6a3f,0xb
  41e7e1:	int3   
  41e7e2:	(bad)  
  41e7e3:	pop    edx
  41e7e4:	mov    ebx,0x7529900e
  41e7e9:	cld    
  41e7ea:	pushf  
  41e7eb:	sahf   
  41e7ec:	xchg   esi,eax
  41e7ed:	push   eax
  41e7ee:	in     al,0x22
  41e7f0:	xchg   edx,eax
  41e7f1:	dec    ecx
  41e7f2:	dec    esi
  41e7f3:	daa    
  41e7f4:	mov    cl,0x66
  41e7f6:	lock pop edi
  41e7f8:	shl    BYTE PTR [esi-0x3f],0xf1
  41e7fc:	js     0x41e870
  41e7fe:	test   BYTE PTR [ebx],0x26
  41e801:	leave  
  41e802:	into   
  41e803:	std    
  41e804:	fs call 0x143c:0x7692571
  41e80c:	test   DWORD PTR [esi],esp
  41e80e:	bound  ecx,QWORD PTR [esi]
  41e810:	iret   
  41e811:	inc    ebx
  41e812:	pusha  
  41e813:	xchg   ebx,eax
  41e814:	mov    edx,0xdbb0f208
  41e819:	daa    
  41e81a:	dec    edx
  41e81b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e81c:	push   0xe51dafd7
  41e821:	daa    
  41e822:	aad    0x3b
  41e824:	jp     0x41e850
  41e826:	push   esp
  41e827:	dec    esi
  41e828:	xchg   edx,eax
  41e829:	push   ebp
  41e82a:	or     ch,BYTE PTR [eax+0x19a343a9]
  41e830:	mov    bh,BYTE PTR [edx+ebp*4+0x79e7f76d]
  41e837:	sbb    DWORD PTR [ebx-0x23bd4c52],0x3bad148
  41e841:	fnstcw WORD PTR [ebp-0x7ff1ceb3]
  41e847:	jb     0x41e875
  41e849:	sbb    esp,DWORD PTR [edx+0x3b]
  41e84c:	xchg   edi,eax
  41e84d:	hlt    
  41e84e:	lds    eax,FWORD PTR [ebx+ebx*4+0x60]
  41e852:	mov    ebp,0xb33b5119
  41e857:	and    BYTE PTR [eax],0xe5
  41e85a:	pop    esi
  41e85b:	adc    DWORD PTR [ebp-0x5e],ebx
  41e85e:	xor    BYTE PTR [ebp+ebp*1-0x41d4bb42],0x9
  41e866:	shl    ah,cl
  41e868:	inc    ebp
  41e869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e86a:	shl    DWORD PTR [edx-0x32c88c1e],1
  41e870:	pop    ss
  41e871:	sbb    dh,BYTE PTR [eax-0x36]
  41e874:	push   0xbc71edde
  41e879:	jnp    0x41e8bf
  41e87b:	xor    ecx,ebx
  41e87d:	jns    0x41e8ab
  41e87f:	cwde   
  41e880:	ja     0x41e867
  41e882:	pop    esp
  41e883:	lea    eax,[ebx+0x56]
  41e886:	in     eax,0xc3
  41e888:	mov    edx,0xf74017ed
  41e88d:	mov    bh,0xdc
  41e88f:	and    edx,esi
  41e891:	je     0x41e855
  41e893:	jp     0x41e8b1
  41e895:	or     al,0xf6
  41e897:	inc    ecx
  41e898:	mov    bh,0xd2
  41e89a:	sub    dh,0x6a
  41e89d:	jno    0x41e8c7
  41e89f:	or     al,BYTE PTR [edi]
  41e8a1:	scas   al,BYTE PTR es:[edi]
  41e8a2:	jo     0x41e85f
  41e8a4:	fadd   st,st(1)
  41e8a6:	push   edi
  41e8a7:	pusha  
  41e8a8:	dec    ecx
  41e8a9:	adc    eax,0x801f834f
  41e8ae:	xchg   ecx,eax
  41e8af:	dec    edi
  41e8b0:	aam    0x22
  41e8b2:	dec    ebx
  41e8b3:	repz adc eax,0xdfd29e3e
  41e8b9:	rol    BYTE PTR [edi*2-0x37373b55],1
  41e8c0:	les    esi,FWORD PTR [ecx-0x7f]
  41e8c3:	lods   al,BYTE PTR ds:[esi]
  41e8c4:	(bad)  
  41e8c5:	push   edi
  41e8c6:	(bad)  
  41e8c7:	mov    bl,0x41
  41e8c9:	xchg   esi,eax
  41e8ca:	add    BYTE PTR [ebx-0x1819cf2d],0xa2
  41e8d1:	int3   
  41e8d2:	fcmovnbe st,st(6)
  41e8d4:	movnti DWORD PTR [eax+edx*4+0x11],ecx
  41e8d9:	mov    al,0x4a
  41e8db:	stc    
  41e8dc:	jge    0x41e8cf
  41e8de:	sub    BYTE PTR [ebx-0x1901107],bh
  41e8e4:	mov    fs,WORD PTR [esi]
  41e8e6:	out    0x1b,eax
  41e8e8:	repz push ecx
  41e8ea:	fwait
  41e8eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8ec:	cmp    DWORD PTR [ebp+0x2a6e0168],eax
  41e8f2:	mov    al,ds:0xf0b4a2d9
  41e8f7:	and    ebp,DWORD PTR [edx]
  41e8f9:	add    BYTE PTR [ebp+ecx*8+0x367de44a],al
  41e900:	ret    0xbb62
  41e903:	pop    esi
  41e904:	mov    bl,0x82
  41e906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e907:	cwde   
  41e908:	mov    bl,0x23
  41e90a:	xor    cl,al
  41e90c:	retf   0x89cc
  41e90f:	inc    esp
  41e910:	sub    DWORD PTR [eax],ebp
  41e912:	fld    TBYTE PTR [edi]
  41e914:	mov    ds:0x52fae196,al
  41e919:	je     0x41e968
  41e91b:	in     al,dx
  41e91c:	std    
  41e91d:	in     eax,0xcd
  41e91f:	pop    eax
  41e920:	jmp    0xe86f:0x72fda221
  41e927:	retf   
  41e928:	rol    ecx,0x59
  41e92b:	xor    DWORD PTR [ebx-0x68],edi
  41e92e:	in     eax,dx
  41e92f:	std    
  41e930:	jmp    0x8675:0x3229516c
  41e937:	ds pop ecx
  41e939:	jmp    DWORD PTR [ecx-0x6948cee6]
  41e93f:	iret   
  41e940:	int    0x80
  41e942:	pop    ds
  41e943:	mov    al,0x6b
  41e945:	xor    al,0xd8
  41e947:	xor    ch,BYTE PTR [ebp-0x5]
  41e94a:	xchg   DWORD PTR [esi+0x73],edi
  41e94d:	bound  eax,QWORD PTR [ebx]
  41e94f:	push   esi
  41e950:	sub    bl,BYTE PTR [eax+0x5020e6d4]
  41e956:	jb     0x41e8ec
  41e958:	pushf  
  41e959:	test   edi,esp
  41e95b:	xchg   edx,esi
  41e95d:	stos   BYTE PTR es:[edi],al
  41e95e:	inc    ecx
  41e95f:	jp     0x41e981
  41e961:	dec    edi
  41e962:	xor    DWORD PTR [edi+0x61b11b65],ecx
  41e968:	sbb    BYTE PTR [ebp-0x192e4dda],al
  41e96e:	je     0x41e9b6
  41e970:	loop   0x41e9b6
  41e972:	pop    ds
  41e973:	push   cs
  41e974:	push   es
  41e975:	adc    edx,DWORD PTR [ebx+0x50]
  41e978:	mov    esp,ecx
  41e97a:	jnp    0x41e945
  41e97c:	dec    ecx
  41e97d:	frstor [ecx-0x2]
  41e980:	in     eax,dx
  41e981:	aaa    
  41e982:	pop    ecx
  41e983:	pop    edi
  41e984:	fstp   QWORD PTR [esi+0x263972de]
  41e98a:	lods   al,BYTE PTR ds:[esi]
  41e98b:	inc    esi
  41e98c:	repz icebp 
  41e98e:	lods   eax,DWORD PTR ds:[esi]
  41e98f:	mov    al,0x2f
  41e991:	lods   al,BYTE PTR ds:[esi]
  41e992:	lahf   
  41e993:	adc    dh,BYTE PTR [edi-0x1a12dc50]
  41e999:	sbb    eax,0xbba67c4d
  41e99e:	test   al,0xd9
  41e9a0:	stos   DWORD PTR es:[edi],eax
  41e9a1:	into   
  41e9a2:	mov    ds:0x4482898b,al
  41e9a7:	aam    0x38
  41e9a9:	std    
  41e9aa:	jmp    0x1b82ff8e
  41e9af:	daa    
  41e9b0:	push   edi
  41e9b1:	jecxz  0x41e9f0
  41e9b3:	sahf   
  41e9b4:	lock pop esp
  41e9b6:	pop    ecx
  41e9b7:	gs ret 0xa24e
  41e9bb:	xor    al,0x81
  41e9bd:	push   edi
  41e9be:	gs js  0x41e9e1
  41e9c1:	stos   DWORD PTR es:[edi],eax
  41e9c2:	test   BYTE PTR [esi+0x2aa5bb25],ch
  41e9c8:	mov    ebx,eax
  41e9ca:	shr    DWORD PTR [ecx],cl
  41e9cc:	jg     0x41e9a4
  41e9ce:	fwait
  41e9cf:	iret   
  41e9d0:	mov    ?,WORD PTR [ebx]
  41e9d2:	push   ecx
  41e9d3:	ss jae 0x41e965
  41e9d6:	or     al,0x63
  41e9d8:	add    BYTE PTR [ebp+0x19],bl
  41e9db:	add    esi,esi
  41e9dd:	jmp    0x41ea17
  41e9df:	sbb    bh,al
  41e9e1:	and    al,0x7c
  41e9e3:	sahf   
  41e9e4:	pop    DWORD PTR [edx+0x52aa6358]
  41e9ea:	sub    eax,edx
  41e9ec:	es (bad) 
  41e9ee:	std    
  41e9ef:	and    DWORD PTR [edx+eiz*1+0x61],0x1a
  41e9f4:	inc    edi
  41e9f5:	in     eax,0x9e
  41e9f7:	das    
  41e9f8:	xor    esp,DWORD PTR [eax-0xa2500db]
  41e9fe:	fmulp  st(6),st
  41ea00:	sar    DWORD PTR [edx],cl
  41ea02:	and    al,BYTE PTR [ecx+ebp*2-0x394ef831]
  41ea09:	std    
  41ea0a:	adc    dh,BYTE PTR [edi+0x10de76ad]
  41ea10:	aam    0xfe
  41ea12:	dec    eax
  41ea13:	test   DWORD PTR [edx],esp
  41ea15:	retf   
  41ea16:	jbe    0x41ea60
  41ea18:	push   ds
  41ea19:	fdiv   QWORD PTR [ebx-0x4b]
  41ea1c:	push   edx
  41ea1d:	or     dh,BYTE PTR [esi+0x37857ce0]
  41ea23:	jle    0x41e9c6
  41ea25:	mov    bl,0xeb
  41ea27:	dec    edx
  41ea28:	mov    ds:0x74bfd4c5,al
  41ea2d:	mov    fs,WORD PTR [esi]
  41ea2f:	retf   0xced5
  41ea32:	xor    BYTE PTR [ebp-0x65],ah
  41ea35:	ret    
  41ea36:	jmp    0xb4a:0x55cf2a20
  41ea3d:	adc    ch,0x35
  41ea40:	loop   0x41ea5d
  41ea42:	pop    edx
  41ea43:	lods   al,BYTE PTR ds:[esi]
  41ea44:	je     0x41ea08
  41ea46:	adc    ebp,edi
  41ea48:	stos   DWORD PTR es:[edi],eax
  41ea49:	xor    al,0xf0
  41ea4b:	push   ss
  41ea4c:	pop    edi
  41ea4d:	push   ecx
  41ea4e:	loopne 0x41eaae
  41ea50:	add    al,0xdb
  41ea52:	pop    edx
  41ea53:	push   cs
  41ea54:	pop    ebp
  41ea55:	and    eax,0x13ac15b6
  41ea5a:	retf   
  41ea5b:	icebp  
  41ea5c:	mov    esp,0x9dbc5e66
  41ea61:	push   ss
  41ea62:	inc    esp
  41ea63:	daa    
  41ea64:	ss pushf 
  41ea66:	loope  0x41ea00
  41ea68:	xor    ebx,DWORD PTR [ebx+0x5e]
  41ea6b:	sahf   
  41ea6c:	pushf  
  41ea6d:	repz sub eax,0xc7d6fb83
  41ea73:	inc    ebx
  41ea74:	push   edx
  41ea75:	pop    esp
  41ea76:	xchg   ebx,eax
  41ea77:	dec    eax
  41ea78:	sub    DWORD PTR [edi],eax
  41ea7a:	or     dh,bl
  41ea7c:	sti    
  41ea7d:	push   edi
  41ea7e:	push   esp
  41ea7f:	xchg   ecx,eax
  41ea80:	ret    
  41ea81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea82:	pop    ebx
  41ea83:	shl    esi,cl
  41ea85:	or     ah,dl
  41ea87:	das    
  41ea88:	in     al,0xe7
  41ea8a:	cmp    al,0xb6
  41ea8d:	dec    ecx
  41ea8e:	cs pop ds
  41ea90:	ins    DWORD PTR es:[edi],dx
  41ea91:	xor    eax,0x2b0d7bdb
  41ea96:	test   eax,0x4d748bfa
  41ea9b:	mov    ebp,0x2829b158
  41eaa0:	jg     0x41eab9
  41eaa2:	ss (bad) 
  41eaa4:	push   ebp
  41eaa5:	bound  ecx,QWORD PTR [ebp-0x7cd1419c]
  41eaab:	aas    
  41eaac:	pop    ss
  41eaad:	(bad)  
  41eaae:	retf   
  41eaaf:	add    al,0xec
  41eab1:	push   edi
  41eab2:	fs stc 
  41eab4:	inc    ecx
  41eab5:	iret   
  41eab6:	stc    
  41eab7:	jg     0x41eaa4
  41eab9:	add    eax,0x3b084026
  41eabe:	ja     0x41eae9
  41eac0:	dec    esi
  41eac1:	lds    ebx,FWORD PTR [edi+0x70]
  41eac4:	call   0xe8111113
  41eac9:	push   ecx
  41eaca:	add    bl,al
  41eacc:	cdq    
  41eacd:	sub    al,0xc5
  41eacf:	xchg   edi,eax
  41ead0:	test   BYTE PTR [ecx-0x25],ch
  41ead3:	xchg   ebp,eax
  41ead4:	(bad)  [ecx+eiz*1+0x27b0c975]
  41eadb:	push   ebp
  41eadc:	pop    es
  41eadd:	mov    cl,0xbf
  41eae0:	scas   al,BYTE PTR es:[edi]
  41eae1:	int    0xd7
  41eae3:	add    al,0xad
  41eae5:	cmp    BYTE PTR [edi+esi*2-0x2a],dl
  41eae9:	push   ebp
  41eaea:	dec    edi
  41eaeb:	ins    BYTE PTR es:[edi],dx
  41eaec:	adc    BYTE PTR [edx+esi*1],dl
  41eaef:	das    
  41eaf0:	lahf   
  41eaf1:	fs scas eax,DWORD PTR es:[edi]
  41eaf3:	fistp  WORD PTR [edx-0x58]
  41eaf6:	ins    BYTE PTR es:[edi],dx
  41eaf7:	xchg   edi,eax
  41eaf8:	shl    cl,cl
  41eafa:	loopne 0x41eb04
  41eafc:	push   cs
  41eafd:	loopne 0x41eac1
  41eaff:	icebp  
  41eb00:	pop    ebx
  41eb01:	xor    ecx,DWORD PTR [eax-0x54]
  41eb04:	xchg   ebx,eax
  41eb05:	cld    
  41eb06:	dec    esp
  41eb07:	mov    DWORD PTR [edx-0x2d29d44c],edi
  41eb0d:	scas   al,BYTE PTR es:[edi]
  41eb0e:	jb     0x41eb7d
  41eb10:	(bad)  
  41eb11:	mov    WORD PTR [edx+0x74],fs
  41eb14:	lock (bad) 
  41eb16:	fidiv  WORD PTR [edi+0x2789e0bf]
  41eb1c:	jnp    0x41eac6
  41eb1e:	aad    0xe1
  41eb20:	mov    eax,ds:0x8cbfc270
  41eb25:	cmp    DWORD PTR [edi],edx
  41eb27:	add    BYTE PTR [ecx-0x5d],0x52
  41eb2b:	ja     0x41eb4d
  41eb2d:	pusha  
  41eb2e:	sar    DWORD PTR [edi],cl
  41eb30:	rcl    edx,cl
  41eb32:	in     al,dx
  41eb33:	in     al,dx
  41eb34:	pop    esi
  41eb35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb37:	aas    
  41eb38:	mov    dl,0xc5
  41eb3a:	(bad)  [esi+ebx*1+0x2a]
  41eb3e:	mov    ds:0x7e4735d8,eax
  41eb43:	pop    edx
  41eb44:	adc    cl,BYTE PTR [esi+edx*1-0x39]
  41eb48:	jg     0x41eb0f
  41eb4a:	push   esp
  41eb4b:	(bad)  
  41eb4c:	jmp    0x863cbb0d
  41eb51:	mov    cl,0x77
  41eb53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb54:	add    eax,0x2d31a7cc
  41eb59:	call   0xa3e9:0xb10d3d2f
  41eb60:	or     edi,DWORD PTR [esi]
  41eb62:	cwde   
  41eb63:	dec    edx
  41eb64:	pop    ss
  41eb65:	inc    ecx
  41eb66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb67:	in     al,dx
  41eb68:	cmc    
  41eb69:	mov    dh,0x3d
  41eb6b:	aas    
  41eb6c:	loop   0x41eb18
  41eb6e:	mov    esi,0x2e721b33
  41eb73:	test   eax,0x473081c
  41eb78:	sbb    ebx,DWORD PTR [eax]
  41eb7a:	push   0xffffffb1
  41eb7c:	data16 and ah,BYTE PTR [esi+0x4f]
  41eb80:	mov    edx,0xa8f17e58
  41eb85:	shl    BYTE PTR ds:0x273dcf3c,cl
  41eb8b:	push   eax
  41eb8c:	and    ebx,DWORD PTR [ebx-0x1d]
  41eb8f:	ins    BYTE PTR es:[edi],dx
  41eb90:	add    DWORD PTR [edx],ebx
  41eb92:	out    dx,eax
  41eb93:	mov    eax,ds:0x968e0e49
  41eb98:	add    ch,BYTE PTR [edx+0x7b]
  41eb9b:	int3   
  41eb9c:	mov    dl,0x7e
  41eb9e:	xchg   edx,eax
  41eb9f:	sbb    eax,0xaff7623f
  41eba4:	sbb    al,0xdd
  41eba6:	sub    al,0xa7
  41eba8:	jecxz  0x41ebc3
  41ebaa:	adc    eax,0x55225b38
  41ebaf:	test   DWORD PTR [ecx],0xde6e2bf6
  41ebb5:	add    esp,ecx
  41ebb7:	and    DWORD PTR [edi],ebx
  41ebb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebba:	add    eax,esi
  41ebbc:	bound  esi,QWORD PTR [ecx]
  41ebbe:	sub    dl,0x2a
  41ebc1:	pop    es
  41ebc2:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebc4:	push   cs
  41ebc5:	repz add al,0x70
  41ebc8:	xchg   ebx,eax
  41ebc9:	or     eax,ecx
  41ebcb:	(bad)  
  41ebcc:	lods   eax,DWORD PTR ds:[esi]
  41ebcd:	fnstcw WORD PTR [esi+0x76f7716c]
  41ebd3:	lods   eax,DWORD PTR ds:[esi]
  41ebd4:	push   eax
  41ebd5:	push   ds
  41ebd6:	retf   
  41ebd7:	dec    edi
  41ebd8:	add    eax,0x29632e13
  41ebdd:	mov    ebp,0x4d1da98a
  41ebe2:	xchg   edx,eax
  41ebe3:	sub    dl,BYTE PTR [ecx+0x56]
  41ebe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebe7:	jno    0x41eb96
  41ebe9:	mov    edx,ss
  41ebeb:	push   ebp
  41ebec:	fist   WORD PTR [edi-0x6db82f7b]
  41ebf2:	mov    ah,0x21
  41ebf4:	fidiv  DWORD PTR [ebx+0x71]
  41ebf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebf9:	cmp    BYTE PTR [eax],ch
  41ebfb:	xchg   edi,eax
  41ebfc:	repz hlt 
  41ebfe:	pop    eax
  41ebff:	push   0x17
  41ec01:	lahf   
  41ec02:	outs   dx,DWORD PTR ds:[esi]
  41ec03:	mov    ecx,0xd132b0e3
  41ec08:	push   esp
  41ec09:	cld    
  41ec0a:	xchg   edx,eax
  41ec0b:	add    BYTE PTR [eax-0x2a11d0f6],0x3e
  41ec12:	jnp    0x41ec49
  41ec14:	or     eax,0x4218aefc
  41ec19:	scas   eax,DWORD PTR es:[edi]
  41ec1a:	xor    al,ch
  41ec1c:	mov    dl,0x1b
  41ec1e:	jmp    0xa9814329
  41ec23:	fwait
  41ec24:	popf   
  41ec25:	stos   DWORD PTR es:[edi],eax
  41ec26:	data16 data16 js 0x41ec51
  41ec2a:	lock mov edx,0x51e82ecd
  41ec30:	icebp  
  41ec31:	dec    edx
  41ec32:	cli    
  41ec33:	gs out dx,al
  41ec35:	mov    ah,BYTE PTR [edi-0x18eacc05]
  41ec3b:	stc    
  41ec3c:	push   esp
  41ec3d:	inc    edi
  41ec3e:	imul   esp,edi,0x7ddb6f63
  41ec44:	jns    0x41ecb6
  41ec46:	hlt    
  41ec47:	les    ebx,FWORD PTR ds:0xc38a107e
  41ec4d:	test   al,0x27
  41ec4f:	sbb    esi,edx
  41ec51:	adc    dl,BYTE PTR [esi]
  41ec53:	fld    QWORD PTR [ecx]
  41ec55:	and    eax,0xc66e8787
  41ec5a:	mov    ah,0x6e
  41ec5c:	lahf   
  41ec5d:	push   es
  41ec5e:	bnd jge 0x41ec8b
  41ec61:	fild   WORD PTR [eax]
  41ec63:	pop    esi
  41ec64:	push   0x76
  41ec66:	xchg   ecx,eax
  41ec67:	std    
  41ec68:	out    dx,eax
  41ec69:	jno    0x41ece4
  41ec6b:	xchg   esi,eax
  41ec6c:	iret   
  41ec6d:	cwde   
  41ec6e:	xchg   cx,ax
  41ec70:	popa   
  41ec71:	jno    0x41ec38
  41ec73:	jmp    0x584e7b20
  41ec78:	and    BYTE PTR [edi-0x7b],0xc
  41ec7c:	rcr    edi,cl
  41ec7e:	push   edx
  41ec7f:	dec    esi
  41ec80:	mov    eax,ds:0x3ce9e5c4
  41ec85:	xor    ecx,DWORD PTR [esp+eax*4-0x45b02564]
  41ec8c:	sub    DWORD PTR [esi],ebp
  41ec8e:	retf   0x971b
  41ec91:	in     eax,0xe7
  41ec93:	div    DWORD PTR [ebx]
  41ec95:	mov    al,0x93
  41ec97:	ss repz cli 
  41ec9a:	gs scas al,BYTE PTR es:[edi]
  41ec9c:	mov    cl,0xe1
  41ec9e:	sbb    al,cl
  41eca0:	rcl    edi,0x2f
  41eca3:	push   eax
  41eca4:	in     eax,0xeb
  41eca6:	xor    dl,bl
  41eca8:	pop    esi
  41eca9:	and    eax,0xee788826
  41ecae:	loope  0x41ec6d
  41ecb0:	out    0xbc,eax
  41ecb2:	adc    edi,edi
  41ecb4:	repz mov eax,ds:0x675d6659
  41ecba:	(bad)  
  41ecbb:	xchg   esi,eax
  41ecbc:	jp     0x41ece6
  41ecbe:	stos   DWORD PTR es:[edi],eax
  41ecbf:	xor    eax,0xb267851c
  41ecc4:	or     al,0x26
  41ecc6:	and    ebp,ebp
  41ecc8:	xchg   esi,eax
  41ecc9:	mov    esp,0x98b26617
  41ecce:	mov    ds:0xa3de8b7c,al
  41ecd4:	hlt    
  41ecd5:	sub    edi,DWORD PTR [ecx]
  41ecd7:	out    dx,al
  41ecd8:	and    eax,0xc44f8542
  41ecdd:	test   DWORD PTR [edi],esi
  41ecdf:	ins    DWORD PTR es:[edi],dx
  41ece0:	adc    WORD PTR [edx+edx*1+0x1084de97],si
  41ece8:	out    0xfd,eax
  41ecea:	sahf   
  41eceb:	hlt    
  41ecec:	xor    DWORD PTR [esi],esi
  41ecee:	mov    DWORD PTR [eax+eiz*2+0x1a91ccdb],edx
  41ecf5:	loopne 0x41ecd4
  41ecf7:	sbb    ch,BYTE PTR [esp+eax*4+0x32]
  41ecfb:	stc    
  41ecfc:	popa   
  41ecfd:	popf   
  41ecfe:	inc    eax
  41ecff:	ss cld 
  41ed01:	jnp    0x41ed77
  41ed03:	das    
  41ed04:	ror    DWORD PTR ds:[eax],0xed
  41ed08:	push   edi
  41ed09:	push   ebp
  41ed0a:	sub    dh,BYTE PTR [edi]
  41ed0c:	cmp    DWORD PTR [ebp+0x34415622],esi
  41ed12:	push   ss
  41ed13:	jno    0x41ed32
  41ed15:	xchg   esp,eax
  41ed16:	shl    DWORD PTR [ecx+ecx*1-0xc5b8f0],1
  41ed1d:	push   ebx
  41ed1e:	rcr    BYTE PTR [edi+0x3ededde8],1
  41ed24:	xchg   esp,edx
  41ed26:	dec    esi
  41ed27:	in     eax,dx
  41ed28:	jp     0x41ed24
  41ed2a:	mov    bl,0xe2
  41ed2c:	popf   
  41ed2d:	je     0x41ed0c
  41ed2f:	pop    esi
  41ed30:	and    bh,BYTE PTR [ebx+0x2e]
  41ed33:	in     al,dx
  41ed34:	cld    
  41ed35:	shr    DWORD PTR [ebx+ebx*8+0x4e],cl
  41ed39:	push   edx
  41ed3a:	loopne 0x41ed71
  41ed3c:	sub    ebx,DWORD PTR [ebx]
  41ed3e:	cmp    DWORD PTR [ecx-0x12],eax
  41ed41:	mov    esp,0x22ee0266
  41ed46:	out    dx,al
  41ed47:	in     eax,0xc1
  41ed49:	in     eax,0x5
  41ed4b:	pop    edi
  41ed4c:	dec    ecx
  41ed4d:	inc    ebx
  41ed4e:	imul   esi,edi,0xa3d18db8
  41ed54:	pushf  
  41ed55:	adc    al,0x7d
  41ed57:	enter  0xa250,0x71
  41ed5b:	loopne 0x41ed19
  41ed5d:	test   dh,0xab
  41ed60:	xlat   BYTE PTR ds:[ebx]
  41ed61:	arpl   WORD PTR [ebp+0x14c03723],cx
  41ed67:	jmp    0x41ed11
  41ed69:	sbb    eax,ebp
  41ed6b:	sub    al,0x90
  41ed6d:	ss icebp 
  41ed6f:	lods   eax,DWORD PTR ds:[esi]
  41ed70:	(bad)  [ecx+ebx*4-0x6691244d]
  41ed77:	fisttp QWORD PTR [eax-0x79a325af]
  41ed7d:	call   0xd2d5:0x4891fb45
  41ed84:	nop
  41ed85:	inc    esp
  41ed86:	ffree  st(5)
  41ed88:	jmp    0x41edf0
  41ed8a:	push   ds
  41ed8b:	add    al,0x59
  41ed8d:	mov    ah,0xb5
  41ed8f:	cmp    BYTE PTR [esi-0xdfba21e],dh
  41ed95:	fld    DWORD PTR [ecx+0x44]
  41ed98:	ret    
  41ed99:	repz arpl WORD PTR [esi-0x58270a8f],bx
  41eda0:	into   
  41eda1:	mov    esp,0xf6a7439f
  41eda6:	loop   0x41ed60
  41eda8:	test   bh,ah
  41edaa:	(bad)  
  41edab:	xchg   edx,eax
  41edac:	mov    eax,ds:0x891332cf
  41edb1:	dec    esp
  41edb2:	mov    edi,0x5b5fa751
  41edb7:	inc    edx
  41edb8:	push   edi
  41edb9:	xlat   BYTE PTR ds:[ebx]
  41edba:	popa   
  41edbb:	jno    0x41ed51
  41edbd:	(bad)  
  41edbe:	lock mov ebp,0xb6bdb240
  41edc4:	mov    bl,0x17
  41edc6:	fild   QWORD PTR [ecx]
  41edc8:	dec    ecx
  41edc9:	mov    edi,DWORD PTR [ebp-0x40]
  41edcc:	rcr    DWORD PTR [edi-0x320da116],cl
  41edd2:	push   es
  41edd3:	je     0x41edc7
  41edd5:	adc    al,0x69
  41edd7:	xor    eax,0x27d18ab4
  41eddc:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edde:	pusha  
  41eddf:	xor    eax,0x444b932
  41ede4:	pop    edx
  41ede5:	cmp    esi,ebp
  41ede7:	xor    eax,0xb9a8f3eb
  41edec:	data16 sbb ch,BYTE PTR [ebx]
  41edef:	jl     0x41ee44
  41edf1:	jb     0x41ee52
  41edf3:	movups xmm5,XMMWORD PTR [ecx]
  41edf6:	xor    DWORD PTR [ecx+0x41acd52],edi
  41edfc:	rcl    DWORD PTR [ecx],1
  41edfe:	addr16 push ss
  41ee00:	dec    esi
  41ee01:	sbb    al,0x83
  41ee03:	and    al,0xf2
  41ee05:	lds    edx,FWORD PTR [eax-0x5ae05510]
  41ee0b:	add    cl,BYTE PTR ds:0xc218cb94
  41ee11:	push   ebp
  41ee12:	lea    esi,[esi-0x56fbe7c]
  41ee18:	mov    cl,0x24
  41ee1a:	mov    DWORD PTR ds:0x42a8ab07,esp
  41ee20:	(bad)  
  41ee21:	jmp    0xdf8c2654
  41ee26:	jl     0x41edce
  41ee28:	inc    eax
  41ee29:	inc    esi
  41ee2a:	cmp    al,BYTE PTR [ebx-0x36]
  41ee2d:	stc    
  41ee2e:	fild   DWORD PTR [edi+eax*2]
  41ee31:	dec    ecx
  41ee32:	ins    BYTE PTR es:[edi],dx
  41ee33:	sub    ecx,ecx
  41ee35:	int    0xcc
  41ee37:	arpl   cx,cx
  41ee39:	cli    
  41ee3a:	test   eax,0xfd4aeb26
  41ee3f:	sub    ebp,DWORD PTR [eax]
  41ee41:	mov    WORD PTR [esi-0x19426882],gs
  41ee47:	and    DWORD PTR [edx+ebp*4-0x2f],eax
  41ee4b:	mov    ds:0x9902814d,eax
  41ee50:	push   eax
  41ee51:	nop
  41ee52:	(bad)  
  41ee53:	aas    
  41ee54:	cmp    dl,bl
  41ee56:	bound  ebx,QWORD PTR [esi+edx*4]
  41ee59:	pushf  
  41ee5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee5b:	inc    ebx
  41ee5c:	mov    DWORD PTR [ebx-0x77],esi
  41ee5f:	add    ah,ah
  41ee61:	dec    esi
  41ee62:	pop    eax
  41ee63:	test   eax,0xd4c44790
  41ee68:	std    
  41ee69:	repz inc ebp
  41ee6b:	lods   al,BYTE PTR ds:[esi]
  41ee6c:	sbb    BYTE PTR [edx-0x5f],cl
  41ee6f:	fld    DWORD PTR [esi+0x274269fd]
  41ee75:	mov    edi,DWORD PTR [ecx-0x3]
  41ee78:	or     BYTE PTR [edx+0xddfe82a],0xf5
  41ee7f:	add    BYTE PTR [esi-0x25],ch
  41ee82:	xlat   BYTE PTR ds:[ebx]
  41ee83:	sbb    DWORD PTR [eax+0x21],eax
  41ee86:	aam    0xa4
  41ee88:	and    BYTE PTR ds:[eax],dl
  41ee8b:	aam    0x6a
  41ee8d:	ss int3 
  41ee8f:	push   ss
  41ee90:	push   eax
  41ee91:	mov    esp,0x18309adb
  41ee96:	xchg   edi,eax
  41ee97:	fild   DWORD PTR [eax+0x29a6e178]
  41ee9d:	mov    edx,0x5a317a82
  41eea2:	sbb    eax,DWORD PTR [eax+0x13]
  41eea5:	adc    ecx,DWORD PTR [ebp-0x78]
  41eea8:	je     0x41ee45
  41eeaa:	push   edi
  41eeab:	into   
  41eeac:	mov    bl,0x20
  41eeae:	lods   eax,DWORD PTR ds:[esi]
  41eeaf:	(bad)  
  41eeb0:	and    eax,0xda92bc50
  41eeb5:	mov    ah,0x90
  41eeb7:	or     esi,edi
  41eeb9:	int3   
  41eeba:	aaa    
  41eebb:	adc    DWORD PTR [edi+0x2bbc3ef5],0x41
  41eec2:	mov    bh,0xe8
  41eec4:	dec    eax
  41eec5:	sub    BYTE PTR [edx-0x67],cl
  41eec8:	bound  edx,QWORD PTR [esi]
  41eeca:	or     DWORD PTR [ebx+eax*4+0x45],edi
  41eece:	(bad)  
  41eecf:	xor    DWORD PTR [eax-0x7020bb30],eax
  41eed5:	lds    ebx,FWORD PTR [esi+0x5a]
  41eed8:	addr16 adc ah,al
  41eedb:	test   BYTE PTR [eax],ah
  41eedd:	ja     0x41ef5c
  41eedf:	add    edx,esi
  41eee1:	mov    ds:0x896ab6cb,al
  41eee6:	or     al,0xd5
  41eee8:	int    0xa1
  41eeea:	enter  0xa529,0x3
  41eeee:	mov    al,BYTE PTR [ebp+0x73]
  41eef1:	cmp    al,0x5c
  41eef3:	push   0xffffffe7
  41eef5:	push   edx
  41eef6:	and    ah,BYTE PTR [esi]
  41eef8:	imul   edi,DWORD PTR ds:0x2a5afb09,0x38b77464
  41ef02:	out    0x20,al
  41ef04:	dec    esi
  41ef05:	mov    eax,ds:0x584d450e
  41ef0a:	xor    ebp,ecx
  41ef0c:	and    eax,DWORD PTR [edi-0x50ac3428]
  41ef12:	mov    edi,0xd484a5be
  41ef17:	cmp    BYTE PTR [esi+0x7d9c7e27],bl
  41ef1d:	int    0x29
  41ef1f:	jmp    0x4ed5783a
  41ef24:	sbb    eax,0x69c873b1
  41ef29:	retf   0xc463
  41ef2c:	mov    edx,0x1d620d1f
  41ef31:	and    al,0x21
  41ef33:	and    dl,BYTE PTR [ecx]
  41ef35:	mov    ebx,0xf7e98cf5
  41ef3a:	xor    al,0xa1
  41ef3c:	outs   dx,BYTE PTR ds:[esi]
  41ef3d:	jb     0x41ef6a
  41ef3f:	add    al,0xd0
  41ef41:	mov    ecx,0x8b052fc0
  41ef46:	xor    DWORD PTR [ecx+ebp*1+0x5e],edx
  41ef4a:	xor    BYTE PTR [ebx-0x17],cl
  41ef4d:	lods   eax,DWORD PTR ds:[esi]
  41ef4e:	stc    
  41ef4f:	fisub  DWORD PTR [ecx]
  41ef51:	int3   
  41ef52:	call   0xadda:0x612b013d
  41ef59:	or     BYTE PTR [edi-0xde975f0],al
  41ef5f:	out    dx,al
  41ef60:	mov    ah,0xcd
  41ef62:	enter  0xd724,0x1c
  41ef66:	xchg   edi,eax
  41ef67:	pop    eax
  41ef68:	inc    ebx
  41ef69:	femms  
  41ef6b:	xor    esi,ebx
  41ef6d:	fdiv   st,st(1)
  41ef6f:	sahf   
  41ef70:	enter  0x16a5,0xd5
  41ef74:	push   edx
  41ef75:	mov    dl,0xb4
  41ef77:	daa    
  41ef78:	mov    DWORD PTR [eax+edi*4],ebp
  41ef7b:	jns    0x41ef92
  41ef7d:	inc    ebp
  41ef7e:	adc    bl,BYTE PTR [edi+esi*4-0xe]
  41ef82:	lea    edx,[esi-0x15]
  41ef85:	dec    esp
  41ef86:	(bad)  
  41ef87:	jle    0x41efdb
  41ef89:	push   edi
  41ef8a:	scas   eax,DWORD PTR es:[edi]
  41ef8b:	mov    ds:0x25130ee6,al
  41ef90:	out    0x33,eax
  41ef92:	popa   
  41ef93:	stos   BYTE PTR es:[edi],al
  41ef94:	sbb    edi,0xed2dc842
  41ef9a:	rcl    DWORD PTR [eax],0x36
  41ef9d:	cmp    al,0x85
  41ef9f:	js     0x41ef4a
  41efa1:	and    BYTE PTR [eax],dh
  41efa3:	fidiv  DWORD PTR ds:[edx+ebp*8-0x5e42744d]
  41efab:	sbb    BYTE PTR [esi+0x74a031f8],ch
  41efb1:	js     0x41ef4b
  41efb3:	cwde   
  41efb4:	pusha  
  41efb5:	sub    esi,DWORD PTR [ebp+0x52bdb52e]
  41efbb:	push   cs
  41efbc:	pop    esp
  41efbd:	push   ebx
  41efbe:	fs stos DWORD PTR es:[edi],eax
  41efc0:	mov    ds:0xe698470d,al
  41efc5:	dec    esp
  41efc6:	lods   al,BYTE PTR ds:[esi]
  41efc7:	ins    BYTE PTR es:[edi],dx
  41efc8:	test   DWORD PTR [edi-0x34ceb443],esp
  41efce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efcf:	mov    eax,0x875fd32d
  41efd4:	cmc    
  41efd5:	pop    eax
  41efd6:	stos   BYTE PTR es:[edi],al
  41efd7:	or     eax,0xd63cb89
  41efdc:	inc    esp
  41efdd:	out    dx,al
  41efde:	add    al,BYTE PTR [ecx+0x7ef996b4]
  41efe4:	cmc    
  41efe5:	and    ch,BYTE PTR [eax-0x728edb0]
  41efeb:	idiv   dl
  41efed:	xlat   BYTE PTR ds:[ebx]
  41efee:	jbe    0x41efc7
  41eff0:	inc    edx
  41eff1:	bnd jnp 0x41efb8
  41eff4:	and    BYTE PTR fs:[ecx+0x68b22082],0xe5
  41effc:	stos   BYTE PTR es:[edi],al
  41effd:	ret    0xd385
  41f000:	mov    esi,0xa96e7289
  41f005:	add    bl,BYTE PTR [eax+edi*4+0x6a7e1162]
  41f00c:	mov    ch,0xb2
  41f00e:	add    al,0x3f
  41f010:	dec    ecx
  41f011:	mov    esp,esi
  41f013:	ret    
  41f014:	mov    esp,DWORD PTR [eax+0x4c]
  41f017:	pop    ebx
  41f018:	pusha  
  41f019:	enter  0xb172,0x78
  41f01d:	test   BYTE PTR [edx-0x1e],bh
  41f020:	adc    DWORD PTR [esi],edx
  41f022:	fnstsw WORD PTR [esp+ecx*4+0x45]
  41f026:	adc    al,0x98
  41f028:	enter  0xdb30,0x97
  41f02c:	inc    edi
  41f02d:	sub    DWORD PTR [esi],0xfffffff5
  41f030:	add    ch,BYTE PTR ds:0x6cf9b894
  41f036:	jo     0x41f048
  41f038:	jb     0x41efc5
  41f03a:	ss push esp
  41f03c:	dec    eax
  41f03d:	jecxz  0x41efe9
  41f03f:	mov    cl,0x98
  41f041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f042:	fmul   QWORD PTR [edx+eax*4]
  41f045:	jb     0x41efc9
  41f047:	pop    edx
  41f048:	popf   
  41f049:	inc    DWORD PTR [ebx]
  41f04b:	and    dl,BYTE PTR [ecx+0x5a027994]
  41f051:	test   BYTE PTR [esi],cl
  41f053:	int3   
  41f054:	es cmc 
  41f056:	cmp    ecx,ebx
  41f058:	and    BYTE PTR [edi],al
  41f05a:	es push eax
  41f05c:	or     eax,0xea4eec88
  41f061:	mul    BYTE PTR [edx-0x46]
  41f064:	out    dx,al
  41f065:	lods   al,BYTE PTR ds:[esi]
  41f066:	pop    ebx
  41f067:	cmc    
  41f068:	pop    edx
  41f069:	xlat   BYTE PTR ds:[ebx]
  41f06a:	mov    edi,0xf65585a0
  41f06f:	test   al,0x2a
  41f071:	push   es
  41f072:	iret   
  41f073:	test   eax,0x9832cb8f
  41f078:	cmp    DWORD PTR [ecx],ebx
  41f07a:	xor    edx,DWORD PTR [edx-0x2e]
  41f07d:	aas    
  41f07e:	push   0xcd4060cc
  41f083:	and    DWORD PTR [edi-0x7755d189],0xd72553c2
  41f08d:	cli    
  41f08e:	icebp  
  41f08f:	popf   
  41f090:	enter  0xdd71,0xd6
  41f094:	ret    
  41f095:	adc    DWORD PTR [esi],esi
  41f097:	xor    al,0x1d
  41f099:	jo     0x41f0e2
  41f09b:	not    DWORD PTR [eax]
  41f09d:	in     al,dx
  41f09e:	data16 fcmovb st,st(1)
  41f0a1:	iret   
  41f0a2:	fldcw  WORD PTR [ebx-0x2ae0681a]
  41f0a8:	pusha  
  41f0a9:	test   DWORD PTR [ecx],0x625de1b2
  41f0af:	adc    DWORD PTR [ebp+edx*4+0x1e],0x52947cbb
  41f0b7:	adc    DWORD PTR [esi+0x61],edx
  41f0ba:	cmp    eax,0xc747cf87
  41f0bf:	push   ebp
  41f0c0:	outs   dx,DWORD PTR ds:[esi]
  41f0c1:	lods   al,BYTE PTR ds:[esi]
  41f0c2:	sbb    eax,0x172f7981
  41f0c7:	in     al,0x81
  41f0c9:	cwde   
  41f0ca:	add    al,0xb6
  41f0cc:	push   es
  41f0cd:	jg     0x41f0c0
  41f0cf:	mov    db1,esi
  41f0d2:	ror    bl,cl
  41f0d4:	adc    al,0x38
  41f0d6:	dec    eax
  41f0d7:	ret    
  41f0d8:	fisub  WORD PTR [eax+eax*1-0x17]
  41f0dc:	pop    eax
  41f0dd:	daa    
  41f0de:	not    BYTE PTR [esi-0x6]
  41f0e1:	test   dl,dl
  41f0e3:	rcr    BYTE PTR [ecx],0xf3
  41f0e6:	inc    ebp
  41f0e7:	cmp    al,0xd0
  41f0e9:	(bad)  
  41f0ea:	rol    DWORD PTR [esi-0x159979c5],cl
  41f0f0:	bnd jne 0x41f140
  41f0f3:	push   ecx
  41f0f4:	fidivr DWORD PTR [edi-0x1d]
  41f0f7:	ins    DWORD PTR es:[edi],dx
  41f0f8:	add    DWORD PTR [edx-0x3],ebp
  41f0fb:	push   eax
  41f0fc:	sti    
  41f0fd:	sti    
  41f0fe:	mov    ebp,0xbf043254
  41f103:	adc    eax,0x34d7ddee
  41f108:	retf   0x5c35
  41f10b:	stos   BYTE PTR es:[edi],al
  41f10c:	fstp   DWORD PTR [ecx]
  41f10e:	sub    BYTE PTR [esi-0x678877fe],ch
  41f114:	mov    ds:0xf5c13edb,al
  41f119:	and    ch,BYTE PTR [ecx]
  41f11b:	call   0x864b0eaf
  41f120:	retf   0xd4d2
  41f123:	jnp    0x41f18c
  41f125:	jnp    0x41f0da
  41f127:	bound  ebx,QWORD PTR [esp+eiz*4-0x3facd5ad]
  41f12e:	mov    ebx,0xdc390eb4
  41f133:	adc    esi,edx
  41f135:	push   ebx
  41f136:	xor    al,bh
  41f138:	clc    
  41f139:	loope  0x41f173
  41f13b:	out    0x5d,eax
  41f13d:	xor    DWORD PTR [edi+0x6093f024],eax
  41f143:	jmp    0xc1d13532
  41f148:	sub    al,0xe1
  41f14a:	inc    ebp
  41f14b:	call   0xf7dc9cb1
  41f150:	add    esp,0x6feccf1d
  41f156:	fiadd  WORD PTR ds:0xaf985a26
  41f15c:	or     al,0x88
  41f15e:	pop    edx
  41f15f:	jp     0x41f147
  41f161:	and    DWORD PTR [edi-0x21],0xbfc15ac7
  41f168:	pusha  
  41f169:	cld    
  41f16a:	bound  esp,QWORD PTR [ebp-0x1b]
  41f16d:	dec    ebx
  41f16e:	enter  0x1c31,0xc3
  41f172:	ret    
  41f173:	mov    bh,dl
  41f175:	rcr    BYTE PTR [ecx+0x8],0xc2
  41f179:	jp     0x41f0fe
  41f17b:	mov    al,0x76
  41f17d:	mov    al,ds:0xaf5ff9f4
  41f182:	fwait
  41f183:	scas   eax,DWORD PTR es:[edi]
  41f184:	hlt    
  41f185:	xor    BYTE PTR [esi+0x68],al
  41f188:	dec    ebp
  41f189:	pop    ecx
  41f18a:	and    DWORD PTR [edi],eax
  41f18c:	sbb    BYTE PTR [ecx],dh
  41f18e:	jb     0x41f113
  41f190:	or     esi,esp
  41f192:	mov    cl,cl
  41f194:	inc    ebx
  41f195:	mov    DWORD PTR [ecx-0x6b5fd2a2],eax
  41f19b:	les    esp,FWORD PTR [eax]
  41f19d:	and    eax,0x6daa785b
  41f1a2:	cmp    esp,DWORD PTR [ebp+0x6b]
  41f1a5:	cs mov ah,ch
  41f1a8:	int    0xd2
  41f1aa:	xor    al,BYTE PTR ds:0x651d5b06
  41f1b0:	push   edi
  41f1b1:	bound  esp,QWORD PTR [ebx]
  41f1b3:	jo     0x41f1ee
  41f1b5:	cmp    BYTE PTR [edi-0x3266fdf6],0x86
  41f1bc:	das    
  41f1bd:	in     al,dx
  41f1be:	les    ecx,FWORD PTR [esp+ebx*2+0x4]
  41f1c2:	into   
  41f1c3:	sub    al,0x58
  41f1c5:	shl    bh,1
  41f1c7:	xor    BYTE PTR ds:0x63ac600e,cl
  41f1cd:	lahf   
  41f1ce:	lahf   
  41f1cf:	pop    es
  41f1d0:	mov    edi,DWORD PTR [eax-0x134d4d61]
  41f1d6:	pop    ebp
  41f1d7:	mov    bl,0x84
  41f1d9:	mov    dl,0x59
  41f1db:	sub    bl,dl
  41f1dd:	adc    ebx,DWORD PTR [edi]
  41f1df:	inc    eax
  41f1e0:	rcr    dh,1
  41f1e2:	lods   al,BYTE PTR ds:[esi]
  41f1e3:	test   eax,0xa8896d8e
  41f1e8:	mov    edx,0xaf19bcf7
  41f1ed:	xchg   esi,eax
  41f1ee:	xchg   ebx,eax
  41f1ef:	or     ah,BYTE PTR [edx-0x72]
  41f1f2:	cmp    DWORD PTR [edx-0x1a],esi
  41f1f5:	imul   ecx,DWORD PTR [edi+0x46],0xfffffff9
  41f1f9:	push   edi
  41f1fa:	mov    ebp,0x8157aebc
  41f1ff:	dec    ebx
  41f200:	lock test DWORD PTR [edi-0x77],edx
  41f204:	sbb    eax,0x14a9bb3c
  41f209:	ret    
  41f20a:	call   0xa10a:0x9e03f261
  41f211:	pusha  
  41f212:	cmp    BYTE PTR [edx+0x6fe49305],al
  41f218:	adc    DWORD PTR [edi+0x147210fe],esi
  41f21e:	dec    ecx
  41f21f:	mov    bh,0xa5
  41f221:	rcl    BYTE PTR [ebx+0x3],1
  41f224:	or     BYTE PTR [edx+0x78],0x6f
  41f228:	in     eax,dx
  41f229:	enter  0xa4e1,0x3a
  41f22d:	shl    DWORD PTR [ecx+esi*1],1
  41f230:	dec    ebx
  41f231:	sub    al,0x6f
  41f233:	push   eax
  41f234:	stos   DWORD PTR es:[edi],eax
  41f235:	ret    
  41f236:	pop    esi
  41f237:	jecxz  0x41f1c1
  41f239:	sub    edx,ebx
  41f23b:	adc    eax,0x49f1c62
  41f240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f241:	mov    dh,0xa0
  41f243:	imul   esp,DWORD PTR [edi],0x10
  41f246:	mov    dl,0xb9
  41f248:	mov    ebx,0xf6954aaa
  41f24d:	stos   BYTE PTR es:[edi],al
  41f24e:	cdq    
  41f24f:	or     eax,0x18f34174
  41f254:	dec    edi
  41f255:	clc    
  41f256:	push   edx
  41f257:	pop    eax
  41f258:	sub    al,0xf0
  41f25a:	push   ss
  41f25b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f25c:	push   ds
  41f25d:	jecxz  0x41f207
  41f25f:	xor    bh,ah
  41f261:	mov    esp,0x4fea30ed
  41f266:	ror    edx,1
  41f268:	adc    ecx,esp
  41f26a:	push   0x46c35631
  41f26f:	repnz test al,0x6
  41f272:	mov    ch,0x2b
  41f274:	add    ah,cl
  41f276:	and    BYTE PTR ds:0x330dea35,0x60
  41f27d:	idiv   BYTE PTR [eax]
  41f27f:	and    dl,bh
  41f281:	lock cmp dl,BYTE PTR ds:0xf9c936ce
  41f288:	mov    ds:0xfce8baf3,al
  41f28d:	and    edi,DWORD PTR [edi+0x3c0f52a3]
  41f293:	mov    esi,0x28602765
  41f298:	hlt    
  41f299:	xor    DWORD PTR [edi-0x71],edi
  41f29c:	xchg   BYTE PTR ds:0x6543ebb7,al
  41f2a2:	mov    WORD PTR ds:0x891ee612,es
  41f2a8:	sub    esp,DWORD PTR [edi+edi*1+0x4]
  41f2ac:	jno    0x41f2ea
  41f2ae:	mov    ebp,0x24aa4e4e
  41f2b3:	int3   
  41f2b4:	loope  0x41f2bb
  41f2b6:	xor    al,0x22
  41f2b8:	jno    0x41f263
  41f2ba:	cmp    ebx,edi
  41f2bc:	(bad)  
  41f2bd:	fiadd  DWORD PTR [esp+eax*4]
  41f2c0:	xor    al,BYTE PTR [ecx]
  41f2c2:	mov    ebx,0xcb14d91e
  41f2c7:	xlat   BYTE PTR ds:[ebx]
  41f2c8:	inc    eax
  41f2c9:	sbb    BYTE PTR [esi-0x7a964b55],cl
  41f2cf:	add    cl,BYTE PTR [esi]
  41f2d1:	add    ecx,DWORD PTR [esi-0x19]
  41f2d4:	sub    ch,BYTE PTR [edx-0x34427f42]
  41f2da:	cld    
  41f2db:	pop    ebx
  41f2dc:	inc    ebx
  41f2dd:	and    DWORD PTR [ebx+0x10],edx
  41f2e0:	cmovno ebp,DWORD PTR [esi+edx*1-0x46ab1299]
  41f2e8:	arpl   bp,sp
  41f2ea:	mov    ss,esp
  41f2ec:	shl    BYTE PTR [eax],cl
  41f2ee:	sub    eax,esi
  41f2f0:	inc    eax
  41f2f1:	xor    eax,0x92ee9f8f
  41f2f6:	ret    0xc41b
  41f2f9:	aas    
  41f2fa:	lods   eax,DWORD PTR ds:[esi]
  41f2fb:	ret    0xa208
  41f2fe:	push   0x593eff1f
  41f303:	push   0x6c7bd8d4
  41f308:	mov    cl,ch
  41f30a:	jmp    0xbffd:0xd0c1e3f
  41f311:	push   edi
  41f312:	adc    dl,BYTE PTR [esi-0x6b]
  41f315:	sub    edi,DWORD PTR [edi]
  41f317:	pushf  
  41f318:	jbe    0x41f33b
  41f31a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f31b:	inc    edx
  41f31d:	test   DWORD PTR [ebx+0x60],0x4cb5388b
  41f324:	mul    bh
  41f326:	lods   al,BYTE PTR ds:[esi]
  41f327:	leave  
  41f328:	fiadd  DWORD PTR [eax]
  41f32a:	push   esp
  41f32b:	cmp    al,0x45
  41f32d:	fs adc eax,0x72ae45b3
  41f333:	pushf  
  41f334:	(bad)  
  41f335:	push   ds
  41f336:	mov    fs,WORD PTR [edx+eiz*1-0x111d87b2]
  41f33d:	stos   DWORD PTR es:[edi],eax
  41f33e:	cmp    DWORD PTR [edx-0x2760ee10],ecx
  41f344:	xor    ch,BYTE PTR [ecx-0x51fc82d7]
  41f34a:	xchg   BYTE PTR [ecx],dl
  41f34c:	sub    BYTE PTR [ecx],ah
  41f34e:	xor    al,0x39
  41f350:	lods   al,BYTE PTR ds:[esi]
  41f351:	adc    BYTE PTR [esi+edx*1-0x1b],dl
  41f355:	dec    eax
  41f356:	rcl    DWORD PTR [edi+esi*4+0x71e53877],cl
  41f35d:	and    BYTE PTR [eax-0x6d8d1922],al
  41f363:	pop    esp
  41f364:	pop    edi
  41f365:	mov    edi,0x2ca195df
  41f36b:	sbb    al,0x3f
  41f36d:	push   esp
  41f36e:	xchg   edi,eax
  41f36f:	inc    eax
  41f370:	repz dec ecx
  41f372:	(bad)  [esi-0x2f]
  41f375:	mov    ds:0x1f05f644,eax
  41f37a:	pop    edi
  41f37b:	inc    ebp
  41f37c:	lods   al,BYTE PTR ds:[esi]
  41f37d:	jbe    0x41f3ef
  41f37f:	and    al,0x10
  41f381:	push   es
  41f382:	push   cs
  41f383:	inc    edx
  41f384:	push   ss
  41f385:	add    DWORD PTR [esi],ecx
  41f387:	mov    edi,0xfbfbdb2f
  41f38c:	xor    DWORD PTR [esi-0x3b8f8a3d],eax
  41f392:	inc    BYTE PTR [ebp-0x48]
  41f395:	mov    eax,0x338bbcdd
  41f39a:	cmp    eax,0x54d23997
  41f39f:	inc    eax
  41f3a0:	pop    eax
  41f3a1:	cmp    BYTE PTR [ecx-0x4c],cl
  41f3a4:	ret    
  41f3a5:	mov    edx,DWORD PTR [eax-0x77]
  41f3a8:	mov    ebx,0xe49c3bf
  41f3ad:	pop    esp
  41f3ae:	or     edx,DWORD PTR [ecx]
  41f3b0:	cwde   
  41f3b1:	sbb    ebp,edi
  41f3b3:	push   esp
  41f3b4:	arpl   WORD PTR [ebx],si
  41f3b6:	scas   al,BYTE PTR es:[edi]
  41f3b7:	cmp    dl,BYTE PTR [ebp-0x6a19d7f]
  41f3bd:	fdivr  QWORD PTR [eax+0x712c02f9]
  41f3c3:	sar    DWORD PTR cs:[ebx+0x21],1
  41f3c7:	call   0x8b3a:0xb7e0b063
  41f3ce:	lock sub DWORD PTR [esi],0x6c
  41f3d2:	jbe    0x41f3a0
  41f3d4:	and    DWORD PTR [edx],ebx
  41f3d6:	and    al,bh
  41f3d8:	out    dx,al
  41f3d9:	push   ebx
  41f3da:	in     eax,0x45
  41f3dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3dd:	fadd   st(2),st
  41f3df:	xlat   BYTE PTR cs:[ebx]
  41f3e1:	fcom   QWORD PTR [edi-0x5d]
  41f3e4:	das    
  41f3e5:	sub    ebx,eax
  41f3e7:	dec    esi
  41f3e8:	mov    al,ds:0x9381e4a2
  41f3ed:	daa    
  41f3ee:	retf   
  41f3ef:	aas    
  41f3f0:	inc    edi
  41f3f1:	jno    0x41f3d8
  41f3f3:	or     BYTE PTR [edx-0x7e],ch
  41f3f6:	call   0x6366:0x1d7a493d
  41f3fd:	fmul   QWORD PTR [edi+eiz*8]
  41f400:	rcl    BYTE PTR [ecx-0x8],1
  41f403:	adc    ecx,DWORD PTR [edi+0x57074f14]
  41f409:	into   
  41f40a:	mov    ebx,0x52d020a9
  41f40f:	ss xchg ecx,eax
  41f411:	popf   
  41f412:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f413:	das    
  41f414:	cwde   
  41f415:	dec    edi
  41f416:	cld    
  41f417:	xor    al,bh
  41f419:	aas    
  41f41a:	repz or bl,dh
  41f41d:	lods   eax,DWORD PTR ds:[esi]
  41f41e:	imul   esp,DWORD PTR [esi-0x6c],0x58bcb96d
  41f425:	inc    ecx
  41f426:	pop    ebx
  41f427:	call   0xbf137b94
  41f42c:	adc    eax,0x99525175
  41f431:	mov    cl,0x84
  41f433:	jle    0x41f41f
  41f435:	scas   al,BYTE PTR es:[edi]
  41f436:	(bad)  
  41f437:	and    dl,BYTE PTR [edi+0x48]
  41f43a:	adc    BYTE PTR [eax+ebp*1+0x681355b7],0xa4
  41f442:	pushf  
  41f443:	cmp    DWORD PTR [eax+0x5e396743],edi
  41f449:	call   0xdc3642ea
  41f44e:	psubusb mm4,QWORD PTR [edx+0x7d3aa83b]
  41f455:	repnz xor al,0x57
  41f458:	xchg   ecx,eax
  41f459:	mov    esi,0x7cdaf0db
  41f45e:	(bad)
  41f461:	rcr    DWORD PTR [esi+0x1e8f333c],0x12
  41f468:	mov    ch,0xdb
  41f46a:	add    DWORD PTR [edx],0x2276aaaf
  41f470:	xchg   ebp,eax
  41f471:	daa    
  41f472:	xchg   esi,eax
  41f473:	pop    edx
  41f474:	inc    DWORD PTR [edi-0x4d]
  41f477:	add    DWORD PTR [ebp-0x3992a355],ecx
  41f47d:	push   0x18
  41f47f:	shl    BYTE PTR [edi],0x8
  41f482:	js     0x41f40d
  41f484:	imul   BYTE PTR [ecx]
  41f486:	push   ebp
  41f487:	out    dx,al
  41f488:	jno    0x41f42a
  41f48a:	xor    al,0x5e
  41f48c:	bound  ebp,QWORD PTR ds:0x3b5cccd0
  41f492:	shl    BYTE PTR [ebx+0x2eee82ef],1
  41f498:	pop    ebp
  41f499:	inc    esi
  41f49a:	add    eax,DWORD PTR [eax+0x56]
  41f49d:	xor    bh,ah
  41f49f:	aas    
  41f4a0:	or     al,0x82
  41f4a2:	cmp    eax,0x91a8bf9f
  41f4a7:	fistp  QWORD PTR [ecx+0x32]
  41f4aa:	cmp    BYTE PTR [eax],bl
  41f4ac:	mov    al,cl
  41f4ae:	iret   
  41f4af:	inc    eax
  41f4b0:	xor    dh,bl
  41f4b2:	jle    0x41f46f
  41f4b4:	aaa    
  41f4b5:	int3   
  41f4b6:	mov    DWORD PTR [edi-0x5aa7bc31],edx
  41f4bc:	jmp    0xbeb8:0xe5a697d7
  41f4c3:	out    0xf7,eax
  41f4c5:	rcl    ch,cl
  41f4c7:	(bad)  
  41f4c8:	out    0xb9,eax
  41f4ca:	mov    bh,0x54
  41f4cc:	test   al,0xe8
  41f4ce:	cmc    
  41f4cf:	cdq    
  41f4d0:	cmp    BYTE PTR [edx],dh
  41f4d2:	push   ebx
  41f4d3:	and    eax,0x287fcdf8
  41f4d8:	fidivr WORD PTR [esi+0x29]
  41f4db:	sbb    eax,0x8f5b1fb4
  41f4e0:	ret    
  41f4e1:	sub    eax,0x3591b45a
  41f4e6:	jnp    0x41f48f
  41f4e8:	aam    0x86
  41f4ea:	mov    ds:0x160b2e0e,eax
  41f4ef:	sub    cl,ch
  41f4f1:	inc    edx
  41f4f2:	xchg   ebx,eax
  41f4f3:	ins    BYTE PTR es:[edi],dx
  41f4f4:	add    bh,BYTE PTR [edx+0x3a]
  41f4f7:	push   ecx
  41f4f8:	lods   eax,DWORD PTR ds:[esi]
  41f4f9:	mov    cs,ecx
  41f4fb:	addr16 nop
  41f4fd:	rcr    BYTE PTR [ebx],cl
  41f4ff:	ror    BYTE PTR [ebp-0x472f7b04],0xa5
  41f506:	jmp    0x148:0xbf927da1
  41f50d:	and    ecx,DWORD PTR [eax-0x26]
  41f510:	jg     0x41f4b9
  41f512:	sbb    dl,BYTE PTR [esp+eiz*2-0x1d]
  41f516:	jno    0x41f4aa
  41f518:	es or  al,0xbc
  41f51b:	mov    ch,0x74
  41f51d:	add    ah,BYTE PTR [edx-0x20]
  41f520:	inc    eax
  41f521:	jecxz  0x41f571
  41f523:	xor    DWORD PTR [esi+0x1f],0x45
  41f527:	test   BYTE PTR [edi],dl
  41f529:	ins    BYTE PTR es:[edi],dx
  41f52a:	mov    esi,0xdb6b1dbd
  41f52f:	push   ecx
  41f530:	es je  0x41f549
  41f533:	xchg   edi,eax
  41f534:	aad    0x22
  41f536:	mov    ds:0x5295d30d,al
  41f53b:	add    BYTE PTR [esi+eax*8],bh
  41f53e:	pushf  
  41f53f:	mov    al,ds:0xe90eda0e
  41f544:	fiadd  DWORD PTR [eax+esi*8]
  41f547:	add    edi,DWORD PTR ss:[edi]
  41f54a:	sbb    al,0x78
  41f54c:	push   ss
  41f54d:	adc    al,0xd
  41f54f:	pop    es
  41f550:	inc    esp
  41f551:	stos   DWORD PTR es:[edi],eax
  41f552:	sub    edi,edi
  41f554:	sbb    ebp,DWORD PTR [ecx-0x6298605f]
  41f55a:	mov    dh,0xc9
  41f55c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f55d:	imul   ebp,edi,0x76
  41f560:	pop    eax
  41f561:	ret    0xf531
  41f564:	std    
  41f565:	stc    
  41f566:	ror    BYTE PTR [ebp+0x22],0x39
  41f56a:	scas   al,BYTE PTR es:[edi]
  41f56b:	shr    DWORD PTR [edx+0x1c],cl
  41f56e:	xchg   BYTE PTR [ebx-0x355a5012],ch
  41f574:	cmp    ebp,DWORD PTR [eax-0x35]
  41f577:	mov    BYTE PTR [ebx-0x66],0xd9
  41f57b:	or     al,0x93
  41f57d:	push   edx
  41f57e:	aaa    
  41f57f:	mov    ebx,0x9b06995c
  41f584:	mov    esp,0xe807839
  41f589:	pop    ebx
  41f58a:	or     bh,ah
  41f58c:	jg     0x41f54c
  41f58e:	dec    edx
  41f58f:	jle    0x41f548
  41f591:	vcvtss2sd xmm5,xmm7,DWORD PTR [edi]
  41f595:	fstp   DWORD PTR [edx+0x489e86b5]
  41f59b:	inc    esp
  41f59c:	push   es
  41f59d:	mov    dh,0x27
  41f59f:	xlat   BYTE PTR ds:[ebx]
  41f5a0:	(bad)  
  41f5a1:	pop    ss
  41f5a2:	push   ebx
  41f5a3:	push   esi
  41f5a4:	add    bh,cl
  41f5a6:	cli    
  41f5a7:	cmp    DWORD PTR [edi+0x2586c544],ebp
  41f5ad:	adc    dl,BYTE PTR [eax]
  41f5af:	test   al,0xa2
  41f5b1:	or     cl,BYTE PTR [ebx+0x77568376]
  41f5b7:	jae    0x41f61e
  41f5b9:	mov    al,0xbf
  41f5bb:	cmp    ebx,ebp
  41f5bd:	shl    BYTE PTR [eax+0x31e3da5c],1
  41f5c3:	imul   esp,DWORD PTR [esi+ebx*8+0x2c],0xffffffea
  41f5c8:	in     eax,dx
  41f5c9:	mov    ch,0x89
  41f5cb:	je     0x41f60a
  41f5cd:	ins    DWORD PTR es:[edi],dx
  41f5ce:	mov    cl,0x6b
  41f5d0:	sbb    al,0xf8
  41f5d2:	in     eax,0x2
  41f5d4:	sub    ch,BYTE PTR [ecx]
  41f5d6:	push   ds
  41f5d7:	(bad)  
  41f5d8:	ins    DWORD PTR es:[edi],dx
  41f5d9:	jnp    0x41f56e
  41f5db:	mov    ch,0x10
  41f5dd:	out    0xd0,eax
  41f5df:	xchg   ebp,eax
  41f5e0:	mov    edx,0x927b72cc
  41f5e5:	sbb    eax,0xd216f71c
  41f5ea:	std    
  41f5eb:	push   si
  41f5ed:	mov    esp,0xc5db559d
  41f5f2:	add    al,0xa8
  41f5f4:	xchg   ebx,eax
  41f5f5:	and    edi,ecx
  41f5f7:	icebp  
  41f5f8:	popf   
  41f5f9:	inc    ebx
  41f5fa:	inc    esp
  41f5fb:	xchg   edi,ebx
  41f5fd:	mov    dh,0x11
  41f5ff:	cdq    
  41f600:	mov    esi,0x200344d7
  41f605:	leave  
  41f606:	mov    ds:0x8dd75931,al
  41f60b:	sbb    al,0xf7
  41f60d:	cmp    ch,ch
  41f60f:	nop
  41f610:	push   edi
  41f611:	outs   dx,DWORD PTR ds:[esi]
  41f612:	cli    
  41f613:	pop    es
  41f614:	mov    al,ds:0xff33d331
  41f619:	pop    ds
  41f61a:	xor    DWORD PTR [edi-0x20],0x28180134
  41f621:	inc    ecx
  41f622:	hlt    
  41f623:	jnp    0x41f5c6
  41f625:	push   0xffffffb9
  41f627:	das    
  41f628:	call   0x6c9a1ba9
  41f62d:	out    0x22,al
  41f62f:	sub    al,0x10
  41f631:	cmp    edx,DWORD PTR [ecx-0x59049084]
  41f637:	into   
  41f638:	sbb    BYTE PTR [ecx-0x61],cl
  41f63b:	cmp    al,ah
  41f63d:	cmp    al,0x8f
  41f63f:	jnp    0x41f646
  41f641:	mov    cs,WORD PTR [ecx-0x11709bb9]
  41f647:	cli    
  41f648:	clc    
  41f649:	lods   eax,DWORD PTR ds:[esi]
  41f64a:	les    edx,FWORD PTR [edi+0x506442ef]
  41f650:	adc    eax,0x6f3c664
  41f655:	jb     0x41f6b2
  41f657:	punpckldq mm1,mm1
  41f65a:	xor    eax,DWORD PTR [eax-0x9fc8b89]
  41f660:	out    0x5e,al
  41f662:	push   0xffffffbe
  41f664:	out    0xb4,eax
  41f666:	(bad)  
  41f667:	cmp    BYTE PTR [esi],al
  41f669:	add    DWORD PTR [ebx+0xbd6ba7d],ebx
  41f66f:	data16 mov cl,0xec
  41f672:	mov    ebp,0x8b9c6816
  41f677:	xchg   edi,eax
  41f678:	aaa    
  41f679:	adc    BYTE PTR [ebx],cl
  41f67b:	pop    ds
  41f67c:	fcomp  QWORD PTR [edx]
  41f67e:	push   cs
  41f67f:	push   ecx
  41f680:	push   esp
  41f681:	push   DWORD PTR [ebx+0x22]
  41f684:	lds    eax,FWORD PTR [edi+0x2aa40b71]
  41f68a:	mov    cl,BYTE PTR [edx+edi*2+0x77237ca]
  41f691:	jecxz  0x41f6da
  41f693:	loopne 0x41f624
  41f695:	jmp    0x41f6b3
  41f697:	jmp    0x3d81:0xe73d6b42
  41f69e:	inc    edi
  41f69f:	add    eax,ecx
  41f6a1:	ret    0x403e
  41f6a4:	test   eax,0x27ae5fd6
  41f6a9:	stos   BYTE PTR es:[edi],al
  41f6aa:	lods   al,BYTE PTR ds:[esi]
  41f6ab:	sbb    al,0xba
  41f6ad:	das    
  41f6ae:	ss ret 
  41f6b0:	sbb    DWORD PTR [eax],eax
  41f6b2:	(bad)  
  41f6b3:	push   ss
  41f6b4:	fs push ebp
  41f6b6:	push   edx
  41f6b7:	(bad)  
  41f6b8:	and    al,0xb0
  41f6ba:	mov    esp,0xd9aedeac
  41f6bf:	out    dx,al
  41f6c0:	test   ebx,esi
  41f6c2:	repnz xchg esp,eax
  41f6c4:	test   al,0xfe
  41f6c6:	(bad)  
  41f6c7:	outs   dx,DWORD PTR ds:[esi]
  41f6c8:	cld    
  41f6c9:	fcmovnbe st,st(2)
  41f6cb:	dec    ecx
  41f6cc:	lahf   
  41f6cd:	jne    0x41f66b
  41f6cf:	push   ecx
  41f6d0:	mov    BYTE PTR [ebp-0x7a],ch
  41f6d3:	push   ebx
  41f6d4:	sub    DWORD PTR [ebp+0x73d7b6fc],esi
  41f6da:	pop    ds
  41f6db:	and    al,0x63
  41f6dd:	(bad)  
  41f6de:	les    ecx,FWORD PTR [edx-0x3c]
  41f6e1:	adc    eax,0xe6faa6c0
  41f6e6:	ss das 
  41f6e8:	push   0x8f5b8fb8
  41f6ed:	inc    edi
  41f6ee:	(bad)
  41f6f1:	pushf  
  41f6f2:	dec    ecx
  41f6f3:	sub    DWORD PTR [esi+0x20],esp
  41f6f6:	lahf   
  41f6f7:	and    cl,BYTE PTR [edx-0x15db7557]
  41f6fd:	icebp  
  41f6fe:	cmp    esp,edi
  41f700:	jmp    0xb7e73a95
  41f705:	inc    edx
  41f706:	inc    eax
  41f707:	inc    esp
  41f708:	fst    QWORD PTR [ebp-0x7dbe74ce]
  41f70e:	(bad)  
  41f70f:	push   ds
  41f710:	mov    edx,0xa41af72a
  41f715:	inc    edi
  41f716:	dec    ebp
  41f717:	bnd jae 0x41f797
  41f71a:	jle    0x41f72b
  41f71c:	xor    al,0x9f
  41f71e:	mov    dl,0xe5
  41f720:	inc    cx
  41f722:	out    0xcf,al
  41f724:	mov    bh,0x5c
  41f726:	int    0x9
  41f728:	fwait
  41f729:	adc    BYTE PTR [eax],cl
  41f72b:	retf   0x11ef
  41f72e:	pop    edx
  41f72f:	mov    esp,0x4a1ae99d
  41f734:	aam    0xc3
  41f736:	ins    BYTE PTR es:[edi],dx
  41f737:	and    DWORD PTR [edi+0x6e],esi
  41f73a:	xchg   esp,eax
  41f73b:	stc    
  41f73c:	inc    ecx
  41f73d:	addr16 xchg edi,eax
  41f73f:	inc    ecx
  41f740:	das    
  41f741:	sub    al,0x46
  41f743:	fcom   QWORD PTR [esi]
  41f745:	and    esp,0x40
  41f748:	sbb    BYTE PTR [esi-0x3d2ee607],al
  41f74e:	push   esp
  41f74f:	adc    DWORD PTR [ecx-0x47a4c787],edi
  41f755:	loop   0x41f7b6
  41f757:	sbb    ebx,edx
  41f759:	inc    esi
  41f75a:	mov    dh,0x4e
  41f75c:	test   al,0x81
  41f75e:	jecxz  0x41f6ed
  41f760:	jmp    0x41f702
  41f762:	and    al,al
  41f764:	stc    
  41f765:	(bad)  
  41f766:	(bad)  
  41f767:	cs mov bh,0x68
  41f76a:	retf   0x7293
  41f76d:	inc    esp
  41f76e:	jg     0x41f791
  41f770:	or     al,0x6b
  41f772:	sbb    eax,0x93e0e29a
  41f777:	jb     0x41f7cd
  41f779:	sahf   
  41f77a:	cli    
  41f77b:	push   0x46
  41f77d:	push   0x5a
  41f77f:	jecxz  0x41f7dc
  41f781:	mov    bl,0x49
  41f783:	(bad)  
  41f784:	push   ds
  41f785:	fisubr WORD PTR [ecx+0x680adf6]
  41f78b:	fwait
  41f78c:	test   eax,0xccef83bc
  41f791:	leave  
  41f792:	ret    
  41f793:	call   0xd92577a3
  41f798:	mov    dh,0x7c
  41f79a:	adc    dh,ch
  41f79c:	push   esp
  41f79d:	and    edx,DWORD PTR [ebp+0x66]
  41f7a0:	clc    
  41f7a1:	or     DWORD PTR [edi],0x3ac0b43e
  41f7a7:	xchg   esp,eax
  41f7a8:	push   ebx
  41f7a9:	xor    DWORD PTR [esi],0x7f88c2d6
  41f7af:	popf   
  41f7b0:	mov    ecx,0x35245a03
  41f7b5:	ja     0x41f7b9
  41f7b7:	out    dx,eax
  41f7b8:	xchg   esi,ebp
  41f7ba:	enter  0x5753,0x8b
  41f7be:	cs call 0x635c:0xeb2a0ea7
  41f7c6:	test   eax,0xac52ee59
  41f7cb:	nop
  41f7cc:	repnz add al,0x9a
  41f7cf:	push   ds
  41f7d0:	mov    ebx,0xceaf8bf1
  41f7d5:	or     eax,0x95c139fe
  41f7da:	scas   al,BYTE PTR es:[edi]
  41f7db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7dc:	or     DWORD PTR [ecx-0x77],0x4b54148d
  41f7e3:	add    al,0x5b
  41f7e5:	and    esp,DWORD PTR [ebp-0x399d1478]
  41f7eb:	mov    bh,0xc2
  41f7ed:	push   eax
  41f7ee:	dec    edi
  41f7ef:	rcr    BYTE PTR [edx],0x45
  41f7f2:	cmp    esi,DWORD PTR [ebp-0x3e68b753]
  41f7f8:	jg     0x41f7f5
  41f7fa:	fst    QWORD PTR [esi-0x65]
  41f7fd:	fwait
  41f7fe:	sub    al,0x5e
  41f800:	xchg   esi,eax
  41f801:	or     dh,BYTE PTR [edi-0x6f28d460]
  41f807:	pop    ss
  41f808:	sub    esp,DWORD PTR [ebx+eax*2+0x65]
  41f80c:	pop    edx
  41f80d:	ret    0xa258
  41f810:	pop    esi
  41f811:	xor    al,0xcb
  41f813:	xchg   ecx,eax
  41f814:	or     BYTE PTR [ebx],dl
  41f816:	cmc    
  41f817:	mov    bh,0x51
  41f819:	adc    ah,BYTE PTR [eax-0x78dfe74b]
  41f81f:	xor    eax,0x1dc1f02a
  41f824:	jo     0x530c8215
  41f82a:	xchg   esp,eax
  41f82b:	inc    edx
  41f82c:	fidivr WORD PTR [eax+ecx*2-0x2a]
  41f830:	in     eax,dx
  41f831:	adc    ecx,DWORD PTR [ebx-0x4c4b69e4]
  41f837:	and    al,0xc2
  41f839:	add    esp,DWORD PTR [esi+0x6a]
  41f83c:	in     eax,dx
  41f83d:	cmp    edx,DWORD PTR [ecx-0x5]
  41f840:	mov    esp,0xd25f9d5e
  41f845:	cli    
  41f846:	jo     0x41f81b
  41f848:	adc    eax,0x43c1fe72
  41f84d:	push   ebx
  41f84e:	es xchg esp,eax
  41f850:	mov    WORD PTR [ecx-0x38],ss
  41f853:	lods   al,BYTE PTR ds:[esi]
  41f854:	push   ebp
  41f855:	adc    BYTE PTR [esi+0x467be0e3],ch
  41f85b:	(bad)  
  41f85c:	std    
  41f85d:	cmp    DWORD PTR [esi+0xd],eax
  41f860:	jns    0x41f89b
  41f862:	push   ebx
  41f863:	(bad)  
  41f864:	repnz test edi,ecx
  41f867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f868:	int    0x53
  41f86a:	pop    bx
  41f86c:	ss jl  0x41f86e
  41f86f:	xchg   esp,eax
  41f870:	stos   BYTE PTR es:[edi],al
  41f871:	push   cs
  41f872:	ins    BYTE PTR es:[edi],dx
  41f873:	mov    al,0xc1
  41f875:	loopne 0x41f8e5
  41f877:	push   0x82ad89c3
  41f87c:	jp     0x41f87e
  41f87e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f87f:	mov    ds:0xf52d91d7,eax
  41f884:	adc    DWORD PTR [edx],esp
  41f886:	lds    esp,FWORD PTR cs:[edi-0x3f]
  41f88a:	sub    al,0x8b
  41f88c:	jl     0x41f858
  41f88e:	xchg   edx,eax
  41f88f:	push   edx
  41f890:	dec    edx
  41f891:	jno    0x41f8a4
  41f893:	push   ss
  41f894:	loope  0x41f891
  41f896:	imul   esp,DWORD PTR [edi],0x73d9ccd6
  41f89c:	ret    0xcde4
  41f89f:	cmp    DWORD PTR gs:[edx+0x5a],ebx
  41f8a3:	rol    edi,0x8a
  41f8a6:	ficomp DWORD PTR [esi]
  41f8a8:	in     al,dx
  41f8a9:	ret    0x2006
  41f8ac:	scas   eax,DWORD PTR es:[edi]
  41f8ad:	xchg   ecx,eax
  41f8ae:	mov    dl,0x8b
  41f8b0:	sub    DWORD PTR [edi],ebx
  41f8b2:	xchg   ebx,eax
  41f8b3:	xlat   BYTE PTR ds:[ebx]
  41f8b4:	outs   dx,BYTE PTR ds:[esi]
  41f8b5:	sti    
  41f8b6:	push   esi
  41f8b7:	xor    DWORD PTR [eax-0xc],eax
  41f8ba:	(bad)  [esi]
  41f8bc:	cmp    edi,DWORD PTR [edi-0x2b]
  41f8bf:	outs   dx,BYTE PTR ds:[esi]
  41f8c0:	pop    ds
  41f8c1:	mov    bl,0x7b
  41f8c3:	int3   
  41f8c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8c5:	sbb    ah,ch
  41f8c7:	shl    BYTE PTR [eax+ecx*2-0x28a3aa5c],0x3c
  41f8cf:	shl    BYTE PTR [ecx+ebx*1+0x7374628a],cl
  41f8d6:	repnz (bad) 
  41f8d8:	cmp    al,0x22
  41f8da:	fmul   DWORD PTR [edi]
  41f8dc:	pop    esp
  41f8dd:	mov    ds:0x956f1503,al
  41f8e2:	call   0xfee6321a
  41f8e7:	(bad)  
  41f8e8:	pusha  
  41f8e9:	mov    al,0x25
  41f8eb:	push   esp
  41f8ec:	xchg   esp,eax
  41f8ed:	cmp    eax,0xef84c5e3
  41f8f2:	stos   DWORD PTR es:[edi],eax
  41f8f3:	dec    eax
  41f8f4:	outs   dx,BYTE PTR ds:[esi]
  41f8f5:	mov    ah,0xc6
  41f8f7:	adc    eax,0x4e4ac7da
  41f8fc:	sti    
  41f8fd:	repz sbb eax,0x3913db5d
  41f903:	and    ah,BYTE PTR [eax]
  41f905:	inc    esi
  41f906:	sbb    dl,BYTE PTR [esi-0xa]
  41f909:	icebp  
  41f90a:	jl     0x41f8fb
  41f90c:	out    dx,al
  41f90d:	ins    BYTE PTR es:[di],dx
  41f90f:	lock xchg esp,eax
  41f911:	aam    0x74
  41f913:	cli    
  41f914:	jmp    0x961183
  41f919:	or     al,BYTE PTR [edi]
  41f91b:	cdq    
  41f91c:	lea    esi,[ebx]
  41f91e:	sar    BYTE PTR [ecx],cl
  41f920:	push   0xffffff8a
  41f922:	adc    dh,BYTE PTR [ecx+edi*2+0x2384aea1]
  41f929:	mov    al,ds:0x9e3431ff
  41f92e:	test   edi,0xdaebf9eb
  41f934:	xchg   ebx,eax
  41f935:	div    DWORD PTR [esi]
  41f937:	sub    ebx,DWORD PTR [eax]
  41f939:	repz add al,0xf7
  41f93c:	arpl   WORD PTR [bp+si],di
  41f93f:	push   es
  41f940:	push   ss
  41f941:	jne    0x41f96b
  41f943:	push   0x63e08619
  41f948:	jbe    0x41f9c7
  41f94a:	jmp    0x41f982
  41f94c:	ret    
  41f94d:	mov    bl,0x43
  41f94f:	sti    
  41f950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f951:	out    0xf6,eax
  41f953:	inc    esp
  41f954:	int3   
  41f955:	cmp    BYTE PTR [ebx+0x38525bc5],bh
  41f95b:	xor    BYTE PTR [edx],bl
  41f95d:	pop    esi
  41f95e:	scas   eax,DWORD PTR es:[edi]
  41f95f:	cmp    esi,eax
  41f961:	ror    BYTE PTR [eax],0x8d
  41f964:	inc    eax
  41f965:	jns    0x41f914
  41f967:	cwde   
  41f968:	call   0xe10646a0
  41f96d:	push   edx
  41f96e:	xor    al,0xf
  41f970:	in     al,0xfe
  41f972:	loope  0x41f9e4
  41f974:	jp     0x41f971
  41f976:	cmp    DWORD PTR [ebp-0x71785ff4],edi
  41f97c:	pop    edi
  41f97d:	push   cs
  41f97e:	or     BYTE PTR [edi],0x56
  41f981:	sahf   
  41f982:	cwde   
  41f983:	scas   al,BYTE PTR es:[edi]
  41f984:	jno    0x41f946
  41f986:	iret   
  41f987:	fdiv   st(7),st
  41f989:	ds sti 
  41f98b:	jl     0x41f9b1
  41f98d:	call   0x6d97:0xab80ba46
  41f994:	push   0xfffffff6
  41f996:	cmp    bh,BYTE PTR [ebx-0x3223d7fe]
  41f99c:	or     eax,ebx
  41f99e:	dec    edx
  41f99f:	stos   DWORD PTR es:[edi],eax
  41f9a0:	das    
  41f9a1:	hlt    
  41f9a2:	mov    DWORD PTR ds:0xa731ccb,ebx
  41f9a8:	pop    eax
  41f9a9:	test   BYTE PTR [ebp+ebp*1-0x78],ch
  41f9ad:	xor    al,0xc8
  41f9af:	xchg   ebx,eax
  41f9b0:	pop    eax
  41f9b1:	jmp    0x36bd2f49
  41f9b6:	inc    ecx
  41f9b7:	jb     0x41f953
  41f9b9:	pop    edx
  41f9ba:	shl    BYTE PTR [ecx+eax*4-0x7b4f1a3d],cl
  41f9c1:	add    BYTE PTR [ecx-0x13],ch
  41f9c4:	fdiv   DWORD PTR [ebx-0x44c08675]
  41f9ca:	cmp    al,0xd6
  41f9cc:	inc    eax
  41f9cd:	cwde   
  41f9ce:	jbe    0x41fa43
  41f9d0:	call   DWORD PTR [eax-0x72]
  41f9d3:	cmp    eax,0x87f1a4b4
  41f9d8:	pop    edx
  41f9d9:	add    eax,0x50aa822b
  41f9de:	ja     0x41f9f5
  41f9e0:	xchg   DWORD PTR [ebx+0x75],ecx
  41f9e3:	xchg   bh,cl
  41f9e5:	pop    edi
  41f9e6:	iret   
  41f9e7:	pop    esi
  41f9e8:	jecxz  0x41fa46
  41f9ea:	scas   al,BYTE PTR es:[edi]
  41f9eb:	sbb    al,0xcf
  41f9ed:	scas   eax,DWORD PTR es:[edi]
  41f9ee:	cld    
  41f9ef:	fidivr DWORD PTR [edi-0x49905000]
  41f9f5:	cmp    al,0xe9
  41f9f7:	push   eax
  41f9f8:	sub    BYTE PTR [ebx+0x16152e64],0xc9
  41f9ff:	jmp    0x462534e
  41fa04:	xor    ecx,DWORD PTR [ebp-0x1127dc79]
  41fa0a:	mov    bh,0x97
  41fa0c:	sub    BYTE PTR [ebp+0x6d],al
  41fa0f:	or     BYTE PTR [edx-0x4d727b5a],dl
  41fa15:	and    al,0x30
  41fa17:	dec    ebp
  41fa18:	call   0x83b21700
  41fa1d:	fwait
  41fa1e:	mov    ecx,0xb2d91802
  41fa23:	iret   
  41fa24:	rcr    DWORD PTR [edi],cl
  41fa26:	aaa    
  41fa27:	xchg   ebx,eax
  41fa28:	scas   al,BYTE PTR es:[edi]
  41fa29:	push   esi
  41fa2a:	aam    0x95
  41fa2c:	cmp    eax,0xcec37676
  41fa31:	ficom  WORD PTR [edi+0x1bc2c2a2]
  41fa37:	or     bh,BYTE PTR [ebx]
  41fa39:	pop    esi
  41fa3a:	in     eax,dx
  41fa3b:	jae    0x41fa33
  41fa3d:	add    dh,BYTE PTR [ebx+0x78a56509]
  41fa43:	pop    eax
  41fa44:	push   ecx
  41fa45:	pusha  
  41fa46:	imul   esi,edi,0x94b6d9d4
  41fa4c:	imul   ebp,esp,0x6d
  41fa4f:	mov    dh,0xbf
  41fa51:	cld    
  41fa52:	bound  eax,QWORD PTR [edx+0x2]
  41fa55:	cmc    
  41fa56:	jbe    0x41fa22
  41fa58:	inc    edx
  41fa59:	and    ebx,eax
  41fa5b:	fadd   QWORD PTR [ecx-0x51]
  41fa5e:	leave  
  41fa5f:	xor    DWORD PTR [ecx],ebp
  41fa61:	arpl   WORD PTR [ecx-0x42],cx
  41fa64:	ins    DWORD PTR es:[edi],dx
  41fa65:	test   BYTE PTR [ecx-0xca74b4d],ah
  41fa6b:	int3   
  41fa6c:	fnstsw WORD PTR [ebp-0x31]
  41fa6f:	pop    ebp
  41fa70:	jb     0x41fab0
  41fa72:	imul   ebx,DWORD PTR [esi-0x1a],0x53
  41fa76:	not    DWORD PTR [ecx-0x2]
  41fa79:	mov    eax,ebp
  41fa7b:	fdiv   QWORD PTR [esi]
  41fa7d:	adc    esp,DWORD PTR [esp+eiz*8]
  41fa80:	stos   BYTE PTR es:[edi],al
  41fa81:	pop    ebp
  41fa82:	out    dx,al
  41fa83:	in     eax,dx
  41fa84:	fidivr DWORD PTR [ecx+ecx*8-0x32852d13]
  41fa8b:	scas   eax,DWORD PTR es:[edi]
  41fa8c:	and    BYTE PTR [ebx+0x9],0xbe
  41fa90:	(bad)  
  41fa92:	pop    ebx
  41fa93:	cwde   
  41fa94:	or     BYTE PTR [edi+0x50],bl
  41fa97:	jno    0x41faa3
  41fa99:	push   edi
  41fa9a:	sub    al,0xe6
  41fa9c:	sti    
  41fa9d:	xchg   edi,eax
  41fa9e:	pop    esi
  41fa9f:	jl     0x41fb03
  41faa1:	outs   dx,BYTE PTR ds:[esi]
  41faa2:	push   es
  41faa3:	jle    0x41fa5c
  41faa5:	jb     0x41fafd
  41faa7:	xor    eax,DWORD PTR [edi+0x6c]
  41faaa:	mov    ebp,db0
  41faad:	xor    edx,DWORD PTR [edx+0x6d8cdaa2]
  41fab3:	cmp    DWORD PTR [ecx-0x22],esi
  41fab6:	icebp  
  41fab7:	call   0x6ea9aed0
  41fabc:	sub    edi,DWORD PTR [edx]
  41fabe:	adc    DWORD PTR [eax+0x560b2d50],edi
  41fac4:	mov    dh,0xda
  41fac6:	push   ebx
  41fac7:	add    BYTE PTR [ebx+0x68ef8c08],bl
  41facd:	mov    bl,0xaf
  41facf:	(bad)  
  41fad0:	mov    al,ds:0xc3999b16
  41fad5:	popa   
  41fad6:	and    al,0x5c
  41fad8:	cmc    
  41fad9:	xchg   edi,eax
  41fada:	retf   
  41fadb:	or     eax,0x3a67f
  41fae0:	sbb    al,0xb6
  41fae2:	xor    eax,0xaafc1134
  41fae7:	fadd   QWORD PTR [ebx-0x67]
  41faea:	add    esp,DWORD PTR [ecx+ecx*4-0xd]
  41faee:	addr16 out dx,al
  41faf0:	pop    edx
  41faf1:	loopne 0x41fb12
  41faf3:	sbb    DWORD PTR [ebx+0x38248e5c],esi
  41faf9:	ins    DWORD PTR es:[edi],dx
  41fafa:	xor    esp,DWORD PTR [esi+edi*4]
  41fafd:	loopne 0x41fb58
  41faff:	push   0xffffffd7
  41fb01:	mul    DWORD PTR [edi+0x49203db8]
  41fb07:	ins    BYTE PTR es:[edi],dx
  41fb08:	pop    ebp
  41fb09:	dec    ebx
  41fb0a:	mov    BYTE PTR [edx+eax*8+0x57],dh
  41fb0e:	shr    DWORD PTR [esi-0x24],0xf2
  41fb12:	(bad)  
  41fb13:	lahf   
  41fb14:	and    esi,DWORD PTR [ecx+0x630c9e59]
  41fb1a:	dec    ebp
  41fb1b:	dec    esp
  41fb1c:	jae    0x41fb8c
  41fb1e:	and    BYTE PTR [esi-0x4a],cl
  41fb21:	mov    ebp,0x8cc60a58
  41fb26:	add    eax,0xddfc329c
  41fb2b:	add    BYTE PTR [edi+0x77],cl
  41fb2e:	mov    dl,0x77
  41fb30:	or     eax,0x4ab1b415
  41fb35:	adc    eax,0x345eb8b8
  41fb3a:	fs mov ch,0xcc
  41fb3d:	or     ah,BYTE PTR [edi]
  41fb3f:	pushf  
  41fb40:	add    edx,DWORD PTR cs:[ecx+ebp*1+0x71224687]
  41fb48:	dec    eax
  41fb49:	lods   al,BYTE PTR ds:[esi]
  41fb4a:	xor    edi,ebp
  41fb4c:	mov    al,ds:0x84c830fb
  41fb51:	mov    ds:0xe3f77898,eax
  41fb56:	or     BYTE PTR [esi],ch
  41fb58:	sub    al,0xd0
  41fb5a:	enter  0xe968,0x45
  41fb5e:	test   ebp,ebx
  41fb60:	sar    BYTE PTR [edi-0x44],0x9b
  41fb64:	xor    eax,0x7405bf53
  41fb69:	dec    esi
  41fb6a:	mov    bl,al
  41fb6c:	push   es
  41fb6d:	add    esp,edi
  41fb6f:	jl     0x41fbef
  41fb71:	dec    ebp
  41fb72:	popa   
  41fb73:	add    eax,0xe3dafd6e
  41fb78:	xchg   ecx,eax
  41fb79:	pop    edx
  41fb7a:	pop    ds
  41fb7b:	jg     0x41fbfc
  41fb7d:	push   edi
  41fb7e:	int    0x48
  41fb80:	cdq    
  41fb81:	fcom   DWORD PTR [ebp-0x3b884402]
  41fb87:	pop    eax
  41fb88:	retf   0xef58
  41fb8b:	dec    esi
  41fb8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb8d:	and    al,0x38
  41fb8f:	in     al,dx
  41fb90:	scas   al,BYTE PTR es:[edi]
  41fb91:	xchg   esi,eax
  41fb92:	dec    esp
  41fb93:	mov    WORD PTR [edi],?
  41fb95:	mov    ds:0xd6d9f9b0,eax
  41fb9a:	repnz mov ah,0x27
  41fb9d:	adc    BYTE PTR [ebp-0x57],bh
  41fba0:	add    BYTE PTR [esi+eiz*2-0x7b],al
  41fba4:	lods   al,BYTE PTR ds:[esi]
  41fba5:	cdq    
  41fba6:	cwde   
  41fba7:	jle    0x41fb3d
  41fba9:	mov    DWORD PTR [edx+0x39],edi
  41fbac:	bnd jne 0x41fbe7
  41fbaf:	sbb    ch,dh
  41fbb1:	stc    
  41fbb2:	aam    0x8
  41fbb4:	fimul  DWORD PTR [ebx-0x76]
  41fbb7:	and    al,BYTE PTR [ecx]
  41fbb9:	mov    ebx,cr5
  41fbbc:	mov    bh,0xa5
  41fbbe:	push   ecx
  41fbbf:	(bad)  
  41fbc1:	adc    al,0xde
  41fbc3:	sub    DWORD PTR [ebx+0x58],eax
  41fbc6:	bnd jle 0x41fbce
  41fbc9:	das    
  41fbca:	aas    
  41fbcb:	jmp    0x41fc31
  41fbcd:	into   
  41fbce:	data16 lods al,BYTE PTR ds:[esi]
  41fbd0:	aas    
  41fbd1:	loop   0x41fc4e
  41fbd3:	inc    esp
  41fbd4:	addr16 in al,dx
  41fbd6:	aas    
  41fbd7:	shl    BYTE PTR [ecx],1
  41fbd9:	or     eax,0xf2b85ae8
  41fbde:	shl    DWORD PTR [ecx],1
  41fbe0:	sub    al,0x79
  41fbe2:	retf   0xb121
  41fbe5:	sti    
  41fbe6:	test   DWORD PTR [ebp+0x1516cd98],edi
  41fbec:	imul   eax,DWORD PTR [ebp+0xb0aea14],0x9e01e759
  41fbf6:	mov    ebp,0x46c442ff
  41fbfb:	test   eax,0x4a81a374
  41fc00:	ret    
  41fc01:	mov    ebp,0x54c20681
  41fc06:	mov    edx,0x444d9a48
  41fc0b:	and    al,0x79
  41fc0d:	aas    
  41fc0e:	popa   
  41fc0f:	mov    eax,ds:0x826f1959
  41fc14:	sub    eax,DWORD PTR [edx+0x72653cad]
  41fc1a:	outs   dx,BYTE PTR ds:[esi]
  41fc1b:	ja     0x41fbc5
  41fc1d:	mov    edi,0xe466cf03
  41fc22:	inc    ecx
  41fc23:	(bad)  
  41fc25:	push   esi
  41fc26:	xchg   ecx,eax
  41fc27:	(bad)  
  41fc28:	pushf  
  41fc29:	fninit 
  41fc2b:	sbb    al,BYTE PTR [eax]
  41fc2d:	sub    eax,0x58f2dc2d
  41fc32:	xor    eax,DWORD PTR [eax+0x3c]
  41fc35:	(bad)  
  41fc37:	rcl    ch,1
  41fc39:	or     eax,edi
  41fc3b:	xor    BYTE PTR [ecx],al
  41fc3d:	fsub   QWORD PTR [ebx]
  41fc3f:	add    eax,0xe7322820
  41fc44:	jmp    0x6000757c
  41fc49:	push   ss
  41fc4a:	cli    
  41fc4b:	fwait
  41fc4c:	adc    DWORD PTR [esi+eax*1],esi
  41fc4f:	out    0x2e,al
  41fc51:	push   ds
  41fc52:	cmp    BYTE PTR [ebp+0x25],ch
  41fc55:	pop    ss
  41fc56:	daa    
  41fc57:	xor    BYTE PTR gs:[ecx],dl
  41fc5a:	pusha  
  41fc5b:	fsubr  st(6),st
  41fc5d:	es inc ebx
  41fc5f:	sbb    BYTE PTR [ebp+0x23],dl
  41fc62:	sbb    edi,DWORD PTR [esi]
  41fc64:	pop    ecx
  41fc65:	jl     0x41fbf0
  41fc67:	fsubr  QWORD PTR [edi-0x44]
  41fc6a:	inc    ebp
  41fc6b:	pop    esp
  41fc6c:	add    eax,0x483f6820
  41fc71:	jo     0x41fcd2
  41fc73:	ja     0x41fc59
  41fc75:	mov    ebx,0xeca2b606
  41fc7a:	or     dl,BYTE PTR [ecx+0x17]
  41fc7d:	add    DWORD PTR [ecx],ebx
  41fc7f:	ret    0x13fb
  41fc82:	push   ecx
  41fc83:	cmp    esp,DWORD PTR [ebp-0x28]
  41fc86:	mov    esi,DWORD PTR [esi-0x48]
  41fc89:	(bad)  
  41fc8a:	(bad)  
  41fc8c:	dec    edi
  41fc8d:	jmp    0x41fc93
  41fc8f:	aad    0xab
  41fc91:	xchg   ebx,eax
  41fc92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc93:	jmp    0xda:0xa3a6bf5b
  41fc9a:	test   DWORD PTR [ebx-0xe691f31],edx
  41fca0:	cmp    BYTE PTR [ebx-0x62e3ef10],0x5d
  41fca7:	or     al,0xc
  41fca9:	pop    ebp
  41fcaa:	in     eax,0x7a
  41fcac:	xchg   ecx,eax
  41fcad:	int    0x62
  41fcaf:	aaa    
  41fcb0:	jmp    0x8927:0x54161c72
  41fcb7:	mov    ds:0xe37d0e2b,eax
  41fcbc:	fucomp st(3)
  41fcbe:	rcr    esi,1
  41fcc0:	inc    edx
  41fcc1:	add    DWORD PTR ds:0x93dfaed9,0xffffffdd
  41fcc8:	or     BYTE PTR [esi+0x5e],bh
  41fccb:	sub    esi,ebp
  41fccd:	stos   DWORD PTR es:[edi],eax
  41fcce:	dec    esp
  41fccf:	les    ebx,FWORD PTR [ebx]
  41fcd1:	ds scas eax,DWORD PTR es:[edi]
  41fcd3:	repnz sub BYTE PTR [edi-0x352eeb5c],bh
  41fcda:	mov    cl,0x66
  41fcdc:	nop
  41fcdd:	les    ebp,FWORD PTR [ebx-0x55c041ee]
  41fce3:	xchg   esi,eax
  41fce4:	(bad)  
  41fce6:	add    dx,sp
  41fce9:	(bad)  
  41fceb:	pop    ecx
  41fcec:	mov    cl,0x86
  41fcee:	or     BYTE PTR [edi-0x1a],0x92
  41fcf2:	repz ror BYTE PTR [eax+esi*1-0x352db50b],cl
  41fcfa:	enter  0x1fbe,0x8f
  41fcfe:	std    
  41fcff:	or     DWORD PTR [esp+ecx*2-0x28],ecx
  41fd03:	fadd   QWORD PTR [ebx]
  41fd05:	icebp  
  41fd06:	cmp    al,0x54
  41fd08:	cdq    
  41fd09:	sar    DWORD PTR [ecx+0x41],0x9
  41fd0d:	arpl   WORD PTR [esi-0x51],bx
  41fd10:	(bad)
  41fd13:	jo     0x41fcb4
  41fd15:	mov    esp,0xd62680b5
  41fd1a:	cmp    BYTE PTR [si-0x3ef5],bh
  41fd1f:	(bad)  
  41fd20:	rcr    BYTE PTR [ebx+ebx*8-0x33c05c44],1
  41fd27:	cli    
  41fd28:	inc    edi
  41fd29:	imul   eax,DWORD PTR [esi+0x51],0xffffff8e
  41fd2d:	int3   
  41fd2e:	add    al,0x8f
  41fd30:	add    dl,bh
  41fd32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd33:	dec    esp
  41fd34:	xchg   dh,bl
  41fd36:	or     ebp,DWORD PTR [ebx]
  41fd38:	inc    ecx
  41fd39:	fdiv   DWORD PTR [esi+edx*2-0x3e]
  41fd3d:	jo     0x41fd65
  41fd3f:	xor    DWORD PTR [esi-0xe],eax
  41fd42:	mov    ds:0x12dacb43,al
  41fd47:	ror    DWORD PTR [edx],0x7a
  41fd4a:	mov    BYTE PTR [bp+di+0x5fdc],dh
  41fd4f:	inc    eax
  41fd50:	mov    ecx,0x51cc9060
  41fd55:	test   eax,0x170e5074
  41fd5a:	arpl   bx,sp
  41fd5c:	or     BYTE PTR [edx-0x40733517],ch
  41fd62:	cli    
  41fd63:	imul   esi,DWORD PTR ds:[ebx+0x78],0x6d
  41fd68:	sub    eax,DWORD PTR [edx-0x275c55a0]
  41fd6e:	test   DWORD PTR [ecx+0x6a0d7219],0x673a1f61
  41fd78:	dec    edi
  41fd79:	jae    0x41fd6b
  41fd7b:	mov    eax,ds:0x5d43dde5
  41fd80:	push   0x761af81
  41fd85:	mov    edx,0x6e5799db
  41fd8a:	push   eax
  41fd8b:	call   0x113a:0x1ab51a96
  41fd92:	pop    eax
  41fd93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd94:	and    DWORD PTR [ebp-0x18],edi
  41fd97:	jo     0x41fd85
  41fd99:	das    
  41fd9a:	sub    ecx,DWORD PTR [edi-0x1a2aac96]
  41fda0:	xchg   BYTE PTR [edx+edx*4],al
  41fda3:	int3   
  41fda4:	pop    ebp
  41fda5:	jl     0x41fdc3
  41fda7:	cli    
  41fda8:	int3   
  41fda9:	in     al,0x32
  41fdab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdac:	mov    bh,0x9f
  41fdae:	xlat   BYTE PTR ds:[ebx]
  41fdaf:	push   ds
  41fdb0:	ins    BYTE PTR es:[edi],dx
  41fdb1:	jnp    0x41fd7b
  41fdb3:	pushf  
  41fdb4:	add    DWORD PTR [edi],ebx
  41fdb6:	test   DWORD PTR [ebx+0x3dd72cda],ebx
  41fdbc:	lds    ebx,FWORD PTR [esi+0x7bb741f3]
  41fdc2:	scas   eax,DWORD PTR es:[edi]
  41fdc3:	nop
  41fdc4:	lds    esi,FWORD PTR [ebx]
  41fdc6:	pop    eax
  41fdc7:	dec    edi
  41fdc8:	adc    esi,ebx
  41fdca:	pop    ss
  41fdcb:	test   eax,0x92b17730
  41fdd0:	pop    esi
  41fdd1:	ret    0x4673
  41fdd4:	fdivr  QWORD PTR [edx-0x50]
  41fdd7:	and    eax,0x29f905ab
  41fddc:	dec    esi
  41fddd:	loopne 0x41fda1
  41fddf:	icebp  
  41fde0:	(bad)  
  41fde1:	push   0xea6ea5a0
  41fde6:	dec    edx
  41fde7:	cld    
  41fde8:	push   ebx
  41fde9:	lds    esi,FWORD PTR [eax-0x5fe54327]
  41fdef:	ror    BYTE PTR [edx+0x15],cl
  41fdf2:	out    0x52,al
  41fdf4:	shl    DWORD PTR [eax+0x2516fb9],1
  41fdfa:	or     ah,bh
  41fdfc:	neg    DWORD PTR [ecx-0x3d]
  41fdff:	mov    bl,0x2f
  41fe01:	aas    
  41fe02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe03:	pop    ss
  41fe04:	enter  0x3113,0x9d
  41fe08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe09:	xchg   ebx,eax
  41fe0a:	nop
  41fe0b:	dec    edi
  41fe0c:	cmp    DWORD PTR [eax],0xfffffff8
  41fe0f:	xchg   BYTE PTR [ecx+0xf],ch
  41fe12:	gs mov ebx,0xb27285a9
  41fe18:	cmp    eax,0x94982350
  41fe1d:	out    0xcd,eax
  41fe1f:	mov    dh,0x8d
  41fe21:	inc    esi
  41fe22:	cmp    BYTE PTR [ebx+0x3b35951b],cl
  41fe28:	xchg   BYTE PTR [eax-0x3ea7e935],ah
  41fe2e:	sbb    dh,0xe6
  41fe31:	xor    eax,0x394b4d40
  41fe36:	and    BYTE PTR [ecx+ebp*1],dh
  41fe39:	or     eax,0x45b16a38
  41fe3e:	mov    ch,0x61
  41fe40:	inc    esi
  41fe41:	lods   eax,DWORD PTR ds:[esi]
  41fe42:	es inc esi
  41fe44:	shl    DWORD PTR [ebx-0x6c24941f],cl
  41fe4a:	js     0x41fe11
  41fe4c:	mov    ebx,0xce468271
  41fe51:	aas    
  41fe52:	mov    ah,0x7
  41fe54:	add    DWORD PTR [edi+0x31db010],0x5b
  41fe5b:	call   0x6c49fe69
  41fe60:	lahf   
  41fe61:	or     eax,0x4155b574
  41fe66:	dec    esi
  41fe67:	mov    edi,0xc9e29eda
  41fe6c:	nop    DWORD PTR [ecx+0x63]
  41fe70:	std    
  41fe71:	and    eax,ebp
  41fe73:	and    eax,0xd3aeb7d9
  41fe78:	xchg   DWORD PTR gs:[ebp+eax*4+0x28348c76],edi
  41fe80:	test   DWORD PTR [edi+0x33],ebp
  41fe83:	push   edi
  41fe84:	dec    edx
  41fe85:	(bad)  
  41fe86:	(bad)  
  41fe88:	cdq    
  41fe89:	pop    esp
  41fe8a:	arpl   WORD PTR [edx],si
  41fe8c:	in     al,dx
  41fe8d:	(bad)  
  41fe8e:	sahf   
  41fe8f:	inc    edi
  41fe90:	xchg   ecx,eax
  41fe91:	fs and al,0x54
  41fe94:	and    eax,0x56b3149c
  41fe99:	jne    0x41fe31
  41fe9b:	xchg   edx,eax
  41fe9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe9d:	and    al,0x22
  41fe9f:	or     BYTE PTR ds:0x792d9fcc,ch
  41fea5:	pop    eax
  41fea6:	in     eax,0xfd
  41fea8:	test   BYTE PTR [ecx-0x580014ab],0x1
  41feaf:	gs sub al,0x6a
  41feb2:	daa    
  41feb3:	hlt    
  41feb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feb5:	add    ch,cl
  41feb7:	(bad)  
  41feb9:	shr    BYTE PTR [edi],cl
  41febb:	(bad)  
  41febc:	and    edi,ebx
  41febe:	jmp    0x41feea
  41fec0:	haddpd xmm7,XMMWORD PTR [eax+ebp*1]
  41fec5:	push   esi
  41fec6:	pop    ss
  41fec7:	and    BYTE PTR [ecx+0x3536df62],bh
  41fecd:	push   eax
  41fece:	sbb    ecx,DWORD PTR [edi-0x195023ed]
  41fed4:	pusha  
  41fed5:	add    eax,0xae90d044
  41feda:	rol    DWORD PTR [eax+0x565533fd],0x97
  41fee1:	or     BYTE PTR [esi-0x5c],cl
  41fee4:	mov    edi,0xfc43bb45
  41fee9:	mov    ecx,0x4b2a7998
  41feee:	iret   
  41feef:	lods   eax,DWORD PTR ds:[esi]
  41fef0:	dec    ebp
  41fef1:	jg     0x41feab
  41fef3:	fiadd  DWORD PTR [edx]
  41fef5:	jae    0x41fec2
  41fef7:	call   0xcc8ffd75
  41fefc:	add    ebx,DWORD PTR [eax]
  41fefe:	test   BYTE PTR [ebp+0x440cd1f9],bh
  41ff04:	sbb    DWORD PTR [edx],esp
  41ff06:	or     al,0xb
  41ff08:	idiv   BYTE PTR [edx+ebp*1+0xc4fb05b]
  41ff0f:	test   BYTE PTR [esp+edi*8+0xc],0x97
  41ff14:	sub    BYTE PTR [ebx],bl
  41ff16:	ret    
  41ff17:	mov    ecx,0xd9c7f298
  41ff1c:	mov    eax,ds:0x6c696818
  41ff21:	pop    ebp
  41ff22:	js     0x41ff1d
  41ff24:	test   edx,ebx
  41ff26:	or     al,0xcb
  41ff28:	(bad)  [esi-0x1f]
  41ff2b:	jnp    0x41fef5
  41ff2d:	or     ebx,DWORD PTR [ecx]
  41ff2f:	addr16 fwait
  41ff31:	(bad)
  41ff36:	loopne 0x41fee0
  41ff38:	call   0xbeff5c53
  41ff3d:	sbb    eax,DWORD PTR [esi-0x6a]
  41ff40:	push   esp
  41ff41:	pop    esi
  41ff42:	idiv   cl
  41ff44:	imul   esp,edx,0xcf9154f5
  41ff4a:	aam    0xe4
  41ff4c:	repnz std 
  41ff4e:	icebp  
  41ff4f:	and    ch,BYTE PTR [edi]
  41ff51:	pop    ebp
  41ff52:	mov    ah,0xc9
  41ff54:	daa    
  41ff55:	mov    ebp,0x6357f592
  41ff5a:	or     DWORD PTR [esp+esi*8-0x43bcb81f],ecx
  41ff61:	push   0x2e046e9b
  41ff66:	js     0x41ffc7
  41ff68:	mov    esp,0x5deb14c2
  41ff6d:	mov    al,0xf
  41ff6f:	mov    esi,0xc3dc3507
  41ff74:	std    
  41ff75:	mov    esi,0xc8cb1020
  41ff7a:	dec    ecx
  41ff7b:	lods   eax,DWORD PTR ds:[esi]
  41ff7c:	lock les esp,FWORD PTR [eax-0x48]
  41ff80:	div    DWORD PTR [ebx-0x4a92d941]
  41ff86:	pusha  
  41ff87:	fsubr  QWORD PTR [eax+0x15]
  41ff8a:	cli    
  41ff8b:	outs   dx,BYTE PTR ds:[esi]
  41ff8c:	add    ebp,DWORD PTR [edx-0x1c]
  41ff8f:	mov    DWORD PTR [esi],esi
  41ff91:	mov    WORD PTR [edi],ds
  41ff93:	clc    
  41ff94:	inc    esp
  41ff95:	(bad)  
  41ff97:	or     al,cl
  41ff99:	xchg   ebx,eax
  41ff9a:	inc    ebx
  41ff9b:	sub    ebx,ecx
  41ff9d:	fild   QWORD PTR [ecx+0x280b7b7b]
  41ffa3:	pop    ebx
  41ffa4:	test   al,0x6b
  41ffa6:	ss out 0xfb,eax
  41ffa9:	mov    esi,0x9e1aaab2
  41ffae:	adc    al,BYTE PTR [edx-0x2f6cc240]
  41ffb4:	in     eax,0xf5
  41ffb6:	mov    WORD PTR [edx+0x7],cs
  41ffb9:	loop   0x41fffd
  41ffbb:	dec    esi
  41ffbc:	mov    ds:0xb45e5a38,al
  41ffc1:	ds out dx,al
  41ffc3:	aad    0x5d
  41ffc5:	stos   BYTE PTR es:[edi],al
  41ffc6:	les    esi,FWORD PTR [esi-0x714b07e]
  41ffcc:	enter  0xcb00,0x2f
  41ffd0:	call   0x85f117ff
  41ffd5:	(bad)  
  41ffd6:	mov    bl,bh
  41ffd8:	or     ecx,DWORD PTR [esi]
  41ffda:	adc    DWORD PTR [ebx],eax
  41ffdc:	jo     0x41ff60
  41ffde:	adc    eax,0x40caa198
  41ffe3:	mov    ch,0x6b
  41ffe5:	dec    esp
  41ffe6:	arpl   WORD PTR [esi-0x30],sp
  41ffe9:	mov    ebx,0x54658c21
  41ffee:	sub    bh,BYTE PTR [ebx-0x4a]
  41fff1:	xchg   DWORD PTR [ebx+0x4d],ebp
  41fff4:	mov    esp,DWORD PTR [eax]
  41fff6:	jo     0x41ffb3
  41fff8:	mov    cl,0xe2
  41fffa:	mov    ecx,0xbf257bb
  41ffff:	stos   DWORD PTR es:[edi],eax
  420000:	pop    edi
  420001:	shr    DWORD PTR [edx+0x26],cl
  420004:	jge    0x41fff6
  420006:	stos   BYTE PTR es:[edi],al
  420007:	mov    ah,0xbf
  420009:	js     0x420005
  42000b:	sbb    DWORD PTR [esi+0x16f0e9b8],0x4b
  420012:	inc    edx
  420013:	inc    esp
  420014:	or     eax,0xfa4d9c3
  420019:	push   esi
  42001a:	adc    DWORD PTR [ecx+0x6e],edi
  42001d:	pop    edx
  42001e:	int    0xfd
  420020:	mov    ebx,0x1f0b4afc
  420025:	mov    eax,0x6fdf8511
  42002a:	adc    eax,0x117f3e
  42002f:	mov    ebx,0x1b146e51
  420034:	icebp  
  420035:	jo     0x42008a
  420037:	pop    esp
  420038:	push   ebp
  420039:	xor    eax,0x21213f3d
  42003e:	mov    ds:0x5d1433fc,al
  420043:	push   edi
  420044:	ja     0x42002f
  420046:	ss mov bh,0x7a
  420049:	jge    0x420092
  42004b:	xchg   ecx,eax
  42004c:	sbb    al,0xd0
  42004e:	nop
  42004f:	xchg   ebp,eax
  420050:	jne    0x42002b
  420052:	inc    esp
  420053:	fbstp  TBYTE PTR [ebp+ebx*1+0x44]
  420057:	std    
  420058:	ficomp DWORD PTR [esi]
  42005a:	or     DWORD PTR [esi+0x3d],0xffffff93
  42005e:	fsub   st(4),st
  420060:	outs   dx,BYTE PTR ds:[esi]
  420061:	mov    cl,0xc3
  420063:	in     al,0xc3
  420065:	pop    esi
  420066:	arpl   WORD PTR [edi+0x1f],sp
  420069:	pop    esi
  42006a:	int    0xaa
  42006c:	dec    esp
  42006d:	clc    
  42006e:	into   
  42006f:	shr    bl,0xe8
  420072:	shr    BYTE PTR [ecx+0xd],0xd6
  420076:	pop    edi
  420077:	sbb    DWORD PTR [edi],0x3d32b5d8
  42007d:	pop    edx
  42007e:	mov    ds:0xb9f7dbbc,eax
  420083:	add    ebx,ecx
  420085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420086:	out    dx,al
  420087:	add    eax,0xf1a237dc
  42008c:	sub    BYTE PTR [edx+edx*8],0x9a
  420090:	(bad)  
  420092:	or     BYTE PTR [ebx-0x7b21ad79],cl
  420098:	into   
  420099:	test   DWORD PTR [edi-0x1e],0x4e8b1ecd
  4200a0:	xor    BYTE PTR [ecx+0x78],bh
  4200a3:	nop    DWORD PTR [edi]
  4200a6:	lods   al,BYTE PTR ds:[esi]
  4200a7:	call   0xe66f:0xea087dbc
  4200ae:	test   DWORD PTR gs:[ecx-0x4],edi
  4200b2:	mov    BYTE PTR [di+0x5],al
  4200b6:	jne    0x420092
  4200b8:	xchg   esi,eax
  4200b9:	mov    eax,0x3391a304
  4200be:	and    ecx,DWORD PTR [edi+ecx*4-0x22]
  4200c2:	jp     0x42009e
  4200c4:	jns    0x420084
  4200c6:	scas   al,BYTE PTR es:[edi]
  4200c7:	adc    al,0x41
  4200c9:	pop    ebp
  4200ca:	fs pop esi
  4200cc:	sbb    bl,dl
  4200ce:	mov    edi,0x40bb2b79
  4200d3:	dec    edi
  4200d4:	and    DWORD PTR [ebx-0xa],ecx
  4200d7:	and    eax,0x8c3eee17
  4200dc:	dec    ecx
  4200dd:	rcr    DWORD PTR [edx+0x77],cl
  4200e0:	sub    DWORD PTR [eax-0x54947900],esi
  4200e6:	rcl    DWORD PTR [ebx+0x1e],0x1c
  4200ea:	jno    0x4200d2
  4200ec:	int3   
  4200ed:	sbb    eax,0xc195447e
  4200f2:	test   eax,0x527f9b20
  4200f7:	fcomp  QWORD PTR [ebx]
  4200f9:	adc    al,ah
  4200fb:	or     ebp,DWORD PTR [eax]
  4200fd:	lock and BYTE PTR ds:[ebx+0x14b3f66b],ah
  420105:	aad    0x27
  420107:	in     al,dx
  420108:	daa    
  420109:	push   ecx
  42010a:	ins    DWORD PTR es:[edi],dx
  42010b:	xor    DWORD PTR [ebx-0x21312b23],edx
  420111:	mov    WORD PTR [ecx+eiz*1+0x38d7f561],ss
  420118:	cli    
  420119:	inc    ecx
  42011a:	mov    eax,0x3e524386
  42011f:	cs mov bl,0x91
  420122:	jns    0x4200b1
  420124:	popf   
  420125:	retf   0xd06f
  420128:	push   esp
  420129:	rcl    edi,1
  42012b:	mov    bh,0xb2
  42012d:	push   cs
  42012e:	leave  
  42012f:	out    0x96,eax
  420131:	jl     0x42011e
  420133:	pusha  
  420134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420135:	(bad)  
  420136:	jmp    0xbd095ab3
  42013b:	sbb    BYTE PTR [ebx+0x62d8335],0xb2
  420142:	cmp    BYTE PTR [edx],dl
  420144:	and    eax,0xe01c0b89
  420149:	cs enter 0x566f,0x84
  42014e:	fsub   QWORD PTR [eax-0x2b]
  420151:	data16 into 
  420153:	mov    eax,DWORD PTR [esi]
  420155:	add    al,0xe6
  420157:	sub    esi,DWORD PTR [eax+0x2f12df2b]
  42015d:	fdiv   DWORD PTR [edx]
  42015f:	adc    al,dh
  420161:	mov    al,0x25
  420163:	fld    DWORD PTR [esi+0x7f]
  420166:	int3   
  420167:	inc    edi
  420168:	cmp    ebp,edx
  42016a:	repz cmp dh,dl
  42016d:	fistp  WORD PTR [edx+0x7]
  420170:	rol    BYTE PTR [eax+esi*2],1
  420173:	push   eax
  420174:	mov    DWORD PTR ds:0x5c2a998f,0x3ae8f4fa
  42017e:	addr16 dec ecx
  420180:	(bad)  
  420182:	jmp    0x2660:0xa61abc7c
  420189:	cmp    BYTE PTR [ebp-0x3244101e],bl
  42018f:	ret    
  420190:	jle    0x420169
  420192:	mov    edi,0xe50369ae
  420197:	mov    edi,0x869c18d4
  42019c:	jnp    0x420166
  42019e:	int3   
  42019f:	pop    ss
  4201a0:	pop    ds
  4201a1:	call   0xf9263c65
  4201a6:	xchg   ebx,eax
  4201a7:	jmp    0x420162
  4201a9:	push   esi
  4201aa:	outs   dx,DWORD PTR ds:[esi]
  4201ab:	sahf   
  4201ac:	outs   dx,DWORD PTR ds:[esi]
  4201ad:	sahf   
  4201ae:	gs mov ebx,0x918b9492
  4201b4:	mul    DWORD PTR [edi+0x6a55d729]
  4201ba:	pop    eax
  4201bb:	stos   BYTE PTR es:[edi],al
  4201bc:	rol    BYTE PTR [ebp-0x2b297212],0xe2
  4201c3:	jmp    0x6826fc84
  4201c8:	arpl   WORD PTR [eax],si
  4201ca:	test   eax,0xf27ed58d
  4201cf:	(bad)  
  4201d0:	dec    ebx
  4201d1:	fadd   st(5),st
  4201d3:	jmp    0x8b43:0xb5508999
  4201da:	push   esi
  4201db:	daa    
  4201dc:	inc    ebp
  4201dd:	out    dx,al
  4201de:	or     bh,BYTE PTR [edx-0x33513506]
  4201e4:	xor    DWORD PTR [edi],0x644a9769
  4201ea:	lock out dx,eax
  4201ec:	push   esp
  4201ed:	inc    dl
  4201ef:	mov    ah,0x19
  4201f1:	out    0x97,al
  4201f3:	mov    ebx,0x9fc4c8e6
  4201f8:	jae    0x4201e7
  4201fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201fb:	cmp    DWORD PTR [edx+0x20b0a762],eax
  420201:	shl    DWORD PTR cs:[eax],0xbc
  420205:	pop    ss
  420206:	push   es
  420207:	push   eax
  420208:	xor    edi,eax
  42020a:	rcl    bl,0x83
  42020d:	(bad)  
  42020f:	mov    ah,0x9b
  420211:	in     eax,dx
  420212:	pop    esp
  420213:	repnz mov bl,0xff
  420216:	pop    ecx
  420217:	ret    0xb2c8
  42021a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42021b:	push   0xffffff9a
  42021d:	pop    esp
  42021e:	cmp    al,BYTE PTR [edi+0x6563c92f]
  420224:	stc    
  420225:	mov    al,0x81
  420227:	jecxz  0x420276
  420229:	and    eax,0x24a5fd42
  42022e:	scas   al,BYTE PTR es:[edi]
  42022f:	adc    eax,0x5dab77e5
  420234:	push   cs
  420235:	std    
  420236:	push   0x99e346c0
  42023b:	call   0xd724bfe6
  420240:	sti    
  420241:	fistp  WORD PTR [esi+0x3fb1f5f3]
  420247:	sahf   
  420248:	xchg   esi,eax
  420249:	mov    cl,0xa2
  42024b:	popa   
  42024c:	fdiv   QWORD PTR [ebp-0x60714fd5]
  420252:	push   edx
  420253:	test   eax,0x286184a3
  420258:	xor    eax,ebp
  42025a:	dec    edx
  42025b:	ret    0xe187
  42025e:	test   al,0xa
  420260:	mov    ah,bl
  420262:	paddusb mm5,QWORD PTR [ecx-0x1e16735b]
  420269:	call   0x90f9:0x2a79394a
  420270:	mov    dl,0x7d
  420272:	push   eax
  420273:	outs   dx,BYTE PTR ds:[esi]
  420274:	jg     0x42022a
  420276:	or     eax,0x577ef43d
  42027b:	push   eax
  42027c:	dec    ebp
  42027d:	loop   0x420253
  42027f:	test   eax,0x50e2507c
  420284:	add    BYTE PTR [ebp-0x1874b696],ch
  42028a:	or     BYTE PTR [eax-0x69],ch
  42028d:	shr    bh,1
  42028f:	lods   eax,DWORD PTR ds:[esi]
  420290:	jecxz  0x4202b0
  420292:	add    edi,edx
  420294:	jb     0x42029a
  420296:	or     eax,0x947f79cb
  42029b:	call   0xa980a202
  4202a0:	mov    esi,0x7b8d7f00
  4202a5:	pcmpeqw mm2,QWORD PTR [edi]
  4202a8:	fisub  WORD PTR [ebx-0x67]
  4202ab:	inc    ecx
  4202ac:	imul   ebp,ebp,0x32
  4202af:	sahf   
  4202b0:	shl    edi,1
  4202b2:	test   al,0x1
  4202b4:	sar    DWORD PTR [ebp+esi*1-0x39],cl
  4202b8:	adc    DWORD PTR [edx-0x5],ecx
  4202bb:	mov    dl,0x3c
  4202bd:	stos   DWORD PTR es:[edi],eax
  4202be:	fsubr  st(3),st
  4202c0:	dec    ebx
  4202c1:	mov    ah,BYTE PTR [esi-0x9]
  4202c4:	adc    al,0xbd
  4202c6:	adc    eax,0xbb0e2f72
  4202cb:	and    al,0xfe
  4202cd:	add    eax,0x28fab1e7
  4202d2:	(bad)  
  4202d3:	(bad)  
  4202d4:	fcom   DWORD PTR [edx-0x34]
  4202d7:	out    dx,eax
  4202d8:	pop    ss
  4202d9:	test   DWORD PTR [ebp+0x69b92964],edi
  4202df:	ret    0xb3d5
  4202e2:	or     dh,cl
  4202e4:	dec    esp
  4202e5:	test   DWORD PTR [eax+0x3f],edi
  4202e8:	fwait
  4202e9:	lahf   
  4202ea:	or     ebp,DWORD PTR [ecx+0x98f6314]
  4202f0:	test   edx,ebp
  4202f2:	jmp    0xeb30:0x3d839367
  4202f9:	fdiv   QWORD PTR [ecx-0x5395d18]
  4202ff:	inc    edx
  420300:	fild   DWORD PTR [ebp+0x70693844]
  420306:	jns    0x420340
  420308:	mov    esi,0x61b1f2c9
  42030d:	sahf   
  42030e:	enter  0x8724,0x30
  420312:	mov    edi,0x74e9a5f
  420317:	xor    al,0xd1
  420319:	aad    0xd3
  42031b:	push   esp
  42031c:	leave  
  42031d:	jae    0x42031f
  42031f:	dec    esi
  420320:	adc    esi,DWORD PTR [edi-0x319bf655]
  420326:	inc    ecx
  420327:	outs   dx,DWORD PTR ds:[esi]
  420328:	mov    edx,0x79a6880b
  42032d:	jl     0x4202f5
  42032f:	or     ecx,DWORD PTR [ecx-0x59788303]
  420335:	dec    esp
  420336:	into   
  420337:	adc    ebx,DWORD PTR [edx+edx*8+0x3]
  42033b:	cmp    bl,BYTE PTR [eax+0x1]
  42033e:	ret    0x8351
  420341:	or     al,0x4d
  420343:	call   0xd342097
  420348:	and    eax,0xc9f89a18
  42034d:	nop
  42034e:	xor    eax,0xc25e55a3
  420353:	mov    ds:0x3c172dd4,eax
  420358:	push   ebp
  420359:	jge    0x42030f
  42035b:	aas    
  42035c:	test   BYTE PTR [edx+0x4a53695c],0xfd
  420363:	dec    edx
  420364:	stc    
  420365:	push   0xbde959e4
  42036a:	repnz test DWORD PTR [ebx-0x4c38a11e],edi
  420371:	in     eax,0x27
  420373:	mov    al,0x55
  420375:	sub    esp,0xd92117f3
  42037b:	xor    al,0xcc
  42037d:	outs   dx,DWORD PTR ds:[esi]
  42037e:	int3   
  42037f:	xchg   ebx,eax
  420380:	cmp    BYTE PTR [edi-0x2],cl
  420383:	lahf   
  420384:	adc    al,0x5d
  420386:	nop
  420387:	repnz xor eax,0x7e42a51e
  42038d:	sub    ebp,eax
  42038f:	cmp    BYTE PTR [eax-0x2f35ef41],dl
  420395:	je     0x4203ed
  420397:	lods   eax,DWORD PTR ds:[esi]
  420398:	push   edi
  420399:	rol    esp,1
  42039b:	or     al,0x14
  42039d:	jnp    0x420332
  42039f:	ja     0x4203d8
  4203a1:	ret    
  4203a2:	scas   eax,DWORD PTR es:[edi]
  4203a3:	fimul  DWORD PTR [edi-0x66948466]
  4203a9:	mov    al,0x10
  4203ab:	in     al,dx
  4203ac:	and    al,0x1f
  4203ae:	push   esp
  4203af:	jae    0x4203b8
  4203b1:	ffreep st(2)
  4203b3:	inc    edi
  4203b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203b5:	and    bh,BYTE PTR [esi+0x2a834f8b]
  4203bb:	out    dx,ax
  4203bd:	xor    eax,0x73d7fb0b
  4203c2:	push   ebx
  4203c3:	mov    eax,0xc9c043a3
  4203c8:	push   ds
  4203c9:	or     edx,esi
  4203cb:	push   edx
  4203cc:	idiv   BYTE PTR [ebx]
  4203ce:	xchg   BYTE PTR [ebx+0x2c2bf280],dh
  4203d4:	adc    al,0xee
  4203d6:	cdq    
  4203d7:	retf   0xb059
  4203da:	lock rcr BYTE PTR [edx+0x65],1
  4203de:	dec    ebx
  4203df:	enter  0x9def,0x82
  4203e3:	push   es
  4203e4:	ret    0x22e2
  4203e7:	adc    eax,0x5ad3a5d1
  4203ec:	inc    esp
  4203ed:	fwait
  4203ee:	dec    eax
  4203ef:	or     cl,bh
  4203f1:	jmp    0x608f:0x30db2f39
  4203f8:	loope  0x42039a
  4203fa:	popa   
  4203fb:	mov    al,ds:0x6531d51f
  420400:	fwait
  420401:	lahf   
  420402:	int    0x5e
  420404:	xchg   esp,eax
  420405:	mov    bl,0xb1
  420407:	xchg   edx,eax
  420408:	or     bh,bh
  42040a:	sbb    edx,ebx
  42040c:	adc    BYTE PTR [ebp+0x2d],0x44
  420410:	ret    0x5220
  420413:	jnp    0x4203be
  420415:	mov    ds:0xd24483fe,eax
  42041a:	cli    
  42041b:	cmp    eax,0xb73be44
  420420:	jno    0x42040f
  420422:	lahf   
  420423:	in     al,0xd5
  420425:	test   al,0xd6
  420427:	sbb    edi,DWORD PTR [ebp+0x54]
  42042a:	aam    0x8d
  42042c:	scas   al,BYTE PTR es:[edi]
  42042d:	jge    0x420490
  42042f:	shr    DWORD PTR [esi+eax*4],1
  420432:	pusha  
  420433:	std    
  420434:	lds    edx,FWORD PTR [ecx+eiz*8]
  420437:	les    ebp,FWORD PTR [edi-0x50]
  42043a:	icebp  
  42043b:	out    0x3a,eax
  42043d:	push   es
  42043e:	inc    edi
  42043f:	sti    
  420440:	(bad)  
  420441:	mov    ecx,0xca84f859
  420446:	repz lea eax,[eax]
  420449:	pop    ebx
  42044a:	(bad)  
  42044b:	and    eax,0xb17401d0
  420450:	xchg   ecx,eax
  420451:	mov    ecx,0x7eaf1d40
  420456:	rol    BYTE PTR [eax+0x2a0563de],1
  42045c:	pop    ebx
  42045d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42045e:	cmp    al,0x9d
  420460:	inc    ebp
  420461:	push   DWORD PTR [ebp+edi*1-0xfac7115]
  420468:	xchg   edi,eax
  420469:	not    BYTE PTR [eax-0x732cc738]
  42046f:	fstp   DWORD PTR [ebp+0x6]
  420472:	call   0xdc7:0xfabf
  420478:	aam    0x86
  42047a:	push   ebp
  42047b:	int3   
  42047c:	dec    esp
  42047d:	loope  0x4204d6
  42047f:	jmp    0xd9c1c2d9
  420484:	cmp    DWORD PTR [esi],edx
  420486:	cmp    DWORD PTR [ecx+0x55],ebp
  420489:	mov    es,WORD PTR ds:0x49fcfbe
  42048f:	cs (bad) 
  420491:	repnz fnstcw WORD PTR [ebx+0x22168eca]
  420498:	retf   0x42ad
  42049b:	cmp    DWORD PTR [ecx],esp
  42049d:	loopne 0x4204e6
  42049f:	xchg   DWORD PTR [ebx-0x5782e630],eax
  4204a5:	test   al,0x86
  4204a7:	cmp    al,0x6
  4204a9:	out    dx,al
  4204aa:	xchg   ebx,eax
  4204ab:	aam    0x2b
  4204ad:	fistp  WORD PTR [ecx]
  4204af:	cdq    
  4204b0:	retf   0x68ff
  4204b3:	out    dx,al
  4204b4:	mov    dh,0x46
  4204b6:	mov    al,ds:0x2ee0518d
  4204bb:	inc    ebp
  4204bc:	push   edx
  4204bd:	sbb    DWORD PTR [ebp+0x741e85f0],ebx
  4204c3:	popf   
  4204c4:	es imul esi,eax,0x9992f2cf
  4204cb:	inc    esp
  4204cc:	or     BYTE PTR [eax],bh
  4204ce:	mov    al,0x9d
  4204d0:	ins    DWORD PTR es:[edi],dx
  4204d1:	add    eax,0xd561264c
  4204d6:	and    al,0xff
  4204d8:	mov    ch,ah
  4204da:	push   ds
  4204db:	mov    al,0x22
  4204dd:	ja     0x4204ea
  4204df:	xchg   esi,eax
  4204e0:	std    
  4204e1:	mov    bl,0xfb
  4204e3:	imul   ecx,DWORD PTR [ecx+0x34],0xa
  4204e7:	cmp    edi,ecx
  4204e9:	adc    al,0xfa
  4204eb:	in     eax,dx
  4204ec:	xchg   edx,eax
  4204ed:	(bad)  
  4204ee:	retf   
  4204ef:	enter  0xee1,0x6
  4204f3:	cwde   
  4204f4:	shr    BYTE PTR [edi],1
  4204f6:	daa    
  4204f7:	adc    eax,0xf771a72c
  4204fc:	nop
  4204fd:	test   eax,0xc27a9869
  420502:	push   ss
  420503:	mov    ch,0x5e
  420505:	jne    0x4204c1
  420507:	add    al,0x0
  420509:	mov    ebx,0x82738fcc
  42050e:	out    0x6,al
  420510:	mov    esp,0xf36bf755
  420515:	pop    ds
  420516:	ds dec ebp
  420518:	jo     0x4204a2
  42051a:	sub    DWORD PTR [ecx-0x7f735587],esp
  420520:	xchg   esi,eax
  420521:	mov    bh,0x29
  420523:	in     al,dx
  420524:	or     BYTE PTR [ecx+eax*8+0x741d4edc],bl
  42052b:	cmp    eax,0x6f523bb1
  420530:	xor    bl,BYTE PTR [edx]
  420532:	scas   al,BYTE PTR es:[edi]
  420533:	xor    al,0x66
  420535:	cmc    
  420536:	mov    ds:0xe90aa7e9,eax
  42053b:	bound  eax,QWORD PTR [edi+0x27]
  42053e:	mov    cl,0xf5
  420540:	jmp    0x69cf:0xcc664b7d
  420547:	mov    eax,0x1bce2e11
  42054c:	adc    eax,0x54fa83c3
  420551:	js     0x4205a0
  420553:	jae    0x4204f3
  420555:	xchg   edi,eax
  420556:	add    ecx,DWORD PTR [ebx]
  420558:	out    dx,eax
  420559:	or     esp,DWORD PTR ds:0x2f57e5c9
  42055f:	xor    eax,0xdc26ae
  420564:	push   ebx
  420565:	adc    DWORD PTR [esp+edi*4+0x2bca9746],edi
  42056c:	loop   0x4204f6
  42056e:	pop    ss
  42056f:	cli    
  420570:	bound  eax,QWORD PTR [eax-0x18]
  420573:	loopne 0x420550
  420575:	fdivp  st(3),st
  420577:	aas    
  420578:	and    edx,DWORD PTR [eax]
  42057a:	ss retf 
  42057c:	fst    st(2)
  42057e:	int3   
  42057f:	sub    BYTE PTR [esi+0x62f9d22f],ch
  420585:	xchg   ebx,eax
  420586:	sbb    BYTE PTR [eax+0x7ef7594a],dl
  42058c:	lods   eax,DWORD PTR ds:[esi]
  42058d:	adc    eax,0x6a4e16fd
  420592:	sub    ch,al
  420594:	int3   
  420595:	or     ecx,ecx
  420597:	scas   eax,DWORD PTR es:[edi]
  420598:	push   eax
  420599:	dec    esp
  42059a:	gs cmp al,0x7d
  42059d:	outs   dx,BYTE PTR gs:[esi]
  42059f:	cmp    BYTE PTR [ebx+0x75286d5a],dh
  4205a5:	imul   esp,DWORD PTR [edx-0x50],0x78
  4205a9:	mov    al,ds:0x73f75e90
  4205ae:	fistp  QWORD PTR [ebx+0x11]
  4205b1:	out    0xf4,eax
  4205b3:	mov    WORD PTR [ebp-0x56],fs
  4205b6:	mov    ds:0xe79f4dca,al
  4205bb:	test   ah,0x68
  4205be:	lahf   
  4205bf:	(bad)  
  4205c0:	pop    edx
  4205c1:	call   0x82fe:0x8944aa78
  4205c8:	cmc    
  4205c9:	jmp    0x42057f
  4205cb:	mov    ebp,0xd1da3d85
  4205d0:	and    BYTE PTR [ecx+0x5ed12bcf],cl
  4205d6:	add    eax,0xd7513783
  4205db:	cdq    
  4205dc:	cli    
  4205dd:	mov    ds:0xbd4937d0,al
  4205e2:	mov    edx,esp
  4205e4:	xlat   BYTE PTR ds:[ebx]
  4205e5:	retf   
  4205e6:	inc    edi
  4205e7:	or     BYTE PTR [ebx+0x26],dl
  4205ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205eb:	aaa    
  4205ec:	mov    al,ds:0xc89fb21
  4205f1:	or     al,0x65
  4205f3:	push   ebp
  4205f4:	faddp  st(6),st
  4205f6:	mov    bh,0xe0
  4205f8:	and    eax,0xfd27711e
  4205fe:	sub    eax,0x15256e19
  420603:	push   edi
  420604:	lock jb 0x420652
  420607:	adc    DWORD PTR [ebx+edi*2-0x7b],0x4032bbb8
  42060f:	cmp    eax,0x85124430
  420614:	pop    ebx
  420615:	sbb    ebp,DWORD PTR [ebx+eiz*1-0x1edaf54c]
  42061c:	pop    ds
  42061d:	adc    DWORD PTR [ebp-0x6dcad4b6],ebx
  420623:	(bad)  
  420624:	ins    DWORD PTR es:[edi],dx
  420625:	int3   
  420626:	mov    ebp,0x7c8b3d1d
  42062b:	adc    ebx,0xd4862aef
  420631:	test   esi,ecx
  420633:	fiadd  DWORD PTR [ebx+0x1ad3cbed]
  420639:	out    dx,eax
  42063a:	inc    ecx
  42063b:	cmp    eax,0x35c4834c
  420640:	sar    DWORD PTR [esi+0x5f2dbd33],cl
  420646:	push   ds
  420647:	or     bl,dh
  420649:	popa   
  42064a:	jns    0x420677
  42064c:	mov    eax,ds:0x932f6c24
  420651:	jo     0x42062f
  420653:	icebp  
  420654:	xor    dl,bl
  420656:	sbb    al,0x70
  420658:	sbb    DWORD PTR [edx-0x62],eax
  42065b:	push   ecx
  42065c:	mov    dh,al
  42065e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42065f:	and    BYTE PTR [edx+0x3a],bl
  420662:	inc    ebx
  420663:	xor    al,0xdf
  420665:	hlt    
  420666:	in     al,dx
  420667:	scas   al,BYTE PTR es:[edi]
  420668:	jg     0x4206e2
  42066a:	sub    BYTE PTR [bp+di+0x60a],bh
  42066f:	and    BYTE PTR [edx-0x16],0xb7
  420673:	push   esp
  420674:	loope  0x42062c
  420676:	cwde   
  420677:	adc    BYTE PTR [ebp-0x7c2063d8],cl
  42067d:	xlat   BYTE PTR ds:[ebx]
  42067e:	mov    esi,0xe6b0286d
  420683:	add    BYTE PTR [ebp+0x2112ad87],dl
  420689:	addr16 push ecx
  42068b:	hlt    
  42068c:	mov    esi,0x7e05e712
  420691:	or     DWORD PTR [esi-0x80],ebx
  420694:	fwait
  420695:	inc    ebx
  420696:	jg     0x42069b
  420698:	lods   ax,WORD PTR ds:[esi]
  42069a:	xchg   DWORD PTR [ecx+edi*2+0x4ee11a54],ecx
  4206a1:	pop    esp
  4206a2:	xchg   edi,eax
  4206a3:	mov    ds:0x6b6a0699,al
  4206a8:	les    eax,FWORD PTR [edi]
  4206aa:	adc    DWORD PTR [eax],0xd18b2b8d
  4206b0:	adc    DWORD PTR [edx],edi
  4206b2:	repz inc edi
  4206b4:	add    eax,DWORD PTR [edx+0x6ee031b1]
  4206ba:	mov    cs,WORD PTR [ebx]
  4206bc:	(bad)  
  4206bd:	in     eax,dx
  4206be:	(bad)  
  4206bf:	jno    0x420647
  4206c1:	sub    al,0xab
  4206c3:	stc    
  4206c4:	push   ecx
  4206c5:	add    edx,DWORD PTR [edi-0x9e8f43a]
  4206cb:	(bad)  
  4206cc:	aam    0x1c
  4206ce:	pop    esp
  4206cf:	sub    al,0xe2
  4206d1:	inc    ebx
  4206d2:	ins    BYTE PTR es:[edi],dx
  4206d3:	or     BYTE PTR [ebx+eiz*1],ch
  4206d6:	adc    ebp,esi
  4206d8:	pop    ebp
  4206d9:	iret   
  4206da:	jnp    0x4206c3
  4206dc:	push   cs
  4206dd:	out    0xae,eax
  4206df:	retf   
  4206e0:	cmp    BYTE PTR [ecx+0x7a],0xcf
  4206e4:	jle    0x420671
  4206e6:	push   ebp
  4206e7:	stc    
  4206e8:	sbb    al,0x9d
  4206ea:	xor    eax,0xc75f0a30
  4206ef:	ds aad 0x35
  4206f2:	in     eax,0x53
  4206f4:	add    BYTE PTR ds:0x53bdcdbb,ch
  4206fa:	and    eax,ebx
  4206fc:	cmp    esi,ecx
  4206fe:	sti    
  4206ff:	mov    ecx,0xc22a5d44
  420704:	sbb    DWORD PTR [eax],eax
  420706:	out    dx,eax
  420707:	adc    BYTE PTR [edx],0xb5
  42070a:	mov    fs,edi
  42070c:	pop    esi
  42070d:	jnp    0x420706
  42070f:	imul   ebp,DWORD PTR [ecx-0x6],0xbfbb017c
  420716:	jmp    0x9817:0x4d95a315
  42071d:	pushf  
  42071e:	pop    ebx
  42071f:	and    al,0x58
  420721:	ret    0xb0f3
  420724:	and    ebp,DWORD PTR [ebx+esi*4]
  420727:	sbb    dh,BYTE PTR [ebp+0x4d4b206b]
  42072d:	pop    esp
  42072e:	cdq    
  42072f:	inc    esi
  420730:	popa   
  420731:	push   ss
  420732:	js     0x420718
  420734:	xchg   esi,eax
  420735:	loope  0x42073b
  420737:	pop    ss
  420738:	dec    esi
  420739:	xchg   BYTE PTR [ebx+0x17],bh
  42073c:	dec    ecx
  42073d:	pop    esp
  42073e:	push   cs
  42073f:	lock and dl,cl
  420742:	je     0x420774
  420744:	popa   
  420745:	loopne 0x4206e7
  420747:	sub    eax,0x64ab55d1
  42074c:	and    al,dl
  42074e:	imul   ebx,DWORD PTR [ebx+0x5b],0x72fa77bd
  420755:	lea    eax,[esi-0x3b]
  420758:	sbb    ch,bh
  42075a:	pop    ds
  42075b:	ins    BYTE PTR es:[edi],dx
  42075c:	(bad)  
  42075d:	pop    esi
  42075e:	test   ah,ch
  420760:	test   eax,0x721f33bd
  420765:	(bad)  
  420766:	cmp    DWORD PTR [edx+edi*4+0x33b90b3c],ebx
  42076d:	arpl   si,si
  42076f:	sbb    ebp,DWORD PTR [ebx-0x20]
  420772:	xchg   ebp,eax
  420773:	nop
  420774:	aad    0x42
  420776:	add    DWORD PTR [ebp-0x57069de0],ebp
  42077c:	jmp    0xc22d77d
  420781:	mov    bl,BYTE PTR [ebx+edx*8]
  420784:	sbb    eax,0xe67befef
  420789:	ja     0x42073f
  42078b:	repz cwde 
  42078d:	xchg   ecx,eax
  42078e:	lods   al,BYTE PTR ds:[esi]
  42078f:	imul   ecx,DWORD PTR [ebx+0x3b57af13],0xffffffda
  420796:	dec    ecx
  420797:	jecxz  0x4207d8
  420799:	inc    ebp
  42079a:	jmp    0x420732
  42079c:	xchg   ebp,eax
  42079d:	dec    esp
  42079e:	and    DWORD PTR [esi-0x53],ebx
  4207a1:	iret   
  4207a2:	(bad)  
  4207a3:	out    0x89,al
  4207a5:	jg     0x420826
  4207a7:	lods   al,BYTE PTR ds:[esi]
  4207a8:	sub    edi,DWORD PTR [ebx]
  4207aa:	pop    eax
  4207ab:	add    BYTE PTR [ebx],dh
  4207ad:	sub    BYTE PTR [edi],ah
  4207af:	mov    ds:0x190e607a,eax
  4207b4:	aaa    
  4207b5:	ins    BYTE PTR es:[edi],dx
  4207b6:	push   ebp
  4207b7:	imul   eax,DWORD PTR [ecx+0x26],0x71
  4207bb:	div    BYTE PTR [ebp-0x2f43921b]
  4207c1:	daa    
  4207c2:	lock fcom QWORD PTR [ebp+edi*1-0x68204558]
  4207ca:	fs xchg esp,eax
  4207cc:	push   esp
  4207cd:	addr16 push eax
  4207cf:	(bad)
  4207d2:	sub    al,0x5b
  4207d4:	mov    ch,0xd5
  4207d7:	add    dl,cl
  4207d9:	iret   
  4207da:	ror    BYTE PTR ds:[ebx-0x33],cl
  4207de:	add    al,0xb8
  4207e0:	jb     0x4207fc
  4207e2:	inc    esp
  4207e3:	dec    edi
  4207e4:	es dec esp
  4207e6:	push   ebp
  4207e7:	fdiv   st,st(2)
  4207e9:	(bad)  
  4207ea:	out    dx,al
  4207eb:	mov    cl,0xc9
  4207ed:	add    eax,0x40ba2722
  4207f2:	pusha  
  4207f3:	or     dh,bh
  4207f5:	mov    esi,0xc1bfd949
  4207fa:	test   BYTE PTR [ecx],dh
  4207fc:	int3   
  4207fd:	dec    eax
  4207fe:	stos   DWORD PTR es:[edi],eax
  4207ff:	aas    
  420800:	cmp    bh,BYTE PTR [edi+ebx*1]
  420803:	jmp    0xb6494349
  420808:	fld    TBYTE PTR ds:0x3d65a825
  42080e:	and    al,0x9b
  420810:	lds    esi,FWORD PTR [edi-0x5c502585]
  420816:	add    dh,BYTE PTR [ecx-0x70fbc369]
  42081c:	jae    0x420854
  42081e:	xor    bl,BYTE PTR [edi+ebx*2]
  420821:	and    al,0xd9
  420823:	push   ecx
  420824:	push   esi
  420825:	imul   ax,WORD PTR [esi],0xffc0
  420829:	sub    esp,0x2f
  42082c:	xchg   edi,eax
  42082d:	pop    esi
  42082e:	cmp    DWORD PTR [ebp+0x11],esi
  420831:	mul    DWORD PTR [edx+0x2448a0ef]
  420837:	ins    DWORD PTR es:[edi],dx
  420838:	addr16 xchg edi,eax
  42083a:	cli    
  42083b:	push   ss
  42083c:	inc    eax
  42083d:	test   al,0x49
  42083f:	imul   esi,DWORD PTR [ebx-0x5e],0x1
  420843:	or     eax,esp
  420845:	dec    edx
  420846:	shl    DWORD PTR [esi+ebx*4-0x2b],1
  42084a:	clc    
  42084b:	fucomip st,st(2)
  42084d:	push   eax
  42084e:	mov    al,ds:0x6691f3f7
  420853:	jae    0x420832
  420855:	mov    esp,0x13dbad85
  42085a:	addr16 lock inc ebx
  42085d:	mov    al,ds:0xa289893c
  420862:	int3   
  420863:	pop    ebx
  420864:	or     DWORD PTR [ebx-0x8b98c63],esp
  42086a:	outs   dx,BYTE PTR ds:[esi]
  42086b:	mov    DWORD PTR [ebx],edx
  42086d:	dec    ecx
  42086e:	add    ebp,ebx
  420870:	sbb    al,0x3b
  420872:	(bad)  
  420874:	mov    ebp,0xd879c55d
  420879:	pushf  
  42087a:	mov    ch,bh
  42087c:	dec    esp
  42087d:	pop    ebx
  42087e:	push   eax
  42087f:	xor    bl,dl
  420881:	jns    0x420846
  420883:	push   edi
  420884:	inc    edi
  420885:	xchg   BYTE PTR [edi],bl
  420887:	scas   eax,DWORD PTR es:[edi]
  420888:	push   ebp
  420889:	nop
  42088a:	scas   eax,DWORD PTR es:[edi]
  42088b:	in     al,0xd2
  42088d:	test   al,0x81
  42088f:	or     bl,BYTE PTR [edi]
  420891:	call   0x3937d55c
  420896:	adc    BYTE PTR fs:[ebx-0x5502e3fd],al
  42089d:	jecxz  0x42084d
  42089f:	dec    ebx
  4208a0:	jmp    0xd8c25fd0
  4208a5:	cmp    eax,0xc02d88b4
  4208aa:	cmp    cl,BYTE PTR [ecx]
  4208ac:	mov    edi,0x7b690304
  4208b1:	loope  0x42090c
  4208b3:	out    dx,al
  4208b4:	daa    
  4208b5:	call   0x673:0xe80d365d
  4208bc:	lahf   
  4208bd:	push   ecx
  4208be:	mov    bl,0xf9
  4208c0:	mov    fs,WORD PTR [esi-0x1b]
  4208c3:	jge    0x4208cb
  4208c5:	cwde   
  4208c6:	mov    edi,?
  4208c8:	and    DWORD PTR [ebp-0x1b],0xffffff80
  4208cc:	sub    al,0x4d
  4208ce:	jb     0x420891
  4208d0:	inc    edi
  4208d1:	ror    bh,1
  4208d3:	mov    bl,0x8f
  4208d5:	cmovae ebp,DWORD PTR [eax]
  4208d8:	test   eax,0xc814fbde
  4208dd:	(bad)  
  4208de:	sub    al,0xb1
  4208e0:	or     eax,0x27b271b9
  4208e5:	(bad)  
  4208e6:	hlt    
  4208e7:	jnp    0x4208d1
  4208e9:	ins    DWORD PTR es:[edi],dx
  4208ea:	rol    BYTE PTR [ebx+edx*4-0x627d24be],0x29
  4208f2:	cmp    edx,DWORD PTR [edx+0x26]
  4208f5:	xor    dh,cl
  4208f7:	jno    0x420908
  4208f9:	push   ds
  4208fa:	and    BYTE PTR ds:0xc95b76e8,0xfd
  420901:	jecxz  0x420926
  420903:	(bad)  
  420904:	out    dx,al
  420905:	xchg   ebp,eax
  420906:	mov    BYTE PTR [ebx],ch
  420908:	xor    bh,BYTE PTR [edx+0x5b21480f]
  42090e:	and    BYTE PTR [edx],ah
  420910:	mov    DWORD PTR [eax+0x50],edx
  420913:	into   
  420914:	add    al,0xa3
  420916:	adc    DWORD PTR [edx+0x64],edi
  420919:	push   es
  42091a:	jmp    0x420905
  42091c:	retf   
  42091d:	inc    edx
  42091e:	ss into 
  420920:	add    eax,0x76674a38
  420925:	jnp    0x420951
  420927:	xor    eax,0x7c04e031
  42092c:	icebp  
  42092d:	sub    al,0x2d
  42092f:	fnstcw WORD PTR [edi]
  420931:	mov    ds:0xbee03f90,eax
  420936:	imul   ecx,esi,0x5e3514f3
  42093c:	test   DWORD PTR [edi],0xde5b434a
  420942:	lods   eax,DWORD PTR ds:[esi]
  420943:	jp     0x42096f
  420945:	mov    WORD PTR [eax-0x7d73de06],fs
  42094b:	xor    eax,0x1d5a2f31
  420950:	pop    ebp
  420951:	mov    edx,0x22d72162
  420956:	repz sbb BYTE PTR [esi+edx*1],dl
  42095a:	pop    edi
  42095b:	ins    DWORD PTR es:[edi],dx
  42095c:	mul    ah
  42095e:	xlat   BYTE PTR ds:[ebx]
  42095f:	xchg   ebp,eax
  420960:	div    edx
  420962:	adc    eax,0x21ec52b0
  420967:	mov    ?,WORD PTR [esi-0x2d]
  42096a:	and    eax,0xef97d176
  42096f:	mul    BYTE PTR [ebx-0x72]
  420972:	bound  ebx,QWORD PTR [esi-0x70]
  420975:	sub    BYTE PTR [eax+0x7a76ba6b],ah
  42097b:	add    al,0x12
  42097d:	fsubr  QWORD PTR ds:0x411edd22
  420983:	and    al,0xbf
  420985:	ficomp WORD PTR [eax]
  420987:	fdiv   DWORD PTR [esi]
  420989:	(bad)  
  42098a:	dec    edi
  42098b:	sub    BYTE PTR [edi-0x21],0xde
  42098f:	je     0x420965
  420991:	cmp    eax,0xe00c8c87
  420996:	xor    al,0x45
  420998:	(bad)  
  420999:	adc    eax,DWORD PTR [ebp+eax*8+0x53]
  42099d:	fisubr DWORD PTR [edx-0x1e]
  4209a0:	and    BYTE PTR [ebx-0x50],al
  4209a3:	scas   al,BYTE PTR es:[edi]
  4209a4:	jle    0x4209b4
  4209a6:	out    dx,al
  4209a7:	loopne 0x420976
  4209a9:	push   eax
  4209aa:	sti    
  4209ab:	jecxz  0x420a03
  4209ad:	enter  0x9edd,0xbb
  4209b1:	in     al,0x3e
  4209b3:	add    al,0x2
  4209b5:	add    BYTE PTR [ebx+0x4c],cl
  4209b8:	imul   eax,DWORD PTR [ebx-0x77],0x15
  4209bc:	inc    DWORD PTR [di-0x79]
  4209c0:	hlt    
  4209c1:	xchg   DWORD PTR [edx-0x66c6e18],esi
  4209c7:	sbb    BYTE PTR [esi],bl
  4209c9:	push   cs
  4209ca:	and    ch,bl
  4209cc:	(bad)  
  4209cd:	pushf  
  4209ce:	pop    ebp
  4209cf:	or     BYTE PTR [edx+ecx*4+0x6dac873e],dl
  4209d6:	add    BYTE PTR [eax],bl
  4209d8:	imul   eax,DWORD PTR [esi-0x50],0x22705f45
  4209df:	or     DWORD PTR [eax+0x43],eax
  4209e2:	cli    
  4209e3:	xchg   esp,eax
  4209e4:	popf   
  4209e5:	pop    esp
  4209e6:	out    0x23,eax
  4209e8:	mov    eax,ds:0xb285d888
  4209ed:	mov    edx,0x3061d739
  4209f2:	push   ecx
  4209f3:	fwait
  4209f4:	(bad)
  4209f9:	lods   al,BYTE PTR ds:[esi]
  4209fa:	(bad)  
  4209fb:	mov    esi,ecx
  4209fd:	dec    edx
  4209fe:	xchg   bh,dl
  420a00:	sbb    DWORD PTR [eax],eax
  420a02:	inc    ebp
  420a03:	xor    ah,BYTE PTR [edx]
  420a05:	dec    eax
  420a06:	nop
  420a07:	or     al,0x68
  420a09:	enter  0x5415,0xa8
  420a0d:	out    dx,al
  420a0e:	arpl   WORD PTR [ecx],bx
  420a10:	cmp    BYTE PTR [ebx-0x2c],dh
  420a13:	int    0x1c
  420a15:	retf   
  420a16:	std    
  420a17:	add    al,0x15
  420a19:	jno    0x4209ca
  420a1b:	imul   edi,DWORD PTR [eax-0x7311c4d3],0x44ecc27d
  420a25:	in     eax,dx
  420a26:	or     al,BYTE PTR [edx+eax*2]
  420a29:	mov    edx,0xe109d6d
  420a2e:	push   ds
  420a2f:	cmp    dh,BYTE PTR [esi+0x7ab16cc7]
  420a35:	and    DWORD PTR ds:0xeabca013,ebx
  420a3b:	sbb    al,0x1c
  420a3d:	call   0x7e91:0xa62d3f48
  420a44:	dec    ecx
  420a45:	push   edx
  420a46:	jecxz  0x420aa5
  420a48:	out    0x9d,eax
  420a4a:	leave  
  420a4b:	icebp  
  420a4c:	aas    
  420a4d:	fdiv   st,st(0)
  420a4f:	cdq    
  420a50:	sub    BYTE PTR ds:0xc985237c,bl
  420a56:	hlt    
  420a57:	dec    esp
  420a58:	dec    BYTE PTR ds:[esi-0x7]
  420a5c:	sub    DWORD PTR [bx-0x79],edx
  420a60:	dec    esp
  420a61:	rcl    DWORD PTR [ecx-0x4],1
  420a64:	mov    edi,0xcdf8d55e
  420a69:	jp     0x420a4f
  420a6b:	sub    DWORD PTR [ebp-0x30],eax
  420a6e:	in     al,0x40
  420a70:	scas   al,BYTE PTR es:[edi]
  420a71:	jle    0x420a3a
  420a73:	std    
  420a74:	pop    eax
  420a75:	pop    edi
  420a76:	mov    bl,0x9a
  420a78:	fmul   DWORD PTR [ebx+0xbcdbd61]
  420a7e:	cmp    dh,BYTE PTR [ebx-0x2a]
  420a81:	data16 icebp 
  420a83:	cmp    ebx,esp
  420a85:	push   ds
  420a86:	bound  esi,QWORD PTR [esi-0x9]
  420a89:	and    eax,ebp
  420a8b:	dec    esp
  420a8c:	dec    esp
  420a8d:	pop    esp
  420a8e:	inc    edi
  420a8f:	or     dh,0x7
  420a92:	scas   al,BYTE PTR es:[edi]
  420a93:	push   ds
  420a94:	hlt    
  420a95:	xchg   esi,eax
  420a96:	aas    
  420a97:	out    0xed,eax
  420a99:	dec    esi
  420a9a:	add    ebp,DWORD PTR [eax+0x67]
  420a9d:	push   ecx
  420a9e:	add    cl,dh
  420aa0:	scas   eax,DWORD PTR es:[di]
  420aa2:	mov    ds:0xc409bff,eax
  420aa7:	outs   dx,BYTE PTR ds:[esi]
  420aa8:	mov    esi,0x1acbbe8b
  420aad:	fcmovb st,st(2)
  420aaf:	xchg   ebp,eax
  420ab0:	and    al,0x31
  420ab2:	push   edx
  420ab3:	outs   dx,DWORD PTR ds:[esi]
  420ab4:	sub    edx,DWORD PTR [esi+eiz*1-0x38514415]
  420abb:	test   al,0xd8
  420abd:	hlt    
  420abe:	sti    
  420abf:	xchg   edx,eax
  420ac0:	cmp    bh,cl
  420ac2:	dec    eax
  420ac3:	in     eax,dx
  420ac4:	loopne 0x420afa
  420ac6:	in     al,0xa3
  420ac8:	lea    ecx,[edx]
  420aca:	mov    DWORD PTR [edx-0xbe4e92b],eax
  420ad0:	arpl   WORD PTR [edi],bx
  420ad2:	scas   al,BYTE PTR es:[edi]
  420ad3:	mul    bh
  420ad5:	rol    DWORD PTR [eax],0x11
  420ad8:	add    BYTE PTR [ebx+0x145317c0],bl
  420ade:	push   0x5c4eed1c
  420ae3:	or     DWORD PTR [esi],edx
  420ae5:	mov    ds:0xa4a1f6df,eax
  420aea:	sbb    al,0x64
  420aec:	stos   DWORD PTR es:[edi],eax
  420aed:	mov    ebx,0x7e0ae2bc
  420af2:	iret   
  420af3:	leave  
  420af4:	pop    gs
  420af6:	xchg   ebp,eax
  420af7:	mov    WORD PTR [edi],?
  420af9:	and    ch,BYTE PTR [esi+0x5cdac1e]
  420aff:	jp     0x420b5f
  420b01:	xchg   ebx,eax
  420b02:	push   ebx
  420b03:	scas   eax,DWORD PTR es:[edi]
  420b04:	dec    ecx
  420b05:	mov    dl,0x10
  420b07:	in     eax,0x8f
  420b09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b0a:	jl     0x420afb
  420b0c:	popa   
  420b0d:	and    BYTE PTR [esi+0x24325b03],0xef
  420b14:	mov    dh,BYTE PTR [ebx-0xa]
  420b17:	cmp    al,0x5b
  420b19:	aad    0x8
  420b1b:	retf   
  420b1c:	xchg   ecx,eax
  420b1d:	(bad)  
  420b1e:	aad    0xae
  420b20:	sbb    al,BYTE PTR [esi]
  420b22:	dec    ebx
  420b23:	lods   eax,DWORD PTR ds:[esi]
  420b24:	jbe    0x420ae3
  420b26:	jmp    0x420ad8
  420b28:	int3   
  420b29:	cwde   
  420b2a:	jne    0x420b35
  420b2c:	push   esi
  420b2d:	leave  
  420b2e:	dec    ebx
  420b2f:	fistp  DWORD PTR [ebx]
  420b31:	test   dh,ah
  420b33:	(bad)  
  420b34:	pop    edi
  420b35:	clc    
  420b36:	sub    eax,edi
  420b38:	lods   eax,DWORD PTR ds:[esi]
  420b39:	or     dl,BYTE PTR [edx+edi*4+0x51]
  420b3d:	xchg   ch,al
  420b3f:	das    
  420b40:	das    
  420b41:	cmp    bh,BYTE PTR [eax+0x35824617]
  420b47:	pop    edi
  420b48:	pop    edx
  420b49:	into   
  420b4a:	cmp    eax,0x87b7c584
  420b4f:	sub    ecx,DWORD PTR [ebp+esi*2-0x4b9fbe6]
  420b56:	pop    ebp
  420b57:	xchg   ecx,eax
  420b58:	imul   edi,DWORD PTR [ebp+0x20],0xffffff8a
  420b5c:	and    eax,0x8a4717c8
  420b61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b62:	jmp    0x420b00
  420b64:	outs   dx,DWORD PTR ds:[esi]
  420b65:	and    al,0x6d
  420b67:	clc    
  420b68:	ret    0x7665
  420b6b:	dec    ebx
  420b6c:	imul   esp,DWORD PTR [eax-0x33],0x468ac60f
  420b73:	cs lahf 
  420b75:	ficom  WORD PTR [ecx]
  420b77:	aam    0x2d
  420b79:	xchg   ebx,eax
  420b7a:	fwait
  420b7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b7c:	gs push eax
  420b7e:	(bad)  
  420b7f:	fsub   DWORD PTR [esi-0x43eac15d]
  420b85:	pop    esp
  420b86:	push   ebp
  420b87:	jl     0x420b0d
  420b89:	jbe    0x420bdf
  420b8b:	stos   BYTE PTR es:[edi],al
  420b8c:	stc    
  420b8d:	jp     0x420c07
  420b8f:	sbb    esp,esi
  420b91:	jmp    0x420be4
  420b93:	sbb    al,0x21
  420b95:	or     BYTE PTR [esi],bl
  420b97:	pop    esi
  420b98:	aas    
  420b99:	push   esp
  420b9a:	pop    ss
  420b9b:	push   ss
  420b9c:	jge    0x420b73
  420b9e:	jmp    0x256d:0xb4ed4bcc
  420ba5:	dec    ebx
  420ba6:	ds add eax,0xcdb9b55b
  420bac:	fisub  WORD PTR [eax+0x6a409f]
  420bb2:	xor    DWORD PTR [edx-0xe],0xebd3366f
  420bb9:	out    0x71,al
  420bbb:	and    ah,ah
  420bbd:	mov    edi,0x13847748
  420bc2:	xchg   edi,edi
  420bc4:	cli    
  420bc5:	hlt    
  420bc6:	in     al,dx
  420bc7:	dec    esp
  420bc8:	fs repz jno 0x420c35
  420bcc:	repz mov ebp,0x2b77864
  420bd2:	adc    eax,0x3e7c02a3
  420bd7:	or     al,BYTE PTR [ebp+0x58]
  420bda:	ror    BYTE PTR [ecx],1
  420bdc:	inc    esp
  420bdd:	fidivr DWORD PTR [ecx-0x52be7866]
  420be3:	or     al,ah
  420be5:	rcl    DWORD PTR fs:[esi+0x2],cl
  420be9:	jmp    0x70e:0xb0455369
  420bf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bf1:	jecxz  0x420c50
  420bf3:	cmp    edx,esp
  420bf5:	ja     0x420c46
  420bf7:	scas   eax,DWORD PTR es:[edi]
  420bf8:	add    ch,ah
  420bfa:	mov    al,ds:0x3a7585a
  420bff:	lds    ebp,FWORD PTR [eax-0x35]
  420c02:	pop    ebp
  420c03:	bswap  esp
  420c05:	push   ebx
  420c06:	adc    bl,bl
  420c08:	jle    0x420ba3
  420c0a:	loop   0x420c14
  420c0c:	vpavgw xmm2,xmm7,xmm5
  420c10:	xor    al,0xb0
  420c12:	inc    DWORD PTR [edi+0x76c4cd98]
  420c18:	rol    BYTE PTR [edx+0x29c459aa],1
  420c1e:	mov    BYTE PTR [edx+eiz*1-0x583debeb],dl
  420c25:	pop    ds
  420c26:	(bad)  
  420c28:	mov    bh,cl
  420c2a:	(bad)  
  420c2b:	in     al,dx
  420c2c:	push   ecx
  420c2d:	mov    al,ds:0xaccf473d
  420c32:	mov    ds:0xf191f95e,eax
  420c37:	in     eax,dx
  420c38:	lahf   
  420c39:	stos   BYTE PTR es:[edi],al
  420c3a:	pop    ebp
  420c3b:	inc    edi
  420c3c:	sahf   
  420c3d:	or     DWORD PTR [esi-0x69],0xffffffb2
  420c41:	out    0xe,al
  420c43:	int    0xc5
  420c45:	mov    edx,0xa9a72c97
  420c4a:	adc    edx,DWORD PTR [eax-0x3637c6ab]
  420c50:	sub    cl,BYTE PTR cs:[ebx-0x5c]
  420c54:	sti    
  420c55:	test   al,0xc5
  420c57:	inc    edx
  420c58:	(bad)  
  420c59:	outs   dx,DWORD PTR ds:[esi]
  420c5a:	add    BYTE PTR [esi+ebx*2-0x77eda77d],ah
  420c61:	xor    BYTE PTR [ebx],bl
  420c63:	popf   
  420c64:	cdq    
  420c65:	or     edx,DWORD PTR [esi+eiz*8+0x66bedb36]
  420c6c:	scas   eax,DWORD PTR es:[edi]
  420c6d:	cmp    edi,DWORD PTR [ebx]
  420c6f:	cwde   
  420c70:	add    BYTE PTR [eax+eax*1],ah
  420c73:	xchg   DWORD PTR [edx-0x29],esp
  420c76:	mov    al,BYTE PTR [esi+0xb]
  420c79:	pop    ecx
  420c7a:	cs in  eax,dx
  420c7c:	stos   BYTE PTR es:[edi],al
  420c7d:	mov    ebx,0x41195963
  420c82:	push   eax
  420c83:	inc    eax
  420c84:	(bad)  
  420c88:	xchg   BYTE PTR [ebx+0x2a],bl
  420c8b:	jb     0x420c28
  420c8d:	sbb    eax,0x3b7fb7e1
  420c92:	dec    ebx
  420c93:	scas   al,BYTE PTR es:[edi]
  420c94:	mov    esp,0x7b20b8b
  420c99:	pop    esp
  420c9a:	addr16 in eax,0x64
  420c9d:	push   ebx
  420c9e:	dec    ebx
  420c9f:	pop    edi
  420ca0:	xchg   ebp,eax
  420ca1:	shl    bl,1
  420ca3:	shl    BYTE PTR [eax],cl
  420ca5:	dec    edx
  420ca6:	dec    esi
  420ca7:	pushf  
  420ca8:	ja     0x420ccb
  420caa:	fsub   st,st(5)
  420cac:	iret   
  420cad:	div    BYTE PTR [edx-0xc21e65a]
  420cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cb4:	or     eax,0x11dc5290
  420cb9:	or     edi,ebx
  420cbb:	inc    ecx
  420cbc:	and    dl,ah
  420cbe:	inc    esi
  420cbf:	mov    esi,0x31a85388
  420cc4:	rol    BYTE PTR [eax-0x1e04bbe7],cl
  420cca:	bnd ret 
  420ccc:	fstp   DWORD PTR [ecx-0x3b6cf27c]
  420cd2:	loop   0x420cf5
  420cd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cd5:	ins    BYTE PTR es:[edi],dx
  420cd6:	xor    al,0x96
  420cd8:	inc    BYTE PTR [edi-0x35]
  420cdb:	lds    ebx,FWORD PTR [edx-0x14e7851a]
  420ce1:	rcl    BYTE PTR [eax],cl
  420ce3:	shr    DWORD PTR [esi+ecx*1-0x3b],1
  420ce7:	(bad)  [edi]
  420ce9:	imul   ebx,DWORD PTR [esi*8+0x666e2ac9],0x38
  420cf1:	hlt    
  420cf2:	sar    DWORD PTR [ebx],1
  420cf4:	data16 test BYTE PTR [edx-0x41940585],ah
  420cfb:	mov    ds:0xb691187e,eax
  420d00:	mov    al,0xf4
  420d02:	jmp    0x6edd:0xb0f6744b
  420d09:	pop    ss
  420d0a:	sbb    al,0xba
  420d0c:	cmc    
  420d0d:	ja     0x420ce6
  420d0f:	inc    ebx
  420d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d11:	jp     0x420d79
  420d13:	mov    ecx,0x34b3e494
  420d18:	sbb    bh,bh
  420d1a:	sub    bh,dh
  420d1c:	xchg   edi,eax
  420d1d:	dec    edx
  420d1e:	mov    ebx,0x5dcecc07
  420d23:	pushf  
  420d24:	add    ch,BYTE PTR [edi+ecx*8]
  420d27:	add    eax,0x4ce3f115
  420d2c:	nop
  420d2d:	mov    bl,0x93
  420d2f:	mov    esp,0x61a314f3
  420d34:	in     eax,0x4b
  420d36:	std    
  420d37:	in     eax,dx
  420d38:	fcom   st(7)
  420d3a:	jg     0x420d35
  420d3c:	add    al,0x15
  420d3e:	pop    edi
  420d3f:	xor    DWORD PTR [edx+edi*4+0x2aeac4ff],edi
  420d46:	dec    ebx
  420d47:	dec    ebx
  420d48:	(bad)  
  420d49:	sbb    ecx,DWORD PTR [ecx]
  420d4b:	pushf  
  420d4c:	xchg   edx,eax
  420d4d:	loope  0x420d43
  420d4f:	pop    esi
  420d50:	jae    0x420db2
  420d52:	cmp    BYTE PTR [ebx],cl
  420d54:	xchg   eax,ebp
  420d56:	sti    
  420d57:	mov    WORD PTR [edx+ebx*2+0x69],ds
  420d5b:	pop    esp
  420d5c:	lods   eax,DWORD PTR ds:[esi]
  420d5d:	mov    ds:0xd0701a94,eax
  420d62:	add    al,0x10
  420d64:	jmp    0x420d96
  420d66:	jns    0x420d7e
  420d68:	lods   al,BYTE PTR ds:[esi]
  420d69:	or     al,0x10
  420d6b:	mov    edx,0x5683250
  420d70:	cmc    
  420d71:	mov    esi,0xf369514a
  420d76:	fdivr  DWORD PTR [ebp+0x5a909f1b]
  420d7c:	fst    QWORD PTR [edx+0x38]
  420d7f:	ins    DWORD PTR es:[edi],dx
  420d80:	pushf  
  420d81:	sub    bh,BYTE PTR [edi]
  420d83:	inc    edi
  420d84:	jmp    0x407a69da
  420d89:	mov    esi,0x9d2f6aee
  420d8e:	repnz add al,0x24
  420d92:	enter  0xfbb2,0xbb
  420d96:	sub    edi,esp
  420d98:	mov    ecx,0x1824208f
  420d9d:	(bad)  
  420d9f:	fld    DWORD PTR [ebp+0x39]
  420da2:	ror    DWORD PTR ss:[eax+0x7021bedf],0x49
  420daa:	mov    edi,0xd1543ea
  420daf:	add    esi,ebx
  420db1:	sbb    al,0xc5
  420db3:	aas    
  420db4:	xlat   BYTE PTR ds:[ebx]
  420db5:	into   
  420db6:	adc    eax,0x5c7325fd
  420dbb:	test   DWORD PTR [edx-0x63d1660c],edx
  420dc1:	(bad)  ds:0x61a756ae
  420dc7:	enter  0x52f8,0xfd
  420dcb:	and    ah,BYTE PTR [ecx]
  420dcd:	pop    ebx
  420dce:	mov    ds:0x785359d5,eax
  420dd3:	ret    
  420dd4:	test   al,0xbf
  420dd6:	or     BYTE PTR [ecx-0x57],bl
  420dd9:	mov    ah,0x3f
  420ddb:	xchg   edi,eax
  420ddc:	xor    eax,0x16fabd78
  420de1:	jne    0x420db7
  420de3:	(bad)  
  420de4:	fsubp  st(4),st
  420de6:	xor    DWORD PTR [eax+0x4dac8213],ecx
  420dec:	cmp    ecx,ebx
  420dee:	push   ebp
  420def:	lock lods al,BYTE PTR ds:[esi]
  420df1:	xchg   esi,eax
  420df2:	sbb    DWORD PTR [edi],ebp
  420df4:	mov    ecx,0x2368c30f
  420df9:	mov    ds,WORD PTR gs:[esi]
  420dfc:	push   0x1f52186e
  420e01:	test   DWORD PTR [edx],edi
  420e03:	pop    eax
  420e04:	fild   WORD PTR [esi-0x4]
  420e07:	cli    
  420e08:	mov    ch,0x13
  420e0a:	cmp    al,0x26
  420e0c:	adc    DWORD PTR [eax],0xffffffbc
  420e0f:	ins    DWORD PTR es:[edi],dx
  420e10:	adc    esi,ebp
  420e12:	mov    gs,WORD PTR [edx-0x4c]
  420e15:	push   esp
  420e16:	out    dx,al
  420e17:	xchg   ebx,eax
  420e18:	scas   al,BYTE PTR es:[edi]
  420e19:	mov    dl,0xf
  420e1b:	pop    ebp
  420e1c:	shr    DWORD PTR [edi+0x42cb3b2b],0x43
  420e23:	scas   al,BYTE PTR es:[edi]
  420e24:	add    ebp,DWORD PTR [eax]
  420e26:	retf   0xbca6
  420e29:	inc    esp
  420e2a:	pop    ebp
  420e2b:	test   edi,0x43df4a5c
  420e31:	in     eax,0xd3
  420e33:	mov    al,ds:0xbe81cf2a
  420e38:	jae    0x420e40
  420e3a:	int3   
  420e3b:	hlt    
  420e3c:	aad    0x16
  420e3e:	cmp    al,0xe4
  420e40:	cmp    al,0xd8
  420e42:	add    DWORD PTR [esi+ebp*8+0x1d],ecx
  420e46:	xchg   ecx,eax
  420e47:	fdiv   st,st(1)
  420e49:	jp     0x420e41
  420e4b:	and    bl,BYTE PTR [eax-0x4a]
  420e4e:	in     al,dx
  420e4f:	shl    BYTE PTR [eax+0x7a],1
  420e52:	add    eax,0xdd8a157c
  420e57:	lock mov DWORD PTR [esi+0x1f],edx
  420e5b:	adc    DWORD PTR [ebp-0x74],ecx
  420e5e:	das    
  420e5f:	sbb    DWORD PTR [ebx],ebp
  420e61:	dec    eax
  420e62:	and    BYTE PTR [ebx+0x653d9951],0x2e
  420e69:	dec    ebx
  420e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e6b:	adc    eax,0xc360fb84
  420e70:	adc    BYTE PTR [esi+0x57],0xd8
  420e74:	dec    ecx
  420e75:	(bad)  
  420e76:	leave  
  420e77:	into   
  420e78:	stc    
  420e79:	push   edx
  420e7a:	mov    ah,0x7a
  420e7c:	maxps  xmm3,XMMWORD PTR [edx-0x6b]
  420e80:	fisub  DWORD PTR [eax-0x9]
  420e83:	or     bh,dl
  420e85:	inc    ebp
  420e86:	ss leave 
  420e88:	xor    BYTE PTR [esi],ah
  420e8a:	sub    BYTE PTR [ebx+0x0],bh
  420e8d:	dec    eax
  420e8e:	mov    eax,ds:0x91b2a340
  420e93:	xchg   ecx,eax
  420e94:	mov    BYTE PTR [esi-0x2a],bh
  420e97:	daa    
  420e98:	lods   eax,DWORD PTR ds:[esi]
  420e99:	scas   al,BYTE PTR es:[edi]
  420e9a:	fisttp DWORD PTR [edi+eax*1-0x35d8a79b]
  420ea1:	out    dx,eax
  420ea2:	xchg   edi,eax
  420ea3:	loop   0x420ed3
  420ea5:	mov    eax,0xd895141c
  420eaa:	mov    al,ds:0x6bc00af2
  420eaf:	or     bl,BYTE PTR [ecx]
  420eb1:	fsubr  st(5),st
  420eb3:	jmp    0xc3e2:0x31dadd18
  420eba:	sbb    bh,BYTE PTR [edi+ebx*1]
  420ebd:	loope  0x420f0b
  420ebf:	mov    ah,0xa3
  420ec1:	rol    BYTE PTR [eax+ebx*1+0x7e],1
  420ec5:	scas   al,BYTE PTR es:[edi]
  420ec6:	dec    ebp
  420ec7:	mov    bl,0x6e
  420ec9:	mov    esi,0x2775405e
  420ece:	fxch   st(2)
  420ed0:	call   0xb4d8:0x5eb3f5df
  420ed7:	bound  ebx,QWORD PTR ss:[ecx-0x63b9344d]
  420ede:	push   eax
  420edf:	xor    eax,0xfe26f047
  420ee4:	push   eax
  420ee5:	sahf   
  420ee6:	push   esi
  420ee7:	xchg   edx,eax
  420ee8:	in     eax,dx
  420ee9:	arpl   WORD PTR [edi],di
  420eeb:	mov    ?,WORD PTR [edx]
  420eed:	mov    BYTE PTR [esi-0x29d2fcf9],al
  420ef3:	out    0xb0,al
  420ef5:	add    BYTE PTR [esi-0x47],0x31
  420ef9:	sbb    BYTE PTR [ecx+0x384725ff],0xb6
  420f00:	(bad)  
  420f01:	xchg   edx,eax
  420f02:	aad    0x41
  420f04:	gs mov esp,0x9f3f380a
  420f0a:	dec    esp
  420f0b:	popa   
  420f0c:	mov    eax,ds:0xbe049755
  420f11:	hlt    
  420f12:	div    BYTE PTR [ecx+0x1d]
  420f15:	(bad)  [ebx-0x80]
  420f18:	mov    cl,dl
  420f1a:	test   eax,0x78b794ba
  420f1f:	daa    
  420f20:	xor    esi,DWORD PTR ds:0x5146c735
  420f26:	sbb    BYTE PTR [edi+0x48f76d8b],bh
  420f2c:	xchg   BYTE PTR [edi+ecx*1],ah
  420f2f:	pop    edx
  420f30:	jne    0x420f49
  420f32:	mov    eax,DWORD PTR [esi+eiz*1]
  420f35:	cmp    al,0x5d
  420f37:	mov    ebp,0x4f3d4fd4
  420f3c:	fsubr  QWORD PTR [esi]
  420f3e:	addr16 jo 0x420f4f
  420f41:	loope  0x420f32
  420f43:	sub    al,0xd1
  420f45:	pusha  
  420f46:	mov    cl,0xa4
  420f49:	rcr    BYTE PTR [eax-0x351f3b2b],1
  420f4f:	push   ebx
  420f50:	dec    ebp
  420f51:	sete   BYTE PTR ds:0xe17ab689
  420f58:	sbb    al,0xbf
  420f5a:	mov    eax,ds:0x6567dbee
  420f5f:	cmp    edi,DWORD PTR [edi+edx*4+0x32291103]
  420f66:	and    al,0x34
  420f68:	sahf   
  420f69:	aas    
  420f6a:	in     al,0x5d
  420f6c:	push   esp
  420f6d:	enter  0x5774,0x9a
  420f71:	out    0xc5,eax
  420f73:	cmp    DWORD PTR [esi],ecx
  420f75:	int    0x5d
  420f77:	int3   
  420f78:	mov    gs,WORD PTR [ebx-0x41]
  420f7b:	jmp    0x95be:0x1b56d71d
  420f82:	loopne 0x420f67
  420f84:	push   eax
  420f85:	cmp    eax,0xe5623200
  420f8a:	fnsave [ecx+0x4a]
  420f8d:	icebp  
  420f8e:	mov    dl,0x2c
  420f90:	rcl    DWORD PTR [esi-0xc],0x2e
  420f94:	pop    edi
  420f95:	mov    ?,WORD PTR [ebx]
  420f97:	xchg   BYTE PTR [ecx-0x5],ch
  420f9a:	outs   dx,BYTE PTR ds:[esi]
  420f9b:	push   ss
  420f9c:	xchg   DWORD PTR [ecx+0x2bd9fb79],esi
  420fa2:	test   al,0xf2
  420fa4:	or     DWORD PTR [ebx+ecx*1-0x7f],ecx
  420fa8:	cmp    dl,ah
  420faa:	jg     0x420ff7
  420fac:	push   cs
  420fad:	jmp    0x420fc3
  420faf:	sti    
  420fb0:	gs push ebx
  420fb2:	and    ah,BYTE PTR [eax]
  420fb4:	mov    gs,edi
  420fb6:	cmp    ch,BYTE PTR [eax+0x4f7da866]
  420fbc:	xchg   ebp,eax
  420fbd:	sar    BYTE PTR [ecx-0x25a41658],cl
  420fc3:	xor    BYTE PTR [ebx+0x167bac5e],al
  420fc9:	dec    edi
  420fca:	sub    eax,0x8c25efc7
  420fcf:	inc    edx
  420fd0:	out    0xe7,eax
  420fd2:	sub    ebp,DWORD PTR [esi+0x1ce36313]
  420fd8:	cmp    DWORD PTR [eax+0x5],ebx
  420fdb:	jb     0x420fe4
  420fdd:	loopne 0x420fcd
  420fdf:	ja     0x420f80
  420fe1:	int3   
  420fe2:	xchg   ebp,eax
  420fe3:	xchg   esp,eax
  420fe4:	or     al,0x50
  420fe6:	leave  
  420fe7:	adc    ebx,DWORD PTR [ebx]
  420fe9:	jnp    0x420fcb
  420feb:	btr    esp,ebx
  420fee:	cmp    DWORD PTR [ebx],edx
  420ff0:	test   BYTE PTR [ebp+0x1996941],ah
  420ff6:	push   ecx
  420ff7:	test   al,0x96
  420ff9:	adc    esi,ebp
  420ffb:	or     bh,BYTE PTR [ebx+0x5e260061]
  421001:	adc    eax,DWORD PTR [eax+ebx*2-0x2]
  421005:	cmp    BYTE PTR [ecx],0x67
  421008:	fidivr WORD PTR [esi+ecx*4-0xf]
  42100c:	lahf   
  42100d:	sbb    esp,DWORD PTR [edi+0xa]
  421010:	dec    ecx
  421011:	fs mov esp,0xd9d0398d
  421017:	sbb    al,0xca
  421019:	clc    
  42101a:	mov    cl,0x8a
  42101c:	cmp    al,0x5e
  42101e:	mov    ds:0xb224f7e7,al
  421023:	dec    eax
  421024:	cmp    eax,0xa30f85b8
  421029:	dec    ebp
  42102a:	mov    ebx,0x6b11d56
  42102f:	sbb    ecx,DWORD PTR [edx+0xa]
  421032:	mov    ds:0x3c092759,eax
  421037:	xchg   ecx,eax
  421038:	mov    esp,ebx
  42103a:	adc    al,0x37
  42103c:	jecxz  0x42102f
  42103e:	cmp    cl,0xbb
  421041:	dec    eax
  421042:	jnp    0x420fd3
  421044:	mov    ch,0x81
  421046:	bswap  edi
  421048:	cwde   
  421049:	sbb    bl,BYTE PTR [eax]
  42104b:	mov    bl,0x9e
  42104d:	xor    DWORD PTR [ecx+0x41],ebx
  421050:	fninit 
  421052:	mov    ch,0x98
  421054:	lods   eax,DWORD PTR ds:[esi]
  421055:	add    al,0x8e
  421057:	stc    
  421058:	or     DWORD PTR [ecx],esi
  42105a:	dec    eax
  42105b:	mov    esp,0xa6844e3c
  421060:	mov    es,WORD PTR [ebx]
  421062:	repz in al,dx
  421064:	push   edx
  421065:	push   ss
  421066:	daa    
  421067:	mov    al,0x6c
  421069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42106a:	or     DWORD PTR [edx-0x14],0xa1c472a9
  421071:	or     al,dh
  421073:	mov    eax,ds:0x5a85af43
  421078:	stos   DWORD PTR es:[di],eax
  42107a:	lahf   
  42107b:	rol    BYTE PTR [edi-0x36ee406f],0xac
  421082:	dec    ebx
  421083:	mov    ebp,0xbfe84d26
  421088:	fadd   QWORD PTR [edi]
  42108a:	je     0x4210ed
  42108c:	mov    BYTE PTR [esi],0xa2
  42108f:	cmp    al,0xea
  421091:	sbb    eax,0xf957d0f9
  421096:	lods   al,BYTE PTR ds:[esi]
  421097:	mov    eax,0x849ef383
  42109c:	push   cs
  42109d:	sbb    BYTE PTR gs:[edx-0x726528c8],dl
  4210a4:	inc    ebx
  4210a5:	ss add al,0x0
  4210a8:	xchg   ecx,eax
  4210a9:	sbb    BYTE PTR [esi+0x60],0x2f
  4210ad:	sub    al,0xec
  4210af:	stc    
  4210b0:	or     ebp,DWORD PTR [esi-0x78]
  4210b3:	icebp  
  4210b4:	cmp    BYTE PTR [ebx-0x6f],dl
  4210b7:	jae    0x421053
  4210b9:	jecxz  0x421053
  4210bb:	js     0x421096
  4210bd:	xor    DWORD PTR [eax],0x316dca71
  4210c3:	loop   0x4210eb
  4210c5:	cmp    eax,0xac3ce347
  4210ca:	mov    bl,cl
  4210cc:	mov    al,ds:0x5024d37a
  4210d1:	std    
  4210d2:	xor    DWORD PTR [edx+0x5b17fd16],edi
  4210d8:	popa   
  4210d9:	mov    eax,0xbdd4946c
  4210de:	cmp    BYTE PTR [eax+ebx*2-0x5b2044db],dl
  4210e5:	test   al,0x3
  4210e7:	xchg   edx,eax
  4210e8:	xor    al,0x15
  4210ea:	sub    ebx,DWORD PTR [ebx-0x4a04950e]
  4210f0:	pop    esi
  4210f1:	jo     0x42114e
  4210f3:	pop    esi
  4210f4:	xor    DWORD PTR [esi-0x38bd00e7],ebp
  4210fa:	jb     0x4210a9
  4210fc:	loop   0x421174
  4210fe:	jl     0x421107
  421100:	(bad)  
  421101:	jmp    0xb78e:0x9ed52ea1
  421108:	ret    
  421109:	lea    ebp,[eax+0x703727b]
  42110f:	add    al,0x36
  421111:	enter  0x2f01,0xc9
  421115:	ins    BYTE PTR es:[edi],dx
  421116:	push   eax
  421117:	sub    eax,0xc08c57d2
  42111c:	lods   al,BYTE PTR ds:[esi]
  42111d:	les    ebx,FWORD PTR [ecx+0x69ea75ba]
  421123:	dec    edx
  421124:	add    dh,ah
  421126:	mov    bh,dh
  421128:	pop    ecx
  421129:	je     0x42111c
  42112b:	fcomp  DWORD PTR [ebp+0x16f5072b]
  421131:	mov    ecx,0x61881d18
  421136:	or     DWORD PTR [ebx+0xa],esi
  421139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42113a:	and    DWORD PTR [ebx-0x33],edx
  42113d:	jg     0x421106
  42113f:	dec    esi
  421140:	xor    eax,0x4d368234
  421145:	cdq    
  421146:	(bad)  
  421147:	adc    cl,ch
  421149:	cli    
  42114a:	fistp  DWORD PTR [ebx-0x49]
  42114d:	add    al,0x3a
  42114f:	outs   dx,DWORD PTR ds:[esi]
  421150:	push   ss
  421151:	push   edx
  421152:	repnz sub ecx,DWORD PTR [esi]
  421155:	mov    eax,0x1f925b8e
  42115a:	fwait
  42115b:	out    0xdb,eax
  42115d:	imul   ecx,DWORD PTR [ebp+0x45d0317e],0xffffffdf
  421164:	mov    edx,0x6ebd374
  421169:	pop    ebx
  42116a:	outs   dx,BYTE PTR ds:[esi]
  42116b:	add    al,0xc9
  42116d:	call   0x5fd2:0xe79a45c5
  421174:	mov    BYTE PTR [edx+ecx*2],cl
  421177:	push   ax
  421179:	jae    0x42118e
  42117b:	jo     0x4211b8
  42117d:	xchg   ecx,eax
  42117e:	pop    ebp
  42117f:	xlat   BYTE PTR ds:[ebx]
  421180:	cmp    edi,DWORD PTR [ebp+0x6c6d3999]
  421186:	sub    al,0x8a
  421188:	adc    esi,edi
  42118a:	fwait
  42118b:	out    0x12,eax
  42118d:	iret   
  42118e:	popf   
  42118f:	adc    cl,BYTE PTR [edx]
  421191:	jl     0x42112f
  421193:	xor    DWORD PTR [esi],edi
  421195:	pop    esi
  421196:	jbe    0x42114a
  421198:	neg    BYTE PTR [esi]
  42119a:	clts   
  42119c:	dec    ebx
  42119d:	cmp    DWORD PTR [ecx+0x74],esi
  4211a0:	fist   WORD PTR [ebx+0x92f547a]
  4211a6:	mov    edi,0x7b62ee2b
  4211ab:	stc    
  4211ac:	call   DWORD PTR [ecx]
  4211ae:	cwde   
  4211af:	cmp    ah,BYTE PTR [ebp-0x309905dd]
  4211b5:	pop    es
  4211b6:	sub    BYTE PTR [edx+eax*4-0x41],bh
  4211ba:	push   ecx
  4211bb:	not    BYTE PTR [ebx-0x45]
  4211be:	xor    al,0x95
  4211c0:	dec    ebp
  4211c1:	xchg   esp,eax
  4211c2:	fwait
  4211c3:	les    esp,FWORD PTR [ebp+0x5]
  4211c6:	xor    eax,0x21fad588
  4211cb:	and    cl,BYTE PTR [edi]
  4211cd:	mov    ds,WORD PTR [ebx-0x87f01a7]
  4211d3:	mov    edi,0xeeda1793
  4211d8:	mov    ds:0x95a1d610,eax
  4211dd:	iret   
  4211de:	outs   dx,DWORD PTR ds:[esi]
  4211df:	mov    bl,0xba
  4211e1:	rol    WORD PTR [esp+esi*4-0x10],1
  4211e6:	add    al,BYTE PTR [eax]
  4211e8:	inc    eax
  4211e9:	ds js  0x42122c
  4211ec:	fstp   st(0)
  4211ee:	test   dh,bl
  4211f0:	loope  0x42118f
  4211f2:	sub    DWORD PTR [esi],esi
  4211f4:	dec    esp
  4211f5:	mov    ah,0x15
  4211f7:	pop    esp
  4211f8:	mov    dh,0x98
  4211fa:	popa   
  4211fb:	mov    dh,0xa0
  4211fd:	cmp    al,0xa9
  4211ff:	arpl   si,dx
  421201:	inc    ecx
  421202:	mov    ah,cl
  421204:	push   0x31d37c43
  421209:	mov    esp,0x336e2bc
  42120e:	xchg   esp,eax
  42120f:	sti    
  421210:	mov    BYTE PTR [edi],0x62
  421213:	push   ds
  421214:	xor    BYTE PTR [esi+0x67c93118],dl
  42121a:	mov    esi,0x165ec56d
  42121f:	aaa    
  421220:	gs in  eax,dx
  421222:	lahf   
  421223:	xor    BYTE PTR [ebp+0x40],al
  421226:	or     ch,BYTE PTR [eax+0x7b]
  421229:	inc    ebp
  42122a:	jno    0x421260
  42122c:	pop    ebx
  42122d:	pop    ds
  42122e:	xor    DWORD PTR [ebx],esi
  421230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421231:	push   es
  421232:	mov    eax,0x66d7fd60
  421237:	xchg   edx,eax
  421238:	outs   dx,DWORD PTR ds:[esi]
  421239:	inc    edx
  42123a:	mov    DWORD PTR [ecx+ebx*4+0x32c562da],ecx
  421241:	in     eax,dx
  421242:	sub    DWORD PTR [edx],edx
  421244:	lods   eax,DWORD PTR ds:[esi]
  421245:	sub    al,0xdc
  421247:	jmp    0x421279
  421249:	loope  0x4211de
  42124b:	xor    eax,0x368040e6
  421250:	pop    edi
  421251:	dec    edi
  421252:	mov    ecx,0xdecf637a
  421257:	ins    BYTE PTR es:[edi],dx
  421258:	pusha  
  421259:	adc    BYTE PTR [edx+0x3a],0xbb
  42125d:	cs or  al,0x83
  421260:	test   DWORD PTR [ebp+0x3a9e955b],eax
  421266:	shl    BYTE PTR [ebp+0x5e233a90],0x23
  42126d:	push   0xe7b02c0c
  421272:	cmp    eax,0xb5505afe
  421277:	inc    eax
  421278:	sub    BYTE PTR ds:0xb4518adc,ch
  42127e:	pusha  
  42127f:	frstor [edi]
  421281:	test   dh,0x5
  421284:	test   BYTE PTR [esi-0x60d897ce],dl
  42128a:	hlt    
  42128b:	push   ds
  42128c:	mov    BYTE PTR [edi],ah
  42128e:	inc    edi
  42128f:	mov    bl,0x14
  421291:	ret    
  421292:	fadd   DWORD PTR [ecx+0x38]
  421295:	sbb    BYTE PTR [edi+0x28],dh
  421298:	mov    al,ds:0x5c94f154
  42129d:	or     eax,0x3e75f6b9
  4212a2:	jp     0x4212d0
  4212a4:	inc    ebp
  4212a5:	xor    BYTE PTR ss:[eax+ebp*4-0xd],al
  4212aa:	popa   
  4212ab:	(bad)  
  4212ac:	repz int 0x64
  4212af:	das    
  4212b0:	cmp    eax,0x2cf11ce7
  4212b5:	repnz lods al,BYTE PTR ds:[esi]
  4212b7:	jno    0x4212f4
  4212b9:	mov    ebp,0x87e68a92
  4212be:	test   DWORD PTR [ecx-0x2f9d3a],ebp
  4212c4:	mov    esi,0x649c71fe
  4212c9:	jo     0x4212ad
  4212cb:	cmc    
  4212cc:	call   0xbbac:0xbadec951
  4212d3:	ret    
  4212d4:	inc    ebx
  4212d5:	xor    al,0x28
  4212d7:	adc    ebp,ebx
  4212d9:	jb     0x4212ec
  4212db:	cs cmp eax,0xc1351fce
  4212e1:	inc    esp
  4212e2:	stc    
  4212e3:	(bad)  
  4212e4:	(bad)  
  4212e6:	call   0xf3a2:0xd3dbc9ec
  4212ed:	out    0xf4,al
  4212ef:	sub    DWORD PTR [ecx-0x5],ebp
  4212f2:	mov    edi,0xfdbb85fc
  4212f7:	shr    BYTE PTR [ebx+ebp*4-0x73901fe2],0x8c
  4212ff:	jne    0x4212d1
  421301:	inc    eax
  421302:	xor    esp,ebp
  421304:	cdq    
  421305:	pop    ss
  421306:	mov    ch,0xf1
  421308:	inc    esp
  421309:	inc    esp
  42130a:	pop    esp
  42130b:	inc    esp
  42130c:	add    dh,BYTE PTR fs:[edi-0x1b]
  421310:	push   0xffffff96
  421312:	ret    0xbc3f
  421315:	addr16 push ss
  421317:	sub    esi,DWORD PTR [ebp-0x3eab4cb4]
  42131d:	neg    bl
  42131f:	int3   
  421320:	daa    
  421321:	test   BYTE PTR [edx+edi*2+0x49],ah
  421325:	(bad)  
  421326:	pop    ss
  421327:	add    BYTE PTR [ebx],cl
  421329:	in     al,0xb5
  42132b:	adc    al,0xd6
  42132d:	mov    bl,0xf6
  42132f:	mov    edi,0xc100f9c2
  421334:	push   0x1b01dd1b
  421339:	xchg   ecx,eax
  42133a:	pop    edi
  42133b:	sub    al,BYTE PTR [esi]
  42133d:	adc    BYTE PTR [eax-0x7a],ah
  421340:	(bad)  [eax+0x44]
  421343:	pop    ecx
  421344:	pop    edx
  421345:	sub    eax,0xc8805ee4
  42134a:	or     DWORD PTR [eax],0x1e
  42134d:	sub    al,BYTE PTR [eax-0x1678eecd]
  421353:	lds    ebp,FWORD PTR [eax]
  421355:	stos   BYTE PTR es:[edi],al
  421356:	fwait
  421357:	out    0xd5,al
  421359:	push   eax
  42135a:	fistp  WORD PTR [ecx+0x51224ad9]
  421360:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421361:	jae    0x4213b5
  421363:	bound  edx,QWORD PTR [ebx+0x29]
  421366:	leave  
  421367:	jnp    0x4213b3
  421369:	push   ds
  42136a:	mov    WORD PTR [edx],cs
  42136c:	lods   al,BYTE PTR ds:[esi]
  42136d:	add    al,0x84
  42136f:	jle    0x4213a9
  421371:	mov    dl,0x29
  421373:	lods   eax,DWORD PTR ds:[esi]
  421374:	push   ebx
  421375:	xchg   edx,eax
  421376:	mov    al,0xf6
  421378:	cmc    
  421379:	call   0x8a93:0xed1a1db2
  421380:	mov    edx,0xc718a289
  421385:	cmp    eax,0x522841fa
  42138a:	xchg   edi,eax
  42138b:	paddq  mm7,QWORD PTR [ebp-0x4a937bb6]
  421392:	iret   
  421393:	rcl    DWORD PTR [edi+0x52],cl
  421396:	in     ax,0x84
  421399:	xchg   edi,eax
  42139a:	daa    
  42139b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42139c:	outs   dx,DWORD PTR ds:[esi]
  42139d:	xor    al,0xe6
  42139f:	jp     0x4213fc
  4213a1:	push   esp
  4213a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213a3:	icebp  
  4213a4:	fidiv  WORD PTR [eax+0x37]
  4213a7:	jae    0x421356
  4213a9:	lods   eax,DWORD PTR ds:[esi]
  4213aa:	xchg   ecx,ebx
  4213ac:	xchg   esi,eax
  4213ad:	sub    bl,ch
  4213af:	repz mov esp,DWORD PTR [esi]
  4213b2:	lds    ebp,FWORD PTR [ebx]
  4213b4:	dec    edi
  4213b5:	ins    BYTE PTR es:[edi],dx
  4213b6:	xchg   ecx,eax
  4213b7:	mov    edi,0x763099c6
  4213bc:	stos   BYTE PTR es:[edi],al
  4213bd:	dec    edi
  4213be:	pushf  
  4213bf:	in     al,0x15
  4213c1:	pop    DWORD PTR [edx]
  4213c3:	fwait
  4213c4:	push   edx
  4213c5:	stos   DWORD PTR es:[edi],eax
  4213c6:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213c8:	sbb    ecx,ebp
  4213ca:	mov    esi,0x4b2a6eee
  4213cf:	or     eax,0x62ed7660
  4213d4:	adc    bl,dh
  4213d6:	sbb    eax,0x3a9cb635
  4213db:	outs   dx,DWORD PTR ds:[esi]
  4213dc:	xor    eax,0x8db6e97e
  4213e1:	push   cs
  4213e2:	cmp    BYTE PTR [ebx-0x3cc125ea],dl
  4213e8:	pop    ebx
  4213e9:	fistp  QWORD PTR [ecx+0x4e]
  4213ec:	in     al,0xf6
  4213ee:	dec    esp
  4213ef:	mov    eax,ds:0x31625c68
  4213f4:	out    dx,eax
  4213f5:	fisubr WORD PTR [edx-0x24]
  4213f8:	push   0x58
  4213fa:	shr    esi,cl
  4213fc:	xor    edi,DWORD PTR [ecx-0x16d6b8e5]
  421402:	fwait
  421403:	loop   0x4213fe
  421405:	data16 jecxz 0x4213df
  421408:	out    0x97,al
  42140a:	sbb    eax,0x635b5691
  42140f:	cmp    eax,0xced006bf
  421414:	xchg   ebp,eax
  421415:	mov    bl,0xa6
  421417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421418:	jl     0x421428
  42141a:	ins    BYTE PTR es:[edi],dx
  42141b:	or     cl,0xb7
  42141e:	dec    esi
  42141f:	mov    edi,0xdaf214c8
  421424:	pop    ecx
  421425:	dec    esp
  421426:	fcmovu st,st(1)
  421428:	jns    0x4213d1
  42142a:	pop    esp
  42142b:	test   BYTE PTR [esi+0x246a40f2],dh
  421431:	repz cmp BYTE PTR [esi-0x7b914b07],dl
  421438:	inc    esp
  421439:	xor    ch,bh
  42143b:	shl    DWORD PTR [ebp+0x65c16b0d],0xdd
  421442:	sub    eax,0x24bf4b55
  421447:	sub    al,0x73
  421449:	sub    bl,ah
  42144b:	pop    ecx
  42144c:	adc    ebx,ebx
  42144e:	mov    al,ds:0x6c21d6c1
  421453:	inc    ecx
  421454:	sub    eax,0xb6c50bf9
  421459:	adc    ecx,ebp
  42145b:	retf   0x1212
  42145e:	enter  0x96b5,0x14
  421462:	je     0x42140f
  421464:	mov    eax,0xd170632b
  421469:	or     dl,BYTE PTR [eax-0xe]
  42146c:	mov    BYTE PTR [edi+0x27481c2a],ah
  421472:	(bad)  
  421473:	push   esp
  421474:	clc    
  421475:	mov    ebp,0xd54711e9
  42147a:	xchg   edx,eax
  42147b:	push   es
  42147c:	sbb    eax,0x86a959e7
  421481:	or     esp,DWORD PTR [edx+0x38249752]
  421487:	xlat   BYTE PTR ds:[ebx]
  421488:	mov    eax,ds:0xdbf0884f
  42148d:	mov    edx,0xd258c7d8
  421492:	mov    eax,DWORD PTR [esp+ebp*1+0x5e]
  421496:	jo     0x42144d
  421498:	out    dx,eax
  421499:	rcl    BYTE PTR [ebx],1
  42149b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42149c:	cli    
  42149d:	fild   WORD PTR [eax]
  42149f:	sub    ebp,ebx
  4214a1:	gs xchg ebx,eax
  4214a3:	call   0x8e2f00d3
  4214a8:	fs xor al,0x12
  4214ab:	pop    edx
  4214ac:	ja     0x42146c
  4214ae:	add    DWORD PTR [eax-0x73],esp
  4214b1:	in     eax,0xa
  4214b3:	xor    esi,0x1360b324
  4214b9:	or     BYTE PTR [ebp+0x2c3534a7],ch
  4214bf:	cmp    bh,BYTE PTR [esi]
  4214c1:	test   eax,0x60eabe30
  4214c6:	push   ds
  4214c7:	je     0x4214ed
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0x25cea338
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0xdda14086
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	dec    eax
  4217ea:	and    al,0x8f
  4217ec:	mov    dh,0x2e
  4217ee:	jp     0x4217ac
  4217f0:	mov    eax,ds:0x399963f4
  4217f5:	bound  edi,QWORD PTR [edx+0x7e]
  4217f8:	pop    ds
  4217f9:	push   cs
  4217fa:	sub    eax,0xf0a1bc7a
  4217ff:	arpl   WORD PTR [ecx+0x7e859d79],bx
  421805:	pop    ds
  421806:	mov    dh,0x2d
  421808:	jp     0x4217c6
  42180a:	mov    eax,ds:0x399963f0
  42180f:	popf   
  421810:	test   DWORD PTR [esi+0x1f],edi
  421813:	mov    dh,0x2d
  421815:	jp     0x4217d3
  421817:	mov    eax,ds:0x399963f0
  42181c:	popf   
  42181d:	test   DWORD PTR [esi+0x1f],edi
  421820:	mov    dh,0x2d
  421822:	jp     0x4217e0
  421824:	mov    eax,ds:0x39996308
  421829:	xchg   ebx,eax
  42182a:	call   0x7173:0x99b611c4
  421831:	or     BYTE PTR [eax+0x62],0xd5
  421835:	hlt    
  421836:	mov    esp,0xc57616d1
  42183b:	or     eax,0x97cece0a
  421840:	adc    eax,edi
  421842:	push   esp
  421843:	mov    ebp,0xd8711fe6
  421848:	inc    edx
  421849:	push   cs
  42184a:	pushf  
  42184b:	ret    
  42184c:	xchg   ebp,eax
  42184d:	inc    ebx
  42184e:	jmp    0x42189c
  421850:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421852:	pop    ss
  421853:	jno    0x4217eb
  421855:	imul   esi,DWORD PTR ds:0xc9d81ef,0x88b35cfd
  42185f:	jae    0x421876
  421861:	xchg   edx,eax
  421862:	sub    eax,0xf0a1bc7a
  421867:	arpl   WORD PTR [ecx+0x2779043e],bx
  42186d:	pop    esp
  42186e:	dec    esi
  42186f:	mov    edi,0x6259ff70
  421874:	imul   ebx,edx,0x268f0fc1
  42187a:	jp     0x421836
  42187c:	daa    
  42187d:	and    eax,0x3bfa3344
  421882:	cld    
  421883:	add    DWORD PTR [edi-0x437279b9],edx
  421889:	jne    0x4218aa
  42188b:	test   DWORD PTR [ebx+0x330b9b98],ebp
  421891:	mov    cl,0xb
  421893:	inc    edi
  421894:	adc    eax,0xb6e8d5f0
  421899:	jmp    0x42190b
  42189b:	jb     0x421830
  42189d:	jae    0x421904
  42189f:	pop    ss
  4218a0:	je     0x4218f7
  4218a2:	ss sub al,0x70
  4218a5:	in     al,0x59
  4218a7:	bound  ebp,QWORD PTR [ecx-0x26]
  4218aa:	ror    DWORD PTR [esi],0x8f
  4218ad:	push   esi
  4218ae:	out    0x24,al
  4218b0:	daa    
  4218b1:	lds    esp,FWORD PTR [ecx+eiz*1-0x6]
  4218b5:	cs popa 
  4218b7:	stos   DWORD PTR es:[edi],eax
  4218b8:	xchg   edi,eax
  4218b9:	fstp   QWORD PTR [ebx]
  4218bb:	and    bh,BYTE PTR [ebp+eiz*1-0x5754d17e]
  4218c2:	push   es
  4218c3:	xchg   ecx,eax
  4218c4:	xor    ebx,edi
  4218c6:	jge    0x4218b4
  4218c8:	adc    eax,0xb67548ee
  4218cd:	jecxz  0x4218d7
  4218cf:	icebp  
  4218d0:	xchg   ebx,eax
  4218d1:	imul   esi,esp,0xffffffe6
  4218d4:	push   ss
  4218d5:	pop    esp
  4218d6:	dec    esi
  4218d7:	mov    edi,0xf0a1bc70
  4218dc:	arpl   WORD PTR [ecx+0x2e859d39],bx
  4218e2:	pop    edx
  4218e3:	mov    dh,0x2d
  4218e5:	ss mov ebp,0x49c3f0a3
  4218eb:	push   edx
  4218ec:	rol    BYTE PTR [ebp+0x2db61f7e],cl
  4218f2:	jp     0x4218b0
  4218f4:	mov    eax,ds:0x389a6310
  4218f9:	xchg   esi,eax
  4218fa:	test   BYTE PTR [edi+ebx*1-0x4a],dh
  4218fe:	ret    
  4218ff:	jle    0x4218bd
  421901:	mov    eax,ds:0x3999654c
  421906:	popf   
  421907:	test   DWORD PTR [esi+0xe],edi
  42190a:	or     ebp,DWORD PTR ds:0xf0b1bc7a
  421910:	arpl   WORD PTR [ecx+0x7e859839],bx
  421916:	pop    ds
  421917:	imul   DWORD PTR ds:0xf0a1ac7a
  42191d:	arpl   WORD PTR [ebx+0x7e809d39],bx
  421923:	push   ds
  421924:	mov    dh,0x2d
  421926:	jp     0x4218e4
  421928:	mov    eax,ds:0x399863f5
  42192d:	popf   
  42192e:	test   DWORD PTR [esi+0x1f],edi
  421931:	mov    dh,0x7d
  421933:	jbe    0x4218f1
  421935:	mov    eax,ds:0x389963f4
  42193a:	jns    0x4218bc
  42193c:	jle    0x42195b
  42193e:	mov    dh,0x2d
  421940:	cli    
  421941:	mov    esp,0x9963e0a1
  421946:	sub    DWORD PTR [ebp-0x59e0817b],ebx
  42194c:	sub    eax,0xf0a1ac7a
  421951:	arpl   WORD PTR [ecx+0x7e959d39],bx
  421957:	pop    ds
  421958:	mov    dh,0x2d
  42195a:	jp     0x421918
  42195c:	mov    eax,ds:0x399963f0
  421961:	imul   edi,DWORD PTR [edx+esi*2+0x7a2edf1f],0x6800a1bc
  42196c:	cdq    
  42196d:	jbe    0x421943
  42196f:	test   DWORD PTR [esi+0x1f],edi
  421972:	mov    dh,0x2d
  421974:	jp     0x421932
  421976:	mov    eax,ds:0x399963f0
  42197b:	popf   
  42197c:	test   DWORD PTR [esi+0x1f],edi
  42197f:	mov    dh,0x2d
  421981:	jp     0x42193f
  421983:	mov    eax,ds:0x399963f0
  421988:	popf   
  421989:	test   DWORD PTR [esi+0x1f],edi
  42198c:	mov    dh,0x2d
  42198e:	jp     0x42194c
  421990:	mov    eax,ds:0x399963f0
  421995:	popf   
  421996:	test   DWORD PTR [esi+0x1f],edi
  421999:	mov    dh,0x2d
  42199b:	jp     0x421959
  42199d:	mov    eax,ds:0x399963f0
  4219a2:	popf   
  4219a3:	test   DWORD PTR [esi+0x1f],edi
  4219a6:	mov    dh,0x2d
  4219a8:	jp     0x421966
  4219aa:	mov    eax,ds:0x399963f0
  4219af:	popf   
  4219b0:	test   DWORD PTR [esi+0x1f],edi
  4219b3:	mov    dh,0x2d
  4219b5:	jp     0x421973
  4219b7:	mov    eax,ds:0x399963f0
  4219bc:	popf   
  4219bd:	test   DWORD PTR [esi+0x1f],edi
  4219c0:	mov    dh,0x2d
  4219c2:	jp     0x421980
  4219c4:	mov    eax,ds:0x399963f0
  4219c9:	popf   
  4219ca:	test   DWORD PTR [esi+0x1f],edi
  4219cd:	mov    dh,0x2d
  4219cf:	jp     0x42198d
  4219d1:	mov    eax,ds:0x399963f0
  4219d6:	popf   
  4219d7:	test   DWORD PTR [esi+0x31],edi
  4219da:	ret    0x248
  4219dd:	enter  0xf0a1,0x63
  4219e1:	cdq    
  4219e2:	fst    DWORD PTR [esi-0x49f0817b]
  4219e8:	sub    eax,0xf0a5687a
  4219ed:	arpl   WORD PTR [ebp+0x3bd59d39],bx
  4219f3:	pop    esp
  4219f4:	test   BYTE PTR [ecx+0x35],bh
  4219f7:	mov    esp,0x9963f0a1
  4219fc:	cmp    DWORD PTR [ebp-0x6700817b],edi
  421a02:	pop    edi
  421a03:	or     esi,ecx
  421a05:	ret    0x63f0
  421a08:	cdq    
  421a09:	cmp    ebp,edi
  421a0b:	test   DWORD PTR [esi+0x1f],edi
  421a0e:	inc    esi
  421a0f:	es jp  0x4219ce
  421a12:	sti    
  421a13:	lock arpl WORD PTR [ecx+0x7e8599e1],bx
  421a1a:	pop    ds
  421a1b:	mov    dh,0x2d
  421a1d:	jp     0x4219db
  421a1f:	mov    eax,ds:0x399963f0
  421a24:	popf   
  421a25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a26:	jle    0x421a47
  421a28:	push   esi
  421a29:	sub    eax,0xf0a1bc7a
  421a2e:	arpl   WORD PTR [ecx+0x7e859d39],bx
  421a34:	pop    ds
  421a35:	mov    dh,0x2d
  421a37:	jp     0x4219f5
  421a39:	mov    eax,ds:0x399963f0
  421a3e:	popf   
  421a3f:	test   DWORD PTR [esi+0x1f],edi
  421a42:	mov    dh,0x2d
  421a44:	jp     0x421a02
  421a46:	mov    eax,ds:0x399963f0
  421a4b:	popf   
  421a4c:	test   DWORD PTR [esi+0x1f],edi
  421a4f:	mov    dh,0x2d
  421a51:	jp     0x421a0f
  421a53:	mov    eax,ds:0x399963f0
  421a58:	popf   
  421a59:	test   DWORD PTR [esi+0x1f],edi
  421a5c:	mov    dh,0x2d
  421a5e:	jp     0x421a1c
  421a60:	mov    eax,ds:0x399963f0
  421a65:	popf   
  421a66:	test   DWORD PTR [esi+0x1f],edi
  421a69:	mov    dh,0x2d
  421a6b:	jp     0x421a29
  421a6d:	mov    eax,ds:0x399963f0
  421a72:	popf   
  421a73:	test   DWORD PTR [esi+0x1f],edi
  421a76:	mov    dh,0x2d
  421a78:	jp     0x421a36
  421a7a:	mov    eax,ds:0x399963f0
  421a7f:	popf   
  421a80:	test   DWORD PTR [esi+0x1f],edi
  421a83:	mov    dh,0x2d
  421a85:	jp     0x421a43
  421a87:	mov    eax,ds:0x399963f0
  421a8c:	popf   
  421a8d:	test   DWORD PTR [esi+0x1f],edi
  421a90:	mov    dh,0x2d
  421a92:	jp     0x421a50
  421a94:	mov    eax,ds:0x399963f0
  421a99:	popf   
  421a9a:	test   DWORD PTR [esi+0x1f],edi
  421a9d:	mov    dh,0x2d
  421a9f:	jp     0x421a5d
  421aa1:	mov    eax,ds:0x399963f0
  421aa6:	popf   
  421aa7:	test   DWORD PTR [esi+0x1f],edi
  421aaa:	mov    dh,0x2d
  421aac:	jp     0x421a6a
  421aae:	mov    eax,ds:0x399963f0
  421ab3:	popf   
  421ab4:	test   DWORD PTR [esi+0x1f],edi
  421ab7:	mov    dh,0x2d
  421ab9:	jp     0x421a77
  421abb:	mov    eax,ds:0x399963f0
  421ac0:	popf   
  421ac1:	test   DWORD PTR [esi+0x1f],edi
  421ac4:	mov    dh,0x2d
  421ac6:	jp     0x421a84
  421ac8:	mov    eax,ds:0x399963f0
  421acd:	popf   
  421ace:	test   DWORD PTR [esi+0x1f],edi
  421ad1:	mov    dh,0x2d
  421ad3:	jp     0x421a91
  421ad5:	mov    eax,ds:0x399963f0
  421ada:	popf   
  421adb:	test   DWORD PTR [esi+0x1f],edi
  421ade:	mov    dh,0x2d
  421ae0:	jp     0x421a9e
  421ae2:	mov    eax,ds:0x399963f0
  421ae7:	popf   
  421ae8:	test   DWORD PTR [esi+0x1f],edi
  421aeb:	mov    dh,0x2d
  421aed:	jp     0x421aab
  421aef:	mov    eax,ds:0x399963f0
  421af4:	popf   
  421af5:	test   DWORD PTR [esi+0x1f],edi
  421af8:	mov    dh,0x2d
  421afa:	jp     0x421ab8
  421afc:	mov    eax,ds:0x399963f0
  421b01:	popf   
  421b02:	test   DWORD PTR [esi+0x1f],edi
  421b05:	mov    dh,0x2d
  421b07:	jp     0x421ac5
  421b09:	mov    eax,ds:0x399963f0
  421b0e:	popf   
  421b0f:	test   DWORD PTR [esi+0x1f],edi
  421b12:	mov    dh,0x2d
  421b14:	jp     0x421ad2
  421b16:	mov    eax,ds:0x399963f0
  421b1b:	popf   
  421b1c:	test   DWORD PTR [esi+0x1f],edi
  421b1f:	mov    dh,0x2d
  421b21:	jp     0x421adf
  421b23:	mov    eax,ds:0x399963f0
  421b28:	popf   
  421b29:	test   DWORD PTR [esi+0x1f],edi
  421b2c:	mov    dh,0x2d
  421b2e:	jp     0x421aec
  421b30:	mov    eax,ds:0x399963f0
  421b35:	popf   
  421b36:	test   DWORD PTR [esi+0x1f],edi
  421b39:	mov    dh,0x2d
  421b3b:	jp     0x421af9
  421b3d:	mov    eax,ds:0x399963f0
  421b42:	popf   
  421b43:	test   DWORD PTR [esi+0x1f],edi
  421b46:	mov    dh,0x2d
  421b48:	jp     0x421b06
  421b4a:	mov    eax,ds:0x399963f0
  421b4f:	popf   
  421b50:	test   DWORD PTR [esi+0x1f],edi
  421b53:	mov    dh,0x2d
  421b55:	jp     0x421b13
  421b57:	mov    eax,ds:0x399963f0
  421b5c:	popf   
  421b5d:	test   DWORD PTR [esi+0x1f],edi
  421b60:	mov    dh,0x2d
  421b62:	jp     0x421b20
  421b64:	mov    eax,ds:0x399963f0
  421b69:	popf   
  421b6a:	test   DWORD PTR [esi+0x1f],edi
  421b6d:	mov    dh,0x2d
  421b6f:	jp     0x421b2d
  421b71:	mov    eax,ds:0x399963f0
  421b76:	popf   
  421b77:	test   DWORD PTR [esi+0x1f],edi
  421b7a:	mov    dh,0x2d
  421b7c:	jp     0x421b3a
  421b7e:	mov    eax,ds:0x399963f0
  421b83:	popf   
  421b84:	test   DWORD PTR [esi+0x1f],edi
  421b87:	mov    dh,0x2d
  421b89:	jp     0x421b47
  421b8b:	mov    eax,ds:0x399963f0
  421b90:	popf   
  421b91:	test   DWORD PTR [esi+0x1f],edi
  421b94:	mov    dh,0x2d
  421b96:	jp     0x421b54
  421b98:	mov    eax,ds:0x399963f0
  421b9d:	popf   
  421b9e:	test   DWORD PTR [esi+0x1f],edi
  421ba1:	mov    dh,0x2d
  421ba3:	jp     0x421b61
  421ba5:	mov    eax,ds:0x399963f0
  421baa:	popf   
  421bab:	test   DWORD PTR [esi+0x1f],edi
  421bae:	mov    dh,0x2d
  421bb0:	jp     0x421b6e
  421bb2:	mov    eax,ds:0x399963f0
  421bb7:	popf   
  421bb8:	test   DWORD PTR [esi+0x1f],edi
  421bbb:	mov    dh,0x2d
  421bbd:	jp     0x421b7b
  421bbf:	mov    eax,ds:0x399963f0
  421bc4:	popf   
  421bc5:	test   DWORD PTR [esi+0x1f],edi
  421bc8:	mov    dh,0x2d
  421bca:	jp     0x421b88
  421bcc:	mov    eax,ds:0x399963f0
  421bd1:	popf   
  421bd2:	test   DWORD PTR [esi+0x1f],edi
  421bd5:	mov    dh,0x2d
  421bd7:	jp     0x421b95
  421bd9:	mov    eax,ds:0x399963f0
  421bde:	popf   
  421bdf:	test   DWORD PTR [esi+0x1f],edi
  421be2:	mov    dh,0x2d
  421be4:	jp     0x421ba2
  421be6:	mov    eax,ds:0x91f663f0
  421beb:	xchg   esi,eax
  421bec:	test   DWORD PTR [ecx+0x1f],edx
  421bef:	mov    dh,0x3d
  421bf1:	jp     0x421baf
  421bf3:	mov    edx,DWORD PTR [edx-0x47]
  421bf6:	call   0xe0ea7e5a
  421bfb:	cwde   
  421bfc:	out    0xc0,al
  421bfe:	dec    esp
  421bff:	push   esp
  421c00:	mov    dl,0x44
  421c02:	idiv   bh
  421c04:	dec    eax
  421c05:	sbb    edi,ebx
  421c07:	ins    DWORD PTR es:[edi],dx
  421c08:	scas   al,BYTE PTR es:[edi]
  421c09:	add    DWORD PTR [ebx],edi
  421c0b:	pop    ss
  421c0c:	pop    eax
  421c0d:	sub    esi,DWORD PTR [ecx-0x5b]
  421c10:	mov    bh,0x5b
  421c12:	or     eax,0xf92c47ba
  421c17:	pushf  
  421c18:	ins    DWORD PTR es:[edi],dx
  421c19:	sahf   
  421c1a:	mov    eax,ds:0x6c11c4d7
  421c1f:	int3   
  421c20:	call   0xf0cd49fc
  421c25:	outs   dx,BYTE PTR ds:[esi]
  421c26:	or     eax,0xbdbdffc1
  421c2b:	adc    cl,0x56
  421c2e:	mov    ebx,0x70b34e30
  421c33:	push   ebx
  421c34:	(bad)
  421c37:	xchg   esi,eax
  421c38:	enter  0xa837,0x3b
  421c3c:	addr16 lock jl 0x421c79
  421c40:	jb     0x421c52
  421c42:	mov    dh,0x4a
  421c44:	in     al,0xa4
  421c46:	sbb    al,0xdf
  421c48:	pushf  
  421c49:	sbb    BYTE PTR [edx],al
  421c4b:	scas   eax,DWORD PTR es:[edi]
  421c4c:	dec    ecx
  421c4d:	xlat   BYTE PTR ds:[ebx]
  421c4e:	inc    ebp
  421c4f:	rcl    DWORD PTR [ebx+0x23fdb2f8],1
  421c55:	push   0x33
  421c57:	push   ecx
  421c58:	xchg   BYTE PTR [edx-0x9],dl
  421c5b:	inc    esi
  421c5c:	iret   
  421c5d:	ret    
  421c5e:	and    BYTE PTR [esi+0x2f],0x3f
  421c62:	cmp    BYTE PTR [ebx-0x6dc7fb33],ah
  421c68:	pop    esi
  421c69:	rcl    DWORD PTR [edx+0x55],0x8e
  421c6d:	xchg   edx,eax
  421c6e:	jmp    0x421c4c
  421c70:	inc    ecx
  421c71:	or     eax,DWORD PTR [eax]
  421c73:	jo     0x421c6e
  421c75:	gs sub dl,BYTE PTR gs:[esi]
  421c79:	or     bh,cl
  421c7b:	xchg   esi,eax
  421c7c:	or     bl,BYTE PTR [eax+0x3a266f9e]
  421c82:	sbb    al,0xdd
  421c84:	xchg   ecx,eax
  421c85:	xchg   ebx,eax
  421c86:	mov    ch,0xcc
  421c88:	popf   
  421c89:	int    0x19
  421c8b:	sbb    DWORD PTR [edi-0x76],esp
  421c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c8f:	sub    BYTE PTR [eax+0x2b15812c],dh
  421c95:	outs   dx,DWORD PTR ds:[esi]
  421c96:	(bad)  
  421c97:	gs call 0x76c0:0xcb338bbb
  421c9f:	mov    bl,0x3e
  421ca1:	call   0x88f1a994
  421ca6:	mov    edi,0xf95d77b9
  421cab:	jge    0x421cc8
  421cad:	sti    
  421cae:	inc    eax
  421caf:	xor    DWORD PTR [ebp-0x10],ebx
  421cb2:	sbb    edx,esi
  421cb4:	stos   DWORD PTR es:[edi],eax
  421cb5:	xor    ecx,DWORD PTR [ecx-0x52ba525a]
  421cbb:	mov    bh,bh
  421cbd:	inc    ebx
  421cbe:	jmp    0x1cd0877b
  421cc3:	mov    dl,0x7b
  421cc5:	into   
  421cc6:	and    al,0xae
  421cc8:	adc    eax,0x41f72386
  421ccd:	push   ebp
  421cce:	push   0x9d16b3f0
  421cd3:	jbe    0x421d3e
  421cd5:	ins    DWORD PTR es:[edi],dx
  421cd6:	or     eax,0xd9a7f40f
  421cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cdc:	pop    ebp
  421cdd:	adc    DWORD PTR [edx-0x1fe27f41],0x352397cf
  421ce7:	cmc    
  421ce8:	inc    ecx
  421ce9:	(bad)  
  421cea:	bnd jbe 0x421cfc
  421ced:	dec    esi
  421cee:	into   
  421cef:	cmp    DWORD PTR [ecx],esi
  421cf1:	clc    
  421cf2:	mov    ch,0xa8
  421cf4:	data16 mov bl,0x22
  421cf7:	loopne 0x421d29
  421cf9:	inc    ebp
  421cfa:	push   edi
  421cfb:	sahf   
  421cfc:	sub    al,0x26
  421cfe:	add    BYTE PTR [ebx-0x4c794214],bh
  421d04:	mov    ebp,0xa0a56043
  421d09:	loope  0x421cd3
  421d0b:	dec    ebx
  421d0c:	xchg   BYTE PTR [esi-0x52a8407],dh
  421d12:	daa    
  421d13:	xchg   edx,eax
  421d14:	push   cs
  421d15:	ss sbb bh,bh
  421d18:	mov    edx,0xf0d687de
  421d1d:	jp     0x421d43
  421d1f:	mov    cl,0x12
  421d21:	jle    0x421d3a
  421d23:	inc    edi
  421d24:	ret    0xae8f
  421d27:	dec    edi
  421d28:	mov    WORD PTR [ebx+0x72],gs
  421d2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d2c:	dec    edx
  421d2d:	xchg   edi,eax
  421d2e:	in     al,dx
  421d2f:	ja     0x421d82
  421d31:	mov    cl,0xab
  421d33:	dec    eax
  421d34:	push   bx
  421d36:	mov    ?,eax
  421d38:	or     eax,ecx
  421d3a:	out    dx,eax
  421d3b:	lock retf 
  421d3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d3e:	stos   BYTE PTR es:[edi],al
  421d3f:	add    edi,DWORD PTR [eax-0x73abdcd3]
  421d45:	or     DWORD PTR [ebx+0x592d86be],ebx
  421d4b:	leave  
  421d4c:	pop    edx
  421d4d:	cli    
  421d4e:	ins    DWORD PTR es:[edi],dx
  421d4f:	inc    ebp
  421d50:	jne    0x421d35
  421d52:	xor    esi,DWORD PTR [edi-0x64939e86]
  421d58:	or     DWORD PTR [ebp+0xd407036],edi
  421d5e:	or     eax,0x33ff4fc2
  421d63:	mov    edi,0x2135c859
  421d68:	ror    BYTE PTR [esi+edi*4+0x34d4f4c2],0xcd
  421d70:	adc    al,0x93
  421d72:	or     al,0xde
  421d74:	sub    dl,0x87
  421d77:	stos   DWORD PTR es:[edi],eax
  421d78:	mov    ch,0xa7
  421d7a:	ficom  WORD PTR [eax]
  421d7c:	es (bad) 
  421d7e:	in     eax,dx
  421d7f:	int    0x1
  421d81:	test   eax,0xb2e6327
  421d86:	test   eax,0x7f5e1180
  421d8b:	cdq    
  421d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d8d:	pop    es
  421d8e:	mov    ah,0x94
  421d90:	dec    esi
  421d91:	arpl   WORD PTR [esi-0x187ae064],dx
  421d97:	xor    ah,0x7
  421d9a:	jne    0x421df6
  421d9c:	rcr    BYTE PTR [esp+edi*8+0x2e],1
  421da0:	pop    esi
  421da1:	cdq    
  421da2:	ret    0xd5e3
  421da5:	dec    ebx
  421da6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421da7:	xor    eax,0x654c2462
  421dac:	stc    
  421dad:	scas   eax,DWORD PTR es:[edi]
  421dae:	or     al,0x6e
  421db0:	xor    DWORD PTR [edi-0x70c478e9],esp
  421db6:	into   
  421db7:	sub    eax,0x3426d52f
  421dbc:	mov    ch,0xb8
  421dbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dbf:	inc    esi
  421dc0:	or     BYTE PTR [ecx-0x77],bh
  421dc3:	ins    BYTE PTR es:[edi],dx
  421dc4:	call   0x4b5:0x4f3aec6c
  421dcb:	cmp    eax,0x75c4edf3
  421dd0:	pop    esi
  421dd1:	ja     0x421dd9
  421dd3:	fs sti 
  421dd5:	mov    ch,0x96
  421dd7:	sbb    BYTE PTR [esi-0x51784932],ah
  421ddd:	sbb    eax,0x6e69f661
  421de2:	and    DWORD PTR [ecx-0x7780ee20],0xffffff93
  421de9:	cmp    BYTE PTR [edx],0xe3
  421dec:	stos   DWORD PTR es:[edi],eax
  421ded:	(bad)  
  421dee:	sar    DWORD PTR [eax+0x1b],cl
  421df1:	adc    ebp,esi
  421df3:	mov    sp,0x9fb7
  421df7:	push   ebx
  421df8:	adc    BYTE PTR cs:[eax-0x13],cl
  421dfc:	cmp    eax,0xa4ffaa7c
  421e01:	pushf  
  421e02:	aam    0x3
  421e04:	jne    0x421db1
  421e06:	mov    al,0x33
  421e08:	sbb    eax,0x288b4ffb
  421e0d:	xor    cl,bl
  421e0f:	cmp    eax,DWORD PTR [edi-0xe588668]
  421e15:	xchg   ebp,eax
  421e16:	cmp    DWORD PTR [ebp+0x78],0x7a
  421e1a:	xchg   ecx,eax
  421e1b:	ficomp WORD PTR [esi+0x5d0f0003]
  421e21:	test   BYTE PTR [edi+0x5a27227f],bh
  421e27:	jmp    0x606e15c4
  421e2c:	mov    edx,0xe2b2e3a5
  421e31:	and    eax,0x414c244f
  421e36:	das    
  421e37:	not    BYTE PTR [edi]
  421e39:	push   0x8baeba42
  421e3e:	enter  0x1fd9,0xe9
  421e42:	pop    esp
  421e43:	es mov esp,0xea7b6fad
  421e49:	jge    0x421e47
  421e4b:	cmp    al,0x8
  421e4d:	or     DWORD PTR [edi],esi
  421e4f:	loopne 0x421eb4
  421e51:	and    dh,ch
  421e53:	aad    0x84
  421e55:	mov    bh,0x97
  421e57:	jmp    0x421e59
  421e59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e5a:	fisub  WORD PTR [esi+eiz*1-0x76]
  421e5e:	pusha  
  421e5f:	mov    ds:0xa6ec8454,eax
  421e64:	push   0x4696d1ac
  421e69:	outs   dx,DWORD PTR ds:[esi]
  421e6a:	adc    ah,BYTE PTR [ebx+0x4a]
  421e6d:	xchg   ecx,eax
  421e6e:	cmp    ch,BYTE PTR ds:0x2368ca75
  421e74:	sub    eax,0x79b2fe3f
  421e79:	add    bl,BYTE PTR [ecx-0x70]
  421e7c:	sub    al,0xde
  421e7e:	mov    ebx,0x2541d3b3
  421e83:	add    DWORD PTR [ebp-0x2cd230d],ecx
  421e89:	lock daa 
  421e8b:	mov    edi,0x30687e7c
  421e90:	(bad)  
  421e91:	call   0xd0f629b5
  421e96:	retf   
  421e97:	sub    ebp,edx
  421e99:	jmp    0x421e36
  421e9b:	xor    ah,bl
  421e9d:	ins    DWORD PTR es:[edi],dx
  421e9e:	push   esp
  421e9f:	xlat   BYTE PTR ds:[ebx]
  421ea0:	inc    edx
  421ea1:	outs   dx,BYTE PTR ds:[esi]
  421ea2:	xor    eax,DWORD PTR [edi]
  421ea4:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ea6:	iret   
  421ea7:	test   eax,0x9bf58692
  421eac:	or     bh,cl
  421eae:	dec    eax
  421eaf:	mov    ah,0x31
  421eb1:	int3   
  421eb2:	out    0x2e,al
  421eb4:	push   edi
  421eb5:	mov    esi,0xc265676
  421eba:	loope  0x421f05
  421ebc:	js     0x421e6b
  421ebe:	sbb    DWORD PTR [ebx+0x679d12e2],ecx
  421ec4:	xchg   edx,eax
  421ec5:	pop    esi
  421ec6:	test   DWORD PTR [ebx+0x5],esi
  421ec9:	mov    ds:0x7407db38,al
  421ece:	stc    
  421ecf:	xchg   esi,eax
  421ed0:	sahf   
  421ed1:	push   ss
  421ed2:	cs jp  0x421e7a
  421ed5:	sub    dl,BYTE PTR [edx+0x642a4543]
  421edb:	out    0x9b,eax
  421edd:	sti    
  421ede:	xchg   edi,eax
  421edf:	or     ebp,DWORD PTR [ebx+0x9]
  421ee2:	jae    0x421e82
  421ee4:	jmp    0x421f09
  421ee6:	push   0x3c0f4289
  421eeb:	ins    DWORD PTR es:[edi],dx
  421eec:	xchg   esi,eax
  421eed:	add    esi,ebx
  421eef:	lods   eax,DWORD PTR ds:[esi]
  421ef0:	addr16 mov ds:0x93d6,eax
  421ef4:	mov    edx,DWORD PTR [ecx-0x5f8cf2e2]
  421efa:	scas   al,BYTE PTR es:[edi]
  421efb:	ds push ecx
  421efd:	stc    
  421efe:	inc    DWORD PTR [ebx+0x372db8d9]
  421f04:	stos   DWORD PTR es:[edi],eax
  421f05:	lahf   
  421f06:	hlt    
  421f07:	or     DWORD PTR [ebx-0x76c643c1],esp
  421f0d:	xor    ebp,DWORD PTR [ebp-0x570629ff]
  421f13:	js     0x421f08
  421f15:	rcr    ebp,cl
  421f17:	add    eax,0xc8a37c34
  421f1c:	inc    BYTE PTR [ecx]
  421f1e:	push   edi
  421f1f:	jmp    0x421f74
  421f21:	ret    
  421f22:	nop
  421f23:	and    esi,DWORD PTR [ebx-0x1b9219a0]
  421f29:	frstpm(287 only) 
  421f2b:	inc    eax
  421f2c:	leave  
  421f2d:	cmp    BYTE PTR [eax+0x56],cl
  421f30:	mov    ebp,0x4d567db8
  421f35:	ins    DWORD PTR es:[edi],dx
  421f36:	and    DWORD PTR [ebp-0x7c],edi
  421f39:	ja     0x421edc
  421f3b:	or     DWORD PTR ds:0xd31b57e2,0xffffffb0
  421f42:	push   DWORD PTR [ecx+0x1a0bb1ee]
  421f48:	jecxz  0x421f65
  421f4a:	shl    BYTE PTR [edx+0x7a],cl
  421f4d:	dec    ecx
  421f4e:	push   ecx
  421f4f:	imul   edx,DWORD PTR [esi+0x48b6f8f],0x17
  421f56:	ins    DWORD PTR es:[edi],dx
  421f57:	fwait
  421f58:	repz add DWORD PTR [eax+0x46],ecx
  421f5c:	sub    DWORD PTR fs:[ebp-0x29],ebp
  421f60:	fld    QWORD PTR [ecx]
  421f62:	cmc    
  421f63:	shl    DWORD PTR [esi],0x55
  421f66:	or     eax,0x52b2c69f
  421f6b:	xor    al,0xc1
  421f6d:	aad    0xfc
  421f6f:	repnz imul edx,DWORD PTR [esi-0x63fda7c9],0x10ae1284
  421f7a:	xchg   ebx,eax
  421f7b:	(bad)  
  421f7c:	iret   
  421f7d:	ss ds xor dh,ah
  421f81:	jl     0x421f79
  421f83:	xor    eax,edi
  421f85:	fs jle 0x421f62
  421f88:	fisttp WORD PTR [ecx+0x707c458]
  421f8e:	in     al,dx
  421f8f:	xchg   al,dh
  421f91:	adc    edx,DWORD PTR [ebp+edi*1-0x42]
  421f95:	adc    ah,dh
  421f97:	mov    al,ds:0x325019f6
  421f9c:	xchg   BYTE PTR [esi-0x6bb117bf],al
  421fa2:	or     eax,0xa93e4ee9
  421fa7:	ss je  0x421f52
  421faa:	jmp    0xe2695170
  421faf:	xchg   BYTE PTR [ebx+0x4c],cl
  421fb2:	xchg   esi,eax
  421fb3:	ror    BYTE PTR [ebp-0x7b],0xae
  421fb7:	jmp    0xe763:0x85abaded
  421fbe:	(bad)  
  421fbf:	fisubr DWORD PTR [edi+0x66]
  421fc2:	ja     0x421fff
  421fc4:	and    dh,BYTE PTR [edi+0x60227399]
  421fca:	jmp    0x421fc9
  421fcc:	adc    ebx,DWORD PTR [ebp-0x7a]
  421fcf:	enter  0xe21,0x8a
  421fd3:	mov    al,BYTE PTR [esp+edi*1-0x14]
  421fd7:	mov    al,0x3e
  421fd9:	mov    esp,0x26d84695
  421fde:	adc    eax,0x5b7e4893
  421fe3:	push   edi
  421fe4:	sub    BYTE PTR [esi-0x4404424e],0xe7
  421feb:	jp     0x421fab
  421fed:	push   bx
  421fef:	sti    
  421ff0:	dec    esi
  421ff1:	and    eax,0xe4f420ef
  421ff6:	imul   cl
  421ff8:	mov    ds:0x6a4b4bf3,al
  421ffd:	sub    DWORD PTR [ebp+ebp*1-0x19b86fcc],0xffffffa7
  422005:	inc    ebp
  422006:	std    
  422007:	lahf   
  422008:	imul   eax,DWORD PTR [ebx-0x2d883e1c],0xd5b4662f
  422012:	pop    es
  422013:	add    dl,BYTE PTR [edi+0x10]
  422016:	nop
  422017:	xchg   edi,eax
  422018:	iret   
  422019:	outs   dx,BYTE PTR ds:[esi]
  42201a:	cmp    BYTE PTR [ecx+ecx*2-0x38],cl
  42201e:	sbb    eax,0x10623300
  422023:	sub    bh,dl
  422025:	and    al,0x29
  422027:	sbb    eax,0xf9ef3ee9
  42202c:	cmc    
  42202d:	pop    es
  42202e:	or     eax,0x44648225
  422033:	mov    dl,0x32
  422035:	rcr    BYTE PTR [esi-0x5],cl
  422038:	inc    eax
  422039:	xor    al,0xf3
  42203b:	sub    eax,0x91688ce7
  422040:	pop    edx
  422041:	loope  0x42208d
  422043:	xor    ebx,DWORD PTR [ebx+0x63833727]
  422049:	mov    dl,0xa9
  42204b:	lea    ebx,[esi-0x6d2c2b90]
  422051:	or     ah,BYTE PTR [ebx-0x41]
  422054:	push   cs
  422055:	xor    esi,esi
  422057:	push   edx
  422058:	adc    al,0xe1
  42205a:	fiadd  WORD PTR [edx+0x62f5bf61]
  422060:	jo     0x422027
  422062:	push   ebp
  422063:	mov    bl,0x3d
  422065:	mov    bl,0x54
  422067:	in     eax,0x39
  422069:	std    
  42206a:	dec    ecx
  42206b:	loop   0x4220b8
  42206d:	lea    esi,[edi]
  42206f:	call   0x2450dc8a
  422074:	pop    edi
  422075:	xor    BYTE PTR [ebp+0x56330acc],ah
  42207b:	inc    ebx
  42207c:	sahf   
  42207d:	in     al,dx
  42207e:	ret    
  42207f:	ins    BYTE PTR es:[edi],dx
  422080:	xor    BYTE PTR [eax+ecx*2+0x19],0xb0
  422085:	sub    al,0x50
  422087:	(bad)  
  422088:	jge    0x422077
  42208a:	cmp    BYTE PTR [esi+0xe],0xbf
  42208e:	enter  0xe378,0x9c
  422092:	xor    bh,bh
  422094:	(bad)  
  422095:	arpl   WORD PTR [esi+0x7b],ax
  422098:	dec    ebx
  422099:	cdq    
  42209a:	push   0xffffff9a
  42209c:	pushf  
  42209d:	jno    0x4220ef
  42209f:	xlat   BYTE PTR ds:[ebx]
  4220a0:	sbb    al,0x4f
  4220a2:	lea    esi,[esi+0x39]
  4220a5:	mov    edx,0x51d7e9e1
  4220aa:	jae    0x4220ff
  4220ac:	sbb    edi,ecx
  4220ae:	lods   eax,DWORD PTR ds:[esi]
  4220af:	sbb    eax,0xaabc805f
  4220b4:	sbb    al,0xae
  4220b6:	lock jmp 0xb4ad:0xc2e34882
  4220be:	jmp    0x422077
  4220c0:	push   0x177dbfbc
  4220c5:	test   eax,0x34cf5683
  4220ca:	and    esp,DWORD PTR [ebx+0x4c9cee7d]
  4220d0:	stc    
  4220d1:	xchg   bh,bl
  4220d3:	adc    al,0xf5
  4220d5:	js     0x4220ec
  4220d7:	xor    DWORD PTR [edi],ebp
  4220d9:	mov    cl,0x77
  4220db:	outs   dx,DWORD PTR ds:[esi]
  4220dc:	ret    
  4220dd:	imul   ebp,DWORD PTR [ebx+ecx*2],0x58
  4220e1:	lock inc edx
  4220e3:	adc    ebp,DWORD PTR [eax-0x2acab0c]
  4220e9:	sbb    ah,BYTE PTR [eax-0x35]
  4220ec:	mov    edx,0x5cee1483
  4220f1:	je     0x42208e
  4220f3:	mov    ch,0x63
  4220f5:	push   esi
  4220f6:	in     eax,0xa9
  4220f8:	push   ds
  4220f9:	test   eax,0x3c766957
  4220fe:	or     eax,0xbc71da1d
  422103:	push   cs
  422104:	(bad)  [edi+0x56]
  422107:	(bad)  
  422108:	aaa    
  422109:	ja     0x42215b
  42210b:	outs   dx,DWORD PTR ds:[esi]
  42210c:	inc    edi
  42210d:	mov    esi,0x6efb8ed3
  422112:	jns    0x4220a5
  422114:	lods   al,BYTE PTR ds:[esi]
  422115:	xor    esp,edx
  422117:	xor    al,al
  422119:	jp     0x42212f
  42211b:	jb     0x42216f
  42211d:	les    esp,FWORD PTR [eax+0x72]
  422120:	mov    ch,0x23
  422122:	and    esi,edx
  422124:	pop    ss
  422125:	mov    DWORD PTR [esi+eax*4+0x52a96234],ebx
  42212c:	iret   
  42212d:	mov    bl,0xfc
  42212f:	pop    es
  422130:	sahf   
  422131:	xchg   BYTE PTR [bx+di-0x53],dl
  422135:	mov    ebx,0xa9bbdc7d
  42213a:	jmp    0x36688558
  42213f:	mov    esi,ebp
  422141:	xor    eax,0x90402e13
  422146:	pop    ds
  422147:	pop    es
  422148:	jnp    0x4220df
  42214a:	xchg   esi,eax
  42214b:	scas   al,BYTE PTR es:[edi]
  42214c:	enter  0xe476,0x83
  422150:	call   0xc50b421b
  422155:	sbb    ah,BYTE PTR [ebp+0x5a]
  422158:	loop   0x422185
  42215a:	fsubrp st(3),st
  42215c:	dec    ebp
  42215d:	ret    0x3694
  422160:	jne    0x422139
  422162:	leave  
  422163:	adc    al,0xb3
  422165:	std    
  422166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422167:	lock ret 
  422169:	jp     0x422182
  42216b:	fwait
  42216c:	retf   
  42216d:	mov    ds:0xc3e3353f,eax
  422172:	dec    ecx
  422173:	jo     0x4220fd
  422175:	cmp    eax,0xc0ba7f85
  42217a:	cdq    
  42217b:	mov    ecx,0xb74f8c0c
  422180:	mov    es,WORD PTR [ebx+0x9]
  422183:	push   0xf1ab60dc
  422188:	add    ebp,edi
  42218a:	or     al,0x97
  42218c:	mov    eax,DWORD PTR [ebx]
  42218e:	jge    0x422172
  422190:	pop    ds
  422191:	stc    
  422192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422193:	xor    DWORD PTR [eax],eax
  422195:	or     al,0x21
  422197:	jae    0x4221d8
  422199:	pop    es
  42219a:	inc    esp
  42219b:	(bad)  
  42219c:	push   edi
  42219d:	jle    0x42215f
  42219f:	enter  0x351f,0xc5
  4221a3:	push   ecx
  4221a4:	pop    eax
  4221a5:	iret   
  4221a6:	push   es
  4221a7:	sub    eax,0xff697ee4
  4221ac:	jae    0x42218c
  4221ae:	mov    edx,0x20c159cf
  4221b3:	sar    BYTE PTR [edi],1
  4221b5:	lahf   
  4221b6:	cli    
  4221b7:	jne    0x4221f7
  4221b9:	push   0xfd5adc4b
  4221be:	outs   dx,BYTE PTR ds:[esi]
  4221bf:	ror    DWORD PTR [esi+0x514afb0b],cl
  4221c5:	inc    edx
  4221c6:	and    DWORD PTR [eax+0x355a18b9],edi
  4221cc:	jo     0x422241
  4221ce:	lods   al,BYTE PTR ds:[esi]
  4221cf:	cmp    DWORD PTR [esp+esi*4-0x7c],0xe9334106
  4221d7:	aam    0x9c
  4221d9:	cmc    
  4221da:	fwait
  4221db:	jmp    0x9e89:0x66d275e4
  4221e2:	lds    eax,FWORD PTR ds:0x3c5e3ed5
  4221e8:	retf   0xb70c
  4221eb:	xchg   bl,ch
  4221ed:	mov    esp,ebx
  4221ef:	repnz stos BYTE PTR es:[edi],al
  4221f1:	neg    DWORD PTR ds:0x595d343d
  4221f7:	hlt    
  4221f8:	mov    ch,0x63
  4221fa:	mov    cl,0x2f
  4221fc:	(bad)  
  4221fd:	xchg   ebx,eax
  4221fe:	or     BYTE PTR [ebx],bl
  422200:	in     al,dx
  422201:	mov    ebx,0x2fc73b35
  422206:	sbb    BYTE PTR [ebx],bh
  422208:	popf   
  422209:	push   edx
  42220a:	inc    edi
  42220b:	and    eax,0xc39efd4b
  422210:	inc    eax
  422211:	and    eax,0x386b9e40
  422216:	cmc    
  422217:	ror    DWORD PTR [ecx+0x0],0x4f
  42221b:	fs adc eax,0xf60ebac0
  422221:	adc    dh,BYTE PTR [edi]
  422223:	out    dx,al
  422224:	pop    eax
  422225:	clc    
  422226:	ror    BYTE PTR [esi-0x2d203551],0xd8
  42222d:	test   DWORD PTR gs:[eax],esi
  422230:	and    ah,BYTE PTR [ecx-0x2d]
  422233:	dec    eax
  422234:	mov    ds:0xc9345931,al
  422239:	or     al,0x6c
  42223b:	push   ss
  42223c:	or     bl,BYTE PTR [ebx]
  42223e:	scas   al,BYTE PTR es:[edi]
  42223f:	jmp    0xcf05:0xc3dfa74
  422246:	jne    0x422284
  422248:	div    BYTE PTR [edx]
  42224a:	int3   
  42224b:	inc    eax
  42224c:	cmc    
  42224d:	push   edi
  42224e:	xchg   esi,eax
  42224f:	(bad)
  422252:	popf   
  422253:	xchg   esi,esi
  422255:	add    al,0x24
  422257:	lock push esp
  422259:	jne    0x4222b7
  42225b:	xchg   esp,eax
  42225c:	ret    0x5ff
  42225f:	mov    al,0x1f
  422261:	das    
  422262:	stos   BYTE PTR es:[edi],al
  422263:	adc    esi,DWORD PTR [edx+0x5ed390b5]
  422269:	int3   
  42226a:	aam    0xcc
  42226c:	cmc    
  42226d:	sub    bh,BYTE PTR ds:0xb84c8e6b
  422273:	outs   dx,DWORD PTR ds:[esi]
  422274:	xacquire xchg DWORD PTR [ebp+0x39e22a62],ebx
  42227b:	(bad)  
  42227c:	adc    edi,DWORD PTR [ebx+0x32]
  42227f:	inc    edx
  422280:	pop    edi
  422281:	in     eax,0x84
  422283:	adc    al,0xde
  422285:	jge    0x4222c2
  422287:	in     eax,0x33
  422289:	in     eax,0xc
  42228b:	icebp  
  42228c:	popa   
  42228d:	sub    eax,0xa36d13b4
  422292:	mov    ch,0x73
  422294:	sbb    dl,ah
  422296:	aad    0xad
  422298:	adc    DWORD PTR [ebp-0x5],esi
  42229b:	das    
  42229c:	ins    DWORD PTR es:[edi],dx
  42229d:	mov    dh,dh
  42229f:	push   es
  4222a0:	jle    0x422272
  4222a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222a3:	(bad)  
  4222a4:	jae    0x422226
  4222a6:	sub    BYTE PTR [esi+0x26],cl
  4222a9:	out    0x1f,eax
  4222ab:	jge    0x42222e
  4222ad:	sar    DWORD PTR [ecx-0x11],cl
  4222b0:	ds repnz jecxz 0x42226d
  4222b4:	lods   al,BYTE PTR ds:[esi]
  4222b5:	iret   
  4222b6:	int    0x6
  4222b8:	iret   
  4222b9:	fst    st(6)
  4222bc:	pop    edx
  4222bd:	fwait
  4222be:	ds inc esp
  4222c0:	add    esp,DWORD PTR [ebx+0x72e746e6]
  4222c6:	inc    ecx
  4222c7:	add    al,0xf2
  4222c9:	daa    
  4222ca:	mov    dl,0x19
  4222cc:	in     eax,0x76
  4222ce:	ss dec esp
  4222d0:	mov    bl,0x87
  4222d2:	ja     0x42232f
  4222d4:	(bad)  
  4222d5:	jo     0x4222fc
  4222d7:	pushf  
  4222d8:	mov    edi,0x1fe2f6e
  4222dd:	jb     0x422281
  4222df:	int    0x5a
  4222e1:	jecxz  0x4222c5
  4222e3:	inc    esi
  4222e4:	in     eax,0xba
  4222e6:	push   edi
  4222e7:	xor    eax,0x6783f30
  4222ec:	mov    BYTE PTR [esi],bh
  4222ee:	or     eax,0x471fa86a
  4222f3:	xor    eax,ecx
  4222f5:	(bad)  
  4222f6:	xchg   esi,eax
  4222f7:	cmp    DWORD PTR [esi+0x5db77721],ecx
  4222fd:	or     eax,0x81f30f26
  422302:	pop    eax
  422303:	dec    edx
  422304:	cld    
  422305:	push   edx
  422306:	cmp    dh,BYTE PTR [ebp-0x15]
  422309:	sbb    DWORD PTR [edx],0x847c1383
  42230f:	aas    
  422310:	mov    al,ds:0x5fabf17b
  422315:	dec    ebp
  422316:	ds cmp al,bh
  422319:	xlat   BYTE PTR ds:[ebx]
  42231a:	push   ds
  42231b:	jmp    0xa6e99bb8
  422320:	aaa    
  422321:	adc    BYTE PTR [ecx-0x65ab940],al
  422327:	sbb    DWORD PTR [ebp+0x43],ecx
  42232a:	pushf  
  42232b:	adc    DWORD PTR [edi+0x53],0xa4a2ce72
  422332:	mov    ch,BYTE PTR [edi+0x59c81126]
  422338:	sbb    eax,0x50e483c4
  42233d:	jnp    0x4222fe
  42233f:	jbe    0x4222f6
  422341:	stos   BYTE PTR es:[edi],al
  422342:	dec    ebp
  422343:	nop
  422344:	inc    ebx
  422345:	push   eax
  422346:	mov    cl,0x9f
  422348:	ficomp DWORD PTR [eax+0x4b]
  42234b:	mov    al,0x67
  42234d:	ret    
  42234e:	mov    DWORD PTR [edx+eiz*8],esi
  422351:	pop    ebp
  422352:	(bad)  
  422353:	cdq    
  422354:	retf   0x2fb
  422357:	pop    eax
  422358:	mov    bl,0x7f
  42235a:	jae    0x42233a
  42235c:	ss dec ebp
  42235e:	fnstsw WORD PTR [edx-0x65]
  422361:	sub    al,0x4a
  422363:	sahf   
  422364:	rol    DWORD PTR [edi],0xf
  422367:	dec    esp
  422368:	jb     0x42233d
  42236a:	mov    ?,WORD PTR [edi+0x8d58d4d]
  422370:	dec    edx
  422371:	sbb    edi,DWORD PTR fs:[eax+0x3fd90ed1]
  422378:	int3   
  422379:	sub    ah,cl
  42237b:	repz mov esp,0x77fdce88
  422381:	in     al,0x42
  422383:	add    DWORD PTR [ebx-0x242f9625],edi
  422389:	mov    esi,0x60f9aa14
  42238e:	data16 scas al,BYTE PTR es:[edi]
  422390:	or     DWORD PTR [esi],esp
  422392:	mov    eax,ds:0x67934243
  422397:	popf   
  422398:	call   0xf910a36a
  42239d:	add    eax,ebx
  42239f:	scas   eax,DWORD PTR es:[edi]
  4223a0:	sbb    DWORD PTR [eax+0x5],0xe3fc10ea
  4223a7:	stos   DWORD PTR es:[edi],eax
  4223a8:	inc    ecx
  4223a9:	(bad)  
  4223ab:	pop    ds
  4223ac:	mov    BYTE PTR [ebx-0x7547362b],ch
  4223b2:	jnp    0x4223d4
  4223b4:	int    0xdc
  4223b6:	add    al,0xe3
  4223b8:	ret    0xa265
  4223bb:	sbb    ch,BYTE PTR [eax-0x17febc0a]
  4223c1:	dec    esp
  4223c2:	lods   al,BYTE PTR ds:[esi]
  4223c3:	popf   
  4223c4:	cli    
  4223c5:	inc    ecx
  4223c6:	xchg   ebx,eax
  4223c7:	neg    BYTE PTR [ecx+ebx*8+0x66ef4fa1]
  4223ce:	sub    bh,dh
  4223d0:	retf   
  4223d1:	sahf   
  4223d2:	int    0x1
  4223d4:	fwait
  4223d5:	int3   
  4223d6:	lahf   
  4223d7:	xchg   edi,eax
  4223d8:	bnd repz call 0xf6faaafe
  4223df:	sub    DWORD PTR [edi],edx
  4223e1:	sbb    eax,0xf363b106
  4223e6:	cmp    DWORD PTR [edx-0x45],edx
  4223e9:	sbb    dh,al
  4223eb:	mov    esi,0x9423ca27
  4223f0:	shl    esi,cl
  4223f2:	in     al,0x3a
  4223f4:	mov    bh,0x50
  4223f6:	lods   eax,DWORD PTR ds:[esi]
  4223f7:	pop    ds
  4223f8:	jae    0x4223b2
  4223fa:	and    dl,BYTE PTR [ebx-0x22]
  4223fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223fe:	add    dh,BYTE PTR [esi+0x316d3735]
  422404:	(bad)  
  422405:	and    al,0x0
  422407:	stos   DWORD PTR es:[edi],eax
  422408:	or     al,0x7b
  42240a:	shl    BYTE PTR [ecx+0x68],0x15
  42240e:	or     DWORD PTR [edx-0x287f0c2e],0x3358af0e
  422418:	dec    eax
  422419:	mov    WORD PTR [esi],?
  42241b:	xchg   esp,eax
  42241c:	sub    al,0x95
  42241e:	cmp    BYTE PTR [ebx+0x6008dee],al
  422424:	ffree  st(6)
  422426:	dec    edx
  422427:	push   ebx
  422428:	ins    DWORD PTR es:[edi],dx
  422429:	call   0x35fb:0x2e0ab16d
  422430:	cmp    cl,BYTE PTR [edx+ebx*8-0x9383460]
  422437:	arpl   WORD PTR [edi+0x77635b57],sp
  42243d:	shl    DWORD PTR [eax-0x17105547],0xf
  422444:	ficom  DWORD PTR [ebx-0x5c]
  422447:	add    dl,BYTE PTR [eax+ebp*4]
  42244a:	fmulp  st(4),st
  42244c:	mov    edi,0x2288d151
  422451:	inc    eax
  422452:	test   DWORD PTR [ecx+0x60],ebp
  422455:	rcl    BYTE PTR [ebx],0x95
  422458:	pop    esi
  422459:	sbb    ch,ch
  42245b:	mov    esp,0x2ed7cda
  422460:	pop    esp
  422461:	test   esi,ebp
  422463:	jnp    0x422428
  422465:	and    BYTE PTR [eax-0x54],ch
  422468:	and    BYTE PTR [edx],bh
  42246a:	dec    esi
  42246b:	push   ss
  42246c:	scas   eax,DWORD PTR es:[edi]
  42246d:	pusha  
  42246e:	mov    esi,0x8ae49a79
  422473:	xor    edx,ebx
  422475:	popa   
  422476:	jp     0x422449
  422478:	push   eax
  422479:	sahf   
  42247a:	adc    DWORD PTR [eax+esi*4+0x69],ebp
  42247e:	aaa    
  42247f:	popf   
  422480:	jl     0x422417
  422482:	test   eax,0x62a62cfd
  422487:	pop    ebp
  422488:	add    BYTE PTR [edx+0x3a2071c2],0x29
  42248f:	cmc    
  422490:	fs (bad) 
  422493:	xchg   esi,eax
  422494:	call   0xbea6afd9
  422499:	pop    edi
  42249a:	dec    ecx
  42249b:	in     al,0x91
  42249d:	and    BYTE PTR [ebx-0x41],dh
  4224a0:	out    0x4e,eax
  4224a2:	mov    eax,0xee2444b9
  4224a7:	push   ecx
  4224a8:	ins    DWORD PTR es:[edi],dx
  4224a9:	fsub   st(4),st
  4224ab:	fmulp  st(4),st
  4224ad:	aad    0xce
  4224af:	jo     0x42249d
  4224b1:	sbb    BYTE PTR [eax+ebp*1-0x2fb7bf61],ah
  4224b8:	cmp    al,0x1c
  4224ba:	stc    
  4224bb:	das    
  4224bc:	je     0x42249c
  4224be:	es mov bl,ch
  4224c1:	cwde   
  4224c2:	xchg   BYTE PTR [edi],ah
  4224c4:	rol    al,1
  4224c6:	adc    bh,BYTE PTR [ecx]
  4224c8:	xchg   ebx,eax
  4224c9:	mov    esi,0x9a989269
  4224ce:	xor    al,0x2
  4224d0:	mov    esi,0xc95a5923
  4224d5:	adc    BYTE PTR [ebp+0x62],al
  4224d8:	xchg   edx,eax
  4224d9:	dec    ecx
  4224da:	add    BYTE PTR [ecx-0x2f],ah
  4224dd:	push   eax
  4224de:	sub    al,0x5
  4224e0:	cdq    
  4224e1:	add    al,0xc9
  4224e3:	xchg   BYTE PTR [esi],cl
  4224e5:	outs   dx,BYTE PTR ds:[esi]
  4224e6:	out    0xe9,al
  4224e8:	mov    bx,0xf7b2
  4224ec:	es push ecx
  4224ee:	mov    edi,DWORD PTR [esi+0x1dc05972]
  4224f4:	js     0x4224cb
  4224f6:	cmp    eax,0xafcad624
  4224fb:	mov    WORD PTR [edx-0x38819536],es
  422501:	jg     0x42252a
  422503:	xchg   BYTE PTR [ecx-0x4169dfd3],ch
  422509:	sub    ebx,DWORD PTR fs:[ebx-0x3c1d56c]
  422510:	xchg   edx,eax
  422511:	arpl   dx,cx
  422513:	test   eax,0x343fa185
  422518:	repnz sub BYTE PTR [edx+eax*8+0x11],cl
  42251d:	push   ebx
  42251e:	hlt    
  42251f:	mov    edi,0xc45406f1
  422524:	(bad)  ds:0xfc3ee7f8
  42252a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42252b:	xchg   edx,eax
  42252c:	xor    edx,DWORD PTR [ebx]
  42252e:	and    cl,al
  422530:	xchg   ecx,eax
  422531:	sub    ah,BYTE PTR [eax+0x5ad6ca0f]
  422537:	sbb    bl,BYTE PTR [edx]
  422539:	scas   al,BYTE PTR es:[edi]
  42253a:	pop    esp
  42253b:	(bad)  [ebx]
  42253d:	sbb    DWORD PTR [ebp-0x7a],ebx
  422540:	imul   esp,eax,0xd060983d
  422546:	push   eax
  422547:	and    eax,0xf6882592
  42254c:	int    0x7e
  42254e:	sbb    edi,DWORD PTR [ebx]
  422550:	jno    0x4224f8
  422552:	scas   al,BYTE PTR es:[edi]
  422553:	xchg   ecx,eax
  422554:	and    ecx,ebp
  422556:	rcl    DWORD PTR [esi-0x39],0xef
  42255a:	add    DWORD PTR [ebp+0x56],esi
  42255d:	inc    ecx
  42255e:	fdiv   QWORD PTR [ebx]
  422560:	and    BYTE PTR [ecx-0x2de156ea],bh
  422566:	call   0x6d4eebf6
  42256b:	ins    BYTE PTR es:[edi],dx
  42256c:	jge    0x42250f
  42256e:	xchg   ebx,eax
  42256f:	jae    0x4225a8
  422571:	jno    0x422587
  422573:	dec    esp
  422574:	jnp    0x422561
  422576:	dec    ecx
  422577:	fnstsw WORD PTR [ecx+0x15]
  42257a:	xor    BYTE PTR [edi+0x5b],ah
  42257d:	out    0x43,al
  42257f:	pop    edx
  422580:	mov    esp,0x2faa810f
  422585:	dec    ebp
  422586:	sbb    eax,0xc9f6192b
  42258b:	xor    eax,DWORD PTR [ebp+0x7b]
  42258e:	icebp  
  42258f:	outs   dx,BYTE PTR ds:[esi]
  422590:	repz lea esi,[ebx]
  422593:	(bad)  
  422595:	xor    esp,esi
  422597:	mov    eax,ds:0xf90b3527
  42259c:	mov    DWORD PTR [eax],ecx
  42259e:	das    
  42259f:	outs   dx,DWORD PTR ds:[esi]
  4225a0:	add    BYTE PTR [esi],bl
  4225a2:	in     al,dx
  4225a3:	in     al,0x9a
  4225a5:	mov    esp,0xf74e512d
  4225aa:	dec    esp
  4225ab:	mov    ds:0x452f9c58,eax
  4225b0:	mov    esp,0x27828365
  4225b5:	adc    ebp,DWORD PTR [esi]
  4225b7:	pop    ebp
  4225b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225b9:	fs xchg edi,eax
  4225bb:	sub    ah,al
  4225bd:	sub    eax,0x9804e6e8
  4225c2:	int    0x6a
  4225c4:	not    DWORD PTR [edx-0x4c]
  4225c7:	lahf   
  4225c8:	hlt    
  4225c9:	jae    0x422631
  4225cb:	dec    esp
  4225cc:	or     BYTE PTR ss:0x6a6e6275,ah
  4225d3:	xor    cl,BYTE PTR [edx+eiz*4+0x4da9a47d]
  4225da:	sub    al,0x54
  4225dc:	ror    DWORD PTR [ecx-0x63],cl
  4225df:	rol    ah,cl
  4225e1:	(bad)  
  4225e2:	(bad)  
  4225e3:	or     ebx,DWORD PTR [edx+0x7e316c57]
  4225e9:	ja     0x422572
  4225eb:	mov    ds:0x29b04d11,eax
  4225f0:	sbb    ch,dl
  4225f2:	mov    es,WORD PTR [edx]
  4225f4:	cdq    
  4225f5:	mov    eax,ds:0x1a54c1e
  4225fa:	sbb    eax,DWORD PTR [esi+0x5c55f1e6]
  422600:	sub    DWORD PTR cs:[esi-0x26],ebp
  422604:	arpl   di,ax
  422606:	hlt    
  422607:	(bad)  
  422608:	mov    bl,0x91
  42260a:	fld    QWORD PTR [edx+0x32f5e300]
  422610:	data16 aaa 
  422612:	dec    edi
  422613:	xor    esi,ecx
  422615:	pop    edi
  422616:	and    eax,0xe7dd6b93
  42261b:	cmp    DWORD PTR [eax+0x55],0xffffffd9
  42261f:	imul   eax,DWORD PTR [edx-0x1fead651],0xffffffe4
  422626:	inc    edi
  422627:	arpl   WORD PTR [ecx],bp
  422629:	iret   
  42262a:	and    DWORD PTR [edx],0x2c6595f1
  422630:	mov    ds:0x63c6f0e7,al
  422635:	jl     0x42263d
  422637:	pop    ecx
  422638:	or     ebx,DWORD PTR [esi+ebp*2]
  42263b:	pop    edx
  42263c:	jns    0x422642
  42263e:	and    BYTE PTR [eax-0xd],0xf8
  422642:	pop    edi
  422643:	shl    bl,0x83
  422646:	outs   dx,DWORD PTR ds:[esi]
  422647:	test   al,0x6a
  422649:	jmp    0x422662
  42264b:	dec    eax
  42264c:	inc    ebp
  42264d:	sbb    BYTE PTR [ebx+0x6f],bl
  422650:	dec    ebx
  422651:	cdq    
  422652:	inc    ebx
  422653:	push   0xffffffa7
  422655:	lea    ebx,[esi+edi*1-0x73]
  422659:	sub    al,0x3
  42265b:	loope  0x422637
  42265d:	dec    ebp
  42265e:	cs mov ebx,0xb1fb5201
  422664:	sbb    edx,DWORD PTR [ebx]
  422666:	lods   al,BYTE PTR ds:[esi]
  422667:	pop    ebp
  422668:	sub    eax,0xaa406639
  42266d:	sbb    eax,0xd82a4bdb
  422672:	jl     0x42261b
  422674:	push   ebp
  422675:	jae    0x422603
  422677:	lods   al,BYTE PTR ds:[esi]
  422678:	(bad)  
  422679:	aas    
  42267a:	cmp    DWORD PTR [eax],0x84186785
  422680:	cmp    dh,BYTE PTR [ecx]
  422682:	in     al,dx
  422683:	xor    DWORD PTR [edx-0x1046a767],edx
  422689:	sbb    eax,0x783af5bb
  42268e:	sub    ebp,ebx
  422690:	popf   
  422691:	enter  0x1c3a,0xfa
  422695:	sbb    edi,ecx
  422697:	sbb    ecx,ebp
  422699:	inc    edi
  42269a:	into   
  42269b:	mov    bl,0xb7
  42269d:	jg     0x4226d0
  42269f:	pop    ds
  4226a0:	pop    edx
  4226a1:	popf   
  4226a2:	xchg   ebp,eax
  4226a3:	pop    ebx
  4226a4:	ffreep st(4)
  4226a6:	pop    ebp
  4226a7:	sub    edx,DWORD PTR [edi+eiz*8+0x7c]
  4226ab:	or     esp,DWORD PTR [esi+0x55aacd21]
  4226b1:	cli    
  4226b2:	hlt    
  4226b3:	inc    esp
  4226b4:	pop    eax
  4226b5:	cdq    
  4226b6:	stos   DWORD PTR es:[edi],eax
  4226b7:	pop    ebp
  4226b8:	mov    ds:0xf9fe560b,al
  4226bd:	sub    ebx,DWORD PTR [ecx+edi*1+0x1b]
  4226c1:	sub    ah,bh
  4226c3:	inc    ecx
  4226c4:	mov    ebx,0xc8330a68
  4226c9:	imul   esp,DWORD PTR [edx+0x46],0xee4b8fa2
  4226d0:	aas    
  4226d1:	pop    ebp
  4226d2:	ror    BYTE PTR [edx-0x7d],0xd5
  4226d6:	mov    ah,0x86
  4226d8:	popf   
  4226d9:	ret    
  4226da:	xor    ch,BYTE PTR [ecx]
  4226dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226dd:	lock bswap eax
  4226e0:	cdq    
  4226e1:	repnz das 
  4226e3:	iret   
  4226e4:	ds int 0x8d
  4226e7:	cdq    
  4226e8:	and    al,0x11
  4226ea:	add    eax,0x13730240
  4226ef:	sahf   
  4226f0:	std    
  4226f1:	in     eax,0x0
  4226f3:	cmp    BYTE PTR [ebx],bh
  4226f5:	mov    ds,WORD PTR [edx+0x66181d1e]
  4226fb:	lods   eax,DWORD PTR ds:[esi]
  4226fc:	mov    al,ds:0xd2462e2
  422701:	cmp    al,0x1b
  422703:	in     al,0xa0
  422705:	cmp    BYTE PTR [edx+0x1c],ch
  422708:	gs jno 0x422743
  42270b:	add    al,0xa8
  42270d:	dec    ebp
  42270e:	dec    edi
  42270f:	popf   
  422710:	xchg   ecx,eax
  422711:	fmul   st(2),st
  422713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422714:	xchg   BYTE PTR [ecx],al
  422716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422717:	cs ds aad 0x3e
  42271b:	pop    ebp
  42271c:	mov    ds:0xa1c0ae78,eax
  422721:	js     0x4226a5
  422723:	sub    dh,BYTE PTR [ebp-0x4d709e20]
  422729:	fisub  WORD PTR [ebx+0x76522541]
  42272f:	push   ss
  422730:	cs mov cl,0xa9
  422733:	cmc    
  422734:	cwde   
  422735:	ds pop es
  422737:	pop    esp
  422738:	jge    0x42277d
  42273a:	or     edi,DWORD PTR [esi-0x57ca3301]
  422740:	mov    ebx,0x7965973a
  422745:	mov    dl,0x9a
  422747:	dec    eax
  422748:	pop    eax
  422749:	aaa    
  42274a:	jl     0x422703
  42274c:	mov    edi,0x9de7d48
  422751:	mov    ch,0x14
  422753:	icebp  
  422754:	mov    ebp,0x686219e6
  422759:	rcl    ebp,0x43
  42275c:	push   esi
  42275d:	sub    esi,0xfffffffa
  422760:	push   ds
  422761:	dec    eax
  422762:	daa    
  422763:	in     al,0x71
  422765:	push   ecx
  422766:	push   0x75
  422768:	jge    0x422709
  42276a:	sub    BYTE PTR [edx],0xa9
  42276d:	cdq    
  42276e:	lahf   
  42276f:	sti    
  422770:	jge    0x422766
  422772:	inc    ecx
  422773:	mov    cl,0x35
  422775:	ret    
  422776:	fbstp  TBYTE PTR [ebx]
  422778:	push   ebp
  422779:	push   ds
  42277a:	sbb    ch,BYTE PTR [ebp+0x38be6169]
  422780:	and    al,0x83
  422782:	ret    
  422783:	xchg   edx,eax
  422784:	pop    ecx
  422785:	dec    esi
  422786:	adc    edx,esi
  422788:	cmp    eax,0x53be7d84
  42278d:	loop   0x42280e
  42278f:	jns    0x42274a
  422791:	inc    ebx
  422792:	call   0xeea6c3f5
  422797:	inc    esp
  422798:	push   ebp
  422799:	ds push ss
  42279b:	outs   dx,DWORD PTR ds:[esi]
  42279c:	ins    BYTE PTR es:[edi],dx
  42279d:	cmp    BYTE PTR [edx-0x7ea52b44],0xdc
  4227a4:	sbb    eax,0xea58e92b
  4227a9:	push   edi
  4227aa:	cwde   
  4227ab:	jae    0x42279e
  4227ad:	mov    BYTE PTR [esp+eiz*8-0x54],cl
  4227b1:	xchg   edi,eax
  4227b2:	jl     0x4227b4
  4227b4:	popa   
  4227b5:	mov    bl,BYTE PTR [ebx+ebp*4+0x76]
  4227b9:	std    
  4227ba:	mov    edx,0x5b5186c3
  4227bf:	mov    edi,eax
  4227c1:	add    al,0xa5
  4227c3:	(bad)  
  4227c4:	sti    
  4227c5:	adc    eax,0xc1261198
  4227ca:	loop   0x422769
  4227cc:	pop    edi
  4227cd:	mov    ch,ch
  4227cf:	push   esp
  4227d0:	jns    0x422792
  4227d2:	retf   0x5bed
  4227d5:	xor    al,0x8a
  4227d7:	call   0x337b9ce8
  4227dc:	dec    esp
  4227dd:	jae    0x4227f4
  4227df:	cdq    
  4227e0:	xchg   ebx,eax
  4227e1:	adc    ah,BYTE PTR [esi+0x5c]
  4227e4:	jne    0x422794
  4227e6:	int3   
  4227e7:	xor    eax,0x4f8b7d44
  4227ec:	clc    
  4227ed:	push   ecx
  4227ee:	test   eax,0x5a98bf21
  4227f3:	fistp  WORD PTR [ecx-0x4ff0f3a0]
  4227f9:	ins    DWORD PTR es:[edi],dx
  4227fa:	push   ss
  4227fb:	jle    0x4227b5
  4227fd:	sub    dh,BYTE PTR [ecx]
  4227ff:	sbb    eax,0xf861cff5
  422804:	dec    ebx
  422805:	leave  
  422806:	xchg   ah,ah
  422808:	inc    ebx
  422809:	test   eax,0x33d7715e
  42280e:	jecxz  0x422801
  422810:	rol    bl,cl
  422812:	inc    ebp
  422813:	push   esi
  422814:	or     eax,0x20bcde91
  422819:	and    eax,0xfdfac8e0
  42281e:	retf   0xde74
  422821:	in     eax,0x14
  422823:	or     cl,BYTE PTR [edx]
  422825:	sub    ebx,DWORD PTR [edx]
  422827:	and    bl,al
  422829:	hlt    
  42282a:	xlat   BYTE PTR ds:[ebx]
  42282b:	int    0xb7
  42282d:	xchg   edx,eax
  42282e:	and    eax,DWORD PTR [ebx+0x60832d6e]
  422834:	dec    ebx
  422835:	push   0x9eb5e872
  42283a:	sbb    cl,BYTE PTR ds:0xc18f9271
  422840:	add    ah,al
  422842:	cwde   
  422843:	xchg   ecx,eax
  422844:	retf   0x7d16
  422847:	lods   eax,DWORD PTR ds:[esi]
  422848:	(bad)  
  42284a:	rcr    DWORD PTR ds:0x6ba75c21,0x22
  422851:	jl     0x422817
  422853:	fisub  DWORD PTR [ecx]
  422855:	cmp    ecx,esp
  422857:	sub    ebx,DWORD PTR [ebx-0x9]
  42285a:	or     eax,0xe1b584cd
  42285f:	xor    al,0xe2
  422861:	lds    ecx,FWORD PTR [esi]
  422863:	push   esi
  422864:	mov    eax,0xe5320d8e
  422869:	or     ebx,ecx
  42286b:	lea    edi,[ebx]
  42286d:	xchg   ah,dh
  42286f:	aam    0x5b
  422871:	cmp    BYTE PTR [esi-0x5b2b99e5],dl
  422877:	sti    
  422878:	ret    0x3213
  42287b:	mov    ds:0xb538e936,al
  422880:	sbb    al,0xce
  422882:	sbb    eax,0xb2dfc04a
  422887:	mov    esi,0xd703a923
  42288c:	dec    ecx
  42288d:	test   DWORD PTR [edx+0x12],ebx
  422890:	mov    ah,0xcb
  422892:	mov    dl,0x6c
  422894:	jp     0x42283c
  422896:	jge    0x4228f9
  422898:	mov    ch,0x36
  42289a:	pop    ds
  42289b:	fdivr  QWORD PTR [ebx]
  42289d:	mov    ch,0x2c
  42289f:	int    0xac
  4228a1:	cmp    ch,BYTE PTR [eax-0x4f]
  4228a4:	mov    esi,0x52a33d67
  4228a9:	out    dx,al
  4228aa:	xlat   BYTE PTR ds:[ebx]
  4228ab:	xor    esp,eax
  4228ad:	inc    ebx
  4228ae:	xchg   ebx,eax
  4228af:	pusha  
  4228b0:	cmp    eax,0xfc2e0baf
  4228b5:	dec    eax
  4228b6:	push   0xffffff9a
  4228b8:	stos   BYTE PTR es:[edi],al
  4228b9:	test   WORD PTR gs:[esi+ebp*2+0x49135a5c],di
  4228c2:	ret    0xbb3d
  4228c5:	stc    
  4228c6:	out    0xa1,al
  4228c8:	jmp    0x998c:0x838b9e48
  4228cf:	push   ecx
  4228d0:	js     0x422895
  4228d2:	jns    0x42293c
  4228d4:	and    al,0xfb
  4228d6:	or     edx,DWORD PTR [esi]
  4228d8:	inc    edx
  4228d9:	dec    DWORD PTR [edx-0x6be6ed76]
  4228df:	out    dx,al
  4228e0:	adc    al,0x5a
  4228e2:	das    
  4228e3:	retf   
  4228e4:	imul   DWORD PTR [ecx]
  4228e6:	icebp  
  4228e7:	sbb    bl,BYTE PTR [edx+0xbba4fca]
  4228ed:	push   edi
  4228ee:	(bad)  
  4228ef:	je     0x4228c9
  4228f1:	ins    BYTE PTR es:[edi],dx
  4228f2:	and    al,0xfc
  4228f4:	cmp    DWORD PTR [ebx+0x33e75bef],edi
  4228fa:	jb     0x4228d1
  4228fc:	ins    DWORD PTR es:[edi],dx
  4228fd:	or     ah,dh
  4228ff:	and    al,0x67
  422901:	outs   dx,BYTE PTR ds:[esi]
  422902:	fistp  QWORD PTR [edx+0x3c]
  422905:	mov    eax,ds:0x3c113b92
  42290a:	adc    esp,DWORD PTR [edx+0x8d1e3e7]
  422910:	jg     0x42296e
  422912:	sub    al,BYTE PTR [ebx]
  422914:	loopne 0x422949
  422916:	ror    BYTE PTR [ebx+0x10c25de5],0x0
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
